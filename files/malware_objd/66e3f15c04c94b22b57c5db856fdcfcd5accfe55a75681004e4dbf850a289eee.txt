
66e3f15c04c94b22b57c5db856fdcfcd5accfe55a75681004e4dbf850a289eee.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	jp     0x411057
  41107c:	hlt    
  41107d:	ret    0x4889
  411080:	dec    esi
  411081:	pop    ss
  411082:	push   ds
  411083:	xor    edi,DWORD PTR ds:0xb9e261e5
  411089:	pop    ds
  41108a:	push   esi
  41108b:	dec    si
  41108d:	push   0x5a3add35
  411092:	leave  
  411093:	mov    ds:0x52c5f7d0,al
  411098:	aaa    
  411099:	sbb    DWORD PTR [eax+0x4ebe48c6],eax
  41109f:	(bad)  
  4110a0:	je     0x41103e
  4110a2:	jb     0x41102d
  4110a4:	fsub   st,st(5)
  4110a6:	retf   
  4110a7:	ss int3 
  4110a9:	sub    eax,0xd27bc1af
  4110ae:	fild   WORD PTR [ebp+ebx*2-0x18]
  4110b2:	iret   
  4110b3:	cmc    
  4110b4:	repnz pop eax
  4110b6:	and    DWORD PTR [edi-0x2cbdfdd5],0xffffffb7
  4110bd:	out    0xf2,eax
  4110bf:	addr16 in eax,0x72
  4110c2:	ret    
  4110c3:	mov    eax,0x5633d7fb
  4110c8:	out    dx,al
  4110c9:	leave  
  4110ca:	mov    BYTE PTR [edi-0x59],bl
  4110cd:	std    
  4110ce:	pop    ebx
  4110cf:	sar    bh,1
  4110d1:	test   al,0x63
  4110d3:	add    BYTE PTR ds:[ebp+0x3e],bl
  4110d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d8:	mov    ds:0x38c1ae23,al
  4110dd:	add    al,0x35
  4110df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110e0:	icebp  
  4110e1:	popf   
  4110e2:	sbb    eax,DWORD PTR [esi]
  4110e4:	adc    BYTE PTR [eax],ah
  4110e6:	shl    BYTE PTR [esi],1
  4110e8:	cmp    al,0xb6
  4110ea:	jl     0x41113d
  4110ec:	mov    ah,0x35
  4110ee:	xchg   BYTE PTR [eax+0x509ba75f],bh
  4110f4:	push   0xffffffc0
  4110f6:	dec    esp
  4110f7:	push   edi
  4110f8:	xchg   edi,eax
  4110f9:	inc    esi
  4110fa:	cmp    dl,al
  4110fc:	aad    0x27
  4110fe:	jae    0x411097
  411100:	jmp    0x4110b6
  411102:	aam    0x34
  411104:	(bad)  
  411105:	shr    BYTE PTR [edi],0xa
  411108:	stc    
  411109:	out    dx,eax
  41110a:	(bad)  
  41110b:	mov    bh,0xb3
  41110d:	adc    eax,0x76f08aac
  411112:	das    
  411113:	mov    ecx,0x2e31ced5
  411118:	mov    al,ds:0xe757d889
  41111d:	jno    0x41117c
  41111f:	mov    ecx,0x48b0992a
  411124:	adc    al,0xaf
  411126:	ret    
  411127:	sbb    ecx,eax
  411129:	pop    esi
  41112a:	cmp    eax,0x903d167d
  41112f:	xchg   edi,eax
  411130:	scas   al,BYTE PTR es:[edi]
  411131:	mov    eax,0x19078314
  411136:	xchg   DWORD PTR [edx+0x26],eax
  411139:	mov    cl,0x1f
  41113b:	xor    edx,DWORD PTR [ecx+edx*2-0x46a3d6b6]
  411142:	fst    DWORD PTR [eax]
  411144:	je     0x411184
  411146:	add    cl,cl
  411148:	sbb    DWORD PTR [ecx+0x73],ebp
  41114b:	push   edi
  41114c:	sub    BYTE PTR [ecx+0x1e],dl
  41114f:	xchg   esi,eax
  411150:	pop    edi
  411151:	imul   esp,DWORD PTR ss:[edi],0x33
  411155:	inc    ebp
  411156:	and    eax,0x76c531e
  41115b:	sub    BYTE PTR [edx*1-0x38b61bbe],ah
  411162:	push   edx
  411163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411164:	cmp    dl,0xc3
  411167:	and    ebp,DWORD PTR [ebx+eiz*8-0x63]
  41116b:	push   edx
  41116c:	push   esp
  41116d:	or     bh,BYTE PTR [eax+0x22]
  411170:	mov    ecx,0xb64246dd
  411175:	clc    
  411176:	lea    eax,[edx-0x1e]
  411179:	cmc    
  41117a:	cli    
  41117b:	icebp  
  41117c:	mov    ds:0xc5a75572,eax
  411181:	adc    BYTE PTR [ebx+0x12eab7d2],0x8c
  411188:	mov    bh,0xfb
  41118a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41118b:	test   al,0x6b
  41118d:	repnz inc eax
  41118f:	sar    DWORD PTR [edx],cl
  411191:	outs   dx,DWORD PTR ds:[esi]
  411192:	jge    0x4111fb
  411194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411195:	ins    BYTE PTR es:[edi],dx
  411196:	lock (bad) 
  411198:	fcmove st,st(6)
  41119a:	and    DWORD PTR [ebx],edi
  41119c:	mov    bh,0xf1
  41119e:	push   edx
  41119f:	sbb    eax,0x32a5061b
  4111a4:	into   
  4111a5:	out    0x21,al
  4111a7:	in     al,0xb1
  4111a9:	mov    cl,0xa8
  4111ab:	imul   edi,DWORD PTR [eax-0x4e],0xe267728a
  4111b2:	inc    ebp
  4111b3:	dec    esi
  4111b4:	stc    
  4111b5:	adc    DWORD PTR [ebx+0x24b73e13],esp
  4111bb:	and    eax,0x3b70b19
  4111c0:	pop    ebp
  4111c1:	out    0x61,eax
  4111c3:	and    bh,bl
  4111c5:	jmp    0xa9ec:0x18f43118
  4111cc:	scas   eax,DWORD PTR es:[edi]
  4111cd:	inc    ecx
  4111ce:	fsub   DWORD PTR [eax+0x76e72e94]
  4111d4:	shl    DWORD PTR [eax-0x27c4d069],0x90
  4111db:	cwde   
  4111dc:	loop   0x411210
  4111de:	cmp    eax,0xc2fe964b
  4111e3:	int3   
  4111e4:	std    
  4111e5:	ret    0x570b
  4111e8:	rcl    DWORD PTR [edx+0x5629515a],1
  4111ee:	sbb    ecx,DWORD PTR [esi-0x4966954e]
  4111f4:	int    0x48
  4111f6:	shr    BYTE PTR [edx],0x26
  4111f9:	and    DWORD PTR [eax+0x529a235d],edi
  4111ff:	iret   
  411200:	lea    ecx,[ebx-0x74]
  411203:	sti    
  411204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411205:	jne    0x411246
  411207:	div    BYTE PTR [edx]
  411209:	cmc    
  41120a:	pop    edx
  41120b:	mov    edx,0xaa7855b6
  411210:	jb     0x5b927dd0
  411216:	xor    BYTE PTR [ecx+0x68f3e368],dl
  41121c:	loop   0x4111f8
  41121e:	ror    BYTE PTR [ebx],0x62
  411221:	xchg   bh,cl
  411223:	pop    ebp
  411224:	clc    
  411225:	add    al,0x9c
  411227:	xor    al,0x6f
  411229:	test   DWORD PTR [edx+0x64],esi
  41122c:	push   cs
  41122d:	mov    ch,0xb3
  41122f:	adc    dl,ah
  411231:	cld    
  411232:	pop    edx
  411233:	mov    eax,0xf1582460
  411238:	dec    edi
  411239:	pop    esp
  41123a:	mov    al,0x70
  41123c:	mov    dl,0xe8
  41123e:	fcmovnb st,st(7)
  411240:	ins    BYTE PTR es:[edi],dx
  411241:	(bad)  
  411242:	xlat   BYTE PTR ds:[ebx]
  411243:	fsub   DWORD PTR [edi+ebx*1]
  411246:	and    BYTE PTR [eax-0x68],ah
  411249:	fidiv  WORD PTR [ecx]
  41124b:	ret    0x486f
  41124e:	sub    DWORD PTR [edi-0x7774be9e],eax
  411254:	adc    cl,BYTE PTR [esi+0x33312889]
  41125a:	in     eax,0x1a
  41125c:	gs pop ecx
  41125e:	xor    eax,0x62f6d95f
  411263:	mov    ds:0x69edaa6,eax
  411268:	or     eax,0x14ec4935
  41126d:	loopne 0x4112a5
  41126f:	call   0xe84c:0xecbe34f8
  411276:	retf   0x5e1a
  411279:	mov    bl,0x21
  41127b:	cmp    bh,ch
  41127d:	scas   eax,DWORD PTR es:[edi]
  41127e:	or     al,0x48
  411280:	in     eax,0x7
  411282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411283:	not    eax
  411285:	callw  0x89ae
  411289:	pop    ds
  41128a:	mov    dl,0x6d
  41128c:	jnp    0x41127c
  41128e:	nop
  41128f:	push   0xc275e319
  411294:	je     0x411257
  411296:	repnz fnstenv ss:[edi-0x5e]
  41129b:	es retf 0xe038
  41129f:	lea    ebp,[edi-0x71468075]
  4112a5:	mov    cl,0xd6
  4112a7:	lds    ecx,FWORD PTR [ebp-0x13688e3c]
  4112ad:	(bad)  es:[edi-0x6a00e9df]
  4112b4:	jmp    0x566:0x639fe95b
  4112bb:	push   ss
  4112bc:	iret   
  4112bd:	(bad)
  4112c2:	pop    esp
  4112c3:	mov    ds:0x5924889,eax
  4112c8:	xor    DWORD PTR [eax-0x33],edx
  4112cb:	jae    0x4112dc
  4112cd:	imul   ebx,DWORD PTR [esi],0xfaa813d1
  4112d3:	mov    DWORD PTR [esi+ebx*1-0x53],0xc8aa9e1
  4112db:	lahf   
  4112dc:	nop
  4112dd:	imul   edx,DWORD PTR [esp+eax*4+0x64],0x27ef6bcd
  4112e5:	loop   0x41127a
  4112e7:	rcl    DWORD PTR [edi+0x7e],1
  4112ea:	mov    cl,0xcc
  4112ec:	push   esi
  4112ed:	fild   DWORD PTR [ecx]
  4112ef:	pop    esp
  4112f0:	imul   ebx,DWORD PTR [ebp-0x4303a657],0xffffffde
  4112f7:	imul   ebp,DWORD PTR [esi],0xffffffea
  4112fa:	cld    
  4112fb:	sub    dh,al
  4112fd:	push   ebx
  4112fe:	shl    DWORD PTR [ecx],1
  411300:	fdivr  QWORD PTR [esi]
  411302:	add    DWORD PTR [edi+eax*1],edi
  411305:	inc    edi
  411306:	mov    edi,0xdfa6aa86
  41130b:	sar    DWORD PTR [esp+eax*1],1
  41130e:	mov    ah,BYTE PTR [ecx-0x3a]
  411311:	mov    bl,0x9b
  411313:	popa   
  411314:	stos   DWORD PTR es:[edi],eax
  411315:	push   ebx
  411316:	xor    al,0xca
  411318:	dec    ebx
  411319:	push   ecx
  41131a:	stos   DWORD PTR es:[edi],eax
  41131b:	jb     0x4112ae
  41131d:	cmp    DWORD PTR [ebp+edi*8+0x60],edx
  411321:	les    ebx,FWORD PTR [edi]
  411323:	dec    esi
  411324:	(bad)  
  411325:	fcom   DWORD PTR [ebx]
  411327:	stos   BYTE PTR es:[edi],al
  411328:	mov    dl,0xab
  41132a:	dec    esp
  41132b:	xor    eax,DWORD PTR [edx-0x10]
  41132e:	sub    al,0xed
  411330:	adc    edi,eax
  411332:	add    esp,DWORD PTR [edi+ebp*4]
  411335:	call   DWORD PTR [ecx-0x75a1a0ea]
  41133b:	push   ebp
  41133c:	(bad)  
  41133d:	aaa    
  41133e:	ror    BYTE PTR ss:[edi],cl
  411341:	mov    ds:0xc0ba36dd,eax
  411346:	icebp  
  411347:	out    dx,eax
  411348:	int3   
  411349:	xchg   ebp,eax
  41134a:	in     al,0xf4
  41134c:	mov    eax,edx
  41134e:	ja     0x411386
  411350:	mov    bh,BYTE PTR [esi]
  411352:	mov    esp,0x5e4484e1
  411357:	repz fwait
  411359:	pop    ebp
  41135a:	and    al,0x6f
  41135c:	adc    al,0xb0
  41135e:	jo     0x4113c5
  411360:	ds (bad) 
  411362:	sub    BYTE PTR [ebx+0x32002add],bh
  411368:	jmp    0x9f93:0xbe0e00fd
  41136f:	imul   esi,DWORD PTR [edx+0x47],0xffffffc0
  411373:	push   ds
  411374:	inc    ebp
  411375:	adc    DWORD PTR [ebx+ebx*8-0x30836305],ebp
  41137c:	in     eax,0xcd
  41137e:	lods   al,BYTE PTR ds:[esi]
  41137f:	xlat   BYTE PTR ds:[ebx]
  411380:	xchg   esp,eax
  411381:	xchg   BYTE PTR ss:[ebp+ecx*1+0x70],cl
  411386:	sbb    esi,DWORD PTR [esi+eax*8+0x2fd69c1e]
  41138d:	nop    DWORD PTR [esp+ebp*4-0xd7f0afa]
  411395:	sbb    al,0x91
  411397:	fs pop ss
  411399:	xor    cl,bh
  41139b:	sub    DWORD PTR fs:[eax],ebp
  41139e:	xchg   edi,eax
  41139f:	or     bl,BYTE PTR [edi-0x7d]
  4113a2:	xor    eax,0x55406032
  4113a7:	enter  0x591b,0x1
  4113ab:	gs push eax
  4113ad:	stos   DWORD PTR es:[edi],eax
  4113ae:	fidivr WORD PTR [esi+0x7d]
  4113b1:	bound  esi,QWORD PTR [esi-0x47458574]
  4113b7:	aaa    
  4113b8:	sti    
  4113b9:	aad    0xa3
  4113bb:	push   ds
  4113bc:	das    
  4113bd:	inc    ebp
  4113be:	xchg   ebx,eax
  4113bf:	push   ecx
  4113c0:	adc    edi,DWORD PTR [eax-0x1c]
  4113c3:	mov    edx,0x372f1621
  4113c8:	jbe    0x411446
  4113ca:	mov    ds:0xc8825f6d,eax
  4113cf:	scas   al,BYTE PTR es:[edi]
  4113d0:	jne    0x41137f
  4113d2:	sti    
  4113d3:	stc    
  4113d4:	xor    BYTE PTR [esi+0x2922fea7],0x9b
  4113db:	fsub   st,st(4)
  4113dd:	push   edi
  4113de:	sub    eax,DWORD PTR [ebp-0x51]
  4113e1:	or     al,0x2b
  4113e3:	xchg   edi,eax
  4113e4:	test   eax,0x8fe168af
  4113e9:	cld    
  4113ea:	push   edx
  4113eb:	stos   BYTE PTR es:[edi],al
  4113ec:	clc    
  4113ed:	les    esi,FWORD PTR [esi]
  4113ef:	adc    DWORD PTR [edx+0xb],ebp
  4113f2:	in     eax,dx
  4113f3:	call   FWORD PTR [ebx+edx*4]
  4113f6:	pop    eax
  4113f7:	mov    ds:0x138f1c60,eax
  4113fc:	fidivr DWORD PTR [ebx+0x4a]
  4113ff:	bound  esi,QWORD PTR [ecx+eiz*1]
  411402:	idiv   DWORD PTR [esi+esi*2-0x3]
  411406:	cs inc eax
  411408:	(bad)  
  411409:	mov    ebx,edi
  41140b:	mov    al,0x71
  41140d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41140e:	aas    
  41140f:	lahf   
  411410:	adc    BYTE PTR es:[ebp-0x3e],bl
  411414:	call   0x551ac67d
  411419:	dec    ebx
  41141a:	fs push es
  41141c:	or     esp,edi
  41141e:	xchg   edi,eax
  41141f:	push   esi
  411420:	adc    al,0x11
  411422:	or     DWORD PTR [ebp+0x64],ebx
  411425:	movups XMMWORD PTR [ecx+0x62],xmm0
  411429:	and    DWORD PTR [ebx],edx
  41142b:	data16 jno 0x41147a
  41142e:	lahf   
  41142f:	mov    edx,0xb18935b9
  411434:	fstp   QWORD PTR [ecx-0x2a]
  411437:	fsubr  DWORD PTR [edx]
  411439:	pop    eax
  41143a:	js     0x4114ae
  41143c:	(bad)  
  41143d:	xor    eax,0x783a64f7
  411442:	xor    al,0x3e
  411444:	mov    ch,0x8a
  411446:	leave  
  411447:	leave  
  411448:	mov    ds:0x281f0bed,eax
  41144d:	not    BYTE PTR [ebx]
  41144f:	mov    bh,ah
  411451:	inc    esi
  411452:	nop
  411453:	jnp    0x4113f3
  411455:	jmp    0xed8a:0x50ff851
  41145c:	xchg   edx,eax
  41145d:	and    al,0x64
  41145f:	stc    
  411460:	cmp    BYTE PTR [ebp-0x36],0x5f
  411464:	jg     0x4113f8
  411466:	addr16 push esp
  411468:	sbb    edx,DWORD PTR [ecx+0x1b]
  41146b:	push   0xe169556b
  411470:	jo     0x411417
  411472:	out    dx,eax
  411473:	add    eax,0x88f03bd
  411478:	loopne 0x4114aa
  41147a:	mov    WORD PTR ds:0x41c4b00d,ss
  411480:	inc    ebx
  411481:	shl    DWORD PTR gs:[ebp-0x6d],0x53
  411486:	dec    eax
  411487:	and    eax,0xc838e8dd
  41148c:	xor    DWORD PTR [eax],edi
  41148e:	mov    dl,0x9f
  411490:	lods   eax,DWORD PTR ds:[esi]
  411491:	les    ebp,FWORD PTR [ebp+0x5c]
  411494:	retf   0xe09c
  411497:	cld    
  411498:	cmp    BYTE PTR [eax],ah
  41149a:	scas   eax,DWORD PTR es:[edi]
  41149b:	mov    BYTE PTR [ebp-0x5e25793f],bh
  4114a1:	int3   
  4114a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a3:	push   eax
  4114a4:	out    0xc9,al
  4114a6:	or     al,0x24
  4114a8:	popf   
  4114a9:	and    DWORD PTR [edx-0x6e01e885],edi
  4114af:	call   0xdf46:0x416774ae
  4114b6:	cmp    al,0x12
  4114b8:	or     eax,0xb8fd5ce8
  4114bd:	jp     0x4114c1
  4114bf:	fwait
  4114c0:	mov    bh,BYTE PTR [eax-0x5684b9b2]
  4114c6:	or     BYTE PTR [ecx+eiz*1+0x90cd33b],dh
  4114cd:	lods   eax,DWORD PTR ds:[esi]
  4114ce:	adc    eax,0xf95cc94f
  4114d3:	bound  ebp,QWORD PTR [edi+0x4f]
  4114d6:	xor    al,0xf0
  4114d8:	add    edi,esi
  4114da:	mov    ebx,0xd3cd1058
  4114df:	pop    eax
  4114e0:	aas    
  4114e1:	jge    0x411531
  4114e3:	mov    al,0x75
  4114e5:	mov    ebx,0x4b6a31fe
  4114ea:	mov    bl,0xad
  4114ec:	mov    ah,0x58
  4114ee:	push   ebp
  4114ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f0:	add    eax,0x21baef0e
  4114f5:	cmp    BYTE PTR [bp+di],dl
  4114f8:	pop    ecx
  4114f9:	inc    DWORD PTR [edi]
  4114fb:	or     DWORD PTR [ebx-0x4f731cf5],0xffffffb7
  411502:	xchg   ecx,eax
  411503:	xchg   ecx,eax
  411504:	mov    WORD PTR [eax-0x49359559],ds
  41150a:	lock push cs
  41150c:	(bad)  
  41150d:	(bad)  
  41150e:	cmp    esp,0x92331f09
  411514:	sbb    esp,esi
  411516:	xchg   edx,eax
  411517:	xchg   ebp,eax
  411518:	or     bl,bh
  41151a:	xchg   bl,ah
  41151c:	shr    BYTE PTR [eax+0x7688f1f5],0xd8
  411523:	das    
  411524:	test   al,0xdb
  411526:	push   edx
  411527:	lods   eax,DWORD PTR ds:[esi]
  411528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411529:	jp     0x4114d6
  41152b:	mov    eax,0x74fe5dee
  411530:	je     0x411517
  411532:	adc    dh,BYTE PTR [edi+eax*1]
  411535:	sbb    DWORD PTR [ecx+0x6b],ecx
  411538:	xchg   ebx,eax
  411539:	jbe    0x4114c8
  41153b:	sub    edx,DWORD PTR ds:0x5143a208
  411541:	add    DWORD PTR [edi+0x56fdd09c],ecx
  411547:	pusha  
  411548:	or     esp,DWORD PTR [eax]
  41154a:	js     0x411574
  41154c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154d:	dec    edi
  41154e:	in     eax,0xd6
  411550:	in     eax,dx
  411551:	das    
  411552:	or     cl,ch
  411554:	ja     0x41151b
  411556:	lea    ebx,[ebx+0x4c]
  411559:	adc    al,0x9
  41155b:	ss jmp 0xa29e:0xcef99b1d
  411563:	add    al,0x19
  411565:	div    BYTE PTR [edx-0x73]
  411568:	retf   0xc315
  41156b:	cmp    al,0xe1
  41156d:	hlt    
  41156e:	ss or  eax,0x23bb9287
  411574:	dec    eax
  411575:	fild   WORD PTR [eax]
  411577:	aaa    
  411578:	xor    ebp,eax
  41157a:	push   0xffffffdd
  41157c:	test   DWORD PTR [ebx-0x18],edx
  41157f:	or     BYTE PTR [ecx+0x11],ch
  411582:	ins    DWORD PTR es:[edi],dx
  411583:	(bad)  
  411584:	mov    bh,0x38
  411586:	test   al,0x49
  411588:	push   0xffffffec
  41158a:	cwde   
  41158b:	sbb    ch,ah
  41158d:	xchg   ebx,eax
  41158e:	and    esp,DWORD PTR [ecx-0x4c135b4]
  411594:	(bad)  
  411595:	and    eax,0xa6f6ebf3
  41159a:	ror    BYTE PTR [edx+eax*1],1
  41159d:	or     ebp,ecx
  41159f:	outs   dx,BYTE PTR ds:[esi]
  4115a0:	pop    ebp
  4115a1:	xor    eax,0x261dc3e1
  4115a6:	in     eax,0x38
  4115a8:	xchg   esp,eax
  4115a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115aa:	push   esp
  4115ab:	inc    eax
  4115ac:	mov    bh,BYTE PTR [ecx+0x59]
  4115af:	call   0x2f13884f
  4115b4:	cmc    
  4115b5:	ret    0x1cc4
  4115b8:	dec    ecx
  4115b9:	sub    ebx,ecx
  4115bb:	(bad)  
  4115bc:	push   esp
  4115bd:	neg    bh
  4115bf:	and    DWORD PTR [esi-0x147ae63d],eax
  4115c5:	and    edx,0xaec1513b
  4115cb:	aas    
  4115cc:	xor    al,0xd
  4115ce:	mov    ebp,0xf328cfee
  4115d3:	lahf   
  4115d4:	frstor [esp+eax*1]
  4115d7:	xchg   ebx,eax
  4115d8:	das    
  4115d9:	xchg   edx,eax
  4115da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115db:	mov    ebp,0x2790bc2f
  4115e0:	cli    
  4115e1:	add    dl,ch
  4115e3:	gs pop edi
  4115e5:	sbb    DWORD PTR [esi],0xaa286080
  4115eb:	push   edx
  4115ec:	lock es daa 
  4115ef:	sbb    BYTE PTR [eax+0x6e],ch
  4115f2:	fwait
  4115f3:	in     al,dx
  4115f4:	xchg   edx,eax
  4115f5:	or     edx,DWORD PTR [ebx-0x43bc7fdb]
  4115fb:	jp     0x411609
  4115fd:	sbb    cl,BYTE PTR [esi+edi*1]
  411600:	iret   
  411601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411602:	aaa    
  411603:	neg    DWORD PTR [edi+edx*4]
  411606:	cmp    al,0x4c
  411608:	cmc    
  411609:	test   eax,0xde7deee9
  41160e:	cmp    esi,edi
  411610:	enter  0x4102,0x29
  411614:	xchg   esp,eax
  411615:	jnp    0x411652
  411617:	aam    0x8c
  411619:	aas    
  41161a:	gs repz mov eax,edi
  41161e:	(bad)
  411622:	dec    esp
  411623:	loopne 0x411650
  411625:	aaa    
  411626:	mov    edx,0x1bdf2826
  41162b:	xchg   ebp,esp
  41162d:	mov    ebx,DWORD PTR [edi-0x5f]
  411630:	fst    DWORD PTR [edx]
  411632:	sbb    al,0x27
  411634:	inc    esi
  411635:	xor    edx,0xffffffb5
  411638:	sub    BYTE PTR ds:[esi+ecx*8-0x63309ce3],dl
  411640:	shl    BYTE PTR fs:[edi+0x39],cl
  411644:	or     DWORD PTR [edx+0x37],edi
  411647:	mov    bh,0xa
  411649:	(bad)  
  41164a:	stc    
  41164b:	(bad)  
  41164c:	sub    esp,DWORD PTR [ebp+0x78702c20]
  411652:	shr    BYTE PTR [ecx-0x36e53202],1
  411658:	les    esi,FWORD PTR [edx]
  41165a:	push   es
  41165b:	pmaxsw mm6,QWORD PTR [edi]
  41165e:	pop    ebp
  41165f:	add    BYTE PTR [edi+0x2d],ch
  411662:	push   ebx
  411663:	jle    0x411699
  411665:	xchg   esi,eax
  411666:	xor    ecx,edi
  411668:	gs or  al,0x4
  41166b:	and    eax,0xe5ee451b
  411670:	mov    dh,cl
  411672:	cdq    
  411673:	test   al,0x1
  411675:	sub    dl,al
  411677:	pop    edi
  411678:	shr    BYTE PTR [eax+0x21],cl
  41167b:	inc    eax
  41167c:	mov    BYTE PTR [ebx+0x1c28fc83],cl
  411682:	lods   eax,DWORD PTR cs:[esi]
  411684:	dec    esp
  411685:	push   0x84096802
  41168a:	adc    esi,DWORD PTR [eax-0x2c]
  41168d:	mov    ch,0x83
  41168f:	sub    DWORD PTR [ecx-0x10],eax
  411692:	mov    WORD PTR [edx],fs
  411694:	xchg   BYTE PTR [edx+0x7df1fa1],ah
  41169a:	ret    
  41169b:	mov    BYTE PTR [eax-0x9],al
  41169e:	lds    ebp,FWORD PTR [edx+eax*8+0x56e5fe5a]
  4116a5:	outs   dx,BYTE PTR ds:[esi]
  4116a6:	out    0x9e,al
  4116a8:	dec    esp
  4116a9:	ret    
  4116aa:	xor    al,0x8a
  4116ac:	into   
  4116ad:	mov    ds:0x6355ef3c,al
  4116b2:	adc    eax,0x523e4c8c
  4116b7:	loope  0x411655
  4116b9:	dec    esi
  4116ba:	xchg   BYTE PTR [esi+0x9],bh
  4116bd:	mov    edi,DWORD PTR [edx-0x54]
  4116c0:	ja     0x411701
  4116c2:	jns    0x4116f9
  4116c4:	adc    esi,DWORD PTR [ebx]
  4116c6:	xchg   esi,eax
  4116c7:	nop
  4116c8:	fxch   st(3)
  4116ca:	aad    0xa5
  4116cc:	jmp    0x41165c
  4116ce:	cmp    BYTE PTR [esi-0x7db310c2],ah
  4116d4:	fld    TBYTE PTR [eax+ebx*1]
  4116d7:	es std 
  4116d9:	push   ebx
  4116da:	mov    esp,0xf59dd78d
  4116df:	daa    
  4116e0:	mov    esp,0x2a0653a4
  4116e5:	fnstsw WORD PTR [ecx+esi*4]
  4116e8:	mov    al,0x25
  4116ea:	call   FWORD PTR [ebx]
  4116ec:	stc    
  4116ed:	aad    0xfe
  4116ef:	cwde   
  4116f0:	sbb    edi,esp
  4116f2:	sub    bl,dh
  4116f4:	out    0x57,al
  4116f6:	jbe    0x411726
  4116f8:	jo     0x41173c
  4116fa:	(bad)  
  4116fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fc:	(bad)
  411700:	inc    ebp
  411701:	and    eax,0xac955e02
  411706:	xchg   esp,eax
  411708:	pop    ax
  41170a:	ja     0x411783
  41170c:	dec    ebp
  41170d:	xchg   edi,eax
  41170e:	stos   DWORD PTR es:[edi],eax
  41170f:	inc    edi
  411710:	fisub  DWORD PTR [esi-0x681f52b3]
  411716:	push   esi
  411717:	mov    WORD PTR [ebp-0x6136675d],?
  41171d:	daa    
  41171e:	cmp    esi,DWORD PTR [ebp+0x11]
  411721:	sub    bh,BYTE PTR [ecx-0x3e]
  411724:	fmulp  st(7),st
  411726:	dec    edx
  411727:	mov    ds:0x6d4694a9,al
  41172c:	push   esp
  41172d:	sub    ah,BYTE PTR [ebx-0x43]
  411730:	jecxz  0x41179e
  411732:	pop    es
  411733:	aam    0x1e
  411735:	pushf  
  411736:	arpl   WORD PTR [ecx],di
  411738:	std    
  411739:	cmp    eax,DWORD PTR [esp+ebp*8-0x20ccb3d]
  411740:	jmp    0x411769
  411742:	pop    esi
  411743:	push   esi
  411744:	(bad)
  411747:	test   al,0xfe
  411749:	jnp    0x4117c3
  41174b:	sbb    edx,DWORD PTR [edx+eax*4+0x51c5ec5b]
  411752:	jns    0x411718
  411754:	inc    eax
  411755:	cwde   
  411756:	pop    edi
  411757:	adc    eax,0xa42b71ea
  41175c:	adc    eax,0x7d96b6aa
  411761:	sbb    eax,0xdd6d0dac
  411766:	jbe    0x4117c1
  411768:	iret   
  411769:	and    ebp,eax
  41176b:	test   al,0xd3
  41176d:	std    
  41176e:	xchg   edx,eax
  41176f:	inc    ebx
  411770:	or     esi,DWORD PTR gs:[esp+eax*4]
  411774:	bnd ss ja 0x411769
  411778:	rcr    BYTE PTR [ebx+edi*4+0x7fdbc40d],cl
  41177f:	or     ecx,edi
  411781:	add    eax,0xd65568a9
  411786:	dec    esp
  411787:	mov    edi,0x82e511a8
  41178c:	test   BYTE PTR es:[ecx],bl
  41178f:	adc    esi,DWORD PTR [edx+0x1c]
  411792:	add    BYTE PTR [eax+ecx*4],ah
  411795:	push   0xc130a68e
  41179a:	mov    esi,0x834a7ca3
  41179f:	jmp    0xdef3:0x9bd3fb2e
  4117a6:	pop    ebx
  4117a7:	mov    edi,0xae0b46b5
  4117ac:	div    BYTE PTR [ecx-0x627367f8]
  4117b2:	and    bh,BYTE PTR [ecx]
  4117b4:	add    eax,0x58396bae
  4117b9:	mov    dh,0xfe
  4117bb:	aam    0xfb
  4117bd:	cli    
  4117be:	icebp  
  4117bf:	jmp    0xecf7:0x8c15ad3b
  4117c6:	fdiv   QWORD PTR [esi+0x417fc05e]
  4117cc:	call   0x27c8:0xa33829ad
  4117d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d4:	call   0xe21b:0x73fe14e2
  4117db:	inc    ebp
  4117dc:	mov    edx,0x3ee1d56c
  4117e1:	jbe    0x4117fd
  4117e3:	iret   
  4117e4:	mov    cl,0xcb
  4117e6:	push   0xffffffb0
  4117e8:	mov    ebp,0x2e5f509f
  4117ed:	mov    WORD PTR [eax+0x1b],?
  4117f0:	cdq    
  4117f1:	add    cl,ah
  4117f3:	cld    
  4117f4:	aam    0xbc
  4117f6:	jl     0x411822
  4117f8:	mov    es,WORD PTR [eax]
  4117fa:	jmp    0x2f64:0x6ccdc728
  411801:	into   
  411802:	cmp    ch,BYTE PTR [edx]
  411804:	sub    dl,dl
  411806:	push   ebp
  411807:	or     al,0x6d
  411809:	clc    
  41180a:	shr    BYTE PTR [esi-0x2a],cl
  41180d:	cli    
  41180e:	xchg   ecx,eax
  41180f:	nop
  411810:	ins    DWORD PTR es:[edi],dx
  411811:	mov    al,0x3d
  411813:	inc    esi
  411814:	aam    0x26
  411816:	inc    esp
  411817:	cwde   
  411818:	popa   
  411819:	nop
  41181a:	push   esp
  41181b:	dec    esi
  41181c:	xchg   DWORD PTR [eax+0x6ba9cb5b],ebx
  411822:	aad    0x74
  411824:	mov    dl,0x7
  411826:	out    0x5b,eax
  411828:	lock xchg esi,eax
  41182a:	lock xor BYTE PTR [ecx-0x3a288496],dl
  411831:	mov    ecx,0xaf0a291d
  411836:	ja     0x411895
  411838:	push   0xfd6b07ed
  41183d:	sar    DWORD PTR [esi+0x6c],cl
  411840:	stos   DWORD PTR es:[edi],eax
  411841:	jb     0x41187a
  411843:	(bad)  ds:0xc20635a7
  411849:	neg    DWORD PTR [ebp-0x7db2d986]
  41184f:	addr16 mov ds:0x5af3,al
  411853:	in     eax,0x93
  411855:	adc    ecx,ecx
  411857:	pop    ebp
  411858:	repz xor dh,BYTE PTR [esi-0x80]
  41185c:	retfw  
  41185e:	inc    ecx
  41185f:	mov    esp,0xb2a858dc
  411864:	imul   ebx,DWORD PTR [ebx+0x2d02677f],0xffffffb8
  41186b:	(bad)  
  41186d:	jb     0x41180c
  41186f:	aas    
  411870:	(bad)  
  411871:	sub    al,0xe2
  411873:	imul   esp,DWORD PTR [eax+0xa],0x5a
  411877:	in     eax,0xbd
  411879:	pushf  
  41187a:	mov    edi,0x1eef25a4
  41187f:	add    DWORD PTR [edx-0x7f],esi
  411882:	jo     0x41182a
  411884:	(bad)  
  411885:	aaa    
  411886:	sbb    al,0x1e
  411888:	mov    bh,0x23
  41188a:	lea    eax,[esi]
  41188c:	out    dx,eax
  41188d:	add    DWORD PTR [ecx+0x5f],0xffffffae
  411891:	xchg   esi,eax
  411892:	loope  0x411850
  411894:	cmp    esi,edx
  411896:	imul   si,WORD PTR [ebx-0x732acc77],0xa03e
  41189f:	pushf  
  4118a0:	or     BYTE PTR [esi+0x302452fe],ah
  4118a6:	fldcw  WORD PTR [ecx-0x64]
  4118a9:	lea    edi,[ebx+0x5f]
  4118ac:	push   ebx
  4118ad:	test   DWORD PTR [eax-0x42],0x9b5652ac
  4118b4:	dec    esi
  4118b5:	inc    esp
  4118b6:	pop    ss
  4118b7:	out    0x5b,al
  4118b9:	aam    0x2c
  4118bb:	inc    edi
  4118bc:	mov    ebp,0xe65af0d2
  4118c1:	jns    0x41185f
  4118c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118c4:	xchg   ebp,eax
  4118c5:	sbb    edi,ecx
  4118c7:	mov    bl,0xcb
  4118c9:	fs cld 
  4118cb:	xchg   BYTE PTR [ebp-0x59],al
  4118ce:	aam    0xee
  4118d0:	pop    ebp
  4118d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d2:	add    DWORD PTR [esi],eax
  4118d4:	xor    eax,0xfb7b27f5
  4118d9:	dec    esp
  4118da:	inc    BYTE PTR [esi*8-0x149f8d20]
  4118e1:	sbb    edi,DWORD PTR [ebp-0x4113878b]
  4118e7:	test   DWORD PTR [edx+edx*4-0x35a4007d],ecx
  4118ee:	addr16 out dx,eax
  4118f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f1:	out    0x1,eax
  4118f3:	xchg   BYTE PTR [eax],ch
  4118f5:	jo     0x411963
  4118f7:	pop    ss
  4118f8:	ins    DWORD PTR es:[edi],dx
  4118f9:	loopne 0x41187d
  4118fb:	and    BYTE PTR [eax],dl
  4118fd:	jb     0x4118c7
  4118ff:	mov    cl,BYTE PTR [eax-0x10]
  411902:	and    al,0xc6
  411904:	or     BYTE PTR [esi],ch
  411906:	scas   al,BYTE PTR es:[edi]
  411907:	push   edx
  411908:	aad    0x83
  41190a:	jo     0x41190e
  41190c:	mov    eax,0x7593abcb
  411911:	outs   dx,DWORD PTR ds:[esi]
  411912:	(bad)  
  411913:	jo     0x41196e
  411915:	call   0xf2301425
  41191a:	mov    ecx,0x2712120d
  41191f:	xor    ebp,DWORD PTR [ebx]
  411921:	cmc    
  411922:	test   BYTE PTR [ebx+0x1f36ee23],bl
  411928:	fucomp st(0)
  41192a:	sbb    eax,0xf8275c31
  41192f:	fwait
  411930:	dec    esi
  411931:	addr16 push es
  411933:	loop   0x411978
  411935:	push   esp
  411936:	push   edx
  411937:	or     eax,0xed68af2e
  41193c:	pop    edx
  41193d:	lods   al,BYTE PTR ds:[esi]
  41193e:	fs loopne 0x411923
  411941:	sbb    dl,BYTE PTR [edx+0x51d6bef2]
  411947:	fdivr  DWORD PTR [esi-0x5878b14a]
  41194d:	in     eax,0xf
  41194f:	xchg   ebp,eax
  411950:	mov    ebp,0x238fe66f
  411955:	aad    0x5
  411957:	adc    dl,0x72
  41195a:	(bad)  
  41195b:	mov    ds:0xfa308038,eax
  411960:	sbb    al,0xd
  411962:	ins    DWORD PTR es:[edi],dx
  411963:	jae    0x411965
  411965:	addr16 jle 0x411966
  411968:	lds    edx,FWORD PTR [ecx]
  41196a:	push   edi
  41196b:	in     eax,dx
  41196c:	mov    edi,0xaab0c3b7
  411971:	psrad  mm1,QWORD PTR es:[edi-0x47]
  411976:	and    ebp,DWORD PTR [ecx+0xa83a7f9]
  41197c:	in     al,dx
  41197d:	into   
  41197e:	cmp    DWORD PTR [eax-0x60],0x2e
  411982:	pop    eax
  411983:	sti    
  411984:	push   ecx
  411985:	adc    eax,0x7cc0df43
  41198a:	shl    BYTE PTR [ebp+0x7c],0x77
  41198e:	stc    
  41198f:	fs push ecx
  411991:	sub    edi,DWORD PTR [ecx+0x43]
  411994:	pop    ebp
  411995:	adc    DWORD PTR [ebx+ebp*4+0x14e822ab],ebx
  41199c:	in     eax,dx
  41199d:	pop    es
  41199e:	pop    esp
  41199f:	xor    eax,0x98a1e635
  4119a4:	adc    bh,BYTE PTR [ebx+0x474200f7]
  4119aa:	cmp    esi,DWORD PTR [eax]
  4119ac:	or     al,0xec
  4119ae:	loopne 0x411a0b
  4119b0:	popa   
  4119b1:	jecxz  0x4119ca
  4119b3:	popa   
  4119b4:	mov    esi,0x97e3df1e
  4119b9:	xlat   BYTE PTR ds:[ebx]
  4119ba:	retf   
  4119bb:	mov    DWORD PTR [ebp+0x28d9cd7c],edi
  4119c1:	retf   0xed63
  4119c4:	inc    eax
  4119c5:	pop    ss
  4119c6:	xor    edx,edx
  4119c8:	icebp  
  4119c9:	leave  
  4119ca:	jmp    0x411a21
  4119cc:	mov    ah,0xa2
  4119ce:	shl    DWORD PTR [ebx+ecx*4],cl
  4119d1:	gs hlt 
  4119d3:	rol    esi,cl
  4119d5:	dec    ebx
  4119d6:	jmp    0x47f9deec
  4119db:	icebp  
  4119dc:	jl     0x411a36
  4119de:	ins    BYTE PTR es:[edi],dx
  4119df:	xchg   DWORD PTR [edi-0x36],edi
  4119e2:	sub    esp,DWORD PTR [eax]
  4119e4:	pop    es
  4119e5:	sbb    cl,BYTE PTR [esi]
  4119e7:	fwait
  4119e8:	ds test al,0xb4
  4119eb:	xor    edi,DWORD PTR [si]
  4119ee:	lock mov ch,al
  4119f1:	scas   al,BYTE PTR es:[edi]
  4119f2:	jmp    0xe01d:0xa3ddb888
  4119f9:	cmc    
  4119fa:	fstp   TBYTE PTR [esi+0x64]
  4119fd:	pop    ds
  4119fe:	jge    0x411991
  411a00:	js     0x411a19
  411a02:	mov    ch,0xe6
  411a04:	int3   
  411a05:	aas    
  411a06:	imul   esi,DWORD PTR [ebp+0x23b33e32],0x8572ab9
  411a10:	adc    cl,cl
  411a12:	jae    0x411a73
  411a14:	test   BYTE PTR [eax-0x69170ada],dh
  411a1a:	scas   al,BYTE PTR es:[edi]
  411a1b:	ds loope 0x411a1a
  411a1e:	or     eax,0xad5a025c
  411a23:	sbb    ah,dh
  411a25:	push   cs
  411a26:	inc    ebx
  411a27:	call   0xd241e127
  411a2c:	fld    DWORD PTR [edx+0x5002e1c]
  411a32:	and    ebp,DWORD PTR [ebx+0x6556ad7]
  411a38:	jle    0x411a9b
  411a3a:	dec    eax
  411a3b:	fs xor ebp,ebp
  411a3e:	test   BYTE PTR [edi-0x10],0xb1
  411a42:	jae    0x4119d1
  411a44:	jge    0x411a32
  411a46:	mov    fs,WORD PTR [esi+0x109d05c5]
  411a4c:	ins    BYTE PTR es:[edi],dx
  411a4d:	pop    esi
  411a4e:	fcomp  DWORD PTR [ecx]
  411a50:	sbb    BYTE PTR [esi+0x3ee266b3],0xfc
  411a57:	aas    
  411a58:	fisubr WORD PTR [edx+0x6e]
  411a5b:	call   FWORD PTR [ebp+0x5efc3e3c]
  411a61:	sub    BYTE PTR [edi],dl
  411a63:	stc    
  411a64:	sub    al,0x92
  411a66:	mov    ecx,0x1f41ea69
  411a6b:	jne    0x411a07
  411a6d:	in     al,dx
  411a6e:	dec    esp
  411a6f:	clc    
  411a70:	loope  0x411ad4
  411a72:	popf   
  411a73:	mov    eax,0x3f668165
  411a78:	lods   eax,DWORD PTR ds:[esi]
  411a79:	xchg   ebp,eax
  411a7a:	pop    ss
  411a7b:	dec    eax
  411a7c:	push   ds
  411a7d:	test   esp,ecx
  411a7f:	xchg   esi,eax
  411a80:	dec    ecx
  411a81:	test   al,0x52
  411a83:	push   ecx
  411a84:	mov    edi,0x69d420d6
  411a89:	sbb    DWORD PTR [ebp+0x7508e61f],ebp
  411a8f:	fucomp st(5)
  411a91:	mov    cl,0xcb
  411a93:	(bad)  
  411a94:	push   ss
  411a95:	int    0xb3
  411a97:	push   0x43
  411a99:	xlat   BYTE PTR ds:[ebx]
  411a9a:	call   0xf559:0x69443147
  411aa1:	adc    ecx,DWORD PTR [edx]
  411aa3:	mov    bl,0xdf
  411aa5:	(bad)  
  411aa6:	dec    esi
  411aa7:	and    DWORD PTR [edx],edi
  411aa9:	sub    eax,edx
  411aab:	rcr    DWORD PTR [edx+0x7e],1
  411aae:	mov    ebp,0xef51b603
  411ab3:	mov    cl,0xda
  411ab5:	fstp   st(1)
  411ab7:	pop    ebp
  411ab8:	mov    dh,0x9c
  411aba:	call   0x91d0278c
  411abf:	loop   0x411a73
  411ac1:	mov    ds:0xdd832d63,eax
  411ac6:	mov    esi,0x49427b51
  411acb:	pop    ss
  411acc:	jbe    0x411af8
  411ace:	cwde   
  411acf:	pop    ecx
  411ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad1:	jcxz   0x411b2f
  411ad4:	jge    0x411b09
  411ad6:	fs adc al,0x6c
  411ad9:	push   ds
  411ada:	and    cl,dh
  411adc:	enter  0xb162,0xe8
  411ae0:	sbb    DWORD PTR [esi],0xd8cb9436
  411ae6:	repz dec edx
  411ae8:	retf   
  411ae9:	test   eax,0x24b75a74
  411aee:	ins    BYTE PTR es:[edi],dx
  411aef:	sbb    DWORD PTR [edx-0x50162d92],0xb
  411af6:	pop    eax
  411af7:	mov    dl,0xb6
  411af9:	(bad)  
  411afa:	mov    edx,0xaaf3b89d
  411aff:	fmulp  st(0),st
  411b01:	into   
  411b02:	stos   BYTE PTR es:[edi],al
  411b03:	aas    
  411b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b05:	mov    DWORD PTR [ecx],ecx
  411b07:	mov    ebp,0xb2aaa25
  411b0c:	dec    ecx
  411b0d:	test   BYTE PTR [esi-0x2],dh
  411b10:	inc    ebx
  411b11:	adc    BYTE PTR [edx],al
  411b13:	xchg   ebx,eax
  411b14:	(bad)  
  411b15:	das    
  411b16:	ret    0xe846
  411b19:	mov    edi,esp
  411b1b:	in     eax,0xa5
  411b1d:	jo     0x411b47
  411b1f:	adc    cl,BYTE PTR ds:0x6cb4b667
  411b25:	push   ss
  411b26:	xchg   esi,eax
  411b27:	mov    ds:0x982d05e3,eax
  411b2c:	jecxz  0x411b2c
  411b2e:	pop    eax
  411b2f:	push   0xb2374b06
  411b34:	mov    bh,0xa8
  411b36:	loope  0x411b5a
  411b38:	aad    0x35
  411b3a:	and    ch,BYTE PTR [esi-0x4e]
  411b3d:	mov    BYTE PTR ds:0x2f061a3d,dl
  411b43:	mov    dh,0x5c
  411b45:	loop   0x411b4d
  411b47:	imul   ebx,eax,0x76
  411b4a:	mov    al,ds:0x857dfb68
  411b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b50:	jle    0x411b24
  411b52:	clc    
  411b53:	mov    esp,0x27e7a562
  411b58:	cmp    edx,ebx
  411b5a:	push   ebp
  411b5b:	sar    DWORD PTR [edi+0x7dea6869],1
  411b61:	pushf  
  411b62:	dec    ebx
  411b63:	les    ebx,FWORD PTR [ecx-0x7d]
  411b66:	adc    al,0x89
  411b68:	xor    BYTE PTR [esi-0x47],ch
  411b6b:	mov    al,ds:0x90080f50
  411b70:	and    ah,BYTE PTR [esi-0x588c581]
  411b76:	sub    bl,ch
  411b78:	pop    ds
  411b79:	aam    0xdb
  411b7b:	push   ds
  411b7c:	test   eax,0xc48edbfd
  411b81:	fisttp DWORD PTR ds:0x73dce7d9
  411b87:	jg     0x411b2a
  411b89:	mov    db2,ecx
  411b8c:	rcr    DWORD PTR ds:0x6943e5fc,0x4d
  411b93:	sub    BYTE PTR [ebp-0x2e],0x4
  411b97:	mov    DWORD PTR [esi],esp
  411b99:	push   ebx
  411b9a:	xchg   ecx,eax
  411b9b:	mov    BYTE PTR [ecx],cl
  411b9d:	xlat   BYTE PTR ds:[ebx]
  411b9e:	push   eax
  411b9f:	mov    esi,0x914a0601
  411ba4:	jle    0x449e37ac
  411baa:	cld    
  411bab:	shr    DWORD PTR [esi+0x5da05678],1
  411bb1:	int3   
  411bb2:	and    bh,bl
  411bb4:	iret   
  411bb5:	mov    esi,0xb2d225e9
  411bba:	cmp    dl,bl
  411bbc:	inc    ecx
  411bbd:	bound  ecx,QWORD PTR [esi]
  411bbf:	jmp    0x894b2651
  411bc4:	mov    ebx,ebp
  411bc6:	test   al,0x37
  411bc8:	xor    eax,0x9b409957
  411bcd:	pop    edx
  411bce:	jp     0x411b6d
  411bd0:	push   ds
  411bd1:	xlat   BYTE PTR ds:[ebx]
  411bd2:	or     BYTE PTR [ebx-0x46afc510],bh
  411bd8:	mov    es,WORD PTR [eax+esi*1-0x50d44fe6]
  411bdf:	ror    ebx,1
  411be1:	aad    0x2c
  411be3:	call   0x8ca5:0xed440633
  411bea:	std    
  411beb:	and    bh,BYTE PTR [edi+eiz*1-0x2888f305]
  411bf2:	add    BYTE PTR ss:[ebp+0x5b],0xb
  411bf7:	xchg   ebx,eax
  411bf8:	sub    al,0x7e
  411bfa:	mov    BYTE PTR [ebp+0x5f],ah
  411bfd:	sbb    bl,0x2d
  411c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c01:	mov    cl,0x9
  411c03:	sub    ecx,0xffffff9a
  411c06:	pop    ecx
  411c07:	popa   
  411c08:	push   edi
  411c09:	and    ch,BYTE PTR [eax]
  411c0b:	cmp    edx,DWORD PTR [eax]
  411c0d:	lods   eax,DWORD PTR ds:[esi]
  411c0e:	xchg   BYTE PTR ds:0xdb3c40a8,dl
  411c14:	and    eax,0xd9645945
  411c19:	sub    dh,BYTE PTR [esi]
  411c1b:	jl     0x411c38
  411c1d:	clc    
  411c1e:	push   ebp
  411c1f:	stos   BYTE PTR es:[edi],al
  411c20:	ja     0x411c9c
  411c22:	sub    bh,BYTE PTR [eax]
  411c24:	std    
  411c25:	test   eax,0xe98983dc
  411c2a:	xor    dl,BYTE PTR [edi+0x2358cd9b]
  411c30:	or     al,0x32
  411c32:	push   edi
  411c33:	adc    BYTE PTR [esi+edx*8+0x28],al
  411c37:	jle    0x411cb2
  411c39:	add    bh,BYTE PTR [edx]
  411c3b:	mov    ds:0x2e222785,eax
  411c40:	fcomp  st(4)
  411c42:	cmp    eax,0x318d55f4
  411c47:	(bad)  
  411c48:	xor    ebx,DWORD PTR [esi-0x39]
  411c4b:	inc    esi
  411c4c:	and    ah,ch
  411c4e:	sbb    eax,0xae308b68
  411c53:	popf   
  411c54:	and    bl,dl
  411c56:	les    edi,FWORD PTR [esi]
  411c58:	mov    ecx,edi
  411c5a:	cmp    eax,0x7ccce818
  411c5f:	push   edx
  411c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c61:	push   ds
  411c62:	and    al,0x97
  411c64:	(bad)  
  411c65:	dec    edi
  411c66:	xchg   dl,cl
  411c68:	jp     0x411bf6
  411c6a:	mov    ecx,0x81b76753
  411c6f:	pop    ecx
  411c70:	pop    esp
  411c71:	xor    BYTE PTR [ecx-0x2],ah
  411c74:	push   ds
  411c75:	dec    edx
  411c76:	sub    al,0xdb
  411c78:	fnsave [edx-0xddd9285]
  411c7e:	or     al,ah
  411c80:	inc    esp
  411c81:	imul   esi,edx,0xdbd8d800
  411c87:	jno    0x411c86
  411c89:	xchg   ecx,eax
  411c8a:	xor    edi,ecx
  411c8c:	call   0x22e8:0x297777fb
  411c93:	push   0xfffffff8
  411c95:	dec    edx
  411c96:	sub    dl,BYTE PTR [ebx-0x5d]
  411c99:	xchg   edi,eax
  411c9a:	ins    DWORD PTR es:[edi],dx
  411c9b:	add    BYTE PTR [esi],ah
  411c9d:	test   al,0xf5
  411c9f:	test   eax,0x6dbb2749
  411ca4:	jl     0x411c33
  411ca6:	repnz cmp cl,cl
  411ca9:	pushf  
  411caa:	sub    BYTE PTR [esp+ebp*8+0x64],cl
  411cae:	cdq    
  411caf:	push   cs
  411cb0:	in     eax,0xe6
  411cb2:	out    0xb,al
  411cb4:	pop    ebp
  411cb5:	push   ds
  411cb6:	scas   al,BYTE PTR es:[edi]
  411cb7:	jge    0x411cc5
  411cb9:	(bad)  
  411cbb:	xor    BYTE PTR [ecx+ebx*8-0x7fe49336],bl
  411cc2:	lds    esp,FWORD PTR [eax]
  411cc4:	mov    dh,0xc2
  411cc6:	loop   0x411cea
  411cc8:	or     eax,0xebd1513e
  411ccd:	test   eax,0x3ee72563
  411cd2:	add    eax,0x785601f7
  411cd7:	mul    esi
  411cd9:	outs   dx,BYTE PTR ds:[esi]
  411cda:	dec    eax
  411cdb:	xor    DWORD PTR [esi+0xd],ebx
  411cde:	aaa    
  411cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ce0:	sbb    BYTE PTR [ebx-0x6a8a1124],dh
  411ce6:	mov    bl,0xef
  411ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ce9:	std    
  411cea:	xor    ecx,DWORD PTR [ebx-0x3d1d3b01]
  411cf0:	(bad)  
  411cf2:	jmp    0x574:0x34ae1c85
  411cf9:	in     al,dx
  411cfa:	in     al,0x76
  411cfc:	mov    eax,ds:0xba801d4f
  411d01:	sbb    al,0xd0
  411d03:	stc    
  411d04:	cwde   
  411d05:	mov    bl,0x2f
  411d07:	pop    eax
  411d08:	ret    
  411d09:	adc    eax,0xc48fca37
  411d0e:	mov    eax,0x275ce7e
  411d13:	(bad)  
  411d15:	clc    
  411d16:	out    dx,al
  411d17:	dec    al
  411d19:	std    
  411d1a:	js     0x411cc1
  411d1c:	retf   
  411d1d:	pop    eax
  411d1e:	jae    0x411cef
  411d20:	dec    edi
  411d21:	dec    ebp
  411d22:	or     al,0xc
  411d24:	add    BYTE PTR [esi],ch
  411d26:	cmp    al,0x53
  411d28:	mov    eax,ds:0xd4ef3ba7
  411d2d:	xor    DWORD PTR [ebx-0x19],esi
  411d30:	hlt    
  411d31:	fxch   st(2)
  411d33:	vaddps xmm7,xmm6,xmm5
  411d37:	mov    ds:0x69653d00,eax
  411d3c:	xchg   esp,eax
  411d3d:	mov    ah,0xa9
  411d3f:	mov    ecx,0x805b63ce
  411d44:	mov    ebp,cs
  411d46:	cmp    eax,0xd6eb7561
  411d4b:	pop    ecx
  411d4c:	or     eax,0x1f4667a1
  411d51:	sub    edx,0x74cef842
  411d57:	xor    DWORD PTR [edx],edi
  411d59:	push   ebp
  411d5a:	in     eax,dx
  411d5b:	test   BYTE PTR [edx-0x4cf0074a],bh
  411d61:	pushf  
  411d62:	pusha  
  411d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d64:	or     dh,BYTE PTR [edx-0x26]
  411d67:	jb     0x411daa
  411d69:	scas   eax,DWORD PTR es:[edi]
  411d6a:	data16 out dx,al
  411d6c:	repnz xor al,bh
  411d6f:	sub    BYTE PTR [edx+0x5],bh
  411d72:	icebp  
  411d73:	aas    
  411d74:	and    DWORD PTR [edi-0x65],esi
  411d77:	shl    esp,1
  411d79:	in     eax,dx
  411d7a:	xchg   ebp,eax
  411d7b:	fdivp  st(7),st
  411d7d:	xchg   ebx,eax
  411d7e:	xor    eax,0x13572162
  411d83:	das    
  411d84:	jmp    0xd69a9fbf
  411d89:	jle    0x411d88
  411d8b:	fisttp DWORD PTR [ebp-0x4467afc4]
  411d91:	lds    eax,FWORD PTR [edx+ecx*2-0x34caa91e]
  411d98:	(bad)  
  411d99:	xor    esi,DWORD PTR [esi-0xb]
  411d9c:	cmp    al,0xf0
  411d9e:	and    al,0x42
  411da0:	jle    0x411db9
  411da2:	rep lods eax,DWORD PTR ds:[esi]
  411da4:	xor    BYTE PTR [edx-0x58],bh
  411da7:	adc    esi,edi
  411da9:	push   eax
  411daa:	cmp    BYTE PTR [ecx+ecx*1-0x7e9faf22],al
  411db1:	pop    esp
  411db2:	jbe    0x411df4
  411db4:	jl     0x411d5e
  411db6:	(bad)  
  411db7:	sar    BYTE PTR [eax],0xd0
  411dba:	lahf   
  411dbb:	ror    BYTE PTR [esi+0x73],1
  411dbe:	jb     0x411d7e
  411dc0:	aas    
  411dc1:	and    eax,0x16251b35
  411dc6:	or     eax,0x115c8fde
  411dcb:	adc    al,0x82
  411dcd:	(bad)
  411dd1:	add    dh,0xfd
  411dd4:	daa    
  411dd5:	push   edx
  411dd6:	in     eax,0x19
  411dd8:	out    0xdf,al
  411dda:	fstp   TBYTE PTR [edi+0x1]
  411ddd:	mov    esi,0xe72ff2ff
  411de2:	add    al,0xc1
  411de4:	push   edx
  411de5:	xchg   ebp,eax
  411de6:	mov    BYTE PTR [ebp-0x79],dl
  411de9:	and    BYTE PTR [ebx+0x7fe319a],bl
  411def:	jns    0x411df5
  411df1:	push   esi
  411df2:	pop    edx
  411df3:	push   0x7b34d95d
  411df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411df9:	push   eax
  411dfa:	or     al,0x34
  411dfc:	push   esi
  411dfd:	pop    esi
  411dfe:	pop    esp
  411dff:	in     eax,0xf2
  411e01:	fs push ss
  411e03:	repnz cmp eax,0x6d3bdfec
  411e09:	retf   
  411e0a:	stos   DWORD PTR es:[edi],eax
  411e0b:	fcom   st(2)
  411e0d:	mov    edi,0xe1d62e70
  411e12:	jmp    0x411da6
  411e14:	retf   0x57b6
  411e17:	pop    bp
  411e19:	mov    cl,0x98
  411e1b:	mov    ecx,0xada14e96
  411e20:	ja     0x411e55
  411e22:	scas   eax,DWORD PTR es:[edi]
  411e23:	push   eax
  411e24:	sbb    al,BYTE PTR ds:0x38708135
  411e2a:	dec    eax
  411e2b:	mov    dl,BYTE PTR [ebp+0x537da7fb]
  411e31:	cmp    BYTE PTR [edi+0x23],al
  411e34:	pop    ecx
  411e35:	popa   
  411e36:	sti    
  411e37:	mov    dh,0xfd
  411e39:	sbb    ecx,ebp
  411e3b:	push   es
  411e3c:	pop    ebp
  411e3d:	jecxz  0x411e67
  411e3f:	mov    cs,WORD PTR [esi-0x70]
  411e42:	(bad)  
  411e43:	ss dec esp
  411e45:	test   DWORD PTR [ebp-0x488b1a2],0xd12646b3
  411e4f:	leave  
  411e50:	mov    esp,edi
  411e52:	sahf   
  411e53:	inc    eax
  411e54:	pop    ebx
  411e55:	xlat   BYTE PTR ds:[ebx]
  411e56:	sbb    BYTE PTR [ebp-0x7b],ch
  411e59:	cs mov eax,0xaef0e925
  411e5f:	mov    DWORD PTR [edx],ebx
  411e61:	(bad)  
  411e62:	cmp    eax,0xe18e0e21
  411e67:	dec    ebx
  411e68:	xor    eax,0x6d7db23b
  411e6d:	push   ebx
  411e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e70:	imul   edx,DWORD PTR [edx+ebp*1],0x4d
  411e74:	lock cmp eax,0x55d54849
  411e7a:	cwde   
  411e7b:	push   0x42a89fe4
  411e80:	outs   dx,BYTE PTR ds:[esi]
  411e81:	pop    ds
  411e82:	jnp    0x411ea6
  411e84:	imul   edi,DWORD PTR [ecx],0x5f3c4173
  411e8a:	stc    
  411e8b:	mov    ds:0x9e7c904d,al
  411e90:	js     0x411f0d
  411e92:	or     DWORD PTR [ebp-0x29],0xefb93c7e
  411e99:	jge    0x411e9d
  411e9b:	fist   WORD PTR [eax-0x54b8bf05]
  411ea1:	push   edx
  411ea2:	shl    BYTE PTR [ecx-0x2a],0xd8
  411ea6:	cmc    
  411ea7:	call   0x9a03:0xb7714934
  411eae:	push   esi
  411eaf:	shl    DWORD PTR [ebx],0x89
  411eb2:	dec    esi
  411eb3:	or     al,0xeb
  411eb5:	fisttp QWORD PTR [edx-0x7e896de2]
  411ebb:	mov    ebx,0xa4130761
  411ec0:	aam    0xb9
  411ec2:	inc    esp
  411ec3:	mov    bh,0xe1
  411ec5:	adc    eax,0x88b88c1d
  411eca:	push   es
  411ecb:	cmp    al,0x2a
  411ecd:	dec    edx
  411ece:	jmp    0x69ca:0x2c1ee428
  411ed5:	imul   ecx,DWORD PTR [ebp-0x31ea975c],0xffffff9a
  411edc:	cmp    ebp,ebp
  411ede:	(bad)  
  411edf:	cmc    
  411ee0:	sub    al,0xf5
  411ee2:	mov    ah,0xe0
  411ee4:	push   eax
  411ee5:	adc    esi,edx
  411ee7:	in     eax,dx
  411ee8:	jle    0x411f2b
  411eea:	mov    ebp,0x668392e1
  411eef:	mov    WORD PTR [edi+0x7a],fs
  411ef2:	or     esp,0x5239d9a9
  411ef8:	std    
  411ef9:	stos   DWORD PTR es:[edi],eax
  411efa:	fucomp st(3)
  411efc:	adc    ch,bl
  411efe:	add    eax,0xe09ccd0d
  411f03:	addr16 sbb eax,0x10b966e7
  411f09:	pop    ebp
  411f0a:	ja     0x411ef2
  411f0c:	or     ebp,ebp
  411f0e:	or     DWORD PTR [edi-0x76b1d169],esp
  411f14:	fistp  DWORD PTR [edi-0x6e638824]
  411f1a:	add    ah,dl
  411f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f1d:	nop    DWORD PTR [edi+0x2cf1fa1c]
  411f24:	(bad)  
  411f25:	mov    ebp,0x4c0d9da9
  411f2a:	rcr    BYTE PTR [eax-0xd],cl
  411f2d:	(bad)  
  411f2f:	ror    DWORD PTR [edx+0x1786cdc4],0x91
  411f36:	das    
  411f37:	in     eax,0xe4
  411f39:	dec    esp
  411f3a:	or     al,0x1c
  411f3c:	(bad)  
  411f3e:	data16 mov dl,0x7f
  411f41:	adc    dl,dl
  411f43:	pusha  
  411f44:	mov    ebx,0xc5751a7b
  411f49:	push   ss
  411f4a:	loop   0x411ed1
  411f4c:	inc    edi
  411f4d:	inc    eax
  411f4e:	adc    DWORD PTR [eax+edi*8-0x14],esi
  411f52:	outs   dx,DWORD PTR ds:[esi]
  411f53:	and    BYTE PTR [esi],0x65
  411f56:	popf   
  411f57:	xor    ch,bl
  411f59:	push   ebx
  411f5b:	sub    dh,BYTE PTR [ebx]
  411f5d:	inc    eax
  411f5e:	jmp    0x411f81
  411f60:	dec    esi
  411f61:	push   eax
  411f62:	mov    edi,0xd68b1a65
  411f67:	mov    ch,0xd9
  411f69:	push   edi
  411f6a:	xor    al,0x94
  411f6c:	sub    DWORD PTR [esi+0xd],0xc34e6278
  411f73:	add    esi,DWORD PTR [esi-0x2e]
  411f76:	xor    dh,BYTE PTR [eax+edx*4+0x25]
  411f7a:	ins    BYTE PTR es:[edi],dx
  411f7b:	add    al,0xb5
  411f7d:	add    eax,0xf1e8dafe
  411f82:	jnp    0x411fba
  411f84:	inc    eax
  411f85:	leave  
  411f86:	cmp    dh,BYTE PTR [ebp-0x7f8e2263]
  411f8c:	sbb    DWORD PTR [ebx],esi
  411f8e:	test   ah,0x44
  411f91:	cmp    ecx,esi
  411f93:	pop    ss
  411f94:	(bad)  
  411f95:	in     eax,dx
  411f96:	cmp    dh,BYTE PTR [ecx-0x1490f76c]
  411f9c:	rcr    BYTE PTR [esi+0x34],0x67
  411fa0:	pusha  
  411fa1:	lds    edx,FWORD PTR [eax+0x7fd69ba7]
  411fa7:	jle    0x411f73
  411fa9:	adc    eax,0x8890ef28
  411fae:	inc    esi
  411faf:	dec    edi
  411fb0:	lahf   
  411fb1:	inc    ebp
  411fb2:	ja     0x411f92
  411fb4:	inc    esi
  411fb5:	ret    
  411fb6:	in     al,dx
  411fb7:	xor    DWORD PTR [ecx-0x5cbd6ea5],eax
  411fbd:	test   eax,0x66018e54
  411fc2:	lds    ecx,FWORD PTR [ebx+0x4b650805]
  411fc8:	stc    
  411fc9:	xor    DWORD PTR [edi+ebp*8],ebp
  411fcc:	xchg   esp,ebx
  411fce:	jno    0x411f64
  411fd0:	call   0xe6f7:0x3df38fc7
  411fd7:	test   eax,0xb86f9733
  411fdc:	shl    BYTE PTR [esi-0x23],cl
  411fdf:	adc    BYTE PTR [edx-0x20451fe0],bh
  411fe5:	out    dx,eax
  411fe6:	ds in  al,0x75
  411fe9:	adc    eax,0xa4eb2847
  411fee:	dec    ebx
  411fef:	push   0x2677b21f
  411ff4:	xchg   DWORD PTR [eax-0x14],ecx
  411ff7:	jmp    FWORD PTR [ecx-0x41]
  411ffa:	lock (bad) 
  411ffc:	sub    BYTE PTR [edx-0x56ac07c5],ch
  412002:	jp     0x41203b
  412004:	into   
  412005:	jae    0x41203c
  412007:	in     al,dx
  412008:	bound  ecx,QWORD PTR [ebp-0x266e6c8c]
  41200e:	or     bh,BYTE PTR [esi-0x7]
  412011:	call   0x60b6:0xaf9f35b5
  412018:	mov    bh,0x80
  41201a:	xor    al,0xb8
  41201c:	rcr    DWORD PTR [esi],0x55
  41201f:	mov    dl,0x62
  412021:	call   0x5c6:0x4ed8f9de
  412028:	loope  0x412022
  41202a:	sbb    eax,0x2f60bb87
  41202f:	mov    eax,0xcf713f6e
  412034:	addr16 xchg esp,eax
  412036:	push   ebp
  412037:	lods   al,BYTE PTR ds:[esi]
  412038:	adc    al,BYTE PTR [edi]
  41203a:	mov    edx,0x5aab3740
  41203f:	dec    esi
  412040:	data16 stos BYTE PTR es:[edi],al
  412042:	add    BYTE PTR [esi+0x45],ch
  412045:	adc    eax,0x31b7a01f
  41204a:	mov    esi,0x126acaae
  41204f:	fs ss xor al,0xdc
  412053:	pop    ebp
  412054:	jmp    0x5c76d07c
  412059:	or     ecx,ebp
  41205b:	xchg   ecx,eax
  41205c:	ds inc ebp
  41205e:	loopne 0x411ffd
  412060:	pusha  
  412061:	shr    eax,0xd5
  412064:	adc    esp,DWORD PTR [eax-0x31fe41fa]
  41206a:	jp     0x412024
  41206c:	mov    WORD PTR [edi*1-0x2819d3e8],gs
  412073:	das    
  412074:	xor    al,0x47
  412076:	mov    al,ds:0x5738ab64
  41207b:	daa    
  41207c:	cmp    ecx,eax
  41207e:	push   esp
  41207f:	pop    edx
  412080:	aam    0xc3
  412082:	popf   
  412083:	mov    al,cs:0xc6fc87cd
  412089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208a:	aaa    
  41208b:	jmp    0x412012
  41208d:	pop    esi
  41208e:	stos   BYTE PTR es:[edi],al
  41208f:	in     eax,0x91
  412091:	pop    ds
  412092:	push   ss
  412093:	cmp    cl,ah
  412095:	sbb    DWORD PTR [esi-0xe],eax
  412098:	imul   esp,edi,0xffffff85
  41209b:	rcl    BYTE PTR [ebp-0x64fc2a70],cl
  4120a1:	(bad)  
  4120a2:	mov    esi,0x77df2e4a
  4120a7:	ficom  DWORD PTR [ecx+0x8]
  4120aa:	stc    
  4120ab:	dec    ebp
  4120ad:	push   0x86af62b0
  4120b2:	and    BYTE PTR [ebp+0x2d],0x7a
  4120b6:	stos   DWORD PTR es:[edi],eax
  4120b7:	and    dl,ah
  4120b9:	in     al,dx
  4120ba:	pop    ebp
  4120bb:	jbe    0x4120fd
  4120bd:	js     0x41207b
  4120bf:	mov    ah,0x9b
  4120c1:	into   
  4120c2:	push   edx
  4120c4:	mov    eax,es
  4120c6:	ja     0x4120ac
  4120c8:	add    BYTE PTR [esi+edx*1-0x12af1af2],0x29
  4120d0:	pop    es
  4120d1:	jo     0x4120d6
  4120d3:	sahf   
  4120d4:	jmp    0x41212f
  4120d6:	xlat   BYTE PTR ds:[ebx]
  4120d7:	stos   BYTE PTR es:[edi],al
  4120d8:	jno    0x412114
  4120da:	into   
  4120db:	dec    esp
  4120dc:	mov    bh,BYTE PTR [ebp-0x7429806e]
  4120e2:	mov    ds:0xaf002a01,eax
  4120e7:	cmp    BYTE PTR ss:[ebp-0x6c5d3c6e],dh
  4120ee:	mov    esi,0x6a744ece
  4120f3:	pop    edi
  4120f4:	mov    al,ds:0xf616bd87
  4120f9:	fbld   TBYTE PTR [ebp-0x18]
  4120fc:	xor    DWORD PTR [ecx+esi*2+0x6f],ebp
  412100:	add    al,dl
  412102:	repnz adc cl,bh
  412105:	push   es
  412106:	dec    edi
  412107:	sar    BYTE PTR [esp+esi*4+0x73],1
  41210b:	test   al,ch
  41210d:	dec    ebx
  41210e:	aam    0xe2
  412110:	jp     0x412166
  412112:	dec    ecx
  412113:	ins    DWORD PTR es:[edi],dx
  412114:	mov    cl,0xe5
  412116:	dec    esp
  412117:	enter  0xd1a0,0x72
  41211b:	rcr    DWORD PTR [ebx-0x1402f850],cl
  412121:	cmp    BYTE PTR [ebx+0x9b74913],al
  412127:	test   al,0x3a
  412129:	xchg   esi,eax
  41212a:	repnz outs dx,BYTE PTR ds:[esi]
  41212c:	xchg   esp,eax
  41212d:	into   
  41212e:	or     al,BYTE PTR [edi-0x33ef7032]
  412134:	int    0x12
  412136:	stc    
  412137:	push   ss
  412138:	popa   
  412139:	jae    0x412192
  41213b:	sub    eax,0x1a72183e
  412140:	inc    edx
  412141:	add    eax,0x4a136b90
  412146:	scas   al,BYTE PTR es:[edi]
  412147:	sbb    edi,edi
  412149:	fwait
  41214a:	and    DWORD PTR [edi],edx
  41214c:	popf   
  41214d:	ret    
  41214e:	popa   
  41214f:	jmp    0x950:0x2b48e622
  412156:	sbb    eax,DWORD PTR [ecx+0x217b6634]
  41215c:	sbb    esp,DWORD PTR [edi-0x340c5fe1]
  412162:	mov    ebx,0xb949d74b
  412167:	repz lea ebp,[esi+0x6a1bc84c]
  41216e:	push   ds
  41216f:	fcom   QWORD PTR cs:[edx+0x66a224ad]
  412176:	ret    
  412177:	jo     0x41213a
  412179:	loopne 0x412120
  41217b:	mov    ebx,0x9af12c9e
  412180:	xchg   ebx,eax
  412181:	ins    BYTE PTR es:[edi],dx
  412182:	int3   
  412183:	cwde   
  412184:	ret    
  412185:	test   eax,0x6c121ac
  41218a:	push   edx
  41218b:	fld    TBYTE PTR [esi]
  41218d:	dec    esi
  41218e:	call   DWORD PTR ds:0xc160e0ce
  412194:	or     DWORD PTR [ebx+0x23189503],0xffffffb4
  41219b:	(bad)  
  41219c:	nop
  41219d:	fdiv   st(0),st
  41219f:	mov    al,ds:0x825ade4
  4121a4:	sbb    eax,0x8aa7c9ce
  4121a9:	rcr    BYTE PTR [esi],0xf3
  4121ac:	cli    
  4121ad:	pusha  
  4121ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121af:	push   ebp
  4121b0:	in     al,0x4c
  4121b2:	out    dx,al
  4121b3:	iret   
  4121b4:	int3   
  4121b5:	push   cs
  4121b6:	sbb    esi,0x678e1105
  4121bc:	sub    BYTE PTR [ebx],bl
  4121be:	sub    eax,0x43c06530
  4121c3:	pop    esi
  4121c4:	int3   
  4121c5:	cmp    BYTE PTR [edi],cl
  4121c7:	(bad)  [edi]
  4121c9:	dec    ecx
  4121ca:	jmp    0x41218b
  4121cc:	aaa    
  4121cd:	call   0x31506f96
  4121d2:	stc    
  4121d3:	fwait
  4121d4:	out    0x56,al
  4121d6:	and    al,BYTE PTR [esp+ebx*4]
  4121d9:	fbld   TBYTE PTR [ebp+0x4545b461]
  4121df:	fs xchg esp,eax
  4121e1:	adc    al,0x5f
  4121e3:	jne    0x41223a
  4121e5:	cmc    
  4121e6:	adc    bl,dh
  4121e8:	sbb    ebp,esp
  4121ea:	loopne 0x412203
  4121ec:	add    al,0xf8
  4121ee:	clc    
  4121ef:	and    DWORD PTR [esi+0x2b],edi
  4121f2:	test   al,0xe9
  4121f4:	(bad)  
  4121f6:	xchg   ecx,eax
  4121f7:	push   edx
  4121f8:	aaa    
  4121f9:	xchg   DWORD PTR [ebp+0x7fc96d87],ecx
  4121ff:	(bad)  
  412200:	xchg   edi,eax
  412201:	pop    ecx
  412202:	(bad)  
  412203:	in     al,0x7b
  412205:	pop    edx
  412206:	f2xm1  
  412208:	call   FWORD PTR [ecx-0x7b]
  41220b:	ss aas 
  41220d:	(bad)  [ebp-0x39d3e548]
  412213:	dec    ecx
  412214:	pop    ebp
  412215:	mov    bh,dh
  412217:	jmp    0x454b:0x76182bc1
  41221e:	bound  edi,QWORD PTR [eax-0x61]
  412221:	mov    WORD PTR [ebx+0xdeec4c9],fs
  412227:	jnp    0x4121fd
  412229:	retf   
  41222a:	xor    DWORD PTR [ebx-0x16e5869d],edi
  412230:	pop    esp
  412231:	or     ebx,DWORD PTR [eax-0x6761c44]
  412237:	push   eax
  412238:	add    dh,BYTE PTR [edi]
  41223a:	scas   al,BYTE PTR es:[edi]
  41223b:	mov    bh,ch
  41223d:	adc    BYTE PTR [esi+0x23],cl
  412240:	dec    esp
  412241:	scas   al,BYTE PTR es:[edi]
  412242:	mov    ecx,0x74099d91
  412247:	out    0xd3,al
  412249:	test   DWORD PTR [edx],edx
  41224b:	mov    edi,es
  41224d:	sub    eax,esi
  41224f:	js     0x412291
  412251:	xor    eax,0x8d535bed
  412256:	inc    esi
  412257:	test   DWORD PTR [ebx+0x6a],esp
  41225a:	inc    ebp
  41225b:	stc    
  41225c:	addr16 jbe 0x4122aa
  41225f:	mov    ds:0x7076e9c2,al
  412264:	imul   ecx,DWORD PTR [esi+0x45d8baa5],0x28
  41226b:	mov    eax,0x54371b81
  412270:	mov    cs,WORD PTR [edi+0x3f2dd5a6]
  412276:	shl    DWORD PTR [ecx+ecx*4],1
  412279:	popf   
  41227a:	jmp    0x4ff7b3d8
  41227f:	dec    ebx
  412280:	dec    eax
  412281:	mov    DWORD PTR [ecx+0x442c4313],edi
  412287:	mov    edi,0x6b6275f9
  41228c:	sbb    edx,DWORD PTR [edx+0x26b926b4]
  412292:	loope  0x4122e8
  412294:	dec    ebx
  412295:	cs mov ds,eax
  412298:	jmp    0xa490fc06
  41229d:	jns    0x4122b3
  41229f:	in     al,0xdf
  4122a1:	fild   WORD PTR [edi]
  4122a3:	and    DWORD PTR [esi+0xf0436af],0x1e
  4122aa:	mov    al,ds:0x8b877e70
  4122af:	repz sub al,0x75
  4122b2:	shr    BYTE PTR ds:[esi],1
  4122b5:	jno    0x4122a4
  4122b7:	retf   
  4122b8:	sahf   
  4122b9:	pusha  
  4122ba:	jb     0x4122c5
  4122bc:	jae    0x412242
  4122be:	aaa    
  4122bf:	ja     0x4122c3
  4122c1:	jg     0x412330
  4122c3:	cmp    al,0xa9
  4122c5:	inc    esp
  4122c6:	sahf   
  4122c7:	add    eax,0x99e4145b
  4122cc:	cdq    
  4122cd:	outs   dx,DWORD PTR ds:[esi]
  4122ce:	push   0xffffffaf
  4122d0:	xchg   ebp,eax
  4122d1:	xchg   ebp,eax
  4122d2:	test   BYTE PTR [eax-0x77],cl
  4122d5:	mov    eax,0xbae25318
  4122da:	stos   DWORD PTR es:[edi],eax
  4122db:	jns    0x412350
  4122dd:	lods   eax,DWORD PTR ds:[esi]
  4122de:	test   esi,ecx
  4122e0:	arpl   dx,cx
  4122e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122e3:	adc    eax,0x2e73ec59
  4122e8:	cmp    cl,ch
  4122ea:	sbb    al,0xd4
  4122ec:	adc    eax,0x22aa684d
  4122f1:	push   ss
  4122f2:	lds    esp,FWORD PTR [ebx]
  4122f4:	or     eax,DWORD PTR [edx]
  4122f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122f7:	and    BYTE PTR [ebx+0x748bb7b5],cl
  4122fd:	lods   al,BYTE PTR ds:[esi]
  4122fe:	aas    
  4122ff:	and    bl,BYTE PTR [edx-0x27]
  412302:	jno    0x4122ff
  412304:	mov    esi,0x38be6257
  412309:	mov    esi,0xe5aa9929
  41230e:	push   ebx
  41230f:	mov    DWORD PTR [edx],esp
  412311:	imul   eax,DWORD PTR [ebp+0x7a],0x26ffe781
  412318:	test   DWORD PTR [eax+0x2c],0xc6d7ba25
  41231f:	js     0x412304
  412321:	lds    edi,FWORD PTR [esi+0x2aeddf35]
  412327:	in     al,0x2
  412329:	mov    bl,cl
  41232b:	popa   
  41232c:	mov    cl,BYTE PTR [edx-0x76a9e342]
  412332:	int    0xc6
  412334:	xchg   edx,eax
  412335:	dec    esi
  412336:	push   edx
  412337:	int3   
  412338:	js     0x4122c5
  41233a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41233b:	popf   
  41233c:	popa   
  41233d:	mov    dh,0x81
  41233f:	lods   al,BYTE PTR ds:[esi]
  412340:	into   
  412341:	ret    0xcb04
  412344:	mov    cl,0x81
  412346:	hlt    
  412347:	cmp    edx,DWORD PTR [edi+0x4a]
  41234a:	push   edi
  41234b:	sar    esp,0x3b
  41234e:	ret    
  41234f:	mov    cl,0xb7
  412351:	mov    BYTE PTR [esi+0x47d62f52],dh
  412357:	pop    edx
  412358:	fcomp  QWORD PTR ds:0xb2310fea
  41235e:	adc    al,0xc5
  412360:	ins    DWORD PTR es:[edi],dx
  412361:	dec    esp
  412362:	nop
  412363:	cli    
  412364:	mov    ah,0x20
  412366:	mov    ds:0xea6dc4a5,al
  41236b:	sbb    cl,BYTE PTR [ebp-0x6c]
  41236e:	pop    ss
  41236f:	test   DWORD PTR [ebx-0x5a],0xe4e774c6
  412376:	fsubr  DWORD PTR [edi+0xf]
  412379:	or     BYTE PTR [ebx],dh
  41237b:	pop    ds
  41237c:	cdq    
  41237d:	cli    
  41237e:	pop    esp
  41237f:	push   0x4c35ecfd
  412384:	xchg   ebp,eax
  412385:	mov    al,BYTE PTR [esi]
  412387:	xlat   BYTE PTR ds:[ebx]
  412388:	or     al,0x49
  41238a:	xchg   ebp,eax
  41238b:	ret    0xac88
  41238e:	lds    edx,FWORD PTR [ecx+ebp*8]
  412391:	push   es
  412392:	xchg   ebp,eax
  412393:	sub    al,0x1b
  412395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412396:	jae    0x41236e
  412398:	push   es
  412399:	xlat   BYTE PTR ds:[ebx]
  41239a:	pushf  
  41239b:	mov    ch,0x9d
  41239d:	(bad)
  4123a0:	push   ecx
  4123a1:	xchg   ecx,eax
  4123a2:	sar    BYTE PTR [edi],cl
  4123a4:	jno    0x41238f
  4123a6:	adc    dl,ch
  4123a8:	jmp    0xf98d:0x999a7ee2
  4123af:	lds    esp,FWORD PTR [eax+0x69]
  4123b2:	adc    al,BYTE PTR [esi-0x5e]
  4123b5:	inc    edi
  4123b6:	imul   eax,esi,0x1d1e8b70
  4123bc:	xor    ecx,eax
  4123be:	pop    edx
  4123bf:	das    
  4123c0:	aas    
  4123c1:	dec    esp
  4123c2:	iret   
  4123c3:	cmp    eax,0x73f5e51f
  4123c8:	imul   edx,DWORD PTR [ebx],0x40
  4123cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123cc:	mov    dh,0xef
  4123ce:	dec    esi
  4123cf:	out    0x69,al
  4123d1:	cld    
  4123d2:	mov    dh,0x54
  4123d4:	and    al,0x66
  4123d6:	ret    0xbdd3
  4123d9:	scas   eax,DWORD PTR es:[edi]
  4123da:	fstp   QWORD PTR [ebp+0x5964514e]
  4123e0:	push   ss
  4123e1:	jle    0x412375
  4123e3:	(bad)  
  4123e4:	mov    al,0xd7
  4123e6:	lods   al,BYTE PTR ds:[esi]
  4123e7:	inc    esi
  4123e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123e9:	stc    
  4123ea:	pusha  
  4123eb:	in     eax,0x9
  4123ed:	stc    
  4123ee:	add    eax,0xcd52d6a4
  4123f3:	xlat   BYTE PTR ds:[ebx]
  4123f4:	gs and ah,bl
  4123f7:	out    0xbe,eax
  4123f9:	cmp    DWORD PTR [eax],edx
  4123fb:	dec    edi
  4123fc:	popf   
  4123fd:	mov    al,0x1
  4123ff:	jmp    DWORD PTR [esi-0x2a]
  412402:	jo     0x41241c
  412404:	pop    ebx
  412405:	inc    ebp
  412406:	aad    0x24
  412408:	pop    ds
  412409:	jno    0x412488
  41240b:	shl    BYTE PTR [esi-0x61ab14ba],cl
  412411:	jl     0x412413
  412413:	sbb    edx,DWORD PTR [eax-0xf]
  412416:	pop    ebp
  412417:	pop    edi
  412418:	fbld   TBYTE PTR [edi-0x483d3f20]
  41241e:	stos   BYTE PTR es:[edi],al
  41241f:	ss jp  0x412463
  412422:	imul   ebp,DWORD PTR ds:0x3f2f28f1,0x66
  412429:	mov    esi,0x9a3d3944
  41242e:	sbb    al,0xa4
  412430:	jbe    0x412478
  412432:	add    ebp,esi
  412434:	cmp    BYTE PTR [ebx-0x26],dh
  412437:	fwait
  412438:	mov    cl,0x67
  41243a:	es pop ds
  41243c:	pop    esp
  41243d:	(bad)  
  41243e:	mov    al,ds:0x258aa323
  412443:	bound  edi,QWORD PTR [ebx]
  412445:	mov    ah,0x36
  412447:	std    
  412448:	je     0x41243d
  41244a:	sub    eax,0xb6dfb49
  41244f:	inc    ecx
  412450:	into   
  412451:	jecxz  0x4123d9
  412453:	test   BYTE PTR [ecx+0x32],ch
  412456:	or     dl,BYTE PTR [esi]
  412458:	fs std 
  41245a:	enter  0x3193,0x35
  41245e:	stos   DWORD PTR es:[edi],eax
  41245f:	xlat   BYTE PTR ds:[ebx]
  412460:	jge    0x4124c2
  412462:	sti    
  412463:	mov    ebp,DWORD PTR ds:0xdb6eb17
  412469:	adc    dl,dl
  41246b:	out    0xdf,eax
  41246d:	or     eax,ebx
  41246f:	sub    eax,0x606ddd58
  412474:	jne    0x4124b6
  412476:	nop
  412477:	mov    al,0x5b
  412479:	imul   edi,DWORD PTR [eax+ecx*1-0x74],0x55a575cf
  412481:	sar    BYTE PTR [ecx-0x52525a1a],cl
  412487:	repnz cwde 
  412489:	daa    
  41248a:	cmp    eax,0xeb5181e2
  41248f:	sbb    DWORD PTR [esi],edx
  412491:	or     esi,esp
  412493:	fnclex 
  412495:	out    0x87,eax
  412497:	mov    esi,edi
  412499:	inc    edx
  41249a:	pop    esp
  41249b:	inc    esp
  41249c:	jo     0x41249c
  41249e:	sub    ch,0x76
  4124a1:	sub    BYTE PTR [ebp+0x6e],bh
  4124a4:	jle    0x41250f
  4124a6:	scas   eax,DWORD PTR es:[edi]
  4124a7:	or     ebx,DWORD PTR [esi+0x966344d]
  4124ad:	mov    BYTE PTR [edx],cl
  4124af:	cmp    al,0x7c
  4124b1:	mov    ss,esi
  4124b3:	and    eax,0x9323cb7f
  4124b8:	and    cl,BYTE PTR [ebp+0x11]
  4124bb:	xchg   DWORD PTR [ecx+0x4a2d2b50],ebp
  4124c1:	xor    al,0xb7
  4124c3:	sub    al,0x41
  4124c5:	cld    
  4124c6:	cwde   
  4124c7:	jmp    0xd731287a
  4124cc:	dec    esi
  4124cd:	cs inc ebx
  4124cf:	or     DWORD PTR [ebp+0x15],ebp
  4124d2:	je     0x4124cf
  4124d4:	mov    ah,0x5e
  4124d6:	dec    edx
  4124d7:	ins    DWORD PTR es:[edi],dx
  4124d8:	es dec esi
  4124da:	ins    DWORD PTR es:[edi],dx
  4124db:	dec    eax
  4124dc:	aas    
  4124dd:	cmp    BYTE PTR [esi],bl
  4124df:	iret   
  4124e0:	sahf   
  4124e1:	adc    ah,BYTE PTR [edx+ecx*2+0x1d166604]
  4124e8:	inc    esp
  4124e9:	add    DWORD PTR [ebx],edx
  4124eb:	adc    edi,DWORD PTR [esi]
  4124ed:	js     0x41247c
  4124ef:	cld    
  4124f0:	pop    esi
  4124f1:	(bad)  
  4124f2:	pop    eax
  4124f3:	ss xchg ecx,eax
  4124f5:	jle    0x412499
  4124f7:	and    eax,0x7bc40fc7
  4124fc:	cdq    
  4124fd:	adc    BYTE PTR [ebx+0x5a5af307],ah
  412503:	push   DWORD PTR [ebx-0x6f]
  412506:	mov    al,ds:0xc4912daf
  41250b:	and    DWORD PTR [edx],ebp
  41250d:	(bad)  
  41250f:	jle    0x41251b
  412511:	mov    esp,0xdf886b5
  412516:	rol    BYTE PTR ds:0xab7a9a6f,cl
  41251c:	dec    ebp
  41251d:	push   esp
  41251e:	push   ebx
  41251f:	xchg   DWORD PTR [ebx+0x61538174],ebp
  412525:	imul   ecx,DWORD PTR [edx-0x3],0xe477cc19
  41252c:	pop    esi
  41252d:	jbe    0x4124b2
  41252f:	call   0xc039:0x583fc474
  412536:	or     eax,0x47dc8975
  41253b:	aad    0x78
  41253d:	pop    edx
  41253e:	(bad)  
  41253f:	mov    ebp,0xc988cca8
  412544:	adc    DWORD PTR [ebx+0x79d7b134],0xecfc68a5
  41254e:	xchg   BYTE PTR [edx-0x6b3fe2ce],dh
  412554:	cld    
  412555:	push   ecx
  412556:	pop    DWORD PTR [edx+0x39718f94]
  41255c:	jmp    0xba68:0x73cb252c
  412563:	inc    eax
  412564:	fwait
  412565:	in     eax,0xb3
  412567:	mov    esi,edx
  412569:	mov    ebx,0xef52fc3d
  41256e:	and    dl,BYTE PTR [esi+eiz*8]
  412571:	xor    DWORD PTR [eax+eiz*2],ecx
  412574:	pop    ds
  412575:	data16 (bad) 
  412577:	cld    
  412578:	outs   dx,BYTE PTR ds:[esi]
  412579:	pusha  
  41257a:	leave  
  41257b:	bound  esi,QWORD PTR [ebp+0x71]
  41257e:	pop    ss
  41257f:	cld    
  412580:	mov    WORD PTR [edi-0x419f84cf],ss
  412586:	scas   al,BYTE PTR es:[edi]
  412587:	loopne 0x4125d8
  412589:	add    ecx,DWORD PTR ss:[edx+0x14]
  41258d:	inc    ebx
  41258e:	out    0xe2,al
  412590:	ret    0xacdf
  412593:	dec    edx
  412594:	pop    ecx
  412595:	(bad)  
  412596:	cmp    DWORD PTR [edx],ecx
  412598:	(bad)  
  412599:	repnz add BYTE PTR [ecx],ch
  41259c:	pop    ss
  41259d:	shl    edx,0xe6
  4125a0:	jbe    0x41256e
  4125a2:	adc    cl,BYTE PTR [eax+edi*8]
  4125a5:	das    
  4125a6:	inc    eax
  4125a7:	sahf   
  4125a8:	nop    DWORD PTR [ecx+edx*2]
  4125ac:	ffree  st(2)
  4125ae:	shr    ecx,0x6d
  4125b1:	mov    ecx,0xeaa7e665
  4125b6:	sbb    DWORD PTR [ebx-0x45a9972e],esp
  4125bc:	and    eax,0xd6bbfdd5
  4125c1:	hlt    
  4125c2:	cdq    
  4125c3:	aaa    
  4125c4:	cmp    al,0xcd
  4125c6:	xchg   ecx,eax
  4125c7:	sbb    ebx,ebx
  4125c9:	jp     0x412611
  4125cb:	mov    DWORD PTR [ebp-0x42ff1323],esi
  4125d1:	push   esi
  4125d2:	sbb    ebx,DWORD PTR [esi]
  4125d4:	adc    cl,ch
  4125d6:	inc    ebx
  4125d7:	mov    ebx,0x245ea8d1
  4125dc:	jb     0x412586
  4125de:	sbb    eax,DWORD PTR [ecx+ebp*1-0x2c95d0d4]
  4125e5:	aaa    
  4125e6:	mov    WORD PTR [ebx],fs
  4125e8:	test   eax,0xc8373afb
  4125ed:	sbb    DWORD PTR [ebp-0x285e343a],edi
  4125f3:	lock sbb al,0x4f
  4125f6:	push   ecx
  4125f7:	inc    ebx
  4125f8:	inc    ebx
  4125f9:	push   eax
  4125fa:	mov    eax,ds:0xce397a32
  4125ff:	mov    ch,0x5f
  412601:	rcr    DWORD PTR [ebx+0x6f],0xf
  412605:	jnp    0x4125b0
  412607:	les    edi,FWORD PTR [ecx+eax*8+0x36]
  41260b:	test   DWORD PTR [ebp+0x1b1f5050],0x8f8fc41
  412615:	fidivr DWORD PTR [eax-0x34dd063f]
  41261b:	stc    
  41261c:	jp     0x41268c
  41261e:	mov    es,WORD PTR [esi+0x67ade50a]
  412624:	pushf  
  412625:	ds loope 0x412621
  412628:	cmc    
  412629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41262a:	xor    esp,DWORD PTR [esi-0x80]
  41262d:	pop    ebp
  41262e:	pop    DWORD PTR [esi]
  412630:	jle    0x4125ee
  412632:	lods   eax,DWORD PTR ds:[esi]
  412633:	jmp    0xc532:0x2656ab9a
  41263a:	lea    edx,[esi]
  41263c:	jno    0x41261d
  41263e:	and    eax,0x42c43881
  412643:	xchg   ebx,eax
  412644:	lods   al,BYTE PTR ds:[esi]
  412645:	test   eax,0xdb4c4b6c
  41264a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41264b:	in     al,dx
  41264c:	dec    eax
  41264d:	jp     0x41264c
  41264f:	add    BYTE PTR [esi+eiz*8],bl
  412652:	push   ebp
  412653:	dec    esp
  412654:	stos   BYTE PTR es:[edi],al
  412655:	jmp    0xd10e:0x4287baa9
  41265c:	fs push esi
  41265e:	cmp    ebx,DWORD PTR [ebx]
  412660:	scas   al,BYTE PTR es:[edi]
  412661:	(bad)  
  412662:	mov    edi,0x530885cd
  412667:	daa    
  412668:	xchg   esp,eax
  412669:	(bad)  
  41266a:	jge    0x4126d4
  41266c:	stc    
  41266d:	xchg   BYTE PTR ds:0x5ef17146,cl
  412673:	fwait
  412674:	inc    edi
  412675:	test   BYTE PTR [ecx+0x328984ea],0x7c
  41267c:	push   ecx
  41267d:	(bad)  
  41267e:	rcl    DWORD PTR [edi+ecx*4-0x6ede9978],1
  412685:	adc    esp,DWORD PTR [ebp+ecx*1-0x69]
  412689:	sahf   
  41268a:	pop    edi
  41268b:	dec    esp
  41268c:	dec    edi
  41268d:	xlat   BYTE PTR ds:[ebx]
  41268e:	das    
  41268f:	repnz ror DWORD PTR [edi+0x1],0x70
  412694:	dec    esi
  412695:	cwde   
  412696:	mov    ah,0xe0
  412698:	loope  0x41263f
  41269a:	mov    cl,0x87
  41269c:	fild   QWORD PTR [ebx+0x6fc4938a]
  4126a2:	dec    ebp
  4126a3:	shl    BYTE PTR [esi+0x5],cl
  4126a6:	jo     0x4126e1
  4126a8:	scas   al,BYTE PTR es:[edi]
  4126a9:	jmp    0x412680
  4126ab:	jae    0x41271a
  4126ad:	cmp    edi,edi
  4126af:	test   DWORD PTR [esi+ebx*1-0x5fc3055c],edi
  4126b6:	not    cl
  4126b8:	xor    BYTE PTR [eax-0x6821729a],bl
  4126be:	ror    eax,0x4f
  4126c1:	loopne 0x412728
  4126c3:	add    si,WORD PTR [ebp-0x3fd901a4]
  4126ca:	pop    ebx
  4126cb:	es sti 
  4126cd:	mov    cl,0x41
  4126cf:	xor    al,0x78
  4126d1:	jp     0x41269c
  4126d3:	mov    WORD PTR [ebx-0x6d4b23e3],fs
  4126d9:	inc    ecx
  4126da:	inc    esi
  4126db:	outs   dx,BYTE PTR ds:[esi]
  4126dc:	scas   al,BYTE PTR es:[edi]
  4126dd:	dec    edi
  4126de:	pop    esi
  4126df:	dec    edi
  4126e0:	cmp    BYTE PTR [edx-0x1a],bh
  4126e3:	retf   
  4126e4:	adc    BYTE PTR [esi],al
  4126e6:	sub    BYTE PTR [ecx-0x49],ah
  4126e9:	push   ebp
  4126ea:	xor    eax,0x8e719226
  4126ef:	mov    edx,0xb2322dd6
  4126f4:	imul   BYTE PTR [esi]
  4126f6:	js     0x412728
  4126f8:	push   edi
  4126f9:	sbb    BYTE PTR [eax-0x16a35d3],0x39
  412700:	jae    0x41271b
  412702:	sbb    eax,0xc6184125
  412707:	repnz add eax,0x40a44d3c
  41270d:	in     al,dx
  41270e:	das    
  41270f:	retf   0x1370
  412712:	call   0x992782b6
  412717:	nop
  412718:	jns    0x412701
  41271a:	lea    edi,[edi-0x73]
  41271d:	add    cl,ah
  41271f:	cmp    cl,bl
  412721:	xchg   DWORD PTR [edx+ebx*8-0x74],esi
  412725:	xor    al,BYTE PTR [ebx-0x2ce4e132]
  41272b:	xor    DWORD PTR [esi-0x5a],ecx
  41272e:	pop    esp
  41272f:	repnz sub DWORD PTR [ebp+0x43],ebx
  412733:	mov    ch,BYTE PTR [ecx]
  412735:	push   ds
  412736:	stos   DWORD PTR es:[edi],eax
  412737:	cmp    edx,DWORD PTR ss:[esi]
  41273a:	imul   ebp,DWORD PTR [eax+0x5b],0x60
  41273e:	test   al,0x8b
  412740:	cmp    al,0x15
  412742:	jnp    0x4126ed
  412744:	out    0xcd,al
  412746:	inc    ebp
  412747:	daa    
  412748:	mov    eax,ds:0x3fe87a52
  41274d:	mov    bh,BYTE PTR [edi+ecx*8]
  412750:	push   eax
  412751:	mov    ah,0xf7
  412753:	les    esp,FWORD PTR [ebx]
  412755:	psubsb mm1,QWORD PTR [esp+edi*4]
  412759:	mov    ah,0xfa
  41275b:	push   ss
  41275c:	gs pop eax
  41275e:	clc    
  41275f:	mov    ds:0xc8bebbb6,eax
  412764:	push   edx
  412765:	jo     0x41278b
  412767:	sbb    al,0x26
  412769:	fcom   st(6)
  41276b:	lea    esi,[ebx]
  41276d:	push   edi
  41276e:	ins    DWORD PTR es:[edi],dx
  41276f:	(bad)  
  412770:	nop
  412771:	out    dx,al
  412772:	jecxz  0x4126f9
  412774:	test   al,0xe8
  412776:	fld    TBYTE PTR [esi+edi*1-0x75]
  41277a:	sub    ebx,ecx
  41277c:	mov    al,0xa4
  41277e:	retf   0x4824
  412781:	leave  
  412782:	bound  esp,QWORD PTR [eax]
  412784:	push   edx
  412785:	pop    edx
  412786:	aad    0x80
  412788:	idiv   BYTE PTR [eax+0x26]
  41278b:	dec    esp
  41278c:	and    BYTE PTR ds:0xe4cf87b7,cl
  412792:	test   eax,0x68f0ea3a
  412797:	mov    ebx,edi
  412799:	retf   
  41279a:	cld    
  41279b:	xor    DWORD PTR [ebp+0x49],eax
  41279e:	popf   
  41279f:	enter  0x5a80,0x92
  4127a3:	mov    ebp,esi
  4127a5:	out    dx,al
  4127a6:	xor    BYTE PTR [ecx],bh
  4127a8:	push   ebx
  4127a9:	ds add eax,0x13abe2ff
  4127af:	add    eax,0x52f03a92
  4127b4:	es loop 0x4127d7
  4127b7:	xor    al,0x78
  4127b9:	add    eax,0xec42fb4
  4127be:	xchg   BYTE PTR [edx-0x5d],cl
  4127c1:	popf   
  4127c2:	in     al,0x95
  4127c4:	sub    esi,ebx
  4127c6:	call   0x83917501
  4127cb:	outs   dx,BYTE PTR ds:[esi]
  4127cc:	fistp  WORD PTR [ebx+0x5f]
  4127cf:	repz clc 
  4127d1:	test   al,0xfc
  4127d3:	cmp    DWORD PTR [ebx-0x18],edi
  4127d6:	mov    ah,BYTE PTR [ebx+0xa6b16c9]
  4127dc:	stc    
  4127dd:	or     BYTE PTR [ebx-0x5d],al
  4127e0:	xchg   ebx,eax
  4127e1:	xchg   esp,eax
  4127e2:	mov    esp,0x93b4b93
  4127e7:	push   edx
  4127e8:	div    ecx
  4127ea:	data16 shl BYTE PTR [ecx],cl
  4127ed:	jb     0x41279c
  4127ef:	int3   
  4127f0:	inc    eax
  4127f1:	ins    DWORD PTR es:[edi],dx
  4127f2:	mov    ds:0xee4c8b0c,eax
  4127f7:	push   es
  4127f8:	mov    cl,0x3d
  4127fa:	imul   dl
  4127fc:	aas    
  4127fd:	jl     0x412803
  4127ff:	xchg   ebp,eax
  412800:	lods   al,BYTE PTR ds:[esi]
  412801:	mov    ecx,0x9bdc5672
  412806:	(bad)  
  412807:	retfw  0xedd2
  41280b:	dec    ecx
  41280c:	ds mov cl,0x2d
  41280f:	pop    ds
  412810:	int    0x9e
  412812:	das    
  412813:	daa    
  412814:	pop    ss
  412815:	mov    bl,0x6c
  412817:	mov    ecx,0xbf9a10a9
  41281c:	ja     0x412865
  41281e:	iret   
  41281f:	cmp    eax,0xcfeaa502
  412824:	pop    ss
  412825:	int    0xd2
  412827:	(bad)  
  412829:	ins    BYTE PTR es:[edi],dx
  41282a:	adc    BYTE PTR [ecx-0x12],al
  41282d:	or     BYTE PTR [edi],0x54
  412830:	rol    BYTE PTR [ecx],cl
  412832:	imul   eax,DWORD PTR [edi-0x6f],0x76
  412836:	inc    ebx
  412837:	or     al,0x21
  412839:	sub    al,0x57
  41283b:	and    DWORD PTR [ecx],edx
  41283d:	mov    esi,0x11966765
  412842:	cwde   
  412843:	ds jno 0x4128aa
  412846:	add    DWORD PTR [edi],esp
  412848:	inc    ebx
  412849:	add    eax,0x280659e4
  41284e:	nop
  41284f:	sub    esi,eax
  412851:	shr    DWORD PTR [ebp-0x58d2eaae],1
  412857:	outs   dx,BYTE PTR ds:[esi]
  412858:	push   ds
  412859:	cmp    al,0xac
  41285b:	or     esi,DWORD PTR [ecx]
  41285d:	push   ebp
  41285e:	dec    esp
  41285f:	sub    BYTE PTR [edx+0x6d],ah
  412862:	ins    BYTE PTR es:[edi],dx
  412863:	lods   eax,DWORD PTR ds:[esi]
  412864:	popa   
  412865:	fisub  WORD PTR [ecx]
  412867:	mov    eax,0x26227d16
  41286c:	lods   eax,DWORD PTR ds:[esi]
  41286d:	xor    edi,DWORD PTR [eax+0x7bfd5e28]
  412873:	fistp  DWORD PTR [ebp-0x46c2bc5f]
  412879:	pop    esp
  41287a:	clc    
  41287b:	push   ebx
  41287c:	or     BYTE PTR [ecx+0x7575987d],bl
  412882:	cmp    eax,0x214137df
  412887:	jmp    0xafb5:0x78f7161
  41288e:	mov    dl,0x9a
  412890:	mov    esp,0x4a224291
  412895:	mov    bh,0xed
  412897:	sub    al,BYTE PTR [edx+0x6cb647d3]
  41289d:	or     DWORD PTR [edi+0x66],ebp
  4128a0:	mov    esi,0x2ef5f8e5
  4128a5:	adc    DWORD PTR [edx],edi
  4128a7:	mov    al,ds:0x5c2a70c6
  4128ac:	mov    dl,0x4d
  4128ae:	inc    edx
  4128af:	xchg   ecx,eax
  4128b0:	fimul  WORD PTR [esp+ebx*2]
  4128b3:	mov    al,0xb
  4128b5:	retf   
  4128b6:	(bad)  
  4128b8:	std    
  4128b9:	rcr    BYTE PTR [edx+0x1],1
  4128bc:	adc    al,0x88
  4128be:	cmp    BYTE PTR [ebx+ecx*1-0x5b],dl
  4128c2:	gs inc edi
  4128c4:	pushf  
  4128c5:	stos   BYTE PTR es:[edi],al
  4128c6:	shl    ebp,cl
  4128c8:	fcom   QWORD PTR [esi]
  4128ca:	gs fwait
  4128cc:	out    0x49,eax
  4128ce:	inc    esp
  4128cf:	pop    edi
  4128d0:	pop    ds
  4128d1:	mov    esi,0x406c151b
  4128d6:	or     cl,BYTE PTR [edi-0x79]
  4128d9:	cmp    al,BYTE PTR [edi+0x57703ba4]
  4128df:	ror    BYTE PTR [ebx+0x24],1
  4128e2:	(bad)  
  4128e3:	in     al,dx
  4128e4:	xchg   edi,eax
  4128e5:	or     dh,BYTE PTR [ebp+0x4703c8ba]
  4128eb:	xor    eax,0x553c34b0
  4128f0:	test   DWORD PTR [edx+0x29],ecx
  4128f3:	jge    0x41289c
  4128f5:	ret    0x5767
  4128f8:	and    eax,0xacb450b2
  4128fd:	jecxz  0x4128b1
  4128ff:	int    0xe8
  412901:	push   0x4c726fb7
  412906:	mov    esp,0x3b4a5c3c
  41290b:	bound  eax,QWORD PTR [eax]
  41290d:	out    0x38,eax
  41290f:	gs push 0x35
  412912:	ins    BYTE PTR es:[edi],dx
  412913:	ffreep st(5)
  412915:	addr16 push edi
  412917:	imul   ebx,DWORD PTR [edi-0x3a0b3b13],0xffffffb4
  41291e:	dec    edx
  41291f:	imul   esp,ecx,0x2d
  412922:	push   ds
  412923:	aam    0x37
  412925:	jecxz  0x41294b
  412927:	sbb    eax,0xe431f0a4
  41292c:	xor    dh,BYTE PTR [edx-0x8]
  41292f:	push   es
  412930:	push   esi
  412931:	jne    0x41298b
  412933:	push   esp
  412934:	sahf   
  412935:	imul   ebp,DWORD PTR [ecx-0x78d1fe9c],0xffffffd4
  41293c:	dec    ebp
  41293d:	mov    bh,0x26
  41293f:	fdivr  st,st(1)
  412941:	mov    ah,0x27
  412943:	mov    eax,ds:0x95b3e411
  412948:	sub    al,0x7d
  41294a:	mov    edi,0x4608b3e5
  41294f:	sar    cl,0xb8
  412952:	stos   BYTE PTR es:[edi],al
  412953:	rcl    esi,cl
  412955:	shr    BYTE PTR [edi-0x26],0xa1
  412959:	lock leave 
  41295b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41295c:	daa    
  41295d:	jle    0x412917
  41295f:	mov    esi,0x74068da1
  412964:	ins    DWORD PTR es:[edi],dx
  412965:	jo     0x412966
  412967:	sahf   
  412968:	das    
  412969:	ret    
  41296a:	dec    esi
  41296b:	aad    0x6c
  41296d:	push   edx
  41296e:	add    dl,bh
  412970:	add    DWORD PTR [eax+0xc9c7ef4],ebx
  412976:	inc    ebp
  412977:	jmp    0xe1712009
  41297c:	addr16 mov ds:0xed6b,al
  412980:	push   eax
  412981:	int    0x31
  412983:	lods   al,BYTE PTR ds:[esi]
  412984:	or     BYTE PTR [edx-0x1485f1f1],ah
  41298a:	xchg   edx,eax
  41298b:	out    0x5d,al
  41298d:	inc    ebp
  41298e:	mov    bl,BYTE PTR [ebp-0x42e32c10]
  412994:	lock xor cl,BYTE PTR [ebp+0x7cfbeffc]
  41299b:	jae    0x412942
  41299d:	mov    dh,0x17
  41299f:	add    BYTE PTR [esi-0x63],ah
  4129a2:	cmp    DWORD PTR [esi+0xd3dca0d],edi
  4129a8:	push   ecx
  4129a9:	mov    BYTE PTR [esi+ebp*2+0x770094be],dl
  4129b0:	sahf   
  4129b1:	imul   eax,DWORD PTR [ecx],0x730fbf85
  4129b7:	fwait
  4129b8:	push   cs
  4129b9:	test   DWORD PTR [esi-0x641ac3b7],ebp
  4129bf:	and    BYTE PTR [ecx-0x6741430b],ch
  4129c5:	aas    
  4129c6:	icebp  
  4129c7:	xor    ebp,DWORD PTR ds:0xc44d6dcd
  4129cd:	not    BYTE PTR [eax]
  4129cf:	mov    ds:0x43aa1dba,al
  4129d4:	fimul  WORD PTR [eax]
  4129d6:	sbb    cl,al
  4129d8:	call   0xaddbb58
  4129dd:	bound  esp,QWORD PTR [ebp+0x4f800317]
  4129e3:	jge    0x412a48
  4129e5:	rcr    DWORD PTR [eax-0x286b8e96],0x10
  4129ec:	mov    ds:0x5f154d28,eax
  4129f1:	sar    BYTE PTR [eax+0x69],1
  4129f4:	mov    bh,0xc1
  4129f6:	in     al,dx
  4129f7:	in     eax,dx
  4129f8:	mov    BYTE PTR [ebp+eiz*1-0x3d],al
  4129fc:	mov    bl,0x5f
  4129fe:	pop    edi
  4129ff:	ret    
  412a00:	xor    BYTE PTR [ecx-0x4e896c59],0x54
  412a07:	dec    esp
  412a08:	shl    BYTE PTR [edi+0xf283c68],cl
  412a0e:	mov    DWORD PTR [ecx+eax*8+0x42914848],edx
  412a15:	adc    BYTE PTR [ecx-0x43],dh
  412a18:	jae    0x412a96
  412a1a:	or     eax,0x3ae8e3b6
  412a1f:	pop    edx
  412a20:	mov    bl,0xf2
  412a22:	repnz inc ecx
  412a24:	xor    esi,DWORD PTR [eax+0x0]
  412a27:	in     eax,0xac
  412a29:	ror    esi,cl
  412a2b:	push   ebp
  412a2c:	and    bl,BYTE PTR [eax-0xcaa527c]
  412a32:	arpl   WORD PTR ds:0xced70652,sp
  412a38:	mov    fs,WORD PTR [eax+ebp*1-0x52]
  412a3c:	jnp    0x412a3c
  412a3e:	into   
  412a3f:	lods   eax,DWORD PTR ds:[esi]
  412a40:	sti    
  412a41:	and    al,0x17
  412a43:	xchg   edi,eax
  412a44:	pop    ss
  412a45:	and    al,0x59
  412a47:	and    bh,bl
  412a49:	sub    BYTE PTR [ecx],ch
  412a4b:	arpl   WORD PTR [esi+0x2c7a19ee],bp
  412a51:	add    dh,ch
  412a53:	ins    DWORD PTR es:[edi],dx
  412a54:	int3   
  412a55:	into   
  412a56:	inc    ebp
  412a57:	retf   
  412a58:	aad    0x62
  412a5a:	mov    WORD PTR [esi*2+0x2131c4d4],fs
  412a61:	inc    esp
  412a62:	and    DWORD PTR ds:0x395b7bef,ecx
  412a68:	jmp    0x412ab6
  412a6a:	clc    
  412a6b:	loop   0x412a0d
  412a6d:	inc    eax
  412a6e:	sub    esi,DWORD PTR [edx]
  412a70:	push   edi
  412a71:	push   ebx
  412a72:	mov    eax,0x4dd2744c
  412a77:	rol    DWORD PTR ds:0x392b2f0d,1
  412a7d:	jg     0x412a55
  412a7f:	mov    cl,0xdf
  412a81:	jle    0x412aa0
  412a83:	xchg   edx,eax
  412a85:	(bad)  
  412a86:	call   0x9a46fa9e
  412a8b:	xor    BYTE PTR [ebp+0x1d561a5],bl
  412a91:	push   esp
  412a92:	sub    ecx,0xad554055
  412a98:	lock xchg ebx,eax
  412a9a:	inc    ebx
  412a9b:	ss in  al,dx
  412a9d:	stos   DWORD PTR es:[edi],eax
  412a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a9f:	mov    al,al
  412aa1:	add    ebp,ebp
  412aa3:	sbb    DWORD PTR gs:[ebx+0x3aeb724a],esp
  412aaa:	ror    DWORD PTR [eax],0x84
  412aad:	in     al,0x1a
  412aaf:	scas   eax,DWORD PTR es:[edi]
  412ab0:	mov    al,0xca
  412ab2:	xor    al,0xbc
  412ab4:	ficomp DWORD PTR [esi-0x249ba21b]
  412aba:	mov    DWORD PTR [esi],edi
  412abc:	std    
  412abd:	mov    eax,ds:0xe2c54bcb
  412ac2:	add    DWORD PTR [edi+0x6531d82e],esp
  412ac8:	xchg   esp,eax
  412ac9:	push   esp
  412aca:	xlat   BYTE PTR ds:[ebx]
  412acb:	cmp    ah,bh
  412acd:	clc    
  412ace:	test   DWORD PTR es:[eax],esp
  412ad1:	lea    ebx,[edi+0x28]
  412ad4:	inc    edi
  412ad5:	outs   dx,BYTE PTR ds:[si]
  412ad7:	xchg   ebp,eax
  412ad8:	gs out 0xbd,eax
  412adb:	pop    es
  412adc:	pop    ecx
  412add:	imul   ecx,DWORD PTR [esi],0x64947911
  412ae3:	adc    cl,ch
  412ae5:	cs (bad) 
  412ae7:	out    0x6f,eax
  412ae9:	mov    DWORD PTR [esi-0xcb94669],eax
  412aef:	arpl   WORD PTR [edi+0x5dc0d7ac],di
  412af5:	(bad)  
  412af6:	es xchg esp,eax
  412af8:	xchg   edi,eax
  412af9:	push   es
  412afa:	xor    dl,BYTE PTR [eax]
  412afc:	dec    edx
  412afd:	test   BYTE PTR [ebp+0x77],ch
  412b00:	jb     0x412ad2
  412b02:	pop    ebp
  412b03:	sbb    ecx,DWORD PTR [eax+0x98f6635]
  412b09:	pop    esi
  412b0a:	ss ret 
  412b0c:	es jl  0x412b1a
  412b0f:	ret    0x1497
  412b12:	dec    ecx
  412b13:	sbb    al,0x44
  412b15:	popf   
  412b16:	add    dl,BYTE PTR [ebx]
  412b18:	or     eax,0x1abd87ad
  412b1d:	rcr    BYTE PTR [edi-0x1b3f4a5a],1
  412b23:	test   al,0x58
  412b25:	or     al,ch
  412b27:	mov    ecx,0xed4d62ee
  412b2c:	cld    
  412b2d:	xor    bl,BYTE PTR [eax-0xc]
  412b30:	cwde   
  412b31:	push   edi
  412b32:	jae    0x412b2a
  412b34:	bound  edi,QWORD PTR [edi+0x1066bcf]
  412b3a:	cmp    BYTE PTR [edx-0x143f200a],al
  412b40:	andps  xmm7,XMMWORD PTR [ecx]
  412b43:	jge    0x412ac9
  412b45:	imul   esp,DWORD PTR [edx+0x52],0xabcb2cb2
  412b4c:	loopne 0x412ba3
  412b4e:	xor    DWORD PTR [edx],0xffffff9d
  412b51:	in     eax,dx
  412b52:	mov    bh,0x34
  412b54:	push   esp
  412b55:	ins    BYTE PTR es:[edi],dx
  412b56:	jns    0x412b01
  412b58:	mov    dl,0xa0
  412b5a:	sub    esp,eax
  412b5c:	shl    esi,cl
  412b5e:	xchg   edx,eax
  412b5f:	jp     0x412b24
  412b61:	jae    0x412b71
  412b63:	popa   
  412b64:	sub    eax,0x2a560ed4
  412b69:	inc    esp
  412b6a:	or     al,0xe4
  412b6c:	push   ecx
  412b6d:	dec    esi
  412b6e:	fs mov esi,0xba19c186
  412b74:	mov    ds:0x25ffd856,eax
  412b79:	aas    
  412b7a:	loopne 0x412b6e
  412b7c:	jae    0x412b49
  412b7e:	push   edx
  412b7f:	aad    0x54
  412b81:	je     0x412bfc
  412b83:	mov    dl,0xa2
  412b85:	cmp    DWORD PTR [edi+0x53b8033],esp
  412b8b:	push   0x36
  412b8d:	sub    ch,BYTE PTR [ecx+0x1d]
  412b90:	loope  0x412b9a
  412b92:	ins    BYTE PTR es:[edi],dx
  412b93:	push   esp
  412b94:	rcl    DWORD PTR [esp+ecx*4+0x4f],1
  412b98:	test   BYTE PTR [eax-0xa],dl
  412b9b:	(bad)  
  412b9d:	xchg   edx,eax
  412b9e:	jmp    0xee87:0x3ac0ff25
  412ba5:	popa   
  412ba6:	mov    ebx,0x47323cab
  412bab:	inc    esi
  412bac:	push   ecx
  412bad:	sbb    eax,ebx
  412baf:	pop    eax
  412bb0:	add    eax,0xf8533ffb
  412bb5:	adc    al,0xe3
  412bb7:	ja     0x412b80
  412bb9:	inc    ebx
  412bba:	jne    0x412b6d
  412bbc:	jle    0x412b49
  412bbe:	fs xchg ebp,eax
  412bc0:	xor    cl,BYTE PTR [eax]
  412bc2:	stc    
  412bc3:	inc    ebp
  412bc4:	cld    
  412bc5:	ins    DWORD PTR es:[edi],dx
  412bc6:	adc    BYTE PTR [esi-0x412fe23d],dh
  412bcc:	jmp    0xc3430f37
  412bd1:	in     eax,0x85
  412bd3:	xor    edi,DWORD PTR [ebp+edi*2+0x75e2998]
  412bda:	jb     0x412c38
  412bdc:	into   
  412bdd:	cli    
  412bde:	push   esp
  412bdf:	dec    esi
  412be0:	fwait
  412be1:	jl     0x412c19
  412be3:	addr16 test ebp,ecx
  412be6:	and    ecx,DWORD PTR [ecx-0x5f]
  412be9:	jl     0x412c39
  412beb:	(bad)  
  412bec:	mov    eax,0x27b0c658
  412bf1:	aas    
  412bf2:	dec    eax
  412bf3:	or     eax,0x6405a61e
  412bf8:	inc    edi
  412bfa:	pop    edi
  412bfb:	push   ebx
  412bfc:	jne    0x412c56
  412bfe:	xor    eax,DWORD PTR [esi+0x7f]
  412c01:	xchg   BYTE PTR [edi],dh
  412c03:	jle    0x412be4
  412c05:	gs (bad) 
  412c07:	jecxz  0x412bdd
  412c09:	sbb    al,0xdc
  412c0b:	shl    esi,cl
  412c0d:	jmp    0x6894:0xe08588a3
  412c14:	retf   0xc20f
  412c17:	dec    esp
  412c18:	mov    al,ds:0x90f7e12e
  412c1d:	pop    eax
  412c1e:	aas    
  412c1f:	shl    DWORD PTR [esi+0x6c],0x19
  412c23:	cli    
  412c24:	icebp  
  412c25:	cmp    DWORD PTR [eax-0x60],0xd8e3e093
  412c2c:	jne    0x412c2c
  412c2e:	in     eax,0xc9
  412c30:	pop    ebx
  412c31:	mov    al,0xc7
  412c33:	or     eax,0x3e0e1f1f
  412c38:	mov    WORD PTR [ebp+0x6fffe045],?
  412c3e:	pusha  
  412c3f:	out    0xa8,eax
  412c41:	imul   ecx,DWORD PTR [esi],0x27059801
  412c47:	in     al,0xa2
  412c49:	jnp    0x412c25
  412c4b:	retf   0xee57
  412c4e:	pop    eax
  412c4f:	add    ebp,DWORD PTR [ebp+0x7f]
  412c52:	cld    
  412c53:	fucom  st(2)
  412c55:	sub    al,0x53
  412c57:	pushf  
  412c58:	pop    esi
  412c59:	xor    dl,bl
  412c5b:	jno    0x412c2f
  412c5d:	push   0xffffffcc
  412c5f:	sbb    al,0x81
  412c61:	or     eax,0x9f7b039a
  412c66:	dec    eax
  412c67:	jp     0x412c01
  412c69:	and    eax,0xec478433
  412c6e:	xlat   BYTE PTR ds:[ebx]
  412c6f:	mov    al,cs:0x81d894da
  412c75:	js     0x412c9d
  412c77:	ja     0x412c6d
  412c79:	adc    esp,edi
  412c7b:	out    0xf4,al
  412c7d:	push   es
  412c7e:	mov    edx,0x727482ce
  412c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c84:	dec    edx
  412c85:	xchg   ecx,eax
  412c86:	mov    dh,0xc8
  412c88:	call   0xa2f7:0x1bece736
  412c8f:	mov    ebp,0xdacbf7e5
  412c94:	sti    
  412c95:	setle  BYTE PTR [ebx+eax*4]
  412c99:	inc    ebp
  412c9a:	nop
  412c9b:	dec    edx
  412c9c:	pushf  
  412c9d:	pop    esi
  412c9e:	or     BYTE PTR [ebx+0x7b0c0042],cl
  412ca4:	out    dx,al
  412ca5:	adc    bh,cl
  412ca7:	adc    ebp,DWORD PTR [eax]
  412ca9:	jle    0x412c3b
  412cab:	jo     0x412c4f
  412cad:	clc    
  412cae:	gs add al,0x97
  412cb1:	or     bl,BYTE PTR [ecx+ebx*1+0x4b368c96]
  412cb8:	lds    ebp,FWORD PTR [edx+0x67d40637]
  412cbe:	xchg   cl,ah
  412cc0:	popa   
  412cc1:	xchg   esp,eax
  412cc2:	les    ecx,FWORD PTR [edx-0x3801e392]
  412cc8:	dec    ecx
  412cc9:	(bad)  
  412cca:	mov    eax,0xcafdf8ac
  412ccf:	lods   al,BYTE PTR ds:[esi]
  412cd0:	push   0xab5ae9b2
  412cd5:	push   edi
  412cd6:	add    ch,ch
  412cd8:	out    0xa0,al
  412cda:	fs (bad) 
  412cdc:	adc    ebp,ebx
  412cde:	out    0xb8,al
  412ce0:	(bad)  
  412ce1:	pusha  
  412ce2:	pextrw edi,mm6,0x10
  412ce6:	es out dx,eax
  412ce8:	mov    dl,0x69
  412cea:	pop    esp
  412ceb:	push   ss
  412cec:	adc    al,0xa7
  412cee:	scas   eax,DWORD PTR es:[edi]
  412cef:	les    edx,FWORD PTR [esi-0x30]
  412cf2:	ins    BYTE PTR es:[edi],dx
  412cf3:	inc    edx
  412cf4:	and    dl,al
  412cf6:	or     dh,ah
  412cf8:	jae    0x412cd4
  412cfa:	inc    edx
  412cfb:	das    
  412cfc:	pop    edi
  412cfd:	dec    esi
  412cfe:	push   esi
  412cff:	loope  0x412d7c
  412d01:	dec    edi
  412d02:	push   0xe9fdbf2a
  412d07:	sti    
  412d08:	retf   
  412d09:	jno    0x412c9b
  412d0b:	mov    ds:0x4f366648,al
  412d10:	rol    cl,0x6c
  412d13:	jo     0x412d63
  412d15:	mov    edx,0x88055791
  412d1a:	xor    ebp,ecx
  412d1c:	int3   
  412d1d:	loopne 0x412d0a
  412d1f:	mov    edx,0x9e794e02
  412d24:	mov    ch,0xa2
  412d26:	pusha  
  412d27:	jb     0x412d09
  412d29:	push   es
  412d2a:	xlat   BYTE PTR ds:[ebx]
  412d2b:	inc    edx
  412d2c:	in     al,dx
  412d2d:	sub    cl,BYTE PTR [edi]
  412d2f:	jnp    0x412d82
  412d31:	ins    DWORD PTR es:[edi],dx
  412d32:	lods   eax,DWORD PTR ds:[esi]
  412d33:	xor    al,0x3d
  412d35:	clc    
  412d36:	push   esi
  412d37:	imul   esi,DWORD PTR [edx],0x49
  412d3a:	in     al,dx
  412d3b:	scas   eax,DWORD PTR es:[edi]
  412d3c:	lahf   
  412d3d:	sub    BYTE PTR [edx-0x6604773d],ch
  412d43:	mov    eax,DWORD PTR [esi-0x294b3504]
  412d49:	std    
  412d4a:	lahf   
  412d4b:	mov    ecx,0xa3b5a0a9
  412d50:	mov    al,ds:0x4f225912
  412d55:	adc    edi,esi
  412d57:	out    0x2c,al
  412d59:	scas   eax,DWORD PTR es:[edi]
  412d5a:	fisub  WORD PTR [ebx-0x51]
  412d5d:	jo     0x412d49
  412d5f:	pop    edi
  412d60:	into   
  412d61:	fwait
  412d62:	in     al,0xa2
  412d64:	or     al,0x39
  412d66:	adc    eax,0x92692fa4
  412d6b:	sbb    edi,ebp
  412d6d:	shr    dl,cl
  412d6f:	xchg   DWORD PTR [ecx],ebp
  412d71:	cmp    BYTE PTR ds:0x3e239c88,bl
  412d77:	scas   eax,DWORD PTR es:[edi]
  412d78:	sub    al,0xe3
  412d7a:	mov    ch,0x4f
  412d7c:	inc    ecx
  412d7d:	outs   dx,DWORD PTR ds:[esi]
  412d7e:	pop    edx
  412d7f:	data16 (bad) 
  412d81:	(bad)  
  412d82:	sub    eax,DWORD PTR [ebx+0x63a2a203]
  412d88:	fcom   QWORD PTR [edx]
  412d8a:	xchg   esi,eax
  412d8b:	jecxz  0x412dc5
  412d8d:	mov    ah,0xfc
  412d8f:	xchg   esp,eax
  412d90:	enter  0xab6b,0xe2
  412d94:	sub    eax,DWORD PTR [ecx+0xa22e91b]
  412d9a:	add    edi,ebx
  412d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d9d:	push   eax
  412d9e:	sar    BYTE PTR [edi+0x21],cl
  412da1:	mov    ecx,0x589dcac2
  412da6:	add    eax,0x7ed86f90
  412dab:	xor    ebp,DWORD PTR [esi+0x22]
  412dae:	and    dh,BYTE PTR ds:0x920b4048
  412db4:	ret    
  412db5:	mov    dl,0x4d
  412db7:	add    BYTE PTR [eax-0x5fec17d2],bl
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	cdq    
  412dbf:	and    bh,al
  412dc1:	es push ss
  412dc3:	mov    ds:0xbdc23391,al
  412dc8:	or     cl,cl
  412dca:	mov    gs,WORD PTR [esi+0x2b]
  412dcd:	push   ebp
  412dce:	data16 out 0x49,al
  412dd1:	push   ss
  412dd2:	or     ah,BYTE PTR [eax-0xec30f22]
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	call   0x53c9c868
  412dde:	jge    0x412d86
  412de0:	add    ah,BYTE PTR [esi]
  412de2:	add    eax,0xfbc4e9fa
  412de7:	xchg   esi,eax
  412de8:	rcl    ebp,1
  412dea:	sbb    al,0xa0
  412dec:	data16 clc 
  412dee:	shl    DWORD PTR [ecx-0xd6f2562],1
  412df4:	aaa    
  412df5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412df7:	jnp    0x412e52
  412df9:	cld    
  412dfa:	mov    dl,0x49
  412dfc:	sub    edi,DWORD PTR [ecx]
  412dfe:	push   edx
  412dff:	test   DWORD PTR [edi-0x2a],0xb2cc90ff
  412e06:	cdq    
  412e07:	ret    
  412e08:	out    0x1,al
  412e0a:	cld    
  412e0b:	push   eax
  412e0c:	dec    edx
  412e0d:	jns    0x412e51
  412e0f:	jne    0x412dd5
  412e11:	icebp  
  412e12:	(bad)  
  412e13:	jle    0x412df4
  412e15:	dec    eax
  412e16:	xchg   edx,eax
  412e17:	in     eax,0xe1
  412e19:	mov    ch,0xf7
  412e1b:	add    BYTE PTR [eax+0x146d27f6],bl
  412e21:	pop    ebp
  412e22:	fcom   st(6)
  412e24:	xor    esi,esp
  412e26:	sbb    BYTE PTR [eax+0x5f],ah
  412e29:	iret   
  412e2a:	inc    esp
  412e2b:	add    ecx,DWORD PTR [eax]
  412e2d:	test   BYTE PTR [eax+0x712de68],ch
  412e33:	sbb    al,0x17
  412e35:	cdq    
  412e36:	inc    ebp
  412e37:	cmp    eax,0x46d6a8a4
  412e3c:	jmp    0x412eac
  412e3e:	gs enter 0xb223,0xbb
  412e43:	xor    cl,BYTE PTR ss:[ecx-0x111e86c6]
  412e4a:	xchg   BYTE PTR [eax],dl
  412e4c:	jns    0x412e31
  412e4e:	sub    DWORD PTR [ecx+0x194e3ca9],edi
  412e54:	stos   BYTE PTR es:[edi],al
  412e55:	dec    esi
  412e56:	sbb    eax,0x2ee7a4fa
  412e5b:	jp     0x412e6a
  412e5d:	pop    esp
  412e5e:	pop    edx
  412e5f:	cli    
  412e60:	push   edx
  412e61:	test   al,0xec
  412e63:	cmp    BYTE PTR [eax+0x6445c3ed],dl
  412e69:	inc    ebp
  412e6a:	and    ch,cl
  412e6c:	jmp    0x7d30:0x7dbf6422
  412e73:	mov    eax,0x6210104c
  412e78:	or     eax,0xfbbd77c7
  412e7d:	jp     0x412e5e
  412e7f:	aaa    
  412e80:	sub    dl,al
  412e82:	rol    DWORD PTR [eax-0x55],0x48
  412e86:	inc    edi
  412e87:	sbb    BYTE PTR [edi+0x64],dl
  412e8a:	aam    0x73
  412e8c:	or     eax,0xb3e31918
  412e91:	test   BYTE PTR [esi],bl
  412e93:	dec    eax
  412e94:	cmp    dh,dh
  412e96:	in     eax,dx
  412e97:	test   al,0x28
  412e99:	jnp    0x412ea5
  412e9b:	mov    esi,0xf18b2dea
  412ea0:	ins    DWORD PTR es:[edi],dx
  412ea1:	stos   DWORD PTR es:[edi],eax
  412ea2:	sub    dh,BYTE PTR [ecx-0xf933e73]
  412ea8:	das    
  412ea9:	inc    esi
  412eaa:	test   DWORD PTR [eax+0x5a7c7ed9],esp
  412eb0:	lods   eax,DWORD PTR ds:[esi]
  412eb1:	cmp    BYTE PTR [ecx+0x22],ah
  412eb4:	push   ebx
  412eb5:	mov    ch,0xd3
  412eb7:	mov    ecx,0x5a4ebd98
  412ebc:	(bad)  [ebx+0x3bc88be7]
  412ec2:	dec    esp
  412ec3:	dec    ebx
  412ec4:	in     al,0x3d
  412ec6:	(bad)  
  412ec7:	mov    dh,0x51
  412ec9:	mov    al,ds:0x39cd6778
  412ece:	adc    edi,esi
  412ed0:	shr    DWORD PTR [eax+0x11],0xf4
  412ed4:	pop    edx
  412ed5:	retf   
  412ed6:	leave  
  412ed7:	add    DWORD PTR [edi+0xc6f8d17],0xffffffb1
  412ede:	or     cl,dh
  412ee0:	dec    ebx
  412ee1:	gs test al,0xbf
  412ee4:	xor    eax,0x347a89e9
  412ee9:	add    ah,BYTE PTR [edx+0x41]
  412eec:	or     BYTE PTR [edx-0x2d5d91a0],cl
  412ef2:	in     eax,dx
  412ef3:	shl    ch,0xf6
  412ef6:	outs   dx,DWORD PTR ds:[esi]
  412ef7:	cmp    eax,0xee12649e
  412efc:	inc    ecx
  412efd:	imul   ecx,DWORD PTR [ecx],0x67
  412f00:	dec    ebx
  412f01:	in     al,dx
  412f02:	(bad)  
  412f04:	and    ecx,eax
  412f06:	and    ebp,DWORD PTR [esi+0x47]
  412f09:	je     0x412ea5
  412f0b:	sub    BYTE PTR [edx+0x74],0x6f
  412f0f:	xchg   ebx,eax
  412f10:	inc    edx
  412f11:	sub    BYTE PTR fs:[eax+eax*4-0x2c],0x85
  412f17:	outs   dx,DWORD PTR ds:[esi]
  412f18:	adc    al,BYTE PTR [edx]
  412f1a:	and    al,0x50
  412f1c:	stos   DWORD PTR es:[edi],eax
  412f1d:	shl    BYTE PTR [ecx+edi*2+0x33],1
  412f21:	retf   
  412f22:	mov    eax,0x76764f50
  412f27:	test   al,bl
  412f29:	fimul  DWORD PTR [ebx]
  412f2b:	sub    ch,BYTE PTR cs:[ebx-0x6b]
  412f2f:	push   0x29
  412f31:	pop    ds
  412f32:	mov    ch,0x75
  412f34:	ins    DWORD PTR es:[edi],dx
  412f35:	aam    0xbd
  412f37:	lods   al,BYTE PTR ds:[esi]
  412f38:	stos   BYTE PTR es:[edi],al
  412f39:	jnp    0x412f91
  412f3b:	scas   al,BYTE PTR es:[edi]
  412f3c:	xor    ecx,eax
  412f3e:	je     0x412f91
  412f40:	arpl   bx,bx
  412f42:	xchg   esi,eax
  412f43:	mov    ds,WORD PTR [ebp-0x72]
  412f46:	jbe    0x412f63
  412f48:	leave  
  412f49:	fcomp  st(3)
  412f4b:	test   eax,0x640e1d1d
  412f50:	inc    BYTE PTR [esi+0x168fc7a9]
  412f56:	sbb    ch,dl
  412f58:	push   edi
  412f59:	sbb    esp,eax
  412f5b:	lds    ecx,FWORD PTR [esi+0x5c24b907]
  412f61:	inc    ebp
  412f62:	popw   ss
  412f64:	cdq    
  412f65:	lock sti 
  412f67:	fistp  WORD PTR ds:0x4fd51afe
  412f6d:	sbb    BYTE PTR [edi+0x205c20a4],dh
  412f73:	scas   eax,DWORD PTR es:[edi]
  412f74:	push   es
  412f75:	(bad)  
  412f76:	fst    QWORD PTR ds:0x8391086
  412f7c:	(bad)  
  412f7d:	fidiv  DWORD PTR [esi+0x71]
  412f80:	and    DWORD PTR [ecx-0x43],esi
  412f83:	mov    ds:0x586917e6,eax
  412f88:	gs xchg ebx,eax
  412f8a:	cld    
  412f8b:	cmp    edi,DWORD PTR [edx+0x1a6ea899]
  412f91:	add    esp,ebx
  412f93:	jmp    0x4a9112c0
  412f98:	cmp    esp,DWORD PTR [esi]
  412f9a:	jle    0x412feb
  412f9c:	outs   dx,BYTE PTR ds:[esi]
  412f9d:	(bad)  
  412f9e:	int    0xe8
  412fa0:	lock xor al,0xef
  412fa3:	daa    
  412fa4:	call   0xdff1:0x6796dba4
  412fab:	test   DWORD PTR gs:[ebx],ebp
  412fae:	mov    ds:0x9e6db0c2,eax
  412fb3:	fs inc eax
  412fb5:	mov    dl,BYTE PTR [edi+0x5a]
  412fb8:	xchg   esp,eax
  412fb9:	pop    edx
  412fba:	mov    ch,0xaf
  412fbc:	mov    dh,0xb0
  412fbe:	adc    BYTE PTR ds:0x64fff8e9,0x22
  412fc5:	mov    bl,0xb7
  412fc7:	inc    esi
  412fc8:	pop    ebp
  412fc9:	dec    ebp
  412fca:	sub    DWORD PTR [esi],esp
  412fcc:	stc    
  412fcd:	dec    edx
  412fce:	or     BYTE PTR [edx],bl
  412fd0:	sub    esp,esp
  412fd2:	adc    cl,BYTE PTR [edx+0x68]
  412fd5:	adc    dh,BYTE PTR [ebx]
  412fd7:	ins    DWORD PTR es:[edi],dx
  412fd8:	xor    DWORD PTR fs:[eax],0x6
  412fdc:	or     DWORD PTR [ebx-0x4ade25c2],0x5d
  412fe3:	fndisi(8087 only) 
  412fe5:	mov    ds:0x954a25dd,eax
  412fea:	vshufps ymm0,ymm0,YMMWORD PTR [ebx-0x5e],0xe7
  412ff0:	xor    eax,0x14eb31b5
  412ff5:	push   ebp
  412ff6:	(bad)  
  412ff7:	sar    BYTE PTR [esp+eax*8],0x60
  412ffb:	iret   
  412ffc:	jno    0x41304b
  412ffe:	mov    al,ds:0xc559bae0
  413003:	std    
  413004:	imul   ebx,DWORD PTR [edi-0x49],0x43
  413008:	jb     0x413069
  41300a:	xor    ebp,DWORD PTR [ecx+0x4aee9396]
  413010:	jg     0x41300a
  413012:	fcom   QWORD PTR [esi+0x1f]
  413015:	icebp  
  413016:	data16 shr BYTE PTR [edx],cl
  413019:	jg     0x413095
  41301b:	sub    DWORD PTR [ebx+0x17],esi
  41301e:	xchg   BYTE PTR [esi],bh
  413020:	inc    eax
  413021:	inc    ebp
  413022:	jo     0x41301e
  413024:	mov    DWORD PTR [esi+0x143a8f6b],eax
  41302a:	or     eax,0x21e2e141
  41302f:	(bad)
  413033:	rcl    al,cl
  413035:	shl    DWORD PTR [edx-0x1c983a16],cl
  41303b:	(bad)  
  41303c:	gs sub ch,dl
  41303f:	lock push ss
  413041:	icebp  
  413042:	mov    edi,0xb4773437
  413047:	das    
  413048:	inc    edi
  413049:	inc    edx
  41304a:	and    DWORD PTR [esi+0x16],eax
  41304d:	popf   
  41304e:	sbb    BYTE PTR [ecx],cl
  413050:	es loope 0x4130a1
  413053:	xor    edi,ecx
  413055:	add    BYTE PTR [edi+0x167fb046],al
  41305b:	aad    0xde
  41305d:	(bad)  
  41305e:	icebp  
  41305f:	retf   
  413060:	push   ds
  413061:	sbb    eax,0xfb9503c7
  413066:	fldcw  WORD PTR [ecx+0x17005d9f]
  41306c:	dec    ebx
  41306d:	(bad)  
  41306f:	jmp    0x97a52ce7
  413074:	mov    al,0x15
  413076:	or     eax,0x994b4eef
  41307b:	jmp    0x3e422175
  413080:	popf   
  413081:	and    ecx,ebx
  413083:	jns    0x4130c8
  413085:	ror    BYTE PTR [edi-0x41],1
  413088:	out    0x2d,al
  41308a:	call   0xde94:0xfd037e62
  413091:	adc    BYTE PTR [ebx+0x388ec1fe],al
  413097:	mov    ebp,0xf6ad68f3
  41309c:	and    dl,BYTE PTR [edi+0x237bde6]
  4130a2:	jp     0x413105
  4130a4:	mov    edi,0xb906db7a
  4130a9:	mov    BYTE PTR [ebx+0x3a],cl
  4130ac:	fistp  QWORD PTR [ebp+0x60]
  4130af:	das    
  4130b0:	out    dx,al
  4130b1:	or     edx,DWORD PTR [ecx+0x63f9d61c]
  4130b7:	push   ecx
  4130b8:	jmp    0x413076
  4130ba:	outs   dx,BYTE PTR ds:[esi]
  4130bb:	xchg   edi,eax
  4130bc:	or     eax,0x62face0f
  4130c1:	out    0x80,eax
  4130c3:	mov    dl,BYTE PTR [ecx]
  4130c5:	fist   WORD PTR [eax+ecx*2]
  4130c8:	mov    ch,0x43
  4130ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130cb:	mov    eax,ds:0x3588a95d
  4130d0:	add    al,ch
  4130d2:	pushf  
  4130d3:	stc    
  4130d4:	dec    edx
  4130d5:	fsub   DWORD PTR [ecx-0x61]
  4130d8:	inc    ecx
  4130d9:	xor    al,0x87
  4130db:	dec    ecx
  4130dc:	cld    
  4130dd:	bound  esi,QWORD PTR [ecx+0x7e5f017c]
  4130e3:	aaa    
  4130e4:	adc    eax,0x2e8e6c68
  4130e9:	xor    cl,BYTE PTR [edi-0x4b]
  4130ec:	(bad)  
  4130ed:	nop
  4130ee:	add    BYTE PTR [eax+edi*1-0xf],0x1b
  4130f3:	xor    eax,0x140a5dae
  4130f8:	and    eax,0x8c5dc3c7
  4130fd:	stc    
  4130fe:	call   0xadfe:0x72496d21
  413105:	repz in eax,dx
  413107:	add    bh,bl
  413109:	(bad)  
  41310a:	xchg   ecx,eax
  41310b:	std    
  41310c:	mov    esp,0xb5e59378
  413111:	imul   esi,DWORD PTR [ecx+0x1e3b7448],0x4893b1a6
  41311b:	xchg   esp,eax
  41311c:	jb     0x41310f
  41311e:	xor    eax,0xa8a790db
  413123:	xor    BYTE PTR [edx-0x19be2ac0],bh
  413129:	ss jb  0x41310c
  41312c:	test   BYTE PTR ss:[ebx+0x72],0xb8
  413131:	sub    al,BYTE PTR [edx+eax*1+0x51]
  413135:	jns    0x413106
  413137:	fdivr  QWORD PTR [eax-0x4f3f4c36]
  41313d:	popf   
  41313e:	adc    ebx,DWORD PTR [esi+0xd]
  413141:	push   0xee305065
  413146:	xchg   edi,eax
  413147:	pushf  
  413148:	xor    DWORD PTR [ecx-0x4e],eax
  41314b:	pop    esp
  41314c:	sub    DWORD PTR [esi-0x23d4ed78],0x666fe4fc
  413156:	sub    eax,0xecb2aab9
  41315b:	lahf   
  41315c:	and    eax,0xc7435587
  413161:	or     DWORD PTR ss:[esi],0x50
  413165:	dec    BYTE PTR gs:[ebp+0x52]
  413169:	lods   eax,DWORD PTR ds:[esi]
  41316a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41316b:	loope  0x413189
  41316d:	push   eax
  41316e:	(bad)  
  41316f:	cmp    DWORD PTR [edx+0x780c0f5b],eax
  413175:	bswap  edi
  413177:	mov    bh,0x9f
  413179:	inc    ebp
  41317a:	sub    esi,0x3629fe2f
  413180:	xchg   cl,al
  413182:	retf   0x2dfe
  413185:	mov    eax,ds:0xac8844ce
  41318a:	cld    
  41318b:	cmp    ebx,DWORD PTR [edx]
  41318d:	rcr    DWORD PTR [eax+0x172afeec],1
  413193:	and    edx,DWORD PTR [ecx-0x4b]
  413196:	test   al,0x6b
  413198:	lods   eax,DWORD PTR ds:[esi]
  413199:	pop    ecx
  41319a:	ficomp DWORD PTR ds:0xf0d325e7
  4131a0:	jne    0x413149
  4131a2:	sbb    ebp,DWORD PTR [ebx-0x66]
  4131a5:	mov    esp,0xfb439e99
  4131aa:	sub    eax,DWORD PTR [edx]
  4131ac:	pusha  
  4131ad:	pop    ebx
  4131ae:	pop    esi
  4131af:	mov    eax,ds:0x9ab3e73
  4131b4:	sbb    ch,BYTE PTR cs:[ebp-0x49]
  4131b8:	stos   DWORD PTR es:[edi],eax
  4131b9:	les    ebx,FWORD PTR [esi+eiz*1]
  4131bc:	clc    
  4131bd:	sub    eax,0xcf1822dd
  4131c2:	sub    BYTE PTR [esi],bl
  4131c4:	jae    0x413160
  4131c6:	push   edi
  4131c7:	call   0x6692:0x226a4213
  4131ce:	je     0x413220
  4131d0:	popf   
  4131d1:	sbb    al,BYTE PTR [ebx]
  4131d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131d4:	pop    ss
  4131d5:	jns    0x413171
  4131d7:	mov    dl,0x3e
  4131d9:	xor    al,BYTE PTR [esi+0x5c8232b3]
  4131df:	lods   eax,DWORD PTR ds:[esi]
  4131e0:	jecxz  0x4131ed
  4131e2:	jp     0x413213
  4131e4:	jb     0x41325b
  4131e6:	sti    
  4131e7:	jnp    0x41321c
  4131e9:	ins    DWORD PTR es:[edi],dx
  4131ea:	call   0x42c48bd2
  4131ef:	es xor al,0xa3
  4131f2:	outs   dx,DWORD PTR ds:[esi]
  4131f3:	xchg   esi,eax
  4131f4:	pushf  
  4131f5:	ret    
  4131f6:	and    eax,0x8c89f636
  4131fb:	in     al,0x15
  4131fd:	xor    DWORD PTR ds:0xea2f405b,0x19
  413204:	dec    esp
  413205:	in     eax,dx
  413206:	or     DWORD PTR [edx],edi
  413208:	cmp    BYTE PTR [edx+0x1c],0xeb
  41320c:	mov    edx,0x2ba70c14
  413211:	fcom   QWORD PTR [ecx+0x24]
  413214:	sbb    al,0xe6
  413216:	out    dx,eax
  413217:	push   edi
  413218:	xchg   WORD PTR [ebx+0x12],ax
  41321c:	(bad)  
  41321d:	xor    DWORD PTR [esi+0x33bfdb6d],edi
  413223:	mov    cl,0xf7
  413225:	adc    bh,al
  413227:	push   0xffffffe4
  413229:	cwde   
  41322a:	ret    0x2231
  41322d:	or     al,0x29
  41322f:	lock es dec esi
  413232:	dec    esi
  413233:	mov    bl,ch
  413235:	add    DWORD PTR [edx],esi
  413237:	add    ebx,ebx
  413239:	sub    eax,0x1025f7fa
  41323e:	repnz gs scas eax,DWORD PTR es:[edi]
  413241:	std    
  413242:	stos   BYTE PTR es:[edi],al
  413243:	neg    DWORD PTR [edx+0x30]
  413246:	cmp    esp,esp
  413248:	call   0xd80c970d
  41324d:	cs cwde 
  41324f:	out    dx,al
  413250:	je     0x413217
  413252:	call   0xdfab:0xd0c3123a
  413259:	pop    ebx
  41325a:	cmp    al,0xa0
  41325c:	test   BYTE PTR [edx+0x76ad6a53],0x45
  413263:	call   0x49373dcc
  413268:	dec    esp
  413269:	lds    ecx,FWORD PTR [edi-0x4ca00418]
  41326f:	inc    ebp
  413270:	fldenv [edi+0xb1bebe4]
  413276:	jl     0x413237
  413278:	dec    ecx
  413279:	lods   al,BYTE PTR ds:[esi]
  41327a:	mov    dh,0xae
  41327c:	test   eax,0x601d4efb
  413281:	nop
  413282:	les    ebp,FWORD PTR [edi+0x32d2c7d1]
  413288:	stc    
  413289:	pop    ecx
  41328a:	in     eax,0xf
  41328c:	sub    ch,BYTE PTR [edi+0x5f3489d0]
  413292:	xchg   ecx,eax
  413293:	mov    ecx,0x61e53b03
  413298:	fld    QWORD PTR [edx-0x80]
  41329b:	mov    ds:0x299c508f,al
  4132a0:	mov    DWORD PTR [esi-0x7a],edi
  4132a3:	out    dx,eax
  4132a4:	adc    DWORD PTR [edi+0x39],edi
  4132a7:	sti    
  4132a8:	dec    ecx
  4132a9:	ja     0x413315
  4132ab:	push   ds
  4132ac:	rcr    BYTE PTR [ebx],cl
  4132ae:	mov    dl,0x4a
  4132b0:	jno    0x4132b9
  4132b2:	daa    
  4132b3:	in     al,dx
  4132b4:	jecxz  0x41323d
  4132b6:	sbb    dl,cl
  4132b8:	call   0x91652923
  4132bd:	dec    esp
  4132be:	mov    ds:0xe768e8f1,eax
  4132c3:	xor    eax,0xcca644c7
  4132c8:	mov    WORD PTR [edx+0x28],fs
  4132cb:	scas   al,BYTE PTR es:[edi]
  4132cc:	jecxz  0x4132f4
  4132ce:	mov    eax,0x3dd81cf3
  4132d3:	jecxz  0x413319
  4132d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132d6:	xchg   ebp,eax
  4132d7:	mov    edx,0x3acfb0c3
  4132dc:	push   ebx
  4132dd:	int3   
  4132de:	loope  0x41327f
  4132e0:	and    al,0x5d
  4132e2:	bt     esp,0x58
  4132e6:	xlat   BYTE PTR ds:[ebx]
  4132e7:	mov    WORD PTR [eax+ebp*2],?
  4132ea:	in     al,dx
  4132eb:	cmp    BYTE PTR [ebp+0x646d493e],ah
  4132f1:	mov    ecx,0x75132b95
  4132f6:	mov    ebx,0xc59c5ed0
  4132fb:	test   eax,0x212159cb
  413300:	adc    al,0x84
  413302:	call   0x33c:0xeb82c41d
  413309:	frstor [eax-0xd5e03ee]
  41330f:	cli    
  413310:	cmp    cl,BYTE PTR [esi+0x55]
  413313:	test   DWORD PTR [eax+0x5aca6341],ecx
  413319:	pop    edi
  41331a:	(bad)
  41331e:	mov    esi,0xc7b62f83
  413323:	sub    DWORD PTR [esi],ebp
  413325:	mov    ah,0xcb
  413327:	dec    esp
  413328:	sti    
  413329:	fwait
  41332a:	in     al,dx
  41332b:	aad    0x35
  41332d:	inc    edx
  41332e:	es jmp 0x4132c3
  413331:	xchg   edx,eax
  413332:	stc    
  413333:	and    BYTE PTR [eax-0x4],bh
  413336:	add    edx,DWORD PTR [eax-0x2b]
  413339:	jo     0x413306
  41333b:	stos   DWORD PTR es:[edi],eax
  41333c:	das    
  41333d:	into   
  41333e:	dec    eax
  41333f:	push   ebx
  413340:	and    bh,BYTE PTR [ebp+0x16203bf7]
  413346:	sbb    BYTE PTR [edi+0x6],0xc
  41334a:	mov    eax,0x36a0990b
  41334f:	ins    DWORD PTR es:[edi],dx
  413350:	add    edx,DWORD PTR [ecx]
  413352:	cmc    
  413353:	mov    cl,0x9f
  413355:	rol    bl,cl
  413357:	das    
  413358:	cmp    eax,DWORD PTR [esi+0x27028f50]
  41335e:	hlt    
  41335f:	iret   
  413360:	xor    DWORD PTR [ecx],edx
  413362:	outs   dx,DWORD PTR ds:[esi]
  413363:	adc    BYTE PTR [esi+0x6fa194f4],ch
  413369:	test   DWORD PTR [ebx-0x76],0x4c0b683
  413370:	stos   DWORD PTR es:[edi],eax
  413371:	dec    edx
  413372:	ret    
  413373:	cmp    esi,esp
  413375:	sbb    ah,BYTE PTR [eax-0x53]
  413378:	sbb    DWORD PTR [ebx-0x14],ebp
  41337b:	mov    dh,0x80
  41337d:	or     ah,BYTE PTR [ebx-0x59]
  413380:	mov    bh,0x52
  413382:	lds    ebp,FWORD PTR [edi-0x6d]
  413385:	mov    cl,0xc9
  413387:	js     0x413366
  413389:	shl    DWORD PTR ds:0x62405a3a,cl
  41338f:	bound  ecx,QWORD PTR [ecx+ebp*8+0xfc841c5]
  413396:	ins    DWORD PTR es:[edi],dx
  413397:	xchg   BYTE PTR [edi+0x2a],bl
  41339a:	mov    bh,0xd5
  41339c:	add    eax,0x7cb7cb71
  4133a1:	dec    edi
  4133a2:	es inc ebx
  4133a4:	std    
  4133a5:	ja     0x4133b1
  4133a7:	add    cl,0x16
  4133aa:	outs   dx,DWORD PTR ds:[esi]
  4133ab:	jne    0x413409
  4133ad:	mov    DWORD PTR [ebx],edi
  4133af:	pop    eax
  4133b0:	adc    al,0x16
  4133b2:	and    DWORD PTR [esi],0x2facd6fb
  4133b8:	jmp    0x8802:0xa36a6ccc
  4133bf:	aad    0x99
  4133c1:	ins    BYTE PTR es:[edi],dx
  4133c2:	dec    ebx
  4133c3:	das    
  4133c4:	sar    BYTE PTR [eax+0x59],cl
  4133c7:	xor    eax,0x9be21d93
  4133cc:	test   eax,edx
  4133ce:	xor    al,0x75
  4133d0:	lods   al,BYTE PTR ds:[esi]
  4133d1:	xor    al,0xc9
  4133d3:	mov    ecx,0x4feb6373
  4133d8:	pop    ebx
  4133d9:	push   0x73
  4133db:	int3   
  4133dc:	push   ds
  4133dd:	xor    al,0x52
  4133df:	fisttp DWORD PTR [edx]
  4133e1:	xchg   esp,eax
  4133e2:	push   edi
  4133e3:	xchg   ebp,eax
  4133e4:	clc    
  4133e5:	cmp    al,0x25
  4133e7:	sbb    al,0xf3
  4133e9:	add    eax,0xbe6b53ff
  4133ee:	push   edx
  4133ef:	add    BYTE PTR [esi+0x24],ah
  4133f2:	inc    ebx
  4133f3:	xchg   ebp,eax
  4133f4:	adc    DWORD PTR [ecx],0x66e02a74
  4133fa:	jne    0x413392
  4133fc:	and    BYTE PTR [ebp-0x5c80a36d],bl
  413402:	xchg   esp,eax
  413403:	aas    
  413404:	or     BYTE PTR ds:0xc7ed9522,cl
  41340a:	imul   ebp,DWORD PTR [ecx],0x73593fa5
  413410:	int    0x9f
  413412:	aas    
  413413:	retf   0x738c
  413416:	sbb    DWORD PTR [ebp-0x75971f0d],esi
  41341c:	dec    esp
  41341d:	sub    bl,ah
  41341f:	and    DWORD PTR [ebx],ebx
  413421:	outs   dx,BYTE PTR ds:[esi]
  413422:	cmp    eax,0x795d2f57
  413427:	pop    esp
  413428:	sbb    cl,BYTE PTR [esi]
  41342a:	push   esi
  41342b:	jns    0x4133e7
  41342d:	jbe    0x41342a
  41342f:	push   0xffffffb7
  413431:	int    0xbc
  413433:	lods   eax,DWORD PTR ds:[esi]
  413434:	test   eax,0xa98233ae
  413439:	sti    
  41343a:	adc    ch,BYTE PTR [ecx+0x6674a2f9]
  413440:	cli    
  413441:	loopne 0x4134a1
  413443:	jb     0x413447
  413445:	push   ss
  413446:	push   edx
  413447:	enter  0xd8cd,0xbd
  41344b:	jb     0x4134c5
  41344d:	test   edi,ecx
  41344f:	pop    eax
  413450:	pop    esi
  413451:	call   0x5d680624
  413456:	sub    dh,ch
  413458:	test   ch,bl
  41345a:	out    0x40,al
  41345c:	jne    0x4134ce
  41345e:	pop    eax
  41345f:	test   BYTE PTR [edi-0x45],al
  413462:	jge    0x4134e1
  413464:	mov    ch,BYTE PTR [ebx-0x60]
  413467:	dec    ebx
  413468:	sub    BYTE PTR [ecx-0x12cf1fb2],bl
  41346e:	jle    0x413467
  413470:	repz pop edx
  413472:	and    DWORD PTR [edx-0x1125c07f],ecx
  413478:	cld    
  413479:	fcom   QWORD PTR [edx-0x48]
  41347c:	xchg   esp,eax
  41347d:	jmp    0x155e:0xc6a49fd9
  413484:	call   0x622a4293
  413489:	push   ecx
  41348a:	daa    
  41348b:	mov    edx,0xd785c1b5
  413490:	stos   DWORD PTR es:[edi],eax
  413491:	cmp    BYTE PTR ds:0xb1f2fd81,al
  413497:	mov    dh,0x6c
  413499:	rcr    edi,0xad
  41349c:	push   ecx
  41349d:	mov    ebp,0x60352f4d
  4134a2:	xlat   BYTE PTR ds:[ebx]
  4134a3:	imul   edi,eax,0xffffff90
  4134a6:	pop    esp
  4134a7:	mov    dl,0x19
  4134a9:	fwait
  4134aa:	rcl    DWORD PTR [ebp+0x40],cl
  4134ad:	and    dl,BYTE PTR [ebx+eiz*2+0x45]
  4134b1:	hlt    
  4134b2:	sbb    bh,bl
  4134b4:	or     esi,edx
  4134b6:	cli    
  4134b7:	test   BYTE PTR [esi-0x2c],ah
  4134ba:	push   ebp
  4134bb:	les    esp,FWORD PTR [ecx+edi*1]
  4134be:	sub    eax,0x2225bd11
  4134c3:	test   DWORD PTR [eax],esp
  4134c5:	or     DWORD PTR [esp+edx*2],edx
  4134c8:	and    bh,BYTE PTR [edx+0x4]
  4134cb:	arpl   WORD PTR [ebp-0x44],cx
  4134ce:	call   0x26f0:0x4bdb3616
  4134d5:	cmp    BYTE PTR [ecx*8+0x154c9a66],0x49
  4134dd:	fwait
  4134de:	sbb    eax,0x3eac1b46
  4134e3:	xchg   DWORD PTR [edi-0x3620ca00],eax
  4134e9:	mov    gs,WORD PTR [ebp+0x32c9f041]
  4134ef:	test   al,0xc2
  4134f1:	sahf   
  4134f2:	mov    cs,esi
  4134f4:	pop    ss
  4134f5:	lock mov ecx,0x75920076
  4134fb:	fwait
  4134fc:	mov    BYTE PTR [esi],dl
  4134fe:	es pop ebx
  413500:	lods   al,BYTE PTR ds:[esi]
  413501:	mov    ebx,DWORD PTR [edi+0x27]
  413504:	pop    edx
  413505:	rcl    DWORD PTR [edi+0x4f746420],0x8b
  41350c:	jle    0x41354f
  41350e:	mov    dl,0xd8
  413510:	pop    ds
  413511:	xchg   ecx,eax
  413512:	outs   dx,BYTE PTR ds:[esi]
  413513:	xor    al,0xd
  413515:	outs   dx,DWORD PTR ds:[esi]
  413516:	mov    cl,0x99
  413518:	lods   al,BYTE PTR ds:[esi]
  413519:	xor    eax,0x1fc7c7a9
  41351e:	push   es
  41351f:	jmp    0xccc8:0x7940ef48
  413526:	adc    DWORD PTR [ebx-0x2ffdfdeb],esi
  41352c:	pop    ecx
  41352d:	int3   
  41352e:	sar    DWORD PTR [ecx-0x7f739613],cl
  413534:	xchg   esp,eax
  413535:	pop    ss
  413536:	xchg   BYTE PTR [eax+0x28],al
  413539:	inc    edx
  41353a:	add    eax,0xb4135eaa
  41353f:	push   edx
  413540:	add    bh,BYTE PTR [edx+ebx*4]
  413543:	loopne 0x413548
  413545:	pop    edi
  413546:	test   BYTE PTR [ebx+0x7e6e42ce],ah
  41354c:	ret    
  41354d:	test   BYTE PTR [ebp+eax*8+0x6f],dl
  413551:	or     eax,0x7a71f8c
  413556:	mov    edi,0x5dc3b29d
  41355b:	pop    ss
  41355c:	mov    al,0x8e
  41355e:	push   0xe9920327
  413563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413564:	cmp    bl,ah
  413566:	mov    al,0x1b
  413568:	rcl    BYTE PTR [esp+eax*2-0x2b],1
  41356c:	shl    BYTE PTR [ebx-0x32ee5050],0x16
  413573:	jb     0x41350e
  413575:	jae    0x4135b9
  413577:	push   ds
  413578:	sub    al,0xa
  41357a:	and    eax,0x66
  41357d:	push   ss
  41357e:	xor    BYTE PTR [ecx-0x5d],al
  413581:	cmp    dl,BYTE PTR [edi-0x63]
  413584:	sbb    al,0x69
  413586:	cs repnz or eax,0xa3768d5a
  41358d:	inc    ebx
  41358e:	push   cs
  41358f:	fstp   TBYTE PTR ds:0xcf6741ee
  413595:	lds    ebp,FWORD PTR [eax-0x65f9d248]
  41359b:	and    ebx,DWORD PTR [eax+0x6f]
  41359e:	fst    DWORD PTR [edi+0x33ef8426]
  4135a4:	icebp  
  4135a5:	xchg   BYTE PTR [edi],al
  4135a7:	jno    0x413546
  4135a9:	and    BYTE PTR [esp+eiz*2+0x7],bh
  4135ad:	cmp    eax,0x18d852
  4135b2:	arpl   WORD PTR ds:0xdd391fd0,bp
  4135b8:	xchg   BYTE PTR [eax],dl
  4135ba:	mov    bl,0x2a
  4135bc:	mov    bl,0x45
  4135be:	loop   0x413578
  4135c0:	imul   edx,DWORD PTR [ebx+0x23ea69e6],0x55
  4135c7:	cwde   
  4135c8:	and    bl,BYTE PTR [ecx-0x77]
  4135cb:	mov    dl,0xd6
  4135cd:	xchg   edx,eax
  4135ce:	xchg   edi,eax
  4135cf:	cmp    bl,dl
  4135d1:	std    
  4135d2:	xchg   ebp,eax
  4135d3:	or     eax,0x1d66bdcb
  4135d8:	inc    esi
  4135d9:	scas   al,BYTE PTR es:[edi]
  4135da:	xor    BYTE PTR [ebx+0x5a],cl
  4135dd:	ret    0xc473
  4135e0:	ret    
  4135e1:	or     al,0x17
  4135e3:	adc    DWORD PTR ds:0x8c023e53,eax
  4135e9:	mov    dh,0xd6
  4135eb:	xor    DWORD PTR [esi],ecx
  4135ed:	mov    ebx,0x5a28f0ed
  4135f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135f3:	call   0xab9d:0x9c1d4c08
  4135fa:	push   edx
  4135fb:	mov    edi,0x47e60192
  413600:	xor    al,0x98
  413602:	inc    edx
  413603:	mov    ecx,DWORD PTR [esi+0x65]
  413606:	pop    eax
  413607:	into   
  413608:	call   0xba71:0x4b5d51ab
  41360f:	inc    esi
  413610:	test   al,0xf9
  413612:	push   cs
  413613:	bound  ecx,QWORD PTR [edi+0x5ff366c9]
  413619:	mov    ah,0x9f
  41361b:	out    dx,eax
  41361c:	xchg   edx,eax
  41361d:	sub    dh,cl
  41361f:	xchg   edx,eax
  413620:	and    bl,BYTE PTR [esi+0x336da1e2]
  413626:	dec    ebp
  413627:	scas   al,BYTE PTR es:[edi]
  413628:	scas   eax,DWORD PTR es:[edi]
  413629:	mov    ebp,0xf392d2b9
  41362e:	mov    bl,0x99
  413630:	or     eax,DWORD PTR [esi]
  413632:	xchg   esp,eax
  413633:	test   ah,0x90
  413636:	fdiv   st,st(4)
  413638:	push   edi
  413639:	sbb    al,bl
  41363b:	cs dec edx
  41363d:	and    al,0xf5
  41363f:	add    DWORD PTR [eax+0x4],ebx
  413642:	imul   edi,DWORD PTR [ebx+0x20],0xffffffbd
  413646:	add    BYTE PTR [edx],bh
  413648:	push   esi
  413649:	inc    ebp
  41364a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41364b:	cmp    al,0x8f
  41364d:	sbb    esi,DWORD PTR [ecx+edi*2]
  413650:	popa   
  413651:	and    DWORD PTR [ebx],ebp
  413653:	inc    ebx
  413654:	mov    esi,0xd2ba4215
  413659:	mov    al,ds:0x18683e4f
  41365e:	push   edx
  41365f:	ret    0x5453
  413662:	pop    ss
  413663:	and    al,0x7b
  413665:	sub    al,0xa7
  413667:	mov    ds,WORD PTR [ebx-0x6e4e663d]
  41366d:	test   eax,0x83656f2
  413672:	jmp    0x413673
  413674:	xor    BYTE PTR [eax],dl
  413676:	push   cs
  413677:	or     eax,0x91d849b4
  41367c:	or     BYTE PTR [eax-0x66351ab1],0xd8
  413683:	adc    al,0x40
  413685:	or     BYTE PTR [ecx+0x4b],al
  413688:	je     0x41367d
  41368a:	ja     0x41364f
  41368c:	xchg   bh,ah
  41368e:	data16 arpl WORD PTR [edi-0x247be981],bx
  413695:	xlat   BYTE PTR ds:[ebx]
  413696:	jno    0x41361a
  413698:	jno    0x413711
  41369a:	scas   al,BYTE PTR es:[edi]
  41369b:	mov    edi,?
  41369d:	mov    edx,0xcaf19745
  4136a2:	jle    0x413667
  4136a4:	jl     0x4136ba
  4136a6:	jno    0x413641
  4136a8:	(bad)  
  4136a9:	leave  
  4136aa:	mov    esi,0x8ad6dfce
  4136af:	cmp    edx,esi
  4136b1:	sub    BYTE PTR [ecx],bh
  4136b3:	mov    esp,DWORD PTR [eax+0x329b8b4d]
  4136b9:	jecxz  0x4136e0
  4136bb:	fisttp DWORD PTR [ecx+0x804bb9d]
  4136c1:	mov    edi,0x349a470b
  4136c6:	push   esi
  4136c7:	fs ins BYTE PTR es:[edi],dx
  4136c9:	arpl   WORD PTR [ecx+0x44ac37c8],sp
  4136cf:	inc    eax
  4136d0:	add    al,0x51
  4136d2:	add    bh,BYTE PTR [edi+0x57]
  4136d5:	es inc edi
  4136d7:	icebp  
  4136d8:	int3   
  4136d9:	cmp    BYTE PTR [edx-0x2f],dh
  4136dc:	cmp    ebp,esp
  4136de:	fidivr DWORD PTR [ecx-0x58bdeffa]
  4136e4:	ja     0x4136a3
  4136e6:	lods   eax,DWORD PTR ds:[esi]
  4136e7:	mov    esp,0x76800057
  4136ec:	jge    0x413717
  4136ee:	add    al,0xfb
  4136f0:	push   ebx
  4136f1:	jp     0x4136bc
  4136f3:	popa   
  4136f4:	(bad)  
  4136f5:	loope  0x413689
  4136f7:	lahf   
  4136f8:	mov    dh,0x9a
  4136fa:	adc    al,0xde
  4136fc:	mov    ebp,0x157b99de
  413701:	push   ebp
  413702:	pop    esi
  413703:	cmp    al,0xda
  413705:	stos   DWORD PTR es:[edi],eax
  413706:	sub    ecx,DWORD PTR [ebp-0x3b5c4bf8]
  41370c:	dec    edx
  41370d:	(bad)  
  41370e:	in     eax,dx
  41370f:	stos   DWORD PTR es:[edi],eax
  413710:	dec    ebx
  413711:	xchg   esp,eax
  413712:	cmc    
  413713:	clc    
  413714:	pop    ebp
  413715:	jns    0x413722
  413717:	adc    dh,bl
  413719:	mov    bl,0xce
  41371b:	adc    bl,BYTE PTR [edx-0x320cb41c]
  413721:	add    al,0x7
  413724:	sbb    DWORD PTR [edx],ebp
  413726:	aaa    
  413727:	xchg   ebp,eax
  413728:	fistp  WORD PTR [eax]
  41372a:	sub    eax,0xb59c0278
  41372f:	fs leave 
  413731:	fimul  WORD PTR [edx-0x51]
  413734:	fdivr  QWORD PTR [edi]
  413736:	mov    al,ch
  413738:	mov    bl,0x38
  41373a:	pop    ebx
  41373b:	jl     0x4137af
  41373d:	div    BYTE PTR [esi-0x4a643120]
  413743:	pop    ecx
  413744:	fbld   TBYTE PTR [ecx]
  413746:	mov    dl,0xe2
  413748:	fld    st(3)
  41374a:	out    0xb4,eax
  41374c:	push   ebx
  41374d:	cmp    eax,0x2c25bfe
  413752:	je     0x413783
  413754:	ds dec eax
  413756:	mov    al,ds:0xae439b41
  41375b:	mov    ds:0xbae48f37,eax
  413760:	mov    ebx,0xa4b1498b
  413765:	adc    esi,ecx
  413767:	out    0xe3,al
  413769:	je     0x4137c3
  41376b:	inc    edi
  41376c:	and    al,0xa7
  41376e:	mov    dl,0xed
  413770:	inc    eax
  413771:	jno    0x413734
  413773:	mov    bh,0x5
  413775:	pop    ecx
  413776:	and    BYTE PTR [eax+0x1eee3736],bh
  41377c:	(bad)  [edi+0x6dd1b595]
  413782:	fidivr DWORD PTR [esi-0x193279a0]
  413788:	xchg   edx,eax
  413789:	dec    esi
  41378a:	lods   al,BYTE PTR ds:[esi]
  41378b:	leave  
  41378c:	das    
  41378d:	call   0x121c6a56
  413792:	call   0x94a4:0x6abdb105
  413799:	nop
  41379a:	add    dl,BYTE PTR [ebx-0x72cbe208]
  4137a0:	xchg   esp,eax
  4137a1:	pop    es
  4137a2:	xchg   edx,edi
  4137a4:	add    esi,eax
  4137a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137a7:	mov    al,ds:0xc1048bb
  4137ac:	lods   eax,DWORD PTR ds:[esi]
  4137ad:	sti    
  4137ae:	or     al,0xf0
  4137b0:	ret    
  4137b1:	push   ds
  4137b2:	cdq    
  4137b3:	pop    esp
  4137b4:	inc    ebp
  4137b5:	cmp    ebx,DWORD PTR [edi]
  4137b7:	jbe    0x4137e0
  4137b9:	imul   ebx,DWORD PTR [edi],0xffffffcf
  4137bc:	fidivr DWORD PTR [esi-0x4e]
  4137bf:	pusha  
  4137c0:	out    dx,al
  4137c1:	in     al,dx
  4137c2:	sub    DWORD PTR [edx],ebp
  4137c4:	pop    ebx
  4137c5:	jg     0x4137fd
  4137c7:	gs mov edx,0xe309d2ae
  4137cd:	mov    ch,0xb7
  4137cf:	out    dx,eax
  4137d0:	push   0x16
  4137d2:	call   0x94e2:0x6214ffb2
  4137d9:	xchg   ebx,eax
  4137da:	lea    eax,[ebp-0x12]
  4137dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137de:	cdq    
  4137df:	out    dx,eax
  4137e0:	lods   al,BYTE PTR ds:[esi]
  4137e1:	inc    esi
  4137e2:	add    ecx,DWORD PTR [ecx-0x32]
  4137e5:	mov    ch,0x7
  4137e7:	fs gs dec si
  4137eb:	pushf  
  4137ec:	xlat   BYTE PTR ds:[ebx]
  4137ed:	dec    esi
  4137ee:	rcl    BYTE PTR [ebx+0x26],cl
  4137f1:	fdivrp st(3),st
  4137f3:	push   ecx
  4137f4:	and    edx,DWORD PTR [esi+0xbfed3d5]
  4137fa:	(bad)  
  4137fc:	ret    
  4137fd:	je     0x41381a
  4137ff:	div    dh
  413801:	mov    edx,0xa86d0aee
  413806:	push   ecx
  413807:	cmp    eax,0x41c94cba
  41380c:	mov    ah,0x87
  41380e:	test   al,0x7b
  413810:	cmp    ch,ch
  413812:	iret   
  413813:	cmp    al,0x46
  413815:	lahf   
  413816:	pop    ss
  413817:	dec    edi
  413818:	jp     0x413857
  41381a:	scas   al,BYTE PTR es:[edi]
  41381b:	outs   dx,DWORD PTR ds:[esi]
  41381c:	sub    bl,BYTE PTR [eax]
  41381e:	mov    eax,0x49cdf8
  413823:	repz xchg edx,eax
  413825:	mov    ebx,0x522940ce
  41382a:	sqrtps xmm1,XMMWORD PTR [esi+0xa]
  41382e:	arpl   WORD PTR [eax-0x21eb8f6d],cx
  413834:	mov    ecx,0x48e41161
  413839:	jo     0x413804
  41383b:	movhlps xmm4,xmm3
  41383e:	fisubr WORD PTR [eax+0x1f]
  413841:	and    esi,edi
  413843:	mov    WORD PTR [edx-0x1a9f7702],es
  413849:	dec    esi
  41384a:	dec    edx
  41384b:	jge    0x413852
  41384d:	sbb    edi,eax
  41384f:	dec    ecx
  413850:	scas   eax,DWORD PTR es:[edi]
  413851:	sub    ch,BYTE PTR [edi-0x6c]
  413854:	es ds add al,0x46
  413858:	lock popfw 
  41385b:	sub    DWORD PTR [edi],edi
  41385d:	cmc    
  41385e:	clc    
  41385f:	(bad)  
  413860:	sub    BYTE PTR [eax+ecx*4-0x4c],bh
  413864:	mov    bh,0x68
  413866:	in     al,0xe3
  413868:	lods   eax,DWORD PTR ds:[esi]
  413869:	shl    DWORD PTR [ebp+0x54e33ecb],1
  41386f:	lods   al,BYTE PTR ds:[esi]
  413870:	sub    dl,BYTE PTR [eax+edx*2-0x434eeb84]
  413877:	arpl   bp,ax
  413879:	pop    eax
  41387a:	into   
  41387b:	ret    0xba29
  41387e:	add    dl,ch
  413880:	in     eax,dx
  413881:	push   esi
  413882:	outs   dx,DWORD PTR ss:[esi]
  413884:	mov    ecx,0x8d518892
  413889:	add    al,0x54
  41388b:	daa    
  41388c:	mov    dl,0x14
  41388e:	xor    BYTE PTR [edi-0x7be96833],cl
  413894:	xor    DWORD PTR [ecx+0x58944e0b],eax
  41389a:	mov    ds:0xaeb072d7,al
  41389f:	ret    0x7a6b
  4138a2:	inc    esi
  4138a3:	in     eax,0xf2
  4138a5:	arpl   WORD PTR [edx+0x37],bx
  4138a8:	adc    BYTE PTR ds:0x8e4e3b64,al
  4138ae:	inc    ebp
  4138af:	in     eax,0x86
  4138b1:	adc    al,0x97
  4138b3:	inc    eax
  4138b4:	cdq    
  4138b5:	mul    BYTE PTR [edx]
  4138b7:	(bad)  
  4138b8:	mov    al,ds:0xadbb892d
  4138bd:	sbb    bl,BYTE PTR [eax+0x1586b015]
  4138c3:	mov    esp,ecx
  4138c5:	dec    ebp
  4138c6:	imul   ebx,eax,0x63
  4138c9:	(bad)  
  4138ca:	retf   0xcb39
  4138cd:	das    
  4138ce:	push   ss
  4138cf:	and    al,0xe2
  4138d1:	cs out dx,eax
  4138d3:	clc    
  4138d4:	lods   al,BYTE PTR ds:[esi]
  4138d5:	in     al,dx
  4138d6:	mov    eax,0x3dd5604e
  4138db:	or     eax,0xa2484a10
  4138e0:	fbstp  TBYTE PTR ds:0x9de1e4e8
  4138e6:	pop    edi
  4138e7:	push   eax
  4138e8:	sar    BYTE PTR [ecx-0x685892f1],0xda
  4138ef:	retf   0x79b0
  4138f2:	pushf  
  4138f3:	imul   edx,DWORD PTR ds:0x5d6c6c50,0xffffffc0
  4138fa:	mov    bh,0x20
  4138fc:	push   esi
  4138fd:	push   ss
  4138fe:	mov    ebp,0xdd34ff34
  413903:	popa   
  413904:	sar    DWORD PTR [ebx],cl
  413906:	mov    al,ds:0x6febeb3e
  41390b:	mov    edx,0x5a5561c8
  413910:	jnp    0x413948
  413912:	rcl    al,cl
  413914:	aas    
  413915:	cwde   
  413916:	in     al,0x3
  413918:	imul   esi,DWORD PTR [edi],0x3821e901
  41391e:	pop    ss
  41391f:	ja     0x4138da
  413921:	cmp    DWORD PTR [esi],edi
  413923:	sbb    eax,0x82a0b402
  413928:	dec    ebp
  413929:	mov    esi,0x71d22c13
  41392e:	or     al,0x54
  413930:	in     eax,dx
  413931:	jp     0x4139a0
  413933:	sbb    bl,BYTE PTR gs:[edx+esi*8]
  413937:	pusha  
  413938:	outs   dx,BYTE PTR ds:[esi]
  413939:	pop    ebx
  41393a:	test   eax,0x39e37b7b
  41393f:	jl     0x413969
  413941:	or     DWORD PTR [ecx],esi
  413943:	jb     0x413964
  413945:	dec    esi
  413946:	jmp    0x2851ea10
  41394b:	mov    ch,0x91
  41394d:	fistp  DWORD PTR [edx]
  41394f:	daa    
  413950:	mov    edx,0x8b7f5ceb
  413955:	jl     0x4138ea
  413957:	rcr    DWORD PTR ds:0x954be88b,1
  41395d:	sbb    ch,bl
  41395f:	sbb    DWORD PTR [esi+0x6c0751ae],0xf27e5c8f
  413969:	jno    0x41394f
  41396b:	mov    eax,0xfc34bcaf
  413970:	or     eax,0xf7a91399
  413975:	push   0x30
  413977:	mov    ebx,0xf00152b8
  41397c:	fs lock int 0xe7
  413980:	(bad)  
  413981:	ins    BYTE PTR es:[edi],dx
  413982:	sar    DWORD PTR [ebx],cl
  413984:	cmc    
  413985:	lods   eax,DWORD PTR ds:[esi]
  413986:	sub    ebx,esp
  413988:	dec    edx
  413989:	inc    ebx
  41398a:	dec    ebx
  41398b:	jg     0x4139c4
  41398d:	cmp    dh,BYTE PTR ds:0xc67254f3
  413993:	(bad)  
  413994:	mov    WORD PTR [ebx+0x7a],?
  413997:	jae    0x413972
  413999:	out    0x46,eax
  41399b:	test   al,0xda
  41399d:	jle    0x41392e
  41399f:	call   FWORD PTR [ebx-0x644590d6]
  4139a5:	aas    
  4139a6:	mov    ebp,0x35bcccb8
  4139ab:	dec    eax
  4139ac:	sbb    DWORD PTR [ebx-0xbdc3d1b],0xa9c38c98
  4139b6:	xchg   edx,eax
  4139b7:	dec    ebp
  4139b8:	fdivr  DWORD PTR [edi]
  4139ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139bb:	push   esi
  4139bc:	fwait
  4139bd:	jno    0x4139dc
  4139bf:	mov    ds:0xd5caff67,ax
  4139c5:	and    al,0xe8
  4139c7:	rcr    DWORD PTR [edi],1
  4139c9:	es out 0x6f,al
  4139cc:	pusha  
  4139cd:	scas   eax,DWORD PTR es:[edi]
  4139ce:	int    0xab
  4139d0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4139d2:	aam    0x94
  4139d4:	(bad)  
  4139d5:	mov    cl,0xb3
  4139d7:	sbb    DWORD PTR [eax+0x3250898b],0x52
  4139de:	sub    DWORD PTR [eax+0x71],esi
  4139e1:	push   esi
  4139e2:	xchg   ebx,eax
  4139e3:	loopne 0x41398b
  4139e5:	xor    dl,0xfa
  4139e8:	popf   
  4139e9:	icebp  
  4139ea:	xchg   BYTE PTR [eax-0x7d34ecc0],cl
  4139f0:	jae    0x41397f
  4139f2:	nop
  4139f3:	mov    edx,0xc8471745
  4139f8:	pushf  
  4139f9:	mov    eax,0x850786ca
  4139fe:	ins    DWORD PTR es:[edi],dx
  4139ff:	and    al,0x59
  413a01:	mov    edx,0x96316371
  413a06:	push   esp
  413a07:	les    ebp,FWORD PTR [ebx]
  413a09:	fldcw  WORD PTR [edi+0x643d4144]
  413a0f:	sti    
  413a10:	pop    edi
  413a11:	dec    BYTE PTR [esi]
  413a13:	jl     0x413a46
  413a15:	jb     0x413a5d
  413a17:	push   es
  413a18:	xor    dl,BYTE PTR [edx]
  413a1a:	add    ch,BYTE PTR [eax-0x5f]
  413a1d:	fwait
  413a1e:	mov    al,ds:0xea23e0e2
  413a23:	in     eax,0x42
  413a25:	iret   
  413a26:	jg     0x413a61
  413a28:	cli    
  413a29:	and    BYTE PTR [ebp+0x1a],0xcb
  413a2d:	fisub  WORD PTR [ebx+0x6a]
  413a30:	dec    ebp
  413a31:	mov    edi,0x1df7fa87
  413a36:	mov    ecx,esi
  413a38:	dec    esi
  413a39:	leave  
  413a3a:	loop   0x413a8f
  413a3c:	mov    ch,0x8e
  413a3e:	pop    ebp
  413a3f:	push   ebx
  413a40:	jmp    0x413a58
  413a42:	gs (bad) 
  413a44:	ds ins DWORD PTR es:[edi],dx
  413a46:	in     al,dx
  413a47:	dec    esp
  413a48:	push   ss
  413a49:	or     al,BYTE PTR [edi+ebp*8-0x21e011d3]
  413a50:	pop    ecx
  413a51:	mov    ah,0x2c
  413a53:	push   esp
  413a54:	jb     0x413a3d
  413a56:	push   0x36fd0051
  413a5b:	int    0xec
  413a5d:	dec    ecx
  413a5e:	xacquire xchg BYTE PTR [ebx-0x16],al
  413a62:	xor    BYTE PTR [edx+0x21e9077b],bl
  413a68:	call   0x3e26e42d
  413a6d:	shr    BYTE PTR [ebx],cl
  413a6f:	adc    ah,BYTE PTR [esi]
  413a71:	ret    0xc0b7
  413a74:	xor    bh,BYTE PTR [edi+0x15c34411]
  413a7a:	push   eax
  413a7b:	inc    eax
  413a7c:	dec    esp
  413a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a7e:	add    esp,esi
  413a80:	sub    eax,0x171fe44f
  413a85:	push   edx
  413a86:	jmp    0x413a1d
  413a88:	push   esi
  413a89:	sub    al,0xba
  413a8b:	(bad)  
  413a8c:	mov    ecx,0x126a95c2
  413a91:	ins    BYTE PTR es:[edi],dx
  413a92:	stc    
  413a93:	mov    ebx,0x264b4de7
  413a98:	xor    DWORD PTR [ebx+0x457a6934],esi
  413a9e:	and    esp,DWORD PTR [eax+0x37a0fd7]
  413aa4:	jl     0x413af2
  413aa6:	ror    DWORD PTR [esp+ebx*8-0x44],1
  413aaa:	data16 lods al,BYTE PTR fs:[esi]
  413aad:	test   DWORD PTR [edx-0x29003f35],ecx
  413ab3:	(bad)  
  413ab4:	jmp    0xfd1d:0xcc1039ec
  413abb:	mov    esi,0xdf93136d
  413ac0:	and    al,0x14
  413ac2:	cmp    ebx,DWORD PTR [edi+0x641f9a88]
  413ac8:	or     esi,DWORD PTR [ebx+0x45]
  413acb:	inc    edi
  413acc:	pop    ds
  413acd:	jp     0x413abf
  413acf:	xchg   BYTE PTR [ebx],ch
  413ad1:	nop
  413ad2:	or     eax,0x8e929eca
  413ad7:	(bad)  
  413ad8:	outs   dx,DWORD PTR ds:[esi]
  413ad9:	imul   eax,DWORD PTR [edi-0x37f82669],0x16
  413ae0:	fdivrp st(0),st
  413ae2:	std    
  413ae3:	mov    al,0xdd
  413ae5:	rol    DWORD PTR [ebx+0x58866d53],1
  413aeb:	in     eax,dx
  413aec:	add    BYTE PTR [ecx-0x7a],cl
  413aef:	xchg   BYTE PTR [edi-0x13],ch
  413af2:	jp     0x413ab2
  413af4:	loop   0x413b23
  413af6:	aam    0x1a
  413af8:	ds dec edi
  413afa:	xor    esp,DWORD PTR [edi]
  413afc:	lock fs into 
  413aff:	dec    edi
  413b00:	js     0x413af1
  413b02:	test   DWORD PTR [ebx-0x7f],edi
  413b05:	imul   edi,DWORD PTR [edi+esi*2+0x11648e96],0xffffffb5
  413b0d:	mov    ebx,DWORD PTR [edx-0x4db1c10d]
  413b13:	push   esp
  413b14:	mov    esp,0x4bb910d5
  413b19:	mov    ds:0x32843d12,al
  413b1e:	mov    BYTE PTR [edi-0x62870cb1],dl
  413b24:	pop    ebx
  413b25:	stos   BYTE PTR es:[edi],al
  413b26:	dec    esp
  413b27:	mov    ch,0xc5
  413b29:	(bad)  
  413b2a:	inc    esp
  413b2b:	ss xchg edx,eax
  413b2d:	jmp    DWORD PTR [esi+0x21]
  413b30:	ss jnp 0x413bb1
  413b33:	nop
  413b34:	lods   eax,DWORD PTR ds:[esi]
  413b35:	shld   ebx,ebp,cl
  413b38:	nop
  413b39:	mov    eax,ds:0x49c1c21c
  413b3e:	loopne 0x413ae3
  413b40:	cmp    dl,BYTE PTR [esi+0x3a]
  413b43:	dec    esi
  413b44:	sti    
  413b45:	shl    DWORD PTR [edi+0x46b3194f],0x5e
  413b4c:	lods   al,BYTE PTR ds:[esi]
  413b4d:	or     al,0x5a
  413b4f:	cmp    bh,BYTE PTR [ecx-0x7a70de45]
  413b55:	popa   
  413b56:	mov    fs,WORD PTR [edx-0x72]
  413b59:	(bad)
  413b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b5d:	mov    ah,0x7b
  413b5f:	lea    ebx,[edi+ebx*2+0x342ff118]
  413b66:	xlat   BYTE PTR ds:[ebx]
  413b67:	sub    dl,al
  413b69:	out    dx,eax
  413b6a:	jo     0x413b88
  413b6c:	sbb    ebx,esi
  413b6e:	rol    DWORD PTR [edi+0x6f],cl
  413b71:	test   esp,edx
  413b73:	lods   eax,DWORD PTR ds:[esi]
  413b74:	cmp    eax,0x53d09b37
  413b79:	mov    ds:0x6d64b69d,al
  413b7e:	das    
  413b7f:	cmp    DWORD PTR [edi-0x33877a3a],esi
  413b85:	push   es
  413b86:	fild   QWORD PTR [esi-0x69]
  413b89:	sahf   
  413b8a:	arpl   dx,cx
  413b8c:	jmp    0x5a13:0xecd23718
  413b93:	scas   eax,DWORD PTR es:[edi]
  413b94:	lock push edx
  413b96:	pop    esi
  413b97:	popf   
  413b98:	imul   edx,esp,0x4f
  413b9b:	shr    BYTE PTR [ebp-0x49],0xce
  413b9f:	out    dx,al
  413ba0:	loopne 0x413b95
  413ba2:	mov    ebp,0x9d7bd706
  413ba7:	jge    0x413b74
  413ba9:	adc    eax,0xd6993c93
  413bae:	addr16 sbb al,0x5c
  413bb1:	stc    
  413bb2:	fadd   DWORD PTR [edx-0x41]
  413bb5:	push   ecx
  413bb6:	mov    dl,0x98
  413bb8:	sub    ecx,ebp
  413bba:	jbe    0x413bcf
  413bbc:	mov    eax,0x4955e647
  413bc1:	cli    
  413bc2:	mov    WORD PTR [ebp-0x5b],ds
  413bc5:	test   BYTE PTR [edi-0x73ffb0e1],bl
  413bcb:	rcl    DWORD PTR [ecx+eax*1+0x37f844f0],1
  413bd2:	push   ecx
  413bd3:	enter  0x39a0,0xa4
  413bd7:	aad    0x99
  413bd9:	sub    eax,0xbbf9a979
  413bde:	adc    DWORD PTR [ebp-0x64],0x38cbe44f
  413be5:	mov    dl,0x1e
  413be7:	inc    esi
  413be8:	inc    esp
  413be9:	push   cs
  413bea:	je     0x413c50
  413bec:	fbstp  TBYTE PTR [esi+ebp*4-0xdd623d9]
  413bf3:	push   ss
  413bf4:	adc    cl,al
  413bf6:	sbb    DWORD PTR [edi],0xf03d04d2
  413bfc:	inc    eax
  413bfd:	and    esp,DWORD PTR [esi]
  413bff:	adc    BYTE PTR [eax],ch
  413c01:	push   0x1e
  413c03:	stos   DWORD PTR es:[edi],eax
  413c04:	adc    ch,BYTE PTR [ebp-0x3a]
  413c07:	(bad)  
  413c08:	and    esp,0x9
  413c0b:	icebp  
  413c0c:	add    DWORD PTR [ecx-0x46],ebp
  413c0f:	lahf   
  413c10:	mov    ch,0x9b
  413c12:	mov    eax,ds:0x859bc465
  413c17:	xlat   BYTE PTR ds:[ebx]
  413c18:	retf   
  413c19:	pop    es
  413c1a:	cmp    edi,ebp
  413c1c:	iret   
  413c1d:	cld    
  413c1e:	push   es
  413c1f:	cld    
  413c20:	lea    esp,[ebx]
  413c22:	jns    0x413c82
  413c24:	mov    dl,0xa7
  413c26:	jbe    0x413bb1
  413c28:	sbb    esp,DWORD PTR [ebp-0x4a]
  413c2b:	cmp    BYTE PTR [esp+esi*1],ch
  413c2e:	add    BYTE PTR [eax-0x57],0x97
  413c32:	cs jbe 0x413c0c
  413c35:	(bad)  
  413c36:	jno    0x413c72
  413c38:	adc    eax,DWORD PTR [esi]
  413c3a:	fist   WORD PTR ds:0xba2cbe81
  413c40:	sti    
  413c41:	outs   dx,BYTE PTR ds:[esi]
  413c42:	outs   dx,BYTE PTR ds:[esi]
  413c43:	jp     0x413c82
  413c45:	sub    BYTE PTR [ebx],bh
  413c47:	add    al,0xc7
  413c49:	int3   
  413c4a:	sub    esp,esp
  413c4c:	jb     0x413c7f
  413c4e:	repz sbb eax,0x41105a57
  413c54:	xchg   ebp,eax
  413c55:	pop    esp
  413c56:	xor    DWORD PTR [ebx],edi
  413c58:	retf   0xe3fe
  413c5b:	inc    esp
  413c5c:	cmp    edx,DWORD PTR [esi+0x7f]
  413c5f:	mov    edx,0x7bfa81ca
  413c64:	(bad)  
  413c65:	clc    
  413c66:	add    eax,0xa5f9a827
  413c6b:	sbb    al,0xf7
  413c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c6e:	aad    0x6c
  413c70:	and    dh,BYTE PTR [ebp-0x6c]
  413c73:	aaa    
  413c74:	fcmovb st,st(3)
  413c76:	pop    ebx
  413c77:	sbb    al,0xfb
  413c79:	xchg   esi,eax
  413c7a:	ret    0x8970
  413c7d:	fdiv   st,st(1)
  413c7f:	stc    
  413c80:	loope  0x413c6d
  413c82:	cwde   
  413c83:	mov    edx,0x97e83bfd
  413c88:	jge    0x413cc8
  413c8a:	xchg   esi,eax
  413c8b:	and    bh,BYTE PTR [esi-0x15]
  413c8e:	jmp    0x413c9a
  413c90:	sti    
  413c91:	fs out 0xe1,al
  413c94:	repz ror DWORD PTR [ebp+ecx*4-0x6d],1
  413c99:	cmp    BYTE PTR [esi],ah
  413c9b:	in     al,0x89
  413c9d:	add    bl,BYTE PTR [ebp+0x7b9c7f92]
  413ca3:	sub    DWORD PTR [esi-0x1535c97c],ebx
  413ca9:	and    edx,ebx
  413cab:	dec    esi
  413cac:	and    al,BYTE PTR [esi]
  413cae:	pop    es
  413caf:	or     eax,0x4df61d1d
  413cb4:	test   al,0xcf
  413cb6:	(bad)  
  413cb7:	ror    DWORD PTR ds:0xb75da495,0x7d
  413cbe:	pop    edi
  413cbf:	aas    
  413cc0:	jo     0x413c61
  413cc2:	scas   eax,DWORD PTR es:[edi]
  413cc3:	addr16 ret 
  413cc5:	(bad)  [edi-0x34]
  413cc8:	mov    dh,0x9a
  413cca:	and    DWORD PTR [edi-0x2c],ebx
  413ccd:	or     esi,DWORD PTR [esi+0x1740d41f]
  413cd3:	in     eax,0xd
  413cd5:	inc    eax
  413cd6:	mov    al,0x2e
  413cd8:	jp     0x413c68
  413cda:	leave  
  413cdb:	int3   
  413cdc:	adc    BYTE PTR [esi+0x244ecfd0],bh
  413ce2:	adc    eax,0xaa81fb84
  413ce7:	and    edx,DWORD PTR [edx]
  413ce9:	std    
  413cea:	loop   0x413c72
  413cec:	in     eax,0x32
  413cee:	mov    BYTE PTR [esi],bh
  413cf0:	into   
  413cf1:	sbb    bh,BYTE PTR [ebx]
  413cf3:	out    dx,eax
  413cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cf5:	(bad)  
  413cf7:	add    al,0xf7
  413cf9:	and    ecx,DWORD PTR [esi+0x38b4bdcb]
  413cff:	nop
  413d00:	fisttp DWORD PTR [ecx]
  413d02:	ins    DWORD PTR es:[edi],dx
  413d03:	jge    0x413d59
  413d05:	jge    0x413d20
  413d07:	jge    0x413d84
  413d09:	(bad)  
  413d0a:	dec    esp
  413d0b:	pop    ds
  413d0c:	dec    edx
  413d0d:	clc    
  413d0e:	add    al,0xae
  413d10:	adc    bl,BYTE PTR ds:0xcb8c0236
  413d16:	ret    0xc3cd
  413d19:	jno    0x413cc4
  413d1b:	mov    eax,0xc0aaf997
  413d20:	lea    edi,[eax*4-0x40eab1ed]
  413d27:	xor    edi,0x13
  413d2a:	jecxz  0x413d99
  413d2c:	push   edi
  413d2d:	adc    bl,BYTE PTR [ebx-0x5dd7db82]
  413d33:	mov    edx,0xf5c19e44
  413d38:	pop    ebp
  413d39:	xchg   edx,eax
  413d3a:	inc    esi
  413d3b:	and    cl,dl
  413d3d:	test   BYTE PTR [ecx],bh
  413d3f:	stc    
  413d40:	push   ebp
  413d41:	cmc    
  413d42:	mov    edi,0x54b48559
  413d47:	(bad)  
  413d48:	mov    al,0xb3
  413d4a:	and    BYTE PTR [eax],cl
  413d4c:	sub    al,0x62
  413d4e:	scas   eax,DWORD PTR es:[edi]
  413d4f:	inc    cl
  413d51:	fstp   TBYTE PTR es:[edi+0x48]
  413d55:	loopne 0x413d13
  413d57:	popa   
  413d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d59:	and    al,0x50
  413d5b:	and    dl,ch
  413d5d:	pusha  
  413d5e:	stos   BYTE PTR es:[edi],al
  413d5f:	fidivr WORD PTR [ebx+ebp*4+0x6e]
  413d63:	jo     0x413ce8
  413d65:	call   0x71f20a47
  413d6a:	push   esi
  413d6b:	xchg   DWORD PTR [ecx-0xa05111d],ecx
  413d71:	push   edi
  413d72:	jne    0x413cf4
  413d74:	mov    edi,0xbe134685
  413d79:	ret    0x204b
  413d7c:	dec    ecx
  413d7d:	cli    
  413d7e:	div    DWORD PTR ds:0x72c9dcaa
  413d84:	aam    0xbe
  413d86:	stos   BYTE PTR es:[edi],al
  413d87:	cmp    al,0xcc
  413d89:	adc    BYTE PTR [eax+edi*4-0x5e],bl
  413d8d:	in     al,dx
  413d8e:	pop    ebp
  413d8f:	(bad)  [ebx-0x45]
  413d92:	cmpps  xmm1,XMMWORD PTR fs:[esi-0x3f],0xaf
  413d98:	push   ds
  413d99:	adc    edi,DWORD PTR [esi-0x2a]
  413d9c:	jl     0x413d24
  413d9e:	jae    0x413d38
  413da0:	push   ecx
  413da1:	mov    ecx,0x4015cbb7
  413da6:	outs   dx,BYTE PTR ds:[esi]
  413da7:	xor    ah,BYTE PTR ds:0x7b41d332
  413dad:	loope  0x413e12
  413daf:	inc    esp
  413db0:	inc    eax
  413db1:	adc    dl,BYTE PTR [ebp+0x6662f2dc]
  413db7:	rcl    BYTE PTR [ebx+0x5fc8a45e],cl
  413dbd:	xor    eax,0xbc9f25e3
  413dc2:	inc    esi
  413dc3:	ins    BYTE PTR es:[edi],dx
  413dc4:	fnstsw WORD PTR [edi+0x34]
  413dc7:	xor    al,0x3d
  413dc9:	sbb    dh,dh
  413dcb:	pop    esp
  413dcc:	lds    esi,FWORD PTR [ecx]
  413dce:	inc    ecx
  413dcf:	stc    
  413dd0:	xchg   ebx,eax
  413dd1:	test   al,0xe0
  413dd3:	and    DWORD PTR [eax+0x6c286e54],ecx
  413dd9:	adc    cl,dl
  413ddb:	test   BYTE PTR [edi+0x28d9a3c4],ah
  413de1:	xchg   BYTE PTR [ebx+0x13c4f9fc],ah
  413de7:	sub    ecx,edi
  413de9:	(bad)  
  413dea:	pop    ebp
  413deb:	jge    0x413e64
  413ded:	fstp   DWORD PTR [eax-0x62]
  413df0:	adc    ecx,ebx
  413df2:	push   edx
  413df3:	std    
  413df4:	je     0x413da7
  413df6:	leave  
  413df7:	retf   
  413df8:	out    0x14,eax
  413dfa:	lahf   
  413dfb:	mov    bh,0xd6
  413dfd:	and    ebp,edx
  413dff:	int3   
  413e00:	pop    es
  413e01:	add    eax,0xabe6a938
  413e06:	iret   
  413e07:	shl    BYTE PTR [esi+0x4e],1
  413e0a:	sub    al,BYTE PTR ds:0x3349049e
  413e10:	xchg   esp,eax
  413e11:	adc    bl,BYTE PTR [esi]
  413e13:	dec    ecx
  413e14:	popa   
  413e15:	mov    WORD PTR [esp+eiz*4],fs
  413e18:	ins    DWORD PTR es:[edi],dx
  413e19:	mov    ds:0x61599ac3,al
  413e1e:	mov    eax,DWORD PTR [edx-0x2c]
  413e21:	inc    ecx
  413e22:	mov    bl,0xf2
  413e24:	out    dx,eax
  413e25:	push   0xffffffbd
  413e27:	mov    eax,ds:0xe51adcbb
  413e2c:	cmp    eax,0x6c8b17d6
  413e31:	mov    cl,BYTE PTR [esi+edi*8]
  413e34:	imul   BYTE PTR [esi-0x5e]
  413e37:	scas   al,BYTE PTR es:[edi]
  413e38:	test   al,0xa3
  413e3a:	push   eax
  413e3b:	xchg   esi,eax
  413e3c:	xor    DWORD PTR [edi-0x4d],ebp
  413e3f:	(bad)  
  413e40:	cmp    dh,BYTE PTR [ecx-0x7ff60a18]
  413e46:	(bad)  
  413e47:	repnz bound esp,QWORD PTR [ebx-0x4d]
  413e4b:	je     0x413e66
  413e4d:	xchg   ebp,eax
  413e4e:	push   ebx
  413e4f:	fcom   DWORD PTR [ebx]
  413e51:	stos   DWORD PTR es:[edi],eax
  413e52:	fisub  DWORD PTR [ebp+0x6863928f]
  413e58:	ja     0x413eaf
  413e5a:	ret    
  413e5b:	sbb    ecx,DWORD PTR [ecx-0x5a]
  413e5e:	outs   dx,BYTE PTR ds:[esi]
  413e5f:	and    dh,BYTE PTR [edi+0x41196af1]
  413e65:	jae    0x413e56
  413e67:	sbb    al,0x51
  413e69:	jle    0x413ee3
  413e6b:	mov    ch,0x16
  413e6d:	adc    BYTE PTR [edi],ah
  413e6f:	adc    DWORD PTR [ecx-0x45],esi
  413e72:	repz adc eax,0x97f8172c
  413e78:	imul   edx,edi,0xf668377d
  413e7e:	cmp    eax,0x7a587990
  413e83:	push   cs
  413e84:	dec    esi
  413e85:	cmp    DWORD PTR [edi],esp
  413e87:	and    eax,0xc91229d1
  413e8c:	sar    esi,cl
  413e8e:	rcl    BYTE PTR [ebx+0x14],cl
  413e91:	or     esi,edx
  413e93:	jne    0x413e47
  413e95:	sub    eax,0xd0fa9a70
  413e9a:	pop    eax
  413e9b:	pop    esi
  413e9c:	or     eax,0x5febe4cd
  413ea1:	xor    esi,esi
  413ea3:	mov    bl,0x60
  413ea5:	cs call 0xcf65:0x6a8969f3
  413ead:	jo     0x413e31
  413eaf:	add    BYTE PTR [ecx],ah
  413eb1:	iret   
  413eb2:	test   DWORD PTR [ebx],ebx
  413eb4:	pop    esp
  413eb5:	sub    DWORD PTR [ecx-0x58],ebx
  413eb8:	icebp  
  413eb9:	xor    ebx,DWORD PTR [ecx-0x21def153]
  413ebf:	inc    esi
  413ec0:	ins    DWORD PTR es:[edi],dx
  413ec1:	test   edx,edi
  413ec3:	pop    ss
  413ec4:	pop    DWORD PTR [edx-0x1a]
  413ec7:	cmp    al,0x6c
  413ec9:	mov    al,ds:0xf7641125
  413ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ed0:	pop    edx
  413ed1:	xor    eax,0x3ad6baf6
  413ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed7:	das    
  413ed8:	jno    0x413e8b
  413eda:	xor    al,BYTE PTR ds:[eax+0x3b9a0975]
  413ee1:	xchg   DWORD PTR [ebx],edx
  413ee3:	fdivr  DWORD PTR [edx]
  413ee5:	enter  0xaaea,0x9e
  413ee9:	rol    DWORD PTR [ebx*1-0x5cf6206e],1
  413ef0:	stc    
  413ef1:	xchg   esp,eax
  413ef2:	psubw  mm1,mm3
  413ef5:	add    DWORD PTR [ecx-0x7f],edi
  413ef8:	and    DWORD PTR [edx-0x7d50588f],eax
  413efe:	inc    ecx
  413eff:	xchg   edi,eax
  413f00:	push   edx
  413f01:	mov    bl,0xe7
  413f03:	dec    ecx
  413f04:	sub    DWORD PTR [esi+0x68b2823f],edx
  413f0a:	xchg   edi,eax
  413f0b:	adc    bh,BYTE PTR [eax-0xeacab8]
  413f11:	imul   esp,edi,0xffffff82
  413f14:	jmp    0x413f4f
  413f16:	nop
  413f17:	and    eax,0x748bfa2b
  413f1c:	out    0xdb,eax
  413f1e:	fist   DWORD PTR [ebp+eiz*1+0xd]
  413f22:	sub    cl,bl
  413f24:	mov    al,0x7a
  413f26:	dec    esi
  413f27:	mov    edx,0x223ccd6b
  413f2c:	je     0x413ebd
  413f2e:	ins    DWORD PTR es:[edi],dx
  413f2f:	test   eax,0x46cca01e
  413f34:	mov    ds:0x38319ec6,al
  413f39:	ins    BYTE PTR es:[edi],dx
  413f3a:	mul    DWORD PTR [eax]
  413f3c:	and    BYTE PTR [ebp+0x31],bl
  413f3f:	xor    esp,DWORD PTR [ebp-0xf]
  413f42:	test   al,0x42
  413f44:	jo     0x3bcb2f2
  413f4a:	sbb    cl,BYTE PTR [esi]
  413f4c:	cmc    
  413f4d:	je     0x413f9a
  413f4f:	fstp   TBYTE PTR [bx+di+0x4f13]
  413f54:	dec    ebp
  413f55:	(bad)  
  413f56:	mov    ebx,?
  413f58:	mov    BYTE PTR [edx],dl
  413f5a:	scas   eax,DWORD PTR es:[edi]
  413f5b:	jae    0x413f35
  413f5d:	pop    ss
  413f5e:	lods   eax,DWORD PTR ds:[esi]
  413f5f:	pusha  
  413f60:	aaa    
  413f61:	jge    0x413fdc
  413f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f64:	fsubr  st,st(5)
  413f66:	dec    ecx
  413f67:	cmp    eax,0x2f6b7165
  413f6c:	dec    ebp
  413f6d:	repz test al,0x8c
  413f70:	mov    edx,0x5af6d20f
  413f75:	add    ecx,edi
  413f77:	push   ebp
  413f78:	jae    0x413f8f
  413f7a:	shl    ebp,1
  413f7c:	fsub   DWORD PTR ds:0x99a566c
  413f82:	dec    eax
  413f83:	loop   0x413f6f
  413f85:	mov    bl,0x85
  413f87:	inc    ebx
  413f88:	in     eax,0xcd
  413f8a:	xor    al,0x8a
  413f8c:	mov    cl,0xfe
  413f8e:	je     0x413fb9
  413f90:	or     al,0xa8
  413f92:	jecxz  0x413fed
  413f94:	dec    eax
  413f95:	ins    DWORD PTR es:[edi],dx
  413f96:	icebp  
  413f97:	daa    
  413f98:	add    BYTE PTR [ebx],al
  413f9a:	imul   edx,DWORD PTR [edx+0x21a71f9c],0x769433c0
  413fa4:	mov    esp,DWORD PTR [eax]
  413fa6:	outs   dx,DWORD PTR ds:[esi]
  413fa7:	jnp    0x413fe3
  413fa9:	mov    ds:0x26a1adf8,al
  413fae:	mov    esi,0xd2a19791
  413fb3:	daa    
  413fb4:	shl    DWORD PTR [ebp+ebp*8-0x6a],cl
  413fb8:	pop    ss
  413fb9:	pop    es
  413fba:	int    0xf2
  413fbc:	inc    ebp
  413fbd:	jns    0x413fe2
  413fbf:	mov    edx,0x15188342
  413fc4:	rol    BYTE PTR [ebx+0x9b4531d],cl
  413fca:	sbb    ecx,DWORD PTR [eax]
  413fcc:	mov    esi,0x7c80007e
  413fd1:	or     bl,BYTE PTR [ebx-0x75da03eb]
  413fd7:	push   cs
  413fd8:	pop    ebx
  413fd9:	jns    0x413fde
  413fdb:	cmp    BYTE PTR [edi+0xb6e1e33],al
  413fe1:	test   BYTE PTR [edx+ebx*2-0x770b19b6],dh
  413fe8:	(bad)  
  413fe9:	(bad)  
  413fea:	adc    bh,al
  413fec:	sbb    DWORD PTR [ecx+0x22e0168a],esp
  413ff2:	ja     0x41405a
  413ff4:	cmp    DWORD PTR [edi-0x77],edi
  413ff7:	sub    al,0x2c
  413ff9:	pop    es
  413ffa:	std    
  413ffb:	gs inc ecx
  413ffd:	or     ebx,DWORD PTR [edx-0x728714b3]
  414003:	cs mov edx,0x50b7ca50
  414009:	inc    edi
  41400a:	add    ah,BYTE PTR [esi+0x21]
  41400d:	push   edx
  41400e:	ja     0x41407e
  414010:	ds jp  0x414002
  414013:	adc    eax,0x24631ad5
  414018:	and    ah,bl
  41401a:	mov    esi,0xc10d41c7
  41401f:	ret    
  414020:	xchg   ebx,eax
  414021:	mov    edx,0xbfd2fe8d
  414026:	mov    dh,0x43
  414028:	adc    BYTE PTR [eax+ebp*4],ah
  41402b:	std    
  41402c:	sub    ch,BYTE PTR [edi-0x23]
  41402f:	mov    WORD PTR [eax],ds
  414031:	cwde   
  414032:	jne    0x41400d
  414034:	leave  
  414035:	cmp    esi,eax
  414037:	xchg   ecx,eax
  414038:	mov    WORD PTR [edi-0xdae2ba8],gs
  41403e:	add    BYTE PTR [eax],dh
  414040:	jo     0x413fec
  414042:	cs out dx,al
  414044:	jg     0x41405a
  414046:	inc    esi
  414047:	sbb    al,0x11
  414049:	and    ch,BYTE PTR [ebp-0x534c00c4]
  41404f:	mov    dl,0x32
  414051:	push   0xffffffed
  414053:	push   es
  414054:	stos   DWORD PTR es:[edi],eax
  414055:	jp     0x4140b0
  414057:	clc    
  414058:	dec    ebp
  414059:	ret    
  41405a:	jmp    0xde9606f6
  41405f:	cmp    edx,DWORD PTR [esi+0x65a31746]
  414065:	add    eax,0x6edacc18
  41406a:	inc    ebp
  41406b:	jbe    0x413ff3
  41406d:	in     eax,0xd
  41406f:	inc    ebx
  414070:	xor    edi,eax
  414072:	out    dx,eax
  414073:	data16 sub al,0x31
  414076:	or     DWORD PTR [edx+0x55e31986],ebp
  41407c:	inc    eax
  41407d:	lahf   
  41407e:	int3   
  41407f:	mov    al,ds:0x1009fa62
  414084:	aam    0x3c
  414086:	mov    dl,0x20
  414088:	ret    
  414089:	and    al,0xe8
  41408b:	ja     0x41404b
  41408d:	out    0x75,eax
  41408f:	cs pop ss
  414091:	pop    ds
  414092:	(bad)  
  414093:	ror    DWORD PTR [ecx+0xd],1
  414096:	push   0xffffffdf
  414098:	stos   BYTE PTR es:[edi],al
  414099:	sbb    eax,0x2835d454
  41409e:	shl    DWORD PTR [ebx+0x5a49f279],cl
  4140a4:	neg    BYTE PTR [edi+0x58fcdd2e]
  4140aa:	pop    ebx
  4140ab:	daa    
  4140ac:	mov    BYTE PTR [eax-0x4e],bh
  4140af:	pop    ebx
  4140b0:	maxps  xmm5,xmm5
  4140b3:	jbe    0x4140cf
  4140b5:	xchg   edx,eax
  4140b6:	sub    dh,BYTE PTR [ebp-0x5a0813fa]
  4140bc:	pop    edx
  4140bd:	mov    edx,0xccf15d3d
  4140c2:	push   edx
  4140c3:	sbb    BYTE PTR [ebx+0x5f9c3da2],ch
  4140c9:	pop    edx
  4140ca:	push   ecx
  4140cb:	mov    ch,0x9
  4140cd:	lock mov esp,0xcb1c4359
  4140d3:	cwde   
  4140d4:	pop    ebx
  4140d5:	imul   dl
  4140d7:	in     eax,dx
  4140d8:	pushw  0xc
  4140db:	enter  0x32f,0x6c
  4140df:	rep lods al,BYTE PTR ds:[esi]
  4140e1:	int3   
  4140e2:	adc    BYTE PTR [esi],bl
  4140e4:	ins    DWORD PTR es:[edi],dx
  4140e5:	je     0x41408c
  4140e7:	xor    BYTE PTR [ebx-0x7b3d0019],dl
  4140ed:	inc    esp
  4140ee:	js     0x4140a4
  4140f0:	fwait
  4140f1:	fs std 
  4140f3:	sbb    edx,DWORD PTR ds:0x5f0659b
  4140f9:	push   esp
  4140fa:	sbb    cl,cl
  4140fc:	inc    esi
  4140fd:	or     bl,BYTE PTR [esi+0xa]
  414100:	ja     0x4140bd
  414102:	lods   eax,DWORD PTR ds:[esi]
  414103:	xor    DWORD PTR [ebx],ebp
  414105:	adc    BYTE PTR [eax-0x17],dl
  414108:	aas    
  414109:	sub    eax,0x59455f5
  41410e:	sub    BYTE PTR [esi+0x20f28e6f],0x25
  414115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414116:	scas   al,BYTE PTR es:[edi]
  414117:	fwait
  414118:	cmp    al,0xa8
  41411a:	and    BYTE PTR [ecx-0x24798eb3],0x44
  414121:	call   DWORD PTR [edx+edi*1]
  414124:	push   ebx
  414125:	jg     0x414134
  414127:	aas    
  414128:	int3   
  414129:	and    eax,0xe4040b3a
  41412e:	ins    BYTE PTR es:[edi],dx
  41412f:	jae    0x41416d
  414131:	add    eax,0x5af92038
  414136:	pop    esp
  414137:	aad    0x75
  414139:	mov    BYTE PTR [eax+0x36277d4c],ch
  41413f:	fwait
  414140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414141:	setle  BYTE PTR ds:0xe2b70f8c
  414148:	rcr    ebp,0x78
  41414b:	fwait
  41414c:	scas   al,BYTE PTR es:[edi]
  41414d:	fwait
  41414e:	int    0xb0
  414150:	ins    DWORD PTR es:[edi],dx
  414151:	cmp    DWORD PTR [esi+ebp*8-0x493340f7],ebp
  414158:	popf   
  414159:	push   0x3c
  41415b:	xor    bl,BYTE PTR [ecx]
  41415d:	shr    dh,1
  41415f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414160:	mov    ecx,0xf8db68f4
  414165:	addr16 loope 0x414188
  414168:	push   esi
  414169:	jp     0x414149
  41416b:	inc    esp
  41416c:	pop    eax
  41416d:	enter  0x2b1c,0x33
  414171:	cwde   
  414172:	ins    DWORD PTR es:[edi],dx
  414173:	pushf  
  414174:	arpl   WORD PTR [ebx-0x5eda58af],sp
  41417a:	imul   ebp,DWORD PTR [edx],0xa1a21ae7
  414180:	mov    al,0xc5
  414182:	pop    es
  414183:	inc    eax
  414184:	add    BYTE PTR [eax+edx*4-0x5759a6ca],0xa1
  41418c:	pop    ss
  41418d:	jle    0x4141dc
  41418f:	pop    ebp
  414190:	test   BYTE PTR [ebp+0x16],ch
  414193:	loope  0x4141d6
  414195:	shr    DWORD PTR [esi-0x32f8883f],1
  41419b:	ret    
  41419c:	pop    edi
  41419d:	mov    dl,0x3f
  41419f:	dec    edx
  4141a0:	or     al,0x4b
  4141a2:	mov    edi,0x9f2532cd
  4141a7:	and    al,0x9e
  4141a9:	jmp    FWORD PTR [edi]
  4141ab:	jmp    0x895abcf7
  4141b0:	dec    BYTE PTR [edx*2+0x7882ca8c]
  4141b7:	inc    ebp
  4141b8:	jbe    0x4141fb
  4141ba:	xor    eax,0x9ed47347
  4141bf:	jle    0x4141b9
  4141c1:	cdq    
  4141c2:	sahf   
  4141c3:	mov    esp,0xb4c6d5e3
  4141c8:	sti    
  4141c9:	out    0x34,eax
  4141cb:	test   al,0x1
  4141cd:	cmp    DWORD PTR [esi-0x3d],eax
  4141d0:	out    0xc5,al
  4141d2:	push   esp
  4141d3:	sahf   
  4141d4:	pusha  
  4141d5:	xor    al,0xe0
  4141d7:	add    eax,0xed6dfd50
  4141dc:	mov    ecx,ds
  4141de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141df:	jno    0x4141cc
  4141e1:	xlat   BYTE PTR ds:[ebx]
  4141e2:	stos   BYTE PTR es:[di],al
  4141e4:	gs test al,0x18
  4141e7:	icebp  
  4141e8:	mov    ah,0xf4
  4141ea:	loopne 0x4141a3
  4141ec:	es or  esp,ecx
  4141ef:	(bad)  
  4141f0:	in     eax,0x9a
  4141f2:	xchg   ebp,eax
  4141f3:	jmp    FWORD PTR [esi]
  4141f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141f6:	dec    ecx
  4141f7:	stc    
  4141f8:	mov    cl,0xae
  4141fa:	out    dx,al
  4141fb:	mov    eax,0xdb52d39a
  414200:	pop    ecx
  414201:	or     edi,DWORD PTR [esi+0x56]
  414204:	push   0x2c
  414206:	jge    0x4141f9
  414208:	fs inc esp
  41420a:	cmp    ecx,DWORD PTR [eax-0x4697c9af]
  414210:	jb     0x4141c2
  414212:	mov    bl,BYTE PTR [edx]
  414214:	add    BYTE PTR [eax+ebp*8],bh
  414217:	dec    ecx
  414218:	js     0x41427f
  41421a:	cmp    eax,0x34202050
  41421f:	push   eax
  414220:	adc    BYTE PTR [ebx+0x11f7615a],cl
  414226:	in     eax,dx
  414227:	retf   0xdb76
  41422a:	loop   0x414296
  41422c:	pop    esp
  41422d:	push   ebx
  41422e:	int    0xb3
  414230:	inc    edi
  414231:	(bad)  [ecx-0x66f1dacd]
  414237:	test   DWORD PTR [eax+0x7c],0xe38a9c5d
  41423e:	and    esi,DWORD PTR [esi]
  414240:	jae    0x414244
  414242:	mov    eax,ds:0x30e90f66
  414247:	sbb    cl,BYTE PTR [edi+0x6df86dc9]
  41424d:	add    dh,BYTE PTR [ebx]
  41424f:	js     0x4142b9
  414251:	adc    DWORD PTR [esi-0x66],esi
  414254:	into   
  414255:	je     0x414287
  414257:	push   es
  414258:	pop    es
  414259:	inc    ebp
  41425a:	lods   al,BYTE PTR ds:[esi]
  41425b:	lods   eax,DWORD PTR ds:[esi]
  41425c:	and    ebp,edx
  41425e:	xchg   edx,eax
  41425f:	and    ecx,edi
  414261:	jge    0x414277
  414263:	and    bl,bh
  414265:	fild   QWORD PTR [ebx+0x4af395f7]
  41426b:	shl    BYTE PTR [edi],cl
  41426d:	(bad)  
  41426e:	mov    ds:0x75094d04,al
  414273:	and    BYTE PTR [ebp-0xf127d92],0xdc
  41427a:	jno    0x414234
  41427c:	dec    esp
  41427d:	ret    0xbbd4
  414280:	sbb    DWORD PTR [ebx-0x11],eax
  414283:	sahf   
  414284:	cmp    esi,DWORD PTR [ebp-0x60]
  414287:	push   ss
  414288:	sbb    bh,bh
  41428a:	and    dl,ah
  41428c:	mov    dh,0x3f
  41428e:	push   edi
  41428f:	mov    ds:0x18956d9a,eax
  414294:	in     al,dx
  414295:	stos   BYTE PTR es:[edi],al
  414296:	imul   edi,DWORD PTR [ecx+0x7b1dc560],0x484e2af6
  4142a0:	jecxz  0x414226
  4142a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142a3:	(bad)  
  4142a4:	push   ebp
  4142a5:	loope  0x41427d
  4142a7:	jo     0x4142ba
  4142a9:	mov    bl,0xf
  4142ab:	dec    edi
  4142ac:	mov    WORD PTR [edx-0x26],cs
  4142af:	lahf   
  4142b0:	repz push 0x37
  4142b3:	sub    DWORD PTR [ebx+esi*8-0x2d09f4a7],edi
  4142ba:	xchg   edi,eax
  4142bb:	(bad)  
  4142bc:	or     BYTE PTR [edx+0x72],ch
  4142bf:	sub    ebx,DWORD PTR [ebx]
  4142c1:	test   BYTE PTR [ecx-0x7f6c6ab0],dh
  4142c7:	mov    ds:0x1734e1b5,al
  4142cc:	das    
  4142cd:	rol    BYTE PTR [bx+di-0x68],0xd1
  4142d2:	pushf  
  4142d3:	pushf  
  4142d4:	loope  0x414326
  4142d6:	fnsave [edx+0x7da6c839]
  4142dc:	dec    ecx
  4142dd:	cmp    BYTE PTR [ecx],al
  4142df:	(bad)  
  4142e0:	jg     0x414330
  4142e2:	ficom  WORD PTR [ecx+edi*4-0x49]
  4142e6:	cs (bad) 
  4142e8:	cld    
  4142e9:	xchg   ecx,eax
  4142ea:	xchg   ebp,eax
  4142eb:	sub    dh,BYTE PTR [ebx-0x2d]
  4142ee:	push   0xffffffb3
  4142f0:	out    0x27,al
  4142f2:	cmp    eax,DWORD PTR [ecx-0x31]
  4142f5:	sub    ebx,DWORD PTR [edx]
  4142f7:	icebp  
  4142f8:	fninit 
  4142fa:	loopne 0x41435a
  4142fc:	mov    ds:0xdcc33223,eax
  414301:	loope  0x41435b
  414303:	test   eax,0x40f8a2b8
  414308:	jle    0x4142d6
  41430a:	dec    esp
  41430b:	rcr    DWORD PTR [ebx+eiz*8],1
  41430e:	push   0xa24d69fa
  414313:	outs   dx,BYTE PTR ds:[esi]
  414314:	lea    ebx,[eax-0x1]
  414317:	inc    ebp
  414318:	imul   edi,DWORD PTR ds:0x5f182b2d,0x57
  41431f:	je     0x41437c
  414321:	ret    
  414322:	push   ebx
  414323:	cmp    esi,ecx
  414325:	add    al,0xd6
  414327:	sbb    al,0x7e
  414329:	push   edx
  41432a:	nop
  41432b:	dec    esp
  41432c:	sbb    dl,ch
  41432e:	out    dx,eax
  41432f:	xor    dh,BYTE PTR [ebx]
  414331:	(bad)  
  414332:	jmp    0x8bbc:0xa7e6bf24
  414339:	dec    ebp
  41433a:	cs adc eax,0x9686f901
  414340:	shl    BYTE PTR [edx-0x5abe7cb9],0xb3
  414347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414348:	mov    esi,0xbb6ddf7b
  41434d:	stos   DWORD PTR es:[edi],eax
  41434e:	pop    esp
  41434f:	pop    ebp
  414350:	push   0x40
  414352:	dec    esi
  414353:	lds    eax,FWORD PTR [ecx+0x29]
  414356:	mov    ebp,0xc8c7ee37
  41435b:	mov    WORD PTR [ebx-0xc],?
  41435e:	cld    
  41435f:	fwait
  414360:	cmp    bl,BYTE PTR [ebp-0x54]
  414363:	fidiv  WORD PTR [edx+0x247a7a39]
  414369:	dec    ecx
  41436a:	fistp  DWORD PTR [ecx-0x7a]
  41436d:	in     eax,0xae
  41436f:	and    BYTE PTR [ecx-0x45b16ffa],bl
  414375:	or     esi,esi
  414377:	or     eax,0x130d171c
  41437c:	push   ecx
  41437d:	pop    edx
  41437e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41437f:	out    dx,al
  414380:	popf   
  414381:	std    
  414382:	(bad)  
  414383:	daa    
  414384:	les    edi,FWORD PTR [ecx]
  414386:	inc    ebp
  414387:	fdiv   DWORD PTR [esi-0x11ee247a]
  41438d:	pop    ss
  41438e:	retf   
  41438f:	inc    edx
  414390:	sub    BYTE PTR [esp+esi*1-0x58ae3afc],ch
  414397:	test   DWORD PTR [esp+eax*1],ebp
  41439a:	das    
  41439b:	inc    ecx
  41439c:	pusha  
  41439d:	add    BYTE PTR [ebx+0x472093e1],ch
  4143a3:	cmc    
  4143a4:	and    al,0xbd
  4143a6:	mov    dh,0xa5
  4143a8:	idiv   ebx
  4143aa:	adc    eax,DWORD PTR [eax]
  4143ac:	cmp    ah,BYTE PTR [ebp-0x67c8dcaf]
  4143b2:	sbb    eax,0x5b2ee4cb
  4143b7:	imul   ebx,DWORD PTR ss:[esi-0x4eccba55],0x3c75c58
  4143c2:	mov    BYTE PTR [ebx],ch
  4143c4:	pop    ebx
  4143c5:	jmp    0xad723a97
  4143ca:	dec    ecx
  4143cb:	mov    ds:0xe2180b00,al
  4143d0:	mov    edi,0x48a530f
  4143d5:	jnp    0x4143f6
  4143d7:	fsubr  DWORD PTR [ebx-0x393aa290]
  4143dd:	repz out 0xce,al
  4143e0:	pop    esp
  4143e1:	mov    al,0xe2
  4143e3:	(bad)  
  4143e4:	(bad)  
  4143e5:	mov    ebp,0x52d25f1c
  4143ea:	daa    
  4143eb:	test   BYTE PTR [esi-0x6e47395c],dh
  4143f1:	mov    ah,dl
  4143f3:	jp     0x4143b0
  4143f5:	sbb    eax,0x4596b376
  4143fa:	jmp    0x41439a
  4143fc:	fld    DWORD PTR [edx]
  4143fe:	repnz test BYTE PTR [esi+0x65],bh
  414402:	loop   0x414433
  414404:	pop    ds
  414405:	mov    ds:0xc545aac8,al
  41440a:	pop    ds
  41440b:	repnz les esp,FWORD PTR [edx-0x61]
  41440f:	or     al,0xbd
  414411:	shl    cl,cl
  414413:	dec    edi
  414414:	jno    0x414460
  414416:	jo     0x4143cb
  414418:	pop    es
  414419:	jae    0x4143b4
  41441b:	clc    
  41441c:	mov    eax,ds:0xfbe3a3b1
  414421:	jmp    0x41446c
  414423:	add    cl,BYTE PTR [edi]
  414425:	aam    0xfa
  414427:	popf   
  414428:	mov    al,0x9
  41442a:	icebp  
  41442b:	sbb    eax,0x3e463eba
  414430:	ds out dx,al
  414432:	out    dx,al
  414433:	dec    edi
  414434:	(bad)  
  414435:	xor    BYTE PTR [ebp+0x51],ch
  414438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414439:	imul   esi,DWORD PTR [ebx],0x60
  41443c:	pop    ebp
  41443d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41443e:	jp     0x414481
  414440:	pminub mm0,QWORD PTR [edx]
  414443:	sub    esi,esi
  414445:	popf   
  414446:	pushf  
  414447:	lods   eax,DWORD PTR ds:[esi]
  414448:	icebp  
  414449:	jge    0x4143f0
  41444b:	mov    al,ds:0x62b58a53
  414450:	shl    dh,1
  414452:	and    esp,DWORD PTR [ebp+0x47bd1b2c]
  414458:	dec    ecx
  414459:	int3   
  41445a:	push   0x6f
  41445c:	or     edx,DWORD PTR [ebx+0x50685163]
  414462:	mov    ah,0xb1
  414464:	mov    eax,0x504c6f76
  414469:	mov    ebp,0xd7c58cca
  41446e:	aad    0x24
  414470:	cmp    eax,0x6fefc80e
  414475:	mov    DWORD PTR [ebp-0x38701958],0xe8a93be
  41447f:	je     0x414456
  414481:	(bad)  
  414482:	cmp    esp,esp
  414484:	xor    al,0xe5
  414486:	or     dh,BYTE PTR [ebx-0x1a]
  414489:	sbb    al,0x38
  41448b:	lahf   
  41448c:	cwde   
  41448d:	dec    ecx
  41448e:	xor    dh,dh
  414490:	pop    esi
  414492:	add    al,0xe9
  414494:	into   
  414495:	ret    
  414496:	test   al,0x1a
  414498:	fisttp QWORD PTR [ebx+0x1e1c5b16]
  41449e:	loopne 0x41449a
  4144a0:	jmp    0x2618d6a7
  4144a5:	mov    al,ds:0xd6a32a45
  4144aa:	xchg   esi,eax
  4144ab:	xor    al,0xe5
  4144ad:	rol    BYTE PTR [ebx-0x18],0x44
  4144b1:	fwait
  4144b2:	pusha  
  4144b3:	mov    bh,0x5e
  4144b5:	xchg   ecx,eax
  4144b6:	out    0x8c,al
  4144b8:	(bad)  
  4144b9:	mov    bl,0x32
  4144bb:	add    al,0x58
  4144bd:	dec    ebx
  4144be:	mov    ebp,0x8d0a829
  4144c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144c4:	shl    DWORD PTR [esi+0x13c76f04],cl
  4144ca:	mov    DWORD PTR [esi+edx*4],eax
  4144cd:	pusha  
  4144ce:	pop    ebx
  4144cf:	push   esi
  4144d0:	push   ss
  4144d1:	pop    ecx
  4144d2:	mov    eax,ds:0x281c52bf
  4144d7:	push   esp
  4144d8:	inc    edi
  4144d9:	clc    
  4144da:	jmp    0x54b4d8a6
  4144df:	dec    al
  4144e1:	shl    DWORD PTR [esp+edi*4+0x78],cl
  4144e5:	jge    0x414545
  4144e7:	xor    BYTE PTR [edx+0x77],bh
  4144ea:	dec    eax
  4144eb:	cmc    
  4144ec:	loope  0x41448b
  4144ee:	out    0xd1,al
  4144f0:	push   cs
  4144f1:	push   esi
  4144f2:	jns    0x414476
  4144f4:	and    bh,BYTE PTR [edi-0x2310b53]
  4144fa:	retf   
  4144fb:	sub    eax,0x779564f2
  414500:	inc    bp
  414502:	adc    ebp,DWORD PTR [edi]
  414504:	hlt    
  414505:	pop    ss
  414506:	push   ebp
  414507:	gs aam 0x8a
  41450a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41450b:	fiadd  DWORD PTR [esi-0x15]
  41450e:	add    edx,DWORD PTR [ecx]
  414510:	sub    ecx,DWORD PTR [eax]
  414512:	or     BYTE PTR [edi+0x65],al
  414515:	out    0xa,eax
  414517:	cmp    ah,bl
  414519:	ds inc ch
  41451c:	rcr    DWORD PTR [eax+0x1b],1
  41451f:	outs   dx,DWORD PTR ds:[esi]
  414520:	cmp    eax,0xc6432d03
  414525:	pop    es
  414526:	shr    BYTE PTR ds:0x8b117abd,0xac
  41452d:	inc    ebx
  41452e:	dec    eax
  41452f:	or     esi,0x74
  414532:	scas   al,BYTE PTR es:[edi]
  414533:	bswap  ebp
  414535:	aad    0xb
  414537:	(bad)  
  414538:	sub    edx,DWORD PTR [eax-0x7abfa56a]
  41453e:	stos   BYTE PTR es:[edi],al
  41453f:	aam    0x3d
  414541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414542:	out    dx,al
  414543:	xchg   edi,eax
  414544:	loopne 0x414538
  414546:	push   esi
  414547:	inc    esp
  414548:	(bad)  
  414549:	in     al,dx
  41454a:	xchg   ebp,eax
  41454b:	mov    edi,0x48023b2
  414550:	lods   al,BYTE PTR ds:[esi]
  414551:	add    al,0x2a
  414553:	test   eax,0xb60bafb7
  414558:	jne    0x414531
  41455a:	scas   eax,DWORD PTR es:[edi]
  41455b:	mov    ebx,DWORD PTR [esi-0x51]
  41455e:	mov    ch,BYTE PTR [ebp-0x305de3fc]
  414564:	dec    ebp
  414565:	pushf  
  414566:	fcomp  QWORD PTR [ebx+eax*8+0x1a]
  41456a:	retf   
  41456b:	push   ss
  41456c:	pop    ds
  41456d:	add    al,0x51
  41456f:	imul   eax,DWORD PTR [eax],0x4a72fad3
  414575:	fmul   DWORD PTR [esi+eiz*2+0x19413b24]
  41457c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41457d:	imul   eax,ebx,0x21
  414580:	sbb    ebx,DWORD PTR [edi]
  414582:	popf   
  414583:	ins    BYTE PTR es:[edi],dx
  414584:	xor    ah,dh
  414586:	push   ds
  414587:	mov    ecx,0x82a3ff16
  41458c:	hlt    
  41458d:	pop    ecx
  41458e:	xchg   ebp,eax
  41458f:	leave  
  414590:	scas   eax,DWORD PTR es:[edi]
  414591:	in     al,dx
  414592:	add    BYTE PTR [edx+0x7d],bl
  414595:	or     al,0x4d
  414597:	mov    al,0xd8
  414599:	jecxz  0x4145dc
  41459b:	pop    eax
  41459c:	jecxz  0x4145a0
  41459e:	stos   DWORD PTR es:[edi],eax
  41459f:	outs   dx,BYTE PTR ds:[esi]
  4145a0:	and    edx,DWORD PTR [eax-0x4b6a0501]
  4145a6:	rcl    DWORD PTR [eax+0x5],1
  4145a9:	pusha  
  4145aa:	pushf  
  4145ab:	push   ss
  4145ac:	pop    ds
  4145ad:	hlt    
  4145ae:	retf   
  4145af:	push   ebx
  4145b0:	push   es
  4145b1:	cwde   
  4145b2:	out    dx,al
  4145b3:	pusha  
  4145b4:	fisubr WORD PTR [ecx-0xf]
  4145b7:	ret    0xfa0e
  4145ba:	rcr    BYTE PTR ds:0x3a08ca3,1
  4145c0:	pop    DWORD PTR [edx-0x496fef13]
  4145c6:	mov    cl,0xcb
  4145c8:	xchg   edi,eax
  4145c9:	jecxz  0x414601
  4145cb:	xor    esi,DWORD PTR [esp+ecx*2]
  4145ce:	retf   
  4145cf:	(bad)  
  4145d0:	repnz imul DWORD PTR [ebx+0x5e5da87]
  4145d7:	imul   ebp,DWORD PTR [edx],0x373a82ea
  4145dd:	arpl   WORD PTR [ecx+0x2d],di
  4145e0:	cmp    al,0x15
  4145e2:	mov    cs:0x42f2cb6,al
  4145e8:	push   eax
  4145e9:	das    
  4145ea:	mov    ebp,0x40804cbc
  4145ef:	jb     0x414575
  4145f1:	adc    dh,BYTE PTR [ecx]
  4145f3:	sbb    BYTE PTR [ecx+0x51a6cdca],al
  4145f9:	jmp    0x414618
  4145fb:	fldenv [esi-0x7d]
  4145fe:	add    al,0xd0
  414600:	lods   al,BYTE PTR ds:[esi]
  414601:	js     0x414638
  414603:	out    0x70,al
  414605:	add    BYTE PTR [ecx-0x4f],al
  414608:	sti    
  414609:	test   al,0x48
  41460b:	into   
  41460c:	in     eax,dx
  41460d:	sub    al,0xe1
  41460f:	xchg   edx,eax
  414610:	pop    DWORD PTR [esi-0x7c]
  414613:	push   edi
  414614:	lock adc dl,BYTE PTR [ebp-0x35]
  414618:	(bad)  
  414619:	pop    eax
  41461a:	retf   0x7587
  41461d:	inc    eax
  41461e:	icebp  
  41461f:	dec    ebp
  414620:	jl     0x414609
  414622:	inc    edx
  414623:	dec    ebx
  414624:	fstp   DWORD PTR [esi+0x148d7848]
  41462a:	pushf  
  41462b:	repnz rol DWORD PTR [ecx+esi*8],1
  41462f:	(bad)  
  414631:	cmp    DWORD PTR [ecx+0x1ee793aa],ebp
  414637:	popf   
  414638:	push   ecx
  414639:	sub    al,0x9f
  41463b:	jge    0x4145e4
  41463d:	adc    DWORD PTR [ebp+0x2c],0x1b
  414641:	jbe    0x41462b
  414643:	fsincos 
  414645:	ds cli 
  414647:	jmp    0xaae64e92
  41464c:	or     cl,BYTE PTR ds:0xa2bcdab0
  414652:	call   0x5b5:0xbd9f75a1
  414659:	cmp    edx,DWORD PTR [edx]
  41465b:	out    0xda,eax
  41465d:	(bad)  
  41465e:	push   ds
  41465f:	xchg   ebx,eax
  414660:	es add al,0xf5
  414663:	adc    eax,0x3965461d
  414668:	fbstp  TBYTE PTR [edx+eax*8]
  41466b:	scas   al,BYTE PTR es:[edi]
  41466c:	or     al,0x57
  41466e:	or     DWORD PTR [ebp+esi*8+0x7b9f7c03],ebx
  414675:	rcl    DWORD PTR [edx-0x5c],0x29
  414679:	data16 ja 0x4146d1
  41467c:	jo     0x4146c2
  41467e:	into   
  41467f:	outs   dx,DWORD PTR ds:[esi]
  414680:	fiadd  WORD PTR [esi+0x4efc75c6]
  414686:	je     0x41460d
  414688:	mov    eax,ds:0xa13f8d39
  41468e:	dec    esp
  41468f:	adc    esi,DWORD PTR [ecx]
  414691:	jge    0x41464e
  414693:	aam    0xdf
  414695:	test   DWORD PTR [ebp+ebp*1-0x5f],0xdc9e6eab
  41469d:	jg     0x414620
  41469f:	dec    ebp
  4146a0:	or     BYTE PTR [edi],0x60
  4146a3:	retf   
  4146a4:	lds    edx,FWORD PTR [eax+esi*1+0x17e53af7]
  4146ab:	push   ebp
  4146ac:	daa    
  4146ad:	pop    ecx
  4146ae:	pop    ebx
  4146af:	scas   al,BYTE PTR es:[edi]
  4146b0:	fwait
  4146b1:	ret    
  4146b2:	lea    ebx,[eax]
  4146b4:	pop    es
  4146b5:	lods   eax,DWORD PTR ds:[esi]
  4146b6:	out    dx,al
  4146b7:	mov    esi,0x4f7ff183
  4146bc:	or     al,0xbf
  4146be:	inc    edi
  4146bf:	daa    
  4146c0:	in     al,dx
  4146c1:	mov    ah,0x3
  4146c3:	cmc    
  4146c4:	pop    esi
  4146c5:	mov    cl,0xbc
  4146c7:	ret    
  4146c8:	out    0x22,al
  4146ca:	cmp    ebx,DWORD PTR [ecx+0x62eea406]
  4146d0:	cs loope 0x4146f5
  4146d3:	pop    ecx
  4146d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d6:	mov    ch,0x64
  4146d8:	push   0x7529e4a1
  4146dd:	dec    esp
  4146de:	loopne 0x414757
  4146e0:	dec    ebx
  4146e1:	inc    BYTE PTR [edi+ecx*2]
  4146e4:	fwait
  4146e5:	js     0x4146cf
  4146e7:	mov    ecx,0x6264512f
  4146ec:	ins    DWORD PTR es:[edi],dx
  4146ed:	pop    esi
  4146ee:	push   es
  4146ef:	je     0x414756
  4146f1:	and    al,0xad
  4146f3:	xor    BYTE PTR [eax],cl
  4146f5:	or     eax,0x810cea85
  4146fa:	es ins DWORD PTR es:[edi],dx
  4146fc:	mov    ch,0xfb
  4146fe:	aam    0x99
  414700:	and    BYTE PTR [ebp+0x30],dh
  414703:	dec    ecx
  414704:	in     al,0xb3
  414706:	idiv   DWORD PTR cs:[esi-0x40]
  41470a:	jecxz  0x414737
  41470c:	ins    DWORD PTR es:[edi],dx
  41470d:	push   0x33
  41470f:	xchg   edx,eax
  414710:	shl    DWORD PTR [ebx],0x62
  414713:	out    0x95,eax
  414715:	daa    
  414716:	pop    esp
  414717:	xor    bl,BYTE PTR [ecx+0x42]
  41471a:	stos   BYTE PTR es:[edi],al
  41471b:	mov    dl,0x63
  41471d:	mov    esi,0x19a47adb
  414722:	(bad)  
  414723:	data16 or al,0xf9
  414726:	pop    edi
  414727:	pop    ebp
  414728:	loopne 0x4146ba
  41472a:	push   cs
  41472b:	sbb    eax,0xad18a457
  414730:	push   eax
  414731:	add    DWORD PTR [edi-0x5c258611],ebp
  414737:	hlt    
  414738:	ja     0x4146c3
  41473a:	adc    al,0xf3
  41473c:	jb     0x414726
  41473e:	add    al,0xfb
  414740:	loopne 0x414779
  414742:	out    dx,al
  414743:	push   eax
  414744:	jmp    0x7b93:0xac16
  41474a:	or     eax,0xe30ff7de
  41474f:	xor    ebx,DWORD PTR [ecx-0x5d]
  414752:	sar    DWORD PTR [ebx-0x4e],cl
  414755:	pop    eax
  414756:	pop    DWORD PTR ds:0x3a4107e5
  41475d:	xor    BYTE PTR gs:[esi-0x3dd592da],0xe
  414765:	xchg   ebx,eax
  414766:	in     al,dx
  414767:	pop    ebx
  414768:	pop    ecx
  414769:	xchg   ecx,eax
  41476a:	repz lea edx,[ecx+0x7f948337]
  414771:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414773:	and    BYTE PTR [edi-0x73649c09],ch
  414779:	enter  0xbe83,0x83
  41477d:	dec    ebp
  41477e:	mov    ebp,0xa8b552db
  414783:	inc    ebp
  414784:	enter  0x3066,0xc1
  414788:	mov    ebp,0x3e9d7305
  41478d:	icebp  
  41478e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  414790:	xchg   ebx,eax
  414791:	adc    dl,BYTE PTR [edx+0xa3b7a71]
  414797:	sbb    eax,0xb0df85e8
  41479c:	push   ss
  41479d:	imul   bl
  41479f:	sahf   
  4147a0:	push   edi
  4147a1:	jmp    0x414745
  4147a3:	stos   BYTE PTR es:[edi],al
  4147a4:	xchg   ecx,eax
  4147a5:	arpl   WORD PTR [edx],cx
  4147a7:	inc    ebx
  4147a8:	or     DWORD PTR [esi-0x6e],ebp
  4147ab:	jecxz  0x4147a2
  4147ad:	aad    0xbf
  4147af:	xor    edi,DWORD PTR [eax+0x40841bc2]
  4147b5:	nop
  4147b6:	jns    0x414742
  4147b8:	push   ebx
  4147b9:	mov    ah,0x4c
  4147bb:	add    BYTE PTR [ebx],0x4c
  4147be:	aam    0x56
  4147c0:	icebp  
  4147c1:	popa   
  4147c2:	add    BYTE PTR [edx+0x6d],dl
  4147c5:	inc    ebx
  4147c6:	push   es
  4147c7:	test   DWORD PTR [ebx+0x41],esi
  4147ca:	sub    BYTE PTR [ebx-0x3a],dl
  4147cd:	ds inc esp
  4147cf:	or     eax,0x92a3977e
  4147d4:	mov    eax,?
  4147d6:	aad    0x2f
  4147d8:	push   edi
  4147d9:	arpl   cx,ax
  4147db:	into   
  4147dc:	push   es
  4147dd:	jae    0x4147e2
  4147df:	arpl   WORD PTR [ecx+0x3d],di
  4147e2:	cdq    
  4147e3:	stos   BYTE PTR es:[edi],al
  4147e4:	stos   BYTE PTR es:[edi],al
  4147e5:	pop    ss
  4147e6:	sahf   
  4147e7:	xchg   BYTE PTR [eax+0x5d],bl
  4147ea:	pop    eax
  4147eb:	lock fcmovnbe st,st(7)
  4147ee:	scas   al,BYTE PTR es:[edi]
  4147ef:	mov    dl,0x9
  4147f1:	dec    edi
  4147f2:	test   BYTE PTR [ecx-0x2b293bb2],0x61
  4147f9:	aad    0x5e
  4147fb:	mov    dh,0xfb
  4147fd:	enterw 0xa22d,0xc4
  414802:	sub    DWORD PTR [ebp+0x33],edi
  414805:	sub    edi,ebx
  414807:	cdq    
  414808:	sbb    edx,DWORD PTR [ecx]
  41480a:	in     eax,dx
  41480b:	sub    al,0x8c
  41480d:	mov    WORD PTR [esi],cs
  41480f:	mov    cs,WORD PTR [edx-0x3ba33b27]
  414815:	inc    ebp
  414816:	fwait
  414817:	sbb    ebx,0xc3300af8
  41481d:	xchg   esp,eax
  41481e:	mov    ds,WORD PTR [ebx]
  414820:	out    dx,al
  414821:	sbb    BYTE PTR [edi],dh
  414823:	xchg   ecx,eax
  414824:	fisubr WORD PTR [eax+0x656a819]
  41482a:	add    al,0xce
  41482c:	cmp    BYTE PTR [eax+0x3cd77a6d],dh
  414832:	push   ds
  414833:	leave  
  414834:	imul   ebx,ecx,0x59
  414837:	ja     0x414804
  414839:	cwde   
  41483a:	in     al,0xf4
  41483c:	(bad)  [ecx*4+0x258fec34]
  414843:	cdq    
  414844:	and    bl,BYTE PTR ds:0x32d1efbf
  41484a:	mov    dl,dh
  41484c:	mov    al,0xb9
  41484e:	(bad)  
  41484f:	test   esp,edx
  414851:	pushf  
  414852:	sar    DWORD PTR [edx+0x6c28b8b9],1
  414858:	cmp    dl,BYTE PTR [edi-0x46ca3bef]
  41485e:	shl    BYTE PTR [ebx*2+0x24ac6e2c],cl
  414865:	jno    0x414831
  414867:	into   
  414868:	stos   BYTE PTR es:[edi],al
  414869:	out    dx,eax
  41486a:	lods   al,BYTE PTR ds:[esi]
  41486b:	scas   al,BYTE PTR es:[edi]
  41486c:	out    0x3f,al
  41486e:	gs retf 
  414870:	neg    DWORD PTR [edi-0x5b1ea934]
  414876:	jbe    0x4148ec
  414878:	sub    al,0x9
  41487a:	out    0x65,al
  41487c:	lock out dx,eax
  41487e:	push   esp
  41487f:	ins    DWORD PTR es:[edi],dx
  414880:	xor    ebp,DWORD PTR [eax+0x5f]
  414883:	inc    ebp
  414884:	dec    eax
  414885:	xchg   ecx,eax
  414886:	dec    esi
  414887:	cmp    al,0xaf
  414889:	or     al,0xba
  41488b:	dec    eax
  41488c:	sbb    eax,0x629ff551
  414891:	pop    ds
  414892:	mov    bp,WORD PTR [eax+esi*2-0x4bfd94d]
  41489a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41489b:	xchg   esp,eax
  41489c:	fst    QWORD PTR [esi]
  41489e:	and    dl,BYTE PTR [eax-0x658d20a0]
  4148a4:	cmp    ch,BYTE PTR [ebx-0x73df69b4]
  4148aa:	hlt    
  4148ab:	xchg   edx,eax
  4148ac:	fild   DWORD PTR [edx+0x44]
  4148af:	fstp   QWORD PTR [esi+0x33]
  4148b2:	xor    BYTE PTR [edx-0x40137915],dh
  4148b8:	scas   eax,DWORD PTR es:[edi]
  4148b9:	jbe    0x41490c
  4148bb:	inc    edi
  4148bc:	add    eax,0x1d9c80a6
  4148c1:	mov    DWORD PTR [ecx],esp
  4148c3:	xor    DWORD PTR [eax+0x3dd961ea],esp
  4148c9:	and    ah,BYTE PTR [ebp+0x68]
  4148cc:	call   0xcaf9:0x28e54e71
  4148d3:	repz add BYTE PTR [edx-0x73380196],bh
  4148da:	icebp  
  4148db:	sbb    eax,0xe0c39369
  4148e0:	or     edi,esp
  4148e2:	ja     0x41490d
  4148e4:	iret   
  4148e5:	ins    DWORD PTR es:[edi],dx
  4148e6:	daa    
  4148e7:	cmp    bl,BYTE PTR [ebx]
  4148e9:	aad    0xb5
  4148eb:	adc    DWORD PTR [edi-0x14d1ca3a],esp
  4148f1:	and    ah,BYTE PTR [ebx]
  4148f3:	jmp    0x34771cc3
  4148f8:	xor    al,0x89
  4148fa:	mov    bh,dh
  4148fc:	sub    ah,BYTE PTR [edx+0x2b]
  4148ff:	jns    0x41493e
  414901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414902:	sbb    ecx,DWORD PTR [esi-0x71]
  414905:	sub    DWORD PTR [eax+edi*2+0x4a2b476f],ebp
  41490c:	inc    esi
  41490d:	shl    DWORD PTR [edx-0x5275a6c9],cl
  414913:	cli    
  414914:	xlat   BYTE PTR ds:[ebx]
  414915:	sbb    edx,esi
  414917:	mov    WORD PTR [ecx+0x356188a0],cs
  41491d:	dec    esp
  41491e:	sub    edx,ecx
  414920:	scas   eax,DWORD PTR es:[edi]
  414921:	aas    
  414922:	pop    edx
  414923:	das    
  414924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414925:	xor    al,0x3d
  414927:	jmp    0x41a84fed
  41492c:	(bad)  
  41492d:	jmp    0xcd69:0xdbc44108
  414934:	out    dx,al
  414935:	addr16 ds xchg edx,eax
  414938:	sub    DWORD PTR [eax-0x2f],eax
  41493b:	and    eax,0xc39fd13e
  414940:	nop
  414941:	str    edx
  414944:	xor    DWORD PTR [ecx-0x60],esp
  414947:	xor    eax,DWORD PTR [esi]
  414949:	add    eax,ebx
  41494b:	fwait
  41494c:	nop
  41494d:	push   esi
  41494e:	retf   0x68d1
  414951:	jge    0x4149ce
  414953:	bound  esi,QWORD PTR [ebx+ecx*4]
  414956:	jp     0x414942
  414958:	pop    ebp
  414959:	push   eax
  41495a:	icebp  
  41495b:	push   cs
  41495c:	mov    al,ds:0x5f62862e
  414961:	je     0x414963
  414963:	rcl    BYTE PTR [esi-0x58eb84e5],1
  414969:	cmp    BYTE PTR [edx],bh
  41496b:	add    eax,0xfb1e11a8
  414970:	pop    ebp
  414971:	and    DWORD PTR [bp+si-0x35],0x60fa0cf6
  414979:	push   es
  41497a:	xchg   esi,eax
  41497b:	jno    0x414931
  41497d:	into   
  41497e:	out    0x55,al
  414980:	jns    0x414926
  414982:	es fstp st(0)
  414985:	test   DWORD PTR [edi-0x142e8f78],edi
  41498b:	adc    ebx,edi
  41498d:	xchg   ebx,eax
  41498e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41498f:	add    dh,BYTE PTR ds:[edi-0x68660122]
  414996:	push   edi
  414997:	std    
  414998:	xor    eax,DWORD PTR ds:0xb31f7242
  41499e:	call   0xf135:0xe7943377
  4149a5:	bound  ecx,QWORD PTR [esi]
  4149a7:	add    ah,BYTE PTR [eax+0x3fa4ecaa]
  4149ad:	xchg   ecx,eax
  4149ae:	adc    bl,BYTE PTR [eax+0x15]
  4149b1:	or     ebx,DWORD PTR [ebx-0x90fbb76]
  4149b7:	lds    edi,FWORD PTR [ecx+0x5e]
  4149ba:	lds    eax,FWORD PTR [esi+eax*2+0x69f098a4]
  4149c1:	push   cs
  4149c2:	(bad)  
  4149c3:	fcom   DWORD PTR [ebp-0x428b396b]
  4149c9:	loop   0x4149bb
  4149cb:	aas    
  4149cc:	fwait
  4149cd:	std    
  4149ce:	(bad)  
  4149cf:	push   0xb628ce05
  4149d4:	aas    
  4149d5:	aad    0x19
  4149d7:	jle    0x4149ef
  4149d9:	call   DWORD PTR ds:0x636a8165
  4149df:	in     al,0x60
  4149e1:	dec    esi
  4149e2:	ins    DWORD PTR es:[edi],dx
  4149e3:	scas   eax,DWORD PTR es:[edi]
  4149e4:	ret    
  4149e5:	xor    ch,BYTE PTR [ebx+0xab567b9]
  4149eb:	inc    ebp
  4149ec:	pop    ebp
  4149ed:	dec    esi
  4149ee:	retf   0x67b0
  4149f1:	addr16 dec eax
  4149f3:	pop    es
  4149f4:	xchg   BYTE PTR [ebx-0x724197f],dl
  4149fa:	jns    0x414a55
  4149fc:	xchg   esi,eax
  4149fd:	jbe    0x41499d
  4149ff:	and    al,0x3b
  414a01:	sbb    bl,BYTE PTR [edi+0x6e]
  414a04:	push   ebp
  414a05:	call   0x79044e93
  414a0a:	fbstp  TBYTE PTR ds:0x7e19bd94
  414a10:	xlat   BYTE PTR ds:[ebx]
  414a11:	les    ebx,FWORD PTR [edx]
  414a13:	out    0xdc,eax
  414a15:	adc    al,0x21
  414a17:	pop    ecx
  414a18:	add    ch,ah
  414a1a:	push   ds
  414a1b:	xor    edi,DWORD PTR [edx-0x1f6d0ced]
  414a21:	outs   dx,BYTE PTR ds:[esi]
  414a22:	clc    
  414a23:	jmp    0x4149cb
  414a25:	and    DWORD PTR [edx+eax*8+0x5f],ecx
  414a29:	push   edi
  414a2a:	jmp    esp
  414a2c:	push   ebp
  414a2d:	lahf   
  414a2e:	ds push edi
  414a30:	push   0xf8eff825
  414a35:	jg     0x414a59
  414a37:	push   ebp
  414a38:	xchg   edi,eax
  414a39:	rcr    DWORD PTR [ecx+0x4f],1
  414a3c:	pop    edi
  414a3d:	(bad)  
  414a3e:	xchg   ecx,eax
  414a3f:	cmp    bl,dl
  414a41:	pop    es
  414a42:	inc    ebp
  414a43:	iret   
  414a44:	adc    DWORD PTR [edi],ebp
  414a46:	adc    al,0x67
  414a48:	jae    0x414a1e
  414a4a:	aam    0x8f
  414a4c:	ja     0x414ac2
  414a4e:	jp     0x414a4d
  414a50:	jne    0x414aaf
  414a52:	in     al,0xf6
  414a54:	leave  
  414a55:	mov    esi,0xf0224d5
  414a5a:	add    al,0x81
  414a5c:	lods   eax,DWORD PTR ds:[esi]
  414a5d:	cld    
  414a5e:	adc    BYTE PTR [ebp*8-0x2a74115],dl
  414a65:	imul   eax,ebp,0xffffff96
  414a68:	pop    ds
  414a69:	ret    0x8208
  414a6c:	xor    DWORD PTR [edi+ebx*8],edi
  414a6f:	inc    edx
  414a70:	inc    ebx
  414a71:	adc    ebp,ebp
  414a73:	jo     0x414abe
  414a75:	repnz pop ebx
  414a77:	mov    DWORD PTR [edi],eax
  414a79:	xchg   DWORD PTR [ebx+edx*8],eax
  414a7c:	pop    esp
  414a7d:	inc    ebp
  414a7e:	xor    ecx,DWORD PTR [edx-0x5c8c003]
  414a84:	cwde   
  414a85:	out    dx,al
  414a86:	push   ds
  414a87:	aas    
  414a88:	rep outs dx,DWORD PTR ds:[esi]
  414a8a:	test   eax,0x75b70df5
  414a8f:	adc    eax,0xd8cead4d
  414a94:	dec    esi
  414a95:	call   0xfdfe2a75
  414a9a:	or     eax,0x27abc7a5
  414a9f:	push   esp
  414aa0:	add    eax,esp
  414aa2:	repnz test eax,0xb321983e
  414aa8:	cmp    eax,0x321c2bf8
  414aad:	loope  0x414af2
  414aaf:	repz push cs
  414ab1:	mov    bh,0x3d
  414ab3:	sub    esi,0x28
  414ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ab7:	pushf  
  414ab8:	jl     0x414ada
  414aba:	cld    
  414abb:	(bad)  
  414abc:	ror    BYTE PTR [ecx+0x2a],0xef
  414ac0:	and    ecx,DWORD PTR [edx+edx*2+0x7d4a0b57]
  414ac7:	cmp    ebp,DWORD PTR [ecx]
  414ac9:	cwd    
  414acb:	pusha  
  414acc:	imul   edi,DWORD PTR [ebp+0x57],0xfffffffb
  414ad0:	push   0x64
  414ad2:	and    DWORD PTR [ebp-0x52],0x6a6439ff
  414ad9:	mov    ds:0xddcd4483,eax
  414ade:	jmp    0x414ad8
  414ae0:	jle    0x414aa8
  414ae2:	and    DWORD PTR [ebx+0x29b2d900],edi
  414ae8:	fstp   TBYTE PTR [esi-0x2b5ec872]
  414aee:	push   0xffffff8e
  414af0:	or     DWORD PTR [edi-0x5805635b],esi
  414af6:	cdq    
  414af7:	push   0xfffffff8
  414af9:	add    al,BYTE PTR [edi-0x4c444a13]
  414aff:	clc    
  414b00:	cdq    
  414b01:	mov    bh,0x4
  414b03:	xchg   ebx,eax
  414b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b07:	inc    esp
  414b08:	retf   0xdc8e
  414b0b:	icebp  
  414b0c:	out    dx,al
  414b0d:	or     al,0x0
  414b0f:	stos   BYTE PTR es:[edi],al
  414b10:	mov    ebx,0x8331970
  414b15:	xor    al,0xcf
  414b17:	test   DWORD PTR [edx+0x7a502755],eax
  414b1d:	jae    0x414b1a
  414b1f:	add    ch,BYTE PTR [ecx]
  414b21:	add    ecx,ecx
  414b23:	add    eax,0x2a3e4a4b
  414b28:	push   ds
  414b29:	xchg   esi,eax
  414b2a:	syscall 
  414b2c:	push   es
  414b2d:	sti    
  414b2e:	dec    ecx
  414b2f:	xor    ebx,DWORD PTR [eax+ecx*1+0x719aae4d]
  414b36:	push   ss
  414b37:	push   edi
  414b38:	into   
  414b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b3a:	(bad)  
  414b3c:	pop    esi
  414b3d:	sub    al,0xb1
  414b3f:	inc    esi
  414b40:	sbb    eax,0x550ee6d2
  414b45:	add    BYTE PTR [ecx+0x2f],ah
  414b48:	(bad)  
  414b49:	fstp   TBYTE PTR [esi-0x3e0e2965]
  414b4f:	jp     0x414af7
  414b51:	sbb    BYTE PTR ds:0x94340a17,bh
  414b57:	outs   dx,BYTE PTR ds:[esi]
  414b58:	inc    edx
  414b59:	mov    dl,0x91
  414b5b:	cmp    ebp,ebx
  414b5d:	inc    DWORD PTR [esi+0x58fee98d]
  414b63:	enter  0xd4aa,0x78
  414b67:	loop   0x414bd5
  414b69:	out    dx,al
  414b6a:	jb     0x414ba4
  414b6c:	dec    ebx
  414b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b6e:	out    0x84,al
  414b70:	pop    edi
  414b71:	jae    0x414bc3
  414b73:	ficomp WORD PTR [edi+0x67]
  414b76:	je     0x414b1d
  414b78:	(bad)  
  414b79:	dec    ecx
  414b7a:	test   BYTE PTR [edx+0x2f],ch
  414b7d:	cmp    edi,ecx
  414b7f:	mov    al,BYTE PTR [ebx-0x138aec5e]
  414b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b86:	leave  
  414b87:	lea    ecx,[edi-0x12e105a1]
  414b8d:	jnp    0x414b11
  414b8f:	leave  
  414b90:	scas   eax,DWORD PTR es:[edi]
  414b91:	es stos BYTE PTR es:[edi],al
  414b93:	sahf   
  414b94:	or     al,0x48
  414b96:	leave  
  414b97:	jle    0x414b20
  414b99:	mov    edi,0x598c5091
  414b9e:	mov    esp,0xdba27d59
  414ba3:	fucomp st(5)
  414ba5:	xor    eax,0xb8735645
  414baa:	mov    bh,0x7c
  414bac:	mov    ebp,edx
  414bae:	and    al,0xa2
  414bb0:	(bad)  
  414bb2:	dec    ebp
  414bb3:	rcl    DWORD PTR [edx],cl
  414bb5:	cmp    esi,edi
  414bb7:	mov    bh,0x29
  414bb9:	cmp    cl,BYTE PTR [eax]
  414bbb:	into   
  414bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bbd:	cld    
  414bbe:	enter  0x95db,0xdb
  414bc2:	cmp    eax,0xf2672a2
  414bc7:	mov    ch,0x88
  414bc9:	gs dec eax
  414bcb:	rcl    DWORD PTR [eax],1
  414bcd:	push   cs
  414bce:	outs   dx,DWORD PTR ds:[esi]
  414bcf:	(bad)  
  414bd1:	aad    0x6a
  414bd3:	add    dl,dh
  414bd5:	jns    0x414b63
  414bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd8:	into   
  414bd9:	enter  0x7546,0xa1
  414bdd:	aas    
  414bde:	test   BYTE PTR [ebx+0x4025eb45],al
  414be4:	or     bh,ch
  414be6:	sar    BYTE PTR [eax+0x5c],0xb5
  414bea:	adc    cl,BYTE PTR [eax]
  414bec:	mov    cl,0x3e
  414bee:	xor    BYTE PTR [esi+0x17f59fe4],0x0
  414bf5:	pusha  
  414bf6:	push   edx
  414bf7:	and    al,0x19
  414bf9:	adc    eax,0xdaf09ae9
  414bfe:	fcmove st,st(2)
  414c00:	sub    BYTE PTR [eax],bl
  414c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c03:	mov    ebp,ebx
  414c05:	rol    BYTE PTR [eax],0x50
  414c08:	popf   
  414c09:	arpl   si,cx
  414c0b:	(bad)  
  414c0c:	xchg   esp,eax
  414c0d:	jnp    0x414c6c
  414c0f:	js     0x414ba3
  414c11:	scas   eax,DWORD PTR es:[edi]
  414c12:	xor    eax,0xbd573790
  414c17:	pop    esp
  414c18:	mov    cl,0x23
  414c1a:	loopne 0x414bb7
  414c1c:	fnstsw WORD PTR [ecx+ebp*1-0x75]
  414c20:	or     al,0x52
  414c22:	dec    esi
  414c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c24:	dec    esp
  414c25:	ins    BYTE PTR es:[edi],dx
  414c26:	(bad)  
  414c28:	push   esp
  414c29:	inc    eax
  414c2a:	xchg   DWORD PTR [edx-0x7e],esi
  414c2d:	test   eax,0x492e3775
  414c32:	lods   al,BYTE PTR ds:[esi]
  414c33:	sti    
  414c34:	adc    eax,0x83237bb
  414c39:	out    0x8c,al
  414c3b:	(bad)
  414c3f:	popa   
  414c40:	es fcomi st,st(3)
  414c43:	mov    ds:0x232cd193,al
  414c48:	ins    BYTE PTR es:[edi],dx
  414c49:	into   
  414c4a:	stos   DWORD PTR es:[edi],eax
  414c4b:	enter  0x68d9,0xe3
  414c4f:	jmp    0xf9f8:0xd60f056f
  414c56:	pop    ds
  414c57:	pop    edi
  414c58:	das    
  414c59:	mov    BYTE PTR [eax+eax*8-0x421ee6ba],dh
  414c60:	les    ebp,FWORD PTR [eax-0xa]
  414c63:	sub    DWORD PTR [eax+0x12],esp
  414c66:	lds    ebp,FWORD PTR [esi]
  414c68:	push   edx
  414c69:	cwde   
  414c6a:	push   0x45
  414c6c:	cmp    al,0x77
  414c6e:	jl     0x414c72
  414c70:	fwait
  414c71:	iret   
  414c72:	repz shl BYTE PTR [esi-0x4e],0x81
  414c77:	popa   
  414c78:	(bad)  
  414c79:	in     eax,0xc1
  414c7b:	mov    esp,0x34186c9b
  414c80:	mov    dh,0xdf
  414c82:	scas   al,BYTE PTR es:[edi]
  414c83:	jl     0x414c76
  414c85:	push   esi
  414c86:	repz sbb DWORD PTR [eax],ecx
  414c89:	inc    esi
  414c8a:	test   al,0xa8
  414c8c:	mov    al,0x66
  414c8e:	fwait
  414c8f:	or     ch,0xb8
  414c92:	pop    edi
  414c93:	jl     0x414c51
  414c95:	or     bl,BYTE PTR ds:0x55450549
  414c9b:	(bad)  
  414c9c:	rcr    DWORD PTR [ebp+ebx*8-0x73d71312],1
  414ca3:	imul   edx,DWORD PTR [eax],0xffffff8d
  414ca6:	push   eax
  414ca7:	scas   al,BYTE PTR es:[edi]
  414ca8:	xchg   ebx,eax
  414ca9:	mov    eax,0x65011a59
  414cae:	sub    eax,0x58e8c4b5
  414cb3:	and    bh,BYTE PTR [esp+edi*4-0x28]
  414cb7:	shl    DWORD PTR ds:0x99351d6c,1
  414cbd:	fldenv [ecx]
  414cbf:	dec    ecx
  414cc0:	out    dx,eax
  414cc1:	std    
  414cc2:	xchg   edx,eax
  414cc3:	jbe    0x414cd0
  414cc5:	test   edi,ebp
  414cc7:	leave  
  414cc8:	mov    edx,edi
  414cca:	push   edi
  414ccb:	push   ss
  414ccc:	hlt    
  414ccd:	inc    esi
  414cce:	cmc    
  414ccf:	cmp    esi,ecx
  414cd1:	test   eax,0x273a327b
  414cd6:	enter  0xbf88,0xe5
  414cda:	mov    cl,0x49
  414cdc:	inc    edx
  414cdd:	mov    dl,0xb8
  414cdf:	enter  0x8e7f,0xa3
  414ce3:	imul   edx,DWORD PTR [edi+0x2e5edd4e],0xfffffff3
  414cea:	mov    ebp,0xe6fe940b
  414cef:	aas    
  414cf0:	mov    WORD PTR [ecx+0x17],?
  414cf3:	dec    edi
  414cf4:	imul   edi,DWORD PTR [ebp-0x2bfc6f10],0xffffffcf
  414cfb:	cmp    BYTE PTR [ecx],dl
  414cfd:	call   0x6bb0:0x358d1b31
  414d04:	int    0x69
  414d06:	je     0x414d5c
  414d08:	dec    ebx
  414d09:	dec    esi
  414d0a:	es or  al,0xdf
  414d0d:	loope  0x414d17
  414d0f:	(bad)  
  414d11:	je     0x414cb8
  414d13:	test   eax,esp
  414d15:	add    al,BYTE PTR [ebp-0x19]
  414d18:	pop    edx
  414d19:	std    
  414d1a:	jnp    0x414ce9
  414d1c:	aas    
  414d1d:	jp     0x414d02
  414d1f:	ror    dh,cl
  414d21:	(bad)  
  414d22:	ss pop esp
  414d24:	push   eax
  414d25:	cmp    bh,dh
  414d27:	loop   0x414d17
  414d29:	lods   al,BYTE PTR ds:[esi]
  414d2a:	mov    ss,WORD PTR [esi+edi*8-0x4a2184db]
  414d31:	and    eax,0xd866e378
  414d36:	mov    cl,BYTE PTR [edx]
  414d38:	idiv   DWORD PTR [ebx+0x7b]
  414d3b:	test   al,0xa9
  414d3d:	add    esi,DWORD PTR [ebp-0x6a]
  414d40:	cmp    BYTE PTR [ecx],ch
  414d42:	out    0x67,al
  414d44:	aaa    
  414d45:	aad    0x5b
  414d47:	into   
  414d48:	add    ebp,DWORD PTR [ecx-0x253c498e]
  414d4e:	push   ss
  414d4f:	sub    ebp,DWORD PTR [eax]
  414d51:	mov    dh,0x95
  414d53:	leave  
  414d54:	lods   al,BYTE PTR ds:[esi]
  414d55:	ins    DWORD PTR es:[di],dx
  414d57:	jb     0x414d36
  414d59:	dec    esi
  414d5a:	fwait
  414d5b:	bnd je 0x414da8
  414d5e:	scas   eax,DWORD PTR es:[edi]
  414d5f:	sbb    DWORD PTR ds:0x3eaa1311,0x88d53ad4
  414d69:	cmp    eax,0xf0a85d1d
  414d6e:	adc    eax,DWORD PTR [ecx]
  414d70:	push   ebp
  414d71:	cs xchg esi,eax
  414d73:	fucomp st(0)
  414d75:	jge    0x414d49
  414d77:	xchg   ecx,eax
  414d78:	test   al,0x2a
  414d7a:	mov    ebp,0x7bf875bc
  414d7f:	dec    esp
  414d80:	stos   DWORD PTR es:[edi],eax
  414d81:	pop    ebx
  414d82:	xchg   edx,eax
  414d83:	jg     0x414d2a
  414d85:	dec    edx
  414d86:	mov    bh,0x96
  414d88:	sub    BYTE PTR [ebx-0x48],0xa8
  414d8c:	jne    0x414e03
  414d8e:	cwde   
  414d8f:	pop    ecx
  414d90:	cdq    
  414d91:	mov    al,ds:0x73bb0efe
  414d96:	repz add bh,dl
  414d99:	inc    edi
  414d9a:	xchg   DWORD PTR [ebp+ebp*1+0x5],ebx
  414d9e:	loope  0x414d9e
  414da0:	nop
  414da1:	mov    esi,0xcdf212ae
  414da6:	push   esi
  414da7:	adc    BYTE PTR [ecx-0x1b69cca1],ah
  414dad:	push   edx
  414dae:	sub    eax,0xac4aeed4
  414db3:	stos   BYTE PTR es:[edi],al
  414db4:	xor    ah,bl
  414db6:	fs dec edx
  414db8:	lea    edi,[edi]
  414dba:	cmp    bh,BYTE PTR [ecx+edx*1+0x29]
  414dbe:	jecxz  0x414d77
  414dc0:	xchg   ebp,eax
  414dc1:	sub    ecx,DWORD PTR [edi+0x6bf7468a]
  414dc7:	inc    eax
  414dc8:	mov    esp,ss
  414dca:	shr    DWORD PTR [ebx],cl
  414dcc:	cld    
  414dcd:	stc    
  414dce:	leave  
  414dcf:	popa   
  414dd0:	retf   0x4696
  414dd3:	inc    ecx
  414dd4:	push   esi
  414dd5:	jno    0x414df3
  414dd7:	ds mov bh,0xfc
  414dda:	jp     0x414da4
  414ddc:	or     al,0x50
  414dde:	pop    edi
  414ddf:	out    dx,al
  414de0:	shr    BYTE PTR fs:[edi+0x68],0xda
  414de5:	pusha  
  414de6:	fbstp  TBYTE PTR ds:0x198d9365
  414dec:	adc    eax,0xc05dbd2c
  414df1:	push   edx
  414df2:	addr16 loopne 0x414dfc
  414df5:	in     al,0xd0
  414df7:	or     ah,ch
  414df9:	add    al,0x9a
  414dfb:	jmp    0x414d8d
  414dfd:	cmp    BYTE PTR [edi+ebx*4+0x3d],bl
  414e01:	jmp    0x414ded
  414e03:	or     eax,0x4954d88c
  414e08:	into   
  414e09:	mov    eax,ds:0xf04d017a
  414e0e:	jecxz  0x414dd7
  414e10:	int    0x51
  414e12:	push   ss
  414e13:	inc    DWORD PTR [edx-0x5cadfd05]
  414e19:	jge    0x414e01
  414e1b:	jne    0x414dc6
  414e1d:	fimul  DWORD PTR es:[edi]
  414e20:	daa    
  414e21:	inc    eax
  414e23:	test   al,0xcd
  414e25:	push   0x6f
  414e27:	push   eax
  414e28:	imul   esi,esp,0xdd559f72
  414e2e:	imul   ecx,DWORD PTR [edx+0x1e],0xe28f1903
  414e35:	and    ax,0x6743
  414e39:	cdq    
  414e3a:	add    ecx,DWORD PTR [ebx+0x3aba29fd]
  414e40:	and    al,0xe7
  414e42:	xor    al,0x9a
  414e44:	xor    al,0x32
  414e46:	cmp    eax,0x8cea4234
  414e4b:	mov    esi,0x3d37ff86
  414e50:	ss jmp 0x414e15
  414e53:	rcl    BYTE PTR [edi+0xd],1
  414e56:	je     0x414ea6
  414e58:	add    bh,BYTE PTR [ecx]
  414e5a:	pop    esi
  414e5b:	int3   
  414e5c:	push   0x4e
  414e5e:	stos   DWORD PTR es:[edi],eax
  414e5f:	xchg   esi,eax
  414e60:	aaa    
  414e61:	mov    ecx,0xf7d956b2
  414e66:	push   ebx
  414e67:	push   cs
  414e68:	fisttp QWORD PTR [eax-0x59d2769a]
  414e6e:	xchg   esp,eax
  414e6f:	(bad)  
  414e70:	loopne 0x414e41
  414e72:	jl     0x414ee0
  414e74:	loop   0x414e89
  414e76:	idiv   bh
  414e78:	xchg   esi,eax
  414e79:	push   cs
  414e7a:	call   0x98aca707
  414e7f:	test   bl,0x59
  414e82:	mov    ah,0xce
  414e84:	and    ebp,edx
  414e86:	and    al,0x5f
  414e88:	test   dl,ch
  414e8a:	cmp    bh,BYTE PTR [ecx+0x5026601b]
  414e90:	mov    al,0xb0
  414e92:	out    0x5c,eax
  414e94:	and    eax,0x1d81f124
  414e99:	mov    al,0xe7
  414e9b:	cmp    DWORD PTR [ebx],edi
  414e9d:	mov    dh,0xba
  414e9f:	in     eax,dx
  414ea0:	dec    eax
  414ea1:	cwde   
  414ea2:	cmp    esi,DWORD PTR [edi+0x4b]
  414ea5:	xor    eax,DWORD PTR [edx]
  414ea7:	sub    esp,ecx
  414ea9:	cwde   
  414eaa:	mov    eax,ds:0x51986af
  414eaf:	mov    dh,0x17
  414eb1:	mov    ds:0xdae4f26f,eax
  414eb6:	popf   
  414eb7:	test   DWORD PTR [ebx-0x55],0x13eaa660
  414ebe:	mov    cl,0x34
  414ec0:	out    dx,al
  414ec1:	or     al,0xf
  414ec3:	into   
  414ec4:	jns    0x414f0b
  414ec6:	jnp    0x414eb7
  414ec8:	pop    eax
  414ec9:	ret    
  414eca:	mov    WORD PTR [ebx-0x2f2edb69],ss
  414ed0:	add    BYTE PTR [edx-0x1616dce6],ah
  414ed6:	call   0xefc8845a
  414edb:	lods   al,BYTE PTR ds:[esi]
  414edc:	mov    cl,0x8a
  414ede:	mov    edx,0xb4580a8d
  414ee3:	and    bh,BYTE PTR [edi]
  414ee5:	addr16 add ebp,edx
  414ee8:	ins    BYTE PTR es:[edi],dx
  414ee9:	test   BYTE PTR [ebp+0x5d],cl
  414eec:	aaa    
  414eed:	div    BYTE PTR [edx]
  414eef:	popa   
  414ef0:	jno    0x414eb5
  414ef2:	jmp    0x414ed1
  414ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ef5:	sbb    al,0xd7
  414ef7:	sbb    eax,0x43f12352
  414efc:	inc    eax
  414efd:	cs pusha 
  414eff:	ins    DWORD PTR es:[edi],dx
  414f00:	add    eax,0xb59fbb75
  414f05:	add    ecx,ecx
  414f07:	mov    bl,0x1f
  414f09:	sbb    bl,BYTE PTR [edx+0x7f01ba69]
  414f0f:	pop    esp
  414f10:	mov    edx,0xe3f03291
  414f15:	popf   
  414f16:	pop    esp
  414f17:	push   esp
  414f18:	sbb    BYTE PTR [ecx-0x37],cl
  414f1b:	hlt    
  414f1c:	std    
  414f1d:	int3   
  414f1e:	not    DWORD PTR [ebx+0x41]
  414f21:	dec    esi
  414f22:	mov    cl,0x5a
  414f24:	out    dx,al
  414f25:	jg     0x414f43
  414f27:	pop    es
  414f28:	jne    0x414f88
  414f2a:	shl    DWORD PTR [edi],0xb1
  414f2d:	iret   
  414f2e:	aaa    
  414f2f:	popa   
  414f30:	fsubr  QWORD PTR [ebx]
  414f32:	mov    BYTE PTR [esi+0x46635444],dl
  414f38:	into   
  414f39:	data16 and cl,al
  414f3c:	lock jno 0x414efd
  414f3f:	retf   0x5b06
  414f42:	push   ecx
  414f43:	xor    eax,0x34301b24
  414f48:	jle    0x414f14
  414f4a:	dec    edi
  414f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f4c:	mov    edi,ecx
  414f4e:	lods   eax,DWORD PTR ds:[esi]
  414f4f:	adc    DWORD PTR [ecx],edi
  414f51:	imul   edi,DWORD PTR [ecx+0x25],0xffffff9a
  414f55:	pop    edi
  414f56:	pop    ebp
  414f57:	mov    esi,ss
  414f59:	ret    
  414f5a:	xor    eax,0x97eefee1
  414f5f:	and    cl,ah
  414f61:	cdq    
  414f62:	imul   ebx,DWORD PTR [edi+eax*8-0x2e09fc07],0xee2b4b88
  414f6d:	and    cl,ah
  414f6f:	and    BYTE PTR [ecx],cl
  414f71:	push   0x9e9f303f
  414f76:	outs   dx,BYTE PTR ds:[esi]
  414f77:	fsub   DWORD PTR [ecx]
  414f79:	es fcmovnbe st,st(5)
  414f7c:	loopne 0x414f56
  414f7e:	inc    edx
  414f7f:	push   edi
  414f80:	push   ebp
  414f81:	rol    BYTE PTR [eax-0x30],1
  414f84:	imul   esi,DWORD PTR [edx+eax*1],0xffffffed
  414f88:	jb     0x414f4e
  414f8a:	jno    0x414f54
  414f8c:	(bad)  
  414f8d:	fisub  WORD PTR [ebx+0x33]
  414f90:	int3   
  414f91:	sub    dl,bh
  414f93:	xchg   DWORD PTR [ecx+0xab4bd53],esp
  414f99:	imul   edi,esp,0x64
  414f9c:	stos   DWORD PTR es:[edi],eax
  414f9d:	(bad)  
  414f9e:	pop    ds
  414f9f:	xchg   BYTE PTR [eax-0xb14ebc3],ch
  414fa5:	jnp    0x414f86
  414fa7:	pop    ecx
  414fa8:	mov    esi,0xb93ef25a
  414fad:	xchg   esp,eax
  414fae:	shl    al,1
  414fb0:	mov    ecx,0x40e957e4
  414fb5:	pop    ebx
  414fb6:	scas   eax,DWORD PTR es:[edi]
  414fb7:	mov    eax,ds:0x2c69adfd
  414fbc:	push   esp
  414fbd:	fwait
  414fbe:	sub    DWORD PTR [eax*4+0x58cc3fd0],edi
  414fc5:	mov    edi,eax
  414fc7:	mov    ebp,0xa7ddaa2a
  414fcc:	xchg   edx,eax
  414fcd:	stos   BYTE PTR es:[edi],al
  414fce:	push   ss
  414fcf:	dec    edx
  414fd0:	adc    dl,0xb2
  414fd3:	fsub   QWORD PTR [eax-0x20]
  414fd6:	cmp    eax,0xe0373bdf
  414fdb:	sbb    BYTE PTR [edx+0x1cad46b3],0xe1
  414fe2:	cli    
  414fe3:	mov    BYTE PTR [edx+0x6a00a375],bl
  414fe9:	sbb    ebp,DWORD PTR [ecx]
  414feb:	lock adc dh,BYTE PTR [eax-0x53]
  414fef:	aaa    
  414ff0:	inc    ebx
  414ff1:	je     0x415057
  414ff3:	or     al,0xb7
  414ff5:	pop    edi
  414ff6:	xchg   ecx,eax
  414ff7:	popf   
  414ff8:	xor    eax,0x1c34f2a5
  414ffd:	xchg   edx,eax
  414ffe:	fcom   QWORD PTR [eax+eax*8+0x3]
  415002:	out    dx,al
  415003:	hlt    
  415004:	sbb    al,0xbd
  415006:	jp     0x41505c
  415008:	inc    esi
  415009:	ficomp WORD PTR [edx-0x3c52bdbf]
  41500f:	ja     0x41503a
  415011:	mov    eax,DWORD PTR [esi+esi*4-0x62]
  415015:	fnsave ds:0x4b65858d
  41501b:	xor    DWORD PTR [ebx-0x69131e42],esp
  415021:	daa    
  415022:	aaa    
  415023:	xor    al,0xb3
  415025:	mov    bh,0x19
  415027:	and    ebx,edi
  415029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41502a:	add    eax,0xd434315a
  41502f:	icebp  
  415030:	ja     0x414fe6
  415032:	lahf   
  415033:	call   0x332fdf08
  415038:	int3   
  415039:	out    0x3d,eax
  41503b:	int    0x87
  41503d:	push   ebx
  41503e:	popa   
  41503f:	rcr    esp,1
  415041:	jp     0x41504c
  415043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415044:	int3   
  415045:	push   ebp
  415046:	mov    bl,0x18
  415048:	outs   dx,BYTE PTR ds:[esi]
  415049:	pop    esp
  41504a:	sbb    eax,0x3c1971b
  41504f:	(bad)  
  415051:	sub    al,0x85
  415053:	pop    esp
  415054:	fbld   TBYTE PTR [edx+0x1d]
  415057:	adc    DWORD PTR [ecx+0x13537ad2],edx
  41505d:	jp     0x414fef
  41505f:	sti    
  415060:	fstp   QWORD PTR [ecx+0x35]
  415063:	rcr    DWORD PTR [ecx+0x57],1
  415066:	je     0x41509a
  415068:	jnp    0x4150a2
  41506a:	pop    ds
  41506b:	push   0xfffffffc
  41506d:	hlt    
  41506e:	mov    esp,0xf31e354d
  415073:	clc    
  415074:	add    al,0x14
  415076:	ficomp WORD PTR [edx-0x14d4546f]
  41507c:	je     0x41504c
  41507e:	or     BYTE PTR [eax-0x32],0xd8
  415082:	test   BYTE PTR [ecx+0x6d861464],dl
  415088:	or     BYTE PTR [esi-0x5ff6ec91],ch
  41508e:	sub    esi,DWORD PTR [eax]
  415090:	or     DWORD PTR [ecx-0x3bb1ddb1],eax
  415096:	xor    BYTE PTR [edi+0x4],dh
  415099:	push   edi
  41509a:	jmp    0x4150d2
  41509c:	sub    eax,0xcc9b2871
  4150a1:	add    ebp,DWORD PTR [ebp-0x3387f645]
  4150a7:	jo     0x4150c3
  4150a9:	jmp    0xdf7d:0x10a5e378
  4150b0:	jne    0x415099
  4150b2:	or     DWORD PTR [ebx-0x217c1321],0xffffffc2
  4150b9:	sub    DWORD PTR [ebp+0x5461b342],0xde9208d2
  4150c3:	icebp  
  4150c4:	pop    ds
  4150c5:	in     eax,dx
  4150c6:	enter  0xe436,0x1a
  4150ca:	scas   al,BYTE PTR es:[edi]
  4150cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150cc:	xor    al,0xef
  4150ce:	push   esi
  4150cf:	ds shl dh,1
  4150d2:	ss adc edi,edi
  4150d5:	call   0x142c781d
  4150da:	mov    dh,0xef
  4150dc:	sub    eax,0xae0eea82
  4150e1:	fdivr  st(4),st
  4150e3:	pop    ecx
  4150e4:	mov    ch,0x35
  4150e6:	mov    ds:0xe0bfedbe,al
  4150eb:	ror    esi,0x82
  4150ee:	mov    esi,0x75edd659
  4150f3:	daa    
  4150f4:	addr16 int 0x68
  4150f7:	je     0x415159
  4150f9:	sub    al,0x1b
  4150fb:	cdq    
  4150fc:	rol    DWORD PTR ds:0xbabca97d,1
  415102:	es xchg edx,eax
  415104:	loop   0x4150a3
  415106:	popf   
  415107:	push   ss
  415108:	test   DWORD PTR [eax+ecx*8+0x239f7930],edx
  41510f:	add    DWORD PTR [ebx],edi
  415111:	jbe    0x4150aa
  415113:	fsub   DWORD PTR [ecx*4+0x7b09f182]
  41511a:	vorps  ymm4,ymm1,ymm5
  41511e:	jae    0x415151
  415120:	add    ch,BYTE PTR [esi-0x58254d1d]
  415126:	(bad)  
  415127:	and    ebp,edi
  415129:	cmp    bh,BYTE PTR [eax+edx*1+0x6f03b648]
  415130:	push   esp
  415131:	mov    ecx,DWORD PTR [edx-0x2c]
  415134:	lock es jo 0x4150d4
  415138:	dec    eax
  415139:	sbb    BYTE PTR [esi+0x261d55b0],0x4c
  415140:	hlt    
  415141:	mov    ch,BYTE PTR [ebp+eiz*1+0x2e6f181e]
  415148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415149:	gs inc ebp
  41514b:	jl     0x415132
  41514d:	shl    DWORD PTR [ebx-0x78fc9575],1
  415153:	loope  0x41514f
  415155:	push   ecx
  415156:	or     dh,BYTE PTR [edx+0x3ddef948]
  41515c:	(bad)  
  41515d:	mov    esp,0xb57f810d
  415162:	nop
  415163:	xor    DWORD PTR [edx-0x1f9dac5b],0xf0a4f6f8
  41516d:	push   edx
  41516f:	outs   dx,DWORD PTR ds:[esi]
  415170:	add    dh,BYTE PTR [ebx+0x3e]
  415173:	(bad)  
  415174:	pop    ss
  415175:	adc    al,0xc4
  415177:	jecxz  0x415127
  415179:	ins    BYTE PTR es:[edi],dx
  41517a:	push   cs
  41517b:	sub    esi,DWORD PTR [esi+edx*4+0x4e]
  41517f:	adc    BYTE PTR [ebx+0x6b],al
  415182:	cmp    eax,0x10a04d0d
  415187:	loope  0x415139
  415189:	lods   al,BYTE PTR ds:[esi]
  41518b:	js     0x415134
  41518d:	jo     0x41516f
  41518f:	jp     0x41520b
  415191:	mov    esi,DWORD PTR gs:[ebx*1-0x2f5a203c]
  415199:	dec    edx
  41519a:	cmc    
  41519b:	sbb    BYTE PTR [edi],bl
  41519d:	jb     0x4151a5
  41519f:	and    al,0x4b
  4151a1:	push   0xffffffef
  4151a3:	adc    BYTE PTR [edi],ah
  4151a5:	lea    edx,ds:0xc4043498
  4151ab:	cmp    al,0x6d
  4151ad:	mov    eax,0x2223aac5
  4151b2:	xchg   esp,eax
  4151b3:	imul   eax,DWORD PTR [edi+0x49],0x66
  4151b7:	cmp    al,0x51
  4151b9:	pop    ebx
  4151ba:	in     eax,dx
  4151bb:	inc    esi
  4151bc:	adc    al,0x64
  4151be:	inc    esp
  4151bf:	cmp    bl,BYTE PTR [ebp+0x49c93f04]
  4151c5:	mov    ds:0xce28bca4,al
  4151ca:	mov    ds:0x8b070591,al
  4151cf:	adc    BYTE PTR [esi-0x5d],0x65
  4151d3:	dec    esp
  4151d4:	repnz inc eax
  4151d6:	dec    edx
  4151d7:	test   esi,edx
  4151d9:	shr    BYTE PTR [esi],0xb
  4151dc:	or     DWORD PTR ds:[edi+0x5098631b],edi
  4151e3:	push   eax
  4151e4:	push   cs
  4151e5:	or     DWORD PTR [ecx+0x405ad03d],ebx
  4151eb:	test   BYTE PTR [eax+ebx*2-0x4127b94e],cl
  4151f2:	scas   al,BYTE PTR es:[edi]
  4151f3:	push   es
  4151f4:	sub    eax,0x28167edc
  4151f9:	mov    cl,0xd3
  4151fb:	jmp    0x77b:0xd11fd0
  415202:	fsubr  QWORD PTR [ebp+0x42]
  415205:	rcr    ah,0xbd
  415208:	pop    edi
  415209:	adc    esi,ecx
  41520b:	or     BYTE PTR [eax-0x2c36db],ch
  415211:	sbb    al,0xd1
  415213:	(bad)  
  415214:	in     eax,dx
  415215:	push   0xffffffa8
  415217:	sbb    bh,al
  415219:	dec    DWORD PTR ds:0x1f12fb9d
  41521f:	repz jecxz 0x4152a1
  415222:	mov    DWORD PTR [edx+0x24d2b50a],esi
  415228:	xchg   esp,eax
  415229:	in     al,0x6c
  41522b:	leave  
  41522c:	(bad)  
  41522d:	inc    edi
  41522e:	sub    bh,BYTE PTR [eax]
  415230:	mov    cl,0x91
  415232:	inc    eax
  415233:	sub    ebp,ebp
  415235:	bound  edi,QWORD PTR [edi-0x437b247d]
  41523b:	add    dl,BYTE PTR [eax]
  41523d:	pop    edi
  41523e:	sbb    edx,DWORD PTR [edi]
  415240:	pop    es
  415241:	or     al,0x53
  415243:	(bad)  
  415244:	outs   dx,DWORD PTR ds:[esi]
  415245:	and    BYTE PTR [ebp+0x6e800f88],ah
  41524b:	pop    edx
  41524c:	lahf   
  41524d:	pop    ebp
  41524e:	or     eax,0x55056f5e
  415253:	sbb    BYTE PTR [edi],cl
  415255:	inc    ecx
  415256:	dec    esp
  415257:	(bad)  
  415258:	jb     0x415225
  41525a:	jnp    0x4152d2
  41525c:	jbe    0x415251
  41525e:	cmp    al,BYTE PTR [esi+ecx*2-0x580ed9ad]
  415265:	or     esi,ebp
  415267:	inc    ebx
  415268:	addr16 mov dh,0xcc
  41526b:	xchg   esi,eax
  41526c:	mov    dh,0x2b
  41526e:	mov    ds:0xec64477a,al
  415273:	sub    BYTE PTR [eax],dl
  415275:	daa    
  415276:	dec    ebx
  415277:	ret    
  415278:	pop    edx
  415279:	leave  
  41527a:	xor    eax,0xa45c0770
  41527f:	jle    0x415221
  415281:	dec    ebp
  415282:	int    0x92
  415284:	adc    eax,0x3e74e24
  415289:	push   eax
  41528a:	push   0xffffff95
  41528c:	pop    esi
  41528d:	adc    eax,0x9a5755d
  415292:	rol    DWORD PTR [edi+0x7c],cl
  415295:	mov    al,0xeb
  415297:	inc    ebp
  415298:	ins    BYTE PTR es:[edi],dx
  415299:	out    0x7b,al
  41529b:	xor    al,0x96
  41529d:	and    ebx,DWORD PTR [esi]
  41529f:	adc    BYTE PTR [edi],0x5a
  4152a2:	stos   DWORD PTR es:[edi],eax
  4152a3:	add    edx,ebp
  4152a5:	pop    esi
  4152a6:	pop    si
  4152a8:	inc    ebp
  4152a9:	sbb    dh,BYTE PTR [ebp+esi*1-0x78ab7efe]
  4152b0:	bound  ebp,QWORD PTR [ecx]
  4152b2:	mov    DWORD PTR [ecx-0x203061ba],edi
  4152b8:	jne    0x4152ed
  4152ba:	mov    ch,0xcb
  4152bc:	cmp    DWORD PTR [ecx-0x1c],ebp
  4152bf:	add    eax,0xef8f8e39
  4152c4:	daa    
  4152c5:	sub    al,0xe1
  4152c7:	and    bl,dl
  4152c9:	inc    edx
  4152ca:	inc    esi
  4152cb:	repnz aad 0xcd
  4152ce:	cmp    ebp,DWORD PTR [edx-0x72]
  4152d1:	cdq    
  4152d2:	pop    ebx
  4152d3:	xlat   BYTE PTR ds:[ebx]
  4152d4:	sub    edi,ebp
  4152d6:	in     eax,0x9c
  4152d8:	and    eax,eax
  4152da:	nop
  4152db:	push   ebx
  4152dc:	pop    edi
  4152dd:	imul   edx,DWORD PTR [ecx+eax*8],0xfffffffc
  4152e1:	jb     0x41534f
  4152e3:	push   ebp
  4152e4:	mov    BYTE PTR [esi-0x59],ah
  4152e7:	push   esi
  4152e8:	push   0x27
  4152ea:	inc    edx
  4152eb:	add    eax,0xab1522b3
  4152f0:	in     al,0x93
  4152f2:	aad    0xa2
  4152f4:	xor    cl,BYTE PTR [ebx+0x1c5bc15f]
  4152fa:	cld    
  4152fb:	mov    DWORD PTR [eax+0x32193a2c],ebp
  415301:	retf   0x4bf6
  415304:	pop    es
  415305:	(bad)
  415308:	mov    WORD PTR [eax+0x2d],gs
  41530b:	push   edx
  41530c:	mov    ecx,0xce2289f9
  415311:	(bad)  
  415313:	jmp    FWORD PTR ds:0xd5fa0375
  415319:	add    eax,0xc318e875
  41531e:	ins    BYTE PTR es:[edi],dx
  41531f:	fld    TBYTE PTR [ecx+0x5f]
  415322:	inc    ecx
  415323:	(bad)  
  415324:	outs   dx,BYTE PTR ds:[esi]
  415325:	cdq    
  415326:	adc    al,0x7b
  415328:	add    al,0x6d
  41532a:	sub    ah,BYTE PTR [eax]
  41532c:	push   ebp
  41532d:	mov    BYTE PTR [eax],dh
  41532f:	adc    DWORD PTR ds:0xa36fb868,0x47
  415336:	inc    esp
  415337:	push   ebp
  415338:	cdq    
  415339:	shl    BYTE PTR [edi+0xa],1
  41533c:	dec    ecx
  41533d:	push   es
  41533e:	imul   esi,DWORD PTR [ebx+0xf],0xffffffa3
  415342:	inc    eax
  415343:	packsswb mm6,QWORD PTR [eax]
  415346:	sub    ebx,DWORD PTR [eax-0x1a58ca59]
  41534c:	rcr    BYTE PTR [ebp+0x49a9c702],1
  415352:	neg    DWORD PTR [esi]
  415354:	shl    DWORD PTR [ebx],cl
  415356:	ja     0x41536c
  415358:	and    eax,esp
  41535a:	mov    ebx,0xcb39ca12
  41535f:	mov    edi,0xf9a5d200
  415364:	jmp    0x35d0d125
  415369:	xchg   ecx,eax
  41536a:	popf   
  41536b:	pop    ss
  41536c:	in     al,dx
  41536d:	jmp    0x46fa:0xd107be34
  415374:	(bad)  
  415375:	out    dx,al
  415376:	inc    ecx
  415377:	(bad)  [esi+0x4f35adb7]
  41537d:	push   0x629c2d1e
  415382:	cmc    
  415383:	sbb    bl,BYTE PTR [eax-0x63cb8d04]
  415389:	and    ebx,0xe
  41538c:	xchg   ebx,eax
  41538d:	aaa    
  41538e:	adc    DWORD PTR [esi-0x6ffe8302],edx
  415394:	dec    edx
  415395:	inc    esp
  415396:	adc    eax,0xfa3b7660
  41539b:	adc    eax,0x6e8a2218
  4153a0:	arpl   dx,dx
  4153a2:	sbb    al,0xee
  4153a4:	jmp    0x4153c7
  4153a6:	mov    ss,WORD PTR [edi-0x23]
  4153a9:	ja     0x41532b
  4153ab:	int3   
  4153ac:	aad    0x83
  4153ae:	cmp    esp,esp
  4153b0:	lods   al,BYTE PTR ds:[esi]
  4153b1:	cmp    eax,0xed5e6f44
  4153b6:	ss inc esi
  4153b8:	ftst   
  4153ba:	adc    esp,ecx
  4153bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153bd:	or     BYTE PTR [ebx-0x6cd23ecc],dl
  4153c3:	aad    0x5e
  4153c5:	shl    ah,cl
  4153c7:	out    dx,al
  4153c8:	push   edx
  4153c9:	mov    dl,BYTE PTR [ebx+0x4c]
  4153cc:	rcr    ebx,1
  4153ce:	lods   eax,DWORD PTR ds:[esi]
  4153cf:	popf   
  4153d0:	mov    cl,BYTE PTR [ecx-0x13]
  4153d3:	inc    ecx
  4153d4:	or     BYTE PTR [eiz*1+0x6bb2cdff],ch
  4153db:	or     eax,0x941d66d6
  4153e0:	mov    ?,WORD PTR [edi+edx*8-0x3c76ec7b]
  4153e7:	add    BYTE PTR [ecx],0x75
  4153ea:	lock sbb BYTE PTR [edi-0x30f819c5],bh
  4153f1:	mov    ecx,DWORD PTR [edi]
  4153f3:	push   0xffffffcf
  4153f5:	cmp    ch,bh
  4153f7:	cli    
  4153f8:	imul   esp,DWORD PTR [edi+0x76],0x45abcec5
  4153ff:	(bad)  
  415400:	rol    DWORD PTR [esp+ecx*4-0x1b],1
  415404:	sub    al,0x45
  415406:	and    BYTE PTR [ecx],dl
  415408:	jbe    0x415405
  41540a:	call   0x9eb0b9b
  41540f:	and    eax,0xd64e3cca
  415414:	lods   al,BYTE PTR ds:[esi]
  415415:	and    bh,BYTE PTR [edi+0x3f1dad49]
  41541b:	adc    cl,BYTE PTR [esi+eax*1-0x7]
  41541f:	jmp    0x88ce794c
  415424:	add    dl,dh
  415426:	xor    eax,0xbb095a23
  41542b:	mov    ds:0x779bc203,eax
  415430:	xor    edx,DWORD PTR [edi+0x1]
  415433:	popa   
  415434:	mov    edi,0x1500a0a0
  415439:	xor    DWORD PTR [ecx-0x22],edi
  41543c:	out    dx,al
  41543d:	lea    edi,[eax+0x26e3964c]
  415443:	xor    BYTE PTR ds:0x2e5f04b4,0xb3
  41544a:	xlat   BYTE PTR ds:[ebx]
  41544b:	bound  ebp,QWORD PTR fs:[edx+0x1ed08c08]
  415452:	fdivp  st(0),st
  415454:	stc    
  415455:	jecxz  0x4154d5
  415457:	mov    ds,WORD PTR [edi+0x70]
  41545a:	inc    ecx
  41545b:	mov    ds:0x8198c9bf,eax
  415460:	daa    
  415461:	lea    edi,[ebx+0x61463190]
  415467:	icebp  
  415468:	or     bh,BYTE PTR [esi]
  41546a:	xchg   ebp,eax
  41546b:	and    ebp,esp
  41546d:	popw   ds
  41546f:	mov    edi,0x9b8260df
  415474:	pcmpgtd mm0,QWORD PTR [esi-0x8fa2924]
  41547b:	gs sub eax,0x3445031
  415481:	mov    bl,0x2
  415483:	jns    0x4154d9
  415485:	or     ebp,DWORD PTR [ebx+0x63]
  415488:	mov    ah,bh
  41548a:	out    dx,eax
  41548b:	mov    al,ch
  41548d:	dec    ebp
  41548e:	outs   dx,DWORD PTR ds:[esi]
  41548f:	psubusb mm6,QWORD PTR [edi-0xd04613]
  415496:	loope  0x4154b8
  415498:	adc    eax,0x31014afa
  41549d:	repz push edi
  41549f:	and    ebx,DWORD PTR [ecx+0x21]
  4154a2:	hlt    
  4154a3:	out    dx,al
  4154a4:	jb     0x415479
  4154a6:	cld    
  4154a7:	fsubr  QWORD PTR ds:0xd48df380
  4154ad:	mov    ecx,0xc2715d14
  4154b2:	dec    esi
  4154b3:	rol    DWORD PTR [ebx],1
  4154b5:	sbb    eax,0x75c7bb03
  4154ba:	mov    al,0x8b
  4154bc:	adc    al,0xb0
  4154be:	push   ss
  4154bf:	sub    DWORD PTR [edi-0x52addbca],esi
  4154c5:	in     al,0x1d
  4154c7:	sub    BYTE PTR [esi-0x8],cl
  4154ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154cb:	aas    
  4154cc:	adc    DWORD PTR [ecx+0x7e0d8b7a],eax
  4154d2:	mov    dl,0xda
  4154d4:	push   esi
  4154d5:	out    dx,al
  4154d6:	or     DWORD PTR [edx],eax
  4154d8:	icebp  
  4154d9:	loope  0x4154a3
  4154db:	mov    ds:0xe1077c7e,al
  4154e1:	mov    bl,0x79
  4154e3:	lods   eax,DWORD PTR ds:[esi]
  4154e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e5:	sub    eax,0x6c8753e2
  4154ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154eb:	add    BYTE PTR ds:0x822bcaf3,ch
  4154f1:	(bad)  
  4154f2:	cmp    eax,0xdf95442e
  4154f7:	push   eax
  4154f8:	sbb    eax,edi
  4154fa:	packuswb mm2,QWORD PTR [ecx-0x6602534]
  415501:	adc    bl,BYTE PTR [ecx]
  415503:	pop    ebp
  415504:	(bad)  
  415505:	push   esp
  415506:	dec    esp
  415507:	out    dx,eax
  415508:	dec    ecx
  415509:	ins    DWORD PTR es:[edi],dx
  41550a:	std    
  41550b:	out    0x9a,eax
  41550d:	dec    esp
  41550e:	push   ds
  41550f:	dec    edx
  415510:	jo     0x41550f
  415512:	xchg   edx,eax
  415513:	scas   al,BYTE PTR es:[edi]
  415514:	addr16 push esi
  415516:	jecxz  0x415532
  415518:	fnstenv [edx]
  41551a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41551b:	imul   eax,DWORD PTR [eax-0x73],0xc7639cba
  415522:	add    esp,DWORD PTR [edi-0x62771d67]
  415528:	out    dx,eax
  415529:	lea    esi,[ecx+0x5afdd06d]
  41552f:	push   edx
  415530:	out    dx,al
  415531:	shl    BYTE PTR [edi],cl
  415533:	(bad)  
  415534:	push   ecx
  415535:	cmp    DWORD PTR [ecx],ebx
  415537:	pcmpgtd mm0,mm0
  41553a:	cs pop ebp
  41553c:	aas    
  41553d:	out    dx,eax
  41553e:	popf   
  41553f:	or     BYTE PTR [edx],0x40
  415542:	call   0x25c:0xb9e336a9
  415549:	and    ebp,esi
  41554b:	xor    cl,BYTE PTR [edx+0x2b54b2af]
  415551:	xor    DWORD PTR [edx+ebx*4+0x39],esi
  415555:	stc    
  415556:	xor    bh,cl
  415558:	xor    al,0xb5
  41555a:	sbb    edi,DWORD PTR [ecx]
  41555c:	div    dl
  41555e:	jns    0x41550c
  415560:	into   
  415561:	cli    
  415562:	scas   eax,DWORD PTR es:[edi]
  415563:	icebp  
  415564:	js     0x415515
  415566:	dec    esi
  415567:	lock cmp al,0xd0
  41556a:	pusha  
  41556b:	add    ebp,DWORD PTR [ecx+0x661e0e02]
  415571:	or     al,0x8c
  415573:	sahf   
  415574:	dec    ebx
  415575:	cmp    cl,BYTE PTR [ebp-0x63]
  415578:	jno    0x415557
  41557a:	dec    ebx
  41557b:	add    eax,0x96558258
  415580:	ficom  DWORD PTR [ecx-0x31]
  415583:	xchg   ebx,eax
  415584:	xchg   esp,eax
  415585:	sbb    ebx,DWORD PTR [ebp-0x24]
  415588:	xchg   esi,eax
  415589:	inc    ecx
  41558a:	push   esi
  41558b:	inc    esi
  41558c:	pop    edx
  41558d:	ins    DWORD PTR es:[edi],dx
  41558e:	ja     0x415528
  415590:	es ret 0x41cc
  415594:	jmp    0x41553b
  415596:	cwde   
  415597:	outs   dx,DWORD PTR ds:[esi]
  415598:	(bad)  
  415599:	test   DWORD PTR gs:[esi-0x6f],esi
  41559d:	and    ebx,DWORD PTR [edx+0x17]
  4155a0:	inc    ebx
  4155a1:	inc    ecx
  4155a2:	ins    BYTE PTR es:[edi],dx
  4155a3:	les    eax,FWORD PTR [ebx+eax*2]
  4155a6:	inc    esp
  4155a7:	cmp    eax,edx
  4155a9:	jbe    0x41555e
  4155ab:	lds    esp,FWORD PTR [esi-0x1164a8ee]
  4155b1:	je     0x4155e5
  4155b3:	iret   
  4155b4:	pop    eax
  4155b5:	xchg   esi,eax
  4155b6:	pop    edx
  4155b7:	hlt    
  4155b8:	dec    edx
  4155b9:	test   edi,eax
  4155bb:	mov    WORD PTR ds:0x17fd6b58,cs
  4155c1:	and    eax,0x72d1c1d3
  4155c6:	sar    edi,1
  4155c8:	push   edx
  4155c9:	rcl    ah,1
  4155cb:	imul   esi,DWORD PTR [edx+0x2f206cc3],0x45d1cd05
  4155d5:	mov    esi,0x1c9ab8ce
  4155da:	inc    DWORD PTR [ebx]
  4155dc:	out    dx,al
  4155dd:	mov    eax,DWORD PTR [edi]
  4155df:	dec    esp
  4155e0:	mov    WORD PTR [edi-0x7f],cs
  4155e3:	test   eax,0x5ff4a06a
  4155e8:	sub    al,0x46
  4155ea:	repz ss jecxz 0x415588
  4155ee:	adc    esp,DWORD PTR [esi]
  4155f0:	dec    esi
  4155f1:	dec    ebp
  4155f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155f3:	push   0x95b9a511
  4155f8:	rcl    DWORD PTR [esi-0xe05aa67],1
  4155fe:	push   edi
  4155ff:	inc    esp
  415600:	jne    0x4155a1
  415602:	push   ecx
  415603:	xchg   edi,eax
  415604:	ror    DWORD PTR [edi+0x65],1
  415607:	inc    ebp
  415608:	mov    eax,ds:0x6f2c12a7
  41560e:	xchg   al,al
  415610:	mov    edi,0xf73f0d09
  415615:	xchg   esi,eax
  415616:	stos   BYTE PTR es:[edi],al
  415617:	add    BYTE PTR [eax+0xa],ch
  41561a:	loop   0x41565e
  41561c:	daa    
  41561d:	dec    esp
  41561e:	pop    ds
  41561f:	sbb    ch,BYTE PTR [edx+edi*8-0x32]
  415623:	xchg   DWORD PTR [ecx-0x74],esi
  415626:	jecxz  0x41566f
  415628:	sbb    DWORD PTR [edx-0x74],ebx
  41562b:	mov    eax,ds:0x10248898
  415630:	mov    ecx,0xc46ed91b
  415635:	pop    es
  415636:	mov    eax,ds:0x7f2be85d
  41563b:	sbb    edi,ecx
  41563d:	adc    bl,BYTE PTR [esp+eiz*8-0x6aeaa5a3]
  415644:	xchg   edi,eax
  415645:	loope  0x41560f
  415647:	outs   dx,BYTE PTR ds:[esi]
  415648:	jecxz  0x4155db
  41564a:	in     eax,0x62
  41564c:	fidivr DWORD PTR [edi-0x5f]
  41564f:	adc    DWORD PTR [ebx-0x3c],edi
  415652:	arpl   WORD PTR [ecx],ax
  415654:	jo     0x415619
  415656:	sbb    ebx,eax
  415658:	sbb    al,0xb
  41565a:	jmp    0x4156b5
  41565c:	iret   
  41565d:	out    dx,al
  41565e:	mov    ebx,0xd7ea54a9
  415663:	(bad)  
  415665:	fwait
  415666:	lock je 0x415617
  415669:	jbe    0x4156a1
  41566b:	fs into 
  41566d:	and    eax,0x31439dde
  415672:	(bad)  
  415673:	adc    ah,BYTE PTR [eax+0x495392dd]
  415679:	mov    ch,0xc5
  41567b:	popf   
  41567c:	into   
  41567d:	mov    DWORD PTR ds:[ecx],ebx
  415680:	and    DWORD PTR ds:0xb1b77ac,edi
  415686:	inc    edi
  415687:	xchg   ebx,eax
  415688:	test   al,0xe3
  41568a:	in     al,0xdd
  41568c:	mov    ds:0x99ac5f63,al
  415691:	jge    0x415631
  415693:	cmc    
  415694:	out    dx,eax
  415695:	aaa    
  415696:	inc    esi
  415697:	sbb    dl,BYTE PTR [edi+0x30]
  41569a:	arpl   WORD PTR fs:[ecx+0x1e59af4d],dx
  4156a1:	xchg   ebp,eax
  4156a2:	mov    ebx,0x56b27898
  4156a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156a8:	xor    bl,BYTE PTR [esi]
  4156aa:	xor    BYTE PTR [ecx+ebx*2],0xf8
  4156ae:	sbb    ah,BYTE PTR [esi+ebp*4+0x7e]
  4156b2:	imul   edi,DWORD PTR [esi],0x5a333080
  4156b8:	mov    bl,BYTE PTR [edx+0x3b]
  4156bb:	lods   al,BYTE PTR ds:[esi]
  4156bc:	cmp    eax,DWORD PTR [ecx+0x4c]
  4156bf:	dec    edx
  4156c0:	xor    bh,ch
  4156c2:	jnp    0x415664
  4156c4:	(bad)  
  4156c5:	stos   BYTE PTR es:[edi],al
  4156c6:	fcom   DWORD PTR [edi]
  4156c8:	pop    es
  4156c9:	adc    eax,0xacbf9804
  4156ce:	(bad)  
  4156cf:	xchg   esi,eax
  4156d0:	xchg   esp,eax
  4156d1:	jno    0x415752
  4156d3:	(bad)  
  4156d4:	jle    0x415717
  4156d6:	jne    0x415669
  4156d8:	dec    ebx
  4156d9:	cmc    
  4156da:	test   DWORD PTR [ebp-0x33bcb37b],0x820a1b1e
  4156e4:	popa   
  4156e5:	or     BYTE PTR [ebx+0x69],0xb5
  4156e9:	mov    dh,BYTE PTR [edi+eiz*8-0x43]
  4156ed:	mov    al,ds:0x52cceea4
  4156f2:	sbb    BYTE PTR [ebp-0x5b],bh
  4156f5:	dec    ecx
  4156f6:	sahf   
  4156f7:	repz retf 
  4156f9:	pop    ebp
  4156fa:	sub    esi,DWORD PTR [edx]
  4156fc:	mov    eax,ds:0x15ebe56f
  415701:	std    
  415702:	sub    esp,DWORD PTR [ebx-0x40eaad13]
  415708:	mov    eax,ebx
  41570a:	cmc    
  41570b:	shl    bl,0xb6
  41570e:	push   edi
  41570f:	jae    0x4156f4
  415711:	dec    eax
  415712:	mov    DWORD PTR [esi+0x47],ebp
  415715:	sub    DWORD PTR [ebx-0x232a7751],ebp
  41571b:	in     eax,dx
  41571c:	aas    
  41571d:	lods   eax,DWORD PTR ds:[esi]
  41571e:	xchg   edx,eax
  41571f:	outs   dx,BYTE PTR es:[esi]
  415721:	jnp    0x4156e1
  415723:	push   edi
  415724:	mov    ah,BYTE PTR [ebx]
  415726:	mov    ebx,0xd8cf82b8
  41572b:	sbb    BYTE PTR [edx+0x768e7e86],0xf4
  415732:	jne    0x415750
  415734:	dec    esi
  415735:	mov    bl,0x4
  415737:	xchg   esi,eax
  415738:	fiadd  WORD PTR [esi+ecx*8+0x6b6c875e]
  41573f:	and    BYTE PTR [ecx+0x1b],cl
  415742:	xor    BYTE PTR [edx+edx*8-0x5da02cfa],cl
  415749:	and    al,0xd8
  41574b:	nop
  41574c:	inc    ebx
  41574d:	mov    bl,BYTE PTR [edx+0x1e007d7a]
  415753:	js     0x415762
  415755:	stos   DWORD PTR es:[edi],eax
  415756:	inc    ebx
  415757:	cld    
  415758:	mov    ds:0x822a22f4,al
  41575d:	call   0xa857:0xab52f744
  415764:	mov    ds:0xc9aa9df4,al
  415769:	and    eax,0x3b754da0
  41576e:	(bad)  
  41576f:	fdivr  QWORD PTR [edx*8+0x56354215]
  415776:	mov    al,ds:0x6558722c
  41577b:	mov    ebp,0xf625164f
  415780:	or     bh,bl
  415782:	int    0xf0
  415784:	xchg   ecx,eax
  415785:	lock jecxz 0x41573e
  415788:	xor    BYTE PTR [eax-0x63],cl
  41578b:	pop    ss
  41578c:	jae    0x4157d8
  41578e:	ss mov esp,0x252b3cf
  415794:	xor    esi,DWORD PTR [edx+0x43c6c8a7]
  41579a:	and    eax,0x972009ee
  41579f:	adc    eax,0xb9cfa0b5
  4157a4:	loopne 0x41574e
  4157a6:	dec    edi
  4157a7:	sbb    DWORD PTR [eax+ebx*4],esp
  4157aa:	jmp    0x41577b
  4157ac:	fistp  QWORD PTR [edx+0x52]
  4157af:	fwait
  4157b0:	mov    ah,0xd
  4157b2:	les    esp,FWORD PTR [ecx+0x2e]
  4157b5:	nop
  4157b6:	bound  edi,QWORD PTR [ecx+edx*1]
  4157b9:	add    dh,bh
  4157bb:	xchg   ecx,eax
  4157bc:	and    eax,DWORD PTR [ecx-0x6dbf4b01]
  4157c2:	je     0x415784
  4157c4:	sti    
  4157c5:	fcmovb st,st(2)
  4157c7:	lods   al,BYTE PTR ds:[esi]
  4157c8:	inc    ebp
  4157c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ca:	aad    0xdb
  4157cc:	call   FWORD PTR [ebx]
  4157ce:	jl     0x41578d
  4157d0:	jno    0x415832
  4157d2:	lahf   
  4157d3:	outs   dx,DWORD PTR ds:[esi]
  4157d4:	and    eax,edi
  4157d6:	jl     0x4157c5
  4157d8:	add    eax,DWORD PTR [edx-0x52]
  4157db:	rol    DWORD PTR es:[edx+0x41],1
  4157df:	fadd   QWORD PTR [edi]
  4157e1:	dec    edi
  4157e2:	sti    
  4157e3:	aaa    
  4157e4:	cmp    al,BYTE PTR [eax+ebp*4]
  4157e7:	imul   BYTE PTR [ebp+edx*4-0x556613c7]
  4157ee:	aad    0xe0
  4157f0:	mov    cl,0xd8
  4157f2:	mov    bl,BYTE PTR ds:0x80ea355a
  4157f8:	cmp    al,ch
  4157fa:	push   ebx
  4157fb:	adc    dl,BYTE PTR [ebp-0x40]
  4157fe:	or     ebx,DWORD PTR [edi+0x1ad4e32e]
  415804:	mov    DWORD PTR [edx+edi*1+0x7b],esi
  415808:	ins    DWORD PTR es:[edi],dx
  415809:	xchg   esi,eax
  41580a:	and    eax,DWORD PTR [edi-0x782c5fb7]
  415810:	jge    0x415874
  415812:	add    BYTE PTR [esi],0xcf
  415815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415816:	ret    
  415817:	imul   BYTE PTR [edx+ebx*8]
  41581a:	lods   al,BYTE PTR ds:[esi]
  41581b:	xor    eax,DWORD PTR [ecx-0xe]
  41581e:	add    al,0x4f
  415820:	and    DWORD PTR [ebx+0xa245ace],esp
  415826:	fs cmp eax,0x9a1b0985
  41582c:	jmp    0x415804
  41582e:	or     BYTE PTR [edx],ah
  415830:	jmp    0xbd7b:0x7fef737c
  415837:	pop    ss
  415838:	dec    edi
  415839:	dec    ebx
  41583a:	aam    0x22
  41583c:	xchg   ebp,eax
  41583d:	(bad)  
  41583f:	jno    0x415821
  415841:	or     ah,BYTE PTR [eax-0x515d31e2]
  415847:	loope  0x4157e2
  415849:	js     0x41584c
  41584b:	inc    ebx
  41584c:	jns    0x80bc44d1
  415852:	mov    ah,0x73
  415854:	daa    
  415855:	scas   al,BYTE PTR es:[edi]
  415856:	adc    ah,BYTE PTR ds:0xe9ff5496
  41585c:	xchg   DWORD PTR [edi-0x27424320],ebp
  415862:	mov    ds:0x19636905,eax
  415867:	cmp    DWORD PTR [eax+0x45],0xe
  41586b:	dec    esp
  41586c:	retf   
  41586d:	jp     0x415835
  41586f:	sub    DWORD PTR [ecx-0x64b6911c],edi
  415875:	jle    0x41581c
  415877:	sahf   
  415878:	in     al,0xc3
  41587a:	pop    es
  41587b:	fisttp QWORD PTR [ebx]
  41587d:	add    esp,DWORD PTR [eax+edi*2]
  415880:	ds jecxz 0x4158c7
  415883:	pop    edx
  415884:	xchg   esp,eax
  415885:	dec    ebp
  415886:	push   ds
  415887:	jecxz  0x4158a6
  415889:	jmp    0x1603:0x4d0b7d51
  415890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415891:	std    
  415892:	xor    al,0x24
  415894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415895:	or     esi,DWORD PTR [edi-0x2f]
  415898:	retf   0xc422
  41589b:	push   ebx
  41589c:	push   es
  41589d:	retf   0x4ffd
  4158a0:	ds xor dl,ch
  4158a3:	pop    edx
  4158a4:	ror    BYTE PTR [edx+0x5f699448],1
  4158aa:	sti    
  4158ab:	stos   BYTE PTR es:[edi],al
  4158ac:	adc    DWORD PTR [ecx-0x46c649e6],eax
  4158b2:	pop    esi
  4158b3:	add    ch,BYTE PTR [edi+0x4a]
  4158b6:	cmp    DWORD PTR [esp+ecx*2-0x14],ebx
  4158ba:	pop    esi
  4158bb:	aas    
  4158bc:	cs in  al,dx
  4158be:	xchg   ecx,eax
  4158bf:	xor    eax,0xcdec7449
  4158c4:	push   esp
  4158c5:	xchg   ebp,eax
  4158c6:	lock jo 0x41587f
  4158c9:	mov    ebx,0xc1a1d2ac
  4158ce:	inc    eax
  4158cf:	push   edx
  4158d0:	pop    edx
  4158d1:	daa    
  4158d2:	mov    cl,0x5c
  4158d4:	jg     0x415861
  4158d6:	jnp    0x4158b4
  4158d8:	pop    esp
  4158d9:	in     eax,dx
  4158da:	jp     0x4158bd
  4158dc:	sti    
  4158dd:	push   esi
  4158de:	mov    bl,0xae
  4158e0:	sub    eax,0x19071954
  4158e5:	test   eax,0x646aad5f
  4158ea:	adc    DWORD PTR [edi],ebp
  4158ec:	ds xchg esp,eax
  4158ee:	dec    esp
  4158ef:	int3   
  4158f0:	or     DWORD PTR [eax-0x9785666],ecx
  4158f6:	push   edx
  4158f7:	mov    eax,ds:0x612064b5
  4158fc:	add    edi,esi
  4158fe:	fcomi  st,st(0)
  415900:	jb     0x4158c1
  415902:	or     esp,esp
  415904:	cmp    al,0x5b
  415906:	stc    
  415907:	mov    bh,bl
  415909:	xor    DWORD PTR [ebp-0x45],ebp
  41590c:	retf   
  41590d:	adc    DWORD PTR [esi+0x2ac66ac9],0x687df5c1
  415917:	inc    ecx
  415918:	test   eax,0x40192643
  41591d:	sub    esi,DWORD PTR [eax+0x16171252]
  415923:	pop    ss
  415924:	fimul  WORD PTR [eax]
  415926:	pop    ds
  415927:	lock ror DWORD PTR [ecx-0x14],0xe6
  41592c:	enter  0x7fce,0x5
  415930:	jl     0x4159a6
  415932:	push   esp
  415933:	lods   eax,DWORD PTR ds:[esi]
  415934:	mov    dl,0x2
  415936:	lods   al,BYTE PTR ds:[esi]
  415937:	cmp    edi,DWORD PTR es:[esi-0x4f]
  41593b:	fnstenv [ecx]
  41593d:	loop   0x4159a7
  41593f:	add    edx,esp
  415941:	mov    edi,0xd156c57
  415946:	int    0x67
  415948:	pusha  
  415949:	cmp    eax,edx
  41594b:	retf   
  41594c:	inc    esp
  41594d:	push   ss
  41594e:	and    esi,DWORD PTR [edi+0x69]
  415951:	rol    BYTE PTR [edx-0x1d],cl
  415954:	push   ecx
  415955:	and    al,0x64
  415957:	loop   0x415969
  415959:	push   ss
  41595a:	mov    esp,0xa804eab
  41595f:	rcl    DWORD PTR [esi+0x260c7dca],0xad
  415966:	pop    edx
  415967:	out    dx,eax
  415968:	jmp    0x4159bd
  41596a:	inc    ebp
  41596b:	fwait
  41596c:	sub    BYTE PTR [edx-0xb68845],al
  415972:	jb     0x415974
  415974:	rol    DWORD PTR [esi],1
  415976:	jb     0x415952
  415978:	pop    ecx
  415979:	call   0xd96c6480
  41597e:	in     eax,dx
  41597f:	pusha  
  415980:	mov    WORD PTR [esi+0x70455750],es
  415986:	xor    al,0xfb
  415988:	pop    ds
  415989:	xor    DWORD PTR [ebx],0x36abc89b
  41598f:	jmp    0x902c906e
  415994:	outs   dx,DWORD PTR ds:[esi]
  415995:	outs   dx,DWORD PTR ds:[esi]
  415996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415997:	mov    ds:0xc2149a2e,al
  41599c:	jge    0x4159b8
  41599e:	dec    esp
  41599f:	add    DWORD PTR [ebx],0xffffffa3
  4159a2:	(bad)  
  4159a3:	pop    edx
  4159a4:	in     al,0x49
  4159a6:	mov    esi,eax
  4159a8:	test   eax,0x237d2d1d
  4159ad:	pop    edi
  4159ae:	stos   BYTE PTR es:[edi],al
  4159af:	(bad)  
  4159b0:	push   edx
  4159b1:	fld    TBYTE PTR [ecx-0x7]
  4159b4:	sub    eax,0x4755e8c4
  4159b9:	or     DWORD PTR [eax+0x5e0d54aa],edi
  4159bf:	in     al,0x2a
  4159c1:	xor    eax,0x1242030e
  4159c6:	das    
  4159c7:	push   es
  4159c8:	out    dx,eax
  4159c9:	xchg   DWORD PTR [esi],eax
  4159cb:	dec    esp
  4159cc:	aaa    
  4159cd:	mov    eax,0xd689686e
  4159d2:	pop    edi
  4159d3:	jb     0x415a2f
  4159d5:	jae    0x415984
  4159d7:	xlat   BYTE PTR ds:[ebx]
  4159d8:	mov    ebx,DWORD PTR [ecx]
  4159da:	mov    dh,0x3e
  4159dc:	fild   QWORD PTR [ebp-0x50bf9815]
  4159e2:	sbb    al,0x2b
  4159e4:	xchg   ebp,eax
  4159e5:	mov    ebx,0x4014f9d5
  4159ea:	shl    BYTE PTR [esi],cl
  4159ec:	bound  edi,QWORD PTR [edx+ebx*1-0x4b]
  4159f0:	or     al,0xb5
  4159f2:	out    0xd,eax
  4159f4:	das    
  4159f5:	(bad)  
  4159f6:	sub    DWORD PTR [esi-0x25],ecx
  4159f9:	imul   esp,DWORD PTR [eax],0xffffffad
  4159fc:	add    al,0xb6
  4159fe:	adc    DWORD PTR [ecx-0x2a],ecx
  415a01:	int3   
  415a02:	hlt    
  415a03:	cmp    al,0x61
  415a05:	push   esp
  415a06:	aam    0xd4
  415a08:	ss pop esi
  415a0a:	mov    dl,0xdd
  415a0c:	mov    ch,0xb
  415a0e:	(bad)  [eax]
  415a10:	iret   
  415a11:	inc    esp
  415a12:	push   0xffffffbe
  415a14:	xor    eax,0x45141ea7
  415a19:	test   ah,bl
  415a1b:	enter  0xf5c9,0x32
  415a1f:	loope  0x415a70
  415a21:	jmp    0x10ff:0x54fc1b39
  415a28:	mov    eax,0x41099121
  415a2d:	or     ecx,esp
  415a2f:	adc    esp,DWORD PTR [edx+0x236798f5]
  415a35:	retf   
  415a36:	xor    dl,BYTE PTR [edi]
  415a38:	sysenter 
  415a3a:	call   0xebbac7b1
  415a3f:	repnz (bad) 
  415a41:	mov    esp,0xca17c017
  415a46:	enter  0x3b5d,0xa9
  415a4a:	jmp    0xd26e67b3
  415a4f:	and    al,0x53
  415a51:	mov    bl,0x7
  415a53:	jecxz  0x415a7d
  415a55:	dec    eax
  415a56:	push   esp
  415a57:	mov    cs,WORD PTR [ebp-0x25]
  415a5a:	ss hlt 
  415a5c:	sub    BYTE PTR [ecx+0x1c],0x64
  415a60:	fwait
  415a61:	(bad)  
  415a62:	and    DWORD PTR [edx],ebx
  415a64:	mov    ch,0xac
  415a66:	xchg   ebp,eax
  415a67:	test   ah,dl
  415a69:	mov    al,0xd0
  415a6b:	xor    ebx,DWORD PTR [edi]
  415a6d:	adc    DWORD PTR [edi-0x23],0x18
  415a71:	inc    esp
  415a72:	(bad)  ds:0xb419e2d0
  415a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a79:	jecxz  0x415aba
  415a7b:	call   0x1bab68c6
  415a80:	ja     0x415aa3
  415a82:	sub    al,0x70
  415a84:	jb     0x415acc
  415a86:	les    ecx,FWORD PTR [ebp-0x6e]
  415a89:	xor    DWORD PTR [edi-0x1a],edx
  415a8c:	dec    esi
  415a8d:	mov    ecx,0x70bb436a
  415a92:	das    
  415a93:	xlat   BYTE PTR ds:[ebx]
  415a94:	pop    ecx
  415a95:	pop    edi
  415a96:	push   esp
  415a97:	mov    DWORD PTR [edi+0x7b1793f5],eax
  415a9d:	pushf  
  415a9e:	sub    BYTE PTR [ecx-0x10],0x72
  415aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aa3:	out    dx,eax
  415aa4:	(bad)  
  415aa5:	aam    0xe0
  415aa7:	push   ebx
  415aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aa9:	test   DWORD PTR [esi+0x76],eax
  415aac:	nop    DWORD PTR [eax-0x7a1218e2]
  415ab3:	test   BYTE PTR [ecx-0x4237bb88],al
  415ab9:	or     BYTE PTR [esi],ch
  415abb:	bound  esp,QWORD PTR ds:0xc98de493
  415ac1:	into   
  415ac2:	jae    0x415a4b
  415ac4:	(bad)  
  415ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac6:	push   ds
  415ac7:	and    ah,BYTE PTR [edx]
  415ac9:	xchg   DWORD PTR [eax],ecx
  415acb:	call   0x95f9:0x5b86f97b
  415ad2:	push   ds
  415ad3:	in     eax,dx
  415ad4:	test   DWORD PTR [esi+0x6e],ebp
  415ad7:	out    dx,al
  415ad8:	pop    esi
  415ad9:	nop
  415ada:	sbb    eax,0xca91b331
  415adf:	ins    BYTE PTR es:[edi],dx
  415ae0:	loop   0x415afc
  415ae2:	imul   edx,DWORD PTR [ebx],0x6a
  415ae5:	push   ebx
  415ae6:	xor    esp,esi
  415ae8:	and    eax,0xff993156
  415aed:	fbld   TBYTE PTR ds:0x2c6dc2e3
  415af3:	push   cs
  415af4:	jp     0x415b52
  415af6:	lds    edi,FWORD PTR [esi+0x2c4a9bcc]
  415afc:	repz dec eax
  415afe:	jns    0x415af8
  415b00:	popa   
  415b01:	les    esi,FWORD PTR [edi-0x184cbfbd]
  415b07:	adc    BYTE PTR [ebx],bl
  415b09:	inc    ebx
  415b0a:	mul    DWORD PTR [bx+si-0x42]
  415b0e:	xchg   ecx,eax
  415b0f:	ins    BYTE PTR es:[edi],dx
  415b10:	pop    eax
  415b11:	cwde   
  415b12:	ret    
  415b13:	push   esi
  415b14:	mov    es,WORD PTR [edx]
  415b16:	and    eax,edx
  415b18:	jno    0x415b50
  415b1a:	sbb    bl,dh
  415b1c:	(bad)  
  415b1d:	leave  
  415b1e:	dec    ebp
  415b1f:	in     al,0x22
  415b21:	xor    eax,0x8b7b900a
  415b26:	jg     0x415b28
  415b28:	ror    DWORD PTR [edi+0x2a0710b0],0x16
  415b2f:	repz jae 0x415abe
  415b32:	sub    bl,dh
  415b34:	fld    QWORD PTR [edi+edx*2-0x72c798c8]
  415b3b:	rcr    DWORD PTR [edi+0x2a4faedb],1
  415b41:	fstp   QWORD PTR [esi-0x701433ca]
  415b47:	add    BYTE PTR [esi],bh
  415b49:	dec    ebp
  415b4a:	sub    esi,eax
  415b4c:	sbb    al,0x89
  415b4e:	aas    
  415b4f:	push   0x4851ecab
  415b54:	sti    
  415b55:	xchg   BYTE PTR [edx],bl
  415b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b58:	fwait
  415b59:	xchg   esi,eax
  415b5a:	xchg   edi,eax
  415b5b:	sahf   
  415b5c:	rcr    ecx,cl
  415b5e:	in     eax,dx
  415b5f:	push   edi
  415b60:	adc    eax,0x4c88a3a9
  415b65:	pop    edi
  415b66:	hlt    
  415b67:	out    0x54,eax
  415b69:	stos   BYTE PTR es:[edi],al
  415b6a:	inc    esi
  415b6b:	mov    BYTE PTR [edx-0x72],cl
  415b6e:	jmp    0x65b3:0x62f3b7fb
  415b75:	mov    ecx,0x36f61eea
  415b7a:	jne    0x415b2b
  415b7c:	cmp    al,0x69
  415b7e:	push   eax
  415b7f:	jno    0x415b6a
  415b81:	aad    0x63
  415b83:	lods   al,BYTE PTR ds:[esi]
  415b84:	jg     0x415baa
  415b86:	imul   edi,DWORD PTR [eax+0x5520dc31],0xe
  415b8d:	mov    cl,BYTE PTR [esi+0x17e199d]
  415b93:	loop   0x415b93
  415b95:	fisttp WORD PTR [ebp-0x52f1a854]
  415b9b:	(bad)  [esi-0x2c]
  415b9e:	das    
  415b9f:	or     DWORD PTR [eax+0x5c3442c3],esi
  415ba5:	shl    esp,0xee
  415ba8:	sbb    BYTE PTR [ecx],bl
  415baa:	into   
  415bab:	adc    cl,BYTE PTR [edi+0x6c04fac0]
  415bb1:	or     eax,0xeeb9f603
  415bb6:	xlat   BYTE PTR ds:[ebx]
  415bb7:	cmp    BYTE PTR [esi+0x4da67962],ah
  415bbd:	mov    ds:0xaf970a95,al
  415bc2:	test   BYTE PTR [edx-0x5421969c],dh
  415bc8:	push   cs
  415bc9:	add    eax,0xd2dafcb7
  415bce:	mov    ds:0x180d080e,eax
  415bd3:	std    
  415bd4:	outs   dx,BYTE PTR ds:[esi]
  415bd5:	sub    eax,0x61334620
  415bda:	jge    0x415c0c
  415bdc:	inc    edx
  415bdd:	popa   
  415bde:	mov    esp,0x65500c57
  415be3:	jle    0x415bba
  415be5:	xchg   ebp,eax
  415be6:	cdq    
  415be7:	adc    al,0xf
  415be9:	xchg   ecx,eax
  415bea:	(bad)
  415bed:	push   ecx
  415bee:	mov    bh,0xf4
  415bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf1:	sar    BYTE PTR [ebp+0x2ddf7646],1
  415bf7:	mov    ds:0xacc737cf,al
  415bfc:	mov    DWORD PTR [eax-0x48],esi
  415bff:	mov    eax,DWORD PTR [ebp+0x49]
  415c02:	clc    
  415c03:	dec    esi
  415c04:	repnz out 0x68,al
  415c07:	inc    eax
  415c08:	push   eax
  415c09:	sbb    ah,bl
  415c0b:	cmp    eax,DWORD PTR [edx]
  415c0d:	out    0xe7,eax
  415c0f:	mov    ecx,0x8cb4a99b
  415c14:	test   eax,0x8aa825d8
  415c19:	sub    eax,0x34613587
  415c1e:	jmp    0x415ba2
  415c20:	push   eax
  415c21:	push   0x277e5ff1
  415c26:	xchg   ebx,eax
  415c27:	ss push ecx
  415c29:	sti    
  415c2a:	div    DWORD PTR [ecx]
  415c2c:	jno    0x415c3d
  415c2e:	xchg   esi,eax
  415c2f:	mov    dh,0x66
  415c31:	add    DWORD PTR [ebp+ecx*4+0x7b],esp
  415c35:	xor    eax,0x9bee1c92
  415c3a:	shl    DWORD PTR [eax+0x7dd720c7],cl
  415c40:	sub    ecx,DWORD PTR [edi-0x60372bb9]
  415c46:	add    eax,0x736e7774
  415c4b:	dec    esi
  415c4c:	inc    edx
  415c4d:	call   0xb4da6cd2
  415c52:	pop    ecx
  415c53:	dec    eax
  415c54:	dec    edi
  415c55:	imul   ebx,esi,0xb6a5609a
  415c5b:	sub    ebp,DWORD PTR [eax+ebp*4-0x5b]
  415c5f:	pop    ebp
  415c60:	and    DWORD PTR [ebx],edx
  415c62:	fs inc eax
  415c64:	es popf 
  415c66:	jle    0x415c5f
  415c68:	mov    edi,0x89666221
  415c6d:	cmp    edx,ebx
  415c6f:	pop    ecx
  415c70:	enter  0x1671,0xd
  415c74:	cmp    dl,BYTE PTR [eax-0x72381fdc]
  415c7a:	test   BYTE PTR [ebx-0x538d679a],bl
  415c80:	jb     0x415c59
  415c82:	adc    al,0x81
  415c84:	cmp    DWORD PTR [ebx+0x92bcc55],0xffffff9d
  415c8b:	mov    edi,0x65de1ae1
  415c90:	imul   edx,DWORD PTR [edi],0x2a
  415c93:	jb     0x415c97
  415c95:	mov    esi,0xefd044ea
  415c9a:	inc    edx
  415c9b:	sub    DWORD PTR [eax],esi
  415c9d:	mov    ah,0x94
  415c9f:	mov    dl,0xca
  415ca1:	mov    al,ds:0xa7bcb1f5
  415ca6:	shl    BYTE PTR [ecx+0x5e],1
  415ca9:	and    al,0xa1
  415cab:	or     eax,0x15d9aa32
  415cb0:	jecxz  0x415cc7
  415cb2:	mov    edi,edi
  415cb4:	and    eax,0x42b22e07
  415cb9:	sahf   
  415cba:	imul   esp,edi,0x3df5e5aa
  415cc0:	xchg   esp,eax
  415cc1:	iret   
  415cc2:	sbb    eax,esp
  415cc4:	mov    ah,bh
  415cc6:	cmp    DWORD PTR [eax-0x47],edx
  415cc9:	adc    al,0x55
  415ccb:	cld    
  415ccc:	aam    0x3e
  415cce:	pop    edx
  415ccf:	pusha  
  415cd0:	push   cs
  415cd1:	jno    0x415d30
  415cd3:	leave  
  415cd4:	mov    WORD PTR [edi],gs
  415cd6:	cwde   
  415cd7:	(bad)  
  415cd8:	nop
  415cd9:	mov    esi,0xfae7800f
  415cde:	or     al,BYTE PTR ss:[edx-0x31]
  415ce2:	fwait
  415ce3:	sbb    eax,0xdba5dc6a
  415ce8:	rol    bh,1
  415cea:	mov    esp,0x5ef3977f
  415cef:	cmp    ch,BYTE PTR [esi-0xd4330ee]
  415cf5:	(bad)  [eax]
  415cf7:	int3   
  415cf8:	jno    0x415d33
  415cfa:	lods   eax,DWORD PTR ds:[esi]
  415cfc:	call   0xeb60:0xf3cf343a
  415d03:	mov    WORD PTR [esi-0x50],?
  415d06:	stos   DWORD PTR es:[edi],eax
  415d07:	outs   dx,BYTE PTR ds:[esi]
  415d08:	popf   
  415d09:	aaa    
  415d0a:	xor    bl,BYTE PTR [edi+0x14462293]
  415d10:	loop   0x415ca6
  415d12:	mov    ds:0x6b3c8bf0,eax
  415d17:	rol    BYTE PTR [edi],1
  415d19:	imul   ecx,DWORD PTR [edx+0x21820a43],0xffffffaf
  415d20:	test   DWORD PTR [esi+0x13],esp
  415d23:	stc    
  415d24:	inc    esp
  415d25:	jno    0x415d6c
  415d27:	call   0x84aa:0x8752a22f
  415d2e:	or     cl,al
  415d30:	xlat   BYTE PTR ds:[ebx]
  415d31:	sbb    eax,0x2ae2dbe3
  415d36:	add    eax,0xd4be296f
  415d3b:	cmp    dh,BYTE PTR [eax+0x75]
  415d3e:	sub    DWORD PTR [esi+0x2b],ebp
  415d41:	push   0x5ea8a8fd
  415d46:	jmp    0xdaaa:0x60d22b86
  415d4d:	into   
  415d4e:	cli    
  415d4f:	ret    0x9111
  415d52:	cs push ecx
  415d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d55:	mov    esi,0xef2b5312
  415d5a:	lea    ecx,[ebp+0x16cb0cd5]
  415d60:	mov    ecx,0x3ae6ec63
  415d65:	outs   dx,BYTE PTR ds:[esi]
  415d66:	jmp    0x415daa
  415d68:	xor    eax,0x31c32117
  415d6d:	in     al,0x1c
  415d6f:	out    dx,eax
  415d70:	js     0x415d9d
  415d72:	stos   BYTE PTR es:[edi],al
  415d73:	inc    esp
  415d74:	mov    esi,DWORD PTR [eax+0x53]
  415d77:	loope  0x415da9
  415d79:	enter  0xac,0x8
  415d7d:	push   ebp
  415d7e:	popf   
  415d7f:	mov    ecx,0x66218e0f
  415d84:	dec    ebx
  415d85:	dec    edx
  415d86:	cmp    al,0xd2
  415d88:	(bad)  
  415d89:	aaa    
  415d8a:	loop   0x415d4d
  415d8c:	jmp    0x415df1
  415d8e:	adc    bl,bh
  415d90:	jno    0x415dcb
  415d92:	jmp    0x415d23
  415d94:	push   eax
  415d95:	in     al,0x2b
  415d97:	outs   dx,BYTE PTR ds:[esi]
  415d98:	imul   eax,DWORD PTR [edx+0x9bfb6f0],0x8e7c055b
  415da2:	push   0xd0f3770a
  415da7:	stos   DWORD PTR es:[edi],eax
  415da8:	inc    ebp
  415da9:	jmp    0x316854e8
  415dae:	mov    dh,0x5c
  415db0:	xor    al,0xd1
  415db2:	into   
  415db3:	add    eax,0xc5ad5b52
  415db8:	cmp    eax,0x50bbfa87
  415dbd:	pop    esi
  415dbe:	xor    esp,esp
  415dc0:	inc    edi
  415dc1:	sbb    BYTE PTR [edx+0xcf98d67],dl
  415dc7:	mov    eax,0xc5c1982d
  415dcc:	pop    esi
  415dcd:	lahf   
  415dce:	push   ds
  415dcf:	pop    es
  415dd0:	and    al,0x8a
  415dd2:	and    ah,bh
  415dd4:	mov    edx,0x4a15b3f2
  415dd9:	in     al,0xa
  415ddb:	in     al,0x42
  415ddd:	dec    edx
  415dde:	or     eax,esi
  415de0:	mov    al,0x2c
  415de2:	in     eax,dx
  415de3:	xchg   esp,eax
  415de4:	mov    ecx,0x2b157ddd
  415de9:	sahf   
  415dea:	arpl   WORD PTR [edx-0x43f9b4c0],di
  415df0:	inc    esi
  415df1:	sbb    cl,al
  415df3:	sbb    eax,DWORD PTR [ecx]
  415df5:	push   cs
  415df6:	pop    es
  415df7:	rol    DWORD PTR [ebx],cl
  415df9:	inc    ebx
  415dfa:	pop    ebp
  415dfb:	jmp    0x941ace01
  415e00:	mov    ebx,0x1207a386
  415e05:	xor    eax,0x89112602
  415e0a:	icebp  
  415e0b:	dec    ebp
  415e0c:	mov    ds:0x182ae8,eax
  415e11:	jp     0x415dd6
  415e13:	popa   
  415e14:	iret   
  415e15:	std    
  415e16:	fimul  DWORD PTR [ecx+0x30e3d4f5]
  415e1c:	cmp    al,0xb5
  415e1e:	add    BYTE PTR [edx+0x720ce0d6],ah
  415e24:	ins    DWORD PTR es:[edi],dx
  415e25:	ret    
  415e26:	inc    ebx
  415e27:	jns    0x415e70
  415e29:	stc    
  415e2a:	cmp    bh,BYTE PTR [ebx+0x38]
  415e2d:	jae    0x415e09
  415e2f:	aaa    
  415e30:	into   
  415e31:	outs   dx,BYTE PTR es:[esi]
  415e33:	data16 sahf 
  415e35:	jbe    0x415e5d
  415e37:	arpl   WORD PTR [esi-0x59b05962],bp
  415e3d:	daa    
  415e3e:	into   
  415e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e40:	sbb    esi,DWORD PTR [edx-0x38]
  415e43:	inc    ecx
  415e44:	jecxz  0x415e02
  415e46:	ret    0xbf3d
  415e49:	jmp    0x4089:0x2e68754b
  415e50:	mov    esp,0x4c44989c
  415e55:	push   ebx
  415e56:	adc    al,0xd5
  415e58:	shr    edi,cl
  415e5a:	cmc    
  415e5b:	cmp    eax,0x7b77a665
  415e60:	cld    
  415e61:	lea    eax,[ecx]
  415e63:	jl     0x415e5e
  415e65:	add    al,0x88
  415e67:	xor    DWORD PTR [eax+0x3598de9a],ecx
  415e6d:	and    dh,BYTE PTR [eax-0x9]
  415e70:	daa    
  415e71:	out    dx,al
  415e72:	shr    DWORD PTR [eax-0x52],cl
  415e75:	pop    esp
  415e76:	out    dx,eax
  415e77:	adc    DWORD PTR [edx+0x62d5c412],eax
  415e7d:	pop    ss
  415e7e:	add    eax,edx
  415e80:	mov    esi,0x990109cb
  415e85:	ds pop es
  415e87:	jmp    0x2889efd0
  415e8c:	cmp    BYTE PTR [ebx+eiz*4],al
  415e8f:	mov    cl,0x5e
  415e92:	push   edi
  415e93:	(bad)  
  415e94:	loopne 0x415ef2
  415e96:	retf   0xcb85
  415e99:	cmp    al,0x4c
  415e9b:	mov    cl,0x6d
  415e9d:	sar    DWORD PTR [esi+0x2a2f67fe],cl
  415ea3:	sbb    BYTE PTR [edi],dh
  415ea5:	aaa    
  415ea6:	rcr    BYTE PTR [eax],0xcb
  415ea9:	jo     0x415eee
  415eab:	scas   eax,DWORD PTR es:[edi]
  415eac:	div    ah
  415eae:	cli    
  415eaf:	pop    eax
  415eb0:	dec    edx
  415eb1:	jno    0x415e35
  415eb3:	(bad)  
  415eb4:	jl     0x415e6a
  415eb6:	jns    0x415f13
  415eb8:	loopne 0x415e60
  415eba:	push   ss
  415ebb:	xor    BYTE PTR [ebp-0x30],al
  415ebe:	loop   0x415f0e
  415ec0:	scas   eax,DWORD PTR es:[edi]
  415ec1:	lods   eax,DWORD PTR ds:[esi]
  415ec2:	or     al,0x96
  415ec4:	repnz push edi
  415ec6:	loop   0x415e8d
  415ec8:	mov    ds:0xec84a30e,al
  415ecd:	into   
  415ece:	push   ecx
  415ecf:	fstp   TBYTE PTR [ebp+0x4679c0a4]
  415ed5:	in     al,0x4b
  415ed7:	shl    ch,1
  415ed9:	mov    BYTE PTR [eiz*8+0x42439049],ch
  415ee0:	fdiv   QWORD PTR [esi-0x7d6a4447]
  415ee6:	neg    BYTE PTR [ebp+0x4a5cb9af]
  415eec:	call   0x2c16eb10
  415ef1:	idiv   DWORD PTR [edi]
  415ef3:	fsubr  QWORD PTR [ebx+0x2145726c]
  415ef9:	xchg   edx,ebx
  415efb:	stc    
  415efc:	(bad)  
  415efd:	repnz and ebp,DWORD PTR [eax]
  415f00:	push   es
  415f01:	pusha  
  415f02:	int3   
  415f03:	sub    BYTE PTR [eax],al
  415f05:	add    BYTE PTR [edx],0x66
  415f08:	in     al,dx
  415f09:	pushf  
  415f0a:	dec    ecx
  415f0b:	sbb    DWORD PTR [eax-0x1df3c89a],0xd586a391
  415f15:	ret    
  415f16:	adc    eax,0xfd971fd7
  415f1b:	adc    ebp,DWORD PTR [edi]
  415f1d:	lods   eax,DWORD PTR ds:[esi]
  415f1e:	sbb    DWORD PTR [esi],ebp
  415f20:	ror    ebp,cl
  415f22:	jge    0x415ef2
  415f24:	dec    ecx
  415f25:	ins    BYTE PTR es:[edi],dx
  415f26:	pop    ss
  415f27:	in     eax,0x7d
  415f29:	dec    esi
  415f2a:	or     al,BYTE PTR [eax+ebx*8]
  415f2d:	or     DWORD PTR [edx+0x55],esp
  415f30:	pop    ecx
  415f31:	popa   
  415f32:	mov    al,ds:0x3eaac025
  415f37:	in     al,dx
  415f38:	or     eax,0x31900280
  415f3d:	ret    
  415f3e:	ficom  DWORD PTR es:[edi]
  415f41:	mov    BYTE PTR [edi-0x3b],bh
  415f44:	aad    0xbf
  415f46:	scas   eax,DWORD PTR es:[edi]
  415f47:	test   esp,0x8ebfb59d
  415f4d:	cmc    
  415f4e:	stos   BYTE PTR es:[edi],al
  415f4f:	push   ecx
  415f50:	inc    edi
  415f51:	mov    eax,ds:0xb5050e27
  415f56:	ret    0xbb4b
  415f59:	or     al,0x39
  415f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f5c:	push   esi
  415f5d:	stos   BYTE PTR es:[edi],al
  415f5e:	inc    ebp
  415f5f:	sbb    eax,0x108c2bd1
  415f64:	pop    edx
  415f65:	mov    cl,0x89
  415f67:	inc    eax
  415f68:	add    DWORD PTR [ebp-0x562c803],ecx
  415f6e:	dec    ebx
  415f6f:	jnp    0x415f05
  415f71:	mov    ebp,0x8848dfb6
  415f76:	rol    edx,1
  415f78:	or     al,BYTE PTR [edx]
  415f7a:	gs adc bl,ch
  415f7d:	out    0xac,al
  415f7f:	sub    edi,DWORD PTR [ebx]
  415f81:	push   0xfd0ff01e
  415f86:	out    dx,al
  415f87:	cli    
  415f88:	mov    esi,DWORD PTR [ecx-0x52]
  415f8b:	cmp    BYTE PTR [edi+edi*1],ah
  415f8e:	out    dx,al
  415f8f:	mov    ebp,esi
  415f91:	and    eax,DWORD PTR [edi-0x2f]
  415f94:	mov    ebx,DWORD PTR [edx-0x595332b3]
  415f9a:	sub    DWORD PTR [edi-0x73],ebp
  415f9d:	arpl   bp,bx
  415f9f:	dec    edx
  415fa0:	xor    DWORD PTR [edi+0xbc14859],ecx
  415fa6:	test   eax,0x163b63f
  415fab:	add    esp,DWORD PTR [edi+ecx*1]
  415fae:	jg     0x415fc1
  415fb0:	fsubr  DWORD PTR [eax-0x3f]
  415fb3:	ret    0x7f90
  415fb6:	sbb    ah,BYTE PTR [edx+0x5646a531]
  415fbc:	pusha  
  415fbd:	jge    0x415f59
  415fbf:	in     eax,dx
  415fc0:	mov    esi,0xe5d3e5d6
  415fc5:	je     0x415fd1
  415fc7:	outs   dx,BYTE PTR ds:[esi]
  415fc8:	std    
  415fc9:	pop    edi
  415fca:	ins    DWORD PTR es:[edi],dx
  415fcb:	push   es
  415fcc:	cmc    
  415fcd:	test   eax,0x4762f589
  415fd2:	data16 (bad) 
  415fd4:	stc    
  415fd5:	and    al,0x93
  415fd7:	or     eax,0x85332fcb
  415fdc:	loop   0x415fb7
  415fde:	fild   WORD PTR [ecx-0x5282d43a]
  415fe4:	jle    0x41604d
  415fe6:	and    DWORD PTR [edx-0x5a1e6b3d],edx
  415fec:	cwde   
  415fed:	add    ch,BYTE PTR [eax+0x10]
  415ff0:	adc    eax,0x5523239
  415ff5:	mov    cl,0x62
  415ff7:	xchg   ebp,eax
  415ff8:	data16 jp 0x416001
  415ffb:	(bad)  
  415ffc:	mov    eax,0x855ca30e
  416001:	mov    bl,BYTE PTR [esi]
  416003:	pop    ds
  416004:	jo     0x415f86
  416006:	xor    DWORD PTR [ebp+eiz*4-0x2481e251],0x8912ca8c
  416011:	cdq    
  416012:	cs scas eax,DWORD PTR es:[edi]
  416014:	sub    DWORD PTR ds:0xbe086911,esi
  41601a:	mov    ds:0xa2f205a5,eax
  41601f:	cs pop eax
  416021:	imul   edi,DWORD PTR [ecx],0xffffffcd
  416024:	cmp    esp,DWORD PTR [esi+eiz*8-0x70]
  416028:	jg     0x416032
  41602a:	xor    BYTE PTR [edi-0x5d],cl
  41602d:	lds    ebx,FWORD PTR [ecx+0x5e]
  416030:	test   eax,0xcfea7814
  416035:	push   ebx
  416036:	xchg   ebp,eax
  416037:	sub    al,0x9c
  416039:	into   
  41603a:	pop    esp
  41603b:	and    ecx,DWORD PTR [esi+0x578e07c2]
  416041:	loopne 0x41607c
  416043:	cmp    al,0x41
  416045:	push   ss
  416046:	daa    
  416047:	jae    0x415ff7
  416049:	lea    ebx,[edx]
  41604b:	ss xchg esi,eax
  41604d:	nop
  41604e:	jl     0x4160b7
  416050:	mov    ebx,0x1a52e36e
  416055:	mov    esi,0xa81a6cea
  41605a:	jmp    0x416091
  41605c:	cmp    eax,0x78e369
  416061:	int3   
  416062:	aad    0x9b
  416064:	mov    esp,0x41181990
  416069:	mov    eax,0xbe57b9f3
  41606e:	mov    ch,0x5f
  416070:	out    dx,al
  416071:	mov    edx,0x301694da
  416076:	nop
  416077:	inc    eax
  416078:	mov    dh,0x86
  41607a:	jmp    0x7f27:0x6ec5e8ba
  416081:	cmp    al,0x9
  416083:	or     al,0xd9
  416085:	shl    esp,1
  416087:	sti    
  416088:	mov    bh,ch
  41608a:	add    eax,0x109d2e87
  41608f:	es in  al,0x6b
  416092:	or     BYTE PTR [ecx-0x78],bh
  416095:	or     edx,ecx
  416097:	dec    edx
  416098:	rcl    edx,1
  41609a:	mov    ch,0x9c
  41609c:	sbb    ecx,DWORD PTR [eax-0x48535721]
  4160a2:	xlat   BYTE PTR ds:[ebx]
  4160a3:	pop    esp
  4160a4:	xor    BYTE PTR ss:[eax],bl
  4160a7:	scas   eax,DWORD PTR es:[edi]
  4160a8:	mov    edi,0xfe839b93
  4160ad:	add    eax,DWORD PTR [edi+0x35850726]
  4160b3:	add    edx,edx
  4160b5:	mov    dh,0x72
  4160b7:	jmp    0x52f5:0x887111f4
  4160be:	gs mov esi,0x9778c585
  4160c4:	jg     0x4160c6
  4160c6:	fs mov al,0xd5
  4160c9:	jmp    0x416069
  4160cb:	add    esp,DWORD PTR [esi+0x2faeaa84]
  4160d1:	fidivr WORD PTR [esp+edi*8-0x59]
  4160d5:	dec    ebp
  4160d6:	aad    0xf6
  4160d8:	popf   
  4160d9:	retf   
  4160da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160db:	ins    DWORD PTR es:[edi],dx
  4160dc:	xchg   esi,eax
  4160dd:	and    ebp,DWORD PTR [ebp-0x130fa506]
  4160e3:	imul   eax,eax,0xc12b158b
  4160e9:	fwait
  4160ea:	test   eax,0xd13fbce8
  4160ef:	dec    ecx
  4160f0:	retf   0x52ba
  4160f3:	pusha  
  4160f4:	adc    DWORD PTR [ebx],0xffffff88
  4160f7:	clc    
  4160f8:	and    dl,dl
  4160fa:	loopne 0x416122
  4160fc:	cmp    bl,BYTE PTR [esi-0x27eafab7]
  416102:	inc    ecx
  416103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416104:	sahf   
  416105:	mov    esi,0x5fddb4e6
  41610a:	icebp  
  41610b:	shl    DWORD PTR [ebx+0x3506fafe],cl
  416111:	(bad)
  416115:	out    dx,al
  416116:	pop    ecx
  416117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416118:	hlt    
  416119:	mov    al,0xd1
  41611b:	nop
  41611c:	cld    
  41611d:	xchg   BYTE PTR [esi+edi*2+0x5e],ah
  416121:	clc    
  416122:	sub    ebx,DWORD PTR [edi+ebp*4+0x2dc540f4]
  416129:	push   eax
  41612a:	sub    BYTE PTR [ecx],0xda
  41612d:	sbb    bl,BYTE PTR [ecx]
  41612f:	adc    al,0x5c
  416131:	mov    eax,0x4202909a
  416136:	mov    edi,0x544be830
  41613c:	add    ebp,ebx
  41613e:	add    bl,BYTE PTR [ebp-0x78]
  416141:	lock sbb ah,BYTE PTR [edx]
  416144:	pop    ds
  416145:	daa    
  416146:	pop    ss
  416147:	push   0x45
  416149:	icebp  
  41614a:	(bad)  
  41614b:	es jl  0x416198
  41614e:	addr16 push ds
  416150:	shr    al,cl
  416152:	mov    edi,0xaeafcf6d
  416157:	and    DWORD PTR [ebp-0x1fd91f22],edi
  41615d:	cmp    eax,0x6d43f9fc
  416162:	cmc    
  416163:	ror    BYTE PTR [esi-0x40],cl
  416166:	in     eax,0x1
  416168:	lds    edi,FWORD PTR [ecx+ecx*1]
  41616b:	fbld   TBYTE PTR [edi+0x32]
  41616e:	cmc    
  41616f:	(bad)  
  416171:	jecxz  0x41611f
  416173:	sub    esi,esi
  416175:	arpl   WORD PTR [esi+0x42],dx
  416178:	mov    ds,esi
  41617a:	xchg   ebp,eax
  41617b:	jne    0x4161b4
  41617d:	or     al,0xe4
  41617f:	stos   BYTE PTR es:[edi],al
  416180:	mov    cl,0xa5
  416182:	push   cs
  416183:	(bad)  
  416184:	adc    eax,0xe2830714
  416189:	mov    eax,0x8ce1230f
  41618e:	je     0x4161a7
  416190:	je     0x41614d
  416192:	mov    gs,eax
  416194:	xchg   ecx,eax
  416195:	in     al,dx
  416196:	push   edx
  416197:	test   ebp,esp
  416199:	xor    BYTE PTR [eax+0x5d],0x97
  41619d:	out    dx,eax
  41619e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41619f:	inc    edx
  4161a0:	mov    esp,0x36b1a3d4
  4161a5:	mov    ch,0xff
  4161a7:	cli    
  4161a8:	jb     0x41620c
  4161aa:	mov    bl,0x8e
  4161ac:	mov    esi,0x8a9a42c7
  4161b1:	mov    ds:0xf1a4e381,al
  4161b6:	fmul   QWORD PTR [esi+edi*4]
  4161b9:	xor    eax,0x55a45138
  4161be:	call   0x680e8307
  4161c3:	jns    0x4161b7
  4161c5:	and    BYTE PTR [ecx+0x1859a486],dh
  4161cb:	sbb    ecx,DWORD PTR ds:0xa96f3b57
  4161d1:	call   0xd9ac:0xe4b72307
  4161d8:	loop   0x416251
  4161da:	sub    al,0x65
  4161dc:	pop    es
  4161dd:	sub    ch,BYTE PTR [edi]
  4161df:	jge    0x4161d3
  4161e1:	and    ah,BYTE PTR [ebx-0x318d9852]
  4161e7:	mov    WORD PTR [edi+0x1f],fs
  4161ea:	sbb    eax,0xa40a88a
  4161ef:	inc    ebp
  4161f0:	scas   eax,DWORD PTR es:[edi]
  4161f1:	push   0xffffffa1
  4161f3:	jnp    0x41618f
  4161f5:	sahf   
  4161f6:	push   0x4d
  4161f8:	test   BYTE PTR [eax],0xa6
  4161fb:	or     al,0xe9
  4161fd:	xor    DWORD PTR [ecx],eax
  4161ff:	xchg   ebx,eax
  416200:	test   BYTE PTR [ecx+0x16ac2ae3],dl
  416206:	jmp    0x23dad73e
  41620b:	xor    DWORD PTR [esi],0xcf19f230
  416211:	dec    ebp
  416212:	adc    BYTE PTR [esp+eax*8+0x0],al
  416216:	icebp  
  416217:	jp     0x416228
  416219:	clc    
  41621a:	lods   al,BYTE PTR ds:[esi]
  41621b:	adc    eax,0x766b32aa
  416220:	rol    DWORD PTR [di],0x4b
  416224:	je     0x4161eb
  416226:	dec    edx
  416227:	inc    edx
  416228:	pop    esp
  416229:	adc    al,0x8c
  41622b:	sub    al,BYTE PTR [esp+ebx*8]
  41622e:	xor    edx,ecx
  416230:	jp     0x41621c
  416232:	mov    bl,0xf3
  416234:	dec    esi
  416235:	push   0x98420062
  41623a:	ss cli 
  41623c:	and    DWORD PTR [esi+0x3e],0xffffff86
  416240:	fidiv  WORD PTR [edx-0x30]
  416243:	xlat   BYTE PTR ds:[ebx]
  416244:	outs   dx,BYTE PTR ds:[esi]
  416245:	mov    eax,0xbbde0ca1
  41624a:	cmp    eax,0x627f7196
  41624f:	xchg   ecx,eax
  416250:	loope  0x41622b
  416252:	cdq    
  416253:	adc    dh,bl
  416255:	push   esp
  416256:	sbb    al,BYTE PTR [ebx-0x52]
  416259:	or     dl,BYTE PTR [edi+0x20]
  41625c:	not    BYTE PTR [esi-0x23]
  41625f:	jp     0x4162d1
  416261:	ret    0xb9a2
  416264:	cmp    eax,0xc51e5ea7
  416269:	jp     0x41624b
  41626b:	jl     0x41621a
  41626d:	sub    BYTE PTR [esi],bh
  41626f:	inc    ebx
  416270:	nop
  416271:	aam    0x6
  416273:	vmovhps QWORD PTR [edi],xmm5
  416277:	inc    edi
  416278:	adc    al,0x7e
  41627a:	scas   eax,DWORD PTR es:[edi]
  41627b:	loop   0x41627a
  41627d:	sbb    BYTE PTR [esi-0x2a],0xf2
  416281:	dec    edi
  416282:	jbe    0x4162e4
  416284:	jnp    0x416288
  416286:	(bad)  
  416287:	mov    cl,0x7c
  416289:	push   esp
  41628a:	pop    esi
  41628b:	jo     0x41627a
  41628d:	push   ecx
  41628e:	adc    eax,0xc89db8c2
  416293:	sub    dh,BYTE PTR [esi-0x27]
  416296:	inc    ebp
  416297:	pop    ebx
  416298:	not    DWORD PTR [eax+edi*2+0x74669d1a]
  41629f:	fdiv   DWORD PTR [ebx-0x174cc533]
  4162a5:	ss push ebp
  4162a7:	(bad)  
  4162a8:	cmp    DWORD PTR [ecx+ecx*1-0x80],edi
  4162ac:	stos   BYTE PTR es:[edi],al
  4162ad:	std    
  4162ae:	and    cl,al
  4162b0:	arpl   WORD PTR [ecx-0x4afe6d07],bp
  4162b6:	add    eax,0x644b2bb0
  4162bb:	jge    0x4162ce
  4162bd:	xor    BYTE PTR [eax],bl
  4162bf:	js     0x4162eb
  4162c1:	gs mov cl,0x21
  4162c4:	loopne 0x41627c
  4162c6:	or     ebx,DWORD PTR [edi-0x290dda5b]
  4162cc:	mov    al,ds:0x2e562ad2
  4162d1:	pop    ss
  4162d2:	jne    0x416260
  4162d4:	or     eax,0x2e5ba740
  4162d9:	jle    0x4162eb
  4162db:	aam    0x37
  4162dd:	test   al,0x39
  4162df:	call   0x225c6096
  4162e4:	and    BYTE PTR [ebx+0x49b20c11],al
  4162ea:	out    dx,eax
  4162eb:	sbb    DWORD PTR [eax+0x74],ebp
  4162ee:	test   BYTE PTR [ecx-0x76],dl
  4162f1:	bound  ebx,QWORD PTR [edi]
  4162f3:	sbb    edx,ebx
  4162f5:	fsub   DWORD PTR [edi-0x1df6547]
  4162fb:	mov    eax,eax
  4162fd:	lahf   
  4162fe:	aas    
  4162ff:	jb     0x4162bd
  416301:	(bad)  
  416302:	jns    0x416333
  416304:	jecxz  0x4162e1
  416306:	add    DWORD PTR [edi+edx*1+0x4d],esp
  41630a:	or     edi,DWORD PTR [ebx+0x76cf42cc]
  416310:	inc    edx
  416311:	push   edi
  416312:	add    eax,0x57f52067
  416317:	sbb    ebp,DWORD PTR [ecx+ebx*2]
  41631a:	inc    esp
  41631b:	jmp    0x416352
  41631d:	push   cs
  41631e:	lock adc DWORD PTR [eax-0x20],ebx
  416322:	push   edi
  416323:	sbb    al,ch
  416325:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  416327:	scas   al,BYTE PTR es:[edi]
  416328:	push   ebx
  416329:	add    al,0x3c
  41632b:	pop    es
  41632c:	test   al,0xb4
  41632e:	ds in  al,0xb4
  416331:	je     0x416321
  416333:	scas   al,BYTE PTR es:[edi]
  416334:	push   ss
  416335:	cmp    BYTE PTR [esi],bl
  416337:	sbb    esi,DWORD PTR [edi+esi*4-0x66eb1e31]
  41633e:	pop    esi
  41633f:	lock jno 0x41636e
  416342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416343:	and    bh,BYTE PTR [edi]
  416345:	push   ss
  416346:	mov    eax,0xeff7e07a
  41634b:	mul    eax
  41634d:	int    0x6
  41634f:	hlt    
  416350:	retf   
  416351:	mov    ds:0x9e6dfd08,al
  416356:	fsubr  DWORD PTR [ebp+0x1c573619]
  41635c:	and    DWORD PTR [eax+0x33],ecx
  41635f:	jnp    0x4162e9
  416361:	add    al,0x98
  416363:	xchg   esi,eax
  416364:	push   edx
  416365:	xchg   ebp,eax
  416366:	inc    ebx
  416367:	pop    ebx
  416368:	jb     0x416316
  41636a:	push   ds
  41636b:	out    0x7d,eax
  41636d:	mov    ecx,0xf6e830d3
  416372:	retf   0x9211
  416375:	jmp    0xcbd452a9
  41637a:	in     al,dx
  41637b:	int    0xfc
  41637d:	(bad)  
  41637e:	into   
  41637f:	out    dx,eax
  416380:	ret    
  416381:	enter  0x7e6c,0x18
  416385:	lock mov ah,dh
  416388:	test   eax,0x48461b82
  41638d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41638e:	or     edx,DWORD PTR [ebx+0x537a879a]
  416394:	in     eax,0xcd
  416396:	add    eax,0x3ccc85fc
  41639b:	inc    ecx
  41639c:	repnz sbb eax,0x63cba5df
  4163a2:	add    al,ah
  4163a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163a5:	repz jne 0x416400
  4163a8:	ja     0x416348
  4163aa:	inc    edi
  4163ab:	and    bl,BYTE PTR [esi-0x9]
  4163ae:	sbb    edi,ebp
  4163b0:	shl    DWORD PTR [ebx-0x10],cl
  4163b3:	jecxz  0x41641c
  4163b5:	inc    ebx
  4163b6:	adc    DWORD PTR [edx+0x15],ebp
  4163b9:	(bad)  
  4163ba:	in     eax,0xc3
  4163bc:	pop    esp
  4163bd:	jmp    0x4163d9
  4163bf:	sbb    BYTE PTR [ecx],bh
  4163c1:	pop    esp
  4163c2:	xchg   DWORD PTR [eax],esi
  4163c4:	dec    ebx
  4163c5:	mov    eax,cs:0x44bb337
  4163cb:	xchg   edx,eax
  4163cc:	and    DWORD PTR [ecx+0xa3b1aa4],eax
  4163d2:	popa   
  4163d3:	xchg   esp,eax
  4163d4:	add    BYTE PTR [ebx+0x273666bc],0xb7
  4163db:	mov    ds,WORD PTR ds:0x61074d1f
  4163e1:	bt     DWORD PTR [ebx-0x23],ebp
  4163e5:	push   edi
  4163e6:	ins    BYTE PTR es:[edi],dx
  4163e7:	je     0x41643a
  4163e9:	pop    ebx
  4163ea:	cmp    cl,BYTE PTR [ebp+edi*2-0x50bb9dae]
  4163f1:	sbb    BYTE PTR ds:[edx+0x1c],bh
  4163f5:	push   cs
  4163f6:	adc    DWORD PTR [edx+0x3e],0xbd775ad2
  4163fd:	int    0x96
  4163ff:	add    eax,0x4b330f5d
  416404:	push   ebx
  416405:	cmp    DWORD PTR [di],ebp
  416408:	dec    edi
  416409:	pop    eax
  41640a:	fstp   QWORD PTR [edi]
  41640c:	xor    eax,DWORD PTR [ebx+0x1a]
  41640f:	mov    ebx,0xb5ad3145
  416414:	mov    ecx,0x2e76a906
  416419:	jecxz  0x41639e
  41641b:	cs xor cl,ch
  41641e:	aam    0xa7
  416420:	scas   al,BYTE PTR es:[edi]
  416421:	dec    edx
  416422:	adc    BYTE PTR es:[eax],0x74
  416426:	iret   
  416427:	pop    ecx
  416428:	pushf  
  416429:	jmp    0x6630:0xc8f58c20
  416430:	jl     0x4163fc
  416432:	das    
  416433:	jl     0x4164af
  416435:	inc    esp
  416436:	adc    cl,al
  416438:	mov    ebx,0x865802b6
  41643d:	jnp    0x41643a
  41643f:	cmp    al,0x29
  416441:	outs   dx,BYTE PTR ds:[esi]
  416442:	jae    0x4164c0
  416444:	aaa    
  416445:	int3   
  416446:	jg     0x416423
  416448:	dec    esp
  416449:	enter  0xcbef,0xcc
  41644d:	adc    DWORD PTR [ebp+0x1f],esi
  416450:	xchg   ebp,eax
  416452:	test   BYTE PTR [ecx],dl
  416454:	xchg   esi,eax
  416455:	adc    al,BYTE PTR [esi+0x4d]
  416458:	cld    
  416459:	or     DWORD PTR ds:0xea29a4ca,esp
  41645f:	pop    edx
  416460:	push   esp
  416461:	mov    ch,dl
  416463:	call   0xb3997b28
  416468:	jmp    0x4164ae
  41646a:	mov    ch,0xca
  41646c:	pop    ebx
  41646d:	sub    esi,DWORD PTR [ecx-0x3a]
  416470:	test   eax,0x204e3933
  416475:	bound  eax,QWORD PTR [edx]
  416477:	mov    ds:0x219120f8,al
  41647c:	sub    esp,DWORD PTR [edx+esi*4-0x76]
  416480:	inc    esp
  416481:	mov    cl,0x8b
  416483:	sahf   
  416484:	and    ecx,DWORD PTR [ebp-0x6827f959]
  41648a:	xchg   esi,eax
  41648b:	sbb    bl,BYTE PTR [edx+ebp*2]
  41648e:	mov    ds:0x1a5b7ba0,al
  416493:	and    eax,0x883e9095
  416498:	pop    edx
  416499:	pop    edi
  41649a:	inc    ebx
  41649b:	and    al,dl
  41649d:	xor    bh,0x52
  4164a0:	dec    esp
  4164a1:	mov    eax,ds:0xf56e9f59
  4164a6:	lahf   
  4164a7:	add    eax,0xd07a2a9b
  4164ac:	dec    ebx
  4164ad:	nop
  4164ae:	dec    edx
  4164af:	stos   DWORD PTR es:[edi],eax
  4164b0:	jnp    0x41645a
  4164b2:	xor    al,0xd3
  4164b4:	add    DWORD PTR [edx],ecx
  4164b6:	lea    edi,[eax]
  4164b8:	mov    BYTE PTR [esi+0x62],0xa4
  4164bc:	addr16 repnz (bad) 
  4164bf:	int3   
  4164c0:	loope  0x4164a4
  4164c2:	mov    ds:0xa945907d,al
  4164c7:	mov    esi,0xf89f5d25
  4164cc:	call   0xd2c2:0x3e10595d
  4164d3:	popa   
  4164d4:	add    DWORD PTR [ebp+0x3715e930],esi
  4164da:	stos   DWORD PTR es:[edi],eax
  4164db:	in     al,0xb7
  4164dd:	fnstcw WORD PTR [ebx+0x29]
  4164e0:	pop    eax
  4164e1:	push   esp
  4164e2:	hlt    
  4164e3:	dec    esi
  4164e4:	ret    0xa93f
  4164e7:	add    al,0xfe
  4164e9:	fs push 0x583e846f
  4164ef:	inc    ebx
  4164f0:	inc    ebp
  4164f1:	fiadd  WORD PTR [eax]
  4164f3:	pushf  
  4164f4:	jae    0x416552
  4164f6:	sub    al,0x30
  4164f8:	jo     0x416561
  4164fa:	imul   ecx,DWORD PTR [esi+0x2f59918e],0x6e3e4011
  416504:	les    edx,FWORD PTR [esi+0x44]
  416507:	jae    0x41653e
  416509:	adc    bl,BYTE PTR [eax+0x5017bc7c]
  41650f:	rol    DWORD PTR [ecx+eiz*2+0xc6f5f9a],cl
  416516:	cmp    bl,cl
  416518:	fisttp QWORD PTR [eax+0x2c]
  41651b:	sbb    eax,0xb34d8531
  416520:	push   0x85d54873
  416525:	bound  ebx,QWORD PTR [ecx]
  416527:	or     esi,ebp
  416529:	sub    eax,0x4490b3d7
  41652e:	sub    BYTE PTR [ebx+0x6d],bh
  416531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416532:	js     0x4164dc
  416534:	shl    BYTE PTR [edi+0x3d7e5cba],1
  41653a:	inc    esp
  41653b:	and    ebp,DWORD PTR ds:0x48b19d44
  416541:	sbb    ebx,DWORD PTR [esi+0x235fd5a1]
  416547:	cmc    
  416548:	dec    eax
  416549:	push   ss
  41654a:	sub    BYTE PTR [eax+0x2],ah
  41654d:	ins    DWORD PTR es:[edi],dx
  41654e:	sahf   
  41654f:	mov    WORD PTR [ecx+0x429c2fdb],gs
  416555:	xor    dl,BYTE PTR [edx]
  416557:	out    0xd7,eax
  416559:	das    
  41655a:	xchg   ebx,eax
  41655b:	add    BYTE PTR [ecx+0x29],al
  41655e:	shr    DWORD PTR [esi],1
  416560:	ficom  DWORD PTR [esi+edi*8+0x7586b23f]
  416567:	outs   dx,BYTE PTR ds:[esi]
  416568:	fistp  QWORD PTR [eax-0x38ea021e]
  41656e:	jb     0x4165ca
  416570:	test   ecx,esp
  416572:	mov    edi,0x9a66e40d
  416577:	cdq    
  416578:	jno    0x41659d
  41657a:	pusha  
  41657b:	xor    dl,cl
  41657d:	xlat   BYTE PTR ds:[ebx]
  41657e:	jle    0x4165a2
  416580:	and    BYTE PTR [ebx-0x66],ch
  416583:	(bad)  
  416584:	aam    0xc9
  416586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416587:	lea    edx,[eax+0x2f]
  41658a:	mov    dh,0xaf
  41658c:	call   FWORD PTR [edx]
  41658e:	arpl   WORD PTR [ebx+edx*1-0x7473aae2],di
  416595:	and    dl,cl
  416597:	mov    ah,0xf9
  416599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41659a:	scas   al,BYTE PTR es:[edi]
  41659b:	call   0xdfef:0xda391bb2
  4165a2:	cmp    ebp,ecx
  4165a4:	xchg   esp,eax
  4165a5:	mov    edx,0x219a98b6
  4165aa:	xchg   BYTE PTR [edi-0x748eb948],bh
  4165b0:	sub    DWORD PTR [esi+eiz*8-0x2664336f],ecx
  4165b7:	or     al,0x1
  4165b9:	push   0xffffff9b
  4165bb:	jle    0x416574
  4165bd:	pop    edx
  4165be:	pop    esp
  4165bf:	pushf  
  4165c0:	add    al,0x39
  4165c2:	enter  0x472c,0x75
  4165c6:	or     DWORD PTR [edi+0x65],esi
  4165c9:	pop    ecx
  4165ca:	mov    dl,0xe
  4165cc:	outs   dx,BYTE PTR ds:[esi]
  4165cd:	and    edi,edx
  4165cf:	jp     0x416605
  4165d1:	outs   dx,BYTE PTR ds:[esi]
  4165d2:	in     eax,dx
  4165d3:	out    dx,al
  4165d4:	mov    al,0x87
  4165d6:	es inc esp
  4165d8:	mov    BYTE PTR ds:[eax-0x6a4b7817],dh
  4165df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e0:	dec    edi
  4165e1:	inc    esi
  4165e2:	push   esp
  4165e3:	inc    ecx
  4165e4:	xchg   BYTE PTR [edx],al
  4165e6:	popa   
  4165e7:	imul   esi,DWORD PTR [ecx],0xffffffb4
  4165ea:	xor    eax,0xc4bc217
  4165ef:	imul   edx,DWORD PTR [edi+ebp*1+0x3d4e591e],0xdd62b304
  4165fa:	mov    ds:0x5fe865a8,al
  4165ff:	add    ebp,DWORD PTR [ecx+0x7e]
  416602:	dec    ebp
  416603:	push   ss
  416604:	ret    0x4019
  416607:	sub    eax,ebx
  416609:	repnz fwait
  41660b:	and    BYTE PTR [eax+0x37],ch
  41660e:	mov    ds:0x268a55e8,eax
  416613:	lods   al,BYTE PTR ds:[esi]
  416614:	das    
  416615:	pop    edi
  416616:	push   0x58
  416618:	in     al,dx
  416619:	loop   0x416686
  41661b:	test   al,0x50
  41661d:	dec    edx
  41661e:	sub    eax,0xab119163
  416623:	inc    esi
  416624:	adc    eax,0x7806b6df
  416629:	call   0x685949a5
  41662e:	std    
  41662f:	ret    0x94f6
  416632:	sbb    al,0xb
  416634:	mov    al,ds:0xa956d202
  416639:	mov    ds:0x611ec6b4,al
  41663e:	xor    edx,ebx
  416640:	ss hlt 
  416642:	sbb    ebp,DWORD PTR ds:[ecx]
  416645:	xchg   BYTE PTR [ecx+ebx*1-0x3b09f6b7],bl
  41664c:	pop    ss
  41664d:	js     0x4165d2
  41664f:	sti    
  416650:	cwde   
  416651:	sub    ah,bl
  416653:	lea    esi,[eax]
  416655:	xor    ecx,DWORD PTR [ebx+ebx*4-0x7d2fcdb3]
  41665c:	out    0xd1,eax
  41665e:	jnp    0x416635
  416660:	out    dx,al
  416661:	jecxz  0x416698
  416663:	dec    ebp
  416664:	xchg   ecx,eax
  416665:	mov    WORD PTR [ecx],ss
  416667:	inc    esi
  416668:	xchg   esi,eax
  416669:	outs   dx,BYTE PTR ds:[esi]
  41666a:	jnp    0x416639
  41666c:	pop    ss
  41666d:	stos   BYTE PTR es:[edi],al
  41666e:	pusha  
  41666f:	fsubr  st,st(1)
  416671:	arpl   WORD PTR [esi+eax*1+0x5cbf81c4],si
  416678:	aad    0x4a
  41667a:	xchg   edi,eax
  41667b:	enter  0x9ea,0x77
  41667f:	pop    ebx
  416680:	jmp    0x416628
  416682:	xchg   esp,eax
  416683:	xor    ebx,DWORD PTR [ebx+0x79]
  416686:	jle    0x4166bb
  416688:	sti    
  416689:	inc    edi
  41668a:	mov    ch,0x6a
  41668c:	(bad)  
  41668e:	sbb    al,0x5c
  416690:	inc    ecx
  416691:	mov    ds:0x5c13ac98,eax
  416696:	inc    eax
  416697:	pop    eax
  416698:	shr    BYTE PTR [ecx+0x63],cl
  41669b:	jo     0x4166e4
  41669d:	dec    eax
  41669e:	sbb    al,0x6e
  4166a0:	jg     0x4166a1
  4166a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a3:	xchg   edi,eax
  4166a4:	pop    ebp
  4166a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a6:	jns    0x4166b5
  4166a8:	in     al,dx
  4166a9:	inc    esp
  4166aa:	fcomp  QWORD PTR [ecx]
  4166ac:	shr    cl,0xa5
  4166af:	push   0x8e54b609
  4166b4:	cmp    eax,0x1bcbe1e1
  4166b9:	mov    WORD PTR [esi+0xf],gs
  4166bc:	fwait
  4166bd:	push   edi
  4166be:	xor    dl,BYTE PTR [eax+0x77]
  4166c1:	nop
  4166c2:	retf   
  4166c3:	adc    BYTE PTR [edx-0x45b1d9c],bh
  4166c9:	bound  eax,QWORD PTR [edx+0x3c143546]
  4166cf:	call   0xf2bf:0x5f58e36c
  4166d6:	sbb    dl,BYTE PTR [ebp+0x4f591f92]
  4166dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166dd:	pop    esp
  4166de:	out    dx,al
  4166df:	call   0x20d4f6d4
  4166e4:	in     al,dx
  4166e5:	push   ecx
  4166e6:	mov    esp,0x2c566ad
  4166eb:	in     eax,dx
  4166ec:	fwait
  4166ed:	add    BYTE PTR [edx],cl
  4166ef:	int    0x10
  4166f1:	(bad)  
  4166f2:	adc    al,0x3c
  4166f4:	sbb    ecx,DWORD PTR [esp+ebx*8-0x639c8469]
  4166fb:	ret    
  4166fc:	repz lahf 
  4166fe:	pop    ecx
  4166ff:	push   ecx
  416700:	mov    eax,ds:0x1da703df
  416705:	clc    
  416706:	cmc    
  416707:	xor    eax,0x52f3a78b
  41670c:	int    0x9f
  41670e:	ss mov esi,0x10878d3b
  416714:	iret   
  416715:	fild   WORD PTR ds:0x4833ea29
  41671b:	js     0x4166a4
  41671d:	cmp    al,0xf1
  41671f:	mov    ah,0x47
  416721:	(bad)  
  416722:	nop
  416723:	daa    
  416724:	lods   eax,DWORD PTR ds:[esi]
  416725:	jp     0x41674d
  416727:	or     al,0x49
  416729:	imul   esp,DWORD PTR [ecx+0x24],0x47cb240e
  416730:	sbb    al,0xae
  416732:	mov    dh,dl
  416734:	push   edi
  416735:	mov    al,0xe5
  416737:	mov    ds:0xfad5146,eax
  41673c:	jge    0x416796
  41673e:	fneni(8087 only) 
  416740:	fmul   st(4),st
  416742:	ins    BYTE PTR es:[edi],dx
  416743:	jle    0x41674b
  416745:	push   edi
  416746:	jmp    0xd4f27cba
  41674b:	loope  0x41672d
  41674d:	je     0x4167a9
  41674f:	call   DWORD PTR [ebx-0x39]
  416752:	or     al,0x5f
  416754:	pop    ebp
  416755:	pop    es
  416756:	jecxz  0x416791
  416758:	dec    ebp
  416759:	lods   eax,DWORD PTR ds:[esi]
  41675a:	cmp    eax,0x4b
  41675d:	movq   QWORD PTR [ebp-0x33],mm3
  416761:	in     eax,0xb1
  416763:	push   ebx
  416764:	aas    
  416765:	xchg   edx,eax
  416766:	les    edx,FWORD PTR [edi-0x60a2eecc]
  41676c:	rol    BYTE PTR [edx+0x7453aacc],1
  416772:	jae    0x416757
  416774:	push   edx
  416775:	inc    eax
  416776:	(bad)  
  416777:	je     0x41675e
  416779:	stos   BYTE PTR es:[edi],al
  41677a:	and    DWORD PTR [eax-0x1b],eax
  41677d:	ss in  eax,0xfe
  416780:	adc    bh,BYTE PTR [eax+ecx*8]
  416783:	jns    0x41671c
  416785:	ins    DWORD PTR es:[edi],dx
  416786:	jne    0x41674e
  416788:	and    eax,0x652bbcb2
  41678d:	imul   ebp,DWORD PTR [ecx],0x34
  416790:	stos   DWORD PTR es:[edi],eax
  416791:	push   esp
  416792:	jb     0x41680f
  416794:	aad    0x3f
  416796:	push   ds
  416797:	in     eax,0x2c
  416799:	into   
  41679a:	ja     0x41680d
  41679c:	out    0x9b,eax
  41679e:	mov    cl,0x32
  4167a0:	sub    DWORD PTR [edi-0x564f3d1],edx
  4167a6:	mov    esp,0xd8cac9e2
  4167ab:	mov    ecx,0xde10de4f
  4167b0:	cwde   
  4167b1:	adc    BYTE PTR [ebp-0x2b547e75],ch
  4167b7:	jmp    0xe751:0xe0f82ce2
  4167be:	add    DWORD PTR [edi],ebx
  4167c0:	cmp    ebx,DWORD PTR [esi]
  4167c2:	in     eax,dx
  4167c3:	jmp    edi
  4167c5:	jge    0x416775
  4167c7:	int3   
  4167c8:	lahf   
  4167c9:	scas   al,BYTE PTR es:[edi]
  4167ca:	and    eax,0x16fb58be
  4167cf:	cmp    eax,0x97bd7176
  4167d4:	les    edi,FWORD PTR [edx+0x6163b9f5]
  4167da:	push   0x56484493
  4167df:	ror    DWORD PTR [eax+0x7e],cl
  4167e2:	push   ds
  4167e3:	push   ds
  4167e4:	and    eax,0xb8ccfb32
  4167e9:	nop
  4167ea:	loop   0x416852
  4167ec:	(bad)
  4167ef:	in     al,0x40
  4167f1:	sahf   
  4167f2:	mov    bl,0x1
  4167f4:	sti    
  4167f5:	xor    al,0x6f
  4167f7:	mov    ds:0xae76c638,eax
  4167fc:	call   0x3d54:0x2536c99
  416803:	pop    edx
  416804:	adc    eax,0xc5a0ad2d
  416809:	pop    edx
  41680a:	bound  ecx,QWORD PTR [eax+0x4a4ff298]
  416810:	call   0x448fa1d2
  416815:	fsubrp st(7),st
  416817:	jno    0x416814
  416819:	ret    0x8748
  41681c:	popa   
  41681d:	test   BYTE PTR [edi-0x2],ch
  416820:	adc    edx,DWORD PTR [eax-0x16]
  416823:	mov    ds:0x60f7c21e,al
  416828:	mov    dh,0x79
  41682a:	mov    dh,BYTE PTR [ecx]
  41682c:	icebp  
  41682d:	pop    edx
  41682e:	xor    dh,BYTE PTR [eax+ecx*8]
  416831:	pop    cx
  416833:	or     BYTE PTR [edi+eiz*8+0x76],bh
  416837:	add    ebp,DWORD PTR [ecx]
  416839:	aas    
  41683a:	rol    BYTE PTR ds:0x79e18f3,1
  416840:	sbb    DWORD PTR [ebx+ebp*8+0x2bdbf63c],esi
  416847:	xchg   ebp,eax
  416848:	jnp    0x4168a7
  41684a:	fsubr  st(5),st
  41684c:	mov    cl,0x4a
  41684e:	dec    ebp
  41684f:	into   
  416850:	push   edi
  416851:	call   0xff401470
  416856:	jp     0x41688f
  416858:	jle    0x4167ef
  41685a:	mov    WORD PTR [ebp+0x51],?
  41685d:	dec    esp
  41685e:	add    eax,0xa0a60890
  416863:	(bad)  
  416865:	jecxz  0x41688f
  416867:	pmuludq mm0,mm6
  41686a:	shl    cl,cl
  41686c:	push   esi
  41686d:	sub    eax,0xe54c521
  416872:	mov    ecx,0x2b1c9cfe
  416877:	xor    ecx,DWORD PTR [esp+ecx*4]
  41687a:	fadd   st(6),st
  41687c:	mov    fs,WORD PTR [esi]
  41687e:	xor    esi,DWORD PTR [edi-0x5e]
  416881:	loope  0x416835
  416883:	mov    DWORD PTR [eax+0x6c12d180],eax
  416889:	jne    0x41688a
  41688b:	push   edx
  41688c:	adc    eax,ebx
  41688e:	call   0xab6a:0xea93986e
  416895:	pop    esp
  416896:	xlat   BYTE PTR ds:[ebx]
  416897:	add    edx,DWORD PTR [ebp+0xc]
  41689a:	push   0xffffffe4
  41689c:	retf   0x8d65
  41689f:	imul   ecx,DWORD PTR [esi-0x4baf1991],0x56
  4168a6:	retf   
  4168a7:	mov    ch,0x51
  4168a9:	nop
  4168aa:	mov    bh,0xbc
  4168ac:	xchg   esi,eax
  4168ad:	dec    eax
  4168ae:	adc    al,0x4c
  4168b0:	dec    ecx
  4168b1:	leave  
  4168b2:	pushf  
  4168b3:	inc    eax
  4168b4:	shl    BYTE PTR [esi],0xe5
  4168b7:	fadd   DWORD PTR [ebx+0x29]
  4168ba:	inc    eax
  4168bb:	jbe    0x4168f5
  4168bd:	int    0x4f
  4168bf:	dec    esp
  4168c0:	mov    eax,edx
  4168c2:	xchg   ecx,eax
  4168c3:	and    edx,edi
  4168c5:	jne    0x416945
  4168c7:	scas   al,BYTE PTR es:[edi]
  4168c8:	stos   DWORD PTR es:[edi],eax
  4168c9:	xchg   edx,eax
  4168ca:	sub    dl,BYTE PTR [edx]
  4168cc:	push   ebx
  4168cd:	xchg   ecx,eax
  4168ce:	mov    ds,WORD PTR [ebp-0x30]
  4168d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168d2:	(bad)  
  4168d3:	les    esi,FWORD PTR [ebx+0x35]
  4168d6:	inc    edi
  4168d7:	and    al,cl
  4168d9:	push   eax
  4168da:	je     0x4168ae
  4168dc:	mov    esp,0xab41715d
  4168e1:	jecxz  0x4168f8
  4168e3:	pop    eax
  4168e4:	mov    ds:0xfe63e205,al
  4168e9:	(bad)  
  4168ea:	in     eax,0xa
  4168ec:	fisttp WORD PTR [esi]
  4168ee:	popf   
  4168ef:	loopne 0x41691d
  4168f1:	shr    BYTE PTR [edx+ebp*2],cl
  4168f4:	jge    0x416888
  4168f6:	leave  
  4168f7:	add    BYTE PTR [esi+0x6c093e60],cl
  4168fd:	shl    BYTE PTR es:[edx+esi*2+0x6040ca93],0x33
  416906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416907:	fs dec esp
  416909:	cs cwde 
  41690b:	or     dh,ch
  41690d:	test   DWORD PTR [esi],ecx
  41690f:	add    dh,BYTE PTR [edi-0x7a7ce211]
  416915:	lods   eax,DWORD PTR ds:[esi]
  416916:	push   ebp
  416917:	jg     0x416923
  416919:	sbb    ecx,DWORD PTR [ebx+0x5c2348be]
  41691f:	call   0xeef7c3a6
  416924:	push   ecx
  416925:	sti    
  416926:	xor    BYTE PTR [esi-0x59],al
  416929:	xchg   esi,eax
  41692a:	mov    WORD PTR [ebx+0x2a],fs
  41692d:	pop    eax
  41692e:	pop    ss
  41692f:	xor    ecx,DWORD PTR [ebx]
  416931:	cdq    
  416932:	and    edx,ebx
  416934:	dec    ecx
  416935:	scas   eax,DWORD PTR es:[edi]
  416936:	or     BYTE PTR [edx+esi*8-0x38],ah
  41693a:	icebp  
  41693b:	fistp  WORD PTR [ebp+0x16267bfd]
  416941:	and    bl,al
  416943:	mov    eax,ds:0xd55a11b6
  416948:	mov    dl,0xb1
  41694a:	jbe    0x4169c7
  41694c:	xor    DWORD PTR [eax-0x9],esi
  41694f:	push   edi
  416950:	xchg   DWORD PTR [edx+0x56f9b8e2],ecx
  416956:	push   ds
  416957:	(bad)  [ebp+0x30]
  41695a:	retf   0x311d
  41695d:	inc    ebx
  41695e:	mov    ebp,0x87d5664
  416963:	adc    edi,DWORD PTR [eax-0x25]
  416966:	mov    ebx,0xfeb9389d
  41696b:	jg     0x416944
  41696d:	fst    st(5)
  41696f:	icebp  
  416970:	call   0x7e9f:0xec304feb
  416977:	out    0xee,al
  416979:	test   DWORD PTR [edi-0x5d8fc54a],0xf2ff1796
  416983:	mov    ebx,0x75ef9274
  416988:	(bad)  
  416989:	enter  0x74cb,0xec
  41698d:	jmp    0xcd12:0x1e89718d
  416994:	stc    
  416995:	adc    al,0xc9
  416998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416999:	call   0x6b2c:0xd050f594
  4169a0:	(bad)
  4169a5:	push   esi
  4169a6:	dec    edi
  4169a7:	jmp    0xcd3c:0x476d5ad2
  4169ae:	call   0xc9ed:0x4fa64ebc
  4169b5:	mov    esi,0x1cbe3be2
  4169ba:	or     DWORD PTR [ecx],esi
  4169bc:	push   cs
  4169bd:	sahf   
  4169be:	lea    edx,[edx+0x310ab0b]
  4169c4:	or     eax,0x81bb1c5
  4169c9:	fldenv [esi-0x421113d8]
  4169cf:	push   edi
  4169d0:	mov    edi,ds
  4169d2:	inc    eax
  4169d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d5:	repnz add eax,0xd33fd446
  4169db:	test   eax,0x8263003b
  4169e0:	and    esi,eax
  4169e2:	xchg   edi,eax
  4169e3:	mov    al,0x28
  4169e5:	xchg   ebx,eax
  4169e6:	pop    ecx
  4169e7:	into   
  4169e8:	jp     0x416971
  4169ea:	add    DWORD PTR [ecx],eax
  4169ec:	xchg   ebp,eax
  4169ed:	cmc    
  4169ee:	loope  0x416a5c
  4169f0:	sub    ch,BYTE PTR [eax]
  4169f2:	push   0xa32fac4d
  4169f7:	hlt    
  4169f8:	pop    edi
  4169f9:	sar    BYTE PTR [eax+0xe256b3e],0x46
  416a00:	cs in  al,0x45
  416a03:	mov    ebp,0xe9ad71d8
  416a08:	sahf   
  416a09:	cmp    eax,0x8ffe7acf
  416a0e:	inc    esi
  416a0f:	and    BYTE PTR [ebx-0x10],ah
  416a12:	getsec 
  416a14:	(bad)  
  416a15:	xchg   esp,eax
  416a16:	jmp    0x7780:0xab0d6c07
  416a1d:	sub    esi,ecx
  416a1f:	adc    esi,edi
  416a21:	xchg   edi,eax
  416a22:	add    esi,DWORD PTR ds:0xc13efe7e
  416a28:	mov    al,0x1c
  416a2a:	mov    ebx,ebp
  416a2c:	leave  
  416a2d:	sub    al,0xb7
  416a2f:	ror    BYTE PTR [esi],0x4c
  416a32:	mov    WORD PTR [edx+esi*4-0x4b37472e],cs
  416a39:	sub    esp,DWORD PTR [ecx]
  416a3b:	(bad)  
  416a3c:	lea    eax,[ecx+eiz*4+0x5e]
  416a40:	adc    eax,0xafce73ae
  416a45:	xchg   ecx,eax
  416a46:	xor    eax,0xc7c3b4fa
  416a4b:	xchg   ecx,eax
  416a4c:	std    
  416a4d:	mov    ds:0x262c5b76,al
  416a52:	inc    eax
  416a53:	repz std 
  416a55:	out    0xff,eax
  416a57:	rol    DWORD PTR ss:[ebx*1-0x7d810910],cl
  416a5f:	scas   al,BYTE PTR es:[edi]
  416a60:	mov    esp,0x39f503b4
  416a65:	aaa    
  416a66:	(bad)  
  416a67:	pop    eax
  416a68:	test   al,0x68
  416a6a:	dec    esp
  416a6b:	inc    ebx
  416a6c:	shl    ecx,cl
  416a6e:	adc    eax,0x3f86a95c
  416a73:	fmul   DWORD PTR [esi-0x8]
  416a76:	inc    ebp
  416a77:	cmp    bh,BYTE PTR [ecx+0x50]
  416a7a:	mov    edx,0x9586e584
  416a7f:	repz or esi,DWORD PTR [edi+0x4e]
  416a83:	outs   dx,DWORD PTR ds:[esi]
  416a84:	push   eax
  416a85:	and    dh,ch
  416a87:	mov    al,0x6b
  416a89:	dec    ebx
  416a8a:	int    0x4e
  416a8c:	pop    ss
  416a8d:	adc    al,0xf2
  416a8f:	cmp    eax,0x6fde0cd3
  416a94:	and    cl,BYTE PTR [edx-0x1fc38c64]
  416a9a:	dec    esp
  416a9b:	xchg   ecx,eax
  416a9c:	jl     0x416a1f
  416a9e:	cli    
  416a9f:	imul   BYTE PTR [edx-0x49]
  416aa2:	retf   0xfd3e
  416aa5:	outs   dx,DWORD PTR ds:[esi]
  416aa6:	rcl    DWORD PTR [edx],1
  416aa8:	and    al,0x9a
  416aaa:	jecxz  0x416b0e
  416aac:	loopne 0x416a68
  416aae:	retf   
  416aaf:	ret    
  416ab0:	mov    ds:0x2fa38bd0,eax
  416ab5:	pop    es
  416ab6:	push   ebx
  416ab7:	popa   
  416ab8:	adc    eax,0x75c2ee63
  416abd:	enter  0xba5c,0xb5
  416ac1:	inc    edx
  416ac2:	mov    DWORD PTR ds:0x396662c5,esp
  416ac8:	pop    edi
  416ac9:	sbb    al,0xc9
  416acb:	pop    ebx
  416acc:	jmp    0xe765:0x97645c07
  416ad3:	icebp  
  416ad4:	das    
  416ad5:	cld    
  416ad6:	iret   
  416ad7:	ss in  al,dx
  416ad9:	mov    bh,0xae
  416adb:	cli    
  416adc:	mov    ecx,0xba4232ae
  416ae1:	add    ch,BYTE PTR [ebx-0x4a]
  416ae4:	das    
  416ae5:	repnz loop 0x416ac9
  416ae8:	xchg   edi,eax
  416ae9:	jbe    0x416adc
  416aeb:	sbb    al,0x6f
  416aed:	sbb    al,BYTE PTR [ebx]
  416aef:	mov    ds:0xa95960c7,al
  416af4:	and    edx,eax
  416af6:	rol    DWORD PTR [ebx-0x6c10f6ce],1
  416afc:	fimul  DWORD PTR [esi]
  416afe:	jns    0x416acb
  416b00:	xchg   esi,eax
  416b01:	retf   0x5c6d
  416b04:	das    
  416b05:	mov    ebp,DWORD PTR [esi+0x8]
  416b08:	dec    edi
  416b09:	xchg   esp,eax
  416b0a:	inc    eax
  416b0b:	mov    esi,0x3837b677
  416b10:	daa    
  416b11:	pop    ebx
  416b12:	mul    DWORD PTR ds:0xc5576618
  416b18:	sbb    eax,0x30d78fb2
  416b1d:	push   cs
  416b1e:	rcl    DWORD PTR [edx-0x7],1
  416b21:	lock outs dx,DWORD PTR ds:[esi]
  416b23:	shl    BYTE PTR [edi-0x15009df],1
  416b29:	jo     0x416b83
  416b2b:	test   al,0x93
  416b2d:	mov    DWORD PTR ds:0xba30e2c,ebx
  416b33:	lahf   
  416b34:	add    eax,0x9b659129
  416b39:	out    dx,eax
  416b3a:	pop    eax
  416b3b:	mov    eax,0x638414d7
  416b40:	add    BYTE PTR [edi],bh
  416b42:	sub    DWORD PTR [eax+0x5c624dc6],ebx
  416b48:	jne    0x416ad3
  416b4a:	mov    eax,0x839b992c
  416b4f:	xor    al,0x61
  416b51:	push   ebx
  416b52:	add    BYTE PTR [eax],dh
  416b54:	or     edx,0xffffffb5
  416b57:	ret    
  416b58:	int    0xca
  416b5a:	sub    DWORD PTR [edi],esi
  416b5c:	shl    BYTE PTR [edx+0x1b6a22c2],1
  416b62:	add    dh,BYTE PTR [ebp+0x3c]
  416b65:	fcom   QWORD PTR [ecx+0x62]
  416b68:	sbb    al,0x79
  416b6a:	mov    WORD PTR [eax],es
  416b6c:	push   es
  416b6d:	adc    DWORD PTR [ecx],0xffffffb7
  416b70:	scas   eax,DWORD PTR es:[edi]
  416b71:	jno    0x416b33
  416b73:	cmp    eax,0xdeda060e
  416b78:	sub    bl,cl
  416b7a:	cld    
  416b7b:	cmp    ebp,DWORD PTR [ebx]
  416b7d:	push   edx
  416b7e:	(bad)  
  416b7f:	stos   BYTE PTR es:[edi],al
  416b80:	clc    
  416b81:	je     0x416b42
  416b83:	(bad)  
  416b84:	fs push edi
  416b86:	js     0x416bc2
  416b88:	push   0x29
  416b8a:	out    dx,eax
  416b8b:	fild   WORD PTR [esi+0x30]
  416b8e:	push   eax
  416b8f:	adc    bh,ch
  416b91:	xor    eax,0x6fa476bb
  416b96:	xchg   ebp,eax
  416b97:	dec    ebp
  416b98:	xchg   DWORD PTR [ebp+0x6],ecx
  416b9b:	xor    BYTE PTR [ecx-0x47721ee2],dh
  416ba1:	retf   
  416ba2:	sbb    ch,BYTE PTR [esi-0x20]
  416ba5:	rol    DWORD PTR [eax-0x10],1
  416ba8:	xor    ecx,edi
  416baa:	add    ebp,DWORD PTR [ebp-0x6327aa98]
  416bb0:	sub    cl,ah
  416bb2:	push   ds
  416bb3:	cwde   
  416bb4:	out    0x9c,eax
  416bb6:	int3   
  416bb7:	popf   
  416bb8:	cmp    ebx,DWORD PTR [edi+0x12]
  416bbb:	sbb    dl,dl
  416bbd:	aad    0x0
  416bbf:	out    dx,eax
  416bc0:	push   edx
  416bc1:	aaa    
  416bc2:	cmp    esi,ebx
  416bc4:	sbb    eax,DWORD PTR [ecx+0x3d]
  416bc7:	adc    al,0x8
  416bc9:	jo     0x416b58
  416bcb:	fwait
  416bcc:	dec    edx
  416bcd:	fcmovnbe st,st(5)
  416bcf:	inc    ebp
  416bd0:	xchg   ebx,eax
  416bd1:	jo     0x416bc0
  416bd3:	bound  esp,QWORD PTR [edi]
  416bd5:	xchg   edi,ecx
  416bd7:	xor    eax,0x25f5e1e8
  416bdc:	lds    edi,FWORD PTR [ecx-0x6e]
  416bdf:	(bad)  
  416be0:	jae    0x416bd3
  416be2:	fcomip st,st(3)
  416be4:	mov    edx,0xe9432855
  416be9:	cmc    
  416bea:	in     eax,0x7f
  416bec:	mov    ds:0xd3d47608,eax
  416bf1:	call   0x1f061f75
  416bf6:	pop    ecx
  416bf7:	push   ds
  416bf8:	mov    eax,0xa25c721b
  416bfd:	inc    ecx
  416bfe:	dec    esi
  416bff:	cmp    ah,0x87
  416c02:	jge    0x416c73
  416c04:	fdivr  DWORD PTR [edi+edx*8]
  416c07:	mov    edx,edi
  416c09:	mov    DWORD PTR [edx-0x9],eax
  416c0c:	hlt    
  416c0d:	out    dx,eax
  416c0e:	cwde   
  416c0f:	xchg   edi,eax
  416c10:	pop    ebp
  416c11:	push   esp
  416c12:	jbe    0x416c35
  416c14:	ret    0x6f0e
  416c17:	in     al,0x66
  416c19:	std    
  416c1a:	mov    WORD PTR [eax-0x71],fs
  416c1d:	xchg   edx,eax
  416c1e:	xchg   edx,eax
  416c1f:	push   ds
  416c20:	daa    
  416c21:	add    ebp,DWORD PTR [edx]
  416c23:	loop   0x416c26
  416c25:	sti    
  416c26:	cmp    esp,DWORD PTR [edx]
  416c28:	aad    0xa
  416c2a:	xor    dl,BYTE PTR ds:0x746f7b21
  416c30:	sar    BYTE PTR [ebx],1
  416c32:	push   esi
  416c33:	imul   DWORD PTR [ebx+ecx*8]
  416c36:	adc    eax,0xe963003b
  416c3b:	jg     0x416c0e
  416c3d:	mov    al,0x1a
  416c3f:	stos   DWORD PTR es:[edi],eax
  416c40:	sub    ebx,DWORD PTR [ebp+0x50]
  416c43:	clc    
  416c44:	push   ecx
  416c45:	out    0xe5,eax
  416c47:	mov    bh,0x7e
  416c49:	xor    edi,DWORD PTR [esp+edi*8-0x3ec6b625]
  416c50:	mov    dh,BYTE PTR [edi]
  416c52:	jmp    0x6cd4024d
  416c57:	dec    edi
  416c58:	xchg   ebp,eax
  416c59:	bound  esp,QWORD PTR [edx+eax*2-0x5]
  416c5d:	and    ecx,DWORD PTR [ecx]
  416c5f:	aam    0xad
  416c61:	xor    ebp,esi
  416c63:	dec    ecx
  416c64:	mov    DWORD PTR [esi],esp
  416c66:	fistp  DWORD PTR [eax-0x2b]
  416c69:	push   ss
  416c6a:	fsub   DWORD PTR [ebx]
  416c6c:	loopne 0x416c68
  416c6e:	es xchg edi,eax
  416c70:	add    BYTE PTR [ebx+0x48f71927],bl
  416c76:	clc    
  416c77:	ret    0xd8a
  416c7a:	inc    esp
  416c7b:	jl     0x416ca5
  416c7d:	sbb    DWORD PTR [ecx-0x34],esi
  416c80:	hlt    
  416c81:	fist   DWORD PTR [ebp+0x77]
  416c84:	sub    eax,DWORD PTR [eax-0x55]
  416c87:	mov    al,ds:0x18ff0501
  416c8c:	add    al,0x66
  416c8e:	iret   
  416c8f:	repz daa 
  416c91:	arpl   WORD PTR [ecx-0x3a19e32d],si
  416c97:	popa   
  416c98:	mov    ds:0xdfed550d,eax
  416c9d:	and    esi,DWORD PTR [ebx+ecx*4]
  416ca0:	inc    esp
  416ca1:	fmul   DWORD PTR [edx]
  416ca3:	(bad)  
  416ca4:	fld    TBYTE PTR [edx+0x2b]
  416ca7:	push   esi
  416ca8:	outs   dx,DWORD PTR ds:[esi]
  416ca9:	call   0x940f9d5e
  416cae:	xchg   edi,eax
  416caf:	inc    ebp
  416cb0:	mov    edi,0xac17ee5d
  416cb5:	sbb    bh,BYTE PTR [ecx-0xf2393ce]
  416cbb:	or     DWORD PTR [edx-0x11e33ad4],esi
  416cc1:	outs   dx,BYTE PTR ds:[esi]
  416cc2:	mov    BYTE PTR [ebx+0x32695909],bl
  416cc8:	xchg   edi,eax
  416cc9:	dec    edx
  416cca:	cmc    
  416ccb:	pop    esi
  416ccc:	and    BYTE PTR [eax+0x70],0xcc
  416cd0:	xor    bl,dl
  416cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd3:	test   eax,0x420ffa0
  416cd8:	or     ah,bl
  416cda:	aas    
  416cdb:	cmp    DWORD PTR [ecx],esi
  416cdd:	stos   BYTE PTR es:[edi],al
  416cde:	or     edx,DWORD PTR [ebp-0x4c]
  416ce1:	jmp    0x416cfd
  416ce3:	mov    ch,0x81
  416ce5:	xor    edx,eax
  416ce7:	add    al,0xb0
  416ce9:	scas   eax,DWORD PTR es:[edi]
  416cea:	dec    ebp
  416ceb:	cmp    eax,0xa6970fc6
  416cf0:	jne    0x416c82
  416cf2:	test   DWORD PTR [edx-0x3ec477b6],edx
  416cf8:	push   ss
  416cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cfa:	scas   eax,DWORD PTR es:[edi]
  416cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cfc:	neg    BYTE PTR ds:0xa0ff4389
  416d02:	mov    WORD PTR [esi],es
  416d04:	adc    al,0xeb
  416d06:	std    
  416d07:	mov    edi,eax
  416d09:	xchg   BYTE PTR ds:0x4f25b52,ch
  416d0f:	xor    ebx,DWORD PTR [esi]
  416d11:	out    dx,al
  416d12:	fstp   TBYTE PTR [ebx]
  416d14:	xor    eax,esi
  416d16:	jnp    0x416d58
  416d18:	add    ebp,DWORD PTR [ebx-0x29f8b906]
  416d1e:	sub    BYTE PTR [esi-0x65],ch
  416d21:	je     0x416d1e
  416d23:	(bad)  
  416d25:	mov    bh,0xa5
  416d27:	adc    DWORD PTR [eax-0x56],edx
  416d2a:	pop    ss
  416d2b:	sahf   
  416d2c:	xchg   BYTE PTR [eax],bh
  416d2e:	pop    edi
  416d2f:	cmc    
  416d30:	add    eax,0xab86c9ae
  416d35:	xchg   esi,eax
  416d36:	clc    
  416d37:	lea    ebx,[ecx+0x76b29697]
  416d3d:	mov    dh,0xac
  416d3f:	xor    BYTE PTR ss:[ebp-0xf],ah
  416d43:	cwde   
  416d44:	jecxz  0x416d3b
  416d46:	mov    dl,0x1e
  416d48:	and    BYTE PTR [edi-0x3],al
  416d4b:	cmc    
  416d4c:	mov    ds:0x8636bd39,eax
  416d51:	xor    al,0x79
  416d53:	cmp    ch,bh
  416d55:	fisubr WORD PTR [edi+0x1eb0453c]
  416d5b:	mov    ah,0x52
  416d5d:	fcmovb st,st(0)
  416d5f:	enter  0x4c48,0xc9
  416d63:	pop    esi
  416d64:	ins    BYTE PTR es:[edi],dx
  416d65:	test   al,ah
  416d67:	in     eax,0xae
  416d69:	enter  0xc614,0x58
  416d6d:	clc    
  416d6e:	ds sbb al,0xe0
  416d71:	and    ecx,esi
  416d73:	loopne 0x416dac
  416d75:	push   edx
  416d76:	fwait
  416d77:	ret    
  416d78:	adc    bl,BYTE PTR [edx+0x5c82ca9]
  416d7e:	arpl   cx,sp
  416d80:	xor    eax,0xf181541
  416d85:	add    BYTE PTR ds:0x81191c80,0xeb
  416d8c:	call   0xa33e:0x42bf63a
  416d93:	xor    ebp,DWORD PTR [ecx+0x72dafef9]
  416d99:	lds    esp,FWORD PTR [edi-0x3d]
  416d9c:	imul   esp,DWORD PTR [ecx],0x2264231f
  416da2:	int3   
  416da3:	mov    dh,0x4a
  416da5:	test   WORD PTR [ecx+eax*4-0x4a],dx
  416daa:	les    ebx,FWORD PTR [edx+0x599b1b87]
  416db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416db1:	dec    edx
  416db2:	imul   edi,DWORD PTR [ebx-0x15],0xffffffd3
  416db6:	xchg   BYTE PTR [esi+0x240cc73e],cl
  416dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dbd:	pop    ss
  416dbe:	cmp    cl,cl
  416dc0:	lods   al,BYTE PTR ds:[esi]
  416dc1:	pop    esp
  416dc2:	loop   0x416d5a
  416dc4:	shrd   DWORD PTR [ebx-0xe],edi,cl
  416dc8:	popf   
  416dc9:	repnz mov ecx,0x46b96dac
  416dcf:	push   edi
  416dd0:	aad    0x2b
  416dd2:	sub    DWORD PTR fs:[ebp+edx*4+0x4a],ebx
  416dd7:	mov    cs,WORD PTR [eax]
  416dd9:	test   DWORD PTR [ebp-0x440a9177],ecx
  416ddf:	jmp    0x416d7b
  416de1:	js     0x416e1a
  416de3:	pop    edi
  416de4:	pop    esi
  416de5:	jmp    0x106b7834
  416dea:	sahf   
  416deb:	inc    esp
  416dec:	sub    esi,DWORD PTR [eax-0x48]
  416def:	bound  ebp,QWORD PTR [ebx]
  416df1:	daa    
  416df2:	push   ebx
  416df3:	add    eax,0xd33d440b
  416df8:	mov    DWORD PTR [ebx-0x6da2c3c],ecx
  416dfe:	fs test al,0xa8
  416e01:	rcr    dh,0x2
  416e04:	stos   BYTE PTR es:[edi],al
  416e05:	jmp    0x416d95
  416e07:	inc    esi
  416e08:	outs   dx,BYTE PTR ds:[esi]
  416e09:	dec    edi
  416e0a:	mov    ds,WORD PTR [ebx-0x70ec42c1]
  416e10:	or     bl,BYTE PTR [eax-0x3641ec6f]
  416e16:	add    DWORD PTR [esi-0x7359be15],edx
  416e1c:	add    edx,0xbb6ad83a
  416e22:	in     eax,0xd4
  416e24:	dec    esi
  416e25:	ins    DWORD PTR es:[edi],dx
  416e26:	mov    esi,edx
  416e28:	aaa    
  416e29:	aaa    
  416e2a:	jg     0x416e9a
  416e2c:	aad    0x26
  416e2e:	push   ss
  416e2f:	cmp    DWORD PTR [ecx],eax
  416e31:	push   ds
  416e32:	push   ecx
  416e33:	add    BYTE PTR [edi-0x2f],dh
  416e36:	adc    BYTE PTR [ebp-0x3f817e20],bh
  416e3c:	test   al,0x22
  416e3e:	jg     0x416e87
  416e40:	adc    BYTE PTR [edi-0x4c],bh
  416e43:	ss test al,0x99
  416e46:	sbb    al,0xff
  416e48:	push   ebp
  416e49:	dec    ebp
  416e4a:	test   eax,0xa6adc281
  416e4f:	jae    0x416deb
  416e51:	inc    eax
  416e52:	push   0xffffff98
  416e54:	mov    ds,WORD PTR [ecx]
  416e56:	jge    0x416e09
  416e58:	xchg   edx,eax
  416e59:	xor    esp,ecx
  416e5b:	arpl   WORD PTR [edx-0x4257f9b4],si
  416e61:	inc    edx
  416e62:	inc    ebx
  416e63:	mov    cs,WORD PTR [eax+0x1e]
  416e66:	std    
  416e67:	mov    DWORD PTR [ecx+0x6add8259],eax
  416e6d:	aad    0x6f
  416e6f:	not    esi
  416e71:	fsincos 
  416e73:	test   eax,0x44e4454c
  416e78:	mov    dh,0x7b
  416e7a:	pop    edi
  416e7b:	cld    
  416e7c:	ret    0x5631
  416e7f:	jb     0x416ea7
  416e81:	add    al,0x3a
  416e83:	out    dx,al
  416e84:	aam    0x7d
  416e86:	lea    esi,[esi-0x5ef9a2ef]
  416e8c:	stos   DWORD PTR es:[edi],eax
  416e8d:	jmp    0x416ea1
  416e8f:	fmulp  st(4),st
  416e91:	sti    
  416e92:	adc    eax,0x8f8e807
  416e97:	adc    eax,0x1f7eeeae
  416e9c:	stos   DWORD PTR es:[edi],eax
  416e9d:	xchg   edi,eax
  416e9e:	(bad)  
  416ea0:	das    
  416ea1:	xlat   BYTE PTR ds:[ebx]
  416ea2:	(bad)  
  416ea4:	cmp    al,0xed
  416ea6:	in     eax,0x9
  416ea8:	ret    
  416ea9:	call   0x521208e
  416eae:	mov    bl,0xee
  416eb0:	mov    dl,0xea
  416eb2:	cmp    DWORD PTR [edx],ebx
  416eb4:	and    al,0x1b
  416eb6:	xchg   edx,eax
  416eb7:	ins    BYTE PTR es:[edi],dx
  416eb8:	xor    al,0x71
  416eba:	fcom   st(0)
  416ebc:	push   ds
  416ebd:	enter  0x6491,0xab
  416ec1:	xor    ch,BYTE PTR [ebp-0x6d794540]
  416ec7:	xor    eax,0xd77956e7
  416ecc:	push   esi
  416ecd:	loopne 0x416e93
  416ecf:	xor    DWORD PTR [edx],esi
  416ed1:	sub    BYTE PTR [eax-0x52dbe21e],dl
  416ed7:	xlat   BYTE PTR ds:[ebx]
  416ed8:	scas   eax,DWORD PTR es:[edi]
  416ed9:	popa   
  416eda:	cmp    dl,BYTE PTR [ebp+0x777fa8a]
  416ee0:	fs mov dl,0x74
  416ee3:	(bad)  
  416ee5:	jmp    0x416e76
  416ee7:	add    eax,0xa52723c8
  416eec:	xchg   esi,eax
  416eed:	xchg   ebp,eax
  416eee:	inc    ebp
  416eef:	push   0xc71e174a
  416ef4:	pop    esi
  416ef5:	cld    
  416ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef7:	outs   dx,DWORD PTR ds:[esi]
  416ef8:	jmp    0x9f9e7ec0
  416efd:	push   ebx
  416efe:	and    al,0x83
  416f00:	inc    eax
  416f01:	cmp    al,0xb7
  416f03:	addr16 aam 0xc9
  416f06:	popf   
  416f07:	sub    DWORD PTR [ebp+ecx*8+0x6e],ebp
  416f0b:	add    BYTE PTR [esi],bh
  416f0d:	sub    eax,0x14a36d64
  416f12:	(bad)  
  416f13:	fadd   DWORD PTR [ecx+0x569898c3]
  416f19:	mov    ch,0x43
  416f1b:	xor    ch,BYTE PTR [ecx-0x24]
  416f1e:	push   edx
  416f1f:	repz aaa 
  416f21:	xchg   esp,eax
  416f22:	inc    eax
  416f23:	xchg   ecx,eax
  416f24:	sub    edi,DWORD PTR [ecx-0x67]
  416f27:	mov    esp,0xbaebe400
  416f2c:	ror    DWORD PTR [ebx],1
  416f2e:	sbb    DWORD PTR [ecx+ecx*2-0x41],edi
  416f32:	push   ebp
  416f33:	aas    
  416f34:	sbb    bl,dh
  416f36:	pop    es
  416f37:	loopne 0x416f2d
  416f39:	sub    BYTE PTR [edi+0x720aebef],ah
  416f3f:	gs das 
  416f41:	imul   eax,DWORD PTR [esi+ebp*4-0x10],0xbae80242
  416f49:	mov    WORD PTR [edx+0x5c04de86],ss
  416f4f:	and    eax,edi
  416f51:	cmp    dh,BYTE PTR [eax]
  416f53:	test   DWORD PTR [ebp+0x36],edi
  416f56:	add    al,0xe6
  416f58:	push   edx
  416f59:	push   ebx
  416f5a:	fdiv   DWORD PTR [ebx-0x50]
  416f5d:	push   esp
  416f5e:	mov    ebp,0x6aca17c3
  416f63:	push   0x23
  416f65:	mov    edx,0xa222ff88
  416f6a:	loopne 0x416f00
  416f6c:	ret    0xc4b6
  416f6f:	mov    ah,0xa3
  416f71:	out    0xa6,eax
  416f73:	mov    WORD PTR [ebp+0x46],es
  416f76:	inc    esp
  416f77:	mov    DWORD PTR [ebp+ecx*1+0x3f1d77af],esp
  416f7e:	lea    esi,[esi+0x67]
  416f81:	xchg   ebx,eax
  416f82:	mov    DWORD PTR [edi],0x3798a87c
  416f88:	mov    dh,0x17
  416f8a:	dec    esp
  416f8b:	sub    al,0xa5
  416f8d:	nop
  416f8e:	sbb    ch,dl
  416f90:	pop    edx
  416f91:	out    0x2,al
  416f93:	ins    BYTE PTR es:[edi],dx
  416f94:	fidiv  WORD PTR [ebx]
  416f96:	or     edx,ebp
  416f98:	add    eax,0x53c9fcc8
  416f9d:	sub    edx,DWORD PTR [eax-0x7a]
  416fa0:	fsub   DWORD PTR ds:0x40f459ec
  416fa6:	je     0x416f34
  416fa8:	and    al,0x18
  416faa:	cs push eax
  416fac:	cwde   
  416fad:	(bad)  
  416fae:	mov    eax,0x531ce7e6
  416fb3:	jb     0x416f6a
  416fb5:	les    edi,FWORD PTR [eax-0x16]
  416fb8:	(bad)  
  416fb9:	lods   eax,DWORD PTR gs:[esi]
  416fbb:	rcr    DWORD PTR [ebx-0x721b52bd],0x60
  416fc2:	mov    al,ds:0x2cede58c
  416fc7:	push   0xffffff8f
  416fc9:	outs   dx,DWORD PTR ds:[esi]
  416fca:	out    dx,eax
  416fcb:	pop    edi
  416fcc:	and    eax,0x2f652f9a
  416fd1:	in     al,0x98
  416fd3:	adc    eax,0xe91f3c56
  416fd8:	cmp    ecx,DWORD PTR [edi+0x30e41026]
  416fde:	mov    ch,0xdf
  416fe0:	push   edi
  416fe1:	adc    al,0xe6
  416fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fe4:	adc    esp,DWORD PTR ds:0x679c74e
  416fea:	or     eax,0x3283f589
  416fef:	aaa    
  416ff0:	std    
  416ff1:	out    dx,eax
  416ff2:	pop    ebp
  416ff3:	ret    0xbf0b
  416ff6:	add    eax,0xfbd29b14
  416ffb:	repz mov al,ds:0xdd39c7e9
  417001:	mov    cl,0xa8
  417003:	mov    DWORD PTR [esi-0x51],edx
  417006:	ds mov dl,0x4a
  417009:	jns    0x416f8e
  41700b:	jb     0x416fc0
  41700d:	sbb    BYTE PTR [eax+0x10],ch
  417010:	or     eax,0xa3159f7
  417015:	mov    al,0x83
  417017:	das    
  417018:	in     al,0xf9
  41701a:	dec    ebx
  41701b:	jle    0x416fed
  41701d:	mov    esi,0x4eb7e17a
  417022:	dec    esi
  417023:	fnsave [edx+0x6bedccdd]
  417029:	outs   dx,BYTE PTR ds:[esi]
  41702a:	rcl    bl,cl
  41702c:	xor    eax,0xf9f93435
  417031:	dec    edx
  417032:	rcl    eax,cl
  417034:	in     eax,0xd5
  417036:	xchg   edx,eax
  417037:	cmp    al,0x6a
  417039:	or     al,0xa9
  41703b:	adc    BYTE PTR [edx+0x47e0205e],bh
  417041:	test   DWORD PTR [ebp+0x17],edx
  417044:	test   BYTE PTR [ebp-0x43bc0b9d],ch
  41704a:	popf   
  41704b:	lods   eax,DWORD PTR ds:[esi]
  41704c:	push   0xd
  41704e:	aad    0x72
  417050:	adc    dh,bh
  417052:	in     eax,0x4f
  417054:	jg     0x416fd8
  417056:	in     eax,0xab
  417058:	or     eax,DWORD PTR [esi]
  41705a:	xor    esi,esi
  41705c:	push   cs
  41705d:	les    edi,FWORD PTR [eax-0x6c]
  417060:	push   0xfd823129
  417065:	in     eax,dx
  417066:	(bad)  
  417067:	fiadd  DWORD PTR [esi+0x5]
  41706a:	push   esp
  41706b:	lods   al,BYTE PTR ds:[esi]
  41706c:	adc    DWORD PTR [edi-0x40],esp
  41706f:	inc    edx
  417070:	mov    ch,0x7
  417072:	fsubr  QWORD PTR [ecx+0x38]
  417075:	adc    al,0xe
  417077:	sub    cl,BYTE PTR [edx]
  417079:	loop   0x417093
  41707b:	ret    0x1f62
  41707e:	into   
  41707f:	(bad)  
  417080:	push   eax
  417081:	push   ebx
  417082:	push   0xffffffb6
  417084:	jmp    0x67e5a30
  417089:	(bad)  
  41708a:	stc    
  41708b:	jnp    0x4170c6
  41708d:	inc    edi
  41708e:	xor    al,0xfe
  417090:	dec    esi
  417091:	ja     0x4170ff
  417093:	mov    cl,0x6d
  417095:	in     eax,dx
  417096:	test   eax,0xcd0f777f
  41709b:	adc    cl,BYTE PTR [ebp-0xa459a94]
  4170a1:	dec    edx
  4170a2:	mov    ds:0xfa0eefd8,eax
  4170a7:	jle    0x417127
  4170a9:	or     esp,eax
  4170ab:	(bad)  
  4170ac:	int    0x58
  4170ae:	push   ss
  4170af:	inc    esp
  4170b0:	sub    al,bl
  4170b2:	retf   0x3c53
  4170b5:	and    BYTE PTR [eax-0xe],ah
  4170b8:	adc    BYTE PTR [eax-0x32],dh
  4170bb:	sti    
  4170bc:	outs   dx,BYTE PTR ds:[esi]
  4170bd:	adc    al,BYTE PTR [edx]
  4170bf:	mov    al,0xb7
  4170c2:	xchg   ecx,eax
  4170c3:	xchg   edi,eax
  4170c4:	xor    edi,esp
  4170c6:	mov    edx,DWORD PTR [esi]
  4170c8:	shl    DWORD PTR [ebp+0x76],cl
  4170cb:	push   0xffffffd5
  4170cd:	and    eax,0x56e1a7fb
  4170d2:	add    ebx,DWORD PTR ds:0xe8f64cf7
  4170d8:	push   ss
  4170d9:	hlt    
  4170da:	and    esp,DWORD PTR [edi-0x71]
  4170dd:	bound  eax,QWORD PTR [edi+ebx*2]
  4170e0:	push   cs
  4170e1:	xchg   BYTE PTR [esi-0x72],cl
  4170e4:	dec    ebx
  4170e5:	jnp    0x4170ee
  4170e7:	push   es
  4170e8:	cli    
  4170e9:	hlt    
  4170ea:	pushf  
  4170eb:	add    bl,BYTE PTR [esi+0x73]
  4170ee:	popf   
  4170ef:	outs   dx,DWORD PTR ds:[esi]
  4170f0:	in     eax,dx
  4170f1:	sti    
  4170f2:	pop    edx
  4170f3:	mov    dh,0x10
  4170f5:	adc    ch,BYTE PTR [esi+0x34]
  4170f8:	lods   al,BYTE PTR ds:[esi]
  4170f9:	mov    ebp,0xf5aee129
  4170fe:	or     eax,0xc143057d
  417103:	cmp    al,0x3e
  417105:	lea    ebp,[ebx+0x3f]
  417108:	adc    al,0x43
  41710a:	jns    0x41709f
  41710c:	cmp    eax,0xebed8f3e
  417111:	xor    BYTE PTR [edi-0x49d0becc],0x87
  417118:	shr    dh,0xca
  41711b:	hlt    
  41711c:	aaa    
  41711d:	test   eax,0xb3f24010
  417122:	jns    0x417175
  417124:	or     DWORD PTR [edi],esp
  417126:	enter  0xec3e,0x59
  41712a:	sub    BYTE PTR [ebx],0xc6
  41712d:	push   0x5b03c5b
  417132:	std    
  417133:	or     BYTE PTR [ebx+0x4d7503b3],bh
  417139:	push   esp
  41713a:	inc    edi
  41713b:	xor    al,0xba
  41713d:	data16 jle 0x4171b0
  417140:	cli    
  417141:	mov    ch,0xb6
  417143:	mov    ah,BYTE PTR fs:[ecx+0x75]
  417147:	push   ebp
  417148:	push   ebx
  417149:	and    DWORD PTR [eax-0x591ec990],ecx
  41714f:	popf   
  417150:	pop    ds
  417151:	in     al,dx
  417152:	(bad)  
  417153:	dec    esp
  417154:	xor    DWORD PTR [eax+0x72],0xfed4f59
  41715b:	fsub   DWORD PTR [eax+0x14fe2c9f]
  417161:	fisttp DWORD PTR [esi]
  417163:	ins    DWORD PTR es:[edi],dx
  417164:	cmc    
  417165:	jg     0x417110
  417167:	cdq    
  417168:	dec    esi
  417169:	ss loope 0x41713e
  41716c:	push   ebp
  41716d:	adc    al,0x61
  41716f:	outs   dx,DWORD PTR ds:[esi]
  417170:	inc    ecx
  417171:	mov    BYTE PTR [eax],ah
  417173:	rcr    BYTE PTR [edi+0x4f],cl
  417176:	or     edx,ecx
  417178:	leave  
  417179:	add    dh,bl
  41717b:	xchg   BYTE PTR [eax+0x2aea57c2],cl
  417181:	fwait
  417182:	xchg   edx,eax
  417183:	pusha  
  417184:	es inc edx
  417186:	mov    ecx,0x1216f5f0
  41718b:	ins    DWORD PTR es:[edi],dx
  41718c:	push   cs
  41718d:	ja     0x4171c7
  41718f:	(bad)  
  417190:	inc    ebp
  417191:	stos   DWORD PTR es:[edi],eax
  417192:	ret    0xa7a2
  417195:	daa    
  417196:	int3   
  417197:	xor    eax,0xd4069b3b
  41719c:	fild   DWORD PTR [ebx-0x6facb96c]
  4171a2:	ins    BYTE PTR es:[edi],dx
  4171a3:	sub    dh,bl
  4171a5:	xchg   DWORD PTR [esi+edi*4],ecx
  4171a8:	mov    bl,0x25
  4171aa:	jmp    0x4d5b:0x94a8d5e7
  4171b1:	(bad)  
  4171b2:	xchg   esp,eax
  4171b3:	jecxz  0x417159
  4171b5:	mov    esi,0xedea9582
  4171ba:	fstp   QWORD PTR [eax-0x59f74d5]
  4171c0:	mov    ds:0x50b4652c,eax
  4171c5:	pop    edx
  4171c6:	mov    bl,0x68
  4171c8:	mov    dh,0xd2
  4171ca:	xchg   ebx,eax
  4171cb:	repnz (bad) 
  4171cd:	les    esi,FWORD PTR fs:[ebp+0x4d]
  4171d1:	xlat   BYTE PTR ds:[ebx]
  4171d2:	test   dl,ch
  4171d4:	dec    ebx
  4171d5:	mov    eax,0x5d4ae3a8
  4171da:	retf   0xff05
  4171dd:	hlt    
  4171de:	push   cs
  4171df:	inc    ebp
  4171e0:	adc    cl,BYTE PTR ds:0x9fc0c6df
  4171e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171e7:	xchg   esp,eax
  4171e8:	daa    
  4171e9:	adc    bl,BYTE PTR [edi]
  4171eb:	test   BYTE PTR [ebx-0x54],ch
  4171ee:	popf   
  4171ef:	sub    DWORD PTR ds:0xb2716839,ebp
  4171f5:	lods   eax,DWORD PTR ds:[esi]
  4171f6:	jl     0x417276
  4171f8:	jg     0x41726d
  4171fa:	neg    DWORD PTR ds:0x97fe3faa
  417200:	dec    esi
  417201:	das    
  417202:	xchg   ebp,eax
  417203:	xchg   ebx,eax
  417204:	test   DWORD PTR [edx],ebp
  417206:	ins    BYTE PTR es:[edi],dx
  417207:	push   ss
  417208:	mov    edx,0x32e6e576
  41720d:	xchg   esp,eax
  41720e:	xchg   ebp,eax
  41720f:	add    eax,0x2a29e3a5
  417214:	cmp    eax,0xa51c7359
  417219:	retf   
  41721a:	mov    eax,ds:0x359ca6e6
  41721f:	dec    ecx
  417220:	add    bl,BYTE PTR [eax-0x25063fb6]
  417226:	lods   eax,DWORD PTR ds:[esi]
  417227:	mov    edx,0x43f6eb97
  41722c:	push   es
  41722d:	test   bl,ah
  41722f:	push   edx
  417230:	mov    ebx,0x29c82bb3
  417235:	adc    ebx,DWORD PTR [edx+0x7dad047]
  41723b:	icebp  
  41723c:	mov    bh,BYTE PTR [ebp-0x37dfbdd4]
  417242:	jle    0x417253
  417244:	jmp    0x417284
  417246:	cs fcmovnu st,st(2)
  417249:	add    al,0x2d
  41724b:	sbb    al,0x78
  41724d:	push   ebx
  41724e:	fidivr WORD PTR [edx-0x76b0f04a]
  417254:	add    DWORD PTR [ebp+edi*2+0x73],0x911fec5d
  41725c:	or     eax,0x6fb234f8
  417261:	dec    eax
  417262:	imul   edx,DWORD PTR cs:[esi],0xffffffb8
  417266:	out    dx,eax
  417267:	xchg   ebp,eax
  417268:	test   DWORD PTR [edx],0xbc8a42b2
  41726e:	cmovg  eax,DWORD PTR [edx+edx*1]
  417272:	jp     0x417251
  417274:	pop    edx
  417275:	sahf   
  417276:	mov    ds:0xaae0b3b,al
  41727b:	or     al,0xe3
  41727d:	add    al,0x81
  41727f:	or     al,0xfe
  417281:	dec    ecx
  417282:	fcomp  DWORD PTR fs:[esi-0x75]
  417286:	test   eax,0x1a345039
  41728b:	mov    eax,ds:0xc5f40940
  417290:	(bad)  
  417291:	xor    ah,BYTE PTR [edi]
  417293:	fcomp  st(4)
  417295:	push   ss
  417296:	mov    edi,0x2190cbaa
  41729b:	push   esi
  41729c:	sar    BYTE PTR [esi],1
  41729e:	adc    BYTE PTR [ecx],0xaa
  4172a1:	aam    0x2b
  4172a3:	lds    ecx,FWORD PTR [ecx]
  4172a5:	and    ecx,DWORD PTR [edi]
  4172a7:	(bad)  
  4172a8:	cmp    DWORD PTR [esi+edx*8-0x1],edx
  4172ac:	ds push esi
  4172ae:	mov    esi,0xe56de32d
  4172b3:	daa    
  4172b4:	jae    0x4172db
  4172b6:	inc    esi
  4172b7:	and    esi,DWORD PTR [edx-0x5c1cf0d6]
  4172bd:	push   0xec8664ee
  4172c2:	test   eax,0x136c01
  4172c7:	rcl    BYTE PTR [ebp+0x2366afda],0xcd
  4172ce:	pop    ds
  4172cf:	mov    dl,0x75
  4172d1:	lods   al,BYTE PTR ds:[esi]
  4172d2:	in     eax,dx
  4172d3:	ds pop edx
  4172d5:	xchg   DWORD PTR [edx],eax
  4172d7:	in     eax,dx
  4172d8:	call   0x4313:0x417faabb
  4172df:	rcl    BYTE PTR [ebx-0x7363fcf7],0x41
  4172e6:	inc    edi
  4172e7:	imul   edi,DWORD PTR [esi-0x18c38fb9],0xffffffef
  4172ee:	in     eax,dx
  4172ef:	gs inc eax
  4172f1:	fist   DWORD PTR [ebp-0x12]
  4172f4:	(bad)  
  4172f5:	cmc    
  4172f6:	repz push es
  4172f8:	dec    esi
  4172f9:	jp     0x4172b3
  4172fb:	ins    DWORD PTR es:[edi],dx
  4172fc:	cmp    edx,DWORD PTR [esi+0x6f12694b]
  417302:	xlat   BYTE PTR ds:[ebx]
  417303:	inc    esp
  417304:	xchg   BYTE PTR [ebp+0x55],bh
  417307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417308:	call   FWORD PTR [ebp+0x50]
  41730b:	scas   al,BYTE PTR es:[edi]
  41730c:	add    al,0xbe
  41730e:	mov    gs,edi
  417310:	cmp    al,0x6e
  417312:	push   ds
  417313:	loope  0x4172de
  417315:	clc    
  417316:	fldl2e 
  417318:	outs   dx,DWORD PTR ds:[esi]
  417319:	cmp    eax,0xb6ca1da9
  41731e:	and    DWORD PTR [ecx],ecx
  417320:	sub    al,0x45
  417322:	xor    DWORD PTR ds:0x555cd44a,edx
  417328:	adc    DWORD PTR [eax+0x3dc5fccc],edi
  41732e:	in     eax,dx
  41732f:	add    edi,DWORD PTR [edx+0x7528fc57]
  417335:	push   cs
  417336:	neg    DWORD PTR [eax]
  417338:	sub    BYTE PTR [edi+0x444443f6],cl
  41733e:	xor    eax,0x9d3344a7
  417343:	cmp    BYTE PTR [ecx],0x56
  417346:	adc    eax,0x1360b766
  41734b:	dec    edi
  41734c:	out    dx,al
  41734d:	xchg   ecx,eax
  41734e:	das    
  41734f:	in     eax,dx
  417350:	iret   
  417351:	(bad)  
  417352:	aas    
  417353:	cwde   
  417354:	ret    
  417355:	jg     0x417331
  417357:	push   esi
  417358:	sub    DWORD PTR [edi+ecx*1],0x72d87fae
  41735f:	ret    
  417360:	cmp    DWORD PTR [edi+0x372fce8e],ecx
  417366:	jle    0x4173e5
  417368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417369:	jmp    0x25e3:0xbc3001d5
  417370:	add    al,0x3d
  417372:	test   DWORD PTR [edi],ebx
  417374:	push   edi
  417375:	dec    edi
  417376:	mov    esi,0x96451752
  41737b:	or     dh,BYTE PTR [esi+eiz*1]
  41737e:	adc    BYTE PTR [eax+0x7c14f872],bl
  417384:	popa   
  417385:	xor    eax,0xba3c9985
  41738a:	inc    eax
  41738b:	jmp    0x41732c
  41738d:	and    DWORD PTR [ebp+0x31fdb469],esi
  417393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417394:	dec    esi
  417395:	ja     0x417390
  417397:	dec    ebx
  417398:	test   DWORD PTR fs:[ecx+0x6dbab3cb],ebp
  41739f:	fstp   DWORD PTR [edi+0x5cb3caff]
  4173a5:	xchg   ebx,eax
  4173a6:	and    ch,bl
  4173a8:	test   DWORD PTR [edi-0x67],eax
  4173ab:	sub    ah,BYTE PTR [edi]
  4173ad:	stc    
  4173ae:	outs   dx,DWORD PTR ds:[esi]
  4173af:	adc    eax,DWORD PTR [ebp-0x4480df5e]
  4173b5:	mov    edi,0xb8fa0b05
  4173ba:	xor    ebp,ebx
  4173bc:	das    
  4173bd:	sbb    bl,bl
  4173bf:	pop    esp
  4173c0:	fwait
  4173c1:	push   es
  4173c2:	dec    edi
  4173c3:	and    edx,DWORD PTR [edx+0x20622feb]
  4173c9:	iret   
  4173ca:	pop    esi
  4173cb:	push   edi
  4173cc:	pop    ecx
  4173cd:	pop    esp
  4173ce:	mov    esp,0xe72db08c
  4173d3:	mov    eax,0xa7378140
  4173d8:	mov    edi,0x537fa481
  4173dd:	vpsrlw ymm6,ymm7,xmm6
  4173e1:	push   esp
  4173e2:	or     al,0x4b
  4173e4:	push   esp
  4173e5:	sbb    esp,DWORD PTR [ecx]
  4173e7:	pop    ecx
  4173e8:	mov    cl,0xd9
  4173ea:	je     0x41740f
  4173ec:	mov    DWORD PTR [esi+0x33],0xd8503db5
  4173f3:	xor    BYTE PTR [eax+0x773353de],dh
  4173f9:	std    
  4173fa:	add    ebp,ebx
  4173fc:	sub    eax,0x49408697
  417401:	sar    ebx,0x41
  417404:	mov    ecx,0x2805c1d2
  417409:	nop
  41740a:	dec    esi
  41740b:	xchg   esi,eax
  41740c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41740d:	shl    ah,cl
  41740f:	fcmovnbe st,st(4)
  417411:	cmp    al,0x79
  417413:	pop    ss
  417414:	popf   
  417415:	and    al,0x6a
  417417:	test   al,0xc9
  417419:	in     eax,dx
  41741a:	les    eax,FWORD PTR [ebp+0x5d]
  41741d:	push   ebp
  41741e:	jnp    0x417463
  417420:	adc    BYTE PTR [ebx],0xee
  417423:	inc    edx
  417424:	cdq    
  417425:	leave  
  417426:	pop    esp
  417427:	pop    ebx
  417428:	adc    al,0xaf
  41742a:	mov    al,ds:0xfe9fd21a
  41742f:	adc    edx,0xda2749ed
  417435:	hlt    
  417436:	clc    
  417437:	lods   eax,DWORD PTR ds:[esi]
  417438:	outs   dx,BYTE PTR ds:[esi]
  417439:	push   es
  41743a:	daa    
  41743b:	push   ebp
  41743c:	ins    DWORD PTR es:[edi],dx
  41743d:	sbb    eax,0x172e514d
  417442:	test   eax,0xcf96a2ee
  417447:	out    0x3d,eax
  417449:	scas   al,BYTE PTR es:[edi]
  41744a:	ins    BYTE PTR es:[edi],dx
  41744b:	shr    BYTE PTR [eax],1
  41744d:	and    DWORD PTR [esi-0x7a],esi
  417450:	outs   dx,DWORD PTR ds:[esi]
  417451:	jae    0x41743f
  417453:	dec    edi
  417454:	push   cs
  417455:	jnp    0x417470
  417457:	imul   ebp,ebx,0x40
  41745a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41745b:	add    BYTE PTR [ecx+0x6e],bh
  41745e:	sub    DWORD PTR [ebp+0xa990c11],0xffffffab
  417465:	pop    ebx
  417466:	pop    ebx
  417467:	mov    ds:0xede519be,eax
  41746c:	div    esi
  41746e:	rcr    BYTE PTR [ebx-0x44fb8441],0xb9
  417475:	cli    
  417476:	sbb    al,0x75
  417478:	fwait
  417479:	adc    al,0x86
  41747b:	jae    0x41747f
  41747d:	ds inc ebx
  41747f:	cwde   
  417480:	data16 jmp 0x417405
  417483:	inc    ebp
  417484:	inc    ebp
  417485:	add    edi,DWORD PTR [edx+0x50]
  417488:	aam    0x6d
  41748a:	or     al,0x6f
  41748c:	mov    al,0x82
  41748e:	cmp    BYTE PTR [eax],ah
  417490:	iret   
  417491:	fs and al,0xbe
  417494:	add    ebx,DWORD PTR [ebx]
  417496:	cmp    ebx,DWORD PTR [esi-0x7c]
  417499:	mov    bl,0x54
  41749b:	jno    0x41743a
  41749d:	mov    ebx,0xa35a4bdc
  4174a2:	loopne 0x417522
  4174a4:	aam    0xda
  4174a6:	lock loopne 0x41748f
  4174a9:	out    dx,al
  4174aa:	mov    edx,0x695fa2af
  4174af:	jnp    0x417439
  4174b1:	pop    es
  4174b2:	das    
  4174b3:	xchg   ebx,eax
  4174b4:	out    0xa6,eax
  4174b6:	jno    0x4174b9
  4174b8:	pushf  
  4174b9:	dec    eax
  4174ba:	int    0xed
  4174bc:	dec    ebp
  4174bd:	dec    esp
  4174be:	push   ebx
  4174bf:	lods   al,BYTE PTR ds:[esi]
  4174c0:	cmp    BYTE PTR [ebx-0x33],ch
  4174c3:	popa   
  4174c4:	xchg   BYTE PTR [ecx-0x1b7b4d89],ch
  4174ca:	mov    al,ds:0x20b40850
  4174cf:	jo     0x4174fe
  4174d1:	fs (bad) 
  4174d3:	lock add BYTE PTR [ecx+0x1f082239],bl
  4174da:	int3   
  4174db:	sbb    esp,DWORD PTR [ebx+0x19]
  4174de:	cwde   
  4174df:	sahf   
  4174e0:	xchg   edi,eax
  4174e1:	push   ss
  4174e2:	sti    
  4174e3:	sub    eax,0xf245162e
  4174e8:	sub    dh,0x9f
  4174eb:	mov    ecx,0xf6205c14
  4174f0:	jo     0x417494
  4174f2:	add    BYTE PTR [ecx-0x59761b12],bh
  4174f8:	mov    dl,0x4a
  4174fa:	sub    DWORD PTR [ecx+eiz*4],edi
  4174fd:	mov    ebx,0x864d376d
  417502:	std    
  417503:	cmp    DWORD PTR [eax+edi*1],0xadbbf8bc
  41750a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41750b:	jmp    0x4174ee
  41750d:	ja     0x417551
  41750f:	or     bh,al
  417511:	data16 add ah,BYTE PTR [eax+0x53f11165]
  417518:	pop    ebx
  417519:	call   0x8725d823
  41751e:	test   al,0x33
  417520:	pop    ss
  417521:	and    eax,0x1c1cf4ea
  417526:	mov    bl,0x44
  417528:	jae    0x417513
  41752a:	ror    BYTE PTR [ecx+eiz*2-0x6c74b13a],1
  417531:	push   ss
  417532:	pusha  
  417533:	xchg   esp,eax
  417534:	cld    
  417535:	adc    eax,0xbb3a1389
  41753a:	mov    ds:0x3534b2fe,eax
  41753f:	out    dx,al
  417540:	pop    edi
  417541:	xchg   ebx,eax
  417542:	mov    edi,DWORD PTR [esi+ebp*2-0x61]
  417546:	data16 jbe 0x4174d4
  417549:	inc    ebp
  41754a:	push   ss
  41754b:	xor    al,0x26
  41754d:	mov    eax,0x6bb2b073
  417552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417553:	push   esi
  417554:	inc    eax
  417555:	popf   
  417556:	push   edi
  417557:	adc    al,0x12
  417559:	sub    BYTE PTR [eax-0xc1b03b0],bl
  41755f:	mov    esp,0x2e0b5263
  417564:	int    0xb
  417566:	pop    edx
  417567:	pop    edx
  417568:	jns    0x4175c8
  41756a:	cdq    
  41756b:	imul   edi,ebp,0xc89a9f30
  417571:	rcr    DWORD PTR [ecx+0x18],cl
  417574:	or     DWORD PTR [eax],edi
  417576:	outs   dx,BYTE PTR ds:[esi]
  417577:	es js  0x417530
  41757a:	inc    ecx
  41757b:	imul   ebp,DWORD PTR [eax-0x62],0x7bea86d3
  417582:	cmp    al,0x24
  417584:	mov    edi,DWORD PTR [esi+0x3569c15f]
  41758a:	adc    DWORD PTR [ecx+0x4ff0f64f],eax
  417590:	mov    ds:0x99ecec96,al
  417595:	div    DWORD PTR [esi+0x2a55ec51]
  41759b:	stos   BYTE PTR es:[edi],al
  41759c:	xor    ah,BYTE PTR [ebx-0xdf88e1f]
  4175a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a3:	adc    al,0xd7
  4175a5:	sub    DWORD PTR [edi+0x25be961f],0x1a770698
  4175af:	pop    edx
  4175b0:	adc    esi,ebx
  4175b2:	jle    0x4175a6
  4175b4:	hlt    
  4175b5:	pop    es
  4175b6:	inc    ecx
  4175b7:	adc    BYTE PTR [ecx+0x3f9d44af],dh
  4175bd:	out    0x4e,al
  4175bf:	pop    ds
  4175c0:	push   0x72
  4175c2:	xchg   edx,eax
  4175c3:	push   0x45
  4175c5:	jae    0x4175fa
  4175c7:	retf   0xa487
  4175ca:	fstp   DWORD PTR [ebx]
  4175cc:	cmp    esi,ecx
  4175ce:	sub    ebx,0xfffffffd
  4175d1:	shr    BYTE PTR [edi],0x2a
  4175d4:	push   ebx
  4175d5:	leave  
  4175d6:	cdq    
  4175d7:	shl    bl,1
  4175d9:	rol    DWORD PTR [ecx+0x48f59ef1],1
  4175df:	sar    DWORD PTR [edi-0x6b61dcbf],1
  4175e5:	xor    ah,BYTE PTR [ecx-0x45]
  4175e8:	sub    edx,ebx
  4175ea:	retf   0x492d
  4175ed:	mov    al,ds:0xfb2276c6
  4175f2:	out    0xce,eax
  4175f4:	aam    0x6e
  4175f6:	sbb    DWORD PTR cs:[esi],eax
  4175f9:	add    DWORD PTR [ebx-0x26c010b],esi
  4175ff:	add    esp,DWORD PTR ds:0x8eeea3b5
  417605:	test   eax,0x51bf52f1
  41760a:	out    dx,al
  41760b:	icebp  
  41760c:	push   cs
  41760d:	test   DWORD PTR [edx-0x3e9318a3],ebp
  417613:	mov    eax,ds:0xe39e5061
  417618:	adc    eax,0x7975aad6
  41761d:	push   ss
  41761e:	ss push bp
  417621:	adc    ah,BYTE PTR [ebp-0x4b]
  417624:	cmp    eax,DWORD PTR fs:[ecx+ecx*1-0x2e]
  417629:	xchg   ebp,eax
  41762a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41762b:	aas    
  41762c:	xchg   edx,eax
  41762d:	jmp    0xcbae:0xdd4ac834
  417634:	retf   
  417635:	cdq    
  417636:	mov    DWORD PTR [ebp+0x7537de36],esp
  41763c:	ja     0x41766f
  41763e:	test   BYTE PTR [edi],bl
  417640:	aaa    
  417641:	adc    eax,DWORD PTR [esi]
  417643:	pop    eax
  417644:	and    ah,BYTE PTR [ebx-0x230a4dda]
  41764a:	pop    ss
  41764b:	add    al,bh
  41764d:	fwait
  41764e:	pushf  
  41764f:	xchg   esp,eax
  417650:	dec    esp
  417651:	(bad)  
  417652:	icebp  
  417653:	neg    BYTE PTR [edi-0x4c7cefe4]
  417659:	scas   al,BYTE PTR es:[edi]
  41765a:	retf   
  41765b:	rcr    BYTE PTR [eax],cl
  41765d:	pop    eax
  41765e:	call   FWORD PTR [edx]
  417660:	pop    ecx
  417661:	sar    BYTE PTR [edx],0xf9
  417664:	mov    esp,0xb68b3c2f
  417669:	sar    DWORD PTR [ebp-0x35],cl
  41766c:	sbb    BYTE PTR [edi+ebp*1],cl
  41766f:	dec    edi
  417670:	add    DWORD PTR [ebp+0x356b4f7b],edx
  417676:	outs   dx,DWORD PTR ds:[esi]
  417677:	lods   al,BYTE PTR ds:[esi]
  417678:	inc    eax
  417679:	sbb    eax,0x65554da5
  41767e:	pop    edx
  41767f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417680:	mov    ecx,0x284e1904
  417685:	jnp    0x4176ae
  417687:	sub    esp,ebp
  417689:	sub    al,0xf7
  41768b:	push   edi
  41768c:	(bad)  
  41768d:	in     al,0x0
  41768f:	jo     0x417701
  417691:	or     DWORD PTR [edx+edx*4],edx
  417694:	bound  esp,QWORD PTR ds:0x10c7b333
  41769a:	push   esp
  41769b:	shl    ch,cl
  41769d:	ja     0x4176ee
  41769f:	iret   
  4176a0:	popf   
  4176a1:	outs   dx,DWORD PTR ds:[esi]
  4176a2:	loop   0x4176e2
  4176a4:	jne    0x41769c
  4176a6:	add    DWORD PTR ds:0xf213d134,ecx
  4176ac:	pusha  
  4176ad:	and    eax,0xd0c6a67f
  4176b2:	retf   0x8360
  4176b5:	out    dx,al
  4176b6:	dec    edx
  4176b7:	push   edi
  4176b8:	dec    ebp
  4176b9:	push   esp
  4176ba:	inc    edi
  4176bb:	mov    ds:0xf9a85fbf,al
  4176c0:	pop    esp
  4176c1:	cdq    
  4176c2:	retf   
  4176c3:	adc    eax,0x4feb4f
  4176c8:	pop    es
  4176c9:	push   ebp
  4176ca:	rol    DWORD PTR [ebx],1
  4176cc:	pop    edi
  4176cd:	push   esi
  4176ce:	adc    DWORD PTR [edx],esp
  4176d0:	imul   esi,DWORD PTR ds:[eax],0x7a774087
  4176d7:	xlat   BYTE PTR ds:[ebx]
  4176d8:	push   eax
  4176d9:	hlt    
  4176da:	int3   
  4176db:	mov    ch,0x42
  4176dd:	popa   
  4176de:	cdq    
  4176df:	adc    bl,bl
  4176e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176e2:	retf   0xd3f0
  4176e5:	push   ecx
  4176e6:	arpl   si,dx
  4176e8:	ret    
  4176e9:	jp     0x417689
  4176eb:	std    
  4176ec:	cmp    BYTE PTR [esi],0xf3
  4176ef:	jmp    0x8c35c574
  4176f4:	cmp    eax,0xcfe24a11
  4176f9:	pop    eax
  4176fa:	(bad)  
  4176fb:	(bad)  
  4176fd:	jb     0x4176ae
  4176ff:	scas   al,BYTE PTR es:[edi]
  417700:	add    al,0xb1
  417702:	jo     0x417771
  417704:	js     0x41770b
  417706:	jmp    0x3b59f60
  41770b:	push   ecx
  41770c:	ror    DWORD PTR [ebx+eax*8-0x57],1
  417710:	retf   0x5a3b
  417713:	or     BYTE PTR [esi-0x2d],bh
  417716:	xor    esi,ebx
  417718:	add    eax,0xee7f7f9d
  41771d:	and    esp,eax
  41771f:	xlat   BYTE PTR ds:[ebx]
  417720:	pop    edx
  417721:	jecxz  0x41777b
  417723:	sub    al,0xe0
  417725:	pop    ecx
  417726:	push   eax
  417727:	add    BYTE PTR [ecx+0x65046b65],ch
  41772d:	sar    BYTE PTR [ecx],0xcb
  417730:	es dec edi
  417732:	add    eax,0x6f253b
  417737:	loope  0x4177ae
  417739:	xor    ah,bh
  41773b:	cdq    
  41773c:	mov    WORD PTR [esp+esi*4-0xb9a6cb0],?
  417743:	mov    ebp,DWORD PTR [eax+eax*8-0xd]
  417747:	popf   
  417748:	(bad)  
  417749:	out    0xc6,eax
  41774b:	push   ebx
  41774c:	ret    
  41774d:	mov    ds:0x51dda487,al
  417752:	fnsave [edi-0x3c161733]
  417758:	sbb    DWORD PTR [esi+ebx*8+0x24ae2993],edi
  41775f:	gs popfw 
  417762:	jae    0x417714
  417764:	das    
  417765:	in     al,0x67
  417767:	fcomp  QWORD PTR [ebx+0x6e]
  41776a:	push   0xffffffc9
  41776c:	jp     0x417708
  41776e:	push   ecx
  41776f:	(bad)  
  417770:	cs stc 
  417772:	mov    BYTE PTR [edi+edx*2+0x6f],al
  417776:	loopne 0x41770b
  417778:	call   0x7cd356d8
  41777d:	fldcw  WORD PTR [edi-0x2b7a8657]
  417783:	sbb    al,0x8a
  417785:	xchg   ebp,eax
  417786:	jmp    DWORD PTR ds:0x447726
  41778c:	in     al,0x5e
  41778e:	or     bl,dh
  417790:	lods   eax,DWORD PTR ds:[esi]
  417791:	iret   
  417792:	lea    ebx,[eax-0x1a]
  417795:	ret    0xfae5
  417798:	xor    dh,dl
  41779a:	test   DWORD PTR [edi+0x42da89f6],ecx
  4177a0:	pop    ecx
  4177a1:	mov    cl,BYTE PTR [edi]
  4177a3:	mov    ds:0x11cbdad4,al
  4177a8:	fistp  QWORD PTR [edx-0x3]
  4177ab:	mov    dl,0xcd
  4177ad:	adc    BYTE PTR [ebx],bl
  4177af:	and    eax,DWORD PTR [eax+esi*8-0x6e]
  4177b3:	cwde   
  4177b4:	lods   al,BYTE PTR ds:[esi]
  4177b5:	ins    BYTE PTR es:[edi],dx
  4177b6:	imul   edx,DWORD PTR [ebx],0xffffffdb
  4177b9:	xor    BYTE PTR [esi-0x7],dh
  4177bc:	dec    esi
  4177bd:	call   0xe01a:0x82f5d3e1
  4177c4:	dec    edx
  4177c5:	dec    ecx
  4177c6:	pop    ecx
  4177c7:	jp     0x417835
  4177c9:	cwde   
  4177ca:	dec    ebp
  4177cb:	mov    BYTE PTR [edi+eax*8-0x2b],ah
  4177cf:	popa   
  4177d0:	jae    0x417772
  4177d2:	iret   
  4177d3:	sbb    ecx,DWORD PTR [ecx-0x15]
  4177d6:	leave  
  4177d7:	nop
  4177d8:	jmp    0x5a5437a7
  4177dd:	sub    eax,0xd084cf24
  4177e2:	out    dx,eax
  4177e3:	mov    eax,0x518c7529
  4177e8:	outs   dx,DWORD PTR ds:[esi]
  4177e9:	nop
  4177ea:	add    eax,0x707fd5e7
  4177ef:	pop    esi
  4177f0:	lds    ebx,FWORD PTR [esi-0x2e]
  4177f3:	sbb    BYTE PTR [ebp+0x38c8b72d],ah
  4177f9:	xchg   edi,eax
  4177fa:	aam    0xbc
  4177fc:	add    eax,0x55f13d29
  417801:	mov    esi,0x8096224e
  417806:	rcr    edi,1
  417808:	repz addr16 mov dl,0x49
  41780c:	and    al,0x94
  41780e:	(bad)  
  41780f:	(bad)  [ecx-0x13]
  417812:	clc    
  417813:	xlat   BYTE PTR ds:[ebx]
  417814:	xor    al,0x2f
  417816:	adc    eax,0x70f9f023
  41781b:	push   esp
  41781c:	jl     0x417871
  41781e:	xchg   esi,eax
  41781f:	jnp    0x41788f
  417821:	repz jge 0x417804
  417824:	repnz cmp eax,0x5de66ef
  41782a:	in     al,dx
  41782b:	pop    eax
  41782c:	or     ebx,DWORD PTR [ebx+0x56]
  41782f:	outs   dx,BYTE PTR ds:[esi]
  417830:	add    eax,0xfc0e5158
  417835:	jmp    0xf454:0x564082f2
  41783c:	test   al,0xa2
  41783e:	bound  esp,QWORD PTR [eax]
  417840:	sbb    ebx,DWORD PTR [edx]
  417842:	jmp    0x41789b
  417844:	inc    edi
  417845:	adc    eax,0x85b7a3c3
  41784a:	lahf   
  41784b:	sar    ecx,cl
  41784d:	mov    al,ds:0xd8dbd175
  417852:	and    al,0x5c
  417854:	mov    al,ds:0x9709982f
  417859:	xor    DWORD PTR [edx+0xba1f8b3],edx
  41785f:	ins    DWORD PTR es:[edi],dx
  417860:	outs   dx,BYTE PTR ds:[esi]
  417861:	push   esp
  417862:	xlat   BYTE PTR ds:[ebx]
  417863:	jno    0x417854
  417865:	xchg   ebp,eax
  417866:	sub    BYTE PTR [ebp+esi*2+0x3a],dh
  41786a:	dec    edx
  41786b:	sub    al,0x1b
  41786d:	xchg   ebx,eax
  41786e:	ficomp WORD PTR [edx-0x1b3cb544]
  417874:	dec    esp
  417875:	loop   0x4177fb
  417877:	jle    0x417873
  417879:	ss mov ecx,0x83ba021
  41787f:	dec    ebx
  417880:	and    ch,BYTE PTR [esi]
  417882:	push   edi
  417883:	das    
  417884:	mov    WORD PTR [bp+si+0xc],gs
  417888:	bound  eax,QWORD PTR [di-0x268b]
  41788d:	mov    ebp,0xc0d3e9fc
  417892:	call   0xaead7d0b
  417897:	mov    bl,0x77
  417899:	mov    ch,0x36
  41789b:	stos   DWORD PTR es:[edi],eax
  41789c:	and    ebp,DWORD PTR [esi-0x2dce8903]
  4178a2:	clc    
  4178a3:	(bad)  
  4178a4:	lock push cs
  4178a6:	int3   
  4178a7:	or     BYTE PTR [esi+0x8aae3a6],dl
  4178ad:	dec    esi
  4178ae:	mov    al,ds:0xd1bf7d73
  4178b3:	test   al,0x3c
  4178b5:	loop   0x4178a4
  4178b7:	jmp    0xfa0a7572
  4178bc:	stos   BYTE PTR es:[edi],al
  4178bd:	push   ss
  4178be:	add    eax,0x9f88e203
  4178c3:	pop    ss
  4178c4:	test   BYTE PTR [edx+0x2f5c79c5],ah
  4178ca:	iret   
  4178cb:	lock push ebp
  4178cd:	jmp    0x42883071
  4178d2:	(bad)  
  4178d3:	xor    eax,DWORD PTR [esp+ecx*4-0x1aa8b9d3]
  4178da:	and    ch,al
  4178dc:	shl    BYTE PTR [edx-0x635c8c54],1
  4178e2:	shl    BYTE PTR [esi-0x5a4dea1c],cl
  4178e8:	add    DWORD PTR [edx],edi
  4178ea:	pop    esp
  4178eb:	jbe    0x417935
  4178ed:	xor    ebx,edx
  4178ef:	test   BYTE PTR [edx-0x1ec95934],0x5e
  4178f6:	out    0x80,al
  4178f8:	xor    esi,DWORD PTR [ecx+0x639e62c8]
  4178fe:	(bad)  [ecx]
  417900:	mov    ah,0x46
  417902:	mov    dl,0x38
  417904:	inc    ecx
  417905:	out    dx,al
  417906:	mov    ah,0x50
  417908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417909:	cmp    edi,DWORD PTR [ebp+0x7278a18b]
  41790f:	stc    
  417910:	inc    ebx
  417911:	stc    
  417912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417913:	jg     0x4178e4
  417915:	xchg   edx,eax
  417916:	cmp    edx,DWORD PTR [eax+0x57]
  417919:	push   esp
  41791a:	sub    BYTE PTR [edi-0x4f],ch
  41791d:	shr    DWORD PTR [eax-0x3b],1
  417920:	mov    edx,0x74473363
  417925:	pop    ecx
  417926:	mov    eax,ds:0x93e84ae7
  41792b:	or     BYTE PTR [esi+0x5457ccd2],ah
  417931:	call   0x71de:0xccaafb48
  417938:	lahf   
  417939:	ror    DWORD PTR [ebx+0x30],1
  41793c:	xchg   DWORD PTR [eax],eax
  41793e:	out    0x93,al
  417940:	imul   ebx,DWORD PTR [esi+edi*8-0x4f97dd15],0x38
  417948:	mov    bh,0xfb
  41794a:	add    BYTE PTR [edx+edi*4+0x6d],ch
  41794e:	test   DWORD PTR [edx+0x7],esp
  417951:	xchg   ebp,ebx
  417953:	int    0x8e
  417955:	ret    
  417956:	lock addr16 mov ebp,0x7ca6ad0c
  41795d:	fwait
  41795e:	(bad)
  417961:	stos   BYTE PTR es:[edi],al
  417962:	jle    0x417936
  417964:	adc    BYTE PTR [ebx],ah
  417966:	dec    eax
  417967:	dec    edi
  417968:	pop    eax
  417969:	out    dx,al
  41796a:	idiv   DWORD PTR [edx]
  41796c:	adc    ebp,esi
  41796e:	scas   al,BYTE PTR es:[edi]
  41796f:	adc    dl,BYTE PTR [esi-0x14]
  417972:	les    edi,FWORD PTR [edx+0x1]
  417975:	mov    al,0x39
  417977:	xor    eax,eax
  417979:	loopne 0x41795c
  41797b:	or     eax,0x56477be
  417980:	in     al,dx
  417981:	test   DWORD PTR [esi+0x7f1ff701],ebx
  417987:	pop    ds
  417988:	or     BYTE PTR [ebx+0x2b9d1a1a],bh
  41798e:	add    eax,0x5aed8fdd
  417993:	pop    ebp
  417994:	ins    DWORD PTR es:[edi],dx
  417995:	adc    esp,esi
  417997:	repz sti 
  417999:	outs   dx,DWORD PTR ds:[esi]
  41799a:	and    eax,0xced66008
  41799f:	fwait
  4179a0:	jp     0x417942
  4179a2:	rcl    DWORD PTR [eax+0x33],1
  4179a5:	pop    edi
  4179a6:	mov    edi,0x96e2e090
  4179ab:	or     al,BYTE PTR [edx-0x37c767de]
  4179b1:	out    dx,eax
  4179b2:	cmc    
  4179b3:	mov    eax,ds:0x905ec822
  4179b8:	les    ecx,FWORD PTR [ebp+0x5e0ad07b]
  4179be:	fst    QWORD PTR [ebx]
  4179c0:	dec    eax
  4179c1:	mov    dh,0x39
  4179c3:	cdq    
  4179c4:	or     BYTE PTR [edi],bl
  4179c6:	jno    0x4179a3
  4179c8:	(bad)  
  4179c9:	or     al,0x7a
  4179cb:	sbb    eax,0x9af910d
  4179d0:	add    DWORD PTR gs:[edi-0x43],0x13
  4179d5:	repnz pop edi
  4179d7:	lods   eax,DWORD PTR ds:[esi]
  4179d8:	ins    DWORD PTR es:[edi],dx
  4179d9:	jno    0x417972
  4179db:	jmp    0x1630afec
  4179e0:	push   edx
  4179e1:	shl    BYTE PTR [edx+0x60],0x70
  4179e5:	mov    al,ds:0x7b03aa15
  4179ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179eb:	and    al,0x73
  4179ed:	jmp    0x4179c3
  4179ef:	mov    eax,ds:0xd9e6dac2
  4179f4:	cmp    bh,cl
  4179f6:	mov    dh,0x56
  4179f8:	add    al,0x1e
  4179fa:	cmp    DWORD PTR [eax-0x4d],0x4a
  4179fe:	frstor [esi+eiz*4]
  417a01:	lds    eax,FWORD PTR [esi+ebx*8+0x301d8295]
  417a08:	inc    ecx
  417a09:	sar    DWORD PTR [ebp-0x4ecb5272],1
  417a0f:	sbb    eax,DWORD PTR [ecx+0x76]
  417a12:	(bad)  
  417a13:	or     BYTE PTR [eax+0x78],0x1
  417a17:	stos   BYTE PTR es:[edi],al
  417a18:	push   ebx
  417a19:	stos   DWORD PTR es:[edi],eax
  417a1a:	jge    0x4179c7
  417a1c:	or     al,0x83
  417a1e:	mov    DWORD PTR [edi+0x6bc68e88],edx
  417a24:	add    eax,0xac43e0c7
  417a29:	inc    esi
  417a2a:	lahf   
  417a2b:	loopne 0x417a27
  417a2d:	scas   al,BYTE PTR es:[edi]
  417a2e:	fwait
  417a2f:	mov    edx,DWORD PTR [ebx-0x78]
  417a32:	sbb    DWORD PTR ds:0x80afb1fa,ecx
  417a38:	popa   
  417a39:	inc    ebx
  417a3a:	aas    
  417a3b:	leave  
  417a3c:	jne    0x4179f6
  417a3e:	repnz cmp ebp,edx
  417a41:	or     BYTE PTR [edx+0x5b],dh
  417a44:	test   DWORD PTR [ecx],0xd21faee3
  417a4a:	mov    ah,0x7d
  417a4c:	lea    edx,[ebp+0x5db9f490]
  417a52:	sub    al,0xa8
  417a54:	ds mov dh,0xda
  417a57:	dec    ebp
  417a58:	sub    cl,dl
  417a5a:	lods   al,BYTE PTR ds:[esi]
  417a5b:	add    DWORD PTR [ebp+0x5716b601],edi
  417a61:	es bnd js 0x417a96
  417a65:	dec    ebp
  417a66:	adc    al,al
  417a68:	mov    edx,0xe0e52593
  417a6d:	aas    
  417a6e:	mov    ebp,0x9aeee43a
  417a73:	lods   eax,DWORD PTR ds:[esi]
  417a74:	lea    esp,[eax-0x787501f9]
  417a7a:	scas   al,BYTE PTR es:[edi]
  417a7b:	test   eax,ecx
  417a7d:	dec    bh
  417a7f:	pop    ebx
  417a80:	scas   al,BYTE PTR es:[edi]
  417a81:	loopne 0x417ad7
  417a83:	adc    BYTE PTR [eax-0x5534b03],dl
  417a89:	adc    ecx,esi
  417a8b:	mov    esi,0x9ebe2a5a
  417a90:	das    
  417a91:	inc    ecx
  417a92:	dec    esi
  417a93:	or     eax,0x2db30e1
  417a98:	push   edi
  417a99:	or     DWORD PTR ds:0x69aa6c32,esi
  417a9f:	pushf  
  417aa0:	dec    esi
  417aa1:	inc    esp
  417aa2:	inc    esi
  417aa3:	push   ecx
  417aa4:	rcr    BYTE PTR [esi+0x2fb85b72],1
  417aaa:	xor    BYTE PTR [ecx+0x18],dl
  417aad:	mov    bl,0xb3
  417aaf:	adc    eax,0xdfd4b12c
  417ab4:	in     al,0xb8
  417ab6:	jne    0x417b2e
  417ab8:	mov    ah,BYTE PTR [edx]
  417aba:	popa   
  417abb:	sub    eax,0x274a810f
  417ac0:	xchg   esi,eax
  417ac1:	jl     0x417a97
  417ac3:	adc    BYTE PTR [ebp*4+0x319a9da6],ch
  417aca:	daa    
  417acb:	sar    BYTE PTR [ebp-0x27],0x4c
  417acf:	mov    al,0xbc
  417ad1:	rol    ecx,cl
  417ad3:	ss ss cld 
  417ad6:	retf   0xc937
  417ad9:	mov    DWORD PTR [edx],ebp
  417adb:	mov    ds,WORD PTR [ecx-0x2]
  417ade:	push   cs
  417adf:	(bad)  
  417ae0:	xchg   ecx,eax
  417ae1:	push   ds
  417ae2:	mov    edi,0x4da66246
  417ae7:	xlat   BYTE PTR ds:[ebx]
  417ae8:	mov    ebp,0x3e507ab
  417aed:	scas   al,BYTE PTR es:[edi]
  417aee:	outs   dx,BYTE PTR ds:[esi]
  417aef:	sub    al,BYTE PTR [ebp-0x1f47dac8]
  417af5:	dec    DWORD PTR [eax]
  417af7:	dec    ebx
  417af8:	dec    esi
  417af9:	jnp    0x417b0d
  417afb:	fdiv   QWORD PTR [ecx+0x1028b11e]
  417b01:	dec    edx
  417b02:	test   al,0x63
  417b04:	sub    eax,0xca4e8e9
  417b09:	xlat   BYTE PTR ds:[ebx]
  417b0a:	mov    DWORD PTR [edi-0x54],esp
  417b0d:	aas    
  417b0e:	xchg   ebp,eax
  417b0f:	jns    0x417a9b
  417b11:	pop    edi
  417b12:	xchg   DWORD PTR [edx],ecx
  417b14:	pop    cx
  417b16:	add    BYTE PTR [ecx],ch
  417b18:	and    eax,0xa2b638b3
  417b1d:	and    BYTE PTR [ebx-0x1c5c5cb8],dh
  417b23:	test   dl,al
  417b25:	rol    DWORD PTR [eax+0x1e],1
  417b28:	(bad)  
  417b29:	dec    ecx
  417b2a:	loopne 0x417ae3
  417b2c:	push   esi
  417b2d:	xchg   edi,eax
  417b2e:	btr    DWORD PTR [esi-0x46f774c0],eax
  417b35:	pop    esp
  417b36:	inc    esp
  417b37:	push   ebp
  417b38:	cmp    eax,0xc53129f2
  417b3d:	add    ecx,DWORD PTR ds:0x91f2ada5
  417b43:	xchg   esp,eax
  417b44:	pop    eax
  417b45:	(bad)  
  417b46:	repnz pop es
  417b48:	loop   0x417b00
  417b4a:	and    al,0x38
  417b4c:	pop    ebx
  417b4d:	(bad)  
  417b4e:	lods   eax,DWORD PTR ds:[esi]
  417b4f:	mov    edx,0xeb8f3d94
  417b54:	and    esp,ecx
  417b56:	mov    ebx,0x2ca9c736
  417b5b:	sbb    bh,bl
  417b5d:	push   edi
  417b5e:	sbb    eax,DWORD PTR [esi+edx*8-0x123db42d]
  417b65:	dec    ecx
  417b66:	pushf  
  417b67:	mov    al,BYTE PTR ds:0x648ba8e7
  417b6d:	out    0x22,eax
  417b6f:	add    cl,bh
  417b71:	fs loopne 0x417b32
  417b74:	dec    ebx
  417b75:	je     0x417bcd
  417b77:	pushf  
  417b78:	mov    al,ds:0xb415fca8
  417b7d:	jmp    0x417bbf
  417b7f:	sti    
  417b80:	sbb    al,0x4e
  417b82:	out    dx,eax
  417b83:	and    DWORD PTR gs:[eax-0x787dd001],0xffffff88
  417b8b:	int    0xcb
  417b8d:	or     BYTE PTR [ebx],bl
  417b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b90:	imul   ecx,DWORD PTR [edi-0x5b],0x2
  417b94:	add    eax,0xb77b6df6
  417b99:	sub    BYTE PTR [esi+0x79],al
  417b9c:	dec    eax
  417b9d:	ret    0x1727
  417ba0:	dec    ebp
  417ba1:	jnp    0x417bea
  417ba3:	dec    ebp
  417ba4:	data16 mov WORD PTR [esi],cs
  417ba7:	mov    ch,dh
  417ba9:	dec    ebx
  417baa:	sbb    al,0x5e
  417bac:	out    0x1f,al
  417bae:	scas   al,BYTE PTR es:[edi]
  417baf:	add    cl,BYTE PTR [ebp+0x17]
  417bb2:	xor    BYTE PTR [ebp-0x526212ee],bh
  417bb8:	(bad)  
  417bba:	out    dx,eax
  417bbb:	add    al,0x6b
  417bbd:	js     0x417ba6
  417bbf:	cld    
  417bc0:	dec    edx
  417bc1:	loopne 0x417c23
  417bc3:	aaa    
  417bc4:	mov    dh,0xe0
  417bc6:	test   BYTE PTR [edx-0x1a98020b],bh
  417bcc:	(bad)  
  417bcd:	fmul   QWORD PTR [edx]
  417bcf:	xor    BYTE PTR [ebx+0x5e],bl
  417bd2:	sub    edi,esp
  417bd4:	jp     0x417b7b
  417bd6:	outs   dx,DWORD PTR ds:[esi]
  417bd7:	and    eax,0x328b263a
  417bdc:	std    
  417bdd:	push   eax
  417bde:	mov    BYTE PTR [edx],ah
  417be0:	mov    bl,0x14
  417be2:	sub    eax,0x32094738
  417be7:	(bad)  
  417be8:	addr16 sub ecx,esp
  417beb:	push   ecx
  417bec:	in     al,0x53
  417bee:	sbb    eax,0x5475acfd
  417bf3:	push   edx
  417bf4:	icebp  
  417bf5:	inc    ebp
  417bf6:	outs   dx,DWORD PTR ds:[esi]
  417bf7:	cmp    ebp,0x6e
  417bfa:	jns    0x417c58
  417bfc:	enter  0x2879,0x27
  417c00:	inc    ebx
  417c01:	pop    edx
  417c02:	add    esp,edi
  417c04:	int3   
  417c05:	loope  0x417c59
  417c07:	cdq    
  417c08:	xchg   edx,eax
  417c09:	sbb    DWORD PTR [ebp+0x6a],0x8418db9d
  417c10:	mov    ah,0x4a
  417c12:	adc    cl,BYTE PTR [ebp+0x2b3ffe3a]
  417c18:	inc    ecx
  417c19:	lahf   
  417c1a:	xchg   ebp,eax
  417c1b:	jmp    0x417bdd
  417c1d:	mov    ch,0x1c
  417c1f:	lods   eax,DWORD PTR ds:[esi]
  417c20:	int3   
  417c21:	push   0xffffff88
  417c23:	mov    al,0xb8
  417c25:	jl     0x417ca2
  417c27:	jne    0x417c09
  417c29:	and    ebx,DWORD PTR [ebx-0x70]
  417c2c:	sbb    edx,DWORD PTR [ebx+0x72fd06af]
  417c32:	jecxz  0x417c93
  417c34:	inc    esi
  417c35:	cmp    eax,0x36ff861c
  417c3a:	pop    esi
  417c3b:	sbb    DWORD PTR [ebp-0x46],esp
  417c3e:	xor    BYTE PTR [edx-0x46],0xa0
  417c42:	adc    al,0x6c
  417c44:	into   
  417c45:	pop    edi
  417c46:	add    al,0x4f
  417c48:	js     0x417c48
  417c4a:	xchg   ebx,eax
  417c4b:	push   esi
  417c4c:	call   0x23e8:0xe76876af
  417c53:	jmp    0x848:0xe0a596f2
  417c5a:	test   DWORD PTR [edi],esi
  417c5c:	scas   al,BYTE PTR es:[edi]
  417c5d:	dec    ebp
  417c5e:	outs   dx,DWORD PTR ds:[esi]
  417c5f:	iret   
  417c60:	add    ecx,ecx
  417c62:	pop    edi
  417c63:	inc    ebp
  417c64:	adc    WORD PTR [edx-0x2fbc3e2c],di
  417c6b:	jo     0x417c23
  417c6d:	bound  edx,QWORD PTR [esp+edx*1]
  417c70:	sti    
  417c71:	xchg   DWORD PTR [esi*4+0x2b7a5982],ebx
  417c78:	fsubr  st,st(2)
  417c7a:	inc    edi
  417c7b:	pop    eax
  417c7c:	inc    esp
  417c7d:	pop    ebp
  417c7e:	fld    QWORD PTR [ecx-0x44]
  417c81:	in     eax,dx
  417c82:	mov    al,ds:0xf6b272a4
  417c87:	sub    ebp,DWORD PTR [ebp-0x5f]
  417c8a:	mov    ch,0xd2
  417c8c:	pop    eax
  417c8d:	xor    BYTE PTR [ecx],0x2e
  417c90:	push   ds
  417c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c92:	je     0x417cb5
  417c94:	xchg   edi,eax
  417c95:	sub    edi,DWORD PTR [ecx]
  417c97:	mov    WORD PTR [ecx-0x59fd99b7],?
  417c9d:	xchg   esi,eax
  417c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c9f:	jecxz  0x417caf
  417ca1:	test   eax,0xbcab367c
  417ca6:	ja     0x417c7a
  417ca8:	das    
  417ca9:	bound  esp,QWORD PTR [edx+0x6b]
  417cac:	sbb    ch,BYTE PTR [edi+0x36fa5a62]
  417cb2:	test   BYTE PTR [eax+0x22],dl
  417cb5:	je     0x417c37
  417cb7:	scas   eax,DWORD PTR es:[edi]
  417cb8:	in     al,0x17
  417cba:	ret    
  417cbb:	adc    ecx,DWORD PTR [eax+0x52]
  417cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cbf:	fadd   DWORD PTR [ebx+0x1f333326]
  417cc5:	je     0x417c86
  417cc7:	mov    ebx,ebx
  417cc9:	nop/reserved BYTE PTR [esi]
  417ccc:	cmp    al,bl
  417cce:	imul   ebx,DWORD PTR [edx+0x7],0xc
  417cd2:	ficomp DWORD PTR [ebp-0x51fdf270]
  417cd8:	inc    edi
  417cd9:	and    DWORD PTR ds:0x343bf534,ebp
  417cdf:	adc    eax,0x9091c90c
  417ce4:	and    ebx,DWORD PTR [ebp-0x3e]
  417ce7:	sub    al,0x74
  417ce9:	xor    BYTE PTR [ecx+0x1fdfd6e3],ah
  417cef:	loope  0x417ce1
  417cf1:	jnp    0x417c9a
  417cf3:	dec    ebp
  417cf4:	(bad)  
  417cf5:	jns    0x417c80
  417cf7:	pop    edi
  417cf8:	dec    ebx
  417cf9:	mov    dl,0x90
  417cfb:	rol    esp,cl
  417cfd:	jnp    0x417d29
  417cff:	mov    ss,WORD PTR [ecx+0x6e]
  417d02:	lods   al,BYTE PTR ds:[esi]
  417d03:	adc    ecx,DWORD PTR [esi+0x4416575d]
  417d09:	mov    dl,0x88
  417d0b:	ins    BYTE PTR es:[edi],dx
  417d0c:	and    ecx,DWORD PTR [edi+ebx*4-0x52]
  417d10:	pop    esp
  417d11:	shl    DWORD PTR [ecx-0x34],0xf4
  417d15:	sub    esi,esi
  417d17:	pop    ebx
  417d18:	jno    0x417cb5
  417d1a:	cmp    ch,BYTE PTR [ecx-0x15217b28]
  417d20:	in     eax,0x36
  417d22:	or     bl,BYTE PTR [esp+ebp*8+0x40]
  417d26:	push   edi
  417d27:	call   0xfc076fb
  417d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d2d:	fldenv [edi+0x3b]
  417d30:	mov    ch,0x45
  417d32:	fs pop ebx
  417d34:	pop    ebx
  417d35:	mov    ebx,edi
  417d37:	daa    
  417d38:	cmp    eax,0x7284362d
  417d3d:	out    dx,eax
  417d3e:	jl     0x417d90
  417d40:	add    al,BYTE PTR [eax]
  417d42:	fcmovne st,st(7)
  417d44:	fisttp DWORD PTR [edx]
  417d46:	add    eax,0x87979b99
  417d4b:	cs test al,0x28
  417d4e:	mov    ebx,0xe804c2dc
  417d53:	dec    edi
  417d54:	xor    ch,dh
  417d56:	push   ebx
  417d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d58:	stc    
  417d59:	jl     0x417d22
  417d5b:	jmp    0x4cc4e0f5
  417d60:	mov    ch,0x3d
  417d62:	stos   BYTE PTR es:[edi],al
  417d63:	push   ebx
  417d64:	mov    cl,0x86
  417d66:	jne    0x417db2
  417d68:	shl    BYTE PTR [edi+0x272c5da],1
  417d6e:	mov    ?,ebx
  417d70:	sbb    eax,0x3583a9bd
  417d75:	xchg   ecx,eax
  417d76:	leave  
  417d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d78:	ins    BYTE PTR es:[edi],dx
  417d79:	pusha  
  417d7a:	jne    0x417d9f
  417d7c:	push   es
  417d7d:	hlt    
  417d7e:	inc    eax
  417d7f:	jmp    0xfccc1f68
  417d84:	dec    eax
  417d85:	lods   al,BYTE PTR ds:[esi]
  417d86:	sub    eax,0x907a20da
  417d8b:	ss call 0xd3b6:0x532147d2
  417d93:	adc    al,0x15
  417d95:	or     DWORD PTR [edi+0x68ec5e28],ebx
  417d9b:	test   eax,0x46841063
  417da0:	pop    es
  417da1:	or     ah,BYTE PTR [ebx-0x68]
  417da4:	rcl    esp,cl
  417da6:	test   BYTE PTR [esi+0x71],dh
  417da9:	sbb    DWORD PTR [esi+0x19dfd191],0x2c
  417db0:	add    eax,0xe89066a8
  417db5:	ins    DWORD PTR es:[edi],dx
  417db6:	aaa    
  417db7:	aam    0xbc
  417db9:	icebp  
  417dba:	fidiv  WORD PTR [edx-0x6d246477]
  417dc0:	(bad)  
  417dc1:	arpl   bp,di
  417dc3:	imul   ebp,esi,0xa5a2dce3
  417dc9:	call   0xea37:0x56d22e7
  417dd0:	fsub   st(7),st
  417dd2:	retf   
  417dd3:	pop    esi
  417dd4:	xor    al,BYTE PTR [esi]
  417dd6:	pushf  
  417dd7:	push   ebx
  417dd8:	push   ds
  417dd9:	push   esp
  417dda:	pop    es
  417ddb:	sub    eax,0xf5005381
  417de0:	or     edi,edi
  417de2:	adc    BYTE PTR [ebx+edx*2],bl
  417de5:	add    eax,0xf9a9f5bc
  417dea:	mov    edx,cs
  417dec:	mov    esp,0x17af9201
  417df1:	les    ebx,FWORD PTR [ebx-0x2877c59]
  417df7:	xor    ebp,0x35
  417dfa:	hlt    
  417dfb:	or     ah,BYTE PTR [edx-0x4723f81a]
  417e01:	xor    DWORD PTR [ecx+0x23a06496],0xb190a502
  417e0b:	mov    ds:0x9e97615,al
  417e10:	(bad)  
  417e11:	mov    ah,0x89
  417e13:	mov    ecx,ebx
  417e15:	jge    0x417e89
  417e17:	xor    DWORD PTR [ecx-0x5a],ecx
  417e1a:	lahf   
  417e1b:	es inc ecx
  417e1d:	retf   0x2051
  417e20:	loope  0x417ddf
  417e22:	push   esp
  417e23:	add    dl,BYTE PTR [ebp-0x8]
  417e26:	jnp    0x417dca
  417e28:	mov    DWORD PTR [ebp-0x31],eax
  417e2b:	adc    BYTE PTR [edx],al
  417e2d:	mov    bl,ah
  417e2f:	(bad)  
  417e30:	xor    DWORD PTR [ebx+0x2a81926e],eax
  417e36:	mov    DWORD PTR ds:0x243dc1b3,ebp
  417e3c:	jp     0x417dd6
  417e3e:	sti    
  417e3f:	lea    esi,[ecx+0x73]
  417e42:	jl     0x417e19
  417e44:	jecxz  0x417e43
  417e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e47:	aaa    
  417e48:	ret    0x6384
  417e4b:	pushf  
  417e4c:	stc    
  417e4d:	and    esp,edi
  417e4f:	in     al,dx
  417e50:	cmp    DWORD PTR [ecx],0x917308e2
  417e56:	jno    0x417e8d
  417e58:	sub    eax,0xc8678044
  417e5d:	add    ah,al
  417e5f:	sbb    esp,DWORD PTR [eax]
  417e61:	and    ah,BYTE PTR [edx+0x3e]
  417e64:	cld    
  417e65:	push   0x1ca7f34c
  417e6a:	div    BYTE PTR [edx+0x5b]
  417e6d:	sar    BYTE PTR [esi+0x3d],0xb9
  417e71:	mov    bh,0xfe
  417e73:	xchg   BYTE PTR [edi],cl
  417e75:	(bad)  
  417e76:	sti    
  417e77:	mov    esi,0xe6a54301
  417e7c:	add    BYTE PTR [eax+0x16233b9d],dh
  417e82:	js     0x417e8e
  417e84:	inc    eax
  417e85:	and    DWORD PTR [esi+0x6ea10746],edi
  417e8b:	pop    ds
  417e8c:	sub    al,0x93
  417e8e:	xor    esp,DWORD PTR [eax]
  417e90:	leave  
  417e91:	push   esp
  417e92:	ror    BYTE PTR [ebx],cl
  417e94:	call   0x34f0:0xd845e700
  417e9b:	inc    esp
  417e9c:	pop    ebx
  417e9d:	rcr    DWORD PTR [edx-0x52],0x5a
  417ea1:	into   
  417ea2:	cdq    
  417ea3:	sti    
  417ea4:	ror    BYTE PTR [edi+0x3f],cl
  417ea7:	(bad)  
  417ea8:	pop    eax
  417ea9:	fsubr  DWORD PTR [edx+ecx*1+0x1f]
  417ead:	arpl   WORD PTR [esi-0x166b8a0f],di
  417eb3:	cmp    al,0xfe
  417eb5:	add    eax,0xf289a077
  417eba:	pop    edx
  417ebb:	dec    edx
  417ebc:	mov    edx,0x62bfdd25
  417ec1:	lahf   
  417ec2:	push   ss
  417ec3:	clc    
  417ec4:	and    DWORD PTR [ecx+eax*2+0x79],edi
  417ec8:	(bad)  
  417ec9:	cmp    BYTE PTR [eax-0xb],cl
  417ecc:	js     0x417ee9
  417ece:	and    eax,0x2f01626e
  417ed3:	pusha  
  417ed4:	mov    ebp,0xf58885e0
  417ed9:	dec    ecx
  417eda:	pop    esp
  417edb:	(bad)  
  417edc:	xor    cl,dh
  417ede:	clc    
  417edf:	fstp   QWORD PTR [ebx]
  417ee1:	sbb    dl,BYTE PTR [ecx-0x6d1d2b4f]
  417ee7:	jle    0x417ec6
  417ee9:	xchg   edx,eax
  417eea:	mov    ah,al
  417eec:	add    DWORD PTR [ebp+0x2e89f9d0],edi
  417ef2:	in     al,0x5c
  417ef4:	mov    ds:0x894ef13d,al
  417ef9:	fidiv  DWORD PTR [ebp+0x7de80047]
  417eff:	pop    esi
  417f00:	mov    dl,0x5b
  417f02:	sti    
  417f03:	and    al,dh
  417f05:	iret   
  417f06:	inc    edi
  417f07:	daa    
  417f08:	test   eax,0x885631cd
  417f0d:	int    0x9e
  417f0f:	dec    ecx
  417f10:	in     eax,dx
  417f11:	das    
  417f12:	aad    0x32
  417f14:	jns    0x417ef4
  417f16:	add    eax,0xb3176e2
  417f1b:	cwde   
  417f1c:	and    eax,0x26bb8fe9
  417f21:	push   es
  417f22:	sub    al,0x4a
  417f24:	test   DWORD PTR [ecx],esi
  417f26:	or     BYTE PTR [esi-0x11d1dc4b],0xfc
  417f2d:	pushf  
  417f2e:	clc    
  417f2f:	pusha  
  417f30:	mov    ah,0xf4
  417f32:	std    
  417f33:	push   edi
  417f34:	push   ds
  417f35:	pop    ebp
  417f36:	das    
  417f37:	fst    QWORD PTR [ebp+0x6]
  417f3a:	and    DWORD PTR [ebx-0x42e1f451],0xffffff88
  417f41:	add    BYTE PTR [eax+0x22643ed2],bh
  417f47:	shl    bh,1
  417f49:	in     eax,dx
  417f4a:	std    
  417f4b:	mov    al,ds:0x6047bbcb
  417f50:	repnz inc esi
  417f52:	adc    al,0x89
  417f54:	cld    
  417f55:	nop
  417f56:	adc    al,0x7d
  417f58:	xchg   edi,eax
  417f59:	stos   DWORD PTR es:[edi],eax
  417f5a:	mov    esi,0x192d001
  417f5f:	mov    ds:0xae3b5d7f,eax
  417f64:	pop    edx
  417f65:	stc    
  417f66:	sbb    al,0xf8
  417f68:	mov    al,0x94
  417f6a:	mov    ds:0xc6229c0a,eax
  417f6f:	or     al,0x33
  417f71:	push   edi
  417f72:	out    0xe6,eax
  417f74:	mov    bh,0x98
  417f76:	pop    esp
  417f77:	sub    al,0x64
  417f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f7a:	inc    esp
  417f7b:	sar    DWORD PTR [ecx],1
  417f7d:	sbb    DWORD PTR [eax+esi*2+0x6e],esi
  417f81:	or     eax,0x1429a540
  417f86:	cmp    esi,DWORD PTR [ebx]
  417f88:	jg     0x417fde
  417f8a:	popa   
  417f8b:	and    al,0x62
  417f8d:	cwde   
  417f8e:	hlt    
  417f8f:	jecxz  0x417fb9
  417f91:	test   esi,edx
  417f93:	rcl    ebp,1
  417f95:	dec    esi
  417f96:	fistp  DWORD PTR [edi]
  417f98:	cs pop ecx
  417f9a:	jmp    0x417f79
  417f9c:	xlat   BYTE PTR ds:[ebx]
  417f9d:	sbb    ebp,DWORD PTR [ebx]
  417f9f:	inc    edi
  417fa0:	pop    ecx
  417fa1:	xor    ecx,eax
  417fa3:	(bad)  
  417fa4:	cmp    eax,0x866dfbed
  417fa9:	lds    edx,FWORD PTR [ecx-0x55c98052]
  417faf:	imul   edx,esp,0xffffffa7
  417fb2:	or     eax,0x7901fd5d
  417fb7:	addr16 mov ah,0x85
  417fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fbb:	in     eax,0x53
  417fbd:	push   esp
  417fbe:	sahf   
  417fbf:	lock pop ss
  417fc1:	js     0x417f5e
  417fc3:	je     0x417f83
  417fc5:	fld    TBYTE PTR [edx+0x5520818c]
  417fcb:	cmp    al,0x63
  417fcd:	sbb    dl,BYTE PTR [eax+0x15a5bc4c]
  417fd3:	add    al,0x50
  417fd5:	and    esi,DWORD PTR [eax-0x7335a25b]
  417fdb:	ret    
  417fdc:	lods   eax,DWORD PTR ds:[esi]
  417fdd:	or     esp,ebp
  417fdf:	pop    eax
  417fe0:	(bad)  
  417fe1:	xor    ecx,0xffffff95
  417fe4:	into   
  417fe5:	retf   0x502a
  417fe8:	ficom  DWORD PTR [edi+0x54364fa8]
  417fee:	mov    bh,0x3f
  417ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff1:	adc    cl,BYTE PTR [esi-0xc17c2a1]
  417ff7:	imul   esp,ebp,0x65
  417ffa:	mov    edx,0xde48041b
  417fff:	dec    BYTE PTR [eax-0x1b83d073]
  418005:	push   edi
  418006:	xchg   ebx,eax
  418007:	mov    dl,0xb7
  418009:	mov    cl,0x9
  41800b:	push   ds
  41800c:	shl    DWORD PTR [edi],1
  41800e:	dec    eax
  41800f:	popa   
  418010:	icebp  
  418011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418012:	lock push 0xe728226d
  418018:	mov    edx,0x4aa036b6
  41801d:	push   es
  41801e:	mov    esi,0xd8b4ea44
  418023:	sbb    eax,0x87279750
  418028:	xchg   ebp,eax
  418029:	test   BYTE PTR [ecx+edx*4],bh
  41802c:	sub    BYTE PTR [edx+edi*1-0x26],ah
  418030:	test   al,0x97
  418032:	outs   dx,DWORD PTR ds:[si]
  418034:	jl     0x418063
  418036:	mov    esi,0x7c014df6
  41803b:	int3   
  41803c:	jbe    0x4180ae
  41803e:	retf   0xbf5d
  418041:	mov    bh,0x98
  418043:	xor    al,0xe3
  418045:	adc    al,BYTE PTR [esi]
  418047:	cwde   
  418048:	ret    0x427e
  41804b:	out    dx,al
  41804c:	(bad)  
  41804e:	sbb    eax,0x5cddf6da
  418053:	sbb    al,0x50
  418055:	and    BYTE PTR [ecx+0x2e65f0eb],ah
  41805b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41805c:	mov    al,ds:0xadb00ca3
  418061:	xlat   BYTE PTR ds:[ebx]
  418062:	inc    ecx
  418063:	stos   BYTE PTR es:[edi],al
  418064:	sbb    ah,BYTE PTR [ebp*2+0x748b0957]
  41806b:	call   0x6f6759e1
  418070:	sar    BYTE PTR [ebp+esi*8-0x41],0x57
  418075:	hlt    
  418076:	push   edx
  418077:	aas    
  418078:	scas   al,BYTE PTR es:[edi]
  418079:	and    al,0x4c
  41807b:	jns    0x4180b2
  41807d:	xchg   ecx,esp
  41807f:	sub    eax,0xc320c8e0
  418084:	sar    BYTE PTR [eax],cl
  418086:	aaa    
  418087:	in     eax,0x19
  418089:	fiadd  WORD PTR [ecx+0xe]
  41808c:	out    dx,al
  41808d:	xchg   edi,eax
  41808e:	fucomi st,st(3)
  418090:	sub    DWORD PTR [esi-0x74d5bd5d],eax
  418096:	pop    ss
  418097:	enterw 0x7ffc,0x7e
  41809c:	sub    dh,BYTE PTR [ecx+edx*4+0x40b5c91f]
  4180a3:	scas   al,BYTE PTR es:[edi]
  4180a4:	sub    eax,0x3d709220
  4180a9:	test   al,0xa7
  4180ab:	outs   dx,BYTE PTR ds:[esi]
  4180ac:	jne    0x4180b5
  4180ae:	out    0xa2,eax
  4180b0:	pop    esp
  4180b1:	sbb    ah,0x8f
  4180b4:	pop    edi
  4180b5:	fmul   DWORD PTR [edx-0x94aa6c7]
  4180bb:	mov    esi,0x54e4f856
  4180c0:	pop    es
  4180c1:	xor    ebp,DWORD PTR [eax-0x34]
  4180c4:	pusha  
  4180c5:	bound  esp,QWORD PTR [edi+eax*2]
  4180c8:	sbb    eax,0xa8aed15e
  4180cd:	inc    eax
  4180ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180cf:	adc    eax,0x526b79f2
  4180d4:	xchg   edi,eax
  4180d5:	and    cl,dl
  4180d7:	mov    ebp,0xc7bb0623
  4180dc:	enter  0xc5d6,0xa5
  4180e0:	sbb    al,0xcc
  4180e2:	cmp    BYTE PTR [ecx],al
  4180e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180e5:	sar    DWORD PTR [eax-0x644aa81c],1
  4180eb:	mov    esp,0x7dcd8d59
  4180f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180f1:	ss or  ebx,esi
  4180f4:	pop    ecx
  4180f5:	popf   
  4180f6:	pop    ecx
  4180f7:	pop    ebx
  4180f8:	jg     0x4180e7
  4180fa:	mov    ds:0x680fbfb3,al
  4180ff:	sbb    al,0xc0
  418101:	pop    esp
  418102:	leave  
  418103:	lods   eax,DWORD PTR ds:[esi]
  418104:	sbb    edx,DWORD PTR [ebx]
  418106:	adc    DWORD PTR [edx-0x416cfffd],0xa
  41810d:	sub    DWORD PTR [edi+0x553ba681],esp
  418113:	push   edi
  418114:	or     DWORD PTR [edi],eax
  418116:	call   0xcc74376e
  41811b:	mov    ebp,DWORD PTR [edx]
  41811d:	cmp    esi,edi
  41811f:	cli    
  418120:	inc    edi
  418121:	retf   0xf594
  418124:	dec    esp
  418125:	push   0xfe2ba4c2
  41812a:	cmp    ch,BYTE PTR [edi-0x6f510472]
  418130:	aad    0x62
  418132:	mov    esp,0x1001dbff
  418137:	xchg   BYTE PTR [ebx],al
  418139:	bound  ebx,QWORD PTR [ebx+0x281d3d3e]
  41813f:	retf   
  418140:	inc    ecx
  418141:	sbb    ebx,DWORD PTR [eax+edx*2-0x67ab57b8]
  418148:	sbb    ah,BYTE PTR [edi-0x5bd9dbb9]
  41814e:	mov    ah,bl
  418150:	cmp    BYTE PTR [eax],dl
  418152:	test   dh,bl
  418154:	fsincos 
  418156:	xchg   BYTE PTR [esp+edx*2],dh
  418159:	aad    0x2a
  41815b:	or     cl,BYTE PTR cs:0x6bad9a81
  418162:	outs   dx,BYTE PTR ds:[esi]
  418163:	cmp    bh,BYTE PTR [edi+edi*2+0x68]
  418167:	inc    edi
  418168:	test   bh,ch
  41816a:	mov    ds:0x87e99dcd,eax
  41816f:	imul   esp,DWORD PTR [ecx-0x6],0xffffffb2
  418173:	cmp    ch,BYTE PTR [esi]
  418175:	shr    DWORD PTR cs:[ebx+0x5b],0xd8
  41817a:	fisttp WORD PTR [edx]
  41817c:	hlt    
  41817d:	mov    ds:0x38f3bb0a,eax
  418182:	sub    edi,esi
  418184:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418186:	xchg   ebx,eax
  418187:	mov    ebp,0xa912db28
  41818c:	push   edx
  41818d:	cli    
  41818e:	fld    QWORD PTR [ebp+0x2c4cbd50]
  418194:	fucomip st,st(6)
  418196:	into   
  418197:	in     eax,dx
  418198:	cwde   
  418199:	mov    DWORD PTR [edx-0x5dfbbcad],ecx
  41819f:	aaa    
  4181a0:	jmp    0xec31:0x6e3e9c17
  4181a7:	(bad)  ds:0xb79d110a
  4181ad:	sbb    DWORD PTR ds:0xc052bb1f,eax
  4181b3:	xchg   ebp,eax
  4181b4:	mov    edi,0xffc68d41
  4181b9:	cwde   
  4181ba:	mov    ds:0x302cb68,eax
  4181bf:	shl    BYTE PTR [ecx],cl
  4181c1:	mov    dl,0xc4
  4181c3:	push   ss
  4181c4:	pop    esi
  4181c5:	leave  
  4181c6:	ret    
  4181c7:	(bad)  
  4181c8:	in     al,dx
  4181c9:	pop    ebx
  4181ca:	mov    cs,WORD PTR [ebp-0x23c90b94]
  4181d0:	cmp    al,ch
  4181d2:	sbb    dl,dl
  4181d4:	test   al,0x5b
  4181d6:	add    ebp,DWORD PTR [esi]
  4181d8:	popa   
  4181d9:	sub    edi,DWORD PTR [edi]
  4181db:	ds leave 
  4181dd:	neg    BYTE PTR [edi-0x5ca80b0f]
  4181e3:	(bad)  
  4181e4:	aas    
  4181e5:	sbb    esi,ecx
  4181e7:	sbb    eax,0x30c8a8b1
  4181ec:	in     al,dx
  4181ed:	jne    0x41821f
  4181ef:	adc    al,0x22
  4181f1:	jb     0x4181d6
  4181f3:	fistp  DWORD PTR [ebx]
  4181f5:	mov    eax,0xfdd9000f
  4181fa:	sub    al,0xc1
  4181fc:	std    
  4181fd:	call   0xc7bb:0x3abc9044
  418204:	jmp    0xd948d350
  418209:	mov    al,0xca
  41820b:	into   
  41820c:	out    dx,al
  41820d:	cwde   
  41820e:	push   ds
  41820f:	dec    edx
  418210:	loopne 0x418245
  418212:	jge    0x4181af
  418214:	jae    0x4181fd
  418216:	sti    
  418217:	inc    esp
  418218:	inc    esi
  418219:	mov    fs,WORD PTR [edi+0x3]
  41821c:	fdivr  st(0),st
  41821e:	add    ecx,ebp
  418220:	ins    DWORD PTR es:[edi],dx
  418221:	push   ds
  418222:	xchg   ecx,eax
  418223:	cmp    cl,BYTE PTR [ebx-0x2]
  418226:	jle    0x41826e
  418228:	dec    eax
  418229:	ret    
  41822a:	nop
  41822b:	test   eax,0x7c644dd3
  418230:	lods   eax,DWORD PTR ds:[esi]
  418231:	and    ebp,DWORD PTR [eax-0x1c]
  418234:	xchg   edx,eax
  418235:	pusha  
  418236:	fdiv   DWORD PTR [esp+ecx*1-0x24]
  41823a:	jo     0x4182aa
  41823c:	sar    DWORD PTR [ecx-0x7d],1
  41823f:	mov    ch,0x8d
  418241:	(bad)  
  418243:	fdiv   DWORD PTR [ebx]
  418245:	add    eax,0xf6958264
  41824a:	dec    edi
  41824b:	jg     0x41829f
  41824d:	ret    
  41824e:	inc    esi
  41824f:	inc    ebp
  418250:	out    dx,al
  418251:	xchg   esi,eax
  418252:	out    dx,al
  418253:	adc    edx,esi
  418255:	test   al,0xf3
  418257:	jno    0x4182ae
  418259:	mov    WORD PTR [ecx+0x617dd00c],es
  41825f:	dec    edx
  418260:	inc    ecx
  418261:	pop    es
  418262:	or     al,dl
  418264:	lods   al,BYTE PTR ds:[esi]
  418265:	jbe    0x4182e5
  418267:	mov    DWORD PTR [ecx+0x43],eax
  41826a:	mov    WORD PTR [edx],ss
  41826c:	stc    
  41826d:	test   DWORD PTR [edi+0x50],edi
  418270:	jge    0x418243
  418272:	scas   eax,DWORD PTR es:[edi]
  418273:	icebp  
  418274:	cmp    BYTE PTR [edx],0xa
  418277:	shl    BYTE PTR [ebp+0x1b32f2b2],0x36
  41827e:	dec    ecx
  41827f:	xchg   esi,eax
  418280:	pop    eax
  418281:	sti    
  418282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418283:	xor    eax,0xed7b1103
  418288:	aas    
  418289:	jl     0x41824e
  41828b:	push   edi
  41828c:	out    dx,eax
  41828d:	clc    
  41828e:	sub    DWORD PTR ds:0xe2af4040,ecx
  418294:	fwait
  418295:	pop    ecx
  418296:	push   edx
  418297:	xchg   ecx,eax
  418298:	outs   dx,DWORD PTR ds:[esi]
  418299:	mov    ecx,0x29e64bb4
  41829e:	pop    ss
  41829f:	add    DWORD PTR [edx],ebx
  4182a1:	sbb    al,0x1d
  4182a3:	add    eax,0xbbe7744
  4182a8:	daa    
  4182a9:	out    0x7a,eax
  4182ab:	jnp    0x4182a2
  4182ad:	add    ebp,eax
  4182af:	stos   DWORD PTR es:[edi],eax
  4182b0:	or     al,0xc9
  4182b2:	and    bl,BYTE PTR [ebx+0x6d]
  4182b5:	outs   dx,BYTE PTR ds:[esi]
  4182b6:	mov    esp,0x4b858fef
  4182bb:	call   0x38716bd8
  4182c0:	ret    
  4182c1:	sbb    BYTE PTR [esi-0x66d83ca0],ch
  4182c7:	jge    0x418328
  4182c9:	dec    eax
  4182ca:	(bad)  
  4182cb:	xchg   edi,eax
  4182cc:	cmp    DWORD PTR [ecx-0x1f],ebx
  4182cf:	nop
  4182d0:	push   edi
  4182d1:	pop    ss
  4182d2:	or     edi,DWORD PTR [ebx-0x1a869453]
  4182d8:	push   0xffffffaa
  4182da:	lods   eax,DWORD PTR ds:[esi]
  4182db:	sti    
  4182dc:	jl     0x418351
  4182de:	push   ds
  4182df:	mov    dl,0x33
  4182e1:	jp     0x4182fa
  4182e3:	push   edx
  4182e4:	out    dx,al
  4182e5:	mov    WORD PTR [eax-0x32d103b1],?
  4182eb:	pmulhw mm7,QWORD PTR [esi]
  4182ee:	out    dx,eax
  4182ef:	xchg   esp,eax
  4182f0:	shl    DWORD PTR [edx+esi*4],0x7b
  4182f4:	push   ebx
  4182f5:	arpl   ax,cx
  4182f7:	push   es
  4182f8:	in     eax,0x53
  4182fa:	mov    ds:0xcff1fd28,al
  4182ff:	push   0x4b
  418301:	push   0x2e
  418303:	dec    edx
  418304:	lea    esp,[edi]
  418306:	fldenv [esi]
  418308:	push   es
  418309:	rcr    DWORD PTR [ebx+0x47e79f84],cl
  41830f:	daa    
  418310:	jmp    0xf96c8425
  418315:	loop   0x4182f7
  418317:	imul   eax,DWORD PTR ds:0xedfe5627,0x88f2f30d
  418321:	pop    ecx
  418322:	mov    edx,DWORD PTR [ebx-0x6b]
  418325:	pusha  
  418326:	rcl    BYTE PTR [eax+0x1d],1
  418329:	mov    ds:0x80a7c683,al
  41832e:	jmp    0xe08935
  418333:	pop    ds
  418334:	xchg   esp,eax
  418335:	cwde   
  418336:	dec    eax
  418337:	daa    
  418338:	cmp    eax,0xeb063817
  41833d:	mov    ecx,0x2a4116e4
  418342:	shl    BYTE PTR [eax+0xfe7e91d],0x45
  418349:	adc    DWORD PTR [esi+0x1f42799b],esp
  41834f:	mov    WORD PTR gs:[ebx-0x21],ss
  418353:	push   0xffffffef
  418355:	and    eax,esp
  418357:	dec    esi
  418358:	pop    ecx
  418359:	mov    ds:0x40acf126,eax
  41835e:	fmul   st,st(5)
  418360:	aam    0xef
  418362:	shr    BYTE PTR [ebp+0x47c8f0a9],cl
  418368:	fnsave [edx]
  41836a:	jmp    0x418366
  41836c:	dec    edx
  41836d:	mov    al,ds:0xc9ba5ff3
  418372:	stos   BYTE PTR es:[edi],al
  418373:	xor    eax,0x407111fc
  418378:	ffree  st(6)
  41837a:	xor    BYTE PTR [eax+0x10e34800],0x74
  418381:	cmp    BYTE PTR [ebx],ah
  418383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418384:	dec    edx
  418385:	aaa    
  418386:	mov    al,0xd
  418388:	xchg   ebx,eax
  418389:	add    eax,0xb6d00d01
  41838e:	mov    ds:0xa42a0042,al
  418393:	(bad)  
  418394:	imul   esp,DWORD PTR [ebx],0x764f4c6a
  41839a:	lods   al,BYTE PTR ds:[esi]
  41839b:	jne    0x4183b9
  41839d:	xor    BYTE PTR [ebx+0x7f],bh
  4183a0:	add    al,0xdd
  4183a2:	cmp    eax,0x85e2b965
  4183a7:	dec    edi
  4183a8:	(bad)  
  4183aa:	sub    bl,cl
  4183ac:	sub    al,0xb7
  4183ae:	mov    dh,0x7f
  4183b0:	gs mov edi,0x522cfbea
  4183b6:	dec    ebx
  4183b7:	call   0x5485:0x4afadaf8
  4183be:	push   eax
  4183bf:	jg     0x41842e
  4183c1:	xchg   BYTE PTR [esi+ecx*8+0x40],ah
  4183c5:	jb     0x4183b7
  4183c7:	clc    
  4183c8:	shl    BYTE PTR [esi],0x8
  4183cb:	jmp    0xf83d3fc5
  4183d0:	(bad)  
  4183d1:	adc    edx,eax
  4183d3:	sbb    edx,esp
  4183d5:	jns    0x418363
  4183d7:	lock lock rol BYTE PTR [edx-0x68aedecb],cl
  4183df:	les    edi,FWORD PTR [esi+0x12]
  4183e2:	popa   
  4183e3:	and    eax,0x450dc25f
  4183e8:	inc    edi
  4183e9:	dec    ecx
  4183ea:	push   ecx
  4183eb:	xchg   edx,eax
  4183ec:	cld    
  4183ed:	(bad)  
  4183ee:	mov    bl,0x45
  4183f0:	inc    ecx
  4183f1:	and    edx,ebp
  4183f3:	xor    eax,0x210a0905
  4183f8:	push   eax
  4183f9:	jmp    0x41845a
  4183fb:	mov    ecx,0x129b8698
  418400:	int3   
  418401:	test   al,0x7c
  418403:	test   al,0xea
  418405:	jo     0x418454
  418407:	pop    ecx
  418408:	jmp    0x4183f0
  41840a:	push   ss
  41840b:	(bad)  
  41840c:	addr16 xchg ebx,eax
  41840e:	into   
  41840f:	mov    ds:0xb526e5e5,al
  418414:	xchg   DWORD PTR [esi],esi
  418416:	test   BYTE PTR [edi-0x4cf6e6c1],bh
  41841c:	inc    ecx
  41841d:	xor    ebp,ebp
  41841f:	mov    ebp,0x44872a72
  418424:	mov    bl,0xeb
  418426:	adc    al,0x80
  418428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418429:	fimul  DWORD PTR [ebx+0x17]
  41842c:	sub    cl,ch
  41842e:	push   ecx
  41842f:	addr16 int3 
  418431:	aaa    
  418432:	adc    eax,0x31c077c9
  418437:	stos   DWORD PTR es:[edi],eax
  418438:	cmp    al,0x5a
  41843a:	ret    
  41843b:	adc    esi,DWORD PTR [ebx+0x6a18d3a1]
  418441:	add    esi,edi
  418443:	adc    al,0xe4
  418445:	gs (bad) 
  418447:	shl    BYTE PTR [ecx+0x46159896],1
  41844d:	jns    0x4183ff
  41844f:	cmp    cl,BYTE PTR [eax]
  418451:	aaa    
  418452:	idiv   DWORD PTR [ebp+0xc]
  418455:	pop    ds
  418456:	fiadd  DWORD PTR [ebp-0x34cce709]
  41845c:	ss jns 0x4184ae
  41845f:	aas    
  418460:	adc    ebp,DWORD PTR [ecx-0x6f]
  418463:	out    dx,eax
  418464:	cmp    BYTE PTR [ebp-0x5b02cf93],dl
  41846a:	out    0xe4,al
  41846c:	aaa    
  41846d:	dec    ebx
  41846e:	mov    edx,0x2047f161
  418473:	adc    esp,DWORD PTR [ebp-0xbd5c24]
  418479:	shl    BYTE PTR [edx],1
  41847b:	enter  0xc16a,0x5a
  41847f:	add    ah,al
  418481:	mov    ds:0x3deb2d73,eax
  418486:	fistp  WORD PTR [edx-0x1ad81afa]
  41848c:	push   0xf8c3b597
  418491:	in     al,dx
  418492:	add    al,0x37
  418494:	std    
  418495:	loop   0x41850e
  418497:	lods   al,BYTE PTR ds:[esi]
  418498:	or     esi,eax
  41849a:	icebp  
  41849b:	stos   BYTE PTR es:[edi],al
  41849c:	mov    dh,0xba
  41849e:	stc    
  41849f:	add    DWORD PTR [ecx+0x12906799],esp
  4184a5:	js     0x4184bf
  4184a7:	outs   dx,BYTE PTR ds:[esi]
  4184a8:	pop    esp
  4184a9:	rcr    al,1
  4184ab:	icebp  
  4184ac:	mov    ah,0xcf
  4184ae:	sub    DWORD PTR ds:0xcb0d69ed,0x7
  4184b5:	add    DWORD PTR [eax+ebp*4+0x7c],esp
  4184b9:	scas   al,BYTE PTR es:[edi]
  4184ba:	mov    ebp,0xe172451a
  4184bf:	in     eax,0x52
  4184c1:	in     al,dx
  4184c2:	pop    ecx
  4184c3:	(bad)  
  4184c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184c5:	mov    cl,0xbc
  4184c7:	cwde   
  4184c8:	jbe    0x418493
  4184ca:	mov    ds:0x300ade94,eax
  4184d0:	pop    edi
  4184d1:	imul   ecx
  4184d3:	xor    DWORD PTR [ecx-0x385d42c4],0x3f3f8319
  4184dd:	or     eax,ebp
  4184df:	adc    eax,DWORD PTR [eax]
  4184e1:	mov    ebp,0x1e0b999b
  4184e6:	sbb    eax,0x11877fe5
  4184eb:	lods   eax,DWORD PTR ds:[esi]
  4184ec:	sti    
  4184ed:	jno    0x418497
  4184ef:	jae    0x4184bc
  4184f1:	popf   
  4184f2:	push   es
  4184f3:	xchg   BYTE PTR [esi+0x55],cl
  4184f6:	sbb    ebp,ebp
  4184f8:	scas   al,BYTE PTR es:[edi]
  4184f9:	shl    DWORD PTR [eax],0x7a
  4184fc:	mov    edx,0x54ededdb
  418501:	loop   0x41854b
  418503:	dec    edi
  418504:	aam    0x0
  418506:	pop    edx
  418507:	mov    ebx,0x2f2b7925
  41850c:	scas   eax,DWORD PTR es:[edi]
  41850d:	or     DWORD PTR [ebx+ebp*2-0x20],ebp
  418511:	scas   eax,DWORD PTR es:[edi]
  418512:	je     0x4184a7
  418514:	jecxz  0x4184e9
  418516:	imul   DWORD PTR [ecx+0x53030608]
  41851c:	stc    
  41851d:	lods   eax,DWORD PTR ds:[esi]
  41851e:	inc    esp
  41851f:	retf   
  418520:	xlat   BYTE PTR ds:[ebx]
  418521:	loopne 0x41859e
  418523:	retf   
  418524:	rcl    BYTE PTR [edx-0x62a59ce4],1
  41852a:	sahf   
  41852b:	fisub  DWORD PTR [eax+0x36]
  41852e:	cmp    dh,BYTE PTR [edx-0x1f]
  418531:	fdivr  DWORD PTR [eax+0x17]
  418534:	sub    DWORD PTR [eax+0x6b],ebx
  418537:	repnz cbw 
  41853a:	sub    esp,esp
  41853c:	(bad)  
  41853d:	mov    ecx,0x5e816c37
  418542:	pop    ss
  418543:	add    BYTE PTR [ebp+0x51],al
  418546:	push   ds
  418547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418548:	add    dl,BYTE PTR [ebx+0x49]
  41854b:	out    0x4f,al
  41854d:	addr16 sahf 
  41854f:	sbb    edx,0x7af76694
  418555:	int3   
  418556:	clc    
  418557:	fdiv   st,st(3)
  418559:	enter  0xe5cc,0x25
  41855d:	and    al,0xd9
  41855f:	xor    DWORD PTR [eax],ebx
  418561:	sbb    al,0x2e
  418563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418564:	sub    BYTE PTR [ecx+0x49],dh
  418567:	pusha  
  418568:	or     bh,BYTE PTR [ebx-0x7273fb8c]
  41856e:	ins    BYTE PTR es:[edi],dx
  41856f:	sub    ecx,ebx
  418571:	pop    ebp
  418572:	out    dx,eax
  418573:	in     al,dx
  418574:	out    dx,al
  418575:	inc    esi
  418576:	ret    0xbaed
  418579:	dec    edi
  41857a:	jmp    0x2b5e:0x4c399c73
  418581:	sbb    BYTE PTR [edi+0x6c],0x4a
  418585:	dec    esp
  418586:	sbb    BYTE PTR [edi-0x63],bh
  418589:	or     bl,cl
  41858b:	popa   
  41858c:	fnstcw WORD PTR [edi-0x18]
  41858f:	retf   0x282e
  418592:	push   cs
  418593:	in     eax,0x2
  418595:	sbb    ebp,DWORD PTR [edi]
  418597:	(bad)  
  418598:	retf   0xa1f
  41859b:	outs   dx,DWORD PTR ds:[esi]
  41859c:	stos   BYTE PTR es:[edi],al
  41859d:	add    ch,BYTE PTR [edi-0x415a42d0]
  4185a3:	push   ss
  4185a4:	sub    ah,BYTE PTR [ecx]
  4185a6:	call   FWORD PTR [ebp-0x41249078]
  4185ac:	(bad)  
  4185ad:	enter  0xe985,0x2f
  4185b1:	leave  
  4185b2:	pop    ss
  4185b3:	rcr    BYTE PTR [eax],cl
  4185b5:	cmc    
  4185b6:	dec    ecx
  4185b7:	(bad)  
  4185b8:	xor    BYTE PTR [edx-0x1c42d658],ch
  4185be:	stos   DWORD PTR es:[edi],eax
  4185bf:	loop   0x4185fe
  4185c1:	xor    BYTE PTR [ecx-0x56],dl
  4185c4:	(bad)  
  4185c5:	and    ebx,DWORD PTR [ebp-0x3b8b2269]
  4185cb:	cmp    DWORD PTR [ecx],ebp
  4185cd:	mov    edi,?
  4185cf:	aaa    
  4185d0:	(bad)  
  4185d1:	xor    eax,0x6de12571
  4185d6:	adc    eax,0xde16d815
  4185db:	and    esp,DWORD PTR [ebx+0x51529de4]
  4185e1:	ja     0x418620
  4185e3:	out    dx,eax
  4185e4:	cld    
  4185e5:	pop    edx
  4185e6:	jnp    0x4185d9
  4185e8:	jle    0x21d363a3
  4185ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ef:	lea    edi,[ebx+0x36]
  4185f2:	das    
  4185f3:	pop    esp
  4185f4:	push   ebp
  4185f5:	sbb    esi,DWORD PTR [edx+0xe4d34c9]
  4185fb:	sbb    BYTE PTR [eax+0x16],cl
  4185fe:	(bad)  
  4185ff:	mov    ebx,ds
  418601:	sbb    al,0x67
  418603:	retf   0xa648
  418606:	out    0x33,al
  418608:	lea    esi,[ecx+0x5]
  41860b:	adc    BYTE PTR [eax],dh
  41860d:	aas    
  41860e:	push   es
  41860f:	jns    0x4185f1
  418611:	mov    ebx,0x53289708
  418616:	and    DWORD PTR [di],edx
  418619:	hlt    
  41861a:	cmp    al,BYTE PTR [edx]
  41861c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41861d:	pop    ss
  41861e:	ins    DWORD PTR es:[edi],dx
  41861f:	or     eax,0xd8bcd1a5
  418624:	stos   BYTE PTR es:[edi],al
  418625:	mov    WORD PTR [ebp-0x7],gs
  418628:	ss xchg ebx,eax
  41862a:	mov    ds:0x56b2b79,eax
  41862f:	fisubr WORD PTR [edi+eiz*4-0xa]
  418633:	shl    al,1
  418635:	repz dec ecx
  418637:	add    DWORD PTR [ebx-0x24f9420c],ebp
  41863d:	imul   ebp,ebx,0x3f0e9467
  418643:	clc    
  418644:	stos   BYTE PTR es:[edi],al
  418645:	adc    ah,cl
  418647:	inc    ebp
  418648:	inc    BYTE PTR [ecx]
  41864a:	xor    ebx,DWORD PTR [ecx+eax*8-0x58cb79a]
  418651:	add    ebx,DWORD PTR [ebx-0x2d7a21a2]
  418657:	pusha  
  418658:	cli    
  418659:	mov    esp,0xe29e93b0
  41865e:	retf   0xba81
  418661:	lods   al,BYTE PTR ds:[esi]
  418662:	mov    eax,0xa35dad00
  418667:	push   ecx
  418668:	jb     0x418600
  41866a:	call   0x2cf8a73f
  41866f:	in     eax,dx
  418670:	add    al,0x22
  418672:	inc    esi
  418673:	int    0xb8
  418675:	jbe    0x4186e3
  418677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418678:	(bad)  
  41867a:	daa    
  41867b:	ficom  WORD PTR [ebx]
  41867d:	add    esi,DWORD PTR [eax+eax*1-0x54766857]
  418684:	dec    ecx
  418685:	push   cs
  418686:	dec    edi
  418687:	inc    ecx
  418688:	je     0x4186a2
  41868a:	mov    BYTE PTR [eax-0x77],bl
  41868d:	push   edx
  41868e:	jbe    0x418662
  418690:	jmp    0x53b3a82d
  418695:	dec    edi
  418696:	mov    ebx,0xa206e42b
  41869b:	push   0xffffffe7
  41869d:	ret    
  41869e:	push   ds
  41869f:	inc    ecx
  4186a0:	cmp    esi,DWORD PTR [esi]
  4186a2:	push   esp
  4186a3:	ss dec edi
  4186a5:	sahf   
  4186a6:	or     BYTE PTR [edi-0x71ea812c],bh
  4186ac:	push   eax
  4186ad:	jnp    0x41870e
  4186af:	scas   al,BYTE PTR es:[edi]
  4186b0:	test   DWORD PTR [edi-0x3ecda507],ecx
  4186b6:	inc    eax
  4186b7:	(bad)  
  4186b8:	repnz pop ebp
  4186ba:	push   ss
  4186bb:	jo     0x41871b
  4186bd:	sbb    BYTE PTR [esi+0x55],al
  4186c0:	inc    ebp
  4186c1:	fistp  QWORD PTR [ebp+0x25]
  4186c4:	repnz mov al,ds:0x4ab96f72
  4186ca:	jo     0x418672
  4186cc:	ins    DWORD PTR es:[edi],dx
  4186cd:	test   al,0xaf
  4186cf:	scas   eax,DWORD PTR es:[edi]
  4186d0:	adc    ebx,DWORD PTR [esi+0x75]
  4186d3:	gs dec esp
  4186d5:	pop    es
  4186d6:	outs   dx,DWORD PTR ds:[esi]
  4186d7:	(bad)  
  4186d8:	lahf   
  4186d9:	pop    ebp
  4186da:	fdivr  st(7),st
  4186dc:	int3   
  4186dd:	icebp  
  4186de:	sub    dh,dh
  4186e0:	push   ds
  4186e1:	lds    ebp,FWORD PTR [ebx+0x7c]
  4186e4:	test   DWORD PTR [eax+ebp*8-0x7f],ebp
  4186e8:	adc    al,0x2e
  4186ea:	and    eax,ebx
  4186ec:	mov    edi,0x7d15f986
  4186f1:	lods   eax,DWORD PTR ds:[esi]
  4186f2:	xchg   ebx,eax
  4186f3:	inc    DWORD PTR [ebx-0x2c]
  4186f6:	enter  0x1251,0xfb
  4186fa:	pop    ss
  4186fb:	and    al,0x5a
  4186fd:	repnz sub ebx,esi
  418700:	mov    cl,BYTE PTR ds:0x76d803f3
  418706:	mov    dl,0x8c
  418708:	jp     0x41873f
  41870a:	and    DWORD PTR [eax],ebp
  41870c:	arpl   WORD PTR [ebx+0x7176bf6b],sp
  418712:	dec    edx
  418713:	(bad)  
  418714:	imul   ecx,DWORD PTR [eax],0xd07b89a9
  41871a:	gs cmp eax,0x1fe46311
  418720:	test   ah,al
  418722:	push   eax
  418723:	adc    al,0xcd
  418725:	jno    0x41875b
  418727:	and    bl,ah
  418729:	shl    DWORD PTR [edx+edi*8],cl
  41872c:	dec    esp
  41872d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41872f:	jb     0x41879c
  418731:	mov    dl,0xa2
  418733:	lahf   
  418734:	fstp   st(3)
  418736:	cmp    BYTE PTR [ebp-0x7c291cbc],ah
  41873c:	popa   
  41873d:	push   ebp
  41873e:	rcl    BYTE PTR [ebx-0x795ebefa],0x5d
  418745:	repz xchg ebx,eax
  418747:	xchg   ebx,eax
  418748:	icebp  
  418749:	bound  esi,QWORD PTR ds:0x130661f7
  41874f:	mov    esp,0x1735d2d
  418754:	sub    bl,BYTE PTR [ebx-0x364f6298]
  41875a:	dec    esp
  41875b:	dec    ecx
  41875c:	mov    ecx,0xcce65bbe
  418761:	cmp    esi,DWORD PTR [ebx]
  418763:	xlat   BYTE PTR ds:[ebx]
  418764:	add    al,0xa8
  418766:	bound  esi,QWORD PTR [eax+0xf8bd891]
  41876c:	or     al,0xd3
  41876e:	add    eax,0x2000e7dd
  418773:	addr16 jg 0x4187ba
  418776:	jne    0x418734
  418778:	xor    BYTE PTR [ecx-0x651c68ce],bl
  41877e:	jae    0x4187ff
  418780:	mov    bl,BYTE PTR [ebx+esi*2-0x1dc0cd18]
  418787:	add    edx,0xfe205473
  41878d:	sbb    ebp,DWORD PTR [ecx-0x353df677]
  418793:	lahf   
  418794:	mov    al,0xd0
  418796:	xchg   edi,eax
  418797:	push   cs
  418798:	mov    ah,0xc0
  41879a:	pop    edi
  41879b:	push   ebp
  41879c:	outs   dx,BYTE PTR ds:[esi]
  41879d:	popa   
  41879e:	int3   
  41879f:	lods   al,BYTE PTR ds:[esi]
  4187a0:	mov    ch,0x3d
  4187a2:	lods   eax,DWORD PTR ds:[esi]
  4187a3:	ins    BYTE PTR es:[edi],dx
  4187a4:	sub    eax,0xb6ae8a93
  4187aa:	mov    ebx,0xbfece6bf
  4187af:	call   0xcc53:0x35a4eaa8
  4187b6:	and    al,BYTE PTR [esi]
  4187b8:	fsin   
  4187ba:	mov    ebx,0xe1364f6
  4187bf:	mov    esp,0x5774a6bd
  4187c4:	sub    ebp,ebp
  4187c6:	lods   eax,DWORD PTR ds:[esi]
  4187c7:	cmp    edi,DWORD PTR [edi]
  4187c9:	lock sbb al,0x5d
  4187cc:	xchg   edi,eax
  4187cd:	sub    dl,BYTE PTR [edx-0x4e92de7c]
  4187d3:	(bad)  
  4187d4:	enter  0xc036,0x11
  4187d8:	div    eax
  4187da:	jne    0x4187e6
  4187dc:	test   eax,0x7951926c
  4187e1:	out    dx,al
  4187e2:	cmp    eax,0x4d117753
  4187e7:	push   edx
  4187e8:	hlt    
  4187e9:	push   ecx
  4187ea:	adc    DWORD PTR [ebx+0x4b],edx
  4187ed:	scas   eax,DWORD PTR es:[edi]
  4187ee:	add    DWORD PTR [esi+esi*4-0x9936257],edx
  4187f5:	and    dh,BYTE PTR [eax]
  4187f7:	jb     0x4187f1
  4187f9:	lea    esi,[esi+0x56bcc5bc]
  4187ff:	push   edi
  418800:	ins    BYTE PTR es:[edi],dx
  418801:	xchg   edi,eax
  418802:	jge    0x418861
  418804:	push   esp
  418805:	popa   
  418806:	dec    eax
  418807:	dec    esp
  418808:	push   edi
  418809:	sbb    bh,BYTE PTR [ebx-0x2a800c0c]
  41880f:	inc    esp
  418810:	(bad)
  418813:	sar    BYTE PTR [ebp-0x76],cl
  418816:	mov    fs,esi
  418818:	mov    WORD PTR [esi-0x58],?
  41881b:	cli    
  41881c:	cmp    DWORD PTR [eax+0x78],edx
  41881f:	adc    DWORD PTR [ecx+0xbcca7e0],edi
  418825:	dec    eax
  418826:	popa   
  418827:	cli    
  418828:	arpl   WORD PTR [ebx+eax*4],sp
  41882b:	retf   0xc11
  41882e:	and    eax,0xf7d1584
  418833:	cli    
  418834:	add    eax,0x59daa9f9
  418839:	mov    esp,0x9cb8eee9
  41883e:	jns    0x41888d
  418840:	adc    esi,ebp
  418842:	loope  0x41882b
  418844:	lds    ecx,FWORD PTR [esi-0x3d]
  418847:	nop
  418848:	dec    ecx
  418849:	push   0xea9b1b97
  41884e:	mov    esi,0xfe52b4b
  418853:	shl    BYTE PTR [esi-0x41],1
  418856:	rol    DWORD PTR [esi-0x6a48e7ed],0xa0
  41885d:	mov    esp,es
  41885f:	in     al,dx
  418860:	dec    esi
  418861:	stos   DWORD PTR es:[edi],eax
  418862:	and    cl,BYTE PTR [ebp+0x32]
  418865:	mov    esp,0x11244292
  41886a:	inc    edi
  41886b:	cdq    
  41886c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41886d:	enter  0xb268,0x2
  418871:	xchg   DWORD PTR [esi],ebp
  418873:	test   eax,0x452bfd71
  418878:	jb     0x4188c7
  41887a:	pop    ebx
  41887b:	xchg   esp,eax
  41887c:	cld    
  41887d:	add    eax,0xa8a244a6
  418882:	test   DWORD PTR [eax+0x70706235],esi
  418888:	bound  edx,QWORD PTR [edi+0x2f18ffa8]
  41888e:	pop    ss
  41888f:	jnp    0x418860
  418891:	inc    ebx
  418892:	inc    edx
  418893:	pushf  
  418894:	adc    ecx,DWORD PTR [ebp+0x4c]
  418897:	fmul   DWORD PTR [edi-0x65]
  41889a:	mov    ebp,0xbaa3da6d
  41889f:	stc    
  4188a0:	mov    ebp,0x4b802e5
  4188a5:	lahf   
  4188a6:	lahf   
  4188a7:	mov    esp,0x222e95d9
  4188ac:	inc    BYTE PTR [ebx-0x42d7566d]
  4188b2:	shl    bl,0x2b
  4188b5:	dec    esi
  4188b6:	mov    edi,0x55fa8274
  4188bb:	jns    0x418840
  4188bd:	fadd   QWORD PTR [esi+0x68]
  4188c0:	xor    edi,eax
  4188c2:	mov    ebp,0x6d4f4ce1
  4188c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188c8:	pop    ds
  4188c9:	or     ecx,esp
  4188cb:	sub    BYTE PTR [ebp+0x5a],ch
  4188ce:	jns    0x4188e1
  4188d0:	inc    edi
  4188d1:	in     al,0xbd
  4188d3:	rol    DWORD PTR [edi+0x415a49e0],1
  4188d9:	fisttp DWORD PTR [ebx-0x40]
  4188dc:	jecxz  0x41889b
  4188de:	xor    eax,0xc90a6ea
  4188e3:	push   edx
  4188e4:	sub    edx,DWORD PTR [edx+0x250e87f2]
  4188ea:	xor    DWORD PTR fs:[edx],edx
  4188ed:	rcl    DWORD PTR [ecx+0x25],1
  4188f0:	cld    
  4188f1:	(bad)
  4188f4:	cld    
  4188f5:	fmul   DWORD PTR [edx-0x3e]
  4188f8:	mov    WORD PTR [eax],gs
  4188fa:	jp     0x418944
  4188fc:	nop
  4188fd:	dec    esp
  4188fe:	je     0x4188b7
  418900:	test   DWORD PTR [eax-0x5f],ecx
  418903:	push   cs
  418904:	loopne 0x418896
  418906:	fild   QWORD PTR [ebp+0x53]
  418909:	sbb    ecx,edi
  41890b:	repz sti 
  41890d:	sub    dh,ch
  41890f:	and    dh,dh
  418911:	jge    0x41892b
  418913:	(bad)  
  418914:	call   0x759fac76
  418919:	jl     0x41897b
  41891b:	shl    DWORD PTR [eax],1
  41891d:	and    al,0x80
  41891f:	sub    al,0xcb
  418921:	jns    0x418957
  418923:	shr    DWORD PTR [edi+0x7edf1b52],0x56
  41892a:	shl    cl,0xb7
  41892d:	cmp    edi,DWORD PTR [edx-0x49]
  418930:	std    
  418931:	adc    edi,DWORD PTR [edi+0x2e]
  418934:	xor    dh,BYTE PTR [ebx+0x16c18a8e]
  41893a:	or     eax,0x962a48d3
  41893f:	gs ds cmp eax,0xb4977a04
  418946:	pop    ss
  418947:	push   ecx
  418948:	ss daa 
  41894a:	mov    eax,0x56e93a28
  41894f:	pop    esi
  418950:	pop    ebx
  418951:	idiv   BYTE PTR [edx+esi*4-0x606d0973]
  418958:	mov    WORD PTR [ebx-0x70582b0a],cs
  41895e:	retf   0x64b8
  418961:	pop    ecx
  418962:	loop   0x418979
  418964:	iret   
  418965:	(bad)  [ebp+0x56]
  418968:	push   0x29
  41896a:	or     al,0x84
  41896c:	inc    ebp
  41896d:	(bad)  
  41896e:	dec    DWORD PTR [eax-0x68]
  418971:	sub    al,0x25
  418973:	sub    edi,DWORD PTR [esi]
  418975:	ja     0x418971
  418977:	pop    eax
  418978:	sahf   
  418979:	add    DWORD PTR [edx+0x23],ebx
  41897c:	addr16 inc edx
  41897e:	sbb    esi,DWORD PTR [esi+0x2a73213a]
  418984:	mov    ecx,ss
  418986:	inc    eax
  418987:	dec    eax
  418988:	pop    ebp
  418989:	retf   
  41898a:	sbb    eax,DWORD PTR [edx-0x67]
  41898d:	mov    al,ds:0x1d11944
  418992:	fs popa 
  418994:	test   bl,dh
  418996:	mov    eax,ds:0xf2e83517
  41899b:	ficomp WORD PTR [eax-0x64]
  41899e:	imul   ebx,esp,0xa36891f7
  4189a4:	push   ecx
  4189a5:	xchg   esp,eax
  4189a6:	push   ebp
  4189a7:	or     BYTE PTR [esi+0x45],bh
  4189aa:	test   eax,0x3e38c21f
  4189af:	mov    ebx,0x3f3ec523
  4189b4:	cld    
  4189b5:	mov    al,BYTE PTR [edi]
  4189b7:	jp     0x418a21
  4189b9:	pop    edx
  4189ba:	ja     0x418a26
  4189bc:	aad    0x48
  4189be:	xchg   esp,eax
  4189bf:	stc    
  4189c0:	fsubr  st,st(1)
  4189c2:	sti    
  4189c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189c4:	(bad)  
  4189c5:	loop   0x418a0b
  4189c7:	and    ebp,DWORD PTR [ebp-0x240d91ca]
  4189cd:	in     al,dx
  4189ce:	add    BYTE PTR [edi-0x7],0xef
  4189d2:	stos   DWORD PTR es:[edi],eax
  4189d3:	fnsave [ebp-0x1c]
  4189d6:	sahf   
  4189d7:	push   esp
  4189d8:	xor    BYTE PTR [ebp+esi*8+0x44],bh
  4189dc:	xor    ch,bl
  4189de:	mov    dh,0xf2
  4189e0:	mov    cl,0x5e
  4189e2:	jg     0x418993
  4189e4:	das    
  4189e5:	aad    0xd5
  4189e7:	pusha  
  4189e8:	pop    edi
  4189e9:	pop    esi
  4189ea:	and    al,0xc8
  4189ec:	mov    ah,0x50
  4189ee:	dec    ecx
  4189ef:	scas   al,BYTE PTR es:[edi]
  4189f0:	sub    al,ch
  4189f2:	mov    esi,0xd8869321
  4189f7:	xor    al,0xd7
  4189f9:	dec    esp
  4189fa:	lock (bad) 
  4189fc:	jmp    0x1282:0x522dd158
  418a03:	imul   edi,DWORD PTR [eiz*2-0x5f56561c],0xffffffcf
  418a0b:	repnz sub eax,0xd07a59b
  418a11:	stc    
  418a12:	mov    esi,0x4cd1b5b3
  418a17:	add    ebx,DWORD PTR [ebp-0x2f]
  418a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a1b:	into   
  418a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1d:	fist   DWORD PTR [ebp+0x1f]
  418a20:	shl    DWORD PTR [ebp-0x581a1a7a],cl
  418a26:	dec    ecx
  418a27:	push   cs
  418a28:	push   ss
  418a29:	mov    edi,0xed320ad0
  418a2e:	je     0x418a10
  418a30:	cmp    al,BYTE PTR [ecx+0x54dd87d5]
  418a36:	and    al,0xac
  418a38:	test   esi,ebx
  418a3a:	neg    BYTE PTR [edi+0xc]
  418a3d:	jae    0x418a55
  418a3f:	xchg   edx,eax
  418a40:	and    DWORD PTR [ecx+0x26],edi
  418a43:	jne    0x418a8d
  418a45:	and    BYTE PTR [edi-0x662c8ac],al
  418a4b:	ins    BYTE PTR es:[edi],dx
  418a4c:	xor    dh,BYTE PTR [edx-0x17]
  418a4f:	xor    dl,BYTE PTR [esi]
  418a51:	push   esp
  418a52:	and    al,0xb1
  418a54:	sub    BYTE PTR [edi],ch
  418a56:	stos   DWORD PTR es:[edi],eax
  418a57:	arpl   WORD PTR [ebx+eax*2+0x6e],ax
  418a5b:	scas   eax,DWORD PTR es:[edi]
  418a5c:	sub    eax,0xa6d3be8e
  418a61:	adc    ecx,DWORD PTR [esi-0x20]
  418a64:	popf   
  418a65:	xchg   BYTE PTR [edx-0xaaca7ec],dh
  418a6b:	pushf  
  418a6c:	xor    dl,ah
  418a6e:	test   ch,al
  418a70:	cld    
  418a71:	sub    BYTE PTR ds:0x6f1f2d02,al
  418a77:	ror    edi,0xf
  418a7a:	aaa    
  418a7b:	sbb    al,0xef
  418a7d:	call   0xbc384eb8
  418a82:	inc    ebx
  418a83:	nop
  418a84:	mov    BYTE PTR [ebx-0x2069d346],0xcf
  418a8b:	xchg   edx,eax
  418a8c:	addr16 push esi
  418a8e:	leave  
  418a8f:	xor    BYTE PTR [edx-0x14],0x5c
  418a93:	sbb    ecx,esi
  418a95:	sbb    al,0x17
  418a97:	cmp    al,dh
  418a99:	and    BYTE PTR [eax-0x21],0x89
  418a9d:	xor    edi,DWORD PTR [edx-0x7e9b7be4]
  418aa3:	cmp    al,0x88
  418aa5:	xchg   esp,eax
  418aa6:	and    dl,BYTE PTR [ebp-0x7978d108]
  418aac:	jno    0x418ad2
  418aae:	xor    BYTE PTR [edx],al
  418ab0:	addr16 jle 0x418ad9
  418ab3:	push   ecx
  418ab4:	shl    cl,cl
  418ab6:	les    edi,FWORD PTR [ecx-0x65]
  418ab9:	xlat   BYTE PTR ds:[ebx]
  418aba:	das    
  418abb:	cwde   
  418abc:	xor    dh,BYTE PTR [esi+0x2d]
  418abf:	mov    ecx,0xbdfe1231
  418ac4:	ss nop
  418ac6:	jmp    0x59ce:0xdac281a3
  418acd:	mov    ebp,esp
  418acf:	mov    eax,0x30de976f
  418ad4:	xchg   esp,eax
  418ad5:	push   ecx
  418ad6:	test   BYTE PTR [esi+0x6],ch
  418ad9:	in     eax,0xc6
  418adb:	ret    0x3d8b
  418ade:	push   cs
  418adf:	lahf   
  418ae0:	cmp    BYTE PTR [esi+0xf],0x20
  418ae4:	les    esi,FWORD PTR [edi-0x2a]
  418ae7:	add    al,0xbf
  418ae9:	and    al,0xa8
  418aeb:	in     al,0x9
  418aed:	addr16 pop edi
  418aef:	mov    edx,0xc726e4c3
  418af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418af5:	test   BYTE PTR [ebp+edx*1-0x74],ah
  418af9:	jnp    0x418b2d
  418afb:	xchg   ebp,eax
  418afc:	jne    0x418b4d
  418afe:	mov    eax,ds:0xda481d02
  418b03:	mov    bl,0x53
  418b05:	mov    edi,0x3a8000e4
  418b0a:	inc    edx
  418b0b:	cmp    esp,DWORD PTR [esi-0x4ece7f0f]
  418b11:	mov    ch,0xc1
  418b13:	cmp    DWORD PTR [eax],0x81f083b4
  418b19:	das    
  418b1a:	jmp    0xe114:0x6ac1f01a
  418b21:	mov    bh,0x25
  418b23:	push   esi
  418b24:	jl     0x418aa8
  418b26:	sub    edx,eax
  418b28:	sub    eax,0x6ee49ab4
  418b2d:	lods   eax,DWORD PTR ds:[esi]
  418b2e:	xor    al,0x9d
  418b30:	ins    BYTE PTR es:[edi],dx
  418b31:	cmp    bh,dl
  418b33:	sbb    eax,0x407b2ac
  418b38:	(bad)  
  418b3a:	sbb    BYTE PTR [edx+esi*8+0x2b017676],cl
  418b41:	popf   
  418b42:	in     al,dx
  418b43:	imul   ebx,eax,0x25
  418b46:	mov    edx,0xa90f3f1f
  418b4b:	rcr    BYTE PTR [ecx+0x4db38eb2],1
  418b51:	jbe    0x418b33
  418b53:	ret    
  418b54:	fadd   DWORD PTR [ebx-0x6aad9331]
  418b5a:	push   edi
  418b5b:	and    edx,DWORD PTR [edx+0x1519329]
  418b61:	cmp    edi,edx
  418b63:	in     al,0x2c
  418b65:	dec    ebp
  418b66:	dec    edx
  418b67:	outs   dx,DWORD PTR ds:[esi]
  418b68:	mov    bl,0x95
  418b6a:	jmp    0x418bd3
  418b6c:	retf   
  418b6d:	mov    BYTE PTR [ebx-0x21],al
  418b70:	cli    
  418b71:	push   DWORD PTR [ebp+0x27]
  418b74:	mov    ch,BYTE PTR [ecx-0x53fc72f2]
  418b7a:	push   ebp
  418b7b:	in     al,dx
  418b7c:	dec    ebp
  418b7d:	sub    dl,dl
  418b7f:	sbb    eax,0xb540fef8
  418b84:	daa    
  418b85:	enter  0xad90,0xbb
  418b89:	sbb    eax,0xc9354524
  418b8e:	scas   al,BYTE PTR es:[edi]
  418b8f:	leave  
  418b90:	xlat   BYTE PTR ds:[ebx]
  418b91:	jne    0x418c05
  418b93:	push   cs
  418b94:	dec    ecx
  418b95:	(bad)  
  418b96:	pop    edx
  418b97:	test   BYTE PTR [eax+0x1b5a766d],dh
  418b9d:	jns    0x418baf
  418b9f:	in     eax,dx
  418ba0:	enter  0x3bdf,0x57
  418ba4:	aam    0x6d
  418ba6:	sub    eax,0x125040b4
  418bab:	(bad)  
  418bac:	iret   
  418bad:	sub    DWORD PTR [edi],edx
  418baf:	shl    ch,1
  418bb1:	mov    bh,0x6a
  418bb3:	sub    ecx,DWORD PTR [edi-0x12]
  418bb6:	(bad)  
  418bb7:	ds (bad) 
  418bb9:	sub    eax,DWORD PTR [edi+0x5d]
  418bbc:	dec    edx
  418bbd:	push   ebp
  418bbe:	dec    eax
  418bbf:	ds aad 0x65
  418bc2:	retf   0x32b4
  418bc5:	fdivr  QWORD PTR [ebx+0x64]
  418bc8:	fbstp  TBYTE PTR [esi]
  418bca:	xor    DWORD PTR [edi+0x84f3d5e],ebx
  418bd0:	xor    edx,esp
  418bd2:	pop    eax
  418bd3:	xchg   ebx,eax
  418bd4:	jae    0x418b7c
  418bd6:	pop    eax
  418bd7:	add    al,0x1e
  418bd9:	imul   esi,DWORD PTR [ebx],0x457809ed
  418bdf:	add    eax,0x3359bba4
  418be4:	mov    al,ds:0x4a719e20
  418be9:	add    DWORD PTR [ebp-0x27],ecx
  418bec:	retf   0x16b9
  418bef:	out    0x2c,al
  418bf1:	ror    bh,1
  418bf3:	(bad)  
  418bf4:	out    0x10,eax
  418bf6:	xor    bl,BYTE PTR [eax-0x13e20d46]
  418bfc:	adc    ebp,DWORD PTR [edx+0x6b]
  418bff:	pop    ebp
  418c00:	outs   dx,BYTE PTR ds:[esi]
  418c01:	mov    edx,0x493c0ebe
  418c06:	fs adc bl,cl
  418c09:	jne    0x418c60
  418c0b:	cmc    
  418c0c:	ret    0x50ce
  418c0f:	shl    DWORD PTR [ebp+0x63],1
  418c12:	jg     0x418c54
  418c14:	in     eax,0xb5
  418c16:	jns    0x418c13
  418c18:	push   edx
  418c19:	out    0x1c,al
  418c1b:	es xchg esi,eax
  418c1d:	stos   DWORD PTR es:[edi],eax
  418c1e:	push   es
  418c1f:	xchg   ecx,eax
  418c20:	js     0x418c43
  418c22:	dec    esi
  418c23:	xor    dl,dl
  418c25:	add    BYTE PTR [ebx-0x77549bab],bh
  418c2b:	push   ebx
  418c2c:	xor    al,0xdd
  418c2e:	daa    
  418c2f:	dec    ebx
  418c30:	and    edi,edx
  418c32:	jo     0x418c72
  418c34:	call   DWORD PTR [ecx]
  418c36:	push   eax
  418c37:	stos   DWORD PTR es:[edi],eax
  418c38:	stos   DWORD PTR es:[edi],eax
  418c39:	ret    
  418c3a:	jmp    0x334c6c30
  418c3f:	test   al,0x21
  418c41:	sub    ecx,DWORD PTR [esi-0x5819adc3]
  418c47:	or     al,0x1f
  418c49:	and    bh,BYTE PTR [ebx+0x2c]
  418c4c:	sar    DWORD PTR [ebp-0x22d20d3c],1
  418c52:	ret    
  418c53:	ja     0x418bf9
  418c55:	int    0xd5
  418c57:	pop    ecx
  418c58:	imul   ebx,eax,0xffffffc1
  418c5b:	retf   0xf2f
  418c5e:	dec    ebx
  418c5f:	bswap  ebp
  418c61:	jo     0x418c2d
  418c63:	rcl    cl,1
  418c65:	jns    0x418c37
  418c67:	mov    bh,0x3b
  418c69:	xlat   BYTE PTR ds:[ebx]
  418c6a:	mov    dh,0x48
  418c6c:	scas   eax,DWORD PTR es:[edi]
  418c6d:	fidivr WORD PTR [esi-0x5911867d]
  418c73:	not    BYTE PTR [eax+ebp*4]
  418c76:	sub    al,0x1d
  418c78:	mov    edi,0x434767ad
  418c7d:	mov    bl,0xb4
  418c7f:	fidiv  WORD PTR [edi-0x6c]
  418c82:	xlat   BYTE PTR ds:[ebx]
  418c83:	add    ah,BYTE PTR [edi-0x5d]
  418c86:	ins    DWORD PTR es:[edi],dx
  418c87:	pop    ds
  418c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c89:	in     eax,0xb8
  418c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8c:	lods   al,BYTE PTR ds:[esi]
  418c8d:	les    ebp,FWORD PTR [eax+0x59880243]
  418c93:	xor    ch,BYTE PTR [edi]
  418c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c96:	push   esi
  418c97:	jne    0x418cc1
  418c99:	(bad)  
  418c9a:	in     eax,dx
  418c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c9d:	data16 xchg dl,dh
  418ca0:	sbb    esi,DWORD PTR [ebx-0x274e390]
  418ca6:	or     al,0xd
  418ca8:	cmp    bh,BYTE PTR [edi-0x8]
  418cab:	cmp    bl,BYTE PTR [ebx+0x51]
  418cae:	arpl   bx,cx
  418cb0:	retf   0x20ca
  418cb3:	xor    esp,eax
  418cb5:	inc    ecx
  418cb6:	sub    dh,BYTE PTR [ebx]
  418cb8:	jle    0x418cab
  418cba:	inc    esi
  418cbb:	sti    
  418cbc:	je     0x418cdd
  418cbe:	fisttp WORD PTR [eax-0x44134986]
  418cc4:	sbb    edx,ecx
  418cc6:	js     0x418c94
  418cc8:	dec    ecx
  418cc9:	addr16 mov dl,0x23
  418ccc:	xor    BYTE PTR [edx-0xaa03108],0xbd
  418cd3:	and    dl,BYTE PTR [eiz*8+0x3b587c96]
  418cda:	arpl   WORD PTR [eax-0x3d],si
  418cdd:	data16 stc 
  418cdf:	pop    eax
  418ce0:	jbe    0x418cad
  418ce2:	sub    eax,0xc14ee699
  418ce7:	test   DWORD PTR [esp+0x2f],0x7e777f41
  418cef:	sub    al,0xea
  418cf1:	or     al,0x49
  418cf3:	sub    DWORD PTR [ebx-0x51bcbd17],ebx
  418cf9:	mov    ebx,0x20d76a4
  418cfe:	adc    eax,DWORD PTR [ebp+0x2c9e7ab3]
  418d04:	in     eax,dx
  418d05:	or     edx,DWORD PTR [edx]
  418d07:	jp     0x418ce4
  418d09:	hlt    
  418d0a:	sub    eax,edx
  418d0c:	pushf  
  418d0d:	les    ebp,FWORD PTR [edx+eax*4-0x4b]
  418d11:	xchg   edi,eax
  418d12:	ds pause 
  418d15:	add    esi,DWORD PTR cs:[ecx+0x3463cbc]
  418d1c:	add    eax,0xf93ccd29
  418d21:	mov    edi,0x4ca7eec4
  418d26:	stc    
  418d27:	or     DWORD PTR [esi],ebp
  418d29:	leave  
  418d2a:	adc    eax,0x41c035c9
  418d2f:	add    BYTE PTR ds:0x183970cd,bh
  418d35:	repz (bad) [bx+di-0x57]
  418d3a:	loope  0x418d55
  418d3c:	lods   eax,DWORD PTR ds:[esi]
  418d3d:	ins    BYTE PTR es:[edi],dx
  418d3e:	sahf   
  418d3f:	aaa    
  418d40:	mov    dl,0xee
  418d42:	and    al,0x79
  418d44:	push   eax
  418d45:	xchg   edi,eax
  418d46:	mov    al,0xe8
  418d48:	or     al,0xd7
  418d4a:	sbb    DWORD PTR [esi+0x41683c41],esi
  418d50:	(bad)  
  418d51:	(bad)  [esi-0x25b785d2]
  418d57:	jae    0x418da0
  418d59:	out    0x3e,al
  418d5b:	(bad)  ds:0xf31eb64a
  418d61:	xor    al,0xbf
  418d63:	cld    
  418d64:	inc    eax
  418d65:	cli    
  418d66:	fistp  DWORD PTR [eiz*8-0x22cf8a9d]
  418d6d:	inc    eax
  418d6e:	jmp    0xa849145a
  418d73:	lods   al,BYTE PTR ds:[esi]
  418d74:	test   DWORD PTR [eax],edx
  418d76:	xchg   BYTE PTR [edx+0x2b8a1a41],cl
  418d7c:	adc    DWORD PTR [edi+ecx*8-0x6c],ecx
  418d80:	push   ecx
  418d81:	popa   
  418d82:	not    DWORD PTR [edx-0x25537b54]
  418d88:	ret    
  418d89:	dec    edx
  418d8a:	out    dx,al
  418d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d8c:	cld    
  418d8d:	repnz into 
  418d8f:	repnz xchg ecx,eax
  418d91:	ja     0x418d51
  418d93:	mov    ebp,ebp
  418d95:	mov    ecx,0x73dfbca3
  418d9a:	cmp    esi,ecx
  418d9c:	mov    ebp,0x31b7573c
  418da1:	es loopne 0x418dc6
  418da4:	mov    dh,0x80
  418da6:	jmp    DWORD PTR [ebp+0x29]
  418da9:	lods   al,BYTE PTR ds:[esi]
  418daa:	cmp    DWORD PTR [edi],ebx
  418dac:	iret   
  418dad:	and    bh,BYTE PTR [ecx+0x13e0a3c0]
  418db3:	xor    esi,edx
  418db5:	dec    ebp
  418db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db7:	push   0x27
  418db9:	and    ch,bh
  418dbb:	or     ecx,esi
  418dbd:	pop    esi
  418dbe:	cdq    
  418dbf:	mov    esp,0x653cf66e
  418dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dc5:	sub    edx,DWORD PTR [edi-0x1c]
  418dc8:	and    esp,DWORD PTR [ebx-0x40e0ec6]
  418dce:	pop    ebx
  418dcf:	pop    eax
  418dd0:	rol    BYTE PTR [esi+0x68b56568],cl
  418dd6:	cwde   
  418dd7:	jae    0x418e37
  418dd9:	mov    BYTE PTR [edi+0x788585a6],bh
  418ddf:	sbb    al,0x5d
  418de1:	cmpxchg DWORD PTR [edx+0x76],edx
  418de5:	fs push cs
  418de7:	xchg   DWORD PTR [ebp+0x3e],ebx
  418dea:	aaa    
  418deb:	jecxz  0x418d9b
  418ded:	loop   0x418d8c
  418def:	xchg   BYTE PTR [ebx+0xe678c42],bl
  418df5:	inc    edx
  418df6:	stc    
  418df7:	and    al,0x5a
  418df9:	int3   
  418dfa:	nop
  418dfb:	mov    ebp,ds
  418dfd:	push   esp
  418dfe:	dec    esp
  418dff:	ins    DWORD PTR es:[edi],dx
  418e00:	jo     0x418e3b
  418e02:	xor    al,0x2c
  418e04:	call   0xcc65:0x6d61cf59
  418e0b:	adc    eax,0x69e25a1
  418e10:	jg     0x418dde
  418e12:	or     BYTE PTR [edi],ch
  418e14:	jbe    0x418e1a
  418e16:	repnz in al,dx
  418e18:	sub    al,dh
  418e1a:	stos   BYTE PTR es:[edi],al
  418e1b:	mov    ah,0x0
  418e1d:	sub    DWORD PTR [ecx+0x50],esp
  418e20:	push   ecx
  418e21:	stos   BYTE PTR es:[edi],al
  418e22:	loope  0x418e2f
  418e24:	fwait
  418e25:	inc    DWORD PTR [eax-0x6f]
  418e28:	mov    al,ds:0x17adae2e
  418e2d:	bound  eax,QWORD PTR [ebp-0x545d32d6]
  418e33:	push   ds
  418e34:	dec    edi
  418e35:	or     bh,BYTE PTR [esi+eax*1]
  418e38:	jno    0x418dd1
  418e3a:	fcomi  st,st(6)
  418e3c:	jo     0x418e54
  418e3e:	rcl    BYTE PTR [ebx+eax*8],0xb9
  418e42:	push   eax
  418e43:	call   0x2560:0xd91be8fa
  418e4a:	jo     0x418e2b
  418e4c:	push   eax
  418e4d:	mov    es,WORD PTR [ebp+0x34]
  418e50:	ffree  st(6)
  418e52:	mov    cl,0xcf
  418e54:	dec    ebp
  418e55:	lods   al,BYTE PTR ds:[esi]
  418e56:	hlt    
  418e57:	dec    edx
  418e58:	lea    ebp,[edi]
  418e5a:	add    cl,BYTE PTR [edx-0x7d]
  418e5d:	add    ebx,DWORD PTR [edx-0x6a]
  418e60:	or     al,0x50
  418e62:	ins    DWORD PTR es:[edi],dx
  418e63:	lods   eax,DWORD PTR ds:[esi]
  418e64:	xchg   ebx,eax
  418e65:	jnp    0x418eac
  418e67:	pop    eax
  418e68:	or     ah,bl
  418e6a:	fs dec ecx
  418e6c:	int    0xf9
  418e6e:	dec    esi
  418e6f:	in     al,0x1a
  418e71:	pop    ebx
  418e72:	out    dx,eax
  418e73:	sbb    bl,BYTE PTR ds:0xd07712aa
  418e79:	stos   BYTE PTR es:[edi],al
  418e7a:	fcomi  st,st(0)
  418e7c:	xor    al,0x48
  418e7e:	daa    
  418e7f:	lods   eax,DWORD PTR ds:[esi]
  418e80:	jo     0x418e47
  418e82:	push   eax
  418e83:	xchg   esi,eax
  418e84:	popa   
  418e85:	mov    edi,0xac2e5062
  418e8a:	pusha  
  418e8b:	mov    eax,0x74745e74
  418e90:	mov    edx,ds
  418e92:	xchg   ebp,eax
  418e93:	mov    ah,0x2b
  418e95:	or     eax,0xad0e0e1a
  418e9a:	mov    eax,ds:0x2e0ddc51
  418e9f:	and    DWORD PTR [ecx+0x47],edi
  418ea2:	ja     0x418e5b
  418ea4:	inc    ebp
  418ea5:	sbb    BYTE PTR [ecx+eiz*1],cl
  418ea8:	stos   DWORD PTR es:[edi],eax
  418ea9:	bts    DWORD PTR [ebx],edi
  418eac:	mov    dl,0xb5
  418eae:	dec    edx
  418eaf:	rcl    DWORD PTR [bx+di],cl
  418eb2:	daa    
  418eb3:	jl     0x418e69
  418eb5:	scas   al,BYTE PTR es:[edi]
  418eb6:	and    al,cl
  418eb8:	and    BYTE PTR [ecx-0x12],ch
  418ebb:	cmp    DWORD PTR [ecx-0x30de342f],edi
  418ec1:	sahf   
  418ec2:	sbb    eax,0x5ddb42e0
  418ec7:	pop    ds
  418ec8:	icebp  
  418ec9:	sbb    eax,0x459e8714
  418ece:	cmp    eax,eax
  418ed0:	mov    ecx,0x795d6975
  418ed5:	adc    dl,BYTE PTR [eax-0x45]
  418ed8:	push   eax
  418ed9:	out    0xc3,al
  418edb:	ins    BYTE PTR es:[edi],dx
  418edc:	sbb    eax,0xf914249d
  418ee1:	jnp    0x418edd
  418ee3:	add    BYTE PTR [esi-0x3489ad8c],dl
  418ee9:	push   ds
  418eea:	sub    al,0x9f
  418eec:	out    dx,eax
  418eed:	xchg   esi,eax
  418eee:	in     al,dx
  418eef:	(bad)  
  418ef0:	cmp    al,BYTE PTR [ebp-0x1d]
  418ef3:	push   ds
  418ef4:	and    BYTE PTR [eax],dh
  418ef6:	and    al,0x72
  418ef8:	(bad)  
  418ef9:	stos   DWORD PTR es:[edi],eax
  418efa:	out    0xbf,al
  418efc:	add    DWORD PTR [esi],ecx
  418efe:	nop
  418eff:	inc    eax
  418f00:	adc    al,BYTE PTR [edx-0x60]
  418f03:	and    al,0xc6
  418f05:	ret    
  418f06:	and    DWORD PTR [ebx],0x73
  418f09:	mov    bl,0xfd
  418f0b:	pushf  
  418f0c:	mov    ch,0x59
  418f0e:	jo     0x418ea9
  418f10:	push   ss
  418f11:	in     eax,0x65
  418f13:	or     BYTE PTR [ebx+eiz*4],dh
  418f16:	sub    al,ch
  418f18:	ins    DWORD PTR es:[edi],dx
  418f19:	and    al,0xb5
  418f1b:	out    0x84,al
  418f1d:	dec    ecx
  418f1e:	jmp    FWORD PTR [eax-0x5089998f]
  418f24:	dec    BYTE PTR [ebx+0x3a]
  418f27:	jp     0x418ec8
  418f29:	jo     0x418eb1
  418f2b:	das    
  418f2c:	repnz pop es
  418f2e:	adc    BYTE PTR [ebp+0x23fd32f6],bl
  418f34:	cli    
  418f35:	push   es
  418f36:	(bad)  
  418f37:	js     0x418f92
  418f39:	mov    ds:0x59880a32,eax
  418f3e:	jg     0x418fb5
  418f40:	aam    0xa3
  418f42:	and    al,0x9f
  418f44:	xor    DWORD PTR [edi+0x18f87a02],edi
  418f4a:	sti    
  418f4b:	mov    eax,0xf49d8820
  418f50:	mov    ecx,0x9e8424dc
  418f55:	jecxz  0x418f05
  418f57:	add    al,0x3c
  418f59:	js     0x418f68
  418f5b:	push   esi
  418f5c:	or     cl,BYTE PTR [eax]
  418f5e:	adc    al,0xd1
  418f60:	mov    bh,0xff
  418f62:	int    0x92
  418f64:	jno    0x418fd2
  418f66:	ins    BYTE PTR es:[edi],dx
  418f67:	stos   DWORD PTR es:[edi],eax
  418f68:	add    DWORD PTR [eax],esp
  418f6a:	loopne 0x418f22
  418f6c:	jae    0x418fd2
  418f6e:	loope  0x418fe2
  418f70:	pop    edx
  418f71:	jl     0x418f6d
  418f73:	and    cl,BYTE PTR [esi-0x72]
  418f76:	inc    ebx
  418f77:	and    bl,BYTE PTR [esi+0x5702e3c0]
  418f7d:	push   esp
  418f7e:	pusha  
  418f7f:	mov    cl,0xa0
  418f81:	js     0x418f77
  418f83:	ja     0x418f1f
  418f85:	gs (bad) 
  418f87:	xchg   esp,eax
  418f88:	in     al,0x69
  418f8a:	cdq    
  418f8b:	xchg   esp,eax
  418f8c:	jecxz  0x418f1a
  418f8e:	mov    ecx,esi
  418f90:	stos   BYTE PTR es:[edi],al
  418f91:	push   es
  418f92:	nop
  418f93:	xchg   ebx,eax
  418f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f95:	mov    ds:0x5bbac1c8,al
  418f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f9b:	dec    edi
  418f9c:	leave  
  418f9d:	pop    ss
  418f9e:	retf   0x2c55
  418fa1:	ss loope 0x418f51
  418fa4:	cmp    eax,DWORD PTR [ebp-0x476fb4a2]
  418faa:	shl    BYTE PTR [ebp-0x6c3f825c],0x21
  418fb1:	arpl   WORD PTR [bx+di],cx
  418fb4:	mov    ecx,0x45eb7cc3
  418fb9:	mov    dh,0x91
  418fbb:	pushf  
  418fbc:	push   edi
  418fbd:	and    cl,al
  418fbf:	jecxz  0x419011
  418fc1:	aad    0x7d
  418fc3:	adc    ch,0x5d
  418fc6:	push   0xf6186738
  418fcb:	mov    dh,0x54
  418fcd:	mov    ecx,0xcb9b2b1d
  418fd2:	pop    edx
  418fd3:	mov    BYTE PTR [ecx],bh
  418fd5:	inc    ebx
  418fd6:	xchg   esi,eax
  418fd7:	cld    
  418fd8:	add    DWORD PTR [ecx-0x63],ecx
  418fdb:	dec    eax
  418fdc:	lods   al,BYTE PTR ds:[esi]
  418fdd:	mov    ch,0x20
  418fdf:	pop    es
  418fe0:	jnp    0x41903c
  418fe2:	xchg   edi,eax
  418fe3:	xor    ebp,edi
  418fe5:	mov    al,ds:0x45666da0
  418fea:	int3   
  418feb:	pop    es
  418fec:	out    0xe9,al
  418fee:	mov    al,ds:0xc9a1fd76
  418ff3:	imul   ebx,DWORD PTR [ecx-0x244487cb],0xffffffbe
  418ffa:	and    al,dh
  418ffc:	mov    eax,0xf1fb4bbf
  419001:	pop    ebp
  419002:	jnp    0x419075
  419004:	add    bl,BYTE PTR [esi*4-0x22c88e70]
  41900b:	mov    esi,0xfed4ac3c
  419010:	fsubrp st(3),st
  419012:	js     0x418fb1
  419014:	mov    ah,0xbe
  419016:	mov    edi,0x378cec2c
  41901b:	push   esi
  41901c:	push   ds
  41901d:	xor    BYTE PTR [ebx-0x72],al
  419020:	sub    eax,0xce4239e2
  419025:	sub    al,0x9a
  419027:	jecxz  0x41902c
  419029:	push   ebx
  41902b:	jno    0x41907e
  41902d:	call   0xb89a8a02
  419032:	icebp  
  419033:	scas   al,BYTE PTR es:[edi]
  419034:	je     0x419004
  419036:	jge    0x41908a
  419038:	cmp    bh,ah
  41903a:	sbb    al,0x50
  41903c:	aad    0xd1
  41903e:	xor    cl,BYTE PTR [ebp-0xa9ed839]
  419044:	mov    ecx,0xae120491
  419049:	dec    ecx
  41904a:	jne    0x419097
  41904c:	int    0x5f
  41904e:	fwait
  41904f:	cmp    ebx,DWORD PTR [esi]
  419051:	mov    BYTE PTR [ebp-0x47],dh
  419054:	dec    ebx
  419055:	cwde   
  419056:	(bad)  
  419057:	adc    eax,0xc31b56ca
  41905c:	xlat   BYTE PTR ds:[ebx]
  41905d:	sbb    dh,BYTE PTR [ebp-0x506ab0a0]
  419063:	or     ch,BYTE PTR [edx-0x5e]
  419066:	add    BYTE PTR [edi+0x20],cl
  419069:	pop    eax
  41906a:	pop    edx
  41906b:	cld    
  41906c:	mov    ebx,0xa5d8f662
  419071:	mov    cl,dh
  419073:	stos   BYTE PTR es:[edi],al
  419074:	inc    eax
  419075:	or     DWORD PTR [ecx],0x16
  419078:	or     ch,BYTE PTR [esi-0x77]
  41907b:	pop    es
  41907c:	fbstp  TBYTE PTR [ecx]
  41907e:	push   cs
  41907f:	add    DWORD PTR [ebx+0x3ca848c],ebp
  419085:	dec    ebp
  419086:	imul   ebx,ecx,0xf32bd5
  41908c:	fucomip st,st(6)
  41908e:	xchg   edx,eax
  41908f:	(bad)  
  419090:	das    
  419091:	ds inc ebx
  419093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419094:	jne    0x4190e5
  419096:	fsub   st,st(4)
  419098:	xor    al,0x94
  41909a:	add    al,0xfd
  41909c:	mov    al,0x41
  41909e:	mov    al,ds:0x22e48170
  4190a3:	pop    ecx
  4190a4:	or     esi,DWORD PTR ds:0xab23b8e0
  4190aa:	push   es
  4190ab:	sbb    cl,BYTE PTR [edx]
  4190ad:	imul   esi,DWORD PTR [edx+0x71],0xfffffffa
  4190b1:	lds    ecx,FWORD PTR [edi-0x3e]
  4190b4:	and    al,0x7d
  4190b6:	aas    
  4190b7:	ins    DWORD PTR es:[edi],dx
  4190b8:	popa   
  4190b9:	ds imul esi,DWORD PTR gs:[eax+eax*8],0xffffffc3
  4190bf:	dec    esi
  4190c0:	(bad)  
  4190c2:	xor    esp,DWORD PTR [ebp+0x248f46ef]
  4190c8:	fadd   DWORD PTR gs:[edi-0x73]
  4190cc:	pushf  
  4190cd:	mov    eax,0x7a144e7e
  4190d2:	cs mov ebx,eax
  4190d5:	sub    eax,0x1d137c5a
  4190da:	retf   0xe720
  4190dd:	inc    ebx
  4190de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190df:	outs   dx,DWORD PTR ds:[esi]
  4190e0:	or     eax,0x395634a9
  4190e5:	(bad)  
  4190e6:	mov    esi,0x491089c6
  4190eb:	ror    BYTE PTR [ebx-0x7b5ec7f2],cl
  4190f1:	ins    DWORD PTR es:[edi],dx
  4190f2:	addr16 loope 0x4190f4
  4190f5:	(bad)  
  4190f6:	pop    ss
  4190f7:	mov    dl,0xe
  4190f9:	data16 int3 
  4190fb:	ins    DWORD PTR es:[edi],dx
  4190fc:	inc    ebx
  4190fd:	dec    ebp
  4190fe:	jg     0x4190e4
  419100:	pandn  mm4,QWORD PTR [edi]
  419103:	jecxz  0x419181
  419105:	aaa    
  419106:	call   0xb35034e
  41910b:	adc    BYTE PTR [edi+eax*1-0x640b96cb],al
  419112:	icebp  
  419113:	mov    ebx,0xd648ef4a
  419118:	js     0x4190d1
  41911a:	inc    edx
  41911b:	cwde   
  41911c:	in     eax,dx
  41911d:	mov    cl,dh
  41911f:	xchg   ecx,eax
  419120:	in     eax,0xca
  419122:	inc    ebx
  419123:	and    DWORD PTR [ebx+ecx*8+0x5f063e25],edi
  41912a:	cmp    ecx,DWORD PTR [eax]
  41912c:	loope  0x41916f
  41912e:	inc    esp
  41912f:	or     eax,0xdb5b8226
  419134:	out    dx,al
  419135:	sbb    BYTE PTR [esi],al
  419137:	inc    ebp
  419138:	pop    ecx
  419139:	pop    ebp
  41913a:	adc    cl,BYTE PTR [esp+eiz*4]
  41913d:	in     eax,0x34
  41913f:	ret    0x9b70
  419142:	shl    BYTE PTR [eax],0x2c
  419145:	(bad)  
  419147:	inc    edx
  419148:	xchg   esi,eax
  419149:	cdq    
  41914a:	xchg   edx,eax
  41914b:	jne    0x41911b
  41914d:	jecxz  0x419172
  41914f:	daa    
  419150:	jne    0x4190e9
  419152:	dec    ah
  419154:	fist   DWORD PTR [ecx-0x17397edf]
  41915a:	mov    edi,0x5a8eb9df
  41915f:	out    0x70,eax
  419161:	sbb    ecx,esi
  419163:	adc    BYTE PTR [esp+ecx*4],0x1e
  419167:	(bad)  
  419168:	jmp    0x419158
  41916a:	js     0x419103
  41916c:	fs retf 
  41916e:	inc    ebx
  41916f:	xchg   BYTE PTR [edi+0x77],bl
  419172:	and    al,0xfb
  419174:	in     eax,0x87
  419176:	test   BYTE PTR [ecx+0x38e34c7a],ch
  41917c:	cmp    ch,BYTE PTR [ebx+0x17cc1036]
  419182:	push   es
  419183:	or     bl,BYTE PTR [ebx-0x6fd520a7]
  419189:	retf   0x1214
  41918c:	sub    eax,0xc19587ee
  419191:	sbb    eax,0x16aace35
  419196:	in     al,0x4e
  419198:	mov    edx,DWORD PTR [ebx-0x2b7a41c9]
  41919e:	inc    edi
  41919f:	xchg   DWORD PTR [eax-0x4b],ecx
  4191a2:	push   ebp
  4191a3:	(bad)  
  4191a4:	outs   dx,BYTE PTR ds:[esi]
  4191a5:	xor    al,0x35
  4191a7:	mov    eax,0x59586e98
  4191ac:	pop    esp
  4191ad:	push   edx
  4191ae:	call   0x71ba:0xde6c3436
  4191b5:	(bad)  
  4191b6:	out    0xc1,al
  4191b8:	test   BYTE PTR [esi+edx*4],bl
  4191bb:	sub    eax,0xef9387c1
  4191c0:	cmp    DWORD PTR [esi],edi
  4191c2:	adc    eax,0x43084ed
  4191c7:	or     eax,0x5410f336
  4191cc:	je     0x4191fe
  4191ce:	ds xchg edx,eax
  4191d0:	and    eax,0xad60ce9c
  4191d5:	cmc    
  4191d6:	add    al,0xfe
  4191d8:	jne    0x4191a1
  4191da:	cmp    eax,0x28d00427
  4191df:	mov    eax,DWORD PTR [ebx-0xd2d2934]
  4191e5:	aaa    
  4191e6:	imul   edi,DWORD PTR [esi],0x62
  4191e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ea:	addr16 xchg edx,eax
  4191ec:	sub    eax,0x6154628c
  4191f1:	pop    edi
  4191f2:	mov    bl,ch
  4191f4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191f6:	push   ecx
  4191f7:	cmp    eax,0x33a2c2d6
  4191fc:	(bad)  
  4191fd:	xlat   BYTE PTR ds:[ebx]
  4191fe:	addr16 (bad) 
  419200:	jp     0x41926c
  419202:	or     esp,DWORD PTR [esi-0x1f]
  419205:	rcl    edx,cl
  419207:	imul   eax,esi,0x714c286d
  41920d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41920e:	xchg   edx,eax
  41920f:	out    dx,al
  419210:	out    dx,al
  419211:	sbb    eax,0x28e423f3
  419216:	test   BYTE PTR [ebp+0x3f],0xb7
  41921a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41921b:	sbb    al,0x44
  41921d:	or     ch,dh
  41921f:	into   
  419220:	push   0x36
  419222:	sub    esi,DWORD PTR [ebx+0xe]
  419225:	push   ebx
  419226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419227:	inc    edi
  419228:	clc    
  419229:	retf   0x6b61
  41922c:	fs jnp 0x4191e9
  41922f:	ja     0x4192a2
  419231:	jne    0x419236
  419233:	ins    BYTE PTR es:[edi],dx
  419234:	shl    DWORD PTR es:[ebp+0x227dede8],cl
  41923b:	sar    DWORD PTR [esi+0x793ba3a0],cl
  419241:	xor    al,0xa8
  419243:	outs   dx,BYTE PTR ds:[esi]
  419244:	aas    
  419245:	jbe    0x41922d
  419247:	loope  0x419222
  419249:	fnstcw WORD PTR [edx+0x24]
  41924c:	fisttp WORD PTR [esi+edi*2-0x85bcf67]
  419253:	xor    ebp,DWORD PTR [esi+0x22]
  419256:	mov    bh,0x10
  419258:	sub    al,0x63
  41925a:	adc    eax,0x59c47804
  41925f:	test   eax,0x8fd79a27
  419264:	fnstcw WORD PTR [edi+0x32]
  419267:	imul   ecx,DWORD PTR [esi],0x317e14a8
  41926d:	mov    dl,0x41
  41926f:	add    DWORD PTR [edx-0x724c501c],eax
  419275:	inc    ecx
  419276:	and    dh,BYTE PTR [eax]
  419278:	xor    BYTE PTR [ebx+edi*1],cl
  41927b:	stc    
  41927c:	xchg   DWORD PTR [edi+0x25],ebp
  41927f:	jns    0x4192a6
  419281:	(bad)  
  419282:	or     bl,BYTE PTR [esi+eiz*4+0x2a]
  419286:	pop    esp
  419287:	adc    al,0x3a
  419289:	stos   BYTE PTR es:[edi],al
  41928a:	fnstenv [eax+ecx*2]
  41928d:	outs   dx,BYTE PTR ds:[esi]
  41928e:	push   esp
  41928f:	adc    al,BYTE PTR [ebx]
  419291:	xor    BYTE PTR [esi],0x6a
  419294:	outs   dx,BYTE PTR ds:[esi]
  419295:	pop    ebx
  419296:	dec    esp
  419297:	adc    al,0x47
  419299:	jle    0x4192f7
  41929b:	mov    DWORD PTR [ecx+ebp*8+0x22fb7082],ecx
  4192a2:	push   esi
  4192a3:	xor    BYTE PTR [ebx],dl
  4192a5:	lods   eax,DWORD PTR ds:[esi]
  4192a6:	in     eax,dx
  4192a7:	lds    eax,FWORD PTR ds:0x5e055606
  4192ad:	out    dx,eax
  4192ae:	fcom   DWORD PTR cs:[esi]
  4192b1:	xchg   BYTE PTR [ebx-0x3e7c1a41],bl
  4192b7:	sub    BYTE PTR [ebx+0x52],0x71
  4192bb:	mov    esi,edx
  4192bd:	push   esp
  4192be:	retf   
  4192bf:	jecxz  0x41928f
  4192c1:	hlt    
  4192c2:	cwde   
  4192c3:	and    eax,esi
  4192c5:	pop    ecx
  4192c6:	mov    bl,BYTE PTR [ecx]
  4192c8:	lods   eax,DWORD PTR ds:[esi]
  4192c9:	pop    ds
  4192ca:	int    0x8b
  4192cc:	or     al,0xd5
  4192ce:	cli    
  4192cf:	add    eax,0xa171a3db
  4192d4:	xor    DWORD PTR [ebp+0x25f0cf00],ebx
  4192da:	jno    0x419344
  4192dc:	xchg   esp,eax
  4192dd:	inc    ebx
  4192de:	cdq    
  4192df:	popa   
  4192e0:	out    dx,eax
  4192e1:	cmc    
  4192e2:	pop    eax
  4192e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192e4:	sbb    edx,ecx
  4192e6:	jp     0x419280
  4192e8:	test   DWORD PTR [esi+0x6a449d6f],0xb1edeb73
  4192f2:	mov    gs,WORD PTR [eax-0x69]
  4192f5:	dec    ebx
  4192f6:	adc    BYTE PTR [edx-0x1b],bh
  4192f9:	hlt    
  4192fa:	pushf  
  4192fb:	jo     0x419286
  4192fd:	pop    ebp
  4192fe:	lock mov edi,0x1b151bb6
  419304:	push   ebp
  419305:	retf   0xd94a
  419308:	mov    esp,0x5b84d322
  41930d:	stc    
  41930e:	ret    0x34d
  419311:	push   ss
  419312:	mov    BYTE PTR [edx-0x25],cl
  419315:	ret    
  419316:	int3   
  419317:	sbb    edx,DWORD PTR [edx-0xf]
  41931a:	xchg   esi,eax
  41931b:	adc    eax,0xb97aeb1d
  419320:	test   DWORD PTR [edi+eiz*2+0x68],esi
  419324:	outs   dx,BYTE PTR ds:[esi]
  419325:	and    eax,0x59ee6a2e
  41932a:	jmp    0xd2abf3d4
  41932f:	int    0xea
  419331:	and    DWORD PTR [edx+0x5f],edi
  419334:	dec    edi
  419335:	fcmovnu st,st(4)
  419337:	jle    0x4192c4
  419339:	mov    eax,ds:0xd6b04bea
  41933e:	out    0x44,al
  419340:	(bad)  
  419341:	xor    dl,BYTE PTR [eax-0x58a260c1]
  419347:	mov    ch,0x54
  419349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41934a:	in     al,dx
  41934b:	push   edi
  41934c:	rol    edx,cl
  41934e:	in     al,0x98
  419350:	fdiv   QWORD PTR [ecx+0x65f94430]
  419356:	fdiv   st(3),st
  419358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419359:	cmp    DWORD PTR [esi],esp
  41935b:	sti    
  41935c:	jecxz  0x4193d4
  41935e:	push   es
  41935f:	ins    BYTE PTR es:[edi],dx
  419360:	rcr    ah,0xcb
  419363:	sti    
  419364:	cwde   
  419365:	inc    edi
  419366:	aaa    
  419367:	ins    DWORD PTR es:[edi],dx
  419368:	mov    cl,0xdf
  41936a:	jne    0x4193ac
  41936c:	cmp    bl,BYTE PTR [edx-0x6e]
  41936f:	adc    eax,0x39510318
  419374:	xor    ebx,DWORD PTR [ebp-0x73b590a4]
  41937a:	scas   eax,DWORD PTR es:[edi]
  41937b:	test   BYTE PTR [eax+0x53],ah
  41937e:	aad    0xef
  419380:	push   ecx
  419381:	pop    ebp
  419382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419383:	xor    BYTE PTR [ebx],cl
  419385:	int3   
  419386:	enter  0xff6,0xfd
  41938a:	test   BYTE PTR ds:0x84027d92,ch
  419390:	je     0x4193c0
  419392:	jecxz  0x4193a7
  419394:	push   esp
  419395:	sub    DWORD PTR [esi+0x2],ebp
  419398:	leave  
  419399:	mov    ch,BYTE PTR [ebx-0x67]
  41939c:	into   
  41939d:	stos   BYTE PTR es:[edi],al
  41939e:	dec    edi
  41939f:	adc    eax,0x9ef7af8c
  4193a4:	push   cs
  4193a5:	xor    BYTE PTR [ebx+ebx*4],al
  4193a8:	icebp  
  4193a9:	adc    al,0x31
  4193ab:	loope  0x41934f
  4193ad:	inc    eax
  4193ae:	leave  
  4193af:	rcr    cl,1
  4193b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b2:	adc    dl,BYTE PTR [ebp+ebp*2-0x650a519]
  4193b9:	add    edx,ebp
  4193bb:	sub    DWORD PTR [esi],ebx
  4193bd:	cmp    DWORD PTR [ecx],ecx
  4193bf:	mov    ds:0x75b4af92,al
  4193c4:	jbe    0x4193e9
  4193c6:	push   eax
  4193c7:	jno    0x419373
  4193c9:	cmp    eax,0x8d3b7f2d
  4193ce:	ret    0xd3e8
  4193d1:	mov    al,ds:0x4a25f8f5
  4193d6:	rcl    cl,0xf3
  4193d9:	jecxz  0x41940c
  4193db:	mov    ch,0x33
  4193dd:	mul    BYTE PTR [esi]
  4193df:	repz add bh,dh
  4193e2:	dec    ebx
  4193e3:	jp     0x419464
  4193e5:	cwde   
  4193e6:	adc    BYTE PTR [ecx+edi*4],ah
  4193e9:	rcl    BYTE PTR [ecx-0x66772f80],1
  4193ef:	pop    ebp
  4193f0:	jo     0x419471
  4193f2:	sbb    ebx,DWORD PTR [ebp+0x5e]
  4193f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193f6:	and    BYTE PTR [ebp+0x24],0xa4
  4193fa:	xlat   BYTE PTR ds:[ebx]
  4193fb:	mov    ecx,0xb8e9e533
  419400:	and    eax,0x5c44ee3f
  419405:	test   al,0xd5
  419408:	das    
  419409:	cwde   
  41940a:	mov    bh,0xde
  41940c:	xor    esp,ebp
  41940e:	stos   BYTE PTR es:[edi],al
  41940f:	sub    dl,BYTE PTR [eax-0x4c0179ca]
  419415:	pop    esi
  419416:	mov    bh,0xd6
  419418:	mov    BYTE PTR [edx-0x5a],bl
  41941b:	pop    ss
  41941c:	add    eax,0xf57ec7f2
  419421:	xor    dl,dh
  419423:	jle    0x41945e
  419425:	ja     0x4193b3
  419427:	sar    DWORD PTR [ebp-0x5402123c],1
  41942d:	fs (bad) 
  419430:	push   es
  419431:	ret    
  419432:	sub    DWORD PTR [ebx],ebp
  419434:	sbb    al,0x38
  419436:	popa   
  419437:	test   BYTE PTR [edx+0x53],bh
  41943a:	pushf  
  41943b:	fiadd  WORD PTR [esi+0x71]
  41943e:	int3   
  41943f:	(bad)  
  419440:	dec    eax
  419441:	mov    eax,0x918d4412
  419446:	sbb    dl,BYTE PTR [ecx+0x7a]
  419449:	call   0xb3ac:0xd42391bd
  419450:	pop    edi
  419451:	sbb    BYTE PTR [ebx],dl
  419453:	pop    ecx
  419454:	sub    eax,0x8e01d871
  419459:	inc    edi
  41945a:	jbe    0x41949d
  41945c:	xor    al,0xc9
  41945e:	push   esp
  41945f:	rcl    bl,1
  419461:	mov    edi,0x604b4da4
  419466:	in     eax,0x7d
  419468:	xor    dh,ah
  41946a:	xor    eax,0xd16823a8
  41946f:	add    al,0xc2
  419471:	xlat   BYTE PTR ds:[ebx]
  419472:	xchg   esi,eax
  419473:	(bad)  
  419475:	(bad)  
  419476:	rol    bl,1
  419478:	(bad)  
  419479:	clc    
  41947a:	(bad)  
  41947b:	gs and eax,0x105ffd7d
  419481:	push   ds
  419482:	jbe    0x4194e3
  419484:	mov    gs,WORD PTR [ebx-0x155e7441]
  41948a:	mov    BYTE PTR [ecx],ch
  41948c:	out    0x20,eax
  41948e:	stos   DWORD PTR es:[edi],eax
  41948f:	pop    esi
  419490:	push   ecx
  419491:	push   ebp
  419492:	ss add eax,ecx
  419495:	pop    ss
  419496:	loopne 0x419419
  419498:	test   BYTE PTR [eax-0x16],dl
  41949b:	sbb    al,0xa
  41949d:	les    esp,FWORD PTR [ecx]
  41949f:	jecxz  0x4194bd
  4194a1:	xchg   esi,eax
  4194a2:	mov    esp,0xd7089f0a
  4194a7:	dec    edi
  4194a8:	xchg   BYTE PTR fs:[eax],bh
  4194ab:	enter  0x88ed,0xd9
  4194af:	push   esp
  4194b0:	je     0x4194a1
  4194b2:	dec    ecx
  4194b3:	dec    eax
  4194b4:	mov    ds:0xb3704d00,al
  4194b9:	rcr    BYTE PTR [ebp+eiz*2-0x1ca3de90],0xe5
  4194c1:	test   al,0x36
  4194c3:	fdiv   QWORD PTR [bx+di+0x5a7b]
  4194c8:	fchs   
  4194ca:	cmp    esp,ebp
  4194cc:	push   ecx
  4194cd:	and    al,0x16
  4194cf:	imul   edx,DWORD PTR [ebp-0x66c37b0c],0x49
  4194d6:	sub    eax,0x24364ba1
  4194db:	push   0x2c565069
  4194e0:	mov    ecx,DWORD PTR ds:0x3bb4c90f
  4194e6:	cmp    eax,0x2890c57
  4194eb:	and    dh,BYTE PTR [eax+0x486ab98c]
  4194f1:	push   ecx
  4194f2:	in     al,0x31
  4194f4:	les    esp,FWORD PTR [edi]
  4194f6:	mov    al,BYTE PTR [esi+edx*2-0x1ea3b4ed]
  4194fd:	jb     0x4194a0
  4194ff:	enter  0x9af,0x53
  419503:	ins    BYTE PTR es:[edi],dx
  419504:	pushf  
  419505:	sub    eax,0x1851b532
  41950a:	xor    esp,ecx
  41950c:	add    al,0x23
  41950e:	shl    BYTE PTR [ebx],0x4e
  419511:	sbb    BYTE PTR es:[eax+edi*1+0x3b333739],dh
  419519:	pop    eax
  41951a:	(bad)  
  41951b:	loopne 0x419559
  41951d:	xor    al,BYTE PTR [ecx-0x7e]
  419520:	bnd jle 0x4194cf
  419523:	not    BYTE PTR [ebp+0x59]
  419526:	push   edi
  419527:	xor    eax,0xda0cea0f
  41952c:	mov    cs,WORD PTR [ebp-0x3d]
  41952f:	mov    DWORD PTR [ebx-0xd],0x9d50cd6e
  419536:	scas   eax,DWORD PTR es:[edi]
  419537:	xor    dl,0xb0
  41953a:	push   0x79207de0
  41953f:	inc    edi
  419540:	rcr    BYTE PTR [ebp-0x76ca42b],1
  419546:	call   0xfffe:0x92423b92
  41954d:	lods   al,BYTE PTR ds:[esi]
  41954e:	ret    
  41954f:	leave  
  419550:	jg     0x419590
  419552:	inc    edi
  419553:	lahf   
  419554:	mov    esp,0xb020ce49
  419559:	jmp    0x4195da
  41955b:	clc    
  41955c:	jne    0x4195c5
  41955e:	add    BYTE PTR [edi],bh
  419560:	push   ebx
  419561:	mov    al,ds:0xcb010a86
  419566:	cmp    cl,BYTE PTR [esi+0x19]
  419569:	inc    edi
  41956a:	(bad)  
  41956b:	cwde   
  41956c:	cmc    
  41956d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41956e:	fdivr  DWORD PTR [eiz*8+0x4db490ce]
  419575:	jle    0x419504
  419577:	mov    bh,ah
  419579:	sub    al,BYTE PTR [esi+esi*1]
  41957c:	inc    ebx
  41957d:	lea    ebp,[edx+0x4bc6a15f]
  419583:	mov    ecx,0x9641552e
  419588:	inc    eax
  419589:	out    dx,al
  41958a:	pushf  
  41958b:	push   0xa72b02a7
  419590:	sub    ch,dh
  419592:	cmp    eax,0x99fa4c15
  419597:	ss mov esi,0xb91a7c34
  41959d:	xor    DWORD PTR [eax+ecx*4+0x77af6cd5],eax
  4195a4:	in     al,0x7a
  4195a6:	jecxz  0x4195bb
  4195a8:	(bad)  
  4195a9:	stos   DWORD PTR es:[edi],eax
  4195aa:	sub    BYTE PTR [edx],0x83
  4195ad:	jo     0x419584
  4195af:	xchg   ebx,eax
  4195b0:	test   eax,0x8963f4c
  4195b5:	pop    ebx
  4195b6:	inc    edi
  4195b7:	dec    esp
  4195b8:	mov    dl,0xba
  4195ba:	push   eax
  4195bb:	int3   
  4195bc:	jmp    0xcf34caaf
  4195c1:	or     DWORD PTR [edx+edx*4+0x49],ecx
  4195c5:	ja     0x419604
  4195c7:	xor    eax,0x6691009
  4195cc:	pop    eax
  4195cd:	sub    al,0x9e
  4195cf:	pop    eax
  4195d0:	inc    edx
  4195d1:	test   DWORD PTR [esi+0x9],edi
  4195d4:	adc    al,0x22
  4195d6:	push   edx
  4195d7:	xchg   ecx,eax
  4195d8:	adc    BYTE PTR [esi+edi*8-0x53],0x62
  4195dd:	popf   
  4195de:	pop    edi
  4195df:	push   0x60dde40a
  4195e4:	pop    edi
  4195e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195e6:	in     al,dx
  4195e7:	xchg   DWORD PTR [esi+0x6d2b3e2e],edx
  4195ed:	jg     0x419570
  4195ef:	jo     0x419620
  4195f1:	jmp    0x72fe743a
  4195f6:	adc    al,BYTE PTR [edx+eax*8-0x6c]
  4195fa:	fs jge 0x4195fa
  4195fd:	and    dh,ah
  4195ff:	or     ebp,DWORD PTR [esi-0x481d2538]
  419605:	call   0x214c:0x7288da9e
  41960c:	and    ch,BYTE PTR [edi+0x2]
  41960f:	jge    0x4195d0
  419611:	pop    esi
  419612:	sahf   
  419613:	fmul   st(0),st
  419615:	jp     0x41965b
  419617:	jne    0x41967b
  419619:	push   eax
  41961a:	mov    ebx,0xcc393f
  41961f:	in     eax,dx
  419620:	mov    dl,bl
  419622:	je     0x41964f
  419624:	xchg   ecx,eax
  419625:	pop    ebx
  419626:	clc    
  419627:	retf   0x996b
  41962a:	test   eax,0x8542dda2
  41962f:	sub    al,ch
  419631:	cwde   
  419632:	lds    edx,FWORD PTR [esi-0x32]
  419635:	test   BYTE PTR cs:[ebp*1-0x57e06e21],bh
  41963d:	xchg   esp,eax
  41963e:	imul   edx,esi,0x878d0eb4
  419644:	fcom   QWORD PTR [edx+0x48298ad]
  41964a:	sbb    edi,DWORD PTR [ebx-0x49a028e]
  419650:	std    
  419651:	xchg   edi,eax
  419652:	js     0x41969e
  419654:	dec    esp
  419655:	jg     0x4196cf
  419657:	cmp    esp,0xb7e162cf
  41965d:	rol    DWORD PTR [ebp-0x5aa7e876],0x6f
  419664:	xchg   esp,eax
  419665:	jbe    0x4196b0
  419667:	pop    esp
  419668:	pop    ss
  419669:	push   esp
  41966a:	push   ebp
  41966b:	push   ecx
  41966c:	les    esi,FWORD PTR [esi+0xb]
  41966f:	paddd  mm0,QWORD PTR [eax]
  419672:	(bad)  
  419673:	cmc    
  419674:	imul   ebp,esp,0x127aa4dd
  41967a:	aas    
  41967b:	push   edi
  41967c:	inc    esi
  41967d:	ins    BYTE PTR es:[edi],dx
  41967e:	leave  
  41967f:	ror    BYTE PTR [ebx+0x20],cl
  419682:	mov    bh,0xcc
  419684:	les    ebp,FWORD PTR [edx]
  419686:	push   ds
  419687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419688:	call   0x96d542a0
  41968d:	fcom   DWORD PTR [ebp-0x7fd39293]
  419693:	rol    DWORD PTR [ebx+0x33],cl
  419696:	push   eax
  419697:	les    ebp,FWORD PTR [esi-0x42]
  41969a:	mov    al,0x5
  41969c:	imul   esp,ecx,0x65789ae4
  4196a2:	jno    0x4196fc
  4196a4:	jmp    0x41962c
  4196a6:	stc    
  4196a7:	cmc    
  4196a8:	lahf   
  4196a9:	call   0xd1ab:0xc63a5bba
  4196b0:	dec    eax
  4196b1:	inc    ecx
  4196b2:	(bad)  
  4196b3:	loop   0x41968f
  4196b5:	fwait
  4196b6:	jg     0x4196b0
  4196b8:	and    eax,0x35613388
  4196bd:	js     0x419685
  4196bf:	arpl   WORD PTR [eax],ax
  4196c1:	mov    eax,0x76aee9c9
  4196c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196c7:	loopne 0x419679
  4196c9:	jbe    0x41971c
  4196cb:	aaa    
  4196cc:	das    
  4196cd:	fist   DWORD PTR [edx-0x42cbbd5c]
  4196d3:	cmp    DWORD PTR [ebx],ebp
  4196d5:	mov    cl,0x51
  4196d7:	data16 addr16 mov ds:0xb007,al
  4196dc:	pop    es
  4196dd:	dec    ebp
  4196de:	sbb    DWORD PTR [eax+0x341f3a8d],edx
  4196e4:	add    eax,0x1ac43c71
  4196e9:	mov    edi,0xf6095875
  4196ee:	mov    ah,0xc0
  4196f0:	mov    ebp,0x5063b9f3
  4196f5:	ja     0x41971d
  4196f7:	fist   DWORD PTR [edx-0x1c66123f]
  4196fd:	and    eax,0x9fccdff8
  419702:	pop    ebx
  419703:	pop    edi
  419704:	adc    al,0x29
  419706:	rcr    DWORD PTR [ebp+0x12],1
  419709:	imul   ebp,DWORD PTR [edx-0x77],0x29
  41970d:	push   ebp
  41970e:	inc    eax
  41970f:	aad    0x39
  419711:	sbb    ah,ah
  419713:	dec    edi
  419714:	pop    es
  419715:	sub    al,BYTE PTR [edi+0x7368a4ba]
  41971b:	jl     0x4196e5
  41971d:	lods   eax,DWORD PTR ds:[esi]
  41971e:	lods   eax,DWORD PTR ds:[esi]
  41971f:	mov    esi,0x4cbc263f
  419724:	ret    
  419725:	xlat   BYTE PTR ds:[ebx]
  419726:	lock es das 
  419729:	push   0x23
  41972b:	and    al,0x1b
  41972d:	ins    DWORD PTR es:[edi],dx
  41972e:	ret    
  41972f:	rcr    ah,0x7b
  419732:	cmp    dh,BYTE PTR [edx]
  419734:	or     dl,BYTE PTR [esp+esi*2]
  419737:	jle    0x419787
  419739:	jle    0x41976e
  41973b:	shl    DWORD PTR ds:0x5a74dc94,cl
  419741:	mov    edi,0x10aec801
  419746:	inc    edi
  419747:	and    eax,0x865a7d0c
  41974c:	adc    bh,dh
  41974e:	jmp    0x3d8dea63
  419753:	test   al,0x3c
  419755:	retf   
  419756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419757:	loope  0x419788
  419759:	sbb    ch,BYTE PTR [ebp+0x27b4beda]
  41975f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419760:	xchg   esp,eax
  419761:	rcl    edx,0xa1
  419764:	fucomp st(4)
  419766:	dec    ebx
  419767:	daa    
  419768:	in     al,dx
  419769:	aas    
  41976a:	adc    DWORD PTR [edi+0x5ec48cce],ebp
  419770:	mov    cl,0x3e
  419772:	sub    DWORD PTR [eax+0x46938c15],esi
  419778:	in     eax,0xcb
  41977a:	and    esp,esi
  41977c:	lock sar BYTE PTR [edx-0x713624c],0x3e
  419784:	or     ah,BYTE PTR [eax-0x1e52d71]
  41978a:	pusha  
  41978b:	mov    dh,0x2a
  41978d:	jmp    0x33f3:0x4c8618d7
  419794:	cli    
  419795:	ret    
  419796:	out    dx,al
  419797:	cmp    cl,0x46
  41979a:	clc    
  41979b:	imul   ecx,ebx,0x18
  41979e:	mov    cl,0x60
  4197a0:	lock add al,0x6
  4197a3:	inc    esp
  4197a4:	(bad)  
  4197a5:	or     dh,ch
  4197a7:	fs call 0x507f4bc8
  4197ad:	inc    ebp
  4197ae:	sbb    DWORD PTR [edi+0x49],ebx
  4197b1:	addr16 mov dh,0xa0
  4197b4:	gs sahf 
  4197b6:	push   eax
  4197b7:	add    BYTE PTR [edx+ebx*2+0x30],al
  4197bb:	and    DWORD PTR [ebx-0x17a52c0],0x31
  4197c2:	pushf  
  4197c3:	scas   eax,DWORD PTR es:[edi]
  4197c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197c5:	adc    ah,dl
  4197c7:	rol    BYTE PTR [edi-0x4dc5e43f],1
  4197cd:	add    eax,0x7da34ae3
  4197d2:	xor    BYTE PTR [ecx-0x14],0xa1
  4197d6:	data16 add al,0xbb
  4197d9:	out    0x74,eax
  4197db:	sub    edi,edx
  4197dd:	mov    edi,0x8bb8b48d
  4197e2:	std    
  4197e3:	or     esi,DWORD PTR [ebx]
  4197e5:	hlt    
  4197e6:	mov    bl,BYTE PTR [edi-0x7c]
  4197e9:	stc    
  4197ea:	xchg   DWORD PTR [edx+0x79],edx
  4197ed:	xchg   edi,eax
  4197ee:	mov    dl,0xa3
  4197f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f1:	loop   0x41986c
  4197f3:	mov    edi,0x1c114e07
  4197f8:	in     eax,dx
  4197f9:	sti    
  4197fa:	xor    BYTE PTR [edi-0x71],0xc
  4197fe:	mov    edx,0x73537ed8
  419803:	je     0x419851
  419805:	nop
  419806:	jbe    0x419843
  419808:	adc    DWORD PTR [eax],esi
  41980a:	(bad)  
  41980b:	mov    cl,0xef
  41980d:	inc    ebp
  41980e:	inc    edx
  41980f:	mov    cl,0xe1
  419811:	and    DWORD PTR [ebp+0x4a],esi
  419814:	pop    esi
  419815:	sbb    eax,0x654e9ab8
  41981a:	mov    al,0x25
  41981c:	xchg   ecx,eax
  41981d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41981e:	add    BYTE PTR [edi],al
  419820:	or     esp,DWORD PTR [eax-0x75]
  419823:	xchg   edi,eax
  419824:	popf   
  419825:	mov    BYTE PTR [ecx+0x17a37ccb],dh
  41982b:	push   ecx
  41982c:	mov    eax,ds:0xd09820a9
  419831:	jmp    0xbf49:0x2ddc96f9
  419838:	in     eax,dx
  419839:	cmp    eax,eax
  41983b:	push   esp
  41983c:	add    DWORD PTR [ebp+ebp*8-0x7da73dcd],edx
  419843:	inc    ebp
  419844:	cs push eax
  419846:	je     0x419862
  419848:	push   0x47d5f31c
  41984d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41984e:	sub    esp,DWORD PTR es:[esi-0xd]
  419852:	mov    eax,ds:0xb4de579c
  419857:	pop    ss
  419858:	ror    BYTE PTR [ebp-0x18bedfde],cl
  41985e:	out    0xd6,al
  419860:	push   ss
  419861:	inc    ebx
  419862:	dec    edx
  419863:	loop   0x4198b4
  419865:	mov    al,bh
  419867:	cmp    al,al
  419869:	int3   
  41986a:	push   ebx
  41986b:	lods   al,BYTE PTR ds:[esi]
  41986c:	mov    cl,0x35
  41986e:	call   0x5493c944
  419873:	mov    al,0x3
  419875:	loop   0x419818
  419877:	sahf   
  419878:	fmul   QWORD PTR ds:0xb0e6e414
  41987e:	lahf   
  41987f:	dec    DWORD PTR [edi+0x32]
  419882:	aam    0x3f
  419884:	pop    es
  419885:	mov    al,0x3d
  419887:	(bad)  
  419888:	and    cl,BYTE PTR [di]
  41988b:	and    DWORD PTR [esi],ebp
  41988d:	scas   eax,DWORD PTR es:[edi]
  41988e:	jae    0x41984d
  419890:	std    
  419891:	ins    DWORD PTR es:[edi],dx
  419892:	push   ebx
  419893:	pop    ds
  419894:	inc    edi
  419895:	jno    0x41986c
  419897:	adc    bl,0x9f
  41989a:	and    eax,0xb542fec4
  41989f:	pop    ebp
  4198a0:	pop    es
  4198a1:	fsubr  DWORD PTR [esi]
  4198a3:	cmp    eax,DWORD PTR [eax]
  4198a5:	mov    eax,ds:0x217e477e
  4198aa:	mov    al,0x39
  4198ac:	jns    0x4198bf
  4198ae:	mov    ch,0xc4
  4198b0:	mov    BYTE PTR [eax+0x2a2ead7b],dh
  4198b6:	imul   edx,ebx,0x357dbdd
  4198bc:	pop    es
  4198bd:	sub    bl,dl
  4198bf:	fild   QWORD PTR [edi-0x2159474b]
  4198c5:	xchg   ebp,eax
  4198c6:	or     BYTE PTR [esp+ebp*2],cl
  4198c9:	sub    ah,BYTE PTR [edi+0x78]
  4198cc:	out    dx,al
  4198cd:	mov    ss,WORD PTR [eax]
  4198cf:	icebp  
  4198d0:	lods   eax,DWORD PTR ds:[esi]
  4198d1:	mov    esi,0x6fc71a8b
  4198d6:	or     al,0xd3
  4198d8:	or     cl,BYTE PTR [ebx+ebp*1-0x7]
  4198dc:	mov    ebp,0x9c8d418f
  4198e1:	shl    DWORD PTR [esi],cl
  4198e3:	lods   eax,DWORD PTR ds:[esi]
  4198e4:	mov    dh,0x9f
  4198e6:	loopne 0x4198a2
  4198e8:	xchg   DWORD PTR [edi+0xf],ebx
  4198eb:	xor    al,0xcd
  4198ed:	xchg   edx,eax
  4198ee:	sub    eax,0x1e45db7b
  4198f3:	arpl   WORD PTR [esi],ax
  4198f5:	adc    DWORD PTR [esi-0x14],esi
  4198f8:	imul   esi,DWORD PTR [esi+0x7c3c8b17],0x1d2555f4
  419902:	out    dx,al
  419903:	jle    0x4198b2
  419905:	ins    DWORD PTR es:[edi],dx
  419906:	gs daa 
  419908:	lahf   
  419909:	je     0x41988d
  41990b:	pop    eax
  41990c:	xor    DWORD PTR [edx-0x16],ecx
  41990f:	shl    BYTE PTR [ecx],1
  419911:	jae    0x41996d
  419913:	mov    ebp,DWORD PTR [ebx-0x6d789100]
  419919:	adc    edi,DWORD PTR [ebp+0x3ecd852c]
  41991f:	(bad)  
  419921:	add    al,0xc9
  419923:	movaps xmm5,XMMWORD PTR [esi+0x47d184f9]
  41992a:	neg    BYTE PTR [ecx+edi*4+0x4d]
  41992e:	push   esp
  41992f:	mov    eax,ds:0x548465fa
  419934:	inc    esp
  419935:	push   ecx
  419936:	retf   0xf98c
  419939:	into   
  41993a:	mov    ds:0x451bd42b,eax
  41993f:	dec    esp
  419940:	cmp    BYTE PTR [ebx+0x66],0x5f
  419944:	inc    esi
  419945:	out    0x5d,eax
  419947:	sti    
  419948:	lgs    esp,FWORD PTR [edx-0xfdbaa90]
  41994f:	and    DWORD PTR [eax+eiz*4+0x2b],edx
  419953:	adc    BYTE PTR [esi+ecx*8+0x7b],bh
  419957:	pop    ds
  419958:	dec    ecx
  419959:	out    dx,eax
  41995a:	sub    ebx,eax
  41995c:	pop    edi
  41995d:	cwde   
  41995e:	dec    esp
  41995f:	inc    eax
  419960:	ins    DWORD PTR es:[edi],dx
  419961:	or     esi,DWORD PTR [ebx+eiz*2]
  419964:	cmp    edi,esi
  419966:	mov    ds:0xfcba642c,al
  41996b:	or     al,0x27
  41996d:	pushf  
  41996e:	mov    edx,0x5541d4d8
  419973:	call   0xd344c3e1
  419978:	push   eax
  419979:	ss (bad) 
  41997b:	shr    DWORD PTR [ebp+0x4c302122],cl
  419981:	mov    bl,0x2f
  419983:	xchg   edx,eax
  419984:	add    bh,BYTE PTR [edx-0x7d48acb0]
  41998a:	jns    0x419919
  41998c:	ja     0x419945
  41998e:	or     eax,0x186729c
  419993:	pusha  
  419994:	jno    0x419996
  419996:	push   esp
  419997:	pop    ds
  419998:	and    DWORD PTR [ebx],ecx
  41999a:	ret    
  41999b:	xchg   BYTE PTR [ebx+0x75c0187b],bh
  4199a1:	imul   eax,DWORD PTR [esi-0x5c2b3b22],0xc6365a2
  4199ab:	pop    ecx
  4199ac:	jecxz  0x419a17
  4199ae:	inc    eax
  4199af:	sub    DWORD PTR [eax-0x32],ebp
  4199b2:	mov    al,ds:0xe1f3e554
  4199b7:	adc    DWORD PTR [eax+0x7ae7a56a],esi
  4199bd:	(bad)  
  4199be:	lea    edi,[edx]
  4199c0:	xchg   esp,eax
  4199c1:	mov    ch,0x78
  4199c3:	mov    edx,0x677df26b
  4199c8:	pop    ss
  4199c9:	mov    ecx,?
  4199cb:	add    BYTE PTR [ebp+0x13736a58],dl
  4199d1:	les    ebx,FWORD PTR [eax]
  4199d3:	sbb    esp,DWORD PTR [ebx-0x4]
  4199d6:	mul    ebp
  4199d8:	out    dx,al
  4199d9:	jl     0x419990
  4199db:	inc    edx
  4199dc:	add    bh,BYTE PTR [ebx+edi*4-0xdb71a17]
  4199e3:	cmp    ebp,DWORD PTR [ebx-0x73]
  4199e6:	mov    esp,0x9b6651b0
  4199eb:	sahf   
  4199ec:	lods   eax,DWORD PTR ds:[esi]
  4199ed:	jl     0x4199b0
  4199ef:	push   ebp
  4199f0:	pop    esp
  4199f1:	nop
  4199f2:	cmc    
  4199f3:	sbb    dh,bl
  4199f5:	mov    edx,0x33b2ebd5
  4199fa:	xchg   edx,eax
  4199fb:	(bad)  
  4199fc:	and    eax,0x74fcfed4
  419a01:	aad    0x30
  419a03:	sub    al,BYTE PTR [edi+ecx*1+0x23955e68]
  419a0a:	in     eax,dx
  419a0b:	fadd   DWORD PTR [edx]
  419a0d:	int    0x3
  419a0f:	mov    cl,0xe3
  419a11:	mov    ds:0x711e1d26,eax
  419a16:	in     eax,0x20
  419a18:	and    eax,DWORD PTR [edi-0x2ba9a17]
  419a1e:	fnsave [eax+0x33]
  419a21:	lock stos DWORD PTR es:[edi],eax
  419a23:	cmp    eax,edx
  419a25:	cmp    al,0xc3
  419a27:	xchg   esp,eax
  419a28:	test   ax,0xce21
  419a2c:	sbb    eax,0xf96d505a
  419a31:	(bad)  
  419a32:	popa   
  419a33:	imul   edi,DWORD PTR [edi],0x27
  419a36:	imul   eax,DWORD PTR [ecx-0x7],0x5d
  419a3a:	out    0xfa,eax
  419a3c:	pop    esp
  419a3d:	sbb    eax,0x3e4f5668
  419a42:	jo     0x4199d7
  419a44:	dec    ecx
  419a45:	or     ecx,DWORD PTR [ecx+0x608407ca]
  419a4b:	jnp    0x419a20
  419a4d:	mov    dh,dh
  419a4f:	dec    esp
  419a50:	out    dx,al
  419a51:	inc    esi
  419a52:	mov    DWORD PTR [ebx+ecx*4],edi
  419a55:	pop    ds
  419a56:	add    eax,0x1c66b770
  419a5b:	jl     0x419ac9
  419a5d:	(bad)  
  419a5f:	rol    DWORD PTR [eax],1
  419a61:	or     al,0xef
  419a63:	mov    ecx,0x1f7fafe7
  419a68:	sti    
  419a69:	dec    edx
  419a6a:	fsubr  DWORD PTR [ebp+0x6ec21cf6]
  419a70:	push   esp
  419a71:	jp     0x419a9e
  419a73:	xchg   esi,eax
  419a74:	les    esi,FWORD PTR [ebx+0x45]
  419a77:	pop    ebp
  419a78:	and    BYTE PTR [edi+0x5f],al
  419a7b:	adc    BYTE PTR [edx-0x78],ch
  419a7e:	ja     0x419a10
  419a80:	lock jbe 0x419abf
  419a83:	pusha  
  419a84:	hlt    
  419a85:	lds    ebx,FWORD PTR [edi+0x252b23c8]
  419a8b:	jmp    0x419af5
  419a8d:	jns    0x419a8a
  419a8f:	std    
  419a90:	shl    BYTE PTR [ecx+eiz*1+0x5c],cl
  419a94:	inc    ebx
  419a95:	mov    ch,0xe8
  419a97:	imul   edi,DWORD PTR [ecx],0x6f7538cf
  419a9d:	inc    ebp
  419a9e:	sti    
  419a9f:	call   0x47fa:0xdd57c79
  419aa6:	inc    ebp
  419aa7:	aaa    
  419aa8:	rol    edx,1
  419aaa:	pop    ss
  419aab:	sub    cl,al
  419aad:	imul   ebx,edx,0x2ad2d8a8
  419ab3:	sbb    al,0x9c
  419ab5:	aas    
  419ab6:	mov    ecx,0xe2a08906
  419abb:	les    ebx,FWORD PTR [ebp+0x7e]
  419abe:	lock pop esp
  419ac0:	sub    DWORD PTR [eax+0x3],ebp
  419ac3:	popa   
  419ac4:	dec    esi
  419ac5:	sub    ch,BYTE PTR [ecx]
  419ac7:	push   ss
  419ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac9:	je     0x419a8a
  419acb:	jns    0x419a86
  419acd:	scas   eax,DWORD PTR es:[edi]
  419ace:	xchg   esi,eax
  419acf:	mov    fs,edx
  419ad1:	data16 (bad) 
  419ad3:	sub    eax,0x3f872138
  419ad8:	ja     0x419b4d
  419ada:	retf   0xcc5a
  419add:	mov    al,0xd6
  419adf:	stc    
  419ae0:	cmp    al,BYTE PTR [ebp+0x41]
  419ae3:	ins    DWORD PTR es:[edi],dx
  419ae4:	repnz mov ch,0xa3
  419ae7:	add    DWORD PTR [ecx+0xe],eax
  419aea:	fidivr DWORD PTR [edi+esi*8-0x31d881fe]
  419af1:	mov    ebx,0x7452a8b9
  419af6:	pop    ecx
  419af7:	out    dx,eax
  419af8:	cmc    
  419af9:	call   0xdd8eba84
  419afe:	in     eax,0xef
  419b00:	aam    0xf9
  419b02:	popa   
  419b03:	in     al,dx
  419b04:	stos   BYTE PTR es:[edi],al
  419b05:	inc    esp
  419b06:	add    esi,0xa
  419b09:	inc    ebx
  419b0a:	aaa    
  419b0b:	pop    edi
  419b0c:	outs   dx,BYTE PTR ds:[esi]
  419b0d:	lock cmp DWORD PTR [ecx-0x15],ecx
  419b11:	or     BYTE PTR [edi],al
  419b13:	rcl    DWORD PTR [edx-0x4e],0x9c
  419b17:	mov    ds:0x50d3e40a,eax
  419b1c:	cli    
  419b1d:	push   eax
  419b1e:	scas   eax,DWORD PTR es:[edi]
  419b1f:	jmp    0x419aea
  419b21:	fcom   DWORD PTR [esi-0x33]
  419b25:	mov    al,0xa7
  419b27:	xchg   ebp,eax
  419b28:	xor    DWORD PTR [eax-0x19],ebx
  419b2b:	not    bl
  419b2d:	xlat   BYTE PTR ds:[ebx]
  419b2e:	cmp    BYTE PTR [ecx+0x6c26ce16],al
  419b34:	ret    
  419b35:	mov    cl,BYTE PTR [edi+ebx*4+0x75]
  419b39:	outs   dx,DWORD PTR ds:[esi]
  419b3a:	jp     0x419ae9
  419b3c:	(bad)  
  419b3d:	lods   al,BYTE PTR ds:[esi]
  419b3e:	out    dx,al
  419b3f:	out    0x1a,al
  419b41:	lock (bad) 
  419b43:	std    
  419b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b45:	jge    0x419b65
  419b47:	dec    ecx
  419b48:	or     al,0x5d
  419b4a:	dec    ebp
  419b4b:	shl    esp,0x16
  419b4e:	out    0x64,al
  419b50:	sbb    bl,dl
  419b52:	mov    ah,0x87
  419b54:	enter  0x4756,0xf2
  419b58:	into   
  419b59:	sbb    bh,cl
  419b5b:	lea    edi,[esp+edx*4+0x7b]
  419b5f:	je     0x419bdd
  419b61:	jp     0x419b1e
  419b63:	pop    ebx
  419b64:	or     cl,dh
  419b66:	sub    BYTE PTR [ebx+0x43528772],dl
  419b6c:	dec    ecx
  419b6d:	pop    edx
  419b6e:	stos   BYTE PTR es:[edi],al
  419b6f:	xchg   DWORD PTR [esp+esi*2-0x24],eax
  419b73:	stos   DWORD PTR es:[edi],eax
  419b74:	or     BYTE PTR [eax],al
  419b76:	in     al,dx
  419b77:	pushf  
  419b78:	rol    BYTE PTR [ebx+ebp*4-0x4f],0x8d
  419b7d:	mov    ds,WORD PTR ds:0xc732b95a
  419b83:	std    
  419b84:	mov    esp,0x37106219
  419b89:	and    al,0x75
  419b8b:	xchg   edx,eax
  419b8c:	leave  
  419b8d:	jno    0x419b59
  419b8f:	cdq    
  419b90:	rcr    BYTE PTR [esi-0x77ef37da],cl
  419b96:	hlt    
  419b97:	pop    esi
  419b98:	mov    edx,DWORD PTR [esi]
  419b9a:	mov    cl,0x5c
  419b9c:	xchg   esp,eax
  419b9d:	fs xchg esp,eax
  419b9f:	xor    DWORD PTR [edi],eax
  419ba1:	(bad)  
  419ba3:	mov    al,ds:0xfc81d91b
  419ba8:	pop    edi
  419ba9:	loop   0x419b90
  419bab:	mov    ecx,0x3d5ecafb
  419bb0:	inc    BYTE PTR [edx-0x19eeaaf4]
  419bb6:	imul   edx,DWORD PTR [ebx-0x23],0x47
  419bba:	test   al,0xdf
  419bbc:	add    DWORD PTR [ecx-0x1e],ebp
  419bbf:	nop
  419bc0:	add    BYTE PTR [ecx+0x6829669e],ch
  419bc6:	xor    esi,esi
  419bc8:	addr16 push edi
  419bca:	and    eax,0x5194c347
  419bcf:	inc    ebp
  419bd0:	add    edi,edi
  419bd2:	inc    ebp
  419bd3:	inc    eax
  419bd4:	mov    dl,0x83
  419bd6:	imul   ebp,DWORD PTR [edi+0xc11a5b4],0xfffffffc
  419bdd:	cmp    eax,0x98ce0662
  419be2:	dec    esi
  419be3:	xor    al,BYTE PTR [edi]
  419be5:	xchg   ebp,eax
  419be6:	add    ah,bl
  419be8:	neg    dh
  419bea:	xor    eax,0x5210d5a0
  419bef:	fidivr DWORD PTR [edx-0x6c]
  419bf2:	cld    
  419bf3:	in     al,dx
  419bf4:	(bad)  
  419bf5:	cmp    eax,0x37464e86
  419bfa:	sbb    DWORD PTR [esi],esi
  419bfc:	add    BYTE PTR [esi+0x21],dh
  419bff:	add    al,0xb4
  419c01:	push   ebx
  419c02:	mov    ds:0xefcb5bee,eax
  419c07:	aas    
  419c08:	mov    eax,0x9b6d5cb7
  419c0d:	push   esi
  419c0e:	fidiv  WORD PTR [ebp+0x798214ec]
  419c15:	std    
  419c16:	clc    
  419c17:	scas   al,BYTE PTR es:[edi]
  419c18:	mov    bl,0xfa
  419c1a:	pop    ecx
  419c1b:	test   BYTE PTR [eax+eiz*2+0x14],0x5a
  419c20:	imul   eax,DWORD PTR [edx],0xbe4e0728
  419c26:	fidivr DWORD PTR [edi+0x41]
  419c29:	ficom  DWORD PTR [edi+eax*4]
  419c2c:	push   eax
  419c2d:	imul   bp,WORD PTR [eax-0x1fb47891],0xff8f
  419c35:	fsubr  st,st(0)
  419c37:	out    0x12,eax
  419c39:	repnz sub eax,0x1753035b
  419c3f:	les    edx,FWORD PTR [edx]
  419c41:	xor    dh,cl
  419c43:	mov    eax,0x41919620
  419c48:	inc    edi
  419c49:	xor    al,0x80
  419c4b:	call   0xe873:0xa9698fc
  419c52:	pop    ecx
  419c53:	(bad)  
  419c54:	or     BYTE PTR [edx-0x4a939bf],dh
  419c5a:	push   esp
  419c5b:	or     DWORD PTR [ecx],esp
  419c5d:	mov    eax,esp
  419c5f:	(bad)  
  419c60:	das    
  419c61:	outs   dx,BYTE PTR ds:[esi]
  419c62:	imul   DWORD PTR [ebx]
  419c64:	aam    0xba
  419c66:	mov    ds:0x7186781c,eax
  419c6b:	adc    al,0x9f
  419c6d:	out    dx,al
  419c6e:	push   eax
  419c6f:	(bad)  
  419c70:	scas   eax,DWORD PTR es:[edi]
  419c71:	data16 adc al,0x61
  419c74:	adc    DWORD PTR [eax-0xe066db9],edi
  419c7a:	sub    BYTE PTR [esi],bl
  419c7c:	(bad)  
  419c7d:	xchg   ebp,eax
  419c7e:	scas   eax,DWORD PTR es:[edi]
  419c7f:	jge    0x419cd8
  419c81:	ds jb  0x419cc4
  419c84:	arpl   WORD PTR [ecx+ebp*1],di
  419c87:	xchg   esi,eax
  419c88:	into   
  419c89:	dec    edx
  419c8a:	push   ebp
  419c8b:	xor    al,0xba
  419c8d:	push   0xffffffb8
  419c8f:	(bad)
  419c92:	adc    ah,bh
  419c94:	inc    edx
  419c95:	aad    0x1e
  419c97:	mov    eax,ds:0x79603eed
  419c9c:	and    esp,ebx
  419c9e:	outs   dx,DWORD PTR ds:[esi]
  419c9f:	mov    eax,?
  419ca1:	mov    ecx,0x5622c06
  419ca6:	push   ss
  419ca7:	neg    DWORD PTR [edi+edi*2+0x41]
  419cab:	shr    BYTE PTR [edx],cl
  419cad:	cli    
  419cae:	adc    cl,BYTE PTR [ecx+0x5a]
  419cb1:	or     DWORD PTR [eax],eax
  419cb3:	ror    BYTE PTR [ecx+esi*1-0x7],0x63
  419cb8:	xor    BYTE PTR [ebx+0x7d8e330f],0xa5
  419cbf:	jg     0x419cd7
  419cc1:	jnp    0x419cf5
  419cc3:	call   0xf023dbc2
  419cc8:	dec    esi
  419cc9:	add    ebx,DWORD PTR [ebx]
  419ccb:	fmul   st(7),st
  419ccd:	xchg   edx,eax
  419cce:	xor    eax,0x3869bbe6
  419cd3:	fld    QWORD PTR [ecx+0x71]
  419cd6:	sbb    cl,BYTE PTR [edx]
  419cd8:	int    0xef
  419cda:	loope  0x419c5e
  419cdc:	scas   al,BYTE PTR es:[edi]
  419cdd:	sub    esp,DWORD PTR [edx-0x51]
  419ce0:	(bad)  
  419ce2:	mov    ebp,0x7fae9596
  419ce7:	ficom  WORD PTR [ebp-0x1a]
  419cea:	ds jge 0x419d35
  419ced:	outs   dx,DWORD PTR ds:[esi]
  419cee:	jmp    0x419d14
  419cf0:	inc    esi
  419cf1:	dec    edx
  419cf2:	dec    ecx
  419cf3:	xchg   cl,bh
  419cf5:	push   ss
  419cf6:	jmp    0x419c8f
  419cf8:	clc    
  419cf9:	into   
  419cfa:	out    dx,eax
  419cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfc:	cmc    
  419cfd:	mov    esp,0xe0808e7f
  419d02:	mov    bh,BYTE PTR [edx]
  419d04:	xchg   ebx,eax
  419d05:	jmp    0xeb347f55
  419d0a:	xlat   BYTE PTR ds:[ebx]
  419d0b:	or     edi,DWORD PTR [esi+0x75]
  419d0e:	inc    ebx
  419d0f:	nop
  419d10:	imul   ebp,esi,0x7c
  419d13:	les    ebx,FWORD PTR [ebx]
  419d15:	jae    0x419d47
  419d17:	or     DWORD PTR [ecx],0xf00e8028
  419d1d:	aas    
  419d1e:	ins    BYTE PTR es:[edi],dx
  419d1f:	jns    0x419d24
  419d21:	mov    ds:0x719bf8a1,eax
  419d26:	mov    esi,ds
  419d28:	cli    
  419d29:	xlat   BYTE PTR ds:[ebx]
  419d2a:	mov    ds:0x26b4a3d6,al
  419d2f:	sbb    ch,bh
  419d31:	cmp    ebp,DWORD PTR [ebp+0x40]
  419d34:	mov    ds:0x184d3933,al
  419d39:	cs push esp
  419d3b:	js     0x419d74
  419d3d:	outs   dx,DWORD PTR ds:[esi]
  419d3e:	push   eax
  419d3f:	xor    al,0x8c
  419d41:	sub    eax,0x44f69c1f
  419d46:	mov    dh,0xa6
  419d48:	dec    edx
  419d49:	lds    edi,FWORD PTR [edx-0x67]
  419d4c:	jbe    0x419dba
  419d4e:	adc    eax,edx
  419d50:	sbb    eax,0xdcd5b468
  419d55:	loop   0x419cea
  419d57:	inc    esi
  419d58:	in     al,dx
  419d59:	lahf   
  419d5a:	xor    BYTE PTR [eax],0x28
  419d5d:	and    edi,edx
  419d5f:	mov    ds:0xa48fae8c,eax
  419d64:	cwde   
  419d65:	out    0xdf,eax
  419d67:	inc    eax
  419d68:	mov    dl,0xd9
  419d6a:	adc    edx,ecx
  419d6c:	pop    ss
  419d6d:	in     al,dx
  419d6e:	mov    es,WORD PTR [esi-0x6d4013f4]
  419d74:	xor    eax,0x90d6e347
  419d79:	(bad)  
  419d7a:	sbb    eax,0x5523cedf
  419d7f:	jge    0x419dec
  419d81:	dec    ebx
  419d82:	sbb    eax,edi
  419d84:	mov    ah,0x1c
  419d86:	adc    DWORD PTR [edi],ebx
  419d88:	hlt    
  419d89:	fwait
  419d8a:	inc    ebp
  419d8b:	mov    ds:0xa142eb20,al
  419d90:	std    
  419d91:	inc    eax
  419d92:	add    DWORD PTR [edx+0x613a187d],ecx
  419d98:	jns    0x419d8c
  419d9a:	add    ecx,DWORD PTR [edx+0x1b6bce83]
  419da0:	jne    0x419dab
  419da2:	jmp    0x818731c1
  419da7:	in     al,dx
  419da8:	and    cl,bl
  419daa:	inc    esp
  419dab:	cmp    ah,dl
  419dad:	and    eax,esp
  419daf:	pop    eax
  419db0:	jle    0x419e21
  419db2:	mov    ecx,0x8f8b1c41
  419db7:	cmp    eax,0xe1ab77bf
  419dbc:	xlat   BYTE PTR ds:[ebx]
  419dbd:	popf   
  419dbe:	jp     0x419d93
  419dc0:	adc    eax,edx
  419dc2:	sbb    esp,0xca3aa429
  419dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc9:	dec    ecx
  419dca:	retf   0xfea3
  419dcd:	or     BYTE PTR ds:0x32808c7c,cl
  419dd3:	fisttp QWORD PTR [esi+0x67]
  419dd6:	mov    edx,DWORD PTR [edx-0x13]
  419dd9:	push   ss
  419dda:	push   edx
  419ddb:	sub    eax,0x66eeafd9
  419de0:	jne    0x419d83
  419de2:	mul    DWORD PTR [eax]
  419de4:	hlt    
  419de5:	dec    ecx
  419de6:	and    BYTE PTR [esi-0x5439a96c],dl
  419dec:	fsub   DWORD PTR [edx-0x6dc35e46]
  419df2:	inc    ecx
  419df3:	stos   BYTE PTR es:[edi],al
  419df4:	mov    bl,0x50
  419df6:	add    BYTE PTR [ebp-0x25e7304d],al
  419dfc:	mov    ecx,0xbbe5f595
  419e01:	pop    esi
  419e02:	adc    ch,BYTE PTR [edx+0x77]
  419e05:	jns    0x419e82
  419e07:	pop    ecx
  419e08:	jecxz  0x419e76
  419e0a:	call   0x6f71:0x36497e7
  419e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e12:	js     0x419dde
  419e14:	out    dx,eax
  419e15:	sahf   
  419e16:	sub    DWORD PTR [ecx+0x36f83103],edx
  419e1c:	sub    DWORD PTR [eax],ecx
  419e1e:	setle  BYTE PTR [ecx]
  419e21:	push   ebp
  419e22:	push   esi
  419e23:	arpl   WORD PTR [edx+ebp*1+0x28],sp
  419e27:	cmc    
  419e28:	mov    WORD PTR [edi-0x39],es
  419e2b:	(bad)
  419e2e:	cs call 0xe2aa62c6
  419e34:	xor    DWORD PTR [ebp-0x1b31356e],ebp
  419e3a:	xor    ch,BYTE PTR [ebp+0x777fe493]
  419e40:	test   BYTE PTR [edx+0x54],ah
  419e43:	(bad)  
  419e44:	sub    ch,dl
  419e46:	add    edi,DWORD PTR [eax+0x4dd2ea31]
  419e4c:	mov    DWORD PTR [ecx+0x31b5cd94],esp
  419e52:	ds pop eax
  419e54:	inc    edi
  419e55:	mov    dh,dl
  419e57:	adc    edi,DWORD PTR [eax]
  419e59:	cmp    BYTE PTR [esi+0x704165f9],bl
  419e5f:	and    BYTE PTR [edx-0x31],ah
  419e62:	rcl    BYTE PTR [edi+edx*1-0x2379b9cd],0x19
  419e6a:	and    esi,ecx
  419e6c:	sub    esp,DWORD PTR [eax]
  419e6e:	cs mov ah,0xce
  419e71:	fsub   QWORD PTR [ebp+ebx*1+0x5a]
  419e75:	or     cl,BYTE PTR [eax]
  419e77:	push   edi
  419e78:	sti    
  419e79:	and    ebx,DWORD PTR [edi]
  419e7b:	mov    al,0xd0
  419e7d:	adc    al,0xec
  419e7f:	sub    eax,0xb123e5c4
  419e84:	out    dx,eax
  419e85:	jne    0x419e32
  419e87:	out    0xcb,al
  419e89:	push   cs
  419e8a:	mov    cl,BYTE PTR [ebx-0x4a96e8ce]
  419e90:	xor    cl,BYTE PTR [esi-0x25891534]
  419e96:	and    al,0xf2
  419e98:	mov    ebx,DWORD PTR [ebx-0xf]
  419e9b:	jge    0x419ec6
  419e9d:	xor    bl,BYTE PTR [edi]
  419e9f:	(bad)  
  419ea0:	in     eax,0x2
  419ea2:	dec    edx
  419ea3:	adc    BYTE PTR [esi+0x47441830],al
  419ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eaa:	loopne 0x419eb6
  419eac:	sbb    edx,esp
  419eae:	and    cl,cl
  419eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eb1:	mov    ds:0xcb02c272,eax
  419eb6:	push   ss
  419eb7:	jns    0x419f02
  419eb9:	imul   ecx,DWORD PTR [ecx-0x77],0x21
  419ebd:	cmp    al,0x7
  419ebf:	ss daa 
  419ec1:	stos   DWORD PTR es:[edi],eax
  419ec2:	cmp    BYTE PTR [ecx-0x40],bh
  419ec5:	push   edx
  419ec6:	sub    al,0x38
  419ec8:	inc    ebp
  419ec9:	xchg   edi,eax
  419eca:	sbb    BYTE PTR gs:[esi-0x3f1d2c0d],0x22
  419ed2:	lock dec ebx
  419ed4:	icebp  
  419ed5:	inc    eax
  419ed6:	daa    
  419ed7:	dec    ebp
  419ed8:	pop    edx
  419ed9:	repnz sbb cl,BYTE PTR [eax-0x78cfd784]
  419ee0:	mov    ah,0x42
  419ee2:	leave  
  419ee3:	or     BYTE PTR [edi-0x5a5a8221],bh
  419ee9:	out    0x52,al
  419eeb:	adc    bl,BYTE PTR ds:0x61a7c89f
  419ef1:	jo     0x419ebf
  419ef3:	pop    ebx
  419ef4:	ret    
  419ef5:	mov    DWORD PTR [ebx],esi
  419ef7:	cmp    ah,BYTE PTR [eax+0x0]
  419efa:	lock lods al,BYTE PTR cs:[esi]
  419efd:	mov    ax,ds:0x5eec6201
  419f03:	test   BYTE PTR [edi-0x59],al
  419f06:	aaa    
  419f07:	mov    dl,0xbe
  419f09:	stos   DWORD PTR es:[edi],eax
  419f0a:	(bad)  
  419f0b:	jmp    0x419f1d
  419f0d:	test   bl,cl
  419f0f:	or     eax,0x1e667369
  419f14:	jmp    0xcc02:0x1450de39
  419f1b:	dec    esp
  419f1c:	cli    
  419f1d:	bound  edi,QWORD PTR [ecx+0x46]
  419f20:	fnstcw WORD PTR [edi+0x40]
  419f23:	leave  
  419f24:	jmp    0xd9c7:0x62dc35b8
  419f2b:	xchg   DWORD PTR [eax+0x7743a4e4],ebp
  419f31:	jnp    0x419f4c
  419f33:	outs   dx,BYTE PTR ds:[esi]
  419f34:	sub    eax,0xb800028c
  419f39:	dec    eax
  419f3a:	clc    
  419f3b:	leave  
  419f3c:	sub    esp,esp
  419f3e:	aas    
  419f3f:	push   esp
  419f40:	jg     0x419eeb
  419f42:	repnz ss mov ebx,0xe8e32eb3
  419f49:	(bad)  
  419f4d:	ds cld 
  419f4f:	push   es
  419f50:	test   ebx,esi
  419f52:	arpl   ax,dx
  419f54:	rol    DWORD PTR [ebx-0x7e62487e],0xdd
  419f5b:	xor    BYTE PTR [ecx+0x1afbc4a9],dh
  419f61:	out    0x88,eax
  419f63:	ror    ah,1
  419f65:	inc    esp
  419f66:	mov    edi,edx
  419f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f69:	mov    ah,0x16
  419f6b:	icebp  
  419f6c:	fs ins DWORD PTR es:[edi],dx
  419f6e:	xlat   BYTE PTR ds:[ebx]
  419f6f:	popa   
  419f70:	mov    bh,0x5
  419f72:	gs pop ebx
  419f74:	jbe    0x419fd7
  419f76:	outs   dx,BYTE PTR ds:[esi]
  419f77:	fcom   DWORD PTR [edi-0x35e6179c]
  419f7d:	jmp    0x419ff0
  419f7f:	dec    ecx
  419f80:	add    ebp,edx
  419f82:	lock adc dh,bl
  419f85:	bnd jb 0x419f3c
  419f88:	pop    esi
  419f89:	leave  
  419f8a:	loopne 0x419fb0
  419f8c:	fs lahf 
  419f8e:	sbb    DWORD PTR [ebp+0x77],edx
  419f91:	mov    ebx,DWORD PTR [ebx+edx*4-0x2941d55b]
  419f98:	cmp    eax,esp
  419f9a:	aas    
  419f9b:	xchg   esi,eax
  419f9c:	ja     0x419fd7
  419f9e:	mov    ah,0x8f
  419fa0:	push   0xffffff9d
  419fa2:	in     eax,dx
  419fa3:	sub    eax,DWORD PTR [edx+0x33]
  419fa6:	retf   0x781b
  419fa9:	sub    eax,0xffddefc
  419fae:	cmp    cl,BYTE PTR [edi]
  419fb0:	xor    DWORD PTR [eax+0x72],eax
  419fb3:	and    BYTE PTR [esi-0x7a],bl
  419fb6:	mov    bl,0x1a
  419fb8:	adc    al,0x51
  419fba:	cmp    BYTE PTR [esi+esi*4],ah
  419fbd:	mov    al,0x2d
  419fbf:	loop   0x419fc9
  419fc1:	sbb    ah,bl
  419fc3:	push   0x68
  419fc5:	aad    0x5f
  419fc7:	in     al,0x75
  419fc9:	push   esp
  419fca:	shl    dh,cl
  419fcc:	and    BYTE PTR [edx-0x3f],dl
  419fcf:	pop    esi
  419fd0:	jmp    0xab1d17ef
  419fd5:	mov    esp,0x26d6efd3
  419fda:	lahf   
  419fdb:	xchg   edi,eax
  419fdc:	inc    eax
  419fdd:	mov    eax,0xdc9e0e97
  419fe2:	retf   
  419fe3:	aaa    
  419fe4:	in     eax,0x38
  419fe6:	(bad)  
  419fe7:	leave  
  419fe8:	rol    BYTE PTR [ebp+0x17a213e5],0xa9
  419fef:	push   esp
  419ff0:	sbb    BYTE PTR [ebp+0x53],dl
  419ff3:	adc    esi,0x2ac8c7d7
  419ff9:	stc    
  419ffa:	dec    ebp
  419ffb:	test   eax,0x41f89567
  41a000:	lods   eax,DWORD PTR ds:[esi]
  41a001:	imul   ecx,DWORD PTR [edi-0x6dcfd636],0x74
  41a008:	pop    edi
  41a009:	mov    esi,ebx
  41a00b:	test   BYTE PTR [esi-0x343a7ba8],ah
  41a011:	call   0x400b:0x22a378b3
  41a018:	les    ecx,FWORD PTR [edi]
  41a01a:	pop    es
  41a01b:	xor    eax,0xd0831ebd
  41a020:	xchg   ebp,eax
  41a021:	les    ebp,FWORD PTR [esi-0x4e]
  41a024:	clc    
  41a025:	mov    esi,ss
  41a027:	and    DWORD PTR ss:[ecx-0x8],edi
  41a02b:	test   al,0x78
  41a02d:	sub    eax,0x204c79c1
  41a032:	push   ecx
  41a033:	dec    ebp
  41a034:	mov    bh,0x5a
  41a036:	ja     0x41a0a9
  41a038:	dec    ecx
  41a039:	call   0x28d4bebe
  41a03e:	int3   
  41a03f:	sub    BYTE PTR [edx],ah
  41a041:	xchg   DWORD PTR [edi+esi*8-0x4861c14a],ebp
  41a048:	cmp    al,0xdf
  41a04a:	pop    es
  41a04b:	jmp    0xafdf:0xa23f7328
  41a052:	and    dh,BYTE PTR [ebx-0x26fa4642]
  41a058:	pop    eax
  41a059:	int3   
  41a05a:	hlt    
  41a05b:	cmp    eax,0x66ae4d11
  41a060:	mov    al,BYTE PTR [edi]
  41a062:	mov    edx,DWORD PTR [esi+0x13]
  41a065:	jae    0x41a019
  41a067:	popa   
  41a068:	mov    esi,0x65c2aa84
  41a06d:	mov    ebx,0x99e79757
  41a072:	cli    
  41a073:	adc    eax,0x616afeac
  41a078:	shl    BYTE PTR es:[ebp+eax*8+0x62e3c1d7],cl
  41a080:	jecxz  0x41a0c1
  41a082:	fmul   QWORD PTR [esi+0x6856c5b8]
  41a088:	jmp    0xab5beddc
  41a08d:	pop    ebp
  41a08e:	mov    gs,WORD PTR [eax]
  41a090:	dec    esi
  41a091:	or     BYTE PTR [edi-0x774a9fcb],bl
  41a097:	pop    ecx
  41a098:	jb     0x41a0ec
  41a09a:	jge    0x41a01d
  41a09c:	fidiv  WORD PTR [eax+0x4e127764]
  41a0a2:	pop    ecx
  41a0a3:	add    DWORD PTR [ecx-0x53],0xd556ea47
  41a0aa:	inc    edi
  41a0ab:	(bad)  
  41a0ad:	and    ebx,DWORD PTR [edi+0x19]
  41a0b0:	loopne 0x41a0fa
  41a0b2:	push   esi
  41a0b3:	ins    BYTE PTR es:[edi],dx
  41a0b4:	arpl   si,dx
  41a0b6:	mov    ecx,0xfeac71cc
  41a0bb:	mov    al,ds:0x33e97138
  41a0c0:	xchg   esi,eax
  41a0c1:	ins    BYTE PTR es:[edi],dx
  41a0c2:	fiadd  WORD PTR [esi+0x1a5588c9]
  41a0c8:	push   ebp
  41a0c9:	fidiv  WORD PTR [esi]
  41a0cb:	xchg   BYTE PTR [edx+0x34c28e32],al
  41a0d1:	fwait
  41a0d2:	stos   DWORD PTR es:[edi],eax
  41a0d3:	or     BYTE PTR [edx+0xe],0x19
  41a0d7:	inc    ebp
  41a0d8:	fs mov esp,0x1ede17c6
  41a0de:	inc    ebx
  41a0df:	retf   
  41a0e0:	pushf  
  41a0e1:	cld    
  41a0e2:	jg     0x41a0cb
  41a0e4:	inc    edi
  41a0e5:	mov    ebx,0xf5cba54b
  41a0ea:	add    DWORD PTR [eax],edi
  41a0ec:	dec    ebp
  41a0ed:	int3   
  41a0ee:	cmp    bh,dl
  41a0f0:	mov    sp,0x170f
  41a0f4:	and    al,0xa1
  41a0f6:	xor    BYTE PTR [ebp+0x49],bh
  41a0f9:	retf   0xa092
  41a0fc:	mov    cl,0x65
  41a0fe:	pop    ds
  41a0ff:	sti    
  41a100:	daa    
  41a101:	mov    cl,0xe6
  41a103:	popa   
  41a104:	pop    ecx
  41a105:	outs   dx,BYTE PTR ds:[esi]
  41a106:	push   ecx
  41a107:	cmp    ebp,DWORD PTR [eax+0x2ab43fd3]
  41a10d:	add    DWORD PTR [esi],edx
  41a10f:	hlt    
  41a110:	sbb    DWORD PTR [esi],0x1b6f7272
  41a116:	es inc esi
  41a118:	push   ecx
  41a119:	iret   
  41a11a:	or     eax,0x5d7fea09
  41a11f:	cwde   
  41a120:	test   dx,cx
  41a123:	sbb    al,BYTE PTR [ebx+0x71a7b757]
  41a129:	push   cs
  41a12a:	ds or  eax,0xcd884932
  41a130:	xchg   esi,eax
  41a131:	outs   dx,DWORD PTR gs:[esi]
  41a133:	push   cs
  41a134:	sbb    eax,0x7443b305
  41a139:	test   eax,0x9e4a9e9e
  41a13e:	aas    
  41a13f:	jg     0x41a160
  41a141:	or     bl,BYTE PTR [edi]
  41a143:	cmp    al,0xf2
  41a145:	test   BYTE PTR [ebp-0x1a5e47a3],al
  41a14b:	call   0x3a830274
  41a150:	inc    ebx
  41a151:	leave  
  41a152:	xor    dl,cl
  41a154:	mov    dh,0x9e
  41a156:	sub    eax,0x2814a2b1
  41a15b:	retf   0x78cc
  41a15e:	repz pop esp
  41a160:	std    
  41a161:	mov    edi,0x5714a815
  41a166:	pop    eax
  41a167:	and    DWORD PTR [eax+0x3c],ebx
  41a16a:	cmp    ebx,DWORD PTR [esi]
  41a16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a16d:	pop    esp
  41a16e:	fadd   QWORD PTR [edi-0x783ac2b0]
  41a174:	sub    BYTE PTR [esi+0x6e7d0971],dl
  41a17a:	mov    ds:0x8179996d,al
  41a17f:	adc    bl,bh
  41a181:	pop    ebp
  41a182:	sbb    ebx,eax
  41a184:	out    dx,al
  41a185:	mov    cl,BYTE PTR [edi+0x37]
  41a188:	mul    BYTE PTR [edx]
  41a18a:	xchg   DWORD PTR [edx],ebx
  41a18c:	add    bl,bl
  41a18e:	stc    
  41a18f:	jne    0x41a165
  41a191:	in     al,0x65
  41a193:	jae    0x41a1a4
  41a195:	cmp    ebp,edi
  41a197:	mov    cl,0xc6
  41a199:	mov    ebp,0x5b6de558
  41a19e:	fwait
  41a19f:	aam    0xa7
  41a1a1:	push   edi
  41a1a2:	mov    ebp,0xec356d05
  41a1a7:	or     al,0x7b
  41a1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1aa:	clc    
  41a1ab:	fdivr  QWORD PTR [eax+0x2e]
  41a1ae:	mov    bh,0x6d
  41a1b0:	push   0xc7156bf7
  41a1b5:	or     BYTE PTR [edx+ebx*2-0x721255b1],0x43
  41a1bd:	xor    eax,0x88a32cbd
  41a1c2:	xor    DWORD PTR [ebx+0x40],esp
  41a1c5:	retf   
  41a1c6:	outs   dx,DWORD PTR ds:[esi]
  41a1c7:	jp     0x41a16f
  41a1c9:	mov    esp,DWORD PTR ds:0xa427497
  41a1cf:	mov    bl,0x69
  41a1d1:	ret    0xee82
  41a1d4:	mov    al,BYTE PTR [eax-0x53]
  41a1d7:	add    DWORD PTR [edi+0x2c],eax
  41a1da:	addr16 aas 
  41a1dc:	push   cs
  41a1dd:	scas   al,BYTE PTR es:[edi]
  41a1de:	ja     0x41a25a
  41a1e0:	hlt    
  41a1e1:	ret    
  41a1e2:	mov    WORD PTR [ecx-0x297bdcf],gs
  41a1e8:	stos   DWORD PTR es:[edi],eax
  41a1e9:	jns    0x41a234
  41a1eb:	fadd   QWORD PTR [ecx+0x6f]
  41a1ee:	jmp    0x41a19d
  41a1f0:	mov    al,0x72
  41a1f2:	mov    edx,0x248649bf
  41a1f7:	test   eax,0xc62d0645
  41a1fc:	adc    bl,BYTE PTR [edi-0xc]
  41a1ff:	in     eax,dx
  41a200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a201:	mov    eax,0x983fcee2
  41a206:	mov    esi,DWORD PTR [esi+0x8]
  41a209:	cs xor al,0x6a
  41a20c:	jbe    0x41a225
  41a20e:	add    BYTE PTR [ebx-0x54b97fd1],al
  41a214:	xchg   ecx,eax
  41a215:	addr16 mov cl,0xdb
  41a218:	dec    ebp
  41a21a:	cdq    
  41a21b:	dec    esp
  41a21c:	fiadd  WORD PTR [edx-0x4e6169bd]
  41a222:	jl     0x41a21d
  41a224:	fmul   QWORD PTR [eax+0xe3f99e]
  41a22a:	ror    BYTE PTR [edx-0x11],0x87
  41a22e:	jg     0x41a22d
  41a230:	pop    ebx
  41a231:	call   0xd994:0xd0fecac
  41a238:	sbb    ah,cl
  41a23a:	pop    ds
  41a23b:	lock pop ss
  41a23d:	xchg   ebp,eax
  41a23e:	xchg   esi,eax
  41a23f:	push   ds
  41a240:	mov    esi,0x219dc18e
  41a245:	or     esp,ebx
  41a247:	stos   DWORD PTR es:[edi],eax
  41a248:	pop    ax
  41a24a:	mov    BYTE PTR [ebp+0x44926257],dl
  41a250:	xchg   esp,eax
  41a251:	test   BYTE PTR ds:0x4a7fffc5,al
  41a257:	test   al,0x7a
  41a259:	iret   
  41a25a:	xor    edi,DWORD PTR gs:[ebp-0x38]
  41a25e:	cmp    dl,BYTE PTR [eax]
  41a260:	push   ds
  41a261:	and    ecx,0xe
  41a264:	mov    dl,0x9f
  41a266:	sar    DWORD PTR [edx+0x2a],1
  41a269:	adc    cl,BYTE PTR [esp+edi*4-0x5f]
  41a26d:	jno    0x41a2a1
  41a26f:	mov    ah,0xb2
  41a271:	or     dh,BYTE PTR [edi+0x2602861]
  41a277:	jne    0x41a227
  41a279:	jae    0x41a253
  41a27b:	cmp    eax,0x2f18a0ab
  41a280:	jne    0x41a25b
  41a282:	mov    ch,BYTE PTR [eax]
  41a284:	pusha  
  41a285:	adc    al,0xe
  41a287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a288:	lods   al,BYTE PTR ds:[esi]
  41a289:	mov    dl,0xe2
  41a28b:	pop    ecx
  41a28c:	xor    al,0x3a
  41a28e:	sub    al,0x1
  41a290:	xchg   edx,eax
  41a291:	mov    esp,0xb71867d3
  41a296:	rol    BYTE PTR [esi-0x5e],1
  41a299:	xor    al,0x1
  41a29b:	shl    ecx,1
  41a29d:	xchg   BYTE PTR [ebp-0x230fff66],al
  41a2a3:	loop   0x41a2ca
  41a2a5:	icebp  
  41a2a6:	ret    
  41a2a7:	stc    
  41a2a8:	push   cs
  41a2a9:	sbb    ch,ch
  41a2ab:	xchg   ebp,eax
  41a2ac:	jno    0x41a2e7
  41a2ae:	jp     0x41a2e3
  41a2b0:	enter  0x143c,0x44
  41a2b4:	fisttp WORD PTR [ebp+0x6d72f725]
  41a2ba:	enter  0x3ce0,0xee
  41a2be:	sub    eax,0xbcb65718
  41a2c3:	scas   al,BYTE PTR es:[edi]
  41a2c4:	or     ah,BYTE PTR [ebp-0x5f621b00]
  41a2ca:	mov    eax,ds:0x9442474b
  41a2cf:	dec    BYTE PTR [edx+0xdc5eb03]
  41a2d5:	push   es
  41a2d6:	xchg   edi,eax
  41a2d7:	push   cs
  41a2d8:	test   al,0x95
  41a2da:	or     DWORD PTR fs:[eax+eax*8+0x59],esi
  41a2df:	or     eax,0xa8dd5e3b
  41a2e4:	pop    ss
  41a2e5:	fwait
  41a2e6:	loopne 0x41a2ef
  41a2e8:	cs retf 
  41a2ea:	adc    ebx,0x82b45d81
  41a2f0:	cs push eax
  41a2f2:	and    eax,0x8993b3b2
  41a2f7:	fdivr  st(7),st
  41a2f9:	fistp  DWORD PTR [esp+ecx*2]
  41a2fc:	mul    BYTE PTR [esi+0xa36a18d]
  41a302:	sbb    bh,BYTE PTR [ebx+0xd]
  41a305:	fisttp WORD PTR [ebx-0x4b]
  41a308:	lock xchg esp,eax
  41a30a:	xchg   ebp,eax
  41a30b:	xor    eax,0x1c9e6e1
  41a310:	ins    DWORD PTR es:[edi],dx
  41a311:	out    0xd1,al
  41a313:	dec    ecx
  41a314:	jo     0x41a2a6
  41a316:	mov    bh,BYTE PTR [ecx*1+0x2577a832]
  41a31d:	lock loope 0x41a2a5
  41a320:	lock test eax,0xc6c5b84e
  41a326:	out    dx,eax
  41a327:	or     bl,al
  41a329:	ins    DWORD PTR es:[edi],dx
  41a32a:	imul   esi,DWORD PTR [ebx+0x61],0x4c2d301a
  41a331:	xchg   edx,eax
  41a332:	es pop ecx
  41a334:	das    
  41a335:	jb     0x41a2cf
  41a337:	mov    ds:0xd110ac45,eax
  41a33c:	les    esi,FWORD PTR [ecx+edx*8+0x51d0359b]
  41a343:	cmp    BYTE PTR [eax],al
  41a345:	pop    es
  41a346:	inc    edi
  41a347:	mov    ebp,0x5305e018
  41a34c:	sbb    cl,BYTE PTR [esi-0x59]
  41a34f:	dec    edi
  41a350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a351:	scas   eax,DWORD PTR es:[edi]
  41a352:	mov    ds:0x2c09cbb0,al
  41a357:	jg     0x41a3ca
  41a359:	mov    al,0x31
  41a35b:	xchg   ecx,eax
  41a35c:	icebp  
  41a35d:	sub    eax,0x3a28033d
  41a362:	gs lock jmp 0x41a2f2
  41a366:	xchg   ecx,eax
  41a367:	out    0xf5,eax
  41a369:	ja     0x41a334
  41a36b:	sub    eax,DWORD PTR [ebp-0x7b7d4d0b]
  41a371:	test   BYTE PTR [edi+0x3a332c26],al
  41a377:	cwde   
  41a378:	push   esp
  41a379:	sub    edi,DWORD PTR [ebp-0x6e]
  41a37c:	out    dx,eax
  41a37d:	adc    BYTE PTR [ecx+0x31986c63],0x1b
  41a384:	and    DWORD PTR ds:0x69d9fd95,ebp
  41a38a:	push   0x94ff7374
  41a38f:	inc    ebp
  41a390:	push   ds
  41a391:	outs   dx,BYTE PTR ds:[esi]
  41a392:	gs mov ch,0x9b
  41a395:	jb     0x41a318
  41a397:	jecxz  0x41a3d0
  41a399:	sahf   
  41a39a:	(bad)  
  41a39b:	jmp    0x32a6eea9
  41a3a0:	imul   esi,ecx,0xffffffdd
  41a3a3:	pop    esp
  41a3a4:	ins    BYTE PTR es:[edi],dx
  41a3a5:	imul   edx,ecx,0x5b7e9b1e
  41a3ab:	(bad)  
  41a3ac:	mov    ecx,0x2da0ea64
  41a3b1:	mov    ah,0xd3
  41a3b3:	dec    ebx
  41a3b4:	frstor [esi-0x15]
  41a3b7:	push   esp
  41a3b8:	mov    dl,0x73
  41a3ba:	adc    esp,edi
  41a3bc:	fwait
  41a3bd:	push   ds
  41a3be:	and    eax,0x496bb6a8
  41a3c3:	pop    edx
  41a3c4:	fwait
  41a3c5:	in     al,0x81
  41a3c7:	jne    0x41a41a
  41a3c9:	lock mov esp,0x31bd5a1b
  41a3cf:	adc    al,0x9a
  41a3d1:	xchg   ebp,eax
  41a3d2:	fst    QWORD PTR [eax-0x66]
  41a3d5:	or     eax,0x1267a01c
  41a3da:	inc    edx
  41a3db:	dec    ecx
  41a3dc:	repz std 
  41a3de:	mov    eax,0x79d4ce1f
  41a3e3:	cmp    ah,ah
  41a3e5:	xchg   esi,eax
  41a3e6:	dec    ebx
  41a3e7:	es pop ds
  41a3e9:	jmp    0x41a426
  41a3eb:	std    
  41a3ec:	cwde   
  41a3ed:	mov    ds:0x9cf03a,eax
  41a3f2:	test   al,0xd8
  41a3f4:	lods   eax,DWORD PTR ds:[esi]
  41a3f5:	test   DWORD PTR [eax+ebx*2-0x61f964e3],ebp
  41a3fc:	mov    ds:0xbbdf4434,al
  41a401:	aaa    
  41a402:	retf   0xbb69
  41a405:	enter  0x70ea,0xe5
  41a409:	fild   QWORD PTR [ecx+edi*8+0x1c]
  41a40d:	sub    ah,BYTE PTR [edx+0x53]
  41a410:	dec    eax
  41a411:	shl    BYTE PTR [esp+eiz*2-0x61],cl
  41a415:	mul    DWORD PTR [eax+0x50]
  41a418:	imul   ebx,DWORD PTR [esi+0x4a9c422d],0xffffffdf
  41a41f:	cdq    
  41a420:	pop    edx
  41a421:	bound  edi,QWORD PTR [eax]
  41a423:	mov    ebp,0x9f10d592
  41a428:	popf   
  41a429:	sahf   
  41a42a:	int    0xfa
  41a42c:	jle    0x41a452
  41a42e:	dec    edi
  41a42f:	dec    ecx
  41a430:	lods   al,BYTE PTR ds:[esi]
  41a431:	adc    al,0x4b
  41a433:	mov    dl,0xbb
  41a435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a436:	in     eax,dx
  41a437:	stc    
  41a438:	xor    DWORD PTR [edi+0x3e],edx
  41a43b:	add    esi,0xdda0bce9
  41a441:	xchg   edx,eax
  41a442:	jno    0x41a43a
  41a444:	push   cs
  41a445:	shl    dl,1
  41a447:	xchg   edx,eax
  41a448:	mov    edi,0x4ab90619
  41a44d:	retf   0x1292
  41a450:	es jge 0x41a3f5
  41a453:	(bad)  
  41a454:	lds    esi,FWORD PTR [eax+0x3b61cb0]
  41a45a:	out    dx,al
  41a45b:	xchg   BYTE PTR [esi+0x7],al
  41a45e:	push   es
  41a45f:	inc    ebp
  41a460:	mov    al,ds:0xb0492015
  41a465:	ins    DWORD PTR es:[edi],dx
  41a466:	cwde   
  41a467:	jmp    0x1224:0x8737d983
  41a46e:	and    ecx,DWORD PTR [ecx]
  41a470:	(bad)  
  41a471:	mov    ss,WORD PTR [esi-0x416b9d0]
  41a477:	mov    bh,0xbe
  41a479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a47a:	(bad)  
  41a47b:	fcom   DWORD PTR [eax-0x57]
  41a47e:	shr    BYTE PTR [ecx+edi*8],cl
  41a481:	cmp    esi,DWORD PTR ds:0x4c4cd99d
  41a487:	cld    
  41a488:	jbe    0x41a4c3
  41a48a:	stos   DWORD PTR es:[edi],eax
  41a48b:	sti    
  41a48c:	cmp    BYTE PTR [ebp+ebp*8+0x2cc495e4],dl
  41a493:	lds    ecx,FWORD PTR [edi+esi*4-0x46]
  41a497:	das    
  41a498:	add    DWORD PTR [esi+0x7e],edi
  41a49b:	xor    al,bh
  41a49d:	and    ecx,DWORD PTR [edx+0x6abb1ecb]
  41a4a3:	add    edx,DWORD PTR [edx+ebx*4]
  41a4a6:	push   ebx
  41a4a7:	cmp    eax,0x3bff04cd
  41a4ac:	sbb    eax,0xdc1b5d43
  41a4b1:	call   0x78fe91dd
  41a4b6:	fldcw  WORD PTR [edi-0x39]
  41a4b9:	and    DWORD PTR [edi+0x69],edi
  41a4bc:	inc    edi
  41a4bd:	xchg   esi,eax
  41a4be:	push   ds
  41a4bf:	mov    ds:0x3f3ede1a,eax
  41a4c4:	sub    BYTE PTR [eax-0x5c],ch
  41a4c7:	stos   DWORD PTR es:[edi],eax
  41a4c8:	mov    al,ds:0xf7574b49
  41a4cd:	jmp    0x41a4ff
  41a4cf:	repnz pop es
  41a4d1:	add    bh,cl
  41a4d3:	mov    ds:0xa4422bbd,al
  41a4d8:	in     al,0x18
  41a4da:	cmp    DWORD PTR [edi],0x2f
  41a4dd:	lods   eax,DWORD PTR ds:[esi]
  41a4de:	stos   BYTE PTR es:[edi],al
  41a4df:	stos   BYTE PTR es:[edi],al
  41a4e0:	jg     0x41a520
  41a4e2:	push   0xa332036f
  41a4e7:	jb     0x41a53d
  41a4e9:	xchg   esi,eax
  41a4ea:	xchg   edx,eax
  41a4eb:	aam    0x8f
  41a4ed:	or     BYTE PTR [esi],al
  41a4ef:	push   esi
  41a4f0:	mov    esi,0xef8392a4
  41a4f5:	xor    bh,bl
  41a4f7:	(bad)  
  41a4f8:	cmp    bl,BYTE PTR [ebx-0x56]
  41a4fb:	cli    
  41a4fc:	pop    eax
  41a4fd:	cmc    
  41a4fe:	fistp  WORD PTR [eax]
  41a500:	lahf   
  41a501:	idiv   BYTE PTR [edi-0x2]
  41a504:	test   eax,0x185eac29
  41a509:	fwait
  41a50a:	mov    eax,0xb6c38313
  41a50f:	int3   
  41a510:	test   DWORD PTR [ebp-0x35],edx
  41a513:	push   cs
  41a514:	mov    esp,0xdc7526d5
  41a519:	outs   dx,BYTE PTR ds:[esi]
  41a51a:	fidivr WORD PTR [esi]
  41a51c:	mov    al,ds:0x9c120bdb
  41a521:	mov    al,ds:0x36ba87a2
  41a526:	push   eax
  41a527:	inc    BYTE PTR [edx+0x72]
  41a52a:	mov    ch,0xa
  41a52c:	adc    eax,0xd3fc1160
  41a531:	test   BYTE PTR [eax],bh
  41a533:	fistp  DWORD PTR [edx-0x66860394]
  41a539:	loopne 0x41a5b7
  41a53b:	ret    0xd735
  41a53e:	cmp    BYTE PTR [esi],dh
  41a540:	xor    al,0x52
  41a542:	jmp    0xbe49b181
  41a547:	and    cl,BYTE PTR [edi+ebp*2-0x19aadea6]
  41a54e:	in     eax,0xee
  41a550:	fdiv   DWORD PTR [eax]
  41a552:	int3   
  41a553:	push   eax
  41a554:	inc    ebp
  41a555:	fdivr  QWORD PTR [ecx-0x3a46f98b]
  41a55b:	mov    edi,0xa8fe86e3
  41a560:	xchg   BYTE PTR [esi],dl
  41a562:	js     0x41a5b2
  41a564:	jge    0x41a5c8
  41a566:	and    BYTE PTR [edi+0x6abba3e6],cl
  41a56c:	push   ss
  41a56d:	ja     0x41a565
  41a56f:	sbb    ecx,DWORD PTR [ecx]
  41a571:	sahf   
  41a572:	mov    BYTE PTR [ebp-0x4f8de462],bh
  41a578:	in     eax,0x4c
  41a57a:	jns    0x41a5df
  41a57c:	neg    BYTE PTR ds:0x15ff5d88
  41a582:	push   edi
  41a583:	lock es inc edi
  41a586:	pusha  
  41a587:	shr    ecx,0xdb
  41a58a:	inc    ecx
  41a58b:	and    edi,DWORD PTR [esi+0x2e06dcde]
  41a591:	xchg   esp,eax
  41a592:	mov    edi,0xe6836efc
  41a597:	dec    ebx
  41a598:	stos   BYTE PTR es:[edi],al
  41a599:	push   esp
  41a59a:	adc    eax,0x9371cc52
  41a59f:	jnp    0x41a5d8
  41a5a1:	pop    ebp
  41a5a2:	fcomp  QWORD PTR [esi]
  41a5a4:	inc    edi
  41a5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a6:	push   edx
  41a5a7:	(bad)  
  41a5a8:	rcl    BYTE PTR [edx-0x1e],cl
  41a5ab:	mov    cs,ecx
  41a5ad:	lahf   
  41a5ae:	imul   esp,DWORD PTR [edx],0xa9fcb6a8
  41a5b4:	mov    ecx,0x4ffa254
  41a5b9:	imul   edx,DWORD PTR [edi],0xffffffae
  41a5bc:	es ins DWORD PTR es:[edi],dx
  41a5be:	mov    ebx,0x6d173829
  41a5c3:	lea    ebx,[eax]
  41a5c5:	add    DWORD PTR [edi],ebp
  41a5c7:	sbb    eax,0x4649aa36
  41a5cc:	and    dl,dh
  41a5ce:	cmp    DWORD PTR [ecx+0x1b389cd7],ebp
  41a5d4:	inc    esi
  41a5d5:	push   eax
  41a5d6:	cli    
  41a5d7:	jne    0x41a657
  41a5d9:	push   ebx
  41a5da:	jp     0x41a5c1
  41a5dc:	mov    eax,0x72c0627
  41a5e1:	sub    eax,eax
  41a5e3:	ret    
  41a5e4:	lock mov ebx,0x8b9dbb16
  41a5ea:	sub    bh,BYTE PTR [ecx]
  41a5ec:	push   cs
  41a5ed:	ror    BYTE PTR [ecx+0x1f],1
  41a5f0:	xchg   edx,eax
  41a5f1:	jno    0x41a5fd
  41a5f3:	je     0x41a5c9
  41a5f5:	jle    0x41a63b
  41a5f7:	inc    ebp
  41a5f8:	sahf   
  41a5f9:	inc    edi
  41a5fa:	dec    ebp
  41a5fb:	scas   eax,DWORD PTR es:[edi]
  41a5fc:	mov    cl,0xbd
  41a5fe:	jno    0x41a67f
  41a600:	mov    ds:0xe3c68683,eax
  41a605:	in     eax,dx
  41a606:	xchg   esp,eax
  41a607:	test   al,0xe1
  41a609:	cld    
  41a60a:	inc    ecx
  41a60b:	int3   
  41a60c:	sahf   
  41a60d:	gs call 0x3f81:0x7322be8
  41a615:	rcl    edx,cl
  41a617:	mov    ah,0xc9
  41a619:	gs jne 0x41a5e9
  41a61c:	jo     0x41a666
  41a61e:	daa    
  41a61f:	into   
  41a620:	fist   DWORD PTR [ebx+eax*1]
  41a623:	mov    WORD PTR [eax],es
  41a625:	sti    
  41a626:	loop   0x41a680
  41a628:	(bad)  
  41a629:	in     eax,dx
  41a62a:	cmp    DWORD PTR [esi+0xf56ae11],ebx
  41a630:	dec    ebx
  41a631:	nop
  41a632:	cld    
  41a633:	xchg   ebp,eax
  41a634:	stos   DWORD PTR es:[edi],eax
  41a635:	adc    edi,DWORD PTR [ebx+edx*4]
  41a638:	or     ebp,0x3fcf722e
  41a63e:	nop    esi
  41a641:	jns    0x41a67d
  41a643:	shl    DWORD PTR ds:0x10f0b69c,0xe4
  41a64a:	mov    al,0xa4
  41a64c:	mov    ch,0x23
  41a64e:	or     esp,DWORD PTR [esi]
  41a650:	pop    ebp
  41a651:	xchg   edi,eax
  41a652:	and    al,0x25
  41a654:	int    0x1a
  41a656:	pop    ds
  41a657:	iret   
  41a658:	ins    DWORD PTR es:[edi],dx
  41a659:	lea    esi,[esi-0x63]
  41a65c:	imul   edx,DWORD PTR [ecx+0x3c962122],0xffffff81
  41a663:	dec    esi
  41a664:	xchg   ebp,eax
  41a665:	and    al,0xe7
  41a667:	ret    0x4bd8
  41a66a:	push   edx
  41a66b:	dec    esi
  41a66c:	pusha  
  41a66d:	inc    BYTE PTR [edx+0x23]
  41a670:	dec    DWORD PTR [edi+0x6351d597]
  41a676:	adc    eax,0x30cbdf6e
  41a67b:	push   ecx
  41a67c:	push   ebp
  41a67d:	fs and al,0xfd
  41a680:	mov    ch,0x48
  41a682:	xchg   ebx,eax
  41a683:	adc    BYTE PTR fs:[ebp+0x773fa447],al
  41a68a:	dec    ecx
  41a68b:	xchg   edi,eax
  41a68c:	test   al,0xc0
  41a68e:	adc    esp,edi
  41a690:	gs mov ?,ebp
  41a693:	pop    esp
  41a694:	and    BYTE PTR [eax+0x3bcc84e],cl
  41a69a:	pop    edx
  41a69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a69c:	sti    
  41a69d:	sbb    eax,DWORD PTR [ebx]
  41a69f:	inc    ebx
  41a6a0:	shr    DWORD PTR [esp+ecx*4+0x4a13acbe],0xd0
  41a6a8:	xchg   ecx,eax
  41a6a9:	inc    edx
  41a6aa:	adc    al,0x13
  41a6ac:	mov    al,ds:0xfe9e7d3f
  41a6b1:	test   al,0xf8
  41a6b3:	nop
  41a6b4:	jnp    0x41a6ee
  41a6b6:	jmp    0x41a68f
  41a6b8:	hlt    
  41a6b9:	fidivr WORD PTR [edx-0x40a8ed49]
  41a6bf:	(bad)  
  41a6c1:	xor    ch,BYTE PTR [ecx+ebx*8]
  41a6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c5:	sub    esi,eax
  41a6c7:	and    dl,cl
  41a6c9:	push   ebx
  41a6ca:	sbb    edi,DWORD PTR [edx+0x5419f177]
  41a6d0:	pop    edx
  41a6d1:	lock outs dx,BYTE PTR ds:[esi]
  41a6d3:	xchg   BYTE PTR [edi-0x3c],bh
  41a6d6:	xchg   edi,eax
  41a6d7:	shr    BYTE PTR [edi],cl
  41a6d9:	adc    eax,0xad31b10c
  41a6de:	rol    esp,0x9c
  41a6e1:	scas   eax,DWORD PTR es:[edi]
  41a6e2:	cwde   
  41a6e3:	leave  
  41a6e4:	inc    ebx
  41a6e5:	pushf  
  41a6e6:	icebp  
  41a6e7:	aam    0xb6
  41a6e9:	xchg   cx,ax
  41a6eb:	mov    cl,0xa5
  41a6ed:	inc    edx
  41a6ee:	rol    BYTE PTR [edi],0xe1
  41a6f1:	(bad)  
  41a6f2:	mov    ds:0xf1df834d,eax
  41a6f7:	xchg   ecx,eax
  41a6f8:	inc    eax
  41a6f9:	lds    eax,FWORD PTR [ebx-0x6e0c7248]
  41a6ff:	pushf  
  41a700:	push   edi
  41a701:	mov    ebx,0xbed8aa79
  41a706:	mov    ah,0xe5
  41a708:	ficom  DWORD PTR [ebx]
  41a70a:	into   
  41a70b:	das    
  41a70c:	xor    al,0x10
  41a70e:	xor    ch,al
  41a710:	add    eax,0x8834087e
  41a715:	sbb    eax,0xb7aaa4a4
  41a71a:	ss stos BYTE PTR es:[edi],al
  41a71c:	dec    ecx
  41a71d:	fild   WORD PTR [eax+0x5e]
  41a720:	enter  0x2b38,0xb8
  41a724:	and    BYTE PTR [ebp+0x43ff2b73],bl
  41a72a:	stos   BYTE PTR es:[edi],al
  41a72b:	fisttp WORD PTR [eax-0x66]
  41a72e:	ins    DWORD PTR es:[edi],dx
  41a72f:	and    al,0xe7
  41a731:	dec    eax
  41a732:	sub    esp,edx
  41a734:	and    bh,BYTE PTR [esi+0x19]
  41a737:	xor    DWORD PTR [edx+0x11884ffe],0x62c6851c
  41a741:	ins    DWORD PTR es:[edi],dx
  41a742:	mov    dh,BYTE PTR [ebx+0x4d279d55]
  41a748:	push   ebp
  41a749:	rol    DWORD PTR [ebp-0x7a619940],0xc6
  41a750:	or     BYTE PTR [esi],dh
  41a752:	fwait
  41a753:	push   0xffffff93
  41a755:	sbb    al,0xa6
  41a757:	jmp    0x3fadf05c
  41a75c:	mov    eax,ds:0x78da61ca
  41a761:	stos   DWORD PTR es:[edi],eax
  41a762:	mov    ecx,0xe84b9851
  41a767:	mov    esi,0x384562d2
  41a76c:	aad    0x7
  41a76e:	addr16 dec ebp
  41a770:	xor    BYTE PTR [ebp+edi*8+0x2bbaef1],dh
  41a777:	bound  eax,QWORD PTR [edi-0x2d]
  41a77a:	scas   al,BYTE PTR es:[edi]
  41a77b:	push   ds
  41a77c:	mov    ds:0xa50a0275,eax
  41a781:	repz mov bl,0x0
  41a784:	jo     0x41a803
  41a786:	xor    eax,DWORD PTR [esi]
  41a788:	cmp    BYTE PTR [esi],al
  41a78a:	sahf   
  41a78b:	jno    0x41a749
  41a78d:	xchg   ecx,eax
  41a78e:	jb     0x41a71d
  41a790:	push   edi
  41a791:	pcmpeqw mm6,QWORD PTR [edi-0x40da93ab]
  41a798:	xor    DWORD PTR [eax-0x63],ecx
  41a79b:	sub    eax,edi
  41a79d:	clc    
  41a79e:	fnsave [ebp+0x19e0bc3f]
  41a7a4:	(bad)  
  41a7a5:	xchg   ebx,eax
  41a7a6:	call   0x1351ce6c
  41a7ab:	pop    ecx
  41a7ac:	and    dh,cl
  41a7ae:	jno    0x41a756
  41a7b0:	ins    BYTE PTR es:[edi],dx
  41a7b1:	xchg   ebp,eax
  41a7b2:	jp     0x41a7e8
  41a7b4:	cmp    BYTE PTR ds:0x67a649cb,cl
  41a7ba:	mov    ds:0x88a9533e,eax
  41a7bf:	aad    0xa0
  41a7c1:	push   edx
  41a7c2:	lahf   
  41a7c3:	test   DWORD PTR [eax-0x2201a31e],esi
  41a7c9:	or     al,0x53
  41a7cb:	sub    DWORD PTR [ebp+0x1e71131a],ecx
  41a7d1:	mov    DWORD PTR [edx-0x735afd2b],edx
  41a7d7:	mov    ds:0x570eaad4,al
  41a7dc:	push   DWORD PTR [esi]
  41a7de:	rcr    BYTE PTR [edx+edx*8],cl
  41a7e1:	xchg   edx,eax
  41a7e2:	push   edx
  41a7e3:	vmptrld QWORD PTR [esi+0x1b500d30]
  41a7ea:	sbb    DWORD PTR [ebp-0x2a84151c],eax
  41a7f0:	xchg   edi,eax
  41a7f1:	mov    ebx,0x36e40799
  41a7f6:	push   esp
  41a7f7:	sar    DWORD PTR [edx-0x69],0x2d
  41a7fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7fc:	dec    ebp
  41a7fd:	(bad)  
  41a7ff:	mov    eax,0x78572874
  41a804:	mov    dh,0x4
  41a806:	push   edx
  41a807:	inc    esp
  41a808:	jg     0x41a7d7
  41a80a:	outs   dx,DWORD PTR ds:[esi]
  41a80b:	mov    fs,WORD PTR [esp+ebp*4+0x15]
  41a80f:	mov    bl,0xc7
  41a811:	xrelease mov BYTE PTR [ecx+0x8877351],0xa5
  41a819:	sbb    al,0xc5
  41a81b:	adc    eax,0x102f49aa
  41a820:	es xchg ebx,eax
  41a822:	sub    eax,0x6a5d6c04
  41a827:	xchg   ebp,eax
  41a828:	int    0x9c
  41a82a:	scas   al,BYTE PTR es:[edi]
  41a82b:	shl    BYTE PTR [edi+eax*4+0x98a8691],0xbb
  41a833:	js     0x41a831
  41a835:	mov    al,ds:0x68955b54
  41a83a:	mov    dl,0xe5
  41a83c:	and    BYTE PTR [ebx-0x57836865],dl
  41a842:	hlt    
  41a843:	jns    0x41a824
  41a845:	ror    DWORD PTR ds:0x1f261ee9,1
  41a84b:	fwait
  41a84c:	mov    al,0x9a
  41a84e:	in     eax,dx
  41a84f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a850:	mov    ecx,DWORD PTR [ecx]
  41a852:	push   edx
  41a853:	push   ds
  41a854:	xchg   esi,eax
  41a855:	pushf  
  41a856:	push   esp
  41a857:	leave  
  41a858:	sub    bl,al
  41a85a:	mov    DWORD PTR [edi+0x37b1e9c0],edx
  41a860:	mov    dl,0x2
  41a862:	add    al,0x59
  41a864:	add    esi,ebx
  41a866:	pop    ebx
  41a867:	xor    dh,ah
  41a869:	xor    BYTE PTR ds:0x8d2d5da7,ch
  41a86f:	mov    dl,0x63
  41a871:	out    dx,eax
  41a872:	pop    ds
  41a873:	jl     0x41a89c
  41a875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a876:	ins    BYTE PTR es:[edi],dx
  41a877:	jae    0x41a852
  41a879:	pop    esp
  41a87a:	in     eax,dx
  41a87b:	xchg   edx,eax
  41a87c:	inc    ecx
  41a87d:	xchg   ecx,eax
  41a87e:	fisttp QWORD PTR [ecx+0x5c]
  41a881:	mov    ebp,0xd5b57a87
  41a886:	mov    bh,0x81
  41a888:	popf   
  41a889:	adc    eax,0x6a7c84ff
  41a88e:	call   DWORD PTR ds:0x3f3bf9e2
  41a894:	fadd   QWORD PTR [ecx]
  41a896:	add    eax,0x9de57e9
  41a89b:	add    cl,BYTE PTR [ecx+0x41]
  41a89e:	mov    ecx,0x4aad7c77
  41a8a3:	loopne 0x41a894
  41a8a5:	ficomp WORD PTR [ecx]
  41a8a7:	mov    eax,0xb88bfb4
  41a8ac:	and    DWORD PTR [edi-0x6bfb83d2],0xffffffe0
  41a8b3:	mov    ecx,0x935371b
  41a8b8:	push   esp
  41a8b9:	popa   
  41a8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8bb:	gs aam 0x85
  41a8be:	inc    edx
  41a8bf:	stc    
  41a8c0:	adc    esp,esi
  41a8c2:	sti    
  41a8c3:	xlat   BYTE PTR ds:[ebx]
  41a8c4:	js     0x41a926
  41a8c6:	sub    eax,0x8ab15b2a
  41a8cb:	jle    0x41a861
  41a8cd:	pop    es
  41a8ce:	pop    ebx
  41a8cf:	jnp    0x41a8ca
  41a8d1:	push   es
  41a8d2:	mov    ebp,DWORD PTR fs:[ebp-0x546720e1]
  41a8d9:	in     al,dx
  41a8da:	and    ecx,DWORD PTR [esi]
  41a8dc:	js     0x41a937
  41a8de:	mov    eax,0xf6a9747
  41a8e3:	imul   esp,DWORD PTR [ecx-0x36],0x25d58876
  41a8ea:	mov    esi,0xac9c5ff3
  41a8ef:	mov    esp,0x4a069dbf
  41a8f4:	dec    esi
  41a8f5:	cmp    BYTE PTR [ebx+0x54955161],ah
  41a8fb:	fcom   QWORD PTR [edx-0x67]
  41a8fe:	sbb    DWORD PTR [esi+eax*8],ebx
  41a901:	test   al,0x7f
  41a903:	pop    edx
  41a904:	pop    esi
  41a905:	jo     0x41a8fd
  41a907:	add    edx,DWORD PTR [edx-0x70]
  41a90a:	adc    esp,DWORD PTR [ecx-0x2b]
  41a90d:	aam    0x3d
  41a90f:	shl    BYTE PTR [eax+0x2d],0xe8
  41a913:	jne    0x41a91a
  41a915:	xchg   edx,eax
  41a916:	rcr    BYTE PTR [eax],cl
  41a918:	stc    
  41a919:	push   esi
  41a91a:	mov    bh,0xf0
  41a91c:	mov    ds:0xcdc4fcc,al
  41a921:	mov    al,ds:0x67718b2e
  41a926:	adc    ecx,esp
  41a928:	sub    bh,BYTE PTR ds:0x5edfed10
  41a92e:	fimul  DWORD PTR [edx]
  41a930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a931:	(bad)  
  41a932:	xchg   ebx,eax
  41a933:	dec    ebx
  41a934:	sar    al,1
  41a936:	or     bh,BYTE PTR [edx-0x5ad519e6]
  41a93c:	mov    esp,DWORD PTR [ebp+0xc]
  41a93f:	jmp    0x41a8d6
  41a941:	(bad)  
  41a943:	popf   
  41a944:	xchg   BYTE PTR [esi],bl
  41a946:	fwait
  41a947:	jnp    0x41a948
  41a949:	dec    edi
  41a94a:	(bad)  
  41a94b:	sar    DWORD PTR [edi],cl
  41a94d:	aad    0x1e
  41a94f:	push   ebx
  41a950:	mov    bl,0xc0
  41a952:	mov    ch,0x75
  41a954:	dec    edx
  41a955:	ja     0x41a946
  41a957:	xor    ebx,DWORD PTR [ebp+0x36c11cb0]
  41a95d:	popa   
  41a95e:	adc    BYTE PTR [eax-0x16],0x90
  41a962:	adc    al,0x9e
  41a964:	xor    al,0xa2
  41a966:	shr    BYTE PTR [edx+edx*8],0x96
  41a96a:	stc    
  41a96b:	sbb    DWORD PTR [eax+0x20],eax
  41a96e:	cmp    esi,DWORD PTR [ecx]
  41a970:	cmp    al,0x80
  41a972:	ja     0x41a9be
  41a974:	stos   DWORD PTR es:[edi],eax
  41a975:	iret   
  41a976:	sbb    DWORD PTR [edx+ecx*1+0x41a1b46],edx
  41a97d:	or     bl,bh
  41a97f:	fist   WORD PTR [esi-0x60910017]
  41a985:	xor    ebx,edi
  41a987:	cli    
  41a988:	sub    dh,BYTE PTR [edx+0x3aeba51f]
  41a98e:	cmp    al,0x12
  41a990:	(bad)  [edi+0x1f310b51]
  41a996:	cmp    BYTE PTR [ecx+edx*2+0x11],ah
  41a99a:	loope  0x41a9aa
  41a99c:	push   es
  41a99d:	xchg   edx,eax
  41a99e:	add    DWORD PTR [ecx],esi
  41a9a0:	jl     0x41a96f
  41a9a2:	mov    dl,0xa3
  41a9a4:	out    dx,eax
  41a9a5:	pop    ecx
  41a9a6:	sti    
  41a9a7:	sbb    ah,cl
  41a9a9:	stos   WORD PTR es:[edi],ax
  41a9ab:	or     eax,0x73c4a17f
  41a9b0:	mov    cl,0x98
  41a9b2:	es arpl ax,dx
  41a9b5:	adc    DWORD PTR [edx+0x2],0x7d53a90b
  41a9bc:	and    DWORD PTR [edx+0x78],edi
  41a9bf:	mov    BYTE PTR [ebp+0x14e5da30],dl
  41a9c5:	pop    esi
  41a9c6:	xor    ah,BYTE PTR [eax+0x99a4c4e]
  41a9cc:	mov    al,0x71
  41a9ce:	dec    esi
  41a9cf:	in     eax,0x52
  41a9d1:	mov    esi,DWORD PTR [ebp-0x63ae13eb]
  41a9d7:	sub    DWORD PTR [ebp+0x7a916780],ecx
  41a9dd:	pop    esp
  41a9de:	mov    dh,0x53
  41a9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9e1:	mov    BYTE PTR [esp+ebp*2],bh
  41a9e4:	dec    eax
  41a9e5:	add    al,0x87
  41a9e7:	pop    ebp
  41a9e8:	shl    BYTE PTR [eax+0x7ecb2ee8],1
  41a9ee:	cmp    eax,0x4adf3f32
  41a9f3:	nop
  41a9f4:	mov    ch,0xac
  41a9f6:	cmp    eax,0xecb1b5af
  41a9fb:	adc    cl,BYTE PTR [ecx-0x56]
  41a9fe:	test   eax,0xe7ebb9e6
  41aa03:	cmp    esi,DWORD PTR [esp+esi*8+0x7d]
  41aa07:	clc    
  41aa08:	jns    0x41aa3f
  41aa0a:	gs cdq 
  41aa0c:	sbb    al,0xc3
  41aa0e:	lds    ecx,FWORD PTR ds:0x953c6408
  41aa14:	jne    0x41aa2a
  41aa16:	pop    ds
  41aa17:	pop    ecx
  41aa18:	int3   
  41aa19:	mov    ds:0xa1d829f2,al
  41aa1e:	sub    edx,DWORD PTR [eax+0x59f3e31e]
  41aa24:	push   0x67
  41aa26:	push   eax
  41aa27:	push   eax
  41aa28:	fs pop esp
  41aa2a:	mov    al,ds:0xc5bdfc0c
  41aa2f:	(bad)  
  41aa31:	mov    ch,BYTE PTR [edx]
  41aa33:	add    esp,DWORD PTR [edx+0x26a83a59]
  41aa39:	imul   esp,DWORD PTR [esi],0xffffffbe
  41aa3c:	enter  0xffda,0xe8
  41aa40:	or     al,cl
  41aa42:	js     0x41aa89
  41aa44:	jo     0x41aa18
  41aa46:	fnstenv [ecx-0x7882f2cf]
  41aa4c:	mov    edx,0x564a99cf
  41aa51:	mov    esp,0xfecb0fba
  41aa56:	fdiv   st,st(5)
  41aa58:	xchg   edi,eax
  41aa59:	mov    edi,0x6e4c3e8b
  41aa5e:	xchg   ebp,eax
  41aa5f:	cmp    eax,DWORD PTR [esi-0x74c406c1]
  41aa65:	sbb    al,0xd5
  41aa67:	enter  0x3d6a,0xf
  41aa6b:	repz pushf 
  41aa6d:	leave  
  41aa6e:	imul   esi,DWORD PTR [edx-0x67],0x29
  41aa72:	push   esp
  41aa73:	gs jb  0x41aa3f
  41aa76:	mov    cs,WORD PTR [edx-0x13f26dbc]
  41aa7c:	nop
  41aa7d:	sbb    edx,DWORD PTR [ebp-0x70]
  41aa80:	push   esi
  41aa81:	cmp    BYTE PTR [esi],0x4
  41aa84:	sbb    dh,BYTE PTR [ebp+0x70d71755]
  41aa8a:	int3   
  41aa8b:	mov    cl,0xa2
  41aa8d:	std    
  41aa8e:	stc    
  41aa8f:	test   eax,0xb2b4bb20
  41aa94:	push   ebx
  41aa95:	into   
  41aa96:	xchg   ebp,eax
  41aa97:	sub    DWORD PTR [ebp+0x11],0x35
  41aa9b:	cli    
  41aa9c:	adc    bl,ah
  41aa9e:	daa    
  41aa9f:	push   edi
  41aaa0:	jg     0x41aacc
  41aaa2:	xchg   ecx,eax
  41aaa3:	push   0xa20fb4c4
  41aaa8:	jge    0x41aaf5
  41aaaa:	das    
  41aaab:	mov    DWORD PTR [ebx],edx
  41aaad:	pop    eax
  41aaae:	pop    ds
  41aaaf:	sbb    al,BYTE PTR [esi+0x2f]
  41aab2:	cmp    al,0xf2
  41aab4:	shl    BYTE PTR [eax+ebx*2],cl
  41aab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aab8:	(bad)  
  41aab9:	dec    esp
  41aaba:	mov    al,0x2
  41aabc:	cli    
  41aabd:	ret    0xc6f2
  41aac0:	mov    ecx,0xde4e11ed
  41aac5:	adc    esi,DWORD PTR [edi+0x12c3709a]
  41aacb:	mov    ebp,0x5f92f6a3
  41aad0:	jecxz  0x41ab44
  41aad2:	stos   BYTE PTR es:[edi],al
  41aad3:	rcr    BYTE PTR [esi-0x524f28f4],1
  41aad9:	xor    ch,BYTE PTR [ebx-0x54]
  41aadc:	js     0x41ab04
  41aade:	cwde   
  41aadf:	inc    esp
  41aae0:	ror    BYTE PTR [esi+ecx*8-0x12],1
  41aae4:	(bad)  
  41aae5:	or     cl,dh
  41aae7:	ins    BYTE PTR es:[edi],dx
  41aae8:	jbe    0x41aaad
  41aaea:	shr    DWORD PTR [ebx],cl
  41aaec:	nop
  41aaed:	popf   
  41aaee:	sbb    BYTE PTR [edi+0x64],cl
  41aaf1:	imul   DWORD PTR [edi-0x2b]
  41aaf4:	push   edx
  41aaf5:	fwait
  41aaf6:	pop    ds
  41aaf7:	dec    esp
  41aaf8:	mov    edi,0xdc4f5f1f
  41aafd:	push   cs
  41aafe:	and    BYTE PTR [esi+esi*2],ch
  41ab01:	and    dh,BYTE PTR [ebx]
  41ab03:	mov    eax,0x7c82acd5
  41ab08:	loopne 0x41aaec
  41ab0a:	test   al,0x87
  41ab0c:	aad    0xf2
  41ab0e:	test   DWORD PTR [esi-0x39],ebp
  41ab11:	add    esi,DWORD PTR [eax]
  41ab13:	scas   eax,DWORD PTR es:[edi]
  41ab14:	xchg   edx,eax
  41ab15:	in     eax,0x18
  41ab17:	mov    edi,0xc681f6dc
  41ab1c:	adc    BYTE PTR [esi+ebx*4-0x5b],0xf7
  41ab21:	daa    
  41ab22:	imul   esp,edi,0x7e
  41ab25:	call   0x36e5:0x796411cf
  41ab2c:	out    0xfc,al
  41ab2e:	jmp    0x41abab
  41ab30:	mov    al,ds:0x959ed1ac
  41ab35:	or     bl,BYTE PTR [edx]
  41ab37:	xchg   esp,eax
  41ab38:	push   ebx
  41ab39:	fiadd  DWORD PTR [esi+0x16804]
  41ab3f:	jnp    0x41ab68
  41ab41:	or     eax,0x16db3809
  41ab46:	or     al,0xf1
  41ab48:	adc    DWORD PTR [ecx+ebx*4+0x76a11411],esi
  41ab4f:	cvtpi2ps xmm0,QWORD PTR [ecx+ebx*8]
  41ab53:	mov    esp,0xc75edf41
  41ab58:	adc    BYTE PTR [edi+0x66],bl
  41ab5b:	ds sahf 
  41ab5d:	mov    bl,0xad
  41ab5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab60:	add    al,0xd7
  41ab62:	lods   al,BYTE PTR ds:[esi]
  41ab63:	leave  
  41ab64:	pop    ds
  41ab65:	mov    esi,0xe1175a35
  41ab6a:	out    dx,al
  41ab6b:	inc    esp
  41ab6c:	sahf   
  41ab6d:	loop   0x41ab2c
  41ab6f:	or     ebp,ebp
  41ab71:	inc    ebx
  41ab72:	add    al,0x5b
  41ab74:	out    0xd8,eax
  41ab76:	xchg   edi,esp
  41ab78:	inc    edx
  41ab79:	adc    BYTE PTR ds:0x74b2e0de,ah
  41ab7f:	sbb    ecx,edi
  41ab81:	lods   eax,DWORD PTR ds:[esi]
  41ab82:	dec    edi
  41ab83:	mov    WORD PTR [ecx],es
  41ab85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab86:	pop    es
  41ab87:	retf   0x465e
  41ab8a:	outs   dx,BYTE PTR ds:[esi]
  41ab8b:	add    al,0x73
  41ab8d:	pop    edx
  41ab8e:	jae    0x41ab96
  41ab90:	push   esp
  41ab91:	int    0xe
  41ab93:	jmp    0xe21cd40b
  41ab98:	cdq    
  41ab99:	jg     0x41abf0
  41ab9b:	rol    BYTE PTR [eax+ebx*2-0x5a],1
  41ab9f:	adc    bh,BYTE PTR ds:0x2c2b0aef
  41aba5:	stc    
  41aba6:	inc    edx
  41aba7:	mov    ds,WORD PTR [edx+0x2d]
  41abaa:	movd   mm1,DWORD PTR [edi+0x1255ba53]
  41abb1:	push   ss
  41abb2:	mov    WORD PTR [ebp+0x75],fs
  41abb5:	mov    bl,0xc
  41abb8:	xchg   BYTE PTR [ebx+edx*2],al
  41abbb:	jb     0x41ab89
  41abbd:	leave  
  41abbe:	or     edi,DWORD PTR [esp+ecx*4+0x20]
  41abc2:	push   cs
  41abc3:	and    al,BYTE PTR [edx-0x14b4a470]
  41abc9:	cmp    DWORD PTR [esp+edx*1-0x64],esi
  41abcd:	in     al,dx
  41abce:	dec    esi
  41abcf:	(bad)  
  41abd0:	je     0x41ab72
  41abd2:	pop    ebx
  41abd3:	mov    dl,BYTE PTR [esi]
  41abd5:	mov    ch,0xee
  41abd7:	mov    edx,edx
  41abd9:	xor    cl,BYTE PTR [edx*4-0x1f620ca8]
  41abe0:	cmp    DWORD PTR [ebp+0x2b],edx
  41abe3:	jo     0x41ac54
  41abe5:	punpckhwd mm7,QWORD PTR fs:[esi+edi*4+0x7c]
  41abeb:	xor    DWORD PTR [esi-0x62b4ce5f],0x40
  41abf2:	add    dl,ah
  41abf4:	or     BYTE PTR [esi+0x6b309c5a],bh
  41abfa:	rcl    BYTE PTR [ecx-0x19899bc4],cl
  41ac00:	and    al,0xfc
  41ac02:	data16 test BYTE PTR [edx-0x1191486a],dl
  41ac09:	cmc    
  41ac0a:	cmp    bh,BYTE PTR [ecx+0x29856883]
  41ac10:	and    dh,BYTE PTR [ecx+ebx*8+0x54191ba1]
  41ac17:	mov    al,0xd7
  41ac19:	sbb    BYTE PTR [ebp-0x16da21e1],dh
  41ac1f:	in     al,dx
  41ac20:	ret    0xeb84
  41ac23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac24:	jns    0x41abe2
  41ac26:	push   edi
  41ac27:	mov    ch,0xd9
  41ac29:	into   
  41ac2a:	xchg   DWORD PTR [eax-0x6fcd6d25],edx
  41ac30:	pop    eax
  41ac31:	or     eax,0x32b66355
  41ac36:	xor    BYTE PTR [edi-0x37],dl
  41ac39:	icebp  
  41ac3a:	push   esi
  41ac3b:	add    ah,dh
  41ac3d:	arpl   WORD PTR [ebp-0x5c],si
  41ac40:	pop    ebp
  41ac41:	xor    DWORD PTR [eax-0x39],edi
  41ac44:	cmp    eax,0xbd6a97fe
  41ac49:	pop    esi
  41ac4a:	ins    DWORD PTR es:[edi],dx
  41ac4b:	hlt    
  41ac4c:	cmc    
  41ac4d:	push   ds
  41ac4e:	loop   0x41abe7
  41ac50:	inc    eax
  41ac51:	xchg   cl,al
  41ac53:	ins    DWORD PTR es:[edi],dx
  41ac54:	popf   
  41ac55:	jmp    0x4292:0x51e44621
  41ac5c:	push   edx
  41ac5d:	pop    edx
  41ac5e:	test   al,0x7f
  41ac60:	xor    BYTE PTR [esi],al
  41ac62:	pop    ss
  41ac63:	pop    esp
  41ac64:	fnstenv [edi]
  41ac66:	push   cs
  41ac67:	in     al,0x9
  41ac69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac6a:	sub    ebp,DWORD PTR [edi-0x56]
  41ac6d:	xchg   ebx,eax
  41ac6e:	inc    esp
  41ac6f:	xchg   edx,eax
  41ac70:	outs   dx,DWORD PTR ds:[esi]
  41ac71:	jp     0x41ac63
  41ac73:	adc    al,0xaf
  41ac75:	test   DWORD PTR es:[eax+eiz*2+0xc],0xfccfbbe2
  41ac7e:	mov    ebp,ecx
  41ac80:	add    al,dl
  41ac82:	out    dx,eax
  41ac83:	push   ebx
  41ac84:	in     eax,dx
  41ac85:	fst    DWORD PTR [edi+0x50]
  41ac88:	and    ebp,ebp
  41ac8a:	(bad)  
  41ac8b:	or     eax,0x39467b62
  41ac90:	adc    BYTE PTR [eax],0x91
  41ac93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac94:	(bad)  
  41ac95:	je     0x41acf0
  41ac97:	ss xchg ebp,eax
  41ac99:	dec    esp
  41ac9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac9b:	sahf   
  41ac9c:	adc    ch,BYTE PTR [edi+0x29ee7ca1]
  41aca2:	pushf  
  41aca3:	mov    esi,0x88f66e52
  41aca8:	bound  edi,QWORD PTR [ebx]
  41acaa:	loope  0x41ad21
  41acac:	pop    ebx
  41acad:	loop   0x41acf0
  41acaf:	lea    eax,[edi]
  41acb1:	sbb    al,0xde
  41acb3:	jae    0x41ac61
  41acb5:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41acb7:	jb     0x41acc4
  41acb9:	stos   BYTE PTR es:[edi],al
  41acba:	(bad)  
  41acbb:	fs mov ah,0x7d
  41acbe:	sub    BYTE PTR [esi+0x67a49d3f],0x87
  41acc5:	iret   
  41acc6:	add    esi,DWORD PTR ss:[ebx]
  41acc9:	dec    eax
  41acca:	jp     0x41ac52
  41accc:	pop    ecx
  41accd:	stc    
  41acce:	push   ds
  41accf:	pop    ebx
  41acd0:	fs ds mov dh,0x9f
  41acd4:	sbb    edi,DWORD PTR [edx-0xb]
  41acd7:	mov    dh,0xc9
  41acd9:	push   ebx
  41acda:	arpl   WORD PTR [esi-0x17],ax
  41acdd:	in     al,0x17
  41acdf:	(bad)  
  41ace0:	adc    al,0x5e
  41ace2:	loope  0x41acfd
  41ace4:	mov    DWORD PTR [ebx],edx
  41ace6:	cmp    eax,0x29096c73
  41aceb:	mov    eax,es
  41aced:	xchg   edx,eax
  41acee:	bound  esp,QWORD PTR [edi]
  41acf0:	sbb    cl,ah
  41acf2:	aam    0x70
  41acf4:	jmp    0xc778:0x21ab2c7f
  41acfb:	loopne 0x41ac7d
  41acfd:	dec    ebx
  41acfe:	nop
  41acff:	mov    bl,0x7b
  41ad01:	int    0x38
  41ad03:	scas   al,BYTE PTR es:[edi]
  41ad04:	and    BYTE PTR [eax-0x37fd464d],al
  41ad0a:	fsubp  st(2),st
  41ad0c:	loope  0x41ad7d
  41ad0e:	jge    0x41ad16
  41ad10:	addr16 xchg esi,eax
  41ad12:	loopne 0x41acbf
  41ad14:	mov    bh,0x32
  41ad16:	xlat   BYTE PTR ds:[ebx]
  41ad17:	mov    ecx,0x7d72c831
  41ad1c:	mov    edx,0xab6863d4
  41ad21:	sub    al,0xf3
  41ad23:	mov    ecx,DWORD PTR ds:0xa760b0d0
  41ad29:	mov    ?,WORD PTR [edx]
  41ad2b:	and    al,0x58
  41ad2d:	xchg   esp,eax
  41ad2e:	repz push ecx
  41ad30:	gs ins BYTE PTR es:[edi],dx
  41ad32:	sub    eax,0x4697915a
  41ad37:	gs mov ecx,0x53cf5e63
  41ad3d:	enter  0x29d8,0x97
  41ad41:	aas    
  41ad42:	dec    edi
  41ad43:	and    ebx,DWORD PTR [edx+eax*1]
  41ad46:	les    eax,FWORD PTR [ebp-0x3e]
  41ad49:	(bad)  
  41ad4a:	(bad)  [ecx-0x62721c5e]
  41ad50:	xchg   ecx,eax
  41ad51:	scas   al,BYTE PTR es:[edi]
  41ad52:	pop    es
  41ad53:	pop    edi
  41ad54:	ret    0x41da
  41ad57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad58:	push   0xfffffffb
  41ad5a:	xlat   BYTE PTR ds:[ebx]
  41ad5b:	pop    eax
  41ad5c:	adc    DWORD PTR [edi+ebp*1],0xffffffa7
  41ad60:	mov    edx,0x255dd991
  41ad65:	push   es
  41ad66:	outs   dx,BYTE PTR ds:[esi]
  41ad67:	pop    ds
  41ad68:	push   ecx
  41ad69:	push   0xffffffe4
  41ad6b:	in     al,dx
  41ad6c:	sahf   
  41ad6d:	push   ds
  41ad6e:	ins    BYTE PTR es:[edi],dx
  41ad6f:	ficom  WORD PTR [esi]
  41ad71:	mov    eax,ds:0xd10be104
  41ad76:	or     ch,ch
  41ad78:	mov    ebx,0xb79e0070
  41ad7d:	stos   DWORD PTR es:[edi],eax
  41ad7e:	pop    eax
  41ad7f:	inc    edx
  41ad80:	pop    ss
  41ad81:	xor    DWORD PTR [ecx],ecx
  41ad83:	inc    esp
  41ad84:	popf   
  41ad85:	shr    DWORD PTR [ebp+0x46],cl
  41ad88:	cmp    esi,DWORD PTR ds:0x6d96d4f3
  41ad8e:	pop    edi
  41ad8f:	push   ebx
  41ad90:	lods   al,BYTE PTR ds:[esi]
  41ad91:	scas   al,BYTE PTR es:[edi]
  41ad92:	sub    al,0xa6
  41ad94:	or     BYTE PTR [edx],0xd6
  41ad97:	int    0x74
  41ad99:	jno    0x41ad4a
  41ad9b:	xchg   esi,eax
  41ad9c:	add    edi,ecx
  41ad9e:	mov    ebx,0xb42a8e82
  41ada3:	xlat   BYTE PTR ds:[ebx]
  41ada4:	enter  0x21ae,0xc3
  41ada8:	test   DWORD PTR ds:0xae3af232,ebx
  41adae:	sbb    DWORD PTR [ebp-0x50b3c24d],edx
  41adb4:	cmp    DWORD PTR [edi+0x3a],0xb1afd0ee
  41adbb:	mov    cl,0x7a
  41adbd:	jb     0x41adfa
  41adbf:	cli    
  41adc0:	icebp  
  41adc1:	(bad)  
  41adc2:	sub    DWORD PTR [ebx-0x58],ebx
  41adc5:	iret   
  41adc6:	inc    ebp
  41adc7:	mov    ebp,0x7e64aa40
  41adcc:	adc    bl,dl
  41adce:	mov    ds:0x2f30156b,al
  41add3:	dec    esi
  41add4:	nop
  41add5:	sub    eax,0x832969e9
  41adda:	or     esp,DWORD PTR [esi-0x38]
  41addd:	xchg   ecx,eax
  41adde:	push   ebx
  41addf:	xor    al,0xb2
  41ade1:	aad    0xc6
  41ade3:	cmp    ah,bh
  41ade5:	mov    al,ds:0x5dd87d83
  41adea:	into   
  41adeb:	jle    0x41ade3
  41aded:	ror    BYTE PTR [eax],1
  41adef:	sbb    edx,DWORD PTR [esi]
  41adf1:	add    dl,BYTE PTR [edx]
  41adf3:	out    0xbc,eax
  41adf5:	fnstsw WORD PTR [esi+0x4e]
  41adf8:	mov    ebx,DWORD PTR [ebx]
  41adfa:	jae    0x41ad8f
  41adfc:	div    DWORD PTR [ebp+0x56dc61d]
  41ae02:	pop    esp
  41ae03:	xchg   edi,eax
  41ae04:	mov    al,BYTE PTR [eax]
  41ae06:	enter  0x6857,0x19
  41ae0a:	cmp    DWORD PTR [edx+edi*8],ebx
  41ae0d:	popf   
  41ae0e:	rol    DWORD PTR [eax+eiz*2-0x47],cl
  41ae12:	xor    DWORD PTR ds:0xbcb7f708,esp
  41ae18:	gs test al,0xad
  41ae1b:	add    esi,DWORD PTR [ebx-0x51a8c5ed]
  41ae21:	mov    edx,0xe0b51a7a
  41ae26:	xchg   ecx,eax
  41ae27:	es cmp eax,0x46baf1d7
  41ae2d:	push   cs
  41ae2e:	sub    eax,DWORD PTR [esi]
  41ae30:	mov    edx,0x92ebcf79
  41ae35:	sub    al,0xaf
  41ae37:	(bad)  
  41ae38:	xlat   BYTE PTR ds:[ebx]
  41ae39:	test   al,0x9d
  41ae3b:	enter  0x6241,0xb8
  41ae3f:	pop    ss
  41ae40:	mov    dl,0x2e
  41ae42:	add    eax,DWORD PTR [ebx-0x73]
  41ae45:	mov    cl,0x2a
  41ae47:	adc    BYTE PTR ds:0x523a36a2,dl
  41ae4d:	ss aad 0x3a
  41ae50:	or     BYTE PTR [ecx-0x60adf758],al
  41ae56:	push   0x5e
  41ae58:	xchg   ebp,eax
  41ae59:	or     ebp,esi
  41ae5b:	sbb    ecx,DWORD PTR [edx]
  41ae5d:	cs sub eax,0xf5b59cd8
  41ae63:	xchg   edi,eax
  41ae64:	dec    esp
  41ae65:	fs (bad) 
  41ae67:	cvtps2pd xmm4,xmm7
  41ae6a:	in     eax,dx
  41ae6b:	or     bl,BYTE PTR [esi-0x26]
  41ae6e:	mov    esi,0x2f4fa682
  41ae73:	sbb    eax,0xf90e7ee5
  41ae78:	push   ebx
  41ae79:	fild   QWORD PTR [ecx+0x56]
  41ae7c:	dec    ecx
  41ae7d:	int    0xb9
  41ae7f:	pop    ebx
  41ae80:	shl    edi,cl
  41ae82:	clc    
  41ae83:	xor    BYTE PTR [edx+0x7a56f051],bh
  41ae89:	hlt    
  41ae8a:	dec    edx
  41ae8b:	lods   eax,DWORD PTR ds:[esi]
  41ae8c:	dec    eax
  41ae8d:	fld    QWORD PTR [eax]
  41ae8f:	jo     0x41ae22
  41ae91:	jo     0x41aef6
  41ae93:	push   ecx
  41ae94:	xchg   ebx,eax
  41ae95:	add    DWORD PTR [edi],edx
  41ae97:	in     al,dx
  41ae98:	mov    ds:0x90d625b7,al
  41ae9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae9e:	pop    esp
  41ae9f:	push   0x1f13bdc0
  41aea4:	mul    BYTE PTR [eax+0x16]
  41aea7:	mov    ah,0x72
  41aea9:	xor    dh,BYTE PTR [edi+0x48e51c24]
  41aeaf:	lea    ecx,[esi]
  41aeb1:	sahf   
  41aeb2:	mov    WORD PTR [ecx],ss
  41aeb4:	xlat   BYTE PTR ds:[ebx]
  41aeb5:	xchg   ebx,eax
  41aeb6:	arpl   WORD PTR [edx+eiz*4-0x7fd4ca57],sp
  41aebd:	inc    eax
  41aebe:	cdq    
  41aebf:	retf   0x1f6b
  41aec2:	enter  0xdb9d,0x39
  41aec6:	xchg   ebp,eax
  41aec7:	xor    al,0x0
  41aec9:	xchg   ebx,eax
  41aeca:	ja     0x41aea9
  41aecc:	dec    ecx
  41aecd:	daa    
  41aece:	dec    edx
  41aecf:	scas   eax,DWORD PTR es:[edi]
  41aed0:	cmp    DWORD PTR ds:0x2e2ec9cf,ebx
  41aed6:	dec    ebp
  41aed7:	pop    ebx
  41aed8:	xchg   ebx,eax
  41aed9:	mov    fs,esi
  41aedb:	(bad)  
  41aedc:	jp     0x41aefc
  41aede:	mov    dh,0x73
  41aee0:	xchg   edi,eax
  41aee1:	out    0x35,al
  41aee3:	fdiv   DWORD PTR [ecx-0x55]
  41aee6:	rcl    BYTE PTR [ebx],cl
  41aee8:	inc    esi
  41aee9:	in     al,dx
  41aeea:	mov    eax,ds:0x7ea6a840
  41aeef:	cmp    ebx,ebx
  41aef1:	sbb    BYTE PTR [ecx],dh
  41aef3:	mov    eax,0xb2fe153d
  41aef8:	cmp    dl,BYTE PTR [eax-0x7c]
  41aefb:	fistp  QWORD PTR [ebp-0x25]
  41aefe:	outs   dx,DWORD PTR ds:[esi]
  41aeff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af00:	je     0x41af7e
  41af02:	lock cmp bl,ah
  41af05:	loope  0x41ae9e
  41af07:	mov    WORD PTR [ecx+0x20a60036],fs
  41af0d:	pop    eax
  41af0e:	mov    edx,0x73b58458
  41af13:	push   esp
  41af14:	int3   
  41af15:	push   cs
  41af16:	cmp    bh,bl
  41af18:	xor    BYTE PTR [esi+0x7],ch
  41af1b:	mov    ds:0x16a773ac,eax
  41af20:	jmp    0x41aeaa
  41af22:	sbb    eax,0x15112447
  41af27:	in     eax,dx
  41af28:	and    eax,0x414c9951
  41af2d:	sbb    BYTE PTR [edi+ebx*8-0x5],bh
  41af31:	inc    edi
  41af32:	mov    ecx,0x274618fe
  41af37:	shr    DWORD PTR [edx-0x6c9213d9],0xca
  41af3e:	ficom  DWORD PTR [edi-0x227878d5]
  41af44:	jl     0x41aef4
  41af46:	push   esi
  41af47:	push   0xffffffce
  41af49:	fwait
  41af4a:	shl    BYTE PTR [esi+ebx*8-0x76],1
  41af4e:	mov    dh,0x9a
  41af50:	pop    edx
  41af51:	mov    eax,ds:0x865d440f
  41af56:	jmp    0xf1293812
  41af5b:	test   BYTE PTR [ecx-0x73f7f9fc],ch
  41af61:	push   edi
  41af62:	adc    eax,0xf79290f8
  41af67:	popa   
  41af68:	sti    
  41af69:	pop    esp
  41af6a:	ja     0x41aefe
  41af6c:	es jbe 0x41af85
  41af6f:	push   esp
  41af70:	dec    esp
  41af71:	xor    eax,0xb8e6bfef
  41af76:	in     al,dx
  41af77:	stc    
  41af78:	and    BYTE PTR [ebx-0x1a],0x5e
  41af7c:	aad    0x5d
  41af7e:	jp     0x41af9c
  41af80:	and    eax,0x637aa925
  41af85:	test   edi,0x36c0f79b
  41af8b:	mov    bh,0x4a
  41af8d:	sub    al,0x52
  41af8f:	clc    
  41af90:	dec    ebp
  41af91:	test   BYTE PTR [ecx+edi*8],0xd0
  41af95:	retf   0x56f2
  41af98:	dec    edx
  41af99:	xor    eax,0x6cd527d
  41af9e:	pop    eax
  41af9f:	xchg   esi,eax
  41afa0:	rcr    BYTE PTR [edi],1
  41afa2:	mov    ds:0x5ff1a3a0,eax
  41afa7:	test   al,0x51
  41afa9:	push   ecx
  41afaa:	pop    esi
  41afac:	adc    ebp,ebp
  41afae:	adc    DWORD PTR [eax-0x6a],esi
  41afb1:	jp     0x41afe7
  41afb3:	sub    al,0xc1
  41afb5:	ficomp DWORD PTR [edi+0x196ffac0]
  41afbb:	daa    
  41afbc:	add    edx,DWORD PTR [esi]
  41afbe:	stc    
  41afbf:	enter  0x367,0xf0
  41afc3:	stos   BYTE PTR es:[edi],al
  41afc4:	inc    ecx
  41afc5:	xor    eax,0xc9cfcebd
  41afca:	clc    
  41afcb:	push   ecx
  41afcc:	xchg   DWORD PTR [ecx],edx
  41afce:	mov    es,WORD PTR [esi-0x3]
  41afd1:	in     eax,dx
  41afd2:	rol    BYTE PTR ds:0x97262896,cl
  41afd8:	aaa    
  41afd9:	sbb    BYTE PTR [eax],ch
  41afdb:	(bad)
  41afde:	adc    DWORD PTR [eax+0x48e3dc1c],eax
  41afe4:	xor    BYTE PTR [eax],dl
  41afe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afe7:	pop    edi
  41afe8:	std    
  41afe9:	and    eax,0x7aeaba1c
  41afee:	sbb    eax,0x9d7564c9
  41aff3:	mov    ds:0x312bb034,al
  41aff8:	sub    al,0xca
  41affa:	pop    esp
  41affb:	lods   al,BYTE PTR ds:[esi]
  41affc:	inc    eax
  41affd:	xor    eax,0xf2a2e10f
  41b003:	aam    0x9d
  41b005:	jge    0x41affc
  41b007:	push   0xf41cd3e4
  41b00c:	xchg   esp,eax
  41b00d:	xor    DWORD PTR [eax],eax
  41b00f:	test   BYTE PTR [esi],dh
  41b011:	dec    eax
  41b012:	into   
  41b013:	(bad)  
  41b015:	or     dh,bl
  41b017:	repnz sbb ch,BYTE PTR [ecx+0x13]
  41b01b:	push   0xffffff90
  41b01d:	sbb    al,0x22
  41b01f:	sub    ebp,eax
  41b021:	retf   0xb519
  41b024:	pop    ss
  41b025:	add    eax,0x746761f5
  41b02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b02b:	sar    BYTE PTR [ebp-0x40],cl
  41b02e:	pop    ebp
  41b02f:	nop
  41b030:	pop    ds
  41b031:	lea    ebx,[eax]
  41b033:	sbb    BYTE PTR [edi-0x43],bl
  41b036:	and    eax,0xf20dc1c6
  41b03b:	(bad)  
  41b03c:	xor    al,0xa5
  41b03e:	xor    eax,0x13db03f8
  41b043:	jbe    0x41b075
  41b045:	jg     0x41afda
  41b047:	dec    esp
  41b048:	out    0x7b,eax
  41b04a:	fiadd  DWORD PTR [edx-0x67]
  41b04d:	test   al,0x99
  41b04f:	push   ebx
  41b050:	clc    
  41b051:	outs   dx,DWORD PTR ds:[esi]
  41b052:	lahf   
  41b053:	clc    
  41b054:	popf   
  41b055:	xor    BYTE PTR [ebx-0x1ccab1a2],bh
  41b05b:	ret    0xbd8f
  41b05e:	aaa    
  41b05f:	sar    eax,cl
  41b061:	int    0x54
  41b063:	ja     0x41b010
  41b065:	(bad)  
  41b066:	cmp    eax,0x5ba887b3
  41b06b:	jg     0x41b010
  41b06d:	cdq    
  41b06e:	scas   al,BYTE PTR es:[edi]
  41b06f:	and    BYTE PTR [esi+0x6b],dh
  41b072:	outs   dx,DWORD PTR ds:[esi]
  41b073:	fs es sub al,0xdd
  41b077:	mov    ecx,0xdb61e4cb
  41b07c:	inc    edx
  41b07d:	retf   
  41b07e:	fist   DWORD PTR [ecx+0xc0a90ee]
  41b084:	jno    0x41b0e1
  41b086:	xchg   BYTE PTR [eax],cl
  41b088:	sub    ecx,DWORD PTR [bp+di]
  41b08b:	aas    
  41b08c:	jmp    0x93b325ea
  41b091:	mov    ebp,0x4a38a16e
  41b096:	leave  
  41b097:	dec    edi
  41b098:	or     dl,BYTE PTR [edx-0x3ec05eb0]
  41b09e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b09f:	int    0x27
  41b0a1:	mov    eax,ds:0x5be571fa
  41b0a6:	xchg   ecx,eax
  41b0a7:	outs   dx,BYTE PTR ds:[esi]
  41b0a8:	fisub  WORD PTR [esi]
  41b0aa:	xchg   ecx,eax
  41b0ab:	or     eax,0xa6b5f873
  41b0b0:	fs std 
  41b0b2:	dec    edx
  41b0b3:	pop    ebx
  41b0b4:	scas   al,BYTE PTR es:[edi]
  41b0b5:	(bad)  
  41b0b6:	(bad)  
  41b0b7:	adc    al,0xdc
  41b0b9:	out    0xf9,al
  41b0bb:	pop    ss
  41b0bc:	push   ebp
  41b0bd:	xor    eax,0x2aa90c99
  41b0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0c3:	scas   al,BYTE PTR es:[edi]
  41b0c4:	and    DWORD PTR [ebx+0x41ea5857],eax
  41b0ca:	pushf  
  41b0cb:	gs jno 0x41b0dd
  41b0ce:	and    ecx,esp
  41b0d0:	sbb    al,0xf4
  41b0d2:	ss leave 
  41b0d4:	outs   dx,BYTE PTR ds:[esi]
  41b0d5:	inc    ecx
  41b0d6:	pop    ss
  41b0d7:	stos   DWORD PTR es:[edi],eax
  41b0d8:	jno    0x41b0bd
  41b0da:	sub    BYTE PTR [ecx+0x0],al
  41b0dd:	fidiv  DWORD PTR [esi+eax*2-0x6b]
  41b0e1:	lahf   
  41b0e2:	push   ebp
  41b0e3:	aam    0x4
  41b0e5:	pop    ecx
  41b0e6:	(bad)  
  41b0e7:	enter  0xf7a8,0xc0
  41b0eb:	clc    
  41b0ec:	or     bh,BYTE PTR [ebx+edi*2]
  41b0ef:	mov    ebp,0x15907ae0
  41b0f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0f5:	clc    
  41b0f6:	mov    ds:0x3b75ff9,al
  41b0fb:	or     BYTE PTR [edi+0x53],al
  41b0fe:	xor    DWORD PTR [esi-0x5e],ebp
  41b101:	push   ds
  41b102:	or     BYTE PTR [edi+0x7e5377c9],ch
  41b108:	outs   dx,DWORD PTR ds:[esi]
  41b109:	iret   
  41b10a:	add    bh,cl
  41b10c:	popa   
  41b10d:	stos   BYTE PTR es:[edi],al
  41b10e:	addr16 jmp 0x41b109
  41b111:	sub    al,0x9
  41b113:	mov    WORD PTR [ecx-0x72946d22],ds
  41b119:	sbb    edx,edx
  41b11b:	jnp    0x41b134
  41b11d:	retf   0x68bd
  41b120:	pop    edx
  41b121:	mov    ss,WORD PTR [edi-0x5e]
  41b124:	fcmovnbe st,st(6)
  41b126:	jns    0x41b169
  41b128:	fwait
  41b129:	sti    
  41b12a:	dec    eax
  41b12b:	sti    
  41b12c:	or     DWORD PTR [ecx+ebx*2-0x3bb2623d],ebx
  41b133:	sahf   
  41b134:	sub    bh,BYTE PTR [ebp-0x328b279a]
  41b13a:	das    
  41b13b:	cld    
  41b13c:	xchg   esp,eax
  41b13d:	mov    ds,eax
  41b13f:	push   es
  41b140:	aas    
  41b141:	cmp    ecx,eax
  41b143:	out    0xf0,al
  41b145:	loopne 0x41b109
  41b147:	cwde   
  41b148:	pop    edx
  41b149:	les    ebp,FWORD PTR [edx]
  41b14b:	xchg   BYTE PTR [esi+0x64507062],ah
  41b151:	sbb    DWORD PTR [eax],0x1b
  41b154:	rcl    DWORD PTR [edx],1
  41b156:	inc    esi
  41b157:	sub    DWORD PTR [esi+0x275f3f4f],edi
  41b15d:	mov    ecx,0x8353e302
  41b162:	and    bh,BYTE PTR [edx]
  41b164:	imul   esp,DWORD PTR [edx-0x6],0x7979b875
  41b16b:	test   al,0x75
  41b16d:	pop    esi
  41b16e:	(bad)  
  41b16f:	int    0xb2
  41b171:	rol    DWORD PTR [eax+ebp*8-0x545d054f],cl
  41b178:	and    ch,ch
  41b17a:	std    
  41b17b:	add    al,0xc7
  41b17d:	aam    0xd8
  41b17f:	fs fcmovne st,st(0)
  41b182:	enter  0xcb8f,0x55
  41b186:	push   ss
  41b187:	mov    ah,0xff
  41b189:	jl     0x41b18b
  41b18b:	aam    0x61
  41b18d:	or     dh,bl
  41b18f:	dec    ebp
  41b190:	imul   ebp,DWORD PTR [edi+0x4377c072],0x3ea8f83f
  41b19a:	xchg   edi,esp
  41b19c:	mov    cl,0xd6
  41b19e:	jmp    0x41b1bf
  41b1a0:	sub    BYTE PTR [eax],0xb4
  41b1a3:	pusha  
  41b1a4:	mov    edi,0x361a688d
  41b1a9:	push   es
  41b1aa:	inc    esi
  41b1ab:	sbb    eax,0xd2b9ffe1
  41b1b0:	aad    0x2b
  41b1b2:	xchg   edi,eax
  41b1b3:	jge    0x41b1c2
  41b1b5:	imul   esp,DWORD PTR [edx+0x580adabd],0x4b
  41b1bc:	jb     0x41b1cd
  41b1be:	mov    ebx,0xcf42303c
  41b1c3:	jo     0x41b1f6
  41b1c5:	je     0x41b1ec
  41b1c7:	outs   dx,BYTE PTR ds:[esi]
  41b1c8:	xchg   edx,eax
  41b1c9:	fucomip st,st(2)
  41b1cb:	jge    0x41b156
  41b1cd:	xchg   esp,eax
  41b1ce:	ror    BYTE PTR cs:[esi-0xb],0xb4
  41b1d3:	jns    0x41b23b
  41b1d5:	popa   
  41b1d6:	mov    ds:0xae6aff26,al
  41b1db:	push   ebp
  41b1dc:	sbb    al,0xe9
  41b1de:	push   eax
  41b1df:	jl     0x41b1c9
  41b1e1:	dec    esi
  41b1e2:	(bad)  
  41b1e3:	loope  0x41b1df
  41b1e5:	gs sbb ch,dh
  41b1e8:	mov    bh,0x69
  41b1ea:	(bad)  
  41b1eb:	(bad)  
  41b1ec:	call   0x723:0x9a2d4e76
  41b1f3:	lods   eax,DWORD PTR ds:[esi]
  41b1f4:	xchg   esi,eax
  41b1f5:	pop    ebp
  41b1f6:	mov    ebp,0xadfacaed
  41b1fb:	(bad)  
  41b1fd:	dec    edi
  41b1fe:	dec    edx
  41b1ff:	imul   esi,DWORD PTR [edx+0x4b],0xc87cfff9
  41b206:	es dec edi
  41b208:	fwait
  41b209:	inc    ecx
  41b20a:	mov    ebx,0xc635d7a5
  41b20f:	xor    eax,0xf0264401
  41b214:	inc    edx
  41b215:	fbld   TBYTE PTR [edx]
  41b217:	sub    DWORD PTR [ebx+0x35],ecx
  41b21a:	adc    ebp,DWORD PTR [esi]
  41b21c:	push   0x7e
  41b21e:	push   0xffffff93
  41b220:	out    0xa0,al
  41b222:	jp     0x41b1cf
  41b224:	xchg   ebx,eax
  41b225:	mov    DWORD PTR [edx+esi*4+0x5354ae77],esp
  41b22c:	jp     0x41b26f
  41b22e:	xchg   ecx,eax
  41b22f:	icebp  
  41b230:	push   cs
  41b231:	cmc    
  41b232:	sahf   
  41b233:	lea    edi,[eax]
  41b235:	sbb    esi,edi
  41b237:	adc    ch,BYTE PTR [eax]
  41b239:	sti    
  41b23a:	add    al,0x36
  41b23c:	sbb    al,0xd0
  41b23e:	mov    al,0xa0
  41b240:	test   BYTE PTR [edi-0x4a],al
  41b243:	xchg   ecx,eax
  41b244:	xchg   ebx,eax
  41b245:	cmp    eax,0x38e49174
  41b24a:	mov    edi,0xab0d4d4
  41b24f:	jecxz  0x41b210
  41b251:	scas   al,BYTE PTR es:[edi]
  41b252:	stc    
  41b253:	inc    ebp
  41b254:	icebp  
  41b255:	dec    ecx
  41b256:	retf   
  41b257:	adc    esp,DWORD PTR [esi]
  41b259:	lods   al,BYTE PTR ds:[esi]
  41b25a:	loopne 0x41b2c0
  41b25c:	bound  eax,QWORD PTR [edx]
  41b25e:	pop    ebp
  41b25f:	enter  0xfffc,0x9c
  41b263:	jp     0x41b2d0
  41b265:	push   cs
  41b266:	mov    ?,WORD PTR [esi+0x77d3a544]
  41b26c:	adc    al,BYTE PTR [esi+edx*8+0x0]
  41b270:	push   eax
  41b271:	je     0x41b26b
  41b273:	jg     0x41b2cd
  41b275:	add    bl,BYTE PTR [esi]
  41b277:	jmp    0x9c8c:0x212ae0ea
  41b27e:	sub    BYTE PTR [ebx-0x31988191],al
  41b284:	xor    DWORD PTR [ecx+0x411a201d],eax
  41b28a:	push   0x8684e043
  41b28f:	and    BYTE PTR [ebp+edx*4-0x3e479493],0x4f
  41b297:	mov    DWORD PTR [ebx+edi*2+0x7d],ebx
  41b29b:	pop    edx
  41b29c:	xchg   DWORD PTR [edi+0x70],eax
  41b29f:	cs fwait
  41b2a1:	sbb    al,0x36
  41b2a3:	push   cs
  41b2a4:	adc    esp,ecx
  41b2a6:	jg     0x41b2a0
  41b2a8:	inc    eax
  41b2a9:	jns    0x41b241
  41b2ab:	inc    ebp
  41b2ac:	adc    DWORD PTR es:[ebp-0x17],ebp
  41b2b0:	pop    esi
  41b2b1:	dec    esi
  41b2b2:	pop    es
  41b2b3:	xlat   BYTE PTR ds:[ebx]
  41b2b4:	outs   dx,BYTE PTR ds:[esi]
  41b2b5:	inc    ebp
  41b2b6:	mov    al,0x54
  41b2b8:	aas    
  41b2b9:	adc    bh,BYTE PTR [eax]
  41b2bb:	sbb    al,0xbd
  41b2bd:	fistp  WORD PTR [edx]
  41b2bf:	call   0x6b52:0xc4ca7690
  41b2c6:	dec    esi
  41b2c7:	xchg   BYTE PTR [ebx],dh
  41b2c9:	sar    BYTE PTR [edi-0x30d9888e],cl
  41b2cf:	rcl    dl,cl
  41b2d1:	std    
  41b2d2:	sbb    DWORD PTR [ecx+edx*2+0x5a87913e],esp
  41b2d9:	stos   DWORD PTR es:[edi],eax
  41b2da:	xchg   edi,eax
  41b2db:	test   BYTE PTR [ebx+0x60],bl
  41b2de:	sbb    al,cl
  41b2e0:	and    cl,BYTE PTR [eax]
  41b2e2:	mov    ebx,0xeddaf84f
  41b2e7:	fs push ds
  41b2e9:	jmp    0x41b312
  41b2eb:	leave  
  41b2ec:	nop
  41b2ed:	jo     0x41b315
  41b2ef:	xchg   esp,eax
  41b2f0:	repz mov edi,0x56a71b74
  41b2f6:	pop    ecx
  41b2f7:	dec    eax
  41b2f8:	ret    
  41b2f9:	bsr    eax,esi
  41b2fc:	xor    eax,DWORD PTR [eax+0x25]
  41b2ff:	out    dx,eax
  41b300:	out    dx,eax
  41b301:	push   eax
  41b302:	push   eax
  41b303:	xchg   ecx,eax
  41b304:	dec    ebx
  41b305:	xchg   ecx,eax
  41b306:	pop    esp
  41b307:	fsub   QWORD PTR [esi-0x63b3f77e]
  41b30d:	ficom  WORD PTR [ebx+0x19ed7ed7]
  41b313:	push   ss
  41b314:	cmp    DWORD PTR [edi+0x3bf7d35f],esp
  41b31a:	fld    TBYTE PTR [edi-0x5]
  41b31d:	jo     0x41b36d
  41b31f:	mov    ecx,DWORD PTR [eax+0x19]
  41b322:	jo     0x41b33d
  41b324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b325:	push   DWORD PTR [edi+eiz*1]
  41b328:	ins    DWORD PTR es:[edi],dx
  41b329:	add    al,0xaa
  41b32b:	ins    DWORD PTR es:[edi],dx
  41b32c:	aas    
  41b32d:	push   cs
  41b32e:	nop
  41b32f:	aam    0xc6
  41b331:	xchg   esi,eax
  41b332:	add    dl,BYTE PTR [edx]
  41b334:	pop    ds
  41b335:	pop    esp
  41b336:	cli    
  41b337:	lea    edx,[edx-0x2808e75d]
  41b33d:	fsubrp st(4),st
  41b33f:	gs pop edx
  41b341:	xor    al,0x3a
  41b343:	jb     0x41b330
  41b345:	sahf   
  41b346:	jecxz  0x41b342
  41b348:	jno    0x41b33c
  41b34a:	ss jmp 0xeadf2f27
  41b350:	addr16 in eax,0xce
  41b353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b354:	pop    ecx
  41b355:	pushf  
  41b356:	stos   BYTE PTR es:[edi],al
  41b357:	cmp    bl,0xef
  41b35a:	pop    edi
  41b35b:	mov    ah,0xf9
  41b35d:	es test al,0xd0
  41b360:	jnp    0x41b2e3
  41b362:	xor    al,0x52
  41b364:	mov    WORD PTR [ebx+eiz*4],gs
  41b367:	(bad)  [ebp+0x16]
  41b36a:	adc    ebx,DWORD PTR [edx]
  41b36c:	fs loop 0x41b3d5
  41b36f:	dec    DWORD PTR [ebp+0x69d63687]
  41b375:	out    dx,eax
  41b376:	mov    esi,0x78cfd607
  41b37b:	int3   
  41b37c:	cmp    dh,bl
  41b37e:	or     ch,dh
  41b380:	mov    ebp,0x80890352
  41b385:	or     al,0xad
  41b387:	lds    ecx,FWORD PTR [esi]
  41b389:	lea    ebx,[esi+0x57]
  41b38c:	daa    
  41b38d:	and    dl,BYTE PTR [esi+eax*1]
  41b390:	xchg   BYTE PTR [edx-0x5044ce1c],bh
  41b396:	sub    al,BYTE PTR [ecx+0x25e3768a]
  41b39c:	retf   0xf614
  41b39f:	fadd   QWORD PTR ds:0xbf94f8bb
  41b3a5:	sbb    ecx,0x55
  41b3a8:	lahf   
  41b3a9:	jp     0x41b3d8
  41b3ab:	mov    ebp,0x8ffc5497
  41b3b0:	xchg   esp,eax
  41b3b1:	mov    esp,0xbf564132
  41b3b6:	pop    ss
  41b3b7:	(bad)  
  41b3b8:	scas   eax,DWORD PTR es:[edi]
  41b3b9:	lahf   
  41b3ba:	sahf   
  41b3bb:	adc    BYTE PTR [ecx+eax*4],bh
  41b3be:	arpl   WORD PTR [eax+ebx*8+0xaefd1ed],di
  41b3c5:	xchg   ebx,eax
  41b3c6:	retf   
  41b3c7:	sahf   
  41b3c8:	jns    0x41b410
  41b3ca:	cwde   
  41b3cb:	cdq    
  41b3cc:	popf   
  41b3cd:	push   ebp
  41b3ce:	daa    
  41b3cf:	adc    eax,0x4c87089b
  41b3d4:	daa    
  41b3d5:	dec    eax
  41b3d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3d7:	and    al,0xe9
  41b3d9:	jle    0x41b383
  41b3db:	jne    0x41b3ca
  41b3dd:	ret    0xa9a3
  41b3e0:	lods   eax,DWORD PTR ds:[esi]
  41b3e1:	sbb    DWORD PTR [ecx-0x12],0xb6744e33
  41b3e8:	mov    ebp,0x71856305
  41b3ed:	rcr    DWORD PTR [esi],cl
  41b3ef:	push   es
  41b3f0:	shl    DWORD PTR [ebx+0x184c89b5],1
  41b3f6:	jg     0x41b3d3
  41b3f8:	das    
  41b3f9:	repnz int3 
  41b3fb:	cmp    esp,DWORD PTR [eax]
  41b3fd:	mov    ds:0x4dd5e613,eax
  41b402:	or     al,0x76
  41b404:	push   eax
  41b405:	or     eax,0xefa661b2
  41b40a:	push   edi
  41b40b:	in     eax,0x86
  41b40d:	add    ch,BYTE PTR [ecx-0x5c]
  41b410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b411:	stc    
  41b412:	mov    bl,0xb9
  41b414:	mov    al,0x9a
  41b416:	shr    BYTE PTR [edi-0x32],1
  41b419:	cmp    DWORD PTR [ecx+esi*1-0x71],edx
  41b41d:	cmc    
  41b41e:	jmp    0x41b3ec
  41b420:	ficomp WORD PTR [edx]
  41b422:	call   0x2292:0x17be9bb2
  41b429:	dec    eax
  41b42a:	fld    DWORD PTR [ecx-0x10]
  41b42d:	lea    esp,[ecx+edi*1+0x257f12b1]
  41b434:	or     al,0xde
  41b436:	jecxz  0x41b420
  41b438:	inc    esp
  41b439:	hlt    
  41b43a:	push   eax
  41b43b:	test   al,0xf1
  41b43d:	mov    edx,0x9bc8eae7
  41b442:	sbb    al,0xb3
  41b444:	fsubr  QWORD PTR [edi]
  41b446:	mov    DWORD PTR [ecx+edx*2-0x7e199038],edx
  41b44d:	and    edx,DWORD PTR [ecx]
  41b44f:	pop    edx
  41b450:	xchg   ecx,eax
  41b451:	outs   dx,DWORD PTR ds:[esi]
  41b452:	popf   
  41b453:	ins    DWORD PTR es:[edi],dx
  41b454:	xor    dl,BYTE PTR [ecx]
  41b456:	test   al,0x1c
  41b458:	and    al,0xdb
  41b45a:	mov    ebp,0x83540000
  41b45f:	clc    
  41b460:	bound  esp,QWORD PTR [esi+0x3b6695e0]
  41b466:	sub    ch,BYTE PTR [ebp-0x51]
  41b469:	pop    es
  41b46a:	push   ebx
  41b46b:	jg     0x41b427
  41b46d:	xchg   esi,eax
  41b46e:	pop    edx
  41b46f:	push   ebp
  41b470:	dec    edx
  41b471:	and    BYTE PTR [edx],bh
  41b473:	repnz mov WORD PTR [eax+0xd],cs
  41b477:	dec    eax
  41b478:	cwde   
  41b479:	push   cs
  41b47a:	bound  edx,QWORD PTR [esi-0x497d0097]
  41b480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b481:	dec    edx
  41b482:	sub    dh,bh
  41b484:	push   ebx
  41b485:	rep outs dx,BYTE PTR ds:[esi]
  41b487:	data16 sbb al,0xf3
  41b48a:	fdivr  DWORD PTR [ebx]
  41b48c:	xlat   BYTE PTR ds:[ebx]
  41b48d:	pop    esi
  41b48e:	rol    bh,0xa
  41b491:	bound  esp,QWORD PTR [edi-0x41aba2a2]
  41b497:	dec    ebx
  41b498:	xor    DWORD PTR [esi-0x3b88f225],esi
  41b49e:	fwait
  41b49f:	pop    edi
  41b4a0:	out    dx,eax
  41b4a1:	(bad)  
  41b4a2:	sub    eax,0x849fc75e
  41b4a7:	in     eax,dx
  41b4a8:	lock popa 
  41b4aa:	cmp    esp,DWORD PTR [edx]
  41b4ac:	mov    edx,0x885d6c86
  41b4b1:	mov    DWORD PTR [edi-0x3d],ecx
  41b4b4:	xchg   esi,eax
  41b4b5:	mov    cl,0xfe
  41b4b7:	push   0xffffffd3
  41b4b9:	sub    ebx,DWORD PTR [edi-0x70]
  41b4bc:	scas   al,BYTE PTR es:[edi]
  41b4bd:	mov    esp,?
  41b4bf:	popa   
  41b4c0:	or     bl,bl
  41b4c2:	sbb    al,0xd0
  41b4c4:	pop    edi
  41b4c5:	out    dx,eax
  41b4c6:	loopne 0x41b450
  41b4c8:	ror    edx,cl
  41b4ca:	outs   dx,DWORD PTR ds:[esi]
  41b4cb:	sub    DWORD PTR [ecx],eax
  41b4cd:	jmp    0x1e9:0xb69f58c
  41b4d4:	pop    esp
  41b4d5:	fldcw  WORD PTR [ebp+0x47]
  41b4d8:	leave  
  41b4d9:	dec    eax
  41b4da:	test   cl,al
  41b4dc:	jb     0x41b54b
  41b4de:	push   0xf94f0e98
  41b4e3:	stc    
  41b4e4:	in     eax,0x15
  41b4e6:	popaw  
  41b4e8:	add    eax,0xec141c85
  41b4ed:	sub    al,0x5a
  41b4ef:	and    eax,0x82023b80
  41b4f4:	inc    ecx
  41b4f5:	push   eax
  41b4f6:	dec    ebx
  41b4f7:	add    BYTE PTR [esi+0x7ed11746],cl
  41b4fd:	adc    dh,bh
  41b4ff:	mov    bh,BYTE PTR [ecx-0xf]
  41b502:	inc    edx
  41b503:	dec    ecx
  41b504:	mov    edx,0xbde6a3c9
  41b509:	cmc    
  41b50a:	shl    DWORD PTR [esi+0x4838f9c5],0x96
  41b511:	and    al,0x2a
  41b513:	mov    dl,0x2f
  41b515:	xchg   ebx,eax
  41b516:	ret    
  41b517:	and    DWORD PTR [edi],0xffffffce
  41b51a:	push   eax
  41b51b:	into   
  41b51c:	jae    0x41b59a
  41b51e:	cmp    al,0x67
  41b520:	ficom  WORD PTR ss:[esi-0x7fc409b2]
  41b527:	leave  
  41b528:	in     al,0x87
  41b52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b52b:	data16 aas 
  41b52d:	add    DWORD PTR [ecx-0x7e],edx
  41b530:	loop   0x41b5a2
  41b532:	imul   eax,DWORD PTR ds:0x463439fb,0x6e
  41b539:	jnp    0x41b4f9
  41b53b:	(bad)  
  41b53c:	fsubr  DWORD PTR [eax-0x4fe57510]
  41b542:	lock mov ch,0xc0
  41b545:	bound  ebp,QWORD PTR [esi-0x60d18274]
  41b54b:	sub    bh,BYTE PTR [esp+eiz*4]
  41b54e:	das    
  41b54f:	mov    edx,0x17fdddee
  41b554:	in     eax,0x2a
  41b556:	mov    ebp,0xcdb04987
  41b55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b55c:	add    BYTE PTR [ebx-0x7f],ah
  41b55f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b560:	pop    es
  41b561:	retf   0x5865
  41b564:	cdq    
  41b565:	ins    DWORD PTR es:[edi],dx
  41b566:	cmp    edx,esp
  41b568:	fcomp  QWORD PTR [ebp+0x67949a03]
  41b56e:	sbb    BYTE PTR [esi+0x2b0eb79d],bh
  41b574:	fisttp QWORD PTR [ecx+0x16]
  41b577:	ins    BYTE PTR es:[edi],dx
  41b578:	pop    edi
  41b579:	push   esp
  41b57a:	and    BYTE PTR [esi+ecx*2],ah
  41b57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b57e:	cli    
  41b57f:	ins    DWORD PTR es:[edi],dx
  41b580:	lea    edi,es:[eax+esi*1-0x52]
  41b585:	or     ebx,0xaeebd73
  41b58b:	bswap  ebp
  41b58d:	sub    cl,BYTE PTR [eax-0x4]
  41b590:	jp     0x41b569
  41b592:	sbb    edx,DWORD PTR [ebx+0x44]
  41b595:	push   ebp
  41b596:	adc    eax,DWORD PTR [eax+edi*2-0x4c]
  41b59a:	mov    al,0x6a
  41b59c:	jge    0x41b524
  41b59e:	xchg   DWORD PTR [esi+0x6b],ebx
  41b5a1:	ja     0x41b55f
  41b5a3:	mov    ebx,0xcaac0cd5
  41b5a8:	sti    
  41b5a9:	popf   
  41b5aa:	jo     0x41b56e
  41b5ac:	inc    ebp
  41b5ad:	aas    
  41b5ae:	cmp    dh,BYTE PTR [edx]
  41b5b0:	pop    edi
  41b5b1:	adc    al,0xd8
  41b5b3:	inc    ebp
  41b5b4:	xor    DWORD PTR [ebp+ebx*8+0x74],0xffffffa1
  41b5b9:	pop    esp
  41b5ba:	js     0x41b56a
  41b5bc:	or     BYTE PTR ds:[edi-0x48cc9789],dh
  41b5c3:	adc    al,0xc0
  41b5c5:	lock rcl DWORD PTR [ebx+0x6d20cc9a],cl
  41b5cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5cd:	push   ebx
  41b5ce:	and    al,0x10
  41b5d0:	mov    ecx,0x10ab89ae
  41b5d5:	mov    ebp,DWORD PTR [eax]
  41b5d7:	retf   0x9dd2
  41b5da:	mov    ds:0x1ff8e57,al
  41b5df:	cmc    
  41b5e0:	aad    0x62
  41b5e2:	rcr    ah,cl
  41b5e4:	dec    esp
  41b5e5:	shl    DWORD PTR [esi],cl
  41b5e7:	shl    BYTE PTR [edi-0xe90be95],0x21
  41b5ee:	jno    0x41b59c
  41b5f0:	mov    eax,ds:0xcfe8998a
  41b5f5:	add    ecx,DWORD PTR [ebx]
  41b5f7:	push   esp
  41b5f8:	add    eax,0xcdcbb596
  41b5fd:	xor    eax,0xb2669d9d
  41b602:	inc    eax
  41b603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b604:	test   BYTE PTR [ebx-0xe9d0e13],cl
  41b60a:	out    0x94,eax
  41b60c:	mov    ebp,0xc9ff6a43
  41b611:	outs   dx,DWORD PTR ds:[esi]
  41b612:	or     ch,BYTE PTR [ecx-0x5ce4361f]
  41b618:	push   ds
  41b619:	push   esi
  41b61a:	loopne 0x41b62e
  41b61c:	es mov bh,0x5a
  41b61f:	adc    al,0x15
  41b621:	stc    
  41b622:	xor    ebp,ebp
  41b624:	mov    edx,0x8754d703
  41b629:	mov    ecx,0x11d2c9f7
  41b62e:	js     0x41b6ab
  41b630:	dec    ax
  41b632:	ror    DWORD PTR [esi-0x55],cl
  41b635:	repnz inc esp
  41b637:	jne    0x41b66f
  41b639:	jno    0x41b669
  41b63b:	pop    esp
  41b63c:	xor    DWORD PTR [esi],0xffffff92
  41b63f:	aam    0xb6
  41b641:	aaa    
  41b642:	fcomp  DWORD PTR [ebx+0x25]
  41b645:	daa    
  41b646:	aam    0x8c
  41b648:	je     0x41b5f6
  41b64a:	div    DWORD PTR [ecx]
  41b64c:	fisubr WORD PTR [esi]
  41b64e:	jnp    0x41b6a5
  41b650:	and    eax,esp
  41b652:	jne    0x41b5f6
  41b654:	jne    0x41b658
  41b656:	xor    al,BYTE PTR [ebx-0x3328dea3]
  41b65c:	xchg   esp,eax
  41b65d:	ds repz push es
  41b660:	mov    ah,0xc9
  41b662:	pop    ebx
  41b663:	and    esi,DWORD PTR [edi+0x68]
  41b666:	cwde   
  41b667:	shl    DWORD PTR [ebx],0x84
  41b66a:	fild   QWORD PTR [ebp+0x33]
  41b66d:	sbb    BYTE PTR [esi+0x79b09285],dh
  41b673:	push   ebx
  41b674:	pusha  
  41b675:	add    DWORD PTR [ebx+0x6f49e29],edx
  41b67b:	bound  ebp,QWORD PTR ds:0xaadbc643
  41b681:	aas    
  41b682:	push   esi
  41b683:	pop    es
  41b684:	sub    dh,BYTE PTR [ebp+0x69]
  41b687:	adc    BYTE PTR [ebx-0x3e],ch
  41b68a:	call   0x6eee:0x55020685
  41b691:	mov    ecx,0x4288a31e
  41b696:	shl    DWORD PTR [edx-0x40],cl
  41b699:	icebp  
  41b69a:	outs   dx,BYTE PTR ds:[esi]
  41b69b:	jo     0x41b6b9
  41b69d:	pop    eax
  41b69e:	xchg   ebp,eax
  41b69f:	not    BYTE PTR [edi+0x8834a01]
  41b6a5:	pop    edi
  41b6a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6a7:	in     al,0x7c
  41b6a9:	mov    bh,0x84
  41b6ab:	push   ecx
  41b6ad:	xchg   esi,eax
  41b6ae:	imul   edx,edi,0xffffff83
  41b6b1:	loope  0x41b6b8
  41b6b3:	and    cl,BYTE PTR [eax-0x33af6bd0]
  41b6b9:	mov    al,ds:0x5b900fd0
  41b6be:	jl     0x41b68b
  41b6c0:	push   edx
  41b6c1:	sub    bh,0x7f
  41b6c4:	push   ecx
  41b6c5:	rol    DWORD PTR [edx],1
  41b6c7:	mov    ds:0xbfcc190b,al
  41b6cc:	push   dx
  41b6ce:	push   esi
  41b6cf:	push   ss
  41b6d0:	ret    
  41b6d1:	push   es
  41b6d2:	cmp    DWORD PTR [ebx+edx*8+0x4],0x22
  41b6d7:	and    BYTE PTR [esp+ebx*8+0x60],0xd5
  41b6dc:	pop    edx
  41b6dd:	sbb    al,0x20
  41b6df:	dec    ebp
  41b6e0:	xlat   BYTE PTR ds:[ebx]
  41b6e1:	add    al,0x16
  41b6e3:	inc    edx
  41b6e4:	adc    al,0x29
  41b6e6:	cmp    ebx,DWORD PTR [eax-0x6a]
  41b6e9:	push   ss
  41b6ea:	pop    ebp
  41b6eb:	cld    
  41b6ec:	sar    DWORD PTR [eax-0xe],1
  41b6ef:	xchg   esp,eax
  41b6f0:	jb     0x41b72a
  41b6f2:	sub    esi,DWORD PTR [eax-0x30b2db10]
  41b6f8:	lods   al,BYTE PTR ds:[esi]
  41b6f9:	xchg   esp,eax
  41b6fa:	call   0x241e1b95
  41b6ff:	(bad)  
  41b700:	xchg   ebx,eax
  41b701:	mov    ah,0xb6
  41b703:	sub    BYTE PTR [ebx+0x4852a46b],al
  41b709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b70a:	fcmove st,st(3)
  41b70c:	push   ebx
  41b70d:	mov    DWORD PTR [ebp+0x54],ecx
  41b710:	es ror cl,cl
  41b713:	in     eax,0x98
  41b715:	out    0xdc,al
  41b717:	push   ebp
  41b718:	outs   dx,BYTE PTR ds:[esi]
  41b719:	ret    
  41b71a:	push   ss
  41b71b:	sub    eax,0x20496140
  41b720:	sub    BYTE PTR [edx],0xcb
  41b723:	push   0xaf73e5a7
  41b728:	xchg   DWORD PTR [ebx+0x3c0e7930],edx
  41b72e:	in     eax,dx
  41b72f:	xchg   edx,eax
  41b730:	push   eax
  41b731:	cmp    ebx,DWORD PTR [eax]
  41b733:	test   BYTE PTR [edx],ch
  41b735:	push   0x179614a6
  41b73a:	lock in al,dx
  41b73c:	push   ebx
  41b73d:	cmp    DWORD PTR [ecx-0x7c],esp
  41b740:	dec    edi
  41b741:	pop    ebp
  41b742:	pop    edi
  41b743:	loop   0x41b778
  41b745:	xor    al,BYTE PTR [ecx+eiz*8-0x7916df47]
  41b74c:	leave  
  41b74d:	scas   eax,DWORD PTR es:[edi]
  41b74e:	scas   eax,DWORD PTR es:[edi]
  41b74f:	push   ecx
  41b750:	(bad)  
  41b751:	out    dx,eax
  41b752:	mov    eax,0xe1e264b3
  41b757:	jae    0x41b6ea
  41b759:	lahf   
  41b75a:	sbb    eax,0xbfaeeb98
  41b75f:	inc    esp
  41b760:	mov    ah,0x81
  41b762:	call   0xccfa23e4
  41b767:	sbb    al,0xb
  41b769:	inc    ebx
  41b76a:	pop    ebp
  41b76b:	out    dx,al
  41b76c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b76d:	mov    dl,0x8f
  41b76f:	iret   
  41b770:	jo     0x41b79f
  41b772:	loop   0x41b700
  41b774:	pop    es
  41b775:	cwde   
  41b776:	push   esi
  41b777:	mov    eax,0xc331c489
  41b77c:	push   edx
  41b77d:	dec    esi
  41b77e:	out    0xa0,al
  41b780:	clc    
  41b781:	pop    ebp
  41b782:	mov    al,ds:0xcb992f98
  41b787:	fild   WORD PTR [ebp+0x36]
  41b78a:	mov    edx,0x70a797e
  41b78f:	adc    DWORD PTR [edi-0x593003e6],0xe2114285
  41b799:	out    dx,eax
  41b79a:	push   ecx
  41b79b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b79c:	hlt    
  41b79d:	and    BYTE PTR [ecx],dl
  41b79f:	or     al,al
  41b7a1:	lds    esi,FWORD PTR ds:0x963dc344
  41b7a7:	ss xchg ecx,eax
  41b7a9:	push   edx
  41b7aa:	mov    dl,ah
  41b7ac:	sub    DWORD PTR [edx+0x4c],ebp
  41b7af:	xor    eax,0xf667bc3
  41b7b4:	cmp    edx,esi
  41b7b6:	jne    0x41b73a
  41b7b8:	(bad)  
  41b7b9:	jmp    0xc47f22cc
  41b7be:	push   0x4422cb08
  41b7c3:	pop    ss
  41b7c4:	in     al,0x6e
  41b7c6:	cmp    eax,0xc9eb4f28
  41b7cb:	and    BYTE PTR [ebx-0x36],ch
  41b7ce:	popa   
  41b7cf:	ret    0x20ff
  41b7d2:	imul   eax,DWORD PTR [eax+0x14978b64],0x44ba9bd6
  41b7dc:	mov    ecx,0x7dcecbc6
  41b7e1:	or     ebx,edx
  41b7e3:	cmp    al,0xff
  41b7e5:	aaa    
  41b7e6:	test   eax,0xa77318a2
  41b7eb:	cmc    
  41b7ec:	sbb    eax,0x5e043f44
  41b7f1:	cmp    dh,ah
  41b7f3:	xchg   ebx,eax
  41b7f4:	dec    ebp
  41b7f5:	inc    ecx
  41b7f6:	xor    eax,0x425c782e
  41b7fb:	pop    edi
  41b7fc:	pop    ss
  41b7fd:	call   0x1201:0xed9c3779
  41b804:	(bad)
  41b807:	popa   
  41b808:	xchg   ebp,eax
  41b809:	lahf   
  41b80a:	(bad)  
  41b80b:	stos   DWORD PTR es:[edi],eax
  41b80c:	call   0x8a34:0x51f40043
  41b813:	outs   dx,DWORD PTR ds:[esi]
  41b814:	cmp    eax,0xe4839548
  41b819:	fwait
  41b81a:	mov    dl,0xb1
  41b81c:	xor    ebx,DWORD PTR [ebp-0x3853a54b]
  41b822:	inc    eax
  41b823:	xor    al,0x89
  41b825:	or     cl,BYTE PTR [ebx+0x5b6bf1ba]
  41b82b:	xchg   edx,eax
  41b82c:	jge    0x41b809
  41b82e:	cdq    
  41b82f:	stos   BYTE PTR es:[edi],al
  41b830:	add    dh,BYTE PTR [eax+0x65accde]
  41b836:	adc    DWORD PTR [ebx],ecx
  41b838:	mov    ds,esp
  41b83a:	hlt    
  41b83b:	out    0x9b,al
  41b83d:	mov    cl,0x75
  41b83f:	mov    al,ds:0x6f6935c
  41b844:	xor    cl,bl
  41b846:	xchg   BYTE PTR cs:[edx+ecx*1],ch
  41b84a:	fcomp  QWORD PTR [ebx-0x473b8e6b]
  41b850:	pop    eax
  41b851:	(bad)  
  41b852:	and    al,0xb
  41b854:	pusha  
  41b855:	cld    
  41b856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b857:	out    dx,al
  41b858:	push   es
  41b859:	aam    0xe2
  41b85b:	jno    0x41b85d
  41b85d:	xchg   DWORD PTR [edx],ebx
  41b85f:	jo     0x41b87f
  41b861:	jp     0x41b861
  41b863:	xor    BYTE PTR [edx+esi*4],dh
  41b866:	neg    DWORD PTR [eax]
  41b868:	xchg   esi,eax
  41b869:	aad    0x1c
  41b86b:	into   
  41b86c:	mov    cl,0x82
  41b86e:	pop    eax
  41b86f:	adc    eax,DWORD PTR [ecx]
  41b871:	stos   DWORD PTR es:[edi],eax
  41b872:	and    eax,esp
  41b874:	outs   dx,DWORD PTR ds:[esi]
  41b875:	dec    ebp
  41b876:	dec    DWORD PTR [edi]
  41b878:	jle    0x41b85a
  41b87a:	and    eax,0xe07b65e9
  41b87f:	dec    eax
  41b880:	pusha  
  41b881:	pop    eax
  41b882:	loope  0x41b833
  41b884:	xor    BYTE PTR [ecx-0x39],cl
  41b887:	xchg   esp,eax
  41b888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b889:	dec    esi
  41b88a:	aas    
  41b88b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b88c:	(bad)  
  41b88d:	fs fwait
  41b88f:	mov    ah,dl
  41b891:	(bad)  
  41b892:	fcos   
  41b894:	cmp    eax,0x56b555cb
  41b899:	jno    0x41b8b6
  41b89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b89c:	(bad)  
  41b89d:	xchg   esi,eax
  41b89e:	test   eax,0xd91a5405
  41b8a3:	xchg   esi,eax
  41b8a4:	popf   
  41b8a5:	jb     0x41b864
  41b8a7:	or     al,0x1d
  41b8a9:	jae    0x41b8b6
  41b8ab:	xchg   ecx,eax
  41b8ac:	cmp    DWORD PTR [eax-0x16],0x50
  41b8b0:	inc    eax
  41b8b1:	or     esp,DWORD PTR [eax]
  41b8b3:	xchg   ebx,eax
  41b8b4:	rol    ch,1
  41b8b6:	stos   BYTE PTR es:[edi],al
  41b8b7:	ins    BYTE PTR es:[edi],dx
  41b8b8:	sub    BYTE PTR [ebx+0xe],0x1b
  41b8bc:	xchg   ebx,eax
  41b8bd:	push   ebx
  41b8be:	lock pop ebx
  41b8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c1:	add    al,0x82
  41b8c3:	push   cs
  41b8c4:	jmp    0x4661c09d
  41b8c9:	jp     0x41b8b9
  41b8cb:	sbb    eax,0xc2a1fbf9
  41b8d0:	leave  
  41b8d1:	lods   al,BYTE PTR ds:[esi]
  41b8d2:	(bad)  [ebp+eax*8+0x63]
  41b8d6:	adc    dl,al
  41b8d8:	test   BYTE PTR ds:0x9d1d907c,ch
  41b8de:	into   
  41b8df:	inc    esp
  41b8e0:	jno    0x41b917
  41b8e2:	pop    ebp
  41b8e3:	push   esp
  41b8e4:	and    dh,bl
  41b8e6:	mov    WORD PTR [ebx-0x74],es
  41b8e9:	repnz loopne 0x41b8eb
  41b8ec:	lahf   
  41b8ed:	fwait
  41b8ee:	int    0x1a
  41b8f0:	lods   eax,DWORD PTR ds:[esi]
  41b8f1:	push   edx
  41b8f2:	nop
  41b8f3:	or     DWORD PTR [eax+0x5a],edx
  41b8f6:	mov    edx,0xa0d4719f
  41b8fb:	test   ch,dl
  41b8fd:	enter  0xd248,0x77
  41b901:	sub    bh,BYTE PTR [esi]
  41b903:	and    edx,DWORD PTR [eax-0x3cbf8d86]
  41b909:	in     al,dx
  41b90a:	mov    bh,0x71
  41b90c:	mov    ds:0xbdd05820,al
  41b911:	xor    ch,BYTE PTR [edi]
  41b913:	in     eax,dx
  41b914:	inc    edx
  41b915:	cwde   
  41b916:	test   BYTE PTR [eax+0xe757027],dh
  41b91c:	dec    ecx
  41b91d:	xchg   DWORD PTR [edx-0x6cb6a5a5],esp
  41b923:	mov    dl,0x6c
  41b925:	lds    esp,FWORD PTR [eax-0x51]
  41b928:	(bad)  
  41b92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b92b:	imul   esi,esi,0xffffff91
  41b92e:	cmc    
  41b92f:	dec    esi
  41b930:	mov    eax,0x34162b36
  41b935:	mov    gs,esi
  41b937:	div    BYTE PTR [edi-0x7ce6cb54]
  41b93d:	adc    DWORD PTR [ebp+0x7fd5313f],ebp
  41b943:	lods   al,BYTE PTR ds:[esi]
  41b944:	sub    bl,BYTE PTR [edi]
  41b946:	inc    esp
  41b947:	stos   DWORD PTR es:[edi],eax
  41b948:	jb     0x41b909
  41b94a:	mov    ch,0x1c
  41b94c:	mul    ebp
  41b94e:	(bad)  [esp+ebx*1-0x76]
  41b952:	aam    0x94
  41b954:	push   ebx
  41b955:	inc    esi
  41b956:	and    dh,BYTE PTR [edx+0x8]
  41b959:	xchg   dh,ch
  41b95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b95c:	mov    eax,0xa789236e
  41b961:	into   
  41b962:	ja     0x41b90d
  41b964:	(bad)  
  41b965:	gs inc ebp
  41b967:	mov    ah,0xd0
  41b969:	and    eax,0xf483a470
  41b96e:	jmp    0xc6b7:0x1fae4489
  41b975:	push   ebx
  41b976:	add    ecx,DWORD PTR [ebx+0x5a40581f]
  41b97c:	std    
  41b97d:	inc    edi
  41b97e:	aas    
  41b97f:	jmp    0x41b9ae
  41b981:	add    eax,0x4de53cb4
  41b986:	frstor [edx]
  41b988:	xor    BYTE PTR [ebp+0xa4ce98d],dh
  41b98e:	fnstsw WORD PTR [ebp-0x19]
  41b991:	sub    dh,BYTE PTR [ecx+0x50]
  41b994:	lods   eax,DWORD PTR ds:[esi]
  41b995:	dec    BYTE PTR [ecx+eax*1]
  41b998:	std    
  41b999:	xor    DWORD PTR [eax+eiz*2+0x2e998159],edi
  41b9a0:	rol    DWORD PTR [ecx],cl
  41b9a2:	into   
  41b9a3:	mov    cl,0xe6
  41b9a5:	or     DWORD PTR [edx-0x45],ecx
  41b9a8:	stos   BYTE PTR es:[edi],al
  41b9a9:	in     eax,dx
  41b9aa:	pushf  
  41b9ab:	test   al,0x9c
  41b9ad:	push   esi
  41b9ae:	jo     0x41b984
  41b9b0:	shl    DWORD PTR [eax+0x107c4bc1],cl
  41b9b6:	mov    WORD PTR [ecx-0x71],ds
  41b9b9:	add    al,bl
  41b9bb:	mov    dl,0x41
  41b9bd:	pop    ecx
  41b9be:	aad    0xfd
  41b9c0:	push   es
  41b9c1:	push   eax
  41b9c2:	inc    ecx
  41b9c3:	stos   DWORD PTR es:[edi],eax
  41b9c4:	sub    al,BYTE PTR [edi+0x15]
  41b9c7:	ror    ebx,0xb
  41b9ca:	adc    al,0xc6
  41b9cc:	in     eax,dx
  41b9cd:	cmp    DWORD PTR [eax-0x32],edi
  41b9d0:	loopne 0x41ba4a
  41b9d2:	inc    esi
  41b9d3:	dec    esp
  41b9d4:	(bad)  
  41b9d6:	sbb    cl,BYTE PTR [edi-0xf]
  41b9d9:	push   ebx
  41b9da:	inc    edx
  41b9db:	push   esp
  41b9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9dd:	shr    DWORD PTR [ebx+edx*8],1
  41b9e0:	jecxz  0x41b969
  41b9e2:	xchg   ebx,eax
  41b9e3:	inc    esp
  41b9e4:	into   
  41b9e5:	lock das 
  41b9e7:	aad    0x42
  41b9e9:	xlat   BYTE PTR ds:[ebx]
  41b9ea:	pop    edi
  41b9eb:	out    0x5f,eax
  41b9ed:	gs dec ebx
  41b9ef:	and    eax,0xfb4db1d
  41b9f4:	(bad)  
  41b9f5:	fisttp QWORD PTR [edx]
  41b9f7:	push   ebx
  41b9f8:	or     esp,DWORD PTR [ebp+ebx*4-0x762a66f5]
  41b9ff:	pop    esi
  41ba00:	stc    
  41ba01:	dec    ebp
  41ba02:	ror    ebx,1
  41ba04:	sub    eax,0xbce244b2
  41ba09:	or     al,0x80
  41ba0b:	dec    esi
  41ba0c:	cmp    BYTE PTR [eax-0x9defc7f],ah
  41ba12:	xor    dh,BYTE PTR [edi-0x390e229d]
  41ba18:	test   DWORD PTR [eax+0x689b3a45],edi
  41ba1e:	lea    edx,[eax]
  41ba20:	inc    esp
  41ba21:	into   
  41ba22:	push   cs
  41ba23:	ficomp WORD PTR [esi+0x2f]
  41ba26:	lea    eax,[edx+0x4637ed65]
  41ba2c:	sub    eax,DWORD PTR [eax+0x58]
  41ba2f:	sar    ebx,1
  41ba31:	sub    BYTE PTR ds:0xcf59eff0,ah
  41ba37:	cpuid  
  41ba39:	push   cs
  41ba3a:	cmp    al,0x75
  41ba3c:	pop    esi
  41ba3d:	(bad)  
  41ba3f:	outs   dx,BYTE PTR ds:[esi]
  41ba40:	mov    edx,DWORD PTR [ebx+0x688a135a]
  41ba46:	push   edi
  41ba47:	xor    ecx,esp
  41ba49:	push   cs
  41ba4a:	inc    ebx
  41ba4b:	(bad)  
  41ba4c:	retf   0xc0d3
  41ba4f:	retf   
  41ba50:	jg     0x41b9f5
  41ba52:	xor    cl,0xb9
  41ba55:	xor    eax,DWORD PTR [eax-0x40611ab5]
  41ba5b:	jg     0x41ba01
  41ba5d:	sbb    BYTE PTR [ecx],ah
  41ba5f:	dec    esp
  41ba61:	push   ebp
  41ba62:	lea    ebx,[edi+ecx*4+0x3d993f2c]
  41ba69:	(bad)  
  41ba6a:	std    
  41ba6b:	xchg   DWORD PTR [ebp-0x5f],esi
  41ba6e:	mov    ds:0xd0392350,eax
  41ba73:	enter  0x7c40,0xd0
  41ba77:	std    
  41ba78:	aam    0xb1
  41ba7a:	test   eax,ebp
  41ba7c:	pop    eax
  41ba7d:	jge    0x41ba01
  41ba7f:	nop
  41ba80:	cdq    
  41ba81:	jl     0x41ba5b
  41ba83:	xchg   ebx,eax
  41ba84:	pushf  
  41ba85:	sbb    BYTE PTR [esp+edi*4+0x124aed81],dh
  41ba8c:	xchg   edx,eax
  41ba8d:	fstp   QWORD PTR [ecx-0x22]
  41ba90:	push   edi
  41ba91:	test   BYTE PTR [edx+0x408ae38b],dh
  41ba97:	loope  0x41ba9d
  41ba99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba9a:	pushf  
  41ba9b:	add    eax,0x760c960f
  41baa0:	dec    esp
  41baa1:	mov    al,ds:0x91a01804
  41baa6:	clc    
  41baa7:	and    edx,DWORD PTR [edx]
  41baa9:	mov    eax,ds:0x46fb96dc
  41baae:	or     eax,0xba20ccbe
  41bab3:	imul   edx,DWORD PTR [eax+0x407fa8c0],0xffffffaa
  41baba:	not    esi
  41babc:	jg     0x41ba65
  41babe:	outs   dx,DWORD PTR ds:[esi]
  41babf:	std    
  41bac0:	rcr    BYTE PTR [edx-0x7eca1c0b],1
  41bac6:	mov    ds:0xb575cfb1,eax
  41bacb:	mov    BYTE PTR [edi+esi*8-0x79],0xd6
  41bad0:	pusha  
  41bad1:	sub    eax,0xc042d177
  41bad6:	(bad)  
  41bad7:	sub    esp,DWORD PTR [ebx+0x1c]
  41bada:	lea    ecx,[edx]
  41badc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41badd:	mov    ebp,esi
  41badf:	and    eax,0x561a11b1
  41bae4:	jae    0x41bacc
  41bae6:	mov    ebp,0xe3615ad1
  41baeb:	daa    
  41baec:	sub    BYTE PTR [esi-0x514d253d],bl
  41baf2:	stos   BYTE PTR es:[edi],al
  41baf3:	ror    BYTE PTR [esi+0x49],cl
  41baf6:	adc    eax,0xd1ebc544
  41bafb:	call   0xb6d0:0x93fa07e6
  41bb02:	mov    al,ds:0x3f34b92d
  41bb07:	ss ds cmp eax,0x33003049
  41bb0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0f:	or     BYTE PTR [edi+0x453b3168],dl
  41bb15:	shr    DWORD PTR ds:0x453413a4,1
  41bb1b:	mov    ebp,0x850ea3bf
  41bb20:	jmp    0xaa67:0x67dbbb14
  41bb27:	inc    edi
  41bb28:	retf   
  41bb29:	ins    BYTE PTR es:[edi],dx
  41bb2a:	mov    dl,0x55
  41bb2c:	mov    ebp,0xa578974
  41bb31:	xor    DWORD PTR [ecx+0x22],esp
  41bb34:	pushf  
  41bb35:	jle    0x41bacd
  41bb37:	ja     0x41bb77
  41bb39:	or     al,0x4
  41bb3b:	push   es
  41bb3c:	add    BYTE PTR [ecx+0x36],bh
  41bb3f:	cwde   
  41bb40:	rcr    DWORD PTR [ebx+0x526b004b],cl
  41bb46:	mov    dl,0x47
  41bb48:	or     BYTE PTR [ecx-0x3d],dh
  41bb4b:	ficom  DWORD PTR [ebx]
  41bb4d:	xchg   esi,eax
  41bb4e:	rcr    DWORD PTR [ebp+0x10],cl
  41bb51:	mov    edi,0x4d7bda59
  41bb56:	loope  0x41baf6
  41bb58:	inc    dx
  41bb5a:	retf   0x3439
  41bb5d:	imul   eax,DWORD PTR [eax-0x1413b306],0xab65e46d
  41bb67:	in     eax,dx
  41bb68:	jmp    FWORD PTR [edi]
  41bb6a:	ret    0xde05
  41bb6d:	xchg   edx,eax
  41bb6e:	into   
  41bb6f:	int    0x84
  41bb71:	push   0xffffffe8
  41bb73:	lods   eax,DWORD PTR ds:[esi]
  41bb74:	xor    al,BYTE PTR [ecx-0x100c04f5]
  41bb7a:	xor    eax,0xac21b7
  41bb7f:	imul   edx,DWORD PTR [eax],0x84801df5
  41bb85:	pop    ecx
  41bb86:	movups xmm7,xmm5
  41bb89:	adc    dh,BYTE PTR [ecx]
  41bb8b:	adc    dh,bl
  41bb8d:	jo     0x41bb90
  41bb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb90:	in     eax,dx
  41bb91:	xchg   ebx,eax
  41bb92:	or     al,0x7d
  41bb94:	mov    edx,0xdf09f6ab
  41bb99:	gs sahf 
  41bb9b:	push   es
  41bb9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb9d:	mov    ds:0xc89b58a5,al
  41bba2:	push   ebx
  41bba3:	fistp  WORD PTR [edx]
  41bba5:	sbb    al,0xbf
  41bba7:	xchg   BYTE PTR [ecx],bl
  41bba9:	lods   al,BYTE PTR ds:[esi]
  41bbaa:	or     BYTE PTR [edx+0x6d713467],al
  41bbb0:	cwde   
  41bbb1:	je     0x41bb51
  41bbb3:	cs out dx,eax
  41bbb5:	and    DWORD PTR [eax],0x3ccc2e69
  41bbbb:	jno    0x41bb40
  41bbbd:	imul   edi,DWORD PTR [edx+0x1b],0xfffffffa
  41bbc1:	jbe    0x41bb45
  41bbc3:	or     DWORD PTR [esi],ebp
  41bbc5:	arpl   WORD PTR [esi-0x5d14182],bp
  41bbcb:	add    BYTE PTR ss:[eax+0xc],0x7d
  41bbd0:	ins    DWORD PTR es:[edi],dx
  41bbd1:	mov    ds:0x39da17b7,al
  41bbd6:	addr16 (bad) 
  41bbd8:	inc    ebp
  41bbd9:	mov    edi,0xc60e225
  41bbde:	jecxz  0x41bc4e
  41bbe0:	in     al,dx
  41bbe1:	sahf   
  41bbe2:	scas   al,BYTE PTR es:[edi]
  41bbe3:	push   esi
  41bbe4:	or     bh,BYTE PTR [esi]
  41bbe6:	push   eax
  41bbe7:	ret    0x887a
  41bbea:	or     al,0x99
  41bbec:	mov    eax,0xf7e61ccf
  41bbf1:	mov    al,ds:0xd62c8fc0
  41bbf6:	ins    BYTE PTR es:[edi],dx
  41bbf7:	imul   ah
  41bbf9:	aam    0x22
  41bbfb:	cmp    DWORD PTR [eax+edx*2],ebx
  41bbfe:	dec    ebx
  41bbff:	out    0x92,eax
  41bc01:	mov    ebp,0x2c709139
  41bc06:	into   
  41bc07:	pushf  
  41bc08:	enter  0x79cd,0x62
  41bc0c:	out    dx,eax
  41bc0d:	or     eax,0x48f2bcc9
  41bc12:	sbb    DWORD PTR [ebx-0x77],edi
  41bc15:	fstp   st(6)
  41bc17:	adc    al,0x5
  41bc19:	clc    
  41bc1a:	jp     0x41bc90
  41bc1c:	sti    
  41bc1d:	lods   al,BYTE PTR ds:[esi]
  41bc1e:	outs   dx,DWORD PTR ds:[esi]
  41bc1f:	out    0x53,al
  41bc21:	push   ecx
  41bc22:	mov    edx,0x3b663419
  41bc27:	shl    ebx,cl
  41bc29:	out    dx,al
  41bc2a:	inc    ebp
  41bc2b:	adc    DWORD PTR [ecx],edi
  41bc2d:	mov    DWORD PTR [ebx+eiz*8],ecx
  41bc30:	mov    WORD PTR [edx-0x2],cs
  41bc33:	mov    edx,0x1ca0b50d
  41bc38:	jecxz  0x41bbd4
  41bc3a:	fdiv   DWORD PTR [ebx+0x442637e9]
  41bc40:	stos   BYTE PTR es:[edi],al
  41bc41:	pop    ebx
  41bc42:	sbb    eax,0x69e4841c
  41bc47:	sub    eax,0x16b71fb6
  41bc4c:	out    dx,eax
  41bc4d:	adc    DWORD PTR [edi],esi
  41bc4f:	enter  0x7fe1,0x1
  41bc53:	pop    ss
  41bc54:	and    ah,0x96
  41bc57:	(bad)  
  41bc58:	jmp    0xdadc:0xb6a8ca16
  41bc5f:	and    eax,0xbbf5e679
  41bc64:	push   esp
  41bc65:	mov    al,ds:0xae024eee
  41bc6a:	lods   al,BYTE PTR ds:[esi]
  41bc6b:	mov    esi,0x5f8d418e
  41bc70:	data16 shr bl,0x6
  41bc74:	daa    
  41bc75:	xchg   edi,eax
  41bc76:	adc    DWORD PTR [esi+0x26],ebx
  41bc79:	cdq    
  41bc7a:	adc    DWORD PTR ds:0x9d45eca5,0x9a503078
  41bc84:	rcr    DWORD PTR [ecx],0xf6
  41bc87:	sub    esi,DWORD PTR [edx]
  41bc89:	sub    al,0x29
  41bc8b:	std    
  41bc8c:	push   cs
  41bc8d:	push   cs
  41bc8e:	jmp    0x8398:0x31bc8e8f
  41bc95:	out    0x81,al
  41bc97:	or     edi,DWORD PTR [edi]
  41bc99:	push   ss
  41bc9a:	push   edi
  41bc9b:	inc    ebx
  41bc9c:	sub    eax,0x6462221a
  41bca1:	dec    esi
  41bca2:	sbb    eax,0xcfcff945
  41bca7:	xchg   edx,eax
  41bca8:	fbld   TBYTE PTR [edi+0x55300410]
  41bcae:	clc    
  41bcaf:	pushf  
  41bcb0:	lahf   
  41bcb1:	pop    edx
  41bcb2:	mov    al,0x56
  41bcb4:	imul   edi,DWORD PTR [edi-0x630a2278],0x68de80f9
  41bcbe:	xor    esi,DWORD PTR [eax-0x6b]
  41bcc1:	sbb    al,0x48
  41bcc3:	(bad)  
  41bcc4:	mov    ebx,0xff7ba483
  41bcc9:	ss mov al,0xbb
  41bccc:	mov    eax,ds:0xf5611308
  41bcd1:	leave  
  41bcd2:	mov    ebp,0xeab0e123
  41bcd7:	xor    eax,0x16c82ea8
  41bcdc:	dec    BYTE PTR [ebx+0x2b]
  41bcdf:	mov    edi,0x2c0bb3db
  41bce4:	xchg   esi,eax
  41bce5:	(bad)  
  41bce6:	ret    
  41bce7:	cmp    al,0x53
  41bce9:	jmp    0x434e08be
  41bcee:	and    ebp,DWORD PTR [ecx-0x31]
  41bcf1:	or     ebx,ebp
  41bcf3:	pop    ss
  41bcf4:	(bad)  
  41bcf5:	cmp    DWORD PTR [ebx+edi*8-0x5ab697b1],ebp
  41bcfc:	pop    es
  41bcfd:	pop    ebp
  41bcfe:	(bad)  
  41bcff:	push   es
  41bd00:	xor    al,0xc
  41bd02:	out    dx,al
  41bd03:	mov    bl,0x1
  41bd05:	cmp    dl,al
  41bd07:	or     eax,0x42a52f8
  41bd0c:	sbb    eax,0x1a5aaa5b
  41bd11:	cmp    eax,0xa3d064b7
  41bd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd17:	int3   
  41bd18:	fcomp  DWORD PTR [edi-0x7b]
  41bd1b:	fisubr DWORD PTR [eax+0x73]
  41bd1e:	jbe    0x41bd9c
  41bd20:	jl     0x41bcf0
  41bd22:	(bad)  
  41bd23:	mov    eax,0x5933b0f8
  41bd28:	mov    ecx,0x59106dc1
  41bd2d:	int3   
  41bd2e:	add    BYTE PTR [edx],dh
  41bd30:	shl    BYTE PTR [ecx-0x57732ef3],cl
  41bd36:	jne    0x41bd9a
  41bd38:	inc    ebp
  41bd39:	adc    eax,0x285accfa
  41bd3e:	es pusha 
  41bd40:	pop    eax
  41bd41:	fdiv   DWORD PTR [ebx-0x80]
  41bd44:	stos   DWORD PTR es:[edi],eax
  41bd45:	or     WORD PTR [esi-0x16],ax
  41bd49:	adc    edx,DWORD PTR [ecx+0x47]
  41bd4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd4d:	adc    BYTE PTR [edx+0x47],0x93
  41bd51:	push   esi
  41bd52:	stos   DWORD PTR es:[edi],eax
  41bd53:	inc    ebx
  41bd54:	inc    ebp
  41bd55:	push   ecx
  41bd56:	push   ecx
  41bd57:	repz cmp esi,DWORD PTR [ecx]
  41bd5a:	ror    BYTE PTR [ecx-0x38841d1b],1
  41bd60:	xor    cl,BYTE PTR [ecx-0x525698ca]
  41bd66:	gs retf 
  41bd68:	lods   al,BYTE PTR ds:[esi]
  41bd69:	jl     0x41bd2a
  41bd6b:	sbb    eax,0x60e172d3
  41bd70:	jge    0x41bd6c
  41bd72:	add    al,0x9b
  41bd74:	mov    edx,0x612b9c28
  41bd79:	gs xchg edx,eax
  41bd7b:	mov    al,ds:0x83a676bd
  41bd80:	lds    esi,FWORD PTR [edx-0xe]
  41bd83:	sub    ah,BYTE PTR [ebp-0x365f5a6c]
  41bd89:	fwait
  41bd8a:	scas   al,BYTE PTR es:[edi]
  41bd8b:	mov    bl,0x1
  41bd8d:	sbb    eax,DWORD PTR [eax-0x75]
  41bd90:	ja     0x41bdb5
  41bd92:	xchg   edx,eax
  41bd93:	mov    ah,0x29
  41bd95:	jp     0x41bdd7
  41bd97:	shl    DWORD PTR [edx],1
  41bd99:	sub    DWORD PTR [ecx-0x399679de],esi
  41bd9f:	jb     0x41bd8b
  41bda1:	inc    eax
  41bda2:	xchg   ebx,eax
  41bda3:	jmp    0x5000:0x44cf702b
  41bdaa:	jle    0x41bdd9
  41bdac:	and    edx,DWORD PTR [edx]
  41bdae:	leave  
  41bdaf:	cmp    BYTE PTR [edi-0x6672f7a9],al
  41bdb5:	jge    0x41be09
  41bdb7:	scas   al,BYTE PTR es:[edi]
  41bdb8:	out    dx,al
  41bdb9:	mov    ds:0xee224454,al
  41bdbe:	fld    st(4)
  41bdc0:	or     bh,bl
  41bdc2:	out    dx,al
  41bdc3:	add    eax,DWORD PTR [ebp+0x73fa87f4]
  41bdc9:	popa   
  41bdca:	ja     0x41be3e
  41bdcc:	xchg   bp,ax
  41bdce:	mov    BYTE PTR [edx+0x708558f7],ch
  41bdd4:	dec    ecx
  41bdd5:	and    BYTE PTR [ecx+0x7e],dl
  41bdd8:	push   ds
  41bdd9:	(bad)  
  41bddb:	jmp    0x41bdb6
  41bddd:	stos   DWORD PTR es:[edi],eax
  41bdde:	xchg   esp,eax
  41bddf:	call   0x3dee:0x3c8b
  41bde5:	jne    0x41be4b
  41bde7:	inc    ebp
  41bde8:	sub    eax,0x47fef3e4
  41bded:	in     eax,0xcd
  41bdef:	daa    
  41bdf0:	outs   dx,DWORD PTR ds:[esi]
  41bdf1:	outs   dx,BYTE PTR ds:[esi]
  41bdf2:	mov    ebx,0x37d40a4d
  41bdf7:	mov    ss,WORD PTR [ecx+0x78]
  41bdfa:	mov    ebx,0x815c2041
  41bdff:	push   eax
  41be00:	xor    BYTE PTR [ebx],ah
  41be02:	sub    BYTE PTR [ebx+0x1b],ch
  41be05:	jo     0x41be5a
  41be07:	test   BYTE PTR [edi+0x4d007c99],al
  41be0d:	or     ebx,DWORD PTR [eax+0x76]
  41be10:	frstor [eax+0x7da44952]
  41be16:	sbb    BYTE PTR [esi+0x30a49346],al
  41be1c:	sub    BYTE PTR [edx-0x62c6b9e9],al
  41be22:	pop    es
  41be23:	and    dh,bl
  41be25:	or     BYTE PTR ds:0x3620f9dc,ch
  41be2b:	(bad)  
  41be2c:	pop    esi
  41be2d:	test   esp,ecx
  41be2f:	inc    ecx
  41be30:	push   ecx
  41be31:	(bad)  
  41be32:	pop    eax
  41be33:	mov    dh,0xfb
  41be35:	mov    al,ds:0x890bfe4d
  41be3a:	cmp    eax,0xf79e7d6a
  41be3f:	leave  
  41be40:	and    DWORD PTR [ecx+0xf],esp
  41be43:	sti    
  41be44:	jnp    0x41bdeb
  41be46:	push   ecx
  41be47:	push   ebp
  41be48:	and    BYTE PTR [ecx+0x771bc22a],dl
  41be4e:	sub    DWORD PTR [eax-0x33b6b6e1],edx
  41be54:	fidiv  DWORD PTR [eax-0x21]
  41be57:	jl     0x41be16
  41be59:	retf   0x479b
  41be5c:	mov    bh,0x7a
  41be5e:	and    ebp,eax
  41be60:	nop
  41be61:	retf   
  41be62:	fist   DWORD PTR [edi-0x1b]
  41be65:	dec    eax
  41be66:	jns    0x41bdec
  41be68:	(bad)  
  41be69:	leave  
  41be6a:	nop
  41be6b:	arpl   WORD PTR [edx-0x2f],sp
  41be6e:	pop    esi
  41be6f:	rcl    WORD PTR [ecx-0x53b0ad51],0xcb
  41be77:	cmp    al,BYTE PTR ds:[edx+0x304453f1]
  41be7e:	lahf   
  41be7f:	adc    dl,cl
  41be81:	xchg   esi,eax
  41be82:	xchg   esi,eax
  41be83:	inc    edi
  41be84:	scas   al,BYTE PTR es:[edi]
  41be85:	ret    
  41be86:	adc    eax,0x2df6e5e6
  41be8b:	sbb    ebp,DWORD PTR [ecx+0x70656671]
  41be91:	and    eax,0x4aa24452
  41be96:	jg     0x41bebc
  41be98:	pushf  
  41be99:	je     0x41be1e
  41be9b:	adc    DWORD PTR ds:0xe21bfd6f,ecx
  41bea1:	shr    al,0x25
  41bea4:	and    cl,BYTE PTR [edx]
  41bea6:	adc    eax,0xcbd63046
  41beab:	std    
  41beac:	sbb    al,0x5
  41beae:	add    ecx,DWORD PTR [ebp-0x14]
  41beb1:	popa   
  41beb2:	cmp    ecx,DWORD PTR [ebp-0x27]
  41beb5:	cmp    DWORD PTR [edx-0x31],ebx
  41beb8:	dec    ebp
  41beb9:	sbb    DWORD PTR [esi-0x6b32d6c8],edi
  41bebf:	xlat   BYTE PTR ds:[ebx]
  41bec0:	mov    WORD PTR [ecx+0x54aaa177],es
  41bec6:	jnp    0x41beb2
  41bec8:	mov    al,ds:0xf9da5834
  41becd:	stos   DWORD PTR es:[edi],eax
  41bece:	push   esi
  41becf:	push   0x7b9aebc1
  41bed4:	sub    dh,BYTE PTR [esi-0x71]
  41bed7:	adc    ah,BYTE PTR [ecx-0x30]
  41beda:	mov    dh,0xb1
  41bedc:	into   
  41bedd:	sub    al,BYTE PTR [edi+0x5a97a169]
  41bee3:	out    dx,al
  41bee4:	sbb    eax,0x38c3bb78
  41bee9:	adc    al,0xef
  41beeb:	pop    esi
  41beec:	scas   al,BYTE PTR es:[edi]
  41beed:	sahf   
  41beee:	and    eax,0xaedffccd
  41bef3:	inc    edi
  41bef4:	xchg   eax,edi
  41bef6:	sub    eax,0xc3bc0c91
  41befb:	dec    ecx
  41befc:	stos   DWORD PTR es:[edi],eax
  41befd:	scas   al,BYTE PTR es:[edi]
  41befe:	pop    es
  41beff:	jnp    0x41bed5
  41bf01:	or     eax,0x3563a12c
  41bf06:	sti    
  41bf07:	push   0xd5f6d54f
  41bf0c:	adc    bl,BYTE PTR [ecx]
  41bf0e:	(bad)  
  41bf0f:	cmp    dh,BYTE PTR [ebx+0x5ca028c5]
  41bf15:	jne    0x41bf78
  41bf17:	mov    BYTE PTR [esi+0x26d9f25],0x44
  41bf1e:	ins    DWORD PTR es:[edi],dx
  41bf1f:	std    
  41bf20:	in     al,dx
  41bf21:	pop    ecx
  41bf22:	cmp    al,0x86
  41bf24:	push   es
  41bf25:	es jp  0x41beee
  41bf28:	pop    esi
  41bf29:	mov    ebp,0x32074972
  41bf2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf2f:	clc    
  41bf30:	xor    al,0xd3
  41bf32:	rol    DWORD PTR [ebx+0x10a78bfc],1
  41bf38:	ret    
  41bf39:	pop    ds
  41bf3a:	jmp    0x1fa3a27d
  41bf3f:	popa   
  41bf40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf41:	pop    ebx
  41bf42:	popf   
  41bf43:	adc    eax,0x79be3cc6
  41bf48:	sahf   
  41bf49:	cld    
  41bf4a:	xor    al,0x10
  41bf4c:	jb     0x41bfcd
  41bf4e:	icebp  
  41bf4f:	repz loopne 0x41bedd
  41bf52:	jno    0x41beff
  41bf54:	fs sar dl,1
  41bf57:	dec    esi
  41bf58:	push   esp
  41bf59:	sbb    DWORD PTR [ecx],edx
  41bf5b:	pop    ss
  41bf5c:	jle    0x41bf97
  41bf5e:	fwait
  41bf5f:	es daa 
  41bf61:	mov    BYTE PTR [esi+ebx*4+0x5c],ch
  41bf65:	adc    DWORD PTR [edx-0x2f9423c6],ebx
  41bf6b:	shr    DWORD PTR [esi-0x4b275361],1
  41bf71:	jl     0x41bef8
  41bf73:	js     0x41bf15
  41bf75:	popa   
  41bf76:	imul   edx,edx,0x3b
  41bf79:	sbb    bh,BYTE PTR [edx+eiz*8+0x176d0a49]
  41bf80:	mov    DWORD PTR [ecx],ebp
  41bf82:	mov    edi,ebp
  41bf84:	stos   BYTE PTR es:[edi],al
  41bf85:	adc    BYTE PTR [ebx+0x34c02588],dh
  41bf8b:	xchg   DWORD PTR [esi-0x1c56b5a1],ebx
  41bf91:	add    al,0xed
  41bf93:	pop    esp
  41bf94:	xor    ebp,edx
  41bf96:	dec    eax
  41bf97:	mov    ebx,0xe8207d39
  41bf9c:	pop    edx
  41bf9d:	mov    edx,0x958e0365
  41bfa2:	sahf   
  41bfa3:	in     eax,0x6a
  41bfa5:	retf   0x701f
  41bfa8:	mov    esi,0xf4734082
  41bfad:	ds push ds
  41bfaf:	ret    0xbdfc
  41bfb2:	bound  edx,QWORD PTR [edx]
  41bfb4:	mov    dl,0x94
  41bfb6:	enter  0xdfdb,0xaa
  41bfba:	pop    ds
  41bfbb:	(bad)  
  41bfbc:	jns    0x41bf86
  41bfbe:	pop    ss
  41bfbf:	dec    edi
  41bfc0:	arpl   si,bp
  41bfc2:	aas    
  41bfc3:	(bad)  
  41bfc4:	pop    ds
  41bfc5:	mov    edx,0xc4524c09
  41bfca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfcb:	int3   
  41bfcc:	sbb    BYTE PTR [edx*4-0x6a9db60b],dl
  41bfd3:	lds    ebp,FWORD PTR [eax]
  41bfd5:	stos   BYTE PTR es:[edi],al
  41bfd6:	(bad)  
  41bfd7:	mov    al,BYTE PTR [ebp-0x33]
  41bfda:	and    DWORD PTR [esi],edi
  41bfdc:	enter  0x132f,0x2d
  41bfe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfe1:	out    dx,al
  41bfe2:	sub    eax,0x43d25d6a
  41bfe7:	call   0x5ca41d50
  41bfec:	and    eax,ebx
  41bfee:	call   DWORD PTR [esi-0x2094b783]
  41bff4:	mov    ds:0x63bd650c,eax
  41bff9:	sub    al,BYTE PTR [esp+edi*2]
  41bffc:	fisubr DWORD PTR [esi-0x550ff6c5]
  41c002:	mov    al,ds:0x74af038a
  41c007:	mov    BYTE PTR [edx+eax*8-0x59],dh
  41c00b:	sbb    dh,dh
  41c00d:	(bad)  
  41c00f:	jp     0x41bfe9
  41c011:	xor    eax,0xd7d9bb05
  41c016:	bnd jae 0x41c07c
  41c019:	jmp    0x79c58fe5
  41c01e:	mov    ah,0xb7
  41c020:	mov    ?,WORD PTR [esp+edx*2+0xf705bc4]
  41c027:	lds    ebp,FWORD PTR [ecx-0x55]
  41c02a:	jo     0x41c03a
  41c02c:	mov    eax,0x2382e727
  41c031:	sbb    al,0x96
  41c033:	test   eax,0x3f11d044
  41c038:	fidiv  WORD PTR [ebp+0x11101f2f]
  41c03e:	arpl   WORD PTR [edx-0x2b],ax
  41c041:	out    0xec,eax
  41c043:	pop    ds
  41c044:	ins    BYTE PTR es:[edi],dx
  41c045:	rcr    DWORD PTR [edi-0x1189cc5f],0xdc
  41c04c:	sar    ebp,cl
  41c04e:	mov    ebx,0x89e2d9c2
  41c053:	sbb    BYTE PTR [edx+0x37688707],ah
  41c059:	dec    edi
  41c05a:	push   ebp
  41c05b:	popa   
  41c05c:	or     bh,BYTE PTR [ecx-0x6e]
  41c05f:	jmp    0x6df3b00
  41c064:	dec    esi
  41c065:	mov    ebp,0xb44120fe
  41c06a:	loop   0x41c045
  41c06c:	cmp    DWORD PTR es:[ecx-0x5a],eax
  41c070:	push   edx
  41c071:	jb     0x41c05a
  41c073:	or     esp,DWORD PTR [ebx]
  41c075:	mov    DWORD PTR [ecx+0x7171036f],ecx
  41c07b:	sub    BYTE PTR [ebx+0x39f5140d],cl
  41c081:	cld    
  41c082:	jp     0x41c042
  41c084:	clc    
  41c085:	jns    0x41c014
  41c087:	mov    ds:0x3b4a2cf4,eax
  41c08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08d:	mov    al,0xed
  41c08f:	and    BYTE PTR [esi+0x6c5c1059],bh
  41c095:	(bad)  
  41c096:	cs std 
  41c098:	es gs jnp 0x41c031
  41c09c:	mov    DWORD PTR [ebp+0x31],eax
  41c09f:	js     0x41c08b
  41c0a1:	jns    0x41c0ca
  41c0a3:	pop    edi
  41c0a4:	jp     0x41c035
  41c0a6:	mov    bl,0x54
  41c0a8:	stos   BYTE PTR es:[edi],al
  41c0a9:	pop    ss
  41c0aa:	imul   edi,DWORD PTR [edx-0x49ce2b6a],0x3753360
  41c0b4:	jp     0x41c0f4
  41c0b6:	int    0x67
  41c0b8:	rcl    esp,0x97
  41c0bb:	les    ebx,FWORD PTR [ebx-0x50e017a0]
  41c0c1:	dec    eax
  41c0c2:	xor    ebp,DWORD PTR [ebp+0x691f813d]
  41c0c8:	xchg   edx,eax
  41c0c9:	xchg   ebx,eax
  41c0ca:	ins    BYTE PTR es:[edi],dx
  41c0cb:	fist   DWORD PTR [ebp+0x54]
  41c0ce:	add    al,0x62
  41c0d0:	and    esp,ecx
  41c0d2:	pop    ss
  41c0d3:	push   ecx
  41c0d4:	mov    bh,bh
  41c0d6:	push   ds
  41c0d7:	jl     0x41c059
  41c0d9:	push   eax
  41c0da:	dec    esi
  41c0db:	mov    ebx,DWORD PTR [ebx+0x2f293c9e]
  41c0e1:	sbb    dh,al
  41c0e3:	push   es
  41c0e4:	into   
  41c0e5:	sbb    DWORD PTR [ecx+eiz*4-0x68b12aaa],ebp
  41c0ec:	add    DWORD PTR [esi+0xf],ecx
  41c0ef:	arpl   WORD PTR [esi],bx
  41c0f1:	loope  0x41c12f
  41c0f3:	jge    0x41c0d0
  41c0f5:	and    DWORD PTR [edx+0x32],ebp
  41c0f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0f9:	pusha  
  41c0fa:	popf   
  41c0fb:	xor    cl,dl
  41c0fd:	jge    0x41c11b
  41c0ff:	icebp  
  41c100:	or     al,0x60
  41c102:	xor    edx,DWORD PTR [eax]
  41c104:	(bad)
  41c108:	push   ebp
  41c109:	stos   BYTE PTR es:[edi],al
  41c10a:	das    
  41c10b:	cvtpi2ps xmm7,QWORD PTR [esi-0x11]
  41c10f:	push   0x27
  41c111:	scas   al,BYTE PTR es:[edi]
  41c112:	inc    esp
  41c114:	arpl   WORD PTR [eax],sp
  41c116:	sbb    al,0x6a
  41c118:	or     bl,BYTE PTR [edi-0x1]
  41c11b:	hlt    
  41c11c:	int    0xed
  41c11e:	pop    ecx
  41c11f:	add    BYTE PTR [esi],dl
  41c121:	inc    esi
  41c122:	xor    eax,0x73c7dd12
  41c127:	or     BYTE PTR [ecx+ebx*2],ch
  41c12a:	push   edx
  41c12b:	xchg   ecx,eax
  41c12c:	mov    ds:0x90cd0ba0,eax
  41c131:	out    dx,al
  41c132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c133:	out    dx,eax
  41c134:	fucomi st,st(0)
  41c136:	add    eax,0xdbbc10da
  41c13b:	sbb    eax,0x711d0b4f
  41c140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c141:	push   ebp
  41c142:	dec    ecx
  41c143:	mov    eax,0xdecf5408
  41c148:	or     bh,cl
  41c14a:	clc    
  41c14b:	mov    ebx,0x5f9268b7
  41c150:	or     DWORD PTR [ebp+0x72],eax
  41c153:	mov    al,ds:0x5ad15265
  41c158:	push   es
  41c159:	xchg   ecx,eax
  41c15a:	fist   DWORD PTR [edx-0x5445a8af]
  41c160:	mov    ah,0xf3
  41c162:	add    BYTE PTR [edi-0x32c5d81b],ch
  41c168:	ror    DWORD PTR [ebx],1
  41c16a:	sub    edi,DWORD PTR [ecx]
  41c16c:	fcmove st,st(5)
  41c16e:	dec    edx
  41c16f:	test   BYTE PTR [ebp+esi*4+0x29],cl
  41c173:	js     0x41c124
  41c175:	push   eax
  41c176:	mov    eax,ds:0xce6e0bfa
  41c17b:	dec    esi
  41c17c:	adc    eax,0x313cef4c
  41c181:	ret    
  41c182:	sbb    al,0x4f
  41c184:	repnz push eax
  41c186:	dec    edi
  41c187:	psubb  mm2,QWORD PTR [esi-0x2d]
  41c18b:	shr    BYTE PTR [ecx],0x7b
  41c18e:	fadd   QWORD PTR [ecx+0x72]
  41c191:	add    al,0xd4
  41c193:	into   
  41c194:	out    dx,al
  41c195:	fst    QWORD PTR [ebx+ebp*4+0x5d30917c]
  41c19c:	push   esp
  41c19d:	aaa    
  41c19e:	cmp    eax,0x128442fd
  41c1a3:	inc    eax
  41c1a4:	out    0x61,al
  41c1a6:	sar    dl,0xbb
  41c1a9:	dec    esi
  41c1aa:	sbb    dh,BYTE PTR [ecx-0x58]
  41c1ad:	dec    ebx
  41c1ae:	or     eax,DWORD PTR [ebx]
  41c1b0:	ds dec eax
  41c1b2:	and    al,0x3a
  41c1b4:	jae    0x41c1f6
  41c1b6:	pop    es
  41c1b7:	nop
  41c1b8:	call   0xa18b:0xcfc5b890
  41c1bf:	int3   
  41c1c0:	enter  0x8cdc,0xd0
  41c1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c5:	pop    eax
  41c1c6:	loopne 0x41c1d4
  41c1c8:	adc    eax,0xeb1dd3dd
  41c1cd:	fst    DWORD PTR [eax]
  41c1cf:	pop    edi
  41c1d0:	loopne 0x41c17b
  41c1d2:	cli    
  41c1d3:	pop    esi
  41c1d4:	pop    esi
  41c1d5:	outs   dx,DWORD PTR ds:[esi]
  41c1d6:	call   0xf7d6:0xb5bd208a
  41c1dd:	test   BYTE PTR [edi],dh
  41c1df:	(bad)  
  41c1e0:	das    
  41c1e1:	(bad)
  41c1e5:	test   DWORD PTR [eax],ebp
  41c1e7:	mov    eax,0x21fc8903
  41c1ec:	jo     0x41c21a
  41c1ee:	mov    ebx,0x45f887c8
  41c1f3:	mov    DWORD PTR [ebp+ecx*2-0x64b5d7b0],edx
  41c1fa:	loope  0x41c1d4
  41c1fc:	inc    esp
  41c1fd:	inc    esi
  41c1fe:	cmp    eax,0xa780303c
  41c203:	cmp    BYTE PTR [esi+0x3793babb],ah
  41c209:	sbb    eax,DWORD PTR [edx+0x24]
  41c20c:	inc    edx
  41c20d:	imul   eax,DWORD PTR [eax-0x2b4fb84d],0x23
  41c214:	push   esp
  41c215:	int    0x10
  41c217:	int3   
  41c218:	repz imul ebp,DWORD PTR [ecx+edx*2],0xc0ce1e9b
  41c220:	jo     0x41c1d5
  41c222:	daa    
  41c223:	or     ebp,DWORD PTR [ebx+0x408ade63]
  41c229:	sbb    eax,0xbbe4deb6
  41c22e:	int    0x59
  41c230:	test   al,0x3e
  41c232:	pop    ebp
  41c233:	sahf   
  41c234:	xchg   esp,eax
  41c235:	xor    al,0x41
  41c237:	scas   al,BYTE PTR es:[edi]
  41c238:	and    eax,0x39357e65
  41c23d:	jmp    0x41c22a
  41c23f:	cmp    ecx,DWORD PTR [edx-0x5da2bc1c]
  41c245:	lock loopne 0x41c294
  41c248:	gs cld 
  41c24a:	cwde   
  41c24b:	add    edx,DWORD PTR [esp+ecx*1]
  41c24e:	inc    edi
  41c24f:	inc    eax
  41c250:	nop
  41c251:	mov    edi,0x9c2ea45d
  41c256:	or     al,0x4b
  41c258:	or     dh,ah
  41c25a:	mov    cl,BYTE PTR [ecx+esi*2]
  41c25d:	fcom   QWORD PTR [ecx+0x547c567d]
  41c263:	test   DWORD PTR [edx-0x284d04b2],0x35460cd4
  41c26d:	add    al,0x61
  41c26f:	sbb    al,0xb0
  41c271:	xor    DWORD PTR [esp+0x4f],0xfffffff7
  41c276:	inc    esp
  41c277:	ret    0xf153
  41c27a:	fisttp QWORD PTR [ecx+0x5cbe46fd]
  41c280:	dec    ebp
  41c281:	std    
  41c282:	arpl   WORD PTR [ebp-0x72],cx
  41c285:	arpl   WORD PTR [esi+0x5d],ax
  41c288:	pop    ebx
  41c289:	(bad)  
  41c28a:	or     esi,DWORD PTR [ecx]
  41c28c:	(bad)  
  41c28d:	xchg   edx,eax
  41c28e:	inc    edi
  41c28f:	push   ebx
  41c290:	not    BYTE PTR [ebx]
  41c292:	or     dh,cl
  41c294:	cmp    DWORD PTR [ecx+0x33],edi
  41c297:	mov    ch,BYTE PTR [edx+0x11]
  41c29a:	adc    cl,BYTE PTR [ecx+0xb0159bb]
  41c2a0:	sbb    ebx,ecx
  41c2a2:	lods   al,BYTE PTR ds:[esi]
  41c2a3:	jmp    0x41c30c
  41c2a5:	dec    ebx
  41c2a6:	addr16 clc 
  41c2a8:	jp     0x41c324
  41c2aa:	popf   
  41c2ab:	(bad)  
  41c2ac:	int3   
  41c2ad:	fwait
  41c2ae:	ins    DWORD PTR es:[edi],dx
  41c2af:	and    ch,BYTE PTR [edi+eiz*1-0x20]
  41c2b3:	mov    eax,ds:0x3b0ec375
  41c2b8:	mov    al,0x42
  41c2ba:	sar    BYTE PTR [ebx],1
  41c2bc:	ret    0xc863
  41c2bf:	push   eax
  41c2c0:	pop    ss
  41c2c1:	jl     0x41c2ec
  41c2c3:	les    esi,FWORD PTR [ecx]
  41c2c5:	mov    dh,BYTE PTR [ebx-0x3b935760]
  41c2cb:	dec    ebx
  41c2cc:	mov    esi,DWORD PTR [ebx+0x50a26387]
  41c2d2:	adc    cl,BYTE PTR [esp+ecx*1-0x19]
  41c2d6:	push   ebp
  41c2d7:	ret    0xf568
  41c2da:	sar    BYTE PTR [ebp-0x62f63cb4],cl
  41c2e0:	add    eax,0x8456e491
  41c2e5:	outs   dx,BYTE PTR ds:[esi]
  41c2e6:	cld    
  41c2e7:	push   cs
  41c2e8:	jbe    0x41c270
  41c2ea:	push   cs
  41c2eb:	aam    0x27
  41c2ed:	cmp    ch,dl
  41c2ef:	mov    edx,0x302c2632
  41c2f4:	adc    esp,DWORD PTR [ebp-0x30f87528]
  41c2fa:	ss loop 0x41c2dd
  41c2fd:	xchg   ecx,eax
  41c2fe:	fdiv   st,st(1)
  41c300:	pop    es
  41c301:	xchg   DWORD PTR [edi],esi
  41c303:	pop    es
  41c304:	ror    DWORD PTR [ecx],1
  41c306:	fnstsw WORD PTR [edx+0x65210c31]
  41c30c:	sbb    eax,0x590dba28
  41c311:	pop    eax
  41c312:	(bad)  
  41c314:	inc    eax
  41c315:	pop    edx
  41c316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c317:	popf   
  41c318:	push   eax
  41c319:	mov    edx,0xfbbf7c2b
  41c31e:	sbb    edi,eax
  41c320:	ret    0xdffb
  41c323:	sahf   
  41c324:	pop    esi
  41c325:	scas   eax,DWORD PTR es:[edi]
  41c326:	and    ebp,DWORD PTR [edi-0x3f32248d]
  41c32c:	in     eax,0x69
  41c32e:	test   ch,dl
  41c330:	shr    BYTE PTR [esi],0xd1
  41c333:	out    0xd5,eax
  41c335:	idiv   BYTE PTR [ecx]
  41c337:	pop    ds
  41c338:	out    0x43,eax
  41c33a:	retf   0xf50d
  41c33d:	retf   0x9cd4
  41c340:	cmc    
  41c341:	inc    esp
  41c342:	inc    esp
  41c344:	pushf  
  41c345:	mov    ah,0xf1
  41c347:	sbb    eax,0x4fb9f0f6
  41c34c:	cwde   
  41c34d:	ret    0xefd2
  41c350:	push   DWORD PTR [ebx+0x3f]
  41c353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c354:	in     al,dx
  41c355:	daa    
  41c356:	mov    edi,DWORD PTR [ebx]
  41c358:	cmp    al,0x31
  41c35a:	adc    BYTE PTR [edx+0x5b6f04ef],ah
  41c360:	aam    0xa8
  41c362:	and    al,BYTE PTR [ecx+0x37]
  41c365:	inc    esp
  41c366:	xchg   esp,eax
  41c367:	in     eax,0xb
  41c369:	pop    ebx
  41c36a:	dec    edx
  41c36b:	jno    0x41c396
  41c36d:	adc    eax,0x774ed6ff
  41c372:	mov    edi,0x1eac7fd2
  41c377:	inc    edi
  41c378:	out    dx,eax
  41c379:	and    eax,0x9a5a7ef2
  41c37e:	mul    ecx
  41c380:	xor    al,0x9c
  41c382:	mov    ebp,0xaa4628b2
  41c387:	pop    esp
  41c388:	pop    DWORD PTR [ecx]
  41c38a:	mov    DWORD PTR [edx-0x51fa4007],eax
  41c390:	mov    ch,dl
  41c392:	(bad)  
  41c393:	(bad)  
  41c394:	cmp    eax,0x490ffb84
  41c399:	mov    edi,0xc924e945
  41c39e:	pop    eax
  41c39f:	xchg   esp,eax
  41c3a0:	in     eax,0x5a
  41c3a2:	icebp  
  41c3a3:	mov    edi,eax
  41c3a5:	retf   0x8858
  41c3a8:	fisubr WORD PTR [edx]
  41c3aa:	fnsave [esi]
  41c3ac:	into   
  41c3ad:	jne    0x41c425
  41c3af:	or     dh,BYTE PTR [edx]
  41c3b1:	pop    edi
  41c3b2:	pop    ecx
  41c3b3:	pop    ss
  41c3b4:	pop    esi
  41c3b5:	sbb    BYTE PTR [ebx],al
  41c3b7:	sub    eax,0xb74d395b
  41c3bc:	js     0x41c3d5
  41c3be:	fst    QWORD PTR [edi]
  41c3c0:	pop    esi
  41c3c1:	fimul  WORD PTR [eax+esi*4-0x4e785619]
  41c3c8:	in     eax,dx
  41c3c9:	xchg   esi,eax
  41c3ca:	loopne 0x41c363
  41c3cc:	(bad)  [edx]
  41c3ce:	lods   al,BYTE PTR ds:[esi]
  41c3cf:	adc    DWORD PTR [edi-0x1aad3e3a],ecx
  41c3d5:	add    eax,0xd5520e9
  41c3da:	js     0x41c43e
  41c3dc:	xor    dl,BYTE PTR [eax+0x66a7e50]
  41c3e2:	sbb    edi,esp
  41c3e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3e5:	test   esp,esp
  41c3e7:	cmp    ch,BYTE PTR [eax+0x16]
  41c3ea:	mov    eax,0x539c5ce6
  41c3ef:	inc    edx
  41c3f0:	dec    ecx
  41c3f1:	(bad)  
  41c3f2:	jbe    0x41c448
  41c3f4:	cmc    
  41c3f5:	test   DWORD PTR [esi+0x31da2e36],eax
  41c3fb:	jmp    0xee07:0x1cea6847
  41c402:	push   ecx
  41c403:	pop    esp
  41c404:	jae    0x41c38e
  41c406:	mov    dl,0xe7
  41c408:	in     al,dx
  41c409:	or     al,0x14
  41c40b:	add    eax,0x4d300973
  41c410:	(bad)  
  41c412:	loopne 0x41c3e2
  41c414:	fwait
  41c415:	mov    edx,0xde30b64e
  41c41a:	mov    ebx,0x73514395
  41c41f:	xchg   BYTE PTR [eax+0x2d],ch
  41c422:	xchg   DWORD PTR [edi+0x1e],ebx
  41c425:	out    0xca,al
  41c427:	push   ds
  41c428:	pop    ds
  41c429:	sub    edx,DWORD PTR [ecx+edi*2-0x61]
  41c42d:	stc    
  41c42e:	enter  0x8b5a,0x72
  41c432:	cld    
  41c433:	ins    BYTE PTR es:[edi],dx
  41c434:	add    BYTE PTR [esi],dh
  41c436:	call   0x1674:0x262d62c1
  41c43d:	xchg   esp,eax
  41c43e:	(bad)  
  41c43f:	outs   dx,DWORD PTR ds:[esi]
  41c440:	into   
  41c441:	mov    ecx,0xf4175f84
  41c446:	das    
  41c447:	jne    0x41c3e6
  41c449:	pusha  
  41c44a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c44b:	push   eax
  41c44c:	mov    bh,0x27
  41c44e:	jns    0x41c447
  41c450:	test   al,0x8d
  41c452:	or     DWORD PTR [edi+0x45],ebp
  41c455:	sar    BYTE PTR [eax-0x2a],0x3d
  41c459:	int3   
  41c45a:	mov    ?,WORD PTR [eax+0x1c]
  41c45d:	cs inc esi
  41c45f:	repnz lea ebp,[ecx]
  41c462:	xchg   DWORD PTR [ebp+0x6a],ebp
  41c465:	les    edx,FWORD PTR [ecx-0x14]
  41c468:	daa    
  41c469:	dec    edi
  41c46a:	(bad)  
  41c46b:	jmp    0x6484:0x9348f58d
  41c472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c473:	imul   eax,DWORD PTR [esi+0x21],0xfcdf8ff5
  41c47a:	sar    dh,1
  41c47c:	cmp    DWORD PTR [esi-0x2],esp
  41c47f:	int3   
  41c480:	pop    ebp
  41c481:	push   0xdc11ebf4
  41c486:	xor    bl,BYTE PTR [edx+0x20]
  41c489:	push   esp
  41c48a:	fstp   QWORD PTR [ebx]
  41c48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c48e:	aaa    
  41c48f:	xchg   ebx,eax
  41c490:	xchg   edi,eax
  41c491:	sub    bh,BYTE PTR [esi-0x23159ca4]
  41c497:	les    ebx,FWORD PTR [edi+ecx*1+0x7f]
  41c49b:	in     eax,dx
  41c49c:	stos   BYTE PTR es:[edi],al
  41c49d:	add    DWORD PTR [eax-0x15f24d9e],esp
  41c4a3:	lea    edi,[eax+0x5f]
  41c4a6:	jbe    0x41c4d9
  41c4a8:	das    
  41c4a9:	lods   eax,DWORD PTR ds:[esi]
  41c4aa:	lds    ebp,FWORD PTR [ebx-0x7b]
  41c4ad:	je     0x41c45e
  41c4af:	retf   0xf5af
  41c4b2:	xchg   esi,eax
  41c4b3:	dec    esi
  41c4b4:	push   eax
  41c4b5:	xor    eax,0xa88e5ccb
  41c4ba:	pop    edi
  41c4bb:	retf   0xc21c
  41c4be:	add    eax,DWORD PTR [edi+0x1e]
  41c4c1:	stos   DWORD PTR es:[edi],eax
  41c4c2:	in     al,dx
  41c4c3:	adc    bl,BYTE PTR [esi+eiz*2]
  41c4c6:	cmp    ah,al
  41c4c8:	and    al,0xf7
  41c4ca:	or     DWORD PTR [ebp+0x578e1607],0x18
  41c4d1:	mov    bl,0x32
  41c4d3:	js     0x41c47f
  41c4d5:	dec    eax
  41c4d6:	xchg   esp,eax
  41c4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d8:	sbb    al,0xa2
  41c4da:	fld    st(4)
  41c4dc:	dec    ecx
  41c4dd:	into   
  41c4de:	in     eax,dx
  41c4df:	push   cs
  41c4e0:	adc    eax,DWORD PTR [eax]
  41c4e2:	in     eax,0x5
  41c4e4:	arpl   WORD PTR [edi-0x62fbd286],dx
  41c4ea:	(bad)  [esi*8-0x369d908a]
  41c4f1:	push   ecx
  41c4f2:	jb     0x41c48e
  41c4f4:	lahf   
  41c4f5:	push   ds
  41c4f6:	jge    0x41c4bc
  41c4f8:	mov    ch,0x80
  41c4fa:	jg     0x41c4e7
  41c4fc:	push   edi
  41c4fd:	sub    BYTE PTR [esi],0x6
  41c500:	inc    ebp
  41c501:	sub    cl,BYTE PTR [ebx+0x35]
  41c504:	fcomp  QWORD PTR [eax+0x7a]
  41c507:	ret    0x3dba
  41c50a:	adc    dl,bh
  41c50c:	js     0x41c499
  41c50e:	sub    al,0x26
  41c510:	aad    0x72
  41c512:	adc    al,0x89
  41c514:	and    BYTE PTR [ecx+0x71],dh
  41c517:	sub    eax,ebx
  41c519:	repnz into 
  41c51b:	push   ecx
  41c51c:	pop    eax
  41c51d:	adc    eax,0x775a71cb
  41c522:	dec    BYTE PTR [edx]
  41c524:	pop    edx
  41c525:	into   
  41c526:	mov    DWORD PTR [eax+0x1f],ebp
  41c529:	fisttp DWORD PTR [esi]
  41c52b:	pop    esi
  41c52c:	outs   dx,DWORD PTR ds:[esi]
  41c52d:	adc    ebp,DWORD PTR [edx-0xa92d8e2]
  41c533:	adc    WORD PTR [edi],bx
  41c536:	jbe    0x41c502
  41c538:	test   BYTE PTR [ebx+eiz*2+0x1341a835],ch
  41c53f:	test   BYTE PTR [eax-0x5b3f404a],bl
  41c545:	cld    
  41c546:	sub    eax,0xa207aa6
  41c54b:	sbb    al,BYTE PTR [edi-0x71ea6ae1]
  41c551:	ja     0x41c515
  41c553:	or     edi,DWORD PTR fs:[ebx-0x74]
  41c557:	or     ch,BYTE PTR [ebx+0x2027c5a1]
  41c55d:	call   FWORD PTR [eax+0xf428135]
  41c563:	sbb    bl,bh
  41c565:	or     eax,0xb2b2ff80
  41c56a:	hlt    
  41c56b:	sub    esp,DWORD PTR [ecx-0x4e]
  41c56e:	loopne 0x41c510
  41c570:	ja     0x41c573
  41c572:	add    eax,0xef9275
  41c577:	adc    BYTE PTR [ebx],ch
  41c579:	fstp   DWORD PTR ds:0x935b291a
  41c57f:	in     eax,dx
  41c580:	mov    dl,BYTE PTR [edi+ecx*1]
  41c583:	sbb    al,0x28
  41c585:	popf   
  41c586:	mov    dl,0xba
  41c588:	adc    eax,0xee885782
  41c58d:	fidiv  WORD PTR cs:[ebx]
  41c590:	push   eax
  41c591:	mov    cl,0x27
  41c593:	pop    edi
  41c594:	hlt    
  41c595:	xlat   BYTE PTR ds:[ebx]
  41c596:	shr    DWORD PTR es:[edi-0x36f56c9a],cl
  41c59d:	out    dx,eax
  41c59e:	push   eax
  41c59f:	ds fwait
  41c5a1:	or     esp,DWORD PTR [eax]
  41c5a3:	sbb    ecx,edx
  41c5a5:	(bad)  
  41c5a6:	pcmpgtd mm3,QWORD PTR [ebp+edi*2+0xb59578c]
  41c5ae:	es inc edx
  41c5b0:	fnstcw WORD PTR [edx+esi*1+0x5ce3b39c]
  41c5b7:	js     0x41c5ce
  41c5b9:	add    al,0xe0
  41c5bb:	add    al,0xff
  41c5bd:	push   edi
  41c5be:	dec    ebp
  41c5bf:	push   0x52
  41c5c1:	sub    esi,DWORD PTR [eax+0x2635dc0a]
  41c5c7:	ret    0xc4b8
  41c5ca:	mov    cl,0x4a
  41c5cc:	in     al,0xdc
  41c5ce:	jl     0x41c5b3
  41c5d0:	pop    edx
  41c5d1:	inc    ebp
  41c5d2:	mov    edi,0xd4406076
  41c5d7:	pslld  mm2,mm4
  41c5da:	pop    es
  41c5db:	xor    DWORD PTR [eax],edx
  41c5dd:	jbe    0x41c5a2
  41c5df:	repnz fild DWORD PTR [edx+0x2d622b4b]
  41c5e6:	mov    eax,0x9d9b7fec
  41c5eb:	arpl   bx,sp
  41c5ed:	pop    eax
  41c5ee:	into   
  41c5ef:	and    ah,bh
  41c5f1:	aad    0x5a
  41c5f3:	pusha  
  41c5f4:	repz repz or al,0xd
  41c5f8:	aam    0x48
  41c5fa:	stc    
  41c5fb:	call   0x3e7b:0xfd3634e
  41c602:	enter  0x858e,0xba
  41c606:	jno    0x41c60f
  41c608:	mov    al,0x25
  41c60a:	push   eax
  41c60b:	(bad)  
  41c60c:	loopne 0x41c5b4
  41c60e:	jg     0x41c63e
  41c610:	add    edx,ebp
  41c612:	sub    al,0xd4
  41c614:	sbb    dl,BYTE PTR [edi+0x2]
  41c617:	pop    ss
  41c618:	(bad)  
  41c619:	push   0x20
  41c61b:	ret    0x1eb8
  41c61e:	mov    edi,0x7e38b8a8
  41c623:	pop    esi
  41c624:	inc    edi
  41c625:	push   DWORD PTR [ebp+0x17b20379]
  41c62b:	inc    ecx
  41c62c:	dec    esp
  41c62d:	jge    0x41c6a0
  41c62f:	xchg   ebx,eax
  41c630:	ins    BYTE PTR es:[edi],dx
  41c631:	xor    eax,0xcc923f41
  41c636:	aam    0x90
  41c638:	ins    BYTE PTR es:[edi],dx
  41c639:	and    eax,0xf95b1c30
  41c63e:	test   bl,al
  41c640:	sub    BYTE PTR [edi-0x7e0c687e],0xfa
  41c647:	mov    dh,0x2c
  41c649:	js     0x41c68f
  41c64b:	sub    eax,0x4c4b0d9b
  41c650:	(bad)  
  41c651:	in     al,dx
  41c652:	inc    edi
  41c653:	fs xor ebx,ecx
  41c656:	xchg   ebp,eax
  41c657:	pusha  
  41c658:	std    
  41c659:	mov    eax,DWORD PTR [ecx+eiz*8+0x6cc3fba9]
  41c660:	add    DWORD PTR [edi+0x64],ebp
  41c663:	test   BYTE PTR [edx-0x58a71630],cl
  41c669:	(bad)  
  41c66a:	mov    bl,0xbe
  41c66c:	fisttp WORD PTR [edi-0x57]
  41c66f:	addr16 iret 
  41c671:	outs   dx,BYTE PTR ds:[esi]
  41c672:	stc    
  41c673:	dec    ebp
  41c674:	pop    ebx
  41c675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c676:	jmp    0x41c6f7
  41c678:	push   esp
  41c679:	cmp    BYTE PTR [edi-0x1b],bl
  41c67c:	sti    
  41c67d:	mov    dh,0xb5
  41c67f:	xchg   BYTE PTR [edx-0x11],dl
  41c682:	mov    edx,0x88e6c3f4
  41c687:	mov    ebp,0x6cd39d3e
  41c68c:	repz shl eax,cl
  41c68f:	stos   BYTE PTR es:[edi],al
  41c690:	cmp    ecx,edx
  41c692:	enter  0x992,0xe5
  41c696:	imul   ecx,DWORD PTR [esp+ebx*2],0x3d34232
  41c69d:	mov    esi,0xe0642448
  41c6a2:	lds    eax,FWORD PTR [ebx+0x4a]
  41c6a5:	mov    ebx,0x6eefa49b
  41c6aa:	loop   0x41c691
  41c6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6ad:	mov    ebp,0x556435dc
  41c6b2:	or     BYTE PTR [edx],dh
  41c6b4:	push   es
  41c6b5:	ins    DWORD PTR es:[edi],dx
  41c6b6:	pop    esi
  41c6b7:	and    al,BYTE PTR [edi-0x60]
  41c6ba:	ror    DWORD PTR [edi+0x599bcc25],1
  41c6c0:	stos   BYTE PTR es:[edi],al
  41c6c1:	add    al,0x41
  41c6c3:	pop    es
  41c6c4:	retf   0x6e51
  41c6c7:	or     BYTE PTR [ebp-0x7d],0x56
  41c6cb:	shr    DWORD PTR [ebx-0x6a],cl
  41c6ce:	(bad)  
  41c6cf:	imul   edi,DWORD PTR [esi-0x4e1de0e9],0xfffffffa
  41c6d6:	push   ds
  41c6d7:	les    ebx,FWORD PTR [edi+esi*8]
  41c6da:	cmp    al,0x12
  41c6dc:	add    cl,cl
  41c6de:	retf   
  41c6df:	clc    
  41c6e0:	div    BYTE PTR [edx]
  41c6e2:	cmp    BYTE PTR [ebx-0x46],dh
  41c6e5:	fwait
  41c6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6e7:	add    eax,0x96962fa6
  41c6ec:	(bad)  
  41c6ed:	in     ax,dx
  41c6ef:	and    edi,0x29
  41c6f2:	rcl    DWORD PTR [eax],cl
  41c6f4:	retf   
  41c6f5:	sub    BYTE PTR [edx],0x8a
  41c6f8:	lods   al,BYTE PTR ds:[esi]
  41c6f9:	dec    ebx
  41c6fa:	adc    dh,cl
  41c6fc:	fsubr  DWORD PTR [ecx+0x11dbf6e8]
  41c702:	lahf   
  41c703:	or     DWORD PTR [edx],eax
  41c705:	test   DWORD PTR [ecx],esp
  41c707:	ins    BYTE PTR es:[edi],dx
  41c708:	xor    al,0x67
  41c70a:	ins    DWORD PTR es:[edi],dx
  41c70b:	fsub   QWORD PTR [ebx]
  41c70d:	daa    
  41c70e:	or     BYTE PTR [esp+edi*1+0x33058152],0x1b
  41c716:	mov    al,ds:0x377ab512
  41c71b:	bound  ebp,QWORD PTR [ebx]
  41c71d:	jmp    0x41c720
  41c71f:	mov    bl,0x93
  41c721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c722:	inc    eax
  41c723:	hlt    
  41c724:	ss aaa 
  41c726:	pop    esi
  41c727:	sbb    esp,DWORD PTR ds:0xb58b39bb
  41c72d:	mov    BYTE PTR [edx+0x9],dl
  41c730:	(bad)  
  41c731:	in     eax,dx
  41c732:	adc    al,0x84
  41c734:	and    BYTE PTR [edx-0x1df430e6],dl
  41c73a:	mov    ds:0xa80818f7,eax
  41c73f:	in     eax,dx
  41c740:	xchg   ebp,eax
  41c741:	test   al,0xd5
  41c743:	cs (bad) 
  41c745:	or     DWORD PTR [edi-0x72],edi
  41c748:	mov    WORD PTR ds:0x7e89ca2b,ss
  41c74e:	cwde   
  41c74f:	jno    0x41c78c
  41c751:	leave  
  41c752:	xchg   ecx,eax
  41c753:	mov    cl,0xaa
  41c755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c756:	cs dec esp
  41c758:	call   0x926fc4b2
  41c75d:	out    dx,eax
  41c75e:	stos   BYTE PTR es:[edi],al
  41c75f:	add    eax,esp
  41c761:	fmul   st(0),st
  41c763:	ss in  eax,dx
  41c765:	dec    ebx
  41c766:	or     DWORD PTR [ecx+0x46194e2],esi
  41c76c:	les    ecx,FWORD PTR [eax]
  41c76e:	fstp   st(2)
  41c770:	adc    BYTE PTR [ebx-0x6a],ch
  41c773:	clc    
  41c774:	arpl   WORD PTR ds:0x942f96ab,si
  41c77a:	mov    DWORD PTR [ebp+0x44],esi
  41c77d:	add    eax,0xdaeae421
  41c782:	dec    esp
  41c783:	(bad)  
  41c784:	dec    eax
  41c785:	scas   eax,DWORD PTR es:[edi]
  41c786:	aas    
  41c787:	cmp    cl,dl
  41c789:	imul   ebp,DWORD PTR [eax+0x6b4a35d],0xffffffe2
  41c790:	push   cs
  41c791:	ins    DWORD PTR es:[di],dx
  41c793:	mov    edi,0xe4760759
  41c798:	cmp    cl,dh
  41c79a:	mov    ah,0xdf
  41c79c:	mov    esi,0x97d2eb12
  41c7a1:	test   al,0xb1
  41c7a3:	cwde   
  41c7a4:	cli    
  41c7a5:	xor    DWORD PTR [esi-0x604cd42],esi
  41c7ab:	lods   al,BYTE PTR ds:[esi]
  41c7ac:	dec    BYTE PTR [eax]
  41c7ae:	popa   
  41c7af:	jnp    0x41c7fc
  41c7b1:	(bad)  
  41c7b2:	outs   dx,BYTE PTR ds:[esi]
  41c7b3:	aas    
  41c7b4:	add    dl,BYTE PTR [ebp-0x551b7326]
  41c7ba:	sbb    BYTE PTR [ebp+0x5d99f4b5],dh
  41c7c0:	cwde   
  41c7c1:	jo     0x41c822
  41c7c3:	loope  0x41c75f
  41c7c5:	loop   0x41c821
  41c7c7:	inc    esp
  41c7c8:	adc    BYTE PTR [eax+0x5],0x7f
  41c7cc:	hlt    
  41c7cd:	retf   
  41c7ce:	js     0x41c7ca
  41c7d0:	repz neg BYTE PTR [ebp-0x63773d30]
  41c7d7:	sub    al,bh
  41c7d9:	fcomi  st,st(4)
  41c7db:	in     al,0xda
  41c7dd:	arpl   WORD PTR ss:[edx+0x68],bx
  41c7e1:	dec    ebp
  41c7e2:	xchg   ebp,eax
  41c7e3:	sti    
  41c7e4:	shr    BYTE PTR [ebx-0x23561189],1
  41c7ea:	dec    esi
  41c7eb:	mov    ds:0xd82f1d11,al
  41c7f0:	movntps XMMWORD PTR [ecx+0x48fb755f],xmm5
  41c7f7:	imul   esp,DWORD PTR [ecx],0x6
  41c7fa:	push   edx
  41c7fb:	xchg   esp,eax
  41c7fc:	jl     0x41c794
  41c7fe:	frstor [esi]
  41c800:	enter  0xdc41,0x82
  41c804:	mov    WORD PTR [edx-0x210b1e24],ss
  41c80a:	ret    0x393e
  41c80d:	cli    
  41c80e:	jle    0x41c86d
  41c810:	sub    eax,0x6238132e
  41c815:	daa    
  41c816:	sub    eax,DWORD PTR [ebp-0x2675fbf9]
  41c81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c81d:	cwde   
  41c81e:	mov    ds:0xeffd8314,eax
  41c823:	lea    edi,[ebx]
  41c825:	pop    es
  41c826:	add    ch,BYTE PTR [ebx+eiz*1]
  41c829:	shr    bh,0x45
  41c82c:	adc    bh,BYTE PTR [edi+0x11]
  41c82f:	mov    al,al
  41c831:	fsub   DWORD PTR [ecx]
  41c833:	jbe    0x41c7e4
  41c835:	std    
  41c836:	imul   ebx,esp,0xffffffe5
  41c839:	adc    al,0xd1
  41c83b:	lds    edx,FWORD PTR [ebx-0x75]
  41c83e:	fwait
  41c83f:	push   es
  41c840:	stc    
  41c841:	enter  0x282c,0x6b
  41c845:	arpl   WORD PTR [eax-0x37e0fe30],ax
  41c84b:	mov    ecx,0x189c4057
  41c850:	mov    al,0x85
  41c852:	imul   esi,DWORD PTR [ebp+0xf18ea12],0xffffff8a
  41c859:	popa   
  41c85a:	iret   
  41c85b:	lea    esi,[ebp+0x7c8bd41a]
  41c861:	or     cl,BYTE PTR [ebp+0x3b685c9e]
  41c867:	pushf  
  41c868:	test   ebx,0x92a9993f
  41c86e:	sub    DWORD PTR [esi+0x41796a0a],eax
  41c874:	mov    es,WORD PTR ds:0x13fa4790
  41c87a:	jmp    0x5be6af32
  41c87f:	int3   
  41c880:	pop    ecx
  41c881:	test   DWORD PTR [edi-0xb],esp
  41c884:	shr    BYTE PTR [edi+eax*4-0xfdcf336],cl
  41c88b:	inc    ebp
  41c88c:	lahf   
  41c88d:	loope  0x41c8e0
  41c88f:	sti    
  41c890:	push   ebx
  41c891:	adc    bh,ch
  41c893:	pop    DWORD PTR [ecx+eax*2-0x76a55a74]
  41c89a:	nop
  41c89b:	jb     0x41c8dd
  41c89d:	sub    al,BYTE PTR [ecx]
  41c89f:	mov    eax,0x6ff71451
  41c8a4:	sbb    DWORD PTR ds:[edx+0x3cf8a217],esi
  41c8ab:	or     ebp,DWORD PTR es:[edx+0x3f]
  41c8af:	outs   dx,BYTE PTR ds:[esi]
  41c8b0:	xor    al,0xf0
  41c8b2:	dec    esi
  41c8b3:	(bad)  
  41c8b4:	aam    0xf5
  41c8b6:	(bad)  
  41c8b7:	dec    ebp
  41c8b8:	pop    ebx
  41c8b9:	inc    esi
  41c8ba:	jne    0x41c83c
  41c8bc:	ss inc ebx
  41c8be:	pusha  
  41c8bf:	pop    edx
  41c8c0:	pop    es
  41c8c1:	cmc    
  41c8c2:	mov    ebx,0x799a2d4d
  41c8c7:	jno    0x4df26dfd
  41c8cd:	daa    
  41c8ce:	adc    BYTE PTR [edx],dh
  41c8d0:	shl    cl,cl
  41c8d2:	mov    cl,0x58
  41c8d4:	lds    ebp,FWORD PTR [eax+0x2ba637da]
  41c8da:	cmp    al,0x78
  41c8dc:	jle    0x41c8a2
  41c8de:	cli    
  41c8df:	sar    BYTE PTR [ebx],cl
  41c8e1:	dec    ebx
  41c8e2:	lock dec ebp
  41c8e4:	push   esi
  41c8e5:	outs   dx,BYTE PTR ds:[esi]
  41c8e6:	xor    dl,BYTE PTR [edx+0x5aa39a8b]
  41c8ec:	ret    0xc66c
  41c8ef:	into   
  41c8f0:	inc    ebp
  41c8f1:	sub    bh,BYTE PTR [edi]
  41c8f3:	xor    BYTE PTR [ebx-0x9fd802e],bl
  41c8f9:	fnsave [edx-0x2d]
  41c8fc:	pusha  
  41c8fd:	ret    
  41c8fe:	push   ebx
  41c8ff:	add    al,0x19
  41c901:	sahf   
  41c902:	adc    eax,0xe1359de8
  41c907:	scas   eax,DWORD PTR es:[edi]
  41c908:	fcomp  DWORD PTR [ebx+0x6f5cf3e2]
  41c90e:	pop    ebp
  41c90f:	popf   
  41c910:	pop    es
  41c911:	sahf   
  41c912:	push   ss
  41c913:	das    
  41c914:	fild   DWORD PTR ds:0xf609851
  41c91a:	fld    TBYTE PTR [edx]
  41c91c:	les    edi,FWORD PTR [edi-0xa]
  41c91f:	pop    esp
  41c920:	ss hlt 
  41c922:	xchg   DWORD PTR [esi+0x279a2114],ebx
  41c928:	mov    eax,ds:0xe503a610
  41c92d:	mov    edi,0x1e265f1c
  41c932:	sub    esi,DWORD PTR [ebp-0x5b]
  41c935:	push   edx
  41c936:	or     al,ch
  41c938:	pop    es
  41c939:	js     0x41c90f
  41c93b:	add    DWORD PTR [ecx+0x4a9ae4be],edi
  41c941:	push   edx
  41c942:	hlt    
  41c943:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c945:	dec    ecx
  41c946:	daa    
  41c947:	(bad)  
  41c948:	(bad)  
  41c949:	pop    ds
  41c94a:	sahf   
  41c94b:	pop    ss
  41c94c:	les    ebx,FWORD PTR [eax-0x5fdc7850]
  41c952:	add    bh,BYTE PTR [eax-0x30]
  41c955:	push   ecx
  41c956:	jge    0x41c950
  41c958:	or     edi,edi
  41c95a:	add    eax,0xf9bdf609
  41c95f:	pop    edx
  41c960:	mov    esp,0x75134f57
  41c965:	add    BYTE PTR [ebx+eiz*8],bl
  41c968:	fcom   QWORD PTR [ecx+0x2eec79b2]
  41c96e:	xor    DWORD PTR [esi-0x73],eax
  41c971:	(bad)  
  41c972:	inc    esp
  41c973:	mov    dl,0x8
  41c975:	pop    esi
  41c976:	in     eax,dx
  41c977:	aas    
  41c978:	(bad)  
  41c979:	and    BYTE PTR [ebx+edi*4-0x6c],0xcd
  41c97e:	adc    al,0x86
  41c980:	fwait
  41c981:	pop    ecx
  41c982:	pextrw esi,mm5,0xc3
  41c986:	sbb    edi,DWORD PTR [esi+ecx*4]
  41c989:	or     esp,DWORD PTR [edi-0x434d656f]
  41c98f:	inc    edi
  41c990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c991:	mov    esp,0x47008e6a
  41c996:	test   al,0x53
  41c998:	push   ss
  41c999:	ds cmc 
  41c99b:	dec    esi
  41c99c:	adc    eax,0xfaa3f68
  41c9a1:	push   ecx
  41c9a2:	mov    esi,0xd2988f42
  41c9a7:	sub    eax,0xabe50ea7
  41c9ac:	out    0x78,al
  41c9ae:	add    ebp,ebp
  41c9b0:	sub    al,0x52
  41c9b2:	xor    al,bl
  41c9b4:	mov    ebp,eax
  41c9b6:	sub    al,0x3f
  41c9b8:	adc    eax,0x1700de06
  41c9bd:	mov    ebx,0xf5f4cbcd
  41c9c2:	gs ins BYTE PTR es:[edi],dx
  41c9c4:	sub    ebp,DWORD PTR [ebp+0x3c]
  41c9c7:	dec    ebx
  41c9c8:	fisubr DWORD PTR [ebp-0x8e8ab9e]
  41c9ce:	xchg   ecx,eax
  41c9cf:	add    BYTE PTR [edx+0x4f],al
  41c9d2:	rol    DWORD PTR [esi+0x13],0xb8
  41c9d6:	jae    0x41c9fe
  41c9d8:	jg     0x41c9af
  41c9da:	scas   al,BYTE PTR es:[edi]
  41c9db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9dc:	das    
  41c9dd:	sbb    BYTE PTR [edx+0x39edac30],cl
  41c9e3:	in     al,dx
  41c9e4:	ss stos DWORD PTR es:[edi],eax
  41c9e6:	push   0xe5962330
  41c9eb:	mov    dl,BYTE PTR [esi-0x38]
  41c9ee:	inc    edx
  41c9ef:	mov    ch,0x70
  41c9f1:	in     al,0x44
  41c9f3:	cmp    cl,al
  41c9f5:	sti    
  41c9f6:	push   edi
  41c9f7:	or     DWORD PTR [eax+0x3d67e401],0xd9de8d68
  41ca01:	bound  ebx,QWORD PTR [edi-0x30]
  41ca04:	pushf  
  41ca05:	retf   0xa50
  41ca08:	pop    esi
  41ca09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca0a:	sub    eax,0xda973c9f
  41ca0f:	cmp    eax,0x41e00d24
  41ca14:	adc    BYTE PTR [edx-0x1],dl
  41ca17:	imul   esi,DWORD PTR [edx+eiz*2+0x7df0bff3],0x1d12662a
  41ca22:	cmp    DWORD PTR [eax-0x15],esp
  41ca25:	inc    ebp
  41ca26:	dec    esp
  41ca27:	ds or  bl,al
  41ca2a:	inc    esi
  41ca2b:	icebp  
  41ca2c:	adc    BYTE PTR [ebx+0x2c],0x9d
  41ca30:	pushf  
  41ca31:	mov    eax,ds:0xc73d8d07
  41ca36:	rol    DWORD PTR [ecx+0x44],0x5d
  41ca3a:	mov    edi,0x3b3a65f7
  41ca3f:	outs   dx,DWORD PTR ds:[esi]
  41ca40:	mov    bl,0xf2
  41ca42:	mov    ecx,0x5b7acb51
  41ca47:	add    edi,eax
  41ca49:	pop    ecx
  41ca4a:	inc    esi
  41ca4b:	ss dec ebx
  41ca4d:	xchg   edi,eax
  41ca4e:	into   
  41ca4f:	cwde   
  41ca50:	and    al,0x53
  41ca52:	sbb    BYTE PTR [edx-0x78],dh
  41ca55:	neg    DWORD PTR [ecx+0x4a]
  41ca58:	mov    dh,0x21
  41ca5a:	(bad)  
  41ca5b:	push   ecx
  41ca5c:	test   BYTE PTR [ebx+0x3b2bb2ea],0xad
  41ca63:	push   esp
  41ca64:	sbb    BYTE PTR [ebp-0x3e6d8b8e],cl
  41ca6a:	popa   
  41ca6b:	xchg   esp,eax
  41ca6c:	mov    BYTE PTR [ebp+0x33],bh
  41ca6f:	jbe    0x41c9f4
  41ca71:	push   esp
  41ca72:	dec    edi
  41ca73:	retf   0x4bd9
  41ca76:	xchg   ecx,eax
  41ca77:	in     eax,dx
  41ca78:	and    al,0xf4
  41ca7a:	mov    cl,0x9e
  41ca7c:	cmp    eax,0x461e02da
  41ca81:	sahf   
  41ca82:	sar    DWORD PTR [eax-0xb4c40c],cl
  41ca88:	in     eax,dx
  41ca89:	data16 test BYTE PTR [eax-0x16],dh
  41ca8d:	(bad)  
  41ca8e:	sub    al,0x94
  41ca90:	and    bh,BYTE PTR [eax+0x56]
  41ca93:	dec    esi
  41ca94:	pop    esp
  41ca95:	gs dec esi
  41ca97:	(bad)  
  41ca98:	aam    0x9a
  41ca9a:	mov    ?,WORD PTR [esp+ebp*4+0x1904f3cd]
  41caa1:	mov    ecx,0xb00904d1
  41caa6:	add    dl,BYTE PTR [ecx+0x2b]
  41caa9:	sub    BYTE PTR [edx],bh
  41caab:	jl     0x41caf7
  41caad:	int    0x99
  41caaf:	cmp    BYTE PTR [edi],bl
  41cab1:	sbb    al,0x2d
  41cab3:	in     eax,0x43
  41cab5:	out    0x87,al
  41cab7:	ret    
  41cab8:	add    bh,BYTE PTR ds:0x5a73185b
  41cabe:	bound  edi,QWORD PTR [esi*2+0x28b11829]
  41cac5:	repz cdq 
  41cac7:	call   0x2440:0x7092323b
  41cace:	sub    edi,DWORD PTR ds:0x98bad817
  41cad4:	mov    esi,0x9490156e
  41cad9:	xor    bl,cl
  41cadb:	mov    dl,0xfc
  41cadd:	in     eax,dx
  41cade:	add    ch,dh
  41cae0:	ss push esp
  41cae2:	and    esi,DWORD PTR [eax]
  41cae4:	and    eax,DWORD PTR [ebp+0x259e0fdd]
  41caea:	or     DWORD PTR [ecx],esp
  41caec:	pop    eax
  41caed:	je     0x41ca9e
  41caef:	fisubr WORD PTR [edx]
  41caf1:	call   0xf78a102e
  41caf6:	pop    DWORD PTR ds:0x4dd21d44
  41cafc:	dec    ebx
  41cafd:	arpl   sp,bx
  41caff:	xor    eax,0xf1a3c895
  41cb04:	dec    eax
  41cb05:	pop    ss
  41cb06:	dec    edi
  41cb07:	xchg   edi,eax
  41cb08:	rcl    BYTE PTR [ebp+edi*4-0x1fd55927],cl
  41cb0f:	mov    dh,0xc9
  41cb11:	or     edi,ecx
  41cb13:	mov    dh,dl
  41cb15:	adc    edi,ebp
  41cb17:	fnstsw WORD PTR [esp+eax*4+0x4c]
  41cb1b:	retf   
  41cb1c:	cld    
  41cb1d:	dec    ecx
  41cb1e:	dec    esp
  41cb1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb20:	test   DWORD PTR [esi],esi
  41cb22:	push   ss
  41cb23:	rol    BYTE PTR [edx+0xdfa95c0],0xbd
  41cb2a:	sub    esp,DWORD PTR [esp+eiz*8+0x59]
  41cb2e:	dec    eax
  41cb2f:	mov    dh,0xad
  41cb31:	test   eax,0xe3d2ae5e
  41cb36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb37:	inc    eax
  41cb38:	push   eax
  41cb39:	mov    edi,0xcbd8d883
  41cb3e:	xchg   ecx,eax
  41cb3f:	int    0x76
  41cb41:	or     al,BYTE PTR [edx-0x25]
  41cb44:	push   esi
  41cb45:	mov    bh,0xb7
  41cb47:	adc    al,0xf7
  41cb49:	add    eax,0x9b85c52d
  41cb4e:	xchg   ebp,eax
  41cb4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb50:	dec    esp
  41cb51:	inc    edi
  41cb52:	das    
  41cb53:	rcl    esi,cl
  41cb55:	repz pushw 0xffee
  41cb59:	cmp    DWORD PTR [ecx-0x69c1ec9c],edi
  41cb5f:	or     DWORD PTR [ebx],esi
  41cb61:	jecxz  0x41cb64
  41cb63:	push   esp
  41cb64:	int    0xe5
  41cb66:	mov    dl,dh
  41cb68:	add    ebp,esp
  41cb6a:	pop    ss
  41cb6b:	mov    edx,0xbe6aed86
  41cb70:	cmp    al,0x3b
  41cb72:	loopne 0x41cbd6
  41cb74:	jl     0x41cbe1
  41cb76:	repz xchg edx,eax
  41cb78:	and    al,BYTE PTR [edx+0x0]
  41cb7b:	jnp    0x41cb3f
  41cb7d:	adc    eax,0x815b861c
  41cb82:	push   esi
  41cb83:	or     DWORD PTR [ebx],0x27
  41cb86:	push   eax
  41cb87:	push   ds
  41cb88:	in     eax,0xfb
  41cb8a:	pop    ebx
  41cb8b:	push   ecx
  41cb8c:	mov    edi,0xd4ce563
  41cb91:	xchg   DWORD PTR [edi],ecx
  41cb93:	cdq    
  41cb94:	mov    ds:0x111979eb,eax
  41cb99:	in     al,dx
  41cb9a:	jmp    0x41cb71
  41cb9c:	dec    esp
  41cb9d:	jns    0x41cb8c
  41cb9f:	or     eax,0x803e20ff
  41cba4:	arpl   WORD PTR [ebp+0x27f1a66e],di
  41cbaa:	xor    eax,0x3196bc88
  41cbaf:	push   ebx
  41cbb0:	fsub   DWORD PTR [edx]
  41cbb2:	rcr    DWORD PTR ds:0xb00fa6fb,1
  41cbb8:	ja     0x41cb8e
  41cbba:	inc    ecx
  41cbbb:	(bad)  
  41cbbc:	daa    
  41cbbd:	dec    esi
  41cbbe:	(bad)  [eax+0x1c]
  41cbc1:	add    eax,0xeb841456
  41cbc6:	test   BYTE PTR [esi-0x170edac8],0x46
  41cbcd:	mov    al,0x6e
  41cbcf:	jns    0x41cc06
  41cbd1:	inc    ebx
  41cbd2:	dec    ebp
  41cbd3:	push   edx
  41cbd4:	mov    dh,0xe1
  41cbd6:	mov    dh,BYTE PTR [ecx]
  41cbd8:	ins    BYTE PTR es:[edi],dx
  41cbd9:	scas   eax,DWORD PTR es:[edi]
  41cbda:	inc    esi
  41cbdb:	mov    esp,0xec8c0de5
  41cbe0:	pushf  
  41cbe1:	imul   ecx,DWORD PTR [ecx],0x8529b6a4
  41cbe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbe8:	mov    ch,0x31
  41cbea:	arpl   WORD PTR [ebx+0x54],cx
  41cbed:	xor    eax,0x33784c08
  41cbf2:	mov    dh,0xfc
  41cbf4:	mov    cl,0x2e
  41cbf6:	sar    DWORD PTR ds:[eax+0x3f],0xba
  41cbfb:	loopne 0x41cbc1
  41cbfd:	stos   DWORD PTR es:[edi],eax
  41cbfe:	cmp    ah,BYTE PTR [eax+edi*1]
  41cc01:	jle    0x41cc34
  41cc03:	loope  0x41cc0e
  41cc05:	mov    dh,0x49
  41cc07:	xor    DWORD PTR [edx-0x7818677a],0x8363395b
  41cc11:	dec    ebp
  41cc12:	jmp    0x60fd:0xb815d311
  41cc19:	fist   DWORD PTR [ecx-0x3d7db58]
  41cc1f:	xchg   DWORD PTR [ebx+0x64607653],esi
  41cc25:	(bad)  
  41cc26:	fistp  QWORD PTR [esi]
  41cc28:	sbb    DWORD PTR [ecx+0x37],ebx
  41cc2b:	jnp    0x41cc20
  41cc2d:	adc    BYTE PTR [eax-0x3618af95],ch
  41cc33:	jns    0x41cbc2
  41cc35:	mov    eax,ds:0x9a5733f3
  41cc3a:	test   eax,0x8822956
  41cc3f:	lods   eax,DWORD PTR ds:[esi]
  41cc40:	mov    ds:0xb19f474d,eax
  41cc45:	pop    esp
  41cc46:	jne    0x41cbd3
  41cc48:	push   ebx
  41cc49:	push   cs
  41cc4a:	retf   
  41cc4b:	ins    BYTE PTR es:[edi],dx
  41cc4c:	adc    ebp,DWORD PTR [edx+0x5c664db4]
  41cc52:	mov    dh,0x5f
  41cc54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc55:	out    dx,eax
  41cc56:	adc    al,0xe8
  41cc59:	add    ch,BYTE PTR [edx-0x52c41263]
  41cc5f:	jae    0x41cc13
  41cc61:	std    
  41cc62:	fmul   QWORD PTR [ebp+edx*1-0xf45d6e0]
  41cc69:	enter  0xf0cd,0x30
  41cc6d:	xor    ecx,DWORD PTR [eax-0x181708dc]
  41cc73:	imul   esp,DWORD PTR [edx-0x43],0x5a
  41cc77:	jg     0x41cc7c
  41cc79:	push   ecx
  41cc7a:	dec    edi
  41cc7b:	mov    bl,bh
  41cc7d:	xlat   BYTE PTR ds:[ebx]
  41cc7e:	sub    esp,DWORD PTR [ebx+0xb]
  41cc81:	aad    0x7d
  41cc83:	sub    ebx,DWORD PTR [edx]
  41cc85:	push   0xffffffb7
  41cc87:	adc    BYTE PTR [ebx],0x6b
  41cc8a:	add    BYTE PTR [eax-0x57e66819],cl
  41cc90:	dec    edx
  41cc91:	aam    0xa5
  41cc93:	adc    ah,dl
  41cc95:	adc    eax,0x69e7850
  41cc9a:	add    eax,0xcbfd4ae6
  41cc9f:	mov    esp,ecx
  41cca1:	cmp    ebp,esi
  41cca3:	stc    
  41cca4:	xlat   BYTE PTR ds:[ebx]
  41cca5:	push   ds
  41cca6:	inc    ebp
  41cca7:	imul   esi,ebx,0xcaefe1f2
  41ccad:	clc    
  41ccae:	mov    dh,0xa4
  41ccb0:	or     eax,0xbec7b5f3
  41ccb5:	xlat   BYTE PTR ds:[ebx]
  41ccb6:	aas    
  41ccb7:	sahf   
  41ccb8:	clc    
  41ccb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccba:	mov    bl,0xe
  41ccbc:	sub    eax,0x48af48db
  41ccc1:	ja     0x41cd15
  41ccc3:	xchg   DWORD PTR [eax-0x1433a5e4],ecx
  41ccc9:	mov    bl,ch
  41cccb:	xchg   edi,eax
  41cccc:	les    ebp,FWORD PTR [ebp+0x6aa73470]
  41ccd2:	pop    ss
  41ccd3:	push   esp
  41ccd4:	cmp    BYTE PTR [edx-0x72],cl
  41ccd7:	jg     0x41ccb0
  41ccd9:	dec    ecx
  41ccda:	jecxz  0x41cc5d
  41ccdc:	ss dec esi
  41ccde:	int3   
  41ccdf:	mov    BYTE PTR [ecx],0x74
  41cce2:	fdivr  DWORD PTR [ecx]
  41cce4:	test   BYTE PTR [ebp+0x65bc9098],cl
  41ccea:	jecxz  0x41ccd9
  41ccec:	jne    0x41cd59
  41ccee:	gs pop ss
  41ccf0:	mov    eax,0x48a6fbaf
  41ccf5:	outs   dx,BYTE PTR ds:[esi]
  41ccf6:	stc    
  41ccf7:	xchg   esi,eax
  41ccf8:	lea    edi,[edx-0x36]
  41ccfb:	jb     0x41cc88
  41ccfd:	push   ecx
  41ccfe:	fwait
  41ccff:	(bad)  
  41cd00:	add    eax,0x6eb48ed6
  41cd05:	push   ds
  41cd06:	test   DWORD PTR [edi+eiz*1+0x1d],esp
  41cd0a:	pusha  
  41cd0b:	dec    edx
  41cd0c:	rcl    BYTE PTR [edi+esi*4-0x2b],cl
  41cd10:	(bad)  
  41cd11:	pop    esi
  41cd12:	dec    esp
  41cd13:	in     eax,0x6c
  41cd15:	arpl   WORD PTR [eax],dx
  41cd17:	js     0x41cd32
  41cd19:	xchg   ebx,eax
  41cd1a:	push   edi
  41cd1b:	out    dx,eax
  41cd1c:	(bad)  
  41cd1d:	scas   al,BYTE PTR es:[edi]
  41cd1e:	imul   BYTE PTR [edx]
  41cd20:	test   DWORD PTR [edi],ebp
  41cd22:	sbb    BYTE PTR [eax+0x18],dh
  41cd25:	xchg   edx,eax
  41cd26:	sbb    bh,BYTE PTR [ebx-0xa]
  41cd29:	mov    edx,0xa843c651
  41cd2e:	jae    0x41ccbd
  41cd30:	jmp    0xbb5b:0xf4516e6
  41cd37:	lea    ecx,[edi-0x18]
  41cd3a:	mov    eax,ds:0x306b6741
  41cd3f:	mov    DWORD PTR ds:0x2b145e26,0xd0248f95
  41cd49:	xor    al,0x93
  41cd4b:	retf   0xf873
  41cd4e:	jns    0x41cd56
  41cd50:	pop    ecx
  41cd51:	jo     0x41cdb2
  41cd53:	test   al,0x52
  41cd55:	adc    cl,BYTE PTR [ebx+0x561cc96a]
  41cd5b:	outs   dx,DWORD PTR ds:[esi]
  41cd5c:	sbb    al,cl
  41cd5e:	in     al,0x1e
  41cd60:	push   esp
  41cd61:	lods   eax,DWORD PTR ds:[esi]
  41cd62:	mov    WORD PTR [esi-0x5a35f687],ss
  41cd68:	cmp    esp,DWORD PTR [ebx]
  41cd6a:	jp     0x41cdd7
  41cd6c:	in     eax,dx
  41cd6d:	ds dec eax
  41cd6f:	pop    ecx
  41cd70:	sar    DWORD PTR [esi+0x59fb52b9],1
  41cd76:	lahf   
  41cd77:	(bad)  
  41cd78:	ficomp DWORD PTR [edx+0x7d]
  41cd7b:	retf   
  41cd7c:	sar    BYTE PTR [ebx],1
  41cd7e:	fadd   st,st(6)
  41cd80:	adc    dh,BYTE PTR [esi+eax*4-0x6d]
  41cd84:	mov    edx,0x131ceaa2
  41cd89:	and    DWORD PTR [edx],ebx
  41cd8b:	push   ecx
  41cd8c:	enter  0x25ba,0x9f
  41cd90:	ins    BYTE PTR es:[edi],dx
  41cd91:	icebp  
  41cd92:	pusha  
  41cd93:	inc    esp
  41cd94:	jle    0x41cdfa
  41cd96:	push   edx
  41cd97:	jno    0x41ce08
  41cd99:	lds    eax,FWORD PTR [ebp-0x1b719f43]
  41cd9f:	cmp    DWORD PTR [eax],esi
  41cda1:	mov    ecx,0xdfd9952b
  41cda6:	jne    0x41cded
  41cda8:	dec    ebp
  41cda9:	mov    edi,0xe6ef990f
  41cdae:	xchg   edi,eax
  41cdaf:	jo     0x41ce13
  41cdb1:	test   BYTE PTR [esi+0x6a],bh
  41cdb4:	(bad)  
  41cdb5:	sbb    BYTE PTR [edx-0x8],al
  41cdb8:	call   DWORD PTR [edi-0x61af7005]
  41cdbe:	inc    ecx
  41cdbf:	mov    al,ds:0xb10c025f
  41cdc4:	out    dx,al
  41cdc5:	fwait
  41cdc6:	xchg   edx,eax
  41cdc7:	enter  0x8a09,0xb2
  41cdcb:	push   0xffffffb6
  41cdcd:	cmp    ebx,0xffffffa2
  41cdd0:	jns    0x41cd5e
  41cdd2:	sub    edx,esi
  41cdd4:	js     0x41cd5c
  41cdd6:	fistp  WORD PTR [edx-0x6b]
  41cdd9:	(bad)  
  41cdda:	push   edx
  41cddc:	jmp    0x41cdd2
  41cdde:	cmp    bh,BYTE PTR ds:0x55b472ca
  41cde4:	imul   ecx,DWORD PTR [eax-0x48ebf44],0x70ba1b23
  41cdee:	fbld   TBYTE PTR [ecx-0x2b9992e0]
  41cdf4:	sahf   
  41cdf5:	cmp    di,WORD PTR [ebx]
  41cdf8:	gs jae 0x41cdf3
  41cdfb:	stos   DWORD PTR es:[edi],eax
  41cdfc:	sbb    DWORD PTR [edx+0x41a23e9a],ecx
  41ce02:	hlt    
  41ce03:	(bad)  
  41ce04:	(bad)  
  41ce05:	push   0x702c7ac
  41ce0a:	pop    ds
  41ce0b:	mov    cs,WORD PTR [edx+edi*1-0x4d145204]
  41ce12:	and    dl,bl
  41ce14:	push   esi
  41ce15:	mov    ah,0x98
  41ce17:	repz ret 
  41ce19:	jae    0x41ce06
  41ce1b:	adc    DWORD PTR [edi],ebx
  41ce1d:	cmp    BYTE PTR [ecx],dh
  41ce1f:	mov    ebx,DWORD PTR [ebp+0x25ebfe0d]
  41ce25:	mov    edi,edi
  41ce27:	cmp    DWORD PTR [ecx],esp
  41ce29:	sub    esp,DWORD PTR [edx-0x1bbbee55]
  41ce2f:	jno    0x41ce44
  41ce31:	dec    eax
  41ce32:	daa    
  41ce33:	dec    esp
  41ce34:	jmp    0x2526:0xd322efa3
  41ce3b:	outs   dx,BYTE PTR ds:[esi]
  41ce3c:	ss dec eax
  41ce3e:	aas    
  41ce3f:	pushf  
  41ce40:	dec    edi
  41ce41:	jecxz  0x41ce10
  41ce43:	dec    ebx
  41ce44:	push   ds
  41ce45:	les    edx,FWORD PTR [edi-0x58]
  41ce48:	outs   dx,BYTE PTR ds:[esi]
  41ce49:	je     0x41ce79
  41ce4b:	arpl   WORD PTR [edx],sp
  41ce4d:	sti    
  41ce4e:	int3   
  41ce4f:	mov    ah,ah
  41ce51:	mov    eax,0x38166018
  41ce56:	jnp    0x41ce34
  41ce58:	mul    DWORD PTR [ebx]
  41ce5a:	jp     0x41ce3d
  41ce5c:	sub    BYTE PTR [ecx],bl
  41ce5e:	add    eax,0xdfe8283
  41ce63:	test   eax,0x979c53f8
  41ce68:	inc    edx
  41ce69:	xor    al,0x2d
  41ce6b:	adc    al,0x83
  41ce6d:	leave  
  41ce6e:	pop    esi
  41ce6f:	mov    eax,0x7dbb180a
  41ce74:	jmp    0x1cee:0x10d602ea
  41ce7b:	or     edi,ebx
  41ce7d:	rcr    DWORD PTR [edi],1
  41ce7f:	adc    al,0xc7
  41ce81:	rol    DWORD PTR [esi+0x424c5473],0xa7
  41ce88:	ror    DWORD PTR [edx+0x58a588d9],1
  41ce8e:	mov    esp,0x88847298
  41ce93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce94:	jo     0x41cee3
  41ce96:	cmc    
  41ce97:	xor    DWORD PTR [esp+ecx*1+0x7ac38be5],edx
  41ce9e:	iret   
  41ce9f:	and    DWORD PTR [eax],ecx
  41cea1:	pop    esp
  41cea2:	mov    eax,ds:0xc9d6e6ae
  41cea7:	inc    esp
  41cea8:	pop    esi
  41cea9:	cs pop es
  41ceab:	jecxz  0x41ce5b
  41cead:	jl     0x41ce5f
  41ceaf:	shr    DWORD PTR [ecx-0x54],1
  41ceb2:	rcr    BYTE PTR [ecx-0x23],cl
  41ceb5:	xlat   BYTE PTR ds:[ebx]
  41ceb6:	in     al,dx
  41ceb7:	push   ecx
  41ceb8:	add    eax,0xb04b519a
  41cebd:	out    0x4a,eax
  41cebf:	sbb    BYTE PTR [ebx+0x6a42f2c5],bl
  41cec5:	aaa    
  41cec6:	cld    
  41cec7:	pushf  
  41cec8:	clc    
  41cec9:	mov    WORD PTR ds:0xc6a11f52,cs
  41cecf:	outs   dx,DWORD PTR ds:[esi]
  41ced0:	push   ds
  41ced1:	ins    DWORD PTR es:[edi],dx
  41ced2:	push   es
  41ced3:	aam    0xdf
  41ced5:	lods   al,BYTE PTR ds:[esi]
  41ced6:	adc    esp,DWORD PTR [edx+0x7a]
  41ced9:	sbb    ebp,DWORD PTR [esi]
  41cedb:	bound  edx,QWORD PTR [ecx]
  41cedd:	js     0x41ce80
  41cedf:	mov    BYTE PTR [eax],0xc8
  41cee2:	shr    DWORD PTR [eax],0x6
  41cee5:	add    dl,bl
  41cee7:	dec    ebx
  41cee8:	mov    eax,ds:0x844ca050
  41ceed:	and    ax,0xddfd
  41cef1:	xchg   DWORD PTR [eax-0x59a2461a],esi
  41cef7:	mov    bh,BYTE PTR [esi+eax*4+0x4058f1ac]
  41cefe:	add    al,0x9f
  41cf00:	push   cs
  41cf01:	cmp    dl,BYTE PTR [eax+0x3a]
  41cf04:	and    BYTE PTR [ecx-0x65b98fa9],0xb5
  41cf0b:	xchg   ecx,eax
  41cf0c:	fbld   TBYTE PTR [ebp+0x2bb9ec06]
  41cf12:	xchg   ebx,eax
  41cf13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf14:	push   0xffffffdf
  41cf16:	sbb    ebx,esi
  41cf18:	enter  0xceb3,0x73
  41cf1c:	repnz ins BYTE PTR es:[edi],dx
  41cf1e:	adc    DWORD PTR [edi-0x6096e294],ecx
  41cf24:	(bad)  
  41cf25:	ins    BYTE PTR es:[edi],dx
  41cf26:	dec    ebx
  41cf27:	xor    eax,0x106fd7a7
  41cf2c:	ins    BYTE PTR es:[edi],dx
  41cf2d:	into   
  41cf2e:	sbb    BYTE PTR [esi+0x3b],dl
  41cf31:	xor    edx,DWORD PTR [ebp+0x62b5cd58]
  41cf37:	aaa    
  41cf38:	and    esi,DWORD PTR [edx+0x4647131d]
  41cf3e:	push   ss
  41cf3f:	mov    ch,BYTE PTR [esi]
  41cf41:	dec    esi
  41cf42:	mov    ecx,0x592b97f2
  41cf47:	mov    al,ds:0x53cdb1c
  41cf4c:	sbb    BYTE PTR [edx+edi*2-0x77bd8cc4],dh
  41cf53:	and    BYTE PTR [ebx],bl
  41cf55:	lahf   
  41cf56:	mov    DWORD PTR [esi-0x17],esp
  41cf59:	mov    bh,0xb2
  41cf5b:	adc    ch,BYTE PTR [ebx-0x7b]
  41cf5e:	mov    esi,0x8bb60a2f
  41cf63:	icebp  
  41cf64:	int    0x64
  41cf66:	call   0x300d:0x896009c9
  41cf6d:	aad    0x4d
  41cf6f:	cli    
  41cf70:	cwde   
  41cf71:	jne    0x41cf73
  41cf73:	dec    esi
  41cf74:	sbb    al,BYTE PTR [ecx]
  41cf76:	cmp    al,BYTE PTR [edx+0x33]
  41cf79:	imul   edi,esp,0x4b
  41cf7c:	sub    eax,0xda7891d6
  41cf81:	repnz ins BYTE PTR es:[edi],dx
  41cf83:	rol    BYTE PTR [edi],1
  41cf85:	add    BYTE PTR [eax-0x73],bl
  41cf88:	dec    ecx
  41cf89:	inc    ebx
  41cf8a:	dec    ebp
  41cf8b:	lds    edx,FWORD PTR [ebp-0x3e46e24c]
  41cf91:	push   es
  41cf92:	test   DWORD PTR [edi-0x68],0x8d6f320d
  41cf99:	mov    dl,0xda
  41cf9b:	adc    ecx,eax
  41cf9d:	push   es
  41cf9e:	push   ebp
  41cf9f:	ror    eax,0x7f
  41cfa2:	adc    DWORD PTR [edi],esp
  41cfa4:	xor    BYTE PTR ds:0x893f7bf4,al
  41cfaa:	div    BYTE PTR [edx+0x8172d62]
  41cfb0:	scas   eax,DWORD PTR es:[edi]
  41cfb1:	sar    DWORD PTR [ebp-0x29ff28a3],0xc0
  41cfb8:	lods   eax,DWORD PTR ds:[esi]
  41cfb9:	retf   
  41cfba:	sbb    al,0x85
  41cfbc:	sahf   
  41cfbd:	inc    esi
  41cfbe:	jno    0x41d003
  41cfc0:	mov    esp,0x720b0179
  41cfc5:	push   ebp
  41cfc6:	mov    ebx,DWORD PTR [ecx-0x1f]
  41cfc9:	sub    eax,0x9cb4b1aa
  41cfce:	lods   eax,DWORD PTR ds:[esi]
  41cfcf:	add    DWORD PTR ds:0x1a751caa,edi
  41cfd5:	popa   
  41cfd6:	xchg   edi,eax
  41cfd7:	mov    eax,0xb5c3bdf6
  41cfdc:	mov    ah,0x94
  41cfde:	lock jmp 0x41cff2
  41cfe1:	sbb    DWORD PTR [edx-0x60],edi
  41cfe4:	or     ebp,ebp
  41cfe6:	jo     0x41d02e
  41cfe8:	fld    QWORD PTR [ecx-0x3e1a69da]
  41cfee:	push   esi
  41cfef:	outs   dx,BYTE PTR ds:[esi]
  41cff0:	mov    ah,0xad
  41cff2:	imul   edi,DWORD PTR ds:0x8978d70c,0xd9e2f3a2
  41cffc:	repz jg 0x41d00b
  41cfff:	sbb    eax,edi
  41d001:	mov    BYTE PTR [ebx],bh
  41d003:	add    BYTE PTR [ecx-0x10],cl
  41d006:	cli    
  41d007:	mov    al,ds:0x3731b007
  41d00c:	lds    edx,FWORD PTR [ecx]
  41d00e:	push   ebp
  41d00f:	out    dx,eax
  41d010:	out    dx,eax
  41d011:	out    dx,eax
  41d012:	idiv   ch
  41d014:	mov    al,ds:0xff385c74
  41d019:	shr    WORD PTR [eax+0x25a3d6d1],cl
  41d020:	sti    
  41d021:	int3   
  41d022:	or     DWORD PTR [ebx],edx
  41d024:	pop    es
  41d025:	or     BYTE PTR [ebp-0xd],ah
  41d028:	mov    ebp,0x28c33897
  41d02d:	adc    al,0x10
  41d02f:	mov    fs,edi
  41d031:	lods   al,BYTE PTR ds:[esi]
  41d032:	dec    ebp
  41d033:	dec    edx
  41d034:	add    eax,0x1bc67f21
  41d039:	push   esi
  41d03a:	data16 adc al,0x42
  41d03d:	outs   dx,DWORD PTR ds:[esi]
  41d03e:	mov    ebp,0x4baece90
  41d043:	in     al,dx
  41d044:	adc    al,0x8b
  41d046:	lock mov esi,0xabdc652b
  41d04c:	jbe    0x41d0c0
  41d04e:	xchg   ebp,eax
  41d04f:	inc    ebx
  41d050:	cs ret 0xcce
  41d054:	hlt    
  41d055:	pop    es
  41d056:	xchg   ecx,eax
  41d057:	outs   dx,BYTE PTR ds:[esi]
  41d058:	pop    edx
  41d059:	jmp    0x2a1181ae
  41d05e:	mul    DWORD PTR [esi+0x73]
  41d061:	adc    bl,ch
  41d063:	xchg   ecx,eax
  41d064:	ret    
  41d065:	cmp    DWORD PTR [esp+esi*4+0x3b],esp
  41d069:	outs   dx,DWORD PTR ds:[esi]
  41d06a:	neg    BYTE PTR [edx]
  41d06c:	shr    eax,0x58
  41d06f:	mov    WORD PTR ds:0xd5709dd8,?
  41d075:	sahf   
  41d076:	js     0x41d0ae
  41d078:	cmp    eax,0x33447fc7
  41d07d:	mov    al,ds:0x763c7067
  41d082:	gs jmp 0xf1fb:0x6dc0bab2
  41d08a:	adc    esp,DWORD PTR [ebx]
  41d08c:	(bad)  
  41d08d:	(bad)  
  41d08e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d08f:	cli    
  41d090:	inc    esp
  41d091:	inc    DWORD PTR [edi-0x768a3f9a]
  41d097:	inc    esp
  41d098:	sub    eax,edi
  41d09a:	xchg   edx,eax
  41d09b:	fcmovne st,st(5)
  41d09d:	(bad)  
  41d09e:	push   ebx
  41d09f:	mov    dl,0xfc
  41d0a1:	cmp    al,0x1b
  41d0a3:	pushf  
  41d0a4:	aam    0xac
  41d0a6:	mov    esi,0xb898c794
  41d0ab:	inc    edx
  41d0ac:	lock and ebp,DWORD PTR [edx-0x48ef192d]
  41d0b3:	clc    
  41d0b4:	mov    gs,WORD PTR [edx-0x4]
  41d0b7:	(bad)  
  41d0b8:	sbb    esi,DWORD PTR [eax+0x10]
  41d0bb:	jmp    0xc5751cce
  41d0c0:	sbb    dh,bh
  41d0c2:	push   edi
  41d0c3:	mov    DWORD PTR [edx+0x1cd2125a],0x6f3ec6e6
  41d0cd:	pop    ecx
  41d0ce:	lahf   
  41d0cf:	jns    0x41d118
  41d0d1:	(bad)  
  41d0d2:	stos   BYTE PTR es:[edi],al
  41d0d3:	jl     0x41d05a
  41d0d5:	xor    DWORD PTR [bp-0x6c],eax
  41d0d9:	call   0x1b3e:0x3194e52d
  41d0e0:	push   esp
  41d0e1:	shr    dl,1
  41d0e3:	(bad)  
  41d0e5:	mov    es:0x758bf834,al
  41d0eb:	xchg   esi,eax
  41d0ec:	pop    edi
  41d0ed:	xlat   BYTE PTR ds:[ebx]
  41d0ee:	mov    ds:0x2db1bd37,eax
  41d0f3:	aaa    
  41d0f4:	pop    esi
  41d0f5:	dec    edx
  41d0f6:	lea    edx,[esp+ebp*4+0x3e]
  41d0fa:	jno    0x41d07d
  41d0fc:	(bad)  
  41d0fd:	in     al,dx
  41d0fe:	sbb    ch,al
  41d100:	out    dx,al
  41d101:	sub    DWORD PTR [ecx],esp
  41d103:	(bad)  
  41d104:	fidivr WORD PTR [ebx+esi*8-0x12785264]
  41d10b:	mov    ds:0xde4cb41d,al
  41d110:	mov    ebx,0x684734dc
  41d115:	mov    al,ds:0x3943b48d
  41d11a:	enter  0x2f0c,0xed
  41d11e:	adc    DWORD PTR [ecx-0x557ad0e8],0xd68c142
  41d128:	pop    es
  41d129:	sar    ebp,1
  41d12b:	fiadd  WORD PTR [ebx-0x39]
  41d12e:	jo     0x41d13b
  41d130:	gs mov ecx,0x8abdbada
  41d136:	or     DWORD PTR [edx-0x75],edi
  41d139:	sub    DWORD PTR [ebp+eax*4+0x65af4636],0x67
  41d141:	dec    esp
  41d142:	outs   dx,DWORD PTR ds:[esi]
  41d143:	stos   DWORD PTR es:[edi],eax
  41d144:	or     DWORD PTR [esi+0x21],ebx
  41d147:	pop    ds
  41d148:	jns    0x41d0de
  41d14a:	dec    esi
  41d14b:	mov    ecx,0xc745f3e4
  41d150:	cmc    
  41d151:	call   0xb628:0xa9f00b84
  41d158:	nop
  41d159:	xchg   ebx,eax
  41d15a:	lods   eax,DWORD PTR ds:[esi]
  41d15b:	pop    ds
  41d15c:	ja     0x41d1b2
  41d15e:	pop    edi
  41d15f:	std    
  41d160:	fmulp  st(1),st
  41d162:	cmp    BYTE PTR [edi-0x1b696c74],bh
  41d168:	ret    0xf134
  41d16b:	lds    edi,FWORD PTR [edi-0x68]
  41d16e:	outs   dx,BYTE PTR ds:[esi]
  41d16f:	fld    TBYTE PTR [edx+0x37]
  41d172:	xchg   ebp,eax
  41d173:	pop    eax
  41d174:	dec    ebx
  41d175:	cmp    eax,0x148a5eeb
  41d17a:	enter  0x325d,0x32
  41d17e:	bnd jb 0x41d17b
  41d181:	idiv   bl
  41d183:	fisub  WORD PTR [edi-0x13]
  41d186:	pop    ecx
  41d187:	mov    ebp,0xd3057b5a
  41d18c:	or     bh,BYTE PTR [esi+edi*8+0x2f]
  41d190:	push   ss
  41d191:	inc    esp
  41d192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d193:	sbb    esp,DWORD PTR [ecx-0x7d]
  41d196:	mov    ds:0x65a8a669,al
  41d19b:	iret   
  41d19c:	leave  
  41d19d:	(bad)  
  41d19e:	push   ebx
  41d19f:	scas   eax,DWORD PTR es:[edi]
  41d1a0:	das    
  41d1a1:	push   esp
  41d1a2:	adc    dl,BYTE PTR [edi+0x53d8bea5]
  41d1a8:	ror    ebp,1
  41d1aa:	rcr    DWORD PTR [ebx],cl
  41d1ac:	xor    esp,DWORD PTR [edx+0x6b]
  41d1af:	nop
  41d1b0:	lods   al,BYTE PTR ds:[esi]
  41d1b1:	mov    al,BYTE PTR [edx-0x7e]
  41d1b4:	cdq    
  41d1b5:	pop    edi
  41d1b6:	xchg   DWORD PTR [ecx],esi
  41d1b8:	sbb    esi,edi
  41d1ba:	mov    ds:0x74681a6e,eax
  41d1bf:	jne    0x41d232
  41d1c1:	or     esi,DWORD PTR [eax+0x2f51b775]
  41d1c7:	pop    ds
  41d1c8:	pop    esi
  41d1c9:	(bad)  
  41d1ca:	cli    
  41d1cb:	sbb    ecx,eax
  41d1cd:	into   
  41d1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1cf:	pushf  
  41d1d0:	inc    edi
  41d1d1:	imul   BYTE PTR [esi]
  41d1d3:	ror    DWORD PTR [edi+0x68],cl
  41d1d6:	ds jg  0x41d1b9
  41d1d9:	cmp    ebp,DWORD PTR [eax-0x17023235]
  41d1df:	ds mov ch,bh
  41d1e2:	cmp    DWORD PTR [edi-0x5eaa3c68],esp
  41d1e8:	bound  edi,QWORD PTR [ebx+eax*2-0xf]
  41d1ec:	imul   esi,DWORD PTR [edi+0x762ba1fb],0x6b3d6d92
  41d1f6:	inc    ebp
  41d1f7:	mov    edi,0xcba62dae
  41d1fc:	xor    eax,0x9de0b4a5
  41d201:	xchg   edi,edx
  41d203:	cmp    al,0x69
  41d205:	neg    BYTE PTR [eax+0x7b614099]
  41d20b:	shr    BYTE PTR [eax+0x1],1
  41d20e:	jae    0x41d193
  41d210:	cld    
  41d211:	jge    0x41d220
  41d213:	adc    eax,0xa61a111e
  41d218:	inc    ebx
  41d219:	das    
  41d21a:	fadd   DWORD PTR [edi-0x76]
  41d21d:	sbb    BYTE PTR [ecx],bh
  41d21f:	addr16 pop edi
  41d221:	sub    al,0x43
  41d223:	xlat   BYTE PTR ds:[ebx]
  41d224:	hlt    
  41d225:	sub    BYTE PTR [esi+0x1707ee91],cl
  41d22b:	xor    BYTE PTR [edi+0x71f74fdc],bl
  41d231:	jmp    0x936fdd5a
  41d236:	xchg   edx,eax
  41d237:	lea    ebp,[esi+0x37364ed8]
  41d23d:	adc    dl,ch
  41d23f:	mov    dh,0xa9
  41d241:	mov    ?,WORD PTR [eax+edx*4]
  41d244:	(bad)  
  41d245:	cmp    ch,BYTE PTR [esp+ebp*2]
  41d248:	pop    ebp
  41d249:	cmp    esi,DWORD PTR [ebp+edi*1-0x5d4c5dea]
  41d250:	mov    ah,0x10
  41d252:	out    0x6e,eax
  41d254:	and    eax,0xe82ccb19
  41d259:	xchg   ecx,eax
  41d25a:	shl    al,cl
  41d25c:	xor    al,0x67
  41d25e:	sbb    bl,0x19
  41d261:	dec    esi
  41d262:	dec    BYTE PTR [eax]
  41d264:	push   ecx
  41d265:	and    al,BYTE PTR [eax-0x2c]
  41d268:	xlat   BYTE PTR ds:[ebx]
  41d269:	je     0x41d293
  41d26b:	push   ebp
  41d26c:	add    BYTE PTR [eax],dh
  41d26e:	mov    cl,dh
  41d270:	lea    ebp,[edi-0x51]
  41d273:	lds    ebp,FWORD PTR [ebp+0x5e]
  41d276:	cmp    al,0x48
  41d278:	cld    
  41d279:	mov    ds:0xa6d5108b,al
  41d27e:	jp     0x41d2b0
  41d280:	test   bh,bh
  41d282:	push   eax
  41d283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d284:	call   0x6861:0xf7cb187e
  41d28b:	and    eax,0x8fad516e
  41d290:	call   0xc4af9018
  41d295:	inc    BYTE PTR [esi-0x35048db9]
  41d29b:	mov    eax,0x5693d379
  41d2a0:	xor    bh,BYTE PTR [eax]
  41d2a2:	pop    edx
  41d2a3:	sbb    BYTE PTR [ecx-0xa],0xd5
  41d2a7:	or     BYTE PTR [esi],bl
  41d2a9:	xor    edx,DWORD PTR [ebx+ecx*2-0xa7042ca]
  41d2b0:	sub    al,0x97
  41d2b2:	push   eax
  41d2b3:	or     ecx,DWORD PTR [ebx+0x7a]
  41d2b6:	(bad)  
  41d2b7:	dec    ebx
  41d2b8:	or     al,0x73
  41d2ba:	imul   edx,ecx,0xffffffd8
  41d2bd:	and    dl,BYTE PTR [esi-0x7d103f96]
  41d2c3:	pusha  
  41d2c4:	jae    0x41d344
  41d2c6:	dec    edi
  41d2c7:	xchg   ebx,eax
  41d2c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2c9:	or     BYTE PTR [ebx+0x2b],ah
  41d2cc:	push   cs
  41d2cd:	hlt    
  41d2ce:	sub    eax,0xf7842851
  41d2d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2d4:	sub    BYTE PTR [ebx],bl
  41d2d6:	nop
  41d2d7:	push   ebp
  41d2d8:	leave  
  41d2d9:	out    0xca,al
  41d2db:	mov    DWORD PTR ds:0x5f704ba6,ebx
  41d2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e2:	pusha  
  41d2e3:	adc    BYTE PTR [eax+0x49c6751c],bh
  41d2e9:	jnp    0x41d306
  41d2eb:	pop    es
  41d2ec:	(bad)  
  41d2ed:	cli    
  41d2ee:	sub    BYTE PTR [ebp-0x28],dh
  41d2f1:	fimul  WORD PTR [ebp-0x74]
  41d2f4:	pop    edx
  41d2f5:	and    ah,BYTE PTR [edx]
  41d2f7:	bound  ebp,QWORD PTR [esi-0x3]
  41d2fa:	pop    DWORD PTR [ebp+0x177549d]
  41d300:	cmp    BYTE PTR [edi-0x18cb16f0],dl
  41d306:	add    al,0x26
  41d308:	cmp    dl,BYTE PTR [eax+0x72]
  41d30b:	pop    ss
  41d30c:	sbb    al,BYTE PTR [esi-0x59a91e79]
  41d312:	cdq    
  41d313:	imul   eax,DWORD PTR [edi+0x5e],0xffffff9e
  41d317:	pop    esp
  41d318:	sub    edx,DWORD PTR [ecx]
  41d31a:	mov    ch,0x19
  41d31c:	aas    
  41d31d:	(bad)  
  41d31e:	jge    0x41d2f5
  41d320:	test   al,0xd6
  41d322:	icebp  
  41d323:	sub    cl,BYTE PTR ds:0xd3dcfe1d
  41d329:	adc    dh,BYTE PTR [ecx+eax*4]
  41d32c:	xor    eax,0x5ff7ebd2
  41d331:	js     0x41d3a2
  41d333:	or     dl,dh
  41d335:	pop    ds
  41d336:	pop    ebp
  41d337:	cmp    eax,0xba7a2505
  41d33c:	jb     0x41d37f
  41d33e:	push   ebp
  41d33f:	push   edi
  41d340:	dec    ecx
  41d341:	mov    ch,0x4
  41d343:	cld    
  41d344:	or     DWORD PTR [ebp+edx*8+0x5ffd9088],ebp
  41d34b:	js     0x41d300
  41d34d:	mov    al,0xd8
  41d34f:	pusha  
  41d350:	jp     0x41d31b
  41d352:	repnz aam 0xb1
  41d355:	jmp    0x41d2dc
  41d357:	scas   eax,DWORD PTR es:[edi]
  41d358:	xchg   ebx,eax
  41d359:	push   ss
  41d35a:	mov    DWORD PTR [edx],0x8ee8ea96
  41d360:	imul   ecx,esi,0xea0340ad
  41d366:	in     al,0xa1
  41d368:	arpl   WORD PTR [edi-0xe],dx
  41d36b:	les    edi,FWORD PTR [esi]
  41d36d:	dec    ebx
  41d36e:	popf   
  41d36f:	add    al,0xe4
  41d371:	repnz sti 
  41d373:	clc    
  41d374:	shl    DWORD PTR [eax+ebp*2+0x34490fb6],0x1a
  41d37c:	xchg   edx,eax
  41d37d:	(bad)  [edi+ecx*2-0x1c70b114]
  41d384:	adc    al,0x72
  41d386:	jle    0x41d3be
  41d388:	idiv   BYTE PTR [esi-0x4]
  41d38b:	push   esi
  41d38c:	sbb    BYTE PTR [ebp+0x43],0x51
  41d390:	push   0x2a9ca1be
  41d395:	jecxz  0x41d3af
  41d397:	mov    al,ds:0x936bd547
  41d39c:	(bad)  
  41d39d:	ss pop ds
  41d39f:	add    eax,0xfc5211ee
  41d3a4:	and    ecx,DWORD PTR [edi]
  41d3a6:	mov    al,ds:0x9d9a4637
  41d3ab:	loopne 0x41d39d
  41d3ad:	sbb    eax,0x83e46277
  41d3b2:	in     eax,0xfb
  41d3b4:	scas   eax,DWORD PTR es:[edi]
  41d3b5:	aas    
  41d3b6:	inc    esp
  41d3b7:	rol    ebx,0x40
  41d3ba:	in     al,dx
  41d3bb:	in     al,dx
  41d3bc:	mov    dh,0xd2
  41d3be:	or     DWORD PTR [ebx-0x45],esi
  41d3c1:	inc    ebx
  41d3c2:	nop
  41d3c3:	dec    edi
  41d3c4:	dec    esp
  41d3c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c6:	xchg   esi,eax
  41d3c7:	je     0x41d3f9
  41d3c9:	ret    
  41d3ca:	mov    al,0x0
  41d3cc:	inc    BYTE PTR [esi-0x2a]
  41d3cf:	mov    ebx,ebx
  41d3d1:	fs mov ebx,0xae70e59
  41d3d7:	xor    BYTE PTR [eax-0x1565e160],0xf5
  41d3de:	adc    BYTE PTR [eax],dh
  41d3e0:	pop    eax
  41d3e1:	adc    esp,eax
  41d3e3:	out    dx,eax
  41d3e4:	lds    eax,FWORD PTR [ebx-0x101fda10]
  41d3ea:	sub    eax,0x6e6d8936
  41d3ef:	ror    bl,1
  41d3f1:	repnz xor edi,DWORD PTR [ebp-0x3c]
  41d3f5:	test   eax,0xe519535b
  41d3fa:	or     BYTE PTR [edx+0x24],0xba
  41d3fe:	dec    ebx
  41d3ff:	sub    eax,0x5f11c414
  41d404:	in     eax,0x39
  41d406:	shl    DWORD PTR [edx+0x60caafa9],0x92
  41d40d:	mov    al,0xba
  41d40f:	or     al,0x71
  41d411:	scas   eax,DWORD PTR es:[edi]
  41d412:	scas   eax,DWORD PTR es:[edi]
  41d413:	loopne 0x41d3e9
  41d415:	inc    DWORD PTR [eax-0x6954aed3]
  41d41b:	call   0xf7a3:0xef5212da
  41d422:	retf   0x565e
  41d425:	add    DWORD PTR [ebx],0xc00fb942
  41d42b:	adc    ah,BYTE PTR [ecx]
  41d42d:	lods   al,BYTE PTR ds:[esi]
  41d42e:	inc    esp
  41d42f:	jo     0x41d46b
  41d431:	adc    esp,DWORD PTR [edx-0x27040d1c]
  41d437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d438:	inc    esp
  41d439:	ins    BYTE PTR es:[edi],dx
  41d43a:	xor    dl,BYTE PTR [edx]
  41d43c:	retf   
  41d43d:	push   es
  41d43e:	rol    BYTE PTR [esi-0x4decbe16],1
  41d444:	in     al,0xde
  41d446:	dec    edx
  41d447:	jns    0x41d47d
  41d449:	xchg   edi,eax
  41d44a:	push   ebx
  41d44b:	push   ss
  41d44c:	xchg   ecx,eax
  41d44d:	ret    0x1c37
  41d450:	jmp    0x712f:0x37c614fc
  41d457:	jmp    0x41d411
  41d459:	rcr    BYTE PTR [ebx],cl
  41d45b:	jg     0x41d47b
  41d45d:	loopne 0x41d462
  41d45f:	test   eax,0x5ff1c0e
  41d464:	inc    edx
  41d465:	(bad)  
  41d466:	mov    edi,edi
  41d468:	aaa    
  41d469:	push   edx
  41d46a:	jge    0x41d434
  41d46c:	fld    TBYTE PTR [edx+eiz*8+0x4e]
  41d470:	pop    ebp
  41d471:	in     eax,0xb8
  41d473:	int3   
  41d474:	push   esp
  41d475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d476:	push   esi
  41d477:	push   edi
  41d478:	cdq    
  41d479:	dec    ecx
  41d47a:	imul   DWORD PTR [ebp+0x1ecbe4c2]
  41d480:	xor    ch,bl
  41d482:	xor    ebp,DWORD PTR ds:0xc439e03c
  41d488:	lods   al,BYTE PTR ds:[esi]
  41d489:	test   eax,0xaa01f5a3
  41d48e:	xchg   edi,eax
  41d48f:	push   0xffffff92
  41d491:	(bad)  
  41d492:	in     al,dx
  41d493:	fstp   DWORD PTR [ebp-0x429883c1]
  41d499:	jl     0x41d48f
  41d49b:	sub    DWORD PTR [eax-0x66b1c101],edi
  41d4a1:	cmp    DWORD PTR [edx-0x4f1f2193],esi
  41d4a7:	mov    DWORD PTR [eax],edx
  41d4a9:	sbb    bl,BYTE PTR [ebp-0x74]
  41d4ac:	repz sub bh,BYTE PTR [ebx+ebx*8-0x65]
  41d4b1:	sbb    eax,0xdcfbe36f
  41d4b6:	pop    ecx
  41d4b7:	test   DWORD PTR fs:[ecx-0x8],edx
  41d4bb:	fwait
  41d4bc:	jmp    0x3d5d:0xaa05045d
  41d4c3:	(bad)  
  41d4c4:	pop    ebx
  41d4c5:	cmc    
  41d4c6:	ss jmp 0x41d4ad
  41d4c9:	in     eax,0x64
  41d4cb:	inc    ebp
  41d4cc:	add    eax,esp
  41d4ce:	mov    ah,0x30
  41d4d0:	adc    DWORD PTR ss:[edi-0x3e],esp
  41d4d4:	out    0xb6,al
  41d4d6:	mov    ds:0x85a92233,al
  41d4db:	cs jbe 0x41d4e8
  41d4de:	pmulhuw mm7,QWORD PTR [esp+ebx*8-0x24]
  41d4e3:	pushf  
  41d4e4:	mov    ebx,0xf0674495
  41d4e9:	pop    esi
  41d4ea:	xadd   DWORD PTR [edx],esi
  41d4ed:	inc    esp
  41d4ee:	aam    0x2a
  41d4f0:	and    al,0x74
  41d4f2:	adc    eax,0xbea3f304
  41d4f7:	push   esi
  41d4f8:	and    eax,0x9638a985
  41d4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4fe:	enter  0x8f97,0xf4
  41d502:	sbb    DWORD PTR ds:0x2d244eaa,ecx
  41d508:	dec    ecx
  41d509:	push   ebx
  41d50a:	lea    eax,[ebx+ebp*4+0x40a9154d]
  41d511:	lock out 0x20,al
  41d514:	sbb    BYTE PTR [eax+0x1b],0x80
  41d518:	jmp    0x8fa0:0x781f494e
  41d51f:	sbb    eax,0xc01f9fe6
  41d524:	stos   BYTE PTR es:[edi],al
  41d525:	dec    esi
  41d526:	mov    eax,ds:0xe8389093
  41d52b:	(bad)  
  41d52c:	adc    BYTE PTR [edx],bh
  41d52e:	les    ecx,FWORD PTR [ebx+0x3f93dcd9]
  41d534:	mov    BYTE PTR [eax],bl
  41d536:	cmp    BYTE PTR [edx],al
  41d538:	rcr    BYTE PTR [edi+0x511c53a4],cl
  41d53e:	pop    esp
  41d53f:	jl     0x41d50f
  41d541:	loope  0x41d4d9
  41d543:	push   esp
  41d544:	mov    ecx,0xe5bd96cd
  41d549:	or     BYTE PTR ds:0xfe6282ef,0xe9
  41d550:	xor    al,0x46
  41d552:	add    esi,DWORD PTR [eax]
  41d554:	rcl    BYTE PTR [edx],0x7
  41d557:	test   DWORD PTR [ebp+0x49],edi
  41d55a:	fdivr  QWORD PTR [esp+ebp*2]
  41d55d:	mov    esp,0x507e77fb
  41d562:	dec    ebx
  41d563:	pusha  
  41d564:	ins    BYTE PTR es:[edi],dx
  41d565:	ret    0x905e
  41d568:	fcom   DWORD PTR [ecx+0x20]
  41d56b:	mov    bh,0x58
  41d56d:	stos   BYTE PTR es:[edi],al
  41d56e:	daa    
  41d56f:	cmp    DWORD PTR [ebp-0x7e60fc4f],0x41066249
  41d579:	aaa    
  41d57a:	jnp    0x41d5e7
  41d57c:	out    dx,al
  41d57d:	cmp    DWORD PTR ds:0x35fca52f,edx
  41d583:	sbb    eax,0x6bfc1dd8
  41d588:	pop    edx
  41d589:	fcomp  QWORD PTR [esi]
  41d58b:	mov    edx,0x23799729
  41d590:	ja     0x41d572
  41d592:	popf   
  41d593:	pop    esp
  41d594:	icebp  
  41d595:	jne    0x41d609
  41d597:	test   bl,cl
  41d599:	gs mov esp,0x96640abf
  41d59f:	xchg   BYTE PTR [edx+0x6a],bl
  41d5a2:	and    al,0x2
  41d5a4:	in     al,dx
  41d5a5:	popa   
  41d5a6:	pusha  
  41d5a7:	pop    edx
  41d5a8:	sbb    BYTE PTR [esp+eiz*8],dl
  41d5ab:	test   dl,0xa5
  41d5ae:	push   edi
  41d5af:	or     DWORD PTR gs:[edx+0x6e313d15],esi
  41d5b6:	das    
  41d5b7:	mov    ebp,0xc168e97b
  41d5bc:	cmp    eax,0x4ce62cff
  41d5c1:	sbb    al,BYTE PTR cs:[eax+0x47]
  41d5c5:	(bad)  
  41d5c6:	aam    0xc3
  41d5c8:	(bad)  
  41d5c9:	in     eax,0x9
  41d5cb:	mov    esp,0xe8105011
  41d5d0:	or     eax,0x56acdfe7
  41d5d5:	dec    ebx
  41d5d6:	fcom   QWORD PTR [edx+0x7f]
  41d5d9:	fidivr DWORD PTR [edx-0x6825dfde]
  41d5df:	pop    ebx
  41d5e0:	pop    es
  41d5e1:	fiadd  WORD PTR [edi+0xa]
  41d5e4:	sar    eax,0x47
  41d5e7:	push   ecx
  41d5e8:	rcl    dl,1
  41d5ea:	ss pop edi
  41d5ec:	rcr    ecx,0x47
  41d5ef:	cmp    eax,esi
  41d5f1:	test   BYTE PTR [edx-0xc],0x62
  41d5f5:	mov    eax,ds:0xc29cff86
  41d5fa:	data16 or BYTE PTR [edx],cl
  41d5fd:	mov    edx,0x1d044aa3
  41d602:	dec    edx
  41d603:	in     al,dx
  41d604:	aaa    
  41d605:	push   es
  41d606:	lds    ebp,FWORD PTR [ecx+0x8]
  41d609:	pop    edi
  41d60a:	cmp    dh,cl
  41d60c:	lds    esp,FWORD PTR [ecx+ebx*1]
  41d60f:	cmp    al,0xf8
  41d611:	(bad)  
  41d612:	call   0xa4915af5
  41d617:	sub    BYTE PTR ds:0x603ad8ce,ah
  41d61d:	ret    0x73e2
  41d620:	iret   
  41d621:	outs   dx,BYTE PTR ds:[esi]
  41d622:	dec    ebp
  41d623:	add    al,0x8a
  41d625:	xlat   BYTE PTR ds:[ebx]
  41d626:	xor    edx,DWORD PTR [ebp+0x584c1aed]
  41d62c:	shr    eax,cl
  41d62e:	sub    eax,0x6a3a1510
  41d633:	mov    ds:0xbcfc4416,eax
  41d638:	and    BYTE PTR [esi-0x4e],dl
  41d63b:	lods   eax,DWORD PTR ds:[esi]
  41d63c:	jl     0x41d5d1
  41d63e:	outs   dx,BYTE PTR ds:[esi]
  41d63f:	dec    edx
  41d640:	jl     0x41d5d0
  41d642:	push   cs
  41d643:	jmp    0x41d60d
  41d645:	inc    esi
  41d646:	out    0xa,eax
  41d648:	mov    ss,WORD PTR [edi-0x311a04d0]
  41d64e:	mov    eax,ds:0xac851419
  41d653:	sbb    BYTE PTR [edi],al
  41d655:	xor    al,BYTE PTR [ebx]
  41d657:	shl    DWORD PTR ds:0xd49a82d2,1
  41d65d:	rcr    BYTE PTR [edi],0x7a
  41d660:	nop
  41d661:	cmc    
  41d662:	sbb    ecx,eax
  41d664:	and    al,0x70
  41d666:	xchg   edx,eax
  41d667:	dec    ebp
  41d668:	outs   dx,DWORD PTR ds:[esi]
  41d669:	mov    bl,0x2c
  41d66b:	xchg   ecx,eax
  41d66c:	dec    edi
  41d66d:	ds popa 
  41d66f:	jae    0x41d5fc
  41d671:	fwait
  41d672:	in     al,0xc8
  41d674:	jo     0x41d6cd
  41d676:	scas   eax,DWORD PTR es:[edi]
  41d677:	shr    edx,1
  41d679:	cld    
  41d67a:	mov    ch,0x73
  41d67c:	enter  0x753f,0x2c
  41d680:	jmp    0xb037589b
  41d685:	cmp    DWORD PTR ds:0x6e5b771b,eax
  41d68b:	out    0x4a,eax
  41d68d:	jmp    0x41d60f
  41d68f:	and    al,0x44
  41d691:	sti    
  41d692:	mov    ebp,0xca3ef3e0
  41d697:	enter  0x5f04,0x3
  41d69b:	je     0x41d63a
  41d69d:	dec    ebx
  41d69e:	xor    DWORD PTR [edx],edx
  41d6a0:	hlt    
  41d6a1:	out    dx,al
  41d6a2:	int    0xec
  41d6a4:	mov    edi,0xeff0b6b9
  41d6a9:	nop
  41d6aa:	pop    es
  41d6ab:	and    sp,bp
  41d6ae:	push   ebp
  41d6af:	int3   
  41d6b0:	cmp    DWORD PTR fs:[edx+ebx*2],0x43afdc6d
  41d6b8:	iret   
  41d6b9:	retf   0xe71e
  41d6bc:	jbe    0x41d6ab
  41d6be:	or     BYTE PTR [esi+eiz*1-0x3c],al
  41d6c2:	jl     0x41d671
  41d6c4:	mov    eax,ds:0xad9ffebd
  41d6c9:	push   0x6f
  41d6cb:	imul   esp,DWORD PTR [eax-0x676dc6b3],0x834ce39d
  41d6d5:	inc    ebp
  41d6d6:	dec    ecx
  41d6d7:	fdivr  QWORD PTR [edi]
  41d6d9:	and    DWORD PTR [edx],0x71
  41d6dc:	pushf  
  41d6dd:	push   ebp
  41d6de:	add    al,0x8a
  41d6e0:	ins    BYTE PTR es:[edi],dx
  41d6e1:	inc    eax
  41d6e2:	and    bh,cl
  41d6e4:	add    eax,0x90af0f26
  41d6e9:	sbb    dl,BYTE PTR [esi]
  41d6eb:	and    esi,DWORD PTR [esi]
  41d6ed:	lods   eax,DWORD PTR fs:[esi]
  41d6ef:	add    al,0x65
  41d6f1:	std    
  41d6f2:	xchg   BYTE PTR [ebx],dl
  41d6f4:	jl     0x41d682
  41d6f6:	inc    ebp
  41d6f7:	stc    
  41d6f8:	fs cdq 
  41d6fa:	push   ebx
  41d6fb:	lods   al,BYTE PTR fs:[esi]
  41d6fd:	cmp    DWORD PTR [edx+0x76],ecx
  41d700:	loop   0x41d716
  41d702:	jmp    0x41d6e6
  41d704:	xor    eax,0xbf6bd2d1
  41d709:	shr    ch,0x3b
  41d70c:	mov    ebx,0xd2cf33b3
  41d711:	add    al,0xd0
  41d713:	mov    dh,BYTE PTR [esp+ebp*8-0x78]
  41d717:	mov    edx,0x3068a621
  41d71c:	adc    al,0xdb
  41d71e:	push   cs
  41d71f:	fisttp QWORD PTR [ecx-0x317a87ce]
  41d725:	sbb    al,0x2b
  41d727:	xchg   DWORD PTR [eax+0x2f],edi
  41d72a:	test   eax,0xa93c0c88
  41d72f:	sbb    BYTE PTR [ebp-0x80],ch
  41d732:	inc    edi
  41d733:	imul   edx,DWORD PTR [esi+eiz*8+0x5e90d28d],0x4a
  41d73b:	xor    ebp,DWORD PTR [esi-0x37]
  41d73e:	xor    ah,BYTE PTR [ebx-0x4a9018b1]
  41d744:	hlt    
  41d745:	nop
  41d746:	mov    bl,0x19
  41d748:	dec    ebx
  41d749:	mov    ch,0xe6
  41d74b:	mov    ch,0xf7
  41d74d:	ret    0xe61d
  41d750:	add    al,dh
  41d752:	mov    al,0x9a
  41d754:	mov    dh,0x7a
  41d756:	add    eax,DWORD PTR [ecx-0x7e]
  41d759:	out    0x76,eax
  41d75b:	xor    edx,ebx
  41d75d:	xlat   BYTE PTR ds:[ebx]
  41d75e:	mov    edx,0xa6004d8f
  41d763:	pop    edi
  41d764:	xor    BYTE PTR [edi-0x6ab95d4],dh
  41d76a:	add    eax,0x8eff822b
  41d76f:	hlt    
  41d770:	imul   ebx,ebx,0x34
  41d773:	adc    esi,DWORD PTR [esi+ebp*1+0x5a278236]
  41d77a:	sbb    eax,DWORD PTR [eax+0x43c1cd1f]
  41d780:	stos   BYTE PTR es:[edi],al
  41d781:	pop    esi
  41d782:	lahf   
  41d783:	loop   0x41d7c5
  41d785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d786:	ins    DWORD PTR es:[edi],dx
  41d787:	jnp    0x41d766
  41d789:	pop    ebp
  41d78a:	mov    bl,0x43
  41d78c:	mov    eax,DWORD PTR ds:0x6d1e24fe
  41d792:	xchg   edx,eax
  41d793:	mov    al,0xe4
  41d795:	mov    BYTE PTR [esi+ecx*8],al
  41d798:	imul   esp,DWORD PTR [eax-0x37],0x55f65fcb
  41d79f:	jo     0x41d78d
  41d7a1:	enter  0x6be9,0xc
  41d7a5:	out    dx,eax
  41d7a6:	sahf   
  41d7a7:	js     0x41d7b9
  41d7a9:	icebp  
  41d7aa:	jmp    0x9c0d4175
  41d7af:	(bad)  
  41d7b0:	jmp    0x1c7ad6c4
  41d7b5:	add    BYTE PTR [ebx],al
  41d7b7:	bnd jae 0x41d81b
  41d7ba:	push   ebx
  41d7bb:	mov    al,ds:0x94e49f5d
  41d7c0:	jp     0x41d82c
  41d7c2:	push   ebp
  41d7c3:	adc    eax,0x9bee579c
  41d7c8:	jo     0x41d787
  41d7ca:	fbld   TBYTE PTR [edi]
  41d7cc:	jp     0x41d764
  41d7ce:	imul   edi,DWORD PTR [edi+0x4d],0xe9e20973
  41d7d5:	inc    edx
  41d7d6:	out    dx,al
  41d7d7:	aad    0xb7
  41d7d9:	push   eax
  41d7da:	mov    ds:0x74e6bc63,eax
  41d7df:	pop    esi
  41d7e0:	xor    ebx,esi
  41d7e2:	or     eax,0xb91f2617
  41d7e7:	aam    0xce
  41d7e9:	stc    
  41d7ea:	imul   ebp,DWORD PTR [ebp+0x3c1f6acb],0x60
  41d7f1:	jno    0x41d807
  41d7f3:	add    BYTE PTR [edi+0x4a],al
  41d7f6:	mul    DWORD PTR [edi+0x2bca12b7]
  41d7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7fd:	sahf   
  41d7fe:	call   0x5688:0xaada998a
  41d805:	shl    DWORD PTR [bx+0x1ae6],1
  41d80a:	out    0x73,eax
  41d80c:	stos   DWORD PTR es:[edi],eax
  41d80d:	rol    edi,1
  41d80f:	repnz sbb al,0x66
  41d812:	xchg   BYTE PTR [esp+edx*4],dl
  41d815:	sbb    DWORD PTR [ebx+0x69],ebp
  41d818:	in     eax,dx
  41d819:	adc    al,BYTE PTR [edx-0x2bed53b]
  41d81f:	xchg   BYTE PTR [ecx],cl
  41d821:	dec    esi
  41d822:	inc    BYTE PTR [eax+0x7a]
  41d825:	pusha  
  41d826:	dec    ebp
  41d827:	mov    DWORD PTR [ecx],0x11fe18c0
  41d82d:	in     al,0xa4
  41d82f:	mov    ds:0xec9cbb24,al
  41d834:	cld    
  41d835:	test   BYTE PTR [ebx+0x716066d],ch
  41d83b:	adc    eax,0x433327c9
  41d840:	(bad)  
  41d841:	fsub   QWORD PTR [ecx]
  41d843:	aam    0xec
  41d845:	fmul   DWORD PTR [edx]
  41d848:	pop    ecx
  41d849:	cld    
  41d84a:	jg     0x41d80a
  41d84c:	add    edi,eax
  41d84e:	push   ebp
  41d84f:	pop    edi
  41d850:	cwde   
  41d851:	cmp    eax,0xa74076db
  41d856:	add    bl,al
  41d858:	loop   0x41d7e0
  41d85a:	push   edx
  41d85b:	jmp    0x41d7ef
  41d85d:	icebp  
  41d85e:	outs   dx,BYTE PTR ds:[esi]
  41d85f:	cli    
  41d860:	in     al,0xfa
  41d862:	pop    esi
  41d863:	sub    DWORD PTR [edx],eax
  41d865:	xchg   edx,esi
  41d867:	jno    0x41d875
  41d869:	and    eax,0xf039376a
  41d86e:	mov    ds:0xdd8f2173,eax
  41d873:	sbb    DWORD PTR [ebp+0x21],ebx
  41d876:	(bad)  
  41d877:	jmp    0xe0a40927
  41d87c:	(bad)
  41d87f:	adc    eax,0x3cf8770
  41d884:	leave  
  41d885:	(bad)  
  41d886:	and    al,0x66
  41d888:	xor    eax,0xb2673b77
  41d88d:	in     eax,dx
  41d88e:	inc    esi
  41d88f:	pop    ss
  41d890:	cs sub bh,BYTE PTR ds:[eax+0x3a]
  41d895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d896:	dec    eax
  41d897:	pop    ds
  41d898:	sti    
  41d899:	add    ah,bl
  41d89b:	stos   DWORD PTR es:[edi],eax
  41d89c:	jl     0x41d822
  41d89e:	repz cmp BYTE PTR [edi],al
  41d8a1:	add    BYTE PTR [ecx+0x3b],cl
  41d8a4:	adc    BYTE PTR [edx],0x17
  41d8a7:	adc    eax,0x74e8e864
  41d8ac:	xor    esi,DWORD PTR [ebp-0x7d]
  41d8af:	fnstcw WORD PTR [edi+0x38295210]
  41d8b5:	xor    ch,BYTE PTR [ecx-0x5f]
  41d8b8:	loop   0x41d83b
  41d8ba:	js     0x41d845
  41d8bc:	in     eax,0x35
  41d8be:	mov    esp,0xd34fd766
  41d8c3:	adc    BYTE PTR [eax-0x77],0xa7
  41d8c7:	loop   0x41d87d
  41d8c9:	xchg   ecx,eax
  41d8ca:	mov    ds:0xdb6a5b3d,al
  41d8cf:	icebp  
  41d8d0:	loop   0x41d93f
  41d8d2:	jns    0x41d943
  41d8d4:	push   ebx
  41d8d5:	sub    al,dh
  41d8d7:	gs xchg ecx,eax
  41d8d9:	outs   dx,DWORD PTR ds:[esi]
  41d8da:	into   
  41d8db:	popf   
  41d8dc:	idiv   BYTE PTR [ecx+0x4f]
  41d8df:	mov    ebx,0x6b519d98
  41d8e4:	stos   DWORD PTR es:[edi],eax
  41d8e5:	lock les ebp,FWORD PTR [ebx+0x62bc2cb5]
  41d8ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8ed:	mov    dh,0x83
  41d8ef:	imul   edx,DWORD PTR [edx+eiz*1],0x8b8cfb31
  41d8f6:	xlat   BYTE PTR ds:[ebx]
  41d8f7:	cwde   
  41d8f8:	pop    eax
  41d8f9:	push   0x52
  41d8fb:	mov    WORD PTR [eax],gs
  41d8fd:	cwde   
  41d8fe:	stc    
  41d8ff:	or     bl,BYTE PTR [edx]
  41d901:	fs jno 0x41d8ee
  41d904:	mov    DWORD PTR [ebx-0x4f1900c3],ebp
  41d90a:	imul   DWORD PTR [eax+0x6b30c5cc]
  41d910:	data16 jge 0x41d8c6
  41d913:	mov    edi,DWORD PTR [edi+0xd3eea3d]
  41d919:	in     al,dx
  41d91a:	push   cs
  41d91b:	adc    eax,0xb67809ae
  41d920:	jecxz  0x41d8a5
  41d922:	out    0x11,eax
  41d924:	rol    BYTE PTR [ebp+0xe],1
  41d927:	clc    
  41d928:	pop    ss
  41d929:	cmp    BYTE PTR [esi-0x30264f17],0xc4
  41d930:	xchg   ebx,eax
  41d931:	cmp    edx,DWORD PTR [eax]
  41d933:	xchg   ebp,eax
  41d934:	sbb    bl,BYTE PTR [esp+esi*4]
  41d937:	scas   eax,DWORD PTR es:[edi]
  41d938:	retf   0xd60d
  41d93b:	addr16 popa 
  41d93d:	xor    ch,BYTE PTR ds:0x12f5fe06
  41d943:	push   0x3a6fcb79
  41d948:	jnp    0x41d8f0
  41d94a:	cli    
  41d94b:	sub    bh,BYTE PTR [edx]
  41d94d:	or     al,0xd3
  41d94f:	jb     0x41d95d
  41d951:	lods   eax,DWORD PTR ds:[esi]
  41d952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d953:	jne    0x41d916
  41d955:	scas   al,BYTE PTR es:[edi]
  41d956:	imul   ebp,DWORD PTR ds:0x539d4670,0x1b5b5a33
  41d960:	cmp    ebx,DWORD PTR [edi]
  41d962:	ja     0x41d92e
  41d964:	xchg   edx,eax
  41d965:	aam    0x17
  41d967:	cmc    
  41d968:	add    DWORD PTR [edx+0xd26efc5],edi
  41d96e:	jbe    0x41d92c
  41d970:	xor    eax,0xe67df95a
  41d975:	aad    0x13
  41d977:	xchg   BYTE PTR [eax+0x4e],cl
  41d97a:	lods   eax,DWORD PTR ds:[esi]
  41d97b:	adc    al,0x3f
  41d97d:	push   ebp
  41d97e:	push   esi
  41d97f:	std    
  41d980:	shl    DWORD PTR [eax],0x5f
  41d983:	fidivr WORD PTR [esp+esi*1+0x26]
  41d987:	xor    eax,0xd8bd42ca
  41d98c:	or     DWORD PTR [ebp+0x2263a8f1],ebx
  41d992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d993:	outs   dx,BYTE PTR ds:[esi]
  41d994:	lock icebp 
  41d996:	out    dx,eax
  41d997:	gs sub al,0x7f
  41d99a:	push   eax
  41d99b:	cs aas 
  41d99d:	mov    ecx,0x24ee25c5
  41d9a2:	nop
  41d9a3:	cdq    
  41d9a4:	je     0x41d991
  41d9a6:	xchg   edx,eax
  41d9a7:	call   0x44c5d54f
  41d9ac:	sbb    al,0x14
  41d9ae:	or     ebp,DWORD PTR [esi-0x2e08f280]
  41d9b4:	stc    
  41d9b5:	cli    
  41d9b6:	out    dx,al
  41d9b7:	mov    esp,0x7652a06c
  41d9bc:	pop    edi
  41d9bd:	xchg   ebx,eax
  41d9be:	test   DWORD PTR [ebp-0x53],edi
  41d9c1:	aam    0xf1
  41d9c3:	out    dx,al
  41d9c4:	ret    
  41d9c5:	popf   
  41d9c6:	jge    0x41d9d6
  41d9c8:	in     al,0x87
  41d9ca:	mov    ds:0xe7164d73,al
  41d9cf:	retf   
  41d9d0:	aad    0x87
  41d9d2:	sub    ebp,DWORD PTR [edi-0x6b7ef777]
  41d9d8:	jns    0x41da42
  41d9da:	jg     0x41d98b
  41d9dc:	cdq    
  41d9dd:	sbb    BYTE PTR [esi-0x11],bl
  41d9e0:	jbe    0x41da2c
  41d9e2:	into   
  41d9e3:	sahf   
  41d9e4:	nop
  41d9e5:	jge    0x41da5a
  41d9e7:	sbb    BYTE PTR ds:0x69b75c91,0xac
  41d9ee:	and    DWORD PTR [eax-0x13eada3c],eax
  41d9f4:	and    BYTE PTR [edi+ebp*8-0x7b],bh
  41d9f8:	fisttp QWORD PTR [ecx-0x523d9929]
  41d9fe:	cs push ss
  41da00:	jae    0x41d9d8
  41da02:	out    0x9f,eax
  41da04:	pop    ebp
  41da05:	nop
  41da06:	mov    edx,0x7f011638
  41da0b:	retf   0x7e44
  41da0e:	fstp   TBYTE PTR [ecx+0x51]
  41da11:	movlps xmm0,QWORD PTR [ebx-0x60]
  41da15:	dec    ebx
  41da16:	mov    BYTE PTR [ebx+ebx*8-0x516ec7a4],bl
  41da1d:	int    0x40
  41da1f:	inc    edx
  41da20:	cwde   
  41da21:	mov    ah,0xba
  41da23:	ja     0x41da18
  41da25:	add    al,0xa
  41da27:	xchg   esi,eax
  41da28:	lods   al,BYTE PTR ds:[esi]
  41da29:	and    DWORD PTR [eax],esp
  41da2b:	shr    DWORD PTR [ecx-0x44],cl
  41da2e:	inc    ecx
  41da2f:	out    dx,al
  41da30:	jmp    FWORD PTR [edi+edx*1-0x247d7026]
  41da37:	mov    bh,0x10
  41da39:	fcomp  QWORD PTR [esi+esi*4+0x62]
  41da3d:	add    edi,eax
  41da3f:	(bad)  
  41da40:	jmp    0x41daab
  41da42:	call   0xe4b5d1f1
  41da47:	add    ecx,DWORD PTR [ebp+0x50a82e6e]
  41da4d:	gs int3 
  41da4f:	mov    al,0xa8
  41da51:	je     0x41dab9
  41da53:	xor    edi,0x5d67e4d3
  41da59:	clc    
  41da5a:	mov    ch,0x13
  41da5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da5d:	in     al,dx
  41da5e:	cmp    edi,DWORD PTR [ecx]
  41da60:	test   DWORD PTR [edi+0x29fd353f],0x30379f2a
  41da6a:	test   al,0x23
  41da6c:	add    cl,dh
  41da6e:	or     cl,dh
  41da70:	data16 in al,0x83
  41da73:	and    ebx,0xd066899f
  41da79:	jns    0x41da11
  41da7b:	xchg   edx,eax
  41da7c:	jmp    0x986cc33f
  41da81:	push   ds
  41da82:	sar    bh,1
  41da84:	or     BYTE PTR [edx+0x13],ch
  41da87:	jns    0x41dad6
  41da89:	in     eax,0xeb
  41da8b:	aam    0xee
  41da8d:	inc    eax
  41da8e:	cld    
  41da8f:	mov    ebx,DWORD PTR [edi-0x30]
  41da92:	popa   
  41da93:	inc    edx
  41da94:	rcr    BYTE PTR [edi+0x5922064b],0x23
  41da9b:	mov    eax,ds:0x7ec515d2
  41daa0:	inc    esp
  41daa1:	pop    edi
  41daa2:	cs daa 
  41daa4:	stos   BYTE PTR es:[edi],al
  41daa5:	pop    ecx
  41daa6:	cli    
  41daa7:	mov    ebp,0x526ec3df
  41daac:	mov    esi,DWORD PTR [edx]
  41daae:	push   esi
  41daaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab0:	fs xor eax,0xc62d8e55
  41dab6:	ss add al,0x11
  41dab9:	push   edx
  41daba:	fist   WORD PTR [ebp-0x343eec49]
  41dac0:	xor    edi,DWORD PTR [esi+eiz*8+0x25766798]
  41dac7:	icebp  
  41dac8:	mov    ecx,0x9fda6f86
  41dacd:	les    ebx,FWORD PTR [edi+0x766747d0]
  41dad3:	xchg   edx,eax
  41dad4:	dec    esi
  41dad5:	icebp  
  41dad6:	jge    0x41db56
  41dad8:	out    0x7c,al
  41dada:	pusha  
  41dadb:	je     0x41da7c
  41dadd:	cmp    BYTE PTR [esi],cl
  41dadf:	les    ecx,FWORD PTR [ebx]
  41dae1:	push   0x65
  41dae3:	retf   0x4bc
  41dae6:	jle    0x41db27
  41dae8:	sbb    dh,BYTE PTR [eax-0x7b]
  41daeb:	mov    eax,ds:0xbc2e4e78
  41daf0:	jle    0x41da9b
  41daf2:	iret   
  41daf3:	add    eax,0xf2fa9787
  41daf8:	jmp    DWORD PTR [esi+0x7a]
  41dafb:	lahf   
  41dafc:	test   al,0x1a
  41dafe:	loope  0x41da9e
  41db00:	imul   esi,DWORD PTR [ebp-0x7897dfa7],0x3a6845a3
  41db0a:	pop    ecx
  41db0b:	xor    al,bh
  41db0d:	dec    eax
  41db0e:	dec    esi
  41db0f:	pop    edi
  41db10:	or     edi,DWORD PTR [esi+0x4492a9ca]
  41db16:	mov    cl,0x3e
  41db18:	adc    eax,0x1d661ba6
  41db1d:	and    al,0xd4
  41db1f:	out    0x17,al
  41db21:	ins    BYTE PTR es:[edi],dx
  41db22:	test   eax,0x5db56784
  41db27:	out    dx,al
  41db28:	sub    ecx,ebx
  41db2a:	sbb    DWORD PTR [ebx-0x1e],0x7a60179c
  41db31:	fbstp  TBYTE PTR [ecx-0x2f]
  41db34:	mov    BYTE PTR [edx-0x2],0x9f
  41db38:	or     al,0x73
  41db3a:	mov    cs,edx
  41db3c:	and    eax,0x161b6dc
  41db41:	pushf  
  41db42:	and    BYTE PTR [ebp+0x3bba412c],al
  41db48:	aam    0x15
  41db4a:	pop    ss
  41db4b:	loopne 0x41db00
  41db4d:	jmp    0x41db2e
  41db4f:	push   esp
  41db50:	fsubr  QWORD PTR [edi-0x3743440b]
  41db56:	xchg   BYTE PTR [eax-0x3ce18816],dl
  41db5c:	mov    cl,0xf
  41db5e:	add    dl,BYTE PTR ds:0x1eb3b03e
  41db64:	push   edx
  41db65:	les    ebp,FWORD PTR [ecx]
  41db67:	mov    eax,ds:0xa2e6fdb7
  41db6c:	stc    
  41db6d:	shl    eax,cl
  41db6f:	rcl    BYTE PTR [eax-0x6a995e92],cl
  41db75:	add    eax,0x73bebbb5
  41db7a:	sbb    BYTE PTR [edx+eiz*8],bl
  41db7d:	test   DWORD PTR [edi],ebp
  41db7f:	push   edx
  41db80:	lock outs dx,BYTE PTR ds:[esi]
  41db82:	ret    
  41db83:	cmp    ch,ah
  41db85:	inc    edx
  41db86:	stos   DWORD PTR es:[edi],eax
  41db87:	mov    ch,0xa9
  41db89:	mov    edx,0x9189a071
  41db8e:	pop    ds
  41db8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db90:	and    eax,DWORD PTR [ecx]
  41db92:	and    DWORD PTR cs:[edi-0x17],ebp
  41db96:	icebp  
  41db97:	fcom   DWORD PTR [edx-0x2a]
  41db9a:	dec    ebp
  41db9b:	jne    0x501cc83e
  41dba1:	fcom   DWORD PTR [esi-0x1355bd7e]
  41dba7:	mov    esi,0x2ce6fc18
  41dbac:	xchg   ebx,eax
  41dbad:	sub    esp,DWORD PTR ds:0x985a8e6d
  41dbb3:	add    ebp,esi
  41dbb5:	outs   dx,DWORD PTR ds:[esi]
  41dbb6:	lods   eax,DWORD PTR ds:[esi]
  41dbb7:	inc    ecx
  41dbb8:	aad    0xb7
  41dbba:	dec    eax
  41dbbb:	mov    eax,0x29570d2c
  41dbc0:	xchg   ebx,eax
  41dbc1:	sub    bl,BYTE PTR [ecx]
  41dbc3:	sbb    al,0x18
  41dbc5:	mov    dl,ch
  41dbc7:	cmp    ah,dh
  41dbc9:	or     DWORD PTR [eax-0x5d],eax
  41dbcc:	lods   al,BYTE PTR ds:[esi]
  41dbcd:	sub    ebp,esi
  41dbcf:	js     0x41dbf7
  41dbd1:	dec    eax
  41dbd2:	ss jecxz 0x41db9a
  41dbd5:	mov    fs,WORD PTR [edx+esi*8-0x345153ae]
  41dbdc:	pop    esi
  41dbdd:	ret    
  41dbde:	push   0x1dcd6d0e
  41dbe3:	or     al,0xf6
  41dbe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbe6:	inc    edx
  41dbe7:	cli    
  41dbe8:	cli    
  41dbe9:	pop    ecx
  41dbea:	push   ebx
  41dbeb:	fwait
  41dbec:	pcmpgtb mm6,QWORD PTR [edi+esi*2]
  41dbf0:	je     0x41dc5b
  41dbf2:	cmp    al,0x18
  41dbf4:	adc    bh,BYTE PTR [esp+edx*2+0x16ffbe08]
  41dbfb:	(bad)  
  41dbfc:	sbb    ch,BYTE PTR [esi+esi*4-0x1a7b3931]
  41dc03:	or     al,0x2c
  41dc05:	sub    ecx,DWORD PTR [esi-0x1a]
  41dc08:	mov    edx,0x59399722
  41dc0d:	imul   esp,DWORD PTR [ebx-0x36],0xffffff80
  41dc11:	xor    BYTE PTR [edx+0x2f],dl
  41dc14:	mov    edi,0xbdd3ab5e
  41dc19:	out    0xc1,eax
  41dc1b:	jns    0x41dba6
  41dc1d:	jl     0x41dbc4
  41dc1f:	mov    ch,0x7e
  41dc21:	adc    al,0x7d
  41dc23:	pop    esp
  41dc24:	cmc    
  41dc25:	sahf   
  41dc26:	jae    0x41dbd3
  41dc28:	js     0x41dc83
  41dc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc2b:	rol    DWORD PTR [edx-0x18d95e55],1
  41dc31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc32:	mov    ecx,0x98929974
  41dc37:	or     edx,DWORD PTR [esi+0x6e0fda7c]
  41dc3d:	sub    ebx,DWORD PTR [edi+0x1db54789]
  41dc43:	push   esi
  41dc44:	int    0xd8
  41dc46:	pop    eax
  41dc47:	add    BYTE PTR [eax+eiz*4],bh
  41dc4a:	popa   
  41dc4b:	ins    BYTE PTR es:[edi],dx
  41dc4c:	out    dx,eax
  41dc4d:	sbb    eax,0x190977b6
  41dc52:	pop    ebx
  41dc53:	inc    esp
  41dc54:	je     0x41dcc2
  41dc56:	pop    edx
  41dc57:	cmp    dl,al
  41dc59:	mov    bh,0x61
  41dc5b:	fistp  DWORD PTR [edx]
  41dc5d:	mov    bl,0x59
  41dc5f:	adc    edi,esi
  41dc61:	lods   al,BYTE PTR ds:[esi]
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	fs pusha 
  41dc65:	mov    DWORD PTR [eax+0x18e3d852],edx
  41dc6b:	mov    dh,0xe9
  41dc6d:	in     al,dx
  41dc6e:	pop    eax
  41dc6f:	push   ebx
  41dc70:	es xchg ebx,eax
  41dc72:	and    al,0xf3
  41dc74:	mov    ebx,0x6dec84e
  41dc79:	stos   DWORD PTR es:[edi],eax
  41dc7a:	adc    DWORD PTR [eax-0xc],esi
  41dc7d:	dec    ebp
  41dc7e:	fsubr  st(6),st
  41dc80:	fcmovu st,st(0)
  41dc82:	push   edi
  41dc83:	leave  
  41dc84:	fs jle 0x41dc12
  41dc87:	(bad)  
  41dc88:	call   0xabe258cd
  41dc8d:	mov    dh,0xb9
  41dc8f:	pop    esp
  41dc90:	retf   0x160f
  41dc93:	(bad)  
  41dc94:	stos   BYTE PTR es:[edi],al
  41dc95:	adc    BYTE PTR [eax+0x41],ch
  41dc98:	add    BYTE PTR [edx-0x6a],bh
  41dc9b:	add    esp,DWORD PTR [eax-0x128a68be]
  41dca1:	dec    edi
  41dca2:	push   ebx
  41dca3:	dec    eax
  41dca4:	daa    
  41dca5:	aad    0x51
  41dca7:	add    al,0xc6
  41dca9:	fs call 0xc552:0xb42c1de3
  41dcb1:	sub    ebp,ecx
  41dcb3:	pop    sp
  41dcb5:	mov    ch,0xc3
  41dcb7:	push   cs
  41dcb8:	mov    eax,ds:0x8ba03e11
  41dcbd:	add    WORD PTR [eax],bx
  41dcc0:	hlt    
  41dcc1:	cmp    BYTE PTR [edi+0x1e],dh
  41dcc4:	inc    eax
  41dcc5:	icebp  
  41dcc6:	xor    ecx,DWORD PTR [ebx]
  41dcc8:	int    0xe6
  41dcca:	dec    esi
  41dccb:	ror    cl,1
  41dccd:	enter  0x5d2a,0x76
  41dcd1:	mov    edi,DWORD PTR [ebp+0x21030a94]
  41dcd7:	mov    gs,WORD PTR [esi]
  41dcd9:	push   es
  41dcda:	and    al,0x5d
  41dcdc:	fidiv  DWORD PTR [ebp+0x1d]
  41dcdf:	addr16 xchg esp,eax
  41dce1:	imul   edi,DWORD PTR [eax],0xffffff9a
  41dce4:	jmp    0x60cf:0xe66cc1b9
  41dceb:	test   eax,0xd743d4d9
  41dcf0:	ins    DWORD PTR es:[edi],dx
  41dcf1:	cs xchg esp,eax
  41dcf3:	shl    BYTE PTR [ebx],0xcb
  41dcf6:	fstp   DWORD PTR [eax+0x6ba0007a]
  41dcfc:	test   BYTE PTR [edi],0x9c
  41dcff:	in     eax,dx
  41dd00:	outs   dx,DWORD PTR ds:[esi]
  41dd01:	jg     0x41dd2c
  41dd03:	enter  0x5552,0x24
  41dd07:	or     esp,DWORD PTR [ecx]
  41dd09:	inc    esi
  41dd0a:	xchg   BYTE PTR [ecx-0x64],cl
  41dd0d:	nop
  41dd0e:	mov    DWORD PTR [edx+0x6c22fe2f],ebx
  41dd14:	sbb    eax,0x9bd7f4ae
  41dd19:	leave  
  41dd1a:	jg     0x41dcce
  41dd1c:	mov    al,0x75
  41dd1e:	mov    edx,0x22a81f24
  41dd23:	fs cwde 
  41dd25:	and    edi,esi
  41dd27:	pop    esp
  41dd28:	loope  0x41dd80
  41dd2a:	adc    ch,BYTE PTR [ebx]
  41dd2c:	outs   dx,DWORD PTR ds:[esi]
  41dd2d:	jnp    0x41dcef
  41dd2f:	dec    ebp
  41dd30:	cld    
  41dd31:	cmp    edx,DWORD PTR [edi]
  41dd33:	ja     0x41dcf8
  41dd35:	mov    ds:0x5edfe31a,al
  41dd3a:	cmp    BYTE PTR [eax-0x18f9faa],0x91
  41dd41:	inc    esp
  41dd42:	sbb    DWORD PTR [edx-0x1c6c6efb],0x63
  41dd49:	pop    ds
  41dd4a:	cs out dx,al
  41dd4c:	ins    BYTE PTR es:[edi],dx
  41dd4d:	ss fs or ebp,edi
  41dd51:	icebp  
  41dd52:	ja     0x41dd39
  41dd54:	(bad)  
  41dd55:	dec    edi
  41dd56:	pop    edx
  41dd57:	dec    esp
  41dd58:	or     al,0x4b
  41dd5a:	les    edi,FWORD PTR [edx]
  41dd5c:	dec    eax
  41dd5d:	cmc    
  41dd5e:	lods   al,BYTE PTR ds:[esi]
  41dd5f:	and    eax,0xfe382a06
  41dd64:	mov    BYTE PTR [bx+0x10b5],dl
  41dd69:	jnp    0x41dcfb
  41dd6b:	call   0x3555a02d
  41dd70:	sub    al,BYTE PTR [edx-0x24]
  41dd73:	jnp    0x41dd7b
  41dd75:	and    al,0x17
  41dd77:	pusha  
  41dd78:	cmp    al,0xfd
  41dd7a:	jbe    0x41dde1
  41dd7c:	inc    ebx
  41dd7d:	or     DWORD PTR [ebp-0x47d601e5],ebx
  41dd83:	or     eax,0x8f8043d2
  41dd88:	push   esi
  41dd89:	inc    eax
  41dd8a:	jne    0x41dd93
  41dd8c:	es sbb al,0xb5
  41dd8f:	dec    ebx
  41dd90:	adc    ebx,DWORD PTR [esi]
  41dd92:	shl    bl,cl
  41dd94:	sub    DWORD PTR [eax],eax
  41dd96:	sbb    al,0xf7
  41dd98:	rcr    DWORD PTR [ecx-0x2752bed5],1
  41dd9e:	out    dx,eax
  41dd9f:	pop    es
  41dda0:	mov    dh,0xae
  41dda2:	je     0x41dd42
  41dda4:	or     BYTE PTR [ebp-0x1aa36663],cl
  41ddaa:	push   edi
  41ddab:	(bad)  
  41ddac:	les    eax,FWORD PTR [esi+esi*4-0x62]
  41ddb0:	test   BYTE PTR [ecx],al
  41ddb2:	and    edx,DWORD PTR [ebx]
  41ddb4:	dec    ecx
  41ddb5:	loopne 0x41de2b
  41ddb7:	xchg   ebp,eax
  41ddb8:	ja     0x41dd71
  41ddba:	jle    0x41ddfc
  41ddbc:	cmp    ebp,DWORD PTR [eax]
  41ddbe:	sti    
  41ddbf:	lods   eax,DWORD PTR ds:[esi]
  41ddc0:	test   eax,0x29a0e847
  41ddc5:	neg    BYTE PTR [edi+edx*4]
  41ddc8:	lock and ah,bh
  41ddcb:	push   cs
  41ddcc:	jp     0x41dda5
  41ddce:	mov    DWORD PTR [ebx],ecx
  41ddd0:	jnp    0x41ddb8
  41ddd2:	pushf  
  41ddd3:	jnp    0x41de20
  41ddd5:	cmp    ch,bl
  41ddd7:	xor    BYTE PTR [ebp-0x4f],ah
  41ddda:	push   di
  41dddc:	cmp    ebp,esi
  41ddde:	add    BYTE PTR [edx+0x41],bl
  41dde1:	loope  0x41de33
  41dde3:	fsubr  st(7),st
  41dde5:	scas   al,BYTE PTR es:[edi]
  41dde6:	push   esp
  41dde7:	push   ebx
  41dde8:	out    0x4a,al
  41ddea:	test   eax,0x54a51d
  41ddef:	loop   0x41ddfb
  41ddf1:	inc    ecx
  41ddf2:	mov    ecx,DWORD PTR [esi]
  41ddf4:	jecxz  0x41de13
  41ddf6:	dec    ebx
  41ddf7:	or     DWORD PTR [ecx],edx
  41ddf9:	or     DWORD PTR [ecx+0x2d],edi
  41ddfc:	les    edi,FWORD PTR [ebx+0x48]
  41ddff:	(bad)  
  41de01:	xor    al,0x67
  41de03:	fisttp QWORD PTR [ecx-0x49]
  41de06:	neg    BYTE PTR [ebp-0x63959ca4]
  41de0c:	loop   0x41de6d
  41de0e:	cdq    
  41de0f:	push   0xab38e7d2
  41de14:	sbb    BYTE PTR [edi+ebx*1-0x4e7e89d2],ah
  41de1b:	mov    ecx,0x1851c418
  41de20:	jle    0x41de97
  41de22:	es xor dh,al
  41de25:	push   0x79
  41de27:	hlt    
  41de28:	cdq    
  41de29:	lahf   
  41de2a:	hlt    
  41de2b:	mov    ecx,DWORD PTR [ecx]
  41de2d:	sahf   
  41de2e:	and    eax,0xe68fc550
  41de33:	mov    dh,0xd3
  41de35:	cmp    al,0x2
  41de37:	xor    esi,DWORD PTR [ecx+0x62561d6e]
  41de3d:	ins    DWORD PTR es:[edi],dx
  41de3e:	jbe    0x41de0a
  41de40:	adc    DWORD PTR [edx-0x1bd88ba6],0xfffffff1
  41de47:	pop    esi
  41de48:	clc    
  41de49:	pop    ebx
  41de4a:	add    DWORD PTR [esi-0xb],ecx
  41de4d:	das    
  41de4e:	jno    0x41ddeb
  41de50:	dec    eax
  41de51:	cmp    eax,0x79c8cf07
  41de56:	outs   dx,DWORD PTR ds:[esi]
  41de57:	cmp    edx,DWORD PTR cs:[eax-0x2b]
  41de5b:	div    DWORD PTR [edx-0x5c]
  41de5e:	outs   dx,DWORD PTR ds:[esi]
  41de5f:	scas   eax,DWORD PTR es:[edi]
  41de60:	pop    ss
  41de61:	xchg   DWORD PTR [ebx+0x59398c52],ebx
  41de67:	jb     0x41de41
  41de69:	mov    eax,0xfe725d55
  41de6e:	pop    ecx
  41de6f:	xchg   BYTE PTR [edi+0x7bc36110],dl
  41de75:	inc    edi
  41de76:	into   
  41de77:	test   al,0xf7
  41de79:	ins    BYTE PTR es:[edi],dx
  41de7a:	and    BYTE PTR [edi-0x2a1240a6],ch
  41de80:	retf   0xcb73
  41de83:	dec    ebp
  41de84:	mov    ds:0xf2eab5b8,eax
  41de89:	call   DWORD PTR [eax+0x22d86691]
  41de8f:	js     0x41de8a
  41de91:	jae    0x41de1c
  41de93:	inc    DWORD PTR [ebx-0x47]
  41de96:	(bad)  
  41de97:	push   0x37
  41de99:	adc    bl,BYTE PTR [ecx+0x4e0b93ae]
  41de9f:	xchg   DWORD PTR [ebp+0x6422e8b6],edi
  41dea5:	(bad)  
  41dea6:	push   ebp
  41dea7:	pusha  
  41dea8:	shr    BYTE PTR [edx+0x3d9118ff],1
  41deae:	ret    0xafd1
  41deb1:	add    eax,0x953c1c88
  41deb6:	xchg   ebp,eax
  41deb7:	data16 sub dh,dh
  41deba:	dec    eax
  41debb:	int    0xa1
  41debd:	adc    al,BYTE PTR [ebp-0x55cc6b36]
  41dec3:	pop    esi
  41dec4:	hlt    
  41dec5:	hlt    
  41dec6:	sbb    cl,BYTE PTR [esi+0x6e]
  41dec9:	mov    ebp,0xb3e756d1
  41dece:	mov    cl,BYTE PTR [esi]
  41ded0:	sbb    DWORD PTR [ecx-0x7c061cdf],esi
  41ded6:	out    dx,al
  41ded7:	push   ecx
  41ded8:	push   eax
  41ded9:	lahf   
  41deda:	aam    0xd7
  41dedc:	lahf   
  41dedd:	into   
  41dede:	cld    
  41dedf:	mov    ecx,0xcbb727b3
  41dee4:	imul   edx,eax,0xefa57df
  41deea:	inc    eax
  41deeb:	sti    
  41deec:	sar    DWORD PTR [ecx+0x57f433a7],cl
  41def2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41def3:	loope  0x41def9
  41def5:	sub    cl,ah
  41def7:	stos   DWORD PTR es:[edi],eax
  41def8:	stos   DWORD PTR es:[edi],eax
  41def9:	xchg   edi,eax
  41defa:	mov    esp,0x46ea49b5
  41deff:	xor    al,0x4b
  41df01:	mov    ebx,0x8004c862
  41df06:	hlt    
  41df07:	sub    eax,0xeb5c6af7
  41df0c:	aaa    
  41df0d:	shr    edx,0x95
  41df10:	fst    DWORD PTR [ebp-0x276ebf4c]
  41df16:	xor    DWORD PTR [edx-0x7e],eax
  41df19:	sti    
  41df1a:	dec    edx
  41df1b:	and    BYTE PTR [edi-0x7462455],ch
  41df21:	imul   eax,DWORD PTR [esi+0x60],0xffffffad
  41df25:	pop    ss
  41df26:	fwait
  41df27:	or     cl,bl
  41df29:	scas   eax,DWORD PTR es:[edi]
  41df2a:	jae    0x41dec6
  41df2c:	xchg   esi,eax
  41df2d:	add    dh,dl
  41df2f:	popf   
  41df30:	inc    edi
  41df31:	sub    eax,0x8c23ae04
  41df36:	jecxz  0x41dfae
  41df38:	cmp    eax,0x18c5353d
  41df3d:	inc    ebp
  41df3e:	push   0xffffffc5
  41df40:	jge    0x41defb
  41df42:	aam    0xac
  41df44:	mov    DWORD PTR ds:0xf9b0bce0,edx
  41df4a:	or     DWORD PTR [edi],eax
  41df4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df4d:	mov    ah,0x62
  41df4f:	mov    edi,0xdf4d2f1c
  41df54:	xchg   dl,cl
  41df56:	mov    ah,0x58
  41df58:	cmp    dh,ah
  41df5a:	jnp    0x41dfbe
  41df5c:	and    bl,cl
  41df5e:	jmp    0x41dfb4
  41df60:	add    DWORD PTR [edx-0x17],esi
  41df63:	mov    esi,0xf3205199
  41df68:	rcr    BYTE PTR [eax+ecx*8],1
  41df6b:	sub    edi,DWORD PTR [ecx-0x40]
  41df6e:	inc    eax
  41df6f:	cli    
  41df70:	cli    
  41df71:	dec    ecx
  41df72:	popf   
  41df73:	mov    dh,0xb
  41df75:	icebp  
  41df76:	mov    edi,?
  41df78:	jmp    0x41df5b
  41df7a:	lds    esi,FWORD PTR [ecx+0x38]
  41df7d:	add    eax,edi
  41df7f:	xor    ebx,0xb1fdcc67
  41df85:	push   ss
  41df86:	push   ecx
  41df87:	push   es
  41df88:	cwde   
  41df89:	or     ebp,DWORD PTR [esi+0x82e1af7]
  41df8f:	push   esi
  41df90:	jecxz  0x41dfd5
  41df92:	sub    ebx,ecx
  41df94:	mov    BYTE PTR [ebx],al
  41df96:	sub    al,BYTE PTR [eax]
  41df98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df99:	jg     0x41df78
  41df9b:	js     0x41df3a
  41df9d:	aaa    
  41df9e:	adc    eax,0x43112b68
  41dfa3:	jno    0x41df67
  41dfa5:	adc    dl,0x4d
  41dfa8:	fst    QWORD PTR [ebx-0x66b6ff75]
  41dfae:	rcl    BYTE PTR [eax+0x53116d1],cl
  41dfb4:	(bad)  
  41dfb5:	pop    edi
  41dfb6:	idiv   dl
  41dfb8:	mov    esp,0xb404fa84
  41dfbd:	rol    BYTE PTR [ebx+0x28326334],1
  41dfc3:	imul   edx,DWORD PTR [eax+ecx*2+0x67],0xffffff95
  41dfc8:	push   cs
  41dfc9:	fadd   DWORD PTR [edx]
  41dfcb:	imul   edx,DWORD PTR [ebx-0x51],0xc8830d28
  41dfd2:	shl    BYTE PTR [edx+esi*2-0x34],0x47
  41dfd7:	arpl   WORD PTR [esi-0x56953679],bp
  41dfdd:	xchg   edx,eax
  41dfde:	lock call DWORD PTR [ecx+0x49]
  41dfe2:	dec    esi
  41dfe3:	jmp    0x41e008
  41dfe5:	jl     0x41e040
  41dfe7:	jle    0x41e043
  41dfe9:	rcl    DWORD PTR [eax-0x67],1
  41dfec:	jp     0x41e055
  41dfee:	adc    eax,eax
  41dff0:	or     eax,0xbc428cc5
  41dff5:	inc    esp
  41dff6:	jmp    0x41dfc7
  41dff8:	or     esi,DWORD PTR [esi+0x4baf9afc]
  41dffe:	xchg   ebx,eax
  41dfff:	add    BYTE PTR [ecx-0x31],cl
  41e002:	arpl   WORD PTR [esi+eiz*1],bx
  41e005:	sub    al,0x88
  41e007:	daa    
  41e008:	sbb    BYTE PTR [edi+ebp*8],dh
  41e00b:	out    0xfe,ax
  41e00e:	repnz pop ds
  41e010:	jae    0x41e033
  41e012:	xchg   ebx,eax
  41e013:	push   edx
  41e014:	lods   eax,DWORD PTR ds:[esi]
  41e015:	add    BYTE PTR [eax+0xc],al
  41e018:	or     BYTE PTR [esi+0x4a],dh
  41e01b:	jge    0x41dfe0
  41e01d:	mov    DWORD PTR [eax-0x26c8ecba],ebx
  41e023:	in     al,0xb9
  41e025:	and    ebx,DWORD PTR [eax-0x3f]
  41e028:	outs   dx,BYTE PTR ds:[esi]
  41e029:	xchg   BYTE PTR [esi+0x5a],dl
  41e02c:	or     bl,BYTE PTR [esi+ebp*8+0x12]
  41e030:	ror    BYTE PTR [edx+0x1efc2895],0xd3
  41e037:	or     bl,ah
  41e039:	fwait
  41e03a:	xlat   BYTE PTR ds:[ebx]
  41e03b:	sbb    eax,ebx
  41e03d:	sbb    eax,0x369acd1e
  41e042:	and    eax,0x7bc27ca2
  41e047:	lock lods eax,DWORD PTR ds:[esi]
  41e049:	push   esi
  41e04a:	sub    al,0x6b
  41e04c:	xchg   ebp,eax
  41e04d:	sub    BYTE PTR [eax-0x2d0e4b27],0x21
  41e054:	dec    ebx
  41e055:	pop    eax
  41e056:	xchg   ebx,eax
  41e057:	mov    cl,0xba
  41e059:	(bad)  
  41e05a:	stc    
  41e05b:	(bad)  
  41e05c:	jb     0x41e051
  41e05e:	inc    ebx
  41e05f:	mov    al,0x50
  41e061:	ds cmovg edx,ecx
  41e065:	inc    ebx
  41e066:	leave  
  41e067:	xor    BYTE PTR [eax+esi*4+0x32],al
  41e06b:	pop    eax
  41e06c:	or     eax,0x3141c1ef
  41e071:	adc    al,0x15
  41e073:	cmp    esi,edi
  41e075:	xor    BYTE PTR [edx+0x1],dl
  41e078:	aad    0x8e
  41e07a:	gs (bad) 
  41e07c:	xlat   BYTE PTR ds:[ebx]
  41e07d:	(bad)  
  41e07e:	nop
  41e07f:	xchg   ebx,eax
  41e080:	test   DWORD PTR [edx+eiz*2-0x3e],esp
  41e084:	adc    DWORD PTR [edx*1-0x59d338cb],esp
  41e08b:	stos   DWORD PTR es:[edi],eax
  41e08c:	cbw    
  41e08e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e08f:	xlat   BYTE PTR ds:[ebx]
  41e090:	test   bh,0x3b
  41e093:	inc    eax
  41e094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e095:	xor    BYTE PTR [eax],0x27
  41e098:	xchg   ebx,eax
  41e099:	loope  0x41e09f
  41e09b:	lahf   
  41e09c:	jmp    0x41e07c
  41e09e:	push   cs
  41e09f:	push   ebx
  41e0a0:	xor    DWORD PTR [edi],esp
  41e0a2:	add    BYTE PTR [esp+ebp*1],dh
  41e0a5:	lahf   
  41e0a6:	out    dx,al
  41e0a7:	pop    edi
  41e0a8:	xlat   BYTE PTR ds:[ebx]
  41e0a9:	push   edx
  41e0aa:	jp     0x41e0bb
  41e0ac:	mov    esi,0xdf71dbe2
  41e0b1:	push   ss
  41e0b2:	jle    0x41e0f0
  41e0b4:	mov    eax,0x63040d45
  41e0b9:	pop    esi
  41e0ba:	or     esi,DWORD PTR [edx-0x3a]
  41e0bd:	daa    
  41e0be:	pushf  
  41e0bf:	mov    esi,edx
  41e0c1:	mov    bl,0x20
  41e0c3:	retf   0x35db
  41e0c6:	xor    bl,ch
  41e0c8:	adc    al,0xd7
  41e0ca:	loopne 0x41e0f0
  41e0cc:	pop    eax
  41e0cd:	jo     0x41e0a3
  41e0cf:	mov    bh,0x90
  41e0d1:	cs iret 
  41e0d3:	lock adc DWORD PTR [ebp+0x29],ecx
  41e0d7:	dec    ebx
  41e0d8:	mov    ds,WORD PTR [ecx+0x6f]
  41e0db:	call   0x2f32b571
  41e0e0:	stos   DWORD PTR es:[edi],eax
  41e0e1:	loopne 0x41e09b
  41e0e3:	pop    ds
  41e0e4:	add    BYTE PTR [edi+edi*2+0x298bf34d],0xac
  41e0ec:	or     al,0x82
  41e0ee:	nop
  41e0ef:	adc    ah,dl
  41e0f1:	pop    esi
  41e0f2:	add    BYTE PTR [ebp+eax*1-0x4c],ah
  41e0f6:	add    ebp,DWORD PTR [edi+ebx*2+0x2dd60c2d]
  41e0fd:	jecxz  0x41e09c
  41e0ff:	cwde   
  41e100:	je     0x41e179
  41e102:	ja     0x41e084
  41e104:	adc    BYTE PTR [ebx],al
  41e106:	sub    edx,DWORD PTR [edx+0x6da4b302]
  41e10c:	sbb    esp,DWORD PTR [ecx-0x3c]
  41e10f:	push   eax
  41e110:	test   BYTE PTR [edx+0x1f],ah
  41e113:	pop    ebx
  41e114:	lds    esp,FWORD PTR [ebp-0x639267c8]
  41e11a:	push   edx
  41e11b:	xchg   ecx,eax
  41e11c:	mov    dl,0x73
  41e11e:	pop    ds
  41e11f:	out    0x93,al
  41e121:	sti    
  41e122:	rol    DWORD PTR [edx+0x5cb9f4d4],0x29
  41e129:	(bad)  
  41e12a:	jge    0x41e0dc
  41e12c:	stos   DWORD PTR es:[edi],eax
  41e12d:	add    eax,0xd3212a8c
  41e132:	cdq    
  41e133:	jb     0x41e173
  41e135:	pcmpeqb mm5,QWORD PTR [edx-0x27]
  41e139:	clc    
  41e13a:	and    al,0xa5
  41e13c:	shl    DWORD PTR [ebx-0x5fab8089],1
  41e142:	jmp    0x41e11b
  41e144:	jecxz  0x41e148
  41e146:	mov    DWORD PTR [edi-0x10],ebp
  41e149:	add    al,0x6a
  41e14b:	inc    edx
  41e14c:	lds    esp,FWORD PTR [edx+0x1d6588e2]
  41e152:	sbb    eax,0x7f50ac24
  41e157:	(bad)  
  41e158:	mov    edi,0x5a8b812b
  41e15d:	jecxz  0x41e185
  41e15f:	popf   
  41e160:	je     0x41e163
  41e162:	sar    ch,cl
  41e164:	dec    edi
  41e165:	popa   
  41e166:	imul   eax,DWORD PTR [edi+0x23],0xffffffdc
  41e16a:	outs   dx,DWORD PTR ds:[esi]
  41e16b:	clc    
  41e16c:	pusha  
  41e16d:	sbb    al,0x59
  41e16f:	or     ebx,esi
  41e171:	sbb    esp,DWORD PTR [esi]
  41e173:	popf   
  41e174:	inc    edx
  41e175:	pop    ss
  41e176:	mov    eax,0x26faca82
  41e17b:	and    cl,BYTE PTR [ebx+0x70]
  41e17e:	hlt    
  41e17f:	mov    ch,BYTE PTR [ecx-0x4add5058]
  41e185:	int3   
  41e186:	imul   esp,ecx,0xffffffa0
  41e189:	stos   DWORD PTR es:[edi],eax
  41e18a:	and    bl,bl
  41e18c:	into   
  41e18d:	xor    DWORD PTR [ebp-0x6c81cb1a],eax
  41e193:	repz sbb dh,cl
  41e196:	xlat   BYTE PTR ds:[ebx]
  41e197:	and    al,0x61
  41e199:	xchg   ecx,eax
  41e19a:	div    BYTE PTR [esi+0x32]
  41e19d:	test   BYTE PTR ds:0x5beca0d6,ah
  41e1a3:	push   ecx
  41e1a4:	(bad)  
  41e1a6:	retf   
  41e1a7:	call   0xbd6b6cb2
  41e1ac:	int    0x5
  41e1ae:	sub    BYTE PTR [ecx],dh
  41e1b0:	push   edx
  41e1b1:	mov    dl,0x70
  41e1b3:	stos   BYTE PTR es:[edi],al
  41e1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1b5:	loope  0x41e1e6
  41e1b7:	mov    al,ds:0x117e7ee5
  41e1bc:	inc    esi
  41e1bd:	xchg   ebp,eax
  41e1be:	xchg   edx,eax
  41e1bf:	dec    ebx
  41e1c0:	push   edi
  41e1c1:	push   ds
  41e1c2:	mov    edi,0x14dcdb8e
  41e1c7:	dec    eax
  41e1c8:	leave  
  41e1c9:	(bad)
  41e1cc:	inc    ebx
  41e1cd:	pusha  
  41e1ce:	dec    ebx
  41e1cf:	xchg   bx,ax
  41e1d1:	aaa    
  41e1d2:	ins    DWORD PTR es:[edi],dx
  41e1d3:	test   eax,0x70f88d9b
  41e1d8:	mov    bh,0x10
  41e1da:	push   cs
  41e1db:	pop    esi
  41e1dc:	sbb    BYTE PTR [edi],bl
  41e1de:	jp     0x41e178
  41e1e0:	lock xlat BYTE PTR ds:[ebx]
  41e1e2:	adc    BYTE PTR [ebp+0x4f],al
  41e1e5:	mov    ebp,0xb6e29090
  41e1ea:	shr    ebp,0xe6
  41e1ed:	dec    edi
  41e1ee:	xor    DWORD PTR [ebx],esp
  41e1f0:	dec    ecx
  41e1f1:	mov    bl,0xb1
  41e1f3:	pop    ebp
  41e1f4:	aam    0x18
  41e1f6:	mov    ds:0x998d9a23,eax
  41e1fb:	xor    ebp,edx
  41e1fd:	pop    esi
  41e1fe:	mov    bh,0xb1
  41e200:	lock pop esi
  41e202:	and    al,0xec
  41e204:	push   cs
  41e205:	inc    ecx
  41e206:	xor    ah,BYTE PTR [edx-0x315ddf49]
  41e20c:	out    dx,eax
  41e20d:	fwait
  41e20e:	mov    esp,0x26a82094
  41e213:	shl    BYTE PTR [edx+0x191a6af2],0xfa
  41e21a:	inc    edi
  41e21b:	fiadd  WORD PTR [edx+0x46036c07]
  41e221:	retf   
  41e222:	arpl   WORD PTR [ebx+0x6134e5a1],cx
  41e228:	popf   
  41e229:	jmp    0x41e200
  41e22b:	and    eax,DWORD PTR [eax]
  41e22d:	mov    ebp,0x355ad5d
  41e232:	inc    bp
  41e234:	ficom  DWORD PTR [ecx+edx*1]
  41e237:	push   esp
  41e238:	stos   DWORD PTR es:[di],eax
  41e23a:	push   es
  41e23b:	jl     0x41e1c4
  41e23d:	(bad)  
  41e23e:	cmc    
  41e23f:	and    al,0xa5
  41e241:	lds    edx,FWORD PTR [eax]
  41e243:	test   eax,0x901ecfab
  41e248:	fnstenv [ecx+0x1c36ecb1]
  41e24e:	xor    bl,BYTE PTR [edi+0xfb7f51b]
  41e254:	stos   BYTE PTR es:[edi],al
  41e255:	call   DWORD PTR ss:[esi+0x480299cf]
  41e25c:	push   0x35e81cf9
  41e261:	scas   eax,DWORD PTR es:[edi]
  41e262:	or     BYTE PTR [ecx+edi*1],al
  41e265:	push   ds
  41e266:	pop    ebp
  41e267:	iret   
  41e268:	(bad)  
  41e26a:	sub    edi,eax
  41e26c:	arpl   WORD PTR [ecx+0x3d866f89],bx
  41e272:	push   ecx
  41e273:	fisub  WORD PTR [edi-0x2f]
  41e276:	shr    DWORD PTR [eax],cl
  41e278:	mov    ds:0x599f2409,eax
  41e27d:	fcmovb st,st(7)
  41e27f:	gs jle 0x41e2c6
  41e282:	sar    DWORD PTR [edx],1
  41e284:	(bad)  
  41e286:	lods   eax,DWORD PTR ds:[esi]
  41e287:	mov    al,dl
  41e289:	aaa    
  41e28a:	cmp    dh,BYTE PTR [edi-0x767ad092]
  41e290:	mov    al,ds:0x56415c4a
  41e295:	jo     0x41e27b
  41e297:	xor    al,0x55
  41e299:	stos   DWORD PTR es:[edi],eax
  41e29a:	ror    BYTE PTR [esi-0x22],cl
  41e29d:	inc    edx
  41e29e:	fcom   QWORD PTR [ebx]
  41e2a0:	push   ss
  41e2a1:	stc    
  41e2a2:	push   edi
  41e2a3:	out    dx,eax
  41e2a4:	xchg   bh,ch
  41e2a6:	sub    BYTE PTR [ecx+0x0],0x5f
  41e2aa:	icebp  
  41e2ab:	retf   
  41e2ac:	inc    edx
  41e2ad:	gs inc ebp
  41e2af:	or     dh,bl
  41e2b1:	xor    edi,esi
  41e2b3:	adc    DWORD PTR [eax+eax*8+0x5b],edi
  41e2b7:	mov    bh,0x5d
  41e2b9:	cmp    DWORD PTR [esi+edi*4+0x73],ebp
  41e2bd:	jbe    0x41e2db
  41e2bf:	out    0x9e,al
  41e2c1:	or     ebx,esp
  41e2c3:	mov    ebx,0x2621d2dd
  41e2c8:	arpl   bp,bx
  41e2ca:	in     al,0xb0
  41e2cc:	mov    al,ds:0xdad1dfc1
  41e2d1:	imul   edi,ecx,0xfaa0f60f
  41e2d7:	mov    gs,WORD PTR [esi+0x2b]
  41e2da:	mov    ds:0xf1fb8be3,eax
  41e2df:	fs pop edi
  41e2e1:	pop    ss
  41e2e2:	fst    DWORD PTR [esi]
  41e2e4:	or     dl,bl
  41e2e6:	ja     0x41e2a4
  41e2e8:	sub    BYTE PTR [esi+0x23c45b2c],bl
  41e2ee:	lock lds ebp,FWORD PTR ds:0x421190a4
  41e2f5:	lea    ebp,[edi+0x7a]
  41e2f8:	cmp    BYTE PTR [esi-0x47],al
  41e2fb:	iret   
  41e2fc:	xchg   DWORD PTR [edi],ecx
  41e2fe:	xchg   edi,eax
  41e2ff:	mov    eax,0x7d6cb7b2
  41e304:	xchg   edx,eax
  41e305:	xlat   BYTE PTR ds:[ebx]
  41e306:	sbb    eax,0x3440053c
  41e30b:	dec    edi
  41e30c:	sub    ebp,DWORD PTR ds:0x1ad1e054
  41e312:	(bad)  
  41e313:	mov    cl,BYTE PTR [ebx-0x44c268d2]
  41e319:	jb     0x41e345
  41e31b:	adc    ecx,DWORD PTR [eax-0x80]
  41e31e:	dec    edi
  41e31f:	xor    edx,DWORD PTR [esi+ebp*1-0x27]
  41e323:	repz mov ebp,0xd7830432
  41e329:	fwait
  41e32a:	xchg   edx,eax
  41e32b:	mov    esi,0x213c093e
  41e330:	in     eax,0x38
  41e332:	push   ebx
  41e333:	(bad)  
  41e334:	into   
  41e335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e336:	imul   ebx,DWORD PTR [edi],0xffffffb2
  41e339:	fild   DWORD PTR [ecx+0x7c97f1f3]
  41e33f:	iret   
  41e340:	aaa    
  41e341:	mov    eax,ds:0xb53c8bef
  41e346:	add    DWORD PTR [edi-0x1b],esp
  41e349:	out    dx,eax
  41e34a:	fs sahf 
  41e34c:	mov    esi,DWORD PTR [esi+0x75]
  41e34f:	shl    cl,1
  41e351:	jmp    FWORD PTR [ebx-0x2c]
  41e354:	sbb    bl,BYTE PTR [eax+eiz*2]
  41e357:	add    al,0x8d
  41e359:	xor    ch,ah
  41e35b:	pop    ds
  41e35c:	jmp    0x41e3c6
  41e35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e35f:	dec    ebp
  41e360:	or     dh,BYTE PTR [ecx-0x13]
  41e363:	mov    ebx,0x6ff950ad
  41e368:	sub    dh,bh
  41e36a:	inc    ecx
  41e36b:	ficomp WORD PTR [edi+0x4c]
  41e36e:	cmp    ebp,ecx
  41e370:	loopne 0x41e3a7
  41e372:	sbb    al,0xe7
  41e374:	clc    
  41e375:	push   edi
  41e376:	push   ebx
  41e377:	test   cl,al
  41e379:	xchg   ebx,eax
  41e37a:	mov    ds:0xca3a8717,eax
  41e37f:	xchg   esp,eax
  41e380:	mov    ds:0xa9941a89,al
  41e385:	pop    esp
  41e386:	xor    al,0x90
  41e388:	jne    0x41e38f
  41e38a:	mov    ds:0x73a2f854,eax
  41e38f:	test   BYTE PTR [ebx],ah
  41e391:	xchg   esi,eax
  41e392:	xor    BYTE PTR [edi],al
  41e394:	pop    esi
  41e395:	cmp    DWORD PTR [ebx+ebx*1-0x22],ebx
  41e399:	xchg   ebx,eax
  41e39a:	xor    DWORD PTR [edx-0x753045a7],edx
  41e3a0:	mov    esp,0x8135a761
  41e3a5:	mov    cl,0x5b
  41e3a7:	std    
  41e3a8:	pusha  
  41e3a9:	xchg   ch,dl
  41e3ab:	into   
  41e3ac:	mov    esi,0xe2f1de9a
  41e3b1:	ds mov edx,0x117b5024
  41e3b7:	jecxz  0x41e381
  41e3b9:	and    BYTE PTR [ecx+0x2cc69f4b],ch
  41e3bf:	sbb    eax,0xf9c8056b
  41e3c4:	cmp    dl,bl
  41e3c6:	jmp    0x81195cd0
  41e3cb:	xor    al,0x45
  41e3cd:	(bad)  
  41e3ce:	int3   
  41e3cf:	xor    ax,0x96b6
  41e3d3:	call   0xc889:0x5e20d9e3
  41e3da:	js     0x41e3c4
  41e3dc:	fdiv   st,st(7)
  41e3de:	unpcklps xmm6,XMMWORD PTR [ecx+0x34]
  41e3e2:	and    DWORD PTR [ebp+esi*1+0x20],esi
  41e3e6:	sbb    DWORD PTR [eax+0x69],esi
  41e3e9:	mov    cl,0x8
  41e3eb:	leave  
  41e3ec:	or     eax,0x7bbece81
  41e3f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3f2:	mov    cl,0x82
  41e3f4:	aam    0xed
  41e3f6:	out    dx,eax
  41e3f7:	jp     0x41e440
  41e3f9:	fnstcw WORD PTR [eax]
  41e3fb:	lds    ebp,FWORD PTR [ecx+ecx*8+0x5812fe16]
  41e402:	sub    al,BYTE PTR [esi-0x3cc797bb]
  41e408:	sbb    al,0x89
  41e40a:	out    0xe0,al
  41e40c:	test   eax,0xe9ebad78
  41e412:	cmp    eax,0x8e726b6f
  41e417:	mov    edx,0x78af992f
  41e41c:	dec    ebp
  41e41d:	fmul   DWORD PTR [ecx+0x77]
  41e420:	inc    esi
  41e421:	ins    BYTE PTR es:[edi],dx
  41e422:	test   eax,0x1bfe2877
  41e427:	add    al,0x82
  41e429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e42b:	loopne 0x41e417
  41e42d:	mov    WORD PTR [edx+edx*1+0x18],fs
  41e431:	cmp    al,BYTE PTR ds:0xaaf277a5
  41e437:	and    edx,DWORD PTR [edi+eax*8-0x3]
  41e43b:	bound  edx,QWORD PTR [ecx+0x14]
  41e43e:	nop
  41e43f:	mov    ebx,ecx
  41e441:	out    dx,eax
  41e442:	jns    0x41e440
  41e444:	dec    edi
  41e445:	xchg   DWORD PTR [eax],esi
  41e447:	outs   dx,BYTE PTR ds:[esi]
  41e448:	loopne 0x41e445
  41e44a:	mov    esp,DWORD PTR [ecx]
  41e44c:	loop   0x41e4c8
  41e44e:	aaa    
  41e44f:	cmp    ah,bh
  41e451:	std    
  41e452:	dec    esp
  41e453:	jae    0x41e4d3
  41e455:	out    0x5e,al
  41e457:	lds    ebp,FWORD PTR [ecx-0x33]
  41e45a:	mov    ds:0xfa5ba386,al
  41e45f:	test   DWORD PTR [ebx-0x692596e9],ecx
  41e465:	mov    ds:0xa2541062,eax
  41e46a:	sbb    bl,BYTE PTR [edi]
  41e46c:	mov    edx,0xc031c60b
  41e471:	popf   
  41e472:	ret    0x59e2
  41e475:	inc    BYTE PTR [esi-0x2658ca46]
  41e47b:	pop    esp
  41e47c:	sub    BYTE PTR [ebx+ebx*8],cl
  41e47f:	out    0xa0,al
  41e481:	or     al,0xa3
  41e483:	repnz mov DWORD PTR [edx+0x14],0xfb68ed2f
  41e48b:	dec    ecx
  41e48c:	pmullw mm6,QWORD PTR [esp+eax*2]
  41e490:	in     al,0x75
  41e492:	jbe    0x41e4c5
  41e494:	push   ebx
  41e495:	jae    0x41e48c
  41e497:	jg     0x41e491
  41e499:	data16 jb 0x41e4e8
  41e49c:	cld    
  41e49d:	arpl   WORD PTR [edi+0x690f859f],di
  41e4a3:	int3   
  41e4a4:	xchg   esp,eax
  41e4a5:	pop    edi
  41e4a6:	ret    
  41e4a7:	into   
  41e4a8:	mov    eax,0x4a560d63
  41e4ad:	ds scas al,BYTE PTR es:[edi]
  41e4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b0:	fadd   QWORD PTR [ebp-0x1f]
  41e4b3:	jge    0x41e44f
  41e4b5:	loop   0x41e4e6
  41e4b7:	adc    eax,0x721680e8
  41e4bc:	sbb    al,BYTE PTR [ebp-0x2736b354]
  41e4c2:	iret   
  41e4c3:	lock push cs
  41e4c5:	jae    0x41e4eb
  41e4c7:	jns    0x41e4c7
  41e4c9:	xor    BYTE PTR [eax-0x11],dh
  41e4cc:	ss xchg ebx,eax
  41e4ce:	inc    eax
  41e4cf:	lods   eax,DWORD PTR ds:[esi]
  41e4d0:	stc    
  41e4d1:	les    esp,FWORD PTR [esi-0x74]
  41e4d4:	cmp    DWORD PTR [ebx-0x5e3096a1],edx
  41e4da:	enter  0x7b46,0x33
  41e4de:	call   0xd72a5dc8
  41e4e3:	dec    esi
  41e4e4:	data16 jecxz 0x41e536
  41e4e7:	cmp    ah,al
  41e4e9:	popf   
  41e4ea:	addr16 mov eax,0xfbac0a01
  41e4f0:	outs   dx,BYTE PTR ds:[esi]
  41e4f1:	out    dx,al
  41e4f2:	xor    al,0x63
  41e4f4:	aad    0x90
  41e4f6:	add    eax,0x5d030ee6
  41e4fb:	sahf   
  41e4fc:	repnz fyl2xp1 
  41e4ff:	loop   0x41e57c
  41e501:	scas   eax,DWORD PTR es:[edi]
  41e502:	mov    dl,0x18
  41e504:	add    eax,0xca5d94ee
  41e509:	xor    eax,0xc74ad05e
  41e50e:	or     ebx,DWORD PTR [edx+0x5b7466ae]
  41e514:	imul   ebp,DWORD PTR [eax+0x11],0x4c89b073
  41e51b:	fdivr  QWORD PTR [esi+0x1c263a2b]
  41e521:	sbb    BYTE PTR [ebp-0x234f39d7],dl
  41e527:	sub    edx,edx
  41e529:	nop
  41e52a:	inc    esp
  41e52b:	inc    esp
  41e52c:	sbb    BYTE PTR [ebp+0x71],bh
  41e52f:	push   0x7c92503
  41e534:	mov    bh,0x14
  41e536:	jmp    0xc0beed42
  41e53b:	fild   DWORD PTR [edi]
  41e53d:	dec    esp
  41e53e:	inc    edx
  41e53f:	loop   0x41e4fa
  41e541:	sbb    BYTE PTR [esi+0x4],ch
  41e544:	cmp    ch,BYTE PTR [ecx-0x5]
  41e547:	adc    eax,0x73912fb2
  41e54c:	jb     0x41e4eb
  41e54e:	inc    esp
  41e54f:	in     al,0xb5
  41e551:	add    bh,BYTE PTR [edi]
  41e553:	jmp    0x10248ddd
  41e558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e559:	xor    dl,BYTE PTR [ebx]
  41e55b:	mov    dl,0x66
  41e55d:	mov    dl,0x7b
  41e55f:	iret   
  41e560:	int3   
  41e561:	and    DWORD PTR [edx-0x68],ebx
  41e564:	popa   
  41e565:	inc    edx
  41e566:	ja     0x41e51f
  41e568:	or     eax,0x2cf95640
  41e56d:	add    ah,BYTE PTR [ebp-0x66]
  41e570:	push   ss
  41e571:	jbe    0x41e55a
  41e573:	inc    ebp
  41e574:	jns    0x41e5d4
  41e576:	add    bh,bh
  41e578:	and    al,0xc1
  41e57a:	xor    ebp,DWORD PTR [ebx-0x57]
  41e57d:	ins    BYTE PTR es:[edi],dx
  41e57e:	cmp    BYTE PTR [eax-0x22],ch
  41e581:	push   ebp
  41e582:	ins    DWORD PTR es:[edi],dx
  41e583:	loope  0x41e531
  41e585:	stos   BYTE PTR es:[edi],al
  41e586:	jp     0x41e52c
  41e588:	call   DWORD PTR [eax-0x47dd25e6]
  41e58e:	xchg   ecx,eax
  41e58f:	xlat   BYTE PTR ds:[ebx]
  41e590:	add    edi,0x8ba97f53
  41e596:	add    al,0x1f
  41e598:	outs   dx,DWORD PTR ds:[esi]
  41e599:	mov    ch,0xf6
  41e59b:	adc    esi,0xfffffff7
  41e59e:	in     al,0x2b
  41e5a0:	and    eax,0x15a5790f
  41e5a5:	imul   edi,DWORD PTR [ebp+0x3687ca6],0x6c6ccb66
  41e5af:	cmp    DWORD PTR [edx],edx
  41e5b1:	push   ss
  41e5b2:	and    ecx,esp
  41e5b4:	xchg   ecx,eax
  41e5b5:	hlt    
  41e5b6:	ror    DWORD PTR [ebx-0x4fa7cfee],cl
  41e5bc:	dec    ecx
  41e5bd:	add    BYTE PTR [esi],ah
  41e5bf:	pop    ebx
  41e5c0:	sbb    esp,DWORD PTR [edi-0x2d41e3f4]
  41e5c6:	push   0x3b
  41e5c8:	cmp    bh,dh
  41e5ca:	mov    cl,0x7
  41e5cc:	sbb    BYTE PTR [edx-0x270a6a54],ah
  41e5d2:	and    BYTE PTR [ecx-0x54],dl
  41e5d5:	cmp    eax,0x8392156d
  41e5da:	and    cl,al
  41e5dc:	dec    BYTE PTR [eax+eiz*8-0x6d]
  41e5e0:	call   0x6b66944b
  41e5e5:	xchg   BYTE PTR [eax+0x73],dl
  41e5e8:	sub    DWORD PTR [ebp-0x8],ecx
  41e5eb:	and    cl,BYTE PTR [edx+esi*1]
  41e5ee:	add    DWORD PTR es:[ebp-0x56a1f895],esp
  41e5f5:	ror    DWORD PTR [edx-0x3032d15e],cl
  41e5fb:	jno    0x41e5a8
  41e5fd:	test   DWORD PTR [edx-0x3e],edi
  41e600:	push   ss
  41e601:	call   0xc27be222
  41e606:	das    
  41e607:	call   0x7ef5d81
  41e60c:	cs (bad) 
  41e60e:	mov    BYTE PTR [ebx],dh
  41e610:	sub    eax,0xdeb2fa27
  41e615:	jnp    0x41e5fc
  41e617:	push   ecx
  41e618:	mov    ecx,0xf36e3a09
  41e61d:	aam    0x89
  41e61f:	ja     0x41e676
  41e621:	xlat   BYTE PTR ds:[ebx]
  41e622:	jge    0x41e63e
  41e624:	pop    edx
  41e625:	add    eax,0xb7e3d787
  41e62a:	and    eax,0xb9f23240
  41e62f:	out    dx,eax
  41e630:	sbb    edi,DWORD PTR [edi]
  41e632:	mov    DWORD PTR [esp+edx*8-0x3aaaf514],eax
  41e639:	popf   
  41e63a:	stos   BYTE PTR es:[edi],al
  41e63b:	dec    edi
  41e63c:	xor    DWORD PTR [ebp+0x7c],edx
  41e63f:	add    esp,DWORD PTR [esi-0x6d]
  41e642:	in     al,0xd
  41e644:	or     esp,DWORD PTR [ecx]
  41e646:	or     al,0x9f
  41e648:	xchg   DWORD PTR [ebp+0x5918e3ca],ebp
  41e64e:	(bad)  
  41e64f:	xlat   BYTE PTR ds:[ebx]
  41e650:	push   cs
  41e651:	pop    eax
  41e652:	hlt    
  41e653:	int3   
  41e654:	sub    ebx,DWORD PTR [esi+0x2e]
  41e657:	mul    DWORD PTR [esi+0x10]
  41e65a:	xor    ah,bh
  41e65c:	or     al,0x69
  41e65e:	dec    ebx
  41e65f:	xor    DWORD PTR [edx],esi
  41e661:	cwde   
  41e662:	mov    edx,DWORD PTR [eax]
  41e664:	mov    DWORD PTR [eax],edx
  41e666:	inc    ebp
  41e667:	mov    BYTE PTR ds:0x508ad513,dh
  41e66d:	inc    edx
  41e66e:	jne    0x41e5f0
  41e670:	cmp    eax,esi
  41e672:	retf   0xdbe6
  41e675:	dec    edx
  41e676:	cmp    al,0x82
  41e678:	(bad)  
  41e679:	or     ch,BYTE PTR [edx-0x7b]
  41e67c:	idiv   ch
  41e67e:	pcmpeqw mm0,mm5
  41e681:	adc    al,0x10
  41e683:	inc    esi
  41e684:	and    al,0x1c
  41e686:	ret    
  41e687:	mov    BYTE PTR [eax+edi*2+0x282376da],bl
  41e68e:	das    
  41e68f:	(bad)  
  41e690:	(bad)  
  41e691:	xor    BYTE PTR [ecx+eax*8],dh
  41e694:	loope  0x41e700
  41e696:	gs sbb al,0x98
  41e699:	stos   BYTE PTR es:[edi],al
  41e69a:	pop    ecx
  41e69b:	cld    
  41e69c:	or     DWORD PTR [esi+0x6fe8fdc8],esi
  41e6a2:	dec    ebx
  41e6a3:	xchg   edx,eax
  41e6a4:	std    
  41e6a5:	sub    edx,DWORD PTR [ebx-0x29307446]
  41e6ab:	(bad)  
  41e6ac:	int    0x1e
  41e6ae:	xchg   esi,eax
  41e6af:	dec    esp
  41e6b0:	adc    BYTE PTR [edx+0x5e],bl
  41e6b3:	cmp    esi,DWORD PTR [ebp-0x80]
  41e6b6:	xor    edx,DWORD PTR [ebp+0x50]
  41e6b9:	aas    
  41e6ba:	loope  0x41e708
  41e6bc:	sbb    DWORD PTR [esi],0xffffffd3
  41e6bf:	in     eax,0x19
  41e6c1:	xchg   DWORD PTR [edx-0x475aae9],esi
  41e6c7:	or     BYTE PTR [edi-0x687c4e9],cl
  41e6cd:	xchg   ebx,eax
  41e6ce:	dec    esp
  41e6cf:	fiadd  DWORD PTR [ecx-0x48f4720c]
  41e6d5:	and    bl,BYTE PTR [ecx-0x7fdb074b]
  41e6db:	add    esp,DWORD PTR gs:[ecx-0x2e]
  41e6df:	sub    eax,0xf1153ad0
  41e6e4:	jne    0x41e709
  41e6e6:	gs jg  0x41e747
  41e6e9:	clc    
  41e6ea:	int    0xe3
  41e6ec:	sbb    DWORD PTR [ebp-0x7d374b53],0xfffffffa
  41e6f3:	fisttp WORD PTR [eax]
  41e6f5:	adc    DWORD PTR [edx+edx*4-0x4bf67f1f],ebx
  41e6fc:	or     BYTE PTR [ecx],ah
  41e6fe:	stos   DWORD PTR es:[edi],eax
  41e6ff:	ror    ah,cl
  41e701:	jae    0x41e690
  41e703:	ins    DWORD PTR es:[edi],dx
  41e704:	repnz ficom DWORD PTR gs:[ebp+edi*4-0xcb798aa]
  41e70d:	or     ah,BYTE PTR [ecx-0x54]
  41e710:	ss mov al,0x7e
  41e713:	xlat   BYTE PTR ds:[ebx]
  41e714:	inc    eax
  41e715:	cmp    eax,0xb2227dc0
  41e71a:	sbb    eax,0x856ae83a
  41e71f:	das    
  41e720:	push   ss
  41e721:	shl    DWORD PTR [esi],cl
  41e723:	jno    0x41e73b
  41e725:	or     ah,BYTE PTR [esp+edx*2-0x3]
  41e729:	inc    ecx
  41e72a:	add    al,0x62
  41e72c:	mov    cl,BYTE PTR [ecx+0x7390ca15]
  41e732:	dec    ebx
  41e733:	add    DWORD PTR [edx+0x59],esi
  41e736:	nop
  41e737:	xor    DWORD PTR [ebx+0x774a6588],0x84720525
  41e741:	int    0x39
  41e743:	(bad)  
  41e744:	jne    0x41e771
  41e746:	sbb    eax,0xe9d0a514
  41e74b:	lods   eax,DWORD PTR ds:[esi]
  41e74c:	aam    0xaa
  41e74e:	ss inc edx
  41e750:	rcr    DWORD PTR [edx+0x1d],cl
  41e753:	jbe    0x41e743
  41e755:	mov    esp,0x4cf79730
  41e75a:	pop    ss
  41e75b:	std    
  41e75c:	fst    DWORD PTR [esi-0x25]
  41e75f:	sbb    BYTE PTR [eax-0x29],0x9c
  41e763:	sub    al,0xd0
  41e765:	ret    0xe5f5
  41e768:	(bad)  
  41e769:	sub    DWORD PTR [ecx-0x5a34cd47],edx
  41e76f:	call   0xfd50:0xd99ee315
  41e776:	jl     0x41e767
  41e778:	loope  0x41e7da
  41e77a:	gs pop esi
  41e77c:	add    esp,ebx
  41e77e:	sahf   
  41e77f:	out    0xe2,al
  41e781:	jae    0x41e782
  41e783:	pop    eax
  41e784:	sub    dl,dl
  41e786:	(bad)  
  41e787:	and    al,BYTE PTR [ebx-0x4b]
  41e78a:	call   0x81b1:0x839790e1
  41e791:	and    al,0xc4
  41e793:	adc    DWORD PTR ds:0x7de947f,eax
  41e799:	pop    edi
  41e79a:	fucom  st(5)
  41e79c:	cdq    
  41e79d:	dec    ebx
  41e79e:	mov    eax,0x107dadf8
  41e7a3:	mov    ecx,0x3043d77a
  41e7a8:	jle    0x41e7f3
  41e7aa:	test   al,ah
  41e7ac:	or     BYTE PTR [ebx+0x66],bh
  41e7af:	(bad)  
  41e7b0:	out    0xf8,eax
  41e7b2:	or     ecx,edi
  41e7b4:	mov    dh,0xb4
  41e7b6:	push   esi
  41e7b7:	into   
  41e7b8:	scas   eax,DWORD PTR es:[edi]
  41e7b9:	out    dx,eax
  41e7ba:	adc    ebp,edi
  41e7bc:	retf   
  41e7bd:	aas    
  41e7be:	xchg   ebp,eax
  41e7bf:	mov    BYTE PTR [ebx-0x1a59f686],dl
  41e7c5:	pop    es
  41e7c6:	lods   al,BYTE PTR ds:[esi]
  41e7c7:	fist   WORD PTR [edi+edi*1+0x40]
  41e7cb:	push   ebx
  41e7cc:	xchg   esp,eax
  41e7cd:	out    0x30,al
  41e7cf:	jecxz  0x41e7e4
  41e7d1:	or     al,BYTE PTR ds:0x9fa2becd
  41e7d7:	xchg   esi,eax
  41e7d8:	and    eax,0x261cdcd5
  41e7dd:	sbb    ecx,eax
  41e7df:	push   edi
  41e7e0:	addr16 dec edi
  41e7e2:	inc    edi
  41e7e3:	cli    
  41e7e4:	int    0x71
  41e7e6:	mov    WORD PTR [ebx-0x64078b10],cs
  41e7ec:	cmp    DWORD PTR [ebx+eiz*1],esp
  41e7ef:	in     eax,0xbc
  41e7f1:	or     esi,esp
  41e7f3:	and    bl,BYTE PTR [eax+0x4765d58]
  41e7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7fa:	mov    edi,0xce24fc5
  41e7ff:	not    DWORD PTR [edx]
  41e801:	leave  
  41e802:	ficom  WORD PTR [ecx+0x5a0b2aee]
  41e808:	add    ch,bl
  41e80a:	idiv   BYTE PTR [ecx-0x19676db5]
  41e810:	and    edi,DWORD PTR [ecx]
  41e812:	repz sbb esi,DWORD PTR [edx]
  41e815:	clc    
  41e816:	mov    ds:0x4b79243d,eax
  41e81b:	mov    ebp,0x34119fdb
  41e820:	enter  0x15e9,0x4c
  41e824:	daa    
  41e825:	das    
  41e826:	stos   DWORD PTR es:[edi],eax
  41e827:	dec    eax
  41e828:	pop    eax
  41e829:	cwde   
  41e82a:	cli    
  41e82b:	add    edi,DWORD PTR [esi+0x27]
  41e82e:	inc    ebx
  41e82f:	xchg   edx,eax
  41e830:	push   cs
  41e831:	adc    DWORD PTR es:[ecx-0x7e0bd8a8],esi
  41e838:	(bad)  
  41e839:	(bad)  
  41e83a:	jmp    0x41e7ef
  41e83c:	dec    edi
  41e83d:	test   DWORD PTR [ecx-0x366f610e],edx
  41e843:	popa   
  41e844:	(bad)  
  41e845:	iret   
  41e846:	pop    ebx
  41e847:	fcomp  DWORD PTR [ebp-0x51]
  41e84a:	outs   dx,BYTE PTR ds:[esi]
  41e84b:	adc    DWORD PTR [eax],esp
  41e84d:	shr    DWORD PTR [esi+0x49],0x7e
  41e851:	std    
  41e852:	out    0xb0,al
  41e854:	call   0xcee30be5
  41e859:	(bad)  
  41e85a:	dec    eax
  41e85b:	and    eax,0x77369541
  41e860:	cmp    dl,BYTE PTR [ebp+0x47]
  41e863:	and    BYTE PTR [ebx],cl
  41e865:	arpl   WORD PTR [ecx-0x20537cb6],si
  41e86b:	jns    0x41e8a3
  41e86d:	call   0x20a3d718
  41e872:	popa   
  41e873:	add    ebp,esi
  41e875:	pusha  
  41e876:	jno    0x41e8a3
  41e878:	push   edi
  41e879:	fsub   QWORD PTR [ebx-0x35983778]
  41e87f:	mov    bh,BYTE PTR [edx]
  41e881:	mov    ebx,0x4c6cec58
  41e886:	inc    ebp
  41e887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e888:	pusha  
  41e889:	sbb    esi,eax
  41e88b:	lahf   
  41e88c:	and    DWORD PTR [ebx],esi
  41e88e:	push   es
  41e88f:	int    0x32
  41e891:	jbe    0x41e824
  41e893:	popf   
  41e894:	mov    ss,WORD PTR [ebx]
  41e896:	psubsw mm3,QWORD PTR [ecx-0x330c4588]
  41e89d:	or     bl,BYTE PTR [ecx+ebp*8-0x5195bead]
  41e8a4:	bound  ebp,QWORD PTR [eax-0x698cd0e6]
  41e8aa:	dec    esp
  41e8ab:	rcr    DWORD PTR [ebp+0x7],0xc1
  41e8af:	fdiv   QWORD PTR ds:0xb012feb4
  41e8b5:	and    ebp,DWORD PTR [ebx]
  41e8b7:	adc    DWORD PTR [ecx+0x27efe39c],esp
  41e8bd:	mov    ds:0xd719e18f,eax
  41e8c2:	inc    ebx
  41e8c3:	ja     0x41e93b
  41e8c5:	arpl   WORD PTR [eax-0x2cea5a0],ax
  41e8cb:	mov    edx,0x755a7bd2
  41e8d0:	fs mov edx,0x1fc8cc9c
  41e8d6:	mov    eax,ds:0xd85dea32
  41e8db:	dec    ah
  41e8dd:	xor    DWORD PTR [esi+0x3317aec7],ebp
  41e8e3:	lahf   
  41e8e4:	jae    0x41e957
  41e8e6:	mov    ebx,0xda5d873b
  41e8eb:	mov    bl,ah
  41e8ed:	inc    edi
  41e8ee:	bound  ebx,QWORD PTR [edi+ebx*8-0x108a51dd]
  41e8f5:	test   BYTE PTR [ebx-0x12],0x50
  41e8f9:	mov    ds:0xfafd2ed3,al
  41e8fe:	mov    al,0x71
  41e900:	push   0xbf67aa1d
  41e905:	xchg   esi,eax
  41e906:	sbb    ah,BYTE PTR [edx-0x7bed07c8]
  41e90c:	pop    edi
  41e90d:	repz (bad) 
  41e910:	mov    ds:0x6471f233,al
  41e915:	push   ds
  41e916:	fidivr DWORD PTR [eax-0xf49216a]
  41e91c:	push   cs
  41e91d:	adc    ch,ah
  41e91f:	data16 jae 0x41e907
  41e922:	in     al,0x14
  41e924:	push   es
  41e925:	cmc    
  41e926:	in     al,0x4a
  41e928:	sub    al,0x2d
  41e92a:	in     eax,0xbb
  41e92c:	(bad)  [ebx+0x29]
  41e92f:	and    eax,0x2fb7bf48
  41e935:	jecxz  0x41e9b3
  41e937:	aad    0x81
  41e939:	jno    0x41e932
  41e93b:	push   ebx
  41e93c:	mov    bl,BYTE PTR [esi+0x31]
  41e93f:	push   cs
  41e940:	jb     0x41e97a
  41e942:	and    al,0xb2
  41e944:	xchg   ecx,eax
  41e945:	mov    eax,ds:0x139804e1
  41e94a:	arpl   WORD PTR [ecx+edx*1+0x5b],sp
  41e94e:	int3   
  41e94f:	loop   0x41e972
  41e951:	mov    edx,0xc4b32b34
  41e956:	scas   eax,DWORD PTR es:[edi]
  41e957:	fs int 0xd5
  41e95a:	dec    edi
  41e95b:	les    ebx,FWORD PTR [edi+0x4a596dca]
  41e961:	dec    DWORD PTR [esi-0x10d0aeb0]
  41e967:	jmp    0x41e8f9
  41e969:	div    esi
  41e96b:	xor    DWORD PTR [ebp+0x2c328532],eax
  41e971:	stc    
  41e972:	es (bad) 
  41e974:	jo     0x41e98f
  41e976:	or     eax,0x6e539a30
  41e97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e97c:	sub    edx,DWORD PTR [ecx+0x6a]
  41e97f:	stc    
  41e980:	dec    DWORD PTR [eax-0x5]
  41e983:	xor    DWORD PTR [ebp-0x28],0x6fe56e72
  41e98a:	mov    dh,0xff
  41e98c:	in     eax,0xe2
  41e98e:	jg     0x41e9db
  41e990:	push   0x54
  41e992:	jmp    ecx
  41e994:	sub    BYTE PTR [eax],dh
  41e996:	out    dx,eax
  41e997:	popa   
  41e998:	aam    0x4c
  41e99a:	bound  esp,QWORD PTR [ecx+ebx*1]
  41e99d:	test   ebx,ecx
  41e99f:	xor    BYTE PTR [edi+0x60a23b95],ch
  41e9a5:	or     eax,0x7c1e287c
  41e9aa:	adc    eax,DWORD PTR [edi-0x1d4a6d5]
  41e9b0:	pop    ds
  41e9b1:	mov    ecx,0x70720ab9
  41e9b6:	bound  eax,QWORD PTR [esi-0x591b764b]
  41e9bc:	loop   0x41ea26
  41e9be:	mov    esi,0xb647e3ac
  41e9c3:	jbe    0x41ea30
  41e9c5:	dec    eax
  41e9c6:	push   ecx
  41e9c7:	or     DWORD PTR [edi-0x5c],edi
  41e9ca:	mov    BYTE PTR [eax],ah
  41e9cc:	outs   dx,BYTE PTR ds:[esi]
  41e9cd:	je     0x41e991
  41e9cf:	dec    edi
  41e9d0:	fwait
  41e9d1:	out    0x19,eax
  41e9d3:	in     eax,dx
  41e9d4:	mov    ah,0xd2
  41e9d6:	cmp    edi,eax
  41e9d8:	adc    esi,DWORD PTR [eax]
  41e9da:	les    ebx,FWORD PTR [edx-0xb8a73c1]
  41e9e0:	sbb    esi,DWORD PTR [eax+edi*4-0x4f]
  41e9e4:	aas    
  41e9e5:	ret    0x10be
  41e9e8:	adc    eax,0x39e13e
  41e9ed:	iret   
  41e9ee:	xor    eax,0xcf42e75
  41e9f3:	in     al,0x38
  41e9f5:	mov    al,0x70
  41e9f7:	movq   mm6,mm0
  41e9fa:	jo     0x41ea20
  41e9fc:	jno    0x41ea67
  41e9fe:	adc    ch,bl
  41ea00:	jl     0x41e9aa
  41ea02:	mov    edx,0x34ed89e8
  41ea07:	rcr    cl,0xe9
  41ea0a:	dec    esi
  41ea0b:	sahf   
  41ea0c:	or     BYTE PTR [esi-0x71],dh
  41ea0f:	xchg   ecx,eax
  41ea10:	test   DWORD PTR [esi],ebp
  41ea12:	sub    al,0x21
  41ea14:	or     eax,0xae2e088c
  41ea19:	shl    DWORD PTR [ebx+0x1],0x90
  41ea1d:	push   ss
  41ea1e:	sti    
  41ea1f:	adc    edi,DWORD PTR [ebx-0x25c3e6f5]
  41ea25:	mov    eax,0xd99d4e1c
  41ea2a:	inc    esi
  41ea2b:	and    esp,edi
  41ea2d:	je     0x41eaae
  41ea2f:	pop    edx
  41ea30:	jle    0x41e9ea
  41ea32:	dec    ecx
  41ea33:	test   al,0x55
  41ea35:	ss cmp ah,dh
  41ea38:	mov    DWORD PTR [ebx],edi
  41ea3a:	adc    al,0x2f
  41ea3c:	add    esi,DWORD PTR [edi-0x1fdfef1f]
  41ea42:	mov    esi,DWORD PTR [edx+0x35ce6a46]
  41ea48:	int3   
  41ea49:	pop    es
  41ea4a:	lods   al,BYTE PTR ds:[esi]
  41ea4b:	mov    ah,0x48
  41ea4d:	ds and esp,esi
  41ea50:	aas    
  41ea51:	outs   dx,BYTE PTR ds:[esi]
  41ea52:	mov    ah,BYTE PTR [ecx]
  41ea54:	lds    ebp,FWORD PTR [edx]
  41ea56:	jge    0x41ea4b
  41ea58:	and    BYTE PTR [eax-0x19],0x5f
  41ea5c:	xor    edi,DWORD PTR [ecx]
  41ea5e:	mov    ch,cl
  41ea60:	dec    edx
  41ea61:	cmc    
  41ea62:	clc    
  41ea63:	pop    ss
  41ea64:	push   es
  41ea65:	mov    ch,0xe7
  41ea67:	xor    DWORD PTR [esi+0x5fe35531],ebx
  41ea6d:	ret    
  41ea6e:	and    eax,0xc8fdd36c
  41ea73:	xchg   ecx,eax
  41ea74:	loopne 0x41ea1a
  41ea76:	sti    
  41ea77:	ret    0xd3a5
  41ea7a:	mov    dh,0x1a
  41ea7c:	imul   esi,edx,0xa1f643d8
  41ea82:	jge    0x41ea9b
  41ea84:	mov    DWORD PTR [edi-0x2a],ebp
  41ea87:	scas   eax,DWORD PTR es:[edi]
  41ea88:	push   ss
  41ea89:	sbb    bl,BYTE PTR [ebx+0xf4fa203]
  41ea8f:	fcom   DWORD PTR [edx-0xd7391e5]
  41ea95:	add    eax,0x749c1ab0
  41ea9a:	pop    ecx
  41ea9b:	add    al,0x8
  41ea9d:	aaa    
  41ea9e:	dec    ebp
  41ea9f:	mov    BYTE PTR [ecx],dl
  41eaa1:	popw   es
  41eaa3:	ds push cs
  41eaa5:	arpl   WORD PTR [ebx],sp
  41eaa7:	rcr    BYTE PTR [edx],1
  41eaa9:	sbb    DWORD PTR [esi],0xabb48df
  41eaaf:	add    dh,BYTE PTR [ecx+0x7f]
  41eab2:	mov    edi,0xb267057e
  41eab7:	test   al,0xab
  41eab9:	ins    DWORD PTR es:[edi],dx
  41eaba:	adc    esp,esp
  41eabc:	pusha  
  41eabd:	shl    ebp,0x83
  41eac0:	sub    bl,BYTE PTR [bp+si-0x5d]
  41eac4:	cli    
  41eac5:	push   ds
  41eac6:	fwait
  41eac7:	int3   
  41eac8:	cdq    
  41eac9:	dec    ebx
  41eaca:	jo     0x41eaa2
  41eacc:	sbb    DWORD PTR [edi+0x5e9dc1d6],ebp
  41ead2:	jmp    0xec368d58
  41ead7:	fcomp  QWORD PTR [ebx+ebp*1]
  41eada:	into   
  41eadb:	mov    bh,0x3d
  41eadd:	dec    ebp
  41eade:	fsubr  QWORD PTR [esi+ebp*2+0x1e]
  41eae2:	adc    DWORD PTR [esi*1+0x449ccd6c],esi
  41eae9:	push   es
  41eaea:	sbb    BYTE PTR ds:[edx],dh
  41eaed:	mov    ecx,0x6dd5a940
  41eaf2:	rcl    ecx,1
  41eaf4:	adc    BYTE PTR [edx-0x49],dl
  41eaf7:	sbb    edx,DWORD PTR [eax+0x4c9be6d9]
  41eafd:	dec    ebx
  41eafe:	push   ebx
  41eaff:	sub    ecx,esp
  41eb01:	repz lea edx,[ebp+edi*1-0xc834eb6]
  41eb09:	shl    BYTE PTR [edx+0x6f],0x8f
  41eb0d:	jp     0x41eb1b
  41eb0f:	stc    
  41eb10:	jno    0x41eab1
  41eb12:	mov    BYTE PTR es:[edi-0x29],cl
  41eb16:	mov    al,ds:0xeb20f59
  41eb1b:	cmp    BYTE PTR [ecx-0x45],0xd
  41eb1f:	mov    al,0x3b
  41eb21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb22:	sub    bh,BYTE PTR [eax-0x147531a7]
  41eb28:	mov    ebp,0x19900cac
  41eb2d:	fwait
  41eb2e:	sub    BYTE PTR [edx],cl
  41eb30:	mov    cl,0xa2
  41eb32:	call   0x5d4cc06
  41eb37:	arpl   bx,ax
  41eb39:	mov    BYTE PTR [ebx+0x373fdd22],dl
  41eb3f:	add    DWORD PTR [edx],edx
  41eb41:	in     eax,dx
  41eb42:	leave  
  41eb43:	mov    esp,0x7120a4ea
  41eb48:	mov    al,ds:0xa2e4b3c3
  41eb4d:	sub    DWORD PTR [ebx],edi
  41eb4f:	jmp    edi
  41eb51:	dec    esp
  41eb52:	stc    
  41eb53:	sub    DWORD PTR [esi+0x493a7934],esi
  41eb59:	leave  
  41eb5a:	pop    ebx
  41eb5b:	push   ebp
  41eb5c:	mov    al,ds:0x2fc98369
  41eb61:	inc    ebx
  41eb62:	jg     0x41eb94
  41eb64:	pop    esi
  41eb65:	jb     0x41eaf7
  41eb67:	xor    DWORD PTR [esp+ebp*4-0x6c6a8484],ebp
  41eb6e:	mov    ch,0xf1
  41eb70:	mov    edi,0x1ff60443
  41eb75:	adc    esi,eax
  41eb77:	iret   
  41eb78:	popf   
  41eb79:	mov    bl,0x5f
  41eb7b:	xlat   BYTE PTR ds:[ebx]
  41eb7c:	xor    al,0x62
  41eb7e:	and    bh,BYTE PTR [ebx+0x31ead1e9]
  41eb84:	sbb    cl,BYTE PTR [esi]
  41eb86:	pop    ebx
  41eb87:	jno    0x41ebe3
  41eb89:	push   cs
  41eb8a:	ds dec ebp
  41eb8c:	mov    dl,0x90
  41eb8e:	or     cl,0x6d
  41eb91:	pop    ds
  41eb92:	or     ebp,ebp
  41eb94:	sbb    dl,BYTE PTR [esp+edi*8+0x6c4d099b]
  41eb9b:	xlat   BYTE PTR ds:[ebx]
  41eb9c:	icebp  
  41eb9d:	push   esp
  41eb9e:	adc    eax,0x58736c4e
  41eba3:	jmp    0x41eb7c
  41eba5:	fild   WORD PTR ds:0xaee47ca
  41ebab:	fs in  al,dx
  41ebad:	shr    BYTE PTR [ebp+0x568363ce],0xb1
  41ebb4:	xchg   esi,eax
  41ebb5:	jb     0x41ebe5
  41ebb7:	in     eax,dx
  41ebb8:	mov    eax,ds:0xb405ec50
  41ebbd:	(bad)  
  41ebbe:	pop    ebx
  41ebbf:	xchg   esp,eax
  41ebc0:	jmp    0xf164:0x5963c4c
  41ebc7:	push   edi
  41ebc8:	and    BYTE PTR [ecx],bl
  41ebca:	and    eax,0xda7d89fa
  41ebcf:	jmp    0x41ec15
  41ebd1:	sub    BYTE PTR [edi-0x67],bl
  41ebd4:	data16 stc 
  41ebd6:	mov    cl,0x49
  41ebd8:	lods   al,BYTE PTR ds:[esi]
  41ebd9:	add    DWORD PTR [edx+0x38],eax
  41ebdc:	fdiv   st(6),st
  41ebde:	fwait
  41ebdf:	push   0x6f34f467
  41ebe4:	cmp    cl,BYTE PTR [ebp-0x34691d1a]
  41ebea:	xchg   DWORD PTR [ebx+esi*8+0xc],ecx
  41ebee:	call   0x8c55:0x2f7454f6
  41ebf5:	gs xchg edx,eax
  41ebf7:	xchg   esp,eax
  41ebf8:	jge    0x41ebbd
  41ebfa:	mov    bl,0x42
  41ebfc:	into   
  41ebfd:	jmp    0x3fb13b8
  41ec02:	dec    eax
  41ec03:	repnz aad 0x73
  41ec06:	inc    esi
  41ec07:	adc    eax,DWORD PTR [eax]
  41ec09:	sahf   
  41ec0a:	enter  0xc521,0xc7
  41ec0e:	xchg   ebp,eax
  41ec0f:	jl     0x41eba1
  41ec11:	xchg   esp,eax
  41ec12:	jmp    0x95a0c856
  41ec17:	mov    ebx,0x96cf8460
  41ec1c:	pusha  
  41ec1d:	daa    
  41ec1e:	rol    BYTE PTR [eax+0x741a61e6],1
  41ec24:	or     ch,BYTE PTR [edx]
  41ec26:	jl     0x41ebe4
  41ec28:	push   cs
  41ec29:	mov    bl,bh
  41ec2b:	in     al,0x4a
  41ec2d:	(bad)  
  41ec2e:	sbb    BYTE PTR [ebx-0x44],al
  41ec31:	push   0xe42a47c6
  41ec36:	rcr    BYTE PTR [edi+eax*2+0xc],cl
  41ec3a:	mov    dh,0x93
  41ec3c:	fldcw  WORD PTR [edx+0x4d4b42e3]
  41ec42:	in     eax,dx
  41ec43:	push   ss
  41ec44:	scas   eax,DWORD PTR es:[edi]
  41ec45:	pop    ebp
  41ec46:	mov    esi,0x717d9a76
  41ec4b:	std    
  41ec4c:	mov    cl,0xb8
  41ec4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec4f:	int    0x21
  41ec51:	lock sbb cl,al
  41ec54:	xchg   DWORD PTR cs:[eax+0x520b4412],ebp
  41ec5b:	aaa    
  41ec5c:	mov    edi,0x133ab8b3
  41ec61:	das    
  41ec62:	hlt    
  41ec63:	jne    0x41ec15
  41ec65:	sbb    DWORD PTR [eax],0x5c
  41ec68:	jmp    0x41ecb9
  41ec6a:	jno    0x41ec40
  41ec6c:	stos   BYTE PTR es:[edi],al
  41ec6d:	cld    
  41ec6e:	and    eax,0xdd31306e
  41ec73:	and    al,BYTE PTR [edx]
  41ec75:	adc    ecx,DWORD PTR [edx-0x453d1b7a]
  41ec7b:	sub    esi,DWORD PTR [edi]
  41ec7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec7e:	jle    0x41ec97
  41ec80:	jnp    0x41ec85
  41ec82:	lods   al,BYTE PTR ds:[esi]
  41ec83:	loopne 0x41ed04
  41ec85:	cmp    BYTE PTR [edx],dh
  41ec87:	aaa    
  41ec88:	push   cs
  41ec89:	pop    edx
  41ec8a:	mov    ebx,DWORD PTR [eax-0x16f6d8d]
  41ec90:	jg     0x41ec90
  41ec92:	lods   al,BYTE PTR ds:[esi]
  41ec93:	ror    BYTE PTR [edx-0x2f],1
  41ec96:	sbb    ebp,0x5b
  41ec99:	xor    eax,DWORD PTR [edx+0x22]
  41ec9c:	jnp    0x41ed0a
  41ec9e:	shl    DWORD PTR [eax],1
  41eca0:	mov    cl,0x42
  41eca2:	jle    0x41ecce
  41eca4:	sub    eax,0xc64ffb5d
  41eca9:	leavew 
  41ecab:	rcr    ebx,1
  41ecad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecae:	lock imul edi,DWORD PTR [eax-0x486d4b66],0x7b
  41ecb6:	sub    DWORD PTR [ebp+0x50],edx
  41ecb9:	sbb    al,0xea
  41ecbb:	repnz xchg edi,eax
  41ecbd:	daa    
  41ecbe:	in     al,dx
  41ecbf:	or     al,0xb5
  41ecc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecc2:	pusha  
  41ecc3:	mov    bl,BYTE PTR [edx]
  41ecc5:	xchg   ebp,eax
  41ecc6:	adc    BYTE PTR [ebx-0x538263ca],bh
  41eccc:	xor    bh,ah
  41ecce:	dec    ebx
  41eccf:	lea    eax,[esi-0x12]
  41ecd2:	xchg   ebx,eax
  41ecd3:	gs lahf 
  41ecd5:	jae    0x41ecae
  41ecd7:	aaa    
  41ecd8:	mul    bh
  41ecda:	sbb    eax,0xec492441
  41ecdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ece0:	ins    DWORD PTR es:[edi],dx
  41ece1:	mov    bh,0xee
  41ece3:	add    eax,0xff9f813c
  41ece8:	clc    
  41ece9:	ja     0x41ed6a
  41eceb:	neg    BYTE PTR [esi+0x69af373d]
  41ecf1:	das    
  41ecf2:	je     0x41ec7f
  41ecf4:	pusha  
  41ecf5:	imul   BYTE PTR [eax]
  41ecf7:	imul   esp,DWORD PTR [ebp+0x526d6283],0xffffffc6
  41ecfe:	repz daa 
  41ed00:	lods   eax,DWORD PTR ds:[esi]
  41ed01:	dec    esi
  41ed02:	mov    esp,0x9109340b
  41ed07:	test   al,0x6f
  41ed09:	lahf   
  41ed0a:	into   
  41ed0b:	stc    
  41ed0c:	and    eax,0xebf77282
  41ed11:	ja     0x41ed52
  41ed13:	(bad)  
  41ed14:	jl     0x41ed10
  41ed16:	jecxz  0x41ed20
  41ed18:	imul   ebp,DWORD PTR [ebx+0x29],0x8347d1b5
  41ed1f:	adc    edi,esp
  41ed21:	mov    cl,0xc4
  41ed23:	je     0x41ecac
  41ed25:	lahf   
  41ed26:	mov    BYTE PTR [esi],bl
  41ed28:	mov    ebp,0x5e247b64
  41ed2d:	and    edx,ebp
  41ed2f:	call   0x6c97:0x9a7fe0a2
  41ed36:	add    cl,al
  41ed38:	into   
  41ed39:	dec    ebx
  41ed3a:	fcomi  st,st(2)
  41ed3c:	les    ebx,FWORD PTR [eax+ebp*4+0x32]
  41ed40:	clc    
  41ed41:	mov    bl,0x98
  41ed43:	aaa    
  41ed44:	daa    
  41ed45:	jp     0x41ed6b
  41ed47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed48:	mov    eax,ds:0xa9664ef6
  41ed4d:	xchg   ebp,eax
  41ed4e:	arpl   sp,bp
  41ed50:	retf   
  41ed51:	mov    edi,0xee0f1c5a
  41ed56:	push   ecx
  41ed57:	or     eax,0x5dbc34ff
  41ed5c:	popa   
  41ed5d:	mov    esp,0x12e5b5d6
  41ed62:	jmp    DWORD PTR [esi-0x1a]
  41ed65:	hlt    
  41ed66:	lahf   
  41ed67:	jge    0x41edbe
  41ed69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed6a:	mov    BYTE PTR [ebx],bl
  41ed6c:	shl    BYTE PTR [eax-0x6b634851],cl
  41ed72:	push   esp
  41ed73:	push   edi
  41ed74:	mov    esp,0x48e3aa27
  41ed79:	setl   BYTE PTR [ebx-0x1090681c]
  41ed80:	sti    
  41ed81:	jo     0x41ed38
  41ed83:	xchg   edi,eax
  41ed84:	jecxz  0x41ed7b
  41ed86:	ret    0xbec
  41ed89:	outs   dx,DWORD PTR ds:[esi]
  41ed8a:	cld    
  41ed8b:	mov    eax,ds:0x364e4afa
  41ed90:	ins    DWORD PTR es:[edi],dx
  41ed91:	mov    edi,0x55af94bc
  41ed96:	or     al,0x34
  41ed98:	xchg   ebp,eax
  41ed99:	(bad)  
  41ed9b:	and    ecx,DWORD PTR [ebp-0x7c]
  41ed9e:	sbb    BYTE PTR [edx-0x27],bl
  41eda1:	mov    ch,0x5e
  41eda3:	xor    eax,0x6b7758a9
  41eda8:	sbb    eax,0x48380cea
  41edad:	js     0x41edbc
  41edaf:	inc    edx
  41edb0:	inc    edx
  41edb1:	pop    ecx
  41edb2:	mov    bl,0x24
  41edb4:	dec    ebx
  41edb5:	inc    ecx
  41edb6:	(bad)  
  41edb7:	ret    
  41edb8:	addr16 jno 0x41edac
  41edbb:	mov    dl,0xf9
  41edbd:	shl    DWORD PTR [ebx-0x4baf5ca3],cl
  41edc3:	ret    0x75bd
  41edc6:	(bad)
  41edca:	mov    edi,0x2a553208
  41edcf:	xor    DWORD PTR [ebp*2-0x5b44639],edx
  41edd6:	lock jmp 0x19e948ce
  41eddc:	test   BYTE PTR [ecx-0x3049f660],ch
  41ede2:	mov    eax,0xca01e2f3
  41ede7:	mov    dl,0x76
  41ede9:	fmul   st(4),st
  41edeb:	into   
  41edec:	jge    0x41ee0e
  41edee:	or     eax,0x87d82b7c
  41edf3:	stos   BYTE PTR es:[edi],al
  41edf4:	mov    dh,0x7c
  41edf6:	dec    edx
  41edf7:	int    0xb0
  41edf9:	add    cl,dh
  41edfb:	and    cl,BYTE PTR [ebp+0x3b0e0474]
  41ee01:	pop    edx
  41ee02:	scas   eax,DWORD PTR es:[edi]
  41ee03:	jno    0x41ee01
  41ee05:	lea    esp,ds:0xd92a10ab
  41ee0b:	addr16 push ebx
  41ee0d:	popa   
  41ee0e:	inc    ecx
  41ee0f:	pop    ss
  41ee10:	outs   dx,DWORD PTR ds:[esi]
  41ee11:	mov    edi,0xf92ed050
  41ee16:	data16 das 
  41ee18:	mov    ebp,0x48b27b07
  41ee1d:	enter  0x8ae9,0x30
  41ee21:	or     BYTE PTR [eax],0x5
  41ee24:	push   ebx
  41ee25:	inc    edx
  41ee26:	aaa    
  41ee27:	arpl   WORD PTR [ecx+0xa8cf47a],ax
  41ee2d:	out    dx,al
  41ee2e:	xlat   BYTE PTR ds:[ebx]
  41ee2f:	inc    edx
  41ee30:	cdq    
  41ee31:	push   esi
  41ee32:	mov    edi,0x8dfae43
  41ee37:	push   ds
  41ee38:	aad    0x57
  41ee3a:	ret    
  41ee3b:	ret    
  41ee3c:	dec    edi
  41ee3d:	push   edi
  41ee3e:	xchg   ebp,eax
  41ee3f:	xor    BYTE PTR [eax-0x49],0x53
  41ee43:	jae    0x41ee07
  41ee45:	ins    DWORD PTR es:[edi],dx
  41ee46:	or     al,ah
  41ee48:	shl    DWORD PTR ds:0x261e3102,cl
  41ee4e:	push   ecx
  41ee4f:	pop    ds
  41ee50:	(bad)  
  41ee51:	adc    al,0xe0
  41ee53:	data16 mov cx,0x8410
  41ee58:	push   esi
  41ee59:	mov    ecx,0xaafff8e
  41ee5e:	jnp    0x41eea3
  41ee60:	add    DWORD PTR [eax+0x5befcddf],0x8287a5f5
  41ee6a:	mov    ebx,0xb8cb83b8
  41ee6f:	das    
  41ee70:	cs mov bh,0xbb
  41ee73:	adc    DWORD PTR [ecx+0x4c1f1926],ebx
  41ee79:	mov    esp,0x7513acdd
  41ee7e:	repz dec edx
  41ee80:	or     BYTE PTR [edi-0xb],ch
  41ee83:	cmp    BYTE PTR [edx-0x1cb026ce],al
  41ee89:	fistp  QWORD PTR ds:0xc3e9609f
  41ee8f:	and    DWORD PTR [edx],esi
  41ee91:	out    0x5d,eax
  41ee93:	stos   BYTE PTR es:[edi],al
  41ee94:	ins    DWORD PTR es:[edi],dx
  41ee95:	and    DWORD PTR [ecx+0x52],ebx
  41ee98:	xlat   BYTE PTR ds:[ebx]
  41ee99:	clc    
  41ee9a:	add    edx,DWORD PTR [edx-0x3ba817fb]
  41eea0:	mov    dh,0x35
  41eea2:	inc    edi
  41eea3:	in     al,dx
  41eea4:	stos   DWORD PTR es:[edi],eax
  41eea5:	clc    
  41eea6:	xor    esp,ebx
  41eea8:	das    
  41eea9:	jb     0x41ee37
  41eeab:	daa    
  41eeac:	(bad)  
  41eead:	xchg   esi,eax
  41eeae:	(bad)  
  41eeaf:	mov    bl,0xce
  41eeb1:	mov    ebx,0xf0a29f6a
  41eeb6:	pop    ds
  41eeb7:	jo     0x41ef2f
  41eeb9:	popf   
  41eeba:	jge    0x41eeb7
  41eebc:	pop    esp
  41eebd:	adc    BYTE PTR [edx+0x424a4eb],ah
  41eec3:	in     eax,0x8c
  41eec5:	dec    ebp
  41eec6:	loope  0x41eef7
  41eec8:	mov    di,0xa496
  41eecc:	ins    DWORD PTR es:[edi],dx
  41eecd:	add    BYTE PTR [edx-0x5],dl
  41eed0:	pop    esi
  41eed1:	les    ebx,FWORD PTR ds:0x4befbb73
  41eed7:	ins    BYTE PTR es:[edi],dx
  41eed8:	jo     0x41eea8
  41eeda:	and    DWORD PTR [eax],edi
  41eedc:	mov    esp,0x6e57d491
  41eee1:	pop    ebp
  41eee2:	jecxz  0x41ef14
  41eee4:	xor    ch,ah
  41eee6:	mov    DWORD PTR ds:0xf29478b1,ebp
  41eeec:	test   ebp,0xcbc4dad
  41eef2:	enter  0x6c85,0x61
  41eef6:	loop   0x41eeab
  41eef8:	test   BYTE PTR [eax+0xe],0xe4
  41eefc:	fadd   QWORD PTR [edx+edx*4-0x39]
  41ef00:	mov    ds:0xdbf46ac9,al
  41ef05:	xchg   esp,eax
  41ef06:	pusha  
  41ef07:	fs jl  0x41ef29
  41ef0a:	or     eax,0xa7854fec
  41ef0f:	mov    ah,BYTE PTR [ebx+0x2eeed495]
  41ef15:	mov    ah,0x4d
  41ef17:	cld    
  41ef18:	push   ebp
  41ef19:	sbb    eax,0x510e05d2
  41ef1e:	push   ecx
  41ef1f:	mov    ch,0x28
  41ef21:	and    BYTE PTR [ebp+0x1a243e02],cl
  41ef27:	cmp    BYTE PTR [edx],ah
  41ef29:	add    eax,0x730dc11
  41ef2e:	outs   dx,DWORD PTR ds:[esi]
  41ef2f:	repnz cmp eax,0xb5899093
  41ef35:	inc    edi
  41ef36:	mov    al,ds:0x4a7ca706
  41ef3b:	fiadd  DWORD PTR [edx-0x41]
  41ef3e:	adc    BYTE PTR [esi-0x46],cl
  41ef41:	add    BYTE PTR [edi-0x32c50684],dh
  41ef47:	xchg   edx,eax
  41ef48:	cdq    
  41ef49:	mov    dh,0xc2
  41ef4b:	xor    esi,DWORD PTR [eax-0x6ac835e8]
  41ef51:	loopne 0x41efbe
  41ef53:	mov    cs,ecx
  41ef55:	pop    ds
  41ef56:	push   ecx
  41ef57:	pop    ss
  41ef58:	iret   
  41ef59:	sti    
  41ef5a:	jl     0x41eef9
  41ef5c:	mov    ebp,0x6e8b794b
  41ef61:	lods   eax,DWORD PTR ds:[esi]
  41ef62:	cmc    
  41ef63:	or     DWORD PTR [ebx+0x7651604b],ebp
  41ef69:	stc    
  41ef6a:	or     dh,dl
  41ef6c:	mov    al,0xa
  41ef6e:	popa   
  41ef6f:	stc    
  41ef70:	lds    eax,FWORD PTR gs:[edi+0x83c7849]
  41ef77:	call   0x44b6:0x90a495a7
  41ef7e:	or     esp,DWORD PTR [ebx+0x77ab8fbf]
  41ef84:	int    0xea
  41ef86:	xchg   ecx,eax
  41ef87:	push   edi
  41ef88:	and    DWORD PTR [ebp-0x2230cf15],0x7d
  41ef8f:	xlat   BYTE PTR ds:[ebx]
  41ef90:	push   ds
  41ef91:	or     esi,DWORD PTR [esi]
  41ef93:	mov    eax,ds:0xd623d194
  41ef98:	shl    DWORD PTR [ebx-0x5f24e455],0x8a
  41ef9f:	cmp    ecx,ebx
  41efa1:	cld    
  41efa2:	and    eax,0xbef49b1f
  41efa7:	ret    
  41efa8:	fs hlt 
  41efaa:	ss out 0x77,al
  41efad:	sbb    dl,BYTE PTR [eax]
  41efaf:	inc    eax
  41efb0:	pop    esi
  41efb1:	sbb    eax,0x85e8b721
  41efb6:	dec    esi
  41efb7:	cmp    bl,BYTE PTR [edx-0x6cc760fa]
  41efbd:	js     0x41efff
  41efbf:	xchg   BYTE PTR [edi],bl
  41efc1:	xchg   esi,eax
  41efc2:	outs   dx,BYTE PTR ds:[esi]
  41efc3:	mov    cl,BYTE PTR [ecx]
  41efc5:	aaa    
  41efc6:	fisttp QWORD PTR [eax+0x1b6381e2]
  41efcc:	dec    edi
  41efcd:	scas   al,BYTE PTR es:[edi]
  41efce:	xchg   esi,eax
  41efcf:	add    eax,0xbd83af77
  41efd4:	in     al,dx
  41efd5:	int    0xac
  41efd7:	cmp    eax,0x1bf1b05f
  41efdc:	xchg   esi,eax
  41efdd:	cli    
  41efde:	pop    ds
  41efdf:	sub    eax,0x560ac5e1
  41efe4:	out    0xe7,al
  41efe6:	bswap  esp
  41efe8:	mov    edx,0x73ef203c
  41efed:	or     al,0x29
  41efef:	lods   eax,DWORD PTR ds:[esi]
  41eff0:	mov    ch,0x3c
  41eff2:	icebp  
  41eff3:	pop    ecx
  41eff4:	fcmovu st,st(5)
  41eff6:	lea    ebp,[ebp-0x5e]
  41eff9:	lds    ecx,FWORD PTR [ecx+ebp*1]
  41effc:	jg     0x41eff1
  41effe:	mov    bl,ch
  41f000:	mov    eax,0xfeeb66f1
  41f005:	inc    esi
  41f006:	jbe    0x41efad
  41f008:	sahf   
  41f009:	stos   DWORD PTR es:[edi],eax
  41f00a:	sbb    eax,eax
  41f00c:	sbb    BYTE PTR [edx-0xf5ae8e8],dh
  41f012:	jge    0x41efb7
  41f014:	dec    ecx
  41f015:	or     ebx,DWORD PTR [eax]
  41f017:	push   ebp
  41f018:	jne    0x41f06b
  41f01a:	add    DWORD PTR [edi-0x67cd40fb],eax
  41f020:	adc    al,0x19
  41f022:	das    
  41f023:	sahf   
  41f024:	dec    bp
  41f026:	mov    dh,0xc4
  41f028:	inc    eax
  41f029:	xchg   esi,eax
  41f02a:	lods   eax,DWORD PTR ds:[esi]
  41f02b:	push   esp
  41f02c:	and    DWORD PTR [edx-0x5d],ecx
  41f02f:	adc    ebx,DWORD PTR [ecx+edx*4-0x64]
  41f033:	in     eax,dx
  41f034:	imul   edi,DWORD PTR [eax+0x55],0x5e
  41f038:	mov    bl,0x54
  41f03a:	les    esi,FWORD PTR [esi]
  41f03c:	loope  0x41f02e
  41f03e:	cdq    
  41f03f:	mov    al,0xae
  41f041:	clc    
  41f042:	mov    eax,DWORD PTR [ebp+0x1a]
  41f045:	inc    ebp
  41f046:	add    BYTE PTR [edi],cl
  41f048:	jp     0x41f0af
  41f04a:	dec    eax
  41f04b:	(bad)  
  41f04c:	sar    esi,1
  41f04e:	arpl   WORD PTR [edx],dx
  41f050:	mov    eax,cs:0x75319f8e
  41f056:	jmp    ebx
  41f058:	inc    ebx
  41f059:	push   ebx
  41f05a:	fld    st(7)
  41f05c:	push   es
  41f05d:	ror    DWORD PTR [edi],1
  41f05f:	cmp    eax,0xb322cbda
  41f064:	jb     0x41f061
  41f066:	dec    ebp
  41f067:	retf   
  41f068:	or     eax,0x52d32368
  41f06d:	or     eax,0x334c1e7f
  41f072:	mov    ch,0xa
  41f074:	(bad)  
  41f075:	out    0xba,al
  41f077:	out    0x1a,al
  41f079:	or     ah,BYTE PTR [ecx+edi*8+0x771cd1e1]
  41f080:	mov    dl,0xd6
  41f082:	adc    BYTE PTR [esi+0x70e67fd],ch
  41f088:	mov    al,ds:0x354910c
  41f08d:	outs   dx,BYTE PTR ds:[esi]
  41f08e:	jp     0x41f099
  41f090:	aam    0x54
  41f092:	scas   eax,DWORD PTR es:[edi]
  41f093:	pop    edx
  41f094:	inc    ebp
  41f095:	leave  
  41f096:	mov    ds:0x5ded3589,al
  41f09b:	dec    esp
  41f09c:	add    al,0x7c
  41f09e:	mov    ecx,0x60c68c92
  41f0a3:	inc    ecx
  41f0a4:	(bad)  
  41f0a6:	stos   BYTE PTR es:[edi],al
  41f0a7:	cwde   
  41f0a8:	mov    al,0xaf
  41f0aa:	pop    es
  41f0ab:	xor    edi,esi
  41f0ad:	shl    BYTE PTR [ebx+0x73ba02b],cl
  41f0b3:	stc    
  41f0b4:	and    al,0x21
  41f0b6:	fmulp  st(2),st
  41f0b8:	lds    esp,FWORD PTR [ebp+0x4ece97b3]
  41f0be:	sbb    al,0xca
  41f0c0:	mov    DWORD PTR [esi+0x7],ebp
  41f0c3:	inc    edi
  41f0c4:	mov    dl,0x6
  41f0c6:	std    
  41f0c7:	test   eax,0xe9ed932e
  41f0cc:	mov    ch,0x12
  41f0ce:	repz xlat BYTE PTR ds:[ebx]
  41f0d0:	das    
  41f0d1:	into   
  41f0d2:	in     eax,dx
  41f0d3:	cwde   
  41f0d4:	aad    0x3e
  41f0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0d7:	dec    esi
  41f0d8:	or     ch,BYTE PTR [edi-0x14f531ce]
  41f0de:	adc    esp,DWORD PTR [eax+ecx*8]
  41f0e1:	or     al,0xaf
  41f0e3:	test   BYTE PTR [edx-0x1a78452f],0x63
  41f0ea:	loope  0x41f0ca
  41f0ec:	mov    dh,0x30
  41f0ee:	sub    al,0x21
  41f0f0:	xlat   BYTE PTR ds:[ebx]
  41f0f1:	and    BYTE PTR ds:[ebx],bh
  41f0f4:	mov    al,0x27
  41f0f6:	repnz retf 
  41f0f8:	mov    dl,0x76
  41f0fa:	xor    eax,0xc23b268
  41f0ff:	push   esi
  41f100:	xor    cx,WORD PTR [edi-0x7b]
  41f104:	out    0xf,eax
  41f106:	push   edi
  41f107:	jmp    0xb24abc19
  41f10c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f10d:	loope  0x41f0ea
  41f10f:	shr    BYTE PTR [eax],0x6c
  41f112:	cmp    al,0xf1
  41f114:	xchg   BYTE PTR [edi+0x4a],dh
  41f117:	pop    ebx
  41f118:	and    al,0xa4
  41f11a:	xor    DWORD PTR [eax+0x594d2407],ecx
  41f120:	sar    esp,0x36
  41f123:	mov    ebp,0xce685858
  41f128:	and    eax,0x7d813243
  41f12d:	iret   
  41f12e:	jl     0x41f0b1
  41f130:	and    eax,0x1a4e12ed
  41f135:	xlat   BYTE PTR ds:[ebx]
  41f136:	pop    edx
  41f137:	sti    
  41f138:	ins    DWORD PTR es:[edi],dx
  41f139:	pop    ecx
  41f13a:	loope  0x41f0c1
  41f13c:	adc    BYTE PTR [eax],bh
  41f13e:	fimul  DWORD PTR [ebp-0x13]
  41f141:	int3   
  41f142:	add    ebx,edx
  41f144:	adc    edi,DWORD PTR [edx-0x38]
  41f147:	fdiv   DWORD PTR [ecx+0x65c33bd3]
  41f14d:	sbb    BYTE PTR [ecx+ebx*4+0x1],ah
  41f151:	test   eax,0xba9e7888
  41f156:	call   0x283bac63
  41f15b:	mov    bh,ch
  41f15d:	retf   0xfe9b
  41f160:	sahf   
  41f161:	push   eax
  41f162:	imul   edx,DWORD PTR [ecx+0x79],0x55693636
  41f169:	mov    al,ds:0xc023f1bb
  41f16e:	leave  
  41f16f:	gs jge 0x41f1b9
  41f172:	or     DWORD PTR [edx],edi
  41f174:	or     ch,BYTE PTR [ebx]
  41f176:	sbb    ch,ah
  41f178:	fild   QWORD PTR [esi+edi*1-0x2319c434]
  41f17f:	push   0xffffffe1
  41f181:	inc    edx
  41f182:	mov    edx,0xdad4050e
  41f187:	cli    
  41f188:	and    edi,DWORD PTR [edx+0x29a3ff5b]
  41f18e:	dec    ebp
  41f18f:	jo     0x41f170
  41f191:	aas    
  41f192:	scas   eax,DWORD PTR es:[edi]
  41f193:	pop    esi
  41f194:	shl    DWORD PTR [esi+0x11915916],1
  41f19a:	adc    al,cl
  41f19c:	iret   
  41f19d:	loop   0x41f19a
  41f19f:	mov    WORD PTR [edi-0x178ada1e],?
  41f1a5:	cmp    al,0x93
  41f1a7:	stos   BYTE PTR es:[edi],al
  41f1a8:	add    esp,DWORD PTR [edi-0x2]
  41f1ab:	jp     0x41f136
  41f1ad:	mov    ss,WORD PTR [edx]
  41f1af:	fisub  WORD PTR [ecx+0x2]
  41f1b2:	and    eax,0xa89cfd87
  41f1b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1b8:	hlt    
  41f1b9:	sar    BYTE PTR [edx-0x718d07da],0xd6
  41f1c0:	and    ebp,ecx
  41f1c2:	sbb    al,BYTE PTR [ebx]
  41f1c4:	xchg   edx,eax
  41f1c5:	mov    ah,BYTE PTR [edx]
  41f1c7:	int3   
  41f1c8:	(bad)  
  41f1ca:	int    0x9c
  41f1cc:	(bad)  
  41f1cd:	repnz and eax,0x8f739427
  41f1d3:	sub    DWORD PTR [esi+0x7],eax
  41f1d6:	jno    0x41f244
  41f1d8:	jns    0x41f194
  41f1da:	cwde   
  41f1db:	arpl   WORD PTR [eax-0x21],cx
  41f1de:	or     BYTE PTR [ebx+0x34c8c829],bh
  41f1e4:	push   ds
  41f1e5:	mov    edi,0x489e61de
  41f1ea:	mov    dh,0xd3
  41f1ec:	mov    bl,0xd1
  41f1ee:	pop    edx
  41f1ef:	test   BYTE PTR [esi],dl
  41f1f1:	repnz add bl,bh
  41f1f4:	pop    ds
  41f1f5:	mov    eax,0x6a8bc1a6
  41f1fa:	cmovbe ebx,DWORD PTR [ebp-0xf]
  41f1fe:	jmp    0x41f224
  41f200:	cs mov ah,0x44
  41f203:	int    0x7e
  41f205:	inc    eax
  41f206:	pop    ss
  41f207:	mov    bh,0x37
  41f209:	call   0xe2dd9be9
  41f20e:	dec    edi
  41f20f:	arpl   WORD PTR [ebx-0x28873ba3],bx
  41f215:	test   eax,0xc5ba51ca
  41f21a:	js     0x41f294
  41f21c:	out    0x6d,eax
  41f21e:	inc    esi
  41f21f:	fcomp  DWORD PTR [eax]
  41f221:	test   eax,0x589eaa90
  41f226:	test   eax,0xdb4e3bc2
  41f22b:	push   es
  41f22c:	xchg   ebx,eax
  41f22d:	push   edx
  41f22e:	jl     0x41f1bb
  41f230:	fsubr  DWORD PTR ds:0xd00bef6d
  41f236:	fdivr  DWORD PTR [edi+0x20]
  41f239:	ret    0xc476
  41f23c:	ss hlt 
  41f23e:	inc    esp
  41f23f:	pop    ebx
  41f240:	mov    ds:0xebde40e5,al
  41f245:	fistp  QWORD PTR [ecx]
  41f247:	push   0x17e09017
  41f24c:	and    dl,cl
  41f24e:	mov    edx,0x3ace1871
  41f253:	repz cmp DWORD PTR [edx+0x6ed8deb0],0x35
  41f25b:	inc    ebp
  41f25c:	pop    esp
  41f25d:	ins    BYTE PTR es:[edi],dx
  41f25e:	gs sub al,0x80
  41f261:	mov    BYTE PTR [ecx-0xa],dh
  41f264:	jns    0x41f24b
  41f266:	cdq    
  41f267:	and    eax,0x6b8e2e7f
  41f26c:	dec    edx
  41f26d:	mov    ecx,ebp
  41f26f:	inc    edi
  41f270:	dec    ebx
  41f271:	fisub  WORD PTR [edi]
  41f273:	or     BYTE PTR [ecx-0xa],al
  41f276:	pop    eax
  41f277:	jmp    0xf67dc4c0
  41f27c:	fistp  DWORD PTR [esi+0x62]
  41f27f:	ret    0xcd9
  41f282:	jo     0x41f2b1
  41f284:	cmp    ecx,DWORD PTR [ebp-0x799b869e]
  41f28a:	push   esi
  41f28b:	ds inc edx
  41f28d:	xchg   ebp,eax
  41f28e:	sbb    al,ah
  41f290:	sub    eax,0x60f0ea23
  41f295:	push   esi
  41f296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f297:	xchg   DWORD PTR [eax-0x4b36a480],ebp
  41f29d:	aas    
  41f29e:	test   al,0xe3
  41f2a0:	icebp  
  41f2a1:	cmp    ecx,DWORD PTR [edx]
  41f2a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2a4:	lds    esp,FWORD PTR [esi+0x273d7e8c]
  41f2aa:	pop    edx
  41f2ab:	push   ds
  41f2ac:	push   0x98c250ca
  41f2b1:	and    DWORD PTR [ecx+0x5c],ebp
  41f2b4:	fisttp QWORD PTR [esi-0x48]
  41f2b7:	jo     0x41f2ff
  41f2b9:	add    eax,0x59c1eae8
  41f2be:	shr    DWORD PTR [esi],cl
  41f2c0:	in     eax,dx
  41f2c1:	outs   dx,DWORD PTR ds:[esi]
  41f2c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2c3:	(bad)  
  41f2c4:	popa   
  41f2c5:	out    dx,eax
  41f2c6:	shr    esp,0x99
  41f2c9:	push   0x508b382b
  41f2ce:	cdq    
  41f2cf:	lahf   
  41f2d0:	mov    ebp,0x69d4d488
  41f2d5:	push   es
  41f2d6:	xchg   esi,eax
  41f2d7:	and    al,cl
  41f2d9:	pop    esp
  41f2da:	lea    ecx,[esi+0x16d43c3d]
  41f2e0:	lods   al,BYTE PTR ds:[esi]
  41f2e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2e2:	adc    edx,DWORD PTR [ebx]
  41f2e4:	inc    ebx
  41f2e5:	add    al,ah
  41f2e7:	mov    bl,0x8e
  41f2e9:	push   cs
  41f2ea:	mov    al,0x6d
  41f2ec:	fadd   QWORD PTR [ebp+0x497b2a0e]
  41f2f2:	outs   dx,BYTE PTR ds:[esi]
  41f2f3:	int3   
  41f2f4:	push   cs
  41f2f5:	lock outs dx,BYTE PTR ds:[esi]
  41f2f7:	fisubr DWORD PTR [edi+edx*8-0x1f]
  41f2fb:	mov    dl,0xf7
  41f2fd:	or     ebx,DWORD PTR [ebx]
  41f2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f300:	mov    ebp,0xb3b69147
  41f305:	neg    DWORD PTR [edi-0x374fe798]
  41f30b:	bound  ecx,QWORD PTR [di]
  41f30e:	cmp    BYTE PTR [edx],bh
  41f310:	push   0xffffffe7
  41f312:	push   ebx
  41f313:	add    DWORD PTR [ebx-0x773d137c],0xffffff92
  41f31a:	int3   
  41f31b:	inc    edx
  41f31c:	inc    esi
  41f31d:	xchg   DWORD PTR [eax-0x77ed36aa],edx
  41f323:	les    eax,FWORD PTR [edi]
  41f325:	aaa    
  41f326:	push   edx
  41f327:	retf   
  41f328:	xor    bh,BYTE PTR [ecx+0x65aa083f]
  41f32e:	(bad)  
  41f32f:	sbb    esp,edi
  41f331:	add    BYTE PTR [edi+0x3c],dl
  41f334:	xchg   ebp,eax
  41f335:	jnp    0x41f2ce
  41f337:	pop    ecx
  41f338:	dec    eax
  41f339:	pop    ebx
  41f33a:	xchg   ecx,eax
  41f33b:	jp     0x41f38c
  41f33d:	(bad)  
  41f33e:	add    DWORD PTR [ecx],esp
  41f340:	shr    DWORD PTR [ecx-0x72b240e3],1
  41f346:	(bad)  
  41f347:	sbb    al,0x8f
  41f349:	or     BYTE PTR [edi],dl
  41f34b:	adc    bh,0x91
  41f34e:	cmc    
  41f34f:	ins    BYTE PTR es:[edi],dx
  41f350:	test   eax,0x5dca5f73
  41f355:	loop   0x41f2f0
  41f357:	stos   DWORD PTR es:[edi],eax
  41f358:	pop    esp
  41f359:	fs retf 0x42dc
  41f35d:	add    BYTE PTR [ebp+0x37],ah
  41f360:	mov    al,0x22
  41f362:	xchg   ebx,eax
  41f363:	popf   
  41f364:	pop    ebx
  41f365:	call   FWORD PTR [edx+0x2db661d]
  41f36b:	push   ebp
  41f36c:	into   
  41f36d:	mov    eax,ds:0x4b8395ef
  41f372:	not    BYTE PTR [edx]
  41f374:	int    0xe8
  41f376:	test   DWORD PTR [ecx],ebx
  41f378:	lods   al,BYTE PTR ds:[esi]
  41f379:	sub    BYTE PTR [edx-0x10],dh
  41f37c:	scas   al,BYTE PTR es:[edi]
  41f37d:	ins    BYTE PTR es:[edi],dx
  41f37e:	ror    DWORD PTR [ebp+0x2968dc18],0xd7
  41f385:	xchg   esi,eax
  41f386:	push   eax
  41f387:	outs   dx,DWORD PTR ds:[esi]
  41f388:	jne    0x41f3fe
  41f38a:	xchg   esi,eax
  41f38b:	xchg   ebp,eax
  41f38c:	jb     0x41f39d
  41f38e:	aam    0xeb
  41f390:	push   ds
  41f391:	clc    
  41f392:	cmc    
  41f393:	daa    
  41f394:	int3   
  41f395:	shl    dl,cl
  41f397:	neg    DWORD PTR [esp+ebp*8]
  41f39a:	cdq    
  41f39b:	inc    ebx
  41f39c:	and    ebx,DWORD PTR ds:0xed4c0415
  41f3a2:	inc    esp
  41f3a3:	into   
  41f3a4:	push   ds
  41f3a5:	mov    edx,0x578e0fb3
  41f3aa:	loopne 0x41f388
  41f3ac:	popa   
  41f3ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3ae:	shl    DWORD PTR [edi+0x32],1
  41f3b1:	ja     0x41f349
  41f3b3:	push   0x4d330714
  41f3b8:	add    DWORD PTR [ecx],eax
  41f3ba:	or     al,ch
  41f3bc:	inc    ecx
  41f3bd:	xchg   esi,eax
  41f3be:	xchg   ebx,eax
  41f3bf:	push   edx
  41f3c0:	fs das 
  41f3c2:	sub    bl,BYTE PTR [edx]
  41f3c4:	sbb    eax,0x84376eae
  41f3c9:	add    eax,DWORD PTR [edi-0x3ff57fe9]
  41f3cf:	jecxz  0x41f363
  41f3d1:	mov    bl,0xc5
  41f3d3:	pop    edx
  41f3d4:	frstor [ecx]
  41f3d6:	add    edi,DWORD PTR [ebx+0x3a]
  41f3d9:	inc    DWORD PTR [eax+0x3b]
  41f3dc:	cwde   
  41f3dd:	pop    esi
  41f3de:	lahf   
  41f3df:	(bad)  [ecx+0x77af8bf2]
  41f3e5:	lods   eax,DWORD PTR ds:[esi]
  41f3e6:	popf   
  41f3e7:	sbb    BYTE PTR [edx],al
  41f3e9:	aas    
  41f3ea:	pop    eax
  41f3eb:	pop    ds
  41f3ec:	push   edx
  41f3ed:	(bad)
  41f3f2:	loop   0x41f46c
  41f3f4:	call   0x501d2cc6
  41f3f9:	int3   
  41f3fa:	mov    esi,0x54ed36e
  41f3ff:	xchg   esp,eax
  41f400:	daa    
  41f401:	cld    
  41f402:	loop   0x41f47b
  41f404:	xor    eax,0x997d887f
  41f409:	mov    es,ecx
  41f40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f40c:	inc    edi
  41f40d:	mov    ecx,0x70380f8c
  41f412:	cmc    
  41f413:	loop   0x41f489
  41f415:	pushf  
  41f416:	pop    ecx
  41f417:	xchg   bh,bh
  41f419:	inc    ebp
  41f41a:	std    
  41f41b:	xchg   BYTE PTR [edx-0x74],dl
  41f41e:	mov    bl,0xd7
  41f420:	icebp  
  41f421:	push   eax
  41f422:	jg     0x41f3c6
  41f424:	nop
  41f425:	cwde   
  41f426:	test   DWORD PTR [ebx-0x2ab05ccb],esi
  41f42c:	jnp    0x41f405
  41f42e:	fldenv [ecx]
  41f430:	stos   BYTE PTR es:[edi],al
  41f431:	xor    eax,0x556363a5
  41f436:	outs   dx,BYTE PTR ss:[esi]
  41f438:	pop    esp
  41f439:	gs push esp
  41f43b:	pop    ds
  41f43c:	sbb    DWORD PTR [eax+edx*1-0x6377bad5],esi
  41f443:	push   edx
  41f444:	push   0xfd6844c6
  41f449:	inc    edi
  41f44a:	test   al,0xb0
  41f44c:	jae    0x41f411
  41f44e:	xchg   esi,eax
  41f44f:	aad    0xf6
  41f451:	mov    cl,0x6c
  41f453:	and    BYTE PTR ds:0x5ddcd7f6,ch
  41f459:	das    
  41f45a:	fimul  WORD PTR [ebp+ebp*4+0x7baa99bb]
  41f461:	jb     0x41f4d5
  41f463:	repz cdq 
  41f465:	out    0x69,al
  41f467:	mov    ecx,0x184cd30f
  41f46c:	adc    ebp,edi
  41f46e:	sbb    eax,0xd04afeaa
  41f473:	adc    al,0xc6
  41f475:	add    bl,dh
  41f477:	push   0xb7cbb989
  41f47c:	addr16 ds sbb al,0xb6
  41f480:	enter  0x32ce,0x81
  41f484:	mov    BYTE PTR [ecx],al
  41f486:	rcl    DWORD PTR [eax-0x3e],1
  41f489:	mov    bl,0x8d
  41f48b:	sub    BYTE PTR [esp+edx*4+0x7ed13941],ah
  41f492:	inc    edi
  41f493:	adc    bh,BYTE PTR [ecx-0x291d1ddd]
  41f499:	jmp    0x41f4d0
  41f49b:	xchg   edi,eax
  41f49c:	das    
  41f49d:	icebp  
  41f49e:	or     al,0x24
  41f4a0:	xor    al,BYTE PTR [ecx-0x74]
  41f4a3:	sar    DWORD PTR [eax],cl
  41f4a5:	sub    edi,DWORD PTR [ebx]
  41f4a7:	adc    ecx,DWORD PTR [ebp-0x31]
  41f4aa:	cmp    eax,DWORD PTR [ecx]
  41f4ac:	add    al,BYTE PTR [ebp+0xf]
  41f4af:	stc    
  41f4b0:	jmp    0xb41e:0xb9e59961
  41f4b7:	cli    
  41f4b8:	mov    edx,0x3d6e272a
  41f4bd:	jns    0x41f4ff
  41f4bf:	out    dx,eax
  41f4c0:	push   0xffffff86
  41f4c2:	in     eax,dx
  41f4c3:	jmp    0x41f4e6
  41f4c5:	jmp    0x41f4d8
  41f4c7:	pop    ebx
  41f4c8:	inc    esi
  41f4c9:	push   edx
  41f4ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4cb:	cmp    ebx,eax
  41f4cd:	cmp    DWORD PTR [ebp-0x1664290d],ebx
  41f4d3:	mov    ss,WORD PTR [ebx-0x7785137b]
  41f4d9:	inc    edx
  41f4da:	cmp    eax,edx
  41f4dc:	pop    eax
  41f4dd:	sti    
  41f4de:	ins    DWORD PTR es:[edi],dx
  41f4df:	arpl   WORD PTR [eax+0x70],cx
  41f4e2:	adc    eax,0x1d1a7494
  41f4e7:	mov    gs:0x7e5c1a58,al
  41f4ed:	arpl   di,bp
  41f4ef:	fcom   QWORD PTR [ebp+0x3918dba1]
  41f4f5:	jl     0x41f4b6
  41f4f7:	pop    ds
  41f4f8:	(bad)  
  41f4f9:	inc    DWORD PTR [edi]
  41f4fb:	addr16 jns 0x41f53c
  41f4fe:	adc    al,0x71
  41f500:	test   BYTE PTR ds:0xa7431ed8,cl
  41f506:	add    ch,BYTE PTR [eax+0x3877f2c5]
  41f50c:	adc    eax,0x52bbee57
  41f511:	enter  0xd9d,0x28
  41f515:	pop    ebx
  41f516:	enter  0xa84e,0x4
  41f51a:	mov    BYTE PTR [eax+0x5af9b069],ch
  41f520:	xchg   ecx,eax
  41f521:	fimul  DWORD PTR [ecx-0x3f]
  41f524:	mov    ds:0x14b77c7e,al
  41f529:	ret    
  41f52a:	inc    esp
  41f52b:	xchg   ecx,eax
  41f52c:	sub    ebp,edx
  41f52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f52f:	xor    DWORD PTR [esi],eax
  41f531:	lock cdq 
  41f533:	fwait
  41f534:	pop    eax
  41f535:	pusha  
  41f536:	xor    edi,DWORD PTR [ebx+0x5f]
  41f539:	ins    BYTE PTR es:[edi],dx
  41f53a:	xchg   DWORD PTR [edx+eax*1-0x490b899e],eax
  41f541:	adc    BYTE PTR ds:0x8d49a520,bl
  41f547:	les    esi,FWORD PTR [eax-0x46]
  41f54a:	das    
  41f54b:	mov    ch,0xf3
  41f54d:	push   ebx
  41f54e:	das    
  41f54f:	pop    ds
  41f550:	cld    
  41f551:	(bad)  
  41f552:	and    DWORD PTR [ebx+0x176a31ab],ecx
  41f558:	pop    ebx
  41f559:	push   eax
  41f55a:	sub    eax,0xd89ecc09
  41f55f:	jo     0x41f5a8
  41f561:	ret    0xa998
  41f564:	rcr    BYTE PTR [ebx-0x1fbc5e31],cl
  41f56a:	fiadd  WORD PTR [edi+ecx*1]
  41f56d:	mov    DWORD PTR [edi-0x15d7666],ebx
  41f573:	xor    BYTE PTR [edx],dh
  41f575:	aaa    
  41f576:	inc    esp
  41f577:	shl    BYTE PTR [edx+0x2be5b1a0],cl
  41f57d:	data16 fdivr DWORD PTR [ebx+0x32]
  41f581:	mov    ebp,0x318ef3dd
  41f586:	ja     0x41f568
  41f588:	(bad)
  41f58b:	push   0xd694c82c
  41f590:	pop    ss
  41f591:	xchg   edx,eax
  41f592:	call   0xf485e3fa
  41f597:	add    dl,BYTE PTR [esi]
  41f599:	mov    WORD PTR gs:[ecx-0x7b],ss
  41f59d:	imul   edx,DWORD PTR [edi],0xffffffb2
  41f5a0:	and    BYTE PTR [edi+0x6d4be495],0x81
  41f5a7:	jp     0x41f54e
  41f5a9:	scas   al,BYTE PTR es:[edi]
  41f5aa:	nop
  41f5ab:	bound  esi,QWORD PTR [eax]
  41f5ad:	call   0x59b04fa5
  41f5b2:	push   eax
  41f5b3:	and    BYTE PTR [edi],dl
  41f5b5:	push   ebx
  41f5b6:	and    al,BYTE PTR [ebp-0x26d50ece]
  41f5bc:	or     esp,DWORD PTR cs:[eax-0x58c93ac0]
  41f5c3:	fwait
  41f5c4:	adc    DWORD PTR [edi+0x604ea427],edx
  41f5ca:	pop    ebx
  41f5cb:	and    bh,0xc9
  41f5ce:	dec    ebx
  41f5cf:	xor    al,BYTE PTR [edi+0x2f1ee959]
  41f5d5:	mov    cl,0x94
  41f5d7:	jmp    ebp
  41f5d9:	xor    al,0x23
  41f5db:	push   eax
  41f5dc:	or     dl,cl
  41f5de:	and    ah,cl
  41f5e0:	hlt    
  41f5e1:	pop    ebx
  41f5e2:	add    BYTE PTR [ecx],ah
  41f5e4:	retf   0x3135
  41f5e7:	xor    BYTE PTR [ebx+0x66],dl
  41f5ea:	mov    cl,0x4e
  41f5ec:	int    0x18
  41f5ee:	stos   BYTE PTR es:[edi],al
  41f5ef:	mov    edi,0x20db3186
  41f5f4:	and    ecx,DWORD PTR [ecx]
  41f5f6:	cwde   
  41f5f7:	adc    eax,0xd6f7ce7f
  41f5fc:	pop    edx
  41f5fd:	or     ah,BYTE PTR ds:0x8c7c683e
  41f603:	mov    ebx,0xe804a21b
  41f608:	and    esp,ebp
  41f60a:	stos   BYTE PTR es:[edi],al
  41f60b:	mov    BYTE PTR [edx],ah
  41f60d:	mov    bh,0x4b
  41f60f:	call   0xa7ab:0x4785a390
  41f616:	dec    esi
  41f617:	push   esi
  41f618:	or     edx,DWORD PTR [eax+0x64e71771]
  41f61e:	xor    eax,0x59f11b39
  41f623:	mov    ds:0xd3ee89f,eax
  41f628:	enter  0xb062,0xa3
  41f62c:	inc    ecx
  41f62d:	adc    eax,0x440bc2d6
  41f632:	das    
  41f633:	mov    ah,bh
  41f635:	or     al,0xcd
  41f637:	add    cl,BYTE PTR [edx]
  41f639:	aad    0x62
  41f63b:	stos   BYTE PTR es:[edi],al
  41f63c:	inc    esi
  41f63d:	add    edi,DWORD PTR cs:[eax+0x5]
  41f641:	xchg   edi,eax
  41f642:	push   edx
  41f643:	mov    eax,0xc2823c58
  41f648:	aaa    
  41f649:	jle    0x41f652
  41f64b:	scas   eax,DWORD PTR es:[edi]
  41f64c:	mov    esi,0xb89b5a2e
  41f651:	lahf   
  41f652:	call   0x7921a779
  41f657:	and    DWORD PTR [eax-0x533a8f1f],0xe9563714
  41f661:	jle    0x41f649
  41f663:	stos   BYTE PTR es:[edi],al
  41f664:	sub    eax,0x95af59e5
  41f669:	stc    
  41f66a:	pop    esi
  41f66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f66c:	xchg   BYTE PTR [ebx+0x343abd42],dl
  41f672:	and    al,0xc9
  41f674:	ret    0xfd8a
  41f677:	sbb    BYTE PTR [eax+0x2c],bh
  41f67a:	or     ah,BYTE PTR [ebx+ecx*1]
  41f67d:	pop    ss
  41f67e:	fs fdiv st(7),st
  41f681:	(bad)  
  41f682:	sahf   
  41f683:	shr    dl,cl
  41f685:	pop    esi
  41f686:	rcl    ebx,cl
  41f688:	mov    edi,0xc6c73e6b
  41f68d:	sub    BYTE PTR [esi],cl
  41f68f:	and    al,0xbd
  41f691:	jnp    0x41f672
  41f693:	push   0x3c
  41f695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f696:	(bad)  
  41f697:	dec    edi
  41f698:	fist   WORD PTR [ecx-0x831f370]
  41f69e:	and    esp,DWORD PTR [ecx-0x1b4bf1b8]
  41f6a4:	sti    
  41f6a5:	std    
  41f6a6:	jmp    0x19b0:0x6e77b6ff
  41f6ad:	and    BYTE PTR [ebx-0x6ef4a46],al
  41f6b3:	sbb    ebp,DWORD PTR [ebx+0x176e47e4]
  41f6b9:	lods   eax,DWORD PTR ds:[esi]
  41f6ba:	push   esp
  41f6bb:	sub    al,0xf6
  41f6bd:	push   es
  41f6be:	ins    DWORD PTR es:[edi],dx
  41f6bf:	sub    edx,0xd79b8c84
  41f6c5:	dec    ebx
  41f6c6:	mov    ah,0xe3
  41f6c8:	mov    cl,0x19
  41f6ca:	lods   eax,DWORD PTR ds:[esi]
  41f6cb:	(bad)  
  41f6cc:	cdq    
  41f6cd:	cli    
  41f6ce:	push   ecx
  41f6cf:	sbb    BYTE PTR [esi+0x46],ch
  41f6d2:	inc    edx
  41f6d3:	ret    0x5dfe
  41f6d6:	int3   
  41f6d7:	pop    ds
  41f6d8:	(bad)  
  41f6d9:	enter  0x1f00,0x41
  41f6dd:	mov    es,WORD PTR [edx+0x38]
  41f6e0:	jno    0x41f75f
  41f6e2:	sub    BYTE PTR [edi+0x50],bh
  41f6e5:	sbb    edx,DWORD PTR [ebx-0x65]
  41f6e8:	lods   al,BYTE PTR ds:[esi]
  41f6e9:	lock xchg ebp,eax
  41f6eb:	repnz sbb al,0xca
  41f6ee:	inc    ecx
  41f6ef:	inc    BYTE PTR [edi+0x39d58de1]
  41f6f5:	hlt    
  41f6f6:	div    BYTE PTR [ebp-0x4d]
  41f6f9:	push   esi
  41f6fa:	mov    esi,0x33136da9
  41f6ff:	adc    ebp,DWORD PTR [ecx-0x19c0cfc1]
  41f705:	push   ebp
  41f706:	mov    BYTE PTR [ecx+0x9],dh
  41f709:	lds    edx,FWORD PTR [eax*4+0x115736a]
  41f710:	adc    bl,BYTE PTR [ecx-0x32]
  41f713:	data16 fst DWORD PTR [esi+esi*2]
  41f717:	dec    esp
  41f718:	rcl    cl,cl
  41f71a:	jmp    FWORD PTR [eax+0x1fe092a1]
  41f720:	js     0x41f6a3
  41f722:	mov    ebx,0xcf730587
  41f727:	cmp    eax,0xca6fae53
  41f72c:	scas   al,BYTE PTR es:[edi]
  41f72d:	pop    ss
  41f72e:	jle    0x41f743
  41f730:	mov    al,0x91
  41f732:	jo     0x41f6b6
  41f734:	push   ebx
  41f735:	sub    al,0x8
  41f737:	or     al,BYTE PTR [esi+0x5b]
  41f73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f73b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f73c:	js     0x41f70f
  41f73e:	test   eax,0x2408b522
  41f743:	iret   
  41f744:	sbb    BYTE PTR [esi+0x66],bh
  41f747:	pop    ecx
  41f748:	mov    DWORD PTR [ecx+0x50],edx
  41f74b:	cli    
  41f74c:	stc    
  41f74d:	ins    DWORD PTR es:[edi],dx
  41f74e:	scas   eax,DWORD PTR es:[di]
  41f750:	xchg   edx,eax
  41f751:	sahf   
  41f752:	(bad)  
  41f753:	adc    dl,BYTE PTR [edi]
  41f755:	or     al,0x4d
  41f757:	mov    BYTE PTR [esp+edx*2-0x2edf1d4b],dh
  41f75e:	xlat   BYTE PTR ds:[ebx]
  41f75f:	sub    DWORD PTR [eax-0x3cf34ff],esi
  41f765:	xor    al,0xf1
  41f767:	dec    eax
  41f768:	adc    BYTE PTR [esi+edi*8-0x61],dh
  41f76c:	daa    
  41f76d:	dec    eax
  41f76e:	shl    DWORD PTR [edi-0xad4993c],1
  41f774:	pushf  
  41f775:	sub    BYTE PTR [esi-0x1306121f],dh
  41f77b:	mov    WORD PTR [esi+0x1641042],es
  41f781:	cwde   
  41f782:	and    al,0x54
  41f784:	add    edx,esi
  41f786:	xchg   ebp,eax
  41f787:	jae    0x41f7d1
  41f789:	cmp    edx,DWORD PTR [esi]
  41f78b:	aad    0xae
  41f78d:	pop    ds
  41f78e:	pop    ds
  41f78f:	push   ss
  41f790:	stos   DWORD PTR es:[edi],eax
  41f791:	stos   BYTE PTR es:[edi],al
  41f792:	dec    edx
  41f793:	js     0x41f803
  41f795:	add    eax,0x515abe06
  41f79a:	mov    edi,0x11f1b2a4
  41f79f:	hlt    
  41f7a0:	fnsave [ebp+0x3a]
  41f7a3:	aad    0x61
  41f7a5:	mov    al,cs:0x49af2594
  41f7ab:	pop    ss
  41f7ac:	lds    ebp,FWORD PTR [edi-0x6102b4fc]
  41f7b2:	out    dx,eax
  41f7b3:	ret    
  41f7b4:	and    al,BYTE PTR [edi+0x18]
  41f7b7:	mov    eax,ds:0xdbea4824
  41f7bc:	and    dh,cl
  41f7be:	cwde   
  41f7bf:	add    al,0xdc
  41f7c1:	push   ecx
  41f7c2:	push   ds
  41f7c3:	mov    eax,ds:0x836cf2e
  41f7c8:	js     0x41f78d
  41f7ca:	add    edx,DWORD PTR [ecx+0x7b]
  41f7cd:	and    bh,BYTE PTR [ebx+0x62]
  41f7d0:	dec    cl
  41f7d2:	es pop ebx
  41f7d4:	popa   
  41f7d5:	mov    ecx,DWORD PTR [ebp+edx*1-0x5e226c]
  41f7dc:	cmc    
  41f7dd:	mov    edx,ebp
  41f7df:	mov    esp,DWORD PTR [eax+ebx*4-0x11]
  41f7e3:	in     al,0x15
  41f7e5:	es stc 
  41f7e7:	or     al,0xd6
  41f7e9:	xor    ah,BYTE PTR [edx-0x3d]
  41f7ec:	lock les ebp,FWORD PTR [ebx-0x43442f33]
  41f7f3:	mov    ch,0xa7
  41f7f5:	pusha  
  41f7f6:	and    al,0x28
  41f7f8:	fwait
  41f7f9:	ret    0xf01c
  41f7fc:	pop    esp
  41f7fd:	and    BYTE PTR [edi],dl
  41f7ff:	imul   esi,DWORD PTR ds:0xf6f42a82,0x6d66d9ab
  41f809:	scas   al,BYTE PTR es:[edi]
  41f80a:	fucom  st(1)
  41f80c:	push   ds
  41f80d:	vpminub xmm7,xmm1,xmm5
  41f811:	aaa    
  41f812:	test   DWORD PTR [ebx+0x67cf9113],esp
  41f818:	mov    ch,0x9b
  41f81a:	mov    es,WORD PTR [edi-0x6bc853cc]
  41f820:	add    al,0xc9
  41f822:	popf   
  41f823:	xlat   BYTE PTR ds:[ebx]
  41f824:	arpl   WORD PTR [edi+0xf],sp
  41f827:	repnz sti 
  41f829:	cmp    al,0x1c
  41f82b:	jp     0x41f7b0
  41f82d:	xchg   ebp,eax
  41f82e:	jne    0x41f84d
  41f830:	xor    ax,0xacc4
  41f834:	es aam 0x3d
  41f837:	jo     0x41f7d9
  41f839:	outs   dx,DWORD PTR ds:[esi]
  41f83a:	retf   0xc87b
  41f83d:	out    dx,al
  41f83e:	outs   dx,BYTE PTR ds:[esi]
  41f83f:	add    ebp,ebp
  41f841:	aam    0x44
  41f843:	xchg   ebp,eax
  41f844:	adc    eax,0x5ee9d58c
  41f849:	push   0xffffffda
  41f84b:	mov    al,0xcc
  41f84d:	pop    edx
  41f84e:	mov    al,ds:0x6ee86e6d
  41f853:	sbb    BYTE PTR [esi+0x7f],ch
  41f856:	ud1    esp,DWORD PTR [ecx+0x1de11a31]
  41f85d:	lods   eax,DWORD PTR ds:[esi]
  41f85e:	imul   ebx,ebp,0x192d6c3f
  41f864:	addr16 cwde 
  41f866:	xor    DWORD PTR [esi-0x6d],eax
  41f869:	push   cs
  41f86a:	xor    esi,DWORD PTR [edi+0x7c8afe16]
  41f870:	shr    DWORD PTR [edi],1
  41f872:	(bad)  
  41f873:	mov    WORD PTR [edx+0x39],cs
  41f876:	enter  0xdd25,0x7
  41f87a:	pop    ecx
  41f87b:	add    DWORD PTR [ebx+0x1a],edi
  41f87e:	push   es
  41f87f:	push   cs
  41f880:	add    ebx,DWORD PTR [esi+0x48fb9925]
  41f886:	test   ch,al
  41f888:	loopne 0x41f85a
  41f88a:	push   esp
  41f88b:	inc    ecx
  41f88c:	nop
  41f88d:	inc    ecx
  41f88e:	adc    BYTE PTR [esi],bl
  41f890:	sbb    dl,BYTE PTR [ecx+0x49950900]
  41f896:	mov    edx,0x8ea9b5e7
  41f89b:	adc    eax,0x48b008ca
  41f8a0:	fimul  DWORD PTR [ebp+edx*2+0x19455482]
  41f8a7:	pop    es
  41f8a8:	shl    DWORD PTR [edi+0x63],0x4f
  41f8ac:	mov    ah,0xdb
  41f8ae:	inc    ebp
  41f8af:	xchg   edi,eax
  41f8b0:	pop    ss
  41f8b1:	jns    0x41f848
  41f8b3:	and    eax,0xb8ef07ff
  41f8b8:	push   ebx
  41f8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8ba:	stc    
  41f8bb:	mov    ecx,0xfe12b911
  41f8c0:	fmul   st,st(7)
  41f8c2:	scas   al,BYTE PTR es:[edi]
  41f8c3:	jg     0x41f911
  41f8c5:	pop    esi
  41f8c6:	out    dx,al
  41f8c7:	dec    esi
  41f8c8:	push   edi
  41f8c9:	clc    
  41f8ca:	xchg   BYTE PTR [edx+0x7be3dd8f],dl
  41f8d0:	nop
  41f8d1:	dec    esp
  41f8d2:	xor    ch,bh
  41f8d4:	push   ecx
  41f8d5:	pop    eax
  41f8d6:	inc    ebx
  41f8d7:	lahf   
  41f8d8:	dec    ecx
  41f8d9:	sub    BYTE PTR [ebx+0xb],dl
  41f8dc:	adc    BYTE PTR [edx],ah
  41f8de:	mov    ebp,DWORD PTR [edx+0x6f]
  41f8e1:	loop   0x41f916
  41f8e3:	ror    DWORD PTR [ebp-0x41c985a1],1
  41f8e9:	mov    esp,0x6f42b62f
  41f8ee:	sbb    cl,BYTE PTR [ebp-0x40]
  41f8f1:	ins    BYTE PTR es:[edi],dx
  41f8f2:	out    dx,eax
  41f8f3:	and    edx,DWORD PTR [ebx]
  41f8f5:	icebp  
  41f8f6:	ret    0xfbcb
  41f8f9:	inc    esp
  41f8fa:	rcr    DWORD PTR [edi],cl
  41f8fc:	cmp    ch,BYTE PTR [ebx+ecx*1+0x2776d057]
  41f903:	setae  BYTE PTR [edx-0x78]
  41f907:	mov    ah,0x22
  41f909:	movlps xmm2,QWORD PTR cs:[esi+ecx*1]
  41f90e:	mov    esp,edx
  41f910:	jnp    0x41f93f
  41f912:	ds or  bh,al
  41f915:	dec    edx
  41f916:	ret    0x310e
  41f919:	push   ebx
  41f91a:	adc    al,0xbe
  41f91c:	ret    0x2e5
  41f91f:	mov    ebp,0xdab3059c
  41f924:	dec    ebp
  41f925:	call   0x5f36c053
  41f92a:	out    dx,eax
  41f92b:	xor    eax,0x6154f5f2
  41f930:	aad    0x63
  41f932:	cmp    ecx,DWORD PTR [ebx]
  41f934:	xor    bl,al
  41f936:	push   0x4
  41f938:	jmp    0xf196ad4e
  41f93d:	jbe    0x41f968
  41f93f:	sub    esp,DWORD PTR [ecx+esi*8]
  41f942:	test   al,0xa3
  41f944:	mov    dl,0x66
  41f946:	and    esi,esp
  41f948:	dec    eax
  41f949:	js     0x41f933
  41f94b:	push   esi
  41f94c:	aas    
  41f94d:	fsubr  QWORD PTR [ebp-0x19]
  41f950:	push   0xfffffffd
  41f952:	out    dx,al
  41f953:	and    al,0xfd
  41f955:	inc    ebp
  41f956:	sub    edi,eax
  41f958:	aaa    
  41f959:	(bad)  
  41f95a:	mov    eax,ds:0xe236ba26
  41f95f:	fimul  DWORD PTR [ecx]
  41f961:	mov    bl,0xad
  41f963:	retf   
  41f964:	out    0x78,al
  41f966:	xlat   BYTE PTR ds:[ebx]
  41f967:	out    0x30,al
  41f969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f96a:	inc    ebp
  41f96b:	into   
  41f96c:	dec    edx
  41f96d:	pushf  
  41f96e:	xchg   edi,eax
  41f96f:	ins    BYTE PTR es:[edi],dx
  41f970:	sub    dl,BYTE PTR [ebx-0x1e]
  41f973:	or     eax,0x66ee3498
  41f978:	gs push cs
  41f97a:	add    DWORD PTR [eax-0x5607102c],0x796d8ce1
  41f984:	rcr    DWORD PTR [ebp-0x205ca439],1
  41f98a:	imul   ebx,DWORD PTR [esi+0x774fff5e],0x0
  41f991:	lods   eax,DWORD PTR ds:[esi]
  41f992:	or     DWORD PTR [ebp-0x2],ebx
  41f995:	push   ebx
  41f996:	leave  
  41f997:	xchg   esi,eax
  41f998:	setb   BYTE PTR [esi+ebx*1]
  41f99c:	xchg   ebx,eax
  41f99d:	pop    ds
  41f99e:	mov    al,ss:0xf93422b5
  41f9a4:	icebp  
  41f9a5:	rcl    DWORD PTR [esi-0x51],1
  41f9a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9a9:	or     DWORD PTR [edi-0xe],ebx
  41f9ac:	xor    dl,bh
  41f9ae:	lods   al,BYTE PTR ds:[esi]
  41f9af:	lds    ebx,FWORD PTR [eax+0xb]
  41f9b2:	lock fisubr WORD PTR [ebx]
  41f9b5:	sub    BYTE PTR ds:0x70f28f88,bh
  41f9bb:	js     0x41f99c
  41f9bd:	inc    ebx
  41f9be:	sub    DWORD PTR [eax],ecx
  41f9c0:	stos   BYTE PTR es:[edi],al
  41f9c1:	lock or DWORD PTR [ebp*4+0x644d1b07],ecx
  41f9c9:	scas   al,BYTE PTR es:[edi]
  41f9ca:	mov    bl,0x4a
  41f9cc:	test   eax,0x976b1b37
  41f9d1:	dec    esi
  41f9d2:	jecxz  0x41f999
  41f9d4:	mov    ds:0x605a8f25,al
  41f9d9:	sbb    edi,edx
  41f9db:	lahf   
  41f9dc:	arpl   WORD PTR [edx],si
  41f9de:	xchg   ebx,eax
  41f9df:	addr16 aam 0xc0
  41f9e2:	test   DWORD PTR [ebx-0x2f4c5c41],0x1387934e
  41f9ec:	shl    BYTE PTR ds:0xfc622304,0xf6
  41f9f3:	jmp    0x41f9de
  41f9f5:	inc    esp
  41f9f6:	mov    eax,0x4da084a7
  41f9fb:	ja     0x41fa59
  41f9fd:	adc    esp,0xffffffb9
  41fa00:	jg     0x41f9d0
  41fa02:	lahf   
  41fa03:	add    al,0xed
  41fa05:	cmc    
  41fa06:	adc    BYTE PTR [ebp+0x5c],bh
  41fa09:	sbb    BYTE PTR [ebx],dh
  41fa0b:	add    DWORD PTR [eax],ebp
  41fa0d:	lock sti 
  41fa0f:	neg    DWORD PTR [eax-0x553f6c77]
  41fa15:	or     al,0x48
  41fa17:	jnp    0x41fa17
  41fa19:	jle    0x41f9b7
  41fa1b:	xlat   BYTE PTR ss:[ebx]
  41fa1d:	ds cmp eax,0x25eebc31
  41fa23:	pop    edx
  41fa24:	xor    eax,0xae8c863f
  41fa29:	mov    es,WORD PTR fs:[ebp+0x72b72b]
  41fa30:	xchg   ebp,eax
  41fa31:	loopne 0x41f9c4
  41fa33:	aad    0x9e
  41fa35:	dec    esi
  41fa36:	adc    cl,BYTE PTR [ebp-0x7f]
  41fa39:	push   0x797ad3f1
  41fa3e:	inc    ebx
  41fa3f:	test   DWORD PTR [esi+ebp*4+0x24],0xd2d31e0e
  41fa47:	or     al,0xe
  41fa49:	adc    esp,DWORD PTR [edx]
  41fa4b:	sub    BYTE PTR [ebx],al
  41fa4d:	mov    ebp,0xc4903437
  41fa52:	nop
  41fa53:	sbb    eax,0xedd6f68b
  41fa58:	mov    ebx,0xec72aa34
  41fa5d:	dec    edi
  41fa5e:	fiadd  DWORD PTR [ebp+ebp*4-0x43]
  41fa62:	push   ss
  41fa63:	int3   
  41fa64:	cld    
  41fa65:	jg     0x41fa43
  41fa67:	cwde   
  41fa68:	xchg   DWORD PTR [esi],edi
  41fa6a:	pop    eax
  41fa6b:	rcr    ah,1
  41fa6d:	repnz std 
  41fa6f:	sar    DWORD PTR [ecx+0x18],0xb7
  41fa73:	add    ax,0x2811
  41fa77:	scas   eax,DWORD PTR es:[edi]
  41fa78:	and    ch,dh
  41fa7a:	sahf   
  41fa7b:	cmp    al,0xd2
  41fa7d:	sahf   
  41fa7e:	push   cs
  41fa7f:	ss push esi
  41fa81:	inc    ecx
  41fa82:	pushf  
  41fa83:	test   BYTE PTR [edi+0x1ed536ca],dl
  41fa89:	sub    edx,DWORD PTR [edi+eax*2]
  41fa8c:	jae    0x41faa2
  41fa8e:	mov    ds:0x6ce8f5a8,eax
  41fa93:	xchg   ebx,eax
  41fa94:	pop    edx
  41fa95:	jns    0x41fae0
  41fa97:	add    eax,0xdf9d543f
  41fa9c:	aad    0x59
  41fa9e:	icebp  
  41fa9f:	pop    ecx
  41faa0:	push   0xffffffe9
  41faa2:	cmp    edi,edx
  41faa4:	daa    
  41faa5:	dec    ebx
  41faa6:	(bad)  
  41faa7:	sbb    BYTE PTR [ecx],dl
  41faa9:	fisubr WORD PTR [edx]
  41faab:	or     ah,BYTE PTR [edi+0x53692f2]
  41fab1:	fidiv  DWORD PTR [ebx+0x20]
  41fab4:	data16 or al,0x32
  41fab7:	push   ecx
  41fab8:	cmp    edi,DWORD PTR [edx]
  41faba:	sbb    ah,bh
  41fabc:	push   edx
  41fabd:	stos   BYTE PTR es:[edi],al
  41fabe:	mov    eax,ebx
  41fac0:	shl    cl,cl
  41fac2:	sti    
  41fac3:	xchg   ebx,eax
  41fac4:	fstp   DWORD PTR [esi]
  41fac6:	out    dx,eax
  41fac7:	scas   al,BYTE PTR es:[edi]
  41fac8:	add    eax,0x7a636b25
  41facd:	xchg   ebx,eax
  41face:	inc    ecx
  41facf:	fsubr  DWORD PTR [eax-0xebf3d1a]
  41fad5:	mov    BYTE PTR [edi],cl
  41fad7:	idiv   DWORD PTR [edi+0x1624e011]
  41fadd:	jnp    0x41fab7
  41fadf:	sub    eax,0x74e1c066
  41fae4:	or     ebx,ecx
  41fae6:	in     eax,0xb9
  41fae8:	mov    ecx,0x3cf7ee2e
  41faed:	mov    al,ds:0xa38f242b
  41faf2:	cmp    dh,BYTE PTR [ebp-0x3e]
  41faf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faf6:	xchg   DWORD PTR [ebx],edx
  41faf8:	loope  0x41fb58
  41fafa:	cmp    eax,0x51724197
  41faff:	dec    ebp
  41fb00:	and    eax,0xc59e0649
  41fb05:	mov    esi,0x2eb8920b
  41fb0a:	aam    0xd7
  41fb0c:	fcomp  QWORD PTR [eax]
  41fb0e:	ja     0x41fb72
  41fb10:	mov    dh,0x82
  41fb12:	test   al,0x38
  41fb14:	mul    DWORD PTR [ebx+0x21ec16bc]
  41fb1a:	(bad)  
  41fb1b:	lock lea esp,[eax]
  41fb1e:	jl     0x41fb32
  41fb20:	cld    
  41fb21:	mov    ebp,0xd74f095e
  41fb26:	pop    es
  41fb27:	mov    ds:0x18d9eaff,al
  41fb2c:	xchg   ebx,eax
  41fb2d:	mov    WORD PTR [ecx],?
  41fb2f:	mov    esi,0x7b5bc6a7
  41fb34:	mov    ecx,0xe0626635
  41fb39:	adc    bh,al
  41fb3b:	pop    ecx
  41fb3c:	ja     0x41fb35
  41fb3e:	je     0x41fb50
  41fb40:	js     0x41faf4
  41fb42:	daa    
  41fb43:	out    dx,al
  41fb44:	cmp    bl,dl
  41fb46:	frstor [ebx-0x47fdc2a5]
  41fb4c:	fwait
  41fb4d:	dec    ebp
  41fb4e:	adc    esi,DWORD PTR [esi+0x54]
  41fb51:	jb     0x41fb18
  41fb53:	hlt    
  41fb54:	xchg   esi,eax
  41fb55:	sub    BYTE PTR [esi*8+0x27a34de7],bh
  41fb5c:	push   es
  41fb5d:	out    dx,al
  41fb5e:	mov    ebx,0xbbeb5a2a
  41fb63:	mov    ebx,0x821a1418
  41fb68:	sbb    DWORD PTR [eax],edx
  41fb6a:	addr16 jmp 0xff86:0x94fd9f42
  41fb72:	dec    edx
  41fb73:	fldcw  WORD PTR ds:0xb535b0bc
  41fb79:	sbb    eax,0xa1e42784
  41fb7e:	lahf   
  41fb7f:	xor    al,0xb5
  41fb81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb82:	ins    DWORD PTR es:[edi],dx
  41fb83:	inc    ecx
  41fb84:	loop   0x41fbdf
  41fb86:	mov    eax,ds:0x33e48817
  41fb8b:	pop    es
  41fb8c:	inc    esi
  41fb8d:	popa   
  41fb8e:	inc    ebp
  41fb8f:	ret    
  41fb90:	mov    eax,ds:0xbee03479
  41fb95:	lds    esp,FWORD PTR [edx+0x20]
  41fb98:	div    DWORD PTR [ecx-0x36]
  41fb9b:	pop    esi
  41fb9c:	push   esp
  41fb9d:	mov    BYTE PTR [ecx-0x62],ah
  41fba0:	cmp    BYTE PTR [ebx],dl
  41fba2:	es repz jle 0x41fbe0
  41fba6:	jmp    0x41fb93
  41fba8:	mov    al,0x7f
  41fbaa:	jle    0x41fbcb
  41fbac:	mov    esi,0x514dff17
  41fbb1:	inc    edx
  41fbb2:	jo     0x41fb85
  41fbb4:	fiadd  DWORD PTR [esi+0x2]
  41fbb7:	lods   eax,DWORD PTR ds:[esi]
  41fbb8:	das    
  41fbb9:	ds jmp 0x8d4fa33b
  41fbbf:	rcl    DWORD PTR [ebx],1
  41fbc1:	dec    esp
  41fbc2:	or     al,0x5
  41fbc4:	sbb    DWORD PTR [ecx+0x1],edx
  41fbc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbc8:	pop    ebp
  41fbc9:	sbb    edi,eax
  41fbcb:	fiadd  WORD PTR [edi+esi*8+0x74]
  41fbcf:	xor    eax,0x8ee6c0f
  41fbd4:	add    edx,ebx
  41fbd6:	loopne 0x41fb8d
  41fbd8:	je     0x41fbf1
  41fbda:	imul   DWORD PTR [ebx]
  41fbdc:	into   
  41fbdd:	ficomp DWORD PTR [ecx-0x78e626ea]
  41fbe3:	retf   0x1897
  41fbe6:	and    bh,BYTE PTR [edi]
  41fbe8:	sub    DWORD PTR [edx-0x1368b937],esp
  41fbee:	dec    eax
  41fbef:	scas   al,BYTE PTR es:[edi]
  41fbf0:	ds jno 0x41fbaf
  41fbf3:	add    eax,0xcdcf99d2
  41fbf8:	cmp    bh,BYTE PTR [ebx+0x1b9971d9]
  41fbfe:	xchg   ecx,eax
  41fbff:	dec    eax
  41fc00:	pop    eax
  41fc01:	xlat   BYTE PTR ds:[ebx]
  41fc02:	inc    esi
  41fc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc04:	mov    bl,0x3a
  41fc06:	push   ecx
  41fc07:	adc    BYTE PTR [esi+edx*8+0x29],0x45
  41fc0c:	test   BYTE PTR [edx],al
  41fc0e:	dec    ecx
  41fc0f:	gs mov ebx,0x1f160570
  41fc15:	addr16 ja 0x41fc3f
  41fc18:	adc    DWORD PTR [edi-0x395badf5],ecx
  41fc1e:	rcr    cl,cl
  41fc20:	cmp    BYTE PTR [edi-0x2fd9b2a0],0xc6
  41fc27:	sbb    DWORD PTR [ebp-0x60],edx
  41fc2a:	(bad)  
  41fc2b:	retf   0xa569
  41fc2e:	add    BYTE PTR [ebx+eax*4-0x5878de4a],bh
  41fc35:	addr16 adc eax,0xfb20e3b0
  41fc3b:	test   BYTE PTR [edi-0x32],ch
  41fc3e:	push   ecx
  41fc3f:	iret   
  41fc40:	fistp  WORD PTR [eax]
  41fc42:	loope  0x41fbe2
  41fc44:	test   BYTE PTR [esi],dl
  41fc46:	ds pop ss
  41fc48:	mov    dh,0x6a
  41fc4a:	cmp    al,0xa6
  41fc4c:	and    BYTE PTR [edx],al
  41fc4e:	pop    edx
  41fc4f:	jne    0x41fc4f
  41fc51:	dec    eax
  41fc52:	sub    edx,DWORD PTR [edx]
  41fc54:	adc    edi,DWORD PTR [edx]
  41fc56:	dec    edx
  41fc57:	jg     0x41fc5f
  41fc59:	adc    al,0x22
  41fc5b:	ins    DWORD PTR es:[edi],dx
  41fc5c:	fs or  al,0x92
  41fc5f:	push   esp
  41fc60:	js     0x41fcd6
  41fc62:	fbstp  TBYTE PTR [edx-0x57]
  41fc65:	test   al,0xa8
  41fc67:	push   eax
  41fc68:	shl    BYTE PTR [edx+0x7d3533b5],1
  41fc6e:	or     eax,0xc47cd455
  41fc73:	pop    ds
  41fc74:	retf   0x3eb0
  41fc77:	(bad)  
  41fc78:	aas    
  41fc79:	or     BYTE PTR [edx-0x6b],dl
  41fc7c:	inc    ebp
  41fc7d:	dec    ecx
  41fc7e:	loop   0x41fc70
  41fc80:	sbb    ah,ah
  41fc82:	xor    ebp,DWORD PTR ds:0x2e3fc2f
  41fc88:	jle    0x41fc6f
  41fc8a:	jp     0x41fcf8
  41fc8c:	ret    
  41fc8d:	xor    esp,DWORD PTR fs:[eax+0x312ed473]
  41fc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc95:	inc    eax
  41fc96:	xchg   esp,eax
  41fc97:	mov    WORD PTR [eax],es
  41fc99:	pop    esp
  41fc9a:	ins    DWORD PTR es:[edi],dx
  41fc9b:	fs mov bl,0x91
  41fc9e:	jecxz  0x41fcb6
  41fca0:	mov    esi,0x8a566f7a
  41fca5:	div    edi
  41fca7:	xor    eax,0xc7b81800
  41fcac:	pushf  
  41fcad:	push   ss
  41fcae:	pop    DWORD PTR [ebx+0x5a]
  41fcb1:	loopne 0x41fc4d
  41fcb3:	scas   eax,DWORD PTR es:[edi]
  41fcb4:	sbb    al,0x83
  41fcb6:	ret    0xb478
  41fcb9:	data16 fucomp st(0)
  41fcbc:	sbb    al,0xf1
  41fcbe:	mov    BYTE PTR [esp+eax*2],bh
  41fcc1:	mov    ebp,0xb0535f52
  41fcc6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41fcc8:	adc    eax,eax
  41fcca:	xchg   ecx,eax
  41fccb:	ins    DWORD PTR es:[edi],dx
  41fccc:	repnz shr DWORD PTR [edx+edx*8-0x719dd287],1
  41fcd4:	cmp    ebp,ebx
  41fcd6:	cmp    BYTE PTR [edx+0x682655c4],ch
  41fcdc:	and    eax,esi
  41fcde:	stos   BYTE PTR es:[edi],al
  41fcdf:	je     0x41fcb1
  41fce1:	jmp    0x6fbe8dc3
  41fce6:	add    al,0xe9
  41fce8:	sbb    eax,0x15808e6b
  41fced:	mov    WORD PTR [ecx+0x64],cs
  41fcf0:	pop    esi
  41fcf1:	mov    WORD PTR [esi+0x2519db91],ds
  41fcf7:	ficom  DWORD PTR ds:0x30399539
  41fcfd:	xor    eax,0xde84271d
  41fd02:	nop
  41fd03:	aas    
  41fd04:	jns    0x41fcca
  41fd06:	jecxz  0x41fce3
  41fd08:	call   0x56cb:0xd45d737c
  41fd0f:	push   ds
  41fd10:	addr16 push ds
  41fd12:	jge    0x41fce8
  41fd14:	mov    dh,0x1
  41fd16:	push   cs
  41fd17:	call   0xc8f0:0x58236a81
  41fd1e:	retf   0x5ccb
  41fd21:	mov    ds:0x6989e345,al
  41fd26:	clc    
  41fd27:	dec    ebp
  41fd28:	dec    ebx
  41fd29:	sub    DWORD PTR [edi-0xb511a75],ebp
  41fd2f:	imul   eax,DWORD PTR [ecx],0xffffffe4
  41fd32:	mov    ecx,0x47dab03f
  41fd37:	mov    ds:0xa7b307c4,eax
  41fd3c:	mov    es,WORD PTR [edx]
  41fd3e:	mov    eax,ds:0x390796b4
  41fd43:	mov    ebx,0x70de1f4c
  41fd48:	pop    es
  41fd49:	pusha  
  41fd4a:	(bad)  
  41fd4c:	in     eax,dx
  41fd4d:	and    BYTE PTR [ebp+0x573f7ac4],ch
  41fd53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd54:	sbb    BYTE PTR [ebx+0x19d2618b],dl
  41fd5a:	xchg   edx,eax
  41fd5b:	adc    DWORD PTR [esi-0x5aa5efed],ebx
  41fd61:	lea    esi,[edx-0x179ef634]
  41fd67:	mov    cs,WORD PTR [esi-0x43]
  41fd6a:	(bad)  
  41fd6b:	retf   
  41fd6c:	out    dx,al
  41fd6d:	(bad)  
  41fd6e:	aad    0xf6
  41fd70:	inc    esp
  41fd71:	jae    0x41fd5f
  41fd73:	lea    ebp,[edx-0x3a]
  41fd76:	in     al,dx
  41fd77:	xor    ch,ch
  41fd79:	add    al,0x14
  41fd7b:	pop    eax
  41fd7c:	inc    esi
  41fd7d:	sub    eax,0x55d862b4
  41fd82:	xchg   ebx,eax
  41fd83:	out    dx,eax
  41fd84:	out    0x9d,eax
  41fd86:	call   0xc69d819a
  41fd8b:	inc    edx
  41fd8c:	ror    DWORD PTR [esi-0x6],1
  41fd8f:	adc    BYTE PTR [edi+0x3b],dh
  41fd92:	shl    eax,0x86
  41fd95:	mov    es,WORD PTR [ebp+0x20]
  41fd98:	pop    edx
  41fd99:	and    BYTE PTR [ecx-0x32],0xfa
  41fd9d:	xchg   ebp,eax
  41fd9e:	inc    edx
  41fd9f:	je     0x41fd8b
  41fda1:	retf   0x8b92
  41fda4:	push   ds
  41fda5:	fisubr WORD PTR [ecx-0x51]
  41fda8:	mov    WORD PTR [edx+eax*4+0x37],gs
  41fdac:	dec    esi
  41fdad:	mov    esp,0x1c5ab562
  41fdb2:	xchg   ebp,eax
  41fdb3:	in     al,dx
  41fdb4:	ins    BYTE PTR es:[edi],dx
  41fdb5:	clc    
  41fdb6:	int3   
  41fdb7:	xlat   BYTE PTR ds:[ebx]
  41fdb8:	popf   
  41fdb9:	ja     0x41fdbf
  41fdbb:	dec    edi
  41fdbc:	fisttp QWORD PTR [esi-0x7b14821b]
  41fdc2:	(bad)  
  41fdc3:	jmp    0x3416:0xb7bd5443
  41fdca:	jmp    0x41fd9e
  41fdcc:	push   ecx
  41fdcd:	xor    al,0xd3
  41fdcf:	xor    edi,ebx
  41fdd1:	dec    esp
  41fdd2:	adc    esi,DWORD PTR [ecx+0x7cddd10]
  41fdd8:	adc    ecx,DWORD PTR [ebx-0x6e]
  41fddb:	ja     0x41fd65
  41fddd:	adc    ecx,ebx
  41fddf:	addr16 aaa 
  41fde1:	mov    DWORD PTR [esi+0x1c276306],edi
  41fde7:	loope  0x41fe0a
  41fde9:	fadd   st(0),st
  41fdeb:	int3   
  41fdec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fded:	push   ebx
  41fdee:	add    DWORD PTR [ecx+0x38adb6ff],edi
  41fdf4:	lods   eax,DWORD PTR ds:[esi]
  41fdf5:	scas   eax,DWORD PTR es:[edi]
  41fdf6:	or     eax,0x5561ac61
  41fdfb:	shl    esp,1
  41fdfd:	(bad)  
  41fdfe:	and    DWORD PTR [ebp+0x2a546669],eax
  41fe04:	shl    BYTE PTR [eax+0x12587677],cl
  41fe0a:	mov    ch,0xc2
  41fe0c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41fe0e:	cld    
  41fe0f:	or     eax,edx
  41fe11:	xchg   esp,eax
  41fe12:	cmp    dl,BYTE PTR [eax+0xf]
  41fe15:	jp     0x41fdbe
  41fe17:	jno    0x41fe18
  41fe19:	and    dl,BYTE PTR [edi+edi*1]
  41fe1c:	sub    BYTE PTR [ebx],bl
  41fe1e:	fs in  eax,0x12
  41fe21:	stos   DWORD PTR es:[edi],eax
  41fe22:	or     ebp,DWORD PTR [eax]
  41fe24:	mov    ebp,0x86f47bbd
  41fe29:	inc    esp
  41fe2a:	test   BYTE PTR [esp+esi*4],al
  41fe2d:	int    0xec
  41fe2f:	ss cmp dl,dl
  41fe32:	mov    ds:0x5dc94132,eax
  41fe37:	inc    ebx
  41fe38:	push   cs
  41fe39:	mov    al,0xa7
  41fe3b:	retf   0x1f8a
  41fe3e:	iret   
  41fe3f:	jbe    0x41fe31
  41fe41:	and    DWORD PTR [edi+edi*4+0x2084a2df],esp
  41fe48:	pop    eax
  41fe49:	sub    esp,esi
  41fe4b:	xor    DWORD PTR [esi-0x6e],ebp
  41fe4e:	int3   
  41fe4f:	inc    ecx
  41fe50:	mov    ebp,0xfc568160
  41fe55:	add    eax,DWORD PTR [ebx]
  41fe57:	faddp  st(4),st
  41fe59:	mov    ds:0x2a53bc3c,eax
  41fe5e:	loopne 0x41fe54
  41fe60:	pop    edi
  41fe61:	mov    ds,edx
  41fe63:	mov    al,0x17
  41fe65:	xchg   ebp,eax
  41fe66:	mov    cl,0xd4
  41fe68:	or     ch,BYTE PTR [esi]
  41fe6a:	push   esi
  41fe6b:	out    dx,al
  41fe6c:	adc    eax,0x1044830
  41fe71:	ss add eax,0xa1eabe61
  41fe77:	in     al,0x40
  41fe79:	out    dx,al
  41fe7a:	or     eax,0x2b46245e
  41fe7f:	dec    esp
  41fe80:	lahf   
  41fe81:	mov    al,0x2e
  41fe83:	int3   
  41fe84:	sbb    al,BYTE PTR [eax-0x1468bfd0]
  41fe8a:	dec    ecx
  41fe8b:	cmp    eax,0xe7c022ce
  41fe90:	xchg   edx,eax
  41fe91:	jb     0x41feb0
  41fe93:	xchg   ebp,eax
  41fe94:	daa    
  41fe95:	cmc    
  41fe96:	xchg   esp,eax
  41fe97:	loop   0x41fe7a
  41fe99:	adc    ah,BYTE PTR [ebx]
  41fe9b:	lea    edx,[edi]
  41fe9d:	mov    cl,0x6d
  41fe9f:	in     eax,0x34
  41fea1:	nop
  41fea2:	shl    DWORD PTR [eax],cl
  41fea4:	pushf  
  41fea5:	out    dx,ax
  41fea7:	icebp  
  41fea8:	sar    BYTE PTR [edi],0xaf
  41feab:	inc    ecx
  41feac:	and    al,0xcc
  41feae:	pop    ds
  41feaf:	jb     0x41ff2f
  41feb1:	cmc    
  41feb2:	push   cs
  41feb3:	imul   edx,DWORD PTR [ebx-0x4f],0x40
  41feb7:	cmp    dh,dl
  41feb9:	and    BYTE PTR [ecx+0x39],0xbe
  41febd:	dec    ebx
  41febe:	xchg   ebx,eax
  41febf:	jnp    0x41fe4b
  41fec1:	dec    ecx
  41fec2:	mov    bh,0x11
  41fec4:	enter  0x5fc9,0xae
  41fec8:	test   al,0x9e
  41feca:	xchg   esp,eax
  41fecb:	push   0xffffffba
  41fecd:	ins    BYTE PTR es:[edi],dx
  41fece:	pop    edx
  41fecf:	xor    bh,BYTE PTR [ebx-0x6d]
  41fed2:	hlt    
  41fed3:	xchg   ecx,eax
  41fed4:	cmp    BYTE PTR [edi],dl
  41fed6:	aaa    
  41fed7:	pusha  
  41fed8:	ja     0x41ff39
  41feda:	push   ebp
  41fedb:	jecxz  0x41ff28
  41fedd:	imul   ebx,ecx,0x16
  41fee0:	outs   dx,BYTE PTR ds:[esi]
  41fee1:	(bad)  
  41fee2:	std    
  41fee3:	adc    al,0xe7
  41fee5:	xchg   esi,eax
  41fee6:	xchg   BYTE PTR [edx+0x7cb9a55b],dl
  41feec:	sub    eax,0xc6afa28e
  41fef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fef2:	ds fs mov edx,0x434d8d78
  41fef9:	mov    eax,ds:0x9953224d
  41fefe:	pop    es
  41feff:	fucomp st(7)
  41ff01:	push   edi
  41ff02:	repnz add DWORD PTR [edi],edx
  41ff05:	pushf  
  41ff06:	and    bl,bh
  41ff08:	hlt    
  41ff09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff0a:	cmp    esp,DWORD PTR [eax-0x4d]
  41ff0d:	pushf  
  41ff0e:	push   cs
  41ff0f:	(bad)  
  41ff10:	pop    eax
  41ff11:	ret    0x5eb
  41ff14:	bound  edx,QWORD PTR [eax]
  41ff16:	jmp    0x540c:0x2a4ddc59
  41ff1d:	or     DWORD PTR [edi],esp
  41ff1f:	leave  
  41ff20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff21:	jne    0x41ff6f
  41ff23:	dec    esp
  41ff24:	sbb    al,dh
  41ff26:	dec    edi
  41ff27:	and    eax,0x810c28ac
  41ff2c:	add    al,0x2a
  41ff2e:	or     bh,dh
  41ff30:	mov    DWORD PTR gs:[ecx+eiz*2-0x532b9a46],0x7270200c
  41ff3c:	sbb    cl,BYTE PTR [ecx-0x73]
  41ff3f:	(bad)  
  41ff40:	fisttp DWORD PTR [edi]
  41ff42:	lahf   
  41ff43:	mov    eax,ds:0xd6e5d2e3
  41ff48:	sbb    al,0x3
  41ff4a:	sbb    eax,0x816fc909
  41ff4f:	add    al,0xa7
  41ff51:	nop
  41ff52:	icebp  
  41ff53:	sti    
  41ff54:	call   0x568609d
  41ff59:	pop    ss
  41ff5a:	je     0x41ff02
  41ff5c:	adc    BYTE PTR [edx],bl
  41ff5e:	cwde   
  41ff5f:	stos   DWORD PTR es:[edi],eax
  41ff60:	pop    ecx
  41ff61:	push   es
  41ff62:	imul   esi,DWORD PTR [eax-0xd],0x61
  41ff66:	mov    cl,0xb0
  41ff68:	addr16 retf 
  41ff6a:	jecxz  0x41ff2b
  41ff6c:	mov    ds:0x37ec8ef0,eax
  41ff71:	cmp    eax,0xba007998
  41ff76:	lods   eax,DWORD PTR ds:[esi]
  41ff77:	xor    ebx,DWORD PTR [ebx]
  41ff79:	mov    cl,0xf1
  41ff7b:	mov    bh,0xae
  41ff7d:	and    BYTE PTR [bp+di+0x64],cl
  41ff81:	mov    DWORD PTR [edi-0x77f2b9a5],0x8165776a
  41ff8b:	(bad)  
  41ff8c:	in     eax,dx
  41ff8d:	scas   eax,DWORD PTR es:[edi]
  41ff8e:	lock xlat BYTE PTR ds:[ebx]
  41ff90:	sbb    al,0x75
  41ff92:	lahf   
  41ff93:	rcr    BYTE PTR [ebp+eiz*8+0x2fb664de],1
  41ff9a:	push   ss
  41ff9b:	sbb    al,0x8a
  41ff9d:	cmp    eax,0xc84e008e
  41ffa2:	retf   0x961a
  41ffa5:	pushf  
  41ffa6:	stos   BYTE PTR es:[edi],al
  41ffa7:	out    dx,al
  41ffa8:	mov    dl,ch
  41ffaa:	dec    edi
  41ffab:	jmp    0x283d7a1f
  41ffb0:	mov    al,ds:0xbd220d3c
  41ffb5:	adc    edi,edx
  41ffb7:	int    0x2d
  41ffb9:	xchg   esi,eax
  41ffba:	shr    DWORD PTR [eax+0x73f9b213],1
  41ffc0:	mov    ecx,0x4fd5ae4b
  41ffc5:	push   es
  41ffc6:	mov    ch,0x17
  41ffc8:	and    edx,DWORD PTR [esp+esi*4+0x43ae6b45]
  41ffcf:	ret    0x5a59
  41ffd2:	jle    0x420011
  41ffd4:	jae    0x41ffb3
  41ffd6:	xchg   ecx,eax
  41ffd7:	loopne 0x41ffc2
  41ffd9:	inc    ebx
  41ffda:	push   ss
  41ffdb:	add    BYTE PTR [eax-0x56],ah
  41ffde:	je     0x420034
  41ffe0:	pop    ecx
  41ffe1:	arpl   WORD PTR [esi+0x5],dx
  41ffe4:	push   edx
  41ffe5:	jg     0x420037
  41ffe7:	into   
  41ffe8:	or     eax,0x65b570eb
  41ffed:	mov    ah,0xd
  41ffef:	sti    
  41fff0:	lods   al,BYTE PTR fs:[esi]
  41fff2:	inc    esi
  41fff3:	mul    BYTE PTR [edi-0x18e25a41]
  41fff9:	lahf   
  41fffa:	lock pop ebx
  41fffc:	call   0x92c8e0ee
  420001:	dec    edi
  420002:	mov    WORD PTR [ecx],gs
  420004:	mov    ch,0xf0
  420006:	or     BYTE PTR ds:0xab364cd9,bh
  42000c:	popa   
  42000d:	pop    ds
  42000e:	inc    esp
  42000f:	nop
  420010:	sti    
  420011:	pop    es
  420012:	(bad)  
  420013:	test   eax,0xfe6afdb9
  420018:	mov    WORD PTR [esp+edi*1+0x5e60e5de],?
  42001f:	(bad)  
  420020:	dec    eax
  420021:	mov    WORD PTR [ebp-0x5c3f60c3],ss
  420027:	pop    edx
  420028:	pushf  
  420029:	js     0x41ffc6
  42002b:	in     eax,dx
  42002c:	sub    eax,0x149cc63
  420031:	xchg   edi,eax
  420032:	dec    esp
  420033:	xchg   DWORD PTR [ebp+ebx*4-0x20f91ded],esi
  42003a:	jle    0x420005
  42003c:	(bad)  
  42003d:	nop
  42003e:	es dec ebp
  420040:	nop
  420041:	adc    eax,DWORD PTR [edx-0x79b2d1f3]
  420047:	or     eax,0xa0a66eac
  42004c:	push   esp
  42004d:	push   cs
  42004e:	in     al,dx
  42004f:	pop    esi
  420050:	fcom   DWORD PTR ss:[eax]
  420053:	call   0x8d35:0xb5ccee65
  42005a:	sub    bh,BYTE PTR [edi+0x4fe82b22]
  420060:	xchg   edi,eax
  420061:	clc    
  420062:	and    BYTE PTR [edx-0x25],ch
  420065:	inc    esp
  420066:	jbe    0x42007e
  420068:	test   DWORD PTR [edx-0x201cf37a],edi
  42006e:	cmc    
  42006f:	xor    al,0xc0
  420071:	jmp    0x5b29:0x5fc52727
  420078:	push   cs
  420079:	adc    DWORD PTR [esi-0x17],0x449d7e9e
  420080:	lods   al,BYTE PTR ds:[esi]
  420081:	mov    eax,0xa656a10e
  420086:	mov    dl,0x30
  420088:	ja     0x4200cc
  42008a:	clc    
  42008b:	add    ah,BYTE PTR [eax]
  42008d:	iret   
  42008e:	inc    esi
  42008f:	mov    eax,ds:0xdac512e8
  420094:	mov    fs:0x3fc2e2d,eax
  42009a:	lea    ebx,[ecx]
  42009c:	mov    esp,0xbd5ac02d
  4200a1:	stos   BYTE PTR es:[edi],al
  4200a2:	nop
  4200a3:	stos   BYTE PTR es:[edi],al
  4200a4:	dec    esi
  4200a5:	fnstenv [esi-0x40f0a6b5]
  4200ab:	sti    
  4200ac:	aaa    
  4200ad:	cmp    ch,bh
  4200af:	ficom  WORD PTR [ecx+0x261455e7]
  4200b5:	mov    ah,0x9b
  4200b7:	sbb    ecx,ecx
  4200b9:	inc    ecx
  4200ba:	pop    edx
  4200bb:	inc    esp
  4200bc:	mov    dh,dl
  4200be:	les    ecx,FWORD PTR [edi-0x52]
  4200c1:	push   0x64ccbdb7
  4200c6:	sbb    DWORD PTR [esp+eax*8+0x57ece56d],ebx
  4200cd:	jo     0x420102
  4200cf:	clc    
  4200d0:	nop    DWORD PTR [esp+ecx*8-0x56]
  4200d5:	lods   eax,DWORD PTR ds:[esi]
  4200d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200d7:	stos   DWORD PTR es:[edi],eax
  4200d8:	pusha  
  4200d9:	xor    ebp,DWORD PTR [ebp-0x5]
  4200dc:	jmp    0x6eae:0x44c15515
  4200e3:	sbb    al,0xbf
  4200e5:	fnstenv [ebx-0xc]
  4200e8:	push   edi
  4200e9:	pop    ecx
  4200ea:	ins    BYTE PTR es:[edi],dx
  4200eb:	pop    esp
  4200ec:	push   edx
  4200ed:	shl    edx,1
  4200ef:	ds jg  0x420133
  4200f2:	mov    cl,0x3a
  4200f4:	arpl   ax,si
  4200f6:	loopne 0x420115
  4200f8:	lds    ecx,FWORD PTR [ebx]
  4200fa:	pop    ebx
  4200fb:	sahf   
  4200fc:	sub    BYTE PTR [ecx],dh
  4200fe:	mov    DWORD PTR [edi],esi
  420100:	aas    
  420101:	sbb    bh,BYTE PTR [eax+0x3ed1ce7e]
  420107:	(bad)  
  420108:	mov    dl,0x8e
  42010a:	mov    bh,ah
  42010c:	pusha  
  42010d:	mov    edx,esp
  42010f:	(bad)  
  420110:	adc    eax,0xfb432d5
  420115:	xchg   BYTE PTR [edx],ah
  420117:	push   ss
  420118:	test   eax,0x29984666
  42011d:	adc    DWORD PTR [eax-0x75618a1a],ecx
  420123:	pinsrw mm7,WORD PTR [eax],0x4e
  420127:	retf   0x3690
  42012a:	xchg   ebp,eax
  42012b:	sbb    cl,bh
  42012d:	mov    BYTE PTR [edx+ebp*4+0x59],ch
  420131:	(bad)  
  420132:	std    
  420133:	mov    edx,0xc7df7a40
  420138:	pop    ds
  420139:	adc    edi,DWORD PTR [edx]
  42013b:	push   ebx
  42013c:	pop    edi
  42013d:	mov    al,BYTE PTR [ebx]
  42013f:	dec    esi
  420140:	stos   DWORD PTR es:[edi],eax
  420141:	sub    BYTE PTR [ebp+0x6ea2f7a3],ch
  420147:	pop    edi
  420148:	or     al,al
  42014a:	shl    BYTE PTR [esi-0x4fb57272],0xca
  420151:	pop    edx
  420152:	rcl    DWORD PTR [edx+edx*8+0x3af3b24b],0xc7
  42015a:	ror    BYTE PTR [edi+0x5a317994],cl
  420160:	mov    al,ds:0xe7e2df9a
  420165:	jmp    0x40:0x4003cb02
  42016c:	sub    BYTE PTR [ebx-0x2b],al
  42016f:	fldenv [edi+0x46e92318]
  420175:	test   BYTE PTR [ebx+0x1866e52e],ch
  42017b:	loope  0x420133
  42017d:	push   es
  42017e:	test   BYTE PTR [eax+0x14598e05],cl
  420184:	cmovns edx,DWORD PTR [ecx+0x2a5a0ff2]
  42018b:	add    eax,0x6de50715
  420190:	xor    DWORD PTR [edi],eax
  420192:	or     eax,0xf1de5e8b
  420197:	test   cl,0x5d
  42019a:	jecxz  0x420126
  42019c:	dec    esp
  42019d:	(bad)  
  42019e:	mov    eax,ds:0x469d17fb
  4201a3:	loope  0x420220
  4201a5:	call   0xebb5:0x38fcfe55
  4201ac:	mov    BYTE PTR [edi],dh
  4201ae:	shl    BYTE PTR [edi],1
  4201b0:	add    eax,0x231fa034
  4201b5:	xchg   edx,eax
  4201b6:	jb     0x420210
  4201b8:	js     0x420232
  4201ba:	mov    esp,0x68af4e46
  4201bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201c0:	adc    eax,ebp
  4201c2:	popa   
  4201c3:	pop    ebx
  4201c4:	pop    ss
  4201c5:	jno    0x4201e1
  4201c7:	jmp    0x5ef6d9a
  4201cc:	jecxz  0x420247
  4201ce:	cmp    al,0x20
  4201d0:	jae    0x4201ce
  4201d2:	push   edi
  4201d3:	sahf   
  4201d4:	xchg   ebp,eax
  4201d5:	mov    bh,0xe
  4201d7:	bound  ecx,QWORD PTR [esi]
  4201d9:	mov    esp,0x3e859078
  4201de:	(bad)  
  4201df:	and    dh,cl
  4201e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201e2:	or     dl,BYTE PTR [edx+0x4ae58aa8]
  4201e8:	inc    esi
  4201e9:	pusha  
  4201ea:	pop    ss
  4201eb:	sbb    BYTE PTR [esi],0xe6
  4201ee:	out    0xe4,eax
  4201f0:	arpl   WORD PTR [esi+0x34],di
  4201f3:	pop    ds
  4201f4:	iret   
  4201f5:	out    0x9b,eax
  4201f7:	data16 mov dh,BYTE PTR [eax+0x8ba7542]
  4201fe:	dec    esi
  4201ff:	add    BYTE PTR [ebx-0x7a],0xc2
  420203:	test   al,0xf0
  420205:	out    dx,al
  420206:	sbb    DWORD PTR [esi-0xa],eax
  420209:	fwait
  42020a:	jo     0x420262
  42020c:	sub    al,0x9e
  42020e:	test   DWORD PTR [edi-0x6d81c926],0x8cf0ef71
  420218:	nop
  420219:	jns    0x420291
  42021b:	lea    esi,[eax]
  42021d:	bound  ebp,QWORD PTR [ebp+0x3715cebe]
  420223:	xchg   edi,eax
  420224:	stos   DWORD PTR es:[edi],eax
  420225:	neg    DWORD PTR [eax-0x7c3c9c59]
  42022b:	inc    edi
  42022c:	mov    esi,0xd6d638dc
  420231:	lea    eax,[esi+ebp*2]
  420234:	push   esp
  420235:	ja     0x42025d
  420237:	pop    ss
  420238:	cli    
  420239:	mov    ebx,0xc1bbcf44
  42023e:	pop    ebx
  42023f:	mov    eax,0x523469dc
  420244:	test   BYTE PTR [eax],al
  420246:	cs in  eax,dx
  420248:	or     dl,BYTE PTR [eax]
  42024a:	fcomp  QWORD PTR ss:[edx-0x3b]
  42024e:	xchg   esp,eax
  42024f:	sub    eax,0x70139a4d
  420254:	retf   
  420255:	dec    ecx
  420256:	and    BYTE PTR [ecx-0xc9161a4],cl
  42025c:	push   eax
  42025d:	pop    ss
  42025e:	pushf  
  42025f:	jmp    0x4367fc02
  420264:	fwait
  420265:	enter  0xa249,0xf4
  420269:	retf   
  42026a:	popf   
  42026b:	inc    edi
  42026c:	sbb    bh,bl
  42026e:	loop   0x420238
  420270:	repnz fild WORD PTR ds:[edx-0x5e61a09e]
  420278:	and    DWORD PTR [edx-0x5ac5a7f8],esi
  42027e:	sub    BYTE PTR [edx+0x57],ch
  420281:	mov    edx,0xe73d5bd8
  420286:	pop    ds
  420287:	fwait
  420288:	push   edx
  420289:	jmp    0x56e3:0x63bff08e
  420290:	lea    ecx,[ecx]
  420292:	imul   esp,eax,0x5dcf8ac4
  420298:	inc    DWORD PTR [ecx+0x1ceae4c8]
  42029e:	push   es
  42029f:	dec    ecx
  4202a0:	push   es
  4202a1:	xchg   ebx,eax
  4202a2:	push   esi
  4202a3:	add    al,0xa1
  4202a5:	out    dx,eax
  4202a6:	aam    0x72
  4202a8:	shl    ah,cl
  4202aa:	fnstcw WORD PTR [edx+0x4bc431f1]
  4202b0:	push   cs
  4202b1:	or     eax,0x914dbefa
  4202b6:	arpl   WORD PTR [ecx-0x23],cx
  4202b9:	xor    dl,BYTE PTR ds:0x82935ac6
  4202bf:	ret    0x5ca3
  4202c2:	add    al,0x15
  4202c4:	mov    ah,0x53
  4202c6:	popf   
  4202c7:	adc    ecx,DWORD PTR [esi+0x6d1609e7]
  4202cd:	imul   edi,DWORD PTR [eax-0x215b3720],0xffffffbd
  4202d4:	ins    BYTE PTR es:[edi],dx
  4202d5:	jne    0x420266
  4202d7:	fs (bad) 
  4202d9:	scas   eax,DWORD PTR es:[edi]
  4202da:	pushf  
  4202db:	xchg   esp,eax
  4202dc:	shr    DWORD PTR [eax],1
  4202de:	or     eax,DWORD PTR [ecx+0x577886c9]
  4202e4:	stc    
  4202e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202e6:	nop
  4202e7:	data16 add bh,BYTE PTR [edi]
  4202ea:	(bad)  
  4202eb:	js     0x420275
  4202ed:	jbe    0x420345
  4202ef:	cmp    dl,BYTE PTR [ebx]
  4202f1:	push   esp
  4202f2:	pop    ebx
  4202f3:	sti    
  4202f4:	xor    BYTE PTR [ecx],0x13
  4202f7:	mov    ecx,DWORD PTR [edi]
  4202f9:	mov    cl,0xce
  4202fb:	inc    ebx
  4202fc:	mov    ebx,0xe4f0e198
  420301:	pop    edi
  420302:	cmp    al,0xef
  420304:	xchg   ecx,eax
  420305:	cs es ret 
  420308:	in     al,dx
  420309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42030a:	xchg   esi,esi
  42030c:	stos   DWORD PTR es:[edi],eax
  42030d:	dec    edi
  42030e:	or     DWORD PTR [ebp-0x559ff241],ebx
  420314:	in     eax,0x3a
  420316:	jp     0x4202dc
  420318:	add    bl,al
  42031a:	mov    ah,0xaf
  42031c:	push   0x2b83fb9c
  420321:	aad    0x85
  420323:	and    edi,DWORD PTR ds:0x24caa31f
  420329:	add    ah,BYTE PTR [eax]
  42032b:	shr    DWORD PTR [esi+0x6711093a],cl
  420331:	dec    DWORD PTR [ebp-0xa]
  420334:	jle    0x4202cc
  420336:	into   
  420337:	sub    al,0xd6
  420339:	shr    DWORD PTR [esi],cl
  42033b:	inc    ebx
  42033c:	sub    DWORD PTR [eax+0x2291c7a],0x5f
  420343:	lods   eax,DWORD PTR ds:[esi]
  420344:	mov    ebp,0xea013dbd
  420349:	pop    edx
  42034a:	ja     0x420306
  42034c:	cmp    cl,dh
  42034e:	enter  0xcad3,0x9b
  420352:	popa   
  420353:	sahf   
  420354:	cdq    
  420355:	pop    ecx
  420356:	add    al,0x80
  420358:	loope  0x42031e
  42035a:	(bad)  
  42035b:	push   ss
  42035c:	inc    esp
  42035d:	cmp    eax,0xa1f8622a
  420362:	lds    edx,FWORD PTR [ebx+ebp*1]
  420365:	adc    eax,0xe9be7add
  42036a:	adc    eax,0xdc8d0f2e
  42036f:	popf   
  420370:	xor    ebx,ecx
  420372:	movq   QWORD PTR [edx],mm0
  420375:	cwde   
  420376:	int    0x65
  420378:	cld    
  420379:	jnp    0x4203d3
  42037b:	icebp  
  42037c:	push   ecx
  42037d:	aaa    
  42037e:	sbb    ebx,esi
  420380:	pop    eax
  420381:	in     eax,0xfb
  420383:	clc    
  420384:	fs aam 0xe4
  420387:	mov    WORD PTR [ebp-0x26a2343e],fs
  42038d:	test   al,0xdc
  42038f:	sub    DWORD PTR [edi],ebp
  420391:	not    BYTE PTR [eax]
  420393:	ret    
  420394:	adc    al,0xf6
  420396:	adc    BYTE PTR [esi+0x3b50281],bl
  42039c:	and    BYTE PTR [ebx-0x40e25310],dh
  4203a2:	and    eax,0xedb44a83
  4203a7:	popa   
  4203a8:	out    dx,al
  4203a9:	out    0xe9,eax
  4203ab:	push   ds
  4203ac:	push   ebp
  4203ad:	lods   eax,DWORD PTR ds:[esi]
  4203ae:	in     eax,0x86
  4203b0:	(bad)  
  4203b1:	adc    eax,0x3d1c0859
  4203b6:	popf   
  4203b7:	pusha  
  4203b8:	retf   0xa5ea
  4203bb:	push   ecx
  4203bc:	jno    0x420417
  4203be:	jb     0x4203cd
  4203c0:	pop    ss
  4203c1:	popa   
  4203c2:	mov    ss,WORD PTR [eax-0x80]
  4203c5:	sub    DWORD PTR [ebp+edi*2+0x702e4f31],edi
  4203cc:	mov    ds:0x7dd5724e,eax
  4203d1:	out    0x82,eax
  4203d3:	inc    ebp
  4203d4:	test   BYTE PTR [ebx],cl
  4203d6:	daa    
  4203d7:	fisubr DWORD PTR [edi+0x77]
  4203da:	test   eax,0x3245de24
  4203df:	enter  0xc5af,0xf5
  4203e3:	mov    DWORD PTR [esp+esi*1+0x380787a6],edx
  4203ea:	aad    0x4b
  4203ec:	out    dx,eax
  4203ed:	push   ecx
  4203ee:	adc    DWORD PTR [ebx],ebp
  4203f0:	das    
  4203f1:	imul   ebx,ebp,0xffffff88
  4203f4:	push   0xf8275584
  4203f9:	iret   
  4203fa:	mov    ecx,DWORD PTR [eax-0x2e]
  4203fd:	jmp    0x1f2aa2cb
  420402:	or     al,0x57
  420404:	out    dx,eax
  420405:	pop    edi
  420406:	dec    esp
  420407:	jnp    0x420474
  420409:	test   cl,ah
  42040b:	push   edi
  42040c:	pop    esp
  42040d:	dec    eax
  42040e:	or     eax,0xbf2579fe
  420413:	mul    DWORD PTR [esi-0x68]
  420416:	shl    BYTE PTR [ebp-0xc],1
  420419:	enter  0xc7a,0x1a
  42041d:	xor    ah,ah
  42041f:	out    0xfe,eax
  420421:	jnp    0x420490
  420423:	mov    ds:0xdd06dbb9,al
  420428:	mov    ebp,0x16e6621e
  42042d:	addr16 or al,0x7b
  420430:	xlat   BYTE PTR ds:[ebx]
  420431:	(bad)  
  420432:	cmc    
  420433:	push   0xffffff98
  420435:	push   edx
  420436:	in     al,dx
  420437:	addr16 inc eax
  420439:	jg     0x420437
  42043b:	jns    0x420479
  42043d:	pop    esi
  42043e:	pop    ecx
  42043f:	ds pop ss
  420441:	popa   
  420442:	ja     0x4203e9
  420444:	cld    
  420445:	mov    bl,0xa6
  420447:	fs clc 
  420449:	(bad)  
  42044a:	jae    0x4204c8
  42044c:	into   
  42044d:	push   ss
  42044e:	push   0x1f86711b
  420453:	popa   
  420454:	jmp    0xca5eb159
  420459:	fcomp  QWORD PTR [edx]
  42045b:	add    BYTE PTR [eax-0x6b],ch
  42045e:	in     al,dx
  42045f:	fs pop esp
  420461:	shl    DWORD PTR [edi],0x8b
  420464:	xor    eax,0x5caeba39
  420469:	adc    BYTE PTR [eax],0x15
  42046c:	push   eax
  42046d:	inc    edi
  42046e:	out    0x71,al
  420470:	int    0xd0
  420472:	pop    es
  420473:	dec    esp
  420474:	ficom  WORD PTR [edx+0x5bedf42]
  42047a:	mul    DWORD PTR [ecx+0x65464648]
  420480:	lea    ebx,[esi+0x4207902c]
  420486:	in     eax,dx
  420487:	mov    esp,0x35fa73a9
  42048c:	cmp    al,0x4f
  42048e:	ins    DWORD PTR es:[edi],dx
  42048f:	mov    ss,WORD PTR [ecx]
  420491:	loope  0x420426
  420493:	sub    bh,BYTE PTR [ecx]
  420495:	lahf   
  420496:	and    bh,BYTE PTR [ebx-0x78]
  420499:	test   al,0xca
  42049b:	cwde   
  42049c:	in     al,0xc
  42049e:	scas   al,BYTE PTR es:[edi]
  42049f:	push   esp
  4204a0:	fnstcw WORD PTR [esi+0x45822d4a]
  4204a6:	push   esp
  4204a7:	arpl   cx,si
  4204a9:	inc    esp
  4204aa:	repz std 
  4204ac:	inc    esi
  4204ad:	fcom   QWORD PTR [eax-0x5806e135]
  4204b3:	add    ah,al
  4204b5:	jb     0x420505
  4204b7:	jp     0x4204e0
  4204b9:	test   al,0x12
  4204bb:	lods   al,BYTE PTR ds:[esi]
  4204bc:	(bad)  
  4204be:	stos   BYTE PTR es:[edi],al
  4204bf:	xchg   BYTE PTR [eax],al
  4204c1:	inc    edx
  4204c2:	aas    
  4204c3:	push   0x34427274
  4204c8:	xor    bl,al
  4204ca:	es inc esp
  4204cc:	sub    edi,DWORD PTR [edi]
  4204ce:	or     BYTE PTR [ebx+esi*8-0x23],bl
  4204d2:	inc    edx
  4204d3:	mov    ?,WORD PTR [edi-0x18]
  4204d6:	mov    cl,0xb8
  4204d8:	std    
  4204d9:	cwde   
  4204da:	add    edx,DWORD PTR [eax]
  4204dc:	xor    eax,0x36d1c44
  4204e1:	jecxz  0x4204d8
  4204e3:	ins    BYTE PTR es:[edi],dx
  4204e4:	mov    fs,WORD PTR [edi]
  4204e6:	push   cs
  4204e7:	in     eax,0x61
  4204e9:	push   esi
  4204ea:	dec    ebx
  4204eb:	int    0xcc
  4204ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204ee:	push   ecx
  4204ef:	mov    edx,0x8a201898
  4204f4:	ja     0x420570
  4204f6:	std    
  4204f7:	or     eax,0x47097d13
  4204fc:	ret    
  4204fd:	cmp    al,0x4e
  4204ff:	repz and al,0x9f
  420502:	idiv   DWORD PTR [eax+ebp*8+0x69528373]
  420509:	shl    DWORD PTR [esi-0xd],0xbb
  42050d:	xor    edx,DWORD PTR [eax+0x67037410]
  420513:	aad    0xb2
  420515:	ret    
  420516:	sbb    al,BYTE PTR [edx-0x6a]
  420519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42051a:	test   eax,0xb47f390c
  42051f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420520:	bound  eax,QWORD PTR [eax+0x27]
  420523:	add    DWORD PTR [edi+0x27],esi
  420526:	cs mov dh,ah
  420529:	cld    
  42052a:	xor    eax,0x5f7587e7
  42052f:	jmp    0xe757:0xa797a766
  420536:	push   es
  420537:	xchg   ebx,eax
  420538:	fwait
  420539:	dec    edx
  42053a:	adc    al,0x28
  42053c:	jecxz  0x42058a
  42053e:	into   
  42053f:	xchg   ebp,eax
  420540:	sbb    esp,ebp
  420542:	adc    DWORD PTR [edx],ebp
  420544:	sub    BYTE PTR [esi+0x54],bh
  420547:	jle    0x42051f
  420549:	icebp  
  42054a:	inc    eax
  42054b:	call   0x1bb8f457
  420550:	(bad)  
  420551:	loope  0x420585
  420553:	lods   eax,DWORD PTR ds:[esi]
  420554:	dec    ebx
  420555:	push   ecx
  420556:	fcom   QWORD PTR [ebx]
  420558:	xlat   BYTE PTR ds:[ebx]
  420559:	lahf   
  42055a:	pop    ebx
  42055b:	sbb    BYTE PTR [ebx*2+0x3becc9d2],bl
  420562:	xchg   esi,eax
  420563:	mov    bh,0x10
  420565:	outs   dx,BYTE PTR ds:[esi]
  420566:	pop    ds
  420567:	arpl   WORD PTR [ecx-0x4],ax
  42056a:	dec    esp
  42056b:	mov    bh,dl
  42056d:	out    dx,al
  42056e:	(bad)  
  42056f:	out    0x60,eax
  420571:	inc    ebx
  420572:	leave  
  420573:	lds    ebp,FWORD PTR [eax+0x70b47fb2]
  420579:	int3   
  42057a:	sub    esi,edi
  42057c:	add    BYTE PTR [esi],bh
  42057e:	sub    DWORD PTR gs:[bp+di],esp
  420582:	adc    eax,0xd989f0f3
  420587:	mov    dl,0xb3
  420589:	mov    al,ds:0xa60157eb
  42058e:	jle    0x4205f3
  420590:	ins    BYTE PTR es:[edi],dx
  420591:	dec    eax
  420592:	loope  0x4205a2
  420594:	ss rol cl,0xf7
  420598:	loope  0x420559
  42059a:	adc    eax,0x13c849ab
  42059f:	add    DWORD PTR [esi+edx*4-0x5d74dfaf],edx
  4205a6:	ins    BYTE PTR es:[edi],dx
  4205a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205a8:	pop    eax
  4205a9:	mov    ecx,0x7bc89e45
  4205ae:	jmp    0xd7d4453a
  4205b3:	sub    bh,BYTE PTR [edx-0x67d9f91c]
  4205b9:	outs   dx,BYTE PTR ds:[esi]
  4205ba:	jnp    0x42058f
  4205bc:	mov    BYTE PTR [esi-0x3b],ah
  4205bf:	sub    al,0x60
  4205c1:	icebp  
  4205c2:	and    BYTE PTR [edi+ecx*1],bh
  4205c5:	aad    0xa8
  4205c7:	call   0xd0e21a4
  4205cc:	enter  0xe326,0x91
  4205d0:	dec    edi
  4205d1:	cld    
  4205d2:	jmp    0x420636
  4205d4:	js     0x420579
  4205d6:	out    0xf,eax
  4205d8:	mov    esi,0x2b638e5f
  4205dd:	in     eax,0xa1
  4205df:	(bad)  
  4205e0:	ja     0x42059d
  4205e2:	lods   eax,DWORD PTR ds:[esi]
  4205e3:	cmc    
  4205e4:	pop    ecx
  4205e5:	fnstsw WORD PTR [esi+0x6e]
  4205e8:	out    0x70,eax
  4205ea:	(bad)  
  4205eb:	cmc    
  4205ec:	pop    eax
  4205ed:	xchg   edi,eax
  4205ee:	ja     0x420614
  4205f0:	add    eax,DWORD PTR [ecx]
  4205f2:	nop
  4205f3:	pop    ecx
  4205f4:	mov    bl,0xa2
  4205f6:	xor    ah,ch
  4205f8:	fiadd  WORD PTR ds:0xdc1cdee
  4205fe:	mov    ebp,0x98a78cef
  420603:	pop    esi
  420604:	dec    eax
  420605:	jmp    0xf708bfe6
  42060a:	dec    DWORD PTR [edx+0x3e38cf88]
  420610:	ss pop ss
  420612:	xor    esi,DWORD PTR [eax+0x3ea1ce3a]
  420618:	pop    ds
  420619:	cli    
  42061a:	jnp    0x420625
  42061c:	push   esi
  42061d:	mov    eax,ds:0x3027cf81
  420622:	inc    eax
  420623:	add    DWORD PTR [ecx-0x6d],edx
  420626:	dec    edi
  420627:	xor    bh,BYTE PTR [ebp-0x622856dc]
  42062d:	pop    ss
  42062e:	and    DWORD PTR [edx+0x76430c53],edi
  420634:	inc    ecx
  420635:	xchg   esi,eax
  420636:	or     al,0x97
  420638:	es mov esp,0x2fb6cd01
  42063e:	fld    TBYTE PTR [ebx]
  420640:	ss out 0x57,al
  420643:	or     DWORD PTR [eax],0x52832b17
  420649:	cmc    
  42064a:	gs xchg edi,eax
  42064c:	imul   eax,ecx,0xfffffffb
  42064f:	mov    ds,WORD PTR [esi+0x17]
  420652:	jecxz  0x4205ec
  420654:	std    
  420655:	inc    edi
  420656:	inc    ecx
  420657:	xor    esi,DWORD PTR [ecx+esi*4-0x74]
  42065b:	cdq    
  42065c:	adc    DWORD PTR cs:[edi+0x3d4963de],0x9eff28e0
  420667:	out    dx,al
  420668:	out    0x95,al
  42066a:	pusha  
  42066b:	sub    dh,dl
  42066d:	dec    esi
  42066e:	xchg   esp,eax
  42066f:	xchg   BYTE PTR [ecx-0x3c],cl
  420672:	add    BYTE PTR [ebx-0x77],bh
  420675:	or     BYTE PTR [ecx-0x5e],al
  420678:	cmp    eax,0x781d63ad
  42067d:	jl     0x420660
  42067f:	test   DWORD PTR [edx],esi
  420681:	mov    al,ds:0xc7af8a02
  420686:	sbb    edi,DWORD PTR [eax+0x10188ab4]
  42068c:	pop    ebx
  42068d:	jbe    0x4206cd
  42068f:	mov    bh,0xfd
  420691:	je     0x4206b0
  420693:	or     BYTE PTR [eax+0x32],0x10
  420697:	jmp    0x9facdddf
  42069c:	add    DWORD PTR [esi],edi
  42069e:	jnp    0x4206cb
  4206a0:	mov    ecx,0x2d525a07
  4206a5:	je     0x4206b1
  4206a7:	or     eax,0x66d41cea
  4206ac:	mov    al,ds:0x63931af
  4206b1:	in     eax,0x46
  4206b3:	loop   0x4206ca
  4206b5:	add    eax,DWORD PTR [esi-0x64]
  4206b8:	mov    cl,0x4c
  4206ba:	push   ds
  4206bb:	(bad)  [ecx-0x673c2c2c]
  4206c1:	mul    DWORD PTR [edx+0x3ba9aa10]
  4206c7:	aam    0x14
  4206c9:	es clc 
  4206cb:	fst    st(5)
  4206cd:	(bad)  
  4206ce:	mov    bl,0x1b
  4206d0:	inc    esi
  4206d1:	dec    edi
  4206d2:	loope  0x42072b
  4206d4:	cdq    
  4206d5:	jle    0x420681
  4206d7:	push   edi
  4206d8:	jnp    0x4206dd
  4206da:	cmp    ebx,DWORD PTR [ebp-0x445b26d8]
  4206e0:	cmp    al,0x93
  4206e2:	aaa    
  4206e3:	mov    ah,0xea
  4206e5:	xchg   esi,eax
  4206e6:	addr16 rcl esp,0x4b
  4206ea:	and    eax,0xd226e147
  4206ef:	xor    esi,eax
  4206f1:	jae    0x4206b0
  4206f3:	or     dl,BYTE PTR [edi+0x59534304]
  4206f9:	mov    esp,0x47a9ad08
  4206fe:	push   cs
  4206ff:	push   ss
  420700:	inc    esp
  420701:	xchg   ecx,eax
  420702:	ror    BYTE PTR [edi],0xd
  420705:	or     esi,0xc332195f
  42070b:	dec    eax
  42070c:	int    0x80
  42070e:	mov    cl,BYTE PTR [eax]
  420710:	pop    ds
  420711:	sub    ebx,eax
  420713:	xor    eax,0x3f1ebc5d
  420718:	sbb    ebx,edx
  42071a:	inc    ecx
  42071b:	sbb    cl,ah
  42071d:	(bad)  
  42071e:	aam    0xaf
  420720:	iret   
  420721:	dec    ebp
  420722:	call   0x5c7e:0x1fff4eaa
  420729:	fisub  DWORD PTR [edx+0x4d]
  42072c:	xor    al,0xa5
  42072e:	dec    ecx
  42072f:	arpl   bp,ax
  420731:	mov    dl,0x7c
  420733:	das    
  420734:	sub    bl,dl
  420736:	xchg   ebp,eax
  420737:	fwait
  420738:	mov    ebx,0xca5bf375
  42073d:	sub    al,0xd9
  42073f:	ret    
  420740:	dec    edx
  420741:	push   ebp
  420742:	ins    DWORD PTR es:[edi],dx
  420743:	adc    BYTE PTR [esi-0xafcd4c1],0x51
  42074a:	mov    al,0xe0
  42074c:	stos   BYTE PTR es:[edi],al
  42074d:	cld    
  42074e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42074f:	popa   
  420750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420751:	in     al,dx
  420752:	or     DWORD PTR [edx+0x356e615],eax
  420758:	out    0xf2,al
  42075a:	pop    edx
  42075b:	dec    esi
  42075c:	adc    bl,al
  42075e:	addr16 dec ebp
  420760:	sbb    eax,0x5d4a9bf3
  420765:	add    ecx,DWORD PTR [esi+esi*4-0x50f4d7a4]
  42076c:	sbb    eax,0xb15f357a
  420771:	jle    0x420728
  420773:	xor    dh,BYTE PTR [esi]
  420775:	adc    ebx,ecx
  420777:	jae    0x420701
  420779:	mov    ah,0x32
  42077b:	adc    BYTE PTR [edi-0x272943b0],0x6e
  420782:	test   al,0xa8
  420784:	inc    ebx
  420785:	jle    0x420794
  420787:	xchg   ebp,eax
  420788:	mov    edx,0xce23919c
  42078d:	ss adc al,0x60
  420790:	ins    DWORD PTR es:[edi],dx
  420791:	add    eax,0x1c9b28d5
  420796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420797:	dec    eax
  420798:	mov    dh,0x41
  42079a:	into   
  42079b:	push   0x4ef3d6b1
  4207a0:	int3   
  4207a1:	jmp    0x4207af
  4207a3:	sub    esp,DWORD PTR [eax+0x35]
  4207a6:	icebp  
  4207a7:	xchg   esi,eax
  4207a8:	jno    0x420825
  4207aa:	jns    0x420779
  4207ac:	in     al,dx
  4207ad:	mov    DWORD PTR [ebx-0x65],edx
  4207b0:	lea    ebp,[edx]
  4207b2:	mov    ecx,0x500e6782
  4207b7:	lods   eax,DWORD PTR ds:[esi]
  4207b8:	jns    0x4207c1
  4207ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207bb:	jmp    0xd3fc:0x9f1070f9
  4207c2:	xlat   BYTE PTR ds:[ebx]
  4207c3:	(bad)  
  4207c4:	rol    bl,0x8f
  4207c7:	push   esp
  4207c8:	into   
  4207c9:	xor    BYTE PTR [edx+0x2019f0dc],ah
  4207cf:	fld    st(6)
  4207d1:	pop    ecx
  4207d2:	imul   ebp,DWORD PTR [edx],0xffffffb6
  4207d5:	or     BYTE PTR [esi+0x7a],al
  4207d8:	inc    ebp
  4207d9:	popa   
  4207da:	popa   
  4207db:	lds    ebp,FWORD PTR ds:0xd3d0d8e3
  4207e1:	fwait
  4207e2:	push   es
  4207e3:	xor    DWORD PTR [edx],esi
  4207e5:	ja     0x4207b5
  4207e7:	pop    esp
  4207e8:	mov    edx,0xabaa3916
  4207ed:	stos   BYTE PTR es:[edi],al
  4207ee:	hlt    
  4207ef:	jl     0x4207af
  4207f1:	jno    0x4207a7
  4207f3:	jecxz  0x4207cb
  4207f5:	iret   
  4207f6:	div    ecx
  4207f8:	xor    BYTE PTR [edx+0x13],cl
  4207fb:	and    ecx,ecx
  4207fd:	mov    ds:0xfd89b35d,eax
  420802:	out    0x60,al
  420804:	int    0x50
  420806:	femms  
  420808:	pop    eax
  420809:	neg    DWORD PTR [edx-0x15491027]
  42080f:	aam    0x65
  420811:	ss inc edx
  420813:	in     al,dx
  420814:	mov    edi,0x86de114e
  420819:	xor    bh,BYTE PTR [esi-0x13]
  42081c:	sti    
  42081d:	fstp   st(0)
  42081f:	and    DWORD PTR [edi-0x5c],0x18
  420823:	out    dx,al
  420824:	(bad)  
  420825:	cmp    bl,ch
  420827:	in     eax,dx
  420828:	test   DWORD PTR [ebx+0x383f62d5],edi
  42082e:	outs   dx,BYTE PTR ds:[esi]
  42082f:	adc    esp,esi
  420831:	(bad)  
  420832:	(bad)
  420836:	std    
  420837:	retf   
  420838:	ins    DWORD PTR es:[edi],dx
  420839:	inc    edi
  42083a:	mov    ah,0x45
  42083c:	xchg   esp,eax
  42083d:	pushf  
  42083e:	jge    0x420838
  420840:	ds popf 
  420842:	rcl    BYTE PTR [ebp-0x61],cl
  420845:	and    BYTE PTR [eax],0xf7
  420848:	sbb    al,0x59
  42084a:	pop    ss
  42084b:	ins    BYTE PTR es:[edi],dx
  42084c:	rcr    DWORD PTR [ecx*4+0x6fd82d3e],cl
  420853:	dec    esp
  420854:	sti    
  420855:	test   al,0xa9
  420857:	sar    DWORD PTR [edi-0x2c],1
  42085a:	push   ebp
  42085b:	rol    BYTE PTR [ebx+0x6c],0x56
  42085f:	in     eax,dx
  420860:	inc    edx
  420861:	jne    0x420838
  420863:	push   ds
  420864:	xor    BYTE PTR [edi],ah
  420866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420867:	push   0x9
  420869:	pop    edx
  42086a:	inc    esi
  42086b:	or     eax,0xe6ef9640
  420870:	sub    DWORD PTR [esi+edi*2-0x5f],ebp
  420874:	fcomp  st(1)
  420876:	imul   BYTE PTR [edi+0x24]
  420879:	out    dx,al
  42087a:	lds    ecx,FWORD PTR ds:0xd6525eb7
  420881:	test   eax,0x44c5be70
  420886:	and    ebp,DWORD PTR [edi-0x7d]
  420889:	sub    BYTE PTR [ecx+eiz*1-0x2d],al
  42088d:	pshufw mm2,QWORD PTR [eax+ebp*2],0x1c
  420892:	xor    al,0x71
  420894:	xor    bh,cl
  420896:	mov    ?,WORD PTR [esi]
  420898:	lock mov ecx,eax
  42089b:	jae    0x420854
  42089d:	(bad)  
  42089e:	out    dx,al
  42089f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208a0:	adc    ebx,edi
  4208a2:	(bad)  
  4208a4:	xor    esi,DWORD PTR [esi]
  4208a6:	xchg   ebx,eax
  4208a7:	enter  0xce3a,0x77
  4208ab:	pop    es
  4208ac:	fld    QWORD PTR [esi]
  4208ae:	cmc    
  4208af:	pop    esi
  4208b0:	ret    
  4208b1:	mov    ebp,0xf3048017
  4208b6:	mov    bl,0x46
  4208b8:	lods   al,BYTE PTR ds:[esi]
  4208b9:	cwde   
  4208ba:	sti    
  4208bb:	mov    al,ds:0xd598464d
  4208c0:	pcmpgtd mm4,mm0
  4208c3:	xor    eax,0xeee16357
  4208c8:	push   edx
  4208c9:	hlt    
  4208ca:	iret   
  4208cb:	pop    ds
  4208cc:	pop    ebx
  4208cd:	scas   al,BYTE PTR es:[edi]
  4208ce:	xchg   DWORD PTR [edx-0x18],edi
  4208d1:	pop    eax
  4208d2:	lods   eax,DWORD PTR ds:[esi]
  4208d3:	mov    ecx,0xff91a71b
  4208d8:	mov    ebp,0x8d4e0d00
  4208dd:	sti    
  4208de:	outs   dx,BYTE PTR ds:[esi]
  4208df:	xor    cl,dh
  4208e1:	ds jne 0x420956
  4208e4:	add    al,cl
  4208e6:	pop    ebp
  4208e7:	stc    
  4208e8:	outs   dx,DWORD PTR ds:[esi]
  4208e9:	fwait
  4208ea:	loopne 0x42092d
  4208ec:	repnz dec ebx
  4208ee:	xchg   edx,eax
  4208ef:	mov    eax,ds:0xe8d150ad
  4208f4:	cld    
  4208f5:	push   esp
  4208f6:	sahf   
  4208f7:	test   DWORD PTR [ebx],0xfc7e62db
  4208fd:	mov    edi,0xc89207cf
  420902:	pop    ds
  420903:	ret    
  420904:	mov    edx,ss
  420906:	mov    ebp,0xbe8d02e0
  42090b:	scas   eax,DWORD PTR es:[edi]
  42090c:	mov    ecx,0x5ca5a613
  420911:	push   ss
  420912:	sub    cl,BYTE PTR [ebx+0x3f02e82c]
  420918:	mov    dh,BYTE PTR [eax+0x410ba976]
  42091e:	repz ja 0x4208c8
  420921:	pop    edi
  420922:	fmul   QWORD PTR [eax-0x5]
  420925:	xor    ebx,ebp
  420927:	mov    ch,0x47
  420929:	test   BYTE PTR [eax],0xe5
  42092c:	and    edi,ebp
  42092e:	pushf  
  42092f:	push   ebp
  420930:	jmp    0x87792335
  420935:	dec    esi
  420936:	fsubrp st(1),st
  420938:	test   BYTE PTR [ebp+0x6b],dh
  42093b:	js     0x42093d
  42093d:	jecxz  0x420986
  42093f:	mov    esi,0xd06935b9
  420944:	lods   al,BYTE PTR ds:[esi]
  420945:	aad    0xa4
  420947:	adc    eax,0x490477b
  42094c:	sar    DWORD PTR [esi+0x7c],1
  42094f:	mov    ebp,db6
  420952:	fisub  DWORD PTR [ebp+0x561d25d5]
  420958:	bound  esp,QWORD PTR [edi+0x49]
  42095b:	out    0xe9,al
  42095d:	test   ch,bl
  42095f:	loop   0x42092f
  420961:	imul   ebx,ebp,0xffffffed
  420964:	sbb    DWORD PTR [esi-0x52],0xb28f0214
  42096b:	retf   
  42096c:	mov    edi,0xb67565de
  420971:	push   es
  420972:	add    dh,bh
  420974:	mov    dl,0x93
  420976:	leave  
  420977:	jecxz  0x4209bb
  420979:	ss mov ecx,0xe70a4a00
  42097f:	dec    esp
  420980:	aad    0x4
  420982:	popa   
  420983:	setbe  BYTE PTR [esi+0x75]
  420987:	test   eax,0x534fe232
  42098c:	imul   edi,DWORD PTR [ebx-0xa],0x4e
  420990:	repnz scas al,BYTE PTR es:[edi]
  420992:	int3   
  420993:	scas   al,BYTE PTR es:[edi]
  420994:	pop    ecx
  420995:	fwait
  420996:	dec    esi
  420997:	retf   0x7d86
  42099a:	or     DWORD PTR [edx+0x720658ea],eax
  4209a0:	sub    al,0x27
  4209a3:	dec    esp
  4209a4:	mov    cs,WORD PTR [esi-0x698b303f]
  4209aa:	adc    al,0x89
  4209ac:	jo     0x4209c4
  4209ae:	mov    edx,0xcac591bd
  4209b3:	pop    ebx
  4209b4:	mov    ds:0xa294a68a,eax
  4209b9:	aam    0x34
  4209bb:	pop    ebx
  4209bc:	add    al,0x16
  4209be:	xlat   BYTE PTR ds:[ebx]
  4209bf:	je     0x42099f
  4209c1:	mov    ecx,DWORD PTR [ecx+edi*8+0x1]
  4209c5:	mov    al,ds:0xf7dc7afd
  4209ca:	mov    ah,0x1f
  4209cc:	sbb    al,0xc
  4209ce:	lahf   
  4209cf:	sub    eax,0x1a045864
  4209d4:	push   ecx
  4209d5:	sub    esi,edi
  4209d7:	dec    edi
  4209d8:	dec    edi
  4209da:	push   0xffffff8c
  4209dc:	cmp    DWORD PTR [ecx+ecx*1-0x63fa628d],edi
  4209e3:	jecxz  0x42097b
  4209e5:	xlat   BYTE PTR ds:[ebx]
  4209e6:	clc    
  4209e7:	add    esi,0xfffffff7
  4209ea:	lds    ebp,FWORD PTR [edi-0x45]
  4209ed:	push   eax
  4209ee:	or     al,BYTE PTR [esi-0x4c]
  4209f1:	add    edx,esi
  4209f3:	div    DWORD PTR [esi-0x5160fe85]
  4209f9:	pop    bx
  4209fb:	sbb    DWORD PTR [eax+0x6495667],edi
  420a01:	out    0x26,eax
  420a03:	pop    ebp
  420a04:	lds    edi,FWORD PTR [ebp+0x7c5d1a72]
  420a0a:	xchg   ecx,eax
  420a0b:	mov    ah,0xbe
  420a0d:	sub    DWORD PTR [edx],ebp
  420a0f:	add    eax,0x821a2d3e
  420a14:	jns    0x420a95
  420a16:	pushf  
  420a17:	daa    
  420a18:	popa   
  420a19:	sbb    DWORD PTR [edi],esp
  420a1b:	push   ecx
  420a1c:	xchg   edi,eax
  420a1d:	pop    edx
  420a1e:	stos   BYTE PTR es:[edi],al
  420a1f:	xlat   BYTE PTR ds:[ebx]
  420a20:	xchg   DWORD PTR [edx+0x6de83963],ebp
  420a26:	cwde   
  420a27:	fnsave [esi+0x531c6552]
  420a2d:	shr    BYTE PTR [ebx-0x67c52a67],1
  420a33:	or     eax,0xe4a3a1ad
  420a38:	in     eax,0x2e
  420a3a:	ins    BYTE PTR es:[edi],dx
  420a3b:	bound  esp,QWORD PTR [esp+eax*8-0x61]
  420a3f:	aaa    
  420a40:	je     0x420aab
  420a42:	and    al,0x91
  420a44:	cld    
  420a45:	xlat   BYTE PTR ds:[ebx]
  420a46:	jne    0x420a0e
  420a48:	jbe    0x420ab9
  420a4a:	sbb    bh,bl
  420a4c:	shl    dh,0x75
  420a4f:	retf   
  420a50:	push   cs
  420a51:	fnsave [ebx]
  420a53:	ror    DWORD PTR [edi],0x66
  420a56:	dec    esp
  420a57:	add    ch,BYTE PTR [eax+0x30]
  420a5a:	sti    
  420a5b:	jbe    0x4209ed
  420a5d:	sbb    esp,DWORD PTR [ecx-0x514bce59]
  420a63:	loopne 0x420a12
  420a65:	mov    ebx,0x7bd2e3fc
  420a6a:	sub    BYTE PTR [edx+0x499ac2c5],bl
  420a70:	dec    esp
  420a71:	xor    DWORD PTR [ecx-0x6d3022c],ebp
  420a77:	aas    
  420a78:	pop    ebx
  420a79:	dec    ecx
  420a7a:	mov    dl,0x6c
  420a7c:	mov    eax,0x634e965f
  420a81:	sbb    eax,0xe5e149c7
  420a86:	cmc    
  420a87:	cmp    edx,DWORD PTR [edi]
  420a89:	xor    dh,ah
  420a8b:	iret   
  420a8c:	retf   0x701a
  420a8f:	pop    ss
  420a90:	lock gs in eax,dx
  420a93:	cs jg  0x420aef
  420a96:	jns    0x420b0b
  420a98:	sahf   
  420a99:	mov    ecx,DWORD PTR [eax-0x6cceee8a]
  420a9f:	jmp    0x5702684c
  420aa4:	ror    DWORD PTR [ecx+0x7a],cl
  420aa7:	data16 data16 jno 0x420ac9
  420aab:	das    
  420aac:	or     BYTE PTR [edi-0x2a],dh
  420aaf:	jnp    0x420ac9
  420ab1:	shl    DWORD PTR [edx-0x40035195],1
  420ab7:	sbb    eax,0x9e5f932a
  420abc:	mov    esp,0xa8dc5aad
  420ac1:	shl    BYTE PTR [ebp-0x13],1
  420ac4:	pushw  0xafea
  420ac8:	arpl   cx,si
  420aca:	sbb    BYTE PTR [edx],ch
  420acc:	pop    ds
  420acd:	test   BYTE PTR [ecx+0x48ebbc70],al
  420ad3:	mov    dh,0x70
  420ad5:	xchg   esi,eax
  420ad6:	add    DWORD PTR [esi+0x574e8169],esi
  420adc:	xchg   esi,eax
  420add:	mov    edx,0x6642c1e8
  420ae2:	adc    edi,DWORD PTR [edi-0x2d]
  420ae5:	jmp    0x6bce:0x412849bc
  420aec:	hlt    
  420aed:	sub    DWORD PTR [ecx-0x4e],ecx
  420af0:	or     BYTE PTR [edi-0x7b08b12],bh
  420af6:	push   edi
  420af7:	data16 sbb dh,BYTE PTR [eax]
  420afa:	das    
  420afb:	or     esi,DWORD PTR [ecx+0x7b]
  420afe:	and    BYTE PTR [ecx],dh
  420b00:	shr    ecx,cl
  420b02:	stc    
  420b03:	dec    edx
  420b04:	xchg   edx,eax
  420b05:	or     esi,esi
  420b07:	dec    ecx
  420b08:	cld    
  420b09:	sbb    BYTE PTR [edi],dl
  420b0b:	jecxz  0x420b3d
  420b0d:	fcom   DWORD PTR [edi+0x63dffd38]
  420b13:	jmp    0x7a89:0x9264b2ae
  420b1a:	xchg   ebp,eax
  420b1b:	outs   dx,BYTE PTR ds:[esi]
  420b1c:	and    edx,DWORD PTR [eax-0x7013b01d]
  420b22:	mov    ds:0xbb87d45e,eax
  420b27:	imul   esi,DWORD PTR [ebp-0x6b],0x2d
  420b2b:	fsin   
  420b2d:	jge    0x420b90
  420b2f:	push   esp
  420b30:	xor    esp,esi
  420b32:	and    ch,BYTE PTR [edi+0x414c7916]
  420b38:	cmc    
  420b39:	add    al,0x28
  420b3b:	adc    DWORD PTR [ebp-0x42],edx
  420b3e:	test   al,0x8e
  420b40:	pop    eax
  420b41:	adc    DWORD PTR [ebx],edx
  420b43:	test   BYTE PTR [ecx+0x55867c10],bh
  420b49:	in     al,dx
  420b4a:	rol    DWORD PTR [edx],1
  420b4c:	fidiv  WORD PTR [edi-0x6f835709]
  420b52:	push   ecx
  420b53:	xchg   DWORD PTR [edi+0x26],ebx
  420b56:	clc    
  420b57:	cdq    
  420b58:	pop    ds
  420b59:	fnsave [esi]
  420b5b:	inc    edi
  420b5c:	push   edi
  420b5d:	adc    BYTE PTR [edx+0x22],0x54
  420b61:	dec    esi
  420b62:	sub    ebx,0xffffffa5
  420b65:	out    0x3b,eax
  420b67:	jecxz  0x420b89
  420b69:	loope  0x420b62
  420b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b6c:	cmp    edi,DWORD PTR [edx]
  420b6e:	xor    eax,0x20281836
  420b73:	cdq    
  420b74:	test   DWORD PTR [edx-0x258f8921],edi
  420b7a:	mov    ch,0xf0
  420b7c:	loope  0x420b45
  420b7e:	daa    
  420b7f:	adc    DWORD PTR [edx],edi
  420b81:	dec    ebp
  420b82:	fiadd  DWORD PTR [esi+0x50a40197]
  420b88:	ss push esp
  420b8a:	add    bl,ah
  420b8c:	stos   BYTE PTR es:[edi],al
  420b8d:	fmul   st(0),st
  420b8f:	cmp    ch,BYTE PTR [esi-0x5b]
  420b92:	cwde   
  420b93:	fldl2t 
  420b95:	das    
  420b96:	daa    
  420b97:	cwde   
  420b98:	daa    
  420b99:	frstor [eax]
  420b9b:	push   eax
  420b9c:	fdiv   st(0),st
  420b9e:	mov    ss,WORD PTR [edx+0x33bc2b27]
  420ba4:	sub    dl,ch
  420ba6:	loope  0x420b45
  420ba8:	rcl    DWORD PTR [ecx+eax*1-0x10],cl
  420bac:	ins    BYTE PTR es:[edi],dx
  420bad:	mov    esp,0x31a391a2
  420bb2:	jbe    0x420b94
  420bb4:	imul   ebx,esi,0x1c
  420bb7:	retf   0x2612
  420bba:	imul   edi,DWORD PTR [edx+eiz*1-0x73],0xfffffff2
  420bbf:	push   es
  420bc0:	stos   BYTE PTR es:[edi],al
  420bc1:	inc    esi
  420bc2:	js     0x420b93
  420bc4:	fwait
  420bc5:	test   BYTE PTR [eax-0x50],al
  420bc8:	pop    ds
  420bc9:	call   0xb2ad5160
  420bce:	pop    ebp
  420bcf:	push   ebp
  420bd0:	pop    edx
  420bd1:	xor    DWORD PTR [edx-0x33],0x76
  420bd5:	xchg   esp,eax
  420bd6:	pop    edi
  420bd7:	or     eax,0xa300e57d
  420bdc:	ins    BYTE PTR es:[edi],dx
  420bdd:	in     eax,dx
  420bde:	dec    esp
  420bdf:	leave  
  420be0:	je     0x420c49
  420be2:	add    edi,DWORD PTR [edi+0x367d751c]
  420be8:	adc    bh,0x7b
  420beb:	push   ebx
  420bec:	mov    ebx,DWORD PTR [edi]
  420bee:	jp     0x420c48
  420bf0:	inc    edi
  420bf1:	aaa    
  420bf2:	in     al,dx
  420bf3:	xor    esi,DWORD PTR es:[edi]
  420bf6:	mov    ecx,DWORD PTR ds:[esi-0x1909a33c]
  420bfd:	aam    0xe7
  420bff:	int3   
  420c00:	daa    
  420c01:	adc    ch,cl
  420c03:	(bad)  
  420c04:	pop    ecx
  420c05:	sub    al,0x15
  420c07:	fadd   st(4),st
  420c09:	xchg   ebp,eax
  420c0a:	arpl   cx,cx
  420c0c:	pop    esp
  420c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c0e:	and    eax,0xa7ca114c
  420c13:	mov    es,WORD PTR [edi]
  420c15:	push   0x3b
  420c17:	shl    DWORD PTR [eax+0x4b719a9f],0x51
  420c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c1f:	or     ch,ah
  420c21:	mov    ch,0xa8
  420c23:	enter  0xd386,0xd7
  420c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c28:	fnstenv [edx+0x53ea5e5d]
  420c2e:	stc    
  420c2f:	push   ds
  420c30:	or     eax,0x214f516
  420c35:	addr16 cmp al,0xb4
  420c38:	xchg   ebx,eax
  420c39:	mov    esi,0x3b7d4c18
  420c3e:	jb     0x420c99
  420c40:	push   esp
  420c41:	(bad)  
  420c42:	fdivr  QWORD PTR [ecx-0x2ba9be3d]
  420c48:	jae    0x420c87
  420c4a:	jecxz  0x420c0f
  420c4c:	hlt    
  420c4d:	repnz hlt 
  420c4f:	dec    edi
  420c50:	mov    bh,0xd0
  420c52:	xor    eax,0xde46b26d
  420c57:	cmp    BYTE PTR [ecx+0x193ce132],dl
  420c5d:	ins    BYTE PTR es:[edi],dx
  420c5e:	add    DWORD PTR [eax-0x54d4d079],edi
  420c64:	lahf   
  420c65:	aad    0x2f
  420c67:	push   esi
  420c68:	push   ebp
  420c69:	pop    esi
  420c6a:	fwait
  420c6b:	(bad)  
  420c6d:	push   cs
  420c6e:	iret   
  420c6f:	shr    DWORD PTR [ecx+0x47ab5539],cl
  420c75:	rol    BYTE PTR [eax],cl
  420c77:	xor    BYTE PTR [edx+0x1e754d99],ch
  420c7d:	jae    0x420c7a
  420c7f:	in     al,dx
  420c80:	xchg   edx,eax
  420c81:	in     eax,0x60
  420c83:	ins    BYTE PTR es:[edi],dx
  420c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c85:	cmp    bl,BYTE PTR [edx+eax*8+0x7b81d0a3]
  420c8c:	add    bl,BYTE PTR [esi+0xe]
  420c8f:	and    ecx,DWORD PTR [eax-0x42]
  420c92:	xchg   ebp,eax
  420c93:	retf   0xdbc8
  420c96:	jp     0x420c9f
  420c98:	mov    dl,0xf
  420c9a:	mov    ds:0x4bad9852,eax
  420c9f:	jno    0x420c5b
  420ca1:	fstp   DWORD PTR [ebp+0xc]
  420ca4:	inc    esi
  420ca5:	mov    al,ds:0x1968c0f0
  420caa:	sbb    DWORD PTR [ecx],esi
  420cac:	and    DWORD PTR [ecx+0x6a],esi
  420caf:	imul   eax,DWORD PTR [eax+ebx*8],0xffffff82
  420cb3:	mov    WORD PTR [ebp+ecx*4-0x2072de14],gs
  420cba:	inc    edx
  420cbb:	add    eax,0xd72b6a7e
  420cc0:	cmc    
  420cc1:	pop    ds
  420cc2:	pop    es
  420cc3:	dec    ecx
  420cc4:	xchg   ecx,eax
  420cc5:	sbb    dh,BYTE PTR [esi+0x209e6d78]
  420ccb:	loope  0x420c96
  420ccd:	les    ebp,FWORD PTR [eax-0x66300063]
  420cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cd4:	xor    BYTE PTR [ecx],0xb6
  420cd7:	cmp    ah,BYTE PTR [ecx+0x55]
  420cda:	loope  0x420d40
  420cdc:	jmp    0xa1c6:0x66abfc42
  420ce3:	inc    edi
  420ce4:	push   0x44
  420ce6:	mov    ch,0xc8
  420ce8:	dec    edi
  420ce9:	sub    DWORD PTR [edi+0x76],ecx
  420cec:	and    eax,0x3aa20335
  420cf1:	xchg   edx,eax
  420cf2:	imul   eax,DWORD PTR [ebp-0x4488cf77],0x1bc707af
  420cfc:	je     0x420ca8
  420cfe:	lods   al,BYTE PTR ds:[esi]
  420cff:	test   eax,0x8702af78
  420d04:	add    BYTE PTR [edx+0x10],0xa3
  420d08:	test   edi,ebx
  420d0a:	mov    esp,0xba520f5f
  420d0f:	add    eax,0x702993e2
  420d14:	adc    ecx,ebp
  420d16:	in     al,0x2a
  420d18:	adc    bl,ah
  420d1a:	test   DWORD PTR [ebp+eax*4-0x6d1846ee],esp
  420d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d22:	in     eax,dx
  420d23:	pop    es
  420d24:	inc    eax
  420d25:	pushf  
  420d26:	test   DWORD PTR [ecx-0x4ae08c85],ecx
  420d2c:	jnp    0x420cf3
  420d2e:	sbb    esi,DWORD PTR [eax]
  420d30:	ret    
  420d31:	sar    BYTE PTR [edx-0x5e],cl
  420d34:	loope  0x420d9a
  420d36:	add    bh,0x9e
  420d39:	pusha  
  420d3a:	xor    eax,DWORD PTR [edx]
  420d3c:	(bad)  
  420d3d:	sbb    eax,0x402432bd
  420d42:	mov    dh,dh
  420d44:	xchg   ebp,eax
  420d45:	sub    edx,DWORD PTR [edx-0x51]
  420d48:	pushf  
  420d49:	cs (bad) 
  420d4c:	out    0xb6,al
  420d4e:	xor    eax,0x718a345b
  420d53:	push   edi
  420d54:	push   ds
  420d55:	fistp  WORD PTR [eax-0x22]
  420d58:	or     edi,DWORD PTR ds:0xb73cedc9
  420d5e:	(bad)  
  420d5f:	push   ecx
  420d61:	jae    0x420dc1
  420d63:	push   esp
  420d64:	mov    ds:0x1a628a14,al
  420d69:	outs   dx,BYTE PTR ds:[esi]
  420d6a:	fwait
  420d6b:	adc    al,0x1
  420d6d:	xchg   DWORD PTR [ebx+0xd3e92e4],ebx
  420d73:	mov    al,cl
  420d75:	(bad)
  420d7a:	sub    cl,BYTE PTR [edx]
  420d7c:	xchg   esp,eax
  420d7d:	add    al,0x1c
  420d7f:	sub    al,0xde
  420d81:	pop    ecx
  420d82:	pusha  
  420d83:	int    0xca
  420d85:	ins    DWORD PTR es:[edi],dx
  420d86:	jecxz  0x420dd0
  420d88:	ss call 0x52a6:0x49b8291b
  420d90:	or     DWORD PTR ds:0x5586e225,0x4739f14c
  420d9a:	sub    al,0x3a
  420d9c:	push   es
  420d9d:	arpl   cx,bx
  420d9f:	test   eax,0xa5eff01b
  420da4:	(bad)  
  420da6:	lea    esp,[ebp+esi*1-0x38]
  420daa:	ror    DWORD PTR ds:0x602d1836,1
  420db0:	push   cs
  420db1:	pop    esi
  420db2:	lea    esp,[edi-0x7a]
  420db5:	sub    ah,BYTE PTR [ebx]
  420db7:	pop    ecx
  420db8:	inc    ecx
  420db9:	loop   0x420d70
  420dbb:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dbd:	mov    edx,0x550b698c
  420dc2:	jo     0x420d7f
  420dc4:	or     ch,BYTE PTR [ecx-0x6396512]
  420dca:	xchg   DWORD PTR [ebx-0x42e8c067],eax
  420dd0:	mov    edi,0x83bec87f
  420dd5:	leave  
  420dd6:	push   esi
  420dd7:	in     eax,0xd3
  420dd9:	sub    DWORD PTR [eax-0x1f],ebx
  420ddc:	jnp    0x420db8
  420dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ddf:	adc    eax,0xaff11129
  420de4:	gs or  eax,0xdf8684d5
  420dea:	jl     0x420e2d
  420dec:	jmp    0xeb5e:0xa22c1778
  420df3:	ja     0x420e35
  420df5:	mov    ah,0x74
  420df7:	push   eax
  420df8:	mov    cl,BYTE PTR [edx+0x3d]
  420dfb:	xchg   esp,eax
  420dfc:	ret    0x9227
  420dff:	jno    0x420e6d
  420e01:	xor    BYTE PTR [esi+0x44],dh
  420e04:	or     ebp,ecx
  420e06:	and    DWORD PTR [esi-0x2],0xffffffbf
  420e0a:	mov    ds:0xcee05db3,eax
  420e0f:	push   sp
  420e11:	cmp    edx,ebp
  420e13:	das    
  420e14:	pushf  
  420e15:	dec    esp
  420e16:	and    al,0x3a
  420e18:	mov    ebx,0xf5a2d6f0
  420e1d:	mov    WORD PTR [ecx+0x7f],ss
  420e20:	xor    esp,eax
  420e22:	ds push edi
  420e24:	retf   0x1f12
  420e27:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  420e29:	inc    ebx
  420e2a:	jno    0x420e3a
  420e2c:	loop   0x420e8d
  420e2e:	cmp    BYTE PTR [ebx+edx*2+0x3cfaa0f2],bh
  420e35:	imul   esp,DWORD PTR ds:0xf5947cda,0xe59c0e4f
  420e3f:	lods   eax,DWORD PTR ds:[esi]
  420e40:	dec    edi
  420e41:	mov    dl,BYTE PTR [edx-0x51535bbb]
  420e47:	mov    ch,0x3f
  420e49:	call   0xc4fe7a31
  420e4e:	inc    ecx
  420e4f:	and    ch,BYTE PTR [edi+0xf90cff8]
  420e55:	push   cs
  420e56:	mov    esi,0x2a2fd05d
  420e5b:	xchg   DWORD PTR [ebp-0x3],eax
  420e5e:	inc    edi
  420e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e60:	sbb    DWORD PTR [ebx+0x112f2b92],edi
  420e66:	ficomp WORD PTR [ebp+ebx*2-0x11]
  420e6a:	retf   
  420e6b:	mov    cl,0x4e
  420e6d:	cmp    dl,dl
  420e6f:	out    0x45,eax
  420e71:	add    DWORD PTR [ebx],esi
  420e73:	icebp  
  420e74:	push   ss
  420e75:	in     eax,0x59
  420e77:	and    BYTE PTR [edi-0x7c],0xbf
  420e7b:	in     eax,0x48
  420e7d:	rol    BYTE PTR [eax],1
  420e7f:	daa    
  420e80:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420e82:	dec    esi
  420e83:	sbb    cl,BYTE PTR [ecx+0x39cbe5a6]
  420e89:	xchg   ecx,eax
  420e8a:	shl    BYTE PTR [esi],cl
  420e8c:	sub    DWORD PTR [ecx+0x1],eax
  420e8f:	inc    ecx
  420e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e91:	fwait
  420e92:	xchg   DWORD PTR [ecx-0x6095152e],eax
  420e98:	sub    al,0xee
  420e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e9b:	aaa    
  420e9c:	pop    ecx
  420e9d:	leave  
  420e9e:	ss aam 0xef
  420ea1:	sbb    DWORD PTR [eax-0x39],ebx
  420ea4:	jb     0x420e3f
  420ea6:	sbb    DWORD PTR [ebp-0x7e],ebp
  420ea9:	xlat   BYTE PTR ds:[ebx]
  420eaa:	push   ebx
  420eab:	pop    ds
  420eac:	enter  0xf55d,0x17
  420eb0:	jle    0x420ee2
  420eb2:	inc    esp
  420eb3:	lahf   
  420eb4:	(bad)  
  420eb5:	sub    esp,ebp
  420eb7:	out    0x60,eax
  420eb9:	sub    DWORD PTR [esi+eax*4],ebx
  420ebc:	cmp    dl,BYTE PTR [eax-0x48]
  420ebf:	jo     0x420ecf
  420ec1:	adc    DWORD PTR ds:0xc604fade,esi
  420ec7:	dec    ebp
  420ec8:	out    dx,al
  420ec9:	push   eax
  420eca:	xchg   esp,eax
  420ecb:	pop    eax
  420ecc:	adc    ebp,DWORD PTR [ecx-0x12]
  420ecf:	(bad)  
  420ed0:	jmp    0x4fa1:0xca64790f
  420ed7:	frstor [ebp-0xc]
  420eda:	push   0xfffffff5
  420edc:	in     al,0x3e
  420ede:	push   0x36
  420ee0:	xor    eax,0x32c88275
  420ee5:	jmp    DWORD PTR [edi+0x31fa8c40]
  420eeb:	adc    BYTE PTR [edx+eiz*2],0x36
  420eef:	shr    BYTE PTR [ecx+0x39],0x7f
  420ef3:	shr    BYTE PTR [edx-0x612b33cb],1
  420ef9:	mov    WORD PTR [edi],es
  420efb:	push   ds
  420efc:	add    al,0xf1
  420efe:	and    esp,esi
  420f00:	mov    ebx,0x9e5b612a
  420f05:	rol    bh,cl
  420f07:	ja     0x420ee6
  420f09:	test   BYTE PTR [edi],0x40
  420f0c:	add    ch,BYTE PTR [ebp-0x16afe3aa]
  420f12:	les    edi,FWORD PTR [ebp-0x25e8e2b4]
  420f18:	or     DWORD PTR [eax+0xa04330b],edx
  420f1e:	fwait
  420f1f:	dec    eax
  420f20:	inc    ebp
  420f21:	xchg   edi,eax
  420f22:	ret    
  420f23:	lea    ebx,[edx]
  420f25:	ins    BYTE PTR es:[edi],dx
  420f26:	pop    esp
  420f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f28:	cs retf 
  420f2a:	cld    
  420f2b:	inc    edx
  420f2c:	in     al,0x57
  420f2e:	dec    ebx
  420f2f:	(bad)  
  420f30:	cld    
  420f31:	dec    ax
  420f33:	icebp  
  420f34:	push   edx
  420f35:	adc    bl,BYTE PTR ds:0xaaa47503
  420f3b:	dec    esp
  420f3c:	xchg   DWORD PTR [ebx-0xf458ea9],ebx
  420f42:	adc    ebp,ebp
  420f44:	jo     0x420ecf
  420f46:	xchg   DWORD PTR [ebx+0x6f],edi
  420f49:	sahf   
  420f4a:	test   DWORD PTR [esi+edi*1],esi
  420f4d:	ja     0x420ee6
  420f4f:	fld    st(5)
  420f51:	scas   eax,DWORD PTR es:[edi]
  420f52:	xor    al,0xe9
  420f54:	cmc    
  420f55:	and    DWORD PTR [ecx-0x5a858f78],ebx
  420f5b:	cmp    BYTE PTR [ecx-0x5babd1fa],bh
  420f61:	popf   
  420f62:	aas    
  420f63:	shr    BYTE PTR [ebp+0x13],cl
  420f66:	div    esi
  420f68:	aad    0x58
  420f6a:	fsub   QWORD PTR [ebx+0x27]
  420f6d:	sbb    DWORD PTR [ebx],0x3b
  420f70:	test   eax,0x46b1b361
  420f75:	mov    WORD PTR [edx+0x33427427],?
  420f7b:	push   ebx
  420f7c:	in     eax,dx
  420f7d:	push   esp
  420f7e:	pop    edx
  420f7f:	jecxz  0x420f46
  420f81:	push   di
  420f83:	adc    DWORD PTR [eax],eax
  420f85:	sub    DWORD PTR [edi+0x4a],ebx
  420f88:	ret    0xc7b0
  420f8b:	retf   0xaee4
  420f8e:	stos   DWORD PTR es:[edi],eax
  420f8f:	pop    edi
  420f90:	xor    DWORD PTR ds:0x4d82a454,0xfffffff6
  420f97:	retf   0x9451
  420f9a:	call   0x219b:0x9aee3ab0
  420fa1:	push   0x22c25f37
  420fa6:	mov    eax,ds:0x3fc6954
  420fab:	sub    esi,DWORD PTR [esp+eax*4-0x11]
  420faf:	push   es
  420fb0:	and    eax,0x7d821865
  420fb5:	popf   
  420fb6:	inc    esp
  420fb7:	jmp    0x420ff3
  420fb9:	sbb    eax,DWORD PTR [edx+0x39]
  420fbc:	push   0xe62e4cf7
  420fc1:	ss in  eax,dx
  420fc3:	sbb    DWORD PTR [edi],0x94beca74
  420fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fca:	or     al,0x77
  420fcc:	sar    DWORD PTR [eax+0x27348c97],cl
  420fd2:	sub    ecx,DWORD PTR [edx-0x4a]
  420fd5:	mov    DWORD PTR es:[esi+0x1a],edi
  420fd9:	(bad)  
  420fda:	mov    ch,0xb1
  420fdc:	js     0x420f82
  420fde:	rcl    DWORD PTR [edx-0x68],0x4e
  420fe2:	inc    esi
  420fe3:	lahf   
  420fe4:	xor    ecx,0x1bdcc557
  420fea:	rcl    edi,0x2a
  420fed:	bnd ret 
  420fef:	lods   al,BYTE PTR ds:[esi]
  420ff0:	xor    eax,0x1c9ca66c
  420ff5:	mov    dh,0xae
  420ff7:	stos   BYTE PTR es:[edi],al
  420ff8:	std    
  420ff9:	test   BYTE PTR [eax],bh
  420ffb:	xchg   ebp,eax
  420ffc:	scas   al,BYTE PTR es:[edi]
  420ffd:	lea    esp,[esi+0x40]
  421000:	loop   0x420fea
  421002:	(bad)  
  421003:	clc    
  421004:	pop    ss
  421005:	arpl   WORD PTR [edi+eiz*4-0x7d7149fb],sp
  42100c:	fiadd  WORD PTR [eax+0x7a]
  42100f:	jp     0x421035
  421011:	lods   al,BYTE PTR ds:[esi]
  421012:	xchg   esp,eax
  421013:	mov    eax,ds:0xdebbf757
  421018:	sahf   
  421019:	sub    DWORD PTR [edx+edi*4],esp
  42101c:	jp     0x42100e
  42101e:	test   eax,0x937b5240
  421023:	inc    ebx
  421024:	aaa    
  421025:	xor    al,0x1b
  421027:	sti    
  421028:	in     al,0x23
  42102a:	adc    DWORD PTR [ebx-0x4a],edi
  42102d:	es jo  0x421000
  421030:	js     0x4210aa
  421032:	into   
  421033:	je     0x420fbf
  421035:	fwait
  421036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421037:	ror    BYTE PTR [ecx-0x234c7ae9],0x91
  42103e:	pop    esp
  42103f:	lahf   
  421040:	lock dec eax
  421042:	repz cmc 
  421044:	je     0x420fca
  421046:	cdq    
  421047:	ins    BYTE PTR es:[edi],dx
  421048:	push   esp
  421049:	xor    DWORD PTR [eax+0x49],esi
  42104c:	clc    
  42104d:	cmp    ecx,DWORD PTR [ecx+eiz*2-0x30d96a9f]
  421054:	jne    0x42105b
  421056:	movq   mm2,QWORD PTR [ebp+0x1]
  42105a:	cs xchg esp,eax
  42105c:	jo     0x421019
  42105e:	jne    0x421003
  421060:	dec    esi
  421061:	fcmovu st,st(3)
  421063:	sub    bl,dl
  421065:	or     eax,0x7694633a
  42106b:	mov    esp,0xca58a2e
  421070:	jbe    0x42102d
  421072:	add    DWORD PTR ss:[ebp-0x3c7b304],0x2e
  42107a:	cmp    al,0x4c
  42107c:	nop
  42107d:	mov    bl,0x5d
  42107f:	retf   0x23fa
  421082:	jne    0x421089
  421084:	mov    ebp,0x516c0086
  421089:	out    0xd,al
  42108b:	cld    
  42108c:	bound  edx,QWORD PTR [ecx]
  42108e:	retf   0xad78
  421091:	jns    0x4210e6
  421093:	pop    edi
  421094:	jns    0x4210a8
  421096:	fistp  WORD PTR [esi-0x493c3523]
  42109c:	data16 test ch,0x62
  4210a0:	inc    edi
  4210a1:	pop    esi
  4210a2:	pop    es
  4210a3:	xchg   DWORD PTR [esi-0x70],esi
  4210a6:	mov    esi,DWORD PTR [ebx+0x51]
  4210a9:	add    al,0x51
  4210ab:	js     0x42108e
  4210ad:	sub    dh,ah
  4210af:	in     al,0xa1
  4210b1:	jae    0x421043
  4210b3:	les    edi,FWORD PTR [ecx-0x27ea8892]
  4210b9:	mov    gs,WORD PTR [eax-0x189be0e8]
  4210bf:	sbb    cl,BYTE PTR [edi-0x78558f9]
  4210c5:	xchg   esp,eax
  4210c6:	data16 or BYTE PTR [edi+0x68c54797],0x54
  4210ce:	jne    0x421094
  4210d0:	fisttp WORD PTR [edx-0x2d247d6b]
  4210d6:	aaa    
  4210d7:	xor    dl,bl
  4210d9:	xlat   BYTE PTR ds:[ebx]
  4210da:	es mov esp,0x5b3f14a6
  4210e0:	xor    eax,0x88e1936d
  4210e5:	dec    esp
  4210e6:	xor    BYTE PTR [ecx],dh
  4210e8:	das    
  4210e9:	push   ecx
  4210ea:	mov    edx,0x914ae13
  4210ef:	das    
  4210f0:	pop    ss
  4210f1:	addr16 push ebx
  4210f3:	jge    0x421113
  4210f5:	xor    DWORD PTR [ecx],edi
  4210f7:	and    al,0xf7
  4210f9:	inc    esp
  4210fa:	pop    ss
  4210fb:	and    al,0x90
  4210fd:	lahf   
  4210fe:	(bad)  
  4210ff:	or     bh,bh
  421101:	mov    eax,0xcfcfa634
  421106:	or     DWORD PTR [ecx-0x62],edx
  421109:	mov    ebp,0x13abf2e8
  42110e:	xchg   edi,eax
  42110f:	ret    0x1848
  421112:	cs push esp
  421114:	jg     0x4210cf
  421116:	addr16 jno 0x4210e3
  421119:	dec    ecx
  42111a:	pop    ebx
  42111b:	mov    BYTE PTR fs:[edx-0x2d],0x94
  421120:	outs   dx,BYTE PTR ds:[esi]
  421121:	test   eax,0xf05674a3
  421126:	mov    esp,0x222220ae
  42112b:	fst    QWORD PTR ss:[edx-0x35]
  42112f:	fmul   QWORD PTR [edi-0x4b]
  421132:	stos   DWORD PTR es:[edi],eax
  421133:	mov    ch,0xaa
  421135:	mov    ebp,0xbddff041
  42113a:	call   FWORD PTR [edx-0x5a]
  42113d:	push   eax
  42113e:	or     ebx,DWORD PTR [edi]
  421140:	sub    bh,BYTE PTR [esi+edx*2-0x6b]
  421144:	xchg   ebx,eax
  421145:	cmp    cl,ah
  421147:	inc    eax
  421148:	inc    esp
  421149:	lea    edx,[ecx+0x65]
  42114c:	jb     0x4210f4
  42114e:	push   edi
  42114f:	and    al,0x5d
  421151:	adc    cl,BYTE PTR [ebp+0x45548703]
  421157:	fnstenv [edx]
  421159:	pop    edi
  42115a:	(bad)  
  42115b:	mov    dl,0xf3
  42115d:	callw  0xd876
  421161:	mov    ecx,0x36cb12cc
  421166:	imul   ch
  421168:	push   0x67eae7
  42116d:	cmp    BYTE PTR [eax+0xe],al
  421170:	imul   BYTE PTR [ebp-0x61]
  421173:	xchg   esp,esp
  421175:	shr    DWORD PTR [edi+ecx*1+0x7f],0x5
  42117a:	cmp    ecx,DWORD PTR [eax-0x4a71d9e9]
  421180:	adc    al,0x2b
  421182:	test   dl,bh
  421184:	lahf   
  421185:	rcl    DWORD PTR [ebx-0x551bbb96],0x6d
  42118c:	pop    edi
  42118d:	pop    ds
  42118e:	push   eax
  42118f:	add    BYTE PTR [ebx],bl
  421191:	xor    DWORD PTR [ecx-0x74],esp
  421194:	rcr    DWORD PTR [esi-0x2f],1
  421197:	iret   
  421198:	dec    ebp
  421199:	push   ss
  42119a:	sub    BYTE PTR [edx+0x797f0b54],bh
  4211a0:	jmp    0xf92c:0x82646b4c
  4211a7:	lds    eax,FWORD PTR [edx-0x7c]
  4211aa:	mov    ch,0xdf
  4211ac:	mov    ds:0x2ab5b47c,al
  4211b1:	test   esp,ecx
  4211b3:	cld    
  4211b4:	mov    al,0xdf
  4211b6:	mov    ecx,0xd01abe87
  4211bb:	fisttp DWORD PTR [edi-0x3c]
  4211be:	repz jns 0x42118c
  4211c1:	dec    ecx
  4211c2:	ins    BYTE PTR es:[edi],dx
  4211c3:	clc    
  4211c4:	mov    esp,DWORD PTR [esi-0x2fb63f3b]
  4211ca:	lods   eax,DWORD PTR ds:[esi]
  4211cb:	or     al,0x28
  4211cd:	and    bl,BYTE PTR [ebp+ebp*4-0x4e]
  4211d1:	xor    BYTE PTR [esi-0x4d8f8f60],bl
  4211d7:	cmp    al,0x54
  4211d9:	cmp    BYTE PTR ds:0xc9906241,0xe5
  4211e0:	lock daa 
  4211e2:	xor    ebx,DWORD PTR [eax]
  4211e4:	cdq    
  4211e5:	xor    BYTE PTR [esi+ebp*1],ch
  4211e8:	xchg   esp,eax
  4211e9:	imul   eax,edi,0x85daa588
  4211ef:	fcmovu st,st(5)
  4211f1:	xchg   ecx,eax
  4211f2:	in     eax,dx
  4211f3:	not    DWORD PTR [ebp-0x14955070]
  4211f9:	push   esp
  4211fa:	xchg   esi,eax
  4211fb:	inc    edx
  4211fc:	xchg   BYTE PTR [eax],dh
  4211fe:	xchg   edi,eax
  4211ff:	ja     0x421182
  421201:	xchg   ebp,eax
  421202:	fld    TBYTE PTR [edi]
  421204:	pop    edx
  421205:	lods   eax,DWORD PTR ds:[esi]
  421206:	shl    BYTE PTR [eax-0x76],1
  421209:	adc    al,0xcf
  42120b:	fcomp  QWORD PTR [edi]
  42120d:	mov    DWORD PTR [eax-0x5edbe973],esp
  421213:	imul   esi,DWORD PTR [ecx],0xa19f63b0
  421219:	adc    ebx,DWORD PTR [esi+ebx*2]
  42121c:	sbb    WORD PTR [ebx],bx
  42121f:	fsubr  QWORD PTR [edi]
  421221:	dec    edi
  421222:	shr    ch,0xde
  421225:	repz mov ah,0xeb
  421228:	not    bl
  42122a:	lods   al,BYTE PTR ds:[esi]
  42122b:	mov    fs,edx
  42122d:	push   eax
  42122e:	inc    ecx
  42122f:	sub    DWORD PTR [ebp-0x2ce37170],esi
  421235:	add    eax,0x3d274d03
  42123a:	idiv   esp
  42123c:	mov    esp,0x7e1c3f00
  421241:	dec    edi
  421242:	test   al,0x94
  421244:	stos   DWORD PTR es:[edi],eax
  421245:	jecxz  0x421237
  421247:	xchg   esi,eax
  421248:	push   ebp
  421249:	int3   
  42124a:	je     0x4211e3
  42124c:	sub    edx,DWORD PTR [eax]
  42124e:	push   ecx
  42124f:	and    eax,0xc3b5cb57
  421254:	das    
  421255:	aaa    
  421256:	fist   DWORD PTR [edx-0x7]
  421259:	push   edx
  42125a:	or     DWORD PTR [ecx+0x4f074ce7],0xeab93581
  421264:	das    
  421265:	mov    ds:0xfd206a61,eax
  42126a:	stc    
  42126b:	fld    DWORD PTR [eax]
  42126d:	jp     0x42120e
  42126f:	fstp   DWORD PTR [eax]
  421271:	(bad)  
  421272:	or     eax,0xf5be720b
  421277:	dec    edi
  421278:	addr16 aam 0xa
  42127b:	push   esi
  42127c:	pop    es
  42127d:	xor    edx,DWORD PTR [esi+ebp*4+0x3e1dc1e1]
  421284:	or     BYTE PTR [ebx+0x7c],0x58
  421288:	es (bad) 
  42128b:	cmp    BYTE PTR fs:[ebp+0x1b88321],bh
  421292:	jmp    0x42127e
  421294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421295:	out    0x79,al
  421297:	lods   eax,DWORD PTR ds:[esi]
  421298:	loopne 0x421272
  42129a:	cwde   
  42129b:	ret    
  42129c:	cmp    eax,ebx
  42129e:	pop    esi
  42129f:	push   ebp
  4212a0:	outs   dx,BYTE PTR ds:[esi]
  4212a1:	test   ah,0x24
  4212a4:	push   ecx
  4212a5:	pusha  
  4212a6:	or     dl,BYTE PTR [edi-0x486ecc0a]
  4212ac:	mov    ds:0xb789f504,eax
  4212b1:	fiadd  DWORD PTR [edi+0x5e]
  4212b4:	and    al,BYTE PTR [edi-0x7ee9a954]
  4212ba:	mov    dh,0xbb
  4212bc:	mov    dh,0x14
  4212be:	stos   BYTE PTR es:[edi],al
  4212bf:	xchg   ebx,eax
  4212c0:	out    0x64,al
  4212c2:	pusha  
  4212c3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4212c5:	cmc    
  4212c6:	stos   DWORD PTR es:[edi],eax
  4212c7:	mov    ah,0x77
  4212c9:	adc    ebx,DWORD PTR [ecx-0x749b6108]
  4212cf:	pop    esi
  4212d0:	sbb    edi,DWORD PTR [ebx-0x1b]
  4212d3:	mov    ah,0x3c
  4212d5:	inc    esp
  4212d6:	xchg   ebp,eax
  4212d7:	into   
  4212d8:	lea    ebx,[ebx-0x10]
  4212db:	iret   
  4212dc:	inc    eax
  4212dd:	aas    
  4212de:	stos   BYTE PTR es:[edi],al
  4212df:	push   cs
  4212e0:	inc    ebx
  4212e1:	push   esp
  4212e2:	retf   
  4212e3:	(bad)  
  4212e5:	in     eax,0x7f
  4212e7:	or     al,BYTE PTR [edx]
  4212e9:	adc    DWORD PTR [edi-0x698681b5],esp
  4212ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212f0:	xor    al,0xfd
  4212f2:	nop
  4212f3:	adc    edx,DWORD PTR [edx+0x2e8b84a8]
  4212f9:	pop    ebp
  4212fa:	mov    al,0xe0
  4212fc:	hlt    
  4212fd:	sub    al,0x39
  4212ff:	mov    ecx,0x16cc3a52
  421304:	jns    0x421383
  421306:	(bad)  
  421307:	sbb    BYTE PTR [ecx+0x231a2b01],bl
  42130d:	cmc    
  42130e:	shl    DWORD PTR [edx-0x75bb5350],cl
  421314:	je     0x4212b0
  421316:	mov    edi,0x213a4d40
  42131b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42131c:	retf   0xe247
  42131f:	(bad)  
  421320:	cs test al,0xb7
  421323:	xchg   edx,eax
  421324:	cdq    
  421325:	xor    cl,bl
  421327:	loop   0x421347
  421329:	cmp    ebx,DWORD PTR [esi-0x3e645c32]
  42132f:	jl     0x42134a
  421331:	pop    ebx
  421332:	test   eax,0x2a388e5
  421337:	sub    dh,BYTE PTR [ebx-0x27]
  42133a:	loopne 0x4212f6
  42133c:	je     0x421344
  42133e:	inc    esi
  42133f:	push   es
  421340:	pop    ecx
  421341:	mov    ebx,0xd01db7a9
  421346:	leave  
  421347:	push   edx
  421348:	jae    0x4213a4
  42134a:	jge    0x4213b7
  42134c:	jmp    0x192a:0xc9a66192
  421353:	dec    eax
  421354:	and    esi,DWORD PTR [ecx]
  421356:	pop    ss
  421357:	je     0x42139b
  421359:	outs   dx,BYTE PTR ds:[esi]
  42135a:	cwde   
  42135b:	cwde   
  42135c:	xor    DWORD PTR [edx],eax
  42135e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42135f:	int3   
  421360:	cmp    al,0x10
  421362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421363:	jns    0x4213c3
  421365:	cmp    BYTE PTR [esi+0x1bbe8e1b],ch
  42136b:	cs xor al,0x0
  42136e:	imul   edi,DWORD PTR [ecx],0x5783a59c
  421374:	dec    ecx
  421375:	ins    BYTE PTR es:[edi],dx
  421376:	mov    al,ds:0x1bf50961
  42137b:	cmp    BYTE PTR [esi],al
  42137d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42137e:	or     ch,BYTE PTR [esi+esi*8]
  421381:	mov    cl,0x89
  421383:	test   al,0xcd
  421385:	fs and eax,0x64310ecd
  42138b:	dec    eax
  42138c:	(bad)  
  42138d:	in     al,0x34
  42138f:	lods   eax,DWORD PTR ds:[esi]
  421390:	jae    0x4213a9
  421392:	mov    edx,0x1dbc5e07
  421397:	int3   
  421398:	sbb    bl,BYTE PTR ds:0x1e36c461
  42139e:	or     BYTE PTR [ebx-0x3a],cl
  4213a1:	push   0x78088609
  4213a6:	jl     0x4213ba
  4213a8:	(bad)  
  4213a9:	cmp    BYTE PTR [eax+0x27],cl
  4213ac:	cmp    BYTE PTR [edx+0x1a2666d3],cl
  4213b2:	arpl   WORD PTR [ecx-0x2b],sp
  4213b5:	mov    ebp,0xf38b0368
  4213ba:	test   BYTE PTR [esi],bl
  4213bc:	add    BYTE PTR [edi],dh
  4213be:	push   ebx
  4213bf:	mov    edx,0x60ae3dba
  4213c4:	es in  al,dx
  4213c6:	ret    0x1914
  4213c9:	gs and cl,dl
  4213cc:	jge    0x4213d8
  4213ce:	xchg   DWORD PTR [ebp+0x3d],ebp
  4213d1:	leave  
  4213d2:	enter  0xcbb,0xfb
  4213d6:	push   edi
  4213d7:	mov    BYTE PTR [ecx+eax*2-0x5a],ah
  4213db:	pop    es
  4213dc:	or     DWORD PTR [edx-0xe27a16d],edi
  4213e2:	xchg   DWORD PTR [edi+0x34],edx
  4213e5:	dec    edx
  4213e6:	je     0x4213da
  4213e8:	in     al,dx
  4213e9:	shr    ebp,cl
  4213eb:	shl    BYTE PTR [edi-0x7e],0x2f
  4213ef:	add    DWORD PTR [esi-0x1bb8b00e],ebx
  4213f5:	push   0xdc9ca0f2
  4213fa:	or     eax,0x6db32edb
  4213ff:	xchg   ecx,eax
  421400:	imul   esi,edi,0x3c75902
  421406:	mov    ch,0x3d
  421408:	xor    bl,BYTE PTR [edx+0xb]
  42140b:	add    BYTE PTR [edx],ah
  42140d:	mov    dl,0x8f
  42140f:	outs   dx,DWORD PTR ds:[esi]
  421410:	lea    ecx,ds:0xa7832d93
  421416:	jne    0x42141b
  421418:	mov    al,ds:0xd585bd2
  42141d:	jg     0x421421
  42141f:	jne    0x42148f
  421421:	lds    edx,FWORD PTR [eax]
  421423:	fmul   QWORD PTR [ecx]
  421425:	xchg   edi,eax
  421426:	popf   
  421427:	cwde   
  421428:	lods   al,BYTE PTR ds:[esi]
  421429:	je     0x4213f0
  42142b:	jns    0x421400
  42142d:	jbe    0x42144e
  42142f:	xlat   BYTE PTR ds:[ebx]
  421430:	pop    edx
  421431:	mov    al,bh
  421433:	sbb    ebx,ebx
  421435:	repnz daa 
  421437:	cld    
  421438:	jne    0x421412
  42143a:	shl    DWORD PTR [ecx],1
  42143c:	mov    bh,0xf6
  42143e:	pop    ebp
  42143f:	inc    ebp
  421440:	test   DWORD PTR [ecx],eax
  421442:	and    ah,BYTE PTR [edx+edx*2]
  421445:	mov    dh,0x8c
  421447:	mov    ebx,0xa519add5
  42144c:	cwde   
  42144d:	jmp    0x421466
  42144f:	sbb    al,0x8a
  421451:	sti    
  421452:	jo     0x4213d4
  421454:	mov    al,ds:0x8299b64
  421459:	aaa    
  42145a:	xor    al,0x63
  42145c:	mov    esp,DWORD PTR [edi-0x25]
  42145f:	push   edx
  421460:	div    DWORD PTR [eax]
  421462:	iret   
  421463:	fld    TBYTE PTR [ebx]
  421465:	stos   DWORD PTR es:[edi],eax
  421466:	pop    es
  421467:	mov    al,ah
  421469:	loopne 0x421438
  42146b:	jg     0x421467
  42146d:	mov    BYTE PTR [ebx+0x45],dl
  421470:	sti    
  421471:	xor    esi,DWORD PTR [eax]
  421473:	xlat   BYTE PTR ds:[ebx]
  421474:	(bad)  
  421475:	fnsave [ebx+0x23de3b19]
  42147b:	push   0x3a
  42147d:	ret    0xe109
  421480:	add    eax,0xb15545ea
  421485:	mov    ebx,0x338c3d49
  42148a:	outs   dx,BYTE PTR ds:[esi]
  42148b:	or     DWORD PTR [ecx],ebx
  42148d:	pusha  
  42148e:	jp     0x421508
  421490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421491:	adc    BYTE PTR [ebp+0x68ba390a],dh
  421497:	mov    dl,bh
  421499:	ins    DWORD PTR es:[edi],dx
  42149a:	xchg   ebp,eax
  42149b:	adc    dh,BYTE PTR [ebp-0x369015fb]
  4214a1:	push   cs
  4214a2:	or     dl,BYTE PTR [ecx+0xb]
  4214a5:	repnz fidiv DWORD PTR [ecx+0x69a2a60a]
  4214ac:	loope  0x42144c
  4214ae:	fsubr  DWORD PTR [edx]
  4214b0:	dec    edi
  4214b1:	cwde   
  4214b2:	es iret 
  4214b4:	mov    eax,0x33d9bbcf
  4214b9:	test   DWORD PTR [esi+0x55c48b7b],ebp
  4214bf:	test   BYTE PTR [bx+si-0x32],0x90
  4214c4:	inc    eax
  4214c5:	and    al,0x9
  4214c7:	xchg   ebx,eax
  4214c8:	scas   eax,DWORD PTR es:[edi]
  4214c9:	sub    eax,0x9a520433
  4214ce:	in     al,dx
  4214cf:	pop    ebp
  4214d0:	cs ins BYTE PTR es:[edi],dx
  4214d2:	adc    DWORD PTR [edx],esp
  4214d4:	enter  0x6d40,0x9
  4214d8:	call   0xe831:0xfdcd60aa
  4214df:	in     al,0x67
  4214e1:	int3   
  4214e2:	jecxz  0x421505
  4214e4:	je     0x421497
  4214e6:	mov    ecx,DWORD PTR [eax+eiz*2-0x44]
  4214ea:	int3   
  4214eb:	data16 jl 0x42147a
  4214ee:	add    BYTE PTR [ebx],ah
  4214f0:	xchg   DWORD PTR [edi+0x3],esp
  4214f3:	fdiv   st,st(3)
  4214f5:	dec    ebp
  4214f6:	fdivr  DWORD PTR [ecx+0xb]
  4214f9:	call   0xd809:0xec449c2b
  421500:	jns    0x4214ed
  421502:	stos   BYTE PTR es:[di],al
  421504:	mov    esi,0xab47b9ea
  421509:	cmp    BYTE PTR [ecx],bh
  42150b:	ins    DWORD PTR es:[edi],dx
  42150c:	pop    edi
  42150d:	jns    0x421574
  42150f:	and    DWORD PTR [eax+0x71],eax
  421512:	cmp    eax,DWORD PTR ds:0x1688804d
  421518:	mov    ?,WORD PTR [eax+0x5cb6145a]
  42151e:	push   0xdad253d1
  421523:	iret   
  421524:	or     BYTE PTR [eax],ah
  421526:	mov    bl,0x51
  421528:	ficomp DWORD PTR [eax+esi*4]
  42152b:	(bad)  [edx+0x7e]
  42152e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42152f:	sbb    eax,0x368cad54
  421534:	jbe    0x4214f5
  421536:	xchg   esp,eax
  421537:	cmp    ebx,ebp
  421539:	stos   BYTE PTR es:[edi],al
  42153a:	ins    BYTE PTR es:[edi],dx
  42153b:	jg     0x42151b
  42153d:	pop    ebp
  42153e:	add    DWORD PTR [ebp+0x9],ebp
  421541:	mov    DWORD PTR [edi-0x3ca6a2a2],ebx
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x48],0x0
  42155e:	mov    DWORD PTR [ebp-0x70],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x10],0x0
  421573:	mov    DWORD PTR [ebp-0x14],0x0
  42157a:	mov    DWORD PTR [ebp-0x30],0x0
  421581:	mov    DWORD PTR [ebp-0x58],0x0
  421588:	mov    DWORD PTR [ebp-0x54],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x60],0x0
  42159d:	mov    DWORD PTR [ebp-0x50],0x0
  4215a4:	mov    DWORD PTR [ebp-0xc],0x0
  4215ab:	mov    DWORD PTR [ebp-0x6c],0x0
  4215b2:	mov    DWORD PTR [ebp-0x5c],0x0
  4215b9:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x68],0x0
  4215c7:	mov    DWORD PTR [ebp-0x4],0x0
  4215ce:	mov    DWORD PTR [ebp-0x4c],0x0
  4215d5:	mov    eax,ds:0x428140
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428144
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428148
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42814c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428130
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x428134
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428138
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x42813c
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x42813e
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x2c],0x40
  42162c:	push   0x64
  42162e:	push   0x0
  421630:	call   DWORD PTR ds:0x42801c
  421636:	lea    eax,[ebp-0xc]
  421639:	push   eax
  42163a:	lea    ecx,[ebp-0xc]
  42163d:	push   ecx
  42163e:	lea    edx,[ebp-0x14]
  421641:	push   edx
  421642:	call   DWORD PTR ds:0x428004
  421648:	test   eax,eax
  42164a:	je     0x421661
  42164c:	push   0x0
  42164e:	mov    eax,DWORD PTR [ebp-0x6c]
  421651:	push   eax
  421652:	call   DWORD PTR ds:0x428118
  421658:	mov    ecx,DWORD PTR [ebp-0xc]
  42165b:	add    ecx,0x1
  42165e:	mov    DWORD PTR [ebp-0xc],ecx
  421661:	push   0x0
  421663:	push   0x0
  421665:	push   0x0
  421667:	call   DWORD PTR ds:0x428000
  42166d:	mov    BYTE PTR [ebp-0x40],0x56
  421671:	call   DWORD PTR ds:0x428018
  421677:	mov    DWORD PTR [ebp-0x30],eax
  42167a:	mov    BYTE PTR [ebp-0x3e],0x72
  42167e:	movzx  edx,WORD PTR [ebp-0x30]
  421682:	test   edx,edx
  421684:	jne    0x4216ce
  421686:	mov    BYTE PTR [ebp-0x34],0x0
  42168a:	mov    DWORD PTR [ebp-0x14],0xe0d
  421691:	lea    eax,[ebp-0x28]
  421694:	push   eax
  421695:	call   DWORD PTR ds:0x428014
  42169b:	mov    DWORD PTR [ebp-0x60],eax
  42169e:	mov    DWORD PTR [ebp-0x50],0x3a
  4216a5:	lea    ecx,[ebp-0x40]
  4216a8:	push   ecx
  4216a9:	mov    edx,DWORD PTR [ebp-0x60]
  4216ac:	push   edx
  4216ad:	call   DWORD PTR ds:0x428010
  4216b3:	mov    DWORD PTR [ebp-0x44],eax
  4216b6:	mov    DWORD PTR [ebp-0x8],0xa196d05b
  4216bd:	push   0xa
  4216bf:	call   DWORD PTR ds:0x42811c
  4216c5:	mov    DWORD PTR [ebp-0x68],0x10d757
  4216cc:	jmp    0x4216e3
  4216ce:	mov    BYTE PTR ds:0x445160,0x0
  4216d5:	mov    BYTE PTR ds:0x42bf40,0x0
  4216dc:	mov    BYTE PTR ds:0x442930,0x0
  4216e3:	push   DWORD PTR [ebp-0x2c]
  4216e6:	push   0x1000
  4216eb:	mov    eax,DWORD PTR [ebp-0x14]
  4216ee:	add    eax,0x23
  4216f1:	add    eax,0x23
  4216f4:	push   eax
  4216f5:	xor    eax,eax
  4216f7:	push   eax
  4216f8:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fb:	call   ecx
  4216fd:	mov    edx,eax
  4216ff:	mov    DWORD PTR [ebp-0x4],edx
  421702:	mov    eax,DWORD PTR [ebp-0x68]
  421705:	sub    eax,0xdae0b
  42170a:	mov    DWORD PTR [ebp-0x68],eax
  42170d:	cmp    DWORD PTR [ebp-0x4],0x0
  421711:	jne    0x421724
  421713:	push   0x0
  421715:	push   0x0
  421717:	call   DWORD PTR ds:0x428120
  42171d:	mov    BYTE PTR ds:0x442930,0x0
  421724:	mov    ecx,DWORD PTR [ebp-0x4]
  421727:	add    ecx,DWORD PTR [ebp-0x14]
  42172a:	mov    edx,DWORD PTR [ebp-0x8]
  42172d:	mov    DWORD PTR [ecx],edx
  42172f:	push   DWORD PTR ds:0x428014
  421735:	pop    edx
  421736:	mov    DWORD PTR [ebp-0x70],edx
  421739:	mov    DWORD PTR [ebp-0x30],0x410000
  421740:	call   DWORD PTR ds:0x42800c
  421746:	mov    eax,DWORD PTR [ebp-0x4]
  421749:	add    eax,DWORD PTR [ebp-0x50]
  42174c:	mov    DWORD PTR [ebp-0x5c],eax
  42174f:	mov    ecx,DWORD PTR ds:0x428010
  421755:	mov    DWORD PTR [ebp-0x4c],ecx
  421758:	mov    edx,DWORD PTR [ebp-0x4]
  42175b:	add    edx,DWORD PTR [ebp-0x14]
  42175e:	mov    eax,DWORD PTR [ebp+0x8]
  421761:	mov    DWORD PTR [edx+0x4],eax
  421764:	mov    ecx,DWORD PTR [ebp-0x4]
  421767:	add    ecx,DWORD PTR [ebp-0x14]
  42176a:	mov    DWORD PTR [ebp-0x10],ecx
  42176d:	push   0x0
  42176f:	push   0x1
  421771:	mov    edx,DWORD PTR [ebp-0x60]
  421774:	push   edx
  421775:	call   DWORD PTR ds:0x428030
  42177b:	cmp    DWORD PTR [ebp-0x68],0x0
  42177f:	jbe    0x42179c
  421781:	mov    eax,DWORD PTR [ebp-0x10]
  421784:	push   eax
  421785:	mov    ecx,DWORD PTR [ebp-0x14]
  421788:	push   ecx
  421789:	mov    edx,DWORD PTR [ebp-0x30]
  42178c:	add    edx,DWORD PTR [ebp-0x68]
  42178f:	push   edx
  421790:	mov    eax,DWORD PTR [ebp-0x4]
  421793:	push   eax
  421794:	call   0x411000
  421799:	add    esp,0x10
  42179c:	call   DWORD PTR ds:0x428044
  4217a2:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217a6:	je     0x4217ba
  4217a8:	mov    ecx,DWORD PTR [ebp-0x4c]
  4217ab:	push   ecx
  4217ac:	push   DWORD PTR [ebp-0x70]
  4217af:	mov    esi,DWORD PTR [ebp-0x5c]
  4217b2:	push   edx
  4217b3:	pop    eax
  4217b4:	push   ecx
  4217b5:	nop
  4217b6:	jmp    esi
  4217b8:	jmp    0x4217cd
  4217ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4217bd:	mov    DWORD PTR [ebp-0x18],ecx
  4217c0:	push   0x0
  4217c2:	push   0x83232
  4217c7:	call   DWORD PTR ds:0x42804c
  4217cd:	mov    eax,0x1
  4217d2:	pop    esi
  4217d3:	mov    esp,ebp
  4217d5:	pop    ebp
  4217d6:	ret    
  4217d7:	int3   
  4217d8:	int3   
  4217d9:	int3   
  4217da:	int3   
  4217db:	int3   
  4217dc:	int3   
  4217dd:	int3   
  4217de:	int3   
  4217df:	int3   
  4217e0:	push   ebp
  4217e1:	mov    ebp,esp
  4217e3:	sub    esp,0x8
  4217e6:	push   esi
  4217e7:	push   0x0
  4217e9:	push   0x1
  4217eb:	push   0x0
  4217ed:	mov    DWORD PTR [ebp-0x4],0x0
  4217f4:	call   DWORD PTR ds:0x428030
  4217fa:	mov    eax,ds:0x428018
  4217ff:	push   0x0
  421801:	mov    DWORD PTR [ebp-0x8],eax
  421804:	call   DWORD PTR ds:0x428028
  42180a:	push   0x0
  42180c:	push   0x4e
  42180e:	push   0x1e
  421810:	push   0x0
  421812:	push   0xffffffff
  421814:	call   DWORD PTR ds:0x428024
  42181a:	mov    esi,DWORD PTR [ebp-0x8]
  42181d:	call   esi
  42181f:	mov    DWORD PTR [ebp-0x4],eax
  421822:	cmp    DWORD PTR [ebp-0x4],0x57
  421826:	jne    0x42183d
  421828:	push   0xcb565ee8
  42182d:	call   0x421550
  421832:	add    esp,0x4
  421835:	push   0x0
  421837:	call   DWORD PTR ds:0x428020
  42183d:	xor    eax,eax
  42183f:	pop    esi
  421840:	mov    esp,ebp
  421842:	pop    ebp
  421843:	ret    
  421844:	nop
  421845:	nop
  421846:	nop
  421847:	nop
  421848:	nop
  421849:	nop
  42184a:	nop
  42184b:	nop
  42184c:	nop
  42184d:	nop
  42184e:	nop
  42184f:	nop
  421850:	sub    esp,0x10
  421853:	push   esi
  421854:	push   0x3
  421856:	push   0x0
  421858:	push   0x18
  42185a:	push   0x0
  42185c:	call   DWORD PTR ds:0x428128
  421862:	push   0x0
  421864:	push   0x0
  421866:	call   DWORD PTR ds:0x428124
  42186c:	lea    eax,[esp+0x4]
  421870:	push   eax
  421871:	call   DWORD PTR ds:0x428038
  421877:	push   0x0
  421879:	call   DWORD PTR ds:0x428034
  42187f:	cmp    WORD PTR [esp+0x4],0x0
  421885:	mov    esi,DWORD PTR ds:0x428048
  42188b:	push   0x0
  42188d:	je     0x4218a0
  42188f:	call   esi
  421891:	push   0x0
  421893:	call   0x4217e0
  421898:	add    esp,0x4
  42189b:	jmp    0x4229d8
  4218a0:	push   0xa
  4218a2:	push   0x0
  4218a4:	push   0xffffffff
  4218a6:	call   0x422a00
  4218ab:	inc    DWORD PTR [eax+0x4d6bd40e]
  4218b1:	xor    eax,0x34efc2e3
  4218b6:	adc    dl,bl
  4218b8:	pop    es
  4218b9:	xor    dl,BYTE PTR [esp+eax*2-0x2d]
  4218bd:	dec    esi
  4218be:	xor    eax,0x34ebc2e3
  4218c3:	adc    dl,BYTE PTR [ebx+0x4454cdf8]
  4218c9:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  4218cd:	ret    0x34eb
  4218d0:	adc    dl,bl
  4218d2:	clc    
  4218d3:	int    0x54
  4218d5:	inc    esp
  4218d6:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  4218da:	ret    0x34eb
  4218dd:	adc    dl,bl
  4218df:	clc    
  4218e0:	int    0x54
  4218e2:	inc    esp
  4218e3:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  4218e7:	ret    0x3413
  4218ea:	adc    dl,bl
  4218ec:	not    dl
  4218ee:	out    dx,al
  4218ef:	dec    edx
  4218f0:	imul   edi,edx,0x3c
  4218f3:	cs jecxz 0x421949
  4218f6:	xor    eax,0x99d91e5e
  4218fb:	cmp    al,0x2d
  4218fd:	sbb    BYTE PTR [esi+0x45],ch
  421900:	xchg   ecx,eax
  421901:	lods   eax,DWORD PTR ds:[esi]
  421902:	mov    WORD PTR [esi+0x73],es
  421905:	mov    esi,0x2a35aed8
  42190a:	add    eax,0xa0c34121
  42190f:	mov    ss,WORD PTR [eax+eiz*2]
  421912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421913:	xchg   esi,eax
  421914:	in     eax,dx
  421915:	cmp    eax,0x7a0a4b2a
  42191a:	mov    al,0xe2
  42191c:	xchg   BYTE PTR [ebx+0x76],bl
  42191f:	mov    dh,0xd6
  421921:	rcr    BYTE PTR [ecx+0x4e],0x4f
  421925:	dec    esi
  421926:	xor    eax,0x34ebc2e3
  42192b:	adc    dl,ah
  42192d:	popa   
  42192e:	xor    DWORD PTR ds:0x3fdc9307,ecx
  421934:	mov    al,ds:0x513e793a
  421939:	sub    ebp,DWORD PTR [edx-0x39]
  42193c:	or     al,0x21
  42193e:	addr16 inc esp
  421940:	push   0x1b
  421942:	push   eax
  421943:	loope  0x4219b1
  421945:	ja     0x421932
  421947:	repnz shrd esi,edx,0x61
  42194c:	push   ss
  42194d:	push   eax
  42194e:	fcmove st,st(0)
  421950:	or     esp,0xffffff80
  421953:	(bad)  
  421955:	inc    ebx
  421956:	ins    DWORD PTR es:[edi],dx
  421957:	dec    esi
  421958:	sub    eax,0x88e9a7b6
  42195d:	imul   esp,DWORD PTR ds:0x5f009918,0x5e
  421964:	push   cs
  421965:	jmp    0x4219b6
  421967:	aas    
  421968:	mov    ebx,0x513e793a
  42196d:	sub    ebp,DWORD PTR [ebx-0x39]
  421970:	jl     0x42192f
  421972:	stc    
  421973:	inc    esp
  421974:	mov    bh,BYTE PTR [ebx]
  421976:	inc    edx
  421977:	loope  0x4219f2
  421979:	jmp    0x6179:0x3195f241
  421980:	inc    esi
  421981:	int    0x71
  421983:	enter  0x51b3,0x1a
  421987:	fnstcw WORD PTR [edx+0x334ec635]
  42198d:	sub    edi,DWORD PTR [edx]
  42198f:	jmp    0x18e82d14
  421994:	adc    DWORD PTR [ecx-0x6cf8c352],0xc2e33fdc
  42199e:	jmp    0x4219d4
  4219a0:	adc    dl,bl
  4219a2:	clc    
  4219a3:	int    0x4
  4219a5:	add    DWORD PTR [ebx+0x4e],ebp
  4219a8:	jns    0x42198c
  4219aa:	shr    bl,0xd8
  4219ad:	icebp  
  4219ae:	mov    WORD PTR [edi+0x6b4454cd],?
  4219b4:	dec    esi
  4219b5:	xor    eax,0x340bc2e3
  4219ba:	adc    edx,edx
  4219bc:	repz int3 
  4219be:	pop    esi
  4219bf:	inc    esp
  4219c0:	imul   esp,DWORD PTR [edx-0x103d1ccf],0x32
  4219c7:	adc    dl,bl
  4219c9:	clc    
  4219ca:	int    0x54
  4219cc:	inc    ebp
  4219cd:	(bad)  
  4219ce:	dec    esi
  4219cf:	xor    eax,0x34ebd2e3
  4219d4:	adc    dl,bl
  4219d6:	std    
  4219d7:	int    0x54
  4219d9:	inc    esp
  4219da:	sub    cl,BYTE PTR [esi+0x35]
  4219dd:	repz ret 0x34eb
  4219e1:	adc    bl,dl
  4219e3:	clc    
  4219e4:	enter  0x4554,0x6b
  4219e8:	dec    esi
  4219e9:	xor    eax,0x34eec2e3
  4219ee:	adc    edx,ebx
  4219f0:	clc    
  4219f1:	int    0x54
  4219f3:	inc    esp
  4219f4:	imul   ecx,esi,0x3e
  4219f7:	jecxz  0x4219bb
  4219f9:	out    dx,eax
  4219fa:	xor    al,0x12
  4219fc:	outs   dx,BYTE PTR ds:[esi]
  4219fd:	leave  
  4219fe:	enter  0x4654,0x6b
  421a02:	dec    esi
  421a03:	mov    ch,0xe3
  421a05:	ret    0x34fb
  421a08:	adc    al,bl
  421a0a:	clc    
  421a0b:	int    0x54
  421a0d:	inc    esp
  421a0e:	jnp    0x421a5e
  421a10:	xor    eax,0x34ebc2f3
  421a15:	adc    dl,bl
  421a17:	clc    
  421a18:	fst    QWORD PTR [esp+eax*2+0x6b]
  421a1c:	dec    esi
  421a1d:	xor    eax,0x34ebc2e3
  421a22:	adc    dl,bl
  421a24:	jl     0x4219c9
  421a26:	pop    edi
  421a27:	inc    esp
  421a28:	add    cl,BYTE PTR [ebp+0x35]
  421a2b:	jecxz  0x4219ef
  421a2d:	fstp   TBYTE PTR [edi]
  421a2f:	adc    bl,BYTE PTR [eax*8+0x6b4454cd]
  421a36:	dec    esi
  421a37:	xor    eax,0x34ebc2e3
  421a3c:	adc    dl,bl
  421a3e:	clc    
  421a3f:	int    0x54
  421a41:	inc    esp
  421a42:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421a46:	ret    0x34eb
  421a49:	adc    dl,bl
  421a4b:	clc    
  421a4c:	int    0x54
  421a4e:	inc    esp
  421a4f:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421a53:	ret    0x34eb
  421a56:	adc    dl,bl
  421a58:	clc    
  421a59:	int    0x54
  421a5b:	inc    esp
  421a5c:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421a60:	ret    0x34eb
  421a63:	adc    dl,bl
  421a65:	clc    
  421a66:	int    0x54
  421a68:	inc    esp
  421a69:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421a6d:	ret    0x34eb
  421a70:	adc    dl,bl
  421a72:	clc    
  421a73:	int    0x54
  421a75:	inc    esp
  421a76:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421a7a:	ret    0x34eb
  421a7d:	adc    dl,bl
  421a7f:	clc    
  421a80:	int    0x54
  421a82:	inc    esp
  421a83:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421a87:	ret    0x34eb
  421a8a:	adc    dl,bl
  421a8c:	clc    
  421a8d:	int    0x54
  421a8f:	inc    esp
  421a90:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421a94:	ret    0x34eb
  421a97:	adc    dl,bl
  421a99:	clc    
  421a9a:	int    0x54
  421a9c:	push   0x1f
  421a9e:	sub    ecx,DWORD PTR [ebp-0x69]
  421aa1:	ret    0x34eb
  421aa4:	adc    dh,bl
  421aa6:	repz int 0x54
  421aa9:	push   esp
  421aaa:	imul   ecx,DWORD PTR [esi+0x35],0xffffffd9
  421aae:	(bad)  
  421aaf:	jmp    0x421ae5
  421ab1:	push   ss
  421ab2:	sar    eax,cl
  421ab4:	popf   
  421ab5:	adc    DWORD PTR [edi],eax
  421ab7:	pop    ecx
  421ab8:	sbb    bh,BYTE PTR [edx-0x1d]
  421abb:	ret    0x34eb
  421abe:	adc    dl,bl
  421ac0:	fmul   st,st(5)
  421ac2:	push   esp
  421ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ac4:	inc    ebp
  421ac5:	cmp    al,0x46
  421ac7:	xchg   ecx,eax
  421ac8:	mov    eax,ds:0xd31234eb
  421acd:	test   al,0xcd
  421acf:	push   esp
  421ad0:	inc    esp
  421ad1:	pop    ebx
  421ad2:	inc    ebp
  421ad3:	xor    eax,0x34eb92e3
  421ad8:	adc    ch,ch
  421ada:	cld    
  421adb:	int    0x54
  421add:	inc    esp
  421ade:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421ae2:	ret    0x34eb
  421ae5:	adc    dl,bl
  421ae7:	clc    
  421ae8:	in     eax,dx
  421ae9:	push   esp
  421aea:	inc    esp
  421aeb:	mov    ecx,DWORD PTR [esi+0x35]
  421aee:	jecxz  0x421ab2
  421af0:	jmp    0x421b26
  421af2:	adc    dl,bl
  421af4:	clc    
  421af5:	int    0x54
  421af7:	inc    esp
  421af8:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421afc:	ret    0x34eb
  421aff:	adc    dl,bl
  421b01:	clc    
  421b02:	int    0x54
  421b04:	inc    esp
  421b05:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b09:	ret    0x34eb
  421b0c:	adc    dl,bl
  421b0e:	clc    
  421b0f:	int    0x54
  421b11:	inc    esp
  421b12:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b16:	ret    0x34eb
  421b19:	adc    dl,bl
  421b1b:	clc    
  421b1c:	int    0x54
  421b1e:	inc    esp
  421b1f:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b23:	ret    0x34eb
  421b26:	adc    dl,bl
  421b28:	clc    
  421b29:	int    0x54
  421b2b:	inc    esp
  421b2c:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b30:	ret    0x34eb
  421b33:	adc    dl,bl
  421b35:	clc    
  421b36:	int    0x54
  421b38:	inc    esp
  421b39:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b3d:	ret    0x34eb
  421b40:	adc    dl,bl
  421b42:	clc    
  421b43:	int    0x54
  421b45:	inc    esp
  421b46:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b4a:	ret    0x34eb
  421b4d:	adc    dl,bl
  421b4f:	clc    
  421b50:	int    0x54
  421b52:	inc    esp
  421b53:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b57:	ret    0x34eb
  421b5a:	adc    dl,bl
  421b5c:	clc    
  421b5d:	int    0x54
  421b5f:	inc    esp
  421b60:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b64:	ret    0x34eb
  421b67:	adc    dl,bl
  421b69:	clc    
  421b6a:	int    0x54
  421b6c:	inc    esp
  421b6d:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b71:	ret    0x34eb
  421b74:	adc    dl,bl
  421b76:	clc    
  421b77:	int    0x54
  421b79:	inc    esp
  421b7a:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b7e:	ret    0x34eb
  421b81:	adc    dl,bl
  421b83:	clc    
  421b84:	int    0x54
  421b86:	inc    esp
  421b87:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b8b:	ret    0x34eb
  421b8e:	adc    dl,bl
  421b90:	clc    
  421b91:	int    0x54
  421b93:	inc    esp
  421b94:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421b98:	ret    0x34eb
  421b9b:	adc    dl,bl
  421b9d:	clc    
  421b9e:	int    0x54
  421ba0:	inc    esp
  421ba1:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421ba5:	ret    0x34eb
  421ba8:	adc    dl,bl
  421baa:	clc    
  421bab:	int    0x54
  421bad:	inc    esp
  421bae:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421bb2:	ret    0x34eb
  421bb5:	adc    dl,bl
  421bb7:	clc    
  421bb8:	int    0x54
  421bba:	inc    esp
  421bbb:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421bbf:	ret    0x34eb
  421bc2:	adc    dl,bl
  421bc4:	clc    
  421bc5:	int    0x54
  421bc7:	inc    esp
  421bc8:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421bcc:	ret    0x34eb
  421bcf:	adc    dl,bl
  421bd1:	clc    
  421bd2:	int    0x54
  421bd4:	inc    esp
  421bd5:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421bd9:	ret    0x34eb
  421bdc:	adc    dl,bl
  421bde:	clc    
  421bdf:	int    0x54
  421be1:	inc    esp
  421be2:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421be6:	ret    0x34eb
  421be9:	adc    dl,bl
  421beb:	clc    
  421bec:	int    0x54
  421bee:	inc    esp
  421bef:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421bf3:	ret    0x34eb
  421bf6:	adc    dl,bl
  421bf8:	clc    
  421bf9:	int    0x54
  421bfb:	inc    esp
  421bfc:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c00:	ret    0x34eb
  421c03:	adc    dl,bl
  421c05:	clc    
  421c06:	int    0x54
  421c08:	inc    esp
  421c09:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c0d:	ret    0x34eb
  421c10:	adc    dl,bl
  421c12:	clc    
  421c13:	int    0x54
  421c15:	inc    esp
  421c16:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c1a:	ret    0x34eb
  421c1d:	adc    dl,bl
  421c1f:	clc    
  421c20:	int    0x54
  421c22:	inc    esp
  421c23:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c27:	ret    0x34eb
  421c2a:	adc    dl,bl
  421c2c:	clc    
  421c2d:	int    0x54
  421c2f:	inc    esp
  421c30:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c34:	ret    0x34eb
  421c37:	adc    dl,bl
  421c39:	clc    
  421c3a:	int    0x54
  421c3c:	inc    esp
  421c3d:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c41:	ret    0x34eb
  421c44:	adc    dl,bl
  421c46:	clc    
  421c47:	int    0x54
  421c49:	inc    esp
  421c4a:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c4e:	ret    0x34eb
  421c51:	adc    dl,bl
  421c53:	clc    
  421c54:	int    0x54
  421c56:	inc    esp
  421c57:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c5b:	ret    0x34eb
  421c5e:	adc    dl,bl
  421c60:	clc    
  421c61:	int    0x54
  421c63:	inc    esp
  421c64:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c68:	ret    0x34eb
  421c6b:	adc    dl,bl
  421c6d:	clc    
  421c6e:	int    0x54
  421c70:	inc    esp
  421c71:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c75:	ret    0x34eb
  421c78:	adc    dl,bl
  421c7a:	clc    
  421c7b:	int    0x54
  421c7d:	inc    esp
  421c7e:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c82:	ret    0x34eb
  421c85:	adc    dl,bl
  421c87:	clc    
  421c88:	int    0x54
  421c8a:	inc    esp
  421c8b:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c8f:	ret    0x34eb
  421c92:	adc    dl,bl
  421c94:	clc    
  421c95:	int    0x54
  421c97:	inc    esp
  421c98:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421c9c:	ret    0x34eb
  421c9f:	adc    dl,bl
  421ca1:	clc    
  421ca2:	int    0x54
  421ca4:	inc    esp
  421ca5:	imul   ecx,DWORD PTR [esi+0x35],0xffffffe3
  421ca9:	ret    0x34eb
  421cac:	push   ebp
  421cad:	cmp    eax,0x447bcdf2
  421cb2:	imul   ebx,DWORD PTR [esi+0x35],0xffffffe3
  421cb6:	call   0xb5a60b04
  421cbb:	pop    es
  421cbc:	loopne 0x421c88
  421cbe:	ret    
  421cbf:	cmp    esp,DWORD PTR [ebx+0x5fd10b03]
  421cc5:	mov    eax,ds:0x977ca274
  421cca:	inc    edi
  421ccb:	cmc    
  421ccc:	fcomp  QWORD PTR [eax+0x58]
  421ccf:	pop    es
  421cd0:	dec    eax
  421cd1:	push   0xfffffff2
  421cd3:	cmp    al,0xb1
  421cd5:	push   0x24776df2
  421cda:	jmp    DWORD PTR [edx]
  421cdc:	rol    edx,0xcc
  421cdf:	xchg   ebx,eax
  421ce0:	call   0x5676:0xfda0a986
  421ce7:	xchg   ebx,eax
  421ce8:	and    DWORD PTR [edx-0x5e],edx
  421ceb:	sti    
  421cec:	outs   dx,DWORD PTR ds:[esi]
  421ced:	xor    al,0xc2
  421cef:	pop    ss
  421cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cf1:	cmc    
  421cf2:	sub    BYTE PTR [esp+esi*8-0x40b0dbe7],cl
  421cf9:	retf   0xa324
  421cfc:	xor    eax,0xa2e45654
  421d01:	dec    edx
  421d02:	mov    ds:0x41f7fd9a,al
  421d07:	punpckldq mm2,DWORD PTR [esi+0x1a]
  421d0b:	iret   
  421d0c:	pushf  
  421d0d:	sub    al,0x4
  421d0f:	cmp    DWORD PTR [edx-0x67717831],ebp
  421d15:	fidiv  WORD PTR [eax+0x56b3b233]
  421d1b:	inc    esp
  421d1c:	push   eax
  421d1d:	mov    ch,0x74
  421d1f:	sub    BYTE PTR [edx-0x79d14c2e],ch
  421d25:	pop    ss
  421d26:	mov    al,ds:0xa8e5a789
  421d2b:	inc    ecx
  421d2c:	xor    ebx,DWORD PTR [edi]
  421d2e:	mov    dl,0xd7
  421d30:	adc    eax,DWORD PTR [esi-0x36]
  421d33:	add    BYTE PTR [ecx-0x3a3fb867],cl
  421d39:	(bad)  
  421d3a:	out    0xc2,eax
  421d3c:	repnz popf 
  421d3e:	xchg   edi,eax
  421d3f:	sbb    al,0x7a
  421d41:	cmp    cl,ch
  421d43:	stc    
  421d44:	mov    al,ds:0xfa360016
  421d49:	or     DWORD PTR [edx],esi
  421d4b:	(bad)  
  421d4d:	imul   ecx,DWORD PTR [ebp+0x0],0xfbfd883
  421d54:	imul   DWORD PTR [ebp+0x3753a856]
  421d5a:	jbe    0x421d9c
  421d5c:	inc    edx
  421d5e:	or     al,0x3f
  421d60:	adc    dl,bl
  421d62:	loope  0x421dc1
  421d64:	xor    edx,DWORD PTR [edi+0x4a01693c]
  421d6a:	iret   
  421d6b:	ins    DWORD PTR es:[edi],dx
  421d6c:	test   DWORD PTR [ebp-0x54],ebp
  421d6f:	sub    BYTE PTR [ebp+0xe],cl
  421d72:	(bad)  
  421d73:	shr    ch,cl
  421d75:	bound  ebx,QWORD PTR [ebx+0x3b6540fb]
  421d7b:	loopne 0x421d89
  421d7d:	jbe    0x421d59
  421d7f:	pop    ss
  421d80:	mov    WORD PTR [edi+0xf077a57],ds
  421d86:	mov    eax,ds:0x31035b5b
  421d8b:	in     eax,0xb6
  421d8d:	add    BYTE PTR [eax+0x7318df39],dl
  421d93:	sti    
  421d94:	mov    ecx,0x2b1896a3
  421d99:	imul   ecx,DWORD PTR [edi-0x59eabffd],0x27
  421da0:	jo     0x421dbb
  421da2:	pushf  
  421da3:	mov    al,ds:0xfce4408
  421da8:	daa    
  421da9:	cmp    ch,dh
  421dab:	xor    esp,DWORD PTR [edx-0x74]
  421dae:	je     0x421d5d
  421db0:	jno    0x421d7f
  421db2:	test   esi,ecx
  421db4:	fld    TBYTE PTR [edi-0x40]
  421db7:	xor    DWORD PTR [eax+0x39],0x5d728df0
  421dbe:	je     0x421d93
  421dc0:	pop    edx
  421dc1:	push   edx
  421dc2:	mov    dl,0xea
  421dc4:	cdq    
  421dc5:	stos   DWORD PTR es:[edi],eax
  421dc6:	leave  
  421dc7:	push   ebx
  421dc8:	jp     0x421de2
  421dca:	cmp    BYTE PTR [ebx-0x54350943],al
  421dd0:	jl     0x421daf
  421dd2:	fcomi  st,st(0)
  421dd4:	jg     0x421e01
  421dd6:	ss out dx,al
  421dd8:	and    eax,0xa687a965
  421ddd:	call   0x7112:0x2f5a2c2a
  421de4:	inc    eax
  421de5:	sub    eax,ecx
  421de7:	sub    BYTE PTR [esi-0x45],bl
  421dea:	inc    edi
  421deb:	cmp    BYTE PTR ds:0x6d0a2896,al
  421df1:	out    0x25,eax
  421df3:	cmp    ebx,DWORD PTR [ebx]
  421df5:	push   ebx
  421df6:	add    al,0x39
  421df8:	out    0x5d,eax
  421dfa:	adc    ecx,esp
  421dfc:	out    0x8,eax
  421dfe:	pop    es
  421dff:	xchg   esi,eax
  421e00:	push   ebp
  421e01:	and    dl,BYTE PTR [eax-0x39fa422f]
  421e07:	push   ds
  421e08:	mov    esp,0x24acc54d
  421e0d:	sar    DWORD PTR [edi-0x6b],1
  421e10:	and    ch,bh
  421e12:	mov    ds:0xef41296,eax
  421e17:	aam    0xaa
  421e19:	xor    DWORD PTR [eax-0x5e],0x4587dfe7
  421e20:	xchg   DWORD PTR [edi+ecx*8+0x46e32777],edi
  421e27:	addr16 jbe 0x421ddc
  421e2a:	mov    ch,0xaa
  421e2c:	outs   dx,BYTE PTR ds:[esi]
  421e2d:	dec    ebx
  421e2e:	xlat   BYTE PTR ds:[ebx]
  421e2f:	fnsave [ebp-0x6426d152]
  421e35:	loope  0x421dec
  421e37:	out    dx,al
  421e38:	and    DWORD PTR [edx],ebp
  421e3a:	or     BYTE PTR [eax-0x3759e923],dl
  421e40:	sahf   
  421e41:	and    dh,BYTE PTR [ebx-0x25c67f83]
  421e47:	mov    bh,BYTE PTR [edx]
  421e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e4a:	ins    BYTE PTR es:[edi],dx
  421e4b:	std    
  421e4c:	loop   0x421e03
  421e4e:	dec    edi
  421e4f:	xor    al,0x49
  421e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e52:	stos   BYTE PTR es:[edi],al
  421e53:	repz mov ds:0x243beab,al
  421e59:	xchg   edi,eax
  421e5a:	xor    al,0x42
  421e5c:	fsub   st,st(3)
  421e5e:	push   edi
  421e5f:	add    eax,0x6a666297
  421e64:	and    al,0x4f
  421e66:	jne    0x421e67
  421e68:	clc    
  421e69:	cmp    BYTE PTR [ebx-0x789bfe16],cl
  421e6f:	adc    eax,0x30ed1a2d
  421e74:	ins    DWORD PTR es:[edi],dx
  421e75:	mov    BYTE PTR [ebx-0x60],ch
  421e78:	test   esp,0xec79b80
  421e7e:	sar    BYTE PTR [edi+0x45e2370e],0x89
  421e85:	(bad)  
  421e86:	push   esi
  421e87:	jl     0x421e4b
  421e89:	stos   BYTE PTR es:[edi],al
  421e8a:	addr16 loop 0x421eb8
  421e8d:	stos   BYTE PTR es:[edi],al
  421e8e:	xor    ah,dh
  421e90:	mov    bl,0xa1
  421e92:	sbb    cl,bl
  421e94:	mov    edx,0xffcc4abd
  421e99:	xrelease xacquire xchg DWORD PTR [eax],eax
  421e9d:	into   
  421e9e:	outs   dx,BYTE PTR ds:[esi]
  421e9f:	pop    ecx
  421ea0:	pusha  
  421ea1:	mov    ss:0x7aafcd8c,al
  421ea7:	je     0x421e6f
  421ea9:	xchg   esp,eax
  421eaa:	inc    ebp
  421eab:	mov    ds:0x68926366,eax
  421eb0:	sar    BYTE PTR [ebx],1
  421eb2:	jge    0x421f0c
  421eb4:	scas   al,BYTE PTR es:[edi]
  421eb5:	iret   
  421eb6:	cmp    dl,bl
  421eb8:	outs   dx,DWORD PTR ds:[esi]
  421eb9:	pop    edi
  421eba:	mov    edi,0x5764dee6
  421ebf:	lods   eax,DWORD PTR ds:[esi]
  421ec0:	inc    ecx
  421ec1:	jnp    0x421f39
  421ec3:	cmp    edx,DWORD PTR [ecx+0x4a]
  421ec6:	imul   edx,DWORD PTR [ecx+eax*4+0x4a1dcad6],0x296878db
  421ed1:	xor    eax,0xaae85285
  421ed6:	(bad)  
  421ed7:	adc    ah,BYTE PTR [edx-0x10]
  421eda:	and    BYTE PTR [esi-0x52],bh
  421edd:	mov    cl,0x9b
  421edf:	push   ds
  421ee0:	inc    ecx
  421ee1:	fdivr  st(4),st
  421ee3:	pop    eax
  421ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ee5:	cmp    ebp,DWORD PTR [ebp+0x621a1d6b]
  421eeb:	retf   
  421eec:	inc    ebp
  421eed:	cmp    eax,DWORD PTR [edi]
  421eef:	jmp    0xdb9e:0xb7402b59
  421ef6:	enter  0x894c,0x7
  421efa:	cmc    
  421efb:	and    eax,0xf84efa5
  421f00:	std    
  421f01:	cmp    edi,ecx
  421f03:	push   ebp
  421f04:	sti    
  421f05:	inc    ecx
  421f06:	test   eax,0x1a87392a
  421f0b:	ret    0xd6bf
  421f0e:	push   ecx
  421f0f:	mov    ds:0x8a308d30,eax
  421f14:	cld    
  421f15:	sti    
  421f16:	shl    BYTE PTR [edi+0x8e27f3e],cl
  421f1c:	das    
  421f1d:	adc    DWORD PTR [ecx+0x2c],edx
  421f20:	mov    DWORD PTR [edx+0x16608d00],edi
  421f26:	ret    
  421f27:	xlat   BYTE PTR ds:[ebx]
  421f28:	lods   eax,DWORD PTR ds:[esi]
  421f29:	cmp    bl,ch
  421f2b:	xchg   esi,eax
  421f2c:	sub    ah,BYTE PTR [edi+edx*8]
  421f2f:	sub    BYTE PTR [ebp-0x39f820db],0xde
  421f36:	imul   edi,DWORD PTR [ebx],0x2c2355f5
  421f3c:	repnz sbb bh,BYTE PTR [ecx]
  421f3f:	enter  0x7d80,0x9
  421f43:	cmp    ebp,DWORD PTR [ecx]
  421f45:	add    ebx,DWORD PTR [eax+0x65]
  421f48:	adc    BYTE PTR [esi-0x2c89bb95],dh
  421f4e:	dec    esi
  421f4f:	or     eax,0x62e03dd4
  421f54:	xchg   edx,eax
  421f55:	cwde   
  421f56:	repnz rcl cl,0x19
  421f5a:	inc    esi
  421f5b:	cmp    al,0x2f
  421f5d:	es (bad) 
  421f5f:	fwait
  421f60:	imul   ebp,DWORD PTR [edi-0x5ba13806],0x420e1158
  421f6a:	or     esi,DWORD PTR [eax]
  421f6c:	imul   esp,DWORD PTR [eax],0xf8e36f5f
  421f72:	rcl    BYTE PTR [ecx],0xa5
  421f75:	mov    esi,ebx
  421f77:	jb     0x421f5a
  421f79:	das    
  421f7a:	push   esi
  421f7b:	call   0x7dc46120
  421f80:	dec    eax
  421f81:	dec    ecx
  421f82:	int3   
  421f83:	ss scas al,BYTE PTR es:[edi]
  421f85:	xchg   esi,eax
  421f86:	jne    0x421f26
  421f88:	shr    edi,cl
  421f8a:	sub    edx,DWORD PTR [ebp-0x69]
  421f8d:	adc    al,0xcd
  421f8f:	fs pop ecx
  421f91:	push   cs
  421f92:	sub    bl,BYTE PTR [ebx+0x35]
  421f95:	cmp    DWORD PTR [eax],ecx
  421f97:	sahf   
  421f98:	mov    esi,0x4c0e3469
  421f9d:	mov    esp,0xf13494fc
  421fa2:	or     DWORD PTR [edi],0xb966df45
  421fa8:	xlat   BYTE PTR ds:[ebx]
  421fa9:	mov    dl,0x1e
  421fab:	loope  0x422020
  421fad:	jae    0x421f65
  421faf:	out    0x43,al
  421fb1:	adc    eax,esp
  421fb3:	pushf  
  421fb4:	xchg   ebp,eax
  421fb5:	inc    esp
  421fb6:	fs ins DWORD PTR es:[edi],dx
  421fb8:	popf   
  421fb9:	mov    ecx,0x99d5c0c1
  421fbe:	imul   ebx,DWORD PTR [esi+0x23],0x5d0b422f
  421fc5:	dec    ebx
  421fc6:	jo     0x421f6c
  421fc8:	dec    edi
  421fc9:	das    
  421fca:	push   0x3c
  421fcc:	mov    eax,ds:0x7c8c541c
  421fd1:	je     0x42203d
  421fd3:	push   0x2
  421fd5:	mov    al,BYTE PTR [eax+0x44]
  421fd8:	pop    es
  421fd9:	int    0x39
  421fdb:	adc    BYTE PTR [edx+0x55],ch
  421fde:	push   0x5502f53c
  421fe3:	pop    ds
  421fe4:	(bad)  
  421fe6:	push   edi
  421fe7:	ret    
  421fe8:	add    esp,eax
  421fea:	retf   
  421feb:	xchg   ecx,eax
  421fec:	mov    ah,BYTE PTR [ebx]
  421fee:	inc    ebx
  421fef:	retf   
  421ff0:	cld    
  421ff1:	retf   
  421ff2:	popf   
  421ff3:	push   ss
  421ff4:	adc    eax,DWORD PTR [ecx+edx*8]
  421ff7:	ficomp DWORD PTR [edx]
  421ff9:	fnsave [ecx]
  421ffb:	(bad)  
  421ffc:	in     eax,dx
  421ffd:	xchg   edi,eax
  421ffe:	test   DWORD PTR [eax],edi
  422000:	out    dx,eax
  422001:	add    bh,dl
  422003:	fidiv  DWORD PTR [eax]
  422005:	iret   
  422006:	jmp    0x7509:0x10668c0
  42200d:	fldcw  WORD PTR [eax]
  42200f:	sub    al,0x45
  422011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422012:	mov    eax,0x5f23f8fc
  422017:	mov    ch,0x55
  422019:	jge    0x422014
  42201b:	sbb    eax,0x8a511cf6
  422020:	cdq    
  422021:	mov    ds:0x51a105d,eax
  422026:	pop    ebp
  422027:	push   esi
  422028:	mov    bh,0x28
  42202a:	jno    0x421fc3
  42202c:	shl    DWORD PTR [esi-0x753ff4e],1
  422032:	data16 and dl,BYTE PTR [ebx+0x32f1bef3]
  422039:	adc    DWORD PTR [edx+0x38],edx
  42203c:	push   0xffffff90
  42203e:	xchg   esp,eax
  42203f:	repnz mov ch,0xa4
  422042:	sbb    ah,ch
  422044:	mov    bh,ah
  422046:	push   esi
  422047:	std    
  422048:	cmp    BYTE PTR [eax-0x26],0x5a
  42204c:	les    eax,FWORD PTR ds:0x2ae862b2
  422052:	jmp    0x422025
  422054:	mov    bh,0x9d
  422056:	add    bh,ch
  422058:	push   ebp
  422059:	xchg   edx,eax
  42205a:	daa    
  42205b:	mov    dl,dl
  42205d:	cmp    dh,BYTE PTR [edi-0x2ed634a4]
  422063:	mov    ds:0x346d1d9f,al
  422068:	mov    edi,0x6c60ba3e
  42206d:	pop    ss
  42206e:	xchg   bl,al
  422070:	fadd   DWORD PTR [eax]
  422072:	scas   al,BYTE PTR es:[edi]
  422073:	mov    DWORD PTR [esi],esp
  422075:	inc    ecx
  422076:	gs jnp 0x4220cc
  422079:	and    bl,cl
  42207b:	jmp    0x6c7acaa7
  422080:	fnstcw WORD PTR [eax-0x7b]
  422083:	retf   0x76c3
  422086:	and    bl,BYTE PTR [edi-0x7a117a26]
  42208c:	pop    esp
  42208d:	loop   0x4220b4
  42208f:	loop   0x422076
  422091:	nop
  422092:	mov    BYTE PTR [edi+0x238a6ec9],ah
  422098:	cmp    BYTE PTR [esi+0x3e],ah
  42209b:	jne    0x422034
  42209d:	sbb    esi,DWORD PTR [ebp-0x255300d2]
  4220a3:	mov    ds:0x3fab2ecd,eax
  4220a8:	xchg   ebp,eax
  4220a9:	add    BYTE PTR [edx+ecx*4],cl
  4220ac:	xchg   DWORD PTR [esi-0x10c8f97c],esp
  4220b2:	cmp    ecx,DWORD PTR [eax+0x76]
  4220b5:	iret   
  4220b6:	rcl    DWORD PTR [esi+0x3360874e],1
  4220bc:	daa    
  4220bd:	push   ds
  4220be:	es cmp edi,edi
  4220c1:	dec    ebx
  4220c2:	pop    ebp
  4220c3:	mov    ah,0xa2
  4220c5:	data16 fs sub al,0xbd
  4220c9:	sbb    DWORD PTR [edx-0x17],eax
  4220cc:	popf   
  4220cd:	add    BYTE PTR [eax+0x5],dh
  4220d0:	or     al,ah
  4220d2:	xchg   ebp,eax
  4220d3:	dec    ecx
  4220d4:	jge    0x4220b3
  4220d6:	cld    
  4220d7:	in     eax,dx
  4220d8:	or     eax,0x12f858fc
  4220dd:	jb     0x422127
  4220df:	and    BYTE PTR [edi+eiz*8],0xb6
  4220e3:	adc    eax,0x7031c08e
  4220e8:	mov    edx,0x7bbc1128
  4220ed:	mov    eax,ds:0xc839c689
  4220f2:	ins    DWORD PTR es:[edi],dx
  4220f3:	out    dx,eax
  4220f4:	xchg   esi,eax
  4220f5:	imul   ebp,DWORD PTR [ebx+esi*1],0x51
  4220f9:	(bad)  
  4220fa:	pop    ebp
  4220fb:	pop    ecx
  4220fc:	(bad)  
  4220fd:	out    0x89,al
  4220ff:	ss in  al,0x53
  422102:	int3   
  422103:	cs dec ebp
  422105:	test   DWORD PTR [edi+0x26],ebx
  422108:	and    ch,dl
  42210a:	out    0x28,eax
  42210c:	nop    DWORD PTR [edi-0x3d]
  422110:	int3   
  422111:	cld    
  422112:	mov    esi,DWORD PTR [edx]
  422114:	adc    al,0xb0
  422116:	nop
  422117:	test   al,0x25
  422119:	out    0x4f,eax
  42211b:	imul   ecx,DWORD PTR [ebp+ebx*1+0xf18e96],0x534a34e9
  422126:	jle    0x422102
  422128:	cmc    
  422129:	in     eax,dx
  42212a:	xor    BYTE PTR [ecx+0x4c],ah
  42212d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42212e:	std    
  42212f:	inc    ecx
  422130:	das    
  422131:	int3   
  422132:	mov    esi,0x6c9ffa25
  422137:	(bad)  
  422138:	xor    eax,0x87f04931
  42213d:	stos   DWORD PTR es:[edi],eax
  42213e:	push   es
  42213f:	ret    
  422140:	jne    0x422187
  422142:	inc    edx
  422143:	mov    ?,WORD PTR [esi-0xf]
  422146:	(bad)  
  422148:	jecxz  0x42219f
  42214a:	adc    al,0x8c
  42214c:	jo     0x42210b
  42214e:	or     al,0xe3
  422150:	jg     0x422139
  422152:	cmp    ch,BYTE PTR [edx+0x48d599ef]
  422158:	dec    esi
  422159:	adc    ecx,DWORD PTR [esi+0x4a]
  42215c:	xchg   DWORD PTR [ebx],ecx
  42215e:	out    dx,al
  42215f:	jb     0x4221e0
  422161:	pop    esp
  422162:	push   cs
  422163:	sub    al,BYTE PTR [eax-0x4083ae2f]
  422169:	sbb    esp,DWORD PTR [ecx-0x507cb2a5]
  42216f:	mov    dh,0x77
  422171:	dec    esi
  422172:	cmp    al,0xa6
  422174:	push   esi
  422175:	clc    
  422176:	adc    al,0xc
  422178:	jne    0x42217c
  42217a:	and    ecx,edi
  42217c:	fwait
  42217d:	mov    DWORD PTR fs:[edx],0x237ddf62
  422184:	(bad)  
  422185:	rcl    bh,1
  422187:	dec    edi
  422188:	hlt    
  422189:	sub    BYTE PTR [eax],dh
  42218b:	mov    al,ds:0xa6620bd8
  422190:	rcl    DWORD PTR [ecx-0x77],1
  422193:	ja     0x4221d6
  422195:	cdq    
  422196:	mov    al,ds:0x45039861
  42219b:	push   es
  42219c:	cmp    al,0x98
  42219e:	sysret 
  4221a0:	sbb    edx,esi
  4221a2:	xor    BYTE PTR [ebx+0x7adf6169],cl
  4221a8:	xor    eax,0x15c1d343
  4221ad:	pop    eax
  4221ae:	aad    0x58
  4221b0:	mov    edx,0x645845e0
  4221b5:	pop    ebx
  4221b6:	clc    
  4221b7:	into   
  4221b8:	inc    ecx
  4221b9:	pop    ecx
  4221ba:	mov    cl,0xbf
  4221bc:	mov    ebx,0xf14e8096
  4221c1:	fcmovb st,st(3)
  4221c3:	daa    
  4221c4:	(bad)
  4221c8:	xchg   esp,eax
  4221c9:	lods   eax,DWORD PTR ds:[esi]
  4221ca:	inc    ebx
  4221cb:	inc    ebx
  4221cc:	jns    0x42218a
  4221ce:	test   eax,0x44b470b6
  4221d3:	inc    esp
  4221d4:	es aas 
  4221d6:	pop    ebx
  4221d7:	jmp    0x422245
  4221d9:	jbe    0x4221b5
  4221db:	xchg   ebp,eax
  4221dc:	or     al,0xd
  4221de:	retf   0xa198
  4221e1:	sub    al,0xae
  4221e3:	sub    bh,al
  4221e5:	dec    edi
  4221e6:	in     eax,dx
  4221e7:	mov    dl,0xa9
  4221e9:	sbb    DWORD PTR [ebx],0xffffffb6
  4221ec:	jmp    0x422206
  4221ee:	popf   
  4221ef:	pop    ebp
  4221f0:	lods   al,BYTE PTR ds:[esi]
  4221f1:	and    bh,BYTE PTR [ecx-0x5c]
  4221f4:	test   ch,dh
  4221f6:	mov    bh,0x82
  4221f8:	(bad)  
  4221f9:	hlt    
  4221fa:	into   
  4221fb:	loope  0x42218a
  4221fd:	push   edx
  4221fe:	lock xor eax,DWORD PTR [esp+eax*1]
  422202:	sbb    esi,DWORD PTR [ecx+ebp*8-0x34bef58a]
  422209:	mov    fs,WORD PTR [esp+edx*8-0x2]
  42220d:	test   eax,0xe8424d2c
  422213:	idiv   DWORD PTR ds:0xe27bd96e
  422219:	inc    esi
  42221a:	ss mov ecx,0x28151ad7
  422220:	mov    eax,ds:0x53f0c570
  422225:	loopne 0x4221ad
  422227:	leave  
  422228:	fstp   DWORD PTR [esi+0x56]
  42222b:	test   DWORD PTR [edi-0x613117bd],esp
  422231:	ins    BYTE PTR es:[edi],dx
  422232:	or     BYTE PTR [edi-0x53],ah
  422235:	ret    
  422236:	and    cl,ah
  422238:	cli    
  422239:	xchg   edi,eax
  42223a:	out    0xb,al
  42223c:	hlt    
  42223d:	repnz lahf 
  42223f:	or     BYTE PTR [edi+0x25],ch
  422242:	ds das 
  422244:	retf   
  422245:	push   edi
  422246:	mov    esi,0x2dff3576
  42224b:	imul   edx,eax,0x10
  42224e:	mov    BYTE PTR [esi],ah
  422250:	lahf   
  422251:	and    DWORD PTR [edx-0x4e],0x7e
  422255:	push   0xc3c65b28
  42225a:	in     al,0x3
  42225c:	(bad)  
  42225d:	rcl    bh,cl
  42225f:	dec    ebx
  422260:	mov    edi,0xbe5602aa
  422265:	add    eax,esp
  422267:	cvtdq2ps xmm6,XMMWORD PTR [eax]
  42226a:	adc    esi,ebp
  42226c:	rcr    edi,1
  42226e:	sub    esi,DWORD PTR [ebx-0x56]
  422271:	xchg   edi,eax
  422272:	add    BYTE PTR [eax-0x33],bh
  422275:	sti    
  422276:	xchg   ecx,eax
  422277:	lea    edi,[edx-0x992c31]
  42227d:	push   edx
  42227e:	inc    eax
  42227f:	dec    ecx
  422280:	loopne 0x4222fb
  422282:	call   0x420ff2fc
  422287:	in     al,dx
  422288:	icebp  
  422289:	push   esp
  42228a:	ret    0x932c
  42228d:	xor    bh,bl
  42228f:	les    esp,FWORD PTR [edx+0x4f]
  422292:	cmp    esi,DWORD PTR [esi+0x70e86d11]
  422298:	ins    DWORD PTR es:[edi],dx
  422299:	push   edx
  42229a:	adc    al,ch
  42229c:	push   0x63
  42229e:	stc    
  42229f:	xor    esp,ecx
  4222a1:	cli    
  4222a2:	loope  0x4222fe
  4222a4:	xor    ebp,0x42538c20
  4222aa:	leave  
  4222ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222ac:	aam    0x3e
  4222ae:	in     eax,dx
  4222af:	pop    ebp
  4222b0:	mov    BYTE PTR [edi+0x75],ch
  4222b3:	xchg   ebp,eax
  4222b4:	inc    edx
  4222b5:	and    eax,0x537db81e
  4222ba:	adc    BYTE PTR [esi+0x67f0f4a6],cl
  4222c0:	fs inc ebx
  4222c2:	fdiv   DWORD PTR [edx]
  4222c4:	and    esp,ecx
  4222c6:	xor    edx,ecx
  4222c8:	cmp    ebx,DWORD PTR [esi]
  4222ca:	adc    eax,0x3714974d
  4222cf:	xchg   DWORD PTR [ebx-0x2c],ecx
  4222d2:	sub    DWORD PTR [ebx+edi*8+0x1e],ecx
  4222d6:	bnd js 0x4222bb
  4222d9:	push   ecx
  4222da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222db:	(bad)  
  4222dc:	mov    es,ebx
  4222de:	in     eax,0x24
  4222e0:	xor    eax,0xb09e5408
  4222e5:	cmp    DWORD PTR [esi-0x59],0x37
  4222e9:	icebp  
  4222ea:	stos   BYTE PTR es:[edi],al
  4222eb:	mov    dl,0xde
  4222ed:	fsub   DWORD PTR [ebp+0x3dbe2a4a]
  4222f3:	dec    ecx
  4222f4:	ror    BYTE PTR [edi],1
  4222f6:	or     BYTE PTR [edi+edi*4+0x25ea8512],cl
  4222fd:	test   DWORD PTR [edi+esi*8-0xb6eeb02],esp
  422304:	rol    BYTE PTR [edx-0xcb8c091],cl
  42230a:	ss sahf 
  42230c:	icebp  
  42230d:	sub    DWORD PTR [edi],esi
  42230f:	loop   0x4222f2
  422311:	jnp    0x42229f
  422313:	imul   ebx,DWORD PTR [ecx+0x49d532ec],0xfca48e60
  42231d:	mov    eax,0x8999a760
  422322:	retf   
  422323:	add    ch,BYTE PTR [ecx-0x60]
  422326:	dec    edi
  422327:	add    BYTE PTR [ecx+0x51df5c65],0x97
  42232e:	xchg   ecx,eax
  42232f:	mov    ebx,0x56372c01
  422334:	adc    DWORD PTR [edx],esp
  422336:	xchg   esi,eax
  422337:	and    dl,BYTE PTR [ebx]
  422339:	dec    esp
  42233a:	xchg   ecx,eax
  42233b:	pop    edx
  42233c:	gs mov al,0xac
  42233f:	or     dl,BYTE PTR [edx]
  422341:	mov    DWORD PTR [ecx-0x23526d5e],esp
  422347:	xor    eax,0xda1cceaf
  42234c:	sbb    eax,0x23ff63dc
  422351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422352:	into   
  422353:	pop    edi
  422354:	mov    ds:0x13d87ad6,al
  422359:	je     0x422303
  42235b:	scas   eax,DWORD PTR es:[edi]
  42235c:	pop    ecx
  42235d:	in     al,dx
  42235e:	cmp    ah,dl
  422360:	pop    edx
  422361:	push   ebx
  422362:	fdivr  st,st(7)
  422364:	out    0x92,al
  422366:	mov    dh,0x18
  422368:	sbb    esp,esp
  42236a:	outs   dx,BYTE PTR ds:[esi]
  42236b:	stc    
  42236c:	xchg   ebx,ebx
  42236e:	dec    ecx
  42236f:	call   0x8cf9aee2
  422374:	and    al,0x1a
  422376:	xor    dh,dl
  422378:	cwde   
  422379:	bound  ebp,QWORD PTR [esp+esi*4+0x38]
  42237d:	fstp   TBYTE PTR [eax+ebp*4]
  422380:	call   0xbdc4:0x5014a81f
  422387:	mov    dh,0x7a
  422389:	ins    DWORD PTR es:[edi],dx
  42238a:	sub    eax,0x5b6a8ec3
  42238f:	push   eax
  422390:	add    DWORD PTR [ebx-0x38c41f7c],eax
  422396:	aad    0x6d
  422398:	jmp    0x6b6c:0xd78ad486
  42239f:	jo     0x422339
  4223a1:	outs   dx,DWORD PTR ds:[esi]
  4223a2:	int    0x74
  4223a4:	call   0x1e41:0xea14d0c4
  4223ab:	dec    eax
  4223ac:	popa   
  4223ad:	(bad)  
  4223ae:	aad    0x24
  4223b0:	jbe    0x422385
  4223b2:	sbb    ecx,DWORD PTR [edi]
  4223b4:	xchg   ecx,eax
  4223b5:	jge    0x4223a4
  4223b7:	sbb    BYTE PTR [ebx-0x5c],cl
  4223ba:	xchg   edx,eax
  4223bb:	bound  eax,QWORD PTR [ebp+ebp*2+0x36bba2f0]
  4223c2:	mov    dl,0x93
  4223c4:	add    DWORD PTR [ebx],0x5a
  4223c7:	(bad)  [ebx]
  4223c9:	fimul  DWORD PTR [ebp+0x5b]
  4223cc:	mov    esi,0x93ec16e0
  4223d1:	iret   
  4223d2:	fucomi st,st(2)
  4223d4:	xchg   esp,edi
  4223d6:	test   bh,ah
  4223d8:	fld    QWORD PTR [edx-0x7fdb2676]
  4223de:	mov    ebp,0xaeb591b6
  4223e3:	out    dx,eax
  4223e4:	jmp    0x4223f6
  4223e6:	cmp    DWORD PTR [ebx-0x43ce0c20],ebx
  4223ec:	dec    esi
  4223ed:	jg     0x422371
  4223ef:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4223f1:	addr16 nop
  4223f3:	aam    0xe1
  4223f5:	dec    esi
  4223f6:	jge    0x422448
  4223f8:	test   BYTE PTR [eax],0x95
  4223fb:	push   esp
  4223fc:	and    DWORD PTR cs:[ecx-0x33a0c170],esi
  422403:	inc    esp
  422404:	add    ch,BYTE PTR [ecx+0x5f]
  422407:	push   ebx
  422408:	daa    
  422409:	(bad)  
  42240a:	xlat   BYTE PTR ds:[ebx]
  42240b:	inc    ebp
  42240c:	push   ss
  42240d:	add    al,0x3
  42240f:	or     eax,0xe3e4288d
  422414:	and    DWORD PTR [esi],ecx
  422416:	and    esi,DWORD PTR [ecx+0x4b1b660]
  42241c:	mov    esp,0x64b0b3f1
  422421:	and    eax,0x781e9a7b
  422426:	daa    
  422427:	inc    ebx
  422428:	shl    eax,1
  42242a:	adc    esp,DWORD PTR [edi]
  42242c:	jnp    0x4223ff
  42242e:	and    al,0xe3
  422430:	rcr    eax,0x95
  422433:	inc    DWORD PTR [ebp-0x2005ee2f]
  422439:	lods   al,BYTE PTR ds:[esi]
  42243a:	sbb    al,0x17
  42243c:	push   ebp
  42243d:	icebp  
  42243e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42243f:	test   DWORD PTR [edi],ecx
  422441:	mov    eax,0xb2bd5b8f
  422446:	int3   
  422447:	pop    edx
  422448:	adc    DWORD PTR [ebp-0x555ef023],ebp
  42244e:	jge    0x42245b
  422450:	clc    
  422451:	push   es
  422452:	add    DWORD PTR [esi+0x5e],0x3f1e6143
  422459:	push   ecx
  42245a:	popa   
  42245b:	mov    esi,0xea6b35aa
  422460:	mov    bl,ah
  422462:	mov    cl,0xc7
  422464:	mov    bl,0x18
  422466:	and    edi,esi
  422468:	sub    dh,al
  42246a:	mov    al,0xce
  42246c:	popa   
  42246d:	mov    eax,ds:0x4484ae63
  422472:	pop    ss
  422473:	aas    
  422474:	repz lea esp,[ebp+0x4c]
  422478:	rcl    BYTE PTR [ebp+0x1329b0f7],cl
  42247e:	adc    eax,0x43c24449
  422483:	mov    edx,0x8bcbe06e
  422488:	shr    DWORD PTR [ebp-0x3eb98476],1
  42248e:	dec    ebp
  42248f:	inc    ecx
  422490:	cmp    eax,0x80b0e5d9
  422495:	sub    al,0x72
  422497:	mov    esi,0x6b36c79d
  42249c:	rol    DWORD PTR [eax+0x277b2efa],1
  4224a2:	cmp    dl,BYTE PTR [eax+0x1b9bc06f]
  4224a8:	inc    esi
  4224a9:	xchg   ebp,eax
  4224aa:	es inc esp
  4224ac:	int    0xf2
  4224ae:	pop    ds
  4224af:	mov    edx,0x64792ffe
  4224b4:	add    dh,ah
  4224b6:	sub    eax,ecx
  4224b8:	sbb    DWORD PTR [esi+ebp*8],eax
  4224bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224bc:	fsub   DWORD PTR [ecx+ebp*4]
  4224bf:	lock jle 0x422486
  4224c2:	int    0xd8
  4224c4:	inc    ecx
  4224c5:	sub    al,0x78
  4224c7:	imul   esp,DWORD PTR [eax],0x2b626094
  4224cd:	jne    0x422514
  4224cf:	repnz and ecx,edi
  4224d2:	mov    cl,0x18
  4224d4:	pop    ss
  4224d5:	test   al,bh
  4224d7:	jb     0x42250c
  4224d9:	(bad)  
  4224db:	jno    0x42245f
  4224dd:	test   bh,dh
  4224df:	aaa    
  4224e0:	scas   eax,DWORD PTR es:[edi]
  4224e1:	xchg   BYTE PTR [esi+0x7e],ch
  4224e4:	xor    DWORD PTR [ebx],edx
  4224e6:	xchg   esi,eax
  4224e7:	and    esp,DWORD PTR [ebp+0x7cd36c00]
  4224ed:	nop
  4224ee:	mov    esi,0xdd9df8e8
  4224f3:	push   es
  4224f4:	pop    edx
  4224f5:	mov    cl,0x43
  4224f7:	call   0x8596cd1c
  4224fc:	pop    edi
  4224fd:	cdq    
  4224fe:	xor    eax,0xb8c155d3
  422503:	sbb    edi,DWORD PTR [esi]
  422505:	maxps  xmm2,XMMWORD PTR [eax+0x4be0ca37]
  42250c:	into   
  42250d:	fwait
  42250e:	xor    al,0x9c
  422510:	sub    ebp,DWORD PTR [edi+eax*8]
  422513:	push   edi
  422514:	mov    eax,DWORD PTR [ecx-0x71947703]
  42251a:	out    dx,al
  42251b:	es push 0xe9ddb56d
  422521:	mov    esi,0xb65e2a00
  422526:	cmp    eax,0x330b3e88
  42252b:	adc    eax,DWORD PTR [eax]
  42252d:	xchg   esp,eax
  42252e:	mov    ecx,0x4ebab96c
  422533:	in     eax,dx
  422534:	bound  edx,QWORD PTR [ecx+0x69]
  422537:	and    eax,0xae7b9aa6
  42253c:	or     eax,0x738c84ae
  422541:	outs   dx,DWORD PTR ds:[esi]
  422542:	inc    ecx
  422543:	icebp  
  422544:	jge    0x42253f
  422546:	inc    ecx
  422547:	or     bh,0x33
  42254a:	mov    ebp,0x9055ef80
  42254f:	ret    0x21b2
  422552:	inc    eax
  422553:	push   es
  422554:	ret    
  422555:	dec    ah
  422557:	sbb    edx,DWORD PTR [ebp+0x20]
  42255a:	clc    
  42255b:	add    al,0x2b
  42255d:	jb     0x4224f2
  42255f:	pop    edi
  422560:	cmp    ebp,DWORD PTR [ebx+0x4b]
  422563:	and    DWORD PTR [esi+0x6d257886],esp
  422569:	mov    cl,0x3
  42256b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42256c:	jb     0x4225e3
  42256e:	(bad)  
  42256f:	(bad)  
  422570:	aam    0x8f
  422572:	mov    ss,edx
  422574:	ss in  eax,dx
  422576:	push   0x69c0054c
  42257b:	xchg   ecx,eax
  42257c:	push   edi
  42257d:	repnz mov al,0x48
  422580:	fisttp QWORD PTR [eax]
  422582:	xchg   ebx,ecx
  422584:	pop    ebx
  422585:	loop   0x42256a
  422587:	loop   0x422584
  422589:	jmp    0x42257f
  42258b:	xor    DWORD PTR [ebx+eiz*4],ecx
  42258e:	or     DWORD PTR [edx],ebp
  422590:	cmp    al,0x5e
  422592:	out    dx,eax
  422593:	into   
  422594:	das    
  422595:	cli    
  422596:	arpl   WORD PTR [esi+ecx*8],di
  422599:	data16 addr16 aaa 
  42259c:	and    esp,DWORD PTR [ebx+edi*2-0x638a2fe3]
  4225a3:	push   es
  4225a4:	aam    0xe7
  4225a6:	jnp    0x422586
  4225a8:	mov    eax,ds:0x48409395
  4225ad:	pop    ss
  4225ae:	aaa    
  4225af:	das    
  4225b0:	repnz dec ecx
  4225b2:	stc    
  4225b3:	rol    dh,1
  4225b5:	dec    edx
  4225b6:	xor    DWORD PTR [ecx-0x62],ebx
  4225b9:	push   ebp
  4225ba:	pop    ds
  4225bb:	sbb    al,0x94
  4225bd:	push   eax
  4225be:	mov    DWORD PTR [edx-0x16338153],esi
  4225c4:	push   ebp
  4225c5:	je     0x422592
  4225c7:	test   BYTE PTR [ebx],0x57
  4225ca:	jmp    0xae2b89df
  4225cf:	out    dx,al
  4225d0:	push   ebx
  4225d1:	xchg   edx,eax
  4225d2:	sub    eax,0x59546ea9
  4225d7:	arpl   WORD PTR [ebp+0x68156a42],dx
  4225dd:	jbe    0x422625
  4225df:	xorps  xmm0,XMMWORD PTR [eax+0x2a]
  4225e3:	xchg   BYTE PTR [esi+0x19],al
  4225e6:	loopne 0x422653
  4225e8:	arpl   WORD PTR [edx-0x4b],dx
  4225eb:	mov    edx,0xfbaa0916
  4225f0:	or     DWORD PTR [edx+0x72bc1bbe],edi
  4225f6:	xchg   BYTE PTR [ebx],dh
  4225f8:	ins    DWORD PTR es:[edi],dx
  4225f9:	xchg   ecx,eax
  4225fa:	inc    eax
  4225fb:	sbb    dh,bh
  4225fd:	ss out 0xa5,eax
  422600:	imul   esi,DWORD PTR [edx],0x1f
  422603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422604:	ds jnp 0x422645
  422607:	cmp    BYTE PTR [edi+0x579aa0f9],dl
  42260d:	jmp    0x4a4d037a
  422612:	and    eax,0xfe09580c
  422617:	(bad)  
  422618:	in     al,0xb8
  42261a:	sbb    al,BYTE PTR [ecx+0x50]
  42261d:	xor    eax,0x577cdaba
  422622:	dec    eax
  422623:	inc    ebp
  422624:	lods   al,BYTE PTR ds:[esi]
  422625:	shr    DWORD PTR [ecx-0x1c32edee],cl
  42262b:	inc    ecx
  42262c:	into   
  42262d:	in     eax,dx
  42262e:	mov    cl,0xe4
  422630:	adc    cl,0x60
  422633:	in     eax,dx
  422634:	mov    dh,0x83
  422636:	call   0xa176:0x83dc986d
  42263d:	xchg   esi,eax
  42263e:	add    edx,DWORD PTR [ecx]
  422640:	pop    eax
  422641:	sub    bl,BYTE PTR [esi+0x44]
  422644:	outs   dx,DWORD PTR ds:[esi]
  422645:	xor    dh,BYTE PTR ds:0x63d2bbe2
  42264b:	mov    bl,0x2c
  42264d:	or     eax,0x96927e51
  422652:	or     DWORD PTR [edx+0x735c6041],ebp
  422658:	scas   eax,DWORD PTR es:[edi]
  422659:	inc    BYTE PTR [eax]
  42265b:	sti    
  42265c:	cld    
  42265d:	into   
  42265e:	xor    dh,BYTE PTR [ebx-0x317de8a]
  422664:	data16 jnp 0x4226b1
  422667:	in     eax,0xd3
  422669:	pop    esi
  42266a:	and    esp,DWORD PTR [edx]
  42266c:	ins    BYTE PTR es:[edi],dx
  42266d:	out    0xb8,eax
  42266f:	xchg   edx,eax
  422670:	jp     0x422620
  422672:	xlat   BYTE PTR ds:[ebx]
  422673:	mov    ch,bh
  422675:	xor    ebp,eax
  422677:	xchg   ecx,eax
  422678:	outs   dx,BYTE PTR ds:[esi]
  422679:	push   eax
  42267a:	(bad)  
  42267c:	dec    edx
  42267d:	ins    DWORD PTR es:[edi],dx
  42267e:	scas   eax,DWORD PTR es:[edi]
  42267f:	fldenv [ecx-0x7780a258]
  422685:	ss push ebx
  422687:	inc    ecx
  422688:	bound  esp,QWORD PTR ds:0x196f0f55
  42268e:	int    0x1f
  422690:	lods   al,BYTE PTR ds:[esi]
  422691:	add    bh,ch
  422693:	scas   eax,DWORD PTR es:[edi]
  422694:	gs mov bh,0x50
  422697:	popa   
  422698:	bound  esp,QWORD PTR [ebp-0x1de3c846]
  42269e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42269f:	gs mov al,0x8f
  4226a2:	cs adc eax,0x6aefb180
  4226a8:	push   ds
  4226a9:	std    
  4226aa:	or     eax,0xf817790e
  4226af:	inc    BYTE PTR [ebx]
  4226b1:	fld    QWORD PTR [esi+0x6]
  4226b4:	call   0x3a0ac006
  4226b9:	jecxz  0x42266c
  4226bb:	out    dx,eax
  4226bc:	ja     0x422650
  4226be:	dec    eax
  4226bf:	lds    esi,FWORD PTR [ecx]
  4226c1:	int    0xe5
  4226c3:	sahf   
  4226c4:	pop    ebp
  4226c5:	in     eax,0x2e
  4226c7:	fimul  WORD PTR [ecx+edi*4-0x4d0e2ebd]
  4226ce:	loop   0x422668
  4226d0:	stc    
  4226d1:	out    dx,eax
  4226d2:	jbe    0x4226b7
  4226d4:	neg    ah
  4226d6:	sbb    ebp,0xe629ed0
  4226dc:	fmul   st(6),st
  4226de:	into   
  4226df:	out    dx,al
  4226e0:	adc    eax,DWORD PTR [ebx]
  4226e2:	ins    BYTE PTR es:[edi],dx
  4226e3:	jbe    0x4226c5
  4226e5:	inc    eax
  4226e6:	popa   
  4226e7:	or     esi,DWORD PTR [ebx-0xe]
  4226ea:	mov    al,ds:0x5db6c88
  4226ef:	loope  0x4226db
  4226f1:	xchg   esi,eax
  4226f2:	fsub   DWORD PTR [ecx+ebx*8+0x4cd9c5b4]
  4226f9:	(bad)  
  4226fa:	dec    esi
  4226fb:	add    ch,al
  4226fd:	jns    0x4226c7
  4226ff:	jnp    0x4226f1
  422701:	push   ds
  422702:	aaa    
  422703:	inc    ecx
  422704:	xlat   BYTE PTR ds:[ebx]
  422705:	jmp    0x22f7:0x2e75c0f
  42270c:	lock pop esi
  42270e:	lock sbb BYTE PTR [ecx],al
  422711:	rcl    BYTE PTR [esi],1
  422713:	sahf   
  422714:	loopne 0x4226f8
  422716:	inc    edi
  422717:	scas   eax,DWORD PTR es:[edi]
  422718:	out    dx,al
  422719:	mov    bl,ch
  42271b:	sub    ebx,0x8d312325
  422721:	dec    edi
  422722:	sbb    ecx,DWORD PTR [edi+0x25]
  422725:	outs   dx,BYTE PTR ds:[esi]
  422726:	lahf   
  422727:	mov    WORD PTR ds:0x6be053da,?
  42272d:	xor    al,0xf1
  42272f:	aad    0x29
  422731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422732:	fisttp DWORD PTR [ebx-0x7b]
  422735:	aas    
  422736:	pop    ss
  422737:	adc    BYTE PTR [esi+0x43778b7c],0x1c
  42273e:	or     DWORD PTR [esi],ebx
  422740:	popa   
  422741:	call   DWORD PTR [ecx+edx*1]
  422744:	cmp    ah,BYTE PTR [ecx-0x6de53d6d]
  42274a:	in     eax,dx
  42274b:	test   eax,0x91ca8963
  422750:	es push ss
  422752:	xor    al,0x90
  422754:	pop    esi
  422755:	push   ds
  422756:	icebp  
  422757:	sbb    eax,0x812fbbab
  42275c:	dec    esi
  42275d:	int3   
  42275e:	or     dl,BYTE PTR [ebx+0x6baa15f6]
  422764:	fs pop edx
  422766:	add    ch,BYTE PTR [esp+esi*2]
  422769:	or     ah,ch
  42276b:	arpl   dx,si
  42276d:	xor    eax,0x584a4e6e
  422772:	out    0x3e,eax
  422774:	rcl    BYTE PTR [edi-0x1d],0x3a
  422778:	inc    edi
  422779:	popf   
  42277a:	fwait
  42277b:	xchg   ebx,eax
  42277c:	lds    ecx,FWORD PTR [edx+0x24]
  42277f:	retf   0xf9f4
  422782:	mov    al,0xf6
  422784:	jno    0x422793
  422786:	call   FWORD PTR [ebx-0x42b420cf]
  42278c:	mov    ch,0xc1
  42278e:	retf   0xe39d
  422791:	icebp  
  422792:	mov    al,ds:0x752e56c8
  422797:	fs lahf 
  422799:	jns    0x4227e7
  42279b:	mov    edi,0xc0f588fb
  4227a0:	popf   
  4227a1:	push   esi
  4227a2:	push   ecx
  4227a3:	loope  0x42276b
  4227a5:	in     eax,dx
  4227a6:	inc    ebp
  4227a7:	and    ch,al
  4227a9:	push   esi
  4227aa:	(bad)  
  4227ab:	(bad)  
  4227ac:	(bad)  
  4227ad:	fstp   DWORD PTR [edx+0x79a70c86]
  4227b3:	es jbe 0x42276a
  4227b6:	pop    edi
  4227b7:	adc    BYTE PTR [edx+0x4663a42],cl
  4227bd:	sahf   
  4227be:	and    DWORD PTR [ebx+0x20],edi
  4227c1:	pop    ecx
  4227c2:	mov    al,ds:0xb15f33c0
  4227c7:	and    al,0xd5
  4227c9:	push   0x5f
  4227cb:	ss scas al,BYTE PTR es:[edi]
  4227cd:	mov    dh,0x62
  4227cf:	repnz cmp al,0x43
  4227d2:	adc    al,0xf2
  4227d4:	add    eax,0x66fc7955
  4227d9:	push   esp
  4227db:	lods   eax,DWORD PTR ds:[esi]
  4227dc:	xchg   sp,ax
  4227de:	sub    ebx,0xfffffff8
  4227e1:	push   ss
  4227e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e3:	das    
  4227e4:	fbstp  TBYTE PTR [ebx+0x7dc5cd8c]
  4227ea:	sub    DWORD PTR [ebp-0x79],edi
  4227ed:	(bad)  
  4227ee:	adc    ch,al
  4227f0:	ins    DWORD PTR es:[edi],dx
  4227f1:	jns    0x42282d
  4227f3:	add    DWORD PTR [eax],0xa59c3dd2
  4227f9:	sub    al,0xf2
  4227fb:	(bad)  
  4227fc:	js     0x4227d4
  4227fe:	sahf   
  4227ff:	xchg   BYTE PTR [edi+0x11],ah
  422802:	push   0x19
  422804:	scas   eax,DWORD PTR es:[edi]
  422805:	dec    edx
  422806:	fld    DWORD PTR [ebp+0x7b]
  422809:	arpl   WORD PTR [esi+0x4c20fa0c],cx
  42280f:	fiadd  DWORD PTR [ecx+ebp*2-0x6c420824]
  422816:	push   esi
  422817:	out    dx,eax
  422818:	inc    eax
  422819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42281a:	outs   dx,DWORD PTR ds:[esi]
  42281b:	jmp    0x422854
  42281d:	xor    eax,0x4f1d29e1
  422822:	(bad)  
  422823:	sbb    ch,BYTE PTR [ecx+0x283822d9]
  422829:	mov    DWORD PTR [eax],ebx
  42282b:	add    edi,DWORD PTR [ebx]
  42282d:	aaa    
  42282e:	push   0x940ca3d
  422833:	pop    esi
  422834:	out    dx,al
  422835:	and    eax,0x9a40001d
  42283a:	and    DWORD PTR [edi-0x2badbe7c],ebp
  422840:	or     DWORD PTR [eax-0x6ec8c695],edi
  422846:	sti    
  422847:	hlt    
  422848:	push   esp
  422849:	inc    esi
  42284a:	push   ebx
  42284b:	call   0x8ece0073
  422850:	mov    BYTE PTR [ebp-0x63],cl
  422853:	lea    esi,[eax+0x279a099]
  422859:	fcomp  QWORD PTR [edi-0x30]
  42285c:	aam    0x5e
  42285e:	cmp    ebp,ecx
  422860:	fmul   st,st(4)
  422862:	ja     0x422883
  422864:	in     eax,dx
  422865:	(bad)  
  422866:	lock das 
  422868:	and    eax,0xfd081384
  42286d:	cmc    
  42286e:	and    bh,BYTE PTR [ebp+0x29]
  422871:	cmp    BYTE PTR [ebp-0x437bc56f],bh
  422877:	xor    eax,0x11f58d5c
  42287c:	jno    0x422848
  42287e:	jns    0x4228d2
  422880:	out    0x9e,al
  422882:	jbe    0x422834
  422884:	aaa    
  422885:	xchg   DWORD PTR [edi-0x15bb90df],edi
  42288b:	fucom  st(0)
  42288d:	loope  0x42287f
  42288f:	jae    0x4228a5
  422891:	bound  eax,QWORD PTR [ebx+0x3f]
  422894:	inc    esp
  422895:	mov    ch,0x34
  422897:	dec    eax
  422898:	pusha  
  422899:	enter  0x1bb4,0xcc
  42289d:	xchg   ebx,eax
  42289e:	mov    dl,0xf0
  4228a0:	mov    eax,ds:0x959e6095
  4228a5:	out    0xdf,al
  4228a7:	xchg   BYTE PTR [ebp-0x7e8bd689],bh
  4228ad:	inc    ebp
  4228ae:	sbb    edi,DWORD PTR [edx-0x732f3a41]
  4228b4:	sahf   
  4228b5:	loop   0x422936
  4228b7:	sar    BYTE PTR [ecx-0x408eb9c6],cl
  4228bd:	jg     0x4228ef
  4228bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228c0:	pop    ecx
  4228c1:	and    DWORD PTR [esp+eax*2+0x59d834c1],edi
  4228c8:	out    0x4,al
  4228ca:	stos   BYTE PTR es:[edi],al
  4228cb:	jns    0x4228dc
  4228cd:	loope  0x422929
  4228cf:	aaa    
  4228d0:	shl    BYTE PTR [ebx],cl
  4228d2:	jno    0x422918
  4228d4:	cmovg  esi,ecx
  4228d7:	stos   BYTE PTR es:[edi],al
  4228d8:	(bad)  
  4228da:	sub    DWORD PTR [esi+0x5dc3c8c6],esi
  4228e0:	xor    DWORD PTR [edi-0x72],edx
  4228e3:	dec    esi
  4228e4:	push   0x8e888c72
  4228e9:	in     eax,0xb
  4228eb:	jge    0x422923
  4228ed:	push   esp
  4228ee:	push   ss
  4228ef:	icebp  
  4228f0:	push   edx
  4228f1:	loop   0x4228fa
  4228f3:	push   0x2f
  4228f5:	dec    ecx
  4228f6:	data16 mov bl,cl
  4228f9:	bsf    eax,edx
  4228fc:	or     eax,0xe7f93d95
  422901:	push   es
  422902:	mov    dh,0xac
  422904:	sbb    ch,BYTE PTR [esi-0x27]
  422907:	out    dx,al
  422908:	les    edi,FWORD PTR [edi+0x5b]
  42290b:	fsqrt  
  42290d:	out    0x60,al
  42290f:	daa    
  422910:	mov    esp,0x8dcecb1
  422915:	add    eax,0x78b23f96
  42291a:	mov    cl,0x21
  42291c:	ja     0x422911
  42291e:	out    dx,eax
  42291f:	jecxz  0x4228cd
  422921:	mov    al,0xab
  422923:	xlat   BYTE PTR ds:[ebx]
  422924:	in     eax,0x9d
  422926:	mov    ecx,0x77ce2bc8
  42292b:	jl     0x422993
  42292d:	inc    edx
  42292e:	shl    BYTE PTR [edx-0x25],0x6c
  422932:	and    eax,DWORD PTR [ecx+0x36dc869d]
  422938:	ja     0x42298c
  42293a:	call   0x54d4:0x4c60fb14
  422941:	ja     0x4228d0
  422943:	push   esp
  422944:	lea    esp,[edx-0x17867ac3]
  42294a:	push   0xffffffdd
  42294c:	push   0xffffffdd
  42294e:	pushf  
  42294f:	dec    esi
  422950:	inc    ebx
  422951:	sbb    DWORD PTR [edi+0x2b],ebp
  422954:	pop    ss
  422955:	fld    TBYTE PTR [ebx+0x223bd7fe]
  42295b:	sbb    DWORD PTR [esi],ebp
  42295d:	rcl    BYTE PTR [edx],1
  42295f:	das    
  422960:	dec    esp
  422961:	sar    DWORD PTR [esi],cl
  422963:	shl    BYTE PTR [esi+0x7c],cl
  422966:	xor    DWORD PTR [esi],ecx
  422968:	mov    ds:0xfa805384,eax
  42296d:	adc    cl,BYTE PTR [ebp-0x2ec538ad]
  422973:	push   cs
  422974:	gs dec ecx
  422976:	fnstenv [ebx]
  422978:	mov    al,ds:0xd3f03f2f
  42297d:	call   0xd2f6:0x7d613dcc
  422984:	sub    bl,bl
  422986:	out    dx,al
  422987:	mov    dh,0x58
  422989:	call   0xa645:0xc664de35
  422990:	hlt    
  422991:	push   edx
  422992:	addr16 mov bl,ch
  422995:	ja     0x422998
  422997:	and    edx,edi
  422999:	xchg   ecx,eax
  42299a:	shl    BYTE PTR [esi],1
  42299c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42299d:	ds nop
  42299f:	sahf   
  4229a0:	cmc    
  4229a1:	mov    cl,BYTE PTR [edi+ebx*2+0x25463bf7]
  4229a8:	lods   al,BYTE PTR ds:[esi]
  4229a9:	pop    esi
  4229aa:	popf   
  4229ab:	push   cs
  4229ac:	xchg   ebp,eax
  4229ad:	sbb    bh,BYTE PTR [edx]
  4229af:	test   al,0x31
  4229b1:	sub    BYTE PTR [edi+eiz*4],dl
  4229b4:	cld    
  4229b5:	xchg   ebx,eax
  4229b6:	test   al,0xc9
  4229b8:	or     eax,0x74abc49c
  4229bd:	rcl    dh,cl
  4229bf:	or     DWORD PTR [esp+edx*2-0x2e1b123b],ebp
  4229c6:	push   ecx
  4229c7:	xchg   edi,eax
  4229c8:	in     eax,dx
  4229c9:	cmp    ecx,edx
  4229cb:	pop    edx
  4229cc:	icebp  
  4229cd:	ds sbb ebx,ecx
  4229d0:	mov    ds:0x88daf35e,al
  4229d5:	retf   
  4229d6:	mov    edi,ecx
  4229d8:	push   0x4
  4229da:	push   0x1000
  4229df:	push   0x4cf
  4229e4:	push   0x1000
  4229e9:	call   DWORD PTR ds:0x42802c
  4229ef:	push   0x0
  4229f1:	call   esi
  4229f3:	xor    eax,eax
  4229f5:	pop    esi
  4229f6:	add    esp,0x10
  4229f9:	ret    0x10
  4229fc:	nop
  4229fd:	nop
  4229fe:	nop
  4229ff:	nop
  422a00:	jmp    DWORD PTR ds:0x428110
  422a06:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a0d:	jne    0x422a14
  422a0f:	call   0x422f52
  422a14:	push   DWORD PTR [esp+0x4]
  422a18:	call   0x422ddb
  422a1d:	push   0xff
  422a22:	call   DWORD PTR ds:0x45f294
  422a28:	pop    ecx
  422a29:	pop    ecx
  422a2a:	ret    
  422a2b:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a32:	jne    0x422a39
  422a34:	call   0x422f52
  422a39:	push   DWORD PTR [esp+0x4]
  422a3d:	call   0x422ddb
  422a42:	push   0xff
  422a47:	call   0x422c21
  422a4c:	pop    ecx
  422a4d:	pop    ecx
  422a4e:	ret    
  422a4f:	push   0x60
  422a51:	push   0x428150
  422a56:	call   0x423940
  422a5b:	mov    edi,0x94
  422a60:	mov    eax,edi
  422a62:	call   0x423990
  422a67:	mov    DWORD PTR [ebp-0x18],esp
  422a6a:	mov    esi,esp
  422a6c:	mov    DWORD PTR [esi],edi
  422a6e:	push   esi
  422a6f:	call   DWORD PTR ds:0x42805c
  422a75:	mov    ecx,DWORD PTR [esi+0x10]
  422a78:	mov    DWORD PTR ds:0x45fba4,ecx
  422a7e:	mov    eax,DWORD PTR [esi+0x4]
  422a81:	mov    ds:0x45fbb0,eax
  422a86:	mov    edx,DWORD PTR [esi+0x8]
  422a89:	mov    DWORD PTR ds:0x45fbb4,edx
  422a8f:	mov    esi,DWORD PTR [esi+0xc]
  422a92:	and    esi,0x7fff
  422a98:	mov    DWORD PTR ds:0x45fba8,esi
  422a9e:	cmp    ecx,0x2
  422aa1:	je     0x422aaf
  422aa3:	or     esi,0x8000
  422aa9:	mov    DWORD PTR ds:0x45fba8,esi
  422aaf:	shl    eax,0x8
  422ab2:	add    eax,edx
  422ab4:	mov    ds:0x45fbac,eax
  422ab9:	xor    esi,esi
  422abb:	push   esi
  422abc:	mov    edi,DWORD PTR ds:0x428014
  422ac2:	call   edi
  422ac4:	cmp    WORD PTR [eax],0x5a4d
  422ac9:	jne    0x422aea
  422acb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ace:	add    ecx,eax
  422ad0:	cmp    DWORD PTR [ecx],0x4550
  422ad6:	jne    0x422aea
  422ad8:	movzx  eax,WORD PTR [ecx+0x18]
  422adc:	cmp    eax,0x10b
  422ae1:	je     0x422b02
  422ae3:	cmp    eax,0x20b
  422ae8:	je     0x422aef
  422aea:	mov    DWORD PTR [ebp-0x1c],esi
  422aed:	jmp    0x422b16
  422aef:	cmp    DWORD PTR [ecx+0x84],0xe
  422af6:	jbe    0x422aea
  422af8:	xor    eax,eax
  422afa:	cmp    DWORD PTR [ecx+0xf8],esi
  422b00:	jmp    0x422b10
  422b02:	cmp    DWORD PTR [ecx+0x74],0xe
  422b06:	jbe    0x422aea
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b10:	setne  al
  422b13:	mov    DWORD PTR [ebp-0x1c],eax
  422b16:	push   0x1
  422b18:	call   0x4238ed
  422b1d:	pop    ecx
  422b1e:	test   eax,eax
  422b20:	jne    0x422b2a
  422b22:	push   0x1c
  422b24:	call   0x422a2b
  422b29:	pop    ecx
  422b2a:	call   0x423864
  422b2f:	test   eax,eax
  422b31:	jne    0x422b3b
  422b33:	push   0x10
  422b35:	call   0x422a2b
  422b3a:	pop    ecx
  422b3b:	call   0x42374d
  422b40:	mov    DWORD PTR [ebp-0x4],esi
  422b43:	call   0x42354f
  422b48:	test   eax,eax
  422b4a:	jge    0x422b54
  422b4c:	push   0x1b
  422b4e:	call   0x422a06
  422b53:	pop    ecx
  422b54:	call   DWORD PTR ds:0x42800c
  422b5a:	mov    ds:0x460354,eax
  422b5f:	call   0x42342d
  422b64:	mov    ds:0x45fb94,eax
  422b69:	call   0x42338b
  422b6e:	test   eax,eax
  422b70:	jge    0x422b7a
  422b72:	push   0x8
  422b74:	call   0x422a06
  422b79:	pop    ecx
  422b7a:	call   0x423158
  422b7f:	test   eax,eax
  422b81:	jge    0x422b8b
  422b83:	push   0x9
  422b85:	call   0x422a06
  422b8a:	pop    ecx
  422b8b:	call   0x422c63
  422b90:	mov    DWORD PTR [ebp-0x20],eax
  422b93:	cmp    eax,esi
  422b95:	je     0x422b9e
  422b97:	push   eax
  422b98:	call   0x422a06
  422b9d:	pop    ecx
  422b9e:	mov    DWORD PTR [ebp-0x38],esi
  422ba1:	lea    eax,[ebp-0x64]
  422ba4:	push   eax
  422ba5:	call   DWORD PTR ds:0x428058
  422bab:	call   0x4230ef
  422bb0:	mov    DWORD PTR [ebp-0x68],eax
  422bb3:	test   BYTE PTR [ebp-0x38],0x1
  422bb7:	je     0x422bbf
  422bb9:	movzx  eax,WORD PTR [ebp-0x34]
  422bbd:	jmp    0x422bc2
  422bbf:	push   0xa
  422bc1:	pop    eax
  422bc2:	push   eax
  422bc3:	push   DWORD PTR [ebp-0x68]
  422bc6:	push   esi
  422bc7:	push   esi
  422bc8:	call   edi
  422bca:	push   eax
  422bcb:	call   0x421850
  422bd0:	mov    edi,eax
  422bd2:	mov    DWORD PTR [ebp-0x6c],edi
  422bd5:	cmp    DWORD PTR [ebp-0x1c],esi
  422bd8:	jne    0x422be0
  422bda:	push   edi
  422bdb:	call   0x422d9b
  422be0:	call   0x422dbd
  422be5:	jmp    0x422c12
  422be7:	mov    eax,DWORD PTR [ebp-0x14]
  422bea:	mov    ecx,DWORD PTR [eax]
  422bec:	mov    ecx,DWORD PTR [ecx]
  422bee:	mov    DWORD PTR [ebp-0x70],ecx
  422bf1:	push   eax
  422bf2:	push   ecx
  422bf3:	call   0x422f8b
  422bf8:	pop    ecx
  422bf9:	pop    ecx
  422bfa:	ret    
  422bfb:	mov    esp,DWORD PTR [ebp-0x18]
  422bfe:	mov    edi,DWORD PTR [ebp-0x70]
  422c01:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c05:	jne    0x422c0d
  422c07:	push   edi
  422c08:	call   0x422dac
  422c0d:	call   0x422dcc
  422c12:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c16:	mov    eax,edi
  422c18:	lea    esp,[ebp-0x7c]
  422c1b:	call   0x42397b
  422c20:	ret    
  422c21:	push   0x42816c
  422c26:	call   DWORD PTR ds:0x428014
  422c2c:	test   eax,eax
  422c2e:	je     0x422c46
  422c30:	push   0x42815c
  422c35:	push   eax
  422c36:	call   DWORD PTR ds:0x428010
  422c3c:	test   eax,eax
  422c3e:	je     0x422c46
  422c40:	push   DWORD PTR [esp+0x4]
  422c44:	call   eax
  422c46:	push   DWORD PTR [esp+0x4]
  422c4a:	call   DWORD PTR ds:0x428060
  422c50:	int3   
  422c51:	push   0x8
  422c53:	call   0x423aff
  422c58:	pop    ecx
  422c59:	ret    
  422c5a:	push   0x8
  422c5c:	call   0x423a6b
  422c61:	pop    ecx
  422c62:	ret    
  422c63:	mov    eax,ds:0x460350
  422c68:	test   eax,eax
  422c6a:	je     0x422c6e
  422c6c:	call   eax
  422c6e:	push   esi
  422c6f:	push   edi
  422c70:	mov    ecx,0x42a00c
  422c75:	mov    edi,0x42a018
  422c7a:	xor    eax,eax
  422c7c:	cmp    ecx,edi
  422c7e:	mov    esi,ecx
  422c80:	jae    0x422c99
  422c82:	test   eax,eax
  422c84:	jne    0x422cc5
  422c86:	mov    ecx,DWORD PTR [esi]
  422c88:	test   ecx,ecx
  422c8a:	je     0x422c8e
  422c8c:	call   ecx
  422c8e:	add    esi,0x4
  422c91:	cmp    esi,edi
  422c93:	jb     0x422c82
  422c95:	test   eax,eax
  422c97:	jne    0x422cc5
  422c99:	push   0x423791
  422c9e:	call   0x423c10
  422ca3:	mov    esi,0x42a000
  422ca8:	mov    eax,esi
  422caa:	mov    edi,0x42a008
  422caf:	cmp    eax,edi
  422cb1:	pop    ecx
  422cb2:	jae    0x422cc3
  422cb4:	mov    eax,DWORD PTR [esi]
  422cb6:	test   eax,eax
  422cb8:	je     0x422cbc
  422cba:	call   eax
  422cbc:	add    esi,0x4
  422cbf:	cmp    esi,edi
  422cc1:	jb     0x422cb4
  422cc3:	xor    eax,eax
  422cc5:	pop    edi
  422cc6:	pop    esi
  422cc7:	ret    
  422cc8:	push   ebp
  422cc9:	mov    ebp,esp
  422ccb:	push   esi
  422ccc:	push   edi
  422ccd:	push   0x8
  422ccf:	call   0x423aff
  422cd4:	xor    esi,esi
  422cd6:	inc    esi
  422cd7:	cmp    DWORD PTR ds:0x45fbe4,esi
  422cdd:	pop    ecx
  422cde:	jne    0x422cf0
  422ce0:	push   DWORD PTR [ebp+0x8]
  422ce3:	call   DWORD PTR ds:0x428068
  422ce9:	push   eax
  422cea:	call   DWORD PTR ds:0x428064
  422cf0:	cmp    DWORD PTR [ebp+0xc],0x0
  422cf4:	mov    al,BYTE PTR [ebp+0x10]
  422cf7:	mov    DWORD PTR ds:0x45fbe0,esi
  422cfd:	mov    ds:0x45fbdc,al
  422d02:	jne    0x422d56
  422d04:	mov    ecx,DWORD PTR ds:0x460348
  422d0a:	test   ecx,ecx
  422d0c:	je     0x422d37
  422d0e:	mov    eax,ds:0x460344
  422d13:	sub    eax,0x4
  422d16:	cmp    eax,ecx
  422d18:	jmp    0x422d30
  422d1a:	mov    eax,DWORD PTR [eax]
  422d1c:	test   eax,eax
  422d1e:	je     0x422d22
  422d20:	call   eax
  422d22:	mov    eax,ds:0x460344
  422d27:	sub    eax,0x4
  422d2a:	cmp    eax,DWORD PTR ds:0x460348
  422d30:	mov    ds:0x460344,eax
  422d35:	jae    0x422d1a
  422d37:	mov    eax,0x42a01c
  422d3c:	mov    esi,0x42a020
  422d41:	cmp    eax,esi
  422d43:	mov    edi,eax
  422d45:	jae    0x422d56
  422d47:	mov    eax,DWORD PTR [edi]
  422d49:	test   eax,eax
  422d4b:	je     0x422d4f
  422d4d:	call   eax
  422d4f:	add    edi,0x4
  422d52:	cmp    edi,esi
  422d54:	jb     0x422d47
  422d56:	mov    eax,0x42a024
  422d5b:	mov    esi,0x42a028
  422d60:	cmp    eax,esi
  422d62:	mov    edi,eax
  422d64:	jae    0x422d75
  422d66:	mov    eax,DWORD PTR [edi]
  422d68:	test   eax,eax
  422d6a:	je     0x422d6e
  422d6c:	call   eax
  422d6e:	add    edi,0x4
  422d71:	cmp    edi,esi
  422d73:	jb     0x422d66
  422d75:	cmp    DWORD PTR [ebp+0x10],0x0
  422d79:	pop    edi
  422d7a:	pop    esi
  422d7b:	je     0x422d86
  422d7d:	push   0x8
  422d7f:	call   0x423a6b
  422d84:	jmp    0x422d98
  422d86:	push   DWORD PTR [ebp+0x8]
  422d89:	mov    DWORD PTR ds:0x45fbe4,0x1
  422d93:	call   0x422c21
  422d98:	pop    ecx
  422d99:	pop    ebp
  422d9a:	ret    
  422d9b:	push   0x0
  422d9d:	push   0x0
  422d9f:	push   DWORD PTR [esp+0xc]
  422da3:	call   0x422cc8
  422da8:	add    esp,0xc
  422dab:	ret    
  422dac:	push   0x0
  422dae:	push   0x1
  422db0:	push   DWORD PTR [esp+0xc]
  422db4:	call   0x422cc8
  422db9:	add    esp,0xc
  422dbc:	ret    
  422dbd:	push   0x1
  422dbf:	push   0x0
  422dc1:	push   0x0
  422dc3:	call   0x422cc8
  422dc8:	add    esp,0xc
  422dcb:	ret    
  422dcc:	push   0x1
  422dce:	push   0x1
  422dd0:	push   0x0
  422dd2:	call   0x422cc8
  422dd7:	add    esp,0xc
  422dda:	ret    
  422ddb:	push   ebp
  422ddc:	mov    ebp,esp
  422dde:	sub    esp,0x10c
  422de4:	mov    eax,ds:0x45f510
  422de9:	xor    eax,DWORD PTR [ebp+0x4]
  422dec:	mov    ecx,DWORD PTR [ebp+0x8]
  422def:	push   ebx
  422df0:	push   esi
  422df1:	mov    DWORD PTR [ebp-0x4],eax
  422df4:	xor    edx,edx
  422df6:	push   edi
  422df7:	xor    eax,eax
  422df9:	cmp    ecx,DWORD PTR [eax*8+0x45f2a0]
  422e00:	je     0x422e08
  422e02:	inc    eax
  422e03:	cmp    eax,0x12
  422e06:	jb     0x422df9
  422e08:	mov    esi,eax
  422e0a:	shl    esi,0x3
  422e0d:	cmp    ecx,DWORD PTR [esi+0x45f2a0]
  422e13:	jne    0x422f3c
  422e19:	mov    eax,ds:0x45fb9c
  422e1e:	cmp    eax,0x1
  422e21:	je     0x422f17
  422e27:	cmp    eax,edx
  422e29:	jne    0x422e38
  422e2b:	cmp    DWORD PTR ds:0x45f298,0x1
  422e32:	je     0x422f17
  422e38:	cmp    ecx,0xfc
  422e3e:	je     0x422f3c
  422e44:	push   0x104
  422e49:	lea    eax,[ebp-0x10c]
  422e4f:	push   eax
  422e50:	push   edx
  422e51:	mov    BYTE PTR [ebp-0x8],dl
  422e54:	call   DWORD PTR ds:0x428074
  422e5a:	test   eax,eax
  422e5c:	jne    0x422e71
  422e5e:	lea    eax,[ebp-0x10c]
  422e64:	push   0x4284c4
  422e69:	push   eax
  422e6a:	call   0x423d20
  422e6f:	pop    ecx
  422e70:	pop    ecx
  422e71:	lea    eax,[ebp-0x10c]
  422e77:	push   eax
  422e78:	lea    edi,[ebp-0x10c]
  422e7e:	call   0x423f50
  422e83:	inc    eax
  422e84:	cmp    eax,0x3c
  422e87:	pop    ecx
  422e88:	jbe    0x422eb3
  422e8a:	lea    eax,[ebp-0x10c]
  422e90:	push   eax
  422e91:	call   0x423f50
  422e96:	mov    edi,eax
  422e98:	lea    eax,[ebp-0x10c]
  422e9e:	sub    eax,0x3b
  422ea1:	push   0x3
  422ea3:	add    edi,eax
  422ea5:	push   0x4284c0
  422eaa:	push   edi
  422eab:	call   0x423e20
  422eb0:	add    esp,0x10
  422eb3:	push   edi
  422eb4:	call   0x423f50
  422eb9:	push   DWORD PTR [esi+0x45f2a4]
  422ebf:	mov    ebx,eax
  422ec1:	call   0x423f50
  422ec6:	lea    eax,[ebx+eax*1+0x1c]
  422eca:	pop    ecx
  422ecb:	add    eax,0x3
  422ece:	pop    ecx
  422ecf:	and    eax,0xfffffffc
  422ed2:	call   0x423990
  422ed7:	mov    ebx,esp
  422ed9:	push   0x4284a4
  422ede:	push   ebx
  422edf:	call   0x423d20
  422ee4:	push   edi
  422ee5:	push   ebx
  422ee6:	call   0x423d30
  422eeb:	push   0x4284a0
  422ef0:	push   ebx
  422ef1:	call   0x423d30
  422ef6:	push   DWORD PTR [esi+0x45f2a4]
  422efc:	push   ebx
  422efd:	call   0x423d30
  422f02:	push   0x12010
  422f07:	push   0x428478
  422f0c:	push   ebx
  422f0d:	call   0x423c22
  422f12:	add    esp,0x2c
  422f15:	jmp    0x422f3c
  422f17:	push   edx
  422f18:	lea    eax,[ebp+0x8]
  422f1b:	push   eax
  422f1c:	lea    esi,[esi+0x45f2a4]
  422f22:	push   DWORD PTR [esi]
  422f24:	call   0x423f50
  422f29:	pop    ecx
  422f2a:	push   eax
  422f2b:	push   DWORD PTR [esi]
  422f2d:	push   0xfffffff4
  422f2f:	call   DWORD PTR ds:0x428070
  422f35:	push   eax
  422f36:	call   DWORD PTR ds:0x42806c
  422f3c:	lea    esp,[ebp-0x118]
  422f42:	mov    ecx,DWORD PTR [ebp-0x4]
  422f45:	xor    ecx,DWORD PTR [ebp+0x4]
  422f48:	call   0x42400c
  422f4d:	pop    edi
  422f4e:	pop    esi
  422f4f:	pop    ebx
  422f50:	leave  
  422f51:	ret    
  422f52:	mov    eax,ds:0x45fb9c
  422f57:	cmp    eax,0x1
  422f5a:	je     0x422f69
  422f5c:	test   eax,eax
  422f5e:	jne    0x422f8a
  422f60:	cmp    DWORD PTR ds:0x45f298,0x1
  422f67:	jne    0x422f8a
  422f69:	push   0xfc
  422f6e:	call   0x422ddb
  422f73:	mov    eax,ds:0x45fbe8
  422f78:	test   eax,eax
  422f7a:	pop    ecx
  422f7b:	je     0x422f7f
  422f7d:	call   eax
  422f7f:	push   0xff
  422f84:	call   0x422ddb
  422f89:	pop    ecx
  422f8a:	ret    
  422f8b:	push   ebp
  422f8c:	mov    ebp,esp
  422f8e:	push   ecx
  422f8f:	push   ebx
  422f90:	push   esi
  422f91:	push   edi
  422f92:	call   0x4237f3
  422f97:	mov    edi,DWORD PTR [ebp+0x8]
  422f9a:	mov    esi,eax
  422f9c:	mov    edx,DWORD PTR [esi+0x54]
  422f9f:	mov    eax,ds:0x45f3b4
  422fa4:	mov    ecx,edx
  422fa6:	cmp    DWORD PTR [ecx],edi
  422fa8:	je     0x422fb7
  422faa:	lea    ebx,[eax+eax*2]
  422fad:	add    ecx,0xc
  422fb0:	lea    ebx,[edx+ebx*4]
  422fb3:	cmp    ecx,ebx
  422fb5:	jb     0x422fa6
  422fb7:	lea    eax,[eax+eax*2]
  422fba:	lea    eax,[edx+eax*4]
  422fbd:	cmp    ecx,eax
  422fbf:	jae    0x422fc5
  422fc1:	cmp    DWORD PTR [ecx],edi
  422fc3:	je     0x422fc7
  422fc5:	xor    ecx,ecx
  422fc7:	test   ecx,ecx
  422fc9:	je     0x4230e1
  422fcf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fd2:	test   ebx,ebx
  422fd4:	mov    DWORD PTR [ebp+0x8],ebx
  422fd7:	je     0x4230e1
  422fdd:	cmp    ebx,0x5
  422fe0:	jne    0x422fee
  422fe2:	and    DWORD PTR [ecx+0x8],0x0
  422fe6:	xor    eax,eax
  422fe8:	inc    eax
  422fe9:	jmp    0x4230ea
  422fee:	cmp    ebx,0x1
  422ff1:	je     0x4230dc
  422ff7:	mov    eax,DWORD PTR [esi+0x58]
  422ffa:	mov    DWORD PTR [ebp-0x4],eax
  422ffd:	mov    eax,DWORD PTR [ebp+0xc]
  423000:	mov    DWORD PTR [esi+0x58],eax
  423003:	mov    eax,DWORD PTR [ecx+0x4]
  423006:	cmp    eax,0x8
  423009:	jne    0x4230ce
  42300f:	mov    edx,DWORD PTR ds:0x45f3a8
  423015:	mov    eax,ds:0x45f3ac
  42301a:	add    eax,edx
  42301c:	cmp    edx,eax
  42301e:	jge    0x423047
  423020:	lea    eax,[edx+edx*2]
  423023:	shl    eax,0x2
  423026:	mov    edi,DWORD PTR [esi+0x54]
  423029:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42302e:	mov    edi,DWORD PTR ds:0x45f3a8
  423034:	mov    ebx,DWORD PTR ds:0x45f3ac
  42303a:	inc    edx
  42303b:	add    ebx,edi
  42303d:	add    eax,0xc
  423040:	cmp    edx,ebx
  423042:	jl     0x423026
  423044:	mov    ebx,DWORD PTR [ebp+0x8]
  423047:	mov    ecx,DWORD PTR [ecx]
  423049:	cmp    ecx,0xc000008e
  42304f:	mov    edi,DWORD PTR [esi+0x5c]
  423052:	jne    0x42305d
  423054:	mov    DWORD PTR [esi+0x5c],0x83
  42305b:	jmp    0x4230c1
  42305d:	cmp    ecx,0xc0000090
  423063:	jne    0x42306e
  423065:	mov    DWORD PTR [esi+0x5c],0x81
  42306c:	jmp    0x4230c1
  42306e:	cmp    ecx,0xc0000091
  423074:	jne    0x42307f
  423076:	mov    DWORD PTR [esi+0x5c],0x84
  42307d:	jmp    0x4230c1
  42307f:	cmp    ecx,0xc0000093
  423085:	jne    0x423090
  423087:	mov    DWORD PTR [esi+0x5c],0x85
  42308e:	jmp    0x4230c1
  423090:	cmp    ecx,0xc000008d
  423096:	jne    0x4230a1
  423098:	mov    DWORD PTR [esi+0x5c],0x82
  42309f:	jmp    0x4230c1
  4230a1:	cmp    ecx,0xc000008f
  4230a7:	jne    0x4230b2
  4230a9:	mov    DWORD PTR [esi+0x5c],0x86
  4230b0:	jmp    0x4230c1
  4230b2:	cmp    ecx,0xc0000092
  4230b8:	jne    0x4230c1
  4230ba:	mov    DWORD PTR [esi+0x5c],0x8a
  4230c1:	push   DWORD PTR [esi+0x5c]
  4230c4:	push   0x8
  4230c6:	call   ebx
  4230c8:	pop    ecx
  4230c9:	mov    DWORD PTR [esi+0x5c],edi
  4230cc:	jmp    0x4230d5
  4230ce:	and    DWORD PTR [ecx+0x8],0x0
  4230d2:	push   eax
  4230d3:	call   ebx
  4230d5:	mov    eax,DWORD PTR [ebp-0x4]
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x58],eax
  4230dc:	or     eax,0xffffffff
  4230df:	jmp    0x4230ea
  4230e1:	push   DWORD PTR [ebp+0xc]
  4230e4:	call   DWORD PTR ds:0x428078
  4230ea:	pop    edi
  4230eb:	pop    esi
  4230ec:	pop    ebx
  4230ed:	leave  
  4230ee:	ret    
  4230ef:	cmp    DWORD PTR ds:0x46034c,0x0
  4230f6:	jne    0x4230fd
  4230f8:	call   0x42452c
  4230fd:	push   esi
  4230fe:	mov    esi,DWORD PTR ds:0x460354
  423104:	test   esi,esi
  423106:	jne    0x42310f
  423108:	mov    esi,0x4284db
  42310d:	jmp    0x423154
  42310f:	mov    al,BYTE PTR [esi]
  423111:	cmp    al,0x22
  423113:	jne    0x42313d
  423115:	inc    esi
  423116:	mov    al,BYTE PTR [esi]
  423118:	cmp    al,0x22
  42311a:	je     0x42314d
  42311c:	test   al,al
  42311e:	je     0x423136
  423120:	movzx  eax,al
  423123:	push   eax
  423124:	call   0x42404b
  423129:	test   eax,eax
  42312b:	pop    ecx
  42312c:	je     0x42312f
  42312e:	inc    esi
  42312f:	inc    esi
  423130:	mov    al,BYTE PTR [esi]
  423132:	cmp    al,0x22
  423134:	jne    0x42311c
  423136:	cmp    BYTE PTR [esi],0x22
  423139:	jne    0x42314e
  42313b:	jmp    0x42314d
  42313d:	cmp    al,0x20
  42313f:	jbe    0x42314e
  423141:	inc    esi
  423142:	cmp    BYTE PTR [esi],0x20
  423145:	ja     0x423141
  423147:	jmp    0x42314e
  423149:	cmp    al,0x20
  42314b:	ja     0x423154
  42314d:	inc    esi
  42314e:	mov    al,BYTE PTR [esi]
  423150:	test   al,al
  423152:	jne    0x423149
  423154:	mov    eax,esi
  423156:	pop    esi
  423157:	ret    
  423158:	push   ebx
  423159:	xor    ebx,ebx
  42315b:	cmp    DWORD PTR ds:0x46034c,ebx
  423161:	push   esi
  423162:	push   edi
  423163:	jne    0x42316a
  423165:	call   0x42452c
  42316a:	mov    esi,DWORD PTR ds:0x45fb94
  423170:	xor    edi,edi
  423172:	cmp    esi,ebx
  423174:	jne    0x423188
  423176:	jmp    0x4231a8
  423178:	cmp    al,0x3d
  42317a:	je     0x42317d
  42317c:	inc    edi
  42317d:	push   esi
  42317e:	call   0x423f50
  423183:	pop    ecx
  423184:	lea    esi,[esi+eax*1+0x1]
  423188:	mov    al,BYTE PTR [esi]
  42318a:	cmp    al,bl
  42318c:	jne    0x423178
  42318e:	lea    eax,[edi*4+0x4]
  423195:	push   eax
  423196:	call   0x424662
  42319b:	mov    edi,eax
  42319d:	cmp    edi,ebx
  42319f:	pop    ecx
  4231a0:	mov    DWORD PTR ds:0x45fbc4,edi
  4231a6:	jne    0x4231ad
  4231a8:	or     eax,0xffffffff
  4231ab:	jmp    0x423205
  4231ad:	mov    esi,DWORD PTR ds:0x45fb94
  4231b3:	push   ebp
  4231b4:	jmp    0x4231e0
  4231b6:	push   esi
  4231b7:	call   0x423f50
  4231bc:	mov    ebp,eax
  4231be:	inc    ebp
  4231bf:	cmp    BYTE PTR [esi],0x3d
  4231c2:	pop    ecx
  4231c3:	je     0x4231de
  4231c5:	push   ebp
  4231c6:	call   0x424662
  4231cb:	cmp    eax,ebx
  4231cd:	pop    ecx
  4231ce:	mov    DWORD PTR [edi],eax
  4231d0:	je     0x423209
  4231d2:	push   esi
  4231d3:	push   eax
  4231d4:	call   0x423d20
  4231d9:	pop    ecx
  4231da:	pop    ecx
  4231db:	add    edi,0x4
  4231de:	add    esi,ebp
  4231e0:	cmp    BYTE PTR [esi],bl
  4231e2:	jne    0x4231b6
  4231e4:	push   DWORD PTR ds:0x45fb94
  4231ea:	call   0x42454a
  4231ef:	mov    DWORD PTR ds:0x45fb94,ebx
  4231f5:	mov    DWORD PTR [edi],ebx
  4231f7:	mov    DWORD PTR ds:0x460340,0x1
  423201:	xor    eax,eax
  423203:	pop    ecx
  423204:	pop    ebp
  423205:	pop    edi
  423206:	pop    esi
  423207:	pop    ebx
  423208:	ret    
  423209:	push   DWORD PTR ds:0x45fbc4
  42320f:	call   0x42454a
  423214:	mov    DWORD PTR ds:0x45fbc4,ebx
  42321a:	or     eax,0xffffffff
  42321d:	jmp    0x423203
  42321f:	push   ebp
  423220:	mov    ebp,esp
  423222:	push   ecx
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0xc]
  423227:	xor    edx,edx
  423229:	cmp    DWORD PTR [ebp+0x8],edx
  42322c:	push   edi
  42322d:	mov    DWORD PTR [esi],edx
  42322f:	mov    edi,ecx
  423231:	mov    DWORD PTR [ebx],0x1
  423237:	je     0x423242
  423239:	mov    ecx,DWORD PTR [ebp+0x8]
  42323c:	add    DWORD PTR [ebp+0x8],0x4
  423240:	mov    DWORD PTR [ecx],edi
  423242:	cmp    BYTE PTR [eax],0x22
  423245:	jne    0x423255
  423247:	xor    ecx,ecx
  423249:	test   edx,edx
  42324b:	sete   cl
  42324e:	inc    eax
  42324f:	mov    edx,ecx
  423251:	mov    cl,0x22
  423253:	jmp    0x423282
  423255:	inc    DWORD PTR [esi]
  423257:	test   edi,edi
  423259:	je     0x423260
  42325b:	mov    cl,BYTE PTR [eax]
  42325d:	mov    BYTE PTR [edi],cl
  42325f:	inc    edi
  423260:	mov    cl,BYTE PTR [eax]
  423262:	movzx  ebx,cl
  423265:	inc    eax
  423266:	test   BYTE PTR [ebx+0x460001],0x4
  42326d:	je     0x42327b
  42326f:	inc    DWORD PTR [esi]
  423271:	test   edi,edi
  423273:	je     0x42327a
  423275:	mov    bl,BYTE PTR [eax]
  423277:	mov    BYTE PTR [edi],bl
  423279:	inc    edi
  42327a:	inc    eax
  42327b:	test   cl,cl
  42327d:	mov    ebx,DWORD PTR [ebp+0xc]
  423280:	je     0x4232b4
  423282:	test   edx,edx
  423284:	jne    0x423242
  423286:	cmp    cl,0x20
  423289:	je     0x423290
  42328b:	cmp    cl,0x9
  42328e:	jne    0x423242
  423290:	test   edi,edi
  423292:	je     0x423298
  423294:	and    BYTE PTR [edi-0x1],0x0
  423298:	and    DWORD PTR [ebp-0x4],0x0
  42329c:	cmp    BYTE PTR [eax],0x0
  42329f:	je     0x42337b
  4232a5:	mov    cl,BYTE PTR [eax]
  4232a7:	cmp    cl,0x20
  4232aa:	je     0x4232b1
  4232ac:	cmp    cl,0x9
  4232af:	jne    0x4232b7
  4232b1:	inc    eax
  4232b2:	jmp    0x4232a5
  4232b4:	dec    eax
  4232b5:	jmp    0x423298
  4232b7:	cmp    BYTE PTR [eax],0x0
  4232ba:	je     0x42337b
  4232c0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232c4:	je     0x4232cf
  4232c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232c9:	add    DWORD PTR [ebp+0x8],0x4
  4232cd:	mov    DWORD PTR [ecx],edi
  4232cf:	inc    DWORD PTR [ebx]
  4232d1:	xor    ebx,ebx
  4232d3:	inc    ebx
  4232d4:	xor    edx,edx
  4232d6:	jmp    0x4232da
  4232d8:	inc    eax
  4232d9:	inc    edx
  4232da:	cmp    BYTE PTR [eax],0x5c
  4232dd:	je     0x4232d8
  4232df:	cmp    BYTE PTR [eax],0x22
  4232e2:	jne    0x42330a
  4232e4:	test   dl,0x1
  4232e7:	jne    0x423308
  4232e9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232ed:	je     0x4232fb
  4232ef:	lea    ecx,[eax+0x1]
  4232f2:	cmp    BYTE PTR [ecx],0x22
  4232f5:	jne    0x4232fb
  4232f7:	mov    eax,ecx
  4232f9:	jmp    0x4232fd
  4232fb:	xor    ebx,ebx
  4232fd:	xor    ecx,ecx
  4232ff:	cmp    DWORD PTR [ebp-0x4],ecx
  423302:	sete   cl
  423305:	mov    DWORD PTR [ebp-0x4],ecx
  423308:	shr    edx,1
  42330a:	test   edx,edx
  42330c:	je     0x42331b
  42330e:	test   edi,edi
  423310:	je     0x423316
  423312:	mov    BYTE PTR [edi],0x5c
  423315:	inc    edi
  423316:	inc    DWORD PTR [esi]
  423318:	dec    edx
  423319:	jne    0x42330e
  42331b:	mov    cl,BYTE PTR [eax]
  42331d:	test   cl,cl
  42331f:	je     0x423369
  423321:	cmp    DWORD PTR [ebp-0x4],0x0
  423325:	jne    0x423331
  423327:	cmp    cl,0x20
  42332a:	je     0x423369
  42332c:	cmp    cl,0x9
  42332f:	je     0x423369
  423331:	test   ebx,ebx
  423333:	je     0x423363
  423335:	test   edi,edi
  423337:	je     0x423352
  423339:	movzx  edx,cl
  42333c:	test   BYTE PTR [edx+0x460001],0x4
  423343:	je     0x42334b
  423345:	mov    BYTE PTR [edi],cl
  423347:	inc    edi
  423348:	inc    eax
  423349:	inc    DWORD PTR [esi]
  42334b:	mov    cl,BYTE PTR [eax]
  42334d:	mov    BYTE PTR [edi],cl
  42334f:	inc    edi
  423350:	jmp    0x423361
  423352:	movzx  ecx,cl
  423355:	test   BYTE PTR [ecx+0x460001],0x4
  42335c:	je     0x423361
  42335e:	inc    eax
  42335f:	inc    DWORD PTR [esi]
  423361:	inc    DWORD PTR [esi]
  423363:	inc    eax
  423364:	jmp    0x4232d1
  423369:	test   edi,edi
  42336b:	je     0x423371
  42336d:	and    BYTE PTR [edi],0x0
  423370:	inc    edi
  423371:	inc    DWORD PTR [esi]
  423373:	mov    ebx,DWORD PTR [ebp+0xc]
  423376:	jmp    0x42329c
  42337b:	mov    eax,DWORD PTR [ebp+0x8]
  42337e:	test   eax,eax
  423380:	je     0x423385
  423382:	and    DWORD PTR [eax],0x0
  423385:	inc    DWORD PTR [ebx]
  423387:	pop    edi
  423388:	pop    ebx
  423389:	leave  
  42338a:	ret    
  42338b:	push   ebp
  42338c:	mov    ebp,esp
  42338e:	push   ecx
  42338f:	push   ecx
  423390:	push   ebx
  423391:	push   esi
  423392:	push   edi
  423393:	xor    edi,edi
  423395:	cmp    DWORD PTR ds:0x46034c,edi
  42339b:	jne    0x4233a2
  42339d:	call   0x42452c
  4233a2:	and    BYTE PTR ds:0x45fcf4,0x0
  4233a9:	push   0x104
  4233ae:	mov    esi,0x45fbf0
  4233b3:	push   esi
  4233b4:	push   edi
  4233b5:	call   DWORD PTR ds:0x428074
  4233bb:	mov    eax,ds:0x460354
  4233c0:	cmp    eax,edi
  4233c2:	mov    DWORD PTR ds:0x45fbd4,esi
  4233c8:	je     0x4233d1
  4233ca:	cmp    BYTE PTR [eax],0x0
  4233cd:	mov    ebx,eax
  4233cf:	jne    0x4233d3
  4233d1:	mov    ebx,esi
  4233d3:	lea    eax,[ebp-0x4]
  4233d6:	push   eax
  4233d7:	push   edi
  4233d8:	lea    esi,[ebp-0x8]
  4233db:	xor    ecx,ecx
  4233dd:	mov    eax,ebx
  4233df:	call   0x42321f
  4233e4:	mov    esi,DWORD PTR [ebp-0x4]
  4233e7:	mov    eax,DWORD PTR [ebp-0x8]
  4233ea:	shl    esi,0x2
  4233ed:	add    eax,esi
  4233ef:	push   eax
  4233f0:	call   0x424662
  4233f5:	mov    edi,eax
  4233f7:	add    esp,0xc
  4233fa:	test   edi,edi
  4233fc:	jne    0x423403
  4233fe:	or     eax,0xffffffff
  423401:	jmp    0x423428
  423403:	lea    eax,[ebp-0x4]
  423406:	push   eax
  423407:	lea    ecx,[esi+edi*1]
  42340a:	push   edi
  42340b:	lea    esi,[ebp-0x8]
  42340e:	mov    eax,ebx
  423410:	call   0x42321f
  423415:	mov    eax,DWORD PTR [ebp-0x4]
  423418:	dec    eax
  423419:	pop    ecx
  42341a:	mov    ds:0x45fbb8,eax
  42341f:	pop    ecx
  423420:	mov    DWORD PTR ds:0x45fbbc,edi
  423426:	xor    eax,eax
  423428:	pop    edi
  423429:	pop    esi
  42342a:	pop    ebx
  42342b:	leave  
  42342c:	ret    
  42342d:	push   ecx
  42342e:	push   ecx
  42342f:	mov    eax,ds:0x45fcf8
  423434:	push   ebx
  423435:	push   ebp
  423436:	push   esi
  423437:	push   edi
  423438:	mov    edi,DWORD PTR ds:0x42808c
  42343e:	xor    ebx,ebx
  423440:	xor    esi,esi
  423442:	cmp    eax,ebx
  423444:	push   0x2
  423446:	pop    ebp
  423447:	jne    0x423476
  423449:	call   edi
  42344b:	mov    esi,eax
  42344d:	cmp    esi,ebx
  42344f:	je     0x42345d
  423451:	mov    DWORD PTR ds:0x45fcf8,0x1
  42345b:	jmp    0x42347b
  42345d:	call   DWORD PTR ds:0x428018
  423463:	cmp    eax,0x78
  423466:	jne    0x423471
  423468:	mov    eax,ebp
  42346a:	mov    ds:0x45fcf8,eax
  42346f:	jmp    0x423476
  423471:	mov    eax,ds:0x45fcf8
  423476:	cmp    eax,0x1
  423479:	jne    0x4234f8
  42347b:	cmp    esi,ebx
  42347d:	jne    0x423487
  42347f:	call   edi
  423481:	mov    esi,eax
  423483:	cmp    esi,ebx
  423485:	je     0x423500
  423487:	cmp    WORD PTR [esi],bx
  42348a:	mov    eax,esi
  42348c:	je     0x42349c
  42348e:	add    eax,ebp
  423490:	cmp    WORD PTR [eax],bx
  423493:	jne    0x42348e
  423495:	add    eax,ebp
  423497:	cmp    WORD PTR [eax],bx
  42349a:	jne    0x42348e
  42349c:	mov    edi,DWORD PTR ds:0x428088
  4234a2:	push   ebx
  4234a3:	push   ebx
  4234a4:	push   ebx
  4234a5:	sub    eax,esi
  4234a7:	push   ebx
  4234a8:	sar    eax,1
  4234aa:	inc    eax
  4234ab:	push   eax
  4234ac:	push   esi
  4234ad:	push   ebx
  4234ae:	push   ebx
  4234af:	mov    DWORD PTR [esp+0x34],eax
  4234b3:	call   edi
  4234b5:	mov    ebp,eax
  4234b7:	cmp    ebp,ebx
  4234b9:	je     0x4234ed
  4234bb:	push   ebp
  4234bc:	call   0x424662
  4234c1:	cmp    eax,ebx
  4234c3:	pop    ecx
  4234c4:	mov    DWORD PTR [esp+0x10],eax
  4234c8:	je     0x4234ed
  4234ca:	push   ebx
  4234cb:	push   ebx
  4234cc:	push   ebp
  4234cd:	push   eax
  4234ce:	push   DWORD PTR [esp+0x24]
  4234d2:	push   esi
  4234d3:	push   ebx
  4234d4:	push   ebx
  4234d5:	call   edi
  4234d7:	test   eax,eax
  4234d9:	jne    0x4234e9
  4234db:	push   DWORD PTR [esp+0x10]
  4234df:	call   0x42454a
  4234e4:	pop    ecx
  4234e5:	mov    DWORD PTR [esp+0x10],ebx
  4234e9:	mov    ebx,DWORD PTR [esp+0x10]
  4234ed:	push   esi
  4234ee:	call   DWORD PTR ds:0x428084
  4234f4:	mov    eax,ebx
  4234f6:	jmp    0x423548
  4234f8:	cmp    eax,ebp
  4234fa:	je     0x423504
  4234fc:	cmp    eax,ebx
  4234fe:	je     0x423504
  423500:	xor    eax,eax
  423502:	jmp    0x423548
  423504:	call   DWORD PTR ds:0x428080
  42350a:	mov    esi,eax
  42350c:	cmp    esi,ebx
  42350e:	je     0x423500
  423510:	cmp    BYTE PTR [esi],bl
  423512:	je     0x42351e
  423514:	inc    eax
  423515:	cmp    BYTE PTR [eax],bl
  423517:	jne    0x423514
  423519:	inc    eax
  42351a:	cmp    BYTE PTR [eax],bl
  42351c:	jne    0x423514
  42351e:	sub    eax,esi
  423520:	inc    eax
  423521:	mov    ebp,eax
  423523:	push   ebp
  423524:	call   0x424662
  423529:	mov    edi,eax
  42352b:	cmp    edi,ebx
  42352d:	pop    ecx
  42352e:	jne    0x423534
  423530:	xor    edi,edi
  423532:	jmp    0x42353f
  423534:	push   ebp
  423535:	push   esi
  423536:	push   edi
  423537:	call   0x424680
  42353c:	add    esp,0xc
  42353f:	push   esi
  423540:	call   DWORD PTR ds:0x42807c
  423546:	mov    eax,edi
  423548:	pop    edi
  423549:	pop    esi
  42354a:	pop    ebp
  42354b:	pop    ebx
  42354c:	pop    ecx
  42354d:	pop    ecx
  42354e:	ret    
  42354f:	sub    esp,0x48
  423552:	push   ebx
  423553:	mov    ebx,0x480
  423558:	push   ebx
  423559:	call   0x424662
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	jne    0x42356b
  423563:	or     eax,0xffffffff
  423566:	jmp    0x423748
  42356b:	mov    ds:0x460240,eax
  423570:	mov    DWORD PTR ds:0x460228,0x20
  42357a:	lea    ecx,[eax+0x480]
  423580:	jmp    0x4235a0
  423582:	and    BYTE PTR [eax+0x4],0x0
  423586:	or     DWORD PTR [eax],0xffffffff
  423589:	and    DWORD PTR [eax+0x8],0x0
  42358d:	mov    BYTE PTR [eax+0x5],0xa
  423591:	mov    ecx,DWORD PTR ds:0x460240
  423597:	add    eax,0x24
  42359a:	add    ecx,0x480
  4235a0:	cmp    eax,ecx
  4235a2:	jb     0x423582
  4235a4:	push   ebp
  4235a5:	push   esi
  4235a6:	push   edi
  4235a7:	lea    eax,[esp+0x14]
  4235ab:	push   eax
  4235ac:	call   DWORD PTR ds:0x428058
  4235b2:	cmp    WORD PTR [esp+0x46],0x0
  4235b8:	je     0x4236a7
  4235be:	mov    eax,DWORD PTR [esp+0x48]
  4235c2:	test   eax,eax
  4235c4:	je     0x4236a7
  4235ca:	mov    edi,DWORD PTR [eax]
  4235cc:	lea    ebp,[eax+0x4]
  4235cf:	lea    eax,[edi+ebp*1]
  4235d2:	mov    DWORD PTR [esp+0x10],eax
  4235d6:	mov    eax,0x800
  4235db:	cmp    edi,eax
  4235dd:	jl     0x4235e1
  4235df:	mov    edi,eax
  4235e1:	cmp    DWORD PTR ds:0x460228,edi
  4235e7:	jge    0x423637
  4235e9:	mov    esi,0x460244
  4235ee:	push   ebx
  4235ef:	call   0x424662
  4235f4:	test   eax,eax
  4235f6:	pop    ecx
  4235f7:	je     0x423631
  4235f9:	add    DWORD PTR ds:0x460228,0x20
  423600:	mov    DWORD PTR [esi],eax
  423602:	lea    ecx,[eax+0x480]
  423608:	jmp    0x423620
  42360a:	and    BYTE PTR [eax+0x4],0x0
  42360e:	or     DWORD PTR [eax],0xffffffff
  423611:	and    DWORD PTR [eax+0x8],0x0
  423615:	mov    BYTE PTR [eax+0x5],0xa
  423619:	mov    ecx,DWORD PTR [esi]
  42361b:	add    eax,0x24
  42361e:	add    ecx,ebx
  423620:	cmp    eax,ecx
  423622:	jb     0x42360a
  423624:	add    esi,0x4
  423627:	cmp    DWORD PTR ds:0x460228,edi
  42362d:	jl     0x4235ee
  42362f:	jmp    0x423637
  423631:	mov    edi,DWORD PTR ds:0x460228
  423637:	xor    ebx,ebx
  423639:	test   edi,edi
  42363b:	jle    0x4236a7
  42363d:	mov    eax,DWORD PTR [esp+0x10]
  423641:	mov    eax,DWORD PTR [eax]
  423643:	cmp    eax,0xffffffff
  423646:	je     0x42369c
  423648:	mov    cl,BYTE PTR [ebp+0x0]
  42364b:	test   cl,0x1
  42364e:	je     0x42369c
  423650:	test   cl,0x8
  423653:	jne    0x423660
  423655:	push   eax
  423656:	call   DWORD PTR ds:0x428094
  42365c:	test   eax,eax
  42365e:	je     0x42369c
  423660:	mov    ecx,ebx
  423662:	mov    eax,ebx
  423664:	and    eax,0x1f
  423667:	lea    eax,[eax+eax*8]
  42366a:	sar    ecx,0x5
  42366d:	mov    ecx,DWORD PTR [ecx*4+0x460240]
  423674:	lea    esi,[ecx+eax*4]
  423677:	mov    eax,DWORD PTR [esp+0x10]
  42367b:	mov    eax,DWORD PTR [eax]
  42367d:	mov    DWORD PTR [esi],eax
  42367f:	mov    al,BYTE PTR [ebp+0x0]
  423682:	mov    BYTE PTR [esi+0x4],al
  423685:	lea    eax,[esi+0xc]
  423688:	push   0xfa0
  42368d:	push   eax
  42368e:	call   0x4249cd
  423693:	test   eax,eax
  423695:	pop    ecx
  423696:	pop    ecx
  423697:	je     0x4236c7
  423699:	inc    DWORD PTR [esi+0x8]
  42369c:	add    DWORD PTR [esp+0x10],0x4
  4236a1:	inc    ebx
  4236a2:	inc    ebp
  4236a3:	cmp    ebx,edi
  4236a5:	jl     0x42363d
  4236a7:	xor    ebx,ebx
  4236a9:	mov    ecx,DWORD PTR ds:0x460240
  4236af:	lea    eax,[ebx+ebx*8]
  4236b2:	lea    esi,[ecx+eax*4]
  4236b5:	cmp    DWORD PTR [esi],0xffffffff
  4236b8:	jne    0x423729
  4236ba:	test   ebx,ebx
  4236bc:	mov    BYTE PTR [esi+0x4],0x81
  4236c0:	jne    0x4236cc
  4236c2:	push   0xfffffff6
  4236c4:	pop    eax
  4236c5:	jmp    0x4236d6
  4236c7:	or     eax,0xffffffff
  4236ca:	jmp    0x423745
  4236cc:	mov    eax,ebx
  4236ce:	dec    eax
  4236cf:	neg    eax
  4236d1:	sbb    eax,eax
  4236d3:	add    eax,0xfffffff5
  4236d6:	push   eax
  4236d7:	call   DWORD PTR ds:0x428070
  4236dd:	mov    edi,eax
  4236df:	cmp    edi,0xffffffff
  4236e2:	je     0x423723
  4236e4:	push   edi
  4236e5:	call   DWORD PTR ds:0x428094
  4236eb:	test   eax,eax
  4236ed:	je     0x423723
  4236ef:	and    eax,0xff
  4236f4:	cmp    eax,0x2
  4236f7:	mov    DWORD PTR [esi],edi
  4236f9:	jne    0x423701
  4236fb:	or     BYTE PTR [esi+0x4],0x40
  4236ff:	jmp    0x42370a
  423701:	cmp    eax,0x3
  423704:	jne    0x42370a
  423706:	or     BYTE PTR [esi+0x4],0x8
  42370a:	lea    eax,[esi+0xc]
  42370d:	push   0xfa0
  423712:	push   eax
  423713:	call   0x4249cd
  423718:	test   eax,eax
  42371a:	pop    ecx
  42371b:	pop    ecx
  42371c:	je     0x4236c7
  42371e:	inc    DWORD PTR [esi+0x8]
  423721:	jmp    0x42372d
  423723:	or     BYTE PTR [esi+0x4],0x40
  423727:	jmp    0x42372d
  423729:	or     BYTE PTR [esi+0x4],0x80
  42372d:	inc    ebx
  42372e:	cmp    ebx,0x3
  423731:	jl     0x4236a9
  423737:	push   DWORD PTR ds:0x460228
  42373d:	call   DWORD PTR ds:0x428090
  423743:	xor    eax,eax
  423745:	pop    edi
  423746:	pop    esi
  423747:	pop    ebp
  423748:	pop    ebx
  423749:	add    esp,0x48
  42374c:	ret    
  42374d:	push   0xc
  42374f:	push   0x4284e0
  423754:	call   0x423940
  423759:	mov    DWORD PTR [ebp-0x1c],0x428f38
  423760:	cmp    DWORD PTR [ebp-0x1c],0x428f38
  423767:	jae    0x42378b
  423769:	and    DWORD PTR [ebp-0x4],0x0
  42376d:	mov    eax,DWORD PTR [ebp-0x1c]
  423770:	mov    eax,DWORD PTR [eax]
  423772:	test   eax,eax
  423774:	je     0x423781
  423776:	call   eax
  423778:	jmp    0x423781
  42377a:	xor    eax,eax
  42377c:	inc    eax
  42377d:	ret    
  42377e:	mov    esp,DWORD PTR [ebp-0x18]
  423781:	or     DWORD PTR [ebp-0x4],0xffffffff
  423785:	add    DWORD PTR [ebp-0x1c],0x4
  423789:	jmp    0x423760
  42378b:	call   0x42397b
  423790:	ret    
  423791:	push   0xc
  423793:	push   0x4284f0
  423798:	call   0x423940
  42379d:	mov    DWORD PTR [ebp-0x1c],0x428f40
  4237a4:	cmp    DWORD PTR [ebp-0x1c],0x428f40
  4237ab:	jae    0x4237cf
  4237ad:	and    DWORD PTR [ebp-0x4],0x0
  4237b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237b4:	mov    eax,DWORD PTR [eax]
  4237b6:	test   eax,eax
  4237b8:	je     0x4237c5
  4237ba:	call   eax
  4237bc:	jmp    0x4237c5
  4237be:	xor    eax,eax
  4237c0:	inc    eax
  4237c1:	ret    
  4237c2:	mov    esp,DWORD PTR [ebp-0x18]
  4237c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237c9:	add    DWORD PTR [ebp-0x1c],0x4
  4237cd:	jmp    0x4237a4
  4237cf:	call   0x42397b
  4237d4:	ret    
  4237d5:	call   0x423a16
  4237da:	mov    eax,ds:0x45f3dc
  4237df:	cmp    eax,0xffffffff
  4237e2:	je     0x4237f2
  4237e4:	push   eax
  4237e5:	call   DWORD PTR ds:0x42809c
  4237eb:	or     DWORD PTR ds:0x45f3dc,0xffffffff
  4237f2:	ret    
  4237f3:	push   ebx
  4237f4:	push   esi
  4237f5:	call   DWORD PTR ds:0x428018
  4237fb:	push   DWORD PTR ds:0x45f3dc
  423801:	mov    ebx,eax
  423803:	call   DWORD PTR ds:0x4280ac
  423809:	mov    esi,eax
  42380b:	test   esi,esi
  42380d:	jne    0x423858
  42380f:	push   0x88
  423814:	push   0x1
  423816:	call   0x424a58
  42381b:	mov    esi,eax
  42381d:	test   esi,esi
  42381f:	pop    ecx
  423820:	pop    ecx
  423821:	je     0x423850
  423823:	push   esi
  423824:	push   DWORD PTR ds:0x45f3dc
  42382a:	call   DWORD PTR ds:0x4280a8
  423830:	test   eax,eax
  423832:	je     0x423850
  423834:	mov    DWORD PTR [esi+0x54],0x45f330
  42383b:	mov    DWORD PTR [esi+0x14],0x1
  423842:	call   DWORD PTR ds:0x4280a4
  423848:	or     DWORD PTR [esi+0x4],0xffffffff
  42384c:	mov    DWORD PTR [esi],eax
  42384e:	jmp    0x423858
  423850:	push   0x10
  423852:	call   0x422a06
  423857:	pop    ecx
  423858:	push   ebx
  423859:	call   DWORD PTR ds:0x4280a0
  42385f:	mov    eax,esi
  423861:	pop    esi
  423862:	pop    ebx
  423863:	ret    
  423864:	call   0x4239cd
  423869:	test   eax,eax
  42386b:	je     0x42387d
  42386d:	call   DWORD PTR ds:0x4280b0
  423873:	cmp    eax,0xffffffff
  423876:	mov    ds:0x45f3dc,eax
  42387b:	jne    0x423885
  42387d:	call   0x4237d5
  423882:	xor    eax,eax
  423884:	ret    
  423885:	push   esi
  423886:	push   0x88
  42388b:	push   0x1
  42388d:	call   0x424a58
  423892:	mov    esi,eax
  423894:	test   esi,esi
  423896:	pop    ecx
  423897:	pop    ecx
  423898:	je     0x4238ca
  42389a:	push   esi
  42389b:	push   DWORD PTR ds:0x45f3dc
  4238a1:	call   DWORD PTR ds:0x4280a8
  4238a7:	test   eax,eax
  4238a9:	je     0x4238ca
  4238ab:	mov    DWORD PTR [esi+0x54],0x45f330
  4238b2:	mov    DWORD PTR [esi+0x14],0x1
  4238b9:	call   DWORD PTR ds:0x4280a4
  4238bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238c3:	mov    DWORD PTR [esi],eax
  4238c5:	xor    eax,eax
  4238c7:	inc    eax
  4238c8:	pop    esi
  4238c9:	ret    
  4238ca:	call   0x4237d5
  4238cf:	xor    eax,eax
  4238d1:	pop    esi
  4238d2:	ret    
  4238d3:	cmp    DWORD PTR ds:0x45fba4,0x2
  4238da:	jne    0x4238e9
  4238dc:	cmp    DWORD PTR ds:0x45fbb0,0x5
  4238e3:	jb     0x4238e9
  4238e5:	xor    eax,eax
  4238e7:	inc    eax
  4238e8:	ret    
  4238e9:	push   0x3
  4238eb:	pop    eax
  4238ec:	ret    
  4238ed:	xor    eax,eax
  4238ef:	cmp    DWORD PTR [esp+0x4],eax
  4238f3:	push   0x0
  4238f5:	sete   al
  4238f8:	push   0x1000
  4238fd:	push   eax
  4238fe:	call   DWORD PTR ds:0x4280b8
  423904:	test   eax,eax
  423906:	mov    ds:0x460220,eax
  42390b:	je     0x423937
  42390d:	call   0x4238d3
  423912:	cmp    eax,0x3
  423915:	mov    ds:0x460224,eax
  42391a:	jne    0x42393a
  42391c:	push   0x3f8
  423921:	call   0x424cda
  423926:	test   eax,eax
  423928:	pop    ecx
  423929:	jne    0x42393a
  42392b:	push   DWORD PTR ds:0x460220
  423931:	call   DWORD PTR ds:0x4280b4
  423937:	xor    eax,eax
  423939:	ret    
  42393a:	xor    eax,eax
  42393c:	inc    eax
  42393d:	ret    
  42393e:	int3   
  42393f:	int3   
  423940:	push   0x425808
  423945:	mov    eax,fs:0x0
  42394b:	push   eax
  42394c:	mov    eax,DWORD PTR [esp+0x10]
  423950:	mov    DWORD PTR [esp+0x10],ebp
  423954:	lea    ebp,[esp+0x10]
  423958:	sub    esp,eax
  42395a:	push   ebx
  42395b:	push   esi
  42395c:	push   edi
  42395d:	mov    eax,DWORD PTR [ebp-0x8]
  423960:	mov    DWORD PTR [ebp-0x18],esp
  423963:	push   eax
  423964:	mov    eax,DWORD PTR [ebp-0x4]
  423967:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42396e:	mov    DWORD PTR [ebp-0x8],eax
  423971:	lea    eax,[ebp-0x10]
  423974:	mov    fs:0x0,eax
  42397a:	ret    
  42397b:	mov    ecx,DWORD PTR [ebp-0x10]
  42397e:	mov    DWORD PTR fs:0x0,ecx
  423985:	pop    ecx
  423986:	pop    edi
  423987:	pop    esi
  423988:	pop    ebx
  423989:	leave  
  42398a:	push   ecx
  42398b:	ret    
  42398c:	int3   
  42398d:	int3   
  42398e:	int3   
  42398f:	int3   
  423990:	cmp    eax,0x1000
  423995:	jae    0x4239a5
  423997:	neg    eax
  423999:	add    eax,esp
  42399b:	add    eax,0x4
  42399e:	test   DWORD PTR [eax],eax
  4239a0:	xchg   esp,eax
  4239a1:	mov    eax,DWORD PTR [eax]
  4239a3:	push   eax
  4239a4:	ret    
  4239a5:	push   ecx
  4239a6:	lea    ecx,[esp+0x8]
  4239aa:	sub    ecx,0x1000
  4239b0:	sub    eax,0x1000
  4239b5:	test   DWORD PTR [ecx],eax
  4239b7:	cmp    eax,0x1000
  4239bc:	jae    0x4239aa
  4239be:	sub    ecx,eax
  4239c0:	mov    eax,esp
  4239c2:	test   DWORD PTR [ecx],eax
  4239c4:	mov    esp,ecx
  4239c6:	mov    ecx,DWORD PTR [eax]
  4239c8:	mov    eax,DWORD PTR [eax+0x4]
  4239cb:	push   eax
  4239cc:	ret    
  4239cd:	push   esi
  4239ce:	push   edi
  4239cf:	xor    esi,esi
  4239d1:	mov    edi,0x45fd00
  4239d6:	cmp    DWORD PTR [esi*8+0x45f3f4],0x1
  4239de:	jne    0x4239fe
  4239e0:	lea    eax,[esi*8+0x45f3f0]
  4239e7:	mov    DWORD PTR [eax],edi
  4239e9:	push   0xfa0
  4239ee:	push   DWORD PTR [eax]
  4239f0:	add    edi,0x18
  4239f3:	call   0x4249cd
  4239f8:	test   eax,eax
  4239fa:	pop    ecx
  4239fb:	pop    ecx
  4239fc:	je     0x423a0a
  4239fe:	inc    esi
  4239ff:	cmp    esi,0x24
  423a02:	jl     0x4239d6
  423a04:	xor    eax,eax
  423a06:	inc    eax
  423a07:	pop    edi
  423a08:	pop    esi
  423a09:	ret    
  423a0a:	and    DWORD PTR [esi*8+0x45f3f0],0x0
  423a12:	xor    eax,eax
  423a14:	jmp    0x423a07
  423a16:	push   ebx
  423a17:	mov    ebx,DWORD PTR ds:0x428098
  423a1d:	push   esi
  423a1e:	mov    esi,0x45f3f0
  423a23:	push   edi
  423a24:	mov    edi,DWORD PTR [esi]
  423a26:	test   edi,edi
  423a28:	je     0x423a3d
  423a2a:	cmp    DWORD PTR [esi+0x4],0x1
  423a2e:	je     0x423a3d
  423a30:	push   edi
  423a31:	call   ebx
  423a33:	push   edi
  423a34:	call   0x42454a
  423a39:	and    DWORD PTR [esi],0x0
  423a3c:	pop    ecx
  423a3d:	add    esi,0x8
  423a40:	cmp    esi,0x45f510
  423a46:	jl     0x423a24
  423a48:	mov    esi,0x45f3f0
  423a4d:	pop    edi
  423a4e:	mov    eax,DWORD PTR [esi]
  423a50:	test   eax,eax
  423a52:	je     0x423a5d
  423a54:	cmp    DWORD PTR [esi+0x4],0x1
  423a58:	jne    0x423a5d
  423a5a:	push   eax
  423a5b:	call   ebx
  423a5d:	add    esi,0x8
  423a60:	cmp    esi,0x45f510
  423a66:	jl     0x423a4e
  423a68:	pop    esi
  423a69:	pop    ebx
  423a6a:	ret    
  423a6b:	push   ebp
  423a6c:	mov    ebp,esp
  423a6e:	mov    eax,DWORD PTR [ebp+0x8]
  423a71:	push   DWORD PTR [eax*8+0x45f3f0]
  423a78:	call   DWORD PTR ds:0x428020
  423a7e:	pop    ebp
  423a7f:	ret    
  423a80:	push   ebp
  423a81:	mov    ebp,esp
  423a83:	push   esi
  423a84:	mov    esi,DWORD PTR [ebp+0x8]
  423a87:	lea    esi,[esi*8+0x45f3f0]
  423a8e:	cmp    DWORD PTR [esi],0x0
  423a91:	je     0x423a98
  423a93:	xor    eax,eax
  423a95:	inc    eax
  423a96:	jmp    0x423afc
  423a98:	push   edi
  423a99:	push   0x18
  423a9b:	call   0x424662
  423aa0:	mov    edi,eax
  423aa2:	test   edi,edi
  423aa4:	pop    ecx
  423aa5:	jne    0x423ab6
  423aa7:	call   0x4258e0
  423aac:	mov    DWORD PTR [eax],0xc
  423ab2:	xor    eax,eax
  423ab4:	jmp    0x423afb
  423ab6:	push   0xa
  423ab8:	call   0x423aff
  423abd:	cmp    DWORD PTR [esi],0x0
  423ac0:	pop    ecx
  423ac1:	jne    0x423ae9
  423ac3:	push   0xfa0
  423ac8:	push   edi
  423ac9:	call   0x4249cd
  423ace:	test   eax,eax
  423ad0:	pop    ecx
  423ad1:	pop    ecx
  423ad2:	jne    0x423ae5
  423ad4:	push   edi
  423ad5:	call   0x42454a
  423ada:	push   0xa
  423adc:	call   0x423a6b
  423ae1:	pop    ecx
  423ae2:	pop    ecx
  423ae3:	jmp    0x423aa7
  423ae5:	mov    DWORD PTR [esi],edi
  423ae7:	jmp    0x423af0
  423ae9:	push   edi
  423aea:	call   0x42454a
  423aef:	pop    ecx
  423af0:	push   0xa
  423af2:	call   0x423a6b
  423af7:	xor    eax,eax
  423af9:	pop    ecx
  423afa:	inc    eax
  423afb:	pop    edi
  423afc:	pop    esi
  423afd:	pop    ebp
  423afe:	ret    
  423aff:	push   ebp
  423b00:	mov    ebp,esp
  423b02:	mov    eax,DWORD PTR [ebp+0x8]
  423b05:	push   esi
  423b06:	lea    esi,[eax*8+0x45f3f0]
  423b0d:	cmp    DWORD PTR [esi],0x0
  423b10:	jne    0x423b25
  423b12:	push   eax
  423b13:	call   0x423a80
  423b18:	test   eax,eax
  423b1a:	pop    ecx
  423b1b:	jne    0x423b25
  423b1d:	push   0x11
  423b1f:	call   0x422a06
  423b24:	pop    ecx
  423b25:	push   DWORD PTR [esi]
  423b27:	call   DWORD PTR ds:0x4280c4
  423b2d:	pop    esi
  423b2e:	pop    ebp
  423b2f:	ret    
  423b30:	push   esi
  423b31:	push   DWORD PTR ds:0x460348
  423b37:	call   0x425a96
  423b3c:	pop    ecx
  423b3d:	mov    ecx,DWORD PTR ds:0x460344
  423b43:	mov    esi,eax
  423b45:	mov    eax,ds:0x460348
  423b4a:	mov    edx,ecx
  423b4c:	sub    edx,eax
  423b4e:	add    edx,0x4
  423b51:	cmp    esi,edx
  423b53:	jae    0x423ba3
  423b55:	mov    ecx,0x800
  423b5a:	cmp    esi,ecx
  423b5c:	jae    0x423b60
  423b5e:	mov    ecx,esi
  423b60:	add    ecx,esi
  423b62:	push   ecx
  423b63:	push   eax
  423b64:	call   0x4258e9
  423b69:	test   eax,eax
  423b6b:	pop    ecx
  423b6c:	pop    ecx
  423b6d:	jne    0x423b86
  423b6f:	add    esi,0x10
  423b72:	push   esi
  423b73:	push   DWORD PTR ds:0x460348
  423b79:	call   0x4258e9
  423b7e:	test   eax,eax
  423b80:	pop    ecx
  423b81:	pop    ecx
  423b82:	jne    0x423b86
  423b84:	pop    esi
  423b85:	ret    
  423b86:	mov    ecx,DWORD PTR ds:0x460344
  423b8c:	sub    ecx,DWORD PTR ds:0x460348
  423b92:	mov    ds:0x460348,eax
  423b97:	sar    ecx,0x2
  423b9a:	lea    ecx,[eax+ecx*4]
  423b9d:	mov    DWORD PTR ds:0x460344,ecx
  423ba3:	mov    DWORD PTR [ecx],edi
  423ba5:	add    DWORD PTR ds:0x460344,0x4
  423bac:	mov    eax,edi
  423bae:	pop    esi
  423baf:	ret    
  423bb0:	push   0x80
  423bb5:	call   0x424662
  423bba:	test   eax,eax
  423bbc:	pop    ecx
  423bbd:	mov    ds:0x460348,eax
  423bc2:	jne    0x423bc8
  423bc4:	push   0x18
  423bc6:	pop    eax
  423bc7:	ret    
  423bc8:	and    DWORD PTR [eax],0x0
  423bcb:	mov    eax,ds:0x460348
  423bd0:	mov    ds:0x460344,eax
  423bd5:	xor    eax,eax
  423bd7:	ret    
  423bd8:	push   0xc
  423bda:	push   0x428500
  423bdf:	call   0x423940
  423be4:	call   0x422c51
  423be9:	and    DWORD PTR [ebp-0x4],0x0
  423bed:	mov    edi,DWORD PTR [ebp+0x8]
  423bf0:	call   0x423b30
  423bf5:	mov    DWORD PTR [ebp-0x1c],eax
  423bf8:	or     DWORD PTR [ebp-0x4],0xffffffff
  423bfc:	call   0x423c0a
  423c01:	mov    eax,DWORD PTR [ebp-0x1c]
  423c04:	call   0x42397b
  423c09:	ret    
  423c0a:	call   0x422c5a
  423c0f:	ret    
  423c10:	push   DWORD PTR [esp+0x4]
  423c14:	call   0x423bd8
  423c19:	neg    eax
  423c1b:	sbb    eax,eax
  423c1d:	neg    eax
  423c1f:	pop    ecx
  423c20:	dec    eax
  423c21:	ret    
  423c22:	push   ebp
  423c23:	mov    ebp,esp
  423c25:	sub    esp,0x10
  423c28:	push   ebx
  423c29:	xor    ebx,ebx
  423c2b:	cmp    DWORD PTR ds:0x45fe50,ebx
  423c31:	push   esi
  423c32:	push   edi
  423c33:	jne    0x423ca2
  423c35:	push   0x428570
  423c3a:	call   DWORD PTR ds:0x4280c8
  423c40:	mov    edi,eax
  423c42:	cmp    edi,ebx
  423c44:	je     0x423cdd
  423c4a:	mov    esi,DWORD PTR ds:0x428010
  423c50:	push   0x428564
  423c55:	push   edi
  423c56:	call   esi
  423c58:	test   eax,eax
  423c5a:	mov    ds:0x45fe50,eax
  423c5f:	je     0x423cdd
  423c61:	push   0x428554
  423c66:	push   edi
  423c67:	call   esi
  423c69:	push   0x428540
  423c6e:	push   edi
  423c6f:	mov    ds:0x45fe54,eax
  423c74:	call   esi
  423c76:	cmp    DWORD PTR ds:0x45fba4,0x2
  423c7d:	mov    ds:0x45fe58,eax
  423c82:	jne    0x423ca2
  423c84:	push   0x428524
  423c89:	push   edi
  423c8a:	call   esi
  423c8c:	test   eax,eax
  423c8e:	mov    ds:0x45fe60,eax
  423c93:	je     0x423ca2
  423c95:	push   0x42850c
  423c9a:	push   edi
  423c9b:	call   esi
  423c9d:	mov    ds:0x45fe5c,eax
  423ca2:	mov    eax,ds:0x45fe5c
  423ca7:	test   eax,eax
  423ca9:	je     0x423ce7
  423cab:	call   eax
  423cad:	test   eax,eax
  423caf:	je     0x423cce
  423cb1:	lea    ecx,[ebp-0x4]
  423cb4:	push   ecx
  423cb5:	push   0xc
  423cb7:	lea    ecx,[ebp-0x10]
  423cba:	push   ecx
  423cbb:	push   0x1
  423cbd:	push   eax
  423cbe:	call   DWORD PTR ds:0x45fe60
  423cc4:	test   eax,eax
  423cc6:	je     0x423cce
  423cc8:	test   BYTE PTR [ebp-0x8],0x1
  423ccc:	jne    0x423ce7
  423cce:	cmp    DWORD PTR ds:0x45fbb0,0x4
  423cd5:	jb     0x423ce1
  423cd7:	or     BYTE PTR [ebp+0x12],0x20
  423cdb:	jmp    0x423d06
  423cdd:	xor    eax,eax
  423cdf:	jmp    0x423d16
  423ce1:	or     BYTE PTR [ebp+0x12],0x4
  423ce5:	jmp    0x423d06
  423ce7:	mov    eax,ds:0x45fe54
  423cec:	test   eax,eax
  423cee:	je     0x423d06
  423cf0:	call   eax
  423cf2:	mov    ebx,eax
  423cf4:	test   ebx,ebx
  423cf6:	je     0x423d06
  423cf8:	mov    eax,ds:0x45fe58
  423cfd:	test   eax,eax
  423cff:	je     0x423d06
  423d01:	push   ebx
  423d02:	call   eax
  423d04:	mov    ebx,eax
  423d06:	push   DWORD PTR [ebp+0x10]
  423d09:	push   DWORD PTR [ebp+0xc]
  423d0c:	push   DWORD PTR [ebp+0x8]
  423d0f:	push   ebx
  423d10:	call   DWORD PTR ds:0x45fe50
  423d16:	pop    edi
  423d17:	pop    esi
  423d18:	pop    ebx
  423d19:	leave  
  423d1a:	ret    
  423d1b:	int3   
  423d1c:	int3   
  423d1d:	int3   
  423d1e:	int3   
  423d1f:	int3   
  423d20:	push   edi
  423d21:	mov    edi,DWORD PTR [esp+0x8]
  423d25:	jmp    0x423d95
  423d27:	lea    esp,[esp+0x0]
  423d2e:	mov    edi,edi
  423d30:	mov    ecx,DWORD PTR [esp+0x4]
  423d34:	push   edi
  423d35:	test   ecx,0x3
  423d3b:	je     0x423d50
  423d3d:	mov    al,BYTE PTR [ecx]
  423d3f:	add    ecx,0x1
  423d42:	test   al,al
  423d44:	je     0x423d83
  423d46:	test   ecx,0x3
  423d4c:	jne    0x423d3d
  423d4e:	mov    edi,edi
  423d50:	mov    eax,DWORD PTR [ecx]
  423d52:	mov    edx,0x7efefeff
  423d57:	add    edx,eax
  423d59:	xor    eax,0xffffffff
  423d5c:	xor    eax,edx
  423d5e:	add    ecx,0x4
  423d61:	test   eax,0x81010100
  423d66:	je     0x423d50
  423d68:	mov    eax,DWORD PTR [ecx-0x4]
  423d6b:	test   al,al
  423d6d:	je     0x423d92
  423d6f:	test   ah,ah
  423d71:	je     0x423d8d
  423d73:	test   eax,0xff0000
  423d78:	je     0x423d88
  423d7a:	test   eax,0xff000000
  423d7f:	je     0x423d83
  423d81:	jmp    0x423d50
  423d83:	lea    edi,[ecx-0x1]
  423d86:	jmp    0x423d95
  423d88:	lea    edi,[ecx-0x2]
  423d8b:	jmp    0x423d95
  423d8d:	lea    edi,[ecx-0x3]
  423d90:	jmp    0x423d95
  423d92:	lea    edi,[ecx-0x4]
  423d95:	mov    ecx,DWORD PTR [esp+0xc]
  423d99:	test   ecx,0x3
  423d9f:	je     0x423dbe
  423da1:	mov    dl,BYTE PTR [ecx]
  423da3:	add    ecx,0x1
  423da6:	test   dl,dl
  423da8:	je     0x423e10
  423daa:	mov    BYTE PTR [edi],dl
  423dac:	add    edi,0x1
  423daf:	test   ecx,0x3
  423db5:	jne    0x423da1
  423db7:	jmp    0x423dbe
  423db9:	mov    DWORD PTR [edi],edx
  423dbb:	add    edi,0x4
  423dbe:	mov    edx,0x7efefeff
  423dc3:	mov    eax,DWORD PTR [ecx]
  423dc5:	add    edx,eax
  423dc7:	xor    eax,0xffffffff
  423dca:	xor    eax,edx
  423dcc:	mov    edx,DWORD PTR [ecx]
  423dce:	add    ecx,0x4
  423dd1:	test   eax,0x81010100
  423dd6:	je     0x423db9
  423dd8:	test   dl,dl
  423dda:	je     0x423e10
  423ddc:	test   dh,dh
  423dde:	je     0x423e07
  423de0:	test   edx,0xff0000
  423de6:	je     0x423dfa
  423de8:	test   edx,0xff000000
  423dee:	je     0x423df2
  423df0:	jmp    0x423db9
  423df2:	mov    DWORD PTR [edi],edx
  423df4:	mov    eax,DWORD PTR [esp+0x8]
  423df8:	pop    edi
  423df9:	ret    
  423dfa:	mov    WORD PTR [edi],dx
  423dfd:	mov    eax,DWORD PTR [esp+0x8]
  423e01:	mov    BYTE PTR [edi+0x2],0x0
  423e05:	pop    edi
  423e06:	ret    
  423e07:	mov    WORD PTR [edi],dx
  423e0a:	mov    eax,DWORD PTR [esp+0x8]
  423e0e:	pop    edi
  423e0f:	ret    
  423e10:	mov    BYTE PTR [edi],dl
  423e12:	mov    eax,DWORD PTR [esp+0x8]
  423e16:	pop    edi
  423e17:	ret    
  423e18:	int3   
  423e19:	int3   
  423e1a:	int3   
  423e1b:	int3   
  423e1c:	int3   
  423e1d:	int3   
  423e1e:	int3   
  423e1f:	int3   
  423e20:	mov    ecx,DWORD PTR [esp+0xc]
  423e24:	push   edi
  423e25:	test   ecx,ecx
  423e27:	je     0x423ebf
  423e2d:	push   esi
  423e2e:	push   ebx
  423e2f:	mov    ebx,ecx
  423e31:	mov    esi,DWORD PTR [esp+0x14]
  423e35:	test   esi,0x3
  423e3b:	mov    edi,DWORD PTR [esp+0x10]
  423e3f:	jne    0x423e4c
  423e41:	shr    ecx,0x2
  423e44:	jne    0x423ecf
  423e4a:	jmp    0x423e73
  423e4c:	mov    al,BYTE PTR [esi]
  423e4e:	add    esi,0x1
  423e51:	mov    BYTE PTR [edi],al
  423e53:	add    edi,0x1
  423e56:	sub    ecx,0x1
  423e59:	je     0x423e86
  423e5b:	test   al,al
  423e5d:	je     0x423e8e
  423e5f:	test   esi,0x3
  423e65:	jne    0x423e4c
  423e67:	mov    ebx,ecx
  423e69:	shr    ecx,0x2
  423e6c:	jne    0x423ecf
  423e6e:	and    ebx,0x3
  423e71:	je     0x423e86
  423e73:	mov    al,BYTE PTR [esi]
  423e75:	add    esi,0x1
  423e78:	mov    BYTE PTR [edi],al
  423e7a:	add    edi,0x1
  423e7d:	test   al,al
  423e7f:	je     0x423eb8
  423e81:	sub    ebx,0x1
  423e84:	jne    0x423e73
  423e86:	mov    eax,DWORD PTR [esp+0x10]
  423e8a:	pop    ebx
  423e8b:	pop    esi
  423e8c:	pop    edi
  423e8d:	ret    
  423e8e:	test   edi,0x3
  423e94:	je     0x423eac
  423e96:	mov    BYTE PTR [edi],al
  423e98:	add    edi,0x1
  423e9b:	sub    ecx,0x1
  423e9e:	je     0x423f3c
  423ea4:	test   edi,0x3
  423eaa:	jne    0x423e96
  423eac:	mov    ebx,ecx
  423eae:	shr    ecx,0x2
  423eb1:	jne    0x423f27
  423eb3:	mov    BYTE PTR [edi],al
  423eb5:	add    edi,0x1
  423eb8:	sub    ebx,0x1
  423ebb:	jne    0x423eb3
  423ebd:	pop    ebx
  423ebe:	pop    esi
  423ebf:	mov    eax,DWORD PTR [esp+0x8]
  423ec3:	pop    edi
  423ec4:	ret    
  423ec5:	mov    DWORD PTR [edi],edx
  423ec7:	add    edi,0x4
  423eca:	sub    ecx,0x1
  423ecd:	je     0x423e6e
  423ecf:	mov    edx,0x7efefeff
  423ed4:	mov    eax,DWORD PTR [esi]
  423ed6:	add    edx,eax
  423ed8:	xor    eax,0xffffffff
  423edb:	xor    eax,edx
  423edd:	mov    edx,DWORD PTR [esi]
  423edf:	add    esi,0x4
  423ee2:	test   eax,0x81010100
  423ee7:	je     0x423ec5
  423ee9:	test   dl,dl
  423eeb:	je     0x423f19
  423eed:	test   dh,dh
  423eef:	je     0x423f0f
  423ef1:	test   edx,0xff0000
  423ef7:	je     0x423f05
  423ef9:	test   edx,0xff000000
  423eff:	jne    0x423ec5
  423f01:	mov    DWORD PTR [edi],edx
  423f03:	jmp    0x423f1d
  423f05:	and    edx,0xffff
  423f0b:	mov    DWORD PTR [edi],edx
  423f0d:	jmp    0x423f1d
  423f0f:	and    edx,0xff
  423f15:	mov    DWORD PTR [edi],edx
  423f17:	jmp    0x423f1d
  423f19:	xor    edx,edx
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	add    edi,0x4
  423f20:	xor    eax,eax
  423f22:	sub    ecx,0x1
  423f25:	je     0x423f33
  423f27:	xor    eax,eax
  423f29:	mov    DWORD PTR [edi],eax
  423f2b:	add    edi,0x4
  423f2e:	sub    ecx,0x1
  423f31:	jne    0x423f29
  423f33:	and    ebx,0x3
  423f36:	jne    0x423eb3
  423f3c:	mov    eax,DWORD PTR [esp+0x10]
  423f40:	pop    ebx
  423f41:	pop    esi
  423f42:	pop    edi
  423f43:	ret    
  423f44:	int3   
  423f45:	int3   
  423f46:	int3   
  423f47:	int3   
  423f48:	int3   
  423f49:	int3   
  423f4a:	int3   
  423f4b:	int3   
  423f4c:	int3   
  423f4d:	int3   
  423f4e:	int3   
  423f4f:	int3   
  423f50:	mov    ecx,DWORD PTR [esp+0x4]
  423f54:	test   ecx,0x3
  423f5a:	je     0x423f80
  423f5c:	mov    al,BYTE PTR [ecx]
  423f5e:	add    ecx,0x1
  423f61:	test   al,al
  423f63:	je     0x423fb3
  423f65:	test   ecx,0x3
  423f6b:	jne    0x423f5c
  423f6d:	add    eax,0x0
  423f72:	lea    esp,[esp+0x0]
  423f79:	lea    esp,[esp+0x0]
  423f80:	mov    eax,DWORD PTR [ecx]
  423f82:	mov    edx,0x7efefeff
  423f87:	add    edx,eax
  423f89:	xor    eax,0xffffffff
  423f8c:	xor    eax,edx
  423f8e:	add    ecx,0x4
  423f91:	test   eax,0x81010100
  423f96:	je     0x423f80
  423f98:	mov    eax,DWORD PTR [ecx-0x4]
  423f9b:	test   al,al
  423f9d:	je     0x423fd1
  423f9f:	test   ah,ah
  423fa1:	je     0x423fc7
  423fa3:	test   eax,0xff0000
  423fa8:	je     0x423fbd
  423faa:	test   eax,0xff000000
  423faf:	je     0x423fb3
  423fb1:	jmp    0x423f80
  423fb3:	lea    eax,[ecx-0x1]
  423fb6:	mov    ecx,DWORD PTR [esp+0x4]
  423fba:	sub    eax,ecx
  423fbc:	ret    
  423fbd:	lea    eax,[ecx-0x2]
  423fc0:	mov    ecx,DWORD PTR [esp+0x4]
  423fc4:	sub    eax,ecx
  423fc6:	ret    
  423fc7:	lea    eax,[ecx-0x3]
  423fca:	mov    ecx,DWORD PTR [esp+0x4]
  423fce:	sub    eax,ecx
  423fd0:	ret    
  423fd1:	lea    eax,[ecx-0x4]
  423fd4:	mov    ecx,DWORD PTR [esp+0x4]
  423fd8:	sub    eax,ecx
  423fda:	ret    
  423fdb:	push   0x8
  423fdd:	push   0x428580
  423fe2:	call   0x423940
  423fe7:	and    DWORD PTR [ebp-0x4],0x0
  423feb:	push   0x0
  423fed:	push   0x1
  423fef:	call   0x425b62
  423ff4:	pop    ecx
  423ff5:	pop    ecx
  423ff6:	jmp    0x423fff
  423ff8:	xor    eax,eax
  423ffa:	inc    eax
  423ffb:	ret    
  423ffc:	mov    esp,DWORD PTR [ebp-0x18]
  423fff:	or     DWORD PTR [ebp-0x4],0xffffffff
  424003:	push   0x3
  424005:	call   DWORD PTR ds:0x428060
  42400b:	int3   
  42400c:	cmp    ecx,DWORD PTR ds:0x45f510
  424012:	jne    0x424015
  424014:	ret    
  424015:	jmp    0x423fdb
  42401a:	movzx  eax,BYTE PTR [esp+0x4]
  42401f:	mov    cl,BYTE PTR [esp+0xc]
  424023:	test   BYTE PTR [eax+0x460001],cl
  424029:	jne    0x424047
  42402b:	cmp    DWORD PTR [esp+0x8],0x0
  424030:	je     0x424040
  424032:	movzx  eax,WORD PTR [eax*2+0x42897a]
  42403a:	and    eax,DWORD PTR [esp+0x8]
  42403e:	jmp    0x424042
  424040:	xor    eax,eax
  424042:	test   eax,eax
  424044:	jne    0x424047
  424046:	ret    
  424047:	xor    eax,eax
  424049:	inc    eax
  42404a:	ret    
  42404b:	push   0x4
  42404d:	push   0x0
  42404f:	push   DWORD PTR [esp+0xc]
  424053:	call   0x42401a
  424058:	add    esp,0xc
  42405b:	ret    
  42405c:	sub    eax,0x3a4
  424061:	je     0x424085
  424063:	sub    eax,0x4
  424066:	je     0x42407f
  424068:	sub    eax,0xd
  42406b:	je     0x424079
  42406d:	dec    eax
  42406e:	je     0x424073
  424070:	xor    eax,eax
  424072:	ret    
  424073:	mov    eax,0x404
  424078:	ret    
  424079:	mov    eax,0x412
  42407e:	ret    
  42407f:	mov    eax,0x804
  424084:	ret    
  424085:	mov    eax,0x411
  42408a:	ret    
  42408b:	push   edi
  42408c:	push   0x40
  42408e:	xor    eax,eax
  424090:	pop    ecx
  424091:	mov    edi,0x460000
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	stos   BYTE PTR es:[edi],al
  424099:	xor    eax,eax
  42409b:	mov    ds:0x460104,eax
  4240a0:	mov    ds:0x45fffc,eax
  4240a5:	mov    ds:0x45fff4,eax
  4240aa:	mov    edi,0x460110
  4240af:	stos   DWORD PTR es:[edi],eax
  4240b0:	stos   DWORD PTR es:[edi],eax
  4240b1:	stos   DWORD PTR es:[edi],eax
  4240b2:	pop    edi
  4240b3:	ret    
  4240b4:	push   ebp
  4240b5:	mov    ebp,esp
  4240b7:	sub    esp,0x518
  4240bd:	mov    eax,ds:0x45f510
  4240c2:	xor    eax,DWORD PTR [ebp+0x4]
  4240c5:	push   esi
  4240c6:	mov    DWORD PTR [ebp-0x4],eax
  4240c9:	lea    eax,[ebp-0x18]
  4240cc:	push   eax
  4240cd:	push   DWORD PTR ds:0x460104
  4240d3:	call   DWORD PTR ds:0x4280d4
  4240d9:	cmp    eax,0x1
  4240dc:	mov    esi,0x100
  4240e1:	jne    0x4241f4
  4240e7:	xor    eax,eax
  4240e9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  4240f0:	inc    eax
  4240f1:	cmp    eax,esi
  4240f3:	jb     0x4240e9
  4240f5:	mov    al,BYTE PTR [ebp-0x12]
  4240f8:	test   al,al
  4240fa:	mov    BYTE PTR [ebp-0x118],0x20
  424101:	je     0x424139
  424103:	push   ebx
  424104:	lea    edx,[ebp-0x11]
  424107:	push   edi
  424108:	movzx  ecx,BYTE PTR [edx]
  42410b:	movzx  eax,al
  42410e:	cmp    eax,ecx
  424110:	ja     0x42412f
  424112:	sub    ecx,eax
  424114:	inc    ecx
  424115:	mov    ebx,ecx
  424117:	shr    ecx,0x2
  42411a:	lea    edi,[ebp+eax*1-0x118]
  424121:	mov    eax,0x20202020
  424126:	rep stos DWORD PTR es:[edi],eax
  424128:	mov    ecx,ebx
  42412a:	and    ecx,0x3
  42412d:	rep stos BYTE PTR es:[edi],al
  42412f:	inc    edx
  424130:	mov    al,BYTE PTR [edx]
  424132:	inc    edx
  424133:	test   al,al
  424135:	jne    0x424108
  424137:	pop    edi
  424138:	pop    ebx
  424139:	push   0x0
  42413b:	push   DWORD PTR ds:0x45fff4
  424141:	lea    eax,[ebp-0x518]
  424147:	push   DWORD PTR ds:0x460104
  42414d:	push   eax
  42414e:	push   esi
  42414f:	lea    eax,[ebp-0x118]
  424155:	push   eax
  424156:	push   0x1
  424158:	call   0x426068
  42415d:	push   0x0
  42415f:	push   DWORD PTR ds:0x460104
  424165:	lea    eax,[ebp-0x218]
  42416b:	push   esi
  42416c:	push   eax
  42416d:	push   esi
  42416e:	lea    eax,[ebp-0x118]
  424174:	push   eax
  424175:	push   esi
  424176:	push   DWORD PTR ds:0x45fff4
  42417c:	call   0x425cac
  424181:	push   0x0
  424183:	push   DWORD PTR ds:0x460104
  424189:	lea    eax,[ebp-0x318]
  42418f:	push   esi
  424190:	push   eax
  424191:	push   esi
  424192:	lea    eax,[ebp-0x118]
  424198:	push   eax
  424199:	push   0x200
  42419e:	push   DWORD PTR ds:0x45fff4
  4241a4:	call   0x425cac
  4241a9:	add    esp,0x5c
  4241ac:	xor    eax,eax
  4241ae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241b6:	test   cl,0x1
  4241b9:	je     0x4241d1
  4241bb:	or     BYTE PTR [eax+0x460001],0x10
  4241c2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241c9:	mov    BYTE PTR [eax+0x460120],cl
  4241cf:	jmp    0x4241ed
  4241d1:	test   cl,0x2
  4241d4:	je     0x4241e6
  4241d6:	or     BYTE PTR [eax+0x460001],0x20
  4241dd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241e4:	jmp    0x4241c9
  4241e6:	and    BYTE PTR [eax+0x460120],0x0
  4241ed:	inc    eax
  4241ee:	cmp    eax,esi
  4241f0:	jb     0x4241ae
  4241f2:	jmp    0x424238
  4241f4:	xor    eax,eax
  4241f6:	cmp    eax,0x41
  4241f9:	jb     0x424214
  4241fb:	cmp    eax,0x5a
  4241fe:	ja     0x424214
  424200:	or     BYTE PTR [eax+0x460001],0x10
  424207:	mov    cl,al
  424209:	add    cl,0x20
  42420c:	mov    BYTE PTR [eax+0x460120],cl
  424212:	jmp    0x424233
  424214:	cmp    eax,0x61
  424217:	jb     0x42422c
  424219:	cmp    eax,0x7a
  42421c:	ja     0x42422c
  42421e:	or     BYTE PTR [eax+0x460001],0x20
  424225:	mov    cl,al
  424227:	sub    cl,0x20
  42422a:	jmp    0x42420c
  42422c:	and    BYTE PTR [eax+0x460120],0x0
  424233:	inc    eax
  424234:	cmp    eax,esi
  424236:	jb     0x4241f6
  424238:	mov    ecx,DWORD PTR [ebp-0x4]
  42423b:	xor    ecx,DWORD PTR [ebp+0x4]
  42423e:	pop    esi
  42423f:	call   0x42400c
  424244:	leave  
  424245:	ret    
  424246:	push   ebp
  424247:	mov    ebp,esp
  424249:	sub    esp,0x1c
  42424c:	mov    eax,ds:0x45f510
  424251:	xor    eax,DWORD PTR [ebp+0x4]
  424254:	push   ebx
  424255:	push   esi
  424256:	mov    esi,DWORD PTR [ebp+0x8]
  424259:	xor    ebx,ebx
  42425b:	cmp    esi,ebx
  42425d:	mov    DWORD PTR [ebp-0x4],eax
  424260:	push   edi
  424261:	je     0x4243bb
  424267:	xor    edx,edx
  424269:	xor    eax,eax
  42426b:	cmp    DWORD PTR [eax+0x45f520],esi
  424271:	je     0x4242d8
  424273:	add    eax,0x30
  424276:	inc    edx
  424277:	cmp    eax,0xf0
  42427c:	jb     0x42426b
  42427e:	lea    eax,[ebp-0x1c]
  424281:	push   eax
  424282:	push   esi
  424283:	call   DWORD PTR ds:0x4280d4
  424289:	cmp    eax,0x1
  42428c:	jne    0x4243b3
  424292:	push   0x40
  424294:	xor    eax,eax
  424296:	cmp    DWORD PTR [ebp-0x1c],0x1
  42429a:	pop    ecx
  42429b:	mov    edi,0x460000
  4242a0:	rep stos DWORD PTR es:[edi],eax
  4242a2:	stos   BYTE PTR es:[edi],al
  4242a3:	mov    DWORD PTR ds:0x460104,esi
  4242a9:	mov    DWORD PTR ds:0x45fff4,ebx
  4242af:	jbe    0x4243a1
  4242b5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242b9:	je     0x424379
  4242bf:	lea    ecx,[ebp-0x15]
  4242c2:	mov    dl,BYTE PTR [ecx]
  4242c4:	test   dl,dl
  4242c6:	je     0x424379
  4242cc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242d0:	movzx  edx,dl
  4242d3:	jmp    0x424369
  4242d8:	push   0x40
  4242da:	xor    eax,eax
  4242dc:	pop    ecx
  4242dd:	mov    edi,0x460000
  4242e2:	rep stos DWORD PTR es:[edi],eax
  4242e4:	lea    ecx,[edx+edx*2]
  4242e7:	shl    ecx,0x4
  4242ea:	mov    DWORD PTR [ebp-0x8],ebx
  4242ed:	stos   BYTE PTR es:[edi],al
  4242ee:	lea    ebx,[ecx+0x45f530]
  4242f4:	mov    al,BYTE PTR [ebx]
  4242f6:	mov    esi,ebx
  4242f8:	jmp    0x424323
  4242fa:	mov    dl,BYTE PTR [esi+0x1]
  4242fd:	test   dl,dl
  4242ff:	je     0x424327
  424301:	movzx  eax,al
  424304:	movzx  edi,dl
  424307:	cmp    eax,edi
  424309:	ja     0x42431f
  42430b:	mov    edx,DWORD PTR [ebp-0x8]
  42430e:	mov    dl,BYTE PTR [edx+0x45f518]
  424314:	or     BYTE PTR [eax+0x460001],dl
  42431a:	inc    eax
  42431b:	cmp    eax,edi
  42431d:	jbe    0x424314
  42431f:	inc    esi
  424320:	inc    esi
  424321:	mov    al,BYTE PTR [esi]
  424323:	test   al,al
  424325:	jne    0x4242fa
  424327:	inc    DWORD PTR [ebp-0x8]
  42432a:	add    ebx,0x8
  42432d:	cmp    DWORD PTR [ebp-0x8],0x4
  424331:	jb     0x4242f4
  424333:	mov    eax,DWORD PTR [ebp+0x8]
  424336:	mov    ds:0x460104,eax
  42433b:	mov    DWORD PTR ds:0x45fffc,0x1
  424345:	call   0x42405c
  42434a:	lea    ecx,[ecx+0x45f524]
  424350:	mov    esi,ecx
  424352:	mov    edi,0x460110
  424357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424359:	mov    ds:0x45fff4,eax
  42435e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42435f:	jmp    0x4243c0
  424361:	or     BYTE PTR [eax+0x460001],0x4
  424368:	inc    eax
  424369:	cmp    eax,edx
  42436b:	jbe    0x424361
  42436d:	inc    ecx
  42436e:	inc    ecx
  42436f:	cmp    BYTE PTR [ecx-0x1],0x0
  424373:	jne    0x4242c2
  424379:	xor    ecx,ecx
  42437b:	inc    ecx
  42437c:	mov    eax,ecx
  42437e:	or     BYTE PTR [eax+0x460001],0x8
  424385:	inc    eax
  424386:	cmp    eax,0xff
  42438b:	jb     0x42437e
  42438d:	mov    eax,esi
  42438f:	call   0x42405c
  424394:	mov    ds:0x45fff4,eax
  424399:	mov    DWORD PTR ds:0x45fffc,ecx
  42439f:	jmp    0x4243a7
  4243a1:	mov    DWORD PTR ds:0x45fffc,ebx
  4243a7:	xor    eax,eax
  4243a9:	mov    edi,0x460110
  4243ae:	stos   DWORD PTR es:[edi],eax
  4243af:	stos   DWORD PTR es:[edi],eax
  4243b0:	stos   DWORD PTR es:[edi],eax
  4243b1:	jmp    0x4243c0
  4243b3:	cmp    DWORD PTR ds:0x45fe64,ebx
  4243b9:	je     0x4243c9
  4243bb:	call   0x42408b
  4243c0:	call   0x4240b4
  4243c5:	xor    eax,eax
  4243c7:	jmp    0x4243cc
  4243c9:	or     eax,0xffffffff
  4243cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243cf:	xor    ecx,DWORD PTR [ebp+0x4]
  4243d2:	pop    edi
  4243d3:	pop    esi
  4243d4:	pop    ebx
  4243d5:	call   0x42400c
  4243da:	leave  
  4243db:	ret    
  4243dc:	push   0x14
  4243de:	push   0x428590
  4243e3:	call   0x423940
  4243e8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243ec:	push   0xd
  4243ee:	call   0x423aff
  4243f3:	pop    ecx
  4243f4:	xor    edi,edi
  4243f6:	mov    DWORD PTR [ebp-0x4],edi
  4243f9:	mov    DWORD PTR ds:0x45fe64,edi
  4243ff:	mov    eax,DWORD PTR [ebp+0x8]
  424402:	cmp    eax,0xfffffffe
  424405:	jne    0x424419
  424407:	mov    DWORD PTR ds:0x45fe64,0x1
  424411:	call   DWORD PTR ds:0x4280d0
  424417:	jmp    0x424444
  424419:	cmp    eax,0xfffffffd
  42441c:	jne    0x424430
  42441e:	mov    DWORD PTR ds:0x45fe64,0x1
  424428:	call   DWORD PTR ds:0x4280cc
  42442e:	jmp    0x424444
  424430:	cmp    eax,0xfffffffc
  424433:	jne    0x424444
  424435:	mov    DWORD PTR ds:0x45fe64,0x1
  42443f:	mov    eax,ds:0x45fe94
  424444:	mov    DWORD PTR [ebp+0x8],eax
  424447:	cmp    eax,DWORD PTR ds:0x460104
  42444d:	je     0x42450e
  424453:	mov    esi,DWORD PTR ds:0x45fff8
  424459:	mov    DWORD PTR [ebp-0x20],esi
  42445c:	cmp    esi,edi
  42445e:	je     0x424464
  424460:	cmp    DWORD PTR [esi],edi
  424462:	je     0x424474
  424464:	push   0x220
  424469:	call   0x424662
  42446e:	pop    ecx
  42446f:	mov    esi,eax
  424471:	mov    DWORD PTR [ebp-0x20],esi
  424474:	cmp    esi,edi
  424476:	je     0x4244f7
  424478:	push   DWORD PTR [ebp+0x8]
  42447b:	call   0x424246
  424480:	pop    ecx
  424481:	mov    DWORD PTR [ebp-0x1c],eax
  424484:	cmp    eax,edi
  424486:	jne    0x4244f7
  424488:	mov    DWORD PTR [esi],edi
  42448a:	mov    eax,ds:0x460104
  42448f:	mov    DWORD PTR [esi+0x4],eax
  424492:	mov    eax,ds:0x45fffc
  424497:	mov    DWORD PTR [esi+0x8],eax
  42449a:	mov    eax,ds:0x45fff4
  42449f:	mov    DWORD PTR [esi+0xc],eax
  4244a2:	xor    eax,eax
  4244a4:	mov    DWORD PTR [ebp-0x24],eax
  4244a7:	cmp    eax,0x5
  4244aa:	jge    0x4244bc
  4244ac:	mov    cx,WORD PTR [eax*2+0x460110]
  4244b4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244b9:	inc    eax
  4244ba:	jmp    0x4244a4
  4244bc:	xor    eax,eax
  4244be:	mov    DWORD PTR [ebp-0x24],eax
  4244c1:	cmp    eax,0x101
  4244c6:	jge    0x4244d5
  4244c8:	mov    cl,BYTE PTR [eax+0x460000]
  4244ce:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244d2:	inc    eax
  4244d3:	jmp    0x4244be
  4244d5:	xor    eax,eax
  4244d7:	mov    DWORD PTR [ebp-0x24],eax
  4244da:	cmp    eax,0x100
  4244df:	jge    0x4244f1
  4244e1:	mov    cl,BYTE PTR [eax+0x460120]
  4244e7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244ee:	inc    eax
  4244ef:	jmp    0x4244d7
  4244f1:	mov    DWORD PTR ds:0x45fff8,esi
  4244f7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4244fb:	jne    0x424511
  4244fd:	cmp    esi,DWORD PTR ds:0x45fff8
  424503:	je     0x424511
  424505:	push   esi
  424506:	call   0x42454a
  42450b:	pop    ecx
  42450c:	jmp    0x424511
  42450e:	mov    DWORD PTR [ebp-0x1c],edi
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x424523
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	call   0x42397b
  424522:	ret    
  424523:	push   0xd
  424525:	call   0x423a6b
  42452a:	pop    ecx
  42452b:	ret    
  42452c:	cmp    DWORD PTR ds:0x46034c,0x0
  424533:	jne    0x424547
  424535:	push   0xfffffffd
  424537:	call   0x4243dc
  42453c:	pop    ecx
  42453d:	mov    DWORD PTR ds:0x46034c,0x1
  424547:	xor    eax,eax
  424549:	ret    
  42454a:	push   0xc
  42454c:	push   0x4285a0
  424551:	call   0x423940
  424556:	mov    esi,DWORD PTR [ebp+0x8]
  424559:	test   esi,esi
  42455b:	je     0x4245b5
  42455d:	cmp    DWORD PTR ds:0x460224,0x3
  424564:	jne    0x4245a6
  424566:	push   0x4
  424568:	call   0x423aff
  42456d:	pop    ecx
  42456e:	and    DWORD PTR [ebp-0x4],0x0
  424572:	push   esi
  424573:	call   0x424d22
  424578:	pop    ecx
  424579:	mov    DWORD PTR [ebp-0x1c],eax
  42457c:	test   eax,eax
  42457e:	je     0x424589
  424580:	push   esi
  424581:	push   eax
  424582:	call   0x424d4d
  424587:	pop    ecx
  424588:	pop    ecx
  424589:	or     DWORD PTR [ebp-0x4],0xffffffff
  42458d:	call   0x42459d
  424592:	cmp    DWORD PTR [ebp-0x1c],0x0
  424596:	jne    0x4245b5
  424598:	push   DWORD PTR [ebp+0x8]
  42459b:	jmp    0x4245a7
  42459d:	push   0x4
  42459f:	call   0x423a6b
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	push   esi
  4245a7:	push   0x0
  4245a9:	push   DWORD PTR ds:0x460220
  4245af:	call   DWORD PTR ds:0x4280c0
  4245b5:	call   0x42397b
  4245ba:	ret    
  4245bb:	push   0xc
  4245bd:	push   0x4285b0
  4245c2:	call   0x423940
  4245c7:	mov    esi,DWORD PTR [ebp+0x8]
  4245ca:	cmp    DWORD PTR ds:0x460224,0x3
  4245d1:	jne    0x424601
  4245d3:	cmp    esi,DWORD PTR ds:0x45ffe4
  4245d9:	ja     0x424601
  4245db:	push   0x4
  4245dd:	call   0x423aff
  4245e2:	pop    ecx
  4245e3:	and    DWORD PTR [ebp-0x4],0x0
  4245e7:	push   esi
  4245e8:	call   0x425501
  4245ed:	pop    ecx
  4245ee:	mov    DWORD PTR [ebp-0x1c],eax
  4245f1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4245f5:	call   0x42462d
  4245fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4245fd:	test   eax,eax
  4245ff:	jne    0x424624
  424601:	test   esi,esi
  424603:	jne    0x424606
  424605:	inc    esi
  424606:	cmp    DWORD PTR ds:0x460224,0x1
  42460d:	je     0x424615
  42460f:	add    esi,0xf
  424612:	and    esi,0xfffffff0
  424615:	push   esi
  424616:	push   0x0
  424618:	push   DWORD PTR ds:0x460220
  42461e:	call   DWORD PTR ds:0x4280d8
  424624:	call   0x42397b
  424629:	ret    
  42462a:	mov    esi,DWORD PTR [ebp+0x8]
  42462d:	push   0x4
  42462f:	call   0x423a6b
  424634:	pop    ecx
  424635:	ret    
  424636:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42463b:	ja     0x42465f
  42463d:	push   DWORD PTR [esp+0x4]
  424641:	call   0x4245bb
  424646:	test   eax,eax
  424648:	pop    ecx
  424649:	jne    0x424661
  42464b:	cmp    DWORD PTR [esp+0x8],eax
  42464f:	je     0x424661
  424651:	push   DWORD PTR [esp+0x4]
  424655:	call   0x426222
  42465a:	test   eax,eax
  42465c:	pop    ecx
  42465d:	jne    0x42463d
  42465f:	xor    eax,eax
  424661:	ret    
  424662:	push   DWORD PTR ds:0x45fea8
  424668:	push   DWORD PTR [esp+0x8]
  42466c:	call   0x424636
  424671:	pop    ecx
  424672:	pop    ecx
  424673:	ret    
  424674:	int3   
  424675:	int3   
  424676:	int3   
  424677:	int3   
  424678:	int3   
  424679:	int3   
  42467a:	int3   
  42467b:	int3   
  42467c:	int3   
  42467d:	int3   
  42467e:	int3   
  42467f:	int3   
  424680:	push   ebp
  424681:	mov    ebp,esp
  424683:	push   edi
  424684:	push   esi
  424685:	mov    esi,DWORD PTR [ebp+0xc]
  424688:	mov    ecx,DWORD PTR [ebp+0x10]
  42468b:	mov    edi,DWORD PTR [ebp+0x8]
  42468e:	mov    eax,ecx
  424690:	mov    edx,ecx
  424692:	add    eax,esi
  424694:	cmp    edi,esi
  424696:	jbe    0x4246a0
  424698:	cmp    edi,eax
  42469a:	jb     0x42481c
  4246a0:	test   edi,0x3
  4246a6:	jne    0x4246bc
  4246a8:	shr    ecx,0x2
  4246ab:	and    edx,0x3
  4246ae:	cmp    ecx,0x8
  4246b1:	jb     0x4246dc
  4246b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246b5:	jmp    DWORD PTR [edx*4+0x4247cc]
  4246bc:	mov    eax,edi
  4246be:	mov    edx,0x3
  4246c3:	sub    ecx,0x4
  4246c6:	jb     0x4246d4
  4246c8:	and    eax,0x3
  4246cb:	add    ecx,eax
  4246cd:	jmp    DWORD PTR [eax*4+0x4246e0]
  4246d4:	jmp    DWORD PTR [ecx*4+0x4247dc]
  4246db:	nop
  4246dc:	jmp    DWORD PTR [ecx*4+0x424760]
  4246e3:	nop
  4246e4:	lock inc esi
  4246e6:	inc    edx
  4246e7:	add    BYTE PTR [edi+eax*2],bl
  4246ea:	inc    edx
  4246eb:	add    BYTE PTR [eax+0x47],al
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx],ah
  4246f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4246f7:	inc    esi
  4246f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4246fe:	add    al,cl
  424700:	jmp    0x289cf07
  424705:	add    esi,0x3
  424708:	add    edi,0x3
  42470b:	cmp    ecx,0x8
  42470e:	jb     0x4246dc
  424710:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424712:	jmp    DWORD PTR [edx*4+0x4247cc]
  424719:	lea    ecx,[ecx+0x0]
  42471c:	and    edx,ecx
  42471e:	mov    al,BYTE PTR [esi]
  424720:	mov    BYTE PTR [edi],al
  424722:	mov    al,BYTE PTR [esi+0x1]
  424725:	shr    ecx,0x2
  424728:	mov    BYTE PTR [edi+0x1],al
  42472b:	add    esi,0x2
  42472e:	add    edi,0x2
  424731:	cmp    ecx,0x8
  424734:	jb     0x4246dc
  424736:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424738:	jmp    DWORD PTR [edx*4+0x4247cc]
  42473f:	nop
  424740:	and    edx,ecx
  424742:	mov    al,BYTE PTR [esi]
  424744:	mov    BYTE PTR [edi],al
  424746:	add    esi,0x1
  424749:	shr    ecx,0x2
  42474c:	add    edi,0x1
  42474f:	cmp    ecx,0x8
  424752:	jb     0x4246dc
  424754:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424756:	jmp    DWORD PTR [edx*4+0x4247cc]
  42475d:	lea    ecx,[ecx+0x0]
  424760:	ret    
  424761:	inc    edi
  424762:	inc    edx
  424763:	add    BYTE PTR [eax-0x57ffbdb9],dh
  424769:	inc    edi
  42476a:	inc    edx
  42476b:	add    BYTE PTR [eax-0x67ffbdb9],ah
  424771:	inc    edi
  424772:	inc    edx
  424773:	add    BYTE PTR [eax-0x77ffbdb9],dl
  424779:	inc    edi
  42477a:	inc    edx
  42477b:	add    BYTE PTR [eax-0x74ffbdb9],al
  424781:	inc    esp
  424782:	mov    fs,esp
  424784:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  424788:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42478c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424790:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424794:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424798:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42479c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247b8:	lea    eax,[ecx*4+0x0]
  4247bf:	add    esi,eax
  4247c1:	add    edi,eax
  4247c3:	jmp    DWORD PTR [edx*4+0x4247cc]
  4247ca:	mov    edi,edi
  4247cc:	fadd   QWORD PTR [edi+0x42]
  4247cf:	add    ah,ah
  4247d1:	inc    edi
  4247d2:	inc    edx
  4247d3:	add    al,dh
  4247d5:	inc    edi
  4247d6:	inc    edx
  4247d7:	add    BYTE PTR [eax+ecx*2],al
  4247da:	inc    edx
  4247db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247e1:	leave  
  4247e2:	ret    
  4247e3:	nop
  4247e4:	mov    al,BYTE PTR [esi]
  4247e6:	mov    BYTE PTR [edi],al
  4247e8:	mov    eax,DWORD PTR [ebp+0x8]
  4247eb:	pop    esi
  4247ec:	pop    edi
  4247ed:	leave  
  4247ee:	ret    
  4247ef:	nop
  4247f0:	mov    al,BYTE PTR [esi]
  4247f2:	mov    BYTE PTR [edi],al
  4247f4:	mov    al,BYTE PTR [esi+0x1]
  4247f7:	mov    BYTE PTR [edi+0x1],al
  4247fa:	mov    eax,DWORD PTR [ebp+0x8]
  4247fd:	pop    esi
  4247fe:	pop    edi
  4247ff:	leave  
  424800:	ret    
  424801:	lea    ecx,[ecx+0x0]
  424804:	mov    al,BYTE PTR [esi]
  424806:	mov    BYTE PTR [edi],al
  424808:	mov    al,BYTE PTR [esi+0x1]
  42480b:	mov    BYTE PTR [edi+0x1],al
  42480e:	mov    al,BYTE PTR [esi+0x2]
  424811:	mov    BYTE PTR [edi+0x2],al
  424814:	mov    eax,DWORD PTR [ebp+0x8]
  424817:	pop    esi
  424818:	pop    edi
  424819:	leave  
  42481a:	ret    
  42481b:	nop
  42481c:	lea    esi,[ecx+esi*1-0x4]
  424820:	lea    edi,[ecx+edi*1-0x4]
  424824:	test   edi,0x3
  42482a:	jne    0x424850
  42482c:	shr    ecx,0x2
  42482f:	and    edx,0x3
  424832:	cmp    ecx,0x8
  424835:	jb     0x424844
  424837:	std    
  424838:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42483a:	cld    
  42483b:	jmp    DWORD PTR [edx*4+0x424968]
  424842:	mov    edi,edi
  424844:	neg    ecx
  424846:	jmp    DWORD PTR [ecx*4+0x424918]
  42484d:	lea    ecx,[ecx+0x0]
  424850:	mov    eax,edi
  424852:	mov    edx,0x3
  424857:	cmp    ecx,0x4
  42485a:	jb     0x424868
  42485c:	and    eax,0x3
  42485f:	sub    ecx,eax
  424861:	jmp    DWORD PTR [eax*4+0x42486c]
  424868:	jmp    DWORD PTR [ecx*4+0x424968]
  42486f:	nop
  424870:	jl     0x4248ba
  424872:	inc    edx
  424873:	add    BYTE PTR [eax-0x37ffbdb8],ah
  424879:	dec    eax
  42487a:	inc    edx
  42487b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424881:	mov    BYTE PTR [edi+0x3],al
  424884:	sub    esi,0x1
  424887:	shr    ecx,0x2
  42488a:	sub    edi,0x1
  42488d:	cmp    ecx,0x8
  424890:	jb     0x424844
  424892:	std    
  424893:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424895:	cld    
  424896:	jmp    DWORD PTR [edx*4+0x424968]
  42489d:	lea    ecx,[ecx+0x0]
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	and    edx,ecx
  4248a5:	mov    BYTE PTR [edi+0x3],al
  4248a8:	mov    al,BYTE PTR [esi+0x2]
  4248ab:	shr    ecx,0x2
  4248ae:	mov    BYTE PTR [edi+0x2],al
  4248b1:	sub    esi,0x2
  4248b4:	sub    edi,0x2
  4248b7:	cmp    ecx,0x8
  4248ba:	jb     0x424844
  4248bc:	std    
  4248bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248bf:	cld    
  4248c0:	jmp    DWORD PTR [edx*4+0x424968]
  4248c7:	nop
  4248c8:	mov    al,BYTE PTR [esi+0x3]
  4248cb:	and    edx,ecx
  4248cd:	mov    BYTE PTR [edi+0x3],al
  4248d0:	mov    al,BYTE PTR [esi+0x2]
  4248d3:	mov    BYTE PTR [edi+0x2],al
  4248d6:	mov    al,BYTE PTR [esi+0x1]
  4248d9:	shr    ecx,0x2
  4248dc:	mov    BYTE PTR [edi+0x1],al
  4248df:	sub    esi,0x3
  4248e2:	sub    edi,0x3
  4248e5:	cmp    ecx,0x8
  4248e8:	jb     0x424844
  4248ee:	std    
  4248ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248f1:	cld    
  4248f2:	jmp    DWORD PTR [edx*4+0x424968]
  4248f9:	lea    ecx,[ecx+0x0]
  4248fc:	sbb    al,0x49
  4248fe:	inc    edx
  4248ff:	add    BYTE PTR [ecx+ecx*2],ah
  424902:	inc    edx
  424903:	add    BYTE PTR [ecx+ecx*2],ch
  424906:	inc    edx
  424907:	add    BYTE PTR [ecx+ecx*2],dh
  42490a:	inc    edx
  42490b:	add    BYTE PTR [ecx+ecx*2],bh
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2+0x42],al
  424913:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  424917:	add    BYTE PTR [edi+0x49],bl
  42491a:	inc    edx
  42491b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424921:	inc    esp
  424922:	(bad)  
  424923:	sbb    al,0x8b
  424925:	inc    esp
  424926:	mov    ds,WORD PTR [eax]
  424928:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42492c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424930:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424934:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424938:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424940:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424948:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424950:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424954:	lea    eax,[ecx*4+0x0]
  42495b:	add    esi,eax
  42495d:	add    edi,eax
  42495f:	jmp    DWORD PTR [edx*4+0x424968]
  424966:	mov    edi,edi
  424968:	js     0x4249b3
  42496a:	inc    edx
  42496b:	add    BYTE PTR [eax-0x6fffbdb7],al
  424971:	dec    ecx
  424972:	inc    edx
  424973:	add    BYTE PTR [ecx+ecx*2+0x458b0042],ah
  42497a:	or     BYTE PTR [esi+0x5f],bl
  42497d:	leave  
  42497e:	ret    
  42497f:	nop
  424980:	mov    al,BYTE PTR [esi+0x3]
  424983:	mov    BYTE PTR [edi+0x3],al
  424986:	mov    eax,DWORD PTR [ebp+0x8]
  424989:	pop    esi
  42498a:	pop    edi
  42498b:	leave  
  42498c:	ret    
  42498d:	lea    ecx,[ecx+0x0]
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    al,BYTE PTR [esi+0x2]
  424999:	mov    BYTE PTR [edi+0x2],al
  42499c:	mov    eax,DWORD PTR [ebp+0x8]
  42499f:	pop    esi
  4249a0:	pop    edi
  4249a1:	leave  
  4249a2:	ret    
  4249a3:	nop
  4249a4:	mov    al,BYTE PTR [esi+0x3]
  4249a7:	mov    BYTE PTR [edi+0x3],al
  4249aa:	mov    al,BYTE PTR [esi+0x2]
  4249ad:	mov    BYTE PTR [edi+0x2],al
  4249b0:	mov    al,BYTE PTR [esi+0x1]
  4249b3:	mov    BYTE PTR [edi+0x1],al
  4249b6:	mov    eax,DWORD PTR [ebp+0x8]
  4249b9:	pop    esi
  4249ba:	pop    edi
  4249bb:	leave  
  4249bc:	ret    
  4249bd:	push   DWORD PTR [esp+0x4]
  4249c1:	call   DWORD PTR ds:0x4280dc
  4249c7:	xor    eax,eax
  4249c9:	inc    eax
  4249ca:	ret    0x8
  4249cd:	push   0x10
  4249cf:	push   0x4285f8
  4249d4:	call   0x423940
  4249d9:	mov    eax,ds:0x45fe68
  4249de:	test   eax,eax
  4249e0:	jne    0x424a19
  4249e2:	cmp    DWORD PTR ds:0x45fba4,0x1
  4249e9:	je     0x424a0f
  4249eb:	push   0x4285e4
  4249f0:	call   DWORD PTR ds:0x428014
  4249f6:	test   eax,eax
  4249f8:	je     0x424a0f
  4249fa:	push   0x4285bc
  4249ff:	push   eax
  424a00:	call   DWORD PTR ds:0x428010
  424a06:	mov    ds:0x45fe68,eax
  424a0b:	test   eax,eax
  424a0d:	jne    0x424a19
  424a0f:	mov    eax,0x4249bd
  424a14:	mov    ds:0x45fe68,eax
  424a19:	and    DWORD PTR [ebp-0x4],0x0
  424a1d:	push   DWORD PTR [ebp+0xc]
  424a20:	push   DWORD PTR [ebp+0x8]
  424a23:	call   eax
  424a25:	mov    DWORD PTR [ebp-0x1c],eax
  424a28:	jmp    0x424a4e
  424a2a:	mov    eax,DWORD PTR [ebp-0x14]
  424a2d:	mov    eax,DWORD PTR [eax]
  424a2f:	mov    eax,DWORD PTR [eax]
  424a31:	mov    DWORD PTR [ebp-0x20],eax
  424a34:	xor    eax,eax
  424a36:	inc    eax
  424a37:	ret    
  424a38:	mov    esp,DWORD PTR [ebp-0x18]
  424a3b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a42:	jne    0x424a4c
  424a44:	push   0x8
  424a46:	call   DWORD PTR ds:0x4280a0
  424a4c:	xor    eax,eax
  424a4e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a52:	call   0x42397b
  424a57:	ret    
  424a58:	push   0x10
  424a5a:	push   0x428608
  424a5f:	call   0x423940
  424a64:	mov    esi,DWORD PTR [ebp+0x8]
  424a67:	imul   esi,DWORD PTR [ebp+0xc]
  424a6b:	mov    DWORD PTR [ebp-0x1c],esi
  424a6e:	test   esi,esi
  424a70:	jne    0x424a73
  424a72:	inc    esi
  424a73:	xor    edi,edi
  424a75:	mov    DWORD PTR [ebp-0x20],edi
  424a78:	cmp    esi,0xffffffe0
  424a7b:	ja     0x424ae2
  424a7d:	cmp    DWORD PTR ds:0x460224,0x3
  424a84:	jne    0x424acd
  424a86:	add    esi,0xf
  424a89:	and    esi,0xfffffff0
  424a8c:	mov    DWORD PTR [ebp+0xc],esi
  424a8f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a92:	cmp    ebx,DWORD PTR ds:0x45ffe4
  424a98:	ja     0x424acd
  424a9a:	push   0x4
  424a9c:	call   0x423aff
  424aa1:	pop    ecx
  424aa2:	and    DWORD PTR [ebp-0x4],edi
  424aa5:	push   ebx
  424aa6:	call   0x425501
  424aab:	pop    ecx
  424aac:	mov    DWORD PTR [ebp-0x20],eax
  424aaf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ab3:	call   0x424b02
  424ab8:	mov    edi,DWORD PTR [ebp-0x20]
  424abb:	test   edi,edi
  424abd:	je     0x424ad1
  424abf:	push   DWORD PTR [ebp-0x1c]
  424ac2:	push   0x0
  424ac4:	push   edi
  424ac5:	call   0x426240
  424aca:	add    esp,0xc
  424acd:	test   edi,edi
  424acf:	jne    0x424b0b
  424ad1:	push   esi
  424ad2:	push   0x8
  424ad4:	push   DWORD PTR ds:0x460220
  424ada:	call   DWORD PTR ds:0x4280d8
  424ae0:	mov    edi,eax
  424ae2:	test   edi,edi
  424ae4:	jne    0x424b0b
  424ae6:	cmp    DWORD PTR ds:0x45fea8,edi
  424aec:	je     0x424b0b
  424aee:	push   esi
  424aef:	call   0x426222
  424af4:	pop    ecx
  424af5:	test   eax,eax
  424af7:	jne    0x424a73
  424afd:	jmp    0x424b0d
  424aff:	mov    esi,DWORD PTR [ebp+0xc]
  424b02:	push   0x4
  424b04:	call   0x423a6b
  424b09:	pop    ecx
  424b0a:	ret    
  424b0b:	mov    eax,edi
  424b0d:	call   0x42397b
  424b12:	ret    
  424b13:	push   esi
  424b14:	mov    esi,DWORD PTR [esp+0x8]
  424b18:	mov    eax,DWORD PTR [esi+0x3c]
  424b1b:	push   edi
  424b1c:	xor    edi,edi
  424b1e:	cmp    eax,DWORD PTR ds:0x45feb4
  424b24:	je     0x424b89
  424b26:	cmp    eax,edi
  424b28:	je     0x424b89
  424b2a:	mov    eax,DWORD PTR [esi+0x2c]
  424b2d:	cmp    DWORD PTR [eax],edi
  424b2f:	jne    0x424b89
  424b31:	mov    eax,DWORD PTR [esi+0x34]
  424b34:	cmp    eax,edi
  424b36:	je     0x424b54
  424b38:	cmp    DWORD PTR [eax],edi
  424b3a:	jne    0x424b54
  424b3c:	cmp    eax,DWORD PTR ds:0x45ffd0
  424b42:	je     0x424b54
  424b44:	push   eax
  424b45:	call   0x42454a
  424b4a:	push   DWORD PTR [esi+0x3c]
  424b4d:	call   0x42648f
  424b52:	pop    ecx
  424b53:	pop    ecx
  424b54:	mov    eax,DWORD PTR [esi+0x30]
  424b57:	cmp    eax,edi
  424b59:	je     0x424b77
  424b5b:	cmp    DWORD PTR [eax],edi
  424b5d:	jne    0x424b77
  424b5f:	cmp    eax,DWORD PTR ds:0x45ffd4
  424b65:	je     0x424b77
  424b67:	push   eax
  424b68:	call   0x42454a
  424b6d:	push   DWORD PTR [esi+0x3c]
  424b70:	call   0x426430
  424b75:	pop    ecx
  424b76:	pop    ecx
  424b77:	push   DWORD PTR [esi+0x2c]
  424b7a:	call   0x42454a
  424b7f:	push   DWORD PTR [esi+0x3c]
  424b82:	call   0x42454a
  424b87:	pop    ecx
  424b88:	pop    ecx
  424b89:	mov    eax,DWORD PTR [esi+0x40]
  424b8c:	cmp    eax,DWORD PTR ds:0x45ffcc
  424b92:	je     0x424bac
  424b94:	cmp    eax,edi
  424b96:	je     0x424bac
  424b98:	cmp    DWORD PTR [eax],edi
  424b9a:	jne    0x424bac
  424b9c:	push   eax
  424b9d:	call   0x42454a
  424ba2:	push   DWORD PTR [esi+0x44]
  424ba5:	call   0x42454a
  424baa:	pop    ecx
  424bab:	pop    ecx
  424bac:	mov    eax,DWORD PTR [esi+0x50]
  424baf:	cmp    eax,DWORD PTR ds:0x45feb0
  424bb5:	je     0x424bd3
  424bb7:	cmp    eax,edi
  424bb9:	je     0x424bd3
  424bbb:	cmp    DWORD PTR [eax+0xb4],edi
  424bc1:	jne    0x424bd3
  424bc3:	push   eax
  424bc4:	call   0x4262a0
  424bc9:	push   DWORD PTR [esi+0x50]
  424bcc:	call   0x42454a
  424bd1:	pop    ecx
  424bd2:	pop    ecx
  424bd3:	push   esi
  424bd4:	call   0x42454a
  424bd9:	pop    ecx
  424bda:	pop    edi
  424bdb:	pop    esi
  424bdc:	ret    
  424bdd:	push   esi
  424bde:	call   0x4237f3
  424be3:	mov    esi,eax
  424be5:	mov    eax,DWORD PTR [esi+0x64]
  424be8:	cmp    eax,DWORD PTR ds:0x45f66c
  424bee:	je     0x424c9a
  424bf4:	test   eax,eax
  424bf6:	je     0x424c27
  424bf8:	mov    ecx,DWORD PTR [eax+0x2c]
  424bfb:	dec    DWORD PTR [eax]
  424bfd:	test   ecx,ecx
  424bff:	je     0x424c03
  424c01:	dec    DWORD PTR [ecx]
  424c03:	mov    ecx,DWORD PTR [eax+0x34]
  424c06:	test   ecx,ecx
  424c08:	je     0x424c0c
  424c0a:	dec    DWORD PTR [ecx]
  424c0c:	mov    ecx,DWORD PTR [eax+0x30]
  424c0f:	test   ecx,ecx
  424c11:	je     0x424c15
  424c13:	dec    DWORD PTR [ecx]
  424c15:	mov    ecx,DWORD PTR [eax+0x40]
  424c18:	test   ecx,ecx
  424c1a:	je     0x424c1e
  424c1c:	dec    DWORD PTR [ecx]
  424c1e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c21:	dec    DWORD PTR [ecx+0xb4]
  424c27:	mov    ecx,DWORD PTR ds:0x45f66c
  424c2d:	mov    DWORD PTR [esi+0x64],ecx
  424c30:	mov    ecx,DWORD PTR ds:0x45f66c
  424c36:	inc    DWORD PTR [ecx]
  424c38:	mov    ecx,DWORD PTR ds:0x45f66c
  424c3e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c41:	test   ecx,ecx
  424c43:	je     0x424c47
  424c45:	inc    DWORD PTR [ecx]
  424c47:	mov    ecx,DWORD PTR ds:0x45f66c
  424c4d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c50:	test   ecx,ecx
  424c52:	je     0x424c56
  424c54:	inc    DWORD PTR [ecx]
  424c56:	mov    ecx,DWORD PTR ds:0x45f66c
  424c5c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c5f:	test   ecx,ecx
  424c61:	je     0x424c65
  424c63:	inc    DWORD PTR [ecx]
  424c65:	mov    ecx,DWORD PTR ds:0x45f66c
  424c6b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c6e:	test   ecx,ecx
  424c70:	je     0x424c74
  424c72:	inc    DWORD PTR [ecx]
  424c74:	mov    ecx,DWORD PTR ds:0x45f66c
  424c7a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c7d:	inc    DWORD PTR [ecx+0xb4]
  424c83:	test   eax,eax
  424c85:	je     0x424c9a
  424c87:	cmp    DWORD PTR [eax],0x0
  424c8a:	jne    0x424c9a
  424c8c:	cmp    eax,0x45f618
  424c91:	je     0x424c9a
  424c93:	push   eax
  424c94:	call   0x424b13
  424c99:	pop    ecx
  424c9a:	mov    eax,DWORD PTR [esi+0x64]
  424c9d:	pop    esi
  424c9e:	ret    
  424c9f:	push   0xc
  424ca1:	push   0x428798
  424ca6:	call   0x423940
  424cab:	push   0xc
  424cad:	call   0x423aff
  424cb2:	pop    ecx
  424cb3:	and    DWORD PTR [ebp-0x4],0x0
  424cb7:	call   0x424bdd
  424cbc:	mov    DWORD PTR [ebp-0x1c],eax
  424cbf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cc3:	call   0x424cd1
  424cc8:	mov    eax,DWORD PTR [ebp-0x1c]
  424ccb:	call   0x42397b
  424cd0:	ret    
  424cd1:	push   0xc
  424cd3:	call   0x423a6b
  424cd8:	pop    ecx
  424cd9:	ret    
  424cda:	push   0x140
  424cdf:	push   0x0
  424ce1:	push   DWORD PTR ds:0x460220
  424ce7:	call   DWORD PTR ds:0x4280d8
  424ced:	test   eax,eax
  424cef:	mov    ds:0x45ffe0,eax
  424cf4:	jne    0x424cf7
  424cf6:	ret    
  424cf7:	mov    ecx,DWORD PTR [esp+0x4]
  424cfb:	and    DWORD PTR ds:0x45ffd8,0x0
  424d02:	and    DWORD PTR ds:0x45ffdc,0x0
  424d09:	mov    ds:0x45ffe8,eax
  424d0e:	xor    eax,eax
  424d10:	mov    DWORD PTR ds:0x45ffe4,ecx
  424d16:	mov    DWORD PTR ds:0x45ffec,0x10
  424d20:	inc    eax
  424d21:	ret    
  424d22:	mov    eax,ds:0x45ffdc
  424d27:	lea    ecx,[eax+eax*4]
  424d2a:	mov    eax,ds:0x45ffe0
  424d2f:	lea    ecx,[eax+ecx*4]
  424d32:	jmp    0x424d46
  424d34:	mov    edx,DWORD PTR [esp+0x4]
  424d38:	sub    edx,DWORD PTR [eax+0xc]
  424d3b:	cmp    edx,0x100000
  424d41:	jb     0x424d4c
  424d43:	add    eax,0x14
  424d46:	cmp    eax,ecx
  424d48:	jb     0x424d34
  424d4a:	xor    eax,eax
  424d4c:	ret    
  424d4d:	push   ebp
  424d4e:	mov    ebp,esp
  424d50:	sub    esp,0x10
  424d53:	mov    ecx,DWORD PTR [ebp+0x8]
  424d56:	mov    eax,DWORD PTR [ecx+0x10]
  424d59:	push   esi
  424d5a:	mov    esi,DWORD PTR [ebp+0xc]
  424d5d:	push   edi
  424d5e:	mov    edi,esi
  424d60:	sub    edi,DWORD PTR [ecx+0xc]
  424d63:	add    esi,0xfffffffc
  424d66:	shr    edi,0xf
  424d69:	mov    ecx,edi
  424d6b:	imul   ecx,ecx,0x204
  424d71:	lea    ecx,[ecx+eax*1+0x144]
  424d78:	mov    DWORD PTR [ebp-0x10],ecx
  424d7b:	mov    ecx,DWORD PTR [esi]
  424d7d:	dec    ecx
  424d7e:	test   cl,0x1
  424d81:	mov    DWORD PTR [ebp-0x4],ecx
  424d84:	jne    0x425061
  424d8a:	push   ebx
  424d8b:	lea    ebx,[ecx+esi*1]
  424d8e:	mov    edx,DWORD PTR [ebx]
  424d90:	mov    DWORD PTR [ebp-0xc],edx
  424d93:	mov    edx,DWORD PTR [esi-0x4]
  424d96:	mov    DWORD PTR [ebp-0x8],edx
  424d99:	mov    edx,DWORD PTR [ebp-0xc]
  424d9c:	test   dl,0x1
  424d9f:	mov    DWORD PTR [ebp+0xc],ebx
  424da2:	jne    0x424e18
  424da4:	sar    edx,0x4
  424da7:	dec    edx
  424da8:	cmp    edx,0x3f
  424dab:	jbe    0x424db0
  424dad:	push   0x3f
  424daf:	pop    edx
  424db0:	mov    ecx,DWORD PTR [ebx+0x4]
  424db3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424db6:	jne    0x424dfa
  424db8:	cmp    edx,0x20
  424dbb:	mov    ebx,0x80000000
  424dc0:	jae    0x424ddb
  424dc2:	mov    ecx,edx
  424dc4:	shr    ebx,cl
  424dc6:	lea    ecx,[edx+eax*1+0x4]
  424dca:	not    ebx
  424dcc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424dd0:	dec    BYTE PTR [ecx]
  424dd2:	jne    0x424df7
  424dd4:	mov    ecx,DWORD PTR [ebp+0x8]
  424dd7:	and    DWORD PTR [ecx],ebx
  424dd9:	jmp    0x424df7
  424ddb:	lea    ecx,[edx-0x20]
  424dde:	shr    ebx,cl
  424de0:	lea    ecx,[edx+eax*1+0x4]
  424de4:	not    ebx
  424de6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424ded:	dec    BYTE PTR [ecx]
  424def:	jne    0x424df7
  424df1:	mov    ecx,DWORD PTR [ebp+0x8]
  424df4:	and    DWORD PTR [ecx+0x4],ebx
  424df7:	mov    ebx,DWORD PTR [ebp+0xc]
  424dfa:	mov    edx,DWORD PTR [ebx+0x8]
  424dfd:	mov    ebx,DWORD PTR [ebx+0x4]
  424e00:	mov    ecx,DWORD PTR [ebp-0x4]
  424e03:	add    ecx,DWORD PTR [ebp-0xc]
  424e06:	mov    DWORD PTR [edx+0x4],ebx
  424e09:	mov    edx,DWORD PTR [ebp+0xc]
  424e0c:	mov    ebx,DWORD PTR [edx+0x4]
  424e0f:	mov    edx,DWORD PTR [edx+0x8]
  424e12:	mov    DWORD PTR [ebx+0x8],edx
  424e15:	mov    DWORD PTR [ebp-0x4],ecx
  424e18:	mov    edx,ecx
  424e1a:	sar    edx,0x4
  424e1d:	dec    edx
  424e1e:	cmp    edx,0x3f
  424e21:	jbe    0x424e26
  424e23:	push   0x3f
  424e25:	pop    edx
  424e26:	mov    ebx,DWORD PTR [ebp-0x8]
  424e29:	and    ebx,0x1
  424e2c:	mov    DWORD PTR [ebp-0xc],ebx
  424e2f:	jne    0x424ec4
  424e35:	sub    esi,DWORD PTR [ebp-0x8]
  424e38:	mov    ebx,DWORD PTR [ebp-0x8]
  424e3b:	sar    ebx,0x4
  424e3e:	push   0x3f
  424e40:	mov    DWORD PTR [ebp+0xc],esi
  424e43:	dec    ebx
  424e44:	pop    esi
  424e45:	cmp    ebx,esi
  424e47:	jbe    0x424e4b
  424e49:	mov    ebx,esi
  424e4b:	add    ecx,DWORD PTR [ebp-0x8]
  424e4e:	mov    edx,ecx
  424e50:	sar    edx,0x4
  424e53:	dec    edx
  424e54:	cmp    edx,esi
  424e56:	mov    DWORD PTR [ebp-0x4],ecx
  424e59:	jbe    0x424e5d
  424e5b:	mov    edx,esi
  424e5d:	cmp    ebx,edx
  424e5f:	je     0x424ebf
  424e61:	mov    ecx,DWORD PTR [ebp+0xc]
  424e64:	mov    esi,DWORD PTR [ecx+0x4]
  424e67:	cmp    esi,DWORD PTR [ecx+0x8]
  424e6a:	jne    0x424ea7
  424e6c:	cmp    ebx,0x20
  424e6f:	mov    esi,0x80000000
  424e74:	jae    0x424e8d
  424e76:	mov    ecx,ebx
  424e78:	shr    esi,cl
  424e7a:	not    esi
  424e7c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e80:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e84:	jne    0x424ea7
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	and    DWORD PTR [ecx],esi
  424e8b:	jmp    0x424ea7
  424e8d:	lea    ecx,[ebx-0x20]
  424e90:	shr    esi,cl
  424e92:	not    esi
  424e94:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e9b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e9f:	jne    0x424ea7
  424ea1:	mov    ecx,DWORD PTR [ebp+0x8]
  424ea4:	and    DWORD PTR [ecx+0x4],esi
  424ea7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eaa:	mov    esi,DWORD PTR [ecx+0x8]
  424ead:	mov    ecx,DWORD PTR [ecx+0x4]
  424eb0:	mov    DWORD PTR [esi+0x4],ecx
  424eb3:	mov    ecx,DWORD PTR [ebp+0xc]
  424eb6:	mov    esi,DWORD PTR [ecx+0x4]
  424eb9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ebc:	mov    DWORD PTR [esi+0x8],ecx
  424ebf:	mov    esi,DWORD PTR [ebp+0xc]
  424ec2:	jmp    0x424ec7
  424ec4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ec7:	cmp    DWORD PTR [ebp-0xc],0x0
  424ecb:	jne    0x424ed5
  424ecd:	cmp    ebx,edx
  424ecf:	je     0x424f55
  424ed5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ed8:	lea    ecx,[ecx+edx*8]
  424edb:	mov    ebx,DWORD PTR [ecx+0x4]
  424ede:	mov    DWORD PTR [esi+0x8],ecx
  424ee1:	mov    DWORD PTR [esi+0x4],ebx
  424ee4:	mov    DWORD PTR [ecx+0x4],esi
  424ee7:	mov    ecx,DWORD PTR [esi+0x4]
  424eea:	mov    DWORD PTR [ecx+0x8],esi
  424eed:	mov    ecx,DWORD PTR [esi+0x4]
  424ef0:	cmp    ecx,DWORD PTR [esi+0x8]
  424ef3:	jne    0x424f55
  424ef5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424ef9:	mov    BYTE PTR [ebp+0xf],cl
  424efc:	inc    cl
  424efe:	cmp    edx,0x20
  424f01:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f05:	jae    0x424f2c
  424f07:	cmp    BYTE PTR [ebp+0xf],0x0
  424f0b:	jne    0x424f1b
  424f0d:	mov    ecx,edx
  424f0f:	mov    ebx,0x80000000
  424f14:	shr    ebx,cl
  424f16:	mov    ecx,DWORD PTR [ebp+0x8]
  424f19:	or     DWORD PTR [ecx],ebx
  424f1b:	mov    ebx,0x80000000
  424f20:	mov    ecx,edx
  424f22:	shr    ebx,cl
  424f24:	lea    eax,[eax+edi*4+0x44]
  424f28:	or     DWORD PTR [eax],ebx
  424f2a:	jmp    0x424f55
  424f2c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f30:	jne    0x424f42
  424f32:	lea    ecx,[edx-0x20]
  424f35:	mov    ebx,0x80000000
  424f3a:	shr    ebx,cl
  424f3c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f3f:	or     DWORD PTR [ecx+0x4],ebx
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    edx,0x80000000
  424f4a:	shr    edx,cl
  424f4c:	lea    eax,[eax+edi*4+0xc4]
  424f53:	or     DWORD PTR [eax],edx
  424f55:	mov    eax,DWORD PTR [ebp-0x4]
  424f58:	mov    DWORD PTR [esi],eax
  424f5a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f5e:	mov    eax,DWORD PTR [ebp-0x10]
  424f61:	dec    DWORD PTR [eax]
  424f63:	jne    0x425060
  424f69:	mov    eax,ds:0x45ffd8
  424f6e:	test   eax,eax
  424f70:	je     0x425052
  424f76:	mov    ecx,DWORD PTR ds:0x45fff0
  424f7c:	mov    esi,DWORD PTR ds:0x4280bc
  424f82:	push   0x4000
  424f87:	shl    ecx,0xf
  424f8a:	add    ecx,DWORD PTR [eax+0xc]
  424f8d:	mov    ebx,0x8000
  424f92:	push   ebx
  424f93:	push   ecx
  424f94:	call   esi
  424f96:	mov    ecx,DWORD PTR ds:0x45fff0
  424f9c:	mov    eax,ds:0x45ffd8
  424fa1:	mov    edx,0x80000000
  424fa6:	shr    edx,cl
  424fa8:	or     DWORD PTR [eax+0x8],edx
  424fab:	mov    eax,ds:0x45ffd8
  424fb0:	mov    eax,DWORD PTR [eax+0x10]
  424fb3:	mov    ecx,DWORD PTR ds:0x45fff0
  424fb9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fc1:	mov    eax,ds:0x45ffd8
  424fc6:	mov    eax,DWORD PTR [eax+0x10]
  424fc9:	dec    BYTE PTR [eax+0x43]
  424fcc:	mov    eax,ds:0x45ffd8
  424fd1:	mov    ecx,DWORD PTR [eax+0x10]
  424fd4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fd8:	jne    0x424fe3
  424fda:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fde:	mov    eax,ds:0x45ffd8
  424fe3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424fe7:	jne    0x425052
  424fe9:	push   ebx
  424fea:	push   0x0
  424fec:	push   DWORD PTR [eax+0xc]
  424fef:	call   esi
  424ff1:	mov    eax,ds:0x45ffd8
  424ff6:	push   DWORD PTR [eax+0x10]
  424ff9:	push   0x0
  424ffb:	push   DWORD PTR ds:0x460220
  425001:	call   DWORD PTR ds:0x4280c0
  425007:	mov    eax,ds:0x45ffdc
  42500c:	mov    edx,DWORD PTR ds:0x45ffe0
  425012:	lea    eax,[eax+eax*4]
  425015:	shl    eax,0x2
  425018:	mov    ecx,eax
  42501a:	mov    eax,ds:0x45ffd8
  42501f:	sub    ecx,eax
  425021:	lea    ecx,[ecx+edx*1-0x14]
  425025:	push   ecx
  425026:	lea    ecx,[eax+0x14]
  425029:	push   ecx
  42502a:	push   eax
  42502b:	call   0x426880
  425030:	mov    eax,DWORD PTR [ebp+0x8]
  425033:	add    esp,0xc
  425036:	dec    DWORD PTR ds:0x45ffdc
  42503c:	cmp    eax,DWORD PTR ds:0x45ffd8
  425042:	jbe    0x425048
  425044:	sub    DWORD PTR [ebp+0x8],0x14
  425048:	mov    eax,ds:0x45ffe0
  42504d:	mov    ds:0x45ffe8,eax
  425052:	mov    eax,DWORD PTR [ebp+0x8]
  425055:	mov    ds:0x45ffd8,eax
  42505a:	mov    DWORD PTR ds:0x45fff0,edi
  425060:	pop    ebx
  425061:	pop    edi
  425062:	pop    esi
  425063:	leave  
  425064:	ret    
  425065:	mov    eax,ds:0x45ffdc
  42506a:	mov    ecx,DWORD PTR ds:0x45ffec
  425070:	push   edi
  425071:	xor    edi,edi
  425073:	cmp    eax,ecx
  425075:	jne    0x4250ab
  425077:	lea    eax,[ecx+ecx*4+0x50]
  42507b:	shl    eax,0x2
  42507e:	push   eax
  42507f:	push   DWORD PTR ds:0x45ffe0
  425085:	push   edi
  425086:	push   DWORD PTR ds:0x460220
  42508c:	call   DWORD PTR ds:0x4280e0
  425092:	cmp    eax,edi
  425094:	jne    0x42509a
  425096:	xor    eax,eax
  425098:	pop    edi
  425099:	ret    
  42509a:	add    DWORD PTR ds:0x45ffec,0x10
  4250a1:	mov    ds:0x45ffe0,eax
  4250a6:	mov    eax,ds:0x45ffdc
  4250ab:	mov    ecx,DWORD PTR ds:0x45ffe0
  4250b1:	push   esi
  4250b2:	push   0x41c4
  4250b7:	push   0x8
  4250b9:	push   DWORD PTR ds:0x460220
  4250bf:	lea    eax,[eax+eax*4]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	call   DWORD PTR ds:0x4280d8
  4250cb:	cmp    eax,edi
  4250cd:	mov    DWORD PTR [esi+0x10],eax
  4250d0:	jne    0x4250d6
  4250d2:	xor    eax,eax
  4250d4:	jmp    0x425119
  4250d6:	push   0x4
  4250d8:	push   0x2000
  4250dd:	push   0x100000
  4250e2:	push   edi
  4250e3:	call   DWORD PTR ds:0x42802c
  4250e9:	cmp    eax,edi
  4250eb:	mov    DWORD PTR [esi+0xc],eax
  4250ee:	jne    0x425102
  4250f0:	push   DWORD PTR [esi+0x10]
  4250f3:	push   edi
  4250f4:	push   DWORD PTR ds:0x460220
  4250fa:	call   DWORD PTR ds:0x4280c0
  425100:	jmp    0x4250d2
  425102:	or     DWORD PTR [esi+0x8],0xffffffff
  425106:	mov    DWORD PTR [esi],edi
  425108:	mov    DWORD PTR [esi+0x4],edi
  42510b:	inc    DWORD PTR ds:0x45ffdc
  425111:	mov    eax,DWORD PTR [esi+0x10]
  425114:	or     DWORD PTR [eax],0xffffffff
  425117:	mov    eax,esi
  425119:	pop    esi
  42511a:	pop    edi
  42511b:	ret    
  42511c:	push   ebp
  42511d:	mov    ebp,esp
  42511f:	push   ecx
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp+0x8]
  425124:	mov    eax,DWORD PTR [ecx+0x8]
  425127:	push   ebx
  425128:	push   esi
  425129:	mov    esi,DWORD PTR [ecx+0x10]
  42512c:	push   edi
  42512d:	xor    ebx,ebx
  42512f:	jmp    0x425134
  425131:	shl    eax,1
  425133:	inc    ebx
  425134:	test   eax,eax
  425136:	jge    0x425131
  425138:	mov    eax,ebx
  42513a:	imul   eax,eax,0x204
  425140:	lea    eax,[eax+esi*1+0x144]
  425147:	push   0x3f
  425149:	mov    DWORD PTR [ebp-0x8],eax
  42514c:	pop    edx
  42514d:	mov    DWORD PTR [eax+0x8],eax
  425150:	mov    DWORD PTR [eax+0x4],eax
  425153:	add    eax,0x8
  425156:	dec    edx
  425157:	jne    0x42514d
  425159:	push   0x4
  42515b:	mov    edi,ebx
  42515d:	push   0x1000
  425162:	shl    edi,0xf
  425165:	add    edi,DWORD PTR [ecx+0xc]
  425168:	push   0x8000
  42516d:	push   edi
  42516e:	call   DWORD PTR ds:0x42802c
  425174:	test   eax,eax
  425176:	jne    0x425180
  425178:	or     eax,0xffffffff
  42517b:	jmp    0x42521d
  425180:	lea    edx,[edi+0x7000]
  425186:	cmp    edi,edx
  425188:	mov    DWORD PTR [ebp-0x4],edx
  42518b:	ja     0x4251d0
  42518d:	mov    ecx,edx
  42518f:	sub    ecx,edi
  425191:	shr    ecx,0xc
  425194:	lea    eax,[edi+0x10]
  425197:	inc    ecx
  425198:	or     DWORD PTR [eax-0x8],0xffffffff
  42519c:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251a3:	lea    edx,[eax+0xffc]
  4251a9:	mov    DWORD PTR [eax],edx
  4251ab:	lea    edx,[eax-0x1004]
  4251b1:	mov    DWORD PTR [eax-0x4],0xff0
  4251b8:	mov    DWORD PTR [eax+0x4],edx
  4251bb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251c5:	add    eax,0x1000
  4251ca:	dec    ecx
  4251cb:	jne    0x425198
  4251cd:	mov    edx,DWORD PTR [ebp-0x4]
  4251d0:	mov    eax,DWORD PTR [ebp-0x8]
  4251d3:	add    eax,0x1f8
  4251d8:	lea    ecx,[edi+0xc]
  4251db:	mov    DWORD PTR [eax+0x4],ecx
  4251de:	mov    DWORD PTR [ecx+0x8],eax
  4251e1:	lea    ecx,[edx+0xc]
  4251e4:	mov    DWORD PTR [eax+0x8],ecx
  4251e7:	mov    DWORD PTR [ecx+0x4],eax
  4251ea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ef:	xor    edi,edi
  4251f1:	inc    edi
  4251f2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  4251f9:	mov    al,BYTE PTR [esi+0x43]
  4251fc:	mov    cl,al
  4251fe:	inc    cl
  425200:	test   al,al
  425202:	mov    eax,DWORD PTR [ebp+0x8]
  425205:	mov    BYTE PTR [esi+0x43],cl
  425208:	jne    0x42520d
  42520a:	or     DWORD PTR [eax+0x4],edi
  42520d:	mov    edx,0x80000000
  425212:	mov    ecx,ebx
  425214:	shr    edx,cl
  425216:	not    edx
  425218:	and    DWORD PTR [eax+0x8],edx
  42521b:	mov    eax,ebx
  42521d:	pop    edi
  42521e:	pop    esi
  42521f:	pop    ebx
  425220:	leave  
  425221:	ret    
  425222:	push   ebp
  425223:	mov    ebp,esp
  425225:	sub    esp,0xc
  425228:	mov    ecx,DWORD PTR [ebp+0x8]
  42522b:	mov    eax,DWORD PTR [ecx+0x10]
  42522e:	push   ebx
  42522f:	push   esi
  425230:	mov    esi,DWORD PTR [ebp+0x10]
  425233:	push   edi
  425234:	mov    edi,DWORD PTR [ebp+0xc]
  425237:	mov    edx,edi
  425239:	sub    edx,DWORD PTR [ecx+0xc]
  42523c:	add    esi,0x17
  42523f:	shr    edx,0xf
  425242:	mov    ecx,edx
  425244:	imul   ecx,ecx,0x204
  42524a:	lea    ecx,[ecx+eax*1+0x144]
  425251:	mov    DWORD PTR [ebp-0xc],ecx
  425254:	mov    ecx,DWORD PTR [edi-0x4]
  425257:	and    esi,0xfffffff0
  42525a:	dec    ecx
  42525b:	cmp    esi,ecx
  42525d:	lea    edi,[ecx+edi*1-0x4]
  425261:	mov    ebx,DWORD PTR [edi]
  425263:	mov    DWORD PTR [ebp+0x10],ecx
  425266:	mov    DWORD PTR [ebp-0x4],ebx
  425269:	jle    0x4253c4
  42526f:	test   bl,0x1
  425272:	jne    0x4253bd
  425278:	add    ebx,ecx
  42527a:	cmp    esi,ebx
  42527c:	jg     0x4253bd
  425282:	mov    ecx,DWORD PTR [ebp-0x4]
  425285:	sar    ecx,0x4
  425288:	dec    ecx
  425289:	cmp    ecx,0x3f
  42528c:	mov    DWORD PTR [ebp-0x8],ecx
  42528f:	jbe    0x425297
  425291:	push   0x3f
  425293:	pop    ecx
  425294:	mov    DWORD PTR [ebp-0x8],ecx
  425297:	mov    ebx,DWORD PTR [edi+0x4]
  42529a:	cmp    ebx,DWORD PTR [edi+0x8]
  42529d:	jne    0x4252e2
  42529f:	cmp    ecx,0x20
  4252a2:	mov    ebx,0x80000000
  4252a7:	jae    0x4252c3
  4252a9:	shr    ebx,cl
  4252ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4252ae:	lea    ecx,[ecx+eax*1+0x4]
  4252b2:	not    ebx
  4252b4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252b8:	dec    BYTE PTR [ecx]
  4252ba:	jne    0x4252e2
  4252bc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252bf:	and    DWORD PTR [ecx],ebx
  4252c1:	jmp    0x4252e2
  4252c3:	add    ecx,0xffffffe0
  4252c6:	shr    ebx,cl
  4252c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252cb:	lea    ecx,[ecx+eax*1+0x4]
  4252cf:	not    ebx
  4252d1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252d8:	dec    BYTE PTR [ecx]
  4252da:	jne    0x4252e2
  4252dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252df:	and    DWORD PTR [ecx+0x4],ebx
  4252e2:	mov    ecx,DWORD PTR [edi+0x8]
  4252e5:	mov    ebx,DWORD PTR [edi+0x4]
  4252e8:	mov    DWORD PTR [ecx+0x4],ebx
  4252eb:	mov    ecx,DWORD PTR [edi+0x4]
  4252ee:	mov    edi,DWORD PTR [edi+0x8]
  4252f1:	mov    DWORD PTR [ecx+0x8],edi
  4252f4:	mov    ecx,DWORD PTR [ebp+0x10]
  4252f7:	sub    ecx,esi
  4252f9:	add    DWORD PTR [ebp-0x4],ecx
  4252fc:	cmp    DWORD PTR [ebp-0x4],0x0
  425300:	jle    0x4253ab
  425306:	mov    edi,DWORD PTR [ebp-0x4]
  425309:	mov    ecx,DWORD PTR [ebp+0xc]
  42530c:	sar    edi,0x4
  42530f:	dec    edi
  425310:	cmp    edi,0x3f
  425313:	lea    ecx,[ecx+esi*1-0x4]
  425317:	jbe    0x42531c
  425319:	push   0x3f
  42531b:	pop    edi
  42531c:	mov    ebx,DWORD PTR [ebp-0xc]
  42531f:	lea    ebx,[ebx+edi*8]
  425322:	mov    DWORD PTR [ebp+0x10],ebx
  425325:	mov    ebx,DWORD PTR [ebx+0x4]
  425328:	mov    DWORD PTR [ecx+0x4],ebx
  42532b:	mov    ebx,DWORD PTR [ebp+0x10]
  42532e:	mov    DWORD PTR [ecx+0x8],ebx
  425331:	mov    DWORD PTR [ebx+0x4],ecx
  425334:	mov    ebx,DWORD PTR [ecx+0x4]
  425337:	mov    DWORD PTR [ebx+0x8],ecx
  42533a:	mov    ebx,DWORD PTR [ecx+0x4]
  42533d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425340:	jne    0x425399
  425342:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425346:	mov    BYTE PTR [ebp+0x13],cl
  425349:	inc    cl
  42534b:	cmp    edi,0x20
  42534e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425352:	jae    0x425370
  425354:	cmp    BYTE PTR [ebp+0x13],0x0
  425358:	jne    0x425368
  42535a:	mov    ecx,edi
  42535c:	mov    ebx,0x80000000
  425361:	shr    ebx,cl
  425363:	mov    ecx,DWORD PTR [ebp+0x8]
  425366:	or     DWORD PTR [ecx],ebx
  425368:	lea    eax,[eax+edx*4+0x44]
  42536c:	mov    ecx,edi
  42536e:	jmp    0x425390
  425370:	cmp    BYTE PTR [ebp+0x13],0x0
  425374:	jne    0x425386
  425376:	lea    ecx,[edi-0x20]
  425379:	mov    ebx,0x80000000
  42537e:	shr    ebx,cl
  425380:	mov    ecx,DWORD PTR [ebp+0x8]
  425383:	or     DWORD PTR [ecx+0x4],ebx
  425386:	lea    eax,[eax+edx*4+0xc4]
  42538d:	lea    ecx,[edi-0x20]
  425390:	mov    edx,0x80000000
  425395:	shr    edx,cl
  425397:	or     DWORD PTR [eax],edx
  425399:	mov    edx,DWORD PTR [ebp+0xc]
  42539c:	mov    ecx,DWORD PTR [ebp-0x4]
  42539f:	lea    eax,[edx+esi*1-0x4]
  4253a3:	mov    DWORD PTR [eax],ecx
  4253a5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253a9:	jmp    0x4253ae
  4253ab:	mov    edx,DWORD PTR [ebp+0xc]
  4253ae:	lea    eax,[esi+0x1]
  4253b1:	mov    DWORD PTR [edx-0x4],eax
  4253b4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253b8:	jmp    0x4254f9
  4253bd:	xor    eax,eax
  4253bf:	jmp    0x4254fc
  4253c4:	jge    0x4254f9
  4253ca:	mov    ebx,DWORD PTR [ebp+0xc]
  4253cd:	sub    DWORD PTR [ebp+0x10],esi
  4253d0:	lea    ecx,[esi+0x1]
  4253d3:	mov    DWORD PTR [ebx-0x4],ecx
  4253d6:	lea    ebx,[ebx+esi*1-0x4]
  4253da:	mov    esi,DWORD PTR [ebp+0x10]
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	mov    DWORD PTR [ebp+0xc],ebx
  4253e7:	mov    DWORD PTR [ebx-0x4],ecx
  4253ea:	jbe    0x4253ef
  4253ec:	push   0x3f
  4253ee:	pop    esi
  4253ef:	test   BYTE PTR [ebp-0x4],0x1
  4253f3:	jne    0x425479
  4253f9:	mov    esi,DWORD PTR [ebp-0x4]
  4253fc:	sar    esi,0x4
  4253ff:	dec    esi
  425400:	cmp    esi,0x3f
  425403:	jbe    0x425408
  425405:	push   0x3f
  425407:	pop    esi
  425408:	mov    ecx,DWORD PTR [edi+0x4]
  42540b:	cmp    ecx,DWORD PTR [edi+0x8]
  42540e:	jne    0x425452
  425410:	cmp    esi,0x20
  425413:	mov    ebx,0x80000000
  425418:	jae    0x425433
  42541a:	mov    ecx,esi
  42541c:	shr    ebx,cl
  42541e:	lea    esi,[esi+eax*1+0x4]
  425422:	not    ebx
  425424:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425428:	dec    BYTE PTR [esi]
  42542a:	jne    0x42544f
  42542c:	mov    ecx,DWORD PTR [ebp+0x8]
  42542f:	and    DWORD PTR [ecx],ebx
  425431:	jmp    0x42544f
  425433:	lea    ecx,[esi-0x20]
  425436:	shr    ebx,cl
  425438:	lea    ecx,[esi+eax*1+0x4]
  42543c:	not    ebx
  42543e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425445:	dec    BYTE PTR [ecx]
  425447:	jne    0x42544f
  425449:	mov    ecx,DWORD PTR [ebp+0x8]
  42544c:	and    DWORD PTR [ecx+0x4],ebx
  42544f:	mov    ebx,DWORD PTR [ebp+0xc]
  425452:	mov    ecx,DWORD PTR [edi+0x8]
  425455:	mov    esi,DWORD PTR [edi+0x4]
  425458:	mov    DWORD PTR [ecx+0x4],esi
  42545b:	mov    esi,DWORD PTR [edi+0x8]
  42545e:	mov    ecx,DWORD PTR [edi+0x4]
  425461:	mov    DWORD PTR [ecx+0x8],esi
  425464:	mov    esi,DWORD PTR [ebp+0x10]
  425467:	add    esi,DWORD PTR [ebp-0x4]
  42546a:	mov    DWORD PTR [ebp+0x10],esi
  42546d:	sar    esi,0x4
  425470:	dec    esi
  425471:	cmp    esi,0x3f
  425474:	jbe    0x425479
  425476:	push   0x3f
  425478:	pop    esi
  425479:	mov    ecx,DWORD PTR [ebp-0xc]
  42547c:	lea    ecx,[ecx+esi*8]
  42547f:	mov    edi,DWORD PTR [ecx+0x4]
  425482:	mov    DWORD PTR [ebx+0x8],ecx
  425485:	mov    DWORD PTR [ebx+0x4],edi
  425488:	mov    DWORD PTR [ecx+0x4],ebx
  42548b:	mov    ecx,DWORD PTR [ebx+0x4]
  42548e:	mov    DWORD PTR [ecx+0x8],ebx
  425491:	mov    ecx,DWORD PTR [ebx+0x4]
  425494:	cmp    ecx,DWORD PTR [ebx+0x8]
  425497:	jne    0x4254f0
  425499:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42549d:	mov    BYTE PTR [ebp+0xf],cl
  4254a0:	inc    cl
  4254a2:	cmp    esi,0x20
  4254a5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254a9:	jae    0x4254c7
  4254ab:	cmp    BYTE PTR [ebp+0xf],0x0
  4254af:	jne    0x4254bf
  4254b1:	mov    ecx,esi
  4254b3:	mov    edi,0x80000000
  4254b8:	shr    edi,cl
  4254ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4254bd:	or     DWORD PTR [ecx],edi
  4254bf:	lea    eax,[eax+edx*4+0x44]
  4254c3:	mov    ecx,esi
  4254c5:	jmp    0x4254e7
  4254c7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254cb:	jne    0x4254dd
  4254cd:	lea    ecx,[esi-0x20]
  4254d0:	mov    edi,0x80000000
  4254d5:	shr    edi,cl
  4254d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254da:	or     DWORD PTR [ecx+0x4],edi
  4254dd:	lea    eax,[eax+edx*4+0xc4]
  4254e4:	lea    ecx,[esi-0x20]
  4254e7:	mov    edx,0x80000000
  4254ec:	shr    edx,cl
  4254ee:	or     DWORD PTR [eax],edx
  4254f0:	mov    eax,DWORD PTR [ebp+0x10]
  4254f3:	mov    DWORD PTR [ebx],eax
  4254f5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  4254f9:	xor    eax,eax
  4254fb:	inc    eax
  4254fc:	pop    edi
  4254fd:	pop    esi
  4254fe:	pop    ebx
  4254ff:	leave  
  425500:	ret    
  425501:	push   ebp
  425502:	mov    ebp,esp
  425504:	sub    esp,0x14
  425507:	mov    ecx,DWORD PTR [ebp+0x8]
  42550a:	mov    eax,ds:0x45ffdc
  42550f:	mov    edx,DWORD PTR ds:0x45ffe0
  425515:	add    ecx,0x17
  425518:	and    ecx,0xfffffff0
  42551b:	push   ebx
  42551c:	mov    DWORD PTR [ebp-0x10],ecx
  42551f:	sar    ecx,0x4
  425522:	push   esi
  425523:	lea    eax,[eax+eax*4]
  425526:	push   edi
  425527:	dec    ecx
  425528:	cmp    ecx,0x20
  42552b:	lea    edi,[edx+eax*4]
  42552e:	mov    DWORD PTR [ebp-0x4],edi
  425531:	jge    0x42553e
  425533:	or     esi,0xffffffff
  425536:	shr    esi,cl
  425538:	or     DWORD PTR [ebp-0x8],0xffffffff
  42553c:	jmp    0x42554b
  42553e:	add    ecx,0xffffffe0
  425541:	or     eax,0xffffffff
  425544:	xor    esi,esi
  425546:	shr    eax,cl
  425548:	mov    DWORD PTR [ebp-0x8],eax
  42554b:	mov    eax,ds:0x45ffe8
  425550:	mov    ebx,eax
  425552:	mov    DWORD PTR [ebp-0xc],esi
  425555:	cmp    ebx,edi
  425557:	jmp    0x42556d
  425559:	mov    ecx,DWORD PTR [ebx+0x4]
  42555c:	mov    edi,DWORD PTR [ebx]
  42555e:	and    ecx,DWORD PTR [ebp-0x8]
  425561:	and    edi,esi
  425563:	or     ecx,edi
  425565:	jne    0x425572
  425567:	add    ebx,0x14
  42556a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42556d:	mov    DWORD PTR [ebp+0x8],ebx
  425570:	jb     0x425559
  425572:	cmp    ebx,DWORD PTR [ebp-0x4]
  425575:	jne    0x42559b
  425577:	mov    ebx,edx
  425579:	jmp    0x42558c
  42557b:	mov    ecx,DWORD PTR [ebx+0x4]
  42557e:	mov    edi,DWORD PTR [ebx]
  425580:	and    ecx,DWORD PTR [ebp-0x8]
  425583:	and    edi,esi
  425585:	or     ecx,edi
  425587:	jne    0x425593
  425589:	add    ebx,0x14
  42558c:	cmp    ebx,eax
  42558e:	mov    DWORD PTR [ebp+0x8],ebx
  425591:	jb     0x42557b
  425593:	cmp    ebx,eax
  425595:	je     0x42562f
  42559b:	mov    DWORD PTR ds:0x45ffe8,ebx
  4255a1:	mov    eax,DWORD PTR [ebx+0x10]
  4255a4:	mov    edx,DWORD PTR [eax]
  4255a6:	cmp    edx,0xffffffff
  4255a9:	mov    DWORD PTR [ebp-0x4],edx
  4255ac:	je     0x4255c2
  4255ae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255b5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255b9:	and    ecx,DWORD PTR [ebp-0x8]
  4255bc:	and    edi,esi
  4255be:	or     ecx,edi
  4255c0:	jne    0x4255f8
  4255c2:	mov    edx,DWORD PTR [eax+0xc4]
  4255c8:	and    edx,DWORD PTR [ebp-0x8]
  4255cb:	and    DWORD PTR [ebp-0x4],0x0
  4255cf:	lea    ecx,[eax+0x44]
  4255d2:	mov    esi,DWORD PTR [ecx]
  4255d4:	and    esi,DWORD PTR [ebp-0xc]
  4255d7:	or     edx,esi
  4255d9:	mov    esi,DWORD PTR [ebp-0xc]
  4255dc:	jne    0x4255f5
  4255de:	mov    edx,DWORD PTR [ecx+0x84]
  4255e4:	and    edx,DWORD PTR [ebp-0x8]
  4255e7:	inc    DWORD PTR [ebp-0x4]
  4255ea:	add    ecx,0x4
  4255ed:	mov    edi,DWORD PTR [ecx]
  4255ef:	and    edi,esi
  4255f1:	or     edx,edi
  4255f3:	je     0x4255de
  4255f5:	mov    edx,DWORD PTR [ebp-0x4]
  4255f8:	mov    ecx,edx
  4255fa:	imul   ecx,ecx,0x204
  425600:	lea    ecx,[ecx+eax*1+0x144]
  425607:	mov    DWORD PTR [ebp-0xc],ecx
  42560a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42560e:	xor    edi,edi
  425610:	and    ecx,esi
  425612:	jne    0x425681
  425614:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42561b:	and    ecx,DWORD PTR [ebp-0x8]
  42561e:	push   0x20
  425620:	pop    edi
  425621:	jmp    0x425681
  425623:	cmp    DWORD PTR [ebx+0x8],0x0
  425627:	jne    0x425634
  425629:	add    ebx,0x14
  42562c:	mov    DWORD PTR [ebp+0x8],ebx
  42562f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425632:	jb     0x425623
  425634:	cmp    ebx,DWORD PTR [ebp-0x4]
  425637:	jne    0x42565f
  425639:	mov    ebx,edx
  42563b:	jmp    0x425646
  42563d:	cmp    DWORD PTR [ebx+0x8],0x0
  425641:	jne    0x42564d
  425643:	add    ebx,0x14
  425646:	cmp    ebx,eax
  425648:	mov    DWORD PTR [ebp+0x8],ebx
  42564b:	jb     0x42563d
  42564d:	cmp    ebx,eax
  42564f:	jne    0x42565f
  425651:	call   0x425065
  425656:	mov    ebx,eax
  425658:	test   ebx,ebx
  42565a:	mov    DWORD PTR [ebp+0x8],ebx
  42565d:	je     0x425677
  42565f:	push   ebx
  425660:	call   0x42511c
  425665:	pop    ecx
  425666:	mov    ecx,DWORD PTR [ebx+0x10]
  425669:	mov    DWORD PTR [ecx],eax
  42566b:	mov    eax,DWORD PTR [ebx+0x10]
  42566e:	cmp    DWORD PTR [eax],0xffffffff
  425671:	jne    0x42559b
  425677:	xor    eax,eax
  425679:	jmp    0x4257f8
  42567e:	shl    ecx,1
  425680:	inc    edi
  425681:	test   ecx,ecx
  425683:	jge    0x42567e
  425685:	mov    ecx,DWORD PTR [ebp-0xc]
  425688:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42568c:	mov    ecx,DWORD PTR [edx]
  42568e:	sub    ecx,DWORD PTR [ebp-0x10]
  425691:	mov    esi,ecx
  425693:	sar    esi,0x4
  425696:	dec    esi
  425697:	cmp    esi,0x3f
  42569a:	mov    DWORD PTR [ebp-0x8],ecx
  42569d:	jle    0x4256a2
  42569f:	push   0x3f
  4256a1:	pop    esi
  4256a2:	cmp    esi,edi
  4256a4:	je     0x4257ab
  4256aa:	mov    ecx,DWORD PTR [edx+0x4]
  4256ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b0:	jne    0x42570e
  4256b2:	cmp    edi,0x20
  4256b5:	mov    ebx,0x80000000
  4256ba:	jge    0x4256e2
  4256bc:	mov    ecx,edi
  4256be:	shr    ebx,cl
  4256c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256c3:	lea    edi,[eax+edi*1+0x4]
  4256c7:	not    ebx
  4256c9:	mov    DWORD PTR [ebp-0x14],ebx
  4256cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256d4:	dec    BYTE PTR [edi]
  4256d6:	jne    0x42570b
  4256d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256db:	mov    ebx,DWORD PTR [ebp+0x8]
  4256de:	and    DWORD PTR [ebx],ecx
  4256e0:	jmp    0x42570e
  4256e2:	lea    ecx,[edi-0x20]
  4256e5:	shr    ebx,cl
  4256e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256ea:	lea    ecx,[eax+ecx*4+0xc4]
  4256f1:	lea    edi,[eax+edi*1+0x4]
  4256f5:	not    ebx
  4256f7:	and    DWORD PTR [ecx],ebx
  4256f9:	dec    BYTE PTR [edi]
  4256fb:	mov    DWORD PTR [ebp-0x14],ebx
  4256fe:	jne    0x42570b
  425700:	mov    ebx,DWORD PTR [ebp+0x8]
  425703:	mov    ecx,DWORD PTR [ebp-0x14]
  425706:	and    DWORD PTR [ebx+0x4],ecx
  425709:	jmp    0x42570e
  42570b:	mov    ebx,DWORD PTR [ebp+0x8]
  42570e:	cmp    DWORD PTR [ebp-0x8],0x0
  425712:	mov    ecx,DWORD PTR [edx+0x8]
  425715:	mov    edi,DWORD PTR [edx+0x4]
  425718:	mov    DWORD PTR [ecx+0x4],edi
  42571b:	mov    ecx,DWORD PTR [edx+0x4]
  42571e:	mov    edi,DWORD PTR [edx+0x8]
  425721:	mov    DWORD PTR [ecx+0x8],edi
  425724:	je     0x4257b7
  42572a:	mov    ecx,DWORD PTR [ebp-0xc]
  42572d:	lea    ecx,[ecx+esi*8]
  425730:	mov    edi,DWORD PTR [ecx+0x4]
  425733:	mov    DWORD PTR [edx+0x8],ecx
  425736:	mov    DWORD PTR [edx+0x4],edi
  425739:	mov    DWORD PTR [ecx+0x4],edx
  42573c:	mov    ecx,DWORD PTR [edx+0x4]
  42573f:	mov    DWORD PTR [ecx+0x8],edx
  425742:	mov    ecx,DWORD PTR [edx+0x4]
  425745:	cmp    ecx,DWORD PTR [edx+0x8]
  425748:	jne    0x4257a8
  42574a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42574e:	mov    BYTE PTR [ebp+0xb],cl
  425751:	inc    cl
  425753:	cmp    esi,0x20
  425756:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42575a:	jge    0x42577f
  42575c:	cmp    BYTE PTR [ebp+0xb],0x0
  425760:	jne    0x42576d
  425762:	mov    edi,0x80000000
  425767:	mov    ecx,esi
  425769:	shr    edi,cl
  42576b:	or     DWORD PTR [ebx],edi
  42576d:	mov    ecx,esi
  42576f:	mov    edi,0x80000000
  425774:	shr    edi,cl
  425776:	mov    ecx,DWORD PTR [ebp-0x4]
  425779:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42577d:	jmp    0x4257a8
  42577f:	cmp    BYTE PTR [ebp+0xb],0x0
  425783:	jne    0x425792
  425785:	lea    ecx,[esi-0x20]
  425788:	mov    edi,0x80000000
  42578d:	shr    edi,cl
  42578f:	or     DWORD PTR [ebx+0x4],edi
  425792:	mov    ecx,DWORD PTR [ebp-0x4]
  425795:	lea    edi,[eax+ecx*4+0xc4]
  42579c:	lea    ecx,[esi-0x20]
  42579f:	mov    esi,0x80000000
  4257a4:	shr    esi,cl
  4257a6:	or     DWORD PTR [edi],esi
  4257a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ab:	test   ecx,ecx
  4257ad:	je     0x4257ba
  4257af:	mov    DWORD PTR [edx],ecx
  4257b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257b5:	jmp    0x4257ba
  4257b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ba:	mov    esi,DWORD PTR [ebp-0x10]
  4257bd:	add    edx,ecx
  4257bf:	lea    ecx,[esi+0x1]
  4257c2:	mov    DWORD PTR [edx],ecx
  4257c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257c8:	mov    esi,DWORD PTR [ebp-0xc]
  4257cb:	mov    ecx,DWORD PTR [esi]
  4257cd:	test   ecx,ecx
  4257cf:	lea    edi,[ecx+0x1]
  4257d2:	mov    DWORD PTR [esi],edi
  4257d4:	jne    0x4257f0
  4257d6:	cmp    ebx,DWORD PTR ds:0x45ffd8
  4257dc:	jne    0x4257f0
  4257de:	mov    ecx,DWORD PTR [ebp-0x4]
  4257e1:	cmp    ecx,DWORD PTR ds:0x45fff0
  4257e7:	jne    0x4257f0
  4257e9:	and    DWORD PTR ds:0x45ffd8,0x0
  4257f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f3:	mov    DWORD PTR [eax],ecx
  4257f5:	lea    eax,[edx+0x4]
  4257f8:	pop    edi
  4257f9:	pop    esi
  4257fa:	pop    ebx
  4257fb:	leave  
  4257fc:	ret    
  4257fd:	int3   
  4257fe:	int3   
  4257ff:	int3   
  425800:	push   esi
  425801:	inc    ebx
  425802:	xor    dh,BYTE PTR [eax]
  425804:	pop    eax
  425805:	inc    ebx
  425806:	xor    BYTE PTR [eax],dh
  425808:	push   ebp
  425809:	mov    ebp,esp
  42580b:	sub    esp,0x8
  42580e:	push   ebx
  42580f:	push   esi
  425810:	push   edi
  425811:	push   ebp
  425812:	cld    
  425813:	mov    ebx,DWORD PTR [ebp+0xc]
  425816:	mov    eax,DWORD PTR [ebp+0x8]
  425819:	test   DWORD PTR [eax+0x4],0x6
  425820:	jne    0x4258a8
  425826:	mov    DWORD PTR [ebp-0x8],eax
  425829:	mov    eax,DWORD PTR [ebp+0x10]
  42582c:	mov    DWORD PTR [ebp-0x4],eax
  42582f:	lea    eax,[ebp-0x8]
  425832:	mov    DWORD PTR [ebx-0x4],eax
  425835:	mov    esi,DWORD PTR [ebx+0xc]
  425838:	mov    edi,DWORD PTR [ebx+0x8]
  42583b:	cmp    esi,0xffffffff
  42583e:	je     0x4258a1
  425840:	lea    ecx,[esi+esi*2]
  425843:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425848:	je     0x42588f
  42584a:	push   esi
  42584b:	push   ebp
  42584c:	lea    ebp,[ebx+0x10]
  42584f:	call   DWORD PTR [edi+ecx*4+0x4]
  425853:	pop    ebp
  425854:	pop    esi
  425855:	mov    ebx,DWORD PTR [ebp+0xc]
  425858:	or     eax,eax
  42585a:	je     0x42588f
  42585c:	js     0x42589a
  42585e:	mov    edi,DWORD PTR [ebx+0x8]
  425861:	push   ebx
  425862:	call   0x426790
  425867:	add    esp,0x4
  42586a:	lea    ebp,[ebx+0x10]
  42586d:	push   esi
  42586e:	push   ebx
  42586f:	call   0x4267d2
  425874:	add    esp,0x8
  425877:	lea    ecx,[esi+esi*2]
  42587a:	push   0x1
  42587c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425880:	call   0x426866
  425885:	mov    eax,DWORD PTR [edi+ecx*4]
  425888:	mov    DWORD PTR [ebx+0xc],eax
  42588b:	call   DWORD PTR [edi+ecx*4+0x8]
  42588f:	mov    edi,DWORD PTR [ebx+0x8]
  425892:	lea    ecx,[esi+esi*2]
  425895:	mov    esi,DWORD PTR [edi+ecx*4]
  425898:	jmp    0x42583b
  42589a:	mov    eax,0x0
  42589f:	jmp    0x4258bd
  4258a1:	mov    eax,0x1
  4258a6:	jmp    0x4258bd
  4258a8:	push   ebp
  4258a9:	lea    ebp,[ebx+0x10]
  4258ac:	push   0xffffffff
  4258ae:	push   ebx
  4258af:	call   0x4267d2
  4258b4:	add    esp,0x8
  4258b7:	pop    ebp
  4258b8:	mov    eax,0x1
  4258bd:	pop    ebp
  4258be:	pop    edi
  4258bf:	pop    esi
  4258c0:	pop    ebx
  4258c1:	mov    esp,ebp
  4258c3:	pop    ebp
  4258c4:	ret    
  4258c5:	push   ebp
  4258c6:	mov    ecx,DWORD PTR [esp+0x8]
  4258ca:	mov    ebp,DWORD PTR [ecx]
  4258cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258cf:	push   eax
  4258d0:	mov    eax,DWORD PTR [ecx+0x18]
  4258d3:	push   eax
  4258d4:	call   0x4267d2
  4258d9:	add    esp,0x8
  4258dc:	pop    ebp
  4258dd:	ret    0x4
  4258e0:	call   0x4237f3
  4258e5:	add    eax,0x8
  4258e8:	ret    
  4258e9:	push   0x14
  4258eb:	push   0x4287a8
  4258f0:	call   0x423940
  4258f5:	mov    edi,DWORD PTR [ebp+0x8]
  4258f8:	xor    ebx,ebx
  4258fa:	cmp    edi,ebx
  4258fc:	jne    0x42590c
  4258fe:	push   DWORD PTR [ebp+0xc]
  425901:	call   0x424662
  425906:	pop    ecx
  425907:	jmp    0x425a90
  42590c:	mov    esi,DWORD PTR [ebp+0xc]
  42590f:	cmp    esi,ebx
  425911:	jne    0x42591f
  425913:	push   edi
  425914:	call   0x42454a
  425919:	pop    ecx
  42591a:	jmp    0x425a8e
  42591f:	cmp    DWORD PTR ds:0x460224,0x3
  425926:	jne    0x425a5a
  42592c:	mov    DWORD PTR [ebp-0x1c],ebx
  42592f:	cmp    esi,0xffffffe0
  425932:	ja     0x425a29
  425938:	push   0x4
  42593a:	call   0x423aff
  42593f:	pop    ecx
  425940:	mov    DWORD PTR [ebp-0x4],ebx
  425943:	push   edi
  425944:	call   0x424d22
  425949:	pop    ecx
  42594a:	mov    DWORD PTR [ebp-0x20],eax
  42594d:	cmp    eax,ebx
  42594f:	je     0x4259f9
  425955:	cmp    esi,DWORD PTR ds:0x45ffe4
  42595b:	ja     0x4259a9
  42595d:	push   esi
  42595e:	push   edi
  42595f:	push   eax
  425960:	call   0x425222
  425965:	add    esp,0xc
  425968:	test   eax,eax
  42596a:	je     0x425971
  42596c:	mov    DWORD PTR [ebp-0x1c],edi
  42596f:	jmp    0x4259a9
  425971:	push   esi
  425972:	call   0x425501
  425977:	pop    ecx
  425978:	mov    DWORD PTR [ebp-0x1c],eax
  42597b:	cmp    eax,ebx
  42597d:	je     0x4259a9
  42597f:	mov    eax,DWORD PTR [edi-0x4]
  425982:	dec    eax
  425983:	mov    DWORD PTR [ebp-0x24],eax
  425986:	cmp    eax,esi
  425988:	jb     0x42598c
  42598a:	mov    eax,esi
  42598c:	push   eax
  42598d:	push   edi
  42598e:	push   DWORD PTR [ebp-0x1c]
  425991:	call   0x424680
  425996:	push   edi
  425997:	call   0x424d22
  42599c:	mov    DWORD PTR [ebp-0x20],eax
  42599f:	push   edi
  4259a0:	push   eax
  4259a1:	call   0x424d4d
  4259a6:	add    esp,0x18
  4259a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259ac:	jne    0x4259f9
  4259ae:	cmp    esi,ebx
  4259b0:	jne    0x4259b8
  4259b2:	xor    esi,esi
  4259b4:	inc    esi
  4259b5:	mov    DWORD PTR [ebp+0xc],esi
  4259b8:	add    esi,0xf
  4259bb:	and    esi,0xfffffff0
  4259be:	mov    DWORD PTR [ebp+0xc],esi
  4259c1:	push   esi
  4259c2:	push   ebx
  4259c3:	push   DWORD PTR ds:0x460220
  4259c9:	call   DWORD PTR ds:0x4280d8
  4259cf:	mov    DWORD PTR [ebp-0x1c],eax
  4259d2:	cmp    eax,ebx
  4259d4:	je     0x4259f9
  4259d6:	mov    eax,DWORD PTR [edi-0x4]
  4259d9:	dec    eax
  4259da:	mov    DWORD PTR [ebp-0x24],eax
  4259dd:	cmp    eax,esi
  4259df:	jb     0x4259e3
  4259e1:	mov    eax,esi
  4259e3:	push   eax
  4259e4:	push   edi
  4259e5:	push   DWORD PTR [ebp-0x1c]
  4259e8:	call   0x424680
  4259ed:	push   edi
  4259ee:	push   DWORD PTR [ebp-0x20]
  4259f1:	call   0x424d4d
  4259f6:	add    esp,0x14
  4259f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fd:	call   0x425a51
  425a02:	cmp    DWORD PTR [ebp-0x20],ebx
  425a05:	jne    0x425a29
  425a07:	cmp    esi,ebx
  425a09:	jne    0x425a0e
  425a0b:	xor    esi,esi
  425a0d:	inc    esi
  425a0e:	add    esi,0xf
  425a11:	and    esi,0xfffffff0
  425a14:	mov    DWORD PTR [ebp+0xc],esi
  425a17:	push   esi
  425a18:	push   edi
  425a19:	push   ebx
  425a1a:	push   DWORD PTR ds:0x460220
  425a20:	call   DWORD PTR ds:0x4280e0
  425a26:	mov    DWORD PTR [ebp-0x1c],eax
  425a29:	mov    eax,DWORD PTR [ebp-0x1c]
  425a2c:	cmp    eax,ebx
  425a2e:	jne    0x425a90
  425a30:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a36:	je     0x425a90
  425a38:	push   esi
  425a39:	call   0x426222
  425a3e:	pop    ecx
  425a3f:	test   eax,eax
  425a41:	jne    0x42592c
  425a47:	jmp    0x425a8e
  425a49:	xor    ebx,ebx
  425a4b:	mov    esi,DWORD PTR [ebp+0xc]
  425a4e:	mov    edi,DWORD PTR [ebp+0x8]
  425a51:	push   0x4
  425a53:	call   0x423a6b
  425a58:	pop    ecx
  425a59:	ret    
  425a5a:	xor    eax,eax
  425a5c:	cmp    esi,0xffffffe0
  425a5f:	ja     0x425a77
  425a61:	cmp    esi,ebx
  425a63:	jne    0x425a68
  425a65:	xor    esi,esi
  425a67:	inc    esi
  425a68:	push   esi
  425a69:	push   edi
  425a6a:	push   ebx
  425a6b:	push   DWORD PTR ds:0x460220
  425a71:	call   DWORD PTR ds:0x4280e0
  425a77:	cmp    eax,ebx
  425a79:	jne    0x425a90
  425a7b:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a81:	je     0x425a90
  425a83:	push   esi
  425a84:	call   0x426222
  425a89:	pop    ecx
  425a8a:	test   eax,eax
  425a8c:	jne    0x425a5a
  425a8e:	xor    eax,eax
  425a90:	call   0x42397b
  425a95:	ret    
  425a96:	push   0x10
  425a98:	push   0x4287b8
  425a9d:	call   0x423940
  425aa2:	cmp    DWORD PTR ds:0x460224,0x3
  425aa9:	jne    0x425ae5
  425aab:	push   0x4
  425aad:	call   0x423aff
  425ab2:	pop    ecx
  425ab3:	and    DWORD PTR [ebp-0x4],0x0
  425ab7:	mov    esi,DWORD PTR [ebp+0x8]
  425aba:	push   esi
  425abb:	call   0x424d22
  425ac0:	pop    ecx
  425ac1:	mov    DWORD PTR [ebp-0x1c],eax
  425ac4:	test   eax,eax
  425ac6:	je     0x425ad3
  425ac8:	mov    esi,DWORD PTR [esi-0x4]
  425acb:	sub    esi,0x9
  425ace:	mov    DWORD PTR [ebp-0x20],esi
  425ad1:	jmp    0x425ad6
  425ad3:	mov    esi,DWORD PTR [ebp-0x20]
  425ad6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ada:	call   0x425b03
  425adf:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ae3:	jne    0x425af8
  425ae5:	push   DWORD PTR [ebp+0x8]
  425ae8:	push   0x0
  425aea:	push   DWORD PTR ds:0x460220
  425af0:	call   DWORD PTR ds:0x4280e4
  425af6:	mov    esi,eax
  425af8:	mov    eax,esi
  425afa:	call   0x42397b
  425aff:	ret    
  425b00:	mov    esi,DWORD PTR [ebp-0x20]
  425b03:	push   0x4
  425b05:	call   0x423a6b
  425b0a:	pop    ecx
  425b0b:	ret    
  425b0c:	push   ebp
  425b0d:	mov    ebp,esp
  425b0f:	sub    esp,0x10
  425b12:	push   esi
  425b13:	lea    eax,[ebp-0x8]
  425b16:	push   eax
  425b17:	call   DWORD PTR ds:0x4280f0
  425b1d:	mov    esi,DWORD PTR [ebp-0x4]
  425b20:	xor    esi,DWORD PTR [ebp-0x8]
  425b23:	call   DWORD PTR ds:0x428044
  425b29:	xor    esi,eax
  425b2b:	call   DWORD PTR ds:0x4280a4
  425b31:	xor    esi,eax
  425b33:	call   DWORD PTR ds:0x4280ec
  425b39:	xor    esi,eax
  425b3b:	lea    eax,[ebp-0x10]
  425b3e:	push   eax
  425b3f:	call   DWORD PTR ds:0x4280e8
  425b45:	mov    eax,DWORD PTR [ebp-0xc]
  425b48:	xor    eax,DWORD PTR [ebp-0x10]
  425b4b:	xor    esi,eax
  425b4d:	mov    DWORD PTR ds:0x45f510,esi
  425b53:	jne    0x425b5f
  425b55:	mov    DWORD PTR ds:0x45f510,0xbb40e64e
  425b5f:	pop    esi
  425b60:	leave  
  425b61:	ret    
  425b62:	push   0x118
  425b67:	push   0x428968
  425b6c:	call   0x423940
  425b71:	mov    eax,ds:0x45f510
  425b76:	xor    eax,DWORD PTR [ebp+0x4]
  425b79:	mov    DWORD PTR [ebp-0x1c],eax
  425b7c:	mov    eax,ds:0x45fe78
  425b81:	xor    ecx,ecx
  425b83:	cmp    eax,ecx
  425b85:	je     0x425ba6
  425b87:	mov    DWORD PTR [ebp-0x4],ecx
  425b8a:	push   DWORD PTR [ebp+0xc]
  425b8d:	push   DWORD PTR [ebp+0x8]
  425b90:	call   eax
  425b92:	pop    ecx
  425b93:	pop    ecx
  425b94:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b98:	jmp    0x425ca4
  425b9d:	xor    eax,eax
  425b9f:	inc    eax
  425ba0:	ret    
  425ba1:	mov    esp,DWORD PTR [ebp-0x18]
  425ba4:	jmp    0x425b94
  425ba6:	mov    eax,DWORD PTR [ebp+0x8]
  425ba9:	dec    eax
  425baa:	je     0x425bbf
  425bac:	mov    edi,0x428944
  425bb1:	mov    DWORD PTR [ebp-0x20],0x428890
  425bb8:	mov    esi,0xd4
  425bbd:	jmp    0x425bd0
  425bbf:	mov    edi,0x428870
  425bc4:	mov    DWORD PTR [ebp-0x20],0x4287d0
  425bcb:	mov    esi,0xb9
  425bd0:	mov    BYTE PTR [ebp-0x24],cl
  425bd3:	push   0x104
  425bd8:	lea    eax,[ebp-0x128]
  425bde:	push   eax
  425bdf:	push   ecx
  425be0:	call   DWORD PTR ds:0x428074
  425be6:	test   eax,eax
  425be8:	jne    0x425bfd
  425bea:	push   0x4284c4
  425bef:	lea    eax,[ebp-0x128]
  425bf5:	push   eax
  425bf6:	call   0x423d20
  425bfb:	pop    ecx
  425bfc:	pop    ecx
  425bfd:	lea    ebx,[ebp-0x128]
  425c03:	lea    eax,[ebp-0x128]
  425c09:	push   eax
  425c0a:	call   0x423f50
  425c0f:	pop    ecx
  425c10:	add    eax,0xb
  425c13:	cmp    eax,0x3c
  425c16:	jbe    0x425c41
  425c18:	lea    eax,[ebp-0x128]
  425c1e:	push   eax
  425c1f:	call   0x423f50
  425c24:	mov    ebx,eax
  425c26:	lea    eax,[ebp-0x128]
  425c2c:	sub    eax,0x31
  425c2f:	add    ebx,eax
  425c31:	push   0x3
  425c33:	push   0x4284c0
  425c38:	push   ebx
  425c39:	call   0x423e20
  425c3e:	add    esp,0x10
  425c41:	push   ebx
  425c42:	call   0x423f50
  425c47:	pop    ecx
  425c48:	lea    eax,[eax+esi*1+0xc]
  425c4c:	add    eax,0x3
  425c4f:	and    eax,0xfffffffc
  425c52:	call   0x423990
  425c57:	mov    DWORD PTR [ebp-0x18],esp
  425c5a:	mov    esi,esp
  425c5c:	push   edi
  425c5d:	push   esi
  425c5e:	call   0x423d20
  425c63:	mov    edi,0x4284a0
  425c68:	push   edi
  425c69:	push   esi
  425c6a:	call   0x423d30
  425c6f:	push   0x4287c4
  425c74:	push   esi
  425c75:	call   0x423d30
  425c7a:	push   ebx
  425c7b:	push   esi
  425c7c:	call   0x423d30
  425c81:	push   edi
  425c82:	push   esi
  425c83:	call   0x423d30
  425c88:	push   DWORD PTR [ebp-0x20]
  425c8b:	push   esi
  425c8c:	call   0x423d30
  425c91:	push   0x12010
  425c96:	push   0x428478
  425c9b:	push   esi
  425c9c:	call   0x423c22
  425ca1:	add    esp,0x3c
  425ca4:	push   0x3
  425ca6:	call   0x422dac
  425cab:	int3   
  425cac:	push   0x38
  425cae:	push   0x428d88
  425cb3:	call   0x423940
  425cb8:	xor    ebx,ebx
  425cba:	cmp    DWORD PTR ds:0x45fe9c,ebx
  425cc0:	jne    0x425cfa
  425cc2:	push   ebx
  425cc3:	push   ebx
  425cc4:	xor    esi,esi
  425cc6:	inc    esi
  425cc7:	push   esi
  425cc8:	push   0x428d84
  425ccd:	push   0x100
  425cd2:	push   ebx
  425cd3:	call   DWORD PTR ds:0x4280fc
  425cd9:	test   eax,eax
  425cdb:	je     0x425ce5
  425cdd:	mov    DWORD PTR ds:0x45fe9c,esi
  425ce3:	jmp    0x425cfa
  425ce5:	call   DWORD PTR ds:0x428018
  425ceb:	cmp    eax,0x78
  425cee:	jne    0x425cfa
  425cf0:	mov    DWORD PTR ds:0x45fe9c,0x2
  425cfa:	cmp    DWORD PTR [ebp+0x14],ebx
  425cfd:	jle    0x425d1a
  425cff:	mov    ecx,DWORD PTR [ebp+0x14]
  425d02:	mov    eax,DWORD PTR [ebp+0x10]
  425d05:	dec    ecx
  425d06:	cmp    BYTE PTR [eax],bl
  425d08:	je     0x425d12
  425d0a:	inc    eax
  425d0b:	cmp    ecx,ebx
  425d0d:	jne    0x425d05
  425d0f:	or     ecx,0xffffffff
  425d12:	or     eax,0xffffffff
  425d15:	sub    eax,ecx
  425d17:	add    DWORD PTR [ebp+0x14],eax
  425d1a:	mov    eax,ds:0x45fe9c
  425d1f:	cmp    eax,0x2
  425d22:	je     0x425f04
  425d28:	cmp    eax,ebx
  425d2a:	je     0x425f04
  425d30:	cmp    eax,0x1
  425d33:	jne    0x425f37
  425d39:	xor    edi,edi
  425d3b:	mov    DWORD PTR [ebp-0x1c],edi
  425d3e:	mov    DWORD PTR [ebp-0x20],ebx
  425d41:	mov    DWORD PTR [ebp-0x24],ebx
  425d44:	cmp    DWORD PTR [ebp+0x20],ebx
  425d47:	jne    0x425d51
  425d49:	mov    eax,ds:0x45fe94
  425d4e:	mov    DWORD PTR [ebp+0x20],eax
  425d51:	push   ebx
  425d52:	push   ebx
  425d53:	push   DWORD PTR [ebp+0x14]
  425d56:	push   DWORD PTR [ebp+0x10]
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d5e:	setne  al
  425d61:	lea    eax,[eax*8+0x1]
  425d68:	push   eax
  425d69:	push   DWORD PTR [ebp+0x20]
  425d6c:	call   DWORD PTR ds:0x4280f8
  425d72:	mov    esi,eax
  425d74:	mov    DWORD PTR [ebp-0x28],esi
  425d77:	cmp    esi,ebx
  425d79:	je     0x425f37
  425d7f:	mov    DWORD PTR [ebp-0x4],0x1
  425d86:	lea    eax,[esi+esi*1]
  425d89:	add    eax,0x3
  425d8c:	and    eax,0xfffffffc
  425d8f:	call   0x423990
  425d94:	mov    DWORD PTR [ebp-0x18],esp
  425d97:	mov    eax,esp
  425d99:	mov    DWORD PTR [ebp-0x2c],eax
  425d9c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da0:	jmp    0x425dbd
  425da2:	xor    eax,eax
  425da4:	inc    eax
  425da5:	ret    
  425da6:	mov    esp,DWORD PTR [ebp-0x18]
  425da9:	call   0x426dd5
  425dae:	xor    ebx,ebx
  425db0:	mov    DWORD PTR [ebp-0x2c],ebx
  425db3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dba:	mov    esi,DWORD PTR [ebp-0x28]
  425dbd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dc0:	jne    0x425dde
  425dc2:	lea    eax,[esi+esi*1]
  425dc5:	push   eax
  425dc6:	call   0x424662
  425dcb:	pop    ecx
  425dcc:	mov    DWORD PTR [ebp-0x2c],eax
  425dcf:	cmp    eax,ebx
  425dd1:	je     0x425f37
  425dd7:	mov    DWORD PTR [ebp-0x20],0x1
  425dde:	push   esi
  425ddf:	push   DWORD PTR [ebp-0x2c]
  425de2:	push   DWORD PTR [ebp+0x14]
  425de5:	push   DWORD PTR [ebp+0x10]
  425de8:	push   0x1
  425dea:	push   DWORD PTR [ebp+0x20]
  425ded:	call   DWORD PTR ds:0x4280f8
  425df3:	test   eax,eax
  425df5:	je     0x425ee1
  425dfb:	push   ebx
  425dfc:	push   ebx
  425dfd:	push   esi
  425dfe:	push   DWORD PTR [ebp-0x2c]
  425e01:	push   DWORD PTR [ebp+0xc]
  425e04:	push   DWORD PTR [ebp+0x8]
  425e07:	call   DWORD PTR ds:0x4280fc
  425e0d:	mov    edi,eax
  425e0f:	mov    DWORD PTR [ebp-0x1c],edi
  425e12:	cmp    edi,ebx
  425e14:	je     0x425ee1
  425e1a:	test   BYTE PTR [ebp+0xd],0x4
  425e1e:	je     0x425e4d
  425e20:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e23:	je     0x425ee1
  425e29:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e2c:	jg     0x425ee1
  425e32:	push   DWORD PTR [ebp+0x1c]
  425e35:	push   DWORD PTR [ebp+0x18]
  425e38:	push   esi
  425e39:	push   DWORD PTR [ebp-0x2c]
  425e3c:	push   DWORD PTR [ebp+0xc]
  425e3f:	push   DWORD PTR [ebp+0x8]
  425e42:	call   DWORD PTR ds:0x4280fc
  425e48:	jmp    0x425ee1
  425e4d:	mov    DWORD PTR [ebp-0x4],0x2
  425e54:	lea    eax,[edi+edi*1]
  425e57:	add    eax,0x3
  425e5a:	and    eax,0xfffffffc
  425e5d:	call   0x423990
  425e62:	mov    DWORD PTR [ebp-0x18],esp
  425e65:	mov    eax,esp
  425e67:	mov    DWORD PTR [ebp-0x30],eax
  425e6a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e6e:	jmp    0x425e8b
  425e70:	xor    eax,eax
  425e72:	inc    eax
  425e73:	ret    
  425e74:	mov    esp,DWORD PTR [ebp-0x18]
  425e77:	call   0x426dd5
  425e7c:	xor    ebx,ebx
  425e7e:	mov    DWORD PTR [ebp-0x30],ebx
  425e81:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e85:	mov    edi,DWORD PTR [ebp-0x1c]
  425e88:	mov    esi,DWORD PTR [ebp-0x28]
  425e8b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e8e:	jne    0x425ea8
  425e90:	lea    eax,[edi+edi*1]
  425e93:	push   eax
  425e94:	call   0x424662
  425e99:	pop    ecx
  425e9a:	mov    DWORD PTR [ebp-0x30],eax
  425e9d:	cmp    eax,ebx
  425e9f:	je     0x425ee1
  425ea1:	mov    DWORD PTR [ebp-0x24],0x1
  425ea8:	push   edi
  425ea9:	push   DWORD PTR [ebp-0x30]
  425eac:	push   esi
  425ead:	push   DWORD PTR [ebp-0x2c]
  425eb0:	push   DWORD PTR [ebp+0xc]
  425eb3:	push   DWORD PTR [ebp+0x8]
  425eb6:	call   DWORD PTR ds:0x4280fc
  425ebc:	test   eax,eax
  425ebe:	je     0x425ee1
  425ec0:	push   ebx
  425ec1:	push   ebx
  425ec2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ec5:	jne    0x425ecb
  425ec7:	push   ebx
  425ec8:	push   ebx
  425ec9:	jmp    0x425ed1
  425ecb:	push   DWORD PTR [ebp+0x1c]
  425ece:	push   DWORD PTR [ebp+0x18]
  425ed1:	push   edi
  425ed2:	push   DWORD PTR [ebp-0x30]
  425ed5:	push   ebx
  425ed6:	push   DWORD PTR [ebp+0x20]
  425ed9:	call   DWORD PTR ds:0x428088
  425edf:	mov    edi,eax
  425ee1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ee4:	je     0x425eef
  425ee6:	push   DWORD PTR [ebp-0x30]
  425ee9:	call   0x42454a
  425eee:	pop    ecx
  425eef:	cmp    DWORD PTR [ebp-0x20],ebx
  425ef2:	je     0x425efd
  425ef4:	push   DWORD PTR [ebp-0x2c]
  425ef7:	call   0x42454a
  425efc:	pop    ecx
  425efd:	mov    eax,edi
  425eff:	jmp    0x42605f
  425f04:	mov    DWORD PTR [ebp-0x34],ebx
  425f07:	xor    edi,edi
  425f09:	mov    DWORD PTR [ebp-0x38],ebx
  425f0c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f0f:	jne    0x425f19
  425f11:	mov    eax,ds:0x45fe84
  425f16:	mov    DWORD PTR [ebp+0x8],eax
  425f19:	cmp    DWORD PTR [ebp+0x20],ebx
  425f1c:	jne    0x425f26
  425f1e:	mov    eax,ds:0x45fe94
  425f23:	mov    DWORD PTR [ebp+0x20],eax
  425f26:	push   DWORD PTR [ebp+0x8]
  425f29:	call   0x426bbd
  425f2e:	pop    ecx
  425f2f:	mov    DWORD PTR [ebp-0x3c],eax
  425f32:	cmp    eax,0xffffffff
  425f35:	jne    0x425f3e
  425f37:	xor    eax,eax
  425f39:	jmp    0x42605f
  425f3e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f41:	je     0x426035
  425f47:	push   ebx
  425f48:	push   ebx
  425f49:	lea    ecx,[ebp+0x14]
  425f4c:	push   ecx
  425f4d:	push   DWORD PTR [ebp+0x10]
  425f50:	push   eax
  425f51:	push   DWORD PTR [ebp+0x20]
  425f54:	call   0x426c06
  425f59:	add    esp,0x18
  425f5c:	mov    DWORD PTR [ebp-0x34],eax
  425f5f:	cmp    eax,ebx
  425f61:	je     0x425f37
  425f63:	push   ebx
  425f64:	push   ebx
  425f65:	push   DWORD PTR [ebp+0x14]
  425f68:	push   eax
  425f69:	push   DWORD PTR [ebp+0xc]
  425f6c:	push   DWORD PTR [ebp+0x8]
  425f6f:	call   DWORD PTR ds:0x4280f4
  425f75:	mov    esi,eax
  425f77:	mov    DWORD PTR [ebp-0x40],esi
  425f7a:	cmp    esi,ebx
  425f7c:	je     0x426024
  425f82:	mov    DWORD PTR [ebp-0x4],ebx
  425f85:	add    eax,0x3
  425f88:	and    eax,0xfffffffc
  425f8b:	call   0x423990
  425f90:	mov    DWORD PTR [ebp-0x18],esp
  425f93:	mov    edi,esp
  425f95:	mov    DWORD PTR [ebp-0x44],edi
  425f98:	push   esi
  425f99:	push   ebx
  425f9a:	push   edi
  425f9b:	call   0x426240
  425fa0:	add    esp,0xc
  425fa3:	jmp    0x425fb5
  425fa5:	xor    eax,eax
  425fa7:	inc    eax
  425fa8:	ret    
  425fa9:	mov    esp,DWORD PTR [ebp-0x18]
  425fac:	call   0x426dd5
  425fb1:	xor    ebx,ebx
  425fb3:	xor    edi,edi
  425fb5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fb9:	cmp    edi,ebx
  425fbb:	jne    0x425fe0
  425fbd:	push   DWORD PTR [ebp-0x40]
  425fc0:	call   0x424662
  425fc5:	pop    ecx
  425fc6:	mov    edi,eax
  425fc8:	cmp    edi,ebx
  425fca:	je     0x425ffd
  425fcc:	push   DWORD PTR [ebp-0x40]
  425fcf:	push   ebx
  425fd0:	push   edi
  425fd1:	call   0x426240
  425fd6:	add    esp,0xc
  425fd9:	mov    DWORD PTR [ebp-0x38],0x1
  425fe0:	push   DWORD PTR [ebp-0x40]
  425fe3:	push   edi
  425fe4:	push   DWORD PTR [ebp+0x14]
  425fe7:	push   DWORD PTR [ebp-0x34]
  425fea:	push   DWORD PTR [ebp+0xc]
  425fed:	push   DWORD PTR [ebp+0x8]
  425ff0:	call   DWORD PTR ds:0x4280f4
  425ff6:	mov    DWORD PTR [ebp-0x40],eax
  425ff9:	cmp    eax,ebx
  425ffb:	jne    0x426001
  425ffd:	xor    esi,esi
  425fff:	jmp    0x426027
  426001:	push   DWORD PTR [ebp+0x1c]
  426004:	push   DWORD PTR [ebp+0x18]
  426007:	lea    eax,[ebp-0x40]
  42600a:	push   eax
  42600b:	push   edi
  42600c:	push   DWORD PTR [ebp+0x20]
  42600f:	push   DWORD PTR [ebp-0x3c]
  426012:	call   0x426c06
  426017:	add    esp,0x18
  42601a:	mov    esi,eax
  42601c:	neg    esi
  42601e:	sbb    esi,esi
  426020:	neg    esi
  426022:	jmp    0x426027
  426024:	mov    esi,DWORD PTR [ebp-0x48]
  426027:	cmp    DWORD PTR [ebp-0x38],ebx
  42602a:	je     0x42604f
  42602c:	push   edi
  42602d:	call   0x42454a
  426032:	pop    ecx
  426033:	jmp    0x42604f
  426035:	push   DWORD PTR [ebp+0x1c]
  426038:	push   DWORD PTR [ebp+0x18]
  42603b:	push   DWORD PTR [ebp+0x14]
  42603e:	push   DWORD PTR [ebp+0x10]
  426041:	push   DWORD PTR [ebp+0xc]
  426044:	push   DWORD PTR [ebp+0x8]
  426047:	call   DWORD PTR ds:0x4280f4
  42604d:	mov    esi,eax
  42604f:	cmp    DWORD PTR [ebp-0x34],ebx
  426052:	je     0x42605d
  426054:	push   DWORD PTR [ebp-0x34]
  426057:	call   0x42454a
  42605c:	pop    ecx
  42605d:	mov    eax,esi
  42605f:	lea    esp,[ebp-0x54]
  426062:	call   0x42397b
  426067:	ret    
  426068:	push   0x1c
  42606a:	push   0x428db0
  42606f:	call   0x423940
  426074:	xor    esi,esi
  426076:	cmp    DWORD PTR ds:0x45fea0,esi
  42607c:	jne    0x4260b3
  42607e:	lea    eax,[ebp-0x1c]
  426081:	push   eax
  426082:	xor    edi,edi
  426084:	inc    edi
  426085:	push   edi
  426086:	push   0x428d84
  42608b:	push   edi
  42608c:	call   DWORD PTR ds:0x428104
  426092:	test   eax,eax
  426094:	je     0x42609e
  426096:	mov    DWORD PTR ds:0x45fea0,edi
  42609c:	jmp    0x4260b3
  42609e:	call   DWORD PTR ds:0x428018
  4260a4:	cmp    eax,0x78
  4260a7:	jne    0x4260b3
  4260a9:	mov    DWORD PTR ds:0x45fea0,0x2
  4260b3:	mov    eax,ds:0x45fea0
  4260b8:	cmp    eax,0x2
  4260bb:	je     0x4261ab
  4260c1:	cmp    eax,esi
  4260c3:	je     0x4261ab
  4260c9:	cmp    eax,0x1
  4260cc:	jne    0x4261d1
  4260d2:	mov    DWORD PTR [ebp-0x20],esi
  4260d5:	mov    DWORD PTR [ebp-0x24],esi
  4260d8:	cmp    DWORD PTR [ebp+0x18],esi
  4260db:	jne    0x4260e5
  4260dd:	mov    eax,ds:0x45fe94
  4260e2:	mov    DWORD PTR [ebp+0x18],eax
  4260e5:	push   esi
  4260e6:	push   esi
  4260e7:	push   DWORD PTR [ebp+0x10]
  4260ea:	push   DWORD PTR [ebp+0xc]
  4260ed:	xor    eax,eax
  4260ef:	cmp    DWORD PTR [ebp+0x20],esi
  4260f2:	setne  al
  4260f5:	lea    eax,[eax*8+0x1]
  4260fc:	push   eax
  4260fd:	push   DWORD PTR [ebp+0x18]
  426100:	call   DWORD PTR ds:0x4280f8
  426106:	mov    edi,eax
  426108:	mov    DWORD PTR [ebp-0x28],edi
  42610b:	test   edi,edi
  42610d:	je     0x4261d1
  426113:	and    DWORD PTR [ebp-0x4],0x0
  426117:	lea    ebx,[edi+edi*1]
  42611a:	mov    eax,ebx
  42611c:	add    eax,0x3
  42611f:	and    eax,0xfffffffc
  426122:	call   0x423990
  426127:	mov    DWORD PTR [ebp-0x18],esp
  42612a:	mov    esi,esp
  42612c:	mov    DWORD PTR [ebp-0x2c],esi
  42612f:	push   ebx
  426130:	push   0x0
  426132:	push   esi
  426133:	call   0x426240
  426138:	add    esp,0xc
  42613b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42613f:	jmp    0x426156
  426141:	xor    eax,eax
  426143:	inc    eax
  426144:	ret    
  426145:	mov    esp,DWORD PTR [ebp-0x18]
  426148:	call   0x426dd5
  42614d:	xor    esi,esi
  42614f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426153:	mov    edi,DWORD PTR [ebp-0x28]
  426156:	test   esi,esi
  426158:	jne    0x426171
  42615a:	push   edi
  42615b:	push   0x2
  42615d:	call   0x424a58
  426162:	pop    ecx
  426163:	pop    ecx
  426164:	mov    esi,eax
  426166:	test   esi,esi
  426168:	je     0x4261d1
  42616a:	mov    DWORD PTR [ebp-0x24],0x1
  426171:	push   edi
  426172:	push   esi
  426173:	push   DWORD PTR [ebp+0x10]
  426176:	push   DWORD PTR [ebp+0xc]
  426179:	push   0x1
  42617b:	push   DWORD PTR [ebp+0x18]
  42617e:	call   DWORD PTR ds:0x4280f8
  426184:	test   eax,eax
  426186:	je     0x426199
  426188:	push   DWORD PTR [ebp+0x14]
  42618b:	push   eax
  42618c:	push   esi
  42618d:	push   DWORD PTR [ebp+0x8]
  426190:	call   DWORD PTR ds:0x428104
  426196:	mov    DWORD PTR [ebp-0x20],eax
  426199:	cmp    DWORD PTR [ebp-0x24],0x0
  42619d:	je     0x4261a6
  42619f:	push   esi
  4261a0:	call   0x42454a
  4261a5:	pop    ecx
  4261a6:	mov    eax,DWORD PTR [ebp-0x20]
  4261a9:	jmp    0x426219
  4261ab:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261ae:	cmp    ebx,esi
  4261b0:	jne    0x4261b8
  4261b2:	mov    ebx,DWORD PTR ds:0x45fe84
  4261b8:	mov    edi,DWORD PTR [ebp+0x18]
  4261bb:	test   edi,edi
  4261bd:	jne    0x4261c5
  4261bf:	mov    edi,DWORD PTR ds:0x45fe94
  4261c5:	push   ebx
  4261c6:	call   0x426bbd
  4261cb:	pop    ecx
  4261cc:	cmp    eax,0xffffffff
  4261cf:	jne    0x4261d5
  4261d1:	xor    eax,eax
  4261d3:	jmp    0x426219
  4261d5:	cmp    eax,edi
  4261d7:	je     0x4261f7
  4261d9:	push   0x0
  4261db:	push   0x0
  4261dd:	lea    ecx,[ebp+0x10]
  4261e0:	push   ecx
  4261e1:	push   DWORD PTR [ebp+0xc]
  4261e4:	push   eax
  4261e5:	push   edi
  4261e6:	call   0x426c06
  4261eb:	add    esp,0x18
  4261ee:	mov    esi,eax
  4261f0:	test   esi,esi
  4261f2:	je     0x4261d1
  4261f4:	mov    DWORD PTR [ebp+0xc],esi
  4261f7:	push   DWORD PTR [ebp+0x14]
  4261fa:	push   DWORD PTR [ebp+0x10]
  4261fd:	push   DWORD PTR [ebp+0xc]
  426200:	push   DWORD PTR [ebp+0x8]
  426203:	push   ebx
  426204:	call   DWORD PTR ds:0x428100
  42620a:	mov    edi,eax
  42620c:	test   esi,esi
  42620e:	je     0x426217
  426210:	push   esi
  426211:	call   0x42454a
  426216:	pop    ecx
  426217:	mov    eax,edi
  426219:	lea    esp,[ebp-0x38]
  42621c:	call   0x42397b
  426221:	ret    
  426222:	mov    eax,ds:0x45fea4
  426227:	test   eax,eax
  426229:	je     0x42623a
  42622b:	push   DWORD PTR [esp+0x4]
  42622f:	call   eax
  426231:	test   eax,eax
  426233:	pop    ecx
  426234:	je     0x42623a
  426236:	xor    eax,eax
  426238:	inc    eax
  426239:	ret    
  42623a:	xor    eax,eax
  42623c:	ret    
  42623d:	int3   
  42623e:	int3   
  42623f:	int3   
  426240:	mov    edx,DWORD PTR [esp+0xc]
  426244:	mov    ecx,DWORD PTR [esp+0x4]
  426248:	test   edx,edx
  42624a:	je     0x42629b
  42624c:	xor    eax,eax
  42624e:	mov    al,BYTE PTR [esp+0x8]
  426252:	push   edi
  426253:	mov    edi,ecx
  426255:	cmp    edx,0x4
  426258:	jb     0x42628b
  42625a:	neg    ecx
  42625c:	and    ecx,0x3
  42625f:	je     0x42626d
  426261:	sub    edx,ecx
  426263:	mov    BYTE PTR [edi],al
  426265:	add    edi,0x1
  426268:	sub    ecx,0x1
  42626b:	jne    0x426263
  42626d:	mov    ecx,eax
  42626f:	shl    eax,0x8
  426272:	add    eax,ecx
  426274:	mov    ecx,eax
  426276:	shl    eax,0x10
  426279:	add    eax,ecx
  42627b:	mov    ecx,edx
  42627d:	and    edx,0x3
  426280:	shr    ecx,0x2
  426283:	je     0x42628b
  426285:	rep stos DWORD PTR es:[edi],eax
  426287:	test   edx,edx
  426289:	je     0x426295
  42628b:	mov    BYTE PTR [edi],al
  42628d:	add    edi,0x1
  426290:	sub    edx,0x1
  426293:	jne    0x42628b
  426295:	mov    eax,DWORD PTR [esp+0x8]
  426299:	pop    edi
  42629a:	ret    
  42629b:	mov    eax,DWORD PTR [esp+0x4]
  42629f:	ret    
  4262a0:	push   esi
  4262a1:	mov    esi,DWORD PTR [esp+0x8]
  4262a5:	test   esi,esi
  4262a7:	je     0x42642e
  4262ad:	push   DWORD PTR [esi+0x4]
  4262b0:	call   0x42454a
  4262b5:	push   DWORD PTR [esi+0x8]
  4262b8:	call   0x42454a
  4262bd:	push   DWORD PTR [esi+0xc]
  4262c0:	call   0x42454a
  4262c5:	push   DWORD PTR [esi+0x10]
  4262c8:	call   0x42454a
  4262cd:	push   DWORD PTR [esi+0x14]
  4262d0:	call   0x42454a
  4262d5:	push   DWORD PTR [esi+0x18]
  4262d8:	call   0x42454a
  4262dd:	push   DWORD PTR [esi]
  4262df:	call   0x42454a
  4262e4:	push   DWORD PTR [esi+0x20]
  4262e7:	call   0x42454a
  4262ec:	push   DWORD PTR [esi+0x24]
  4262ef:	call   0x42454a
  4262f4:	push   DWORD PTR [esi+0x28]
  4262f7:	call   0x42454a
  4262fc:	push   DWORD PTR [esi+0x2c]
  4262ff:	call   0x42454a
  426304:	push   DWORD PTR [esi+0x30]
  426307:	call   0x42454a
  42630c:	push   DWORD PTR [esi+0x34]
  42630f:	call   0x42454a
  426314:	push   DWORD PTR [esi+0x1c]
  426317:	call   0x42454a
  42631c:	push   DWORD PTR [esi+0x38]
  42631f:	call   0x42454a
  426324:	push   DWORD PTR [esi+0x3c]
  426327:	call   0x42454a
  42632c:	add    esp,0x40
  42632f:	push   DWORD PTR [esi+0x40]
  426332:	call   0x42454a
  426337:	push   DWORD PTR [esi+0x44]
  42633a:	call   0x42454a
  42633f:	push   DWORD PTR [esi+0x48]
  426342:	call   0x42454a
  426347:	push   DWORD PTR [esi+0x4c]
  42634a:	call   0x42454a
  42634f:	push   DWORD PTR [esi+0x50]
  426352:	call   0x42454a
  426357:	push   DWORD PTR [esi+0x54]
  42635a:	call   0x42454a
  42635f:	push   DWORD PTR [esi+0x58]
  426362:	call   0x42454a
  426367:	push   DWORD PTR [esi+0x5c]
  42636a:	call   0x42454a
  42636f:	push   DWORD PTR [esi+0x60]
  426372:	call   0x42454a
  426377:	push   DWORD PTR [esi+0x64]
  42637a:	call   0x42454a
  42637f:	push   DWORD PTR [esi+0x68]
  426382:	call   0x42454a
  426387:	push   DWORD PTR [esi+0x6c]
  42638a:	call   0x42454a
  42638f:	push   DWORD PTR [esi+0x70]
  426392:	call   0x42454a
  426397:	push   DWORD PTR [esi+0x74]
  42639a:	call   0x42454a
  42639f:	push   DWORD PTR [esi+0x78]
  4263a2:	call   0x42454a
  4263a7:	push   DWORD PTR [esi+0x7c]
  4263aa:	call   0x42454a
  4263af:	add    esp,0x40
  4263b2:	push   DWORD PTR [esi+0x80]
  4263b8:	call   0x42454a
  4263bd:	push   DWORD PTR [esi+0x84]
  4263c3:	call   0x42454a
  4263c8:	push   DWORD PTR [esi+0x88]
  4263ce:	call   0x42454a
  4263d3:	push   DWORD PTR [esi+0x8c]
  4263d9:	call   0x42454a
  4263de:	push   DWORD PTR [esi+0x90]
  4263e4:	call   0x42454a
  4263e9:	push   DWORD PTR [esi+0x94]
  4263ef:	call   0x42454a
  4263f4:	push   DWORD PTR [esi+0x98]
  4263fa:	call   0x42454a
  4263ff:	push   DWORD PTR [esi+0x9c]
  426405:	call   0x42454a
  42640a:	push   DWORD PTR [esi+0xa0]
  426410:	call   0x42454a
  426415:	push   DWORD PTR [esi+0xa4]
  42641b:	call   0x42454a
  426420:	push   DWORD PTR [esi+0xa8]
  426426:	call   0x42454a
  42642b:	add    esp,0x2c
  42642e:	pop    esi
  42642f:	ret    
  426430:	push   esi
  426431:	mov    esi,DWORD PTR [esp+0x8]
  426435:	test   esi,esi
  426437:	je     0x42648d
  426439:	mov    eax,DWORD PTR [esi]
  42643b:	mov    ecx,DWORD PTR ds:0x45fa14
  426441:	cmp    eax,DWORD PTR [ecx]
  426443:	je     0x426454
  426445:	cmp    eax,DWORD PTR ds:0x45f9e4
  42644b:	je     0x426454
  42644d:	push   eax
  42644e:	call   0x42454a
  426453:	pop    ecx
  426454:	mov    eax,DWORD PTR [esi+0x4]
  426457:	mov    ecx,DWORD PTR ds:0x45fa14
  42645d:	cmp    eax,DWORD PTR [ecx+0x4]
  426460:	je     0x426471
  426462:	cmp    eax,DWORD PTR ds:0x45f9e8
  426468:	je     0x426471
  42646a:	push   eax
  42646b:	call   0x42454a
  426470:	pop    ecx
  426471:	mov    esi,DWORD PTR [esi+0x8]
  426474:	mov    eax,ds:0x45fa14
  426479:	cmp    esi,DWORD PTR [eax+0x8]
  42647c:	je     0x42648d
  42647e:	cmp    esi,DWORD PTR ds:0x45f9ec
  426484:	je     0x42648d
  426486:	push   esi
  426487:	call   0x42454a
  42648c:	pop    ecx
  42648d:	pop    esi
  42648e:	ret    
  42648f:	push   esi
  426490:	mov    esi,DWORD PTR [esp+0x8]
  426494:	test   esi,esi
  426496:	je     0x426566
  42649c:	mov    eax,DWORD PTR [esi+0xc]
  42649f:	mov    ecx,DWORD PTR ds:0x45fa14
  4264a5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264a8:	je     0x4264b9
  4264aa:	cmp    eax,DWORD PTR ds:0x45f9f0
  4264b0:	je     0x4264b9
  4264b2:	push   eax
  4264b3:	call   0x42454a
  4264b8:	pop    ecx
  4264b9:	mov    eax,DWORD PTR [esi+0x10]
  4264bc:	mov    ecx,DWORD PTR ds:0x45fa14
  4264c2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264c5:	je     0x4264d6
  4264c7:	cmp    eax,DWORD PTR ds:0x45f9f4
  4264cd:	je     0x4264d6
  4264cf:	push   eax
  4264d0:	call   0x42454a
  4264d5:	pop    ecx
  4264d6:	mov    eax,DWORD PTR [esi+0x14]
  4264d9:	mov    ecx,DWORD PTR ds:0x45fa14
  4264df:	cmp    eax,DWORD PTR [ecx+0x14]
  4264e2:	je     0x4264f3
  4264e4:	cmp    eax,DWORD PTR ds:0x45f9f8
  4264ea:	je     0x4264f3
  4264ec:	push   eax
  4264ed:	call   0x42454a
  4264f2:	pop    ecx
  4264f3:	mov    eax,DWORD PTR [esi+0x18]
  4264f6:	mov    ecx,DWORD PTR ds:0x45fa14
  4264fc:	cmp    eax,DWORD PTR [ecx+0x18]
  4264ff:	je     0x426510
  426501:	cmp    eax,DWORD PTR ds:0x45f9fc
  426507:	je     0x426510
  426509:	push   eax
  42650a:	call   0x42454a
  42650f:	pop    ecx
  426510:	mov    eax,DWORD PTR [esi+0x1c]
  426513:	mov    ecx,DWORD PTR ds:0x45fa14
  426519:	cmp    eax,DWORD PTR [ecx+0x1c]
  42651c:	je     0x42652d
  42651e:	cmp    eax,DWORD PTR ds:0x45fa00
  426524:	je     0x42652d
  426526:	push   eax
  426527:	call   0x42454a
  42652c:	pop    ecx
  42652d:	mov    eax,DWORD PTR [esi+0x20]
  426530:	mov    ecx,DWORD PTR ds:0x45fa14
  426536:	cmp    eax,DWORD PTR [ecx+0x20]
  426539:	je     0x42654a
  42653b:	cmp    eax,DWORD PTR ds:0x45fa04
  426541:	je     0x42654a
  426543:	push   eax
  426544:	call   0x42454a
  426549:	pop    ecx
  42654a:	mov    esi,DWORD PTR [esi+0x24]
  42654d:	mov    eax,ds:0x45fa14
  426552:	cmp    esi,DWORD PTR [eax+0x24]
  426555:	je     0x426566
  426557:	cmp    esi,DWORD PTR ds:0x45fa08
  42655d:	je     0x426566
  42655f:	push   esi
  426560:	call   0x42454a
  426565:	pop    ecx
  426566:	pop    esi
  426567:	ret    
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	push   ebp
  426571:	mov    ebp,esp
  426573:	push   esi
  426574:	xor    eax,eax
  426576:	push   eax
  426577:	push   eax
  426578:	push   eax
  426579:	push   eax
  42657a:	push   eax
  42657b:	push   eax
  42657c:	push   eax
  42657d:	push   eax
  42657e:	mov    edx,DWORD PTR [ebp+0xc]
  426581:	lea    ecx,[ecx+0x0]
  426584:	mov    al,BYTE PTR [edx]
  426586:	or     al,al
  426588:	je     0x426593
  42658a:	add    edx,0x1
  42658d:	bts    DWORD PTR [esp],eax
  426591:	jmp    0x426584
  426593:	mov    esi,DWORD PTR [ebp+0x8]
  426596:	or     ecx,0xffffffff
  426599:	lea    ecx,[ecx+0x0]
  42659c:	add    ecx,0x1
  42659f:	mov    al,BYTE PTR [esi]
  4265a1:	or     al,al
  4265a3:	je     0x4265ae
  4265a5:	add    esi,0x1
  4265a8:	bt     DWORD PTR [esp],eax
  4265ac:	jae    0x42659c
  4265ae:	mov    eax,ecx
  4265b0:	add    esp,0x20
  4265b3:	pop    esi
  4265b4:	leave  
  4265b5:	ret    
  4265b6:	int3   
  4265b7:	int3   
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    edx,DWORD PTR [esp+0x4]
  4265c4:	mov    ecx,DWORD PTR [esp+0x8]
  4265c8:	test   edx,0x3
  4265ce:	jne    0x42660c
  4265d0:	mov    eax,DWORD PTR [edx]
  4265d2:	cmp    al,BYTE PTR [ecx]
  4265d4:	jne    0x426604
  4265d6:	or     al,al
  4265d8:	je     0x426600
  4265da:	cmp    ah,BYTE PTR [ecx+0x1]
  4265dd:	jne    0x426604
  4265df:	or     ah,ah
  4265e1:	je     0x426600
  4265e3:	shr    eax,0x10
  4265e6:	cmp    al,BYTE PTR [ecx+0x2]
  4265e9:	jne    0x426604
  4265eb:	or     al,al
  4265ed:	je     0x426600
  4265ef:	cmp    ah,BYTE PTR [ecx+0x3]
  4265f2:	jne    0x426604
  4265f4:	add    ecx,0x4
  4265f7:	add    edx,0x4
  4265fa:	or     ah,ah
  4265fc:	jne    0x4265d0
  4265fe:	mov    edi,edi
  426600:	xor    eax,eax
  426602:	ret    
  426603:	nop
  426604:	sbb    eax,eax
  426606:	shl    eax,1
  426608:	add    eax,0x1
  42660b:	ret    
  42660c:	test   edx,0x1
  426612:	je     0x42662c
  426614:	mov    al,BYTE PTR [edx]
  426616:	add    edx,0x1
  426619:	cmp    al,BYTE PTR [ecx]
  42661b:	jne    0x426604
  42661d:	add    ecx,0x1
  426620:	or     al,al
  426622:	je     0x426600
  426624:	test   edx,0x2
  42662a:	je     0x4265d0
  42662c:	mov    ax,WORD PTR [edx]
  42662f:	add    edx,0x2
  426632:	cmp    al,BYTE PTR [ecx]
  426634:	jne    0x426604
  426636:	or     al,al
  426638:	je     0x426600
  42663a:	cmp    ah,BYTE PTR [ecx+0x1]
  42663d:	jne    0x426604
  42663f:	or     ah,ah
  426641:	je     0x426600
  426643:	add    ecx,0x2
  426646:	jmp    0x4265d0
  426648:	int3   
  426649:	int3   
  42664a:	int3   
  42664b:	int3   
  42664c:	int3   
  42664d:	int3   
  42664e:	int3   
  42664f:	int3   
  426650:	mov    eax,DWORD PTR [esp+0xc]
  426654:	test   eax,eax
  426656:	je     0x4266a2
  426658:	mov    edx,DWORD PTR [esp+0x4]
  42665c:	push   esi
  42665d:	push   edi
  42665e:	mov    esi,edx
  426660:	mov    edi,DWORD PTR [esp+0x10]
  426664:	or     edx,edi
  426666:	and    edx,0x3
  426669:	je     0x4266a3
  42666b:	test   eax,0x1
  426670:	je     0x426683
  426672:	mov    cl,BYTE PTR [esi]
  426674:	cmp    cl,BYTE PTR [edi]
  426676:	jne    0x4266d0
  426678:	add    esi,0x1
  42667b:	add    edi,0x1
  42667e:	sub    eax,0x1
  426681:	je     0x4266a0
  426683:	mov    cl,BYTE PTR [esi]
  426685:	mov    dl,BYTE PTR [edi]
  426687:	cmp    cl,dl
  426689:	jne    0x4266d0
  42668b:	mov    cl,BYTE PTR [esi+0x1]
  42668e:	mov    dl,BYTE PTR [edi+0x1]
  426691:	cmp    cl,dl
  426693:	jne    0x4266d0
  426695:	add    edi,0x2
  426698:	add    esi,0x2
  42669b:	sub    eax,0x2
  42669e:	jne    0x426683
  4266a0:	pop    edi
  4266a1:	pop    esi
  4266a2:	ret    
  4266a3:	mov    ecx,eax
  4266a5:	and    eax,0x3
  4266a8:	shr    ecx,0x2
  4266ab:	je     0x4266d8
  4266ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266af:	je     0x4266d8
  4266b1:	mov    ecx,DWORD PTR [esi-0x4]
  4266b4:	mov    edx,DWORD PTR [edi-0x4]
  4266b7:	cmp    cl,dl
  4266b9:	jne    0x4266cb
  4266bb:	cmp    ch,dh
  4266bd:	jne    0x4266cb
  4266bf:	shr    ecx,0x10
  4266c2:	shr    edx,0x10
  4266c5:	cmp    cl,dl
  4266c7:	jne    0x4266cb
  4266c9:	cmp    ch,dh
  4266cb:	mov    eax,0x0
  4266d0:	sbb    eax,eax
  4266d2:	pop    edi
  4266d3:	sbb    eax,0xffffffff
  4266d6:	pop    esi
  4266d7:	ret    
  4266d8:	test   eax,eax
  4266da:	je     0x4266a0
  4266dc:	mov    edx,DWORD PTR [esi]
  4266de:	mov    ecx,DWORD PTR [edi]
  4266e0:	cmp    dl,cl
  4266e2:	jne    0x4266cb
  4266e4:	sub    eax,0x1
  4266e7:	je     0x426705
  4266e9:	cmp    dh,ch
  4266eb:	jne    0x4266cb
  4266ed:	sub    eax,0x1
  4266f0:	je     0x426705
  4266f2:	and    ecx,0xff0000
  4266f8:	and    edx,0xff0000
  4266fe:	cmp    edx,ecx
  426700:	jne    0x4266cb
  426702:	sub    eax,0x1
  426705:	pop    edi
  426706:	pop    esi
  426707:	ret    
  426708:	int3   
  426709:	int3   
  42670a:	int3   
  42670b:	int3   
  42670c:	int3   
  42670d:	int3   
  42670e:	int3   
  42670f:	int3   
  426710:	push   ebp
  426711:	mov    ebp,esp
  426713:	push   edi
  426714:	push   esi
  426715:	push   ebx
  426716:	mov    ecx,DWORD PTR [ebp+0x10]
  426719:	jecxz  0x426742
  42671b:	mov    ebx,ecx
  42671d:	mov    edi,DWORD PTR [ebp+0x8]
  426720:	mov    esi,edi
  426722:	xor    eax,eax
  426724:	repnz scas al,BYTE PTR es:[edi]
  426726:	neg    ecx
  426728:	add    ecx,ebx
  42672a:	mov    edi,esi
  42672c:	mov    esi,DWORD PTR [ebp+0xc]
  42672f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426731:	mov    al,BYTE PTR [esi-0x1]
  426734:	xor    ecx,ecx
  426736:	cmp    al,BYTE PTR [edi-0x1]
  426739:	ja     0x426740
  42673b:	je     0x426742
  42673d:	sub    ecx,0x2
  426740:	not    ecx
  426742:	mov    eax,ecx
  426744:	pop    ebx
  426745:	pop    esi
  426746:	pop    edi
  426747:	leave  
  426748:	ret    
  426749:	int3   
  42674a:	int3   
  42674b:	int3   
  42674c:	int3   
  42674d:	int3   
  42674e:	int3   
  42674f:	int3   
  426750:	push   ebp
  426751:	mov    ebp,esp
  426753:	push   esi
  426754:	xor    eax,eax
  426756:	push   eax
  426757:	push   eax
  426758:	push   eax
  426759:	push   eax
  42675a:	push   eax
  42675b:	push   eax
  42675c:	push   eax
  42675d:	push   eax
  42675e:	mov    edx,DWORD PTR [ebp+0xc]
  426761:	lea    ecx,[ecx+0x0]
  426764:	mov    al,BYTE PTR [edx]
  426766:	or     al,al
  426768:	je     0x426773
  42676a:	add    edx,0x1
  42676d:	bts    DWORD PTR [esp],eax
  426771:	jmp    0x426764
  426773:	mov    esi,DWORD PTR [ebp+0x8]
  426776:	mov    edi,edi
  426778:	mov    al,BYTE PTR [esi]
  42677a:	or     al,al
  42677c:	je     0x42678a
  42677e:	add    esi,0x1
  426781:	bt     DWORD PTR [esp],eax
  426785:	jae    0x426778
  426787:	lea    eax,[esi-0x1]
  42678a:	add    esp,0x20
  42678d:	pop    esi
  42678e:	leave  
  42678f:	ret    
  426790:	push   ebp
  426791:	mov    ebp,esp
  426793:	push   ebx
  426794:	push   esi
  426795:	push   edi
  426796:	push   ebp
  426797:	push   0x0
  426799:	push   0x0
  42679b:	push   0x4267a8
  4267a0:	push   DWORD PTR [ebp+0x8]
  4267a3:	call   0x42721e
  4267a8:	pop    ebp
  4267a9:	pop    edi
  4267aa:	pop    esi
  4267ab:	pop    ebx
  4267ac:	mov    esp,ebp
  4267ae:	pop    ebp
  4267af:	ret    
  4267b0:	mov    ecx,DWORD PTR [esp+0x4]
  4267b4:	test   DWORD PTR [ecx+0x4],0x6
  4267bb:	mov    eax,0x1
  4267c0:	je     0x4267d1
  4267c2:	mov    eax,DWORD PTR [esp+0x8]
  4267c6:	mov    edx,DWORD PTR [esp+0x10]
  4267ca:	mov    DWORD PTR [edx],eax
  4267cc:	mov    eax,0x3
  4267d1:	ret    
  4267d2:	push   ebx
  4267d3:	push   esi
  4267d4:	push   edi
  4267d5:	mov    eax,DWORD PTR [esp+0x10]
  4267d9:	push   eax
  4267da:	push   0xfffffffe
  4267dc:	push   0x4267b0
  4267e1:	push   DWORD PTR fs:0x0
  4267e8:	mov    DWORD PTR fs:0x0,esp
  4267ef:	mov    eax,DWORD PTR [esp+0x20]
  4267f3:	mov    ebx,DWORD PTR [eax+0x8]
  4267f6:	mov    esi,DWORD PTR [eax+0xc]
  4267f9:	cmp    esi,0xffffffff
  4267fc:	je     0x42682c
  4267fe:	cmp    esi,DWORD PTR [esp+0x24]
  426802:	je     0x42682c
  426804:	lea    esi,[esi+esi*2]
  426807:	mov    ecx,DWORD PTR [ebx+esi*4]
  42680a:	mov    DWORD PTR [esp+0x8],ecx
  42680e:	mov    DWORD PTR [eax+0xc],ecx
  426811:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426816:	jne    0x42682a
  426818:	push   0x101
  42681d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426821:	call   0x426866
  426826:	call   DWORD PTR [ebx+esi*4+0x8]
  42682a:	jmp    0x4267ef
  42682c:	pop    DWORD PTR fs:0x0
  426833:	add    esp,0xc
  426836:	pop    edi
  426837:	pop    esi
  426838:	pop    ebx
  426839:	ret    
  42683a:	xor    eax,eax
  42683c:	mov    ecx,DWORD PTR fs:0x0
  426843:	cmp    DWORD PTR [ecx+0x4],0x4267b0
  42684a:	jne    0x42685c
  42684c:	mov    edx,DWORD PTR [ecx+0xc]
  42684f:	mov    edx,DWORD PTR [edx+0xc]
  426852:	cmp    DWORD PTR [ecx+0x8],edx
  426855:	jne    0x42685c
  426857:	mov    eax,0x1
  42685c:	ret    
  42685d:	push   ebx
  42685e:	push   ecx
  42685f:	mov    ebx,0x45fa2c
  426864:	jmp    0x426870
  426866:	push   ebx
  426867:	push   ecx
  426868:	mov    ebx,0x45fa2c
  42686d:	mov    ecx,DWORD PTR [ebp+0x8]
  426870:	mov    DWORD PTR [ebx+0x8],ecx
  426873:	mov    DWORD PTR [ebx+0x4],eax
  426876:	mov    DWORD PTR [ebx+0xc],ebp
  426879:	pop    ecx
  42687a:	pop    ebx
  42687b:	ret    0x4
  42687e:	int3   
  42687f:	int3   
  426880:	push   ebp
  426881:	mov    ebp,esp
  426883:	push   edi
  426884:	push   esi
  426885:	mov    esi,DWORD PTR [ebp+0xc]
  426888:	mov    ecx,DWORD PTR [ebp+0x10]
  42688b:	mov    edi,DWORD PTR [ebp+0x8]
  42688e:	mov    eax,ecx
  426890:	mov    edx,ecx
  426892:	add    eax,esi
  426894:	cmp    edi,esi
  426896:	jbe    0x4268a0
  426898:	cmp    edi,eax
  42689a:	jb     0x426a1c
  4268a0:	test   edi,0x3
  4268a6:	jne    0x4268bc
  4268a8:	shr    ecx,0x2
  4268ab:	and    edx,0x3
  4268ae:	cmp    ecx,0x8
  4268b1:	jb     0x4268dc
  4268b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268b5:	jmp    DWORD PTR [edx*4+0x4269cc]
  4268bc:	mov    eax,edi
  4268be:	mov    edx,0x3
  4268c3:	sub    ecx,0x4
  4268c6:	jb     0x4268d4
  4268c8:	and    eax,0x3
  4268cb:	add    ecx,eax
  4268cd:	jmp    DWORD PTR [eax*4+0x4268e0]
  4268d4:	jmp    DWORD PTR [ecx*4+0x4269dc]
  4268db:	nop
  4268dc:	jmp    DWORD PTR [ecx*4+0x426960]
  4268e3:	nop
  4268e4:	lock push 0x691c0042
  4268ea:	inc    edx
  4268eb:	add    BYTE PTR [eax+0x69],al
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx],ah
  4268f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4268f7:	inc    esi
  4268f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4268fe:	add    al,cl
  426900:	jmp    0x289f107
  426905:	add    esi,0x3
  426908:	add    edi,0x3
  42690b:	cmp    ecx,0x8
  42690e:	jb     0x4268dc
  426910:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426912:	jmp    DWORD PTR [edx*4+0x4269cc]
  426919:	lea    ecx,[ecx+0x0]
  42691c:	and    edx,ecx
  42691e:	mov    al,BYTE PTR [esi]
  426920:	mov    BYTE PTR [edi],al
  426922:	mov    al,BYTE PTR [esi+0x1]
  426925:	shr    ecx,0x2
  426928:	mov    BYTE PTR [edi+0x1],al
  42692b:	add    esi,0x2
  42692e:	add    edi,0x2
  426931:	cmp    ecx,0x8
  426934:	jb     0x4268dc
  426936:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426938:	jmp    DWORD PTR [edx*4+0x4269cc]
  42693f:	nop
  426940:	and    edx,ecx
  426942:	mov    al,BYTE PTR [esi]
  426944:	mov    BYTE PTR [edi],al
  426946:	add    esi,0x1
  426949:	shr    ecx,0x2
  42694c:	add    edi,0x1
  42694f:	cmp    ecx,0x8
  426952:	jb     0x4268dc
  426954:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426956:	jmp    DWORD PTR [edx*4+0x4269cc]
  42695d:	lea    ecx,[ecx+0x0]
  426960:	ret    
  426961:	imul   eax,DWORD PTR [edx+0x0],0x4269b0
  426968:	test   al,0x69
  42696a:	inc    edx
  42696b:	add    BYTE PTR [eax-0x67ffbd97],ah
  426971:	imul   eax,DWORD PTR [edx+0x0],0x426990
  426978:	mov    BYTE PTR [ecx+0x42],ch
  42697b:	add    BYTE PTR [eax-0x74ffbd97],al
  426981:	inc    esp
  426982:	mov    fs,esp
  426984:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426988:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42698c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426990:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426994:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269b8:	lea    eax,[ecx*4+0x0]
  4269bf:	add    esi,eax
  4269c1:	add    edi,eax
  4269c3:	jmp    DWORD PTR [edx*4+0x4269cc]
  4269ca:	mov    edi,edi
  4269cc:	fsubr  QWORD PTR [ecx+0x42]
  4269cf:	add    ah,ah
  4269d1:	imul   eax,DWORD PTR [edx+0x0],0x4269f0
  4269d8:	add    al,0x6a
  4269da:	inc    edx
  4269db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269e1:	leave  
  4269e2:	ret    
  4269e3:	nop
  4269e4:	mov    al,BYTE PTR [esi]
  4269e6:	mov    BYTE PTR [edi],al
  4269e8:	mov    eax,DWORD PTR [ebp+0x8]
  4269eb:	pop    esi
  4269ec:	pop    edi
  4269ed:	leave  
  4269ee:	ret    
  4269ef:	nop
  4269f0:	mov    al,BYTE PTR [esi]
  4269f2:	mov    BYTE PTR [edi],al
  4269f4:	mov    al,BYTE PTR [esi+0x1]
  4269f7:	mov    BYTE PTR [edi+0x1],al
  4269fa:	mov    eax,DWORD PTR [ebp+0x8]
  4269fd:	pop    esi
  4269fe:	pop    edi
  4269ff:	leave  
  426a00:	ret    
  426a01:	lea    ecx,[ecx+0x0]
  426a04:	mov    al,BYTE PTR [esi]
  426a06:	mov    BYTE PTR [edi],al
  426a08:	mov    al,BYTE PTR [esi+0x1]
  426a0b:	mov    BYTE PTR [edi+0x1],al
  426a0e:	mov    al,BYTE PTR [esi+0x2]
  426a11:	mov    BYTE PTR [edi+0x2],al
  426a14:	mov    eax,DWORD PTR [ebp+0x8]
  426a17:	pop    esi
  426a18:	pop    edi
  426a19:	leave  
  426a1a:	ret    
  426a1b:	nop
  426a1c:	lea    esi,[ecx+esi*1-0x4]
  426a20:	lea    edi,[ecx+edi*1-0x4]
  426a24:	test   edi,0x3
  426a2a:	jne    0x426a50
  426a2c:	shr    ecx,0x2
  426a2f:	and    edx,0x3
  426a32:	cmp    ecx,0x8
  426a35:	jb     0x426a44
  426a37:	std    
  426a38:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a3a:	cld    
  426a3b:	jmp    DWORD PTR [edx*4+0x426b68]
  426a42:	mov    edi,edi
  426a44:	neg    ecx
  426a46:	jmp    DWORD PTR [ecx*4+0x426b18]
  426a4d:	lea    ecx,[ecx+0x0]
  426a50:	mov    eax,edi
  426a52:	mov    edx,0x3
  426a57:	cmp    ecx,0x4
  426a5a:	jb     0x426a68
  426a5c:	and    eax,0x3
  426a5f:	sub    ecx,eax
  426a61:	jmp    DWORD PTR [eax*4+0x426a6c]
  426a68:	jmp    DWORD PTR [ecx*4+0x426b68]
  426a6f:	nop
  426a70:	jl     0x426adc
  426a72:	inc    edx
  426a73:	add    BYTE PTR [eax-0x37ffbd96],ah
  426a79:	push   0x42
  426a7b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a81:	mov    BYTE PTR [edi+0x3],al
  426a84:	sub    esi,0x1
  426a87:	shr    ecx,0x2
  426a8a:	sub    edi,0x1
  426a8d:	cmp    ecx,0x8
  426a90:	jb     0x426a44
  426a92:	std    
  426a93:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a95:	cld    
  426a96:	jmp    DWORD PTR [edx*4+0x426b68]
  426a9d:	lea    ecx,[ecx+0x0]
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	and    edx,ecx
  426aa5:	mov    BYTE PTR [edi+0x3],al
  426aa8:	mov    al,BYTE PTR [esi+0x2]
  426aab:	shr    ecx,0x2
  426aae:	mov    BYTE PTR [edi+0x2],al
  426ab1:	sub    esi,0x2
  426ab4:	sub    edi,0x2
  426ab7:	cmp    ecx,0x8
  426aba:	jb     0x426a44
  426abc:	std    
  426abd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426abf:	cld    
  426ac0:	jmp    DWORD PTR [edx*4+0x426b68]
  426ac7:	nop
  426ac8:	mov    al,BYTE PTR [esi+0x3]
  426acb:	and    edx,ecx
  426acd:	mov    BYTE PTR [edi+0x3],al
  426ad0:	mov    al,BYTE PTR [esi+0x2]
  426ad3:	mov    BYTE PTR [edi+0x2],al
  426ad6:	mov    al,BYTE PTR [esi+0x1]
  426ad9:	shr    ecx,0x2
  426adc:	mov    BYTE PTR [edi+0x1],al
  426adf:	sub    esi,0x3
  426ae2:	sub    edi,0x3
  426ae5:	cmp    ecx,0x8
  426ae8:	jb     0x426a44
  426aee:	std    
  426aef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af1:	cld    
  426af2:	jmp    DWORD PTR [edx*4+0x426b68]
  426af9:	lea    ecx,[ecx+0x0]
  426afc:	sbb    al,0x6b
  426afe:	inc    edx
  426aff:	add    BYTE PTR [ebx+ebp*2],ah
  426b02:	inc    edx
  426b03:	add    BYTE PTR [ebx+ebp*2],ch
  426b06:	inc    edx
  426b07:	add    BYTE PTR [ebx+ebp*2],dh
  426b0a:	inc    edx
  426b0b:	add    BYTE PTR [ebx+ebp*2],bh
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b13:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b17:	add    BYTE PTR [edi+0x6b],bl
  426b1a:	inc    edx
  426b1b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b21:	inc    esp
  426b22:	(bad)  
  426b23:	sbb    al,0x8b
  426b25:	inc    esp
  426b26:	mov    ds,WORD PTR [eax]
  426b28:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b2c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b30:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b34:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b40:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b50:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b54:	lea    eax,[ecx*4+0x0]
  426b5b:	add    esi,eax
  426b5d:	add    edi,eax
  426b5f:	jmp    DWORD PTR [edx*4+0x426b68]
  426b66:	mov    edi,edi
  426b68:	js     0x426bd5
  426b6a:	inc    edx
  426b6b:	add    BYTE PTR [eax-0x6fffbd95],al
  426b71:	imul   eax,DWORD PTR [edx+0x0],0xffffffa4
  426b75:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b79:	inc    ebp
  426b7a:	or     BYTE PTR [esi+0x5f],bl
  426b7d:	leave  
  426b7e:	ret    
  426b7f:	nop
  426b80:	mov    al,BYTE PTR [esi+0x3]
  426b83:	mov    BYTE PTR [edi+0x3],al
  426b86:	mov    eax,DWORD PTR [ebp+0x8]
  426b89:	pop    esi
  426b8a:	pop    edi
  426b8b:	leave  
  426b8c:	ret    
  426b8d:	lea    ecx,[ecx+0x0]
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    al,BYTE PTR [esi+0x2]
  426b99:	mov    BYTE PTR [edi+0x2],al
  426b9c:	mov    eax,DWORD PTR [ebp+0x8]
  426b9f:	pop    esi
  426ba0:	pop    edi
  426ba1:	leave  
  426ba2:	ret    
  426ba3:	nop
  426ba4:	mov    al,BYTE PTR [esi+0x3]
  426ba7:	mov    BYTE PTR [edi+0x3],al
  426baa:	mov    al,BYTE PTR [esi+0x2]
  426bad:	mov    BYTE PTR [edi+0x2],al
  426bb0:	mov    al,BYTE PTR [esi+0x1]
  426bb3:	mov    BYTE PTR [edi+0x1],al
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	pop    esi
  426bba:	pop    edi
  426bbb:	leave  
  426bbc:	ret    
  426bbd:	push   ebp
  426bbe:	mov    ebp,esp
  426bc0:	sub    esp,0xc
  426bc3:	mov    eax,ds:0x45f510
  426bc8:	xor    eax,DWORD PTR [ebp+0x4]
  426bcb:	and    BYTE PTR [ebp-0x6],0x0
  426bcf:	push   0x6
  426bd1:	mov    DWORD PTR [ebp-0x4],eax
  426bd4:	lea    eax,[ebp-0xc]
  426bd7:	push   eax
  426bd8:	push   0x1004
  426bdd:	push   DWORD PTR [ebp+0x8]
  426be0:	call   DWORD PTR ds:0x428108
  426be6:	test   eax,eax
  426be8:	jne    0x426bef
  426bea:	or     eax,0xffffffff
  426bed:	jmp    0x426bf9
  426bef:	lea    eax,[ebp-0xc]
  426bf2:	push   eax
  426bf3:	call   0x426efe
  426bf8:	pop    ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	xor    ecx,DWORD PTR [ebp+0x4]
  426bff:	call   0x42400c
  426c04:	leave  
  426c05:	ret    
  426c06:	push   0x38
  426c08:	push   0x428ee8
  426c0d:	call   0x423940
  426c12:	mov    eax,ds:0x45f510
  426c17:	xor    eax,DWORD PTR [ebp+0x4]
  426c1a:	mov    DWORD PTR [ebp-0x1c],eax
  426c1d:	xor    edi,edi
  426c1f:	mov    DWORD PTR [ebp-0x20],edi
  426c22:	mov    DWORD PTR [ebp-0x24],edi
  426c25:	mov    eax,DWORD PTR [ebp+0x14]
  426c28:	mov    ebx,DWORD PTR [eax]
  426c2a:	mov    DWORD PTR [ebp-0x28],ebx
  426c2d:	mov    DWORD PTR [ebp-0x2c],edi
  426c30:	mov    eax,DWORD PTR [ebp+0x8]
  426c33:	cmp    eax,DWORD PTR [ebp+0xc]
  426c36:	je     0x426daf
  426c3c:	lea    ecx,[ebp-0x40]
  426c3f:	push   ecx
  426c40:	push   eax
  426c41:	mov    esi,DWORD PTR ds:0x4280d4
  426c47:	call   esi
  426c49:	test   eax,eax
  426c4b:	je     0x426c6d
  426c4d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c51:	jne    0x426c6d
  426c53:	lea    eax,[ebp-0x40]
  426c56:	push   eax
  426c57:	push   DWORD PTR [ebp+0xc]
  426c5a:	call   esi
  426c5c:	test   eax,eax
  426c5e:	je     0x426c6d
  426c60:	cmp    DWORD PTR [ebp-0x40],0x1
  426c64:	jne    0x426c6d
  426c66:	mov    DWORD PTR [ebp-0x2c],0x1
  426c6d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c70:	je     0x426c8c
  426c72:	cmp    ebx,0xffffffff
  426c75:	je     0x426c7b
  426c77:	mov    esi,ebx
  426c79:	jmp    0x426c87
  426c7b:	push   DWORD PTR [ebp+0x10]
  426c7e:	call   0x423f50
  426c83:	pop    ecx
  426c84:	mov    esi,eax
  426c86:	inc    esi
  426c87:	mov    DWORD PTR [ebp-0x44],esi
  426c8a:	jmp    0x426c8f
  426c8c:	mov    esi,DWORD PTR [ebp-0x44]
  426c8f:	cmp    DWORD PTR [ebp-0x2c],edi
  426c92:	jne    0x426cae
  426c94:	push   edi
  426c95:	push   edi
  426c96:	push   ebx
  426c97:	push   DWORD PTR [ebp+0x10]
  426c9a:	push   0x1
  426c9c:	push   DWORD PTR [ebp+0x8]
  426c9f:	call   DWORD PTR ds:0x4280f8
  426ca5:	mov    esi,eax
  426ca7:	mov    DWORD PTR [ebp-0x44],esi
  426caa:	cmp    esi,edi
  426cac:	je     0x426d06
  426cae:	mov    DWORD PTR [ebp-0x4],edi
  426cb1:	lea    eax,[esi+esi*1]
  426cb4:	add    eax,0x3
  426cb7:	and    eax,0xfffffffc
  426cba:	call   0x423990
  426cbf:	mov    DWORD PTR [ebp-0x18],esp
  426cc2:	mov    ebx,esp
  426cc4:	mov    DWORD PTR [ebp-0x48],ebx
  426cc7:	lea    eax,[esi+esi*1]
  426cca:	push   eax
  426ccb:	push   edi
  426ccc:	push   ebx
  426ccd:	call   0x426240
  426cd2:	add    esp,0xc
  426cd5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cd9:	jmp    0x426cf2
  426cdb:	xor    eax,eax
  426cdd:	inc    eax
  426cde:	ret    
  426cdf:	mov    esp,DWORD PTR [ebp-0x18]
  426ce2:	call   0x426dd5
  426ce7:	xor    edi,edi
  426ce9:	xor    ebx,ebx
  426ceb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cef:	mov    esi,DWORD PTR [ebp-0x44]
  426cf2:	cmp    ebx,edi
  426cf4:	jne    0x426d14
  426cf6:	push   esi
  426cf7:	push   0x2
  426cf9:	call   0x424a58
  426cfe:	pop    ecx
  426cff:	pop    ecx
  426d00:	mov    ebx,eax
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d0d
  426d06:	xor    eax,eax
  426d08:	jmp    0x426dc1
  426d0d:	mov    DWORD PTR [ebp-0x24],0x1
  426d14:	push   esi
  426d15:	push   ebx
  426d16:	push   DWORD PTR [ebp-0x28]
  426d19:	push   DWORD PTR [ebp+0x10]
  426d1c:	push   0x1
  426d1e:	push   DWORD PTR [ebp+0x8]
  426d21:	call   DWORD PTR ds:0x4280f8
  426d27:	test   eax,eax
  426d29:	je     0x426db2
  426d2f:	cmp    DWORD PTR [ebp+0x18],edi
  426d32:	je     0x426d54
  426d34:	push   edi
  426d35:	push   edi
  426d36:	push   DWORD PTR [ebp+0x1c]
  426d39:	push   DWORD PTR [ebp+0x18]
  426d3c:	push   esi
  426d3d:	push   ebx
  426d3e:	push   edi
  426d3f:	push   DWORD PTR [ebp+0xc]
  426d42:	call   DWORD PTR ds:0x428088
  426d48:	test   eax,eax
  426d4a:	je     0x426db2
  426d4c:	mov    eax,DWORD PTR [ebp+0x18]
  426d4f:	mov    DWORD PTR [ebp-0x20],eax
  426d52:	jmp    0x426db2
  426d54:	cmp    DWORD PTR [ebp-0x2c],edi
  426d57:	jne    0x426d6f
  426d59:	push   edi
  426d5a:	push   edi
  426d5b:	push   edi
  426d5c:	push   edi
  426d5d:	push   esi
  426d5e:	push   ebx
  426d5f:	push   edi
  426d60:	push   DWORD PTR [ebp+0xc]
  426d63:	call   DWORD PTR ds:0x428088
  426d69:	mov    esi,eax
  426d6b:	cmp    esi,edi
  426d6d:	je     0x426db2
  426d6f:	push   esi
  426d70:	push   0x1
  426d72:	call   0x424a58
  426d77:	pop    ecx
  426d78:	pop    ecx
  426d79:	mov    DWORD PTR [ebp-0x20],eax
  426d7c:	cmp    eax,edi
  426d7e:	je     0x426db2
  426d80:	push   edi
  426d81:	push   edi
  426d82:	push   esi
  426d83:	push   eax
  426d84:	push   esi
  426d85:	push   ebx
  426d86:	push   edi
  426d87:	push   DWORD PTR [ebp+0xc]
  426d8a:	call   DWORD PTR ds:0x428088
  426d90:	cmp    eax,edi
  426d92:	jne    0x426da2
  426d94:	push   DWORD PTR [ebp-0x20]
  426d97:	call   0x42454a
  426d9c:	pop    ecx
  426d9d:	mov    DWORD PTR [ebp-0x20],edi
  426da0:	jmp    0x426db2
  426da2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426da6:	je     0x426db2
  426da8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dab:	mov    DWORD PTR [ecx],eax
  426dad:	jmp    0x426db2
  426daf:	mov    ebx,DWORD PTR [ebp-0x48]
  426db2:	cmp    DWORD PTR [ebp-0x24],edi
  426db5:	je     0x426dbe
  426db7:	push   ebx
  426db8:	call   0x42454a
  426dbd:	pop    ecx
  426dbe:	mov    eax,DWORD PTR [ebp-0x20]
  426dc1:	lea    esp,[ebp-0x54]
  426dc4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dc7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dca:	call   0x42400c
  426dcf:	call   0x42397b
  426dd4:	ret    
  426dd5:	push   ebp
  426dd6:	mov    ebp,esp
  426dd8:	sub    esp,0x48
  426ddb:	push   ebx
  426ddc:	push   esi
  426ddd:	push   edi
  426dde:	push   0x4
  426de0:	pop    eax
  426de1:	call   0x423990
  426de6:	mov    ebx,esp
  426de8:	push   0x1c
  426dea:	lea    eax,[ebp-0x24]
  426ded:	push   eax
  426dee:	push   ebx
  426def:	call   DWORD PTR ds:0x42803c
  426df5:	test   eax,eax
  426df7:	je     0x426e6a
  426df9:	mov    edi,DWORD PTR [ebp-0x20]
  426dfc:	lea    eax,[ebp-0x48]
  426dff:	push   eax
  426e00:	call   DWORD PTR ds:0x428040
  426e06:	mov    eax,DWORD PTR [ebp-0x44]
  426e09:	lea    esi,[eax-0x1]
  426e0c:	not    esi
  426e0e:	and    esi,ebx
  426e10:	sub    esi,eax
  426e12:	mov    DWORD PTR [ebp-0x4],eax
  426e15:	mov    eax,ds:0x45fba4
  426e1a:	mov    ecx,eax
  426e1c:	dec    ecx
  426e1d:	neg    ecx
  426e1f:	sbb    ecx,ecx
  426e21:	and    ecx,0xffff1000
  426e27:	add    ecx,0x11000
  426e2d:	add    ecx,edi
  426e2f:	cmp    esi,ecx
  426e31:	jb     0x426e6a
  426e33:	cmp    eax,0x1
  426e36:	je     0x426e82
  426e38:	mov    ebx,edi
  426e3a:	mov    edi,0x1000
  426e3f:	push   0x1c
  426e41:	lea    eax,[ebp-0x24]
  426e44:	push   eax
  426e45:	push   ebx
  426e46:	call   DWORD PTR ds:0x42803c
  426e4c:	test   eax,eax
  426e4e:	je     0x426e6a
  426e50:	add    ebx,DWORD PTR [ebp-0x18]
  426e53:	test   DWORD PTR [ebp-0x14],edi
  426e56:	je     0x426e3f
  426e58:	test   BYTE PTR [ebp-0xf],0x1
  426e5c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e5f:	je     0x426e66
  426e61:	xor    eax,eax
  426e63:	inc    eax
  426e64:	jmp    0x426e9e
  426e66:	cmp    esi,ebx
  426e68:	jae    0x426e6e
  426e6a:	xor    eax,eax
  426e6c:	jmp    0x426e9e
  426e6e:	push   0x4
  426e70:	push   edi
  426e71:	push   DWORD PTR [ebp-0x4]
  426e74:	push   ebx
  426e75:	call   DWORD PTR ds:0x42802c
  426e7b:	mov    eax,ds:0x45fba4
  426e80:	jmp    0x426e84
  426e82:	mov    ebx,esi
  426e84:	dec    eax
  426e85:	neg    eax
  426e87:	sbb    eax,eax
  426e89:	and    eax,0x103
  426e8e:	lea    ecx,[ebp-0x8]
  426e91:	push   ecx
  426e92:	inc    eax
  426e93:	push   eax
  426e94:	push   DWORD PTR [ebp-0x4]
  426e97:	push   ebx
  426e98:	call   DWORD PTR ds:0x428050
  426e9e:	lea    esp,[ebp-0x54]
  426ea1:	pop    edi
  426ea2:	pop    esi
  426ea3:	pop    ebx
  426ea4:	leave  
  426ea5:	ret    
  426ea6:	int3   
  426ea7:	int3   
  426ea8:	int3   
  426ea9:	int3   
  426eaa:	int3   
  426eab:	int3   
  426eac:	int3   
  426ead:	int3   
  426eae:	int3   
  426eaf:	int3   
  426eb0:	push   ebp
  426eb1:	mov    ebp,esp
  426eb3:	push   edi
  426eb4:	push   esi
  426eb5:	push   ebx
  426eb6:	mov    esi,DWORD PTR [ebp+0xc]
  426eb9:	mov    edi,DWORD PTR [ebp+0x8]
  426ebc:	mov    al,0xff
  426ebe:	mov    edi,edi
  426ec0:	or     al,al
  426ec2:	je     0x426ef6
  426ec4:	mov    al,BYTE PTR [esi]
  426ec6:	add    esi,0x1
  426ec9:	mov    ah,BYTE PTR [edi]
  426ecb:	add    edi,0x1
  426ece:	cmp    ah,al
  426ed0:	je     0x426ec0
  426ed2:	sub    al,0x41
  426ed4:	cmp    al,0x1a
  426ed6:	sbb    cl,cl
  426ed8:	and    cl,0x20
  426edb:	add    al,cl
  426edd:	add    al,0x41
  426edf:	xchg   al,ah
  426ee1:	sub    al,0x41
  426ee3:	cmp    al,0x1a
  426ee5:	sbb    cl,cl
  426ee7:	and    cl,0x20
  426eea:	add    al,cl
  426eec:	add    al,0x41
  426eee:	cmp    al,ah
  426ef0:	je     0x426ec0
  426ef2:	sbb    al,al
  426ef4:	sbb    al,0xff
  426ef6:	movsx  eax,al
  426ef9:	pop    ebx
  426efa:	pop    esi
  426efb:	pop    edi
  426efc:	leave  
  426efd:	ret    
  426efe:	push   esi
  426eff:	push   edi
  426f00:	call   0x4237f3
  426f05:	mov    edi,DWORD PTR [eax+0x64]
  426f08:	cmp    edi,DWORD PTR ds:0x45f66c
  426f0e:	je     0x426f17
  426f10:	call   0x424c9f
  426f15:	mov    edi,eax
  426f17:	mov    esi,DWORD PTR [esp+0xc]
  426f1b:	cmp    DWORD PTR [edi+0x28],0x1
  426f1f:	movzx  eax,BYTE PTR [esi]
  426f22:	jle    0x426f32
  426f24:	push   0x8
  426f26:	push   eax
  426f27:	push   edi
  426f28:	call   0x426f86
  426f2d:	add    esp,0xc
  426f30:	jmp    0x426f3c
  426f32:	mov    ecx,DWORD PTR [edi+0x48]
  426f35:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f39:	and    eax,0x8
  426f3c:	test   eax,eax
  426f3e:	je     0x426f43
  426f40:	inc    esi
  426f41:	jmp    0x426f1b
  426f43:	movzx  ecx,BYTE PTR [esi]
  426f46:	inc    esi
  426f47:	cmp    ecx,0x2d
  426f4a:	mov    edx,ecx
  426f4c:	je     0x426f53
  426f4e:	cmp    ecx,0x2b
  426f51:	jne    0x426f57
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	xor    eax,eax
  426f59:	cmp    ecx,0x30
  426f5c:	jl     0x426f68
  426f5e:	cmp    ecx,0x39
  426f61:	jg     0x426f68
  426f63:	sub    ecx,0x30
  426f66:	jmp    0x426f6b
  426f68:	or     ecx,0xffffffff
  426f6b:	cmp    ecx,0xffffffff
  426f6e:	je     0x426f7c
  426f70:	lea    eax,[eax+eax*4]
  426f73:	lea    eax,[ecx+eax*2]
  426f76:	movzx  ecx,BYTE PTR [esi]
  426f79:	inc    esi
  426f7a:	jmp    0x426f59
  426f7c:	cmp    edx,0x2d
  426f7f:	pop    edi
  426f80:	pop    esi
  426f81:	jne    0x426f85
  426f83:	neg    eax
  426f85:	ret    
  426f86:	push   ebp
  426f87:	mov    ebp,esp
  426f89:	push   ecx
  426f8a:	mov    eax,DWORD PTR [ebp+0xc]
  426f8d:	lea    ecx,[eax+0x1]
  426f90:	cmp    ecx,0x100
  426f96:	mov    ecx,DWORD PTR [ebp+0x8]
  426f99:	ja     0x426fa4
  426f9b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f9e:	movzx  eax,WORD PTR [ecx+eax*2]
  426fa2:	jmp    0x426ff8
  426fa4:	push   esi
  426fa5:	mov    edx,eax
  426fa7:	sar    edx,0x8
  426faa:	push   edi
  426fab:	mov    edi,DWORD PTR [ecx+0x48]
  426fae:	movzx  esi,dl
  426fb1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fb6:	pop    edi
  426fb7:	pop    esi
  426fb8:	je     0x426fc9
  426fba:	and    BYTE PTR [ebp-0x2],0x0
  426fbe:	push   0x2
  426fc0:	mov    BYTE PTR [ebp-0x3],al
  426fc3:	mov    BYTE PTR [ebp-0x4],dl
  426fc6:	pop    eax
  426fc7:	jmp    0x426fd3
  426fc9:	and    BYTE PTR [ebp-0x3],0x0
  426fcd:	mov    BYTE PTR [ebp-0x4],al
  426fd0:	xor    eax,eax
  426fd2:	inc    eax
  426fd3:	push   0x1
  426fd5:	push   DWORD PTR [ecx+0x14]
  426fd8:	push   DWORD PTR [ecx+0x4]
  426fdb:	lea    ecx,[ebp+0xe]
  426fde:	push   ecx
  426fdf:	push   eax
  426fe0:	lea    eax,[ebp-0x4]
  426fe3:	push   eax
  426fe4:	push   0x1
  426fe6:	call   0x426068
  426feb:	add    esp,0x1c
  426fee:	test   eax,eax
  426ff0:	jne    0x426ff4
  426ff2:	leave  
  426ff3:	ret    
  426ff4:	movzx  eax,WORD PTR [ebp+0xe]
  426ff8:	and    eax,DWORD PTR [ebp+0x10]
  426ffb:	leave  
  426ffc:	ret    
  426ffd:	int3   
  426ffe:	int3   
  426fff:	int3   
  427000:	mov    eax,DWORD PTR [esp+0x8]
  427004:	mov    ecx,DWORD PTR [esp+0x10]
  427008:	or     ecx,eax
  42700a:	mov    ecx,DWORD PTR [esp+0xc]
  42700e:	jne    0x427019
  427010:	mov    eax,DWORD PTR [esp+0x4]
  427014:	mul    ecx
  427016:	ret    0x10
  427019:	push   ebx
  42701a:	mul    ecx
  42701c:	mov    ebx,eax
  42701e:	mov    eax,DWORD PTR [esp+0x8]
  427022:	mul    DWORD PTR [esp+0x14]
  427026:	add    ebx,eax
  427028:	mov    eax,DWORD PTR [esp+0x8]
  42702c:	mul    ecx
  42702e:	add    edx,ebx
  427030:	pop    ebx
  427031:	ret    0x10
  427034:	int3   
  427035:	int3   
  427036:	int3   
  427037:	int3   
  427038:	int3   
  427039:	int3   
  42703a:	int3   
  42703b:	int3   
  42703c:	int3   
  42703d:	int3   
  42703e:	int3   
  42703f:	int3   
  427040:	push   ebp
  427041:	mov    ebp,esp
  427043:	push   edi
  427044:	push   esi
  427045:	push   ebx
  427046:	mov    ecx,DWORD PTR [ebp+0x10]
  427049:	or     ecx,ecx
  42704b:	je     0x42709a
  42704d:	mov    esi,DWORD PTR [ebp+0x8]
  427050:	mov    edi,DWORD PTR [ebp+0xc]
  427053:	mov    bh,0x41
  427055:	mov    bl,0x5a
  427057:	mov    dh,0x20
  427059:	lea    ecx,[ecx+0x0]
  42705c:	mov    ah,BYTE PTR [esi]
  42705e:	or     ah,ah
  427060:	mov    al,BYTE PTR [edi]
  427062:	je     0x42708b
  427064:	or     al,al
  427066:	je     0x42708b
  427068:	add    esi,0x1
  42706b:	add    edi,0x1
  42706e:	cmp    ah,bh
  427070:	jb     0x427078
  427072:	cmp    ah,bl
  427074:	ja     0x427078
  427076:	add    ah,dh
  427078:	cmp    al,bh
  42707a:	jb     0x427082
  42707c:	cmp    al,bl
  42707e:	ja     0x427082
  427080:	add    al,dh
  427082:	cmp    ah,al
  427084:	jne    0x427091
  427086:	sub    ecx,0x1
  427089:	jne    0x42705c
  42708b:	xor    ecx,ecx
  42708d:	cmp    ah,al
  42708f:	je     0x42709a
  427091:	mov    ecx,0xffffffff
  427096:	jb     0x42709a
  427098:	neg    ecx
  42709a:	mov    eax,ecx
  42709c:	pop    ebx
  42709d:	pop    esi
  42709e:	pop    edi
  42709f:	leave  
  4270a0:	ret    
  4270a1:	int3   
  4270a2:	int3   
  4270a3:	int3   
  4270a4:	int3   
  4270a5:	int3   
  4270a6:	int3   
  4270a7:	int3   
  4270a8:	int3   
  4270a9:	int3   
  4270aa:	int3   
  4270ab:	int3   
  4270ac:	int3   
  4270ad:	int3   
  4270ae:	int3   
  4270af:	int3   
  4270b0:	push   esi
  4270b1:	mov    eax,DWORD PTR [esp+0x14]
  4270b5:	or     eax,eax
  4270b7:	jne    0x4270e1
  4270b9:	mov    ecx,DWORD PTR [esp+0x10]
  4270bd:	mov    eax,DWORD PTR [esp+0xc]
  4270c1:	xor    edx,edx
  4270c3:	div    ecx
  4270c5:	mov    ebx,eax
  4270c7:	mov    eax,DWORD PTR [esp+0x8]
  4270cb:	div    ecx
  4270cd:	mov    esi,eax
  4270cf:	mov    eax,ebx
  4270d1:	mul    DWORD PTR [esp+0x10]
  4270d5:	mov    ecx,eax
  4270d7:	mov    eax,esi
  4270d9:	mul    DWORD PTR [esp+0x10]
  4270dd:	add    edx,ecx
  4270df:	jmp    0x427128
  4270e1:	mov    ecx,eax
  4270e3:	mov    ebx,DWORD PTR [esp+0x10]
  4270e7:	mov    edx,DWORD PTR [esp+0xc]
  4270eb:	mov    eax,DWORD PTR [esp+0x8]
  4270ef:	shr    ecx,1
  4270f1:	rcr    ebx,1
  4270f3:	shr    edx,1
  4270f5:	rcr    eax,1
  4270f7:	or     ecx,ecx
  4270f9:	jne    0x4270ef
  4270fb:	div    ebx
  4270fd:	mov    esi,eax
  4270ff:	mul    DWORD PTR [esp+0x14]
  427103:	mov    ecx,eax
  427105:	mov    eax,DWORD PTR [esp+0x10]
  427109:	mul    esi
  42710b:	add    edx,ecx
  42710d:	jb     0x42711d
  42710f:	cmp    edx,DWORD PTR [esp+0xc]
  427113:	ja     0x42711d
  427115:	jb     0x427126
  427117:	cmp    eax,DWORD PTR [esp+0x8]
  42711b:	jbe    0x427126
  42711d:	dec    esi
  42711e:	sub    eax,DWORD PTR [esp+0x10]
  427122:	sbb    edx,DWORD PTR [esp+0x14]
  427126:	xor    ebx,ebx
  427128:	sub    eax,DWORD PTR [esp+0x8]
  42712c:	sbb    edx,DWORD PTR [esp+0xc]
  427130:	neg    edx
  427132:	neg    eax
  427134:	sbb    edx,0x0
  427137:	mov    ecx,edx
  427139:	mov    edx,ebx
  42713b:	mov    ebx,ecx
  42713d:	mov    ecx,eax
  42713f:	mov    eax,esi
  427141:	pop    esi
  427142:	ret    0x10
  427145:	int3   
  427146:	int3   
  427147:	int3   
  427148:	int3   
  427149:	int3   
  42714a:	int3   
  42714b:	int3   
  42714c:	int3   
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	lea    eax,[edx-0x1]
  427153:	pop    ebx
  427154:	ret    
  427155:	lea    esp,[esp+0x0]
  42715c:	lea    esp,[esp+0x0]
  427160:	xor    eax,eax
  427162:	mov    al,BYTE PTR [esp+0x8]
  427166:	push   ebx
  427167:	mov    ebx,eax
  427169:	shl    eax,0x8
  42716c:	mov    edx,DWORD PTR [esp+0x8]
  427170:	test   edx,0x3
  427176:	je     0x42718d
  427178:	mov    cl,BYTE PTR [edx]
  42717a:	add    edx,0x1
  42717d:	cmp    cl,bl
  42717f:	je     0x427150
  427181:	test   cl,cl
  427183:	je     0x4271d6
  427185:	test   edx,0x3
  42718b:	jne    0x427178
  42718d:	or     ebx,eax
  42718f:	push   edi
  427190:	mov    eax,ebx
  427192:	shl    ebx,0x10
  427195:	push   esi
  427196:	or     ebx,eax
  427198:	mov    ecx,DWORD PTR [edx]
  42719a:	mov    edi,0x7efefeff
  42719f:	mov    eax,ecx
  4271a1:	mov    esi,edi
  4271a3:	xor    ecx,ebx
  4271a5:	add    esi,eax
  4271a7:	add    edi,ecx
  4271a9:	xor    ecx,0xffffffff
  4271ac:	xor    eax,0xffffffff
  4271af:	xor    ecx,edi
  4271b1:	xor    eax,esi
  4271b3:	add    edx,0x4
  4271b6:	and    ecx,0x81010100
  4271bc:	jne    0x4271da
  4271be:	and    eax,0x81010100
  4271c3:	je     0x427198
  4271c5:	and    eax,0x1010100
  4271ca:	jne    0x4271d4
  4271cc:	and    esi,0x80000000
  4271d2:	jne    0x427198
  4271d4:	pop    esi
  4271d5:	pop    edi
  4271d6:	pop    ebx
  4271d7:	xor    eax,eax
  4271d9:	ret    
  4271da:	mov    eax,DWORD PTR [edx-0x4]
  4271dd:	cmp    al,bl
  4271df:	je     0x427217
  4271e1:	test   al,al
  4271e3:	je     0x4271d4
  4271e5:	cmp    ah,bl
  4271e7:	je     0x427210
  4271e9:	test   ah,ah
  4271eb:	je     0x4271d4
  4271ed:	shr    eax,0x10
  4271f0:	cmp    al,bl
  4271f2:	je     0x427209
  4271f4:	test   al,al
  4271f6:	je     0x4271d4
  4271f8:	cmp    ah,bl
  4271fa:	je     0x427202
  4271fc:	test   ah,ah
  4271fe:	je     0x4271d4
  427200:	jmp    0x427198
  427202:	pop    esi
  427203:	pop    edi
  427204:	lea    eax,[edx-0x1]
  427207:	pop    ebx
  427208:	ret    
  427209:	lea    eax,[edx-0x2]
  42720c:	pop    esi
  42720d:	pop    edi
  42720e:	pop    ebx
  42720f:	ret    
  427210:	lea    eax,[edx-0x3]
  427213:	pop    esi
  427214:	pop    edi
  427215:	pop    ebx
  427216:	ret    
  427217:	lea    eax,[edx-0x4]
  42721a:	pop    esi
  42721b:	pop    edi
  42721c:	pop    ebx
  42721d:	ret    
  42721e:	jmp    DWORD PTR ds:0x428054
