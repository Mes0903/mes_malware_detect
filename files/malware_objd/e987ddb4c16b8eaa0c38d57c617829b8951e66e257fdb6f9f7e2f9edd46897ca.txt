
e987ddb4c16b8eaa0c38d57c617829b8951e66e257fdb6f9f7e2f9edd46897ca.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [ebx-0x82b8e00],bl
  401006:	(bad)  
  401007:	inc    DWORD PTR [eax]
  401009:	inc    eax
  40100a:	dec    edi
  40100c:	stos   BYTE PTR es:[edi],al
  40100d:	jl     0x40100e
  40100f:	dec    DWORD PTR [ecx-0x554e0022]
  401015:	test   DWORD PTR [eax],eax
  401017:	int3   
  401018:	add    BYTE PTR [ecx+ecx*4+0x3f],ch
  40101c:	addr16 jle 0x40101e
  40101f:	adc    DWORD PTR [esi],0x11
  401022:	mov    esp,0x838fd38b
  401027:	sub    edi,edx
  401029:	add    BYTE PTR [eax],al
  40102b:	cmp    edi,0xffffffff
  40102e:	inc    DWORD PTR [eax]
  401030:	outs   dx,DWORD PTR ds:[esi]
  401031:	push   es
  401032:	fs call 0xff34:0xbf00d8a1
  40103a:	mov    edi,edi
  40103c:	inc    DWORD PTR [eax]
  40103e:	cmp    edi,0xffffff8c
  401041:	mov    WORD PTR [edx+0x3c],?
  401044:	push   ds
  401045:	jg     0x401047
  401047:	retf   0xb8
  40104a:	mov    DWORD PTR [ebx+0x83ff],eax
  401050:	fs push ebp
  401052:	pop    edx
  401053:	dec    ebx
  401054:	fwait
  401055:	xor    al,0xcc
  401057:	inc    dl
  401059:	inc    DWORD PTR [eax]
  40105b:	mov    DWORD PTR [ebx-0x53000100],eax
  401061:	push   es
  401062:	scas   al,BYTE PTR es:[edi]
  401063:	call   0xe740a1a4
  401068:	(bad)  
  40106a:	(bad)  
  40106b:	(bad)  
  40106c:	inc    DWORD PTR [eax]
  40106e:	(bad)  
  40106f:	inc    DWORD PTR ds:0x9e4bd955
  401075:	pop    edx
  401076:	add    ch,ch
  401078:	test   edi,edi
  40107a:	mov    DWORD PTR [ebx-0x1],eax
  401080:	out    0xa7,eax
  401082:	push   esp
  401083:	sub    al,0x4e
  401085:	push   ebx
  401086:	inc    ebp
  401088:	daa    
  401089:	add    bh,bh
  40108b:	add    BYTE PTR [ecx-0x4cff7c01],cl
  401091:	mov    ds:0xaa3fa836,eax
  401096:	jmp    FWORD PTR [esi+0x23]
  401099:	inc    DWORD PTR [eax]
  40109b:	inc    DWORD PTR [eax]
  40109d:	add    bh,bh
  40109f:	int3   
  4010a0:	jg     0x401114
  4010a2:	aas    
  4010a3:	push   esi
  4010a4:	in     al,dx
  4010a5:	daa    
  4010a6:	call   DWORD PTR [esi]
  4010a8:	adc    eax,0x0
  4010ad:	inc    DWORD PTR [eax]
  4010af:	inc    eax
  4010b1:	adc    DWORD PTR [ecx+0x77],esi
  4010b4:	jge    0x401092
  4010b6:	dec    ebx
  4010b8:	mov    ebp,0xffff83ff
  4010bd:	(bad)  
  4010be:	(bad)  
  4010bf:	jmp    FWORD PTR [ebx]
  4010c1:	ret    
  4010c2:	dec    ebx
  4010c3:	pop    ds
  4010c4:	dec    ebp
  4010c5:	imul   eax,DWORD PTR [ebx+0xffade6],0x83ff0000
  4010cf:	add    BYTE PTR [esi],ch
  4010d1:	ja     0x4010e1
  4010d3:	push   esp
  4010d4:	out    0x12,al
  4010d6:	jmp    FWORD PTR [ebx-0x33003a]
  4010dc:	add    BYTE PTR [eax],al
  4010de:	add    BYTE PTR [eax],al
  4010e0:	xor    al,0xf3
  4010e2:	mov    dl,bl
  4010e4:	sar    BYTE PTR [esi-0x1],cl
  4010e7:	(bad)  
  4010e8:	sub    BYTE PTR [eax],al
  4010ea:	(bad)  
  4010eb:	dec    DWORD PTR [ecx-0x1b00ff01]
  4010f1:	clc    
  4010f2:	es add DWORD PTR gs:0xff6796ff,ebx
  4010fa:	int3   
  4010fb:	add    ah,cl
  4010fd:	(bad)  
  4010fe:	inc    DWORD PTR [ebx-0x4ce626d3]
  401104:	nop
  401105:	mov    ebp,0x891850ff
  40110a:	cmp    edi,0xffffffff
  40110d:	mov    edi,edi
  40110f:	add    bl,bh
  401111:	add    ch,BYTE PTR [esp+eiz*2+0x4eff6929]
  401118:	nop
  401119:	int3   
  40111a:	(bad)  
  40111b:	(bad)  
  40111c:	dec    DWORD PTR [ecx-0xe2e0001]
  401122:	ds sbb eax,0xeecc56b4
  401128:	fcos   
  40112a:	int3   
  40112b:	int3   
  40112c:	dec    esp
  40112e:	(bad)  
  40112f:	call   DWORD PTR [eax-0x50c35104]
  401135:	lods   al,BYTE PTR ds:[esi]
  401136:	(bad)  
  401137:	jmp    0x401101
  401139:	inc    DWORD PTR [eax]
  40113b:	(bad)  
  40113c:	inc    DWORD PTR [ebx+0x6589cc83]
  401142:	inc    eax
  401143:	mov    esp,0x87ff6b10
  401148:	and    bh,bh
  40114a:	add    DWORD PTR [ebx-0x7c337d00],0xffffffc5
  401151:	lock jne 0x4010fe
  401154:	(bad)  [ebx+0xfe54ff]
  40115a:	(bad)  
  40115b:	(bad)  
  40115c:	inc    DWORD PTR [ebx+0x462eff83]
  401162:	call   0x8960403f
  401167:	ja     0x4011af
  401169:	mov    DWORD PTR [ebx+0x83],eax
  40116f:	mov    eax,eax
  401171:	xor    al,al
  401173:	jo     0x401196
  401175:	ret    0x5400
  401178:	push   esp
  401179:	(bad)  
  40117a:	inc    DWORD PTR [eax]
  40117c:	(bad)  
  40117d:	(bad)  
  40117e:	dec    esp
  401180:	inc    ecx
  401181:	or     BYTE PTR [esp+eax*2+0x18],dh
  401185:	sub    BYTE PTR [ebx-0xffbe66],al
  40118b:	or     DWORD PTR [ecx+0x2a8389cc],0x66
  401192:	cld    
  401193:	fwait
  401194:	ins    DWORD PTR es:[edi],dx
  401195:	xor    al,BYTE PTR [eax]
  401197:	push   esp
  401198:	dec    esi
  401199:	add    bh,bh
  40119b:	add    DWORD PTR [ebx+0x4cc83ff],0x72
  4011a2:	pop    di
  4011a4:	jb     0x40120a
  4011a6:	add    BYTE PTR [esi-0xa],dh
  4011a9:	inc    DWORD PTR [eax]
  4011ab:	add    bh,bh
  4011ad:	(bad)  
  4011ae:	inc    DWORD PTR [ebx-0x3fdd9be1]
  4011b4:	loope  0x401156
  4011b6:	push   DWORD PTR [ebx+0xffffa4]
  4011bc:	add    DWORD PTR [ebx-0xadcff01],0xffffffc0
  4011c3:	sub    BYTE PTR [edx],dl
  4011c5:	and    eax,0x8c1100
  4011ca:	inc    DWORD PTR [eax]
  4011cc:	inc    DWORD PTR [ebx-0x45d00077]
  4011d2:	inc    esi
  4011d3:	stos   BYTE PTR es:[edi],al
  4011d4:	jns    0x4011b9
  4011d6:	int3   
  4011d7:	popa   
  4011d8:	fs int3 
  4011da:	dec    DWORD PTR [ecx+0xff83ff]
  4011e0:	inc    ecx
  4011e1:	mov    esi,0x55a7aedd
  4011e6:	or     ecx,0xfffffffe
  4011e9:	add    bh,bh
  4011eb:	(bad)  
  4011ec:	(bad)  
  4011ed:	(bad)  
  4011ee:	dec    esp
  4011f0:	cmp    BYTE PTR [ebp-0x311f4248],bl
  4011f6:	add    cl,cl
  4011f8:	outs   dx,BYTE PTR ds:[esi]
  4011f9:	dec    esp
  4011fb:	(bad)  
  4011fc:	inc    DWORD PTR [eax]
  4011fe:	add    BYTE PTR [ebx+0x2f5b3289],al
  401204:	std    
  401205:	test   al,0xff
  401207:	mov    WORD PTR [ebp-0xff7601],ds
  40120d:	inc    DWORD PTR [eax]
  40120f:	call   DWORD PTR [ebx+0x1c]
  401212:	adc    esp,DWORD PTR [ecx+0x2500fe1d]
  401218:	xchg   esp,eax
  401219:	inc    DWORD PTR [eax]
  40121b:	(bad)  
  40121c:	inc    DWORD PTR [eax]
  40121e:	add    BYTE PTR [ebx+0x4d388dcc],al
  401224:	xchg   ecx,eax
  401225:	lods   al,BYTE PTR ds:[esi]
  401226:	add    BYTE PTR [edi+0x4a],dh
  401229:	(bad)  
  40122a:	inc    DWORD PTR [eax]
  40122c:	(bad)  
  40122d:	inc    DWORD PTR [eax]
  40122f:	add    BYTE PTR [esi-0x14],cl
  401232:	jp     0x401202
  401234:	sub    dh,0xff
  401237:	sub    BYTE PTR [edx+0x0],ah
  40123a:	(bad)  
  40123b:	(bad)  
  40123c:	dec    DWORD PTR [ecx-0x1dbe0001]
  401242:	mov    bh,0xcc
  401244:	icebp  
  401245:	xor    cl,ah
  401247:	call   0xffff:0xff00ff66
  40124e:	add    BYTE PTR [eax],al
  401250:	jbe    0x401293
  401252:	in     al,0x16
  401254:	je     0x40122d
  401256:	xor    DWORD PTR [ecx+0xcc833c],0xffffffff
  40125d:	mov    DWORD PTR [eax],eax
  40125f:	jmp    FWORD PTR [edi+0x60]
  401262:	inc    ecx
  401263:	fst    DWORD PTR [edi-0x1c]
  401266:	dec    DWORD PTR [esi-0xff00fc]
  40126c:	(bad)  
  40126d:	inc    DWORD PTR [eax]
  40126f:	jmp    DWORD PTR [esi-0xb]
  401272:	lods   eax,DWORD PTR ds:[esi]
  401273:	add    esi,edi
  401275:	add    edi,edi
  401277:	outs   dx,DWORD PTR ds:[esi]
  401278:	sub    eax,0x830083cc
  40127d:	add    BYTE PTR [ecx+0x2944a3ff],cl
  401283:	inc    ebp
  401284:	xchg   DWORD PTR [edi-0x1],ebp
  401287:	js     0x4012e7
  401289:	mov    DWORD PTR [ecx-0x337d0000],ecx
  40128f:	(bad)  
  401290:	mov    edi,0x76c55c32
  401295:	or     DWORD PTR [eax],eax
  401297:	outs   dx,DWORD PTR ds:[esi]
  401298:	hlt    
  401299:	(bad)  
  40129a:	(bad)  
  40129b:	dec    DWORD PTR [ecx+0x58ffffff]
  4012a1:	push   edx
  4012a2:	xchg   BYTE PTR [edx+edi*8],cl
  4012a5:	ja     0x4012a6
  4012a7:	jmp    0xff89:0x83000034
  4012ae:	(bad)  
  4012af:	dec    edi
  4012b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012b2:	fld    QWORD PTR [eax+0x6838a28]
  4012b8:	mov    edi,?
  4012ba:	(bad)  
  4012bb:	inc    DWORD PTR [eax]
  4012bd:	cmp    edi,0xffffffff
  4012c0:	arpl   WORD PTR ds:0x73a46a8e,sp
  4012c6:	int3   
  4012c7:	ss mov bh,0x0
  4012ca:	add    ah,cl
  4012cc:	add    BYTE PTR [eax],al
  4012ce:	mov    DWORD PTR [eax],eax
  4012d0:	sahf   
  4012d1:	loop   0x401259
  4012d3:	sbb    ebp,DWORD PTR [edi+0x6d]
  4012d6:	or     DWORD PTR [eax+0x58],0xffffffff
  4012da:	add    BYTE PTR [eax],al
  4012dc:	dec    esp
  4012de:	inc    DWORD PTR [ebx+0x5c8a8e8d]
  4012e4:	retf   0xf8
  4012e7:	ret    
  4012e8:	pop    eax
  4012e9:	(bad)  
  4012ea:	inc    DWORD PTR [ebx-0x7c7c0100]
  4012f0:	stos   DWORD PTR es:[edi],eax
  4012f1:	addr16 cmp eax,0x90f606
  4012f7:	addr16 je 0x4012f9
  4012fa:	add    BYTE PTR [ecx-0x760001],cl
  401300:	xor    ah,BYTE PTR [edi]
  401302:	es scas al,BYTE PTR es:[edi]
  401304:	shr    BYTE PTR [ecx+ecx*4-0x7c000f75],1
  40130b:	add    bh,bh
  40130d:	add    DWORD PTR [eax],0xffffff83
  401310:	mov    ebp,0xa643cb12
  401315:	cwde   
  401316:	sub    DWORD PTR [ebp-0x33ff7c7e],0x0
  40131d:	add    BYTE PTR [ebx-0x4f5a87d],al
  401323:	dec    ecx
  401324:	mov    ebx,0xa9e4ff08
  401329:	mov    DWORD PTR [ecx-0x7c3301],ecx
  40132f:	call   ecx
  401331:	aas    
  401332:	push   ecx
  401333:	fs loop 0x4013b2
  401336:	add    bl,cl
  401338:	(bad)  
  401339:	add    bh,bh
  40133b:	add    BYTE PTR [eax],al
  40133d:	inc    DWORD PTR [ebx-0x1dbaf000]
  401343:	scas   al,BYTE PTR es:[edi]
  401344:	lods   eax,DWORD PTR ds:[esi]
  401345:	dec    esp
  401346:	add    cl,ah
  401348:	dec    esp
  401349:	dec    esp
  40134b:	int3   
  40134c:	inc    DWORD PTR [eax]
  40134e:	add    BYTE PTR [ecx+0x37b6a124],cl
  401354:	dec    esp
  401355:	nop
  401356:	add    BYTE PTR [esi+0xff8967],ah
  40135c:	int3   
  40135d:	add    BYTE PTR [ecx-0xac1757d],cl
  401363:	div    bh
  401365:	sar    edi,1
  401367:	ja     0x4013c1
  401369:	int3   
  40136a:	inc    DWORD PTR [ebx-0xff007d]
  401370:	and    esp,DWORD PTR [esi-0x23]
  401373:	cld    
  401374:	(bad)  
  401375:	jmp    0x28307a
  40137a:	add    BYTE PTR [eax],al
  40137c:	int3   
  40137d:	cmp    edi,0xffffffff
  401380:	xor    ebp,DWORD PTR [edi-0x776eeec]
  401386:	call   edi
  401388:	dec    ecx
  401389:	add    bh,bh
  40138b:	cmp    edi,0xffffff83
  40138e:	add    DWORD PTR [eax],0x41
  401391:	xchg   DWORD PTR [ebx],esi
  401393:	xor    esi,DWORD PTR [eax+0x23]
  401396:	add    BYTE PTR [eax],ah
  401398:	cs int3 
  40139a:	add    bh,bh
  40139c:	add    BYTE PTR [ebx-0x1098ff01],al
  4013a2:	add    dl,ah
  4013a4:	mov    al,BYTE PTR [eax+0x262dff]
  4013aa:	or     esp,0xffffffff
  4013ad:	inc    DWORD PTR [eax]
  4013af:	mov    DWORD PTR [ebp-0x51],edi
  4013b2:	add    ch,cl
  4013b4:	push   esp
  4013b5:	jo     0x4013b6
  4013b7:	xor    bh,BYTE PTR [edx-0x7c01]
  4013bd:	cmp    edi,0x0
  4013c0:	adc    ebx,DWORD PTR [ecx+0x38]
  4013c3:	outs   dx,BYTE PTR ds:[esi]
  4013c4:	adc    ax,0x20cc
  4013c8:	add    eax,0xff89ffff
  4013cd:	cmp    edi,0xffffffff
  4013d0:	mov    ?,WORD PTR [eax+0x5625a6c2]
  4013d6:	jmp    FWORD PTR [ebx]
  4013d8:	mov    DWORD PTR [ebx+0x838383],eax
  4013de:	dec    esp
  4013e0:	xor    eax,DWORD PTR [edx-0x16]
  4013e3:	into   
  4013e4:	in     al,0x94
  4013e6:	add    BYTE PTR [esi-0x76fd],al
  4013ec:	inc    DWORD PTR [eax]
  4013ee:	dec    esp
  4013f0:	dec    esi
  4013f1:	pop    esp
  4013f2:	and    ch,BYTE PTR [eax-0x24]
  4013f5:	std    
  4013f6:	int3   
  4013f7:	test   eax,0xff008335
  4013fc:	dec    DWORD PTR [ecx+0x6f0d00ff]
  401402:	add    ah,BYTE PTR [esi+0x13]
  401405:	fdivp  st(7),st
  401407:	sbb    DWORD PTR [esi],edx
  401409:	dec    DWORD PTR [ecx-0x7c3377]
  40140f:	dec    DWORD PTR [ebp+0x7d]
  401412:	push   edx
  401413:	pop    ebp
  401414:	jo     0x4013cc
  401416:	add    DWORD PTR [edi],0xffffff82
  401419:	cmp    edi,0x0
  40141c:	inc    DWORD PTR [eax]
  40141e:	(bad)  
  40141f:	call   FWORD PTR [ebx+0x28b03a59]
  401425:	jecxz  0x401426
  401427:	mov    ebp,0xff83fffa
  40142c:	dec    esp
  40142e:	int3   
  40142f:	jmp    FWORD PTR [edx]
  401431:	xor    al,cl
  401433:	adc    DWORD PTR [ecx],eax
  401435:	mov    cs,WORD PTR [ecx-0x330673]
  40143b:	add    bh,bh
  40143d:	(bad)  
  40143e:	(bad)  
  40143f:	(bad)  
  401440:	fisttp WORD PTR [ebx]
  401442:	push   es
  401443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401444:	bts    edi,edi
  401447:	mov    ds:0xffffffff,al
  40144c:	add    BYTE PTR [ebx+0x7af18300],al
  401452:	inc    esp
  401453:	xchg   esi,eax
  401454:	dec    eax
  401455:	call   0xff:0x98c0ff
  40145c:	inc    DWORD PTR [eax]
  40145e:	int3   
  40145f:	add    dl,ah
  401461:	scas   eax,DWORD PTR es:[edi]
  401462:	adc    BYTE PTR ds:[edi+eax*2-0xe44801],0x0
  40146b:	mov    edi,edi
  40146d:	(bad)  
  40146e:	(bad)  
  40146f:	dec    DWORD PTR [eax-0x408b98c8]
  401475:	push   es
  401476:	sbb    DWORD PTR [esi],0x65
  401479:	inc    DWORD PTR [eax]
  40147b:	inc    DWORD PTR [ebx+0x6583ff83]
  401481:	inc    edi
  401482:	arpl   bx,di
  401484:	js     0x401488
  401486:	add    BYTE PTR [eax],al
  401488:	(bad)  
  401489:	dec    esp
  40148b:	mov    DWORD PTR [ebx-0x44000100],eax
  401491:	jmp    0xddff:0x3d794d02
  401498:	jbe    0x401499
  40149a:	add    bh,bh
  40149c:	add    bh,bh
  40149e:	inc    DWORD PTR [ebx+0x518204fb]
  4014a4:	and    esp,edx
  4014a6:	add    bh,ah
  4014a8:	dec    eax
  4014a9:	(bad)  
  4014aa:	inc    DWORD PTR [ebx-0x767c7d00]
  4014b0:	ret    0xfc4e
  4014b3:	fisub  DWORD PTR [eax]
  4014b5:	mov    ds:0x48ce83,eax
  4014ba:	mov    edi,edi
  4014bc:	(bad)  
  4014bd:	(bad)  
  4014be:	inc    DWORD PTR [eax]
  4014c0:	imul   ebx,DWORD PTR [edi+0x595626a0],0x89ee34ff
  4014ca:	add    bh,bh
  4014cc:	int3   
  4014cd:	inc    DWORD PTR [eax]
  4014cf:	add    BYTE PTR [ebx-0x4e54e87],bh
  4014d5:	or     eax,0xff73b883
  4014da:	mov    edi,edi
  4014dc:	dec    esp
  4014de:	cmp    edi,0x3f
  4014e1:	xchg   esp,eax
  4014e2:	xchg   ebp,eax
  4014e3:	(bad)  
  4014e4:	mov    esp,0x577acc04
  4014e9:	cmp    edi,0xffffffff
  4014ec:	dec    esp
  4014ee:	add    BYTE PTR [eax],al
  4014f0:	pop    edx
  4014f1:	pop    ebx
  4014f2:	dec    eax
  4014f3:	mov    esp,DWORD PTR [eax+esi*1-0x76610a01]
  4014fa:	add    BYTE PTR [ebx-0x33ff7601],al
  401500:	mov    bl,BYTE PTR [edx+0x6580f7b]
  401506:	and    eax,0xffffffd3
  401509:	mov    DWORD PTR [ebx-0x7cff34],eax
  40150f:	add    BYTE PTR [esi-0x61096eb3],cl
  401515:	sub    ecx,esp
  401517:	(bad)  
  401519:	(bad)  
  40151a:	(bad)  
  40151b:	inc    DWORD PTR [ebx-0x1233ff01]
  401521:	mov    dl,0xf9
  401523:	stos   BYTE PTR es:[edi],al
  401524:	xchg   esp,eax
  401525:	mov    al,ds:0xff5704cc
  40152a:	mov    edi,edi
  40152c:	dec    DWORD PTR [ecx-0x6f13ff01]
  401532:	cmp    BYTE PTR [ebp-0x3000f8ab],dh
  401538:	ret    0x0
  40153b:	cmp    edi,0x0
  40153e:	inc    DWORD PTR [eax]
  401540:	mov    eax,0xa5af6c8e
  401545:	leave  
  401546:	add    BYTE PTR [esi+0xccff65],bh
  40154c:	(bad)  
  40154d:	(bad)  
  40154e:	inc    DWORD PTR [eax]
  401550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401551:	fild   WORD PTR [ebp-0x7c245d4c]
  401557:	adc    eax,0xff000000
  40155c:	int3   
  40155d:	inc    DWORD PTR [eax]
  40155f:	add    BYTE PTR [ebx+0x3485d2be],al
  401565:	adc    edi,edi
  401567:	fiadd  DWORD PTR [ecx]
  401569:	add    BYTE PTR [eax],al
  40156b:	add    BYTE PTR [eax],al
  40156d:	add    bh,bh
  40156f:	add    ch,ch
  401571:	push   es
  401572:	sti    
  401573:	imul   ecx,ebp,0x3e
  401576:	mov    DWORD PTR [ebx-0x7c007c5b],ebx
  40157c:	inc    DWORD PTR [eax]
  40157e:	int3   
  40157f:	jmp    ebx
  401581:	sbb    al,0x82
  401583:	push   ebp
  401584:	mov    WORD PTR [ebx+0xe1ea00],?
  40158a:	add    bh,bh
  40158c:	add    bh,bh
  40158e:	add    DWORD PTR [eax],0x78
  401591:	fisttp QWORD PTR [ebx-0x3f]
  401594:	xchg   ebp,edx
  401596:	inc    ebx
  401598:	or     bh,bh
  40159a:	add    BYTE PTR [ebx+0x0],al
  4015a0:	dec    ebp
  4015a1:	or     BYTE PTR [ecx-0x18b373],dl
  4015a7:	fist   DWORD PTR [ebx-0x7d]
  4015ad:	add    DWORD PTR [eax],0xffffffcc
  4015b0:	stos   DWORD PTR es:[edi],eax
  4015b1:	inc    edx
  4015b2:	cmc    
  4015b3:	inc    esi
  4015b4:	xchg   edx,eax
  4015b5:	popf   
  4015b6:	call   DWORD PTR [ebx-0x19]
  4015b9:	(bad)  
  4015ba:	(bad)  
  4015bb:	dec    esp
  4015bd:	add    BYTE PTR [eax],al
  4015bf:	(bad)  
  4015c0:	jnp    0x4015c3
  4015c2:	in     al,0x7f
  4015c4:	sahf   
  4015c5:	adc    al,0x0
  4015c7:	push   esp
  4015c8:	fisttp DWORD PTR [ecx-0x7c0001]
  4015ce:	cmp    edi,0x47
  4015d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d2:	inc    ecx
  4015d3:	ror    ebx,1
  4015d5:	inc    esp
  4015d6:	jmp    FWORD PTR [edx]
  4015d8:	cmp    BYTE PTR [eax],al
  4015da:	inc    DWORD PTR [ebx+0xffffcc]
  4015e0:	in     al,dx
  4015e1:	mov    eax,?
  4015e3:	mov    edx,ebx
  4015e5:	xor    DWORD PTR [ecx-0xeb2],ecx
  4015eb:	cmp    edi,0xffffffff
  4015ee:	inc    DWORD PTR [eax]
  4015f0:	xchg   edx,eax
  4015f1:	xor    BYTE PTR ds:0xcf6795,dh
  4015f7:	pop    eax
  4015f8:	mov    ds:0xcc0089cc,eax
  4015fd:	dec    esp
  4015ff:	call   FWORD PTR [ecx]
  401601:	mov    edi,0x5075fd3a
  401606:	jmp    ecx
  401608:	repz int3 
  40160a:	dec    DWORD PTR [ecx-0xff0100]
  401610:	adc    al,0x38
  401612:	push   eax
  401613:	jle    0x401626
  401615:	loop   0x40159a
  401617:	or     esi,DWORD PTR [esi-0x1]
  40161a:	or     esp,0x0
  40161d:	cmp    edi,0xffffffff
  401620:	push   ebx
  401621:	pop    edi
  401622:	mov    ah,0xb6
  401624:	pop    eax
  401625:	mov    al,ds:0xcc1b0e89
  40162a:	add    ah,cl
  40162c:	(bad)  
  40162d:	(bad)  
  40162e:	dec    esp
  401630:	outs   dx,BYTE PTR ds:[esi]
  401631:	outs   dx,DWORD PTR ds:[esi]
  401632:	xchg   BYTE PTR [ecx-0x46],ah
  401635:	inc    esi
  401636:	jmp    FWORD PTR [edi-0x6c]
  401639:	add    bh,bh
  40163b:	add    BYTE PTR [eax],al
  40163d:	add    bh,bh
  40163f:	add    BYTE PTR ds:0x588e374f,al
  401645:	add    BYTE PTR fs:[ecx],al
  401648:	lock add ah,cl
  40164b:	add    ah,cl
  40164d:	(bad)  
  40164e:	inc    DWORD PTR [eax]
  401650:	in     eax,dx
  401651:	dec    edi
  401652:	bound  edi,QWORD PTR [eax-0x3c]
  401655:	(bad)  
  401656:	jmp    FWORD PTR [esi-0x44]
  401659:	int3   
  40165a:	add    DWORD PTR [eax],0xffffffff
  40165d:	add    BYTE PTR [eax],al
  40165f:	jmp    FWORD PTR [eax+eiz*8-0x2d]
  401663:	inc    ebp
  401664:	and    dl,BYTE PTR [ebx-0xd7577d]
  40166a:	int3   
  40166b:	add    BYTE PTR [eax],al
  40166d:	dec    esp
  40166f:	cmp    DWORD PTR [edi],0xffffff9f
  401672:	mov    BYTE PTR [ebx],dh
  401674:	fsubrp st(2),st
  401676:	call   DWORD PTR [esi+0xd]
  401679:	inc    DWORD PTR [ebx-0x33ff7700]
  40167f:	dec    DWORD PTR [eax]
  401681:	pop    ecx
  401682:	loop   0x40169f
  401684:	fadd   QWORD PTR fs:[eax]
  401687:	sub    BYTE PTR [ebx-0x7c7c7601],al
  40168d:	add    BYTE PTR [eax],al
  40168f:	mov    esi,edx
  401691:	les    esp,FWORD PTR [edi-0x3337bd5a]
  401697:	cs xchg ebp,eax
  401699:	add    ah,cl
  40169b:	dec    esp
  40169d:	cmp    edi,0x0
  4016a0:	ret    
  4016a1:	mov    cl,BYTE PTR [ecx-0xd436e0]
  4016a7:	or     eax,DWORD PTR [edx+0xffff]
  4016ad:	inc    DWORD PTR [eax]
  4016af:	dec    edi
  4016b1:	fst    QWORD PTR [eax+0xa95ae7]
  4016b7:	add    eax,0xff00ff5e
  4016bc:	add    bh,bh
  4016be:	int3   
  4016bf:	and    DWORD PTR [edx+0x6],0x2d
  4016c3:	or     al,0x38
  4016c5:	jl     0x4016c6
  4016c7:	arpl   WORD PTR [edi+edi*8+0x0],ax
  4016cb:	inc    DWORD PTR [eax]
  4016cd:	inc    DWORD PTR [eax]
  4016cf:	add    BYTE PTR [ecx+edx*4-0x31d795c0],bh
  4016d6:	int3   
  4016d7:	test   DWORD PTR [ebx],edi
  4016d9:	add    bh,bh
  4016db:	dec    DWORD PTR [ecx+0x4dff00ff]
  4016e1:	pop    ebx
  4016e2:	hlt    
  4016e3:	mov    edx,0xf4ccf487
  4016e8:	mov    WORD PTR [eax],es
  4016ea:	(bad)  
  4016eb:	(bad)  
  4016ec:	(bad)  
  4016ed:	(bad)  
  4016ee:	(bad)  
  4016ef:	inc    DWORD PTR [esi+0x57]
  4016f2:	dec    eax
  4016f3:	add    al,0xf6
  4016f5:	sahf   
  4016f6:	jmp    FWORD PTR [edx]
  4016f8:	cmp    ah,cl
  4016fa:	(bad)  
  4016fb:	inc    DWORD PTR [eax]
  4016fd:	add    DWORD PTR [eax],0xffffffff
  401700:	and    eax,0x3da8ec70
  401705:	in     al,dx
  401706:	jmp    DWORD PTR [edi+0xffd1]
  40170c:	add    bh,bh
  40170e:	dec    DWORD PTR [ecx-0x44bc3906]
  401714:	xlat   BYTE PTR ds:[ebx]
  401715:	dec    esp
  401716:	inc    edx
  401718:	leave  
  401719:	inc    DWORD PTR [ebx-0x1000000]
  40171f:	mov    ebx,ecx
  401721:	call   0x72476bfe
  401726:	add    DWORD PTR [edx-0x7c007caf],0xffffffff
  40172d:	add    BYTE PTR [ebx-0x82377d],al
  401733:	(bad)  ds:0x7d45009f
  401739:	inc    DWORD PTR [eax]
  40173b:	inc    DWORD PTR [eax]
  40173d:	(bad)  
  40173e:	(bad)  
  40173f:	(bad)  
  401740:	jge    0x401702
  401742:	rcr    dh,0x46
  401745:	push   eax
  401746:	dec    DWORD PTR [ebx]
  401748:	xchg   edi,eax
  401749:	(bad)  
  40174a:	(bad)  
  40174b:	(bad)  
  40174c:	(bad)  
  40174d:	(bad)  
  40174e:	(bad)  
  40174f:	jmp    FWORD PTR [eax-0x39]
  401752:	fldcw  WORD PTR [edi]
  401754:	jl     0x401757
  401756:	inc    esp
  401758:	scas   eax,DWORD PTR es:[edi]
  401759:	add    DWORD PTR [ebx-0x76ff0001],0xffffffff
  401760:	(bad)  
  401761:	mov    ecx,0x5e35cecc
  401766:	add    BYTE PTR [ebx+0xffff7a],bh
  40176c:	int3   
  40176d:	(bad)  
  40176e:	inc    DWORD PTR [ebx-0x50b5b51c]
  401774:	call   0xffff:0x9a03ff14
  40177b:	dec    esp
  40177d:	(bad)  
  40177e:	inc    DWORD PTR [eax]
  401780:	push   ss
  401781:	mov    bl,0x6f
  401783:	sbb    dh,ch
  401785:	test   eax,0xff961bff
  40178a:	inc    DWORD PTR [ebx+0xff00]
  401790:	sub    eax,0x80e7f62f
  401795:	ins    DWORD PTR es:[edi],dx
  401796:	(bad)  
  401797:	jns    0x4017e0
  401799:	inc    DWORD PTR [eax]
  40179b:	(bad)  
  40179c:	dec    esp
  40179e:	add    DWORD PTR [ebx-0x137e4274],0x5e
  4017a5:	sbb    edi,edi
  4017a7:	xchg   ebp,eax
  4017a8:	cmp    edi,0xffffcc00
  4017ae:	or     DWORD PTR [ecx-0x29d1a791],0xfffffffa
  4017b5:	jae    0x4017b7
  4017b7:	fistp  DWORD PTR [edi+edi*8]
  4017ba:	add    DWORD PTR [eax],0xffffffff
  4017bd:	inc    DWORD PTR [eax]
  4017bf:	inc    eax
  4017c1:	mov    ds:0x895181a9,eax
  4017c6:	add    ah,dl
  4017c8:	add    BYTE PTR ds:[ebx-0x33ff0077],al
  4017cf:	jmp    ebx
  4017d1:	mov    DWORD PTR [edi-0x6],esp
  4017d4:	aam    0x4f
  4017d6:	add    BYTE PTR [esi+edi*1+0xffffcc],bl
  4017dd:	mov    edi,edi
  4017df:	mov    eax,edi
  4017e1:	dec    bl
  4017e3:	mov    ds:0x3051,eax
  4017e8:	adc    bh,bh
  4017ea:	mov    DWORD PTR [eax],eax
  4017ec:	add    bh,bh
  4017ee:	cmp    edi,0x45
  4017f1:	les    ebx,FWORD PTR [edx-0x2a]
  4017f4:	ins    BYTE PTR es:[edi],dx
  4017f5:	inc    esp
  4017f6:	push   DWORD PTR ds:0xff0083a0
  4017fc:	add    ah,cl
  4017fe:	add    bh,bh
  401800:	push   0xa19444a7
  401805:	mov    ds:0x292100,eax
  40180a:	(bad)  
  40180b:	(bad)  
  40180c:	(bad)  
  40180d:	dec    DWORD PTR [ecx-0x7b687d7d]
  401813:	sahf   
  401814:	ss and al,0xff
  401817:	iret   
  401818:	adc    al,BYTE PTR [ebx+0xcc0000]
  40181e:	(bad)  
  40181f:	inc    ecx
  401821:	sub    DWORD PTR [esi],eax
  401823:	and    edi,DWORD PTR [ecx+0x9]
  401826:	push   DWORD PTR ds:0xff2c
  40182c:	add    ah,cl
  40182e:	add    DWORD PTR [eax],0xffffffff
  401831:	jle    0x401871
  401833:	out    dx,eax
  401834:	jg     0x401867
  401836:	int3   
  401837:	push   ecx
  401838:	out    dx,al
  401839:	add    bh,bh
  40183b:	inc    DWORD PTR [eax]
  40183d:	add    ah,cl
  40183f:	add    BYTE PTR [ebp-0x70ee8ae0],ah
  401845:	(bad)  
  401848:	fwait
  401849:	mov    edi,edi
  40184b:	dec    esp
  40184d:	(bad)  
  40184e:	inc    DWORD PTR [ebx+0x2495fe69]
  401854:	inc    eax
  401855:	add    eax,0xffc75f89
  40185a:	inc    DWORD PTR [eax]
  40185c:	inc    DWORD PTR [eax]
  40185e:	add    BYTE PTR [ebx-0x6859efc8],al
  401864:	stc    
  401865:	sahf   
  401866:	jmp    FWORD PTR [edx]
  401868:	(bad)  
  401869:	inc    DWORD PTR [eax]
  40186b:	inc    DWORD PTR [eax]
  40186d:	cmp    edi,0x0
  401870:	mov    BYTE PTR [edx+0x511e8dea],bl
  401876:	add    bl,bl
  401878:	cli    
  401879:	int3   
  40187a:	mov    DWORD PTR [ebx-0x7cff0001],eax
  401880:	cmp    ecx,ebx
  401882:	push   edi
  401883:	dec    ebx
  401884:	jae    0x4018d7
  401886:	sub    DWORD PTR [edi+ebp*8+0x0],0x0
  40188b:	inc    DWORD PTR [eax]
  40188d:	mov    DWORD PTR [ebx+0x7f0fcb00],eax
  401893:	inc    edi
  401894:	xchg   edx,eax
  401895:	sbb    eax,0xb66c89
  40189a:	add    bh,bh
  40189c:	add    bh,bh
  40189e:	(bad)  
  40189f:	jmp    FWORD PTR [eax]
  4018a1:	sar    DWORD PTR [ebp-0x27997c],1
  4018a7:	push   edx
  4018a8:	enter  0x83,0x0
  4018ac:	add    bh,bh
  4018ae:	int3   
  4018af:	jmp    FWORD PTR [ebx-0x32501631]
  4018b5:	enter  0xc2ff,0xe4
  4018b9:	add    BYTE PTR [eax],al
  4018bb:	add    ah,cl
  4018bd:	dec    DWORD PTR [ecx-0x43c6db00]
  4018c3:	ret    0xa440
  4018c6:	add    dl,ch
  4018c8:	hlt    
  4018c9:	add    BYTE PTR [eax],al
  4018cb:	inc    DWORD PTR [eax]
  4018cd:	mov    DWORD PTR [ecx+0x6624daff],ecx
  4018d3:	data16 sub BYTE PTR [edi+edi*8],al
  4018d7:	scas   al,BYTE PTR es:[edi]
  4018d8:	das    
  4018d9:	(bad)  
  4018da:	(bad)  
  4018db:	inc    DWORD PTR [eax]
  4018dd:	add    BYTE PTR [eax],al
  4018df:	call   DWORD PTR [esi-0x432bb0e9]
  4018e5:	pop    DWORD PTR [eax]
  4018e7:	dec    esi
  4018e8:	and    edi,edi
  4018ea:	dec    DWORD PTR [ecx+0x8983ff]
  4018f0:	sbb    DWORD PTR [eax],ebp
  4018f2:	sub    esp,ebp
  4018f4:	adc    ecx,esp
  4018f6:	add    BYTE PTR [ebx-0xa9],bl
  4018fc:	int3   
  4018fd:	add    BYTE PTR [ebx+0x474f63ff],al
  401903:	mov    esp,0xbaff82e1
  401908:	pop    edx
  401909:	add    BYTE PTR [eax],al
  40190b:	add    BYTE PTR [eax],al
  40190d:	inc    DWORD PTR [eax]
  40190f:	int3   
  401910:	cmp    eax,0x1d05637e
  401915:	dec    edi
  401916:	mov    eax,ebp
  401918:	xor    bh,bh
  40191a:	inc    DWORD PTR [ebx-0x7d00]
  401920:	xor    DWORD PTR [edi+edx*8+0x24df17],esp
  401927:	jle    0x401910
  401929:	add    ah,cl
  40192b:	mov    DWORD PTR [ebx-0x26770000],eax
  401931:	jge    0x401983
  401933:	jmp    0x6540f5db
  401938:	imul   edi,edi,0xffffffff
  40193b:	cmp    edi,0xffffffff
  40193e:	(bad)  
  40193f:	call   DWORD PTR [ebp-0x7d90aaee]
  401945:	enter  0x11ff,0xe0
  401949:	(bad)  
  40194a:	inc    DWORD PTR [ebx+0xff00cc]
  401950:	cdq    
  401951:	fcom   st(1)
  401953:	nop
  401954:	sub    eax,0x8b57ffcd
  401959:	cmp    edi,0xffffff83
  40195c:	int3   
  40195d:	add    bh,bh
  40195f:	int3   
  401960:	adc    cx,di
  401963:	cmp    al,cl
  401965:	add    edi,edi
  401967:	mov    bh,BYTE PTR [edi-0x7d000000]
  40196d:	add    bh,bh
  40196f:	add    BYTE PTR [ecx-0x27],ah
  401972:	sar    DWORD PTR [esi+0x34],cl
  401975:	add    eax,0xff74e4ff
  40197a:	inc    DWORD PTR [eax]
  40197c:	mov    edi,edi
  40197e:	add    ah,cl
  401980:	dec    ebx
  401981:	push   cs
  401982:	cdq    
  401983:	and    DWORD PTR [esi+0x2f5a8385],esi
  401989:	add    BYTE PTR [ecx-0x3300007d],cl
  40198f:	add    BYTE PTR [edx],al
  401991:	push   ebx
  401992:	jo     0x4019a0
  401994:	test   eax,0xf043ff07
  401999:	add    BYTE PTR [ebx-0x77000000],al
  40199f:	inc    DWORD PTR [edi+0x23fb2259]
  4019a5:	jecxz  0x4019a6
  4019a7:	mov    ebp,edx
  4019a9:	add    ah,cl
  4019ab:	inc    DWORD PTR [ebx+0x77ff83ff]
  4019b1:	add    BYTE PTR [edx+ebx*1],ch
  4019b4:	into   
  4019b5:	cwde   
  4019b6:	push   esi
  4019b8:	push   edx
  4019b9:	(bad)  
  4019ba:	inc    DWORD PTR [eax]
  4019bc:	int3   
  4019bd:	inc    DWORD PTR [eax]
  4019bf:	jmp    DWORD PTR [edi+0x3a18be64]
  4019c5:	ret    
  4019c6:	jmp    esi
  4019c8:	ja     0x4019c9
  4019ca:	inc    DWORD PTR [eax]
  4019cc:	inc    DWORD PTR [ebx-0x372dff01]
  4019d2:	stos   DWORD PTR es:[edi],eax
  4019d3:	mov    edx,DWORD PTR ds:0x494600d4
  4019d9:	add    BYTE PTR [eax],al
  4019db:	add    BYTE PTR [ecx-0x1cff7c01],cl
  4019e1:	xchg   DWORD PTR [ecx+0x3d],esi
  4019e4:	movsx  eax,BYTE PTR [eax]
  4019e7:	sahf   
  4019e8:	push   cs
  4019e9:	add    BYTE PTR [ebx+0xff],al
  4019ef:	push   DWORD PTR [esi]
  4019f1:	dec    ebx
  4019f2:	test   al,0x3f
  4019f4:	mov    edi,ss
  4019f6:	add    ch,cl
  4019f8:	(bad)  
  4019fb:	inc    DWORD PTR [ebx+0x67000089]
  401a01:	popa   
  401a02:	(bad)  
  401a03:	(bad)  
  401a04:	pop    eax
  401a05:	je     0x401a06
  401a07:	xchg   ebp,eax
  401a08:	lods   al,BYTE PTR ds:[esi]
  401a09:	(bad)  
  401a0a:	(bad)  
  401a0b:	(bad)  
  401a0c:	dec    esp
  401a0e:	(bad)  
  401a0f:	jmp    FWORD PTR [ebp-0x32]
  401a12:	mov    eax,0x835e7dd3
  401a17:	fnstenv [ecx+0xffffff]
  401a1d:	(bad)  
  401a1e:	dec    esp
  401a20:	push   ds
  401a21:	int    0x11
  401a23:	and    al,0xd6
  401a25:	push   esi
  401a26:	(bad)  
  401a27:	cmp    ah,BYTE PTR [ebp-0x34]
  401a2a:	cmp    edi,0x0
  401a2d:	add    bh,bh
  401a2f:	mov    DWORD PTR [edx],edi
  401a31:	in     eax,dx
  401a32:	and    DWORD PTR ds:0xf3fff51d,edx
  401a38:	inc    esp
  401a39:	mov    DWORD PTR [eax],eax
  401a3b:	add    BYTE PTR [ebx-0x27d0000],al
  401a41:	mov    eax,ds:0x71710eae
  401a46:	adc    DWORD PTR [ecx],0x4c
  401a49:	(bad)  
  401a4a:	inc    DWORD PTR [eax]
  401a4c:	mov    edi,edi
  401a4e:	(bad)  
  401a4f:	jmp    FWORD PTR [edi+0x54cb83a2]
  401a55:	int    0x83
  401a57:	stos   BYTE PTR es:[edi],al
  401a58:	mov    esp,cs
  401a5a:	inc    DWORD PTR [ebx-0x10000]
  401a60:	or     BYTE PTR [ebx],dh
  401a62:	push   ds
  401a63:	mov    bl,0x2c
  401a65:	adc    eax,DWORD PTR [eax]
  401a67:	vmread edi,edi
  401a6a:	int3   
  401a6b:	inc    DWORD PTR [eax]
  401a6d:	(bad)  
  401a6e:	(bad)  
  401a6f:	call   ecx
  401a71:	out    0x76,eax
  401a73:	push   ds
  401a74:	test   al,0x12
  401a76:	call   FWORD PTR [edi-0xa0]
  401a7c:	int3   
  401a7d:	mov    edi,edi
  401a7f:	add    BYTE PTR [eax-0x3f],al
  401a82:	inc    esi
  401a83:	mov    edx,0x9dfff7ec
  401a88:	mov    esp,0x83ff00ff
  401a8d:	(bad)  
  401a8e:	inc    DWORD PTR [ebx+0x31d27dbf]
  401a94:	pop    ebx
  401a95:	pop    es
  401a96:	add    BYTE PTR [eax+0x18],ch
  401a99:	add    ah,cl
  401a9b:	add    bh,bh
  401a9d:	add    bh,bh
  401a9f:	and    DWORD PTR [edx],0x9
  401aa2:	sbb    esi,DWORD PTR [ebp-0xe]
  401aa5:	loop   0x401aa6
  401aa7:	adc    DWORD PTR [ecx-0x1],ebx
  401aaa:	cmp    edi,0xffffffff
  401aad:	add    BYTE PTR [ebx-0x19ebb601],al
  401ab3:	lds    esi,FWORD PTR [edi+edx*1-0x1]
  401ab7:	pop    ecx
  401ab8:	xor    edi,edi
  401aba:	add    ah,cl
  401abc:	inc    DWORD PTR [eax]
  401abe:	inc    DWORD PTR [ebx-0x335d3e55]
  401ac4:	(bad)  
  401ac5:	(bad)  
  401ac6:	jmp    DWORD PTR [esi-0x16]
  401ac9:	add    BYTE PTR [ecx+0xffff],cl
  401acf:	mov    esi,edx
  401ad1:	arpl   sp,bp
  401ad3:	jo     0x401a79
  401ad5:	popa   
  401ad6:	add    BYTE PTR [ebx-0x7c7c0062],dl
  401adc:	inc    DWORD PTR [eax]
  401ade:	int3   
  401adf:	call   FWORD PTR [edx]
  401ae1:	push   ebp
  401ae2:	leave  
  401ae3:	test   al,0x42
  401ae5:	call   0xf7d6ea
  401aea:	inc    DWORD PTR [eax]
  401aec:	dec    esp
  401aee:	inc    DWORD PTR [eax]
  401af0:	retf   0x5438
  401af3:	xor    bl,BYTE PTR [esi]
  401af5:	nop
  401af6:	int3   
  401af7:	add    DWORD PTR [eax],ebp
  401af9:	mov    edi,edi
  401afb:	add    DWORD PTR [eax],0xffffffff
  401afe:	mov    DWORD PTR [ecx+0x5f0a620e],ecx
  401b04:	(bad)  
  401b05:	aam    0xff
  401b07:	adc    ch,BYTE PTR [eax-0x7601]
  401b0d:	(bad)  
  401b0e:	inc    DWORD PTR [ebx-0x387b76dd]
  401b14:	jp     0x401b8d
  401b16:	push   DWORD PTR [ebx-0x3300f5]
  401b1c:	inc    DWORD PTR [eax]
  401b1e:	inc    DWORD PTR [eax]
  401b20:	mov    ebp,0x38bf4ba4
  401b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b26:	add    BYTE PTR [ebx+0x37],cl
  401b29:	inc    DWORD PTR [eax]
  401b2b:	cmp    edi,0xffffffff
  401b2e:	inc    DWORD PTR [eax]
  401b30:	(bad)  
  401b31:	xlat   BYTE PTR ds:[ebx]
  401b32:	jb     0x401b3e
  401b34:	dec    edi
  401b35:	cli    
  401b36:	add    al,ch
  401b38:	mov    ah,0x0
  401b3a:	int3   
  401b3b:	mov    edi,edi
  401b3d:	dec    DWORD PTR [ecx-0x6baf7901]
  401b43:	pushf  
  401b44:	sti    
  401b45:	pusha  
  401b46:	add    cl,dl
  401b48:	fld    DWORD PTR [ebx-0x7c34]
  401b4e:	(bad)  
  401b4f:	jmp    FWORD PTR [ebp+0x10]
  401b52:	mov    edi,DWORD PTR [ecx]
  401b54:	mov    ebp,DWORD PTR [eax-0x1]
  401b57:	push   eax
  401b58:	adc    al,0x0
  401b5a:	add    BYTE PTR [ebx+0x8989],al
  401b60:	imul   esp,DWORD PTR ds:0xf86e8934,0x83cb2dff
  401b6a:	cmp    edi,0x0
  401b6d:	dec    esp
  401b6f:	add    BYTE PTR [esi],ch
  401b71:	lods   al,BYTE PTR ds:[esi]
  401b72:	in     al,dx
  401b73:	add    BYTE PTR [esi],al
  401b75:	jae    0x401b76
  401b77:	xchg   esp,eax
  401b78:	pushf  
  401b79:	add    bh,bh
  401b7b:	add    BYTE PTR [ebx-0x66ffff01],al
  401b81:	clc    
  401b82:	xor    eax,0xff0bfd95
  401b87:	stos   BYTE PTR es:[edi],al
  401b88:	push   ebx
  401b89:	inc    DWORD PTR [eax]
  401b8b:	inc    DWORD PTR [eax]
  401b8d:	(bad)  
  401b8e:	(bad)  
  401b8f:	dec    DWORD PTR [edx-0x1]
  401b92:	mov    WORD PTR [edi-0x7a006f2a],?
  401b98:	sahf   
  401b99:	add    BYTE PTR [eax],al
  401b9b:	add    BYTE PTR [eax],al
  401b9d:	int3   
  401b9e:	add    bh,bh
  401ba0:	test   al,0xe8
  401ba2:	sbb    eax,DWORD PTR [edx+esi*1+0x6c]
  401ba6:	(bad)  
  401ba7:	std    
  401ba8:	ror    ah,0x89
  401bab:	add    DWORD PTR [eax],0xffffff83
  401bae:	cmp    edi,0xffffff89
  401bb1:	ss lock dec ecx
  401bb4:	mov    dh,0x4f
  401bb6:	jmp    DWORD PTR [edi]
  401bb8:	pop    ds
  401bb9:	add    bh,bh
  401bbb:	inc    DWORD PTR [ebx-0x4e007c01]
  401bc1:	mov    dh,dh
  401bc3:	jbe    0x401b47
  401bc5:	scas   al,BYTE PTR es:[edi]
  401bc6:	jmp    DWORD PTR [ebp-0x7cffffa3]
  401bcc:	dec    DWORD PTR [ecx-0x182e0000]
  401bd2:	call   DWORD PTR [edi]
  401bd4:	aas    
  401bd5:	idiv   bh
  401bd7:	cli    
  401bd8:	fcmovne st,st(4)
  401bda:	cmp    edi,0xffffffff
  401bdd:	add    bh,bh
  401bdf:	add    BYTE PTR [edx],ah
  401be1:	sbb    ah,dh
  401be3:	fst    QWORD PTR [ebp-0x357c00b0]
  401be9:	add    ah,cl
  401beb:	add    BYTE PTR [ebx-0x48010000],al
  401bf1:	adc    ecx,DWORD PTR [esi-0x3b]
  401bf4:	sub    ah,dh
  401bf6:	push   DWORD PTR [ebx+edx*2-0x1]
  401bfa:	(bad)  
  401bfb:	inc    DWORD PTR [eax]
  401bfd:	mov    DWORD PTR [eax],eax
  401bff:	and    DWORD PTR [eax-0x57680086],0x13
  401c06:	add    BYTE PTR [ebx-0x68],bl
  401c09:	mov    edi,edi
  401c0b:	inc    DWORD PTR [ebx+0x158900ff]
  401c11:	jl     0x401bd9
  401c13:	outs   dx,BYTE PTR ds:[esi]
  401c14:	ret    
  401c15:	inc    ecx
  401c16:	mov    DWORD PTR [edx],ecx
  401c18:	mov    al,ds:0xff8389
  401c1d:	add    bh,bh
  401c1f:	mov    DWORD PTR [esi],esi
  401c21:	daa    
  401c22:	retf   0x8cd
  401c25:	xor    bh,bh
  401c27:	jbe    0x401bee
  401c29:	(bad)  
  401c2a:	inc    DWORD PTR [eax]
  401c2c:	add    BYTE PTR [ebx+0x60528983],al
  401c32:	stc    
  401c33:	and    esi,eax
  401c35:	pushf  
  401c36:	call   DWORD PTR [eax-0xff00ac]
  401c3c:	(bad)  
  401c3d:	inc    DWORD PTR [ebx-0x21510000]
  401c43:	stos   DWORD PTR es:[edi],eax
  401c44:	mov    ecx,0xc695ff2d
  401c49:	add    BYTE PTR [ebx-0xff7c01],al
  401c4f:	add    BYTE PTR [esi+0x1],bl
  401c52:	icebp  
  401c53:	loope  0x401c07
  401c55:	mov    es,WORD PTR [ebx+0xa01c]
  401c5b:	(bad)  
  401c5c:	inc    DWORD PTR [eax]
  401c5e:	or     esp,0xffffffc0
  401c61:	mov    ds:0x7c8d6536,al
  401c66:	call   DWORD PTR [ecx+0x65]
  401c69:	(bad)  
  401c6a:	inc    DWORD PTR [eax]
  401c6c:	inc    DWORD PTR [eax]
  401c6e:	(bad)  
  401c6f:	push   DWORD PTR [esi+0x277af1db]
  401c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c76:	or     DWORD PTR [ebx+0x7],0xffffffff
  401c7a:	add    BYTE PTR [eax],al
  401c7c:	inc    DWORD PTR [eax]
  401c7e:	int3   
  401c7f:	add    BYTE PTR [edi+0x4607cc21],cl
  401c85:	mov    ds:0xff355f00,al
  401c8a:	add    DWORD PTR [eax],0xffffffff
  401c8d:	add    BYTE PTR [ecx-0x4f0ed200],cl
  401c93:	mov    ch,0xfd
  401c95:	adc    cl,ah
  401c97:	ja     0x401cf4
  401c99:	(bad)  
  401c9a:	(bad)  
  401c9b:	(bad)  
  401c9c:	inc    DWORD PTR [ebx-0x3beb0001]
  401ca2:	or     bl,BYTE PTR [ebp-0x7500a8eb]
  401ca8:	cmc    
  401ca9:	(bad)  
  401caa:	inc    DWORD PTR [eax]
  401cac:	cmp    edi,0xffffffff
  401caf:	push   edx
  401cb1:	inc    ebx
  401cb2:	and    ebx,DWORD PTR [edi-0x18]
  401cb5:	pushf  
  401cb6:	add    BYTE PTR [ebx],bh
  401cb8:	add    bh,bh
  401cba:	inc    DWORD PTR [eax]
  401cbc:	int3   
  401cbd:	add    ah,cl
  401cbf:	push   DWORD PTR [edx]
  401cc1:	and    cl,BYTE PTR [eax+ebp*4+0x1a006347]
  401cc8:	sub    eax,0xff8300cc
  401ccd:	add    BYTE PTR [eax],al
  401ccf:	add    DWORD PTR [ebx+0x414f3121],0xffffffd0
  401cd6:	add    BYTE PTR [esp+eiz*4+0x0],bl
  401cda:	or     DWORD PTR [ecx+0xffff83],0x74
  401ce1:	adc    al,0xaa
  401ce3:	(bad)  
  401ce4:	push   ss
  401ce5:	call   0xcc00:0xcc7652ff
  401cec:	inc    DWORD PTR [ebx-0x70830100]
  401cf2:	sbb    eax,0xdcc341
  401cf7:	add    ch,cl
  401cf9:	(bad)  
  401cfa:	inc    DWORD PTR [ebx-0x100]
  401d00:	in     eax,0xe4
  401d02:	mov    dh,0x95
  401d04:	fs dec edi
  401d06:	(bad)  
  401d07:	(bad)  
  401d09:	add    bh,bh
  401d0b:	(bad)  
  401d0c:	inc    DWORD PTR [eax]
  401d0e:	(bad)  
  401d0f:	dec    DWORD PTR [ecx+esi*8+0x5dedde98]
  401d16:	add    BYTE PTR [ebx-0x7c33ffb4],bl
  401d1c:	add    DWORD PTR [eax],0xffffffff
  401d1f:	(bad)  
  401d20:	fistp  WORD PTR [ebx-0x2b]
  401d23:	arpl   WORD PTR [ebp+0x4c360054],sp
  401d29:	(bad)  
  401d2a:	(bad)  
  401d2b:	(bad)  
  401d2c:	(bad)  
  401d2d:	inc    DWORD PTR [eax]
  401d2f:	add    BYTE PTR [ecx-0x51a0840f],dh
  401d35:	xchg   DWORD PTR [ebx+0x487f],eax
  401d3b:	add    bh,bh
  401d3d:	(bad)  
  401d3e:	dec    esp
  401d40:	fiadd  DWORD PTR [esi+0x4d201f3e]
  401d46:	add    BYTE PTR [esi-0x3c],bh
  401d49:	add    BYTE PTR [eax],al
  401d4b:	add    BYTE PTR [eax],al
  401d4d:	inc    DWORD PTR [ebx-0x28bc3e00]
  401d53:	shl    BYTE PTR [eax],0xf8
  401d56:	sub    DWORD PTR [eax],0x1e
  401d59:	cmp    edi,0xffffffff
  401d5c:	cmp    edi,0xffffffff
  401d5f:	add    BYTE PTR [ebp-0x5b34ba02],bh
  401d65:	xor    edi,edi
  401d67:	test   BYTE PTR [edi],al
  401d69:	(bad)  
  401d6a:	inc    DWORD PTR [ebx-0x76000100]
  401d70:	push   0xffffffbc
  401d72:	sub    ebx,DWORD PTR [ecx]
  401d74:	or     eax,DWORD PTR ds:0x9bf2ff
  401d7a:	inc    DWORD PTR [ebx-0x1]
  401d80:	mov    ebx,0xd836e9d6
  401d85:	xchg   bh,bh
  401d87:	sbb    BYTE PTR [ecx],ch
  401d89:	add    BYTE PTR [eax],al
  401d8b:	int3   
  401d8c:	add    BYTE PTR [ebx-0x16b0001],al
  401d92:	add    ebx,DWORD PTR [edi+0x6a]
  401d95:	sub    edi,edi
  401d97:	mov    BYTE PTR [ecx-0x7c000100],ah
  401d9d:	(bad)  
  401d9e:	(bad)  
  401d9f:	jmp    FWORD PTR [edi+0x51]
  401da2:	jno    0x401dfb
  401da4:	xor    edx,0x0
  401da7:	mov    esi,0xcc8300b8
  401dac:	inc    DWORD PTR [eax]
  401dae:	dec    esp
  401db0:	ror    BYTE PTR [edi+edx*2],cl
  401db3:	movntq QWORD PTR [esi],mm3
  401db6:	dec    DWORD PTR [eax-0xff33d7]
  401dbc:	add    DWORD PTR [ebx-0x678e0100],0x32
  401dc3:	sbb    esp,DWORD PTR [ebx+0x63100a8]
  401dc9:	inc    DWORD PTR [eax]
  401dcb:	inc    DWORD PTR [eax]
  401dcd:	add    DWORD PTR [eax],0xffffffff
  401dd0:	mov    ebp,0x9321084c
  401dd5:	add    al,BYTE PTR [eax]
  401dd7:	sar    DWORD PTR [ebp-0x1],0xff
  401ddb:	inc    DWORD PTR [ebx-0xb000100]
  401de1:	(bad)  
  401de3:	sub    eax,DWORD PTR [ebx-0x2b]
  401de6:	dec    DWORD PTR [edi+0x2d]
  401de9:	dec    DWORD PTR [ecx-0x7c7601]
  401def:	push   DWORD PTR [ebx+0x5d]
  401df2:	mov    eax,0xffe77eed
  401df7:	repnz cmp al,0xcc
  401dfa:	inc    DWORD PTR [ebx-0x10000]
  401e00:	out    dx,al
  401e01:	call   0x163e4bcf
  401e06:	add    ah,ch
  401e08:	nop
  401e09:	(bad)  
  401e0a:	(bad)  
  401e0b:	(bad)  
  401e0c:	(bad)  
  401e0d:	inc    DWORD PTR [eax]
  401e0f:	dec    DWORD PTR [ecx+0x5fb7ec45]
  401e15:	add    edi,edi
  401e17:	test   ah,dh
  401e19:	int3   
  401e1a:	inc    DWORD PTR [eax]
  401e1c:	add    BYTE PTR [eax],al
  401e1e:	inc    DWORD PTR [eax]
  401e20:	and    DWORD PTR [ecx+0x1f717244],ebx
  401e26:	mov    ebp,ebp
  401e28:	into   
  401e29:	inc    DWORD PTR [eax]
  401e2b:	mov    DWORD PTR [eax],eax
  401e2d:	inc    DWORD PTR [eax]
  401e2f:	and    ebx,0x7c
  401e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e34:	push   0x2e740066
  401e39:	inc    DWORD PTR [eax]
  401e3b:	int3   
  401e3c:	inc    DWORD PTR [eax]
  401e3e:	inc    DWORD PTR [eax]
  401e40:	adc    BYTE PTR [ebp+0x4a],ch
  401e43:	pop    esi
  401e44:	mov    ebp,0x6791ff87
  401e49:	inc    DWORD PTR [eax]
  401e4b:	inc    DWORD PTR [ebx-0x5f000000]
  401e51:	pop    eax
  401e52:	inc    eax
  401e53:	inc    esp
  401e54:	add    BYTE PTR [ebx+0x56],dl
  401e57:	mov    esi,DWORD PTR ds:0x44407c
  401e5d:	push   edi
  401e5e:	push   0x1
  401e60:	push   0x1
  401e62:	push   0x0
  401e64:	mov    ds:0x447d6c,eax
  401e69:	call   esi
  401e6b:	mov    edi,DWORD PTR ds:0x444030
  401e71:	mov    ebx,DWORD PTR ds:0x444034
  401e77:	cmp    eax,0x80070057
  401e7c:	jne    0x401e92
  401e7e:	push   0x446a84
  401e83:	push   0x446a74
  401e88:	call   ebx
  401e8a:	push   eax
  401e8b:	call   edi
  401e8d:	mov    ds:0x447d68,eax
  401e92:	push   0x1
  401e94:	push   0x1
  401e96:	push   0x0
  401e98:	call   esi
  401e9a:	cmp    eax,0x80070057
  401e9f:	jne    0x401eac
  401ea1:	call   DWORD PTR ds:0x447d68
  401ea7:	mov    ds:0x447d18,eax
  401eac:	mov    ecx,DWORD PTR ds:0x447d18
  401eb2:	push   0x0
  401eb4:	push   0x4434b0
  401eb9:	push   ecx
  401eba:	call   DWORD PTR ds:0x447d6c
  401ec0:	test   BYTE PTR ds:0x447d64,0x1
  401ec7:	jne    0x401edc
  401ec9:	mov    edx,DWORD PTR ds:0x444038
  401ecf:	or     DWORD PTR ds:0x447d64,0x1
  401ed6:	mov    DWORD PTR ds:0x447d60,edx
  401edc:	push   0x0
  401ede:	push   0x5432c
  401ee3:	push   0x40000
  401ee8:	call   DWORD PTR ds:0x447d60
  401eee:	mov    esi,eax
  401ef0:	mov    eax,ds:0x447d64
  401ef5:	test   al,0x2
  401ef7:	jne    0x401f07
  401ef9:	or     eax,0x2
  401efc:	mov    ds:0x447d64,eax
  401f01:	mov    DWORD PTR ds:0x447d5c,edi
  401f07:	test   al,0x4
  401f09:	jne    0x401f1f
  401f0b:	or     eax,0x4
  401f0e:	push   0x446a58
  401f13:	mov    ds:0x447d64,eax
  401f18:	call   ebx
  401f1a:	mov    ds:0x447d58,eax
  401f1f:	push   0x0
  401f21:	push   0x0
  401f23:	push   0x0
  401f25:	push   0x446a48
  401f2a:	push   0x0
  401f2c:	call   DWORD PTR ds:0x444064
  401f32:	mov    eax,ds:0x447d58
  401f37:	push   0x447cf8
  401f3c:	push   eax
  401f3d:	call   DWORD PTR ds:0x447d5c
  401f43:	mov    ds:0x447d54,eax
  401f48:	mov    eax,ds:0x447d58
  401f4d:	test   eax,eax
  401f4f:	je     0x401f58
  401f51:	push   eax
  401f52:	call   DWORD PTR ds:0x444078
  401f58:	push   0x1
  401f5a:	push   0x0
  401f5c:	call   DWORD PTR ds:0x444054
  401f62:	call   DWORD PTR ds:0x444050
  401f68:	push   0x5432c
  401f6d:	push   0x0
  401f6f:	push   esi
  401f70:	call   DWORD PTR ds:0x447d54
  401f76:	pop    edi
  401f77:	pop    esi
  401f78:	mov    ds:0x447d1c,eax
  401f7d:	pop    ebx
  401f7e:	ret    
  401f7f:	int3   
  401f80:	sbb    edi,edi
  401f82:	add    bh,dl
  401f84:	dec    DWORD PTR [ecx+0xff3aff]
  401f8a:	test   bh,bh
  401f8c:	push   ebp
  401f8d:	mov    edi,0x83f64341
  401f92:	call   FWORD PTR [ecx]
  401f94:	dec    esp
  401f96:	add    BYTE PTR [ecx-0x650001],al
  401f9c:	xor    al,0xe3
  401f9e:	fcomp  QWORD PTR [edx+0x51]
  401fa1:	(bad)  
  401fa2:	inc    DWORD PTR [ebx+0x0]
  401fa5:	inc    DWORD PTR [ebx+0x7d0000a2]
  401fab:	add    BYTE PTR [edx+0x5f],ch
  401fae:	fnsave [eax]
  401fb0:	lea    eax,[eax]
  401fb2:	call   DWORD PTR [ebx-0x34]
  401fb5:	inc    DWORD PTR [ebx-0x6e00ffb7]
  401fbb:	push   DWORD PTR [ecx+0x77]
  401fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fbf:	mov    DWORD PTR [ebx],edx
  401fc1:	add    bh,bh
  401fc3:	mov    edx,0x2cff0000
  401fc8:	add    bh,bh
  401fca:	push   es
  401fcb:	sbb    DWORD PTR [edx],0xfffffff8
  401fce:	sub    eax,0xffff3aa3
  401fd3:	inc    DWORD PTR [bx+si]
  401fd6:	call   FWORD PTR [ebx+0xa7ffcc]
  401fdc:	mov    dl,0xa
  401fde:	shl    BYTE PTR [eax+edx*4-0x7d],0x0
  401fe3:	mov    bh,0x89
  401fe5:	add    BYTE PTR [eax],al
  401fe7:	imul   eax,DWORD PTR [eax],0x0
  401fea:	xor    bh,bh
  401fec:	xor    bl,BYTE PTR [edx-0xc]
  401fef:	int    0x6
  401ff1:	add    bh,bh
  401ff3:	fiadd  DWORD PTR [ebx-0xde0034]
  401ff9:	(bad)  
  401ffa:	mov    ebp,0x4cc9c0ff
  401fff:	inc    esp
  402000:	add    eax,DWORD PTR [ebx-0x4100]
  402006:	cmp    DWORD PTR [edx-0x1],0xffffffcc
  40200a:	mov    WORD PTR [ebx+0x640c6c3a],es
  402010:	xchg   bh,bh
  402012:	jmp    edx
  402014:	int3   
  402015:	(bad)  
  402016:	dec    eax
  402018:	(bad)  
  402019:	(bad)  
  40201a:	add    BYTE PTR ds:[edi],cl
  40201d:	sub    DWORD PTR [edx+ebx*4],ebx
  402020:	and    bh,bh
  402022:	add    BYTE PTR [edi-0x2f000034],bh
  402028:	(bad)  
  402029:	call   FWORD PTR [eax]
  40202b:	jmp    FWORD PTR [esi+0x4c]
  40202e:	ror    edx,cl
  402030:	outs   dx,DWORD PTR ds:[esi]
  402031:	(bad)  
  402032:	(bad)  
  402033:	jl     0x402034
  402035:	add    bh,bh
  402037:	and    bh,bh
  402039:	add    BYTE PTR [edx],dl
  40203b:	(bad)  
  40203c:	jle    0x401fe3
  40203e:	rcl    BYTE PTR [edx],1
  402040:	imul   eax,DWORD PTR [ebx-0x7cb100],0xffffffff
  402047:	jno    0x402048
  402049:	add    BYTE PTR [edi+0x677335ff],cl
  40204f:	in     al,dx
  402050:	and    edi,edi
  402052:	xor    esp,0xffffff83
  402055:	dec    esp
  402057:	(bad)  
  402059:	(bad)  
  40205a:	fiadd  WORD PTR [eax]
  40205c:	push   es
  40205d:	mov    ds:0x133fd,al
  402062:	or     DWORD PTR [edx-0x5433ff01],0xffffffcc
  402069:	inc    DWORD PTR [ecx]
  40206b:	add    BYTE PTR ds:0xba1e35e,bl
  402071:	int3   
  402072:	add    dl,ah
  402074:	mov    esp,ecx
  402076:	and    DWORD PTR [ebx-0x1],0xffffffff
  40207a:	push   ebx
  40207b:	add    ah,bh
  40207d:	xchg   esi,eax
  40207e:	pop    edx
  40207f:	add    eax,0xbb8300ad
  402084:	add    bh,bh
  402086:	int3   
  402087:	mov    WORD PTR [eax],es
  402089:	push   DWORD PTR [edx-0x1]
  40208c:	out    dx,eax
  40208d:	and    al,0x1f
  40208f:	xchg   edx,eax
  402090:	loope  0x402091
  402092:	adc    DWORD PTR [edi-0x1],0xffffffff
  402096:	add    BYTE PTR [esi+0x1a83ff],dl
  40209c:	movups xmm7,xmm5
  40209f:	imul   BYTE PTR [ecx]
  4020a1:	add    bh,bh
  4020a3:	out    0x83,eax
  4020a5:	cmp    edi,0x62
  4020a8:	add    BYTE PTR [eax],al
  4020aa:	mov    ds:0xc2a62d00,eax
  4020af:	inc    edx
  4020b0:	addr16 int3 
  4020b2:	jmp    DWORD PTR [ebp+0x0]
  4020b5:	(bad)  
  4020b6:	push   DWORD PTR [edx+0x0]
  4020b9:	(bad)  
  4020ba:	(bad)  
  4020bc:	icebp  
  4020bd:	sub    ecx,esp
  4020bf:	mov    bh,0xfa
  4020c1:	dec    esp
  4020c3:	mov    es,WORD PTR [ebx-0xdd0001]
  4020c9:	add    BYTE PTR [ebx-0x1],cl
  4020cc:	cdq    
  4020cd:	int    0x24
  4020cf:	or     BYTE PTR [eax+0x0],bh
  4020d2:	add    BYTE PTR [eax],bh
  4020d4:	or     DWORD PTR [ecx+0xff89cc],0x55
  4020db:	add    ch,dh
  4020dd:	push   ss
  4020de:	lock sbb esp,DWORD PTR [ecx-0x7d]
  4020e2:	call   FWORD PTR [ebp+0x66ff83ff]
  4020e8:	(bad)  
  4020e9:	dec    DWORD PTR [eax+0x0]
  4020ec:	call   0xdd70dc78
  4020f1:	(bad)  
  4020f2:	dec    esi
  4020f4:	inc    DWORD PTR [ebx-0xff4100]
  4020fa:	and    edi,edi
  4020fc:	sbb    eax,0x7aea6f88
  402101:	(bad)  
  402102:	(bad)  
  402103:	mov    ecx,0xf9ff8983
  402108:	inc    DWORD PTR [eax]
  40210a:	retf   
  40210b:	call   DWORD PTR [esi+0x99e9e3f]
  402111:	(bad)  
  402112:	push   DWORD PTR [edi+0x700cc00]
  402118:	add    DWORD PTR [ebx+0x734483ca],0x23
  40211f:	or     dl,0xff
  402122:	int3   
  402123:	loop   0x4020a8
  402125:	cmp    edi,0x28
  402128:	mov    DWORD PTR [ebx-0x571700fc],eax
  40212e:	sbb    al,0x74
  402130:	xchg   ebx,eax
  402131:	inc    DWORD PTR [ebx-0xff7c1d]
  402137:	mov    DWORD PTR fs:[eax],eax
  40213a:	pop    ss
  40213b:	jmp    FWORD PTR [ecx-0x29]
  40213e:	mov    cl,0xf8
  402140:	sahf   
  402141:	add    DWORD PTR [eax],0xffffffdf
  402144:	add    BYTE PTR [ecx+0xff75ff],cl
  40214a:	cmp    edi,edi
  40214c:	pop    esi
  40214d:	mov    eax,0xebdcdf
  402152:	jmp    DWORD PTR [ebx+0x58000089]
  402158:	inc    DWORD PTR [eax]
  40215a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40215b:	jmp    DWORD PTR [ecx-0x1f]
  40215e:	out    dx,al
  40215f:	int    0x53
  402161:	add    bh,bh
  402163:	add    edi,edi
  402165:	(bad)  
  402166:	jmp    FWORD PTR [esi-0x334b0001]
  40216c:	ud2    
  40216e:	push   ss
  40216f:	repz inc DWORD PTR cs:[eax]
  402173:	mov    WORD PTR [eax],es
  402175:	(bad)  
  402176:	call   FWORD PTR [ebp-0x1]
  402179:	add    BYTE PTR [ecx],bl
  40217b:	xor    DWORD PTR [edx-0x43c137ab],0xffffffcc
  402182:	jmp    ebp
  402184:	add    ah,cl
  402186:	push   DWORD PTR [esi-0x7cfe0100]
  40218c:	aaa    
  40218d:	rcr    DWORD PTR [ebp-0x56],cl
  402190:	jo     0x402192
  402192:	jmp    FWORD PTR [ecx-0x47ff0001]
  402198:	add    bh,bh
  40219a:	mov    esp,0xbff88283
  40219f:	sub    DWORD PTR [ecx-0x33630000],ebx
  4021a5:	int3   
  4021a6:	inc    esi
  4021a8:	add    BYTE PTR [eax],al
  4021aa:	hlt    
  4021ab:	int3   
  4021ac:	adc    edx,ebx
  4021ae:	(bad)  
  4021af:	sbb    al,0xe8
  4021b1:	add    BYTE PTR [eax],al
  4021b3:	mov    bh,bh
  4021b5:	(bad)  
  4021b6:	jmp    DWORD PTR [edi+edi*8-0x1]
  4021ba:	repz add BYTE PTR [edx-0x22],dl
  4021be:	aaa    
  4021bf:	jo     0x402147
  4021c1:	(bad)  
  4021c2:	push   DWORD PTR [ecx]
  4021c4:	inc    DWORD PTR [eax]
  4021c6:	add    ah,al
  4021c8:	(bad)  
  4021c9:	jmp    FWORD PTR [ebp+0x0]
  4021cc:	jp     0x40221d
  4021ce:	ret    0x42b6
  4021d1:	int3   
  4021d2:	jmp    FWORD PTR [edx-0x8ff7d00]
  4021d8:	mov    edi,edi
  4021da:	sbb    al,BYTE PTR [eax]
  4021dc:	xchg   esi,eax
  4021dd:	ins    DWORD PTR es:[edi],dx
  4021de:	ds mov ecx,ebx
  4021e1:	int3   
  4021e2:	(bad)  
  4021e3:	ds (bad) 
  4021e5:	inc    DWORD PTR [eax]
  4021e7:	es (bad) 
  4021e9:	(bad)  
  4021ea:	inc    BYTE PTR [ebx+0x7fcee976]
  4021f0:	and    al,0xff
  4021f2:	and    DWORD PTR [eax-0x237c7c01],0xffffffff
  4021f9:	add    BYTE PTR [ecx],cl
  4021fb:	add    bh,ah
  4021fd:	daa    
  4021fe:	mov    ebx,DWORD PTR [esp]
  402201:	add    bh,bh
  402203:	push   0xffffffff
  402205:	(bad)  
  402206:	jmp    edi
  402208:	add    bh,bh
  40220a:	das    
  40220b:	jmp    ecx
  40220d:	out    0x2e,eax
  40220f:	mov    bl,0xbd
  402211:	inc    DWORD PTR [eax]
  402213:	call   0x8383:0xabccffff
  40221a:	sbb    eax,DWORD PTR [eax]
  40221c:	pop    esi
  40221d:	ins    BYTE PTR es:[edi],dx
  40221e:	cmp    eax,0xff00fa92
  402223:	rol    BYTE PTR [eax],0xff
  402226:	(bad)  
  402227:	mov    esp,0xff9a00ff
  40222c:	daa    
  40222d:	(bad)  
  40222e:	dec    BYTE PTR [ebx-0x7776ff7b]
  402234:	(bad)  
  402235:	inc    DWORD PTR [eax]
  402237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402238:	inc    DWORD PTR [eax]
  40223a:	rol    BYTE PTR [eax],cl
  40223c:	pushf  
  40223d:	pop    ebx
  40223e:	xor    al,0x99
  402240:	js     0x402242
  402242:	add    BYTE PTR [ebx],cl
  402244:	inc    DWORD PTR [ebx-0xffce01]
  40224a:	sub    al,0x89
  40224c:	aam    0xd0
  40224e:	enterw 0x9b,0x83
  402253:	in     eax,0x0
  402255:	dec    esp
  402257:	or     eax,0xffbdffff
  40225c:	mov    al,ds:0x92da17b
  402261:	add    bh,bh
  402263:	xor    eax,0x170000ff
  402268:	(bad)  
  402269:	call   DWORD PTR ds:0x4d1fb3ff
  40226f:	(bad)  
  402270:	inc    DWORD PTR [eax]
  402272:	add    BYTE PTR [edx-0xd767c01],ah
  402278:	add    bh,bh
  40227a:	pushf  
  40227b:	add    BYTE PTR [ebp-0x1d0044f],bl
  402281:	dec    DWORD PTR [ecx-0x33ff58]
  402287:	push   ebp
  402288:	inc    DWORD PTR [eax]
  40228a:	xor    al,BYTE PTR [eax]
  40228c:	jge    0x4022e9
  40228e:	jo     0x402213
  402290:	add    eax,0xff59ff83
  402295:	int3   
  402296:	sub    DWORD PTR [eax+eax*1-0x1],0xffffffb3
  40229b:	jmp    DWORD PTR [edx]
  40229d:	dec    edi
  40229e:	pop    ecx
  40229f:	sbb    DWORD PTR ds:0xffcd83ff,esp
  4022a5:	inc    DWORD PTR [ebx+0x2affff00]
  4022ab:	call   FWORD PTR [ebp+0x41]
  4022ae:	sub    eax,0x4a29
  4022b3:	xor    bh,bh
  4022b5:	or     esp,0xffffffac
  4022b8:	add    DWORD PTR [eax],0x17
  4022bb:	add    DWORD PTR [esi-0x7a1ba4dd],0x0
  4022c2:	(bad)  
  4022c3:	sti    
  4022c4:	add    BYTE PTR [eax],al
  4022c6:	jmp    DWORD PTR [edi+edi*8]
  4022c9:	add    BYTE PTR [ecx-0x77],dl
  4022cc:	cwde   
  4022cd:	push   cs
  4022ce:	mov    ebx,0x83ff268b
  4022d3:	sbb    al,BYTE PTR [ebx-0x1a0001]
  4022d9:	mov    DWORD PTR ds:0xe4b7bcff,esp
  4022df:	rcr    DWORD PTR [ebp-0x7c4d7700],0xff
  4022e6:	add    BYTE PTR [eax+eax*1+0x0],al
  4022ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022eb:	inc    DWORD PTR [esi-0x649bea42]
  4022f1:	add    DWORD PTR [eax],0x4
  4022f4:	int3   
  4022f5:	inc    DWORD PTR [eax]
  4022f7:	xchg   esi,eax
  4022f8:	add    BYTE PTR [eax],al
  4022fa:	or     BYTE PTR [ecx+0x1f9d8a76],0xcc
  402301:	add    bh,bh
  402303:	loop   0x402304
  402305:	(bad)  
  402306:	dec    DWORD PTR [ebx-0x4d767d]
  40230c:	scas   eax,DWORD PTR es:[edi]
  40230d:	ret    
  40230e:	adc    al,0xa4
  402310:	mov    edi,edi
  402312:	add    BYTE PTR [eax+eax*1-0x34],ah
  402316:	add    BYTE PTR [edx],al
  402318:	(bad)  
  402319:	jmp    FWORD PTR [eax-0x4b20d700]
  40231f:	imul   ebp,DWORD PTR [edx-0x34],0xffffff89
  402323:	pop    edx
  402324:	add    BYTE PTR [eax],al
  402326:	sbb    DWORD PTR [ebx],0x0
  402329:	jmp    DWORD PTR [edi+0x616bbeff]
  40232f:	popa   
  402330:	sub    edi,edi
  402332:	dec    edx
  402334:	add    DWORD PTR [eax],0x0
  402337:	outs   dx,DWORD PTR ds:[esi]
  402338:	add    bh,bh
  40233a:	jp     0x40233b
  40233c:	jmp    0x285dbe38
  402341:	mov    DWORD PTR [ecx-0x7c3300db],ecx
  402347:	sub    BYTE PTR [ebx-0x7e008b00],al
  40234d:	ja     0x4023b1
  40234f:	aam    0xbc
  402351:	cmp    edi,0x58
  402354:	int3   
  402355:	add    bh,bh
  402357:	mov    eax,0x8900ff
  40235c:	adc    eax,0x2153b7f8
  402361:	(bad)  
  402362:	dec    DWORD PTR [ebx-0x1]
  402365:	(bad)  
  402366:	push   ebx
  402368:	inc    DWORD PTR [eax]
  40236a:	out    0x0,al
  40236c:	cmp    bl,BYTE PTR ds:0x8399a06d
  402372:	add    dh,ch
  402374:	add    BYTE PTR [eax],al
  402376:	(bad)  
  402377:	cmp    al,0x0
  402379:	int3   
  40237a:	js     0x402348
  40237c:	hlt    
  40237d:	repz cdq 
  40237f:	out    0x86,eax
  402381:	add    bh,bh
  402383:	mov    edx,0x77ff8300
  402388:	dec    DWORD PTR [ecx-0x7531ff72]
  40238e:	aas    
  40238f:	scas   al,BYTE PTR es:[edi]
  402390:	inc    DWORD PTR fs:[eax]
  402393:	jbe    0x402318
  402395:	dec    DWORD PTR [ecx-0x52ff763f]
  40239b:	push   esp
  40239d:	adc    ah,bh
  40239f:	jnp    0x402355
  4023a1:	(bad)  
  4023a2:	call   DWORD PTR [ebx]
  4023a4:	(bad)  
  4023a5:	inc    DWORD PTR [ebx+0x2ffff7e]
  4023ab:	sbb    ebx,0x3e
  4023ae:	clc    
  4023af:	fisubr WORD PTR [edi+0x46ff00]
  4023b5:	add    BYTE PTR [ecx+0x3e83ff6d],cl
  4023bb:	add    dl,dh
  4023bd:	loop   0x4023ef
  4023bf:	adc    DWORD PTR [eax+0x150089],edi
  4023c5:	(bad)  
  4023c6:	jmp    FWORD PTR [ebp-0x7cf7ff01]
  4023cc:	inc    edx
  4023cd:	les    ebx,FWORD PTR [eax-0xff20a8]
  4023d3:	repz (bad) 
  4023d5:	inc    DWORD PTR [ebx+0x1483ff33]
  4023db:	add    dh,al
  4023dd:	mov    eax,0xff25e761
  4023e2:	or     DWORD PTR [esi-0x7300ff34],0xffffffff
  4023e9:	jmp    FWORD PTR [edi+edi*8]
  4023ec:	sbb    DWORD PTR [edi+0xc40d88],ebx
  4023f2:	(bad)  
  4023f3:	jns    0x4023f4
  4023f5:	(bad)  
  4023f6:	push   DWORD PTR [edi-0x1]
  4023f9:	or     ebp,0xffffffff
  4023fc:	jbe    0x402413
  4023fe:	nop
  4023ff:	daa    
  402400:	push   esi
  402401:	add    BYTE PTR [eax],al
  402403:	cmc    
  402404:	cmp    edi,0x0
  402407:	js     0x4023d5
  402409:	sub    DWORD PTR [ebx+0x0],0xffffffcb
  40240d:	sub    cl,dl
  40240f:	mov    ah,0x8c
  402411:	add    BYTE PTR [ebx-0xff004b],al
  402417:	in     al,dx
  402418:	(bad)  
  402419:	(bad)  
  40241a:	jge    0x4023a5
  40241c:	loop   0x402476
  40241e:	(bad)  
  40241f:	mov    dl,0x4f
  402421:	inc    DWORD PTR [ebx-0xff14]
  402427:	icebp  
  402428:	(bad)  
  402429:	call   esi
  40242b:	jmp    FWORD PTR [ecx]
  40242d:	and    BYTE PTR [ebx+0x83358f],dh
  402433:	mov    esi,0x8effffff
  402438:	int3   
  402439:	xor    DWORD PTR [edi+edi*8],0xffffff8c
  40243d:	and    bh,bh
  40243f:	cmp    eax,0x45ffffdf
  402444:	add    BYTE PTR [ebx-0x76a677],al
  40244a:	xor    BYTE PTR [eax],al
  40244c:	and    DWORD PTR [ebx+edx*8],ebx
  40244f:	sbb    BYTE PTR [edx-0x1],dl
  402452:	mov    ecx,eax
  402454:	(bad)  
  402455:	inc    DWORD PTR [eax]
  402457:	push   0x490083
  40245c:	sub    eax,0xd7c5d5c7
  402461:	or     esp,0xffffffa3
  402464:	inc    DWORD PTR [ebx+0x83f2ff]
  40246a:	rol    DWORD PTR [eax],1
  40246c:	std    
  40246d:	and    DWORD PTR [esi],ecx
  40246f:	outs   dx,BYTE PTR ds:[esi]
  402470:	jns    0x4023f5
  402472:	jmp    DWORD PTR [eax+eax*1]
  402475:	add    BYTE PTR [ebx-0x7d7cfff7],al
  40247b:	add    BYTE PTR [ebp-0x11],dh
  40247e:	mov    ah,0x95
  402480:	test   eax,0xffbfff00
  402485:	add    bh,bh
  402487:	fld    QWORD PTR [ebx-0x5a76247d]
  40248d:	inc    ebp
  40248e:	or     ah,BYTE PTR [eax-0x37c0016]
  402494:	add    ah,cl
  402496:	sbb    esp,0x0
  402499:	int3   
  40249a:	mov    edx,0x3b2f99cc
  40249f:	push   ds
  4024a0:	sahf   
  4024a1:	(bad)  
  4024a2:	jmp    FWORD PTR [edi-0x1]
  4024a5:	(bad)  
  4024a6:	call   DWORD PTR [ebx]
  4024a8:	inc    DWORD PTR [eax]
  4024aa:	mov    bh,bh
  4024ac:	int    0xe6
  4024ae:	hlt    
  4024af:	sub    ebx,DWORD PTR [ebp-0x7d]
  4024b2:	(bad)  
  4024b3:	jmp    0x72c32584
  4024b8:	add    bh,bh
  4024ba:	rol    DWORD PTR [ebx-0x335bee4c],1
  4024c0:	cmp    edi,0x95ff
  4024c6:	inc    DWORD PTR [ebx-0xda0001]
  4024cc:	push   ebx
  4024cd:	(bad)  
  4024ce:	repnz sub edi,DWORD PTR [ebx-0x1]
  4024d2:	mov    DWORD PTR [esi],esi
  4024d4:	inc    DWORD PTR [ebx-0x76765c01]
  4024da:	jmp    0x4024db
  4024dc:	pusha  
  4024dd:	gs gs xor ebx,eax
  4024e1:	(bad)  
  4024e2:	push   DWORD PTR [edi+edi*8-0x7c807c7d]
  4024e9:	or     eax,0x0
  4024ec:	jnp    0x40249d
  4024ee:	pop    ebp
  4024ef:	cmp    DWORD PTR [esi],0x0
  4024f2:	(bad)  
  4024f3:	jp     0x4024c1
  4024f5:	(bad)  
  4024f6:	push   DWORD PTR [ecx]
  4024f8:	mov    edi,edi
  4024fa:	add    edi,edi
  4024fc:	sbb    ah,BYTE PTR [ecx+eiz*2]
  4024ff:	addr16 out 0xff,eax
  402502:	jmp    esi
  402504:	add    bh,bh
  402506:	adc    DWORD PTR [edx-0x1],0x0
  40250a:	jmp    0x40250c
  40250c:	mov    bh,0x26
  40250e:	out    0x2b,eax
  402510:	inc    ecx
  402511:	cmp    edi,0x4c
  402514:	cmp    edi,0x0
  402517:	das    
  402518:	dec    DWORD PTR [ecx+0x35848358]
  40251e:	push   ecx
  40251f:	lock mov bh,0x0
  402522:	int3   
  402523:	imul   eax,DWORD PTR [eax],0xffffff83
  402526:	jmp    DWORD PTR [esi]
  402528:	add    bh,bh
  40252a:	push   0xad432ff
  40252f:	aad    0xe8
  402531:	add    bh,bh
  402533:	pop    esi
  402534:	add    BYTE PTR [eax],al
  402536:	call   FWORD PTR [ecx+0xdeccff]
  40253c:	cmp    dh,dl
  40253e:	dec    ebx
  40253f:	mov    al,ds:0x21ccffcc
  402544:	mov    edi,edi
  402546:	(bad)  
  402547:	jl     0x402548
  402549:	int3   
  40254a:	hlt    
  40254b:	add    BYTE PTR [edx-0x72f2a875],bl
  402551:	int3   
  402552:	add    ah,bh
  402554:	cmp    edi,0xffffffff
  402557:	cmp    bh,0xff
  40255a:	cmp    WORD PTR [esi+0x5a],0x5d
  40255f:	mov    edx,0xa6ffff27
  402564:	(bad)  
  402565:	(bad)  
  402566:	dec    ecx
  402568:	cmp    edi,0xffffffa4
  40256b:	(bad)  
  40256c:	mov    eax,0x89ac1e93
  402571:	mov    edi,edi
  402573:	inc    edi
  402574:	mov    DWORD PTR [eax],eax
  402576:	add    BYTE PTR [eax+eax*1-0x50336701],ah
  40257d:	ficomp WORD PTR [edi]
  40257f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402580:	inc    eax
  402581:	add    BYTE PTR [ebx-0xffdd],al
  402587:	hlt    
  402588:	or     esp,0x65
  40258b:	inc    DWORD PTR [edx+0x4d03df63]
  402591:	inc    DWORD PTR [eax]
  402593:	add    BYTE PTR ss:[eax],al
  402596:	add    BYTE PTR [eax-0x33290000],ch
  40259c:	sub    DWORD PTR [ebx],esi
  40259e:	or     BYTE PTR [ebx-0x63],ah
  4025a1:	(bad)  
  4025a2:	call   DWORD PTR [ecx+0x77cc83ff]
  4025a8:	inc    DWORD PTR [eax]
  4025aa:	into   
  4025ab:	add    BYTE PTR [edx+edx*2-0x7504f6],dl
  4025b2:	int3   
  4025b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b4:	(bad)  
  4025b5:	inc    DWORD PTR [eax]
  4025b7:	push   eax
  4025b8:	add    bh,bh
  4025ba:	mov    cl,0x83
  4025bc:	push   ebx
  4025bd:	jmp    0x37ff:0xffdb57e0
  4025c4:	int3   
  4025c5:	cmp    edi,0x2b
  4025c8:	add    BYTE PTR [eax],al
  4025ca:	add    BYTE PTR [eax],al
  4025cc:	sub    eax,DWORD PTR [ecx-0xf79bf4]
  4025d2:	push   DWORD PTR [ebx+0x0]
  4025d5:	add    bh,bh
  4025d7:	add    DWORD PTR [eax],0x0
  4025da:	loop   0x4025dc
  4025dc:	lahf   
  4025dd:	sar    bh,0xdf
  4025e0:	aaa    
  4025e1:	(bad)  
  4025e2:	(bad)  
  4025e3:	mov    edi,0x2fff83ff
  4025e8:	add    bh,bh
  4025ea:	sar    edi,cl
  4025ec:	push   cs
  4025ed:	mov    ds:0xffc068e8,eax
  4025f2:	call   DWORD PTR [ebp-0x8010000]
  4025f8:	inc    DWORD PTR [eax]
  4025fa:	dec    esp
  4025fb:	call   DWORD PTR [ebx-0xc737f60]
  402601:	or     DWORD PTR [ecx-0xa3],0x5e
  402608:	int3   
  402609:	inc    DWORD PTR [esi-0x1]
  40260c:	jmp    edx
  40260e:	or     edi,DWORD PTR ss:[esi-0xc87c7d]
  402615:	inc    DWORD PTR [ebx+0x7500ff32]
  40261b:	mov    DWORD PTR [esi],esp
  40261d:	popa   
  40261e:	icebp  
  40261f:	xlat   BYTE PTR ds:[ebx]
  402620:	mov    ds:0xffbd83ff,eax
  402625:	cmp    edi,0xffffff94
  402628:	dec    DWORD PTR [ecx-0x3b8e7c07]
  40262e:	dec    eax
  40262f:	fnstcw WORD PTR [eax+0x4a0089]
  402635:	mov    edi,edi
  402637:	add    eax,0xcca60000
  40263c:	push   edx
  40263d:	aas    
  40263e:	or     dh,BYTE PTR [esi-0x18ff00e9]
  402644:	inc    DWORD PTR [eax]
  402646:	add    BYTE PTR [eax-0x700100],ah
  40264c:	call   0xff:0x37f20d14
  402653:	and    al,0x83
  402655:	add    bh,bh
  402657:	test   BYTE PTR [eax],0xff
  40265a:	gs (bad) 
  40265c:	mov    edx,0x935bd6a
  402661:	inc    DWORD PTR [eax]
  402663:	clc    
  402664:	add    BYTE PTR [eax],al
  402666:	add    BYTE PTR [ecx],bh
  402668:	cmp    edi,0xffffffc1
  40266b:	add    BYTE PTR [ebx],dh
  40266d:	(bad)  
  40266e:	pusha  
  40266f:	das    
  402670:	(bad)  
  402672:	add    bh,ch
  402674:	add    bh,bh
  402676:	(bad)  
  402677:	fadd   DWORD PTR [eax]
  402679:	add    BYTE PTR [ebx],dh
  40267b:	add    ecx,0xffffffd7
  40267e:	rdpmc  
  402680:	fcos   
  402682:	and    edi,0xffffffff
  402685:	inc    DWORD PTR [eax]
  402687:	imul   ecx,DWORD PTR [ecx+0x13ffb400],0xbfbaf558
  402691:	add    DWORD PTR [eax],0x6a
  402694:	inc    DWORD PTR [eax]
  402696:	add    BYTE PTR [ebx],al
  402698:	(bad)  
  402699:	push   DWORD PTR [ebp-0x5530c01]
  40269f:	xchg   ebx,eax
  4026a0:	(bad)  
  4026a1:	(bad)  
  4026a2:	inc    edi
  4026a4:	(bad)  
  4026a5:	inc    DWORD PTR [ebx-0x75ff7644]
  4026ab:	int3   
  4026ac:	xchg   esi,eax
  4026ad:	cwde   
  4026ae:	dec    ecx
  4026af:	and    ch,0x89
  4026b2:	push   DWORD PTR [edx-0x7d]
  4026b5:	add    BYTE PTR [ebx+0x3b89ffeb],al
  4026bb:	sub    DWORD PTR [esi+ecx*4-0xc0183a],0xffffff83
  4026c3:	add    DWORD PTR [ebx+0x410083],0xffffffff
  4026ca:	fmul   st(4),st
  4026cc:	push   0xfffffff6
  4026ce:	push   ebx
  4026cf:	ins    DWORD PTR es:[edi],dx
  4026d0:	mov    edi,edi
  4026d2:	dec    DWORD PTR [eax-0x1]
  4026d5:	int3   
  4026d6:	call   FWORD PTR [eax]
  4026d8:	int3   
  4026d9:	push   DWORD PTR [esi+0x360b62ff]
  4026df:	mov    ah,0x5b
  4026e1:	int3   
  4026e2:	call   DWORD PTR [ecx]
  4026e4:	inc    DWORD PTR [ebx-0x7cf001]
  4026ea:	arpl   WORD PTR [eax],ax
  4026ec:	adc    eax,0x80dd13eb
  4026f1:	or     esp,0x63
  4026f4:	inc    DWORD PTR [eax]
  4026f6:	add    cl,ch
  4026f8:	(bad)  
  4026f9:	dec    DWORD PTR [ecx+ecx*4-0x5c]
  4026fd:	adc    al,0xff
  4026ff:	push   eax
  402700:	ja     0x40268b
  402702:	xor    DWORD PTR [esi-0x1],0x0
  402706:	add    BYTE PTR [ecx+ecx*4-0x34],dl
  40270a:	xlat   BYTE PTR ds:[ebx]
  40270b:	push   DWORD PTR [ebx+0x4ff4bb9a]
  402711:	add    BYTE PTR [ebx+0x89ff11],al
  402717:	inc    edi
  402718:	add    BYTE PTR [ebx+0xffeff43],al
  40271e:	loop   0x402753
  402720:	call   0x83f1b124
  402725:	dec    DWORD PTR [ecx-0x3e7600d0]
  40272b:	dec    DWORD PTR [edx+0x34]
  40272e:	test   eax,edx
  402730:	ins    BYTE PTR es:[edi],dx
  402731:	inc    DWORD PTR [eax]
  402733:	push   0xffffff89
  402735:	(bad)  
  402736:	jmp    FWORD PTR [edi+0x0]
  402739:	add    BYTE PTR [edi+0x161467ff],ah
  40273f:	and    eax,0x71000010
  402744:	inc    DWORD PTR [ebx-0x767300]
  40274a:	push   esp
  40274b:	add    cl,dh
  40274d:	adc    eax,0x7d753f
  402752:	(bad)  
  402753:	jmp    0x402721
  402755:	add    bh,bh
  402757:	add    BYTE PTR ss:[eax],al
  40275a:	enter  0x5100,0xc0
  40275e:	xor    eax,0xff87a7
  402763:	mov    eax,ds:0xa9890000
  402768:	or     esp,0x68
  40276b:	add    dh,bl
  40276d:	clc    
  40276e:	pop    ebp
  40276f:	repz ds (bad) 
  402772:	inc    edx
  402774:	add    DWORD PTR [eax],0xffffffff
  402777:	ret    0x83
  40277a:	xchg   ecx,eax
  40277b:	call   DWORD PTR [eax]
  40277d:	push   esi
  40277e:	outs   dx,DWORD PTR ds:[esi]
  40277f:	mov    dl,0xa
  402781:	inc    DWORD PTR [eax]
  402783:	pop    edi
  402784:	add    bh,bh
  402786:	call   FWORD PTR [eax+eax*1]
  402789:	add    DWORD PTR [edi],0xffffffff
  40278c:	addr16 enter 0x6e2e,0xc
  402791:	(bad)  
  402792:	dec    DWORD PTR [ebx+0x78ff8300]
  402798:	inc    DWORD PTR [eax]
  40279a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40279b:	int3   
  40279c:	pusha  
  40279d:	jno    0x402791
  40279f:	mul    edi
  4027a1:	cmp    edi,0xffffff9e
  4027a4:	mov    DWORD PTR [eax],eax
  4027a6:	add    BYTE PTR [ebx-0x1],cl
  4027a9:	xor    esi,0xffffffff
  4027ac:	xchg   esp,eax
  4027ad:	jne    0x4027b6
  4027af:	ins    DWORD PTR es:[edi],dx
  4027b0:	je     0x4027b2
  4027b2:	(bad)  
  4027b3:	std    
  4027b4:	inc    DWORD PTR [eax]
  4027b6:	cmp    DWORD PTR [ebx],0x0
  4027b9:	add    BYTE PTR [ecx],bh
  4027bb:	call   DWORD PTR [edx+0x37]
  4027be:	ins    BYTE PTR es:[edi],dx
  4027bf:	(bad)  
  4027c3:	xor    eax,0x36ffffff
  4027c8:	dec    DWORD PTR [ecx+0x5d530088]
  4027ce:	sbb    ah,BYTE PTR [eax+esi*4]
  4027d1:	inc    DWORD PTR [eax]
  4027d3:	fcos   
  4027d5:	mov    edi,edi
  4027d7:	push   eax
  4027d8:	add    BYTE PTR [eax],al
  4027da:	sahf   
  4027db:	jmp    DWORD PTR [edi+0x15de5d9f]
  4027e1:	mov    edi,edi
  4027e3:	(bad)  
  4027e5:	mov    DWORD PTR [eax],eax
  4027e7:	jbe    0x4027e9
  4027e9:	push   DWORD PTR [eax+0x0]
  4027ec:	dec    ebp
  4027ed:	in     eax,0xc9
  4027ef:	test   al,0x6e
  4027f1:	add    ah,cl
  4027f3:	out    dx,eax
  4027f4:	(bad)  
  4027f5:	inc    DWORD PTR [ebx+0x6800834e]
  4027fb:	call   edi
  4027fd:	rcr    WORD PTR [esi+eiz*8],0xcc
  402802:	int3   
  402803:	in     al,0x0
  402805:	add    BYTE PTR [eax],al
  402807:	std    
  402808:	add    ah,cl
  40280a:	cmp    eax,0x959c81ff
  40280f:	test   BYTE PTR [esi-0x1],dh
  402812:	jmp    DWORD PTR [eax]
  402814:	dec    esp
  402816:	call   DWORD PTR [ebx]
  402818:	int3   
  402819:	int3   
  40281a:	cli    
  40281b:	dec    ecx
  40281d:	mov    cl,0xfa
  40281f:	inc    edx
  402820:	pop    ebx
  402821:	add    BYTE PTR [eax],al
  402823:	xchg   ebp,eax
  402824:	add    BYTE PTR [eax],al
  402826:	mov    DWORD PTR [ecx+0x0],esi
  402829:	dec    DWORD PTR [ecx]
  40282b:	jmp    DWORD PTR [eax-0x77]
  40282e:	push   esi
  40282f:	and    DWORD PTR [ecx+0x0],edi
  402832:	push   esp
  402834:	inc    DWORD PTR [ebx+0xa6ff]
  40283a:	xchg   edx,eax
  40283b:	inc    ecx
  40283d:	xor    BYTE PTR [esi-0x7c009723],dh
  402843:	cdq    
  402844:	add    bh,bh
  402846:	add    BYTE PTR [edx],bl
  402848:	add    BYTE PTR [ecx-0x75500fb],cl
  40284e:	test   BYTE PTR [ecx+0x1689ccf9],cl
  402854:	mov    DWORD PTR [eax],eax
  402856:	add    BYTE PTR [edi+0x0],bh
  402859:	int3   
  40285a:	ret    0xe4ff
  40285d:	sbb    DWORD PTR [edx-0x65],ebp
  402860:	jle    0x4027eb
  402862:	sbb    DWORD PTR [ecx+0x0],0xffffff83
  402866:	add    ah,ah
  402868:	add    BYTE PTR [eax],al
  40286a:	push   es
  40286b:	call   FWORD PTR [ebx+0x5d]
  40286e:	lock shl DWORD PTR [eax-0x3f0100],1
  402875:	mov    edi,edi
  402877:	das    
  402878:	add    BYTE PTR [ebx-0x5be1ff09],al
  40287e:	test   DWORD PTR [esi+0x52],edx
  402881:	cmp    edi,0x74
  402884:	(bad)  
  402885:	dec    esp
  402887:	add    bh,bh
  402889:	jmp    FWORD PTR [eax]
  40288b:	mov    DWORD PTR ds:0x9fb02bf8,ebp
  402891:	inc    DWORD PTR [eax]
  402893:	sar    edi,cl
  402895:	inc    DWORD PTR [eax]
  402897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402898:	add    bh,bh
  40289a:	loope  0x40289c
  40289c:	iret   
  40289d:	jl     0x40289c
  40289f:	mov    bl,0xb8
  4028a1:	inc    DWORD PTR [eax]
  4028a3:	pop    es
  4028a4:	int3   
  4028a5:	add    bh,bh
  4028a7:	pop    es
  4028a8:	inc    DWORD PTR [ebx-0x6bfbff57]
  4028ae:	gs cmp al,bl
  4028b1:	add    bh,bh
  4028b3:	repnz add BYTE PTR [eax],al
  4028b6:	(bad)  
  4028b7:	cmp    DWORD PTR [eax],eax
  4028b9:	cmp    DWORD PTR [ebp-0x1],0x6a
  4028bd:	(bad)  
  4028be:	push   edi
  4028bf:	int    0x33
  4028c1:	(bad)  
  4028c2:	(bad)  
  4028c3:	mov    ebp,0x8a00cc00
  4028c8:	(bad)  
  4028c9:	call   DWORD PTR [ebp-0x7d]
  4028cc:	jl     0x40291e
  4028ce:	in     eax,dx
  4028cf:	pop    ebx
  4028d0:	or     al,0x0
  4028d2:	int3   
  4028d3:	mov    ds:0xea00ffff,al
  4028d8:	add    bh,bh
  4028da:	fiadd  DWORD PTR [eax]
  4028dc:	stos   DWORD PTR es:[edi],eax
  4028dd:	xchg   esp,eax
  4028de:	fsubr  DWORD PTR [ebp+edi*4-0x1]
  4028e2:	jmp    FWORD PTR [esi-0x77]
  4028e5:	add    BYTE PTR [eax],al
  4028e7:	and    bh,bh
  4028e9:	inc    DWORD PTR [edx-0x67db4401]
  4028ef:	add    al,0xc1
  4028f1:	add    BYTE PTR [eax],al
  4028f3:	repnz (bad) 
  4028f5:	dec    DWORD PTR [ecx+0x79830018]
  4028fb:	jmp    DWORD PTR [ecx]
  4028fd:	(bad)  
  4028fe:	test   BYTE PTR [ebx],ah
  402900:	push   cs
  402901:	dec    esp
  402903:	xchg   DWORD PTR [eax],eax
  402905:	int3   
  402906:	inc    DWORD PTR [esi]
  402908:	dec    esp
  40290a:	retf   
  40290b:	call   FWORD PTR [edx+0x26249c36]
  402911:	add    bh,bh
  402913:	cmp    bh,0x89
  402916:	jmp    FWORD PTR ds:0xffa289ff
  40291c:	std    
  40291d:	stos   BYTE PTR es:[edi],al
  40291e:	cmp    DWORD PTR [esi],edx
  402920:	stc    
  402921:	inc    DWORD PTR [eax]
  402923:	lock (bad) 
  402925:	inc    DWORD PTR [eax]
  402927:	ins    DWORD PTR es:[edi],dx
  402928:	inc    DWORD PTR [eax]
  40292a:	mov    al,0xff
  40292c:	pop    ebp
  40292d:	cmp    al,0x97
  40292f:	pop    es
  402930:	lahf   
  402931:	or     DWORD PTR [ecx-0x7c330078],0xffffffdf
  402938:	dec    DWORD PTR [ecx+0x16eaff91]
  40293e:	or     ebx,ecx
  402940:	cld    
  402941:	int3   
  402942:	inc    DWORD PTR [ebx]
  402944:	(bad)  
  402945:	(bad)  
  402946:	push   DWORD PTR [ecx]
  402948:	inc    DWORD PTR [eax]
  40294a:	and    edi,edi
  40294c:	and    BYTE PTR [ebp+0x3a],bl
  40294f:	adc    eax,0x89ffffdf
  402954:	(bad)  
  402955:	(bad)  
  402956:	(bad)  
  402957:	cmp    bh,bh
  402959:	push   DWORD PTR [ecx-0x6b450301]
  40295f:	test   al,0x8c
  402961:	add    BYTE PTR [ebx+0xff8920],al
  402967:	leave  
  402968:	inc    DWORD PTR [eax]
  40296a:	adc    edi,edi
  40296c:	sub    DWORD PTR [eax+ebx*8-0x337c6036],esi
  402973:	js     0x402974
  402975:	int3   
  402976:	int3   
  402977:	in     eax,0x83
  402979:	jmp    DWORD PTR [eax+eax*1+0x49]
  40297d:	jge    0x402945
  40297f:	inc    esi
  402980:	inc    DWORD PTR gs:[ebx-0xe9]
  402987:	sbb    al,0xcc
  402989:	add    BYTE PTR [ecx-0x7d],dl
  40298c:	int3   
  40298d:	or     DWORD PTR [edx-0x7cfff413],edx
  402993:	in     al,dx
  402994:	mov    edi,edi
  402996:	add    BYTE PTR [edi+edi*8+0x18831f89],bh
  40299d:	dec    ecx
  40299e:	mov    cl,0x78
  4029a0:	loope  0x4029a2
  4029a2:	sub    DWORD PTR [esp+ecx*8],0x0
  4029a6:	add    BYTE PTR [eax],ah
  4029a8:	add    BYTE PTR [eax],al
  4029aa:	ins    BYTE PTR es:[edi],dx
  4029ab:	dec    DWORD PTR [eax+0x1c]
  4029ae:	lock ja 0x4029f5
  4029b1:	add    ah,cl
  4029b3:	mov    DWORD PTR [ebx-0x6a0100],eax
  4029b9:	add    BYTE PTR [ecx-0x4b0a8600],bl
  4029bf:	inc    eax
  4029c0:	cdq    
  4029c1:	add    bh,bh
  4029c3:	das    
  4029c4:	(bad)  
  4029c5:	(bad)  
  4029c6:	jmp    DWORD PTR [ebx-0x64007d]
  4029cc:	pop    ecx
  4029cd:	jp     0x4029af
  4029cf:	dec    ebx
  4029d0:	(bad)  
  4029d1:	(bad)  
  4029d2:	dec    ecx
  4029d4:	cmp    edi,0x0
  4029d7:	out    dx,eax
  4029d8:	add    BYTE PTR [eax],al
  4029da:	js     0x4029dc
  4029dc:	jp     0x402999
  4029de:	cmc    
  4029df:	mov    cl,0xdd
  4029e1:	add    DWORD PTR [eax],0xffffffbe
  4029e4:	cmp    edi,0x0
  4029e7:	adc    edi,edi
  4029e9:	dec    edx
  4029eb:	jmp    FWORD PTR [edi+0x2b]
  4029ee:	call   0xcd3f779d
  4029f3:	ret    0xffff
  4029f6:	int3   
  4029f7:	aas    
  4029f8:	inc    DWORD PTR [eax]
  4029fa:	push   ecx
  4029fb:	call   FWORD PTR [edi-0x2cac71c2]
  402a01:	cmp    edi,0xffffffae
  402a04:	add    bh,bh
  402a06:	add    bl,dh
  402a08:	mov    esp,ecx
  402a0a:	jmp    0xa5f9:0x4425a183
  402a11:	add    DWORD PTR [ebx+0xff00ed],0xffffffa9
  402a18:	add    bh,bh
  402a1a:	addr16 (bad) 
  402a1c:	mov    ecx,0xf6e26c94
  402a21:	add    BYTE PTR [ebx-0xff003b],al
  402a27:	outs   dx,DWORD PTR ds:[esi]
  402a28:	(bad)  
  402a29:	jmp    FWORD PTR [esi-0x34]
  402a2c:	in     eax,dx
  402a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a2e:	sub    esp,esi
  402a30:	mov    edx,0xff84ffff
  402a35:	mov    DWORD PTR [ecx-0x2000764d],ecx
  402a3b:	add    BYTE PTR [ecx-0x5b9b6cde],al
  402a41:	int3   
  402a42:	dec    edx
  402a44:	add    BYTE PTR [ebx-0x7cff4d01],al
  402a4a:	add    BYTE PTR [eax],0xa6
  402a4d:	fadd   DWORD PTR [ecx-0xfffb7d]
  402a53:	or     eax,DWORD PTR [eax]
  402a55:	add    DWORD PTR [ebx-0x43ff007d],0xffffff89
  402a5c:	stc    
  402a5d:	push   0xff464d45
  402a62:	jmp    DWORD PTR [ebp-0x1]
  402a65:	(bad)  
  402a66:	(bad)  
  402a67:	jmp    0x18296c
  402a6c:	bound  ecx,QWORD PTR ds:0xfcbe76
  402a72:	jmp    DWORD PTR [edi]
  402a74:	add    DWORD PTR [ebx-0x33002d00],0xffffffd5
  402a7b:	mov    ebp,ebp
  402a7d:	mov    DWORD PTR [edi-0x762466],ebx
  402a83:	sub    edi,edi
  402a85:	add    DWORD PTR [eax],0xffffff98
  402a88:	add    BYTE PTR [eax],al
  402a8a:	leave  
  402a8b:	add    BYTE PTR [ebp-0xc],bl
  402a8e:	fstp   TBYTE PTR [esi+edx*2-0x34]
  402a92:	call   FWORD PTR [ebx]
  402a94:	add    BYTE PTR [eax],al
  402a96:	(bad)  
  402a97:	mov    edi,0xff7a00ff
  402a9c:	jg     0x402ac7
  402a9e:	repz repnz dec eax
  402aa1:	add    ah,cl
  402aa3:	mov    eax,0x8acc0000
  402aa8:	dec    DWORD PTR [ecx-0x584a7c6c]
  402aae:	addr16 push 0x46
  402ab1:	mov    esp,ecx
  402ab3:	mov    esp,ecx
  402ab5:	add    DWORD PTR [ebx-0x1f337c3f],0xffffffff
  402abc:	mov    ebp,DWORD PTR [ecx+eax*2]
  402abf:	push   ss
  402ac0:	loopne 0x402ac1
  402ac2:	(bad)  
  402ac3:	mov    eax,0x2a0000ff
  402ac8:	add    BYTE PTR [ebx-0x52faffda],al
  402ace:	rcl    DWORD PTR [eax],1
  402ad0:	cmc    
  402ad1:	cmp    edi,0xffffffdb
  402ad4:	add    bh,bh
  402ad6:	inc    DWORD PTR [ecx-0x76fcff77]
  402adc:	scas   al,BYTE PTR es:[edi]
  402add:	rcl    edx,1
  402adf:	fwait
  402ae0:	into   
  402ae1:	(bad)  
  402ae2:	call   DWORD PTR [edi+edi*8]
  402ae5:	add    bh,bh
  402ae7:	xchg   bh,bh
  402ae9:	dec    edx
  402aeb:	add    BYTE PTR [ebp-0x3942e45c],al
  402af1:	dec    DWORD PTR [ecx-0x3300008d]
  402af7:	pop    ebp
  402af8:	add    bh,bh
  402afa:	pop    esp
  402afb:	add    BYTE PTR [ecx+eax*1],ch
  402afe:	mov    DWORD PTR [ecx+0x2e],ebp
  402b01:	mov    DWORD PTR [ebx-0x78],eax
  402b07:	outs   dx,DWORD PTR ds:[esi]
  402b08:	add    BYTE PTR [eax],al
  402b0a:	pushf  
  402b0b:	dec    esp
  402b0d:	fsub   DWORD PTR [ebp-0x33007992]
  402b13:	push   ds
  402b14:	dec    DWORD PTR [ecx+0xcc1fff]
  402b1a:	sub    bh,bh
  402b1c:	mov    dl,BYTE PTR [edx]
  402b1e:	dec    esp
  402b1f:	push   ds
  402b20:	enter  0xffff,0xec
  402b24:	(bad)  
  402b25:	(bad)  
  402b26:	inc    DWORD PTR [edx]
  402b28:	mov    edi,edi
  402b2a:	out    0xff,eax
  402b2c:	jmp    DWORD PTR [ecx-0x15]
  402b2f:	mov    ds:0xffccbc,al
  402b34:	add    bh,bh
  402b36:	xor    ebx,0xffffffff
  402b39:	(bad)  
  402b3a:	(bad)  
  402b3c:	inc    ebx
  402b3d:	adc    al,0x75
  402b3f:	stos   DWORD PTR es:[edi],eax
  402b40:	sub    eax,0xffbfffff
  402b45:	inc    DWORD PTR [eax]
  402b47:	fs int3 
  402b49:	(bad)  
  402b4a:	fmul   st(4),st
  402b4c:	in     eax,0x9
  402b4e:	or     ebp,DWORD PTR [edi-0x67]
  402b51:	add    BYTE PTR [ecx+0xffff3a],cl
  402b57:	mov    bl,0x0
  402b59:	int3   
  402b5a:	(bad)  
  402b5b:	push   DWORD PTR [edi+ebp*4+0xbd14f6]
  402b62:	mov    DWORD PTR [ecx-0x1],eax
  402b65:	dec    esp
  402b67:	sub    edi,edi
  402b69:	add    BYTE PTR [esi],cl
  402b6b:	add    BYTE PTR [eax+esi*8],cl
  402b6e:	or     DWORD PTR [ebx+0x6a],ebx
  402b71:	add    BYTE PTR [ebx+0x83003b],al
  402b77:	jne    0x402b78
  402b79:	call   FWORD PTR [edi-0x7d]
  402b7c:	cmp    al,0xec
  402b7e:	mov    bh,0xa9
  402b80:	dec    eax
  402b81:	(bad)  
  402b82:	dec    esi
  402b84:	(bad)  
  402b85:	(bad)  
  402b86:	push   DWORD PTR [ebx]
  402b88:	inc    DWORD PTR [eax]
  402b8a:	dec    eax
  402b8b:	add    BYTE PTR [eax+edi*8],cl
  402b8e:	jnp    0x402b4c
  402b90:	jg     0x402b91
  402b92:	mov    DWORD PTR [esi-0x7d],ebp
  402b95:	add    bh,bh
  402b97:	enter  0xff,0xc9
  402b9b:	xor    DWORD PTR [edx],0xffffffec
  402b9e:	jne    0x402c10
  402ba0:	lods   al,BYTE PTR ds:[esi]
  402ba1:	add    bh,bh
  402ba3:	mov    bl,0x0
  402ba5:	inc    DWORD PTR [eax]
  402ba7:	xor    eax,0x17ffff
  402bac:	mov    ds:0xa9bf69be,eax
  402bb1:	(bad)  
  402bb2:	call   FWORD PTR [edx]
  402bb4:	add    DWORD PTR [eax],0xffffffff
  402bb7:	loope  0x402bb8
  402bb9:	push   DWORD PTR ds:0x7076a8ff
  402bbf:	sub    BYTE PTR [eax+eax*1-0x5f7d],bl
  402bc6:	call   DWORD PTR [edi-0x1]
  402bc9:	int3   
  402bca:	rol    DWORD PTR [eax],1
  402bcc:	xchg   edi,eax
  402bcd:	lea    ecx,[edi+0x30]
  402bd0:	jnp    0x402bd1
  402bd2:	push   DWORD PTR [esi]
  402bd4:	inc    DWORD PTR [ebx+0xff9d89]
  402bda:	sub    edi,edi
  402bdc:	mov    esp,0xe75e0964
  402be1:	add    bh,bh
  402be3:	adc    eax,0x99cc89cc
  402be8:	inc    DWORD PTR [ebx-0x518d00ee]
  402bee:	mov    bh,0x50
  402bf0:	loop   0x402bf2
  402bf2:	(bad)  
  402bf3:	cli    
  402bf4:	mov    DWORD PTR [eax],eax
  402bf6:	mov    DWORD PTR [ecx],edx
  402bf8:	add    BYTE PTR [ecx-0x212e764c],cl
  402bfe:	out    dx,eax
  402bff:	not    BYTE PTR [ecx]
  402c01:	add    bh,bh
  402c03:	mov    bh,bh
  402c05:	add    bh,bh
  402c07:	inc    esp
  402c08:	or     DWORD PTR [ecx-0x3fac0077],0xffffffaa
  402c0f:	dec    eax
  402c10:	or     eax,0xff0cffff
  402c15:	mov    edi,edi
  402c17:	aad    0xff
  402c19:	jmp    FWORD PTR [esi-0x49a99100]
  402c1f:	ins    BYTE PTR es:[edi],dx
  402c20:	in     al,dx
  402c21:	add    bh,bh
  402c23:	inc    edi
  402c24:	dec    esp
  402c26:	inc    DWORD PTR [ebp-0x4eff01]
  402c2c:	aaa    
  402c2d:	ss pop es
  402c2f:	mov    bl,0xc2
  402c31:	inc    DWORD PTR [eax]
  402c33:	sbb    al,BYTE PTR [eax]
  402c35:	int3   
  402c36:	or     DWORD PTR ds:0x892dff83,0x28
  402c3d:	xor    DWORD PTR [ecx-0x76ff9cc9],ebp
  402c43:	cmp    eax,0x50083ff
  402c48:	add    ah,cl
  402c4a:	xchg   bh,bh
  402c4c:	call   0xcc:0x7809cb46
  402c53:	inc    esp
  402c54:	(bad)  
  402c55:	dec    DWORD PTR [ecx+0xfcc8379]
  402c5b:	add    BYTE PTR [edi+0x2bf425c4],cl
  402c61:	add    bh,bh
  402c63:	pop    ebx
  402c64:	int3   
  402c65:	inc    DWORD PTR [eax]
  402c67:	dec    esi
  402c68:	add    BYTE PTR [ecx+0x740b0060],cl
  402c6e:	add    esp,0xdbffffae
  402c74:	add    DWORD PTR [eax],0xffffffcc
  402c77:	aaa    
  402c78:	add    BYTE PTR [ebx+0x3b07cc8f],al
  402c7e:	inc    ebx
  402c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c80:	loop   0x402c81
  402c82:	inc    DWORD PTR [esi+0x0]
  402c85:	add    bh,bh
  402c87:	imul   edi,edi,0x400ba00
  402c8d:	add    ch,BYTE PTR [ecx+0x88c2]
  402c93:	pusha  
  402c94:	inc    DWORD PTR [eax]
  402c96:	dec    DWORD PTR [ecx]
  402c98:	(bad)  
  402c99:	(bad)  
  402c9a:	cmp    bh,bh
  402c9c:	mov    ch,0xf7
  402c9e:	add    DWORD PTR [edi+0x38000072],eax
  402ca4:	cmp    edi,0xffffffff
  402ca7:	jnp    0x402c2c
  402ca9:	sub    esi,0xffffffff
  402cac:	pop    ebp
  402cad:	sbb    BYTE PTR [esi-0x7c00dbe7],dl
  402cb3:	add    DWORD PTR [ebx-0x7c9eff7d],0x0
  402cba:	ins    BYTE PTR es:[edi],dx
  402cbb:	dec    DWORD PTR [edi]
  402cbd:	xchg   esp,eax
  402cbe:	and    DWORD PTR [di-0x1],ebx
  402cc2:	add    DWORD PTR [ebx],0x0
  402cc5:	(bad)  
  402cc6:	(bad)  
  402cc7:	mov    ecx,0x83a983ff
  402ccc:	(bad)  
  402ccd:	xor    ah,BYTE PTR [ecx+0x3d]
  402cd0:	retf   
  402cd1:	(bad)  
  402cd2:	inc    DWORD PTR [eax-0x4bff3400]
  402cd8:	add    BYTE PTR [ebx+0x75308956],al
  402cde:	jbe    0x402d4d
  402ce0:	(bad)  
  402ce2:	mov    DWORD PTR [ebx-0x3301],ebx
  402ce8:	inc    DWORD PTR [ebx-0x74650028]
  402cee:	fwait
  402cef:	sub    al,BYTE PTR [ecx]
  402cf1:	dec    DWORD PTR [ecx-0x7c0000c9]
  402cf7:	in     eax,dx
  402cf8:	(bad)  
  402cf9:	jmp    FWORD PTR [edi+0x795211ff]
  402cff:	xor    DWORD PTR [edx-0x1d0100],esp
  402d05:	int3   
  402d06:	int3   
  402d07:	out    0x0,eax
  402d09:	call   edi
  402d0b:	(bad)  
  402d0c:	jnp    0x402cd2
  402d0e:	sub    dh,BYTE PTR [ebx-0x2effffe5]
  402d14:	dec    DWORD PTR [ecx+0xad83]
  402d1a:	ret    0xa9ff
  402d1d:	jmp    0x402cba
  402d1f:	jmp    0x402d08
  402d21:	add    BYTE PTR [eax],al
  402d23:	sar    edi,cl
  402d25:	add    bh,bh
  402d27:	cmc    
  402d28:	add    bh,bh
  402d2a:	in     eax,0xff
  402d2c:	cmp    al,0x8f
  402d2e:	mov    ecx,0xffffd1d5
  402d33:	fiadd  WORD PTR [eax]
  402d35:	mov    edi,edi
  402d37:	xchg   edi,edi
  402d39:	int3   
  402d3a:	mov    esp,0x868b4cff
  402d3f:	fnsave [eax-0x7cfe0001]
  402d45:	int3   
  402d46:	add    BYTE PTR [esi],bh
  402d48:	add    DWORD PTR [eax],0x20
  402d4b:	add    BYTE PTR [edi+ecx*1+0x71],bl
  402d4f:	call   0xffff:0xa5ff0045
  402d56:	mov    DWORD PTR [edx-0x3365ff01],ebx
  402d5c:	jo     0x402dcb
  402d5e:	jmp    0x13f7f11
  402d63:	out    0x0,al
  402d65:	dec    esp
  402d67:	jbe    0x402d68
  402d69:	int3   
  402d6a:	idiv   edi
  402d6c:	or     BYTE PTR [eax-0x1c],0xb0
  402d70:	xchg   esi,eax
  402d71:	mov    edi,edi
  402d73:	out    dx,al
  402d74:	add    BYTE PTR [eax],al
  402d76:	add    BYTE PTR [edi],dh
  402d78:	add    bh,bh
  402d7a:	xchg   bh,bh
  402d7c:	stos   DWORD PTR es:[edi],eax
  402d7d:	xchg   edx,eax
  402d7e:	test   DWORD PTR [edx],ecx
  402d80:	xchg   esi,eax
  402d81:	add    BYTE PTR [ebx-0x18],al
  402d87:	fwait
  402d88:	(bad)  
  402d89:	push   DWORD PTR [eax-0x7d]
  402d8c:	fstp   DWORD PTR [esi+0x9]
  402d8f:	dec    ebx
  402d90:	pop    es
  402d91:	(bad)  
  402d92:	dec    DWORD PTR [edi+edi*8-0x1]
  402d96:	(bad)  
  402d97:	inc    BYTE PTR [eax]
  402d99:	int3   
  402d9a:	mov    edi,0x1d8f7a00
  402d9f:	jle    0x402dc6
  402da1:	(bad)  
  402da2:	call   esp
  402da4:	add    ah,cl
  402da6:	push   DWORD PTR [edi+edi*8+0x2cff1f83]
  402dad:	or     eax,0xff74ac6a
  402db2:	call   FWORD PTR [edx-0x77]
  402db5:	add    BYTE PTR [eax],al
  402db7:	push   0x833000ff
  402dbc:	mov    edi,0x989f21e1
  402dc1:	(bad)  
  402dc2:	call   DWORD PTR [esi+0x10830000]
  402dc8:	add    BYTE PTR [ebx-0x242d0100],al
  402dce:	lahf   
  402dcf:	cs sbb eax,0xff8affff
  402dd5:	int3   
  402dd6:	call   DWORD PTR [edi-0x34]
  402dd9:	or     ecx,0x0
  402ddc:	ret    
  402ddd:	stos   DWORD PTR es:[edi],eax
  402dde:	sbb    dl,bl
  402de0:	jnp    0x402de2
  402de2:	or     ecx,0xffffff89
  402de5:	(bad)  
  402de6:	(bad)  
  402de7:	mov    ebx,0x83048989
  402dec:	neg    BYTE PTR [edi-0x27]
  402def:	jmp    0x703f2ee2
  402df4:	int3   
  402df5:	mov    DWORD PTR [eax],eax
  402df7:	jge    0x402d7c
  402df9:	dec    esp
  402dfb:	dec    DWORD PTR [ebp+eiz*1+0xd48c81]
  402e02:	call   DWORD PTR [ecx+ecx*4-0x76bdff01]
  402e09:	jmp    DWORD PTR [edx-0x3b6a6c01]
  402e0f:	outs   dx,BYTE PTR ds:[esi]
  402e10:	test   BYTE PTR [eax],0xff
  402e13:	and    eax,0x84cc00ff
  402e18:	int3   
  402e19:	int3   
  402e1a:	push   0x223e3200
  402e1f:	xor    eax,0x7000ff5f
  402e24:	int3   
  402e25:	dec    DWORD PTR [ecx+0x63830030]
  402e2b:	(bad)  
  402e2c:	jp     0x402e5b
  402e2e:	or     esi,DWORD PTR [ebx-0x45ff0052]
  402e34:	add    ah,cl
  402e36:	and    edi,0xffffffff
  402e39:	adc    DWORD PTR [edi],0xffffff89
  402e3c:	sub    DWORD PTR [ebx+edi*2-0x4d],edx
  402e40:	int3   
  402e41:	add    BYTE PTR [ecx-0x76007c32],cl
  402e47:	lock int3 
  402e49:	cmp    DWORD PTR [edx+0x4061e1ff],0xffffff9d
  402e50:	and    eax,DWORD PTR [eax]
  402e52:	int3   
  402e53:	mov    eax,0x50ffffcc
  402e58:	inc    DWORD PTR [eax]
  402e5a:	icebp  
  402e5b:	sub    ebx,0x54
  402e5e:	scas   al,BYTE PTR es:[edi]
  402e5f:	dec    esi
  402e60:	das    
  402e61:	add    bh,bh
  402e63:	pop    eax
  402e64:	int3   
  402e65:	dec    esp
  402e67:	test   DWORD PTR [eax],eax
  402e69:	mov    DWORD PTR [ebx+0x54f68183],eax
  402e6f:	in     eax,dx
  402e70:	aaa    
  402e71:	add    bh,bh
  402e73:	into   
  402e74:	inc    DWORD PTR [eax]
  402e76:	add    BYTE PTR [ecx],bl
  402e78:	dec    DWORD PTR [ecx+0x394bff6b]
  402e7e:	mov    dl,BYTE PTR [esi]
  402e80:	fwait
  402e81:	(bad)  
  402e82:	(bad)  
  402e83:	cmp    al,BYTE PTR [eax]
  402e85:	inc    DWORD PTR [eax]
  402e87:	mov    ah,0xcc
  402e89:	cmp    DWORD PTR [ebp-0x1],0x8
  402e8d:	mov    BYTE PTR [ecx-0x7e],0x65
  402e91:	inc    DWORD PTR [ebx-0x4b]
  402e97:	push   es
  402e98:	add    DWORD PTR [ebx+0x268f00cc],0xffffffd4
  402e9f:	cli    
  402ea0:	cdq    
  402ea1:	(bad)  
  402ea2:	dec    ecx
  402ea4:	(bad)  
  402ea5:	inc    DWORD PTR [eax]
  402ea7:	rol    DWORD PTR [eax],cl
  402ea9:	(bad)  
  402eaa:	cli    
  402eab:	add    BYTE PTR [ebx+0x36282f05],al
  402eb1:	inc    DWORD PTR [eax]
  402eb3:	mov    cl,ah
  402eb5:	add    DWORD PTR [eax],0xffffff99
  402eb8:	inc    DWORD PTR [eax]
  402eba:	ret    
  402ebb:	add    BYTE PTR [edx-0x5147f2e7],bh
  402ec1:	add    bh,bh
  402ec3:	dec    ecx
  402ec4:	add    bh,bh
  402ec6:	jmp    edi
  402ec8:	add    bh,bh
  402eca:	push   es
  402ecb:	dec    DWORD PTR [ebx+0x3072a936]
  402ed1:	add    DWORD PTR [eax],0x23
  402ed4:	cmp    edi,0x0
  402ed7:	xor    edi,edi
  402ed9:	jmp    ebx
  402edb:	add    BYTE PTR [ebp+0x30aad519],dh
  402ee1:	(bad)  
  402ee2:	(bad)  
  402ee3:	jge    0x402ee4
  402ee5:	add    BYTE PTR [eax],al
  402ee7:	mov    ecx,0xff7600ff
  402eec:	xchg   edx,eax
  402eed:	outs   dx,DWORD PTR ds:[esi]
  402eee:	and    BYTE PTR [ebp+edx*8+0xcc00ff],dl
  402ef5:	(bad)  
  402ef6:	(bad)  
  402ef7:	stc    
  402ef8:	add    ah,cl
  402efa:	leave  
  402efb:	add    BYTE PTR [edx+ebx*1],ch
  402efe:	jne    0x402e9f
  402f00:	jae    0x402e85
  402f02:	sub    DWORD PTR [ecx-0x1],0xffffffff
  402f06:	mov    DWORD PTR [ebx-0x1],ecx
  402f09:	(bad)  
  402f0a:	mov    esi,0x6ae422ff
  402f0f:	sub    al,0xed
  402f11:	inc    DWORD PTR [ebx-0xf0]
  402f17:	jl     0x402e9c
  402f19:	add    cl,dl
  402f1b:	add    BYTE PTR [ecx-0x39],ah
  402f1e:	out    0x7d,eax
  402f20:	mov    eax,DWORD PTR [eax]
  402f22:	jmp    ebp
  402f24:	inc    DWORD PTR [ebx+0xffca00]
  402f2a:	dec    edx
  402f2b:	call   FWORD PTR [esi-0x56]
  402f2e:	cdq    
  402f2f:	rol    DWORD PTR [eax],cl
  402f31:	inc    DWORD PTR [ebx-0x7c0064]
  402f37:	inc    edx
  402f38:	add    bh,bh
  402f3a:	mov    al,BYTE PTR [ebx-0x7d09dd82]
  402f40:	pusha  
  402f41:	mov    DWORD PTR [ebx-0x7c000036],eax
  402f47:	cmp    bh,bh
  402f49:	add    BYTE PTR [esi],ah
  402f4b:	int3   
  402f4c:	mov    fs,WORD PTR [eax]
  402f4e:	dec    edx
  402f4f:	mov    ch,0x2d
  402f51:	inc    DWORD PTR [eax]
  402f53:	or     al,BYTE PTR [eax]
  402f55:	mov    edi,edi
  402f57:	adc    eax,0xffaa8300
  402f5c:	stos   DWORD PTR es:[edi],eax
  402f5d:	pop    eax
  402f5e:	jle    0x402f1e
  402f60:	ja     0x402f2e
  402f62:	call   DWORD PTR [ecx+0x9ffcc00]
  402f68:	mov    DWORD PTR [ecx+0x3cf7cc59],ecx
  402f6e:	pop    edx
  402f6f:	mov    esp,0xe5ff008c
  402f74:	add    DWORD PTR [ebx+0x896789],0x3e
  402f7b:	mov    DWORD PTR [esi-0x3094cbd8],ebp
  402f81:	add    BYTE PTR [eax],al
  402f83:	mov    ah,0xff
  402f85:	add    ah,cl
  402f87:	or     DWORD PTR [ebx+0x2bffc700],eax
  402f8d:	mov    cl,0x8a
  402f8f:	stos   BYTE PTR es:[edi],al
  402f90:	xor    edi,edi
  402f92:	inc    DWORD PTR [esi]
  402f94:	(bad)  
  402f95:	dec    esp
  402f97:	aas    
  402f98:	(bad)  
  402f99:	(bad)  
  402f9a:	jg     0x402f9b
  402f9c:	leave  
  402f9d:	sub    edx,edi
  402f9f:	ds fcos 
  402fa2:	inc    DWORD PTR [esi-0x77760100]
  402fa8:	inc    DWORD PTR [ebx-0x7517ff52]
  402fae:	adc    eax,0x83ff9779
  402fb3:	push   ds
  402fb4:	int3   
  402fb5:	(bad)  
  402fb6:	inc    esi
  402fb8:	(bad)  
  402fb9:	dec    DWORD PTR [edx-0x7cffff01]
  402fbf:	inc    DWORD PTR [eax]
  402fc1:	call   FWORD PTR [edi]
  402fc3:	mov    BYTE PTR [ecx+0xd40042],cl
  402fc9:	add    BYTE PTR [ebx+0xbccc59],dl
  402fcf:	mov    dh,0x83
  402fd1:	jmp    DWORD PTR [ebx+0xe9ff55]
  402fd7:	(bad)  
  402fd8:	inc    DWORD PTR [ebx+0x2700c0b2]
  402fde:	add    ah,dh
  402fe0:	sub    esp,0x8
  402fe3:	push   esi
  402fe4:	push   edi
  402fe5:	call   DWORD PTR ds:0x444068
  402feb:	push   0xe4
  402ff0:	push   0x42
  402ff2:	mov    DWORD PTR [esp+0x10],eax
  402ff6:	call   DWORD PTR ds:0x444024
  402ffc:	mov    edx,DWORD PTR ds:0x447d1c
  403002:	mov    ecx,DWORD PTR ds:0x447060
  403008:	mov    DWORD PTR [esp+0xc],eax
  40300c:	add    edx,0x1211c
  403012:	mov    esi,0x1f3
  403017:	jmp    0x403020
  403019:	lea    esp,[esp+0x0]
  403020:	movzx  eax,BYTE PTR [ecx+0x4]
  403024:	movzx  edi,WORD PTR [ecx+0x2]
  403028:	movzx  ecx,BYTE PTR [ecx]
  40302b:	shl    eax,0x10
  40302e:	add    eax,edi
  403030:	shl    eax,0x8
  403033:	add    eax,ecx
  403035:	mov    ecx,0xac0c7357
  40303a:	sub    ecx,DWORD PTR ds:0x447d14
  403040:	mov    ds:0x447d04,eax
  403045:	xor    ecx,eax
  403047:	mov    DWORD PTR [edx],ecx
  403049:	mov    ecx,DWORD PTR ds:0x447060
  40304f:	add    ecx,0x8
  403052:	add    edx,0x4
  403055:	dec    esi
  403056:	mov    DWORD PTR ds:0x447060,ecx
  40305c:	jne    0x403020
  40305e:	push   ebx
  40305f:	push   ebp
  403060:	push   0x4094c0
  403065:	call   0x42c750
  40306a:	mov    esi,DWORD PTR ds:0x447d1c
  403070:	mov    edi,DWORD PTR ds:0x444070
  403076:	mov    ebx,DWORD PTR ds:0x44406c
  40307c:	add    esp,0x4
  40307f:	add    esi,0xffe0
  403085:	mov    ebp,0x142
  40308a:	lea    ebx,[ebx+0x0]
  403090:	mov    edx,DWORD PTR ds:0x447064
  403096:	mov    ecx,DWORD PTR ds:0x447d14
  40309c:	mov    eax,DWORD PTR [edx+0x1]
  40309f:	add    ecx,0x78180b4a
  4030a5:	xor    ecx,eax
  4030a7:	mov    ds:0x447d04,eax
  4030ac:	push   0x0
  4030ae:	mov    DWORD PTR [esi],ecx
  4030b0:	call   edi
  4030b2:	mov    ecx,DWORD PTR ds:0x447064
  4030b8:	movzx  eax,BYTE PTR [ecx+0xf]
  4030bc:	movzx  edx,BYTE PTR [ecx+0xa]
  4030c0:	shl    eax,0x8
  4030c3:	add    eax,edx
  4030c5:	movzx  edx,BYTE PTR [ecx+0x8]
  4030c9:	movzx  ecx,BYTE PTR [ecx+0x6]
  4030cd:	push   0x0
  4030cf:	shl    eax,0x8
  4030d2:	add    eax,edx
  4030d4:	push   0xc0
  4030d9:	push   0xac
  4030de:	shl    eax,0x8
  4030e1:	push   0x68
  4030e3:	add    eax,ecx
  4030e5:	mov    edx,0x78188b4c
  4030ea:	sub    edx,DWORD PTR ds:0x447d14
  4030f0:	push   0x38
  4030f2:	mov    ds:0x447d04,eax
  4030f7:	xor    edx,eax
  4030f9:	mov    eax,DWORD PTR [esp+0x24]
  4030fd:	push   0x0
  4030ff:	mov    DWORD PTR [esi+0x4],edx
  403102:	push   eax
  403103:	add    esi,0x8
  403106:	call   ebx
  403108:	add    DWORD PTR ds:0x447064,0x10
  40310f:	dec    ebp
  403110:	jne    0x403090
  403116:	mov    ecx,DWORD PTR ds:0x447064
  40311c:	mov    eax,DWORD PTR [ecx+0x1]
  40311f:	mov    edx,DWORD PTR ds:0x447d14
  403125:	mov    ebx,DWORD PTR ds:0x444028
  40312b:	xor    edx,eax
  40312d:	xor    edx,0x78180b4a
  403133:	mov    ds:0x447d04,eax
  403138:	mov    DWORD PTR [esi],edx
  40313a:	mov    esi,DWORD PTR ds:0x447d1c
  403140:	add    esi,0x11090
  403146:	mov    edi,0xd9
  40314b:	jmp    0x403150
  40314d:	lea    ecx,[ecx+0x0]
  403150:	mov    eax,ds:0x447068
  403155:	mov    eax,DWORD PTR [eax+0x4]
  403158:	mov    ecx,DWORD PTR ds:0x447d14
  40315e:	mov    ds:0x447d04,eax
  403163:	add    ecx,0x12ba204
  403169:	xor    ecx,eax
  40316b:	mov    DWORD PTR [esi],ecx
  40316d:	mov    ecx,DWORD PTR ds:0x447068
  403173:	movzx  eax,BYTE PTR [ecx+0xf]
  403177:	movzx  edx,BYTE PTR [ecx+0xb]
  40317b:	movzx  ecx,WORD PTR [ecx+0x9]
  40317f:	shl    eax,0x8
  403182:	add    eax,edx
  403184:	mov    edx,DWORD PTR ds:0x447d14
  40318a:	shl    eax,0x10
  40318d:	add    eax,ecx
  40318f:	add    edx,0x12ba204
  403195:	xor    edx,eax
  403197:	mov    ds:0x447d04,eax
  40319c:	push   0x446af0
  4031a1:	mov    DWORD PTR [esi+0x4],edx
  4031a4:	call   ebx
  4031a6:	add    DWORD PTR ds:0x447068,0x10
  4031ad:	add    esi,0x8
  4031b0:	dec    edi
  4031b1:	jne    0x403150
  4031b3:	mov    ecx,DWORD PTR ds:0x447d1c
  4031b9:	mov    edx,DWORD PTR ds:0x44706c
  4031bf:	pop    ebp
  4031c0:	add    ecx,0x13190
  4031c6:	mov    esi,0xad
  4031cb:	pop    ebx
  4031cc:	lea    esp,[esp+0x0]
  4031d0:	movzx  eax,WORD PTR [edx+0x6]
  4031d4:	movzx  edi,BYTE PTR [edx+0x4]
  4031d8:	movzx  edx,BYTE PTR [edx+0x2]
  4031dc:	shl    eax,0x8
  4031df:	add    eax,edi
  4031e1:	shl    eax,0x8
  4031e4:	add    eax,edx
  4031e6:	mov    edx,DWORD PTR ds:0x447d14
  4031ec:	add    edx,0xe6ef17ad
  4031f2:	xor    edx,eax
  4031f4:	mov    ds:0x447d04,eax
  4031f9:	mov    DWORD PTR [ecx],edx
  4031fb:	mov    edx,DWORD PTR ds:0x44706c
  403201:	add    edx,0x8
  403204:	mov    DWORD PTR ds:0x44706c,edx
  40320a:	movzx  eax,WORD PTR [edx+0x6]
  40320e:	movzx  edi,BYTE PTR [edx+0x4]
  403212:	movzx  edx,BYTE PTR [edx+0x2]
  403216:	shl    eax,0x8
  403219:	add    eax,edi
  40321b:	shl    eax,0x8
  40321e:	add    eax,edx
  403220:	mov    edx,DWORD PTR ds:0x447d14
  403226:	add    edx,0xe6ef17ad
  40322c:	xor    edx,eax
  40322e:	mov    ds:0x447d04,eax
  403233:	mov    DWORD PTR [ecx+0x4],edx
  403236:	mov    edx,DWORD PTR ds:0x44706c
  40323c:	add    edx,0x8
  40323f:	mov    DWORD PTR ds:0x44706c,edx
  403245:	movzx  eax,WORD PTR [edx+0x6]
  403249:	movzx  edi,BYTE PTR [edx+0x4]
  40324d:	movzx  edx,BYTE PTR [edx+0x2]
  403251:	shl    eax,0x8
  403254:	add    eax,edi
  403256:	shl    eax,0x8
  403259:	add    eax,edx
  40325b:	mov    edx,DWORD PTR ds:0x447d14
  403261:	add    edx,0xe6ef17ad
  403267:	xor    edx,eax
  403269:	mov    ds:0x447d04,eax
  40326e:	mov    DWORD PTR [ecx+0x8],edx
  403271:	mov    edx,DWORD PTR ds:0x44706c
  403277:	add    edx,0x8
  40327a:	add    ecx,0xc
  40327d:	dec    esi
  40327e:	mov    DWORD PTR ds:0x44706c,edx
  403284:	jne    0x4031d0
  40328a:	call   0x4119e0
  40328f:	mov    eax,ds:0x447d1c
  403294:	mov    edx,DWORD PTR ds:0x447070
  40329a:	add    eax,0xf5f0
  40329f:	mov    esi,0x35
  4032a4:	movzx  ecx,WORD PTR [edx+0x8]
  4032a8:	movzx  edi,BYTE PTR [edx+0x4]
  4032ac:	movzx  edx,BYTE PTR [edx+0x2]
  4032b0:	shl    ecx,0x8
  4032b3:	add    ecx,edi
  4032b5:	shl    ecx,0x8
  4032b8:	add    ecx,edx
  4032ba:	mov    edx,DWORD PTR ds:0x447d14
  4032c0:	mov    DWORD PTR ds:0x447d04,ecx
  4032c6:	add    edx,0x137fcd66
  4032cc:	xor    edx,ecx
  4032ce:	mov    DWORD PTR [eax],edx
  4032d0:	mov    edx,DWORD PTR ds:0x447070
  4032d6:	movzx  ecx,BYTE PTR [edx+0xe]
  4032da:	movzx  edi,WORD PTR [edx+0xc]
  4032de:	movzx  edx,BYTE PTR [edx+0xa]
  4032e2:	shl    ecx,0x10
  4032e5:	add    ecx,edi
  4032e7:	shl    ecx,0x8
  4032ea:	add    ecx,edx
  4032ec:	mov    DWORD PTR ds:0x447d04,ecx
  4032f2:	mov    edx,0x13804d68
  4032f7:	sub    edx,DWORD PTR ds:0x447d14
  4032fd:	xor    edx,ecx
  4032ff:	mov    DWORD PTR [eax+0x4],edx
  403302:	mov    edx,DWORD PTR ds:0x447070
  403308:	add    edx,0x10
  40330b:	mov    DWORD PTR ds:0x447070,edx
  403311:	movzx  ecx,WORD PTR [edx+0x8]
  403315:	movzx  edi,BYTE PTR [edx+0x4]
  403319:	movzx  edx,BYTE PTR [edx+0x2]
  40331d:	shl    ecx,0x8
  403320:	add    ecx,edi
  403322:	shl    ecx,0x8
  403325:	add    ecx,edx
  403327:	mov    edx,DWORD PTR ds:0x447d14
  40332d:	mov    DWORD PTR ds:0x447d04,ecx
  403333:	add    edx,0x137fcd66
  403339:	xor    edx,ecx
  40333b:	mov    DWORD PTR [eax+0x8],edx
  40333e:	mov    edx,DWORD PTR ds:0x447070
  403344:	movzx  ecx,BYTE PTR [edx+0xe]
  403348:	movzx  edi,WORD PTR [edx+0xc]
  40334c:	movzx  edx,BYTE PTR [edx+0xa]
  403350:	shl    ecx,0x10
  403353:	add    ecx,edi
  403355:	shl    ecx,0x8
  403358:	add    ecx,edx
  40335a:	mov    DWORD PTR ds:0x447d04,ecx
  403360:	mov    edx,0x13804d68
  403365:	sub    edx,DWORD PTR ds:0x447d14
  40336b:	xor    edx,ecx
  40336d:	mov    DWORD PTR [eax+0xc],edx
  403370:	mov    edx,DWORD PTR ds:0x447070
  403376:	add    edx,0x10
  403379:	mov    DWORD PTR ds:0x447070,edx
  40337f:	movzx  ecx,WORD PTR [edx+0x8]
  403383:	movzx  edi,BYTE PTR [edx+0x4]
  403387:	movzx  edx,BYTE PTR [edx+0x2]
  40338b:	shl    ecx,0x8
  40338e:	add    ecx,edi
  403390:	shl    ecx,0x8
  403393:	add    ecx,edx
  403395:	mov    edx,DWORD PTR ds:0x447d14
  40339b:	mov    DWORD PTR ds:0x447d04,ecx
  4033a1:	add    edx,0x137fcd66
  4033a7:	xor    edx,ecx
  4033a9:	mov    DWORD PTR [eax+0x10],edx
  4033ac:	mov    edx,DWORD PTR ds:0x447070
  4033b2:	movzx  ecx,BYTE PTR [edx+0xe]
  4033b6:	movzx  edi,WORD PTR [edx+0xc]
  4033ba:	movzx  edx,BYTE PTR [edx+0xa]
  4033be:	shl    ecx,0x10
  4033c1:	add    ecx,edi
  4033c3:	shl    ecx,0x8
  4033c6:	add    ecx,edx
  4033c8:	mov    edx,0x13804d68
  4033cd:	sub    edx,DWORD PTR ds:0x447d14
  4033d3:	mov    DWORD PTR ds:0x447d04,ecx
  4033d9:	xor    edx,ecx
  4033db:	mov    DWORD PTR [eax+0x14],edx
  4033de:	mov    edx,DWORD PTR ds:0x447070
  4033e4:	add    edx,0x10
  4033e7:	mov    DWORD PTR ds:0x447070,edx
  4033ed:	movzx  ecx,WORD PTR [edx+0x8]
  4033f1:	movzx  edi,BYTE PTR [edx+0x4]
  4033f5:	movzx  edx,BYTE PTR [edx+0x2]
  4033f9:	shl    ecx,0x8
  4033fc:	add    ecx,edi
  4033fe:	shl    ecx,0x8
  403401:	add    ecx,edx
  403403:	mov    edx,DWORD PTR ds:0x447d14
  403409:	mov    DWORD PTR ds:0x447d04,ecx
  40340f:	add    edx,0x137fcd66
  403415:	xor    edx,ecx
  403417:	mov    DWORD PTR [eax+0x18],edx
  40341a:	mov    edx,DWORD PTR ds:0x447070
  403420:	movzx  ecx,BYTE PTR [edx+0xe]
  403424:	movzx  edi,WORD PTR [edx+0xc]
  403428:	movzx  edx,BYTE PTR [edx+0xa]
  40342c:	shl    ecx,0x10
  40342f:	add    ecx,edi
  403431:	shl    ecx,0x8
  403434:	add    ecx,edx
  403436:	mov    DWORD PTR ds:0x447d04,ecx
  40343c:	mov    edx,0x13804d68
  403441:	sub    edx,DWORD PTR ds:0x447d14
  403447:	xor    edx,ecx
  403449:	mov    DWORD PTR [eax+0x1c],edx
  40344c:	mov    edx,DWORD PTR ds:0x447070
  403452:	add    edx,0x10
  403455:	mov    DWORD PTR ds:0x447070,edx
  40345b:	movzx  ecx,WORD PTR [edx+0x8]
  40345f:	movzx  edi,BYTE PTR [edx+0x4]
  403463:	movzx  edx,BYTE PTR [edx+0x2]
  403467:	shl    ecx,0x8
  40346a:	add    ecx,edi
  40346c:	shl    ecx,0x8
  40346f:	add    ecx,edx
  403471:	mov    edx,DWORD PTR ds:0x447d14
  403477:	mov    DWORD PTR ds:0x447d04,ecx
  40347d:	add    edx,0x137fcd66
  403483:	xor    edx,ecx
  403485:	mov    DWORD PTR [eax+0x20],edx
  403488:	mov    edx,DWORD PTR ds:0x447070
  40348e:	movzx  ecx,BYTE PTR [edx+0xe]
  403492:	movzx  edi,WORD PTR [edx+0xc]
  403496:	movzx  edx,BYTE PTR [edx+0xa]
  40349a:	shl    ecx,0x10
  40349d:	add    ecx,edi
  40349f:	shl    ecx,0x8
  4034a2:	add    ecx,edx
  4034a4:	mov    DWORD PTR ds:0x447d04,ecx
  4034aa:	mov    edx,0x13804d68
  4034af:	sub    edx,DWORD PTR ds:0x447d14
  4034b5:	xor    edx,ecx
  4034b7:	mov    DWORD PTR [eax+0x24],edx
  4034ba:	mov    edx,DWORD PTR ds:0x447070
  4034c0:	add    edx,0x10
  4034c3:	mov    DWORD PTR ds:0x447070,edx
  4034c9:	movzx  ecx,WORD PTR [edx+0x8]
  4034cd:	movzx  edi,BYTE PTR [edx+0x4]
  4034d1:	movzx  edx,BYTE PTR [edx+0x2]
  4034d5:	shl    ecx,0x8
  4034d8:	add    ecx,edi
  4034da:	shl    ecx,0x8
  4034dd:	add    ecx,edx
  4034df:	mov    edx,DWORD PTR ds:0x447d14
  4034e5:	mov    DWORD PTR ds:0x447d04,ecx
  4034eb:	add    edx,0x137fcd66
  4034f1:	xor    edx,ecx
  4034f3:	mov    DWORD PTR [eax+0x28],edx
  4034f6:	mov    edx,DWORD PTR ds:0x447070
  4034fc:	movzx  ecx,BYTE PTR [edx+0xe]
  403500:	movzx  edi,WORD PTR [edx+0xc]
  403504:	movzx  edx,BYTE PTR [edx+0xa]
  403508:	shl    ecx,0x10
  40350b:	add    ecx,edi
  40350d:	shl    ecx,0x8
  403510:	add    ecx,edx
  403512:	mov    DWORD PTR ds:0x447d04,ecx
  403518:	mov    edx,0x13804d68
  40351d:	sub    edx,DWORD PTR ds:0x447d14
  403523:	add    eax,0x30
  403526:	xor    edx,ecx
  403528:	mov    DWORD PTR [eax-0x4],edx
  40352b:	mov    edx,DWORD PTR ds:0x447070
  403531:	add    edx,0x10
  403534:	dec    esi
  403535:	mov    DWORD PTR ds:0x447070,edx
  40353b:	jne    0x4032a4
  403541:	mov    edx,DWORD PTR ds:0x447d1c
  403547:	mov    eax,DWORD PTR [esp+0x14]
  40354b:	add    edx,0x109f4
  403551:	add    eax,0x3
  403554:	mov    esi,0x8d
  403559:	lea    esp,[esp+0x0]
  403560:	movzx  ecx,WORD PTR [eax+0x2]
  403564:	movzx  edi,BYTE PTR [eax]
  403567:	shl    ecx,0x8
  40356a:	add    ecx,edi
  40356c:	movzx  edi,BYTE PTR [eax-0x2]
  403570:	shl    ecx,0x8
  403573:	add    ecx,edi
  403575:	mov    edi,DWORD PTR ds:0x447d14
  40357b:	mov    DWORD PTR ds:0x447d04,ecx
  403581:	add    edi,0x5ab731a1
  403587:	xor    edi,ecx
  403589:	mov    DWORD PTR [edx],edi
  40358b:	movzx  ecx,WORD PTR [eax+0xa]
  40358f:	movzx  edi,BYTE PTR [eax+0x8]
  403593:	shl    ecx,0x8
  403596:	add    ecx,edi
  403598:	movzx  edi,BYTE PTR [eax+0x6]
  40359c:	shl    ecx,0x8
  40359f:	add    ecx,edi
  4035a1:	mov    edi,DWORD PTR ds:0x447d14
  4035a7:	mov    DWORD PTR ds:0x447d04,ecx
  4035ad:	add    edi,0x5ab731a1
  4035b3:	xor    edi,ecx
  4035b5:	mov    DWORD PTR [edx+0x4],edi
  4035b8:	movzx  ecx,WORD PTR [eax+0x12]
  4035bc:	movzx  edi,BYTE PTR [eax+0x10]
  4035c0:	shl    ecx,0x8
  4035c3:	add    ecx,edi
  4035c5:	movzx  edi,BYTE PTR [eax+0xe]
  4035c9:	shl    ecx,0x8
  4035cc:	add    ecx,edi
  4035ce:	mov    edi,DWORD PTR ds:0x447d14
  4035d4:	add    edi,0x5ab731a1
  4035da:	xor    edi,ecx
  4035dc:	mov    DWORD PTR ds:0x447d04,ecx
  4035e2:	mov    DWORD PTR [edx+0x8],edi
  4035e5:	add    eax,0x18
  4035e8:	add    edx,0xc
  4035eb:	dec    esi
  4035ec:	jne    0x403560
  4035f2:	mov    eax,ds:0x447d1c
  4035f7:	mov    edx,DWORD PTR ds:0x447074
  4035fd:	add    eax,0x11758
  403602:	mov    esi,0x34
  403607:	jmp    0x403610
  403609:	lea    esp,[esp+0x0]
  403610:	movzx  ecx,WORD PTR [edx+0x3]
  403614:	movzx  edx,WORD PTR [edx]
  403617:	shl    ecx,0x10
  40361a:	add    ecx,edx
  40361c:	mov    edx,DWORD PTR ds:0x447d14
  403622:	mov    DWORD PTR ds:0x447d04,ecx
  403628:	add    edx,0x54bd6877
  40362e:	xor    edx,ecx
  403630:	mov    DWORD PTR [eax],edx
  403632:	mov    edx,DWORD PTR ds:0x447074
  403638:	movzx  ecx,BYTE PTR [edx+0xa]
  40363c:	movzx  edi,BYTE PTR [edx+0x7]
  403640:	movzx  edx,WORD PTR [edx+0x5]
  403644:	shl    ecx,0x8
  403647:	add    ecx,edi
  403649:	shl    ecx,0x10
  40364c:	add    ecx,edx
  40364e:	mov    DWORD PTR ds:0x447d04,ecx
  403654:	mov    edx,0x54bde879
  403659:	sub    edx,DWORD PTR ds:0x447d14
  40365f:	xor    edx,ecx
  403661:	mov    DWORD PTR [eax+0x4],edx
  403664:	mov    edx,DWORD PTR ds:0x447074
  40366a:	add    edx,0x10
  40366d:	mov    DWORD PTR ds:0x447074,edx
  403673:	movzx  ecx,WORD PTR [edx+0x3]
  403677:	movzx  edx,WORD PTR [edx]
  40367a:	shl    ecx,0x10
  40367d:	add    ecx,edx
  40367f:	mov    edx,DWORD PTR ds:0x447d14
  403685:	mov    DWORD PTR ds:0x447d04,ecx
  40368b:	add    edx,0x54bd6877
  403691:	xor    edx,ecx
  403693:	mov    DWORD PTR [eax+0x8],edx
  403696:	mov    edx,DWORD PTR ds:0x447074
  40369c:	movzx  ecx,BYTE PTR [edx+0xa]
  4036a0:	movzx  edi,BYTE PTR [edx+0x7]
  4036a4:	movzx  edx,WORD PTR [edx+0x5]
  4036a8:	shl    ecx,0x8
  4036ab:	add    ecx,edi
  4036ad:	shl    ecx,0x10
  4036b0:	add    ecx,edx
  4036b2:	mov    DWORD PTR ds:0x447d04,ecx
  4036b8:	mov    edx,0x54bde879
  4036bd:	sub    edx,DWORD PTR ds:0x447d14
  4036c3:	xor    edx,ecx
  4036c5:	mov    DWORD PTR [eax+0xc],edx
  4036c8:	mov    edx,DWORD PTR ds:0x447074
  4036ce:	add    edx,0x10
  4036d1:	mov    DWORD PTR ds:0x447074,edx
  4036d7:	movzx  ecx,WORD PTR [edx+0x3]
  4036db:	movzx  edx,WORD PTR [edx]
  4036de:	shl    ecx,0x10
  4036e1:	add    ecx,edx
  4036e3:	mov    edx,DWORD PTR ds:0x447d14
  4036e9:	mov    DWORD PTR ds:0x447d04,ecx
  4036ef:	add    edx,0x54bd6877
  4036f5:	xor    edx,ecx
  4036f7:	mov    DWORD PTR [eax+0x10],edx
  4036fa:	mov    edx,DWORD PTR ds:0x447074
  403700:	movzx  ecx,BYTE PTR [edx+0xa]
  403704:	movzx  edi,BYTE PTR [edx+0x7]
  403708:	movzx  edx,WORD PTR [edx+0x5]
  40370c:	shl    ecx,0x8
  40370f:	add    ecx,edi
  403711:	shl    ecx,0x10
  403714:	add    ecx,edx
  403716:	mov    edx,0x54bde879
  40371b:	sub    edx,DWORD PTR ds:0x447d14
  403721:	mov    DWORD PTR ds:0x447d04,ecx
  403727:	xor    edx,ecx
  403729:	mov    DWORD PTR [eax+0x14],edx
  40372c:	mov    edx,DWORD PTR ds:0x447074
  403732:	add    edx,0x10
  403735:	mov    DWORD PTR ds:0x447074,edx
  40373b:	movzx  ecx,WORD PTR [edx+0x3]
  40373f:	movzx  edx,WORD PTR [edx]
  403742:	shl    ecx,0x10
  403745:	add    ecx,edx
  403747:	mov    edx,DWORD PTR ds:0x447d14
  40374d:	mov    DWORD PTR ds:0x447d04,ecx
  403753:	add    edx,0x54bd6877
  403759:	xor    edx,ecx
  40375b:	mov    DWORD PTR [eax+0x18],edx
  40375e:	mov    edx,DWORD PTR ds:0x447074
  403764:	movzx  ecx,BYTE PTR [edx+0xa]
  403768:	movzx  edi,BYTE PTR [edx+0x7]
  40376c:	movzx  edx,WORD PTR [edx+0x5]
  403770:	shl    ecx,0x8
  403773:	add    ecx,edi
  403775:	shl    ecx,0x10
  403778:	add    ecx,edx
  40377a:	mov    DWORD PTR ds:0x447d04,ecx
  403780:	mov    edx,0x54bde879
  403785:	sub    edx,DWORD PTR ds:0x447d14
  40378b:	add    eax,0x30
  40378e:	xor    edx,ecx
  403790:	mov    DWORD PTR [eax-0x14],edx
  403793:	mov    edx,DWORD PTR ds:0x447074
  403799:	add    edx,0x10
  40379c:	mov    DWORD PTR ds:0x447074,edx
  4037a2:	movzx  ecx,WORD PTR [edx+0x3]
  4037a6:	movzx  edx,WORD PTR [edx]
  4037a9:	shl    ecx,0x10
  4037ac:	add    ecx,edx
  4037ae:	mov    edx,DWORD PTR ds:0x447d14
  4037b4:	mov    DWORD PTR ds:0x447d04,ecx
  4037ba:	add    edx,0x54bd6877
  4037c0:	xor    edx,ecx
  4037c2:	mov    DWORD PTR [eax-0x10],edx
  4037c5:	mov    edx,DWORD PTR ds:0x447074
  4037cb:	movzx  ecx,BYTE PTR [edx+0xa]
  4037cf:	movzx  edi,BYTE PTR [edx+0x7]
  4037d3:	movzx  edx,WORD PTR [edx+0x5]
  4037d7:	shl    ecx,0x8
  4037da:	add    ecx,edi
  4037dc:	shl    ecx,0x10
  4037df:	add    ecx,edx
  4037e1:	mov    DWORD PTR ds:0x447d04,ecx
  4037e7:	mov    edx,0x54bde879
  4037ec:	sub    edx,DWORD PTR ds:0x447d14
  4037f2:	xor    edx,ecx
  4037f4:	mov    DWORD PTR [eax-0xc],edx
  4037f7:	mov    edx,DWORD PTR ds:0x447074
  4037fd:	add    edx,0x10
  403800:	mov    DWORD PTR ds:0x447074,edx
  403806:	movzx  ecx,WORD PTR [edx+0x3]
  40380a:	movzx  edx,WORD PTR [edx]
  40380d:	shl    ecx,0x10
  403810:	add    ecx,edx
  403812:	mov    edx,DWORD PTR ds:0x447d14
  403818:	add    edx,0x54bd6877
  40381e:	xor    edx,ecx
  403820:	mov    DWORD PTR ds:0x447d04,ecx
  403826:	mov    DWORD PTR [eax-0x8],edx
  403829:	mov    edx,DWORD PTR ds:0x447074
  40382f:	movzx  ecx,BYTE PTR [edx+0xa]
  403833:	movzx  edi,BYTE PTR [edx+0x7]
  403837:	movzx  edx,WORD PTR [edx+0x5]
  40383b:	shl    ecx,0x8
  40383e:	add    ecx,edi
  403840:	shl    ecx,0x10
  403843:	add    ecx,edx
  403845:	mov    edx,0x54bde879
  40384a:	sub    edx,DWORD PTR ds:0x447d14
  403850:	mov    DWORD PTR ds:0x447d04,ecx
  403856:	xor    edx,ecx
  403858:	mov    DWORD PTR [eax-0x4],edx
  40385b:	mov    edx,DWORD PTR ds:0x447074
  403861:	add    edx,0x10
  403864:	dec    esi
  403865:	mov    DWORD PTR ds:0x447074,edx
  40386b:	jne    0x403610
  403871:	movzx  ecx,WORD PTR [edx+0x3]
  403875:	movzx  edx,WORD PTR [edx]
  403878:	shl    ecx,0x10
  40387b:	add    ecx,edx
  40387d:	mov    edx,DWORD PTR ds:0x447d14
  403883:	add    edx,0x54bd6877
  403889:	xor    edx,ecx
  40388b:	mov    DWORD PTR ds:0x447d04,ecx
  403891:	mov    DWORD PTR [eax],edx
  403893:	mov    edx,DWORD PTR ds:0x447d1c
  403899:	mov    ecx,DWORD PTR ds:0x447078
  40389f:	add    edx,0x128e8
  4038a5:	mov    esi,0x115
  4038aa:	lea    ebx,[ebx+0x0]
  4038b0:	movzx  eax,BYTE PTR [ecx+0x6]
  4038b4:	movzx  edi,BYTE PTR [ecx+0x3]
  4038b8:	movzx  ecx,WORD PTR [ecx]
  4038bb:	shl    eax,0x8
  4038be:	add    eax,edi
  4038c0:	shl    eax,0x10
  4038c3:	add    eax,ecx
  4038c5:	mov    ds:0x447d04,eax
  4038ca:	mov    ecx,0x1787e6d6
  4038cf:	sub    ecx,DWORD PTR ds:0x447d14
  4038d5:	add    edx,0x8
  4038d8:	xor    ecx,eax
  4038da:	mov    DWORD PTR [edx-0x8],ecx
  4038dd:	mov    ecx,DWORD PTR ds:0x447078
  4038e3:	add    ecx,0x8
  4038e6:	mov    DWORD PTR ds:0x447078,ecx
  4038ec:	movzx  eax,BYTE PTR [ecx+0x6]
  4038f0:	movzx  edi,BYTE PTR [ecx+0x3]
  4038f4:	movzx  ecx,WORD PTR [ecx]
  4038f7:	shl    eax,0x8
  4038fa:	add    eax,edi
  4038fc:	shl    eax,0x10
  4038ff:	add    eax,ecx
  403901:	mov    ecx,0x1787e6d6
  403906:	sub    ecx,DWORD PTR ds:0x447d14
  40390c:	mov    ds:0x447d04,eax
  403911:	xor    ecx,eax
  403913:	mov    DWORD PTR [edx-0x4],ecx
  403916:	mov    ecx,DWORD PTR ds:0x447078
  40391c:	add    ecx,0x8
  40391f:	dec    esi
  403920:	mov    DWORD PTR ds:0x447078,ecx
  403926:	jne    0x4038b0
  403928:	mov    eax,DWORD PTR [esp+0xc]
  40392c:	pop    edi
  40392d:	pop    esi
  40392e:	test   eax,eax
  403930:	je     0x403939
  403932:	push   eax
  403933:	call   DWORD PTR ds:0x44402c
  403939:	add    esp,0x8
  40393c:	ret    
  40393d:	int3   
  40393e:	int3   
  40393f:	int3   
  403940:	call   FWORD PTR [ecx]
  403942:	jmp    ebp
  403944:	jmp    DWORD PTR [ebx-0x16]
  403947:	call   FWORD PTR [esi-0x50003400]
  40394d:	adc    BYTE PTR [ecx],bh
  40394f:	cmp    edi,0xffffff9c
  403952:	add    BYTE PTR [edx+0x0],ch
  403955:	fld    DWORD PTR [ebp-0xbb01]
  40395b:	add    BYTE PTR [ebp-0x7c7c8408],al
  403961:	pop    esi
  403962:	call   FWORD PTR [edi+edi*8+0x48]
  403966:	cmp    edi,edi
  403968:	(bad)  
  403969:	add    BYTE PTR [eax],al
  40396b:	sbb    DWORD PTR [ecx+0x47],0x73
  40396f:	add    BYTE PTR [eax],al
  403971:	fwait
  403972:	xor    DWORD PTR [eax],0x0
  403975:	xchg   DWORD PTR [eax-0xff2101],edi
  40397b:	(bad)  
  40397c:	stc    
  40397d:	jecxz  0x40396e
  40397f:	add    BYTE PTR [eax],al
  403981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403982:	push   DWORD PTR [eax-0x1]
  403985:	repnz sub al,BYTE PTR [eax]
  403988:	mov    bh,bh
  40398a:	inc    DWORD PTR [eax]
  40398c:	adc    eax,0xffff4f6c
  403991:	mov    ah,0xff
  403993:	add    DWORD PTR [ebx+0x6b83dc78],0xffffff83
  40399a:	add    bh,bh
  40399c:	xchg   esi,eax
  40399d:	cs push esp
  40399f:	(bad)  
  4039a0:	call   FWORD PTR [esi+0x65ffa100]
  4039a6:	repz dec DWORD PTR [edi-0x1676ff01]
  4039ad:	mov    edx,0xad8300c3
  4039b2:	call   DWORD PTR [esi]
  4039b4:	(bad)  
  4039b5:	fisub  DWORD PTR [ebp+0xff7000]
  4039bb:	(bad)  
  4039bc:	jnp    0x40399d
  4039be:	(bad)  
  4039bf:	add    bh,bh
  4039c1:	xchg   esi,eax
  4039c2:	sub    DWORD PTR [edi],0xffffffff
  4039c5:	test   al,0xa8
  4039c7:	add    BYTE PTR [esi-0x9ffff7d],ch
  4039cd:	adc    ax,WORD PTR [ebx-0x25000477]
  4039d4:	jmp    FWORD PTR [edi+0x5d]
  4039d7:	dec    DWORD PTR [edx+0x3c00ff00]
  4039dd:	dec    edi
  4039de:	ud0    edi,edi
  4039e1:	inc    BYTE PTR [ebx+0x7100893e]
  4039e7:	add    BYTE PTR [eax-0x357c0100],dl
  4039ed:	xchg   esp,eax
  4039ee:	(bad)  
  4039f0:	add    bh,cl
  4039f2:	int3   
  4039f3:	push   cs
  4039f4:	mov    ecx,esi
  4039f6:	dec    DWORD PTR [di+0x0]
  4039fa:	inc    DWORD PTR [ebx+0xacdcb6]
  403a00:	jmp    DWORD PTR [ebx]
  403a02:	int3   
  403a03:	gs (bad) 
  403a05:	mov    esi,0xff44ff7f
  403a0a:	add    BYTE PTR [eax],al
  403a0c:	das    
  403a0d:	add    DWORD PTR [eax-0x17ff34],esp
  403a13:	and    ecx,DWORD PTR [ecx-0x5bff5e71]
  403a19:	add    DWORD PTR [ebx+0x4a3a2a00],0xffffffff
  403a20:	dec    DWORD PTR [eax+0x1e00f600]
  403a26:	or     al,BYTE PTR [eax]
  403a28:	jl     0x4039b3
  403a2a:	add    bh,bh
  403a2c:	sub    ebp,DWORD PTR [ebx+ecx*2-0x332b0034]
  403a33:	scas   al,BYTE PTR es:[edi]
  403a34:	add    BYTE PTR [eax],cl
  403a36:	ins    DWORD PTR es:[edi],dx
  403a37:	dec    DWORD PTR [ebx-0x1]
  403a3a:	add    BYTE PTR [eax],al
  403a3c:	inc    ecx
  403a3d:	xor    al,0xa
  403a3f:	(bad)  
  403a40:	call   edx
  403a42:	inc    esi
  403a44:	jmp    DWORD PTR [ebx-0x56]
  403a47:	add    BYTE PTR [edx],dl
  403a49:	(bad)  
  403a4a:	inc    DWORD PTR [eax]
  403a4c:	push   ss
  403a4d:	lods   eax,DWORD PTR ds:[esi]
  403a4e:	jp     0x403a50
  403a50:	add    BYTE PTR [ecx-0x1],ch
  403a53:	jmp    0xffbf:0x83a04783
  403a5a:	(bad)  
  403a5b:	inc    DWORD PTR [edx-0x3]
  403a5e:	cld    
  403a5f:	(bad)  
  403a60:	jmp    DWORD PTR [ebx]
  403a62:	jmp    esp
  403a64:	(bad)  
  403a65:	ds arpl di,di
  403a68:	cmp    bh,bh
  403a6a:	cmp    edi,0xffffffeb
  403a6d:	lods   al,BYTE PTR ds:[esi]
  403a6e:	xchg   edi,eax
  403a6f:	mov    edi,edi
  403a71:	and    al,0x89
  403a73:	xor    bh,bh
  403a75:	cli    
  403a76:	xchg   edx,eax
  403a77:	dec    DWORD PTR [ecx-0x1]
  403a7a:	dec    esp
  403a7c:	jmp    0xec:0xff0041d6
  403a83:	mov    ds:0x8353bbcc,eax
  403a88:	pop    ebp
  403a89:	int3   
  403a8a:	add    DWORD PTR [eax],0x6b
  403a8d:	pop    ebp
  403a8e:	fadd   DWORD PTR [ebx-0x700f901]
  403a94:	jmp    DWORD PTR [esi*4+0x14ff]
  403a9b:	inc    DWORD PTR [eax+ebp*4+0x8]
  403a9f:	add    DWORD PTR [eax],0xffffffbf
  403aa2:	dec    edi
  403aa4:	add    al,al
  403aa6:	int    0xff
  403aa8:	idiv   bh
  403aaa:	cmp    edi,0xffffff89
  403aad:	mov    ss:0xcc68ffff,al
  403ab3:	or     al,0xff
  403ab5:	ins    DWORD PTR es:[edi],dx
  403ab6:	xchg   edx,eax
  403ab7:	add    edx,0xffffff83
  403aba:	add    bh,bh
  403abc:	push   ss
  403abd:	iret   
  403abe:	sar    bh,cl
  403ac0:	int3   
  403ac1:	add    BYTE PTR [eax],0xf1
  403ac4:	add    BYTE PTR [esi-0x29],al
  403ac7:	add    BYTE PTR [ecx+0x0],cl
  403aca:	(bad)  
  403acb:	dec    DWORD PTR [edi]
  403acd:	jmp    0x403b47
  403acf:	inc    DWORD PTR [ebx+0x45ff33]
  403ad5:	mov    WORD PTR [ebp-0x1],?
  403ad8:	or     edi,edi
  403ada:	int3   
  403adb:	jmp    eax
  403add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ade:	dec    ebx
  403adf:	int3   
  403ae0:	add    BYTE PTR [eax-0x7d],bh
  403ae3:	and    DWORD PTR [eax],eax
  403ae5:	leave  
  403ae6:	sar    edi,1
  403ae8:	cld    
  403ae9:	inc    DWORD PTR [eax]
  403aeb:	(bad)  
  403aec:	jmp    0x2b:0xffcca84d
  403af3:	pop    edi
  403af4:	add    BYTE PTR [eax+ebp*1+0x0],al
  403af8:	daa    
  403af9:	add    bh,bh
  403afb:	add    BYTE PTR [edi+0x45],bh
  403afe:	sbb    al,0xff
  403b00:	add    ch,dl
  403b02:	push   DWORD PTR [eax-0xfe2201]
  403b08:	xor    DWORD PTR [ebx+0x4d0c00ff],eax
  403b0e:	pop    ds
  403b0f:	(bad)  
  403b10:	inc    DWORD PTR [ebp-0x52005001]
  403b16:	xor    eax,DWORD PTR [eax]
  403b18:	mov    edi,0x1ff0000
  403b1d:	add    dl,al
  403b1f:	int3   
  403b20:	add    BYTE PTR [esi-0x77],ch
  403b23:	scas   eax,DWORD PTR es:[edi]
  403b24:	sub    ecx,0x2c
  403b27:	add    BYTE PTR [eax],dh
  403b29:	add    bh,bh
  403b2b:	push   DWORD PTR [eax-0xff0716]
  403b31:	xchg   ebp,eax
  403b32:	jmp    DWORD PTR [edx-0x7c95077d]
  403b38:	test   al,0x0
  403b3a:	inc    DWORD PTR [eax]
  403b3c:	hlt    
  403b3d:	mul    BYTE PTR [edx]
  403b3f:	int3   
  403b40:	add    BYTE PTR [edi],ch
  403b42:	cmp    esi,0xffffffff
  403b45:	dec    eax
  403b46:	xlat   BYTE PTR ds:[ebx]
  403b47:	add    dl,cl
  403b49:	inc    DWORD PTR [eax]
  403b4b:	and    DWORD PTR [edi],0x68
  403b4e:	adc    edi,edi
  403b50:	add    bh,ch
  403b52:	add    BYTE PTR [edi-0xc8757d],ch
  403b58:	test   eax,0x46ff83ff
  403b5d:	lds    esp,FWORD PTR [eax-0x7d]
  403b60:	push   DWORD PTR [edx]
  403b62:	int3   
  403b63:	mov    edi,?
  403b65:	fwait
  403b66:	js     0x403b34
  403b68:	push   edx
  403b69:	add    bh,bh
  403b6b:	dec    DWORD PTR [edi+0xc]
  403b6e:	repnz cmp edi,0xffffffcb
  403b72:	push   DWORD PTR [edi+edi*8+0x11]
  403b76:	stc    
  403b77:	call   DWORD PTR [ebx-0x1]
  403b7a:	inc    DWORD PTR [eax]
  403b7c:	fld1   
  403b7e:	sahf   
  403b7f:	inc    DWORD PTR [eax]
  403b81:	daa    
  403b82:	add    BYTE PTR [edx+0x0],al
  403b85:	pusha  
  403b86:	and    edi,edi
  403b88:	inc    eax
  403b89:	add    ah,cl
  403b8b:	call   edi
  403b8d:	call   0x90ff:0xa58300c9
  403b94:	inc    DWORD PTR [ebx+0xa9ff36]
  403b9a:	int3   
  403b9b:	jmp    DWORD PTR [ebx+0xfffea3]
  403ba1:	(bad)  
  403ba2:	int3   
  403ba3:	in     eax,dx
  403ba4:	add    BYTE PTR [esi],ch
  403ba6:	or     DWORD PTR [eax],eax
  403ba8:	lods   eax,DWORD PTR ds:[esi]
  403ba9:	add    bh,bh
  403bab:	inc    DWORD PTR [edx+eax*4+0x64ffffca]
  403bb2:	add    BYTE PTR [eax-0x7d],al
  403bb5:	arpl   WORD PTR [edx-0x1],bx
  403bb8:	aaa    
  403bb9:	add    bh,bh
  403bbb:	inc    DWORD PTR [ebx-0xf8ac]
  403bc1:	ins    DWORD PTR es:[edi],dx
  403bc2:	inc    ecx
  403bc4:	or     DWORD PTR [eax-0xeb007e],0xffffffff
  403bcb:	(bad)  
  403bcc:	jmp    0xff81:0xff5009
  403bd3:	xchg   ebx,eax
  403bd4:	add    BYTE PTR [ebp-0x56],ah
  403bd7:	call   DWORD PTR [ebx-0x34]
  403bda:	int3   
  403bdb:	add    BYTE PTR [ebx-0xb],dl
  403bde:	and    BYTE PTR [ecx-0x1400c201],cl
  403be4:	inc    ecx
  403be6:	add    bh,bh
  403be8:	cmp    DWORD PTR [eax],eax
  403bea:	(bad)  
  403beb:	dec    edi
  403bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bee:	je     0x403bef
  403bf0:	add    cl,bh
  403bf2:	dec    eax
  403bf4:	mov    edx,esi
  403bf6:	mov    esp,cs
  403bf8:	push   0x5b0083ff
  403bfd:	sub    edx,edx
  403bff:	(bad)  
  403c00:	call   FWORD PTR [eax+0x0]
  403c03:	sar    bh,cl
  403c05:	mov    BYTE PTR [esi-0x7d],cl
  403c08:	dec    edi
  403c09:	int3   
  403c0a:	(bad)  
  403c0b:	jmp    FWORD PTR [ebx-0x77]
  403c0e:	data16 (bad) 
  403c10:	(bad)  
  403c11:	out    dx,eax
  403c12:	inc    DWORD PTR [ebx+0x0]
  403c15:	mov    bh,0xf
  403c17:	add    BYTE PTR [eax],bl
  403c19:	cmp    edi,0xffffffcc
  403c1c:	mov    al,0xd
  403c1e:	sub    edi,edi
  403c20:	add    BYTE PTR [esi+0x1c00d783],bh
  403c26:	mov    ah,0x83
  403c28:	cmp    edi,edi
  403c2a:	mov    DWORD PTR [ebx-0x7cb7428a],eax
  403c30:	mov    edi,ebx
  403c32:	adc    DWORD PTR [esi-0x77],0xffffff81
  403c36:	dec    eax
  403c37:	call   FWORD PTR [esi+0x740000ff]
  403c3d:	test   BYTE PTR [ebp+0xb789cc],al
  403c43:	(bad)  
  403c45:	sbb    dl,BYTE PTR [edx-0x1]
  403c48:	jo     0x403c49
  403c4a:	inc    DWORD PTR [ebx-0x1e2fc6]
  403c50:	add    BYTE PTR [ebx-0x6fff747d],dh
  403c56:	aam    0x0
  403c58:	jmp    0xc4413c5c
  403c5d:	(bad)  
  403c5e:	rol    DWORD PTR [eax],cl
  403c60:	int3   
  403c61:	lods   al,BYTE PTR ds:[esi]
  403c62:	dec    esp
  403c64:	call   FWORD PTR [esi-0x7c380092]
  403c6a:	add    DWORD PTR [eax],0x6c
  403c6d:	test   al,0xf5
  403c6f:	int3   
  403c70:	jmp    FWORD PTR [ecx]
  403c72:	cmp    DWORD PTR [edx-0x1],0x47
  403c76:	idiv   edi
  403c78:	mov    dl,0xff
  403c7a:	inc    DWORD PTR [eax]
  403c7c:	xchg   DWORD PTR [eax],ebp
  403c7e:	jno    0x403c80
  403c80:	inc    ecx
  403c82:	call   FWORD PTR [edx]
  403c84:	add    dh,cl
  403c86:	inc    eax
  403c87:	add    BYTE PTR [esi],ch
  403c89:	cmp    edi,0xffffff83
  403c8c:	inc    edi
  403c8d:	shl    BYTE PTR [esi+0x0],1
  403c90:	call   DWORD PTR [ebx-0x20001c01]
  403c96:	mov    BYTE PTR [ebx-0x330000d6],0xd3
  403c9d:	mov    ah,0x3d
  403c9f:	(bad)  
  403ca0:	(bad)  
  403ca1:	cmp    edi,edi
  403ca3:	leave  
  403ca4:	int3   
  403ca5:	cmp    ch,BYTE PTR [ebx-0x34]
  403ca8:	popa   
  403ca9:	inc    DWORD PTR [eax]
  403cab:	jmp    DWORD PTR [ebp+0x836d7e]
  403cb1:	pop    ebx
  403cb2:	mov    ebx,ecx
  403cb4:	add    BYTE PTR [ebx],dh
  403cb6:	push   ecx
  403cb7:	call   DWORD PTR [esi]
  403cb9:	mov    edi,edi
  403cbb:	push   DWORD PTR [edx-0xb98e]
  403cc1:	xchg   ecx,eax
  403cc2:	dec    esi
  403cc4:	mov    DWORD PTR [ebx+ebp*4+0xfff689],ebp
  403ccb:	call   FWORD PTR [ebp+0x8345d3]
  403cd1:	mov    es,WORD PTR [eax]
  403cd3:	inc    edx
  403cd4:	int3   
  403cd5:	pop    esp
  403cd6:	dec    esp
  403cd7:	push   DWORD PTR [ebp-0x77]
  403cda:	add    BYTE PTR [eax],al
  403cdc:	add    al,0x3
  403cde:	sbb    edi,edi
  403ce0:	inc    DWORD PTR [edx]
  403ce2:	adc    DWORD PTR [ecx-0x1],0x65
  403ce6:	jp     0x403ce7
  403ce8:	stc    
  403ce9:	add    BYTE PTR [eax],al
  403ceb:	add    BYTE PTR [ebp+eiz*1+0x66],ch
  403cef:	(bad)  
  403cf0:	jmp    FWORD PTR [ebx-0x34]
  403cf3:	add    BYTE PTR ss:[esi+0x828365],dl
  403cfa:	add    DWORD PTR [eax],0x15
  403cfd:	mov    ebx,0x62ff00bc
  403d02:	int3   
  403d03:	jnp    0x403cd1
  403d05:	dec    edi
  403d06:	add    DWORD PTR [eax],eax
  403d08:	xchg   edi,eax
  403d09:	inc    DWORD PTR [ebx+0x4d8a7d00]
  403d0f:	add    DWORD PTR [eax],0xffffff98
  403d12:	(bad)  
  403d13:	jp     0x403d15
  403d15:	push   ecx
  403d16:	mov    edx,0xcc833800
  403d1b:	(bad)  
  403d1c:	fdiv   st(7),st
  403d1e:	jo     0x403d1f
  403d20:	sbb    DWORD PTR [edi+edi*8-0x21d5ff93],0xffffff89
  403d28:	sahf   
  403d29:	add    bh,bh
  403d2b:	cmp    DWORD PTR [esi-0x7600a564],0xffffffc0
  403d32:	add    BYTE PTR [edx-0x76940301],bh
  403d38:	xlat   BYTE PTR ds:[ebx]
  403d39:	inc    DWORD PTR [eax]
  403d3b:	mov    DWORD PTR [esi],esi
  403d3d:	test   DWORD PTR [eax-0x1],esp
  403d40:	jmp    FWORD PTR [esp+ecx*8+0x79c3ff37]
  403d47:	adc    DWORD PTR [ebp-0x7d],0xffffff83
  403d4b:	jmp    FWORD PTR [esp+ebp*8+0x14]
  403d4f:	int3   
  403d50:	add    cl,bl
  403d52:	jmp    DWORD PTR [ecx-0x314000]
  403d58:	push   esp
  403d59:	dec    esp
  403d5b:	call   FWORD PTR ds:0x83836b02
  403d61:	cmp    esp,ecx
  403d63:	jb     0x403d64
  403d65:	xchg   esi,eax
  403d66:	add    al,BYTE PTR [eax]
  403d68:	call   0x54403c6d
  403d6d:	inc    ebp
  403d6e:	jno    0x403d70
  403d70:	jmp    FWORD PTR [eax+eax*1+0x310d00de]
  403d77:	jmp    DWORD PTR [edx-0x1]
  403d7a:	add    DWORD PTR [ebx+0xc076de],0x0
  403d81:	jns    0x403d83
  403d83:	out    0x0,al
  403d85:	int    0x50
  403d87:	add    BYTE PTR [ecx],bh
  403d89:	inc    DWORD PTR [ebx+0x27640800]
  403d8f:	add    BYTE PTR [eax],al
  403d91:	jnp    0x403d16
  403d93:	and    al,0xff
  403d95:	cmp    al,0x18
  403d97:	cmp    DWORD PTR [eax+0x52ff83ff],0xffffffda
  403d9e:	xor    DWORD PTR [eax],eax
  403da0:	call   FWORD PTR [ebp+0x72ffdaff]
  403da6:	(bad)  
  403da7:	call   edx
  403da9:	inc    DWORD PTR [eax]
  403dab:	(bad)  
  403dac:	fsub   QWORD PTR [edx+0x4483ff12]
  403db2:	int3   
  403db3:	mov    BYTE PTR [eax],al
  403db5:	push   ecx
  403db6:	(bad)  
  403db7:	inc    DWORD PTR ds:0x8ff8900
  403dbd:	test   DWORD PTR [eax],esi
  403dbf:	add    BYTE PTR [eax],al
  403dc1:	add    al,BYTE PTR [eax]
  403dc3:	test   al,0xff
  403dc5:	popf   
  403dc6:	jbe    0x403dc8
  403dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc9:	inc    DWORD PTR [eax]
  403dcb:	add    bh,ah
  403dcd:	cmp    edx,DWORD PTR [ebx+0x0]
  403dd0:	and    DWORD PTR [ebx],0x0
  403dd3:	pop    ebp
  403dd4:	sbb    DWORD PTR [ebp-0x7b335d],0x0
  403ddb:	int3   
  403ddc:	gs adc al,0x31
  403ddf:	add    DWORD PTR [eax],0x14
  403de2:	int3   
  403de3:	or     edi,edi
  403de5:	aad    0x29
  403de7:	add    bh,ch
  403de9:	add    bh,bh
  403deb:	jmp    FWORD PTR ds:0xcc9eb7
  403df1:	cmp    bh,bh
  403df3:	mov    al,ds:0x896718ff
  403df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403df9:	inc    DWORD PTR [eax]
  403dfb:	call   FWORD PTR [ecx-0x52]
  403dfe:	adc    ecx,esp
  403e00:	jmp    FWORD PTR [esi-0x1]
  403e03:	xchg   ebp,eax
  403e04:	int3   
  403e05:	push   ebp
  403e06:	iret   
  403e07:	add    BYTE PTR [esi],dl
  403e09:	add    bh,bh
  403e0b:	jmp    eax
  403e0d:	test   eax,0xf0083d0
  403e12:	push   DWORD PTR [ebp+0x4a8583]
  403e18:	jb     0x403e1a
  403e1a:	add    bh,bh
  403e1c:	dec    ecx
  403e1d:	inc    esi
  403e1e:	push   cs
  403e1f:	cmp    edi,0xffffffa0
  403e22:	mov    DWORD PTR [esi+0x0],ebp
  403e25:	dec    eax
  403e26:	pop    ebx
  403e27:	add    BYTE PTR [edx+0x0],bh
  403e2a:	add    BYTE PTR [eax],al
  403e2c:	ror    BYTE PTR [esi-0x35],1
  403e2f:	inc    DWORD PTR [ebx+0xddffab]
  403e35:	push   ss
  403e36:	pop    ecx
  403e37:	sbb    ebp,0x0
  403e3a:	int3   
  403e3b:	(bad)  
  403e3c:	cld    
  403e3d:	mov    esi,0x55ffff82
  403e42:	jmp    DWORD PTR [esi+0x52b89]
  403e48:	sub    bh,bh
  403e4a:	(bad)  
  403e4b:	jmp    DWORD PTR [ebx+0xc]
  403e4e:	pop    ebp
  403e4f:	add    bh,bh
  403e51:	jge    0x403e52
  403e53:	sub    bh,bh
  403e55:	sar    DWORD PTR [eax],1
  403e57:	call   DWORD PTR [edi]
  403e59:	add    bh,bh
  403e5b:	add    BYTE PTR [edx+0x75],cl
  403e5e:	data16 (bad) 
  403e60:	jmp    FWORD PTR [ebx-0x7d]
  403e63:	std    
  403e64:	(bad)  
  403e65:	js     0x403ebf
  403e67:	int3   
  403e68:	and    al,0x0
  403e6a:	or     esp,0xffffff95
  403e6d:	sub    eax,0xf700ff6f
  403e72:	sbb    DWORD PTR [eax+eax*1-0x900416a],0x0
  403e7a:	(bad)  
  403e7b:	inc    ecx
  403e7d:	pop    DWORD PTR [edi]
  403e7f:	add    BYTE PTR [eax],al
  403e81:	mov    esi,0x59ffad83
  403e86:	mov    al,0x89
  403e88:	daa    
  403e89:	mov    edi,edi
  403e8b:	int3   
  403e8c:	pop    ss
  403e8d:	gs jmp 0xff41:0xff1bff00
  403e95:	and    DWORD PTR [ebx],ebp
  403e97:	add    bl,cl
  403e99:	int3   
  403e9a:	(bad)  
  403e9b:	dec    DWORD PTR [ecx+0xff5ba0]
  403ea1:	sbb    eax,0x9ccc6cff
  403ea6:	pop    esp
  403ea7:	sbb    DWORD PTR [esi],0xffffff83
  403eaa:	inc    DWORD PTR [eax]
  403eac:	ficom  WORD PTR [esi-0x65ffff13]
  403eb2:	cmp    ebp,0xffffff83
  403eb5:	sub    al,0xd8
  403eb7:	inc    DWORD PTR [ebx+0x0]
  403eba:	add    BYTE PTR [ecx+0xbee454],cl
  403ec0:	call   DWORD PTR [esi-0x6cfff100]
  403ec6:	jecxz  0x403ec8
  403ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec9:	cmp    edi,0xffffffff
  403ecc:	outs   dx,BYTE PTR ds:[esi]
  403ecd:	mul    BYTE PTR [esi-0x1]
  403ed0:	add    ah,cl
  403ed2:	call   FWORD PTR [ebx-0x1]
  403ed5:	sti    
  403ed6:	fisttp DWORD PTR [ecx+0xff0089]
  403edc:	movlps QWORD PTR [edi+edi*8],xmm7
  403ee0:	int3   
  403ee1:	xchg   edi,edi
  403ee3:	push   es
  403ee4:	int3   
  403ee5:	ds in  eax,0x89
  403ee8:	push   eax
  403ee9:	dec    DWORD PTR [ecx+0x80175ff]
  403eef:	int3   
  403ef0:	add    BYTE PTR [eax],dh
  403ef2:	push   ecx
  403ef4:	call   DWORD PTR [esi]
  403ef6:	cmp    DWORD PTR [eax],eax
  403ef8:	int3   
  403ef9:	(bad)  
  403efa:	(bad)  
  403efb:	dec    DWORD PTR [edi-0x4872]
  403f01:	jg     0x403e86
  403f03:	jmp    0x832e:0xffb510ff
  403f0a:	inc    DWORD PTR [eax]
  403f0c:	nop
  403f0d:	sub    BYTE PTR [ecx-0x1],cl
  403f10:	sub    ecx,0xffffffff
  403f13:	fcos   
  403f15:	cdq    
  403f16:	aad    0xff
  403f18:	cmp    bh,0x0
  403f1b:	int3   
  403f1c:	sbb    BYTE PTR [ecx],0xa4
  403f1f:	inc    DWORD PTR [ebx+0xdeff51]
  403f25:	stos   BYTE PTR es:[edi],al
  403f26:	sub    bh,bh
  403f28:	jecxz  0x403f2a
  403f2a:	add    BYTE PTR [eax],al
  403f2c:	push   ss
  403f2d:	scas   al,BYTE PTR es:[edi]
  403f2e:	push   esi
  403f2f:	int3   
  403f30:	push   DWORD PTR [ebp+0x28389ff]
  403f36:	xchg   DWORD PTR [eax],eax
  403f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f39:	add    BYTE PTR [eax],al
  403f3b:	add    dh,ch
  403f3d:	xchg   ecx,eax
  403f3e:	retf   
  403f3f:	add    BYTE PTR [ecx+0x3300c6],cl
  403f45:	adc    al,0x8d
  403f47:	jmp    FWORD PTR [ebx]
  403f49:	mov    DWORD PTR [ebx-0x4514100],eax
  403f4f:	(bad)  
  403f50:	dec    esp
  403f52:	add    BYTE PTR [ebx+0xcf7383],ah
  403f58:	cli    
  403f59:	int3   
  403f5a:	cmp    edi,0x6a
  403f5d:	jno    0x403f18
  403f5f:	cmp    edi,0xffffff9b
  403f62:	jmp    DWORD PTR [ecx]
  403f64:	and    DWORD PTR [edx-0x76],0x0
  403f68:	jecxz  0x403f69
  403f6a:	add    DWORD PTR [ebx-0xd0f518],0x0
  403f71:	rol    DWORD PTR [eax],1
  403f73:	adc    bh,bh
  403f75:	leave  
  403f76:	mov    esi,0x83ff9d00
  403f7b:	dec    DWORD PTR [esi+edx*4-0x37]
  403f7f:	mov    DWORD PTR [eax],eax
  403f81:	mov    ecx,0x14ff1700
  403f86:	pusha  
  403f87:	add    BYTE PTR [edi-0x42000100],ch
  403f8d:	sti    
  403f8e:	jno    0x403f90
  403f90:	inc    DWORD PTR [eax-0x12330f01]
  403f96:	xchg   BYTE PTR [eax],al
  403f98:	out    0x83,al
  403f9a:	add    bh,bh
  403f9c:	pop    ds
  403f9d:	jp     0x404005
  403f9f:	(bad)  
  403fa0:	jmp    DWORD PTR [ecx]
  403fa2:	mov    DWORD PTR [eax+eax*1],edx
  403fa5:	jbe    0x403f56
  403fa7:	add    BYTE PTR [edx-0x7d],bh
  403faa:	(bad)  
  403fab:	call   DWORD PTR [ebx]
  403fad:	(bad)  
  403fae:	cwde   
  403faf:	(bad)  
  403fb0:	inc    DWORD PTR [ebp+0x38ff3dff]
  403fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fb7:	add    cl,bh
  403fb9:	inc    DWORD PTR [ebx+0x624ebf00]
  403fbf:	add    bh,bh
  403fc1:	in     al,0x0
  403fc3:	clc    
  403fc4:	int3   
  403fc5:	jp     0x40402a
  403fc7:	(bad)  
  403fc8:	(bad)  
  403fca:	add    DWORD PTR [eax],0x41
  403fcd:	ror    BYTE PTR [ecx],1
  403fcf:	add    bh,bh
  403fd1:	cmp    al,0xff
  403fd3:	mov    bh,bh
  403fd5:	mov    al,ds:0x83bf009f
  403fda:	cmp    edi,0xffffff97
  403fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fde:	mov    bh,0x0
  403fe0:	(bad)  
  403fe1:	out    dx,al
  403fe2:	inc    esp
  403fe4:	jmp    DWORD PTR [esp+edx*2-0x7d]
  403fe8:	jmp    0xfca3eed
  403fed:	lods   al,BYTE PTR ds:[esi]
  403fee:	cmp    edi,0x33898500
  403ff4:	xor    eax,0x2b
  403ff7:	sub    DWORD PTR [ebx-0x1],0xffffffff
  403ffb:	(bad)  
  403ffc:	frstor [edi+eiz*4+0x90ffff]
  404003:	imul   eax,DWORD PTR [eax],0x83b989
  404009:	inc    DWORD PTR [eax]
  40400b:	jmp    FWORD PTR [ecx+0xceac]
  404011:	mov    ds:0x3183a1ff,eax
  404016:	inc    DWORD PTR es:[ecx-0x1]
  40401a:	or     esp,0x1d
  40401d:	mov    BYTE PTR [esi-0x1],0xff
  404021:	outs   dx,DWORD PTR ds:[esi]
  404022:	add    BYTE PTR ds:0x9e3ff,dh
  404028:	outs   dx,BYTE PTR ds:[esi]
  404029:	inc    DWORD PTR [ebx+0x25c10ff]
  40402f:	int3   
  404030:	add    cl,ah
  404032:	call   esi
  404034:	jmp    DWORD PTR [ebx+ebp*8]
  404037:	jmp    DWORD PTR [ebx]
  404039:	add    bh,bh
  40403b:	mov    ebp,edi
  40403d:	popf   
  40403e:	fcos   
  404040:	sub    DWORD PTR [esi-0x4d009000],0xffffffd0
  404047:	int3   
  404048:	std    
  404049:	(bad)  
  40404a:	(bad)  
  40404b:	call   ebp
  40404d:	and    BYTE PTR [edx],bh
  40404f:	inc    DWORD PTR [ebx-0xe200a4]
  404055:	ja     0x4040d5
  404057:	int3   
  404058:	xor    eax,DWORD PTR [eax]
  40405a:	inc    DWORD PTR [eax]
  40405c:	pop    ss
  40405d:	repnz jecxz 0x404060
  404060:	or     DWORD PTR [edi+edi*8-0x6a237c82],0xffffff83
  404068:	or     eax,0x82ffff89
  40406d:	jnp    0x40405c
  40406f:	add    BYTE PTR [ebx-0x33ecff6e],al
  404075:	ins    DWORD PTR es:[edi],dx
  404076:	cdq    
  404077:	call   FWORD PTR [ebx+eax*4-0x21c80100]
  40407e:	data16 int3 
  404080:	add    BYTE PTR [edi+0x0],bl
  404083:	dec    esi
  404084:	add    cl,ah
  404086:	imul   eax,DWORD PTR [eax],0xfffffff2
  404089:	add    ah,cl
  40408b:	add    BYTE PTR [ebx-0x4e],ch
  40408e:	scas   eax,DWORD PTR es:[edi]
  40408f:	add    BYTE PTR [eax],al
  404091:	jb     0x404092
  404093:	and    al,0xff
  404095:	cdq    
  404096:	jge    0x404064
  404098:	push   0xffffffff
  40409a:	add    bh,bh
  40409c:	jl     0x4040e3
  40409e:	mov    edi,0xbd00ff
  4040a3:	pop    esi
  4040a4:	inc    ebx
  4040a6:	fld    DWORD PTR [eax]
  4040a8:	pop    edi
  4040a9:	mov    edi,edi
  4040ab:	int3   
  4040ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ad:	int    0x73
  4040af:	inc    DWORD PTR [eax]
  4040b1:	adc    bh,bh
  4040b3:	mov    ecx,0x83ed4a89
  4040b8:	jbe    0x4040b9
  4040ba:	(bad)  
  4040bb:	jmp    edi
  4040bd:	or     DWORD PTR [ecx+0x1dffcc],esp
  4040c3:	mov    ?,edi
  4040c5:	and    eax,0xedffa9
  4040ca:	inc    DWORD PTR [eax]
  4040cc:	test   DWORD PTR [eax+0x3aff0033],esp
  4040d2:	push   eax
  4040d4:	mov    DWORD PTR [edx],ecx
  4040d6:	dec    esp
  4040d8:	fs add bh,bh
  4040db:	add    BYTE PTR ds:0xffffd893,bh
  4040e1:	push   0xffffffff
  4040e3:	mov    ebp,0xffa18300
  4040e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040e9:	(bad)  
  4040ea:	dec    esp
  4040ec:	jecxz  0x404151
  4040ee:	es (bad) 
  4040f0:	push   esp
  4040f2:	call   edi
  4040f4:	xor    DWORD PTR [eax+0x58ffe1],0xffffff89
  4040fb:	sub    esi,0x44
  4040fe:	sbb    eax,DWORD PTR [eax]
  404100:	add    BYTE PTR [edi-0x1],bh
  404103:	lea    eax,[eax]
  404105:	mov    ds:0x8300e1,eax
  40410a:	inc    DWORD PTR [eax]
  40410c:	in     eax,dx
  40410d:	dec    ecx
  40410e:	test   eax,0xccd8cc00
  404113:	ds int3 
  404115:	pop    edx
  404116:	(bad)  
  404117:	jmp    FWORD PTR [eax-0x1]
  40411a:	(bad)  
  40411b:	dec    DWORD PTR [ebp-0x9]
  40411e:	inc    ebp
  40411f:	(bad)  
  404120:	jmp    FWORD PTR [ecx]
  404122:	add    BYTE PTR [ebp+0x0],bh
  404125:	adc    al,0xd3
  404127:	jmp    FWORD PTR ds:0xffffff89
  40412d:	out    dx,al
  40412e:	jne    0x40412f
  404130:	add    dl,dl
  404132:	add    BYTE PTR [ebx+eax*4-0x5200169d],ch
  404139:	add    DWORD PTR [eax],0xffffffff
  40413c:	jle    0x4040fb
  40413e:	mov    edi,edi
  404140:	jmp    DWORD PTR [edi-0x7d]
  404143:	ret    
  404144:	call   DWORD PTR [eax-0x2500d4]
  40414a:	mov    edi,edi
  40414c:	mov    ecx,0x8929dc
  404151:	push   ebx
  404152:	call   FWORD PTR [edx]
  404154:	add    dl,dh
  404156:	cmp    eax,DWORD PTR [eax]
  404158:	pop    ecx
  404159:	add    BYTE PTR [eax],al
  40415b:	jmp    FWORD PTR [ebp-0x33ff7d8e]
  404161:	retf   0xeb00
  404164:	sbb    ebx,0x48
  404167:	(bad)  
  404168:	cmp    bh,bh
  40416a:	add    BYTE PTR [ebx-0x4bad83],al
  404170:	add    BYTE PTR [edi],bh
  404172:	(bad)  
  404173:	fisttp DWORD PTR [ecx+0x7983a994]
  404179:	inc    DWORD PTR [eax]
  40417b:	add    ch,bl
  40417d:	sbb    ah,BYTE PTR [ecx+0x0]
  404180:	add    dl,dl
  404182:	add    BYTE PTR [edi],bh
  404184:	push   DWORD PTR [edi-0x9e769b]
  40418a:	add    BYTE PTR [ecx+0xd42529],cl
  404190:	jmp    DWORD PTR [edi+0x0]
  404193:	cdq    
  404194:	adc    DWORD PTR [ebp-0x34],0x0
  404198:	push   eax
  404199:	add    bh,bh
  40419b:	adc    DWORD PTR [esi-0x61],0x48
  40419f:	add    DWORD PTR [eax],0xffffffc1
  4041a2:	call   DWORD PTR [ebp+0x0]
  4041a5:	aad    0x2f
  4041a7:	(bad)  
  4041a8:	jmp    0xf74f:0xf500ffff
  4041af:	inc    DWORD PTR [ebx-0x42ff52]
  4041b5:	fucomi st,st(2)
  4041b7:	call   DWORD PTR [esi-0x1]
  4041ba:	int3   
  4041bb:	add    BYTE PTR [eax-0x35],dl
  4041be:	xor    ecx,DWORD PTR [ecx-0x46ff7434]
  4041c4:	add    BYTE PTR [ebp+eax*4+0x0],ah
  4041c8:	idiv   bh
  4041ca:	inc    DWORD PTR [eax]
  4041cc:	pop    ecx
  4041cd:	and    ebx,DWORD PTR [ebp-0x700100]
  4041d3:	sbb    al,0x0
  4041d5:	push   ds
  4041d6:	std    
  4041d7:	add    BYTE PTR [edx-0xf76ff01],ah
  4041dd:	cmp    dh,ch
  4041df:	(bad)  
  4041e0:	jmp    DWORD PTR [eax-0x7d]
  4041e3:	xor    eax,0x89199aff
  4041e8:	jp     0x4041e9
  4041ea:	dec    DWORD PTR [ecx-0x124773]
  4041f0:	call   DWORD PTR [esi+0x4aff10ff]
  4041f6:	mov    bh,bh
  4041f8:	or     eax,0x2d890000
  4041fd:	stos   DWORD PTR es:[edi],eax
  4041fe:	inc    WORD PTR [ebx-0xd5ffe2]
  404205:	mov    ch,BYTE PTR [edx]
  404207:	add    BYTE PTR [edx+0x6789ffcc],al
  40420d:	sub    al,0x39
  40420f:	inc    DWORD PTR [ebx-0x730000]
  404215:	aad    0xb
  404217:	add    BYTE PTR [eax+eax*1-0x1],ch
  40421b:	add    BYTE PTR [ecx+0x44],bl
  40421e:	adc    bh,bh
  404220:	add    BYTE PTR [ebp+0x2bfff7ff],bl
  404226:	idiv   bh
  404228:	push   ecx
  404229:	add    bh,bh
  40422b:	push   DWORD PTR [eax-0x7cffecf3]
  404231:	and    BYTE PTR [eax],al
  404233:	jno    0x404234
  404235:	push   cs
  404236:	adc    al,BYTE PTR [eax]
  404238:	adc    BYTE PTR [eax],al
  40423a:	mov    edi,edi
  40423c:	adc    eax,0x83ccda37
  404241:	daa    
  404242:	jmp    FWORD PTR [ecx]
  404244:	add    BYTE PTR [ecx],dl
  404246:	mov    eax,0xffd200
  40424b:	call   DWORD PTR [ecx]
  40424d:	push   0x64ffff5c
  404252:	cmp    DWORD PTR [esi-0xacab01],0xffffffe1
  404259:	inc    DWORD PTR [eax]
  40425b:	add    BYTE PTR [edx+eiz*4],bl
  40425e:	sar    bh,0x0
  404261:	stos   BYTE PTR es:[edi],al
  404262:	add    BYTE PTR [edx],bl
  404264:	(bad)  
  404265:	fsub   DWORD PTR [esi-0x7c008077]
  40426b:	int3   
  40426c:	mov    esi,0xcd63
  404271:	in     al,dx
  404272:	sub    esi,0xffffffff
  404275:	push   0xffffffbb
  404277:	add    BYTE PTR [eax-0x36330100],cl
  40427d:	mov    bl,cl
  40427f:	cmp    edi,0xffffffef
  404282:	jmp    FWORD PTR [edi+0xc628ff]
  404288:	(bad)  
  40428a:	cmp    edi,0xffffff89
  40428d:	pop    eax
  40428e:	(bad)  
  404291:	xor    DWORD PTR [eax],eax
  404293:	repz add DWORD PTR ds:0xff9c0022,0x0
  40429b:	push   DWORD PTR [edx-0x1e]
  40429e:	idiv   bh
  4042a0:	(bad)  
  4042a1:	fld    DWORD PTR [eax]
  4042a3:	mov    bl,0xff
  4042a5:	mov    esi,0xff14cc67
  4042aa:	(bad)  
  4042ab:	(bad)  
  4042ac:	fimul  DWORD PTR [ecx+0x69]
  4042af:	int3   
  4042b0:	push   DWORD PTR [edi]
  4042b2:	int3   
  4042b3:	or     eax,0x6fc300
  4042b8:	jg     0x40423d
  4042ba:	inc    DWORD PTR [ebx+0x64b248]
  4042c0:	add    BYTE PTR [edi-0x1d7c3d01],dl
  4042c6:	loope  0x4042c7
  4042c8:	pop    eax
  4042c9:	(bad)  
  4042ca:	inc    DWORD PTR [eax]
  4042cc:	dec    ebp
  4042cd:	cmp    bh,BYTE PTR [ebx+eax*4]
  4042d0:	int3   
  4042d1:	repnz int3 
  4042d3:	(bad)  
  4042d4:	(bad)  
  4042d5:	jmp    0x8300:0xff2400c7
  4042dc:	mov    ebp,0xff00df10
  4042e1:	inc    esi
  4042e2:	add    BYTE PTR [esi],cl
  4042e4:	mov    DWORD PTR [edx],ebx
  4042e6:	pop    ebx
  4042e7:	jmp    DWORD PTR [edi-0x7d00ff7d]
  4042ed:	xor    al,0xfd
  4042ef:	(bad)  
  4042f0:	dec    DWORD PTR [esi]
  4042f2:	inc    DWORD PTR [edi+edi*8-0x42]
  4042f6:	and    cl,ah
  4042f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042f9:	mov    edi,edi
  4042fb:	push   edi
  4042fd:	ret    
  4042fe:	and    eax,0xcc89ffff
  404303:	sahf   
  404304:	call   FWORD PTR [esi+0x3c]
  404307:	add    BYTE PTR [edi+0x0],ch
  40430a:	add    BYTE PTR [ebx-0x80e6bb],al
  404310:	int3   
  404311:	xor    al,0x0
  404313:	inc    esp
  404314:	call   DWORD PTR [ebp+0xf383e4]
  40431a:	add    DWORD PTR [eax],0xffffffb4
  40431d:	out    dx,al
  40431e:	xor    edi,edi
  404320:	add    BYTE PTR [edi],ah
  404322:	add    cl,dh
  404324:	jmp    DWORD PTR [eax-0x7cd300e9]
  40432a:	add    BYTE PTR [eax],al
  40432c:	mov    cl,0xe8
  40432e:	lock int3 
  404330:	add    BYTE PTR [eax+eax*1-0x5886ff16],ah
  404337:	dec    DWORD PTR [ecx+0x0]
  40433a:	(bad)  
  40433b:	(bad)  
  40433c:	mov    edi,0xccff19d9
  404341:	mov    ds:0x51002683,eax
  404346:	js     0x4042cb
  404348:	jl     0x40434a
  40434a:	add    BYTE PTR [eax],al
  40434c:	stos   DWORD PTR es:[edi],eax
  40434d:	add    eax,DWORD PTR [ebx+0x1accff]
  404353:	adc    BYTE PTR [eax],al
  404355:	dec    edi
  404356:	jb     0x404358
  404358:	mov    ds:0x578300ff,eax
  40435d:	pushf  
  40435e:	(bad)  
  404360:	add    BYTE PTR [edi-0x1],ah
  404363:	cmp    al,BYTE PTR [ebx-0x4800c274]
  404369:	add    BYTE PTR [ebx+0x74f368cc],al
  40436f:	int3   
  404370:	add    BYTE PTR [eax],dl
  404372:	int3   
  404373:	push   ds
  404374:	dec    eax
  404376:	scas   al,BYTE PTR es:[edi]
  404377:	int3   
  404378:	xor    bh,bh
  40437a:	inc    DWORD PTR [ebx-0x33a12a9f]
  404380:	add    DWORD PTR [ebx+0x5eccf783],0xffffff90
  404387:	xor    DWORD PTR [edi+edi*8+0x6f6bff89],0xfffffffa
  40438f:	(bad)  
  404390:	dec    esi
  404392:	add    ch,bl
  404394:	call   FWORD PTR [ebp+0x73]
  404397:	add    BYTE PTR ds:0x28830083,bh
  40439d:	xor    ebp,DWORD PTR [edx-0x7d]
  4043a0:	add    BYTE PTR [esi],ch
  4043a2:	int3   
  4043a3:	loope  0x40432e
  4043a5:	mov    al,0x3d
  4043a7:	mov    DWORD PTR [esi+0x6dccffff],ebp
  4043ad:	jecxz  0x40436c
  4043af:	add    BYTE PTR [ebx-0x1c7c99],al
  4043b5:	push   cs
  4043b6:	ja     0x4043b8
  4043b8:	aas    
  4043b9:	inc    DWORD PTR [eax]
  4043bb:	add    BYTE PTR [eax-0x2598],dh
  4043c1:	cmc    
  4043c2:	add    BYTE PTR [ebp+0xc35d83],dl
  4043c8:	xor    al,0xff
  4043ca:	add    BYTE PTR [eax],al
  4043cc:	adc    esi,esp
  4043ce:	clc    
  4043cf:	add    BYTE PTR [ecx-0x7cb6ffc8],cl
  4043d5:	mov    edi,cr7
  4043d8:	jne    0x4043d9
  4043da:	dec    esp
  4043dc:	call   0xffc9c844
  4043e1:	adc    BYTE PTR [eax],al
  4043e3:	daa    
  4043e4:	(bad)  
  4043e5:	fld    TBYTE PTR [esi+0xffe383]
  4043eb:	add    BYTE PTR [ecx-0x3333089f],cl
  4043f1:	add    BYTE PTR ss:[edi],bl
  4043f4:	sbb    DWORD PTR [edx],0xf
  4043f7:	call   edx
  4043f9:	(bad)  
  4043fa:	inc    DWORD PTR [eax]
  4043fc:	sbb    eax,0xffff39c7
  404401:	and    al,BYTE PTR [ebx+0x13570081]
  404407:	cmp    DWORD PTR [ebp-0x34],0xffffffff
  40440b:	add    esi,0x42
  40440e:	and    bh,bh
  404410:	add    BYTE PTR [edi-0x7d],dh
  404413:	je     0x404414
  404415:	xrelease mov DWORD PTR [ecx-0xffff87],ecx
  40441c:	mov    ebx,0xff892eb9
  404421:	in     al,0xff
  404423:	out    dx,eax
  404424:	add    al,cl
  404426:	cwde   
  404427:	xor    DWORD PTR [edx+0x45838900],0x3e
  40442e:	inc    ecx
  40442f:	(bad)  
  404430:	dec    DWORD PTR [eax-0x77]
  404433:	iret   
  404434:	add    BYTE PTR [esi-0x76fa3314],ah
  40443a:	(bad)  
  40443b:	call   DWORD PTR [ebp-0xbcaa]
  404441:	call   0x1b40db46
  404446:	jle    0x404447
  404448:	add    BYTE PTR [eax],0x83
  40444b:	call   FWORD PTR [eiz*1-0x10ff002c]
  404452:	mov    DWORD PTR ds:0xfc00,ebx
  404458:	lods   al,BYTE PTR ds:[esi]
  404459:	add    BYTE PTR [ebx+0x675ff00],al
  40445f:	(bad)  
  404460:	push   DWORD PTR [edi-0x1e004c00]
  404466:	pop    edi
  404467:	add    dh,dl
  404469:	add    bh,bh
  40446b:	int3   
  40446c:	dec    ecx
  40446d:	xlat   BYTE PTR ds:[ebx]
  40446e:	xchg   ebp,eax
  40446f:	(bad)  
  404470:	(bad)  
  404471:	jl     0x4043fc
  404473:	nop
  404474:	and    DWORD PTR [ecx],0xffffffee
  404477:	call   DWORD PTR [edi-0x2200ff01]
  40447d:	ins    DWORD PTR es:[edi],dx
  40447e:	mov    eax,ds:0xff5c00ff
  404483:	ds (bad) 
  404485:	fisttp WORD PTR [ecx-0x1]
  404488:	fcos   
  40448a:	add    DWORD PTR [ebx+0x4658e1],0x0
  404491:	ins    DWORD PTR es:[edi],dx
  404492:	(bad)  
  404493:	(bad)  [ecx-0x4b7cce6c]
  404499:	inc    DWORD PTR [eax]
  40449b:	call   DWORD PTR [ebp-0x49]
  40449e:	sub    bh,bh
  4044a0:	add    BYTE PTR [ebx-0x1],cl
  4044a3:	data16 add BYTE PTR [esi],ch
  4044a6:	rol    BYTE PTR [eax],1
  4044a8:	cmp    bh,0x0
  4044ab:	xor    DWORD PTR [ecx+ebx*8],0xd
  4044af:	mov    edi,edi
  4044b1:	inc    esp
  4044b2:	xor    ebx,0xffffff83
  4044b5:	jl     0x40452a
  4044b7:	call   FWORD PTR [eax+0x0]
  4044ba:	(bad)  
  4044bb:	dec    DWORD PTR [ecx-0x3240]
  4044c1:	jecxz  0x4044c2
  4044c3:	sbb    edi,edi
  4044c5:	out    dx,eax
  4044c6:	bound  eax,QWORD PTR [ebx-0x7c0048]
  4044cc:	xor    eax,0xff269c
  4044d1:	dec    esp
  4044d2:	call   DWORD PTR [esi-0x1]
  4044d5:	sti    
  4044d6:	xor    eax,0xccff19ff
  4044db:	call   FWORD PTR [ecx]
  4044dd:	mov    ds:0x9fffffb9,eax
  4044e2:	jmp    FWORD PTR [ecx]
  4044e4:	jmp    DWORD PTR [edi-0x77]
  4044e7:	call   DWORD PTR [edi]
  4044e9:	add    bh,bh
  4044eb:	sbb    DWORD PTR [ebp+0x25],0x1b
  4044ef:	inc    DWORD PTR [eax]
  4044f1:	sbb    ah,cl
  4044f3:	sub    bh,bh
  4044f5:	and    DWORD PTR [esi],edx
  4044f7:	and    DWORD PTR [ebx+eax*4-0xa3e3334],0xffffffb3
  4044ff:	inc    DWORD PTR [eax]
  404501:	jle    0x404486
  404503:	inc    esi
  404504:	add    BYTE PTR [edi],dh
  404506:	pop    esp
  404507:	add    BYTE PTR [ecx],bh
  404509:	(bad)  
  40450a:	(bad)  
  40450b:	inc    edx
  40450d:	retf   
  40450e:	int3   
  40450f:	dec    DWORD PTR [ecx-0xeb00f6]
  404515:	lea    eax,[esi+0x83c4ff]
  40451b:	mov    DWORD PTR [ebp-0x4d],ebp
  40451e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451f:	add    DWORD PTR [ebx+0xdb00f5],0xffffffd5
  404526:	cmp    edi,edi
  404528:	mov    eax,DWORD PTR [eax]
  40452a:	add    BYTE PTR [ecx-0xdfd63d],cl
  404530:	(bad)  
  404531:	in     al,dx
  404532:	add    BYTE PTR [eax-0x7d],ch
  404535:	push   cs
  404536:	pop    ds
  404537:	int3   
  404538:	repz add BYTE PTR [eax],al
  40453b:	mov    ebp,ebx
  40453d:	or     eax,0x6a008342
  404542:	mov    DWORD PTR [ebx-0x7c231001],edi
  404548:	adc    al,BYTE PTR [eax]
  40454a:	add    DWORD PTR [eax],0x59
  40454d:	cwde   
  40454e:	sub    eax,DWORD PTR [ebx+0x51001dcc]
  404554:	dec    DWORD PTR [esi-0x53]
  404557:	add    BYTE PTR [ebx-0x9760100],al
  40455d:	add    al,0x71
  40455f:	(bad)  
  404560:	(bad)  
  404561:	jle    0x4044ec
  404563:	mov    DWORD PTR gs:[edi-0x20],esi
  404567:	(bad)  
  404568:	(bad)  
  40456a:	int3   
  40456b:	add    al,dh
  40456d:	stc    
  40456e:	int3   
  40456f:	(bad)  
  404570:	jmp    FWORD PTR [ebp+0x26ff5b00]
  404576:	iret   
  404577:	call   DWORD PTR [edi+0x40ccffff]
  40457d:	dec    eax
  40457e:	inc    esi
  40457f:	(bad)  
  404580:	jmp    DWORD PTR [ecx]
  404582:	mov    DWORD PTR [ecx+0xb7d900],ecx
  404588:	fld    QWORD PTR [ebx+0x540acc00]
  40458e:	inc    DWORD PTR [ebx-0xe7c8501]
  404594:	jmp    DWORD PTR [ebp-0x1f]
  404597:	xor    DWORD PTR [esi-0x1],0xffffffff
  40459b:	or     DWORD PTR [edx],0xffffff9d
  40459e:	pusha  
  40459f:	int3   
  4045a0:	add    BYTE PTR [ebp+0x0],ch
  4045a3:	scas   al,BYTE PTR es:[edi]
  4045a4:	call   FWORD PTR [edi-0x7d]
  4045a7:	(bad)  
  4045a8:	fdivp  st(7),st
  4045aa:	int3   
  4045ab:	dec    edx
  4045ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045ae:	push   eax
  4045af:	mov    edi,edi
  4045b1:	and    eax,DWORD PTR [eax]
  4045b3:	and    ah,cl
  4045b5:	cli    
  4045b6:	imul   edi,edi,0x31
  4045b9:	cmp    edi,0xffffffff
  4045bc:	jle    0x40458e
  4045be:	pop    esi
  4045bf:	cmp    edi,0x68
  4045c2:	int3   
  4045c3:	js     0x4045c4
  4045c5:	ds dec ecx
  4045c7:	push   DWORD PTR [edx-0x50000100]
  4045cd:	scas   al,BYTE PTR es:[edi]
  4045ce:	cmp    edi,0xffffff83
  4045d1:	pop    es
  4045d2:	add    BYTE PTR [edi+edi*8+0x6fff6f40],cl
  4045d9:	inc    DWORD PTR [ebx+0xef03bff]
  4045df:	cmp    edi,0xffffffd4
  4045e2:	int3   
  4045e3:	add    bh,bh
  4045e5:	push   ds
  4045e6:	mov    eax,ds:0xffff2500
  4045eb:	(bad)  
  4045ec:	out    dx,eax
  4045ed:	lds    ebp,FWORD PTR [ecx]
  4045ef:	inc    DWORD PTR [eax]
  4045f1:	pusha  
  4045f2:	add    BYTE PTR [ecx+0x6954cc],bl
  4045f8:	icebp  
  4045f9:	int3   
  4045fa:	int3   
  4045fb:	dec    esi
  4045fd:	popf   
  4045fe:	aad    0x83
  404600:	jmp    esi
  404602:	cmp    DWORD PTR [esi+0x36d100],0x12
  404609:	dec    esp
  40460b:	add    BYTE PTR [esi+0x3f35],al
  404611:	inc    ebp
  404612:	dec    ebx
  404614:	int3   
  404615:	add    BYTE PTR [eax+0xff77cc],dl
  40461b:	call   DWORD PTR [ecx-0xd]
  40461e:	arpl   di,di
  404620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404621:	(bad)  
  404622:	inc    DWORD PTR [eax]
  404624:	add    BYTE PTR [esi],cl
  404626:	add    bh,bh
  404628:	dec    DWORD PTR [ebp-0x44c8b8fe]
  40462e:	jg     0x40462f
  404630:	jle    0x404632
  404632:	add    bh,bh
  404634:	mov    edi,edi
  404636:	(bad)  
  404637:	inc    DWORD PTR [eax]
  404639:	xchg   esi,eax
  40463a:	out    dx,al
  40463b:	sbb    BYTE PTR [ecx+0x7],cl
  40463e:	test   BYTE PTR [ecx+0xffffb7],cl
  404644:	jmp    DWORD PTR [edi]
  404646:	inc    DWORD PTR [eax]
  404648:	mov    DWORD PTR [ebx-0x5b5c7bed],eax
  40464e:	iret   
  40464f:	add    BYTE PTR [esp+ecx*8],bl
  404652:	(bad)  
  404653:	dec    DWORD PTR [ecx-0xc4]
  404659:	ror    DWORD PTR [esi+0x6493dd21],0xff
  404660:	retf   
  404661:	add    BYTE PTR [eax],al
  404663:	add    bh,bh
  404665:	in     al,0x83
  404667:	add    BYTE PTR [ebx+0x1b4b44e0],al
  40466d:	jmp    0x8300:0x6d00f6
  404674:	add    BYTE PTR [ebx-0x1],bh
  404677:	add    bh,bh
  404679:	adc    ah,BYTE PTR [esi-0x5d7c4c7a]
  40467f:	or     DWORD PTR [edi],0xffffffff
  404682:	cmp    edi,0xffffffff
  404685:	xor    bh,bh
  404687:	dec    DWORD PTR [ecx+0x5d4b1e97]
  40468d:	jmp    0x89cc:0xff798937
  404694:	add    ch,dh
  404696:	mov    edi,edi
  404698:	inc    edi
  40469a:	test   DWORD PTR [ebx],esi
  40469c:	and    al,0x27
  40469e:	sbb    BYTE PTR [ecx+0x8345],cl
  4046a4:	jmp    DWORD PTR [edi]
  4046a6:	inc    DWORD PTR [ebx-0x60dd8800]
  4046ac:	mov    cl,0x89
  4046ae:	or     eax,0x83005d00
  4046b3:	int3   
  4046b4:	jmp    FWORD PTR [ebp-0x34]
  4046b7:	inc    DWORD PTR [eax]
  4046b9:	out    dx,al
  4046ba:	adc    BYTE PTR [edi+0x25],cl
  4046bd:	add    bh,BYTE PTR [eax]
  4046bf:	call   edx
  4046c1:	dec    esp
  4046c3:	add    bh,bh
  4046c5:	cdq    
  4046c6:	(bad)  
  4046c7:	inc    DWORD PTR [eax]
  4046c9:	je     0x40467b
  4046cb:	dec    esp
  4046cc:	cmp    ah,BYTE PTR ds:0xcc2a832a
  4046d2:	add    BYTE PTR [ebx-0x7c00e600],al
  4046d8:	add    bh,dl
  4046da:	scas   eax,DWORD PTR es:[edi]
  4046db:	out    dx,eax
  4046dc:	arpl   WORD PTR [esp+edx*4-0x1],dx
  4046e0:	daa    
  4046e1:	add    BYTE PTR [ebx-0x7c340001],al
  4046e7:	(bad)  
  4046e8:	dec    edi
  4046ea:	cmp    dh,BYTE PTR [ecx+0x5f]
  4046ed:	adc    esp,edx
  4046ef:	add    bl,bl
  4046f1:	inc    DWORD PTR [eax]
  4046f3:	inc    DWORD PTR [eax]
  4046f5:	in     al,0xff
  4046f7:	inc    DWORD PTR [ebx+0xf8f2661]
  4046fd:	rol    BYTE PTR [ebx-0xa801],cl
  404703:	inc    DWORD PTR [eax]
  404705:	pop    edi
  404706:	inc    DWORD PTR [eax]
  404708:	add    bl,dl
  40470a:	push   edx
  40470b:	push   eax
  40470c:	out    dx,eax
  40470d:	or     BYTE PTR [esi-0x1],bh
  404710:	jmp    0xe3:0xffffffff
  404717:	int3   
  404718:	add    cl,dh
  40471a:	pop    edx
  40471b:	push   0xff27021b
  404720:	js     0x4046ee
  404722:	add    BYTE PTR [ebx-0x33003e01],al
  404728:	inc    ebp
  40472a:	(bad)  
  40472b:	data16 in al,dx
  40472d:	test   eax,0xff4cff37
  404732:	cmp    edi,0xffffff83
  404735:	sbb    bh,bh
  404737:	int3   
  404738:	add    dh,ch
  40473a:	jbe    0x404782
  40473c:	int3   
  40473d:	test   BYTE PTR [esi],dl
  40473f:	add    BYTE PTR [edx],dh
  404741:	add    BYTE PTR [eax],al
  404743:	add    BYTE PTR [eax],al
  404745:	mov    dl,0x83
  404747:	int3   
  404748:	add    al,cl
  40474a:	stos   DWORD PTR es:[edi],eax
  40474b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40474d:	rol    BYTE PTR [ebp+0x0],cl
  404750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404751:	(bad)  
  404752:	inc    DWORD PTR [ebx+0xcc4d83]
  404758:	add    BYTE PTR [eax],dl
  40475a:	enter  0x79b4,0x17
  40475e:	pop    edi
  40475f:	add    BYTE PTR [ebp-0x1],dl
  404762:	add    bh,bh
  404764:	jmp    FWORD PTR [eax-0x7d]
  404767:	add    bh,bh
  404769:	fidiv  DWORD PTR [edx+0x7f]
  40476c:	pop    ds
  40476d:	hlt    
  40476e:	aad    0x0
  404770:	icebp  
  404771:	(bad)  
  404772:	(bad)  
  404773:	inc    DWORD PTR [ebx-0x3300ff41]
  404779:	inc    edx
  40477a:	sub    eax,0x15089c58
  40477f:	sub    DWORD PTR [eax+0x0],0xffffffff
  404783:	or     DWORD PTR [ecx+0xcc8343],0x32
  40478a:	adc    al,0xa3
  40478c:	mov    edx,0x58ff59d2
  404791:	add    BYTE PTR [eax],al
  404793:	(bad)  
  404794:	call   FWORD PTR [edi-0x6200ff01]
  40479a:	pop    ecx
  40479b:	xchg   esp,eax
  40479c:	pusha  
  40479d:	mov    WORD PTR [ecx+0x0],?
  4047a0:	and    bh,bh
  4047a2:	add    ah,cl
  4047a4:	add    BYTE PTR ds:0x210089ff,cl
  4047aa:	adc    eax,0x55da305a
  4047af:	add    dl,al
  4047b1:	(bad)  
  4047b2:	inc    DWORD PTR [eax]
  4047b4:	add    BYTE PTR [ecx-0x59ff0100],dl
  4047ba:	shr    dl,0x2c
  4047bd:	push   esp
  4047be:	jne    0x4047c0
  4047c0:	xchg   edi,eax
  4047c1:	int3   
  4047c2:	add    bh,bh
  4047c4:	add    BYTE PTR [ebx-0x1],ch
  4047c7:	add    BYTE PTR [eax],al
  4047c9:	out    0x20,al
  4047cb:	xlat   BYTE PTR ds:[ebx]
  4047cc:	popf   
  4047cd:	not    DWORD PTR [ecx]
  4047cf:	dec    DWORD PTR [edi+edi*8-0x3f00ff7d]
  4047d6:	inc    DWORD PTR [ebx+0x126361cc]
  4047dc:	xchg   ebx,eax
  4047dd:	mov    eax,0xff97ff5c
  4047e2:	(bad)  
  4047e3:	(bad)  
  4047e4:	(bad)  
  4047e5:	fld    QWORD PTR [eax]
  4047e7:	add    BYTE PTR [eax],al
  4047e9:	mov    eax,0x754cb29e
  4047ee:	ins    BYTE PTR es:[edi],dx
  4047ef:	add    BYTE PTR [edi-0x7c0001],al
  4047f5:	xchg   edi,eax
  4047f6:	add    BYTE PTR [ebx-0x790ff300],al
  4047fc:	add    ah,BYTE PTR [edi+0xf]
  4047ff:	jmp    FWORD PTR [ecx-0x7c0001]
  404805:	sti    
  404806:	int3   
  404807:	(bad)  
  404808:	inc    DWORD PTR [ecx+0x66]
  40480b:	mov    dh,0xc1
  40480d:	fimul  WORD PTR [ebx]
  40480f:	int3   
  404810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404811:	add    ah,cl
  404813:	int3   
  404814:	xor    DWORD PTR [ebp+0x62ff83cc],0x2f
  40481b:	add    BYTE PTR [edx+0x23ffe841],al
  404821:	add    BYTE PTR [ecx-0x220034],cl
  404827:	add    BYTE PTR [eax],al
  404829:	mov    edi,0xad4285c7
  40482e:	sbb    eax,0xff830900
  404833:	cmp    edi,0xffffffdd
  404836:	add    DWORD PTR [eax],0xffffffff
  404839:	cs dec eax
  40483b:	(bad)  
  40483c:	enter  0x2520,0xff
  404840:	pop    es
  404841:	inc    DWORD PTR [eax]
  404843:	dec    esp
  404845:	scas   eax,DWORD PTR es:[edi]
  404846:	mov    edi,edi
  404848:	add    BYTE PTR [esi+0x3e],dl
  40484b:	mov    ah,BYTE PTR [ebx+0xe]
  40484e:	cmp    bh,bh
  404850:	idiv   bh
  404852:	add    BYTE PTR [eax],al
  404854:	inc    DWORD PTR [eax-0xe000100]
  40485a:	iret   
  40485b:	nop
  40485c:	xchg   edi,eax
  40485d:	loope  0x404815
  40485f:	mov    DWORD PTR [edi+edi*8-0x32ff0100],ebx
  404866:	(bad)  
  404867:	inc    DWORD PTR [ebx-0x1b370e0d]
  40486d:	and    eax,0xffd889f5
  404872:	inc    DWORD PTR [eax]
  404874:	xor    esi,0xffffffff
  404877:	(bad)  
  404878:	call   FWORD PTR [esi-0x16db490a]
  40487e:	jno    0x404803
  404880:	pop    ebp
  404881:	cmp    edi,0xffffffff
  404884:	add    BYTE PTR [edi],al
  404886:	(bad)  
  404887:	inc    DWORD PTR [eax]
  404889:	or     BYTE PTR [ebx+0x7419d45a],0x89
  404890:	loopne 0x404891
  404892:	(bad)  
  404893:	(bad)  
  404894:	call   FWORD PTR [ebp+0x5aff8300]
  40489a:	mov    ah,0x17
  40489c:	cli    
  40489d:	pop    ebp
  40489e:	iret   
  40489f:	int3   
  4048a0:	add    BYTE PTR [ebx-0xc000000],al
  4048a6:	add    BYTE PTR [eax],al
  4048a8:	sub    DWORD PTR [edi+edi*8-0x7e],0x0
  4048ad:	ss sbb esp,ecx
  4048b0:	xchg   ecx,eax
  4048b1:	(bad)  
  4048b2:	dec    esp
  4048b4:	mov    DWORD PTR [ebx+eax*4],ebx
  4048b7:	add    bh,bh
  4048b9:	lods   eax,DWORD PTR ds:[esi]
  4048ba:	jne    0x40484c
  4048bc:	xchg   edi,eax
  4048bd:	ja     0x404911
  4048bf:	sbb    DWORD PTR [ecx-0x1],0xffffffff
  4048c3:	add    bh,bh
  4048c5:	sub    eax,0xe900ccff
  4048ca:	nop
  4048cb:	stos   DWORD PTR es:[edi],eax
  4048cc:	stos   DWORD PTR es:[edi],eax
  4048cd:	pmulhw mm7,mm7
  4048d0:	test   DWORD PTR [eax],eax
  4048d2:	add    BYTE PTR [eax],al
  4048d4:	push   DWORD PTR [ecx-0x34]
  4048d7:	add    bh,bh
  4048d9:	cld    
  4048da:	ss mov gs,ebx
  4048dd:	adc    bl,BYTE PTR [ecx-0xffbb01]
  4048e3:	add    BYTE PTR [ecx+0x83ff27],cl
  4048e9:	into   
  4048ea:	stos   BYTE PTR es:[edi],al
  4048eb:	xlat   BYTE PTR ds:[ebx]
  4048ec:	sub    eax,DWORD PTR [esp+ebp*4]
  4048ef:	add    BYTE PTR [esi],ah
  4048f1:	add    DWORD PTR [eax],0xffffffcc
  4048f4:	dec    edx
  4048f6:	add    bh,bh
  4048f8:	add    BYTE PTR [ecx],ah
  4048fa:	mov    ebp,ebp
  4048fc:	nop
  4048fd:	pushf  
  4048fe:	add    al,0x0
  404900:	mov    al,0x0
  404902:	add    BYTE PTR [ebx-0x7600c600],al
  404908:	or     DWORD PTR [esi],0x12
  40490b:	repz push 0xffffffe2
  40490e:	xor    eax,0xb2ff
  404913:	inc    DWORD PTR [eax]
  404915:	jmp    0x404917
  404917:	add    DWORD PTR [eax],0xffffff95
  40491a:	clc    
  40491b:	push   edi
  40491d:	sub    al,0xd4
  40491f:	call   FWORD PTR [edi-0x7d]
  404922:	int3   
  404923:	(bad)  
  404924:	jmp    eax
  404926:	add    BYTE PTR [eax],al
  404928:	mov    ebx,esp
  40492a:	int    0xf7
  40492c:	jmp    DWORD PTR [ebp+0xd8ffc9]
  404932:	add    bh,bh
  404934:	adc    DWORD PTR [edi+0x4e000083],0xe
  40493b:	ins    BYTE PTR es:[edi],dx
  40493c:	cmp    eax,0x5affb10a
  404941:	mov    edi,edi
  404943:	(bad)  
  404944:	call   FWORD PTR [edi+edi*8+0x0]
  404948:	mov    DWORD PTR [edx],esp
  40494a:	clc    
  40494b:	idiv   DWORD PTR ds:0x48ff7fe6
  404951:	(bad)  
  404952:	inc    DWORD PTR [eax]
  404954:	or     DWORD PTR [eax-0x1],0xffffffff
  404958:	call   FWORD PTR [ebx+0x4f]
  40495b:	xchg   ebp,eax
  40495c:	mov    edx,0x4500beb3
  404961:	(bad)  
  404962:	inc    DWORD PTR [eax]
  404964:	add    BYTE PTR [edi+0x7bff00ff],ah
  40496a:	imul   esi,DWORD PTR [edi],0xccf58c2f
  404970:	in     al,0x0
  404972:	add    bh,bh
  404974:	add    BYTE PTR [eax+0x0],bl
  404977:	cmp    edi,0x26
  40497a:	xlat   BYTE PTR ds:[ebx]
  40497b:	invd   
  40497d:	mov    eax,ds:0x83bf89fb
  404982:	dec    DWORD PTR [ecx-0x76ac01]
  404988:	call   FWORD PTR [ebx+0x2739a208]
  40498e:	or     bh,bh
  404990:	pusha  
  404991:	(bad)  
  404992:	(bad)  
  404993:	inc    DWORD PTR [eax]
  404995:	(bad)  
  404996:	inc    DWORD PTR [eax]
  404998:	add    BYTE PTR [edx],dl
  40499a:	sub    eax,0x892b1df7
  40499f:	add    ah,bh
  4049a1:	(bad)  
  4049a2:	dec    esp
  4049a4:	and    ebx,0x0
  4049a7:	inc    DWORD PTR [eax]
  4049a9:	inc    edx
  4049aa:	fiadd  DWORD PTR [esi+0xe]
  4049ad:	(bad)  [esi-0x1]
  4049b0:	gs (bad) 
  4049b2:	inc    DWORD PTR [eax]
  4049b4:	add    ch,dl
  4049b6:	add    bh,bh
  4049b8:	add    dl,ch
  4049ba:	gs jno 0x404942
  4049bd:	mov    DWORD PTR [ebx-0x7c2d7d],0x831dffff
  4049c7:	(bad)  
  4049c8:	jmp    FWORD PTR ds:0xc6c8d583
  4049ce:	scas   eax,DWORD PTR es:[edi]
  4049cf:	int3   
  4049d0:	add    eax,DWORD PTR [eax]
  4049d2:	inc    DWORD PTR [ebx+0x832fff]
  4049d8:	inc    DWORD PTR [eax]
  4049da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049db:	std    
  4049dc:	sub    eax,0x77cc9d14
  4049e1:	int3   
  4049e2:	(bad)  
  4049e3:	(bad)  
  4049e4:	inc    DWORD PTR [edx+0x0]
  4049e7:	inc    DWORD PTR [eax]
  4049e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ea:	sub    BYTE PTR [edi],ah
  4049ec:	pop    edi
  4049ed:	adc    bl,BYTE PTR [ebx+0xff11ff]
  4049f3:	add    DWORD PTR [ebx-0x330033ee],0x70
  4049fa:	iret   
  4049fb:	add    ah,cl
  4049fd:	lods   eax,DWORD PTR ds:[esi]
  4049fe:	mov    es,WORD PTR [ebx-0x336f]
  404a04:	add    BYTE PTR [edi-0x1fffff34],al
  404a0a:	add    al,0x9b
  404a0c:	scas   eax,DWORD PTR es:[edi]
  404a0d:	push   eax
  404a0e:	xor    al,0x0
  404a10:	cmp    edi,0xa9ff0083
  404a16:	inc    DWORD PTR [ebx+0x532307cc]
  404a1c:	imul   ebx,DWORD PTR [ecx],0xffffff96
  404a1f:	or     DWORD PTR [ecx-0x1],0xffffff83
  404a23:	inc    DWORD PTR [eax]
  404a25:	arpl   di,di
  404a27:	dec    esp
  404a29:	imul   ecx,DWORD PTR [edx+ebp*4-0x6b],0xc
  404a2e:	call   FWORD PTR es:[ebp-0x34]
  404a35:	inc    esp
  404a36:	add    bh,bh
  404a38:	add    BYTE PTR [edi+0x5933be89],dh
  404a3e:	add    BYTE PTR [eax],0xf8
  404a41:	cmp    edi,0x0
  404a44:	adc    DWORD PTR [ebx+0x5883ff00],0xffffffae
  404a4b:	fidivr WORD PTR [eax]
  404a4d:	loopne 0x404a39
  404a4f:	adc    DWORD PTR [ecx-0x1],0xffffffb1
  404a56:	inc    DWORD PTR [eax]
  404a58:	add    BYTE PTR [edx+0x56],dh
  404a5b:	out    dx,eax
  404a5c:	push   edx
  404a5d:	add    eax,0x5dff3c
  404a62:	int3   
  404a63:	add    BYTE PTR [ebx-0xffffc5],al
  404a69:	add    al,0xc8
  404a6b:	scas   eax,DWORD PTR es:[edi]
  404a6c:	and    DWORD PTR ss:[ebx+0x0],esp
  404a70:	mov    BYTE PTR [ebx+0x5500ff00],0xff
  404a77:	add    BYTE PTR [eax],al
  404a79:	xor    eax,0xb989dff8
  404a7e:	lock mov esp,ebp
  404a81:	add    BYTE PTR [ebx-0x7c7e0100],al
  404a87:	add    BYTE PTR [eax],al
  404a89:	scas   al,BYTE PTR es:[edi]
  404a8a:	add    al,0x8d
  404a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a8d:	xor    edi,DWORD PTR [esi-0x1]
  404a90:	leave  
  404a91:	add    bh,bh
  404a93:	(bad)  
  404a94:	(bad)  
  404a95:	fmul   st(4),st
  404a97:	add    ah,cl
  404a99:	lock repz call 0x96:0x606cd1
  404aa2:	(bad)  
  404aa3:	(bad)  
  404aa4:	inc    edi
  404aa6:	add    bh,bh
  404aa8:	push   DWORD PTR [ebx+eax*8+0x32]
  404aac:	mov    ebx,ebp
  404aae:	jmp    0x404aaf
  404ab0:	cdq    
  404ab1:	cmp    edi,0x0
  404ab4:	call   FWORD PTR [esi]
  404ab6:	inc    DWORD PTR [eax]
  404ab8:	add    BYTE PTR [ecx-0x3f],ch
  404abb:	(bad)  
  404abc:	nop
  404abd:	dec    edx
  404abe:	int3   
  404abf:	add    BYTE PTR [ebx],ah
  404ac1:	dec    esp
  404ac3:	add    DWORD PTR [eax],0xffffffd3
  404ac6:	add    ah,cl
  404ac8:	(bad)  
  404ac9:	sti    
  404aca:	sub    BYTE PTR [ebx],dh
  404acc:	lods   al,BYTE PTR ds:[esi]
  404acd:	ss and eax,0xc900
  404ad3:	inc    DWORD PTR [ebx+0xccffcb]
  404ad9:	inc    ebp
  404ada:	adc    BYTE PTR [edx],bl
  404adc:	jl     0x404b46
  404ade:	test   eax,0xff004000
  404ae3:	add    BYTE PTR [ebx-0x7c0009],al
  404ae9:	das    
  404aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aeb:	sbb    al,0x3f
  404aed:	mov    BYTE PTR [ebp-0x7cd700],al
  404af3:	add    ah,cl
  404af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404af6:	(bad)  
  404af7:	inc    DWORD PTR [eax]
  404af9:	mov    BYTE PTR [esi+0x7f],dh
  404afc:	popa   
  404afd:	sahf   
  404afe:	ins    DWORD PTR es:[edi],dx
  404aff:	add    BYTE PTR [edx-0x3300ff01],dh
  404b05:	inc    ebx
  404b06:	dec    DWORD PTR [ecx-0x4f0e2601]
  404b0c:	sub    esp,DWORD PTR [ecx+esi*2]
  404b0f:	inc    DWORD PTR [ecx-0x7d]
  404b12:	inc    DWORD PTR [ebx+0xff7300]
  404b18:	add    BYTE PTR [ecx],dh
  404b1a:	in     al,dx
  404b1b:	loopne 0x404b75
  404b1d:	in     eax,0x92
  404b1f:	dec    DWORD PTR [ecx]
  404b21:	cmp    edi,0x0
  404b24:	(bad)  
  404b25:	cli    
  404b26:	dec    DWORD PTR [ecx-0x3a9e6e00]
  404b2c:	mov    ecx,0x22002393
  404b31:	int3   
  404b32:	(bad)  
  404b33:	inc    DWORD PTR [ebx+0xffff6b]
  404b39:	in     al,dx
  404b3a:	or     BYTE PTR [ecx],dl
  404b3c:	jns    0x404abf
  404b3e:	or     bh,bh
  404b40:	sar    edi,0x0
  404b43:	cmp    edi,0xffffffa5
  404b46:	inc    DWORD PTR [eax]
  404b48:	jmp    FWORD PTR [esp+esi*1]
  404b4b:	mov    bl,0xa2
  404b4d:	daa    
  404b4e:	add    al,BYTE PTR [ebx-0x76ff00c4]
  404b54:	int3   
  404b55:	mov    dh,0x0
  404b57:	inc    DWORD PTR [eax]
  404b59:	out    0x7f,al
  404b5b:	mov    DWORD PTR [edi-0x487cd1ac],ebp
  404b61:	cmp    edi,0x0
  404b64:	jmp    FWORD PTR [edi+edi*8+0x0]
  404b68:	mov    DWORD PTR [esi-0x1478b8e8],ebp
  404b6e:	dec    ecx
  404b6f:	add    ah,dh
  404b71:	mov    esp,ecx
  404b73:	add    bh,bh
  404b75:	add    edi,edi
  404b77:	add    BYTE PTR [eax],al
  404b79:	sbb    al,ch
  404b7b:	push   ds
  404b7c:	inc    eax
  404b7d:	imul   ecx,DWORD PTR [edx+0x19ff],0xffffffff
  404b84:	adc    edi,0xffffffff
  404b87:	inc    DWORD PTR [ebx-0x4cbb3b7a]
  404b8d:	jne    0x404b77
  404b8f:	add    BYTE PTR [edi-0x1],dl
  404b95:	mov    eax,ds:0xaffccff
  404b9a:	dec    ebx
  404b9b:	pop    eax
  404b9c:	lods   al,BYTE PTR ds:[esi]
  404b9d:	aad    0xc8
  404b9f:	add    al,bl
  404ba1:	add    BYTE PTR [ebx-0xe7767d],al
  404ba7:	inc    DWORD PTR [eax]
  404ba9:	mov    cl,0xc
  404bab:	out    dx,al
  404bac:	call   0x83ff:0x13ff48de
  404bb3:	(bad)  
  404bb4:	dec    DWORD PTR [esi+0x2cffff00]
  404bba:	jp     0x404b9e
  404bbc:	mov    esp,0xf2009afa
  404bc1:	add    BYTE PTR [ecx-0x3386ff01],cl
  404bc7:	cmp    edi,0x3a
  404bca:	fld    st(4)
  404bcc:	xor    al,0x9b
  404bce:	mov    bl,0x89
  404bd0:	dec    esp
  404bd1:	int3   
  404bd2:	inc    DWORD PTR [eax]
  404bd4:	add    BYTE PTR [edi+edi*8-0x1c76ff01],dh
  404bdb:	icebp  
  404bdc:	imul   ebx,DWORD PTR gs:[esi],0xffffffff
  404be0:	jb     0x404be1
  404be2:	inc    DWORD PTR [eax]
  404be4:	sbb    edi,0xffffffff
  404be7:	add    bh,bh
  404be9:	cli    
  404bea:	xor    al,al
  404bec:	adc    al,0x30
  404bee:	jae    0x404bef
  404bf0:	ja     0x404b7b
  404bf2:	dec    esp
  404bf4:	call   DWORD PTR [ecx-0x1]
  404bf7:	(bad)  
  404bf8:	jmp    FWORD PTR [edx-0x6f]
  404bfb:	outs   dx,DWORD PTR ds:[esi]
  404bfc:	cmp    DWORD PTR [edi],ebp
  404bfe:	in     eax,dx
  404bff:	call   DWORD PTR [eax-0x34]
  404c02:	(bad)  
  404c03:	inc    DWORD PTR [eax]
  404c05:	fadd   DWORD PTR [eax]
  404c07:	inc    DWORD PTR [eax]
  404c09:	fild   WORD PTR [ecx+0x71]
  404c0c:	out    dx,eax
  404c0d:	(bad)  [esi-0x1]
  404c10:	xchg   ebx,eax
  404c11:	inc    DWORD PTR [eax]
  404c13:	mov    DWORD PTR [ecx+0xffffb9],ecx
  404c19:	fnstcw WORD PTR [ebx+0x33]
  404c1c:	hlt    
  404c1d:	push   cs
  404c1e:	hlt    
  404c1f:	add    BYTE PTR [edx-0x1],bl
  404c22:	dec    esp
  404c24:	int3   
  404c25:	sahf   
  404c26:	inc    DWORD PTR [eax]
  404c28:	xor    DWORD PTR [eax+0x1b4a34a],0xfffffff5
  404c2f:	jmp    FWORD PTR ds:0xcc830083
  404c35:	xlat   BYTE PTR ds:[ebx]
  404c36:	add    BYTE PTR [ecx+0x161e7f83],cl
  404c3c:	pop    ecx
  404c3d:	mov    al,0xad
  404c3f:	add    BYTE PTR [ebp-0x33ff0100],bl
  404c45:	pusha  
  404c46:	inc    DWORD PTR [ebx+0x49d98100]
  404c4c:	sbb    eax,0xf4ff7e75
  404c51:	inc    DWORD PTR [eax]
  404c53:	(bad)  
  404c54:	jmp    esi
  404c56:	inc    DWORD PTR [ebx+0x775c84ff]
  404c5c:	push   ecx
  404c5d:	fstp   DWORD PTR [eax]
  404c5f:	mov    eax,ebx
  404c61:	dec    DWORD PTR [ecx-0xc0ff01]
  404c67:	(bad)  
  404c68:	push   DWORD PTR [edi]
  404c6a:	mov    edx,0xa5f5e938
  404c6f:	dec    DWORD PTR [esi+0x0]
  404c72:	(bad)  
  404c73:	inc    DWORD PTR [ebx-0xff00b9]
  404c79:	(bad)  
  404c7a:	test   BYTE PTR [esi],0x4a
  404c7d:	out    0xab,al
  404c7f:	sbb    DWORD PTR ds:0xffccff,0x4b
  404c86:	add    ah,cl
  404c88:	add    BYTE PTR [ecx+0x56],cl
  404c8b:	push   eax
  404c8c:	add    DWORD PTR [eax-0x33b6ff0d],esp
  404c92:	(bad)  
  404c93:	(bad)  
  404c94:	call   FWORD PTR [edi-0x25000001]
  404c9a:	push   es
  404c9b:	mov    ch,0xac
  404c9d:	cli    
  404c9e:	xor    al,0xff
  404ca0:	(bad)  
  404ca1:	(bad)  
  404ca2:	(bad)  
  404ca3:	(bad)  
  404ca4:	(bad)  
  404ca5:	jns    0x404c73
  404ca7:	mov    esp,ecx
  404ca9:	lahf   
  404caa:	ror    BYTE PTR [ecx+0x6d],cl
  404cad:	lock add BYTE PTR gs:0xffffffff,dh
  404cb5:	xor    al,BYTE PTR [eax]
  404cb7:	mov    edi,edi
  404cb9:	stos   BYTE PTR es:[edi],al
  404cba:	push   0x9c3342bc
  404cbf:	mov    ecx,ecx
  404cc1:	inc    DWORD PTR [eax]
  404cc3:	or     DWORD PTR [ecx-0xb],0x70
  404cca:	loopne 0x404c5a
  404ccc:	or     DWORD PTR [esi+0x5],edx
  404ccf:	add    BYTE PTR [edx-0x7d],dl
  404cd2:	mov    edi,edi
  404cd4:	add    BYTE PTR [esi-0x5b7cff01],bl
  404cda:	push   ss
  404cdb:	dec    edi
  404cdc:	pop    edi
  404cdd:	cmp    esp,DWORD PTR [ebp+0x0]
  404ce0:	mov    cl,0x0
  404ce2:	(bad)  
  404ce3:	inc    DWORD PTR [eax]
  404ce5:	mov    cl,ah
  404ce7:	(bad)  
  404ce8:	call   DWORD PTR [ebx-0x77]
  404ceb:	add    al,0x12
  404ced:	rcr    DWORD PTR [eax+0x3289],0xff
  404cf4:	int3   
  404cf5:	sbb    eax,0xa5ff00cc
  404cfa:	push   ss
  404cfb:	lods   al,BYTE PTR ds:[esi]
  404cfc:	xchg   esp,eax
  404cfd:	ret    
  404cfe:	xor    bh,bh
  404d00:	cld    
  404d01:	add    BYTE PTR [eax],al
  404d03:	(bad)  
  404d04:	dec    DWORD PTR [eax+0x2589ffff]
  404d0a:	aaa    
  404d0b:	xchg   ecx,eax
  404d0c:	push   ecx
  404d0d:	std    
  404d0e:	into   
  404d0f:	call   ecx
  404d11:	(bad)  
  404d12:	dec    esp
  404d14:	or     DWORD PTR [edi-0x1],0xffffffff
  404d18:	add    dh,cl
  404d1a:	sbb    al,0x27
  404d1c:	adc    edi,ebp
  404d1e:	dec    ebx
  404d1f:	dec    DWORD PTR [edi-0x7c7cff7d]
  404d25:	fwait
  404d26:	inc    DWORD PTR [eax]
  404d28:	dec    DWORD PTR [esi-0x53]
  404d2b:	dec    esp
  404d2c:	inc    edx
  404d2d:	outs   dx,DWORD PTR ds:[esi]
  404d2e:	jmp    FWORD PTR [si]
  404d31:	(bad)  
  404d32:	(bad)  
  404d33:	(bad)  
  404d34:	push   DWORD PTR [ecx+0x0]
  404d37:	int3   
  404d38:	jmp    FWORD PTR [ecx+0x2844bf29]
  404d3e:	fdiv   st(7),st
  404d40:	dec    esp
  404d41:	(bad)  
  404d42:	(bad)  
  404d43:	inc    DWORD PTR [eax]
  404d45:	pop    ss
  404d46:	int3   
  404d47:	or     esp,0xffffffa5
  404d4a:	jl     0x404d56
  404d4c:	jne    0x404d14
  404d4e:	mov    esp,0xff890bff
  404d53:	(bad)  
  404d54:	push   DWORD PTR [edx]
  404d56:	(bad)  
  404d57:	inc    DWORD PTR [eax]
  404d59:	fwait
  404d5a:	sub    BYTE PTR [ebx+0x78],bh
  404d5d:	mov    dh,0x3a
  404d5f:	int3   
  404d60:	push   edi
  404d61:	add    BYTE PTR [ecx+0xd83ff],cl
  404d67:	add    DWORD PTR [ebx+0x6f2bb799],0xffffffe3
  404d6e:	jmp    0x404cf9
  404d70:	retf   
  404d71:	inc    DWORD PTR [ebx-0x760b0100]
  404d77:	add    bh,bh
  404d79:	inc    eax
  404d7a:	lock fimul DWORD PTR [ebx]
  404d7d:	(bad)  
  404d7e:	jbe    0x404d7f
  404d80:	sub    DWORD PTR [eax],eax
  404d82:	add    BYTE PTR [ecx-0x307d],cl
  404d88:	mov    DWORD PTR [ebx-0x7329dc3b],esi
  404d8e:	cmp    bh,0x97
  404d91:	inc    DWORD PTR [eax]
  404d93:	inc    DWORD PTR [eax]
  404d95:	jno    0x404d63
  404d97:	add    DWORD PTR [eax],0xffffff8b
  404d9a:	add    al,0x6d
  404d9c:	test   DWORD PTR [ebx-0x61],eax
  404d9f:	(bad)  
  404da0:	mov    edi,0x83ffffff
  404da5:	dec    esi
  404da6:	add    bh,bh
  404da8:	int3   
  404da9:	clc    
  404daa:	sbb    BYTE PTR [esp+ebx*8],dh
  404dad:	adc    ch,ah
  404daf:	add    BYTE PTR [edx],cl
  404db1:	dec    esp
  404db3:	add    BYTE PTR [ebx-0x33ff00e4],al
  404db9:	repnz xor eax,0xa95c362a
  404dbf:	call   DWORD PTR [ebp-0x1]
  404dc2:	or     esp,0xffffffff
  404dc5:	pop    eax
  404dc6:	add    bh,bh
  404dc8:	or     DWORD PTR [eax-0x23a7ee60],0xffffffd8
  404dcf:	int3   
  404dd0:	jo     0x404dd2
  404dd2:	mov    edi,edi
  404dd4:	int3   
  404dd5:	push   esi
  404dd6:	dec    esp
  404dd8:	cmp    DWORD PTR [edx],0xffffffc5
  404ddb:	sar    eax,cl
  404ddd:	and    edi,DWORD PTR [ebx-0x1]
  404de0:	add    BYTE PTR [eax],0xff
  404de3:	add    BYTE PTR [eax],al
  404de5:	(bad)  [ecx-0x530a0001]
  404deb:	in     eax,dx
  404dec:	xor    al,0xf5
  404dee:	aas    
  404def:	dec    DWORD PTR [ecx+0x8983ff]
  404df5:	cld    
  404df6:	add    bh,bh
  404df8:	add    BYTE PTR [edi],al
  404dfa:	loop   0x404d85
  404dfc:	add    al,al
  404dfe:	je     0x404dff
  404e00:	sbb    eax,0x838300ff
  404e05:	fld    DWORD PTR [eax]
  404e07:	cmp    edi,0xffffff8e
  404e0a:	mov    cl,0x92
  404e0c:	(bad)  
  404e0d:	lods   eax,DWORD PTR ds:[esi]
  404e0e:	test   BYTE PTR [ecx-0x4c],0xcc
  404e15:	sar    edi,0x0
  404e18:	call   FWORD PTR [ebx+ebp*1-0x385b2e09]
  404e1f:	int3   
  404e20:	mov    al,0x83
  404e22:	inc    DWORD PTR [ebx-0x7c761100]
  404e28:	cmp    DWORD PTR [ecx-0x6398368],0x1b
  404e2f:	push   DWORD PTR [ebp-0x7c00ff01]
  404e35:	jl     0x404e37
  404e37:	int3   
  404e38:	sbb    DWORD PTR [edx+0x52],0xffffffc6
  404e3c:	addr16 jnp 0x404e47
  404e3f:	int3   
  404e40:	push   edx
  404e41:	cmp    edi,0xffffffff
  404e44:	add    BYTE PTR [esi],ah
  404e46:	(bad)  
  404e47:	inc    DWORD PTR [ebx-0x600fa77e]
  404e4d:	sub    DWORD PTR [eax+eax*1],ebx
  404e50:	adc    edi,edi
  404e52:	(bad)  
  404e53:	(bad)  
  404e54:	call   FWORD PTR [ecx+0x5e0000ff]
  404e5a:	push   ebp
  404e5b:	jle    0x404e16
  404e5d:	fs jg  0x404e5f
  404e60:	test   al,0xff
  404e62:	add    DWORD PTR [eax],0xffffffff
  404e65:	icebp  
  404e66:	add    DWORD PTR [eax],0x0
  404e69:	ret    
  404e6a:	xchg   esi,eax
  404e6b:	cli    
  404e6c:	retf   0x9858
  404e6f:	jmp    FWORD PTR [esi]
  404e71:	(bad)  
  404e72:	dec    esp
  404e74:	add    dl,cl
  404e76:	(bad)  
  404e77:	inc    DWORD PTR [eax]
  404e79:	into   
  404e7a:	popa   
  404e7b:	sub    edx,ebx
  404e7d:	push   es
  404e7e:	lahf   
  404e7f:	add    dl,bl
  404e81:	or     esp,0xffffffff
  404e84:	int3   
  404e85:	and    edi,edi
  404e87:	inc    DWORD PTR [ebx+0x6c761b52]
  404e8d:	xchg   bh,bl
  404e8f:	add    BYTE PTR [ebp-0x100],ah
  404e95:	mov    dh,0xff
  404e97:	inc    DWORD PTR [ebx-0xde481f2]
  404e9d:	test   BYTE PTR ds:0xff89a000,al
  404ea3:	inc    DWORD PTR [eax]
  404ea5:	pop    ebx
  404ea6:	inc    DWORD PTR [eax]
  404ea8:	int3   
  404ea9:	xchg   ebx,eax
  404eaa:	and    al,0x24
  404eac:	xor    al,0x7f
  404eae:	jno    0x404e7c
  404eb0:	fld    QWORD PTR [eax]
  404eb2:	inc    DWORD PTR [eax]
  404eb4:	int3   
  404eb5:	lahf   
  404eb6:	inc    DWORD PTR [eax]
  404eb8:	or     DWORD PTR [ecx],0x7d
  404ebb:	pop    ebx
  404ebc:	push   esi
  404ebd:	inc    ecx
  404ebe:	fdiv   st(7),st
  404ec0:	in     al,dx
  404ec1:	int3   
  404ec2:	dec    esp
  404ec4:	mov    DWORD PTR [edx-0x1],esp
  404ec7:	add    bh,bh
  404ec9:	imul   edi,esi,0xfffffff6
  404ecc:	shr    BYTE PTR [edx-0x7f],1
  404ecf:	mov    DWORD PTR [edi-0x1],eax
  404ed2:	int3   
  404ed3:	int3   
  404ed4:	push   DWORD PTR [eax]
  404ed6:	add    bh,bh
  404ed8:	jmp    ebx
  404eda:	imul   ecx,DWORD PTR [ecx-0x7c921b23],0xffffffa7
  404ee4:	dec    DWORD PTR [ebx]
  404ee6:	(bad)  
  404ee7:	(bad)  
  404ee8:	call   edi
  404eea:	fcomp  st(4)
  404eec:	lds    ebx,FWORD PTR [edi]
  404eee:	into   
  404eef:	push   DWORD PTR [ecx-0x1]
  404ef2:	cmp    edi,0xffffffff
  404ef5:	ds cmp edi,0xffffffff
  404ef9:	hlt    
  404efa:	pop    ebp
  404efb:	xor    eax,0xff109643
  404f00:	jecxz  0x404f02
  404f02:	(bad)  
  404f03:	(bad)  
  404f04:	jmp    ebp
  404f06:	dec    esp
  404f08:	adc    DWORD PTR [edx-0x54],0xffffffcf
  404f0c:	xchg   ebp,eax
  404f0d:	or     eax,0x83b4ff19
  404f12:	add    DWORD PTR [eax],0xffffffff
  404f15:	dec    edi
  404f16:	cmp    edi,0xffffffff
  404f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f1a:	repz sub DWORD PTR [eax+0x4a],esi
  404f1e:	out    dx,eax
  404f1f:	call   FWORD PTR [ecx-0xffff01]
  404f25:	and    edi,edi
  404f27:	int3   
  404f28:	add    BYTE PTR [esi+0x349bb020],bh
  404f2e:	push   ebx
  404f2f:	jmp    FWORD PTR [edi+edi*8]
  404f32:	add    BYTE PTR [eax],al
  404f34:	jmp    DWORD PTR [edi+edi*8-0x1]
  404f38:	and    DWORD PTR [ecx],0x54
  404f3b:	inc    ebx
  404f3c:	sahf   
  404f3d:	call   0x843f4f69
  404f42:	add    dl,ah
  404f44:	dec    esi
  404f45:	mov    al,0x83
  404f47:	push   esi
  404f48:	(bad)  
  404f49:	(bad)  
  404f4a:	call   esi
  404f4c:	cdq    
  404f4d:	out    0x83,eax
  404f4f:	into   
  404f50:	add    BYTE PTR [eax],al
  404f52:	int3   
  404f53:	or     cl,BYTE PTR [ebx-0x29]
  404f56:	inc    DWORD PTR [edx+0x30ffffff]
  404f5c:	sbb    BYTE PTR [ecx],bl
  404f5e:	push   DWORD PTR [edi-0x1]
  404f61:	(bad)  
  404f62:	call   DWORD PTR [esi+ebp*2]
  404f65:	xor    eax,0xff83f900
  404f6a:	add    ch,dh
  404f6c:	mov    bh,0x17
  404f6e:	add    BYTE PTR [eax-0x1],ah
  404f71:	(bad)  
  404f72:	call   FWORD PTR [ebp-0x1e00a745]
  404f78:	(bad)  
  404f79:	(bad)  
  404f7a:	jmp    DWORD PTR [ecx+eax*1-0x50]
  404f7e:	jmp    FWORD PTR [eax+0x42ffff83]
  404f84:	or     al,0x3f
  404f86:	dec    DWORD PTR [edi+edi*8+0x73140083]
  404f8d:	inc    BYTE PTR [ebx-0xff0036]
  404f93:	daa    
  404f94:	xchg   esi,eax
  404f95:	into   
  404f96:	add    dh,bl
  404f98:	dec    DWORD PTR [ecx+0x265c4283]
  404f9e:	int3   
  404f9f:	jmp    0x71c34fa4
  404fa4:	fstp   DWORD PTR [edi-0x77]
  404fa7:	sahf   
  404fa8:	add    BYTE PTR [ebx+0x3d3370ff],al
  404fae:	or     DWORD PTR [edi-0x1],0x0
  404fb2:	inc    eax
  404fb4:	fdiv   QWORD PTR [ebx-0x7cffda01]
  404fba:	inc    esp
  404fbc:	mov    bl,0xf7
  404fbe:	mov    DWORD PTR [edi+0x40838300],edi
  404fc4:	gs adc edi,edi
  404fc7:	mov    al,BYTE PTR [eax]
  404fc9:	dec    esp
  404fcb:	cdq    
  404fcc:	ja     0x405007
  404fce:	or     DWORD PTR [edi+edi*8+0xea7ffff],0xfffffffb
  404fd6:	add    BYTE PTR [ebx+eax*4+0x0],dh
  404fda:	inc    ebp
  404fdc:	jle    0x405033
  404fde:	int3   
  404fdf:	and    bh,bh
  404fe1:	inc    DWORD PTR [eax]
  404fe3:	ins    DWORD PTR es:[edi],dx
  404fe4:	fsubr  st(0),st
  404fe6:	jmp    DWORD PTR [ebx+eax*4]
  404fe9:	add    BYTE PTR [ebx-0xe2fa22],al
  404fef:	push   edx
  404ff0:	dec    DWORD PTR [ecx-0x4d636c01]
  404ff6:	push   ebp
  404ff8:	add    BYTE PTR [eax],al
  404ffa:	add    al,dl
  404ffc:	aaa    
  404ffd:	ror    ah,cl
  404fff:	mov    edi,edi
  405001:	add    BYTE PTR [ebx+0x5ce15b],al
  405007:	jns    0x405008
  405009:	inc    DWORD PTR [eax]
  40500b:	xchg   ebp,eax
  40500c:	les    esi,FWORD PTR ds:0x83002f00
  405012:	add    BYTE PTR [esi+edi*1+0x5d],ah
  405016:	int3   
  405017:	inc    ecx
  405018:	add    BYTE PTR [eax],al
  40501a:	push   esi
  40501c:	std    
  40501d:	pop    es
  40501e:	sbb    DWORD PTR [eax+eax*1],0xffffffff
  405022:	dec    DWORD PTR [ebx-0x53767c53]
  405028:	cmp    edi,0xffffff83
  40502b:	inc    edx
  40502c:	cmp    ah,cl
  40502e:	(bad)  
  40502f:	fdivr  st,st(7)
  405031:	mov    edi,edi
  405033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405034:	and    edi,DWORD PTR [edi]
  405036:	add    BYTE PTR [edi-0x41007d00],bl
  40503c:	sub    ebp,ebx
  40503e:	(bad)  
  40503f:	(bad)  
  405041:	(bad)  
  405042:	dec    DWORD PTR [edx+0x2cffd2fb]
  405048:	add    bh,bh
  40504a:	inc    DWORD PTR [edi-0x11]
  40504d:	call   WORD PTR [eax-0xa770000]
  405054:	and    BYTE PTR ds:0x83f183,dl
  40505a:	add    BYTE PTR [eax],cl
  40505c:	cmp    BYTE PTR [ebp-0x7d],0x40
  405060:	(bad)  
  405061:	(bad)  
  405062:	jmp    FWORD PTR [eax-0x4c]
  405065:	popf   
  405066:	add    BYTE PTR [ecx],ch
  405068:	add    bh,bh
  40506a:	mov    ecx,edi
  40506c:	xor    ebp,DWORD PTR [edi+0xff98ff]
  405072:	sub    DWORD PTR [esi+0x67ff7ba2],0x0
  405079:	add    BYTE PTR [ecx-0x7c95289f],cl
  40507f:	xchg   ecx,eax
  405080:	inc    DWORD PTR [ebx+0x457ea600]
  405086:	add    BYTE PTR [ebx],bl
  405088:	int3   
  405089:	inc    DWORD PTR [eax]
  40508b:	enter  0x90f8,0x89
  40508f:	in     eax,dx
  405090:	add    DWORD PTR [eax],0xffffffff
  405093:	mov    al,ds:0xd6ff6cef
  405098:	add    bh,bh
  40509a:	(bad)  
  40509b:	mov    edi,0xb1ff3601
  4050a0:	inc    DWORD PTR [eax]
  4050a2:	inc    DWORD PTR [esp+ebp*2+0x9aff0d]
  4050a9:	dec    DWORD PTR [ecx-0x7c01ee74]
  4050af:	in     al,0xff
  4050b1:	(bad)  
  4050b2:	push   DWORD PTR [ecx-0x41]
  4050b5:	retf   0x8ff
  4050b8:	inc    DWORD PTR [eax]
  4050ba:	call   DWORD PTR [esi+0x78]
  4050bd:	jne    0x4050bf
  4050bf:	mov    di,di
  4050c2:	add    DWORD PTR [edx],0xffffffb3
  4050c5:	jne    0x4050c7
  4050c7:	cmp    edi,0x11d500ff
  4050cd:	popa   
  4050ce:	jmp    DWORD PTR [edi]
  4050d0:	add    BYTE PTR [eax],al
  4050d2:	(bad)  
  4050d3:	(bad)  
  4050d4:	stos   DWORD PTR es:[edi],eax
  4050d5:	jl     0x4050a3
  4050d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050d8:	inc    DWORD PTR [eax]
  4050da:	add    BYTE PTR [esi+edx*4+0x5e00af],bh
  4050e1:	inc    DWORD PTR [eax]
  4050e3:	cs or  eax,0xff0eff4d
  4050e9:	inc    DWORD PTR [ebx-0x83e5e]
  4050ef:	mov    bl,0xff
  4050f1:	(bad)  
  4050f2:	push   esi
  4050f4:	mov    dh,0xe2
  4050f6:	call   FWORD PTR [ebx-0x7d]
  4050f9:	inc    DWORD PTR [eax]
  4050fb:	jns    0x40517b
  4050fd:	inc    esp
  4050fe:	add    ah,ch
  405100:	add    bh,bh
  405102:	sub    DWORD PTR [esi+0x2],0x61
  405106:	add    BYTE PTR [esi+0x10ccffff],bh
  40510c:	sbb    eax,0x36ff84
  405111:	add    BYTE PTR [eax],al
  405113:	mov    ebp,0xb8006da7
  405118:	inc    DWORD PTR [eax]
  40511a:	push   DWORD PTR [ecx]
  40511c:	xchg   ecx,eax
  40511d:	jo     0x40511e
  40511f:	call   0x424150ad
  405124:	test   al,0x50
  405126:	inc    ecx
  405128:	(bad)  
  405129:	dec    esp
  40512b:	sbb    al,0x4d
  40512d:	icebp  
  40512e:	add    BYTE PTR [ebx],bl
  405130:	int3   
  405131:	(bad)  
  405132:	call   DWORD PTR [edi+0x24]
  405135:	xor    eax,DWORD PTR [ebx-0x7c7600f4]
  40513b:	test   DWORD PTR ss:[edi+edi*8-0x55],ebp
  405140:	dec    DWORD PTR [ecx+0x75b010ff]
  405146:	add    BYTE PTR [eax-0x1],bl
  405149:	int3   
  40514a:	jmp    FWORD PTR [ebx+0x7e]
  40514d:	sub    bh,bh
  40514f:	(bad)  
  405151:	mov    edi,edi
  405153:	mov    ch,0xbc
  405155:	inc    ebx
  405156:	push   DWORD PTR [edx]
  405158:	int3   
  405159:	dec    esp
  40515b:	nop
  40515c:	push   0x31
  40515e:	int3   
  40515f:	dec    esi
  405160:	dec    esp
  405162:	(bad)  
  405163:	jg     0x40518c
  405165:	mov    ebx,0xffffa6ff
  40516a:	add    BYTE PTR [esi-0x3a005659],dh
  405170:	inc    DWORD PTR [ebx-0xf5fcb7d]
  405176:	int3   
  405177:	mov    dl,0xff
  405179:	inc    DWORD PTR [ebx-0x7c6fc1fa]
  40517f:	sbb    DWORD PTR [eax],eax
  405181:	or     esp,0xffffffa8
  405184:	mov    ecx,DWORD PTR [eax-0x7d]
  405187:	sar    edi,1
  405189:	add    bh,bh
  40518b:	and    edx,DWORD PTR [ebx-0x96001d]
  405191:	add    DWORD PTR [ebx-0xf46509],0xffffff95
  405198:	mov    DWORD PTR [ecx-0x5652117d],ecx
  40519e:	xor    DWORD PTR [edi],0x0
  4051a1:	add    BYTE PTR [eax],al
  4051a3:	and    BYTE PTR [esi],bl
  4051a5:	outs   dx,DWORD PTR ds:[esi]
  4051a6:	mov    DWORD PTR [ebp+0x0],edi
  4051a9:	(bad)  
  4051aa:	call   FWORD PTR [edi]
  4051ac:	jmp    edx
  4051ae:	add    al,ch
  4051b0:	(bad)  
  4051b1:	(bad)  
  4051b2:	jmp    FWORD PTR [edx+0x14]
  4051b5:	xor    eax,0x832fcc
  4051ba:	jmp    FWORD PTR [ebx+ebx*8-0xa]
  4051be:	sbb    DWORD PTR [ecx+ecx*4-0x34],0xffffff89
  4051c3:	rcr    DWORD PTR [ebx+esi*1],cl
  4051c6:	xor    DWORD PTR [eax+eax*1+0x61beff00],0x10
  4051ce:	sub    ebp,0xffffff83
  4051d1:	inc    DWORD PTR [ebx-0x3302f63b]
  4051d7:	sbb    BYTE PTR [eax],al
  4051d9:	inc    DWORD PTR [eax]
  4051db:	or     eax,0x13000366
  4051e0:	(bad)  
  4051e1:	(bad)  
  4051e2:	call   FWORD PTR [ebx]
  4051e4:	mov    esp,0xff288318
  4051e9:	(bad)  
  4051ea:	inc    DWORD PTR [ebx+0x2e00849d]
  4051f0:	add    DWORD PTR [ebx-0x2dafc701],0x0
  4051f7:	mov    bl,0x0
  4051f9:	add    bh,bh
  4051fb:	inc    edx
  4051fc:	pushf  
  4051fd:	ret    0x800
  405200:	inc    DWORD PTR [ebx+0x31174589]
  405206:	jmp    DWORD PTR [esi]
  405208:	int3   
  405209:	int3   
  40520a:	inc    DWORD PTR [ebx-0x42762dd9]
  405210:	inc    DWORD PTR [ebx+0x1edd0fff]
  405216:	add    cl,cl
  405218:	add    DWORD PTR [eax],0xffffffff
  40521b:	das    
  40521c:	adc    ecx,DWORD PTR [ecx]
  40521e:	jmp    FWORD PTR [edx]
  405220:	(bad)  
  405221:	(bad)  
  405222:	call   esi
  405224:	sub    DWORD PTR ds:0xff00cbcc,esi
  40522a:	int3   
  40522b:	(bad)  
  40522c:	popa   
  40522d:	cmp    eax,0xff34ff
  405232:	add    ch,bh
  405234:	cmc    
  405235:	adc    eax,DWORD PTR [ebx-0x760000f2]
  40523b:	pop    ebp
  40523c:	hlt    
  40523d:	push   ebx
  40523e:	add    BYTE PTR [edx+0x1100ffff],ch
  405244:	inc    ebx
  405245:	pop    ecx
  405246:	(bad)  
  405247:	in     al,dx
  405248:	add    bh,bh
  40524a:	add    BYTE PTR [ecx+ecx*4-0xf70078],cl
  405251:	add    BYTE PTR [eax],al
  405253:	inc    ecx
  405254:	or     DWORD PTR [ebp-0xfffa7d],esi
  40525a:	call   DWORD PTR [ecx-0x55]
  40525d:	fild   WORD PTR [eax]
  40525f:	add    edi,edi
  405261:	inc    DWORD PTR [eax]
  405263:	pop    ss
  405264:	pushf  
  405265:	sbb    BYTE PTR [eax],al
  405267:	(bad)  
  40526a:	jmp    FWORD PTR [edi+0x78]
  40526d:	mov    eax,ds:0x89ff2aff
  405272:	inc    DWORD PTR [edx+0x31]
  405275:	and    eax,0xffcc80ff
  40527a:	add    BYTE PTR [ebp+0x6e],dl
  40527d:	mov    edi,0xffff51ff
  405282:	add    ah,dh
  405284:	test   al,0x19
  405286:	add    ch,al
  405288:	add    DWORD PTR [ebx-0x2b475a34],0x0
  40528f:	aam    0xff
  405291:	mov    DWORD PTR [eax],eax
  405293:	pop    ebx
  405294:	mov    ebp,0xff89ff78
  405299:	inc    DWORD PTR [eax]
  40529b:	xor    al,0x21
  40529d:	pop    ds
  40529e:	call   FWORD PTR [edi-0x1]
  4052a1:	inc    DWORD PTR [eax]
  4052a3:	call   DWORD PTR [edx-0x400db]
  4052a9:	int3   
  4052aa:	xor    esi,0x59
  4052ad:	imul   eax,DWORD PTR [eax],0x3f
  4052b0:	add    DWORD PTR [eax],0xffffff89
  4052b3:	jmp    0xf83f53fc
  4052b8:	dec    DWORD PTR [ecx-0x48fe9077]
  4052be:	add    BYTE PTR [esi+0x0],al
  4052c1:	or     esp,0x4d
  4052c4:	adc    ebx,eax
  4052c6:	(bad)  
  4052c7:	clc    
  4052c8:	add    bh,bh
  4052ca:	jmp    FWORD PTR ds:0x16ff63af
  4052d0:	mov    edi,edi
  4052d2:	inc    DWORD PTR [edx]
  4052d4:	mov    WORD PTR [edx-0x1],fs
  4052d7:	or     edi,edi
  4052d9:	add    BYTE PTR [eax],al
  4052db:	inc    ecx
  4052dc:	repz pop ecx
  4052de:	or     DWORD PTR [ebx-0x77],0xffffffff
  4052e2:	call   DWORD PTR [edx-0x43]
  4052e5:	add    bh,bh
  4052e7:	push   0xffffff83
  4052e9:	(bad)  
  4052ea:	(bad)  
  4052eb:	js     0x4052b6
  4052ed:	loopne 0x4052ee
  4052ef:	int3   
  4052f0:	add    BYTE PTR [ebx+0x5f4eceff],al
  4052f6:	jmp    esp
  4052f8:	int3   
  4052f9:	add    BYTE PTR [eax],al
  4052fb:	outs   dx,BYTE PTR ds:[esi]
  4052fc:	or     al,0xcf
  4052fe:	int3   
  4052ff:	out    0x0,eax
  405301:	add    BYTE PTR [ecx+0x480e3],cl
  405307:	icebp  
  405308:	cmp    edi,0x0
  40530b:	add    ebx,ebx
  40530d:	aad    0x0
  40530f:	push   es
  405310:	dec    esp
  405312:	dec    DWORD PTR [ecx]
  405314:	fnsave ds:0xff00cf83
  40531a:	push   DWORD PTR [edx]
  40531c:	stos   BYTE PTR es:[edi],al
  40531d:	xchg   DWORD PTR [ebx-0x7c00ffd8],eax
  405323:	xchg   esi,eax
  405324:	not    ebp
  405326:	or     ecx,0x0
  405329:	inc    DWORD PTR [eax]
  40532b:	mov    edx,edi
  40532d:	int3   
  40532e:	mov    DWORD PTR [ecx],edx
  405330:	(bad)  
  405331:	dec    DWORD PTR [ecx-0xe2f949]
  405337:	dec    edx
  405338:	mov    edi,edi
  40533a:	xor    DWORD PTR [edx+ebp*4-0xd7ffaf],0xffffff83
  405342:	add    BYTE PTR [eax+0x4a83d308],dl
  405348:	add    DWORD PTR [ebx-0x282cb100],0xffffffcc
  40534f:	sbb    eax,0xaf830000
  405354:	and    bh,0x83
  405357:	mov    edi,0xcc8989ff
  40535c:	arpl   WORD PTR [edi-0x1],dx
  40535f:	es int3 
  405361:	cmp    edi,0xffffffdf
  405364:	xchg   ebp,eax
  405365:	dec    ecx
  405366:	dec    DWORD PTR [esi+0x40ff0000]
  40536c:	es inc ebx
  40536e:	add    bh,bl
  405370:	add    bh,bh
  405372:	and    DWORD PTR [eax+0x4c],0xffffffc1
  405376:	add    bh,al
  405378:	add    bh,bh
  40537a:	int3   
  40537b:	sub    BYTE PTR [edx],cl
  40537d:	inc    esp
  40537e:	int3   
  40537f:	mov    ebx,0xcb0000ff
  405384:	xchg   ebx,eax
  405385:	cmp    cl,BYTE PTR [ecx-0x76ff59]
  40538b:	dec    edx
  40538c:	jl     0x405331
  40538e:	add    BYTE PTR [edi-0x34],cl
  405391:	add    BYTE PTR [ecx-0x7cfe7a1b],cl
  405397:	sub    bh,bh
  405399:	int3   
  40539a:	jmp    DWORD PTR [eax-0x55]
  40539d:	jmp    0x405322
  40539f:	mov    al,BYTE PTR [ebx+0x665c00ff]
  4053a5:	cmp    bh,0x67
  4053a8:	add    bh,bh
  4053aa:	add    BYTE PTR [edx-0x57],ch
  4053ad:	push   0x0
  4053af:	into   
  4053b0:	int3   
  4053b1:	cmp    edi,0x25
  4053b4:	into   
  4053b5:	mov    ecx,0xff31ff
  4053ba:	inc    DWORD PTR [edi+esi*4-0x867c6d]
  4053c1:	add    DWORD PTR [ebx+0x17c88c],0x60
  4053c8:	add    ah,cl
  4053ca:	add    dl,al
  4053cc:	lods   eax,DWORD PTR ds:[esi]
  4053cd:	and    edi,edi
  4053cf:	xchg   ebx,eax
  4053d0:	add    BYTE PTR [ebx-0x5540c001],al
  4053d6:	add    ah,ah
  4053d8:	inc    DWORD PTR [eax]
  4053da:	sbb    DWORD PTR [ebx-0x1d],0x5c
  4053de:	int3   
  4053df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053e0:	(bad)  
  4053e1:	inc    DWORD PTR [eax]
  4053e3:	es inc eax
  4053e5:	xchg   ecx,eax
  4053e6:	mov    DWORD PTR [ecx+0x83ffff],eax
  4053ec:	mov    bh,0x52
  4053ee:	call   DWORD PTR [ebx+0x3aff83ff]
  4053f4:	ja     0x405394
  4053f6:	add    BYTE PTR [ebp+0x57ffffcc],dh
  4053fc:	pop    edx
  4053fd:	cmp    ecx,DWORD PTR [ecx-0x7c0065]
  405403:	stos   BYTE PTR es:[edi],al
  405404:	outs   dx,DWORD PTR ds:[esi]
  405405:	aam    0xff
  405407:	idiv   edi
  405409:	add    DWORD PTR [ebx-0x7c717d47],0x72
  405410:	add    DWORD PTR [eax],0xffffffff
  405413:	aad    0x59
  405415:	sbb    cl,ah
  405417:	repz add BYTE PTR [ecx+0x413d45ff],cl
  40541e:	dec    ebx
  405420:	inc    DWORD PTR [eax]
  405422:	call   FWORD PTR [ecx-0x4a]
  405425:	leave  
  405426:	int3   
  405427:	fxch   st(4)
  405429:	add    DWORD PTR [eax],0xffffffcb
  40542c:	test   al,0x9d
  40542e:	dec    esp
  405430:	dec    DWORD PTR [ecx+0x2ef9efff]
  405436:	add    BYTE PTR [eax-0x1],bl
  405439:	dec    DWORD PTR [ecx-0x76afd964]
  40543f:	cdq    
  405440:	int3   
  405441:	cmp    edi,0xffffffa0
  405444:	call   0x838a534f
  405449:	cmp    edi,0xffffff98
  40544c:	push   0xffffffa4
  40544e:	add    bh,ch
  405450:	inc    DWORD PTR [eax]
  405452:	inc    ebp
  405454:	mov    ebp,0xffd1ffee
  405459:	inc    DWORD PTR [ebx-0xd6bd9b]
  40545f:	add    bh,bh
  405461:	int3   
  405462:	int3   
  405463:	cs dec ebp
  405465:	in     eax,0xff
  405467:	repnz mov esp,ecx
  40546a:	inc    DWORD PTR ds:0xa300cb06
  405470:	(bad)  
  405471:	(bad)  
  405472:	call   FWORD PTR [edi+0x3b]
  405475:	loop   0x405476
  405477:	sub    edi,edi
  405479:	(bad)  
  40547a:	dec    DWORD PTR [esi+ebp*1]
  40547d:	cmp    bh,0x48
  405480:	add    BYTE PTR [ebx-0x698e3000],al
  405486:	and    DWORD PTR [ebp-0x1],0x0
  40548a:	(bad)  
  40548b:	in     eax,dx
  40548c:	push   edi
  40548d:	mov    al,BYTE PTR [eax]
  40548f:	xchg   edi,edi
  405491:	add    ah,cl
  405493:	cmp    al,0x4c
  405495:	xlat   BYTE PTR ds:[ebx]
  405496:	add    BYTE PTR [edx-0x1],al
  405499:	inc    DWORD PTR [eax]
  40549b:	dec    ecx
  40549c:	mov    dl,0xe
  40549e:	mov    DWORD PTR [edi-0x1],eax
  4054a1:	(bad)  
  4054a2:	inc    DWORD PTR [ebx+0x31]
  4054a5:	xor    bh,bh
  4054a7:	pop    ss
  4054a8:	cmp    edi,0x0
  4054ab:	xor    DWORD PTR [ebx-0x7c2b0016],0x146bff83
  4054b5:	aas    
  4054b6:	add    DWORD PTR [ecx],0x0
  4054b9:	dec    esp
  4054bb:	test   BYTE PTR [ebx-0x7c2276ac],dl
  4054c1:	add    bh,bh
  4054c3:	mov    esi,0x9dff5fb3
  4054c8:	(bad)  
  4054c9:	inc    DWORD PTR [eax]
  4054cb:	je     0x405528
  4054cd:	xchg   ebx,eax
  4054ce:	inc    ebp
  4054d0:	add    bh,bh
  4054d2:	dec    ebx
  4054d4:	lods   eax,DWORD PTR ds:[esi]
  4054d5:	iret   
  4054d6:	sbb    DWORD PTR [ebp+0x0],0xffffffff
  4054da:	jmp    FWORD PTR [esi-0x44]
  4054dd:	mov    ds:0x8300c483,al
  4054e2:	adc    edx,0x29
  4054e5:	mov    ds:0x831e89,al
  4054ea:	mov    DWORD PTR [edx],ebx
  4054ec:	out    0xff,eax
  4054ee:	dec    DWORD PTR [ebx]
  4054f0:	(bad)  
  4054f1:	(bad)  
  4054f2:	dec    DWORD PTR [ebx+0x5100951d]
  4054f8:	dec    DWORD PTR [ecx+0x97b7b00]
  4054fe:	call   ebx
  405500:	int3   
  405501:	inc    DWORD PTR [eax]
  405503:	sbb    ecx,DWORD PTR ds:0x8352000a
  405509:	dec    DWORD PTR [ecx-0x175462]
  40550f:	xor    al,0xff
  405511:	int3   
  405512:	xor    DWORD PTR [edi+0x5affd52c],0xffffffcc
  405519:	cmp    edi,0xffffff94
  40551c:	cld    
  40551d:	inc    esp
  40551e:	inc    DWORD PTR [ebp-0x1]
  405521:	int3   
  405522:	add    ah,cl
  405524:	and    edi,edx
  405526:	add    ah,dh
  405528:	dec    DWORD PTR [ecx-0x5579a200]
  40552e:	sbb    DWORD PTR [edx],0xffffffff
  405531:	mov    DWORD PTR [eax],eax
  405533:	xchg   DWORD PTR [ecx-0x5],edi
  405536:	int3   
  405537:	xor    DWORD PTR [ebx-0x2c997c77],eax
  40553d:	outs   dx,BYTE PTR ds:[esi]
  40553e:	int3   
  40553f:	jge    0x405541
  405541:	cmp    edi,0xffffffeb
  405544:	fistp  DWORD PTR [ebx+0x0]
  405547:	xchg   esp,eax
  405548:	int3   
  405549:	(bad)  
  40554a:	inc    DWORD PTR [edx]
  40554c:	push   ss
  40554d:	xchg   ebp,eax
  40554e:	inc    DWORD PTR [esi]
  405550:	cmp    edi,0x0
  405553:	loope  0x4054ea
  405555:	push   es
  405556:	int3   
  405557:	in     eax,0xcc
  405559:	dec    DWORD PTR [ecx-0xebe2e9]
  40555f:	dec    DWORD PTR ds:[ecx-0x4185ac01]
  405566:	add    BYTE PTR [eax],dl
  405568:	inc    DWORD PTR [eax]
  40556a:	add    BYTE PTR [edi+0x33],bl
  40556d:	jl     0x4054f2
  40556f:	inc    DWORD PTR gs:[eax]
  405572:	dec    DWORD PTR [edx+0x36007b36]
  405578:	add    bh,bh
  40557a:	int3   
  40557b:	push   ebx
  40557c:	pop    ebx
  40557d:	outs   dx,DWORD PTR ds:[esi]
  40557e:	add    dh,cl
  405580:	(bad)  
  405581:	(bad)  
  405582:	jmp    ecx
  405584:	mov    bl,0xb7
  405586:	add    BYTE PTR ds:0x55000083,cl
  40558c:	icebp  
  40558d:	popf   
  40558e:	(bad)  
  40558f:	mov    esi,0x9700ffcc
  405594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405595:	or     eax,0xff4a00
  40559a:	add    BYTE PTR [edx+0x53],cl
  40559d:	jnp    0x40559f
  40559f:	xchg   esi,eax
  4055a0:	add    BYTE PTR [eax],al
  4055a2:	(bad)  
  4055a3:	in     eax,dx
  4055a4:	fild   DWORD PTR [ebp-0x7c76af00]
  4055aa:	call   FWORD PTR [edi]
  4055ac:	bound  edx,QWORD PTR [edx-0x7d]
  4055af:	mov    ecx,0xf9cc00ff
  4055b4:	ds (bad) 
  4055b6:	inc    DWORD PTR [eax+0x0]
  4055b9:	add    BYTE PTR [eax],al
  4055bb:	in     al,0xe
  4055bd:	pop    esp
  4055be:	dec    DWORD PTR [esi]
  4055c0:	add    bh,bh
  4055c2:	sub    DWORD PTR [edi-0x13],0xffffffd4
  4055c6:	add    BYTE PTR [ebp-0x1],dh
  4055c9:	inc    DWORD PTR [eax]
  4055cb:	xchg   ebx,eax
  4055cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055cd:	or     al,BYTE PTR [ebx+0x41]
  4055d3:	mov    ds:0xb900726a,eax
  4055d8:	inc    DWORD PTR [ebx+0x7d6003ff]
  4055de:	jmp    FWORD PTR [esi]
  4055e0:	inc    DWORD PTR [ebx+0xf6b3300]
  4055e6:	int3   
  4055e7:	and    edi,edi
  4055e9:	(bad)  
  4055ea:	(bad)  
  4055eb:	call   0x313febbf
  4055f0:	int3   
  4055f1:	add    BYTE PTR [eax],al
  4055f3:	gs cdq 
  4055f5:	stos   DWORD PTR es:[edi],eax
  4055f6:	push   DWORD PTR [ebx+0x6eff8900]
  4055fc:	les    esp,FWORD PTR [ebx-0x7c7e01]
  405602:	sub    DWORD PTR [eax-0x9],0x6
  405606:	inc    DWORD PTR [edi+edi*8]
  405609:	add    bh,bh
  40560b:	std    
  40560c:	test   al,0xdb
  40560e:	sub    edi,0xffffffcc
  405611:	(bad)  
  405612:	(bad)  
  405613:	sti    
  405614:	and    eax,0x89f100eb
  405619:	(bad)  
  40561a:	push   esi
  40561c:	movd   mm0,DWORD PTR [ebx-0xc3]
  405623:	mov    cl,0x3
  405625:	push   0xcc00b600
  40562a:	mov    DWORD PTR [edi],ecx
  40562c:	ins    BYTE PTR es:[edi],dx
  40562d:	lock add BYTE PTR [edi-0x46330034],dh
  405634:	sub    ch,BYTE PTR [ebp-0x33009a01]
  40563a:	dec    DWORD PTR [ebx-0x31]
  40563d:	mov    dh,0x89
  40563f:	and    eax,DWORD PTR [eax]
  405641:	inc    DWORD PTR [eax]
  405643:	shl    BYTE PTR [edi-0x7c4700ff],0xff
  40564a:	or     edi,0x56
  40564d:	sbb    ah,cl
  40564f:	enter  0x8300,0xff
  405653:	mov    ecx,DWORD PTR [edi+esi*4-0x33766701]
  40565a:	add    BYTE PTR [eax],dh
  40565c:	cs pop esp
  40565e:	int3   
  40565f:	aaa    
  405660:	(bad)  
  405661:	(bad)  
  405662:	(bad)  
  405663:	mov    esi,0x4dcc368f
  405668:	inc    DWORD PTR [eax]
  40566a:	inc    DWORD PTR [ecx-0x1eff1ed8]
  405670:	add    BYTE PTR [eax],al
  405672:	jmp    DWORD PTR [ebx-0x71]
  405675:	repnz add BYTE PTR [eax+0x0],ch
  405679:	add    ah,cl
  40567b:	xor    ecx,DWORD PTR [eax]
  40567d:	mov    edi,0xffcceb00
  405682:	jmp    FWORD PTR [ebp-0x6f]
  405685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405686:	add    BYTE PTR [edx+0x583ccff],bh
  40568c:	add    ch,cl
  40568e:	add    BYTE PTR [eax-0x1],dh
  405691:	add    BYTE PTR [eax],al
  405693:	push   eax
  405694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405695:	scas   eax,DWORD PTR es:[edi]
  405696:	(bad)  
  405697:	clc    
  405698:	cmp    edi,0xffffffcc
  40569b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40569c:	not    BYTE PTR [edx-0xffd300]
  4056a2:	int3   
  4056a3:	mov    ah,0x63
  4056a5:	dec    edx
  4056a6:	sub    edi,0xffffffff
  4056a9:	inc    DWORD PTR [ebx+0x182491]
  4056af:	inc    edi
  4056b0:	mov    DWORD PTR [eax],eax
  4056b2:	int3   
  4056b3:	or     eax,0x6affbe6f
  4056b8:	add    bh,bh
  4056ba:	mov    DWORD PTR [ebp+0x2a83a8b2],ecx
  4056c0:	add    DWORD PTR [eax],0x0
  4056c3:	mov    ecx,0x54892979
  4056c8:	int3   
  4056c9:	add    ah,cl
  4056cb:	inc    eax
  4056cc:	in     al,dx
  4056cd:	loop   0x4056ce
  4056cf:	pop    edx
  4056d0:	int3   
  4056d1:	cmp    edi,0xfffffff2
  4056d4:	test   BYTE PTR [ebp+0x0],ah
  4056d7:	cmp    bh,bh
  4056d9:	(bad)  
  4056da:	push   DWORD PTR [ebx+0x2e005753]
  4056e0:	add    bh,bh
  4056e2:	add    bl,dl
  4056e4:	fdivr  DWORD PTR [esi]
  4056e6:	inc    DWORD PTR [eax+0x0]
  4056e9:	inc    DWORD PTR [eax]
  4056eb:	popa   
  4056ec:	lock inc ebx
  4056ee:	dec    DWORD PTR [ecx]
  4056f0:	add    bh,bh
  4056f2:	int3   
  4056f3:	outs   dx,BYTE PTR ds:[esi]
  4056f4:	retf   0x83f7
  4056f7:	mov    ah,0xff
  4056f9:	inc    DWORD PTR [eax]
  4056fb:	(bad)  
  4056fc:	mov    ds:0xc1ff78,al
  405701:	inc    DWORD PTR [eax]
  405703:	clc    
  405704:	retf   0xcc
  405707:	mov    bh,0xcc
  405709:	add    bh,bh
  40570b:	outs   dx,BYTE PTR ds:[esi]
  40570c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40570d:	jecxz  0x40570e
  40570f:	inc    esp
  405710:	mov    edi,edi
  405712:	add    BYTE PTR [edx],ch
  405714:	or     edx,DWORD PTR [esi-0x1]
  405717:	cli    
  405718:	int3   
  405719:	add    bh,bh
  40571b:	push   ebx
  40571c:	mov    ch,0xc4
  40571e:	(bad)  
  40571f:	mov    edi,0x49ffffff
  405724:	pusha  
  405725:	dec    eax
  405726:	(bad)  
  405727:	out    dx,al
  405728:	dec    esp
  40572a:	(bad)  
  40572b:	jns    0x405782
  40572d:	sar    bh,1
  40572f:	mov    es,WORD PTR [eax]
  405731:	add    DWORD PTR [eax],0x70
  405734:	(bad)  
  405735:	stc    
  405736:	jmp    DWORD PTR ds:0x6400ffff
  40573c:	lods   al,BYTE PTR ds:[esi]
  40573d:	sbb    eax,DWORD PTR [eax]
  40573f:	out    dx,al
  405740:	add    bh,bh
  405742:	call   DWORD PTR [eax+ebp*2]
  405745:	ror    BYTE PTR [ecx-0x7c00007c],cl
  40574b:	jns    0x405753
  40574d:	cli    
  40574e:	add    BYTE PTR [eax+eax*1-0x589d0100],al
  405755:	in     al,0x89
  405757:	pop    ebx
  405758:	add    DWORD PTR [ebx+0x4a181dff],0xffffff83
  40575f:	mov    bh,bh
  405761:	add    BYTE PTR [ebx-0x7ca80e1d],al
  405767:	mov    al,ds:0xf600ff00
  40576c:	stos   DWORD PTR es:[edi],eax
  40576d:	stos   DWORD PTR es:[edi],eax
  40576e:	call   FWORD PTR [ebp+0x3ffff00]
  405774:	pop    ebp
  405775:	jge    0x405776
  405777:	mov    ch,0xff
  405779:	(bad)  
  40577a:	(bad)  
  40577b:	mov    ecx,0x24ffaf55
  405780:	(bad)  
  405781:	(bad)  
  405782:	jmp    FWORD PTR [esi-0x28]
  405785:	or     bh,bh
  405787:	adc    bh,bh
  405789:	add    DWORD PTR [ebx-0x203de0],0xffffffad
  405790:	inc    DWORD PTR [eax]
  405792:	mov    eax,edi
  405794:	out    dx,al
  405795:	sbb    al,0xff
  405797:	add    DWORD PTR [eax],0x266fffff
  40579d:	cmp    BYTE PTR [eax],al
  40579f:	mov    dl,0xcc
  4057a1:	(bad)  
  4057a2:	(bad)  
  4057a3:	jge    0x40576a
  4057a5:	jle    0x40572a
  4057a7:	arpl   di,di
  4057a9:	(bad)  
  4057aa:	jmp    FWORD PTR [ebp+0x11ff96e3]
  4057b0:	int3   
  4057b1:	(bad)  
  4057b2:	inc    edi
  4057b4:	inc    edx
  4057b5:	fadd   QWORD PTR [eax]
  4057b7:	inc    ebx
  4057b8:	(bad)  
  4057b9:	(bad)  
  4057ba:	dec    ecx
  4057bc:	jmp    0x131db39
  4057c1:	inc    DWORD PTR [eax]
  4057c3:	jnp    0x4057c4
  4057c5:	adc    eax,DWORD PTR [eax]
  4057c7:	dec    edi
  4057c8:	(bad)  
  4057c9:	inc    DWORD PTR [eax]
  4057cb:	cwde   
  4057cc:	xor    al,0xd3
  4057ce:	jmp    FWORD PTR [ebx+0x7b83ccff]
  4057d4:	outs   dx,BYTE PTR ds:[esi]
  4057d5:	rol    BYTE PTR [ebx+0xffff25],0xa2
  4057dc:	and    eax,0xff64ccf2
  4057e1:	inc    DWORD PTR [ebx-0x7616717b]
  4057e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057e8:	add    bh,bh
  4057ea:	sub    DWORD PTR [ebp+0x43009935],0xffffffff
  4057f1:	inc    DWORD PTR [eax]
  4057f3:	aas    
  4057f4:	jae    0x4057c7
  4057f6:	call   FWORD PTR [ecx]
  4057f8:	add    BYTE PTR [eax],al
  4057fa:	and    DWORD PTR [eax-0x5b764b76],0xffffffff
  405801:	add    ah,cl
  405803:	jecxz  0x4057c0
  405805:	push   cs
  405806:	(bad)  
  405807:	jmp    0x405809
  405809:	int3   
  40580a:	jmp    DWORD PTR [esi-0x1000ac81]
  405810:	add    BYTE PTR [ecx+0x752ee1ff],cl
  405816:	mov    DWORD PTR [ebx],edi
  405818:	add    bh,bh
  40581a:	mov    DWORD PTR [ecx+eiz*2+0x69],ecx
  40581e:	add    BYTE PTR [eax+eax*1],bh
  405821:	inc    DWORD PTR [ebx-0xd6d186]
  405827:	jmp    0x405828
  405829:	add    DWORD PTR [eax],0xffffffc6
  40582c:	loope  0x4058ad
  40582e:	jmp    FWORD PTR [eax+0x3d00cc00]
  405834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405835:	call   0x40fe39
  40583a:	call   DWORD PTR [esi-0x68006d21]
  405840:	(bad)  
  405841:	dec    DWORD PTR [ecx-0x7c2945cb]
  405847:	mov    ah,0xff
  405849:	add    DWORD PTR [eax],0xb
  40584c:	xchg   BYTE PTR [edi],dh
  40584e:	add    BYTE PTR ds:0x53ff00cc,bh
  405854:	cmc    
  405855:	add    bh,bh
  405857:	ins    DWORD PTR es:[edi],dx
  405858:	(bad)  
  405859:	inc    DWORD PTR [eax]
  40585b:	jne    0x40587a
  40585d:	daa    
  40585e:	add    BYTE PTR ds:0xd283cc00,al
  405864:	pop    ecx
  405865:	lods   al,BYTE PTR ds:[esi]
  405866:	add    BYTE PTR ds:0x8eff00cc,ah
  40586c:	mov    WORD PTR [ebx],es
  40586e:	inc    DWORD PTR [eax+eax*1+0x0]
  405872:	int3   
  405873:	mov    al,0xc0
  405875:	sub    BYTE PTR [eax],al
  405877:	inc    esp
  405878:	dec    DWORD PTR [ecx-0x340acf01]
  40587e:	call   FWORD PTR [ecx-0x73000034]
  405884:	out    dx,eax
  405885:	rol    BYTE PTR [ebx-0x7626],cl
  40588b:	mov    ebx,gs
  40588d:	add    BYTE PTR [eax],al
  40588f:	hlt    
  405890:	inc    DWORD PTR [eax]
  405892:	add    al,ah
  405894:	xchg   esp,eax
  405895:	scas   eax,DWORD PTR es:[edi]
  405896:	adc    ebx,0xffffffff
  405899:	inc    DWORD PTR [eax]
  40589b:	enter  0xb35b,0xff
  40589f:	cmp    eax,0x65ff8300
  4058a4:	cwde   
  4058a5:	xor    DWORD PTR [eax],eax
  4058a7:	cmp    eax,0x8689cc00
  4058ac:	cmp    BYTE PTR [eax],bl
  4058ae:	sub    DWORD PTR [edi-0x1],0xffffffff
  4058b2:	add    BYTE PTR [edx-0x7c],ah
  4058b5:	stos   BYTE PTR es:[edi],al
  4058b6:	adc    DWORD PTR [edx],0xffffff83
  4058b9:	add    BYTE PTR [eax],al
  4058bb:	js     0x40590b
  4058bd:	aaa    
  4058be:	call   DWORD PTR [edi]
  4058c0:	add    BYTE PTR [ecx-0x65f7c37d],cl
  4058c6:	add    BYTE PTR [eax+0x5a000089],dl
  4058cc:	addr16 fdivr st,st(7)
  4058cf:	aad    0x0
  4058d1:	(bad)  
  4058d2:	(bad)  
  4058d3:	fst    QWORD PTR [esi]
  4058d5:	scas   al,BYTE PTR es:[edi]
  4058d6:	(bad)  
  4058d7:	mov    ecx,0xe40083ff
  4058dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058dd:	in     eax,0x0
  4058df:	std    
  4058e0:	add    bh,bh
  4058e2:	int3   
  4058e3:	dec    edi
  4058e4:	test   al,0x77
  4058e6:	push   DWORD PTR [ecx-0x1]
  4058e9:	add    BYTE PTR [eax],al
  4058eb:	inc    eax
  4058ec:	in     eax,0xaa
  4058ee:	add    ah,ch
  4058f0:	int3   
  4058f1:	dec    DWORD PTR [ecx+0xc7424d]
  4058f7:	pushf  
  4058f8:	add    BYTE PTR [eax],al
  4058fa:	add    BYTE PTR [ebp+0x3c],bl
  4058fd:	pop    eax
  4058fe:	(bad)  
  4058ff:	call   0x65c9e204
  405904:	popf   
  405905:	vcvtpd2dq xmm7,ymm7
  405909:	(bad)  
  40590a:	jmp    esi
  40590c:	sbb    edx,esp
  40590e:	jmp    FWORD PTR [ecx-0x2c000000]
  405914:	fcom   QWORD PTR [edi-0x1]
  405917:	push   es
  405918:	add    bh,bh
  40591a:	inc    DWORD PTR [esi]
  40591c:	xor    ch,BYTE PTR [ebp-0x7c00f777]
  405922:	mov    DWORD PTR [eax+0x59000981],ebx
  405928:	add    bh,bh
  40592a:	(bad)  
  40592b:	jle    0x40599f
  40592d:	dec    ebx
  40592e:	jmp    FWORD PTR [ecx]
  405930:	int3   
  405931:	add    BYTE PTR [ebx-0xcbf0be],al
  405937:	or     bh,bh
  405939:	add    BYTE PTR [eax],al
  40593b:	push   0x60
  40593d:	data16 add BYTE PTR [ebx],bh
  405940:	add    bh,bh
  405942:	add    cl,bh
  405944:	aas    
  405945:	mov    ecx,esp
  405947:	cli    
  405948:	mov    edi,edi
  40594a:	dec    DWORD PTR [ebp+0x834765]
  405950:	add    BYTE PTR [ebx-0x520f4d01],al
  405956:	push   DWORD PTR [esi]
  405958:	add    BYTE PTR [eax],al
  40595a:	int3   
  40595b:	call   0x40c9aa84
  405960:	add    DWORD PTR [eax],0x0
  405963:	push   ds
  405964:	lahf   
  405965:	pop    ss
  405966:	mov    DWORD PTR [edi],eax
  405968:	add    bh,bh
  40596a:	jmp    ebx
  40596c:	mov    DWORD PTR [eax],ebp
  40596e:	add    eax,0xffffffff
  405971:	(bad)  
  405972:	(bad)  
  405973:	std    
  405974:	mov    eax,0xff45ffda
  405979:	(bad)  
  40597a:	push   ecx
  40597c:	xor    DWORD PTR [ecx],0xffffff83
  40597f:	sbb    cl,ah
  405981:	add    bh,bh
  405983:	pusha  
  405984:	mov    edx,0xff0300d9
  405989:	cmp    edi,0xffffff95
  40598c:	arpl   WORD PTR [esi-0x7d],bp
  40598f:	sbb    esp,ecx
  405991:	add    bh,bh
  405993:	out    dx,al
  405994:	lods   eax,DWORD PTR ds:[esi]
  405995:	scas   eax,DWORD PTR es:[edi]
  405996:	int3   
  405997:	(bad)  
  405998:	inc    DWORD PTR [eax]
  40599a:	add    BYTE PTR [ecx+0x17],bh
  40599d:	test   DWORD PTR [eax],0xff0083fd
  4059a3:	out    0x2,eax
  4059a5:	enter  0x2500,0xff
  4059a9:	(bad)  
  4059aa:	inc    DWORD PTR [ebx+0x32]
  4059ad:	jb     0x4059af
  4059af:	push   eax
  4059b0:	mov    edi,edi
  4059b2:	add    BYTE PTR [ebx+0x33cc6578],al
  4059b8:	add    DWORD PTR [eax],0xffffff89
  4059bb:	into   
  4059bc:	mov    ch,0xfe
  4059be:	adc    DWORD PTR [ecx],0xffffffff
  4059c1:	dec    esp
  4059c3:	sbb    eax,0xb700cb57
  4059c8:	inc    DWORD PTR [eax]
  4059ca:	cmp    ebx,0xffffffdc
  4059cd:	test   al,0x0
  4059cf:	sbb    al,0x0
  4059d1:	add    BYTE PTR [ecx-0x6fc9a2],cl
  4059d7:	loopne 0x4059d8
  4059d9:	add    ah,cl
  4059db:	gs aam 0x9
  4059de:	jmp    DWORD PTR [ecx-0x5c7c007d]
  4059e4:	and    al,0xc0
  4059e6:	inc    DWORD PTR [edi-0x1]
  4059e9:	(bad)  
  4059ea:	call   DWORD PTR [esp+ebp*4+0x28]
  4059ee:	add    bh,bl
  4059f0:	int3   
  4059f1:	inc    DWORD PTR [eax]
  4059f3:	adc    ecx,DWORD PTR [ebx-0xd]
  4059f6:	dec    DWORD PTR [ebp-0x35000001]
  4059fc:	sub    DWORD PTR [ecx-0x7c002100],ebp
  405a02:	call   FWORD PTR [esi]
  405a04:	mov    ds,WORD PTR [ecx+0x0]
  405a07:	sbb    BYTE PTR [eax],al
  405a09:	add    BYTE PTR [eax],al
  405a0b:	and    DWORD PTR [eax-0x765fffc5],0xffffffff
  405a12:	or     edx,0xffffffd2
  405a15:	pop    edx
  405a16:	add    BYTE PTR [eax+eax*1-0x18847d00],dl
  405a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a1e:	push   DWORD PTR [ebp+0x0]
  405a21:	add    BYTE PTR [eax],al
  405a23:	stos   DWORD PTR es:[edi],eax
  405a24:	cmp    dh,ch
  405a26:	call   DWORD PTR [eax+eax*1-0x1]
  405a2a:	dec    DWORD PTR [edx]
  405a2c:	xchg   DWORD PTR [edx],edx
  405a2e:	jmp    DWORD PTR [esi-0x54ff767d]
  405a34:	mov    eax,0xffad00e7
  405a39:	(bad)  
  405a3a:	jmp    eax
  405a3c:	scas   al,BYTE PTR es:[edi]
  405a3d:	pop    ds
  405a3e:	(bad)  
  405a3f:	mov    esp,0x6fffccff
  405a44:	rol    DWORD PTR [ecx-0x1],0x5
  405a48:	cmp    edi,0xffffffff
  405a4b:	std    
  405a4c:	ret    0xff0c
  405a4f:	inc    DWORD PTR [eax]
  405a51:	(bad)  
  405a52:	jmp    DWORD PTR [eax]
  405a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a55:	xchg   esi,eax
  405a56:	int3   
  405a57:	ins    BYTE PTR es:[edi],dx
  405a58:	dec    esp
  405a5a:	xor    DWORD PTR [edx+0x64],0xffffffe6
  405a5e:	call   DWORD PTR [eax+0x2cff0000]
  405a64:	jno    0x405a5e
  405a66:	mov    DWORD PTR [ebx-0x1],ebx
  405a69:	mov    DWORD PTR [eax],eax
  405a6b:	and    ah,BYTE PTR [edi]
  405a6d:	dec    ebp
  405a6e:	add    dh,cl
  405a70:	add    DWORD PTR [eax],0x0
  405a73:	cdq    
  405a74:	fiadd  DWORD PTR [edi-0x7c8a7d]
  405a7a:	call   ebx
  405a7c:	inc    esi
  405a7d:	fadd   QWORD PTR [eax]
  405a7f:	inc    eax
  405a80:	mov    edi,edi
  405a82:	jmp    DWORD PTR ds:0xe6ff0017
  405a88:	or     esp,0xffffffff
  405a8b:	cmc    
  405a8c:	lods   al,BYTE PTR ds:[esi]
  405a8d:	mov    DWORD PTR [ebx-0xffffa2],eax
  405a93:	enter  0x199a,0xff
  405a97:	adc    DWORD PTR [eax],eax
  405a99:	dec    esp
  405a9b:	push   esi
  405a9c:	outs   dx,DWORD PTR ds:[esi]
  405a9d:	(bad)  
  405aa0:	add    bh,bh
  405aa2:	push   ebx
  405aa4:	lea    ebp,[ebx]
  405aa6:	call   edx
  405aa8:	(bad)  
  405aa9:	(bad)  
  405aaa:	inc    DWORD PTR [esi+0x18]
  405aad:	mov    bh,bh
  405aaf:	das    
  405ab0:	int3   
  405ab1:	mov    edi,edi
  405ab3:	scas   al,BYTE PTR es:[edi]
  405ab4:	jmp    0x405a94
  405ab6:	add    BYTE PTR [ebp-0x1dff0001],cl
  405abc:	ret    
  405abd:	mov    bh,0xff
  405abf:	mov    ds:0x1effff83,eax
  405ac4:	push   ecx
  405ac5:	pop    ecx
  405ac6:	adc    ebx,0x0
  405ac9:	add    ah,cl
  405acb:	call   0xff:0x5c007147
  405ad2:	jmp    DWORD PTR [edi]
  405ad4:	(bad)  
  405ad5:	xor    DWORD PTR [ebx-0x7c000072],eax
  405adb:	jo     0x405a8f
  405add:	mov    dl,0xff
  405adf:	mov    bh,bh
  405ae1:	add    BYTE PTR [ebx-0x7f62db],al
  405ae7:	ret    
  405ae8:	(bad)  
  405ae9:	inc    DWORD PTR [eax]
  405aeb:	out    0xec,eax
  405aed:	adc    al,0xcc
  405aef:	ins    DWORD PTR es:[edi],dx
  405af0:	inc    DWORD PTR [eax]
  405af2:	call   FWORD PTR [edx]
  405af4:	mov    ds:0xff538328,eax
  405af9:	add    BYTE PTR [ecx-0x406fbf],cl
  405aff:	sbb    eax,0x930000ff
  405b04:	pop    eax
  405b05:	adc    eax,0xff003f89
  405b0a:	sub    DWORD PTR [eax],0xffffff84
  405b0d:	dec    eax
  405b0e:	sbb    DWORD PTR [ecx-0x1],0x0
  405b12:	int3   
  405b13:	push   ebx
  405b14:	xlat   BYTE PTR ds:[ebx]
  405b15:	mov    ah,0xff
  405b17:	icebp  
  405b18:	add    BYTE PTR [eax],al
  405b1a:	inc    DWORD PTR [edx]
  405b1c:	nop
  405b1d:	jbe    0x405b1f
  405b1f:	and    bh,bh
  405b21:	int3   
  405b22:	inc    DWORD PTR [edx-0xe]
  405b25:	push   0x89cc0600
  405b2a:	(bad)  
  405b2b:	cmp    BYTE PTR [eax+0x9e83e6],al
  405b31:	dec    DWORD PTR [ecx-0x76aa9b00]
  405b37:	cmp    edi,edi
  405b39:	dec    DWORD PTR [ecx-0xa04a3f]
  405b3f:	ins    DWORD PTR es:[edi],dx
  405b40:	(bad)  
  405b41:	(bad)  
  405b42:	(bad)  
  405b43:	jge    0x405b68
  405b45:	call   0xd2cc:0xffff1583
  405b4c:	outs   dx,DWORD PTR ds:[esi]
  405b4d:	fdiv   st(7),st
  405b4f:	lahf   
  405b50:	inc    DWORD PTR [eax]
  405b52:	push   DWORD PTR [eax+edx*1+0x970017]
  405b59:	inc    DWORD PTR [eax]
  405b5b:	push   cs
  405b5c:	xor    DWORD PTR [ebp-0x7d],ebp
  405b5f:	sahf   
  405b60:	(bad)  
  405b61:	(bad)  
  405b62:	inc    DWORD PTR [ecx+0x6e]
  405b65:	les    eax,FWORD PTR [eax]
  405b67:	jmp    0x290c5b6c
  405b6c:	daa    
  405b6d:	scas   eax,DWORD PTR es:[edi]
  405b6e:	mov    DWORD PTR [ecx],eax
  405b70:	(bad)  
  405b71:	dec    DWORD PTR [ecx-0xe81d3c]
  405b77:	mov    DWORD PTR [eax],eax
  405b79:	or     esp,0x40
  405b7c:	cmp    DWORD PTR [edx],0xffff2083
  405b82:	jmp    FWORD PTR [eax-0xf00981b]
  405b88:	inc    DWORD PTR [eax]
  405b8a:	add    ch,dl
  405b8c:	sbb    edx,DWORD PTR [ebx-0x76761b7d]
  405b92:	add    BYTE PTR [ecx-0x76ff4298],bh
  405b98:	inc    DWORD PTR [ebx-0x5013787d]
  405b9e:	jmp    DWORD PTR [ecx-0x59330100]
  405ba4:	cmp    al,BYTE PTR [edx]
  405ba6:	add    BYTE PTR [edx-0x1],cl
  405ba9:	add    bh,bh
  405bab:	inc    esi
  405bac:	pop    eax
  405bad:	mov    cl,0x0
  405baf:	sub    eax,0xbc00ff83
  405bb4:	icebp  
  405bb5:	loope  0x405bb7
  405bb7:	loopne 0x405bb8
  405bb9:	inc    DWORD PTR [eax]
  405bbb:	xchg   ebx,eax
  405bbc:	push   ebx
  405bbd:	clc    
  405bbe:	dec    DWORD PTR [ecx]
  405bc0:	add    bh,bh
  405bc2:	jmp    DWORD PTR [ebx+0x24ff9cf6]
  405bc8:	inc    DWORD PTR [eax]
  405bca:	add    BYTE PTR [ebp-0x5aff6d47],bh
  405bd0:	add    ah,cl
  405bd2:	add    BYTE PTR [eax+ebp*4],ch
  405bd5:	ret    
  405bd6:	jmp    FWORD PTR [ebp-0x1]
  405bd9:	int3   
  405bda:	mov    DWORD PTR [ebx-0x107cab31],edx
  405be0:	add    BYTE PTR [ebx-0x4d13057d],al
  405be6:	call   FWORD PTR [ebp+0xaff00ff]
  405bec:	fs sbb al,0xff
  405bef:	add    eax,0x3283ff83
  405bf4:	ficom  DWORD PTR [edi+edi*8+0x1c]
  405bf8:	inc    DWORD PTR [eax]
  405bfa:	add    BYTE PTR [edi-0x6a],ch
  405bfd:	mov    ecx,0x89ff8683
  405c02:	add    dl,ch
  405c04:	addr16 mov edi,0xccff2000
  405c0a:	cmp    DWORD PTR [edx],0xb
  405c0d:	pop    esp
  405c0e:	dec    DWORD PTR [eax]
  405c10:	inc    DWORD PTR [eax]
  405c12:	dec    esi
  405c14:	add    al,0xcf
  405c16:	add    BYTE PTR [esi],ah
  405c18:	inc    DWORD PTR [eax]
  405c1a:	int3   
  405c1b:	cld    
  405c1c:	jge    0x405c7a
  405c1e:	add    bl,ah
  405c20:	add    DWORD PTR [eax],0x0
  405c23:	pop    ebx
  405c24:	mov    WORD PTR [ebx-0x1],ss
  405c27:	push   ebx
  405c28:	(bad)  
  405c29:	(bad)  
  405c2a:	jmp    DWORD PTR [eax]
  405c2c:	and    DWORD PTR [edi+edi*8+0x8900d3],ebp
  405c33:	and    ah,BYTE PTR [ecx+0x728319]
  405c39:	mov    edi,edi
  405c3b:	in     al,0x1a
  405c3d:	das    
  405c3e:	jmp    esi
  405c40:	cmp    edi,0x0
  405c43:	into   
  405c44:	mov    edx,0x89c789b0
  405c49:	mov    DWORD PTR [ebx-0xcfa772],eax
  405c4f:	mov    BYTE PTR [eax],0x0
  405c52:	jmp    FWORD PTR [ebx-0x24]
  405c55:	jno    0x405be0
  405c57:	test   eax,0x38ffffff
  405c5c:	or     DWORD PTR [esi],esp
  405c5e:	add    cl,cl
  405c60:	add    BYTE PTR [ebx+0x6f115983],al
  405c66:	mov    DWORD PTR [edi-0x1],edi
  405c69:	inc    DWORD PTR [eax]
  405c6b:	leave  
  405c6c:	in     al,dx
  405c6d:	mov    edx,0xffffb4ff
  405c72:	sub    ebx,0xffffff8b
  405c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c76:	add    BYTE PTR [eax-0x507cff01],al
  405c7c:	cmp    ah,BYTE PTR [eax-0x1]
  405c7f:	jge    0x405c04
  405c81:	add    bh,bh
  405c83:	test   BYTE PTR [esi-0x3],0x0
  405c87:	je     0x405c0c
  405c89:	add    BYTE PTR [eax],al
  405c8b:	dec    edi
  405c8c:	mov    ecx,0xffdbff55
  405c91:	add    BYTE PTR [ebx-0x3391f39e],al
  405c97:	cmp    bh,bh
  405c99:	(bad)  
  405c9a:	call   FWORD PTR [ebp-0x22ff3de8]
  405ca0:	inc    DWORD PTR [eax]
  405ca2:	push   DWORD PTR ds:0x4bff753b
  405ca8:	cmp    edi,0x0
  405cab:	add    DWORD PTR [edx-0x32ff10],eax
  405cb1:	add    ah,cl
  405cb3:	out    0x78,al
  405cb5:	xchg   ecx,eax
  405cb6:	add    BYTE PTR ds:0xc483ff00,ch
  405cbc:	ret    0x24
  405cbf:	loop   0x405cc0
  405cc1:	add    BYTE PTR [ecx+0x8a0629],cl
  405cc7:	cwde   
  405cc8:	int3   
  405cc9:	(bad)  
  405cca:	jmp    DWORD PTR [eax]
  405ccc:	add    BYTE PTR [edi-0x7c00ec01],al
  405cd2:	inc    ecx
  405cd4:	mov    esi,0xff6cffe7
  405cd9:	(bad)  
  405cda:	inc    DWORD PTR [ebp-0x9]
  405cdd:	xchg   DWORD PTR [eax],eax
  405cdf:	loop   0x405c64
  405ce1:	(bad)  
  405ce2:	(bad)  
  405ce3:	mov    esi,0xb1ff08ee
  405ce8:	add    bh,bh
  405cea:	dec    DWORD PTR [edx-0x38ff83b9]
  405cf0:	int3   
  405cf1:	add    ah,cl
  405cf3:	ins    DWORD PTR es:[edi],dx
  405cf4:	pushf  
  405cf5:	inc    ax
  405cf8:	add    ah,cl
  405cfa:	add    BYTE PTR [esi+0x26],ah
  405cfd:	xchg   ecx,eax
  405cfe:	sbb    DWORD PTR [esi-0x1],0x0
  405d02:	add    bh,ch
  405d04:	rol    BYTE PTR [ebx],1
  405d06:	xor    DWORD PTR [edi+0x15830000],0xffffffe5
  405d0d:	ja     0x405c98
  405d0f:	push   0xffffff83
  405d11:	(bad)  
  405d12:	jmp    edx
  405d14:	add    BYTE PTR [ecx],0x0
  405d17:	and    edi,edi
  405d19:	int3   
  405d1a:	add    BYTE PTR [ebx],cl
  405d1c:	mov    ah,0xab
  405d1e:	int3   
  405d1f:	inc    ecx
  405d20:	inc    DWORD PTR [ebx-0x27ffeb00]
  405d26:	inc    DWORD PTR [eax-0x7b000100]
  405d2c:	adc    ebx,DWORD PTR [esi-0xff0a7d]
  405d32:	call   FWORD PTR [esi-0x31]
  405d35:	sahf   
  405d36:	call   FWORD PTR [edi+edi*8]
  405d39:	add    bh,bh
  405d3b:	imul   ebp,esi,0xfff2ff51
  405d41:	add    bh,bh
  405d43:	push   0x6bff78bc
  405d48:	add    BYTE PTR [eax],al
  405d4a:	int3   
  405d4b:	std    
  405d4c:	shl    DWORD PTR [ebx+eax*4-0x65],1
  405d50:	add    DWORD PTR [eax],0xffffffff
  405d53:	pop    eax
  405d54:	inc    esp
  405d55:	inc    ebp
  405d56:	call   FWORD PTR [eax+eax*1]
  405d59:	(bad)  
  405d5a:	jmp    ebx
  405d5c:	push   0xff03ff54
  405d61:	inc    DWORD PTR [eax]
  405d63:	inc    ebp
  405d64:	adc    DWORD PTR [edi],0x835d00
  405d6a:	add    BYTE PTR [eax],dl
  405d6c:	ins    BYTE PTR es:[edi],dx
  405d6d:	inc    eax
  405d6e:	add    BYTE PTR [ecx+0x6cffffff],bh
  405d74:	shl    DWORD PTR [ebx],0xcc
  405d77:	xchg   esi,eax
  405d78:	add    BYTE PTR [eax],al
  405d7a:	add    BYTE PTR [ebx],dl
  405d7c:	rcl    edx,0x0
  405d7f:	das    
  405d80:	add    bh,bh
  405d82:	or     DWORD PTR [edx-0x36ff9793],0xffffff83
  405d89:	cmp    edi,0xffffff87
  405d8c:	test   BYTE PTR [esi],bl
  405d8e:	jmp    FWORD PTR [esi]
  405d90:	cmp    edi,0xffffffff
  405d93:	es test al,0x72
  405d96:	add    al,bh
  405d98:	(bad)  
  405d99:	(bad)  
  405d9a:	call   DWORD PTR [edi+0x7a83dc9a]
  405da0:	add    bh,bh
  405da2:	call   ecx
  405da4:	and    al,0xd5
  405da6:	mov    DWORD PTR [eax+0x58ff00ff],esp
  405dac:	rcl    DWORD PTR [edx],0x83
  405daf:	sar    bh,0xff
  405db2:	inc    DWORD PTR [ebx+0x24]
  405db5:	(bad)  
  405db7:	(bad)  
  405db8:	inc    DWORD PTR [eax]
  405dba:	add    al,al
  405dbc:	xchg   edx,eax
  405dbd:	ds int3 
  405dbf:	dec    ebp
  405dc0:	add    BYTE PTR [ebx-0x5ed6fe01],al
  405dc6:	dec    ecx
  405dc8:	inc    DWORD PTR [eax]
  405dca:	push   DWORD PTR [edi]
  405dcc:	cmp    bl,BYTE PTR [ebp-0x1]
  405dcf:	inc    edx
  405dd0:	cmp    edi,0xffffffff
  405dd3:	or     al,0xed
  405dd5:	inc    esp
  405dd6:	push   DWORD PTR [eax+eax*1+0x1e538300]
  405ddd:	adc    cl,ah
  405ddf:	idiv   edi
  405de1:	add    bh,bh
  405de3:	inc    eax
  405de4:	xor    al,0xd2
  405de6:	int3   
  405de7:	mov    edx,0xe000ccff
  405dec:	popa   
  405ded:	in     eax,0xff
  405def:	aam    0x83
  405df1:	add    DWORD PTR [eax],0x19
  405df4:	clc    
  405df5:	mov    edi,edi
  405df7:	xchg   ebx,eax
  405df8:	add    bh,bh
  405dfa:	add    BYTE PTR [eax+0xc],dl
  405dfd:	imul   edi,edi,0xffffffc8
  405e00:	add    BYTE PTR [ebx+0x71c69800],al
  405e06:	call   FWORD PTR [edx+0x0]
  405e09:	(bad)  
  405e0a:	jmp    FWORD PTR [ebx+ecx*1+0x69]
  405e0e:	call   FWORD PTR [ebp+0x19ff0083]
  405e14:	push   esi
  405e15:	xchg   edi,edi
  405e17:	mov    ch,0xff
  405e19:	dec    DWORD PTR [ecx-0xe0597]
  405e1f:	jecxz  0x405daa
  405e21:	cmp    edi,0xffffffb6
  405e24:	mov    ah,0x83
  405e26:	(bad)  
  405e27:	fdivr  st,st(7)
  405e29:	int3   
  405e2a:	inc    DWORD PTR [ebp-0x487c80b5]
  405e30:	add    BYTE PTR [eax],al
  405e32:	dec    DWORD PTR [eax-0x500d97d]
  405e38:	add    bh,bh
  405e3a:	jmp    FWORD PTR [ecx+0x32ffd6cf]
  405e40:	(bad)  
  405e41:	inc    DWORD PTR [eax]
  405e43:	cmp    dh,BYTE PTR [edi-0x71]
  405e46:	inc    DWORD PTR [ebx-0x1]
  405e49:	int3   
  405e4a:	jmp    FWORD PTR [edx+ecx*1]
  405e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e4e:	add    BYTE PTR [ebx+0x0],cl
  405e51:	add    bh,bh
  405e53:	sar    DWORD PTR [ecx+0x59],cl
  405e56:	add    BYTE PTR [ecx],bh
  405e58:	mov    edi,edi
  405e5a:	add    ah,dl
  405e5c:	add    esp,DWORD PTR [ebx-0xff0b77]
  405e62:	add    BYTE PTR [ebx],ch
  405e64:	dec    ebx
  405e65:	adc    eax,0xff00c383
  405e6a:	add    BYTE PTR [eax],ch
  405e6c:	jnp    0x405eac
  405e6e:	int3   
  405e6f:	cmp    bh,bh
  405e71:	add    bh,bh
  405e73:	punpckhbw mm4,QWORD PTR [ebx]
  405e76:	add    BYTE PTR [edx],ah
  405e78:	int3   
  405e79:	int3   
  405e7a:	int3   
  405e7b:	int3   
  405e7c:	int3   
  405e7d:	int3   
  405e7e:	int3   
  405e7f:	int3   
  405e80:	out    0x1f,eax
  405e82:	cmp    edi,0x0
  405e85:	pop    esi
  405e86:	add    BYTE PTR [ecx],dh
  405e88:	dec    esi
  405e89:	mov    cl,0xff
  405e8b:	mov    edi,edi
  405e8d:	out    0xff,al
  405e8f:	and    ch,BYTE PTR [ebp+0x45]
  405e92:	cmp    edi,0x0
  405e95:	and    al,0x0
  405e97:	mov    al,0x44
  405e99:	mov    esp,0x7e00ffff
  405e9e:	add    BYTE PTR [edx-0x39],bh
  405ea1:	loopne 0x405ea2
  405ea3:	inc    DWORD PTR [eax]
  405ea5:	pop    edx
  405ea6:	call   FWORD PTR [ecx+0x75]
  405ea9:	xchg   edx,eax
  405eaa:	(bad)  
  405eab:	(bad)  
  405eac:	call   FWORD PTR [esi+0x641cb483]
  405eb2:	inc    DWORD PTR [eax]
  405eb4:	jmp    DWORD PTR [ebx]
  405eb6:	push   DWORD PTR [edi-0xa6d2]
  405ebc:	add    bh,bl
  405ebe:	jmp    DWORD PTR [edx-0x66]
  405ec1:	mov    es,WORD PTR [ebx-0x960100]
  405ec7:	js     0x405e63
  405ec9:	inc    DWORD PTR [eax]
  405ecb:	or     DWORD PTR [ecx+0x7eb48326],0x79
  405ed2:	inc    DWORD PTR [ebx-0x4900fc34]
  405ed8:	jb     0x405e82
  405eda:	add    DWORD PTR [eax],0xffffffff
  405edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ede:	(bad)  
  405edf:	jnp    0x405e8c
  405ee1:	fdiv   st(7),st
  405ee3:	inc    DWORD PTR [eax]
  405ee5:	mov    ds:0x7fc4a6cc,al
  405eea:	add    BYTE PTR [ebx+0x73ff85ff],al
  405ef0:	and    eax,0xcc00ffb8
  405ef5:	out    0x83,eax
  405ef7:	mov    bl,0xf7
  405ef9:	clc    
  405efa:	int3   
  405efb:	add    bh,bh
  405efd:	cmp    al,0x83
  405eff:	je     0x405ee9
  405f01:	sbb    DWORD PTR [eax],eax
  405f03:	add    BYTE PTR [eax],al
  405f05:	je     0x405e90
  405f07:	mov    eax,0xffff3b60
  405f0c:	mov    DWORD PTR [ebx+0x0],esi
  405f0f:	je     0x405f8c
  405f11:	push   cs
  405f12:	add    bh,bh
  405f14:	add    bh,ch
  405f16:	cmp    DWORD PTR [eax],0xffffffef
  405f19:	cli    
  405f1a:	dec    esp
  405f1c:	int3   
  405f1d:	out    0xff,al
  405f1f:	sub    eax,0xffff10ac
  405f24:	add    BYTE PTR [ebp-0x1],dh
  405f27:	mov    cl,0xab
  405f29:	sub    al,0xff
  405f2b:	inc    DWORD PTR [ebx+0x3f27ff96]
  405f31:	retf   
  405f32:	(bad)  
  405f33:	(bad)  
  405f34:	jmp    ebp
  405f36:	dec    DWORD PTR [eax+0x5a]
  405f39:	cwde   
  405f3a:	dec    esp
  405f3c:	jmp    FWORD PTR [ecx]
  405f3e:	add    BYTE PTR [ebp+0x5f],dh
  405f41:	dec    edi
  405f42:	cmp    edi,0xffffffff
  405f45:	and    bh,bh
  405f47:	stos   BYTE PTR es:[edi],al
  405f48:	cdq    
  405f49:	sub    eax,0x81ffff89
  405f4e:	inc    DWORD PTR [eax+0xff91f8]
  405f54:	add    BYTE PTR [eax-0x7d],dh
  405f57:	data16 adc al,0x1
  405f5a:	add    DWORD PTR [eax],0xffffffff
  405f5d:	mov    dh,0x83
  405f5f:	xchg   DWORD PTR ds:0xff00cce0,edi
  405f65:	jae    0x405eea
  405f67:	xor    BYTE PTR [eax],dh
  405f69:	cmp    edi,edi
  405f6b:	add    bh,bh
  405f6d:	xlat   BYTE PTR ds:[ebx]
  405f6e:	dec    ebp
  405f70:	pop    ebx
  405f71:	pop    ebp
  405f72:	mov    edi,edi
  405f74:	add    BYTE PTR [ebx-0x1],cl
  405f77:	jg     0x405f1e
  405f79:	call   0xa2c42c07
  405f7e:	call   eax
  405f80:	xor    al,0x5e
  405f82:	(bad)  
  405f83:	inc    DWORD PTR [ebx+0x4957ff2f]
  405f89:	fadd   QWORD PTR [eax]
  405f8b:	inc    DWORD PTR [ebx+0x6d8a00c2]
  405f91:	inc    edx
  405f92:	(bad)  
  405f93:	(bad)  
  405f94:	call   esp
  405f96:	(bad)  
  405f97:	mov    ebp,0xb1bb
  405f9c:	inc    DWORD PTR [ecx-0x107db37d]
  405fa2:	inc    DWORD PTR [ebx-0x5b7cb67d]
  405fa8:	out    0xd0,al
  405faa:	add    BYTE PTR [ebx-0x7d33cc00],al
  405fb0:	inc    BYTE PTR gs:[eax]
  405fb3:	int3   
  405fb4:	add    BYTE PTR [ebx-0x1],ch
  405fb7:	and    BYTE PTR [ebx],dh
  405fb9:	lods   al,BYTE PTR ds:[esi]
  405fba:	mov    DWORD PTR [eax],eax
  405fbc:	inc    edx
  405fbe:	jmp    DWORD PTR [edi-0x29]
  405fc1:	push   eax
  405fc2:	int3   
  405fc3:	inc    DWORD PTR [eax]
  405fc5:	bswap  esp
  405fc7:	jmp    DWORD PTR [eax+eiz*2]
  405fca:	cmp    edi,0xffffffff
  405fcd:	ins    DWORD PTR es:[edi],dx
  405fce:	int3   
  405fcf:	pop    edi
  405fd0:	arpl   bx,di
  405fd2:	add    BYTE PTR [ebx-0x16ffe001],al
  405fd8:	xor    BYTE PTR [esi],0x0
  405fdb:	(bad)  
  405fdc:	inc    DWORD PTR [ebx+eax*4]
  405fdf:	jb     0x405f83
  405fe1:	jnp    0x405faf
  405fe3:	inc    DWORD PTR [eax]
  405fe5:	stc    
  405fe6:	add    BYTE PTR [edx-0xc],al
  405fe9:	addr16 int3 
  405feb:	add    DWORD PTR [eax],0x56
  405fee:	(bad)  
  405fef:	out    dx,eax
  405ff0:	clc    
  405ff1:	ret    
  405ff2:	add    BYTE PTR [eax],al
  405ff4:	xor    DWORD PTR [ecx-0x77],0xd
  405ff8:	dec    edi
  405ff9:	cld    
  405ffa:	int3   
  405ffb:	int3   
  405ffc:	add    BYTE PTR [esi-0x7838b201],bl
  406002:	(bad)  
  406003:	(bad)  
  406004:	dec    DWORD PTR [edx-0x22162801]
  40600a:	add    ah,cl
  40600c:	int3   
  40600d:	popf   
  40600e:	add    bh,al
  406010:	retf   
  406011:	loopne 0x406012
  406013:	inc    DWORD PTR [ebx+0x15d5ff67]
  406019:	les    eax,FWORD PTR [ebx-0xd43301]
  40601f:	stos   DWORD PTR es:[edi],eax
  406020:	cld    
  406021:	add    eax,DWORD PTR [ebx+0x9affff]
  406027:	cmp    bh,cl
  406029:	in     eax,dx
  40602a:	mov    DWORD PTR [eax],eax
  40602c:	add    BYTE PTR [ebx-0x1bea1c00],cl
  406032:	inc    DWORD PTR [ebx+0x42ff7f00]
  406038:	add    esi,DWORD PTR [ebp+0x0]
  40603b:	inc    DWORD PTR [eax]
  40603d:	loopne 0x405fc2
  40603f:	mov    DWORD PTR [esi+eiz*2-0x37007c7d],edi
  406046:	and    DWORD PTR [ecx-0x23],0xffffffb3
  40604a:	add    BYTE PTR [eax],al
  40604c:	sbb    DWORD PTR [eax-0x402e7001],0xffffffff
  406053:	add    DWORD PTR [eax],0xffffff8e
  406056:	or     ebx,0x67
  406059:	iret   
  40605a:	add    bh,bh
  40605c:	push   DWORD PTR [ebx]
  40605e:	add    BYTE PTR [eax+edi*2],ah
  406061:	fwait
  406062:	int3   
  406063:	int3   
  406064:	xor    DWORD PTR [edx],0xffffffff
  406067:	sbb    al,0xcf
  406069:	push   es
  40606a:	int3   
  40606b:	(bad)  
  40606c:	call   FWORD PTR [esi-0x1]
  40606f:	cld    
  406070:	mov    ebx,esi
  406072:	dec    esp
  406074:	dec    DWORD PTR [edx+0x0]
  406077:	shl    BYTE PTR [edx-0xdd],1
  40607d:	dec    edx
  40607e:	adc    DWORD PTR [edi-0x24],0xffffffee
  406082:	int3   
  406083:	add    DWORD PTR [ebx+0x2455fffb],0xffffffae
  40608a:	(bad)  
  40608b:	inc    DWORD PTR [eax]
  40608d:	sti    
  40608e:	push   DWORD PTR [edi-0x7cff3e5c]
  406094:	jmp    DWORD PTR [edi+edi*8]
  406097:	daa    
  406098:	add    al,0xf9
  40609a:	inc    DWORD PTR [eax]
  40609c:	add    BYTE PTR [eax+0xf5b0800],al
  4060a2:	inc    DWORD PTR [eax]
  4060a4:	add    BYTE PTR [eax+eax*1],dl
  4060a7:	or     al,0x27
  4060a9:	push   esi
  4060aa:	(bad)  
  4060ab:	inc    DWORD PTR [eax]
  4060ad:	xchg   ecx,eax
  4060ae:	jmp    FWORD PTR [ecx+ebx*2+0xffff85]
  4060b5:	inc    ebx
  4060b6:	jmp    FWORD PTR [ecx]
  4060b8:	xor    bl,BYTE PTR [ebx-0x38ff0001]
  4060be:	add    BYTE PTR [edx],dh
  4060c0:	test   eax,0xff83833c
  4060c5:	popf   
  4060c6:	jmp    FWORD PTR [edi]
  4060c8:	std    
  4060c9:	je     0x4060cb
  4060cb:	cmp    edi,0xffffffb9
  4060ce:	int3   
  4060cf:	pop    esi
  4060d0:	jge    0x40610b
  4060d2:	inc    DWORD PTR [ebx+0x2f00b800]
  4060d8:	mov    eax,ds:0xff00d0
  4060dd:	or     eax,DWORD PTR [eax]
  4060df:	(bad)  
  4060e0:	cli    
  4060e1:	jb     0x4060e3
  4060e3:	inc    DWORD PTR [eax]
  4060e5:	jecxz  0x4060e6
  4060e7:	aas    
  4060e8:	ss lahf 
  4060ea:	add    BYTE PTR [eax],al
  4060ec:	add    BYTE PTR [esi-0x35db2500],cl
  4060f2:	add    bh,bh
  4060f4:	jmp    FWORD PTR [ebx+eax*4]
  4060f7:	dec    ebp
  4060f8:	out    0xb1,eax
  4060fa:	(bad)  
  4060fb:	(bad)  
  4060fc:	(bad)  
  4060fd:	cmp    eax,0x282d200
  406102:	(bad)  
  406103:	(bad)  
  406104:	jmp    FWORD PTR [ebx-0x4f2c01]
  40610a:	add    BYTE PTR [ebx-0x17ff6e77],al
  406110:	pop    edi
  406111:	inc    esi
  406112:	inc    DWORD PTR [eax]
  406114:	add    BYTE PTR [ebp+0x0],ch
  406117:	jno    0x40618c
  406119:	jo     0x40611b
  40611b:	add    BYTE PTR [eax],al
  40611d:	loope  0x40611e
  40611f:	push   ecx
  406120:	(bad)  
  406121:	(bad)  
  406123:	add    DWORD PTR [eax],0xffffffe7
  406126:	add    BYTE PTR [edi-0x1c],bh
  406129:	les    eax,FWORD PTR [ebx+0xde0083]
  40612f:	out    0x74,al
  406131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406132:	mov    DWORD PTR [eax],eax
  406134:	add    dh,ah
  406136:	add    BYTE PTR [edx],ch
  406138:	and    DWORD PTR [esi-0x1],eax
  40613b:	add    bh,bh
  40613d:	add    BYTE PTR ds:[edi-0x76003a43],al
  406144:	dec    edi
  406146:	add    BYTE PTR [ebx-0x13],bl
  406149:	mov    al,0xff
  40614b:	add    DWORD PTR [eax],0x47
  40614e:	jmp    DWORD PTR [esp+edi*1]
  406151:	or     al,0xff
  406153:	add    BYTE PTR [eax],al
  406155:	fiadd  DWORD PTR [ebx-0xb9d47b]
  40615b:	add    DWORD PTR [eax],0x28
  40615e:	adc    DWORD PTR [eax+0x20],0xffffff96
  406162:	inc    DWORD PTR [eax]
  406164:	inc    DWORD PTR [ecx]
  406166:	int3   
  406167:	retf   0x964c
  40616a:	add    ah,cl
  40616c:	add    BYTE PTR [eax],ah
  40616e:	(bad)  
  40616f:	(bad)  ds:0xffff0069
  406175:	mov    DWORD PTR cs:[ebx+0x8330ed],edi
  40617c:	push   DWORD PTR [eax]
  40617e:	add    ch,dl
  406180:	jmp    0x406103
  406182:	dec    esp
  406184:	add    dh,dl
  406186:	add    BYTE PTR [eax-0x80],ah
  406189:	dec    esi
  40618a:	add    bh,bh
  40618c:	add    BYTE PTR [eax+eax*1-0xc4221],al
  406193:	add    bh,bh
  406195:	or     bh,bh
  406197:	in     eax,dx
  406198:	pandn  mm1,QWORD PTR [ecx+0xe400cc]
  40619f:	xlat   BYTE PTR ds:[ebx]
  4061a0:	mov    edi,0x83ffff65
  4061a5:	leave  
  4061a6:	and    DWORD PTR [ebp+edi*4-0xdb],0x48
  4061ae:	mov    esp,edi
  4061b0:	das    
  4061b1:	data16 add BYTE PTR [eax],al
  4061b4:	int3   
  4061b5:	and    edi,edi
  4061b7:	add    eax,0xfff969
  4061bc:	push   esi
  4061be:	push   DWORD PTR [esi+0x11]
  4061c1:	int3   
  4061c2:	add    BYTE PTR [eax],al
  4061c4:	call   ecx
  4061c6:	call   DWORD PTR [edx-0x44]
  4061c9:	mov    esi,0x24890089
  4061ce:	(bad)  
  4061cf:	jnp    0x4061e5
  4061d1:	mov    BYTE PTR [eax],0xcc
  4061d4:	or     DWORD PTR [edx],0xffffffff
  4061d7:	out    0xad,eax
  4061d9:	loopne 0x4061da
  4061db:	cmp    edi,0xc
  4061de:	add    BYTE PTR [ecx+0x6d],bl
  4061e1:	icebp  
  4061e2:	(bad)  
  4061e3:	inc    DWORD PTR [ebx-0x6af00ec]
  4061e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061ea:	(bad)  
  4061eb:	dec    DWORD PTR [ecx-0x57df007a]
  4061f1:	(bad)  
  4061f2:	inc    DWORD PTR [eax]
  4061f4:	push   DWORD PTR [eax]
  4061f6:	add    BYTE PTR [ebp+esi*4+0xccfc],al
  4061fd:	bnd call DWORD PTR [ebx-0x7a]
  406201:	fcos   
  406203:	inc    DWORD PTR [ebx+0x1df8ff0f]
  406209:	add    BYTE PTR [ebx+0x6bff00],0xf5
  406210:	pop    ss
  406211:	or     BYTE PTR [eax],al
  406213:	inc    DWORD PTR [eax]
  406215:	retf   0x8c00
  406218:	cmp    esp,esp
  40621a:	add    DWORD PTR [eax],0xffffffff
  40621d:	pushf  
  40621e:	push   DWORD PTR [ebp-0x76338d37]
  406224:	jmp    DWORD PTR [ebx-0x1]
  406227:	push   es
  406228:	push   ds
  406229:	mov    ch,0xff
  40622b:	(bad)  
  40622c:	(bad)  
  40622d:	cmp    eax,0x1376b800
  406232:	cmp    edi,0x0
  406235:	cmp    bh,bh
  406237:	mov    ds:0xff34f2,al
  40623c:	jmp    FWORD PTR [eax+eax*1-0x77]
  406240:	mov    ah,0x12
  406242:	(bad)  
  406243:	(bad)  
  406244:	(bad)  
  406245:	mov    eax,0x47597400
  40624a:	(bad)  
  40624b:	dec    DWORD PTR [ecx-0x6b4200b0]
  406251:	cwde   
  406252:	int3   
  406253:	add    BYTE PTR [eax],al
  406255:	sar    edi,1
  406257:	outs   dx,BYTE PTR ds:[esi]
  406258:	or     ah,dl
  40625a:	add    BYTE PTR [eax],al
  40625c:	inc    ecx
  40625e:	sbb    ebp,0xffffffdd
  406261:	sar    edi,cl
  406263:	inc    DWORD PTR [eax]
  406265:	jmp    0xffff:0xc06073cc
  40626c:	mov    DWORD PTR [ecx],ebp
  40626e:	jmp    FWORD PTR [ecx+0xff7f3c]
  406274:	add    BYTE PTR [edi+0x4cd60f83],cl
  40627a:	add    bh,bh
  40627c:	dec    esi
  40627e:	jmp    FWORD PTR [eax-0x6a]
  406281:	mov    dh,0x0
  406283:	cmp    edi,0x77
  406286:	add    DWORD PTR [ebx],0x3e
  406289:	inc    esi
  40628a:	add    bh,bh
  40628c:	dec    DWORD PTR [esp+ecx*8-0x16]
  406290:	je     0x4062ca
  406292:	cmp    edi,0x0
  406295:	gs (bad) 
  406297:	mov    edi,0x89cc511d
  40629c:	mov    DWORD PTR [ebp-0x1d8dda00],edi
  4062a2:	(bad)  
  4062a3:	dec    DWORD PTR [ecx+0xd21832b]
  4062a9:	xor    BYTE PTR [ecx-0xa50001],cl
  4062af:	cmp    al,0x77
  4062b1:	ins    BYTE PTR es:[edi],dx
  4062b2:	add    BYTE PTR [ebx-0x3eff1b01],al
  4062b8:	aaa    
  4062b9:	sub    cl,ah
  4062bb:	inc    DWORD PTR [eax]
  4062bd:	adc    cl,ah
  4062bf:	adc    DWORD PTR [edx],eax
  4062c1:	jmp    0x5e4063c5
  4062c6:	mov    esp,esi
  4062c8:	sbb    ebx,DWORD PTR [eax+eax*1+0x0]
  4062cc:	and    DWORD PTR [edx-0x4eb6697d],0xffffffff
  4062d3:	or     DWORD PTR [ecx+0x32660010],0xffffffc4
  4062da:	int3   
  4062db:	or     esp,0xffffffe5
  4062de:	add    BYTE PTR [ebp+0x2f],bl
  4062e1:	idiv   bh
  4062e3:	dec    esp
  4062e5:	jecxz  0x40626a
  4062e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062e8:	jo     0x40632c
  4062ea:	(bad)  
  4062eb:	inc    DWORD PTR [ebx+0x4cbfcc97]
  4062f1:	fild   WORD PTR [eax]
  4062f3:	(bad)  
  4062f4:	jmp    FWORD PTR [edx]
  4062f6:	call   FWORD PTR [ebx]
  4062f8:	push   esp
  4062f9:	inc    eax
  4062fa:	or     DWORD PTR [ecx+0x5e005e00],0x3a
  406301:	push   ebp
  406302:	int3   
  406303:	int3   
  406304:	add    BYTE PTR [edx-0x5ba5e17d],dl
  40630a:	add    BYTE PTR [ebx-0x1800f97d],al
  406310:	jle    0x406323
  406312:	inc    DWORD PTR [eax]
  406314:	int3   
  406315:	loope  0x406316
  406317:	pop    edi
  406318:	sti    
  406319:	dec    eax
  40631a:	int3   
  40631b:	(bad)  
  40631c:	dec    ebp
  40631e:	push   DWORD PTR [ecx]
  406320:	fwait
  406321:	add    edi,edi
  406323:	add    bh,bh
  406325:	jge    0x406327
  406327:	sti    
  406328:	inc    esi
  406329:	adc    eax,0xae8300ff
  40632e:	call   ecx
  406330:	inc    eax
  406331:	repnz (bad) 
  406333:	(bad)  
  406334:	call   FWORD PTR [edi]
  406336:	or     DWORD PTR [ebp-0x33a82b],0x0
  40633d:	sbb    bh,bh
  40633f:	loope  0x406321
  406341:	ins    DWORD PTR es:[edi],dx
  406342:	add    BYTE PTR [eax],al
  406344:	xor    DWORD PTR [ebx],0x0
  406347:	push   cs
  406348:	push   edx
  406349:	mov    bh,0xff
  40634b:	(bad)  
  40634c:	inc    DWORD PTR [eax+eax*1+0x29]
  406350:	scas   eax,DWORD PTR es:[edi]
  406351:	or     al,0x89
  406353:	add    BYTE PTR [ecx-0x27f20017],cl
  406359:	pusha  
  40635a:	add    BYTE PTR [ebx-0x15003601],al
  406360:	call   0x8a0d62c9
  406365:	dec    ecx
  406366:	mov    DWORD PTR [edi-0x33008122],ebx
  40636c:	add    BYTE PTR [esi],bl
  40636e:	sbb    DWORD PTR [ebx],0xffffffe1
  406371:	rol    BYTE PTR [eax],1
  406373:	inc    DWORD PTR [eax]
  406375:	(bad)  
  406376:	int3   
  406377:	lods   al,BYTE PTR ds:[esi]
  406378:	out    dx,eax
  406379:	sub    edi,edi
  40637b:	add    bh,bh
  40637d:	mov    esi,0x539f6aff
  406382:	add    BYTE PTR [eax],al
  406384:	dec    ebx
  406386:	mov    DWORD PTR [ebp-0x337692f6],eax
  40638c:	(bad)  
  40638d:	cmp    bh,bh
  40638f:	cmp    eax,DWORD PTR [ecx]
  406391:	mov    ds:0x2689ccff,al
  406396:	add    BYTE PTR [ebx+0xffaab9],al
  40639c:	add    ah,bh
  40639e:	adc    DWORD PTR [esi-0x3b],0xffffffc3
  4063a2:	inc    DWORD PTR [eax]
  4063a4:	call   DWORD PTR [eax+eax*1-0x2d640f]
  4063ab:	inc    DWORD PTR [eax]
  4063ad:	ja     0x40637b
  4063af:	js     0x4063ad
  4063b1:	jne    0x406336
  4063b3:	int3   
  4063b4:	add    BYTE PTR [edi-0x41a4ac01],dh
  4063ba:	(bad)  
  4063bb:	(bad)  
  4063bc:	(bad)  
  4063bd:	fiadd  WORD PTR [eax]
  4063bf:	mov    dh,0x69
  4063c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c2:	add    DWORD PTR [eax],0x0
  4063c5:	xor    edi,edi
  4063c7:	inc    esp
  4063c8:	ins    BYTE PTR es:[edi],dx
  4063c9:	jns    0x4063ca
  4063cb:	cmp    edi,0xffffff98
  4063ce:	inc    ebp
  4063d0:	push   edx
  4063d1:	or     eax,0x700ff00
  4063d6:	add    BYTE PTR [edi-0x33330747],ah
  4063dc:	cmp    DWORD PTR [ecx],0x0
  4063df:	mov    ds:0xffc537,al
  4063e4:	and    DWORD PTR [edx-0x77],0x25
  4063e8:	xlat   BYTE PTR ds:[ebx]
  4063e9:	xchg   esi,eax
  4063ea:	mov    DWORD PTR [eax],eax
  4063ec:	dec    DWORD PTR ds:0xc03e4cff
  4063f2:	inc    DWORD PTR [eax]
  4063f4:	add    BYTE PTR [ecx-0x34],dl
  4063f7:	lahf   
  4063f8:	(bad)  
  4063f9:	push   cs
  4063fa:	or     esp,0xffffffff
  4063fd:	cwde   
  4063fe:	add    bh,bh
  406400:	add    BYTE PTR [esi+0x1ffffff],bh
  406406:	jmp    DWORD PTR [eax]
  406408:	addr16 push eax
  40640a:	int3   
  40640b:	inc    DWORD PTR [ebx-0x53ff9a]
  406411:	out    dx,eax
  406412:	inc    DWORD PTR [eax]
  406414:	add    BYTE PTR [edi+edi*8],bh
  406417:	js     0x4063d3
  406419:	imul   edi,edi,0x0
  40641c:	dec    DWORD PTR [ecx]
  40641e:	add    BYTE PTR [ecx-0x337cc233],bh
  406424:	jmp    FWORD PTR [edx-0x1]
  406427:	sbb    ebp,DWORD PTR ds:0x830038
  40642d:	inc    BYTE PTR [ebx-0x7ef16f]
  406433:	cmp    edi,0x7e
  406436:	push   DWORD PTR [ebp+0xffd3d3]
  40643c:	adc    DWORD PTR ds:0x2ae4ab83,0xffffffff
  406443:	int3   
  406444:	add    bh,dh
  406446:	inc    ebx
  406448:	fs mov edx,0xb100ffff
  40644e:	add    BYTE PTR ds:0xff004c82,ah
  406454:	mov    DWORD PTR [eax+eax*1],esi
  406457:	shl    DWORD PTR [edx],1
  406459:	sldt   WORD PTR [eax]
  40645c:	int3   
  40645d:	mov    BYTE PTR [eax],0x8f
  406460:	(bad)  
  406461:	adc    eax,DWORD PTR [ebx+0xdcffff]
  406467:	mov    ecx,0x83ff0658
  40646c:	add    BYTE PTR [edx+0x0],al
  40646f:	test   al,0x3d
  406471:	pusha  
  406472:	add    BYTE PTR [ecx-0x1c7c8e34],cl
  406478:	jno    0x40648d
  40647a:	inc    DWORD PTR [eax]
  40647c:	add    bh,bl
  40647e:	int3   
  40647f:	test   eax,0xffff6eb0
  406484:	add    BYTE PTR [esi+0x0],bh
  406487:	jmp    0x5000:0xfffffc00
  40648e:	inc    esp
  406490:	loopne 0x4064d8
  406492:	add    BYTE PTR [eax],al
  406494:	dec    DWORD PTR [esi]
  406496:	dec    DWORD PTR [ecx+edx*4+0x2c]
  40649a:	add    bh,bh
  40649c:	call   esp
  40649e:	push   DWORD PTR [edx-0x73]
  4064a1:	and    cl,BYTE PTR [ecx-0x3375ff01]
  4064a7:	std    
  4064a8:	push   0xff890081
  4064ad:	xor    DWORD PTR [ebx+0x367095],eax
  4064b3:	add    BYTE PTR [ecx+0x465600d9],cl
  4064b9:	or     bh,bh
  4064bb:	inc    DWORD PTR [eax]
  4064bd:	int    0x83
  4064bf:	sub    DWORD PTR [ecx-0x76ff0040],ebx
  4064c5:	scas   al,BYTE PTR es:[edi]
  4064c6:	add    BYTE PTR [esi-0x8],ah
  4064c9:	or     DWORD PTR [ecx-0x76017c77],0x76
  4064d0:	sahf   
  4064d1:	das    
  4064d2:	(bad)  
  4064d3:	(bad)  
  4064d4:	jmp    DWORD PTR [ecx-0xe87d01]
  4064da:	add    bh,bh
  4064dc:	add    BYTE PTR [edx+0x4b24ecff],ah
  4064e2:	inc    DWORD PTR [ebx-0x5800fe00]
  4064e8:	add    dl,BYTE PTR [ecx-0x46ffff01]
  4064ee:	jmp    DWORD PTR [esp+edi*2+0xffe0]
  4064f5:	out    0xff,al
  4064f7:	sbb    dl,BYTE PTR [edx]
  4064f9:	test   eax,0x31ff8383
  4064fe:	cmp    DWORD PTR [edx+0xcc6a9b],0xffffffff
  406505:	pop    ebx
  406506:	int3   
  406507:	in     eax,0x65
  406509:	fadd   DWORD PTR [ebx-0x420034]
  40650f:	mov    ds:0xed40,eax
  406514:	add    BYTE PTR [ecx],dl
  406516:	add    DWORD PTR [edi-0x68ec],0xffffffff
  40651d:	jmp    0x40651e
  40651f:	fwait
  406520:	cmp    BYTE PTR [eax+eax*1-0x5767d],0x75
  406528:	pop    esp
  406529:	push   eax
  40652a:	inc    DWORD PTR [ebx+0x74cc60ff]
  406530:	and    ch,BYTE PTR [edi]
  406532:	int3   
  406533:	add    BYTE PTR [eax],al
  406535:	inc    esi
  406536:	call   DWORD PTR [esi]
  406538:	inc    eax
  406539:	xor    DWORD PTR [ecx+0x6bff00],ecx
  40653f:	mov    edi,0xccff50e7
  406544:	int3   
  406545:	ins    BYTE PTR es:[edi],dx
  406546:	inc    DWORD PTR [ecx-0x8718]
  40654c:	add    BYTE PTR [eax-0x7c85201],bh
  406552:	int3   
  406553:	add    BYTE PTR [ecx-0x3c640097],cl
  406559:	dec    esp
  40655a:	add    BYTE PTR [eax],al
  40655c:	add    ch,ah
  40655e:	call   DWORD PTR [eax]
  406560:	jnp    0x40652e
  406562:	add    bh,bh
  406564:	add    BYTE PTR [eax+0x7936200],bl
  40656a:	cmp    edi,0x0
  40656d:	iret   
  40656e:	jmp    DWORD PTR [esi+0x8d53]
  406574:	inc    DWORD PTR [ebx+0x655fda00]
  40657a:	add    bh,bh
  40657c:	jmp    DWORD PTR [ebx]
  40657e:	call   FWORD PTR [edx-0x124d]
  406584:	jmp    DWORD PTR [eax+eax*1]
  406587:	out    0x44,eax
  406589:	dec    ecx
  40658a:	add    bh,bh
  40658c:	call   DWORD PTR [ecx+0x6db1adff]
  406592:	inc    DWORD PTR [eax]
  406594:	(bad)  
  406595:	cli    
  406596:	add    BYTE PTR [ecx],dl
  406598:	out    0xae,al
  40659a:	add    BYTE PTR [eax],al
  40659c:	add    bh,dh
  40659e:	add    BYTE PTR [ebx-0x7cda33],bl
  4065a4:	push   DWORD PTR [edi]
  4065a6:	(bad)  
  4065a7:	cli    
  4065a8:	xchg   ecx,ebx
  4065aa:	inc    DWORD PTR [ebx+0x1d00bbff]
  4065b0:	in     eax,0x1f
  4065b2:	add    BYTE PTR [eax],al
  4065b4:	int3   
  4065b5:	enter  0xffff,0xdd
  4065b9:	inc    eax
  4065ba:	add    BYTE PTR [eax],al
  4065bc:	call   esp
  4065be:	dec    edi
  4065c0:	pop    ecx
  4065c1:	leave  
  4065c2:	cmp    edi,0xffffffff
  4065c5:	add    DWORD PTR [eax],0xfffffffa
  4065c8:	popa   
  4065c9:	dec    edi
  4065ca:	add    BYTE PTR [ebx-0x1a00457d],al
  4065d0:	pop    es
  4065d1:	idiv   bh
  4065d3:	cmp    edi,0x69
  4065d6:	jmp    FWORD PTR [ecx+0x9]
  4065d9:	push   ecx
  4065da:	add    ah,cl
  4065dc:	(bad)  
  4065dd:	mov    edx,0x820b97ff
  4065e2:	(bad)  
  4065e3:	inc    DWORD PTR [eax]
  4065e5:	xchg   edi,eax
  4065e6:	add    BYTE PTR [edi-0x4f],bh
  4065e9:	xchg   esp,eax
  4065ea:	add    BYTE PTR [ebx+0x6affcaff],al
  4065f0:	cs retf 0xff89
  4065f4:	mov    esp,edi
  4065f6:	add    dh,ah
  4065f8:	jp     0x406606
  4065fa:	add    BYTE PTR [eax],al
  4065fc:	(bad)  
  4065fd:	mov    esi,0x53641e00
  406602:	int3   
  406603:	(bad)  
  406604:	(bad)  
  406605:	(bad)  
  406607:	cmp    BYTE PTR [eax],dh
  406609:	cld    
  40660a:	add    bh,bh
  40660c:	xor    DWORD PTR [ebx+0xf8beff],0xffffff89
  406613:	(bad)  
  406614:	(bad)  
  406615:	fadd   QWORD PTR [eax]
  406617:	iret   
  406618:	icebp  
  406619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40661a:	cmp    edi,0xffffffff
  40661d:	into   
  40661e:	jmp    DWORD PTR [edi+eiz*2-0x7c3333cf]
  406625:	push   eax
  406626:	(bad)  
  406627:	fistp  DWORD PTR [edx]
  406629:	pop    ds
  40662a:	cmp    edi,0x0
  40662d:	in     al,dx
  40662e:	add    edx,0x7c
  406631:	aaa    
  406632:	mov    DWORD PTR [eax],eax
  406634:	and    DWORD PTR [ebx-0x44ffbf01],0xffffffff
  40663b:	(bad)  
  40663c:	dec    DWORD PTR ds:0x5173d883
  406642:	dec    esp
  406644:	add    BYTE PTR [esi-0x1],dl
  406647:	push   0x6
  406649:	adc    al,0x89
  40664b:	add    BYTE PTR [ebx-0x5c88ff9d],al
  406651:	dec    edx
  406652:	add    BYTE PTR [eax],al
  406654:	cmp    esp,0xffffffff
  406657:	inc    ebp
  406658:	add    eax,0x83cccf
  40665d:	mov    al,0xcc
  40665f:	fild   QWORD PTR [ebp-0x2b]
  406662:	mov    DWORD PTR [ebx-0x4200217d],eax
  406668:	push   cs
  406669:	xchg   ebp,eax
  40666a:	add    BYTE PTR [ebx-0x67ca57d],al
  406670:	dec    edi
  406671:	cmp    ecx,DWORD PTR [ecx+0x1b83ff]
  406677:	sub    dl,ah
  406679:	adc    bh,bh
  40667b:	dec    esp
  40667d:	cdq    
  40667e:	int3   
  40667f:	xor    DWORD PTR [ecx+0xff8916],ecx
  406685:	stos   DWORD PTR es:[edi],eax
  406686:	(bad)  
  406687:	clc    
  406688:	jnp    0x4066cd
  40668a:	add    bh,bh
  40668c:	inc    DWORD PTR [edx]
  40668e:	add    BYTE PTR [edi+0x4c],ah
  406691:	retf   
  406692:	int3   
  406693:	add    BYTE PTR [eax],al
  406695:	in     al,dx
  406696:	mov    DWORD PTR [ebx-0xffacf7],ebp
  40669c:	int3   
  40669d:	sar    bh,1
  40669f:	(bad)  
  4066a0:	pop    ecx
  4066a1:	cmp    BYTE PTR [eax],al
  4066a3:	inc    DWORD PTR [ebx+0x547683c9]
  4066a9:	(bad)  
  4066aa:	(bad)  
  4066ab:	inc    DWORD PTR [eax]
  4066ad:	dec    ebx
  4066ae:	int3   
  4066af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066b0:	imul   ebp,DWORD PTR [ecx],0xffffffff
  4066b3:	add    BYTE PTR [eax],al
  4066b5:	inc    esp
  4066b6:	jmp    DWORD PTR [esi+0x53]
  4066b9:	out    0x83,eax
  4066bb:	or     DWORD PTR [ecx-0x4c47000d],0xffffff86
  4066c2:	inc    DWORD PTR [eax]
  4066c4:	add    DWORD PTR [ebp-0x1],0x7e
  4066c8:	cli    
  4066c9:	into   
  4066ca:	cmp    edi,0xffffffcc
  4066cd:	les    eax,FWORD PTR [eax]
  4066cf:	in     al,dx
  4066d0:	out    dx,al
  4066d1:	sahf   
  4066d2:	(bad)  
  4066d3:	inc    DWORD PTR [eax]
  4066d5:	push   ecx
  4066d6:	(bad)  
  4066d7:	fidiv  WORD PTR [ebx]
  4066d9:	popf   
  4066da:	inc    DWORD PTR [eax]
  4066dc:	add    cl,ah
  4066de:	add    BYTE PTR [esi+eiz*4-0x1c],ah
  4066e2:	add    DWORD PTR [ebx-0x7b7cf901],0xfffffff2
  4066e9:	ror    esp,1
  4066eb:	dec    esp
  4066ed:	add    DWORD PTR [ebx-0x82923a],eax
  4066f3:	(bad)  
  4066f4:	inc    DWORD PTR [edx+0x0]
  4066f7:	jnp    0x4066af
  4066f9:	mov    dh,0xff
  4066fb:	add    BYTE PTR [eax],al
  4066fd:	pop    edi
  4066fe:	mov    DWORD PTR [esi],ecx
  406700:	sbb    eax,esp
  406702:	inc    DWORD PTR [eax]
  406704:	jmp    FWORD PTR [ecx+ecx*4+0x24]
  406708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406709:	mov    edi,edi
  40670b:	(bad)  
  40670c:	push   esp
  40670e:	add    BYTE PTR [ecx],ch
  406710:	xchg   ebp,eax
  406711:	rol    DWORD PTR [ebx+0x228300],cl
  406717:	sahf   
  406718:	mov    eax,0xff8389aa
  40671d:	bound  eax,QWORD PTR [eax]
  40671f:	in     al,dx
  406720:	lods   al,BYTE PTR ds:[esi]
  406721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406722:	dec    esp
  406724:	add    edx,0x0
  406727:	test   esp,edx
  406729:	cmp    eax,0xe000ff83
  40672e:	add    DWORD PTR [ecx],0x0
  406731:	out    dx,eax
  406732:	(bad)  
  406733:	inc    DWORD PTR [ebx+0xd6d00f6]
  406739:	add    bh,bh
  40673b:	(bad)  
  40673c:	call   FWORD PTR [ebx+0x0]
  40673f:	xor    cl,BYTE PTR [edx-0x25]
  406742:	inc    DWORD PTR [eax]
  406744:	dec    DWORD PTR [edi-0x1]
  406747:	mov    bl,0x9b
  406749:	aam    0xff
  40674b:	mov    DWORD PTR [ebx+0x1179ffc0],eax
  406751:	pop    ecx
  406752:	inc    DWORD PTR [ebx-0x72000601]
  406758:	(bad)  
  406759:	repz (bad) 
  40675b:	inc    DWORD PTR [eax]
  40675d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40675e:	add    BYTE PTR [edx+0x2d],cl
  406761:	test   eax,0x4eff0000
  406766:	push   DWORD PTR ds:0xff561d
  40676c:	jmp    FWORD PTR [ecx+0x5d5a3b00]
  406772:	(bad)  
  406773:	dec    esp
  406775:	push   edi
  406776:	add    BYTE PTR [ebp-0x7633d53b],dh
  40677c:	inc    DWORD PTR ds:0x3485383
  406782:	inc    DWORD PTR [ebx+0x3100c0ff]
  406788:	dec    ecx
  406789:	test   BYTE PTR [eax],al
  40678b:	int3   
  40678c:	push   DWORD PTR [ebx+0x1c90c5ff]
  406792:	(bad)  
  406793:	(bad)  
  406794:	dec    DWORD PTR [eax-0x1]
  406797:	xchg   ebp,eax
  406798:	js     0x406777
  40679a:	add    bh,bh
  40679c:	call   esi
  40679e:	push   DWORD PTR [edx+ebp*4]
  4067a1:	outs   dx,DWORD PTR ds:[esi]
  4067a2:	add    bh,bh
  4067a4:	push   DWORD PTR [esi+0x0]
  4067a7:	xchg   ebx,eax
  4067a8:	bound  ecx,QWORD PTR [edi+edi*8]
  4067ab:	inc    DWORD PTR [eax]
  4067ad:	inc    ebp
  4067ae:	add    BYTE PTR [ecx-0x1d73],ch
  4067b4:	mov    DWORD PTR [edx-0x1],ebx
  4067b7:	cdq    
  4067b8:	fwait
  4067b9:	inc    esi
  4067ba:	add    BYTE PTR [eax],al
  4067bc:	mov    esp,edi
  4067be:	add    BYTE PTR ds:0xff763f,dl
  4067c4:	add    dh,ch
  4067c6:	int3   
  4067c7:	or     BYTE PTR [eax+ebp*4-0x1],al
  4067cb:	dec    DWORD PTR [ecx-0x4516763c]
  4067d1:	sub    bh,bh
  4067d3:	inc    DWORD PTR [ebx+0x5a57ffe8]
  4067d9:	(bad)  
  4067da:	(bad)  
  4067db:	inc    DWORD PTR [eax]
  4067dd:	hlt    
  4067de:	int3   
  4067df:	and    cl,dl
  4067e1:	adc    al,0xff
  4067e3:	add    DWORD PTR [ebx+0x15e000aa],0xffffffaf
  4067ea:	(bad)  
  4067eb:	(bad)  
  4067ec:	push   DWORD PTR [ecx+0x2a7879ff]
  4067f2:	inc    DWORD PTR [eax]
  4067f4:	jmp    FWORD PTR [ecx-0x2769bd7d]
  4067fa:	add    ah,cl
  4067fc:	add    ch,bh
  4067fe:	jmp    FWORD PTR [edx-0xff6087]
  406804:	call   esi
  406806:	add    dh,dl
  406808:	mov    esi,0xff00cc0b
  40680d:	test   BYTE PTR [eax],0xdb
  406810:	and    edx,DWORD PTR [edi]
  406812:	add    DWORD PTR [eax],0xffffffff
  406815:	pop    ss
  406816:	mov    DWORD PTR [ecx-0x32],ebx
  406819:	lea    eax,[eax]
  40681b:	add    bh,bh
  40681d:	outs   dx,DWORD PTR ds:[esi]
  40681e:	add    DWORD PTR [esi-0x1a],0xffffff9a
  406822:	inc    DWORD PTR [eax]
  406824:	int3   
  406825:	sub    eax,0xd5633dcc
  40682a:	add    bh,bh
  40682c:	add    BYTE PTR [edx+0x1b571900],al
  406832:	add    BYTE PTR [eax],al
  406834:	push   DWORD PTR [esi-0x1]
  406837:	sbb    esp,ecx
  406839:	int3   
  40683a:	dec    esp
  40683c:	add    bh,ch
  40683e:	int3   
  40683f:	lds    edx,FWORD PTR [edx-0x6d]
  406845:	icebp  
  406846:	(bad)  
  406847:	in     al,dx
  406848:	in     eax,0x22
  40684a:	add    BYTE PTR [eax],al
  40684c:	jmp    DWORD PTR [edi+edi*8+0x37]
  406850:	cdq    
  406851:	pop    ss
  406852:	inc    DWORD PTR [ebx+0x75cc34ff]
  406858:	dec    esi
  406859:	sub    ah,cl
  40685b:	add    ah,cl
  40685d:	dec    edi
  40685e:	add    ch,bl
  406860:	jmp    0x4067ef
  406862:	mov    edi,edi
  406864:	push   DWORD PTR [edx]
  406866:	inc    ecx
  406868:	mov    BYTE PTR [ebx],cl
  40686a:	cmp    edi,0xffffffff
  40686d:	lahf   
  40686e:	call   FWORD PTR [edx+0x20]
  406871:	ret    
  406872:	(bad)  
  406873:	(bad)  
  406874:	jmp    FWORD PTR [eax]
  406876:	jmp    DWORD PTR [ebx-0x53]
  406879:	loope  0x40687a
  40687b:	add    bh,bh
  40687d:	lahf   
  40687e:	inc    DWORD PTR [ebx]
  406880:	jnp    0x40686d
  406882:	add    bh,bh
  406884:	sub    DWORD PTR [edi],0xffffffff
  406887:	mov    edi,0xff836826
  40688c:	(bad)  
  40688d:	cld    
  40688e:	int3   
  40688f:	out    dx,eax
  406890:	cmp    eax,0xffcc00e5
  406895:	sbb    eax,0x94a1bf00
  40689a:	inc    DWORD PTR [eax]
  40689c:	add    BYTE PTR ds:0x4f417a83,ah
  4068a2:	add    ah,cl
  4068a4:	add    BYTE PTR [eax+eax*1+0x7c],dh
  4068a8:	xlat   BYTE PTR ds:[ebx]
  4068a9:	adc    BYTE PTR [ebx+0x60ff00],al
  4068af:	mov    al,0xe
  4068b1:	mov    bh,bh
  4068b3:	add    bh,bh
  4068b5:	xor    eax,0x4db8afff
  4068ba:	inc    DWORD PTR [eax]
  4068bc:	and    DWORD PTR [edx+0x2b682d00],0x0
  4068c3:	int3   
  4068c4:	(bad)  
  4068c5:	jle    0x4068c7
  4068c7:	add    bl,dh
  4068c9:	mov    al,ds:0x6a00ff00
  4068ce:	(bad)  
  4068cf:	jns    0x40694d
  4068d1:	dec    esi
  4068d2:	add    bh,bh
  4068d4:	mov    DWORD PTR [ebp-0x1],esi
  4068d7:	das    
  4068d8:	ins    DWORD PTR es:[edi],dx
  4068d9:	push   0x18ffffff
  4068de:	add    bl,ah
  4068e0:	call   0x140682b
  4068e5:	icebp  
  4068e6:	call   ebp
  4068e8:	mov    al,ds:0xccff00a2
  4068ed:	mov    esp,0x803a71cc
  4068f2:	add    bh,bh
  4068f4:	mov    DWORD PTR [ecx],ebx
  4068f6:	cmp    DWORD PTR [edx],0x63
  4068f9:	add    edi,edi
  4068fb:	(bad)  
  4068fc:	inc    eax
  4068fe:	mov    DWORD PTR [edx-0xe04e],esi
  406904:	call   FWORD PTR [ebp-0x1]
  406907:	ret    
  406908:	daa    
  406909:	fiadd  DWORD PTR [eax]
  40690b:	add    bh,bh
  40690d:	(bad)  
  40690f:	and    dl,BYTE PTR [esi+0xffff56]
  406915:	xor    cl,ah
  406917:	mov    esi,0x8983e59b
  40691c:	add    BYTE PTR [edi-0x1],bl
  40691f:	out    dx,eax
  406920:	aad    0xa4
  406922:	int3   
  406923:	(bad)  
  406924:	(bad)  
  406925:	jle    0x406926
  406927:	push   0x1f
  406929:	mov    edi,?
  40692b:	inc    DWORD PTR [ebx+0x7cfbffc6]
  406931:	mov    edi,0x65ff89ff
  406936:	inc    DWORD PTR [ebx-0x74]
  406939:	mov    eax,0x7affcc89
  40693e:	add    BYTE PTR [ecx-0x6d],ch
  406941:	jbe    0x406942
  406943:	inc    DWORD PTR [eax]
  406945:	ds int3 
  406947:	ja     0x406998
  406949:	or     edi,edi
  40694b:	inc    DWORD PTR [ebx-0x4a56ffd6]
  406951:	hlt    
  406952:	add    ah,cl
  406954:	(bad)  
  406955:	jns    0x406956
  406957:	data16 mov dh,al
  40695a:	add    BYTE PTR [eax],al
  40695c:	jmp    FWORD PTR ds:0xc7490300
  406962:	or     DWORD PTR [ecx+0x79ff3bff],0xffffffab
  406969:	sub    bh,bh
  40696b:	inc    DWORD PTR [eax]
  40696d:	add    al,BYTE PTR [eax]
  40696f:	mov    ch,0xd6
  406971:	add    DWORD PTR [ebx-0x7cf87c01],0xffcce12e
  40697b:	(bad)  
  40697c:	jmp    FWORD PTR ds:0x92cd900
  406982:	(bad)  
  406983:	dec    esp
  406985:	pop    eax
  406986:	jmp    FWORD PTR [edi+0x6e]
  406989:	push   eax
  40698a:	dec    esp
  40698c:	call   FWORD PTR [esi-0x7d]
  40698f:	fscale 
  406991:	inc    ebp
  406992:	cmp    edi,0xffffffff
  406995:	add    eax,0x7159a8ff
  40699a:	inc    DWORD PTR [eax]
  40699c:	inc    DWORD PTR [ebx-0x2f57b27d]
  4069a2:	add    bh,bh
  4069a4:	(bad)  
  4069a5:	ds int3 
  4069a7:	mov    ecx,0x83b345
  4069ac:	int3   
  4069ad:	jne    0x4069ae
  4069af:	jp     0x406940
  4069b1:	cmp    edi,edi
  4069b3:	add    BYTE PTR [eax],al
  4069b5:	push   edi
  4069b6:	adc    DWORD PTR [edi],0xfffffff1
  4069b9:	mov    ds:0xb60089ff,al
  4069be:	(bad)  
  4069bf:	(bad)  ds:0xffff99
  4069c5:	jb     0x4069c7
  4069c7:	out    dx,al
  4069c8:	add    al,0xd9
  4069ca:	(bad)  
  4069cb:	(bad)  
  4069cc:	call   FWORD PTR [eax-0x1]
  4069cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069d0:	loope  0x406964
  4069d2:	inc    DWORD PTR [eax]
  4069d4:	int3   
  4069d5:	pusha  
  4069d6:	add    BYTE PTR [ecx],cl
  4069d8:	cmp    edi,0x0
  4069db:	add    bh,bh
  4069dd:	add    cl,ah
  4069df:	mov    WORD PTR [ebx],es
  4069e1:	cmp    edi,edi
  4069e3:	inc    DWORD PTR [eax]
  4069e5:	add    BYTE PTR [eax],al
  4069e7:	jb     0x406a21
  4069e9:	fs int3 
  4069eb:	int3   
  4069ec:	(bad)  
  4069ed:	mov    esp,0xbcbf4dcc
  4069f2:	inc    DWORD PTR [eax]
  4069f4:	call   FWORD PTR [edi+0x0]
  4069f7:	std    
  4069f8:	int3   
  4069f9:	mov    eax,0xe7ffff83
  4069fe:	int3   
  4069ff:	sbb    DWORD PTR [eax],0xcc1a
  406a05:	cmc    
  406a06:	add    dl,bl
  406a08:	add    dh,BYTE PTR [eax-0x63330100]
  406a0e:	jmp    DWORD PTR [ebp-0x1]
  406a11:	jb     0x4069df
  406a13:	add    BYTE PTR [eax],al
  406a15:	jmp    0xffff:0xf1dd72ff
  406a1c:	add    bl,bh
  406a1e:	add    BYTE PTR ds:0xff89530d,bh
  406a24:	add    BYTE PTR [ebx],dh
  406a26:	push   ecx
  406a28:	push   cs
  406a29:	xchg   ebp,eax
  406a2a:	mov    edi,edi
  406a2c:	(bad)  
  406a2d:	cmp    eax,DWORD PTR [eax]
  406a2f:	xchg   esp,eax
  406a30:	mov    esp,0xffd7
  406a35:	(bad)  
  406a36:	call   DWORD PTR [ebx]
  406a38:	ror    ebp,cl
  406a3a:	(bad)  
  406a3b:	(bad)  
  406a3c:	(bad)  
  406a3d:	aas    
  406a3e:	add    BYTE PTR [esi],dl
  406a40:	lds    eax,FWORD PTR [ebp-0x1]
  406a43:	add    BYTE PTR [eax],al
  406a45:	mov    dl,0xff
  406a47:	retf   
  406a48:	popa   
  406a49:	sar    bh,0xff
  406a4c:	(bad)  
  406a4d:	js     0x406a4e
  406a4f:	arpl   WORD PTR [ebx+0xffff1f],sp
  406a55:	xchg   BYTE PTR [eax],al
  406a57:	add    esp,DWORD PTR [ebx-0x41]
  406a5a:	add    bh,bh
  406a5c:	and    edi,0x0
  406a5f:	daa    
  406a60:	out    dx,eax
  406a61:	rol    BYTE PTR [eax],0xff
  406a64:	call   DWORD PTR [esi-0x1]
  406a67:	ds and bl,bh
  406a6a:	add    bh,bh
  406a6c:	add    ah,bh
  406a6e:	mov    DWORD PTR [ebx],ebx
  406a70:	cs (bad) 
  406a74:	call   DWORD PTR [ebx+0x103a76cc]
  406a7a:	inc    DWORD PTR [ebx+0x15006cff]
  406a80:	inc    edx
  406a81:	mov    al,ds:0x9accffff
  406a86:	jmp    ebx
  406a88:	in     eax,dx
  406a89:	cmp    eax,DWORD PTR [eax]
  406a8b:	inc    DWORD PTR [eax]
  406a8d:	and    al,0xcc
  406a8f:	pop    ds
  406a90:	add    al,0xaa
  406a92:	(bad)  
  406a93:	(bad)  
  406a94:	(bad)  
  406a95:	sti    
  406a96:	add    BYTE PTR [edx-0x4d],bl
  406a99:	or     edi,edi
  406a9b:	mov    DWORD PTR [ebx-0x673a33ea],eax
  406aa1:	fwait
  406aa2:	add    BYTE PTR [ecx-0x4b7c1601],cl
  406aa8:	mov    ds:0xcc89ff52,eax
  406aad:	jle    0x406aae
  406aaf:	and    ah,BYTE PTR [edx-0xc7]
  406ab5:	test   al,0x83
  406ab7:	fs cmc 
  406ab9:	out    dx,eax
  406aba:	int3   
  406abb:	inc    DWORD PTR [ebx-0x2da600e3]
  406ac1:	jnp    0x406a46
  406ac3:	inc    DWORD PTR [eax]
  406ac5:	ds dec esi
  406ac8:	push   eax
  406ac9:	add    al,0xff
  406acb:	cmp    edi,0xffffffb2
  406ace:	add    cl,dl
  406ad0:	dec    edi
  406ad1:	sbb    bh,bh
  406ad3:	inc    DWORD PTR [eax]
  406ad5:	xchg   esp,eax
  406ad6:	add    BYTE PTR [ecx],ch
  406ad8:	leave  
  406ad9:	push   esp
  406ada:	inc    DWORD PTR [eax]
  406adc:	add    BYTE PTR [eax+eax*1],cl
  406adf:	add    eax,ecx
  406ae1:	sub    al,0x0
  406ae3:	inc    DWORD PTR [eax]
  406ae5:	pop    esp
  406ae6:	mov    esi,eax
  406ae8:	pop    ss
  406ae9:	add    DWORD PTR [ebx+0x8dcc00],0xffffff85
  406af0:	retf   
  406af1:	jne    0x406af2
  406af3:	cmp    edi,0x31
  406af6:	and    DWORD PTR [eax],0xffffffe7
  406af9:	xchg   edx,eax
  406afa:	inc    DWORD PTR [ebx-0x1933dc01]
  406b00:	out    0xe0,al
  406b02:	add    BYTE PTR [ecx+0x30002fff],cl
  406b08:	scas   al,BYTE PTR es:[edi]
  406b09:	adc    bh,bh
  406b0b:	add    bh,bh
  406b0d:	outs   dx,DWORD PTR ds:[esi]
  406b0e:	jmp    DWORD PTR [ecx+ebx*1+0x1b]
  406b12:	(bad)  
  406b13:	(bad)  
  406b14:	jmp    ebx
  406b16:	add    al,dh
  406b18:	mov    cl,0xda
  406b1a:	(bad)  
  406b1b:	(bad)  
  406b1c:	dec    DWORD PTR [eax]
  406b1e:	push   DWORD PTR [ebp-0x7c0047c1]
  406b24:	add    bh,ch
  406b26:	add    BYTE PTR [edx+ecx*4+0xffffac],dl
  406b2d:	mov    al,ds:0x89261489
  406b32:	add    BYTE PTR [eax],al
  406b34:	dec    esi
  406b36:	jmp    DWORD PTR [ebx]
  406b38:	and    ah,BYTE PTR [esi-0x67ff3400]
  406b3e:	(bad)  
  406b3f:	mov    edx,0xffffddfa
  406b44:	and    DWORD PTR [esi],0xffffff89
  406b47:	sub    BYTE PTR [eax-0xffff4a],0xf9
  406b4e:	jmp    FWORD PTR [eax]
  406b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b51:	mov    ecx,0x4b00ffff
  406b56:	call   FWORD PTR [eax-0x15b4]
  406b5c:	mov    DWORD PTR [eax+0x674f0089],eax
  406b62:	mov    edi,edi
  406b64:	add    dl,al
  406b66:	add    BYTE PTR [edx+0x8310f5],dh
  406b6c:	jmp    DWORD PTR [edx]
  406b6e:	(bad)  
  406b6f:	sti    
  406b70:	lds    ecx,FWORD PTR [edi]
  406b72:	inc    DWORD PTR [eax]
  406b74:	push   DWORD PTR [eax+0x0]
  406b77:	jg     0x406bd4
  406b79:	add    BYTE PTR es:[ebx+0x7bffbdff],al
  406b80:	mov    BYTE PTR [edi+edi*8-0x1],al
  406b84:	int3   
  406b85:	dec    edx
  406b86:	or     edx,0x4e
  406b89:	jg     0x406b8a
  406b8b:	inc    DWORD PTR [eax]
  406b8d:	inc    ebp
  406b8e:	add    BYTE PTR [ecx],cl
  406b90:	jmp    0x406b63
  406b92:	add    bh,bh
  406b94:	add    dh,ch
  406b96:	jmp    DWORD PTR [eax]
  406b98:	xchg   edi,eax
  406b99:	jbe    0x406b67
  406b9b:	inc    DWORD PTR [eax]
  406b9d:	ret    0xbc00
  406ba0:	cmp    dl,cl
  406ba2:	add    DWORD PTR [eax],0x0
  406ba5:	mov    BYTE PTR [eax],al
  406ba7:	xlat   BYTE PTR ds:[ebx]
  406ba8:	sbb    cl,al
  406baa:	cmp    edi,0xffffffff
  406bad:	aam    0xff
  406baf:	add    edx,DWORD PTR [edx]
  406bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bb2:	add    DWORD PTR [eax],0xffffffff
  406bb5:	jb     0x406bb7
  406bb7:	rcr    BYTE PTR [esi-0x7c0000f9],0x13
  406bbe:	add    BYTE PTR [ecx-0x4d],ah
  406bc1:	in     al,dx
  406bc2:	int3   
  406bc3:	add    bh,bh
  406bc5:	loope  0x406bc7
  406bc7:	pop    esi
  406bc8:	xor    eax,0xff8900ff
  406bcd:	pusha  
  406bce:	adc    DWORD PTR [edi],0xb
  406bd1:	pop    ecx
  406bd2:	(bad)  
  406bd3:	dec    DWORD PTR [ecx+0x23c783a6]
  406bd9:	lahf   
  406bda:	add    BYTE PTR [ebx+0x70897acc],al
  406be0:	mov    ch,0xbc
  406be2:	dec    DWORD PTR [ecx+0x168355ff]
  406be8:	div    DWORD PTR [ebx+0x0]
  406beb:	add    bh,bh
  406bed:	jl     0x406bbb
  406bef:	mov    al,0x11
  406bf1:	popf   
  406bf2:	mov    DWORD PTR [eax],eax
  406bf4:	add    dl,bh
  406bf6:	dec    edx
  406bf8:	retf   0xcced
  406bfb:	add    BYTE PTR [eax],al
  406bfd:	ret    
  406bfe:	jmp    DWORD PTR [ebx+ebx*2+0x15]
  406c02:	add    ah,cl
  406c04:	push   DWORD PTR [edx+0x4c2b6589]
  406c0a:	add    BYTE PTR [ebx+0x2bff36cc],al
  406c10:	push   cs
  406c11:	pop    edi
  406c12:	dec    esp
  406c14:	call   ebp
  406c16:	push   eax
  406c18:	mov    ecx,0x83ffffac
  406c1d:	fwait
  406c1e:	call   FWORD PTR [ecx-0x77]
  406c21:	cdq    
  406c22:	inc    DWORD PTR [ebx-0x14007b77]
  406c28:	pop    ecx
  406c29:	loop   0x406c2a
  406c2b:	add    bh,bh
  406c2d:	cli    
  406c2e:	sub    DWORD PTR [edx],0x30
  406c31:	xor    al,BYTE PTR [eax]
  406c33:	or     esp,0xffffffff
  406c36:	jmp    FWORD PTR [ebx-0xa64]
  406c3c:	jmp    FWORD PTR [ebx]
  406c3e:	inc    DWORD PTR [edi]
  406c40:	fbld   TBYTE PTR [ecx-0x7d]
  406c43:	int3   
  406c44:	call   DWORD PTR [eax]
  406c46:	jmp    DWORD PTR [eax-0x59]
  406c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c4a:	cmp    edi,0xffffffcc
  406c4d:	bound  eax,QWORD PTR [eax]
  406c4f:	jg     0x406bf0
  406c51:	iret   
  406c52:	(bad)  
  406c53:	(bad)  
  406c54:	call   DWORD PTR [edx]
  406c56:	adc    DWORD PTR [ebx-0x2f],0x4d
  406c5a:	inc    DWORD PTR [eax]
  406c5c:	add    DWORD PTR [esi-0x77],0x1a
  406c60:	inc    esp
  406c61:	mov    al,0xcc
  406c63:	cmp    edi,0xfffffff9
  406c66:	jmp    ecx
  406c68:	shr    DWORD PTR [eax-0x7d000000],1
  406c6e:	(bad)  
  406c6f:	in     al,dx
  406c70:	test   eax,0x89ffff39
  406c75:	ins    DWORD PTR es:[edi],dx
  406c76:	add    BYTE PTR [ebx+0x53],bh
  406c79:	in     eax,0xff
  406c7b:	(bad)  
  406c7c:	call   DWORD PTR [ebx]
  406c7e:	add    BYTE PTR [ecx-0x47],bl
  406c81:	je     0x406c83
  406c83:	add    BYTE PTR [eax],al
  406c85:	adc    BYTE PTR [eax],al
  406c87:	lods   al,BYTE PTR ds:[esi]
  406c88:	jbe    0x406cc5
  406c8a:	cmp    edi,0xffffff89
  406c8d:	and    al,BYTE PTR [eax]
  406c8f:	test   BYTE PTR ds:0xff89ff60,dl
  406c95:	fwait
  406c96:	add    BYTE PTR [esi],ah
  406c98:	outs   dx,DWORD PTR ds:[esi]
  406c99:	jb     0x406c24
  406c9b:	int3   
  406c9c:	mov    DWORD PTR [edx],edi
  406c9e:	adc    DWORD PTR [edx-0x76002cd2],0xffffff83
  406ca5:	lock add BYTE PTR [ebx-0x5f],ch
  406ca9:	scas   eax,DWORD PTR es:[edi]
  406caa:	cmp    edi,0xffffffff
  406cad:	inc    DWORD PTR [ebx-0x40e9d5]
  406cb3:	add    ah,cl
  406cb5:	in     al,dx
  406cb6:	mov    DWORD PTR [ebx*8-0x33ffff21],edx
  406cbd:	push   eax
  406cbe:	jmp    DWORD PTR ds:0x833197
  406cc4:	mov    DWORD PTR [edx],edx
  406cc6:	(bad)  
  406cc7:	mov    esi,0x836274
  406ccc:	inc    DWORD PTR [ebx-0x91b5f01]
  406cd2:	mov    edi,edi
  406cd4:	add    BYTE PTR [edi],al
  406cd6:	mov    DWORD PTR [ebp-0x7d],ebx
  406cd9:	sub    eax,DWORD PTR [ebx+0x89ff89]
  406cdf:	xchg   edx,eax
  406ce0:	mov    eax,0xffef
  406ce5:	sub    bh,bh
  406ce7:	in     eax,0xcb
  406ce9:	in     al,0xff
  406ceb:	inc    DWORD PTR [eax]
  406ced:	inc    esi
  406cee:	int3   
  406cef:	fdivr  st,st(1)
  406cf1:	adc    esp,ecx
  406cf3:	add    bh,bh
  406cf5:	into   
  406cf6:	add    BYTE PTR [edx+ecx*4],ah
  406cf9:	dec    esi
  406cfa:	inc    DWORD PTR [eax]
  406cfc:	jmp    DWORD PTR [ebx-0x34]
  406cff:	mov    ebx,0xcca38d
  406d04:	dec    DWORD PTR [edi-0x1498e077]
  406d0a:	(bad)  
  406d0b:	inc    DWORD PTR [ebx+0x3004005a]
  406d11:	ins    DWORD PTR es:[edi],dx
  406d12:	(bad)  
  406d13:	inc    DWORD PTR [ebx+0x6dca00f2]
  406d19:	xor    al,BYTE PTR [eax]
  406d1b:	inc    DWORD PTR [eax]
  406d1d:	(bad)  
  406d1e:	int3   
  406d1f:	or     BYTE PTR [edi+0xcc0011],ah
  406d25:	stos   BYTE PTR es:[edi],al
  406d26:	call   FWORD PTR [ebp-0xff9244]
  406d2c:	int3   
  406d2d:	mov    ecx,0x1b59b5ff
  406d32:	add    BYTE PTR [ecx-0x40007001],cl
  406d38:	mov    eax,ds:0x83ff1a
  406d3d:	mov    ds:0x6490a83,eax
  406d42:	mov    edi,edi
  406d44:	add    bl,ch
  406d46:	add    BYTE PTR [eax+ecx*1-0x30],ch
  406d4a:	add    BYTE PTR [eax],al
  406d4c:	add    BYTE PTR [ecx-0x2686a001],dh
  406d52:	add    DWORD PTR [ebx-0x3aff3201],0x66
  406d59:	inc    ebx
  406d5a:	add    BYTE PTR [eax],al
  406d5c:	add    BYTE PTR [ecx-0x5f598d01],al
  406d62:	add    ah,cl
  406d64:	call   FWORD PTR [edx-0x1]
  406d67:	loope  0x406ddd
  406d69:	std    
  406d6a:	cmp    edi,0xffffffff
  406d6d:	add    eax,0x5f47f400
  406d72:	dec    DWORD PTR [ecx+0x74ff3883]
  406d78:	inc    edi
  406d79:	mov    dl,0xff
  406d7b:	add    BYTE PTR [ebx+0x6f7e0069],al
  406d81:	add    al,0xff
  406d83:	add    BYTE PTR [eax],al
  406d85:	repnz add bh,al
  406d88:	cmp    eax,0x83ffffb4
  406d8d:	mov    bl,0x83
  406d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d90:	push   cs
  406d91:	mov    al,ds:0x15ffff00
  406d96:	add    BYTE PTR [esi-0x76aac7],ch
  406d9c:	push   DWORD PTR [eax+0x0]
  406d9f:	mov    esi,0xff00c709
  406da4:	call   DWORD PTR [ebx-0x533ad801]
  406daa:	add    bh,bh
  406dac:	push   DWORD PTR [eax+0x7e1d79ff]
  406db2:	add    DWORD PTR [eax],0xffffffcc
  406db5:	stos   BYTE PTR es:[edi],al
  406db6:	dec    DWORD PTR [edx+0x47]
  406db9:	mov    ds:0x2cffffff,al
  406dbe:	inc    DWORD PTR [ecx-0xe41f]
  406dc4:	add    BYTE PTR [ecx+ecx*4-0xf671e3],al
  406dcb:	mov    edi,edi
  406dcd:	imul   eax,DWORD PTR [eax],0x72
  406dd0:	(bad)  
  406dd1:	jl     0x406dd2
  406dd3:	add    bh,bh
  406dd5:	xor    al,BYTE PTR [ebx+0x69053c]
  406ddb:	(bad)  
  406ddc:	dec    DWORD PTR [edi-0x7d]
  406ddf:	inc    esi
  406de0:	inc    edx
  406de1:	mov    eax,ds:0xbfffff00
  406de6:	dec    DWORD PTR [eax-0x76008fdf]
  406dec:	int3   
  406ded:	sub    eax,DWORD PTR [eax]
  406def:	push   0xff0016ee
  406df4:	and    esp,0x0
  406df7:	mov    dh,0xab
  406df9:	push   ebx
  406dfa:	or     DWORD PTR [ecx-0xb7c9200],0xffffff87
  406e01:	pop    edx
  406e02:	(bad)  
  406e03:	inc    DWORD PTR [eax]
  406e05:	add    DWORD PTR [eax],0x8b0455
  406e0b:	add    bh,bh
  406e0d:	lods   eax,DWORD PTR ds:[esi]
  406e0e:	(bad)  
  406e0f:	mov    ecx,0xcc830330
  406e14:	dec    DWORD PTR [esi-0x36064634]
  406e1a:	(bad)  
  406e1b:	(bad)  
  406e1c:	(bad)  
  406e1d:	cmp    al,0xff
  406e1f:	inc    esp
  406e20:	and    eax,0xcc83ff18
  406e25:	(bad)  
  406e26:	call   DWORD PTR [ecx-0x3376c855]
  406e2c:	int3   
  406e2d:	dec    esi
  406e2e:	int3   
  406e2f:	in     al,dx
  406e30:	mov    dl,0xcc
  406e32:	add    bh,bh
  406e34:	mov    ebx,ebp
  406e36:	add    BYTE PTR [eax],dh
  406e38:	mov    ebx,0xff0a
  406e3d:	xchg   edi,edi
  406e3f:	js     0x406de3
  406e41:	loopne 0x406e42
  406e43:	inc    DWORD PTR [eax]
  406e45:	jo     0x406dca
  406e47:	sbb    esp,ebx
  406e49:	inc    esi
  406e4a:	add    BYTE PTR [ebx+0x10831bff],al
  406e50:	mov    ch,0xc9
  406e52:	add    BYTE PTR [eax],al
  406e54:	add    BYTE PTR ds:0xbb0ca4cc,dh
  406e5a:	int3   
  406e5b:	inc    DWORD PTR [eax]
  406e5d:	add    edi,edi
  406e5f:	ds setle bh
  406e63:	cmp    edi,0xffffff97
  406e66:	int3   
  406e67:	pushf  
  406e68:	(bad)  
  406e6a:	(bad)  
  406e6b:	inc    DWORD PTR [ebx-0x2c4ffdc]
  406e71:	sub    eax,0x983cc89
  406e76:	call   FWORD PTR [esi+0x34]
  406e79:	cld    
  406e7a:	cmp    edi,0xffffffff
  406e7d:	lods   eax,DWORD PTR ds:[esi]
  406e7e:	add    BYTE PTR [edi-0x38],ch
  406e81:	sar    edi,1
  406e83:	add    bh,bh
  406e85:	mov    esi,0xe1f3b383
  406e8a:	mov    edi,edi
  406e8c:	add    ch,ah
  406e8e:	(bad)  
  406e8f:	fsub   DWORD PTR ds:[edi]
  406e92:	add    DWORD PTR [eax],0x0
  406e95:	into   
  406e96:	sub    DWORD PTR [esi-0xd64f],0xffffffcc
  406e9d:	inc    edi
  406e9e:	add    BYTE PTR [esi],cl
  406ea0:	xor    al,0x16
  406ea2:	inc    DWORD PTR [eax]
  406ea4:	call   edx
  406ea6:	add    dh,bh
  406ea8:	adc    al,0xc
  406eaa:	inc    DWORD PTR [ebx+0x32fff683]
  406eb0:	lea    edx,[edi+edi*8-0x690034]
  406eb7:	push   es
  406eb8:	jp     0x406ed5
  406eba:	dec    DWORD PTR [ecx-0x5affcb01]
  406ec0:	lea    ebp,[esi-0x7d]
  406ec3:	add    bh,bh
  406ec5:	imul   eax,DWORD PTR [eax],0xce6d3f
  406ecb:	int3   
  406ecc:	jmp    esp
  406ece:	add    BYTE PTR [edx+0x83e053],dl
  406ed4:	jmp    FWORD PTR ds:0x11bd5a89
  406eda:	(bad)  
  406edb:	inc    DWORD PTR [eax]
  406edd:	or     ecx,esp
  406edf:	sub    al,0x4d
  406ee1:	dec    ebp
  406ee2:	mov    edi,edi
  406ee4:	adc    ecx,0xffffffcc
  406ee7:	adc    DWORD PTR [edx+ebx*8-0x1],esp
  406eeb:	inc    DWORD PTR [ebx-0x477c0022]
  406ef1:	cli    
  406ef2:	(bad)  
  406ef3:	inc    DWORD PTR [ebx+0x16b1ff3b]
  406ef9:	sbb    eax,0xafcc89ff
  406efe:	inc    DWORD PTR [ebx+eax*8]
  406f01:	cmp    DWORD PTR [eax],eax
  406f03:	inc    DWORD PTR [ebx-0x86100cc]
  406f09:	stos   DWORD PTR es:[edi],eax
  406f0a:	inc    DWORD PTR [eax]
  406f0c:	add    bl,ah
  406f0e:	or     ebp,0xffffffce
  406f11:	jg     0x406f12
  406f13:	add    bh,bh
  406f15:	cmp    eax,0x37f62ff
  406f1a:	(bad)  
  406f1b:	(bad)  
  406f1c:	call   FWORD PTR [edx+0x6aaf0f89]
  406f22:	int3   
  406f23:	(bad)  
  406f24:	jmp    FWORD PTR [esi]
  406f26:	mov    DWORD PTR [eax+0x7e],esp
  406f29:	int    0x0
  406f2b:	(bad)  
  406f2c:	call   DWORD PTR [ebx-0x1]
  406f2f:	adc    ebx,edx
  406f31:	cmc    
  406f32:	int3   
  406f33:	inc    DWORD PTR [eax]
  406f35:	sbb    bh,bh
  406f37:	and    DWORD PTR [esi+ecx*8-0x1],esi
  406f3b:	add    DWORD PTR [eax],0x1d
  406f3e:	add    BYTE PTR [ebx+0x29ac],dl
  406f44:	jmp    DWORD PTR [esi]
  406f46:	add    ch,al
  406f48:	aad    0xa3
  406f4a:	add    ah,cl
  406f4c:	(bad)  
  406f4d:	jmp    0x3279c52
  406f52:	mov    edi,edi
  406f54:	(bad)  
  406f55:	fdivp  st(7),st
  406f57:	fwait
  406f58:	hlt    
  406f59:	fdivr  st,st(7)
  406f5b:	int3   
  406f5c:	jmp    FWORD PTR [esi]
  406f5e:	(bad)  
  406f5f:	mov    edx,0xff0074f0
  406f64:	add    bh,ch
  406f66:	mov    DWORD PTR [ecx+0x17],ebx
  406f69:	mov    edi,edi
  406f6b:	or     esp,0xfffffffe
  406f6e:	adc    edi,0xfffffffe
  406f71:	fadd   DWORD PTR [eax]
  406f73:	add    bh,bh
  406f75:	out    dx,al
  406f76:	call   ebp
  406f78:	in     eax,0x35
  406f7a:	add    BYTE PTR [eax],al
  406f7c:	int3   
  406f7d:	sbb    al,BYTE PTR [eax]
  406f7f:	and    al,0xf5
  406f81:	mov    dl,0x0
  406f83:	add    BYTE PTR [ebx+0x26f68374],al
  406f89:	icebp  
  406f8a:	inc    DWORD PTR [eax]
  406f8c:	add    ah,dh
  406f8e:	and    DWORD PTR [ebx],0xffffffcf
  406f91:	daa    
  406f92:	inc    DWORD PTR [eax]
  406f94:	add    BYTE PTR [ebx-0x774df000],ch
  406f9a:	(bad)  
  406f9b:	inc    DWORD PTR [ebx-0x1f8200f8]
  406fa1:	mov    dl,0x0
  406fa3:	(bad)  
  406fa4:	dec    DWORD PTR [edx-0x144e2500]
  406faa:	dec    esp
  406fac:	add    bl,al
  406fae:	int3   
  406faf:	sahf   
  406fb0:	fidivr WORD PTR [eax-0x74007c01]
  406fb6:	jmp    FWORD PTR [ebx]
  406fb8:	out    0x94,eax
  406fba:	add    BYTE PTR [eax],al
  406fbc:	mov    DWORD PTR [eax-0x64d5f301],ebp
  406fc2:	mov    esp,ecx
  406fc4:	dec    edx
  406fc6:	or     DWORD PTR [edi],0x18
  406fc9:	(bad)  
  406fca:	(bad)  
  406fcb:	inc    DWORD PTR [eax]
  406fcd:	xchg   edi,eax
  406fce:	add    BYTE PTR [ebx+0x2e],cl
  406fd1:	sti    
  406fd2:	add    bh,bh
  406fd4:	jmp    DWORD PTR [ecx+0x770499ff]
  406fda:	add    BYTE PTR [eax],al
  406fdc:	(bad)  
  406fdd:	cld    
  406fde:	(bad)  
  406fdf:	jle    0x406fb2
  406fe1:	cdq    
  406fe2:	add    bh,bh
  406fe4:	inc    DWORD PTR [edi+edi*8+0x9]
  406fe8:	and    BYTE PTR [edx],bl
  406fea:	(bad)  
  406feb:	inc    DWORD PTR [eax]
  406fed:	add    bh,bh
  406fef:	ficom  WORD PTR [edx-0xb6]
  406ff5:	cli    
  406ff6:	cmp    DWORD PTR [edi],0x65
  406ff9:	push   cs
  406ffa:	inc    DWORD PTR [ebx-0x4100b77d]
  407000:	pusha  
  407001:	dec    edi
  407002:	inc    DWORD PTR [eax]
  407004:	inc    DWORD PTR [ebx+eax*4+0x356288]
  40700b:	dec    esp
  40700d:	push   0xffffff89
  40700f:	mov    edi,0xff005c70
  407014:	push   DWORD PTR [eax+0x731239ff]
  40701a:	add    bh,bh
  40701c:	call   FWORD PTR [edi+edi*8-0x7c548700]
  407023:	(bad)  
  407024:	(bad)  
  407025:	fdivr  st,st(7)
  407027:	call   0x1ecc:0x83cc55d6
  40702e:	cmp    eax,0xffffff9d
  407031:	jo     0x407032
  407033:	add    BYTE PTR [eax],al
  407035:	(bad)  
  407036:	jmp    DWORD PTR [esi]
  407038:	popf   
  407039:	rol    BYTE PTR [eax],0x83
  40703c:	inc    DWORD PTR [eax-0x1]
  40703f:	xchg   edx,eax
  407040:	jmp    0xffb4:0xff00ff9c
  407047:	test   BYTE PTR ds:0xff0000d3,0x97
  40704e:	jmp    FWORD PTR [edi+edi*2]
  407051:	(bad)  
  407052:	dec    DWORD PTR [ecx-0x2e00277d]
  407058:	lahf   
  407059:	das    
  40705a:	inc    DWORD PTR [ebx-0x15ff3b01]
  407060:	adc    cl,cl
  407062:	inc    DWORD PTR [eax]
  407064:	call   DWORD PTR [edx+0x0]
  407067:	mov    esi,0xcc00b7f6
  40706c:	inc    DWORD PTR [eax-0x7d]
  40706f:	rol    BYTE PTR [edi+0xffffb7],0x26
  407076:	and    DWORD PTR [edi],0x7b
  407079:	cld    
  40707a:	mov    DWORD PTR [eax],eax
  40707c:	sub    ebx,0xffffffcc
  40707f:	mov    cl,0xf8
  407081:	out    0xff,al
  407083:	dec    esp
  407085:	mov    ds:0xf2a17c00,al
  40708a:	int3   
  40708b:	add    DWORD PTR [eax],0xffffff83
  40708e:	add    BYTE PTR [ecx-0x4d],bl
  407091:	pushf  
  407092:	inc    DWORD PTR [ebx+0x63ff6bff]
  407098:	xchg   ecx,eax
  407099:	test   DWORD PTR [eax],eax
  40709b:	add    BYTE PTR [eax],al
  40709d:	inc    ebp
  40709e:	jmp    FWORD PTR [ecx+0xffb36a]
  4070a4:	call   FWORD PTR [ecx+0x0]
  4070a7:	and    eax,0xff7ef1
  4070ac:	and    DWORD PTR [ebp-0x1],0xffffff94
  4070b0:	in     eax,dx
  4070b1:	stos   DWORD PTR es:[edi],eax
  4070b2:	inc    DWORD PTR [eax]
  4070b4:	add    BYTE PTR [eax],dh
  4070b6:	add    BYTE PTR [eax-0x6d],ch
  4070b9:	loope  0x4070bb
  4070bb:	add    bh,bh
  4070bd:	pop    eax
  4070be:	add    BYTE PTR ds:0xff83a876,bl
  4070c4:	mov    DWORD PTR [ecx+0x217142ff],esi
  4070ca:	dec    DWORD PTR [ecx-0x5200a101]
  4070d0:	retf   0x77
  4070d3:	or     esp,0x72
  4070d6:	add    BYTE PTR [ebp-0x6b],dl
  4070d9:	dec    ebp
  4070da:	(bad)  
  4070db:	inc    DWORD PTR [eax]
  4070dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070de:	adc    DWORD PTR [edx-0x764cce],0xffffffff
  4070e5:	sti    
  4070e6:	call   DWORD PTR [ebp+0x21]
  4070e9:	sldt   WORD PTR [ebx+0x250032ff]
  4070f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f1:	inc    ecx
  4070f2:	(bad)  
  4070f3:	inc    DWORD PTR [ebx+0x7ee40085]
  4070f9:	inc    edi
  4070fa:	(bad)  
  4070fb:	(bad)  
  4070fc:	push   edi
  4070fe:	cmp    DWORD PTR [ebx-0x47],0x4c
  407102:	add    BYTE PTR [ebx+0x48ff5400],al
  407108:	mov    ecx,0xff0083b3
  40710d:	jle    0x40710e
  40710f:	xor    eax,0x83ffeb8f
  407114:	add    DWORD PTR [esi],0x0
  407117:	xchg   ebx,eax
  407118:	inc    edx
  407119:	cmc    
  40711a:	mov    DWORD PTR [eax],eax
  40711c:	add    dh,dh
  40711e:	call   esi
  407120:	push   edi
  407121:	inc    edx
  407122:	add    BYTE PTR [ebx-0x6c7ccb01],al
  407128:	lock (bad) 
  40712c:	add    BYTE PTR [eax-0x26101f01],dh
  407132:	add    bh,bh
  407134:	add    BYTE PTR [esi-0x1],dl
  407137:	clc    
  407138:	loop   0x40710d
  40713a:	cmp    edi,0x0
  40713d:	mov    al,0xff
  40713f:	lahf   
  407140:	outs   dx,DWORD PTR ds:[esi]
  407141:	dec    edx
  407142:	(bad)  
  407143:	inc    DWORD PTR [eax]
  407145:	sub    BYTE PTR [eax],al
  407147:	and    BYTE PTR [ebx-0x7cffbe],ch
  40714d:	aam    0x0
  40714f:	mov    ebp,0xff00c978
  407154:	add    BYTE PTR [eax-0x3933c901],ch
  40715a:	int3   
  40715b:	dec    DWORD PTR [ecx+0x510dff4e]
  407161:	js     0x407163
  407163:	int3   
  407164:	sbb    DWORD PTR [ebp-0x34],0x17
  407168:	cwde   
  407169:	popa   
  40716a:	mov    esp,ecx
  40716c:	add    cl,cl
  40716e:	add    BYTE PTR [edx-0x9],dh
  407171:	pushf  
  407172:	mov    edi,edi
  407174:	add    BYTE PTR [eax-0x77],bl
  407177:	pop    edx
  407178:	(bad)  
  407179:	jae    0x4070fe
  40717b:	add    ah,cl
  40717d:	popa   
  40717e:	add    dh,cl
  407180:	adc    ecx,0x8f00ffff
  407186:	add    BYTE PTR [edx*1+0xff10],cl
  40718d:	cmc    
  40718e:	add    BYTE PTR ds:0x83000686,dh
  407194:	int3   
  407195:	arpl   sp,cx
  407197:	dec    edi
  407198:	pop    ss
  407199:	sub    eax,DWORD PTR [eax]
  40719b:	dec    esp
  40719d:	ret    0x5d00
  4071a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071a1:	or     BYTE PTR [eax],al
  4071a3:	inc    DWORD PTR [eax]
  4071a5:	cmp    DWORD PTR [ebx-0xa50dd3],eax
  4071ab:	inc    DWORD PTR [eax]
  4071ad:	hlt    
  4071ae:	int3   
  4071af:	sub    DWORD PTR [esi-0x28],ebp
  4071b2:	add    bh,bh
  4071b4:	add    BYTE PTR [eax+eax*1],dl
  4071b7:	sbb    al,0x35
  4071b9:	push   eax
  4071ba:	int3   
  4071bb:	int3   
  4071bc:	add    al,dl
  4071be:	jmp    esi
  4071c0:	mov    ebx,0x8983ffa7
  4071c5:	fdivr  st,st(7)
  4071c7:	lods   eax,DWORD PTR ds:[esi]
  4071c8:	sbb    DWORD PTR [ebp-0x1],ebx
  4071cb:	add    bh,bh
  4071cd:	aas    
  4071ce:	xor    esp,0x55
  4071d1:	sldt   WORD PTR [ebx+0x9005300]
  4071d8:	scas   eax,DWORD PTR es:[edi]
  4071d9:	arpl   di,di
  4071db:	add    bh,bh
  4071dd:	jmp    0xff00:0xbacba4ff
  4071e4:	add    ch,cl
  4071e6:	jmp    esi
  4071e8:	mov    BYTE PTR [esp+ecx*8],0xff
  4071ec:	int3   
  4071ed:	out    0x0,al
  4071ef:	cmp    BYTE PTR [eax],dl
  4071f1:	mov    ecx,0xc9cc8900
  4071f6:	add    BYTE PTR [edi],ch
  4071f8:	cld    
  4071f9:	loop   0x4071c7
  4071fb:	cmp    edi,0xffffff9d
  4071fe:	add    BYTE PTR [ebx+0x5d],ah
  407201:	retf   
  407202:	dec    esp
  407204:	add    ch,al
  407206:	add    BYTE PTR [ecx],ch
  407208:	fst    st(4)
  40720a:	add    bh,bh
  40720c:	(bad)  
  40720d:	fild   WORD PTR [eax]
  40720f:	cwde   
  407210:	adc    BYTE PTR [edx+0x6a008900],cl
  407216:	cmp    ecx,0x37
  407219:	pop    ds
  40721a:	(bad)  
  40721b:	(bad)  
  40721c:	inc    DWORD PTR [eax]
  40721e:	inc    DWORD PTR [edx]
  407220:	adc    eax,0xff54
  407225:	aam    0x0
  407227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407228:	cs mov edi,0xbe00ff83
  40722e:	add    BYTE PTR [ebp+0xffd1d3],dh
  407234:	add    BYTE PTR [esp+ecx*8-0x7668b115],ah
  40723b:	inc    DWORD PTR [eax]
  40723d:	push   ds
  40723e:	call   DWORD PTR [ebx+0x5a]
  407241:	push   esp
  407242:	(bad)  
  407243:	(bad)  
  407244:	(bad)  
  407245:	cmp    bh,bh
  407247:	inc    edi
  407248:	dec    esp
  407249:	mov    edx,0x98838900
  40724e:	add    BYTE PTR [edx+ebp*8],al
  407251:	cmp    edi,0xff500000
  407257:	jmp    0xbc00:0x89836ff0
  40725e:	jmp    DWORD PTR [ebx+ecx*4-0xc]
  407262:	mov    edi,edi
  407264:	add    BYTE PTR [ebx+0x0],bh
  407267:	inc    edi
  407268:	jmp    0xff5f:0x83ffcc24
  40726f:	loope  0x4071f6
  407271:	or     al,0xff
  407273:	inc    DWORD PTR [ebx-0x31b476f6]
  407279:	mov    es,WORD PTR [ebx-0x170001]
  40727f:	or     al,0x7e
  407281:	in     eax,0x0
  407283:	add    bh,bh
  407285:	mov    eax,DWORD PTR [eax]
  407287:	fs push eax
  407289:	pop    ecx
  40728a:	dec    DWORD PTR [ecx-0x6b000a01]
  407290:	loopne 0x4072d0
  407292:	add    BYTE PTR [eax],al
  407294:	add    BYTE PTR [ebp+0x0],dh
  407297:	sub    bl,BYTE PTR [ebp+0x5d]
  40729a:	add    BYTE PTR [eax],al
  40729c:	(bad)  
  40729d:	mov    esp,0xd17123ff
  4072a2:	add    bh,bh
  4072a4:	add    BYTE PTR [edx+0x0],ah
  4072a7:	pop    ebx
  4072a8:	add    al,0xa6
  4072aa:	(bad)  
  4072ab:	dec    DWORD PTR [ecx+0x47840049]
  4072b1:	pop    ds
  4072b2:	inc    DWORD PTR [ebx+0x2eff5000]
  4072b8:	mov    ebx,0x83ffa3
  4072bd:	adc    BYTE PTR [ebx-0x3125db],al
  4072c3:	inc    DWORD PTR [eax]
  4072c5:	rol    DWORD PTR [eax],0x16
  4072c8:	lods   eax,DWORD PTR ds:[esi]
  4072c9:	mov    esi,0x4200ff00
  4072ce:	add    DWORD PTR [esi],0xffffffab
  4072d1:	imul   edi,edi,0xffffffcc
  4072d4:	int3   
  4072d5:	push   edx
  4072d6:	int3   
  4072d7:	adc    al,0x62
  4072d9:	push   0x0
  4072db:	inc    DWORD PTR [eax]
  4072dd:	mov    ds:0x45d09400,al
  4072e2:	add    bh,bh
  4072e4:	mov    DWORD PTR [edi+edi*8-0x2c19c2],ebx
  4072eb:	inc    DWORD PTR [eax]
  4072ed:	pop    edi
  4072ee:	int3   
  4072ef:	std    
  4072f0:	xor    al,0x54
  4072f2:	add    ah,cl
  4072f4:	inc    DWORD PTR [ebp+0x0]
  4072f7:	jb     0x4072ed
  4072f9:	lods   al,BYTE PTR ds:[esi]
  4072fa:	inc    DWORD PTR [eax]
  4072fc:	add    BYTE PTR [ebx-0x7ac55b77],cl
  407302:	int3   
  407303:	add    BYTE PTR [eax],al
  407305:	sub    bh,bh
  407307:	cdq    
  407308:	aad    0x6c
  40730a:	inc    DWORD PTR [eax]
  40730c:	mov    DWORD PTR [eax-0x46f6c501],eax
  407312:	add    BYTE PTR [eax],al
  407314:	dec    DWORD PTR [eax+eax*1+0x20]
  407318:	or     edx,DWORD PTR [edx+0x638900ff]
  40731e:	add    BYTE PTR [eax-0x148],ch
  407324:	add    BYTE PTR [ebx-0x1],ah
  407327:	mov    ch,BYTE PTR [ebx-0xffffc6]
  40732d:	test   edi,edi
  40732f:	xor    al,0x4b
  407331:	rol    BYTE PTR [eax],cl
  407333:	add    ah,cl
  407335:	cmp    edi,edi
  407337:	push   edi
  407338:	rcr    BYTE PTR [edi+edi*8+0x0],cl
  40733c:	add    BYTE PTR ds:0xc80f7900,dl
  407342:	add    ah,cl
  407344:	adc    DWORD PTR [ebp-0x722c837d],0xffffff89
  40734b:	add    BYTE PTR [eax],al
  40734d:	sub    DWORD PTR [eax],eax
  40734f:	xchg   esp,eax
  407350:	and    edx,edi
  407352:	add    BYTE PTR [ebx-0x1dff2100],al
  407358:	xchg   edi,eax
  407359:	jb     0x40735a
  40735b:	(bad)  
  40735c:	dec    edi
  40735e:	add    BYTE PTR [edi+0x9c7c],al
  407364:	jmp    DWORD PTR [esi]
  407366:	dec    esp
  407368:	jb     0x4073d1
  40736a:	inc    DWORD PTR [eax]
  40736c:	call   FWORD PTR [eax+eax*1-0x5d]
  407370:	pop    ss
  407371:	sbb    edi,edi
  407373:	add    DWORD PTR [ebx+0x7be700cd],0xffffffed
  40737a:	add    bh,bh
  40737c:	add    BYTE PTR [esi],cl
  40737e:	call   DWORD PTR [ebx+0x5b]
  407381:	stc    
  407382:	mov    DWORD PTR [ecx+0x4affbe89],ecx
  407388:	in     al,0x57
  40738a:	inc    DWORD PTR [eax]
  40738c:	add    BYTE PTR [ebx-0x1],al
  40738f:	cdq    
  407390:	push   eax
  407391:	pop    ebp
  407392:	add    BYTE PTR [eax],al
  407394:	int3   
  407395:	test   eax,0xae8c7cff
  40739a:	inc    DWORD PTR [ebx-0x4eff997d]
  4073a0:	xlat   BYTE PTR ds:[ebx]
  4073a1:	pop    edx
  4073a2:	cmp    edi,0xffffffff
  4073a5:	adc    bh,bh
  4073a7:	lahf   
  4073a8:	out    0x5e,al
  4073aa:	add    BYTE PTR [eax],al
  4073ac:	dec    DWORD PTR [edi-0x5c3b4501]
  4073b2:	add    bh,bh
  4073b4:	inc    DWORD PTR [esi]
  4073b6:	or     DWORD PTR [ebx],0x57
  4073b9:	les    eax,FWORD PTR [eax]
  4073bb:	inc    DWORD PTR [eax]
  4073bd:	mov    esi,0xd3e4bcff
  4073c2:	add    BYTE PTR [ebx-0x1dffbf00],al
  4073c8:	adc    BYTE PTR [eax-0x5d7c0100],al
  4073ce:	push   DWORD PTR [edx+edx*1]
  4073d1:	adc    edi,edi
  4073d3:	(bad)  
  4073d4:	(bad)  
  4073d5:	fdivp  st(7),st
  4073d7:	test   al,0xf0
  4073d9:	icebp  
  4073da:	add    bh,bh
  4073dc:	add    BYTE PTR [ebp+0xfea03ff],bl
  4073e2:	dec    DWORD PTR [ecx+0x7bffecff]
  4073e8:	je     0x407467
  4073ea:	(bad)  
  4073eb:	(bad)  
  4073ec:	call   DWORD PTR [ebx]
  4073ee:	(bad)  
  4073ef:	fist   WORD PTR [edi-0x6f]
  4073f5:	sub    eax,0x7b45efff
  4073fa:	add    bh,bh
  4073fc:	add    DWORD PTR ds:0x62b7c5ff,0xffffffcc
  407403:	add    BYTE PTR [ebx-0x56190049],al
  407409:	leave  
  40740a:	add    bh,bh
  40740c:	push   DWORD PTR [edx]
  40740e:	add    BYTE PTR [ebx+esi*2-0x7c],cl
  407412:	inc    DWORD PTR [eax]
  407414:	call   edi
  407416:	add    BYTE PTR [ebx-0x4e],ch
  407419:	cmp    bh,0xff
  40741c:	jmp    DWORD PTR [edx-0x49c01534]
  407422:	(bad)  
  407423:	inc    DWORD PTR [ebx-0x25a7ffb0]
  407429:	cdq    
  40742a:	inc    DWORD PTR [eax]
  40742c:	push   DWORD PTR [edi+0x72785c83]
  407432:	cmp    edi,0xffffffff
  407435:	sub    eax,0xc932983
  40743a:	inc    DWORD PTR [eax]
  40743c:	add    BYTE PTR [ecx-0x1],dl
  40743f:	jb     0x407448
  407441:	dec    eax
  407442:	add    DWORD PTR [eax],0xffffff89
  407445:	sar    bh,0x1f
  407448:	out    0x65,al
  40744a:	add    BYTE PTR [eax],al
  40744c:	add    BYTE PTR [eax+0x73a050ff],cl
  407452:	(bad)  
  407453:	(bad)  
  407454:	dec    DWORD PTR [eax+0x0]
  407457:	push   cs
  407458:	imul   ecx,DWORD PTR [edx-0x1],0xffb9ffcc
  40745f:	or     ebx,esi
  407461:	pop    edx
  407462:	inc    DWORD PTR [ebx-0x77ff8700]
  407468:	mov    al,ds:0xff00cc8d
  40746d:	pop    ecx
  40746e:	add    BYTE PTR [ecx],bh
  407470:	ror    DWORD PTR [ecx-0x377cff77],cl
  407476:	mov    ebx,eax
  407478:	test   bh,dl
  40747a:	dec    esp
  40747c:	add    BYTE PTR [edi+edi*8+0x6a6726],bl
  407483:	(bad)  
  407484:	call   DWORD PTR [edi+edi*8-0xe521f8]
  40748b:	(bad)  
  40748c:	jmp    DWORD PTR [ebx]
  40748e:	add    BYTE PTR [edx-0x93cc],ch
  407494:	add    BYTE PTR [esi],cl
  407496:	push   DWORD PTR [ebp+0x837985]
  40749c:	add    BYTE PTR [ebp-0x3cc1d100],bl
  4074a2:	int3   
  4074a3:	(bad)  
  4074a4:	jmp    DWORD PTR [edx+0x0]
  4074a7:	mov    ebx,DWORD PTR [esi-0x7d]
  4074aa:	(bad)  
  4074ab:	inc    DWORD PTR [eax]
  4074ad:	into   
  4074ae:	call   DWORD PTR [edi-0x62b5]
  4074b4:	jmp    FWORD PTR [edx]
  4074b6:	mov    DWORD PTR [ecx],edi
  4074b8:	int3   
  4074b9:	sub    eax,0x1800ccff
  4074be:	mov    ebx,edx
  4074c0:	cs dec ebx
  4074c2:	cmp    edi,0xffffffff
  4074c5:	pop    ss
  4074c6:	jmp    FWORD PTR [esi-0xe60c]
  4074cc:	call   FWORD PTR [ebx]
  4074ce:	(bad)  
  4074cf:	fild   QWORD PTR [edx-0x77]
  4074d2:	cmp    edi,0x0
  4074d5:	mov    esp,0x79feafff
  4074da:	inc    DWORD PTR [eax]
  4074dc:	add    ah,al
  4074de:	add    bl,dh
  4074e0:	jno    0x407475
  4074e2:	add    BYTE PTR [eax],al
  4074e4:	call   FWORD PTR ds:0xd53ac00
  4074ea:	mov    edi,edi
  4074ec:	inc    DWORD PTR [ebp-0x5fb0b700]
  4074f2:	inc    DWORD PTR [eax]
  4074f4:	dec    DWORD PTR [edx]
  4074f6:	add    BYTE PTR [edx+0x2987],bl
  4074fc:	add    BYTE PTR [esp+ecx*8-0x378976],cl
  407503:	inc    DWORD PTR [eax]
  407505:	mov    al,0x0
  407507:	dec    edi
  407508:	jg     0x4074d4
  40750a:	add    ah,cl
  40750c:	inc    DWORD PTR [ebx-0x1]
  40750f:	jne    0x407503
  407511:	jl     0x407512
  407513:	inc    DWORD PTR [eax]
  407515:	mov    cl,0xff
  407517:	stc    
  407518:	push   es
  407519:	push   eax
  40751a:	add    BYTE PTR [ebx-0x2100a87d],al
  407520:	scas   eax,DWORD PTR es:[edi]
  407521:	pop    ebp
  407522:	inc    DWORD PTR [eax]
  407524:	jmp    FWORD PTR [ebx+0x7df64b00]
  40752a:	cmp    edi,0x0
  40752d:	mov    eax,DWORD PTR [eax]
  40752f:	test   DWORD PTR [edx+0xc],edx
  407532:	add    bh,bh
  407534:	add    BYTE PTR [edi+edi*8],bl
  407537:	mov    ebx,0xd82d
  40753c:	jmp    FWORD PTR [edx]
  40753e:	jmp    DWORD PTR [eax+0x6b]
  407541:	pop    DWORD PTR [eax]
  407543:	inc    DWORD PTR [ebx+0x4c5700ea]
  407549:	xchg   esi,eax
  40754a:	int3   
  40754b:	(bad)  
  40754c:	jmp    FWORD PTR [edi]
  40754e:	adc    edx,0xffffff85
  407551:	test   al,0xff
  407553:	dec    esp
  407555:	scas   eax,DWORD PTR es:[edi]
  407556:	add    BYTE PTR [edx],bh
  407558:	dec    esp
  407559:	dec    edx
  40755a:	inc    DWORD PTR [eax]
  40755c:	call   DWORD PTR [edx-0x727fca01]
  407562:	mov    DWORD PTR [eax],eax
  407564:	add    BYTE PTR [ecx],bh
  407566:	dec    DWORD PTR [edi+edi*1]
  407569:	cld    
  40756a:	add    DWORD PTR [eax],0xffffffff
  40756d:	rol    BYTE PTR [eax],0x42
  407570:	test   DWORD PTR [edi],ebp
  407572:	dec    DWORD PTR [ecx-0x75002001]
  407578:	push   ss
  407579:	mov    eax,ds:0x4dffff89
  40757e:	int3   
  40757f:	push   es
  407580:	ins    BYTE PTR es:[edi],dx
  407581:	in     eax,dx
  407582:	add    BYTE PTR [eax],al
  407584:	mov    DWORD PTR [ebx],esi
  407586:	inc    edx
  407588:	pop    eax
  407589:	dec    esi
  40758a:	add    DWORD PTR [eax],0xffffffff
  40758d:	inc    eax
  40758e:	int3   
  40758f:	jb     0x407514
  407591:	fild   DWORD PTR [eax]
  407593:	(bad)  
  407594:	call   FWORD PTR [eax+eax*1+0x45]
  407598:	rcl    DWORD PTR [esi-0xf007700],0xff
  40759f:	push   ebp
  4075a0:	push   ds
  4075a1:	sub    eax,DWORD PTR [ebx-0xcbff01]
  4075a7:	out    dx,eax
  4075a8:	lahf   
  4075a9:	int    0x89
  4075ab:	add    bh,bh
  4075ad:	jmp    0x4075af
  4075af:	out    0x10,al
  4075b1:	call   0x96407639
  4075b6:	add    BYTE PTR [ebx],ah
  4075b8:	dec    esi
  4075b9:	enter  0xffff,0xcc
  4075bd:	mov    eax,ds:0xa62740ff
  4075c2:	add    BYTE PTR [eax],al
  4075c4:	mov    DWORD PTR [edi-0x3333a401],ecx
  4075ca:	int3   
  4075cb:	int3   
  4075cc:	int3   
  4075cd:	int3   
  4075ce:	int3   
  4075cf:	int3   
  4075d0:	(bad)  
  4075d1:	push   DWORD PTR [ecx]
  4075d3:	inc    DWORD PTR [esi]
  4075d5:	fld    DWORD PTR [eax]
  4075d7:	add    BYTE PTR [ebp-0x133347d],bh
  4075dd:	pusha  
  4075de:	mov    DWORD PTR [ebx-0x997cee],eax
  4075e4:	and    al,0xe4
  4075e6:	inc    DWORD PTR [eax]
  4075e8:	inc    eax
  4075e9:	dec    DWORD PTR [esi-0x1]
  4075ec:	mov    DWORD PTR [ebx-0x9d0100],edx
  4075f2:	cmp    esp,ecx
  4075f4:	jg     0x4075d1
  4075f6:	add    DWORD PTR [eax],0x78
  4075f9:	add    BYTE PTR [ebx-0x89ff00],ch
  4075ff:	add    ch,al
  407601:	push   DWORD PTR [edx-0x5a9401]
  407607:	add    dl,dh
  407609:	jmp    FWORD PTR [ebp-0x77]
  40760c:	cmp    DWORD PTR [ebp-0x7d],ebx
  40760f:	(bad)  
  407610:	call   FWORD PTR ds:[edx-0x7c2a1101]
  407617:	(bad)  
  407618:	jl     0x407619
  40761a:	aaa    
  40761b:	push   DWORD PTR [ebx]
  40761d:	aaa    
  40761e:	(bad)  
  40761f:	push   DWORD PTR [ebp-0x1]
  407622:	xchg   ebp,eax
  407623:	(bad)  
  407624:	jl     0x4075f3
  407626:	add    DWORD PTR [eax],0xffffffec
  407629:	dec    DWORD PTR [ebp-0xb85801]
  40762f:	add    BYTE PTR [edi-0x1],bh
  407632:	jmp    DWORD PTR fs:[edx+esi*2]
  407636:	(bad)  
  407637:	push   DWORD PTR [ebx]
  407639:	int3   
  40763a:	lds    eax,FWORD PTR [eax]
  40763c:	push   esp
  40763d:	mov    ebx,0xcca5ffcc
  407642:	data16 add BYTE PTR [esi+0x37],al
  407646:	inc    DWORD PTR [eax]
  407648:	fild   DWORD PTR [eax]
  40764a:	sti    
  40764b:	call   FWORD PTR [edi+ebp*2+0x0]
  40764f:	int3   
  407650:	in     al,0xff
  407652:	adc    bh,bh
  407654:	xor    eax,0x64ff00d8
  407659:	int3   
  40765a:	popa   
  40765b:	call   DWORD PTR [esi+edi*2+0xcbffff]
  407662:	dec    esp
  407663:	(bad)  
  407664:	std    
  407665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407666:	add    bh,bh
  407668:	cmp    al,0xff
  40766a:	mov    ebp,0x158400
  40766f:	call   esp
  407671:	add    BYTE PTR [esi],bl
  407673:	inc    ecx
  407675:	mov    ebp,0xcc1389ff
  40767a:	jae    0x40767c
  40767c:	ss jno 0x40764b
  40767f:	call   FWORD PTR [edi-0x6337c01]
  407685:	arpl   di,di
  407687:	add    BYTE PTR [ebp+0x49ccf183],ch
  40768d:	int3   
  40768e:	inc    DWORD PTR [eax]
  407690:	push   esi
  407691:	dec    DWORD PTR [ecx-0x7674af7d]
  407697:	push   DWORD PTR [esi+0x0]
  40769a:	adc    eax,0x7b76cc
  40769f:	sbb    DWORD PTR [edi+0x41cc88ff],0x4e
  4076a6:	mov    edi,edi
  4076a8:	sbb    edi,edi
  4076aa:	push   eax
  4076ab:	add    ah,cl
  4076ad:	jb     0x407632
  4076af:	push   esi
  4076b1:	call   FWORD PTR [eax+eax*1+0xff584d]
  4076b8:	adc    DWORD PTR [ebx+0x284f0032],eax
  4076be:	cmp    edi,0x75
  4076c1:	add    BYTE PTR [ebx+eax*4-0x7c00a408],bh
  4076c8:	jb     0x4076c9
  4076ca:	loope  0x40764f
  4076cc:	stos   BYTE PTR es:[edi],al
  4076cd:	fadd   DWORD PTR [eax]
  4076cf:	mov    esi,ebp
  4076d1:	add    BYTE PTR [ebp+0x0],cl
  4076d4:	pop    ebx
  4076d5:	sub    al,0x0
  4076d7:	jmp    DWORD PTR [esi]
  4076d9:	add    BYTE PTR [ebp-0x7d],dl
  4076dc:	call   FWORD PTR [esi-0x527c01]
  4076e2:	in     al,dx
  4076e3:	add    ah,dl
  4076e5:	pop    ebx
  4076e6:	inc    DWORD PTR [eax]
  4076e8:	cmp    bh,0xa8
  4076eb:	add    cl,cl
  4076ed:	scas   eax,DWORD PTR es:[edi]
  4076ee:	add    bh,bh
  4076f0:	mov    esi,0x1ff6bff
  4076f5:	sahf   
  4076f6:	(bad)  
  4076f7:	call   eax
  4076f9:	add    BYTE PTR [edi-0x84df01],cl
  4076ff:	int3   
  407700:	call   0x77410205
  407705:	push   ebp
  407706:	inc    DWORD PTR [eax]
  407708:	dec    esp
  407709:	add    BYTE PTR [eax],al
  40770b:	jmp    DWORD PTR [eax]
  40770d:	mov    cl,0xff
  40770f:	call   FWORD PTR [eax+eax*1]
  407712:	mov    al,ds:0xffbfee00
  407717:	jmp    FWORD PTR [edi+0x7183c200]
  40771d:	sbb    bh,bh
  40771f:	or     DWORD PTR [esi],0xffffffff
  407722:	dec    ebp
  407723:	(bad)  
  407724:	(bad)  
  407725:	jp     0x407726
  407727:	(bad)  
  407728:	out    dx,al
  407729:	int3   
  40772a:	sbb    edi,edi
  40772c:	cmp    eax,0x9389ff7c
  407731:	cmp    DWORD PTR [esi+0x0],0x23
  407735:	add    BYTE PTR fs:[eax],al
  407738:	fld    QWORD PTR [eax]
  40773a:	in     al,0x0
  40773c:	dec    edx
  40773d:	sub    ecx,esp
  40773f:	inc    DWORD PTR [esi+0x0]
  407742:	or     bh,bh
  407744:	stos   DWORD PTR es:[edi],eax
  407745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407746:	dec    DWORD PTR [ecx-0x547c03]
  40774c:	(bad)  [ebx-0x77]
  40774f:	int3   
  407750:	jp     0x4076d5
  407752:	sbb    bh,bh
  407754:	push   cs
  407755:	jne    0x407756
  407757:	inc    esp
  407759:	int3   
  40775a:	pop    edx
  40775b:	mov    DWORD PTR [ebp+0x65890080],edi
  407761:	add    BYTE PTR [edi-0x1],bl
  407764:	adc    al,0x75
  407766:	add    BYTE PTR [eax],al
  407768:	xchg   ecx,eax
  407769:	jmp    DWORD PTR [esi+0x0]
  40776c:	int    0x6b
  40776e:	or     esp,0xffffff8d
  407771:	add    dl,cl
  407773:	(bad)  
  407774:	js     0x40770c
  407776:	(bad)  
  407777:	jmp    DWORD PTR [eax]
  407779:	jmp    DWORD PTR [eax-0x902c34]
  40777f:	jmp    DWORD PTR [ebx+0x0]
  407782:	xor    bh,bh
  407784:	ins    DWORD PTR es:[edi],dx
  407785:	lahf   
  407786:	add    BYTE PTR [ebx-0x60ffd3],al
  40778c:	and    al,0xc
  40778e:	cmp    edi,0xfffffff6
  407791:	add    BYTE PTR [eax+eax*1],cl
  407794:	jns    0x407726
  407796:	inc    DWORD PTR [ebx-0xee006a]
  40779c:	add    al,cl
  40779e:	inc    DWORD PTR [eax]
  4077a0:	mov    BYTE PTR [ebx-0x6f13352],0x83
  4077a7:	call   ebx
  4077a9:	add    BYTE PTR [esi-0x69b801],bh
  4077af:	call   DWORD PTR [eax+0x0]
  4077b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077b3:	dec    DWORD PTR [ecx]
  4077b5:	xchg   ecx,eax
  4077b6:	(bad)  
  4077b7:	(bad)  
  4077b8:	jle    0x4077b9
  4077ba:	(bad)  
  4077bb:	or     esi,0xffffff8d
  4077be:	inc    DWORD PTR [eax]
  4077c0:	jns    0x437f76ca
  4077c6:	(bad)  
  4077c7:	call   DWORD PTR [ebp-0x3cffac00]
  4077cd:	loope  0x4077ce
  4077cf:	add    BYTE PTR [edx+0xaffc600],ah
  4077d5:	mov    al,ds:0x7bff00
  4077da:	dec    esp
  4077db:	add    BYTE PTR [ebx-0x31],bl
  4077de:	inc    DWORD PTR [eax]
  4077e0:	cmp    eax,DWORD PTR [eax]
  4077e2:	sub    eax,0xff21bd00
  4077e7:	inc    esi
  4077e9:	jmp    FWORD PTR [ebx-0x7c358f01]
  4077ef:	int3   
  4077f0:	cs inc ecx
  4077f3:	jmp    FWORD PTR [ebx+0x5effff94]
  4077f9:	add    BYTE PTR [ebx],bh
  4077fb:	jmp    DWORD PTR [ebx-0x73]
  4077fe:	or     esp,0xffffffe2
  407801:	add    BYTE PTR [edi+0x1a7a00],al
  407807:	jmp    FWORD PTR [edi+edi*8-0x1a]
  40780b:	add    ah,ch
  40780d:	mov    dl,0xff
  40780f:	add    BYTE PTR [eax+eax*1+0x4f],ch
  407813:	jmp    FWORD PTR [eax+0x18]
  407816:	inc    DWORD PTR [eax]
  407818:	int    0xff
  40781a:	xchg   esp,eax
  40781b:	mov    edi,ebx
  40781d:	jae    0x69409a22
  407823:	push   DWORD PTR [ecx+0x3cfffffd]
  407829:	add    ah,ch
  40782b:	mov    DWORD PTR [esp+edi*1-0x1],ecx
  40782f:	int3   
  407830:	fld    QWORD PTR [eax]
  407832:	loope  0x4077b7
  407834:	inc    eax
  407835:	(bad)  
  407836:	(bad)  
  407837:	jmp    DWORD PTR [ebp+0x0]
  40783a:	xchg   DWORD PTR [eax],eax
  40783c:	pusha  
  40783d:	jge    0x40783e
  40783f:	int3   
  407840:	xchg   esp,eax
  407841:	jmp    FWORD PTR [edx]
  407843:	add    bh,ah
  407845:	push   edx
  407846:	mov    DWORD PTR [ebx-0xf50038],eax
  40784c:	dec    ebp
  40784d:	add    al,0xff
  40784f:	and    DWORD PTR [ebp+0x70ff35ff],0x69
  407856:	add    bh,bh
  407858:	and    al,BYTE PTR [ebx-0x40e900cb]
  40785e:	add    bh,bh
  407860:	(bad)  
  407861:	inc    DWORD PTR [edx+0x59b900]
  407867:	add    BYTE PTR [edi-0x7d],al
  40786a:	cmp    edi,edi
  40786c:	or     BYTE PTR [ecx],dh
  40786e:	add    DWORD PTR [eax],0xffffffc3
  407871:	add    al,cl
  407873:	mov    DWORD PTR [edx+edx*8-0x7c830001],ebx
  40787a:	xor    DWORD PTR [ebx-0xda28],eax
  407880:	aad    0xff
  407882:	or     bh,bh
  407884:	dec    edx
  407885:	mov    edi,0xff4d0083
  40788a:	mov    eax,DWORD PTR [eax]
  40788c:	dec    eax
  40788d:	sbb    DWORD PTR [eax],eax
  40788f:	(bad)  
  407890:	in     al,dx
  407891:	int3   
  407892:	or     al,BYTE PTR [eax]
  407894:	ja     0x407864
  407896:	inc    DWORD PTR [eax]
  407898:	xchg   ebp,eax
  407899:	(bad)  
  40789a:	mov    esi,0xffd951ff
  40789f:	inc    DWORD PTR [edx-0x447c7600]
  4078a5:	and    eax,0x8321ffff
  4078aa:	mov    ds:0x53d2ff,eax
  4078af:	sub    edx,0x0
  4078b2:	jns    0x4078b4
  4078b4:	xchg   ecx,eax
  4078b5:	arpl   WORD PTR [eax],ax
  4078b7:	add    dl,bh
  4078b9:	dec    esp
  4078bb:	adc    DWORD PTR [esi+edi*4],0xffffff83
  4078bf:	adc    DWORD PTR [ebp-0x7d],0xffffffb8
  4078c3:	add    BYTE PTR [edi-0x2f],ch
  4078c6:	cmp    edi,0xffffffa5
  4078c9:	jmp    FWORD PTR [ebx-0x7d]
  4078cc:	loop   0x4078ff
  4078ce:	inc    DWORD PTR [ebx-0x12ffa9]
  4078d4:	fiadd  WORD PTR ds:0xcc14cc83
  4078da:	xchg   DWORD PTR [eax],eax
  4078dc:	mov    ds:0x168383b0,al
  4078e1:	(bad)  
  4078e2:	(bad)  
  4078e4:	pop    edx
  4078e5:	outs   dx,DWORD PTR ds:[esi]
  4078e6:	int3   
  4078e7:	push   DWORD PTR [edx+0x55897b00]
  4078ed:	repnz inc DWORD PTR [ebx-0x48ff0e]
  4078f4:	jo     0x4078d9
  4078f6:	add    bh,bh
  4078f8:	les    eax,FWORD PTR [eax]
  4078fa:	add    eax,0xff931800
  4078ff:	cmp    DWORD PTR [ecx],0xffffffff
  407902:	mov    cs,esp
  407904:	loope  0x40796d
  407906:	int3   
  407907:	add    BYTE PTR [eax-0x7d],al
  40790a:	mov    dl,0x0
  40790c:	sub    al,0xbe
  40790e:	inc    DWORD PTR [ebx-0xb8ffce]
  407914:	push   ebx
  407915:	push   ecx
  407916:	add    bh,bh
  407918:	mov    ecx,0x20ffd5ff
  40791d:	xor    al,0xff
  40791f:	call   FWORD PTR [edi]
  407921:	call   DWORD PTR [ecx-0x7d]
  407924:	sub    cl,BYTE PTR [ebx+eax*4+0x0]
  407928:	inc    BYTE PTR [ebx+0x45770067]
  40792e:	cmp    edi,0xffffffc2
  407931:	int3   
  407932:	mov    edi,edi
  407934:	nop    edi
  407937:	add    BYTE PTR [edi],dl
  407939:	push   DWORD PTR [ecx-0x1]
  40793c:	retf   0xec
  40793f:	mov    DWORD PTR [eax],edi
  407941:	jmp    DWORD PTR [ecx-0xa65901]
  407947:	push   DWORD PTR [eax-0x1400f201]
  40794d:	test   DWORD PTR [ecx-0x7700ae01],ecx
  407953:	add    bh,dh
  407955:	out    0xff,al
  407957:	add    BYTE PTR [edx-0x1],ch
  40795a:	adc    DWORD PTR [eax],eax
  40795c:	pop    ebx
  40795d:	sbb    bh,bh
  40795f:	call   esi
  407961:	jmp    eax
  407963:	sbb    ebx,0xffffffd9
  407966:	inc    DWORD PTR [eax]
  407968:	cmc    
  407969:	or     DWORD PTR [ecx-0x1],0x2
  40796d:	pop    es
  40796e:	cmp    edi,0x5b
  407971:	add    BYTE PTR [ecx-0x7c827d],bh
  407977:	jmp    FWORD PTR [eax+eax*1]
  40797a:	out    0x0,eax
  40797c:	pop    ebp
  40797d:	idiv   edi
  40797f:	call   FWORD PTR [ebx+0x0]
  407982:	scas   al,BYTE PTR es:[edi]
  407983:	add    DWORD PTR [edi],0xffffffd7
  407986:	add    BYTE PTR [eax],al
  407988:	(bad)  
  407989:	dec    esi
  40798b:	jmp    FWORD PTR [edx-0x53ffff7f]
  407991:	int3   
  407992:	add    eax,DWORD PTR [eax]
  407994:	pop    edx
  407995:	retf   
  407996:	dec    DWORD PTR [ecx-0x47c82]
  40799c:	push   ebx
  40799d:	rol    BYTE PTR [eax],0xff
  4079a0:	push   esp
  4079a1:	jmp    DWORD PTR [edx-0x7c9fea7d]
  4079a7:	push   DWORD PTR [ebp-0x1]
  4079aa:	loope  0x4079ab
  4079ac:	loope  0x40799a
  4079ae:	add    bh,bh
  4079b0:	enter  0xf300,0x0
  4079b4:	add    eax,0x14ff89ac
  4079b9:	(bad)  
  4079ba:	mov    esp,0xff4986ff
  4079bf:	add    dl,ah
  4079c1:	push   DWORD PTR [ebx-0x7d]
  4079c4:	fistp  DWORD PTR ds:0xff77ff00
  4079ca:	or     eax,0xff733f00
  4079cf:	jmp    FWORD PTR [edi+edi*8-0x2447ffd4]
  4079d6:	add    DWORD PTR [ebx+0xe1ff51],0x40
  4079dd:	xor    al,0x89
  4079df:	jmp    edi
  4079e1:	jmp    FWORD PTR [edx-0x1]
  4079e4:	or     esp,DWORD PTR [edx-0x33e6ff01]
  4079ea:	mov    bh,bh
  4079ec:	hlt    
  4079ed:	add    al,0x0
  4079ef:	cmp    edx,0x0
  4079f2:	mov    esi,0xff9a75ff
  4079f7:	adc    DWORD PTR [eax+0x0],0xffffffa4
  4079fb:	mov    DWORD PTR [ebx-0x69],ecx
  4079fe:	(bad)  
  4079ff:	dec    DWORD PTR [ebx]
  407a01:	add    BYTE PTR [eax-0x34],ah
  407a04:	adc    al,al
  407a06:	or     esp,0xffffffc3
  407a09:	jmp    FWORD PTR [eax+0x2d200]
  407a0f:	add    bh,al
  407a11:	add    BYTE PTR [edi+edi*8-0x8a77],dl
  407a18:	ret    
  407a19:	push   DWORD PTR [ebx-0x1]
  407a1c:	fcmovbe st,st(1)
  407a1e:	(bad)  
  407a1f:	(bad)  
  407a20:	mov    ecx,0x3bffc7ff
  407a25:	fadd   DWORD PTR [eax]
  407a27:	add    BYTE PTR [edi+edi*8],al
  407a2a:	dec    edi
  407a2b:	jmp    DWORD PTR [esi]
  407a2d:	je     0x407a2f
  407a2f:	call   DWORD PTR [edi-0x577c7300]
  407a35:	jmp    0x407a36
  407a37:	push   DWORD PTR [edi]
  407a39:	add    cl,al
  407a3b:	jmp    FWORD PTR [eax+edi*2-0x7c8c7601]
  407a42:	xor    cl,ah
  407a44:	push   ds
  407a45:	and    bh,bh
  407a47:	int3   
  407a48:	push   0x84ff9ecc
  407a4d:	cmp    bh,bh
  407a4f:	add    BYTE PTR [ebx-0x42ff2f01],ah
  407a55:	(bad)  
  407a56:	(bad)  
  407a57:	(bad)  
  407a58:	jns    0x4079dd
  407a5a:	fdivp  st(7),st
  407a5c:	loopne 0x407a87
  407a5e:	dec    esp
  407a60:	push   es
  407a61:	cmp    DWORD PTR [esi-0x8bc601],0xffffffff
  407a68:	icebp  
  407a69:	inc    DWORD PTR [edx-0x77]
  407a6c:	and    bl,ah
  407a6e:	add    DWORD PTR [eax],0xffffffee
  407a71:	add    BYTE PTR [ecx-0x1],dh
  407a74:	push   ecx
  407a75:	add    edi,edi
  407a77:	dec    DWORD PTR [edi+0x0]
  407a7a:	mov    edi,edi
  407a7c:	add    eax,0x1600000f
  407a81:	mov    DWORD PTR ds:0x1596ff,ebp
  407a87:	mov    ebx,ebp
  407a89:	add    bl,cl
  407a8b:	add    BYTE PTR [edi+0x4bff00e0],ah
  407a91:	int3   
  407a92:	dec    esi
  407a93:	int3   
  407a94:	mov    cl,0x1f
  407a96:	mov    DWORD PTR [eax],eax
  407a98:	test   al,0x83
  407a9a:	adc    eax,DWORD PTR [eax]
  407a9c:	or     eax,0xbafffffe
  407aa1:	push   DWORD PTR [edi+edi*8-0x7c4afe]
  407aa8:	cs (bad) 
  407aaa:	jp     0x407aac
  407aac:	mov    edi,0xf500006d
  407ab1:	(bad)  
  407ab2:	in     al,dx
  407ab3:	add    BYTE PTR [edi],bl
  407ab5:	jo     0x407ab6
  407ab7:	jmp    DWORD PTR [edx]
  407ab9:	(bad)  
  407aba:	(bad)  
  407abc:	fistp  WORD PTR [edi-0x1]
  407abf:	and    edi,0x0
  407ac2:	cli    
  407ac3:	call   DWORD PTR ds:0xae830062
  407ac9:	call   DWORD PTR [edx+0x0]
  407acc:	mov    eax,ds:0x9389fff8
  407ad1:	push   DWORD PTR ds:0xbfef89
  407ad7:	xor    DWORD PTR [ecx+0x15ffe200],0x76
  407ade:	add    bh,bh
  407ae0:	mov    es,WORD PTR [ebx-0x3b77c60]
  407ae6:	int3   
  407ae7:	add    ah,ch
  407ae9:	push   ecx
  407aeb:	dec    DWORD PTR [esi+0x62]
  407aee:	inc    DWORD PTR [ebx-0x7cf300e0]
  407af4:	jne    0x407ac8
  407af6:	dec    DWORD PTR [ecx-0x7cce00be]
  407afc:	das    
  407afd:	push   edi
  407afe:	(bad)  
  407aff:	dec    DWORD PTR [ebp+0x6400d9ff]
  407b05:	inc    ecx
  407b06:	add    bh,bh
  407b08:	jae    0x407a8d
  407b0a:	add    eax,DWORD PTR [ebx+0x8372e4]
  407b10:	aam    0xff
  407b12:	imul   eax,DWORD PTR [eax],0xff00b506
  407b18:	imul   edi,edi,0x4b
  407b1b:	(bad)  
  407b1c:	jg     0x407ada
  407b1e:	add    bh,bh
  407b20:	dec    esi
  407b21:	(bad)  
  407b22:	inc    BYTE PTR [ebx-0x5f63]
  407b28:	and    al,0x0
  407b2a:	(bad)  
  407b2b:	int3   
  407b2c:	cdq    
  407b2d:	add    DWORD PTR [eax],0x5f89d3ff
  407b33:	add    BYTE PTR [edi+edx*4-0x8f7c01],cl
  407b3a:	and    ecx,DWORD PTR [ecx-0xff2f5c]
  407b40:	push   ebx
  407b41:	push   esi
  407b43:	mov    DWORD PTR [edi-0x10],eax
  407b46:	add    DWORD PTR [ebx-0x33f1337e],0x21
  407b4d:	push   ebp
  407b4e:	inc    DWORD PTR [eax]
  407b50:	rol    DWORD PTR [eax],cl
  407b52:	push   es
  407b53:	add    BYTE PTR [eax-0x14],al
  407b56:	add    DWORD PTR [eax],0xffffffbd
  407b59:	call   DWORD PTR [ebx]
  407b5b:	add    BYTE PTR [esi-0x75],ch
  407b5e:	add    BYTE PTR [eax],al
  407b60:	repnz push DWORD PTR [eax]
  407b63:	add    BYTE PTR [esi-0x4e],al
  407b66:	add    bh,bh
  407b68:	dec    ebp
  407b69:	(bad)  
  407b6a:	sti    
  407b6b:	add    BYTE PTR [edx],ah
  407b6d:	call   0xff96:0xffe7ff89
  407b74:	sub    ebx,DWORD PTR [eax-0x1]
  407b77:	add    BYTE PTR [edx-0x1],ch
  407b7a:	inc    edi
  407b7b:	dec    eax
  407b7d:	arpl   WORD PTR [eax],ax
  407b7f:	(bad)  
  407b80:	stc    
  407b81:	add    BYTE PTR [ecx],bl
  407b83:	or     DWORD PTR [ebx-0x400fff5],0xffffffcc
  407b8a:	test   eax,0xff0eda00
  407b8f:	(bad)  
  407b90:	mov    esp,0x7300f900
  407b95:	idiv   bh
  407b97:	(bad)  
  407b98:	mov    esi,0xa5009d00
  407b9d:	mov    ch,0x83
  407b9f:	dec    DWORD PTR [edi+edi*8]
  407ba2:	jg     0x407ba3
  407ba4:	stc    
  407ba5:	(bad)  
  407ba6:	(bad)  
  407ba7:	(bad)  
  407ba8:	jge    0x407ba9
  407baa:	adc    DWORD PTR [eax],eax
  407bac:	cmp    bh,al
  407bae:	add    BYTE PTR [eax],al
  407bb0:	mov    WORD PTR [ebx+0x2db7006a],es
  407bb6:	add    ah,cl
  407bb8:	fadd   QWORD PTR [eax]
  407bba:	mov    esp,0x8372f0ff
  407bbf:	(bad)  
  407bc0:	mov    edx,0xc1ff5700
  407bc5:	cwde   
  407bc6:	inc    DWORD PTR [eax]
  407bc8:	(bad)  
  407bc9:	inc    DWORD PTR [edx]
  407bcb:	cmp    ebx,0xffffffdf
  407bce:	add    DWORD PTR [eax],0x1f
  407bd1:	add    BYTE PTR [esi+0x0],al
  407bd4:	add    bh,ah
  407bd6:	add    ah,cl
  407bd8:	add    edi,edi
  407bda:	mov    eax,ds:0x839d0083
  407bdf:	int3   
  407be0:	jno    0x407be1
  407be2:	into   
  407be3:	add    BYTE PTR [esi],dh
  407be5:	mov    al,ds:0xff6c00ff
  407bea:	cwde   
  407beb:	call   FWORD PTR [eax+0x5c00ff80]
  407bf1:	dec    ebp
  407bf3:	int3   
  407bf4:	push   ds
  407bf5:	push   0xfff80000
  407bfa:	or     BYTE PTR [ecx-0x7c00d5f5],cl
  407c00:	add    ecx,esp
  407c02:	sub    edi,edi
  407c04:	and    ebp,esi
  407c06:	(bad)  
  407c07:	inc    DWORD PTR ds:0x51ffe583
  407c0d:	stos   BYTE PTR es:[edi],al
  407c0e:	dec    esp
  407c10:	nop
  407c11:	int3   
  407c12:	jae    0x407c13
  407c14:	xor    BYTE PTR [esi+0x68ccff],bh
  407c1a:	cwde   
  407c1b:	sub    DWORD PTR [ecx-0x1cff00cd],0xffffffff
  407c22:	test   eax,0xfff26bff
  407c27:	adc    DWORD PTR [edi+0x0],0x13
  407c2b:	push   DWORD PTR [ecx-0x4f]
  407c2e:	add    BYTE PTR [ecx-0x7c4a009f],cl
  407c34:	(bad)  
  407c35:	mov    cl,0xff
  407c37:	call   ebp
  407c39:	int3   
  407c3a:	inc    eax
  407c3b:	inc    esi
  407c3d:	arpl   di,di
  407c3f:	sub    DWORD PTR [edi-0x1],0xffffff99
  407c43:	inc    DWORD PTR [edx]
  407c45:	test   edi,edi
  407c47:	(bad)  
  407c48:	mov    eax,0x4dff30ff
  407c4d:	pop    edx
  407c4e:	mov    DWORD PTR [ebx-0x8ff7c],eax
  407c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c55:	cmp    bh,bh
  407c57:	inc    DWORD PTR [edx-0x4800d401]
  407c5d:	xor    bh,bh
  407c5f:	inc    DWORD PTR [esi-0x4000b501]
  407c65:	gs int3 
  407c67:	sub    DWORD PTR [edi-0x1],0x6b
  407c6b:	(bad)  
  407c6c:	clc    
  407c6d:	and    al,0xcc
  407c6f:	add    DWORD PTR [edi-0x7d],0xffffffb0
  407c73:	adc    DWORD PTR [eax-0x32],0x0
  407c77:	dec    DWORD PTR [edi-0x1]
  407c7a:	loop   0x407c7c
  407c7c:	sub    eax,0x15ffffd3
  407c81:	int3   
  407c82:	cli    
  407c83:	inc    DWORD PTR [ebp+0x19]
  407c86:	(bad)  
  407c87:	dec    DWORD PTR [ebx+0x29fff2cc]
  407c8d:	add    eax,0xff2f89cc
  407c92:	mov    edx,0xf63000
  407c97:	add    BYTE PTR [ecx-0x9008f7d],al
  407c9d:	sub    eax,0xff9000cc
  407ca2:	jno    0x407ca4
  407ca4:	mov    WORD PTR [edi+edi*8],cs
  407ca7:	jmp    DWORD PTR [eax+eax*1]
  407caa:	sbb    esp,ecx
  407cac:	out    dx,al
  407cad:	add    al,BYTE PTR [eax]
  407caf:	sbb    DWORD PTR [ecx+0x5300bbff],0x39
  407cb6:	inc    DWORD PTR [eax]
  407cb8:	jmp    0x8c:0x5bccdfff
  407cbf:	mov    DWORD PTR [eax-0x1],ecx
  407cc2:	jle    0x407cc4
  407cc4:	in     al,dx
  407cc5:	mov    esi,0xccbe83ff
  407cca:	pop    ebx
  407ccb:	inc    DWORD PTR [edi]
  407ccd:	repnz add BYTE PTR [eax],al
  407cd0:	and    eax,DWORD PTR [eax]
  407cd2:	push   ds
  407cd3:	add    BYTE PTR [edx-0x71ff0098],bl
  407cd9:	jmp    DWORD PTR [ecx-0x76f9f801]
  407cdf:	int3   
  407ce0:	lahf   
  407ce1:	jmp    eax
  407ce3:	jmp    FWORD PTR [esi]
  407ce5:	in     eax,dx
  407ce6:	dec    esp
  407ce8:	fwait
  407ce9:	add    BYTE PTR [ebx],al
  407ceb:	xor    DWORD PTR [eax-0x37cff75],0xffffffff
  407cf2:	arpl   WORD PTR [ebx-0x7c001c6e],ax
  407cf8:	pushf  
  407cf9:	(bad)  
  407cfa:	call   0xffac7088
  407cff:	sub    DWORD PTR [eax],0xffffffff
  407d02:	aam    0x89
  407d04:	dec    ebx
  407d05:	out    dx,al
  407d06:	int3   
  407d07:	inc    eax
  407d09:	add    BYTE PTR [edi],ch
  407d0b:	jmp    DWORD PTR [esi-0x69007630]
  407d11:	add    BYTE PTR [edx],al
  407d13:	mov    DWORD PTR [edx+edi*8],edx
  407d16:	mov    edi,edi
  407d18:	pop    ss
  407d19:	jmp    FWORD PTR [esi+0x0]
  407d1c:	dec    edx
  407d1d:	inc    ebx
  407d1e:	inc    DWORD PTR [eax]
  407d20:	mov    esp,cs
  407d22:	call   FWORD PTR [bx]
  407d25:	add    ecx,esp
  407d27:	push   ecx
  407d29:	add    al,bl
  407d2b:	add    BYTE PTR [edi+ecx*8-0x7611ff7d],al
  407d32:	mov    esp,0x660bff
  407d37:	add    BYTE PTR [edi+0x12ff3cff],ch
  407d3d:	xchg   edi,eax
  407d3e:	dec    DWORD PTR [ecx-0xd8ffe4]
  407d44:	mov    cl,0x68
  407d46:	inc    DWORD PTR [ebx-0xfd00c9]
  407d4c:	loop   0x407d18
  407d4e:	dec    esp
  407d50:	stc    
  407d51:	adc    esp,0x0
  407d54:	or     eax,0x5983ffe1
  407d59:	(bad)  
  407d5a:	fmul   st,st(4)
  407d5c:	int    0x1a
  407d5e:	dec    esp
  407d60:	enter  0x71ff,0xff
  407d64:	jo     0x407d3b
  407d66:	inc    DWORD PTR [ebx-0x7687ffff]
  407d6c:	icebp  
  407d6d:	(bad)  
  407d70:	add    eax,0x250080ff
  407d75:	retf   0x8900
  407d78:	cs jmp edi
  407d7b:	dec    DWORD PTR [ecx-0x6d]
  407d7e:	add    bh,bh
  407d80:	jnp    0x407d81
  407d82:	cmp    eax,0xff51bdff
  407d87:	jmp    FWORD PTR [eax]
  407d89:	inc    DWORD PTR [esi-0x785a01]
  407d8f:	int3   
  407d90:	mov    al,0x0
  407d92:	dec    esi
  407d93:	push   DWORD PTR [edi+0x3c]
  407d96:	(bad)  
  407d97:	(bad)  
  407d98:	mov    esi,0xb00061ff
  407d9d:	xchg   ebp,eax
  407d9e:	add    BYTE PTR [ecx-0x19ff67],cl
  407da4:	sbb    DWORD PTR [edi+edi*8],esp
  407da7:	mov    DWORD PTR [ebx+0x0],ebp
  407daa:	push   ss
  407dab:	jmp    FWORD PTR [ebx+0x29ffff21]
  407db1:	add    BYTE PTR ds:0xff85d9ff,dh
  407db7:	sub    DWORD PTR [edx+0x3aff5d00],0x72
  407dbe:	inc    DWORD PTR [eax]
  407dc0:	inc    ebx
  407dc1:	add    BYTE PTR ds:0xccdebf00,bh
  407dc7:	call   DWORD PTR [ebx]
  407dc9:	int3   
  407dca:	or     al,0x0
  407dcc:	xor    BYTE PTR [edi-0xbd0000],al
  407dd2:	xlat   BYTE PTR ds:[ebx]
  407dd3:	add    BYTE PTR [eax-0x61],bh
  407dd6:	(bad)  
  407dd7:	(bad)  
  407dd8:	in     eax,dx
  407dd9:	add    BYTE PTR [edi+0x11d900],al
  407ddf:	add    BYTE PTR [edx+0x7b00ce00],ch
  407de5:	ins    BYTE PTR es:[edi],dx
  407de6:	dec    DWORD PTR [ecx+0xc30072]
  407dec:	imul   edi,DWORD PTR [eax+0x0],0xe4ccac00
  407df3:	add    BYTE PTR [ecx-0x5176ff2e],dl
  407df9:	jmp    FWORD PTR [esi]
  407dfb:	add    BYTE PTR [ebp-0x51ff008e],dl
  407e01:	push   DWORD PTR ds:0xb38000
  407e07:	(bad)  
  407e08:	cmp    edi,edi
  407e0a:	lods   al,BYTE PTR ds:[esi]
  407e0b:	push   ebx
  407e0d:	sbb    DWORD PTR [eax],eax
  407e0f:	adc    ebp,0xffffffff
  407e12:	xlat   BYTE PTR ds:[ebx]
  407e13:	call   DWORD PTR [esi-0x2a00004f]
  407e19:	mov    DWORD PTR [ebx-0x4d4301],ebp
  407e1f:	add    BYTE PTR [eax-0x1],dh
  407e22:	je     0x407e23
  407e24:	jnp    0x407de6
  407e26:	mov    edi,edi
  407e28:	mov    edi,edi
  407e2a:	dec    esi
  407e2b:	mov    DWORD PTR [esi-0x390000b4],esi
  407e31:	add    BYTE PTR [ecx-0x7d],ah
  407e34:	outs   dx,DWORD PTR ds:[esi]
  407e35:	(bad)  
  407e36:	dec    esp
  407e38:	add    al,BYTE PTR [ebx-0x10f76cc]
  407e3e:	add    ah,cl
  407e40:	xchg   edi,edi
  407e42:	pusha  
  407e43:	inc    DWORD PTR [ecx-0x45]
  407e46:	mov    DWORD PTR [ebx+0xf9ffee],eax
  407e4c:	inc    eax
  407e4d:	lods   eax,DWORD PTR ds:[esi]
  407e4e:	(bad)  
  407e4f:	jmp    DWORD PTR [edx-0x7d]
  407e52:	mov    bl,0x0
  407e54:	(bad)  
  407e55:	dec    edx
  407e56:	add    DWORD PTR [ebx-0x330064],0xffffffcd
  407e5d:	jmp    0x407e5f
  407e5f:	push   DWORD PTR [edi]
  407e61:	xor    ecx,0xffffffff
  407e64:	jg     0x407e47
  407e66:	inc    DWORD PTR [eax]
  407e68:	(bad)  
  407e69:	(bad)  
  407e6a:	std    
  407e6b:	add    BYTE PTR [edi],cl
  407e6d:	or     eax,0x83b8ffcc
  407e72:	hlt    
  407e73:	int3   
  407e74:	ja     0x407ed8
  407e76:	dec    esp
  407e78:	sar    edi,1
  407e7a:	sub    BYTE PTR [eax],al
  407e7c:	into   
  407e7d:	enter  0xffff,0xe2
  407e81:	call   FWORD PTR [edi-0x465d00]
  407e87:	push   edi
  407e89:	dec    eax
  407e8b:	add    BYTE PTR [edi+esi*1+0x81ffff],dh
  407e92:	sub    DWORD PTR [eax],eax
  407e94:	out    dx,eax
  407e95:	adc    eax,DWORD PTR [eax]
  407e97:	call   FWORD PTR [ecx+0x7cffce83]
  407e9d:	sub    BYTE PTR [eax],al
  407e9f:	dec    DWORD PTR [ecx-0x1b00717d]
  407ea5:	adc    eax,0x831f0000
  407eaa:	push   es
  407eab:	dec    eax
  407ead:	mov    edi,edi
  407eaf:	int3   
  407eb0:	inc    ebx
  407eb1:	add    BYTE PTR [ebp+0x0],dh
  407eb4:	es xchg esi,eax
  407eb6:	inc    DWORD PTR [ebx+0xeefffe]
  407ebc:	(bad)  
  407ebe:	add    bh,bh
  407ec0:	in     al,0xcc
  407ec2:	xchg   ebx,eax
  407ec3:	add    BYTE PTR [eax+0x7583ff68],ah
  407ec9:	add    cl,dl
  407ecb:	add    ebx,0xffffff8f
  407ece:	inc    DWORD PTR [eax]
  407ed0:	fdivp  st(7),st
  407ed2:	jno    0x407ea0
  407ed4:	inc    esp
  407ed5:	jns    0x407ed7
  407ed7:	inc    esp
  407ed9:	inc    DWORD PTR [esi+0xdbf700]
  407edf:	add    dh,bl
  407ee1:	add    dl,cl
  407ee3:	jmp    FWORD PTR [ecx+0x44]
  407ee6:	inc    DWORD PTR [eax]
  407ee8:	in     eax,dx
  407ee9:	call   FWORD PTR [edi+edi*8-0xffad90]
  407ef0:	or     esp,ecx
  407ef2:	aas    
  407ef3:	(bad)  
  407ef4:	js     0x407f6d
  407ef6:	add    bh,bh
  407ef8:	iret   
  407ef9:	add    BYTE PTR [ebx],bl
  407efb:	int3   
  407efc:	lahf   
  407efd:	sar    bh,1
  407eff:	add    BYTE PTR [edi+edi*8],cl
  407f02:	lahf   
  407f03:	call   FWORD PTR [ecx+0x43]
  407f06:	mov    DWORD PTR [eax],eax
  407f08:	out    0x0,eax
  407f0a:	sahf   
  407f0b:	add    BYTE PTR [esi],bh
  407f0d:	ins    DWORD PTR es:[edi],dx
  407f0e:	int3   
  407f0f:	add    dl,bh
  407f11:	add    bh,dh
  407f13:	add    BYTE PTR [ebx-0x73],cl
  407f16:	(bad)  
  407f17:	push   DWORD PTR [ebp-0x7d]
  407f1a:	adc    edi,edi
  407f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f1d:	add    eax,0x57ccff
  407f22:	cdq    
  407f23:	(bad)  
  407f24:	cli    
  407f25:	xchg   edi,edi
  407f27:	int3   
  407f28:	or     DWORD PTR [eax],eax
  407f2a:	pop    ss
  407f2b:	add    BYTE PTR [edi-0x3b7c001f],bh
  407f31:	add    cl,dl
  407f33:	or     DWORD PTR [ebx+0x6eff00aa],0xffffffff
  407f3a:	fadd   QWORD PTR [eax]
  407f3c:	jb     0x407f31
  407f3e:	inc    DWORD PTR [eax]
  407f40:	sub    edi,edi
  407f42:	ds add ah,cl
  407f45:	xor    BYTE PTR [eax],al
  407f47:	inc    DWORD PTR [edi]
  407f49:	add    bh,bl
  407f4b:	add    BYTE PTR [eax-0xa000038],dh
  407f51:	add    BYTE PTR [edx-0x64e27d],cl
  407f57:	add    cl,al
  407f59:	int3   
  407f5a:	lahf   
  407f5b:	jmp    esi
  407f5d:	jecxz  0x407f5e
  407f5f:	int3   
  407f60:	ins    DWORD PTR es:[edi],dx
  407f61:	dec    DWORD PTR [eax+eax*1-0x7c00a94c]
  407f68:	int3   
  407f69:	(bad)  
  407f6a:	(bad)  
  407f6c:	loop   0x407fcc
  407f6e:	add    BYTE PTR [ebx-0x7c0e761c],al
  407f74:	add    edi,DWORD PTR [eax-0x1]
  407f77:	(bad)  
  407f78:	clc    
  407f79:	(bad)  
  407f7a:	in     eax,dx
  407f7b:	add    ch,ah
  407f7d:	popa   
  407f7e:	inc    DWORD PTR [eax]
  407f80:	inc    esp
  407f81:	int3   
  407f82:	sub    al,0xcc
  407f84:	adc    ebp,DWORD PTR [edi-0x7c68ff01]
  407f8a:	inc    edi
  407f8b:	sub    edi,0xffffffe8
  407f8e:	(bad)  
  407f8f:	jmp    DWORD PTR [ebx+0x49ff6dff]
  407f95:	sar    edi,1
  407f97:	add    ah,dl
  407f99:	call   DWORD PTR [edi]
  407f9b:	(bad)  
  407f9c:	jns    0x407f72
  407f9e:	inc    DWORD PTR [eax]
  407fa0:	add    bh,bh
  407fa2:	sub    edi,edi
  407fa4:	mov    esi,0xb4000017
  407fa9:	call   FWORD PTR [edx+0x6a83ff]
  407faf:	jmp    DWORD PTR [edx+0x0]
  407fb2:	rol    BYTE PTR [eax],1
  407fb4:	inc    ecx
  407fb5:	xchg   ecx,eax
  407fb6:	int3   
  407fb7:	call   FWORD PTR [esp+ecx*8-0x17917ca5]
  407fbe:	add    bh,bh
  407fc0:	pop    ss
  407fc1:	add    BYTE PTR [esi-0x1],bh
  407fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fc5:	loope  0x407fc7
  407fc7:	add    ah,bl
  407fc9:	mov    ecx,esi
  407fcb:	mov    DWORD PTR [esi-0x620000ac],ebx
  407fd1:	add    BYTE PTR [eax-0x1],ah
  407fd4:	xchg   ebx,eax
  407fd5:	inc    esi
  407fd6:	add    bh,bh
  407fd8:	out    dx,al
  407fd9:	add    BYTE PTR [esi+0x97ebff],dh
  407fdf:	xor    DWORD PTR [eax+0x6089f5ff],0x48
  407fe6:	int3   
  407fe7:	call   FWORD PTR [ecx]
  407fe9:	add    BYTE PTR [esi-0x7d],bh
  407fec:	inc    ebp
  407fed:	outs   dx,BYTE PTR ds:[esi]
  407fee:	inc    DWORD PTR [eax]
  407ff0:	leave  
  407ff1:	inc    DWORD PTR [ebx+0x0]
  407ff4:	dec    eax
  407ff5:	clc    
  407ff6:	dec    DWORD PTR [ecx-0xfb00de]
  407ffc:	bnd jl 0x407f82
  407fff:	cmp    DWORD PTR [esi+0x0],0x4e
  408003:	jmp    DWORD PTR [esi]
  408005:	dec    esp
  408006:	(bad)  
  408007:	jmp    eax
  408009:	(bad)  
  40800a:	aas    
  40800b:	add    BYTE PTR [esp+eax*1],ch
  40800e:	mov    edi,edi
  408010:	cmp    edi,edi
  408012:	js     0x408013
  408014:	enter  0xff3b,0x83
  408018:	imul   edi,edi,0xffffffa4
  40801b:	int3   
  40801c:	mov    al,ds:0xe3ff0095
  408021:	add    DWORD PTR [edx],0xffffff83
  408024:	in     eax,0xf3
  408026:	dec    esp
  408028:	scas   al,BYTE PTR es:[edi]
  408029:	push   DWORD PTR [edx-0x7c6e2d00]
  40802f:	push   DWORD PTR [eax-0x7d]
  408032:	loope  0x408034
  408034:	mov    ecx,0xc1ff0015
  408039:	jmp    DWORD PTR [eax-0x1]
  40803c:	shl    BYTE PTR [ebp-0x3aff01],1
  408042:	adc    eax,0xffa91700
  408047:	(bad)  
  408048:	mov    edi,0x2fffaa83
  40804d:	iret   
  40804e:	inc    DWORD PTR [eax]
  408050:	cmp    ecx,esp
  408052:	fcmovne st,st(4)
  408054:	pop    ss
  408055:	dec    sp
  408058:	nop
  408059:	mov    DWORD PTR [edi+edi*8+0x8],esi
  40805d:	inc    ebp
  40805e:	add    DWORD PTR [ebx-0x717c2c],0x2c
  408065:	sub    edi,edi
  408067:	jmp    DWORD PTR [edi]
  408069:	and    DWORD PTR [eax+eax*1-0x7c00cf80],0xffffff9a
  408071:	or     DWORD PTR [eax],0x0
  408074:	lock sbb bh,bh
  408077:	(bad)  
  408078:	jmp    0xc240247c
  40807d:	ja     0x40807e
  40807f:	(bad)  
  408080:	stc    
  408081:	add    BYTE PTR [ebx],dl
  408083:	add    BYTE PTR [esi],cl
  408085:	icebp  
  408086:	add    DWORD PTR [eax],0xffffffd5
  408089:	dec    DWORD PTR ds:0xff8106ff
  40808f:	jmp    FWORD PTR [eax+eax*1+0x4395006c]
  408096:	or     esp,0x67
  408099:	add    BYTE PTR [ecx+0x0],dh
  40809c:	mov    ah,0x33
  40809e:	inc    DWORD PTR [eax]
  4080a0:	jle    0x4080a1
  4080a2:	icebp  
  4080a3:	int3   
  4080a4:	push   ss
  4080a5:	mov    esi,0x538300
  4080aa:	clc    
  4080ab:	add    BYTE PTR [edx-0x1f],al
  4080ae:	add    ah,cl
  4080b0:	push   cs
  4080b1:	(bad)  
  4080b2:	jmp    0x4080b4
  4080b4:	ret    
  4080b5:	iret   
  4080b6:	(bad)  
  4080b7:	jmp    DWORD PTR [ebp-0x1]
  4080ba:	inc    ebp
  4080bb:	add    BYTE PTR [ebx-0x5fff00c8],bh
  4080c1:	jmp    DWORD PTR [eax]
  4080c3:	push   edx
  4080c5:	outs   dx,DWORD PTR ds:[esi]
  4080c6:	(bad)  
  4080c7:	push   DWORD PTR [esi+0x3f00caff]
  4080cd:	xor    eax,0x8dffff
  4080d2:	or     edi,edi
  4080d4:	xlat   BYTE PTR ds:[ebx]
  4080d5:	mov    al,ds:0xffaaccff
  4080da:	jmp    0x5400:0xcce65a00
  4080e1:	add    BYTE PTR ds:0xff07c400,ah
  4080e7:	sbb    edx,0xffffff83
  4080ea:	retf   0x9700
  4080ed:	cmp    bh,bh
  4080ef:	add    BYTE PTR ds:0x1ffc589,bh
  4080f5:	rol    DWORD PTR [eax],0xff
  4080f8:	xlat   BYTE PTR ds:[ebx]
  4080f9:	call   ecx
  4080fb:	add    BYTE PTR [esi-0x23000036],bh
  408101:	adc    edx,0x0
  408104:	ins    DWORD PTR es:[edi],dx
  408105:	xor    DWORD PTR [eax],eax
  408107:	dec    DWORD PTR [eax]
  408109:	inc    DWORD PTR [eax+eax*1-0x4f]
  40810d:	cmp    bh,bh
  40810f:	cmp    DWORD PTR [ecx-0x1],0xffffffc0
  408113:	push   DWORD PTR [ebx-0x62]
  408116:	inc    DWORD PTR [ebx-0x76353400]
  40811c:	or     DWORD PTR [edi+edi*8],ebx
  40811f:	add    BYTE PTR [edx],ah
  408121:	add    BYTE PTR [edx-0x1],cl
  408124:	lods   eax,DWORD PTR ds:[esi]
  408125:	mov    esi,0xff3300ff
  40812a:	jle    0x40812b
  40812c:	cmp    al,0x38
  40812e:	inc    DWORD PTR [ebx-0x3fffa5]
  408134:	push   edx
  408135:	daa    
  408136:	(bad)  
  408137:	(bad)  
  408138:	js     0x40813a
  40813a:	test   al,0x0
  40813c:	push   edi
  40813d:	sub    al,0x0
  40813f:	inc    esp
  408141:	or     DWORD PTR [esi-0xad9c7d],0x0
  408148:	in     al,0xcc
  40814a:	push   ebp
  40814b:	add    BYTE PTR [ebp+0x51],bl
  40814e:	add    BYTE PTR [eax],al
  408150:	jecxz  0x40811e
  408152:	dec    ecx
  408153:	dec    DWORD PTR [ebx]
  408155:	jl     0x408156
  408157:	push   DWORD PTR [ebx+0x0]
  40815a:	xor    eax,0x11c289
  40815f:	push   ebx
  408161:	add    BYTE PTR [esi+0xbb4bff],ch
  408167:	push   DWORD PTR [ebx]
  408169:	dec    DWORD PTR [edi+0x21f9ff]
  40816f:	(bad)  
  408170:	aas    
  408171:	cmp    edi,0xffffffff
  408174:	cmp    BYTE PTR [esi],dh
  408176:	inc    DWORD PTR [ebx-0xea7656]
  40817c:	pop    ebp
  40817d:	jno    0x408108
  40817f:	sub    DWORD PTR [eax+0x46ff8700],0xffffffdb
  408186:	cmp    edi,0xffffffc3
  408189:	add    BYTE PTR [ecx-0x77],ah
  40818c:	ret    
  40818d:	call   0x800b91
  408192:	jl     0x408193
  408194:	pusha  
  408195:	push   ebx
  408196:	add    DWORD PTR [eax],0x59
  408199:	dec    DWORD PTR [edx]
  40819b:	add    BYTE PTR [ebp+0x11],dh
  40819e:	inc    DWORD PTR [eax]
  4081a0:	mov    eax,0x5dff03ff
  4081a5:	adc    edi,edi
  4081a7:	int3   
  4081a8:	(bad)  
  4081a9:	int3   
  4081aa:	fdiv   st(7),st
  4081ac:	les    esi,FWORD PTR [ebx+0x0]
  4081af:	add    dl,dl
  4081b1:	add    BYTE PTR [esi+0x758bff],ah
  4081b7:	sub    ecx,0xffffffff
  4081ba:	push   esi
  4081bb:	add    BYTE PTR [eax],al
  4081bd:	xchg   esp,eax
  4081be:	inc    DWORD PTR [eax]
  4081c0:	repz add BYTE PTR [ecx+ecx*4-0x7d],cl
  4081c5:	or     DWORD PTR [eax],eax
  4081c7:	int3   
  4081c8:	and    al,0x89
  4081ca:	jmp    0x17ff:0xf83800
  4081d1:	add    DWORD PTR [edi-0x1],0xffffffad
  4081d5:	in     eax,dx
  4081d6:	(bad)  
  4081d7:	push   edi
  4081d9:	jmp    FWORD PTR [ebp-0x1]
  4081dc:	add    edx,ecx
  4081de:	inc    DWORD PTR [ebx-0x413331]
  4081e4:	out    dx,eax
  4081e5:	retf   0x0
  4081e8:	repnz dec edx
  4081eb:	add    cl,cl
  4081ed:	mov    al,0xff
  4081ef:	push   DWORD PTR [eax+0x34fffbff]
  4081f5:	xor    eax,DWORD PTR [eax]
  4081f7:	int3   
  4081f8:	cmp    edi,edi
  4081fa:	enter  0x77ff,0x15
  4081fe:	add    bh,bh
  408200:	das    
  408201:	add    al,al
  408203:	inc    DWORD PTR ds:0xaa00ff5f
  408209:	add    ch,dh
  40820b:	add    BYTE PTR [esp+ebx*4],bh
  40820e:	int3   
  40820f:	jmp    FWORD PTR [ecx]
  408211:	call   ebp
  408213:	jmp    DWORD PTR [esi+ebp*8-0xc3301]
  40821a:	xor    al,0x83
  40821c:	outs   dx,DWORD PTR ds:[esi]
  40821d:	push   edi
  40821e:	(bad)  
  40821f:	dec    DWORD PTR [edi+0x0]
  408222:	lods   al,BYTE PTR ds:[esi]
  408223:	add    bl,cl
  408225:	jecxz  0x408226
  408227:	xor    DWORD PTR [ecx],0xffffffff
  40822a:	mov    ds:0x89b412cc,al
  40822f:	add    BYTE PTR [esi],bl
  408231:	add    ah,ch
  408233:	jmp    DWORD PTR [edx+0x5fffff5b]
  408239:	or     DWORD PTR [edx],0xffffffcc
  40823c:	fistp  DWORD PTR [ebx+eax*4-0x66ffde00]
  408243:	dec    DWORD PTR [ebx]
  408245:	jg     0x408246
  408247:	dec    DWORD PTR [edx+0x69897fff]
  40824d:	add    DWORD PTR [eax],eax
  40824f:	inc    DWORD PTR [ecx-0xb005501]
  408255:	xor    edi,edi
  408257:	add    dh,al
  408259:	call   edi
  40825b:	mov    DWORD PTR [edx],esp
  40825d:	aas    
  40825e:	inc    DWORD PTR [eax]
  408260:	loopne 0x408262
  408262:	xor    eax,0xffe1e783
  408267:	mov    DWORD PTR [edi],ebp
  408269:	cmp    DWORD PTR [ebp+0x0],0xf
  40826d:	lahf   
  40826e:	mov    edi,edi
  408270:	or     bh,bh
  408272:	add    BYTE PTR [eax],0xe5
  408275:	sar    edi,cl
  408277:	int3   
  408278:	outs   dx,BYTE PTR ds:[esi]
  408279:	add    BYTE PTR [edi],cl
  40827b:	add    BYTE PTR [ebx-0x80],cl
  40827e:	add    ah,cl
  408280:	sub    al,0x0
  408282:	pop    ebx
  408283:	add    BYTE PTR [esi+edi*4],cl
  408286:	cmp    edi,0x3b
  408289:	push   DWORD PTR [edi-0x3311f501]
  40828f:	jmp    edi
  408291:	mov    edx,ebp
  408293:	jmp    DWORD PTR [esi-0x62]
  408296:	inc    DWORD PTR [eax]
  408298:	push   ecx
  408299:	jmp    DWORD PTR [eax+eax*1]
  40829c:	cmp    DWORD PTR [edx],ebp
  40829e:	int3   
  40829f:	add    BYTE PTR [ebx+0x0],ah
  4082a2:	ret    
  4082a3:	(bad)  
  4082a4:	fmul   st,st(0)
  4082a6:	(bad)  
  4082a7:	call   DWORD PTR [esi]
  4082a9:	add    BYTE PTR [ebx+0x9d3dff],bh
  4082af:	add    BYTE PTR [esp+ecx*8],ah
  4082b2:	inc    eax
  4082b3:	jmp    FWORD PTR [edx]
  4082b5:	mov    ah,0x0
  4082b7:	call   ebx
  4082b9:	push   edi
  4082bb:	add    edx,0xfffffffd
  4082be:	dec    DWORD PTR [ecx-0xf7ff86]
  4082c4:	dec    ebp
  4082c5:	dec    edx
  4082c6:	dec    DWORD PTR [ecx+0x608377]
  4082cc:	hlt    
  4082cd:	pop    ds
  4082ce:	inc    DWORD PTR [eax]
  4082d0:	mov    ds:0x26006400,al
  4082d5:	test   bh,bh
  4082d7:	call   DWORD PTR [ecx-0x7d]
  4082da:	jle    0x4082dc
  4082dc:	scas   eax,DWORD PTR es:[edi]
  4082dd:	repz cmp edi,0xffffff82
  4082e1:	jmp    ebx
  4082e3:	or     DWORD PTR [edx],0x51
  4082e6:	(bad)  
  4082e7:	(bad)  
  4082e8:	stc    
  4082e9:	call   DWORD PTR [ebp-0x1]
  4082ec:	lods   eax,DWORD PTR ds:[esi]
  4082ed:	cmp    eax,DWORD PTR [eax]
  4082ef:	(bad)  
  4082f0:	call   0x903fd8f5
  4082f5:	push   edx
  4082f6:	dec    DWORD PTR [ecx+0x3a00bd]
  4082fc:	mov    al,ds:0xdcffff43
  408301:	(bad)  
  408302:	fild   DWORD PTR [eax]
  408304:	pop    edi
  408305:	inc    ebp
  408306:	inc    DWORD PTR [ebx-0x76980036]
  40830c:	(bad)  ds:0x89abccff
  408312:	add    edi,edi
  408314:	int    0xc
  408316:	inc    DWORD PTR [eax]
  408318:	cmp    al,0x83
  40831a:	and    ah,cl
  40831c:	stos   BYTE PTR es:[edi],al
  40831d:	push   ecx
  40831e:	add    BYTE PTR [eax],al
  408320:	xor    al,0xff
  408322:	(bad)
  408325:	pop    ss
  408326:	mov    DWORD PTR [eax],eax
  408328:	pop    ss
  408329:	(bad)  
  40832a:	(bad)  
  40832c:	ds mov edi,?
  40832f:	jmp    DWORD PTR [ecx+0x6ff3300]
  408335:	add    DWORD PTR [eax],0xffffffff
  408338:	sar    bh,cl
  40833a:	imul   edi,edi,0x602f
  408340:	add    cl,ah
  408342:	push   eax
  408343:	dec    DWORD PTR [edi]
  408345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408346:	add    BYTE PTR [ebx-0x7c63762e],al
  40834c:	push   ecx
  40834d:	sub    al,0xff
  40834f:	dec    DWORD PTR [edi]
  408351:	call   eax
  408353:	add    al,al
  408355:	pop    esi
  408356:	inc    DWORD PTR [eax]
  408358:	add    edi,edi
  40835a:	dec    esp
  40835b:	dec    DWORD PTR [edi]
  40835d:	ja     0x40835e
  40835f:	(bad)  
  408360:	in     al,dx
  408361:	add    cl,ch
  408363:	(bad)  
  408364:	fild   QWORD PTR [edi+edi*8]
  408367:	add    bh,ch
  408369:	add    BYTE PTR [edi+edi*8+0xff9118],cl
  408370:	test   al,0x0
  408372:	mov    ebx,0x8324a8ff
  408377:	call   ecx
  408379:	dec    ebp
  40837b:	and    edi,0x42
  40837e:	(bad)  
  40837f:	call   FWORD PTR [esi]
  408381:	int3   
  408382:	(bad)  
  408385:	dec    edx
  408386:	add    BYTE PTR [ebx-0xb1fff2],al
  40838c:	inc    ecx
  40838d:	repnz int3 
  40838f:	call   FWORD PTR [edx+0x5eff97ff]
  408395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408396:	add    ah,cl
  408398:	cmp    DWORD PTR [ebx-0x2bb7000e],eax
  40839e:	int3   
  40839f:	(bad)  
  4083a0:	jmp    0xffa3:0xafff200
  4083a7:	dec    DWORD PTR [ebx-0x34]
  4083aa:	scas   eax,DWORD PTR es:[edi]
  4083ab:	push   DWORD PTR [ebx+0x6b00ff31]
  4083b1:	add    BYTE PTR [eax+eax*1],dh
  4083b4:	daa    
  4083b5:	xor    bh,bh
  4083b7:	jmp    FWORD PTR ds:0x9c83ad00
  4083bd:	mov    cl,0x0
  4083bf:	(bad)  
  4083c0:	fadd   DWORD PTR [ebx-0x23740088]
  4083c6:	add    BYTE PTR [eax],al
  4083c8:	mov    edi,0xbfffa1ff
  4083cd:	jne    0x4083ce
  4083cf:	add    BYTE PTR [esi-0x1],dh
  4083d2:	inc    ebx
  4083d3:	call   FWORD PTR [eax+0x7b00cc93]
  4083d9:	add    BYTE PTR [eax-0xa2ed7d],bh
  4083df:	push   esi
  4083e1:	(bad)  
  4083e2:	jnp    0x4083e4
  4083e4:	or     al,0x99
  4083e6:	(bad)  
  4083e7:	jmp    FWORD PTR [ebp-0x34]
  4083ea:	bound  eax,QWORD PTR [ebx+0x8333d3]
  4083f0:	popf   
  4083f1:	jmp    DWORD PTR [eax+eax*1+0xff7078]
  4083f8:	lods   eax,DWORD PTR ds:[esi]
  4083f9:	add    BYTE PTR [edi-0x7d],bl
  4083fc:	jle    0x4083f3
  4083fe:	dec    esp
  408400:	jns    0x408401
  408402:	inc    esi
  408403:	or     DWORD PTR [eax],0x7a
  408406:	add    BYTE PTR [ebx-0x507cef],al
  40840c:	ins    DWORD PTR es:[edi],dx
  40840d:	pop    ds
  40840e:	add    bh,bh
  408410:	test   edi,edi
  408412:	sbb    edi,edi
  408414:	jmp    0xe44083d4
  408419:	mov    DWORD PTR [ecx-0x1],edx
  40841c:	lea    edx,[esi+0x0]
  40841f:	(bad)  
  408420:	mov    ebp,0x6fff3600
  408425:	add    DWORD PTR [eax],eax
  408427:	add    BYTE PTR [eax-0x34],dl
  40842a:	fadd   DWORD PTR [eax]
  40842c:	shr    BYTE PTR [edi-0x7d0000],1
  408432:	or     al,BYTE PTR [eax]
  408434:	dec    ecx
  408435:	xor    DWORD PTR [ecx+0x6affe3ff],ecx
  40843b:	add    DWORD PTR [ebx-0x48],0xffffffff
  40843f:	add    BYTE PTR [ecx],ch
  408441:	call   FWORD PTR [ebx+0x0]
  408444:	dec    edx
  408445:	add    BYTE PTR [eax+0x48],bl
  408448:	(bad)  
  408449:	inc    DWORD PTR [eax]
  40844b:	loop   0x40844c
  40844d:	jns    0x40848f
  40844f:	add    BYTE PTR [ebx+eax*4],cl
  408452:	inc    ecx
  408453:	int3   
  408454:	pop    ds
  408455:	inc    DWORD PTR [edx+0x49]
  408458:	inc    DWORD PTR [eax]
  40845a:	and    edx,0x0
  40845d:	ret    
  40845e:	stos   BYTE PTR es:[edi],al
  40845f:	add    DWORD PTR [ebx-0x95ffb7],0xffffff83
  408466:	das    
  408467:	sub    bh,bh
  408469:	mov    ah,cl
  40846b:	adc    edi,edi
  40846d:	int3   
  40846e:	inc    edx
  40846f:	and    edi,edi
  408471:	push   0xffffffff
  408473:	pop    ebp
  408474:	inc    DWORD PTR [ebx-0x41ff4232]
  40847a:	mov    edi,esi
  40847c:	inc    DWORD PTR [eax]
  40847e:	cmp    BYTE PTR [esi-0x1],ch
  408481:	xchg   BYTE PTR [eax],al
  408483:	xchg   edi,eax
  408484:	add    BYTE PTR [ecx+0x13ff2375],cl
  40848a:	push   edx
  40848c:	add    bh,bh
  40848e:	ss std 
  408490:	push   DWORD PTR [ecx-0x1]
  408493:	inc    eax
  408494:	(bad)  
  408495:	inc    DWORD PTR [edi+0x67]
  408498:	inc    DWORD PTR [eax-0x3300f501]
  40849e:	rep lods eax,DWORD PTR ds:[esi]
  4084a0:	add    bl,al
  4084a2:	push   DWORD PTR [esi+0x210effff]
  4084a8:	(bad)  
  4084a9:	fadd   DWORD PTR [eax]
  4084ab:	xor    eax,DWORD PTR [eax]
  4084ad:	mov    eax,esp
  4084af:	out    dx,al
  4084b0:	add    BYTE PTR [eax],ah
  4084b2:	jmp    ebp
  4084b4:	dec    DWORD PTR [ecx+0x5a00f1da]
  4084ba:	jmp    DWORD PTR [ecx]
  4084bc:	(bad)  
  4084bd:	call   DWORD PTR [esi-0x45]
  4084c0:	add    cl,ah
  4084c2:	call   DWORD PTR ds:0x9b0183ff
  4084c8:	add    BYTE PTR [eax],ah
  4084ca:	jmp    FWORD PTR [edx-0x20b3ff01]
  4084d0:	add    BYTE PTR [eax+eax*1+0x38ffcc3b],cl
  4084d7:	sub    al,0xcc
  4084d9:	mov    DWORD PTR [eax],0xc10000e1
  4084df:	push   ss
  4084e0:	call   DWORD PTR [ecx+0x0]
  4084e3:	cmp    eax,0xfc29ffff
  4084e8:	add    dh,cl
  4084ea:	add    BYTE PTR [ebx],al
  4084ec:	add    BYTE PTR [eax],al
  4084ee:	iret   
  4084ef:	bound  eax,QWORD PTR [eax]
  4084f1:	icebp  
  4084f2:	add    BYTE PTR [ecx],al
  4084f4:	dec    DWORD PTR [ecx+0x6b002b86]
  4084fa:	add    BYTE PTR [eax+eax*1],bl
  4084fd:	add    BYTE PTR [edx],dh
  4084ff:	jno    0x4084cd
  408501:	outs   dx,DWORD PTR ds:[esi]
  408502:	add    cl,dh
  408504:	add    BYTE PTR [ecx+0x66ff34bd],cl
  40850a:	add    BYTE PTR [edi-0x1],bh
  40850d:	add    BYTE PTR [eax+eiz*1-0x1],dl
  408511:	inc    edi
  408512:	add    BYTE PTR [edi],cl
  408514:	add    bh,bh
  408516:	call   esi
  408518:	dec    edx
  40851a:	inc    DWORD PTR [edi-0x7b67d00]
  408520:	dec    DWORD PTR [eax]
  408522:	call   FWORD PTR [esi-0x1]
  408525:	(bad)  
  408526:	mov    eax,0xff828983
  40852b:	dec    ebx
  40852c:	inc    DWORD PTR [eax]
  40852e:	in     eax,dx
  40852f:	(bad)  
  408530:	(bad)  
  408531:	stc    
  408532:	push   esi
  408534:	mov    edi,edi
  408536:	(bad)  
  408537:	jg     0x408538
  408539:	cs mov esi,esi
  40853c:	(bad)  
  40853d:	push   esi
  40853f:	jo     0x408541
  408541:	cmc    
  408542:	add    esi,0xffffffff
  408545:	int3   
  408546:	inc    esp
  408547:	mov    al,ds:0x9889a883
  40854c:	add    ah,cl
  40854e:	and    al,0x94
  408550:	jmp    DWORD PTR [esi-0x7c76e801]
  408556:	and    eax,0x51ffe3
  40855b:	aad    0xff
  40855d:	inc    DWORD PTR [edi]
  40855f:	aad    0x83
  408561:	mov    bh,0x0
  408563:	(bad)  
  408564:	add    DWORD PTR [ebx+0x7dff461a],0xffffffff
  40856b:	sub    DWORD PTR [eax],eax
  40856d:	(bad)  
  40856e:	mov    edx,0xff82833a
  408573:	mov    esi,0x31b200ff
  408578:	call   DWORD PTR [esi]
  40857a:	add    BYTE PTR [eax],al
  40857c:	int3   
  40857d:	call   DWORD PTR [ebp-0x4e]
  408580:	cmp    DWORD PTR [esi-0x33009234],0xffffffdb
  408587:	jae    0x408588
  408589:	jne    0x40858b
  40858b:	add    al,0xff
  40858d:	inc    DWORD PTR ds:0x91ff0a
  408593:	sbb    al,0xff
  408595:	jmp    FWORD PTR [eax+eiz*8]
  408598:	(bad)  
  408599:	in     eax,dx
  40859a:	add    BYTE PTR [ebp-0x1],ch
  40859d:	inc    DWORD PTR [eax]
  40859f:	rol    BYTE PTR [eax],1
  4085a1:	sub    eax,0xff004100
  4085a6:	mov    WORD PTR [ecx-0x7d],gs
  4085a9:	jnp    0x4085aa
  4085ab:	xchg   edx,eax
  4085ac:	add    bh,bh
  4085ae:	cdq    
  4085af:	push   ebp
  4085b0:	or     DWORD PTR [edi+edi*8+0x2b000062],0xffffffb8
  4085b8:	and    DWORD PTR [ebx-0x1],0xffffff88
  4085bc:	dec    esp
  4085be:	xchg   BYTE PTR [edx+0x9007300],ah
  4085c4:	inc    DWORD PTR [ebx-0x6f00d388]
  4085ca:	add    bl,bh
  4085cc:	add    bh,bh
  4085ce:	out    dx,eax
  4085cf:	bswap  esp
  4085d1:	jmp    0x4085d3
  4085d3:	pop    ebp
  4085d4:	inc    DWORD PTR [ebx+0x5a000dfa]
  4085da:	cmp    edx,0xffffffff
  4085dd:	add    BYTE PTR [ebp+edi*1-0x1],bh
  4085e1:	adc    ecx,esp
  4085e3:	mov    DWORD PTR [eax],0xfffe8cff
  4085e9:	int3   
  4085ea:	add    ah,dh
  4085ec:	add    BYTE PTR [eax],al
  4085ee:	ins    BYTE PTR es:[edi],dx
  4085ef:	jns    0x4085f1
  4085f1:	mov    al,0xff
  4085f3:	(bad)  
  4085f4:	inc    DWORD PTR [eax]
  4085f6:	int3   
  4085f7:	das    
  4085f8:	call   DWORD PTR [ebx-0x1]
  4085fb:	push   esi
  4085fc:	add    bh,bh
  4085fe:	add    ebp,DWORD PTR [ecx-0x34]
  408601:	sub    al,0xff
  408603:	je     0x408605
  408605:	call   edi
  408607:	fwait
  408608:	add    BYTE PTR [esp+ecx*8-0x77],cl
  40860c:	inc    DWORD PTR [eax]
  40860e:	mov    WORD PTR [edx],fs
  408610:	jmp    FWORD PTR [edi+edi*8]
  408613:	loop   0x40859e
  408615:	add    BYTE PTR [ebp-0x36],al
  408618:	add    BYTE PTR [eax+eax*1+0x6100cc71],bl
  40861f:	fild   WORD PTR [eax]
  408621:	mov    BYTE PTR [eax],al
  408623:	daa    
  408624:	(bad)  
  408625:	jmp    FWORD PTR [eax-0x50]
  408628:	or     DWORD PTR [eax],0xffffffff
  40862b:	aaa    
  40862c:	dec    esp
  40862e:	sar    DWORD PTR [ecx-0xe003e00],0xff
  408635:	int3   
  408636:	jmp    0x40864b
  408638:	add    cl,bl
  40863a:	add    dh,bh
  40863c:	inc    DWORD PTR [ebx-0x7fffb6b1]
  408642:	xor    DWORD PTR [edi],0x0
  408645:	(bad)  
  408646:	jg     0x40862c
  408648:	jmp    DWORD PTR ds:0xffc600
  40864e:	jo     0x4085df
  408650:	(bad)  
  408651:	cli    
  408652:	add    bh,ch
  408654:	add    bh,bh
  408656:	pop    esi
  408657:	stos   DWORD PTR es:[edi],eax
  408658:	add    BYTE PTR [edi+0x0],dh
  40865b:	out    dx,al
  40865c:	(bad)  
  40865d:	dec    DWORD PTR [eax+0x72]
  408660:	add    BYTE PTR [ecx+0xffb583],cl
  408666:	scas   eax,DWORD PTR es:[edi]
  408667:	push   ds
  408668:	int3   
  408669:	sar    bh,1
  40866b:	out    0xff,al
  40866d:	int3   
  40866e:	jne    0x40868d
  408670:	call   FWORD PTR ds:0x83ffdc00
  408676:	xchg   edi,eax
  408677:	jl     0x408678
  408679:	pop    es
  40867a:	jmp    FWORD PTR [ecx+0x684f8300]
  408680:	mov    esi,ebp
  408682:	or     DWORD PTR ds:0xa13bffff,0xffffffff
  408689:	rol    BYTE PTR [eax],0xe8
  40868c:	inc    DWORD PTR [eax]
  40868e:	bound  eax,QWORD PTR [ecx]
  408690:	int3   
  408691:	test   eax,0xff48cc
  408696:	lock ret 0x3383
  40869a:	xor    ebp,0xffffffff
  40869d:	call   DWORD PTR [edx-0x30]
  4086a0:	jmp    ebp
  4086a2:	inc    DWORD PTR [esi]
  4086a4:	inc    DWORD PTR [eax]
  4086a6:	pop    es
  4086a7:	sar    edi,cl
  4086a9:	(bad)  
  4086ab:	xchg   esi,eax
  4086ac:	inc    DWORD PTR [eax]
  4086ae:	test   DWORD PTR [eax-0x1],edx
  4086b1:	idiv   bh
  4086b3:	xchg   esi,eax
  4086b4:	add    BYTE PTR [eax],al
  4086b6:	arpl   WORD PTR [edi+edi*8],bx
  4086b9:	pop    es
  4086ba:	inc    DWORD PTR [eax-0x4dd0100]
  4086c0:	add    BYTE PTR [ecx],bl
  4086c2:	add    BYTE PTR [eax],dh
  4086c4:	int3   
  4086c5:	jmp    DWORD PTR [ebx]
  4086c7:	cli    
  4086c8:	int3   
  4086c9:	pop    ecx
  4086ca:	sbb    DWORD PTR [esi+0x6e8dff00],0x0
  4086d1:	add    bh,bh
  4086d3:	mov    ecx,0x5fd00000
  4086d8:	mov    DWORD PTR [edx-0x77],edi
  4086db:	mov    esi,0xf3faffff
  4086e0:	add    bh,ch
  4086e2:	jmp    FWORD PTR [edx+0x2f89ff00]
  4086e8:	add    BYTE PTR [esi-0x7cff4001],dh
  4086ee:	mov    ah,0x52
  4086f0:	jmp    FWORD PTR [ecx-0x33e877]
  4086f6:	loope  0x408684
  4086f8:	add    BYTE PTR [ebx+eax*4-0x7bff00ec],dl
  4086ff:	mov    edx,0x51006fff
  408704:	dec    DWORD PTR [ecx+0x6cffe64b]
  40870a:	jmp    FWORD PTR [ecx+0x75678383]
  408710:	add    BYTE PTR [edi+edi*8],bl
  408713:	sub    edi,edi
  408715:	(bad)  
  408716:	fnstenv [edi+edi*8+0x32]
  40871a:	add    BYTE PTR [ecx+ecx*4],ah
  40871d:	call   FWORD PTR [esi+0xa]
  408720:	jmp    FWORD PTR ds:0x83ffb8ff
  408726:	(bad)  
  408727:	and    al,0xff
  408729:	mov    bl,0xcc
  40872b:	push   edi
  40872c:	add    bh,bh
  40872e:	sub    al,0xd7
  408730:	and    DWORD PTR [ecx-0x3300f87d],0xa
  408737:	push   edx
  408738:	jmp    FWORD PTR [ecx]
  40873a:	add    BYTE PTR [eax-0x2139007d],al
  408740:	sbb    DWORD PTR [esi+0x0],0x40
  408744:	add    bh,bh
  408746:	aam    0x4b
  408748:	jmp    DWORD PTR [edx+0xff61ff]
  40874e:	pusha  
  40874f:	(bad)  
  408750:	dec    DWORD PTR [ebx-0xf000]
  408756:	mov    ch,0x68
  408758:	or     esp,0xffffffff
  40875b:	cmc    
  40875c:	inc    DWORD PTR [eax]
  40875e:	and    eax,0xcc6dccc2
  408763:	or     edi,edi
  408765:	int3   
  408766:	cmp    eax,DWORD PTR [esi]
  408768:	mov    DWORD PTR [eax-0x7c7c0301],esi
  40876e:	jns    0x408724
  408770:	adc    DWORD PTR [esi],0xffffffff
  408773:	stc    
  408774:	(bad)  
  408775:	jmp    DWORD PTR [ebx+0xf08331]
  40877b:	pop    es
  40877c:	inc    DWORD PTR [ebx+0x6183fab7]
  408782:	add    BYTE PTR [ecx-0x59560001],bh
  408788:	call   DWORD PTR [ecx]
  40878a:	dec    DWORD PTR [ebx-0x1]
  40878d:	jmp    ecx
  40878f:	push   cs
  408790:	add    BYTE PTR [ebp+0x0],ch
  408793:	pop    esi
  408794:	add    DWORD PTR [eax],0xfffffffb
  408797:	jmp    0x408798
  408799:	cdq    
  40879a:	jmp    DWORD PTR [edi-0x1]
  40879d:	dec    DWORD PTR [esi+0x69]
  4087a0:	add    BYTE PTR [ebp-0x337c0d00],cl
  4087a6:	cmp    eax,DWORD PTR [esi]
  4087a8:	add    BYTE PTR [edx+0xffe700],dh
  4087ae:	inc    ecx
  4087af:	inc    ebx
  4087b0:	jmp    FWORD PTR [ebp-0x7cff4634]
  4087b6:	sub    eax,0x7c00d1
  4087bb:	mov    DWORD PTR [eax],eax
  4087bd:	int3   
  4087be:	shl    DWORD PTR [ebx-0x1],0x7e
  4087c2:	add    BYTE PTR [ebx-0x74990001],dl
  4087c8:	call   DWORD PTR ds:0xff1000
  4087ce:	ins    DWORD PTR es:[edi],dx
  4087cf:	mov    ch,0xff
  4087d1:	inc    esp
  4087d2:	call   ecx
  4087d4:	(bad)  
  4087d5:	call   FWORD PTR [edx]
  4087d7:	repz push DWORD PTR [eax-0xc00]
  4087de:	cli    
  4087df:	push   eax
  4087e0:	add    dl,dh
  4087e2:	call   FWORD PTR [eax-0x1]
  4087e5:	int3   
  4087e6:	imul   eax,DWORD PTR [ebx],0xffffffff
  4087e9:	sbb    BYTE PTR [eax],al
  4087eb:	or     cl,ah
  4087ed:	add    BYTE PTR [edi+eiz*8],bl
  4087f0:	add    dl,bh
  4087f2:	add    BYTE PTR [esi-0x1],bl
  4087f5:	add    DWORD PTR [ebp-0x3e],0xffffff83
  4087f9:	dec    esi
  4087fa:	add    BYTE PTR [ebx-0x1],dh
  4087fd:	add    BYTE PTR [ebp-0x80],ch
  408800:	mov    DWORD PTR [ebx-0x1],ecx
  408803:	push   edx
  408804:	add    bh,bh
  408806:	fild   QWORD PTR [esi-0x1]
  408809:	add    BYTE PTR [eax],0xcf
  40880c:	(bad)  
  40880d:	(bad)  
  40880e:	cmp    edx,edx
  408810:	add    edi,0x0
  408813:	pop    es
  408814:	add    bh,bh
  408816:	pop    edi
  408817:	mov    bl,0xff
  408819:	js     0x40881b
  40881b:	push   esp
  40881c:	inc    DWORD PTR [ebx+0x65ffeeb8]
  408822:	jmp    FWORD PTR [eax-0x1]
  408825:	sbb    DWORD PTR [edx+0x29],0xffffffcc
  408829:	hlt    
  40882a:	mov    ebp,ebx
  40882c:	inc    DWORD PTR [eax]
  40882e:	sub    bh,BYTE PTR [ecx]
  408830:	add    BYTE PTR [ecx],dl
  408832:	jmp    FWORD PTR [edi-0x1]
  408835:	add    BYTE PTR ds:0xff2aff24,bh
  40883b:	push   ds
  40883c:	inc    DWORD PTR [ebx+0x4700a6ff]
  408842:	(bad)  
  408843:	mov    ecx,0x8995ffff
  408848:	add    BYTE PTR [ebp-0xfffb00],dl
  40884e:	imul   ecx,DWORD PTR [eax-0x7d],0x6c
  408852:	sub    DWORD PTR [eax],0xffffffff
  408855:	add    BYTE PTR [ecx+0xdccf8],cl
  40885b:	aaa    
  40885c:	add    BYTE PTR [eax],al
  40885e:	outs   dx,BYTE PTR ds:[esi]
  40885f:	dec    edx
  408860:	int3   
  408861:	daa    
  408862:	inc    DWORD PTR [eax]
  408864:	(bad)  
  408865:	jmp    DWORD PTR [edx+0x40]
  408868:	add    bl,bl
  40886a:	mov    DWORD PTR [ebp+0x4689ff00],esp
  408870:	add    BYTE PTR [ebx-0xffd301],ah
  408876:	ficomp DWORD PTR [esi-0x1]
  408879:	aas    
  40887a:	push   DWORD PTR [edx+0x0]
  40887d:	dec    DWORD PTR [esp+edi*8]
  408880:	and    DWORD PTR [edx],0xffffffff
  408883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408884:	inc    DWORD PTR [ebx+0x60898939]
  40888a:	dec    ebx
  40888c:	mov    DWORD PTR [ebx-0xcff79eb],eax
  408892:	push   DWORD PTR [ecx]
  408894:	cmp    edi,0x4f
  408897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408898:	add    dl,bl
  40889a:	mov    DWORD PTR [ebx-0x1],esi
  40889d:	mov    DWORD PTR [eax-0x4c],ebx
  4088a0:	add    BYTE PTR [ebx+0x83ceff],bh
  4088a6:	movd   edi,mm7
  4088a9:	rol    DWORD PTR [eax],cl
  4088ab:	je     0x4088ac
  4088ad:	add    BYTE PTR ds:0xffbfffeb,bl
  4088b3:	in     eax,0xff
  4088b5:	int3   
  4088b6:	nop
  4088b7:	lahf   
  4088b8:	int3   
  4088b9:	dec    edx
  4088ba:	inc    DWORD PTR [eax+eax*1+0x837a00]
  4088c1:	mov    ebp,0x830076ff
  4088c6:	add    eax,0xc6ff6f
  4088cb:	sub    al,0xff
  4088cd:	add    BYTE PTR [edx-0x2e],cl
  4088d0:	add    BYTE PTR [edi-0x77],ah
  4088d3:	adc    al,0x0
  4088d5:	int3   
  4088d6:	add    al,BYTE PTR ds:0xa9007c89
  4088dc:	add    bh,bh
  4088de:	in     al,dx
  4088df:	xor    al,BYTE PTR [ebx-0x1a00ce]
  4088e5:	(bad)  
  4088e6:	cli    
  4088e7:	sar    edi,0x2a
  4088ea:	(bad)  
  4088eb:	mov    esp,0xee8583ff
  4088f0:	int3   
  4088f1:	mov    bl,0xff
  4088f3:	inc    eax
  4088f4:	add    BYTE PTR [eax],al
  4088f6:	push   ds
  4088f7:	int3   
  4088f8:	push   DWORD PTR [edi+0x0]
  4088fb:	test   al,0xff
  4088fd:	inc    DWORD PTR [ebx-0x7c0030]
  408903:	sub    eax,0x6fe5cc00
  408908:	(bad)  
  408909:	js     0x40890a
  40890b:	xchg   BYTE PTR [eax],al
  40890d:	call   DWORD PTR [edx-0x30ff58]
  408913:	dec    eax
  408914:	inc    DWORD PTR [eax]
  408916:	add    DWORD PTR [eax+eax*1-0x80],esi
  40891a:	add    BYTE PTR [ebx],bl
  40891c:	int3   
  40891d:	jmp    FWORD PTR [esi+eax*1-0x1]
  408921:	push   edi
  408922:	dec    DWORD PTR [ebp-0x1]
  408925:	int3   
  408926:	aas    
  408927:	aam    0xff
  408929:	mov    ds:0xffff4383,al
  40892e:	jb     0xba40e434
  408934:	inc    DWORD PTR [ebx+0x1cffe5af]
  40893a:	int3   
  40893b:	push   ebx
  40893c:	mov    DWORD PTR [eax],eax
  40893e:	mov    cl,0x56
  408940:	add    BYTE PTR [ebp-0x2a01],cl
  408946:	mul    esi
  408948:	or     DWORD PTR [ebx+0x83e3cc],0xffffffb7
  40894f:	xchg   esp,eax
  408950:	add    dh,cl
  408952:	inc    DWORD PTR [ecx-0x1]
  408955:	(bad)  
  408956:	mov    esp,0x89ffff8e
  40895b:	push   ebx
  40895c:	add    bh,bh
  40895e:	out    0x16,eax
  408960:	jmp    DWORD PTR [eax-0x1]
  408963:	sar    bh,1
  408965:	add    BYTE PTR [eax+0x4c],ah
  408968:	(bad)  
  408969:	fmul   QWORD PTR [ecx+0x5b00ff13]
  40896f:	add    BYTE PTR gs:[ebx+eax*4],al
  408973:	(bad)  
  408974:	dec    DWORD PTR [ecx+0x4f83ecaf]
  40897a:	add    BYTE PTR [edi-0x77],bl
  40897d:	call   FWORD PTR [edx+0x43]
  408980:	call   eax
  408982:	add    BYTE PTR [edi-0x1ae33301],dl
  408988:	add    BYTE PTR [ebp+0x0],bl
  40898b:	pop    esi
  40898c:	add    ah,cl
  40898e:	and    eax,0xfa0006
  408993:	pop    esp
  408994:	cmp    edi,0x45
  408997:	mov    ebp,0xb3ff84ff
  40899c:	int3   
  40899d:	jmp    ebx
  40899f:	ja     0x40892a
  4089a1:	je     0x4089a2
  4089a3:	retf   
  4089a4:	inc    DWORD PTR [eax]
  4089a6:	rcl    BYTE PTR [esi+0x7800d4ff],cl
  4089ac:	int3   
  4089ad:	add    BYTE PTR [esi+edx*2+0x3cff0700],bh
  4089b4:	(bad)  
  4089b5:	(bad)  
  4089b6:	jge    0x40898a
  4089b8:	add    BYTE PTR [eax],ch
  4089ba:	jmp    FWORD PTR ds:0x2f200000
  4089c0:	int3   
  4089c1:	repz jmp FWORD PTR [ebx+0x0]
  4089c5:	inc    DWORD PTR [esi+0x8]
  4089c8:	push   DWORD PTR [ebx+eax*4]
  4089cb:	idiv   bh
  4089cd:	mov    ecx,esp
  4089cf:	mov    al,BYTE PTR [eax]
  4089d1:	or     bh,bh
  4089d3:	mov    al,0xff
  4089d5:	mov    ecx,ebp
  4089d7:	xlat   BYTE PTR ds:[ebx]
  4089d8:	add    DWORD PTR [edx+0xfffa00],0xffffffe7
  4089df:	mov    al,BYTE PTR [eax]
  4089e1:	scas   eax,DWORD PTR es:[edi]
  4089e2:	add    BYTE PTR [edi+0x68eaffff],al
  4089e8:	add    DWORD PTR [esi],0x0
  4089eb:	add    eax,DWORD PTR [ebx-0xcf9501]
  4089f1:	test   BYTE PTR [ebx-0x650000d4],0xf6
  4089f8:	dec    edx
  4089fa:	call   ebx
  4089fc:	add    bh,bh
  4089fe:	sahf   
  4089ff:	fadd   DWORD PTR [eax]
  408a01:	or     bh,bh
  408a03:	daa    
  408a04:	dec    DWORD PTR [ecx-0x22ff5e3f]
  408a0a:	add    BYTE PTR [esi],ch
  408a0c:	(bad)  
  408a0d:	jmp    FWORD PTR [edi+0x5affc0]
  408a13:	push   0xffffffff
  408a15:	cmp    DWORD PTR [edx],0xffffffcd
  408a18:	call   DWORD PTR [ebx-0x3300af77]
  408a1e:	push   edi
  408a1f:	aaa    
  408a20:	mov    DWORD PTR [edx],esi
  408a22:	jmp    esi
  408a24:	inc    DWORD PTR [eax]
  408a26:	cmp    esi,DWORD PTR [esi+0x6dcc4883]
  408a2c:	add    BYTE PTR [eax],al
  408a2e:	loop   0x408a8e
  408a30:	push   ebx
  408a32:	int3   
  408a33:	das    
  408a34:	mov    DWORD PTR [eax],eax
  408a36:	pop    DWORD PTR [eax]
  408a38:	(bad)  
  408a39:	jnp    0x408a07
  408a3b:	hlt    
  408a3c:	(bad)  
  408a3d:	jmp    DWORD PTR [edx+edi*4-0x17004f00]
  408a44:	add    bh,bh
  408a46:	mov    cl,0x1b
  408a48:	call   DWORD PTR [edi+edi*8-0x13]
  408a4c:	add    BYTE PTR [eax],al
  408a4e:	(bad)  
  408a4f:	or     cl,ah
  408a51:	leave  
  408a52:	dec    DWORD PTR [eax+eax*1-0x7d]
  408a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a57:	add    ecx,DWORD PTR [ecx-0x477cd8]
  408a5d:	jmp    esi
  408a5f:	mov    eax,ds:0x9b0086ff
  408a64:	inc    DWORD PTR [eax]
  408a66:	cli    
  408a67:	jo     0x408a68
  408a69:	call   0x404b6d
  408a6e:	mov    dh,0xde
  408a70:	add    BYTE PTR ds:0xff61ff,bl
  408a76:	sub    eax,0xffde0010
  408a7b:	mov    esp,0x948e00ff
  408a80:	add    ah,ch
  408a82:	inc    DWORD PTR [ecx+0x5041ff83]
  408a88:	(bad)  
  408a89:	mov    edi,0xffffef83
  408a8e:	mov    ecx,0xff12cce6
  408a93:	xchg   ecx,eax
  408a94:	add    BYTE PTR [ebx-0x63ffa851],al
  408a9a:	inc    DWORD PTR [edi]
  408a9c:	int3   
  408a9d:	call   DWORD PTR [ebx-0x55]
  408aa0:	inc    DWORD PTR [ecx-0x33ff6301]
  408aa6:	xchg   esi,eax
  408aa7:	loop   0x408a2c
  408aa9:	je     0x408aaa
  408aab:	xchg   edx,eax
  408aac:	int3   
  408aad:	push   edx
  408aaf:	pop    es
  408ab0:	add    BYTE PTR [ecx-0x1],bl
  408ab3:	int3   
  408ab4:	(bad)  
  408ab5:	push   DWORD PTR [esi]
  408ab7:	pop    esi
  408ab8:	int3   
  408ab9:	push   edx
  408aba:	jmp    FWORD PTR [ebp+0x14fa00ff]
  408ac0:	add    bh,dl
  408ac2:	add    BYTE PTR [edx],ch
  408ac4:	(bad)  
  408ac5:	inc    DWORD PTR [ecx-0x7c18ff13]
  408acb:	and    al,BYTE PTR [eax]
  408acd:	(bad)  
  408ace:	cli    
  408acf:	test   DWORD PTR [ebx+0x9eff71],0xffed4100
  408ad9:	pop    edx
  408ada:	(bad)  
  408adb:	cmp    eax,0x2f4300ff
  408ae0:	(bad)  
  408ae1:	jmp    FWORD PTR ds:[edi]
  408ae4:	int3   
  408ae5:	add    BYTE PTR [esi-0x2a],dl
  408ae8:	add    BYTE PTR [ebx+eax*4-0x5b000056],dh
  408aef:	ud0    esp,ebp
  408af2:	add    BYTE PTR [ebx],dh
  408af4:	(bad)  
  408af5:	call   FWORD PTR [ebp-0x7cc3333a]
  408afb:	push   0xffffff83
  408afd:	add    dl,cl
  408aff:	cmp    bh,bh
  408b01:	ins    DWORD PTR es:[edi],dx
  408b02:	add    BYTE PTR [edx-0x1],bl
  408b05:	add    BYTE PTR [ecx],ah
  408b07:	lods   eax,DWORD PTR ds:[esi]
  408b08:	add    BYTE PTR [edi-0x7d],ah
  408b0b:	pop    es
  408b0c:	dec    esp
  408b0e:	in     eax,dx
  408b0f:	sbb    eax,0x40839dff
  408b14:	add    BYTE PTR [ebx-0x227c61ed],al
  408b1a:	dec    DWORD PTR [eax+eax*1]
  408b1d:	call   FWORD PTR [ebx-0x900f7]
  408b23:	xchg   esp,eax
  408b24:	(bad)  
  408b25:	jmp    DWORD PTR [edx-0x80]
  408b28:	mov    ebx,edx
  408b2a:	call   FWORD PTR [edx-0x69f60100]
  408b30:	add    BYTE PTR [edx-0x1],dh
  408b33:	add    al,0x0
  408b35:	add    ch,bh
  408b37:	leave  
  408b38:	int3   
  408b39:	mov    edx,0xeb00
  408b3e:	xchg   ecx,eax
  408b3f:	mov    ?,edi
  408b41:	inc    esp
  408b42:	add    BYTE PTR [eax-0x77],bh
  408b45:	inc    DWORD PTR [edx+esi*8+0x1f83e2ff]
  408b4c:	inc    DWORD PTR [eax]
  408b4e:	addr16 inc ecx
  408b50:	add    ah,dh
  408b52:	jmp    edx
  408b54:	add    BYTE PTR [ecx+0x35ff7e92],cl
  408b5a:	add    cl,ch
  408b5c:	add    bh,bh
  408b5e:	inc    ebx
  408b5f:	mov    eax,ds:0x4eff3aff
  408b64:	add    BYTE PTR [eax],al
  408b66:	xchg   ebx,eax
  408b67:	xchg   edx,eax
  408b68:	add    BYTE PTR [eax+eax*1+0x1c83ffde],ah
  408b6f:	sub    al,0xff
  408b71:	cmp    al,0x0
  408b73:	scas   al,BYTE PTR es:[edi]
  408b74:	inc    DWORD PTR [eax]
  408b76:	inc    BYTE PTR fs:[eax]
  408b79:	sti    
  408b7a:	add    BYTE PTR [edi-0x1],ch
  408b7d:	int3   
  408b7e:	or     al,0xec
  408b80:	int3   
  408b81:	mov    edx,0xfff
  408b86:	push   0xfffffffc
  408b88:	jmp    FWORD PTR [edx-0x34]
  408b8b:	aad    0x89
  408b8d:	call   DWORD PTR [edi]
  408b8f:	stos   DWORD PTR es:[edi],eax
  408b90:	inc    DWORD PTR [ebp-0x7c005801]
  408b96:	rcl    BYTE PTR [ebp-0x677c2300],1
  408b9c:	(bad)  
  408b9d:	dec    DWORD PTR [ebx]
  408b9f:	dec    edx
  408ba0:	add    BYTE PTR [edi-0x7d],ah
  408ba3:	hlt    
  408ba4:	add    BYTE PTR [eax],al
  408ba6:	(bad)
  408baa:	add    BYTE PTR [edx-0x60950001],ah
  408bb0:	inc    ebx
  408bb2:	add    BYTE PTR [edi-0x7d],ch
  408bb5:	mov    DWORD PTR [esi+0xaa00b0],esp
  408bbb:	mov    al,BYTE PTR [eax]
  408bbd:	add    BYTE PTR [edi+0x87000e],bh
  408bc3:	xor    esp,ecx
  408bc5:	dec    DWORD PTR [ebx+0x58]
  408bc8:	push   DWORD PTR [edx-0x1300]
  408bce:	daa    
  408bcf:	gs int3 
  408bd1:	retf   0x3383
  408bd4:	add    BYTE PTR [eax],al
  408bd6:	jno    0x408b7b
  408bd8:	add    bh,cl
  408bda:	and    ebp,0x0
  408bdd:	call   FWORD PTR [edx+0x12]
  408be0:	push   DWORD PTR [ecx]
  408be2:	add    BYTE PTR [esi-0x1],bh
  408be5:	dec    DWORD PTR [eax+ecx*4+0x41007200]
  408bec:	cmp    edi,0xffffff8f
  408bef:	ror    esp,0x75
  408bf2:	int3   
  408bf3:	mov    ch,0xff
  408bf5:	add    cl,ch
  408bf7:	inc    esp
  408bf8:	add    BYTE PTR [ebp-0x7cff9401],ch
  408bfe:	outs   dx,DWORD PTR ds:[esi]
  408bff:	jns    0x408b84
  408c01:	mov    ds:0xffcc2b00,eax
  408c06:	mov    al,0xd4
  408c08:	jmp    DWORD PTR [edi-0x1]
  408c0b:	xchg   esi,eax
  408c0c:	inc    DWORD PTR [eax]
  408c0e:	mov    eax,0xcc61ffef
  408c13:	sbb    al,0x0
  408c15:	inc    ebp
  408c17:	lahf   
  408c18:	push   DWORD PTR [ebp-0x1]
  408c1b:	adc    edi,edi
  408c1d:	add    BYTE PTR [ebx-0xc5ffbd],dl
  408c23:	loope  0x408c24
  408c25:	add    BYTE PTR [ebx-0x7c357676],dh
  408c2b:	cli    
  408c2c:	inc    DWORD PTR [eax]
  408c2e:	lahf   
  408c2f:	aas    
  408c30:	inc    DWORD PTR [ecx+0x0]
  408c33:	jge    0x408c01
  408c35:	int3   
  408c36:	jns    0x408c14
  408c38:	push   DWORD PTR [ebp-0x33000d00]
  408c3e:	adc    eax,0x82ff1f
  408c43:	stc    
  408c44:	or     esp,0xffffffc1
  408c47:	cmp    edi,edi
  408c49:	add    eax,0xffcc7aff
  408c4e:	sbb    BYTE PTR [edx+0x0],ch
  408c51:	xor    al,0x89
  408c53:	push   ecx
  408c54:	int3   
  408c55:	dec    ebx
  408c57:	out    0x0,al
  408c59:	in     eax,dx
  408c5a:	inc    DWORD PTR [eax]
  408c5c:	(bad)  
  408c5d:	jmp    FWORD PTR [esp+edx*2+0x41ff8a83]
  408c64:	mov    edi,edi
  408c66:	pop    ecx
  408c67:	add    al,0xff
  408c69:	sar    edi,1
  408c6b:	push   ebp
  408c6c:	(bad)  
  408c6d:	push   DWORD PTR [ebx+ecx*4]
  408c70:	add    dh,dh
  408c72:	add    BYTE PTR [edi+edi*8+0x5ba183],al
  408c79:	stos   DWORD PTR es:[edi],eax
  408c7a:	call   ecx
  408c7c:	inc    DWORD PTR [eax]
  408c7e:	jnp    0x408c09
  408c80:	or     DWORD PTR [ecx-0x1],0xffffffd6
  408c84:	inc    DWORD PTR [ebx+0x2dcceb6c]
  408c8a:	cmp    DWORD PTR [eax],0xffffff89
  408c8d:	call   DWORD PTR [eax-0x72]
  408c90:	inc    DWORD PTR [ecx]
  408c92:	and    DWORD PTR [edi],0x0
  408c95:	add    dh,ch
  408c97:	fdiv   st(7),st
  408c99:	add    BYTE PTR ss:[eax+eax*1+0x0],ch
  408c9e:	sub    ecx,DWORD PTR [eax]
  408ca0:	add    BYTE PTR [ecx+0xff0083],ah
  408ca6:	inc    BYTE PTR [ebx+0x0]
  408ca9:	and    edi,edi
  408cab:	hlt    
  408cac:	inc    DWORD PTR [eax]
  408cae:	mov    ebx,fs
  408cb0:	jmp    DWORD PTR [ecx]
  408cb2:	int3   
  408cb3:	jmp    0xc8518cb7
  408cb8:	inc    ebx
  408cba:	inc    ecx
  408cbc:	add    bh,bh
  408cbe:	xor    cl,cl
  408cc0:	jmp    FWORD PTR [ecx-0x7d]
  408cc3:	mov    edi,?
  408cc5:	jmp    ebx
  408cc7:	pop    ebp
  408cc8:	add    bh,bl
  408cca:	(bad)  
  408ccb:	aas    
  408ccc:	add    BYTE PTR [eax],al
  408cce:	stos   DWORD PTR es:[edi],eax
  408ccf:	out    0xcc,eax
  408cd1:	dec    esp
  408cd2:	int3   
  408cd3:	add    cl,ah
  408cd5:	jmp    DWORD PTR [ebx+0x25]
  408cd8:	or     DWORD PTR [ebx-0x1],0x14
  408cdc:	inc    DWORD PTR [eax]
  408cde:	sub    BYTE PTR [edi+edi*8-0x75],0xff
  408ce3:	jmp    0x408ce4
  408ce5:	jmp    FWORD PTR [ecx-0x7cf2001e]
  408ceb:	inc    ecx
  408cec:	cmp    edi,0x40
  408cef:	cdq    
  408cf0:	add    BYTE PTR [edx],cl
  408cf2:	int3   
  408cf3:	cmp    ah,cl
  408cf5:	push   ebp
  408cf7:	out    0xcc,eax
  408cf9:	jae    0x408cfb
  408cfb:	or     eax,0x236fffff
  408d00:	call   DWORD PTR [edi+edi*8+0x2383cc0c]
  408d07:	pop    es
  408d08:	int3   
  408d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d0a:	inc    eax
  408d0c:	inc    DWORD PTR [eax]
  408d0e:	adc    eax,0xffa1
  408d13:	sub    DWORD PTR [eax],eax
  408d15:	or     DWORD PTR [esi-0xe8ffc3],0x8
  408d1c:	cmp    edi,0xffffffe8
  408d1f:	fld    QWORD PTR [eax]
  408d21:	ret    
  408d22:	add    BYTE PTR [eax-0x7d],dl
  408d25:	add    BYTE PTR [eax-0x470005],dl
  408d2b:	and    DWORD PTR [eax],eax
  408d2d:	call   FWORD PTR [edi]
  408d2f:	pop    ebp
  408d30:	push   DWORD PTR [ebp-0x1]
  408d33:	popa   
  408d34:	add    bh,bh
  408d36:	xor    al,0x34
  408d38:	call   FWORD PTR [esi]
  408d3a:	(bad)  
  408d3b:	aas    
  408d3c:	add    bh,bh
  408d3e:	pop    ebx
  408d3f:	add    BYTE PTR [bx],bh
  408d42:	inc    DWORD PTR [ecx-0x1]
  408d45:	jmp    DWORD PTR [ebp+ebx*1-0x1]
  408d49:	dec    ebp
  408d4a:	call   DWORD PTR [eax+eax*1]
  408d4d:	(bad)  
  408d4e:	stc    
  408d4f:	pushf  
  408d50:	add    BYTE PTR [esi-0xff1e01],al
  408d56:	cmp    DWORD PTR [edx+0x18ff7d00],esp
  408d5c:	int3   
  408d5d:	call   FWORD PTR [edi+0x3]
  408d60:	call   DWORD PTR [ecx-0x1]
  408d63:	fdivr  st,st(7)
  408d65:	add    BYTE PTR [edi],al
  408d67:	jmp    DWORD PTR gs:[esi+0x0]
  408d6b:	sbb    al,0xcc
  408d6d:	add    BYTE PTR [edx+ecx*1],bh
  408d70:	jmp    DWORD PTR [ebx-0x7d]
  408d73:	(bad)  
  408d75:	jmp    DWORD PTR [ecx-0xe57cd4]
  408d7b:	sbb    bh,bh
  408d7d:	add    bl,al
  408d7f:	scas   eax,DWORD PTR es:[edi]
  408d80:	sbb    DWORD PTR [eax-0x77],0x23
  408d84:	dec    DWORD PTR [ecx-0x3003a84]
  408d8a:	dec    DWORD PTR [ebp+0x1066ffff]
  408d90:	add    BYTE PTR [edi-0x1],dl
  408d93:	inc    eax
  408d94:	(bad)  
  408d95:	inc    edi
  408d97:	cmp    eax,DWORD PTR [eax]
  408d99:	sar    edi,0x9
  408d9c:	mov    edi,edi
  408d9e:	imul   edi,DWORD PTR [eax+0xcff49ff],0xc2acff00
  408da8:	add    BYTE PTR [edi+edi*8-0x6],dh
  408dac:	dec    esp
  408dae:	out    0x9f,eax
  408db0:	and    ecx,0xffffff89
  408db3:	js     0x408db5
  408db5:	add    BYTE PTR [ecx+0x8789f6],ah
  408dbb:	(bad)  
  408dbc:	inc    DWORD PTR [eax]
  408dbe:	out    dx,eax
  408dbf:	nop
  408dc0:	int3   
  408dc1:	test   eax,0xffff14cc
  408dc6:	inc    edx
  408dc7:	test   DWORD PTR [ebx+0x56fffe],eax
  408dcd:	add    BYTE PTR [edi-0x6bff70],dh
  408dd3:	loope  0x408dd4
  408dd5:	(bad)  
  408dd6:	clc    
  408dd7:	(bad)  
  408dd9:	push   ebx
  408dda:	call   DWORD PTR ds:0xcc650083
  408de0:	call   FWORD PTR [eax-0xffd600]
  408de6:	pop    eax
  408de7:	loopne 0x408db5
  408de9:	adc    al,0x89
  408deb:	sbb    eax,0x516a0000
  408df0:	or     DWORD PTR [ecx+0x0],0x5c
  408df4:	add    bh,bh
  408df6:	stc    
  408df7:	xchg   bh,bh
  408df9:	mov    ebx,0xffe183
  408dfe:	ss pop ebp
  408e00:	call   DWORD PTR [ebx]
  408e02:	jmp    DWORD PTR [ebx-0x34]
  408e05:	mov    DWORD PTR [edi-0x2c],edi
  408e08:	jmp    FWORD PTR [esi+0xff8700]
  408e0e:	test   BYTE PTR fs:[ebx+0xb30041],0xff
  408e16:	ret    0xc3
  408e19:	and    al,0x0
  408e1b:	ds int3 
  408e1d:	add    BYTE PTR [ecx],ah
  408e1f:	out    0x0,al
  408e21:	repnz sbb DWORD PTR [ebp+0x515f0083],0x0
  408e29:	idiv   bh
  408e2b:	mov    eax,0x419bffff
  408e30:	add    BYTE PTR [eax+eax*1],al
  408e33:	mov    ds:0x3ba0ff00,al
  408e38:	(bad)  
  408e39:	mov    edi,0xff838f00
  408e3e:	push   0xffffff94
  408e40:	(bad)  
  408e41:	fiadd  WORD PTR [eax]
  408e43:	(bad)  
  408e44:	inc    DWORD PTR [eax]
  408e46:	sub    eax,0x838aff27
  408e4b:	mov    ds:0xce5500ff,al
  408e50:	(bad)  
  408e51:	jp     0x408e52
  408e53:	add    DWORD PTR [eax],eax
  408e55:	(bad)  
  408e56:	ds sbb al,0x83
  408e59:	call   0x2084:0xff893d00
  408e60:	add    BYTE PTR [ebx-0x5177],ah
  408e66:	or     eax,0xccc80049
  408e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e6c:	inc    DWORD PTR [eax]
  408e6e:	iret   
  408e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e70:	mov    DWORD PTR [eax-0x3300fa00],ebp
  408e76:	xchg   edi,eax
  408e77:	and    al,BYTE PTR [eax]
  408e79:	mov    esp,0x89ffdccc
  408e7e:	dec    edi
  408e7f:	xchg   ebp,eax
  408e80:	add    cl,al
  408e82:	mov    DWORD PTR ds:0xab94ffff,eax
  408e88:	mov    DWORD PTR [ebx+0x0],ebx
  408e8b:	mov    bh,0xff
  408e8d:	add    DWORD PTR [ebp-0xfaffb7],0xffffffa2
  408e94:	(bad)  
  408e95:	push   DWORD PTR [ebp-0x7c0633c5]
  408e9b:	in     eax,0xff
  408e9d:	mov    edi,eax
  408e9f:	xchg   esp,eax
  408ea0:	add    BYTE PTR [edi+edi*8+0x3d00ffc0],dh
  408ea7:	xlat   BYTE PTR ds:[ebx]
  408ea8:	(bad)  
  408ea9:	mov    ebx,0xffffe800
  408eae:	outs   dx,DWORD PTR ds:[esi]
  408eaf:	pop    eax
  408eb0:	and    DWORD PTR [ebp+0x0],0x43
  408eb4:	inc    DWORD PTR [ebx+0x7fff9c20]
  408eba:	jmp    DWORD PTR [edx-0x1]
  408ebd:	jmp    DWORD PTR [esi-0x6b0031]
  408ec3:	call   0x8783:0xc4960000
  408eca:	add    BYTE PTR [esi+0x5dbffff],dh
  408ed0:	adc    DWORD PTR [eax],0xffffff83
  408ed3:	adc    BYTE PTR [ebx-0xc9de01],al
  408ed9:	push   edx
  408eda:	int3   
  408edb:	add    eax,0x651dff00
  408ee0:	(bad)  
  408ee1:	jns    0x408ee2
  408ee3:	arpl   di,di
  408ee5:	push   ebp
  408ee7:	das    
  408ee8:	(bad)  
  408ee9:	sti    
  408eea:	add    al,ch
  408eec:	add    DWORD PTR [eax],0x4a
  408eef:	ja     0x408ef0
  408ef1:	mov    DWORD PTR [ecx-0xd00ffe8],ecx
  408ef7:	(bad)  
  408ef8:	int3   
  408ef9:	push   esi
  408efa:	add    BYTE PTR [ebp-0x18b0ff01],al
  408f00:	add    BYTE PTR [edi+edi*8],bh
  408f03:	hlt    
  408f04:	cmp    edi,0x4c
  408f07:	xor    eax,0x51ff4e00
  408f0c:	inc    DWORD PTR [eax]
  408f0e:	xor    al,0xf3
  408f10:	call   edi
  408f12:	sub    DWORD PTR [ebp-0x34],0xffffffff
  408f16:	dec    esp
  408f17:	arpl   WORD PTR [ebx+0x3c0026],ax
  408f1d:	add    ch,bl
  408f1f:	ds (bad) 
  408f21:	mov    ebx,0xffff4600
  408f26:	push   es
  408f27:	out    dx,al
  408f28:	add    BYTE PTR [edi+0x0],al
  408f2b:	mov    eax,0x55420083
  408f30:	add    BYTE PTR [ebx+0x0],bl
  408f33:	add    BYTE PTR es:[eax],al
  408f36:	mov    BYTE PTR [edi],dl
  408f38:	inc    DWORD PTR [edi-0x7d]
  408f3b:	int    0x0
  408f3d:	add    BYTE PTR [edi],bl
  408f3f:	cld    
  408f40:	add    BYTE PTR ds:0xffaa89,cl
  408f46:	add    ebx,esi
  408f48:	call   FWORD PTR [ebp-0x1]
  408f4b:	add    DWORD PTR [eax],0x0
  408f4e:	cmp    al,0x5f
  408f50:	add    BYTE PTR [ecx-0x1],bh
  408f53:	(bad)  
  408f54:	inc    DWORD PTR [eax]
  408f56:	sbb    eax,0x4eff7a
  408f5b:	leave  
  408f5c:	add    bh,bh
  408f5e:	imul   ebp,ecx,0xffffffff
  408f61:	call   0x414d65
  408f66:	inc    esi
  408f67:	dec    esp
  408f68:	add    BYTE PTR [ecx-0x1],ch
  408f6b:	pop    ebp
  408f6c:	(bad)  
  408f6d:	inc    DWORD PTR [ebx+0x40]
  408f70:	inc    DWORD PTR [esi-0x767c6d01]
  408f76:	rol    esi,0x0
  408f79:	add    al,0x0
  408f7b:	inc    esp
  408f7c:	(bad)  
  408f7d:	dec    DWORD PTR [ecx]
  408f7f:	ret    0xfacc
  408f82:	(bad)  
  408f83:	jnp    0x408f85
  408f85:	call   FWORD PTR [eax-0x57]
  408f88:	add    BYTE PTR [esi+0x0],dh
  408f8b:	pop    edi
  408f8c:	mov    edi,edi
  408f8e:	into   
  408f8f:	push   esi
  408f90:	jmp    FWORD PTR [ecx-0x7c008100]
  408f96:	add    DWORD PTR [ecx+0x0],ebx
  408f99:	(bad)  
  408f9a:	dec    DWORD PTR [eax-0x34]
  408f9d:	dec    DWORD PTR [ebp-0x35]
  408fa0:	inc    ebp
  408fa2:	call   FWORD PTR [esi-0x1]
  408fa5:	add    BYTE PTR [ebp+0x55],dh
  408fa8:	jmp    FWORD PTR ds:0x83ffa183
  408fae:	and    BYTE PTR [ebx-0x3076b534],ah
  408fb4:	add    BYTE PTR [eax],al
  408fb6:	xor    al,0xfc
  408fb8:	add    BYTE PTR [edx],cl
  408fba:	mov    esi,edx
  408fbc:	(bad)  
  408fbd:	(bad)  
  408fbe:	fadd   DWORD PTR [ebx-0x1]
  408fc1:	push   0xff832b83
  408fc6:	aas    
  408fc7:	call   0xccff:0x6e833bff
  408fce:	fdiv   st,st(0)
  408fd0:	inc    DWORD PTR [edi+edi*8-0x59]
  408fd4:	inc    DWORD PTR [eax]
  408fd6:	clc    
  408fd7:	js     0x408fa5
  408fd9:	fmul   st(4),st
  408fdb:	mov    ebp,0xdca983cc
  408fe0:	add    dh,al
  408fe2:	dec    edi
  408fe4:	mov    DWORD PTR [eax],eax
  408fe6:	sub    al,BYTE PTR [eax-0x1]
  408fe9:	test   edi,edi
  408feb:	mov    ecx,0x5731cc89
  408ff0:	add    BYTE PTR ds:0x83cdff,bl
  408ff6:	std    
  408ff7:	int    0xff
  408ff9:	xchg   esp,eax
  408ffa:	add    DWORD PTR [ebx-0x608e0001],0x0
  409001:	push   ecx
  409002:	int3   
  409003:	mov    edx,0x2022ff83
  409008:	(bad)  
  409009:	cmp    ecx,esp
  40900b:	str    esp
  40900e:	adc    al,0xfe
  409010:	push   esi
  409012:	add    dl,ah
  409014:	add    BYTE PTR [eax],al
  409016:	cs int3 
  409018:	inc    DWORD PTR [esi]
  40901a:	(bad)  
  40901b:	aas    
  40901c:	(bad)  
  40901d:	dec    DWORD PTR [edx-0x5a]
  409020:	(bad)  
  409021:	fdivr  st,st(7)
  409023:	mov    esp,0xbeae8300
  409028:	mov    DWORD PTR [eax-0xffa47d],eax
  40902e:	push   ebx
  40902f:	mov    eax,0x1100f583
  409034:	inc    DWORD PTR [eax]
  409036:	add    eax,0xff37ff11
  40903b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40903c:	add    BYTE PTR [eax],al
  40903e:	push   esi
  40903f:	ret    0xc6ff
  409042:	jmp    FWORD PTR [ebx]
  409044:	inc    DWORD PTR [eax]
  409046:	bound  ebp,QWORD PTR [eax+eax*1+0x34]
  40904a:	mov    DWORD PTR [edi-0x1],esp
  40904d:	push   DWORD PTR [eax+0x9]
  409050:	int3   
  409051:	mov    ds:0x8949ff,eax
  409056:	std    
  409057:	add    al,BYTE PTR [eax]
  409059:	iret   
  40905a:	jmp    DWORD PTR [edi+0x0]
  40905d:	add    BYTE PTR [ebx-0x54],bl
  409060:	add    bh,dh
  409062:	inc    DWORD PTR ds:0x3ae3ffff
  409068:	call   FWORD PTR [ecx]
  40906a:	jmp    FWORD PTR [ebx+eax*4+0x0]
  40906e:	dec    ecx
  40906f:	enter  0x45cc,0x83
  409073:	jnp    0x409074
  409075:	dec    DWORD PTR [ebx]
  409077:	mov    al,0x0
  409079:	mov    dh,0x0
  40907b:	sbb    BYTE PTR [ebx-0x76107101],al
  409081:	dec    ebp
  409082:	inc    DWORD PTR [eax+eax*1]
  409085:	add    BYTE PTR [ebx+0xceffb7],ch
  40908b:	lock add BYTE PTR [eax],al
  40908e:	nop    edi
  409091:	int3   
  409092:	int3   
  409093:	arpl   WORD PTR [eax],ax
  409095:	push   eax
  409097:	pop    es
  409098:	int3   
  409099:	pop    ds
  40909a:	(bad)  
  40909b:	cmp    al,BYTE PTR [eax]
  40909d:	add    BYTE PTR [ebx],dl
  40909f:	inc    ebp
  4090a0:	cmp    DWORD PTR [ebx-0x34],0xffffffa6
  4090a4:	add    BYTE PTR [eax],al
  4090a6:	inc    esp
  4090a7:	sar    bh,1
  4090a9:	or     edi,edi
  4090ab:	pop    ds
  4090ac:	inc    DWORD PTR [eax]
  4090ae:	in     al,0xd7
  4090b0:	push   DWORD PTR [ecx]
  4090b2:	add    BYTE PTR [ebp-0xf4d7700],dh
  4090b8:	inc    DWORD PTR [edi+edi*8]
  4090bb:	retf   0xff00
  4090be:	test   al,0xe8
  4090c0:	inc    DWORD PTR [esi-0x1]
  4090c3:	fadd   QWORD PTR [eax]
  4090c5:	add    BYTE PTR [ecx+0x13],bh
  4090c8:	mov    ebx,edx
  4090ca:	jmp    FWORD PTR [esi]
  4090cc:	(bad)  
  4090cd:	dec    DWORD PTR [edx+0x55]
  4090d0:	add    BYTE PTR [eax-0x2d01],ch
  4090d6:	in     al,0xde
  4090d8:	int3   
  4090d9:	rol    DWORD PTR [ebx-0x7cff0067],cl
  4090df:	jbe    0x4090ad
  4090e1:	popa   
  4090e2:	mov    DWORD PTR ds:0x6a28ff00,esp
  4090e8:	sbb    DWORD PTR [eax-0x1],0x35
  4090ec:	add    bh,bh
  4090ee:	xlat   BYTE PTR ds:[ebx]
  4090ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090f0:	int3   
  4090f1:	lods   al,BYTE PTR ds:[esi]
  4090f2:	dec    DWORD PTR [edi+edi*8-0x7d]
  4090f6:	cs enter 0xd9cc,0x83
  4090fb:	mov    BYTE PTR [eax],al
  4090fd:	mov    edx,ecx
  4090ff:	and    DWORD PTR [eax],eax
  409101:	arpl   WORD PTR [eax],ax
  409103:	idiv   edi
  409105:	add    DWORD PTR [edx+0xceffd0],0xffffffdc
  40910c:	add    BYTE PTR [eax],al
  40910e:	jae    0x409168
  409110:	mov    DWORD PTR [eax-0x1],edi
  409113:	cmc    
  409114:	add    bh,bh
  409116:	mov    edx,0xffe3ff84
  40911b:	sbb    al,0x0
  40911d:	dec    DWORD PTR [edi+eiz*4+0xeffe900]
  409124:	or     esp,0x7f
  409127:	push   edi
  409128:	jmp    DWORD PTR [esi-0x3300a87d]
  40912e:	push   cs
  40912f:	push   edx
  409130:	call   FWORD PTR [edi+0x0]
  409133:	popa   
  409134:	(bad)  
  409135:	jmp    FWORD PTR [edx+0x50007b]
  40913b:	into   
  40913c:	inc    DWORD PTR [ebx+0x28ff9ac3]
  409142:	call   FWORD PTR [ecx]
  409144:	inc    DWORD PTR [eax]
  409146:	sbb    DWORD PTR [edi+edi*8+0xf],ecx
  40914a:	add    BYTE PTR [ebx],cl
  40914c:	add    BYTE PTR [ebx-0x376c92c],al
  409152:	dec    edx
  409154:	mov    DWORD PTR [eax],eax
  409156:	mov    al,ds:0xff76cc3c
  40915b:	test   eax,0xcd1effff
  409160:	and    DWORD PTR [edi-0x1],0x76
  409164:	cmp    edi,0x41
  409167:	(bad)  
  40916a:	jmp    DWORD PTR [ecx+0x0]
  40916d:	int3   
  40916e:	sbb    ecx,DWORD PTR [edi+0x0]
  409171:	dec    eax
  409172:	(bad)  
  409173:	call   0x1989177
  409178:	push   edi
  40917a:	call   DWORD PTR [esi]
  40917c:	cmp    edi,0xffffffa4
  40917f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409180:	add    BYTE PTR [edi],bh
  409182:	jmp    DWORD PTR [esi-0x6b473400]
  409188:	xor    edx,0xffffffff
  40918b:	call   0x4a00:0xdb42ccff
  409192:	call   DWORD PTR [ebx+0x12440000]
  409198:	add    BYTE PTR [esi-0x33ff1901],bh
  40919e:	loope  0x409141
  4091a0:	push   DWORD PTR [esi-0x7cff0a77]
  4091a6:	xor    BYTE PTR [eax+eax*1-0x7900a2],bh
  4091ad:	call   DWORD PTR ds:0xee008f
  4091b3:	inc    ecx
  4091b4:	cmp    edi,0x31
  4091b7:	add    eax,0x6b0014ff
  4091bc:	inc    DWORD PTR [ebx+0x78ccd64b]
  4091c2:	sbb    DWORD PTR [ebp+0x0],0xffffffff
  4091c6:	int3   
  4091c7:	jb     0x40914c
  4091c9:	jmp    0x2eb9:0xff836f83
  4091d0:	add    BYTE PTR [eax-0x3e01],ah
  4091d6:	sar    BYTE PTR [esi-0x7d],0xab
  4091da:	call   FWORD PTR [edi-0x40e10000]
  4091e0:	int3   
  4091e1:	pop    ebp
  4091e2:	jmp    FWORD PTR [eax+eax*1-0x24b800]
  4091e9:	add    DWORD PTR [eax],eax
  4091eb:	loope  0x409170
  4091ed:	dec    ebx
  4091ef:	(bad)  
  4091f0:	push   DWORD PTR [edi]
  4091f2:	add    BYTE PTR [edx],dl
  4091f4:	(bad)  
  4091f5:	call   FWORD PTR [ebp+0xb1ff37]
  4091fb:	add    eax,DWORD PTR [eax]
  4091fd:	call   DWORD PTR [ecx+0x6bffcc]
  409203:	fiadd  DWORD PTR [eax]
  409205:	call   FWORD PTR [ebx+0xb3ff81]
  40920b:	and    eax,0x7282ffff
  409210:	call   DWORD PTR [eax+0xffbd00]
  409216:	jle    0x409212
  409218:	add    BYTE PTR [ebp+0x0],bl
  40921b:	ja     0x40921c
  40921d:	add    BYTE PTR [edx+ebx*4],dl
  409220:	add    bl,bl
  409222:	push   DWORD PTR [eax-0x1]
  409225:	call   DWORD PTR [ecx-0xb1ff76]
  40922b:	ss cmp edi,0x68
  40922f:	data16 add BYTE PTR [esi+0x894b00],bl
  409236:	add    DWORD PTR [ebx+eax*4+0x33],0xffffffff
  40923b:	mov    al,0xff
  40923d:	xor    DWORD PTR [ecx-0x98ff6f],0xffffffd1
  409244:	(bad)  
  409245:	jmp    FWORD PTR [edx]
  409247:	sbb    eax,0x16cc5400
  40924c:	add    bh,bh
  40924e:	in     al,0xa3
  409250:	add    BYTE PTR [ecx],dh
  409252:	(bad)  
  409253:	fiadd  WORD PTR [ebx-0x7a5734]
  409259:	stos   BYTE PTR es:[edi],al
  40925a:	(bad)  
  40925b:	fld    DWORD PTR [ebx-0x3312cf7d]
  409261:	jl     0x409262
  409263:	stos   DWORD PTR es:[edi],eax
  409264:	inc    DWORD PTR [eax]
  409266:	and    bl,BYTE PTR [edi-0x5d005e01]
  40926c:	(bad)  
  40926d:	push   DWORD PTR [edi+esi*1-0x79ff7800]
  409274:	inc    DWORD PTR [eax]
  409276:	mov    ss,WORD PTR [ecx+0x0]
  409279:	push   ebx
  40927a:	add    BYTE PTR [ebx],cl
  40927c:	add    BYTE PTR [ecx+0xd004d6c],cl
  409282:	jmp    FWORD PTR [ecx]
  409284:	add    BYTE PTR [eax],al
  409286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409287:	xchg   ebp,eax
  409288:	(bad)  
  409289:	cmp    DWORD PTR [eax],eax
  40928b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40928c:	inc    DWORD PTR [eax]
  40928e:	mov    esp,0xc383da
  409293:	(bad)  
  409294:	dec    DWORD PTR [ecx-0x1d00800e]
  40929a:	call   edi
  40929c:	inc    DWORD PTR [eax]
  40929e:	jmp    0x89f01c81
  4092a3:	xchg   ebx,eax
  4092a4:	mov    DWORD PTR [eax],eax
  4092a6:	xor    dl,al
  4092a8:	add    bh,ch
  4092aa:	add    BYTE PTR [edx-0x5db50001],ch
  4092b0:	jmp    DWORD PTR [eax-0x77]
  4092b3:	xor    al,0xcc
  4092b5:	jmp    FWORD PTR [ebp-0x10]
  4092b8:	int3   
  4092b9:	sbb    edi,edi
  4092bb:	fs (bad) 
  4092bd:	call   ecx
  4092bf:	mov    eax,DWORD PTR [eax]
  4092c1:	inc    ebx
  4092c2:	adc    esp,0xffffffff
  4092c5:	int3   
  4092c6:	jg     0x4092bb
  4092c8:	int3   
  4092c9:	add    BYTE PTR fs:[edi+edi*8],al
  4092cd:	add    DWORD PTR [edx],0x3b
  4092d0:	dec    esi
  4092d2:	jmp    DWORD PTR [edx-0x544d0100]
  4092d8:	add    BYTE PTR [edi],bh
  4092da:	call   DWORD PTR [esi]
  4092dc:	add    BYTE PTR [ecx-0x22ffeef8],cl
  4092e2:	mov    ebx,esp
  4092e4:	int3   
  4092e5:	inc    DWORD PTR [ebx]
  4092e7:	xor    DWORD PTR [ecx-0x5b7cc2],ecx
  4092ed:	inc    DWORD PTR [ecx-0xdeff30]
  4092f3:	mov    esi,0x49d300cc
  4092f8:	mov    DWORD PTR [esi],esp
  4092fa:	add    BYTE PTR [edx-0x4ed70001],ah
  409300:	(bad)  
  409301:	cmp    al,0x0
  409303:	sub    eax,0x1250ffff
  409308:	add    BYTE PTR [eax-0x1],cl
  40930b:	push   0xfcb6ffff
  409310:	mov    DWORD PTR [ebx],ebp
  409312:	or     DWORD PTR [ebx],0xffffffff
  409315:	inc    DWORD PTR [eax-0x7c997c04]
  40931b:	int    0xff
  40931d:	mov    DWORD PTR [ebp-0x11009c],esi
  409323:	enter  0xff00,0x19
  409327:	mov    bl,0xff
  409329:	data16 int3 
  40932b:	pop    ecx
  40932c:	(bad)  
  40932d:	(bad)  
  40932e:	mov    ebp,0xffc4ff33
  409333:	mov    esp,0xc16700ff
  409338:	add    BYTE PTR [edi+edi*8+0x468300ac],dl
  40933f:	xchg   ecx,eax
  409340:	push   DWORD PTR [ebx-0x1]
  409343:	xchg   edi,eax
  409344:	(bad)  
  409345:	(bad)  
  409346:	mov    ebp,0x899cff27
  40934b:	ds (bad) 
  40934d:	dec    esi
  40934f:	in     al,dx
  409350:	mov    DWORD PTR [ebx],edx
  409352:	int3   
  409353:	sbb    eax,0x946aff83
  409358:	jmp    DWORD PTR [edi-0x1]
  40935b:	(bad)  
  40935c:	int3   
  40935d:	cmp    DWORD PTR [edx+0x14],0x0
  409361:	add    al,BYTE PTR [eax]
  409363:	add    BYTE PTR [ebx-0x2f2c01],al
  409369:	xchg   DWORD PTR [eax],eax
  40936b:	sahf   
  40936c:	int3   
  40936d:	adc    edx,0x3
  409370:	mov    DWORD PTR [eax+eax*1-0x357c76d4],eax
  409377:	repnz add bh,bh
  40937a:	add    BYTE PTR [edi+0x0],al
  40937d:	call   FWORD PTR [ebp+0x55]
  409380:	add    BYTE PTR ds:0xff003300,ch
  409386:	push   cs
  409387:	mov    al,0x0
  409389:	mov    WORD PTR [ebx+0x6400009b],es
  40938f:	leave  
  409390:	xor    DWORD PTR [ebx-0x7c7c6600],0xffffff98
  409397:	xchg   ecx,eax
  409398:	int3   
  409399:	je     0x40939a
  40939b:	aas    
  40939c:	(bad)  
  40939d:	call   FWORD PTR [esi]
  40939f:	lea    eax,[eax]
  4093a1:	xchg   edx,eax
  4093a2:	mov    DWORD PTR [ecx-0x56427c01],esi
  4093a8:	int3   
  4093a9:	mov    ds:0x89dd00,eax
  4093ae:	adc    BYTE PTR [edx-0x1b005200],dh
  4093b4:	add    bh,bh
  4093b6:	js     0x40939b
  4093b8:	add    BYTE PTR [eax-0x7cff0501],bh
  4093be:	test   BYTE PTR [edx-0x34],bl
  4093c1:	test   eax,0xffffa0cc
  4093c6:	cs adc edi,edi
  4093c9:	xchg   ebp,eax
  4093ca:	dec    eax
  4093cc:	add    bh,bh
  4093ce:	push   0xffffffb6
  4093d0:	jmp    DWORD PTR [ecx-0x76ff5d00]
  4093d6:	and    dl,ch
  4093d8:	add    BYTE PTR [eax+0xccb4ff],bh
  4093de:	xchg   esp,eax
  4093df:	jns    0x4093e1
  4093e1:	idiv   bh
  4093e3:	(bad)  
  4093e5:	(bad)  
  4093e6:	jmp    0x40941a
  4093e8:	call   FWORD PTR [eax+eax*1-0x66]
  4093ec:	dec    DWORD PTR [ecx-0x28001d8b]
  4093f2:	inc    DWORD PTR [edi+edi*8-0x1]
  4093f6:	cmp    eax,0xff208908
  4093fb:	mov    bl,0xff
  4093fd:	add    BYTE PTR [edi-0x52],dl
  409400:	push   DWORD PTR [edi-0x1]
  409403:	or     eax,DWORD PTR [ebx+0x32a8ff]
  409409:	mov    ecx,esp
  40940b:	xor    bh,bh
  40940d:	int3   
  40940e:	add    eax,0x70ff37
  409413:	es (bad) 
  409415:	jmp    FWORD PTR [edi-0x170061]
  40941b:	xchg   ecx,eax
  40941c:	add    BYTE PTR [eax],al
  40941e:	xchg   DWORD PTR [ebx],eax
  409420:	add    BYTE PTR [esi-0x7d],al
  409423:	inc    ecx
  409424:	inc    DWORD PTR [eax]
  409426:	loope  0x40947a
  409428:	jmp    FWORD PTR [edi-0x6d00]
  40942e:	loope  0x40948e
  409430:	dec    DWORD PTR [ecx-0x1]
  409433:	cmp    BYTE PTR [eax],al
  409435:	add    dl,bh
  409437:	or     al,0x0
  409439:	add    DWORD PTR [ebx+0x3900ffe1],eax
  40943f:	add    BYTE PTR [ebx-0x7c8bffac],0xff
  409446:	mov    edx,0xfffbff32
  40944b:	and    eax,0xbcfe0089
  409450:	and    DWORD PTR [ebx+eax*4+0x50000b5],0x34
  409458:	int3   
  409459:	cmp    bh,bh
  40945b:	ror    esp,0xff
  40945e:	gs hlt 
  409460:	dec    esi
  409462:	(bad)  
  409463:	cmp    edi,edi
  409465:	inc    DWORD PTR [edx+eiz*8-0x1]
  409469:	jmp    FWORD PTR es:[edx]
  40946c:	(bad)  
  40946d:	(bad)  
  40946e:	fdivr  DWORD PTR [ebp+0x0]
  409471:	push   ebx
  409472:	add    BYTE PTR [ebx],ah
  409474:	inc    DWORD PTR [eax]
  409476:	leave  
  409477:	xchg   edi,eax
  409478:	call   DWORD PTR [ecx-0xa800]
  40947e:	mov    dh,0xa
  409480:	add    BYTE PTR [esi],dh
  409482:	int3   
  409483:	sbb    edi,edi
  409485:	add    BYTE PTR [ebp+ecx*2-0x60005701],al
  40948c:	inc    DWORD PTR [eax]
  40948e:	icebp  
  40948f:	or     eax,0x22ffecff
  409494:	or     DWORD PTR [ecx-0x1b001a1b],0x0
  40949b:	xchg   esp,eax
  40949c:	int3   
  40949d:	push   DWORD PTR [ebx+0x25]
  4094a0:	dec    ecx
  4094a2:	add    BYTE PTR [ecx],bh
  4094a4:	inc    DWORD PTR [eax]
  4094a6:	fidiv  WORD PTR [ebx+eax*4+0x348379]
  4094ad:	call   DWORD PTR [ecx+0x17]
  4094b0:	add    BYTE PTR [edi],dl
  4094b2:	mov    ebx,ecx
  4094b4:	int3   
  4094b5:	and    ebp,0x7d
  4094b8:	int3   
  4094b9:	int3   
  4094ba:	int3   
  4094bb:	int3   
  4094bc:	int3   
  4094bd:	int3   
  4094be:	int3   
  4094bf:	int3   
  4094c0:	(bad)  
  4094c1:	(bad)  
  4094c2:	inc    DWORD PTR [edi+0x8c89200]
  4094c8:	inc    DWORD PTR [eax]
  4094ca:	call   FWORD PTR [ebp+0x6c973c83]
  4094d0:	int3   
  4094d1:	add    ah,cl
  4094d3:	out    dx,al
  4094d4:	add    BYTE PTR [esi+0x896c25],dh
  4094da:	add    bh,ch
  4094dc:	add    BYTE PTR [eax+0x4f],ah
  4094df:	dec    esi
  4094e0:	add    BYTE PTR [ecx-0x2500fa01],cl
  4094e6:	push   cs
  4094e7:	sbb    al,0x0
  4094e9:	int3   
  4094ea:	add    BYTE PTR [ecx-0x1],cl
  4094ed:	push   0xfffffffd
  4094ef:	mov    dl,0x0
  4094f1:	add    BYTE PTR [eax],al
  4094f3:	fdivp  st(7),st
  4094f5:	jbe    0x4094fd
  4094f7:	push   eax
  4094f8:	mov    edi,edi
  4094fa:	sub    DWORD PTR [edx+0x64f21ff],0xffffffff
  409501:	add    bh,bh
  409503:	aad    0x0
  409505:	mov    cl,0x71
  409507:	jns    0x409509
  409509:	add    BYTE PTR [eax],al
  40950b:	cmp    al,0x0
  40950d:	mov    BYTE PTR [esi+0x8900],dh
  409513:	cmp    eax,DWORD PTR [ebx+0xf953f6]
  409519:	add    DWORD PTR [eax],0xa
  40951c:	inc    edi
  40951e:	lea    eax,[ecx+0x76ff0000]
  409524:	add    al,bh
  409526:	sbb    DWORD PTR [ebx],esi
  409528:	(bad)  
  409529:	(bad)  
  40952a:	dec    DWORD PTR [ecx]
  40952c:	(bad)  
  40952d:	jnp    0x4095a1
  40952f:	mov    BYTE PTR [ebx-0x766b0001],al
  409535:	xchg   ecx,eax
  409536:	sahf   
  409537:	in     eax,dx
  409538:	add    bh,bh
  40953a:	add    BYTE PTR [ebx],ah
  40953c:	inc    eax
  40953e:	nop
  40953f:	(bad)  
  409540:	int3   
  409541:	inc    DWORD PTR [eax]
  409543:	jge    0x409545
  409545:	out    dx,eax
  409546:	neg    BYTE PTR [eax+eax*1]
  409549:	cmp    edi,0xffffff80
  40954c:	add    BYTE PTR [edi+edx*2],ah
  40954f:	mov    esp,0x8083cc00
  409554:	int3   
  409555:	jns    0x409546
  409557:	pop    edi
  409558:	add    DWORD PTR [eax],0x0
  40955b:	xchg   ecx,eax
  40955c:	add    BYTE PTR [esi],bl
  40955e:	add    eax,0x83ff83f2
  409563:	scas   al,BYTE PTR es:[edi]
  409564:	add    DWORD PTR [ebp+edx*8-0xef],0x6b
  40956c:	call   DWORD PTR [edi]
  40956e:	out    dx,eax
  40956f:	pop    es
  409570:	(bad)  
  409571:	dec    esp
  409573:	add    BYTE PTR [eax],0x46
  409576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409577:	mov    bh,0xff
  409579:	(bad)  
  40957a:	push   DWORD PTR [esi]
  40957c:	(bad)  
  40957d:	fadd   DWORD PTR [ecx-0xffff17]
  409583:	into   
  409584:	add    ah,ah
  409586:	cmp    al,0xd5
  409588:	inc    DWORD PTR [ebx-0x5b7cf800]
  40958e:	out    dx,eax
  40958f:	and    bh,bh
  409591:	(bad)  
  409592:	push   DWORD PTR [ebp-0xb16bc01]
  409598:	(bad)  
  409599:	dec    esp
  40959b:	imul   eax,DWORD PTR [eax],0xffecf419
  4095a1:	inc    DWORD PTR [eax]
  4095a3:	add    eax,0xa18937ff
  4095a8:	inc    DWORD PTR [eax]
  4095aa:	add    BYTE PTR [edi+edi*8],ah
  4095ad:	stos   DWORD PTR es:[edi],eax
  4095ae:	jp     0x4095ed
  4095b0:	add    ah,cl
  4095b2:	jmp    DWORD PTR [ecx-0x1]
  4095b5:	arpl   WORD PTR [ebx],bp
  4095b7:	mov    cl,0xcc
  4095b9:	dec    esp
  4095bb:	sbb    eax,0x2173f5ff
  4095c0:	add    bh,bh
  4095c2:	inc    DWORD PTR [eax]
  4095c4:	or     DWORD PTR [esi-0x76005da7],0xffffffff
  4095cb:	outs   dx,DWORD PTR ds:[esi]
  4095cc:	(bad)  
  4095cd:	mov    edx,0x83ffbb24
  4095d2:	add    BYTE PTR [esi],dl
  4095d4:	add    BYTE PTR ds:0xffff2925,dl
  4095da:	add    BYTE PTR [eax-0x1],dh
  4095dd:	fisubr WORD PTR ds:0xffff83fe
  4095e3:	pop    esi
  4095e4:	call   DWORD PTR [edi-0xff82d8]
  4095ea:	jmp    FWORD PTR [esp+ecx*8]
  4095ed:	and    eax,0xffffa08a
  4095f2:	push   DWORD PTR [ebx+0x7d514bff]
  4095f8:	inc    DWORD PTR [eax]
  4095fa:	call   FWORD PTR [edx]
  4095fc:	jmp    FWORD PTR [ecx]
  4095fe:	add    eax,0xff83000a
  409603:	(bad)  
  409604:	int3   
  409605:	pop    ss
  409606:	icebp  
  409607:	dec    ecx
  409608:	cmp    edi,0x0
  40960b:	das    
  40960c:	jmp    FWORD PTR [edx]
  40960e:	imul   ebp,DWORD PTR [esp+ecx*8+0x3fffff],0xc
  409616:	jle    0x40967f
  409618:	add    DWORD PTR [eax],0x0
  40961b:	inc    ebp
  40961c:	(bad)  
  40961d:	clc    
  40961e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40961f:	lods   al,BYTE PTR ds:[esi]
  409620:	(bad)  
  409621:	(bad)  
  409622:	call   DWORD PTR [edi+edi*8+0x43]
  409626:	xchg   edi,eax
  409627:	pop    esi
  409628:	add    DWORD PTR [ebx-0x24ffcc01],0x5f
  40962f:	pop    esi
  409630:	add    BYTE PTR [eax],al
  409632:	mov    DWORD PTR [ebx-0x1],eax
  409635:	dec    esi
  409636:	outs   dx,DWORD PTR ds:[esi]
  409637:	jo     0x409638
  409639:	add    bh,bh
  40963b:	mov    DWORD PTR [ebx-0x97f778],0xff7fff00
  409645:	adc    DWORD PTR [edx-0xff00ea],eax
  40964b:	inc    ecx
  40964c:	and    DWORD PTR [edi-0x7c4c32],0xffffff83
  409653:	int    0xff
  409655:	std    
  409656:	push   esp
  409657:	(bad)  
  409658:	(bad)  
  409659:	dec    esp
  40965b:	pop    edi
  40965c:	add    BYTE PTR [edi+0x2],ah
  40965f:	int    0x83
  409661:	(bad)  
  409662:	(bad)  
  409663:	inc    DWORD PTR [eax]
  409665:	inc    ebp
  409666:	iret   
  409667:	add    BYTE PTR [eax],al
  409669:	(bad)  
  40966a:	jmp    DWORD PTR [edx-0x3f785134]
  409670:	(bad)  
  409671:	(bad)  
  409672:	call   FWORD PTR ds:0x1f6737ff
  409678:	int3   
  409679:	(bad)  
  40967a:	push   DWORD PTR [edx-0x1]
  40967d:	sbb    esp,DWORD PTR [edx-0x7c003d]
  409683:	inc    BYTE PTR [ebx+0x49de33]
  409689:	mov    DWORD PTR [ecx+0x59a9ff03],ecx
  40968f:	cmp    eax,0x670083ff
  409694:	sbb    DWORD PTR [edi-0x51f9],0xffffffff
  40969b:	sbb    BYTE PTR [ebx+0x407f2e],al
  4096a1:	add    ah,cl
  4096a3:	dec    ebp
  4096a4:	call   DWORD PTR [ebp+0x52]
  4096a7:	sub    edi,edi
  4096a9:	(bad)  
  4096aa:	inc    DWORD PTR [edx+0x7a32a4ff]
  4096b0:	(bad)  
  4096b1:	(bad)  
  4096b2:	inc    edi
  4096b4:	add    BYTE PTR [edi],ah
  4096b6:	inc    eax
  4096b7:	inc    DWORD PTR [ebx+0x3a00ff]
  4096bd:	fsub   QWORD PTR fs:[ebx-0x1]
  4096c1:	(bad)  
  4096c2:	call   DWORD PTR [edx-0x2839cc01]
  4096c8:	(bad)  
  4096c9:	(bad)  
  4096ca:	jmp    FWORD PTR [edx-0xf4a3201]
  4096d0:	cmp    edi,0xffffffff
  4096d3:	js     0x4096d4
  4096d5:	call   0x84403828
  4096da:	add    BYTE PTR ds:0x960f6d83,bh
  4096e0:	inc    DWORD PTR [eax]
  4096e2:	call   FWORD PTR ds:0x6f4e4400
  4096e8:	dec    DWORD PTR [ecx+0x6fccd683]
  4096ee:	mov    eax,0x8300003f
  4096f3:	jmp    0x40967e
  4096f5:	mov    esi,0x83001afd
  4096fa:	(bad)  
  4096fb:	inc    DWORD PTR [ebx-0x210ac0]
  409701:	add    bh,bh
  409703:	lods   eax,DWORD PTR ds:[esi]
  409704:	call   FWORD PTR [edi]
  409706:	inc    edx
  409707:	or     eax,DWORD PTR [eax]
  409709:	cmp    edi,0x43
  40970c:	mov    DWORD PTR [ebp+ebx*1+0x7c],eax
  409710:	add    BYTE PTR [ebx-0x6f00047d],al
  409716:	ins    BYTE PTR es:[edi],dx
  409717:	inc    edx
  409718:	add    bh,bh
  40971a:	int3   
  40971b:	or     al,0x83
  40971d:	nop
  40971e:	in     al,0xe0
  409720:	(bad)  
  409721:	(bad)  
  409722:	push   DWORD PTR [eax+eax*1+0x42]
  409726:	xchg   edx,eax
  409727:	mov    ecx,0xd1ff0083
  40972c:	int3   
  40972d:	mov    gs,ebx
  40972f:	stos   BYTE PTR es:[edi],al
  409730:	(bad)  
  409731:	inc    DWORD PTR [eax]
  409733:	sbb    edi,edi
  409735:	(bad)  [esi]
  409737:	enter  0x83,0x83
  40973b:	xchg   ebx,eax
  40973c:	dec    esi
  40973e:	aas    
  40973f:	xor    eax,0x13ff89ff
  409744:	call   FWORD PTR [ebp+0x4e]
  409747:	sbb    BYTE PTR [eax],al
  409749:	add    BYTE PTR [eax],al
  40974b:	ds int3 
  40974d:	push   0xffb483
  409752:	sub    edx,0x0
  409755:	mov    eax,ds:0xffffba20
  40975a:	add    cl,cl
  40975c:	add    BYTE PTR [ecx-0x5a],ah
  40975f:	jmp    0x4a411a64
  409764:	int3   
  409765:	add    ebp,DWORD PTR [esp+ebp*1]
  409768:	add    BYTE PTR [eax],al
  40976a:	call   DWORD PTR [eax-0x7d]
  40976d:	aas    
  40976e:	lods   eax,DWORD PTR ds:[esi]
  40976f:	out    0x0,al
  409771:	(bad)  
  409772:	call   FWORD PTR [ebp-0x58dec677]
  409778:	cmp    edi,0xffffff83
  40977b:	inc    esi
  40977c:	jmp    FWORD PTR [esi]
  40977e:	int    0x83
  409780:	dec    DWORD PTR [ecx+0xe0ff]
  409786:	xor    BYTE PTR [esi+0x0],ah
  409789:	cmp    edi,0x3a
  40978c:	push   DWORD PTR [edx+0x51]
  40978f:	jne    0x409790
  409791:	(bad)  
  409792:	jmp    FWORD PTR [edi-0x251e8001]
  409798:	add    bh,bh
  40979a:	push   DWORD PTR [eax-0x222c6e01]
  4097a0:	add    BYTE PTR [eax],al
  4097a2:	mov    DWORD PTR [ebp-0x2fcbca7d],eax
  4097a8:	add    DWORD PTR [eax],0x0
  4097ab:	inc    ecx
  4097ac:	or     DWORD PTR [ebp-0x3d],0xffffff90
  4097b0:	(bad)  
  4097b1:	(bad)  
  4097b2:	push   DWORD PTR [ebp-0x6cb3fb00]
  4097b8:	add    bh,bh
  4097ba:	mov    DWORD PTR [eax],edx
  4097bc:	call   ebp
  4097be:	pushf  
  4097bf:	clc    
  4097c0:	inc    DWORD PTR [eax]
  4097c2:	adc    DWORD PTR [esi-0x1],0xffffff93
  4097c6:	sbb    eax,0x8900008a
  4097cb:	inc    esp
  4097cc:	cmp    DWORD PTR [edi-0x7c00469d],0x0
  4097d3:	jo     0x4097d5
  4097d5:	xchg   ecx,eax
  4097d7:	dec    ebp
  4097d8:	int3   
  4097d9:	inc    DWORD PTR [eax]
  4097db:	sub    al,0x89
  4097dd:	or     DWORD PTR [ebx+0x4e],edi
  4097e0:	add    DWORD PTR [eax],0xffffffff
  4097e3:	popa   
  4097e4:	push   DWORD PTR [esi+0x22]
  4097e7:	lea    eax,[eax]
  4097e9:	(bad)  
  4097ea:	(bad)  
  4097eb:	cmp    bh,bh
  4097ed:	test   al,0xe2
  4097ef:	sar    bh,1
  4097f1:	add    bh,bh
  4097f3:	aam    0xff
  4097f5:	sub    al,0x25
  4097f7:	inc    ecx
  4097f8:	add    bh,bh
  4097fa:	mov    DWORD PTR [ecx-0x7d],eax
  4097fd:	ret    
  4097fe:	push   0xffffff44
  409803:	ins    DWORD PTR es:[edi],dx
  409804:	(bad)  
  409805:	ficomp WORD PTR [ebx-0xff00f7]
  40980b:	popa   
  40980c:	add    BYTE PTR [edx-0x76fb13],al
  409812:	or     ecx,0x0
  409815:	adc    BYTE PTR [ecx],bh
  409817:	leave  
  409818:	(bad)  
  409819:	inc    DWORD PTR [eax]
  40981b:	sar    edi,1
  40981d:	mov    al,ds:0x79b
  409822:	inc    DWORD PTR [edi-0x34]
  409825:	jno    0x4097f9
  409827:	retf   0xff
  40982a:	add    ch,al
  40982c:	add    BYTE PTR [esi-0xff4fca],dh
  409832:	add    BYTE PTR [esi-0x4f076401],al
  409838:	(bad)  
  409839:	inc    DWORD PTR [ebx-0xad800bf]
  40983f:	(bad)  
  409840:	(bad)  
  409841:	(bad)  
  409842:	call   ebx
  409844:	inc    eax
  409846:	add    BYTE PTR [bp+di+0xff],al
  40984b:	fiadd  DWORD PTR [eax]
  40984d:	jge    0x4098c6
  40984f:	push   esi
  409850:	add    bh,bh
  409852:	sub    DWORD PTR [esi-0x6a6e9f00],0xffffffff
  409859:	dec    esp
  40985b:	int3   
  40985c:	jmp    FWORD PTR [ebp+edi*4+0xf0]
  409863:	cli    
  409864:	add    BYTE PTR [edx],bl
  409866:	daa    
  409867:	jmp    0x409868
  409869:	add    bh,bh
  40986b:	in     al,dx
  40986c:	call   esp
  40986e:	inc    esp
  40986f:	imul   ecx,DWORD PTR [ecx-0xd6ff01],0xff1d1ec1
  409879:	dec    esp
  40987b:	js     0x40987d
  40987d:	ins    DWORD PTR es:[edi],dx
  40987e:	mov    eax,ds:0xffffcc5f
  409883:	jb     0x409808
  409885:	xchg   ecx,eax
  409886:	cmp    eax,0x8389ff76
  40988b:	adc    eax,0x44c965ff
  409890:	dec    DWORD PTR [ecx+0x790083ff]
  409896:	jo     0x409913
  409898:	dec    esp
  40989a:	push   DWORD PTR [eax-0x3a96b701]
  4098a0:	dec    DWORD PTR [ecx-0x100c801]
  4098a6:	and    DWORD PTR [eax],ecx
  4098a8:	int3   
  4098a9:	dec    esp
  4098ab:	sub    ah,cl
  4098ad:	in     al,0x5e
  4098af:	and    bh,bh
  4098b1:	int3   
  4098b2:	inc    DWORD PTR [ebp-0x1]
  4098b5:	dec    ebp
  4098b6:	pusha  
  4098b7:	add    bh,bh
  4098b9:	inc    DWORD PTR [eax]
  4098bb:	adc    eax,0xcbd008ff
  4098c0:	inc    DWORD PTR [ebx+0x45ccbd83]
  4098c6:	fs and edi,edi
  4098c9:	inc    DWORD PTR [ebx-0x1de57c81]
  4098cf:	add    BYTE PTR ss:[ebx+0x69834ccc],al
  4098d6:	dec    edi
  4098d7:	add    edi,edi
  4098d9:	add    bh,bh
  4098db:	dec    ebp
  4098dc:	push   DWORD PTR [ebx+0x6b]
  4098df:	(bad)  
  4098e0:	inc    DWORD PTR [ebx-0x6000407d]
  4098e6:	outs   dx,BYTE PTR ds:[esi]
  4098e7:	push   cs
  4098e8:	mov    DWORD PTR [ecx+0x983cb83],ecx
  4098ee:	xor    al,0xa9
  4098f0:	add    BYTE PTR [eax],al
  4098f2:	add    BYTE PTR [ecx+ecx*4],dl
  4098f5:	and    al,0x86
  4098f7:	inc    DWORD PTR [eax]
  4098f9:	(bad)  
  4098fa:	push   DWORD PTR [ecx]
  4098fc:	add    BYTE PTR [edx-0x4274],ah
  409902:	push   DWORD PTR [ebx-0x34]
  409905:	jo     0x409913
  409907:	push   cs
  409908:	add    DWORD PTR [eax],0xffffffff
  40990b:	add    al,0x83
  40990d:	jmp    0xccc9fbc1
  409912:	mov    DWORD PTR [edx-0x7d],ebp
  409915:	iret   
  409916:	lahf   
  409917:	sub    eax,0xd0ff0000
  40991c:	add    DWORD PTR [ecx+0x60],0x2b
  409920:	cmp    edi,0xffffff83
  409923:	jae    0x4098f1
  409925:	rol    BYTE PTR [edx-0x5d],cl
  409928:	add    bh,bh
  40992a:	add    BYTE PTR [ecx-0x461c8900],bl
  409930:	(bad)  
  409931:	(bad)  
  409932:	(bad)  
  409933:	cmp    al,BYTE PTR [ebx-0x99e062]
  409939:	(bad)  
  40993a:	(bad)  
  40993b:	fild   DWORD PTR [eax]
  40993d:	sbb    ch,bh
  40993f:	into   
  409940:	add    DWORD PTR [ebx-0x7fffe01],0xffffffc8
  409947:	mov    esp,0x6eff0000
  40994c:	add    cl,bl
  40994e:	mov    BYTE PTR [ebx-0x1],bl
  409951:	or     DWORD PTR [ecx-0x4bf100db],0xffffffe8
  409958:	int3   
  409959:	int3   
  40995a:	call   DWORD PTR [esi]
  40995c:	mov    DWORD PTR [eax-0x7c0048c0],ebx
  409962:	(bad)  
  409963:	jns    0x409965
  409965:	shr    edx,cl
  409967:	push   ds
  409968:	add    DWORD PTR [eax],0xffffffff
  40996b:	das    
  40996c:	push   DWORD PTR [edi-0x2fc9]
  409972:	call   DWORD PTR [esi+0x4d60a4cc]
  409978:	add    bh,bh
  40997a:	int3   
  40997b:	in     eax,0xff
  40997d:	sub    BYTE PTR [esi+0x2a],dh
  409980:	inc    DWORD PTR [eax]
  409982:	add    BYTE PTR [eax],ch
  409984:	sbb    DWORD PTR [eax-0xf5d5],0xffffff89
  40998b:	mov    DWORD PTR [eax],0xff4ab22e
  409991:	inc    DWORD PTR [eax]
  409993:	(bad)  
  409994:	(bad)  
  409995:	mov    esp,0xff008b44
  40999a:	add    ch,dl
  40999c:	(bad)  
  40999d:	stc    
  40999e:	lds    edi,FWORD PTR [edi+edi*8-0x7c070000]
  4099a5:	inc    eax
  4099a6:	imul   edx,edx,0x0
  4099a9:	(bad)  
  4099aa:	dec    DWORD PTR [ebx-0x52b92d00]
  4099b0:	(bad)  
  4099b1:	inc    DWORD PTR [eax]
  4099b3:	pop    ebp
  4099b4:	add    BYTE PTR [eax],bl
  4099b6:	mov    ds:0xff00ff15,eax
  4099bb:	xchg   edx,eax
  4099bc:	dec    DWORD PTR [ecx]
  4099be:	adc    al,0x8c
  4099c0:	dec    DWORD PTR [ecx-0x56007201]
  4099c6:	cdq    
  4099c7:	daa    
  4099c8:	int3   
  4099c9:	inc    DWORD PTR [eax]
  4099cb:	pushf  
  4099cc:	push   DWORD PTR [ebx-0xf9a4]
  4099d2:	add    al,ch
  4099d4:	add    BYTE PTR [esi-0x7c7cfa13],bl
  4099da:	int3   
  4099db:	and    BYTE PTR [eax],al
  4099dd:	inc    edx
  4099df:	push   ecx
  4099e0:	dec    DWORD PTR [ecx-0x15008800]
  4099e6:	jl     0x409a57
  4099e8:	(bad)  
  4099e9:	inc    DWORD PTR [eax]
  4099eb:	into   
  4099ec:	(bad)  
  4099ed:	fdivp  st(0),st
  4099ef:	sbb    al,0xff
  4099f1:	inc    DWORD PTR [eax]
  4099f3:	push   cs
  4099f4:	call   FWORD PTR [edx-0x15]
  4099f7:	and    edi,edi
  4099f9:	int3   
  4099fa:	add    DWORD PTR [ebx],0x0
  4099fd:	test   eax,0x83bfee
  409a02:	mov    DWORD PTR [edi+edi*8+0x39],ebp
  409a06:	ins    BYTE PTR es:[edi],dx
  409a07:	mov    edi,edi
  409a09:	mov    DWORD PTR [ecx+0x4a0a0088],ecx
  409a0f:	add    BYTE PTR ss:[ebx+0x57ff27cc],al
  409a16:	sbb    cl,ch
  409a18:	add    bh,bh
  409a1a:	(bad)  
  409a1b:	in     al,dx
  409a1c:	(bad)  
  409a1d:	cmp    eax,0xff89ddf3
  409a22:	inc    edx
  409a24:	call   DWORD PTR [edi+0x4b]
  409a27:	inc    ebx
  409a28:	inc    DWORD PTR [eax]
  409a2a:	add    BYTE PTR [edi],bl
  409a2c:	add    DWORD PTR [edi+esi*8-0x762c],0xffffff9e
  409a34:	(bad)  
  409a35:	mov    edi,0xff830ff1
  409a3a:	(bad)  
  409a3b:	jmp    0x503cf93f
  409a40:	add    BYTE PTR [ebx+0x6effdaff],al
  409a46:	pop    eax
  409a47:	jl     0x409a15
  409a49:	add    BYTE PTR [eax],al
  409a4b:	mov    ecx,0x9bd1a2cc
  409a50:	add    BYTE PTR [eax],al
  409a52:	mov    DWORD PTR ds:0x63313800,ebp
  409a58:	cmp    edi,0x0
  409a5b:	or     eax,0x68d82e00
  409a60:	dec    esp
  409a62:	dec    DWORD PTR [ecx-0x7d]
  409a65:	ins    DWORD PTR es:[edi],dx
  409a66:	dec    ebx
  409a67:	aaa    
  409a68:	add    bh,bh
  409a6a:	push   DWORD PTR [ebx-0x649607d]
  409a70:	add    bh,bh
  409a72:	sub    DWORD PTR [esi],0xffffff83
  409a75:	cmp    eax,0xff00e961
  409a7a:	add    BYTE PTR [ecx+ecx*4+0x32],ah
  409a7e:	mov    WORD PTR [ebx],gs
  409a80:	(bad)  
  409a81:	dec    DWORD PTR [ecx-0x55210038]
  409a87:	int3   
  409a88:	mov    edi,edi
  409a8a:	add    DWORD PTR [edx-0x172e8800],0xffffffff
  409a91:	add    DWORD PTR [eax],0x1a
  409a94:	adc    DWORD PTR [esi-0x7c7c1492],0x0
  409a9b:	(bad)
  409a9e:	mov    edx,0x8300008e
  409aa3:	push   ds
  409aa4:	or     DWORD PTR [eax-0x76009285],0xffffff89
  409aab:	ud0    esp,DWORD PTR [eax]
  409aae:	retf   
  409aaf:	adc    ah,cl
  409ab1:	cmp    edi,0x40
  409ab4:	jmp    FWORD PTR [ecx+0xe403]
  409aba:	(bad)  
  409abb:	in     al,dx
  409abc:	add    BYTE PTR [ebx+edx*2-0x78],ch
  409ac0:	add    bh,bh
  409ac2:	cmp    edx,0x0
  409ac5:	popf   
  409ac6:	ins    BYTE PTR es:[edi],dx
  409ac7:	ins    DWORD PTR es:[edi],dx
  409ac8:	add    bh,bh
  409aca:	int3   
  409acb:	iret   
  409acc:	int3   
  409acd:	stc    
  409ace:	mov    ch,0xa6
  409ad0:	inc    DWORD PTR [eax]
  409ad2:	add    bh,dh
  409ad4:	mov    DWORD PTR [ecx+eiz*2-0x76ff9a],edi
  409adb:	in     al,dx
  409adc:	add    BYTE PTR [ecx+eiz*4-0x76ff33ce],ch
  409ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ae4:	sbb    DWORD PTR [ebx-0x4a],0xffffffd8
  409ae8:	dec    esp
  409aea:	inc    DWORD PTR [eax]
  409aec:	add    DWORD PTR [ebp-0x7cf7e3],0x0
  409af3:	xchg   ebp,eax
  409af4:	jmp    esi
  409af6:	xchg   ebp,eax
  409af7:	sbb    DWORD PTR [eax],eax
  409af9:	inc    DWORD PTR [eax]
  409afb:	js     0x409afd
  409afd:	mov    ecx,esi
  409aff:	or     eax,0xf0ff83cc
  409b04:	(bad)  
  409b05:	call   0x14045f6
  409b0a:	inc    DWORD PTR [ebp-0x7d]
  409b0d:	fisubr WORD PTR [edi-0x7c7c0021]
  409b13:	jge    0x409b15
  409b15:	and    bh,BYTE PTR [ebx+0x1d]
  409b18:	add    ah,cl
  409b1a:	add    BYTE PTR [edx-0x1],dh
  409b1d:	retf   0x3fb5
  409b20:	add    BYTE PTR [ebx-0x4bff4801],al
  409b26:	pop    ds
  409b27:	cmp    bh,bh
  409b29:	add    BYTE PTR [ebx-0x1c3f33fd],al
  409b2f:	mov    dl,0xff
  409b31:	inc    DWORD PTR [eax]
  409b33:	push   esi
  409b34:	mov    edi,eax
  409b36:	cmp    DWORD PTR [ecx+0x283ffff],esi
  409b3c:	call   DWORD PTR [edx]
  409b3e:	sub    ebx,esp
  409b40:	inc    DWORD PTR [ebx-0x43ff0601]
  409b46:	mov    esi,0xffffcc17
  409b4b:	dec    ebp
  409b4c:	mov    DWORD PTR [ecx-0x6e],edx
  409b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b50:	inc    DWORD PTR [ebx-0x5a00c401]
  409b56:	cmp    al,0x3e
  409b58:	inc    DWORD PTR [ebx+0x4f832283]
  409b5e:	xchg   esp,eax
  409b5f:	mov    al,BYTE PTR [ebx-0x33660100]
  409b65:	int    0xa2
  409b67:	mov    ebp,0x6cff8900
  409b6c:	dec    DWORD PTR [esi]
  409b6e:	inc    esp
  409b6f:	cli    
  409b70:	inc    DWORD PTR [eax]
  409b72:	jmp    DWORD PTR [ebx]
  409b74:	int3   
  409b75:	fisttp QWORD PTR [ebx]
  409b77:	aaa    
  409b78:	int3   
  409b79:	add    DWORD PTR [eax],0x44
  409b7c:	call   FWORD PTR [ebp-0x7600c549]
  409b82:	inc    DWORD PTR [eax+eax*1-0x14]
  409b86:	mov    esp,0x89ffffbe
  409b8b:	js     0x409b16
  409b8d:	and    edx,edx
  409b8f:	mov    ch,0xcc
  409b91:	cmp    edi,0xffffff9d
  409b94:	jmp    ecx
  409b96:	sbb    DWORD PTR [bp+di-0x7d],eax
  409b9b:	xor    BYTE PTR [eax],al
  409b9d:	jecxz  0x409b4d
  409b9f:	cmc    
  409ba0:	inc    DWORD PTR [eax]
  409ba2:	jmp    DWORD PTR [ebx+0x3a468dff]
  409ba8:	(bad)  
  409ba9:	inc    DWORD PTR [ebx-0x7c7e00ec]
  409baf:	cmc    
  409bb0:	dec    esp
  409bb2:	int3   
  409bb3:	jns    0x409bb4
  409bb5:	inc    esi
  409bb6:	add    eax,0xffcc895a
  409bbb:	xchg   ecx,eax
  409bbc:	add    al,ah
  409bbe:	and    ah,al
  409bc0:	(bad)  
  409bc1:	(bad)  
  409bc2:	jmp    DWORD PTR [esi-0x5b5d2d01]
  409bc8:	(bad)  
  409bc9:	(bad)  
  409bca:	jmp    FWORD PTR [ecx-0x1]
  409bcd:	xchg   ebp,eax
  409bce:	inc    esi
  409bcf:	add    BYTE PTR [eax],0x83
  409bd2:	add    BYTE PTR [ebp-0x7d],ah
  409bd5:	jae    0x409bfa
  409bd7:	adc    edi,edi
  409bd9:	add    bh,bh
  409bdb:	mov    esp,0x764fdc00
  409be0:	inc    DWORD PTR [eax]
  409be2:	int3   
  409be3:	pop    edx
  409be4:	add    bl,bl
  409be6:	cmp    BYTE PTR [ebx],ch
  409be8:	(bad)  
  409be9:	inc    DWORD PTR [eax]
  409beb:	scas   eax,DWORD PTR es:[edi]
  409bec:	mov    edx,ebp
  409bee:	xor    al,0x68
  409bf0:	(bad)  
  409bf1:	(bad)  
  409bf2:	dec    ebx
  409bf4:	call   eax
  409bf6:	mov    dh,BYTE PTR [ebx+0x3f00ff83]
  409bfc:	(bad)  
  409bfd:	cmp    edi,ebp
  409bff:	cmp    eax,0x81ff8383
  409c04:	or     ebx,0xfffffff3
  409c07:	add    DWORD PTR [eax],0x8937ccff
  409c0d:	(bad)  
  409c0e:	mov    edx,0xff00837c
  409c13:	cdq    
  409c14:	call   FWORD PTR [ebx]
  409c16:	adc    al,0x66
  409c18:	(bad)  
  409c19:	inc    DWORD PTR [eax]
  409c1b:	jge    0x409c1c
  409c1d:	inc    BYTE PTR [esi-0x10000]
  409c23:	rol    DWORD PTR [ebx+0x5fdabf],cl
  409c29:	(bad)  
  409c2a:	call   FWORD PTR [edi-0x7d]
  409c2d:	sti    
  409c2e:	stc    
  409c2f:	stos   DWORD PTR es:[edi],eax
  409c30:	add    BYTE PTR [ebx-0xa76617d],al
  409c36:	mov    dl,0xf3
  409c38:	add    DWORD PTR [eax],0xffffff89
  409c3b:	xlat   BYTE PTR ds:[ebx]
  409c3c:	jmp    DWORD PTR [edi]
  409c3e:	cli    
  409c3f:	dec    ebx
  409c40:	(bad)  
  409c41:	(bad)  
  409c42:	call   FWORD PTR [edx+0x0]
  409c45:	fwait
  409c46:	cwde   
  409c47:	mov    eax,ds:0xe60089ff
  409c4c:	push   DWORD PTR [edi-0x60]
  409c4f:	dec    edx
  409c50:	int3   
  409c51:	inc    DWORD PTR [eax]
  409c53:	fwait
  409c54:	add    BYTE PTR [esi+eiz*4-0x76007c9a],ah
  409c5b:	cwde   
  409c5c:	jmp    FWORD PTR [ecx+eiz*1]
  409c5f:	in     al,dx
  409c60:	dec    esp
  409c62:	sub    DWORD PTR [eax-0x1],0x67
  409c66:	adc    al,0x64
  409c68:	int3   
  409c69:	cmp    edi,0x6e
  409c6c:	inc    DWORD PTR [esi]
  409c6e:	lods   al,BYTE PTR gs:[esi]
  409c70:	dec    esp
  409c72:	add    BYTE PTR [ebp+0x3965e000],bh
  409c78:	dec    DWORD PTR [ecx-0x3c7c9a00]
  409c7e:	mov    al,0x31
  409c80:	dec    DWORD PTR [ecx-0x6033eb00]
  409c86:	sub    BYTE PTR [ebx+eax*4-0x33427c77],al
  409c8d:	push   eax
  409c8e:	mov    al,0x5e
  409c90:	add    BYTE PTR [ebx+0x330097ff],al
  409c96:	imul   ecx,DWORD PTR [ecx-0x34],0xffe6ffff
  409c9d:	scas   al,BYTE PTR es:[edi]
  409c9e:	xor    BYTE PTR [ebx+eax*4-0x1],bh
  409ca2:	add    BYTE PTR [eax-0x34],bh
  409ca5:	jb     0x409c50
  409ca7:	fcmovne st,st(4)
  409ca9:	dec    DWORD PTR [ecx-0x520000ee]
  409caf:	mov    ebx,0x9eff89ff
  409cb4:	add    dh,ah
  409cb6:	dec    ebp
  409cb7:	loope  0x409cb8
  409cb9:	add    BYTE PTR [eax],al
  409cbb:	jmp    0x409c40
  409cbd:	call   0x14048d2
  409cc2:	push   esp
  409cc4:	add    ah,bl
  409cc6:	fisub  WORD PTR [edi]
  409cc8:	add    bh,bh
  409cca:	int3   
  409ccb:	xor    al,0x0
  409ccd:	mov    eax,0xffff8291
  409cd2:	dec    DWORD PTR [edi+0x31aab100]
  409cd8:	add    DWORD PTR [eax],0x0
  409cdb:	int3   
  409cdc:	(bad)  
  409cdd:	in     eax,dx
  409cde:	pop    esi
  409cdf:	and    cl,ah
  409ce1:	inc    DWORD PTR [eax]
  409ce3:	aaa    
  409ce4:	add    bh,ah
  409ce6:	test   DWORD PTR [ecx],esp
  409ce8:	inc    DWORD PTR [eax]
  409cea:	add    BYTE PTR [ebp+0x0],bl
  409ced:	sub    BYTE PTR [edi+eax*1],bl
  409cf0:	add    BYTE PTR [eax],al
  409cf2:	jmp    DWORD PTR [edx+0x0]
  409cf5:	adc    al,0xda
  409cf7:	test   DWORD PTR [ecx-0x7c2a007d],ecx
  409cfd:	js     0x409cf0
  409cff:	je     0x409d00
  409d01:	add    ah,cl
  409d03:	dec    esi
  409d04:	call   DWORD PTR [ebx+0x3f]
  409d07:	loop   0x409d09
  409d09:	add    BYTE PTR [eax],al
  409d0b:	call   cx
  409d0e:	adc    eax,0x83ff00d6
  409d13:	add    al,BYTE PTR [eax]
  409d15:	add    BYTE PTR [edx+0xfffff4],dh
  409d1b:	daa    
  409d1c:	or     DWORD PTR [edi+0x7b],0x2a
  409d20:	add    BYTE PTR [eax],al
  409d22:	add    BYTE PTR ds:0x5ec2f600,cl
  409d28:	inc    DWORD PTR [ebx-0x3500fa01]
  409d2e:	fnstsw WORD PTR [ebp-0x3bff7c01]
  409d34:	int3   
  409d35:	enter  0xd111,0xff
  409d39:	(bad)  
  409d3a:	dec    esp
  409d3c:	jmp    FWORD PTR [esi+0xccd6ab]
  409d42:	add    BYTE PTR [ebx],cl
  409d44:	call   DWORD PTR [edi+ecx*4]
  409d47:	pop    esp
  409d48:	add    BYTE PTR [ecx+0x48ff6cff],cl
  409d4e:	ret    0x8321
  409d51:	inc    DWORD PTR [ebx-0x68ab002c]
  409d57:	push   edx
  409d58:	inc    DWORD PTR [eax]
  409d5a:	(bad)  
  409d5b:	jg     0x409ce0
  409d5d:	lods   al,BYTE PTR ds:[esi]
  409d5e:	aaa    
  409d5f:	push   esi
  409d60:	int3   
  409d61:	(bad)  
  409d62:	inc    DWORD PTR [ebx]
  409d64:	add    BYTE PTR [esi-0x7689eb],cl
  409d6a:	call   FWORD PTR [ebp-0x7d]
  409d6d:	sbb    DWORD PTR [ecx-0x88],ebp
  409d73:	or     eax,0x81dde300
  409d78:	add    ah,cl
  409d7a:	mov    DWORD PTR [eax],ebp
  409d7c:	add    BYTE PTR [edi-0x37],ch
  409d7f:	mov    ecx,esp
  409d81:	dec    esp
  409d83:	adc    al,0xff
  409d85:	push   edx
  409d86:	push   edi
  409d87:	daa    
  409d88:	dec    esp
  409d8a:	(bad)  
  409d8b:	mov    ebp,0xf35c2a89
  409d90:	add    bh,bh
  409d92:	add    ch,dl
  409d94:	push   DWORD PTR [ebx-0x7cb3ee]
  409d9a:	add    ebx,0xffffffcc
  409d9d:	(bad)  
  409d9e:	cmp    BYTE PTR [edx-0x4a007d00],ch
  409da4:	(bad)  
  409da5:	in     eax,dx
  409da6:	add    ch,BYTE PTR [eax]
  409da8:	mov    esp,ecx
  409daa:	add    al,dh
  409dac:	int3   
  409dad:	in     al,dx
  409dae:	inc    ebp
  409daf:	lahf   
  409db0:	(bad)  
  409db1:	(bad)  
  409db2:	call   FWORD PTR [eax-0x34]
  409db5:	and    eax,0xffad4c
  409dba:	dec    DWORD PTR [esi]
  409dbc:	add    BYTE PTR [eax-0x62],bl
  409dbf:	out    dx,al
  409dc0:	add    BYTE PTR [eax],al
  409dc2:	call   FWORD PTR [eax+eax*1]
  409dc5:	add    dh,dh
  409dc7:	jns    0x409dc9
  409dc9:	add    ah,cl
  409dcb:	add    BYTE PTR [bx-0x6],dl
  409dcf:	(bad)  
  409dd1:	(bad)  
  409dd2:	(bad)  
  409dd3:	cmp    eax,0x935e3200
  409dd8:	dec    esp
  409dda:	adc    DWORD PTR [eax+0x1f223100],0xffffffff
  409de1:	add    BYTE PTR [eax],al
  409de3:	cmp    al,0xff
  409de5:	sub    DWORD PTR [esi+0xd],esi
  409de8:	cmp    edi,0xffffffcc
  409deb:	inc    edx
  409dec:	add    BYTE PTR [edi+esi*2],bh
  409def:	mov    ebp,0x76ccff00
  409df4:	and    ebp,0xffffffaf
  409df7:	pop    es
  409df8:	(bad)  
  409df9:	inc    DWORD PTR [ebx-0xa6dffe7]
  409dff:	or     BYTE PTR [ecx-0xe83400],0x51
  409e06:	les    edx,FWORD PTR [esi-0x31760100]
  409e0c:	sub    DWORD PTR [esp+edx*8],0x68
  409e10:	add    DWORD PTR [eax],0x0
  409e13:	fisttp DWORD PTR [ecx-0x333c9018]
  409e19:	add    ah,cl
  409e1b:	fdivp  st(7),st
  409e1d:	xchg   DWORD PTR [edi-0x7c3334],eax
  409e23:	ins    BYTE PTR es:[edi],dx
  409e24:	add    BYTE PTR [edx],ah
  409e26:	and    al,0x5d
  409e28:	(bad)  
  409e29:	(bad)  
  409e2a:	call   ecx
  409e2c:	add    BYTE PTR [ecx+0xc],dh
  409e2f:	cwde   
  409e30:	add    bh,bh
  409e32:	add    BYTE PTR ds:0xf014beff,dl
  409e38:	add    bh,bh
  409e3a:	add    BYTE PTR [edx],dl
  409e3c:	(bad)  
  409e3d:	mov    edi,0xff0068e3
  409e42:	int3   
  409e43:	test   BYTE PTR [ebx-0xd8ef4c],0xff
  409e4a:	add    ah,bl
  409e4c:	(bad)  
  409e4d:	jl     0x409e93
  409e4f:	jbe    0x409e51
  409e51:	inc    DWORD PTR [eax]
  409e53:	call   0xcc:0xef291b00
  409e5a:	inc    DWORD PTR [ebx-0x1]
  409e5d:	scas   eax,DWORD PTR es:[edi]
  409e5e:	hlt    
  409e5f:	mov    ch,0x89
  409e61:	inc    DWORD PTR [eax]
  409e63:	adc    al,0xff
  409e65:	repnz push ss
  409e67:	clc    
  409e68:	int3   
  409e69:	add    bh,bh
  409e6b:	sbb    edi,edi
  409e6d:	xor    cl,BYTE PTR [ebx-0x9a]
  409e73:	clc    
  409e74:	(bad)  
  409e75:	jl     0x409e5f
  409e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e78:	dec    esp
  409e7a:	jmp    FWORD PTR [edi-0x22517e01]
  409e80:	add    BYTE PTR [ebx+0x62ff2700],al
  409e86:	into   
  409e87:	xchg   ebx,eax
  409e88:	(bad)  
  409e89:	inc    DWORD PTR [eax]
  409e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8c:	add    BYTE PTR [eax-0xffbd96],al
  409e92:	jmp    DWORD PTR [ecx]
  409e94:	mov    DWORD PTR [ecx-0xd68a],esp
  409e9a:	sbb    edx,0x0
  409e9d:	pop    ds
  409e9e:	(bad)  
  409e9f:	cwde   
  409ea0:	add    BYTE PTR [eax],al
  409ea2:	push   edx
  409ea4:	mov    DWORD PTR [ecx-0x7c7ce557],ecx
  409eaa:	call   FWORD PTR [eax-0x7001aa7d]
  409eb0:	inc    DWORD PTR [eax]
  409eb2:	and    esi,0xffffff83
  409eb5:	test   DWORD PTR ds:0xff0099,ecx
  409ebb:	retf   0xd3ff
  409ebe:	call   0x3f9f8a
  409ec3:	ds (bad) 
  409ec5:	mov    edx,0xffff4199
  409eca:	jmp    FWORD PTR [edi]
  409ecc:	call   FWORD PTR [edx]
  409ece:	and    BYTE PTR [edi-0x1],dh
  409ed1:	(bad)  
  409ed2:	push   DWORD PTR [eax+0x30984aff]
  409ed8:	inc    DWORD PTR [ebx-0x4d00e97d]
  409ede:	das    
  409edf:	xor    al,0xff
  409ee1:	add    BYTE PTR [ecx+0x7fb6ff6b],cl
  409ee7:	mov    BYTE PTR [eax],al
  409ee9:	(bad)  
  409eea:	dec    ebx
  409eec:	add    BYTE PTR [esi+edi*8-0x33e7],ah
  409ef3:	add    BYTE PTR [ebx-0x73ac8f],al
  409ef9:	(bad)  
  409efa:	call   DWORD PTR [ecx]
  409efc:	call   FWORD PTR [ebx-0x33f466]
  409f02:	jmp    FWORD PTR [esi]
  409f04:	add    BYTE PTR [edx-0x21],bh
  409f07:	iret   
  409f08:	(bad)  
  409f09:	(bad)  
  409f0a:	jmp    FWORD PTR [ebx+eax*4+0x31]
  409f0e:	jmp    0xbe:0xff0093
  409f15:	in     eax,dx
  409f16:	mov    edi,0xffff7e
  409f1b:	inc    ebp
  409f1c:	push   edi
  409f1e:	xchg   edx,eax
  409f1f:	dec    esi
  409f20:	dec    esp
  409f22:	adc    DWORD PTR [ebp+0x2c74783],0xffffffff
  409f29:	inc    DWORD PTR [eax]
  409f2b:	retf   
  409f2c:	int3   
  409f2d:	or     ah,BYTE PTR [ecx+0xd]
  409f30:	(bad)  
  409f31:	inc    DWORD PTR [ebx+0x34fd8964]
  409f37:	in     eax,dx
  409f38:	add    bh,bh
  409f3a:	or     DWORD PTR [edi+0x0],0xffffffb0
  409f3e:	int3   
  409f3f:	ud0    edi,edi
  409f42:	add    BYTE PTR [ebp-0x5476f201],bl
  409f48:	add    BYTE PTR [eax],al
  409f4a:	add    DWORD PTR [edx-0x77],0x4d
  409f4e:	sbb    DWORD PTR [ebp-0x1],eax
  409f51:	add    ah,cl
  409f53:	adc    edi,edi
  409f55:	(bad)  
  409f56:	mov    ch,0x8a
  409f58:	add    ah,cl
  409f5a:	push   DWORD PTR [ebp-0x15abed01]
  409f60:	add    BYTE PTR [ecx+0x548975ff],cl
  409f66:	lods   al,BYTE PTR ds:[esi]
  409f67:	test   al,0x0
  409f69:	dec    DWORD PTR [ecx+0x4d6a00e2]
  409f6f:	mov    ds:0x1683ff00,al
  409f74:	(bad)  
  409f75:	fcomp  DWORD PTR [ebx+0x83ffe5]
  409f7b:	inc    edx
  409f7c:	(bad)  
  409f7d:	mov    esp,0xcc00bfed
  409f82:	add    BYTE PTR [ebp-0x2952f701],cl
  409f88:	add    BYTE PTR [eax],al
  409f8a:	call   DWORD PTR [edi+0x404da0ff]
  409f90:	(bad)  
  409f91:	dec    DWORD PTR [ecx+0x518f834c]
  409f97:	pop    edi
  409f98:	inc    DWORD PTR [ebx-0x78ff4400]
  409f9e:	ja     0x409fc9
  409fa0:	int3   
  409fa1:	add    bh,bh
  409fa3:	nop
  409fa4:	(bad)  
  409fa5:	in     eax,dx
  409fa6:	xchg   ebp,eax
  409fa7:	xor    bh,bh
  409fa9:	inc    DWORD PTR [eax]
  409fab:	add    DWORD PTR [eax],0xffffff90
  409fae:	fdivr  st(0),st
  409fb0:	add    ah,cl
  409fb2:	xor    DWORD PTR [eax],0x0
  409fb5:	ret    
  409fb6:	lea    ecx,[edx]
  409fb8:	int3   
  409fb9:	add    bh,bh
  409fbb:	data16 (bad) 
  409fbd:	jns    0x409fdd
  409fbf:	xchg   ebx,eax
  409fc0:	add    BYTE PTR [eax],al
  409fc2:	int3   
  409fc3:	ret    0x6c00
  409fc6:	(bad)  
  409fc7:	je     0x409fc8
  409fc9:	mov    edi,edi
  409fcb:	ja     0x409fcc
  409fcd:	jle    0x409fd2
  409fcf:	test   esp,0x83b8ffff
  409fd5:	push   ecx
  409fd6:	push   eax
  409fd7:	fs mov edi,edi
  409fda:	call   FWORD PTR [edx]
  409fdc:	add    BYTE PTR [ecx],bl
  409fde:	in     al,dx
  409fdf:	into   
  409fe0:	inc    DWORD PTR [eax]
  409fe2:	add    BYTE PTR [ebx+eax*4-0xb3bab1],bh
  409fe9:	inc    DWORD PTR [eax]
  409feb:	pop    esi
  409fec:	inc    DWORD PTR [esi-0x6c]
  409fef:	stos   DWORD PTR es:[edi],eax
  409ff0:	add    BYTE PTR [ebx+0x600a1ff],al
  409ff6:	fldcw  WORD PTR [esi+0x4489cc00]
  409ffc:	sub    DWORD PTR [eax],0xffffffde
  409fff:	mov    bh,bh
  40a001:	inc    DWORD PTR [eax]
  40a003:	nop
  40a004:	adc    DWORD PTR [eax+esi*2],0xffffffd2
  40a008:	add    DWORD PTR [eax],0x0
  40a00b:	lods   eax,DWORD PTR ds:[esi]
  40a00c:	jmp    DWORD PTR [ebx]
  40a00e:	push   ds
  40a00f:	adc    eax,0x69838900
  40a014:	add    BYTE PTR [ebx],ch
  40a016:	retf   0x8964
  40a019:	add    BYTE PTR [eax],al
  40a01b:	repnz call FWORD PTR [eax-0xff53cf]
  40a022:	push   DWORD PTR [edi-0x1]
  40a025:	fst    QWORD PTR [ebp+0x83ff26]
  40a02b:	in     eax,0x0
  40a02d:	xor    dl,BYTE PTR [ecx-0x36]
  40a030:	add    bh,bh
  40a032:	int3   
  40a033:	mov    ah,0xff
  40a035:	fdivr  st(1),st
  40a037:	mov    dh,0xff
  40a039:	add    BYTE PTR [eax],al
  40a03b:	adc    al,0x0
  40a03d:	xchg   DWORD PTR ds:0x89ffccf9,ecx
  40a043:	adc    BYTE PTR [eax],al
  40a045:	repz xor DWORD PTR [edi],edi
  40a048:	add    BYTE PTR [eax],al
  40a04a:	add    BYTE PTR [ebp-0x1],ch
  40a04d:	add    eax,0x8900343b
  40a052:	mov    DWORD PTR [eax-0x1],ebp
  40a055:	mov    bl,0xc0
  40a057:	xchg   edi,eax
  40a058:	(bad)  
  40a059:	(bad)  
  40a05a:	dec    edi
  40a05c:	call   FWORD PTR [ecx-0x14]
  40a05f:	jl     0x40a061
  40a061:	add    BYTE PTR [eax],al
  40a063:	push   ecx
  40a064:	jmp    FWORD PTR [edx+esi*8-0x2f]
  40a068:	add    bh,bh
  40a06a:	(bad)  
  40a06b:	js     0x409ff6
  40a06d:	das    
  40a06e:	fcomip st,st(2)
  40a070:	inc    DWORD PTR [ebx-0x36ff8e77]
  40a076:	call   0x3fa12a
  40a07b:	and    bh,bh
  40a07d:	les    esp,FWORD PTR [edx]
  40a07f:	adc    ecx,esp
  40a081:	add    BYTE PTR [ebx-0x6e4c0062],al
  40a087:	inc    ebx
  40a088:	inc    DWORD PTR [eax]
  40a08a:	add    BYTE PTR [eax+eax*1+0xe53ea1],ch
  40a091:	inc    DWORD PTR [eax]
  40a093:	jg     0x40a061
  40a095:	adc    cl,BYTE PTR [eax-0x39]
  40a098:	mov    edi,edi
  40a09a:	call   FWORD PTR ds:0x878b8a83
  40a0a0:	add    BYTE PTR [ebx+0x52ff81ff],al
  40a0a6:	and    eax,0xcc00006e
  40a0ab:	push   ebp
  40a0ac:	mov    DWORD PTR [ecx],edi
  40a0ae:	loopne 0x40a0e4
  40a0b0:	add    DWORD PTR [eax],0x0
  40a0b3:	jge    0x40a03e
  40a0b5:	inc    edi
  40a0b6:	xchg   ecx,eax
  40a0b7:	inc    esi
  40a0b8:	add    bh,bh
  40a0ba:	(bad)  
  40a0bb:	cmp    al,0x83
  40a0bd:	add    edx,DWORD PTR [edx+ebp*1]
  40a0c0:	(bad)  
  40a0c1:	(bad)  
  40a0c2:	call   ecx
  40a0c4:	jmp    DWORD PTR [ebx-0x2b]
  40a0c7:	jge    0x40a0c8
  40a0c9:	(bad)  
  40a0ca:	(bad)  
  40a0cb:	jmp    0xb674ee53
  40a0d0:	int3   
  40a0d1:	add    bh,bh
  40a0d3:	in     eax,dx
  40a0d4:	add    BYTE PTR [eax],al
  40a0d6:	(bad)  
  40a0d7:	(bad)  
  40a0d9:	cmp    edi,0xffffffb7
  40a0dc:	and    DWORD PTR [edx],0xffffff93
  40a0df:	out    0xcc,al
  40a0e1:	add    bh,bh
  40a0e3:	js     0x40a0b1
  40a0e5:	inc    ebp
  40a0e6:	mov    esp,0xff34
  40a0eb:	mov    al,BYTE PTR [eax]
  40a0ed:	and    bh,BYTE PTR [esp+esi*1+0x4eff0083]
  40a0f4:	add    BYTE PTR [ebx-0x1e3b],ah
  40a0fa:	call   ecx
  40a0fc:	add    BYTE PTR [esi-0x16],al
  40a0ff:	fs mov edi,edi
  40a102:	add    BYTE PTR [esi],dl
  40a104:	int3   
  40a105:	retf   
  40a106:	xor    eax,0x890083e3
  40a10b:	adc    eax,0xc260f583
  40a110:	(bad)  
  40a111:	dec    esp
  40a113:	fwait
  40a114:	add    BYTE PTR [ecx+0xff7388],al
  40a11a:	sub    DWORD PTR [edi+0x0],0x19
  40a11e:	test   DWORD PTR [eax],esp
  40a120:	add    BYTE PTR [eax],al
  40a122:	mov    DWORD PTR [edi-0x1],ebp
  40a125:	sub    esi,DWORD PTR [edi]
  40a127:	pop    ss
  40a128:	inc    DWORD PTR [eax]
  40a12a:	int3   
  40a12b:	mov    esi,0x82df58ff
  40a130:	cmp    edi,0xffffff83
  40a133:	clc    
  40a134:	inc    ecx
  40a136:	ds pushf 
  40a138:	(bad)  
  40a139:	(bad)  
  40a13a:	push   ebp
  40a13c:	add    ah,ah
  40a13e:	adc    BYTE PTR [ecx],al
  40a140:	int3   
  40a141:	inc    DWORD PTR [eax]
  40a143:	mov    edx,0x29ae1aff
  40a148:	(bad)  
  40a149:	(bad)  
  40a14a:	inc    DWORD PTR [esi]
  40a14c:	add    BYTE PTR [eax-0x7c0044c5],bh
  40a152:	push   edi
  40a154:	add    BYTE PTR [edi+ebx*1+0x60],bh
  40a158:	add    BYTE PTR [eax],al
  40a15a:	add    BYTE PTR [esi],dh
  40a15c:	add    BYTE PTR [esi-0x7678f7],dh
  40a162:	add    esp,0x0
  40a165:	or     ebp,edi
  40a167:	add    DWORD PTR [eax],0xff6f8300
  40a16d:	ret    0x4fec
  40a170:	add    BYTE PTR [eax],al
  40a172:	add    bl,dl
  40a174:	jmp    FWORD PTR [edx-0xff896f]
  40a17a:	jmp    FWORD PTR [eax-0x1f16a201]
  40a180:	or     DWORD PTR [ecx-0x1ff4a00],0xfffffff3
  40a187:	pop    ds
  40a188:	(bad)  
  40a189:	(bad)  
  40a18a:	(bad)  
  40a18b:	aas    
  40a18c:	inc    edi
  40a18e:	or     eax,0xffccff05
  40a193:	(bad)  
  40a194:	call   FWORD PTR [eax-0x1b]
  40a197:	outs   dx,BYTE PTR ds:[esi]
  40a198:	cmp    edi,0xffffffff
  40a19b:	inc    edi
  40a19c:	call   DWORD PTR [esp+esi*8-0x58]
  40a1a0:	add    bh,bh
  40a1a2:	(bad)  
  40a1a3:	fmul   st(4),st
  40a1a5:	mov    esp,0xccff3071
  40a1aa:	and    DWORD PTR [edi+edi*8+0xa8f6f9],0x0
  40a1b2:	push   DWORD PTR [ebx+0x4d48b89]
  40a1b8:	dec    DWORD PTR [ecx+0x11008500]
  40a1be:	and    al,BYTE PTR [ebx+eax*4+0x0]
  40a1c2:	add    BYTE PTR [ecx-0x7d],dl
  40a1c5:	push   es
  40a1c6:	push   esp
  40a1c7:	cwde   
  40a1c8:	cmp    edi,0xffffffff
  40a1cb:	cmp    al,0x0
  40a1cd:	jo     0x40a189
  40a1cf:	lahf   
  40a1d0:	mov    edi,edi
  40a1d2:	call   FWORD PTR [esi-0x1]
  40a1d5:	jne    0x40a1b4
  40a1d7:	rol    BYTE PTR [ebx-0x7c380034],0x55
  40a1de:	and    eax,0xff00004d
  40a1e3:	ret    
  40a1e4:	call   DWORD PTR [ecx-0xff2c82]
  40a1ea:	int3   
  40a1eb:	cmp    edi,0xffffffad
  40a1ee:	push   0x61
  40a1f0:	add    bh,bh
  40a1f2:	push   DWORD PTR [ebp-0x1]
  40a1f5:	add    ebx,DWORD PTR [ebp-0x66]
  40a1f8:	(bad)  
  40a1f9:	(bad)  
  40a1fa:	inc    DWORD PTR [ecx]
  40a1fc:	jmp    FWORD PTR [eax-0x42]
  40a1ff:	ror    esp,1
  40a201:	mov    edi,edi
  40a203:	xlat   BYTE PTR ds:[ebx]
  40a204:	add    BYTE PTR [ecx-0x1342],dh
  40a20a:	add    BYTE PTR ds:0x88e640ff,bl
  40a210:	cmp    edi,0xffffffff
  40a213:	loopne 0x40a198
  40a215:	push   es
  40a216:	add    eax,DWORD PTR [esi]
  40a218:	add    BYTE PTR [eax],al
  40a21a:	int3   
  40a21b:	aaa    
  40a21c:	add    BYTE PTR [eax+ebx*8],cl
  40a21f:	sub    edi,edi
  40a221:	add    bh,bh
  40a223:	push   0xffffff83
  40a225:	mov    es,WORD PTR [edx-0x43]
  40a228:	(bad)  
  40a229:	inc    DWORD PTR [ebx+0x6ad4ff3d]
  40a22f:	jl     0x40a230
  40a231:	add    BYTE PTR [ebx-0x531100bf],al
  40a237:	fs (bad) 
  40a239:	inc    DWORD PTR [eax]
  40a23b:	pop    ecx
  40a23c:	int3   
  40a23d:	loop   0x40a1f3
  40a23f:	sbb    bh,bh
  40a241:	add    bh,bh
  40a243:	sub    al,BYTE PTR [ebx-0x9d3ab1]
  40a249:	add    BYTE PTR [ecx-0x7d380006],cl
  40a24f:	dec    ebp
  40a250:	inc    DWORD PTR [eax]
  40a252:	add    BYTE PTR [ebp-0x77],bh
  40a255:	add    dh,cl
  40a257:	inc    ebx
  40a258:	add    bh,bh
  40a25a:	add    esp,0xffffff83
  40a25d:	xchg   edi,eax
  40a25e:	mov    bl,0xb6
  40a260:	inc    DWORD PTR [eax]
  40a262:	int3   
  40a263:	mov    ds:0xe4e53bff,al
  40a268:	add    BYTE PTR [eax],al
  40a26a:	jmp    DWORD PTR [edx]
  40a26c:	add    BYTE PTR [edi+0x35],bh
  40a26f:	jmp    0x8800:0x55ffccff
  40a276:	aad    0xb3
  40a278:	int3   
  40a279:	mov    edi,edi
  40a27b:	jns    0x40a200
  40a27d:	mov    ds:0xff00cc55,eax
  40a282:	mov    DWORD PTR [eax-0x77],edi
  40a285:	lahf   
  40a286:	(bad)  
  40a287:	sub    edi,edi
  40a289:	dec    DWORD PTR [ecx-0x769400cf]
  40a28f:	sbb    bh,bh
  40a291:	(bad)  
  40a292:	call   FWORD PTR [ebx+eax*4-0x823509]
  40a299:	dec    esp
  40a29b:	lahf   
  40a29c:	jmp    edi
  40a29e:	sti    
  40a29f:	or     bh,bh
  40a2a1:	add    bh,bh
  40a2a3:	jg     0x40a2a5
  40a2a5:	cmp    BYTE PTR [ebp+0x42],ah
  40a2a8:	add    bh,bh
  40a2aa:	add    al,ch
  40a2ac:	adc    DWORD PTR [ebp+0x54],0xffffffa4
  40a2b0:	(bad)  
  40a2b1:	(bad)  
  40a2b2:	call   FWORD PTR [eax+eax*1+0x75]
  40a2b6:	lahf   
  40a2b7:	js     0x40a2b9
  40a2b9:	add    ah,cl
  40a2bb:	push   esp
  40a2bc:	mov    DWORD PTR [edi+0x5f],edi
  40a2bf:	sbb    edi,edi
  40a2c1:	dec    DWORD PTR [ecx-0x70ef00c1]
  40a2c7:	imul   eax,DWORD PTR [eax],0xffffff83
  40a2ca:	int3   
  40a2cb:	mov    ebp,0xafa80b83
  40a2d0:	(bad)  
  40a2d1:	(bad)  
  40a2d2:	(bad)  
  40a2d3:	(bad)  
  40a2d5:	xchg   ebx,eax
  40a2d6:	xor    al,BYTE PTR [esi-0x6affff01]
  40a2dc:	cmp    DWORD PTR [eax],0xffffff80
  40a2df:	ret    0x8989
  40a2e2:	add    ch,ch
  40a2e4:	add    BYTE PTR [edi],cl
  40a2e6:	xor    DWORD PTR [ebp-0x1],esp
  40a2e9:	add    DWORD PTR [ebx+0x1394ff65],0xffffffa2
  40a2f0:	add    bh,bh
  40a2f2:	int3   
  40a2f3:	in     al,dx
  40a2f4:	add    BYTE PTR [edi+0xff940c],dh
  40a2fa:	dec    esp
  40a2fc:	add    BYTE PTR [edi],dh
  40a2fe:	fdiv   DWORD PTR [ebx+0x2000ff83]
  40a304:	add    BYTE PTR [edx-0xe0e3],ah
  40a30a:	add    BYTE PTR [esi-0x1],al
  40a30d:	jmp    0x6aff:0xff00d746
  40a314:	call   DWORD PTR [edi]
  40a316:	mov    edi,0xffa9
  40a31b:	retf   0xd300
  40a31e:	jecxz  0x40a30f
  40a320:	add    ah,cl
  40a322:	add    BYTE PTR [esi-0x12175901],bh
  40a328:	dec    esp
  40a32a:	mov    esi,esp
  40a32c:	sub    esi,0xffffff93
  40a32f:	xchg   ebx,eax
  40a330:	add    BYTE PTR [ebx-0x2600387d],al
  40a336:	mov    ebx,0xff00ffee
  40a33b:	pushf  
  40a33c:	(bad)  
  40a33d:	sti    
  40a33e:	maxps  xmm0,XMMWORD PTR [ebx-0x967c01]
  40a345:	jle    0x40a371
  40a347:	mov    esp,0xbf0000ff
  40a34c:	or     ecx,0xffffffd1
  40a34f:	(bad)  
  40a351:	mov    DWORD PTR [eax],eax
  40a353:	jecxz  0x40a355
  40a355:	mov    dl,0xfd
  40a357:	pop    eax
  40a358:	dec    esp
  40a35a:	cmp    DWORD PTR [ebp+0x296656ff],0xffffffff
  40a361:	add    bh,bh
  40a363:	dec    esp
  40a364:	add    bh,bl
  40a366:	js     0x40a3e3
  40a368:	inc    DWORD PTR [eax]
  40a36a:	int3   
  40a36b:	retf   
  40a36c:	add    BYTE PTR [edi-0x70],ch
  40a36f:	add    DWORD PTR gs:[eax],0x0
  40a373:	mov    bh,bh
  40a375:	xchg   esp,eax
  40a376:	(bad)  
  40a377:	in     al,dx
  40a378:	(bad)  
  40a379:	(bad)  
  40a37a:	jmp    DWORD PTR [esi+0x5f3c7aff]
  40a380:	add    BYTE PTR [ecx-0x227c7f00],cl
  40a386:	xchg   esi,eax
  40a387:	aaa    
  40a388:	add    BYTE PTR [ecx+0x29ff46ff],cl
  40a38e:	xchg   edi,eax
  40a38f:	and    eax,0x7b00ff83
  40a394:	mov    DWORD PTR ds:0x8989021b,esi
  40a39a:	sbb    DWORD PTR [ecx-0x58d4d401],0x0
  40a3a1:	add    bh,bh
  40a3a3:	aaa    
  40a3a4:	mov    DWORD PTR [eax+0x72],ecx
  40a3a7:	xor    edi,edi
  40a3a9:	(bad)  
  40a3aa:	jmp    FWORD PTR [ebx-0x4fc7f100]
  40a3b0:	add    BYTE PTR [ebx+0x2289ad83],al
  40a3b6:	shl    BYTE PTR [ecx-0x1],cl
  40a3b9:	inc    DWORD PTR [eax]
  40a3bb:	mov    dh,0xff
  40a3bd:	sub    esp,DWORD PTR [esi-0x48]
  40a3c0:	(bad)  
  40a3c1:	inc    DWORD PTR [ebx-0x597fff58]
  40a3c7:	xchg   ecx,eax
  40a3c8:	inc    DWORD PTR [eax]
  40a3ca:	or     edi,0xffffffff
  40a3cd:	mov    dh,0x18
  40a3cf:	add    DWORD PTR [ebx+0x5dff00],eax
  40a3d5:	icebp  
  40a3d6:	(bad)  
  40a3d7:	pop    ds
  40a3d8:	add    DWORD PTR [eax],0x0
  40a3db:	sbb    eax,0x30b7dcff
  40a3e0:	inc    DWORD PTR [eax]
  40a3e2:	or     DWORD PTR [esp+ecx*8-0x68],0x6e
  40a3e7:	jbe    0x40a3e8
  40a3e9:	(bad)  
  40a3ea:	call   edi
  40a3ec:	add    dh,dh
  40a3ee:	jo     0x40a42b
  40a3f0:	inc    DWORD PTR [eax]
  40a3f2:	jmp    FWORD PTR [esi-0x1]
  40a3f5:	push   0x3f
  40a3f7:	cmp    BYTE PTR [ebx+0x7000ff],al
  40a3fd:	scas   al,BYTE PTR es:[edi]
  40a3fe:	pop    edi
  40a3ff:	dec    eax
  40a400:	inc    DWORD PTR [eax]
  40a402:	int3   
  40a403:	inc    esi
  40a404:	add    BYTE PTR [esp+esi*4],bl
  40a407:	aaa    
  40a408:	add    bh,bh
  40a40a:	add    DWORD PTR [edx+0x0],0x7a
  40a40e:	xor    ecx,0xffffffff
  40a411:	add    BYTE PTR [ecx-0x6e3fffe],cl
  40a417:	sub    eax,0xfaffffcc
  40a41c:	(bad)  
  40a41d:	jg     0x40a3ec
  40a41f:	adc    edi,edi
  40a421:	cmp    edi,0x51
  40a424:	call   DWORD PTR [ebx-0xde08]
  40a42a:	push   DWORD PTR [eax+eax*1]
  40a42d:	add    DWORD PTR [edi+0x6f],ebp
  40a430:	cmp    edi,0xffffffff
  40a433:	or     edi,edi
  40a435:	test   al,0x97
  40a437:	mov    DWORD PTR [eax],eax
  40a439:	(bad)  
  40a43a:	call   DWORD PTR [edx]
  40a43c:	add    BYTE PTR [ebx+esi*2],al
  40a43f:	fs int3 
  40a441:	add    ah,cl
  40a443:	jmp    0x8e50fe47
  40a448:	add    ah,cl
  40a44a:	add    bl,bl
  40a44c:	adc    DWORD PTR ds:0xff2e26,0x0
  40a453:	ins    DWORD PTR es:[edi],dx
  40a454:	xor    DWORD PTR [ebp-0x3],0x3d
  40a458:	add    BYTE PTR [eax],al
  40a45a:	or     esi,0xffffff89
  40a45d:	ret    
  40a45e:	mov    edx,0xffff83b0
  40a463:	mov    eax,ds:0x9151d900
  40a468:	dec    esp
  40a46a:	add    BYTE PTR [eax],bl
  40a46c:	int3   
  40a46d:	mov    esi,0x83ff4904
  40a472:	add    BYTE PTR [edi],ah
  40a474:	jmp    DWORD PTR [eax+0xc]
  40a477:	enter  0xff00,0xff
  40a47b:	retf   0xa83
  40a47e:	mov    al,dh
  40a480:	add    bh,bh
  40a482:	(bad)  
  40a483:	in     al,dx
  40a484:	(bad)  
  40a485:	fldenv [eax+0x7a]
  40a488:	inc    DWORD PTR [eax]
  40a48a:	jmp    DWORD PTR [esi]
  40a48c:	jmp    DWORD PTR ds:0xff1439
  40a492:	dec    DWORD PTR [ecx+0x79b993ff]
  40a498:	add    BYTE PTR [eax],al
  40a49a:	int3   
  40a49b:	or     eax,DWORD PTR [ebx-0x7c0e8370]
  40a4a1:	add    bh,bh
  40a4a3:	sar    edi,cl
  40a4a5:	gs repnz add al,0x0
  40a4a9:	(bad)  
  40a4aa:	(bad)  
  40a4ab:	js     0x40a4ac
  40a4ad:	test   ah,bh
  40a4af:	push   cs
  40a4b0:	(bad)  
  40a4b1:	inc    DWORD PTR [eax]
  40a4b3:	int    0x0
  40a4b5:	inc    ebx
  40a4b6:	out    0x9b,eax
  40a4b8:	add    DWORD PTR [eax],0x0
  40a4bb:	verr   WORD PTR [edx-0x3d]
  40a4bf:	imul   edi,edi,0xffffffff
  40a4c2:	jmp    FWORD PTR [esp+ecx*8]
  40a4c5:	jbe    0x40a4fa
  40a4c7:	les    eax,FWORD PTR [eax]
  40a4c9:	add    BYTE PTR [eax],al
  40a4cb:	or     BYTE PTR [eax],al
  40a4cd:	ret    0x1a63
  40a4d0:	add    bh,bh
  40a4d2:	sub    DWORD PTR [ebx+0x0],0xffffffec
  40a4d6:	scas   eax,DWORD PTR es:[edi]
  40a4d7:	fild   WORD PTR [ebx-0x72007d]
  40a4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4de:	mov    esi,DWORD PTR [edi-0x7d]
  40a4e1:	(bad)  
  40a4e2:	(bad)  
  40a4e3:	out    dx,al
  40a4e4:	add    BYTE PTR [edx+0x19],cl
  40a4e7:	(bad)  
  40a4e9:	(bad)  
  40a4ea:	(bad)  
  40a4eb:	jp     0x40a470
  40a4ed:	pop    eax
  40a4ee:	inc    esp
  40a4ef:	pushf  
  40a4f0:	add    bh,bh
  40a4f2:	dec    DWORD PTR [ecx-0x77]
  40a4f5:	rcr    BYTE PTR [ebx-0x4e],0xff
  40a4f9:	add    bh,bh
  40a4fb:	jae    0xfff1db9a
  40a501:	(bad)  
  40a502:	inc    DWORD PTR [eax-0x1]
  40a505:	sbb    BYTE PTR [ebp+eax*4+0x60000ff],ah
  40a50c:	int3   
  40a50d:	sti    
  40a50e:	jle    0x40a4ad
  40a510:	add    BYTE PTR [ebx-0x6e00c901],al
  40a516:	sbb    al,0x7d
  40a518:	inc    DWORD PTR [eax]
  40a51a:	dec    DWORD PTR [eax-0x1]
  40a51d:	es jnp 0x40a561
  40a520:	cmp    edi,0xffffffff
  40a523:	loopne 0x40a524
  40a525:	mov    dl,0x44
  40a527:	adc    BYTE PTR [eax],al
  40a529:	add    BYTE PTR [ebx+0x57c1cc57],al
  40a52f:	cmp    bh,0x0
  40a532:	jmp    DWORD PTR [edi-0x34]
  40a535:	imul   ecx,eax,0x46
  40a538:	dec    esp
  40a53a:	add    cl,al
  40a53c:	dec    DWORD PTR [ebx-0x1e]
  40a53f:	or     al,0x83
  40a541:	add    DWORD PTR [eax],0xffffffc2
  40a544:	dec    DWORD PTR [edx]
  40a546:	push   ebx
  40a547:	das    
  40a548:	add    bh,bh
  40a54a:	add    BYTE PTR [edx],ch
  40a54c:	push   DWORD PTR [edi-0x67]
  40a54f:	loope  0x40a551
  40a551:	add    DWORD PTR [eax],0xffffff95
  40a554:	push   DWORD PTR [ebp-0x28]
  40a557:	jl     0x40a559
  40a559:	(bad)  
  40a55a:	(bad)  
  40a55b:	aas    
  40a55c:	(bad)  
  40a55d:	jmp    0xc3dc3d
  40a562:	push   DWORD PTR [esi-0x1]
  40a565:	push   edx
  40a566:	mov    cl,BYTE PTR [edi+edi*8]
  40a569:	dec    DWORD PTR [ecx+0xd28ff64]
  40a56f:	out    0x89,al
  40a571:	cmp    edi,0xffffff95
  40a574:	(bad)  
  40a575:	cmp    bl,BYTE PTR [edx+0x6c]
  40a578:	dec    esp
  40a57a:	(bad)  
  40a57b:	cld    
  40a57c:	or     DWORD PTR [esi+0x43],0x30
  40a580:	add    BYTE PTR [eax],al
  40a582:	call   DWORD PTR [edi-0x1]
  40a585:	hlt    
  40a586:	jp     0x40a555
  40a588:	add    bh,bh
  40a58a:	call   FWORD PTR [ebx-0x1]
  40a58d:	les    esp,FWORD PTR [esi]
  40a58f:	inc    esi
  40a590:	(bad)  
  40a591:	inc    DWORD PTR [eax]
  40a593:	jae    0x40a594
  40a595:	daa    
  40a596:	push   edx
  40a597:	push   es
  40a598:	dec    esp
  40a59a:	jmp    DWORD PTR [esi-0x24025500]
  40a5a0:	add    BYTE PTR [eax],al
  40a5a2:	(bad)  
  40a5a3:	mov    edx,0xad0ac600
  40a5a8:	mov    edi,edi
  40a5aa:	add    al,bl
  40a5ac:	mov    eax,esi
  40a5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5af:	jmp    0x40a5b1
  40a5b1:	inc    DWORD PTR [eax]
  40a5b3:	mov    al,BYTE PTR [ebx+0x35c6cb]
  40a5b9:	inc    DWORD PTR [eax]
  40a5bb:	loope  0x40a589
  40a5bd:	or     al,0xdf
  40a5bf:	xor    eax,0x85ff00ff
  40a5c4:	add    ah,bl
  40a5c6:	xchg   ecx,eax
  40a5c7:	mov    bh,0xff
  40a5c9:	inc    DWORD PTR [eax]
  40a5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5cc:	jmp    FWORD PTR [ecx-0x7e]
  40a5cf:	cmp    eax,DWORD PTR [ebx+0x9d0000]
  40a5d5:	fs retf 0xff28
  40a5d9:	(bad)  
  40a5da:	call   DWORD PTR [edi]
  40a5dc:	and    DWORD PTR [esi],0x4
  40a5df:	inc    DWORD PTR ds:[eax]
  40a5e2:	jmp    FWORD PTR ds:0x8ddc7900
  40a5e8:	add    bh,bh
  40a5ea:	call   DWORD PTR [ecx]
  40a5ec:	add    BYTE PTR [esp+ebp*4-0x3300ec],dh
  40a5f3:	jmp    0xffcc:0x9b0d7e00
  40a5fa:	(bad)  
  40a5fb:	jnp    0x40a5fd
  40a5fd:	pop    es
  40a5fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ff:	xor    al,BYTE PTR [eax]
  40a601:	or     esp,0xffffffd3
  40a604:	add    BYTE PTR [eax-0x662b],cl
  40a60a:	call   FWORD PTR [edi+0x0]
  40a60d:	or     eax,0xffff736f
  40a612:	sbb    DWORD PTR [edi],0xffffffff
  40a615:	fidiv  DWORD PTR [eax+edx*8]
  40a618:	add    BYTE PTR [eax],al
  40a61a:	or     eax,0xffffffff
  40a61d:	push   ebx
  40a61e:	out    0x21,al
  40a620:	(bad)  
  40a621:	inc    DWORD PTR [eax]
  40a623:	ins    DWORD PTR es:[edi],dx
  40a624:	add    BYTE PTR [eax+0x25],al
  40a627:	mov    ch,0x89
  40a629:	add    bh,bh
  40a62b:	sub    edi,edi
  40a62d:	je     0x40a666
  40a62f:	arpl   di,di
  40a631:	inc    DWORD PTR [ebx+0x2108ff30]
  40a637:	dec    esi
  40a638:	add    DWORD PTR [ebx-0xd00607d],0xffffffe0
  40a63f:	scas   al,BYTE PTR es:[edi]
  40a640:	add    BYTE PTR [ebx+0x7eff4b89],al
  40a646:	and    dl,BYTE PTR [ecx+0x66cc0000]
  40a64c:	jmp    FWORD PTR [edx-0xfffbbd]
  40a652:	dec    DWORD PTR [ebp-0x23e8100]
  40a658:	add    DWORD PTR [eax],0xffffffff
  40a65b:	sub    edi,edi
  40a65d:	push   ss
  40a65e:	fcomp  DWORD PTR [esi]
  40a660:	or     DWORD PTR [ecx-0x5500b701],0x21
  40a667:	jmp    0x35ff:0x9e008383
  40a66e:	mov    DWORD PTR [esi-0x1],edi
  40a671:	add    ah,cl
  40a673:	repnz int3 
  40a675:	or     ebp,DWORD PTR [ebp-0x33ff003e]
  40a67b:	mov    esi,0x30401583
  40a680:	inc    DWORD PTR [eax]
  40a682:	add    bl,bh
  40a684:	jmp    FWORD PTR [edx]
  40a686:	enter  0xffd7,0xcc
  40a68a:	(bad)  
  40a68b:	cmp    al,0xcc
  40a68d:	sbb    BYTE PTR [esi+0x25],0x89
  40a691:	dec    DWORD PTR [ecx-0x2299766c]
  40a697:	aad    0xff
  40a699:	add    BYTE PTR [eax],al
  40a69b:	push   ds
  40a69c:	jmp    FWORD PTR ds:0xa3e4
  40a6a2:	int3   
  40a6a3:	cld    
  40a6a4:	call   DWORD PTR [eax]
  40a6a6:	pop    ebx
  40a6a7:	cmp    BYTE PTR [eax],al
  40a6a9:	add    bh,bh
  40a6ab:	daa    
  40a6ac:	adc    ebp,0xffffffe8
  40a6af:	rol    BYTE PTR [eax],1
  40a6b1:	(bad)  
  40a6b2:	(bad)  
  40a6b3:	mov    esp,0x3f8f5eff
  40a6b8:	add    bh,bh
  40a6ba:	add    BYTE PTR [edi],dl
  40a6bc:	(bad)  
  40a6bd:	fiadd  DWORD PTR [edx+eax*4-0x1]
  40a6c1:	int3   
  40a6c2:	call   DWORD PTR [edi+0x61158200]
  40a6c8:	inc    DWORD PTR [eax]
  40a6ca:	add    bl,dh
  40a6cc:	jmp    FWORD PTR [edx+ebp*8+0x0]
  40a6d0:	or     DWORD PTR [ecx-0x76ffd500],0x35
  40a6d7:	sti    
  40a6d8:	(bad)  
  40a6d9:	(bad)  
  40a6da:	call   ecx
  40a6dc:	int3   
  40a6dd:	adc    BYTE PTR [edi],ah
  40a6df:	sub    al,BYTE PTR [eax]
  40a6e1:	(bad)  
  40a6e2:	dec    DWORD PTR [ebp-0x565cf901]
  40a6e8:	inc    DWORD PTR [eax]
  40a6ea:	add    BYTE PTR [eax],al
  40a6ec:	int3   
  40a6ed:	sti    
  40a6ee:	scas   eax,DWORD PTR es:[edi]
  40a6ef:	mov    bh,bh
  40a6f1:	(bad)  
  40a6f2:	call   DWORD PTR [ebx-0x1]
  40a6f5:	aad    0xad
  40a6f7:	retf   
  40a6f8:	cmp    edi,0x0
  40a6fb:	mov    ah,0xff
  40a6fd:	mov    ebp,esp
  40a6ff:	mov    dl,0x0
  40a701:	inc    DWORD PTR [ebx+0x2d18ffed]
  40a707:	(bad)  
  40a708:	(bad)  
  40a709:	(bad)  
  40a70a:	call   FWORD PTR [esi-0x1]
  40a70d:	xor    al,0xb9
  40a70f:	mov    edi,?
  40a711:	inc    DWORD PTR [eax]
  40a713:	int    0xff
  40a715:	adc    ebp,DWORD PTR [edi]
  40a717:	add    DWORD PTR [bx+si],0x0
  40a71b:	push   ds
  40a71c:	cmp    DWORD PTR [esi+ecx*8],0x41
  40a720:	add    BYTE PTR [eax],al
  40a722:	and    DWORD PTR [ebx],0x0
  40a725:	push   ds
  40a726:	popf   
  40a727:	jns    0x40a729
  40a729:	or     DWORD PTR [ecx+0x79da008c],0x48
  40a730:	(bad)  
  40a731:	(bad)  
  40a732:	(bad)  
  40a733:	cmp    eax,0x50d8eaff
  40a738:	dec    esp
  40a73a:	add    BYTE PTR [ebx+eax*4],dh
  40a73d:	loopne 0x40a77a
  40a73f:	lock inc DWORD PTR [ebx-0x52763800]
  40a746:	push   DWORD PTR [ecx]
  40a748:	(bad)  
  40a749:	dec    esp
  40a74b:	int3   
  40a74c:	int3   
  40a74d:	out    dx,eax
  40a74e:	or     eax,DWORD PTR [esi]
  40a750:	add    bh,bh
  40a752:	dec    ecx
  40a754:	push   DWORD PTR [eax-0xff7aa8]
  40a75a:	jmp    FWORD PTR [ecx+0x24aedbff]
  40a760:	inc    DWORD PTR [eax]
  40a762:	or     DWORD PTR [ecx-0x7c475601],0x0
  40a769:	(bad)  
  40a76a:	call   FWORD PTR [ecx-0x77]
  40a76d:	jp     0x40a709
  40a76f:	mov    dl,0x0
  40a771:	(bad)  
  40a772:	jmp    edx
  40a774:	call   FWORD PTR [esi+eiz*8]
  40a777:	(bad)  
  40a778:	int3   
  40a779:	mov    edi,edi
  40a77b:	inc    esi
  40a77c:	add    ah,ch
  40a77e:	jo     0x40a7d2
  40a780:	add    BYTE PTR [ebx-0x1d00af00],al
  40a786:	jnp    0x40a7da
  40a788:	(bad)  
  40a789:	inc    DWORD PTR [eax]
  40a78b:	ss int3 
  40a78d:	test   al,0xea
  40a78f:	pop    eax
  40a790:	add    BYTE PTR [eax],al
  40a792:	call   DWORD PTR [eax+0x0]
  40a795:	jmp    0x40a78d
  40a797:	scas   eax,DWORD PTR es:[edi]
  40a798:	int3   
  40a799:	cmp    edi,0x68
  40a79c:	dec    DWORD PTR [edi-0x76000445]
  40a7a2:	sbb    ebp,0xffffff89
  40a7a5:	adc    dh,BYTE PTR [ebx-0x5d]
  40a7a8:	add    bh,bh
  40a7aa:	add    dh,ch
  40a7ac:	add    dh,bh
  40a7ae:	pop    esp
  40a7af:	mov    edx,0x21830000
  40a7b4:	add    edi,0xffffffa3
  40a7b7:	inc    edx
  40a7b8:	(bad)  
  40a7b9:	(bad)  
  40a7ba:	call   FWORD PTR [edi+edi*8-0x33ddbec5]
  40a7c1:	cmp    edi,0x3c
  40a7c4:	int3   
  40a7c5:	mov    ecx,0x898369d4
  40a7ca:	int3   
  40a7cb:	repz (bad) 
  40a7cd:	fistp  QWORD PTR [ecx]
  40a7cf:	or     al,0xff
  40a7d1:	int3   
  40a7d2:	add    BYTE PTR [edi],ah
  40a7d4:	sub    DWORD PTR [edx-0x3c],0x62
  40a7d8:	inc    DWORD PTR [ebx-0x4800df77]
  40a7de:	mov    bh,0x1d
  40a7e0:	add    bh,bh
  40a7e2:	(bad)  
  40a7e3:	call   0xa4dd4c6b
  40a7e8:	cmp    edi,0xffffffff
  40a7eb:	stos   BYTE PTR es:[edi],al
  40a7ec:	(bad)  
  40a7ed:	cli    
  40a7ee:	neg    BYTE PTR [eax+eax*1-0x339b337d]
  40a7f5:	pop    es
  40a7f6:	xor    al,0xac
  40a7f8:	add    BYTE PTR [eax],al
  40a7fa:	mov    DWORD PTR [edi+edi*8],esp
  40a7fd:	rcr    DWORD PTR [ebx-0x45],0xcc
  40a801:	inc    DWORD PTR [ebx-0x7b6a0029]
  40a807:	push   0xb9ff83ff
  40a80c:	add    BYTE PTR [edx-0x59],cl
  40a80f:	push   ebx
  40a810:	add    BYTE PTR [eax],al
  40a812:	call   DWORD PTR [eax+0x0]
  40a815:	mov    ds:0xc5d8,eax
  40a81a:	add    BYTE PTR [eax-0x64e31d7d],ah
  40a820:	(bad)  
  40a821:	(bad)  
  40a822:	call   FWORD PTR [esi]
  40a824:	(bad)  
  40a825:	in     al,dx
  40a826:	push   ebx
  40a828:	inc    DWORD PTR [eax]
  40a82a:	int3   
  40a82b:	daa    
  40a82c:	add    BYTE PTR [ecx-0x52],dl
  40a82f:	jne    0x40a831
  40a831:	inc    DWORD PTR [eax]
  40a833:	jmp    0xcc83:0x7ce5b800
  40a83a:	dec    esi
  40a83c:	inc    ebp
  40a83e:	sub    esi,DWORD PTR [edi+edi*8+0x0]
  40a842:	add    al,ah
  40a844:	jmp    FWORD PTR [edi]
  40a846:	pusha  
  40a847:	fld    DWORD PTR [eax]
  40a849:	add    BYTE PTR [eax],al
  40a84b:	arpl   di,di
  40a84d:	add    BYTE PTR [ecx],bl
  40a84f:	push   0x700083ff
  40a854:	add    BYTE PTR [esi],bh
  40a856:	adc    BYTE PTR [ebx],cl
  40a858:	cmp    edi,0x0
  40a85b:	dec    edi
  40a85c:	dec    DWORD PTR [eax+ecx*1]
  40a85f:	pop    es
  40a860:	add    BYTE PTR [eax],al
  40a862:	int3   
  40a863:	rol    DWORD PTR [ebx-0x4fe18],0x83
  40a86a:	(bad)  
  40a86b:	fmul   QWORD PTR [ecx+0xa800b8]
  40a871:	inc    DWORD PTR [eax]
  40a873:	xchg   ebp,eax
  40a874:	add    BYTE PTR [esi],ch
  40a876:	mov    ds:0xff000022,al
  40a87b:	(bad)  
  40a87d:	addr16 sbb dl,cl
  40a880:	inc    DWORD PTR [eax]
  40a882:	call   DWORD PTR [ecx+0x1f6d85cc]
  40a888:	int3   
  40a889:	inc    DWORD PTR [ebx-0x4eee7672]
  40a88f:	dec    ebx
  40a890:	(bad)  
  40a891:	inc    DWORD PTR [eax]
  40a893:	imul   edi,edi,0xccbcab99
  40a899:	mov    DWORD PTR [ecx+0x4089ff67],ecx
  40a89f:	mov    eax,DWORD PTR [eax]
  40a8a1:	(bad)  
  40a8a2:	push   DWORD PTR [edi+edi*8-0x834ad3]
  40a8a9:	int3   
  40a8aa:	sub    DWORD PTR [esi],0xffffff83
  40a8ad:	js     0x40a891
  40a8af:	out    dx,eax
  40a8b0:	inc    DWORD PTR [eax]
  40a8b2:	jmp    DWORD PTR [ebp-0x34]
  40a8b5:	sbb    al,BYTE PTR [ebx-0x75]
  40a8b8:	add    bh,bh
  40a8ba:	jmp    DWORD PTR [edi+edi*8-0x4b]
  40a8be:	jns    0x40a867
  40a8c0:	(bad)  
  40a8c1:	(bad)  
  40a8c2:	call   DWORD PTR [esi]
  40a8c4:	add    BYTE PTR [edx-0x7c2ce7],ah
  40a8ca:	call   FWORD PTR [ecx-0x2e757c01]
  40a8d0:	(bad)  
  40a8d1:	(bad)  
  40a8d2:	call   FWORD PTR [edi+0x0]
  40a8d5:	pop    ebp
  40a8d6:	test   eax,0x838360
  40a8db:	jo     0x40a8dc
  40a8dd:	nop
  40a8de:	push   esi
  40a8df:	(bad)  
  40a8e1:	add    BYTE PTR [eax],al
  40a8e3:	add    BYTE PTR [ebx+0xdbac00],0xff
  40a8ea:	inc    DWORD PTR [edi+edi*8]
  40a8ed:	jnp    0x40a92a
  40a8ef:	inc    ecx
  40a8f0:	int3   
  40a8f1:	add    bh,bh
  40a8f3:	repnz sbb DWORD PTR [esi-0x767c3524],0xffffffff
  40a8fb:	xchg   ebx,eax
  40a8fc:	(bad)  
  40a8fd:	jnp    0x40a918
  40a8ff:	mov    dh,0x83
  40a901:	dec    esp
  40a903:	int3   
  40a904:	sub    DWORD PTR [ecx-0xff9baa],0x0
  40a90b:	(bad)  
  40a90d:	mov    WORD PTR [edx],cs
  40a90f:	dec    eax
  40a910:	inc    DWORD PTR [ebx+0x3789aaff]
  40a916:	ins    BYTE PTR es:[edi],dx
  40a917:	js     0x40a8e5
  40a919:	add    DWORD PTR [ebx+0x43b700ba],0xffffffb8
  40a920:	or     esp,0xffffffff
  40a923:	xchg   edi,edi
  40a925:	push   esp
  40a926:	outs   dx,BYTE PTR ds:[esi]
  40a927:	adc    edi,edi
  40a929:	inc    DWORD PTR [ebx-0x38af7658]
  40a92f:	sbb    DWORD PTR [ebx-0xce0100],eax
  40a935:	aaa    
  40a936:	jo     0x40a9ad
  40a938:	dec    DWORD PTR [ecx-0x78ff9200]
  40a93e:	jo     0x40a99a
  40a940:	add    BYTE PTR [eax],al
  40a942:	add    BYTE PTR [eax-0x7d],dl
  40a945:	sar    BYTE PTR [edx-0x330097],1
  40a94b:	popa   
  40a94c:	add    BYTE PTR [ecx],bh
  40a94e:	das    
  40a94f:	cmp    edi,edi
  40a951:	(bad)  
  40a952:	call   DWORD PTR [eax-0x1]
  40a955:	shr    DWORD PTR [ecx+0xff40],0x4d
  40a95c:	mov    DWORD PTR [ebp-0x40],ecx
  40a95f:	aam    0x83
  40a961:	add    BYTE PTR [ecx-0x74de003a],cl
  40a967:	mov    ah,cl
  40a969:	mov    DWORD PTR [eax],eax
  40a96b:	mov    eax,DWORD PTR [eax]
  40a96d:	shl    DWORD PTR [esp+eax*2-0x1],0xff
  40a972:	call   FWORD PTR [esi]
  40a974:	add    BYTE PTR [eax+0x38],cl
  40a977:	jno    0x40a8fc
  40a979:	add    bh,bh
  40a97b:	clc    
  40a97c:	add    BYTE PTR [ecx],bh
  40a97e:	ret    0xff35
  40a981:	inc    DWORD PTR [ebx+0x6d1400bd]
  40a987:	xlat   BYTE PTR ds:[ebx]
  40a988:	(bad)  
  40a989:	(bad)  
  40a98a:	jmp    FWORD PTR [esi+0x0]
  40a98d:	xor    BYTE PTR ds:[ebx],dh
  40a990:	(bad)  
  40a991:	(bad)  
  40a992:	(bad)  
  40a993:	mov    edx,0xb2d45ff
  40a998:	add    BYTE PTR [eax],al
  40a99a:	int3   
  40a99b:	push   DWORD PTR ss:[ebx-0x767c6f]
  40a9a2:	adc    DWORD PTR [eax+eax*1],0xffffffc1
  40a9a6:	enter  0x7b,0xff
  40a9aa:	add    BYTE PTR [edi],bh
  40a9ac:	dec    DWORD PTR [edx-0xff71f8]
  40a9b2:	add    BYTE PTR ds:0x7bf3cbcc,ch
  40a9b8:	add    DWORD PTR [ebx-0x1200db77],0xffffffa6
  40a9bf:	mov    cl,0xff
  40a9c1:	dec    esp
  40a9c3:	and    al,0x0
  40a9c5:	sub    BYTE PTR [esi+edx*1-0x7d],bl
  40a9c9:	add    bh,bh
  40a9cb:	xchg   ebp,eax
  40a9cc:	add    BYTE PTR [ebp+edx*1+0x52],bl
  40a9d0:	add    bh,bh
  40a9d2:	jmp    eax
  40a9d4:	mov    DWORD PTR [edx-0x8f62],edx
  40a9da:	mov    DWORD PTR [ebx-0x1d532e01],ebp
  40a9e0:	inc    DWORD PTR [eax]
  40a9e2:	call   DWORD PTR [ebx]
  40a9e4:	call   edi
  40a9e6:	mov    esp,0xff83fffa
  40a9eb:	fwait
  40a9ec:	call   DWORD PTR [edi+ebp*8+0x83ff23]
  40a9f3:	mov    esi,0xa90b2289
  40a9f8:	int3   
  40a9f9:	add    DWORD PTR [eax],0xffffffd9
  40a9fc:	jmp    DWORD PTR [ebx]
  40a9fe:	jmp    0xff35:0xffffffb0
  40aa05:	xor    eax,0xff00a694
  40aa0a:	sbb    DWORD PTR [eax+eax*1+0x30],0xffffff9a
  40aa0f:	or     edi,edi
  40aa11:	add    BYTE PTR [ecx+0x70d40075],cl
  40aa17:	lds    eax,FWORD PTR [ebx-0xadff77]
  40aa1d:	(bad)  [ebp+0xf]
  40aa20:	inc    DWORD PTR [ebx-0x75ff2f00]
  40aa26:	pop    esi
  40aa27:	std    
  40aa28:	add    DWORD PTR [ebx-0x58ff6200],0x15
  40aa2f:	pop    ds
  40aa30:	icebp  
  40aa31:	add    BYTE PTR [ebx],dh
  40aa33:	and    ah,cl
  40aa35:	call   DWORD PTR [ebx+0x0]
  40aa38:	inc    edi
  40aa39:	int3   
  40aa3a:	sub    esp,eax
  40aa3c:	(bad)  
  40aa3d:	dec    DWORD PTR [edx]
  40aa3f:	add    BYTE PTR [eax+eax*1],dl
  40aa42:	add    BYTE PTR [eax+0x0],bl
  40aa45:	call   DWORD PTR ds:0x8a830dff
  40aa4b:	cli    
  40aa4c:	(bad)  
  40aa4d:	dec    DWORD PTR [ebx+0x5d8346ff]
  40aa53:	jns    0x40aa55
  40aa55:	add    BYTE PTR [edi],ch
  40aa57:	push   DWORD PTR [edi+edi*8]
  40aa5a:	sub    eax,DWORD PTR [ecx]
  40aa5c:	(bad)  
  40aa5d:	jmp    FWORD PTR [edi-0x2dff8201]
  40aa63:	scas   eax,DWORD PTR es:[edi]
  40aa64:	add    BYTE PTR [ebx-0x5aff27],al
  40aa6a:	lahf   
  40aa6b:	(bad)  
  40aa6c:	(bad)  
  40aa6d:	jmp    DWORD PTR [ebp-0x5a7c4200]
  40aa73:	and    edi,edi
  40aa75:	jmp    DWORD PTR [edi+edi*8+0x851cc8e]
  40aa7c:	or     DWORD PTR [ecx-0xc73375],0xf
  40aa83:	pusha  
  40aa84:	dec    esp
  40aa86:	sub    DWORD PTR [ebx+0xd6a0049],eax
  40aa8c:	or     esp,0xffffff9f
  40aa8f:	add    BYTE PTR [eax-0x491f7d],bh
  40aa95:	xor    DWORD PTR [ecx-0x34],0xffffffa9
  40aa99:	add    BYTE PTR [edx-0x6bff0065],ah
  40aa9f:	add    BYTE PTR [edi-0x76540100],bl
  40aaa5:	call   DWORD PTR [ecx-0x1]
  40aaa8:	loopne 0x40aaaa
  40aaaa:	cld    
  40aaab:	push   0xfff683ff
  40aab0:	test   al,0xff
  40aab2:	cwde   
  40aab3:	lahf   
  40aab4:	(bad)  
  40aab5:	push   DWORD PTR [edx+0x6d8384ff]
  40aabb:	int    0xff
  40aabd:	(bad)  
  40aabe:	mov    ebp,0xb98327ff
  40aac3:	aas    
  40aac4:	int3   
  40aac5:	call   FWORD PTR [eax+eax*1+0x63aaff29]
  40aacc:	(bad)  
  40aacd:	call   DWORD PTR [ecx+0x0]
  40aad0:	imul   ecx,DWORD PTR [ecx-0x33ffa647],0xffffffc8
  40aad7:	int3   
  40aad8:	dec    ecx
  40aad9:	call   ebx
  40aadb:	test   bh,bh
  40aadd:	call   DWORD PTR [eax-0x2100d400]
  40aae3:	dec    esi
  40aae4:	dec    esp
  40aae6:	push   esi
  40aae7:	add    BYTE PTR [esi],ch
  40aae9:	mov    DWORD PTR ds:0x89ff894f,ecx
  40aaef:	cmp    DWORD PTR [ebx-0x33158200],0x0
  40aaf6:	inc    ebx
  40aaf7:	add    BYTE PTR [edx],dl
  40aaf9:	(bad)  
  40aafa:	jnp    0x40ab34
  40aafc:	inc    DWORD PTR [ebx-0x7cbe33bc]
  40ab02:	outs   dx,DWORD PTR ds:[esi]
  40ab03:	pop    esi
  40ab04:	(bad)  
  40ab05:	(bad)  
  40ab06:	inc    BYTE PTR [eax]
  40ab08:	retf   0xa300
  40ab0b:	dec    esp
  40ab0c:	add    DWORD PTR [ebx-0xc00d9],0x10
  40ab13:	cdq    
  40ab14:	add    BYTE PTR [ebx-0x40ffb4],al
  40ab1a:	fld    TBYTE PTR [edi-0x1ff01]
  40ab20:	(bad)  
  40ab22:	fisttp DWORD PTR [esi+0x0]
  40ab25:	int3   
  40ab26:	ret    
  40ab27:	jmp    DWORD PTR [edx+0x0]
  40ab2a:	dec    esp
  40ab2b:	push   esp
  40ab2c:	add    bh,bh
  40ab2e:	jl     0x40aafc
  40ab30:	add    edi,edi
  40ab32:	lahf   
  40ab33:	lock int3 
  40ab35:	add    bh,bl
  40ab37:	add    BYTE PTR [ecx],bl
  40ab39:	mov    DWORD PTR [edx],edx
  40ab3b:	inc    edx
  40ab3c:	add    BYTE PTR [ebx+0xddcc0e],al
  40ab42:	adc    eax,0x2600ff08
  40ab47:	add    BYTE PTR [ecx-0x763aba01],ah
  40ab4d:	jmp    ebx
  40ab4f:	mov    edi,ecx
  40ab51:	sbb    DWORD PTR [ebx],0xe
  40ab54:	dec    DWORD PTR [ecx-0x9676cc]
  40ab5a:	call   0xc5caaa78
  40ab5f:	add    BYTE PTR [eax+eax*1-0xffb277],ch
  40ab66:	jge    0x40ab68
  40ab68:	sbb    edi,edi
  40ab6a:	outs   dx,DWORD PTR ds:[esi]
  40ab6b:	jmp    0x841eaa70
  40ab70:	add    BYTE PTR es:[edi],al
  40ab73:	add    BYTE PTR [eax],al
  40ab75:	jmp    DWORD PTR [ebx]
  40ab77:	jmp    DWORD PTR [ecx+0x0]
  40ab7a:	aaa    
  40ab7b:	cmp    cl,ah
  40ab7d:	call   DWORD PTR [esi-0x77]
  40ab80:	push   ebx
  40ab81:	add    dh,dl
  40ab83:	or     eax,0x8e00ff
  40ab88:	xor    BYTE PTR [ebx-0x7c08ae],al
  40ab8e:	ins    DWORD PTR es:[edi],dx
  40ab8f:	int3   
  40ab90:	jne    0x40ab15
  40ab92:	jge    0x40ab55
  40ab94:	cmp    edi,0x2f
  40ab97:	jmp    DWORD PTR [eax-0x68977d]
  40ab9d:	(bad)  
  40ab9e:	fld    DWORD PTR [eax]
  40aba0:	jbe    0x40aba2
  40aba2:	sar    DWORD PTR [ebx-0x77],1
  40aba5:	int3   
  40aba6:	in     al,dx
  40aba7:	add    edi,0x0
  40abaa:	sub    bh,BYTE PTR [eax-0x160100]
  40abb0:	cmp    edi,edi
  40abb2:	imul   edi,DWORD PTR [ebp-0x7d],0x689f6ff
  40abb9:	add    BYTE PTR [ebx+0xb],bl
  40abbc:	inc    DWORD PTR [eax]
  40abbe:	mov    bh,0x0
  40abc0:	repnz (bad) 
  40abc2:	out    dx,eax
  40abc3:	iret   
  40abc4:	cmp    edi,0xffffffaf
  40abc7:	jmp    FWORD PTR [edx-0x1]
  40abca:	ror    DWORD PTR [edi+0x588989],1
  40abd0:	push   edi
  40abd1:	push   DWORD PTR [eax]
  40abd3:	adc    bh,bh
  40abd5:	add    BYTE PTR [edi-0x1],bl
  40abd8:	dec    ecx
  40abd9:	add    BYTE PTR [ecx-0x507c7cfd],al
  40abdf:	dec    DWORD PTR ds:0x83800fff
  40abe5:	add    BYTE PTR [ecx],al
  40abe7:	int3   
  40abe8:	adc    eax,0xff99dfcc
  40abed:	push   DWORD PTR [edx-0x300ae77]
  40abf3:	mov    edi,0xffb3cc83
  40abf8:	(bad)  
  40abf9:	call   FWORD PTR [edi]
  40abfb:	into   
  40abfc:	inc    DWORD PTR [eax]
  40abfe:	cmp    al,0xff
  40ac00:	imul   ecx,DWORD PTR [ecx+0xcc4c34],0xffd5ccfc
  40ac0a:	das    
  40ac0b:	(bad)  
  40ac0c:	add    BYTE PTR [ebx-0xe400a4],al
  40ac12:	inc    ebx
  40ac13:	mov    bl,0xff
  40ac15:	add    BYTE PTR [edx-0x1],cl
  40ac18:	push   edi
  40ac19:	add    BYTE PTR [edi],cl
  40ac1b:	xor    cl,BYTE PTR [ecx+0x2f837200]
  40ac21:	jmp    FWORD PTR [ebp+ecx*1-0x7cce0001]
  40ac28:	add    edi,edi
  40ac2a:	enter  0xff79,0x0
  40ac2e:	jns    0x40ac2f
  40ac30:	sub    al,0xcc
  40ac32:	ds adc al,0x83
  40ac35:	(bad)  
  40ac36:	jge    0x40ac04
  40ac38:	cmp    eax,0xff94feff
  40ac3d:	call   FWORD PTR [ebx-0x1]
  40ac40:	inc    edx
  40ac41:	call   DWORD PTR [ebx+0x58]
  40ac44:	cmp    edi,0xffffffc8
  40ac47:	add    BYTE PTR [edi+edi*8+0x8aff],dl
  40ac4e:	push   ebx
  40ac4f:	(bad)  
  40ac50:	sti    
  40ac51:	call   FWORD PTR [eax]
  40ac53:	sbb    eax,0x5b8383
  40ac58:	ja     0x40abdd
  40ac5a:	jmp    0x4dff:0xefffff59
  40ac61:	jmp    FWORD PTR [edx-0x727c33ea]
  40ac67:	sub    DWORD PTR [esi-0x7c486600],0xffffffcc
  40ac6e:	jg     0x40abf3
  40ac70:	mov    al,ds:0xec9c00
  40ac75:	add    bh,dh
  40ac77:	add    dh,bl
  40ac79:	sub    DWORD PTR [edi+0x1f00ff5f],0xffffffff
  40ac80:	sbb    al,0x83
  40ac82:	lahf   
  40ac83:	clc    
  40ac84:	add    BYTE PTR [eax],al
  40ac86:	ud0    ebp,DWORD PTR [edi-0x7d]
  40ac8a:	push   cs
  40ac8b:	mov    dh,0x0
  40ac8d:	add    BYTE PTR [ebx-0x1],dl
  40ac90:	jnp    0x40ac91
  40ac92:	test   al,0xea
  40ac94:	add    bh,bh
  40ac96:	jp     0x40ac97
  40ac98:	add    DWORD PTR [ebx+0xffd47d],0xffffff9b
  40ac9f:	inc    DWORD PTR [ebx-0x1]
  40aca2:	(bad)  
  40aca3:	mov    edi,0xff82ff83
  40aca8:	jo     0x40aca9
  40acaa:	fst    QWORD PTR [ecx-0x7630007d]
  40acb0:	jno    0x40ac3b
  40acb2:	fs js  0x40ac38
  40acb5:	int3   
  40acb6:	lds    eax,FWORD PTR [eax]
  40acb8:	and    al,0x0
  40acba:	jo     0x40ac3c
  40acbc:	cmp    edi,0xffffffbe
  40acbf:	add    al,bh
  40acc1:	call   FWORD PTR [esi]
  40acc3:	je     0x40acc4
  40acc5:	add    ch,bh
  40acc7:	mov    DWORD PTR [edx-0x1],edi
  40acca:	loope  0x40ad44
  40accc:	add    BYTE PTR [ebx-0x76c1ffca],al
  40acd2:	jns    0x40ad4c
  40acd4:	inc    DWORD PTR [ebx-0xa0008c]
  40acda:	xor    al,BYTE PTR ds:0x83a000ff
  40ace0:	xchg   edi,edi
  40ace2:	sub    esp,DWORD PTR [edx]
  40ace4:	inc    DWORD PTR [ebx-0xd900db]
  40acea:	mov    BYTE PTR [edi],al
  40acec:	add    BYTE PTR [eax],al
  40acee:	sub    al,BYTE PTR [eax]
  40acf0:	bound  eax,QWORD PTR [eax]
  40acf2:	adc    eax,0xec00001c
  40acf7:	add    BYTE PTR [eax+eax*1],dh
  40acfa:	test   al,0x15
  40acfc:	add    BYTE PTR [ebx-0x9bffa0],al
  40ad02:	xor    al,0x68
  40ad04:	inc    DWORD PTR [eax]
  40ad06:	jbe    0x40ac91
  40ad08:	iret   
  40ad09:	mov    DWORD PTR [ecx],ebx
  40ad0b:	adc    bh,bh
  40ad0d:	(bad)  
  40ad0e:	fld    DWORD PTR [eax]
  40ad10:	jg     0x40ac95
  40ad12:	sar    BYTE PTR [edx-0x60ff7d],0x3e
  40ad19:	call   DWORD PTR [ebx]
  40ad1b:	mov    eax,0x893400ff
  40ad20:	xlat   BYTE PTR ds:[ebx]
  40ad21:	add    BYTE PTR [ebp-0x6c],ah
  40ad24:	add    DWORD PTR [eax],0xffffff9c
  40ad27:	and    DWORD PTR ds:0xffab89ff,0xffffffff
  40ad2e:	in     eax,0xff
  40ad30:	sahf   
  40ad31:	int3   
  40ad32:	arpl   WORD PTR [edi+0xa4ffff],bx
  40ad38:	loop   0x40ad06
  40ad3a:	pushf  
  40ad3b:	jmp    0xccdd:0xff77ff00
  40ad42:	mov    al,bl
  40ad44:	add    DWORD PTR [ebx-0x764400fd],0xffffffd6
  40ad4b:	mov    cl,0x0
  40ad4d:	call   eax
  40ad4f:	call   DWORD PTR [eax+eax*1-0x65]
  40ad53:	or     DWORD PTR [eax],eax
  40ad55:	add    BYTE PTR [ebp-0x7d],dl
  40ad58:	cmp    al,BYTE PTR [ebx-0xfff941]
  40ad5e:	mov    esp,0x64000c00
  40ad63:	sti    
  40ad64:	add    BYTE PTR [eax],al
  40ad66:	mov    esi,0x65ff2100
  40ad6b:	cwde   
  40ad6c:	cmp    edi,0xffffff8f
  40ad6f:	push   DWORD PTR [ebp-0x7d]
  40ad72:	pushf  
  40ad73:	jo     0x40ad75
  40ad75:	push   DWORD PTR [edx]
  40ad77:	add    cl,ch
  40ad79:	jmp    eax
  40ad7b:	jmp    0xff48ad80
  40ad80:	add    bh,bh
  40ad82:	xor    DWORD PTR [edx+0x0],ebx
  40ad85:	sub    DWORD PTR [edx+0x0],0x30
  40ad89:	call   FWORD PTR [ebp+0x5cff0022]
  40ad8f:	add    BYTE PTR [ebx+eax*4-0x38],bh
  40ad93:	mov    eax,0xbcff89
  40ad98:	push   esp
  40ad99:	or     DWORD PTR [edx-0x3600ff7e],0xffffffff
  40ada0:	out    dx,eax
  40ada1:	jmp    FWORD PTR [edi+0x6cffff76]
  40ada7:	int3   
  40ada8:	mov    eax,0xfff99000
  40adad:	add    BYTE PTR [ecx+ecx*4],dl
  40adb0:	js     0x40ad35
  40adb2:	inc    eax
  40adb3:	mov    esi,0xffa483ff
  40adb8:	or     al,BYTE PTR [eax]
  40adba:	out    0x9c,eax
  40adbc:	cmp    edi,0x28
  40adbf:	xor    DWORD PTR [ebx],0xffffffff
  40adc2:	xlat   BYTE PTR ds:[ebx]
  40adc3:	ud0    eax,DWORD PTR [eax]
  40adc6:	(bad)  
  40adc7:	call   esi
  40adc9:	add    BYTE PTR [eax+esi*4-0x33bd3301],cl
  40add0:	aam    0x89
  40add2:	div    dl
  40add4:	cmp    edi,0xffffff9e
  40add7:	cmp    DWORD PTR [ebp-0xab6d7d],0xffffffff
  40adde:	push   edi
  40addf:	(bad)  
  40ade0:	(bad)  
  40ade2:	fsubr  DWORD PTR [ecx]
  40ade4:	cmp    edi,0xffffff9b
  40ade7:	int3   
  40ade8:	and    edi,edi
  40adea:	and    BYTE PTR [ebx-0x767d0001],bl
  40adf0:	arpl   WORD PTR [ebx-0x7c00dc75],ax
  40adf6:	bound  eax,QWORD PTR [eax]
  40adf8:	iret   
  40adf9:	inc    DWORD PTR [esi+0x6]
  40adfc:	dec    esp
  40adfe:	outs   dx,DWORD PTR ds:[esi]
  40adff:	cmp    esi,0xffffffff
  40ae02:	dec    edx
  40ae03:	je     0x40ae04
  40ae05:	add    BYTE PTR [eax+eax*1],dh
  40ae08:	scas   al,BYTE PTR es:[edi]
  40ae09:	cmp    DWORD PTR ds:0x9bff00a0,0xffffffff
  40ae10:	sahf   
  40ae11:	add    BYTE PTR [esi-0x41],al
  40ae14:	(bad)  
  40ae15:	inc    DWORD PTR [eax+eax*1-0x24d4fffc]
  40ae1c:	mov    DWORD PTR [eax],eax
  40ae1e:	and    eax,0x8500b889
  40ae23:	aas    
  40ae24:	add    ah,cl
  40ae26:	dec    esp
  40ae27:	add    bl,cl
  40ae29:	mov    esi,edx
  40ae2b:	int3   
  40ae2c:	add    BYTE PTR [eax],al
  40ae2e:	fwait
  40ae2f:	add    DWORD PTR [edi+edi*8+0x39],0x11
  40ae34:	add    DWORD PTR [eax],0x67
  40ae37:	add    BYTE PTR [edx-0xbcee34],cl
  40ae3d:	dec    edx
  40ae3f:	push   DWORD PTR [ebx-0x1]
  40ae42:	push   edx
  40ae43:	aaa    
  40ae44:	add    bh,bh
  40ae46:	or     ah,0x4d
  40ae49:	push   edx
  40ae4b:	and    eax,0x89c18389
  40ae50:	aad    0xcc
  40ae52:	cmp    al,0xbd
  40ae54:	cmp    edi,0xffffffde
  40ae57:	add    BYTE PTR [ecx-0x7d],ch
  40ae5a:	retf   
  40ae5b:	aad    0xff
  40ae5d:	jmp    DWORD PTR [eax]
  40ae5f:	(bad)  
  40ae60:	cmp    bh,bh
  40ae62:	(bad)  
  40ae63:	fisttp QWORD PTR [ecx+0x2001289]
  40ae69:	dec    DWORD PTR [ebp-0x55]
  40ae6c:	int3   
  40ae6d:	push   ebp
  40ae6f:	jmp    eax
  40ae71:	jmp    ebp
  40ae73:	cmp    al,0xff
  40ae75:	int3   
  40ae76:	je     0x40ae78
  40ae78:	and    bh,bh
  40ae7a:	pusha  
  40ae7b:	dec    edi
  40ae7c:	(bad)  
  40ae7d:	(bad)  
  40ae7e:	cmp    al,0xff
  40ae80:	iret   
  40ae81:	int3   
  40ae82:	stos   DWORD PTR es:[edi],eax
  40ae83:	xor    edi,edi
  40ae85:	add    BYTE PTR [eax+0x0],ah
  40ae88:	and    al,0x0
  40ae8a:	xchg   edi,eax
  40ae8b:	mov    DWORD PTR [ebx-0x14ff9f77],eax
  40ae91:	add    BYTE PTR [ecx],bl
  40ae93:	dec    ebx
  40ae94:	add    DWORD PTR [eax],0x23
  40ae97:	or     DWORD PTR [ecx+0x0],0x20
  40ae9b:	inc    esp
  40ae9c:	inc    DWORD PTR [eax]
  40ae9e:	into   
  40ae9f:	call   FWORD PTR [edx-0x2cde01]
  40aea5:	adc    ebx,0xffffffff
  40aea8:	call   0xac83:0x83e90100
  40aeaf:	sbb    DWORD PTR [edx+0x0],0xffffffd8
  40aeb3:	dec    eax
  40aeb4:	add    bh,bh
  40aeb6:	loopne 0x40aeb8
  40aeb8:	arpl   WORD PTR [eax],ax
  40aeba:	jae    0x40aeb2
  40aebc:	(bad)  
  40aebd:	jmp    FWORD PTR [ebp+0x59ff10ff]
  40aec3:	xchg   ebp,eax
  40aec4:	add    ah,cl
  40aec6:	push   0x62001589
  40aecb:	sbb    ah,cl
  40aecd:	cmp    DWORD PTR [ebx+0x0],0xffffffa7
  40aed1:	adc    DWORD PTR [esi+ebx*2-0x34],0x0
  40aed6:	jno    0x40aed7
  40aed8:	cmp    al,0xff
  40aeda:	push   esp
  40aedb:	sbb    bh,bh
  40aedd:	add    BYTE PTR [esi],ah
  40aedf:	add    BYTE PTR [ecx-0x649e7d],ah
  40aee5:	int3   
  40aee6:	(bad)  
  40aee7:	dec    DWORD PTR [esi]
  40aee9:	inc    DWORD PTR [ecx]
  40aeeb:	cdq    
  40aeec:	mov    edi,edi
  40aeee:	and    DWORD PTR [bp+di-0x1],0xffffff90
  40aef3:	inc    WORD PTR [eax]
  40aef6:	mov    ecx,0xedffd689
  40aefb:	cli    
  40aefc:	(bad)  
  40aefd:	inc    DWORD PTR [edi]
  40aeff:	push   DWORD PTR [eax-0x7d]
  40af02:	dec    ebp
  40af03:	(bad)  
  40af04:	mov    edi,edi
  40af06:	lods   al,BYTE PTR ds:[esi]
  40af07:	add    al,bl
  40af09:	or     DWORD PTR [eax-0x40000a5],0xffffffff
  40af10:	add    DWORD PTR [eax],0xff83aca8
  40af16:	add    eax,DWORD PTR [eax]
  40af18:	jno    0x40ae9d
  40af1a:	xchg   edi,eax
  40af1b:	mov    ds:0xff1500cc,al
  40af20:	push   0xffffffff
  40af22:	cmc    
  40af23:	or     eax,0xff6fff00
  40af28:	scas   al,BYTE PTR es:[edi]
  40af29:	jmp    DWORD PTR [esp+eiz*8-0x1]
  40af2d:	add    BYTE PTR [eax],cl
  40af2f:	int3   
  40af30:	mov    bl,0xff
  40af32:	inc    esi
  40af33:	es (bad) 
  40af35:	call   DWORD PTR [ecx]
  40af37:	add    BYTE PTR [ebp-0x34],dl
  40af3a:	or     ebp,eax
  40af3c:	add    BYTE PTR [ecx-0x76990003],cl
  40af42:	xchg   ebp,eax
  40af43:	inc    edx
  40af44:	inc    DWORD PTR [eax]
  40af46:	dec    ebx
  40af47:	sub    DWORD PTR [edx-0x33d6ac01],0xffffffff
  40af4e:	jle    0x40af50
  40af50:	mov    bh,bh
  40af52:	into   
  40af53:	mov    bh,0xff
  40af55:	int3   
  40af56:	xchg   DWORD PTR [ecx-0x568affc0],ecx
  40af5c:	or     esp,0xffffffd6
  40af5f:	add    BYTE PTR [esi+0x0],ch
  40af62:	mov    bl,0x68
  40af64:	add    BYTE PTR [eax],al
  40af66:	fwait
  40af67:	(bad)  
  40af68:	in     al,dx
  40af69:	add    dl,ah
  40af6b:	jae    0x40aef6
  40af6d:	inc    DWORD PTR [eax+0x51ff0200]
  40af73:	out    dx,al
  40af74:	add    BYTE PTR [ebx-0xe1ff9b],al
  40af7a:	hlt    
  40af7b:	iret   
  40af7c:	inc    DWORD PTR [ebx+0xd7ffe4]
  40af82:	push   edx
  40af83:	pop    ss
  40af84:	int3   
  40af85:	int3   
  40af86:	test   edi,edi
  40af88:	fmul   st(4),st
  40af8a:	aaa    
  40af8b:	int3   
  40af8c:	(bad)  
  40af8d:	call   FWORD PTR ds:0x83cc34ff
  40af93:	rol    DWORD PTR [eax],1
  40af95:	(bad)  
  40af96:	mov    edi,0xfcff8e00
  40af9b:	adc    eax,0xff740000
  40afa0:	mov    dl,0xff
  40afa2:	mov    al,0x57
  40afa4:	add    DWORD PTR [ebx-0x3338ff9a],0xffffffc5
  40afab:	(bad)  
  40afac:	(bad)  
  40afad:	call   FWORD PTR [ecx+0x0]
  40afb0:	cmc    
  40afb1:	int3   
  40afb2:	(bad)  
  40afb3:	(bad)  
  40afb4:	(bad)  
  40afb5:	(bad)  
  40afb6:	cmp    eax,0x80836800
  40afbb:	mov    ebp,0xffa3ffff
  40afc0:	mov    WORD PTR [ecx-0xff12ce],cs
  40afc6:	stos   DWORD PTR es:[edi],eax
  40afc7:	jmp    ebp
  40afc9:	add    BYTE PTR [ebp-0x7a000093],dl
  40afcf:	(bad)  
  40afd0:	(bad)  
  40afd2:	add    bl,BYTE PTR [ebx+0x6bff00]
  40afd8:	jp     0x40afd9
  40afda:	sbb    BYTE PTR [eax],0xff
  40afdd:	add    al,cl
  40afdf:	add    cl,ah
  40afe1:	add    BYTE PTR [ebp+0x64],dh
  40afe4:	mov    edi,edi
  40afe6:	mov    ah,0x83
  40afe8:	cwde   
  40afe9:	mov    DWORD PTR [esi-0x7e],ebx
  40afec:	add    bh,bh
  40afee:	or     eax,0xe989cf89
  40aff3:	inc    eax
  40aff4:	inc    DWORD PTR [eax]
  40aff6:	cmp    cl,ah
  40aff8:	ud0    edx,DWORD PTR [edi+0x13ffcc6d]
  40afff:	inc    DWORD PTR [esi]
  40b001:	jmp    FWORD PTR [esi+0x49]
  40b004:	inc    DWORD PTR [eax]
  40b006:	jae    0x40b008
  40b008:	call   0xf4ff:0x83595f89
  40b00f:	sub    ebp,0x0
  40b012:	retf   
  40b013:	(bad)  
  40b015:	push   DWORD PTR [edi+edi*8]
  40b018:	dec    ebx
  40b019:	adc    DWORD PTR [edx-0x27],0xffffffcc
  40b01d:	call   DWORD PTR [eax+eax*1-0x48]
  40b021:	or     DWORD PTR ds:0x100005d,0xffffffcc
  40b028:	aad    0xff
  40b02a:	and    ecx,ebp
  40b02c:	add    BYTE PTR [eax],al
  40b02e:	out    dx,eax
  40b02f:	adc    esi,0xffffffff
  40b032:	add    al,0xab
  40b034:	add    BYTE PTR [ecx-0x76547cc0],cl
  40b03a:	mov    bh,0x48
  40b03c:	inc    DWORD PTR [eax]
  40b03e:	xchg   edi,edi
  40b040:	sub    edi,edi
  40b042:	cmp    esi,DWORD PTR [esi]
  40b044:	inc    DWORD PTR [eax]
  40b046:	dec    esi
  40b047:	jmp    FWORD PTR [edi+edi*8]
  40b04a:	cli    
  40b04b:	jno    0x40b04c
  40b04d:	jmp    FWORD PTR [edx]
  40b04f:	jmp    edi
  40b051:	(bad)  
  40b052:	(bad)  
  40b053:	jmp    0xcc62b157
  40b058:	in     eax,dx
  40b059:	call   FWORD PTR [ebx+0x25]
  40b05c:	(bad)  
  40b05d:	push   DWORD PTR [ebx]
  40b05f:	add    BYTE PTR [edi-0x1],dl
  40b062:	mov    cl,0x28
  40b064:	mov    esp,ecx
  40b066:	stc    
  40b067:	add    BYTE PTR [eax+0x0],bl
  40b06a:	push   esp
  40b06b:	pop    ebp
  40b06c:	dec    DWORD PTR [ecx-0x5cff5e]
  40b072:	cmp    eax,0x67ff8381
  40b077:	add    al,cl
  40b079:	add    BYTE PTR ds:0x69ffff4a,ah
  40b07f:	add    bl,dl
  40b081:	inc    DWORD PTR [eax-0x7b]
  40b084:	add    bh,bh
  40b086:	dec    edx
  40b087:	jmp    FWORD PTR [ecx+0x832e00]
  40b08d:	mov    edi,ebp
  40b08f:	add    bh,ah
  40b091:	jmp    DWORD PTR [edx+0x6a00ff41]
  40b097:	int3   
  40b098:	aas    
  40b099:	add    DWORD PTR [edx+0x3c8983e4],0xffffffff
  40b0a0:	cmp    esp,ecx
  40b0a2:	cmp    al,BYTE PTR [ecx+ecx*4]
  40b0a5:	dec    ebx
  40b0a7:	dec    DWORD PTR [esi-0x1]
  40b0aa:	and    ebp,esp
  40b0ac:	(bad)  
  40b0ad:	jmp    FWORD PTR [edi+edi*8]
  40b0b0:	push   ss
  40b0b1:	mov    DWORD PTR [ebp-0x55000000],edx
  40b0b7:	inc    DWORD PTR [esi-0x7d]
  40b0ba:	push   edi
  40b0bb:	dec    ecx
  40b0bc:	add    DWORD PTR [eax],0xffffffc4
  40b0bf:	dec    ebp
  40b0c1:	add    BYTE PTR [edx+0x5],bl
  40b0c4:	add    ah,cl
  40b0c6:	(bad)  
  40b0c7:	dec    DWORD PTR [edi-0x1]
  40b0ca:	jno    0x40b0e9
  40b0cc:	add    bh,bh
  40b0ce:	fadd   QWORD PTR [ebx+0x1d3f0089]
  40b0d4:	add    BYTE PTR [ebx+0x70ffec],al
  40b0da:	xlat   BYTE PTR ds:[ebx]
  40b0db:	lods   al,BYTE PTR ds:[esi]
  40b0dc:	or     DWORD PTR [ecx-0x76520019],0xffffffab
  40b0e3:	(bad)  
  40b0e5:	int3   
  40b0e6:	lods   al,BYTE PTR ds:[esi]
  40b0e7:	int3   
  40b0e8:	aam    0x0
  40b0ea:	(bad)  
  40b0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0ec:	inc    DWORD PTR [eax]
  40b0ee:	mov    ebx,0xe583d4cc
  40b0f3:	cld    
  40b0f4:	int3   
  40b0f5:	push   DWORD PTR [edi+0x100a600]
  40b0fb:	addr16 int3 
  40b0fd:	inc    DWORD PTR [eax+0x44ffe1ff]
  40b103:	cmc    
  40b104:	add    BYTE PTR [eax],al
  40b106:	cld    
  40b107:	add    BYTE PTR [edx-0x3334bc01],bl
  40b10d:	(bad)  
  40b10e:	stc    
  40b10f:	add    BYTE PTR [edi],bl
  40b111:	(bad)  
  40b112:	(bad)  
  40b114:	add    BYTE PTR [eax],al
  40b116:	fwait
  40b117:	add    ch,dh
  40b119:	add    bh,bl
  40b11b:	cmc    
  40b11c:	cmp    edi,0xffffffc3
  40b11f:	add    BYTE PTR [edx],ch
  40b121:	(bad)  
  40b122:	cld    
  40b123:	pop    ebx
  40b124:	cmp    edi,0xfffffff2
  40b127:	int3   
  40b128:	mov    ebp,0x703000
  40b12d:	add    BYTE PTR [eax-0x34],dl
  40b130:	call   DWORD PTR cs:[esi]
  40b133:	inc    BYTE PTR [eax]
  40b135:	add    bl,al
  40b137:	add    BYTE PTR [ebp-0xfa5f34],ah
  40b13d:	jmp    DWORD PTR [edx+0x45ffc489]
  40b143:	and    eax,0xffa4ffff
  40b148:	aad    0xff
  40b14a:	jmp    0xc040b166
  40b14f:	adc    DWORD PTR ds:0x1b5c00,0x0
  40b156:	add    eax,DWORD PTR [ebx+0x870898d]
  40b15c:	(bad)  
  40b15d:	jmp    DWORD PTR [edi+edi*8]
  40b160:	mov    bh,0xff
  40b162:	test   al,0x24
  40b164:	cmp    edi,0x9
  40b167:	and    DWORD PTR [eax+0x381fff],0xffffff83
  40b16e:	(bad)  
  40b170:	cmp    bh,0xaf
  40b173:	test   edi,edi
  40b175:	add    BYTE PTR [edi+0x46fffe00],bh
  40b17b:	icebp  
  40b17c:	add    bh,bh
  40b17e:	xchg   DWORD PTR [eax],eax
  40b180:	clc    
  40b181:	add    DWORD PTR [ebx+0x3fff0066],0x0
  40b188:	pop    edx
  40b189:	xor    DWORD PTR [esi+0x50083ab],0xffffffff
  40b190:	mov    bh,bh
  40b192:	ds and edi,edi
  40b195:	mov    DWORD PTR [esi-0x3600947d],ebp
  40b19b:	out    0xff,al
  40b19d:	jmp    DWORD PTR [edi+edi*8+0x2ad6009d]
  40b1a4:	(bad)  
  40b1a5:	call   DWORD PTR [esi]
  40b1a7:	add    bh,bh
  40b1a9:	cmp    ecx,0xffffff85
  40b1ac:	inc    DWORD PTR [ebx-0x26ff3d]
  40b1b2:	or     al,0xbe
  40b1b4:	int3   
  40b1b5:	dec    DWORD PTR [ebp-0x6bff0d01]
  40b1bb:	rol    DWORD PTR [eax],cl
  40b1bd:	add    BYTE PTR [esi],dh
  40b1bf:	cmp    DWORD PTR [eax-0x7c2a4c7d],0xffffffff
  40b1c6:	pop    edx
  40b1c7:	inc    ebp
  40b1c9:	add    BYTE PTR [ebp+0x60ffff35],bh
  40b1cf:	push   DWORD PTR [edi]
  40b1d1:	jmp    DWORD PTR ds:0x73ffffe5
  40b1d7:	int3   
  40b1d8:	sbb    al,0xcc
  40b1da:	arpl   WORD PTR [edi+edi*8+0x65ffa200],si
  40b1e1:	add    BYTE PTR [edx-0x1d],ah
  40b1e4:	inc    DWORD PTR [ebx-0x86ffe6]
  40b1ea:	xlat   BYTE PTR ds:[ebx]
  40b1eb:	outs   dx,DWORD PTR ds:[esi]
  40b1ec:	int3   
  40b1ed:	dec    DWORD PTR [ecx-0x35ffed01]
  40b1f3:	cwde   
  40b1f4:	inc    DWORD PTR [ebx-0xcf7c05]
  40b1fa:	and    dh,ch
  40b1fc:	cmp    edi,0x16
  40b1ff:	add    dh,dh
  40b201:	inc    edi
  40b203:	xchg   ebp,eax
  40b204:	(bad)  
  40b205:	(bad)  
  40b206:	(bad)  
  40b208:	xor    bh,bh
  40b20a:	int    0xd7
  40b20c:	(bad)  
  40b20d:	jmp    FWORD PTR [edx-0x77ffd200]
  40b213:	test   bh,bh
  40b215:	jmp    FWORD PTR [esi-0x1]
  40b218:	pop    ecx
  40b219:	(bad)  
  40b21a:	ficomp DWORD PTR [ebx-0x76ca3301]
  40b220:	jp     0x40b1a5
  40b222:	dec    ebp
  40b223:	mov    bl,0x89
  40b225:	and    DWORD PTR [ecx+0x10001acc],0x6c
  40b22c:	(bad)  
  40b22d:	inc    DWORD PTR [ecx-0x7d]
  40b230:	das    
  40b231:	add    BYTE PTR [edx-0xf007c77],ch
  40b237:	call   FWORD PTR [esi]
  40b239:	sub    DWORD PTR [eax+0x48],0x0
  40b23d:	jmp    FWORD PTR [edi+0x74ffe7ff]
  40b243:	in     al,dx
  40b244:	add    BYTE PTR [eax],al
  40b246:	outs   dx,DWORD PTR ds:[esi]
  40b247:	add    BYTE PTR [esp+ecx*8],dl
  40b24a:	mov    ebp,0xff00ffe8
  40b24f:	(bad)  
  40b250:	cmp    al,BYTE PTR [eax]
  40b252:	clc    
  40b253:	mov    eax,0x25ff00
  40b258:	sub    edi,edi
  40b25a:	xor    BYTE PTR [edi+0x0],ch
  40b25d:	call   FWORD PTR [edx-0x6c003c01]
  40b263:	add    al,BYTE PTR [eax]
  40b265:	mov    DWORD PTR [esi+0x0],ebp
  40b268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b269:	int3   
  40b26a:	test   al,0x31
  40b26c:	(bad)  
  40b26d:	inc    DWORD PTR [ecx]
  40b26f:	and    DWORD PTR [edi-0x34],0xffffffd1
  40b273:	mov    ebp,0xcc6bffff
  40b278:	outs   dx,DWORD PTR ds:[esi]
  40b279:	jmp    FWORD PTR [ebp+0x79ffff05]
  40b27f:	mov    esi,ebp
  40b281:	adc    DWORD PTR [edi],0xffffffb6
  40b284:	mov    edi,edi
  40b286:	outs   dx,DWORD PTR ds:[esi]
  40b287:	push   ebp
  40b289:	inc    DWORD PTR [ebp+esi*4+0x5bff89]
  40b290:	popf   
  40b291:	add    ah,dh
  40b293:	mov    dl,0xcc
  40b295:	call   FWORD PTR [eax-0x73002600]
  40b29b:	cmc    
  40b29c:	mov    DWORD PTR [ecx-0xed0005],ecx
  40b2a2:	cmp    edi,ecx
  40b2a4:	(bad)  
  40b2a5:	dec    DWORD PTR [eax]
  40b2a7:	call   FWORD PTR [esi]
  40b2a9:	push   DWORD PTR [edi-0x32]
  40b2ac:	int3   
  40b2ad:	add    BYTE PTR [edi-0x77],bh
  40b2b0:	xchg   esi,eax
  40b2b1:	and    eax,0xe
  40b2b4:	inc    DWORD PTR [eax]
  40b2b6:	enter  0xb2cc,0x0
  40b2ba:	xor    DWORD PTR [ebx+0x0],esi
  40b2bd:	cmp    edi,0xffffff83
  40b2c0:	jl     0x40b2c1
  40b2c2:	retf   0xccba
  40b2c5:	push   DWORD PTR [eax-0x7d]
  40b2c8:	in     al,dx
  40b2c9:	add    BYTE PTR ds:0xe9ff83a1,bh
  40b2cf:	add    BYTE PTR [ecx+0xb93800],dh
  40b2d5:	add    BYTE PTR [edx],cl
  40b2d7:	mov    DWORD PTR [eax-0x9dcb01],ecx
  40b2dd:	add    BYTE PTR [edx-0x7d],ah
  40b2e0:	ret    
  40b2e1:	add    BYTE PTR [ebp+eiz*2-0x1],bh
  40b2e5:	cmp    DWORD PTR [edx-0x63338701],0xffffffea
  40b2ec:	inc    DWORD PTR [ebx-0x7c6800e2]
  40b2f2:	scas   al,BYTE PTR es:[edi]
  40b2f3:	repnz inc DWORD PTR [ebx-0x7cff2b]
  40b2fa:	loope  0x40b33e
  40b2fc:	add    bh,bh
  40b2fe:	and    al,0x0
  40b300:	imul   edi,edi,0x83009759
  40b306:	mov    cl,0xcc
  40b308:	int    0x83
  40b30a:	mov    ah,0x1
  40b30c:	(bad)  
  40b30d:	push   DWORD PTR [ebx-0x77]
  40b310:	inc    DWORD PTR fs:[edx-0x4affff7d]
  40b317:	add    BYTE PTR [ecx-0x7d3000],al
  40b31d:	(bad)  
  40b31e:	mov    esp,0x37ff14ff
  40b323:	daa    
  40b324:	add    BYTE PTR [eax],al
  40b326:	jp     0x40b328
  40b328:	cld    
  40b329:	add    BYTE PTR [eax-0xd],dl
  40b32c:	(bad)  
  40b32d:	push   DWORD PTR [ecx+0x1600d8ff]
  40b333:	or     eax,DWORD PTR [eax]
  40b335:	dec    DWORD PTR [esi]
  40b337:	inc    DWORD PTR [edi+0x77c183]
  40b33d:	add    BYTE PTR [ebx-0x1],bl
  40b340:	das    
  40b341:	(bad)  
  40b342:	mov    eax,0x283005d
  40b347:	jmp    FWORD PTR [eax+0xbf6dcc]
  40b34d:	jmp    FWORD PTR [edx]
  40b34f:	add    BYTE PTR [ebx+0x0],dh
  40b352:	jns    0x40b34c
  40b354:	add    BYTE PTR [eax],al
  40b356:	sar    edi,cl
  40b358:	outs   dx,DWORD PTR ds:[esi]
  40b359:	call   DWORD PTR [edi+edx*8-0x77]
  40b35d:	and    DWORD PTR [ebp-0x46fffe00],0xffffffa3
  40b364:	int3   
  40b365:	add    BYTE PTR [eax],bl
  40b367:	call   FWORD PTR [edi-0x3312427d]
  40b36d:	mov    DWORD PTR [edx-0x2d009a01],eax
  40b373:	jp     0x40b375
  40b375:	call   DWORD PTR [edx-0x1]
  40b378:	lock call DWORD PTR [esi+0x1d00ff64]
  40b37f:	call   DWORD PTR [edi]
  40b381:	int3   
  40b382:	jg     0x40b371
  40b384:	add    bh,bh
  40b386:	loopne 0x40b311
  40b388:	mov    BYTE PTR [eax],0x5c
  40b38b:	xchg   ah,cl
  40b38d:	and    ebx,0xffffffff
  40b390:	std    
  40b391:	call   DWORD PTR [esi]
  40b393:	mov    al,0xff
  40b395:	call   FWORD PTR [edi+0x40005bff]
  40b39b:	mov    dh,0xff
  40b39d:	call   FWORD PTR [ecx-0x1]
  40b3a0:	(bad)  
  40b3a2:	add    edi,edx
  40b3a4:	inc    DWORD PTR [ebx+0x7600be]
  40b3aa:	pop    ds
  40b3ab:	cmp    eax,0xffef0083
  40b3b0:	out    0xff,eax
  40b3b2:	out    0xc4,eax
  40b3b4:	inc    DWORD PTR [ebx-0x7ced00b8]
  40b3ba:	xchg   ebx,eax
  40b3bb:	cli    
  40b3bc:	add    BYTE PTR [eax],al
  40b3be:	xchg   ebx,eax
  40b3bf:	add    BYTE PTR [ecx-0x7c100301],dl
  40b3c5:	sbb    DWORD PTR [edx+0x0],0xfffffffe
  40b3c9:	call   DWORD PTR [eax+0x23]
  40b3cc:	add    BYTE PTR [eax],al
  40b3ce:	test   al,0xff
  40b3d0:	sub    bh,bh
  40b3d2:	(bad)  
  40b3d3:	sti    
  40b3d4:	add    DWORD PTR [eax],0xffffffd9
  40b3d7:	add    bl,ch
  40b3d9:	int3   
  40b3da:	and    bh,bl
  40b3dc:	(bad)  
  40b3dd:	dec    DWORD PTR [ebx+0x900d7ff]
  40b3e3:	and    eax,0xffd0cc89
  40b3e8:	(bad)  
  40b3e9:	call   DWORD PTR [ecx]
  40b3eb:	cmp    bh,bh
  40b3ed:	int3   
  40b3ee:	add    ecx,esp
  40b3f0:	dec    WORD PTR [ebx]
  40b3f3:	adc    edi,edi
  40b3f5:	jmp    DWORD PTR [eax-0x34]
  40b3f8:	jne    0x40b3fa
  40b3fa:	repz and al,0xff
  40b3fd:	dec    DWORD PTR [ecx]
  40b3ff:	xor    DWORD PTR [eax],0xffffffff
  40b402:	sti    
  40b403:	(bad)  
  40b404:	inc    DWORD PTR [ebx-0x33dd7c60]
  40b40a:	cmp    DWORD PTR [eax],edx
  40b40c:	(bad)  
  40b40d:	call   FWORD PTR ds:0xc200ad00
  40b413:	ret    0xff00
  40b416:	cmp    DWORD PTR [eax],eax
  40b418:	add    BYTE PTR gs:[edi+0xa],dh
  40b41c:	add    bh,bh
  40b41e:	xor    al,BYTE PTR [eax]
  40b420:	aad    0xcc
  40b422:	je     0x40b446
  40b424:	(bad)  
  40b425:	push   edx
  40b427:	call   ecx
  40b429:	add    al,cl
  40b42b:	into   
  40b42c:	add    BYTE PTR [eax],al
  40b42e:	adc    eax,0xe889a5ff
  40b433:	inc    BYTE PTR [eax]
  40b435:	jmp    DWORD PTR [edx-0x1]
  40b438:	in     eax,0xff
  40b43a:	cmp    al,0xb6
  40b43c:	(bad)  
  40b43d:	jmp    FWORD PTR [ecx+0x0]
  40b440:	cmc    
  40b441:	mov    edi,edx
  40b443:	dec    eax
  40b444:	add    BYTE PTR [eax],al
  40b446:	jge    0x40b3d1
  40b448:	and    edi,edi
  40b44a:	jbe    0x40b3fd
  40b44c:	dec    esp
  40b44e:	rol    DWORD PTR [eax],0xe0
  40b451:	inc    DWORD PTR [ecx-0x79]
  40b454:	(bad)  
  40b455:	dec    DWORD PTR ds:0xc6ff37ff
  40b45b:	mov    ah,0xff
  40b45d:	or     ebx,0xffffffff
  40b460:	mov    DWORD PTR es:[ecx+0x7f],eax
  40b464:	add    bh,bh
  40b466:	(bad)  
  40b467:	and    DWORD PTR [esi-0x1a7000],0x0
  40b46e:	jmp    0x30c49b73
  40b473:	fdivp  st(7),st
  40b475:	call   DWORD PTR [ebp+0x0]
  40b478:	scas   eax,DWORD PTR es:[edi]
  40b479:	add    bl,ch
  40b47b:	aas    
  40b47c:	mov    edi,edi
  40b47e:	stc    
  40b47f:	add    BYTE PTR [ebx],ch
  40b481:	adc    ecx,0x2
  40b484:	add    DWORD PTR [eax],0xffffff90
  40b487:	(bad)  
  40b488:	fcmove st,st(4)
  40b48a:	(bad)  
  40b48b:	aaa    
  40b48c:	inc    DWORD PTR [ebx-0x9bff85]
  40b492:	gs push eax
  40b494:	inc    DWORD PTR [ebx+0xcce9]
  40b49a:	pusha  
  40b49b:	popa   
  40b49c:	int3   
  40b49d:	int3   
  40b49e:	test   edi,edi
  40b4a0:	loope  0x40b46e
  40b4a2:	mov    dh,0xd7
  40b4a4:	inc    DWORD PTR [ebx+0x6fff75]
  40b4aa:	sub    ch,bl
  40b4ac:	dec    esp
  40b4ae:	in     eax,0xcc
  40b4b0:	sar    bh,0xec
  40b4b3:	sar    bh,cl
  40b4b5:	sbb    DWORD PTR [ecx],0xffffffff
  40b4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4b9:	sub    edx,0x69
  40b4bc:	add    BYTE PTR [ebx-0x33f90068],al
  40b4c2:	ins    DWORD PTR es:[edi],dx
  40b4c3:	pop    ebx
  40b4c4:	inc    DWORD PTR [ebx-0x7cff00ef]
  40b4ca:	imul   esp,DWORD PTR [edi],0x1b0089
  40b4d0:	dec    ebp
  40b4d1:	int3   
  40b4d2:	fs xchg ebx,eax
  40b4d4:	add    BYTE PTR [eax],al
  40b4d6:	imul   edi,edi,0xd3b500e2
  40b4dc:	dec    esp
  40b4de:	addr16 call ebx
  40b4e1:	add    ch,bh
  40b4e3:	pop    ss
  40b4e4:	inc    DWORD PTR [eax]
  40b4e6:	jns    0x40b4e8
  40b4e8:	add    BYTE PTR gs:[edi],al
  40b4eb:	imul   edi,edi,0xd1ffc900
  40b4f1:	add    BYTE PTR [ecx],al
  40b4f3:	adc    edi,edi
  40b4f5:	int3   
  40b4f6:	xchg   ebx,eax
  40b4f7:	jmp    DWORD PTR [eax+0x22fe00]
  40b4fd:	add    bh,bl
  40b4ff:	or     DWORD PTR [ebp-0x1],0xffffffd8
  40b503:	fadd   QWORD PTR [eax]
  40b505:	add    BYTE PTR [esi-0x1],bh
  40b508:	cmp    eax,DWORD PTR [eax]
  40b50a:	(bad)  
  40b50b:	std    
  40b50c:	add    BYTE PTR [ebx-0x40ff84],al
  40b512:	xor    BYTE PTR [ebp-0x34],ah
  40b515:	xor    DWORD PTR [eax+0x7effa800],0x71
  40b51c:	(bad)  
  40b51d:	dec    DWORD PTR [eax+eax*1]
  40b520:	jnp    0x40b521
  40b522:	dec    edi
  40b523:	sbb    eax,0xffafffff
  40b528:	xchg   edi,edi
  40b52a:	test   eax,eax
  40b52c:	(bad)  
  40b52d:	jmp    ecx
  40b52f:	cmp    DWORD PTR [eax+eax*1-0x765237],0x58
  40b537:	add    ch,ah
  40b539:	add    bl,cl
  40b53b:	lods   eax,DWORD PTR ds:[esi]
  40b53c:	inc    DWORD PTR [eax]
  40b53e:	sub    bh,bh
  40b540:	mov    ds:0xff218cff,eax
  40b545:	mov    DWORD PTR [ebx],eax
  40b547:	add    BYTE PTR [ebx],dl
  40b549:	push   DWORD PTR [ecx]
  40b54b:	lods   eax,DWORD PTR ds:[esi]
  40b54c:	add    DWORD PTR [eax],0xffffff98
  40b54f:	call   DWORD PTR [ebx-0x34]
  40b552:	(bad)  
  40b553:	add    BYTE PTR [bp+di+0x14],al
  40b558:	or     al,BYTE PTR [eax]
  40b55a:	mov    eax,ds:0x7c898361
  40b55f:	jmp    DWORD PTR [ebp-0xfabf00]
  40b565:	add    bh,dl
  40b567:	and    DWORD PTR [ebp-0x7c09b101],0x0
  40b56e:	sub    eax,0x30038ff
  40b573:	mov    al,0xff
  40b575:	int3   
  40b576:	jp     0x40b578
  40b578:	ja     0x40b546
  40b57a:	mov    eax,0xa6ccff19
  40b57f:	sbb    DWORD PTR [edi+edi*8+0x16],0xffffffdd
  40b584:	(bad)  
  40b585:	(bad)  
  40b586:	cmp    eax,0xafffb1ff
  40b58b:	and    BYTE PTR [ebx+0x2f00ae00],al
  40b591:	call   DWORD PTR [edi]
  40b593:	sub    al,0x0
  40b595:	dec    edx
  40b597:	int3   
  40b598:	das    
  40b599:	jmp    ebp
  40b59b:	das    
  40b59c:	add    bh,bh
  40b59e:	imul   ecx,DWORD PTR [ecx-0x52a7c8e],0xffd4ff83
  40b5a8:	cmp    al,0xff
  40b5aa:	xchg   ebx,eax
  40b5ab:	clc    
  40b5ac:	add    bh,bh
  40b5ae:	xor    edi,edi
  40b5b0:	aas    
  40b5b1:	push   edi
  40b5b3:	fdiv   st(7),st
  40b5b5:	sub    esi,0x0
  40b5b8:	lods   eax,DWORD PTR ds:[esi]
  40b5b9:	push   DWORD PTR [ecx-0x737c0077]
  40b5bf:	and    esp,0x0
  40b5c2:	pushf  
  40b5c3:	inc    edi
  40b5c4:	add    bh,bh
  40b5c6:	sbb    BYTE PTR [eax],al
  40b5c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5c9:	call   DWORD PTR [edx]
  40b5cb:	daa    
  40b5cc:	add    bh,bh
  40b5ce:	or     ah,cl
  40b5d0:	dec    edx
  40b5d1:	(bad)  
  40b5d2:	jns    0x40b58c
  40b5d4:	add    bh,bh
  40b5d6:	clc    
  40b5d7:	inc    DWORD PTR [edx]
  40b5d9:	xor    DWORD PTR [edx+0xc],0xffffffff
  40b5dd:	and    DWORD PTR [edi+edi*8+0x50],0xffffff83
  40b5e2:	or     DWORD PTR [esi-0x680001],esi
  40b5e8:	xchg   edi,edi
  40b5ea:	das    
  40b5eb:	imul   eax,DWORD PTR [eax],0xffffffff
  40b5ee:	out    dx,eax
  40b5ef:	add    ch,ah
  40b5f1:	jmp    edi
  40b5f3:	stos   DWORD PTR es:[edi],eax
  40b5f4:	add    BYTE PTR [ebx-0x334000ef],al
  40b5fa:	in     eax,dx
  40b5fb:	xchg   edi,eax
  40b5fc:	mov    DWORD PTR [eax],eax
  40b5fe:	outs   dx,DWORD PTR ds:[esi]
  40b5ff:	cmp    DWORD PTR [esi+0x9ab600],0xffffffff
  40b606:	xchg   esp,eax
  40b607:	mov    DWORD PTR [ebp-0x33cfc87d],edi
  40b60d:	int3   
  40b60e:	sbb    al,0x0
  40b610:	jbe    0x40b611
  40b612:	mov    esp,0x9bff0031
  40b617:	add    dh,dh
  40b619:	jmp    DWORD PTR [ebp-0x3b]
  40b61c:	(bad)  
  40b61d:	(bad)  
  40b61e:	(bad)  
  40b61f:	(bad)  
  40b620:	sti    
  40b621:	(bad)  
  40b622:	cmp    dh,BYTE PTR [eax]
  40b624:	inc    DWORD PTR [eax]
  40b626:	pop    ebx
  40b627:	add    BYTE PTR [eax-0x1],bl
  40b62a:	imul   ebp,DWORD PTR [edi+edi*8+0x0],0x1c
  40b62f:	push   DWORD PTR [eax]
  40b631:	call   FWORD PTR [eax+0x60]
  40b634:	inc    DWORD PTR [eax]
  40b636:	scas   eax,DWORD PTR es:[edi]
  40b637:	(bad)  
  40b638:	fld    DWORD PTR [eax]
  40b63a:	xor    dh,BYTE PTR [eax]
  40b63c:	cmp    edi,0x14
  40b63f:	add    cl,dh
  40b641:	add    dh,bh
  40b643:	cmp    edi,0x0
  40b646:	sbb    al,BYTE PTR [eax]
  40b648:	sbb    al,0x0
  40b64a:	fsub   QWORD PTR [edi]
  40b64c:	add    ah,cl
  40b64e:	push   0x96cc53ff
  40b653:	pop    esi
  40b654:	(bad)  
  40b655:	jmp    FWORD PTR [edi-0x1]
  40b658:	jbe    0x40b65a
  40b65a:	xor    edi,0x0
  40b65d:	int3   
  40b65e:	int3   
  40b65f:	(bad)  
  40b660:	fild   DWORD PTR [eax]
  40b662:	mov    ecx,ebp
  40b664:	(bad)  
  40b665:	dec    DWORD PTR [ecx-0x7d]
  40b668:	pop    es
  40b669:	call   DWORD PTR [esi]
  40b66b:	jle    0x40b5f6
  40b66d:	or     DWORD PTR [ecx-0x387cba01],0x6a
  40b674:	inc    DWORD PTR [eax]
  40b676:	je     0x40b678
  40b678:	outs   dx,DWORD PTR ds:[esi]
  40b679:	add    BYTE PTR [esi],al
  40b67b:	inc    ebx
  40b67c:	(bad)  
  40b67d:	call   ecx
  40b67f:	add    BYTE PTR [ecx-0x34],bh
  40b682:	sbb    eax,0x8b83ffbd
  40b687:	push   DWORD PTR [esi]
  40b689:	call   edx
  40b68b:	push   edi
  40b68c:	cmp    edi,0x72
  40b68f:	mov    DWORD PTR [eax+eax*1+0x54],ebp
  40b693:	fwait
  40b694:	add    DWORD PTR [eax],0x1d
  40b697:	mov    DWORD PTR [edx-0x1],edi
  40b69a:	mov    esi,0xef00ffed
  40b69f:	mov    DWORD PTR [edx],ecx
  40b6a1:	jmp    DWORD PTR [edi+0x3dff00c2]
  40b6a7:	push   esp
  40b6a9:	add    BYTE PTR [ebp+ebx*4-0x427d00],al
  40b6b0:	fs (bad) 
  40b6b2:	jns    0x40b692
  40b6b4:	mov    edi,edi
  40b6b6:	lods   eax,DWORD PTR ds:[esi]
  40b6b7:	add    DWORD PTR ds:0xff4932ff,0x0
  40b6be:	aaa    
  40b6bf:	call   esi
  40b6c1:	(bad)  
  40b6c2:	fcom   DWORD PTR [edx]
  40b6c4:	int3   
  40b6c5:	add    BYTE PTR [edx],ah
  40b6c7:	add    BYTE PTR [esi-0x7ca0dd01],bh
  40b6cd:	jmp    DWORD PTR [esi+0x23ff69cc]
  40b6d3:	add    bh,bh
  40b6d5:	add    BYTE PTR [edx-0x1],bl
  40b6d8:	jg     0x40b6da
  40b6da:	leave  
  40b6db:	cli    
  40b6dc:	int3   
  40b6dd:	add    BYTE PTR [ebx+0x14ff5dff],bl
  40b6e3:	cmc    
  40b6e4:	int3   
  40b6e5:	push   DWORD PTR [ebx-0x34]
  40b6e8:	(bad)  
  40b6e9:	inc    esp
  40b6eb:	inc    esi
  40b6ec:	inc    DWORD PTR [ebx+0xf2003b]
  40b6f2:	add    BYTE PTR [ecx-0x1],dh
  40b6f5:	sbb    DWORD PTR [ecx+ecx*4+0x30b6ff35],0xffffff83
  40b6fd:	add    BYTE PTR [edi-0x7d],bl
  40b700:	das    
  40b701:	jmp    DWORD PTR [esi-0x5d00005a]
  40b707:	mov    DWORD PTR [ecx],ecx
  40b709:	add    BYTE PTR ds:0x5200ff2d,dh
  40b70f:	call   esi
  40b711:	jmp    edx
  40b713:	inc    eax
  40b714:	int3   
  40b715:	add    BYTE PTR [edx+0x3eff03ff],al
  40b71b:	iret   
  40b71c:	add    BYTE PTR [eax],al
  40b71e:	sbb    al,0x0
  40b720:	lods   eax,DWORD PTR ds:[esi]
  40b721:	dec    DWORD PTR [edx]
  40b723:	or     al,0xff
  40b725:	(bad)  
  40b726:	fcmovne st,st(4)
  40b728:	xor    DWORD PTR [ebx+0xff0b4d],eax
  40b72e:	jae    0x40b730
  40b730:	xlat   BYTE PTR ds:[ebx]
  40b731:	call   DWORD PTR [edx+0x1b]
  40b734:	(bad)  
  40b735:	dec    DWORD PTR [eax-0x7d]
  40b738:	push   DWORD PTR fs:[edi+ebp*4]
  40b73c:	mov    DWORD PTR [eax],eax
  40b73e:	pop    ebp
  40b73f:	or     DWORD PTR [edi-0x3346407d],0xffffffff
  40b746:	dec    ecx
  40b747:	add    BYTE PTR [edx-0x1],ah
  40b74a:	and    BYTE PTR [ecx-0x77],al
  40b74d:	mov    ebx,edx
  40b74f:	inc    DWORD PTR [edx]
  40b751:	add    dh,bh
  40b753:	pop    edx
  40b754:	int3   
  40b755:	call   FWORD PTR [ebx-0x1]
  40b758:	xchg   edx,eax
  40b759:	cmp    edx,0x23
  40b75c:	inc    DWORD PTR [eax]
  40b75e:	jae    0x40b75f
  40b760:	xlat   BYTE PTR ds:[ebx]
  40b761:	and    DWORD PTR ds:0x21ffffbb,0xffffffcc
  40b768:	and    edi,edi
  40b76a:	adc    BYTE PTR [esi-0x1],ch
  40b76d:	add    BYTE PTR [esi],bl
  40b76f:	call   DWORD PTR [edi-0x7c1e00]
  40b775:	jmp    FWORD PTR [esp+ecx*8+0x28]
  40b779:	(bad)  
  40b77a:	in     al,dx
  40b77b:	cmc    
  40b77c:	cmp    edi,0x5b
  40b77f:	call   DWORD PTR [edi-0x7d]
  40b782:	jbe    0x40b70e
  40b784:	inc    DWORD PTR [ebx-0xc20079]
  40b78a:	dec    esi
  40b78b:	xor    eax,0x47ffff
  40b790:	adc    bh,bh
  40b792:	(bad)  
  40b793:	loopne 0x40b718
  40b795:	dec    DWORD PTR [ecx+0x383c583]
  40b79b:	pusha  
  40b79c:	inc    DWORD PTR [eax]
  40b79e:	jo     0x40b7a0
  40b7a0:	sub    bh,bh
  40b7a2:	pusha  
  40b7a3:	sub    bh,bh
  40b7a5:	mov    DWORD PTR [eax-0x1],edi
  40b7a8:	mov    bh,bh
  40b7aa:	and    ebx,DWORD PTR [edx]
  40b7ac:	add    BYTE PTR [eax],al
  40b7ae:	add    al,0xff
  40b7b0:	mov    edi,0xff6b8dff
  40b7b5:	add    BYTE PTR [eax+eax*1+0x21db0096],cl
  40b7bc:	add    bh,bh
  40b7be:	dec    DWORD PTR [ecx-0x23b30018]
  40b7c4:	add    BYTE PTR [eax],al
  40b7c6:	and    bh,bh
  40b7c8:	(bad)  
  40b7ca:	fisttp WORD PTR [esp+ecx*8+0x0]
  40b7ce:	sub    al,BYTE PTR [eax]
  40b7d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d1:	jmp    FWORD PTR [ebx-0x1076006b]
  40b7d7:	add    bh,ah
  40b7d9:	add    BYTE PTR [esp+esi*1],ah
  40b7dc:	dec    DWORD PTR [ecx-0x3ffff0]
  40b7e2:	adc    BYTE PTR [esi],al
  40b7e4:	add    BYTE PTR [ecx-0x987c2d],cl
  40b7ea:	sbb    BYTE PTR [eax+eax*1],ch
  40b7ed:	jmp    DWORD PTR [eax]
  40b7ef:	inc    DWORD PTR [edx]
  40b7f1:	jmp    FWORD PTR [eax]
  40b7f3:	push   ebx
  40b7f4:	add    BYTE PTR [eax],al
  40b7f6:	inc    BYTE PTR [eax]
  40b7f8:	retf   0x9bff
  40b7fb:	std    
  40b7fc:	add    ah,cl
  40b7fe:	xchg   edi,eax
  40b7ff:	call   DWORD PTR [ebx+eax*4]
  40b802:	push   0xfaffff2e
  40b807:	dec    edi
  40b809:	add    BYTE PTR ds:0xf2ccccf4,ah
  40b80f:	call   FWORD PTR [ebx+0x587400]
  40b815:	adc    ebp,0x0
  40b818:	push   esp
  40b819:	jmp    DWORD PTR [ebx+ebp*8-0x1]
  40b81d:	add    dh,dl
  40b81f:	int3   
  40b820:	sub    eax,0xff71a5ff
  40b825:	push   DWORD PTR [esi]
  40b827:	xor    DWORD PTR [ebp-0xe33c34],0xffffff89
  40b82e:	jp     0x40b830
  40b830:	cmc    
  40b831:	sbb    DWORD PTR [ebx-0x26ff0033],0xffffffff
  40b838:	js     0x40b7bd
  40b83a:	cmp    ebx,DWORD PTR [ebx-0x4ff01]
  40b840:	(bad)  
  40b841:	push   DWORD PTR [edx]
  40b843:	cli    
  40b844:	add    BYTE PTR [eax],al
  40b846:	pop    DWORD PTR [eax]
  40b848:	pop    ecx
  40b849:	(bad)  
  40b84a:	std    
  40b84b:	pop    esp
  40b84c:	add    bh,bh
  40b84e:	xor    al,0x89
  40b850:	jbe    0x40b851
  40b852:	mov    WORD PTR [ebx+0x0],?
  40b855:	add    al,dh
  40b857:	(bad)  
  40b858:	cli    
  40b859:	add    BYTE PTR [edx],bl
  40b85b:	aas    
  40b85c:	inc    DWORD PTR [eax]
  40b85e:	das    
  40b85f:	add    BYTE PTR [ebx+0x7b5cff],cl
  40b865:	add    BYTE PTR [edi-0x34],al
  40b868:	push   es
  40b869:	call   DWORD PTR [edx+0x1783ff09]
  40b86f:	add    BYTE PTR [eax],dh
  40b871:	(bad)  
  40b872:	fstp   TBYTE PTR [edi]
  40b874:	inc    DWORD PTR [eax]
  40b876:	(bad)  
  40b877:	mov    esp,ecx
  40b879:	(bad)  
  40b87a:	fistp  QWORD PTR [ecx]
  40b87c:	inc    DWORD PTR [ebx-0x76e5000a]
  40b882:	pop    ecx
  40b883:	loope  0x40b808
  40b885:	add    BYTE PTR [edx],bh
  40b887:	add    BYTE PTR [ebx-0x7cb36401],dl
  40b88d:	adc    DWORD PTR [edx],0xffffffff
  40b890:	push   0xffffff89
  40b892:	jle    0x40b8c7
  40b894:	(bad)  
  40b895:	inc    DWORD PTR [edx]
  40b897:	inc    DWORD PTR [ebx]
  40b899:	jmp    DWORD PTR [eax]
  40b89b:	scas   eax,DWORD PTR es:[edi]
  40b89c:	inc    DWORD PTR [ebx-0x550087]
  40b8a2:	xlat   BYTE PTR ds:[ebx]
  40b8a3:	retf   0x0
  40b8a6:	mov    cl,0x83
  40b8a8:	dec    esp
  40b8a9:	add    BYTE PTR [edi-0xb],dl
  40b8ac:	cmp    edi,0x46
  40b8af:	jmp    FWORD PTR [esi-0x5e3f00]
  40b8b5:	sbb    esp,0x0
  40b8b8:	cwde   
  40b8b9:	jmp    FWORD PTR [edi]
  40b8bb:	in     al,0xff
  40b8bd:	sub    DWORD PTR ds:0xc9004989,0xffffffb3
  40b8c4:	add    BYTE PTR [eax],al
  40b8c6:	cld    
  40b8c7:	push   esp
  40b8c9:	(bad)  
  40b8ca:	ficom  DWORD PTR [esi]
  40b8cc:	cmp    edi,0xffffffe0
  40b8cf:	dec    DWORD PTR [edi-0x1]
  40b8d2:	ds jbe 0x40b8d5
  40b8d5:	sbb    DWORD PTR [edx],0xffffffff
  40b8d8:	xchg   esp,eax
  40b8d9:	call   FWORD PTR [ebp+0xc]
  40b8dc:	add    BYTE PTR [eax],al
  40b8de:	jb     0x40b8df
  40b8e0:	push   DWORD PTR [ebp-0x1433ff01]
  40b8e6:	inc    ebp
  40b8e7:	outs   dx,DWORD PTR ds:[esi]
  40b8e8:	mov    DWORD PTR gs:[ecx-0x280000c5],eax
  40b8ef:	inc    DWORD PTR [ebx-0xffa0]
  40b8f5:	inc    ebx
  40b8f6:	stos   BYTE PTR es:[edi],al
  40b8f7:	xchg   edi,eax
  40b8f8:	aaa    
  40b8f9:	inc    DWORD PTR [edx+0x7bff0027]
  40b8ff:	(bad)  
  40b900:	call   DWORD PTR [ecx-0x7fff7c01]
  40b906:	jae    0x40b908
  40b908:	aam    0x0
  40b90a:	pusha  
  40b90b:	in     eax,dx
  40b90c:	add    BYTE PTR [eax],al
  40b90e:	cmp    edi,0xffffffff
  40b911:	push   ds
  40b912:	cmp    edi,0x0
  40b915:	mov    ?,edx
  40b917:	mov    bl,0xe
  40b919:	add    BYTE PTR ds:0x6affffcc,bl
  40b91f:	mov    DWORD PTR [ebx-0x7c0000d5],eax
  40b925:	sbb    dh,BYTE PTR [ebp+0x2d89b459]
  40b92b:	xor    eax,DWORD PTR [eax]
  40b92d:	call   DWORD PTR [eax-0x1]
  40b930:	mov    DWORD PTR [ebx-0x1],ecx
  40b933:	add    bh,bh
  40b935:	popf   
  40b936:	retf   
  40b937:	les    esi,FWORD PTR [edx-0x1]
  40b93a:	popf   
  40b93b:	xor    al,0xff
  40b93d:	mov    DWORD PTR [eax+eax*1-0x1101],ebx
  40b944:	mov    DWORD PTR [ebp+0x14],ebp
  40b947:	xchg   ebx,eax
  40b948:	dec    eax
  40b949:	add    BYTE PTR [edi],cl
  40b94b:	(bad)  
  40b94d:	add    BYTE PTR [ebx],cl
  40b94f:	add    bh,bh
  40b951:	push   ds
  40b952:	inc    DWORD PTR [eax]
  40b954:	or     edx,0xffffffde
  40b957:	sub    al,0x4f
  40b959:	call   edi
  40b95b:	xchg   esi,eax
  40b95c:	add    BYTE PTR [eax],al
  40b95e:	xchg   edi,eax
  40b95f:	add    BYTE PTR [eax],al
  40b961:	test   esp,0x1a6600ff
  40b967:	cmp    BYTE PTR [eax-0x1],cl
  40b96a:	sub    BYTE PTR [ebx-0x7a007d],ah
  40b970:	call   DWORD PTR [eax-0x2dff7c7d]
  40b976:	adc    ebp,DWORD PTR [eax]
  40b978:	mov    bh,0x0
  40b97a:	jmp    0x89ff:0x2bffff90
  40b981:	pop    edi
  40b982:	add    BYTE PTR [ebx-0x2842717d],al
  40b988:	cld    
  40b989:	jmp    DWORD PTR [ebx-0x2b]
  40b98c:	(bad)  
  40b98d:	dec    DWORD PTR ds:0xb89ff
  40b993:	add    DWORD PTR [eax],0xffffffa5
  40b996:	mov    esp,es
  40b998:	cmc    
  40b999:	cmp    DWORD PTR [esi-0x54007cd3],0xffffff83
  40b9a0:	and    edi,0xffffffff
  40b9a3:	inc    DWORD PTR [ebx-0x6e13bb0d]
  40b9a9:	int3   
  40b9aa:	psrld  mm1,mm4
  40b9ad:	int3   
  40b9ae:	lea    eax,[eax]
  40b9b0:	call   FWORD PTR [edi-0x6f007c01]
  40b9b6:	rol    BYTE PTR [eax+edx*8-0x7c719e01],0xff
  40b9be:	xchg   edi,eax
  40b9bf:	(bad)  
  40b9c0:	(bad)  
  40b9c1:	(bad)  
  40b9c3:	inc    DWORD PTR [eax]
  40b9c5:	cmp    edx,DWORD PTR [edx]
  40b9c7:	adc    al,0x36
  40b9c9:	inc    DWORD PTR [ebx+0x57ffff27]
  40b9cf:	(bad)  
  40b9d0:	call   ebx
  40b9d2:	dec    DWORD PTR [ecx+0x1e9cd289]
  40b9d8:	sbb    BYTE PTR [eax],al
  40b9da:	pop    ds
  40b9db:	jmp    0x40b9dc
  40b9dd:	call   DWORD PTR [ebx+0x0]
  40b9e0:	int3   
  40b9e1:	aas    
  40b9e2:	add    bh,bh
  40b9e4:	add    BYTE PTR [edx],bl
  40b9e6:	xor    al,0x8d
  40b9e8:	sbb    DWORD PTR ds:[edi+0x41],0xffffffff
  40b9ed:	add    BYTE PTR [ebx+0x0],ch
  40b9f0:	call   FWORD PTR [ebp-0x34]
  40b9f3:	add    bh,bh
  40b9f5:	sbb    esi,DWORD PTR [ecx]
  40b9f7:	push   ebp
  40b9f8:	cmp    bh,0xc1
  40b9fb:	jo     0x40b9fc
  40b9fd:	add    BYTE PTR [edx-0x340077],al
  40ba03:	inc    DWORD PTR [eax]
  40ba05:	icebp  
  40ba06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba07:	and    DWORD PTR [ecx+0x64f0ff],ebx
  40ba0d:	add    ah,bl
  40ba0f:	int3   
  40ba10:	or     DWORD PTR [edx],0xffffffcc
  40ba13:	int3   
  40ba14:	mov    DWORD PTR [ebx],esp
  40ba16:	mov    ds:0x3effdcfb,eax
  40ba1b:	sbb    bh,bh
  40ba1d:	inc    DWORD PTR [edi+edi*8-0x34]
  40ba21:	cmp    eax,0x6aff8300
  40ba26:	push   esi
  40ba27:	dec    edi
  40ba28:	in     al,dx
  40ba29:	dec    DWORD PTR [ebx+edi*2+0x1c0083]
  40ba30:	add    BYTE PTR [ebp-0x7d],al
  40ba33:	inc    DWORD PTR [eax]
  40ba35:	xchg   edx,eax
  40ba36:	loopne 0x40baaa
  40ba38:	inc    edi
  40ba39:	inc    DWORD PTR [ecx]
  40ba3b:	nop
  40ba3c:	mov    edi,edi
  40ba3e:	scas   eax,DWORD PTR es:[edi]
  40ba3f:	(bad)  
  40ba40:	call   edx
  40ba42:	inc    DWORD PTR [ebx+0x51db2500]
  40ba48:	inc    esp
  40ba49:	int3   
  40ba4a:	mov    esp,DWORD PTR [esi+0x5400ff]
  40ba50:	add    ah,dl
  40ba52:	add    bh,bh
  40ba54:	add    BYTE PTR ds:0x2987db,dh
  40ba5a:	stc    
  40ba5b:	bound  ecx,QWORD PTR [ecx-0x2301]
  40ba61:	scas   eax,DWORD PTR es:[edi]
  40ba62:	(bad)  
  40ba63:	(bad)  
  40ba64:	jmp    DWORD PTR [esi]
  40ba66:	test   al,0x10
  40ba68:	cmp    eax,DWORD PTR [eax]
  40ba6a:	xlat   BYTE PTR ds:[ebx]
  40ba6b:	pop    ebx
  40ba6c:	add    bh,bh
  40ba6e:	outs   dx,BYTE PTR ds:[esi]
  40ba6f:	(bad)  
  40ba70:	call   FWORD PTR [ebp+0x0]
  40ba73:	inc    DWORD PTR [ebx-0x28abb730]
  40ba79:	xor    DWORD PTR [ebp-0x38],0xffffffff
  40ba7d:	(bad)  
  40ba7e:	jns    0x40ba80
  40ba80:	cmp    esi,0x0
  40ba83:	inc    DWORD PTR [eax]
  40ba85:	mov    DWORD PTR [ecx+edi*1-0x2136ffa1],eax
  40ba8c:	(bad)  
  40ba8d:	call   FWORD PTR [ebx+0x0]
  40ba90:	add    BYTE PTR [edi-0x1],bl
  40ba93:	add    bh,bh
  40ba95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba96:	pop    ss
  40ba97:	xchg   edi,eax
  40ba98:	inc    ebx
  40ba99:	int3   
  40ba9a:	xor    eax,ecx
  40ba9c:	inc    DWORD PTR [eax]
  40ba9e:	(bad)  
  40ba9f:	add    BYTE PTR [eax],al
  40baa1:	addr16 add bh,bh
  40baa4:	add    BYTE PTR [ebp+0x45],ch
  40baa7:	jb     0x40baf1
  40baa9:	jmp    DWORD PTR [eax]
  40baab:	jb     0x40ba36
  40baad:	add    esp,0xffffff83
  40bab0:	and    DWORD PTR ds:0x65ff8900,0xffffffb0
  40bab7:	popf   
  40bab8:	jmp    0x83ca80bd
  40babd:	xor    DWORD PTR ds:0xffc7ffff,0xffffffff
  40bac4:	add    BYTE PTR [edi+esi*4+0x7],ch
  40bac8:	and    bh,bh
  40baca:	les    edx,FWORD PTR [ecx]
  40bacc:	mov    DWORD PTR [ecx+0x528389a1],ecx
  40bad2:	add    bh,bh
  40bad4:	or     DWORD PTR [eax],0xffffff9a
  40bad7:	jg     0x40bb00
  40bad9:	push   DWORD PTR [esi]
  40badb:	jmp    0x40badc
  40badd:	sub    DWORD PTR [ebx],0xffffffff
  40bae0:	mov    esp,eax
  40bae2:	add    bh,bh
  40bae4:	int3   
  40bae5:	xchg   esp,eax
  40bae6:	xchg   DWORD PTR [ebx+0x4e],ebx
  40bae9:	(bad)  
  40baea:	fisttp WORD PTR ds:0xfeff83
  40baf0:	push   DWORD PTR [esp+ecx*8-0x1]
  40baf4:	dec    DWORD PTR [edi+0x6a]
  40baf7:	lds    ebp,FWORD PTR [eax-0x1]
  40bafa:	xchg   esi,eax
  40bafb:	rol    DWORD PTR [eax],1
  40bafd:	int3   
  40bafe:	mov    ecx,0xffa0ff00
  40bb03:	int3   
  40bb04:	jmp    edi
  40bb06:	cmp    esp,DWORD PTR [eax-0x5d]
  40bb09:	mov    DWORD PTR [eax+0x7fffff82],edi
  40bb0f:	add    BYTE PTR [ebx-0x33ffffe7],al
  40bb15:	mov    ecx,DWORD PTR [esi-0x5]
  40bb18:	call   0x2cff:0xff00f2ff
  40bb1f:	add    BYTE PTR [eax],al
  40bb21:	inc    ebx
  40bb22:	add    DWORD PTR [ebx-0x349c9b00],0xffffffdf
  40bb29:	jmp    DWORD PTR [ebp+0x6e]
  40bb2c:	add    bh,bh
  40bb2e:	pop    edx
  40bb2f:	add    bh,bh
  40bb31:	sbb    al,0xff
  40bb33:	add    BYTE PTR [eax],al
  40bb35:	sahf   
  40bb36:	rcr    DWORD PTR [edx+0x132189e6],cl
  40bb3c:	int3   
  40bb3d:	add    BYTE PTR [esi+0x583ff],al
  40bb43:	add    BYTE PTR [ebx+0x777d5b2d],al
  40bb49:	push   esp
  40bb4b:	(bad)  
  40bb4c:	inc    DWORD PTR [eax]
  40bb4e:	je     0x40bad9
  40bb50:	int3   
  40bb51:	mov    esp,0x9283ccff
  40bb56:	xchg   esp,eax
  40bb57:	shl    ebp,cl
  40bb59:	inc    DWORD PTR [ebp-0x6e0000c4]
  40bb5f:	int3   
  40bb60:	push   ebx
  40bb62:	inc    DWORD PTR [ebx+0x5ea46eff]
  40bb68:	push   ecx
  40bb69:	int3   
  40bb6a:	or     eax,0x3c00ff24
  40bb6f:	inc    DWORD PTR [eax]
  40bb71:	add    eax,DWORD PTR [eax]
  40bb73:	int3   
  40bb74:	int3   
  40bb75:	xchg   edx,eax
  40bb76:	not    edx
  40bb78:	add    BYTE PTR fs:[ecx],ch
  40bb7b:	jmp    0xa8ff:0xffee83ff
  40bb82:	inc    DWORD PTR [eax]
  40bb84:	(bad)  
  40bb85:	cmp    al,0x50
  40bb87:	ret    
  40bb88:	clc    
  40bb89:	add    BYTE PTR [ecx],bl
  40bb8b:	push   cs
  40bb8c:	int3   
  40bb8d:	call   DWORD PTR [ebx-0x6d3400]
  40bb93:	(bad)  
  40bb94:	inc    DWORD PTR [edx*1-0x1d0089d2]
  40bb9b:	mov    ds:0x1283cc,eax
  40bba0:	add    ah,dl
  40bba2:	cmp    edi,0xffffffff
  40bba5:	xchg   esp,eax
  40bba6:	mov    BYTE PTR [ecx-0x5b0fffa2],cl
  40bbac:	add    bh,bh
  40bbae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbaf:	add    bh,bh
  40bbb1:	add    al,0x0
  40bbb3:	(bad)  
  40bbb4:	push   DWORD PTR [ebp+0x60a7df]
  40bbba:	daa    
  40bbbb:	push   edi
  40bbbc:	cmp    edi,0x5a
  40bbbf:	int3   
  40bbc0:	inc    DWORD PTR [edi+edi*8]
  40bbc3:	int3   
  40bbc4:	int3   
  40bbc5:	jg     0x40bb79
  40bbc7:	sti    
  40bbc8:	adc    al,BYTE PTR [ebx-0x7cfff35e]
  40bbce:	out    0xff,al
  40bbd0:	(bad)  
  40bbd1:	mov    eax,0xb000ff00
  40bbd6:	xor    eax,0x13ff1930
  40bbdb:	mov    WORD PTR [eax],es
  40bbdd:	push   DWORD PTR [eax]
  40bbdf:	add    ah,cl
  40bbe1:	jge    0x40bbe3
  40bbe3:	dec    esp
  40bbe5:	fnsave [ecx+0x6d00cbb1]
  40bbeb:	leave  
  40bbec:	inc    DWORD PTR [eax]
  40bbee:	stc    
  40bbef:	int3   
  40bbf0:	int3   
  40bbf1:	std    
  40bbf2:	add    BYTE PTR [ecx-0x1b7b8600],cl
  40bbf8:	fcos   
  40bbfa:	cmc    
  40bbfb:	call   0xf988ff
  40bc00:	mov    DWORD PTR [edx-0x1],esp
  40bc03:	add    bh,bh
  40bc05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc06:	cmp    eax,0xf8ff2093
  40bc0b:	rol    BYTE PTR [eax],cl
  40bc0d:	add    BYTE PTR [ecx-0x7e3400],cl
  40bc13:	int3   
  40bc14:	inc    DWORD PTR [edx+0xb]
  40bc17:	aad    0xd5
  40bc19:	int3   
  40bc1a:	mov    ecx,0x8a890042
  40bc1f:	(bad)  
  40bc20:	jmp    DWORD PTR [ebp+0x2283ff00]
  40bc26:	je     0x40bbd4
  40bc28:	sbb    DWORD PTR [ebx-0x335aed],eax
  40bc2e:	in     al,dx
  40bc2f:	(bad)  
  40bc30:	jmp    FWORD PTR [edi]
  40bc32:	inc    DWORD PTR [eax]
  40bc34:	add    BYTE PTR [esi],ch
  40bc36:	xchg   ebx,eax
  40bc37:	sbb    eax,0xbb460091
  40bc3c:	dec    DWORD PTR [ecx-0x4dffffdc]
  40bc42:	add    BYTE PTR [eax],al
  40bc44:	push   DWORD PTR [ecx]
  40bc46:	mov    cl,0x53
  40bc48:	mov    edi,edi
  40bc4a:	ud0    ecx,DWORD PTR cs:[ecx+0x64ffff5c]
  40bc52:	int3   
  40bc53:	add    BYTE PTR [ebx-0x453e39e1],al
  40bc59:	(bad)  
  40bc5a:	in     eax,dx
  40bc5b:	push   0xffffffff
  40bc5d:	int3   
  40bc5e:	mov    dh,0x0
  40bc60:	(bad)  
  40bc61:	out    dx,eax
  40bc62:	add    BYTE PTR [eax],al
  40bc64:	add    BYTE PTR [ecx-0xe61e23],dl
  40bc6a:	xchg   ebp,eax
  40bc6b:	mov    ds:0x830dffff,al
  40bc70:	inc    DWORD PTR [ebp+0x2d0000ff]
  40bc76:	cli    
  40bc77:	mov    bl,0xfe
  40bc79:	or     DWORD PTR [eax],0xffffffd3
  40bc7c:	(bad)  
  40bc7d:	push   DWORD PTR [edx-0xe70001]
  40bc83:	add    DWORD PTR [eax],0x60
  40bc86:	push   ebx
  40bc87:	bound  esp,QWORD PTR [esi]
  40bc89:	inc    DWORD PTR [ecx]
  40bc8b:	pop    ss
  40bc8c:	add    BYTE PTR [ebx+0x1cffff50],al
  40bc92:	inc    DWORD PTR [ebx+0x849683]
  40bc98:	in     al,0xff
  40bc9a:	cdq    
  40bc9b:	sub    bh,bh
  40bc9d:	add    ch,dh
  40bc9f:	cmp    edi,0xffffffda
  40bca2:	inc    DWORD PTR [eax]
  40bca4:	int3   
  40bca5:	hlt    
  40bca6:	call   0xffeb:0xf83c48c
  40bcad:	add    BYTE PTR [edi+edi*8],dl
  40bcb0:	push   DWORD PTR [edi-0x7d]
  40bcb3:	inc    DWORD PTR [eax]
  40bcb5:	pop    es
  40bcb6:	cmp    esi,DWORD PTR [ebx]
  40bcb8:	loope  0x40bcba
  40bcba:	inc    ebx
  40bcbb:	(bad)  
  40bcbc:	(bad)  
  40bcbd:	(bad)  
  40bcbe:	jle    0x40bc43
  40bcc0:	call   DWORD PTR [edx+0x41ccff89]
  40bcc6:	push   ds
  40bcc7:	fidivr WORD PTR [ecx-0x7648917d]
  40bccd:	int3   
  40bcce:	loope  0x40bcd0
  40bcd0:	call   DWORD PTR [ecx+0x0]
  40bcd3:	cmp    edi,0x49
  40bcd6:	jo     0x40bc70
  40bcd8:	push   0x83aa4800
  40bcdd:	jmp    eax
  40bcdf:	dec    esp
  40bce1:	mov    eax,0x3b00cccc
  40bce6:	xchg   ecx,eax
  40bce7:	out    dx,al
  40bce8:	mov    edi,edi
  40bcea:	adc    al,0xbe
  40bcec:	(bad)  
  40bced:	push   DWORD PTR [ebx+eax*4]
  40bcf0:	jmp    FWORD PTR [ecx]
  40bcf2:	add    BYTE PTR [eax],al
  40bcf4:	xor    DWORD PTR [esi+0x2ff3f9],0xffffffc2
  40bcfb:	cmp    bh,bh
  40bcfd:	(bad)  
  40bcfe:	cld    
  40bcff:	add    ah,cl
  40bd01:	dec    eax
  40bd02:	add    bh,bh
  40bd04:	jmp    DWORD PTR [edi]
  40bd06:	fadd   DWORD PTR [edi-0x583323]
  40bd0c:	or     esp,0x61
  40bd0f:	dec    esp
  40bd11:	xor    bh,bh
  40bd13:	(bad)  
  40bd14:	jmp    FWORD PTR [eax]
  40bd16:	mov    DWORD PTR [esi+eax*2-0x34],ebp
  40bd1a:	adc    eax,0x8800ff4f
  40bd1f:	add    bh,bh
  40bd21:	xor    edi,edi
  40bd23:	inc    DWORD PTR [ebx-0x33ca4752]
  40bd29:	dec    DWORD PTR [edi]
  40bd2b:	test   al,0x83
  40bd2d:	dec    DWORD PTR ds:0x59ff00
  40bd33:	int3   
  40bd34:	call   FWORD PTR [ebp+0xacec07]
  40bd3a:	bnd jbe 0x40bd3d
  40bd3d:	jmp    edi
  40bd3f:	inc    DWORD PTR [ebx-0x7c007c10]
  40bd45:	lods   eax,DWORD PTR ds:[esi]
  40bd46:	push   es
  40bd47:	mov    eax,ds:0x7b58ff9a
  40bd4c:	add    BYTE PTR [ecx-0xbff00ce],cl
  40bd52:	add    bh,bh
  40bd54:	or     edi,0x21
  40bd57:	pop    esi
  40bd58:	mov    al,0xcc
  40bd5a:	inc    ecx
  40bd5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd5c:	add    bh,bh
  40bd5e:	cli    
  40bd5f:	add    bh,bh
  40bd61:	rol    BYTE PTR [ebx-0x30f4ff7d],0xd4
  40bd68:	dec    ebp
  40bd69:	dec    DWORD PTR [eax]
  40bd6b:	fcos   
  40bd6d:	push   DWORD PTR [edi+edi*8+0x0]
  40bd71:	mov    edx,0xc3ff83ff
  40bd76:	add    eax,0xb800d540
  40bd7b:	pop    ecx
  40bd7c:	(bad)  
  40bd7d:	dec    DWORD PTR [ebx-0x1]
  40bd80:	(bad)  
  40bd81:	cld    
  40bd82:	add    BYTE PTR [ebx-0x39f1ad01],al
  40bd88:	mov    eax,ds:0x8902f883
  40bd8d:	call   DWORD PTR [edi+edi*8-0x337c9101]
  40bd94:	call   FWORD PTR [esi+0xf97c09]
  40bd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd9b:	int3   
  40bd9c:	(bad)  
  40bd9d:	jmp    FWORD PTR [edi-0x78ff7d]
  40bda3:	add    bh,bh
  40bda5:	push   esi
  40bda6:	in     al,0xb4
  40bda8:	and    al,0x83
  40bdaa:	sub    eax,0x4dffff82
  40bdaf:	add    BYTE PTR [ebx+0xcc83d7],al
  40bdb5:	mov    ah,BYTE PTR [edx+0x12ff0994]
  40bdbb:	aad    0xff
  40bdbd:	int3   
  40bdbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdbf:	inc    DWORD PTR [eax]
  40bdc1:	stos   BYTE PTR es:[edi],al
  40bdc2:	add    DWORD PTR [eax],0x0
  40bdc5:	xlat   BYTE PTR ds:[ebx]
  40bdc6:	pop    es
  40bdc7:	cmp    al,BYTE PTR [edi-0x1]
  40bdca:	arpl   dx,cx
  40bdcc:	dec    DWORD PTR [ecx+0x6effffbf]
  40bdd2:	inc    DWORD PTR [eax]
  40bdd4:	inc    DWORD PTR [edx]
  40bdd6:	mov    esi,0x8ff7d44
  40bddb:	(bad)  
  40bddd:	jmp    FWORD PTR [ebx+eax*4]
  40bde0:	add    BYTE PTR [ecx-0x2e00ff34],ch
  40bde6:	sbb    esi,esi
  40bde8:	jecxz  0x40bdb6
  40bdea:	inc    ebp
  40bdeb:	cmp    di,0x56
  40bdef:	mov    DWORD PTR [eax],eax
  40bdf1:	and    bh,bh
  40bdf3:	inc    DWORD PTR [eax]
  40bdf5:	fistp  DWORD PTR [eax+ebx*8-0x409b006c]
  40bdfc:	cmp    edi,0xf
  40bdff:	inc    DWORD PTR [ebx-0x7a]
  40be05:	sar    DWORD PTR [ecx+0x12],cl
  40be08:	test   DWORD PTR [ebx+0x97da],0xa9cc00bb
  40be12:	add    BYTE PTR [ebx-0x3ef39a34],al
  40be18:	add    bh,bh
  40be1a:	loope  0x40be42
  40be1c:	(bad)  
  40be1d:	call   FWORD PTR [esi]
  40be1f:	add    bh,bh
  40be21:	ror    BYTE PTR [ecx+0x1238ff83],cl
  40be27:	inc    esp
  40be28:	sbb    eax,0xa119ff
  40be2d:	add    BYTE PTR [ebp-0x1],ch
  40be30:	int3   
  40be31:	pop    ebp
  40be32:	add    BYTE PTR [ecx+0x3f56e700],cl
  40be38:	and    eax,0xecdeff
  40be3d:	dec    DWORD PTR [edi+edi*8+0x8976ff]
  40be44:	xor    DWORD PTR [ebx+0x70856],0x1b
  40be4b:	or     bh,bh
  40be4d:	int3   
  40be4e:	add    BYTE PTR fs:[eax],al
  40be51:	or     DWORD PTR [ecx+0x3a80ff89],0xffffffb8
  40be58:	out    dx,al
  40be59:	dec    ebp
  40be5b:	sub    al,0xff
  40be5d:	push   DWORD PTR [edi]
  40be5f:	add    BYTE PTR [ecx-0x7600e0],cl
  40be65:	scas   al,BYTE PTR es:[edi]
  40be66:	lods   al,BYTE PTR ds:[esi]
  40be67:	aas    
  40be68:	call   0x4a00:0xe45100
  40be6f:	add    BYTE PTR [eax],al
  40be71:	add    BYTE PTR ds:[eax],al
  40be74:	(bad)  
  40be75:	fistp  QWORD PTR [ebp-0x23008eb7]
  40be7b:	mov    ds:0x83efffff,al
  40be80:	int3   
  40be81:	(bad)  
  40be82:	(bad)  
  40be83:	inc    DWORD PTR [eax]
  40be85:	aam    0xb8
  40be87:	dec    eax
  40be88:	xchg   edx,eax
  40be89:	push   DWORD PTR [ebx-0x20]
  40be8c:	inc    DWORD PTR [eax]
  40be8e:	rol    DWORD PTR [ebx-0x7c001500],1
  40be94:	(bad)  
  40be95:	mov    ebx,0xcc51897a
  40be9a:	push   ds
  40be9b:	je     0x40be9d
  40be9d:	int3   
  40be9e:	push   ebp
  40be9f:	inc    DWORD PTR [eax]
  40bea1:	dec    ecx
  40bea2:	add    BYTE PTR [ebx+0x2fccefcc],al
  40bea8:	mov    edi,0xccda5bcc
  40bead:	jmp    DWORD PTR [ebp+0x0]
  40beb0:	inc    DWORD PTR [ebp-0x3400ff7d]
  40beb6:	or     bh,BYTE PTR [ecx]
  40beb8:	sbb    bh,bh
  40beba:	call   0xff:0x1700ff8d
  40bec1:	ret    0xcc00
  40bec4:	cmp    DWORD PTR [esi+0x50],0xffffffb8
  40bec8:	inc    eax
  40bec9:	jmp    eax
  40becb:	jmp    0x264859
  40bed0:	add    BYTE PTR [ebx-0x19330001],ah
  40bed6:	mov    BYTE PTR [ecx-0x7],0x0
  40beda:	push   ebp
  40bedb:	mov    eax,0xff63ffff
  40bee0:	add    cl,bl
  40bee2:	(bad)  
  40bee3:	inc    DWORD PTR [ebx-0x5cb0a53e]
  40bee9:	mov    DWORD PTR [eax+0x16ffccd7],edi
  40beef:	(bad)  
  40bef0:	jmp    DWORD PTR [ebp+0x55838300]
  40bef6:	mov    esp,0xdb00f19b
  40befb:	sti    
  40befc:	add    BYTE PTR [ecx-0x6900ff90],cl
  40bf02:	add    BYTE PTR [eax],al
  40bf04:	int3   
  40bf05:	es add eax,0x7bff8efe
  40bf0b:	sub    al,0xff
  40bf0d:	add    BYTE PTR [ebp-0x1],bl
  40bf10:	jmp    DWORD PTR [ebp-0x7d]
  40bf13:	add    BYTE PTR [ecx+0x444cf4f5],cl
  40bf19:	call   FWORD PTR [ebp+ebx*2-0x1]
  40bf1d:	inc    DWORD PTR [edi-0x7cf40100]
  40bf23:	inc    DWORD PTR [eax]
  40bf25:	and    al,0x25
  40bf27:	or     al,0xe8
  40bf29:	dec    DWORD PTR [ecx-0x29]
  40bf2c:	add    BYTE PTR [eax],al
  40bf2e:	test   DWORD PTR [eax],eax
  40bf30:	int3   
  40bf31:	jo     0x40bf32
  40bf33:	(bad)  
  40bf34:	(bad)  
  40bf35:	jmp    0x1b032c
  40bf3a:	loop   0x40bf50
  40bf3c:	add    BYTE PTR [ebx-0x6133ffb0],al
  40bf42:	inc    DWORD PTR [eax]
  40bf44:	(bad)  
  40bf45:	out    dx,eax
  40bf46:	jmp    0xffa0:0x48ff63b7
  40bf4d:	dec    DWORD PTR [edi]
  40bf4f:	add    DWORD PTR [ebx-0x1c],0x6f
  40bf56:	pusha  
  40bf57:	aaa    
  40bf58:	pusha  
  40bf59:	and    edx,0xffffffd4
  40bf5c:	add    bh,bh
  40bf5e:	dec    esp
  40bf5f:	int3   
  40bf60:	call   DWORD PTR [ecx-0x7d]
  40bf63:	int3   
  40bf64:	call   DWORD PTR [edi]
  40bf66:	bound  eax,QWORD PTR [ebx-0x66]
  40bf69:	mov    DWORD PTR [esi],ebp
  40bf6b:	outs   dx,DWORD PTR ds:[esi]
  40bf6c:	add    BYTE PTR [eax],al
  40bf6e:	pop    ebx
  40bf6f:	add    bh,bh
  40bf71:	sbb    BYTE PTR [eax],al
  40bf73:	(bad)  
  40bf74:	inc    DWORD PTR [edx]
  40bf76:	lock fdivr DWORD PTR [esi-0x7d]
  40bf7a:	lds    ebx,FWORD PTR [ebp-0x76260100]
  40bf80:	call   DWORD PTR [edi-0x34]
  40bf83:	dec    DWORD PTR [ecx-0x6b387c15]
  40bf89:	call   ebx
  40bf8b:	bswap  esp
  40bf8d:	add    BYTE PTR [ebp-0x7c397c01],al
  40bf93:	(bad)  
  40bf94:	push   DWORD PTR [ecx-0xfdd286]
  40bf9a:	pop    eax
  40bf9b:	mov    ch,0xcc
  40bf9d:	xor    DWORD PTR [edx+0x0],0x0
  40bfa1:	pop    ebp
  40bfa2:	add    bh,bh
  40bfa4:	add    BYTE PTR [eax+0x96cb9],cl
  40bfaa:	inc    esp
  40bfab:	push   0xffffffff
  40bfad:	push   ecx
  40bfaf:	(bad)  
  40bfb0:	jmp    FWORD PTR [eax+0x268900ff]
  40bfb6:	mov    eax,ds:0xc2006603
  40bfbb:	sar    edi,0xff
  40bfbe:	popf   
  40bfbf:	int3   
  40bfc0:	mov    edi,esi
  40bfc2:	add    bh,bh
  40bfc4:	(bad)  
  40bfc5:	mov    ecx,0xff9db010
  40bfca:	sbb    DWORD PTR [edi+edi*8-0x34],esp
  40bfce:	aas    
  40bfcf:	add    bh,bh
  40bfd1:	ins    DWORD PTR es:[edi],dx
  40bfd2:	(bad)  
  40bfd3:	(bad)  
  40bfd4:	(bad)  
  40bfd5:	call   0xcc52c4d2
  40bfda:	fs inc esi
  40bfdc:	(bad)  
  40bfdd:	push   DWORD PTR [edi+edi*8+0xffa9ff]
  40bfe4:	add    BYTE PTR [ecx-0xe8eff9],al
  40bfea:	std    
  40bfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfec:	add    bh,bh
  40bfee:	rol    BYTE PTR [ebx-0x4d00],0xff
  40bff5:	adc    esi,DWORD PTR [eax-0x14]
  40bff8:	and    eax,0xff1925cc
  40bffd:	sbb    DWORD PTR [eax-0x6a0100],0xffffffff
  40c004:	(bad)  
  40c005:	mov    edx,0xccd6297a
  40c00a:	stc    
  40c00b:	cmp    al,0x0
  40c00d:	push   DWORD PTR [edi+0x0]
  40c010:	add    BYTE PTR [ecx+ecx*4-0x1],dh
  40c014:	add    BYTE PTR [edi],al
  40c016:	arpl   bx,si
  40c018:	jno    0x40c019
  40c01a:	dec    ebx
  40c01b:	dec    esi
  40c01c:	or     DWORD PTR [ecx-0x70ff00b0],0xffffff83
  40c023:	(bad)  
  40c024:	jmp    FWORD PTR [esi-0xab094f]
  40c02a:	daa    
  40c02b:	mov    edx,0x893dff89
  40c030:	add    BYTE PTR [ebp-0x4ff7c01],ah
  40c036:	xlat   BYTE PTR ds:[ebx]
  40c037:	outs   dx,BYTE PTR ds:[esi]
  40c038:	fcmovne st,st(4)
  40c03a:	push   edx
  40c03b:	ins    DWORD PTR es:[edi],dx
  40c03c:	cmp    edi,0x19
  40c03f:	add    bh,bh
  40c041:	pop    es
  40c042:	add    DWORD PTR [eax],0xffffffff
  40c045:	jmp    0x89bc7422
  40c04a:	mov    ebp,0x2affff8b
  40c04f:	int3   
  40c050:	(bad)  
  40c051:	sti    
  40c052:	add    bh,bh
  40c054:	add    BYTE PTR [eax-0x51],dl
  40c057:	aad    0x7d
  40c059:	sub    DWORD PTR [esi],0xfffffff3
  40c05c:	int3   
  40c05d:	call   DWORD PTR ds:0xfff6ff89
  40c063:	add    bh,bh
  40c065:	jge    0x40c04d
  40c067:	jbe    0x40c0df
  40c069:	mov    edx,esi
  40c06b:	inc    DWORD PTR ss:[eax]
  40c06e:	add    BYTE PTR [ebx-0xff757d],0x89
  40c075:	(bad)  
  40c076:	sbb    al,0x32
  40c078:	sub    al,0x0
  40c07a:	inc    esi
  40c07b:	add    bh,bh
  40c07d:	add    al,ch
  40c07f:	add    bh,bh
  40c081:	push   0xaeff00ff
  40c086:	mov    dh,0x30
  40c088:	push   edi
  40c089:	add    BYTE PTR [edi-0x2d],dh
  40c08c:	dec    esp
  40c08e:	mov    ds:0xff1600ff,eax
  40c093:	(bad)  
  40c094:	jmp    DWORD PTR [esi-0x76]
  40c097:	repz std 
  40c099:	inc    DWORD PTR [edx-0x43]
  40c09c:	(bad)  
  40c09d:	dec    DWORD PTR [eax+eax*1-0x33d934]
  40c0a4:	(bad)  
  40c0a5:	mov    ebx,0x2c0309
  40c0aa:	inc    ebx
  40c0ab:	(bad)  
  40c0ad:	inc    eax
  40c0af:	add    BYTE PTR [eax],al
  40c0b1:	daa    
  40c0b2:	add    BYTE PTR [ebx-0x13fd6434],al
  40c0b8:	lahf   
  40c0b9:	add    BYTE PTR [ecx+0x29],dh
  40c0bc:	inc    DWORD PTR [eax]
  40c0be:	adc    BYTE PTR [eax],al
  40c0c0:	int3   
  40c0c1:	pop    ebp
  40c0c2:	int3   
  40c0c3:	add    BYTE PTR [eax],al
  40c0c5:	inc    edi
  40c0c6:	rol    eax,0xbd
  40c0c9:	and    DWORD PTR [ebp-0x73],0x0
  40c0cd:	call   DWORD PTR [edx-0x14ff01]
  40c0d3:	add    BYTE PTR [eax],al
  40c0d5:	in     eax,dx
  40c0d6:	in     al,dx
  40c0d7:	(bad)  
  40c0d8:	out    dx,al
  40c0d9:	add    bl,cl
  40c0db:	call   0x8416c0e0
  40c0e0:	(bad)  
  40c0e1:	aas    
  40c0e2:	mov    DWORD PTR [ebx+0x59d03fff],eax
  40c0e8:	mov    ds:0xff33bb83,al
  40c0ed:	add    BYTE PTR [ecx-0x1],ch
  40c0f0:	mov    DWORD PTR [edi+edi*8+0x65e200ff],edi
  40c0f7:	xchg   ebp,eax
  40c0f8:	dec    eax
  40c0f9:	add    BYTE PTR [edi-0x6fff0093],cl
  40c0ff:	(bad)  
  40c100:	call   DWORD PTR [edi]
  40c102:	mov    DWORD PTR [eax],eax
  40c104:	add    dl,dh
  40c106:	mov    ds:0x4fcc2f34,al
  40c10b:	dec    edx
  40c10c:	int3   
  40c10d:	(bad)  
  40c10e:	fiadd  DWORD PTR [eax]
  40c110:	(bad)  
  40c111:	jmp    0x7aca44e2
  40c116:	xlat   BYTE PTR ds:[ebx]
  40c117:	mov    ch,0x2c
  40c119:	add    BYTE PTR [esi-0x35],ah
  40c11c:	add    bh,bh
  40c11e:	jmp    0xff468e22
  40c123:	(bad)  
  40c124:	dec    DWORD PTR [eax-0x11]
  40c127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c128:	lods   al,BYTE PTR ds:[esi]
  40c129:	add    ah,al
  40c12b:	fdivr  st,st(7)
  40c12d:	call   FWORD PTR [edx-0x76b20034]
  40c133:	cmp    edi,0xffffffdb
  40c136:	sbb    DWORD PTR [eax+0x63],0xffa88100
  40c13d:	mov    DWORD PTR [ecx+0xbe00ff],ebp
  40c143:	add    BYTE PTR [ebx+0x6c1a506e],al
  40c149:	add    al,ah
  40c14b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c14c:	inc    DWORD PTR [ebx-0x4400ff95]
  40c152:	add    bh,bh
  40c154:	jmp    DWORD PTR [ebp+0xd]
  40c157:	jl     0x40c10b
  40c159:	(bad)  
  40c15a:	mov    ecx,0x18ffff19
  40c15f:	add    BYTE PTR [eax],al
  40c161:	loope  0x40c163
  40c163:	mov    DWORD PTR [eax],eax
  40c165:	push   ebp
  40c166:	pop    es
  40c167:	scas   eax,DWORD PTR es:[edi]
  40c168:	inc    ebx
  40c169:	int3   
  40c16a:	or     ecx,edi
  40c16c:	cmp    edi,0xd
  40c16f:	(bad)  
  40c170:	call   DWORD PTR [ecx]
  40c172:	add    bh,bh
  40c174:	call   edx
  40c176:	add    BYTE PTR [edi],bh
  40c178:	or     al,0xff
  40c17a:	fst    QWORD PTR [ebx]
  40c17c:	(bad)  
  40c17d:	call   esp
  40c17f:	add    bh,bh
  40c181:	in     al,dx
  40c182:	add    DWORD PTR [ebx+0x67424fff],0xffffffe5
  40c189:	call   FWORD PTR [ecx-0x120000b0]
  40c18f:	add    bh,bh
  40c191:	fild   DWORD PTR [eax]
  40c193:	cmp    edi,0xffffffb3
  40c196:	aam    0x5e
  40c198:	dec    edi
  40c199:	push   DWORD PTR [edi+ebx*2-0x33d8ff01]
  40c1a0:	inc    DWORD PTR [esi-0x7d]
  40c1a3:	add    BYTE PTR [eax],al
  40c1a5:	call   0xff52acbb
  40c1aa:	pop    sp
  40c1ac:	dec    esp
  40c1ae:	pop    esp
  40c1af:	add    BYTE PTR [ebx-0x57],al
  40c1b5:	inc    esi
  40c1b6:	adc    ah,bl
  40c1b8:	xchg   bh,bh
  40c1ba:	loop   0x40c1b7
  40c1bc:	add    bh,bh
  40c1be:	push   ebp
  40c1bf:	add    BYTE PTR [eax],al
  40c1c1:	out    0xcc,al
  40c1c3:	(bad)  
  40c1c4:	call   DWORD PTR [edi+edx*8]
  40c1c7:	add    eax,0x861983f9
  40c1cc:	(bad)  
  40c1cd:	inc    ebp
  40c1cf:	add    bh,bh
  40c1d1:	add    eax,0x2783ff00
  40c1d6:	lahf   
  40c1d7:	into   
  40c1d8:	stos   BYTE PTR es:[edi],al
  40c1d9:	call   FWORD PTR [ebp+0x78]
  40c1dc:	int3   
  40c1dd:	push   DWORD PTR [edi+edi*8-0x7cffa800]
  40c1e4:	add    BYTE PTR [eax],cl
  40c1e6:	test   dh,0xa2
  40c1e9:	sub    edi,0x66
  40c1ec:	dec    esp
  40c1ee:	jecxz  0x40c1ef
  40c1f0:	add    cl,dl
  40c1f2:	(bad)  
  40c1f3:	dec    DWORD PTR [ecx+0x24883dc5]
  40c1f9:	add    BYTE PTR [ecx+0x36],dh
  40c1fc:	inc    DWORD PTR [ebx+0xb00008f]
  40c202:	int3   
  40c203:	inc    DWORD PTR [eax]
  40c205:	sbb    ch,0x9e
  40c208:	or     esp,0xffffffe5
  40c20b:	js     0x40c20d
  40c20d:	add    BYTE PTR [ebx+0x0],al
  40c210:	int3   
  40c211:	dec    eax
  40c212:	(bad)  
  40c213:	(bad)  
  40c214:	inc    DWORD PTR [esi+0x7c]
  40c217:	push   edi
  40c218:	adc    al,BYTE PTR [eax]
  40c21a:	jb     0x40c25c
  40c21c:	cmp    edi,0x62
  40c21f:	add    BYTE PTR [eax],al
  40c221:	pusha  
  40c222:	add    BYTE PTR [eax],al
  40c224:	dec    DWORD PTR [edi+0x44]
  40c227:	dec    edi
  40c228:	xor    ecx,esp
  40c22a:	mov    eax,0x120083fe
  40c22f:	(bad)  
  40c230:	inc    DWORD PTR [edx]
  40c232:	inc    DWORD PTR [ebx-0x9293701]
  40c238:	sub    al,0xff
  40c23a:	addr16 icebp 
  40c23c:	dec    DWORD PTR [ecx+0x4183ff43]
  40c242:	int3   
  40c243:	(bad)  
  40c244:	jmp    DWORD PTR [edx+ebx*8+0x4a]
  40c248:	or     bh,bh
  40c24a:	stc    
  40c24b:	xor    cl,BYTE PTR [ecx-0x7c005734]
  40c251:	call   0x5540c355
  40c256:	push   ds
  40c257:	cmp    cl,BYTE PTR [eax+0x0]
  40c25a:	imul   esi,DWORD PTR [ebp-0x1],0xffffff89
  40c25e:	out    0x83,al
  40c260:	add    BYTE PTR [edi-0x1],al
  40c263:	add    bh,bh
  40c265:	xor    DWORD PTR [eax-0x42005b96],ebp
  40c26b:	or     eax,0x838aff00
  40c270:	add    BYTE PTR [ecx],al
  40c272:	add    BYTE PTR [ebx+0x79968a89],al
  40c278:	mov    edi,edi
  40c27a:	mov    edx,0x9200ff4a
  40c27f:	add    BYTE PTR [ecx-0x33007cda],cl
  40c285:	pop    ds
  40c286:	jns    0x40c2e5
  40c288:	ins    DWORD PTR es:[edi],dx
  40c289:	add    bl,dh
  40c28b:	inc    ebx
  40c28c:	inc    DWORD PTR [eax]
  40c28e:	inc    DWORD PTR [ebx-0x7c4f01]
  40c294:	call   DWORD PTR [eax+edx*8]
  40c297:	fwait
  40c298:	inc    esp
  40c299:	(bad)  
  40c29a:	mov    ecx,0x6ff00f3
  40c29f:	(bad)  
  40c2a0:	jmp    FWORD PTR [edi-0x7d]
  40c2a3:	add    BYTE PTR [ebx+0x32e396ca],al
  40c2a9:	push   DWORD PTR [ebx-0x3b00ff6f]
  40c2af:	(bad)  
  40c2b0:	push   DWORD PTR [edx+0x0]
  40c2b3:	add    BYTE PTR [ebx+0x6653dedf],al
  40c2b9:	(bad)  
  40c2ba:	mov    ecx,0x47ff00d7
  40c2bf:	inc    DWORD PTR [eax]
  40c2c1:	cdq    
  40c2c2:	(bad)  
  40c2c3:	(bad)  
  40c2c4:	jmp    FWORD PTR [edx+eiz*1-0x63]
  40c2c8:	sar    bh,1
  40c2ca:	push   0x68
  40c2cc:	(bad)  
  40c2cd:	call   DWORD PTR [edi+edi*8-0x1100]
  40c2d4:	(bad)  
  40c2d5:	out    dx,al
  40c2d6:	jo     0x40c269
  40c2d8:	xchg   ecx,eax
  40c2d9:	call   DWORD PTR [esi-0x3e0033a2]
  40c2df:	add    ah,cl
  40c2e1:	push   ds
  40c2e2:	inc    DWORD PTR [eax]
  40c2e4:	(bad)  
  40c2e5:	mov    ebp,0xffaf26c3
  40c2ea:	inc    ebx
  40c2eb:	add    cl,ah
  40c2ed:	dec    DWORD PTR [edi-0x77]
  40c2f0:	(bad)  
  40c2f1:	jge    0x40c2f2
  40c2f3:	add    DWORD PTR [ebx-0x47a3ee7c],0xffffffff
  40c2fa:	cdq    
  40c2fb:	scas   al,BYTE PTR es:[edi]
  40c2fc:	(bad)  
  40c2fd:	inc    DWORD PTR ds:0x89cbffff
  40c303:	(bad)  
  40c304:	push   DWORD PTR [edi-0x67]
  40c307:	popa   
  40c308:	mov    dh,0x0
  40c30a:	adc    dl,BYTE PTR [esi+0x6500ff]
  40c310:	add    BYTE PTR [ebx],bl
  40c312:	add    DWORD PTR [eax],0xffffffff
  40c315:	mov    al,ds:0xd84bf8
  40c31a:	sbb    al,0x56
  40c31c:	add    DWORD PTR [ebx-0x34ff00b1],0xffffffff
  40c323:	inc    DWORD PTR [ebx-0x59346376]
  40c329:	call   FWORD PTR [ecx+0x16]
  40c32c:	(bad)  
  40c32d:	inc    DWORD PTR [edx-0x20337d]
  40c333:	cmp    edi,0xfffffff7
  40c336:	shr    BYTE PTR [edx-0x7ddb7c55],0xff
  40c33d:	int3   
  40c33e:	loopne 0x40c33f
  40c340:	xor    DWORD PTR [edx],0xffffffff
  40c343:	inc    DWORD PTR [eax]
  40c345:	test   al,0x8b
  40c347:	push   0xbb030037
  40c34c:	add    BYTE PTR [eax],al
  40c34e:	sahf   
  40c34f:	int3   
  40c350:	call   DWORD PTR [edx-0x7d]
  40c353:	(bad)  
  40c354:	jmp    edi
  40c356:	aaa    
  40c357:	sbb    BYTE PTR [eax+0x0],cl
  40c35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c35b:	mov    eax,DWORD PTR [eax]
  40c35d:	int3   
  40c35e:	dec    ecx
  40c35f:	add    DWORD PTR [ebx-0xfffc],0x5c
  40c366:	cli    
  40c367:	xchg   ebp,esp
  40c369:	jmp    DWORD PTR [edi+ebp*1-0x1]
  40c36d:	jmp    DWORD PTR [eax+eax*1]
  40c370:	call   FWORD PTR [ebp-0x7d]
  40c373:	add    bh,bh
  40c375:	aam    0xb
  40c377:	dec    esp
  40c378:	out    0x83,al
  40c37a:	or     DWORD PTR [edi],0xffffffff
  40c37d:	(bad)  
  40c37e:	jns    0x40c37f
  40c380:	int3   
  40c381:	and    eax,0xd3ccccff
  40c386:	ds stos BYTE PTR es:[edi],al
  40c388:	dec    eax
  40c389:	inc    eax
  40c38b:	jnp    0x40c310
  40c38d:	add    ch,dl
  40c38f:	(bad)  
  40c390:	call   DWORD PTR [ebx+0x0]
  40c393:	cmp    edi,0x10
  40c396:	imul   DWORD PTR [eax+0x56ecffeb]
  40c39c:	inc    DWORD PTR [eax]
  40c39e:	xchg   ebp,eax
  40c39f:	(bad)  
  40c3a0:	(bad)  
  40c3a1:	jg     0x40c3a2
  40c3a3:	mov    DWORD PTR [eax],eax
  40c3a5:	push   ecx
  40c3a6:	sub    eax,0x25ff1be6
  40c3ab:	sar    bh,1
  40c3ad:	add    BYTE PTR [esp+ecx*8-0x7d],bl
  40c3b1:	or     eax,DWORD PTR [ebx+0x59b2ccff]
  40c3b7:	push   ecx
  40c3b8:	xor    BYTE PTR [ebx-0x33007c12],al
  40c3be:	call   0x83:0xff1300ff
  40c3c5:	fisttp QWORD PTR [ebx+0x2]
  40c3c8:	cmc    
  40c3c9:	mov    DWORD PTR [eax+0x22],esp
  40c3cc:	dec    esp
  40c3ce:	xlat   BYTE PTR ds:[ebx]
  40c3cf:	add    BYTE PTR [eax],al
  40c3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d2:	or     DWORD PTR [ecx-0x46169700],0x1c
  40c3d9:	add    BYTE PTR [esi+0x1d],dh
  40c3dc:	add    bh,bh
  40c3de:	cs mov edi,edi
  40c3e1:	retf   
  40c3e2:	cmp    edi,0xffffffcc
  40c3e5:	loope  0x40c384
  40c3e7:	dec    edx
  40c3e8:	verr   WORD PTR [ebx+ebp*1-0x1]
  40c3ed:	int3   
  40c3ee:	cld    
  40c3ef:	add    bh,bh
  40c3f1:	adc    edi,edi
  40c3f3:	add    bh,bh
  40c3f5:	mov    esi,0xcc92cf41
  40c3fa:	dec    edi
  40c3fb:	ds dec esp
  40c3fe:	jbe    0x40c400
  40c400:	add    BYTE PTR [esi+0x0],cl
  40c403:	add    ah,cl
  40c405:	hlt    
  40c406:	dec    edi
  40c407:	cld    
  40c408:	in     al,dx
  40c409:	int3   
  40c40a:	adc    ecx,edi
  40c40c:	dec    esp
  40c40e:	test   BYTE PTR [ebx-0x337cd901],al
  40c414:	inc    ebp
  40c416:	jae    0x40c479
  40c418:	lods   eax,DWORD PTR ds:[esi]
  40c419:	add    dl,cl
  40c41b:	lds    eax,FWORD PTR [eax]
  40c41d:	dec    DWORD PTR [ebx-0x143400]
  40c423:	add    DWORD PTR [ebx-0x2ae172ba],0x0
  40c42a:	mov    ah,0x39
  40c42c:	inc    DWORD PTR [eax]
  40c42e:	xor    bh,bh
  40c430:	(bad)  
  40c431:	out    dx,al
  40c432:	int3   
  40c433:	inc    DWORD PTR [eax]
  40c435:	jle    0x40c471
  40c437:	mov    dh,0xff
  40c439:	(bad)  
  40c43a:	mov    ebx,0xccffff95
  40c43f:	int3   
  40c440:	jmp    FWORD PTR [esi+0x4700ffff]
  40c446:	mov    dl,0x55
  40c448:	add    bh,bh
  40c44a:	xchg   DWORD PTR [esi],edi
  40c44c:	(bad)  
  40c44d:	call   DWORD PTR [esp+ecx*8-0x1]
  40c451:	pushf  
  40c452:	inc    DWORD PTR [ebx+0x57a2f6ff]
  40c458:	sahf   
  40c459:	mov    DWORD PTR [ebx],eax
  40c45b:	push   cs
  40c45c:	dec    esp
  40c45e:	inc    ebp
  40c45f:	inc    DWORD PTR [eax]
  40c461:	addr16 add bh,bh
  40c464:	jmp    esi
  40c466:	(bad)  
  40c467:	cmc    
  40c468:	pop    ebp
  40c469:	and    DWORD PTR [ebp-0x127c7cb9],0x0
  40c470:	dec    DWORD PTR [eax+0x0]
  40c473:	(bad)  
  40c474:	dec    DWORD PTR [ecx+edi*8]
  40c477:	dec    eax
  40c478:	(bad)  
  40c47a:	scas   eax,DWORD PTR es:[edi]
  40c47b:	mov    dl,0xff
  40c47d:	sub    DWORD PTR [edi],0xffffffff
  40c480:	add    BYTE PTR [ebx-0x1],ch
  40c483:	add    bh,bh
  40c485:	mov    bl,0x7d
  40c487:	inc    esp
  40c488:	sar    bh,0x2e
  40c48b:	push   cs
  40c48c:	(bad)  
  40c48d:	(bad)  
  40c48e:	(bad)  
  40c490:	inc    DWORD PTR [edx]
  40c492:	add    bh,bh
  40c494:	inc    DWORD PTR [edx]
  40c496:	mov    ss,WORD PTR [edx-0x3b]
  40c499:	dec    DWORD PTR [ebp+0x63]
  40c49c:	add    bh,bh
  40c49e:	fwait
  40c49f:	(bad)  
  40c4a0:	call   FWORD PTR [edi-0x1]
  40c4a3:	cmp    edi,0x58
  40c4a6:	into   
  40c4a7:	(bad)  
  40c4a9:	add    BYTE PTR [ecx],bl
  40c4ab:	xor    eax,0xffe3ff00
  40c4b0:	jmp    DWORD PTR [esi]
  40c4b2:	add    bh,bh
  40c4b4:	add    dh,dh
  40c4b6:	add    BYTE PTR [eax],bh
  40c4b8:	or     BYTE PTR [eax],al
  40c4ba:	pop    esi
  40c4bb:	repz (bad) 
  40c4bd:	(bad)  
  40c4be:	jge    0x40c4c0
  40c4c0:	add    BYTE PTR [edi],ah
  40c4c2:	inc    DWORD PTR [eax]
  40c4c4:	(bad)  
  40c4c5:	mov    ecx,0xff66944d
  40c4ca:	lock pusha 
  40c4cc:	mov    edi,edi
  40c4ce:	inc    DWORD PTR gs:[ebx+0xffff69]
  40c4d5:	xlat   BYTE PTR ds:[ebx]
  40c4d6:	push   edx
  40c4d7:	stos   DWORD PTR es:[edi],eax
  40c4d8:	or     bh,bh
  40c4da:	ins    DWORD PTR es:[edi],dx
  40c4db:	jnp    0x40c4dc
  40c4dd:	add    ch,cl
  40c4df:	int3   
  40c4e0:	push   DWORD PTR [ebx+0x0]
  40c4e3:	dec    DWORD PTR [ecx-0x24e95eb3]
  40c4e9:	int3   
  40c4ea:	fnstcw WORD PTR [ebp-0xdf7634]
  40c4f0:	mov    DWORD PTR [esi+0x4c8383ff],ecx
  40c4f6:	sub    al,ch
  40c4f8:	jns    0x40c4f9
  40c4fa:	retf   0xff76
  40c4fd:	add    BYTE PTR [edi+edi*8+0x0],ah
  40c501:	mov    al,ds:0x1800ff00
  40c506:	(bad)  
  40c507:	xor    esi,DWORD PTR [esi+0x58bfff]
  40c50d:	(bad)  
  40c50e:	inc    BYTE PTR [eax]
  40c510:	sub    DWORD PTR [eax-0x24010000],0x68
  40c517:	xchg   ecx,eax
  40c518:	jle    0x40c49d
  40c51a:	push   0xa5ff00ff
  40c51f:	(bad)  
  40c520:	dec    DWORD PTR [ebp+0x46008300]
  40c526:	hlt    
  40c527:	aad    0xc
  40c529:	dec    DWORD PTR [ebp+eiz*2+0x0]
  40c52d:	add    BYTE PTR [ebp+0x0],dl
  40c530:	jmp    FWORD PTR [esi]
  40c532:	dec    esp
  40c534:	dec    ecx
  40c536:	mov    dl,0x3
  40c538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c539:	sbb    DWORD PTR [eax-0x29],0xffffffff
  40c53d:	jmp    DWORD PTR [eax+eax*1+0x0]
  40c541:	push   edx
  40c542:	inc    DWORD PTR [eax]
  40c544:	inc    DWORD PTR [edx]
  40c546:	imul   bl
  40c548:	pop    ss
  40c549:	add    ch,ah
  40c54b:	(bad)  
  40c54d:	dec    DWORD PTR [ebx-0x77]
  40c550:	(bad)  
  40c551:	jnp    0x40c4dc
  40c553:	add    BYTE PTR [eax],al
  40c555:	sti    
  40c556:	xchg   edx,eax
  40c557:	sahf   
  40c558:	sub    al,BYTE PTR [eax]
  40c55a:	popa   
  40c55b:	cmc    
  40c55c:	(bad)  
  40c55d:	push   DWORD PTR [eax]
  40c55f:	(bad)  
  40c560:	jmp    FWORD PTR [edi]
  40c562:	mov    edi,edi
  40c564:	inc    DWORD PTR [ebx-0x33b3bf8f]
  40c56a:	sub    ah,bl
  40c56c:	add    bh,bh
  40c56e:	add    edi,edi
  40c570:	add    BYTE PTR [ebp+0x408900cc],cl
  40c576:	into   
  40c577:	jbe    0x40c50f
  40c579:	jmp    FWORD PTR [edx+0x26]
  40c57c:	add    bh,bh
  40c57e:	mov    dl,0xff
  40c580:	dec    edx
  40c582:	(bad)  
  40c583:	inc    DWORD PTR [eax]
  40c585:	inc    ebp
  40c586:	clc    
  40c587:	xlat   BYTE PTR ds:[ebx]
  40c588:	rol    BYTE PTR [eax],cl
  40c58a:	and    BYTE PTR [esi],bl
  40c58c:	cmp    edi,0x32
  40c58f:	inc    DWORD PTR [ebx+0x83cc59]
  40c595:	pop    ecx
  40c596:	sbb    DWORD PTR [ebp-0x351ffab],esp
  40c59c:	inc    DWORD PTR [eax]
  40c59e:	sbb    al,BYTE PTR [eax]
  40c5a0:	dec    DWORD PTR [eax+0x0]
  40c5a3:	add    BYTE PTR [ecx-0x79d7f0f1],cl
  40c5a9:	add    al,cl
  40c5ab:	stos   BYTE PTR es:[edi],al
  40c5ac:	or     DWORD PTR [ecx+0x32ffff61],0x0
  40c5b3:	(bad)  
  40c5b4:	push   edi
  40c5b6:	push   esp
  40c5b7:	loopne 0x40c55e
  40c5b9:	add    BYTE PTR [eax+0x7100ff58],ch
  40c5bf:	mov    DWORD PTR [ebx-0x760000d7],eax
  40c5c5:	pop    ss
  40c5c6:	repz push eax
  40c5c8:	or     eax,0x5b6283
  40c5cd:	inc    DWORD PTR [ebx-0x79007d]
  40c5d3:	add    bh,bh
  40c5d5:	out    0x5f,al
  40c5d7:	inc    esp
  40c5d8:	jp     0x40c5d9
  40c5da:	ja     0x40c61a
  40c5dc:	inc    DWORD PTR [eax]
  40c5de:	ja     0x40c5df
  40c5e0:	inc    DWORD PTR [esi-0x627c0001]
  40c5e6:	imul   ebp,ecx,0x5e3d0048
  40c5ec:	add    ah,cl
  40c5ee:	adc    DWORD PTR [eax],eax
  40c5f0:	int3   
  40c5f1:	jle    0x40c5f3
  40c5f3:	add    bh,bh
  40c5f5:	and    al,0xaf
  40c5f7:	lea    esi,[ecx]
  40c5f9:	push   DWORD PTR [eax+0x1bff004b]
  40c5ff:	add    BYTE PTR [eax],al
  40c601:	add    BYTE PTR [eax],0x89
  40c604:	add    bl,cl
  40c606:	fstp   QWORD PTR [esi]
  40c608:	out    dx,eax
  40c609:	mov    DWORD PTR [esp+ebp*1-0xa40001],ebp
  40c610:	push   edi
  40c612:	add    bh,bh
  40c614:	int3   
  40c615:	push   ecx
  40c616:	stos   BYTE PTR es:[edi],al
  40c617:	mov    cl,0xba
  40c619:	jmp    FWORD PTR [esi-0x73]
  40c61c:	add    BYTE PTR [eax],al
  40c61e:	cmp    edi,edi
  40c620:	add    ch,ch
  40c622:	add    bh,bh
  40c624:	mov    DWORD PTR [ebp+0x66],ebx
  40c627:	pop    ecx
  40c628:	jg     0x40c62a
  40c62a:	jno    0x40c5e4
  40c62c:	add    bh,bh
  40c62e:	add    edi,edi
  40c630:	jmp    DWORD PTR [ebx]
  40c632:	(bad)  
  40c633:	(bad)  
  40c634:	inc    DWORD PTR [edx]
  40c636:	repz and BYTE PTR [edi+edi*8-0x37],bl
  40c63b:	pop    ss
  40c63c:	inc    DWORD PTR [eax]
  40c63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c63f:	dec    esp
  40c641:	aas    
  40c642:	add    BYTE PTR [eax],al
  40c644:	add    BYTE PTR [eiz*1+0x60ff0b67],dh
  40c64b:	xchg   edx,eax
  40c64c:	(bad)  
  40c64d:	call   FWORD PTR [eax-0xb00077]
  40c653:	(bad)  
  40c654:	dec    eax
  40c656:	je     0x40c61d
  40c658:	dec    ebp
  40c659:	call   FWORD PTR [esi-0x57c7622]
  40c65f:	cmp    edi,0xffffffc8
  40c662:	add    DWORD PTR [eax],0xffffffff
  40c665:	ins    DWORD PTR es:[edi],dx
  40c666:	xchg   esi,eax
  40c667:	mov    cl,0x87
  40c669:	call   DWORD PTR [esp+0xff]
  40c670:	(bad)  
  40c671:	jmp    0x5dc1:0x91ffcc00
  40c678:	add    BYTE PTR gs:[eax+esi*1+0x0],al
  40c67d:	call   DWORD PTR [edx+0x189ff]
  40c683:	int3   
  40c684:	dec    DWORD PTR [edi+esi*2-0x6]
  40c688:	ror    BYTE PTR [ecx-0x6a3c],0xda
  40c68f:	(bad)  
  40c690:	inc    DWORD PTR [ebp-0x7d]
  40c693:	dec    esp
  40c695:	xor    ecx,esi
  40c697:	ret    0xccec
  40c69a:	cwde   
  40c69b:	cs (bad) 
  40c69d:	(bad)  
  40c69e:	jnp    0x40c69f
  40c6a0:	inc    DWORD PTR [esi]
  40c6a2:	add    bh,bh
  40c6a4:	jmp    FWORD PTR [edx]
  40c6a6:	xchg   esp,eax
  40c6a7:	mov    ah,0x0
  40c6a9:	add    BYTE PTR ds:0x7affff9d,dh
  40c6af:	add    bh,bh
  40c6b1:	pop    ss
  40c6b2:	inc    DWORD PTR [ebx+0x17f66989]
  40c6b8:	in     eax,dx
  40c6b9:	(bad)  
  40c6ba:	jmp    0x8d4192ed
  40c6bf:	inc    DWORD PTR [eax]
  40c6c1:	(bad)  
  40c6c3:	inc    DWORD PTR [eax]
  40c6c5:	cmp    BYTE PTR [esi+ebx*4+0x246e007d],bl
  40c6cc:	add    bh,bh
  40c6ce:	push   0x78cc00
  40c6d3:	add    BYTE PTR [eax],al
  40c6d5:	mov    bh,0x7c
  40c6d7:	pop    ss
  40c6d8:	mov    es,WORD PTR [eax]
  40c6da:	repnz rol BYTE PTR [ebx-0xb400],1
  40c6e1:	jbe    0x40c6e2
  40c6e3:	add    bh,bh
  40c6e5:	ins    BYTE PTR es:[edi],dx
  40c6e6:	sub    eax,0x41fffbb7
  40c6eb:	ror    esp,0x0
  40c6ee:	adc    edi,edi
  40c6f0:	add    DWORD PTR [ebx],0xffffffcc
  40c6f3:	add    bh,bh
  40c6f5:	cmp    BYTE PTR [eax-0x19],ah
  40c6f8:	retf   
  40c6f9:	add    BYTE PTR [esi-0x41007c77],dh
  40c6ff:	mov    DWORD PTR [eax],eax
  40c701:	sbb    DWORD PTR [ecx+0x1ffe89ff],ecx
  40c707:	pop    edx
  40c708:	pop    ecx
  40c709:	int3   
  40c70a:	mov    dl,0x26
  40c70c:	(bad)  
  40c70d:	jmp    DWORD PTR [ecx-0x7d]
  40c710:	push   DWORD PTR [ebx-0x7d]
  40c713:	add    bh,bh
  40c715:	jae    0x40c77b
  40c717:	xchg   DWORD PTR [edi-0x7d],esp
  40c71a:	jmp    0x7a3fc803
  40c71f:	inc    DWORD PTR [eax]
  40c721:	js     0x40c723
  40c723:	add    BYTE PTR [eax],al
  40c725:	lods   al,BYTE PTR ds:[esi]
  40c726:	push   ebx
  40c727:	mov    eax,0xc6fdffac
  40c72c:	add    ah,cl
  40c72e:	pop    ds
  40c72f:	(bad)  
  40c730:	(bad)  
  40c731:	cli    
  40c732:	add    BYTE PTR [eax],al
  40c734:	jmp    DWORD PTR ds:0x83f9759a
  40c73a:	fadd   st,st(6)
  40c73c:	dec    esp
  40c73e:	test   al,0xff
  40c740:	add    dl,bl
  40c742:	inc    DWORD PTR [eax]
  40c744:	call   DWORD PTR [ebx]
  40c746:	and    esp,esp
  40c748:	cmc    
  40c749:	add    BYTE PTR [eax],al
  40c74b:	adc    eax,0x837e83ff
  40c750:	add    dh,dl
  40c752:	inc    DWORD PTR [eax]
  40c754:	push   DWORD PTR [edi+ecx*1+0xd00fb1f]
  40c75b:	pusha  
  40c75c:	inc    DWORD PTR [eax]
  40c75e:	inc    ebx
  40c75f:	mov    edi,edi
  40c761:	mov    edi,edi
  40c763:	or     DWORD PTR [ecx-0x141208e8],0x0
  40c76a:	xor    al,0x5a
  40c76c:	(bad)  
  40c76d:	(bad)  
  40c76e:	jns    0x40c76f
  40c770:	jmp    FWORD PTR [esi]
  40c772:	add    bh,bh
  40c774:	add    DWORD PTR [esi],0xfffffff7
  40c777:	pop    es
  40c778:	popa   
  40c779:	or     DWORD PTR [esi+0x31ccffc3],0xffffff83
  40c780:	add    BYTE PTR [edx-0x34],al
  40c783:	(bad)  
  40c784:	jmp    DWORD PTR [ecx]
  40c786:	xor    DWORD PTR [esi-0xb88ffad],ebp
  40c78c:	add    DWORD PTR [eax],0xffffff96
  40c78f:	(bad)  
  40c790:	push   DWORD PTR [esi+0x0]
  40c793:	add    BYTE PTR [ebx+0x39941a7c],al
  40c799:	add    BYTE PTR [eax+0x100ffd3],dh
  40c79f:	add    ah,cl
  40c7a1:	sub    bh,bh
  40c7a3:	add    BYTE PTR [eax],al
  40c7a5:	cmc    
  40c7a6:	aam    0x90
  40c7a8:	sar    edi,1
  40c7aa:	jmp    0x40c777
  40c7ac:	add    BYTE PTR [ebx+0x2600cc7b],al
  40c7b2:	inc    DWORD PTR [eax]
  40c7b4:	call   FWORD PTR [eax*8+0x1fff4502]
  40c7bb:	sbb    eax,0x8366ffcc
  40c7c0:	int3   
  40c7c1:	mov    ebp,0x4fffff83
  40c7c6:	shr    BYTE PTR [ebx-0x3f010002],1
  40c7cc:	add    bh,bh
  40c7ce:	add    al,0xff
  40c7d0:	int3   
  40c7d1:	lods   al,BYTE PTR ds:[esi]
  40c7d2:	dec    DWORD PTR [ecx-0x1c5f107d]
  40c7d8:	fs (bad) 
  40c7da:	mov    edx,0x81ff83f1
  40c7df:	inc    DWORD PTR [ebx-0xff3326]
  40c7e5:	clc    
  40c7e6:	xchg   ebx,eax
  40c7e7:	loope  0x40c81e
  40c7e9:	(bad)  
  40c7ea:	aas    
  40c7eb:	into   
  40c7ec:	add    bh,bh
  40c7ee:	pop    es
  40c7ef:	int3   
  40c7f0:	push   DWORD PTR [ecx+0x43000000]
  40c7f6:	(bad)
  40c7fa:	mov    ebp,0xf6ff89bb
  40c7ff:	inc    DWORD PTR [ebx-0x7c760084]
  40c805:	mov    ds:0x831e1c8c,al
  40c80a:	jl     0x40c7c2
  40c80c:	cmp    edi,0xffffffa2
  40c80f:	inc    DWORD PTR [eax]
  40c811:	jo     0x40c796
  40c813:	dec    DWORD PTR [ecx-0x2e514590]
  40c819:	jmp    FWORD PTR [ecx+0x35]
  40c81c:	dec    DWORD PTR [ecx+0x7700ffea]
  40c822:	cmp    edi,0xffffffff
  40c825:	jp     0x40c87e
  40c827:	cld    
  40c828:	out    0x89,eax
  40c82a:	sti    
  40c82b:	pop    ss
  40c82c:	(bad)  
  40c82d:	dec    DWORD PTR [edi-0xf5ff7d]
  40c833:	add    BYTE PTR [ebx-0x4b915999],al
  40c839:	add    ch,al
  40c83b:	add    DWORD PTR [eax],eax
  40c83d:	adc    DWORD PTR [eax],0xffffffff
  40c840:	int3   
  40c841:	inc    ebp
  40c842:	add    BYTE PTR [eax],al
  40c844:	add    cl,bl
  40c846:	cld    
  40c847:	push   ecx
  40c848:	rol    BYTE PTR [eax],1
  40c84a:	adc    eax,0x8bffff57
  40c84f:	add    ah,cl
  40c851:	mov    esi,0x7fffff00
  40c856:	jno    0x40c7ec
  40c858:	push   es
  40c859:	mov    DWORD PTR [edx-0x1],eax
  40c85c:	inc    DWORD PTR [eax]
  40c85e:	jnp    0x40c85f
  40c860:	jmp    FWORD PTR [edx+0x0]
  40c863:	cmp    edi,0x39
  40c866:	cmp    DWORD PTR [ebx],ecx
  40c868:	lock call FWORD PTR [edi-0x58]
  40c86c:	(bad)  
  40c86d:	dec    ebx
  40c86f:	inc    DWORD PTR [eax]
  40c871:	pop    edx
  40c872:	(bad)  
  40c873:	(bad)  
  40c874:	dec    DWORD PTR [edi]
  40c876:	pusha  
  40c877:	js     0x40c84a
  40c879:	jmp    DWORD PTR [ebx-0x720000b9]
  40c87f:	(bad)  
  40c880:	jmp    DWORD PTR [ebp+0x0]
  40c883:	int3   
  40c884:	add    BYTE PTR [eax-0x2267a9],bh
  40c88a:	fs call 0xffa0c85c
  40c890:	inc    DWORD PTR [ecx]
  40c892:	cmp    edi,0xffffffff
  40c895:	rcl    dl,1
  40c897:	or     al,0x22
  40c899:	adc    ecx,0xffffff90
  40c89c:	add    bh,bh
  40c89e:	or     edi,edi
  40c8a0:	dec    ebx
  40c8a2:	(bad)  
  40c8a3:	dec    esp
  40c8a5:	fldenv [ebx-0x16]
  40c8a8:	sar    bh,0x4
  40c8ab:	mov    esi,0x18ff83
  40c8b0:	jmp    DWORD PTR [edx]
  40c8b2:	inc    DWORD PTR [eax]
  40c8b4:	sub    DWORD PTR [esi-0x2e687e],0x7f
  40c8bb:	cmp    bh,bh
  40c8bd:	add    al,bl
  40c8bf:	or     DWORD PTR [ecx+0x89eb],0xffffffbe
  40c8c6:	mov    ch,BYTE PTR [ebp+0x34]
  40c8c9:	add    BYTE PTR [eax+0x25],bh
  40c8cc:	add    BYTE PTR [ebx-0x50007c36],al
  40c8d2:	inc    DWORD PTR [eax]
  40c8d4:	xor    DWORD PTR [ecx-0x2b6905],0xffffffc7
  40c8db:	lock add BYTE PTR [ebx+0x13ff897a],al
  40c8e2:	dec    esp
  40c8e4:	push   ecx
  40c8e6:	ret    
  40c8e7:	adc    eax,0xede2ff59
  40c8ec:	add    BYTE PTR [eax],al
  40c8ee:	in     al,dx
  40c8ef:	cmp    edi,0xffffffcf
  40c8f2:	inc    DWORD PTR [eax]
  40c8f4:	dec    DWORD PTR [ecx]
  40c8f6:	and    dl,ah
  40c8f8:	add    DWORD PTR [eax],0x68
  40c8fb:	add    BYTE PTR [bp+di-0x766d],al
  40c900:	dec    ebx
  40c902:	or     esp,0xffffffff
  40c905:	xlat   BYTE PTR ds:[ebx]
  40c906:	push   es
  40c907:	cwde   
  40c908:	adc    bh,bh
  40c90a:	dec    ebp
  40c90b:	sub    al,0xff
  40c90d:	jmp    DWORD PTR [ecx]
  40c90f:	(bad)  
  40c910:	jmp    DWORD PTR [esi+0x3fff0000]
  40c916:	outs   dx,DWORD PTR ds:[esi]
  40c917:	push   es
  40c918:	adc    eax,0xff9e44ff
  40c91d:	adc    DWORD PTR [ebp-0x800100],0xffffffff
  40c924:	push   DWORD PTR [ebx+edx*4+0x17]
  40c928:	push   cs
  40c929:	jmp    FWORD PTR [ebx]
  40c92b:	mov    BYTE PTR [ebx+0xff1bff],al
  40c931:	inc    esp
  40c932:	int3   
  40c933:	(bad)  
  40c934:	(bad)  
  40c935:	call   0xffb2c26a
  40c93a:	sbb    dh,BYTE PTR [ebx]
  40c93c:	add    bh,bh
  40c93e:	push   0xfdff00
  40c943:	cmp    edi,0x48
  40c946:	neg    BYTE PTR [ecx+0x618bfff8]
  40c94c:	add    BYTE PTR [ebx-0x5e00ffb6],al
  40c952:	int3   
  40c953:	add    DWORD PTR [eax],0xffffff9e
  40c956:	fild   QWORD PTR [edi]
  40c958:	sar    bh,cl
  40c95a:	jbe    0x40c9cc
  40c95c:	(bad)  
  40c95d:	call   FWORD PTR [edi-0x7d]
  40c960:	sub    DWORD PTR [edi],0x0
  40c963:	cmp    edi,0x2
  40c966:	mov    cl,0x28
  40c968:	inc    DWORD PTR [ebx+0xff1952]
  40c96e:	aaa    
  40c96f:	inc    DWORD PTR [eax]
  40c971:	scas   al,BYTE PTR es:[edi]
  40c972:	int3   
  40c973:	dec    esp
  40c975:	loopne 0x40c973
  40c977:	aas    
  40c978:	dec    DWORD PTR fs:[ecx-0x46ffff08]
  40c97f:	(bad)  
  40c980:	dec    DWORD PTR [ebx-0x7d]
  40c983:	inc    DWORD PTR [eax]
  40c985:	(bad)  
  40c986:	push   ebx
  40c987:	mov    ds:0xb17f8389,al
  40c98c:	(bad)  
  40c98d:	dec    DWORD PTR [ebx+0x2083ff]
  40c993:	(bad)  
  40c994:	(bad)  
  40c995:	ficom  WORD PTR [esi+0x7c00d181]
  40c99b:	das    
  40c99c:	add    DWORD PTR [eax],0x38
  40c99f:	add    bh,bh
  40c9a1:	lahf   
  40c9a2:	(bad)  
  40c9a3:	inc    DWORD PTR [eax]
  40c9a5:	test   BYTE PTR [ecx],dl
  40c9a7:	test   BYTE PTR [eax],bl
  40c9a9:	add    ch,ah
  40c9ab:	les    eax,FWORD PTR [eax]
  40c9ad:	add    BYTE PTR [esi-0x1],dl
  40c9b0:	add    BYTE PTR [ecx+0x76cc83cc],cl
  40c9b6:	lock and BYTE PTR [eax+eax*1-0xffc0e6],al
  40c9be:	xchg   bh,bh
  40c9c0:	sub    DWORD PTR [eax-0x1],0xffffffff
  40c9c4:	add    BYTE PTR [edx-0x7dff4f],ah
  40c9ca:	push   0x7a00cc8d
  40c9cf:	add    bh,bh
  40c9d1:	mov    ds:0x12000000,eax
  40c9d6:	jmp    0x40c9dc
  40c9d8:	(bad)  
  40c9d9:	(bad)  
  40c9da:	std    
  40c9db:	mov    al,BYTE PTR [eax]
  40c9dd:	int3   
  40c9de:	sti    
  40c9df:	mov    edi,edi
  40c9e1:	mov    al,ds:0x15ffffff
  40c9e6:	dec    eax
  40c9e7:	cmc    
  40c9e8:	sbb    edi,edi
  40c9ea:	scas   al,BYTE PTR es:[edi]
  40c9eb:	cli    
  40c9ec:	cmp    edi,0xffffffae
  40c9ef:	(bad)  
  40c9f0:	call   FWORD PTR ds:0x1dffff89
  40c9f6:	jae    0x40ca20
  40c9f8:	dec    esi
  40c9f9:	int3   
  40c9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9fb:	and    bh,bh
  40c9fd:	inc    DWORD PTR [esi-0x337c01]
  40ca03:	or     DWORD PTR [ecx+0x2fdf892b],0xffffffff
  40ca0a:	pop    ds
  40ca0b:	ss cmp edi,0x56
  40ca0f:	add    BYTE PTR [eax],al
  40ca11:	cmc    
  40ca12:	mov    edi,edi
  40ca14:	add    BYTE PTR [edx+ebx*4+0x57],dl
  40ca18:	es dec ebp
  40ca1b:	adc    DWORD PTR [eax],eax
  40ca1d:	add    BYTE PTR [eax+eax*1-0x1],bl
  40ca21:	mov    bh,bh
  40ca23:	inc    DWORD PTR [eax]
  40ca25:	jno    0x40c9b7
  40ca27:	pop    eax
  40ca28:	fcmove st,st(4)
  40ca2a:	loop   0x40caa4
  40ca2c:	(bad)  
  40ca2d:	jmp    FWORD PTR [ebx-0x7c96007d]
  40ca33:	add    BYTE PTR [eax],al
  40ca35:	pushf  
  40ca36:	(bad)  
  40ca37:	daa    
  40ca38:	cli    
  40ca39:	add    BYTE PTR [eax+0x19008976],ah
  40ca3f:	mov    edi,edi
  40ca41:	add    BYTE PTR gs:[eax],al
  40ca44:	add    BYTE PTR [ebx+0x839ef6],bh
  40ca4a:	fisttp DWORD PTR [edx+0x17ffff]
  40ca50:	add    BYTE PTR [ebx],dh
  40ca52:	add    BYTE PTR [ebx+0x7c906300],al
  40ca58:	loopne 0x40ca59
  40ca5a:	int    0xe6
  40ca5c:	add    BYTE PTR [ebx-0x49ff7c90],al
  40ca62:	or     esp,0xffffffff
  40ca65:	mov    ecx,0x2a3587
  40ca6a:	xor    al,0x1
  40ca6c:	int3   
  40ca6d:	mov    ebp,esi
  40ca6f:	add    DWORD PTR [eax],0x55
  40ca72:	(bad)  
  40ca73:	inc    DWORD PTR [eax]
  40ca75:	pop    ecx
  40ca76:	rcl    BYTE PTR [ecx+0x40],1
  40ca79:	call   FWORD PTR [ebp-0x1c]
  40ca7c:	or     esp,0xfffffff7
  40ca7f:	or     esp,0x5e
  40ca82:	mov    DWORD PTR [eax],eax
  40ca84:	push   DWORD PTR [edi]
  40ca86:	dec    esp
  40ca87:	xchg   edi,eax
  40ca88:	sub    BYTE PTR [eax],al
  40ca8a:	mov    edx,0x25ffff58
  40ca8f:	cmp    edi,0xffffff80
  40ca92:	add    ah,cl
  40ca94:	int3   
  40ca95:	mov    bl,0xad
  40ca97:	loopne 0x40ca99
  40ca99:	mov    DWORD PTR [edx-0x7a00ff3e],esp
  40ca9f:	(bad)  
  40caa0:	jmp    DWORD PTR [eax-0x37ffff7d]
  40caa6:	pop    esp
  40caa7:	stos   BYTE PTR es:[edi],al
  40caa8:	into   
  40caa9:	dec    eax
  40caab:	push   edi
  40caac:	add    BYTE PTR [eax],al
  40caae:	mov    eax,ds:0xff3e0000
  40cab3:	(bad)  
  40cab4:	dec    DWORD PTR [edi+0x166dbd]
  40caba:	test   DWORD PTR [esi-0x7d],eax
  40cabd:	add    BYTE PTR [ecx],dl
  40cabf:	add    BYTE PTR [ebx-0xff58],al
  40cac5:	push   esi
  40cac6:	clc    
  40cac7:	sbb    BYTE PTR [ecx],cl
  40cac9:	add    BYTE PTR [ecx],ch
  40cacb:	cmc    
  40cacc:	int3   
  40cacd:	call   eax
  40cacf:	int3   
  40cad0:	int3   
  40cad1:	cmp    al,0xff
  40cad3:	add    bh,bh
  40cad5:	dec    ebx
  40cad6:	lods   eax,DWORD PTR ds:[esi]
  40cad7:	dec    esi
  40cad8:	pop    ds
  40cad9:	add    DWORD PTR [edx],0xffffffe2
  40cadc:	mov    edi,edi
  40cade:	cli    
  40cadf:	(bad)  
  40cae0:	jmp    DWORD PTR [ebx+0x1200ccff]
  40cae6:	in     al,dx
  40cae7:	pop    ds
  40cae8:	aad    0x0
  40caea:	inc    edi
  40caeb:	cmp    eax,0x583ff
  40caf0:	add    BYTE PTR [esi+0x1c00ffcc],bl
  40caf6:	push   ebx
  40caf7:	sub    esi,DWORD PTR [eax-0x7c5bbe00]
  40cafd:	int3   
  40cafe:	dec    edx
  40caff:	inc    DWORD PTR [eax]
  40cb01:	cmp    bh,bh
  40cb03:	inc    DWORD PTR [eax]
  40cb05:	push   esi
  40cb06:	cmp    bl,BYTE PTR [edx]
  40cb08:	pop    ds
  40cb09:	mov    DWORD PTR [edi+0x51],ebp
  40cb0c:	add    bh,bh
  40cb0e:	mov    ch,0xff
  40cb10:	jmp    ecx
  40cb12:	add    BYTE PTR [eax],al
  40cb14:	add    BYTE PTR [esi-0xc0c926],ch
  40cb1a:	inc    esi
  40cb1b:	inc    DWORD PTR fs:[ebx-0x637c7cd7]
  40cb22:	add    BYTE PTR [eax],al
  40cb24:	add    BYTE PTR [esi+edi*1-0x27],al
  40cb28:	cmp    DWORD PTR [ebx-0x7cff7d1d],eax
  40cb2e:	loop   0x40cb2f
  40cb30:	adc    DWORD PTR [edi-0x4cff7c01],0xffffffda
  40cb37:	xchg   ecx,eax
  40cb38:	mov    bl,0x0
  40cb3a:	(bad)  
  40cb3b:	jns    0x40cb3c
  40cb3d:	dec    DWORD PTR [edi+edi*8-0x1]
  40cb41:	push   eax
  40cb42:	add    BYTE PTR [eax],al
  40cb44:	call   FWORD PTR [ecx]
  40cb46:	jmp    0xff79:0x9789873d
  40cb4d:	call   FWORD PTR [edx+0x0]
  40cb50:	mov    eax,edx
  40cb52:	mov    edi,edi
  40cb54:	add    BYTE PTR ds:0xffe536c2,dl
  40cb5a:	dec    edx
  40cb5b:	xor    edi,edi
  40cb5d:	add    al,al
  40cb5f:	mov    edi,edi
  40cb61:	std    
  40cb62:	(bad)  
  40cb63:	dec    DWORD PTR [ecx-0x51ff9667]
  40cb69:	add    BYTE PTR [eax-0x4fffff79],bl
  40cb6f:	mov    DWORD PTR [eax],eax
  40cb71:	sub    bh,bh
  40cb73:	(bad)  
  40cb74:	push   DWORD PTR [esi-0x3ba81]
  40cb7a:	daa    
  40cb7b:	bound  eax,QWORD PTR [eax]
  40cb7d:	jmp    FWORD PTR [ebx+eax*4-0x1]
  40cb81:	inc    edi
  40cb82:	or     esp,0xffffffff
  40cb85:	and    eax,0xa9ecf5
  40cb8a:	mov    WORD PTR [ebp-0xb80001],gs
  40cb90:	add    BYTE PTR [edi-0x1],ah
  40cb93:	add    BYTE PTR [ebx+0x617273a7],al
  40cb99:	add    BYTE PTR [esi+0x29],al
  40cb9c:	inc    DWORD PTR [eax]
  40cb9e:	je     0x40cb23
  40cba0:	dec    DWORD PTR ds:0xfc8900ff
  40cba6:	ss in  al,dx
  40cba8:	pop    ds
  40cba9:	dec    DWORD PTR [ecx-0x2f]
  40cbac:	inc    DWORD PTR [eax]
  40cbae:	ret    0xff
  40cbb1:	(bad)  
  40cbb2:	(bad)  
  40cbb3:	inc    DWORD PTR [eax]
  40cbb5:	aam    0xef
  40cbb7:	scas   eax,DWORD PTR es:[edi]
  40cbb8:	jne    0x40cbba
  40cbba:	jae    0x40cb8c
  40cbbc:	add    bh,bh
  40cbbe:	pop    ds
  40cbbf:	(bad)  
  40cbc0:	inc    DWORD PTR [esi]
  40cbc2:	cmp    edi,0xffffffff
  40cbc5:	mov    eax,0xffba6d0b
  40cbca:	push   esp
  40cbcb:	mov    ds:0x83c6ff83,al
  40cbd0:	add    BYTE PTR [edi],dh
  40cbd2:	inc    DWORD PTR [ebx-0x3cfc5101]
  40cbd8:	ins    BYTE PTR es:[edi],dx
  40cbd9:	add    BYTE PTR [ecx+0x4683ffda],dl
  40cbdf:	dec    esp
  40cbe1:	idiv   bh
  40cbe3:	(bad)  
  40cbe4:	jmp    FWORD PTR [esi]
  40cbe6:	push   0xffffffd0
  40cbe8:	icebp  
  40cbe9:	call   DWORD PTR [eax-0x42]
  40cbec:	inc    DWORD PTR [ebx-0x2f000045]
  40cbf2:	add    DWORD PTR [eax],0xffffffff
  40cbf5:	imul   DWORD PTR [edx-0x1d]
  40cbf8:	in     al,0x0
  40cbfa:	outs   dx,BYTE PTR ds:[esi]
  40cbfb:	addr16 (bad) 
  40cbfd:	jmp    FWORD PTR [edi+edi*8-0x34]
  40cc01:	jnp    0x40cc03
  40cc03:	(bad)  
  40cc04:	push   DWORD PTR [esi-0x23]
  40cc07:	scas   al,BYTE PTR es:[edi]
  40cc08:	lahf   
  40cc09:	sbb    DWORD PTR [edi+edx*1-0x820077],0x0
  40cc11:	clc    
  40cc12:	mov    edi,edi
  40cc14:	or     DWORD PTR [eax],0xd
  40cc17:	dec    eax
  40cc18:	jb     0x40cb9d
  40cc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc1b:	sub    eax,0xa9ff83
  40cc20:	add    ch,ch
  40cc22:	(bad)  
  40cc23:	inc    DWORD PTR [eax]
  40cc25:	mov    dh,0x62
  40cc27:	xchg   edx,eax
  40cc28:	mov    edx,0xff3705ff
  40cc2d:	and    ebx,0xffffffff
  40cc30:	jmp    DWORD PTR [ebx-0x73330001]
  40cc36:	cmp    DWORD PTR [ebx+ebx*8-0x1],ebp
  40cc3a:	stos   DWORD PTR es:[edi],eax
  40cc3b:	sbb    edi,edi
  40cc3d:	cmp    DWORD PTR [esi],0xffffff83
  40cc40:	inc    DWORD PTR [edi-0x25ff0001]
  40cc46:	add    ecx,eax
  40cc48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc49:	call   FWORD PTR [ebp+0x7afffff7]
  40cc4f:	add    BYTE PTR [eax],al
  40cc51:	loope  0x40cc52
  40cc53:	int3   
  40cc54:	call   DWORD PTR [esi+0x5d]
  40cc57:	out    dx,eax
  40cc58:	xor    bh,bh
  40cc5a:	jmp    0x70c4cbb9
  40cc5f:	add    DWORD PTR [eax],0x2
  40cc62:	add    BYTE PTR [eax],al
  40cc64:	add    bl,cl
  40cc66:	ja     0x40cc21
  40cc68:	(bad)  
  40cc69:	jmp    FWORD PTR [ecx]
  40cc6b:	add    al,0x0
  40cc6d:	(bad)  
  40cc6e:	mov    esp,0x8374ff00
  40cc73:	(bad)  
  40cc74:	dec    DWORD PTR [eax-0xafc288]
  40cc7a:	cmp    al,0x5e
  40cc7c:	add    BYTE PTR [ebx+0x1689ff0a],al
  40cc82:	add    DWORD PTR [eax],0x0
  40cc85:	add    esi,DWORD PTR ds:0xc1cc30fa
  40cc8b:	test   DWORD PTR [eax],0xffff0000
  40cc91:	inc    ecx
  40cc92:	mov    DWORD PTR [eax],eax
  40cc94:	int3   
  40cc95:	imul   edx,DWORD PTR [edi],0xffffffeb
  40cc98:	mov    al,ds:0xfff7dcff
  40cc9d:	inc    DWORD PTR ds:0xffffffff
  40cca3:	add    bh,bh
  40cca5:	mov    eax,0x4118d7
  40ccaa:	jae    0x40ccbe
  40ccac:	add    BYTE PTR [eax],al
  40ccae:	sar    edi,0x83
  40ccb1:	or     bh,bh
  40ccb3:	int3   
  40ccb4:	add    DWORD PTR [edx],0xffffffa6
  40ccb7:	scas   al,BYTE PTR es:[edi]
  40ccb8:	cmp    eax,0x83a9b800
  40ccbd:	dec    DWORD PTR [ebx-0x1]
  40ccc0:	add    al,ah
  40ccc2:	inc    DWORD PTR [ebx-0x7f64c000]
  40ccc8:	mov    edi,0xffec4b00
  40cccd:	jmp    DWORD PTR [ebx-0x7d]
  40ccd0:	call   ebp
  40ccd2:	add    BYTE PTR [eax],al
  40ccd4:	jmp    FWORD PTR [eax+0x61]
  40ccd7:	iret   
  40ccd8:	mov    cl,0xff
  40ccda:	xchg   edi,eax
  40ccdb:	cmp    edi,edi
  40ccdd:	add    BYTE PTR [edi+edi*8-0x7c76e301],dh
  40cce4:	add    BYTE PTR [esi-0x65],al
  40cce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cce8:	inc    ebp
  40cce9:	call   DWORD PTR [ebx+0x14]
  40ccec:	(bad)  
  40cced:	call   esp
  40ccef:	add    BYTE PTR [ebx-0x7cff76a5],al
  40ccf5:	mov    ecx,0xffc1b5dc
  40ccfa:	add    eax,0x2000005a
  40ccff:	add    bh,bh
  40cd01:	xchg   edx,eax
  40cd02:	mov    DWORD PTR [eax],eax
  40cd04:	xor    esp,0x2a
  40cd07:	jo     0x40ccd0
  40cd09:	xor    DWORD PTR [edi],0x22
  40cd0c:	(bad)  
  40cd0d:	dec    DWORD PTR [ecx]
  40cd0f:	int3   
  40cd10:	add    BYTE PTR [edx+0x0],al
  40cd13:	add    bh,bh
  40cd15:	dec    esp
  40cd16:	loope  0x40cd96
  40cd18:	jb     0x40cd1a
  40cd1a:	push   0xa200005b
  40cd1f:	mov    DWORD PTR [eax],eax
  40cd21:	mov    ?,edi
  40cd23:	add    BYTE PTR [eax],al
  40cd25:	adc    eax,0x2224d
  40cd2a:	cmp    DWORD PTR [esi+0x0],edx
  40cd2d:	add    BYTE PTR [esi-0x1],al
  40cd30:	inc    DWORD PTR [edi+edi*8]
  40cd33:	inc    DWORD PTR [eax]
  40cd35:	jle    0x40ccc2
  40cd37:	fwait
  40cd38:	push   ss
  40cd39:	call   FWORD PTR ds:0x13cc83c6
  40cd3f:	inc    DWORD PTR [ebx+0x83890c]
  40cd45:	adc    DWORD PTR [ebx],edi
  40cd47:	jno    0x40cd1e
  40cd49:	cmp    ecx,0x0
  40cd4c:	inc    DWORD PTR [eax]
  40cd4e:	call   0xffff:0xff0e0083
  40cd55:	out    0x8e,al
  40cd57:	adc    DWORD PTR [eax-0x1],0x6a
  40cd5b:	xchg   edx,eax
  40cd5c:	inc    DWORD PTR [eax]
  40cd5e:	stos   DWORD PTR es:[edi],eax
  40cd5f:	inc    DWORD PTR [eax]
  40cd61:	fs add bh,bh
  40cd64:	add    BYTE PTR [ebp+0x25],dl
  40cd67:	(bad)  
  40cd68:	fcos   
  40cd6a:	fcom   st(1)
  40cd6c:	(bad)  
  40cd6d:	call   DWORD PTR [ecx-0x1]
  40cd70:	jmp    DWORD PTR [edi+edi*8-0x1]
  40cd74:	add    dh,dl
  40cd76:	mov    BYTE PTR [eax-0x2d37fff4],dl
  40cd7c:	int3   
  40cd7d:	(bad)  
  40cd7e:	jns    0x40cd03
  40cd80:	add    BYTE PTR [ecx+0x0],cl
  40cd83:	(bad)  
  40cd84:	dec    ecx
  40cd86:	shr    BYTE PTR [edx],0xe5
  40cd89:	(bad)  
  40cd8a:	cmp    al,0xbe
  40cd8c:	add    BYTE PTR [ecx-0x7700ffc5],cl
  40cd92:	inc    DWORD PTR [eax]
  40cd94:	mov    DWORD PTR [edi+0x61],edi
  40cd97:	add    eax,DWORD PTR [edi-0x335577]
  40cd9d:	int3   
  40cd9e:	sbb    eax,0xcc3e00ff
  40cda3:	(bad)  
  40cda4:	inc    DWORD PTR [edx-0x2e]
  40cda7:	inc    ebx
  40cda8:	inc    ecx
  40cda9:	add    BYTE PTR [ebx+eax*1],bl
  40cdac:	mov    DWORD PTR [eax],eax
  40cdae:	stos   BYTE PTR es:[edi],al
  40cdaf:	dec    DWORD PTR [ebx+0x48c00097]
  40cdb5:	(bad)  
  40cdb7:	fld    QWORD PTR [ebx+0xcca8cc]
  40cdbd:	dec    esp
  40cdbf:	add    BYTE PTR [edx+0x7df2000e],bl
  40cdc5:	test   eax,0xffbe4e
  40cdca:	pop    edx
  40cdcb:	cmp    edi,0xffffffff
  40cdce:	add    ah,cl
  40cdd0:	loope  0x40cd75
  40cdd2:	add    BYTE PTR [edi+0x8],bh
  40cdd5:	(bad)  
  40cdd6:	call   0x2641cd23
  40cddb:	add    ah,cl
  40cddd:	int3   
  40cdde:	add    bh,bh
  40cde0:	push   edi
  40cde1:	cmc    
  40cde2:	jmp    DWORD PTR [eax*2-0x7cc7e80a]
  40cde9:	mov    DWORD PTR [ebx],eax
  40cdeb:	(bad)  
  40cdec:	inc    DWORD PTR [eax]
  40cdee:	inc    DWORD PTR [ebx+0x4700f98a]
  40cdf4:	mov    ebx,0x83023ec5
  40cdf9:	add    BYTE PTR [ebx-0xff0100],dl
  40cdff:	dec    DWORD PTR [ebx-0x4eb1ff99]
  40ce05:	xchg   ecx,eax
  40ce06:	clc    
  40ce07:	push   edx
  40ce08:	inc    DWORD PTR [eax]
  40ce0a:	cmp    edi,edi
  40ce0c:	int3   
  40ce0d:	dec    esp
  40ce0f:	add    ah,ch
  40ce11:	lahf   
  40ce12:	add    BYTE PTR ds:0xbf3f69,ah
  40ce18:	mov    esp,ecx
  40ce1a:	mov    BYTE PTR [eax],0xcc
  40ce1d:	cmp    edi,0x0
  40ce20:	pop    esi
  40ce21:	jmp    FWORD PTR ds:[ebx]
  40ce24:	push   0xcc50bf00
  40ce29:	add    BYTE PTR [eax-0x10000],dh
  40ce2f:	add    BYTE PTR [ebx+esi*4],ah
  40ce32:	add    BYTE PTR [esi-0x12fbc2e6],cl
  40ce38:	mov    DWORD PTR [eax],eax
  40ce3a:	out    dx,eax
  40ce3b:	cmp    edi,0xffffffff
  40ce3e:	(bad)  
  40ce3f:	call   DWORD PTR [eax-0x309300d3]
  40ce45:	leave  
  40ce46:	cwde   
  40ce47:	test   BYTE PTR [eax],0x0
  40ce4a:	cmp    al,BYTE PTR [eax]
  40ce4c:	cmp    edi,0x0
  40ce4f:	add    bh,ch
  40ce51:	push   cs
  40ce52:	dec    DWORD PTR [edx+0x5cf83b18]
  40ce58:	add    BYTE PTR [eax],al
  40ce5a:	in     al,dx
  40ce5b:	int3   
  40ce5c:	mov    edi,edi
  40ce5e:	add    bh,bh
  40ce60:	pushf  
  40ce61:	aas    
  40ce62:	(bad)  
  40ce63:	stc    
  40ce64:	test   ebp,edx
  40ce66:	out    dx,eax
  40ce67:	(bad)  
  40ce68:	(bad)  
  40ce69:	call   DWORD PTR [edi+edi*8+0x838900]
  40ce70:	or     ch,BYTE PTR [ecx+0x266ebff]
  40ce76:	push   edi
  40ce77:	add    BYTE PTR ds:[eax],al
  40ce7a:	cwde   
  40ce7b:	inc    DWORD PTR [ebx-0x5b00ff77]
  40ce81:	push   eax
  40ce82:	mov    esi,eax
  40ce84:	or     DWORD PTR [edx+0xff4ee0],0xffcc006c
  40ce8e:	cmp    edi,0x35
  40ce91:	(bad)  
  40ce93:	repnz rcr BYTE PTR [eax],cl
  40ce96:	xchg   dl,al
  40ce98:	inc    DWORD PTR [ebx-0x7c76a9]
  40ce9e:	(bad)  
  40ce9f:	inc    DWORD PTR [eax]
  40cea1:	inc    esp
  40cea2:	add    BYTE PTR [edx+0x4b],dh
  40cea5:	and    edx,DWORD PTR [ecx]
  40cea7:	add    DWORD PTR [eax],eax
  40cea9:	(bad)  
  40ceaa:	cmp    eax,DWORD PTR [eax]
  40ceac:	dec    DWORD PTR [ecx+0x2a84ffff]
  40ceb2:	add    BYTE PTR [eax+0x6dd3093c],cl
  40ceb8:	add    BYTE PTR [eax],al
  40ceba:	mov    dl,0x0
  40cebc:	add    BYTE PTR [eax],al
  40cebe:	(bad)  
  40cebf:	jmp    DWORD PTR [esi-0x62a3ff42]
  40cec5:	mov    ah,bl
  40cec7:	sbb    eax,0xe500ff
  40cecc:	(bad)  
  40cecd:	dec    DWORD PTR [ecx-0xc2e600]
  40ced3:	addr16 adc al,0x5d
  40ced6:	mov    dl,0x51
  40ced8:	add    DWORD PTR [eax],0xffffff8e
  40cedb:	(bad)  
  40cedc:	inc    DWORD PTR [ebx-0x1ac47d00]
  40cee2:	push   DWORD PTR [ecx-0x6]
  40cee5:	clc    
  40cee6:	loope  0x40cecc
  40cee8:	inc    DWORD PTR [eax]
  40ceea:	mov    bh,0x0
  40ceec:	add    bh,bh
  40ceee:	add    BYTE PTR [ebx-0x3a001bfc],al
  40cef4:	clc    
  40cef5:	das    
  40cef6:	sub    DWORD PTR [esp+ecx*8],esp
  40cef9:	int3   
  40cefa:	push   eax
  40cefb:	int3   
  40cefc:	add    bh,bh
  40cefe:	add    BYTE PTR [eax],al
  40cf00:	test   al,0x54
  40cf02:	add    BYTE PTR [ecx],ch
  40cf04:	int3   
  40cf05:	test   DWORD PTR [edx+0x2a89ff16],0xffffff
  40cf0f:	int3   
  40cf10:	mov    al,BYTE PTR [ebx-0x315b0d00]
  40cf16:	(bad)  
  40cf17:	mov    ah,0xcc
  40cf19:	call   DWORD PTR [eax+eax*1-0x76ffff01]
  40cf20:	dec    ebp
  40cf21:	adc    esp,ecx
  40cf23:	mov    ch,0xe8
  40cf25:	push   0xf
  40cf27:	das    
  40cf28:	add    BYTE PTR [eax],al
  40cf2a:	mov    edi,?
  40cf2c:	inc    DWORD PTR [eax]
  40cf2e:	mov    edi,edi
  40cf30:	dec    eax
  40cf31:	rol    BYTE PTR [eax],1
  40cf33:	aad    0x9a
  40cf35:	mov    bh,0xa1
  40cf37:	mov    eax,0x1fff00
  40cf3c:	inc    DWORD PTR [eax]
  40cf3e:	mov    DWORD PTR [eax],eax
  40cf40:	pop    ebp
  40cf41:	cmp    edi,edi
  40cf43:	xor    DWORD PTR [edi],edx
  40cf45:	frstor gs:[ecx-0x38ff01]
  40cf4c:	add    BYTE PTR [eax],al
  40cf4e:	(bad)  
  40cf4f:	call   FWORD PTR [ecx+ebx*8+0x0]
  40cf53:	in     al,dx
  40cf54:	xchg   edi,eax
  40cf55:	xor    eax,0xcc00e180
  40cf5a:	jb     0x40cf5b
  40cf5c:	inc    DWORD PTR [eax]
  40cf5e:	add    BYTE PTR [eax],al
  40cf60:	lahf   
  40cf61:	fild   WORD PTR [eax]
  40cf63:	pop    ecx
  40cf64:	ficom  WORD PTR [esi]
  40cf66:	xchg   edi,eax
  40cf67:	inc    ebx
  40cf68:	int3   
  40cf69:	and    DWORD PTR [ebx+eax*4+0x89],0xffffffaa
  40cf71:	rol    DWORD PTR [eax],0xf5
  40cf74:	mov    WORD PTR [ebx+0x83a934],gs
  40cf7a:	es add bh,bh
  40cf7d:	(bad)  
  40cf7e:	inc    DWORD PTR [eax]
  40cf80:	and    eax,0x615000ce
  40cf85:	xchg   DWORD PTR [edx+0x5d],esi
  40cf88:	add    bh,bh
  40cf8a:	cmp    al,0xff
  40cf8c:	inc    DWORD PTR [eax]
  40cf8e:	inc    DWORD PTR [eax]
  40cf90:	and    edi,DWORD PTR [ebx+0x412fd0ff]
  40cf96:	rcr    BYTE PTR [ebp+0x2e8383],0x0
  40cf9d:	inc    DWORD PTR [eax]
  40cf9f:	jmp    FWORD PTR [ebp+0x6b1989f4]
  40cfa5:	mov    edx,0x89891ad2
  40cfaa:	adc    edi,edi
  40cfac:	inc    DWORD PTR [eax]
  40cfae:	add    bh,bh
  40cfb0:	js     0x40cfa0
  40cfb2:	add    BYTE PTR [ebx-0x37],ch
  40cfb5:	jnp    0x40cfaf
  40cfb7:	inc    edi
  40cfb8:	add    ah,cl
  40cfba:	mov    ds:0x8383ffff,al
  40cfbf:	add    BYTE PTR [esi-0x11e57c60],ah
  40cfc5:	std    
  40cfc6:	stos   BYTE PTR es:[edi],al
  40cfc7:	stos   DWORD PTR es:[edi],eax
  40cfc8:	(bad)  
  40cfc9:	dec    DWORD PTR ds:0xff0000ff
  40cfcf:	(bad)  
  40cfd0:	cmp    al,0x2a
  40cfd2:	add    BYTE PTR [ebp-0x22],ch
  40cfd5:	and    DWORD PTR [edi+esi*4-0x1],0xffffffff
  40cfda:	das    
  40cfdb:	add    DWORD PTR [eax],0xffffffff
  40cfde:	add    bh,bh
  40cfe0:	add    eax,0xad9300eb
  40cfe5:	fsubr  st,st(6)
  40cfe7:	cmp    al,0x83
  40cfe9:	add    ch,ch
  40cfeb:	add    BYTE PTR [eax],al
  40cfed:	inc    DWORD PTR [ebx-0x1b5901]
  40cff3:	add    DWORD PTR [ebx],0x1e
  40cff6:	xchg   esp,eax
  40cff7:	jge    0x40cff8
  40cff9:	push   eax
  40cffb:	inc    DWORD PTR [eax]
  40cffd:	inc    DWORD PTR [eax]
  40cfff:	(bad)  
  40d000:	mov    esi,0xb437ff60
  40d005:	pop    ecx
  40d006:	call   0x1e405963
  40d00b:	(bad)  
  40d00c:	(bad)  
  40d00d:	(bad)  
  40d00e:	(bad)  
  40d00f:	push   DWORD PTR [edx]
  40d011:	(bad)  
  40d012:	dec    esi
  40d014:	push   0x16
  40d016:	ss mov dh,0xff
  40d019:	push   DWORD PTR [edi-0x1]
  40d01c:	add    bh,bh
  40d01e:	cmp    edi,0x4
  40d021:	or     ah,0xe5
  40d024:	(bad)  
  40d025:	jno    0x40d07b
  40d027:	xor    al,BYTE PTR [eax]
  40d029:	cmp    DWORD PTR [esi],0xffffffff
  40d02c:	add    bh,bh
  40d02e:	inc    DWORD PTR [eax]
  40d030:	mov    edi,0x3725ff8d
  40d035:	mul    dl
  40d037:	ds add bh,bh
  40d03a:	add    eax,DWORD PTR [eax]
  40d03c:	(bad)  
  40d03d:	(bad)  
  40d03e:	dec    esp
  40d040:	imul   ebx,DWORD PTR [edi+edi*8-0x5cb873eb],0x7383ff29
  40d04b:	add    bh,bh
  40d04d:	add    bh,bh
  40d04f:	adc    DWORD PTR [ecx-0x393d7c7e],0xffffffa5
  40d056:	add    bl,0xff
  40d059:	dec    DWORD PTR [edx-0x7d]
  40d05c:	inc    DWORD PTR [eax]
  40d05e:	add    bh,bh
  40d060:	bnd jnp 0x40cfe6
  40d063:	push   cs
  40d064:	fbld   TBYTE PTR [edx]
  40d066:	fcom   QWORD PTR [ecx-0xc47700]
  40d06c:	add    BYTE PTR [eax],al
  40d06e:	add    bh,bh
  40d070:	stos   DWORD PTR es:[edi],eax
  40d071:	addr16 (bad) 
  40d073:	out    dx,eax
  40d074:	out    0xf6,eax
  40d076:	jns    0x40d09e
  40d078:	(bad)  
  40d079:	inc    DWORD PTR [ecx-0x330100]
  40d07f:	inc    DWORD PTR [eax]
  40d081:	jbe    0x40d082
  40d083:	or     eax,ebx
  40d085:	mov    DWORD PTR [esi],edx
  40d087:	inc    esp
  40d088:	add    DWORD PTR [eax],0x76
  40d08b:	add    ah,cl
  40d08d:	add    bh,bh
  40d08f:	add    dl,bl
  40d091:	pop    esp
  40d092:	mov    DWORD PTR [edx],esp
  40d094:	sub    edi,edi
  40d096:	ja     0x40d0e9
  40d098:	add    BYTE PTR [ebx-0x3300767c],al
  40d09e:	add    bh,bh
  40d0a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0a1:	fld    QWORD PTR [eax]
  40d0a3:	lahf   
  40d0a4:	and    al,0xb5
  40d0a6:	pop    esi
  40d0a7:	icebp  
  40d0a8:	(bad)  
  40d0a9:	call   DWORD PTR [ebp-0x1]
  40d0ac:	(bad)  
  40d0ad:	(bad)  
  40d0ae:	inc    DWORD PTR [eax]
  40d0b0:	pusha  
  40d0b1:	nop
  40d0b2:	inc    DWORD PTR [ebx]
  40d0b4:	call   0x1900:0xff4df314
  40d0bb:	inc    DWORD PTR [ebx-0x19000000]
  40d0c1:	push   cs
  40d0c2:	int3   
  40d0c3:	sub    DWORD PTR [edi+0x7f],eax
  40d0c6:	mov    ah,0xc6
  40d0c8:	(bad)  
  40d0c9:	call   FWORD PTR [ebx]
  40d0cb:	add    bh,bh
  40d0cd:	inc    DWORD PTR [eax]
  40d0cf:	(bad)  
  40d0d0:	cmp    BYTE PTR [ebx+0x7fed65ff],ch
  40d0d6:	or     cl,BYTE PTR [esi-0x76cf0001]
  40d0dc:	dec    esp
  40d0de:	add    BYTE PTR [ecx-0x127ca863],cl
  40d0e4:	mov    edi,0xff2b11c7
  40d0e9:	dec    DWORD PTR [ecx-0x1]
  40d0ec:	(bad)  
  40d0ed:	(bad)  
  40d0ee:	(bad)  
  40d0ef:	(bad)  
  40d0f0:	cmp    al,0xde
  40d0f2:	and    DWORD PTR [eax],0x2e
  40d0f5:	pusha  
  40d0f6:	lea    ecx,[edi-0x1]
  40d0f9:	add    BYTE PTR [esi-0x1],al
  40d0fc:	inc    DWORD PTR [eax]
  40d0fe:	add    BYTE PTR [eax],al
  40d100:	mov    dl,0x1f
  40d102:	add    BYTE PTR [ebp-0x59],dl
  40d105:	add    edi,esi
  40d107:	xlat   BYTE PTR ds:[ebx]
  40d108:	add    bh,bh
  40d10a:	mov    WORD PTR [eax],es
  40d10c:	mov    edi,edi
  40d10e:	inc    DWORD PTR [eax]
  40d110:	and    al,0x8
  40d112:	jmp    esp
  40d114:	aaa    
  40d115:	or     ebx,DWORD PTR [edi+0x22ff0059]
  40d11b:	add    BYTE PTR [eax],al
  40d11d:	add    BYTE PTR [eax],al
  40d11f:	int3   
  40d120:	mov    BYTE PTR [ebp+0x316e3cff],ah
  40d126:	dec    edi
  40d127:	loopne 0x40d128
  40d129:	add    BYTE PTR ds:0xffcc0000,bl
  40d12f:	dec    DWORD PTR [eax-0x78620090]
  40d135:	(bad)  
  40d136:	sbb    ebx,DWORD PTR [ecx-0x70ff01]
  40d13c:	add    BYTE PTR [ebx+0xfb7ff83],al
  40d142:	(bad)  
  40d143:	fld    TBYTE PTR [ecx+0x83c54f]
  40d149:	(bad)  
  40d14a:	cmp    al,0x0
  40d14c:	cmp    edi,0x0
  40d14f:	add    BYTE PTR ds:0x6bd200cb,bl
  40d155:	test   cl,0xd7
  40d158:	inc    DWORD PTR [eax]
  40d15a:	sub    al,0xff
  40d15c:	add    BYTE PTR [eax],al
  40d15e:	(bad)  
  40d15f:	jmp    DWORD PTR [ebp-0x74]
  40d162:	add    BYTE PTR [edi+0x7c],al
  40d165:	cs out dx,eax
  40d167:	imul   edi,edi,0xcc007183
  40d16d:	(bad)  
  40d16e:	inc    DWORD PTR [ebx+0x3eff48c6]
  40d174:	add    cl,bh
  40d176:	xor    DWORD PTR [edx],edx
  40d178:	dec    esp
  40d17a:	std    
  40d17b:	add    bh,bh
  40d17d:	add    bh,bh
  40d17f:	jmp    FWORD PTR [eax+0x11f1895c]
  40d185:	leave  
  40d186:	lock pop ds
  40d188:	add    BYTE PTR [eax],al
  40d18a:	adc    edi,edi
  40d18c:	add    DWORD PTR [eax],0xffffffff
  40d18f:	add    BYTE PTR [esi-0x413200dc],ah
  40d195:	int3   
  40d196:	jg     0x40d1ad
  40d198:	mov    edi,edi
  40d19a:	ret    0x89ff
  40d19d:	(bad)  
  40d19e:	dec    esp
  40d1a0:	or     esi,ecx
  40d1a2:	add    BYTE PTR [ecx],ah
  40d1a4:	stos   DWORD PTR es:[edi],eax
  40d1a5:	nop
  40d1a6:	mov    esi,0xc9890080
  40d1ab:	inc    DWORD PTR [ebx+0x19ccff00]
  40d1b1:	mov    ds:0x53d88d00,al
  40d1b6:	lods   eax,DWORD PTR ds:[esi]
  40d1b7:	sbb    edi,edi
  40d1b9:	jmp    ecx
  40d1bb:	add    BYTE PTR [eax],al
  40d1bd:	mov    edi,edi
  40d1bf:	inc    DWORD PTR [ebx+0x6ba2834b]
  40d1c5:	sbb    al,0x9c
  40d1c7:	mov    eax,0xffdb00ff
  40d1cc:	mov    DWORD PTR [eax],eax
  40d1ce:	inc    DWORD PTR [eax]
  40d1d0:	lds    esi,FWORD PTR [ebx+eax*4]
  40d1d3:	repnz xchg ebx,eax
  40d1d5:	test   eax,0x8f9c
  40d1da:	rol    BYTE PTR [eax],0xff
  40d1dd:	dec    esp
  40d1df:	call   DWORD PTR [eax-0x51f1ff21]
  40d1e5:	mov    al,ds:0x8900331f
  40d1ea:	and    al,0xff
  40d1ec:	(bad)  
  40d1ed:	(bad)  
  40d1ee:	(bad)  
  40d1ef:	jmp    edi
  40d1f1:	jbe    0x40d1f3
  40d1f3:	mov    eax,0xc74a767b
  40d1f8:	mov    DWORD PTR [eax],eax
  40d1fa:	(bad)  
  40d1fb:	int3   
  40d1fc:	add    bh,bh
  40d1fe:	int3   
  40d1ff:	jmp    DWORD PTR [ebx+0x528bffc0]
  40d205:	pop    ss
  40d206:	cmp    DWORD PTR [edi+0x0],edx
  40d209:	jmp    FWORD PTR [ecx-0x7d]
  40d20c:	dec    esp
  40d20e:	add    BYTE PTR [eax],al
  40d210:	outs   dx,BYTE PTR ds:[esi]
  40d211:	xlat   BYTE PTR ds:[ebx]
  40d212:	int3   
  40d213:	out    dx,al
  40d214:	jl     0x40d199
  40d216:	sbb    esp,DWORD PTR [eax]
  40d218:	cmp    edi,0xffffffd9
  40d21b:	int3   
  40d21c:	(bad)  
  40d21d:	dec    esp
  40d21f:	call   ebp
  40d221:	sti    
  40d222:	(bad)  
  40d223:	out    dx,al
  40d224:	adc    al,BYTE PTR [ebp-0x6e]
  40d227:	cmp    DWORD PTR [eax],eax
  40d229:	int3   
  40d22a:	adc    eax,0xff00ffcc
  40d22f:	inc    ebp
  40d231:	and    al,BYTE PTR [eax]
  40d233:	test   BYTE PTR [edx-0xa39f88],dh
  40d239:	call   FWORD PTR [eax-0x1]
  40d23f:	jmp    ebp
  40d241:	jmp    0x3010:0xcf6098cc
  40d248:	add    bh,bh
  40d24a:	retf   0xff00
  40d24d:	add    BYTE PTR [ebx-0x9ec100],al
  40d253:	bound  ebx,QWORD PTR [esi-0x76]
  40d256:	nop
  40d257:	(bad)  
  40d258:	add    BYTE PTR [eax],al
  40d25a:	and    cl,BYTE PTR [ecx-0x7cff7c01]
  40d260:	pop    esi
  40d261:	xchg   esi,eax
  40d262:	call   edi
  40d264:	push   ecx
  40d265:	mov    ecx,0xff1ca4
  40d26a:	push   esi
  40d26b:	(bad)  
  40d26c:	inc    DWORD PTR [ebx+0x648aff83]
  40d272:	push   DWORD PTR [esi+0x288d299f]
  40d278:	add    bh,bh
  40d27a:	out    dx,al
  40d27b:	(bad)  
  40d27c:	dec    esp
  40d27e:	add    BYTE PTR [eax],al
  40d280:	inc    bx
  40d282:	adc    DWORD PTR [edi-0x1],0x3d
  40d286:	sbb    eax,0xcb0089ed
  40d28b:	inc    DWORD PTR [eax]
  40d28d:	(bad)  
  40d28e:	(bad)  
  40d28f:	dec    DWORD PTR [eax-0x7c137c5f]
  40d295:	sti    
  40d296:	push   ss
  40d297:	xor    ecx,esp
  40d299:	add    BYTE PTR [eax+0x0],ch
  40d29c:	add    BYTE PTR [eax],al
  40d29e:	add    BYTE PTR [ebx+0x2200aa8f],al
  40d2a4:	in     eax,dx
  40d2a5:	sub    al,0x5c
  40d2a7:	dec    ebp
  40d2a8:	mov    DWORD PTR [ebx-0x7c00ffb1],eax
  40d2ae:	add    DWORD PTR [eax],0xffffff88
  40d2b1:	add    ecx,esp
  40d2b3:	lock pop esi
  40d2b5:	aaa    
  40d2b6:	aaa    
  40d2b7:	jp     0x40d2b9
  40d2b9:	add    BYTE PTR [ecx],al
  40d2bb:	inc    DWORD PTR [eax]
  40d2bd:	add    bh,bh
  40d2bf:	call   DWORD PTR [esi-0x1]
  40d2c2:	add    BYTE PTR [ecx+0x4248f0f6],ah
  40d2c8:	cmp    edi,0xffffffe4
  40d2cb:	(bad)  
  40d2cc:	(bad)  
  40d2cd:	inc    DWORD PTR [eax]
  40d2cf:	add    bh,bl
  40d2d1:	add    bh,bh
  40d2d3:	mov    edx,0x3ee56923
  40d2d8:	int3   
  40d2d9:	push   DWORD PTR [edi-0x100]
  40d2df:	cmp    DWORD PTR [ebx],0xffffff87
  40d2e2:	and    DWORD PTR [ebp+0x13c15789],0xffffff89
  40d2e9:	add    BYTE PTR [eax],bh
  40d2eb:	add    bh,bh
  40d2ed:	inc    DWORD PTR [eax]
  40d2ef:	add    dl,bh
  40d2f1:	push   0xa8c9c8ff
  40d2f6:	dec    edx
  40d2f7:	stos   DWORD PTR es:[edi],eax
  40d2f8:	add    BYTE PTR [eax],al
  40d2fa:	inc    ecx
  40d2fb:	dec    DWORD PTR [ecx-0x16007c01]
  40d301:	popf   
  40d302:	add    BYTE PTR [esi+0x56598159],ch
  40d308:	add    bh,bh
  40d30a:	into   
  40d30b:	add    BYTE PTR [eax],al
  40d30d:	cmp    edi,0xffffff83
  40d310:	pop    esp
  40d311:	mov    ebx,0x9e10faff
  40d316:	(bad)  
  40d317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d318:	add    bh,bh
  40d31a:	xchg   ebp,eax
  40d31b:	inc    DWORD PTR [eax]
  40d31d:	(bad)  
  40d31e:	inc    DWORD PTR [eax]
  40d320:	ss dec esp
  40d322:	(bad)  
  40d323:	(bad)  
  40d324:	mov    bl,0xdd
  40d326:	xor    edx,0x0
  40d329:	add    BYTE PTR [ecx+ecx*4],dh
  40d32c:	inc    DWORD PTR [ebx-0xc14007d]
  40d332:	jmp    FWORD PTR [ebx+esi*1]
  40d335:	mov    edi,DWORD PTR [ebx-0x1b]
  40d338:	int3   
  40d339:	push   DWORD PTR [eax+0x89ffff]
  40d33f:	add    BYTE PTR [ebx+0x65],cl
  40d342:	inc    eax
  40d344:	mov    ds:0x9b6e43,al
  40d349:	add    BYTE PTR ds:0xff00,bh
  40d34f:	add    bl,ah
  40d351:	sahf   
  40d352:	call   DWORD PTR [ecx+0x7]
  40d355:	test   al,0x7c
  40d357:	sbb    al,0xff
  40d359:	adc    DWORD PTR [edx-0x34],0xffffffff
  40d35d:	inc    DWORD PTR [ebx-0xb2f934]
  40d363:	loopne 0x40d357
  40d365:	loop   0x40d3a5
  40d367:	(bad)  
  40d368:	inc    DWORD PTR [eax]
  40d36a:	xor    al,0x0
  40d36c:	add    BYTE PTR [ecx-0x70d1ff01],cl
  40d372:	add    BYTE PTR [eax+0x3cf7935],cl
  40d378:	(bad)  
  40d379:	dec    DWORD PTR [esi]
  40d37b:	(bad)  
  40d37c:	(bad)  
  40d37d:	(bad)  
  40d37e:	dec    DWORD PTR [ecx+0x8fff71c]
  40d384:	fiadd  WORD PTR [bp+di-0x9a]
  40d389:	(bad)  
  40d38a:	aas    
  40d38b:	mov    DWORD PTR [ebx-0x3800007d],eax
  40d391:	das    
  40d392:	add    BYTE PTR [edi-0x3d2f7a1e],bl
  40d398:	add    bh,bh
  40d39a:	(bad)  
  40d39b:	inc    DWORD PTR [ebx-0x137cff01]
  40d3a1:	rol    BYTE PTR [eax],cl
  40d3a3:	enter  0x9eb1,0x8d
  40d3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3a8:	dec    DWORD PTR [ecx+0xff01]
  40d3ae:	mov    edi,edi
  40d3b0:	ret    
  40d3b1:	or     BYTE PTR [ecx+0x33087b33],0x9f
  40d3b8:	inc    DWORD PTR [eax]
  40d3ba:	mov    ecx,esp
  40d3bc:	add    BYTE PTR [ebx+0x3a72ffff],al
  40d3c2:	add    BYTE PTR [edi+0x66cc1df9],ch
  40d3c8:	(bad)  
  40d3c9:	push   ebx
  40d3cb:	inc    DWORD PTR [eax]
  40d3cd:	int3   
  40d3ce:	(bad)  
  40d3cf:	call   FWORD PTR [ecx+0x7338ffcb]
  40d3d5:	retf   0xcdf2
  40d3d8:	add    BYTE PTR [eax],al
  40d3da:	loope  0x40d3dc
  40d3dc:	add    BYTE PTR [eax],al
  40d3de:	(bad)  
  40d3df:	(bad)  
  40d3e0:	clc    
  40d3e1:	out    0x89,eax
  40d3e3:	data16 adc al,BYTE PTR [esi-0x7cffa029]
  40d3ea:	cmp    DWORD PTR [ebx-0x7600ff01],eax
  40d3f0:	loope  0x40d3a1
  40d3f2:	add    ah,dh
  40d3f4:	fisub  WORD PTR [eax-0x7c00e16b]
  40d3fa:	jmp    0x40d3fb
  40d3fc:	add    bh,bh
  40d3fe:	cmp    edi,0xffffffd5
  40d401:	mov    edi,?
  40d403:	out    dx,eax
  40d404:	inc    ebx
  40d405:	jecxz  0x40d464
  40d407:	rol    BYTE PTR [eax],0x0
  40d40a:	mov    al,BYTE PTR [eax]
  40d40c:	inc    DWORD PTR [ebx-0x1b8b0000]
  40d412:	int3   
  40d413:	ja     0x40d3bf
  40d415:	mov    bl,0x4f
  40d417:	arpl   di,di
  40d419:	add    BYTE PTR [ecx],dh
  40d41b:	inc    DWORD PTR [eax]
  40d41d:	add    BYTE PTR [eax],al
  40d41f:	or     DWORD PTR [ebp-0x3c],0xffffffff
  40d423:	lods   al,BYTE PTR ds:[esi]
  40d424:	bound  ecx,QWORD PTR [edi]
  40d426:	test   bl,ah
  40d428:	inc    DWORD PTR [ebx-0x330074]
  40d42e:	add    BYTE PTR [ebx-0x2aff3ddb],al
  40d434:	fidiv  DWORD PTR [ecx+0x34]
  40d437:	inc    ecx
  40d438:	(bad)  
  40d439:	(bad)  
  40d43a:	jge    0x40d43b
  40d43c:	mov    edi,edi
  40d43e:	inc    DWORD PTR [ebx+0x3acc4239]
  40d444:	mov    dl,0x88
  40d446:	mov    ds:0x6100003e,eax
  40d44b:	mov    DWORD PTR [ecx-0x1bff7d00],ecx
  40d451:	adc    DWORD PTR [ebx+0x28868419],eax
  40d457:	sbb    al,0x0
  40d459:	add    BYTE PTR [ebp+0xffffff],dh
  40d45f:	(bad)  
  40d460:	mov    ecx,0xdf87ff9e
  40d465:	xchg   ebp,eax
  40d466:	(bad)  
  40d467:	(bad)  
  40d46a:	scas   eax,DWORD PTR es:[edi]
  40d46b:	mov    edi,edi
  40d46d:	add    bh,bh
  40d46f:	mov    DWORD PTR [edx],edx
  40d471:	adc    cl,ah
  40d473:	jbe    0x40d491
  40d475:	in     eax,dx
  40d476:	cmp    eax,0xda89833b
  40d47b:	add    ah,cl
  40d47d:	add    BYTE PTR [eax],al
  40d47f:	dec    DWORD PTR [eax-0x23]
  40d482:	push   ecx
  40d484:	jmp    0x33cc:0x833729db
  40d48b:	inc    DWORD PTR [eax]
  40d48d:	add    BYTE PTR [ebx-0xfc0800],al
  40d493:	fdivrp st(3),st
  40d495:	ins    DWORD PTR es:[edi],dx
  40d496:	(bad)  
  40d497:	jp     0x40d41c
  40d499:	sbb    edi,0xffffff89
  40d49c:	add    BYTE PTR [ebx-0x4f2d0100],al
  40d4a2:	add    BYTE PTR [eax+0x54dcc923],dh
  40d4a8:	(bad)  
  40d4a9:	(bad)  
  40d4aa:	mov    edi,0xff00ff
  40d4af:	add    BYTE PTR [edx+0x7a],ah
  40d4b2:	add    BYTE PTR [ecx-0x48],ah
  40d4b5:	fild   QWORD PTR [eax+esi*4+0x65ffcc]
  40d4bc:	add    BYTE PTR [eax],al
  40d4be:	add    ah,cl
  40d4c0:	push   eax
  40d4c1:	xor    edi,edi
  40d4c3:	xchg   esi,eax
  40d4c4:	inc    esi
  40d4c5:	xchg   esi,eax
  40d4c6:	and    DWORD PTR [ebx+0x9a00ff],esp
  40d4cc:	add    bh,bh
  40d4ce:	add    BYTE PTR [eax],al
  40d4d0:	push   esi
  40d4d1:	add    BYTE PTR [eax],0x3b
  40d4d4:	mov    ecx,0xff3150c9
  40d4d9:	dec    DWORD PTR [edx-0x34]
  40d4dc:	(bad)  
  40d4dd:	(bad)  
  40d4de:	inc    DWORD PTR [ebx+0x2eff69d6]
  40d4e4:	ins    DWORD PTR es:[edi],dx
  40d4e5:	fld    DWORD PTR [edi]
  40d4e7:	ins    BYTE PTR es:[edi],dx
  40d4e8:	(bad)  
  40d4e9:	jmp    DWORD PTR [eax-0x7d]
  40d4ec:	(bad)  
  40d4ed:	inc    DWORD PTR [eax]
  40d4ef:	mov    DWORD PTR [edx+0x1b5ff64],eax
  40d4f5:	scas   al,BYTE PTR es:[edi]
  40d4f6:	scas   al,BYTE PTR es:[edi]
  40d4f7:	sar    edi,cl
  40d4f9:	inc    DWORD PTR [ecx+0xff83ff]
  40d4ff:	add    DWORD PTR [ebx],0xffffffc6
  40d502:	inc    eax
  40d504:	sbb    eax,0xff1e8857
  40d509:	add    BYTE PTR [ebx-0x34],cl
  40d50c:	inc    DWORD PTR [eax]
  40d50e:	add    BYTE PTR [ecx-0x80011fd],cl
  40d514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d515:	sub    al,0x9
  40d517:	pop    eax
  40d518:	(bad)  
  40d519:	dec    ecx
  40d51b:	(bad)  
  40d51c:	(bad)  
  40d51d:	(bad)  
  40d51e:	dec    DWORD PTR [ecx+0x76cc1c45]
  40d524:	push   0xff4ad499
  40d529:	add    BYTE PTR [edx],bh
  40d52b:	add    BYTE PTR [eax],al
  40d52d:	add    BYTE PTR [ebx-0x3c9c01],al
  40d533:	int3   
  40d534:	inc    esp
  40d535:	push   es
  40d536:	sti    
  40d537:	push   0xff4900ff
  40d53c:	add    BYTE PTR [ebx+0x4fc0083],al
  40d542:	inc    esi
  40d544:	mov    bl,0xb3
  40d546:	sub    al,0xda
  40d548:	dec    esp
  40d54a:	aad    0x0
  40d54c:	add    bh,bh
  40d54e:	add    bh,bh
  40d550:	mov    ds:0x67c38356,al
  40d555:	sub    BYTE PTR [eax+0x1f00ff7b],0x0
  40d55c:	inc    DWORD PTR [eax]
  40d55e:	(bad)  
  40d55f:	(bad)  
  40d560:	fnstsw WORD PTR [esi-0x1]
  40d563:	fist   DWORD PTR [ebp-0x456146]
  40d569:	add    BYTE PTR ds:0xffffff00,dl
  40d56f:	call   FWORD PTR [eax-0x5a]
  40d572:	mov    DWORD PTR [eax-0x42],ebx
  40d575:	not    ebp
  40d577:	test   DWORD PTR [eax],0xffffa189
  40d57d:	add    DWORD PTR [ebx-0x105e00],0x75
  40d584:	inc    ecx
  40d585:	mov    dl,0xda
  40d587:	sub    al,0xcc
  40d589:	jmp    esp
  40d58b:	inc    DWORD PTR [eax]
  40d58d:	add    DWORD PTR [eax],0xffffffff
  40d590:	pop    ss
  40d591:	stc    
  40d592:	push   DWORD PTR [ecx-0x58]
  40d595:	jb     0x40d51f
  40d597:	sub    BYTE PTR [eax],al
  40d599:	call   DWORD PTR [ebp-0xff0001]
  40d59f:	call   FWORD PTR [eax+0x5c]
  40d5a2:	and    DWORD PTR [ebx],0xffffffda
  40d5a5:	daa    
  40d5a6:	cmp    eax,esi
  40d5a8:	mov    DWORD PTR [ecx-0x3384],ecx
  40d5ae:	inc    DWORD PTR [eax]
  40d5b0:	cmp    cl,BYTE PTR [edi-0x7d]
  40d5b3:	jno    0x40d5c0
  40d5b5:	and    BYTE PTR [ecx],bl
  40d5b7:	inc    ebx
  40d5b8:	dec    DWORD PTR [ecx-0x33000d]
  40d5be:	add    ah,cl
  40d5c0:	inc    edx
  40d5c1:	jo     0x40d5c2
  40d5c3:	fst    QWORD PTR [edi-0xed4ffb]
  40d5c9:	jmp    esi
  40d5cb:	dec    DWORD PTR [ecx+0x258300ff]
  40d5d1:	xchg   esi,eax
  40d5d2:	inc    DWORD PTR [ecx-0x15e3ec7]
  40d5d8:	inc    DWORD PTR [ebx-0xff0059]
  40d5de:	mov    DWORD PTR [eax],eax
  40d5e0:	cmc    
  40d5e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e2:	add    al,ch
  40d5e4:	push   cs
  40d5e5:	cmp    eax,0xff008c6b
  40d5ea:	lods   al,BYTE PTR ds:[esi]
  40d5eb:	cmp    edi,0x0
  40d5ee:	inc    DWORD PTR [eax]
  40d5f0:	xchg   edi,eax
  40d5f1:	dec    esi
  40d5f2:	push   DWORD PTR [esi]
  40d5f4:	sbb    DWORD PTR [esi],ebp
  40d5f6:	sub    esi,DWORD PTR [edx-0xf5ff77]
  40d5fc:	(bad)  
  40d5fd:	(bad)  
  40d5fe:	dec    esp
  40d600:	mov    esp,0x92dbff99
  40d605:	push   esi
  40d606:	lds    esi,FWORD PTR [edi+edi*8]
  40d609:	sub    DWORD PTR [eax-0x7d],0x0
  40d60d:	(bad)  
  40d60e:	inc    DWORD PTR [eax]
  40d610:	dec    esi
  40d611:	in     al,dx
  40d612:	call   DWORD PTR [ebx+0x2f3c2d28]
  40d618:	or     esp,0xffffff97
  40d61b:	cmp    edi,0xffffffff
  40d61e:	add    ah,cl
  40d620:	dec    edi
  40d621:	dec    esi
  40d622:	(bad)  
  40d623:	stc    
  40d624:	or     ebp,DWORD PTR [edi-0xf675]
  40d62a:	stc    
  40d62b:	add    DWORD PTR [eax],0xffffffff
  40d62e:	inc    DWORD PTR [eax]
  40d630:	mov    eax,0x9903007b
  40d635:	and    eax,DWORD PTR [ecx-0x4476ff3b]
  40d63b:	add    DWORD PTR [ebx-0x79000001],0x3f
  40d642:	int3   
  40d643:	xor    DWORD PTR [eax+0xd623fb],0xcc89a0ff
  40d64d:	add    DWORD PTR [ebx-0x6baf01],0x4a
  40d654:	and    BYTE PTR [ebx+0xff32cb],bl
  40d65a:	dec    esp
  40d65b:	(bad)  
  40d65c:	inc    DWORD PTR [ebx-0x2f07ff01]
  40d662:	cmp    DWORD PTR [eax],0xb
  40d665:	ror    DWORD PTR [edx-0x6c],1
  40d668:	mov    edi,edi
  40d66a:	ret    0x89cc
  40d66d:	add    DWORD PTR [ebx-0x7c294601],0x28
  40d674:	retf   
  40d675:	jmp    0x401ebc
  40d67a:	(bad)  
  40d67c:	mov    edi,edi
  40d67e:	cmp    edi,0x5
  40d681:	outs   dx,BYTE PTR ds:[esi]
  40d682:	add    BYTE PTR [esi+0x715dbe9f],ah
  40d688:	inc    DWORD PTR [eax]
  40d68a:	add    BYTE PTR [eax],0x0
  40d68d:	add    BYTE PTR [eax],al
  40d68f:	call   FWORD PTR [edx+0x1585ffa9]
  40d695:	mov    esi,0xcc6a9b
  40d69a:	fadd   QWORD PTR [eax]
  40d69c:	(bad)  
  40d69d:	(bad)  
  40d69e:	dec    DWORD PTR [ecx+0x75ffded4]
  40d6a4:	retf   0x3f6a
  40d6a7:	rol    BYTE PTR [eax],1
  40d6a9:	add    BYTE PTR [edi+edi*8+0x0],bl
  40d6ad:	add    bh,bh
  40d6af:	add    BYTE PTR [esi-0xe7e00b2],bl
  40d6b5:	das    
  40d6b6:	push   edi
  40d6b7:	or     DWORD PTR [eax],eax
  40d6b9:	inc    ecx
  40d6bb:	(bad)  
  40d6bc:	(bad)  
  40d6bd:	inc    DWORD PTR [ebx-0xb7ce01]
  40d6c3:	mov    eax,0x7d95c5d9
  40d6c8:	dec    esp
  40d6ca:	sbb    BYTE PTR [ebx-0xff0034],al
  40d6d0:	or     al,0x18
  40d6d2:	push   DWORD PTR [ecx]
  40d6d4:	rol    DWORD PTR [esi-0xa],cl
  40d6d7:	pop    esp
  40d6d8:	int3   
  40d6d9:	dec    DWORD PTR [ebp-0x1]
  40d6df:	push   ebp
  40d6e1:	push   cs
  40d6e2:	and    DWORD PTR [eax+0x23],0x74
  40d6e6:	mov    bl,0xae
  40d6e8:	int3   
  40d6e9:	jmp    DWORD PTR [edx]
  40d6eb:	add    BYTE PTR [eax],al
  40d6ed:	add    BYTE PTR [ebx+0xa8c1ff],al
  40d6f3:	ret    0x3427
  40d6f6:	pop    es
  40d6f7:	xchg   bh,bh
  40d6f9:	int3   
  40d6fa:	push   edi
  40d6fb:	add    BYTE PTR [ebx+0x3cffccff],al
  40d701:	std    
  40d702:	(bad)  
  40d703:	jmp    0x1b970aad
  40d708:	or     esp,0x1
  40d70b:	add    ah,cl
  40d70d:	(bad)  
  40d70e:	inc    DWORD PTR [ebx+0x4683718a]
  40d714:	jmp    0x40d6cd
  40d716:	sbb    ch,BYTE PTR [eax]
  40d718:	add    BYTE PTR [eax],al
  40d71a:	cmp    bh,0xff
  40d71d:	inc    DWORD PTR [eax]
  40d71f:	call   FWORD PTR [esi+ecx*8]
  40d722:	jmp    FWORD PTR [edx-0x34]
  40d725:	or     DWORD PTR [ecx+0x7cffff36],esi
  40d72b:	inc    DWORD PTR [eax]
  40d72d:	(bad)  
  40d72e:	dec    DWORD PTR [ecx+0x79ff0752]
  40d734:	call   0xfd83:0x89127422
  40d73b:	cmp    edi,0xffffffff
  40d73e:	dec    DWORD PTR [ecx-0x77cd4b0]
  40d744:	and    edx,DWORD PTR [ecx]
  40d746:	and    eax,DWORD PTR [ebx]
  40d748:	(bad)  
  40d749:	call   FWORD PTR [ebp-0x1]
  40d74c:	dec    esp
  40d74e:	dec    DWORD PTR [ecx+0x6d8987b8]
  40d754:	stos   BYTE PTR es:[edi],al
  40d755:	jns    0x40d7d2
  40d757:	pusha  
  40d758:	inc    DWORD PTR [eax]
  40d75a:	xchg   edx,eax
  40d75b:	dec    esp
  40d75d:	add    bh,bh
  40d75f:	(bad)  
  40d760:	fsubr  QWORD PTR [esi+0x3454f8ff]
  40d766:	shl    DWORD PTR [edi-0x1],1
  40d769:	dec    DWORD PTR [eax+eax*1+0x0]
  40d76d:	inc    DWORD PTR [eax]
  40d76f:	jmp    DWORD PTR [esi+0x2d3f83b6]
  40d775:	jns    0x40d78e
  40d777:	or     esp,0xffffffff
  40d77a:	and    bh,bh
  40d77c:	(bad)  
  40d77d:	dec    esp
  40d77f:	dec    DWORD PTR [ecx+edx*8-0x628f4800]
  40d786:	into   
  40d787:	mov    edx,0xff310000
  40d78c:	inc    DWORD PTR [eax]
  40d78e:	(bad)  
  40d78f:	inc    edx
  40d791:	inc    ebx
  40d792:	(bad)  
  40d793:	cld    
  40d794:	mov    al,0xce
  40d796:	sbb    ch,BYTE PTR [ebp-0x1]
  40d799:	add    BYTE PTR [edi+edi*8],dl
  40d79c:	add    bh,bh
  40d79e:	inc    DWORD PTR [ebx-0x1dff2e76]
  40d7a4:	push   esi
  40d7a5:	test   BYTE PTR ds:0x86ff8969,dl
  40d7ab:	(bad)  
  40d7ac:	inc    DWORD PTR [eax]
  40d7ae:	(bad)  
  40d7af:	jmp    FWORD PTR ds:0x8cad006f
  40d7b5:	scas   eax,DWORD PTR es:[edi]
  40d7b6:	mov    al,0x89
  40d7b8:	add    BYTE PTR [eax],al
  40d7ba:	icebp  
  40d7bb:	inc    DWORD PTR [ebx-0x60000000]
  40d7c1:	ror    BYTE PTR [ecx-0x3a5a6f0e],0x24
  40d7c8:	add    bh,bh
  40d7ca:	and    bh,bh
  40d7cc:	or     esp,0x0
  40d7cf:	jmp    FWORD PTR [esi]
  40d7d1:	dec    ebp
  40d7d2:	add    BYTE PTR [ebp-0x7f2d61ba],ch
  40d7d8:	add    BYTE PTR [ecx-0xde],cl
  40d7de:	dec    esp
  40d7e0:	test   BYTE PTR [eax-0x52980200],ch
  40d7e6:	and    BYTE PTR [esi-0x1],ch
  40d7e9:	cmp    DWORD PTR [eax-0x7c01],0xffffffff
  40d7f0:	inc    ebx
  40d7f1:	jmp    0xb2f2:0x88d5b700
  40d7f8:	(bad)  
  40d7f9:	jmp    DWORD PTR [ebx+0xcc0000]
  40d7ff:	dec    DWORD PTR [eax]
  40d801:	sbb    ecx,DWORD PTR [ecx-0x56f91bdb]
  40d807:	ins    DWORD PTR es:[edi],dx
  40d808:	add    BYTE PTR [eax],al
  40d80a:	adc    bh,bh
  40d80c:	dec    DWORD PTR [ecx-0x2390337d]
  40d812:	adc    DWORD PTR [esi-0x4e],0x20
  40d816:	jmp    0x40d7a2
  40d818:	add    BYTE PTR [ebx+0x83cc61],al
  40d81e:	dec    esp
  40d820:	adc    edi,esp
  40d822:	(bad)  
  40d823:	cmp    DWORD PTR [edi-0x33b0f1],esp
  40d829:	add    BYTE PTR [edi+edi*8],ch
  40d82c:	inc    DWORD PTR [ebx+0x69cd00ff]
  40d832:	add    BYTE PTR [edx-0x69],al
  40d835:	jae    0x40d86f
  40d837:	cmp    eax,DWORD PTR [eax]
  40d839:	call   FWORD PTR [ecx]
  40d83b:	add    bh,bh
  40d83d:	add    bh,bh
  40d83f:	call   FWORD PTR [esi]
  40d841:	push   esp
  40d842:	add    BYTE PTR [esi-0x6aa7809c],bl
  40d848:	int3   
  40d849:	jmp    DWORD PTR [eax+0x89ff89]
  40d84f:	mov    DWORD PTR [ebp-0x3c],esp
  40d852:	inc    ebx
  40d854:	xchg   esi,eax
  40d855:	add    DWORD PTR [esp+edi*8+0x0],edi
  40d859:	add    BYTE PTR [eax-0x1],cl
  40d85c:	inc    DWORD PTR [eax]
  40d85e:	mov    DWORD PTR [ebx+0x6eff1a9f],eax
  40d864:	inc    eax
  40d865:	mov    ecx,0xff0080ff
  40d86a:	pop    edi
  40d86b:	add    BYTE PTR [eax],al
  40d86d:	inc    DWORD PTR [eax]
  40d86f:	add    BYTE PTR [eax-0x784400f3],bl
  40d875:	jno    0x40d876
  40d877:	iret   
  40d878:	int3   
  40d879:	jmp    FWORD PTR [eax+eax*1]
  40d87c:	dec    DWORD PTR [ecx-0x6e837c77]
  40d882:	add    ch,bl
  40d884:	xor    DWORD PTR [ebx-0x4d],esi
  40d887:	jne    0x40d888
  40d889:	add    BYTE PTR [ecx],cl
  40d88b:	(bad)  
  40d88c:	inc    DWORD PTR [eax]
  40d88e:	mov    DWORD PTR [ebx+0xb00ee0f],eax
  40d894:	outs   dx,BYTE PTR ds:[esi]
  40d895:	mov    cl,0xd6
  40d897:	jecxz  0x40d898
  40d899:	add    BYTE PTR [ebx-0xff0001],cl
  40d89f:	add    BYTE PTR [edi],ch
  40d8a1:	je     0x40d8a3
  40d8a3:	iret   
  40d8a4:	gs loopne 0x40d83f
  40d8a7:	jmp    0xccb9d82f
  40d8ac:	inc    DWORD PTR [eax]
  40d8ae:	add    bh,bh
  40d8b0:	push   edi
  40d8b1:	fadd   DWORD PTR [ebx-0x9c58f7d]
  40d8b7:	mov    ecx,0x89bbff00
  40d8bc:	add    bh,bh
  40d8be:	(bad)  
  40d8bf:	call   FWORD PTR [esi]
  40d8c1:	jns    0xe9de007c
  40d8c7:	clc    
  40d8c8:	mov    DWORD PTR [eax],eax
  40d8ca:	rol    DWORD PTR [eax],0xff
  40d8cd:	(bad)  
  40d8ce:	inc    DWORD PTR [ebx+0x7d009c08]
  40d8d4:	cs dec ecx
  40d8d6:	xchg   esi,eax
  40d8d7:	adc    al,BYTE PTR [eax]
  40d8d9:	add    BYTE PTR [ebx],al
  40d8db:	inc    DWORD PTR [eax]
  40d8dd:	(bad)  
  40d8de:	inc    DWORD PTR [eax]
  40d8e0:	ins    DWORD PTR es:[edi],dx
  40d8e1:	jns    0x40d8e2
  40d8e3:	aad    0x29
  40d8e5:	pop    esp
  40d8e6:	mov    ah,0x9c
  40d8e8:	cmp    edi,0xffffffbe
  40d8eb:	add    BYTE PTR [ecx+0x10ff8983],cl
  40d8f1:	xor    DWORD PTR [eax],eax
  40d8f3:	call   0xffff:0xbfe2a5be
  40d8fa:	(bad)  
  40d8fb:	(bad)  
  40d8fc:	inc    DWORD PTR [eax]
  40d8fe:	inc    DWORD PTR [ebx+0x6ecc2f8f]
  40d904:	pop    edi
  40d905:	push   esp
  40d906:	das    
  40d907:	and    al,BYTE PTR [eax]
  40d909:	add    cl,al
  40d90b:	inc    DWORD PTR [eax]
  40d90d:	dec    DWORD PTR [ecx-0x7c7a6601]
  40d913:	xor    al,0xc2
  40d915:	or     BYTE PTR gs:[edi+0x16ffff],al
  40d91c:	(bad)  
  40d91d:	(bad)  
  40d91e:	(bad)  
  40d91f:	call   FWORD PTR [ebx-0x73c400d0]
  40d925:	leave  
  40d926:	sbb    ebp,DWORD PTR [eax-0x7cfd0077]
  40d92c:	(bad)  
  40d92d:	(bad)  
  40d92e:	dec    esp
  40d930:	and    bl,BYTE PTR [esi+0x0]
  40d933:	and    BYTE PTR [edi],bl
  40d935:	lds    eax,FWORD PTR [edi-0x63ffff02]
  40d93b:	add    BYTE PTR [eax],al
  40d93d:	add    ah,cl
  40d93f:	add    dl,al
  40d941:	inc    ebp
  40d942:	jmp    FWORD PTR [ebx-0x71]
  40d945:	mov    bl,BYTE PTR [eax]
  40d947:	idiv   bh
  40d949:	jmp    FWORD PTR [ebx-0x1]
  40d94c:	dec    DWORD PTR [ecx-0x5741ff7d]
  40d952:	add    BYTE PTR [esp+ebx*2-0x76d98b9c],ch
  40d959:	add    bl,cl
  40d95b:	inc    DWORD PTR [eax]
  40d95d:	or     DWORD PTR [ecx+0x1258ff],0xffffff82
  40d964:	aad    0x88
  40d966:	push   ecx
  40d967:	je     0x40d968
  40d969:	add    BYTE PTR [eax-0x100],ah
  40d96f:	int3   
  40d970:	stos   DWORD PTR es:[edi],eax
  40d971:	xor    esp,ecx
  40d973:	dec    ecx
  40d974:	push   0xffffffb2
  40d976:	test   DWORD PTR [edi+edi*8-0x7d],edx
  40d97a:	mov    ebx,0xff008983
  40d97f:	add    BYTE PTR [esi],bl
  40d981:	mov    al,0xff
  40d983:	push   ebx
  40d984:	xchg   edx,eax
  40d985:	xchg   BYTE PTR [edx],cl
  40d987:	mov    ebx,0xff7f83cc
  40d98c:	add    bh,bh
  40d98e:	add    bh,bh
  40d990:	and    bh,BYTE PTR [eax]
  40d992:	call   esi
  40d994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d995:	mov    ebp,0x83d9ad
  40d99a:	je     0x40d968
  40d99c:	dec    esp
  40d99e:	add    bh,bh
  40d9a0:	push   edx
  40d9a1:	loop   0x40d9a3
  40d9a3:	inc    BYTE PTR [esi-0x7af0e]
  40d9a9:	call   edx
  40d9ab:	(bad)  
  40d9ac:	inc    DWORD PTR [eax]
  40d9ae:	inc    DWORD PTR [eax]
  40d9b0:	dec    ecx
  40d9b1:	sub    eax,0xc0767fcc
  40d9b6:	xor    BYTE PTR [eax],0xff
  40d9b9:	jmp    FWORD PTR [ecx]
  40d9bb:	add    bh,bh
  40d9bd:	add    BYTE PTR [eax],al
  40d9bf:	inc    DWORD PTR [esi+0xf]
  40d9c2:	add    BYTE PTR [esi+0x125007c4],ah
  40d9c8:	add    BYTE PTR [eax],al
  40d9ca:	jge    0x40d94f
  40d9cc:	add    bh,bh
  40d9ce:	(bad)  
  40d9cf:	dec    DWORD PTR [esi+0x75]
  40d9d2:	(bad)  
  40d9d3:	fcmovnu st,st(1)
  40d9d5:	or     eax,0x14f6
  40d9da:	es (bad) 
  40d9dc:	(bad)  
  40d9dd:	(bad)  
  40d9de:	(bad)  
  40d9df:	dec    DWORD PTR [esi+0x24]
  40d9e2:	add    cl,al
  40d9e4:	loope  0x40da55
  40d9e6:	test   al,0xd2
  40d9e8:	(bad)  
  40d9e9:	(bad)  
  40d9ea:	jnp    0x40d9ec
  40d9ec:	(bad)  
  40d9ed:	inc    DWORD PTR [eax]
  40d9ef:	add    BYTE PTR [edi-0x28],cl
  40d9f2:	(bad)  
  40d9f3:	std    
  40d9f4:	xchg   ecx,eax
  40d9f5:	sub    ch,al
  40d9f7:	pop    ebx
  40d9f8:	add    bh,bh
  40d9fa:	cmc    
  40d9fb:	dec    DWORD PTR [ecx-0x7700ff01]
  40da01:	push   0x0
  40da03:	lahf   
  40da04:	dec    edx
  40da05:	cmp    eax,DWORD PTR [esi-0x5e]
  40da08:	dec    DWORD PTR [ecx-0x7600ff1d]
  40da0e:	add    BYTE PTR [eax],al
  40da10:	scas   al,BYTE PTR es:[edi]
  40da11:	add    DWORD PTR [eax],0x8dde26ee
  40da17:	(bad)  
  40da18:	int3   
  40da19:	add    BYTE PTR [esi-0xff0100],cl
  40da1f:	add    ch,al
  40da21:	lea    eax,[ebx+0x68cbb687]
  40da27:	jae    0x1401d2d
  40da2d:	inc    DWORD PTR [eax]
  40da2f:	or     DWORD PTR ds:0xcebcff02,0xfffffff1
  40da36:	in     eax,dx
  40da37:	mov    ?,edi
  40da39:	jmp    FWORD PTR [edx]
  40da3b:	add    DWORD PTR [ebx-0x357c007d],0x37
  40da42:	(bad)  
  40da43:	in     al,dx
  40da44:	xchg   esi,eax
  40da45:	scas   al,BYTE PTR es:[edi]
  40da46:	cmc    
  40da47:	add    edi,edi
  40da49:	mov    DWORD PTR ds:0xffffffcc,esp
  40da4f:	add    BYTE PTR [edi-0x1d],cl
  40da52:	inc    DWORD PTR [ecx+0x7a40e3f0]
  40da58:	add    BYTE PTR [eax],al
  40da5a:	mov    BYTE PTR [eax],0x83
  40da5d:	inc    DWORD PTR [eax]
  40da5f:	call   DWORD PTR [esi+0x1662ff8b]
  40da65:	dec    ecx
  40da66:	cmp    BYTE PTR [edi+edi*8],dh
  40da69:	add    ah,ch
  40da6b:	inc    DWORD PTR [ebx+0x1ffffff]
  40da71:	inc    esi
  40da72:	int3   
  40da73:	jg     0x40dad9
  40da75:	das    
  40da76:	xchg   edi,eax
  40da77:	dec    ecx
  40da78:	add    BYTE PTR [ebx-0xff2f],al
  40da7e:	mov    edi,edi
  40da80:	push   esi
  40da81:	jmp    FWORD PTR es:[edi-0x6e]
  40da85:	xor    ah,BYTE PTR [ebx]
  40da87:	add    edi,edi
  40da89:	xor    edi,0x0
  40da8c:	inc    DWORD PTR [eax]
  40da8e:	dec    esp
  40da90:	jl     0x40da87
  40da92:	dec    DWORD PTR [ebx]
  40da94:	loopne 0x40dac1
  40da96:	mov    cl,0x38
  40da98:	add    bh,bh
  40da9a:	mov    esi,0xff0089ff
  40da9f:	mov    DWORD PTR [ecx-0x42],ebp
  40daa2:	call   FWORD PTR [esi]
  40daa4:	scas   eax,DWORD PTR es:[edi]
  40daa5:	push   edx
  40daa6:	dec    edx
  40daa7:	jmp    0xffff:0x83a0cc00
  40daae:	add    bh,bh
  40dab0:	daa    
  40dab1:	fdivp  st(7),st
  40dab3:	cs cld 
  40dab5:	jge    0x40db31
  40dab7:	cwde   
  40dab8:	add    bh,bh
  40daba:	sub    edi,edi
  40dabc:	(bad)  
  40dabd:	inc    DWORD PTR [eax]
  40dabf:	add    BYTE PTR [ebp+0xbc0cc98],bl
  40dac5:	fsubr  DWORD PTR [edx-0x27]
  40dac8:	int3   
  40dac9:	dec    DWORD PTR [ebp-0x1]
  40dacf:	jmp    DWORD PTR [edx+0x6add893b]
  40dad5:	imul   BYTE PTR [edx+0x20ccff24]
  40dadb:	(bad)  
  40dadc:	inc    DWORD PTR [eax]
  40dade:	inc    DWORD PTR [ebx-0x5433b12d]
  40dae4:	jae    0x40db4b
  40dae6:	mov    esi,DWORD PTR [ebp-0x1]
  40dae9:	(bad)  
  40daea:	mov    ecx,0x83ffff00
  40daef:	adc    esp,0x9
  40daf2:	call   DWORD PTR [edx]
  40daf4:	and    eax,0x83c88fac
  40daf9:	add    BYTE PTR [edx-0xff0001],ah
  40daff:	(bad)  
  40db00:	in     al,dx
  40db01:	call   0xb782:0x44f50b00
  40db08:	(bad)  
  40db09:	(bad)  
  40db0a:	std    
  40db0b:	cmp    edi,0xffffffff
  40db0e:	(bad)  
  40db0f:	(bad)  
  40db10:	cmp    bh,BYTE PTR [eax+eax*1]
  40db13:	enter  0xe844,0xbc
  40db17:	fiadd  WORD PTR [eax]
  40db19:	sub    DWORD PTR [eax-0x1],0x0
  40db1d:	add    bh,bh
  40db1f:	add    BYTE PTR [edi-0x2f],al
  40db22:	add    BYTE PTR [ecx],al
  40db24:	retf   0x1947
  40db27:	add    eax,DWORD PTR [ebx+0xff0d00]
  40db2d:	add    BYTE PTR [eax],al
  40db2f:	call   DWORD PTR [edx+ecx*8+0x0]
  40db33:	push   esp
  40db34:	push   ebp
  40db35:	je     0x40daf6
  40db37:	dec    eax
  40db38:	or     esp,0x4b
  40db3b:	cmp    edi,0xffffffcc
  40db3e:	(bad)  
  40db3f:	push   DWORD PTR [edx+0x63]
  40db42:	jmp    FWORD PTR [esi+eiz*2]
  40db45:	and    BYTE PTR [edx-0x4],ch
  40db48:	mov    edi,edi
  40db4a:	cwde   
  40db4b:	cmp    edi,0xffffffff
  40db4e:	inc    DWORD PTR [eax]
  40db50:	loop   0x40db24
  40db52:	add    BYTE PTR [ebx],dh
  40db54:	popf   
  40db55:	push   ebx
  40db56:	hlt    
  40db57:	out    dx,al
  40db58:	(bad)  
  40db59:	call   eax
  40db5b:	add    BYTE PTR [eax],al
  40db5d:	cmp    edi,0x0
  40db60:	adc    DWORD PTR [ecx+0x0],ebx
  40db63:	icebp  
  40db64:	mov    ah,0x0
  40db66:	jo     0x40db3a
  40db68:	mov    esp,ecx
  40db6a:	(bad)  
  40db6b:	(bad)  
  40db6c:	dec    DWORD PTR [ecx-0x2b710100]
  40db72:	int3   
  40db73:	dec    ebx
  40db74:	mov    ds:0x7c5e4a,eax
  40db79:	or     DWORD PTR [eax+eax*1-0x1],0xffffff83
  40db7e:	add    BYTE PTR [eax],al
  40db80:	out    dx,al
  40db81:	imul   edi,edi,0xffffffe6
  40db84:	cld    
  40db85:	cli    
  40db86:	sub    eax,0xb30089bb
  40db8b:	(bad)  
  40db8c:	inc    DWORD PTR [eax]
  40db8e:	inc    DWORD PTR [eax]
  40db90:	jge    0x40db37
  40db92:	add    BYTE PTR [ecx+0x12],al
  40db95:	jns    0x40dbb9
  40db97:	sub    BYTE PTR [eax],al
  40db99:	call   FWORD PTR [eax]
  40db9b:	add    BYTE PTR [ebx+0x5d0000ff],al
  40dba1:	mov    eax,DWORD PTR [ebx+0x176c9118]
  40dba7:	and    ah,cl
  40dba9:	push   ebx
  40dbab:	dec    esp
  40dbad:	mov    DWORD PTR [eax],eax
  40dbaf:	inc    DWORD PTR [esp+ecx*8+0x794106ff]
  40dbb6:	jbe    0x40db96
  40dbb8:	int3   
  40dbb9:	(bad)  
  40dbba:	(bad)  
  40dbbb:	(bad)  
  40dbbc:	(bad)  
  40dbbd:	(bad)  
  40dbbe:	dec    esp
  40dbc0:	add    cl,BYTE PTR [eax+eax*1]
  40dbc3:	push   ss
  40dbc4:	je     0x40db52
  40dbc6:	outs   dx,BYTE PTR ds:[esi]
  40dbc7:	and    al,BYTE PTR [eax]
  40dbc9:	adc    ebx,0xffffffff
  40dbcc:	add    ah,cl
  40dbce:	add    DWORD PTR [ebx+0x7cff623b],0xffffff88
  40dbd5:	cmp    BYTE PTR [eax],0x87
  40dbd8:	cmp    edi,0xffffffc4
  40dbdb:	add    ah,cl
  40dbdd:	inc    DWORD PTR [eax]
  40dbdf:	add    BYTE PTR [ebx+eiz*2-0x77],ah
  40dbe3:	fsubr  QWORD PTR [edi+0x22]
  40dbe6:	jnp    0x40dbfa
  40dbe8:	int3   
  40dbe9:	push   DWORD PTR [ebx-0x7c00ff7d]
  40dbef:	call   DWORD PTR [edi+0x4076ffb5]
  40dbf5:	or     esi,edx
  40dbf7:	cmp    bh,0xff
  40dbfa:	xchg   DWORD PTR [ecx+0x830000],ecx
  40dc00:	shr    BYTE PTR [ecx+0x0],1
  40dc03:	adc    al,0x8a
  40dc05:	or     eax,0xcc008bc8
  40dc0a:	cmp    eax,0xffff83cc
  40dc0f:	add    cl,ah
  40dc11:	mov    dh,0x0
  40dc13:	mov    ebp,0xcf1cd3d6
  40dc18:	cmp    edi,0xffffffb2
  40dc1b:	inc    DWORD PTR [eax]
  40dc1d:	cmp    edi,0xffffffff
  40dc20:	test   eax,0x2b0dfff4
  40dc25:	aad    0x2a
  40dc27:	cmp    edi,edi
  40dc29:	(bad)  
  40dc2a:	out    dx,eax
  40dc2b:	dec    DWORD PTR [ecx-0x6f000001]
  40dc31:	mov    al,ds:0xb90b1ff
  40dc36:	in     al,0x30
  40dc38:	add    BYTE PTR [eax],al
  40dc3a:	and    eax,0x83ffffff
  40dc3f:	push   DWORD PTR ds:0x70a2ff81
  40dc45:	pop    ds
  40dc46:	mov    al,ds:0x860000c0
  40dc4b:	(bad)  
  40dc4c:	(bad)  
  40dc4d:	inc    DWORD PTR [ebx-0x4ed57d]
  40dc53:	pop    eax
  40dc54:	sbb    eax,DWORD PTR [edi]
  40dc56:	pop    edi
  40dc57:	sub    BYTE PTR [ebx-0x767d01],al
  40dc5d:	add    BYTE PTR [ecx+0x586acc],cl
  40dc63:	inc    ebp
  40dc64:	loope  0x40dc29
  40dc66:	inc    edi
  40dc67:	adc    al,BYTE PTR [eax]
  40dc69:	mov    DWORD PTR [ebx-0x1],ecx
  40dc6c:	(bad)  
  40dc6d:	dec    DWORD PTR [ecx-0x33d57e00]
  40dc73:	jge    0x40dcb5
  40dc75:	mov    esi,0xcc891243
  40dc7a:	repz inc DWORD PTR [eax]
  40dc7d:	inc    DWORD PTR [eax]
  40dc7f:	(bad)  
  40dc80:	cmp    eax,0xef5c0092
  40dc85:	pop    es
  40dc86:	mov    ds:0x88000005,al
  40dc8b:	add    DWORD PTR [eax],0xffffffff
  40dc8e:	add    bh,bh
  40dc90:	aad    0x35
  40dc92:	int3   
  40dc93:	cwde   
  40dc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc95:	shl    DWORD PTR [ecx+0x60ff8352],1
  40dc9b:	add    DWORD PTR [eax],0xffffffff
  40dc9e:	add    BYTE PTR [ebx-0x20ffed82],al
  40dca4:	cwde   
  40dca5:	pop    eax
  40dca6:	call   0x83ff:0x7fcc8906
  40dcad:	inc    DWORD PTR [eax]
  40dcaf:	push   ecx
  40dcb1:	sub    edi,edi
  40dcb3:	adc    al,0x74
  40dcb5:	hlt    
  40dcb6:	dec    ebx
  40dcb7:	add    al,0xcc
  40dcb9:	dec    DWORD PTR [eax]
  40dcbb:	(bad)  
  40dcbc:	(bad)  
  40dcbd:	(bad)  
  40dcbe:	inc    DWORD PTR [eax]
  40dcc0:	xchg   edx,eax
  40dcc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcc2:	cmp    esi,0x3f
  40dcc5:	mov    eax,0x835dd4
  40dcca:	xchg   edi,edi
  40dccc:	int3   
  40dccd:	add    DWORD PTR [ebx+0x854d00],0xffffffde
  40dcd4:	push   cs
  40dcd5:	mov    al,ds:0xffff34fd
  40dcda:	push   eax
  40dcdb:	int3   
  40dcdc:	inc    DWORD PTR [eax]
  40dcde:	inc    DWORD PTR [ebx-0x7f005fff]
  40dce4:	mov    DWORD PTR [esi-0x7cfec6],ebp
  40dcea:	out    dx,eax
  40dceb:	mov    DWORD PTR [eax],eax
  40dced:	add    bh,bh
  40dcef:	add    BYTE PTR [edi-0x12],cl
  40dcf2:	mov    DWORD PTR [ebx],esp
  40dcf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf5:	rcr    BYTE PTR [edi+0x51],1
  40dcf8:	dec    esp
  40dcfa:	loope  0x40dcfb
  40dcfc:	or     DWORD PTR [ecx+0x3ac1ffff],0xffffffff
  40dd03:	gs dec ebx
  40dd05:	add    al,0xa9
  40dd07:	(bad)  
  40dd09:	add    ch,dl
  40dd0b:	add    DWORD PTR [ebx-0xeff0001],0xffffffee
  40dd12:	and    DWORD PTR [eax],0xffffffde
  40dd15:	les    esp,FWORD PTR [ebp+0x5fffff71]
  40dd1b:	add    BYTE PTR [eax],al
  40dd1d:	dec    esp
  40dd1f:	dec    DWORD PTR [esi+0x42d0836e]
  40dd25:	or     edi,DWORD PTR [ebx-0x66]
  40dd28:	cmp    edi,0xffffffbd
  40dd2b:	inc    DWORD PTR [eax]
  40dd2d:	inc    DWORD PTR [eax]
  40dd2f:	inc    DWORD PTR [eax-0x23]
  40dd32:	dec    DWORD PTR [esi+0x38f3f35d]
  40dd38:	inc    DWORD PTR [eax]
  40dd3a:	xlat   BYTE PTR ds:[ebx]
  40dd3b:	int3   
  40dd3c:	add    ah,cl
  40dd3e:	inc    DWORD PTR [eax]
  40dd40:	clc    
  40dd41:	push   esi
  40dd42:	jmp    DWORD PTR [ebx-0x12a7e63e]
  40dd48:	mov    DWORD PTR [ebx+0xff0c],eax
  40dd4e:	add    BYTE PTR [ebx-0x1100d5bd],al
  40dd54:	xchg   ecx,eax
  40dd55:	imul   esp,ebx,0xffffffa9
  40dd58:	add    bh,bh
  40dd5a:	daa    
  40dd5b:	(bad)  
  40dd5c:	(bad)  
  40dd5d:	(bad)  
  40dd5e:	(bad)  
  40dd5f:	push   DWORD PTR [eax+0x68]
  40dd62:	int3   
  40dd63:	loop   0x40dce6
  40dd65:	adc    cl,al
  40dd67:	push   edx
  40dd68:	add    BYTE PTR [eax],al
  40dd6a:	mov    es,WORD PTR [eax]
  40dd6c:	add    BYTE PTR [ebx+0x7f4183ff],al
  40dd72:	add    BYTE PTR [ebx-0x5272384c],al
  40dd78:	inc    DWORD PTR [ebx-0x3300f5]
  40dd7e:	inc    DWORD PTR [ebx+0xeff2766]
  40dd84:	loopne 0x40dd3f
  40dd86:	add    BYTE PTR [ebp-0x7c8eff01],dh
  40dd8c:	mov    DWORD PTR [eax],eax
  40dd8e:	add    BYTE PTR [eax],al
  40dd90:	ja     0x40dd7e
  40dd92:	add    BYTE PTR [ebp+0x438b440b],bl
  40dd98:	dec    DWORD PTR [ecx-0xff00f7]
  40dd9e:	cmp    edi,0x6f
  40dda1:	repnz add BYTE PTR [edx],bh
  40dda4:	jg     0x40ddb5
  40dda6:	dec    esp
  40dda7:	out    dx,al
  40dda8:	add    bh,bh
  40ddaa:	push   edi
  40ddab:	add    BYTE PTR [eax],al
  40ddad:	inc    DWORD PTR [ebx+0x821fff]
  40ddb3:	jae    0x40dde2
  40ddb5:	or     eax,0xff83bc25
  40ddba:	(bad)  
  40ddbc:	(bad)  
  40ddbd:	inc    DWORD PTR [eax]
  40ddbf:	jmp    FWORD PTR [eax+0x1948ff22]
  40ddc5:	clc    
  40ddc6:	out    dx,eax
  40ddc7:	icebp  
  40ddc8:	mov    DWORD PTR [ecx-0x7c000004],ecx
  40ddce:	add    bh,bh
  40ddd0:	adc    al,0x81
  40ddd2:	dec    DWORD PTR [ecx+ebx*4-0x25]
  40ddd6:	mov    ds:0x85ffff8b,eax
  40dddb:	(bad)  
  40dddc:	(bad)  
  40dddd:	dec    DWORD PTR [ecx-0x76d02d01]
  40dde3:	dec    eax
  40dde4:	inc    ecx
  40dde5:	pop    es
  40dde6:	mov    ah,BYTE PTR [eax]
  40dde8:	cmp    edi,0xffffffc1
  40ddeb:	add    ah,cl
  40dded:	inc    DWORD PTR [eax]
  40ddef:	add    dh,cl
  40ddf1:	fild   DWORD PTR [eax]
  40ddf3:	mov    ch,0x32
  40ddf5:	das    
  40ddf6:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40ddf8:	add    bh,bh
  40ddfa:	dec    ecx
  40ddfb:	dec    esp
  40ddfd:	inc    DWORD PTR [ebx-0xbbae00]
  40de03:	push   ds
  40de04:	push   edi
  40de05:	rol    BYTE PTR [ebp-0x6300000c],0x0
  40de0c:	add    DWORD PTR [ebx-0x7e770001],0xffffffff
  40de13:	push   es
  40de14:	inc    ebx
  40de15:	fnstenv [esi+0x17]
  40de18:	(bad)  
  40de19:	call   FWORD PTR [ebx]
  40de1b:	(bad)  
  40de1c:	(bad)  
  40de1d:	dec    DWORD PTR [ecx+0xbb39ff]
  40de23:	pusha  
  40de24:	ror    BYTE PTR [eax-0x6fcc],0x27
  40de2b:	add    DWORD PTR [ebx-0x4bff0001],0x7e
  40de32:	call   DWORD PTR [ecx+0x67]
  40de35:	je     0x40dde5
  40de37:	cwde   
  40de38:	mov    DWORD PTR [ebx+0x83ff78],eax
  40de3e:	inc    DWORD PTR [eax]
  40de40:	nop
  40de41:	loope  0x40de0f
  40de43:	popf   
  40de44:	stos   BYTE PTR es:[edi],al
  40de45:	sbb    eax,0xff553e
  40de4a:	inc    ebx
  40de4b:	int3   
  40de4c:	add    BYTE PTR [eax],al
  40de4e:	add    BYTE PTR [eax],al
  40de50:	push   ebx
  40de51:	loop   0x40de53
  40de53:	jno    0x40de6e
  40de55:	popf   
  40de56:	(bad)
  40de5a:	or     eax,0xff00ff00
  40de5f:	jmp    DWORD PTR [edx+0x1c]
  40de62:	inc    DWORD PTR [edi-0x50]
  40de65:	mov    esi,0xffff2040
  40de6a:	(bad)  
  40de6c:	(bad)  
  40de6d:	dec    DWORD PTR [ecx-0x7c1d2e7d]
  40de73:	dec    edx
  40de74:	fidiv  DWORD PTR [ebp-0x4e]
  40de77:	inc    esi
  40de78:	inc    DWORD PTR [eax]
  40de7a:	pop    esi
  40de7b:	(bad)  
  40de7c:	inc    DWORD PTR [ebx-0x5f510001]
  40de82:	add    BYTE PTR [ecx],bh
  40de84:	push   ss
  40de85:	popf   
  40de86:	inc    ebx
  40de87:	inc    ecx
  40de88:	mov    esp,ecx
  40de8a:	push   ss
  40de8b:	add    bh,bh
  40de8d:	mov    DWORD PTR [eax],eax
  40de8f:	add    BYTE PTR [edx],ah
  40de91:	je     0x40de93
  40de93:	push   cs
  40de94:	jbe    0x40de4d
  40de96:	fistp  WORD PTR [edi+0x0]
  40de99:	add    DWORD PTR [edi-0x77000000],0xffffffff
  40dea0:	hlt    
  40dea1:	outs   dx,BYTE PTR ds:[esi]
  40dea2:	add    cl,cl
  40dea4:	lock retf 
  40dea6:	mov    esp,0xb383832f
  40deab:	dec    esp
  40dead:	inc    DWORD PTR [eax]
  40deaf:	add    BYTE PTR [esi+0x156700cb],cl
  40deb5:	xchg   BYTE PTR [ebp-0x69ff00bb],bl
  40debb:	(bad)  
  40debc:	inc    DWORD PTR [eax]
  40debe:	add    DWORD PTR [ebx-0x2b7c5049],0x47
  40dec5:	orps   xmm0,xmm3
  40dec8:	add    BYTE PTR [eax],al
  40deca:	sbb    ecx,DWORD PTR [ecx-0x760001]
  40ded0:	mov    cs,WORD PTR [edx-0xb2cd601]
  40ded6:	jp     0x40de8e
  40ded8:	add    ah,cl
  40deda:	aas    
  40dedb:	add    bh,bh
  40dedd:	int3   
  40dede:	(bad)  
  40dedf:	jmp    FWORD PTR [ebx]
  40dee1:	sahf   
  40dee2:	adc    DWORD PTR [edx+0x4],0x4b
  40dee6:	jmp    0xff00:0x92ff009f
  40deed:	(bad)  
  40deee:	inc    DWORD PTR [ebx+0x408944e8]
  40def4:	sti    
  40def5:	test   BYTE PTR [eax+0x8ffffe0],al
  40defb:	int3   
  40defc:	(bad)  
  40defd:	(bad)  
  40defe:	(bad)  
  40deff:	(bad)  
  40df00:	cli    
  40df01:	sti    
  40df02:	add    BYTE PTR [esi],bh
  40df04:	cmp    BYTE PTR [edi-0x9],cl
  40df07:	pop    es
  40df08:	inc    DWORD PTR [eax]
  40df0a:	rol    BYTE PTR [eax],cl
  40df0c:	mov    esp,ecx
  40df0e:	add    BYTE PTR [ebx-0x4c0090f1],al
  40df14:	jle    0x40dee8
  40df16:	xchg   ebp,eax
  40df17:	mov    bh,0x0
  40df19:	add    dl,al
  40df1b:	int3   
  40df1c:	add    ah,cl
  40df1e:	inc    DWORD PTR [eax]
  40df20:	sub    eax,edx
  40df22:	int3   
  40df23:	rol    DWORD PTR [eax-0x3ed12c],0xff
  40df2a:	pop    edx
  40df2b:	add    BYTE PTR [eax],al
  40df2d:	add    bh,bh
  40df2f:	call   DWORD PTR [ecx+eiz*4]
  40df32:	or     DWORD PTR ds:0x60d2085,0xffffffff
  40df39:	(bad)  
  40df3a:	cmp    bh,bh
  40df3c:	add    DWORD PTR [eax],0x0
  40df3f:	dec    DWORD PTR [edi+0xe]
  40df42:	call   ecx
  40df44:	add    eax,0xff1d4a71
  40df49:	jmp    FWORD PTR [ebp-0x1]
  40df4c:	add    BYTE PTR [eax],al
  40df4e:	add    DWORD PTR [eax],0x24
  40df51:	or     bh,bh
  40df53:	cmp    al,0xe8
  40df55:	nop
  40df56:	and    al,0xde
  40df58:	(bad)  
  40df59:	jmp    FWORD PTR [edi]
  40df5b:	add    BYTE PTR [ebx-0x7d000001],al
  40df61:	pop    ebx
  40df62:	int3   
  40df63:	je     0x40df2d
  40df65:	int3   
  40df66:	dec    eax
  40df67:	or     eax,0xcca48983
  40df6c:	(bad)  
  40df6d:	dec    esp
  40df6f:	cmp    esp,0xffffffbc
  40df72:	add    BYTE PTR [edi+0x73],al
  40df75:	mov    gs:0x9cc83e3,al
  40df7b:	add    BYTE PTR [ebx+0x5fcc83ff],al
  40df81:	js     0x40df83
  40df83:	imul   eax,edi,0xffe9ee0c
  40df89:	add    BYTE PTR [eax],cl
  40df8b:	add    BYTE PTR [eax],al
  40df8d:	mov    edi,edi
  40df8f:	(bad)  
  40df90:	(bad)  
  40df91:	cmp    eax,DWORD PTR [eax]
  40df93:	je     0x40dfde
  40df95:	jge    0x40e007
  40df97:	push   ds
  40df98:	inc    DWORD PTR [ebx-0x44]
  40df9e:	(bad)  
  40df9f:	jmp    DWORD PTR [esi]
  40dfa1:	clc    
  40dfa2:	adc    DWORD PTR [ebx],0xffffffa9
  40dfa5:	xchg   edx,eax
  40dfa6:	cdq    
  40dfa7:	xchg   edx,eax
  40dfa8:	(bad)  
  40dfa9:	call   DWORD PTR [ebx-0x337c01]
  40dfaf:	add    dl,dl
  40dfb1:	fwait
  40dfb2:	(bad)  
  40dfb3:	jl     0x40dfb0
  40dfb5:	loope  0x40e025
  40dfb7:	into   
  40dfb8:	(bad)  
  40dfb9:	push   esi
  40dfbb:	add    BYTE PTR [ecx-0x36333400],cl
  40dfc1:	sbb    bh,bh
  40dfc3:	push   ecx
  40dfc4:	dec    eax
  40dfc5:	ja     0x40dffe
  40dfc7:	adc    bh,bh
  40dfc9:	(bad)  
  40dfca:	jle    0x40dfcc
  40dfcc:	(bad)  
  40dfcd:	dec    esp
  40dfcf:	add    BYTE PTR [ecx+eax*1-0x77],cl
  40dfd3:	test   DWORD PTR ds:0x8962f1e7,esi
  40dfd9:	jmp    DWORD PTR [ebx+eax*4+0xcc00]
  40dfe0:	outs   dx,DWORD PTR ds:[esi]
  40dfe1:	dec    ecx
  40dfe2:	call   DWORD PTR [ebx]
  40dfe4:	xchg   ebp,eax
  40dfe5:	xchg   ecx,eax
  40dfe6:	scas   eax,DWORD PTR es:[edi]
  40dfe7:	cmp    edi,0x83cc6f83
  40dfed:	(bad)  
  40dfee:	inc    DWORD PTR [eax]
  40dff0:	shl    dl,cl
  40dff2:	add    BYTE PTR [edi-0x36],cl
  40dff5:	ds inc ebp
  40dff7:	push   ecx
  40dff8:	add    DWORD PTR [ebx+0xffff9d],0xffffff83
  40dfff:	add    BYTE PTR [eax-0x71],bl
  40e002:	call   DWORD PTR [ebp-0x7040cb1e]
  40e008:	inc    DWORD PTR [eax]
  40e00a:	pop    ecx
  40e00b:	(bad)  
  40e00c:	inc    DWORD PTR [eax]
  40e00e:	int3   
  40e00f:	jmp    FWORD PTR [edx]
  40e011:	fiadd  WORD PTR [eax]
  40e013:	and    bh,bh
  40e015:	dec    ebx
  40e016:	or     BYTE PTR [eax+eax*1-0x330901],dl
  40e01d:	int3   
  40e01e:	add    BYTE PTR [eax],al
  40e020:	cmp    bh,BYTE PTR [ebx-0x24928877]
  40e026:	push   edx
  40e027:	ret    0x8300
  40e02a:	push   0xff00cc
  40e02f:	add    BYTE PTR [ecx],al
  40e031:	xor    al,0xff
  40e033:	es pop ss
  40e035:	stos   DWORD PTR es:[edi],eax
  40e036:	pop    ds
  40e037:	ins    BYTE PTR es:[edi],dx
  40e038:	mov    edi,edi
  40e03a:	xchg   ecx,eax
  40e03b:	mov    DWORD PTR [ebx-0x32767601],eax
  40e041:	add    edi,edi
  40e043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e044:	cmp    ebp,DWORD PTR ds:0x89ff9210
  40e04a:	in     eax,0x0
  40e04c:	add    BYTE PTR [eax],al
  40e04e:	inc    DWORD PTR [eax]
  40e050:	mov    edi,0x8ec7ffa0
  40e055:	leave  
  40e056:	sub    cl,BYTE PTR [edx+0x0]
  40e059:	(bad)  
  40e05a:	mov    edi,0xff000083
  40e05f:	(bad)  
  40e060:	jmp    0x58f1e0ae
  40e065:	aad    0xc7
  40e067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e068:	int3   
  40e069:	inc    DWORD PTR [ecx]
  40e06b:	mov    DWORD PTR [eax],eax
  40e06d:	inc    DWORD PTR [eax]
  40e06f:	add    BYTE PTR [edx],dh
  40e071:	inc    DWORD PTR [ebx+0x478d1d9f]
  40e077:	and    DWORD PTR [ebx-0x7c33b901],eax
  40e07d:	cmp    edi,0xffffffff
  40e080:	pop    esp
  40e081:	les    eax,FWORD PTR [ebx+0x6a8c9ff6]
  40e087:	xor    bh,bh
  40e089:	push   DWORD PTR [eax]
  40e08b:	add    BYTE PTR [eax],al
  40e08d:	mov    esp,ecx
  40e08f:	adc    DWORD PTR ds:0x50bb00fa,0x4e
  40e096:	sbb    al,0x84
  40e098:	add    bh,bh
  40e09a:	cmp    al,0xff
  40e09c:	inc    DWORD PTR [ebx-0x2ff17601]
  40e0a2:	add    BYTE PTR [esi-0x26],bh
  40e0a5:	xor    al,0xd0
  40e0a7:	test   eax,0xc400ff
  40e0ac:	inc    DWORD PTR [ebx+0x6c8effff]
  40e0b2:	(bad)  
  40e0b3:	mov    edi,0xfbe084fe
  40e0b8:	mov    DWORD PTR [ecx-0xffb0],ecx
  40e0be:	add    bh,bh
  40e0c0:	push   ebp
  40e0c1:	and    eax,DWORD PTR [eax]
  40e0c3:	ja     0x40e070
  40e0c5:	ins    BYTE PTR es:[edi],dx
  40e0c6:	xchg   BYTE PTR [edi],bh
  40e0c8:	add    DWORD PTR [ebx-0x7c0000df],0x0
  40e0cf:	int3   
  40e0d0:	bound  esp,QWORD PTR [esi]
  40e0d2:	int3   
  40e0d3:	in     al,0x62
  40e0d5:	aad    0xff
  40e0d7:	xchg   esi,eax
  40e0d8:	(bad)  
  40e0d9:	call   FWORD PTR [ecx+ecx*4]
  40e0dc:	inc    DWORD PTR [ebx-0x4a610034]
  40e0e2:	jmp    FWORD PTR [esi-0x7a0e875a]
  40e0e8:	inc    DWORD PTR [eax]
  40e0ea:	jp     0x40e0eb
  40e0ec:	mov    esp,ecx
  40e0ee:	add    ah,cl
  40e0f0:	shl    DWORD PTR [edx],1
  40e0f2:	jmp    FWORD PTR [ebx-0x18]
  40e0f5:	jg     0x40e078
  40e0f7:	mov    ebp,0xff858300
  40e0fc:	(bad)  
  40e0fd:	inc    DWORD PTR [eax]
  40e0ff:	(bad)  
  40e100:	fcomp  QWORD PTR [eax+eax*1]
  40e103:	jae    0x40e13b
  40e105:	dec    ebp
  40e106:	push   0x51
  40e108:	mov    DWORD PTR [eax],eax
  40e10a:	ds cmp edi,0xffffffff
  40e10e:	inc    DWORD PTR [ebx+0x7dffd109]
  40e114:	fst    QWORD PTR [edx+0x7]
  40e117:	leave  
  40e118:	inc    DWORD PTR [eax]
  40e11a:	jmp    0x40e11b
  40e11c:	int3   
  40e11d:	cmp    edi,0xffffffcc
  40e120:	add    eax,0x6b50ff4b
  40e125:	push   edi
  40e126:	cli    
  40e127:	sar    bh,1
  40e129:	jmp    FWORD PTR [eax-0x7c0001]
  40e12f:	add    al,bh
  40e131:	mov    eax,0xf56aff
  40e136:	add    bh,bh
  40e138:	inc    DWORD PTR [ebx-0x7cff7d]
  40e13e:	(bad)  
  40e13f:	inc    DWORD PTR [eax]
  40e141:	sub    al,0x0
  40e143:	inc    DWORD PTR [eax]
  40e145:	and    bl,BYTE PTR [esi]
  40e147:	std    
  40e148:	add    BYTE PTR [esi-0x5a000001],ch
  40e14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e14f:	sar    bh,1
  40e151:	lods   eax,DWORD PTR ds:[esi]
  40e152:	inc    DWORD PTR [eax]
  40e154:	mov    edi,ebx
  40e156:	loopne 0x40e192
  40e158:	add    BYTE PTR [eax+0x6accffff],bl
  40e15e:	fwait
  40e15f:	mov    DWORD PTR es:[ebp+0x0],esp
  40e163:	(bad)  
  40e164:	jmp    FWORD PTR [edi+ebx*8-0xfb00d4]
  40e16b:	int3   
  40e16c:	add    BYTE PTR [ebp+0x62],dh
  40e16f:	gs jmp esp
  40e172:	(bad)  
  40e173:	(bad)  
  40e174:	dec    DWORD PTR [esi-0x2]
  40e177:	mov    ch,0xcc
  40e179:	mov    ecx,0x3fffffff
  40e17e:	std    
  40e17f:	mov    esp,0xffa4ff
  40e184:	add    cl,bh
  40e186:	xchg   esp,eax
  40e187:	mov    edi,edi
  40e189:	dec    eax
  40e18a:	add    bh,bh
  40e18c:	sub    eax,0x5e
  40e18f:	push   cs
  40e190:	add    BYTE PTR [ecx],ah
  40e192:	(bad)  
  40e193:	(bad)  
  40e194:	dec    DWORD PTR [edx]
  40e196:	call   0xff98adc0
  40e19b:	add    DWORD PTR [eax],0xffffffb5
  40e19e:	push   ss
  40e19f:	js     0x40e1a0
  40e1a1:	cmp    bh,0xff
  40e1a4:	(bad)  
  40e1a5:	jns    0x40e199
  40e1a7:	ror    ah,cl
  40e1a9:	xor    al,BYTE PTR [eax]
  40e1ab:	inc    DWORD PTR [eax]
  40e1ad:	into   
  40e1ae:	sti    
  40e1af:	int3   
  40e1b0:	add    BYTE PTR ds:0x200ff89,cl
  40e1b6:	mov    dl,0x7c
  40e1b8:	call   esi
  40e1ba:	or     DWORD PTR [ecx+0x500782ff],0x0
  40e1c1:	popa   
  40e1c2:	cmp    edi,0xffffffff
  40e1c5:	dec    esi
  40e1c6:	jb     0x40e23c
  40e1c8:	jmp    DWORD PTR [ecx+ecx*4]
  40e1cb:	dec    DWORD PTR [ecx+0xacad9b]
  40e1d1:	xchg   edx,eax
  40e1d2:	inc    DWORD PTR [ebx-0x1ae10c00]
  40e1d8:	int3   
  40e1d9:	fwait
  40e1da:	cmp    edi,0x0
  40e1dd:	cmp    al,0x7b
  40e1df:	pop    esi
  40e1e0:	(bad)  
  40e1e1:	cmp    eax,0x7dff0083
  40e1e6:	jp     0x40e188
  40e1e8:	mov    DWORD PTR [edi+edi*8+0x722accff],ebp
  40e1ef:	and    bh,bh
  40e1f1:	jmp    0x40e1f3
  40e1f3:	inc    DWORD PTR [eax]
  40e1f5:	fiadd  DWORD PTR [ebp-0x6]
  40e1f8:	cmp    edi,0xffffffcc
  40e1fb:	dec    DWORD PTR [ecx-0x4d2b97]
  40e201:	aaa    
  40e202:	inc    DWORD PTR [eax]
  40e204:	jmp    FWORD PTR [ebp+ecx*4-0x8376e4]
  40e20b:	add    BYTE PTR [ebx-0x7c97857f],al
  40e211:	ss add bh,bh
  40e214:	mov    edi,ecx
  40e216:	pop    esi
  40e217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e218:	add    BYTE PTR [ebp-0x62ffff01],cl
  40e21e:	repnz push esp
  40e220:	call   FWORD PTR [esi-0x1]
  40e223:	add    bh,bh
  40e225:	cmp    eax,0xa0090a6
  40e22a:	dec    esp
  40e22c:	call   FWORD PTR [esi]
  40e22e:	out    dx,al
  40e22f:	pop    ecx
  40e230:	add    bl,ch
  40e232:	(bad)  
  40e233:	(bad)  
  40e234:	(bad)  
  40e235:	out    dx,al
  40e236:	push   edi
  40e237:	xor    bh,bh
  40e239:	add    edi,edi
  40e23b:	inc    DWORD PTR [eax]
  40e23d:	leave  
  40e23e:	jge    0x40e20c
  40e240:	int3   
  40e241:	push   ecx
  40e242:	int3   
  40e243:	(bad)  
  40e244:	call   FWORD PTR [ecx-0x39]
  40e247:	push   es
  40e248:	add    BYTE PTR [edi+edi*8],ah
  40e24b:	inc    DWORD PTR [eax]
  40e24d:	sar    DWORD PTR [edx+0x3c00aa],0x83
  40e254:	int3   
  40e255:	pop    ebp
  40e256:	pop    edx
  40e257:	pop    ds
  40e258:	add    BYTE PTR [ecx-0x1],dh
  40e25b:	add    BYTE PTR [eax],al
  40e25d:	pushf  
  40e25e:	and    ecx,DWORD PTR [esi+0xcc56cc]
  40e264:	add    BYTE PTR ds:0xfa834b26,bh
  40e26a:	add    bh,bh
  40e26c:	push   DWORD PTR [edx-0x7d]
  40e26f:	mov    dh,0x0
  40e271:	js     0x40e272
  40e273:	add    BYTE PTR [eax],al
  40e275:	retf   
  40e276:	shl    ch,1
  40e278:	add    al,bh
  40e27a:	add    BYTE PTR [eax],al
  40e27c:	or     esi,0xffffffc9
  40e27f:	(bad)  
  40e280:	call   DWORD PTR [ecx+0xaff8389]
  40e286:	pop    esi
  40e287:	or     DWORD PTR [ebx-0xff0069],eax
  40e28d:	(bad)  
  40e28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e28f:	xor    cl,BYTE PTR [ecx+0xffff86]
  40e295:	xor    dl,BYTE PTR [ebp+0x3d]
  40e298:	add    BYTE PTR [ebx],bl
  40e29a:	inc    DWORD PTR [eax]
  40e29c:	call   FWORD PTR [edi]
  40e29e:	push   cs
  40e29f:	pop    es
  40e2a0:	call   FWORD PTR [edx-0x77]
  40e2a3:	add    BYTE PTR [eax],al
  40e2a5:	inc    esi
  40e2a6:	aad    0x42
  40e2a8:	int3   
  40e2a9:	cmp    esp,ecx
  40e2ab:	inc    DWORD PTR [eax]
  40e2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ae:	or     BYTE PTR [ebx-0x1],dh
  40e2b1:	(bad)  
  40e2b2:	int3   
  40e2b3:	or     DWORD PTR [ecx+0x1785a4],0x1
  40e2ba:	add    bh,bh
  40e2bc:	dec    edx
  40e2be:	push   ss
  40e2bf:	sbb    ecx,esp
  40e2c1:	inc    ecx
  40e2c2:	(bad)  
  40e2c3:	(bad)  
  40e2c4:	inc    DWORD PTR [esi]
  40e2c6:	and    DWORD PTR [ebx+0x0],ebx
  40e2c9:	(bad)  
  40e2cc:	int3   
  40e2cd:	aad    0x69
  40e2cf:	mov    edi,edi
  40e2d1:	or     al,0x89
  40e2d3:	cmp    edi,0xffffffa3
  40e2d6:	outs   dx,DWORD PTR ds:[esi]
  40e2d7:	data16 add al,bh
  40e2da:	dec    DWORD PTR [ecx+0x58074eff]
  40e2e0:	add    BYTE PTR [ebp+0x0],bl
  40e2e3:	add    BYTE PTR [ebx+0x13e98b],al
  40e2e9:	xor    edi,edi
  40e2eb:	add    DWORD PTR [eax],0x3b
  40e2ee:	loope  0x40e313
  40e2f0:	jmp    FWORD PTR [esi-0x6d000100]
  40e2f6:	add    ebp,DWORD PTR [ebx]
  40e2f8:	(bad)  
  40e2f9:	jmp    0xa641e2fd
  40e2fe:	mov    ah,0x5c
  40e300:	add    bl,cl
  40e302:	add    BYTE PTR [ecx+0x7161de00],cl
  40e308:	int3   
  40e309:	rol    DWORD PTR [ebx+0x216fffff],1
  40e30f:	mov    edx,0xff00e8ff
  40e314:	call   FWORD PTR [edx+0x5dff4560]
  40e31a:	(bad)  
  40e31b:	inc    DWORD PTR [eax]
  40e31d:	mov    ebp,0x9cffffff
  40e322:	add    DWORD PTR [ebx+0x3f36a0ff],0xffffffff
  40e329:	add    bh,bh
  40e32b:	inc    DWORD PTR [eax]
  40e32d:	mov    cl,0xfc
  40e32f:	scas   eax,DWORD PTR es:[edi]
  40e330:	(bad)  
  40e331:	aas    
  40e332:	add    BYTE PTR [ebx+0x656244ff],al
  40e338:	inc    DWORD PTR [eax+0x74cc00ff]
  40e33e:	and    bh,BYTE PTR [edi-0x1]
  40e341:	sbb    DWORD PTR [ebx-0x5d320000],eax
  40e347:	cmp    bh,0x70
  40e34a:	dec    esp
  40e34c:	add    BYTE PTR ds:0xd783775d,bl
  40e352:	(bad)  
  40e353:	(bad)  
  40e354:	call   FWORD PTR [edx+0xff4474]
  40e35a:	add    bh,bh
  40e35c:	add    BYTE PTR [esp+esi*4+0x20],dl
  40e360:	add    BYTE PTR [ebx-0x34],bh
  40e363:	(bad)  
  40e364:	call   DWORD PTR [eax+0x10]
  40e367:	or     eax,0xffff0683
  40e36c:	add    BYTE PTR [ecx+0xb],dl
  40e36f:	jl     0x40e370
  40e371:	ss add bh,bh
  40e374:	sbb    DWORD PTR [ecx-0x72],0xffffff84
  40e378:	jmp    DWORD PTR [eax]
  40e37a:	int3   
  40e37b:	(bad)  
  40e37c:	dec    ebx
  40e37e:	push   ebp
  40e37f:	pop    edx
  40e380:	add    BYTE PTR [ebx+0x0],bh
  40e383:	add    DWORD PTR [eax],0x8
  40e386:	xlat   BYTE PTR ds:[ebx]
  40e387:	out    dx,al
  40e388:	cmp    ebp,0xffffffff
  40e38b:	int3   
  40e38c:	(bad)  
  40e38d:	cmp    al,0xd3
  40e38f:	jae    0x40e391
  40e391:	test   al,0xff
  40e393:	dec    DWORD PTR [ecx+0xb7d9e5]
  40e399:	int    0xff
  40e39b:	add    DWORD PTR [eax],0xffffff97
  40e39e:	mov    ?,WORD PTR [edx]
  40e3a0:	add    BYTE PTR [ebx-0x34],dl
  40e3a3:	inc    DWORD PTR [eax]
  40e3a5:	inc    edx
  40e3a6:	scas   eax,DWORD PTR es:[edi]
  40e3a7:	ror    ah,cl
  40e3a9:	xchg   DWORD PTR [eax],eax
  40e3ab:	add    BYTE PTR [eax],al
  40e3ad:	sbb    ch,BYTE PTR [ebx-0x513387]
  40e3b3:	(bad)  
  40e3b4:	jmp    FWORD PTR [ebp+0x2c]
  40e3b7:	mov    ch,0x0
  40e3b9:	ja     0x40e33e
  40e3bb:	inc    DWORD PTR [eax]
  40e3bd:	aad    0xda
  40e3bf:	add    DWORD PTR [eax],0xff0000da
  40e3c5:	pop    ebp
  40e3c6:	cmp    al,0xf5
  40e3c8:	int3   
  40e3c9:	mov    esi,0x88ff0083
  40e3ce:	mov    bl,0xd4
  40e3d0:	(bad)  
  40e3d1:	(bad)  
  40e3d3:	cmp    edi,0x77
  40e3d6:	mov    esi,0xffb6ff10
  40e3db:	mov    edi,edi
  40e3dd:	jo     0x40e3d9
  40e3df:	scas   al,BYTE PTR es:[edi]
  40e3e0:	cmp    DWORD PTR [ecx],0xffffffcc
  40e3e3:	(bad)  
  40e3e4:	jmp    esp
  40e3e6:	push   eax
  40e3e7:	fwait
  40e3e8:	inc    edx
  40e3ea:	mov    esp,ecx
  40e3ec:	(bad)  
  40e3ed:	mov    eax,0xdf836447
  40e3f2:	inc    DWORD PTR [eax]
  40e3f4:	add    BYTE PTR [edx+0x6b],dh
  40e3f7:	mov    esi,0x89ffd400
  40e3fc:	sbb    ebp,0x33
  40e3ff:	sbb    BYTE PTR [eax],al
  40e401:	xchg   ebp,eax
  40e402:	inc    DWORD PTR [eax]
  40e404:	dec    ebx
  40e406:	fisubr WORD PTR [ebx]
  40e408:	call   FWORD PTR [ebp-0x607c0100]
  40e40e:	sub    ebp,esi
  40e410:	add    BYTE PTR [eax],ch
  40e412:	add    BYTE PTR [ebx-0x20790e77],al
  40e418:	inc    DWORD PTR [eax-0x1]
  40e41b:	add    BYTE PTR [eax],al
  40e41d:	push   eax
  40e41e:	xlat   BYTE PTR ds:[ebx]
  40e41f:	test   DWORD PTR [ecx-0x33007ce3],0x5cd7fe
  40e429:	sbb    edi,edi
  40e42b:	add    BYTE PTR [ebx-0xd438f8],al
  40e431:	cs cmp edi,0xffffffff
  40e435:	nop
  40e436:	pushf  
  40e437:	jecxz  0x40e438
  40e439:	scas   eax,DWORD PTR es:[edi]
  40e43a:	add    bh,bh
  40e43c:	call   FWORD PTR [ebp-0x1b009715]
  40e442:	add    DWORD PTR [eax],0xffffff83
  40e445:	push   ds
  40e446:	repnz sub bh,bh
  40e449:	mov    ebp,0x47ffff00
  40e44e:	enter  0xff65,0x13
  40e452:	add    BYTE PTR [eax],al
  40e454:	sub    DWORD PTR [ebx],0xffffffd8
  40e457:	inc    ebx
  40e458:	jmp    DWORD PTR [eax+eax*1+0x6ba3ffff]
  40e45f:	stos   DWORD PTR es:[edi],eax
  40e460:	add    ch,bh
  40e462:	(bad)  
  40e463:	(bad)  
  40e464:	call   DWORD PTR [eax]
  40e466:	sti    
  40e467:	pop    ecx
  40e468:	jmp    esp
  40e46a:	(bad)  
  40e46b:	(bad)  
  40e46c:	push   edx
  40e46e:	dec    ebp
  40e46f:	jb     0x40e471
  40e471:	outs   dx,BYTE PTR ds:[esi]
  40e472:	(bad)  
  40e473:	(bad)  
  40e474:	jmp    FWORD PTR [ebx+0x31]
  40e477:	xchg   bh,bh
  40e479:	cmp    ecx,esp
  40e47b:	inc    DWORD PTR [eax]
  40e47d:	das    
  40e47e:	out    dx,al
  40e47f:	inc    esi
  40e480:	int3   
  40e481:	fcos   
  40e483:	add    bh,bh
  40e485:	lds    esi,FWORD PTR [ecx-0x330a0074]
  40e48b:	dec    DWORD PTR [ecx-0xf4333f]
  40e491:	xor    al,0xff
  40e493:	add    DWORD PTR [ebx-0x61762b],0x7a
  40e49a:	(bad)  
  40e49b:	(bad)  
  40e49c:	jmp    DWORD PTR [edi-0x35009f1c]
  40e4a2:	mov    edi,edi
  40e4a4:	(bad)  
  40e4a5:	mov    eax,0x270021c5
  40e4aa:	inc    DWORD PTR [eax]
  40e4ac:	add    BYTE PTR [ecx],al
  40e4ae:	fistp  WORD PTR [eax+0x0]
  40e4b1:	mov    ecx,0xa1ff0083
  40e4b6:	sbb    eax,0x830500dd
  40e4bb:	cmp    edi,0x4a
  40e4be:	test   al,0xa8
  40e4c0:	add    ch,ah
  40e4c2:	(bad)  
  40e4c3:	inc    DWORD PTR [ebx-0xcd648e]
  40e4c9:	jno    0x40e4ca
  40e4cb:	inc    DWORD PTR [ebx-0x3309afe6]
  40e4d1:	cmp    bh,bh
  40e4d3:	cmp    edi,0x67
  40e4d6:	stos   BYTE PTR es:[edi],al
  40e4d7:	mov    al,BYTE PTR [ebx-0x3300dc]
  40e4dd:	jb     0x40e51e
  40e4df:	scas   eax,DWORD PTR es:[edi]
  40e4e0:	and    DWORD PTR [ebx],0xffffffff
  40e4e3:	inc    DWORD PTR [eax]
  40e4e5:	ins    BYTE PTR es:[edi],dx
  40e4e6:	adc    ecx,edi
  40e4e8:	add    BYTE PTR [ecx+0x45cc0000],ch
  40e4ee:	pop    ss
  40e4ef:	mov    ?,edi
  40e4f1:	loopne 0x40e476
  40e4f3:	(bad)  
  40e4f4:	call   DWORD PTR [ecx-0x51ff92c8]
  40e4fa:	add    ah,cl
  40e4fc:	cmp    DWORD PTR [edx],0x2
  40e4ff:	mov    ds:0xff00a183,eax
  40e504:	jmp    edx
  40e506:	xor    BYTE PTR [ecx],ch
  40e508:	(bad)  
  40e509:	fdivr  st,st(7)
  40e50b:	inc    DWORD PTR [eax]
  40e50d:	adc    cl,BYTE PTR [ecx]
  40e50f:	add    al,0xff
  40e511:	add    BYTE PTR [ebx-0x55980100],al
  40e517:	mov    WORD PTR [ebx-0xad],es
  40e51d:	(bad)  
  40e51e:	fmul   QWORD PTR [esi]
  40e520:	int3   
  40e521:	repz dec esp
  40e524:	int3   
  40e525:	int3   
  40e526:	test   al,0x1c
  40e528:	jmp    DWORD PTR [edi+0x25ff0083]
  40e52e:	pop    ebx
  40e52f:	sahf   
  40e530:	jmp    FWORD PTR [edx+0x0]
  40e533:	cmp    edi,0x2e
  40e536:	(bad)  
  40e537:	push   ebp
  40e538:	push   edi
  40e53a:	inc    DWORD PTR [eax]
  40e53c:	(bad)  
  40e53d:	in     eax,dx
  40e53e:	jo     0x40e4fd
  40e540:	call   DWORD PTR [edx-0x1]
  40e543:	mov    DWORD PTR [eax],eax
  40e545:	std    
  40e546:	or     eax,0xff9fff39
  40e54b:	add    ah,cl
  40e54d:	pop    ds
  40e54e:	rcr    DWORD PTR [ecx-0x7d],0x88
  40e552:	cmp    edi,0xffffffcc
  40e555:	jno    0x40e4fa
  40e557:	push   esp
  40e558:	sub    DWORD PTR [ebp+0x16ffccff],0xffffff8b
  40e55f:	jno    0x40e561
  40e561:	cdq    
  40e562:	inc    DWORD PTR [ebx+0x68451700]
  40e568:	mov    DWORD PTR [edx-0x1],ebp
  40e56b:	int3   
  40e56c:	add    al,ch
  40e56e:	pop    ds
  40e56f:	pop    ebx
  40e570:	add    ch,ah
  40e572:	or     DWORD PTR [ecx-0x3e099800],0x0
  40e579:	fs add bh,bh
  40e57c:	mov    DWORD PTR [edi-0x3],edx
  40e57f:	add    bh,bh
  40e581:	fiadd  DWORD PTR [ebx+0x2f24ccff]
  40e587:	pop    ds
  40e588:	add    dl,dh
  40e58a:	dec    esp
  40e58c:	add    BYTE PTR [esi-0x21],cl
  40e58f:	jl     0x40e590
  40e591:	mov    dl,0xff
  40e593:	add    bh,bh
  40e595:	jg     0x40e590
  40e597:	dec    ecx
  40e598:	int3   
  40e599:	stc    
  40e59a:	dec    esp
  40e59c:	add    BYTE PTR [eax+0x30],ah
  40e59f:	mov    esp,0x2a00
  40e5a4:	int3   
  40e5a5:	jbe    0x40e614
  40e5a7:	ror    esp,cl
  40e5a9:	lods   eax,DWORD PTR ds:[esi]
  40e5aa:	dec    esp
  40e5ac:	sub    DWORD PTR [edx+eax*2+0x54],0xffffffff
  40e5b1:	stc    
  40e5b2:	or     esp,0xffffffff
  40e5b5:	and    BYTE PTR cs:[ebx-0xff8800],al
  40e5bc:	add    BYTE PTR [edx+0x47],dh
  40e5bf:	out    dx,eax
  40e5c0:	int3   
  40e5c1:	(bad)  
  40e5c3:	add    DWORD PTR [ebx+0x1ba653],0xffffff80
  40e5ca:	inc    DWORD PTR [eax]
  40e5cc:	jmp    DWORD PTR [edx-0x4700af9e]
  40e5d2:	int3   
  40e5d3:	inc    DWORD PTR [eax]
  40e5d5:	or     ecx,DWORD PTR [esi-0x7e]
  40e5d8:	jmp    ebx
  40e5da:	(bad)  
  40e5db:	dec    esp
  40e5dd:	retf   
  40e5de:	call   DWORD PTR [eax-0xa201]
  40e5e4:	add    al,bh
  40e5e6:	dec    edx
  40e5e7:	loop   0x40e5e8
  40e5e9:	stos   DWORD PTR es:[edi],eax
  40e5ea:	(bad)  
  40e5eb:	dec    esp
  40e5ed:	dec    esp
  40e5ee:	adc    esp,DWORD PTR [eax]
  40e5f0:	jmp    DWORD PTR [esi-0x48007c01]
  40e5f6:	jns    0x40e5d3
  40e5f8:	mov    edi,ebp
  40e5fa:	dec    esp
  40e5fc:	jmp    FWORD PTR [ecx-0x56]
  40e5ff:	int3   
  40e600:	add    BYTE PTR [eax+eax*1-0x1],ch
  40e604:	inc    DWORD PTR [eax-0x16]
  40e607:	ret    
  40e608:	adc    DWORD PTR [esi+0x1d008383],0xffffffcd
  40e60f:	cld    
  40e610:	jmp    FWORD PTR ds:0xa3ffff00
  40e616:	add    BYTE PTR [ebp-0x7c00a001],bl
  40e61c:	call   FWORD PTR [esi+0x69]
  40e61f:	sub    DWORD PTR [eax],eax
  40e621:	ret    0xff
  40e624:	(bad)  
  40e625:	out    dx,eax
  40e626:	dec    ecx
  40e627:	mov    bh,0xff
  40e629:	clc    
  40e62a:	(bad)  
  40e62b:	(bad)  
  40e62c:	push   DWORD PTR [ebx-0x3e]
  40e62f:	clc    
  40e630:	push   DWORD PTR [ecx]
  40e632:	add    bh,bh
  40e634:	(bad)  
  40e635:	sti    
  40e636:	xchg   edx,eax
  40e637:	dec    esi
  40e638:	dec    DWORD PTR [esi+0x2affff00]
  40e63e:	arpl   WORD PTR [ebx-0x7c00f101],dx
  40e644:	(bad)  
  40e645:	mov    esp,0x27006e0b
  40e64a:	add    bh,bh
  40e64c:	(bad)  
  40e64d:	jge    0x40e675
  40e64f:	pop    esp
  40e650:	inc    DWORD PTR [ebp-0x3cff0100]
  40e656:	push   cs
  40e657:	sbb    eax,DWORD PTR [eax]
  40e659:	std    
  40e65a:	(bad)  
  40e65b:	inc    DWORD PTR [eax]
  40e65d:	push   ebp
  40e65e:	adc    BYTE PTR [eax+eax*1+0x3],dh
  40e662:	inc    DWORD PTR [eax]
  40e664:	jmp    edi
  40e666:	sub    BYTE PTR [esi],0xff
  40e669:	sub    ecx,DWORD PTR [ecx+0x1e6dffff]
  40e66f:	pop    DWORD PTR [ebx+0xffff96]
  40e675:	aam    0x5d
  40e677:	or     edi,edi
  40e679:	in     eax,0xff
  40e67b:	add    ah,cl
  40e67d:	mov    edx,0x84ffedc8
  40e682:	add    bh,bh
  40e684:	mov    DWORD PTR [ebx],ebp
  40e686:	loop   0x40e6cc
  40e688:	int3   
  40e689:	cmp    ecx,esp
  40e68b:	mov    edi,edi
  40e68d:	pop    esi
  40e68e:	adc    eax,0xffe389dc
  40e693:	add    DWORD PTR [ebx-0x7f67e4],0xfffffffc
  40e69a:	inc    DWORD PTR [eax]
  40e69c:	jmp    DWORD PTR [ecx+ebp*2+0x150043]
  40e6a3:	inc    DWORD PTR [eax]
  40e6a5:	test   DWORD PTR [edx+0x83ff26],esp
  40e6ab:	inc    DWORD PTR [eax]
  40e6ad:	dec    edi
  40e6ae:	fcomp  DWORD PTR [eax-0x7d]
  40e6b1:	xlat   BYTE PTR ds:[ebx]
  40e6b2:	add    BYTE PTR [eax],al
  40e6b4:	jmp    FWORD PTR [ecx-0x27]
  40e6b7:	cwde   
  40e6b8:	or     DWORD PTR [edx+0x0],0xffffffff
  40e6bc:	inc    DWORD PTR [edx-0x1800ca26]
  40e6c2:	add    BYTE PTR [ebx-0x341cd200],al
  40e6c8:	call   FWORD PTR [edx+0x0]
  40e6cb:	add    BYTE PTR [eax],al
  40e6cd:	loopne 0x40e652
  40e6cf:	cmp    edi,0xffccff57
  40e6d5:	mov    al,ds:0x8083c0b7
  40e6da:	(bad)  
  40e6db:	inc    DWORD PTR [eax]
  40e6dd:	or     eax,0xcf008114
  40e6e2:	inc    DWORD PTR [eax]
  40e6e4:	push   DWORD PTR [edx+0x79]
  40e6e7:	cmp    BYTE PTR [eax],al
  40e6e9:	jge    0x40e6ea
  40e6eb:	dec    DWORD PTR [ecx-0x6c107]
  40e6f1:	xor    ecx,DWORD PTR [ecx-0x70c50000]
  40e6f7:	lds    eax,FWORD PTR [eax]
  40e6f9:	mov    bh,0xff
  40e6fb:	(bad)  
  40e6fc:	push   DWORD PTR [esi+0x34ff581f]
  40e702:	mov    edi,edi
  40e704:	call   DWORD PTR [edx]
  40e706:	(bad)  
  40e708:	int3   
  40e709:	push   ss
  40e70a:	add    bh,bh
  40e70c:	push   DWORD PTR [edx-0x10]
  40e70f:	and    BYTE PTR [eax],al
  40e711:	mov    eax,ds:0x428900cc
  40e716:	add    edi,eax
  40e718:	jmp    DWORD PTR [ebx]
  40e71a:	add    bh,bh
  40e71c:	(bad)  
  40e71d:	mov    eax,0x83ffcce8
  40e722:	(bad)  
  40e723:	inc    DWORD PTR [eax]
  40e725:	xchg   ebp,eax
  40e726:	fnsave [edi]
  40e728:	add    BYTE PTR [esi-0x7700007d],dl
  40e72e:	xor    BYTE PTR [ebx-0x7d],bh
  40e731:	popa   
  40e732:	int3   
  40e733:	add    DWORD PTR [eax],0x53
  40e736:	in     al,dx
  40e737:	jmp    0x13fe73c
  40e73c:	add    BYTE PTR [esi-0x60008b9b],dh
  40e742:	add    BYTE PTR [eax],al
  40e744:	mov    DWORD PTR [edx],ecx
  40e746:	sub    dh,cl
  40e748:	add    dh,bl
  40e74a:	or     DWORD PTR [ecx-0x2f9a3501],0xffffffff
  40e751:	stc    
  40e752:	add    bh,bh
  40e754:	push   DWORD PTR [eax]
  40e756:	and    bl,BYTE PTR [ecx+0xffb400]
  40e75c:	mov    DWORD PTR [edi],ebp
  40e75e:	outs   dx,BYTE PTR ds:[esi]
  40e75f:	test   al,0x83
  40e761:	ud0    edi,edi
  40e764:	mov    ebp,eax
  40e766:	mov    ah,0x61
  40e768:	xor    DWORD PTR [ecx+0x0],0xffffffff
  40e76c:	sbb    esi,0xffffffec
  40e76f:	mov    bh,0xff
  40e771:	adc    al,0xff
  40e773:	add    bh,bh
  40e775:	sbb    al,0xe
  40e777:	mov    ebx,0xffd4ff
  40e77c:	jmp    DWORD PTR [ebx+ecx*2-0x370078]
  40e783:	inc    DWORD PTR [ebx+0x4eff31]
  40e789:	push   edx
  40e78a:	add    ah,cl
  40e78c:	add    BYTE PTR [ecx-0x71],dl
  40e78f:	hlt    
  40e790:	int3   
  40e791:	inc    esp
  40e792:	add    BYTE PTR [eax],al
  40e794:	(bad)  
  40e795:	fisttp WORD PTR [esi]
  40e797:	in     al,dx
  40e798:	dec    DWORD PTR [ebx-0x50ff0100]
  40e79e:	sub    bh,BYTE PTR [eax-0x76ffd600]
  40e7a4:	add    dh,bl
  40e7a6:	es hlt 
  40e7a8:	mov    DWORD PTR [eax+0x3dffffff],edx
  40e7ae:	out    dx,al
  40e7af:	(bad)  
  40e7b0:	jmp    FWORD PTR [edx]
  40e7b2:	add    bh,bh
  40e7b4:	int3   
  40e7b5:	mov    eax,ds:0x54ffd056
  40e7ba:	add    BYTE PTR [eax],al
  40e7bc:	jmp    FWORD PTR ds:0x60002a75
  40e7c2:	add    bh,bh
  40e7c4:	mov    DWORD PTR ds:0xcb0086aa,ebp
  40e7ca:	add    bh,bh
  40e7cc:	inc    DWORD PTR [edx-0x39000746]
  40e7d2:	(bad)  
  40e7d3:	(bad)  
  40e7d4:	inc    DWORD PTR [ecx+0x68ff3c7d]
  40e7da:	inc    DWORD PTR [eax]
  40e7dc:	jmp    FWORD PTR [ecx+0x6d]
  40e7df:	lods   eax,DWORD PTR ds:[esi]
  40e7e0:	int3   
  40e7e1:	sbb    al,0x0
  40e7e3:	add    BYTE PTR [eax],al
  40e7e5:	sub    al,0xcd
  40e7e7:	push   edi
  40e7e8:	call   FWORD PTR ds:0x5f89ffff
  40e7ee:	mov    edi,0xffbfff99
  40e7f3:	(bad)  
  40e7f4:	call   FWORD PTR [ebx]
  40e7f6:	movups xmm7,xmm7
  40e7f9:	pop    eax
  40e7fa:	mov    DWORD PTR [ebx-0x7f85c57d],eax
  40e800:	call   FWORD PTR [edx-0x100ff7d]
  40e806:	inc    edi
  40e807:	inc    esi
  40e808:	jmp    DWORD PTR [edi]
  40e80a:	inc    DWORD PTR [eax]
  40e80c:	add    BYTE PTR [eax-0x36],ch
  40e80f:	and    bh,bh
  40e811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e812:	add    ah,cl
  40e814:	jmp    FWORD PTR [ebx+0x7e00bf7e]
  40e81a:	add    bh,bh
  40e81c:	call   FWORD PTR [ebp+0x899b84]
  40e822:	add    ah,cl
  40e824:	jmp    FWORD PTR [esi-0x4a]
  40e827:	lea    ecx,[ecx-0x36]
  40e82d:	jmp    0xff83:0x93ff4049
  40e834:	int3   
  40e835:	ds sbb al,ch
  40e838:	int3   
  40e839:	test   bh,bh
  40e83b:	(bad)  
  40e83c:	(bad)  
  40e83d:	mov    ebx,0x4ff91b2
  40e842:	add    bh,bh
  40e844:	call   DWORD PTR [edi+edx*8]
  40e847:	and    eax,DWORD PTR [eax]
  40e849:	adc    edi,edi
  40e84b:	inc    DWORD PTR [eax]
  40e84d:	mov    ebx,0x8cff995b
  40e852:	inc    DWORD PTR [ebx-0x3cb63977]
  40e858:	call   FWORD PTR [ecx]
  40e85a:	int3   
  40e85b:	add    bh,bh
  40e85d:	sbb    DWORD PTR [ecx],esp
  40e85f:	fs add bh,dl
  40e862:	(bad)  
  40e863:	inc    DWORD PTR [eax]
  40e865:	fwait
  40e866:	popf   
  40e867:	push   edx
  40e868:	add    BYTE PTR [ebp+0x3100ff00],ch
  40e86e:	imul   edx,ecx,0xfcc
  40e874:	add    BYTE PTR [esi-0xc],al
  40e877:	dec    ebp
  40e878:	add    dh,al
  40e87a:	add    DWORD PTR [eax],0xffffffff
  40e87d:	cmp    esp,0xff53ff63
  40e883:	add    bh,bh
  40e885:	inc    edi
  40e886:	or     al,0x6
  40e888:	(bad)  
  40e889:	js     0x40e857
  40e88b:	add    bh,bh
  40e88d:	or     eax,0xf683ee69
  40e892:	int3   
  40e893:	add    bh,bh
  40e895:	push   ds
  40e896:	nop
  40e897:	mov    BYTE PTR [eax],al
  40e899:	mov    ah,0x83
  40e89b:	dec    DWORD PTR [ecx+0x4a878b]
  40e8a1:	sbb    eax,0x3189ff89
  40e8a6:	in     eax,0xde
  40e8a8:	int3   
  40e8a9:	jl     0x40e8aa
  40e8ab:	inc    DWORD PTR [ebx-0xf0f9d9]
  40e8b1:	out    dx,eax
  40e8b2:	add    DWORD PTR [eax],0xffffffff
  40e8b5:	sbb    eax,0xa0838c48
  40e8ba:	add    bh,bh
  40e8bc:	jmp    DWORD PTR [edx]
  40e8be:	nop
  40e8bf:	rol    BYTE PTR [eax],1
  40e8c1:	jl     0x40e8c3
  40e8c3:	add    BYTE PTR [eax],al
  40e8c5:	(bad)  
  40e8c6:	cmovle edi,edi
  40e8c9:	mov    cl,0x0
  40e8cb:	int3   
  40e8cc:	inc    DWORD PTR [ebx]
  40e8ce:	xchg   DWORD PTR [edi-0x1],ecx
  40e8d1:	call   0xbd3fe8d6
  40e8d6:	push   0x74
  40e8d8:	cmp    edx,0xffffffff
  40e8db:	int3   
  40e8dc:	push   DWORD PTR [edx-0x52]
  40e8df:	dec    esp
  40e8e0:	add    BYTE PTR [esi],dh
  40e8e2:	inc    DWORD PTR [eax]
  40e8e4:	(bad)  
  40e8e5:	sti    
  40e8e6:	leave  
  40e8e7:	pop    ebx
  40e8e8:	add    dh,ch
  40e8ea:	inc    DWORD PTR [ebx+0x49fafc83]
  40e8f0:	add    dh,dl
  40e8f2:	inc    DWORD PTR [eax]
  40e8f4:	push   DWORD PTR ds:0xae003d68
  40e8fa:	inc    DWORD PTR [eax]
  40e8fc:	mov    DWORD PTR [esp+eiz*2+0x7e],eax
  40e900:	push   DWORD PTR [eax]
  40e902:	inc    DWORD PTR [ebx-0x46fe3677]
  40e908:	add    BYTE PTR [eax-0x4a000001],ch
  40e90e:	and    DWORD PTR [ecx-0x1],edx
  40e911:	or     al,0x0
  40e913:	inc    DWORD PTR [ebx-0x7c0e0884]
  40e919:	pop    edi
  40e91a:	dec    esp
  40e91c:	add    DWORD PTR [eax],0xffffffc2
  40e91f:	mov    ebx,0xffccb100
  40e924:	jmp    FWORD PTR [edx+0x2d0071b4]
  40e92a:	add    DWORD PTR [eax],0xffffffff
  40e92d:	std    
  40e92e:	test   esp,ecx
  40e930:	(bad)  
  40e931:	jl     0x40e933
  40e933:	add    BYTE PTR [ebx+0x2206aa],al
  40e939:	dec    esp
  40e93a:	inc    DWORD PTR [eax]
  40e93c:	add    BYTE PTR [esi-0x55337437],al
  40e942:	inc    DWORD PTR [eax]
  40e944:	add    BYTE PTR [edx-0x8],cl
  40e947:	jmp    0x6ecc:0x830076ff
  40e94e:	in     al,dx
  40e94f:	add    BYTE PTR fs:[edx+0x9ff00ff],ah
  40e956:	mov    ecx,0xccd4ff02
  40e95b:	inc    DWORD PTR [ebx-0x330eb78b]
  40e961:	mov    DWORD PTR [ebx-0x6a240001],0xabffb6
  40e96b:	(bad)  
  40e96c:	call   DWORD PTR [eax]
  40e96e:	and    BYTE PTR [ecx-0x76005e34],dl
  40e974:	adc    DWORD PTR [ebp+eiz*1-0x7c5a00f1],0xffffffff
  40e97c:	push   DWORD PTR [edx-0x62]
  40e97f:	pushf  
  40e980:	add    DWORD PTR [ebx-0x34],0x0
  40e984:	jmp    DWORD PTR [esi+0x10ff2856]
  40e98a:	add    bh,bh
  40e98c:	int3   
  40e98d:	xor    esi,eax
  40e98f:	leave  
  40e990:	(bad)  
  40e991:	out    dx,eax
  40e992:	add    BYTE PTR [eax],al
  40e994:	add    BYTE PTR [ebp-0x37c93a4],dl
  40e99a:	mov    edi,edi
  40e99c:	(bad)  
  40e99d:	cmp    eax,0x8b8302ea
  40e9a2:	dec    DWORD PTR [ecx-0x7c3dc67d]
  40e9a8:	or     DWORD PTR [ecx],0xffffff83
  40e9ab:	(bad)  
  40e9ac:	(bad)  
  40e9ad:	cmp    BYTE PTR [ecx+0x74],ah
  40e9b0:	add    BYTE PTR [edx-0x3676007d],bl
  40e9b6:	in     eax,0x31
  40e9b8:	(bad)  
  40e9b9:	mov    edx,0xcdff89ff
  40e9be:	pop    es
  40e9bf:	out    0x0,eax
  40e9c1:	gs cmp edi,0xffffffff
  40e9c5:	jle    0x40ea1a
  40e9c7:	test   DWORD PTR [ecx-0x7c0000d7],ecx
  40e9cd:	cmp    BYTE PTR [ebx+0x24],0x0
  40e9d1:	dec    ecx
  40e9d2:	inc    DWORD PTR [eax]
  40e9d4:	cmp    DWORD PTR ds:0xb30084f2,0x0
  40e9db:	cmp    edi,0xffffffbd
  40e9de:	(bad)  [ecx]
  40e9e0:	int3   
  40e9e1:	mov    BYTE PTR [eax],0x0
  40e9e4:	add    BYTE PTR [esi+esi*8],dl
  40e9e7:	jp     0x40e9e9
  40e9e9:	cmp    bh,bh
  40e9eb:	inc    DWORD PTR [eax]
  40e9ed:	jns    0x40e9e7
  40e9ef:	(bad)
  40e9f2:	add    bh,bh
  40e9f4:	call   DWORD PTR [esi]
  40e9f6:	cdq    
  40e9f7:	push   ebp
  40e9f8:	mov    ebx,ebp
  40e9fa:	inc    DWORD PTR [eax]
  40e9fc:	call   FWORD PTR [edx]
  40e9fe:	jl     0x40ea28
  40ea00:	call   FWORD PTR [ecx+0x0]
  40ea03:	cmp    edi,0xffffff82
  40ea06:	xor    al,0x4f
  40ea08:	call   edi
  40ea0a:	(bad)  
  40ea0b:	(bad)  
  40ea0c:	call   DWORD PTR [ecx-0x2a]
  40ea0f:	cmp    al,0x0
  40ea11:	push   0x93ffffff
  40ea16:	cmp    BYTE PTR [ebx-0xe301],0xff
  40ea1d:	push   edi
  40ea1e:	or     al,cl
  40ea20:	(bad)  
  40ea21:	inc    DWORD PTR [eax]
  40ea23:	int3   
  40ea24:	add    BYTE PTR [edi],ch
  40ea26:	mov    edx,0xffcce6ff
  40ea2c:	jmp    FWORD PTR [eax+0x5fff1f26]
  40ea32:	cmp    edi,0xffffffff
  40ea35:	ins    BYTE PTR es:[edi],dx
  40ea36:	imul   esi,DWORD PTR [ecx-0x7d],0xffffffd0
  40ea3a:	add    bh,bh
  40ea3c:	dec    DWORD PTR [ecx+0x51ff9db7]
  40ea42:	(bad)  
  40ea43:	dec    esp
  40ea45:	mov    eax,ds:0x33ff8ed4
  40ea4a:	cmp    edi,0x0
  40ea4d:	int    0xda
  40ea4f:	push   0xffffffff
  40ea51:	jae    0x40ea52
  40ea53:	add    BYTE PTR [ebx-0xe29470],al
  40ea59:	add    edi,edi
  40ea5b:	add    BYTE PTR [ebx-0x767bf48d],al
  40ea61:	lods   eax,DWORD PTR ds:[esi]
  40ea62:	mov    DWORD PTR [eax],eax
  40ea64:	add    cl,dh
  40ea66:	scas   al,BYTE PTR es:[edi]
  40ea67:	mov    cl,0x0
  40ea69:	stos   DWORD PTR es:[edi],eax
  40ea6a:	add    BYTE PTR [ebx+0x25b50b83],al
  40ea70:	jmp    eax
  40ea72:	inc    DWORD PTR [eax]
  40ea74:	or     edx,0xffffffb7
  40ea77:	mov    bh,bh
  40ea79:	add    al,BYTE PTR [eax]
  40ea7b:	or     DWORD PTR [ecx-0x8776e7],0x1b
  40ea82:	dec    esp
  40ea84:	call   FWORD PTR [ebx+0x35]
  40ea87:	dec    esp
  40ea88:	jmp    DWORD PTR [ebp-0x227d0000]
  40ea8e:	push   cs
  40ea8f:	mov    edi,edi
  40ea91:	cdq    
  40ea92:	inc    DWORD PTR [eax]
  40ea94:	(bad)  
  40ea95:	fnop   
  40ea97:	sub    BYTE PTR [eax],al
  40ea99:	push   ebx
  40ea9a:	add    BYTE PTR [ebx+0x18d98289],al
  40eaa0:	inc    DWORD PTR [esi]
  40eaa2:	or     esp,0xffffffff
  40eaa5:	imul   ecx,DWORD PTR [ebp-0x7c006e],0x6481ffff
  40eaaf:	inc    esi
  40eab0:	(bad)  
  40eab1:	jle    0x40eab3
  40eab3:	add    bh,bh
  40eab5:	in     al,0xa8
  40eab7:	xchg   edi,edi
  40eab9:	dec    edi
  40eaba:	inc    DWORD PTR [ebx-0x76ee1300]
  40eac0:	call   edx
  40eac2:	(bad)  
  40eac3:	(bad)  
  40eac4:	jmp    FWORD PTR [edi-0x11009242]
  40eaca:	cmp    edi,0xffffffff
  40eacd:	push   ecx
  40eace:	(bad)  
  40eacf:	push   0xffcca600
  40ead4:	dec    DWORD PTR [esi+0x28]
  40ead7:	lock inc DWORD PTR [ecx]
  40eada:	add    bh,bh
  40eadc:	add    BYTE PTR [esi-0x1400a547],bl
  40eae2:	add    BYTE PTR [ebx+0x7601e4ff],al
  40eae8:	dec    ebx
  40eaea:	add    BYTE PTR [ebx-0x6519b000],al
  40eaf0:	jmp    FWORD PTR [edx-0x34]
  40eaf3:	add    DWORD PTR [eax],0x3d
  40eaf6:	inc    esi
  40eaf7:	(bad)  
  40eaf8:	dec    DWORD PTR [edx]
  40eafa:	(bad)  
  40eafb:	inc    DWORD PTR [ebx-0x7ccf7a97]
  40eb01:	jl     0x40eb03
  40eb03:	cmp    edi,0x35
  40eb06:	adc    esi,DWORD PTR [ebp+0xff4f83]
  40eb0c:	inc    edx
  40eb0e:	mov    dl,0x5e
  40eb10:	add    ah,al
  40eb12:	int3   
  40eb13:	dec    esp
  40eb15:	and    al,0x27
  40eb17:	leave  
  40eb18:	push   DWORD PTR [eax+eax*1+0x4576ff00]
  40eb1f:	arpl   di,di
  40eb21:	mov    edi,0xe100ff83
  40eb26:	pop    ebx
  40eb27:	pop    edi
  40eb28:	sub    DWORD PTR [edi+edi*8-0x1],0xffffffff
  40eb2d:	test   BYTE PTR [eax],0x7
  40eb30:	and    DWORD PTR [ecx+0x0],0xffffffff
  40eb34:	(bad)  
  40eb35:	js     0x40eb82
  40eb37:	and    al,BYTE PTR [eax]
  40eb39:	or     BYTE PTR [ebx+0x66290000],al
  40eb3f:	fwait
  40eb40:	dec    DWORD PTR [edi-0x51ff0001]
  40eb46:	xchg   ebx,eax
  40eb47:	xchg   BYTE PTR [eax],al
  40eb49:	xchg   edi,eax
  40eb4a:	add    BYTE PTR [eax],al
  40eb4c:	call   ebx
  40eb4e:	pop    ds
  40eb4f:	adc    eax,0x83cc3e00
  40eb54:	int3   
  40eb55:	push   es
  40eb56:	stos   DWORD PTR es:[edi],eax
  40eb57:	fadd   QWORD PTR [eax]
  40eb59:	sbb    al,BYTE PTR [eax]
  40eb5b:	(bad)  
  40eb5c:	inc    edx
  40eb5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb5f:	ss add eax,0xffffffff
  40eb63:	inc    DWORD PTR [eax]
  40eb65:	sbb    ebx,DWORD PTR [esi+edx*8+0xcca1ff]
  40eb6c:	add    BYTE PTR [ecx-0x64008529],ch
  40eb72:	add    BYTE PTR [eax],al
  40eb74:	add    BYTE PTR [ebx],bl
  40eb76:	jge    0x40ebf6
  40eb78:	push   DWORD PTR [eax+0x1e89cc00]
  40eb7e:	fwait
  40eb7f:	mov    dl,0xff
  40eb81:	sbb    al,0xff
  40eb83:	(bad)  
  40eb84:	inc    esi
  40eb86:	push   es
  40eb87:	call   0xffc4b48b
  40eb8c:	jmp    DWORD PTR [ecx+0x7a]
  40eb8f:	fwait
  40eb90:	inc    DWORD PTR [ecx-0x77]
  40eb93:	(bad)  
  40eb94:	inc    esp
  40eb96:	mov    eax,0xff5acc11
  40eb9b:	(bad)  
  40eb9c:	inc    DWORD PTR [esi]
  40eb9e:	mov    ds:0xff558389,al
  40eba3:	or     DWORD PTR [ecx-0x993d78],0x32
  40ebaa:	cmp    edi,0x0
  40ebad:	outs   dx,BYTE PTR ds:[esi]
  40ebae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebaf:	cmp    eax,DWORD PTR [eax]
  40ebb1:	xchg   ebx,eax
  40ebb2:	mov    edi,edi
  40ebb4:	add    BYTE PTR [edx-0x100fd8d],dh
  40ebba:	add    BYTE PTR [eax],al
  40ebbc:	add    BYTE PTR [edi],dh
  40ebbe:	shl    dh,1
  40ebc0:	push   DWORD PTR [esi+0x600ffff]
  40ebc6:	dec    edx
  40ebc7:	into   
  40ebc8:	int3   
  40ebc9:	lahf   
  40ebca:	(bad)  
  40ebcb:	inc    DWORD PTR [ebx-0xd871f0]
  40ebd1:	jecxz  0x40eb56
  40ebd3:	add    BYTE PTR [eax],al
  40ebd5:	hlt    
  40ebd6:	jne    0x40ebb1
  40ebd8:	add    BYTE PTR [edx-0x3e76ff77],al
  40ebde:	xor    BYTE PTR [edi],ch
  40ebe0:	(bad)  
  40ebe1:	mov    ebp,0xb4000000
  40ebe6:	div    ah
  40ebe8:	add    bh,dh
  40ebea:	(bad)  
  40ebeb:	inc    DWORD PTR [eax]
  40ebed:	jae    0x40ebc1
  40ebef:	push   edx
  40ebf0:	add    BYTE PTR [eax],cl
  40ebf2:	add    BYTE PTR [ebx-0x591aa00],al
  40ebf8:	jmp    edx
  40ebfa:	add    BYTE PTR [ebx-0x5999b47d],al
  40ec00:	add    BYTE PTR [ebx-0x7d],cl
  40ec03:	int3   
  40ec04:	push   eax
  40ec06:	xor    ebp,DWORD PTR [ecx]
  40ec08:	add    BYTE PTR [ecx-0x34],bl
  40ec0b:	mov    DWORD PTR [ebx+0x9c387d],eax
  40ec11:	outs   dx,BYTE PTR ds:[esi]
  40ec12:	(bad)  
  40ec13:	inc    DWORD PTR [eax]
  40ec15:	xchg   ebx,eax
  40ec16:	retf   
  40ec17:	cmp    edi,0x83cc8380
  40ec1d:	inc    eax
  40ec1e:	jg     0x40ebf4
  40ec20:	int3   
  40ec21:	aaa    
  40ec22:	mov    DWORD PTR [eax],eax
  40ec24:	push   DWORD PTR [ebx]
  40ec26:	xchg   ebp,eax
  40ec27:	sub    al,BYTE PTR [eax]
  40ec29:	(bad)  
  40ec2b:	inc    DWORD PTR [ebx-0x1c3be0]
  40ec31:	push   ecx
  40ec32:	add    ah,cl
  40ec34:	int3   
  40ec35:	jmp    0xff00:0x95898dcb
  40ec3c:	jmp    DWORD PTR [ebx+eiz*8]
  40ec3f:	xor    edi,edi
  40ec41:	pop    ebx
  40ec42:	add    DWORD PTR [eax],0x0
  40ec45:	loopne 0x40ec73
  40ec47:	and    eax,0xc4ff
  40ec4c:	add    ch,ah
  40ec4e:	dec    eax
  40ec4f:	add    BYTE PTR [eax],0xae
  40ec52:	(bad)  
  40ec53:	(bad)  
  40ec54:	push   DWORD PTR [edx-0x2]
  40ec57:	sub    BYTE PTR [eax],al
  40ec59:	push   ebx
  40ec5a:	add    DWORD PTR [eax],0x0
  40ec5d:	mov    dl,BYTE PTR [esi+0x6c834d]
  40ec63:	(bad)  
  40ec64:	call   FWORD PTR [esi]
  40ec66:	push   ebx
  40ec67:	jg     0x40ec69
  40ec69:	out    0xcc,eax
  40ec6b:	dec    esp
  40ec6d:	scas   eax,DWORD PTR es:[edi]
  40ec6e:	gs iret 
  40ec70:	int3   
  40ec71:	pop    esi
  40ec72:	inc    DWORD PTR [eax]
  40ec74:	jmp    DWORD PTR [edx-0x6]
  40ec77:	jns    0x40ebfc
  40ec79:	dec    DWORD PTR [ecx+0xed5ffff]
  40ec7f:	xchg   edx,eax
  40ec80:	inc    DWORD PTR [eax-0x1]
  40ec83:	int3   
  40ec84:	add    ch,cl
  40ec86:	or     eax,0xff1200f6
  40ec8b:	add    DWORD PTR [eax],0x76
  40ec8e:	das    
  40ec8f:	mov    ds:0xffcc5500,al
  40ec94:	add    BYTE PTR [edx],ah
  40ec96:	shl    BYTE PTR [eax],cl
  40ec98:	add    ah,dh
  40ec9a:	or     esp,0xffffffff
  40ec9d:	push   0x10
  40ec9f:	push   ebx
  40eca0:	add    BYTE PTR ds:0x9400ffff,ch
  40eca6:	test   al,0x8e
  40eca8:	mov    DWORD PTR [ebx+0x0],ebx
  40ecab:	(bad)  
  40ecac:	(bad)  
  40ecad:	cli    
  40ecae:	into   
  40ecaf:	mov    bh,bh
  40ecb1:	sbb    BYTE PTR [eax],al
  40ecb3:	add    BYTE PTR [eax],al
  40ecb5:	in     al,dx
  40ecb6:	data16 (bad) 
  40ecb8:	call   FWORD PTR [edi]
  40ecba:	inc    DWORD PTR [ebx+0x17493a83]
  40ecc0:	sbb    DWORD PTR [edx],0x0
  40ecc3:	add    BYTE PTR [eax],al
  40ecc5:	dec    edi
  40ecc6:	sub    DWORD PTR [esi],esp
  40ecc8:	sbb    ebx,0x0
  40eccb:	cmp    edi,0xffffff9d
  40ecce:	push   edx
  40eccf:	iret   
  40ecd0:	and    ebp,0xffffffff
  40ecd3:	add    DWORD PTR [eax],0x45
  40ecd6:	inc    ecx
  40ecd7:	clc    
  40ecd8:	add    BYTE PTR ds:0x9affffff,ch
  40ecde:	daa    
  40ecdf:	and    edi,edi
  40ece1:	inc    ebp
  40ece2:	add    BYTE PTR [eax],al
  40ece4:	push   esp
  40ece6:	out    dx,al
  40ece7:	adc    cl,BYTE PTR [ecx+0xffffb8]
  40eced:	fwait
  40ecee:	es jb  0x40ec7a
  40ecf1:	call   0x102f:0x9600ff89
  40ecf8:	push   DWORD PTR [edx-0x1]
  40ecfb:	add    BYTE PTR [ecx-0x8e0264],cl
  40ed01:	out    0xff,al
  40ed03:	dec    DWORD PTR [ecx+0x4e2084]
  40ed09:	push   edi
  40ed0a:	add    BYTE PTR [eax],al
  40ed0c:	mov    DWORD PTR [ebp+eax*1-0xcff18],edi
  40ed13:	(bad)  
  40ed14:	push   DWORD PTR [eax-0x35008dbb]
  40ed1a:	add    bh,bh
  40ed1c:	or     DWORD PTR [ebx+0x7affbbca],0xffffff83
  40ed23:	int3   
  40ed24:	jmp    esi
  40ed26:	fcom   QWORD PTR [edx]
  40ed28:	add    BYTE PTR [eax],dl
  40ed2a:	(bad)  
  40ed2b:	(bad)  
  40ed2c:	call   DWORD PTR [ebx]
  40ed2e:	stc    
  40ed2f:	stos   BYTE PTR es:[edi],al
  40ed30:	add    BYTE PTR [ebx],bl
  40ed32:	inc    DWORD PTR [eax]
  40ed34:	and    DWORD PTR [edi-0x64],0xfffffff8
  40ed38:	add    BYTE PTR [eax],ch
  40ed3a:	inc    DWORD PTR [eax]
  40ed3c:	add    edx,0xffffffb9
  40ed3f:	sar    bh,cl
  40ed41:	xor    bh,bh
  40ed43:	add    BYTE PTR [ecx-0x9a7a4f],cl
  40ed49:	je     0x40ed4a
  40ed4b:	add    bh,bh
  40ed4d:	cmp    ebp,DWORD PTR [edi-0x6cffb2]
  40ed53:	inc    DWORD PTR [eax]
  40ed55:	lds    edx,FWORD PTR [edx-0x63]
  40ed58:	add    BYTE PTR [esi+0x0],bh
  40ed5b:	(bad)  
  40ed5c:	call   DWORD PTR [ecx]
  40ed5e:	aam    0x70
  40ed60:	call   FWORD PTR [edi-0x7d]
  40ed63:	(bad)  
  40ed64:	jmp    DWORD PTR [ebx]
  40ed66:	bound  esi,QWORD PTR ds:0xff839fff
  40ed6c:	sbb    DWORD PTR [ebx-0x2a],0x55
  40ed70:	add    BYTE PTR ds:0x33ff83ff,ch
  40ed76:	xchg   esi,eax
  40ed77:	retf   
  40ed78:	add    BYTE PTR [eax-0x1],al
  40ed7b:	cmp    edi,0xffffffc9
  40ed7e:	dec    esi
  40ed7f:	(bad)  
  40ed80:	int3   
  40ed81:	jmp    0x40ed82
  40ed83:	(bad)  
  40ed84:	(bad)  
  40ed85:	mov    ecx,0x66ff10f0
  40ed8a:	inc    DWORD PTR [ebx+0x33410bff]
  40ed90:	jmp    FWORD PTR [edi+0x74ff0083]
  40ed96:	and    al,0x7f
  40ed98:	add    BYTE PTR [edx-0x1],ah
  40ed9b:	(bad)  
  40ed9c:	call   FWORD PTR [eax]
  40ed9e:	imul   eax,esi,0xffffffcc
  40eda1:	ins    DWORD PTR es:[edi],dx
  40eda2:	add    bh,bh
  40eda4:	inc    ebp
  40eda6:	add    ebp,DWORD PTR [eax-0x76757d]
  40edac:	(bad)  
  40edad:	cli    
  40edae:	mov    ch,BYTE PTR [edi-0x76aa00]
  40edb4:	adc    DWORD PTR [ecx-0x577ca09e],0xffffff83
  40edbb:	inc    DWORD PTR [eax]
  40edbd:	loopne 0x40ed7d
  40edbf:	push   ebp
  40edc0:	add    BYTE PTR [ebp-0x1],ch
  40edc3:	inc    DWORD PTR [eax]
  40edc5:	pop    ds
  40edc6:	pop    ebp
  40edc7:	ret    
  40edc8:	push   esp
  40edca:	inc    DWORD PTR [ebx-0x3ae73201]
  40edd0:	call   DWORD PTR [edi]
  40edd2:	(bad)  
  40edd3:	dec    esp
  40edd5:	fs std 
  40edd7:	clc    
  40edd8:	inc    DWORD PTR [edi-0x1]
  40eddb:	add    DWORD PTR [ebx-0x4204b7],0xfffffff4
  40ede2:	(bad)  
  40ede3:	inc    DWORD PTR [eax]
  40ede5:	outs   dx,BYTE PTR ds:[esi]
  40ede6:	mov    eax,0xff1dff85
  40edeb:	inc    DWORD PTR [eax]
  40eded:	sub    DWORD PTR [eax],0xffffffac
  40edf0:	add    BYTE PTR [esi+0x35ffccff],al
  40edf6:	and    cl,BYTE PTR [edi]
  40edf8:	push   DWORD PTR [ebp-0x1]
  40edfb:	add    DWORD PTR [ebx+0x2a8265],0xffffff81
  40ee02:	add    BYTE PTR [eax],al
  40ee04:	add    BYTE PTR [ebp+0x21ff3155],al
  40ee0a:	add    bh,bh
  40ee0c:	add    dh,bh
  40ee0e:	add    eax,0x8345ff64
  40ee13:	(bad)  
  40ee14:	jmp    DWORD PTR [ecx-0x1b0050e5]
  40ee1a:	add    BYTE PTR [ebx+0x70a0f8ff],al
  40ee20:	mov    DWORD PTR [ebx-0x7d],edi
  40ee23:	add    BYTE PTR [eax],al
  40ee25:	jbe    0x40ee0f
  40ee27:	mov    eax,ds:0x8acc
  40ee2c:	inc    esp
  40ee2e:	add    bl,BYTE PTR [edx+0x89c6ff]
  40ee34:	int3   
  40ee35:	mov    BYTE PTR [eax+ebp*2],ch
  40ee38:	(bad)  
  40ee39:	mov    eax,0x8fffffff
  40ee3e:	retf   
  40ee3f:	pop    edx
  40ee40:	push   ebx
  40ee42:	inc    DWORD PTR [eax]
  40ee44:	call   DWORD PTR [ecx-0x2aff5f68]
  40ee4a:	add    BYTE PTR [eax],al
  40ee4c:	jmp    DWORD PTR [ecx+0xc8345d2]
  40ee52:	dec    esp
  40ee54:	add    DWORD PTR [edx+0x5b00ce77],0xffffff83
  40ee5b:	(bad)  
  40ee5c:	dec    DWORD PTR [eax]
  40ee5e:	test   al,0x15
  40ee60:	add    BYTE PTR [edi-0x4fff7c01],bh
  40ee66:	stos   BYTE PTR es:[edi],al
  40ee67:	push   edi
  40ee68:	add    BYTE PTR [edx-0x1],ch
  40ee6b:	inc    DWORD PTR [ebx-0xd5a090]
  40ee71:	add    BYTE PTR ss:[eax],al
  40ee74:	call   FWORD PTR [esi+0x3efff674]
  40ee7a:	inc    DWORD PTR [eax]
  40ee7c:	(bad)  
  40ee7d:	jnp    0x40ee17
  40ee7f:	cmp    bh,0xac
  40ee82:	mov    DWORD PTR [ebx+0x1bdc7800],eax
  40ee88:	(bad)  
  40ee89:	mov    esi,0xae00ffff
  40ee8e:	pop    ebp
  40ee8f:	inc    BYTE PTR [ebx-0x7cff760e]
  40ee95:	sub    esi,DWORD PTR [edx]
  40ee97:	stos   BYTE PTR es:[edi],al
  40ee98:	dec    edx
  40ee9a:	add    BYTE PTR [eax],al
  40ee9c:	add    BYTE PTR [eax],bh
  40ee9e:	jg     0x40eef5
  40eea0:	inc    DWORD PTR [ebx]
  40eea2:	mov    DWORD PTR [eax],eax
  40eea4:	adc    DWORD PTR [edi-0x49],0xffffff8e
  40eea8:	and    ebx,0xffffffff
  40eeab:	dec    esp
  40eead:	(bad)  
  40eeaf:	pop    edi
  40eeb0:	add    BYTE PTR [edi],dh
  40eeb2:	add    BYTE PTR [eax],al
  40eeb4:	inc    DWORD PTR [edx+0x6a]
  40eeb7:	sbb    DWORD PTR [eax],eax
  40eeb9:	mov    DWORD PTR [eax],eax
  40eebb:	add    BYTE PTR [ecx+0x34663f],cl
  40eec1:	jnp    0x40eec2
  40eec3:	add    BYTE PTR [eax],al
  40eec5:	jle    0x40ee74
  40eec7:	data16 add BYTE PTR [eax+eax*1+0x0],bh
  40eecc:	jmp    FWORD PTR [esi+0x7cff07ed]
  40eed2:	(bad)  
  40eed3:	inc    DWORD PTR [eax]
  40eed5:	push   0xcaff2f59
  40eeda:	or     esp,0xffffffff
  40eedd:	xchg   ebx,eax
  40eede:	cmp    BYTE PTR [esi-0x7c76fd7d],bh
  40eee4:	add    BYTE PTR [ebp+0x2e832418],bl
  40eeea:	inc    DWORD PTR [eax]
  40eeec:	and    DWORD PTR [edi-0x14],0xffffffbc
  40eef0:	add    BYTE PTR [edi+0x30ffffff],ch
  40eef6:	add    eax,0xff3affe7
  40eefb:	add    bh,bh
  40eefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eefe:	add    ah,0x0
  40ef01:	cmc    
  40ef02:	add    bh,bh
  40ef04:	add    BYTE PTR [edi],bl
  40ef06:	bound  ebp,QWORD PTR [esi-0xfd01]
  40ef0c:	inc    DWORD PTR [ecx]
  40ef0e:	cmp    bh,cl
  40ef10:	push   esi
  40ef12:	(bad)  
  40ef13:	inc    DWORD PTR [eax]
  40ef15:	adc    edx,DWORD PTR [eax]
  40ef17:	scas   al,BYTE PTR es:[edi]
  40ef18:	add    BYTE PTR [ecx+0x283ffcc],cl
  40ef1e:	jmp    0x67ef71
  40ef23:	(bad)  
  40ef24:	(bad)  
  40ef25:	js     0x40ef37
  40ef27:	(bad)  
  40ef28:	(bad)  
  40ef29:	std    
  40ef2a:	add    BYTE PTR [ecx-0x601dd00],cl
  40ef30:	inc    DWORD PTR [ebx+0x648900ff]
  40ef36:	into   
  40ef37:	or     eax,0xccff9689
  40ef3c:	(bad)  
  40ef3d:	jle    0x40eeec
  40ef3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef40:	add    BYTE PTR [edi],dh
  40ef42:	int3   
  40ef43:	(bad)  
  40ef44:	call   FWORD PTR [eax-0x26ff0a48]
  40ef4a:	mov    DWORD PTR [eax],eax
  40ef4c:	push   esi
  40ef4e:	repnz inc esi
  40ef50:	jmp    FWORD PTR [ecx+ecx*4]
  40ef53:	or     esp,0x48
  40ef56:	pop    edx
  40ef57:	add    BYTE PTR es:[eax+0x0],bl
  40ef5b:	cmp    edi,0x3f
  40ef5e:	xlat   BYTE PTR ds:[ebx]
  40ef5f:	or     al,0xff
  40ef61:	stos   DWORD PTR es:[edi],eax
  40ef62:	add    BYTE PTR [ecx+0x240623ff],cl
  40ef68:	(bad)  
  40ef69:	jg     0x40ef6b
  40ef6b:	add    bh,bh
  40ef6d:	pushf  
  40ef6e:	mov    WORD PTR [ecx+0x0],fs
  40ef71:	das    
  40ef72:	mov    edi,edi
  40ef74:	add    BYTE PTR [edi-0x56ff466f],ch
  40ef7a:	inc    DWORD PTR [ebx-0x3e82487d]
  40ef80:	add    al,cl
  40ef82:	mov    edi,edi
  40ef84:	add    BYTE PTR ds:0x8cffcee0,bl
  40ef8a:	add    DWORD PTR [eax],0xffffff83
  40ef8d:	xchg   edi,eax
  40ef8e:	rcl    BYTE PTR [edi],cl
  40ef90:	jmp    FWORD PTR [edx]
  40ef92:	(bad)  
  40ef93:	inc    DWORD PTR [ebx-0x581258]
  40ef99:	int3   
  40ef9a:	(bad)  
  40ef9b:	(bad)  
  40ef9c:	call   DWORD PTR [edx+edi*4+0x58ff0e]
  40efa3:	cmp    edi,0xfffffff4
  40efa6:	push   0xff5983c6
  40efab:	(bad)  
  40efac:	call   DWORD PTR [ecx+0x77ff1047]
  40efb2:	mov    edi,edi
  40efb4:	add    BYTE PTR [esi-0x1764cac],dh
  40efba:	add    bh,bh
  40efbc:	sub    ecx,0xffffff9f
  40efbf:	jb     0x40efc1
  40efc1:	mov    ds:0xec83ffcc,al
  40efc6:	in     al,0x19
  40efc8:	dec    DWORD PTR [edi]
  40efca:	mov    DWORD PTR [ebx-0x52ed0c77],eax
  40efd0:	add    cl,al
  40efd2:	(bad)  
  40efd3:	dec    esp
  40efd5:	outs   dx,DWORD PTR ds:[esi]
  40efd6:	xlat   BYTE PTR ds:[ebx]
  40efd7:	je     0x40efd8
  40efd9:	and    al,0x0
  40efdb:	inc    DWORD PTR [eax]
  40efdd:	cmp    BYTE PTR [eax+0x73],dh
  40efe0:	int3   
  40efe1:	mov    edx,0x95cc00ff
  40efe6:	daa    
  40efe7:	push   cs
  40efe8:	dec    ebp
  40efea:	add    BYTE PTR [ebx-0x16bf177],al
  40eff0:	jmp    DWORD PTR [ebp-0x1]
  40eff3:	add    bh,bh
  40eff5:	xchg   esi,eax
  40eff6:	ds in  eax,0xff
  40eff9:	dec    ebp
  40effa:	add    BYTE PTR [eax],al
  40effc:	inc    DWORD PTR [eax]
  40effe:	aas    
  40efff:	dec    edi
  40f000:	(bad)  
  40f001:	cli    
  40f002:	inc    DWORD PTR [eax]
  40f004:	add    BYTE PTR [ebp-0xb],dh
  40f007:	adc    al,BYTE PTR [eax]
  40f009:	sti    
  40f00a:	int3   
  40f00b:	(bad)  
  40f00c:	jmp    FWORD PTR [ecx-0x1133262c]
  40f012:	dec    esp
  40f014:	int3   
  40f015:	mov    dh,0x3e
  40f017:	int3   
  40f018:	mov    DWORD PTR [eax-0x1],ecx
  40f01b:	int3   
  40f01c:	jmp    eax
  40f01e:	mov    dl,0xd3
  40f020:	add    BYTE PTR [edi-0x2833ff01],ah
  40f026:	or     al,0xa2
  40f028:	add    cl,bl
  40f02a:	mov    DWORD PTR [eax],eax
  40f02c:	add    ch,ch
  40f02e:	nop    DWORD PTR [ebx-0x32]
  40f035:	das    
  40f036:	lods   eax,DWORD PTR ds:[esi]
  40f037:	cmp    edi,0xffffff8a
  40f03a:	add    DWORD PTR [eax],0xffffffff
  40f03d:	cwde   
  40f03e:	cmp    al,0xca
  40f040:	call   DWORD PTR [esi]
  40f042:	(bad)  
  40f043:	(bad)  
  40f044:	(bad)  
  40f045:	mov    ecx,0xc8ff0ce9
  40f04a:	inc    DWORD PTR [eax]
  40f04c:	int3   
  40f04d:	pop    esi
  40f04e:	inc    esi
  40f04f:	xchg   edi,edi
  40f051:	add    eax,0x2dff00cc
  40f056:	fiadd  WORD PTR gs:[eax]
  40f059:	push   ss
  40f05a:	(bad)  
  40f05b:	(bad)  
  40f05c:	call   DWORD PTR [ecx+0x1ffff4a5]
  40f062:	add    bh,bh
  40f064:	push   DWORD PTR [edi+esi*8-0x55]
  40f068:	int3   
  40f069:	cli    
  40f06a:	mov    DWORD PTR [ebx+0x19de54ff],eax
  40f070:	add    al,ah
  40f072:	add    ah,cl
  40f074:	int3   
  40f075:	in     eax,0x52
  40f077:	pop    ds
  40f078:	call   FWORD PTR [ebp-0x2dff7700]
  40f07e:	cmp    BYTE PTR [esi],cl
  40f080:	jmp    DWORD PTR [edi]
  40f082:	(bad)  
  40f083:	dec    DWORD PTR [ecx-0x714abb]
  40f089:	and    eax,0xac00ff00
  40f08e:	sbb    edx,edx
  40f090:	push   ebp
  40f092:	inc    DWORD PTR [eax]
  40f094:	add    BYTE PTR ds:0xf7ffc4df,cl
  40f09a:	add    DWORD PTR [eax],0xffffffff
  40f09d:	cs (bad) 
  40f09f:	test   BYTE PTR [ebx+0xff8383],0x20
  40f0a6:	pop    esi
  40f0a7:	add    DWORD PTR ss:[eax+0x66ff83ff],0x3e
  40f0af:	add    BYTE PTR cs:[edi+edi*8-0x12e6007d],ch
  40f0b7:	popf   
  40f0b8:	(bad)  
  40f0b9:	jmp    0xb041bdbd
  40f0be:	das    
  40f0bf:	(bad)  
  40f0c0:	add    dl,ch
  40f0c2:	mov    edi,edi
  40f0c4:	mov    DWORD PTR [eax],ecx
  40f0c6:	mov    ah,0xab
  40f0c8:	int3   
  40f0c9:	(bad)  
  40f0ca:	dec    esp
  40f0cc:	inc    DWORD PTR [edi+0x41008fd2]
  40f0d2:	mov    DWORD PTR [ebx+0x77f9d7ff],eax
  40f0d8:	(bad)  
  40f0d9:	mov    esp,0x928300ff
  40f0de:	jnp    0x40f07b
  40f0e0:	(bad)  
  40f0e1:	clc    
  40f0e2:	(bad)  
  40f0e3:	(bad)  
  40f0e4:	(bad)  
  40f0e5:	cmp    DWORD PTR [eax+0x4d],edi
  40f0e8:	(bad)  
  40f0e9:	cmp    ecx,esp
  40f0eb:	mov    DWORD PTR [eax],eax
  40f0ed:	mov    ah,0xeb
  40f0ef:	xchg   ecx,eax
  40f0f0:	add    BYTE PTR [ecx-0x1],ah
  40f0f3:	(bad)  
  40f0f4:	inc    ebx
  40f0f6:	test   BYTE PTR [ebx+eax*4-0x76ff7c21],ah
  40f0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0fe:	stc    
  40f0ff:	out    0xff,eax
  40f101:	ret    0x0
  40f104:	add    BYTE PTR [eax],bl
  40f106:	enter  0xffc0,0x3e
  40f10a:	(bad)  
  40f10b:	inc    DWORD PTR [eax]
  40f10d:	aaa    
  40f10e:	cmp    al,cl
  40f110:	add    BYTE PTR [ebx],dl
  40f112:	add    BYTE PTR [eax],al
  40f114:	inc    DWORD PTR [ecx]
  40f116:	stc    
  40f117:	(bad)  
  40f118:	call   DWORD PTR [ebx+0x58ffccff]
  40f11e:	enter  0x20,0xfd
  40f122:	add    bh,bh
  40f124:	mov    DWORD PTR [edx+0x72],ebx
  40f127:	in     eax,0xff
  40f129:	imul   edi,edi,0xfee3ff00
  40f12f:	repz push DWORD PTR [edx-0x1]
  40f133:	int3   
  40f134:	call   DWORD PTR [ebp-0x787c5e79]
  40f13a:	add    ah,cl
  40f13c:	add    BYTE PTR [ebp-0x3fff33e],ch
  40f142:	add    bh,bh
  40f144:	call   FWORD PTR [edi-0x727cb2c2]
  40f14a:	add    bh,bh
  40f14c:	call   FWORD PTR [edx]
  40f14e:	add    BYTE PTR [eax-0x76002800],cl
  40f154:	jmp    ebx
  40f156:	jnp    0x40f122
  40f158:	add    dl,ah
  40f15a:	cmp    edi,0xffffff83
  40f15d:	ror    al,0xfe
  40f160:	add    ecx,0xffffffff
  40f163:	(bad)  
  40f164:	(bad)  
  40f165:	fidiv  WORD PTR [edx+0x4f0063]
  40f16b:	inc    DWORD PTR [eax]
  40f16d:	push   esp
  40f16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f16f:	dec    esp
  40f170:	push   DWORD PTR [edx-0x63007601]
  40f176:	inc    ebx
  40f177:	adc    bh,bh
  40f179:	xchg   ecx,eax
  40f17a:	inc    DWORD PTR [eax]
  40f17c:	inc    DWORD PTR [ebx]
  40f17e:	mov    esp,DWORD PTR [edi-0x33333777]
  40f184:	call   FWORD PTR [ebp+0x12]
  40f187:	mov    bl,0xff
  40f189:	or     al,BYTE PTR [eax]
  40f18b:	add    BYTE PTR [eax],al
  40f18d:	sbb    DWORD PTR [ebx],ecx
  40f18f:	retf   0x8500
  40f192:	add    bh,bh
  40f194:	inc    DWORD PTR [ebx-0x327ccbb6]
  40f19a:	int3   
  40f19b:	cmp    edi,0x6f
  40f19e:	scas   al,BYTE PTR es:[edi]
  40f19f:	jge    0x40f124
  40f1a1:	xor    BYTE PTR [ebx-0x48b30001],al
  40f1a7:	xchg   edi,eax
  40f1a8:	add    al,ch
  40f1aa:	(bad)  
  40f1ab:	inc    DWORD PTR [eax]
  40f1ad:	adc    eax,0x500098d3
  40f1b2:	add    BYTE PTR [ebx+0x43dcb383],al
  40f1b8:	add    BYTE PTR [edx-0x7d],dl
  40f1bb:	add    BYTE PTR [eax],al
  40f1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1be:	shl    DWORD PTR [edi+edi*8-0x7c00d3],cl
  40f1c5:	jl     0x40f172
  40f1c7:	in     eax,0x0
  40f1c9:	cmp    edi,edi
  40f1cb:	inc    DWORD PTR [ebx-0xc10847]
  40f1d1:	test   al,0xff
  40f1d3:	(bad)  
  40f1d4:	(bad)  
  40f1d5:	fdivr  st,st(0)
  40f1d7:	or     ecx,DWORD PTR [ecx+0x830017]
  40f1dd:	sub    DWORD PTR [edi],edx
  40f1df:	add    BYTE PTR [si],bl
  40f1e2:	(bad)  
  40f1e3:	dec    DWORD PTR [ecx+0x78841b]
  40f1e9:	and    al,0x89
  40f1eb:	add    BYTE PTR [eax],al
  40f1ed:	jae    0x40f1e7
  40f1ef:	ja     0x40f174
  40f1f1:	mov    cl,0xff
  40f1f3:	add    BYTE PTR [eax],al
  40f1f5:	sub    eax,0x6dff47e2
  40f1fa:	int3   
  40f1fb:	add    DWORD PTR [ebx+0x811862],0xfffffffa
  40f202:	(bad)  
  40f203:	(bad)  
  40f204:	push   DWORD PTR [ebx+edi*8-0x33fd0098]
  40f20b:	add    bh,bh
  40f20d:	adc    eax,0x27ff2934
  40f212:	mov    DWORD PTR [eax],eax
  40f214:	dec    esi
  40f216:	loopne 0x40f1a0
  40f218:	(bad)  
  40f219:	fisttp QWORD PTR [ecx-0x746ff01]
  40f21f:	add    BYTE PTR fs:[ecx+0xffff89],al
  40f226:	mov    cl,0xbb
  40f228:	add    BYTE PTR [edx-0x1cff3400],bl
  40f22e:	popa   
  40f22f:	mov    esp,0x896100
  40f234:	and    DWORD PTR ds:0x66ffe1d4,0xffffffff
  40f23b:	mov    DWORD PTR [ebx-0x76453090],eax
  40f241:	cmp    bh,0xff
  40f244:	(bad)  
  40f245:	cld    
  40f246:	mov    al,0xa8
  40f248:	mov    DWORD PTR [eax+eax*1-0x51910001],esi
  40f24f:	mov    ch,0x83
  40f251:	sti    
  40f252:	add    bh,bh
  40f254:	jmp    FWORD PTR [ebx+0x16]
  40f257:	fmul   st,st(4)
  40f259:	xchg   esi,eax
  40f25a:	add    BYTE PTR [ebx+0x559c3e89],al
  40f260:	or     DWORD PTR [ecx-0x1],0xffffffff
  40f264:	(bad)  
  40f265:	cld    
  40f266:	mov    ds:0xff31ff57,eax
  40f26b:	add    BYTE PTR [eax],al
  40f26d:	fdiv   QWORD PTR [esi-0x640028]
  40f273:	add    bh,bh
  40f275:	test   al,0x9b
  40f277:	xchg   edi,edi
  40f279:	mov    ?,edi
  40f27b:	add    BYTE PTR [ebx-0x9f045b],al
  40f281:	cmc    
  40f282:	add    bh,bh
  40f284:	call   FWORD PTR [edi+0x3a]
  40f287:	enter  0xb100,0xff
  40f28b:	inc    DWORD PTR [ebx-0xba04e9]
  40f291:	add    BYTE PTR [bx+si],al
  40f294:	mov    DWORD PTR [ebp-0x3f],edi
  40f297:	iret   
  40f298:	add    DWORD PTR [eax],0x0
  40f29b:	add    DWORD PTR [eax],0x55
  40f29e:	dec    edi
  40f29f:	fld    DWORD PTR [ebx-0xff7c1a]
  40f2a5:	push   0xffffffc6
  40f2a7:	jns    0x40f2a9
  40f2a9:	dec    esp
  40f2aa:	add    BYTE PTR [eax],al
  40f2ac:	jmp    FWORD PTR [ebx]
  40f2ae:	sbb    ch,ah
  40f2b0:	push   ebp
  40f2b2:	add    DWORD PTR [eax],0xffffffff
  40f2b5:	aas    
  40f2b6:	add    ebp,ebx
  40f2b8:	add    BYTE PTR [edi-0x34],ch
  40f2bb:	add    ah,cl
  40f2bd:	int3   
  40f2be:	jl     0x40f330
  40f2c0:	add    cl,al
  40f2c2:	add    BYTE PTR [ecx+0x75221c00],cl
  40f2c8:	add    BYTE PTR [ebx-0x77],al
  40f2cb:	add    bh,bh
  40f2cd:	les    ecx,FWORD PTR [ebp-0x1a]
  40f2d0:	push   DWORD PTR [eax+0x2bffffff]
  40f2d6:	mov    ds:0xcca9ffb8,al
  40f2db:	inc    DWORD PTR [ebx-0x5c72a6]
  40f2e1:	inc    DWORD PTR [ebx-0x35e60001]
  40f2e7:	dec    esi
  40f2e8:	int3   
  40f2e9:	rol    DWORD PTR [ebx+0x4c7083ff],0x8b
  40f2f0:	mov    DWORD PTR [esp+ecx*8+0x30e3ff00],esp
  40f2f7:	fisttp WORD PTR [ecx-0xf3]
  40f2fd:	add    esi,DWORD PTR [ecx-0x7c2b00c4]
  40f303:	add    BYTE PTR [eax],al
  40f305:	xor    al,0x9b
  40f307:	push   0x0
  40f309:	fld    DWORD PTR [eax]
  40f30b:	inc    DWORD PTR [eax]
  40f30d:	mov    al,0x11
  40f30f:	sti    
  40f310:	add    BYTE PTR [edi+0x0],bh
  40f313:	mov    DWORD PTR [eax],eax
  40f315:	pop    es
  40f316:	js     0x40f2e4
  40f318:	push   ebx
  40f31a:	int3   
  40f31b:	inc    DWORD PTR [eax]
  40f31d:	mov    BYTE PTR [eax+0x4e],al
  40f320:	call   FWORD PTR [edx]
  40f322:	mov    edi,edi
  40f324:	dec    DWORD PTR [ebp-0x3c33c606]
  40f32a:	(bad)  
  40f32b:	(bad)  
  40f32c:	(bad)  
  40f32d:	mov    ecx,0x5affeb26
  40f332:	(bad)  
  40f333:	inc    DWORD PTR [ebx-0xb1441f]
  40f339:	call   0x9d65:0x8000ffff
  40f340:	inc    DWORD PTR [edi]
  40f342:	add    bh,bh
  40f344:	jmp    DWORD PTR [edi+eiz*8-0x20]
  40f348:	add    BYTE PTR [edx-0x41007c34],ch
  40f34e:	push   ss
  40f34f:	mov    eax,DWORD PTR [eax]
  40f351:	cmc    
  40f352:	add    bh,bh
  40f354:	add    cl,dl
  40f356:	dec    ebp
  40f357:	jmp    0x40f359
  40f359:	and    DWORD PTR [eax],eax
  40f35b:	inc    DWORD PTR [eax]
  40f35d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f35e:	jae    0x40f36f
  40f360:	jmp    FWORD PTR [ebp-0x47ff7601]
  40f366:	shr    bl,cl
  40f368:	call   ebx
  40f36a:	inc    DWORD PTR [eax]
  40f36c:	dec    DWORD PTR [edi+edi*1]
  40f36f:	out    dx,eax
  40f370:	add    bl,dh
  40f372:	(bad)  
  40f373:	(bad)  
  40f374:	jmp    edx
  40f376:	jae    0xcd40637b
  40f37c:	int3   
  40f37d:	std    
  40f37e:	xor    eax,0xffd3ccef
  40f383:	add    BYTE PTR [ebx+0xf5167b],al
  40f389:	out    dx,eax
  40f38a:	inc    DWORD PTR [ebx+0x335a8bff]
  40f390:	add    BYTE PTR [ebp-0x25ff0100],ch
  40f396:	pop    ebx
  40f397:	imul   edi,edi,0xffffffd2
  40f39a:	mov    DWORD PTR [ebx-0x5ced8700],eax
  40f3a0:	push   DWORD PTR [ebp+0x0]
  40f3a3:	cmp    edi,0xffffffac
  40f3a6:	or     edi,DWORD PTR [ebx+eax*4+0x78]
  40f3aa:	int3   
  40f3ab:	(bad)  
  40f3ac:	jmp    FWORD PTR [edx+0x3f002d00]
  40f3b2:	(bad)  
  40f3b3:	inc    DWORD PTR [ebx-0x3300ca08]
  40f3b9:	mov    ds:0x350000ff,al
  40f3be:	xor    DWORD PTR [ecx],ebx
  40f3c0:	int3   
  40f3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3c2:	inc    DWORD PTR [ebx+0x2b37e4ff]
  40f3c8:	add    BYTE PTR [edi+edi*8-0x1],cl
  40f3cc:	add    BYTE PTR [ebx+0x73],bl
  40f3cf:	and    eax,DWORD PTR [ebx+0x8900e8]
  40f3d5:	xor    eax,0x22008d7a
  40f3da:	add    ah,cl
  40f3dc:	add    BYTE PTR [eax-0x65ffa866],bh
  40f3e2:	inc    DWORD PTR [eax]
  40f3e4:	add    BYTE PTR [esi],ah
  40f3e6:	pusha  
  40f3e7:	xchg   edx,eax
  40f3e8:	call   FWORD PTR [edi-0x1]
  40f3eb:	cmp    edi,0xfffffffb
  40f3ee:	pop    ss
  40f3ef:	in     al,dx
  40f3f0:	add    BYTE PTR [edx],ah
  40f3f2:	(bad)  
  40f3f3:	dec    esp
  40f3f5:	fistp  WORD PTR [edx-0x7644000c]
  40f3fb:	inc    DWORD PTR [eax]
  40f3fd:	and    cl,BYTE PTR [ebx-0xc90039]
  40f403:	int3   
  40f404:	call   FWORD PTR [esi-0x110040e9]
  40f40a:	dec    esp
  40f40c:	int3   
  40f40d:	das    
  40f40e:	(bad)  
  40f410:	int3   
  40f411:	(bad)  
  40f414:	int3   
  40f415:	scas   eax,DWORD PTR es:[edi]
  40f416:	sbb    al,0x1a
  40f418:	add    BYTE PTR [ebp-0x7d],cl
  40f41b:	(bad)  
  40f41c:	(bad)  
  40f41d:	cld    
  40f41e:	aaa    
  40f41f:	sbb    eax,0xffcc3dff
  40f424:	jmp    FWORD PTR [ebp-0x11]
  40f427:	outs   dx,DWORD PTR ds:[esi]
  40f428:	add    BYTE PTR [edx-0x36007d00],cl
  40f42e:	push   esi
  40f42f:	cwde   
  40f430:	xor    edx,0xffffffff
  40f433:	add    DWORD PTR [eax],0xffffffee
  40f436:	cmp    al,ah
  40f438:	(bad)  
  40f439:	jmp    0x40f43a
  40f43b:	inc    DWORD PTR [eax]
  40f43d:	leave  
  40f43e:	arpl   WORD PTR [edx],bx
  40f440:	push   DWORD PTR [ebx-0x1]
  40f443:	cmp    edi,0xffffffcf
  40f446:	sub    DWORD PTR [ecx],0xffffffff
  40f449:	leave  
  40f44a:	add    bh,bh
  40f44c:	add    ah,ch
  40f44e:	add    eax,0x899effef
  40f453:	(bad)  
  40f454:	call   FWORD PTR [ebx-0x717c72d9]
  40f45a:	inc    DWORD PTR [ebx+0x6e9516ff]
  40f460:	int3   
  40f461:	aam    0x83
  40f463:	add    bh,bh
  40f465:	dec    edi
  40f466:	ins    BYTE PTR es:[edi],dx
  40f467:	adc    bh,bh
  40f469:	xchg   edi,eax
  40f46a:	add    BYTE PTR [eax],al
  40f46c:	mov    edi,edx
  40f46e:	lea    esp,[edi]
  40f470:	mov    DWORD PTR [esi-0x97c7677],ebp
  40f476:	push   esp
  40f477:	jbe    0x40f402
  40f479:	or     BYTE PTR [ebx+0x46c00ff],al
  40f47f:	in     eax,dx
  40f480:	add    ah,dl
  40f482:	dec    esp
  40f484:	int3   
  40f485:	and    eax,0xd9ffb720
  40f48a:	cmp    edi,0xffffffff
  40f48d:	jp     0x40f44c
  40f48f:	mov    esp,cs
  40f491:	cwde   
  40f492:	cmp    edi,0xffffffcc
  40f495:	retf   0x3bb0
  40f498:	and    ebp,0xffffff83
  40f49b:	(bad)  
  40f49c:	dec    DWORD PTR [ebx-0x7a335ff3]
  40f4a2:	(bad)  
  40f4a3:	(bad)  
  40f4a4:	(bad)  
  40f4a5:	cld    
  40f4a6:	cwde   
  40f4a7:	pushf  
  40f4a8:	add    BYTE PTR [esi],ah
  40f4aa:	inc    DWORD PTR [eax]
  40f4ac:	mov    DWORD PTR [edx],edi
  40f4ae:	jp     0x40f436
  40f4b0:	add    BYTE PTR [ebx],cl
  40f4b2:	inc    DWORD PTR [eax]
  40f4b4:	mov    DWORD PTR [ecx+0x5a002e06],esi
  40f4ba:	(bad)  
  40f4bb:	inc    DWORD PTR [eax]
  40f4bd:	or     BYTE PTR [edx],cl
  40f4bf:	add    BYTE PTR fs:[edi],ah
  40f4c2:	add    bh,bh
  40f4c4:	jmp    DWORD PTR [ebx-0x1a]
  40f4c7:	scas   eax,DWORD PTR es:[edi]
  40f4c8:	add    DWORD PTR [edx],0x0
  40f4cb:	(bad)  
  40f4cc:	call   DWORD PTR [ebp+0x10094c9]
  40f4d2:	(bad)  
  40f4d3:	inc    DWORD PTR [ebx-0x7c0badeb]
  40f4d9:	dec    eax
  40f4da:	add    ah,cl
  40f4dc:	(bad)  
  40f4dd:	in     al,dx
  40f4de:	cmp    edi,eax
  40f4e0:	mov    DWORD PTR [eax],eax
  40f4e2:	add    DWORD PTR [eax],0x0
  40f4e5:	dec    esi
  40f4e6:	inc    edx
  40f4e7:	addr16 (bad) 
  40f4e9:	cli    
  40f4ea:	int3   
  40f4eb:	cmp    edi,0xffffffac
  40f4ee:	adc    ch,BYTE PTR [edx-0x7600e201]
  40f4f4:	add    BYTE PTR [ecx],bh
  40f4f6:	enter  0xcc8a,0x1b
  40f4fa:	(bad)  
  40f4fb:	(bad)  
  40f4fc:	inc    DWORD PTR [edx]
  40f4fe:	lahf   
  40f4ff:	cdq    
  40f500:	dec    DWORD PTR [ebx]
  40f502:	dec    esp
  40f504:	cmp    ebp,0xa
  40f507:	cmp    bh,0xfb
  40f50a:	inc    DWORD PTR [eax]
  40f50c:	add    BYTE PTR [edx+0x5bffbe5e],bl
  40f512:	add    BYTE PTR [eax],al
  40f514:	add    BYTE PTR [edx-0x27ff1f13],ch
  40f51a:	add    bh,bh
  40f51c:	int3   
  40f51d:	pop    ss
  40f51e:	shl    BYTE PTR [ebx-0x1],0x6b
  40f522:	cmp    edi,0xffffffff
  40f525:	mov    dh,0x12
  40f527:	sar    edi,cl
  40f529:	lea    eax,[eax]
  40f52b:	dec    esp
  40f52d:	pop    ecx
  40f52e:	js     0x40f500
  40f530:	add    BYTE PTR [eax+0x0],dl
  40f533:	(bad)  
  40f534:	dec    edi
  40f536:	gs mov bh,0xff
  40f539:	add    BYTE PTR es:[eax],al
  40f53c:	adc    DWORD PTR [eax+0x48ff7932],0xffffffff
  40f543:	inc    DWORD PTR [eax]
  40f545:	xchg   edx,eax
  40f546:	inc    eax
  40f547:	mov    edi,edi
  40f549:	add    edi,edi
  40f54b:	add    BYTE PTR [eax],al
  40f54d:	call   0xff00:0x1ccfe13
  40f554:	int3   
  40f555:	xchg   edx,eax
  40f556:	aas    
  40f557:	fadd   DWORD PTR [eax]
  40f559:	sbb    DWORD PTR [eax],eax
  40f55b:	cmp    edi,0x42
  40f55e:	push   edx
  40f55f:	cs (bad) 
  40f561:	std    
  40f562:	cmp    edi,0xffffffff
  40f565:	cld    
  40f566:	sub    DWORD PTR [ecx-0x33967d],edi
  40f56c:	add    BYTE PTR [ecx+0x39ffe234],dl
  40f572:	inc    DWORD PTR [ebx+0x1a76a0ff]
  40f578:	call   FWORD PTR [ecx+ecx*4-0x66c20077]
  40f57f:	and    edi,edi
  40f581:	fiadd  WORD PTR [ebx+0x524dffcc]
  40f587:	inc    eax
  40f588:	int3   
  40f589:	int3   
  40f58a:	int3   
  40f58b:	int3   
  40f58c:	int3   
  40f58d:	int3   
  40f58e:	int3   
  40f58f:	int3   
  40f590:	inc    DWORD PTR [eax]
  40f592:	add    BYTE PTR [eax+eax*2],bl
  40f595:	add    BYTE PTR [edx+0x1a],dl
  40f598:	add    bh,bh
  40f59a:	push   DWORD PTR [ecx-0x5a]
  40f59d:	inc    edx
  40f59f:	out    0x0,eax
  40f5a1:	add    bh,bh
  40f5a3:	pop    edi
  40f5a4:	fdivr  st,st(7)
  40f5a6:	mov    cl,0x94
  40f5a8:	add    DWORD PTR [eax],0x0
  40f5ab:	sub    esi,eax
  40f5ad:	dec    DWORD PTR [eax-0x6f]
  40f5b0:	inc    DWORD PTR [eax]
  40f5b2:	cmp    DWORD PTR [ebp-0x4c],0xffffffff
  40f5b6:	mov    bl,0xed
  40f5b8:	int3   
  40f5b9:	add    bh,bh
  40f5bb:	cmp    al,0x43
  40f5bd:	add    dl,bh
  40f5bf:	sub    eax,0x1000000
  40f5c4:	mov    esi,0xff7e52ff
  40f5c9:	mov    DWORD PTR [ebx+0x5a00a8ac],eax
  40f5cf:	test   BYTE PTR [eax],al
  40f5d1:	int3   
  40f5d2:	add    ch,ah
  40f5d4:	retf   0xf5ff
  40f5d7:	inc    ecx
  40f5d8:	or     esp,0xffffff89
  40f5db:	jge    0x40f570
  40f5dd:	push   DWORD PTR [esi-0xff00bb]
  40f5e3:	retf   
  40f5e4:	mov    ebx,0xff0320ff
  40f5e9:	inc    DWORD PTR [eax]
  40f5eb:	sar    BYTE PTR ds:0xcc25bcff,0x0
  40f5f2:	call   DWORD PTR [eax-0x378d76a4]
  40f5f8:	add    ah,cl
  40f5fa:	xor    DWORD PTR [ecx-0x5b],0xffffffff
  40f5fe:	shr    BYTE PTR [eax-0x1],1
  40f601:	(bad)  
  40f602:	dec    DWORD PTR [edi*8+0x23c9ff]
  40f609:	(bad)  
  40f60a:	call   DWORD PTR [esi-0x39]
  40f60d:	jmp    DWORD PTR [edx]
  40f60f:	lahf   
  40f610:	(bad)  
  40f611:	inc    DWORD PTR [ebx+0xb00d7db]
  40f617:	cmp    al,0x0
  40f619:	add    DWORD PTR [eax],0xffffffaa
  40f61c:	jno    0x40f61d
  40f61e:	lods   eax,DWORD PTR ds:[esi]
  40f61f:	cmp    bh,0xff
  40f622:	and    DWORD PTR [ecx+0x69],0xffffffff
  40f626:	add    DWORD PTR gs:[bx+si],0x0
  40f62b:	pop    ss
  40f62c:	sbb    al,0x0
  40f62e:	icebp  
  40f62f:	xchg   edi,eax
  40f630:	inc    DWORD PTR [ebx+0x43bf83]
  40f636:	mov    esi,0xff68
  40f63b:	std    
  40f63c:	(bad)  
  40f63d:	(bad)  
  40f63e:	mov    edx,0x83ff45
  40f643:	mov    esp,DWORD PTR [ebx-0x33b25400]
  40f649:	(bad)  
  40f64a:	call   FWORD PTR [ecx+edi*8]
  40f64d:	call   FWORD PTR [ebp-0x3376ff40]
  40f653:	pop    ss
  40f654:	call   DWORD PTR fs:[edx]
  40f657:	pop    esi
  40f658:	(bad)  
  40f659:	dec    esp
  40f65b:	push   ds
  40f65c:	mov    ds:0xff14accc,al
  40f661:	(bad)  
  40f662:	(bad)  
  40f663:	jg     0x40f626
  40f665:	int3   
  40f666:	pop    es
  40f667:	dec    edx
  40f668:	add    bh,bh
  40f66a:	call   FWORD PTR [edx]
  40f66c:	(bad)  
  40f66d:	adc    edx,0xfffffff9
  40f670:	(bad)  
  40f671:	inc    DWORD PTR [ebx-0x557cae1d]
  40f677:	or     esp,0xee8dffff
  40f67d:	add    ch,al
  40f67f:	xchg   esi,eax
  40f680:	add    BYTE PTR [eax],al
  40f682:	inc    ebp
  40f684:	leave  
  40f685:	add    BYTE PTR [edi-0x68],ah
  40f688:	add    BYTE PTR [eax],al
  40f68a:	inc    DWORD PTR [eax-0x28]
  40f68d:	add    BYTE PTR [esi-0x3332],dl
  40f693:	fimul  DWORD PTR [ecx+0x997ff]
  40f699:	add    BYTE PTR [eax],al
  40f69b:	loope  0x40f6b9
  40f69d:	dec    DWORD PTR ds:0xff0089d1
  40f6a3:	xor    BYTE PTR [ebp-0x1],al
  40f6a6:	out    0xbb,eax
  40f6a8:	(bad)  
  40f6a9:	(bad)  
  40f6aa:	(bad)  
  40f6ab:	jg     0x40f6f7
  40f6ad:	add    BYTE PTR ds:0x8986,ah
  40f6b3:	cmp    BYTE PTR [ecx+ecx*4-0x97d4],dl
  40f6ba:	int3   
  40f6bb:	(bad)  
  40f6bc:	or     al,0x0
  40f6be:	das    
  40f6bf:	(bad)  
  40f6c0:	(bad)  
  40f6c1:	(bad)  
  40f6c2:	call   esi
  40f6c4:	cmp    bh,bh
  40f6c6:	xchg   edi,eax
  40f6c7:	pop    ds
  40f6c8:	(bad)  
  40f6c9:	inc    DWORD PTR [ebx-0x5600287a]
  40f6cf:	inc    esp
  40f6d0:	mov    DWORD PTR [eax],eax
  40f6d2:	call   DWORD PTR [eax+0x3d5983bf]
  40f6d8:	add    bh,bh
  40f6da:	add    BYTE PTR ds:0x94b00075,al
  40f6e0:	cmp    edi,0xffffffff
  40f6e3:	popa   
  40f6e4:	pop    ds
  40f6e5:	add    cl,ch
  40f6e7:	push   ebx
  40f6e8:	add    BYTE PTR [ecx+0xb449ff],cl
  40f6ee:	jns    0x40f6ae
  40f6f0:	add    DWORD PTR [ebx-0x6ce500],0xffffffce
  40f6f7:	test   eax,0x1d83ffcc
  40f6fc:	sub    eax,0xffeb8b00
  40f701:	inc    DWORD PTR [ebx-0xb33dceb]
  40f707:	pop    esi
  40f708:	add    ah,cl
  40f70a:	int3   
  40f70b:	adc    eax,0x6631ff01
  40f710:	int3   
  40f711:	inc    DWORD PTR [ebx-0x170006b4]
  40f717:	lock add bh,bh
  40f71a:	int3   
  40f71b:	sub    eax,0x438acc3a
  40f720:	(bad)  
  40f721:	inc    DWORD PTR [ebx+0x42ff54e7]
  40f727:	mov    edx,0x49830083
  40f72c:	mov    eax,ds:0xcc02ceff
  40f731:	inc    DWORD PTR [ebx-0x30007d27]
  40f737:	pop    es
  40f738:	or     DWORD PTR [ecx+0x8aa300],0xffffffac
  40f73f:	push   ecx
  40f740:	int3   
  40f741:	add    BYTE PTR [eax],al
  40f743:	test   DWORD PTR [edi+0xde3cff],esi
  40f749:	dec    esp
  40f74b:	dec    ebx
  40f74c:	jp     0x40f74d
  40f74e:	ss push es
  40f750:	add    bh,bh
  40f752:	add    BYTE PTR [esp+edi*4+0x0],al
  40f756:	pop    es
  40f757:	popf   
  40f758:	add    bh,bh
  40f75a:	add    dh,cl
  40f75c:	xlat   BYTE PTR ds:[ebx]
  40f75d:	call   FWORD PTR [eax]
  40f75f:	jae    0x40f761
  40f761:	dec    esp
  40f763:	cmp    al,0xb4
  40f765:	jmp    DWORD PTR [esp+esi*8+0x44000000]
  40f76c:	inc    esp
  40f76d:	sub    DWORD PTR [esi+0x3b],0xffffffff
  40f771:	add    BYTE PTR [eax],al
  40f773:	popf   
  40f774:	repz inc DWORD PTR [edi-0x7cffff56]
  40f77b:	push   0x197200cb
  40f780:	dec    esp
  40f782:	and    DWORD PTR [ecx],0xffffff97
  40f785:	add    ch,dh
  40f787:	addr16 (bad) 
  40f789:	(bad)  
  40f78a:	inc    esi
  40f78c:	es add ch,dh
  40f78f:	jp     0x40f790
  40f791:	(bad)  
  40f792:	(bad)  
  40f793:	mov    esi,0x310fff2c
  40f798:	(bad)  
  40f799:	(bad)  
  40f79a:	push   DWORD PTR [esi]
  40f79c:	add    al,BYTE PTR [ebx-0x76ffe355]
  40f7a2:	call   FWORD PTR [esi+0x14a500b8]
  40f7a8:	add    bh,bh
  40f7aa:	add    BYTE PTR [ebx],dl
  40f7ac:	push   cs
  40f7ad:	(bad)  
  40f7ae:	(bad)  [edx-0x1]
  40f7b1:	dec    DWORD PTR [ecx-0x2fff9249]
  40f7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7b8:	inc    DWORD PTR [ebx-0x106a00]
  40f7be:	addr16 or cl,ah
  40f7c1:	add    BYTE PTR [ebx-0x73ff81e3],al
  40f7c7:	int    0x0
  40f7c9:	or     DWORD PTR [ecx+0x15ff8da8],0x61
  40f7d0:	add    bh,bh
  40f7d2:	add    bh,cl
  40f7d4:	inc    BYTE PTR [ebx-0x7c00245e]
  40f7da:	add    BYTE PTR [ebp+ebx*4+0x7eb3ff],dh
  40f7e1:	dec    esp
  40f7e3:	jmp    0xffcc:0x63cd0009
  40f7ea:	int3   
  40f7eb:	(bad)  
  40f7ec:	stos   DWORD PTR es:[edi],eax
  40f7ed:	and    DWORD PTR [edx-0x3f],0xffffffba
  40f7f4:	adc    al,0xff
  40f7f6:	mov    ds:0x83ffdb,al
  40f7fb:	xchg   edi,eax
  40f7fc:	test   eax,0xff62cc00
  40f801:	add    bh,bh
  40f803:	add    DWORD PTR [edx-0xa38134],ebx
  40f809:	add    bh,bh
  40f80b:	dec    edx
  40f80c:	pop    esi
  40f80d:	mov    DWORD PTR [esi+edi*4-0x7d],ebp
  40f811:	cmp    edi,0x11
  40f814:	loope  0x40f815
  40f816:	pop    ebx
  40f817:	jmp    0xff0d:0x1eff00ff
  40f81e:	pop    ds
  40f81f:	jb     0x40f820
  40f821:	inc    DWORD PTR [ebx-0x7cfffcdc]
  40f827:	inc    esp
  40f828:	(bad)  
  40f829:	inc    DWORD PTR [ebx+0x3f83e66b]
  40f82f:	xchg   edx,eax
  40f830:	add    BYTE PTR [eax],al
  40f832:	push   ebp
  40f834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f835:	add    BYTE PTR [esi+0x4d],al
  40f838:	inc    DWORD PTR [eax]
  40f83a:	call   DWORD PTR [ecx]
  40f83c:	or     al,0xcc
  40f83e:	imul   esi,DWORD PTR [ebp-0x1],0x0
  40f842:	inc    DWORD PTR [esp+eax*2-0x1]
  40f846:	dec    ecx
  40f847:	rol    DWORD PTR [ebx-0x62e37c01],cl
  40f84d:	(bad)  
  40f84e:	cld    
  40f84f:	xor    BYTE PTR [ebx+0x590effff],al
  40f855:	call   DWORD PTR [edx+0x48]
  40f858:	inc    DWORD PTR [eax]
  40f85a:	jmp    FWORD PTR [edi]
  40f85c:	aas    
  40f85d:	add    BYTE PTR ds:0x8300ffd1,cl
  40f863:	or     DWORD PTR [edi+edi*8],ebp
  40f866:	test   eax,0x89cc08
  40f86b:	fld    TBYTE PTR [edi+0x206183]
  40f871:	add    bh,bh
  40f873:	xor    cl,dl
  40f875:	mov    DWORD PTR [eax],esp
  40f877:	jb     0x40f7fc
  40f879:	int3   
  40f87a:	int3   
  40f87b:	ret    
  40f87c:	add    BYTE PTR [eax],0xfb
  40f87f:	and    edi,edi
  40f881:	add    bh,bh
  40f883:	mov    WORD PTR [edx+0x0],ds
  40f886:	loopne 0x40f84d
  40f888:	(bad)  
  40f889:	(bad)  
  40f88a:	(bad)  
  40f88b:	cmp    BYTE PTR [edx],bl
  40f88d:	push   DWORD PTR [ebx]
  40f88f:	out    dx,eax
  40f890:	(bad)  
  40f891:	inc    DWORD PTR [eax]
  40f893:	ret    
  40f894:	push   ebx
  40f895:	add    BYTE PTR [ebp+0x54],dh
  40f898:	(bad)  
  40f899:	inc    DWORD PTR [eax]
  40f89b:	int    0xe9
  40f89d:	(bad)  
  40f89e:	mov    ebp,0xffffdd
  40f8a3:	jne    0x40f8ac
  40f8a5:	jmp    esi
  40f8a7:	hlt    
  40f8a8:	add    BYTE PTR [ebx+0x7fccff],al
  40f8ae:	add    DWORD PTR [edx],eax
  40f8b0:	add    bh,bh
  40f8b2:	add    BYTE PTR [ecx+0x6d],bl
  40f8b5:	add    bh,ch
  40f8b7:	out    dx,eax
  40f8b8:	add    BYTE PTR [eax],al
  40f8ba:	int3   
  40f8bb:	mov    bh,dh
  40f8bd:	push   DWORD PTR [edx-0x10]
  40f8c0:	int3   
  40f8c1:	(bad)  
  40f8c2:	inc    DWORD PTR [ecx]
  40f8c4:	test   bh,bh
  40f8c6:	test   BYTE PTR [eax],al
  40f8c8:	add    BYTE PTR [eax],al
  40f8ca:	int3   
  40f8cb:	(bad)  
  40f8cc:	imul   edi,edi,0xff009745
  40f8d2:	jmp    esp
  40f8d4:	clc    
  40f8d5:	or     DWORD PTR [ebx-0x7c760073],0xffffffab
  40f8dc:	mov    ?,edi
  40f8de:	jg     0x40f937
  40f8e0:	cmp    edi,0x0
  40f8e3:	or     BYTE PTR [eax],bh
  40f8e5:	add    bh,ch
  40f8e7:	test   BYTE PTR [eax],0xff
  40f8ea:	jmp    FWORD PTR [ebx+0x52630046]
  40f8f0:	int3   
  40f8f1:	inc    DWORD PTR [ebx+0x36ff27db]
  40f8f7:	js     0x40f8f8
  40f8f9:	cmp    edi,0xffffffd7
  40f8fc:	xor    al,0x89
  40f8fe:	push   0x83001f
  40f903:	loop   0x40f95d
  40f905:	mov    DWORD PTR [ebp-0x76],ebp
  40f908:	(bad)  
  40f909:	inc    DWORD PTR [eax]
  40f90b:	jnp    0x40f8cb
  40f90d:	mov    DWORD PTR [eax],ebp
  40f90f:	push   eax
  40f910:	inc    DWORD PTR [eax]
  40f912:	dec    DWORD PTR [ebx]
  40f914:	mov    dh,0xff
  40f916:	test   BYTE PTR [eax],bh
  40f918:	add    BYTE PTR [eax],al
  40f91a:	adc    ebx,0xffffffb2
  40f91d:	jmp    DWORD PTR [edx]
  40f91f:	pop    edx
  40f920:	dec    DWORD PTR [ecx-0x7c965b01]
  40f926:	jns    0x40f906
  40f928:	(bad)  
  40f929:	inc    DWORD PTR [eax]
  40f92b:	mov    bl,0x2
  40f92d:	jmp    DWORD PTR [edi]
  40f92f:	push   edi
  40f930:	dec    esp
  40f932:	add    BYTE PTR [esi+0x4b],bl
  40f935:	add    al,dh
  40f937:	push   ecx
  40f938:	inc    DWORD PTR [ebx-0x339ad001]
  40f93e:	jmp    0x40f984
  40f940:	(bad)  
  40f941:	inc    DWORD PTR [eax]
  40f943:	cwde   
  40f944:	cld    
  40f945:	jmp    DWORD PTR [ecx+0x41]
  40f948:	add    ah,cl
  40f94a:	add    BYTE PTR ds:0xf2a4ff34,bl
  40f950:	dec    esp
  40f952:	inc    edi
  40f954:	scas   al,BYTE PTR es:[edi]
  40f955:	int3   
  40f956:	nop
  40f957:	mov    edi,?
  40f959:	inc    DWORD PTR [ebx+0x1f009124]
  40f95f:	mov    bh,0x0
  40f961:	inc    DWORD PTR [ebx-0x2076714b]
  40f967:	dec    edi
  40f968:	inc    DWORD PTR [ebx-0x7c03d700]
  40f96e:	mov    ds:0xffffff97,al
  40f973:	sbb    al,0x8
  40f975:	mov    DWORD PTR [esi+0xff00d8],edi
  40f97b:	stos   DWORD PTR es:[edi],eax
  40f97c:	xchg   bh,bh
  40f97e:	cli    
  40f97f:	fdivr  st,st(7)
  40f981:	int3   
  40f982:	add    BYTE PTR [edi+0x4f],dl
  40f985:	push   DWORD PTR [edi-0x12]
  40f988:	inc    DWORD PTR [eax]
  40f98a:	add    BYTE PTR [edx+0xb],ch
  40f98d:	add    BYTE PTR [esi+0x1a],bh
  40f990:	(bad)  
  40f991:	(bad)  
  40f992:	inc    DWORD PTR [eax+0x510dcc1b]
  40f998:	cmp    edi,0x0
  40f99b:	aam    0xc1
  40f99d:	add    BYTE PTR [ebp-0x65],dh
  40f9a0:	(bad)  
  40f9a1:	(bad)  
  40f9a2:	dec    DWORD PTR ds:0xbe83832b
  40f9a8:	dec    DWORD PTR [ecx-0x7c679100]
  40f9ae:	mov    dl,0xeb
  40f9b0:	or     esp,0xffffffff
  40f9b3:	fwait
  40f9b4:	int3   
  40f9b5:	add    BYTE PTR [eax],dl
  40f9b7:	mov    bh,bh
  40f9b9:	mov    DWORD PTR [ecx+0x4ffa0fd],ecx
  40f9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9c0:	add    ah,cl
  40f9c2:	jmp    ebx
  40f9c4:	(bad)  
  40f9c5:	call   FWORD PTR [ebp+0xff8302]
  40f9cb:	push   es
  40f9cc:	(bad)  
  40f9cd:	(bad)  
  40f9ce:	(bad)  
  40f9cf:	mov    cl,0x83
  40f9d1:	(bad)  
  40f9d2:	(bad)  
  40f9d3:	mov    eax,0x5950cc50
  40f9d8:	(bad)  
  40f9d9:	inc    DWORD PTR [eax]
  40f9db:	bound  ecx,QWORD PTR [eax-0x1]
  40f9de:	aas    
  40f9df:	jmp    0xccd3:0x84ffff00
  40f9e6:	adc    ecx,esp
  40f9e8:	inc    DWORD PTR [ebx-0x1fdf01]
  40f9ee:	loop   0x40f994
  40f9f0:	cmp    edi,0xffffff83
  40f9f3:	aas    
  40f9f4:	mov    bl,0xff
  40f9f6:	inc    ebp
  40f9f7:	loope  0x40f9f8
  40f9f9:	(bad)  
  40f9fa:	call   DWORD PTR [ecx-0x1ce9ff8e]
  40fa00:	inc    DWORD PTR [ebx-0x7c60f501]
  40fa06:	dec    esp
  40fa07:	jo     0x40f98c
  40fa09:	inc    DWORD PTR [eax]
  40fa0b:	mov    ds,edi
  40fa0d:	add    dh,bh
  40fa0f:	test   eax,0x4289ffff
  40fa14:	test   al,0xff
  40fa16:	aaa    
  40fa17:	inc    esi
  40fa18:	inc    DWORD PTR [eax]
  40fa1a:	add    BYTE PTR [edx+0x65],ah
  40fa1d:	inc    edx
  40fa1f:	xchg   esp,eax
  40fa20:	(bad)  
  40fa21:	inc    DWORD PTR [eax]
  40fa23:	test   BYTE PTR [edx+0x0],ch
  40fa26:	bound  eax,QWORD PTR [ebp+0x0]
  40fa29:	add    bh,bh
  40fa2b:	into   
  40fa2c:	je     0x40f9b7
  40fa2e:	dec    ebp
  40fa2f:	sbb    bh,bh
  40fa31:	add    BYTE PTR [eax],al
  40fa33:	mov    ds:0x3af9ffd0,al
  40fa38:	dec    esp
  40fa3a:	add    dh,cl
  40fa3c:	and    DWORD PTR [eax],eax
  40fa3e:	mov    ebx,0x89ffff6d
  40fa43:	repz dec ebx
  40fa45:	add    BYTE PTR [esi-0x7600ff30],al
  40fa4b:	repnz aaa 
  40fa4d:	add    ch,cl
  40fa4f:	sbb    bh,bh
  40fa51:	add    BYTE PTR [ecx-0x7f7c6e97],cl
  40fa57:	mov    bh,0xff
  40fa59:	add    bh,bh
  40fa5b:	call   0x990bf972
  40fa60:	inc    DWORD PTR [eax]
  40fa62:	add    BYTE PTR [esi-0x40],dh
  40fa65:	add    BYTE PTR [edx+edx*2],dl
  40fa68:	inc    DWORD PTR [eax]
  40fa6a:	int3   
  40fa6b:	mov    ebx,0x5173ff75
  40fa70:	cmp    edi,0xffffffff
  40fa73:	leave  
  40fa74:	xchg   edx,eax
  40fa75:	(bad)  
  40fa76:	js     0x40fab2
  40fa78:	add    ah,cl
  40fa7a:	int3   
  40fa7b:	bsf    edi,edi
  40fa7e:	mov    ebp,0x8300001a
  40fa83:	jle    0x40faca
  40fa85:	add    al,dh
  40fa87:	mov    al,ds:0x2600ffff
  40fa8c:	in     eax,0xcc
  40fa8e:	mov    edi,0xffffffde
  40fa93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa95:	sbb    DWORD PTR [edi],0x3
  40fa98:	int3   
  40fa99:	dec    DWORD PTR [ecx-0x44ffd1b6]
  40fa9f:	int3   
  40faa0:	cmp    edi,0x0
  40faa3:	push   0xffd5ffbd
  40faa8:	cmp    edi,0x0
  40faab:	out    0xae,eax
  40faad:	jmp    DWORD PTR [ebp+0xff98]
  40fab3:	ss aam 0x0
  40fab6:	lds    ebx,FWORD PTR ds:0xc2ff00ff
  40fabc:	sbb    BYTE PTR [ecx+0xffce2c],cl
  40fac2:	add    BYTE PTR [eax-0x60ce0069],bl
  40fac8:	add    bh,bh
  40faca:	add    BYTE PTR [esi],dh
  40facc:	xchg   edx,eax
  40facd:	add    al,bl
  40facf:	in     al,dx
  40fad0:	inc    DWORD PTR [eax]
  40fad2:	add    BYTE PTR [edi-0x1e],ch
  40fad5:	int3   
  40fad6:	int3   
  40fad7:	mov    ch,0xff
  40fad9:	inc    DWORD PTR [ebx+0x6e002012]
  40fadf:	mov    dh,0xff
  40fae1:	inc    DWORD PTR [eax]
  40fae3:	jle    0x40fb3a
  40fae5:	mov    DWORD PTR [ebx+edx*2],esp
  40fae8:	(bad)  
  40fae9:	inc    DWORD PTR [ebx-0x4200e70a]
  40faef:	mov    ecx,DWORD PTR [ecx+0x77070083]
  40faf5:	add    BYTE PTR [eax],bh
  40faf7:	inc    esi
  40faf8:	inc    DWORD PTR [ebx-0x51317d]
  40fafe:	jb     0x40fad6
  40fb00:	mov    edi,edi
  40fb02:	inc    DWORD PTR [edx-0x33c900da]
  40fb08:	(bad)  
  40fb09:	inc    DWORD PTR [ebx-0x12003aaf]
  40fb0f:	and    edi,edi
  40fb11:	add    BYTE PTR [eax],al
  40fb13:	mov    eax,0x48788352
  40fb18:	add    BYTE PTR [ebx-0xd7f901],al
  40fb1e:	repz es add bh,bh
  40fb22:	and    DWORD PTR [ecx+0x5f],0x0
  40fb26:	xchg   esp,eax
  40fb27:	mov    esi,0xf683ffff
  40fb2c:	xor    BYTE PTR [ecx+0x3ed1],cl
  40fb32:	add    dh,bl
  40fb34:	retf   
  40fb35:	call   DWORD PTR [ecx+0x67]
  40fb38:	inc    DWORD PTR [ebx-0xb23101]
  40fb3e:	enter  0xff52,0x0
  40fb42:	cmp    DWORD PTR [eax-0x47c400a7],0xffffffff
  40fb49:	add    BYTE PTR [eax],al
  40fb4b:	and    edx,DWORD PTR [esi]
  40fb4d:	inc    DWORD PTR [edx+0xff6b]
  40fb53:	mov    eax,DWORD PTR [ecx]
  40fb55:	mov    DWORD PTR [ebp-0x3376330f],eax
  40fb5b:	dec    ecx
  40fb5c:	std    
  40fb5d:	add    BYTE PTR [esi],ch
  40fb5f:	sub    bh,bh
  40fb61:	(bad)  
  40fb62:	call   DWORD PTR [esi+0x41fc00c0]
  40fb68:	(bad)  
  40fb69:	inc    DWORD PTR [eax]
  40fb6b:	xchg   DWORD PTR [edi+edi*8-0x760036f0],ecx
  40fb72:	add    BYTE PTR [edx-0x278a00e4],dh
  40fb78:	(bad)  
  40fb79:	inc    DWORD PTR [eax]
  40fb7b:	mov    ds:0xa01f8328,al
  40fb80:	add    DWORD PTR [eax],0x0
  40fb83:	adc    al,0xa8
  40fb85:	mov    DWORD PTR [edi+esi*1],ebp
  40fb88:	(bad)  
  40fb89:	inc    DWORD PTR [ebx+0x54fff7bb]
  40fb8f:	call   0x64:0xaa00ff89
  40fb96:	dec    bh
  40fb98:	int3   
  40fb99:	(bad)  
  40fb9a:	jmp    FWORD PTR [esi+esi*4]
  40fb9d:	add    BYTE PTR [ebp-0xff00eb],dl
  40fba3:	scas   eax,DWORD PTR es:[edi]
  40fba4:	dec    edi
  40fba5:	call   DWORD PTR [ebx+0x5f]
  40fba8:	(bad)  
  40fba9:	(bad)  
  40fbaa:	(bad)  
  40fbab:	jge    0x40fb2d
  40fbad:	add    BYTE PTR [ebp-0x7cff9c],ah
  40fbb3:	adc    esi,ebp
  40fbb5:	add    BYTE PTR [edx+0xffff30],ch
  40fbbb:	outs   dx,DWORD PTR ds:[esi]
  40fbbc:	outs   dx,BYTE PTR ds:[esi]
  40fbbd:	mov    DWORD PTR ds:0x89008384,ecx
  40fbc3:	push   esi
  40fbc4:	sub    DWORD PTR [eax],eax
  40fbc6:	jle    0x40fc29
  40fbc8:	inc    DWORD PTR [eax]
  40fbca:	add    cl,bl
  40fbcc:	or     eax,0x83370289
  40fbd1:	add    BYTE PTR [ecx-0x7e3332f9],cl
  40fbd7:	xchg   edi,eax
  40fbd8:	(bad)  
  40fbd9:	(bad)  
  40fbda:	call   DWORD PTR [eax]
  40fbdc:	fdivr  st,st(7)
  40fbde:	test   BYTE PTR [edi+edi*8],dh
  40fbe1:	add    BYTE PTR [ebx+0x68ff798a],al
  40fbe7:	jae    0x40fbe9
  40fbe9:	inc    DWORD PTR [ebx+0x6b00edc9]
  40fbef:	ret    0xcc
  40fbf2:	xor    DWORD PTR [edx],0xe
  40fbf5:	call   FWORD PTR [edi-0x29]
  40fbf8:	inc    DWORD PTR [eax]
  40fbfa:	(bad)  
  40fbfb:	cmp    al,0x8b
  40fbfd:	adc    DWORD PTR [edi+0x3b],0xffffff83
  40fc01:	add    bh,bh
  40fc03:	lahf   
  40fc04:	mov    ebp,0x9e71ff
  40fc09:	add    ah,cl
  40fc0b:	fld    QWORD PTR [ecx+0x63c1ff]
  40fc11:	inc    DWORD PTR [eax]
  40fc13:	sub    esi,ebp
  40fc15:	call   DWORD PTR [edx]
  40fc17:	ds add bh,bh
  40fc1a:	sbb    DWORD PTR [ecx+0x6d],0xffffffff
  40fc1e:	sbb    DWORD PTR [ebx],ebp
  40fc20:	int3   
  40fc21:	add    bh,bh
  40fc23:	xor    dh,bh
  40fc25:	adc    DWORD PTR [ebp-0xff62],0x17
  40fc2c:	(bad)  
  40fc2d:	int3   
  40fc2e:	adc    bl,al
  40fc30:	add    BYTE PTR [ebx+0xd1483],al
  40fc36:	adc    al,0x65
  40fc38:	(bad)  
  40fc39:	(bad)  
  40fc3a:	call   esp
  40fc3c:	pop    ebx
  40fc3d:	call   FWORD PTR [eax]
  40fc3f:	dec    eax
  40fc40:	add    BYTE PTR [eax],al
  40fc42:	(bad)  
  40fc43:	stc    
  40fc44:	jb     0x40fc45
  40fc46:	mov    ds:0xff003d,eax
  40fc4b:	ret    
  40fc4c:	or     eax,0xa600
  40fc51:	add    BYTE PTR [ebx-0x50ffb721],al
  40fc57:	push   ecx
  40fc58:	(bad)  
  40fc59:	inc    DWORD PTR [eax]
  40fc5b:	and    eax,0x96dc009e
  40fc60:	inc    DWORD PTR [eax]
  40fc62:	(bad)  
  40fc63:	(bad)  
  40fc64:	sbb    eax,0x8905f183
  40fc69:	add    BYTE PTR [ebx-0x35000c45],al
  40fc6f:	pop    esp
  40fc70:	int3   
  40fc71:	(bad)  
  40fc72:	push   DWORD PTR [ecx+0x5499ffbc]
  40fc78:	inc    DWORD PTR [ebx-0x8d8a7d]
  40fc7e:	dec    eax
  40fc7f:	in     eax,dx
  40fc80:	(bad)  
  40fc81:	inc    DWORD PTR [eax]
  40fc83:	imul   BYTE PTR ds:0x6e2b89
  40fc89:	add    BYTE PTR [ebx+0x5600d388],al
  40fc8f:	mov    edi,0x7fccffff
  40fc94:	add    al,0xff
  40fc96:	xchg   ebx,eax
  40fc97:	(bad)  
  40fc98:	add    BYTE PTR [eax],al
  40fc9a:	and    DWORD PTR ds:0xa365ffe8,0xffffff83
  40fca1:	mov    DWORD PTR [eax],eax
  40fca3:	stos   DWORD PTR es:[edi],eax
  40fca4:	ja     0x40fc29
  40fca6:	xor    dl,BYTE PTR [ebx-0x7d]
  40fca9:	add    BYTE PTR [ebx-0x15ff6257],al
  40fcaf:	or     al,BYTE PTR [ebx+0x702000ff]
  40fcb5:	call   edx
  40fcb7:	ja     0x40fcb9
  40fcb9:	add    BYTE PTR [eax],al
  40fcbb:	mov    dh,0x0
  40fcbd:	jmp    DWORD PTR [ebx]
  40fcbf:	cmp    al,0xff
  40fcc1:	add    bh,bh
  40fcc3:	loop   0x40fcc6
  40fcc5:	jmp    DWORD PTR [ebp+edx*8-0x34]
  40fcc9:	(bad)  
  40fcca:	call   FWORD PTR [ebp+0x3]
  40fccd:	push   esi
  40fccf:	stos   DWORD PTR es:[edi],eax
  40fcd0:	cmp    edi,0xffffff83
  40fcd3:	lahf   
  40fcd4:	in     eax,0xff
  40fcd6:	adc    al,BYTE PTR [edi+0x0]
  40fcd9:	inc    DWORD PTR [ebx+0x77002876]
  40fcdf:	sbb    bh,bh
  40fce1:	add    DWORD PTR [eax],0x6b
  40fce4:	pop    ds
  40fce5:	add    BYTE PTR [ebp+0x25],dl
  40fce8:	add    bh,bh
  40fcea:	call   esp
  40fcec:	jae    0x40fced
  40fcee:	loope  0x40fc78
  40fcf0:	add    ah,cl
  40fcf2:	jmp    FWORD PTR [eax+ebp*2-0x7c8c4b01]
  40fcf9:	inc    DWORD PTR [eax]
  40fcfb:	fstp   DWORD PTR [ebp-0x1]
  40fcfe:	jge    0x40fcd3
  40fd00:	add    DWORD PTR [eax],0x0
  40fd03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd04:	push   ss
  40fd05:	call   DWORD PTR [eax]
  40fd07:	ja     0x40fd09
  40fd09:	(bad)  
  40fd0a:	jmp    FWORD PTR [eax+0x2]
  40fd0d:	jmp    DWORD PTR [ebp+edx*2+0x3c8900cc]
  40fd14:	repz (bad) 
  40fd16:	clc    
  40fd17:	pop    esp
  40fd18:	dec    DWORD PTR [ecx-0x76bd8d01]
  40fd1e:	daa    
  40fd1f:	lods   al,BYTE PTR ds:[esi]
  40fd20:	(bad)  
  40fd21:	inc    DWORD PTR [eax]
  40fd23:	cdq    
  40fd24:	pop    esp
  40fd25:	push   edx
  40fd27:	push   esi
  40fd28:	inc    DWORD PTR [eax]
  40fd2a:	jmp    FWORD PTR [edi+edi*2+0x0]
  40fd2e:	push   ebx
  40fd2f:	or     al,0xff
  40fd31:	int3   
  40fd32:	call   DWORD PTR [edi+0x6f54ff92]
  40fd38:	add    bh,bh
  40fd3a:	add    dl,cl
  40fd3c:	jne    0x40fcc1
  40fd3e:	add    cl,BYTE PTR [edx]
  40fd40:	add    BYTE PTR [ebx+0xaccaff],al
  40fd46:	pop    ecx
  40fd47:	sbb    BYTE PTR [ebx-0x49a90001],al
  40fd4d:	add    BYTE PTR [ebx],cl
  40fd4f:	or     edi,edi
  40fd51:	add    DWORD PTR [eax],0x4e
  40fd54:	sbb    eax,DWORD PTR [eax]
  40fd56:	mov    bh,al
  40fd58:	int3   
  40fd59:	add    BYTE PTR [eax],al
  40fd5b:	mov    esp,0xd590ff91
  40fd60:	(bad)  
  40fd61:	(bad)  
  40fd62:	(bad)  
  40fd63:	clc    
  40fd64:	xchg   esp,eax
  40fd65:	jmp    FWORD PTR [ecx+0x38]
  40fd68:	inc    DWORD PTR [eax]
  40fd6a:	add    BYTE PTR [ebx+ebx*8],bh
  40fd6d:	push   DWORD PTR [ebp+0x53]
  40fd70:	dec    DWORD PTR [ecx-0x7cff4f01]
  40fd76:	repz adc eax,0x3dffffff
  40fd7c:	in     al,dx
  40fd7d:	jmp    FWORD PTR ds:0x8900ff7c
  40fd83:	xchg   ebx,eax
  40fd84:	pop    ss
  40fd85:	(bad)  
  40fd86:	out    dx,eax
  40fd87:	repz dec DWORD PTR [ecx-0x33f7d07d]
  40fd8e:	(bad)  
  40fd8f:	cmp    bh,bh
  40fd91:	(bad)  
  40fd92:	push   DWORD PTR [edx+ebp*4-0x1]
  40fd96:	(bad)  
  40fd97:	repz add DWORD PTR [eax],0x0
  40fd9b:	mov    ecx,0x2e930096
  40fda0:	add    DWORD PTR [eax],0x0
  40fda3:	shr    DWORD PTR [edi],cl
  40fda5:	call   FWORD PTR [edi+ebp*8-0x4010000]
  40fdac:	(bad)  
  40fdae:	ds push esp
  40fdb0:	add    bh,bh
  40fdb2:	call   DWORD PTR [eax+0x43af008c]
  40fdb8:	add    BYTE PTR [ecx+0x1368ff],cl
  40fdbe:	or     DWORD PTR [esi+0x62008300],esi
  40fdc4:	pop    ss
  40fdc5:	call   DWORD PTR [ebx+0x52]
  40fdc8:	dec    esp
  40fdca:	adc    DWORD PTR ds:0x3cbbff35,0xffffff89
  40fdd1:	add    bh,bh
  40fdd3:	xchg   esi,edx
  40fdd5:	push   DWORD PTR [eax-0x12]
  40fdd8:	int3   
  40fdd9:	inc    DWORD PTR [eax]
  40fddb:	sub    dl,ah
  40fddd:	add    al,dl
  40fddf:	ja     0x40fde0
  40fde1:	(bad)  
  40fde2:	push   ebx
  40fde4:	mov    bh,bh
  40fde6:	call   0xff40fe99
  40fdeb:	mov    ah,0xb
  40fded:	call   eax
  40fdef:	push   es
  40fdf0:	add    BYTE PTR [ecx-0xea4201],cl
  40fdf6:	mov    DWORD PTR [esp+ecx*8-0x7d],0x896565ff
  40fdfe:	pop    ds
  40fdff:	xchg   esp,eax
  40fe00:	mov    edi,edi
  40fe02:	dec    DWORD PTR [edx-0x5a120017]
  40fe08:	add    BYTE PTR [ebx+0xae300],al
  40fe0e:	push   ds
  40fe0f:	add    eax,0x7bffffff
  40fe14:	stc    
  40fe15:	jmp    FWORD PTR ds:0xff0000cd
  40fe1b:	xor    eax,0x34a383ca
  40fe20:	(bad)  
  40fe21:	inc    DWORD PTR [ebx+0x64005aa7]
  40fe27:	sbb    al,0xff
  40fe29:	inc    DWORD PTR [eax]
  40fe2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe2c:	dec    ebx
  40fe2d:	jmp    ebx
  40fe2f:	test   DWORD PTR [eax],0x41e80089
  40fe35:	int3   
  40fe36:	out    dx,al
  40fe37:	int    0xff
  40fe39:	inc    DWORD PTR [eax]
  40fe3b:	loope  0x40fdc8
  40fe3d:	int3   
  40fe3e:	into   
  40fe3f:	aas    
  40fe40:	add    BYTE PTR [eax],al
  40fe42:	jmp    DWORD PTR [eax]
  40fe44:	loop   0x40fe45
  40fe46:	les    ecx,FWORD PTR [ebp-0x58763334]
  40fe4c:	mov    esp,0xff473f00
  40fe51:	inc    DWORD PTR [ebx-0x2600a4b7]
  40fe57:	push   ebx
  40fe58:	inc    DWORD PTR [eax]
  40fe5a:	add    bh,dl
  40fe5c:	jmp    0xffb8bc60
  40fe61:	inc    DWORD PTR [ebx-0x4a33f73e]
  40fe67:	add    DWORD PTR [eax],0x9438ff89
  40fe6d:	inc    ebp
  40fe6f:	pop    ds
  40fe70:	dec    esp
  40fe72:	push   DWORD PTR [edi+eiz*1-0x34]
  40fe76:	or     BYTE PTR [edi+edi*8],dh
  40fe79:	(bad)  
  40fe7a:	(bad)  
  40fe7b:	aas    
  40fe7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe7d:	add    BYTE PTR [edi],bh
  40fe7f:	xchg   ebx,eax
  40fe80:	add    bh,bh
  40fe82:	inc    edi
  40fe84:	into   
  40fe85:	add    BYTE PTR [esi],al
  40fe87:	inc    esp
  40fe88:	add    BYTE PTR [eax],al
  40fe8a:	and    ecx,0x6b
  40fe8d:	add    BYTE PTR [ecx],al
  40fe8f:	pop    ds
  40fe90:	add    bh,bh
  40fe92:	inc    DWORD PTR [esi-0x68f1ffb1]
  40fe98:	int3   
  40fe99:	(bad)  
  40fe9a:	call   DWORD PTR [edx]
  40fe9c:	xor    al,BYTE PTR [ebx+0xff5d74]
  40fea2:	sub    DWORD PTR [edi-0x17],0x0
  40fea6:	inc    ecx
  40fea7:	pop    ds
  40fea8:	add    BYTE PTR [eax],al
  40feaa:	add    BYTE PTR [ebp+ecx*8-0xad9701],dh
  40feb1:	add    DWORD PTR [ebx+0x48004522],0xffffff83
  40feb8:	inc    DWORD PTR [eax]
  40feba:	adc    DWORD PTR [ebx+0x6326005a],0xffffffff
  40fec1:	(bad)  
  40fec2:	jmp    FWORD PTR [ecx+0x7f48ccf1]
  40fec8:	dec    DWORD PTR [ecx+0xcc5e00]
  40fece:	push   es
  40fecf:	daa    
  40fed0:	add    DWORD PTR [eax],0xffffffff
  40fed3:	add    dl,BYTE PTR [eax-0x1]
  40fed6:	pop    esi
  40fed7:	inc    ebx
  40fed8:	inc    DWORD PTR [ebx-0x9f2901]
  40fede:	mov    ds,ecx
  40fee0:	add    bh,bh
  40fee2:	int3   
  40fee3:	pop    eax
  40fee4:	dec    esi
  40fee5:	(bad)  
  40fee6:	cld    
  40fee7:	pop    edx
  40fee8:	mov    edi,edi
  40feea:	sub    DWORD PTR [esi+0x1421ff8c],0xffffffcc
  40fef1:	inc    DWORD PTR [eax]
  40fef3:	sub    DWORD PTR [ebx],esp
  40fef5:	dec    DWORD PTR [ecx+0x6d]
  40fef8:	add    ah,cl
  40fefa:	cmp    DWORD PTR [ecx],0xffffffa6
  40fefd:	dec    eax
  40feff:	xor    eax,DWORD PTR [eax]
  40ff01:	(bad)  
  40ff02:	jmp    FWORD PTR [esi+0x4be78306]
  40ff08:	int3   
  40ff09:	or     DWORD PTR [ecx+0x2800fbcc],0xfffffff6
  40ff10:	(bad)  
  40ff11:	inc    DWORD PTR [eax]
  40ff13:	push   ebx
  40ff14:	mov    bh,bh
  40ff16:	sahf   
  40ff17:	mov    ch,0xff
  40ff19:	cmp    edi,0xffffffd6
  40ff1c:	mov    WORD PTR [ecx+0x83b16d],cs
  40ff22:	cmp    DWORD PTR ds:0x12c0ff6c,0xffffff83
  40ff29:	(bad)  
  40ff2a:	call   FWORD PTR [edx+0x44cfff2d]
  40ff30:	add    BYTE PTR [ecx-0x7c502f00],cl
  40ff36:	fild   DWORD PTR [edx]
  40ff38:	add    BYTE PTR [eax],al
  40ff3a:	or     DWORD PTR [edx],0x76
  40ff3d:	jmp    DWORD PTR [ecx-0x33007c6e]
  40ff43:	xchg   ebp,eax
  40ff44:	mov    edx,0x831fdb00
  40ff49:	add    bh,bh
  40ff4b:	mov    ebx,0x86af0089
  40ff50:	add    bh,bh
  40ff52:	add    BYTE PTR [ebx-0x12ea33e8],cl
  40ff58:	add    bh,bh
  40ff5a:	push   DWORD PTR [ecx-0x58b5007d]
  40ff60:	add    BYTE PTR [eax],al
  40ff62:	add    BYTE PTR [ecx-0x37],ah
  40ff65:	adc    DWORD PTR [ebx],0x68
  40ff68:	add    BYTE PTR [ebx-0x5af501],al
  40ff6e:	aam    0xe6
  40ff70:	add    bh,bh
  40ff72:	jmp    FWORD PTR [edx]
  40ff74:	loop   0x40ff76
  40ff76:	(bad)  
  40ff77:	add    edi,edi
  40ff79:	(bad)  
  40ff7a:	jmp    ebp
  40ff7c:	in     al,0x0
  40ff7e:	push   eax
  40ff7f:	les    eax,FWORD PTR [eax]
  40ff81:	cmp    edi,0x76
  40ff84:	(bad)  
  40ff86:	ret    0xffe7
  40ff89:	int3   
  40ff8a:	call   DWORD PTR [eax+0xcffff9b]
  40ff90:	add    BYTE PTR [ecx-0xc4e47d],cl
  40ff96:	test   eax,0xcc00cc1c
  40ff9b:	dec    edi
  40ff9c:	mov    ds:0xffb59eff,al
  40ffa1:	cmp    edi,0xffffffcb
  40ffa4:	cmc    
  40ffa5:	add    BYTE PTR [edi+0x890054],dl
  40ffab:	jo     0x40ffbc
  40ffad:	add    BYTE PTR [edi+0x71],dl
  40ffb0:	add    bh,bh
  40ffb2:	int3   
  40ffb3:	ins    DWORD PTR es:[edi],dx
  40ffb4:	mov    al,0xff
  40ffb6:	push   ecx
  40ffb7:	adc    eax,0xa4838389
  40ffbc:	mov    edi,0xff8d08ff
  40ffc1:	add    bh,bh
  40ffc3:	dec    edi
  40ffc4:	mov    edi,edi
  40ffc6:	movups xmm4,xmm1
  40ffc9:	add    BYTE PTR [ecx+0x170019f6],cl
  40ffcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffd0:	mov    DWORD PTR [ebx-0x7c0d8001],eax
  40ffd6:	mov    ah,0x96
  40ffd8:	inc    DWORD PTR [eax]
  40ffda:	push   DWORD PTR [ebp-0x78]
  40ffdd:	sbb    esi,0xffffffcd
  40ffe0:	add    DWORD PTR [eax],0xffffff83
  40ffe3:	sub    al,0x8e
  40ffe5:	sub    DWORD PTR [edx],0xffffffd2
  40ffe8:	int3   
  40ffe9:	add    bh,bh
  40ffeb:	mov    dl,0x8
  40ffed:	jmp    FWORD PTR [eax-0x2]
  40fff0:	(bad)  
  40fff1:	inc    DWORD PTR [eax]
  40fff3:	pushf  
  40fff4:	jmp    0x40ff7f
  40fff6:	scas   ax,WORD PTR es:[edi]
  40fff8:	cmp    edi,0x0
  40fffb:	inc    edi
  40fffc:	mov    bl,0x83
  40fffe:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  410000:	add    ah,cl
  410002:	sub    DWORD PTR [ecx+eax*1+0xc11bff],0x0
  41000a:	jmp    FWORD PTR [ebp+0x51b00c1]
  410010:	(bad)  
  410011:	inc    DWORD PTR [eax]
  410013:	retf   
  410014:	inc    esp
  410015:	(bad)  
  410016:	jl     0x410077
  410018:	(bad)  
  410019:	dec    esp
  41001b:	mov    bh,0x43
  41001d:	jmp    FWORD PTR [eax+0x16]
  410020:	add    DWORD PTR [eax],0xffffffff
  410023:	(bad)  
  410024:	mov    al,0xcc
  410026:	stos   BYTE PTR es:[edi],al
  410027:	add    eax,DWORD PTR [eax]
  410029:	add    BYTE PTR [eax],al
  41002b:	imul   ecx,esi,0x6efdff
  410031:	add    BYTE PTR [eax],al
  410033:	jnp    0x41008e
  410035:	(bad)  
  410036:	mov    ebx,0x83837c
  41003b:	sbb    ebp,DWORD PTR [ebx]
  41003d:	add    cl,bh
  41003f:	lods   al,BYTE PTR ds:[esi]
  410040:	cmp    edi,0xffffff89
  410043:	(bad)  
  410044:	stos   BYTE PTR es:[edi],al
  410045:	jmp    ecx
  410047:	add    al,0xff
  410049:	or     DWORD PTR [ecx+0x3000454c],0x2e
  410050:	inc    DWORD PTR [eax]
  410052:	sbb    DWORD PTR [edi+0x2f],0x0
  410056:	addr16 loop 0x410058
  410059:	(bad)  
  41005a:	inc    DWORD PTR [edx]
  41005c:	mov    DWORD PTR [ebx-0x33ff8b79],eax
  410062:	or     DWORD PTR [ebp+0x14],0xffffff89
  410066:	lahf   
  410067:	fdivp  st(7),st
  410069:	inc    DWORD PTR [ebx-0x3fffa312]
  41006f:	lea    eax,[ebx-0xb680077]
  410075:	jmp    DWORD PTR [ebp-0x760000f8]
  41007b:	std    
  41007c:	and    edi,edi
  41007e:	out    0xc1,al
  410080:	inc    DWORD PTR [ebx-0x215b01]
  410086:	inc    ebp
  410087:	(bad)  
  410088:	inc    DWORD PTR [eax]
  41008a:	int3   
  41008b:	jb     0x4100ca
  41008d:	add    ch,ch
  41008f:	(bad)  
  410091:	inc    DWORD PTR [eax]
  410093:	inc    eax
  410094:	pop    ecx
  410095:	add    BYTE PTR ds:0xffff8925,bh
  41009b:	loopne 0x41002f
  41009d:	push   edx
  41009f:	jo     0x4100a0
  4100a1:	add    BYTE PTR [ebx-0x69005388],al
  4100a7:	gs add bh,bh
  4100aa:	jmp    FWORD PTR [edi+0x45148947]
  4100b0:	(bad)  
  4100b1:	inc    DWORD PTR [ebx-0x54ff5060]
  4100b7:	add    bh,bh
  4100b9:	add    BYTE PTR [eax],al
  4100bb:	xor    DWORD PTR [edx+0x0],ebx
  4100be:	retf   
  4100bf:	sbb    al,BYTE PTR [ebx+0x7f2800ff]
  4100c5:	int3   
  4100c6:	pop    ebx
  4100c7:	pop    esp
  4100c8:	cmp    edi,0xffffffff
  4100cb:	inc    eax
  4100cc:	cmp    eax,0xccb67a89
  4100d1:	add    DWORD PTR [eax],0x3d
  4100d4:	push   ebp
  4100d5:	xor    ebx,0x6e
  4100d8:	(bad)  
  4100d9:	inc    DWORD PTR [ebx-0x7900030a]
  4100df:	aad    0x0
  4100e1:	add    DWORD PTR [eax],0xffffffca
  4100e4:	int3   
  4100e5:	inc    DWORD PTR [ebx-0x48]
  4100e8:	(bad)  
  4100e9:	inc    DWORD PTR [eax]
  4100eb:	jbe    0x410072
  4100ed:	call   FWORD PTR [ebp+edi*2+0x0]
  4100f1:	(bad)  
  4100f2:	(bad)  
  4100f3:	fisubr DWORD PTR [eax-0x34]
  4100f6:	call   0xeb18:0xff830040
  4100fd:	dec    DWORD PTR [edi-0x76ff6d]
  410103:	retf   0xff7a
  410106:	fwait
  410107:	xor    edi,edi
  410109:	(bad)  
  41010a:	(bad)  
  41010b:	out    dx,eax
  41010c:	(bad)  
  41010d:	or     esi,0xffffffe3
  410110:	inc    DWORD PTR [eax]
  410112:	(bad)  
  410113:	stc    
  410114:	iret   
  410115:	dec    DWORD PTR ds:0xffffffd9
  41011b:	sbb    eax,0xaca6ff49
  410120:	add    ah,cl
  410122:	push   DWORD PTR [esi]
  410124:	stc    
  410125:	add    edi,0x2
  410128:	add    BYTE PTR [eax],al
  41012a:	add    ebx,0x65
  41012d:	add    bl,ch
  41012f:	jmp    0x410130
  410131:	dec    DWORD PTR [ecx+0x63cc5ef0]
  410137:	(bad)  
  410138:	(bad)  
  410139:	inc    DWORD PTR [eax]
  41013b:	cmp    ch,BYTE PTR [eax]
  41013d:	push   DWORD PTR [esi+0x830088]
  410143:	iret   
  410144:	out    0xff,eax
  410146:	popa   
  410147:	sub    DWORD PTR [eax],eax
  410149:	add    ah,cl
  41014b:	fmul   DWORD PTR [edi-0x77]
  41014e:	sbb    ebp,DWORD PTR [ecx]
  410150:	(bad)  
  410151:	(bad)  
  410152:	jmp    DWORD PTR [eax-0x5d]
  410155:	int3   
  410156:	gs xchg edi,eax
  410158:	inc    DWORD PTR [eax]
  41015a:	add    BYTE PTR [edi-0x5fdb33d2],bl
  410160:	(bad)  
  410161:	inc    DWORD PTR [ebx-0x5433b8fb]
  410167:	loopne 0x410168
  410169:	cmp    edi,0xffffffce
  41016c:	pop    ebx
  41016d:	mov    DWORD PTR [esi],eax
  41016f:	cld    
  410170:	inc    DWORD PTR [ebx-0x13677]
  410176:	push   ebx
  410177:	mov    esp,0x2e00ff00
  41017c:	(bad)  
  41017e:	xchg   ebp,eax
  41017f:	cli    
  410180:	add    BYTE PTR [eax],al
  410182:	adc    edx,0x29
  410185:	call   FWORD PTR [ebx+eiz*8]
  410188:	dec    DWORD PTR [ecx-0x3316a201]
  41018e:	out    dx,al
  41018f:	xlat   BYTE PTR ds:[ebx]
  410190:	add    BYTE PTR [eax],al
  410192:	and    edx,0x36
  410195:	(bad)  
  410196:	ficom  WORD PTR [edx-0x97cff01]
  41019c:	ss int3 
  41019e:	dec    esi
  41019f:	inc    ebp
  4101a0:	add    BYTE PTR [eax],al
  4101a2:	int3   
  4101a3:	hlt    
  4101a4:	sub    eax,0xff327183
  4101a9:	add    ah,cl
  4101ab:	stos   BYTE PTR es:[edi],al
  4101ac:	cmp    eax,0xc2ddff
  4101b1:	dec    DWORD PTR [ecx-0x2efff5c8]
  4101b7:	xor    eax,0xd4ffffff
  4101bc:	inc    ebp
  4101bd:	xor    DWORD PTR [edi],0x3a
  4101c0:	mov    edi,edi
  4101c2:	(bad)  
  4101c3:	jmp    0xff00:0x81aa8343
  4101ca:	call   DWORD PTR [ebp+0x5eacff13]
  4101d0:	add    ah,cl
  4101d2:	add    bl,bh
  4101d4:	daa    
  4101d5:	add    dl,bh
  4101d7:	adc    eax,0x38000000
  4101dc:	fwait
  4101dd:	sub    DWORD PTR [eax+0x42],0x0
  4101e1:	cmp    edi,0x7d
  4101e4:	sub    al,BYTE PTR [eax]
  4101e6:	dec    ecx
  4101e7:	jge    0x410172
  4101e9:	add    bh,bh
  4101eb:	push   ebp
  4101ec:	jmp    0x83ff:0xff722683
  4101f3:	mov    cl,0xc2
  4101f5:	add    BYTE PTR [edi+0x3d],ah
  4101f8:	cmp    edi,0xffffffcc
  4101fb:	pop    DWORD PTR [eax]
  4101fd:	and    edx,0xffffffaa
  410200:	add    BYTE PTR [eax],al
  410202:	mov    DWORD PTR [ebp-0x2aecffeb],edx
  410208:	inc    DWORD PTR [ebx+0x651cff]
  41020e:	aas    
  41020f:	iret   
  410210:	dec    esp
  410212:	call   FWORD PTR [ebx]
  410214:	push   es
  410215:	and    DWORD PTR [edx+0x6a],0xffffffcc
  410219:	int3   
  41021a:	int3   
  41021b:	int3   
  41021c:	int3   
  41021d:	int3   
  41021e:	int3   
  41021f:	int3   
  410220:	add    BYTE PTR [eax],al
  410222:	or     edx,edi
  410224:	cwde   
  410225:	mov    DWORD PTR [edi+edi*8-0x77],eax
  410229:	push   DWORD PTR [esi]
  41022b:	xchg   ebp,eax
  41022c:	sub    eax,0xff87ff00
  410231:	inc    edx
  410233:	or     ebx,esp
  410235:	add    BYTE PTR [ecx],al
  410237:	(bad)  
  410238:	inc    DWORD PTR [ebx-0x25d1be]
  41023e:	inc    esp
  410240:	mov    edi,edi
  410242:	sbb    eax,0x68ccd6e7
  410247:	inc    DWORD PTR [ebx-0x32036000]
  41024d:	(bad)  
  41024e:	dec    edx
  410250:	dec    DWORD PTR [ecx+0x452bbd]
  410256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410257:	(bad)  
  410258:	(bad)  
  410259:	dec    ecx
  41025b:	push   edx
  41025c:	fiadd  DWORD PTR [eax]
  41025e:	add    BYTE PTR [eax+0x7cbaffff],al
  410264:	jae    0x4101e9
  410266:	imul   edi,edi,0xffffffff
  410269:	mov    esi,edx
  41026b:	dec    ecx
  41026c:	(bad)  
  41026d:	int3   
  41026e:	add    BYTE PTR [eax-0x1],al
  410271:	inc    ebx
  410273:	lock pop ebx
  410275:	call   FWORD PTR [eax-0x2400ff01]
  41027b:	adc    DWORD PTR [eax-0xef7c01],ebp
  410281:	(bad)  
  410282:	fisub  WORD PTR [ebx+ebp*2+0x0]
  410286:	mov    ds:0x5affff83,al
  41028b:	add    eax,DWORD PTR [edi-0x77]
  41028e:	push   edi
  410290:	cmp    edi,0x6f
  410293:	scas   eax,DWORD PTR es:[edi]
  410294:	mov    edi,?
  410296:	or     DWORD PTR [ecx-0x325c0100],0xfffffff8
  41029d:	inc    DWORD PTR [eax]
  41029f:	fld    DWORD PTR [eax]
  4102a1:	call   DWORD PTR [edx+edx*4+0x26]
  4102a5:	add    bh,al
  4102a7:	add    BYTE PTR [ebx+0x270d6f89],al
  4102ad:	(bad)  
  4102ae:	call   edi
  4102b0:	(bad)  
  4102b1:	call   FWORD PTR [edi+0x3600b094]
  4102b7:	int3   
  4102b8:	inc    DWORD PTR [eax]
  4102ba:	mov    ah,0x2a
  4102bc:	add    DWORD PTR [eax],0xffffbe00
  4102c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102c3:	inc    ecx
  4102c4:	add    DWORD PTR es:[esi+0x3e000000],0x41
  4102cc:	jg     0x4102ce
  4102ce:	push   DWORD PTR [edi-0x1]
  4102d1:	(bad)  
  4102d2:	sti    
  4102d3:	cld    
  4102d4:	inc    esi
  4102d5:	call   DWORD PTR [eax+eax*1+0x541783cc]
  4102dc:	add    bh,bh
  4102de:	mov    DWORD PTR [eax],edi
  4102e0:	dec    esp
  4102e2:	dec    edx
  4102e3:	xor    DWORD PTR [esi+0x893189],ebx
  4102e9:	mov    edi,edi
  4102eb:	sbb    eax,0x2bff83c0
  4102f0:	add    BYTE PTR [eax],al
  4102f2:	arpl   WORD PTR [ebp+0x5f],si
  4102f5:	call   FWORD PTR [esp+ecx*8-0x1]
  4102f9:	call   DWORD PTR [esi+ebx*4]
  4102fc:	inc    ecx
  4102fd:	add    BYTE PTR [eax],al
  4102ff:	push   0xffffffff
  410301:	dec    esi
  410303:	pop    ebp
  410304:	in     eax,0x0
  410306:	pop    ecx
  410307:	cmp    edi,0x0
  41030a:	cs sahf 
  41030c:	aas    
  41030d:	(bad)  
  41030e:	call   FWORD PTR [ecx]
  410310:	inc    DWORD PTR [ebx+0xdd6db0]
  410316:	mov    edi,edi
  410318:	mov    edi,edi
  41031a:	and    eax,ebx
  41031c:	pop    DWORD PTR [eax]
  41031e:	add    BYTE PTR [ebx],bh
  410320:	add    ah,cl
  410322:	or     DWORD PTR [ebx+0x47],ebp
  410325:	mov    ebx,eax
  410327:	int3   
  410328:	(bad)  
  410329:	inc    DWORD PTR [ecx-0x7c768e1e]
  41032f:	pop    eax
  410330:	add    bh,bh
  410332:	inc    ecx
  410333:	and    esp,eax
  410335:	jmp    FWORD PTR [edi+edi*8]
  410338:	add    BYTE PTR [eax],al
  41033a:	shl    bl,0xd
  41033d:	add    BYTE PTR [eax],al
  41033f:	mov    BYTE PTR [eax],al
  410341:	add    dh,ch
  410343:	inc    esp
  410344:	popf   
  410345:	push   DWORD PTR [ebx+0x1b89ff83]
  41034b:	retf   0xffe4
  41034e:	int3   
  41034f:	mov    eax,0x2af483ff
  410354:	test   edi,edi
  410356:	ss (bad) 
  410358:	(bad)  
  410359:	jmp    FWORD PTR [ebx+0x18]
  41035c:	push   0x83a789ff
  410361:	dec    DWORD PTR [edi]
  410363:	mov    DWORD PTR [ecx-0x1],ebx
  410366:	inc    ebx
  410367:	(bad)  
  410368:	(bad)  
  410369:	call   FWORD PTR [eax-0x7cc956]
  41036f:	cmc    
  410370:	(bad)  
  410371:	inc    DWORD PTR [ebx+0x6183c758]
  410377:	(bad)  
  410378:	(bad)  
  410379:	call   DWORD PTR [edi]
  41037b:	stos   BYTE PTR es:[edi],al
  41037c:	retf   0xcc83
  41037f:	push   edx
  410380:	inc    DWORD PTR [ebx-0x1cefb5]
  410386:	sahf   
  410387:	cmp    edi,0xffffff83
  41038a:	dec    ecx
  41038b:	mov    edx,0xa0ff00a2
  410390:	int3   
  410391:	or     edi,0xffffffb5
  410394:	das    
  410395:	(bad)  
  410396:	(bad)  
  410398:	add    bh,bh
  41039a:	dec    eax
  41039b:	pop    edx
  41039c:	int3   
  41039d:	add    BYTE PTR [ebx-0x3a00ff99],al
  4103a3:	dec    edx
  4103a4:	retf   
  4103a5:	jmp    FWORD PTR [ebx-0x4900ff01]
  4103ab:	into   
  4103ac:	mov    cs,WORD PTR [ecx-0x3300da77]
  4103b2:	into   
  4103b3:	dec    eax
  4103b4:	adc    bh,bh
  4103b6:	jne    0x4103b8
  4103b8:	add    bh,bh
  4103ba:	test   BYTE PTR [ebx-0xe763360],bl
  4103c0:	inc    DWORD PTR [ebx-0x2b05b5]
  4103c6:	dec    eax
  4103c7:	add    bh,bh
  4103c9:	(bad)  
  4103ca:	cmp    cl,BYTE PTR [ebx]
  4103cc:	pop    ebp
  4103cd:	inc    DWORD PTR [eax]
  4103cf:	cs cmp edi,0xffffff8b
  4103d3:	push   0xffffff8d
  4103d5:	push   esi
  4103d7:	add    bh,bh
  4103d9:	add    BYTE PTR [edi+0x73],ah
  4103dc:	adc    edi,edi
  4103de:	add    BYTE PTR [ebp-0x7d],cl
  4103e1:	inc    DWORD PTR [esi+0x56]
  4103e4:	add    BYTE PTR cs:[edi-0x7d],ch
  4103e8:	add    BYTE PTR [eax],al
  4103ea:	sbb    eax,0xffffd96f
  4103ef:	test   al,0x0
  4103f1:	mov    DWORD PTR [ebp-0x5],esi
  4103f4:	repnz int3 
  4103f6:	pop    ebx
  4103f7:	add    BYTE PTR [eax],al
  4103f9:	(bad)  
  4103fa:	mov    ecx,0xff006360
  4103ff:	xor    bh,bh
  410401:	call   FWORD PTR [edx-0x460029cc]
  410407:	int3   
  410408:	add    bh,bh
  41040a:	xor    DWORD PTR [ebx+0x1589ff55],eax
  410410:	add    DWORD PTR [eax],0xffffff8d
  410413:	dec    eax
  410414:	leave  
  410415:	add    BYTE PTR [edx],bh
  410417:	add    BYTE PTR [eax],al
  410419:	add    dh,cl
  41041b:	mov    ah,BYTE PTR [esi]
  41041d:	add    BYTE PTR [eax],al
  41041f:	(bad)  
  410420:	inc    DWORD PTR [eax]
  410422:	mov    dh,0x9d
  410424:	jmp    0x410425
  410426:	aam    0xff
  410428:	dec    DWORD PTR [ecx-0x334db6d8]
  41042e:	add    BYTE PTR [eax+0x2c60ff00],dh
  410434:	fiadd  WORD PTR [eax]
  410436:	cli    
  410437:	(bad)  
  410438:	inc    DWORD PTR [eax]
  41043a:	jg     0x4103cf
  41043c:	das    
  41043d:	or     DWORD PTR [ecx-0x5b003386],0x14
  410444:	or     bh,bh
  410446:	dec    ebx
  410447:	dec    esp
  410449:	xor    esi,0xffffffad
  41044c:	call   0x5e00:0x83a60083
  410453:	jae    0x41042b
  410455:	cmp    DWORD PTR [edx],0x0
  410458:	(bad)  
  410459:	(bad)  
  41045a:	mov    eax,0x83cc4a42
  41045f:	(bad)  
  410460:	inc    DWORD PTR [ebx+0x3a8f5b]
  410466:	lahf   
  410467:	(bad)  
  410468:	(bad)  
  410469:	call   DWORD PTR [ebx-0xff3cf3]
  41046f:	fadd   QWORD PTR [eax]
  410471:	call   FWORD PTR [esi]
  410473:	jnp    0x41047c
  410475:	call   FWORD PTR [esi+0x0]
  410478:	add    BYTE PTR [ecx-0xaaee6d],cl
  41047e:	int3   
  41047f:	lods   al,BYTE PTR ds:[esi]
  410480:	add    BYTE PTR [ebx+0x82711],al
  410486:	call   0x5f8f:0x34ff8300
  41048d:	add    bh,bh
  41048f:	pop    ss
  410490:	(bad)  
  410491:	call   esi
  410493:	sbb    al,0x6c
  410495:	sbb    esi,0xffffffff
  410498:	cmp    edi,0x6e
  41049b:	out    dx,al
  41049c:	mov    ah,0xff
  41049e:	add    BYTE PTR [esi],ah
  4104a0:	(bad)  
  4104a1:	(bad)  
  4104a2:	mov    edx,0x90ff5a62
  4104a7:	add    bh,bh
  4104a9:	inc    DWORD PTR [eax]
  4104ab:	jae    0x4104b2
  4104ad:	inc    DWORD PTR [ebx+0x458900f3]
  4104b3:	mov    ?,eax
  4104b5:	(bad)  
  4104b6:	jle    0x4104b8
  4104b8:	(bad)  
  4104b9:	jmp    FWORD PTR [esp+edi*1]
  4104bc:	cmp    al,0xff
  4104be:	jmp    FWORD PTR [eax-0x1c5d7c34]
  4104c4:	jne    0x410449
  4104c6:	add    bh,bh
  4104c8:	mov    edi,edi
  4104ca:	ret    
  4104cb:	xchg   ebp,eax
  4104cc:	xor    eax,0xff2500cc
  4104d1:	and    DWORD PTR [ebx+0x77],0xfffffff0
  4104d5:	jmp    DWORD PTR [edx]
  4104d7:	inc    DWORD PTR [eax]
  4104d9:	inc    ecx
  4104db:	dec    esp
  4104dc:	mov    ds:0x89c9ffff,eax
  4104e1:	add    cl,cl
  4104e3:	push   0xffb7ff06
  4104e8:	inc    DWORD PTR [eax]
  4104ea:	xchg   esi,eax
  4104eb:	mov    ds:0x9b83ff6a,eax
  4104f0:	add    DWORD PTR [eax],0x34
  4104f3:	stos   DWORD PTR es:[edi],eax
  4104f4:	mov    edx,0xffff2589
  4104f9:	add    BYTE PTR [esi+0x4f],ah
  4104fc:	sar    edi,0xff
  4104ff:	jg     0x4104cd
  410501:	jmp    DWORD PTR [esi+0x1b]
  410504:	fisttp DWORD PTR [ecx-0xff004b]
  41050a:	call   0xffc43911
  41050f:	mov    BYTE PTR [eax],0x0
  410512:	jmp    0xbb41f975
  410517:	(bad)  
  410518:	(bad)  
  410519:	push   eax
  41051b:	xlat   BYTE PTR ds:[ebx]
  41051c:	ud0    eax,DWORD PTR [eax]
  41051f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410520:	int3   
  410521:	add    BYTE PTR [ecx+0x78004961],ch
  410527:	(bad)  
  410528:	dec    DWORD PTR [ecx-0x3845bc]
  41052e:	jmp    FWORD PTR [esi-0x7d]
  410531:	(bad)  
  410532:	mov    ebp,0xfd0066f4
  410537:	add    ah,cl
  410539:	add    bh,bh
  41053b:	stos   BYTE PTR es:[edi],al
  41053c:	jne    0x4104c1
  41053e:	(bad)  
  41053f:	jle    0x41050d
  410541:	add    BYTE PTR [eax+0x9],dl
  410544:	push   ecx
  410545:	int3   
  410546:	out    0xff,eax
  410548:	(bad)  
  410549:	jmp    DWORD PTR ds:0xff6ceb
  41054f:	sub    BYTE PTR [ebx+0x6ed502ff],al
  410555:	add    DWORD PTR [edi],0xffffffff
  410558:	inc    DWORD PTR [ebx-0xebc061]
  41055e:	jmp    FWORD PTR [esi+0x0]
  410561:	call   DWORD PTR [eax]
  410563:	sub    DWORD PTR [ebx],ebx
  410565:	add    DWORD PTR [ebx],0xffffffff
  410568:	add    bh,bh
  41056a:	js     0x4105b9
  41056c:	icebp  
  41056d:	(bad)  
  41056e:	(bad)  
  41056f:	inc    DWORD PTR [eax]
  410571:	(bad)  
  410572:	mov    esp,0xbefffbae
  410577:	add    BYTE PTR [eax],al
  410579:	add    BYTE PTR [edx],bl
  41057b:	push   es
  41057c:	xor    bh,bh
  41057e:	jmp    FWORD PTR [esi-0x1]
  410581:	jmp    ebx
  410583:	cmc    
  410584:	(bad)  
  410585:	jmp    esi
  410587:	add    DWORD PTR [eax],0xffffffff
  41058a:	sti    
  41058b:	adc    al,0x86
  41058d:	add    bh,bh
  41058f:	(bad)  
  410591:	add    BYTE PTR [esi-0x5a],cl
  410594:	pop    es
  410595:	sub    DWORD PTR [ecx+0x1100cc00],0x3c
  41059c:	dec    ecx
  41059d:	add    bh,bh
  41059f:	ja     0x41052a
  4105a1:	int3   
  4105a2:	in     eax,0x7b
  4105a4:	sar    bh,0xe0
  4105a7:	mov    DWORD PTR [eax],eax
  4105a9:	int3   
  4105aa:	hlt    
  4105ab:	jae    0x4105a4
  4105ad:	(bad)  
  4105ae:	call   FWORD PTR [ebx+eax*4+0x10bd21ff]
  4105b5:	jmp    FWORD PTR ds:0x6900ffcc
  4105bb:	out    dx,al
  4105bc:	mov    ah,0x83
  4105be:	mov    DWORD PTR [edi],edx
  4105c0:	add    bh,bh
  4105c2:	cmp    bh,BYTE PTR ds:0xc6ffa8
  4105c8:	inc    DWORD PTR [eax]
  4105ca:	scas   al,BYTE PTR es:[edi]
  4105cb:	xor    esp,ebx
  4105cd:	inc    DWORD PTR [eax]
  4105cf:	fld    DWORD PTR [eax]
  4105d1:	push   DWORD PTR [edx]
  4105d3:	pusha  
  4105d4:	xchg   edi,eax
  4105d5:	dec    DWORD PTR [eax-0x1]
  4105d8:	add    bh,bh
  4105da:	sub    cl,dh
  4105dc:	cmp    al,0x0
  4105de:	or     esi,0xffffffff
  4105e1:	(bad)  
  4105e2:	cmp    cl,dl
  4105e4:	add    edi,edi
  4105e6:	in     al,0x0
  4105e8:	inc    DWORD PTR [ebx-0xf5365e]
  4105ee:	add    BYTE PTR [ebx+eax*4],ah
  4105f1:	int3   
  4105f2:	pusha  
  4105f3:	mov    WORD PTR [esi-0x7d],fs
  4105f6:	jo     0x4105f8
  4105f8:	add    bh,bh
  4105fa:	mov    al,ds:0x83005bc6
  4105ff:	mov    ecx,0x16700ff
  410604:	add    eax,0x89836b83
  410609:	add    BYTE PTR [ebp+0x7a],cl
  41060c:	loopne 0x41060d
  41060e:	inc    DWORD PTR [ebx-0x1]
  410611:	jmp    ebx
  410613:	xor    ecx,DWORD PTR [edi-0x77]
  410616:	cmp    bh,0x89
  410619:	int3   
  41061a:	enter  0x40c1,0x0
  41061e:	cmp    DWORD PTR [edx-0x7fe40001],0xffffffb1
  410625:	add    BYTE PTR [edx-0x7d],ch
  410628:	inc    DWORD PTR [eax]
  41062a:	dec    ebp
  41062b:	xchg   esi,eax
  41062c:	inc    ebp
  41062d:	add    BYTE PTR [ecx-0x3f00ff6d],cl
  410633:	and    ecx,DWORD PTR [edx-0x765101]
  410639:	add    BYTE PTR [esi-0xff0949],ch
  41063f:	jns    0x4105c4
  410641:	inc    DWORD PTR [esi]
  410643:	adc    al,0x66
  410645:	inc    eax
  410647:	(bad)  
  410648:	inc    DWORD PTR [eax]
  41064a:	push   cs
  41064b:	ja     0x4105ec
  41064d:	inc    DWORD PTR [eax]
  41064f:	cmc    
  410650:	add    DWORD PTR [eax],0xfffffff2
  410653:	sub    DWORD PTR [edx+0x0],edi
  410656:	repnz cmp edi,0xffffff83
  41065a:	rol    BYTE PTR [edx+0x1],0xff
  41065e:	push   ebx
  410660:	add    BYTE PTR [eax],al
  410662:	push   edx
  410663:	jg     0x4105f3
  410665:	int3   
  410666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410667:	int3   
  410668:	(bad)  
  410669:	call   DWORD PTR [ecx-0x7a]
  41066c:	retf   0xff00
  41066f:	or     al,0x0
  410671:	add    BYTE PTR [esi-0x40],al
  410674:	or     al,0x89
  410676:	(bad)  
  410677:	(bad)  
  410678:	(bad)  
  410679:	call   DWORD PTR ds:0xcc001881
  41067f:	popa   
  410680:	(bad)  
  410681:	push   DWORD PTR [edi-0x4f]
  410684:	test   BYTE PTR [eax],0x48
  410687:	add    bh,bh
  410689:	inc    DWORD PTR [esi]
  41068b:	adc    edi,eax
  41068d:	add    BYTE PTR [eax],al
  41068f:	sub    BYTE PTR [eax],al
  410691:	add    BYTE PTR [edi-0x63],al
  410694:	call   0xffc4ad98
  410699:	mov    ebp,eax
  41069b:	stos   DWORD PTR es:[edi],eax
  41069c:	push   ebp
  41069d:	add    ah,cl
  41069f:	inc    DWORD PTR ds:[eax]
  4106a2:	cmp    ecx,eax
  4106a4:	dec    esi
  4106a5:	push   esi
  4106a7:	(bad)  
  4106a8:	dec    esp
  4106aa:	add    esi,ebx
  4106ac:	imul   eax,DWORD PTR [eax],0xffffffff
  4106af:	(bad)  
  4106b0:	(bad)  
  4106b1:	inc    DWORD PTR ds:0x71ff093a
  4106b7:	add    bh,bh
  4106b9:	add    BYTE PTR [eax],cl
  4106bb:	ror    BYTE PTR es:[ecx-0x1a00],cl
  4106c2:	js     0x4106de
  4106c4:	push   edx
  4106c5:	adc    DWORD PTR [ecx+0x0],0xffffffff
  4106c9:	add    BYTE PTR [edx],bh
  4106cb:	inc    esp
  4106cc:	pop    eax
  4106cd:	inc    DWORD PTR [eax]
  4106cf:	popa   
  4106d0:	add    bh,bh
  4106d2:	(bad)  [ecx+edi*4]
  4106d5:	add    BYTE PTR [edx],dl
  4106d7:	add    ah,cl
  4106d9:	push   ecx
  4106db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106dc:	xchg   BYTE PTR [ebx-0x7c004077],al
  4106e2:	mov    BYTE PTR [edi-0x3f7c9c],bh
  4106e8:	add    BYTE PTR [eax],al
  4106ea:	iret   
  4106eb:	aad    0x9e
  4106ed:	(bad)  
  4106ee:	call   FWORD PTR [edx]
  4106f0:	add    DWORD PTR [eax],0xffffff9e
  4106f3:	dec    ebx
  4106f4:	pop    eax
  4106f5:	add    bl,ah
  4106f7:	or     esp,0x0
  4106fa:	jno    0x4106bb
  4106fc:	test   BYTE PTR [ebx-0xffa401],al
  410702:	xlat   BYTE PTR ds:[ebx]
  410703:	adc    bl,BYTE PTR [ecx]
  410705:	add    BYTE PTR [eax+0x56ffffff],bl
  41070b:	fcomp  DWORD PTR ds:0xff4aff00
  410711:	(bad)  
  410712:	cmp    eax,0x7d8366bc
  410717:	add    BYTE PTR [ebx+0x39b66100],al
  41071d:	or     esp,0xffffffad
  410720:	inc    DWORD PTR [eax]
  410722:	sub    dh,BYTE PTR [ebx+0x36]
  410725:	int3   
  410726:	ret    0xff
  410729:	xor    DWORD PTR [esi-0xff9735],0x48
  410730:	(bad)  
  410731:	call   FWORD PTR [ecx]
  410733:	inc    ecx
  410734:	(bad)  
  410736:	mov    WORD PTR [ebx+0x4d7f8989],es
  41073c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41073d:	cmp    edi,0x54
  410740:	add    bh,bh
  410742:	pop    ebp
  410743:	push   ecx
  410744:	es xor edi,0xffffffff
  410748:	inc    DWORD PTR [eax]
  41074a:	mov    eax,ds:0x89007de8
  41074f:	xchg   BYTE PTR [ecx-0x1587f234],cl
  410755:	mov    ebp,ebp
  410757:	add    BYTE PTR [eax],al
  410759:	and    DWORD PTR [esi-0x33ffd9f3],0xffffffc7
  410760:	add    DWORD PTR [eax],0x26
  410763:	or     ecx,DWORD PTR [edx-0xff7300]
  410769:	(bad)  
  41076a:	cmp    DWORD PTR [eax+0x35],esp
  41076d:	dec    esp
  41076f:	inc    ebp
  410770:	(bad)  
  410771:	dec    ebx
  410773:	enter  0xff70,0x45
  410777:	add    bh,bh
  410779:	dec    DWORD PTR [edi+esi*1-0x4bffff69]
  410780:	add    bh,bh
  410782:	sub    cl,dh
  410784:	fild   WORD PTR [ebx-0x33ff336d]
  41078a:	popa   
  41078b:	ret    
  41078c:	cli    
  41078d:	mov    edi,edi
  41078f:	rol    BYTE PTR [eax],cl
  410791:	add    BYTE PTR [ecx+0x79],bl
  410794:	in     al,0xff
  410796:	lods   eax,DWORD PTR ds:[esi]
  410797:	(bad)  
  410798:	(bad)  
  410799:	push   edx
  41079b:	sbb    cl,0xff
  41079e:	sub    edi,0xffffff83
  4107a1:	add    BYTE PTR [ebx+0x52ffe6df],cl
  4107a7:	add    bh,bh
  4107a9:	adc    DWORD PTR [ebx],0xffffffe1
  4107ac:	jo     0x4107ad
  4107ae:	add    BYTE PTR [ebx+0x0],ch
  4107b1:	(bad)  
  4107b2:	out    dx,al
  4107b3:	adc    al,0x7
  4107b5:	call   DWORD PTR [eax]
  4107b7:	add    ah,cl
  4107b9:	cmp    DWORD PTR [edx*1-0x71ffffdb],0xffffffff
  4107c1:	add    BYTE PTR [edi],bh
  4107c3:	out    dx,al
  4107c4:	pop    eax
  4107c5:	add    BYTE PTR [eax-0x3aff0077],dl
  4107cb:	loopne 0x4107a5
  4107cd:	add    bh,bh
  4107cf:	cmp    BYTE PTR [ebx-0x3781f200],al
  4107d5:	xor    DWORD PTR [ebp-0x34],0x0
  4107d9:	call   DWORD PTR [esi]
  4107db:	dec    esp
  4107dc:	mov    BYTE PTR [eax],al
  4107de:	add    BYTE PTR [edi+0x0],ch
  4107e1:	jmp    FWORD PTR [esi]
  4107e3:	fdiv   QWORD PTR [ecx-0x34]
  4107e6:	dec    edx
  4107e7:	add    BYTE PTR [eax],al
  4107e9:	sbb    edx,0x19
  4107ec:	fwait
  4107ed:	(bad)  
  4107ee:	inc    DWORD PTR [ebp-0x1]
  4107f1:	call   DWORD PTR [ebp+0x36fff29e]
  4107f7:	add    DWORD PTR [eax],0x0
  4107fa:	xor    al,0xd7
  4107fc:	inc    ebp
  4107fd:	(bad)  
  4107fe:	call   DWORD PTR [esi-0x53787c7d]
  410804:	mov    eax,ds:0xff89bbff
  410809:	add    BYTE PTR [edx+edi*2+0x10],ch
  41080d:	inc    DWORD PTR [ebx+0x20008353]
  410813:	mov    DWORD PTR [ebx-0x77],esp
  410816:	sahf   
  410817:	int3   
  410818:	(bad)  
  410819:	inc    eax
  41081b:	out    0x4d,al
  41081d:	add    bh,bh
  41081f:	icebp  
  410820:	inc    DWORD PTR [ebx-0x5a6aee]
  410826:	jmp    0x7ce0:0x6f000083
  41082d:	add    BYTE PTR [ebx+0xe890025],al
  410833:	outs   dx,BYTE PTR ds:[esi]
  410834:	(bad)  
  410835:	jmp    DWORD PTR [eax+0x23ffff00]
  41083b:	enter  0xff30,0xcc
  41083f:	aad    0x0
  410841:	sub    ebx,0xffffff98
  410844:	mov    ch,0x0
  410846:	ror    esp,cl
  410848:	add    DWORD PTR [ebx-0xd283b2],0x0
  41084f:	and    eax,0x55dd89ff
  410854:	sub    bh,bh
  410856:	add    BYTE PTR [eax],al
  410858:	int3   
  410859:	add    BYTE PTR [eax+0x3a],dh
  41085c:	lock inc DWORD PTR [eax]
  41085f:	push   0xffffffff
  410861:	push   ebp
  410863:	aas    
  410864:	cmp    eax,0xff7283
  410869:	cmp    ebp,0x12
  41086c:	xchg   bh,bh
  41086e:	dec    DWORD PTR [ebp-0x34]
  410871:	cmp    DWORD PTR [ebx],0x73
  410874:	call   0xb489:0xff89ceff
  41087b:	stos   BYTE PTR es:[edi],al
  41087c:	lds    eax,FWORD PTR [ebx-0xffe201]
  410882:	pushf  
  410883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410884:	mov    WORD PTR [eax],es
  410886:	out    dx,eax
  410887:	cmp    edi,0xffffffff
  41088a:	pop    esi
  41088b:	jb     0x410902
  41088d:	add    DWORD PTR [eax],0xffffffde
  410890:	(bad)  
  410891:	dec    DWORD PTR [eax]
  410893:	sar    BYTE PTR [ebp-0x7cffb201],cl
  410899:	int3   
  41089a:	and    eax,0xff1d7a
  41089f:	adc    edi,edi
  4108a1:	inc    DWORD PTR [ecx+0x2]
  4108a4:	test   eax,0x83009700
  4108a9:	call   FWORD PTR [ecx]
  4108ab:	xchg   ecx,eax
  4108ac:	fs or  esp,0x2
  4108b0:	(bad)  
  4108b1:	call   FWORD PTR [ebp-0x12004f31]
  4108b7:	add    bh,bh
  4108b9:	add    cl,bl
  4108bb:	dec    ebp
  4108bc:	mov    bh,bh
  4108be:	add    bh,bh
  4108c0:	int3   
  4108c1:	inc    edi
  4108c3:	sbb    DWORD PTR [ebx],edi
  4108c5:	push   DWORD PTR [eax+eax*1-0x1]
  4108c9:	add    BYTE PTR [ebx+0x59eb],dl
  4108cf:	test   edi,edi
  4108d1:	inc    DWORD PTR [esi+0x1dffba96]
  4108d7:	cmp    edi,0xffffffff
  4108da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108db:	sbb    dl,BYTE PTR [ebp-0xab0000]
  4108e1:	call   DWORD PTR [edx-0x77ff19b7]
  4108e7:	(bad)  
  4108e8:	(bad)  
  4108e9:	dec    DWORD PTR [ecx+0x3a]
  4108ec:	jmp    0x89f609f0
  4108f1:	cmp    DWORD PTR [esi+0x4389539b],0xffffffff
  4108f8:	dec    DWORD PTR [ecx+0xdb5706]
  4108fe:	int3   
  4108ff:	xchg   edx,eax
  410900:	inc    DWORD PTR [eax]
  410902:	sahf   
  410903:	fidiv  WORD PTR [ebx+0x83fcff]
  410909:	mov    DWORD PTR [ebx+0x3d],eax
  41090c:	je     0x4108da
  41090e:	jmp    DWORD PTR [eax-0x1]
  410911:	add    BYTE PTR ds:0x71cc9c5c,cl
  410917:	int3   
  410918:	cmp    edi,0xffffffae
  41091b:	mov    WORD PTR [edx-0x33840100],?
  410921:	push   edi
  410923:	push   ecx
  410924:	jge    0x410926
  410926:	dec    ebx
  410927:	inc    DWORD PTR [ebx-0x30026700]
  41092d:	add    BYTE PTR [ecx-0x78ff00e8],cl
  410933:	sbb    ebx,ecx
  410935:	jmp    DWORD PTR [ecx]
  410937:	add    BYTE PTR [eax],al
  410939:	int3   
  41093a:	sub    BYTE PTR [edi+0x4c],bl
  41093d:	add    ah,cl
  41093f:	push   0xffffffff
  410941:	add    BYTE PTR [ebx+0x34832841],bl
  410947:	mov    esp,ecx
  410949:	add    BYTE PTR [ebp-0x10],bl
  41094c:	jb     0x4108d1
  41094e:	mov    eax,edx
  410950:	dec    esp
  410952:	shl    DWORD PTR [ecx+0xff6d],cl
  410958:	inc    DWORD PTR [ebx-0x5c8129]
  41095e:	add    BYTE PTR [esi-0x1b26ff01],dh
  410964:	fild   DWORD PTR [eax]
  410966:	sbb    BYTE PTR [ebx+0x6e1b00ff],al
  41096c:	fild   WORD PTR [eax]
  41096e:	add    DWORD PTR [ebp-0x7d],0xffffffff
  410972:	jl     0x41093e
  410974:	scas   al,BYTE PTR es:[edi]
  410975:	call   FWORD PTR [eax+0x0]
  410978:	(bad)  
  410979:	dec    eax
  41097b:	test   al,0xe7
  41097d:	add    BYTE PTR [eax],al
  41097f:	retf   0xff00
  410982:	bound  edx,QWORD PTR [esi]
  410984:	jns    0x410985
  410986:	adc    esp,ecx
  410988:	int3   
  410989:	(bad)  
  41098a:	cli    
  41098b:	imul   ebx,esi,0xffffff83
  41098e:	add    bh,dh
  410990:	int3   
  410991:	add    al,bh
  410993:	popf   
  410994:	xchg   edx,eax
  410995:	add    dh,bl
  410997:	add    BYTE PTR [eax],al
  410999:	call   FWORD PTR [edi+ecx*4-0x797cff2e]
  4109a0:	add    bh,bh
  4109a2:	sub    cl,BYTE PTR [edi]
  4109a4:	(bad)  
  4109a6:	int3   
  4109a7:	add    BYTE PTR [ebx+0x6a63a3ff],al
  4109ad:	add    DWORD PTR [eax],0x30
  4109b0:	dec    esp
  4109b2:	div    bl
  4109b4:	xchg   ebx,eax
  4109b5:	add    BYTE PTR [eax+0x0],dl
  4109b8:	add    BYTE PTR [eax],al
  4109ba:	jmp    0x41e173
  4109bf:	xchg   ebx,eax
  4109c0:	inc    DWORD PTR [eax]
  4109c2:	lods   al,BYTE PTR ds:[esi]
  4109c3:	or     eax,0x83798992
  4109c8:	(bad)  
  4109c9:	(bad)  
  4109ca:	sti    
  4109cb:	imul   eax,DWORD PTR fs:[eax],0x89cc73ff
  4109d2:	pop    edx
  4109d3:	mov    bl,BYTE PTR [ebp-0x1]
  4109d6:	fadd   DWORD PTR [ebx+0x78f7ccff]
  4109dc:	sub    eax,DWORD PTR [eax]
  4109de:	call   DWORD PTR [ebp-0x1]
  4109e1:	inc    DWORD PTR [ecx-0x67ffb9d4]
  4109e7:	mov    edi,edi
  4109e9:	add    ah,dh
  4109eb:	and    eax,0xd2ff00e1
  4109f0:	(bad)  
  4109f1:	call   FWORD PTR [ecx-0x52]
  4109f4:	sbb    eax,DWORD PTR [eax]
  4109f6:	aad    0xcc
  4109f8:	inc    DWORD PTR [eax]
  4109fa:	data16 mov ah,0x31
  4109fd:	add    ah,cl
  4109ff:	jbe    0x410a00
  410a01:	xor    eax,0xffffffff
  410a04:	sub    al,0xcc
  410a06:	dec    ecx
  410a07:	add    bh,bh
  410a09:	add    BYTE PTR [ecx-0x7c7cda9a],bl
  410a0f:	pop    ebx
  410a10:	(bad)  
  410a11:	(bad)  
  410a12:	fst    DWORD PTR [esi+0x15cc33]
  410a18:	add    bh,bh
  410a1a:	xlat   BYTE PTR ds:[ebx]
  410a1b:	cli    
  410a1c:	and    eax,DWORD PTR [eax]
  410a1e:	mov    ebx,ecx
  410a20:	or     esp,0x48
  410a23:	jo     0x410a6f
  410a25:	add    BYTE PTR [ebp-0x7d],dh
  410a28:	dec    esp
  410a2a:	(bad)  
  410a2b:	das    
  410a2c:	sahf   
  410a2d:	(bad)  
  410a2e:	jmp    DWORD PTR [edx-0x1d990001]
  410a34:	mov    ecx,0xffffaf89
  410a39:	dec    DWORD PTR [esi+0x24]
  410a3c:	fadd   DWORD PTR [eax]
  410a3e:	add    BYTE PTR [edx+0x0],ah
  410a41:	dec    DWORD PTR [edx+0x19]
  410a44:	retf   0xb400
  410a47:	add    BYTE PTR [eax],al
  410a49:	add    BYTE PTR [eax+0xffcbee],bh
  410a4f:	jmp    0xffdb:0xa104ffff
  410a56:	fwait
  410a57:	add    BYTE PTR [ebx+0x1eca47ff],al
  410a5d:	add    DWORD PTR [eax],0xffffffb5
  410a60:	inc    DWORD PTR [eax]
  410a62:	es mov cs,edi
  410a65:	mov    esi,ebp
  410a67:	dec    DWORD PTR [ecx-0x2e629500]
  410a6d:	mov    edi,edi
  410a6f:	dec    eax
  410a70:	add    bh,bh
  410a72:	cmp    ch,0xab
  410a75:	inc    DWORD PTR [ebx-0x73000100]
  410a7b:	retf   0xff6c
  410a7e:	jmp    edi
  410a80:	(bad)  
  410a81:	(bad)  
  410a82:	jge    0x410a5a
  410a84:	clc    
  410a85:	jmp    esi
  410a87:	add    DWORD PTR [eax],0xffffffff
  410a8a:	out    dx,eax
  410a8b:	add    DWORD PTR [esi],eax
  410a8d:	add    BYTE PTR [ebx-0x4500002b],al
  410a93:	or     ebp,edi
  410a95:	jmp    DWORD PTR [edi-0x1]
  410a98:	add    BYTE PTR [eax],al
  410a9a:	jns    0x410aef
  410a9c:	fdiv   st(7),st
  410a9e:	add    BYTE PTR [ebp+0x0],cl
  410aa1:	(bad)  
  410aa2:	jnp    0x410a33
  410aa4:	mov    esi,0xffcc23ff
  410aa9:	add    BYTE PTR [ecx+0x5b],al
  410aac:	mov    dh,0xff
  410aae:	dec    DWORD PTR [edx]
  410ab0:	add    bh,bh
  410ab2:	fadd   QWORD PTR [esi]
  410ab4:	retf   0xb183
  410ab7:	add    bh,bh
  410ab9:	(bad)  
  410aba:	(bad)  
  410abb:	in     al,dx
  410abc:	ret    0x83
  410abf:	into   
  410ac0:	inc    DWORD PTR [eax]
  410ac2:	scas   al,BYTE PTR es:[edi]
  410ac3:	pop    ds
  410ac4:	xchg   ecx,eax
  410ac5:	jmp    FWORD PTR [eax+0x0]
  410ac8:	add    bh,bh
  410aca:	push   edx
  410acb:	mov    ch,BYTE PTR [edx+0xb00ff]
  410ad1:	dec    DWORD PTR [ebp+0x7bffb704]
  410ad7:	add    BYTE PTR [ebx-0x405cf501],al
  410add:	inc    DWORD PTR [ebx-0x727c0037]
  410ae3:	repnz xchg esi,eax
  410ae5:	mov    DWORD PTR [esi+0x5fffff00],eax
  410aeb:	and    al,BYTE PTR [bx+si]
  410aee:	xor    DWORD PTR [edx],0xffffffff
  410af1:	add    dl,dh
  410af3:	mov    bl,0x28
  410af5:	mov    DWORD PTR [ecx-0x3f770000],ecx
  410afb:	xchg   edx,eax
  410afc:	mov    al,BYTE PTR [eax]
  410afe:	push   DWORD PTR [edi+0x1911ffff]
  410b04:	adc    al,BYTE PTR [eax]
  410b06:	fadd   QWORD PTR [eax]
  410b08:	int3   
  410b09:	mov    DWORD PTR [eax-0x54],esp
  410b0c:	jno    0x410ada
  410b0e:	mov    DWORD PTR [eax+eax*1],ebx
  410b11:	add    BYTE PTR [edx],dh
  410b13:	ret    
  410b14:	imul   eax,DWORD PTR [eax],0x35
  410b17:	(bad)  
  410b18:	dec    esp
  410b1a:	sbb    edx,edi
  410b1c:	jmp    0x3900:0xfff50000
  410b23:	push   ds
  410b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b25:	add    BYTE PTR [edi-0x5fffff01],cl
  410b2b:	or     BYTE PTR [ebp+0x0],ah
  410b2e:	sbb    edx,0x0
  410b31:	call   DWORD PTR [ebx+0x28ff4570]
  410b37:	add    BYTE PTR [eax],al
  410b39:	inc    DWORD PTR [esi]
  410b3b:	sbb    BYTE PTR [ebx+0x0],bh
  410b3e:	push   DWORD PTR [edx]
  410b40:	mov    DWORD PTR [ecx-0xd173f9],ecx
  410b46:	dec    esp
  410b47:	add    BYTE PTR [ecx-0x7b916801],cl
  410b4d:	(bad)  
  410b4e:	(bad)  
  410b4f:	mov    esi,0x6c06ffff
  410b54:	push   ebp
  410b55:	dec    eax
  410b57:	add    ah,cl
  410b59:	add    BYTE PTR [edi],bl
  410b5b:	pusha  
  410b5c:	(bad)  
  410b5d:	(bad)  
  410b5e:	push   DWORD PTR [esi]
  410b60:	add    BYTE PTR [ebx-0x7c53f5f6],al
  410b66:	int    0x0
  410b68:	(bad)  
  410b69:	(bad)  
  410b6a:	out    dx,al
  410b6b:	mov    ecx,0xa48300d2
  410b70:	add    BYTE PTR [eax],al
  410b72:	mov    edx,esp
  410b74:	adc    al,BYTE PTR [eax]
  410b76:	mov    eax,0x2983ff00
  410b7b:	pop    ecx
  410b7c:	xor    ah,cl
  410b7e:	mov    DWORD PTR [edi-0x30e8ff01],eax
  410b84:	mov    ebp,0xfffff800
  410b89:	cmp    DWORD PTR [edx-0x7c],0xffffffbb
  410b8d:	add    DWORD PTR [eax],0x25
  410b90:	add    bh,bh
  410b92:	mov    ebp,0x9fff1688
  410b97:	inc    DWORD PTR [eax]
  410b99:	inc    DWORD PTR [esi-0x34]
  410b9c:	mov    bl,0xff
  410b9e:	jmp    FWORD PTR [edi+edi*8-0x541bc500]
  410ba5:	dec    DWORD PTR [esi+0x2b89ff00]
  410bab:	jge    0x410c23
  410bad:	dec    esp
  410baf:	out    0xff,eax
  410bb1:	add    BYTE PTR [eax+0x4200f3df],bl
  410bb7:	(bad)  
  410bb8:	dec    DWORD PTR [ecx-0xe4aabe]
  410bbe:	sub    edi,0xffffffff
  410bc1:	add    BYTE PTR [ecx],bh
  410bc3:	ret    0x18
  410bc6:	in     eax,0x0
  410bc8:	add    BYTE PTR [eax],al
  410bca:	mov    ah,0xd5
  410bcc:	mov    ebp,0x1d83cc
  410bd1:	jmp    DWORD PTR [ebx-0x390024ea]
  410bd7:	mov    DWORD PTR [eax],eax
  410bd9:	jmp    DWORD PTR [edi+edx*8]
  410bdc:	in     al,0xff
  410bde:	jmp    DWORD PTR [edi]
  410be0:	int3   
  410be1:	sbb    DWORD PTR [ecx-0x70],0xffffff96
  410be5:	int3   
  410be6:	clc    
  410be7:	mov    edi,edi
  410be9:	int3   
  410bea:	push   edi
  410beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bec:	sar    edi,cl
  410bee:	int3   
  410bef:	cdq    
  410bf0:	inc    DWORD PTR [ebx-0x3aed60]
  410bf6:	mov    ebx,0xc6008989
  410bfb:	and    al,0x39
  410bfd:	add    BYTE PTR [ecx-0x1eff0024],cl
  410c03:	jae    0x410c1d
  410c05:	add    BYTE PTR [esi],ch
  410c07:	add    ah,cl
  410c09:	(bad)  
  410c0a:	call   0x83c46d51
  410c0f:	inc    ebx
  410c10:	add    BYTE PTR [ecx-0x8aeb43],cl
  410c16:	addr16 (bad) 
  410c18:	(bad)  
  410c19:	dec    ecx
  410c1b:	mov    bl,0xec
  410c1d:	int3   
  410c1e:	call   FWORD PTR [edi+edi*8-0x1]
  410c22:	and    eax,0x3b00ce33
  410c27:	dec    DWORD PTR [ecx+0x25c00a83]
  410c2d:	mov    DWORD PTR [eax],eax
  410c2f:	mov    al,0x83
  410c31:	call   DWORD PTR [ebp+0x46]
  410c34:	sub    eax,0xccff9000
  410c39:	int3   
  410c3a:	outs   dx,DWORD PTR ds:[esi]
  410c3b:	add    esp,ebx
  410c3d:	inc    DWORD PTR [eax]
  410c3f:	and    DWORD PTR [ebx-0x178447d],eax
  410c45:	add    BYTE PTR [ebp+0xfff00ff],cl
  410c4b:	idiv   DWORD PTR [ebx-0x1]
  410c4e:	add    BYTE PTR [eax],dl
  410c50:	(bad)  
  410c51:	dec    DWORD PTR [esi-0x4b76acfd]
  410c57:	inc    DWORD PTR [ebx+0x783fa4ff]
  410c5d:	add    BYTE PTR [eax],al
  410c5f:	imul   ecx,esp,0xc5fc0a00
  410c65:	jmp    FWORD PTR [ecx-0x1d000034]
  410c6b:	xchg   esi,eax
  410c6c:	mov    ecx,0xff040000
  410c71:	sub    DWORD PTR [ebx],0x2e
  410c74:	and    edi,edi
  410c76:	and    eax,0xbffff89
  410c7b:	xchg   edi,eax
  410c7c:	test   DWORD PTR [ebx-0x7cff5f01],eax
  410c82:	xor    eax,0x2d83a941
  410c87:	add    bh,bh
  410c89:	add    BYTE PTR [edx+0x589b],al
  410c8f:	inc    ebx
  410c90:	(bad)  
  410c91:	call   ebx
  410c93:	(bad)  [ebp+0x0]
  410c96:	out    dx,eax
  410c97:	inc    DWORD PTR [eax]
  410c99:	adc    DWORD PTR [esi-0x7c00439c],0x75
  410ca0:	add    BYTE PTR [ebx-0xb92c38],al
  410ca6:	dec    esi
  410ca7:	(bad)  
  410ca8:	(bad)  
  410ca9:	push   DWORD PTR [ebp+0x10]
  410cac:	add    eax,0x9aff83
  410cb1:	add    BYTE PTR [ecx-0x3b],al
  410cb4:	xchg   ecx,eax
  410cb5:	dec    DWORD PTR [eax]
  410cb7:	add    bh,bh
  410cb9:	mov    DWORD PTR [edx],esp
  410cbb:	mov    eax,ds:0x88ff0053
  410cc0:	cmp    edi,0x3e
  410cc3:	fs into 
  410cc5:	call   DWORD PTR [ebx-0x7d]
  410cc8:	inc    DWORD PTR [eax]
  410cca:	out    dx,al
  410ccb:	mov    ch,0x5d
  410ccd:	inc    DWORD PTR [ebx+0x2600835b]
  410cd3:	lock aam 0xff
  410cd6:	cmp    ah,cl
  410cd8:	add    DWORD PTR [ebx-0xa7ef7d],0x0
  410cdf:	pop    edi
  410ce0:	add    bh,bh
  410ce2:	mov    edx,0xdacceb55
  410ce7:	int3   
  410ce8:	(bad)  
  410ce9:	jmp    FWORD PTR [ecx+0x12]
  410cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ced:	dec    DWORD PTR [ecx+0x3700ff83]
  410cf3:	xor    cl,BYTE PTR [esi+0xff2b83]
  410cf9:	call   edx
  410cfb:	sub    BYTE PTR [eax-0x76e6ff01],al
  410d01:	add    BYTE PTR [eax+0x63ffaa9e],al
  410d07:	inc    DWORD PTR [eax]
  410d09:	add    cl,bl
  410d0b:	popf   
  410d0c:	xchg   esp,eax
  410d0d:	(bad)  
  410d0e:	call   FWORD PTR [eax+eax*1-0x2a88a500]
  410d15:	call   FWORD PTR [ebp-0x1]
  410d18:	mov    DWORD PTR [ebx+0x5c096e],eax
  410d1e:	(bad)  
  410d1f:	fld    QWORD PTR [eax]
  410d21:	inc    edx
  410d23:	out    0x46,eax
  410d25:	add    BYTE PTR [eax],bh
  410d27:	int3   
  410d28:	add    BYTE PTR [ebx+0x5b50f4],al
  410d2e:	xor    DWORD PTR [edi+edi*8-0x259e2100],0xffffffff
  410d36:	push   0xcf00ff00
  410d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d3c:	(bad)  
  410d3d:	(bad)  
  410d3e:	jmp    ebp
  410d40:	add    BYTE PTR [eax],al
  410d42:	jmp    0x4e40cf7c
  410d47:	add    DWORD PTR [ebx+0xdce51ff],0xffffffff
  410d4e:	mov    DWORD PTR [esi-0x1],ebp
  410d51:	jmp    ecx
  410d53:	xchg   ecx,eax
  410d54:	mov    al,ds:0xffceff
  410d59:	inc    ebp
  410d5b:	popf   
  410d5c:	mov    dh,0xff
  410d5e:	mov    DWORD PTR [ebp-0x16b60001],edx
  410d64:	cwde   
  410d65:	add    BYTE PTR [edi+0x44cc0083],dl
  410d6b:	mov    edi,0xf5ffffb2
  410d70:	add    bh,bh
  410d72:	or     al,0xe3
  410d74:	pushf  
  410d75:	jmp    DWORD PTR [ebp-0x31ff7c01]
  410d7b:	iret   
  410d7c:	imul   eax,DWORD PTR [eax],0x83ff27ff
  410d82:	jbe    0x410da4
  410d84:	mov    WORD PTR [eax],es
  410d86:	iret   
  410d87:	(bad)  
  410d88:	inc    DWORD PTR [eax]
  410d8a:	cmp    BYTE PTR [ecx],ch
  410d8c:	into   
  410d8d:	add    DWORD PTR [eax],0xffffffb1
  410d90:	inc    DWORD PTR [ebx+0x27e587]
  410d96:	ud0    edi,edi
  410d99:	call   FWORD PTR [eax]
  410d9b:	mov    ebx,0xfdff8989
  410da0:	add    bh,bh
  410da2:	out    dx,eax
  410da3:	xchg   ebx,eax
  410da4:	cmc    
  410da5:	mov    DWORD PTR [eax+0x0],edi
  410da8:	(bad)  
  410da9:	(bad)  
  410daa:	mov    ebp,0x509f
  410daf:	out    dx,eax
  410db0:	or     esp,0xffffffed
  410db3:	and    eax,0x83b589fa
  410db8:	cmp    edi,0xf
  410dbb:	mov    ecx,0xc000ff7e
  410dc0:	(bad)  
  410dc1:	push   DWORD PTR [ebp+0x3e0069f4]
  410dc7:	(bad)  
  410dc8:	dec    esp
  410dca:	and    DWORD PTR [edx-0x4aff7cc3],ebp
  410dd0:	add    BYTE PTR [eax],al
  410dd2:	xor    BYTE PTR [esi+0xa5ff68],0xff
  410dd9:	(bad)  
  410dda:	cmp    DWORD PTR ds:0xd400ff25,ebp
  410de0:	dec    DWORD PTR [ecx-0x7c970abe]
  410de6:	pusha  
  410de7:	(bad)  
  410de8:	(bad)  
  410de9:	call   DWORD PTR [ebx-0x7c18f9]
  410def:	inc    ebp
  410df0:	(bad)  
  410df1:	dec    ebp
  410df3:	push   cs
  410df4:	(bad)  
  410df5:	jmp    DWORD PTR [edi+edi*8-0x1]
  410df9:	jmp    DWORD PTR [esi+0x4f]
  410dfc:	int3   
  410dfd:	add    DWORD PTR [eax],0xffffffee
  410e00:	(bad)  
  410e01:	inc    DWORD PTR [edi]
  410e03:	add    DWORD PTR [ebx],ebx
  410e05:	call   FWORD PTR [ebp+0x0]
  410e08:	(bad)  
  410e09:	inc    DWORD PTR [esi+ebp*1-0x25]
  410e0d:	(bad)  
  410e0e:	jmp    FWORD PTR [ecx]
  410e10:	int3   
  410e11:	add    BYTE PTR ds:0xbccc9760,bh
  410e17:	dec    esp
  410e19:	add    BYTE PTR [ecx+ebp*2+0x1a00ffd7],ah
  410e20:	add    bh,bh
  410e22:	cmp    eax,0x3a0045f9
  410e27:	int3   
  410e28:	(bad)  
  410e29:	inc    esi
  410e2b:	inc    esi
  410e2c:	fld    DWORD PTR [eax]
  410e2e:	jmp    DWORD PTR [ebp-0x34]
  410e31:	(bad)  
  410e32:	mov    ecx,0xdcfff332
  410e37:	inc    DWORD PTR [eax]
  410e39:	(bad)  
  410e3a:	aas    
  410e3b:	adc    eax,0x6dff0002
  410e40:	inc    DWORD PTR [eax]
  410e42:	cs in  al,0x8b
  410e45:	add    BYTE PTR ds:0xfff00ff,ch
  410e4b:	fisub  WORD PTR [ecx-0x336a7601]
  410e51:	add    BYTE PTR [edi+0x33cca3a2],dl
  410e57:	(bad)  
  410e58:	dec    esp
  410e5a:	pusha  
  410e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e5c:	inc    edx
  410e5d:	inc    DWORD PTR [eax]
  410e5f:	int    0x83
  410e61:	int3   
  410e62:	mov    esi,?
  410e64:	aaa    
  410e65:	call   DWORD PTR [ecx+0x0]
  410e68:	inc    DWORD PTR [ebx-0x7656e751]
  410e6e:	call   FWORD PTR [edx+0x0]
  410e71:	int3   
  410e72:	ins    BYTE PTR es:[edi],dx
  410e73:	cli    
  410e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e75:	add    BYTE PTR ds:0x65ccff83,al
  410e7b:	inc    esi
  410e7c:	stos   DWORD PTR es:[edi],eax
  410e7d:	mov    edi,edi
  410e7f:	dec    esp
  410e80:	inc    DWORD PTR [eax]
  410e82:	cmc    
  410e83:	mov    ds:0xffe48346,eax
  410e88:	inc    DWORD PTR [eax]
  410e8a:	jno    0x410ee6
  410e8c:	(bad)  
  410e8e:	add    BYTE PTR [esi-0xb56ff7d],bh
  410e94:	sub    eax,0xffcf83
  410e99:	and    DWORD PTR [esi-0x6a],0xffffffc4
  410e9d:	inc    DWORD PTR [ebx+0x3483ff9f]
  410ea3:	mov    dl,0x3
  410ea5:	add    BYTE PTR [ecx-0x77],cl
  410ea8:	add    BYTE PTR [eax],al
  410eaa:	sub    eax,0xff00b880
  410eaf:	aam    0x0
  410eb1:	sbb    DWORD PTR [edx+0x6cffb50d],0xffffff83
  410eb8:	inc    DWORD PTR [eax]
  410eba:	dec    eax
  410ebb:	in     al,0x49
  410ebd:	inc    DWORD PTR [eax]
  410ebf:	inc    DWORD PTR ds:[eax]
  410ec2:	jno    0x410eaa
  410ec4:	xchg   ebx,eax
  410ec5:	add    BYTE PTR [esi],bh
  410ec7:	(bad)  
  410ec8:	(bad)  
  410ec9:	jmp    FWORD PTR [edx+edx*2]
  410ecc:	sbb    eax,0x9dffff
  410ed1:	call   DWORD PTR [ecx-0x4900d88f]
  410ed7:	int3   
  410ed8:	add    BYTE PTR [eax],al
  410eda:	popf   
  410edb:	jg     0x410f53
  410edd:	inc    DWORD PTR [eax]
  410edf:	jmp    0xffd4:0x7892ff00
  410ee6:	mov    edi,edi
  410ee8:	add    BYTE PTR [eax],al
  410eea:	adc    ch,BYTE PTR [ebp*4+0xc0ffff]
  410ef1:	add    DWORD PTR [edi],0x31
  410ef4:	(bad)  
  410ef6:	mov    ch,0x83
  410ef8:	(bad)  
  410ef9:	push   DWORD PTR [esi-0xa55d]
  410eff:	fwait
  410f00:	int3   
  410f01:	(bad)  
  410f02:	jp     0x410ef4
  410f04:	pop    edx
  410f05:	call   DWORD PTR [edx+0x64008389]
  410f0b:	fisubr WORD PTR [ebx+0x0]
  410f0e:	add    bh,bh
  410f10:	add    BYTE PTR [eax],al
  410f12:	push   ss
  410f13:	pop    esi
  410f14:	retf   0xbccc
  410f17:	inc    DWORD PTR [eax]
  410f19:	call   DWORD PTR [ebx]
  410f1b:	call   0x2ecb0ee8
  410f20:	cmp    edi,0xffffffca
  410f23:	stos   BYTE PTR es:[edi],al
  410f24:	cdq    
  410f25:	mov    esp,edx
  410f27:	int3   
  410f28:	cmp    edi,0x5c
  410f2b:	lods   al,BYTE PTR ds:[esi]
  410f2c:	mov    al,0xff
  410f2e:	call   FWORD PTR [edx]
  410f30:	int3   
  410f31:	mov    DWORD PTR ds:0x9a00635b,esp
  410f37:	mov    DWORD PTR [eax],eax
  410f39:	(bad)  
  410f3a:	fcomi  st,st(6)
  410f3c:	cmp    eax,DWORD PTR [eax]
  410f3e:	add    BYTE PTR [eax-0x3853ff01],dh
  410f44:	fwait
  410f45:	and    DWORD PTR [esp+ecx*8-0x61d50100],0x10
  410f4d:	(bad)  
  410f4e:	push   DWORD PTR ds:0x9680ccff
  410f54:	pop    esi
  410f55:	push   ebp
  410f57:	inc    DWORD PTR [eax]
  410f59:	(bad)  
  410f5a:	aas    
  410f5b:	jl     0x410f3e
  410f5d:	add    BYTE PTR [ebx+0x79ff000a],al
  410f63:	jns    0x410f01
  410f65:	or     DWORD PTR [ebp-0x1dffff01],0xffffffa7
  410f6c:	hlt    
  410f6d:	inc    DWORD PTR [ebx+0x29ffff37]
  410f73:	loop   0x410f14
  410f75:	push   esp
  410f77:	add    BYTE PTR [ebx+0x5b92bccc],al
  410f7d:	cmp    edi,0xffffffc6
  410f80:	add    bh,bh
  410f82:	call   0xc340aee3
  410f87:	inc    DWORD PTR [eax]
  410f89:	dec    DWORD PTR [ebx+0x11]
  410f8c:	scas   eax,DWORD PTR es:[edi]
  410f8d:	(bad)  
  410f8e:	dec    DWORD PTR [ebx+0x58d483ff]
  410f94:	mov    ch,0xff
  410f96:	arpl   WORD PTR [eax],ax
  410f98:	mov    edi,edi
  410f9a:	dec    esp
  410f9b:	repnz and al,0xff
  410f9e:	inc    DWORD PTR [edi-0x2b7f0000]
  410fa4:	pushf  
  410fa5:	push   DWORD PTR [ecx+0x0]
  410fa8:	add    bh,bh
  410faa:	cmc    
  410fab:	fisttp QWORD PTR ds:0xa7ff00
  410fb1:	add    BYTE PTR [ebx-0x44007381],dh
  410fb7:	add    BYTE PTR [eax],al
  410fb9:	add    BYTE PTR [ebp+0x1b],ch
  410fbc:	es (bad) 
  410fbe:	dec    DWORD PTR [eax+0x28daffff]
  410fc4:	cmp    al,BYTE PTR [ebx-0x33d0]
  410fca:	add    eax,DWORD PTR [ecx]
  410fcc:	call   0xf50fd0
  410fd1:	(bad)  
  410fd2:	fnstenv [edx-0x33607c38]
  410fd8:	add    BYTE PTR [eax],al
  410fda:	je     0x410fd1
  410fdc:	xor    al,0x0
  410fde:	inc    DWORD PTR [eax]
  410fe0:	inc    DWORD PTR [eax]
  410fe2:	xchg   esi,eax
  410fe3:	mov    dl,0x7e
  410fe5:	call   edx
  410fe7:	add    BYTE PTR [eax],al
  410fe9:	push   esp
  410feb:	jl     0x411048
  410fed:	inc    DWORD PTR [eax]
  410fef:	add    edi,edi
  410ff1:	mov    edx,edi
  410ff3:	jbe    0x41103c
  410ff5:	cmp    DWORD PTR [ebp-0x1],0x0
  410ff9:	(bad)  
  410ffa:	jl     0x411043
  410ffc:	and    edi,edi
  410ffe:	jmp    esp
  411000:	add    BYTE PTR [ecx-0x241df9],cl
  411006:	fcmovne st,st(4)
  411008:	add    BYTE PTR [ebx-0x484408],al
  41100e:	inc    DWORD PTR [eax+eax*1]
  411011:	add    ah,ah
  411013:	mov    al,0x68
  411015:	jmp    DWORD PTR [esi-0x34]
  411018:	inc    DWORD PTR [eax]
  41101a:	cmc    
  41101b:	pop    ds
  41101c:	sti    
  41101d:	mov    DWORD PTR [ebx+0xeffffd5],eax
  411023:	fiadd  DWORD PTR [esi]
  411025:	(bad)  
  411026:	cmp    eax,0x35ffff83
  41102b:	sub    BYTE PTR [ebx-0x7ccf0100],ah
  411031:	(bad)  
  411032:	mov    esi,0x8f00bc67
  411037:	(bad)  
  411038:	inc    DWORD PTR [eax]
  41103a:	fadd   DWORD PTR [ebp-0x49ffffd8]
  411040:	cmp    edi,0xffffffa6
  411043:	mov    dl,0x88
  411045:	or     DWORD PTR [esi+0xc890000],0xffffffab
  41104c:	push   ebx
  41104d:	(bad)  
  41104e:	dec    DWORD PTR [edx-0x7d]
  411051:	xor    esp,0x44
  411054:	pop    eax
  411055:	dec    ebp
  411057:	(bad)  
  411058:	(bad)  
  411059:	call   DWORD PTR [esi]
  41105b:	stc    
  41105c:	mov    al,BYTE PTR [ebx+0xffdf00]
  411062:	xlat   BYTE PTR ds:[ebx]
  411063:	fldenv [edx-0x3300a700]
  411069:	add    BYTE PTR [ebp+0xff8376],cl
  41106f:	call   0x79bc1073
  411074:	adc    al,0xff
  411076:	push   0xe48300ff
  41107b:	leave  
  41107c:	(bad)  
  41107d:	(bad)  
  41107e:	jmp    FWORD PTR [eax-0x7d]
  411081:	call   FWORD PTR [ebx]
  411083:	test   DWORD PTR [ebp+0x83ac00],ecx
  411089:	add    dl,bl
  41108b:	adc    eax,0x3c000050
  411090:	inc    DWORD PTR [ebx-0x7c7d1046]
  411096:	or     BYTE PTR [ebx+0x7edb0083],al
  41109c:	lock cmp edi,0x6d
  4110a0:	inc    DWORD PTR [ebx-0x3e2f03]
  4110a6:	xor    BYTE PTR [ebx+0x1d0aff00],al
  4110ac:	pop    esp
  4110ad:	or     esp,0xffffffd9
  4110b0:	int3   
  4110b1:	add    BYTE PTR [esi],dl
  4110b3:	or     al,0xb5
  4110b5:	cmp    DWORD PTR [edi],0xffffff83
  4110b8:	dec    esp
  4110ba:	stos   BYTE PTR es:[edi],al
  4110bb:	std    
  4110bc:	or     al,0xcc
  4110be:	push   DWORD PTR [ebx+0x69448900]
  4110c4:	sub    edi,edi
  4110c6:	repnz add DWORD PTR [eax],0xffffffff
  4110ca:	pop    edx
  4110cb:	ins    DWORD PTR es:[edi],dx
  4110cc:	xchg   esp,eax
  4110cd:	add    bh,bh
  4110cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d0:	add    BYTE PTR [eax],al
  4110d2:	add    al,bh
  4110d4:	cmp    bh,0x43
  4110d7:	cmp    edi,0xffffffcc
  4110da:	(bad)  
  4110db:	jnp    0x411138
  4110dd:	int3   
  4110de:	add    BYTE PTR [ebp-0x7d],cl
  4110e1:	add    BYTE PTR [ebx-0x6500adbf],cl
  4110e7:	add    DWORD PTR [eax],0xffffffff
  4110ea:	ins    BYTE PTR es:[edi],dx
  4110eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ec:	push   ebx
  4110ed:	add    bh,bh
  4110ef:	adc    edi,edi
  4110f1:	call   FWORD PTR [ecx]
  4110f3:	pop    ecx
  4110f4:	inc    ecx
  4110f5:	call   FWORD PTR [eax-0x1]
  4110f8:	inc    DWORD PTR [ebx-0x7ce96247]
  4110fe:	add    BYTE PTR [ecx],ah
  411100:	add    DWORD PTR [eax],0xffffffd1
  411103:	xor    ebp,DWORD PTR [edx-0x7d]
  411106:	daa    
  411107:	dec    esp
  411109:	jmp    FWORD PTR [eax+0xff2073]
  41110f:	test   edi,edi
  411111:	dec    DWORD PTR [edi]
  411113:	dec    ebp
  411114:	inc    edx
  411115:	add    BYTE PTR [eax-0x3b000077],bh
  41111b:	xchg   edi,eax
  41111c:	jno    0x41111d
  41111e:	dec    DWORD PTR [edi+0x2152ffff]
  411124:	mov    bh,0x89
  411126:	idiv   edi
  411128:	inc    DWORD PTR [eax]
  41112a:	pushf  
  41112b:	ins    BYTE PTR es:[edi],dx
  41112c:	test   eax,0xffa800ff
  411131:	add    BYTE PTR [edx-0x67006de3],ah
  411137:	(bad)  
  411138:	inc    DWORD PTR [ebx-0xcbd73e]
  41113e:	add    BYTE PTR [ebx+eax*4],ch
  411141:	dec    DWORD PTR [ecx+eax*8-0xaf7c5d]
  411148:	add    BYTE PTR [ebx-0x175ed2],al
  41114e:	push   DWORD PTR [ecx-0x5b160000]
  411154:	and    bh,bh
  411156:	fwait
  411157:	inc    DWORD PTR [eax]
  411159:	cmp    edi,0xffffffcc
  41115c:	mov    bl,0x0
  41115e:	add    al,ah
  411160:	(bad)  
  411161:	jmp    FWORD PTR [ecx+0x1c]
  411164:	fwait
  411165:	add    BYTE PTR [eax],cl
  411167:	add    ah,cl
  411169:	add    BYTE PTR [eax+0x3c],dl
  41116c:	aad    0xff
  41116e:	mov    DWORD PTR [edx-0x7d],edi
  411171:	push   DWORD PTR [esp+edx*1]
  411174:	pusha  
  411175:	add    BYTE PTR [ebx],ah
  411177:	(bad)  
  411178:	inc    DWORD PTR [ebx-0x7cb6f99b]
  41117e:	push   DWORD PTR [esi]
  411180:	(bad)  
  411181:	push   DWORD PTR [ecx-0x1f]
  411184:	out    dx,eax
  411185:	add    BYTE PTR [ecx],cl
  411187:	inc    DWORD PTR [eax]
  411189:	add    bl,ah
  41118b:	mov    ecx,0x48ff898c
  411190:	(bad)  
  411191:	call   DWORD PTR [ebx-0x2100fe0b]
  411197:	add    bh,bh
  411199:	sbb    DWORD PTR [eax-0x60],0xffffffa9
  41119d:	add    bh,bh
  41119f:	and    bh,bh
  4111a1:	add    BYTE PTR [edi-0x44],ah
  4111a4:	stos   DWORD PTR es:[edi],eax
  4111a5:	call   DWORD PTR [esi]
  4111a7:	(bad)  
  4111a8:	inc    DWORD PTR [eax]
  4111aa:	push   ebp
  4111ab:	aam    0x85
  4111ad:	add    DWORD PTR [ebx+0x6500ff3a],0xffffffec
  4111b4:	outs   dx,BYTE PTR ds:[esi]
  4111b5:	mov    DWORD PTR [esi],edi
  4111b7:	(bad)  
  4111b8:	(bad)  
  4111b9:	(bad)  
  4111ba:	inc    BYTE PTR [eax]
  4111bc:	pop    ebp
  4111bd:	inc    DWORD PTR [eax]
  4111bf:	cmp    ah,cl
  4111c1:	push   DWORD PTR [edx+0x3700417f]
  4111c7:	add    DWORD PTR [eax],0xffffffff
  4111ca:	inc    esi
  4111cb:	xchg   DWORD PTR [esi+0x2283ff],esp
  4111d1:	mov    DWORD PTR [ebp-0x5b],esi
  4111d4:	fdivp  st(7),st
  4111d6:	leave  
  4111d7:	inc    DWORD PTR [eax]
  4111d9:	int3   
  4111da:	push   0xcc8316f7
  4111df:	lock inc DWORD PTR [eax]
  4111e2:	push   ebx
  4111e3:	ja     0x41119d
  4111e5:	add    BYTE PTR [esi+0x0],ah
  4111e8:	add    bh,bh
  4111ea:	jno    0x4111a6
  4111ec:	xchg   esp,eax
  4111ed:	(bad)  
  4111ee:	dec    DWORD PTR [edx]
  4111f0:	(bad)  
  4111f1:	dec    DWORD PTR [esp+edx*4]
  4111f4:	xor    edi,edi
  4111f6:	or     bh,bh
  4111f8:	(bad)  
  4111f9:	call   FWORD PTR [eax-0x1a]
  4111fc:	fld    DWORD PTR [eax]
  4111fe:	add    BYTE PTR [ebx],bh
  411200:	(bad)  
  411201:	(bad)  
  411202:	in     eax,dx
  411203:	call   0xff6c12c7
  411208:	add    BYTE PTR [ebx-0x9da095],al
  41120e:	inc    DWORD PTR [edx]
  411210:	add    bh,bh
  411212:	bnd jmp 0x8a381127
  411218:	or     esp,0xffffff9b
  41121b:	mov    ah,0x24
  41121d:	dec    esp
  41121f:	fs int3 
  411221:	(bad)  
  411222:	mov    ecx,0xe4ffb3fc
  411227:	add    bh,bh
  411229:	add    BYTE PTR [ecx+ecx*2-0x2d],dh
  41122d:	(bad)  
  41122e:	inc    DWORD PTR [ebx+eax*4]
  411231:	call   FWORD PTR [edi-0x4c]
  411234:	cmp    bh,0x42
  411237:	int3   
  411238:	cmp    edi,0xffffffe5
  41123b:	pusha  
  41123c:	ud0    edi,edi
  41123f:	idiv   edi
  411241:	mov    ecx,esi
  411243:	cwde   
  411244:	stos   BYTE PTR es:[edi],al
  411245:	xor    edx,0x0
  411248:	add    bh,bh
  41124a:	rcl    esi,1
  41124c:	or     edi,edi
  41124e:	(bad)  
  41124f:	fld    DWORD PTR [eax]
  411251:	inc    DWORD PTR [eax+ebp*2]
  411254:	call   0x89418b59
  411259:	call   DWORD PTR [eax-0x76fffe5d]
  41125f:	pop    ecx
  411260:	add    BYTE PTR [eax],al
  411262:	out    0x7,al
  411264:	xchg   edx,eax
  411265:	add    BYTE PTR [edi],bh
  411267:	dec    esp
  411269:	int3   
  41126a:	and    bh,ch
  41126c:	mov    bh,0x89
  41126e:	add    BYTE PTR [ebx+eax*4],al
  411271:	add    ch,ah
  411273:	ins    BYTE PTR es:[edi],dx
  411274:	sub    eax,0xffffdbff
  411279:	call   FWORD PTR [eax-0x7cfc34]
  41127f:	xor    bh,bh
  411281:	add    BYTE PTR [ebp+0x78],dh
  411284:	and    eax,DWORD PTR [eax]
  411286:	mov    eax,ds:0xae00ff00
  41128b:	cmc    
  41128c:	cld    
  41128d:	(bad)  
  41128e:	dec    DWORD PTR [edi-0x1]
  411291:	int3   
  411292:	mov    eax,ds:0x4eff9f95
  411297:	add    DWORD PTR [eax],0xffffffff
  41129a:	jne    0x4112ad
  41129c:	fadd   QWORD PTR [eax]
  41129e:	cmp    ecx,0xffffffff
  4112a1:	add    BYTE PTR [ebp-0x1b00fbda],bl
  4112a7:	mov    edi,edi
  4112a9:	mov    DWORD PTR [esi],ebx
  4112ab:	shr    DWORD PTR [ebp+0x0],1
  4112ae:	xor    DWORD PTR [esi+0x727aff00],0x41
  4112b5:	add    BYTE PTR [ebp-0x1],al
  4112b8:	add    DWORD PTR [ebx-0x33346b5c],0x0
  4112bf:	jl     0x4112c0
  4112c1:	(bad)  
  4112c2:	jns    0x4112b6
  4112c4:	fdivp  st(7),st
  4112c6:	mov    al,BYTE PTR [ebx+0x63f683ff]
  4112cc:	mov    ?,edi
  4112ce:	mov    DWORD PTR [edi+edi*8],ebp
  4112d1:	xor    esi,0xffffffbc
  4112d4:	and    edi,edi
  4112d6:	jl     0x4112d7
  4112d8:	inc    DWORD PTR [eax]
  4112da:	pop    ebx
  4112db:	inc    esp
  4112dc:	pop    edi
  4112dd:	add    bh,bh
  4112df:	or     al,BYTE PTR [ebx-0x70039f7d]
  4112e5:	adc    DWORD PTR [eax+eax*1],0xffffffff
  4112e9:	add    BYTE PTR [ebp-0xffa36c],cl
  4112ef:	aaa    
  4112f0:	(bad)  
  4112f1:	inc    edx
  4112f3:	iret   
  4112f4:	lock add cl,dh
  4112f7:	(bad)  
  4112f8:	inc    DWORD PTR [ebx-0x143135]
  4112fe:	push   DWORD PTR [ebx+0x0]
  411301:	int3   
  411302:	stos   DWORD PTR es:[edi],eax
  411303:	dec    esi
  411304:	jecxz  0x411306
  411306:	add    edi,edi
  411308:	mov    DWORD PTR [eax],eax
  41130a:	cdq    
  41130b:	not    DWORD PTR [ebx-0x8f7c01]
  411311:	mov    DWORD PTR [ecx-0x6c],esp
  411314:	imul   eax,DWORD PTR [eax],0x89ffff75
  41131a:	loop   0x411336
  41131c:	sub    al,0x83
  41131e:	and    eax,0xffffffcc
  411321:	int3   
  411322:	inc    ebp
  411323:	aad    0xf8
  411325:	call   ecx
  411327:	add    BYTE PTR [eax],al
  411329:	add    dl,ah
  41132b:	into   
  41132c:	xchg   edx,eax
  41132d:	add    DWORD PTR [eax],0x74
  411330:	inc    DWORD PTR [eax]
  411332:	shl    ebp,cl
  411334:	adc    al,0x0
  411336:	sbb    eax,DWORD PTR [eax]
  411338:	inc    DWORD PTR [eax]
  41133a:	xchg   edi,eax
  41133b:	mov    edx,0xfaff00f4
  411340:	inc    DWORD PTR [eax]
  411342:	xor    ebp,eax
  411344:	dec    esp
  411345:	mov    DWORD PTR [ebp-0x50000001],ecx
  41134b:	rcl    BYTE PTR [ecx-0xa3ff01],0xff
  411352:	(bad)  
  411353:	out    0x9e,al
  411355:	add    BYTE PTR [ecx-0x647cff01],dl
  41135b:	inc    edx
  41135c:	fild   WORD PTR [eax]
  41135e:	push   DWORD PTR [edi-0x5776ff34]
  411364:	push   esp
  411365:	(bad)  
  411366:	(bad)  
  411368:	add    BYTE PTR [eax],al
  41136a:	jl     0x4112ee
  41136c:	xchg   ecx,eax
  41136d:	(bad)  
  41136e:	call   DWORD PTR [ebx]
  411370:	add    BYTE PTR [eax],al
  411372:	xor    al,0xc2
  411374:	mov    WORD PTR [ebx-0xe7],es
  41137a:	(bad)
  41137d:	(bad)  
  41137e:	(bad)  
  41137f:	(bad)  
  411380:	inc    DWORD PTR [eax]
  411382:	mov    ds:0xf00b9f7,al
  411387:	add    BYTE PTR [ebx-0x28dad200],al
  41138d:	add    ah,cl
  41138f:	mov    al,ds:0x1934ff00
  411394:	or     eax,DWORD PTR [ebx-0xff0045]
  41139a:	imul   DWORD PTR [eax-0x5d]
  41139d:	inc    DWORD PTR [eax]
  41139f:	sar    edi,1
  4113a1:	sbb    DWORD PTR [eax-0x29],0xffffff8c
  4113a5:	cmp    DWORD PTR [esi],0x0
  4113a8:	add    BYTE PTR [eax],al
  4113aa:	push   ecx
  4113ab:	or     cl,dl
  4113ad:	add    ah,cl
  4113af:	in     al,dx
  4113b0:	inc    DWORD PTR [ebx-0x7c9631c5]
  4113b6:	xchg   esi,eax
  4113b7:	int3   
  4113b8:	inc    DWORD PTR [eax]
  4113ba:	cdq    
  4113bb:	sbb    dh,al
  4113bd:	inc    DWORD PTR [eax]
  4113bf:	ins    BYTE PTR es:[edi],dx
  4113c0:	(bad)  
  4113c1:	call   DWORD PTR [edx]
  4113c3:	icebp  
  4113c4:	mov    bh,bh
  4113c6:	fadd   QWORD PTR [eax]
  4113c8:	dec    esp
  4113ca:	out    0x0,eax
  4113cc:	jns    0x4113ce
  4113ce:	add    BYTE PTR [edx+0x716b89ff],cl
  4113d4:	popa   
  4113d5:	(bad)  
  4113d6:	mov    ebp,0xd6ffcc83
  4113db:	fdivr  DWORD PTR [edi+edi*8-0x7cb101]
  4113e2:	mov    cl,0xe8
  4113e4:	mov    eax,ds:0xcccc0eff
  4113e9:	dec    esp
  4113eb:	sub    BYTE PTR [ebp-0x1],bh
  4113ee:	int3   
  4113ef:	push   ds
  4113f0:	add    BYTE PTR [ebx-0xc95ae2],al
  4113f6:	add    eax,DWORD PTR [eax]
  4113f8:	(bad)  
  4113f9:	jmp    DWORD PTR [ebp-0x78]
  4113fc:	mov    edi,0x7983ff
  411401:	inc    DWORD PTR [ecx-0x6c]
  411404:	cmp    eax,DWORD PTR [eax]
  411406:	xchg   DWORD PTR [ecx-0x49227c01],ecx
  41140c:	out    0xff,al
  41140e:	jmp    FWORD PTR [esp+ecx*8-0x1]
  411412:	dec    ecx
  411413:	popa   
  411414:	adc    edi,edi
  411416:	pop    esp
  411417:	cmp    edi,0xffffffff
  41141a:	sub    BYTE PTR [edi+0x22ffff70],bh
  411420:	(bad)  
  411421:	call   DWORD PTR [edi+edx*2]
  411424:	inc    edi
  411425:	mov    DWORD PTR [ebp-0x7d],ebp
  411428:	add    bh,bh
  41142a:	fst    QWORD PTR [eax]
  41142c:	int3   
  41142d:	(bad)  
  41142e:	jmp    FWORD PTR [edi-0x1]
  411431:	(bad)  
  411432:	mov    ebp,0xf3ffab84
  411437:	(bad)  
  411438:	(bad)  
  411439:	jmp    ebp
  41143b:	adc    eax,0xe783cce5
  411440:	(bad)  
  411441:	jmp    ebx
  411443:	lea    ebx,[ecx]
  411445:	int3   
  411446:	js     0x4113cb
  411448:	add    DWORD PTR [ebx+0x4f3590],0xffffffff
  41144f:	dec    edi
  411450:	inc    DWORD PTR [eax]
  411452:	rcl    DWORD PTR [ecx],1
  411454:	xchg   esi,eax
  411455:	call   DWORD PTR [ecx+0x17ffccff]
  41145b:	sub    dh,dl
  41145d:	(bad)  
  41145e:	jmp    DWORD PTR [ecx-0x34]
  411461:	call   FWORD PTR [ebx+edx*2-0x76923366]
  411468:	inc    DWORD PTR [eax]
  41146a:	fsub   QWORD PTR fs:[edi-0x7c680000]
  411471:	(bad)  
  411472:	jl     0x4114cf
  411474:	jne    0x411442
  411476:	fs add bh,bh
  411479:	add    BYTE PTR [esi-0x29],dh
  41147c:	xchg   edi,eax
  41147d:	(bad)  
  41147e:	push   DWORD PTR [edi]
  411480:	add    ah,cl
  411482:	pop    eax
  411483:	mov    edx,0x83790099
  411488:	inc    DWORD PTR [eax]
  41148a:	lods   al,BYTE PTR ds:[esi]
  41148b:	mov    bh,0x61
  41148d:	inc    DWORD PTR [eax]
  41148f:	jbe    0x411490
  411491:	int3   
  411492:	sbb    dl,BYTE PTR [esi+edi*2]
  411495:	add    BYTE PTR [eax-0x69ff0077],dh
  41149b:	test   bl,dh
  41149d:	inc    DWORD PTR [ebx+0x59ffccd2]
  4114a3:	mov    ah,0x6
  4114a5:	add    BYTE PTR [esi+0x79000000],ch
  4114ab:	and    al,BYTE PTR [esi-0x1]
  4114ae:	add    dh,bh
  4114b0:	(bad)  
  4114b1:	jmp    FWORD PTR [ecx+0x22890780]
  4114b7:	int3   
  4114b8:	(bad)  
  4114b9:	jmp    DWORD PTR [edx-0x33005077]
  4114bf:	icebp  
  4114c0:	add    BYTE PTR [ebx+0xa8f33b],al
  4114c6:	add    eax,0x5383ff83
  4114cb:	or     al,BYTE PTR [ebp-0x767c01]
  4114d1:	mov    edi,ebx
  4114d3:	cmp    eax,0x83dcffd7
  4114d8:	dec    DWORD PTR [ecx-0x33fb1a46]
  4114de:	(bad)  
  4114df:	fild   DWORD PTR [eax]
  4114e1:	(bad)  
  4114e2:	mov    ecx,0x3c89cd6a
  4114e7:	inc    DWORD PTR [eax]
  4114e9:	mov    DWORD PTR [ecx],esi
  4114eb:	lea    ecx,ss:[ecx+0xffa9ff]
  4114f2:	lahf   
  4114f3:	sub    bh,al
  4114f5:	push   DWORD PTR [ecx]
  4114f7:	add    ah,cl
  4114f9:	(bad)  
  4114fa:	out    dx,eax
  4114fb:	inc    ecx
  4114fc:	cmp    ecx,esp
  4114fe:	jmp    FWORD PTR [edi]
  411500:	add    BYTE PTR [eax],al
  411502:	xchg   DWORD PTR [ebx],ebp
  411504:	cmp    DWORD PTR [ebx-0x76ff9a],eax
  41150a:	js     0x411532
  41150c:	cmp    DWORD PTR [eax],eax
  41150e:	add    bh,ch
  411510:	(bad)  
  411511:	push   ebp
  411513:	jle    0x41154d
  411515:	jmp    FWORD PTR [edi-0x77]
  411518:	add    bh,bh
  41151a:	xlat   BYTE PTR ds:[ebx]
  41151b:	pop    edx
  41151c:	test   bh,bh
  41151e:	add    DWORD PTR [edi+edi*8-0x1],0x0
  411523:	mov    bl,0xee
  411525:	jmp    DWORD PTR [edi]
  411527:	int3   
  411528:	add    DWORD PTR [eax],0x3e
  41152b:	xor    eax,0x2c83ff7a
  411530:	dec    esp
  411532:	std    
  411533:	dec    eax
  411534:	bnd jmp DWORD PTR [ebx]
  411537:	int3   
  411538:	(bad)  
  411539:	call   edi
  41153b:	or     DWORD PTR [ebp-0x1],ebx
  41153e:	add    ebp,0x0
  411541:	mov    DWORD PTR [edx-0x30],esp
  411544:	xlat   BYTE PTR ds:[ebx]
  411545:	jmp    DWORD PTR [eax+eax*1]
  411548:	inc    DWORD PTR [eax]
  41154a:	push   esp
  41154b:	and    BYTE PTR [esi-0x767700],bl
  411551:	push   DWORD PTR [ebp-0x28ff25a0]
  411557:	(bad)  
  411558:	(bad)  
  411559:	(bad)  
  41155a:	jmp    0x411558
  41155c:	dec    edx
  41155d:	(bad)  
  41155e:	push   eax
  411560:	(bad)  
  411561:	jmp    FWORD PTR [ebp+0x34]
  411564:	daa    
  411565:	push   DWORD PTR [esp+ecx*8]
  411568:	add    bh,bh
  41156a:	cmp    BYTE PTR [ebx-0xa],al
  41156d:	(bad)  
  41156e:	push   DWORD PTR [ebx-0x1]
  411571:	add    BYTE PTR [esi],ah
  411573:	push   eax
  411574:	xor    BYTE PTR [eax],al
  411576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411577:	mov    DWORD PTR [eax],eax
  411579:	push   DWORD PTR [edi-0x760027c6]
  41157f:	fiadd  DWORD PTR [eax]
  411581:	push   DWORD PTR [ecx]
  411583:	lds    ebx,FWORD PTR [eax]
  411585:	call   ebx
  411587:	inc    DWORD PTR [eax]
  411589:	(bad)  
  41158a:	(bad)  [esi-0x6]
  41158d:	inc    DWORD PTR [ebx-0x3d00ffa4]
  411593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411594:	add    edi,edi
  411596:	jae    0x411598
  411598:	add    BYTE PTR [eax],al
  41159a:	pop    esp
  41159b:	pop    edx
  41159c:	or     ah,cl
  41159e:	jmp    DWORD PTR [edi-0x34]
  4115a1:	add    dl,bl
  4115a3:	lods   eax,DWORD PTR ds:[esi]
  4115a4:	int3   
  4115a5:	add    BYTE PTR [eax],ch
  4115a7:	add    bh,bh
  4115a9:	add    dh,al
  4115ab:	add    al,bl
  4115ad:	(bad)  
  4115ae:	(bad)  
  4115af:	fadd   DWORD PTR [eax]
  4115b1:	add    BYTE PTR [ebx],dh
  4115b3:	mov    ds:0x2500c5,al
  4115b8:	add    BYTE PTR [eax],al
  4115ba:	outs   dx,BYTE PTR ds:[esi]
  4115bb:	and    al,0xbc
  4115bd:	dec    DWORD PTR [ecx-0x69ffffd0]
  4115c3:	fdiv   QWORD PTR [eax+eax*1+0xcc0034]
  4115ca:	pop    ebx
  4115cb:	adc    al,0xe8
  4115cd:	add    BYTE PTR [ecx-0x6ff00d0],cl
  4115d3:	sub    eax,ebp
  4115d5:	(bad)  
  4115d6:	std    
  4115d7:	add    bh,bh
  4115d9:	add    dh,dh
  4115db:	sub    eax,0x50ff000c
  4115e0:	(bad)  
  4115e1:	jmp    FWORD PTR [edi]
  4115e3:	push   esp
  4115e4:	push   edi
  4115e5:	add    BYTE PTR [ebx+eax*4+0x7828ffff],bh
  4115ec:	xchg   ebp,eax
  4115ed:	(bad)  
  4115ee:	(bad)  
  4115ef:	mov    eax,0xdb50ff89
  4115f4:	je     0x4115f5
  4115f6:	jecxz  0x4115f8
  4115f8:	(bad)  
  4115f9:	jmp    ebx
  4115fb:	pop    ss
  4115fc:	mov    cl,0x89
  4115fe:	(bad)  
  4115ff:	cld    
  411600:	dec    DWORD PTR [ecx-0x7bfaa0]
  411606:	mov    edi,edi
  411608:	add    BYTE PTR [ebx-0x948ec7],al
  41160e:	int3   
  41160f:	lds    eax,FWORD PTR [ebx-0x3e140e77]
  411615:	add    BYTE PTR ds:0x64ffffcc,cl
  41161b:	cmp    bl,BYTE PTR [ecx+ecx*4-0x7d]
  41161f:	add    al,0xff
  411621:	add    BYTE PTR [edx],dh
  411623:	mov    ch,0xff
  411626:	inc    ebp
  411627:	inc    DWORD PTR [ebx-0x12d9f400]
  41162d:	add    DWORD PTR [ebx-0x4a0000a4],0xffffffd8
  411634:	out    dx,al
  411635:	add    BYTE PTR [ebx],ah
  411637:	inc    DWORD PTR [ebx+0x43b340ff]
  41163d:	inc    DWORD PTR [eax]
  41163f:	mov    bh,0xff
  411641:	add    BYTE PTR [ecx-0x1f3336a1],bh
  411647:	inc    DWORD PTR [ebx+0x4c51cccc]
  41164d:	dec    esp
  41164f:	and    edi,edi
  411651:	add    BYTE PTR [edi],ah
  411653:	or     BYTE PTR [eax],al
  411655:	jmp    DWORD PTR [eax]
  411657:	(bad)  
  411658:	inc    DWORD PTR [eax]
  41165a:	mov    bh,0x9c
  41165c:	aam    0xff
  41165e:	(bad)  
  41165f:	in     eax,dx
  411660:	inc    DWORD PTR [eax]
  411662:	adc    ecx,edi
  411664:	ret    0x2bff
  411667:	inc    DWORD PTR [eax]
  411669:	add    BYTE PTR [eax+ebp*8+0x7e],bh
  41166d:	add    bh,bh
  41166f:	call   0xb48715f7
  411674:	lods   eax,DWORD PTR ds:[esi]
  411675:	add    BYTE PTR [edi],bh
  411677:	inc    DWORD PTR [ebx+0x4b644aff]
  41167d:	add    BYTE PTR [eax],al
  41167f:	xchg   DWORD PTR [ebx+0x5ec859ff],eax
  411685:	jmp    ebx
  411687:	int3   
  411688:	add    BYTE PTR [eax],al
  41168a:	pop    ebx
  41168b:	lock adc eax,0xff0a83ff
  411691:	add    BYTE PTR [ebp-0x10],ch
  411694:	sub    BYTE PTR [eax],al
  411696:	leave  
  411697:	dec    esp
  411699:	add    BYTE PTR [ebx],dl
  41169b:	dec    esp
  41169c:	cmp    eax,0x6d83ff
  4116a1:	and    DWORD PTR [eax+0x3fff122c],0x0
  4116a8:	dec    esp
  4116aa:	in     eax,0x16
  4116ac:	and    eax,DWORD PTR [eax]
  4116ae:	call   ecx
  4116b0:	inc    DWORD PTR [eax]
  4116b2:	mov    esp,0x4d000366
  4116b7:	add    BYTE PTR [eax],al
  4116b9:	jmp    DWORD PTR [eax-0x27]
  4116bc:	or     bh,bh
  4116be:	add    ah,bl
  4116c0:	(bad)  
  4116c1:	inc    DWORD PTR [eax+0x22]
  4116c4:	push   ds
  4116c5:	add    cl,ah
  4116c7:	dec    esp
  4116c9:	inc    esi
  4116cb:	xor    DWORD PTR [esi+0x0],ebp
  4116ce:	call   FWORD PTR [esi+0x0]
  4116d1:	int3   
  4116d2:	xor    bh,al
  4116d4:	push   DWORD PTR es:[ebx+0x14ffff00]
  4116db:	inc    edi
  4116dc:	xchg   DWORD PTR [ecx+0x9800],ecx
  4116e2:	add    BYTE PTR [edi+0x60cc89],cl
  4116e8:	add    BYTE PTR [eax],al
  4116ea:	mov    ch,0xbf
  4116ec:	out    dx,eax
  4116ed:	(bad)  
  4116ee:	inc    edx
  4116f0:	cmp    edi,0x27
  4116f3:	dec    ebx
  4116f4:	test   edi,edi
  4116f6:	in     al,0xcc
  4116f8:	add    bh,bh
  4116fa:	mov    al,0xc3
  4116fc:	mov    ch,0xff
  4116fe:	int3   
  4116ff:	lea    eax,[eax]
  411701:	add    BYTE PTR [esi+ebx*4],dh
  411704:	lahf   
  411705:	push   edi
  411707:	add    DWORD PTR [eax],0xffffff83
  41170a:	jo     0x41176e
  41170c:	add    BYTE PTR [eax],0xff
  41170f:	pop    ecx
  411710:	inc    DWORD PTR [eax]
  411712:	pop    ebx
  411713:	pop    esi
  411714:	mov    bh,bh
  411716:	xor    eax,DWORD PTR [eax]
  411718:	inc    DWORD PTR [eax]
  41171a:	adc    eax,0xff006410
  41171f:	push   ebx
  411720:	add    BYTE PTR [eax],al
  411722:	pop    ebp
  411723:	xchg   ecx,eax
  411724:	pop    ecx
  411725:	push   DWORD PTR [ecx-0x1]
  411728:	add    BYTE PTR [ebx-0x5966b0],al
  41172e:	add    BYTE PTR [edi-0x4cb80034],cl
  411734:	cmp    bh,0xf2
  411737:	int3   
  411738:	inc    DWORD PTR [eax]
  41173a:	mov    ds:0x83ffb975,al
  41173f:	ss (bad) 
  411741:	(bad)  
  411742:	ficomp WORD PTR [ebx-0x7cc4ff5c]
  411748:	mov    DWORD PTR [ebx-0x261d03],eax
  41174e:	call   FWORD PTR [edi+edi*8]
  411751:	add    BYTE PTR [ebp+edi*4+0x1aff61],al
  411758:	int3   
  411759:	int3   
  41175a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41175b:	and    DWORD PTR [ecx],esi
  41175d:	inc    DWORD PTR [eax]
  41175f:	add    BYTE PTR [ebx-0x61adeb7d],al
  411765:	dec    ecx
  411767:	(bad)  
  411768:	(bad)  
  411769:	call   DWORD PTR [edx-0x3e]
  41176c:	and    bh,bh
  41176e:	add    BYTE PTR [edx+0x7eefffff],al
  411774:	lock inc DWORD PTR [eax]
  411777:	add    bh,bh
  411779:	call   FWORD PTR [ecx]
  41177b:	aas    
  41177c:	or     DWORD PTR [eax],eax
  41177e:	add    al,bl
  411780:	(bad)  
  411781:	inc    esi
  411783:	mov    edx,0xffec007d
  411788:	add    BYTE PTR [eax],al
  41178a:	mov    bl,0xb7
  41178c:	or     ah,cl
  41178e:	push   DWORD PTR [esp+ecx*8]
  411791:	sub    edi,0x5
  411794:	fadd   QWORD PTR [eax]
  411796:	mov    ah,0xff
  411798:	add    bh,bh
  41179a:	jmp    0x411793
  41179c:	(bad)  
  41179d:	add    BYTE PTR [eax],al
  41179f:	daa    
  4117a0:	mov    DWORD PTR [ecx-0xe21ad4],ecx
  4117a6:	push   ebx
  4117a7:	inc    DWORD PTR [eax]
  4117a9:	dec    DWORD PTR [eax]
  4117ab:	push   0x2c
  4117ad:	add    bh,bh
  4117af:	pop    edx
  4117b0:	add    bh,bh
  4117b2:	mov    ecx,0xf3007e04
  4117b7:	cmp    edi,0xffffff89
  4117ba:	jne    0x4117ec
  4117bc:	in     eax,dx
  4117bd:	int3   
  4117be:	push   DWORD PTR ds:0x90038300
  4117c4:	xchg   esp,eax
  4117c5:	call   DWORD PTR [edx]
  4117c7:	add    bh,bh
  4117c9:	add    BYTE PTR ds:0x89ffaadb,dh
  4117cf:	or     edi,edi
  4117d1:	inc    edx
  4117d3:	imul   esp,DWORD PTR [ebp-0x7d],0xff0083dd
  4117da:	sbb    eax,0xffff7f58
  4117df:	cli    
  4117e0:	inc    DWORD PTR [eax]
  4117e2:	jge    0x411843
  4117e4:	lods   al,BYTE PTR ds:[esi]
  4117e5:	mov    DWORD PTR [eax-0x1],ecx
  4117e8:	(bad)  
  4117e9:	push   DWORD PTR [esi]
  4117eb:	fisttp DWORD PTR [ecx-0x1]
  4117ee:	or     DWORD PTR [esi-0x6c4b3301],0x5d
  4117f5:	add    dh,dh
  4117f7:	inc    DWORD PTR [ebx-0x68f4c07d]
  4117fd:	dec    esp
  4117ff:	mov    ecx,0xb56d00ff
  411804:	mov    ds:0x83ff8983,eax
  411809:	add    BYTE PTR [ebp+eax*1+0x4bff00ed],dh
  411810:	(bad)  
  411811:	dec    DWORD PTR [edi+0xd]
  411814:	in     eax,dx
  411815:	jmp    FWORD PTR [edi-0x1aff0100]
  41181b:	pop    ebp
  41181c:	ins    DWORD PTR es:[edi],dx
  41181d:	(bad)  
  41181e:	push   DWORD PTR [edx]
  411820:	cmp    edi,0x4f
  411823:	jno    0x411873
  411825:	jmp    DWORD PTR [edi+0x2acccc00]
  41182b:	(bad)  
  41182c:	pop    ecx
  41182d:	dec    esp
  41182f:	mov    eax,ds:0x3778ff89
  411834:	cmc    
  411835:	sub    ebx,0xffffff83
  411838:	cmp    edi,0x75
  41183b:	adc    al,0x2c
  41183d:	(bad)  
  41183e:	push   DWORD PTR [eax-0x7d]
  411841:	add    BYTE PTR [ebx+0x64ff973f],dh
  411847:	add    DWORD PTR [ebx+0x1479a700],0xffffffff
  41184e:	dec    DWORD PTR [ecx-0x55ee0001]
  411854:	(bad)  
  411855:	call   DWORD PTR [edi]
  411857:	inc    DWORD PTR [eax]
  411859:	add    BYTE PTR [ebx-0x78],dh
  41185c:	add    al,0x83
  41185e:	add    BYTE PTR [esi-0x1],ah
  411861:	push   edi
  411863:	stc    
  411864:	sar    bh,cl
  411866:	xchg   esp,eax
  411867:	inc    DWORD PTR [eax]
  411869:	add    BYTE PTR [eax+0x21],bh
  41186c:	xchg   edi,eax
  41186d:	or     esp,0xffffffa7
  411870:	add    BYTE PTR [eax],al
  411872:	mov    edi,0xabffcba3
  411877:	add    bh,bh
  411879:	int3   
  41187a:	jmp    0x4118c6
  41187c:	mov    es,WORD PTR [eax]
  41187e:	sbb    DWORD PTR [edx-0x7f770000],0x43
  411885:	add    BYTE PTR [edx-0x53ff0034],bh
  41188b:	pop    esi
  41188c:	adc    edi,edi
  41188e:	dec    DWORD PTR [esi-0x7c58ff01]
  411894:	push   esp
  411895:	inc    ebp
  411897:	add    bh,bh
  411899:	(bad)  
  41189a:	cli    
  41189b:	(bad)  
  41189d:	(bad)  
  41189e:	call   DWORD PTR [ebx-0x1]
  4118a1:	add    BYTE PTR [eax-0x6b006e4c],cl
  4118a7:	inc    DWORD PTR [eax]
  4118a9:	inc    DWORD PTR [ebp+0x1a]
  4118ac:	mov    edi,edi
  4118ae:	int3   
  4118af:	fdiv   st(7),st
  4118b1:	add    BYTE PTR [eax+0x59ccd079],ah
  4118b7:	add    BYTE PTR [eax],al
  4118b9:	add    ch,ah
  4118bb:	dec    ebp
  4118bc:	sar    bh,cl
  4118be:	adc    DWORD PTR [esi+0x34d90083],0x2e
  4118c5:	inc    edi
  4118c7:	add    BYTE PTR [ecx+0x125288ff],cl
  4118cd:	add    bh,bh
  4118cf:	hlt    
  4118d0:	inc    DWORD PTR [eax]
  4118d2:	inc    esi
  4118d3:	daa    
  4118d4:	jb     0x4118d5
  4118d6:	sub    edi,edi
  4118d8:	add    DWORD PTR [eax],0xffffff8a
  4118db:	aaa    
  4118dc:	add    DWORD PTR [eax],0xffc8ff
  4118e2:	and    eax,0x15ff167b
  4118e7:	cmp    edi,0xffffffff
  4118ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118eb:	out    0xad,eax
  4118ed:	inc    DWORD PTR [ebx-0x57763390]
  4118f3:	xor    DWORD PTR [edi-0x1],edi
  4118f6:	push   es
  4118f7:	add    BYTE PTR [eax],al
  4118f9:	dec    esi
  4118fb:	or     BYTE PTR [ebx-0x1],dl
  4118fe:	add    BYTE PTR [edx-0x1],ah
  411901:	dec    DWORD PTR [eax]
  411903:	push   es
  411904:	mov    dl,0xff
  411906:	fadd   QWORD PTR [ebx-0x8ea0100]
  41190c:	jnp    0x41190d
  41190e:	jmp    FWORD PTR [edx]
  411910:	add    BYTE PTR [eax],al
  411912:	mov    dl,0xf7
  411914:	pushf  
  411915:	add    BYTE PTR [esi],bl
  411917:	inc    DWORD PTR [ebx-0x1a48817d]
  41191d:	inc    DWORD PTR [eax]
  41191f:	icebp  
  411920:	int3   
  411921:	add    BYTE PTR [ebx+0x1700f8e4],dh
  411927:	add    ah,cl
  411929:	push   ecx
  41192b:	add    al,BYTE PTR [ebx-0x1]
  41192e:	(bad)  
  41192f:	jmp    0x411931
  411931:	mov    eax,eax
  411933:	repz xor DWORD PTR [eax],eax
  411936:	outs   dx,DWORD PTR ds:[esi]
  411937:	inc    DWORD PTR [eax]
  411939:	jmp    DWORD PTR ds:0xff00d33a
  41193f:	xor    edi,edi
  411941:	push   edx
  411943:	mov    BYTE PTR [edi-0x7c008200],cl
  411949:	call   FWORD PTR [esi]
  41194b:	xchg   ebx,eax
  41194c:	mov    edi,edi
  41194e:	add    DWORD PTR [edx],0xffffff89
  411951:	call   DWORD PTR [ebx+0x588937c5]
  411957:	add    DWORD PTR [eax],0xffffffff
  41195a:	mov    esp,0xff831844
  41195f:	inc    eax
  411960:	add    BYTE PTR [ecx-0x9632e2],cl
  411966:	pop    edx
  411967:	mov    DWORD PTR [eax],eax
  411969:	jmp    DWORD PTR [eax+0x8326f6]
  41196f:	jl     0x411970
  411971:	add    cl,dl
  411973:	adc    DWORD PTR [ebx-0xffe601],esi
  411979:	push   DWORD PTR [ebx-0x3300a938]
  41197f:	test   esp,ecx
  411981:	jmp    DWORD PTR [ebp-0x60ff30c1]
  411987:	add    BYTE PTR [eax],al
  411989:	jmp    FWORD PTR [esi-0x7cffb472]
  41198f:	inc    DWORD PTR fs:[eax]
  411992:	imul   ebx,DWORD PTR [ebp+0x60ff12],0x0
  411999:	mov    DWORD PTR [edx+ebx*8],ebp
  41199c:	mov    bl,0x0
  41199e:	int3   
  41199f:	mov    edi,0x2fe10089
  4119a4:	mov    bh,0x0
  4119a6:	add    bh,bh
  4119a8:	cmp    edi,0x75
  4119ab:	xor    DWORD PTR [esi],ebp
  4119ad:	(bad)  
  4119ae:	dec    DWORD PTR ds:0x7f51ffff
  4119b4:	retf   0x6ff
  4119b7:	or     esp,0xffffffff
  4119ba:	sub    al,0xa6
  4119bc:	repnz add BYTE PTR [eax],al
  4119bf:	xchg   esp,eax
  4119c0:	inc    DWORD PTR [eax]
  4119c2:	icebp  
  4119c3:	inc    edi
  4119c4:	pusha  
  4119c5:	(bad)  
  4119c6:	jl     0x4119c7
  4119c8:	(bad)  
  4119c9:	push   esp
  4119cb:	mov    dh,0x6f
  4119cd:	add    ah,cl
  4119cf:	adc    edi,edi
  4119d1:	jmp    FWORD PTR [ecx]
  4119d3:	xor    al,0x15
  4119d5:	add    BYTE PTR ds:0xffff00ff,ah
  4119db:	add    BYTE PTR [eax],al
  4119dd:	add    ah,cl
  4119df:	dec    DWORD PTR [ebx+0x447d1c15]
  4119e5:	add    BYTE PTR [ebx+0x4470440d],cl
  4119eb:	add    BYTE PTR [ecx+0x100ec],al
  4119f1:	add    BYTE PTR [ebx+0x56],dl
  4119f4:	push   edi
  4119f5:	add    edx,0x1dd0
  4119fb:	mov    esi,0xfd
  411a00:	movzx  eax,BYTE PTR [ecx+0x7]
  411a04:	movzx  edi,BYTE PTR [ecx+0x5]
  411a08:	movzx  ecx,WORD PTR [ecx]
  411a0b:	shl    eax,0x8
  411a0e:	add    eax,edi
  411a10:	shl    eax,0x10
  411a13:	add    eax,ecx
  411a15:	mov    ds:0x447d04,eax
  411a1a:	mov    ecx,0x7cd58b45
  411a1f:	sub    ecx,DWORD PTR ds:0x447d14
  411a25:	add    edx,0x8
  411a28:	xor    ecx,eax
  411a2a:	mov    DWORD PTR [edx-0x8],ecx
  411a2d:	mov    ecx,DWORD PTR ds:0x447044
  411a33:	add    ecx,0x8
  411a36:	mov    DWORD PTR ds:0x447044,ecx
  411a3c:	movzx  eax,BYTE PTR [ecx+0x7]
  411a40:	movzx  edi,BYTE PTR [ecx+0x5]
  411a44:	movzx  ecx,WORD PTR [ecx]
  411a47:	shl    eax,0x8
  411a4a:	add    eax,edi
  411a4c:	shl    eax,0x10
  411a4f:	add    eax,ecx
  411a51:	mov    ecx,0x7cd58b45
  411a56:	sub    ecx,DWORD PTR ds:0x447d14
  411a5c:	mov    ds:0x447d04,eax
  411a61:	xor    ecx,eax
  411a63:	mov    DWORD PTR [edx-0x4],ecx
  411a66:	mov    ecx,DWORD PTR ds:0x447044
  411a6c:	add    ecx,0x8
  411a6f:	dec    esi
  411a70:	mov    DWORD PTR ds:0x447044,ecx
  411a76:	jne    0x411a00
  411a78:	mov    ecx,DWORD PTR ds:0x447d1c
  411a7e:	mov    edx,DWORD PTR ds:0x447048
  411a84:	add    ecx,0x25b8
  411a8a:	mov    esi,0x3d
  411a8f:	nop
  411a90:	movzx  eax,WORD PTR [edx+0x6]
  411a94:	movzx  edi,BYTE PTR [edx+0x4]
  411a98:	movzx  edx,BYTE PTR [edx]
  411a9b:	shl    eax,0x8
  411a9e:	add    eax,edi
  411aa0:	shl    eax,0x8
  411aa3:	add    eax,edx
  411aa5:	mov    ds:0x447d04,eax
  411aaa:	mov    edx,0x2e9465c9
  411aaf:	sub    edx,DWORD PTR ds:0x447d14
  411ab5:	add    ecx,0x14
  411ab8:	xor    edx,eax
  411aba:	mov    DWORD PTR [ecx-0x14],edx
  411abd:	mov    edx,DWORD PTR ds:0x447048
  411ac3:	add    edx,0x8
  411ac6:	mov    DWORD PTR ds:0x447048,edx
  411acc:	movzx  eax,WORD PTR [edx+0x6]
  411ad0:	movzx  edi,BYTE PTR [edx+0x4]
  411ad4:	movzx  edx,BYTE PTR [edx]
  411ad7:	shl    eax,0x8
  411ada:	add    eax,edi
  411adc:	shl    eax,0x8
  411adf:	add    eax,edx
  411ae1:	mov    ds:0x447d04,eax
  411ae6:	mov    edx,0x2e9465c9
  411aeb:	sub    edx,DWORD PTR ds:0x447d14
  411af1:	xor    edx,eax
  411af3:	mov    DWORD PTR [ecx-0x10],edx
  411af6:	mov    edx,DWORD PTR ds:0x447048
  411afc:	add    edx,0x8
  411aff:	mov    DWORD PTR ds:0x447048,edx
  411b05:	movzx  eax,WORD PTR [edx+0x6]
  411b09:	movzx  edi,BYTE PTR [edx+0x4]
  411b0d:	movzx  edx,BYTE PTR [edx]
  411b10:	shl    eax,0x8
  411b13:	add    eax,edi
  411b15:	shl    eax,0x8
  411b18:	add    eax,edx
  411b1a:	mov    ds:0x447d04,eax
  411b1f:	mov    edx,0x2e9465c9
  411b24:	sub    edx,DWORD PTR ds:0x447d14
  411b2a:	xor    edx,eax
  411b2c:	mov    DWORD PTR [ecx-0xc],edx
  411b2f:	mov    edx,DWORD PTR ds:0x447048
  411b35:	add    edx,0x8
  411b38:	mov    DWORD PTR ds:0x447048,edx
  411b3e:	movzx  eax,WORD PTR [edx+0x6]
  411b42:	movzx  edi,BYTE PTR [edx+0x4]
  411b46:	movzx  edx,BYTE PTR [edx]
  411b49:	shl    eax,0x8
  411b4c:	add    eax,edi
  411b4e:	shl    eax,0x8
  411b51:	add    eax,edx
  411b53:	mov    ds:0x447d04,eax
  411b58:	mov    edx,0x2e9465c9
  411b5d:	sub    edx,DWORD PTR ds:0x447d14
  411b63:	xor    edx,eax
  411b65:	mov    DWORD PTR [ecx-0x8],edx
  411b68:	mov    edx,DWORD PTR ds:0x447048
  411b6e:	add    edx,0x8
  411b71:	mov    DWORD PTR ds:0x447048,edx
  411b77:	movzx  eax,WORD PTR [edx+0x6]
  411b7b:	movzx  edi,BYTE PTR [edx+0x4]
  411b7f:	movzx  edx,BYTE PTR [edx]
  411b82:	shl    eax,0x8
  411b85:	add    eax,edi
  411b87:	shl    eax,0x8
  411b8a:	add    eax,edx
  411b8c:	mov    edx,0x2e9465c9
  411b91:	sub    edx,DWORD PTR ds:0x447d14
  411b97:	mov    ds:0x447d04,eax
  411b9c:	xor    edx,eax
  411b9e:	mov    DWORD PTR [ecx-0x4],edx
  411ba1:	mov    edx,DWORD PTR ds:0x447048
  411ba7:	add    edx,0x8
  411baa:	dec    esi
  411bab:	mov    DWORD PTR ds:0x447048,edx
  411bb1:	jne    0x411a90
  411bb7:	mov    ecx,DWORD PTR ds:0x447d1c
  411bbd:	mov    edx,DWORD PTR ds:0x44704c
  411bc3:	add    ecx,0x2a7c
  411bc9:	mov    esi,0x14b
  411bce:	mov    edi,edi
  411bd0:	movzx  eax,WORD PTR [edx+0x5]
  411bd4:	movzx  edx,WORD PTR [edx+0x1]
  411bd8:	shl    eax,0x10
  411bdb:	add    eax,edx
  411bdd:	mov    ds:0x447d04,eax
  411be2:	mov    edx,0xa5f8b2a5
  411be7:	sub    edx,DWORD PTR ds:0x447d14
  411bed:	add    ecx,0x8
  411bf0:	xor    edx,eax
  411bf2:	mov    DWORD PTR [ecx-0x8],edx
  411bf5:	mov    edx,DWORD PTR ds:0x44704c
  411bfb:	movzx  eax,BYTE PTR [edx+0xf]
  411bff:	movzx  edi,BYTE PTR [edx+0xb]
  411c03:	shl    eax,0x8
  411c06:	add    eax,edi
  411c08:	movzx  edi,BYTE PTR [edx+0x9]
  411c0c:	movzx  edx,BYTE PTR [edx+0x7]
  411c10:	shl    eax,0x8
  411c13:	add    eax,edi
  411c15:	shl    eax,0x8
  411c18:	add    eax,edx
  411c1a:	mov    edx,0xa5f8b2a5
  411c1f:	sub    edx,DWORD PTR ds:0x447d14
  411c25:	mov    ds:0x447d04,eax
  411c2a:	xor    edx,eax
  411c2c:	mov    DWORD PTR [ecx-0x4],edx
  411c2f:	mov    edx,DWORD PTR ds:0x44704c
  411c35:	add    edx,0x10
  411c38:	dec    esi
  411c39:	mov    DWORD PTR ds:0x44704c,edx
  411c3f:	jne    0x411bd0
  411c41:	movzx  eax,WORD PTR [edx+0x5]
  411c45:	movzx  edx,WORD PTR [edx+0x1]
  411c49:	shl    eax,0x10
  411c4c:	add    eax,edx
  411c4e:	mov    edx,DWORD PTR ds:0x447d14
  411c54:	add    edx,0xa5f832a3
  411c5a:	xor    edx,eax
  411c5c:	mov    ds:0x447d04,eax
  411c61:	mov    DWORD PTR [ecx],edx
  411c63:	mov    ecx,DWORD PTR ds:0x447d1c
  411c69:	mov    edx,DWORD PTR ds:0x447050
  411c6f:	add    ecx,0x34d8
  411c75:	mov    esi,0x17f
  411c7a:	lea    ebx,[ebx+0x0]
  411c80:	movzx  eax,WORD PTR [edx+0x6]
  411c84:	movzx  edx,WORD PTR [edx+0x2]
  411c88:	shl    eax,0x10
  411c8b:	add    eax,edx
  411c8d:	mov    ds:0x447d04,eax
  411c92:	mov    edx,0x5ababa04
  411c97:	sub    edx,DWORD PTR ds:0x447d14
  411c9d:	add    ecx,0x8
  411ca0:	xor    edx,eax
  411ca2:	mov    DWORD PTR [ecx-0x8],edx
  411ca5:	mov    edx,DWORD PTR ds:0x447050
  411cab:	movzx  eax,BYTE PTR [edx+0xf]
  411caf:	movzx  edi,WORD PTR [edx+0xc]
  411cb3:	movzx  edx,BYTE PTR [edx+0x8]
  411cb7:	shl    eax,0x10
  411cba:	add    eax,edi
  411cbc:	shl    eax,0x8
  411cbf:	add    eax,edx
  411cc1:	mov    edx,0x5ababa04
  411cc6:	sub    edx,DWORD PTR ds:0x447d14
  411ccc:	mov    ds:0x447d04,eax
  411cd1:	xor    edx,eax
  411cd3:	mov    DWORD PTR [ecx-0x4],edx
  411cd6:	mov    edx,DWORD PTR ds:0x447050
  411cdc:	add    edx,0x10
  411cdf:	dec    esi
  411ce0:	mov    DWORD PTR ds:0x447050,edx
  411ce6:	jne    0x411c80
  411ce8:	movzx  eax,WORD PTR [edx+0x6]
  411cec:	movzx  edx,WORD PTR [edx+0x2]
  411cf0:	shl    eax,0x10
  411cf3:	add    eax,edx
  411cf5:	mov    edx,DWORD PTR ds:0x447d14
  411cfb:	add    edx,0x5aba3a02
  411d01:	xor    edx,eax
  411d03:	mov    ds:0x447d04,eax
  411d08:	mov    DWORD PTR [ecx],edx
  411d0a:	mov    eax,ds:0x447d1c
  411d0f:	mov    edx,DWORD PTR ds:0x447054
  411d15:	add    eax,0x40d4
  411d1a:	mov    esi,0x34
  411d1f:	nop
  411d20:	movzx  ecx,BYTE PTR [edx+0xa]
  411d24:	movzx  edi,WORD PTR [edx+0x4]
  411d28:	movzx  edx,BYTE PTR [edx+0x2]
  411d2c:	shl    ecx,0x10
  411d2f:	add    ecx,edi
  411d31:	shl    ecx,0x8
  411d34:	add    ecx,edx
  411d36:	mov    edx,DWORD PTR ds:0x447d14
  411d3c:	mov    DWORD PTR ds:0x447d04,ecx
  411d42:	add    edx,0xc3a80c08
  411d48:	xor    edx,ecx
  411d4a:	mov    DWORD PTR [eax],edx
  411d4c:	mov    ecx,DWORD PTR ds:0x447054
  411d52:	mov    ecx,DWORD PTR [ecx+0xb]
  411d55:	mov    DWORD PTR ds:0x447d04,ecx
  411d5b:	mov    edx,0xc3a88c0a
  411d60:	sub    edx,DWORD PTR ds:0x447d14
  411d66:	xor    edx,ecx
  411d68:	mov    DWORD PTR [eax+0x4],edx
  411d6b:	mov    edx,DWORD PTR ds:0x447054
  411d71:	add    edx,0x10
  411d74:	mov    DWORD PTR ds:0x447054,edx
  411d7a:	movzx  ecx,BYTE PTR [edx+0xa]
  411d7e:	movzx  edi,WORD PTR [edx+0x4]
  411d82:	movzx  edx,BYTE PTR [edx+0x2]
  411d86:	shl    ecx,0x10
  411d89:	add    ecx,edi
  411d8b:	shl    ecx,0x8
  411d8e:	add    ecx,edx
  411d90:	mov    edx,DWORD PTR ds:0x447d14
  411d96:	mov    DWORD PTR ds:0x447d04,ecx
  411d9c:	add    edx,0xc3a80c08
  411da2:	xor    edx,ecx
  411da4:	mov    DWORD PTR [eax+0x8],edx
  411da7:	mov    ecx,DWORD PTR ds:0x447054
  411dad:	mov    ecx,DWORD PTR [ecx+0xb]
  411db0:	mov    DWORD PTR ds:0x447d04,ecx
  411db6:	mov    edx,0xc3a88c0a
  411dbb:	sub    edx,DWORD PTR ds:0x447d14
  411dc1:	xor    edx,ecx
  411dc3:	mov    DWORD PTR [eax+0xc],edx
  411dc6:	mov    edx,DWORD PTR ds:0x447054
  411dcc:	add    edx,0x10
  411dcf:	mov    DWORD PTR ds:0x447054,edx
  411dd5:	movzx  ecx,BYTE PTR [edx+0xa]
  411dd9:	movzx  edi,WORD PTR [edx+0x4]
  411ddd:	movzx  edx,BYTE PTR [edx+0x2]
  411de1:	shl    ecx,0x10
  411de4:	add    ecx,edi
  411de6:	shl    ecx,0x8
  411de9:	add    ecx,edx
  411deb:	mov    edx,DWORD PTR ds:0x447d14
  411df1:	mov    DWORD PTR ds:0x447d04,ecx
  411df7:	add    edx,0xc3a80c08
  411dfd:	xor    edx,ecx
  411dff:	mov    DWORD PTR [eax+0x10],edx
  411e02:	mov    ecx,DWORD PTR ds:0x447054
  411e08:	mov    ecx,DWORD PTR [ecx+0xb]
  411e0b:	mov    DWORD PTR ds:0x447d04,ecx
  411e11:	mov    edx,0xc3a88c0a
  411e16:	sub    edx,DWORD PTR ds:0x447d14
  411e1c:	xor    edx,ecx
  411e1e:	mov    DWORD PTR [eax+0x14],edx
  411e21:	mov    edx,DWORD PTR ds:0x447054
  411e27:	add    edx,0x10
  411e2a:	mov    DWORD PTR ds:0x447054,edx
  411e30:	movzx  ecx,BYTE PTR [edx+0xa]
  411e34:	movzx  edi,WORD PTR [edx+0x4]
  411e38:	movzx  edx,BYTE PTR [edx+0x2]
  411e3c:	shl    ecx,0x10
  411e3f:	add    ecx,edi
  411e41:	shl    ecx,0x8
  411e44:	add    ecx,edx
  411e46:	mov    edx,DWORD PTR ds:0x447d14
  411e4c:	mov    DWORD PTR ds:0x447d04,ecx
  411e52:	add    edx,0xc3a80c08
  411e58:	xor    edx,ecx
  411e5a:	mov    DWORD PTR [eax+0x18],edx
  411e5d:	mov    ecx,DWORD PTR ds:0x447054
  411e63:	mov    ecx,DWORD PTR [ecx+0xb]
  411e66:	mov    DWORD PTR ds:0x447d04,ecx
  411e6c:	mov    edx,0xc3a88c0a
  411e71:	sub    edx,DWORD PTR ds:0x447d14
  411e77:	add    eax,0x30
  411e7a:	xor    edx,ecx
  411e7c:	mov    DWORD PTR [eax-0x14],edx
  411e7f:	mov    edx,DWORD PTR ds:0x447054
  411e85:	add    edx,0x10
  411e88:	mov    DWORD PTR ds:0x447054,edx
  411e8e:	movzx  ecx,BYTE PTR [edx+0xa]
  411e92:	movzx  edi,WORD PTR [edx+0x4]
  411e96:	movzx  edx,BYTE PTR [edx+0x2]
  411e9a:	shl    ecx,0x10
  411e9d:	add    ecx,edi
  411e9f:	shl    ecx,0x8
  411ea2:	add    ecx,edx
  411ea4:	mov    edx,DWORD PTR ds:0x447d14
  411eaa:	add    edx,0xc3a80c08
  411eb0:	xor    edx,ecx
  411eb2:	mov    DWORD PTR ds:0x447d04,ecx
  411eb8:	mov    DWORD PTR [eax-0x10],edx
  411ebb:	mov    ecx,DWORD PTR ds:0x447054
  411ec1:	mov    ecx,DWORD PTR [ecx+0xb]
  411ec4:	mov    DWORD PTR ds:0x447d04,ecx
  411eca:	mov    edx,0xc3a88c0a
  411ecf:	sub    edx,DWORD PTR ds:0x447d14
  411ed5:	xor    edx,ecx
  411ed7:	mov    DWORD PTR [eax-0xc],edx
  411eda:	mov    edx,DWORD PTR ds:0x447054
  411ee0:	add    edx,0x10
  411ee3:	mov    DWORD PTR ds:0x447054,edx
  411ee9:	movzx  ecx,BYTE PTR [edx+0xa]
  411eed:	movzx  edi,WORD PTR [edx+0x4]
  411ef1:	movzx  edx,BYTE PTR [edx+0x2]
  411ef5:	shl    ecx,0x10
  411ef8:	add    ecx,edi
  411efa:	shl    ecx,0x8
  411efd:	add    ecx,edx
  411eff:	mov    edx,DWORD PTR ds:0x447d14
  411f05:	add    edx,0xc3a80c08
  411f0b:	xor    edx,ecx
  411f0d:	mov    DWORD PTR ds:0x447d04,ecx
  411f13:	mov    DWORD PTR [eax-0x8],edx
  411f16:	mov    ecx,DWORD PTR ds:0x447054
  411f1c:	mov    ecx,DWORD PTR [ecx+0xb]
  411f1f:	mov    edx,0xc3a88c0a
  411f24:	sub    edx,DWORD PTR ds:0x447d14
  411f2a:	mov    DWORD PTR ds:0x447d04,ecx
  411f30:	xor    edx,ecx
  411f32:	mov    DWORD PTR [eax-0x4],edx
  411f35:	mov    edx,DWORD PTR ds:0x447054
  411f3b:	add    edx,0x10
  411f3e:	dec    esi
  411f3f:	mov    DWORD PTR ds:0x447054,edx
  411f45:	jne    0x411d20
  411f4b:	mov    esi,DWORD PTR ds:0x447d1c
  411f51:	mov    edi,DWORD PTR ds:0x444020
  411f57:	mov    ecx,DWORD PTR ds:0x447058
  411f5d:	add    esi,0x4a94
  411f63:	mov    ebx,0x1e7
  411f68:	jmp    0x411f70
  411f6a:	lea    ebx,[ebx+0x0]
  411f70:	movzx  eax,BYTE PTR [ecx+0x7]
  411f74:	movzx  edx,BYTE PTR [ecx+0x5]
  411f78:	movzx  ecx,WORD PTR [ecx+0x3]
  411f7c:	shl    eax,0x8
  411f7f:	add    eax,edx
  411f81:	mov    edx,DWORD PTR ds:0x447d14
  411f87:	sub    edx,0x80004001
  411f8d:	shl    eax,0x10
  411f90:	add    eax,ecx
  411f92:	neg    edx
  411f94:	sbb    edx,edx
  411f96:	and    edx,0x1d6bd5d5
  411f9c:	add    edx,0xe29461ab
  411fa2:	mov    ds:0x447d04,eax
  411fa7:	xor    edx,eax
  411fa9:	push   0x100
  411fae:	lea    eax,[esp+0x10]
  411fb2:	push   eax
  411fb3:	mov    DWORD PTR [esi],edx
  411fb5:	push   0x0
  411fb7:	add    esi,0x4
  411fba:	call   edi
  411fbc:	mov    ecx,DWORD PTR ds:0x447058
  411fc2:	add    ecx,0x8
  411fc5:	dec    ebx
  411fc6:	mov    DWORD PTR ds:0x447058,ecx
  411fcc:	jne    0x411f70
  411fce:	mov    esi,DWORD PTR ds:0x447d1c
  411fd4:	mov    ecx,DWORD PTR ds:0x44705c
  411fda:	add    esi,0x5230
  411fe0:	mov    ebx,0x164
  411fe5:	jmp    0x411ff0
  411fe7:	lea    esp,[esp+0x0]
  411fee:	mov    edi,edi
  411ff0:	movzx  eax,BYTE PTR [ecx+0x8]
  411ff4:	movzx  edx,WORD PTR [ecx+0x3]
  411ff8:	movzx  ecx,BYTE PTR [ecx+0x1]
  411ffc:	shl    eax,0x10
  411fff:	add    eax,edx
  412001:	shl    eax,0x8
  412004:	add    eax,ecx
  412006:	mov    ds:0x447d04,eax
  41200b:	mov    edx,0xddfa5c97
  412010:	sub    edx,DWORD PTR ds:0x447d14
  412016:	push   0x100
  41201b:	xor    edx,eax
  41201d:	mov    DWORD PTR [esi],edx
  41201f:	mov    ecx,DWORD PTR ds:0x44705c
  412025:	movzx  eax,BYTE PTR [ecx+0xf]
  412029:	movzx  edx,BYTE PTR [ecx+0xc]
  41202d:	movzx  ecx,WORD PTR [ecx+0xa]
  412031:	shl    eax,0x8
  412034:	add    eax,edx
  412036:	mov    edx,DWORD PTR ds:0x447d14
  41203c:	sub    edx,0x80004001
  412042:	shl    eax,0x10
  412045:	add    eax,ecx
  412047:	neg    edx
  412049:	sbb    edx,edx
  41204b:	and    edx,0xa206da8c
  412051:	add    edx,0x5dfa1c96
  412057:	mov    ds:0x447d04,eax
  41205c:	xor    edx,eax
  41205e:	lea    eax,[esp+0x10]
  412062:	push   eax
  412063:	push   0x0
  412065:	mov    DWORD PTR [esi+0x4],edx
  412068:	call   edi
  41206a:	mov    ecx,DWORD PTR ds:0x44705c
  412070:	add    ecx,0x10
  412073:	add    esi,0x8
  412076:	dec    ebx
  412077:	mov    DWORD PTR ds:0x44705c,ecx
  41207d:	jne    0x411ff0
  412083:	pop    edi
  412084:	pop    esi
  412085:	pop    ebx
  412086:	add    esp,0x100
  41208c:	ret    
  41208d:	int3   
  41208e:	int3   
  41208f:	int3   
  412090:	cmp    al,0xcc
  412092:	jmp    FWORD PTR [ebp-0x7c00b4f1]
  412098:	mov    cl,0x0
  41209a:	push   DWORD PTR [ecx-0x12]
  41209d:	inc    ebx
  41209e:	(bad)  
  41209f:	call   DWORD PTR [edx+0x2bbcff00]
  4120a5:	mov    eax,0xff40ffff
  4120aa:	jmp    DWORD PTR [edx-0x39]
  4120ad:	out    dx,eax
  4120ae:	inc    DWORD PTR [eax]
  4120b0:	repnz mov DWORD PTR [eax],eax
  4120b3:	pop    ds
  4120b4:	adc    BYTE PTR [ebp-0x1],ah
  4120b7:	call   DWORD PTR ds:0x9b11ff00
  4120bd:	or     bh,bh
  4120bf:	call   FWORD PTR [edi+0x66cd8900]
  4120c5:	(bad)  
  4120c6:	(bad)  
  4120c7:	jmp    eax
  4120c9:	add    BYTE PTR [eax],al
  4120cb:	stos   DWORD PTR es:[edi],eax
  4120cc:	or     edi,edi
  4120ce:	add    BYTE PTR [eax],al
  4120d0:	xchg   esp,eax
  4120d1:	add    bh,bh
  4120d3:	jmp    0x411b79
  4120d8:	jmp    0x8344:0x2442ff00
  4120df:	add    BYTE PTR [ecx-0x5902ff01],dl
  4120e5:	mov    cl,0x83
  4120e7:	mov    edx,esp
  4120e9:	(bad)  
  4120ea:	call   FWORD PTR [eax-0x57]
  4120ed:	test   edi,edi
  4120ef:	jmp    DWORD PTR [edx-0x1]
  4120f2:	mov    DWORD PTR [edx+0x3b],edx
  4120f5:	push   ecx
  4120f6:	(bad)  
  4120f7:	(bad)  
  4120f8:	out    dx,eax
  4120f9:	(bad)  
  4120fa:	push   DWORD PTR [ebp+0x56]
  4120fd:	cld    
  4120fe:	int3   
  4120ff:	int3   
  412100:	imul   edi,edi,0xffffff83
  412103:	loopne 0x41211e
  412105:	test   eax,0x89e1ffff
  41210a:	add    BYTE PTR [esi-0x32],bl
  41210d:	or     DWORD PTR es:[ecx-0x220033f0],0xffffffcd
  412115:	clc    
  412116:	add    BYTE PTR [eax],al
  412118:	lods   eax,DWORD PTR ds:[esi]
  412119:	int3   
  41211a:	int3   
  41211b:	pop    edi
  41211c:	inc    esp
  41211d:	and    eax,0xff44cc83
  412122:	int3   
  412123:	shr    esi,1
  412125:	jns    0x412127
  412127:	(bad)  
  412128:	cmp    al,0x0
  41212a:	add    BYTE PTR [eax+edx*4-0x37],bl
  41212e:	inc    DWORD PTR [eax]
  412130:	xchg   edi,edi
  412132:	inc    DWORD PTR [edi+esi*4-0x6e00ff98]
  412139:	mov    DWORD PTR [ebx+0xb4cee0],eax
  41213f:	add    BYTE PTR [edi-0x43757601],cl
  412145:	test   esp,ecx
  412147:	mov    DWORD PTR [ebx+0x0],esp
  41214a:	add    BYTE PTR [ebx+ebx*4-0x233300d1],al
  412151:	inc    DWORD PTR [ebx-0xf233f]
  412157:	add    BYTE PTR [esi],dl
  412159:	int3   
  41215a:	jmp    DWORD PTR [ebx+ecx*8+0x2d]
  41215e:	add    BYTE PTR [eax],al
  412160:	pop    ecx
  412161:	(bad)  
  412162:	call   DWORD PTR [ebp*1-0x2476ff71]
  412169:	add    bh,bh
  41216b:	mov    ch,0x36
  41216d:	add    ecx,DWORD PTR [ecx-0x7c330b01]
  412173:	fwait
  412174:	pop    ecx
  412175:	push   ebp
  412176:	mov    DWORD PTR [ebx+0x2c000094],eax
  41217c:	stos   DWORD PTR es:[edi],eax
  41217d:	aam    0x0
  41217f:	adc    DWORD PTR [edi],0xffffffcc
  412182:	int3   
  412183:	push   eax
  412184:	jns    0x41216a
  412186:	(bad)  
  412187:	push   esi
  412189:	add    bh,bh
  41218b:	jmp    0x402cf8
  412190:	xor    al,BYTE PTR [eax]
  412192:	jmp    edi
  412194:	inc    esp
  412195:	loope  0x412196
  412197:	mov    DWORD PTR [esi-0x1],ecx
  41219a:	add    BYTE PTR [edi-0x7c],al
  41219d:	pop    DWORD PTR [eax]
  41219f:	add    BYTE PTR [edi],cl
  4121a1:	(bad)  
  4121a2:	inc    DWORD PTR [ecx]
  4121a4:	cli    
  4121a5:	scas   eax,DWORD PTR es:[edi]
  4121a6:	add    BYTE PTR [eax],al
  4121a8:	mov    cl,0xff
  4121aa:	(bad)  
  4121ab:	fadd   st,st(5)
  4121ad:	mov    bh,0xff
  4121af:	inc    DWORD PTR [edi+edi*8]
  4121b2:	add    BYTE PTR [ecx-0x1527],ah
  4121b8:	and    edi,edi
  4121ba:	jmp    FWORD PTR [ecx]
  4121bc:	rcr    BYTE PTR [ecx-0x1],0xff
  4121c0:	cmp    bh,0xff
  4121c3:	std    
  4121c4:	push   ds
  4121c5:	sahf   
  4121c6:	inc    DWORD PTR [ebx-0x2e00004c]
  4121cc:	(bad)  
  4121cd:	ds int3 
  4121cf:	push   ebx
  4121d1:	int3   
  4121d2:	int3   
  4121d3:	jle    0x41223f
  4121d5:	out    dx,eax
  4121d6:	(bad)  
  4121d7:	inc    edi
  4121d9:	inc    DWORD PTR [eax]
  4121db:	pop    edi
  4121dc:	not    BYTE PTR [ecx-0x7d]
  4121df:	sbb    DWORD PTR [edx-0x1],0xffffffff
  4121e3:	sbb    ch,BYTE PTR [esi-0x37760006]
  4121e9:	int3   
  4121ea:	sub    DWORD PTR [ebx-0x48],0x12
  4121ee:	add    bh,bh
  4121f0:	push   ebp
  4121f1:	add    BYTE PTR [ecx-0x14ce56],cl
  4121f7:	(bad)  
  4121f8:	out    dx,al
  4121f9:	inc    DWORD PTR [eax]
  4121fb:	(bad)  
  4121fc:	cwde   
  4121fd:	js     0x4121ff
  4121ff:	(bad)  
  412200:	fadd   DWORD PTR [eax]
  412202:	add    BYTE PTR ds:0xffc987,bl
  412208:	adc    al,0x0
  41220a:	add    BYTE PTR [edi],ch
  41220c:	and    dh,al
  41220e:	mov    edi,edi
  412210:	jmp    0x84:0xae78ff89
  412217:	jmp    DWORD PTR [edi+edi*8]
  41221a:	dec    DWORD PTR [eiz*4-0xe00ffe4]
  412221:	inc    DWORD PTR [ebx-0xae10b2]
  412227:	(bad)  
  412228:	in     eax,dx
  412229:	mov    edi,edi
  41222b:	out    dx,eax
  41222c:	out    0x1a,al
  41222e:	int3   
  41222f:	call   DWORD PTR [esi-0x7d]
  412232:	add    BYTE PTR [esi],al
  412234:	or     cl,BYTE PTR [ecx-0x1]
  412237:	jmp    DWORD PTR [ebx-0x1]
  41223a:	mov    DWORD PTR [eax-0xff6c6b],esi
  412240:	jns    0x412241
  412242:	jmp    DWORD PTR [ecx+0x85c8]
  412248:	mov    al,ds:0x825ffff
  41224d:	sub    eax,0xff15ff83
  412252:	mov    DWORD PTR [esi],eax
  412254:	mov    ah,0x62
  412256:	int3   
  412257:	add    BYTE PTR [edi+edi*8-0x1],dl
  41225b:	shl    BYTE PTR [edi+0x23],0xff
  41225f:	jmp    DWORD PTR [ecx+0x2203ff00]
  412265:	push   esi
  412266:	inc    DWORD PTR [ebx+0x41ffff9c]
  41226c:	jl     0x4122b2
  41226e:	add    BYTE PTR [ebx+0x3affff13],al
  412274:	mov    edx,0xd9ff89f9
  412279:	cmp    edi,0x4c
  41227c:	ds idiv bh
  41227f:	mov    DWORD PTR [edi+0x4a00ff00],eax
  412285:	pop    edi
  412286:	inc    DWORD PTR [eax]
  412288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412289:	add    bh,bh
  41228b:	es pusha 
  41228d:	mov    dh,0x0
  41228f:	add    BYTE PTR [ebx],bl
  412291:	or     DWORD PTR [ecx-0x1a5da7],0xffffffff
  412298:	idiv   bh
  41229a:	call   DWORD PTR [edx-0x33ffb0ad]
  4122a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a1:	inc    DWORD PTR [eax]
  4122a3:	jecxz  0x41224d
  4122a5:	mov    bl,0x0
  4122a7:	add    BYTE PTR [edx-0x2ae90001],ah
  4122ad:	dec    esp
  4122ae:	add    DWORD PTR [eax],0xffffff97
  4122b1:	add    BYTE PTR [eax],al
  4122b3:	inc    ebx
  4122b5:	push   es
  4122b6:	add    bh,bh
  4122b8:	scas   eax,DWORD PTR es:[edi]
  4122b9:	(bad)  
  4122ba:	call   DWORD PTR [eax-0x22]
  4122bd:	cdq    
  4122be:	inc    DWORD PTR [eax]
  4122c0:	das    
  4122c1:	int3   
  4122c2:	and    DWORD PTR [edi-0x6e],0x26
  4122c6:	dec    DWORD PTR [ecx+0x74ccff3d]
  4122cc:	(bad)  
  4122cd:	imul   ecx,DWORD PTR [ecx-0x76ff6377],0x83e3cd51
  4122d7:	push   DWORD PTR [esi+0x54db0000]
  4122dd:	push   edx
  4122de:	dec    esp
  4122e0:	jmp    0x3b9922e4
  4122e5:	hlt    
  4122e6:	add    BYTE PTR [eax],al
  4122e8:	mov    edi,0x45cdffff
  4122ed:	xchg   esi,eax
  4122ee:	add    BYTE PTR [ebx-0x4cff0081],al
  4122f4:	enter  0xff6a,0xff
  4122f8:	call   0x3f38a6fc
  4122fd:	push   cs
  4122fe:	add    bh,bh
  412300:	jns    0xb70edb05
  412306:	add    BYTE PTR [eax],al
  412308:	outs   dx,DWORD PTR ds:[esi]
  412309:	add    ah,cl
  41230b:	neg    BYTE PTR [ebx-0x41337654]
  412311:	(bad)  
  412312:	dec    DWORD PTR [edi+0x64]
  412315:	mov    al,0x89
  412317:	sbb    DWORD PTR [edx],0x0
  41231a:	jmp    DWORD PTR [ebx+0x54]
  41231d:	sbb    eax,0x27ffff
  412322:	add    BYTE PTR [esp+ebp*1],bl
  412325:	ja     0x412327
  412327:	add    BYTE PTR [eax+eax*1],dh
  41232a:	add    BYTE PTR [edi-0x51],bh
  41232d:	repnz inc DWORD PTR [ebx+0x6a89ffca]
  412334:	xchg   esi,eax
  412335:	dec    eax
  412336:	dec    esp
  412338:	iret   
  412339:	inc    DWORD PTR [ebx-0x9aa0bc]
  41233f:	(bad)  
  412340:	mov    ebx,0x4316ffff
  412345:	in     al,0xff
  412347:	mov    DWORD PTR [edx+0x4308ff83],ecx
  41234d:	pop    ebp
  41234e:	(bad)  
  41234f:	push   esi
  412351:	(bad)  
  412352:	(bad)  
  412353:	mov    edi,0xff839c66
  412358:	sbb    al,0xff
  41235a:	(bad)  
  41235b:	in     al,dx
  41235c:	push   cs
  41235d:	sbb    eax,DWORD PTR [ebx-0x2101]
  412363:	mov    ebp,0xcc83e5d5
  412368:	in     eax,dx
  412369:	inc    DWORD PTR [ebx-0xa99fae]
  41236f:	sub    DWORD PTR [edi+edi*8-0x4328727d],0x0
  412377:	jmp    edi
  412379:	int3   
  41237a:	sub    DWORD PTR [ecx+edi*8],0xfffffffd
  41237e:	(bad)  
  41237f:	push   DWORD PTR [eax+eax*1-0x1]
  412383:	jb     0x412355
  412385:	mov    al,0x0
  412387:	adc    DWORD PTR [edx+0x0],0xffffffff
  41238b:	mov    bh,0x19
  41238d:	fdivr  st,st(7)
  41238f:	dec    DWORD PTR [esi+0x0]
  412392:	push   eax
  412394:	or     DWORD PTR [edi],0xffffff89
  412397:	mov    ebx,esi
  412399:	dec    esp
  41239b:	push   ds
  41239c:	hlt    
  41239d:	(bad)  
  41239e:	inc    DWORD PTR [eax]
  4123a0:	mov    ebp,0xdbfaff00
  4123a5:	jg     0x412373
  4123a7:	mov    DWORD PTR [ecx-0x1],eax
  4123aa:	and    DWORD PTR [eax+0xff99b9],0x21
  4123b1:	(bad)  
  4123b2:	(bad)  
  4123b3:	mov    esi,0xffe9d7
  4123b8:	and    al,0x83
  4123ba:	jmp    FWORD PTR [ecx-0x35]
  4123bd:	mov    bl,0xff
  4123bf:	add    BYTE PTR [edx+0x596800ff],bl
  4123c5:	aas    
  4123c6:	inc    DWORD PTR [eax]
  4123c8:	mov    eax,0xafbbff83
  4123cd:	jbe    0x4123cf
  4123cf:	or     DWORD PTR [ebx+0x67170000],0x4d
  4123d6:	(bad)  
  4123d7:	inc    DWORD PTR [edi-0x1a6d7700]
  4123dd:	(bad)  
  4123de:	int3   
  4123df:	add    BYTE PTR [ebx+0x0],bl
  4123e2:	jmp    FWORD PTR [edi-0x66]
  4123e5:	int3   
  4123e6:	add    bh,bh
  4123e8:	(bad)  
  4123e9:	(bad)  
  4123ea:	inc    DWORD PTR [edx-0x9]
  4123ed:	(bad)  
  4123ee:	dec    esp
  4123f0:	cdq    
  4123f1:	add    bh,bh
  4123f3:	std    
  4123f4:	or     edx,DWORD PTR [eax]
  4123f6:	dec    DWORD PTR [ecx-0xbff7cbc]
  4123fc:	push   ecx
  4123fd:	push   ss
  4123fe:	add    BYTE PTR [eax],al
  412400:	popa   
  412401:	add    BYTE PTR [eax],al
  412403:	dec    edx
  412404:	out    0xef,eax
  412406:	add    BYTE PTR [eax],al
  412408:	mov    dh,0xff
  41240a:	add    BYTE PTR [ebx],dl
  41240c:	adc    ah,BYTE PTR [edi+edi*8-0x1]
  412410:	sar    edi,cl
  412412:	mov    DWORD PTR [ecx+0x3a],esi
  412415:	cmp    ecx,esp
  412417:	add    BYTE PTR [edx+0x0],dh
  41241a:	dec    DWORD PTR [ecx+ebx*8+0x79]
  41241e:	add    bh,bh
  412420:	mov    esi,0xa9200ff
  412425:	pop    ebx
  412426:	or     DWORD PTR [ecx-0x3e00337a],0xffffffcd
  41242d:	mov    cl,0xff
  41242f:	call   DWORD PTR [edx]
  412431:	int3   
  412432:	xor    DWORD PTR [eax+0x83824b],0x34
  412439:	add    DWORD PTR [eax],0xfffffff3
  41243c:	dec    edx
  41243d:	sbb    BYTE PTR [ebx-0x5d00],al
  412443:	pop    eax
  412444:	fdivr  QWORD PTR [ebx-0x34]
  412447:	cmp    DWORD PTR [eax-0x1],0xffffff83
  41244b:	push   edi
  41244c:	enter  0xc8,0xff
  412450:	addr16 (bad) 
  412452:	call   DWORD PTR [ecx]
  412454:	cwde   
  412455:	aaa    
  412456:	add    bh,bh
  412458:	(bad)  
  41245a:	push   DWORD PTR [ebp+0xff0c48]
  412460:	adc    al,0x0
  412462:	mov    DWORD PTR [ecx-0x3300e5d3],edx
  412468:	clc    
  412469:	add    BYTE PTR [ebx+0x6d64d7],al
  41246f:	add    BYTE PTR [ecx],ch
  412471:	cmp    edi,0x4b
  412474:	push   bx
  412476:	add    bh,bh
  412478:	fdivp  st(7),st
  41247a:	(bad)  
  41247b:	jmp    0x412474
  41247d:	rol    BYTE PTR [ebx-0x7c3401],cl
  412483:	cld    
  412484:	mov    esp,0x800ff2c
  412489:	(bad)  
  41248a:	push   DWORD PTR [ebp+0xff6d43]
  412490:	adc    edi,edi
  412492:	(bad)  
  412493:	jnp    0x4124fa
  412495:	pop    esp
  412496:	inc    DWORD PTR [ebx-0x1976fff6]
  41249c:	or     dl,bh
  41249e:	inc    DWORD PTR [eax]
  4124a0:	(bad)  
  4124a1:	(bad)  
  4124a2:	call   DWORD PTR [edi+ebp*1]
  4124a5:	or     bh,bh
  4124a7:	call   DWORD PTR [esi]
  4124a9:	int3   
  4124aa:	or     edi,0x66
  4124ad:	jp     0x412432
  4124af:	inc    DWORD PTR [eax-0x77]
  4124b2:	dec    DWORD PTR [esi+0x1d]
  4124b5:	fmul   st,st(4)
  4124b7:	add    BYTE PTR [edi-0x310f7c01],dl
  4124bd:	cmp    bh,0xff
  4124c0:	push   ebx
  4124c1:	add    bh,bh
  4124c3:	repnz lahf 
  4124c5:	cmp    eax,0x8992ffff
  4124ca:	add    bl,cl
  4124cc:	sar    BYTE PTR [esi],0xff
  4124cf:	jmp    DWORD PTR [eax+0x3e6c00ff]
  4124d5:	dec    edx
  4124d6:	inc    DWORD PTR [ebx+0x6c008365]
  4124dc:	cmp    al,0x5f
  4124de:	mov    edi,edi
  4124e0:	pushf  
  4124e1:	inc    DWORD PTR [eax]
  4124e3:	or     DWORD PTR ds:0x15ffff35,edx
  4124e9:	int3   
  4124ea:	(bad)  
  4124eb:	clc    
  4124ec:	cld    
  4124ed:	ss mov edi,edi
  4124f0:	je     0x4124f2
  4124f2:	jmp    ecx
  4124f4:	mov    ah,0x7e
  4124f6:	cmp    edi,0x1
  4124f9:	add    BYTE PTR [eax],al
  4124fb:	ret    
  4124fc:	sahf   
  4124fd:	iret   
  4124fe:	add    bh,bh
  412500:	fcos   
  412502:	dec    DWORD PTR [ebp+0xff99fd]
  412508:	dec    eax
  412509:	int3   
  41250a:	add    BYTE PTR [eax-0xff5f44],bl
  412510:	pushf  
  412511:	dec    DWORD PTR [ecx-0xe6f21f]
  412517:	push   DWORD PTR [edx+0x508aff83]
  41251d:	mov    ah,0x0
  41251f:	add    BYTE PTR [esp+ecx*8-0x1dccb500],bh
  412526:	cmp    edi,0x12
  412529:	int3   
  41252a:	add    BYTE PTR [ecx-0x3335a6],dh
  412530:	mov    al,0xff
  412532:	push   DWORD PTR [edx+0xff808a]
  412538:	jno    0x4124bd
  41253a:	dec    DWORD PTR [esi-0x25]
  41253d:	std    
  41253e:	cmp    edi,0x6f
  412541:	inc    DWORD PTR [ebx-0x3336af]
  412547:	call   FWORD PTR [edx]
  412549:	add    bh,bh
  41254b:	ret    0xdc31
  41254e:	cmp    edi,0xffffffd6
  412551:	add    bh,bh
  412553:	popa   
  412554:	pop    esi
  412555:	dec    ecx
  412556:	(bad)  
  412557:	inc    DWORD PTR [ebx+0x0]
  41255a:	dec    DWORD PTR [ebx]
  41255c:	das    
  41255d:	cmp    edi,edi
  41255f:	add    al,bh
  412561:	add    BYTE PTR [eax],al
  412563:	test   eax,0xffff7e92
  412568:	fwait
  412569:	(bad)  
  41256a:	call   FWORD PTR [ebx-0x7c0090ae]
  412570:	pop    edx
  412571:	add    bh,bh
  412573:	mov    esi,0xff00c7a8
  412578:	xchg   edi,eax
  412579:	inc    DWORD PTR [eax]
  41257b:	add    al,0x34
  41257d:	dec    esp
  41257e:	add    DWORD PTR [eax],0xffffffe2
  412581:	int3   
  412582:	add    BYTE PTR [edx],bh
  412584:	adc    ecx,DWORD PTR [ebx]
  412586:	add    bh,bh
  412588:	xchg   ecx,eax
  412589:	mov    esp,ecx
  41258b:	xor    edi,DWORD PTR [edx+0x46]
  41258e:	dec    DWORD PTR [ecx-0xe33ff17]
  412594:	cmp    eax,eax
  412596:	(bad)  
  412597:	push   DWORD PTR [esi-0x6086007d]
  41259d:	out    dx,al
  41259e:	dec    esp
  4125a0:	push   ss
  4125a1:	inc    DWORD PTR [eax]
  4125a3:	jl     0x4125b9
  4125a5:	inc    esp
  4125a6:	or     DWORD PTR [ecx-0x7500ff44],0x7d
  4125ad:	push   edi
  4125ae:	inc    DWORD PTR [eax]
  4125b0:	cmp    edi,0x0
  4125b3:	pushf  
  4125b4:	pop    edx
  4125b5:	lods   eax,DWORD PTR ds:[esi]
  4125b6:	inc    DWORD PTR [eax]
  4125b8:	push   0x0
  4125ba:	push   esp
  4125bc:	adc    eax,0xb1ffff0d
  4125c1:	add    bh,bh
  4125c3:	repnz sbb esi,DWORD PTR [ebx+0x0]
  4125c7:	sub    DWORD PTR [eax+0x7d5effff],0xd
  4125ce:	inc    DWORD PTR [eax]
  4125d0:	or     edi,edi
  4125d2:	adc    DWORD PTR ds:0xfffdb0,0xffffffcb
  4125d9:	or     esp,0xffffffc5
  4125dc:	ins    BYTE PTR es:[edi],dx
  4125dd:	into   
  4125de:	add    DWORD PTR [eax],0xffffffe9
  4125e1:	add    bh,bh
  4125e3:	mov    esp,DWORD PTR [ebx-0x337cff55]
  4125e9:	inc    DWORD PTR [eax]
  4125eb:	sbb    DWORD PTR [ecx+0x32],0x89838383
  4125f2:	add    ch,cl
  4125f4:	cwde   
  4125f5:	cmp    bh,bh
  4125f7:	(bad)  
  4125f8:	fcos   
  4125fa:	push   DWORD PTR [eax]
  4125fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125fd:	gs mov edi,edi
  412600:	out    0x89,eax
  412602:	int3   
  412603:	mov    ebx,0x8300b907
  412608:	pop    ecx
  412609:	(bad)  
  41260a:	(bad)  
  41260b:	cmp    esp,esi
  41260d:	retf   0x8300
  412610:	jno    0x412611
  412612:	add    BYTE PTR [edx+ebp*8+0x6089004d],dh
  412619:	add    bh,bh
  41261b:	lock adc DWORD PTR [esi-0x9b7601],esi
  412622:	add    ah,cl
  412624:	or     BYTE PTR [ebp-0x7c140100],ah
  41262a:	jmp    FWORD PTR [ebx+0x34]
  41262d:	inc    ecx
  41262e:	(bad)  
  41262f:	jmp    DWORD PTR [esi-0x1]
  412632:	add    BYTE PTR [ebp-0xe],cl
  412635:	cmp    bh,0x0
  412638:	into   
  412639:	add    DWORD PTR [eax],0x58
  41263c:	shr    BYTE PTR [eax+eax*1-0x7c00707d],1
  412643:	popf   
  412644:	mov    bh,0x61
  412646:	(bad)  
  412647:	call   DWORD PTR [edx+0x0]
  41264a:	add    BYTE PTR [eax-0x3333c1ac],ch
  412650:	sar    bh,cl
  412652:	(bad)  
  412653:	jp     0x4126a2
  412655:	xor    BYTE PTR [eax],al
  412657:	call   FWORD PTR [edi-0x2ba10000]
  41265d:	cdq    
  41265e:	mov    edi,edi
  412660:	cdq    
  412661:	(bad)  
  412662:	dec    DWORD PTR [ebx]
  412664:	and    al,0xc9
  412666:	add    ah,cl
  412668:	adc    edi,edi
  41266a:	call   DWORD PTR [edi+eax*4]
  41266d:	les    eax,FWORD PTR [eax]
  41266f:	add    ch,dl
  412671:	(bad)  
  412672:	call   esp
  412674:	or     edx,DWORD PTR [ebx+0x230000]
  41267a:	add    BYTE PTR ds:0x83ff8226,dh
  412680:	push   edi
  412681:	dec    DWORD PTR [ecx+0x67bb44]
  412687:	int3   
  412688:	add    al,0xff
  41268a:	add    BYTE PTR [ebx],bh
  41268c:	call   0xccff:0xf5ffffe7
  412693:	shr    DWORD PTR [ebx+0x30],1
  412696:	add    bh,bh
  412698:	dec    edx
  412699:	(bad)  
  41269a:	(bad)  
  41269b:	inc    esp
  41269d:	xor    bh,bh
  41269f:	add    BYTE PTR [edi-0x1143ff01],al
  4126a5:	push   0xffac0089
  4126aa:	call   FWORD PTR [edi+ebp*1+0x440083ad]
  4126b1:	inc    DWORD PTR [eax]
  4126b3:	int3   
  4126b4:	mov    esi,0xcb00ffdb
  4126b9:	add    bh,bh
  4126bb:	lock lock js 0x4126bf
  4126bf:	add    BYTE PTR [esi-0x74ea0034],cl
  4126c5:	sti    
  4126c6:	or     DWORD PTR [ecx+0x5283ffd8],0x3
  4126cd:	jo     0x412652
  4126cf:	(bad)  
  4126d0:	inc    DWORD PTR [eax]
  4126d2:	add    BYTE PTR [esi+edi*8+0x58],ah
  4126d6:	(bad)  
  4126d7:	jmp    FWORD PTR [ebx-0x5107ff7d]
  4126dd:	test   BYTE PTR [eax],0x83
  4126e0:	mov    cs,esp
  4126e2:	add    BYTE PTR [eax+0x49],dl
  4126e5:	add    al,0x83
  4126e7:	jmp    DWORD PTR [edx]
  4126e9:	add    bh,bh
  4126eb:	and    esi,ebp
  4126ed:	mov    al,0x0
  4126ef:	inc    DWORD PTR [edi+edi*8]
  4126f2:	dec    DWORD PTR [edi+0x3d]
  4126f5:	xchg   DWORD PTR [eax],eax
  4126f7:	call   FWORD PTR [ecx-0x1]
  4126fa:	dec    DWORD PTR [edi]
  4126fc:	jb     0x412718
  4126fe:	add    DWORD PTR [eax],0xffffffa4
  412701:	add    DWORD PTR [eax],0x58
  412704:	fild   WORD PTR [ebx-0x7d]
  412707:	int3   
  412708:	inc    DWORD PTR ss:[eax]
  41270b:	and    DWORD PTR [edx-0x60003309],esi
  412711:	add    BYTE PTR [ebx+0xdccdfd],al
  412717:	(bad)  
  412718:	cmp    edi,edi
  41271a:	(bad)  
  41271b:	jmp    0x412706
  41271d:	sbb    edi,edi
  41271f:	adc    DWORD PTR [edi-0x77],0xffffff89
  412723:	sub    al,0x14
  412725:	xor    eax,0x1dff83
  41272a:	dec    DWORD PTR [eax]
  41272c:	pushf  
  41272d:	pop    ebp
  41272e:	cmp    edi,0xffffffa0
  412731:	inc    DWORD PTR [eax]
  412733:	inc    ebx
  412734:	cmp    BYTE PTR [eax+eax*1-0x77],dl
  412738:	test   BYTE PTR [ecx-0x77d89d34],0x89
  41273f:	add    BYTE PTR [ebx+0xefe8300],ch
  412745:	je     0x412747
  412747:	int3   
  412748:	sub    al,0x83
  41274a:	add    cl,bl
  41274c:	adc    ebx,DWORD PTR [esi]
  41274e:	add    BYTE PTR [eax],al
  412750:	push   0xffffffff
  412752:	call   DWORD PTR [ebx-0x26]
  412755:	or     edi,edi
  412757:	int3   
  412758:	adc    bh,bh
  41275a:	(bad)  
  41275b:	sti    
  41275c:	ja     0x412783
  41275e:	inc    DWORD PTR [eax]
  412760:	push   es
  412761:	(bad)  
  412762:	dec    DWORD PTR [ecx+0xb507]
  412768:	mov    WORD PTR [eax],es
  41276a:	call   DWORD PTR ds:0xcc832f12
  412770:	scas   eax,DWORD PTR es:[edi]
  412771:	add    ah,cl
  412773:	cmp    bl,bl
  412775:	(bad)  
  412779:	add    BYTE PTR [eax],al
  41277b:	pop    es
  41277c:	mov    dh,0x62
  41277e:	(bad)  
  41277f:	jmp    FWORD PTR [ebx-0x7aad0001]
  412785:	(bad)  
  412787:	xor    DWORD PTR [ecx+0x5b870083],0x28
  41278e:	inc    DWORD PTR [eax]
  412790:	das    
  412791:	inc    DWORD PTR [ebx-0x30c11a]
  412797:	add    BYTE PTR [ebx-0x19a30100],al
  41279d:	jmp    0x41279e
  41279f:	add    BYTE PTR [esi],cl
  4127a1:	int3   
  4127a2:	adc    DWORD PTR [ebx],0xffffffd4
  4127a5:	jmp    0xa400:0xffe40000
  4127ac:	mov    bl,0x8e
  4127ae:	add    BYTE PTR [ecx-0x17ff008e],cl
  4127b4:	cmp    DWORD PTR [esi+0x0],ebx
  4127b7:	dec    DWORD PTR [ebx]
  4127b9:	add    DWORD PTR [eax],0x5d
  4127bc:	mov    bh,0xe8
  4127be:	or     esp,0x5d
  4127c1:	add    bh,bh
  4127c3:	xor    eax,0xe5da
  4127c8:	fild   WORD PTR [eax]
  4127ca:	(bad)  
  4127cb:	cmp    al,ch
  4127cd:	xchg   ebp,eax
  4127ce:	int3   
  4127cf:	add    BYTE PTR [esi+0x0],ch
  4127d2:	add    ecx,0x9
  4127d5:	inc    esi
  4127d6:	(bad)  
  4127d7:	jmp    FWORD PTR [ebx+0x712dffff]
  4127dd:	mov    esi,0x9483ff
  4127e2:	add    BYTE PTR [esi],ah
  4127e4:	and    al,0x62
  4127e6:	(bad)  
  4127e7:	jmp    esi
  4127e9:	add    DWORD PTR [ebx-0x51d10e],0xffffff89
  4127f0:	pop    ebp
  4127f1:	inc    DWORD PTR [eax]
  4127f3:	or     BYTE PTR [ecx-0x6c7c0045],0x83
  4127fa:	add    dl,al
  4127fc:	adc    DWORD PTR [ebp-0x77],0xffffffcc
  412800:	loopne 0x412801
  412802:	inc    ebp
  412804:	cli    
  412805:	in     al,0x0
  412807:	(bad)  
  412808:	mov    esi,0x9f1883ff
  41280d:	hlt    
  41280e:	inc    DWORD PTR [ebx-0x5effff54]
  412814:	(bad)  
  412815:	ins    DWORD PTR es:[edi],dx
  412816:	add    BYTE PTR [ebx+0x48890079],al
  41281c:	aas    
  41281d:	sub    edi,edi
  41281f:	add    BYTE PTR ds:0x9d5ffff,al
  412825:	(bad)  
  412826:	dec    esp
  412828:	popa   
  412829:	add    BYTE PTR [ebx+0x2a0e35],al
  41282f:	int3   
  412830:	xchg   esp,eax
  412831:	add    DWORD PTR [ebx-0x29c522],0x0
  412838:	and    al,0xff
  41283a:	mov    DWORD PTR [eax-0x10],ebx
  41283d:	inc    edx
  41283e:	inc    DWORD PTR [eax]
  412840:	xor    ecx,esp
  412842:	add    cl,al
  412844:	and    BYTE PTR [esi],ch
  412846:	inc    DWORD PTR [eax]
  412848:	xchg   esp,eax
  412849:	(bad)  
  41284a:	call   FWORD PTR [edx+edi*4]
  41284d:	int    0x83
  41284f:	call   DWORD PTR [edi+0x0]
  412852:	and    DWORD PTR [edx],0xffffffcd
  412855:	push   ds
  412856:	(bad)  
  412857:	dec    DWORD PTR [esi-0x34]
  41285a:	sbb    DWORD PTR [edx-0x3],0xffffffbd
  41285e:	dec    DWORD PTR [ecx+0x2889ff45]
  412864:	daa    
  412865:	fwait
  412866:	cmp    edi,0xf
  412869:	add    bh,bh
  41286b:	xor    edi,DWORD PTR [edx]
  41286d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41286e:	add    BYTE PTR [ebx+0x49ffffad],al
  412874:	mov    bl,ch
  412876:	add    DWORD PTR [eax],0xffffffe8
  412879:	(bad)  
  41287a:	(bad)  
  41287b:	(bad)  
  41287d:	ins    DWORD PTR es:[edi],dx
  41287e:	inc    DWORD PTR [eax]
  412880:	sub    al,BYTE PTR [ebx+0x3f0034cc]
  412886:	inc    DWORD PTR [eax]
  412888:	inc    ecx
  412889:	(bad)  
  41288a:	push   DWORD PTR [esi-0x77]
  41288d:	repnz add BYTE PTR [eax],al
  412890:	and    DWORD PTR [ebx-0x3a5b2601],eax
  412896:	or     esp,0x5
  412899:	(bad)  
  41289a:	inc    DWORD PTR [esp+esi*2+0x48]
  41289e:	inc    DWORD PTR [eax]
  4128a0:	cmp    bh,0x0
  4128a3:	sbb    esi,ecx
  4128a5:	cmp    bh,bh
  4128a7:	add    BYTE PTR [edi-0x4bb00034],ah
  4128ad:	inc    edx
  4128ae:	inc    DWORD PTR [eax]
  4128b0:	mov    bh,bh
  4128b2:	add    al,dl
  4128b4:	push   cs
  4128b5:	jg     0x4128b7
  4128b7:	add    bh,dl
  4128b9:	(bad)  
  4128ba:	inc    DWORD PTR [ebp-0x7c0084d9]
  4128c0:	or     edi,edi
  4128c2:	(bad)  
  4128c3:	mov    eax,0x56a4
  4128c8:	inc    edi
  4128c9:	(bad)  
  4128ca:	inc    DWORD PTR [edi-0xff18a6]
  4128d0:	mov    ds:0x3c33ffff,al
  4128d5:	xchg   esp,eax
  4128d6:	inc    DWORD PTR [eax]
  4128d8:	ja     0x412863
  4128da:	add    DWORD PTR [ecx],0xffffffa8
  4128dd:	inc    ecx
  4128de:	mov    edi,edi
  4128e0:	mov    ds:0x5c6589ff,eax
  4128e5:	data16 add ah,cl
  4128e8:	dec    esp
  4128e9:	inc    DWORD PTR [eax]
  4128eb:	lea    ebx,[edi+0x3d]
  4128ee:	inc    DWORD PTR [ebx+0x3c89002d]
  4128f4:	ret    0xccbd
  4128f7:	jmp    FWORD PTR [edi-0x1]
  4128fa:	add    BYTE PTR [edi-0x33],dh
  4128fd:	ror    esp,0xcc
  412900:	mov    edx,0x38ceff83
  412905:	pop    ds
  412906:	add    bh,bh
  412908:	fcmovne st,st(4)
  41290a:	jmp    FWORD PTR [ebx+0x74]
  41290d:	mov    eax,ds:0x83c9ff00
  412912:	add    BYTE PTR [eax+esi*8-0x6f76ff9f],bh
  412919:	inc    DWORD PTR [eax]
  41291b:	ret    0x724d
  41291e:	inc    DWORD PTR [eax]
  412920:	fwait
  412921:	add    ah,cl
  412923:	int3   
  412924:	jl     0x4128d6
  412926:	add    ah,cl
  412928:	enter  0xff,0x3c
  41292c:	ins    BYTE PTR es:[edi],dx
  41292d:	mov    ds:0xcc9c8983,eax
  412932:	add    BYTE PTR ds:0x8983becf,ch
  412938:	icebp  
  412939:	dec    esp
  41293b:	in     al,dx
  41293c:	pop    ebx
  41293d:	dec    ebx
  41293e:	inc    DWORD PTR [eax]
  412940:	jbe    0x412941
  412942:	or     DWORD PTR [edx],0x15
  412945:	ret    0xff
  412948:	xchg   ebp,eax
  412949:	inc    DWORD PTR [eax]
  41294b:	pop    eax
  41294c:	or     al,0x52
  41294e:	add    BYTE PTR [ebx+0x5100ff36],al
  412954:	sbb    esi,DWORD PTR [edi]
  412956:	add    BYTE PTR [ebx-0x4007c9f],al
  41295c:	inc    ecx
  41295d:	icebp  
  41295e:	inc    DWORD PTR [eax]
  412960:	xchg   edx,eax
  412961:	(bad)  
  412962:	call   DWORD PTR [eax-0x76]
  412965:	mov    ds:0xbe0000,eax
  41296a:	jmp    FWORD PTR [edx]
  41296c:	dec    BYTE PTR [edx-0x1]
  41296f:	int3   
  412970:	pop    es
  412971:	int3   
  412972:	push   DWORD PTR [ecx+ecx*1+0x740083bd]
  412979:	int3   
  41297a:	add    BYTE PTR [edx],ch
  41297c:	push   eax
  41297d:	push   ds
  41297e:	add    BYTE PTR [eax],al
  412980:	cmp    DWORD PTR [eax],eax
  412982:	(bad)  
  412983:	cmp    ch,bh
  412985:	dec    edi
  412986:	add    BYTE PTR [ebx+0x6ff009c],al
  41298c:	jmp    0xff83:0x500cceb
  412993:	mov    dl,0xf
  412995:	push   edx
  412996:	add    DWORD PTR [eax],0x72
  412999:	dec    esp
  41299b:	repnz adc ecx,DWORD PTR [edx+0x970000]
  4129a2:	add    ch,dh
  4129a4:	cwde   
  4129a5:	adc    eax,DWORD PTR [eax]
  4129a7:	add    BYTE PTR [eax],al
  4129a9:	inc    DWORD PTR [eax]
  4129ab:	mov    ebx,0x83894f9c
  4129b0:	adc    bh,bh
  4129b2:	dec    DWORD PTR [ebx+0x39]
  4129b5:	data16 add bh,bh
  4129b8:	into   
  4129b9:	int3   
  4129ba:	mov    ebp,esi
  4129bc:	clc    
  4129bd:	add    al,0xff
  4129bf:	and    DWORD PTR [edi+edi*8+0x779d10cc],0x0
  4129c7:	jmp    FWORD PTR [ecx]
  4129c9:	(bad)  
  4129ca:	jmp    FWORD PTR [edi]
  4129cc:	popf   
  4129cd:	jmp    0x4129cf
  4129cf:	mov    DWORD PTR [eax],edi
  4129d1:	inc    DWORD PTR [eax]
  4129d3:	pusha  
  4129d4:	dec    eax
  4129d5:	inc    ebp
  4129d6:	add    bh,bh
  4129d8:	lods   al,BYTE PTR ds:[esi]
  4129d9:	(bad)  
  4129da:	call   DWORD PTR [esi+eiz*2-0x6a33ff9c]
  4129e1:	inc    DWORD PTR [eax]
  4129e3:	popf   
  4129e4:	retf   
  4129e5:	test   DWORD PTR [eax],0x83ffcacc
  4129eb:	cwde   
  4129ec:	out    dx,eax
  4129ed:	cmc    
  4129ee:	int3   
  4129ef:	add    BYTE PTR [edi-0x3a11ff01],dh
  4129f5:	pop    ebx
  4129f6:	add    DWORD PTR [ebx+0x67ffff11],0xffffffd7
  4129fd:	clc    
  4129fe:	int3   
  4129ff:	add    BYTE PTR [eax+eax*1],cl
  412a02:	push   DWORD PTR [ebx-0x76ff5413]
  412a08:	mov    dl,0x83
  412a0a:	int3   
  412a0b:	(bad)  
  412a0c:	jecxz  0x412a70
  412a0e:	add    BYTE PTR [ebx-0x1d3300e6],al
  412a14:	or     dh,BYTE PTR [edi-0x1]
  412a17:	call   FWORD PTR [edx-0x22c60001]
  412a1d:	inc    esp
  412a1e:	mov    edi,edi
  412a20:	test   al,0xff
  412a22:	jmp    FWORD PTR [ecx+0xf]
  412a25:	mov    edi,0x4d0000
  412a2a:	jmp    FWORD PTR [edx]
  412a2c:	jmp    0xe2412aa8
  412a31:	add    BYTE PTR [eax],al
  412a33:	popf   
  412a34:	pop    es
  412a35:	push   ss
  412a36:	inc    DWORD PTR [eax]
  412a38:	mov    cl,0xff
  412a3a:	dec    eax
  412a3c:	cmp    al,0x80
  412a3e:	inc    DWORD PTR [eax]
  412a40:	jle    0x4129c5
  412a42:	inc    DWORD PTR [ebx+0xa]
  412a45:	mov    esp,0xffeb0083
  412a4a:	add    BYTE PTR [edi],dl
  412a4c:	ins    DWORD PTR es:[edi],dx
  412a4d:	into   
  412a4e:	mov    edi,edi
  412a50:	push   es
  412a51:	mov    DWORD PTR [eax],eax
  412a53:	or     dl,BYTE PTR [eax+edx*8-0x77]
  412a57:	dec    ebp
  412a59:	add    bh,bh
  412a5b:	test   eax,0xffcaae
  412a60:	sbb    bh,bh
  412a62:	push   DWORD PTR [edi]
  412a64:	test   DWORD PTR [edx-0x1],esi
  412a67:	push   DWORD PTR [esi-0x1]
  412a6a:	(bad)  
  412a6b:	mov    edx,0x83ff8210
  412a70:	call   0xefa72975
  412a75:	rol    BYTE PTR [eax],cl
  412a77:	add    DWORD PTR [ecx],0xffffffff
  412a7a:	inc    DWORD PTR [esi]
  412a7c:	adc    al,0xfa
  412a7e:	(bad)  
  412a7f:	jmp    DWORD PTR [edi+0x39300000]
  412a85:	out    0xff,eax
  412a87:	add    bl,dl
  412a89:	add    bh,bh
  412a8b:	mov    al,0x6d
  412a8d:	push   edi
  412a8e:	dec    esp
  412a90:	cmp    edi,edi
  412a92:	add    dl,bl
  412a94:	sub    dl,al
  412a96:	(bad)  
  412a97:	call   FWORD PTR [ebp-0x2f590100]
  412a9d:	outs   dx,DWORD PTR ds:[esi]
  412a9e:	add    DWORD PTR [eax],0xffffffb5
  412aa1:	(bad)  
  412aa2:	dec    DWORD PTR [ebp-0x6]
  412aa5:	outs   dx,DWORD PTR ds:[esi]
  412aa6:	add    DWORD PTR [eax],0xffffffef
  412aa9:	inc    DWORD PTR [eax]
  412aab:	mov    bl,0x51
  412aad:	fdivp  st(7),st
  412aaf:	add    BYTE PTR [edx-0x34380100],dh
  412ab5:	ret    0xff
  412ab8:	stos   DWORD PTR es:[edi],eax
  412ab9:	add    bh,bh
  412abb:	ficom  WORD PTR [edx+0xf]
  412abe:	inc    DWORD PTR [eax]
  412ac0:	clc    
  412ac1:	cmp    edi,0xffffffdc
  412ac4:	cmp    BYTE PTR [edi-0x597c01],0x83
  412acb:	lds    edx,FWORD PTR [ecx]
  412acd:	jl     0x412a58
  412acf:	add    BYTE PTR [edx-0x1],al
  412ad2:	call   FWORD PTR [ebx-0x7cff0bd8]
  412ad8:	push   ebp
  412ad9:	inc    DWORD PTR [eax]
  412adb:	jmp    0x86:0x89f319
  412ae2:	mov    DWORD PTR [edi+0x55],eax
  412ae5:	test   BYTE PTR [eax],0xff
  412ae8:	clc    
  412ae9:	(bad)  
  412aea:	call   DWORD PTR [edi]
  412aec:	stc    
  412aed:	test   DWORD PTR [eax],eax
  412aef:	add    BYTE PTR [eax],ah
  412af1:	int3   
  412af2:	mov    ebp,eax
  412af4:	(bad)  
  412af5:	or     ecx,esp
  412af7:	mov    DWORD PTR [eax+eax*1+0x54691500],ebp
  412afe:	add    bh,bh
  412b00:	ret    0xccff
  412b03:	imul   eax,DWORD PTR [ebp+0x640000e5],0xffffffff
  412b0a:	add    bl,dh
  412b0c:	dec    ebx
  412b0d:	adc    al,BYTE PTR [eax]
  412b0f:	(bad)  
  412b10:	cld    
  412b11:	add    BYTE PTR [eax],al
  412b13:	ror    DWORD PTR [esi],cl
  412b15:	in     eax,0x0
  412b17:	adc    DWORD PTR [eax],0x0
  412b1a:	(bad)  
  412b1b:	cld    
  412b1c:	mov    dh,0x81
  412b1e:	inc    DWORD PTR [eax]
  412b20:	mov    edi,0x2fbeff00
  412b25:	cmp    eax,0x894aff00
  412b2a:	mov    esp,esp
  412b2c:	dec    BYTE PTR [esi-0x1]
  412b2f:	add    BYTE PTR [ecx+ecx*4],bl
  412b32:	inc    edi
  412b34:	pop    ds
  412b35:	adc    bh,bh
  412b37:	call   FWORD PTR [esi+0x2682ffff]
  412b3d:	pop    eax
  412b3e:	inc    DWORD PTR [eax]
  412b40:	or     al,0xcc
  412b42:	add    BYTE PTR [edi+edx*1-0x3],dl
  412b46:	(bad)  
  412b47:	dec    DWORD PTR [edx+0x33a48300]
  412b4d:	xor    al,0x83
  412b4f:	add    BYTE PTR [edx+0xfdcffff],bl
  412b55:	pop    ebx
  412b56:	add    BYTE PTR [ebx-0x49ffff88],al
  412b5c:	ret    
  412b5d:	xchg   esi,eax
  412b5e:	add    BYTE PTR [eax],al
  412b60:	jb     0x412b61
  412b62:	add    DWORD PTR [ecx-0x6d],0xffffffc4
  412b66:	int3   
  412b67:	mov    esp,ebx
  412b69:	inc    DWORD PTR [eax]
  412b6b:	mov    WORD PTR [ecx+ebp*8],?
  412b6e:	add    bh,bh
  412b70:	(bad)  
  412b71:	inc    DWORD PTR [ebx-0x7c500858]
  412b77:	add    BYTE PTR [ebx+0x0],bh
  412b7a:	inc    DWORD PTR [ebp-0x46]
  412b7d:	sbb    edi,edi
  412b7f:	(bad)  
  412b80:	mov    ecx,0x1ac1ff00
  412b85:	sar    edi,cl
  412b87:	call   FWORD PTR [ebx+0x3cf00ff]
  412b8d:	fwait
  412b8e:	inc    DWORD PTR [eax]
  412b90:	and    bh,bh
  412b92:	mov    DWORD PTR [edi+edx*1-0x67],ecx
  412b96:	dec    esp
  412b98:	(bad)  
  412b9b:	xchg   edx,eax
  412b9c:	daa    
  412b9d:	mov    esi,0xff74ff00
  412ba2:	mov    DWORD PTR [edx],edx
  412ba4:	or     BYTE PTR [ecx-0x1],bl
  412ba7:	add    DWORD PTR [edx-0x1],0x0
  412bab:	cmp    edx,DWORD PTR ds:0x3e00005f
  412bb1:	add    BYTE PTR [eax],al
  412bb3:	jmp    0x412be0
  412bb5:	ror    esp,1
  412bb7:	cmp    DWORD PTR [edx-0x444e0100],0xffffffeb
  412bbe:	dec    DWORD PTR [ecx-0x4e00ff41]
  412bc4:	ret    
  412bc5:	jbe    0x412bc6
  412bc7:	push   DWORD PTR [ecx-0x34]
  412bca:	and    esp,0x32
  412bcd:	or     al,0xcc
  412bcf:	mov    DWORD PTR [eax-0x1],ebx
  412bd2:	int3   
  412bd3:	jne    0x412b69
  412bd5:	adc    al,0xff
  412bd7:	int3   
  412bd8:	(bad)  
  412bd9:	inc    DWORD PTR [ebx-0xcfaf32]
  412bdf:	mov    DWORD PTR [ebx+0x40340089],esi
  412be5:	mov    esi,0xff6a8900
  412bea:	add    al,al
  412bec:	push   edx
  412bed:	add    DWORD PTR [eax],eax
  412bef:	add    BYTE PTR [esi+0x5eebffcc],al
  412bf5:	pop    edx
  412bf6:	add    DWORD PTR [ebx+0x77890075],0x48
  412bfd:	aad    0xff
  412bff:	(bad)  
  412c00:	jnp    0x412c01
  412c02:	inc    DWORD PTR [eax+eiz*1-0x53003336]
  412c09:	(bad)  
  412c0a:	jmp    DWORD PTR [esi+esi*1]
  412c0d:	jge    0x412c0f
  412c0f:	jmp    edi
  412c11:	mov    DWORD PTR [ebx-0x762af00b],eax
  412c17:	add    BYTE PTR [ebx+eax*4],ch
  412c1a:	call   edi
  412c1c:	push   ecx
  412c1d:	test   BYTE PTR [eax],0xff
  412c20:	cmp    eax,0x5470cccc
  412c25:	add    al,0xff
  412c27:	add    BYTE PTR [ecx-0x85c7c7d],bl
  412c2d:	and    eax,DWORD PTR [eax]
  412c2f:	inc    ebx
  412c31:	add    bh,bh
  412c33:	stos   DWORD PTR es:[edi],eax
  412c34:	call   0x8a422be8
  412c39:	(bad)  
  412c3a:	inc    DWORD PTR [ebp+edx*1-0x2400761f]
  412c41:	cmp    edi,0xffffffec
  412c44:	fsubr  QWORD PTR [ebx-0x33e30000]
  412c4a:	add    BYTE PTR [edx],cl
  412c4c:	mov    edi,0x94ccff9b
  412c51:	(bad)  
  412c52:	jmp    FWORD PTR [edi+0x513a]
  412c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c59:	inc    DWORD PTR [ebx-0xcb5d2c]
  412c5f:	mov    esp,esi
  412c61:	(bad)  
  412c62:	inc    DWORD PTR [eax]
  412c64:	int3   
  412c65:	mov    ebp,0x4fff83
  412c6a:	add    DWORD PTR [esi],0x18
  412c6d:	cmp    DWORD PTR [ebx+0xffe200],eax
  412c73:	call   0xff2d:0x59d0
  412c7a:	inc    DWORD PTR [edi-0xff362e]
  412c80:	das    
  412c81:	add    BYTE PTR [ebx-0xecaa8a],al
  412c87:	or     ebp,0x0
  412c8a:	adc    DWORD PTR [edi-0xf3b3],0x2a
  412c91:	(bad)  
  412c92:	push   DWORD PTR [esi]
  412c94:	push   0x7bff83ca
  412c99:	add    BYTE PTR [eax],al
  412c9b:	xor    al,0x7e
  412c9d:	cmp    edi,0x0
  412ca0:	xor    bh,bh
  412ca2:	mov    DWORD PTR [eax],esi
  412ca4:	rcr    al,0x0
  412ca7:	(bad)  
  412ca8:	jns    0x412c2d
  412caa:	call   FWORD PTR [edi+edx*4-0x3e7c00a1]
  412cb1:	inc    DWORD PTR [eax]
  412cb3:	popf   
  412cb4:	xchg   ebx,eax
  412cb5:	mov    ebp,0x835183ff
  412cba:	add    BYTE PTR [edx-0x7c],bl
  412cbd:	and    eax,0x83c9ccff
  412cc2:	sbb    DWORD PTR [edi-0x21],0x3f
  412cc6:	inc    DWORD PTR [eax]
  412cc8:	scas   al,BYTE PTR es:[edi]
  412cc9:	add    bh,bh
  412ccb:	sbb    DWORD PTR [ebp+0x22cccc20],eax
  412cd1:	(bad)  
  412cd2:	inc    DWORD PTR [esi-0x7600b903]
  412cd8:	int3   
  412cd9:	inc    DWORD PTR [eax]
  412cdb:	inc    esp
  412cdc:	jecxz  0x412d27
  412cde:	cmp    edi,0x73
  412ce1:	add    bh,bh
  412ce3:	addr16 sahf 
  412ce5:	mov    edi,?
  412ce7:	add    BYTE PTR [ecx],ah
  412ce9:	mov    DWORD PTR [eax],eax
  412ceb:	lods   al,BYTE PTR ds:[esi]
  412cec:	repnz popa 
  412cee:	(bad)  
  412cef:	inc    ebx
  412cf1:	add    BYTE PTR [eax],al
  412cf3:	adc    BYTE PTR [edx+edx*4],cl
  412cf6:	(bad)  
  412cf7:	jmp    DWORD PTR [ecx+0x0]
  412cfa:	add    bl,dh
  412cfc:	cld    
  412cfd:	inc    ebp
  412cfe:	(bad)  
  412cff:	call   FWORD PTR [ebx-0x77]
  412d02:	add    edi,0x48
  412d05:	or     DWORD PTR [eax],eax
  412d07:	inc    DWORD PTR [ebx+0x0]
  412d0a:	push   DWORD PTR [ebx+0x61]
  412d0d:	dec    esp
  412d0e:	add    ah,cl
  412d10:	fild   DWORD PTR [eax]
  412d12:	add    DWORD PTR [esi+edx*1],0xffffffcc
  412d16:	add    BYTE PTR [ebx+0x2d00ff99],al
  412d1c:	rcl    DWORD PTR [ecx-0xbfff01],0x0
  412d23:	addr16 pusha 
  412d25:	fdivp  st(7),st
  412d27:	call   DWORD PTR [eax-0x78dc0000]
  412d2d:	inc    DWORD PTR [bp+di-0x7c43]
  412d32:	jmp    FWORD PTR [esi]
  412d34:	rcl    ebp,cl
  412d36:	dec    DWORD PTR [ecx-0x1000093]
  412d3c:	or     al,0x8d
  412d3e:	(bad)  
  412d3f:	call   FWORD PTR [eax+eax*1-0x1]
  412d43:	xchg   esp,eax
  412d44:	inc    esi
  412d45:	inc    esi
  412d46:	dec    DWORD PTR [ecx+0x4dffffbc]
  412d4c:	dec    edx
  412d4d:	test   BYTE PTR [eax],al
  412d4f:	cmp    DWORD PTR [edx+0x0],0xffffffcc
  412d53:	retf   0xa8d0
  412d56:	(bad)  
  412d57:	jmp    DWORD PTR [edx-0x4880100]
  412d5d:	icebp  
  412d5e:	(bad)  
  412d5f:	inc    DWORD PTR [edi-0x6f89ff7d]
  412d65:	mov    al,ds:0xff23ff00
  412d6a:	xor    eax,0xffffff83
  412d6d:	dec    ebp
  412d6e:	add    bh,bh
  412d70:	imul   edi,edi,0x0
  412d73:	xchg   DWORD PTR [ecx+0x7],ebx
  412d76:	add    DWORD PTR [eax],0x8
  412d79:	inc    DWORD PTR [ebx+0x2ff29b]
  412d7f:	dec    DWORD PTR [edi+edi*8]
  412d82:	(bad)  
  412d83:	jnp    0x412d92
  412d85:	pop    esp
  412d86:	mov    edi,edi
  412d88:	cmc    
  412d89:	add    bh,bh
  412d8b:	mov    ds:0x89751c,al
  412d90:	call   0x443410
  412d95:	call   0x401e50
  412d9a:	push   0x42af70
  412d9f:	push   0x438040
  412da4:	call   0x41a560
  412da9:	push   0x431ee0
  412dae:	call   0x402fe0
  412db3:	push   0x18e
  412db8:	push   0x433c60
  412dbd:	call   0x41f660
  412dc2:	add    esp,0x14
  412dc5:	push   0x0
  412dc7:	push   0x0
  412dc9:	call   DWORD PTR ds:0x44400c
  412dcf:	xor    eax,eax
  412dd1:	ret    
  412dd2:	int3   
  412dd3:	int3   
  412dd4:	int3   
  412dd5:	int3   
  412dd6:	int3   
  412dd7:	int3   
  412dd8:	int3   
  412dd9:	int3   
  412dda:	int3   
  412ddb:	int3   
  412ddc:	int3   
  412ddd:	int3   
  412dde:	int3   
  412ddf:	int3   
  412de0:	(bad)  
  412de1:	(bad)  
  412de3:	mov    ebx,0xccceffd4
  412de8:	inc    DWORD PTR [eax-0x425e7d]
  412dee:	sbb    edi,edi
  412df0:	add    BYTE PTR [edi-0xcdc300],bl
  412df6:	into   
  412df7:	cmp    edi,0xffffffb8
  412dfa:	int3   
  412dfb:	retf   0x89e0
  412dfe:	dec    ebp
  412dff:	add    BYTE PTR [eax],al
  412e01:	xchg   edi,eax
  412e02:	(bad)  
  412e03:	jp     0x412da5
  412e05:	jmp    FWORD PTR [edx]
  412e07:	inc    DWORD PTR [ebx+0x7c20cc5e]
  412e0d:	add    DWORD PTR [edi],0x0
  412e10:	add    BYTE PTR [edi+edi*8-0x1c008ca5],cl
  412e17:	(bad)  
  412e18:	jmp    DWORD PTR [ebp+0xccca89]
  412e1e:	retf   0xffff
  412e21:	mov    ecx,0xffd11cff
  412e26:	sti    
  412e27:	add    bh,bh
  412e29:	sbb    cl,BYTE PTR [ecx-0x200849d]
  412e2f:	add    BYTE PTR [eax],al
  412e31:	xlat   BYTE PTR ds:[ebx]
  412e32:	add    DWORD PTR [ebx+ebx*8-0x1],0xe
  412e37:	mov    DWORD PTR [ebx-0x580bff47],eax
  412e3d:	mov    DWORD PTR [edi],ecx
  412e3f:	(bad)  
  412e40:	jmp    DWORD PTR [esi-0x25a600]
  412e46:	(bad)  
  412e47:	int3   
  412e48:	add    bh,ch
  412e4a:	add    BYTE PTR ds:0xcce100d1,ch
  412e50:	add    BYTE PTR [eax+eax*1+0x5e832459],dl
  412e57:	(bad)  
  412e58:	push   DWORD PTR [edi-0x1]
  412e5b:	ss sub ecx,esp
  412e5e:	cmp    eax,0xffa989ff
  412e63:	dec    ebp
  412e64:	pusha  
  412e65:	jmp    DWORD PTR [ecx+0x0]
  412e68:	push   DWORD PTR [ebx]
  412e6a:	add    BYTE PTR [edi+0x17cce1],ch
  412e70:	add    BYTE PTR [esi],dh
  412e72:	jmp    FWORD PTR [edx+0x3a]
  412e75:	call   DWORD PTR [ebx-0x1]
  412e78:	add    BYTE PTR [eax-0x1],al
  412e7b:	aam    0xae
  412e7d:	add    BYTE PTR [eax-0x973400],dh
  412e83:	sar    DWORD PTR [edi+0x0],1
  412e86:	dec    esi
  412e87:	(bad)  
  412e88:	push   DWORD PTR [edi]
  412e8a:	sbb    DWORD PTR [eax+0x42],0xffffffff
  412e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e8f:	mov    DWORD PTR [eax],eax
  412e91:	xchg   bh,bh
  412e93:	pop    esi
  412e94:	adc    eax,0x838936ff
  412e99:	in     al,0x0
  412e9b:	push   ebp
  412e9c:	sar    bh,cl
  412e9e:	aaa    
  412e9f:	add    BYTE PTR [eax],al
  412ea1:	out    0x0,al
  412ea3:	jb     0x412eb4
  412ea5:	(bad)  
  412ea6:	(bad)  
  412ea8:	cmp    DWORD PTR [ebx],0x0
  412eab:	adc    DWORD PTR [edx],ebp
  412ead:	cmp    DWORD PTR [ebx-0x7c880001],0xffffffc8
  412eb4:	cwde   
  412eb5:	push   DWORD PTR ds:0xffa9ffff
  412ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ebc:	mov    ah,0x0
  412ebe:	in     al,0xff
  412ec0:	add    dl,cl
  412ec2:	push   DWORD PTR [edx+0x5f]
  412ec5:	push   DWORD PTR [edi+0xc20089]
  412ecb:	sub    ebp,DWORD PTR [eax-0x1]
  412ece:	dec    ecx
  412ecf:	(bad)  
  412ed0:	(bad)  
  412ed1:	mov    edi,0xffe5c500
  412ed6:	es cmp edi,0xffffffde
  412eda:	mov    DWORD PTR [eax-0x6],ebx
  412edd:	jmp    DWORD PTR [edx-0x34]
  412ee0:	mov    DWORD PTR [edi-0x1],ecx
  412ee3:	ret    0xff2f
  412ee6:	mov    bl,0x0
  412ee8:	cmp    ebx,0xffffffcc
  412eeb:	pop    edx
  412eec:	mov    esi,0xff003e00
  412ef1:	push   es
  412ef2:	int3   
  412ef3:	xchg   bl,al
  412ef5:	mov    ebx,ebp
  412ef7:	add    bh,bh
  412ef9:	cs int3 
  412efb:	ret    
  412efc:	data16 (bad) 
  412efe:	(bad)  
  412eff:	inc    DWORD PTR [eax]
  412f01:	aam    0xff
  412f03:	xchg   edi,eax
  412f04:	mov    ds:0xffff4400,al
  412f09:	xchg   ebp,eax
  412f0a:	dec    eax
  412f0c:	int    0x0
  412f0e:	and    DWORD PTR [eax],eax
  412f10:	int3   
  412f11:	fwait
  412f12:	inc    DWORD PTR [ecx-0x7c2bfff0]
  412f18:	mov    DWORD PTR [ecx],edi
  412f1a:	xor    DWORD PTR [edi-0x640003],0xffffffff
  412f21:	out    0x0,al
  412f23:	sti    
  412f24:	into   
  412f25:	jmp    eax
  412f27:	add    bh,bh
  412f29:	mov    ?,edi
  412f2b:	push   es
  412f2c:	sbb    edi,edi
  412f2e:	and    edi,edi
  412f30:	add    BYTE PTR [esi-0x1],cl
  412f33:	xchg   ecx,edx
  412f35:	jmp    FWORD PTR [eax+eax*1]
  412f38:	add    BYTE PTR [eax-0x1],dh
  412f3b:	xchg   esi,eax
  412f3c:	sub    eax,0x29ff
  412f41:	mov    ds:0x83c481ff,al
  412f46:	sahf   
  412f47:	(bad)  
  412f48:	call   DWORD PTR [edi-0x76d07d]
  412f4e:	loop   0x412f4f
  412f50:	int3   
  412f51:	push   ss
  412f52:	call   DWORD PTR [eax]
  412f54:	sub    BYTE PTR [eax],al
  412f56:	mov    WORD PTR [ebx+0x63ffad00],es
  412f5c:	loope  0x412f2a
  412f5e:	add    edi,edi
  412f60:	inc    DWORD PTR [esi]
  412f62:	call   DWORD PTR [edi]
  412f64:	sub    al,BYTE PTR [eax]
  412f66:	es int3 
  412f68:	or     esp,0xffffffff
  412f6b:	lea    ecx,[esp+ecx*8]
  412f6e:	cmc    
  412f6f:	inc    DWORD PTR [eax]
  412f71:	jle    0x412f72
  412f73:	fs inc ebx
  412f75:	call   DWORD PTR [ecx-0x1]
  412f78:	int3   
  412f79:	sbb    eax,0xffa3d0ff
  412f7e:	retf   
  412f7f:	add    BYTE PTR [eax],al
  412f81:	sub    al,0x0
  412f83:	rcr    ah,cl
  412f85:	push   DWORD PTR [edx-0x7c3bff01]
  412f8b:	add    al,0xa3
  412f8d:	add    BYTE PTR [esi],dl
  412f8f:	inc    DWORD PTR [ebx+0x3b59ffad]
  412f95:	add    BYTE PTR [esi],al
  412f97:	add    bh,bh
  412f99:	cwde   
  412f9a:	push   DWORD PTR ds:0x89ff55
  412fa0:	jmp    DWORD PTR [ebp-0x33dfd001]
  412fa6:	push   0x83670000
  412fab:	xlat   BYTE PTR ds:[ebx]
  412fac:	hlt    
  412fad:	jmp    DWORD PTR [edi+0x7fffff]
  412fb3:	jae    0x412f77
  412fb5:	dec    DWORD PTR [ebx]
  412fb7:	dec    esp
  412fb9:	or     eax,DWORD PTR [ebx-0xe7cf691]
  412fbf:	add    bh,bh
  412fc1:	call   0x82:0xfff16400
  412fc8:	add    BYTE PTR [edi],bl
  412fca:	adc    DWORD PTR [eax-0x69],0xffffffff
  412fce:	ror    ah,1
  412fd0:	call   FWORD PTR [ebx+0x6b4783]
  412fd6:	mov    ds:0xff4f8383,al
  412fdb:	lahf   
  412fdc:	jno    0x412fde
  412fde:	outs   dx,DWORD PTR ds:[esi]
  412fdf:	(bad)  
  412fe0:	(bad)  
  412fe1:	fdivr  st,st(7)
  412fe3:	adc    BYTE PTR [esi],ch
  412fe5:	(bad)  
  412fe6:	(bad)  
  412fe8:	mov    DWORD PTR [eax],eax
  412fea:	jmp    DWORD PTR [esi-0x51ffc4]
  412ff0:	add    dl,bl
  412ff2:	call   DWORD PTR [eax+0x55]
  412ff5:	add    dh,cl
  412ff7:	add    ah,cl
  412ff9:	jmp    0x412ffb
  412ffb:	je     0x412ffc
  412ffd:	add    BYTE PTR [edx+0xd1ff00],bh
  413003:	aad    0x51
  413005:	mov    DWORD PTR [edi+edi*8+0x6683acff],eax
  41300c:	je     0x41300d
  41300e:	sbb    BYTE PTR [eax],al
  413010:	add    BYTE PTR [eax+0xc043ff],dl
  413016:	clc    
  413017:	mov    edi,edi
  413019:	push   ebp
  41301a:	add    dl,dh
  41301c:	inc    eax
  41301d:	add    BYTE PTR [esi-0x1],cl
  413020:	(bad)  
  413021:	(bad)  
  413022:	inc    DWORD PTR [ecx+0x3b]
  413025:	add    BYTE PTR [edx+0xe40000],cl
  41302b:	test   dh,cl
  41302d:	inc    DWORD PTR [edx]
  41302f:	cmp    edi,0xffffffd5
  413032:	add    BYTE PTR [eax],bl
  413034:	pop    eax
  413035:	dec    DWORD PTR [ebp+0x860000]
  41303b:	push   ss
  41303c:	mov    edi,edi
  41303e:	dec    edi
  41303f:	int3   
  413040:	int3   
  413041:	jmp    0x23:0xab57ff
  413048:	call   FWORD PTR [edi]
  41304a:	int3   
  41304b:	test   BYTE PTR [ebx-0xa977],0xad
  413052:	(bad)  
  413053:	dec    DWORD PTR [edx]
  413055:	push   ebx
  413057:	add    DWORD PTR [eax],0xffffffdb
  41305a:	add    DWORD PTR [eax-0xcd006a],0x0
  413061:	lods   eax,DWORD PTR ds:[esi]
  413062:	adc    DWORD PTR [edi+0x1f],0x0
  413066:	bound  eax,QWORD PTR [eax]
  413068:	int3   
  413069:	in     al,0x0
  41306b:	ja     0x4130d3
  41306d:	(bad)  
  41306e:	mov    edi,0xb6ffff
  413073:	dec    esp
  413074:	push   es
  413075:	and    DWORD PTR [ecx+0xe80089],0x70
  41307c:	dec    esp
  41307d:	add    BYTE PTR [edx],ch
  41307f:	add    BYTE PTR [eax],al
  413081:	jmp    0x413083
  413083:	mov    cl,0xd9
  413085:	int3   
  413086:	xlat   BYTE PTR ds:[ebx]
  413087:	(bad)  
  413088:	jmp    ecx
  41308a:	add    al,ah
  41308c:	call   0xcd407090
  413091:	lds    eax,FWORD PTR [ebx+0x79002173]
  413097:	add    BYTE PTR [eax],al
  413099:	imul   eax,DWORD PTR [ebx+0x47000883],0xa3ffff
  4130a3:	dec    eax
  4130a4:	dec    edx
  4130a5:	push   edx
  4130a7:	inc    DWORD PTR [eax]
  4130a9:	and    BYTE PTR [eax],al
  4130ab:	push   ecx
  4130ac:	xor    DWORD PTR [bx+si-0x3301],0x65
  4130b2:	int3   
  4130b3:	imul   ebx,DWORD PTR [ebx+0xc1ff],0x2bdeffe2
  4130bd:	add    BYTE PTR [ecx-0x7d],dh
  4130c0:	sub    ecx,0x0
  4130c3:	test   DWORD PTR [esi-0x3634],0xf20cff97
  4130cd:	push   DWORD PTR [edx+0x0]
  4130d0:	(bad)  
  4130d1:	mov    esp,0x21ffcc
  4130d6:	leave  
  4130d7:	(bad)  
  4130d8:	jmp    FWORD PTR [eax-0xbffe01]
  4130de:	add    al,0x0
  4130e0:	add    BYTE PTR [ebp-0xb3d501],bh
  4130e6:	sahf   
  4130e7:	add    BYTE PTR [ecx+0x1b7583c8],cl
  4130ed:	jmp    DWORD PTR ds:0xbaff00
  4130f3:	pop    ds
  4130f4:	xchg   edi,eax
  4130f5:	int3   
  4130f6:	test   al,0xcc
  4130f8:	jmp    DWORD PTR [esi+0x0]
  4130fb:	sub    ch,BYTE PTR [eax-0x33af01]
  413101:	sub    eax,0x83bde500
  413106:	mov    bh,0xcc
  413108:	(bad)  
  413109:	mov    esi,0xccf78fff
  41310e:	jmp    0x895e3212
  413113:	fimul  DWORD PTR [ebp+0xff33cc]
  413119:	push   esp
  41311a:	jmp    DWORD PTR [edx-0x25]
  41311d:	push   DWORD PTR [edi]
  41311f:	inc    DWORD PTR [ebx-0x7e980063]
  413125:	mov    DWORD PTR [ecx-0x5f0001],ebp
  41312b:	push   ecx
  41312c:	cmp    edi,0x27
  41312f:	inc    DWORD PTR [eax]
  413131:	pop    DWORD PTR [eax]
  413133:	and    esp,ebp
  413135:	(bad)  
  413136:	mov    ebp,0xff7c0083
  41313b:	test   eax,0x7eff6c
  413140:	sbb    DWORD PTR [ebx-0x276901],0x75
  413147:	or     esp,0xffffffc1
  41314a:	sbb    DWORD PTR [ecx-0x63],0xffffff89
  41314e:	sar    edi,0xff
  413151:	push   edx
  413152:	add    DWORD PTR [ecx],0x34
  413155:	add    BYTE PTR [eax+eax*1],dl
  413158:	(bad)  
  413159:	cmp    BYTE PTR [eax],al
  41315b:	ins    BYTE PTR es:[edi],dx
  41315c:	mov    cl,0x0
  41315e:	push   edx
  41315f:	add    BYTE PTR [eax],al
  413161:	mov    ebp,0xff607583
  413166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413167:	add    BYTE PTR [eax],al
  413169:	sbb    eax,0xffbe58ff
  41316e:	rol    DWORD PTR [eax],cl
  413170:	dec    esp
  413172:	int3   
  413173:	mov    ebx,0xffcfff30
  413178:	dec    esi
  41317a:	dec    eax
  41317c:	xor    eax,DWORD PTR [eax]
  41317e:	loopne 0x41317f
  413180:	jmp    DWORD PTR [ebx-0x7d9a7d]
  413186:	cwde   
  413187:	inc    DWORD PTR [eax]
  413189:	enter  0xa3ff,0xb9
  41318d:	add    BYTE PTR [ecx],bh
  41318f:	add    ah,cl
  413191:	xor    ecx,esp
  413193:	and    BYTE PTR [esp+ecx*8+0x1e83ff21],0xff
  41319b:	and    DWORD PTR [edi],0xff00e6ff
  4131a1:	add    edi,edi
  4131a3:	mov    al,ss:0xfffff2ff
  4131a9:	sbb    BYTE PTR [ebx+0x2d83ee1f],al
  4131af:	inc    DWORD PTR [eax]
  4131b1:	jp     0x41317f
  4131b3:	retf   0xcc4b
  4131b6:	add    edi,edi
  4131b8:	int3   
  4131b9:	les    eax,FWORD PTR [eax]
  4131bb:	int3   
  4131bc:	pop    ebx
  4131bd:	inc    ecx
  4131bf:	(bad)  
  4131c0:	inc    DWORD PTR [ebp-0x1]
  4131c3:	inc    eax
  4131c4:	aad    0xcc
  4131c6:	test   BYTE PTR [ebx+0x21ffc7cc],al
  4131cc:	jno    0x4131cd
  4131ce:	jle    0x4131d0
  4131d0:	(bad)  
  4131d1:	mov    ebp,0xa3fa00
  4131d6:	mov    eax,ds:0xffae0083
  4131db:	mov    ds:0xffba83d6,eax
  4131e0:	add    cl,dh
  4131e2:	add    BYTE PTR [esi+edi*1-0xff1e7d],ah
  4131e9:	enter  0xfbff,0x2
  4131ed:	add    BYTE PTR [edx],cl
  4131ef:	(bad)  
  4131f0:	jmp    FWORD PTR [esi+0x5d4bff]
  4131f6:	cmp    bh,0xff
  4131f9:	pop    ds
  4131fa:	(bad)  
  4131fb:	cmp    cl,BYTE PTR [eax+0xffae00]
  413201:	popa   
  413202:	inc    DWORD PTR ds:0xffd6fff1
  413208:	inc    DWORD PTR [edi+0xca41ff]
  41320e:	inc    DWORD PTR es:[eax]
  413211:	xor    eax,0xa0aff
  413216:	xor    eax,0xffeb00ff
  41321b:	fs add ah,cl
  41321e:	xchg   ebp,eax
  41321f:	(bad)  
  413220:	(bad)  
  413221:	cmp    edi,edi
  413223:	fcomp  DWORD PTR [ecx-0xff6a01]
  413229:	dec    esp
  41322a:	add    BYTE PTR [edi-0x66],dl
  41322d:	int3   
  41322e:	popf   
  41322f:	add    bh,bh
  413231:	push   ebx
  413232:	add    DWORD PTR [edx],0x38
  413235:	call   FWORD PTR [eax-0x1]
  413238:	sbb    DWORD PTR [esi-0x9ff201],0xfffffff2
  41323f:	add    BYTE PTR [ebx-0x1ec3768e],al
  413245:	(bad)  
  413246:	(bad)  [ecx-0x6a00ad01]
  41324c:	add    bh,bh
  41324e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41324f:	inc    DWORD PTR [eax]
  413251:	inc    ebx
  413252:	(bad)  
  413253:	(bad)  
  413255:	dec    DWORD PTR [edi]
  413257:	inc    DWORD PTR [eax]
  413259:	das    
  41325a:	call   FWORD PTR [eax-0xf8767c]
  413260:	(bad)  
  413261:	sti    
  413262:	jmp    DWORD PTR [edi-0xadffda]
  413268:	add    BYTE PTR [esi-0xedcd01],al
  41326e:	(bad)  
  41326f:	int3   
  413270:	and    DWORD PTR [edx+0xe9a089],0xfffffff9
  413277:	add    BYTE PTR [ecx+0x84d00bb],cl
  41327d:	push   DWORD PTR [esi]
  41327f:	add    ah,cl
  413281:	enter  0x50cc,0x93
  413285:	dec    edx
  413287:	inc    DWORD PTR [ebx-0x384f0037]
  41328d:	add    BYTE PTR [ebx],cl
  41328f:	add    BYTE PTR [eax],al
  413291:	pushf  
  413292:	call   FWORD PTR [esi-0x6f0027]
  413298:	(bad)  
  413299:	clc    
  41329a:	jmp    FWORD PTR [edx+0x69]
  41329d:	and    DWORD PTR [eax],0x0
  4132a0:	jmp    DWORD PTR [edx+0x22a300]
  4132a6:	in     al,0xff
  4132a8:	int3   
  4132a9:	sahf   
  4132aa:	mov    DWORD PTR [ecx],ecx
  4132ac:	lahf   
  4132ad:	add    BYTE PTR [edx+0x518300],ah
  4132b3:	xlat   BYTE PTR es:[ebx]
  4132b5:	add    BYTE PTR [edi],dl
  4132b7:	(bad)  
  4132b8:	call   DWORD PTR [esi]
  4132ba:	sub    DWORD PTR [eax],0xffffffa1
  4132bd:	(bad)  
  4132be:	js     0x4132c0
  4132c0:	call   DWORD PTR [edx-0x1]
  4132c3:	test   eax,0x8962cc42
  4132c8:	inc    DWORD PTR [esi-0x83bf00]
  4132ce:	ja     0x4132d0
  4132d0:	xor    DWORD PTR [ebp+0x0],0x74
  4132d4:	pop    ds
  4132d5:	add    BYTE PTR [ebp+0x3d00ff],dl
  4132db:	stos   BYTE PTR es:[edi],al
  4132dc:	jp     0x4132aa
  4132de:	fadd   DWORD PTR [eax]
  4132e0:	add    BYTE PTR [eax-0x7d],ah
  4132e3:	mov    bh,0xfd
  4132e5:	or     DWORD PTR [ecx],0x0
  4132e8:	add    BYTE PTR [edi+edi*8+0x77ff4c30],dl
  4132ef:	inc    DWORD PTR [eax]
  4132f1:	sub    eax,0xdb4000
  4132f6:	xchg   bh,bh
  4132f8:	inc    DWORD PTR [esi+0x0]
  4132fb:	fiadd  WORD PTR [ecx-0x497d]
  413301:	cmp    BYTE PTR [eax],al
  413303:	mov    ds:0x51ff07,al
  413308:	call   FWORD PTR [ebp-0x89397d]
  41330e:	(bad)  
  41330f:	add    bh,bh
  413311:	daa    
  413312:	jmp    FWORD PTR [ecx-0x25]
  413315:	add    al,ah
  413317:	inc    DWORD PTR [ebx-0x3dddff37]
  41331d:	mov    DWORD PTR [edi-0x76b6ff01],esp
  413323:	outs   dx,DWORD PTR ds:[esi]
  413324:	push   DWORD PTR gs:[esi-0x1]
  413328:	add    BYTE PTR [edx-0xe5a534],ch
  41332e:	outs   dx,DWORD PTR ds:[esi]
  41332f:	add    BYTE PTR [ecx+0x473a0052],cl
  413335:	(bad)  
  413336:	(bad)  
  413338:	add    bl,ah
  41333a:	int3   
  41333b:	adc    DWORD PTR [edi+0x89bbff],0xffffffa1
  413342:	mov    DWORD PTR [edx+0x62],esp
  413345:	jmp    DWORD PTR [esi+0xc489ff]
  41334b:	stc    
  41334c:	and    edi,edi
  41334e:	and    al,BYTE PTR [ebx+0x20ffc600]
  413354:	inc    edi
  413355:	call   FWORD PTR [ebx-0x7c7b3301]
  41335b:	in     al,dx
  41335c:	call   0xfff2:0x8931ff
  413363:	mov    ecx,DWORD PTR [ebp-0xffac01]
  413369:	sahf   
  41336a:	add    BYTE PTR [ecx+eiz*2-0x7c001c01],dl
  413371:	inc    edx
  413372:	add    BYTE PTR [edx-0x7cbd0052],cl
  413378:	inc    ebp
  41337a:	push   DWORD PTR [edi]
  41337c:	inc    ebp
  41337d:	call   FWORD PTR [ebp-0x1]
  413380:	inc    ecx
  413382:	dec    ecx
  413384:	retf   0xab00
  413387:	add    BYTE PTR [ebx+0x43b200e1],al
  41338d:	inc    DWORD PTR [edx-0x7c0b7c01]
  413393:	inc    edx
  413394:	jmp    0x413319
  413396:	mov    edi,edi
  413398:	(bad)  
  413399:	(bad)  
  41339b:	push   edi
  41339c:	dec    ebp
  41339d:	add    BYTE PTR [esi],cl
  41339f:	(bad)  
  4133a0:	jmp    DWORD PTR [edx]
  4133a2:	jmp    FWORD PTR ds:0xff13fff3
  4133a8:	jmp    FWORD PTR [ebp+0x0]
  4133ab:	mov    eax,0x9f83bb
  4133b0:	jmp    FWORD PTR [ecx+ecx*4-0x46ff13b1]
  4133b7:	dec    esp
  4133b9:	jmp    0xff68fdbe
  4133be:	and    BYTE PTR [eax],al
  4133c0:	add    cl,ah
  4133c2:	(bad)  
  4133c3:	std    
  4133c4:	and    BYTE PTR [ebx+0x1d00ff4a],al
  4133ca:	dec    DWORD PTR [edi+0x79ff3c]
  4133d0:	push   ebp
  4133d2:	xor    DWORD PTR [ebp-0xff3318],0xffffff83
  4133d9:	ret    0xab00
  4133dc:	rol    BYTE PTR [eax],1
  4133de:	or     al,BYTE PTR [eax]
  4133e0:	jmp    DWORD PTR [eax-0xfba900]
  4133e6:	fcos   
  4133e8:	add    BYTE PTR [edi],bh
  4133ea:	add    ah,al
  4133ec:	push   es
  4133ed:	or     DWORD PTR [eax],0x0
  4133f0:	add    BYTE PTR [esi+0x0],bl
  4133f3:	add    DWORD PTR [esi-0xffca00],edi
  4133f9:	jecxz  0x41337e
  4133fb:	ror    BYTE PTR [edx+0x0],1
  4133fe:	or     DWORD PTR [eax],eax
  413400:	add    BYTE PTR [ebx-0xbb1b77],dh
  413406:	cmp    eax,DWORD PTR [eax]
  413408:	inc    DWORD PTR [eax]
  41340a:	dec    DWORD PTR [ebp+ecx*4+0x0]
  41340e:	xchg   DWORD PTR [eax],eax
  413410:	add    BYTE PTR [esi-0x57fc01],bl
  413416:	add    BYTE PTR [eax],0xff
  413419:	push   eax
  41341a:	add    BYTE PTR [ebx-0x67],bl
  41341d:	add    BYTE PTR [esi],bh
  41341f:	(bad)  
  413420:	jmp    ebp
  413422:	push   DWORD PTR [edi+edi*4+0xa300]
  413429:	mov    bl,0xff
  41342b:	rcr    DWORD PTR ds:0xffffb3ff,0x16
  413432:	(bad)  
  413433:	sti    
  413434:	clc    
  413435:	adc    DWORD PTR [eax-0x77],0x0
  413439:	jmp    0xffd8:0xffb71d00
  413440:	int3   
  413441:	or     edi,edi
  413443:	loope  0x41342e
  413445:	add    BYTE PTR [edi],bh
  413447:	inc    DWORD PTR [eax]
  413449:	out    0x0,al
  41344b:	test   al,0x49
  41344d:	mov    eax,ecx
  41344f:	(bad)  
  413450:	call   DWORD PTR [ebx]
  413452:	add    BYTE PTR [ecx-0x7c2a0075],bh
  413458:	add    BYTE PTR [ecx],bh
  41345a:	inc    DWORD PTR [eax+0x10]
  41345d:	int3   
  41345e:	clc    
  41345f:	(bad)  
  413460:	dec    DWORD PTR [edi+edi*8-0xe]
  413464:	nop
  413465:	dec    edi
  413467:	add    bh,bh
  413469:	pop    DWORD PTR [ebx-0x47002470]
  41346f:	or     esp,0xfffffff1
  413472:	mov    ebp,esi
  413474:	mov    BYTE PTR [eax],0xda
  413477:	add    BYTE PTR [eax],al
  413479:	pushf  
  41347a:	mov    DWORD PTR [eax-0x340014],edi
  413480:	jmp    DWORD PTR [ebp-0x7cdfea7d]
  413486:	cwde   
  413487:	(bad)  
  413488:	push   DWORD PTR [edi]
  41348a:	add    DWORD PTR [eax],0x49
  41348d:	call   FWORD PTR [esp+ecx*8]
  413490:	inc    DWORD PTR [edi+edi*8+0xeff1974]
  413497:	add    ah,cl
  413499:	and    cl,ah
  41349b:	in     al,dx
  41349c:	sbb    eax,0x8385cc
  4134a1:	(bad)  
  4134a3:	jp     0x4134e2
  4134a5:	mov    DWORD PTR [eax-0x210100],ebx
  4134ab:	or     edi,DWORD PTR [ecx]
  4134ad:	mov    DWORD PTR [esi],ecx
  4134af:	int3   
  4134b0:	add    BYTE PTR [ebx-0x1],bh
  4134b3:	xchg   BYTE PTR [edi-0x7d],bl
  4134b6:	push   0x0
  4134b8:	dec    DWORD PTR [ebx+eax*4]
  4134bb:	sbb    esi,ebp
  4134bd:	inc    DWORD PTR [edi]
  4134bf:	inc    DWORD PTR [eax]
  4134c1:	cmp    al,0xcc
  4134c3:	jp     0x41345c
  4134c5:	or     DWORD PTR [ebx-0x33ae0001],0x6c
  4134cc:	leave  
  4134cd:	add    BYTE PTR [esi-0x34],bh
  4134d0:	dec    DWORD PTR [edx+0x3ad900]
  4134d6:	mov    DWORD PTR [eax],0xa2ff1fff
  4134dc:	jnp    0x4134dd
  4134de:	popa   
  4134df:	(bad)  
  4134e0:	dec    DWORD PTR [edi+edi*8+0x800943d]
  4134e7:	or     DWORD PTR [ecx-0x401c7cfa],0x0
  4134ee:	sbb    edi,edi
  4134f0:	sub    DWORD PTR [eax+eax*1-0x1700e4ca],0x0
  4134f8:	jmp    edi
  4134fa:	jmp    FWORD PTR [esi]
  4134fc:	jp     0x4134fe
  4134fe:	loop   0x413500
  413500:	(bad)  
  413501:	js     0x413502
  413503:	shl    DWORD PTR [eax],cl
  413505:	inc    DWORD PTR [eax+0x0]
  413508:	add    ah,cl
  41350a:	mov    DWORD PTR [ebp-0x6],edx
  41350d:	jmp    DWORD PTR [ebp-0xe13301]
  413513:	sub    eax,0xaf89c7
  413518:	add    BYTE PTR [edi+edi*8+0x55001368],bh
  41351f:	add    BYTE PTR [eax],al
  413521:	arpl   di,di
  413523:	call   0xa6ff:0xff64ff1d
  41352a:	dec    DWORD PTR [edx+ebx*2]
  41352d:	or     DWORD PTR [ebx],0x0
  413530:	int3   
  413531:	loope  0x4134b6
  413533:	adc    bl,BYTE PTR [esi-0x1]
  413536:	jp     0x413537
  413538:	add    dl,ch
  41353a:	add    ah,dh
  41353c:	push   ebp
  41353d:	add    DWORD PTR [edi-0x47601],0x57
  413544:	push   0x0
  413546:	mov    bh,0x0
  413548:	dec    ecx
  41354a:	add    BYTE PTR [ebx+0xa90067],dl
  413550:	inc    esi
  413552:	int3   
  413553:	dec    esp
  413554:	mov    ecx,0xccff7800
  413559:	adc    bh,bh
  41355b:	mov    eax,ds:0x610027
  413560:	or     DWORD PTR [eax-0x34],0x61
  413564:	aad    0x0
  413566:	das    
  413567:	add    bh,bh
  413569:	mov    esp,0xff0413ff
  41356e:	push   esi
  41356f:	add    bh,bh
  413571:	loopne 0x413573
  413573:	dec    ecx
  413574:	add    BYTE PTR cs:[edx-0xd90077],ch
  41357b:	lods   al,BYTE PTR ds:[esi]
  41357c:	clc    
  41357d:	add    BYTE PTR [esi-0x1],ah
  413580:	(bad)  
  413581:	in     eax,dx
  413582:	inc    DWORD PTR [ebx+0x5500b1]
  413588:	mov    DWORD PTR [edx],ecx
  41358a:	call   DWORD PTR [ecx]
  41358c:	lahf   
  41358d:	push   edi
  41358f:	inc    DWORD PTR [eax]
  413591:	sar    bh,0xdb
  413594:	mov    ?,edi
  413596:	cmp    bh,0xcc
  413599:	jne    0x41351e
  41359b:	mov    al,ds:0x6bff4f
  4135a0:	int3   
  4135a1:	hlt    
  4135a2:	mov    ebx,eax
  4135a4:	call   0xffca:0x83ff0100
  4135ab:	std    
  4135ac:	push   esi
  4135ad:	add    BYTE PTR [edi+edi*8],ah
  4135b0:	int3   
  4135b1:	sar    bh,1
  4135b3:	cmp    BYTE PTR [esi-0x1],0x63
  4135b7:	or     esp,0xffffff99
  4135ba:	sub    DWORD PTR [eax-0x76fcff3a],0x0
  4135c1:	aad    0x0
  4135c3:	ret    
  4135c4:	mov    edi,?
  4135c6:	xchg   esi,eax
  4135c7:	cmp    edi,0x5
  4135ca:	add    bl,dh
  4135cc:	jo     0x4135ce
  4135ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135cf:	add    BYTE PTR [ecx+0x7241ffd5],cl
  4135d5:	add    BYTE PTR [edi-0xcb0001],bl
  4135db:	inc    edi
  4135dc:	mov    BYTE PTR [eax],al
  4135de:	stos   BYTE PTR es:[edi],al
  4135df:	inc    DWORD PTR [eax]
  4135e1:	test   al,0xff
  4135e3:	out    0xa2,eax
  4135e5:	xor    esi,0xffffffcc
  4135e8:	push   DWORD PTR [ebx+eax*4]
  4135eb:	pop    eax
  4135ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ed:	call   esi
  4135ef:	int3   
  4135f0:	push   DWORD PTR [edi-0x512900]
  4135f6:	inc    esp
  4135f7:	inc    DWORD PTR [eax]
  4135f9:	enter  0xa500,0xd8
  4135fd:	dec    DWORD PTR [esi-0x7d]
  413600:	call   FWORD PTR [eax-0x1]
  413603:	sbb    cl,BYTE PTR [esi]
  413605:	inc    ebx
  413607:	add    bh,bh
  413609:	sbb    al,0x0
  41360b:	in     al,0x91
  41360d:	add    BYTE PTR [ebp-0x7d],bh
  413610:	mov    DWORD PTR [edi-0x769bbe01],ebx
  413616:	pop    es
  413617:	add    ah,cl
  413619:	(bad)  
  41361b:	lds    edx,FWORD PTR [edi+edi*8-0x7f]
  41361f:	inc    DWORD PTR [ebx+0x4890ffe0]
  413625:	add    DWORD PTR [edi-0x1],0xffffffff
  413629:	(bad)  
  41362a:	(bad)  
  41362b:	(bad)  [eax+eax*1+0x4700ccc9]
  413632:	dec    DWORD PTR [eax+0x71]
  413635:	call   esi
  413637:	(bad)  
  413638:	call   DWORD PTR [eax-0x1]
  41363b:	sbb    eax,0xff84839f
  413640:	add    BYTE PTR [ebx-0x1],ah
  413643:	xchg   esi,eax
  413644:	aam    0x0
  413646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413647:	int3   
  413648:	and    DWORD PTR [eax-0x8d3701],0xffffff9e
  41364f:	int3   
  413650:	add    BYTE PTR [ecx],bl
  413652:	call   FWORD PTR [ebp+0x210069]
  413658:	add    ch,dh
  41365a:	push   DWORD PTR [ecx]
  41365c:	xlat   BYTE PTR ds:[ebx]
  41365d:	add    BYTE PTR [ecx-0x76660034],al
  413663:	xchg   edi,eax
  413664:	pop    es
  413665:	add    BYTE PTR [edx-0x7d],ah
  413668:	add    al,ah
  41366a:	inc    DWORD PTR [edx-0x6f]
  41366d:	inc    DWORD PTR [esi+0x2500ff]
  413673:	dec    edx
  413674:	mov    ecx,0xffff7083
  413679:	iret   
  41367a:	add    BYTE PTR [ebx],ah
  41367c:	and    edi,edi
  41367e:	ds or  esp,0x6f
  413682:	add    DWORD PTR [edx+esi*1-0x7c009400],0xe
  41368a:	or     DWORD PTR [ecx+0x7e],0xffffff83
  41368e:	jne    0x41368f
  413690:	add    BYTE PTR [ebp-0x4e1701],dh
  413696:	push   eax
  413697:	inc    DWORD PTR [ebx+0x7ccff89]
  41369d:	add    BYTE PTR [ecx+0x0],bl
  4136a0:	int3   
  4136a1:	and    edi,edi
  4136a3:	dec    edx
  4136a4:	fadd   DWORD PTR [eax]
  4136a6:	pop    ds
  4136a7:	add    bh,bh
  4136a9:	dec    edi
  4136aa:	add    BYTE PTR [ebx],bl
  4136ac:	sbb    eax,DWORD PTR [ebx-0x1b0000d5]
  4136b2:	add    BYTE PTR [edi-0x5f00d1],cl
  4136b8:	call   ecx
  4136ba:	add    bh,dl
  4136bc:	bound  eax,QWORD PTR [eax]
  4136be:	or     al,0xff
  4136c0:	call   FWORD PTR [ebp+0x0]
  4136c3:	adc    DWORD PTR [ecx+0x0],edi
  4136c6:	pop    eax
  4136c7:	(bad)  
  4136c8:	dec    DWORD PTR [ebx+0x0]
  4136cb:	push   cs
  4136cc:	or     eax,0xffff56ff
  4136d1:	pushf  
  4136d2:	add    al,dh
  4136d4:	loop   0x4136d5
  4136d6:	lds    eax,FWORD PTR [eax]
  4136d8:	add    BYTE PTR [eax+eax*1],dh
  4136db:	add    ebx,edx
  4136dd:	dec    DWORD PTR [eax+0x0]
  4136e0:	add    BYTE PTR [ecx-0x8e7601],dl
  4136e6:	out    dx,al
  4136e7:	inc    DWORD PTR [eax]
  4136e9:	dec    WORD PTR [ecx+edi*1]
  4136ed:	xor    DWORD PTR [ebx+0xdf00ff],0x75
  4136f4:	pop    esp
  4136f5:	mov    DWORD PTR [esi-0x6f7d00],esp
  4136fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136fc:	sub    eax,0x83edff
  413701:	sub    al,0xff
  413703:	sbb    al,0xd1
  413705:	dec    DWORD PTR [esi-0x1]
  413708:	add    BYTE PTR [ebp+0xdb3fcc],dh
  41370e:	jecxz  0x41370f
  413710:	add    BYTE PTR [ebp-0x1],dh
  413713:	lea    esp,[ebp-0x331b7d]
  413719:	jmp    0x41371a
  41371b:	jg     0x4136ff
  41371d:	add    DWORD PTR [edi],0xffffff83
  413720:	int3   
  413721:	sbb    eax,0xff417aff
  413726:	or     al,0x0
  413728:	inc    DWORD PTR [edi+edi*8+0x1d]
  41372c:	scas   eax,DWORD PTR es:[edi]
  41372d:	dec    DWORD PTR [edx+0x9300ff]
  413733:	rcl    BYTE PTR [edi],0xff
  413736:	adc    eax,0x510000
  41373b:	xchg   esp,eax
  41373c:	repz add BYTE PTR [esi],dl
  41373f:	mov    DWORD PTR [eax],eax
  413741:	sbb    al,0xff
  413743:	adc    eax,0x9400df
  413748:	call   FWORD PTR [eax+0x0]
  41374b:	mov    edi,DWORD PTR [edi+edi*8+0x4a8300bf]
  413752:	add    BYTE PTR [esi-0x3b],bl
  413755:	push   DWORD PTR [edi-0x77]
  413758:	push   DWORD PTR [ecx-0x1]
  41375b:	daa    
  41375c:	loope  0x41375d
  41375e:	push   esp
  41375f:	add    BYTE PTR [ecx+0x5f748964],cl
  413765:	mov    DWORD PTR [edi],edx
  413767:	add    BYTE PTR [eax],al
  413769:	in     al,dx
  41376a:	add    BYTE PTR [ebx],bh
  41376c:	push   edx
  41376d:	(bad)  
  41376e:	(bad)  
  413770:	dec    ebp
  413772:	mov    DWORD PTR ds:0xff15cc06,eax
  413778:	int3   
  413779:	adc    bh,bh
  41377b:	int    0xaa
  41377d:	inc    DWORD PTR [edx]
  41377f:	inc    DWORD PTR [eax]
  413781:	pop    ds
  413782:	cmp    DWORD PTR [ebx-0x335d0047],0xffffffcc
  413789:	std    
  41378a:	add    BYTE PTR [ebx-0x7c1200d2],ch
  413790:	push   DWORD PTR [ecx+0xfd9fff]
  413796:	mov    eax,ds:0xff9f00ff
  41379b:	sub    DWORD PTR [edx+0x0],edx
  41379e:	dec    BYTE PTR [ecx-0x1676eb00]
  4137a4:	loopne 0x413772
  4137a6:	in     al,dx
  4137a7:	dec    DWORD PTR [ecx+0x670f8397]
  4137ad:	call   FWORD PTR [edx-0x1]
  4137b0:	add    al,bh
  4137b2:	push   DWORD PTR [ebp+0x51]
  4137b5:	int3   
  4137b6:	pop    esp
  4137b7:	add    BYTE PTR [ecx+0x1cf900a6],cl
  4137bd:	call   FWORD PTR [edx]
  4137bf:	(bad)  
  4137c0:	push   ecx
  4137c2:	add    BYTE PTR [esi-0x1a],al
  4137c5:	(bad)  
  4137c6:	cmp    edi,edi
  4137c8:	add    BYTE PTR [edi-0x1],dl
  4137cb:	jbe    0x413828
  4137cd:	call   FWORD PTR [eax-0x7c557601]
  4137d3:	or     eax,0xfffaff0c
  4137d8:	and    ebp,0xffffff83
  4137db:	mov    ds:0x89d7ff10,eax
  4137e0:	(bad)  
  4137e1:	jnp    0x4137e2
  4137e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137e4:	pushf  
  4137e5:	add    BYTE PTR [edi+edi*8-0x1],al
  4137e9:	arpl   sp,cx
  4137eb:	retf   
  4137ec:	popa   
  4137ed:	call   FWORD PTR [edi]
  4137ef:	(bad)  
  4137f0:	inc    DWORD PTR [edi-0x1]
  4137f3:	fwait
  4137f4:	(bad)  
  4137f5:	(bad)  
  4137f6:	call   0x1a37fb
  4137fb:	jmp    0x413784
  4137fd:	add    BYTE PTR [ebx+eax*4-0x1],al
  413801:	jp     0x413802
  413803:	jnp    0x41379e
  413805:	inc    edx
  413807:	(bad)  
  413808:	dec    ecx
  41380a:	mov    esi,edx
  41380c:	xchg   edi,edi
  41380e:	lods   al,BYTE PTR ds:[esi]
  41380f:	dec    DWORD PTR [ecx-0x5e333358]
  413815:	and    edi,0xffffffff
  413818:	call   DWORD PTR [ebx]
  41381a:	(bad)  
  41381b:	jnp    0x4137cc
  41381d:	int3   
  41381e:	push   ss
  41381f:	add    DWORD PTR [eax],0x3f
  413822:	add    BYTE PTR [ecx+eiz*1-0x7d],cl
  413826:	pop    esp
  413827:	(bad)  
  413828:	jmp    FWORD PTR [esi-0x33e12f00]
  41382e:	add    eax,0x498983
  413833:	adc    al,0x2a
  413835:	mov    DWORD PTR [ecx+0xe50083],ecx
  41383b:	jle    0x413833
  41383d:	add    BYTE PTR [ebx-0x1],dl
  413840:	add    ch,al
  413842:	add    BYTE PTR [edx+ecx*4],al
  413845:	add    BYTE PTR [edi],bh
  413847:	inc    DWORD PTR [eax]
  413849:	mov    eax,ds:0x1ef983
  41384e:	pop    edx
  41384f:	add    BYTE PTR [ebx+0x8f3003f],al
  413855:	cmp    edx,0xffffff83
  413858:	int3   
  413859:	jo     0x41385a
  41385b:	push   0xc
  41385d:	call   DWORD PTR [ecx]
  41385f:	inc    DWORD PTR [eax]
  413861:	cmp    ecx,DWORD PTR [ecx-0x7500991b]
  413867:	or     esp,0xffffffed
  41386a:	add    BYTE PTR [esi-0x40],bh
  41386d:	mov    DWORD PTR [ebp-0x6f0000],esi
  413873:	rep ins DWORD PTR es:[edi],dx
  413875:	add    BYTE PTR [edi-0x1],ah
  413878:	add    BYTE PTR [ecx],ah
  41387a:	inc    DWORD PTR [edi-0x9]
  41387d:	add    BYTE PTR [esi-0x33e2337d],al
  413883:	sahf   
  413884:	add    edi,edi
  413886:	inc    eax
  413887:	(bad)  
  413888:	push   esi
  41388a:	call   FWORD PTR [ecx+ebx*2-0xe200]
  413891:	fld    QWORD PTR [eax]
  413893:	dec    ebx
  413894:	pop    DWORD PTR [eax]
  413896:	push   esp
  413897:	mov    DWORD PTR [eax],eax
  413899:	inc    ecx
  41389a:	inc    DWORD PTR [ebx+0xa1ccae]
  4138a0:	add    BYTE PTR [ebx-0x8e0e01],bl
  4138a6:	mov    ds:0x7fffff,al
  4138ab:	in     al,0xa1
  4138ad:	inc    ebx
  4138af:	mov    edi,edi
  4138b1:	test   edi,edi
  4138b3:	fcmovnu st,st(3)
  4138b5:	call   eax
  4138b7:	dec    DWORD PTR [ecx-0x5f8a00ae]
  4138bd:	jmp    DWORD PTR [edx+0x0]
  4138c0:	call   DWORD PTR [edi+edi*8]
  4138c3:	jbe    0x4138fb
  4138c5:	sub    DWORD PTR [eax-0x1],0x0
  4138c9:	or     eax,0xff14f0cc
  4138ce:	inc    eax
  4138cf:	int3   
  4138d0:	jmp    FWORD PTR [ebx-0x487100]
  4138d6:	inc    ecx
  4138d7:	(bad)  
  4138d8:	call   FWORD PTR [edi+edi*8-0x2f]
  4138dc:	mov    DWORD PTR [eax],eax
  4138de:	pop    ebx
  4138df:	add    BYTE PTR [eax],al
  4138e1:	push   0xfff60c83
  4138e6:	adc    DWORD PTR [eax],eax
  4138e8:	dec    DWORD PTR [eax]
  4138ea:	add    BYTE PTR [edi+0x33],bh
  4138ed:	inc    DWORD PTR [edi-0x640001]
  4138f3:	inc    ebx
  4138f4:	call   0x41a4f9
  4138f9:	out    dx,al
  4138fa:	and    DWORD PTR [ecx],0xf
  4138fd:	call   FWORD PTR [esi]
  4138ff:	add    BYTE PTR [ebx-0x1854ffc1],al
  413905:	sub    DWORD PTR [edi-0x1],0xffffffff
  413909:	cmp    edi,edi
  41390b:	or     BYTE PTR [ecx+ecx*4],0x22
  41390f:	add    BYTE PTR [ebx+0x379e832f],al
  413915:	add    BYTE PTR [eax-0xb03400],cl
  41391b:	call   0xff46056f
  413920:	jmp    eax
  413922:	jmp    DWORD PTR [eax]
  413924:	jp     0x413925
  413926:	jae    0x413927
  413928:	jmp    DWORD PTR ds:0xffa15dff
  41392e:	jb     0x41392f
  413930:	add    ah,bl
  413932:	add    BYTE PTR [ebx+0x47],ah
  413935:	inc    DWORD PTR [eax+eax*1]
  413938:	(bad)  
  413939:	jns    0x41393b
  41393b:	xchg   dl,bh
  41393d:	jmp    FWORD PTR ds:0xcc5f00ff
  413943:	cmp    al,0x15
  413945:	(bad)  
  413946:	mov    ebx,0xffb8ff00
  41394b:	jmp    0xf13917
  413950:	call   DWORD PTR [edi+edi*8+0x1b83d60d]
  413957:	mov    edi,edi
  413959:	scas   eax,DWORD PTR es:[edi]
  41395a:	add    cl,bl
  41395c:	xchg   esp,ecx
  41395e:	sbb    al,0xff
  413960:	jmp    DWORD PTR [esi-0xd07300]
  413966:	repnz add BYTE PTR [ebx-0x581e7cfa],al
  41396d:	add    BYTE PTR [edx],cl
  41396f:	inc    DWORD PTR [eax]
  413971:	and    al,0x89
  413973:	pop    edi
  413974:	adc    cl,ah
  413976:	fwait
  413977:	or     esp,0xffffffd6
  41397a:	add    BYTE PTR [esi-0xfe002d],dh
  413980:	add    dl,ch
  413982:	(bad)  
  413983:	fxch   st(0)
  413985:	add    BYTE PTR [edx+0x0],dh
  413988:	(bad)  
  413989:	fld    QWORD PTR [eax]
  41398b:	repnz (bad) 
  41398d:	call   FWORD PTR [eax]
  41398f:	(bad)  
  413990:	jmp    FWORD PTR [eax-0x1]
  413993:	push   esi
  413994:	mov    DWORD PTR [eax],eax
  413996:	xchg   esi,eax
  413997:	add    BYTE PTR [ecx+0x292bfffa],cl
  41399d:	call   FWORD PTR ds:0xff21ffff
  4139a3:	call   0xc2ff:0xffa983cf
  4139aa:	(bad)  
  4139ab:	mov    ecx,0x834cff19
  4139b0:	jmp    FWORD PTR [edx]
  4139b2:	call   FWORD PTR [ebx+ecx*4-0x764c00]
  4139b9:	outs   dx,DWORD PTR ds:[esi]
  4139ba:	dec    DWORD PTR [edx-0x5c002b]
  4139c0:	push   edx
  4139c2:	inc    esi
  4139c4:	js     0x4139c5
  4139c6:	ja     0x4139c7
  4139c8:	inc    edx
  4139ca:	int3   
  4139cb:	push   ss
  4139cc:	mov    DWORD PTR fs:[esi-0x3ff7d],eax
  4139d3:	dec    esi
  4139d4:	jle    0x4139d6
  4139d6:	cmp    edi,0x33ff9189
  4139dc:	dec    esi
  4139dd:	add    BYTE PTR [esi],al
  4139df:	inc    DWORD PTR [eax]
  4139e1:	(bad)  
  4139e2:	call   FWORD PTR [esi]
  4139e4:	mov    ebx,0xffff83
  4139e9:	or     DWORD PTR [eax],eax
  4139eb:	add    ecx,eax
  4139ed:	add    BYTE PTR [edi+edi*8-0x41ff0301],ch
  4139f4:	add    eax,DWORD PTR [eax]
  4139f6:	dec    edx
  4139f7:	add    bh,bh
  4139f9:	add    BYTE PTR [eax],al
  4139fb:	xor    al,0x75
  4139fd:	jmp    DWORD PTR [ecx]
  4139ff:	add    bh,bh
  413a01:	in     al,0x83
  413a03:	pop    ds
  413a04:	and    al,0x0
  413a06:	push   ecx
  413a07:	dec    DWORD PTR [ecx+0xe1a8322]
  413a0d:	or     DWORD PTR ds:0xff0fff83,0x4e
  413a14:	iret   
  413a15:	call   FWORD PTR [ecx+0x0]
  413a18:	add    BYTE PTR [ecx-0x76e9da01],cl
  413a1e:	dec    ecx
  413a1f:	inc    DWORD PTR [eax]
  413a21:	adc    ah,cl
  413a23:	mov    BYTE PTR [esi],bh
  413a25:	mov    DWORD PTR [edx-0x33457c01],ebx
  413a2b:	xchg   dl,dh
  413a2d:	int3   
  413a2e:	dec    ecx
  413a2f:	(bad)  
  413a30:	call   FWORD PTR [eax]
  413a32:	(bad)  
  413a33:	in     al,dx
  413a34:	scas   al,BYTE PTR es:[edi]
  413a35:	adc    edi,0xffffffff
  413a38:	push   DWORD PTR [ebx-0x7d]
  413a3b:	or     edi,DWORD PTR [esi]
  413a3d:	dec    esi
  413a3f:	int3   
  413a40:	or     DWORD PTR [esi-0x1],0x54
  413a44:	jmp    0x413a12
  413a46:	xchg   edx,eax
  413a47:	add    BYTE PTR [eax],al
  413a49:	add    BYTE PTR [bp-0x3d],ah
  413a4d:	add    BYTE PTR [ebp+0x4b4accff],ch
  413a53:	call   0xcfcb3a24
  413a58:	push   DWORD PTR ds:0xcce5ffff
  413a5e:	cmp    dh,ch
  413a60:	jmp    FWORD PTR [edi+0x1a]
  413a63:	or     eax,0x73ff00ff
  413a68:	jmp    DWORD PTR [ebx-0x6a0001]
  413a6e:	lds    esi,FWORD PTR [ecx+0x7574b6cc]
  413a74:	(bad)  
  413a75:	(bad)  
  413a76:	jmp    FWORD PTR [esi-0x761377]
  413a7c:	je     0x413a7e
  413a7e:	aaa    
  413a7f:	pop    edi
  413a80:	add    BYTE PTR [edi+esi*4+0xffcc4a],ch
  413a87:	retf   0x1900
  413a8a:	inc    DWORD PTR [ebx+0x6538ff86]
  413a90:	inc    DWORD PTR [esi-0x33]
  413a93:	add    eax,DWORD PTR [ebx-0x2e7601]
  413a99:	pop    ebp
  413a9a:	inc    DWORD PTR [eax]
  413a9c:	jae    0x413a6a
  413a9e:	lea    ebx,[ebp+0x0]
  413aa1:	adc    ch,bl
  413aa3:	(bad)  
  413aa5:	(bad)  
  413aa6:	call   DWORD PTR [ecx]
  413aa8:	(bad)  
  413aa9:	jnp    0x413aaa
  413aab:	inc    DWORD PTR [edi]
  413aad:	(bad)  
  413aae:	cmp    eax,0x5bffff56
  413ab3:	pop    es
  413ab4:	add    bh,bh
  413ab6:	and    ecx,0xffffffff
  413ab9:	fadd   QWORD PTR [eax]
  413abb:	cmp    DWORD PTR [ebx-0x1],0x7e
  413abf:	jge    0x413ac1
  413ac1:	jmp    0x404032
  413ac6:	sbb    DWORD PTR [esi],0xffffff89
  413ac9:	adc    edi,edi
  413acb:	int3   
  413acc:	xor    BYTE PTR [ecx+0x49002c1a],cl
  413ad2:	cli    
  413ad3:	adc    eax,DWORD PTR [eax]
  413ad5:	add    DWORD PTR [ebx+0x60ffa8],0xffffffff
  413adc:	dec    esp
  413add:	call   FWORD PTR [ebx-0x9]
  413ae0:	add    BYTE PTR [ebx+0x71],bh
  413ae3:	leave  
  413ae4:	add    bh,bh
  413ae6:	mov    DWORD PTR [ebx],eax
  413ae8:	add    BYTE PTR [eax+eax*1-0x34],al
  413aec:	out    0xcc,eax
  413aee:	pushf  
  413aef:	sub    BYTE PTR [eax],al
  413af1:	(bad)  
  413af2:	xchg   edi,eax
  413af3:	push   0xffffffff
  413af5:	add    bh,bh
  413af7:	scas   eax,DWORD PTR es:[edi]
  413af8:	add    al,al
  413afa:	inc    DWORD PTR [eax]
  413afc:	pop    ebx
  413afd:	add    BYTE PTR [esp+edi*1-0x1],dl
  413b01:	push   ebx
  413b02:	and    BYTE PTR [ecx],al
  413b04:	inc    DWORD PTR [eax]
  413b06:	add    BYTE PTR [ecx],ch
  413b08:	mov    DWORD PTR [edx-0x34],edi
  413b0b:	(bad)  
  413b0c:	jns    0x413b0d
  413b0e:	jmp    0xffb2:0x96b8ff89
  413b15:	add    DWORD PTR [eax],0x1c
  413b18:	(bad)  
  413b19:	mov    edi,0x8950cc00
  413b1e:	clc    
  413b1f:	pop    edi
  413b20:	dec    edx
  413b22:	rcr    DWORD PTR [edi+edi*8],1
  413b25:	dec    esp
  413b27:	mov    ebx,0x2ff
  413b2c:	pop    ebx
  413b2d:	jmp    DWORD PTR ds:0xbccaffdf
  413b33:	dec    edi
  413b34:	add    bh,bh
  413b36:	add    BYTE PTR [edx-0x1],dl
  413b39:	push   0xcc9dff83
  413b3e:	and    eax,0x697bffb7
  413b43:	data16 (bad) 
  413b45:	inc    DWORD PTR [eax]
  413b47:	out    dx,al
  413b48:	add    BYTE PTR [edx-0x1],bl
  413b4b:	int3   
  413b4c:	repz mov ecx,ebp
  413b4f:	sub    esp,ecx
  413b51:	fs xchg ebx,eax
  413b53:	cmp    DWORD PTR [eax],eax
  413b55:	(bad)  
  413b56:	jmp    FWORD PTR [ecx-0x7d]
  413b59:	call   0xfafb:0x63ff89
  413b60:	add    ch,cl
  413b62:	stc    
  413b63:	in     eax,0xff
  413b65:	mov    DWORD PTR [ebx+0x3583a6],eax
  413b6b:	jmp    FWORD PTR [esi+0xc066ff]
  413b71:	or     esp,DWORD PTR [esi-0x43]
  413b74:	add    BYTE PTR [ebx+0x57fffdcc],al
  413b7a:	(bad)  
  413b7b:	jmp    FWORD PTR [ecx-0x7d]
  413b7e:	psrlq  mm7,mm7
  413b81:	push   0x89ff278c
  413b86:	int3   
  413b87:	repz jmp FWORD PTR [ebx-0x33a27601]
  413b8e:	sbb    al,0x95
  413b90:	mov    DWORD PTR [edi+0x838450],ecx
  413b96:	add    BYTE PTR [ebx+eax*4],ch
  413b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b9a:	cmp    edi,0x74
  413b9d:	jmp    FWORD PTR [esi+0x571fcc27]
  413ba3:	stos   DWORD PTR es:[edi],eax
  413ba4:	inc    DWORD PTR [ebx-0x2d00a201]
  413baa:	(bad)  
  413bab:	jmp    DWORD PTR [ecx]
  413bad:	add    BYTE PTR [edi+ebp*2-0x1],dl
  413bb1:	push   ds
  413bb2:	inc    esp
  413bb3:	popf   
  413bb4:	(bad)  
  413bb5:	inc    DWORD PTR [ebx+0x4e8903]
  413bbb:	inc    DWORD PTR [ecx+0x2ca700]
  413bc1:	mov    BYTE PTR [eax+0xff8343],cl
  413bc7:	mov    al,0x0
  413bc9:	sub    edi,edi
  413bcb:	jmp    FWORD PTR [ebx-0x7648e500]
  413bd1:	mov    eax,0xcc838710
  413bd6:	dec    esi
  413bd8:	xor    edi,0xffffffff
  413bdb:	dec    DWORD PTR [ebx]
  413bdd:	int3   
  413bde:	mov    ds:0x275989e1,eax
  413be3:	xchg   ebp,eax
  413be4:	(bad)  
  413be5:	(bad)  
  413be6:	jmp    FWORD PTR [ebx-0x34]
  413be9:	(bad)  
  413beb:	(bad)  
  413bec:	fld    QWORD PTR [ebx-0x20025dc]
  413bf2:	test   BYTE PTR [eax+0x6cffffff],al
  413bf8:	inc    esp
  413bfa:	add    DWORD PTR [eax],0x1e
  413bfd:	add    cl,ah
  413bff:	or     eax,0x54265bff
  413c04:	add    bh,bh
  413c06:	and    DWORD PTR [esi],0xffffffff
  413c09:	test   eax,0xccaeffff
  413c0e:	mov    ecx,0x3a90002f
  413c13:	pop    ds
  413c14:	dec    esp
  413c16:	jmp    FWORD PTR [ebp-0x34]
  413c19:	mov    esi,0xffabff00
  413c1e:	dec    edx
  413c1f:	add    DWORD PTR [eax],0x18
  413c22:	sbb    DWORD PTR [eax],edi
  413c24:	inc    DWORD PTR [eax]
  413c26:	call   FWORD PTR [ebp-0x1]
  413c29:	arpl   di,di
  413c2b:	sub    DWORD PTR [eax],0xffffffff
  413c2e:	ss mov dh,0xff
  413c31:	xchg   esp,eax
  413c32:	sbb    BYTE PTR [ebx-0x1],0xff
  413c36:	add    BYTE PTR [esi-0x1],dh
  413c39:	push   0x76ff00
  413c3e:	pushf  
  413c3f:	xchg   esi,eax
  413c40:	(bad)  
  413c41:	in     eax,dx
  413c42:	xor    dh,BYTE PTR [ecx]
  413c44:	add    BYTE PTR [eax],al
  413c46:	int3   
  413c47:	(bad)  
  413c48:	call   FWORD PTR [edx]
  413c4a:	add    ah,cl
  413c4c:	sar    bh,cl
  413c4e:	nop
  413c4f:	sbb    al,BYTE PTR [ebx-0x7c094b52]
  413c55:	inc    DWORD PTR [ebx+0x260056]
  413c5b:	mov    DWORD PTR [eax],edi
  413c5d:	inc    DWORD PTR [esi-0x6d88005b]
  413c63:	in     al,0xff
  413c65:	add    BYTE PTR [ecx-0x98ff96],cl
  413c6b:	dec    DWORD PTR [eax-0x34]
  413c6e:	pop    ebp
  413c6f:	xchg   bh,bh
  413c71:	pop    edx
  413c72:	daa    
  413c73:	pusha  
  413c74:	add    ah,cl
  413c76:	jmp    eax
  413c78:	add    BYTE PTR [eax],dl
  413c7a:	add    BYTE PTR [eax],al
  413c7c:	push   es
  413c7d:	dec    DWORD PTR [ebp+0x25abffc0]
  413c83:	jp     0x413c84
  413c85:	(bad)  
  413c86:	call   FWORD PTR [ebp-0x7c7c2b01]
  413c8c:	lahf   
  413c8d:	push   DWORD PTR [edi]
  413c8f:	out    dx,al
  413c90:	jmp    DWORD PTR [ebx-0x43]
  413c93:	and    DWORD PTR [ecx-0x7c467601],ecx
  413c99:	sub    al,BYTE PTR [eax]
  413c9b:	jmp    DWORD PTR [esi]
  413c9d:	add    BYTE PTR [edi+0x517ffff4],dh
  413ca3:	jmp    0x43c53c2b
  413ca8:	push   DWORD PTR [edx-0x7d]
  413cab:	jmp    DWORD PTR [eax]
  413cad:	dec    DWORD PTR [ebx-0x11e8006a]
  413cb3:	xchg   ebx,eax
  413cb4:	(bad)  
  413cb5:	(bad)  
  413cb6:	(bad)  
  413cb7:	cld    
  413cb8:	add    BYTE PTR [ecx-0x7d],al
  413cbb:	call   ecx
  413cbd:	jmp    DWORD PTR ds:0xc38fffbf
  413cc3:	sbb    BYTE PTR [eax],al
  413cc5:	(bad)  
  413cc6:	call   DWORD PTR [ecx-0x7c00b701]
  413ccc:	jp     0x413cce
  413cce:	scas   eax,DWORD PTR es:[edi]
  413ccf:	and    bh,bh
  413cd1:	bound  eax,QWORD PTR [edx-0x17]
  413cd4:	(bad)  
  413cd5:	(bad)  
  413cd6:	push   esp
  413cd8:	add    BYTE PTR [edi-0xcc0000],bh
  413cde:	adc    BYTE PTR [edx-0x79726f7d],dh
  413ce4:	int3   
  413ce5:	inc    DWORD PTR [eax]
  413ce7:	dec    ebp
  413ce8:	jmp    DWORD PTR [ecx-0x7d]
  413ceb:	mov    DWORD PTR [ebp+0x7c2bff],ebp
  413cf1:	shl    DWORD PTR [edx],cl
  413cf3:	mov    ds:0xf4ff00cc,al
  413cf8:	jmp    FWORD PTR [ecx-0x7c053400]
  413cfe:	shl    BYTE PTR [esi+0xb74e0ff],0xff
  413d05:	add    DWORD PTR [ebx-0xeaff0e],0xffffff89
  413d0c:	and    esp,ecx
  413d0e:	loop   0x413ccb
  413d10:	int3   
  413d11:	xchg   cl,ch
  413d13:	ins    DWORD PTR es:[edi],dx
  413d14:	int3   
  413d15:	(bad)  
  413d16:	call   edx
  413d18:	call   FWORD PTR [esi-0x338d7700]
  413d1e:	mov    ch,0x9b
  413d20:	jmp    FWORD PTR [edx]
  413d22:	(bad)  
  413d23:	push   ss
  413d24:	add    ah,cl
  413d26:	inc    DWORD PTR [edi-0x7c6601]
  413d2c:	hlt    
  413d2d:	push   DWORD PTR [edi+eax*1]
  413d30:	add    bh,ah
  413d32:	sub    dl,BYTE PTR [eax-0x1]
  413d35:	inc    DWORD PTR [eax]
  413d37:	push   edi
  413d38:	call   DWORD PTR [ecx+ecx*4+0x750036ff]
  413d3f:	dec    esp
  413d40:	xor    DWORD PTR [ecx+0xb],0xe
  413d44:	cmp    edi,0x0
  413d47:	stos   BYTE PTR es:[edi],al
  413d48:	push   DWORD PTR [edi-0x36ff01]
  413d4e:	inc    esp
  413d4f:	test   DWORD PTR [ebx-0xaa57ad],0xfffd0083
  413d59:	inc    ebp
  413d5a:	add    bh,bh
  413d5c:	jle    0x413d2a
  413d5e:	pusha  
  413d5f:	inc    ebp
  413d60:	call   FWORD PTR [eax]
  413d62:	fdivr  QWORD PTR [edi]
  413d64:	inc    DWORD PTR [eax]
  413d66:	jmp    ebx
  413d68:	(bad)  
  413d69:	fild   WORD PTR [ebx+0x6f0094ff]
  413d6f:	ret    
  413d70:	int3   
  413d71:	xchg   ecx,eax
  413d72:	xchg   DWORD PTR [esi],ebp
  413d74:	int3   
  413d75:	(bad)  
  413d76:	jmp    FWORD PTR [ebx-0xff5977]
  413d7c:	notrack call eax
  413d7f:	(bad)  
  413d80:	call   FWORD PTR [edx]
  413d82:	adc    ecx,DWORD PTR [ebx-0x1]
  413d85:	add    BYTE PTR [eax],al
  413d87:	iret   
  413d88:	add    BYTE PTR [edi+edi*8-0x4000700],dl
  413d8f:	ror    esp,1
  413d91:	js     0x413e01
  413d93:	and    al,0x83
  413d95:	dec    esp
  413d97:	add    eax,DWORD PTR [ebx-0x3233ff1e]
  413d9d:	add    BYTE PTR [edx+0x27],al
  413da0:	add    BYTE PTR ds:0x89ff327f,bl
  413da6:	add    BYTE PTR [eax-0xff4601],al
  413dac:	xor    al,0x89
  413dae:	and    ah,BYTE PTR [eax]
  413db0:	jmp    DWORD PTR [ebx]
  413db2:	xchg   BYTE PTR [ecx],bh
  413db4:	inc    DWORD PTR [eax]
  413db6:	jmp    DWORD PTR [ebx-0x76fff401]
  413dbc:	pop    ss
  413dbd:	add    BYTE PTR [eax-0x4e],dh
  413dc0:	add    BYTE PTR [ecx-0xfff899],ch
  413dc6:	call   ebx
  413dc8:	add    BYTE PTR [eax-0x7cdf7601],ch
  413dce:	jle    0x413d93
  413dd0:	add    bl,ah
  413dd2:	cdq    
  413dd3:	xlat   BYTE PTR ds:[ebx]
  413dd4:	inc    DWORD PTR [eax]
  413dd6:	call   FWORD PTR [ecx-0x1]
  413dd9:	push   esp
  413dda:	dec    DWORD PTR [ecx+0x86fff02]
  413de0:	int3   
  413de1:	sti    
  413de2:	jmp    0xff3e:0xcc9c
  413de9:	rol    DWORD PTR [ebx+0x6883dc89],cl
  413def:	and    cl,BYTE PTR [ecx+0x71189d]
  413df5:	mov    DWORD PTR [eax],eax
  413df7:	sub    edi,edi
  413df9:	jl     0x413dfa
  413dfb:	int3   
  413dfc:	call   DWORD PTR cs:[esi-0x77ba7c8d]
  413e03:	cld    
  413e04:	(bad)  
  413e05:	inc    DWORD PTR [eax]
  413e07:	stc    
  413e08:	jmp    ecx
  413e0a:	mov    edi,edi
  413e0c:	loope  0x413e0e
  413e0e:	jbe    0x413e56
  413e10:	int3   
  413e11:	inc    ecx
  413e12:	ins    DWORD PTR es:[edi],dx
  413e13:	pop    DWORD PTR [ebx-0xe1ff01]
  413e19:	in     al,0x89
  413e1b:	or     DWORD PTR [edi-0x7d],0xffffffce
  413e1f:	push   edx
  413e20:	add    BYTE PTR [eax-0x16],bh
  413e23:	dec    edi
  413e24:	inc    DWORD PTR [eax]
  413e26:	add    BYTE PTR [edx-0x7c33ee01],bl
  413e2c:	or     DWORD PTR [eax],eax
  413e2e:	std    
  413e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e30:	add    BYTE PTR [edx],ch
  413e32:	and    edx,esp
  413e34:	(bad)  
  413e35:	inc    DWORD PTR [ebx-0x7333c4]
  413e3b:	int3   
  413e3c:	xor    al,0x0
  413e3e:	mov    esp,gs
  413e40:	dec    DWORD PTR [edx]
  413e42:	fucomi st,st(0)
  413e44:	(bad)  
  413e45:	inc    DWORD PTR [ebx-0x94ffa4]
  413e4b:	add    BYTE PTR [eax-0x33e6e300],ah
  413e51:	test   al,cl
  413e53:	add    edi,edi
  413e55:	cmp    edi,0xffffff89
  413e58:	jmp    FWORD PTR [edx-0x7c9f0100]
  413e5e:	mov    cl,0x1b
  413e60:	add    BYTE PTR [edi-0xff8599],ch
  413e66:	jmp    FWORD PTR [ebp-0x34]
  413e69:	add    al,BYTE PTR [eax]
  413e6b:	(bad)  
  413e6c:	jle    0x413e3a
  413e6e:	cmp    dl,BYTE PTR [ebp-0x34]
  413e71:	retf   0xda82
  413e74:	mov    DWORD PTR [ebx+0x4cff92ff],eax
  413e7a:	add    ah,cl
  413e7c:	fld    QWORD PTR [ebx-0x2b0078be]
  413e82:	mov    edi,0x8300ff0e
  413e87:	and    al,0xcc
  413e89:	mov    ds:0xffbfff00,al
  413e8e:	add    eax,0x5e24fff5
  413e93:	arpl   di,di
  413e95:	(bad)  
  413e96:	inc    DWORD PTR [edi+edi*8-0x6a]
  413e9a:	mov    DWORD PTR [eax],eax
  413e9c:	out    dx,al
  413e9d:	sub    DWORD PTR [ecx+edx*8+0x0],0x13
  413ea2:	pushf  
  413ea3:	mov    ch,0xff
  413ea5:	inc    DWORD PTR [eax]
  413ea7:	xor    bh,bh
  413ea9:	out    dx,eax
  413eaa:	(bad)  
  413eab:	push   DWORD PTR [ebx+0x0]
  413eae:	inc    esp
  413eaf:	jnp    0x413e7d
  413eb1:	dec    esp
  413eb2:	cs dec ecx
  413eb4:	add    bh,bh
  413eb6:	dec    DWORD PTR [esi-0x7c00c300]
  413ebc:	and    eax,0x7f49ff
  413ec1:	les    ebx,FWORD PTR [ebx]
  413ec3:	ins    DWORD PTR es:[edi],dx
  413ec4:	int3   
  413ec5:	(bad)  
  413ec6:	push   esp
  413ec8:	jmp    DWORD PTR [edi+edi*8]
  413ecb:	add    BYTE PTR [esi-0x1],ch
  413ece:	aas    
  413ecf:	cld    
  413ed0:	sub    ebx,0xffffffd7
  413ed3:	or     DWORD PTR es:[ecx-0x64006301],0x0
  413edb:	jmp    DWORD PTR [ebx-0x6a5701]
  413ee1:	(bad)  [edi-0x9]
  413ee4:	int3   
  413ee5:	(bad)  
  413ee6:	call   FWORD PTR [eax+0x0]
  413ee9:	scas   al,BYTE PTR es:[edi]
  413eea:	add    bh,bh
  413eec:	inc    esp
  413eed:	call   FWORD PTR [ecx-0x1f]
  413ef0:	add    BYTE PTR [edx-0xff0fd8],dh
  413ef6:	mov    DWORD PTR [esi-0x1],ebx
  413ef9:	push   ss
  413efa:	add    bh,bh
  413efc:	sar    edi,cl
  413efe:	cmp    eax,DWORD PTR [eax+0x2cc39dcc]
  413f04:	add    BYTE PTR [eax],al
  413f06:	jmp    DWORD PTR ds:0x830036ff
  413f0c:	pop    es
  413f0d:	int3   
  413f0e:	push   ss
  413f0f:	sti    
  413f10:	(bad)  
  413f11:	(bad)  
  413f12:	jmp    0x413f5a
  413f14:	inc    DWORD PTR [ebx-0xc009a01]
  413f1a:	add    bh,bh
  413f1c:	stos   BYTE PTR es:[edi],al
  413f1d:	call   DWORD PTR [ebx+0x76d383c6]
  413f23:	stc    
  413f24:	(bad)  
  413f25:	dec    esp
  413f27:	mov    ebx,0x833acc
  413f2c:	jne    0x413f2d
  413f2e:	mov    esp,0xd0caffb6
  413f33:	or     ah,0xff
  413f36:	(bad)  
  413f37:	mov    eax,0x83ff94ff
  413f3c:	idiv   edi
  413f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f3f:	mov    eax,0xd7064200
  413f44:	add    DWORD PTR [ebx-0x2e335d00],0x0
  413f4b:	xor    eax,0xffffffff
  413f4e:	out    0x43,eax
  413f50:	jmp    FWORD PTR [edi+eax*1-0x2f]
  413f54:	cmp    edi,0xffffffcc
  413f57:	(bad)  
  413f58:	(bad)  
  413f59:	std    
  413f5a:	(bad)  
  413f5b:	(bad)  
  413f5c:	jnp    0x413f5e
  413f5e:	add    al,BYTE PTR [ebx+0x4b58f2ff]
  413f64:	(bad)  
  413f65:	inc    DWORD PTR [eax]
  413f67:	imul   edi,edi,0xffffffe7
  413f6a:	add    DWORD PTR [ebx+0x7af0ff31],0xffffffff
  413f71:	popf   
  413f72:	repz or al,0xff
  413f75:	(bad)  
  413f76:	push   ecx
  413f78:	add    BYTE PTR [esi],dh
  413f7a:	mov    edi,edi
  413f7c:	jmp    0x413f7d
  413f7e:	jg     0x413f9d
  413f80:	dec    DWORD PTR ds:0xcc460a
  413f86:	add    BYTE PTR [eax-0x1],dl
  413f89:	mov    esi,0x83bbffff
  413f8e:	into   
  413f8f:	sbb    eax,0xd4aaaa00
  413f94:	(bad)  
  413f95:	inc    DWORD PTR [ebx-0x9c0003]
  413f9b:	add    BYTE PTR [eax-0x1],cl
  413f9e:	fcomp  st(0)
  413fa0:	int3   
  413fa1:	mov    DWORD PTR [edi-0xff0031],eax
  413fa7:	(bad)
  413fab:	(bad)  
  413fac:	mov    ebp,0xffb6f800
  413fb1:	lods   eax,DWORD PTR ds:[esi]
  413fb2:	inc    edi
  413fb3:	jmp    0x413fb4
  413fb5:	add    bh,bh
  413fb7:	dec    eax
  413fb8:	mov    DWORD PTR [eax],ebp
  413fba:	add    ah,cl
  413fbc:	xor    edi,edi
  413fbe:	mov    sp,0x6cff
  413fc2:	ret    
  413fc3:	adc    al,0xff
  413fc5:	or     esp,0x59
  413fc8:	add    ecx,0x0
  413fcb:	add    bh,bh
  413fcd:	add    ch,bl
  413fcf:	in     eax,0x0
  413fd1:	xor    ah,bl
  413fd3:	adc    al,BYTE PTR [eax]
  413fd5:	(bad)  
  413fd6:	jmp    ebp
  413fd8:	call   esi
  413fda:	add    BYTE PTR [eax],al
  413fdc:	or     eax,0x2859ff
  413fe1:	sub    edx,DWORD PTR [edx]
  413fe3:	sub    BYTE PTR [ebx-0x7ca6767d],al
  413fe9:	and    eax,0xcc1e00ff
  413fee:	inc    esi
  413fef:	arpl   WORD PTR [eax],ax
  413ff1:	cld    
  413ff2:	call   FWORD PTR [eax-0x1]
  413ff5:	(bad)  
  413ff6:	dec    DWORD PTR [ecx]
  413ff8:	add    BYTE PTR [eax],cl
  413ffa:	add    ah,cl
  413ffc:	arpl   di,di
  413ffe:	jmp    0x413feb
  414000:	inc    ebp
  414002:	nop
  414003:	xchg   edi,edi
  414005:	add    DWORD PTR [eax],0xffffffa6
  414008:	and    DWORD PTR [edi-0x7d],0xffffffcc
  41400c:	jne    0x41400d
  41400e:	(bad)  
  414010:	(bad)  
  414011:	mov    ebx,0xff1d
  414016:	add    BYTE PTR [eax+0x0],ah
  414019:	(bad)  
  41401b:	call   DWORD PTR [edi+edi*8+0x3ecc0c8b]
  414022:	pop    ebx
  414023:	clc    
  414024:	(bad)  
  414025:	dec    esp
  414027:	in     al,0x0
  414029:	aaa    
  41402a:	add    bh,bh
  41402c:	pop    edi
  41402d:	add    bl,dl
  41402f:	cmp    bh,0x19
  414032:	xchg   BYTE PTR [ecx+0x48ffccff],cl
  414038:	(bad)  
  414039:	fiadd  DWORD PTR [ebx+0x4c009e00]
  41403f:	retf   0xc800
  414042:	in     eax,0xd
  414044:	dec    esp
  414046:	(bad)  
  414047:	sti    
  414048:	int3   
  414049:	arpl   WORD PTR [ecx-0x3c007f01],cx
  41404f:	push   edx
  414050:	add    BYTE PTR [ebx+0x6cd9],ah
  414056:	mov    DWORD PTR [ebp-0x7d],eax
  414059:	sbb    eax,0xe28900
  41405e:	hlt    
  41405f:	adc    al,0x0
  414061:	pop    eax
  414062:	sbb    dh,dh
  414064:	(bad)  
  414065:	(bad)  
  414066:	dec    esp
  414068:	int3   
  414069:	xor    al,BYTE PTR [eax]
  41406b:	add    cl,bh
  41406d:	adc    DWORD PTR [ebp+0x7914ffcb],0xffffff9b
  414074:	add    BYTE PTR [ecx+0x57891e00],cl
  41407a:	add    BYTE PTR [eax],al
  41407c:	out    0x0,al
  41407e:	stos   BYTE PTR es:[edi],al
  41407f:	or     eax,0xf69413ff
  414084:	inc    DWORD PTR [eax]
  414086:	jmp    FWORD PTR [ecx-0x7c00107d]
  41408c:	out    0xff,al
  41408e:	mov    ch,al
  414090:	add    BYTE PTR [ecx-0x38],bl
  414093:	stos   DWORD PTR es:[edi],eax
  414094:	add    BYTE PTR [ebx+0x3383bd83],al
  41409a:	add    DWORD PTR [eax],0xffffffba
  41409d:	call   DWORD PTR [ecx+0x33bc00b5]
  4140a3:	fcos   
  4140a5:	inc    DWORD PTR [ebx-0x84009b]
  4140ab:	add    BYTE PTR [ecx],al
  4140ad:	int3   
  4140ae:	mov    al,ds:0xce9389bd
  4140b3:	nop
  4140b4:	(bad)  
  4140b5:	(bad)  
  4140b6:	(bad)  
  4140b7:	mov    esi,0xff002083
  4140bc:	push   es
  4140bd:	jmp    ebx
  4140bf:	cmp    edi,0x2f7c9a
  4140c5:	(bad)  
  4140c6:	(bad)  
  4140c7:	mov    esp,0x83ffc9ff
  4140cc:	sub    BYTE PTR [eax],al
  4140ce:	daa    
  4140cf:	inc    BYTE PTR [eax]
  4140d1:	xor    DWORD PTR [eax],esi
  4140d3:	jge    0x4140d5
  4140d5:	add    bh,bh
  4140d7:	pop    ebp
  4140d8:	push   esi
  4140da:	cmp    edi,0x8
  4140dd:	add    cl,bl
  4140df:	pusha  
  4140e0:	add    BYTE PTR [edi+0x1b],al
  4140e3:	addr16 (bad) 
  4140e5:	dec    DWORD PTR [ecx-0x167c38]
  4140eb:	jmp    DWORD PTR ds:0x899d0c83
  4140f1:	push   esi
  4140f2:	int    0x34
  4140f4:	add    bh,bh
  4140f6:	(bad)  
  4140f7:	jmp    0x1404985
  4140fc:	dec    edx
  4140fd:	dec    DWORD PTR [edi+0x70]
  414100:	inc    DWORD PTR [eax+0x4f]
  414103:	sar    edi,cl
  414105:	mov    DWORD PTR [eax],eax
  414107:	pop    ss
  414108:	(bad)  
  414109:	fdivr  st,st(7)
  41410b:	push   DWORD PTR [ebx-0x77]
  41410e:	fwait
  41410f:	aas    
  414110:	add    BYTE PTR [ebx-0x65],al
  414113:	in     al,0xff
  414115:	add    BYTE PTR [eax],al
  414117:	(bad)  
  414119:	dec    esi
  41411a:	inc    DWORD PTR [eax]
  41411c:	xchg   esi,eax
  41411d:	adc    DWORD PTR [ebp+0x162aff25],0x75
  414124:	add    BYTE PTR [eax],al
  414126:	add    bl,cl
  414128:	add    BYTE PTR [ebx-0x34],al
  41412b:	(bad)  
  41412c:	fild   DWORD PTR [eax]
  41412e:	stc    
  41412f:	iret   
  414130:	jmp    FWORD PTR [edx+edx*1]
  414133:	adc    DWORD PTR [ebx-0x800001],eax
  414139:	jmp    0x73c4c1
  41413e:	loopne 0x414175
  414140:	add    BYTE PTR [ecx+0x3],ah
  414143:	mov    bh,bh
  414145:	(bad)  
  414146:	jmp    FWORD PTR [edi]
  414148:	mov    DWORD PTR [esi],ebp
  41414a:	add    BYTE PTR [ebx+0x4c6583d2],al
  414150:	push   eax
  414152:	scas   eax,DWORD PTR es:[edi]
  414153:	pop    esi
  414154:	(bad)  
  414155:	(bad)  
  414156:	dec    edx
  414158:	mov    DWORD PTR [ebx+0xf98300],esp
  41415e:	xchg   esi,eax
  41415f:	push   edx
  414160:	or     DWORD PTR [ecx],0xffffffa0
  414163:	cmp    DWORD PTR [ebx-0x7ca37c01],eax
  414169:	into   
  41416a:	(bad)  
  41416b:	(bad)  
  41416c:	jp     0x4140f1
  41416e:	mov    ds:0x23d0cc09,eax
  414173:	xor    ah,cl
  414175:	int3   
  414176:	add    BYTE PTR [edi-0x1],dh
  414179:	add    al,0xff
  41417b:	and    ebp,0xffffffff
  41417e:	std    
  41417f:	or     edi,edi
  414181:	pushf  
  414182:	sbb    DWORD PTR [edi-0x7d],0xffffffff
  414186:	call   FWORD PTR [edi+edi*8]
  414189:	jnp    0x41418a
  41418b:	(bad)  
  41418c:	cmp    al,0x0
  41418e:	popf   
  41418f:	loopne 0x414190
  414191:	adc    esp,DWORD PTR [ecx-0x7e]
  414194:	(bad)  
  414195:	(bad)  
  414196:	call   DWORD PTR [ebp-0x1]
  414199:	popf   
  41419a:	dec    DWORD PTR [ecx-0x2e4176a7]
  4141a0:	add    BYTE PTR [edi],bl
  4141a2:	mov    bh,0xff
  4141a4:	(bad)  
  4141a5:	inc    DWORD PTR [eax]
  4141a7:	cmp    ah,cl
  4141a9:	pop    ds
  4141aa:	add    bh,bh
  4141ac:	and    DWORD PTR [eax],eax
  4141ae:	sbb    BYTE PTR [edi-0x7d],dh
  4141b1:	jns    0x414158
  4141b3:	sti    
  4141b4:	inc    DWORD PTR [eax]
  4141b6:	add    cl,ah
  4141b8:	(bad)  
  4141b9:	mov    ecx,0xffef00cc
  4141be:	pop    ebx
  4141bf:	mov    ebx,0x2ed07fff
  4141c4:	inc    DWORD PTR [eax]
  4141c6:	mov    DWORD PTR [edi+edi*8-0x6c000017],ecx
  4141cd:	add    BYTE PTR [esi+0x6f71ff59],ch
  4141d3:	pop    ebp
  4141d4:	add    BYTE PTR [eax],al
  4141d6:	int3   
  4141d7:	ret    0x9283
  4141da:	int3   
  4141db:	int3   
  4141dc:	fisttp QWORD PTR [ecx+0x56ff367b]
  4141e2:	cmc    
  4141e3:	cmp    bh,0xff
  4141e6:	call   edi
  4141e8:	int3   
  4141e9:	xchg   BYTE PTR [eax],al
  4141eb:	xor    DWORD PTR [ebp-0x56b901],0xfffffff0
  4141f2:	scas   eax,DWORD PTR es:[edi]
  4141f3:	push   esp
  4141f4:	add    DWORD PTR [eax],0x0
  4141f7:	push   0x0
  4141f9:	mov    dh,0x83
  4141fb:	call   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [esi-0x3521002e],ch
  414203:	or     BYTE PTR [ecx-0xb30001],cl
  414209:	mov    ebx,0xfe83ff
  41420e:	call   0x7f540eea
  414213:	retf   
  414214:	inc    DWORD PTR [eax]
  414216:	add    BYTE PTR [ebx],ch
  414218:	add    BYTE PTR [ebp+0x0],ah
  41421b:	jmp    DWORD PTR [ecx]
  41421d:	add    BYTE PTR [edx+0x67670007],bh
  414223:	(bad)  
  414227:	test   bh,bh
  414229:	stc    
  41422a:	(bad)  
  41422b:	dec    edx
  41422d:	dec    DWORD PTR [ecx-0x60]
  414230:	add    ah,ah
  414232:	mov    ecx,0xffff005d
  414237:	xchg   ebx,eax
  414238:	dec    DWORD PTR [ebx]
  41423a:	add    bh,bh
  41423c:	mov    ah,0x83
  41423e:	inc    eax
  41423f:	push   ecx
  414240:	and    DWORD PTR [eax-0x21],0xffffffe5
  414244:	(bad)  
  414245:	inc    DWORD PTR [eax]
  414247:	inc    ebx
  414248:	adc    DWORD PTR [edx+0xfff00],0x29
  41424f:	cmp    al,BYTE PTR [eax]
  414251:	mov    ch,0xfc
  414254:	(bad)  
  414255:	inc    DWORD PTR [eax]
  414257:	jle    0x414259
  414259:	lahf   
  41425a:	inc    DWORD PTR [eax]
  41425c:	(bad)  
  41425e:	add    BYTE PTR [ebx+0x78aea7cc],bh
  414264:	inc    DWORD PTR [eax]
  414266:	add    BYTE PTR [edi],dh
  414268:	add    BYTE PTR [edi+0x0],ah
  41426b:	(bad)  
  41426c:	jg     0x41426e
  41426e:	(bad)  
  41426f:	push   0xffffffff
  414271:	retf   0x1cf8
  414274:	mov    DWORD PTR [ebx+0x5e838983],eax
  41427a:	add    BYTE PTR [ecx-0x29f00f4],cl
  414280:	add    BYTE PTR [ebp+0x70],ch
  414283:	inc    DWORD PTR [ebx-0x5b007d]
  414289:	or     edi,edi
  41428b:	call   FWORD PTR [ecx+0x0]
  41428e:	pop    ds
  41428f:	sar    edi,1
  414291:	mov    al,ds:0x89892a5f
  414296:	mov    DWORD PTR [eax-0x7d],ebx
  414299:	in     al,dx
  41429a:	add    bh,bh
  41429c:	push   ecx
  41429d:	or     DWORD PTR [edi+0x4b5fff93],0xffffff98
  4142a4:	inc    DWORD PTR [ebx-0x36761901]
  4142aa:	add    bh,bh
  4142ac:	inc    edi
  4142ad:	int3   
  4142ae:	loopne 0x4142b7
  4142b0:	jmp    DWORD PTR [esi-0x7c124c]
  4142b6:	add    dl,cl
  4142b8:	(bad)  
  4142b9:	cmp    ah,cl
  4142bb:	push   DWORD PTR [edi+edi*8+0x7]
  4142bf:	mov    edi,edi
  4142c1:	inc    esi
  4142c2:	dec    ebp
  4142c3:	outs   dx,DWORD PTR ds:[esi]
  4142c4:	add    ah,cl
  4142c6:	add    BYTE PTR [ecx-0x3300a301],bh
  4142cc:	sti    
  4142cd:	call   esi
  4142cf:	(bad)
  4142d3:	sbb    al,0xff
  4142d5:	inc    DWORD PTR [eax]
  4142d7:	xor    eax,0x5d83
  4142dc:	out    dx,eax
  4142dd:	int3   
  4142de:	fidiv  WORD PTR [edi+edi*8-0x4c]
  4142e2:	fisub  WORD PTR [esi-0x77ff0001]
  4142e8:	add    BYTE PTR [eax],dl
  4142ea:	add    DWORD PTR [ebx-0x5539ff3b],0xffffffff
  4142f1:	ja     0x4142ec
  4142f3:	add    eax,0x6200ff00
  4142f8:	jmp    DWORD PTR [ebx+0xa100ff]
  4142fe:	mov    dh,0xd8
  414300:	mov    DWORD PTR [ecx],esi
  414302:	test   edx,0x5cff00cc
  414308:	or     DWORD PTR [ecx-0x7c630000],0xffffffa7
  41430f:	stc    
  414310:	inc    edx
  414312:	jmp    0x414318
  414314:	inc    DWORD PTR [eax]
  414316:	mov    eax,edi
  414318:	int3   
  414319:	mov    eax,0x834eccff
  41431e:	enter  0xff28,0xf3
  414322:	cdq    
  414323:	nop
  414324:	(bad)  
  414325:	dec    esp
  414327:	push   esp
  414328:	dec    DWORD PTR [esi]
  41432a:	inc    DWORD PTR [ebx-0x7b58007a]
  414330:	int3   
  414331:	or     eax,0xff4878
  414336:	call   DWORD PTR [ebp-0x33ffdf00]
  41433c:	addr16 int3 
  41433e:	jnp    0x4143a1
  414340:	add    BYTE PTR [edi-0x7c003d33],cl
  414346:	jmp    edx
  414348:	(bad)  
  414349:	jp     0x41434a
  41434b:	add    BYTE PTR [ebp+0xbf52ff],bh
  414351:	and    bl,BYTE PTR [edx+0x2]
  414354:	int3   
  414355:	inc    DWORD PTR [eax]
  414357:	pop    edi
  414358:	int3   
  414359:	dec    edi
  41435a:	(bad)  
  41435b:	inc    DWORD PTR [ecx-0x79a601]
  414361:	pop    esi
  414362:	pop    ebx
  414363:	inc    esp
  414364:	int3   
  414365:	add    DWORD PTR [eax],0xffffff9e
  414368:	add    BYTE PTR [ecx-0xcf007d],bl
  41436e:	test   BYTE PTR [edx],dh
  414370:	add    BYTE PTR [edi-0x78],al
  414373:	cld    
  414374:	add    bh,bh
  414376:	add    BYTE PTR [edi+edi*8-0x6900ff63],ch
  41437d:	call   FWORD PTR [eax-0x426ffa1]
  414383:	push   ecx
  414384:	cmp    edi,0xffffffcc
  414387:	add    edi,edi
  414389:	pop    edx
  41438a:	dec    esp
  41438c:	(bad)  
  41438d:	int3   
  41438e:	je     0x414382
  414390:	and    DWORD PTR [eax-0x7cff70c3],0xffffffff
  414397:	sbb    eax,0xff00d3ff
  41439c:	push   eax
  41439d:	add    dl,dh
  41439f:	or     al,0xff
  4143a1:	xor    BYTE PTR [ebp+0x77],dh
  4143a4:	add    bh,bh
  4143a6:	add    BYTE PTR [esp+ecx*8+0x57],dl
  4143aa:	add    bh,bh
  4143ac:	mov    ebx,0x3f6bcc
  4143b1:	fstp   QWORD PTR [edi+edi*8]
  4143b5:	add    ah,cl
  4143b7:	pusha  
  4143b8:	int3   
  4143b9:	pop    ecx
  4143ba:	add    BYTE PTR [ecx+0x77890054],cl
  4143c0:	dec    DWORD PTR [edi+ebp*1+0x54]
  4143c4:	dec    esp
  4143c6:	add    BYTE PTR [ecx+ecx*4],ah
  4143c9:	(bad)  
  4143ca:	inc    DWORD PTR [eax]
  4143cc:	mov    esi,0xffda43ff
  4143d1:	mov    edx,0xdcd3
  4143d6:	add    ah,ah
  4143d8:	int3   
  4143d9:	xchg   bh,bh
  4143db:	int3   
  4143dc:	into   
  4143dd:	jmp    FWORD PTR [eax-0x51e033dd]
  4143e3:	test   BYTE PTR [eax],0x89
  4143e6:	inc    eax
  4143e8:	call   DWORD PTR [ebx-0x7c000100]
  4143ee:	add    bl,BYTE PTR [eax-0x4a6afe7d]
  4143f4:	int3   
  4143f5:	(bad)  
  4143f6:	jmp    FWORD PTR [edi+edi*8+0x5b00ff6a]
  4143fd:	add    dh,dl
  4143ff:	iret   
  414400:	add    BYTE PTR [ebx-0x13],al
  414403:	xor    edi,edi
  414405:	mov    DWORD PTR [eax],eax
  414407:	cmp    BYTE PTR [eax],al
  414409:	add    eax,DWORD PTR [eax]
  41440b:	add    BYTE PTR [edi+edi*8-0x41],dl
  41440f:	(bad)  
  414410:	inc    esp
  414412:	fdiv   st,st(4)
  414414:	dec    DWORD PTR [ecx-0x47007501]
  41441a:	int3   
  41441b:	add    BYTE PTR [eax-0xffff7d],bl
  414421:	sbb    esi,edx
  414423:	mov    bh,0xff
  414425:	int3   
  414426:	add    BYTE PTR [edi-0x1],cl
  414429:	add    BYTE PTR cs:[eax],al
  41442c:	pop    ebp
  41442d:	add    BYTE PTR [edx-0x51ac0074],ch
  414433:	sub    al,0xff
  414435:	inc    DWORD PTR [ebx-0xe200d0]
  41443b:	add    BYTE PTR [eax+eax*1],ah
  41443e:	leave  
  41443f:	jb     0x4143c4
  414441:	pop    esp
  414442:	xor    esi,DWORD PTR [eax-0x1]
  414445:	(bad)  
  414446:	inc    DWORD PTR [ebp-0x1]
  414449:	in     al,0xff
  41444b:	cmp    DWORD PTR [ecx],0x0
  41444e:	sti    
  41444f:	ins    BYTE PTR es:[edi],dx
  414450:	call   DWORD PTR [edx+eax*2-0x7cff86]
  414457:	dec    ebx
  414458:	push   esp
  41445a:	inc    DWORD PTR [ebx+0x1a8a833d]
  414460:	push   DWORD PTR [esi+esi*2-0x7cff00cd]
  414467:	vmovddup ymm7,ymm7
  41446b:	add    BYTE PTR [ebp-0x7c386e34],dh
  414471:	(bad)  [ecx]
  414473:	popf   
  414474:	inc    DWORD PTR [eax]
  414476:	call   FWORD PTR [eax-0x1]
  414479:	imul   eax,DWORD PTR [ebx+0x7d000bff],0xfdca0025
  414483:	in     eax,0xff
  414485:	inc    DWORD PTR [ebx-0x76ef00c1]
  41448b:	(bad)  
  41448c:	cmp    ah,cl
  41448e:	popf   
  41448f:	and    DWORD PTR [bp-0x65],0x3
  414494:	mov    esp,ecx
  414496:	add    BYTE PTR [edi+edi*8-0x52],bh
  41449a:	add    BYTE PTR [ebx-0x3feb00e3],al
  4144a0:	add    BYTE PTR [eax+0x79],dh
  4144a3:	jmp    0x7e41442b
  4144a8:	int3   
  4144a9:	ror    ah,cl
  4144ab:	int3   
  4144ac:	inc    edi
  4144ad:	add    BYTE PTR [esi],cl
  4144af:	lods   eax,DWORD PTR ds:[esi]
  4144b0:	(bad)  
  4144b1:	stc    
  4144b2:	pop    ds
  4144b3:	mov    ds:0x8c83ffff,al
  4144b8:	call   DWORD PTR [edi-0x7ca60000]
  4144be:	out    dx,al
  4144bf:	push   ss
  4144c0:	add    BYTE PTR [edi],bl
  4144c2:	xchg   BYTE PTR [esi],cl
  4144c4:	(bad)  
  4144c5:	inc    DWORD PTR [eax]
  4144c7:	cld    
  4144c8:	int3   
  4144c9:	mov    eax,DWORD PTR [eax]
  4144cb:	(bad)  
  4144cc:	cmp    al,0xff
  4144ce:	sti    
  4144cf:	pop    ss
  4144d0:	int3   
  4144d1:	push   edi
  4144d2:	ins    DWORD PTR es:[edi],dx
  4144d3:	icebp  
  4144d4:	or     esp,0xffffffff
  4144d7:	jecxz  0x4144a5
  4144d9:	jp     0x4144da
  4144db:	jmp    ebx
  4144dd:	dec    ebx
  4144df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144e0:	int3   
  4144e1:	xchg   esp,eax
  4144e2:	nop
  4144e3:	jnp    0x4144e4
  4144e5:	add    BYTE PTR [eax],al
  4144e7:	sahf   
  4144e8:	call   ecx
  4144ea:	(bad)  
  4144eb:	(bad)  
  4144ec:	inc    DWORD PTR [ebx+0x5bfffada]
  4144f2:	(bad)  
  4144f3:	push   ebx
  4144f4:	cmp    edi,0x0
  4144f7:	xchg   ebp,eax
  4144f8:	call   DWORD PTR [eax]
  4144fa:	add    ah,cl
  4144fc:	and    edi,edi
  4144fe:	xchg   ecx,eax
  4144ff:	pop    edi
  414500:	add    cl,cl
  414502:	icebp  
  414503:	xchg   BYTE PTR [eax],al
  414505:	(bad)  
  414506:	push   DWORD PTR [esi-0x7d]
  414509:	jb     0x41448e
  41450b:	inc    DWORD PTR [edx-0x736c7d]
  414511:	sbb    dh,bh
  414513:	sbb    al,0x0
  414515:	mov    edi,edi
  414517:	pusha  
  414518:	add    BYTE PTR [eax-0x7c630100],dh
  41451e:	test   BYTE PTR [eax-0x34],dl
  414521:	pop    edi
  414522:	pusha  
  414523:	fld    DWORD PTR [eax]
  414525:	inc    DWORD PTR [eax]
  414527:	sbb    bh,bh
  414529:	cmp    DWORD PTR [ebx+0x1e000083],eax
  41452f:	aas    
  414530:	inc    ecx
  414532:	and    al,0x59
  414534:	(bad)  
  414535:	(bad)  
  414536:	call   DWORD PTR [eax]
  414538:	add    BYTE PTR [ebx-0x1],dh
  41453b:	cmp    DWORD PTR [eax-0x1],0xffffff8e
  41453f:	pop    ebx
  414540:	add    bh,cl
  414542:	scas   al,BYTE PTR es:[edi]
  414543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414544:	(bad)  
  414545:	(bad)  
  414546:	jmp    DWORD PTR [edi+edi*8]
  414549:	test   DWORD PTR [eax],eax
  41454b:	cmp    DWORD PTR [ecx-0x1],0xfffffff7
  41454f:	fwait
  414550:	adc    DWORD PTR [eax-0x1],0xffffffc3
  414554:	mov    edi,edi
  414556:	jmp    FWORD PTR [ebx-0x337c8601]
  41455c:	mov    bh,0xff
  41455e:	popf   
  41455f:	and    BYTE PTR [eax],al
  414561:	lock jle 0x4145d7
  414564:	(bad)  
  414565:	inc    DWORD PTR [ebx-0xcdff4a]
  41456b:	add    bh,bh
  41456d:	call   FWORD PTR [edx]
  41456f:	pusha  
  414570:	sbb    DWORD PTR [ebx-0xa4ed],0x0
  414577:	fild   WORD PTR [ebx-0x34337c8e]
  41457d:	add    BYTE PTR [esi],ch
  41457f:	xor    edi,edi
  414581:	rcr    BYTE PTR [edx-0x33007a],0x6f
  414588:	add    BYTE PTR [ecx+0x83],ah
  41458e:	push   esp
  41458f:	iret   
  414590:	inc    DWORD PTR [eax-0x7600c326]
  414596:	dec    DWORD PTR [ecx]
  414598:	(bad)  
  414599:	clc    
  41459a:	inc    DWORD PTR [eax]
  41459c:	mov    ds:0xff8783ff,al
  4145a1:	push   ds
  4145a2:	xor    eax,0x83ff006b
  4145a7:	xor    DWORD PTR [eax],eax
  4145a9:	stc    
  4145aa:	int3   
  4145ab:	add    BYTE PTR [ecx-0x332ac101],ch
  4145b1:	push   ss
  4145b2:	arpl   WORD PTR [eax-0x7d],si
  4145b5:	dec    DWORD PTR [ecx-0xebfff7]
  4145bb:	push   DWORD PTR [edx-0x1fbb00]
  4145c1:	ret    
  4145c2:	scas   eax,DWORD PTR es:[edi]
  4145c3:	jmp    0xc283:0x6ffff83
  4145ca:	(bad)  
  4145cb:	call   FWORD PTR [eax-0x7c7a1901]
  4145d1:	fisub  DWORD PTR [ebp+0xc]
  4145d4:	add    BYTE PTR [eax],al
  4145d6:	add    BYTE PTR [ebx-0x7cffdb34],dl
  4145dc:	in     eax,dx
  4145dd:	int3   
  4145de:	sub    al,bh
  4145e0:	(bad)  
  4145e1:	call   0x40bf73
  4145e6:	add    BYTE PTR [edx],al
  4145e8:	dec    DWORD PTR [ebx-0xa57c77]
  4145ee:	or     DWORD PTR ds:0x43e154ff,0x33ff0000
  4145f8:	int3   
  4145f9:	mov    ecx,0xae8900
  4145fe:	and    esi,DWORD PTR [ebx]
  414600:	(bad)  
  414601:	inc    BYTE PTR [edx-0x72]
  414604:	add    bh,bh
  414606:	push   esp
  414608:	jmp    ecx
  41460a:	mov    DWORD PTR [eax],eax
  41460c:	inc    ebp
  41460d:	xor    DWORD PTR [ecx+0x4c570075],0xffffff8a
  414614:	dec    esp
  414616:	add    BYTE PTR [edi],dh
  414618:	add    BYTE PTR [esi-0x77],dh
  41461b:	mov    DWORD PTR [ebx-0x1],ebx
  41461e:	test   al,0x82
  414620:	(bad)  
  414621:	cli    
  414622:	sbb    ebp,edx
  414624:	(bad)  
  414625:	inc    DWORD PTR [eax]
  414627:	fisttp DWORD PTR [ecx+0x7689ffec]
  41462d:	jmp    FWORD PTR [eax]
  41462f:	data16 add BYTE PTR [edx+0x2482],al
  414636:	add    BYTE PTR [edi+0x0],cl
  414639:	mov    eax,0xff9d0000
  41463e:	dec    esi
  41463f:	push   esp
  414640:	jmp    esp
  414642:	jno    0x414613
  414644:	(bad)  
  414645:	inc    DWORD PTR [ebx-0x45335f]
  41464b:	push   edx
  41464d:	add    dh,dh
  41464f:	mov    bh,bh
  414651:	inc    ebx
  414652:	retf   0xff54
  414655:	add    BYTE PTR [ebx-0x3ff6c],al
  41465b:	and    esi,0xffffffff
  41465e:	pop    ss
  41465f:	pop    esi
  414660:	int3   
  414661:	loope  0x414607
  414663:	xchg   ebp,eax
  414664:	add    ah,cl
  414666:	call   ecx
  414668:	add    ah,dl
  41466a:	add    BYTE PTR [ebx-0x71ad3388],al
  414670:	int3   
  414671:	jg     0x414666
  414673:	daa    
  414674:	int3   
  414675:	inc    DWORD PTR [eax]
  414677:	pop    es
  414678:	push   DWORD PTR [edx]
  41467a:	add    DWORD PTR [eax],0x40
  41467d:	jmp    FWORD PTR [eax]
  41467f:	mov    edi,0x2d2e22ff
  414684:	inc    DWORD PTR [eax]
  414686:	call   FWORD PTR [ebp+0x0]
  414689:	jmp    0x83b4128e
  41468e:	stos   DWORD PTR es:[edi],eax
  41468f:	push   edx
  414690:	jmp    ebx
  414692:	lods   eax,DWORD PTR ds:[esi]
  414693:	mov    dh,0x89
  414695:	mov    edi,edi
  414697:	and    DWORD PTR [eax],eax
  414699:	or     eax,0xcca4ffff
  41469e:	cdq    
  41469f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a0:	add    BYTE PTR ds:0xffff5b37,dl
  4146a6:	dec    eax
  4146a8:	add    BYTE PTR [ebp-0x7c5c0001],al
  4146ae:	jbe    0x4146f4
  4146b0:	mov    DWORD PTR [ebx-0x33ac18],edx
  4146b6:	jmp    esp
  4146b8:	push   DWORD PTR [ebx+0x0]
  4146bb:	or     DWORD PTR [edi],0xffffff83
  4146be:	push   0x1cc003d
  4146c3:	mov    BYTE PTR [eax],0x89
  4146c6:	add    BYTE PTR [ebp+0x2bff],dl
  4146cc:	ja     0x41469a
  4146ce:	push   ecx
  4146cf:	and    al,0xff
  4146d1:	in     al,dx
  4146d2:	xchg   edx,eax
  4146d3:	mov    bl,0xff
  4146d5:	add    bh,bh
  4146d7:	int3   
  4146d8:	jmp    DWORD PTR [ebp-0x7d]
  4146db:	add    BYTE PTR [edi],dl
  4146dd:	mov    DWORD PTR [eax],esi
  4146df:	sub    bh,bh
  4146e1:	push   0xffffffdf
  4146e3:	dec    esp
  4146e4:	(bad)  
  4146e5:	inc    DWORD PTR [eax]
  4146e7:	mov    edi,edi
  4146e9:	cs cmp edi,0xffffffba
  4146ed:	add    BYTE PTR [ebx-0x753f0030],dl
  4146f3:	pop    eax
  4146f4:	add    BYTE PTR [eax],al
  4146f6:	add    bl,dh
  4146f8:	int3   
  4146f9:	sar    edi,cl
  4146fb:	jmp    DWORD PTR [esi]
  4146fd:	call   DWORD PTR [edi-0x36d700e1]
  414703:	and    DWORD PTR [eax],eax
  414705:	add    DWORD PTR [eax],0xffffffad
  414708:	int3   
  414709:	or     bh,bh
  41470b:	add    al,dl
  41470d:	inc    DWORD PTR [edx]
  41470f:	add    bh,bh
  414711:	cmp    al,0x53
  414713:	test   eax,0xeb83ffff
  414718:	sbb    DWORD PTR [ebx-0x1],0xffffffff
  41471c:	(bad)  
  41471e:	inc    ebp
  41471f:	outs   dx,BYTE PTR ds:[esi]
  414720:	add    DWORD PTR [eax-0xffde0f],0xffffffcc
  414727:	xchg   edx,eax
  414728:	push   DWORD PTR [ebx+eax*4]
  41472b:	int3   
  41472c:	xchg   edx,eax
  41472d:	(bad)  
  41472e:	jl     0x414781
  414730:	mov    DWORD PTR [esi-0x19],esp
  414733:	pop    esp
  414734:	add    BYTE PTR [eax],al
  414736:	add    BYTE PTR [edx-0xff9f01],al
  41473c:	push   edx
  41473d:	push   ebx
  41473f:	mov    dl,0x83
  414741:	push   0xffffff81
  414743:	xchg   ecx,eax
  414744:	add    bh,bh
  414746:	mov    DWORD PTR [ecx-0x1],esp
  414749:	or     esp,0xdc8956ff
  41474f:	pop    ebx
  414750:	call   FWORD PTR [ecx-0x35]
  414753:	cwde   
  414754:	int3   
  414755:	add    bh,bh
  414757:	imul   eax,DWORD PTR [ebx-0x7d],0xed0083cc
  414761:	xchg   ebx,eax
  414762:	cmp    eax,DWORD PTR [esi-0x7c003400]
  414768:	cwde   
  414769:	cwde   
  41476a:	rol    DWORD PTR [ecx-0xffff01],0x5a
  414771:	outs   dx,BYTE PTR ds:[esi]
  414772:	popa   
  414773:	(bad)  
  414776:	add    BYTE PTR [ebx+0x718fdd47],al
  41477c:	cmp    edi,0xffffffff
  41477f:	(bad)  
  414780:	clc    
  414781:	(bad)  
  414783:	mov    dl,0x0
  414785:	add    BYTE PTR [ebx-0x12c9500],al
  41478b:	pop    esp
  41478c:	add    BYTE PTR [ebx+0x548fff00],al
  414792:	adc    DWORD PTR [eax+0xffff00],esi
  414798:	xchg   BYTE PTR [eax],al
  41479a:	inc    edi
  41479b:	lods   eax,DWORD PTR ds:[esi]
  41479c:	add    bh,bh
  41479e:	inc    DWORD PTR [eax]
  4147a0:	rcr    BYTE PTR [esi+0x4d],cl
  4147a3:	mov    ch,0xff
  4147a5:	inc    DWORD PTR [eax]
  4147a7:	(bad)  
  4147a8:	in     al,dx
  4147a9:	cmp    DWORD PTR ds:0x83ffffda,ebp
  4147af:	or     ebp,0xffffffa6
  4147b2:	jmp    0xacff:0xff008389
  4147b9:	repz fnstsw WORD PTR [esi-0x1]
  4147bd:	add    bh,bh
  4147bf:	(bad)  
  4147c0:	jle    0x414814
  4147c2:	sub    ebp,eax
  4147c4:	inc    DWORD PTR [eax]
  4147c6:	mov    DWORD PTR [eax],eax
  4147c8:	stos   DWORD PTR es:[edi],eax
  4147c9:	mov    ah,0xa3
  4147cb:	mov    edi,0xffff83
  4147d0:	mov    ah,0xbd
  4147d2:	mov    edx,0xff00ff23
  4147d7:	add    BYTE PTR [edx],dh
  4147d9:	jle    0x414848
  4147db:	mov    dl,0xff
  4147dd:	cmp    edi,0x0
  4147e0:	xlat   BYTE PTR ds:[ebx]
  4147e1:	mov    ecx,0x834df6
  4147e6:	add    BYTE PTR [ebx-0x4eff7b11],al
  4147ec:	mov    edi,edi
  4147ee:	(bad)  
  4147ef:	jmp    edi
  4147f1:	iret   
  4147f2:	mov    DWORD PTR [eax-0xff0100],eax
  4147f8:	dec    ebx
  4147f9:	mov    bl,ah
  4147fb:	jns    0x4147fc
  4147fd:	or     DWORD PTR [ecx-0x50a04d00],0xd
  414804:	add    bh,bh
  414806:	cmp    edi,0xffffff8b
  414809:	or     eax,0xcc008c12
  41480e:	mov    edi,edi
  414810:	neg    BYTE PTR [eax]
  414812:	dec    al
  414814:	add    bh,bh
  414816:	add    DWORD PTR [eax],0x50
  414819:	stos   DWORD PTR es:[edi],eax
  41481a:	xor    ah,BYTE PTR [eax-0x3301]
  414820:	fstp   TBYTE PTR [edi-0x6d]
  414823:	adc    edi,edi
  414825:	add    BYTE PTR [eax],al
  414827:	int3   
  414828:	add    DWORD PTR ds:0xff00124b,ecx
  41482e:	mov    DWORD PTR [eax],eax
  414830:	jecxz  0x4147fe
  414832:	leave  
  414833:	(bad)  
  414834:	add    DWORD PTR [ebx+0x1d9aff00],0x3
  41483b:	loop   0x41483c
  41483d:	add    BYTE PTR [eax],al
  41483f:	add    BYTE PTR [ebp-0x763d913f],al
  414845:	add    bh,bh
  414847:	int3   
  414848:	mov    ah,0xd0
  41484a:	call   DWORD PTR [eax]
  41484c:	dec    esp
  41484e:	add    bh,bh
  414850:	out    dx,eax
  414851:	push   0xfff05a
  414856:	add    bh,bh
  414858:	xor    eax,0xffab5e71
  41485d:	(bad)  
  41485e:	inc    DWORD PTR [eax]
  414860:	mov    ds:0xfff9a5db,eax
  414865:	inc    DWORD PTR [eax]
  414867:	add    BYTE PTR [edx+0x2],ah
  41486a:	mov    al,ds:0x83ff0047
  41486f:	adc    esi,0x3a
  414872:	cmp    BYTE PTR [ecx-0x1],bh
  414878:	dec    esi
  414879:	mov    cl,dl
  41487b:	imul   edi,edi,0xffffffff
  41487e:	(bad)  
  41487f:	dec    DWORD PTR [ecx+0x35]
  414882:	out    0x35,eax
  414884:	inc    DWORD PTR [ebx+0x772b89ff]
  41488a:	inc    eax
  41488b:	das    
  41488c:	dec    DWORD PTR [ecx-0x6cdf0001]
  414892:	xchg   edi,eax
  414893:	lods   al,BYTE PTR ds:[esi]
  414894:	(bad)  
  414895:	dec    esp
  414897:	add    BYTE PTR [ecx-0x19266c],ch
  41489d:	add    ah,cl
  41489f:	xor    ebx,0xffffff8d
  4148a2:	mov    edi,0x83ccad
  4148a7:	or     DWORD PTR [ebp-0x4f],0x43
  4148ab:	cmp    bh,bh
  4148ad:	(bad)  
  4148ae:	(bad)  
  4148af:	(bad)  
  4148b0:	cmp    ecx,esp
  4148b2:	mov    es,WORD PTR ds:0x83ff0000
  4148b8:	fisub  DWORD PTR [eax-0xfffdb2]
  4148be:	add    bh,bh
  4148c0:	add    DWORD PTR [ecx],edx
  4148c2:	add    ebp,ecx
  4148c4:	inc    DWORD PTR [ebx+0xf8bffff]
  4148ca:	xchg   DWORD PTR [ebp-0x1],edx
  4148cd:	int3   
  4148ce:	inc    DWORD PTR [ebx-0x46cb084a]
  4148d4:	add    DWORD PTR [eax],0xffffffff
  4148d7:	dec    DWORD PTR [edi-0x7a]
  4148da:	das    
  4148db:	bswap  esp
  4148dd:	add    BYTE PTR [eax],al
  4148df:	add    BYTE PTR [ecx+0x8e4262],dl
  4148e5:	(bad)  
  4148e6:	(bad)  
  4148e7:	push   DWORD PTR [ebp+0x23]
  4148ea:	mov    esp,0xff8371
  4148ef:	dec    DWORD PTR [ecx]
  4148f1:	adc    DWORD PTR [edx+edi*4-0x33003301],ecx
  4148f8:	cmp    esp,DWORD PTR ds:0x830006c7
  4148fe:	add    bh,bh
  414900:	mov    DWORD PTR [esi-0x7],esp
  414903:	cmp    bh,0x0
  414906:	dec    esp
  414908:	ins    BYTE PTR es:[edi],dx
  414909:	inc    eax
  41490a:	dec    esp
  41490b:	push   ss
  41490c:	inc    DWORD PTR [eax]
  41490e:	add    BYTE PTR [eax],al
  414910:	call   0x108cec9
  414915:	inc    DWORD PTR [eax]
  414917:	(bad)  
  414918:	fcmovb st,st(7)
  41491a:	mov    DWORD PTR fs:[eax],0x5dffffff
  414921:	jb     0x414939
  414923:	cld    
  414924:	cmp    edi,0x0
  414927:	call   DWORD PTR [ebx*1-0xf721]
  41492e:	inc    DWORD PTR [eax]
  414930:	adc    DWORD PTR ds:0x1cfe,esp
  414936:	dec    esp
  414938:	push   0x1de626
  41493d:	mov    DWORD PTR [ebx-0x39653100],eax
  414943:	scas   al,BYTE PTR es:[edi]
  414944:	add    bh,bh
  414946:	inc    DWORD PTR [eax]
  414948:	add    edi,DWORD PTR [edx-0x4d40]
  41494e:	add    DWORD PTR [ebx-0x43d9ceab],0x0
  414955:	inc    DWORD PTR [eax]
  414957:	int3   
  414958:	test   eax,0xf9b040
  41495d:	cmp    edi,0x0
  414960:	pop    ss
  414961:	dec    ecx
  414962:	adc    BYTE PTR [edx],dh
  414964:	inc    DWORD PTR [eax]
  414966:	cmp    edi,0xffffffa6
  414969:	scas   eax,DWORD PTR es:[edi]
  41496a:	jno    0x414941
  41496c:	add    BYTE PTR [eax],al
  41496e:	cmp    edi,0x37
  414971:	jne    0x4149e5
  414973:	in     eax,0xff
  414975:	cmp    edi,0xffffff83
  414978:	adc    al,0x98
  41497a:	rcl    BYTE PTR [ebx-0x33003301],0xde
  414981:	xor    al,0xa9
  414983:	aad    0x0
  414985:	(bad)  
  414986:	inc    DWORD PTR [ebx+0x2d554bb8]
  41498c:	(bad)  
  41498d:	(bad)  
  41498e:	(bad)  
  41498f:	call   FWORD PTR ds:0xff7834f2
  414995:	inc    DWORD PTR [eax]
  414997:	jmp    FWORD PTR [ecx+0x354773]
  41499d:	add    BYTE PTR [eax],al
  41499f:	inc    DWORD PTR [edx+eax*4-0x33ff5d5c]
  4149a6:	inc    DWORD PTR [eax]
  4149a8:	(bad)  
  4149a9:	xchg   edx,eax
  4149aa:	sbb    esp,DWORD PTR [ebx+eax*4-0x1]
  4149ae:	(bad)  
  4149af:	(bad)  
  4149b0:	std    
  4149b1:	add    al,0xe5
  4149b3:	pop    edi
  4149b4:	add    ah,cl
  4149b6:	(bad)  
  4149b7:	dec    DWORD PTR [ebx+0xd71fb7]
  4149bd:	int3   
  4149be:	add    BYTE PTR [eax],al
  4149c0:	test   BYTE PTR [edi],cl
  4149c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c3:	xor    BYTE PTR [eax],al
  4149c5:	(bad)  
  4149c6:	(bad)  
  4149c7:	dec    DWORD PTR [ecx]
  4149c9:	mov    edx,0xff1e80
  4149ce:	cmp    edi,0xffffffdb
  4149d1:	pop    esi
  4149d2:	cmp    dl,BYTE PTR [ebp-0x100]
  4149d8:	jmp    0x4149e1
  4149da:	stos   BYTE PTR es:[edi],al
  4149db:	(bad)  
  4149dc:	(bad)  
  4149dd:	inc    DWORD PTR [ebx-0x55389a01]
  4149e3:	inc    esp
  4149e4:	(bad)  
  4149e5:	(bad)  
  4149e6:	(bad)  
  4149e7:	push   DWORD PTR [ecx]
  4149e9:	data16 mov dl,BYTE PTR [edi]
  4149ec:	add    bh,bh
  4149ee:	add    bh,bh
  4149f0:	and    DWORD PTR [ecx-0x333354ea],0x335e8900
  4149fa:	cmp    DWORD PTR [ebx],edi
  4149fc:	(bad)  
  4149fd:	(bad)  
  4149fe:	(bad)  
  4149ff:	jmp    DWORD PTR [edi]
  414a01:	adc    al,BYTE PTR [ebx-0xff37]
  414a07:	(bad)  
  414a08:	mov    edi,0x7bc7b2
  414a0d:	dec    DWORD PTR [ecx+0x598f60cc]
  414a13:	push   ebx
  414a14:	inc    DWORD PTR [ebx+0x4165ff00]
  414a1a:	sbb    eax,0xff00ff90
  414a1f:	sub    edi,0xffffffe1
  414a22:	ins    BYTE PTR es:[edi],dx
  414a23:	mov    ch,0xcc
  414a25:	(bad)  
  414a26:	(bad)  
  414a27:	push   DWORD PTR [ebx+0x1c]
  414a2a:	(bad)  
  414a2b:	pop    ecx
  414a2c:	(bad)  
  414a2d:	inc    DWORD PTR [eax]
  414a2f:	add    BYTE PTR [ecx+0x7c],ch
  414a32:	push   cs
  414a33:	pop    ecx
  414a34:	cmp    edi,0xffffffcc
  414a37:	jmp    FWORD PTR [ebp+0x38]
  414a3a:	mov    ebp,0x8300d4
  414a3f:	or     ecx,0x49
  414a42:	fnsave [edi-0x1]
  414a45:	mov    DWORD PTR [ebx+0xc898583],eax
  414a4b:	test   al,0x89
  414a4d:	or     DWORD PTR [ecx-0x58b53901],0xffffff95
  414a54:	inc    DWORD PTR [eax]
  414a56:	add    ah,cl
  414a58:	out    dx,eax
  414a59:	cli    
  414a5a:	aam    0xb7
  414a5c:	mov    DWORD PTR [eax],eax
  414a5e:	(bad)  
  414a5f:	push   edi
  414a61:	mov    ch,cl
  414a63:	or     eax,0xff83ffff
  414a68:	pop    ss
  414a69:	sub    eax,0x83003f6b
  414a6e:	add    BYTE PTR [eax],al
  414a70:	push   eax
  414a71:	in     al,dx
  414a72:	xchg   ebp,eax
  414a73:	fdivp  st(7),st
  414a75:	inc    DWORD PTR [eax]
  414a77:	add    BYTE PTR [eax-0x332f5e11],dl
  414a7d:	(bad)  
  414a7e:	(bad)  
  414a7f:	push   DWORD PTR [ecx+0x1d]
  414a82:	shl    DWORD PTR [esi],cl
  414a84:	add    DWORD PTR [ebx-0x505d3400],0xffffffa2
  414a8b:	pop    esp
  414a8c:	inc    DWORD PTR [ebx+0xc7ffff]
  414a92:	outs   dx,DWORD PTR ds:[esi]
  414a93:	jp     0x414a94
  414a95:	inc    DWORD PTR [eax]
  414a97:	add    BYTE PTR [ecx],bh
  414a99:	cmp    dl,BYTE PTR [edi+0xffff1e]
  414a9f:	add    al,ch
  414aa1:	xchg   esp,eax
  414aa2:	mov    dl,0x12
  414aa4:	cmp    edi,0xffffff83
  414aa7:	add    ah,bh
  414aa9:	(bad)  [esi-0x66]
  414aac:	(bad)  
  414aad:	(bad)  
  414aae:	inc    DWORD PTR [ebx+0x6d509ef9]
  414ab4:	(bad)  
  414ab5:	dec    esp
  414ab7:	call   FWORD PTR [ecx+0x66]
  414aba:	and    eax,0xccffff4c
  414abf:	int3   
  414ac0:	xor    bl,dh
  414ac2:	lea    edi,[eax-0x7c00ff01]
  414ac8:	pop    edx
  414ac9:	mov    eax,0x89008126
  414ace:	add    bh,bh
  414ad0:	mov    ebx,0x89139d86
  414ad5:	(bad)  
  414ad6:	(bad)  
  414ad7:	(bad)  
  414ad8:	out    dx,al
  414ad9:	mov    esi,0xffff0212
  414ade:	mov    DWORD PTR [ecx+0x694eb039],ecx
  414ae4:	inc    DWORD PTR [eax]
  414ae6:	inc    DWORD PTR [ebx+0x296cc54d]
  414aec:	add    BYTE PTR [eax],al
  414aee:	int3   
  414aef:	inc    edx
  414af1:	sub    eax,0x89daba
  414af6:	add    bh,bh
  414af8:	(bad)  
  414af9:	sbb    BYTE PTR [eax-0x7c00fc],bh
  414aff:	jmp    esi
  414b01:	rol    eax,1
  414b03:	test   DWORD PTR [eax],0x98ff0000
  414b09:	mov    dh,0xa1
  414b0b:	icebp  
  414b0c:	dec    esp
  414b0e:	add    BYTE PTR [ebx+0x6b1ccc5f],al
  414b14:	add    BYTE PTR [ebx-0x3a1d0000],al
  414b1a:	out    0xdf,al
  414b1c:	dec    esp
  414b1e:	int3   
  414b1f:	add    BYTE PTR [ebx-0xcaf74a],ch
  414b25:	add    DWORD PTR [eax],0xffffff83
  414b28:	test   edx,esp
  414b2a:	pop    ebx
  414b2b:	dec    ebp
  414b2c:	add    bh,bh
  414b2e:	add    BYTE PTR [eax],al
  414b30:	adc    DWORD PTR [esi-0xc],edi
  414b33:	push   cs
  414b34:	or     esp,0xffffffff
  414b37:	inc    edx
  414b39:	inc    edx
  414b3a:	and    edx,esi
  414b3c:	cmp    edi,0x0
  414b3f:	mov    DWORD PTR [edi+0x7d1ab4],ebx
  414b45:	inc    DWORD PTR [ebx+0x6d351eff]
  414b4b:	dec    ebp
  414b4c:	mov    DWORD PTR [eax],eax
  414b4e:	dec    DWORD PTR [ecx-0x7f31edba]
  414b54:	inc    DWORD PTR [eax]
  414b56:	mov    edi,edi
  414b58:	xchg   ecx,eax
  414b59:	lods   al,BYTE PTR ds:[esi]
  414b5a:	and    al,0xe0
  414b5c:	dec    esp
  414b5e:	inc    DWORD PTR [ebx-0xc79fb49]
  414b64:	add    DWORD PTR [ebx+0x426cccff],0x6f
  414b6b:	data16 add bh,bh
  414b6e:	add    bh,bh
  414b70:	rcr    DWORD PTR [edi+0x7a],cl
  414b73:	mov    edi,?
  414b75:	int3   
  414b76:	inc    DWORD PTR [ebx-0x5fa537bd]
  414b7c:	or     esp,0xffffffff
  414b7f:	add    BYTE PTR [esi],al
  414b81:	mov    ds:0xff00b108,al
  414b86:	inc    DWORD PTR [eax]
  414b88:	mov    ds:0xffdcf27c,eax
  414b8d:	add    BYTE PTR [eax],al
  414b8f:	call   FWORD PTR [edi]
  414b91:	bound  ecx,QWORD PTR [ebp-0x7c7c005a]
  414b97:	add    BYTE PTR [esi+0x835493],cl
  414b9d:	add    BYTE PTR [eax],al
  414b9f:	add    BYTE PTR [esi-0x8],dh
  414ba2:	and    al,0x73
  414ba4:	inc    DWORD PTR [ebx+0x1f9a0000]
  414baa:	jo     0x414b9f
  414bac:	add    BYTE PTR [ebx-0x172c7c01],al
  414bb2:	xor    BYTE PTR [eax],bl
  414bb4:	inc    DWORD PTR [ebx+0x54b200ff]
  414bba:	adc    al,0xfa
  414bbc:	(bad)  
  414bbd:	(bad)  
  414bbe:	(bad)  
  414bbf:	call   FWORD PTR [edi-0x14ee93]
  414bc5:	add    bh,bh
  414bc7:	call   DWORD PTR [ecx]
  414bc9:	sub    al,0x44
  414bcb:	dec    esi
  414bcc:	or     esp,0x0
  414bcf:	dec    DWORD PTR [esi]
  414bd1:	jnp    0x414bf9
  414bd3:	or     al,BYTE PTR [eax]
  414bd5:	mov    edi,edi
  414bd7:	add    BYTE PTR [ecx+0x76ecca],al
  414bdd:	add    bh,bh
  414bdf:	add    BYTE PTR [edi-0x96d466],ch
  414be5:	add    BYTE PTR [eax],al
  414be7:	add    BYTE PTR [ecx-0x7c],ah
  414bea:	pop    ss
  414beb:	cmc    
  414bec:	add    DWORD PTR [eax],0xffffff83
  414bef:	int3   
  414bf0:	push   edi
  414bf1:	add    BYTE PTR [edx+edi*4],dh
  414bf4:	inc    DWORD PTR [eax]
  414bf6:	int3   
  414bf7:	and    DWORD PTR [edi-0x4],0x34
  414bfb:	jnp    0x414bfd
  414bfd:	int3   
  414bfe:	inc    DWORD PTR [eax]
  414c00:	icebp  
  414c01:	cmp    al,ah
  414c03:	fld    QWORD PTR [eax]
  414c05:	(bad)  
  414c06:	dec    esp
  414c08:	push   0x5cd9f7
  414c0d:	(bad)  
  414c0e:	dec    DWORD PTR [ecx+0x7150f1d6]
  414c14:	inc    DWORD PTR [eax]
  414c16:	dec    esp
  414c18:	push   ds
  414c19:	xor    ch,BYTE PTR [ebx]
  414c1b:	add    edi,edi
  414c1d:	dec    esp
  414c1f:	add    BYTE PTR [ebx+0xec7ec1],bh
  414c25:	(bad)  
  414c26:	inc    DWORD PTR [ebx+0x1431f88]
  414c2c:	add    bh,bh
  414c2e:	add    DWORD PTR [eax],0xffffff8e
  414c31:	fdiv   DWORD PTR [edi-0xffff8e]
  414c37:	sbb    DWORD PTR [ebx],0x63
  414c3a:	fistp  QWORD PTR [edi-0x1]
  414c3d:	mov    DWORD PTR [eax],eax
  414c3f:	add    BYTE PTR [eax],dl
  414c41:	neg    edi
  414c43:	add    BYTE PTR ds:[eax],al
  414c46:	add    bh,bh
  414c48:	mov    al,0xca
  414c4a:	ss retf 
  414c4c:	cmp    edi,0x0
  414c4f:	cmp    edx,0xfffffffa
  414c52:	add    al,0x7
  414c54:	add    ah,cl
  414c56:	(bad)  
  414c57:	jmp    FWORD PTR [edx-0x4a2591]
  414c5d:	dec    DWORD PTR [ecx+0x616b8200]
  414c63:	cmp    edi,0xffffffff
  414c66:	inc    DWORD PTR [eax]
  414c68:	imul   esp,DWORD PTR [edi+eiz*1-0x96],0xffffffff
  414c70:	lds    esi,FWORD PTR ds:0xff00593b
  414c76:	add    bh,bh
  414c78:	rcl    DWORD PTR [esi],cl
  414c7a:	add    edi,edx
  414c7c:	inc    DWORD PTR [ebx-0x59c3301]
  414c82:	sbb    eax,0xcc830002
  414c87:	call   FWORD PTR [esi+0x9d4731]
  414c8d:	add    DWORD PTR [eax],0xffffffff
  414c90:	dec    ax
  414c92:	and    al,0x86
  414c94:	add    bh,bh
  414c96:	inc    DWORD PTR [eax]
  414c98:	cmc    
  414c99:	lea    eax,[edx+0x18]
  414c9c:	add    BYTE PTR [ebx-0x69f67601],al
  414ca2:	cmp    cl,BYTE PTR [ecx-0x77]
  414ca5:	dec    esp
  414ca7:	add    ch,cl
  414ca9:	mov    al,ds:0xffff9fe3
  414cae:	inc    DWORD PTR [eax]
  414cb0:	sub    ebp,DWORD PTR [edi+ebp*1-0x332b]
  414cb7:	call   edi
  414cb9:	in     al,dx
  414cba:	push   ecx
  414cbb:	inc    esi
  414cbc:	add    bh,bh
  414cbe:	int3   
  414cbf:	and    DWORD PTR [ebx+0x5c],0x1a
  414cc3:	ins    DWORD PTR es:[edi],dx
  414cc4:	cmp    edi,0x0
  414cc7:	add    BYTE PTR [ecx+0xdb71eb],bh
  414ccd:	add    DWORD PTR [ebx-0x2716f901],0xffffff80
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	mov    DWORD PTR [eax],eax
  414cd8:	fild   WORD PTR [ebp*4+0xff84]
  414cdf:	add    BYTE PTR [ebx-0x7cc6e13c],dh
  414ce5:	(bad)  
  414ce6:	(bad)  
  414ce7:	(bad)  
  414ce8:	call   0xa52109
  414ced:	(bad)  
  414cee:	dec    DWORD PTR [ecx-0x33e158cf]
  414cf4:	add    bh,bh
  414cf6:	add    bh,bh
  414cf8:	dec    ebx
  414cf9:	aas    
  414cfa:	pushf  
  414cfb:	xor    esp,ecx
  414cfd:	dec    esp
  414cff:	mov    DWORD PTR [ebx-0x4ae193],edi
  414d05:	mov    edi,edi
  414d07:	int3   
  414d08:	xchg   BYTE PTR [esi+0x1a],bl
  414d0b:	imul   eax,DWORD PTR [eax],0xffffffff
  414d0e:	inc    DWORD PTR [eax]
  414d10:	mov    ah,0x72
  414d12:	or     esp,DWORD PTR [esi-0x1]
  414d15:	(bad)  
  414d16:	(bad)  
  414d17:	inc    DWORD PTR [edx]
  414d19:	and    cl,ch
  414d1b:	mov    ebx,0xffff83ff
  414d20:	inc    esp
  414d21:	mov    al,ds:0xff8310fa
  414d26:	add    bh,bh
  414d28:	loop   0x414d5e
  414d2a:	and    dh,ah
  414d2c:	cmp    edi,0xffffffff
  414d2f:	dec    DWORD PTR [eax+edx*2+0xffe7f2]
  414d36:	int3   
  414d37:	(bad)  
  414d38:	mov    eax,0x8358b864
  414d3d:	inc    DWORD PTR [eax]
  414d3f:	push   DWORD PTR [eax]
  414d41:	add    dh,cl
  414d43:	je     0x414d45
  414d45:	add    BYTE PTR [eax],al
  414d47:	int3   
  414d48:	xchg   edi,eax
  414d49:	xchg   esi,eax
  414d4a:	in     eax,dx
  414d4b:	push   0xffffffff
  414d4d:	inc    DWORD PTR [ebx-0x227f2500]
  414d53:	repnz add BYTE PTR [eax],al
  414d56:	add    BYTE PTR [eax],al
  414d58:	test   eax,0x89b79058
  414d5d:	add    BYTE PTR [eax],al
  414d5f:	jmp    esi
  414d61:	add    al,0xb6
  414d63:	(bad)  
  414d64:	mov    DWORD PTR [ebx-0x517f0100],eax
  414d6a:	sti    
  414d6b:	lods   al,BYTE PTR ds:[esi]
  414d6c:	inc    DWORD PTR [eax]
  414d6e:	add    DWORD PTR [eax],0x31
  414d71:	std    
  414d72:	push   ecx
  414d73:	mov    ebp,0x83ff83cc
  414d78:	(bad)  
  414d79:	mov    edi,0xffff633c
  414d7e:	add    DWORD PTR [eax],0x74
  414d81:	push   ebx
  414d82:	adc    DWORD PTR [ebx-0x7c7c01],0xa763a6e3
  414d8c:	add    BYTE PTR [eax],al
  414d8e:	inc    DWORD PTR [eax]
  414d90:	push   esp
  414d91:	dec    esp
  414d92:	inc    esp
  414d93:	pop    ds
  414d94:	inc    DWORD PTR [ebx-0x72087601]
  414d9a:	jecxz  0x414d97
  414d9c:	add    BYTE PTR [eax],al
  414d9e:	inc    DWORD PTR [eax]
  414da0:	mov    edi,0xc169dc
  414da5:	(bad)  
  414da6:	inc    DWORD PTR [eax]
  414da8:	pusha  
  414da9:	mov    DWORD PTR [eax],ebx
  414dab:	sub    edi,edi
  414dad:	dec    esp
  414daf:	add    BYTE PTR [edx],bl
  414db1:	adc    DWORD PTR [ebp-0x80],ebp
  414db4:	add    DWORD PTR [eax],0xffffffff
  414db7:	(bad)  
  414db8:	mov    edx,0xff34f779
  414dbd:	mov    DWORD PTR [eax],eax
  414dbf:	add    BYTE PTR [edx-0x7cb229e7],dl
  414dc5:	(bad)  
  414dc6:	(bad)  
  414dc7:	dec    DWORD PTR [edi+edx*8-0x2fb]
  414dce:	inc    DWORD PTR [eax]
  414dd0:	jle    0x414e0a
  414dd2:	aam    0xbf
  414dd4:	inc    DWORD PTR [ebx-0x27130000]
  414dda:	cwde   
  414ddb:	sbb    bh,bh
  414ddd:	add    ah,cl
  414ddf:	jmp    FWORD PTR [ebx+esi*4]
  414de2:	xor    al,0xef
  414de4:	inc    DWORD PTR [ebx+0x7f980000]
  414dea:	jnp    0x414d6c
  414dec:	(bad)  
  414ded:	(bad)  
  414dee:	inc    DWORD PTR [eax]
  414df0:	xchg   ebx,eax
  414df1:	jg     0x414dfa
  414df3:	je     0x414d78
  414df5:	cmp    edi,0x0
  414df8:	xchg   ebp,eax
  414df9:	ins    DWORD PTR es:[edi],dx
  414dfa:	jne    0x414def
  414dfc:	(bad)  
  414dfd:	(bad)  
  414dfe:	inc    DWORD PTR [ebx+0x154f5ff3]
  414e04:	add    bh,bh
  414e06:	mov    edi,edi
  414e08:	icebp  
  414e09:	imul   esi,DWORD PTR [esi],0x59
  414e0c:	add    BYTE PTR [ecx-0x202a7c7d],cl
  414e12:	in     al,dx
  414e13:	scas   al,BYTE PTR es:[edi]
  414e14:	(bad)  
  414e15:	(bad)  
  414e16:	(bad)  
  414e17:	call   FWORD PTR [edx-0xd]
  414e1a:	mov    dh,0xd6
  414e1c:	inc    DWORD PTR [eax]
  414e1e:	add    BYTE PTR [ebx+0x15dd295f],al
  414e24:	inc    DWORD PTR [eax]
  414e26:	inc    DWORD PTR [eax]
  414e28:	adc    al,0xfc
  414e2a:	hlt    
  414e2b:	inc    ebx
  414e2c:	add    bh,bh
  414e2e:	cmp    edi,0x1
  414e31:	jne    0x414e51
  414e33:	push   esp
  414e34:	inc    DWORD PTR [ebx+0x1142ffcc]
  414e3a:	mov    ecx,0xff00ff88
  414e3f:	add    BYTE PTR [esi-0xaca536],dl
  414e45:	cmp    edi,0xffffffcc
  414e48:	in     eax,0x21
  414e4a:	jno    0x414df2
  414e4c:	add    bh,bh
  414e4e:	(bad)  
  414e4f:	jmp    DWORD PTR [eax-0x14]
  414e52:	das    
  414e53:	pop    ebx
  414e54:	add    bh,bh
  414e56:	mov    edi,edi
  414e58:	sbb    eax,0x83cfdd5c
  414e5d:	add    bh,bh
  414e5f:	int3   
  414e60:	fnstsw WORD PTR [esp+ecx*2]
  414e63:	in     eax,0xff
  414e65:	(bad)  
  414e66:	(bad)  
  414e67:	call   FWORD PTR [ecx]
  414e69:	rcr    BYTE PTR ds:0xffff83b2,1
  414e6f:	int3   
  414e70:	or     ebp,edi
  414e72:	aas    
  414e73:	inc    esp
  414e74:	add    bh,bh
  414e76:	add    BYTE PTR [eax],al
  414e78:	fbstp  TBYTE PTR [ecx]
  414e7a:	add    cl,al
  414e7c:	cmp    edi,0xffffff83
  414e7f:	add    DWORD PTR [ebx],0xffffff8a
  414e82:	fistp  QWORD PTR [edx]
  414e84:	mov    edi,edi
  414e86:	inc    DWORD PTR [eax]
  414e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e89:	xchg   esi,eax
  414e8a:	aam    0x73
  414e8c:	add    DWORD PTR [eax],0xffffffcc
  414e8f:	jmp    DWORD PTR [edx+0x12]
  414e92:	sbb    ah,BYTE PTR [ebx-0x3300ff7d]
  414e98:	pop    es
  414e99:	jle    0x414e62
  414e9b:	fiadd  WORD PTR [eax]
  414e9d:	add    BYTE PTR [eax],al
  414e9f:	add    BYTE PTR [edx+0x20885],bl
  414ea5:	int3   
  414ea6:	add    BYTE PTR [eax],al
  414ea8:	call   0xffff:0xaa966d
  414eaf:	int3   
  414eb0:	cld    
  414eb1:	mov    eax,0xff80dd
  414eb6:	(bad)  
  414eb7:	(bad)  
  414eb8:	cmp    ecx,edx
  414eba:	repz or al,0x0
  414ebd:	add    bh,bh
  414ebf:	add    BYTE PTR [ecx-0x765db1cb],ch
  414ec5:	dec    esp
  414ec7:	inc    DWORD PTR [eax]
  414ec9:	hlt    
  414eca:	adc    cl,cl
  414ecc:	add    bh,bh
  414ece:	mov    DWORD PTR [ebx+0x45b79193],eax
  414ed4:	(bad)  
  414ed5:	(bad)  
  414ed6:	dec    esp
  414ed8:	ja     0x414ea0
  414eda:	in     al,dx
  414edb:	popa   
  414edc:	inc    DWORD PTR [eax]
  414ede:	(bad)  
  414edf:	dec    DWORD PTR [ebx+0x470e32]
  414ee5:	inc    DWORD PTR [eax]
  414ee7:	add    BYTE PTR [ebp+0x53],dh
  414eea:	add    edx,DWORD PTR [edx-0x33760001]
  414ef0:	jl     0x414efe
  414ef2:	sbb    eax,0xff0053
  414ef7:	(bad)  
  414ef8:	in     al,dx
  414ef9:	or     BYTE PTR [esi-0x7c],0xff
  414efd:	inc    DWORD PTR [eax]
  414eff:	dec    DWORD PTR [ecx+esi*1]
  414f02:	dec    ebp
  414f03:	fdivr  st,st(7)
  414f05:	dec    esp
  414f07:	dec    DWORD PTR [edx+0x44]
  414f0a:	cli    
  414f0b:	in     eax,dx
  414f0c:	(bad)  
  414f0d:	inc    DWORD PTR [ebx-0x55293201]
  414f13:	jo     0x414f15
  414f15:	mov    DWORD PTR [ebx+0x47b65c00],eax
  414f1b:	es add bh,bh
  414f1e:	add    BYTE PTR [eax],al
  414f20:	or     dh,BYTE PTR [edi]
  414f22:	test   eax,0xff004c
  414f27:	add    BYTE PTR [edx],dh
  414f29:	and    al,0x6b
  414f2b:	loop   0x414ef9
  414f2d:	int3   
  414f2e:	int3   
  414f2f:	jmp    DWORD PTR [eax-0x7e788a]
  414f35:	(bad)  
  414f36:	(bad)  
  414f37:	(bad)  
  414f38:	fdivr  QWORD PTR [ecx]
  414f3a:	fisubr DWORD PTR [edi+edi*8-0x2e010000]
  414f41:	repnz adc DWORD PTR [bx+di-0x1],ecx
  414f47:	push   DWORD PTR [esp+ebx*8-0xc]
  414f4b:	xor    eax,DWORD PTR [eax]
  414f4d:	add    BYTE PTR [ebx+0x108c2cff],al
  414f53:	adc    al,0x83
  414f55:	add    bh,bh
  414f57:	inc    ebp
  414f59:	push   eax
  414f5a:	ret    0xfff8
  414f5d:	cmp    edi,0xffffffff
  414f60:	retf   0x4f5a
  414f63:	adc    edi,edi
  414f65:	mov    edi,edi
  414f67:	mov    DWORD PTR [edi],ebx
  414f69:	jns    0x414f5d
  414f6b:	in     al,0x0
  414f6d:	inc    DWORD PTR [eax]
  414f6f:	add    BYTE PTR [edi-0x53],bl
  414f72:	dec    esp
  414f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f74:	add    BYTE PTR [eax],al
  414f76:	inc    DWORD PTR [eax]
  414f78:	inc    esp
  414f79:	sbb    DWORD PTR [ebx],esi
  414f7b:	jnp    0x414f49
  414f7d:	add    BYTE PTR [ebx-0x72a0fb01],al
  414f83:	(bad)  
  414f84:	inc    DWORD PTR [eax]
  414f86:	cmp    edi,0x2c
  414f89:	jl     0x414ffa
  414f8b:	jnp    0x414f8d
  414f8d:	dec    DWORD PTR [ecx-0x3319b87d]
  414f93:	sti    
  414f94:	inc    DWORD PTR [eax]
  414f96:	add    BYTE PTR [eax],al
  414f98:	jecxz  0x414f2a
  414f9a:	ins    BYTE PTR es:[edi],dx
  414f9b:	ins    BYTE PTR es:[edi],dx
  414f9c:	add    BYTE PTR [eax],al
  414f9e:	dec    DWORD PTR [ecx-0x2ca32f73]
  414fa4:	inc    DWORD PTR [eax]
  414fa6:	mov    DWORD PTR [eax],eax
  414fa8:	sub    al,0xd
  414faa:	js     0x414f8d
  414fac:	inc    DWORD PTR [eax]
  414fae:	add    DWORD PTR [eax],0xffffffed
  414fb1:	cmc    
  414fb2:	jmp    0x8440508b
  414fb7:	and    DWORD PTR [ecx],0xffffffe8
  414fba:	clc    
  414fbb:	mov    edx,0xff00ff00
  414fc0:	pop    ds
  414fc1:	scas   al,BYTE PTR es:[edi]
  414fc2:	jnp    0x415014
  414fc4:	(bad)  
  414fc5:	inc    DWORD PTR [eax]
  414fc7:	inc    DWORD PTR [edx]
  414fc9:	dec    esp
  414fca:	pop    ss
  414fcb:	add    DWORD PTR fs:[eax],0xffffffff
  414fcf:	jmp    ecx
  414fd1:	shl    BYTE PTR [ebp+0x32],1
  414fd4:	dec    esp
  414fd6:	add    BYTE PTR [ecx+0xf45fcd],cl
  414fdc:	int3   
  414fdd:	add    BYTE PTR [eax],al
  414fdf:	add    ch,dh
  414fe1:	repz jne 0x415013
  414fe4:	(bad)  
  414fe5:	inc    DWORD PTR [eax]
  414fe7:	add    BYTE PTR [edi-0x529ba],dl
  414fed:	inc    DWORD PTR [eax]
  414fef:	add    BYTE PTR [ebx],dh
  414ff1:	inc    ebx
  414ff2:	das    
  414ff3:	ins    BYTE PTR es:[edi],dx
  414ff4:	inc    DWORD PTR [eax]
  414ff6:	mov    edi,edi
  414ff8:	push   edx
  414ff9:	xchg   ecx,eax
  414ffa:	or     al,0x19
  414ffc:	inc    DWORD PTR [ebx-0x215c7601]
  415002:	cli    
  415003:	outs   dx,DWORD PTR ds:[esi]
  415004:	(bad)  
  415005:	dec    DWORD PTR [ecx-0x7109ed01]
  41500b:	sub    edi,edi
  41500d:	(bad)  
  41500e:	(bad)  
  41500f:	call   FWORD PTR [ebp+0x16]
  415012:	xor    bl,bl
  415014:	add    BYTE PTR [eax],al
  415016:	mov    edi,edi
  415018:	sub    DWORD PTR [edx-0xa],0xff008379
  41501f:	add    ch,ch
  415021:	mov    ah,0x21
  415023:	jmp    0x2e0c:0xff89ffcc
  41502a:	dec    ebx
  41502b:	lock add DWORD PTR [eax],0xffffffff
  41502f:	add    BYTE PTR [eax],al
  415031:	outs   dx,BYTE PTR ds:[esi]
  415032:	xor    al,0xb5
  415034:	add    bh,bh
  415036:	add    bh,bh
  415038:	out    dx,eax
  415039:	inc    ebp
  41503a:	je     0x41503f
  41503c:	add    bh,bh
  41503e:	(bad)  
  41503f:	call   FWORD PTR [ebp+0x9d66eb]
  415045:	(bad)  
  415046:	inc    DWORD PTR [eax]
  415048:	mov    edx,0x830abe3d
  41504d:	add    bh,bh
  41504f:	add    BYTE PTR [eax],dl
  415051:	ins    BYTE PTR es:[edi],dx
  415052:	aas    
  415053:	xor    BYTE PTR [eax],al
  415055:	mov    edi,edi
  415057:	int3   
  415058:	push   ecx
  415059:	pop    ss
  41505a:	and    al,0x18
  41505c:	cmp    edi,0x0
  41505f:	add    BYTE PTR [edx+0x76],ch
  415062:	fcom   DWORD PTR [edi+edi*8]
  415065:	add    bh,bh
  415067:	inc    DWORD PTR [edi-0x549443]
  41506d:	cmp    edi,0xffffffff
  415070:	shl    esp,0xcf
  415073:	pop    eax
  415074:	inc    DWORD PTR [eax]
  415076:	add    bh,bh
  415078:	inc    ebx
  415079:	sbb    bh,BYTE PTR [ecx+0x3c]
  41507c:	add    BYTE PTR [eax],al
  41507e:	dec    DWORD PTR [ecx-0x47ac96c5]
  415084:	inc    DWORD PTR [ebx+0x20f300cc]
  41508a:	push   ss
  41508b:	jnp    0x41508d
  41508d:	cmp    edi,0x0
  415090:	push   esi
  415091:	mov    al,0x49
  415093:	mov    ds:0x83ccff00,al
  415098:	mov    ch,0x25
  41509a:	cwde   
  41509b:	out    dx,al
  41509c:	(bad)  
  41509d:	(bad)  
  41509e:	inc    DWORD PTR [eax]
  4150a0:	dec    ebp
  4150a1:	push   cs
  4150a2:	xor    DWORD PTR [esi-0x7c01],ebx
  4150a8:	mov    eax,0xfd07b1
  4150ad:	add    BYTE PTR [ebx+0x576f4300],al
  4150b3:	inc    esp
  4150b4:	inc    DWORD PTR [eax]
  4150b6:	(bad)  
  4150b7:	jmp    FWORD PTR [edx-0xc]
  4150ba:	das    
  4150bb:	pop    ebx
  4150bc:	inc    DWORD PTR [eax]
  4150be:	dec    esp
  4150c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c1:	xor    al,0xc8
  4150c3:	cmp    edi,edi
  4150c5:	(bad)  
  4150c6:	dec    esp
  4150c8:	mov    ebx,ds
  4150ca:	xor    eax,0xccfff7
  4150cf:	add    BYTE PTR [ebp+ebx*1-0x7c8812],bl
  4150d6:	add    DWORD PTR [eax],0xffffffa3
  4150d9:	mov    ds:0xff00272d,al
  4150de:	cmp    edi,0x25
  4150e1:	adc    ch,BYTE PTR [ebx]
  4150e3:	pop    edx
  4150e4:	(bad)  
  4150e5:	inc    DWORD PTR [eax]
  4150e7:	cmp    DWORD PTR [ebx],0xffffff94
  4150ea:	push   ebp
  4150eb:	xchg   ebp,eax
  4150ec:	int3   
  4150ed:	int3   
  4150ee:	inc    DWORD PTR [eax]
  4150f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f1:	in     eax,dx
  4150f2:	mov    eax,0x8300ffe1
  4150f7:	add    BYTE PTR [edx],dl
  4150f9:	xchg   BYTE PTR ds:0x8900fff7,al
  4150ff:	jmp    DWORD PTR [edx+0x6a]
  415102:	in     al,0xe0
  415104:	add    DWORD PTR [eax],0xffffffff
  415107:	call   DWORD PTR [esi]
  415109:	fucom  st(3)
  41510b:	cmp    bh,0xff
  41510e:	dec    esp
  415110:	popw   ss
  415112:	push   edx
  415113:	and    BYTE PTR [ecx-0x1e000001],cl
  415119:	xor    bh,BYTE PTR [esi+0x5]
  41511c:	dec    esp
  41511e:	inc    DWORD PTR [eax]
  415120:	dec    ebp
  415121:	lock xor bh,dl
  415124:	add    BYTE PTR [eax],al
  415126:	cmp    edi,0xffffffa6
  415129:	out    dx,eax
  41512a:	cli    
  41512b:	adc    cl,ah
  41512d:	add    bh,bh
  41512f:	add    DWORD PTR [eax+esi*4],0x46
  415133:	inc    ecx
  415134:	add    BYTE PTR [ebx+0x6e00ff00],al
  41513a:	cwde   
  41513b:	xchg   BYTE PTR [eax],al
  41513d:	add    bh,bh
  41513f:	(bad)  
  415140:	jp     0x415199
  415142:	pop    esp
  415143:	xor    BYTE PTR [ebx+0x33cc0000],al
  415149:	inc    edx
  41514a:	out    0x2c,al
  41514c:	add    BYTE PTR [eax],al
  41514e:	add    bh,bh
  415150:	inc    ebx
  415151:	sub    DWORD PTR [ebx+esi*1],edi
  415154:	add    bh,bh
  415156:	(bad)  
  415157:	jmp    FWORD PTR [esi-0x5e]
  41515a:	ja     0x41518e
  41515c:	int3   
  41515d:	add    DWORD PTR [eax],0xffffff83
  415160:	lea    edx,[ebx]
  415162:	or     al,0x2b
  415164:	add    BYTE PTR [eax],al
  415166:	add    bh,bh
  415168:	dec    eax
  415169:	outs   dx,DWORD PTR ds:[esi]
  41516a:	inc    esi
  41516b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41516c:	int3   
  41516d:	add    BYTE PTR [eax],al
  41516f:	add    BYTE PTR [ebx+0x61],al
  415172:	and    bh,BYTE PTR [eax]
  415174:	inc    DWORD PTR [eax]
  415176:	cmp    edi,0xffffffc1
  415179:	in     al,0xb3
  41517b:	xor    BYTE PTR [eax],al
  41517d:	inc    DWORD PTR [ebx+0x5f1a1fff]
  415183:	add    BYTE PTR ds:[ebx-0x27dc3334],al
  41518a:	sub    cl,BYTE PTR [edx+0x0]
  41518d:	int3   
  41518e:	dec    esp
  415190:	sub    al,0x4d
  415192:	inc    eax
  415193:	cmp    bh,bh
  415195:	inc    DWORD PTR [ebx+0x43cab2cc]
  41519b:	jae    0x415120
  41519d:	or     esp,0xffffff83
  4151a0:	push   0xffe9f50e
  4151a5:	mov    edi,edi
  4151a7:	jmp    DWORD PTR [ecx-0x4735e]
  4151ad:	add    bh,bh
  4151af:	add    bl,dh
  4151b1:	xor    DWORD PTR [ecx-0x7cff7cc6],0xffffff83
  4151b8:	gs imul esp,DWORD PTR cs:0x8989cc00,0xde3c7179
  4151c4:	(bad)  
  4151c5:	dec    esp
  4151c7:	add    dh,bh
  4151c9:	retf   
  4151ca:	cli    
  4151cb:	nop
  4151cc:	add    DWORD PTR [ebx+0x4fb000ff],0xffffff87
  4151d3:	dec    ebp
  4151d4:	inc    DWORD PTR [eax]
  4151d6:	add    bh,bh
  4151d8:	sbb    ah,BYTE PTR [edx]
  4151da:	cmp    eax,0x8300ff7f
  4151df:	add    BYTE PTR [esi+0x5f],bl
  4151e2:	cvttps2pi mm7,xmm7
  4151e5:	add    BYTE PTR [eax],al
  4151e7:	add    dh,dh
  4151e9:	sbb    eax,0x89d889
  4151ee:	cmp    edi,0x57
  4151f1:	adc    BYTE PTR [ebp+0x7],bl
  4151f4:	(bad)  
  4151f5:	dec    esp
  4151f7:	mov    ebp,ebp
  4151f9:	sahf   
  4151fa:	leave  
  4151fb:	jmp    0x844052ff
  415200:	jecxz  0x41525c
  415202:	dec    ecx
  415203:	push   es
  415204:	inc    DWORD PTR [eax]
  415206:	add    ah,cl
  415208:	shl    DWORD PTR [esi],cl
  41520a:	push   0x8300ccb2
  41520f:	(bad)  
  415210:	jns    0x415268
  415212:	sub    DWORD PTR [ecx-0xff0001],0x2efe1e51
  41521c:	inc    DWORD PTR [ebx-0xbbd7d00]
  415222:	push   es
  415223:	xor    eax,0xff83ffcc
  415228:	es pop esp
  41522a:	das    
  41522b:	clc    
  41522c:	add    BYTE PTR [ebx-0x51d37601],al
  415232:	stc    
  415233:	inc    edi
  415234:	add    BYTE PTR [eax],al
  415236:	dec    DWORD PTR [ecx-0x2b3b84ea]
  41523c:	(bad)  
  41523d:	inc    DWORD PTR [eax]
  41523f:	cmp    DWORD PTR [esi+0x97bcf6],0xffffff89
  415246:	cmp    edi,0x15
  415249:	es out 0xac,eax
  41524c:	dec    DWORD PTR [ecx-0x9783400]
  415252:	sub    ch,BYTE PTR [eax-0x77]
  415255:	(bad)  
  415256:	(bad)  
  415257:	(bad)  
  415258:	clc    
  415259:	mov    ch,BYTE PTR [ebp+0xffd9]
  41525f:	push   DWORD PTR [eax+0x6a411b]
  415265:	cmp    edi,0xffffffff
  415268:	and    ebx,DWORD PTR [ebx]
  41526a:	loope  0x415204
  41526c:	add    BYTE PTR [ecx-0x14ca0000],cl
  415272:	inc    eax
  415273:	aam    0x0
  415275:	add    DWORD PTR [eax],0xffffffff
  415278:	xor    al,0x5a
  41527a:	xlat   BYTE PTR ds:[ebx]
  41527b:	and    bh,bh
  41527d:	add    bh,bh
  41527f:	add    BYTE PTR [edx],al
  415281:	scas   al,BYTE PTR es:[edi]
  415282:	jp     0x415280
  415284:	add    bh,bh
  415286:	int3   
  415287:	jmp    DWORD PTR [esp+ebx*2-0x7600e1a2]
  41528e:	cmp    edi,0x1e
  415291:	arpl   WORD PTR [edi-0xff00a3],cx
  415297:	push   DWORD PTR ds:0xd170a8
  41529d:	(bad)  
  41529e:	(bad)  
  41529f:	call   edi
  4152a1:	fs loope 0x415251
  4152a4:	inc    DWORD PTR [ebx-0x73c3ff7d]
  4152aa:	imul   dl
  4152ac:	add    bh,bh
  4152ae:	mov    DWORD PTR [ebx+0x179cc303],eax
  4152b4:	inc    DWORD PTR [eax]
  4152b6:	(bad)  
  4152b7:	call   FWORD PTR [ebp+0x83f332]
  4152bd:	inc    DWORD PTR [eax]
  4152bf:	add    BYTE PTR [esi-0x628339],cl
  4152c5:	add    BYTE PTR [ebx-0x686e0977],al
  4152cb:	inc    eax
  4152cc:	inc    DWORD PTR [ebx+0x6d0fff83]
  4152d2:	lods   al,BYTE PTR ds:[esi]
  4152d3:	or     al,BYTE PTR [eax]
  4152d5:	(bad)  
  4152d6:	(bad)  
  4152d7:	call   DWORD PTR [edx+0x5d]
  4152da:	(bad)  
  4152db:	cld    
  4152dc:	(bad)  
  4152dd:	(bad)  
  4152de:	inc    DWORD PTR [ebx+0x78093923]
  4152e4:	inc    DWORD PTR [ebx-0x71f30001]
  4152ea:	maskmovq mm0,(bad)
  4152eb:	test   DWORD PTR [eax],0x6fffffff
  4152f1:	or     eax,0xccffcf21
  4152f6:	(bad)  
  4152f7:	inc    DWORD PTR [edi]
  4152f9:	ss sub esi,0xffffffff
  415300:	daa    
  415301:	in     eax,dx
  415302:	loope  0x4152d3
  415304:	add    bh,bh
  415306:	cmp    edi,0xffffff8f
  415309:	repz loop 0x4152fb
  41530c:	add    ah,cl
  41530e:	inc    DWORD PTR [ebx+0x44188e97]
  415314:	or     esp,0xffffffcc
  415317:	jmp    DWORD PTR [ecx+0x613c61]
  41531d:	add    DWORD PTR [eax],0x0
  415320:	dec    edx
  415321:	cmp    al,0xa0
  415323:	xchg   edi,edi
  415325:	(bad)  
  415326:	(bad)  
  415327:	call   FWORD PTR [ecx-0x76fc2522]
  41532d:	(bad)  
  41532e:	(bad)  
  41532f:	inc    DWORD PTR [ecx]
  415331:	nop
  415332:	loope  0x4153b1
  415334:	add    DWORD PTR [eax],0xffffff89
  415337:	cmp    esi,0x15
  41533a:	and    al,0x4a
  41533c:	add    DWORD PTR [eax],0x0
  41533f:	(bad)  
  415340:	jns    0x4153ba
  415342:	push   edx
  415343:	in     eax,dx
  415344:	add    BYTE PTR [eax],al
  415346:	mov    edi,edi
  415348:	outs   dx,DWORD PTR ds:[esi]
  415349:	pushf  
  41534a:	mov    cl,0x4a
  41534c:	inc    DWORD PTR [eax]
  41534e:	or     esp,0xffffff9e
  415351:	push   ebx
  415352:	xor    al,0x98
  415354:	add    BYTE PTR [eax],al
  415356:	mov    DWORD PTR [ebx-0x44377f5b],eax
  41535c:	add    BYTE PTR [ecx-0x66b67c01],cl
  415362:	iret   
  415363:	add    DWORD PTR [eax],eax
  415365:	add    DWORD PTR [eax],0xffffff83
  415368:	push   ss
  415369:	cmp    al,0x23
  41536b:	mov    ecx,esp
  41536d:	add    bh,bh
  41536f:	add    BYTE PTR [eax+0x75],bh
  415372:	add    BYTE PTR [ebx-0x760100],dh
  415378:	xchg   ebx,eax
  415379:	adc    BYTE PTR gs:[ebx],cl
  41537c:	dec    DWORD PTR [ecx+0x1800ff89]
  415382:	ret    0xffec
  415385:	int3   
  415386:	add    bh,bh
  415388:	inc    esp
  415389:	or     edi,esp
  41538b:	sar    edi,0x0
  41538e:	(bad)  
  41538f:	push   DWORD PTR [ecx]
  415391:	ds hlt 
  415393:	sahf   
  415394:	(bad)  
  415395:	dec    esp
  415397:	inc    DWORD PTR [edx]
  415399:	mov    ebx,0x89ffed53
  41539e:	add    BYTE PTR [eax],al
  4153a0:	jle    0x415389
  4153a2:	ins    BYTE PTR es:[edi],dx
  4153a3:	pop    esp
  4153a4:	add    DWORD PTR [eax],0xffffffcc
  4153a7:	sbb    DWORD PTR [eax+0x43],0xffffffa0
  4153ab:	std    
  4153ac:	inc    DWORD PTR [ebx+0x223c83ff]
  4153b2:	data16 jo 0x4153b4
  4153b5:	inc    DWORD PTR [ebx-0x7aa27d34]
  4153bb:	jmp    0xa6f5:0xffff0000
  4153c2:	fsubr  st(0),st
  4153c4:	dec    esp
  4153c6:	dec    DWORD PTR [ecx+0x49bfb964]
  4153cc:	inc    DWORD PTR [eax]
  4153ce:	int3   
  4153cf:	dec    DWORD PTR [ebx-0x7ca632eb]
  4153d5:	(bad)  
  4153d6:	inc    DWORD PTR [ebx+0x3be52fd3]
  4153dc:	dec    esp
  4153de:	(bad)  
  4153df:	jmp    DWORD PTR ds:0xb3f8d2
  4153e5:	(bad)  
  4153e6:	(bad)  
  4153e7:	call   edx
  4153e9:	ret    0x9787
  4153ec:	add    DWORD PTR [eax],0xffffffff
  4153ef:	push   DWORD PTR [eax+0x2a]
  4153f2:	jmp    0xd683:0xff83ff3c
  4153f9:	lock dec esp
  4153fb:	loop   0x4153fc
  4153fd:	int3   
  4153fe:	inc    DWORD PTR [eax]
  415400:	xchg   edi,eax
  415401:	iret   
  415402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415403:	xchg   ebx,eax
  415404:	(bad)  
  415405:	(bad)  
  415406:	(bad)  
  415407:	(bad)  
  415408:	out    dx,al
  415409:	sub    ebp,DWORD PTR [edx]
  41540b:	lea    eax,[eax]
  41540d:	add    ah,cl
  41540f:	add    BYTE PTR [ecx-0x3316da21],bh
  415415:	int3   
  415416:	inc    DWORD PTR [ebx-0xf145d31]
  41541c:	inc    DWORD PTR [ebx-0x7f8f0000]
  415422:	test   BYTE PTR ds:0xccff,bl
  415428:	xchg   ecx,eax
  415429:	jge    0x415433
  41542b:	push   esp
  41542c:	add    bh,bh
  41542e:	int3   
  41542f:	int3   
  415430:	int3   
  415431:	cmp    eax,0xff32bb
  415436:	(bad)  
  415437:	call   FWORD PTR [ebp-0x336c5e5c]
  41543d:	cmp    edi,0xffffffff
  415440:	xor    ch,al
  415442:	add    ebp,DWORD PTR [eax+eax*1+0x0]
  415446:	(bad)  
  415447:	jmp    FWORD PTR [edi]
  415449:	es pop ecx
  41544b:	je     0x41544c
  41544d:	inc    DWORD PTR [eax]
  41544f:	(bad)  
  415450:	cld    
  415451:	xor    al,0xef
  415453:	pop    ebx
  415454:	add    bh,bh
  415456:	cmp    edi,0xffffffe5
  415459:	and    DWORD PTR [eax],ecx
  41545b:	sar    bh,cl
  41545d:	cmp    edi,0x0
  415460:	lahf   
  415461:	int    0xe9
  415463:	ja     0x4153e8
  415465:	add    bh,bh
  415467:	call   FWORD PTR [edi]
  415469:	lock aas 
  41546b:	mov    cs,esp
  41546d:	(bad)  
  41546e:	inc    DWORD PTR [eax]
  415470:	lahf   
  415471:	lahf   
  415472:	xor    eax,0xcc83ff79
  415477:	int3   
  415478:	cmp    eax,0xcc36574f
  41547d:	(bad)  
  41547e:	dec    DWORD PTR [ecx+0x1c42564a]
  415484:	(bad)  
  415485:	(bad)  
  415486:	(bad)  
  415487:	call   DWORD PTR [edi-0xc6f4a6]
  41548d:	add    BYTE PTR [eax],al
  41548f:	add    BYTE PTR [edi],ch
  415491:	bound  ebx,QWORD PTR [eax]
  415493:	outs   dx,DWORD PTR ds:[esi]
  415494:	int3   
  415495:	add    bh,bh
  415497:	add    al,dl
  415499:	int    0x44
  41549b:	jbe    0x41549c
  41549d:	or     DWORD PTR [ecx-0x12d23177],0xffffffce
  4154a4:	inc    DWORD PTR [ebx+0x1e4600ff]
  4154aa:	cmp    DWORD PTR [edx],eax
  4154ac:	add    DWORD PTR [ebx-0x5dd0100],0x5
  4154b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154b4:	add    BYTE PTR [eax],al
  4154b6:	cmp    edi,0x56
  4154b9:	xchg   esi,eax
  4154ba:	es mov eax,0x83ff89ff
  4154c0:	test   DWORD PTR [ecx-0x7cbf55],edi
  4154c6:	dec    esp
  4154c8:	pop    edx
  4154c9:	jo     0x415523
  4154cb:	dec    edi
  4154cc:	add    BYTE PTR [ecx+0x87a00ff],cl
  4154d2:	js     0x415518
  4154d4:	(bad)  
  4154d5:	inc    DWORD PTR [eax]
  4154d7:	add    BYTE PTR [ecx],bh
  4154d9:	scas   al,BYTE PTR es:[edi]
  4154da:	dec    edx
  4154db:	add    edi,edi
  4154dd:	add    BYTE PTR [eax],al
  4154df:	jmp    FWORD PTR [ecx]
  4154e1:	shl    DWORD PTR [ecx+0x31],0xff
  4154e5:	add    bh,bh
  4154e7:	add    BYTE PTR [ecx+eax*2],ah
  4154ea:	jg     0x4154b1
  4154ec:	mov    edi,edi
  4154ee:	add    bh,bh
  4154f0:	cmp    BYTE PTR ds:0xffa403,al
  4154f6:	dec    DWORD PTR [ecx+0x32da6612]
  4154fc:	add    bh,bh
  4154fe:	(bad)  
  4154ff:	inc    DWORD PTR [ebx]
  415501:	push   ebx
  415502:	pop    ds
  415503:	test   edi,edi
  415505:	(bad)  
  415506:	dec    DWORD PTR [ecx+0x1a1d37b4]
  41550c:	dec    esp
  41550e:	int3   
  41550f:	dec    DWORD PTR [ebp+0x62]
  415512:	jns    0x415538
  415514:	inc    DWORD PTR [ebx+0x561e8300]
  41551a:	lock sub cl,ah
  41551d:	add    bh,bh
  41551f:	adc    DWORD PTR [edi+0xe958a],0xffffff83
  415526:	dec    DWORD PTR [ecx-0x1f250e3d]
  41552c:	inc    DWORD PTR [eax]
  41552e:	(bad)  
  41552f:	(bad)  
  415530:	jmp    0xc2ec05
  415535:	add    BYTE PTR [eax],al
  415537:	or     DWORD PTR [edi+0x20],0xffffffa7
  41553b:	pop    ebp
  41553c:	mov    edi,edi
  41553e:	add    bh,bh
  415540:	int3   
  415541:	jecxz  0x41559f
  415543:	cmp    edi,0xffffffff
  415546:	add    bh,bh
  415548:	rol    edx,0x2d
  41554b:	xchg   ebx,eax
  41554c:	(bad)  
  41554d:	inc    DWORD PTR [eax]
  41554f:	inc    esp
  415551:	mov    DWORD PTR [edi+0x47],ecx
  415554:	(bad)  
  415555:	inc    DWORD PTR [eax]
  415557:	cmp    DWORD PTR [eax],0x4d
  41555a:	daa    
  41555b:	inc    eax
  41555c:	add    BYTE PTR [eax],al
  41555e:	cmp    edi,0xffffffc3
  415561:	mov    al,BYTE PTR [edi]
  415563:	dec    ecx
  415564:	add    bh,bh
  415566:	inc    DWORD PTR [eax]
  415568:	dec    esp
  415569:	cvtps2pd xmm3,QWORD PTR [ecx-0x1]
  41556d:	add    BYTE PTR [ebx-0x7eb58d01],al
  415573:	test   bh,bh
  415575:	add    bh,bh
  415577:	add    dl,al
  415579:	outs   dx,DWORD PTR ds:[esi]
  41557a:	imul   ebx,DWORD PTR [ebx-0x7676007d],0x2a
  415581:	inc    edx
  415582:	cmp    ah,cl
  415584:	(bad)  
  415585:	inc    DWORD PTR [eax]
  415587:	inc    esp
  415589:	call   0x14114c9
  41558e:	add    BYTE PTR [ebx+0x52e51b21],al
  415594:	add    bh,bh
  415596:	cmp    edi,0x49
  415599:	popf   
  41559a:	dec    edi
  41559b:	jmp    0xe5d1:0xcc0000
  4155a2:	out    dx,eax
  4155a3:	mov    ds:0x8300ff00,al
  4155a8:	rol    DWORD PTR [ecx],0xfb
  4155ab:	add    al,BYTE PTR [eax]
  4155ad:	(bad)  
  4155ae:	(bad)  
  4155af:	call   FWORD PTR [edx-0xeba7c]
  4155b5:	add    ah,cl
  4155b7:	add    ah,dh
  4155b9:	adc    BYTE PTR [edx+ebx*4-0xff0001],cl
  4155c0:	dec    ebx
  4155c1:	add    BYTE PTR [edx+ecx*1+0x0],dh
  4155c5:	cmp    edi,0xffffff83
  4155c8:	mov    dl,0x80
  4155ca:	aam    0x46
  4155cc:	(bad)  
  4155cd:	inc    DWORD PTR [eax]
  4155cf:	add    BYTE PTR [ecx-0x7c32f697],bl
  4155d5:	add    bh,bh
  4155d7:	sub    DWORD PTR [edi+0x16],0x7e
  4155db:	xor    edi,edi
  4155dd:	add    bh,bh
  4155df:	dec    DWORD PTR [edx+0x2e]
  4155e2:	cmc    
  4155e3:	sbb    eax,DWORD PTR [eax]
  4155e5:	(bad)  
  4155e6:	inc    DWORD PTR [eax]
  4155e8:	mov    dl,0xa4
  4155ea:	clc    
  4155eb:	sbb    edi,edi
  4155ed:	int3   
  4155ee:	(bad)  
  4155ef:	(bad)  
  4155f0:	fild   DWORD PTR [eax+edi*8]
  4155f3:	dec    ecx
  4155f4:	(bad)  
  4155f5:	dec    esp
  4155f7:	int3   
  4155f8:	mov    al,0x37
  4155fa:	push   ss
  4155fb:	repz dec esp
  4155fe:	add    BYTE PTR [ebx+0x5089015f],al
  415604:	inc    DWORD PTR [eax]
  415606:	inc    DWORD PTR [ebx+0x55effef5]
  41560c:	int3   
  41560d:	add    bh,bh
  41560f:	int3   
  415610:	in     eax,dx
  415611:	push   edi
  415612:	adc    eax,0xffffff60
  415617:	inc    DWORD PTR [esp+ebp*4+0x1c]
  41561b:	xchg   ebx,eax
  41561c:	dec    DWORD PTR [ecx+0x6eebff00]
  415622:	lea    edi,[ebx-0x33ff3301]
  415628:	mov    fs,WORD PTR [esi]
  41562a:	loopne 0x415650
  41562c:	(bad)  
  41562d:	inc    DWORD PTR [eax]
  41562f:	(bad)  
  415630:	sti    
  415631:	cmp    bl,dl
  415633:	das    
  415634:	add    bh,bh
  415636:	int3   
  415637:	mov    DWORD PTR [eax],ecx
  415639:	xchg   ebx,eax
  41563a:	pop    es
  41563b:	jno    0x41563c
  41563d:	(bad)  
  41563e:	(bad)  
  41563f:	inc    DWORD PTR [ecx+ebx*2+0xff51a6]
  415646:	(bad)  
  415647:	jmp    DWORD PTR [ebx+0x6cfc9e]
  41564d:	or     esp,0xffffffff
  415650:	mov    BYTE PTR [eax-0xff52e9],al
  415656:	cmp    edi,0x2f
  415659:	jb     0x415636
  41565b:	int    0xff
  41565d:	add    DWORD PTR [eax],0xffffffff
  415660:	std    
  415661:	and    al,0x76
  415663:	mov    cs,esp
  415665:	inc    DWORD PTR [ebx+0x51c565cc]
  41566b:	add    bh,bh
  41566d:	add    bh,bh
  41566f:	add    BYTE PTR [ebp+0x28],ah
  415672:	rol    ecx,0x0
  415675:	add    ah,cl
  415677:	add    bl,dl
  415679:	clc    
  41567a:	sub    ebp,DWORD PTR [edi]
  41567c:	int3   
  41567d:	dec    DWORD PTR [ecx-0x1d67134]
  415683:	fs add ah,cl
  415686:	add    BYTE PTR [ecx+0x4de746a5],cl
  41568c:	inc    DWORD PTR [eax]
  41568e:	mov    edi,edi
  415690:	in     eax,0x36
  415692:	out    0xe6,al
  415694:	int3   
  415695:	(bad)  
  415696:	(bad)  
  415697:	(bad)  
  415698:	jp     0x41565a
  41569a:	pop    esi
  41569b:	fiadd  WORD PTR [eax]
  41569d:	add    BYTE PTR [ebx+0x3662b1ff],al
  4156a3:	mov    eax,ds:0xff0083
  4156a8:	mov    eax,ds:0x838ba4a0
  4156ad:	int3   
  4156ae:	inc    DWORD PTR [ebx+0x183c76a2]
  4156b4:	inc    DWORD PTR [ebx+0x77f683ff]
  4156ba:	adc    DWORD PTR [ebx],ebp
  4156bc:	(bad)  
  4156bd:	inc    DWORD PTR [eax]
  4156bf:	cmp    DWORD PTR [eax+0x2a],0xffffff9b
  4156c3:	push   0xffffffff
  4156c5:	cmp    edi,0xffffff89
  4156c8:	mov    edi,0xff746e4a
  4156cd:	inc    DWORD PTR [eax]
  4156cf:	add    BYTE PTR [ebp+esi*1-0xcdb5],ch
  4156d6:	inc    DWORD PTR [eax]
  4156d8:	or     eax,0x4faae4
  4156dd:	inc    DWORD PTR [eax]
  4156df:	dec    DWORD PTR [eax+0x22]
  4156e2:	cwde   
  4156e3:	push   ss
  4156e4:	add    BYTE PTR [eax],al
  4156e6:	mov    DWORD PTR [eax],eax
  4156e8:	inc    esp
  4156e9:	cmc    
  4156ea:	cmp    BYTE PTR [eax-0x77],dl
  4156ed:	add    ah,cl
  4156ef:	add    ch,cl
  4156f1:	add    cl,BYTE PTR [esi]
  4156f3:	rol    DWORD PTR [ebx-0xd007c01],cl
  4156f9:	add    eax,esp
  4156fb:	bound  eax,QWORD PTR [eax]
  4156fd:	add    BYTE PTR [eax],al
  4156ff:	inc    ecx
  415701:	add    DWORD PTR [ebp-0x73],ecx
  415704:	inc    DWORD PTR [eax]
  415706:	add    bh,bh
  415708:	push   0x8922617b
  41570d:	(bad)  
  41570e:	dec    esp
  415710:	inc    ebx
  415711:	cld    
  415712:	sbb    edi,DWORD PTR [ecx]
  415714:	inc    DWORD PTR [eax]
  415716:	(bad)  
  415717:	call   DWORD PTR [edi+0x58]
  41571a:	xchg   esi,eax
  41571b:	repnz cmp edi,0x0
  41571f:	call   FWORD PTR [ecx]
  415721:	xchg   ebp,eax
  415722:	js     0x4156c0
  415724:	int3   
  415725:	add    DWORD PTR [ebx-0x2ba36c00],0xffffffc6
  41572c:	int3   
  41572d:	cmp    edi,0xffffffcc
  415730:	leave  
  415731:	loope  0x41571a
  415733:	mov    dh,0x0
  415735:	inc    DWORD PTR [ebx+0x4bdda5ff]
  41573b:	ins    BYTE PTR es:[edi],dx
  41573c:	int3   
  41573d:	inc    DWORD PTR [eax]
  41573f:	add    BYTE PTR [ebp-0x3fa130],ah
  415745:	add    BYTE PTR [eax],al
  415747:	int3   
  415748:	gs xchg ebp,eax
  41574a:	popa   
  41574b:	aas    
  41574c:	(bad)  
  41574d:	(bad)  
  41574e:	inc    DWORD PTR [eax]
  415750:	nop
  415751:	jge    0x415746
  415753:	jmp    0xac41:0xff83ff
  41575a:	imul   ebp,DWORD PTR [edx-0xffff01],0xc614cd1f
  415764:	dec    esp
  415766:	(bad)  
  415767:	dec    DWORD PTR [ecx+eiz*2+0x0]
  41576b:	scas   al,BYTE PTR es:[edi]
  41576c:	cmp    edi,0xffffffff
  41576f:	call   DWORD PTR [ebx-0x3384168c]
  415775:	(bad)  
  415776:	dec    esp
  415778:	sbb    BYTE PTR [edx+0x56],0x4c
  41577c:	add    bh,bh
  41577e:	add    BYTE PTR [eax],al
  415780:	clc    
  415781:	jg     0x4157d7
  415783:	test   al,0xff
  415785:	inc    DWORD PTR [eax]
  415787:	(bad)  
  415788:	mov    ebx,0xff5f8cf2
  41578d:	int3   
  41578e:	add    bh,bh
  415790:	popf   
  415791:	xchg   esp,eax
  415792:	or     cl,BYTE PTR [edi+edi*8-0x7d]
  415796:	(bad)  
  415797:	jmp    DWORD PTR [edx-0x7cd38e4f]
  41579d:	add    BYTE PTR [eax],al
  41579f:	sbb    DWORD PTR [ecx-0xd],0x45
  4157a3:	push   eax
  4157a4:	add    bh,bh
  4157a6:	add    BYTE PTR [eax],al
  4157a8:	xchg   ecx,eax
  4157a9:	bound  ebx,QWORD PTR [edi-0x760000a5]
  4157af:	(bad)  
  4157b0:	jg     0x4157ec
  4157b2:	xchg   esi,eax
  4157b3:	js     0x4157b4
  4157b5:	inc    DWORD PTR [eax]
  4157b7:	call   FWORD PTR [edx+0x35]
  4157ba:	push   cs
  4157bb:	(bad)  
  4157bd:	inc    DWORD PTR [ebx+0x144011ff]
  4157c3:	sbb    edi,edi
  4157c5:	add    DWORD PTR [eax],0x0
  4157c8:	aam    0x48
  4157ca:	mov    ecx,0xffff83ef
  4157cf:	mov    ebx,ebx
  4157d1:	sbb    eax,0xffc0d6
  4157d6:	dec    DWORD PTR [ecx-0x4b574908]
  4157dc:	int3   
  4157dd:	inc    DWORD PTR [eax]
  4157df:	inc    esi
  4157e1:	outs   dx,BYTE PTR ds:[esi]
  4157e2:	push   es
  4157e3:	xchg   ebx,eax
  4157e4:	inc    DWORD PTR [ebx-0x2a870100]
  4157ea:	lods   al,BYTE PTR ds:[esi]
  4157eb:	sbb    eax,0xff8389
  4157f0:	pop    ebp
  4157f1:	pusha  
  4157f2:	(bad)  
  4157f3:	pop    eax
  4157f4:	dec    esp
  4157f6:	(bad)  
  4157f7:	(bad)  
  4157f8:	cmp    BYTE PTR [edi-0x42],ah
  4157fb:	js     0x4157fc
  4157fd:	int3   
  4157fe:	cmp    edi,0xffffffbd
  415801:	jae    0x4157aa
  415803:	fs cmp edi,0x0
  415807:	(bad)  
  415808:	std    
  415809:	jo     0x415865
  41580b:	call   0x41580f
  415810:	mov    dl,0x37
  415812:	pop    ebx
  415813:	pusha  
  415814:	add    bh,bh
  415816:	inc    DWORD PTR [eax]
  415818:	lods   al,BYTE PTR ds:[esi]
  415819:	repz add eax,0xffff03
  41581f:	push   DWORD PTR [edi]
  415821:	mov    esi,0xffff281d
  415826:	(bad)  
  415827:	(bad)  
  415828:	cmp    ah,dh
  41582a:	call   0x52ff:0xff83ff76
  415831:	or     eax,0xff8982f3
  415836:	add    bh,bh
  415838:	and    BYTE PTR [ecx-0x4f],al
  41583b:	call   0xcc422440
  415840:	sbb    eax,0x44d751
  415845:	add    DWORD PTR [ebx-0x32b5ce7d],0xffffffd0
  41584c:	int3   
  41584d:	dec    esp
  41584f:	add    BYTE PTR [ebx-0x2d],cl
  415852:	xchg   edx,eax
  415853:	daa    
  415854:	inc    DWORD PTR [eax]
  415856:	(bad)  
  415857:	(bad)  
  415858:	mov    esi,0xfff017c3
  41585d:	dec    DWORD PTR [ecx-0x4ca15c01]
  415863:	mov    esp,0x83ffccff
  415868:	and    dl,bh
  41586a:	xor    eax,0x89898395
  41586f:	add    DWORD PTR [edx],0x59
  415872:	sbb    esp,esi
  415874:	add    bh,bh
  415876:	mov    edi,edi
  415878:	in     eax,0x2
  41587a:	daa    
  41587b:	scas   eax,DWORD PTR es:[edi]
  41587c:	(bad)  
  41587d:	dec    esp
  41587f:	mov    eax,eax
  415881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415882:	lock repnz add bh,bh
  415886:	(bad)  
  415887:	call   FWORD PTR [ecx+eiz*1+0x46]
  41588b:	cmp    bh,bh
  41588d:	inc    DWORD PTR [eax]
  41588f:	sub    DWORD PTR [edi-0x3d],0x3e
  415893:	scas   eax,DWORD PTR es:[edi]
  415894:	cmp    edi,0x0
  415897:	add    dh,bh
  415899:	fstp   TBYTE PTR [edi]
  41589b:	xor    eax,0xff0000ff
  4158a0:	fxch   st(0)
  4158a2:	sbb    al,0xf5
  4158a4:	inc    DWORD PTR [eax]
  4158a6:	add    DWORD PTR [eax],0x29
  4158a9:	add    BYTE PTR [eax+esi*1-0x1],0x0
  4158ae:	(bad)  
  4158af:	jmp    FWORD PTR [edx-0x5bc3b1]
  4158b5:	int3   
  4158b6:	add    bh,bh
  4158b8:	jb     0x4158cc
  4158ba:	int    0x60
  4158bc:	(bad)  
  4158bd:	inc    DWORD PTR [eax]
  4158bf:	add    cl,dl
  4158c1:	jge    0x415865
  4158c3:	xor    eax,DWORD PTR [eax]
  4158c5:	(bad)  
  4158c6:	(bad)  
  4158c7:	dec    DWORD PTR [edi+esi*1]
  4158ca:	or     al,0x3
  4158cc:	add    bh,bh
  4158ce:	add    BYTE PTR [ebx-0x2dcc613f],al
  4158d4:	mov    DWORD PTR [ebx-0x8350100],eax
  4158da:	shl    DWORD PTR [eax],1
  4158dc:	dec    DWORD PTR [ecx+0x780affff]
  4158e2:	gs std 
  4158e4:	add    BYTE PTR [eax],al
  4158e6:	add    ah,cl
  4158e8:	cmc    
  4158e9:	mov    dl,0x21
  4158eb:	mov    esp,0xcc0083
  4158f0:	add    edi,DWORD PTR [ecx]
  4158f2:	fcomp  QWORD PTR [edx]
  4158f4:	or     esp,0xffffffff
  4158f7:	add    bh,dh
  4158f9:	pop    ebx
  4158fa:	inc    esp
  4158fb:	cmp    BYTE PTR [eax],al
  4158fd:	(bad)  
  4158fe:	(bad)  
  4158ff:	call   ebx
  415901:	popa   
  415902:	fist   WORD PTR [edx]
  415904:	int3   
  415905:	(bad)  
  415906:	(bad)  
  415907:	dec    DWORD PTR [eax]
  415909:	jmp    0x8a41237d
  41590e:	mov    edi,edi
  415910:	arpl   WORD PTR [ebx],di
  415912:	pop    edi
  415913:	inc    edi
  415914:	inc    DWORD PTR [ebx+0x3ec00ff]
  41591a:	les    edi,FWORD PTR [ecx+0xcc0000]
  415920:	retf   
  415921:	or     BYTE PTR [ebx-0x30],ch
  415924:	int3   
  415925:	mov    edi,edi
  415927:	add    BYTE PTR [edi+edi*2-0x7600b46a],dl
  41592e:	add    bh,bh
  415930:	je     0x415937
  415932:	mov    BYTE PTR [ecx-0xff3301],ah
  415938:	mov    ebp,0xffaaf8d6
  41593d:	add    bh,bh
  41593f:	add    bh,bl
  415941:	dec    esi
  415942:	push   0x72
  415947:	mov    DWORD PTR [edi-0x7],ecx
  41594a:	cdq    
  41594b:	repnz (bad) 
  41594d:	inc    DWORD PTR [eax]
  41594f:	add    BYTE PTR [ebx-0x7cb11686],ah
  415955:	or     DWORD PTR [ecx-0x6f942777],0x24
  41595c:	inc    DWORD PTR [eax]
  41595e:	mov    edi,edi
  415960:	and    eax,0x83d8505e
  415965:	(bad)  
  415966:	inc    DWORD PTR [eax]
  415968:	mov    ds:0xfffed0d1,eax
  41596d:	dec    DWORD PTR [ecx-0x12f57d00]
  415973:	push   ebx
  415974:	dec    DWORD PTR [eax-0x18]
  415977:	inc    DWORD PTR [eax]
  415979:	jae    0x41597b
  41597b:	enter  0xff00,0x6f
  41597f:	(bad)  
  415980:	call   DWORD PTR [eax+0x4900c8fb]
  415986:	ror    ah,cl
  415988:	add    BYTE PTR [esi-0xff8e77],dh
  41598e:	inc    ebp
  41598f:	(bad)  
  415990:	dec    ebx
  415992:	scas   al,BYTE PTR es:[edi]
  415993:	aad    0x83
  415995:	icebp  
  415996:	adc    edi,edi
  415998:	int3   
  415999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41599a:	add    BYTE PTR [edi-0x1],cl
  41599d:	dec    DWORD PTR [ebp+0x0]
  4159a0:	jmp    DWORD PTR [ecx]
  4159a2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4159a4:	add    BYTE PTR [eax+0x46],dh
  4159a7:	add    BYTE PTR [eax],al
  4159a9:	push   ss
  4159aa:	push   DWORD PTR [esp+ecx*8]
  4159ad:	jmp    DWORD PTR [ecx+0x0]
  4159b0:	add    BYTE PTR [eax],dl
  4159b2:	pop    es
  4159b3:	jns    0x4159b5
  4159b5:	in     eax,0x9d
  4159b7:	(bad)  
  4159b8:	dec    esi
  4159ba:	add    BYTE PTR [eax+eax*1-0x1],ch
  4159be:	stc    
  4159bf:	inc    DWORD PTR [eax]
  4159c1:	lods   al,BYTE PTR ds:[esi]
  4159c2:	aaa    
  4159c3:	jmp    0xffc4b0c8
  4159c8:	add    BYTE PTR [edx-0x1],al
  4159cb:	leave  
  4159cc:	cmp    edi,0xffffffc9
  4159cf:	inc    DWORD PTR [eax]
  4159d1:	mov    dh,0x0
  4159d3:	inc    edx
  4159d4:	push   DWORD PTR [eax-0x68]
  4159d7:	dec    DWORD PTR [ecx-0x53337c]
  4159dd:	jmp    ebx
  4159df:	(bad)  
  4159e0:	jmp    DWORD PTR [edx-0x46]
  4159e3:	fiadd  DWORD PTR [eax]
  4159e5:	mov    edi,0xfffff87
  4159ea:	inc    DWORD PTR [edi+0x0]
  4159ed:	jmp    DWORD PTR [ebp+0x14be83ff]
  4159f3:	cmp    eax,0xff94e700
  4159f8:	add    BYTE PTR [edi+edi*8-0x71],al
  4159fc:	inc    DWORD PTR [eax]
  4159fe:	push   esi
  4159ff:	add    DWORD PTR [eax],0x10
  415a02:	fcmovb st,st(1)
  415a04:	add    BYTE PTR [edi-0x4e0000ae],dh
  415a0a:	add    ch,bh
  415a0c:	(bad)  
  415a0d:	call   edx
  415a0f:	add    bh,bh
  415a11:	aas    
  415a12:	cmp    dh,dl
  415a14:	inc    DWORD PTR [eax-0x74007cea]
  415a1a:	int3   
  415a1b:	jge    0x415a1c
  415a1d:	dec    DWORD PTR ds:0xf74fffff
  415a23:	lds    eax,FWORD PTR [eax]
  415a25:	mov    esi,0x95ff0029
  415a2a:	int3   
  415a2b:	and    ah,cl
  415a2d:	dec    edi
  415a2f:	int3   
  415a30:	add    ah,ah
  415a32:	mov    ah,0x2e
  415a34:	cmp    DWORD PTR ds:0xb7008343,0xffffffff
  415a3b:	mov    al,ds:0xffc589ff
  415a40:	inc    DWORD PTR [eax]
  415a42:	cmp    cl,BYTE PTR [ebx-0x1797d]
  415a48:	int3   
  415a49:	rol    BYTE PTR [eax],0x5d
  415a4c:	int3   
  415a4d:	sub    DWORD PTR [eax-0x509f0001],0xffffffe8
  415a54:	mov    edx,esp
  415a56:	add    BYTE PTR [eax],al
  415a58:	add    BYTE PTR [ebp+0xfff0ff],bl
  415a5e:	adc    al,BYTE PTR [ebx+0x73240889]
  415a64:	add    BYTE PTR [esi-0x59],ah
  415a67:	dec    esp
  415a69:	sub    eax,0x831bff
  415a6e:	mov    ecx,0x172cffff
  415a73:	push   0xffffff83
  415a75:	dec    ecx
  415a76:	and    al,0x83
  415a78:	sbb    DWORD PTR ds:0xffff3e00,0x4
  415a7f:	or     esp,0xffffffdd
  415a82:	fiadd  DWORD PTR [ebx+eax*4-0x4c]
  415a86:	and    eax,0xa9ff00
  415a8b:	cli    
  415a8c:	(bad)  
  415a8d:	inc    DWORD PTR [esp+ecx*8]
  415a90:	inc    ecx
  415a92:	(bad)  
  415a93:	or     edi,edi
  415a95:	inc    eax
  415a96:	imul   edi,edi,0xe8ff15ff
  415a9c:	(bad)  
  415a9d:	call   DWORD PTR [ebx-0x5bc0ff01]
  415aa3:	lods   al,BYTE PTR ds:[esi]
  415aa4:	jmp    DWORD PTR [esi-0x61ffffbf]
  415aaa:	add    BYTE PTR [edi+edi*8-0x34],bl
  415aae:	push   edi
  415aaf:	(bad)  
  415ab0:	jmp    eax
  415ab2:	mov    esi,0xef43ff5a
  415ab7:	inc    DWORD PTR [eax]
  415ab9:	das    
  415aba:	add    cl,dl
  415abc:	(bad)  
  415abd:	call   FWORD PTR [edx+0x0]
  415ac0:	push   DWORD PTR [edi+edi*8-0x2bfa7c6f]
  415ac7:	(bad)  
  415ac8:	call   FWORD PTR [ecx-0xff1e7d]
  415ace:	adc    eax,0x5bd589ff
  415ad3:	sub    al,0x0
  415ad5:	xchg   edi,eax
  415ad6:	idiv   edi
  415ad8:	(bad)  
  415ad9:	cmp    BYTE PTR [eax],al
  415adb:	xchg   BYTE PTR [eax],al
  415add:	add    ah,ch
  415adf:	add    BYTE PTR [eax],al
  415ae1:	pop    eax
  415ae2:	test   eax,0xd283ff16
  415ae7:	add    BYTE PTR [ebx-0x1002d],al
  415aed:	add    BYTE PTR [eax-0xe6c0000],ch
  415af3:	call   0xea00:0xff2af883
  415afa:	call   edx
  415afc:	dec    esp
  415afe:	loop   0x415aff
  415b00:	add    BYTE PTR [edx],bh
  415b02:	xlat   BYTE PTR ds:[ebx]
  415b03:	scas   al,BYTE PTR es:[edi]
  415b04:	int3   
  415b05:	test   al,0xd0
  415b07:	mov    DWORD PTR [eax],eax
  415b09:	icebp  
  415b0a:	add    dl,ah
  415b0c:	dec    esp
  415b0e:	fadd   DWORD PTR [eax]
  415b10:	add    BYTE PTR [edi],cl
  415b12:	jnp    0x415a9d
  415b14:	xor    DWORD PTR [edx+edi*2],0x0
  415b18:	mov    DWORD PTR [edx+0x833983],eax
  415b1e:	lock add BYTE PTR [eax],al
  415b21:	(bad)  
  415b23:	dec    ebp
  415b24:	mov    DWORD PTR [eax-0x51],esi
  415b27:	add    BYTE PTR [eax],al
  415b29:	sbb    eax,0xff2a89
  415b2e:	inc    DWORD PTR es:[eax]
  415b31:	sbb    eax,0x57ff90a3
  415b36:	or     al,0x0
  415b38:	sub    DWORD PTR [edx],0xffffffff
  415b3b:	xchg   bh,bh
  415b3d:	call   FWORD PTR [ebp+0x52fb83ff]
  415b43:	mov    ebx,0xff027dff
  415b48:	inc    esp
  415b4a:	call   DWORD PTR [edx-0x1]
  415b4d:	add    dl,bh
  415b4f:	int3   
  415b50:	add    edx,0x2b
  415b53:	pop    esp
  415b54:	call   DWORD PTR [edi+0x2c]
  415b57:	add    bh,bh
  415b59:	daa    
  415b5a:	jmp    FWORD PTR [edi-0x3385007d]
  415b60:	mov    DWORD PTR [ecx+eiz*1-0xdf77cb1],ebx
  415b67:	add    BYTE PTR [eax],al
  415b69:	sub    BYTE PTR [ebx-0x3376000f],al
  415b6f:	int3   
  415b70:	jmp    ebp
  415b72:	jp     0x415b7b
  415b74:	add    BYTE PTR [edx],ch
  415b76:	xor    edi,edi
  415b78:	int3   
  415b79:	outs   dx,BYTE PTR ds:[esi]
  415b7a:	jmp    DWORD PTR ds:0xc200cc
  415b80:	inc    DWORD PTR [edx]
  415b82:	loop   0x415b5d
  415b84:	add    dh,bl
  415b86:	jg     0x415b87
  415b88:	(bad)  
  415b89:	jg     0x415b8a
  415b8b:	push   ebp
  415b8c:	mov    DWORD PTR [eax],eax
  415b8e:	das    
  415b8f:	inc    DWORD PTR [eax]
  415b91:	mov    BYTE PTR [eax],al
  415b93:	dec    edi
  415b94:	(bad)  
  415b95:	cmp    DWORD PTR [ebx-0x157c01],ebp
  415b9b:	mov    ebx,0x89f2ff00
  415ba0:	(bad)  
  415ba1:	jp     0x415bb9
  415ba3:	dec    ecx
  415ba4:	jmp    FWORD PTR [edi]
  415ba6:	aaa    
  415ba7:	add    bh,bh
  415ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415baa:	xor    esi,0xffffffff
  415bad:	jmp    DWORD PTR [ebx-0x70fcff34]
  415bb3:	sbb    al,0xff
  415bb5:	jns    0x415b48
  415bb7:	(bad)  
  415bb8:	call   DWORD PTR [eax+0xff19ff]
  415bbe:	aad    0xff
  415bc0:	sbb    DWORD PTR [edx+0x10],0xfffffff3
  415bc4:	add    BYTE PTR [edx+0x530000cc],bh
  415bca:	add    BYTE PTR [esi-0x9e3301],dl
  415bd0:	sub    DWORD PTR [ecx-0x5e],0x33
  415bd4:	add    BYTE PTR [ebp-0x34000025],cl
  415bda:	add    BYTE PTR [edi+0x3000ff],cl
  415be0:	call   ebp
  415be2:	retf   
  415be3:	add    BYTE PTR ss:[eax+edx*1],ch
  415be7:	inc    DWORD PTR [ebx-0xba00b8]
  415bed:	push   edx
  415bef:	add    bh,bh
  415bf1:	mov    dh,0x2b
  415bf3:	xlat   BYTE PTR ds:[ebx]
  415bf4:	int3   
  415bf5:	stos   DWORD PTR es:[edi],eax
  415bf6:	cli    
  415bf7:	inc    DWORD PTR [eax]
  415bf9:	ins    DWORD PTR es:[edi],dx
  415bfa:	add    DWORD PTR [esi],0x0
  415bfd:	mov    DWORD PTR [eax+eax*1+0x0],ebx
  415c01:	pop    ecx
  415c02:	retf   0xba
  415c05:	push   ds
  415c06:	mov    eax,ds:0xd1ff00
  415c0b:	fdivr  st,st(7)
  415c0d:	xor    DWORD PTR [esi],0xffffffcc
  415c10:	(bad)  
  415c11:	jmp    0x1540a3fb
  415c16:	in     eax,dx
  415c17:	(bad)  
  415c18:	inc    DWORD PTR [esi]
  415c1a:	xor    DWORD PTR [edi+0x0],0xffffffff
  415c1e:	(bad)  
  415c1f:	inc    DWORD PTR [ebx-0xbd8734]
  415c25:	inc    ebx
  415c26:	mov    al,ds:0xff7f83cc
  415c2b:	jg     0x415c2c
  415c2d:	int3   
  415c2e:	sub    edi,edi
  415c30:	jmp    esi
  415c32:	mov    esi,edi
  415c34:	push   esi
  415c36:	pusha  
  415c37:	inc    DWORD PTR [eax]
  415c39:	sbb    eax,0xcc0057ff
  415c3e:	repnz (bad) 
  415c40:	jmp    DWORD PTR [eax]
  415c42:	push   0x9119ff7a
  415c47:	(bad)  
  415c48:	call   DWORD PTR [edi-0x1301]
  415c4e:	sub    BYTE PTR [eax],al
  415c50:	dec    DWORD PTR [esi+0x53]
  415c53:	mov    ds:0xf679ff,al
  415c58:	push   DWORD PTR [esi]
  415c5a:	sub    DWORD PTR [edx-0xf97d00],0xffffffff
  415c61:	pop    edi
  415c62:	test   BYTE PTR [edi-0x1],bl
  415c65:	shl    esi,1
  415c67:	add    bh,bh
  415c69:	jge    0x415c6a
  415c6b:	add    DWORD PTR es:[ebx-0x713300f0],0xd
  415c73:	xor    edi,edi
  415c75:	xchg   esp,eax
  415c76:	sahf   
  415c77:	inc    DWORD PTR [eax]
  415c79:	push   0xff838100
  415c7e:	stos   DWORD PTR es:[edi],eax
  415c7f:	add    ah,cl
  415c81:	cs jo  0x415ccd
  415c84:	int3   
  415c85:	scas   al,BYTE PTR es:[edi]
  415c86:	out    0xff,al
  415c88:	add    BYTE PTR [ebx-0x34],dh
  415c8b:	dec    ebx
  415c8c:	add    BYTE PTR [ecx-0x1b7c3320],cl
  415c92:	push   esp
  415c93:	mov    bl,0xff
  415c95:	push   cs
  415c96:	fwait
  415c97:	inc    DWORD PTR [eax]
  415c99:	and    DWORD PTR [eax],eax
  415c9b:	aas    
  415c9c:	add    DWORD PTR [eax],0x38
  415c9f:	dec    esp
  415ca1:	pop    ebx
  415ca2:	add    BYTE PTR [ecx],al
  415ca4:	add    al,ah
  415ca6:	fcos   
  415ca8:	call   DWORD PTR [edi-0x1]
  415cab:	inc    edi
  415cac:	cmp    edi,0xffffffe1
  415caf:	inc    DWORD PTR [eax]
  415cb1:	cmc    
  415cb2:	or     al,0x8e
  415cb4:	(bad)  
  415cb5:	jp     0x415c51
  415cb7:	add    DWORD PTR [eax],0x4c
  415cba:	add    BYTE PTR [ebx-0x7c1a7c01],ah
  415cc0:	inc    ecx
  415cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc3:	sub    BYTE PTR [eax],al
  415cc5:	imul   ebx,DWORD PTR [eax],0xcc250000
  415ccb:	fdivp  st(7),st
  415ccd:	add    BYTE PTR [esi-0x1],ch
  415cd0:	(bad)  
  415cd1:	mov    esi,0xd400e730
  415cd6:	(bad)  
  415cd7:	(bad)  
  415cd8:	(bad)  
  415cd9:	cld    
  415cda:	inc    edi
  415cdc:	int3   
  415cdd:	add    DWORD PTR [ebx-0x30bc0001],0x7
  415ce4:	(bad)  
  415ce5:	ficomp WORD PTR [eax+eax*1-0x71ffac01]
  415cec:	add    BYTE PTR [ebx+0x3acc897c],al
  415cf2:	sbb    dl,dl
  415cf4:	call   FWORD PTR [edx+0x20]
  415cf7:	add    BYTE PTR [eax],al
  415cf9:	xor    eax,0xffff5083
  415cfe:	mov    bh,0x83
  415d00:	call   FWORD PTR [ebx-0x63]
  415d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d04:	dec    DWORD PTR [eax]
  415d06:	push   cs
  415d07:	inc    DWORD PTR [eax]
  415d09:	inc    ebp
  415d0a:	jmp    ebp
  415d0c:	(bad)  
  415d0d:	jmp    DWORD PTR [eax]
  415d0f:	add    DWORD PTR [eax],0x1d
  415d12:	mov    ds:0x900b00b0,eax
  415d17:	(bad)  
  415d18:	jmp    FWORD PTR [edx-0x7c009d01]
  415d1e:	cmp    ecx,DWORD PTR [ecx-0x49cb7a01]
  415d24:	jmp    DWORD PTR [ecx]
  415d26:	xor    DWORD PTR [eax],eax
  415d28:	(bad)  
  415d29:	call   0x141022d
  415d2e:	or     al,0xcc
  415d30:	add    BYTE PTR [eax+0x16],cl
  415d33:	push   edx
  415d34:	add    DWORD PTR [edi-0x1e7c7c9e],0xffffffff
  415d3b:	icebp  
  415d3c:	int3   
  415d3d:	cmp    DWORD PTR [ecx],0xffffff83
  415d40:	push   esi
  415d42:	loope  0x415d7e
  415d44:	mov    DWORD PTR [ebx-0x61007cbe],esp
  415d4a:	dec    DWORD PTR [edx+0x598383]
  415d50:	jmp    FWORD PTR [edx-0x33]
  415d53:	push   esi
  415d54:	mov    ebx,esp
  415d56:	or     al,BYTE PTR [eax]
  415d58:	(bad)  
  415d59:	fld    QWORD PTR [ebx+0x45000012]
  415d5f:	mov    edi,edi
  415d61:	sbb    al,0xf
  415d63:	mov    ds:0x3c02ff,eax
  415d68:	jmp    DWORD PTR [ecx-0x76004900]
  415d6e:	rol    DWORD PTR [eax],1
  415d70:	add    BYTE PTR [ebx+0x41],bl
  415d73:	mov    dl,0xff
  415d75:	in     al,0x3b
  415d77:	add    bh,bh
  415d79:	push   ebp
  415d7a:	add    BYTE PTR [ebx-0x1],bh
  415d7d:	inc    ecx
  415d7f:	(bad)  
  415d80:	push   DWORD PTR [edi+0x64]
  415d83:	(bad)  
  415d85:	xchg   esp,eax
  415d86:	sar    bh,cl
  415d88:	int3   
  415d89:	adc    bh,bh
  415d8b:	sbb    al,0x0
  415d8d:	add    BYTE PTR [eax-0xfad0001],al
  415d93:	xor    edi,edi
  415d95:	or     al,0x78
  415d97:	add    BYTE PTR [ebx-0xc53321],al
  415d9d:	add    BYTE PTR [esp+ecx*8-0x6d703001],cl
  415da4:	add    BYTE PTR [ebx+0x7383ff20],dh
  415daa:	add    BYTE PTR [ebx],cl
  415dac:	(bad)  
  415dad:	call   DWORD PTR [edx-0x4f6aff01]
  415db3:	in     al,dx
  415db4:	add    BYTE PTR [esp+ebx*2+0xe283ff],ch
  415dbb:	mov    dh,0x0
  415dbd:	int3   
  415dbe:	push   ecx
  415dbf:	int3   
  415dc0:	(bad)  
  415dc1:	jl     0x415dba
  415dc3:	cmp    DWORD PTR [eax],eax
  415dc5:	mov    DWORD PTR es:[eax],0x7f007dcc
  415dcc:	add    bh,bh
  415dce:	jmp    0x976b5dd2
  415dd3:	cmp    bh,bh
  415dd5:	rol    BYTE PTR [ebx-0x81ff01],1
  415ddb:	sar    edi,0xff
  415dde:	dec    esp
  415ddf:	add    BYTE PTR [eax],al
  415de1:	les    ebx,FWORD PTR [ebx-0x7f050090]
  415de7:	inc    DWORD PTR [eax]
  415de9:	popf   
  415dea:	int3   
  415deb:	cmp    edi,edi
  415ded:	add    BYTE PTR [ecx-0x7d],ah
  415df0:	add    BYTE PTR [ebx+0x51],ch
  415df3:	sbb    eax,0xff90ba89
  415df8:	add    BYTE PTR [ebx-0xb934],bh
  415dfe:	(bad)  
  415dff:	inc    DWORD PTR [eax]
  415e01:	xchg   esi,eax
  415e02:	push   edi
  415e03:	jb     0x415e04
  415e05:	pop    ss
  415e06:	jl     0x415e07
  415e08:	and    DWORD PTR [ebx-0x7ce101],0xffffffd3
  415e0f:	add    DWORD PTR [ebx-0x11119f],0x35
  415e16:	imul   eax,DWORD PTR [eax],0x0
  415e19:	lods   eax,DWORD PTR ds:[esi]
  415e1a:	add    BYTE PTR [edx],al
  415e1c:	(bad)  
  415e1d:	call   FWORD PTR [edx-0x1]
  415e20:	jmp    FWORD PTR [ebp-0x1effffc2]
  415e26:	push   cs
  415e27:	(bad)  
  415e28:	call   FWORD PTR [ebp-0x1]
  415e2b:	pop    ebx
  415e2c:	add    bh,bh
  415e2e:	mov    ch,0xff
  415e30:	int3   
  415e31:	adc    al,0x7e
  415e33:	sub    BYTE PTR [ebx+0x838509],al
  415e39:	lock add BYTE PTR [eax],dh
  415e3c:	inc    DWORD PTR [eax]
  415e3e:	jb     0x415e3f
  415e40:	jmp    ebx
  415e42:	in     eax,0x8a
  415e44:	(bad)  
  415e45:	jle    0x415e55
  415e47:	add    bh,bh
  415e49:	push   ebx
  415e4a:	add    BYTE PTR [ebp-0x680077],al
  415e50:	add    BYTE PTR [edi-0x73004a53],bh
  415e56:	add    DWORD PTR [eax],eax
  415e58:	add    BYTE PTR [esi-0xffe400],dl
  415e5e:	xor    DWORD PTR [ebx+0x7e9ebdff],eax
  415e64:	add    BYTE PTR [esi+0x3e],bh
  415e67:	dec    DWORD PTR [ecx-0x7ca8ffa2]
  415e6d:	add    dl,cl
  415e6f:	dec    esp
  415e71:	sbb    eax,0x50ffbcc0
  415e76:	pop    ss
  415e77:	(bad)  
  415e78:	call   DWORD PTR [ecx-0x1800]
  415e7e:	and    al,BYTE PTR [eax]
  415e80:	add    BYTE PTR [edi+eax*1+0x51a2ff05],ah
  415e87:	(bad)  
  415e88:	(bad)  
  415e89:	fild   WORD PTR [eax]
  415e8b:	rol    BYTE PTR [eax],cl
  415e8d:	call   DWORD PTR [esi-0x7d]
  415e90:	mov    DWORD PTR [ecx-0x4a],eax
  415e93:	xchg   ebp,eax
  415e94:	add    BYTE PTR [edi-0x4ff009b],ah
  415e9a:	push   DWORD PTR [ecx]
  415e9c:	mov    DWORD PTR [eax],eax
  415e9e:	in     al,0xcc
  415ea0:	dec    esp
  415ea2:	mov    eax,ds:0x8adeff40
  415ea7:	add    BYTE PTR [eax],al
  415ea9:	adc    eax,DWORD PTR [ebx+0x16ffffd7]
  415eaf:	int3   
  415eb0:	cmp    DWORD PTR ds:0x27006c7b,0xffffffb1
  415eb7:	(bad)  
  415eb8:	jmp    FWORD PTR [eax-0x1]
  415ebb:	push   ss
  415ebc:	cmp    edi,0xffffffcc
  415ebf:	inc    DWORD PTR [ebx-0xe56c81]
  415ec5:	gs sbb al,0xff
  415ec8:	call   FWORD PTR [ecx+0x0]
  415ecb:	rol    DWORD PTR [eax],cl
  415ecd:	(bad)  
  415ece:	fild   DWORD PTR [ebx+0x23a915cc]
  415ed4:	sub    DWORD PTR [ecx-0x7a7cffc9],0x0
  415edb:	ins    BYTE PTR es:[edi],dx
  415edc:	inc    DWORD PTR [eax]
  415ede:	pop    edx
  415edf:	add    bh,bh
  415ee1:	in     al,0x4c
  415ee3:	leave  
  415ee4:	call   eax
  415ee6:	mov    eax,DWORD PTR [eax]
  415ee8:	mov    DWORD PTR [edi+edi*8-0x647c7c39],ebp
  415eef:	(bad)  
  415ef0:	call   FWORD PTR [ebp+0x6e]
  415ef3:	xchg   ebp,eax
  415ef4:	jmp    FWORD PTR [esi]
  415ef6:	iret   
  415ef7:	mov    edi,edi
  415ef9:	lds    eax,FWORD PTR [eax]
  415efb:	push   0xffffff89
  415efd:	xor    DWORD PTR [edx-0x1],0x0
  415f01:	adc    ah,ah
  415f03:	sbb    BYTE PTR [eax],al
  415f05:	push   ecx
  415f06:	xchg   esi,eax
  415f07:	add    bh,bh
  415f09:	hlt    
  415f0a:	add    eax,0x0
  415f0d:	int3   
  415f0e:	mov    dh,0xff
  415f10:	add    BYTE PTR [ebx+0x3800fea3],bh
  415f16:	aas    
  415f17:	add    BYTE PTR [ecx-0xe5ff3c],cl
  415f1d:	jmp    DWORD PTR [esi]
  415f1f:	(bad)  
  415f20:	dec    esp
  415f22:	or     ch,BYTE PTR [ebx+eax*4]
  415f25:	push   edi
  415f26:	ja     0x415eb1
  415f28:	push   DWORD PTR [edi+0xb4ff]
  415f2e:	pop    edi
  415f2f:	int3   
  415f30:	add    BYTE PTR [eax+esi*8],bl
  415f33:	pop    ds
  415f34:	dec    DWORD PTR ds:0xc00ff8c
  415f3a:	int3   
  415f3b:	(bad)  
  415f3c:	mov    DWORD PTR [eax],eax
  415f3e:	outs   dx,BYTE PTR ds:[esi]
  415f3f:	add    BYTE PTR [ebx+0xc80a0a],al
  415f45:	in     al,dx
  415f46:	je     0x415f47
  415f48:	call   FWORD PTR [ecx-0x7c000501]
  415f4e:	std    
  415f4f:	add    BYTE PTR [eax],al
  415f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f52:	imul   ecx,DWORD PTR [ebx-0xa4b900],0x7889bdff
  415f5c:	mov    edi,edi
  415f5e:	fmulp  st(4),st
  415f60:	sub    esp,0x6a
  415f63:	das    
  415f64:	adc    DWORD PTR [ebx+ebp*2-0x7c240100],0x6
  415f6c:	dec    esp
  415f6e:	xor    al,0x0
  415f70:	jmp    ebp
  415f72:	enter  0xff0d,0xd5
  415f76:	fadd   QWORD PTR [eax]
  415f78:	add    BYTE PTR [edi],ch
  415f7a:	jmp    DWORD PTR [ecx]
  415f7c:	(bad)  
  415f7d:	dec    ebp
  415f7f:	(bad)  
  415f80:	(bad)  
  415f81:	fstp   QWORD PTR [edi+0x63c3ff2b]
  415f87:	add    BYTE PTR [eax],al
  415f89:	fld    DWORD PTR [ebx-0x1ffffbd]
  415f8f:	add    bh,bh
  415f91:	mov    dl,0xe3
  415f93:	push   ds
  415f94:	add    BYTE PTR [esi-0x13],dl
  415f97:	int3   
  415f98:	int3   
  415f99:	js     0x415f9b
  415f9b:	sub    edi,edi
  415f9d:	add    BYTE PTR [ecx-0x7dbe007d],ch
  415fa3:	cmp    eax,0x890594ff
  415fa8:	add    cl,dh
  415faa:	call   DWORD PTR ds:0xff0d8300
  415fb0:	mov    DWORD PTR [esi-0x4a76619c],ecx
  415fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fb7:	add    bh,bh
  415fb9:	sbb    al,0xff
  415fbb:	leave  
  415fbc:	(bad)  
  415fbd:	call   DWORD PTR [esi]
  415fbf:	inc    DWORD PTR [ebx-0x409336]
  415fc5:	outs   dx,BYTE PTR ds:[esi]
  415fc6:	adc    bh,bh
  415fc8:	or     DWORD PTR [eax+eax*1-0x8],0xffffffff
  415fcd:	add    BYTE PTR [ebx-0x141a7700],cl
  415fd3:	pop    edx
  415fd4:	call   FWORD PTR [ecx]
  415fd6:	mov    cl,0x83
  415fd8:	add    cl,bh
  415fda:	mov    DWORD PTR [ebx+0x0],eax
  415fdd:	add    BYTE PTR [eax-0x1fc0001],dh
  415fe3:	push   ebp
  415fe4:	(bad)  
  415fe5:	mov    edx,0xb6830063
  415fea:	add    bl,al
  415fec:	(bad)  
  415fed:	call   FWORD PTR [ebx-0x1cf07c01]
  415ff3:	cmp    bh,bh
  415ff5:	xchg   ebp,eax
  415ff6:	les    eax,FWORD PTR [ebx+0x68ff6c00]
  415ffc:	or     esp,0xffffffd8
  415fff:	add    bh,bh
  416001:	adc    eax,0xebff9c24
  416006:	(bad)  
  416007:	(bad)  
  416008:	inc    DWORD PTR [eax+0x0]
  41600b:	jnp    0x41600c
  41600d:	inc    DWORD PTR [ecx]
  41600f:	(bad)  
  416010:	dec    DWORD PTR [esi-0x4800d903]
  416016:	aam    0x83
  416018:	inc    DWORD PTR [eax]
  41601a:	add    BYTE PTR [ebx+0x0],ah
  41601d:	sbb    DWORD PTR [esi],0xffffffff
  416020:	add    BYTE PTR [edx-0x43],dh
  416023:	cs int3 
  416025:	xlat   BYTE PTR ds:[ebx]
  416026:	add    DWORD PTR es:[eax],0xffffffac
  41602a:	add    BYTE PTR [ebp-0x7d],dl
  41602d:	jmp    DWORD PTR [eax+0x0]
  416030:	dec    DWORD PTR [ebx]
  416032:	psadbw mm7,mm7
  416035:	inc    eax
  416036:	sti    
  416037:	dec    DWORD PTR [ecx-0x7c6600ea]
  41603d:	add    BYTE PTR [ebx],dl
  41603f:	(bad)  
  416040:	jmp    ebp
  416042:	jmp    0x2621603e
  416047:	(bad)  
  416048:	inc    DWORD PTR [edx-0xffa67d]
  41604e:	push   eax
  41604f:	(bad)  
  416050:	call   ecx
  416052:	popa   
  416053:	iret   
  416054:	int3   
  416055:	lahf   
  416056:	fiadd  DWORD PTR [ebx-0x5300c801]
  41605c:	inc    DWORD PTR [eax]
  41605e:	test   al,0x83
  416060:	mov    edx,esi
  416062:	enter  0x89b2,0x58
  416066:	mov    ah,0xff
  416068:	add    BYTE PTR [edi+edi*8-0x69],bh
  41606c:	mov    edi,edi
  41606e:	cli    
  41606f:	inc    DWORD PTR [eax]
  416071:	mov    edx,0xcf8308a8
  416076:	sahf   
  416077:	add    BYTE PTR [eax],al
  416079:	jo     0x415ffe
  41607b:	cwde   
  41607c:	int3   
  41607d:	jmp    DWORD PTR [ebx-0x7361007d]
  416083:	xchg   ecx,eax
  416084:	and    DWORD PTR [edx-0x7f],0x0
  416088:	add    BYTE PTR [ebx+eax*4-0x22ff0012],bh
  41608f:	add    BYTE PTR [ebx+0xda7d59],al
  416095:	xchg   ebx,eax
  416096:	lea    eax,[ebx+0x30001200]
  41609c:	(bad)  
  41609d:	push   DWORD PTR [ebx+0x0]
  4160a0:	(bad)  
  4160a1:	jp     0x416106
  4160a3:	into   
  4160a4:	sub    DWORD PTR [edi+0x5f89832d],0xffffffff
  4160ab:	pusha  
  4160ac:	add    DWORD PTR [eax],0x21
  4160af:	int3   
  4160b0:	xor    eax,0x3f
  4160b3:	outs   dx,DWORD PTR ds:[esi]
  4160b4:	add    BYTE PTR [edx-0x2633332d],ch
  4160ba:	dec    ebp
  4160bc:	(bad)  
  4160bd:	jmp    FWORD PTR [edx]
  4160bf:	(bad)  
  4160c0:	inc    DWORD PTR [esi+0x25ff1b0a]
  4160c6:	rol    BYTE PTR [eax],cl
  4160c8:	push   edi
  4160ca:	sub    DWORD PTR [edi+edi*8-0x7cffd834],0x3d
  4160d2:	in     eax,dx
  4160d3:	mov    al,0x0
  4160d5:	xchg   ebp,eax
  4160d6:	inc    eax
  4160d7:	inc    DWORD PTR [ebx-0x7000ce]
  4160dd:	add    bh,ah
  4160df:	add    bh,bh
  4160e1:	push   ss
  4160e2:	(bad)  
  4160e3:	scas   al,BYTE PTR es:[edi]
  4160e4:	call   edx
  4160e6:	dec    ebx
  4160e7:	(bad)  
  4160e8:	push   edi
  4160ea:	inc    DWORD PTR [ebx-0x77]
  4160ed:	jmp    FWORD PTR [edi-0x3393007d]
  4160f3:	es mov edi,esi
  4160f6:	dec    esp
  4160f7:	mov    edi,edi
  4160f9:	add    bh,bh
  4160fb:	mov    ds:0x8352ffff,al
  416100:	xor    DWORD PTR [esi],0x14
  416103:	add    DWORD PTR [ebx+0x83f74c],0xffe9009a
  41610d:	int3   
  41610e:	dec    ebx
  41610f:	(bad)  
  416110:	dec    DWORD PTR [ebx]
  416112:	mov    al,ds:0x1ca18952
  416117:	(bad)  
  416118:	dec    DWORD PTR [edx]
  41611a:	dec    DWORD PTR [ebp-0x1]
  41611d:	add    BYTE PTR [ecx],ch
  41611f:	inc    DWORD PTR [ebx-0xda40c2]
  416125:	sar    BYTE PTR [edi-0x7ca50000],cl
  41612b:	pusha  
  41612c:	inc    DWORD PTR [ebx-0x53ff006b]
  416132:	adc    eax,0xc7d2ff01
  416137:	mov    DWORD PTR [ebx-0x3300ff3c],eax
  41613d:	add    BYTE PTR ds:0x2d84ff83,cl
  416143:	or     eax,DWORD PTR [eax]
  416145:	pop    edx
  416146:	sbb    bh,bh
  416148:	call   DWORD PTR [edx+0xffc900]
  41614e:	imul   eax,DWORD PTR [eax],0xbcbabcff
  416154:	(bad)  
  416155:	aas    
  416156:	sub    ecx,esp
  416158:	add    BYTE PTR [edi],bh
  41615a:	jmp    FWORD PTR [ebp-0x957634]
  416160:	call   DWORD PTR [ebp-0x6e0010c5]
  416166:	mov    al,0xcc
  416168:	add    al,al
  41616a:	int3   
  41616b:	mov    bh,0x0
  41616d:	xor    DWORD PTR [ecx-0x1],0xffffffff
  416171:	adc    DWORD PTR [eax+0x5556ff4d],esi
  416177:	inc    DWORD PTR [ebx-0x330094]
  41617d:	push   DWORD PTR [eax-0x1]
  416180:	jmp    edx
  416182:	lea    esi,[ebx-0xea7e7d]
  416188:	(bad)  
  416189:	fisttp QWORD PTR [ecx-0x63760080]
  41618f:	add    BYTE PTR [eax],al
  416191:	sub    BYTE PTR [eax],0xcf
  416194:	add    BYTE PTR [eax],dh
  416196:	ret    0xccff
  416199:	add    BYTE PTR es:[edi],ah
  41619c:	add    DWORD PTR [eax],0xfffffff8
  41619f:	(bad)  
  4161a0:	call   FWORD PTR ds:0x9d83ae6c
  4161a6:	cld    
  4161a7:	int3   
  4161a8:	call   DWORD PTR [ebp+0xf0ff]
  4161ae:	jne    0x4161b0
  4161b0:	add    BYTE PTR [esp+esi*8-0x5a],bl
  4161b4:	add    BYTE PTR [ebx+ebx*4-0xf43400],cl
  4161bb:	mov    cl,0xff
  4161bd:	dec    DWORD PTR [esi-0x7d]
  4161c0:	int3   
  4161c1:	sti    
  4161c2:	cmp    dl,ah
  4161c4:	call   DWORD PTR [ebx+0x6f000064]
  4161ca:	push   DWORD PTR [edi-0xa20034]
  4161d0:	add    BYTE PTR [edi+0x1e00421b],ch
  4161d6:	pushf  
  4161d7:	inc    DWORD PTR [ebx-0xa40092]
  4161dd:	int3   
  4161de:	inc    ebp
  4161df:	cmp    edi,0x10
  4161e2:	jae    0x4161ab
  4161e4:	add    BYTE PTR [edx-0x7e],dh
  4161e7:	add    BYTE PTR [eax],al
  4161e9:	popf   
  4161ea:	(bad)  
  4161eb:	jl     0x4161ec
  4161ed:	add    BYTE PTR [esi],dh
  4161ef:	add    bh,bh
  4161f1:	jns    0x416270
  4161f3:	xor    al,BYTE PTR [eax]
  4161f5:	fcmovne st,st(7)
  4161f7:	add    BYTE PTR [eax],al
  4161f9:	push   0xffffe6ff
  4161fe:	pop    es
  4161ff:	cmp    edi,0xffffffa8
  416202:	dec    ebx
  416203:	fild   WORD PTR [eax]
  416205:	xchg   BYTE PTR [ebp-0x890001],bh
  41620b:	inc    DWORD PTR gs:[eax]
  41620e:	rol    DWORD PTR [eax],0xff
  416211:	and    DWORD PTR [esp+ebx*4-0x1],ebx
  416215:	rcl    DWORD PTR ds:0x83b4ff00,1
  41621b:	xchg   DWORD PTR [ecx-0x3101],ecx
  416221:	out    dx,al
  416222:	ret    
  416223:	dec    ebx
  416224:	int3   
  416225:	popa   
  416226:	je     0x416227
  416228:	call   esi
  41622a:	sbb    DWORD PTR [edi],0xffffff83
  41622d:	push   edx
  41622f:	inc    DWORD PTR [ebx-0x59ce2f]
  416235:	out    0x99,eax
  416237:	add    BYTE PTR [ecx-0x7cec00a3],cl
  41623d:	push   ebx
  41623f:	cmp    edi,0xffffffe4
  416242:	cmp    eax,0xd983ffe7
  416247:	mov    DWORD PTR [ebx+0xa8989],eax
  41624d:	add    dl,ch
  41624f:	mov    edi,edi
  416251:	xchg   ecx,eax
  416252:	sbb    eax,0xccf5002a
  416257:	add    ah,cl
  416259:	and    eax,0xff0043ff
  41625e:	mov    ch,0x0
  416260:	add    BYTE PTR [esi+esi*8+0x2a],al
  416264:	add    BYTE PTR [ecx],dl
  416266:	mov    bh,bh
  416268:	inc    ecx
  41626a:	call   DWORD PTR [esi+0xba8300]
  416270:	push   ebp
  416272:	mov    ebx,0xf234008c
  416277:	(bad)  
  416278:	jmp    FWORD PTR [eax+0x8fff]
  41627e:	ret    0x0
  416281:	(bad)  
  416282:	into   
  416283:	lods   eax,DWORD PTR ds:[esi]
  416284:	and    DWORD PTR [edi+0x3800ff3a],0xffffffff
  41628b:	in     eax,0x0
  41628d:	add    BYTE PTR [ecx-0x1],dh
  416290:	inc    DWORD PTR ds:0xe600f4d3
  416296:	daa    
  416297:	add    BYTE PTR [ebx-0x7c4e0004],al
  41629d:	inc    DWORD PTR [eax]
  41629f:	inc    DWORD PTR [eax]
  4162a1:	cmp    BYTE PTR [eax],0x61
  4162a4:	mov    ecx,edi
  4162a6:	jge    0x4162a8
  4162a8:	push   DWORD PTR [ebp-0xff257d]
  4162ae:	test   BYTE PTR [eax],al
  4162b0:	add    ah,ch
  4162b2:	push   ecx
  4162b3:	and    edi,edi
  4162b5:	(bad)  
  4162b6:	jmp    0xff39:0xffb1ffff
  4162bd:	push   DWORD PTR [ebx-0x1]
  4162c0:	sbb    DWORD PTR [ebx-0x68],0xffffffbf
  4162c4:	mov    DWORD PTR [ecx],edx
  4162c6:	inc    eax
  4162c7:	add    ah,cl
  4162c9:	bound  ecx,QWORD PTR [ecx-0x3f7c00c4]
  4162cf:	add    BYTE PTR [ebx-0xb8e1c2],al
  4162d5:	push   ebp
  4162d6:	push   ebx
  4162d7:	mov    DWORD PTR [ebx-0x7ca50003],eax
  4162dd:	cmp    DWORD PTR [edx-0x46fcff7d],0x7f
  4162e4:	add    ch,cl
  4162e6:	mov    edi,edi
  4162e8:	int3   
  4162e9:	mov    ebp,0xffffe4ff
  4162ee:	adc    ah,cl
  4162f0:	call   DWORD PTR [edi+0x39]
  4162f3:	test   eax,0xfff4b9cc
  4162f8:	(bad)  
  4162f9:	out    dx,al
  4162fa:	int3   
  4162fb:	cwde   
  4162fc:	(bad)  
  4162fd:	jmp    DWORD PTR [esi]
  4162ff:	cmp    edi,0xffffff96
  416302:	mov    esp,fs
  416304:	cmp    DWORD PTR [ecx+0xb00ffd2],0xffffff83
  41630b:	push   ebp
  41630c:	int3   
  41630d:	dec    ebx
  41630f:	add    BYTE PTR [eax],al
  416311:	fld    st(1)
  416313:	stos   BYTE PTR es:[edi],al
  416314:	call   DWORD PTR ds:0xcf89ff9e
  41631a:	mov    DWORD PTR [edx+0xd8ff83],ebp
  416320:	add    ch,cl
  416322:	xchg   edx,eax
  416323:	mov    WORD PTR [esi-0x75003399],ax
  41632a:	add    ah,ch
  41632c:	cmp    edi,0xffffffc2
  41632f:	mov    DWORD PTR [eax],eax
  416331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416332:	pusha  
  416333:	push   esp
  416334:	add    BYTE PTR [esi],ch
  416336:	sahf   
  416337:	cmp    edi,0xffffffd9
  41633a:	call   FWORD PTR [ecx+ecx*4-0x7600f57d]
  416341:	and    al,0xbe
  416343:	and    eax,0x8929e4ff
  416348:	(bad)  
  416349:	mov    eax,0x8900a0ff
  41634e:	mov    al,ds:0x6a06ffff
  416353:	addr16 add bh,ch
  416356:	mov    dl,0x0
  416358:	call   edi
  41635a:	add    BYTE PTR [ebp-0x7c790100],dl
  416360:	add    BYTE PTR [ecx-0x5f],bl
  416363:	(bad)  
  416364:	mov    DWORD PTR [ecx],ebp
  416366:	dec    esp
  416367:	inc    DWORD PTR [eax]
  416369:	repz add BYTE PTR [edi+0xfccff],bl
  416370:	push   DWORD PTR [ecx-0x1d]
  416373:	jle    0x416375
  416375:	fldcw  WORD PTR [ebp-0x3b0000]
  41637b:	iret   
  41637c:	add    BYTE PTR [eax],al
  41637e:	inc    edx
  41637f:	add    BYTE PTR [ecx-0x7c80bb14],cl
  416385:	retf   
  416386:	push   cs
  416387:	int3   
  416388:	add    BYTE PTR [esi],bh
  41638a:	(bad)  
  41638b:	in     eax,dx
  41638c:	inc    DWORD PTR [ebx-0x4800ff2e]
  416392:	mov    bl,cl
  416394:	and    DWORD PTR [ebx-0x78],0x0
  416398:	call   ecx
  41639a:	push   esp
  41639c:	add    BYTE PTR [eax],al
  41639e:	ss (bad) 
  4163a0:	inc    DWORD PTR [esi+0x2600bc5c]
  4163a6:	int    0x83
  4163a8:	call   FWORD PTR [eax-0x1]
  4163ab:	jo     0x4163ac
  4163ad:	add    bh,dh
  4163af:	cmp    edi,0xffffff83
  4163b2:	pop    ecx
  4163b3:	(bad)  
  4163b4:	call   edi
  4163b6:	or     DWORD PTR [eax],eax
  4163b8:	int3   
  4163b9:	in     eax,0x83
  4163bb:	xchg   bh,bh
  4163bd:	mov    DWORD PTR [eax],ebp
  4163bf:	add    BYTE PTR [eax],al
  4163c1:	call   FWORD PTR [edx+esi*4-0x7cec9501]
  4163c8:	jmp    DWORD PTR [ebx-0x1900]
  4163ce:	aad    0x0
  4163d0:	add    DWORD PTR [ebp-0x6efffeac],0xfffffff4
  4163d7:	add    bh,bh
  4163d9:	(bad)  
  4163da:	dec    eax
  4163dc:	mov    edi,edi
  4163de:	(bad)  
  4163e0:	call   FWORD PTR [edx]
  4163e2:	adc    DWORD PTR [ebx],0x89b23cff
  4163e8:	add    BYTE PTR [esi-0x1],al
  4163eb:	mov    WORD PTR [eax],es
  4163ed:	jmp    FWORD PTR [ecx+ecx*4-0x1]
  4163f1:	xchg   ecx,eax
  4163f2:	pop    edx
  4163f3:	xor    BYTE PTR [eax],al
  4163f5:	arpl   WORD PTR [ebp-0x76010100],sp
  4163fb:	idiv   bh
  4163fd:	jmp    DWORD PTR [ecx+ecx*4-0x10569400]
  416404:	add    BYTE PTR [edi+0x2200ffe8],ah
  41640a:	add    BYTE PTR [esi-0x570034],dh
  416410:	cmp    DWORD PTR [edx+0x783c543],0xffffff96
  416417:	add    bh,bh
  416419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41641a:	int3   
  41641b:	in     al,0xcc
  41641d:	add    BYTE PTR [eax-0xb330000],al
  416423:	xchg   esp,eax
  416424:	add    BYTE PTR [ecx-0x2c],dl
  416427:	int3   
  416428:	dec    ecx
  41642a:	jmp    FWORD PTR [edx-0x1]
  41642d:	(bad)  
  41642e:	cmp    esp,ecx
  416430:	dec    DWORD PTR [edx]
  416432:	pop    es
  416433:	adc    esp,ecx
  416435:	sbb    al,0x23
  416437:	int3   
  416438:	jmp    FWORD PTR [esi+0x0]
  41643b:	out    dx,al
  41643c:	add    BYTE PTR [eax],al
  41643e:	into   
  41643f:	add    BYTE PTR [ecx+0xf43d20],cl
  416445:	imul   esp,DWORD PTR [esi+0xbdffff],0xfffffff9
  41644c:	(bad)  
  41644d:	call   FWORD PTR [ebp-0x7d]
  416450:	call   ebx
  416452:	out    dx,eax
  416453:	imul   eax,DWORD PTR [eax],0xffffff95
  416456:	pusha  
  416457:	add    bh,bh
  416459:	mov    edi,edi
  41645b:	mov    es,WORD PTR [ebx+0xff6c00]
  416461:	leave  
  416462:	pushf  
  416463:	pusha  
  416464:	add    cl,bh
  416466:	jmp    0x4163f1
  416468:	call   DWORD PTR [ecx-0x76767e34]
  41646e:	jne    0x416470
  416470:	add    BYTE PTR [edi-0x19],dh
  416473:	std    
  416474:	add    BYTE PTR [ebx-0x3c],bh
  416477:	int3   
  416478:	jmp    FWORD PTR [ecx+ecx*4]
  41647b:	mov    al,0x83
  41647d:	add    BYTE PTR [ebx+eax*4+0x0],dh
  416481:	daa    
  416482:	call   0xff00:0xbb5700e6
  416489:	retf   0x3000
  41648c:	(bad)  
  41648d:	call   edi
  41648f:	mov    edi,edi
  416491:	dec    ebp
  416492:	mov    edi,0xe3ab0001
  416497:	add    DWORD PTR [eax],0xffffffb6
  41649a:	and    DWORD PTR [edi-0xf80001],0xffffffcc
  4164a1:	and    ebx,ebx
  4164a3:	push   esp
  4164a4:	inc    DWORD PTR ds:0x5d89ffb6
  4164aa:	(bad)  
  4164ab:	cmp    DWORD PTR [eax],eax
  4164ad:	(bad)  
  4164ae:	cmp    al,0xff
  4164b0:	add    BYTE PTR [edx-0x15ff37f2],bl
  4164b6:	mov    eax,ds:0xffe700ff
  4164bb:	test   al,0x0
  4164bd:	int3   
  4164be:	je     0x4164c0
  4164c0:	inc    esi
  4164c2:	nop
  4164c3:	jg     0x4164c4
  4164c5:	sub    ebp,DWORD PTR [esi]
  4164c7:	add    DWORD PTR [eax],0x76
  4164ca:	add    cl,ch
  4164cc:	inc    DWORD PTR [eax]
  4164ce:	outs   dx,DWORD PTR ds:[esi]
  4164cf:	add    bh,bh
  4164d1:	adc    eax,0xeb00eb3a
  4164d6:	push   0xffffff83
  4164d8:	inc    DWORD PTR [ebx+0xffceff]
  4164de:	test   ah,0x0
  4164e1:	into   
  4164e2:	jne    0x41652c
  4164e4:	dec    edx
  4164e6:	out    dx,eax
  4164e7:	inc    DWORD PTR [ebx-0x33a7ffe1]
  4164ed:	(bad)  
  4164ee:	out    dx,eax
  4164ef:	inc    DWORD PTR [eax]
  4164f1:	mov    eax,ds:0x4900382d
  4164f6:	sub    bh,bh
  4164f8:	add    BYTE PTR [esi],dl
  4164fa:	jmp    FWORD PTR [ecx+0x3389ff]
  416500:	add    dl,cl
  416502:	pop    esp
  416503:	inc    ebp
  416504:	call   DWORD PTR [ebp-0x78]
  416507:	(bad)  
  416508:	dec    DWORD PTR [edi+0x0]
  41650b:	popf   
  41650c:	add    bh,bh
  41650e:	mov    dl,0xff
  416510:	mov    DWORD PTR [edx],ebx
  416512:	mov    ah,BYTE PTR [ebx+0x0]
  416515:	cmc    
  416516:	xchg   BYTE PTR [ebx-0x33008401],al
  41651c:	int3   
  41651d:	add    BYTE PTR [ebx-0x565b0034],dh
  416523:	xchg   bh,bh
  416525:	sub    eax,0x8cffccb4
  41652a:	add    BYTE PTR [edi+edi*8],bl
  41652d:	call   FWORD PTR [ebx]
  41652f:	mov    edi,edi
  416531:	dec    ebp
  416532:	gs (bad) 
  416534:	call   DWORD PTR [ebp+0x7d]
  416537:	mov    edi,edi
  416539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41653a:	(bad)  
  41653b:	mov    edi,0xff20ff00
  416540:	add    al,bl
  416542:	arpl   WORD PTR [esi],dx
  416544:	jmp    FWORD PTR [eax-0x7700ff11]
  41654a:	and    DWORD PTR [ebx-0x33040077],0xffffff83
  416551:	xchg   edi,eax
  416552:	sbb    ebx,edx
  416554:	call   FWORD PTR [edx+0x74ff892c]
  41655a:	int3   
  41655b:	or     edi,edi
  41655d:	call   FWORD PTR [edi+edi*8+0x2ee89aff]
  416564:	jmp    DWORD PTR [edx+0x24]
  416567:	add    bh,bh
  416569:	adc    bh,bh
  41656b:	mov    dh,0xff
  41656d:	push   DWORD PTR [edi+0x57e5ffff]
  416573:	dec    edi
  416574:	push   DWORD PTR [eax+0x6effffda]
  41657a:	add    BYTE PTR [ebx-0x7d],ch
  41657d:	mov    DWORD PTR [esi-0x4894ff01],edi
  416583:	mov    edi,0xd3dcff
  416588:	jmp    FWORD PTR [edx-0x33b17d]
  41658e:	xor    ah,cl
  416590:	int3   
  416591:	or     BYTE PTR [eax+eax*2-0xa5667d],0x0
  416599:	push   edx
  41659a:	push   DWORD PTR [ebp-0xad007d]
  4165a0:	dec    DWORD PTR [edx]
  4165a2:	idiv   DWORD PTR [ecx+0x34d0cc]
  4165a8:	xor    DWORD PTR [eax-0x767c3e00],0xffffffe7
  4165af:	inc    DWORD PTR [eax]
  4165b1:	mov    BYTE PTR [esi-0x56a50081],dl
  4165b7:	mov    DWORD PTR [ebx-0x7c1eff65],eax
  4165bd:	int3   
  4165be:	pop    edx
  4165bf:	add    BYTE PTR [eax],al
  4165c1:	add    DWORD PTR [edi],edi
  4165c3:	out    0x0,eax
  4165c5:	pushf  
  4165c6:	clc    
  4165c7:	add    bh,bh
  4165c9:	inc    eax
  4165ca:	add    ch,cl
  4165cc:	int3   
  4165cd:	xor    DWORD PTR [edx-0x34420100],0xffffffb3
  4165d4:	push   DWORD PTR [ebx]
  4165d6:	pop    eax
  4165d7:	add    BYTE PTR [eax],al
  4165d9:	sbb    eax,DWORD PTR [eax]
  4165db:	jno    0x4165dc
  4165dd:	call   FWORD PTR [edx]
  4165df:	(bad)  
  4165e0:	jmp    FWORD PTR [esi]
  4165e2:	icebp  
  4165e3:	mov    edx,0xff0b5e83
  4165e8:	push   DWORD PTR ds:0x83ffb6ff
  4165ee:	push   cs
  4165ef:	inc    DWORD PTR [eax]
  4165f1:	jl     0x4165f4
  4165f3:	rol    BYTE PTR [eax],cl
  4165f5:	or     al,0xf5
  4165f7:	add    BYTE PTR [eax],al
  4165f9:	inc    ebx
  4165fa:	sbb    DWORD PTR [esi],0x0
  4165fd:	xor    ecx,0xffffffff
  416600:	add    bl,dh
  416602:	cld    
  416603:	xchg   bh,bh
  416605:	mov    ecx,0xcdffffa7
  41660a:	(bad)  
  41660b:	std    
  41660c:	int3   
  41660d:	(bad)  
  41660e:	js     0x41660f
  416610:	int3   
  416611:	add    cl,cl
  416613:	ud0    ebx,DWORD PTR [ecx+ebx*4-0x7c830100]
  41661b:	imul   edi,edi,0xff3700
  416621:	pop    eax
  416622:	mov    edx,0x910d8916
  416627:	int3   
  416628:	or     eax,0xffffff83
  41662b:	dec    esp
  41662c:	add    DWORD PTR [eax],0x34
  41662f:	inc    DWORD PTR [eax]
  416631:	pop    es
  416632:	sbb    DWORD PTR [esi+0x0],esi
  416635:	mov    ebx,0x1dffffe5
  41663a:	add    ah,ah
  41663c:	cmp    edi,0x3c
  41663f:	add    bh,bh
  416641:	lahf   
  416642:	sub    al,0x91
  416644:	(bad)  
  416645:	jmp    0x98ff:0x8fccff63
  41664c:	(bad)  
  41664d:	jmp    FWORD PTR [eax-0x12237677]
  416653:	bound  ecx,QWORD PTR [ecx+0xff4e57]
  416659:	fmul   st,st(4)
  41665b:	mov    bh,bh
  41665d:	add    al,dl
  41665f:	cmp    edi,0x3e
  416662:	push   0x8038001c
  416667:	add    DWORD PTR [eax],0x6b
  41666a:	add    BYTE PTR [ebx-0x1],dl
  41666d:	add    dh,dl
  41666f:	add    DWORD PTR [ebx-0xfad367],0xffffffe7
  416676:	aad    0x0
  416678:	mov    DWORD PTR [edi+edi*8],edi
  41667b:	loopne 0x41667c
  41667d:	call   FWORD PTR [ebx-0x72760001]
  416683:	in     eax,dx
  416684:	add    ah,ah
  416686:	push   cs
  416687:	(bad)  
  416688:	call   esi
  41668a:	add    BYTE PTR [ecx-0x1],bl
  41668d:	cmp    DWORD PTR [ebx+eax*4],0x0
  416691:	mov    WORD PTR es:[ebx-0x33059501],ds
  416698:	mov    DWORD PTR [edi-0xdc77],edi
  41669e:	ins    DWORD PTR es:[edi],dx
  41669f:	add    DWORD PTR [eax],0x68
  4166a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166a3:	cmp    al,0x0
  4166a5:	mov    bh,0xc9
  4166a7:	add    BYTE PTR [eax],al
  4166a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166aa:	int3   
  4166ab:	mov    ds:0x4900ff,eax
  4166b0:	call   DWORD PTR [esi+0x4b]
  4166b3:	scas   al,BYTE PTR es:[edi]
  4166b4:	dec    ebx
  4166b6:	test   BYTE PTR [eax],al
  4166b8:	push   DWORD PTR [esi+0x0]
  4166bb:	lods   eax,DWORD PTR ds:[esi]
  4166bc:	int3   
  4166bd:	add    BYTE PTR [ecx+0x666acc00],bh
  4166c3:	jnp    0x4166c4
  4166c5:	aas    
  4166c6:	popf   
  4166c7:	mov    DWORD PTR [ebx-0x330d7611],eax
  4166cd:	int3   
  4166ce:	cli    
  4166cf:	add    DWORD PTR [ebx-0x7c9d7edb],0x1b
  4166d6:	pop    ecx
  4166d7:	int3   
  4166d8:	push   eax
  4166da:	call   FWORD PTR [edi+edi*8]
  4166dd:	(bad)  
  4166de:	jge    0x4166e0
  4166e0:	add    ah,bl
  4166e2:	lods   al,BYTE PTR ds:[esi]
  4166e3:	push   es
  4166e4:	add    BYTE PTR [edi+0x7f],dh
  4166e7:	add    DWORD PTR [eax],0xffffffab
  4166ea:	and    DWORD PTR [ecx-0x1],0x0
  4166ee:	mov    ?,edi
  4166f0:	push   ebx
  4166f2:	jne    0x4166df
  4166f4:	mov    DWORD PTR [edi+0x16],ebx
  4166f7:	add    BYTE PTR [ecx-0x50023],cl
  4166fd:	call   FWORD PTR [ebx]
  4166ff:	add    bh,bh
  416701:	dec    edx
  416702:	cmp    esp,edx
  416704:	dec    DWORD PTR ds:0x7500ff53
  41670a:	call   FWORD PTR [ecx-0xfa0077]
  416710:	int3   
  416711:	xor    edx,DWORD PTR [ecx]
  416713:	jmp    0x9900:0xff1e6200
  41671a:	mov    DWORD PTR [edi-0x7d],ecx
  41671d:	jmp    DWORD PTR [edx]
  41671f:	(bad)  
  416720:	jmp    DWORD PTR [edx]
  416722:	jg     0x416715
  416724:	add    BYTE PTR [edx-0x4800ff2c],bl
  41672a:	call   FWORD PTR [esi]
  41672c:	int3   
  41672d:	push   edx
  41672f:	mov    edi,edi
  416731:	stos   BYTE PTR es:[edi],al
  416732:	loopne 0x416711
  416734:	int3   
  416735:	cmp    BYTE PTR [ecx+0x0],ah
  416738:	push   DWORD PTR [edi-0x2b01]
  41673e:	gs (bad) 
  416740:	call   ecx
  416742:	mov    eax,ds:0x9e0189d5
  416747:	(bad)  
  416748:	dec    DWORD PTR [edi]
  41674a:	int3   
  41674b:	ret    
  41674c:	inc    DWORD PTR [eax]
  41674e:	mov    bl,0xff
  416750:	sbb    ecx,0x18
  416753:	xchg   ecx,eax
  416754:	jmp    esi
  416756:	jecxz  0x416757
  416758:	jmp    DWORD PTR [eax]
  41675a:	(bad)  
  41675b:	mov    eax,0xffecffff
  416760:	add    BYTE PTR [ecx+0x3c],dl
  416763:	push   ss
  416764:	int3   
  416765:	inc    ebp
  416766:	sahf   
  416767:	dec    esp
  416769:	jecxz  0x41676b
  41676b:	js     0x4166f6
  41676d:	call   DWORD PTR [edi]
  41676f:	inc    DWORD PTR [eax]
  416771:	push   cs
  416772:	add    al,0xfe
  416774:	add    bl,ah
  416776:	jae    0x416744
  416778:	inc    DWORD PTR [esi]
  41677a:	add    ah,bh
  41677c:	mov    edi,edi
  41677e:	add    edi,edi
  416780:	int3   
  416781:	fldenv [edi]
  416783:	and    eax,0xb26ff
  416788:	add    BYTE PTR [ecx+0x836f00],bl
  41678e:	scas   al,BYTE PTR es:[edi]
  41678f:	add    DWORD PTR [eax],0xfffffff7
  416792:	sbb    eax,0x6c4effc3
  416797:	inc    DWORD PTR [ebx-0xf0008d]
  41679d:	dec    DWORD PTR [eax-0x6d520001]
  4167a3:	mov    bh,bh
  4167a5:	scas   al,BYTE PTR es:[edi]
  4167a6:	rol    BYTE PTR [eax],cl
  4167a8:	add    BYTE PTR [edx],al
  4167aa:	jmp    FWORD PTR [ecx+ecx*4-0xff0b7d]
  4167b1:	int    0x47
  4167b3:	sub    edi,edi
  4167b5:	add    DWORD PTR [ebp+0xb8300],eax
  4167bb:	inc    ecx
  4167bc:	inc    DWORD PTR [eax]
  4167be:	sbb    edi,edi
  4167c0:	add    BYTE PTR [edi-0x39],bl
  4167c3:	ja     0x4167c4
  4167c5:	fisttp DWORD PTR [ebx]
  4167c7:	inc    DWORD PTR [eax]
  4167c9:	inc    eax
  4167ca:	jmp    FWORD PTR [edx-0x1]
  4167cd:	adc    DWORD PTR ds:0x7441ff00,0x78
  4167d4:	(bad)  
  4167d5:	(bad)  
  4167d6:	jo     0x4167d7
  4167d8:	push   DWORD PTR [ebx+0x0]
  4167db:	fadd   QWORD PTR [ebx-0x1e01]
  4167e1:	addr16 and bl,dh
  4167e4:	(bad)  
  4167e5:	in     al,dx
  4167e6:	test   ah,cl
  4167e8:	add    ch,dl
  4167ea:	(bad)  
  4167eb:	cli    
  4167ec:	(bad)  
  4167ed:	push   DWORD PTR [esi]
  4167ef:	or     DWORD PTR [ecx-0x50078f],0xffffffe1
  4167f6:	jb     0x4167f8
  4167f8:	(bad)  
  4167f9:	jp     0x4167fb
  4167fb:	xchg   edi,eax
  4167fc:	dec    esp
  4167fe:	sahf   
  4167ff:	mov    esp,ecx
  416801:	aas    
  416802:	ds imul edi,edi,0xff8330cd
  416809:	pop    ss
  41680a:	add    ah,bl
  41680c:	dec    DWORD PTR [ecx-0x776fffe]
  416812:	jp     0x4167a2
  416814:	add    BYTE PTR ds:0x6d8989fe,dl
  41681a:	add    BYTE PTR [esi-0x1],dh
  41681d:	inc    DWORD PTR [eax]
  41681f:	add    bh,bh
  416821:	addr16 std 
  416823:	sbb    eax,0x89c9da83
  416828:	jmp    FWORD PTR [ebx-0x1]
  41682b:	jle    0x41682c
  41682d:	(bad)  
  41682e:	mov    edx,0xe4ecff89
  416833:	or     eax,0xff0119ff
  416838:	add    BYTE PTR [eax],dh
  41683a:	add    BYTE PTR [ecx],bh
  41683c:	(bad)  
  41683d:	jmp    FWORD PTR [edi-0x34]
  416840:	call   DWORD PTR [edx+ebp*1+0x418dffdb]
  416847:	add    bh,bh
  416849:	push   ss
  41684a:	call   DWORD PTR [eax]
  41684c:	add    BYTE PTR [eax],al
  41684e:	into   
  41684f:	int3   
  416850:	add    DWORD PTR ds:0xc1831432,0x7e
  416857:	dec    DWORD PTR [ecx-0x76b4ff09]
  41685d:	call   ebx
  41685f:	add    DWORD PTR [eax],0xfffffff7
  416862:	mov    esp,0x8a9e00b8
  416867:	int3   
  416868:	call   esp
  41686a:	int3   
  41686b:	rol    BYTE PTR [eax],1
  41686d:	inc    DWORD PTR [ebx+0x565d89ff]
  416873:	push   eax
  416874:	adc    ebx,0x54
  416877:	int3   
  416878:	add    BYTE PTR [edi+0x0],dh
  41687b:	inc    ecx
  41687c:	dec    esp
  41687e:	mov    edi,?
  416880:	add    BYTE PTR [edx],bh
  416882:	inc    ebp
  416883:	mov    ah,0x0
  416885:	sub    DWORD PTR [edi-0x77],edx
  416888:	add    BYTE PTR [ecx-0x7c000801],bh
  41688e:	dec    eax
  41688f:	add    ah,cl
  416891:	mov    ds:0x7c00b818,eax
  416896:	jmp    0x41681b
  416898:	int3   
  416899:	sar    bh,0xdc
  41689c:	inc    DWORD PTR [eax]
  41689e:	inc    edi
  41689f:	add    bh,bh
  4168a1:	mov    ds:0x4aff337a,eax
  4168a6:	call   0x7e68ab
  4168ab:	mov    eax,ds:0x61ff00
  4168b0:	push   DWORD PTR [eax-0x46]
  4168b3:	and    eax,0xff9634ff
  4168b8:	jmp    FWORD PTR [esi-0x7cff0100]
  4168be:	ud0    edi,edi
  4168c1:	mov    edi,DWORD PTR [ecx-0x6fa17c46]
  4168c7:	cmp    edi,0x58
  4168ca:	call   ebp
  4168cc:	add    DWORD PTR [ebx+0x2c0083ba],0xffffffd3
  4168d3:	xor    DWORD PTR cs:[ecx-0x28],0x0
  4168d8:	jmp    FWORD PTR [edi+edi*8+0x72]
  4168dc:	add    DWORD PTR [eax],0xffffffa0
  4168df:	(bad)  
  4168e0:	jmp    FWORD PTR [ebx]
  4168e2:	shl    ch,cl
  4168e4:	(bad)  
  4168e5:	mov    ecx,0x99838373
  4168ea:	(bad)  
  4168eb:	call   0xcc5c69ef
  4168f0:	add    BYTE PTR [eax+eax*1+0x30],dh
  4168f4:	add    BYTE PTR [ecx+esi*2-0x6d767d],al
  4168fb:	jb     0x416886
  4168fd:	(bad)  
  4168fe:	in     eax,dx
  4168ff:	int3   
  416900:	inc    esp
  416902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416903:	push   edi
  416904:	inc    esi
  416906:	inc    DWORD PTR [ebx-0x1d00c301]
  41690c:	mov    edi,edi
  41690e:	add    edi,edi
  416910:	xor    DWORD PTR [ebx],0xfffffffb
  416913:	in     eax,0xff
  416915:	xor    eax,0x1ffffec
  41691a:	add    dh,al
  41691c:	(bad)  
  41691d:	jmp    DWORD PTR [esi]
  41691f:	int3   
  416920:	int3   
  416921:	sbb    DWORD PTR [esi+0x5c],ebp
  416924:	add    BYTE PTR [eax+0x4a],cl
  416927:	(bad)  
  416928:	dec    DWORD PTR [eax+eax*1]
  41692b:	stc    
  41692c:	add    bh,bh
  41692e:	aad    0x89
  416930:	adc    ebp,0x21
  416933:	cmp    al,0x0
  416935:	sbb    ah,BYTE PTR [ebx+0x7eff00]
  41693b:	mov    ebp,0x58ff00
  416940:	call   edx
  416942:	addr16 pop es
  416944:	add    ah,cl
  416946:	call   0xffe2:0xffd4ffff
  41694d:	add    BYTE PTR [ecx+ecx*4+0x551befff],ch
  416954:	push   DWORD PTR [esi]
  416956:	out    dx,al
  416957:	int3   
  416958:	dec    DWORD PTR [edi+edi*8]
  41695b:	and    bh,bh
  41695d:	cmp    eax,0xffffffcc
  416960:	add    BYTE PTR [edi-0x6c],dh
  416963:	add    al,BYTE PTR [ebx+0xf2c1]
  416969:	sub    BYTE PTR [eax],al
  41696b:	gs (bad) 
  41696d:	jmp    FWORD PTR [ebx]
  41696f:	dec    DWORD PTR [ecx-0xb9fe4a]
  416975:	pmaxsw mm0,QWORD PTR [eax]
  416978:	int3   
  416979:	jns    0x41697a
  41697b:	test   al,0x0
  41697d:	add    BYTE PTR [edx+0xbf5ccff],dl
  416983:	push   ebp
  416984:	inc    DWORD PTR [ebp+ecx*1-0x34]
  416988:	jmp    esi
  41698a:	mov    DWORD PTR [edi+edi*8+0x0],ecx
  41698e:	js     0x416990
  416990:	add    BYTE PTR [edx+0x7d],ch
  416993:	inc    BYTE PTR [eax]
  416995:	int    0x39
  416997:	(bad)  
  416998:	jmp    FWORD PTR [eax-0x7c0300]
  41699e:	push   edx
  41699f:	(bad)  
  4169a0:	call   FWORD PTR [eax]
  4169a2:	mov    dh,0x71
  4169a4:	inc    DWORD PTR [ebp+edi*2-0x597c01]
  4169ab:	inc    ecx
  4169ac:	(bad)  
  4169ad:	inc    DWORD PTR [ebp-0x6a1c0001]
  4169b3:	pop    edx
  4169b4:	add    BYTE PTR [edi+0x6800cce2],dh
  4169ba:	call   FWORD PTR [edx-0x1]
  4169bd:	add    bh,bl
  4169bf:	int3   
  4169c0:	(bad)  
  4169c1:	jmp    0x4169b0
  4169c3:	mov    bl,0xff
  4169c5:	jge    0x4169e3
  4169c7:	cmp    edi,0xffffff84
  4169ca:	call   FWORD PTR [ebx]
  4169cc:	dec    DWORD PTR [ecx-0x4ffffcd]
  4169d2:	or     eax,0x1a4cff0f
  4169d7:	add    BYTE PTR [ebx-0x2900f5],al
  4169dd:	add    BYTE PTR [ebx-0x8a27d00],dl
  4169e3:	mov    al,0x0
  4169e5:	fimul  DWORD PTR ds:0xff43ff83
  4169eb:	jmp    0xcc6e69ef
  4169f0:	call   FWORD PTR [ebx+0x35]
  4169f3:	ret    
  4169f4:	int3   
  4169f5:	shl    DWORD PTR [edx],cl
  4169f7:	add    DWORD PTR [eax],0x31
  4169fa:	add    BYTE PTR [eax],ch
  4169fc:	or     DWORD PTR [ecx+0x5effff40],0x68
  416a03:	out    0x89,eax
  416a05:	or     BYTE PTR es:[ecx-0x23ff1c7d],0xff
  416a0d:	int3   
  416a0e:	pop    esi
  416a0f:	mov    DWORD PTR [eax],eax
  416a11:	xor    BYTE PTR [ebx],0xac
  416a14:	cmp    DWORD PTR [eax],0xffffffc4
  416a17:	(bad)  
  416a18:	push   DWORD PTR [eax+eax*1-0xd760087]
  416a1f:	inc    DWORD PTR [eax]
  416a21:	sub    DWORD PTR [ebp+0x1f],ebp
  416a24:	mov    DWORD PTR [ecx-0x310000fe],ebp
  416a2a:	add    BYTE PTR [eax],dl
  416a2c:	(bad)  
  416a2d:	call   DWORD PTR [esi]
  416a2f:	add    ah,cl
  416a31:	xchg   ecx,eax
  416a32:	add    ebx,esi
  416a34:	int3   
  416a35:	cmp    dh,bh
  416a37:	int3   
  416a38:	add    BYTE PTR [ecx-0x1],dl
  416a3b:	test   BYTE PTR [eax],0xcc
  416a3e:	or     bh,bh
  416a40:	mov    DWORD PTR [ebx+0x690024ac],esp
  416a46:	stc    
  416a47:	cmp    edi,0x51
  416a4a:	(bad)  
  416a4b:	mov    esi,0xcc800000
  416a50:	or     ebx,0x4c
  416a53:	mov    ch,0xff
  416a55:	inc    esp
  416a56:	adc    al,BYTE PTR [ebx-0x55ff5c77]
  416a5c:	mov    DWORD PTR [ebx-0x187600b0],eax
  416a62:	inc    esi
  416a63:	lods   eax,DWORD PTR ds:[esi]
  416a64:	int3   
  416a65:	sbb    BYTE PTR [ebp-0x7d],cl
  416a68:	inc    DWORD PTR [eax]
  416a6a:	add    BYTE PTR [ecx-0x34],bh
  416a6d:	int3   
  416a6e:	xchg   edi,edi
  416a70:	jmp    esp
  416a72:	dec    esp
  416a73:	repz (bad) 
  416a75:	fld    st(1)
  416a77:	add    BYTE PTR [ebx-0x7aff14],al
  416a7d:	int3   
  416a7e:	popf   
  416a7f:	dec    esp
  416a81:	adc    edi,DWORD PTR [ebx+0xbdf0096]
  416a87:	mov    DWORD PTR [ebx-0xe6ff3d],eax
  416a8d:	(bad)  
  416a8e:	mov    ebx,0x2e460000
  416a93:	dec    eax
  416a94:	jmp    FWORD PTR [edx-0x80]
  416a97:	mov    edi,edi
  416a99:	add    eax,0xff12ff
  416a9e:	ins    BYTE PTR es:[edi],dx
  416a9f:	inc    DWORD PTR [eax]
  416aa1:	adc    al,0xf4
  416aa3:	dec    esi
  416aa4:	int3   
  416aa5:	inc    ebp
  416aa6:	mov    eax,ds:0xffe0ff83
  416aab:	push   ds
  416aac:	cmp    edi,0x3c
  416aaf:	(bad)  
  416ab0:	jmp    FWORD PTR [ecx+0x24]
  416ab3:	mov    ebx,0x83876f83
  416ab8:	add    dh,cl
  416aba:	(bad)  
  416abb:	in     eax,dx
  416abc:	(bad)  
  416abd:	inc    DWORD PTR [eax]
  416abf:	inc    DWORD PTR [eax]
  416ac1:	and    ebx,DWORD PTR [ebp+0x58dd00ed]
  416ac7:	inc    DWORD PTR [eax]
  416ac9:	jne    0x416aca
  416acb:	pop    ecx
  416acc:	add    ah,cl
  416ace:	jbe    0x416a53
  416ad0:	add    BYTE PTR [edx-0x27],ah
  416ad3:	sub    eax,0xb82aff
  416ad8:	add    ah,bl
  416ada:	add    BYTE PTR [eax],bh
  416adc:	inc    DWORD PTR [eax]
  416ade:	cld    
  416adf:	(bad)  
  416ae0:	(bad)  
  416ae1:	mov    edx,0x7000ed08
  416ae6:	mov    edi,edi
  416ae8:	push   esp
  416aea:	sub    DWORD PTR [edx+0x0],0xffffff83
  416aee:	xlat   BYTE PTR ds:[ebx]
  416aef:	inc    DWORD PTR [eax]
  416af1:	daa    
  416af2:	lods   al,BYTE PTR ds:[esi]
  416af3:	sbb    edi,edi
  416af5:	dec    edx
  416af6:	cwde   
  416af7:	inc    DWORD PTR [eax]
  416af9:	out    0xff,al
  416afb:	xor    eax,0x68ffff
  416b00:	add    BYTE PTR [ebx+0x63ffd5e6],bh
  416b06:	les    eax,FWORD PTR [eax]
  416b08:	inc    DWORD PTR [edx+0x9eff]
  416b0e:	jg     0x416b0f
  416b10:	dec    DWORD PTR [edi+edx*2-0x73]
  416b14:	add    BYTE PTR [eax-0x3a],dh
  416b17:	int3   
  416b18:	add    BYTE PTR [edx-0x7d],ah
  416b1b:	rol    BYTE PTR [ebx-0x7600b701],0x7f
  416b22:	inc    edi
  416b23:	sbb    al,0xff
  416b25:	xor    eax,0x2bffff35
  416b2a:	call   DWORD PTR [ebx+eax*4]
  416b2d:	(bad)  
  416b2e:	mov    edx,0xdc3fffff
  416b33:	pop    eax
  416b34:	cmp    esi,0x58
  416b37:	add    BYTE PTR [eax],al
  416b39:	dec    ecx
  416b3a:	add    BYTE PTR [edi+edi*8],cl
  416b3d:	call   FWORD PTR [ebx+eax*4]
  416b40:	add    BYTE PTR [edi+eiz*4],dl
  416b43:	adc    bh,bh
  416b45:	xchg   esp,eax
  416b46:	pop    ebx
  416b47:	add    bh,bh
  416b49:	mov    eax,ds:0xff83f3ff
  416b4e:	loopne 0x416ad3
  416b50:	(bad)  
  416b51:	jp     0x416b65
  416b53:	cwde   
  416b54:	add    cl,al
  416b56:	mov    edi,?
  416b58:	or     DWORD PTR [ebp-0x7c1f77],0xffffffdc
  416b5f:	inc    DWORD PTR [ebx-0x248691]
  416b65:	or     ecx,DWORD PTR [ecx]
  416b67:	add    ah,cl
  416b69:	int    0xff
  416b6b:	out    dx,al
  416b6c:	add    BYTE PTR [eax],al
  416b6e:	repz mov edi,edi
  416b71:	add    al,0x5
  416b73:	and    DWORD PTR [eax],eax
  416b75:	iret   
  416b76:	sbb    al,0x83
  416b78:	jmp    DWORD PTR [esi+0xff36cc]
  416b7e:	or     eax,0x5586ffcc
  416b83:	push   cs
  416b84:	mov    DWORD PTR [edx],ecx
  416b86:	xor    cl,BYTE PTR [ecx+0x130038cc]
  416b8c:	inc    DWORD PTR [ebx+0x228983c4]
  416b92:	loopne 0x416bd1
  416b94:	mov    DWORD PTR [edi],ebx
  416b96:	int3   
  416b97:	add    BYTE PTR [ecx+0x8000ca],cl
  416b9d:	(bad)  
  416b9e:	ds add ah,cl
  416ba1:	xor    esp,DWORD PTR [edx-0x34e37c3b]
  416ba7:	add    bh,bh
  416ba9:	jmp    0xff6e:0xffff75ff
  416bb0:	int3   
  416bb1:	(bad)  
  416bb2:	daa    
  416bb3:	arpl   di,di
  416bb5:	lods   al,BYTE PTR ds:[esi]
  416bb6:	loopne 0x416bb7
  416bb8:	inc    DWORD PTR [ebp-0x1]
  416bbb:	pop    edi
  416bbc:	inc    DWORD PTR [eax]
  416bbe:	call   0xff0d:0xa38c89ff
  416bc5:	xchg   edx,eax
  416bc6:	sbb    al,BYTE PTR [ebx+0x16ff5800]
  416bcc:	or     esp,0x6d
  416bcf:	(bad)  
  416bd0:	inc    DWORD PTR [edx+0x1e]
  416bd3:	jb     0x416bd4
  416bd5:	repz retf 
  416bd7:	(bad)  
  416bd8:	jmp    DWORD PTR [ebx]
  416bda:	add    BYTE PTR [esi+0x0],bl
  416bdd:	cmp    DWORD PTR [ebp+0x6c89ffff],0x2
  416be4:	jmp    DWORD PTR [eax+0x3b00ff39]
  416bea:	inc    edx
  416bec:	add    bh,bh
  416bee:	mov    al,0x83
  416bf0:	int3   
  416bf1:	xor    al,BYTE PTR ds:0x27600df
  416bf7:	int3   
  416bf8:	add    ah,ah
  416bfa:	mov    DWORD PTR [edi+0x8a0000],ecx
  416c00:	add    BYTE PTR [edi],ah
  416c02:	inc    ebx
  416c03:	in     eax,0x89
  416c05:	pop    esp
  416c06:	adc    edi,edi
  416c08:	dec    ebx
  416c0a:	add    cl,bh
  416c0c:	int3   
  416c0d:	add    BYTE PTR ds:0xf8bf00ff,dl
  416c13:	jno    0x416c15
  416c15:	mov    dh,0x52
  416c17:	add    bh,bh
  416c19:	test   eax,0x83ff1a89
  416c1e:	mov    edi,0x6dcdffff
  416c23:	mov    eax,ds:0xff1e9700
  416c28:	add    bl,dl
  416c2a:	add    dl,bh
  416c2c:	add    BYTE PTR [eax],al
  416c2e:	nop
  416c2f:	add    BYTE PTR [ecx+0x576db],cl
  416c35:	lea    ecx,[edi+0xcd8300]
  416c3b:	cld    
  416c3c:	add    DWORD PTR [eax],0xffffffed
  416c3f:	inc    DWORD PTR [eax]
  416c41:	ss mov bl,0xa8
  416c44:	add    BYTE PTR [esi-0x6f],dl
  416c47:	inc    DWORD PTR [eax]
  416c49:	mov    al,ds:0xffffc2ff
  416c4e:	push   0xffffffff
  416c50:	add    DWORD PTR ds:0xa0ff4c83,0xfffffffb
  416c57:	dec    DWORD PTR [ecx-0x94ff6b]
  416c5d:	add    BYTE PTR [edi+edi*8-0x34],al
  416c61:	(bad)  
  416c62:	fucom  st(7)
  416c64:	call   esi
  416c66:	xor    al,0x0
  416c68:	add    BYTE PTR [eax-0x7cf900],dl
  416c6e:	cmp    DWORD PTR [eax],eax
  416c70:	add    BYTE PTR [ebx-0x8],al
  416c73:	ins    BYTE PTR es:[edi],dx
  416c74:	int3   
  416c75:	call   0x340def9f
  416c7a:	xor    DWORD PTR [esi+0xd60000],0xffffff83
  416c81:	mov    edi,0x90ffa90e
  416c86:	mov    BYTE PTR [ebx-0x7000de7d],al
  416c8c:	(bad)  
  416c8d:	(bad)  
  416c8e:	out    dx,eax
  416c8f:	(bad)  
  416c90:	(bad)  
  416c91:	jmp    DWORD PTR [ebx-0x36]
  416c94:	call   ebx
  416c96:	aam    0xcc
  416c98:	add    BYTE PTR [ecx],bh
  416c9a:	call   FWORD PTR [ebp-0xe50001]
  416ca0:	add    BYTE PTR [esi+ebx*1-0x701cff87],ah
  416ca7:	inc    DWORD PTR [eax]
  416ca9:	mov    ?,edi
  416cab:	outs   dx,BYTE PTR ds:[esi]
  416cac:	add    DWORD PTR [eax],0x10
  416caf:	cmp    edi,0x0
  416cb2:	sbb    bl,BYTE PTR [ebx-0x1]
  416cb5:	gs cmp edi,edi
  416cb8:	call   DWORD PTR [ecx-0x1]
  416cbb:	xchg   edx,eax
  416cbc:	dec    esp
  416cbe:	ret    0xff00
  416cc1:	push   ds
  416cc2:	dec    edi
  416cc3:	(bad)  
  416cc4:	dec    DWORD PTR [edx+0x8]
  416cc7:	add    bh,bh
  416cc9:	push   WORD PTR [eax+eax*1]
  416ccd:	add    al,al
  416ccf:	inc    DWORD PTR [eax]
  416cd1:	pusha  
  416cd2:	cmp    eax,0xf66accb6
  416cd7:	(bad)  
  416cd8:	(bad)  
  416cd9:	cmp    esp,ecx
  416cdb:	inc    esi
  416cdc:	dec    esp
  416cde:	hlt    
  416cdf:	inc    DWORD PTR [eax]
  416ce1:	clc    
  416ce2:	lods   eax,DWORD PTR ds:[esi]
  416ce3:	xchg   ebp,eax
  416ce4:	(bad)  
  416ce5:	cmp    eax,0x8e83ffa5
  416cea:	jmp    FWORD PTR ds:0xff26ff89
  416cf0:	jmp    DWORD PTR [ecx+0x32]
  416cf3:	jo     0x416c78
  416cf5:	dec    ebx
  416cf6:	sub    eax,DWORD PTR [eax]
  416cf8:	add    BYTE PTR [edi+0xff74ff],dh
  416cfe:	lahf   
  416cff:	inc    DWORD PTR [ebx-0x728b17]
  416d05:	icebp  
  416d06:	sub    edi,edi
  416d08:	call   DWORD PTR [eax+eax*1-0x5800008c]
  416d0f:	int3   
  416d10:	call   DWORD PTR [edx]
  416d12:	sub    BYTE PTR [ecx],ch
  416d14:	jmp    edx
  416d16:	pop    eax
  416d17:	(bad)  
  416d18:	call   FWORD PTR [edi+edi*8]
  416d1b:	in     al,0x0
  416d1d:	push   eax
  416d1f:	inc    DWORD PTR [eax]
  416d21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d22:	pushf  
  416d23:	cmp    al,BYTE PTR [ebx-0x3300bd6e]
  416d29:	dec    eax
  416d2a:	sbb    ecx,0xffffffff
  416d2d:	add    BYTE PTR [edx-0x1],ah
  416d30:	int3   
  416d31:	mov    bl,0xc0
  416d33:	push   0xffa70eff
  416d38:	add    BYTE PTR [eax+0xbb83],bl
  416d3e:	hlt    
  416d3f:	(bad)  
  416d40:	call   eax
  416d42:	sbb    al,BYTE PTR [eax-0x1]
  416d45:	sbb    BYTE PTR [eax],bl
  416d47:	(bad)  
  416d48:	(bad)  
  416d49:	in     al,dx
  416d4a:	sub    DWORD PTR [ebx+eax*4-0x1],0xfffffffe
  416d4f:	add    BYTE PTR [eax],al
  416d51:	mov    al,ds:0x2a0076f3
  416d56:	and    al,0x89
  416d58:	call   DWORD PTR [ebp-0x1]
  416d5b:	rol    DWORD PTR [eax],cl
  416d5d:	call   DWORD PTR [esi]
  416d5f:	cmp    edi,0xffffff85
  416d62:	outs   dx,DWORD PTR ds:[esi]
  416d63:	push   ecx
  416d64:	add    BYTE PTR [eax],ch
  416d66:	jmp    0xec:0xff74ffff
  416d6d:	inc    DWORD PTR [ecx]
  416d6f:	add    DWORD PTR [ebx-0xcb3400],0xffffff8c
  416d76:	fld    DWORD PTR [ebx+0x52ff3dff]
  416d7c:	dec    esp
  416d7e:	fiadd  WORD PTR [eax]
  416d80:	or     DWORD PTR [ebp-0x34],0xffffffda
  416d84:	call   FWORD PTR [edi]
  416d86:	xor    eax,0x4500ff
  416d8b:	sar    edi,1
  416d8d:	inc    DWORD PTR [esi+0x139effcc]
  416d93:	adc    edi,edi
  416d95:	mov    cs,WORD PTR [eax]
  416d97:	(bad)  
  416d98:	jmp    DWORD PTR [esp+ecx*8-0x15]
  416d9c:	(bad)  
  416d9d:	jmp    DWORD PTR [esi-0x50e80001]
  416da3:	mov    ch,0x83
  416da5:	scas   eax,DWORD PTR es:[edi]
  416da6:	retf   
  416da7:	inc    DWORD PTR [ebx-0x76ecffe8]
  416dad:	mov    ebp,esi
  416daf:	(bad)  
  416db0:	jmp    DWORD PTR [edx+eax*2-0x5c]
  416db4:	xor    DWORD PTR [ebx-0x107cff87],0xffffffff
  416dbb:	imul   edi,edi,0xffffffff
  416dbe:	icebp  
  416dbf:	add    DWORD PTR [eax],0xffffff93
  416dc2:	enter  0x67,0xa4
  416dc6:	ds int3 
  416dc8:	inc    eax
  416dca:	jmp    DWORD PTR [eax-0x1]
  416dcd:	call   FWORD PTR [ebx-0x619a0001]
  416dd3:	push   ss
  416dd4:	inc    DWORD PTR [ebp-0x4aff00a7]
  416dda:	or     DWORD PTR [edi-0x1],0x0
  416dde:	sbb    al,BYTE PTR [eax]
  416de0:	inc    DWORD PTR [eax-0x2b00d4c6]
  416de6:	repz (bad) 
  416de8:	dec    DWORD PTR [ebx-0x1]
  416deb:	push   ecx
  416dec:	(bad)  
  416ded:	dec    ecx
  416def:	inc    DWORD PTR [ebx-0xa7a431]
  416df5:	mov    cl,0x4f
  416df7:	(bad)  
  416df8:	inc    edi
  416dfa:	push   DWORD PTR [eax]
  416dfc:	add    DWORD PTR [eax],0xffffffba
  416dff:	cmp    edi,0x10
  416e02:	nop
  416e03:	pop    ecx
  416e04:	add    BYTE PTR [eax],bh
  416e06:	and    bh,bh
  416e08:	add    BYTE PTR [edi+edi*8-0x34],dl
  416e0c:	mov    DWORD PTR [ebx-0x75ff3328],eax
  416e12:	iret   
  416e13:	fadd   DWORD PTR [eax]
  416e15:	sub    dl,BYTE PTR [ecx-0x7d]
  416e18:	mov    DWORD PTR [edi+0x0],ebx
  416e1b:	mov    BYTE PTR [ebx-0x7cd801],0x63
  416e22:	mov    edi,0xe1b900ad
  416e27:	(bad)  
  416e28:	inc    DWORD PTR [ebp+0x0]
  416e2b:	ins    BYTE PTR es:[edi],dx
  416e2c:	cmp    edi,0x14
  416e2f:	mov    DWORD PTR [eax],eax
  416e31:	loope  0x416e9c
  416e33:	leave  
  416e34:	sub    DWORD PTR [esi],0xffffffc6
  416e37:	cmp    edi,0xffffffe0
  416e3a:	add    BYTE PTR [ecx-0x7cd93301],dl
  416e40:	inc    DWORD PTR [ecx-0x250042c4]
  416e46:	mov    eax,ds:0x832900ff
  416e4b:	call   0x9dff:0xcc10ff00
  416e52:	sahf   
  416e53:	and    al,0xff
  416e55:	sbb    DWORD PTR [eax+eax*1-0x1],eax
  416e59:	jno    0x416dde
  416e5b:	mov    edi,0xffa18300
  416e60:	inc    esp
  416e62:	daa    
  416e63:	inc    ebp
  416e64:	mov    DWORD PTR [esi+0x5e],edi
  416e67:	(bad)  
  416e68:	(bad)  
  416e69:	jnp    0x416e6b
  416e6b:	dec    eax
  416e6c:	add    BYTE PTR [eax],al
  416e6e:	jb     0x416e3c
  416e70:	(bad)  
  416e71:	call   FWORD PTR [esi+0x4]
  416e74:	add    BYTE PTR [esi-0x40ff7c86],dl
  416e7a:	call   DWORD PTR [edx-0x1]
  416e7d:	add    BYTE PTR [eax+eax*1+0x0],bh
  416e81:	push   edi
  416e82:	push   ss
  416e83:	cdq    
  416e84:	sbb    DWORD PTR [ecx+0x16],0x0
  416e88:	int3   
  416e89:	xor    al,0x0
  416e8b:	mov    esi,0x8363ff00
  416e90:	add    BYTE PTR [ebp+eiz*8-0x279e0020],bl
  416e97:	dec    DWORD PTR [ecx-0xff7c44]
  416e9d:	or     DWORD PTR [edx-0x1],0xffffffff
  416ea1:	or     al,0xe
  416ea3:	push   edi
  416ea4:	mov    DWORD PTR [eax+0x3100ff4e],esp
  416eaa:	add    BYTE PTR [ecx-0x7d],bh
  416ead:	call   FWORD PTR [ecx-0x67340001]
  416eb3:	cmp    al,0xff
  416eb5:	pop    es
  416eb6:	(bad)  
  416eb7:	inc    DWORD PTR [eax]
  416eb9:	(bad)  
  416eba:	(bad)  
  416ebb:	inc    DWORD PTR [eax]
  416ebd:	add    BYTE PTR [ecx+0x76340083],cl
  416ec3:	jns    0x416ec4
  416ec5:	inc    DWORD PTR [edx-0x612b7c34]
  416ecb:	mov    dh,0x0
  416ecd:	dec    DWORD PTR [esi-0x77]
  416ed0:	inc    DWORD PTR [esi+0x77]
  416ed3:	jmp    0x4cc:0x6acc00
  416eda:	leave  
  416edb:	jnp    0x416edd
  416edd:	push   DWORD PTR [eax-0x77]
  416ee0:	add    ah,ah
  416ee2:	dec    ecx
  416ee3:	mov    esp,0xccffff
  416ee8:	mov    DWORD PTR [ebx-0x7c00270b],esp
  416eee:	fdiv   st(7),st
  416ef0:	push   esi
  416ef2:	ja     0x26ef8
  416ef8:	sbb    DWORD PTR [edi-0x7cff8ff4],0x1b
  416eff:	dec    esp
  416f01:	jle    0x416e8a
  416f03:	and    al,0xff
  416f05:	add    cl,bh
  416f07:	add    bh,bh
  416f09:	sbb    eax,0xff830aaa
  416f0e:	add    DWORD PTR [eax],eax
  416f10:	add    BYTE PTR [ecx],al
  416f12:	sbb    al,0x4
  416f14:	inc    DWORD PTR [eax]
  416f16:	popa   
  416f17:	int3   
  416f18:	int3   
  416f19:	retf   
  416f1a:	inc    esi
  416f1b:	mov    ch,0x83
  416f1d:	add    BYTE PTR [edi+edi*8+0x78a99100],dh
  416f24:	add    BYTE PTR [eax],al
  416f26:	inc    WORD PTR [eax]
  416f29:	gs push ecx
  416f2b:	ror    DWORD PTR [ecx-0x33ff1200],0xa0
  416f32:	ins    BYTE PTR es:[edi],dx
  416f33:	enter  0xffff,0xf6
  416f37:	mov    DWORD PTR [eax],eax
  416f39:	sub    bh,BYTE PTR [esi-0x35000006]
  416f3f:	cmp    edi,0x43
  416f42:	add    eax,0x13ffff1a
  416f47:	dec    esp
  416f49:	add    al,0x14
  416f4b:	sbb    eax,DWORD PTR [ebx-0x7cffc801]
  416f51:	mov    ch,0x4c
  416f53:	rol    DWORD PTR [ebx+0xffccff],1
  416f59:	mov    ah,0x72
  416f5b:	sar    bh,cl
  416f5d:	(bad)  
  416f5e:	fmulp  st(4),st
  416f60:	inc    DWORD PTR [ebx+0xffeab7]
  416f66:	inc    edx
  416f67:	cmp    edi,0xffffff9a
  416f6a:	sub    ch,BYTE PTR [edx+0xf600ff]
  416f70:	dec    DWORD PTR [ecx-0xffceaf]
  416f76:	inc    ebx
  416f77:	inc    DWORD PTR [eax]
  416f79:	pop    ds
  416f7a:	add    esp,DWORD PTR [edx-0x77]
  416f7d:	jmp    ecx
  416f7f:	mov    DWORD PTR [eax],eax
  416f81:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416f83:	fs add bh,bh
  416f86:	jae    0x416f87
  416f88:	add    bl,dh
  416f8a:	out    dx,eax
  416f8b:	pop    edi
  416f8c:	or     DWORD PTR [ecx+0x600ff59],0xffffffd5
  416f93:	ret    0x0
  416f96:	inc    eax
  416f97:	cmp    edi,0x5a
  416f9a:	mov    DWORD PTR [edx-0x7d],edx
  416f9d:	add    BYTE PTR [ebp-0x1],dl
  416fa0:	jmp    DWORD PTR [ecx-0x3376ceba]
  416fa6:	sub    bh,bh
  416fa8:	inc    DWORD PTR [ecx]
  416faa:	fnstenv [ebp-0x1]
  416fad:	add    BYTE PTR [edx-0x1],dh
  416fb0:	adc    edx,0xffffffb5
  416fb3:	jl     0x416fb5
  416fb5:	add    BYTE PTR [edx],al
  416fb7:	add    bh,bh
  416fb9:	jns    0x41700f
  416fbb:	inc    eax
  416fbc:	int3   
  416fbd:	push   DWORD PTR [ebp-0x44f0001]
  416fc3:	mov    eax,DWORD PTR [ebx+0xff3100]
  416fc9:	rol    BYTE PTR [edx],0x8d
  416fcc:	inc    DWORD PTR [ebx-0x27ff76d3]
  416fd2:	xchg   edi,eax
  416fd3:	and    al,BYTE PTR [eax]
  416fd5:	inc    ecx
  416fd7:	add    bh,bh
  416fd9:	cs fcmovne st,st(7)
  416fdc:	inc    DWORD PTR [ebx-0x1333ff8c]
  416fe2:	div    BYTE PTR [eax+0x82ff83]
  416fe8:	cmp    DWORD PTR [ecx+0xffae1f],0x64
  416fef:	(bad)  
  416ff0:	call   edx
  416ff2:	cmp    ecx,DWORD PTR [esi]
  416ff4:	inc    DWORD PTR [eax]
  416ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ff7:	add    BYTE PTR [eax],al
  416ff9:	inc    esp
  416ffa:	ret    
  416ffb:	(bad)  
  416ffc:	add    bh,bh
  416ffe:	jmp    0xffe6:0x4be4ccff
  417005:	int3   
  417006:	outs   dx,BYTE PTR ds:[esi]
  417007:	add    bh,bh
  417009:	mov    DWORD PTR [ecx-0x2e0076f7],ebx
  41700f:	inc    DWORD PTR [ebx-0x7c8935b9]
  417015:	(bad)  
  417016:	cli    
  417017:	mov    DWORD PTR [eax],eax
  417019:	or     ah,BYTE PTR [eax-0x6900ffae]
  41701f:	add    bh,bh
  417021:	into   
  417022:	dec    ecx
  417023:	jns    0x417025
  417025:	add    BYTE PTR [edx+0x4830ff00],al
  41702b:	or     al,BYTE PTR [eax]
  41702d:	call   FWORD PTR [esi]
  41702f:	add    ah,cl
  417031:	jecxz  0x416fd2
  417033:	xchg   ecx,eax
  417034:	mov    edi,edi
  417036:	(bad)  
  417037:	inc    DWORD PTR [eax]
  417039:	push   esi
  41703a:	dec    ebp
  41703b:	jg     0x416fc0
  41703d:	int3   
  41703e:	imul   eax,DWORD PTR [eax],0xffffffff
  417041:	and    BYTE PTR [edx],ah
  417043:	popf   
  417044:	inc    DWORD PTR [eax]
  417046:	cmp    al,0xff
  417048:	int3   
  417049:	inc    edi
  41704a:	stos   BYTE PTR es:[edi],al
  41704b:	sub    al,BYTE PTR [ebx-0x7c7201]
  417051:	xchg   ebp,eax
  417052:	std    
  417053:	xor    al,0x0
  417055:	jmp    DWORD PTR [ebx-0x64370100]
  41705b:	add    BYTE PTR [eax],0x83
  41705e:	aaa    
  41705f:	add    bh,bh
  417061:	rcl    ebp,1
  417063:	cmp    eax,0xbdccff
  417068:	or     DWORD PTR [esi+0xcd51],0xffffffa9
  41706f:	add    BYTE PTR [ebx-0x478d9b],al
  417075:	jmp    FWORD PTR [ebp+0x49a1ffff]
  41707b:	xchg   edi,eax
  41707c:	inc    DWORD PTR [ebx+0x5cff00a7]
  417082:	test   eax,0xfd89ff20
  417087:	add    bh,bh
  417089:	test   BYTE PTR [ecx+0x5dffcc6c],bl
  41708f:	add    BYTE PTR [eax],al
  417091:	pop    ebx
  417092:	(bad)  
  417093:	mov    dh,0xff
  417095:	adc    DWORD PTR [eax],0xffffffff
  417098:	add    BYTE PTR ds:0xffff66ab,dh
  41709e:	inc    esi
  41709f:	(bad)  
  4170a0:	push   DWORD PTR [ebp-0xff199d]
  4170a6:	into   
  4170a7:	(bad)  
  4170a8:	inc    DWORD PTR ds:0x83ff1c65
  4170ae:	add    edi,edi
  4170b0:	(bad)  
  4170b1:	fstp   st(7)
  4170b3:	dec    esp
  4170b4:	add    bh,bh
  4170b6:	js     0x4170b8
  4170b8:	add    BYTE PTR [ebp+0x39],ah
  4170bb:	and    bh,bh
  4170bd:	add    DWORD PTR [edx+0x43278383],0x67
  4170c4:	add    ah,cl
  4170c6:	or     edi,edi
  4170c8:	(bad)  
  4170c9:	jmp    0xcc42170c
  4170ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170cf:	add    BYTE PTR [ebx+0x208d4],al
  4170d5:	add    BYTE PTR [edx+0x66230000],bh
  4170db:	lods   al,BYTE PTR ds:[esi]
  4170dc:	add    DWORD PTR [ebx+0x16ffff57],0xffffff8e
  4170e3:	lds    eax,FWORD PTR [ebx-0xd800]
  4170e9:	enter  0x7205,0xcc
  4170ed:	and    edi,0xffffffff
  4170f0:	mov    ebx,eax
  4170f2:	mov    ebp,0x40ff8369
  4170f7:	add    bh,bh
  4170f9:	in     eax,0x6c
  4170fb:	dec    esp
  4170fc:	add    BYTE PTR [ebx-0x76007c2d],al
  417102:	jno    0x4170f8
  417104:	add    BYTE PTR [ebx+0x5200ff1b],al
  41710a:	or     al,0x57
  41710c:	inc    DWORD PTR [ebx+0x2400ff3f]
  417112:	xchg   ebx,eax
  417113:	jns    0x417114
  417115:	mov    DWORD PTR [edi-0x7d],edx
  417118:	int3   
  417119:	aad    0x44
  41711b:	pop    esp
  41711c:	int3   
  41711d:	add    BYTE PTR [ecx-0x1],al
  417120:	add    BYTE PTR [edi-0x56e3],bl
  417126:	ud0    eax,DWORD PTR [eax]
  417129:	fcom   QWORD PTR [eax+0x68cccc07]
  41712f:	int3   
  417130:	call   FWORD PTR [ebp+0x57]
  417133:	jns    0x4170be
  417135:	add    cl,bh
  417137:	inc    DWORD PTR [eax]
  417139:	mov    bl,0x83
  41713b:	pop    ss
  41713c:	cmp    edi,0xffffffa1
  41713f:	add    BYTE PTR [eax],al
  417141:	imul   ebp,DWORD PTR [edi-0x2c00760f],0x0
  417148:	push   DWORD PTR [esi]
  41714a:	jecxz  0x4171a1
  41714c:	(bad)  
  41714d:	call   FWORD PTR [eax+eax*1-0x1]
  417151:	jmp    ebx
  417153:	add    edi,edi
  417155:	mov    DWORD PTR [ecx],esp
  417157:	(bad)  
  417158:	dec    ebp
  41715a:	mov    esp,0xdeff891f
  41715f:	inc    DWORD PTR [ebx-0x156679]
  417165:	jmp    FWORD PTR [ebx+0x0]
  417168:	(bad)  
  417169:	out    dx,al
  41716a:	push   esp
  41716b:	push   0xfffd0089
  417170:	jmp    DWORD PTR [edi-0x331e03]
  417176:	cmp    al,BYTE PTR [ebx+0x1fe840ff]
  41717c:	(bad)  
  41717d:	call   FWORD PTR [edi-0x1]
  417180:	(bad)  
  417181:	jnp    0x41713f
  417183:	mov    ah,0xff
  417185:	(bad)  
  417186:	jge    0x417188
  417188:	add    BYTE PTR [edi],bh
  41718a:	(bad)  
  41718b:	(bad)  
  41718c:	(bad)  
  41718d:	push   DWORD PTR [eax+eax*1-0x32356134]
  417194:	int3   
  417195:	inc    DWORD PTR [esi-0x1]
  417198:	dec    eax
  41719a:	test   DWORD PTR [esi+0x0],ecx
  41719d:	jmp    DWORD PTR [ecx]
  41719f:	int3   
  4171a0:	sub    DWORD PTR [edi+0x38],0x64
  4171a4:	add    BYTE PTR [eax],al
  4171a6:	and    eax,0xbf7900cc
  4171ab:	inc    ebx
  4171ac:	inc    DWORD PTR [eax]
  4171ae:	xchg   ebp,eax
  4171af:	int3   
  4171b0:	push   DWORD PTR [ebx]
  4171b2:	mov    edi,0x88ffff4c
  4171b7:	(bad)  
  4171b8:	jmp    FWORD PTR [edx-0x7c33ebcd]
  4171be:	sbb    bh,bh
  4171c0:	(bad)  
  4171c1:	jmp    0x417204
  4171c3:	call   0x4700:0xffaeff00
  4171ca:	pusha  
  4171cb:	sub    edi,edi
  4171cd:	call   FWORD PTR [eax]
  4171cf:	int3   
  4171d0:	add    BYTE PTR [edi-0x67],cl
  4171d3:	in     al,0x0
  4171d5:	add    BYTE PTR [esi],bl
  4171d7:	add    bh,bh
  4171d9:	cld    
  4171da:	pop    edx
  4171db:	adc    eax,0xff8889ff
  4171e0:	add    ch,ch
  4171e2:	aad    0x16
  4171e4:	add    BYTE PTR [ecx-0x493300ee],cl
  4171ea:	std    
  4171eb:	mov    esp,0x89ab8300
  4171f0:	or     DWORD PTR [eax-0x7c00f6fd],0xffffff92
  4171f7:	add    bh,bh
  4171f9:	jae    0x417245
  4171fb:	and    edi,edi
  4171fd:	call   ecx
  4171ff:	inc    DWORD PTR [ebx-0x1f5853]
  417205:	add    BYTE PTR [ecx-0x34],cl
  417208:	int3   
  417209:	xor    al,0xa
  41720b:	fild   DWORD PTR [eax]
  41720d:	cmp    ebx,0xffffffff
  417210:	int3   
  417211:	hlt    
  417212:	and    al,BYTE PTR [edx-0x7c7b0001]
  417218:	add    al,ah
  41721a:	jb     0x4171e5
  41721c:	add    DWORD PTR [eax],0xffffffcf
  41721f:	cmp    edi,0x41
  417222:	mov    BYTE PTR [ebx+0x0],dh
  417225:	int3   
  417226:	push   edi
  417227:	add    BYTE PTR [eax],al
  417229:	aas    
  41722a:	jmp    0x417218
  41722c:	(bad)  
  41722d:	call   FWORD PTR [ebx-0x14507601]
  417233:	(bad)  
  417234:	or     esp,0x44
  417237:	add    bh,bh
  417239:	and    DWORD PTR [ebx-0x6],ebp
  41723c:	add    DWORD PTR [ebx-0x550000a3],0xffffffc1
  417243:	icebp  
  417244:	add    DWORD PTR [eax],0x3
  417247:	cmp    edi,0xffffff98
  41724a:	out    dx,eax
  41724b:	test   DWORD PTR [eax],eax
  41724d:	(bad)  
  41724e:	stc    
  41724f:	add    DWORD PTR [ebx+0xcb33a4],0x0
  417256:	mov    esi,0xecf9ff00
  41725b:	pop    ecx
  41725c:	(bad)  
  41725d:	(bad)  
  41725e:	jmp    0x83e5:0x5b0683ff
  417265:	(bad)  
  417266:	jmp    0x4db1716b
  41726b:	mov    bh,0x89
  41726d:	jmp    FWORD PTR [ebx-0x4fd87d00]
  417273:	sbb    BYTE PTR [eax],al
  417275:	(bad)  
  417276:	cld    
  417277:	add    BYTE PTR [ecx-0x76c35e50],cl
  41727d:	jmp    DWORD PTR [eax+eax*1+0x65a8689]
  417284:	inc    DWORD PTR [eax]
  417286:	add    DWORD PTR [eax],0xffffffff
  417289:	sar    DWORD PTR [esi+0x1f],1
  41728c:	(bad)  
  41728d:	(bad)  
  41728e:	jp     0x417213
  417290:	add    bl,dh
  417292:	xor    BYTE PTR [ebx-0x7d],0x83
  417296:	imul   edi,edi,0xb0cf8dff
  41729c:	add    DWORD PTR [eax],0x16
  41729f:	mov    DWORD PTR [eax],eax
  4172a1:	xchg   ecx,edx
  4172a3:	mov    al,BYTE PTR [ebx-0x333301]
  4172a9:	mov    esp,0xccff0663
  4172ae:	jecxz  0x4172af
  4172b0:	add    BYTE PTR [edi],bl
  4172b2:	jb     0x4172c0
  4172b4:	cmp    edi,0xffffffbe
  4172b7:	(bad)  
  4172b8:	jmp    ebx
  4172ba:	aam    0xbb
  4172bc:	inc    DWORD PTR [eax]
  4172be:	push   ebp
  4172bf:	(bad)  
  4172c0:	jmp    FWORD PTR [ebp-0x30]
  4172c3:	fmul   DWORD PTR [ecx+0xff03ff]
  4172c9:	cwde   
  4172ca:	ss mov bh,0x83
  4172cd:	inc    edx
  4172cf:	(bad)  
  4172d0:	push   DWORD PTR [eax]
  4172d2:	jo     0x4172eb
  4172d4:	inc    DWORD PTR [ebx-0x4800ffbc]
  4172da:	mov    bh,bl
  4172dc:	int3   
  4172dd:	add    bh,dh
  4172df:	add    bh,bh
  4172e1:	jmp    0xffdc:0x89ffd1f4
  4172e8:	push   DWORD PTR ds:0xcc491c
  4172ee:	sbb    eax,DWORD PTR [eax]
  4172f0:	xor    DWORD PTR [eax+0x73],0xffffffa0
  4172f4:	add    bh,bh
  4172f6:	in     eax,dx
  4172f7:	inc    DWORD PTR [ebx-0x33f44a01]
  4172fd:	jmp    ebx
  4172ff:	inc    DWORD PTR [eax]
  417301:	fiadd  DWORD PTR [ebp*1-0xbe7c77]
  417308:	add    BYTE PTR [ebx+0x78],dl
  41730b:	pop    DWORD PTR [ebx-0x7c7c0301]
  417311:	fwait
  417312:	lods   eax,DWORD PTR ds:[esi]
  417313:	and    DWORD PTR [eax],eax
  417315:	dec    DWORD PTR ds:0x476983ff
  41731b:	call   0xb200:0x89de00ff
  417322:	push   cs
  417323:	fdivr  st,st(7)
  417325:	add    BYTE PTR [edi-0x34],dh
  417328:	add    cl,al
  41732a:	enter  0xff13,0x89
  41732e:	sub    edi,edi
  417330:	int3   
  417331:	enter  0xb54f,0xff
  417335:	push   eax
  417337:	inc    DWORD PTR [ebx-0x7c1b9600]
  41733d:	add    BYTE PTR [ebx+0x0],al
  417340:	inc    DWORD PTR [eax-0x692f]
  417346:	xchg   edx,eax
  417347:	(bad)  
  417348:	inc    DWORD PTR [ecx-0x7cff68de]
  41734e:	cmp    bh,bh
  417350:	add    bh,bl
  417352:	loop   0x417360
  417354:	inc    DWORD PTR [eax]
  417356:	inc    esp
  417357:	inc    DWORD PTR [eax]
  417359:	daa    
  41735a:	ret    
  41735b:	sub    bh,bh
  41735d:	mov    DWORD PTR [ebx-0x7d],ebp
  417360:	jmp    eax
  417362:	inc    edi
  417363:	outs   dx,BYTE PTR ds:[esi]
  417364:	(bad)  
  417365:	(bad)  
  417366:	cli    
  417367:	cmp    edi,0x36
  41736a:	test   eax,0xab83ffe8
  41736f:	dec    esp
  417371:	fld    DWORD PTR [edi]
  417373:	xchg   ebx,eax
  417374:	inc    DWORD PTR [eax]
  417376:	(bad)  
  417377:	inc    DWORD PTR [eax]
  417379:	enter  0x996f,0xff
  41737d:	jmp    FWORD PTR [edx-0x28f63334]
  417383:	sub    al,BYTE PTR [ebx-0x33000601]
  417389:	aas    
  41738a:	cmp    bh,BYTE PTR [ecx]
  41738c:	inc    DWORD PTR [eax]
  41738e:	mov    dh,0x0
  417390:	and    ecx,0xffffffea
  417393:	dec    esp
  417394:	cmp    edi,0x4e
  417397:	add    bh,bh
  417399:	call   0x89ae:0xff8928ad
  4173a0:	push   DWORD PTR ds:0xff89e7fb
  4173a6:	or     edi,edi
  4173a8:	mov    ecx,eax
  4173aa:	add    ebx,DWORD PTR [ebx-0x7c437601]
  4173b0:	call   DWORD PTR [ecx-0x25]
  4173b3:	(bad)  
  4173b6:	jecxz  0x4173b8
  4173b8:	call   eax
  4173ba:	mov    cl,0x10
  4173bc:	mov    DWORD PTR [ecx-0x383333f4],ecx
  4173c2:	mov    eax,0xccffff91
  4173c7:	inc    DWORD PTR [eax]
  4173c9:	jl     0x41737a
  4173cb:	mov    eax,DWORD PTR [eax]
  4173cd:	add    BYTE PTR [edi+0x4ae20000],al
  4173d3:	lock (bad) 
  4173d5:	push   DWORD PTR [eax+eax*1-0x16272d01]
  4173dc:	add    BYTE PTR [eax],al
  4173de:	cli    
  4173df:	inc    DWORD PTR [eax]
  4173e1:	out    dx,al
  4173e2:	inc    eax
  4173e3:	fild   DWORD PTR [eax]
  4173e5:	add    BYTE PTR [eax+eax*1-0x1],cl
  4173e9:	popf   
  4173ea:	mov    ebp,0x32ffcca0
  4173ef:	add    BYTE PTR [eax],al
  4173f1:	in     al,0x52
  4173f3:	inc    edi
  4173f4:	add    BYTE PTR [eax],al
  4173f6:	cs (bad) 
  4173f8:	push   DWORD PTR [eax+edx*4+0x5bfffff4]
  4173ff:	or     DWORD PTR [ecx+0xa1dbbe],0x0
  417406:	sar    edi,1
  417408:	add    BYTE PTR [ebp-0x5e],bh
  41740b:	sti    
  41740c:	dec    DWORD PTR [ecx-0x7f00ff2d]
  417412:	mov    ebp,0x12ff000a
  417417:	inc    DWORD PTR [ebx-0x20662]
  41741d:	add    BYTE PTR [edi+edi*8+0x52d22dff],bl
  417424:	dec    esp
  417426:	add    DWORD PTR ss:[eax],0x2b
  41742a:	mov    ah,0xda
  41742c:	inc    DWORD PTR [ebx-0x62ff005f]
  417432:	std    
  417433:	dec    esp
  417434:	add    DWORD PTR [ebx-0x2176009b],0xffffffd8
  41743b:	inc    eax
  41743c:	(bad)  
  41743d:	(bad)  
  41743e:	jmp    0xff19:0x51f8ffcc
  417445:	inc    ecx
  417447:	int3   
  417448:	cmp    eax,0xffffffe0
  41744b:	xchg   edi,eax
  41744c:	inc    DWORD PTR [eax]
  41744e:	sbb    bh,bh
  417450:	add    BYTE PTR [edx+0xff4c75],bh
  417456:	idiv   edi
  417458:	dec    eax
  41745a:	dec    ebx
  41745b:	inc    ebp
  41745c:	int3   
  41745d:	int3   
  41745e:	(bad)  
  41745f:	inc    DWORD PTR [ebx-0xac1411]
  417465:	add    BYTE PTR [eax],ah
  417467:	add    bh,bh
  417469:	and    dh,BYTE PTR [edi]
  41746b:	mov    ecx,DWORD PTR [ecx-0xff4b7d]
  417471:	aaa    
  417472:	popa   
  417473:	inc    ebp
  417474:	add    bh,bh
  417476:	hlt    
  417477:	add    bh,bh
  417479:	in     al,dx
  41747a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747b:	jno    0x41747d
  41747d:	add    BYTE PTR [edi],cl
  41747f:	add    BYTE PTR [ebx-0xd4287a],al
  417485:	int3   
  417486:	mov    cs,WORD PTR [ecx+0x1a35cf83]
  41748c:	int3   
  41748d:	call   DWORD PTR [eax-0xd77700]
  417493:	stc    
  417494:	int3   
  417495:	inc    edi
  417497:	inc    DWORD PTR [ebx+0x19b7d1]
  41749d:	xor    DWORD PTR [ebp-0x34],0xffffffff
  4174a1:	nop
  4174a2:	jb     0x417501
  4174a4:	inc    DWORD PTR [eax]
  4174a6:	jmp    0x14:0x3857ff00
  4174ad:	call   DWORD PTR [ecx-0x7d]
  4174b0:	jmp    eax
  4174b2:	add    eax,0xbd83ff77
  4174b7:	(bad)  
  4174b8:	inc    DWORD PTR [edx]
  4174ba:	leave  
  4174bb:	imul   eax,DWORD PTR [eax],0xffffffff
  4174be:	adc    bh,bh
  4174c0:	call   DWORD PTR [ebx]
  4174c2:	adc    eax,DWORD PTR [esi+0x0]
  4174c5:	add    ch,cl
  4174c7:	(bad)  
  4174c8:	call   DWORD PTR [ebx-0x77]
  4174cb:	into   
  4174cc:	add    BYTE PTR [eax],al
  4174ce:	push   ecx
  4174cf:	add    ah,cl
  4174d1:	(bad)
  4174d5:	add    BYTE PTR [esi-0x6ab50034],dh
  4174db:	gs (bad) 
  4174dd:	(bad)  
  4174de:	aas    
  4174df:	(bad)  
  4174e0:	(bad)  
  4174e1:	in     eax,dx
  4174e2:	jae    0x4174a0
  4174e4:	add    DWORD PTR [ebx-0x3e00006f],0xffffffa1
  4174eb:	xchg   DWORD PTR [eax],eax
  4174ed:	jmp    DWORD PTR [ebx+0x62b9ffff]
  4174f3:	mov    DWORD PTR [eax],eax
  4174f5:	add    dl,bh
  4174f7:	dec    DWORD PTR [ecx-0x7c77bc99]
  4174fd:	add    BYTE PTR [esi-0x1],bl
  417500:	int3   
  417501:	mov    ds:0xcc8372f7,al
  417506:	adc    edi,edi
  417508:	mov    DWORD PTR [edx],esi
  41750a:	repnz inc DWORD PTR [ebx-0x7c001801]
  417511:	sbb    al,0xd8
  417513:	mov    ebx,0xffe3ffff
  417518:	jmp    FWORD PTR [eax-0x5e]
  41751b:	call   0x83bb751f
  417520:	add    BYTE PTR [edi],ah
  417522:	test   BYTE PTR [ebp-0x1aff34],bl
  417528:	sub    DWORD PTR [edx-0x11],0x71
  41752c:	int3   
  41752d:	add    BYTE PTR [edi+0x375a00ff],ah
  417533:	and    edi,edi
  417535:	int3   
  417536:	lahf   
  417537:	add    BYTE PTR [eax],al
  417539:	inc    ebx
  41753a:	data16 fwait
  41753c:	inc    DWORD PTR [ebx-0x7e000030]
  417542:	hlt    
  417543:	sbb    al,0x83
  417545:	add    BYTE PTR [edx+0x0],ch
  417548:	add    dh,bl
  41754a:	dec    ebp
  41754b:	jg     0x41754c
  41754d:	or     DWORD PTR [edi-0x4df80000],0xffffff82
  417554:	add    DWORD PTR [eax],0xffffff99
  417557:	inc    DWORD PTR [eax]
  417559:	sbb    al,0x9e
  41755b:	pop    esp
  41755c:	int3   
  41755d:	add    BYTE PTR [ecx-0x1],bl
  417560:	add    BYTE PTR [ebx-0x5],ah
  417563:	push   0xe283ff
  417568:	add    BYTE PTR [ebx-0x10],cl
  41756b:	retf   0xffff
  41756e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41756f:	cmp    edi,0xffffffc3
  417572:	lock mov bh,bh
  417575:	sub    DWORD PTR [esi-0x1],0xffffff83
  417579:	xchg   ebx,eax
  41757a:	dec    edi
  41757b:	fmulp  st(4),st
  41757d:	or     DWORD PTR [ebx-0x27d80034],0x21
  417584:	inc    DWORD PTR [eax]
  417586:	or     eax,DWORD PTR [eax]
  417588:	add    esp,0x6a
  41758b:	push   ebx
  41758c:	cmp    edi,0xffffff89
  41758f:	(bad)  
  417590:	jmp    ecx
  417592:	js     0x417565
  417594:	inc    DWORD PTR [ebx+0x35fffffc]
  41759a:	mov    ebp,0x8affff3b
  41759f:	(bad)  
  4175a0:	jmp    FWORD PTR [ebx+eax*4-0xa]
  4175a4:	mov    DWORD PTR [eax],eax
  4175a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a7:	add    ah,cl
  4175a9:	mov    al,ds:0xffdd3c
  4175ae:	lock add BYTE PTR [ecx-0x632ae0],cl
  4175b5:	int3   
  4175b6:	(bad)  
  4175b8:	mov    DWORD PTR [eax],ebp
  4175ba:	sub    BYTE PTR [eax+eax*1],bl
  4175bd:	jmp    FWORD PTR [esi-0x472fff01]
  4175c3:	mov    DWORD PTR [eax],0x83ffecff
  4175c9:	mov    eax,0xccff3eb7
  4175ce:	or     al,0x0
  4175d0:	add    BYTE PTR [edx],bl
  4175d2:	popf   
  4175d3:	inc    ecx
  4175d4:	mov    DWORD PTR [ebx-0x67003393],eax
  4175da:	data16 mov ds:0xff93ccff,al
  4175e0:	add    ah,dh
  4175e2:	cmp    ecx,eax
  4175e4:	int3   
  4175e5:	add    BYTE PTR [esi],bl
  4175e7:	add    bh,bh
  4175e9:	iret   
  4175ea:	pushf  
  4175eb:	mov    edx,0xccc300ff
  4175f0:	add    BYTE PTR [ecx+ecx*4-0x57],ch
  4175f4:	inc    DWORD PTR [eax]
  4175f6:	sub    al,BYTE PTR [eax]
  4175f8:	add    DWORD PTR [edx-0x7cc51c],0xffffffa9
  4175ff:	inc    DWORD PTR [eax]
  417601:	cld    
  417602:	stos   DWORD PTR es:[edi],eax
  417603:	push   ss
  417604:	add    BYTE PTR [eax],al
  417606:	inc    DWORD PTR gs:[eax]
  417609:	cmp    edx,DWORD PTR [ebp+0x3c]
  41760c:	int3   
  41760d:	xor    DWORD PTR [esp+ecx*8-0x491d617d],0xffffffff
  417615:	push   DWORD PTR [edi+0x2b5189ff]
  41761b:	mov    eax,0xcc79ffcc
  417620:	jmp    FWORD PTR [edi-0x7c0081aa]
  417626:	pop    eax
  417627:	(bad)  
  417628:	jmp    FWORD PTR [edi+eax*1]
  41762b:	inc    ecx
  41762c:	(bad)  
  41762d:	dec    DWORD PTR [edx-0x45e70100]
  417633:	jns    0x417634
  417635:	add    dh,cl
  417637:	add    BYTE PTR [ebx-0x88936a],al
  41763d:	mov    DWORD PTR [edx+0x14c400ff],esi
  417643:	xchg   ebp,eax
  417644:	inc    DWORD PTR [ebx-0x570000fa]
  41764a:	(bad)  
  41764b:	adc    BYTE PTR [eax],al
  41764d:	dec    DWORD PTR [edi+edi*8-0x34]
  417651:	fimul  WORD PTR ds:0xcbccfff0
  417657:	cmp    edi,0x1e
  41765a:	dec    ebx
  41765b:	cmp    edi,edi
  41765d:	(bad)  
  41765e:	mov    edx,0xad068900
  417663:	dec    esp
  417664:	add    bh,bh
  417666:	ret    0xff89
  417669:	xchg   edx,eax
  41766a:	fild   QWORD PTR [esi-0x7d]
  41766d:	add    al,dh
  41766f:	inc    DWORD PTR [eax]
  417671:	mov    esi,0xff00c019
  417676:	add    eax,DWORD PTR [eax]
  417678:	sbb    DWORD PTR [edx+esi*1+0x41ff89a1],0x0
  417680:	int3   
  417681:	push   edi
  417682:	ds lock add bh,bh
  417686:	xchg   edi,eax
  417687:	add    BYTE PTR [ebx-0x7cdd1c88],al
  41768d:	inc    eax
  41768f:	inc    DWORD PTR [eax]
  417691:	inc    edi
  417692:	mov    ebp,0x48ff89c8
  417697:	(bad)  
  417698:	call   FWORD PTR ds:0xffff3eb9
  41769e:	and    al,0xff
  4176a0:	jmp    FWORD PTR [eax+ebx*8]
  4176a3:	push   0x0
  4176a5:	mov    DWORD PTR [edx+0x2ebd00ff],ecx
  4176ab:	and    eax,DWORD PTR [ebx-0x7c005301]
  4176b1:	jo     0x41771a
  4176b3:	and    al,0xff
  4176b5:	push   DWORD PTR [eax+0x0]
  4176b8:	call   DWORD PTR [esi+0x77]
  4176bb:	xchg   ecx,eax
  4176bc:	mov    edi,edi
  4176be:	pushf  
  4176bf:	cmp    edi,0xfffffff5
  4176c2:	fisubr WORD PTR [eax-0xbd7700]
  4176c8:	inc    edx
  4176ca:	call   0x4d4077a3
  4176cf:	(bad)  
  4176d0:	dec    edi
  4176d2:	adc    BYTE PTR [ebx],0xff
  4176d5:	mov    DWORD PTR [eax-0x34],edi
  4176d8:	call   FWORD PTR [edi-0x41]
  4176db:	xlat   BYTE PTR ds:[ebx]
  4176dc:	add    BYTE PTR [eax],al
  4176de:	inc    esi
  4176df:	add    bh,bh
  4176e1:	ds (bad) 
  4176e3:	aam    0xff
  4176e5:	(bad)  
  4176e6:	jns    0x4176e8
  4176e8:	mov    DWORD PTR [ebx-0x337c3b69],ebp
  4176ee:	inc    ecx
  4176ef:	int3   
  4176f0:	add    BYTE PTR [esi-0x4c],cl
  4176f3:	cmp    bh,0xcc
  4176f6:	or     DWORD PTR [ebx-0x5e4c2101],eax
  4176fc:	inc    DWORD PTR [eax]
  4176fe:	inc    esp
  4176ff:	dec    DWORD PTR [ecx-0xbb1346]
  417705:	add    DWORD PTR [eax+eax*1],0xffffff89
  417709:	fcom   DWORD PTR [ecx-0x6c]
  41770c:	add    DWORD PTR [eax],0xffffff8d
  41770f:	inc    DWORD PTR [eax]
  417711:	les    ebx,FWORD PTR [edi+0x4008917]
  417717:	(bad)  
  417718:	push   DWORD PTR [edx+esi*4-0x38ff7c3f]
  41771f:	inc    DWORD PTR [eax]
  417721:	mov    dh,0x1b
  417723:	aam    0xff
  417725:	call   esp
  417727:	inc    DWORD PTR [eax]
  417729:	and    al,0x3
  41772b:	mov    edi,0xff98ffff
  417730:	add    BYTE PTR [edx-0xff7c5c],dl
  417736:	scas   al,BYTE PTR es:[edi]
  417737:	mov    DWORD PTR [ecx-0x332920],ecx
  41773d:	push   DWORD PTR [eax]
  41773f:	add    BYTE PTR [eax],al
  417741:	repnz leave 
  417743:	and    al,0xff
  417745:	(bad)  
  417746:	fcos   
  417748:	call   edi
  41774a:	repnz mov bh,0xff
  41774d:	int3   
  41774e:	jne    0x41774f
  417750:	dec    DWORD PTR [ecx]
  417752:	jmp    0x417725
  417754:	dec    DWORD PTR [ecx-0x4a0000f8]
  41775a:	jb     0x41779d
  41775c:	int3   
  41775d:	int3   
  41775e:	(bad)  
  417761:	nop
  417762:	cs and al,0x0
  417765:	jmp    DWORD PTR [ecx+ecx*4]
  417768:	call   eax
  41776a:	inc    esi
  41776b:	mov    eax,DWORD PTR [eax]
  41776d:	add    DWORD PTR [esi+0x0],0xffffffff
  417771:	scas   al,BYTE PTR es:[edi]
  417772:	mov    ds,eax
  417774:	inc    DWORD PTR [ebx-0x3100004c]
  41777a:	in     eax,dx
  41777b:	popa   
  41777c:	int3   
  41777d:	inc    DWORD PTR [ebp+0x0]
  417780:	add    dh,ch
  417782:	xchg   edx,eax
  417783:	daa    
  417784:	mov    edi,edi
  417786:	cmp    eax,0xcd3f0083
  41778b:	xchg   edx,eax
  41778c:	(bad)  
  41778d:	jmp    DWORD PTR [edi+edi*8-0x34]
  417791:	pop    eax
  417792:	retf   0xaa
  417795:	add    BYTE PTR [ecx],dh
  417797:	cmp    edi,0xffffffd1
  41779a:	cmp    bh,dh
  41779c:	inc    DWORD PTR [eax]
  41779e:	fadd   DWORD PTR [eax]
  4177a0:	mov    DWORD PTR [eax-0x42],ebx
  4177a3:	(bad)  
  4177a5:	add    BYTE PTR ds:0x6a7ecc89,cl
  4177ab:	out    0xff,eax
  4177ad:	add    BYTE PTR [edx-0x1],dh
  4177b0:	dec    DWORD PTR [esi+ebp*8-0x38]
  4177b4:	int3   
  4177b5:	add    BYTE PTR [edi-0x36e7d00],bh
  4177bb:	pop    ds
  4177bc:	add    BYTE PTR [eax],al
  4177be:	fmul   st(4),st
  4177c0:	add    BYTE PTR [edx+0x3c],bh
  4177c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c4:	cmp    edi,0x44
  4177c7:	add    bh,bh
  4177c9:	adc    DWORD PTR [edx+0x468300db],esi
  4177cf:	int3   
  4177d0:	add    dh,bh
  4177d2:	ja     0x4177b9
  4177d4:	add    DWORD PTR [eax],0xffffffd8
  4177d7:	add    DWORD PTR [ebx+0x96b7ac],0x0
  4177de:	or     eax,0x761ff00
  4177e3:	jle    0x417768
  4177e5:	mov    DWORD PTR [ebx+0x16970089],edi
  4177eb:	adc    edi,edi
  4177ed:	int3   
  4177ee:	push   0xffffffff
  4177f0:	jmp    ebp
  4177f2:	or     dh,BYTE PTR [ebp+0x0]
  4177f5:	call   FWORD PTR [eax-0x34]
  4177f8:	call   FWORD PTR [esi-0x53b5]
  4177fe:	fwait
  4177ff:	int3   
  417800:	call   DWORD PTR [eax]
  417802:	arpl   WORD PTR [edx],bp
  417804:	add    BYTE PTR [eax],al
  417806:	mov    bh,0x0
  417808:	add    al,al
  41780a:	imul   esi,DWORD PTR [eax-0x307c01],0xffffffff
  417811:	add    edi,eax
  417813:	mov    al,ds:0xcc7b00ff
  417818:	int3   
  417819:	nop
  41781a:	xlat   BYTE PTR ds:[ebx]
  41781b:	pop    ecx
  41781c:	(bad)  
  41781d:	jmp    FWORD PTR [edi-0x7f417c7d]
  417823:	sub    DWORD PTR [ebx+0x83b900],eax
  417829:	and    bl,BYTE PTR [ebx+0x59]
  41782c:	inc    DWORD PTR [eax]
  41782e:	(bad)  
  417830:	call   FWORD PTR [eax-0x21]
  417833:	or     edi,edi
  417835:	sbb    ecx,0x0
  417838:	cmp    DWORD PTR [ebp-0x76bd91],0xffffffb3
  41783f:	mov    edi,edi
  417841:	adc    BYTE PTR [edi],dl
  417843:	mov    dh,0xff
  417845:	add    BYTE PTR [ebx],bh
  417847:	add    BYTE PTR [eax],al
  417849:	ret    0x14e
  41784c:	(bad)  
  41784d:	jmp    FWORD PTR [ebx+0x27b0cccc]
  417853:	or     al,0x0
  417855:	int3   
  417856:	in     eax,0x0
  417858:	push   DWORD PTR [ebx+ebp*4-0x1c]
  41785c:	(bad)  
  41785d:	jmp    DWORD PTR [ecx+0x0]
  417860:	dec    DWORD PTR [edi]
  417862:	mov    dl,0xec
  417864:	mov    edi,edi
  417866:	bound  eax,QWORD PTR [ebx-0x7a774f00]
  41786c:	mov    DWORD PTR [eax],eax
  41786e:	push   ecx
  41786f:	int3   
  417870:	push   ebx
  417872:	xchg   edx,eax
  417873:	repnz mov edi,edi
  417876:	sar    edi,1
  417878:	jmp    DWORD PTR ds:0x83ffcb7f
  41787e:	and    al,BYTE PTR [eax]
  417880:	int3   
  417881:	inc    ebp
  417882:	add    esi,DWORD PTR [ebx]
  417884:	add    BYTE PTR [ecx-0x4fffff9e],cl
  41788a:	cwde   
  41788b:	dec    edi
  41788c:	dec    esp
  41788e:	pushf  
  41788f:	int3   
  417890:	(bad)  
  417891:	fnstsw WORD PTR [edi-0x67]
  417894:	int3   
  417895:	add    BYTE PTR [edi],cl
  417897:	inc    DWORD PTR [eax]
  417899:	je     0x41781f
  41789b:	addr16 int3 
  41789d:	and    esp,0xffffffff
  4178a0:	sub    ebp,0x76
  4178a3:	call   0xa645a7
  4178a8:	mov    DWORD PTR [edx-0x18],ebp
  4178ab:	mov    ecx,0xbe0000
  4178b0:	dec    DWORD PTR [ebp+0xff4ef8]
  4178b6:	push   0x5911ffff
  4178bb:	push   eax
  4178bc:	(bad)  
  4178bd:	(bad)  
  4178be:	jle    0x4178bf
  4178c0:	add    ah,bh
  4178c2:	fild   WORD PTR [edi-0x1]
  4178c5:	(bad)  
  4178c6:	sti    
  4178c7:	add    bh,bh
  4178c9:	ret    0xa105
  4178cc:	add    BYTE PTR [ebx+0x4bff0068],al
  4178d2:	out    dx,al
  4178d3:	cmp    eax,DWORD PTR [eax]
  4178d5:	int3   
  4178d6:	mov    eax,0xeaddffff
  4178db:	mov    ?,edi
  4178dd:	(bad)  
  4178de:	jnp    0x4178df
  4178e0:	jmp    FWORD PTR [ebx]
  4178e2:	mov    edx,0x5dff83d6
  4178e7:	mov    edi,edi
  4178e9:	xchg   edx,eax
  4178ea:	mov    ch,0xd9
  4178ec:	dec    esp
  4178ee:	adc    eax,0x70a4ff00
  4178f3:	push   ebp
  4178f4:	add    BYTE PTR [eax],al
  4178f6:	lods   eax,DWORD PTR ds:[esi]
  4178f7:	inc    DWORD PTR [eax]
  4178f9:	mov    ds:0xff897c4a,al
  4178fe:	imul   ecx,esp,0xdd0ff100
  417904:	inc    DWORD PTR [eax]
  417906:	stc    
  417907:	inc    DWORD PTR [eax]
  417909:	jmp    0x4178d6
  41790b:	es cmp edi,0xffffff83
  41790f:	add    bh,bh
  417911:	jp     0x41793d
  417913:	scas   al,BYTE PTR es:[edi]
  417914:	mov    DWORD PTR [eax],eax
  417916:	mov    edx,0x2b5eff00
  41791b:	xor    BYTE PTR [eax],al
  41791d:	sbb    DWORD PTR [esi-0x71960001],0x1
  417924:	inc    DWORD PTR [eax]
  417926:	out    0x0,al
  417928:	add    BYTE PTR [eax-0xff74a6],bh
  41792e:	cmp    eax,DWORD PTR [ebx+0x41b528cc]
  417934:	dec    esp
  417936:	xchg   esi,eax
  417937:	add    BYTE PTR [ecx-0x7615db2b],cl
  41793d:	dec    ecx
  41793f:	(bad)  
  417940:	push   ebp
  417942:	cmp    BYTE PTR [esi],dh
  417944:	inc    DWORD PTR [eax]
  417946:	(bad)  
  417947:	cmp    edi,0x5
  41794a:	shr    BYTE PTR ds:0x83cbffff,cl
  417950:	add    BYTE PTR [esi+0x2a],dh
  417953:	jle    0x417954
  417955:	add    BYTE PTR [ebp-0x4f0f0077],ch
  41795b:	adc    bh,bh
  41795d:	sbb    DWORD PTR [edi+edi*8+0x2bfa7e00],0xffffff83
  417965:	mov    ecx,eax
  417967:	(bad)  
  417968:	call   FWORD PTR [eax-0x76]
  41796b:	sbb    eax,DWORD PTR [eax]
  41796d:	call   DWORD PTR [ebx-0x77]
  417970:	mov    ecx,ecx
  417972:	jo     0x417909
  417974:	inc    DWORD PTR [eax]
  417976:	retf   0xff83
  417979:	sti    
  41797a:	inc    edi
  41797b:	push   edi
  41797c:	(bad)  
  41797d:	inc    DWORD PTR [eax]
  41797f:	dec    DWORD PTR [ecx-0x33a0b0da]
  417985:	add    BYTE PTR [edi-0x72bf3301],bh
  41798b:	pop    ss
  41798c:	cmp    edi,0x13
  41798f:	inc    DWORD PTR [eax]
  417991:	bound  edx,QWORD PTR ds:0xbb83ff3f
  417997:	(bad)  
  417998:	push   DWORD PTR [ebp+ebp*4-0x450000dd]
  41799f:	mov    DWORD PTR [eax],eax
  4179a1:	mov    bh,0x34
  4179a3:	jno    0x4179a5
  4179a5:	add    BYTE PTR [esi],ah
  4179a7:	add    bh,bh
  4179a9:	xchg   edx,eax
  4179aa:	call   0xff:0x14ff0022
  4179b1:	outs   dx,BYTE PTR ds:[esi]
  4179b2:	stos   DWORD PTR es:[edi],eax
  4179b3:	data16 (bad) 
  4179b5:	(bad)  
  4179b6:	fdiv   st(7),st
  4179b8:	add    BYTE PTR [edi+0xff2552],cl
  4179be:	add    bh,bh
  4179c0:	add    BYTE PTR [ecx-0x76f351],dh
  4179c6:	mov    eax,DWORD PTR [eax]
  4179c8:	push   DWORD PTR ds:0xffe726
  4179ce:	and    DWORD PTR [ebx-0x37217b01],eax
  4179d4:	add    ah,cl
  4179d6:	cmp    eax,0x89d6ffff
  4179db:	(bad)  
  4179dc:	(bad)  
  4179dd:	push   DWORD PTR [ebx]
  4179df:	cmp    edi,0x45
  4179e2:	cmp    DWORD PTR [ebx-0x7c8dff01],ebp
  4179e8:	mov    ebx,esp
  4179ea:	pop    esi
  4179eb:	jns    0x4179ed
  4179ed:	jmp    FWORD PTR [edi-0x831ff01]
  4179f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179f4:	add    BYTE PTR [eax],al
  4179f6:	adc    DWORD PTR [ebx+0x70930200],eax
  4179fc:	(bad)  
  4179fd:	call   FWORD PTR [ebx-0x58c10001]
  417a03:	lock inc DWORD PTR [eax]
  417a06:	cmp    edi,edi
  417a08:	add    DWORD PTR [ebp-0xfff159],0xffffffaa
  417a0f:	int3   
  417a10:	add    dh,dl
  417a12:	rcr    DWORD PTR [esp+ecx*8],1
  417a15:	jmp    FWORD PTR [edx-0x1]
  417a18:	or     edx,0x3c
  417a1b:	cmc    
  417a1c:	inc    DWORD PTR [eax]
  417a1e:	and    edi,edi
  417a20:	mov    ebx,ebx
  417a22:	jg     0x417a2d
  417a24:	mov    DWORD PTR [eax],eax
  417a26:	aad    0xff
  417a28:	call   FWORD PTR [eax+0xff6ecd]
  417a2e:	cmp    bh,0x0
  417a31:	loope  0x4179e2
  417a33:	jmp    0xff7d7b04
  417a38:	jmp    DWORD PTR [ebp+0x32]
  417a3b:	aas    
  417a3c:	int3   
  417a3d:	add    BYTE PTR [eax-0x34],dl
  417a40:	jmp    FWORD PTR [eax+0xff6d7c]
  417a46:	mov    bh,0xff
  417a48:	call   DWORD PTR [ecx-0xff428f]
  417a4e:	jmp    0xfffa:0x86768300
  417a55:	add    BYTE PTR [ecx],dh
  417a57:	add    DWORD PTR [eax],0x48
  417a5a:	or     eax,0xffffff51
  417a5f:	int3   
  417a60:	sub    esp,0x1f
  417a63:	mov    eax,0xff88ccff
  417a68:	add    ah,bl
  417a6a:	sar    BYTE PTR [ebx-0xe90000],0x83
  417a71:	pop    eax
  417a72:	out    dx,al
  417a73:	cli    
  417a74:	(bad)  
  417a75:	(bad)  
  417a76:	jnp    0x417a01
  417a78:	add    BYTE PTR [edi-0xea2c],ah
  417a7e:	ins    BYTE PTR es:[edi],dx
  417a7f:	(bad)  
  417a80:	inc    DWORD PTR [edi]
  417a82:	pop    ss
  417a83:	repnz (bad) 
  417a85:	(bad)  
  417a86:	mov    esp,0xc7640000
  417a8b:	pop    ds
  417a8c:	cmp    edi,0xffffffc8
  417a8f:	cmp    edi,0x71
  417a92:	fidivr DWORD PTR [edi+edi*8+0xf0ff]
  417a99:	mov    ds:0x8e10,al
  417a9e:	pop    DWORD PTR [ebx+0x3cd797ff]
  417aa4:	(bad)  
  417aa5:	(bad)  
  417aa6:	(bad)  
  417aa7:	(bad)  
  417aa8:	jmp    DWORD PTR [esi]
  417aaa:	out    0x46,al
  417aac:	add    BYTE PTR [eax],al
  417aae:	addr16 add ah,cl
  417ab1:	pop    eax
  417ab2:	adc    bh,BYTE PTR [edx-0x1]
  417ab5:	mov    DWORD PTR [ecx+0x194fcc00],eax
  417abb:	add    eax,DWORD PTR [eax]
  417abd:	add    BYTE PTR [eax],cl
  417abf:	inc    DWORD PTR [ebx+0xf2fc73]
  417ac5:	add    dl,dl
  417ac7:	inc    DWORD PTR [ebx-0x152575]
  417acd:	(bad)  
  417ace:	jg     0x417ad0
  417ad0:	inc    DWORD PTR [ebp-0x7]
  417ad3:	cdq    
  417ad4:	add    BYTE PTR [eax],al
  417ad6:	inc    edx
  417ad7:	int3   
  417ad8:	jmp    FWORD PTR [ebx+0x15]
  417adb:	pop    es
  417adc:	add    ah,cl
  417ade:	xchg   DWORD PTR [ecx-0x2005167d],ecx
  417ae4:	cmp    edi,0xffffffdf
  417ae7:	inc    DWORD PTR [ebx-0x7699ad8b]
  417aed:	and    DWORD PTR [esi-0x1],0xffffffff
  417af1:	pop    ecx
  417af2:	inc    esp
  417af3:	mov    esi,0xc5ccff
  417af8:	add    BYTE PTR [edx-0x11],al
  417afb:	in     al,0xff
  417afd:	call   DWORD PTR [edi+edi*8-0x64183f01]
  417b04:	(bad)  
  417b05:	push   esp
  417b07:	dec    esp
  417b09:	fdivrp st(5),st
  417b0b:	xor    ah,cl
  417b0d:	dec    ecx
  417b0f:	add    bh,bh
  417b11:	int3   
  417b12:	or     al,0x38
  417b14:	(bad)  
  417b15:	push   DWORD PTR [ecx-0x5cd10001]
  417b1b:	in     al,dx
  417b1c:	add    BYTE PTR [ebx-0x1eff0085],al
  417b22:	gs adc al,0x0
  417b25:	int3   
  417b26:	xchg   ebp,eax
  417b27:	cmp    edi,0x42
  417b2a:	jae    0x417b09
  417b2c:	add    BYTE PTR [eax],al
  417b2e:	cmp    al,0x0
  417b30:	call   DWORD PTR [edx+ebx*8]
  417b33:	in     eax,dx
  417b34:	add    BYTE PTR [ecx+0x1c83ff38],cl
  417b3a:	or     al,0x49
  417b3c:	add    BYTE PTR [eax],al
  417b3e:	call   0x831d:0x663a00ff
  417b45:	add    ch,dl
  417b47:	add    BYTE PTR [eax],al
  417b49:	jp     0x417ad0
  417b4b:	sahf   
  417b4c:	(bad)  
  417b4d:	jmp    FWORD PTR ds:0x4981ff00
  417b53:	dec    eax
  417b54:	add    ah,cl
  417b56:	xor    DWORD PTR [ebx+0x69e52ff],eax
  417b5c:	int3   
  417b5d:	add    BYTE PTR [esi-0x1],dl
  417b60:	adc    esp,0x4c
  417b63:	xor    edi,edi
  417b65:	sub    ebx,0xffffffff
  417b68:	int3   
  417b69:	push   ds
  417b6a:	mov    WORD PTR [edi],?
  417b6c:	inc    DWORD PTR [ebx-0x1b000047]
  417b72:	sti    
  417b73:	xor    edi,edi
  417b75:	(bad)  
  417b76:	jg     0x417b77
  417b78:	add    BYTE PTR [ebp+0x58],dl
  417b7b:	add    BYTE PTR fs:[eax],al
  417b7e:	mov    esi,0xe94cff00
  417b83:	jbe    0x417b84
  417b85:	call   FWORD PTR [eax]
  417b87:	add    bh,bh
  417b89:	mov    cl,0xc6
  417b8b:	ret    
  417b8c:	inc    DWORD PTR [ebx+0x68ff83b0]
  417b92:	jg     0x417b37
  417b94:	cmp    edi,0x3
  417b97:	add    bh,bh
  417b99:	adc    al,BYTE PTR [ecx-0x68]
  417b9c:	inc    DWORD PTR [ebx+0x2bffff96]
  417ba2:	sti    
  417ba3:	ins    DWORD PTR es:[edi],dx
  417ba4:	(bad)  
  417ba5:	push   DWORD PTR [eax+eax*1-0x1]
  417ba9:	or     al,0x84
  417bab:	hlt    
  417bac:	(bad)  
  417bad:	push   DWORD PTR [ecx+0x0]
  417bb0:	add    BYTE PTR [eax],al
  417bb2:	dec    ebp
  417bb3:	cld    
  417bb4:	add    BYTE PTR [eax],al
  417bb6:	cmp    edi,0x0
  417bb9:	push   ebx
  417bba:	outs   dx,DWORD PTR ds:[esi]
  417bbb:	sbb    bh,bh
  417bbd:	jmp    FWORD PTR [ebx+eax*4-0x61b3cf01]
  417bc4:	inc    DWORD PTR [eax]
  417bc6:	and    edi,edi
  417bc8:	int3   
  417bc9:	sub    BYTE PTR [ecx+ebp*2-0xec7c01],0x0
  417bd1:	lahf   
  417bd2:	gs fdivr st,st(7)
  417bd5:	add    BYTE PTR [esi],ch
  417bd7:	add    bh,bh
  417bd9:	cwde   
  417bda:	ja     0x417b6a
  417bdc:	inc    DWORD PTR [eax]
  417bde:	mov    edi,?
  417be0:	add    BYTE PTR [edx-0xff3bc3],dh
  417be6:	xchg   ebp,eax
  417be7:	inc    DWORD PTR [eax]
  417be9:	call   0xff1b:0xfffff774
  417bf0:	call   DWORD PTR [ecx-0x65]
  417bf3:	xor    edi,edi
  417bf5:	sbb    ecx,0x0
  417bf8:	call   esp
  417bfa:	loopne 0x417b97
  417bfc:	(bad)  
  417bfd:	push   DWORD PTR [edx-0x1]
  417c00:	call   FWORD PTR [esi+ebx*8]
  417c03:	sbb    al,BYTE PTR [ebx+0xffa200]
  417c09:	(bad)  
  417c0a:	inc    DWORD PTR [eax-0x7d]
  417c0d:	mov    DWORD PTR [edx+0x43bffcc],eax
  417c13:	push   0x83e100ff
  417c18:	dec    DWORD PTR [ecx]
  417c1a:	outs   dx,DWORD PTR ss:[esi]
  417c1c:	add    BYTE PTR [eax],al
  417c1e:	jmp    0x9fe17b23
  417c23:	mov    edi,0x835e89ff
  417c28:	add    BYTE PTR [edx],dh
  417c2a:	sti    
  417c2b:	lea    ecx,[ecx-0x2c7d]
  417c31:	pop    ecx
  417c32:	bound  esi,QWORD PTR [ebx-0x1]
  417c35:	sbb    DWORD PTR [edi+0x14483ff],0xb
  417c3c:	dec    esp
  417c3e:	cdq    
  417c3f:	(bad)  
  417c40:	dec    DWORD PTR ds:0xfffffc9e
  417c46:	push   ecx
  417c47:	int3   
  417c48:	call   FWORD PTR [edi+0xff65f8]
  417c4e:	push   edi
  417c4f:	int3   
  417c50:	push   DWORD PTR [eax-0x77]
  417c53:	xchg   esi,eax
  417c54:	add    BYTE PTR [eax],al
  417c56:	push   ebx
  417c57:	mov    esp,ecx
  417c59:	pop    ds
  417c5a:	clc    
  417c5b:	push   0x920083
  417c60:	call   FWORD PTR [eax-0xff0d74]
  417c66:	mov    eax,0x5854ff83
  417c6b:	stos   DWORD PTR es:[edi],eax
  417c6c:	add    BYTE PTR [ebx+0x7fff0054],al
  417c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c73:	test   eax,0x8399ff89
  417c78:	inc    esi
  417c7a:	das    
  417c7b:	stc    
  417c7c:	add    bh,bh
  417c7e:	scas   al,BYTE PTR es:[edi]
  417c7f:	inc    DWORD PTR [eax]
  417c81:	dec    eax
  417c82:	lods   eax,DWORD PTR ds:[esi]
  417c83:	call   0xd3ff:0xff1b00cc
  417c8a:	and    BYTE PTR [ecx],dl
  417c8c:	(bad)  
  417c8d:	dec    DWORD PTR [ecx+0x74fdff00]
  417c93:	or     al,BYTE PTR [eax]
  417c95:	dec    edx
  417c97:	add    bh,bh
  417c99:	and    DWORD PTR [ebx],0xffffff93
  417c9c:	add    BYTE PTR [ebx-0x3100ffa4],al
  417ca2:	inc    eax
  417ca3:	mov    bh,0x0
  417ca5:	call   FWORD PTR [eax-0x1d520001]
  417cab:	inc    DWORD PTR ss:[ebx+0x7183ff42]
  417cb2:	pop    ss
  417cb3:	cld    
  417cb4:	mov    DWORD PTR [eax],eax
  417cb6:	out    dx,al
  417cb7:	inc    DWORD PTR [ebx-0x7c9ed8ce]
  417cbd:	xor    DWORD PTR [edx],0x0
  417cc0:	int3   
  417cc1:	std    
  417cc2:	addr16 inc ebx
  417cc4:	add    BYTE PTR [eax],al
  417cc6:	jl     0x417cc8
  417cc8:	add    BYTE PTR [esi-0x35e9],ah
  417cce:	imul   edi,edi,0xffffff83
  417cd1:	test   al,0xb8
  417cd3:	mov    al,ds:0x510000
  417cd8:	add    BYTE PTR [ebx],dl
  417cda:	cmp    eax,0xf5ffff6b
  417cdf:	add    DWORD PTR [ebx+0x6fec21],0x0
  417ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ce7:	(bad)  
  417ce8:	jmp    DWORD PTR [edx-0x42]
  417ceb:	mov    edi,edi
  417ced:	int3   
  417cee:	lock add bh,bh
  417cf1:	out    dx,eax
  417cf2:	pop    edi
  417cf3:	add    BYTE PTR [bp+di-0x7cb7],al
  417cf8:	(bad)  
  417cf9:	in     al,dx
  417cfa:	(bad)  
  417cfb:	jnp    0x417c80
  417cfd:	cmp    ebx,0xffffffcc
  417d00:	call   FWORD PTR [eax+ecx*1-0x34]
  417d04:	mov    DWORD PTR [eax],eax
  417d06:	add    al,0xff
  417d08:	push   DWORD PTR [ebx-0xa137]
  417d0e:	loopne 0x417d0f
  417d10:	int3   
  417d11:	sub    DWORD PTR [edi+0x2dff0061],edi
  417d17:	inc    DWORD PTR [ebx-0x4c0e0a]
  417d1d:	jmp    FWORD PTR [esi]
  417d1f:	cmp    edi,0x26
  417d22:	int    0x14
  417d24:	cmp    edi,0xffffffdc
  417d27:	add    bh,bh
  417d29:	mov    bl,0x9c
  417d2b:	jl     0x417d2d
  417d2d:	xor    DWORD PTR [edx+0x0],0xffffffff
  417d31:	lds    eax,FWORD PTR [esi]
  417d33:	mov    ebp,0x8344ff83
  417d38:	(bad)  
  417d39:	jns    0x417d40
  417d3b:	mov    al,BYTE PTR [ebx-0x336000]
  417d41:	addr16 in al,dx
  417d43:	mov    eax,0xff46ff00
  417d48:	sub    ebp,0xffffffc7
  417d4b:	lods   al,BYTE PTR ds:[esi]
  417d4c:	(bad)  
  417d4d:	dec    eax
  417d4f:	inc    DWORD PTR [eax]
  417d51:	add    eax,DWORD PTR [esi+0xd]
  417d54:	(bad)  
  417d55:	call   DWORD PTR [ecx+0x0]
  417d58:	int3   
  417d59:	cs dec eax
  417d5b:	fiadd  WORD PTR [eax]
  417d5d:	dec    DWORD PTR [edi+edi*8]
  417d60:	add    BYTE PTR [ebp-0x33ffaffc],ch
  417d66:	js     0x417d67
  417d68:	dec    edi
  417d6a:	mov    dh,0x78
  417d6c:	add    BYTE PTR [eax],al
  417d6e:	mov    dl,0xcc
  417d70:	add    dh,cl
  417d72:	jne    0x417d3f
  417d74:	cmp    edi,0xffffff9f
  417d77:	add    BYTE PTR [ebx-0x27e24e],al
  417d7d:	add    BYTE PTR [eax+eax*1+0x0],al
  417d81:	jmp    0x417d35
  417d83:	push   ebp
  417d84:	inc    DWORD PTR [eax]
  417d86:	dec    ebp
  417d87:	add    bh,bh
  417d89:	jne    0x417dd8
  417d8b:	mov    esp,0x8accff
  417d90:	add    DWORD PTR [esi+0xff3956],0xffffffd8
  417d97:	(bad)  
  417d98:	inc    DWORD PTR [esi]
  417d9a:	and    DWORD PTR [edx],0xffffff83
  417d9d:	call   FWORD PTR [ecx-0xa1f0077]
  417da3:	pop    ebp
  417da4:	add    BYTE PTR [ecx-0x31ff7cd2],cl
  417daa:	cmp    eax,edx
  417dac:	(bad)  
  417dad:	jmp    DWORD PTR [esi+0x2140ffff]
  417db3:	inc    esi
  417db4:	add    bh,bh
  417db6:	and    eax,0x6499ffff
  417dbb:	xor    al,0x89
  417dbd:	call   FWORD PTR [edi+edi*8-0x1]
  417dc1:	mov    BYTE PTR [esi+ecx*1],bh
  417dc4:	int3   
  417dc5:	jmp    esi
  417dc7:	add    BYTE PTR [eax],al
  417dc9:	ret    0x92b6
  417dcc:	add    BYTE PTR [eax],al
  417dce:	pop    ds
  417dcf:	dec    DWORD PTR [ecx-0x6d3dd2]
  417dd5:	push   DWORD PTR [esi+0x6234ff00]
  417ddb:	mov    edi,edi
  417ddd:	call   FWORD PTR [ebx-0x1]
  417de0:	add    BYTE PTR [esi-0x7c6a06],ah
  417de6:	adc    eax,0xd1a889ff
  417deb:	fild   WORD PTR [eax]
  417ded:	int3   
  417dee:	jecxz  0x417df0
  417df0:	mov    DWORD PTR [ebp-0x4],esp
  417df3:	pop    ss
  417df4:	mov    edi,edi
  417df6:	pop    esp
  417df7:	(bad)  
  417df8:	inc    DWORD PTR [edx+edx*8+0x67ff835e]
  417dff:	dec    esp
  417e01:	mov    dl,0x1d
  417e03:	retf   
  417e04:	inc    DWORD PTR [eax]
  417e06:	sbb    edi,edi
  417e08:	call   FWORD PTR [ebx]
  417e0a:	cmc    
  417e0b:	cmp    edi,0xffffffff
  417e0e:	(bad)  
  417e0f:	(bad)  
  417e10:	(bad)  
  417e11:	fsub   st,st(3)
  417e13:	pusha  
  417e14:	mov    DWORD PTR [ebx-0x59767c2c],eax
  417e1a:	jne    0x417dc7
  417e1c:	add    bh,bh
  417e1e:	inc    DWORD PTR gs:[eax]
  417e21:	(bad)  
  417e23:	xor    eax,0x7e89ff
  417e28:	int3   
  417e29:	(bad)  
  417e2a:	(bad)  
  417e2b:	and    eax,0x14ffff
  417e30:	add    BYTE PTR [edi],dh
  417e32:	push   ss
  417e33:	std    
  417e34:	add    bh,bh
  417e36:	idiv   bh
  417e38:	adc    eax,0x21
  417e3b:	test   BYTE PTR [eax],al
  417e3d:	int3   
  417e3e:	stos   BYTE PTR es:[edi],al
  417e3f:	add    BYTE PTR [eax],al
  417e41:	cwde   
  417e42:	mov    ecx,DWORD PTR [edi+edi*8-0x33000500]
  417e49:	dec    edi
  417e4a:	(bad)  
  417e4b:	ja     0x417e4c
  417e4d:	jmp    FWORD PTR [ebx]
  417e4f:	add    BYTE PTR [eax],al
  417e51:	adc    ebx,DWORD PTR [ecx+0x5a]
  417e54:	dec    esp
  417e56:	sbb    edi,edi
  417e58:	int3   
  417e59:	jne    0x417ea1
  417e5b:	or     bh,bh
  417e5d:	or     DWORD PTR [edi],0xffffffff
  417e60:	int3   
  417e61:	aam    0xa0
  417e63:	add    eax,0xccd4ff00
  417e68:	add    BYTE PTR [eax],bl
  417e6a:	sub    eax,DWORD PTR [edi-0x467700]
  417e70:	add    BYTE PTR [edx],ah
  417e72:	xchg   ebp,eax
  417e73:	rol    DWORD PTR [eax],0xff
  417e76:	scas   eax,DWORD PTR es:[edi]
  417e77:	add    BYTE PTR [eax],al
  417e79:	inc    ebp
  417e7a:	sbb    al,0x94
  417e7c:	inc    DWORD PTR [eax]
  417e7e:	les    eax,FWORD PTR [ebx-0x89fdd01]
  417e84:	mov    DWORD PTR [eax],eax
  417e86:	xor    DWORD PTR [eax],eax
  417e88:	push   DWORD PTR [eax+esi*8]
  417e8b:	mov    bh,bh
  417e8d:	add    ah,cl
  417e8f:	(bad)  
  417e90:	push   DWORD PTR [eax-0xa]
  417e93:	call   0x5500:0xffd2ffff
  417e9a:	push   ss
  417e9b:	fild   WORD PTR [eax]
  417e9d:	call   FWORD PTR ds:0x145bff89
  417ea3:	add    al,BYTE PTR [ebx-0x762577]
  417ea9:	add    ebp,DWORD PTR [esp+esi*2-0x1]
  417ead:	cmp    DWORD PTR [ebp-0x34],0xffffff83
  417eb1:	jo     0x417e82
  417eb3:	add    DWORD PTR [eax],0xcc4cff
  417eb9:	mov    ebp,0xff7d3e
  417ebe:	pop    es
  417ebf:	inc    DWORD PTR [eax]
  417ec1:	out    dx,al
  417ec2:	inc    edi
  417ec3:	mov    edi,edi
  417ec5:	jmp    DWORD PTR [edi+0x0]
  417ec8:	call   DWORD PTR [ecx+0x21]
  417ecb:	jnp    0x417ecd
  417ecd:	(bad)  
  417ece:	jmp    0x83f4:0x5c1300ff
  417ed5:	jmp    DWORD PTR [edi-0x1]
  417ed8:	jmp    FWORD PTR [edi+0x83e4f5]
  417ede:	hlt    
  417edf:	add    DWORD PTR [eax],0x68
  417ee2:	cmp    al,BYTE PTR [eax+eax*1]
  417ee5:	mov    DWORD PTR [edi],esp
  417ee7:	add    bh,bh
  417ee9:	mov    eax,ds:0xff2000
  417eee:	sub    eax,DWORD PTR [ebx-0x5e8ae100]
  417ef4:	inc    DWORD PTR [ebx-0x180000d5]
  417efa:	and    bl,BYTE PTR [esi]
  417efc:	add    bh,bh
  417efe:	dec    edi
  417eff:	add    BYTE PTR [ebx-0x215e2f],al
  417f05:	dec    DWORD PTR [ecx]
  417f07:	dec    DWORD PTR [ecx-0x128a5a]
  417f0d:	inc    DWORD PTR [eax+eax*1-0x28dc4300]
  417f14:	add    BYTE PTR [eax],al
  417f16:	push   ecx
  417f17:	(bad)  
  417f18:	call   DWORD PTR [edx+0x2e]
  417f1b:	mov    edx,0xfd0000
  417f20:	dec    DWORD PTR [ebx-0x7c7c294c]
  417f26:	ss cmp edi,0xffffffb8
  417f2a:	outs   dx,DWORD PTR ds:[esi]
  417f2b:	pusha  
  417f2c:	add    bh,bh
  417f2e:	in     eax,dx
  417f2f:	(bad)  
  417f30:	call   FWORD PTR [edi]
  417f32:	lahf   
  417f33:	push   ebp
  417f34:	(bad)  
  417f35:	(bad)  
  417f36:	(bad)  
  417f37:	(bad)  
  417f38:	call   FWORD PTR [ebp+0x4c]
  417f3b:	jg     0x417f3d
  417f3d:	xor    ebp,0x0
  417f40:	dec    DWORD PTR [ecx+eiz*4]
  417f43:	mov    eax,ds:0x1cff89
  417f48:	add    ch,bl
  417f4a:	rol    DWORD PTR ds:[eax],cl
  417f4d:	add    BYTE PTR [ebx],cl
  417f4f:	add    bh,bh
  417f51:	inc    ebp
  417f52:	xchg   ebp,eax
  417f53:	add    BYTE PTR ss:[eax],al
  417f56:	je     0x417f57
  417f58:	sub    DWORD PTR [ecx],0xfffffff5
  417f5b:	xchg   ecx,eax
  417f5c:	dec    esp
  417f5e:	xchg   esi,eax
  417f5f:	(bad)  
  417f60:	call   FWORD PTR [eax]
  417f62:	mov    dh,0x50
  417f64:	inc    DWORD PTR [eax]
  417f66:	test   al,0xff
  417f68:	add    BYTE PTR [edx],bl
  417f6a:	push   esi
  417f6b:	and    DWORD PTR [eax],eax
  417f6d:	add    al,bl
  417f6f:	cmp    edi,0xffffff88
  417f72:	int3   
  417f73:	mov    edi,?
  417f75:	jmp    DWORD PTR [eax+eax*1-0x54e0337d]
  417f7c:	add    bh,bh
  417f7e:	popf   
  417f7f:	dec    esp
  417f81:	xor    al,0xc6
  417f83:	sti    
  417f84:	add    BYTE PTR [ecx+0x70830009],cl
  417f8a:	and    eax,DWORD PTR [ebp+0x6883ff]
  417f90:	add    BYTE PTR [ebx+esi*1-0x387c7c51],dh
  417f97:	cmp    edi,0x22
  417f9a:	cs add eax,0xff4dff89
  417fa0:	add    DWORD PTR [edx],0x4f
  417fa3:	(bad)  
  417fa4:	inc    DWORD PTR [ebx-0x6dff331c]
  417faa:	call   0xff89:0x49838920
  417fb1:	jl     0x417f63
  417fb3:	sahf   
  417fb4:	inc    DWORD PTR [eax]
  417fb6:	jle    0x417fb7
  417fb8:	(bad)  
  417fb9:	stc    
  417fba:	mov    dh,0x2d
  417fbc:	inc    DWORD PTR [eax]
  417fbe:	adc    edi,edi
  417fc0:	add    esi,0x18
  417fc3:	cwde   
  417fc4:	dec    esp
  417fc6:	(bad)  
  417fc7:	inc    DWORD PTR [eax]
  417fc9:	frstor [ebx]
  417fcb:	pushf  
  417fcc:	inc    DWORD PTR [eax]
  417fce:	inc    WORD PTR [ebx-0x3358c026]
  417fd5:	jmp    FWORD PTR [esi+0x0]
  417fd8:	add    al,cl
  417fda:	adc    eax,0x9f8300bc
  417fdf:	add    DWORD PTR [ebx-0xe9ad6f],0xffffffff
  417fe6:	pop    ebx
  417fe7:	inc    DWORD PTR [ebx+0x999f01]
  417fed:	add    BYTE PTR [esi-0x1],cl
  417ff0:	add    BYTE PTR [eax-0x48],ch
  417ff3:	(bad)  
  417ff4:	int3   
  417ff5:	and    DWORD PTR [edx+0x5892ffff],0x7f
  417ffc:	add    bh,bh
  417ffe:	mov    bh,0xcc
  418000:	call   FWORD PTR [ebx-0x7c008b77]
  418006:	dec    ebx
  418007:	cmp    edi,0xffffffb9
  41800a:	adc    edi,esp
  41800c:	dec    DWORD PTR [ecx+0xe89ffd3]
  418012:	mov    ebp,0xfbff8323
  418017:	mov    esp,ecx
  418019:	add    al,0x2
  41801b:	daa    
  41801c:	(bad)  
  41801d:	call   FWORD PTR ds:0xd1250089
  418023:	jbe    0x418024
  418025:	add    BYTE PTR [eax],dh
  418027:	int3   
  418028:	dec    DWORD PTR [ecx-0xff74fe]
  41802e:	int3   
  41802f:	add    BYTE PTR [eax],al
  418031:	popf   
  418032:	ficomp DWORD PTR [ecx+ecx*4+0x8342ff]
  418039:	out    dx,al
  41803a:	ss (bad) 
  41803c:	add    ah,cl
  41803e:	test   BYTE PTR [eax],al
  418040:	jmp    DWORD PTR [edx]
  418042:	(bad)
  418045:	mov    eax,esp
  418047:	(bad)  
  418048:	call   DWORD PTR [eax-0x7cceea]
  41804e:	mov    ds:0xd52900ff,eax
  418053:	xchg   DWORD PTR [eax],eax
  418055:	add    BYTE PTR [edi-0x5be80100],al
  41805b:	mov    ah,0x0
  41805d:	int3   
  41805e:	cs (bad) 
  418060:	call   ebx
  418062:	lock and bh,bh
  418065:	add    BYTE PTR [edi],al
  418067:	add    BYTE PTR [eax],al
  418069:	shl    DWORD PTR ds:0xe4ccffb3,1
  41806f:	(bad)  
  418070:	jmp    ecx
  418072:	jbe    0x418068
  418074:	add    ah,cl
  418076:	hlt    
  418077:	add    BYTE PTR [eax],al
  418079:	mov    ch,0x5c
  41807b:	ss (bad) 
  41807d:	push   DWORD PTR [ebx+0x288acc83]
  418083:	jp     0x418084
  418085:	int3   
  418086:	cld    
  418087:	dec    esp
  418089:	and    al,0x73
  41808b:	mov    ebx,0xcdff00
  418090:	add    dh,ch
  418092:	addr16 cwde 
  418094:	add    BYTE PTR [ecx+0x3300ff47],cl
  41809a:	mov    edx,0x1400ffcf
  41809f:	add    bh,bh
  4180a1:	push   esi
  4180a2:	enter  0x3b,0xff
  4180a6:	arpl   di,di
  4180a8:	add    bh,bl
  4180aa:	fwait
  4180ab:	repz int3 
  4180ad:	add    ah,al
  4180af:	add    BYTE PTR [eax],al
  4180b1:	and    ebx,DWORD PTR [esi]
  4180b3:	inc    eax
  4180b4:	mov    DWORD PTR [ebx-0x780033fe],eax
  4180ba:	loopne 0x41811f
  4180bc:	inc    DWORD PTR [ebx+0x28cc83a3]
  4180c2:	add    eax,0x99ff0077
  4180c7:	dec    esp
  4180c9:	xor    eax,0xffffe9df
  4180ce:	mov    dl,0x83
  4180d0:	add    BYTE PTR [edx+eax*2-0x8000002],dh
  4180d7:	inc    DWORD PTR [eax]
  4180d9:	retf   0xb3dc
  4180dc:	(bad)  
  4180dd:	call   FWORD PTR [edi+0xfc7ffff]
  4180e3:	inc    edx
  4180e4:	(bad)  
  4180e5:	jmp    DWORD PTR [ebx+0x0]
  4180e8:	mov    DWORD PTR [esi],eax
  4180ea:	push   edi
  4180eb:	inc    edx
  4180ec:	add    bh,bh
  4180ee:	dec    ebp
  4180ef:	inc    DWORD PTR [eax]
  4180f1:	ret    
  4180f2:	sub    eax,0xa0ffff09
  4180f7:	inc    DWORD PTR [eax]
  4180f9:	daa    
  4180fa:	pop    es
  4180fb:	sti    
  4180fc:	mov    edi,edi
  4180fe:	pusha  
  4180ff:	inc    DWORD PTR [eax]
  418101:	retf   0x5251
  418104:	add    BYTE PTR [eax],al
  418106:	inc    ebp
  418107:	add    BYTE PTR [eax],al
  418109:	arpl   dx,bp
  41810b:	ret    0xffff
  41810e:	repz inc DWORD PTR [eax]
  418111:	jbe    0x418138
  418113:	call   0x1310517
  418118:	jmp    DWORD PTR [ebx-0x7cffb22c]
  41811e:	stos   BYTE PTR es:[edi],al
  41811f:	mov    edi,edi
  418121:	xor    DWORD PTR [ebx+eax*1],edi
  418124:	(bad)  
  418125:	(bad)  
  418126:	(bad)  
  418127:	(bad)  
  418128:	inc    ebp
  41812a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41812b:	iret   
  41812c:	mov    edi,edi
  41812e:	xchg   ecx,eax
  41812f:	(bad)  
  418130:	call   FWORD PTR [edx]
  418132:	xor    bl,al
  418134:	dec    esp
  418136:	and    eax,0xb818ffcc
  41813b:	cmc    
  41813c:	cmp    edi,0x52
  41813f:	dec    DWORD PTR [ecx+0xa40afe]
  418145:	and    DWORD PTR [ecx],0xffffff89
  418148:	int3   
  418149:	int3   
  41814a:	dec    eax
  41814b:	dec    ebx
  41814c:	inc    DWORD PTR [eax]
  41814e:	in     eax,dx
  41814f:	add    ah,cl
  418151:	jg     0x4180f5
  418153:	pop    ds
  418154:	int3   
  418155:	sbb    DWORD PTR [esi+0x7645ffcc],0xffffff85
  41815c:	int3   
  41815d:	add    BYTE PTR [esi-0x1],dh
  418160:	add    BYTE PTR [edx-0xffe6fd],dh
  418166:	mov    cl,0x0
  418168:	inc    eax
  41816a:	mov    ebx,0x7000ff82
  41816f:	dec    DWORD PTR [ecx-0x7cb2768c]
  418175:	add    BYTE PTR [eax+eax*1],bl
  418178:	dec    DWORD PTR [ebx+ebx*8-0x63]
  41817c:	mov    esp,ecx
  41817e:	push   ss
  41817f:	mov    DWORD PTR [eax],eax
  418181:	or     ecx,edx
  418183:	rol    DWORD PTR [eax],0xff
  418186:	dec    esp
  418187:	int3   
  418188:	(bad)  
  418189:	aas    
  41818a:	std    
  41818b:	push   ebx
  41818c:	cmp    edi,0xffffff97
  41818f:	add    ah,cl
  418191:	sub    eax,0xff6cec
  418196:	imul   eax,DWORD PTR [eax],0xaf02ffff
  41819c:	inc    DWORD PTR [eax]
  41819e:	out    0x89,al
  4181a0:	add    BYTE PTR [esi+edi*2+0x5389ffa5],al
  4181a7:	dec    esp
  4181a9:	add    BYTE PTR [esi],bh
  4181ab:	arpl   WORD PTR [ebx+0x830489],ax
  4181b1:	pop    ss
  4181b2:	repz data16 add BYTE PTR [eax],al
  4181b6:	rol    DWORD PTR [ebx+0xfb6f7cc],cl
  4181bc:	int3   
  4181bd:	(bad)  
  4181be:	jmp    0xff81:0x3a4c00ff
  4181c5:	jmp    DWORD PTR [esi]
  4181c7:	inc    DWORD PTR [eax]
  4181c9:	popa   
  4181ca:	ins    DWORD PTR es:[edi],dx
  4181cb:	mov    bl,0xff
  4181cd:	call   FWORD PTR [ecx-0x3a300077]
  4181d3:	add    BYTE PTR ds:[eax],al
  4181d6:	in     eax,0x0
  4181d8:	call   DWORD PTR [esi]
  4181da:	nop
  4181db:	xchg   ecx,eax
  4181dc:	inc    DWORD PTR [eax]
  4181de:	cdq    
  4181df:	add    bh,bh
  4181e1:	inc    edi
  4181e2:	sbb    eax,0xffc6ffff
  4181e8:	call   DWORD PTR [ebx-0xff2d97]
  4181ee:	cmp    bh,bh
  4181f0:	call   DWORD PTR [esi]
  4181f2:	dec    ebp
  4181f3:	jns    0x4181f4
  4181f5:	push   DWORD PTR [edi+edi*8-0x1]
  4181f9:	inc    eax
  4181fa:	imul   edi,DWORD PTR [edi+edi*8-0x1],0xfbff83cd
  418202:	cmp    DWORD PTR [edi-0xb23301],ecx
  418208:	int3   
  418209:	and    BYTE PTR [ebx+0x48ffcc7a],0xff
  418210:	call   FWORD PTR [eax-0x7cff1190]
  418216:	sbb    eax,0xdeff83
  41821b:	imul   edi,edi,0xcc8930ff
  418221:	jno    0x418270
  418223:	add    DWORD PTR gs:[eax],0x3a
  418227:	inc    DWORD PTR [eax]
  418229:	and    esi,DWORD PTR [edx+0x24ff8977]
  41822f:	(bad)  
  418230:	jmp    DWORD PTR [ebx-0xa]
  418233:	das    
  418234:	add    BYTE PTR [eax],al
  418236:	pop    ecx
  418237:	inc    DWORD PTR [eax]
  418239:	lea    esi,[esi]
  41823b:	cwde   
  41823c:	add    bh,bh
  41823e:	inc    ebp
  41823f:	add    bh,bh
  418241:	(bad)  
  418242:	jmp    FWORD PTR [edi-0x57]
  418245:	arpl   di,di
  418247:	jbe    0x418248
  418249:	add    BYTE PTR [ecx],dh
  41824b:	mov    edi,esp
  41824d:	add    BYTE PTR [edx-0x5ff34],bh
  418253:	and    DWORD PTR [edi],eax
  418255:	sti    
  418256:	int3   
  418257:	fcos   
  418259:	jmp    DWORD PTR [eax+0x44ff4e00]
  41825f:	cmp    edi,0xffffffdf
  418262:	int3   
  418263:	das    
  418264:	jo     0x4181ef
  418266:	add    BYTE PTR ds:0x8384cc00,bl
  41826c:	fs (bad) 
  41826e:	cli    
  41826f:	int3   
  418270:	inc    esi
  418272:	call   FWORD PTR [eax-0x16]
  418275:	enter  0xefcc,0xff
  418279:	jmp    FWORD PTR ds:0xddcc6b00
  41827f:	int3   
  418280:	call   esp
  418282:	add    BYTE PTR ds:0x68ff8682,ah
  418288:	inc    DWORD PTR [eax]
  41828a:	in     al,0xff
  41828c:	sbb    edi,edi
  41828e:	out    0xff,al
  418290:	jmp    FWORD PTR [edi+edi*8-0x203b58]
  418297:	and    bh,bh
  418299:	int3   
  41829a:	aad    0x0
  41829c:	(bad)  
  41829d:	jmp    DWORD PTR [eax+0x0]
  4182a0:	inc    DWORD PTR [ebp+0x0]
  4182a3:	aas    
  4182a4:	icebp  
  4182a5:	jecxz  0x41822a
  4182a7:	and    al,BYTE PTR [eax]
  4182a9:	call   FWORD PTR [edx+0x6900f700]
  4182af:	mov    edi,edi
  4182b1:	int    0x83
  4182b3:	cmp    eax,0x1d0020ce
  4182b8:	cmp    edi,0xffffffc9
  4182bb:	(bad)  
  4182bc:	clc    
  4182bd:	add    BYTE PTR ds:0x83e9ffff,bh
  4182c3:	mov    ss,WORD PTR es:[ebx+eax*4+0x1ffffc6]
  4182cb:	add    bh,ch
  4182cd:	jmp    DWORD PTR [ecx-0x33510001]
  4182d3:	jge    0x418340
  4182d5:	adc    DWORD PTR [eax],eax
  4182d7:	adc    al,BYTE PTR [eax]
  4182d9:	sub    ebp,0xffffff89
  4182dc:	leave  
  4182dd:	add    BYTE PTR ds:0xffb300ff,dh
  4182e3:	push   ebp
  4182e4:	adc    cl,dh
  4182e6:	(bad)  
  4182e7:	jns    0x4182e8
  4182e9:	cmp    edx,0xffffffcc
  4182ec:	iret   
  4182ed:	add    BYTE PTR ds:0x900000,dh
  4182f3:	(bad)  
  4182f4:	ds push eax
  4182f6:	add    ch,dl
  4182f8:	add    DWORD PTR [eax],0x1a
  4182fb:	mov    DWORD PTR [ebx+eax*4],edx
  4182fe:	pop    DWORD PTR [eax]
  418300:	dec    DWORD PTR [edi]
  418302:	add    eax,0x32
  418305:	push   0xffffff83
  418307:	out    0x0,eax
  418309:	int3   
  41830a:	add    al,BYTE PTR [eax]
  41830c:	inc    eax
  41830d:	add    BYTE PTR [ecx+0x3500ff],dh
  418313:	push   edx
  418314:	in     eax,dx
  418315:	lods   al,BYTE PTR ds:[esi]
  418316:	call   FWORD PTR [esi-0x1]
  418319:	add    BYTE PTR ds:0x3bff3183,bh
  41831f:	(bad)  
  418320:	push   ebp
  418322:	(bad)  
  418323:	ds dec ebx
  418325:	sti    
  418326:	add    dl,dh
  418328:	add    bh,bh
  41832a:	dec    esp
  41832b:	int3   
  41832c:	xchg   edi,eax
  41832d:	call   FWORD PTR [ecx-0xc10100]
  418333:	jmp    0xac40e396
  418338:	add    DWORD PTR [ebx+0x948957],0x6a
  41833f:	add    bh,bh
  418341:	pop    edx
  418342:	(bad)  
  418343:	out    dx,eax
  418344:	add    eax,0x430029
  418349:	jmp    edi
  41834b:	add    BYTE PTR [ecx-0x76005a00],ah
  418351:	ret    
  418352:	dec    ebp
  418354:	jmp    0xff9b0715
  418359:	add    BYTE PTR [edi+0x0],bl
  41835c:	inc    edx
  41835d:	dec    DWORD PTR [edx-0x7cca0000]
  418363:	imul   edx,DWORD PTR [eax],0x83b1ff6a
  418369:	jmp    FWORD PTR [edi-0x41006800]
  41836f:	inc    DWORD PTR [eax]
  418371:	inc    DWORD PTR cs:[ebp+0x13ff142a]
  418378:	add    bh,bh
  41837a:	les    eax,FWORD PTR [eax]
  41837c:	out    0x0,al
  41837e:	mov    ecx,0x8317ff89
  418383:	inc    ebx
  418384:	mov    al,0x5a
  418386:	adc    DWORD PTR [ebx],0xffffffff
  418389:	jmp    DWORD PTR [ebp+0x48ffb6cc]
  41838f:	(bad)  
  418390:	call   FWORD PTR [edx-0x2e8adc77]
  418396:	add    BYTE PTR [eax+0x5dff00],bh
  41839c:	repnz add BYTE PTR [ecx+0x0],bl
  4183a0:	jmp    FWORD PTR [edi+0x759c4f00]
  4183a6:	add    BYTE PTR [ecx+0x0],cl
  4183a9:	jmp    DWORD PTR [edi+edi*8]
  4183ac:	and    eax,0xffccb583
  4183b1:	jb     0x4183b2
  4183b3:	jo     0x41835f
  4183b5:	mov    BYTE PTR [ebx+0xdffcc91],0xff
  4183bc:	popa   
  4183bd:	add    BYTE PTR [eax-0x767b0000],dh
  4183c3:	jne    0x418382
  4183c5:	sub    bh,bh
  4183c7:	data16 add BYTE PTR [eax],al
  4183ca:	out    0xff,al
  4183cc:	cli    
  4183cd:	inc    ebp
  4183cf:	(bad)  
  4183d0:	call   DWORD PTR [edi+edi*8-0x70e495]
  4183d7:	jg     0x418362
  4183d9:	(bad)  
  4183da:	in     eax,dx
  4183db:	call   edi
  4183dd:	call   FWORD PTR [ecx-0x7c077c77]
  4183e3:	fidivr WORD PTR [esi]
  4183e5:	idiv   edi
  4183e7:	or     edi,edi
  4183e9:	add    BYTE PTR [ecx],dh
  4183eb:	add    cl,dl
  4183ed:	dec    edi
  4183ef:	inc    DWORD PTR [ebx+0x7675ff2a]
  4183f5:	inc    eax
  4183f6:	add    BYTE PTR [ebx+eax*4],bl
  4183f9:	add    ah,al
  4183fb:	jmp    FWORD PTR [ebx-0x77]
  4183fe:	ins    DWORD PTR es:[edi],dx
  4183ff:	inc    DWORD PTR [eax]
  418401:	in     al,dx
  418402:	add    BYTE PTR [esi+0x28899e74],cl
  418408:	dec    DWORD PTR [ecx+0x2ff85]
  41840e:	(bad)  
  41840f:	int3   
  418410:	add    BYTE PTR [ebx+eax*4],bl
  418413:	adc    al,0xfc
  418415:	dec    eax
  418416:	call   ebp
  418418:	inc    DWORD PTR [eax]
  41841a:	fdivp  st(7),st
  41841c:	(bad)  
  41841d:	inc    DWORD PTR [edi+edi*8]
  418420:	add    BYTE PTR [esp+ecx*8-0x4cbe25],al
  418427:	inc    edi
  418428:	(bad)  
  418429:	jmp    FWORD PTR [ecx+0x0]
  41842c:	popf   
  41842d:	add    BYTE PTR [eax+eax*1+0x0],bh
  418431:	cmp    DWORD PTR [eax],eax
  418433:	sub    cl,BYTE PTR [esi]
  418435:	jb     0x418436
  418437:	mov    edx,0x8789ff
  41843c:	pop    esi
  41843d:	cmp    DWORD PTR [edx+0x8ff83],0xffffff95
  418444:	jb     0x418417
  418446:	call   FWORD PTR [ebx]
  418448:	mov    DWORD PTR [eax],eax
  41844a:	adc    al,0xff
  41844c:	adc    BYTE PTR [ebx+0x1600ff80],al
  418452:	inc    DWORD PTR [esi+eiz*4]
  418455:	lods   al,BYTE PTR ds:[esi]
  418456:	cmp    DWORD PTR [edx-0x1],0xffffffff
  41845a:	xor    DWORD PTR [eax],eax
  41845c:	xor    eax,DWORD PTR [eax]
  41845e:	add    al,0x0
  418460:	dec    DWORD PTR [ebx]
  418462:	sub    DWORD PTR [edx+0x550038b5],0x0
  418469:	int3   
  41846a:	xor    eax,0x2a007dff
  41846f:	inc    DWORD PTR [eax]
  418471:	in     al,0x0
  418473:	push   ecx
  418474:	and    bl,ah
  418476:	add    BYTE PTR [ecx-0x7d],dl
  418479:	dec    DWORD PTR [ebx-0x1]
  41847c:	mov    al,ds:0xccff3f83
  418481:	(bad)  
  418482:	call   FWORD PTR [esi-0x5a]
  418485:	mov    esi,0x83c300
  41848a:	mov    ch,0xff
  41848c:	adc    edi,edi
  41848e:	add    edi,edi
  418490:	mov    ebx,ebp
  418492:	(bad)  
  418493:	clc    
  418494:	inc    ecx
  418495:	in     eax,0xff
  418497:	aad    0x83
  418499:	int3   
  41849a:	dec    ebx
  41849b:	add    BYTE PTR [eax+eax*1-0x33],cl
  41849f:	mov    DWORD PTR [ecx+0x224300cc],ecx
  4184a5:	push   ecx
  4184a6:	and    DWORD PTR [eax+0xbf8300],0xffffff84
  4184ad:	add    BYTE PTR [edi+edi*8],bl
  4184b0:	inc    eax
  4184b2:	dec    DWORD PTR [ebx-0x20]
  4184b5:	and    al,0x0
  4184b7:	pop    ds
  4184b8:	(bad)  
  4184b9:	inc    DWORD PTR [ecx]
  4184bb:	jmp    DWORD PTR [edi-0x1]
  4184be:	call   0x9d844c
  4184c3:	rcr    DWORD PTR [edx+edi*1],0xff
  4184c7:	add    eax,0x83edcc89
  4184cc:	stc    
  4184cd:	mov    DWORD PTR [edi],eax
  4184cf:	add    ah,cl
  4184d1:	jnp    0x4184d3
  4184d3:	xchg   esp,eax
  4184d4:	inc    edi
  4184d5:	add    DWORD PTR [eax],0x50ffff67
  4184db:	cmp    DWORD PTR [edi-0x34],0x69
  4184df:	inc    DWORD PTR [eax]
  4184e1:	mov    esp,0x7bd6fe00
  4184e6:	cmp    DWORD PTR [eax+0x0],0xffffffff
  4184ea:	mov    al,0x83
  4184ec:	mov    DWORD PTR [ebx-0x3ff7636],eax
  4184f2:	adc    DWORD PTR [edi-0x49],0xfffffffa
  4184f6:	add    BYTE PTR [ecx],al
  4184f8:	inc    DWORD PTR [eax]
  4184fa:	xchg   edi,eax
  4184fb:	jmp    DWORD PTR [ebp-0x1]
  4184fe:	mov    ds:0xff6f00ff,al
  418503:	daa    
  418504:	jp     0x4184b8
  418506:	add    BYTE PTR [edi+0x0],bl
  418509:	add    BYTE PTR [esi-0x6200f634],dh
  41850f:	add    BYTE PTR [eax],al
  418511:	push   ss
  418512:	add    BYTE PTR [edi-0x54ff258c],al
  418518:	int3   
  418519:	jmp    FWORD PTR [eax-0x36ff1601]
  41851f:	add    BYTE PTR [eax],al
  418521:	out    0xff,al
  418523:	test   eax,edx
  418525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418526:	add    ch,dh
  418528:	add    BYTE PTR [eax],al
  41852a:	mov    dl,0xff
  41852c:	cmp    al,0xff
  41852e:	dec    ebp
  41852f:	int3   
  418530:	(bad)  
  418531:	mov    ecx,0x5756faff
  418536:	jmp    FWORD PTR ds:0xff4bff83
  41853c:	mov    edx,0xff83e1ff
  418541:	jp     0x418542
  418543:	dec    ebx
  418544:	push   ss
  418545:	loope  0x418547
  418547:	int3   
  418548:	mov    edi,edi
  41854a:	enter  0xb4ff,0xff
  41854e:	cmp    edi,edi
  418550:	or     DWORD PTR [eax],0xffffffff
  418553:	jns    0x418599
  418555:	jne    0x418557
  418557:	mov    bh,0x83
  418559:	jmp    DWORD PTR [ebp+0x750017ff]
  41855f:	int3   
  418560:	dec    DWORD PTR [edi+0x0]
  418563:	mov    eax,gs
  418565:	mov    ah,0x0
  418567:	push   ebx
  418568:	mov    edi,edi
  41856a:	pop    esp
  41856b:	jmp    DWORD PTR [edi]
  41856d:	(bad)  
  41856e:	(bad)  
  418570:	jmp    DWORD PTR [edi+edi*8]
  418573:	mov    eax,ds:0x8ff8617
  418578:	mov    esp,ecx
  41857a:	push   es
  41857b:	(bad)  
  41857c:	js     0x41857e
  41857e:	dec    ebx
  41857f:	add    BYTE PTR [eax],al
  418581:	xchg   DWORD PTR [eax],eax
  418583:	mov    ds:0x80833267,al
  418588:	(bad)  
  418589:	call   DWORD PTR [edi]
  41858b:	dec    DWORD PTR [ebx]
  41858d:	add    BYTE PTR [eax],dl
  41858f:	inc    DWORD PTR [eax]
  418591:	jl     0x418516
  418593:	stos   DWORD PTR es:[edi],eax
  418594:	lods   al,BYTE PTR ds:[esi]
  418595:	dec    ebp
  418596:	and    DWORD PTR [ebx+0x0],0xffffffff
  41859a:	(bad)  
  41859b:	call   DWORD PTR [ecx]
  41859d:	int3   
  41859e:	ja     0x4185a0
  4185a0:	add    BYTE PTR [ebp-0x1],bh
  4185a3:	lods   al,BYTE PTR ds:[esi]
  4185a4:	push   esi
  4185a5:	jbe    0x4185a7
  4185a7:	(bad)  
  4185a8:	inc    DWORD PTR [ebx+0x62ff49]
  4185ae:	(bad)  
  4185af:	add    bh,bh
  4185b1:	stos   BYTE PTR es:[edi],al
  4185b2:	add    BYTE PTR [ecx],dl
  4185b4:	scas   eax,DWORD PTR es:[edi]
  4185b5:	sbb    edi,edi
  4185b7:	fdiv   st(7),st
  4185b9:	(bad)  
  4185ba:	mov    edx,0x7700d3ff
  4185bf:	add    bh,bh
  4185c1:	sar    edi,cl
  4185c3:	cmp    edx,DWORD PTR [ebp-0x6700d2]
  4185c9:	mov    DWORD PTR [ecx],eax
  4185cb:	add    BYTE PTR [edx],ah
  4185cd:	mov    edi,ebx
  4185cf:	(bad)  
  4185d0:	call   FWORD PTR [edx]
  4185d2:	or     DWORD PTR [ebx],0xffffffee
  4185d5:	rol    DWORD PTR [ebx+0x7fff0051],cl
  4185db:	int3   
  4185dc:	inc    eax
  4185dd:	dec    DWORD PTR [edx-0x1]
  4185e0:	add    BYTE PTR [ebx-0x7d],ch
  4185e3:	(bad)  
  4185e5:	scas   al,BYTE PTR es:[edi]
  4185e6:	add    BYTE PTR [edi-0x1],bh
  4185e9:	jmp    DWORD PTR [edi]
  4185eb:	add    cl,bl
  4185ed:	push   ecx
  4185ef:	(bad)  
  4185f0:	push   DWORD PTR ds:0x8f111000
  4185f6:	dec    eax
  4185f8:	inc    DWORD PTR [ebx-0x76c1762f]
  4185fe:	(bad)  
  4185ff:	int3   
  418600:	call   edx
  418602:	jmp    DWORD PTR [edx+0x7aff9f7e]
  418608:	add    BYTE PTR [ebx-0x76b20007],al
  41860e:	push   esp
  41860f:	dec    esp
  418611:	mov    ebx,0x29a9dcff
  418616:	add    BYTE PTR [eax-0xf00034],al
  41861c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41861d:	call   DWORD PTR [ecx]
  41861f:	dec    DWORD PTR [ecx+0x44deff4c]
  418625:	into   
  418626:	add    cl,bh
  418628:	cmp    edi,0x4f
  41862b:	jmp    DWORD PTR [eax-0x7d]
  41862e:	fdivr  st,st(7)
  418630:	add    BYTE PTR [ebx],al
  418632:	inc    DWORD PTR [eax+0x7c8992d1]
  418638:	add    BYTE PTR [eax],al
  41863a:	add    DWORD PTR [eax],0x8390ff18
  418640:	dec    ebp
  418642:	add    BYTE PTR [ebx-0x33007c5c],ch
  418648:	add    bh,bh
  41864a:	jmp    0x844204d8
  41864f:	(bad)  
  418650:	call   edi
  418652:	inc    edi
  418654:	sub    eax,0xcc89ff9f
  418659:	push   DWORD PTR [edi+edi*8]
  41865c:	into   
  41865d:	adc    DWORD PTR [edi],0xffffff83
  418660:	add    BYTE PTR [ecx],cl
  418662:	inc    DWORD PTR ds:0x42ffafa3
  418668:	add    bh,bh
  41866a:	push   ds
  41866b:	sub    DWORD PTR [ebx-0x7c3d34],0x45
  418672:	call   DWORD PTR [ebx+0x42007783]
  418678:	int3   
  418679:	jmp    esp
  41867b:	call   DWORD PTR [edx+0x8396ff]
  418681:	add    bh,bh
  418683:	(bad)
  418687:	xor    al,0x0
  418689:	add    BYTE PTR [edi],ah
  41868b:	add    ch,dh
  41868d:	mov    ebp,eax
  41868f:	add    DWORD PTR [ebx-0x1a460038],0xffffff8e
  418696:	(bad)  
  418697:	mov    eax,0x5bccff
  41869c:	dec    esp
  41869d:	jmp    FWORD PTR [ebx]
  41869f:	mov    esp,ecx
  4186a1:	mov    WORD PTR [ebx-0x7c56faa7],es
  4186a7:	ds (bad) 
  4186a9:	push   DWORD PTR [ecx-0x1]
  4186ac:	stos   DWORD PTR es:[edi],eax
  4186ad:	add    BYTE PTR [edx-0x7c210001],ch
  4186b3:	push   eax
  4186b4:	mov    esp,0x59ff8c
  4186b9:	and    esi,0xffffff89
  4186bc:	cmp    bh,0x78
  4186bf:	int3   
  4186c0:	mov    DWORD PTR [edi-0x53e2777d],esi
  4186c6:	adc    DWORD PTR [eax-0x917c01],0x3c
  4186cd:	(bad)  
  4186ce:	clc    
  4186cf:	dec    DWORD PTR [ecx-0x6bca001a]
  4186d5:	loop   0x41865a
  4186d7:	(bad)  
  4186d9:	add    dl,ch
  4186db:	inc    DWORD PTR ds:0xc100
  4186e1:	test   eax,0x3f7f9a00
  4186e6:	add    BYTE PTR [edx],al
  4186e8:	(bad)  
  4186e9:	(bad)  
  4186ea:	dec    esp
  4186ec:	sub    al,0x0
  4186ee:	xchg   edx,eax
  4186ef:	add    bh,bh
  4186f1:	xchg   esi,eax
  4186f2:	jmp    DWORD PTR [edx-0x11]
  4186f5:	add    eax,0xff89caff
  4186fa:	mov    esp,0x35009700
  4186ff:	inc    DWORD PTR [eax]
  418701:	sub    al,BYTE PTR [eax]
  418703:	mov    eax,0xdaffeb8f
  418708:	add    bh,bh
  41870a:	add    BYTE PTR [eax],0x1a
  41870d:	push   DWORD PTR [edi+edi*8-0x3200b401]
  418714:	in     al,0x55
  418716:	cmp    DWORD PTR [ebx-0x1c0001],0xffffff87
  41871d:	int3   
  41871e:	out    0x83,eax
  418720:	int3   
  418721:	and    edi,edi
  418723:	add    edx,DWORD PTR [edi+edi*1]
  418726:	add    BYTE PTR ds:0xcca1ffff,ch
  41872c:	scas   al,BYTE PTR es:[edi]
  41872d:	push   DWORD PTR [edi-0xb70001]
  418733:	add    DWORD PTR [ebx],edi
  418735:	xor    bh,bh
  418737:	clc    
  418738:	inc    DWORD PTR [ebx-0xd833e8]
  41873e:	fiadd  WORD PTR [eax]
  418740:	add    BYTE PTR [ebp+0x3d37c00],ch
  418746:	adc    DWORD PTR [eax-0x1],0x0
  41874a:	mov    ah,0xff
  41874c:	test   esp,ecx
  41874e:	ins    DWORD PTR es:[edi],dx
  41874f:	add    BYTE PTR [ebx+0x214dffd2],al
  418755:	js     0x418723
  418757:	mov    ds:0x835affff,al
  41875c:	aad    0xcc
  41875e:	pop    DWORD PTR [eax]
  418760:	int3   
  418761:	in     al,dx
  418762:	push   DWORD PTR [edx-0x67]
  418765:	dec    edi
  418766:	push   edx
  418768:	add    DWORD PTR [ebx+0x76008b],0xfffffffb
  41876f:	(bad)  
  418770:	jmp    FWORD PTR [ebx-0x5351ef01]
  418776:	add    BYTE PTR [edx-0x9a0001],bh
  41877c:	jge    0x41877d
  41877e:	mov    ds:0xff3900ff,al
  418783:	scas   eax,DWORD PTR es:[edi]
  418784:	stos   DWORD PTR es:[edi],eax
  418785:	clc    
  418786:	push   DWORD PTR [ecx-0x760e0077]
  41878c:	dec    ebp
  41878d:	and    DWORD PTR ds:0xffe8ff83,0xffffffee
  418794:	xchg   DWORD PTR [edi-0x7c763101],ebp
  41879a:	adc    eax,0x9dffb7ff
  41879f:	(bad)  
  4187a0:	inc    DWORD PTR [esp+ecx*8]
  4187a3:	in     al,dx
  4187a4:	mov    esp,0x8986ff85
  4187a9:	mov    DWORD PTR [edi],ecx
  4187ab:	(bad)  
  4187ac:	cmp    eax,0xccffa900
  4187b1:	out    dx,al
  4187b2:	add    BYTE PTR [esi+edi*2-0x18],dl
  4187b6:	(bad)  
  4187b7:	jg     0x4187b8
  4187b9:	call   FWORD PTR [ebx]
  4187bb:	jmp    FWORD PTR [ebp-0x1]
  4187be:	dec    ebx
  4187bf:	add    BYTE PTR [eax],al
  4187c1:	sub    bh,bh
  4187c3:	std    
  4187c4:	lods   al,BYTE PTR ds:[esi]
  4187c5:	lds    eax,FWORD PTR [eax]
  4187c7:	xchg   edi,eax
  4187c8:	inc    DWORD PTR [ebx-0x4e3320]
  4187ce:	dec    edi
  4187cf:	(bad)  
  4187d0:	(bad)  
  4187d1:	fdivp  st(7),st
  4187d3:	test   bl,al
  4187d5:	(bad)  
  4187d6:	int3   
  4187d7:	and    eax,0x9900ff
  4187dc:	add    eax,DWORD PTR [eax]
  4187de:	pushf  
  4187df:	(bad)  
  4187e0:	dec    DWORD PTR [edx+0x0]
  4187e3:	mov    esp,0x37ffe6a6
  4187e8:	(bad)  
  4187e9:	inc    DWORD PTR [ecx]
  4187eb:	push   DWORD PTR [ebp+0xff4900]
  4187f1:	jmp    DWORD PTR gs:[edi]
  4187f4:	test   al,0xab
  4187f6:	call   FWORD PTR [ebx-0x7d]
  4187f9:	add    BYTE PTR [ecx+ecx*4-0xe100fc],bl
  418800:	inc    ebx
  418802:	add    bh,ch
  418804:	into   
  418805:	or     eax,0xffa8ff
  41880a:	mov    ds:0x28007400,eax
  41880f:	inc    DWORD PTR [ebx-0x58bffff]
  418815:	inc    BYTE PTR [eax]
  418817:	call   0xff7f:0xb68900
  41881e:	mov    ch,0xff
  418820:	sbb    DWORD PTR ds:0x8cfe76cc,0x0
  418827:	mov    dh,0xff
  418829:	add    BYTE PTR [edx+0x0],dl
  41882c:	enter  0x7189,0xff
  418830:	(bad)  
  418831:	out    dx,eax
  418832:	jmp    FWORD PTR [ebx]
  418834:	jbe    0x4187f8
  418836:	call   ebp
  418838:	int3   
  418839:	add    ch,cl
  41883b:	call   FWORD PTR [esi-0x7c00a27d]
  418841:	aam    0xff
  418843:	aam    0xa6
  418845:	call   0x1412049
  41884a:	cld    
  41884b:	call   DWORD PTR [eax+0x85ff]
  418851:	jo     0x41881f
  418853:	and    eax,0x36000bb8
  418858:	dec    DWORD PTR [ecx+0x60059]
  41885e:	pop    ebp
  41885f:	(bad)  
  418860:	inc    DWORD PTR [edi+0x8d54489]
  418866:	adc    esp,0xffffffcc
  418869:	sub    DWORD PTR [edx+0x0],0x47
  41886d:	sub    DWORD PTR [esi],0xffffffcc
  418870:	and    edx,0x0
  418873:	dec    edx
  418874:	push   es
  418875:	loope  0x418876
  418877:	test   al,0xcc
  418879:	dec    DWORD PTR [edi]
  41887b:	push   DWORD PTR [eax+eax*1]
  41887e:	ds (bad) 
  418880:	jmp    DWORD PTR [ebx]
  418882:	xor    DWORD PTR [edi+ecx*1+0x9bff83],0x0
  41888a:	add    al,0x0
  41888c:	int    0xff
  41888e:	fld    DWORD PTR [eax]
  418890:	(bad)  
  418891:	mov    edx,0xdd0ce200
  418896:	inc    esp
  418898:	inc    DWORD PTR [eax]
  41889a:	dec    ebx
  41889b:	int3   
  41889c:	retf   0x6dff
  41889f:	mov    edi,edi
  4188a1:	arpl   WORD PTR [ecx+0xd8ec97],cx
  4188a7:	sahf   
  4188a8:	mov    edi,edi
  4188aa:	xor    eax,DWORD PTR [eax]
  4188ac:	mov    ecx,0xffffd900
  4188b1:	mov    edi,0x90d70500
  4188b6:	mov    eax,esi
  4188b8:	cmp    edi,0x6a
  4188bb:	add    bl,dl
  4188bd:	push   DWORD PTR [ecx+0x0]
  4188c0:	add    BYTE PTR [ebx-0x1],ah
  4188c3:	jnp    0x418919
  4188c5:	xchg   edx,eax
  4188c6:	add    BYTE PTR [eax-0x33f60100],bl
  4188cc:	cmp    bh,0x9
  4188cf:	add    bh,bh
  4188d1:	pop    ss
  4188d2:	mov    DWORD PTR [ebx],ebp
  4188d4:	imul   edx,DWORD PTR [ebx],0xffffff89
  4188d7:	test   eax,0xff0c0083
  4188dc:	sahf   
  4188dd:	add    BYTE PTR ds:0x23ffff,bh
  4188e3:	dec    ecx
  4188e4:	std    
  4188e5:	pop    ebp
  4188e6:	mov    DWORD PTR [ecx-0xd0ff7d],edx
  4188ec:	xchg   ebx,eax
  4188ed:	add    BYTE PTR [ebx],ch
  4188ef:	(bad)  
  4188f0:	jmp    DWORD PTR [ecx]
  4188f2:	add    BYTE PTR [ebx],bh
  4188f4:	jp     0x4188d1
  4188f6:	jmp    ecx
  4188f8:	add    BYTE PTR [eax],al
  4188fa:	push   esp
  4188fb:	and    edi,0xffffffff
  4188fe:	int3   
  4188ff:	int3   
  418900:	push   DWORD PTR [edi+0x0]
  418903:	mov    edx,0x63006155
  418908:	inc    DWORD PTR [ebx-0x25ff46]
  41890e:	pop    esp
  41890f:	mov    DWORD PTR [eax],eax
  418911:	and    al,0xff
  418913:	clc    
  418914:	stos   BYTE PTR es:[edi],al
  418915:	inc    DWORD PTR ds:[edx]
  418918:	dec    DWORD PTR [ecx+0x83890c]
  41891e:	push   esi
  41891f:	add    bh,bh
  418921:	jb     0x418922
  418923:	dec    esi
  418924:	adc    BYTE PTR [esi-0x1],0x28
  418928:	add    DWORD PTR [eax],0x53
  41892b:	add    BYTE PTR [edi+0xff7f00],dl
  418931:	dec    edi
  418932:	inc    ebp
  418934:	das    
  418935:	sti    
  418936:	inc    ecx
  418938:	add    bh,bh
  41893a:	cdq    
  41893b:	sbb    DWORD PTR ds:0x890021ff,0x3c
  418942:	sbb    DWORD PTR [ebx-0x52765b75],0xffffffff
  418949:	add    BYTE PTR ds:0x61ffa0ff,dh
  41894f:	(bad)  
  418950:	dec    DWORD PTR [edx+0x54061300]
  418956:	push   DWORD PTR [edi]
  418958:	or     esp,0x37
  41895b:	add    BYTE PTR ds:0xff1400,ch
  418961:	push   esi
  418962:	(bad)  
  418963:	jns    0x4189cc
  418965:	dec    eax
  418966:	mov    DWORD PTR [ecx-0x27c01],ebp
  41896c:	ins    DWORD PTR es:[edi],dx
  41896d:	call   DWORD PTR [ebx-0x220100]
  418973:	in     al,0x7c
  418975:	jmp    FWORD PTR es:[edi+edi*8-0x1]
  41897a:	and    DWORD PTR [ecx-0x7c2c00ef],ecx
  418980:	push   esi
  418982:	(bad)  
  418983:	dec    BYTE PTR [ebp-0x33ac00e1]
  418989:	add    BYTE PTR [eax],dh
  41898b:	add    BYTE PTR [ebx+0xb00],ch
  418991:	or     al,0x0
  418993:	sub    eax,0x88cc5f0a
  418998:	add    bh,bh
  41899a:	push   0xffffffff
  41899c:	aaa    
  41899d:	call   FWORD PTR [edi-0x76eb0001]
  4189a3:	cld    
  4189a4:	(bad)  
  4189a5:	rol    DWORD PTR [ebx-0x3fffff57],1
  4189ab:	mov    DWORD PTR [ecx],ebx
  4189ad:	add    BYTE PTR ds:0x836800ff,ch
  4189b3:	push   ds
  4189b4:	scas   eax,DWORD PTR es:[edi]
  4189b5:	jecxz  0x418940
  4189b7:	add    al,0xff
  4189b9:	add    BYTE PTR [edi+edi*8-0x39],dl
  4189bd:	add    BYTE PTR [esi-0xac0100],dl
  4189c3:	nop
  4189c4:	push   ds
  4189c5:	lock inc edi
  4189c8:	int3   
  4189c9:	int3   
  4189ca:	jmp    0x8983:0x588333ff
  4189d1:	add    BYTE PTR es:[esi-0x1700be33],dh
  4189d8:	add    bh,bh
  4189da:	mov    cs,esp
  4189dc:	js     0x418961
  4189de:	xchg   edx,eax
  4189df:	inc    DWORD PTR [eax]
  4189e1:	pop    ebx
  4189e2:	jmp    DWORD PTR [ecx+0x7f]
  4189e5:	mov    ds:0xffff5300,al
  4189ea:	loopne 0x41896f
  4189ec:	inc    esp
  4189ed:	add    BYTE PTR [ebp-0x34],dh
  4189f0:	jmp    esi
  4189f2:	int3   
  4189f3:	stos   DWORD PTR es:[edi],eax
  4189f4:	ficomp WORD PTR [esi+0x0]
  4189f7:	or     edi,edi
  4189f9:	add    BYTE PTR [eax-0x1],bh
  4189fc:	pushf  
  4189fd:	jmp    ecx
  4189ff:	(bad)  
  418a00:	dec    DWORD PTR [edi+0x0]
  418a03:	jmp    0xcc00:0x87ff094e
  418a0a:	inc    esp
  418a0b:	inc    DWORD PTR [ebp-0xff4d01]
  418a11:	sti    
  418a12:	add    BYTE PTR [esi+0xb],ch
  418a15:	mov    eax,ds:0xff9a00
  418a1a:	pop    ss
  418a1b:	add    BYTE PTR [eax+0x833d00],al
  418a21:	idiv   edi
  418a23:	dec    ebx
  418a24:	mov    esp,?
  418a26:	inc    DWORD PTR [eax-0x1]
  418a29:	call   DWORD PTR ds:0x9000ae00
  418a2f:	(bad)  
  418a30:	jmp    FWORD PTR [eax-0x1]
  418a33:	push   edi
  418a34:	fnop   
  418a36:	call   DWORD PTR [edx]
  418a38:	inc    DWORD PTR [eax]
  418a3a:	in     al,0xff
  418a3c:	or     al,0xff
  418a3e:	les    eax,FWORD PTR [eax]
  418a40:	inc    DWORD PTR [eax-0x1]
  418a43:	and    eax,0x8200615b
  418a48:	add    bh,bh
  418a4a:	ds add ch,cl
  418a4d:	jmp    DWORD PTR [ebx-0x1]
  418a50:	mov    DWORD PTR [eax],ecx
  418a52:	(bad)  
  418a53:	stc    
  418a54:	pop    ebp
  418a55:	cdq    
  418a56:	add    BYTE PTR [ecx],al
  418a58:	inc    DWORD PTR [eax]
  418a5a:	aad    0xff
  418a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a5d:	mov    DWORD PTR [esi],ecx
  418a5f:	add    bh,bh
  418a61:	sub    eax,0xdd8cb689
  418a66:	add    dh,cl
  418a68:	add    BYTE PTR [eax],al
  418a6a:	pop    ebp
  418a6b:	int3   
  418a6c:	xchg   edi,eax
  418a6d:	add    ah,ah
  418a6f:	add    bh,bh
  418a71:	push   es
  418a72:	add    dh,cl
  418a74:	outs   dx,BYTE PTR ds:[esi]
  418a75:	idiv   edi
  418a77:	push   ebp
  418a78:	add    BYTE PTR [ebx+0x9c83d8],al
  418a7e:	mov    edi,edi
  418a80:	add    dl,dh
  418a82:	call   DWORD PTR [ecx-0x69]
  418a85:	inc    eax
  418a86:	add    bl,ch
  418a88:	cmp    edi,0xffffffea
  418a8b:	dec    DWORD PTR [edi+edi*8-0x237c7ce6]
  418a92:	add    DWORD PTR [eax-0xc002419],0xffffff83
  418a99:	inc    ecx
  418a9b:	push   DWORD PTR ds:0xffcc2e89
  418aa1:	mov    ds:0xd92d03ff,eax
  418aa6:	call   DWORD PTR [eax+eax*1-0x58ff8601]
  418aad:	add    BYTE PTR [ebx+0x0],ah
  418ab0:	xor    esp,0xffffffff
  418ab3:	in     eax,0xe7
  418ab5:	mov    ds:0xffffa000,eax
  418aba:	xor    bh,bh
  418abc:	adc    al,0x0
  418abe:	fwait
  418abf:	inc    DWORD PTR [ebx-0x4562005a]
  418ac5:	xor    bh,bh
  418ac7:	mov    ds:0xdaccff,eax
  418acc:	push   esi
  418acd:	cmp    DWORD PTR [eax+eax*1-0x77002501],0x78
  418ad5:	or     DWORD PTR [ecx-0x220000fa],ecx
  418adb:	jmp    esi
  418add:	sbb    ebp,0x0
  418ae0:	call   FWORD PTR [eax+eax*1+0x48]
  418ae4:	add    ah,dh
  418ae6:	call   FWORD PTR [esp+ecx*8]
  418ae9:	(bad)  
  418aea:	fadd   QWORD PTR [eax]
  418aec:	inc    esp
  418aed:	jmp    DWORD PTR [ebx-0x1]
  418af0:	mov    esp,esp
  418af2:	add    BYTE PTR [ebp+edi*8-0x7f],ah
  418af6:	push   DWORD PTR [eax-0x77]
  418af9:	jmp    FWORD PTR [ecx]
  418afb:	add    BYTE PTR [edx-0x34],bl
  418afe:	in     al,0x83
  418b00:	push   DWORD PTR [edi+edi*8]
  418b03:	cli    
  418b04:	ins    BYTE PTR es:[edi],dx
  418b05:	pop    ss
  418b06:	add    BYTE PTR [ebx-0x1],dh
  418b09:	call   DWORD PTR [ecx-0x3300ea00]
  418b0f:	(bad)  
  418b10:	(bad)  
  418b11:	mov    esp,0x283317ff
  418b16:	add    cl,dl
  418b18:	add    ah,cl
  418b1a:	add    al,0xcc
  418b1c:	enter  0xe5ff,0xff
  418b20:	jmp    FWORD PTR [edi+edi*8]
  418b23:	stos   BYTE PTR es:[edi],al
  418b24:	sar    DWORD PTR [edi+edi*8],1
  418b27:	cwde   
  418b28:	dec    DWORD PTR [ecx-0x335c00d5]
  418b2e:	inc    esp
  418b2f:	(bad)  
  418b30:	push   DWORD PTR [eax+eax*1]
  418b33:	inc    edx
  418b34:	jns    0x418b4e
  418b36:	call   FWORD PTR [edi-0x7d]
  418b39:	int3   
  418b3a:	adc    al,0xff
  418b3c:	loop   0x418b3d
  418b3e:	je     0x418b40
  418b40:	jmp    DWORD PTR [edi+edi*8-0x7c7bf91c]
  418b47:	dec    eax
  418b48:	cmp    edi,0x68
  418b4b:	cmp    DWORD PTR [eax],0x0
  418b4e:	ret    0xffff
  418b51:	retf   0x1f00
  418b54:	mul    BYTE PTR [ebx+0xfffeff]
  418b5a:	xchg   ecx,eax
  418b5b:	call   esi
  418b5d:	call   FWORD PTR [ebx]
  418b5f:	cmp    edi,0xffffffc6
  418b62:	call   FWORD PTR [eax+0x64ff5b15]
  418b68:	inc    DWORD PTR [eax]
  418b6a:	test   DWORD PTR [eax],0xffe28357
  418b70:	add    BYTE PTR [edx+0xaf300],al
  418b76:	inc    DWORD PTR [eax+0x0]
  418b79:	add    BYTE PTR [esi-0x7d],bh
  418b7c:	arpl   WORD PTR [eax],ax
  418b7e:	xchg   edx,eax
  418b7f:	inc    DWORD PTR [eax]
  418b81:	cmp    eax,0x16fbe200
  418b86:	add    BYTE PTR [edx-0x1],ch
  418b89:	add    BYTE PTR [edi+0x74ccfb83],ch
  418b8f:	cmp    edi,0xffffffec
  418b92:	int3   
  418b93:	dec    edx
  418b94:	pop    ebp
  418b95:	push   DWORD PTR fs:[edi-0x76100001]
  418b9c:	add    al,0xff
  418b9e:	mov    ebx,0xff94ff83
  418ba3:	inc    ebp
  418ba4:	dec    ebp
  418ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ba6:	push   DWORD PTR [eax]
  418ba8:	add    BYTE PTR [eax],al
  418baa:	ud0    edi,edx
  418bad:	call   DWORD PTR [edi]
  418baf:	add    BYTE PTR [eax],al
  418bb1:	xchg   edi,eax
  418bb2:	or     ebp,0xffffff89
  418bb5:	call   FWORD PTR fs:[eax]
  418bb8:	add    BYTE PTR [eax],al
  418bba:	jae    0x418b45
  418bbc:	stos   DWORD PTR es:[edi],eax
  418bbd:	int3   
  418bbe:	dec    esp
  418bbf:	(bad)  
  418bc0:	jmp    FWORD PTR [esi]
  418bc2:	mov    DWORD PTR [edi-0x4fff8fdc],esp
  418bc8:	dec    esp
  418bca:	mov    DWORD PTR [eax],eax
  418bcc:	mov    ch,0x83
  418bce:	push   ss
  418bcf:	add    bh,bh
  418bd1:	in     eax,dx
  418bd2:	and    esp,0x7e
  418bd5:	in     eax,0x0
  418bd7:	mov    bh,0x0
  418bd9:	inc    esi
  418bdb:	mov    DWORD PTR [esi],eax
  418bdd:	add    al,ah
  418bdf:	(bad)  
  418be0:	push   DWORD PTR [edx+0x0]
  418be3:	push   0xffffffe9
  418be5:	(bad)  
  418be7:	and    DWORD PTR [eax],eax
  418be9:	add    BYTE PTR [esi],bl
  418beb:	add    BYTE PTR [edi],ch
  418bed:	call   FWORD PTR [esi-0xa37d00]
  418bf3:	popf   
  418bf4:	dec    ebx
  418bf5:	lock add dl,ch
  418bf8:	add    BYTE PTR [ebx-0x1f3400],al
  418bfe:	repnz dec esp
  418c01:	js     0x418b8c
  418c03:	cwde   
  418c04:	mov    cl,0x8a
  418c06:	add    BYTE PTR [ebx-0x1],ch
  418c09:	(bad)  
  418c0a:	dec    esp
  418c0c:	mov    ebp,0xffff76ff
  418c11:	sahf   
  418c12:	jmp    FWORD PTR [ebx]
  418c14:	adc    esp,DWORD PTR [ecx]
  418c16:	(bad)  
  418c17:	jle    0x418be5
  418c19:	add    BYTE PTR [ebx+0x0],dh
  418c1c:	and    al,0x83
  418c1e:	cmp    edi,edi
  418c20:	add    BYTE PTR [edi-0x34],bh
  418c23:	dec    ecx
  418c24:	mov    ebx,0x838383c6
  418c29:	push   DWORD PTR [ebp-0x7d]
  418c2c:	stos   DWORD PTR es:[edi],eax
  418c2d:	push   DWORD PTR ds:0xff0fcc00
  418c33:	sub    dh,BYTE PTR [esi+ebp*1+0x0]
  418c37:	(bad)  
  418c38:	add    BYTE PTR [ecx-0xd33c9],cl
  418c3e:	out    0x83,al
  418c40:	add    BYTE PTR [ecx],dh
  418c42:	call   FWORD PTR [eax]
  418c44:	out    dx,eax
  418c45:	cld    
  418c46:	adc    DWORD PTR [edx-0x1],0xffffffff
  418c4a:	mov    ebx,0x27ff32ff
  418c4f:	mov    DWORD PTR [eax],eax
  418c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c52:	add    ch,ah
  418c54:	adc    eax,DWORD PTR [edx-0x7d]
  418c57:	test   DWORD PTR [eax],0x2a004900
  418c5d:	int3   
  418c5e:	mov    ch,0xcc
  418c60:	and    ebp,0xffffffff
  418c63:	jne    0x418c59
  418c65:	int3   
  418c66:	call   ecx
  418c68:	add    BYTE PTR [eax],al
  418c6a:	outs   dx,BYTE PTR ds:[esi]
  418c6b:	sub    DWORD PTR [ecx+0xffb2ff],0xffffff8b
  418c72:	cmp    DWORD PTR [eax+edi*8-0x1c],0xffffffff
  418c77:	in     al,0xff
  418c79:	inc    DWORD PTR ds:0xaeff63ff
  418c7f:	dec    DWORD PTR [ecx+0x718eff1c]
  418c85:	xor    bh,bh
  418c87:	adc    al,0xff
  418c89:	dec    DWORD PTR [eax+eax*1+0x1c]
  418c8d:	add    BYTE PTR [edi+edi*8-0x42000c01],ah
  418c94:	dec    BYTE PTR [ecx-0xb97d]
  418c9a:	dec    eax
  418c9b:	add    dl,ah
  418c9d:	add    dl,bh
  418c9f:	(bad)  
  418ca0:	call   FWORD PTR [ebx-0x6c7e8c01]
  418ca6:	and    DWORD PTR [ecx-0x7ce8007d],0x41
  418cad:	call   FWORD PTR [edx]
  418caf:	mov    edi,edi
  418cb1:	mov    esp,0xab86a800
  418cb6:	mov    DWORD PTR [esp+ecx*8-0x59ff7c00],edx
  418cbd:	mov    DWORD PTR [edx],edx
  418cbf:	(bad)  
  418cc0:	inc    DWORD PTR [edi-0x6aa53401]
  418cc6:	mov    DWORD PTR [ebp+0x0],edx
  418cc9:	int3   
  418cca:	cmc    
  418ccb:	mov    DWORD PTR [ebp+0xffd5cc],eax
  418cd1:	mov    ds:0xfcd45bff,eax
  418cd6:	add    BYTE PTR [edi],bh
  418cd8:	inc    DWORD PTR [eax]
  418cda:	stos   DWORD PTR es:[edi],eax
  418cdb:	add    BYTE PTR [edx],bl
  418cdd:	add    BYTE PTR [edx-0x7d],dl
  418ce0:	add    BYTE PTR [ecx-0x1],dl
  418ce3:	(bad)  
  418ce4:	xchg   edx,eax
  418ce5:	adc    DWORD PTR [eax],eax
  418ce7:	jmp    0x83a659eb
  418cec:	push   eax
  418ced:	dec    DWORD PTR [esi-0x2eff7d]
  418cf3:	gs fwait
  418cf5:	inc    BYTE PTR [eax]
  418cf7:	mov    BYTE PTR [ebx-0x3e762100],0xcc
  418cfe:	inc    ebx
  418cff:	inc    DWORD PTR [ebx+0x5e7cff59]
  418d05:	rol    BYTE PTR [eax],cl
  418d07:	mov    ?,edi
  418d09:	jmp    DWORD PTR [ecx-0x34]
  418d0c:	push   ecx
  418d0d:	dec    DWORD PTR [edi+edi*8-0x1]
  418d11:	jns    0x418d12
  418d13:	inc    esp
  418d14:	xchg   esp,eax
  418d15:	pop    ebx
  418d16:	(bad)  
  418d17:	fild   WORD PTR [eax]
  418d19:	adc    eax,0xffffff83
  418d1c:	push   cs
  418d1d:	add    BYTE PTR [esi-0x1],bh
  418d20:	int3   
  418d21:	pushf  
  418d22:	or     DWORD PTR [edi-0x6e7c979f],0x0
  418d29:	add    BYTE PTR [edi-0x1],al
  418d2c:	mov    ebp,0xffcc3cff
  418d31:	cmp    BYTE PTR [eax],al
  418d33:	sar    DWORD PTR [eax-0x1b],1
  418d36:	push   DWORD PTR [ecx-0x7d]
  418d39:	(bad)  
  418d3a:	jge    0x418cbf
  418d3c:	sbb    bh,bh
  418d3e:	mov    DWORD PTR fs:[eax],eax
  418d41:	adc    BYTE PTR [eax],al
  418d43:	jb     0xcc8d23
  418d49:	mov    DWORD PTR [ecx+0x9cc60ff],esp
  418d4f:	inc    DWORD PTR [ebx+0x2cc389b8]
  418d55:	jbe    0x418d56
  418d57:	retf   0xffff
  418d5a:	sar    edi,1
  418d5c:	lds    eax,FWORD PTR [eax]
  418d5e:	enter  0x8383,0xf2
  418d62:	call   DWORD PTR [ecx]
  418d64:	sbb    eax,0x74ffe6
  418d69:	and    DWORD PTR [edi+edi*8-0x1d],0xffffffff
  418d6e:	or     DWORD PTR [eax],eax
  418d70:	add    BYTE PTR [eax-0x1],cl
  418d73:	jnp    0x418de2
  418d75:	nop
  418d76:	int3   
  418d77:	adc    eax,0x83f883ff
  418d7c:	stc    
  418d7d:	jmp    FWORD PTR [ebp-0xff01]
  418d83:	inc    edi
  418d84:	ins    DWORD PTR es:[edi],dx
  418d85:	aaa    
  418d86:	add    BYTE PTR [ebx-0x1],cl
  418d89:	call   ecx
  418d8b:	jmp    DWORD PTR [esi+0x0]
  418d8e:	iret   
  418d8f:	int3   
  418d90:	add    BYTE PTR [ebx],dl
  418d92:	int3   
  418d93:	scas   al,BYTE PTR es:[edi]
  418d94:	inc    esi
  418d95:	lods   eax,DWORD PTR ds:[esi]
  418d96:	push   DWORD PTR [esi+0x0]
  418d99:	push   DWORD PTR [edx]
  418d9b:	mov    DWORD PTR [ebx+0xffda83],edx
  418da1:	sub    al,BYTE PTR [eax]
  418da3:	xchg   ebx,eax
  418da4:	loopne 0x418d56
  418da6:	add    BYTE PTR [esi-0x7d],al
  418da9:	call   FWORD PTR [eax+0x0]
  418dac:	mov    esp,0xffff1aff
  418db1:	mov    ch,0xff
  418db3:	lods   al,BYTE PTR ds:[esi]
  418db4:	xor    ch,al
  418db6:	inc    DWORD PTR [ebp+0x58ccff]
  418dbc:	clc    
  418dbd:	add    BYTE PTR [ebx+0x0],ch
  418dc0:	add    BYTE PTR [ebx-0x7d],al
  418dc3:	cmp    ebp,edi
  418dc5:	sub    bh,bh
  418dc7:	sbb    BYTE PTR [ebx-0x7b005600],al
  418dcd:	or     esp,0xffffffff
  418dd0:	int3   
  418dd1:	pop    esi
  418dd2:	push   esi
  418dd4:	imul   esp,DWORD PTR [ecx],0xff8311ff
  418dda:	push   esp
  418ddb:	dec    DWORD PTR [ecx-0x767c5600]
  418de1:	popf   
  418de2:	add    ch,bl
  418de4:	or     BYTE PTR [eax+eax*1-0x79],dh
  418de8:	add    BYTE PTR [eax],al
  418dea:	es dec eax
  418ded:	mov    DWORD PTR [ebx],ebx
  418def:	inc    DWORD PTR [eax]
  418df1:	jmp    0x483:0x3d03acff
  418df8:	inc    DWORD PTR [eax]
  418dfa:	mov    edx,0x2dffcd00
  418dff:	add    BYTE PTR [eax],al
  418e01:	jmp    DWORD PTR ds:0x5857
  418e06:	cmp    DWORD PTR [edi-0x7ce3ff01],0xffffff98
  418e0d:	inc    DWORD PTR [edx-0x1]
  418e10:	dec    DWORD PTR [ebx-0x1]
  418e13:	int3   
  418e14:	mov    dh,cl
  418e16:	add    BYTE PTR [eax],ch
  418e18:	(bad)  
  418e19:	call   FWORD PTR [ebx]
  418e1b:	mov    DWORD PTR [ebx-0x1777],ebx
  418e21:	scas   al,BYTE PTR es:[edi]
  418e22:	adc    DWORD PTR [ebx],0xffffffc2
  418e25:	jbe    0x418e27
  418e27:	add    eax,0xffbcffff
  418e2c:	dec    ecx
  418e2d:	call   DWORD PTR [edi-0xcc0001]
  418e33:	cmp    DWORD PTR [eax+0x1f],0xffffff89
  418e37:	xchg   ebx,eax
  418e38:	dec    DWORD PTR [ecx-0x347cec]
  418e3e:	into   
  418e3f:	add    ah,cl
  418e41:	and    bh,bh
  418e43:	mov    ebx,0x3b001dff
  418e48:	add    BYTE PTR [eax],al
  418e4a:	dec    eax
  418e4b:	add    BYTE PTR [edx-0x33006401],al
  418e51:	stos   BYTE PTR es:[edi],al
  418e52:	call   FWORD PTR [esi+0x2c]
  418e55:	xor    eax,DWORD PTR [ebx+0x39ff003c]
  418e5b:	jmp    FWORD PTR [ebx-0x1]
  418e5e:	mov    ch,0x0
  418e60:	and    DWORD PTR [ecx-0x71bfb17d],0xffffffff
  418e67:	idiv   bh
  418e69:	call   DWORD PTR [edi+edi*8-0x19]
  418e6d:	(bad)  
  418e6e:	fdivr  st,st(7)
  418e70:	(bad)  
  418e71:	(bad)  
  418e72:	push   DWORD PTR [ebx+0x48]
  418e75:	hlt    
  418e76:	mov    DWORD PTR [esi],eax
  418e78:	inc    DWORD PTR [eax]
  418e7a:	sti    
  418e7b:	call   FWORD PTR [eax-0x7c7c3a01]
  418e81:	aaa    
  418e82:	(bad)  
  418e83:	fnstcw WORD PTR [esi+0xdbff41]
  418e89:	jmp    FWORD PTR [ebx]
  418e8b:	mov    esp,ecx
  418e8d:	add    DWORD PTR [eax-0x1],0xffffff83
  418e91:	cmp    al,0x0
  418e93:	aaa    
  418e94:	pushf  
  418e95:	(bad)  
  418e96:	push   DWORD PTR [edx]
  418e98:	add    ah,cl
  418e9a:	(bad)  
  418e9b:	jmp    DWORD PTR [eax+eax*1-0x28ff3319]
  418ea2:	add    BYTE PTR [edx+edi*4+0x44],ch
  418ea6:	add    BYTE PTR [edi],dl
  418ea8:	add    BYTE PTR [eax],al
  418eaa:	dec    edi
  418eab:	add    BYTE PTR [esi],ah
  418ead:	mov    DWORD PTR [ecx],esp
  418eaf:	add    bh,bh
  418eb1:	dec    ebp
  418eb2:	add    dl,bh
  418eb4:	or     ebx,DWORD PTR [ecx]
  418eb6:	jmp    DWORD PTR [edi+edi*8-0x1]
  418eba:	(bad)  
  418ebb:	call   FWORD PTR [edi+edi*8]
  418ebe:	mov    ch,0xff
  418ec0:	push   edi
  418ec2:	call   FWORD PTR [ebx]
  418ec4:	push   cs
  418ec5:	dec    DWORD PTR [ecx-0x4e7c7cdc]
  418ecb:	dec    DWORD PTR [esi]
  418ecd:	add    BYTE PTR [ebx-0x1],dh
  418ed0:	jmp    DWORD PTR [eax]
  418ed2:	xor    eax,0x7e
  418ed5:	xchg   edi,eax
  418ed6:	jmp    edi
  418ed8:	inc    DWORD PTR [eax]
  418eda:	adc    eax,0xacccc589
  418edf:	add    bh,bh
  418ee1:	sub    ecx,DWORD PTR [ecx+0xe1769c]
  418ee7:	jl     0x418ee9
  418ee9:	add    ah,ch
  418eeb:	add    BYTE PTR [esi],ch
  418eed:	add    DWORD PTR [esi+0xfd0000],0xfffffffc
  418ef4:	scas   al,BYTE PTR es:[edi]
  418ef5:	ja     0x418e80
  418ef7:	retf   
  418ef8:	inc    DWORD PTR [eax]
  418efa:	xor    DWORD PTR ds:[edx-0x3300247d],0xffffffa4
  418f02:	(bad)  
  418f03:	fidivr WORD PTR [ebx+0x74]
  418f06:	add    BYTE PTR [edx-0x710000],al
  418f0c:	iret   
  418f0d:	add    BYTE PTR [esi+0x67ffff],ah
  418f13:	jae    0x418ea1
  418f15:	adc    DWORD PTR gs:[ebx],0xffffff83
  418f19:	xor    DWORD PTR [esi+0x54004e00],0xffffff89
  418f20:	(bad)  
  418f21:	cmp    al,0xff
  418f23:	int3   
  418f24:	(bad)  
  418f25:	arpl   WORD PTR [ecx-0x54000031],cx
  418f2b:	add    BYTE PTR [ecx-0x34],bl
  418f2e:	sub    eax,DWORD PTR [eax]
  418f30:	jmp    FWORD PTR [edx-0x34]
  418f33:	adc    edi,DWORD PTR [eax+esi*2-0x7c00a001]
  418f3a:	pusha  
  418f3b:	add    BYTE PTR [ebx-0x1],dh
  418f3e:	inc    ebx
  418f3f:	add    bh,bh
  418f41:	call   0x40ff:0x250a32ff
  418f48:	or     DWORD PTR [ecx-0x4400f1],0xfffffff5
  418f4f:	int3   
  418f50:	(bad)  
  418f51:	fcos   
  418f53:	(bad)
  418f56:	(bad)  
  418f57:	mov    edi,0xffaf00ff
  418f5c:	pop    ebp
  418f5d:	add    BYTE PTR [ebx+0x0],dh
  418f60:	mov    edx,esp
  418f62:	int3   
  418f63:	inc    eax
  418f64:	frstor [edi-0x7ccf00]
  418f6a:	add    BYTE PTR [bx+si+0x0],bh
  418f6e:	lahf   
  418f6f:	int3   
  418f70:	add    BYTE PTR [edx-0x34],bh
  418f73:	jmp    0x418fbc
  418f75:	ja     0x418f76
  418f77:	jecxz  0x418f79
  418f79:	int3   
  418f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f7b:	inc    esi
  418f7d:	dec    esi
  418f7f:	add    BYTE PTR [eax],al
  418f81:	xchg   edi,eax
  418f82:	add    BYTE PTR [eax+esi*1-0xda00b8],cl
  418f89:	and    DWORD PTR [ebp-0x3a00ee01],0xffffffff
  418f90:	adc    edi,0x0
  418f93:	ins    BYTE PTR es:[edi],dx
  418f94:	data16 mov ds:0xffff3a00,al
  418f9a:	sahf   
  418f9b:	(bad)  
  418f9c:	stc    
  418f9d:	call   esp
  418f9f:	inc    DWORD PTR [eax]
  418fa1:	mov    ds:0xdc0f2d00,al
  418fa6:	sbb    eax,0x0
  418fa9:	push   DWORD PTR [esi-0x1]
  418fac:	jnp    0x418fad
  418fae:	inc    DWORD PTR [eax]
  418fb0:	adc    DWORD PTR [ecx-0x1],0x6d
  418fb4:	retf   0xff1c
  418fb7:	xchg   esp,eax
  418fb8:	dec    esp
  418fba:	mov    ebx,0xae89cc83
  418fbf:	int3   
  418fc0:	(bad)  
  418fc1:	jle    0x418fc2
  418fc3:	imul   esp,DWORD PTR [ecx],0x83eaccc9
  418fc9:	add    cl,dl
  418fcb:	sbb    edx,0xffffffcc
  418fce:	jmp    0x418fd0
  418fd0:	and    DWORD PTR [esi],0xffffffff
  418fd3:	dec    edx
  418fd4:	fwait
  418fd5:	pop    ds
  418fd6:	and    DWORD PTR [esi-0x34],0x0
  418fda:	jmp    FWORD PTR fs:[eax+eax*1+0x5900003c]
  418fe2:	mov    DWORD PTR [edx+0x6cff6230],esi
  418fe8:	inc    DWORD PTR [eax]
  418fea:	fcos   
  418fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fed:	sub    ebp,0xffffffff
  418ff0:	(bad)  
  418ff1:	jmp    0x4bff:0xdbeee3ff
  418ff8:	inc    DWORD PTR [ebx-0xd4003e]
  418ffe:	leave  
  418fff:	inc    DWORD PTR [ebx+0x4bb3cca1]
  419005:	mov    ?,edi
  419007:	rol    BYTE PTR [eax],cl
  419009:	call   DWORD PTR [edx+0x56ff25ff]
  41900f:	add    BYTE PTR [ecx+0x46d900c2],cl
  419015:	test   al,0xcc
  419017:	mov    al,ds:0xffdaffcc
  41901c:	mov    ds:0xff00d1ff,eax
  419021:	mov    edx,0xce1de3ff
  419026:	int3   
  419027:	mov    edx,0x89798900
  41902c:	jmp    FWORD PTR fs:[esi-0x3313ff7d]
  419033:	inc    ebp
  419034:	dec    edx
  419035:	dec    eax
  419036:	add    BYTE PTR [eax+eax*1+0x34fff9ff],ch
  41903d:	sbb    edi,0xffffffcc
  419040:	sub    edx,0xffffffff
  419043:	gs mov dh,0x83
  419046:	(bad)  
  419047:	mov    esi,0x838c0000
  41904c:	xor    eax,DWORD PTR [ebx-0xd000018]
  419052:	add    BYTE PTR [eax+0xa],bl
  419055:	add    al,BYTE PTR [ebx+0x5ff00f8]
  41905b:	jmp    FWORD PTR [eax-0x4200]
  419061:	mov    dl,0x0
  419063:	test   al,0x62
  419065:	sahf   
  419066:	int3   
  419067:	mov    ah,0xff
  419069:	add    bl,dl
  41906b:	add    ah,ch
  41906d:	push   DWORD PTR [esi-0x33230034]
  419073:	sub    al,0x44
  419075:	push   eax
  419076:	add    bh,dl
  419078:	add    BYTE PTR [ecx-0x7c0fffb1],cl
  41907e:	stc    
  41907f:	int3   
  419080:	add    BYTE PTR [ecx-0x1],bl
  419083:	inc    esi
  419084:	stos   BYTE PTR es:[edi],al
  419085:	fiadd  WORD PTR [eax]
  419087:	inc    DWORD PTR [eax]
  419089:	call   FWORD PTR [ecx+ecx*4+0x4d]
  41908d:	push   DWORD PTR ds:0xff098389
  419093:	lods   al,BYTE PTR ds:[esi]
  419094:	push   edi
  419095:	pop    ebx
  419096:	mov    DWORD PTR [edi-0xa20077],ecx
  41909c:	call   0xc7:0xfd89
  4190a3:	das    
  4190a4:	sub    BYTE PTR [esi-0xfff501],0xaf
  4190ab:	add    BYTE PTR [ecx],dl
  4190ad:	push   DWORD PTR [ebx+eax*4]
  4190b0:	add    BYTE PTR [eax+0x0],cl
  4190b3:	(bad)  
  4190b4:	or     cl,BYTE PTR [esi-0x1]
  4190b7:	mov    al,ds:0xcc8000ff
  4190bc:	mov    ds:0x898eff,eax
  4190c1:	sar    bh,cl
  4190c3:	dec    ecx
  4190c4:	xchg   edx,eax
  4190c5:	jns    0x4190c7
  4190c7:	add    BYTE PTR [eax],0x83
  4190ca:	sub    DWORD PTR [ebx-0x33800053],eax
  4190d0:	or     DWORD PTR ds:0x6f370383,0xffffffff
  4190d7:	aam    0xff
  4190d9:	and    edx,0xffffffff
  4190dc:	push   edx
  4190dd:	push   esi
  4190df:	add    BYTE PTR [eax],al
  4190e1:	sub    ecx,DWORD PTR [ecx-0x33e4d8ab]
  4190e7:	outs   dx,BYTE PTR ds:[esi]
  4190e8:	add    DWORD PTR [eax],0x1c
  4190eb:	add    BYTE PTR [ebx-0xf301],bl
  4190f1:	adc    eax,DWORD PTR [ebx-0x241cbb]
  4190f7:	bound  ecx,QWORD PTR [ecx-0x2400a000]
  4190fd:	add    BYTE PTR [ebp-0x7c980100],al
  419103:	loop   0x419157
  419105:	and    edi,edi
  419107:	mov    al,0xff
  419109:	call   FWORD PTR [edx-0x28761877]
  41910f:	add    bh,bh
  419111:	xchg   edi,eax
  419112:	dec    ebp
  419114:	xchg   ebx,eax
  419115:	jne    0x419117
  419117:	ret    
  419118:	inc    DWORD PTR [eax]
  41911a:	sahf   
  41911b:	cmp    esi,0xffffff83
  41911e:	mov    ?,edi
  419120:	inc    DWORD PTR [ebx+eax*4+0x143da0]
  419127:	xchg   esi,eax
  419128:	int3   
  419129:	int3   
  41912a:	or     bh,bh
  41912c:	sahf   
  41912d:	call   DWORD PTR [ebx-0x77]
  419130:	jmp    DWORD PTR ds:0x4c111783
  419136:	int3   
  419137:	ud0    edi,edi
  41913a:	imul   edi,edi,0x77
  41913d:	add    BYTE PTR [ecx],ah
  41913f:	dec    DWORD PTR [ecx+0x7494cc6e]
  419145:	stc    
  419146:	add    BYTE PTR [ecx+0xefffcc],ch
  41914c:	out    dx,eax
  41914d:	add    DWORD PTR [edi-0xa0001],0xffffffa8
  419154:	or     ch,BYTE PTR [edi+0xffbd00]
  41915a:	cld    
  41915b:	mov    DWORD PTR [edx+0x0],edi
  41915e:	stc    
  41915f:	cmp    edi,0xffffff9d
  419162:	jmp    FWORD PTR [ebx+esi*1-0x7c820003]
  419169:	call   eax
  41916b:	jmp    DWORD PTR [eax]
  41916d:	add    cl,ah
  41916f:	dec    esp
  419171:	push   eax
  419172:	sbb    DWORD PTR [edi-0x79],0xffffffd4
  419176:	dec    eax
  419178:	int3   
  419179:	jmp    FWORD PTR [esi-0x1]
  41917c:	call   0x83b8:0xffffa2ff
  419183:	pop    eax
  419184:	push   cs
  419185:	stos   DWORD PTR es:[edi],eax
  419186:	push   DWORD PTR [ecx+0x3dff00]
  41918c:	mov    ds:0xffff6900,al
  419191:	ret    0x9c83
  419194:	push   edi
  419195:	or     BYTE PTR [ebx-0x6f7cff48],al
  41919b:	dec    DWORD PTR [edx]
  41919d:	inc    eax
  41919f:	(bad)  
  4191a0:	push   DWORD PTR [eax-0x40619734]
  4191a6:	or     DWORD PTR [ebx-0x7d],0x0
  4191aa:	sbb    BYTE PTR [ebx-0x7cf73322],al
  4191b0:	add    BYTE PTR [edx+0x0],bh
  4191b3:	push   eax
  4191b4:	dec    esi
  4191b5:	cdq    
  4191b6:	add    al,dl
  4191b8:	add    BYTE PTR [ebx+0xcffd5],al
  4191be:	retf   0x83ff
  4191c1:	dec    esi
  4191c2:	add    BYTE PTR [ebx-0x56ffc4b0],dh
  4191c8:	inc    DWORD PTR [ebx+0xa500ab]
  4191ce:	jge    0x4191cf
  4191d0:	push   edx
  4191d2:	add    ah,ch
  4191d4:	sub    edi,DWORD PTR [eax]
  4191d6:	dec    ebx
  4191d8:	inc    DWORD PTR [ebx+0x1aff1f]
  4191de:	jle    0x4191df
  4191e0:	(bad)  
  4191e1:	fld    DWORD PTR [ebx-0x6e7365]
  4191e7:	adc    bh,bh
  4191e9:	(bad)  
  4191ea:	cmp    eax,0x97ff6283
  4191ef:	mov    DWORD PTR [ecx-0x25997c2f],ecx
  4191f5:	scas   al,BYTE PTR es:[edi]
  4191f6:	int3   
  4191f7:	adc    BYTE PTR [eax],al
  4191f9:	add    BYTE PTR [edx],dh
  4191fb:	and    DWORD PTR [edi+edi*8+0x36ff00ef],0xffffffff
  419203:	pop    edx
  419204:	mov    bl,0x2f
  419206:	add    bh,ah
  419208:	mov    edi,edi
  41920a:	pusha  
  41920b:	add    BYTE PTR [ebp-0x76ff7c7d],bl
  419211:	fs (bad) 
  419213:	(bad)  
  419215:	jg     0x41919a
  419217:	dec    esp
  419218:	(bad)  
  419219:	dec    ecx
  41921b:	jmp    FWORD PTR [ecx+0x0]
  41921e:	cdq    
  41921f:	cmp    edi,0xffffffae
  419222:	push   DWORD PTR [esi]
  419224:	and    BYTE PTR [edx-0x7d],dl
  419227:	and    bh,bh
  419229:	dec    DWORD PTR [ebx]
  41922b:	add    BYTE PTR [edi+0x0],bh
  41922e:	xchg   ecx,eax
  41922f:	add    BYTE PTR [eax],al
  419231:	push   eax
  419232:	add    bl,dh
  419234:	jle    0x4191e1
  419236:	add    bh,cl
  419238:	add    BYTE PTR [eax],al
  41923a:	xchg   esp,eax
  41923b:	add    bh,dh
  41923d:	and    DWORD PTR [eax+eax*1-0x1],0xfffffffd
  419242:	inc    edi
  419244:	repnz lods al,BYTE PTR ds:[esi]
  419246:	add    BYTE PTR [esi-0xd07677],ch
  41924c:	scas   eax,DWORD PTR es:[edi]
  41924d:	jmp    FWORD PTR [esi]
  41924f:	add    BYTE PTR [ebx+0x1149834f],al
  419255:	(bad)  
  419256:	add    bh,dl
  419258:	(bad)  
  419259:	(bad)  
  41925a:	call   0x8441c85e
  41925f:	mov    DWORD PTR [eax],eax
  419261:	fwait
  419262:	or     DWORD PTR [edi+0x1e],0xffffffc5
  419266:	add    BYTE PTR [ebx-0x18007d],al
  41926c:	lods   eax,DWORD PTR ds:[esi]
  41926d:	jmp    DWORD PTR [eax-0x1]
  419270:	int3   
  419271:	and    eax,0xb57dbfff
  419276:	jmp    FWORD PTR [edx+0x6acc00]
  41927c:	jecxz  0x41927d
  41927e:	xchg   bh,bh
  419280:	int3   
  419281:	sbb    al,BYTE PTR [ebx-0x7ce726cc]
  419287:	push   esi
  419288:	dec    DWORD PTR [ecx-0x8ff84]
  41928e:	(bad)  
  41928f:	inc    DWORD PTR [eax]
  419291:	mov    al,ds:0x89ea8e00
  419296:	add    BYTE PTR [ebp-0x7d],dl
  419299:	add    DWORD PTR [ecx+0x6cffd900],0x0
  4192a0:	add    ch,ch
  4192a2:	add    al,dh
  4192a4:	out    dx,al
  4192a5:	dec    edx
  4192a6:	add    BYTE PTR [edx-0x7c540100],al
  4192ac:	push   0xffffffff
  4192ae:	ins    BYTE PTR es:[edi],dx
  4192af:	inc    DWORD PTR [ebx-0x4c71ff9e]
  4192b5:	mov    dh,0xff
  4192b7:	add    eax,DWORD PTR [eax]
  4192b9:	call   FWORD PTR [ebx-0x55ff9100]
  4192bf:	(bad)  
  4192c0:	call   FWORD PTR [ebx+0x748f6d00]
  4192c6:	cmp    DWORD PTR [eax+0x0],0xffffffff
  4192ca:	mov    ebx,0x60ff0d00
  4192cf:	add    BYTE PTR [ebx+0x454b89af],al
  4192d5:	int3   
  4192d6:	(bad)  
  4192d7:	out    dx,eax
  4192d8:	add    BYTE PTR [ebx-0x4afffa],al
  4192de:	xchg   esp,eax
  4192df:	(bad)  
  4192e0:	dec    edx
  4192e2:	jmp    DWORD PTR [ebx]
  4192e4:	neg    DWORD PTR [ecx]
  4192e6:	jmp    FWORD PTR [ecx]
  4192e8:	int3   
  4192e9:	add    al,cl
  4192eb:	jmp    edx
  4192ed:	add    BYTE PTR [ecx+ecx*4],dh
  4192f0:	or     DWORD PTR [esi-0x60fb8801],0xffffff83
  4192f7:	test   edi,edi
  4192f9:	add    dl,ch
  4192fb:	adc    DWORD PTR [edi],0xffffffff
  4192fe:	push   ds
  4192ff:	cmp    edi,0xffffff9c
  419302:	jmp    FWORD PTR [ecx+0x45008e71]
  419308:	inc    DWORD PTR [eax]
  41930a:	aas    
  41930b:	call   FWORD PTR [esi-0x7633fe34]
  419311:	rol    DWORD PTR [ebx-0xd7b49e],1
  419317:	cmp    BYTE PTR [ebx-0xc001f7d],al
  41931d:	(bad)  
  41931e:	mov    ebp,0x83c4ffff
  419323:	cwde   
  419324:	add    eax,0xcca8ff0b
  419329:	push   DWORD PTR [edi+edi*8+0x69]
  41932d:	jmp    DWORD PTR [ebx]
  41932f:	mov    DWORD PTR [ebx-0x76d000dd],eax
  419335:	push   es
  419336:	cmp    esi,0x0
  419339:	dec    eax
  41933b:	(bad)  
  41933c:	mov    edx,0xff8363cc
  419341:	sar    edi,0x6e
  419344:	and    bh,cl
  419346:	add    BYTE PTR [ebp+0xf98300],ch
  41934c:	sub    edi,edi
  41934e:	(bad)  
  419350:	add    ah,ch
  419352:	jmp    FWORD PTR [esi]
  419354:	xchg   edx,eax
  419355:	clc    
  419356:	(bad)  
  419357:	sti    
  419358:	add    BYTE PTR [eax],al
  41935a:	xchg   edi,eax
  41935b:	mov    DWORD PTR [ebp+0x0],ebx
  41935e:	scas   al,BYTE PTR es:[edi]
  41935f:	mov    DWORD PTR [eax],eax
  419361:	mov    bh,0x0
  419363:	jbe    0x41936c
  419365:	mov    al,ds:0x890057cc
  41936a:	xchg   edx,eax
  41936b:	add    dl,dh
  41936d:	add    BYTE PTR [esi-0x7c77007d],al
  419373:	adc    eax,0x7d00fb0c
  419378:	add    ah,cl
  41937a:	mov    dl,0xff
  41937c:	push   cs
  41937d:	dec    DWORD PTR [edi]
  41937f:	(bad)  
  419380:	jmp    DWORD PTR [edx+0x2671f500]
  419386:	inc    DWORD PTR [ebx-0x76db0034]
  41938c:	out    0x83,eax
  41938e:	fimul  DWORD PTR [ecx+0x48395cc]
  419394:	ins    DWORD PTR es:[edi],dx
  419395:	out    dx,eax
  419396:	dec    DWORD PTR [esi]
  419398:	add    BYTE PTR [ebx-0xb80011],al
  41939e:	iret   
  41939f:	(bad)  
  4193a0:	call   DWORD PTR [ebp+0x53e2af89]
  4193a6:	mov    eax,edi
  4193a8:	add    bh,bh
  4193aa:	arpl   sp,cx
  4193ac:	jno    0x4193ad
  4193ae:	jns    0x4193af
  4193b0:	inc    DWORD PTR [eax-0x1]
  4193b3:	ja     0x41941c
  4193b5:	mov    ds:0xff00c0cc,eax
  4193ba:	lahf   
  4193bb:	dec    DWORD PTR [eax-0x1]
  4193be:	cs dec esp
  4193c1:	jmp    DWORD PTR es:[edx+0x22]
  4193c5:	mov    al,BYTE PTR [eax]
  4193c7:	add    BYTE PTR es:[eax],al
  4193ca:	xchg   edi,eax
  4193cb:	xor    DWORD PTR [ecx+ecx*4-0x1c],0x0
  4193d0:	add    BYTE PTR [esi-0x7d],ah
  4193d3:	sbb    DWORD PTR [edi],esp
  4193d5:	inc    esp
  4193d6:	add    BYTE PTR [eax-0x9aff7d],bl
  4193dc:	out    dx,eax
  4193dd:	add    BYTE PTR [edi+edi*8],bl
  4193e0:	jmp    FWORD PTR [esi+0x476275ff]
  4193e6:	adc    DWORD PTR [edi-0x7c84ff01],0x47
  4193ed:	cmp    DWORD PTR [edi+0xc40083],0x38
  4193f4:	outs   dx,BYTE PTR ds:[esi]
  4193f5:	mov    edi,0xf8ff
  4193fa:	inc    ebx
  4193fb:	inc    DWORD PTR [edx]
  4193fd:	dec    ebx
  4193ff:	(bad)  
  419400:	jmp    FWORD PTR [eax+0x70261800]
  419406:	int3   
  419407:	cwde   
  419408:	mov    DWORD PTR [eax],eax
  41940a:	std    
  41940b:	int3   
  41940c:	xlat   BYTE PTR ds:[ebx]
  41940d:	cmp    ecx,0x0
  419410:	and    DWORD PTR [esi],0xffffffcc
  419413:	lods   al,BYTE PTR ds:[esi]
  419414:	test   eax,0xff2200a3
  419419:	(bad)  
  41941a:	mov    eax,0xea001cff
  41941f:	add    BYTE PTR [ebx-0x7b0100a7],al
  419425:	(bad)  
  419426:	int3   
  419427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419428:	(bad)  
  419429:	inc    DWORD PTR [eax]
  41942b:	mov    DWORD PTR [ebx],ebp
  41942d:	(bad)  
  41942e:	jp     0x4193b3
  419430:	(bad)  
  419431:	std    
  419432:	(bad)  
  419433:	mov    edx,0x530028db
  419438:	mov    edi,edi
  41943a:	enter  0x57ff,0xff
  41943e:	sar    bh,1
  419440:	xor    DWORD PTR [edx+0x366a0189],0xffffffff
  419447:	fiadd  WORD PTR [eax]
  419449:	cmp    DWORD PTR [eax],0xffffffff
  41944c:	fs (bad) 
  41944e:	out    dx,al
  41944f:	inc    DWORD PTR [eax]
  419451:	das    
  419452:	and    DWORD PTR [edi-0x30071ec],0x0
  419459:	add    DWORD PTR [esi-0x3fffc734],0xffffffff
  419460:	dec    DWORD PTR [ecx-0x30002900]
  419466:	jmp    FWORD PTR [edi+edi*8+0x7ffa5ff]
  41946d:	add    dh,dl
  41946f:	int3   
  419470:	call   ecx
  419472:	call   DWORD PTR [ebx-0x7600201d]
  419478:	add    ah,cl
  41947a:	and    DWORD PTR [eax],eax
  41947c:	in     eax,dx
  41947d:	mov    DWORD PTR [edi+edi*8-0x77],edi
  419481:	mov    ecx,0x63bc46ff
  419486:	add    ch,dh
  419488:	cmp    edi,0x4e
  41948b:	int3   
  41948c:	ret    0xc7ff
  41948f:	add    bh,bh
  419491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419492:	call   DWORD PTR [esi]
  419494:	inc    ebp
  419495:	xchg   ebx,eax
  419496:	int3   
  419497:	xchg   BYTE PTR [ecx-0x6d7c7400],cl
  41949d:	int3   
  41949e:	add    al,BYTE PTR [eax]
  4194a0:	add    BYTE PTR [eax+eax*1+0x8b89a7],bl
  4194a7:	lods   eax,DWORD PTR ds:[esi]
  4194a8:	inc    DWORD PTR [eax]
  4194aa:	jb     0x419435
  4194ac:	scas   al,BYTE PTR es:[edi]
  4194ad:	push   DWORD PTR [eax+0x0]
  4194b0:	dec    DWORD PTR [eax+0x0]
  4194b3:	(bad)
  4194b6:	cmp    edi,0x0
  4194b9:	push   DWORD PTR [ebx+0x5e8360ff]
  4194bf:	inc    DWORD PTR [eax]
  4194c1:	and    ah,cl
  4194c3:	fcmovnb st,st(6)
  4194c5:	push   edx
  4194c6:	int3   
  4194c7:	clc    
  4194c8:	dec    esp
  4194ca:	sbb    eax,0xe6ff07ff
  4194cf:	dec    esp
  4194d1:	add    DWORD PTR [eax],0xc
  4194d4:	call   0x12193fd
  4194d9:	dec    DWORD PTR [edx-0x9fff200]
  4194df:	(bad)  
  4194e0:	jmp    DWORD PTR [esi]
  4194e2:	sbb    DWORD PTR ds:0xde83ba7f,0x0
  4194e9:	int3   
  4194ea:	sar    edi,0xde
  4194ed:	call   FWORD PTR [ecx+0x0]
  4194f0:	int3   
  4194f1:	inc    esp
  4194f2:	call   FWORD PTR [edi+edi*8-0x1d]
  4194f6:	call   FWORD PTR [ecx+0x0]
  4194f9:	add    DWORD PTR ds:0x9effcbff,0xffffffff
  419500:	mov    DWORD PTR [edx-0x1adb4800],ebp
  419506:	(bad)  
  419507:	inc    DWORD PTR ds:[eax]
  41950a:	inc    ebx
  41950b:	inc    DWORD PTR [esi-0x1]
  41950e:	loope  0x41950f
  419510:	(bad)  
  419511:	cmp    DWORD PTR [eax],eax
  419513:	retf   
  419514:	lods   al,BYTE PTR ds:[esi]
  419515:	dec    esp
  419516:	jmp    FWORD PTR [ecx-0x970100]
  41951c:	mov    esp,0xd300
  419521:	mov    eax,ds:0xbcd48889
  419526:	push   DWORD PTR [ecx+0x228983]
  41952c:	xchg   ecx,eax
  41952d:	call   DWORD PTR ds:0xff1a8989
  419533:	dec    edi
  419534:	and    DWORD PTR [ebx],0xffcc6000
  41953a:	push   0xffffffcc
  41953c:	or     bh,bh
  41953e:	(bad)  
  41953f:	(bad)  
  419540:	inc    ecx
  419542:	dec    DWORD PTR [edi]
  419544:	fwait
  419545:	mov    eax,ds:0x8900ac00
  41954a:	test   DWORD PTR [ebx-0x7c5a00f1],0x17ffaf00
  419554:	or     esp,esp
  419556:	push   DWORD PTR [edi]
  419558:	inc    DWORD PTR [ebx-0x1e33b4]
  41955e:	std    
  41955f:	add    BYTE PTR [ebx-0x368aff3f],al
  419565:	int3   
  419566:	add    BYTE PTR [ecx+0x1cffcc],dl
  41956c:	pop    ds
  41956d:	add    BYTE PTR [edx+0x7eff83],ah
  419573:	in     eax,0x4f
  419575:	or     DWORD PTR [ecx+0x3a8983e4],ecx
  41957b:	jmp    DWORD PTR [ebp-0x2300]
  419581:	xor    edi,edi
  419583:	jmp    DWORD PTR [ebx-0x9bff11]
  419589:	call   DWORD PTR [ebp-0x1]
  41958c:	data16 (bad) 
  41958e:	mov    edi,0xff31ffff
  419593:	dec    edi
  419594:	je     0x419595
  419596:	add    dl,ah
  419598:	int3   
  419599:	(bad)  
  41959a:	stc    
  41959b:	call   FWORD PTR [edi+edi*8+0x3e]
  41959f:	add    bh,bh
  4195a1:	cmp    eax,0x25361c89
  4195a6:	int3   
  4195a7:	adc    DWORD PTR [eax],eax
  4195a9:	add    BYTE PTR [esi-0x2776d001],bh
  4195af:	add    bh,bh
  4195b1:	jo     0x419536
  4195b3:	in     al,0xe
  4195b5:	loopne 0x4195b6
  4195b7:	inc    ebx
  4195b8:	add    BYTE PTR [eax],al
  4195ba:	mov    eax,ds:0x3fffcaff
  4195bf:	add    bh,bh
  4195c1:	stos   BYTE PTR es:[edi],al
  4195c2:	add    BYTE PTR [ebp+eiz*8+0x3b],dh
  4195c6:	(bad)  
  4195c7:	mov    ecx,0x3800ff
  4195cc:	sti    
  4195cd:	mov    DWORD PTR [edi+0x0],ebp
  4195d0:	push   DWORD PTR [ecx]
  4195d2:	(bad)  
  4195d3:	fistp  QWORD PTR [ebx-0x33e8ff67]
  4195d9:	sbb    DWORD PTR [edi-0x7d],0x18
  4195dd:	mov    DWORD PTR [edx],ebp
  4195df:	dec    esp
  4195e1:	xchg   DWORD PTR [ecx-0x3e382c],ecx
  4195e7:	iret   
  4195e8:	(bad)  
  4195e9:	jmp    FWORD PTR [ebp+0x5bff2aff]
  4195ef:	dec    DWORD PTR [ecx+0x5338001d]
  4195f5:	mov    bh,0x0
  4195f7:	(bad)  
  4195f9:	sub    DWORD PTR [edx-0x7d],0xffffff9b
  4195fd:	add    BYTE PTR [edi+0x500ff],dh
  419603:	outs   dx,DWORD PTR ds:[esi]
  419604:	sbb    al,0x52
  419606:	int3   
  419607:	sbb    bh,bh
  419609:	(bad)  
  41960a:	sti    
  41960b:	add    BYTE PTR [edi+edi*8],dh
  41960e:	cld    
  41960f:	add    DWORD PTR [eax],0xfffffffc
  419612:	add    BYTE PTR [ebx],bl
  419614:	dec    edx
  419615:	test   DWORD PTR [ebx+0x4100ff0d],eax
  41961b:	sub    DWORD PTR [edi-0x76001b77],0xffffffe3
  419622:	call   DWORD PTR [esi-0x50]
  419625:	push   ecx
  419626:	int3   
  419627:	arpl   sp,cx
  419629:	add    BYTE PTR [edi+edi*8-0x3397ff87],bh
  419630:	sub    DWORD PTR [eax+0x3baba2cc],0xffffffff
  419637:	adc    eax,0xcc3a0000
  41963c:	scas   al,BYTE PTR es:[edi]
  41963d:	(bad)  
  41963e:	fdiv   st(7),st
  419640:	push   DWORD PTR [esi]
  419642:	add    dl,dh
  419644:	mov    eax,ds:0xa0000b
  419649:	push   DWORD PTR [edx]
  41964b:	int3   
  41964c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41964d:	push   DWORD PTR [esi+0x3bff00]
  419653:	jl     0x4195e5
  419655:	jle    0x419657
  419657:	daa    
  419658:	add    BYTE PTR [eax],al
  41965a:	mov    esi,0xb6ff1083
  41965f:	add    bh,bh
  419661:	dec    edi
  419662:	cmp    DWORD PTR [ecx+0x73ff8648],0xffffffcc
  419669:	add    BYTE PTR [ebp-0x71ff6000],ah
  41966f:	int3   
  419670:	call   FWORD PTR [eax+eax*1]
  419673:	mov    ebx,es
  419675:	mov    esi,0xcc007a00
  41967a:	add    edi,edi
  41967c:	inc    eax
  41967d:	call   FWORD PTR [edx-0x630077]
  419683:	sub    al,0x66
  419685:	out    0xff,al
  419687:	or     edi,edi
  419689:	call   DWORD PTR [eax+eax*1-0x7ce9ff92]
  419690:	add    BYTE PTR [eax+0x0],dh
  419693:	pushf  
  419694:	pop    edi
  419695:	sahf   
  419696:	add    BYTE PTR [ecx-0x48767d],bl
  41969c:	sar    edi,0x16
  41969f:	(bad)  
  4196a0:	(bad)  
  4196a1:	fld    DWORD PTR [ebx-0xed2e03]
  4196a7:	or     al,0x83
  4196a9:	(bad)  
  4196aa:	jns    0x4196ac
  4196ac:	xchg   DWORD PTR [ebx+0x7fffffef],eax
  4196b2:	inc    DWORD PTR [eax+ecx*2-0x6d]
  4196b6:	add    bh,dl
  4196b8:	add    bh,bh
  4196ba:	add    BYTE PTR gs:[ebp-0x1],al
  4196be:	pop    ebp
  4196bf:	add    BYTE PTR [ebx+0x3f68009f],al
  4196c5:	out    dx,eax
  4196c6:	call   FWORD PTR [ebp+0x0]
  4196c9:	add    DWORD PTR [esi-0x7d],0x2a
  4196cd:	add    BYTE PTR [edi+edi*8],dh
  4196d0:	(bad)  
  4196d1:	fcos   
  4196d3:	sahf   
  4196d4:	adc    BYTE PTR [esi-0x7ca877],0xae
  4196db:	(bad)  
  4196dc:	std    
  4196dd:	(bad)  
  4196de:	jmp    0x4196df
  4196e0:	add    bl,dh
  4196e2:	inc    ebx
  4196e4:	push   edx
  4196e5:	iret   
  4196e6:	push   DWORD PTR [edi-0xb37d00]
  4196ec:	mov    ebp,0xff001783
  4196f1:	(bad)  
  4196f2:	int3   
  4196f3:	test   BYTE PTR [ebp+0x16],al
  4196f6:	jmp    FWORD PTR [esi+0xbf00ff]
  4196fc:	in     al,dx
  4196fd:	add    BYTE PTR [ecx],cl
  4196ff:	add    DWORD PTR [ebx-0x68957cff],0xffffffea
  419706:	inc    DWORD PTR [ecx-0x1]
  419709:	add    BYTE PTR [edi+0x11ff10ff],dh
  41970f:	(bad)  
  419710:	push   edx
  419712:	jmp    DWORD PTR [edi+0xe]
  419715:	popa   
  419716:	(bad)  
  419717:	jge    0x4196e5
  419719:	int3   
  41971a:	ret    
  41971b:	(bad)  
  41971c:	jmp    0x1417521
  419721:	dec    ecx
  419722:	(bad)  
  419723:	jp     0x4196c2
  419725:	jne    0x4196aa
  419727:	xor    al,0x0
  419729:	jmp    DWORD PTR [eax]
  41972b:	int3   
  41972c:	dec    edi
  41972d:	dec    DWORD PTR [ebp-0x97ff01]
  419733:	aas    
  419734:	into   
  419735:	cmc    
  419736:	adc    ebp,0xffffff83
  419739:	jmp    DWORD PTR [ebp+0x48ffcc83]
  41973f:	add    bh,bh
  419741:	pop    ecx
  419742:	(bad)  
  419743:	std    
  419744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419745:	jg     0x419746
  419747:	dec    eax
  419748:	(bad)  
  419749:	call   FWORD PTR [edi+edi*8]
  41974c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41974d:	inc    DWORD PTR [esi+0x0]
  419750:	add    BYTE PTR [edi-0x11baad01],bh
  419756:	inc    DWORD PTR [ebx]
  419758:	(bad)  
  419759:	call   DWORD PTR [edi+edi*8-0x766c3388]
  419760:	sub    DWORD PTR [ecx-0x77],0x7a
  419764:	cmp    eax,0xcc5c8348
  419769:	add    dh,bh
  41976b:	dec    esp
  41976d:	(bad)  
  41976e:	mov    esp,0x837e0083
  419773:	neg    DWORD PTR [esi+0x59]
  419776:	inc    DWORD PTR [ecx]
  419778:	inc    DWORD PTR [ebx-0x4bff11]
  41977e:	(bad)  
  419781:	pop    edi
  419782:	add    ah,bl
  419784:	xchg   DWORD PTR [ecx+0x0],edi
  419787:	dec    ebp
  419788:	add    ah,cl
  41978a:	icebp  
  41978b:	call   FWORD PTR [ecx]
  41978d:	add    BYTE PTR [ecx+0xbd00ff],ch
  419793:	jno    0x4197cc
  419795:	xor    al,0xff
  419797:	aad    0x0
  419799:	dec    eax
  41979b:	add    ah,bl
  41979d:	dec    DWORD PTR [edi-0x1]
  4197a0:	(bad)  
  4197a1:	mov    esi,0x334fc900
  4197a6:	mov    DWORD PTR [edi-0x4f3400],ecx
  4197ac:	mov    cl,0xff
  4197ae:	push   eax
  4197af:	or     esp,0x69
  4197b2:	call   DWORD PTR [esi-0x61]
  4197b5:	sub    eax,0xffcc40ff
  4197ba:	icebp  
  4197bb:	call   DWORD PTR [eax-0x1]
  4197be:	imul   ecx,DWORD PTR [ecx+0xf89ea83],0xb2ffdc66
  4197c8:	(bad)  
  4197c9:	inc    DWORD PTR [edx]
  4197cb:	mov    ebx,esi
  4197cd:	jmp    FWORD PTR [edx-0x33190000]
  4197d3:	(bad)  
  4197d5:	fdiv   st(7),st
  4197d7:	test   al,0x0
  4197d9:	inc    DWORD PTR [ebx-0x3e768877]
  4197df:	(bad)  
  4197e0:	jmp    FWORD PTR [eax]
  4197e2:	push   DWORD PTR [edx]
  4197e4:	inc    ecx
  4197e5:	jmp    0xcc63:0xffff22ff
  4197ec:	pusha  
  4197ed:	add    BYTE PTR [esi],dh
  4197ef:	mov    DWORD PTR [ebx+0xd1aff8b],eax
  4197f5:	pop    ecx
  4197f6:	add    bh,dl
  4197f8:	int3   
  4197f9:	add    cl,bh
  4197fb:	add    ch,al
  4197fd:	sbb    DWORD PTR [eax-0x7d],0xffffffff
  419801:	lods   eax,DWORD PTR ds:[esi]
  419802:	int3   
  419803:	rol    BYTE PTR [edx-0x7cde0039],1
  419809:	add    BYTE PTR [ebx],ah
  41980b:	and    DWORD PTR [edi+edi*8-0x72],0x0
  419810:	add    BYTE PTR [edi+0x62f85300],dh
  419816:	add    ch,dl
  419818:	mov    edi,edi
  41981a:	vmovntps YMMWORD PTR [eax],ymm0
  41981e:	jne    0x4197a3
  419820:	add    ch,dh
  419822:	jmp    FWORD PTR [ecx]
  419824:	arpl   ax,cx
  419826:	sub    DWORD PTR [eax],0xffffffff
  419829:	int3   
  41982a:	push   ecx
  41982b:	inc    DWORD PTR [edi]
  41982d:	cmp    DWORD PTR [eax],0xffffffff
  419830:	sbb    DWORD PTR [edi+edi*8-0x3e],0xffffff9d
  419835:	dec    edx
  419836:	and    DWORD PTR [eax],0x0
  419839:	call   DWORD PTR [edx+0x2fff3b00]
  41983f:	add    bh,bh
  419841:	sbb    al,0x0
  419843:	or     ah,BYTE PTR [ebx]
  419845:	pop    ds
  419846:	xor    DWORD PTR [ebp-0xee7c34],0x50
  41984d:	call   DWORD PTR [eax+0x5dff89]
  419853:	mov    eax,0xe100208d
  419858:	add    BYTE PTR [eax],al
  41985a:	jle    0x41985b
  41985c:	(bad)  
  41985e:	sar    bh,cl
  419860:	mov    ds:0x6bffffa0,al
  419865:	call   DWORD PTR [esi]
  419867:	mov    ch,0xb2
  419869:	inc    DWORD PTR [eax]
  41986b:	inc    DWORD PTR [eax]
  41986d:	(bad)  
  41986f:	jmp    0x8440f898
  419874:	daa    
  419875:	add    BYTE PTR [edi-0x731e],dl
  41987b:	add    BYTE PTR [eax],al
  41987d:	lods   al,BYTE PTR ds:[esi]
  41987e:	inc    DWORD PTR [edi+0xff4ee1]
  419884:	fld    DWORD PTR [eax]
  419886:	and    BYTE PTR [edx-0x43],dh
  419889:	inc    DWORD PTR [ebx-0x7c6e007d]
  41988f:	sub    eax,0xcc19d7
  419894:	fdivp  st(7),st
  419896:	ss push edx
  419898:	add    ah,cl
  41989a:	or     esp,0xffffffff
  41989d:	sti    
  41989e:	jmp    DWORD PTR [eax+0x4ed0]
  4198a4:	sub    eax,DWORD PTR [eax]
  4198a6:	lds    eax,FWORD PTR ds:0xffff8383
  4198ac:	(bad)  
  4198ad:	mov    eax,0xd83677ff
  4198b2:	add    BYTE PTR [ebx-0x4e8c7690],al
  4198b8:	or     al,0xff
  4198ba:	inc    DWORD PTR [ebx+0x63cc67ff]
  4198c0:	popa   
  4198c1:	mov    ah,0xcc
  4198c3:	add    BYTE PTR [edi-0x593a4f00],ch
  4198c9:	dec    DWORD PTR [ecx+0xacff00]
  4198cf:	ins    DWORD PTR es:[edi],dx
  4198d0:	test   eax,0x39ccff12
  4198d5:	int3   
  4198d6:	mov    ds:0xffffe339,eax
  4198db:	inc    DWORD PTR [eax]
  4198dd:	jmp    DWORD PTR es:[esi+0xcc1399]
  4198e4:	xor    eax,0x704e5c89
  4198e9:	inc    DWORD PTR [eax]
  4198eb:	add    BYTE PTR [eax],al
  4198ed:	stos   DWORD PTR es:[edi],eax
  4198ee:	dec    DWORD PTR [ebp-0xfff300]
  4198f4:	dec    eax
  4198f5:	add    bh,ch
  4198f7:	mov    eax,ds:0xff83009d
  4198fc:	add    al,bl
  4198fe:	inc    DWORD PTR [edx]
  419900:	lods   al,BYTE PTR ds:[esi]
  419902:	add    BYTE PTR [eax],al
  419904:	jmp    WORD PTR [edi+0x25]
  419908:	std    
  419909:	add    BYTE PTR [eax],al
  41990b:	(bad)  
  41990c:	dec    edx
  41990e:	jmp    DWORD PTR [esi-0xfcf5]
  419914:	mov    eax,0x918c58ff
  419919:	add    BYTE PTR [eax],al
  41991b:	(bad)  
  41991c:	inc    eax
  41991e:	(bad)  
  41991f:	stc    
  419920:	(bad)  [eax]
  419922:	inc    DWORD PTR [eax]
  419924:	loop   0x419925
  419926:	xor    eax,0xc569
  41992b:	add    BYTE PTR [eax],al
  41992d:	popa   
  41992e:	add    BYTE PTR [ebx],bh
  419930:	sub    edx,edi
  419932:	cmp    edi,0xffffffd6
  419935:	(bad)  
  419936:	mov    ecx,0xffffcece
  41993b:	cmp    edi,0xffffff96
  41993e:	add    BYTE PTR [ecx],bh
  419940:	and    ecx,DWORD PTR [eax]
  419942:	add    BYTE PTR [eax],al
  419944:	xchg   edi,eax
  419945:	int3   
  419946:	into   
  419947:	icebp  
  419948:	sbb    al,0xff
  41994a:	add    BYTE PTR [eax],al
  41994c:	jmp    DWORD PTR [edi+0x5d3bf9ff]
  419952:	cmp    edi,0x7d
  419955:	inc    DWORD PTR [ebx+0x7d77]
  41995b:	add    DWORD PTR [ebx-0x774200cc],0x1b
  419962:	inc    DWORD PTR [ebx+0x38b8ff76]
  419968:	mov    al,ds:0xffcc00ff
  41996d:	stos   BYTE PTR es:[edi],al
  41996e:	inc    ecx
  419970:	xlat   BYTE PTR ds:[ebx]
  419971:	or     bh,bh
  419973:	dec    ebx
  419975:	add    BYTE PTR [ecx-0x55],cl
  419978:	jmp    0xffc4997d
  41997d:	(bad)  
  41997f:	cmp    dl,BYTE PTR [ebx]
  419981:	jns    0x41990c
  419983:	jmp    FWORD PTR [edx]
  419985:	mov    DWORD PTR [edi],ebx
  419987:	push   es
  419988:	mov    ebp,0xff000000
  41998d:	repnz add BYTE PTR [ebp-0x3331f4],al
  419994:	sar    edi,1
  419996:	daa    
  419997:	sub    al,0x79
  419999:	int3   
  41999a:	add    bh,bh
  41999c:	adc    DWORD PTR [ebx],0xffffffff
  41999f:	out    0xbe,al
  4199a1:	ja     0x41992c
  4199a3:	push   DWORD PTR [ecx-0x6f042a01]
  4199a9:	add    BYTE PTR [ebx-0x4f0001],al
  4199af:	add    esi,edi
  4199b1:	fcmovne st,st(4)
  4199b3:	int3   
  4199b4:	add    DWORD PTR [ebx-0x9604ff],eax
  4199ba:	cmp    edi,0x0
  4199bd:	iret   
  4199be:	sub    DWORD PTR [ebx],0xffffffc9
  4199c1:	inc    esp
  4199c2:	mov    DWORD PTR [eax],eax
  4199c4:	push   edi
  4199c5:	or     DWORD PTR [edx],0x43
  4199c8:	in     al,dx
  4199c9:	(bad)  
  4199ca:	(bad)  
  4199cb:	(bad)  
  4199cc:	(bad)  
  4199cd:	mov    esp,0xd8d5f383
  4199d2:	dec    esp
  4199d4:	and    eax,DWORD PTR [eax]
  4199d6:	xor    dl,BYTE PTR [eax+0x2a]
  4199d9:	dec    DWORD PTR [ecx+0xa78300]
  4199df:	int    0x7e
  4199e1:	mov    eax,DWORD PTR [eax]
  4199e3:	add    BYTE PTR [ecx-0x7d],dl
  4199e6:	test   ch,dh
  4199e8:	cmp    edi,0x4c0083cc
  4199ee:	int3   
  4199ef:	sbb    DWORD PTR [eax],ecx
  4199f1:	mov    edi,0x83058389
  4199f6:	mov    DWORD PTR [edi-0x7cff0095],0xb1833883
  419a00:	sub    eax,DWORD PTR [ecx-0x77]
  419a03:	dec    DWORD PTR [edi-0x7d]
  419a06:	fadd   st,st(5)
  419a08:	ss add bh,bh
  419a0b:	dec    esp
  419a0d:	inc    edi
  419a0e:	int3   
  419a0f:	(bad)  
  419a10:	es push cs
  419a12:	mov    edi,edi
  419a14:	loop   0x419a16
  419a16:	sub    ah,dl
  419a18:	mov    ds:0xffff00ff,eax
  419a1d:	mov    ebx,0x20cb6100
  419a22:	int3   
  419a23:	add    BYTE PTR ds:0x58d1e000,ch
  419a29:	mov    DWORD PTR [eax],eax
  419a2b:	dec    esp
  419a2d:	call   DWORD PTR es:[ebx]
  419a30:	mov    al,ds:0xb1ff0063
  419a35:	xor    DWORD PTR [ecx],0xc
  419a38:	aas    
  419a39:	cmp    edi,0xffffffff
  419a3c:	add    ch,al
  419a3e:	int3   
  419a3f:	pop    ecx
  419a40:	aam    0x8f
  419a42:	inc    DWORD PTR [eax]
  419a44:	rol    DWORD PTR [eax],cl
  419a46:	mov    dl,0xf4
  419a48:	repz inc DWORD PTR [ebx-0x1b767d]
  419a4f:	mov    WORD PTR [ecx],ss
  419a51:	jne    0x419a52
  419a53:	add    BYTE PTR [edx],dl
  419a55:	xor    esp,0xffffff87
  419a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a59:	inc    DWORD PTR [ebx+0x5eccff]
  419a5f:	dec    esi
  419a60:	dec    edi
  419a61:	xchg   edi,edi
  419a63:	call   FWORD PTR [edx]
  419a65:	add    ch,dh
  419a67:	test   al,0xc6
  419a69:	(bad)  
  419a6a:	inc    DWORD PTR [eax]
  419a6c:	add    BYTE PTR [ebx+0x0],bl
  419a6f:	iret   
  419a70:	mov    ah,0x9
  419a72:	add    DWORD PTR [ebx+0x5b2dffdf],0xffffffc2
  419a79:	or     esp,0xffffffff
  419a7c:	int3   
  419a7d:	fild   DWORD PTR [ebx-0xd4ad1f]
  419a83:	inc    DWORD PTR [edi-0x1]
  419a86:	pop    es
  419a87:	cmp    edx,esp
  419a89:	add    bh,bh
  419a8b:	add    BYTE PTR [eax],al
  419a8d:	scas   eax,DWORD PTR es:[edi]
  419a8e:	mov    DWORD PTR [ebx],edi
  419a90:	xchg   cl,bh
  419a92:	inc    DWORD PTR [eax]
  419a94:	cli    
  419a95:	call   FWORD PTR [ecx]
  419a97:	dec    ecx
  419a98:	js     0x419a23
  419a9a:	(bad)  
  419a9b:	(bad)  
  419a9c:	call   DWORD PTR [ebp-0x44d32a00]
  419aa2:	add    DWORD PTR [eax],0xfffffff8
  419aa5:	sbb    ebp,0x3a
  419aa8:	push   es
  419aa9:	add    BYTE PTR [ecx+0xcbff83],cl
  419aaf:	add    ah,BYTE PTR [esi+0x5cccff45]
  419ab5:	sub    esi,0x37
  419ab8:	push   ss
  419ab9:	add    BYTE PTR [ebx-0x7c86ff01],al
  419abf:	or     al,0x5c
  419ac1:	ss (bad) 
  419ac3:	inc    DWORD PTR [eax-0x7d]
  419ac6:	mov    edx,edx
  419ac8:	push   0xffffff00
  419acd:	mov    ah,0x0
  419acf:	cmp    BYTE PTR [ebx+edi*2-0x1],al
  419ad3:	add    BYTE PTR [ebx],dh
  419ad5:	push   DWORD PTR [eax]
  419ad7:	daa    
  419ad8:	sbb    bh,bh
  419ada:	dec    DWORD PTR [ecx-0x43003c7d]
  419ae0:	clc    
  419ae1:	pop    edi
  419ae2:	inc    DWORD PTR [ebx-0x49cf00fb]
  419ae8:	das    
  419ae9:	(bad)  
  419aea:	(bad)  
  419aeb:	inc    DWORD PTR [eax]
  419aed:	rol    DWORD PTR [eax],cl
  419aef:	in     al,dx
  419af0:	xchg   ebx,eax
  419af1:	pop    edx
  419af2:	add    BYTE PTR [eax],al
  419af4:	adc    bh,bh
  419af6:	xlat   BYTE PTR ds:[ebx]
  419af7:	arpl   WORD PTR [ebx],bp
  419af9:	(bad)  
  419afa:	inc    DWORD PTR [eax]
  419afc:	inc    DWORD PTR [edx]
  419afe:	add    BYTE PTR [edx-0x3c],dl
  419b01:	loopne 0x419b02
  419b03:	(bad)  
  419b04:	stc    
  419b05:	int3   
  419b06:	and    edx,DWORD PTR [edi-0x5f]
  419b09:	add    ah,cl
  419b0b:	mov    edi,edi
  419b0d:	std    
  419b0e:	cmp    ebp,0x56
  419b11:	dec    esi
  419b12:	inc    DWORD PTR [ebx+0x3045ff59]
  419b18:	data16 add BYTE PTR [eax],al
  419b1b:	int3   
  419b1c:	(bad)  
  419b1d:	std    
  419b1e:	jmp    FWORD PTR [eax*2+0x48ffff3f]
  419b25:	call   edx
  419b27:	inc    edi
  419b28:	add    edi,edi
  419b2a:	add    bh,bh
  419b2c:	call   DWORD PTR [eax]
  419b2e:	jmp    FWORD PTR [edx-0xfff519]
  419b34:	mov    esi,0x72ff80ff
  419b39:	add    bh,bh
  419b3b:	inc    DWORD PTR [eax]
  419b3d:	popa   
  419b3e:	add    BYTE PTR [edi],dh
  419b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b41:	jge    0x419b42
  419b43:	dec    ecx
  419b45:	mov    DWORD PTR [edi+0xfffa08],eax
  419b4b:	add    BYTE PTR [ecx-0x50f8ff7f],cl
  419b51:	mov    ds:0x7d00ff,eax
  419b56:	push   0xffcc56a4
  419b5b:	dec    DWORD PTR [ecx+0x1c0989da]
  419b61:	inc    ebx
  419b62:	(bad)  
  419b63:	inc    ecx
  419b65:	or     DWORD PTR [ebx+eax*2+0x77],0xffffffff
  419b6a:	(bad)  
  419b6b:	inc    DWORD PTR [eax]
  419b6d:	xor    eax,0xaddadacc
  419b72:	inc    DWORD PTR [ebx-0x2b447c9a]
  419b78:	push   eax
  419b79:	add    bh,bh
  419b7b:	(bad)  
  419b7c:	jmp    FWORD PTR [ecx-0x1]
  419b7f:	test   dh,bh
  419b81:	lods   eax,DWORD PTR ds:[esi]
  419b82:	inc    DWORD PTR [eax]
  419b84:	cmp    bh,0xeb
  419b87:	push   es
  419b88:	add    DWORD PTR es:[eax],0xffffffcc
  419b8c:	add    BYTE PTR [edi+edi*8+0x6b542f],bl
  419b93:	call   esp
  419b95:	dec    DWORD PTR [eax-0x50]
  419b98:	mov    WORD PTR [eax],es
  419b9a:	int3   
  419b9b:	add    bh,bh
  419b9d:	xchg   ebx,eax
  419b9e:	add    BYTE PTR [edi+0x2e],dh
  419ba1:	sbb    DWORD PTR [ebx-0x6500af00],eax
  419ba7:	push   edx
  419ba8:	mov    ecx,0xff000089
  419bad:	jmp    0x8cd00135
  419bb2:	inc    DWORD PTR [eax]
  419bb4:	out    dx,eax
  419bb5:	int3   
  419bb6:	add    DWORD PTR [edi+esi*8],esi
  419bb9:	int3   
  419bba:	add    bh,bh
  419bbc:	add    BYTE PTR [eax+eax*1+0x51],cl
  419bc0:	inc    ebx
  419bc1:	mov    edi,0xff610000
  419bc6:	aaa    
  419bc7:	xchg   ebp,eax
  419bc8:	cmp    bh,bh
  419bca:	dec    esp
  419bcc:	add    bl,al
  419bce:	int3   
  419bcf:	dec    ebx
  419bd0:	in     eax,dx
  419bd1:	hlt    
  419bd2:	(bad)  
  419bd3:	call   FWORD PTR [ebx]
  419bd5:	push   DWORD PTR [ebp+0xff7bab]
  419bdb:	add    bh,bh
  419bdd:	jmp    FWORD PTR gs:[ebx]
  419be0:	push   ebp
  419be1:	jbe    0x419be2
  419be3:	sub    ebp,0xffffffff
  419be6:	lods   eax,DWORD PTR ds:[esi]
  419be7:	pop    edi
  419be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419be9:	int3   
  419bea:	int3   
  419beb:	add    ah,cl
  419bed:	or     DWORD PTR [eax],eax
  419bef:	test   ecx,0x97ff8913
  419bf5:	call   FWORD PTR [esi]
  419bf7:	push   eax
  419bf8:	ins    BYTE PTR es:[edi],dx
  419bf9:	inc    DWORD PTR [ebx-0xc40001]
  419bff:	stos   BYTE PTR es:[edi],al
  419c00:	test   eax,0x70ffff1c
  419c05:	inc    DWORD PTR [edx-0x9ca1]
  419c0b:	add    bh,bh
  419c0d:	call   FWORD PTR fs:[ecx-0xffd39f]
  419c14:	mov    al,ds:0x1eae9a83
  419c19:	inc    DWORD PTR [ebx-0x339d0001]
  419c1f:	add    ax,0xfc
  419c23:	int3   
  419c24:	and    eax,0x740ee8ff
  419c29:	add    bh,bh
  419c2b:	add    BYTE PTR [eax],al
  419c2d:	mov    BYTE PTR [ebx+0xebd5aa],0xcc
  419c34:	pop    ebp
  419c35:	add    BYTE PTR [esi-0x7cffaf0f],bh
  419c3b:	add    bh,bh
  419c3d:	loopne 0x419c3f
  419c3f:	or     BYTE PTR [ebx],bl
  419c41:	mov    ds:0xff8900ff,eax
  419c46:	lea    esi,[edx+ebx*8-0x7cff0001]
  419c4d:	xchg   ebp,eax
  419c4e:	add    ch,ah
  419c50:	shr    BYTE PTR [ebx+0x0],0xcc
  419c54:	arpl   di,di
  419c56:	xor    al,0xbf
  419c58:	pop    esi
  419c59:	add    BYTE PTR [eax],al
  419c5b:	inc    DWORD PTR [eax]
  419c5d:	int    0xff
  419c5f:	add    esp,ecx
  419c61:	push   es
  419c62:	add    bh,bh
  419c64:	add    BYTE PTR [ecx-0x543e00],cl
  419c6a:	(bad)  
  419c6b:	(bad)  
  419c6c:	call   FWORD PTR [eax+0x0]
  419c6f:	xchg   DWORD PTR [edx-0x2c],edx
  419c72:	(bad)  
  419c73:	jmp    FWORD PTR [edx+0x31114900]
  419c79:	inc    DWORD PTR [eax]
  419c7b:	dec    esp
  419c7d:	push   ss
  419c7e:	int3   
  419c7f:	popf   
  419c80:	cmp    BYTE PTR [eax],dh
  419c82:	add    bh,bh
  419c84:	cwde   
  419c85:	mov    DWORD PTR [eax],esi
  419c87:	popf   
  419c88:	xor    BYTE PTR [ebx+0x2dffffff],al
  419c8e:	mov    DWORD PTR [ecx+ecx*8-0x11000014],ebp
  419c95:	call   FWORD PTR [ecx+0x58]
  419c98:	or     bh,bh
  419c9a:	add    BYTE PTR [eax],al
  419c9c:	jmp    FWORD PTR ds:0x28c1c3ff
  419ca2:	(bad)  
  419ca3:	call   FWORD PTR [esi+0x0]
  419ca6:	push   ss
  419ca7:	mov    ebx,0x8983cc68
  419cac:	add    BYTE PTR [eax-0x1],dh
  419caf:	jle    0x3b4168f1
  419cb5:	push   ebp
  419cb7:	shl    BYTE PTR [edi+edi*8+0x1583ffff],1
  419cbe:	(bad)  
  419cbf:	fdiv   DWORD PTR [eax]
  419cc1:	inc    ebp
  419cc2:	dec    DWORD PTR [ecx-0x4ff1001d]
  419cc8:	dec    edi
  419cc9:	dec    DWORD PTR [ecx+0xabffcc]
  419ccf:	or     eax,0xffff0fab
  419cd4:	add    BYTE PTR [eax],al
  419cd6:	xor    al,0xd4
  419cd8:	inc    ebp
  419cd9:	int3   
  419cda:	(bad)  
  419cdb:	inc    DWORD PTR [ebx-0x6d5cffcb]
  419ce1:	int3   
  419ce2:	add    ah,cl
  419ce4:	sbb    eax,0x9cc185ff
  419ce9:	inc    DWORD PTR [eax]
  419ceb:	add    bh,bh
  419ced:	sbb    BYTE PTR [eax],al
  419cef:	push   cs
  419cf0:	xchg   ebp,eax
  419cf1:	dec    eax
  419cf2:	or     DWORD PTR [ecx-0x13610063],0x77
  419cf9:	(bad)  
  419cfa:	(bad)  
  419cfb:	inc    DWORD PTR [eax]
  419cfd:	or     DWORD PTR [eax],eax
  419cff:	pop    es
  419d00:	xchg   edi,eax
  419d01:	arpl   WORD PTR [ebx+0x198372ff],ax
  419d07:	mov    WORD PTR [ebp-0x7d],gs
  419d0d:	aas    
  419d0e:	add    BYTE PTR [ecx+esi*2],dh
  419d11:	ret    0xffff
  419d14:	mov    ecx,0xb70742cc
  419d19:	(bad)  
  419d1a:	dec    esp
  419d1c:	jmp    FWORD PTR [ebx+eax*4]
  419d1f:	ja     0x419d20
  419d21:	imul   eax,DWORD PTR [ebx-0x5400d601],0x44
  419d28:	mov    dl,0xff
  419d2a:	inc    DWORD PTR [eax]
  419d2c:	(bad)  
  419d2d:	fld    DWORD PTR [ebx+0xce7be8]
  419d33:	call   DWORD PTR [eax-0x1]
  419d36:	cwde   
  419d37:	add    ebp,DWORD PTR [ecx-0x33ff7c34]
  419d3d:	aam    0xff
  419d3f:	xchg   edi,eax
  419d40:	xor    DWORD PTR [edi],edx
  419d42:	inc    DWORD PTR [eax]
  419d44:	pop    ss
  419d45:	add    BYTE PTR [eax-0x7cde87],bl
  419d4b:	mov    DWORD PTR [eax],eax
  419d4d:	je     0x419d4e
  419d4f:	pop    ecx
  419d50:	xchg   edx,edx
  419d52:	(bad)  
  419d53:	push   DWORD PTR [esi+0x0]
  419d56:	xor    BYTE PTR [esi-0xff1b],0xff
  419d5d:	push   esi
  419d5e:	call   ebp
  419d60:	aaa    
  419d61:	mov    bl,0xff
  419d63:	add    BYTE PTR [edi-0x34],bl
  419d66:	ficomp DWORD PTR ds:0x64
  419d6c:	call   FWORD PTR [ecx]
  419d6e:	int3   
  419d6f:	jge    0x419d6b
  419d71:	inc    ebp
  419d72:	(bad)  
  419d73:	jmp    FWORD PTR [edi+0x0]
  419d76:	xor    ebp,DWORD PTR [ebp-0x3333ff6c]
  419d7c:	inc    DWORD PTR [ebx]
  419d7e:	int3   
  419d7f:	out    0x9f,eax
  419d81:	jg     0x419d82
  419d83:	add    ah,bh
  419d85:	call   FWORD PTR [ebx-0x68]
  419d88:	sbb    al,BYTE PTR [eax]
  419d8a:	cmp    edi,0xffffffff
  419d8d:	dec    ah
  419d8f:	stos   BYTE PTR es:[edi],al
  419d90:	inc    esi
  419d91:	clc    
  419d92:	int3   
  419d93:	add    cl,ch
  419d95:	add    al,dh
  419d97:	xlat   BYTE PTR ds:[ebx]
  419d98:	daa    
  419d99:	add    BYTE PTR [eax],al
  419d9b:	dec    esp
  419d9d:	push   DWORD PTR fs:[eax]
  419da0:	push   edi
  419da1:	adc    ah,cl
  419da3:	add    bh,cl
  419da5:	add    BYTE PTR [ebx],al
  419da7:	cmp    DWORD PTR [edx],0xffffff
  419dad:	xor    eax,0xaa6eec00
  419db2:	mov    edi,edi
  419db4:	inc    edx
  419db5:	add    BYTE PTR [edx],cl
  419db7:	sahf   
  419db8:	sub    edi,edi
  419dba:	mov    edi,edi
  419dbc:	inc    DWORD PTR [ecx+0x0]
  419dbf:	aas    
  419dc0:	xor    DWORD PTR [edi+edi*8],0xa7005700
  419dc7:	push   ebp
  419dc8:	(bad)  
  419dc9:	(bad)  
  419dca:	(bad)  
  419dcb:	(bad)  
  419dcc:	(bad)  
  419dcd:	add    BYTE PTR ds:[edx+0xffab9c],ch
  419dd4:	arpl   WORD PTR [eax],ax
  419dd6:	into   
  419dd7:	adc    edi,DWORD PTR [edi+edi*8-0x1]
  419ddb:	(bad)  
  419ddc:	inc    DWORD PTR [esi-0x3cfdea01]
  419de2:	(bad)  
  419de3:	push   DWORD PTR [edi+0x0]
  419de6:	add    al,0xaa
  419de8:	add    eax,DWORD PTR [eax]
  419dea:	add    bh,bh
  419dec:	or     DWORD PTR [ecx+0x0],0x74
  419df0:	cmp    eax,0xf5ff00b2
  419df5:	jmp    FWORD PTR [ebx+eiz*4-0x3]
  419df9:	inc    DWORD PTR [eax]
  419dfb:	inc    DWORD PTR [eax]
  419dfd:	mov    WORD PTR [ebx+0x3d],bp
  419e01:	pusha  
  419e02:	(bad)  
  419e03:	(bad)  
  419e04:	(bad)  
  419e06:	inc    ebp
  419e07:	and    esp,ecx
  419e09:	int3   
  419e0a:	inc    DWORD PTR [ebx-0x3dff0801]
  419e10:	mov    esi,0xedffff0d
  419e15:	int3   
  419e16:	imul   eax,DWORD PTR [ebp-0xff00ed],0x1bccb200
  419e20:	fimul  WORD PTR [edi+edi*8-0x6000ce01]
  419e27:	mov    cs,WORD PTR [ecx-0x7c760100]
  419e2d:	add    ecx,esp
  419e2f:	mov    bl,0xeb
  419e31:	jge    0x419e33
  419e33:	mov    DWORD PTR [eax],ebp
  419e35:	jmp    FWORD PTR [esi]
  419e37:	and    eax,0x89ff83e9
  419e3c:	int3   
  419e3d:	pop    esp
  419e3e:	jmp    edx
  419e40:	call   0xdbff:0x92ffff3f
  419e47:	xor    ebx,DWORD PTR [edx]
  419e49:	or     esp,0xffffffff
  419e4c:	adc    DWORD PTR [ecx-0x1],0xffffffcc
  419e50:	mov    ebx,0xa6ff832a
  419e55:	add    BYTE PTR [edi-0x12e1],dl
  419e5b:	cmp    edi,0xffffff88
  419e5e:	add    BYTE PTR [ebx],cl
  419e60:	call   0x5d00:0x61ffff46
  419e67:	xor    eax,0xff0002
  419e6c:	add    dh,ah
  419e6e:	add    BYTE PTR [ecx-0xff92e6],bl
  419e74:	test   DWORD PTR [eax],0x89d20c46
  419e7a:	add    DWORD PTR [eax],0xffffffcc
  419e7d:	rol    BYTE PTR [eax],0x63
  419e80:	adc    ah,BYTE PTR [edi]
  419e82:	inc    DWORD PTR [ebx-0x3d5b0011]
  419e88:	mov    al,BYTE PTR [ebx-0x5a007c01]
  419e8e:	int3   
  419e8f:	sub    BYTE PTR [esi+0x43],ah
  419e92:	add    BYTE PTR [ecx+0xb67ff54],cl
  419e98:	fiadd  DWORD PTR [eax]
  419e9a:	inc    DWORD PTR [eax]
  419e9c:	call   DWORD PTR [edi+edi*8-0x48]
  419ea0:	jb     0x419e95
  419ea2:	(bad)  
  419ea3:	jmp    DWORD PTR [esi]
  419ea5:	(bad)  
  419ea6:	cmp    BYTE PTR [esi-0xff56],dh
  419eac:	(bad)  
  419ead:	jns    0x419eae
  419eaf:	ds aas 
  419eb1:	adc    bh,bh
  419eb3:	or     DWORD PTR [ecx+0x0],0xffffff8e
  419eb7:	mov    ah,ch
  419eb9:	add    bh,bh
  419ebb:	inc    DWORD PTR [eax]
  419ebd:	or     DWORD PTR [ecx+0x3b87dc],ecx
  419ec3:	add    BYTE PTR [edx-0x1],cl
  419ec6:	in     eax,0x96
  419ec8:	adc    bh,bh
  419eca:	add    ah,cl
  419ecc:	add    BYTE PTR [edx],ch
  419ece:	jmp    FWORD PTR [ebp-0x3c7b]
  419ed4:	push   es
  419ed5:	sbb    DWORD PTR [ecx],0xfffffffc
  419ed8:	inc    edx
  419ed9:	mov    DWORD PTR [eax],eax
  419edb:	add    bh,bh
  419edd:	sub    eax,0xfce9dff
  419ee2:	(bad)  
  419ee3:	inc    DWORD PTR [ebx-0x618ea700]
  419ee9:	(bad)  
  419eea:	(bad)  
  419eeb:	dec    DWORD PTR [ecx-0xde07639]
  419ef1:	stos   BYTE PTR es:[edi],al
  419ef2:	mov    edi,edi
  419ef4:	dec    ebx
  419ef5:	add    al,bl
  419ef7:	add    al,BYTE PTR [edx-0xff7d00]
  419efd:	ins    BYTE PTR es:[edi],dx
  419efe:	inc    DWORD PTR [edi+0xff5a5a]
  419f04:	mov    edx,0x26b0c5ff
  419f09:	add    BYTE PTR [eax],al
  419f0b:	cmp    edi,0xffffffbc
  419f0e:	jmp    FWORD PTR [edi]
  419f10:	sti    
  419f11:	jae    0x419f12
  419f13:	jmp    DWORD PTR [ebx-0x34]
  419f16:	fist   WORD PTR [ebx-0x21]
  419f19:	cmp    edi,0xffffffff
  419f1c:	add    BYTE PTR [edx+0x0],cl
  419f1f:	push   ecx
  419f20:	dec    eax
  419f21:	xchg   BYTE PTR [eax],al
  419f23:	push   DWORD PTR [eax]
  419f25:	add    BYTE PTR [edi],al
  419f27:	not    DWORD PTR [edx]
  419f29:	dec    esp
  419f2b:	inc    DWORD PTR [eax]
  419f2d:	cld    
  419f2e:	add    BYTE PTR [edx+0x83dbb8],al
  419f34:	(bad)  
  419f36:	aaa    
  419f37:	jl     0x419fb8
  419f39:	add    BYTE PTR [ebx-0xb10001],al
  419f3f:	adc    edx,DWORD PTR [eax]
  419f41:	loope  0x419ec6
  419f43:	add    BYTE PTR [edi-0x1],dh
  419f46:	xor    al,0x82
  419f48:	fiadd  WORD PTR [eax]
  419f4a:	(bad)  
  419f4b:	inc    DWORD PTR [ebx+0xadb00c0]
  419f51:	or     ah,cl
  419f53:	add    bl,ah
  419f55:	call   FWORD PTR [ecx]
  419f57:	mov    edi,0x89000086
  419f5c:	(bad)  
  419f5d:	cmp    al,BYTE PTR [ebx-0x15bc35]
  419f63:	(bad)  
  419f64:	out    dx,al
  419f65:	mov    DWORD PTR [edx],esp
  419f67:	pop    eax
  419f68:	imul   eax,DWORD PTR [ebx+0x35cc8300],0xfbaba489
  419f72:	dec    DWORD PTR [ecx-0x50500df]
  419f78:	mov    al,ds:0xff000083
  419f7d:	cmp    cl,ah
  419f7f:	ret    0x7f61
  419f82:	mov    DWORD PTR [eax],eax
  419f84:	cmp    eax,DWORD PTR [eax]
  419f86:	ret    
  419f87:	sbb    BYTE PTR [eax],0xff
  419f8a:	int3   
  419f8b:	add    BYTE PTR [eax],al
  419f8d:	aad    0xff
  419f8f:	test   al,0x1b
  419f91:	mov    al,0x0
  419f93:	int3   
  419f94:	dec    esp
  419f95:	push   eax
  419f97:	inc    esp
  419f98:	jle    0x419f23
  419f9a:	add    BYTE PTR [ebx-0x7a006034],al
  419fa0:	aaa    
  419fa1:	inc    esp
  419fa2:	dec    esp
  419fa4:	aas    
  419fa5:	jmp    FWORD PTR [esi+0x53]
  419fa8:	mov    ecx,0x83ffffff
  419fad:	mov    ecx,0x66a883ff
  419fb2:	inc    DWORD PTR [ebx+0x1aae8972]
  419fb8:	push   0xffffffff
  419fba:	inc    DWORD PTR [eax]
  419fbc:	(bad)  
  419fbd:	cld    
  419fbe:	adc    ebp,0x29
  419fc1:	int    0x0
  419fc3:	or     DWORD PTR [ecx+0x132492cc],0xffffffff
  419fca:	(bad)  
  419fcb:	(bad)  
  419fcc:	inc    DWORD PTR [edx-0x65b2f301]
  419fd2:	or     esp,0x31
  419fd5:	inc    DWORD PTR [ecx-0x59]
  419fd8:	add    bh,bh
  419fda:	cmp    edi,0xffffffcc
  419fdd:	repnz add BYTE PTR [esi],dh
  419fe0:	in     al,dx
  419fe1:	sar    edi,0xff
  419fe4:	push   0xffffffff
  419fe6:	sbb    bh,BYTE PTR [edi]
  419fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fe9:	cmp    edi,0x0
  419fec:	or     DWORD PTR [edi],0xffffff89
  419fef:	sahf   
  419ff0:	repnz popa 
  419ff2:	int3   
  419ff3:	and    DWORD PTR [edi+edi*8+0x5d],0xa
  419ff8:	mov    ebp,0xff
  419ffd:	inc    esi
  419ffe:	jmp    DWORD PTR [edi]
  41a000:	aaa    
  41a001:	adc    bh,bh
  41a003:	(bad)  
  41a004:	call   0x83904b92
  41a009:	add    bh,bh
  41a00b:	(bad)  
  41a00c:	call   DWORD PTR [edx-0x491a900]
  41a012:	add    BYTE PTR [eax],al
  41a014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a015:	add    bl,al
  41a017:	sub    edx,DWORD PTR [eax+eax*1]
  41a01a:	cmp    edi,0xffffff89
  41a01d:	sub    DWORD PTR [eax],eax
  41a01f:	imul   DWORD PTR [ecx+0x1289ff7c]
  41a025:	jmp    FWORD PTR [ebp-0x64]
  41a028:	inc    ebx
  41a029:	add    BYTE PTR [ecx-0x7cf37634],cl
  41a02f:	bound  ebx,QWORD PTR [edx]
  41a031:	stos   DWORD PTR es:[edi],eax
  41a032:	dec    DWORD PTR [ecx-0x3beb7c38]
  41a038:	add    DWORD PTR [eax],0xf7ffff83
  41a03e:	add    DWORD PTR [ebp-0x29],0xfffffff2
  41a042:	inc    DWORD PTR [eax]
  41a044:	add    ecx,esp
  41a046:	icebp  
  41a047:	xor    al,0x5a
  41a049:	mov    DWORD PTR [eax],eax
  41a04b:	add    ah,cl
  41a04d:	cmp    edi,edi
  41a04f:	jp     0x41a00e
  41a051:	cmp    DWORD PTR [ebx-0xb76c200],eax
  41a057:	push   ebx
  41a058:	hlt    
  41a059:	inc    DWORD PTR [ebx-0xd0100]
  41a05f:	hlt    
  41a060:	pop    ds
  41a061:	aam    0x89
  41a063:	dec    DWORD PTR [ebx-0x3a207c00]
  41a069:	mov    DWORD PTR [ebx+0x4fff89],eax
  41a06f:	lods   al,BYTE PTR ds:[esi]
  41a070:	dec    ebx
  41a071:	inc    DWORD PTR cs:[eax]
  41a074:	and    al,BYTE PTR [eax]
  41a076:	sbb    al,0xdc
  41a078:	idiv   bh
  41a07a:	(bad)  
  41a07b:	inc    DWORD PTR [eax]
  41a07d:	adc    ah,cl
  41a07f:	mov    eax,0xcc2f65
  41a084:	(bad)  
  41a086:	fwait
  41a087:	jecxz  0x41a064
  41a089:	add    bh,bh
  41a08b:	add    bh,bh
  41a08d:	(bad)  
  41a08e:	int3   
  41a08f:	repz clc 
  41a091:	test   esp,ecx
  41a093:	add    BYTE PTR [edx-0x4367aa01],dh
  41a099:	mov    edi,edi
  41a09b:	inc    DWORD PTR [ebx-0x184eff67]
  41a0a1:	xchg   ebx,eax
  41a0a2:	(bad)  
  41a0a3:	jmp    FWORD PTR [ebp-0x7d]
  41a0a6:	push   ebx
  41a0a7:	push   edx
  41a0a8:	jge    0x41a0aa
  41a0aa:	add    bh,bh
  41a0ac:	add    dh,cl
  41a0ae:	int3   
  41a0af:	sahf   
  41a0b0:	cdq    
  41a0b1:	test   DWORD PTR [eax],0xa400dacc
  41a0b7:	ins    BYTE PTR es:[edi],dx
  41a0b8:	jns    0x41a0b9
  41a0ba:	add    bh,bh
  41a0bc:	int3   
  41a0bd:	add    bh,bh
  41a0bf:	outs   dx,BYTE PTR ds:[esi]
  41a0c0:	rcr    DWORD PTR [edx],0x0
  41a0c3:	mov    DWORD PTR ds:0x54a1f5ff,edx
  41a0c9:	(bad)  
  41a0ca:	inc    DWORD PTR [ebx+0xb83e700]
  41a0d0:	adc    BYTE PTR [edx],bh
  41a0d2:	mov    edi,edi
  41a0d4:	pop    ebx
  41a0d5:	add    BYTE PTR [edx+0x2bbf],ch
  41a0db:	add    BYTE PTR [eax],al
  41a0dd:	adc    bh,bh
  41a0df:	out    0x8e,eax
  41a0e1:	aaa    
  41a0e2:	add    DWORD PTR [ebx-0x5b9d0058],0x51
  41a0e9:	add    BYTE PTR [eax],al
  41a0eb:	add    BYTE PTR [eax],al
  41a0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ee:	(bad)  
  41a0ef:	cld    
  41a0f0:	xchg   esi,eax
  41a0f1:	outs   dx,DWORD PTR ds:[esi]
  41a0f2:	add    ah,cl
  41a0f4:	mov    bh,bh
  41a0f6:	out    0x96,eax
  41a0f8:	jb     0x41a0f9
  41a0fa:	cmp    edi,0xffffffff
  41a0fd:	int    0x0
  41a0ff:	mov    al,ds:0x89ff1a35
  41a104:	sbb    eax,DWORD PTR [ebx-0x9a481a]
  41a10a:	inc    DWORD PTR [eax]
  41a10c:	xor    DWORD PTR [edi-0x4d09c700],0xffffffff
  41a113:	add    BYTE PTR [esi+0x0],cl
  41a116:	aaa    
  41a117:	mov    ecx,DWORD PTR [eax]
  41a119:	add    bh,bh
  41a11b:	inc    DWORD PTR [ebx-0x145d7c8c]
  41a121:	mov    al,ds:0xffa5ff00
  41a126:	mov    ecx,0x89006d04
  41a12b:	(bad)  
  41a12c:	(bad)  
  41a12d:	jge    0x41a12f
  41a12f:	fs icebp 
  41a131:	cld    
  41a132:	add    bh,bh
  41a134:	(bad)  
  41a136:	xchg   cl,bl
  41a138:	loopne 0x41a139
  41a13a:	add    bh,bh
  41a13c:	dec    DWORD PTR [ebp-0x627c3101]
  41a142:	add    DWORD PTR [eax],0x4b
  41a145:	int3   
  41a146:	mov    ebp,0xffff9715
  41a14b:	(bad)  
  41a14c:	push   DWORD PTR [edi-0x1]
  41a14f:	sub    bl,BYTE PTR [ebx+0x40]
  41a152:	(bad)  
  41a153:	(bad)  
  41a154:	fild   WORD PTR [eax]
  41a156:	ja     0x41a112
  41a158:	cmp    BYTE PTR [ecx-0x4f007601],cl
  41a15e:	add    ch,ah
  41a160:	jae    0x41a116
  41a162:	inc    DWORD PTR [eax]
  41a164:	stc    
  41a165:	(bad)  
  41a166:	cld    
  41a167:	retf   0x833d
  41a16a:	add    bh,bh
  41a16c:	dec    DWORD PTR [ecx-0x7d]
  41a16f:	inc    esp
  41a170:	dec    esi
  41a171:	cmp    eax,0xff7dff00
  41a176:	mov    BYTE PTR [edi],cl
  41a178:	idiv   edi
  41a17a:	dec    DWORD PTR [ecx-0x8ff3934]
  41a180:	mov    WORD PTR [ecx-0x7c360100],?
  41a186:	mov    WORD PTR [ecx-0x70],gs
  41a189:	add    BYTE PTR [ebx-0x7c0aff77],al
  41a18f:	shl    BYTE PTR [esi+0xcffffda],1
  41a195:	add    al,dh
  41a197:	or     ebp,eax
  41a199:	add    BYTE PTR [eax],al
  41a19b:	add    bh,bh
  41a19d:	(bad)  
  41a19f:	imul   ebx,DWORD PTR [esi],0x50
  41a1a2:	or     esp,0xffffffed
  41a1a5:	(bad)  
  41a1a6:	cmp    BYTE PTR [edx+0x51],dh
  41a1a9:	int3   
  41a1aa:	(bad)  
  41a1ab:	(bad)  
  41a1ac:	call   FWORD PTR [edi+edi*8]
  41a1af:	jge    0x41a212
  41a1b1:	sub    bh,bh
  41a1b3:	add    DWORD PTR ds:0xccf3a0cc,0xffffffff
  41a1ba:	mov    esp,ecx
  41a1bc:	int3   
  41a1bd:	retf   
  41a1be:	int3   
  41a1bf:	xchg   ebp,eax
  41a1c0:	das    
  41a1c1:	inc    ecx
  41a1c2:	add    bh,bh
  41a1c4:	mov    DWORD PTR [ecx+0x50942],ecx
  41a1ca:	inc    DWORD PTR [eax]
  41a1cc:	add    bh,ah
  41a1ce:	inc    DWORD PTR [edx-0x69]
  41a1d1:	sar    bh,1
  41a1d3:	call   FWORD PTR [eax+eax*1+0x0]
  41a1d7:	into   
  41a1d8:	jo     0x41a15d
  41a1da:	add    BYTE PTR [ebx-0x467cf401],al
  41a1e0:	stos   BYTE PTR es:[edi],al
  41a1e1:	aaa    
  41a1e2:	add    BYTE PTR [eax],al
  41a1e4:	mov    ds:0xb803b300,al
  41a1e9:	int3   
  41a1ea:	int3   
  41a1eb:	inc    DWORD PTR [eax]
  41a1ed:	(bad)  
  41a1ef:	add    eax,0x83ff50d9
  41a1f4:	add    eax,0xbe2a1bff
  41a1f9:	int3   
  41a1fa:	(bad)  
  41a1fb:	inc    DWORD PTR [ebx+0x4f4700fb]
  41a201:	xor    BYTE PTR [ecx-0x307cb834],cl
  41a207:	repz pop ebx
  41a209:	inc    DWORD PTR [ebx+0xceffff]
  41a20f:	leave  
  41a210:	std    
  41a211:	sar    edi,cl
  41a213:	add    BYTE PTR [ecx-0x1],bh
  41a216:	in     al,dx
  41a217:	lock push 0xff8983
  41a21d:	mov    ebp,0x8e941cff
  41a222:	add    DWORD PTR [eax],0x71
  41a225:	add    bh,bl
  41a227:	sbb    esi,DWORD PTR [eax-0x7d]
  41a22a:	(bad)  
  41a22b:	dec    esp
  41a22d:	or     al,BYTE PTR [eax]
  41a22f:	mov    al,0x24
  41a231:	xchg   ecx,eax
  41a232:	inc    DWORD PTR [eax]
  41a234:	jae    0x41a235
  41a236:	into   
  41a237:	out    dx,eax
  41a238:	add    DWORD PTR [eax],0xffffffff
  41a23b:	add    DWORD PTR [ebx-0xe930055],0x18
  41a242:	dec    esp
  41a244:	mov    al,0xff
  41a246:	and    al,0xd0
  41a248:	inc    edi
  41a249:	(bad)  
  41a24a:	dec    DWORD PTR [ecx-0xff9401]
  41a250:	cmp    al,0x19
  41a252:	add    DWORD PTR [eax],0xffffffc1
  41a255:	call   FWORD PTR [edx+0x9971]
  41a25b:	int3   
  41a25c:	(bad)  
  41a25d:	jp     0x41a25f
  41a25f:	add    eax,0x837880
  41a264:	cwde   
  41a265:	jmp    eax
  41a267:	shl    DWORD PTR [ecx+ecx*4-0x1],cl
  41a26b:	inc    DWORD PTR [eax]
  41a26d:	pop    ss
  41a26e:	int3   
  41a26f:	fdiv   QWORD PTR [eax-0x560076ed]
  41a275:	xor    DWORD PTR [ebx+ebx*8],0x4f
  41a279:	int3   
  41a27a:	(bad)  
  41a27b:	inc    DWORD PTR [ebx-0x6e1f00f8]
  41a281:	dec    edx
  41a282:	(bad)  
  41a283:	call   DWORD PTR [edx]
  41a285:	xor    DWORD PTR [esp+edx*1-0x76000090],0xffffffcc
  41a28d:	lods   eax,DWORD PTR ds:[esi]
  41a28e:	dec    edx
  41a290:	jae    0x41a30e
  41a292:	add    bh,bh
  41a294:	ja     0x41a219
  41a296:	mov    dl,0xe2
  41a298:	cmp    edi,0x650000ff
  41a29e:	sub    DWORD PTR [eax+0x3f],0x5f
  41a2a2:	inc    DWORD PTR [eax]
  41a2a4:	icebp  
  41a2a5:	call   FWORD PTR [ebp-0x9cd4]
  41a2ab:	(bad)  
  41a2ac:	jmp    FWORD PTR [ebp-0x77]
  41a2af:	push   ds
  41a2b0:	xchg   edx,eax
  41a2b1:	mov    ecx,esp
  41a2b3:	dec    DWORD PTR [ebx]
  41a2b5:	call   DWORD PTR [ebx+0x44]
  41a2b8:	sub    DWORD PTR [ecx-0x51000100],ecx
  41a2be:	dec    esi
  41a2c0:	aad    0xef
  41a2c2:	int3   
  41a2c3:	jmp    DWORD PTR [esi+0x0]
  41a2c6:	sub    DWORD PTR [eax+0x1],esp
  41a2c9:	(bad)  
  41a2ca:	inc    DWORD PTR [ebx-0x4fff2c00]
  41a2d0:	in     al,0x9f
  41a2d2:	add    BYTE PTR [eax],al
  41a2d4:	std    
  41a2d5:	dec    DWORD PTR [eax+0xbf56]
  41a2db:	int3   
  41a2dc:	jmp    DWORD PTR [edx+0x50f70800]
  41a2e2:	mov    edi,edi
  41a2e4:	adc    al,0xff
  41a2e6:	add    DWORD PTR [ecx-0x2d],ebp
  41a2e9:	(bad)  
  41a2ea:	dec    esp
  41a2ec:	dec    ebx
  41a2ee:	push   DWORD PTR [esp+esi*1-0x4f00ff0a]
  41a2f5:	add    BYTE PTR [eax],bl
  41a2f7:	or     DWORD PTR [ecx-0x337c0077],eax
  41a2fd:	pop    esp
  41a2fe:	add    DWORD PTR [eax+ebp*8-0x21ffffcb],0xffffffff
  41a306:	xchg   esp,eax
  41a307:	addr16 pop es
  41a309:	inc    DWORD PTR [eax]
  41a30b:	add    ah,cl
  41a30d:	retf   
  41a30e:	add    BYTE PTR [edx],bh
  41a310:	push   ds
  41a311:	add    BYTE PTR fs:[eax],al
  41a314:	dec    edi
  41a315:	cmp    DWORD PTR [ecx-0x7c152f],0x0
  41a31c:	add    BYTE PTR [ebp-0x7d],dl
  41a31f:	mov    eax,0xff73e2
  41a324:	mov    BYTE PTR [eax],0x39
  41a327:	test   DWORD PTR [ebp-0x7c000100],esp
  41a32d:	pushf  
  41a32e:	call   DWORD PTR [ecx]
  41a330:	jno    0x41a347
  41a332:	add    bh,bh
  41a334:	jno    0x41a335
  41a336:	mov    ch,0xbf
  41a338:	pop    esi
  41a339:	add    bh,bh
  41a33b:	int3   
  41a33c:	add    ah,bh
  41a33e:	int3   
  41a33f:	dec    ebx
  41a340:	mov    al,ds:0x6d83ff3f
  41a345:	jmp    FWORD PTR [esi+0x9]
  41a348:	scas   al,BYTE PTR es:[edi]
  41a349:	inc    DWORD PTR [eax]
  41a34b:	add    BYTE PTR [ecx+0x4711ff2e],cl
  41a351:	mov    edi,0xfff8cc89
  41a356:	mov    ebp,0xff83b05c
  41a35b:	inc    DWORD PTR [eax]
  41a35d:	push   ds
  41a35e:	add    ch,dl
  41a360:	xchg   DWORD PTR [eax+eax*1-0x7007301],ebp
  41a367:	out    dx,eax
  41a368:	enter  0xff,0x0
  41a36c:	(bad)  
  41a36d:	jns    0x41a36e
  41a36f:	sub    ah,BYTE PTR [edi+0x71]
  41a372:	add    bh,bh
  41a374:	outs   dx,BYTE PTR ds:[esi]
  41a375:	call   FWORD PTR [edx+edx*1-0xc7]
  41a37c:	add    BYTE PTR [ecx-0x2481a501],cl
  41a382:	(bad)  
  41a383:	call   FWORD PTR [edx-0x1]
  41a386:	xlat   BYTE PTR ds:[ebx]
  41a387:	push   esp
  41a388:	ds cmp edi,0xffffff83
  41a38c:	sbb    DWORD PTR [eax-0x2394aa01],0xffffffff
  41a393:	add    BYTE PTR [ecx],cl
  41a395:	inc    esi
  41a397:	(bad)  [ebx+eax*4+0x0]
  41a39b:	dec    esp
  41a39d:	pop    edx
  41a39e:	mov    DWORD PTR [edx-0xff1e3e],ebp
  41a3a4:	fdivp  st(7),st
  41a3a6:	jle    0x41a334
  41a3a8:	add    bh,bh
  41a3aa:	add    bh,bh
  41a3ac:	dec    DWORD PTR [ebp-0x1]
  41a3af:	adc    DWORD PTR [edi-0x59007ce1],esi
  41a3b5:	jmp    FWORD PTR [ebp-0x330087a3]
  41a3bb:	or     esp,0xffffffcf
  41a3be:	xor    DWORD PTR [edx+eiz*8-0x2fff004b],0x0
  41a3c6:	inc    eax
  41a3c7:	test   DWORD PTR [edi],ebx
  41a3c9:	inc    DWORD PTR [eax]
  41a3cb:	cmp    edi,0xffffff8f
  41a3ce:	dec    DWORD PTR [ecx+0xff7368]
  41a3d4:	pop    ds
  41a3d5:	dec    edx
  41a3d7:	xchg   ebp,eax
  41a3d8:	loope  0x41a3d9
  41a3da:	add    BYTE PTR [eax],al
  41a3dc:	call   DWORD PTR [ecx-0x1]
  41a3df:	aas    
  41a3e0:	mov    eax,0xd389ff84
  41a3e5:	and    ecx,0x19
  41a3e8:	jmp    0x41a3e9
  41a3ea:	inc    DWORD PTR [ebx+0x5100b7ff]
  41a3f0:	mov    al,ds:0x9700ffe5
  41a3f5:	dec    DWORD PTR [ebx+ebp*8-0x33ffff4b]
  41a3fc:	jmp    FWORD PTR [ebp-0x7d]
  41a3ff:	pop    eax
  41a400:	adc    BYTE PTR [ebx+0xf9ffff],0x57
  41a407:	(bad)  
  41a409:	or     DWORD PTR [ecx-0x33057d00],0xffffff92
  41a410:	mov    ebx,0xe7ffff73
  41a415:	int3   
  41a416:	js     0x41a3f8
  41a418:	mov    esi,0x83cc00
  41a41d:	pop    eax
  41a41e:	add    ch,bl
  41a420:	shl    BYTE PTR [ebp-0x9d7c01],0x25
  41a427:	jnp    0x41a3fd
  41a429:	inc    DWORD PTR [eax]
  41a42b:	add    BYTE PTR [eax],al
  41a42d:	xchg   esi,eax
  41a42e:	call   DWORD PTR [ecx]
  41a430:	imul   ebx,DWORD PTR ds:0xffc200ff,0x2673e9
  41a43a:	inc    DWORD PTR [eax]
  41a43c:	add    ebx,0xffffffff
  41a43f:	int3   
  41a440:	xchg   edx,eax
  41a441:	xor    edi,edi
  41a443:	add    BYTE PTR [ecx+0x0],dl
  41a446:	sahf   
  41a447:	jne    0x41a472
  41a449:	add    BYTE PTR [eax],al
  41a44b:	add    bh,bh
  41a44d:	xor    al,0x0
  41a44f:	int    0x92
  41a451:	sub    al,0x83
  41a453:	inc    ecx
  41a455:	mov    DWORD PTR [ebp-0x6a],ebx
  41a458:	xor    al,0xff
  41a45a:	dec    DWORD PTR [ecx-0x5500cf01]
  41a460:	stos   BYTE PTR es:[edi],al
  41a461:	fadd   DWORD PTR [eax]
  41a463:	cmp    DWORD PTR [eax-0x34],0x46
  41a467:	fisub  WORD PTR [esi+0xffff00]
  41a46d:	mov    dl,0x83
  41a46f:	cmp    dh,ah
  41a471:	aas    
  41a472:	mov    edi,edi
  41a474:	cmc    
  41a475:	jmp    FWORD PTR [esi+0xff18ec]
  41a47b:	cmp    edi,0xfffffffb
  41a47e:	add    BYTE PTR [esi*4+0x57ffff1a],bl
  41a485:	and    ebp,0xffffffb9
  41a488:	adc    al,0x0
  41a48a:	(bad)  
  41a48b:	(bad)  
  41a48c:	(bad)  
  41a48d:	call   0x9e521215
  41a492:	add    BYTE PTR [ebx+0x7bf8003c],al
  41a498:	or     bh,bh
  41a49a:	add    DWORD PTR [eax],0xffffffff
  41a49d:	mov    edi,?
  41a49f:	push   cs
  41a4a0:	inc    esp
  41a4a1:	sbb    bh,bh
  41a4a3:	add    DWORD PTR [edx],0xffffff83
  41a4a6:	cld    
  41a4a7:	cwde   
  41a4a8:	adc    BYTE PTR [eax],al
  41a4aa:	mov    DWORD PTR [eax],eax
  41a4ac:	add    BYTE PTR [ebx],al
  41a4ae:	dec    DWORD PTR [eax-0x3b]
  41a4b1:	push   eax
  41a4b2:	add    BYTE PTR [ebx-0x3df00071],al
  41a4b8:	pushf  
  41a4b9:	cmp    edi,0x0
  41a4bc:	add    BYTE PTR ds:0x3e69e2ff,cl
  41a4c2:	add    bh,bh
  41a4c4:	rol    BYTE PTR [eax],cl
  41a4c6:	mov    ebp,0x83ff9410
  41a4cb:	inc    DWORD PTR [eax]
  41a4cd:	adc    edi,edi
  41a4cf:	xchg   ebp,eax
  41a4d0:	dec    ebx
  41a4d1:	jg     0x41a4d2
  41a4d3:	call   esi
  41a4d5:	add    BYTE PTR [edi],bl
  41a4d7:	lea    esi,[edi-0x7d0000]
  41a4dd:	xor    al,0x0
  41a4df:	inc    esp
  41a4e0:	leave  
  41a4e1:	dec    eax
  41a4e2:	add    bh,bh
  41a4e4:	mov    BYTE PTR [eax],al
  41a4e6:	xor    al,0xff
  41a4e8:	es dec esp
  41a4eb:	dec    DWORD PTR [ecx+0x3fa1ffa0]
  41a4f1:	rol    BYTE PTR [eax],cl
  41a4f3:	int3   
  41a4f4:	mov    BYTE PTR [ebx-0x3376515a],0x89
  41a4fb:	int3   
  41a4fc:	add    BYTE PTR [ebp+0x0],al
  41a4ff:	(bad)  
  41a500:	mov    cl,0x8a
  41a502:	mov    edi,edi
  41a504:	push   0x9aaa5a00
  41a509:	mov    DWORD PTR [ebx+0x9ccc00],eax
  41a50f:	add    al,0xcc
  41a511:	and    edi,edi
  41a513:	inc    DWORD PTR [ebx]
  41a515:	add    BYTE PTR [edi],ah
  41a517:	jl     0x41a4d0
  41a519:	add    bh,bh
  41a51b:	add    BYTE PTR [eax],al
  41a51d:	fwait
  41a51e:	add    BYTE PTR [ebp+ebp*2+0x75],dh
  41a522:	add    BYTE PTR [ebx-0x6a3e3352],al
  41a528:	mov    ecx,esp
  41a52a:	add    bh,bh
  41a52c:	int3   
  41a52d:	test   eax,0xf2d6f000
  41a532:	add    bh,bh
  41a534:	int3   
  41a535:	add    BYTE PTR [edi-0x7c2066],dl
  41a53b:	inc    DWORD PTR [eax]
  41a53d:	lods   al,BYTE PTR ds:[esi]
  41a53e:	int3   
  41a53f:	cmp    ch,dh
  41a541:	dec    ebp
  41a542:	add    bh,bh
  41a544:	loope  0x41a546
  41a546:	inc    edx
  41a547:	das    
  41a548:	dec    esi
  41a549:	add    ah,cl
  41a54b:	int3   
  41a54c:	add    BYTE PTR [edi+0x48e051ff],dh
  41a552:	inc    DWORD PTR [ebx-0x4cb47626]
  41a558:	inc    edx
  41a559:	(bad)  
  41a55a:	inc    DWORD PTR [eax]
  41a55c:	(bad)  
  41a55d:	mov    esp,0xec83f483
  41a562:	or     al,0x56
  41a564:	mov    esi,DWORD PTR ds:0x444024
  41a56a:	push   edi
  41a56b:	push   0x28
  41a56d:	push   0x42
  41a56f:	call   esi
  41a571:	push   0x73
  41a573:	push   0x42
  41a575:	mov    DWORD PTR [esp+0x10],eax
  41a579:	call   esi
  41a57b:	push   0x5b
  41a57d:	push   0x42
  41a57f:	mov    DWORD PTR [esp+0x14],eax
  41a583:	call   esi
  41a585:	mov    edx,DWORD PTR ds:0x447d1c
  41a58b:	xor    esi,esi
  41a58d:	add    edx,0x139ac
  41a593:	mov    DWORD PTR [esp+0x10],eax
  41a597:	cmp    DWORD PTR ds:0x447004,esi
  41a59d:	jbe    0x41a5ea
  41a59f:	mov    ecx,DWORD PTR ds:0x447000
  41a5a5:	movzx  eax,BYTE PTR [ecx+0x5]
  41a5a9:	movzx  edi,WORD PTR [ecx+0x3]
  41a5ad:	movzx  ecx,BYTE PTR [ecx]
  41a5b0:	shl    eax,0x10
  41a5b3:	add    eax,edi
  41a5b5:	shl    eax,0x8
  41a5b8:	add    eax,ecx
  41a5ba:	mov    ecx,DWORD PTR ds:0x447d14
  41a5c0:	add    ecx,0xe33398cc
  41a5c6:	xor    ecx,eax
  41a5c8:	mov    ds:0x447d04,eax
  41a5cd:	mov    DWORD PTR [edx],ecx
  41a5cf:	mov    ecx,DWORD PTR ds:0x447000
  41a5d5:	add    ecx,0x8
  41a5d8:	inc    esi
  41a5d9:	add    edx,0x4
  41a5dc:	mov    DWORD PTR ds:0x447000,ecx
  41a5e2:	cmp    esi,DWORD PTR ds:0x447004
  41a5e8:	jb     0x41a5a5
  41a5ea:	mov    eax,ds:0x447d1c
  41a5ef:	mov    edx,DWORD PTR ds:0x447008
  41a5f5:	add    eax,0x1402c
  41a5fa:	mov    esi,0x4d
  41a5ff:	nop
  41a600:	movzx  ecx,WORD PTR [edx+0x4]
  41a604:	movzx  edi,BYTE PTR [edx+0x2]
  41a608:	movzx  edx,BYTE PTR [edx]
  41a60b:	shl    ecx,0x8
  41a60e:	add    ecx,edi
  41a610:	shl    ecx,0x8
  41a613:	add    ecx,edx
  41a615:	mov    DWORD PTR ds:0x447d04,ecx
  41a61b:	mov    edx,0x76f85fc7
  41a620:	sub    edx,DWORD PTR ds:0x447d14
  41a626:	xor    edx,ecx
  41a628:	mov    DWORD PTR [eax],edx
  41a62a:	mov    edx,DWORD PTR ds:0x447008
  41a630:	add    edx,0x8
  41a633:	mov    DWORD PTR ds:0x447008,edx
  41a639:	movzx  ecx,WORD PTR [edx+0x4]
  41a63d:	movzx  edi,BYTE PTR [edx+0x2]
  41a641:	movzx  edx,BYTE PTR [edx]
  41a644:	shl    ecx,0x8
  41a647:	add    ecx,edi
  41a649:	shl    ecx,0x8
  41a64c:	add    ecx,edx
  41a64e:	mov    DWORD PTR ds:0x447d04,ecx
  41a654:	mov    edx,0x76f85fc7
  41a659:	sub    edx,DWORD PTR ds:0x447d14
  41a65f:	xor    edx,ecx
  41a661:	mov    DWORD PTR [eax+0x4],edx
  41a664:	mov    edx,DWORD PTR ds:0x447008
  41a66a:	add    edx,0x8
  41a66d:	mov    DWORD PTR ds:0x447008,edx
  41a673:	movzx  ecx,WORD PTR [edx+0x4]
  41a677:	movzx  edi,BYTE PTR [edx+0x2]
  41a67b:	movzx  edx,BYTE PTR [edx]
  41a67e:	shl    ecx,0x8
  41a681:	add    ecx,edi
  41a683:	shl    ecx,0x8
  41a686:	add    ecx,edx
  41a688:	mov    DWORD PTR ds:0x447d04,ecx
  41a68e:	mov    edx,0x76f85fc7
  41a693:	sub    edx,DWORD PTR ds:0x447d14
  41a699:	xor    edx,ecx
  41a69b:	mov    DWORD PTR [eax+0x8],edx
  41a69e:	mov    edx,DWORD PTR ds:0x447008
  41a6a4:	add    edx,0x8
  41a6a7:	mov    DWORD PTR ds:0x447008,edx
  41a6ad:	movzx  ecx,WORD PTR [edx+0x4]
  41a6b1:	movzx  edi,BYTE PTR [edx+0x2]
  41a6b5:	movzx  edx,BYTE PTR [edx]
  41a6b8:	shl    ecx,0x8
  41a6bb:	add    ecx,edi
  41a6bd:	shl    ecx,0x8
  41a6c0:	add    ecx,edx
  41a6c2:	mov    DWORD PTR ds:0x447d04,ecx
  41a6c8:	mov    edx,0x76f85fc7
  41a6cd:	sub    edx,DWORD PTR ds:0x447d14
  41a6d3:	xor    edx,ecx
  41a6d5:	mov    DWORD PTR [eax+0xc],edx
  41a6d8:	mov    edx,DWORD PTR ds:0x447008
  41a6de:	add    edx,0x8
  41a6e1:	mov    DWORD PTR ds:0x447008,edx
  41a6e7:	movzx  ecx,WORD PTR [edx+0x4]
  41a6eb:	movzx  edi,BYTE PTR [edx+0x2]
  41a6ef:	movzx  edx,BYTE PTR [edx]
  41a6f2:	shl    ecx,0x8
  41a6f5:	add    ecx,edi
  41a6f7:	shl    ecx,0x8
  41a6fa:	add    ecx,edx
  41a6fc:	mov    DWORD PTR ds:0x447d04,ecx
  41a702:	mov    edx,0x76f85fc7
  41a707:	sub    edx,DWORD PTR ds:0x447d14
  41a70d:	xor    edx,ecx
  41a70f:	mov    DWORD PTR [eax+0x10],edx
  41a712:	mov    edx,DWORD PTR ds:0x447008
  41a718:	add    edx,0x8
  41a71b:	mov    DWORD PTR ds:0x447008,edx
  41a721:	movzx  ecx,WORD PTR [edx+0x4]
  41a725:	movzx  edi,BYTE PTR [edx+0x2]
  41a729:	movzx  edx,BYTE PTR [edx]
  41a72c:	shl    ecx,0x8
  41a72f:	add    ecx,edi
  41a731:	shl    ecx,0x8
  41a734:	add    ecx,edx
  41a736:	mov    edx,0x76f85fc7
  41a73b:	sub    edx,DWORD PTR ds:0x447d14
  41a741:	mov    DWORD PTR ds:0x447d04,ecx
  41a747:	xor    edx,ecx
  41a749:	mov    DWORD PTR [eax+0x14],edx
  41a74c:	mov    edx,DWORD PTR ds:0x447008
  41a752:	add    edx,0x8
  41a755:	add    eax,0x18
  41a758:	dec    esi
  41a759:	mov    DWORD PTR ds:0x447008,edx
  41a75f:	jne    0x41a600
  41a765:	mov    ecx,DWORD PTR ds:0x447d1c
  41a76b:	mov    eax,DWORD PTR [esp+0x18]
  41a76f:	add    ecx,0x14764
  41a775:	add    eax,0x4
  41a778:	mov    esi,0x7f
  41a77d:	lea    ecx,[ecx+0x0]
  41a780:	movzx  edx,BYTE PTR [eax+0x4]
  41a784:	movzx  edi,BYTE PTR [eax]
  41a787:	shl    edx,0x8
  41a78a:	add    edx,edi
  41a78c:	movzx  edi,WORD PTR [eax-0x4]
  41a790:	shl    edx,0x10
  41a793:	add    edx,edi
  41a795:	mov    edi,DWORD PTR ds:0x447d14
  41a79b:	add    edi,0x1a33423
  41a7a1:	xor    edi,edx
  41a7a3:	mov    DWORD PTR ds:0x447d04,edx
  41a7a9:	mov    DWORD PTR [ecx],edi
  41a7ab:	mov    edx,DWORD PTR [eax+0x6]
  41a7ae:	mov    DWORD PTR ds:0x447d04,edx
  41a7b4:	mov    edi,0x1a3b425
  41a7b9:	sub    edi,DWORD PTR ds:0x447d14
  41a7bf:	add    ecx,0x10
  41a7c2:	xor    edi,edx
  41a7c4:	mov    DWORD PTR [ecx-0xc],edi
  41a7c7:	movzx  edx,BYTE PTR [eax+0x14]
  41a7cb:	movzx  edi,BYTE PTR [eax+0x10]
  41a7cf:	shl    edx,0x8
  41a7d2:	add    edx,edi
  41a7d4:	movzx  edi,WORD PTR [eax+0xc]
  41a7d8:	shl    edx,0x10
  41a7db:	add    edx,edi
  41a7dd:	mov    edi,DWORD PTR ds:0x447d14
  41a7e3:	add    edi,0x1a33423
  41a7e9:	xor    edi,edx
  41a7eb:	mov    DWORD PTR ds:0x447d04,edx
  41a7f1:	mov    DWORD PTR [ecx-0x8],edi
  41a7f4:	mov    edx,DWORD PTR [eax+0x16]
  41a7f7:	mov    edi,0x1a3b425
  41a7fc:	sub    edi,DWORD PTR ds:0x447d14
  41a802:	mov    DWORD PTR ds:0x447d04,edx
  41a808:	xor    edi,edx
  41a80a:	mov    DWORD PTR [ecx-0x4],edi
  41a80d:	add    eax,0x20
  41a810:	dec    esi
  41a811:	jne    0x41a780
  41a817:	mov    edi,DWORD PTR ds:0x447d1c
  41a81d:	mov    esi,DWORD PTR [esp+0x1c]
  41a821:	push   ebx
  41a822:	push   ebp
  41a823:	mov    ebp,DWORD PTR ds:0x444028
  41a829:	add    edi,0x14f54
  41a82f:	add    esi,0x3
  41a832:	mov    ebx,0x17e
  41a837:	jmp    0x41a840
  41a839:	lea    esp,[esp+0x0]
  41a840:	movzx  eax,BYTE PTR [esi+0x3]
  41a844:	movzx  ecx,WORD PTR [esi]
  41a847:	movzx  edx,BYTE PTR [esi-0x2]
  41a84b:	shl    eax,0x10
  41a84e:	add    eax,ecx
  41a850:	shl    eax,0x8
  41a853:	add    eax,edx
  41a855:	push   0x446a9c
  41a85a:	mov    ds:0x447d04,eax
  41a85f:	call   ebp
  41a861:	mov    eax,ds:0x447d14
  41a866:	sub    eax,0x80004001
  41a86b:	neg    eax
  41a86d:	sbb    eax,eax
  41a86f:	and    eax,0x113b3514
  41a874:	add    eax,0xeec4e741
  41a879:	xor    eax,DWORD PTR ds:0x447d04
  41a87f:	add    edi,0x8
  41a882:	mov    DWORD PTR [edi-0x8],eax
  41a885:	movzx  eax,WORD PTR [esi+0xb]
  41a889:	movzx  ecx,WORD PTR [esi+0x5]
  41a88d:	mov    edx,DWORD PTR ds:0x447d14
  41a893:	shl    eax,0x10
  41a896:	add    eax,ecx
  41a898:	add    edx,0x6ec4a740
  41a89e:	xor    edx,eax
  41a8a0:	mov    ds:0x447d04,eax
  41a8a5:	mov    DWORD PTR [edi-0x4],edx
  41a8a8:	add    esi,0x10
  41a8ab:	dec    ebx
  41a8ac:	jne    0x41a840
  41a8ae:	mov    eax,ds:0x447d1c
  41a8b3:	mov    edx,DWORD PTR ds:0x44700c
  41a8b9:	pop    ebp
  41a8ba:	lea    esi,[ebx+0x67]
  41a8bd:	add    eax,0x15b44
  41a8c2:	pop    ebx
  41a8c3:	movzx  ecx,WORD PTR [edx+0x6]
  41a8c7:	movzx  edx,WORD PTR [edx+0x1]
  41a8cb:	shl    ecx,0x10
  41a8ce:	add    ecx,edx
  41a8d0:	mov    DWORD PTR ds:0x447d04,ecx
  41a8d6:	mov    edx,0xd124f60d
  41a8db:	sub    edx,DWORD PTR ds:0x447d14
  41a8e1:	add    eax,0x10
  41a8e4:	xor    edx,ecx
  41a8e6:	mov    DWORD PTR [eax-0x10],edx
  41a8e9:	mov    edx,DWORD PTR ds:0x44700c
  41a8ef:	add    edx,0x8
  41a8f2:	mov    DWORD PTR ds:0x44700c,edx
  41a8f8:	movzx  ecx,WORD PTR [edx+0x6]
  41a8fc:	movzx  edx,WORD PTR [edx+0x1]
  41a900:	shl    ecx,0x10
  41a903:	add    ecx,edx
  41a905:	mov    DWORD PTR ds:0x447d04,ecx
  41a90b:	mov    edx,0xd124f60d
  41a910:	sub    edx,DWORD PTR ds:0x447d14
  41a916:	xor    edx,ecx
  41a918:	mov    DWORD PTR [eax-0xc],edx
  41a91b:	mov    edx,DWORD PTR ds:0x44700c
  41a921:	add    edx,0x8
  41a924:	mov    DWORD PTR ds:0x44700c,edx
  41a92a:	movzx  ecx,WORD PTR [edx+0x6]
  41a92e:	movzx  edx,WORD PTR [edx+0x1]
  41a932:	shl    ecx,0x10
  41a935:	add    ecx,edx
  41a937:	mov    DWORD PTR ds:0x447d04,ecx
  41a93d:	mov    edx,0xd124f60d
  41a942:	sub    edx,DWORD PTR ds:0x447d14
  41a948:	xor    edx,ecx
  41a94a:	mov    DWORD PTR [eax-0x8],edx
  41a94d:	mov    edx,DWORD PTR ds:0x44700c
  41a953:	add    edx,0x8
  41a956:	mov    DWORD PTR ds:0x44700c,edx
  41a95c:	movzx  ecx,WORD PTR [edx+0x6]
  41a960:	movzx  edx,WORD PTR [edx+0x1]
  41a964:	shl    ecx,0x10
  41a967:	add    ecx,edx
  41a969:	mov    edx,0xd124f60d
  41a96e:	sub    edx,DWORD PTR ds:0x447d14
  41a974:	mov    DWORD PTR ds:0x447d04,ecx
  41a97a:	xor    edx,ecx
  41a97c:	mov    DWORD PTR [eax-0x4],edx
  41a97f:	mov    edx,DWORD PTR ds:0x44700c
  41a985:	add    edx,0x8
  41a988:	dec    esi
  41a989:	mov    DWORD PTR ds:0x44700c,edx
  41a98f:	jne    0x41a8c3
  41a995:	mov    ecx,DWORD PTR ds:0x447d1c
  41a99b:	mov    edx,DWORD PTR ds:0x447010
  41a9a1:	add    ecx,0x161b4
  41a9a7:	mov    esi,0xdb
  41a9ac:	lea    esp,[esp+0x0]
  41a9b0:	movzx  eax,BYTE PTR [edx+0x7]
  41a9b4:	movzx  edi,WORD PTR [edx+0x4]
  41a9b8:	movzx  edx,BYTE PTR [edx+0x1]
  41a9bc:	shl    eax,0x10
  41a9bf:	add    eax,edi
  41a9c1:	shl    eax,0x8
  41a9c4:	add    eax,edx
  41a9c6:	mov    edx,DWORD PTR ds:0x447d14
  41a9cc:	add    edx,0x663454b4
  41a9d2:	xor    edx,eax
  41a9d4:	mov    ds:0x447d04,eax
  41a9d9:	mov    DWORD PTR [ecx],edx
  41a9db:	mov    edx,DWORD PTR ds:0x447010
  41a9e1:	add    edx,0x8
  41a9e4:	mov    DWORD PTR ds:0x447010,edx
  41a9ea:	movzx  eax,BYTE PTR [edx+0x7]
  41a9ee:	movzx  edi,WORD PTR [edx+0x4]
  41a9f2:	movzx  edx,BYTE PTR [edx+0x1]
  41a9f6:	shl    eax,0x10
  41a9f9:	add    eax,edi
  41a9fb:	shl    eax,0x8
  41a9fe:	add    eax,edx
  41aa00:	mov    edx,DWORD PTR ds:0x447d14
  41aa06:	add    edx,0x663454b4
  41aa0c:	xor    edx,eax
  41aa0e:	mov    ds:0x447d04,eax
  41aa13:	mov    DWORD PTR [ecx+0x4],edx
  41aa16:	mov    edx,DWORD PTR ds:0x447010
  41aa1c:	add    edx,0x8
  41aa1f:	mov    DWORD PTR ds:0x447010,edx
  41aa25:	movzx  eax,BYTE PTR [edx+0x7]
  41aa29:	movzx  edi,WORD PTR [edx+0x4]
  41aa2d:	movzx  edx,BYTE PTR [edx+0x1]
  41aa31:	shl    eax,0x10
  41aa34:	add    eax,edi
  41aa36:	shl    eax,0x8
  41aa39:	add    eax,edx
  41aa3b:	mov    edx,DWORD PTR ds:0x447d14
  41aa41:	add    edx,0x663454b4
  41aa47:	xor    edx,eax
  41aa49:	mov    ds:0x447d04,eax
  41aa4e:	mov    DWORD PTR [ecx+0x8],edx
  41aa51:	mov    edx,DWORD PTR ds:0x447010
  41aa57:	add    edx,0x8
  41aa5a:	add    ecx,0xc
  41aa5d:	dec    esi
  41aa5e:	mov    DWORD PTR ds:0x447010,edx
  41aa64:	jne    0x41a9b0
  41aa6a:	mov    eax,DWORD PTR [esp+0x8]
  41aa6e:	mov    esi,DWORD PTR ds:0x44402c
  41aa74:	test   eax,eax
  41aa76:	je     0x41aa7b
  41aa78:	push   eax
  41aa79:	call   esi
  41aa7b:	mov    eax,DWORD PTR [esp+0xc]
  41aa7f:	test   eax,eax
  41aa81:	je     0x41aa86
  41aa83:	push   eax
  41aa84:	call   esi
  41aa86:	mov    eax,DWORD PTR [esp+0x10]
  41aa8a:	test   eax,eax
  41aa8c:	je     0x41aa91
  41aa8e:	push   eax
  41aa8f:	call   esi
  41aa91:	pop    edi
  41aa92:	pop    esi
  41aa93:	add    esp,0xc
  41aa96:	ret    
  41aa97:	int3   
  41aa98:	int3   
  41aa99:	int3   
  41aa9a:	int3   
  41aa9b:	int3   
  41aa9c:	int3   
  41aa9d:	int3   
  41aa9e:	int3   
  41aa9f:	int3   
  41aaa0:	(bad)  
  41aaa1:	mov    ebx,0xb6c2ff
  41aaa6:	inc    DWORD PTR [ebx+0x10900068]
  41aaac:	cmp    al,BYTE PTR [eax]
  41aaae:	add    BYTE PTR [ebp-0x53002201],dl
  41aab4:	sbb    edi,edi
  41aab6:	cmp    edi,0xffffffbe
  41aab9:	add    BYTE PTR [esi-0x19],bh
  41aabc:	mov    bl,0xff
  41aabe:	add    BYTE PTR [eax+eax*1],ah
  41aac1:	aaa    
  41aac2:	dec    DWORD PTR [ebx+0x68]
  41aac5:	inc    DWORD PTR [eax]
  41aac7:	jmp    FWORD PTR [esi-0x34]
  41aaca:	add    edi,DWORD PTR [ecx]
  41aacc:	das    
  41aacd:	inc    DWORD PTR [eax]
  41aacf:	icebp  
  41aad0:	int3   
  41aad1:	sub    edi,edi
  41aad3:	inc    BYTE PTR [edi]
  41aad5:	inc    DWORD PTR [eax]
  41aad7:	add    bl,dl
  41aad9:	xor    DWORD PTR [ebx],0x5e
  41aadc:	mov    esi,0xff8b00cc
  41aae1:	cmp    edi,edi
  41aae3:	push   ecx
  41aae4:	cmp    bh,0x0
  41aae7:	dec    DWORD PTR [esi-0x1]
  41aaea:	fisubr DWORD PTR [edx+0xb]
  41aaed:	cmp    edi,0x56
  41aaf0:	add    BYTE PTR [edi-0x7c56e200],bh
  41aaf6:	(bad)  
  41aaf7:	call   DWORD PTR [ecx-0x3f215401]
  41aafd:	add    BYTE PTR [eax],al
  41aaff:	int3   
  41ab00:	mov    eax,edx
  41ab02:	add    BYTE PTR [eax+ebx*8+0x46ffffff],ah
  41ab09:	jmp    FWORD PTR [ebx+esi*1-0x3a007c47]
  41ab10:	adc    esi,0xffffff83
  41ab13:	mov    ebp,0xff833c
  41ab18:	std    
  41ab19:	adc    DWORD PTR [eax],0x57
  41ab1c:	es mov edi,edi
  41ab1f:	mov    edi,0x56009e00
  41ab24:	or     ah,0xff
  41ab27:	add    BYTE PTR [edi+edi*8],ah
  41ab2a:	dec    esi
  41ab2b:	lahf   
  41ab2c:	and    bh,bh
  41ab2e:	add    BYTE PTR [ebx+eax*4],al
  41ab31:	mov    ah,0x0
  41ab33:	xchg   edi,eax
  41ab34:	aas    
  41ab35:	(bad)  
  41ab36:	inc    DWORD PTR [ebx-0x5a3f76c7]
  41ab3c:	cli    
  41ab3d:	(bad)  
  41ab3e:	jmp    FWORD PTR [edx]
  41ab40:	adc    DWORD PTR [ebx-0x7d],0x18
  41ab44:	push   es
  41ab45:	add    bh,bh
  41ab47:	push   DWORD PTR [esi+0x0]
  41ab4a:	adc    DWORD PTR [edx+0x23],esi
  41ab4d:	int3   
  41ab4e:	int3   
  41ab4f:	in     al,dx
  41ab50:	inc    DWORD PTR [ecx]
  41ab52:	add    BYTE PTR [ecx-0x7c33c9],dh
  41ab58:	cmp    al,BYTE PTR [eax]
  41ab5a:	or     edx,DWORD PTR [ecx]
  41ab5c:	sbb    al,BYTE PTR [eax]
  41ab5e:	call   DWORD PTR [eax-0x1]
  41ab61:	dec    ebx
  41ab62:	int3   
  41ab63:	out    0x70,al
  41ab65:	dec    esp
  41ab67:	mov    DWORD PTR [ecx-0x1],esp
  41ab6a:	ret    0x48f4
  41ab6d:	mov    DWORD PTR [ecx+0xacff04],ecx
  41ab73:	ds push eax
  41ab75:	add    bh,bh
  41ab77:	add    dl,bh
  41ab79:	add    BYTE PTR [ebx+esi*8-0x65003397],dl
  41ab80:	add    bh,dh
  41ab82:	add    dh,dl
  41ab84:	cmp    edi,0xffffff83
  41ab87:	add    BYTE PTR [eax],ch
  41ab89:	(bad)  
  41ab8a:	in     eax,dx
  41ab8b:	xchg   BYTE PTR [edi+0x9effff],dh
  41ab91:	xchg   edi,edi
  41ab93:	push   edi
  41ab94:	mov    cl,0x0
  41ab96:	(bad)  
  41ab97:	call   DWORD PTR ds:0x5ca092cc
  41ab9d:	inc    DWORD PTR [eax]
  41ab9f:	inc    ebp
  41aba0:	call   DWORD PTR [eax+0x5f7d00]
  41aba6:	inc    DWORD PTR [ebx-0x1d1876d3]
  41abac:	mov    ebp,0xff640000
  41abb1:	push   edx
  41abb2:	jmp    DWORD PTR ds:0xccff40
  41abb8:	xor    eax,0x4be3c9ff
  41abbd:	(bad)  
  41abbe:	push   esp
  41abc0:	jmp    DWORD PTR [ecx+0x0]
  41abc3:	xor    bl,BYTE PTR [ecx+0x0]
  41abc6:	int3   
  41abc7:	push   ebp
  41abc9:	inc    DWORD PTR [ecx-0x53]
  41abcc:	or     bh,bh
  41abce:	(bad)  
  41abcf:	mov    esp,0x7affa483
  41abd4:	repnz add bh,bh
  41abd7:	add    BYTE PTR [ecx],ch
  41abd9:	(bad)  
  41abda:	jmp    0xffc55ea6
  41abdf:	pushf  
  41abe0:	call   FWORD PTR [ebx]
  41abe2:	jmp    FWORD PTR [ecx-0xc5]
  41abe8:	(bad)  
  41abe9:	jmp    DWORD PTR [esi+0x2d]
  41abec:	push   ebx
  41abed:	add    bh,bh
  41abef:	mov    esp,0x7700f083
  41abf4:	pop    ds
  41abf5:	add    BYTE PTR [ebx-0x5cff3700],al
  41abfb:	addr16 sti 
  41abfd:	add    DWORD PTR [eax],0xffffff81
  41ac00:	add    BYTE PTR ds:0x899c0983,dl
  41ac06:	add    bh,bh
  41ac08:	inc    esi
  41ac09:	dec    DWORD PTR [eax-0x4cf7]
  41ac0f:	add    eax,0xeccc52ff
  41ac14:	daa    
  41ac15:	add    BYTE PTR [ebx-0x597c4601],al
  41ac1b:	pop    esi
  41ac1c:	js     0x41ac1e
  41ac1e:	mov    DWORD PTR [edx+0x57ff54ff],eax
  41ac24:	xchg   esp,ecx
  41ac26:	int3   
  41ac27:	add    dh,cl
  41ac29:	(bad)  
  41ac2a:	call   0x40f626
  41ac2f:	ltr    WORD PTR [edx]
  41ac32:	jmp    DWORD PTR [edi-0x4b]
  41ac35:	(bad)  
  41ac36:	(bad)  
  41ac37:	jmp    DWORD PTR [ebx-0x4709700]
  41ac3d:	cmp    edi,0xffffffa5
  41ac40:	add    BYTE PTR ds:0xffb3e8ff,dl
  41ac46:	mov    DWORD PTR [eax],eax
  41ac48:	clc    
  41ac49:	call   FWORD PTR [esi-0x72f3]
  41ac4f:	add    al,0xcc
  41ac51:	scas   eax,DWORD PTR es:[edi]
  41ac52:	mov    edi,ecx
  41ac54:	inc    DWORD PTR gs:[eax]
  41ac57:	add    dh,dl
  41ac59:	xor    DWORD PTR [edi],0xffffffdb
  41ac5c:	push   ds
  41ac5d:	add    bh,bh
  41ac5f:	inc    edx
  41ac60:	push   DWORD PTR [esi+0x437bff]
  41ac66:	int3   
  41ac67:	add    BYTE PTR [edi],dl
  41ac69:	add    cl,cl
  41ac6b:	jge    0x41acc9
  41ac6d:	inc    DWORD PTR [eax]
  41ac6f:	add    cl,ah
  41ac71:	inc    DWORD PTR [ebx-0x606f]
  41ac77:	call   DWORD PTR [edx-0x20ba4f77]
  41ac7d:	or     DWORD PTR [ecx-0xceff5d],0xffffffe7
  41ac84:	mov    bl,0x0
  41ac86:	add    BYTE PTR [eax],al
  41ac88:	out    0x0,eax
  41ac8a:	adc    BYTE PTR [eax],0x8b
  41ac8d:	add    DWORD PTR [ebx-0x910003],0x65
  41ac94:	fdiv   st(7),st
  41ac96:	dec    esp
  41ac98:	retf   0x9083
  41ac9b:	repnz sahf 
  41ac9d:	dec    esp
  41ac9f:	in     eax,dx
  41aca0:	or     DWORD PTR [eax-0x77],0x2a
  41aca4:	dec    esp
  41aca5:	int3   
  41aca6:	(bad)  
  41aca7:	dec    eax
  41aca9:	int3   
  41acaa:	push   0x8300388a
  41acaf:	and    bh,bh
  41acb1:	lahf   
  41acb2:	adc    DWORD PTR [ebp-0x45],0xffffff89
  41acb6:	inc    DWORD PTR [eax]
  41acb8:	leave  
  41acb9:	push   DWORD PTR [edi-0x11]
  41acbc:	inc    DWORD PTR cs:[ebx-0x327c80]
  41acc3:	xor    ebp,DWORD PTR [ebp+0x6500ffff]
  41acc9:	sbb    DWORD PTR [ecx+esi*4+0x3d],0xffffffcc
  41acce:	int3   
  41accf:	out    dx,eax
  41acd0:	add    BYTE PTR [edi],dh
  41acd2:	add    BYTE PTR [edi-0x330076b7],dl
  41acd8:	in     al,dx
  41acd9:	(bad)  
  41acda:	cmp    edx,ecx
  41acdc:	iret   
  41acdd:	cmp    edi,0x63
  41ace0:	(bad)  
  41ace1:	cmp    eax,0xff56f083
  41ace6:	add    BYTE PTR [eax],al
  41ace8:	pop    edx
  41ace9:	add    BYTE PTR [ebp-0x10],ch
  41acec:	adc    bh,bh
  41acee:	add    BYTE PTR [ebx],ah
  41acf0:	add    BYTE PTR [eax+0x316c00],dl
  41acf6:	cmp    edi,0xffffff96
  41acf9:	dec    DWORD PTR [ecx-0xb824]
  41acff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad00:	push   DWORD PTR ds:0xccfa0f00
  41ad06:	add    BYTE PTR [eax],al
  41ad08:	mov    esp,0x51d844ff
  41ad0d:	add    BYTE PTR [eax],al
  41ad0f:	ins    DWORD PTR es:[edi],dx
  41ad10:	and    eax,0xffffffcc
  41ad13:	or     BYTE PTR [ecx+0x18ffffff],ch
  41ad19:	add    BYTE PTR [edi-0x55],bh
  41ad1c:	mov    eax,0x52ff00
  41ad21:	inc    ecx
  41ad22:	add    BYTE PTR [ebp-0xff7e],cl
  41ad28:	or     DWORD PTR [bp+di],0xfffffff9
  41ad2c:	add    BYTE PTR [bx+si],al
  41ad2f:	icebp  
  41ad30:	and    DWORD PTR [edi+0xfc7aff],0xffffffff
  41ad37:	add    BYTE PTR [eax+0x24b9eb00],bh
  41ad3d:	int3   
  41ad3e:	and    DWORD PTR [edi-0x1],0xe
  41ad42:	cmp    DWORD PTR [edi],0xffffffb6
  41ad45:	dec    DWORD PTR [ecx-0x3a001600]
  41ad4b:	in     al,0x15
  41ad4d:	add    BYTE PTR [eax],al
  41ad4f:	cmc    
  41ad50:	add    BYTE PTR [edi-0xe14400],bh
  41ad56:	(bad)  
  41ad57:	jmp    FWORD PTR [ebx+0x7d2e1300]
  41ad5d:	dec    esp
  41ad5f:	xchg   edx,eax
  41ad60:	int3   
  41ad61:	jp     0x41ad62
  41ad63:	jnp    0x41ad12
  41ad65:	or     DWORD PTR [ecx+0x15ff64ff],0x67
  41ad6c:	and    eax,DWORD PTR [eax]
  41ad6e:	(bad)  
  41ad6f:	mov    ecx,0x2d89eccc
  41ad74:	push   esi
  41ad75:	mov    edi,edi
  41ad77:	add    BYTE PTR [esi-0x1],ah
  41ad7a:	fld    TBYTE PTR [edx+0x21]
  41ad7d:	(bad)  
  41ad7e:	call   FWORD PTR [edi-0x1]
  41ad81:	jg     0x41ad4f
  41ad83:	xchg   ebx,eax
  41ad84:	mov    ch,0x83
  41ad86:	cmp    edi,0xffffff9b
  41ad89:	add    BYTE PTR [esi-0x3300b230],dh
  41ad8f:	sub    al,0x0
  41ad91:	mov    ds:0xffe932ff,eax
  41ad96:	(bad)  
  41ad97:	(bad)  
  41ad98:	fdiv   st(7),st
  41ad9a:	xchg   esp,eax
  41ad9b:	inc    ecx
  41ad9c:	int    0xff
  41ad9e:	add    BYTE PTR [ebx+eax*4],dh
  41ada1:	aaa    
  41ada2:	call   FWORD PTR [edx-0xf2]
  41ada8:	xchg   esp,eax
  41ada9:	jmp    ebx
  41adab:	imul   esi,DWORD PTR [edx],0xffffffff
  41adae:	add    al,bl
  41adb0:	sub    DWORD PTR ds:0xdc183,0xffffffff
  41adb7:	call   FWORD PTR [esi+0x0]
  41adba:	pop    ecx
  41adbb:	or     DWORD PTR [ecx+0x0],0xa200f683
  41adc2:	call   DWORD PTR [ebx-0x3300001e]
  41adc8:	cwde   
  41adc9:	add    BYTE PTR [edi],bh
  41adcb:	cmp    DWORD PTR [edi+edi*8],ebx
  41adce:	adc    DWORD PTR [ecx-0x6276d67d],0xffffff92
  41add5:	(bad)  
  41add6:	inc    DWORD PTR [ebx-0x4a97000b]
  41addc:	out    dx,al
  41addd:	int3   
  41adde:	sbb    DWORD PTR [eax+0x6affdd00],0xffffff95
  41ade5:	add    bh,bh
  41ade7:	(bad)  
  41ade8:	mov    esi,0xbad95883
  41aded:	dec    DWORD PTR [ecx-0x7c6f33b7]
  41adf3:	mov    es,WORD PTR [ebx-0x7d]
  41adf6:	add    BYTE PTR [ebx-0x6d933ef],al
  41adfc:	(bad)  
  41adfe:	jmp    FWORD PTR [ecx+0x59ff5bff]
  41ae04:	pop    eax
  41ae05:	or     DWORD PTR [ecx+0x6600fc83],0x11
  41ae0c:	imul   edi,edi,0x54fff8ff
  41ae12:	mov    DWORD PTR [eax+0x9c],ecx
  41ae18:	add    BYTE PTR ds:[edx+eiz*1-0x40],ch
  41ae1d:	add    BYTE PTR [ebx-0x33ea0080],al
  41ae23:	test   eax,0xff00ff53
  41ae28:	pop    es
  41ae29:	inc    DWORD PTR [eax-0x597b]
  41ae2f:	cmc    
  41ae30:	(bad)  
  41ae31:	out    dx,eax
  41ae32:	add    cl,dh
  41ae34:	push   ebp
  41ae35:	add    BYTE PTR [ecx-0x37ff447d],cl
  41ae3b:	loopne 0x41aea4
  41ae3d:	mov    edi,edi
  41ae3f:	mov    ds:0x5189abcc,al
  41ae44:	je     0x41ae46
  41ae46:	add    bh,bh
  41ae48:	xchg   edi,edi
  41ae4a:	cmp    eax,0xff7aa8
  41ae4f:	retf   
  41ae50:	or     DWORD PTR [ecx],0x0
  41ae53:	fdiv   DWORD PTR [esi-0x1]
  41ae56:	add    bh,bh
  41ae58:	clc    
  41ae59:	jmp    DWORD PTR [esp+ebx*1+0x4e]
  41ae5d:	add    DWORD PTR [eax],0xffffff9b
  41ae60:	push   DWORD PTR [ecx-0x10aa01]
  41ae66:	add    bh,bh
  41ae68:	outs   dx,DWORD PTR ds:[esi]
  41ae69:	push   DWORD PTR [esi]
  41ae6b:	mov    bl,0x84
  41ae6d:	(bad)  
  41ae6e:	jmp    DWORD PTR [eax]
  41ae70:	add    dl,bh
  41ae72:	add    cl,bh
  41ae74:	xchg   esp,ecx
  41ae76:	dec    DWORD PTR [ecx-0x3b7c0038]
  41ae7c:	dec    ebx
  41ae7d:	add    DWORD PTR [eax],0x7f
  41ae80:	add    BYTE PTR [ecx-0x1],ch
  41ae83:	jnp    0x41ae1f
  41ae85:	add    bh,bh
  41ae87:	add    BYTE PTR [edi-0x61e42901],ah
  41ae8d:	add    ah,cl
  41ae8f:	sbb    BYTE PTR [ebx+0x1ccf83cd],al
  41ae95:	mov    edi,edi
  41ae97:	(bad)  
  41ae98:	out    dx,al
  41ae99:	(bad)  
  41ae9a:	fild   DWORD PTR [ecx]
  41ae9c:	push   es
  41ae9d:	int3   
  41ae9e:	add    cl,dh
  41aea0:	or     esi,0x0
  41aea3:	into   
  41aea4:	cmp    edi,edi
  41aea6:	add    BYTE PTR [eax],al
  41aea8:	int3   
  41aea9:	(bad)  
  41aeaa:	mov    esp,0x89ff1de3
  41aeaf:	jne    0x41aeb0
  41aeb1:	sbb    edi,edi
  41aeb3:	fstp   QWORD PTR [edi]
  41aeb5:	mov    edi,edi
  41aeb7:	jmp    DWORD PTR [ecx+0x31b24f00]
  41aebd:	(bad)  
  41aebe:	jmp    DWORD PTR ds:0xa083beff
  41aec4:	xchg   edx,eax
  41aec5:	(bad)  
  41aec6:	(bad)  
  41aec7:	jmp    ebx
  41aec9:	sub    DWORD PTR [edi-0x76ff40ed],0x6d
  41aed0:	int3   
  41aed1:	jmp    0x41ae56
  41aed3:	call   0xffd7:0xffff0034
  41aeda:	jns    0x41af0d
  41aedc:	sub    bh,bh
  41aede:	call   DWORD PTR [eax+eax*1]
  41aee1:	jno    0x41aee2
  41aee3:	push   esi
  41aee4:	ret    0x83
  41aee7:	call   FWORD PTR [eax-0x5e6e800]
  41aeed:	mov    DWORD PTR [eax],eax
  41aeef:	outs   dx,BYTE PTR ds:[esi]
  41aef0:	adc    esi,0xffffff89
  41aef3:	jne    0x41aed6
  41aef5:	add    bh,bh
  41aef7:	dec    edx
  41aef9:	cmp    DWORD PTR [ecx-0x80],0xffffff89
  41aefd:	add    BYTE PTR [eax],al
  41aeff:	clc    
  41af00:	sub    DWORD PTR [edx],0xffffff83
  41af03:	inc    ecx
  41af04:	into   
  41af05:	add    BYTE PTR [eax],al
  41af07:	sbb    edx,0xffffff83
  41af0a:	out    0xc4,al
  41af0c:	inc    edx
  41af0d:	add    bh,bh
  41af0f:	push   0x64ffa0ff
  41af14:	sub    ecx,esp
  41af16:	inc    DWORD PTR [ebx+0xec7ffd1]
  41af1c:	adc    al,0x89
  41af1e:	inc    DWORD PTR [edx-0x7d007d01]
  41af24:	iret   
  41af25:	add    ah,cl
  41af27:	add    BYTE PTR [ebx-0x37ed5201],dl
  41af2d:	add    bh,bh
  41af2f:	pusha  
  41af30:	jmp    FWORD PTR [edi+0x0]
  41af33:	loopne 0x41afaa
  41af35:	add    BYTE PTR [eax],al
  41af37:	jmp    FWORD PTR [ecx+0x7a9e900]
  41af3d:	(bad)  
  41af3e:	(bad)  
  41af3f:	jg     0x41af40
  41af41:	dec    edx
  41af42:	jmp    FWORD PTR [edi+0x7]
  41af45:	mov    edi,edi
  41af47:	int3   
  41af48:	js     0x41af4a
  41af4a:	shr    DWORD PTR [ebp+0x7d00831a],0x83
  41af51:	inc    esi
  41af52:	jmp    DWORD PTR [esi-0x40]
  41af55:	(bad)  
  41af56:	inc    DWORD PTR [eax]
  41af58:	aam    0xff
  41af5a:	inc    ebp
  41af5b:	push   ebx
  41af5c:	sar    bh,1
  41af5e:	push   ebx
  41af60:	add    BYTE PTR [esi+0xa70400],dl
  41af66:	inc    DWORD PTR [eax]
  41af68:	(bad)  
  41af69:	mov    DWORD PTR [ebp-0x3d],esp
  41af6c:	jecxz  0x41af3a
  41af6e:	xor    DWORD PTR [esi],0xffffffff
  41af71:	clc    
  41af72:	call   FWORD PTR [esi-0x44]
  41af75:	add    BYTE PTR [eax],al
  41af77:	call   esi
  41af79:	cmp    DWORD PTR [eax+0x61],0x62
  41af7d:	add    DWORD PTR [eax],0xffffffc6
  41af80:	(bad)  
  41af81:	jmp    0x83:0xcc50f6ff
  41af88:	mov    al,0x0
  41af8a:	outs   dx,BYTE PTR ds:[esi]
  41af8b:	xor    eax,DWORD PTR [edi-0x1]
  41af8e:	dec    DWORD PTR [ebp-0x7d]
  41af91:	add    BYTE PTR [eax],0xcb
  41af94:	das    
  41af95:	int3   
  41af96:	add    bh,bh
  41af98:	pop    eax
  41af99:	add    BYTE PTR [ecx],ah
  41af9b:	push   es
  41af9c:	jmp    0xccf2aea1
  41afa1:	aaa    
  41afa2:	add    DWORD PTR [edx+0x45],0xffffffcc
  41afa6:	add    BYTE PTR [ebx-0x1b863310],al
  41afac:	iret   
  41afad:	inc    DWORD PTR [eax]
  41afaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afb0:	mov    DWORD PTR [edi-0x34],esp
  41afb3:	mov    BYTE PTR [ecx+0x0],dl
  41afb6:	add    bh,bh
  41afb8:	dec    ecx
  41afb9:	add    BYTE PTR [esi-0x330055e5],dl
  41afbf:	jl     0x41afc0
  41afc1:	sbb    al,0x83
  41afc3:	data16 cmc 
  41afc5:	add    BYTE PTR [ecx+0x7dffdeff],cl
  41afcb:	aad    0x91
  41afcd:	add    BYTE PTR [eax],al
  41afcf:	idiv   edi
  41afd1:	sldt   WORD PTR [edi-0x27]
  41afd5:	(bad)  
  41afd6:	(bad)  
  41afd7:	(bad)  
  41afd8:	mov    ebp,0x6f11a189
  41afdd:	or     DWORD PTR [ecx+0x7890a],0xa
  41afe4:	xor    DWORD PTR [eax],eax
  41afe6:	dec    DWORD PTR [ecx+0x1f37ffce]
  41afec:	xchg   esp,eax
  41afed:	add    BYTE PTR [ebx-0x76d200ae],al
  41aff3:	test   DWORD PTR ds:0x260000ff,ebx
  41aff9:	(bad)  
  41affa:	fbld   TBYTE PTR [ecx]
  41affc:	or     cl,ah
  41affe:	sub    DWORD PTR [ebx+eax*4],0x52
  41b002:	(bad)  
  41b003:	cmp    DWORD PTR [eax],ebx
  41b005:	add    bh,bh
  41b007:	jmp    FWORD PTR [eax+0x0]
  41b00a:	push   ss
  41b00b:	xchg   ebx,eax
  41b00c:	mov    BYTE PTR [eax],al
  41b00e:	adc    DWORD PTR [ebx+0x51ff9000],0xffffff97
  41b015:	add    BYTE PTR [eax],al
  41b017:	jmp    DWORD PTR [esi]
  41b019:	add    bl,ah
  41b01b:	bound  ecx,QWORD PTR [ebx+0x0]
  41b01e:	call   edx
  41b020:	add    BYTE PTR ds:0x6a0800,dl
  41b026:	add    bh,bh
  41b028:	adc    edi,edi
  41b02a:	clc    
  41b02b:	xor    DWORD PTR ds:0xffbc8983,esp
  41b031:	xchg   esp,eax
  41b032:	add    BYTE PTR [esi+0x47],dl
  41b035:	dec    DWORD PTR [ecx-0x6b33df00]
  41b03b:	push   edx
  41b03c:	cli    
  41b03d:	dec    esp
  41b03f:	aas    
  41b040:	(bad)  
  41b041:	sti    
  41b042:	add    BYTE PTR [ebx+0x89007c],al
  41b048:	test   DWORD PTR [eax],eax
  41b04a:	xchg   esi,eax
  41b04b:	popa   
  41b04c:	mov    bh,0xff
  41b04e:	inc    DWORD PTR [ecx+ecx*4+0x373900bc]
  41b055:	(bad)  
  41b056:	(bad)  
  41b057:	inc    DWORD PTR [ebx-0x1]
  41b05a:	xchg   DWORD PTR [edi-0xf],ebp
  41b05d:	mov    edi,edi
  41b05f:	(bad)  
  41b060:	jmp    FWORD PTR [ecx]
  41b062:	add    BYTE PTR [edi-0x26],bh
  41b065:	add    DWORD PTR [ebx-0x6f005a7d],0xffffffcd
  41b06c:	push   cs
  41b06d:	dec    DWORD PTR [ecx-0x90089]
  41b073:	pop    ecx
  41b074:	mov    esi,0x62ffffff
  41b079:	add    BYTE PTR [edi+0x83a0d2],ch
  41b07f:	mov    eax,ds:0xdb008fff
  41b084:	push   ecx
  41b085:	(bad)  
  41b086:	(bad)  
  41b087:	inc    DWORD PTR [ebx-0x34]
  41b08a:	add    BYTE PTR [eax-0x2b7c00ee],dh
  41b090:	or     DWORD PTR [edi+edi*8+0x48],0x53
  41b095:	inc    DWORD PTR [eax]
  41b097:	add    DWORD PTR [edi+edi*8+0x4cfb2c],0xffffffff
  41b09f:	das    
  41b0a0:	inc    DWORD PTR [esi-0x133601]
  41b0a6:	inc    DWORD PTR [eax]
  41b0a8:	mov    ch,0x89
  41b0aa:	test   BYTE PTR [esi+0x7bff0089],bl
  41b0b0:	add    BYTE PTR [eax-0x1],dl
  41b0b3:	js     0x41b0a4
  41b0b5:	add    DWORD PTR [ebx-0xcff5f34],0xffffffd5
  41b0bc:	pop    edi
  41b0bd:	add    bh,bh
  41b0bf:	pop    ebx
  41b0c0:	and    DWORD PTR [edx],0xffffff83
  41b0c3:	inc    ebx
  41b0c4:	dec    edx
  41b0c5:	inc    DWORD PTR [eax]
  41b0c7:	jmp    FWORD PTR [edx-0x1]
  41b0ca:	dec    ebp
  41b0cb:	gs mov dl,0xff
  41b0ce:	add    BYTE PTR [eax-0x34ff8401],cl
  41b0d4:	addr16 cmp edi,0x0
  41b0d8:	mov    ?,edi
  41b0da:	mov    dl,0x7a
  41b0dc:	fcos   
  41b0de:	add    BYTE PTR [edi+edi*8-0x6],dl
  41b0e2:	dec    DWORD PTR [edx]
  41b0e4:	and    al,0xff
  41b0e6:	add    bh,bh
  41b0e8:	inc    eax
  41b0e9:	inc    DWORD PTR [ebp-0xff8cf9]
  41b0ef:	jb     0x41b0f0
  41b0f1:	ret    0x5189
  41b0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0f5:	dec    esp
  41b0f7:	xor    DWORD PTR [ebx],0xffffffff
  41b0fa:	addr16 xor bl,ah
  41b0fd:	(bad)  
  41b0fe:	push   DWORD PTR [edx]
  41b100:	push   esp
  41b102:	call   FWORD PTR [ebx-0x34]
  41b105:	int3   
  41b106:	inc    DWORD PTR [eax]
  41b108:	fadd   DWORD PTR [eax]
  41b10a:	mov    ds:0xccd622,eax
  41b10f:	scas   al,BYTE PTR es:[edi]
  41b110:	int3   
  41b111:	out    0x83,al
  41b113:	xor    al,0xfc
  41b115:	int3   
  41b116:	int3   
  41b117:	add    ch,dl
  41b119:	sub    DWORD PTR [edx+0x47],0x10
  41b11d:	dec    DWORD PTR [ecx-0x540051]
  41b123:	pusha  
  41b124:	sar    edi,0x83
  41b127:	push   ebp
  41b129:	add    BYTE PTR [edi+ecx*8+0x2a],al
  41b12d:	inc    DWORD PTR [eax]
  41b12f:	test   BYTE PTR [eax],0x2c
  41b132:	add    BYTE PTR [ebx-0x69],dh
  41b135:	(bad)  
  41b136:	(bad)  
  41b137:	jmp    ebx
  41b139:	call   FWORD PTR [eax-0x4f]
  41b13c:	pop    ecx
  41b13d:	inc    DWORD PTR [eax]
  41b13f:	xor    eax,0x9dff9000
  41b144:	inc    esp
  41b145:	(bad)  
  41b146:	(bad)  
  41b147:	call   ebp
  41b149:	mov    DWORD PTR [esi-0xff8446],eax
  41b14f:	pop    edi
  41b150:	call   DWORD PTR [edx-0x1]
  41b153:	jns    0x41b124
  41b155:	mov    edi,edi
  41b157:	(bad)  
  41b158:	jns    0x41b159
  41b15a:	jmp    0xff85:0xffff5628
  41b161:	fild   WORD PTR [eax]
  41b163:	adc    dl,0x0
  41b166:	inc    DWORD PTR [eax]
  41b168:	sti    
  41b169:	add    BYTE PTR [ecx-0xc],bl
  41b16c:	dec    ecx
  41b16d:	(bad)  
  41b16e:	jmp    DWORD PTR [ebp+0x0]
  41b171:	jmp    0xffcc:0x83234483
  41b178:	inc    edi
  41b179:	dec    DWORD PTR [esi-0x3e4f]
  41b17f:	or     edi,edi
  41b181:	fild   WORD PTR [eax]
  41b183:	mov    ds:0x89008329,al
  41b188:	push   ss
  41b189:	jmp    DWORD PTR [edx-0x7b]
  41b18c:	cmp    edi,0xffffffff
  41b18f:	out    dx,al
  41b190:	push   edi
  41b192:	int3   
  41b193:	div    BYTE PTR [esi-0x76ff0001]
  41b199:	inc    esp
  41b19b:	pop    ds
  41b19c:	out    0xff,al
  41b19e:	dec    esi
  41b1a0:	add    bl,ch
  41b1a2:	mov    DWORD PTR [ebx-0xf8],edx
  41b1a8:	sub    eax,0x827510ff
  41b1ad:	dec    esp
  41b1af:	stc    
  41b1b0:	add    BYTE PTR [edx-0xbd9d7d],ah
  41b1b6:	inc    DWORD PTR [ebx+0x3beeffa2]
  41b1bc:	stos   DWORD PTR es:[edi],eax
  41b1bd:	add    bh,bh
  41b1bf:	je     0x41b1c0
  41b1c1:	fdivr  st,st(7)
  41b1c3:	mov    ecx,0x83ff0f
  41b1c8:	jecxz  0x41b1ca
  41b1ca:	imul   edi,esp,0xf6ffff9c
  41b1d0:	call   DWORD PTR [edx]
  41b1d2:	sbb    DWORD PTR [edx+0x10],0xffffffff
  41b1d6:	add    BYTE PTR [eax],al
  41b1d8:	mov    dl,0xff
  41b1da:	add    DWORD PTR [edx+0x61],ebx
  41b1dd:	add    DWORD PTR [ebx-0x7660009b],0xffffffc4
  41b1e4:	mov    bl,0xff
  41b1e6:	add    BYTE PTR [eax],al
  41b1e8:	stos   DWORD PTR es:[edi],eax
  41b1e9:	mov    DWORD PTR [esi-0x7c004ae7],esi
  41b1ef:	sub    DWORD PTR [eax],eax
  41b1f1:	jbe    0x41b17c
  41b1f3:	xchg   esi,eax
  41b1f4:	std    
  41b1f5:	add    bh,bh
  41b1f7:	jmp    FWORD PTR [ebx]
  41b1f9:	int3   
  41b1fa:	inc    ecx
  41b1fb:	or     eax,0x52ffff39
  41b200:	int3   
  41b201:	out    dx,eax
  41b202:	int3   
  41b203:	xor    al,0xf9
  41b205:	add    bh,bh
  41b207:	inc    edi
  41b209:	jmp    DWORD PTR [esi]
  41b20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b20c:	xor    eax,DWORD PTR [eax]
  41b20e:	inc    DWORD PTR [ebx+0xf839000]
  41b214:	cmp    eax,DWORD PTR [eax]
  41b216:	add    DWORD PTR [eax],0xb
  41b219:	(bad)  
  41b21a:	cmp    eax,0xff6417
  41b21f:	int3   
  41b220:	int3   
  41b221:	cmp    al,BYTE PTR [eax]
  41b223:	pop    ds
  41b224:	pushf  
  41b225:	add    DWORD PTR [eax],0x0
  41b228:	addr16 (bad) 
  41b22a:	inc    BYTE PTR [eax-0xeffff4e]
  41b230:	add    BYTE PTR [ebx],cl
  41b232:	add    BYTE PTR [ecx],cl
  41b234:	or     al,BYTE PTR [eax]
  41b236:	(bad)  
  41b237:	call   DWORD PTR [edi+edi*8]
  41b23a:	dec    ebx
  41b23b:	xchg   esi,eax
  41b23c:	pop    esi
  41b23d:	add    BYTE PTR [ebx-0x2a764d],al
  41b243:	(bad)  
  41b244:	(bad)  
  41b245:	(bad)  
  41b246:	inc    DWORD PTR [eax]
  41b248:	loopne 0x41b249
  41b24a:	add    eax,0xffff804d
  41b24f:	mov    ds:0xbd834000,al
  41b254:	mov    bh,bh
  41b256:	add    BYTE PTR [ecx+0x449bcc6a],cl
  41b25c:	dec    edi
  41b25d:	mov    DWORD PTR [eax],eax
  41b25f:	cld    
  41b260:	(bad)  
  41b261:	std    
  41b262:	mov    DWORD PTR [edx-0x2d],edx
  41b265:	add    bh,bh
  41b267:	add    BYTE PTR [eax+0x3fae0dff],ch
  41b26d:	add    DWORD PTR [ebx-0x7c0bff51],0x7d
  41b274:	cmp    bh,0xcc
  41b277:	call   DWORD PTR [ebx-0x4faf8b01]
  41b27d:	inc    DWORD PTR [eax]
  41b27f:	stc    
  41b280:	call   DWORD PTR ds:0x83d15200
  41b286:	dec    DWORD PTR [ecx-0x707d008d]
  41b28c:	call   0x8958:0xcc2eccff
  41b293:	xlat   BYTE PTR ds:[ebx]
  41b294:	std    
  41b295:	int3   
  41b296:	add    bh,bh
  41b298:	xchg   ebp,eax
  41b299:	add    BYTE PTR [ebx-0xe42f],bl
  41b29f:	(bad)  
  41b2a0:	inc    DWORD PTR [ebx-0x7d]
  41b2a3:	retf   0xff71
  41b2a6:	(bad)  
  41b2a7:	call   DWORD PTR [edi+edi*8-0x651023]
  41b2ae:	add    BYTE PTR [edx+0x4e891fff],dl
  41b2b4:	retf   0xff83
  41b2b7:	and    edx,0x0
  41b2ba:	mov    eax,ds:0x83ff1176
  41b2bf:	outs   dx,BYTE PTR ds:[esi]
  41b2c0:	(bad)  
  41b2c1:	mov    eax,0x88d4ff
  41b2c6:	inc    DWORD PTR [eax]
  41b2c8:	fadd   DWORD PTR [eax]
  41b2ca:	stos   BYTE PTR es:[edi],al
  41b2cb:	pop    DWORD PTR ds:0xff2f8300
  41b2d1:	into   
  41b2d2:	add    esi,0xffffffce
  41b2d5:	mov    DWORD PTR [ecx+0x7889db00],ecx
  41b2db:	lds    edi,FWORD PTR [edi+edi*8+0x58ff1083]
  41b2e2:	jmp    eax
  41b2e4:	rol    DWORD PTR [eax],cl
  41b2e6:	add    bh,bh
  41b2e8:	fdivp  st(7),st
  41b2ea:	xor    esi,DWORD PTR [ecx-0x6003365]
  41b2f0:	int3   
  41b2f1:	push   esi
  41b2f2:	inc    DWORD PTR [ecx-0xffff8d]
  41b2f8:	mov    bl,0xff
  41b2fa:	cmp    DWORD PTR [ecx],0x66ffffe9
  41b300:	push   esi
  41b302:	mov    DWORD PTR [eax+esi*4],eax
  41b305:	add    BYTE PTR [ecx+0x68000c00],cl
  41b30b:	jg     0x41b327
  41b30d:	inc    DWORD PTR [eax]
  41b30f:	mov    WORD PTR [eax],es
  41b311:	dec    esp
  41b312:	(bad)  
  41b313:	cld    
  41b314:	sahf   
  41b315:	mov    edi,edi
  41b317:	call   esi
  41b319:	mov    ebp,edx
  41b31b:	add    DWORD PTR [eax-0x7cf6ff01],esi
  41b321:	xchg   ebx,eax
  41b322:	sbb    DWORD PTR [esi],0x55
  41b325:	add    DWORD PTR [eax],0xffffffff
  41b328:	fwait
  41b329:	(bad)  
  41b32a:	jg     0x41b326
  41b32c:	sbb    bh,bh
  41b32e:	add    BYTE PTR [esi],ah
  41b330:	inc    DWORD PTR [ebx]
  41b332:	dec    DWORD PTR [esi-0x91]
  41b338:	hlt    
  41b339:	add    BYTE PTR [edi-0x71],al
  41b33c:	(bad)  
  41b33d:	add    bh,bh
  41b33f:	add    BYTE PTR [eax],0x5a
  41b342:	call   DWORD PTR [esi+0xffcc67]
  41b348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b349:	mov    DWORD PTR [esi-0x33cd95],edi
  41b34f:	fadd   DWORD PTR [eax]
  41b351:	stc    
  41b352:	(bad)  
  41b353:	mov    esi,0xff8989e3
  41b358:	dec    eax
  41b359:	sbb    DWORD PTR [eax-0x7cff1ba2],0xffffffae
  41b360:	int3   
  41b361:	fadd   DWORD PTR [eax]
  41b363:	xchg   ebp,eax
  41b364:	or     edi,edi
  41b366:	mov    DWORD PTR [ebx+0x1f4fff13],eax
  41b36c:	addr16 add bh,bh
  41b36f:	or     al,0x89
  41b371:	mov    bh,bh
  41b373:	sbb    BYTE PTR [edx-0x1],ch
  41b376:	add    bh,bh
  41b378:	je     0x41b303
  41b37a:	inc    edi
  41b37b:	xor    BYTE PTR [edi-0x380000],ah
  41b381:	cmp    DWORD PTR [ebx-0xff03db],eax
  41b387:	add    BYTE PTR ds:0x3d811ff,dl
  41b38d:	inc    DWORD PTR [eax]
  41b38f:	sub    al,BYTE PTR [eax]
  41b391:	cmp    al,0x0
  41b393:	xor    BYTE PTR [ebp-0x34],ch
  41b396:	mov    edi,edi
  41b398:	add    al,BYTE PTR [ebx+0x58cc86]
  41b39e:	(bad)  
  41b39f:	ds add bl,ah
  41b3a2:	cmp    DWORD PTR [ebp+0x54],0xffffffff
  41b3a6:	add    ah,cl
  41b3a8:	jmp    0xd835ddac
  41b3ad:	inc    DWORD PTR [eax]
  41b3af:	or     cl,ah
  41b3b1:	jb     0x41b3b3
  41b3b3:	test   BYTE PTR [edi],0xcc
  41b3b6:	(bad)  
  41b3b7:	inc    DWORD PTR [ebp-0x7d]
  41b3ba:	pop    edx
  41b3bb:	jne    0x41b42f
  41b3bd:	cmp    edi,0x2d
  41b3c0:	adc    ebx,0x0
  41b3c3:	and    eax,0xffff00b5
  41b3c8:	mov    edx,0x5f7162ff
  41b3cd:	inc    DWORD PTR [eax]
  41b3cf:	sahf   
  41b3d0:	add    BYTE PTR [eax+eax*1+0x8],al
  41b3d4:	(bad)  
  41b3d5:	inc    DWORD PTR [ebx-0x7f764e01]
  41b3db:	retf   0xffb5
  41b3de:	mov    DWORD PTR [ecx-0x34],ecx
  41b3e1:	rol    DWORD PTR [eax],0x59
  41b3e4:	icebp  
  41b3e5:	inc    DWORD PTR [ebx+0x1c00ceff]
  41b3eb:	adc    al,0x4d
  41b3ed:	add    bh,bh
  41b3ef:	hlt    
  41b3f0:	add    BYTE PTR [eax],al
  41b3f2:	add    BYTE PTR [ebx+0xe],dl
  41b3f5:	(bad)  
  41b3f6:	dec    esp
  41b3f8:	pop    DWORD PTR [ebx-0x7cba482e]
  41b3fe:	add    BYTE PTR [edx+0x69007fff],ch
  41b404:	addr16 (bad) 
  41b406:	inc    DWORD PTR [eax]
  41b408:	repz jmp ecx
  41b40b:	stos   DWORD PTR es:[edi],eax
  41b40c:	rol    DWORD PTR [eax],1
  41b40e:	dec    DWORD PTR [edx]
  41b410:	mov    DWORD PTR [ebx],ebx
  41b412:	call   FWORD PTR [edi+0xffd6]
  41b418:	pushf  
  41b419:	int3   
  41b41a:	ja     0x41b3ec
  41b41c:	push   0xcc92ff89
  41b421:	cdq    
  41b422:	add    dh,ch
  41b424:	cs (bad) 
  41b426:	(bad)  
  41b427:	call   FWORD PTR [esi-0x1]
  41b42a:	and    BYTE PTR [eax+0x3effffde],ch
  41b430:	inc    ebp
  41b432:	dec    DWORD PTR [edx-0x7c339b]
  41b438:	add    eax,0xb8cbb283
  41b43d:	add    BYTE PTR [eax],al
  41b43f:	aam    0x0
  41b441:	add    BYTE PTR fs:[edi],al
  41b444:	aam    0x83
  41b446:	add    DWORD PTR [eax],0xffffffd2
  41b449:	add    BYTE PTR [eax+0x4c],ah
  41b44c:	(bad)  
  41b44d:	int3   
  41b44e:	push   DWORD PTR [esi-0x32008f00]
  41b454:	xchg   edi,edi
  41b456:	add    bh,bh
  41b458:	mov    ebx,0xc71cd9ff
  41b45d:	(bad)  
  41b45e:	push   DWORD PTR [eax-0x3e000d00]
  41b464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b465:	int3   
  41b466:	(bad)  
  41b467:	(bad)  
  41b468:	fld    DWORD PTR [eax]
  41b46a:	pop    ebx
  41b46b:	mov    ah,0xf4
  41b46d:	add    bh,bh
  41b46f:	push   0x23ff9cff
  41b474:	inc    ecx
  41b475:	add    bh,bh
  41b477:	sbb    DWORD PTR [ecx],0xffffff89
  41b47a:	pop    eax
  41b47b:	inc    esp
  41b47c:	dec    esp
  41b47d:	(bad)  
  41b47e:	(bad)  
  41b47f:	cmp    bh,bh
  41b481:	je     0x41b483
  41b483:	call   0x83f5:0xffffffb9
  41b48a:	stos   BYTE PTR es:[edi],al
  41b48b:	int    0x9a
  41b48d:	add    BYTE PTR [ebx+0xcc001a],al
  41b493:	icebp  
  41b494:	or     eax,0x8f89ff00
  41b499:	add    BYTE PTR [ecx+0x29],ch
  41b49c:	(bad)  
  41b49d:	inc    DWORD PTR [eax]
  41b49f:	jnp    0x41b46d
  41b4a1:	enter  0x6ff,0x4e
  41b4a5:	int3   
  41b4a6:	(bad)  
  41b4a7:	(bad)  
  41b4a8:	fdivr  st,st(7)
  41b4aa:	sbb    dl,ch
  41b4ac:	out    0x0,al
  41b4ae:	add    al,dh
  41b4b0:	push   DWORD PTR ds:0x833b2dff
  41b4b6:	add    BYTE PTR [eax],al
  41b4b8:	mov    bh,0x89
  41b4ba:	add    ebp,eax
  41b4bc:	ja     0x41b4bd
  41b4be:	push   ecx
  41b4c0:	add    BYTE PTR [edi],dh
  41b4c2:	add    BYTE PTR [eax+0x62],cl
  41b4c5:	inc    DWORD PTR [ebx+0x31ff76ff]
  41b4cb:	sbb    al,0xd2
  41b4cd:	dec    DWORD PTR [ecx-0x3a7c56]
  41b4d3:	add    eax,0x89ccffa9
  41b4d8:	je     0x41b4da
  41b4da:	fisub  DWORD PTR [edx-0x73]
  41b4dd:	cmp    edi,0xffffffe5
  41b4e0:	add    BYTE PTR [ebp-0x7cd37d7d],cl
  41b4e6:	add    bh,bh
  41b4e8:	push   ss
  41b4e9:	call   FWORD PTR [ebx-0x767c52a9]
  41b4ef:	jle    0x41b4f0
  41b4f1:	or     al,0x0
  41b4f3:	das    
  41b4f4:	mov    bh,0xff
  41b4f6:	int3   
  41b4f7:	push   DWORD PTR [ebp-0x1]
  41b4fa:	add    esi,DWORD PTR [edx]
  41b4fc:	dec    eax
  41b4fd:	int3   
  41b4fe:	add    BYTE PTR [ebx],dl
  41b500:	jmp    DWORD PTR [esi-0x1]
  41b503:	sbb    al,0x49
  41b505:	inc    DWORD PTR [eax]
  41b507:	(bad)  
  41b508:	out    dx,eax
  41b509:	or     DWORD PTR [ecx],0xffffffb4
  41b50c:	push   edx
  41b50d:	dec    esp
  41b50f:	inc    ebp
  41b510:	inc    esp
  41b512:	and    DWORD PTR [esi+edi*2+0x0],0xffffff89
  41b517:	cmp    DWORD PTR [eax+eax*1+0xca5ab2],0x0
  41b51f:	mov    edi,0xddffdf00
  41b524:	clc    
  41b525:	inc    DWORD PTR [ebx-0x1c00c77d]
  41b52b:	jb     0x41b549
  41b52d:	(bad)  
  41b52e:	(bad)  
  41b52f:	mov    edx,0x72ffd0ff
  41b534:	inc    edx
  41b535:	add    DWORD PTR [eax],0x0
  41b538:	arpl   WORD PTR [ecx-0x240c8e],cx
  41b53e:	add    BYTE PTR [eax],al
  41b540:	add    DWORD PTR [esi],0xffffff83
  41b543:	aas    
  41b544:	ss (bad) 
  41b546:	inc    DWORD PTR [eax]
  41b548:	jp     0x41b54a
  41b54a:	pop    esp
  41b54b:	sub    al,bl
  41b54d:	inc    DWORD PTR [eax]
  41b54f:	or     eax,DWORD PTR [eax]
  41b551:	(bad)  
  41b552:	call   FWORD PTR [esi-0x33fffa]
  41b558:	xor    eax,0xe9a5b400
  41b55d:	(bad)  
  41b55e:	(bad)  
  41b55f:	jl     0x41b560
  41b561:	ret    
  41b562:	int3   
  41b563:	inc    ecx
  41b564:	add    BYTE PTR [eax],al
  41b566:	dec    esp
  41b568:	mov    eax,DWORD PTR [eax]
  41b56a:	mov    eax,ds:0xffff3283
  41b56f:	cmp    BYTE PTR [eax],al
  41b571:	xor    cl,BYTE PTR [ecx+0xff87a4]
  41b577:	add    dh,bl
  41b579:	call   FWORD PTR [ebx]
  41b57b:	push   eax
  41b57c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b57d:	inc    DWORD PTR [eax]
  41b57f:	mov    ebx,0x41ff5d00
  41b584:	int    0xff
  41b586:	mov    edi,edi
  41b588:	fadd   QWORD PTR [eax]
  41b58a:	jae    0x41b583
  41b58c:	retf   
  41b58d:	inc    DWORD PTR [eax]
  41b58f:	sub    BYTE PTR [eax],al
  41b591:	adc    BYTE PTR [eax],al
  41b593:	mov    bh,0x32
  41b595:	inc    DWORD PTR [eax]
  41b597:	add    dl,ch
  41b599:	add    BYTE PTR [ecx-0xc698],ah
  41b59f:	test   BYTE PTR [ecx+0x4145ff48],cl
  41b5a5:	add    bh,bh
  41b5a7:	(bad)  
  41b5a8:	mov    ebp,0xc7cb99ff
  41b5ad:	inc    DWORD PTR [eax]
  41b5af:	mov    esp,0x5e00b1ff
  41b5b4:	mov    bh,0x0
  41b5b6:	(bad)  
  41b5b7:	inc    DWORD PTR [eax-0x7d]
  41b5ba:	sbb    al,0xad
  41b5bc:	lds    eax,FWORD PTR [eax]
  41b5be:	add    DWORD PTR [eax+0x0],0x72
  41b5c2:	inc    DWORD PTR [ebp+0x64]
  41b5c5:	add    BYTE PTR [ecx-0x45332100],cl
  41b5cb:	jle    0x41b5a3
  41b5cd:	int3   
  41b5ce:	add    BYTE PTR [edi-0x1],ch
  41b5d1:	push   edx
  41b5d2:	push   DWORD PTR [edi+0x58]
  41b5d5:	add    BYTE PTR [ecx+0x9ff04ff],cl
  41b5db:	not    BYTE PTR [ebx-0x7d]
  41b5de:	push   DWORD PTR [edi+edi*8]
  41b5e1:	sar    bh,1
  41b5e3:	leave  
  41b5e4:	sub    BYTE PTR [eax],al
  41b5e6:	(bad)  
  41b5e7:	inc    esp
  41b5e9:	add    cl,al
  41b5eb:	lea    edi,ds:0xff0983ff
  41b5f1:	test   al,0xff
  41b5f3:	dec    eax
  41b5f4:	(bad)  
  41b5f5:	inc    DWORD PTR [eax]
  41b5f7:	call   FWORD PTR [esi+0x7d1074ff]
  41b5fd:	add    bh,bh
  41b5ff:	jg     0x41b5cd
  41b601:	jns    0x41b603
  41b603:	(bad)  [eax+eax*1+0x9700ff]
  41b60a:	ja     0x41b65d
  41b60c:	xchg   ebp,eax
  41b60d:	add    bh,bh
  41b60f:	xor    eax,DWORD PTR [eax]
  41b611:	lahf   
  41b612:	(bad)  
  41b613:	jmp    0x41b636
  41b615:	add    bh,bh
  41b617:	adc    DWORD PTR [edi+edi*8],0x25
  41b61b:	ror    DWORD PTR [eax],cl
  41b61d:	(bad)  
  41b61e:	dec    DWORD PTR [ebx-0x7300f600]
  41b624:	fld    DWORD PTR [eax]
  41b626:	(bad)  
  41b627:	dec    DWORD PTR [eax+eax*1]
  41b62a:	lods   eax,DWORD PTR ds:[esi]
  41b62b:	xlat   BYTE PTR ds:[ebx]
  41b62c:	hlt    
  41b62d:	add    bh,bh
  41b62f:	cmp    edi,edi
  41b631:	jmp    0x41b632
  41b633:	inc    esi
  41b634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b635:	add    bh,bh
  41b637:	xor    esp,0xffffffff
  41b63a:	xor    BYTE PTR [edx],al
  41b63c:	jmp    0x10a8340
  41b641:	int    0xff
  41b643:	mov    esp,DWORD PTR [esi]
  41b645:	dec    DWORD PTR [ecx-0x237cbe7d]
  41b64b:	in     eax,0x32
  41b64d:	add    bh,bh
  41b64f:	fs int3 
  41b651:	rol    BYTE PTR [ebx-0xa82],1
  41b657:	(bad)  
  41b658:	jns    0x41b659
  41b65a:	outs   dx,DWORD PTR ds:[esi]
  41b65b:	imul   ecx,edi,0xff28ccff
  41b661:	pop    es
  41b662:	push   DWORD PTR [ebx]
  41b664:	dec    edi
  41b665:	dec    esp
  41b667:	int3   
  41b668:	sar    bh,1
  41b66a:	xchg   edi,eax
  41b66b:	shl    DWORD PTR [ecx-0x7d],cl
  41b66e:	inc    DWORD PTR [edi+edi*8-0x14647c7b]
  41b675:	mov    edi,edi
  41b677:	int3   
  41b678:	jbe    0x41b646
  41b67a:	pop    ebx
  41b67b:	jmp    0x1b00:0xf0ff89f2
  41b682:	add    BYTE PTR [ebx+0x10],ch
  41b685:	cmp    edi,0xffffffff
  41b688:	sar    edi,cl
  41b68a:	fdivr  DWORD PTR ds:0xd58300e3
  41b690:	sbb    ebp,0xffffffff
  41b693:	add    bl,BYTE PTR [ecx]
  41b695:	inc    DWORD PTR [ebx-0x287c5a34]
  41b69b:	outs   dx,DWORD PTR es:[esi]
  41b69d:	int3   
  41b69e:	add    ah,cl
  41b6a0:	inc    DWORD PTR [edi-0xd5077]
  41b6a6:	inc    DWORD PTR [eax]
  41b6a8:	mov    cl,0x89
  41b6aa:	fcomp  QWORD PTR [edx+0x66]
  41b6ad:	cmp    edi,0xffffff85
  41b6b0:	int3   
  41b6b1:	push   0xffffffff
  41b6b3:	jmp    0x41b647
  41b6b5:	inc    DWORD PTR [ebx-0x69760f01]
  41b6bb:	inc    ecx
  41b6bc:	sbb    eax,0xff02cc00
  41b6c1:	mov    edx,0x89d95d00
  41b6c6:	(bad)  
  41b6c7:	call   ecx
  41b6c9:	(bad)  
  41b6ca:	fdivrp st(2),st
  41b6cc:	or     edi,edi
  41b6ce:	int3   
  41b6cf:	dec    esi
  41b6d0:	jmp    FWORD PTR [ebx+eax*4-0x7c006184]
  41b6d7:	adc    DWORD PTR [eax],0xffffffcc
  41b6da:	add    al,0xb2
  41b6dc:	cmc    
  41b6dd:	(bad)  
  41b6de:	jmp    DWORD PTR [edi-0x7d]
  41b6e1:	std    
  41b6e2:	add    BYTE PTR [esi],cl
  41b6e4:	push   ebx
  41b6e5:	(bad)  
  41b6e6:	inc    DWORD PTR [eax]
  41b6e8:	xchg   ebx,eax
  41b6e9:	int3   
  41b6ea:	sbb    BYTE PTR ds:0x7890093,bl
  41b6f0:	call   DWORD PTR [eax+eax*1-0x11]
  41b6f4:	out    0x0,eax
  41b6f6:	add    BYTE PTR [ebx+0x7c9900a7],al
  41b6fc:	and    al,0xff
  41b6fe:	inc    DWORD PTR [ebp-0x7d]
  41b701:	and    edi,edi
  41b703:	dec    edx
  41b704:	jns    0x41b706
  41b706:	inc    DWORD PTR [ebx-0x641700f5]
  41b70c:	gs (bad) 
  41b70e:	(bad)  
  41b70f:	cmp    al,BYTE PTR [eax]
  41b711:	mov    edi,?
  41b713:	adc    cl,dl
  41b715:	(bad)  
  41b716:	inc    DWORD PTR [eax]
  41b718:	jge    0x41b71a
  41b71a:	dec    esi
  41b71b:	pop    edx
  41b71c:	and    eax,0xcc01ffff
  41b721:	dec    DWORD PTR fs:[ebp-0x3f]
  41b725:	inc    DWORD PTR [ebx-0x57ffe800]
  41b72b:	scas   al,BYTE PTR es:[edi]
  41b72c:	xor    bh,bh
  41b72e:	(bad)  
  41b72f:	fild   DWORD PTR [eax]
  41b731:	in     al,dx
  41b732:	dec    DWORD PTR ds:0xffff07
  41b738:	add    BYTE PTR gs:[ebp-0x1e],bh
  41b73c:	jnp    0x41b73d
  41b73e:	jmp    DWORD PTR [eax]
  41b740:	call   DWORD PTR [edi]
  41b742:	call   DWORD PTR [esi+0x83ff01]
  41b748:	sub    al,0xff
  41b74a:	cmp    eax,DWORD PTR [ebx]
  41b74c:	js     0x41b6d1
  41b74e:	jmp    DWORD PTR [ebp-0x1]
  41b751:	into   
  41b752:	mov    DWORD PTR ds:0x83ffcc9a,ebx
  41b758:	mov    ah,cl
  41b75a:	push   es
  41b75b:	mov    ah,0xae
  41b75d:	or     DWORD PTR [ecx-0x33a70061],0x73
  41b764:	inc    ecx
  41b765:	(bad)  
  41b766:	inc    DWORD PTR [ebx+0x38e6890d]
  41b76c:	(bad)  
  41b76e:	(bad)  
  41b76f:	jl     0x41b770
  41b771:	stos   DWORD PTR es:[edi],eax
  41b772:	add    BYTE PTR [edx-0x37],dl
  41b775:	add    bh,bh
  41b777:	add    BYTE PTR [edx],bh
  41b779:	add    BYTE PTR [ebx-0x65],al
  41b77c:	inc    DWORD PTR [bx+si]
  41b77f:	mov    al,0xff
  41b781:	in     eax,0xff
  41b783:	and    al,0xed
  41b785:	int3   
  41b786:	mov    edi,edi
  41b788:	idiv   bh
  41b78a:	hlt    
  41b78b:	or     DWORD PTR [ebx+0x0],edi
  41b78e:	add    cl,ch
  41b790:	inc    DWORD PTR [ebp-0xcd3200]
  41b796:	add    DWORD PTR [eax],0x9
  41b799:	and    DWORD PTR [esi],0xffffffd6
  41b79c:	jno    0x41b79d
  41b79e:	inc    DWORD PTR [ebp+0xfffe089]
  41b7a4:	xor    al,0xff
  41b7a6:	add    BYTE PTR [ebx+0x11ecff77],al
  41b7ac:	xchg   edi,eax
  41b7ad:	(bad)  
  41b7ae:	call   DWORD PTR [ebx]
  41b7b0:	(bad)  
  41b7b1:	clc    
  41b7b2:	push   ecx
  41b7b4:	push   ds
  41b7b5:	inc    DWORD PTR [eax]
  41b7b7:	jmp    DWORD PTR [ebx]
  41b7b9:	(bad)  
  41b7ba:	jmp    0x5c:0x8383f3bb
  41b7c1:	call   0xffad92c6
  41b7c6:	dec    esp
  41b7c8:	imul   edi,edi,0x8d16a0
  41b7ce:	dec    DWORD PTR [edx]
  41b7d0:	add    BYTE PTR [esi],ch
  41b7d2:	cmp    DWORD PTR [eax],0x7a
  41b7d5:	(bad)  
  41b7d6:	(bad)  
  41b7d7:	inc    DWORD PTR [edi+edi*8-0xddbfd4]
  41b7de:	add    eax,0xffffff83
  41b7e1:	popf   
  41b7e2:	add    BYTE PTR [ebx+0x830061],ah
  41b7e8:	stos   DWORD PTR es:[edi],eax
  41b7e9:	dec    DWORD PTR [esp+esi*4-0x80]
  41b7ed:	(bad)  
  41b7ee:	call   FWORD PTR [ecx+0x0]
  41b7f1:	xchg   edi,eax
  41b7f2:	jmp    FWORD PTR [esi-0x2a]
  41b7f8:	dec    esp
  41b7f9:	call   esp
  41b7fb:	ret    
  41b7fc:	(bad)  
  41b7fe:	add    BYTE PTR [edi-0x2100f87d],ch
  41b804:	push   eax
  41b805:	(bad)  
  41b806:	(bad)  
  41b807:	(bad)  
  41b808:	cmp    DWORD PTR [eax],eax
  41b80a:	into   
  41b80b:	jae    0x41b794
  41b80d:	add    BYTE PTR [ebx-0x767000ab],al
  41b813:	jo     0x41b81f
  41b815:	add    BYTE PTR [eax],al
  41b817:	add    ch,al
  41b819:	dec    edx
  41b81b:	mov    edi,0x90ffffb3
  41b820:	or     ebp,0xffffffff
  41b823:	and    bl,BYTE PTR [ecx]
  41b825:	inc    DWORD PTR [ebx+0x18ff8aff]
  41b82b:	fist   DWORD PTR [ebp-0x877d00]
  41b831:	icebp  
  41b832:	add    BYTE PTR [eax-0xef],dh
  41b838:	call   FWORD PTR [si-0x21]
  41b83c:	ud0    eax,DWORD PTR [eax]
  41b83f:	popa   
  41b840:	call   DWORD PTR [ebx-0xdff701]
  41b846:	inc    DWORD PTR [ebx-0x1dac0061]
  41b84c:	popa   
  41b84d:	add    bh,bh
  41b84f:	jp     0x41b851
  41b851:	(bad)  
  41b852:	push   ebp
  41b854:	out    dx,eax
  41b855:	(bad)  
  41b856:	(bad)  
  41b857:	call   FWORD PTR [edi-0x4c151e01]
  41b85d:	add    BYTE PTR [eax],al
  41b85f:	add    DWORD PTR [eax],0x418800ff
  41b865:	add    BYTE PTR [ebx-0x900557d],al
  41b86b:	pop    eax
  41b86c:	and    al,0xff
  41b86e:	add    BYTE PTR [ebx+eax*4],ah
  41b871:	push   0xffffffff
  41b873:	cmp    DWORD PTR [ebx-0x1],0xffef00ff
  41b87a:	adc    edi,DWORD PTR [ebx]
  41b87c:	(bad)  
  41b87d:	(bad)  
  41b87e:	call   FWORD PTR [esi-0x1]
  41b881:	jp     0x41b84f
  41b883:	scas   al,BYTE PTR es:[edi]
  41b884:	inc    edx
  41b885:	int3   
  41b886:	add    bh,bh
  41b888:	jmp    FWORD PTR fs:[ebp+0x83a64c]
  41b88f:	dec    eax
  41b890:	int3   
  41b891:	xor    BYTE PTR [eax],al
  41b893:	imul   ebp,DWORD PTR [edx+0x3000000],0x0
  41b89a:	rcr    DWORD PTR [edi+0x44],cl
  41b89d:	dec    esp
  41b89f:	jge    0x41b8a1
  41b8a1:	jae    0x41b8a2
  41b8a3:	jbe    0x41b8a3
  41b8a5:	(bad)  
  41b8a6:	(bad)  
  41b8a7:	jmp    DWORD PTR [eax]
  41b8a9:	call   DWORD PTR [ecx-0x6d]
  41b8ac:	call   0xffdd:0x898200ff
  41b8b3:	ins    DWORD PTR es:[edi],dx
  41b8b4:	aam    0x83
  41b8b6:	cmp    edi,0x4b
  41b8b9:	dec    DWORD PTR [esi-0x42]
  41b8bc:	fcos   
  41b8be:	(bad)  
  41b8bf:	mov    eax,0x9ccc9883
  41b8c4:	sar    bh,cl
  41b8c6:	inc    DWORD PTR [eax]
  41b8c8:	fadd   QWORD PTR [ebx-0x7cffe376]
  41b8ce:	add    ah,bl
  41b8d0:	inc    ebp
  41b8d2:	push   DWORD PTR [edx-0xff009c]
  41b8d8:	jmp    0x18eaafdd
  41b8dd:	add    BYTE PTR [eax],al
  41b8df:	mov    bl,0x0
  41b8e1:	mov    edi,edi
  41b8e3:	pop    edi
  41b8e4:	js     0x41b869
  41b8e6:	inc    DWORD PTR [eax]
  41b8e8:	aas    
  41b8e9:	push   DWORD PTR [ecx-0x31]
  41b8ec:	test   bh,bh
  41b8ee:	add    BYTE PTR [ebx+0x0],dh
  41b8f1:	aaa    
  41b8f2:	call   FWORD PTR [ebx+0xffffab]
  41b8f8:	sbb    edi,edi
  41b8fa:	xchg   ecx,eax
  41b8fb:	loop   0x41b89e
  41b8fd:	mov    edi,edi
  41b8ff:	cmp    DWORD PTR es:[eax+0x0],0x5e
  41b904:	std    
  41b905:	add    ah,cl
  41b907:	jmp    FWORD PTR [esi-0x1]
  41b90a:	dec    ebp
  41b90b:	div    DWORD PTR [ebp+0xd0ff00]
  41b911:	sub    al,0x83
  41b913:	retf   
  41b914:	push   0xffffffff
  41b916:	int3   
  41b917:	dec    edi
  41b919:	call   DWORD PTR [esi+edi*8]
  41b91c:	pop    ebx
  41b91d:	inc    DWORD PTR [eax]
  41b91f:	xor    edi,edi
  41b921:	fld    DWORD PTR [ebx-0x7c76d905]
  41b927:	add    al,ch
  41b929:	jmp    DWORD PTR [edx]
  41b92b:	loop   0x41b8ec
  41b92d:	add    DWORD PTR [ebx-0x765fff34],0xffffffe2
  41b934:	cwde   
  41b935:	int3   
  41b936:	mov    edi,edi
  41b938:	jmp    0xa0b1403d
  41b93d:	(bad)  
  41b93e:	call   DWORD PTR [eax]
  41b940:	call   FWORD PTR [edi+edi*8-0x32]
  41b944:	sub    DWORD PTR [eax],eax
  41b946:	(bad)  
  41b947:	jmp    DWORD PTR [esi]
  41b949:	push   DWORD PTR [edx-0xff324a]
  41b94f:	mov    BYTE PTR [eax],al
  41b951:	ret    0xab89
  41b954:	xchg   esp,ecx
  41b956:	add    BYTE PTR [eax],al
  41b958:	xor    eax,DWORD PTR [ebx+0xc0941b]
  41b95e:	dec    esi
  41b960:	add    BYTE PTR [esi-0x7cd86e7d],cl
  41b966:	dec    DWORD PTR [ecx+0x4adfff9a]
  41b96c:	pusha  
  41b96d:	(bad)  
  41b96e:	jmp    FWORD PTR [edi-0x7f000b77]
  41b974:	pop    ss
  41b975:	add    bh,bh
  41b977:	inc    eax
  41b979:	add    BYTE PTR [ebp+0x3e],dh
  41b97c:	mov    edi,0x831083ff
  41b981:	(bad)  
  41b982:	jmp    FWORD PTR [edi-0x67]
  41b985:	(bad)  
  41b986:	dec    DWORD PTR [ecx-0x2f1bff1d]
  41b98c:	jecxz  0x41b98e
  41b98e:	call   DWORD PTR ds:0x24cc7e00
  41b994:	outs   dx,DWORD PTR ds:[esi]
  41b995:	inc    DWORD PTR [eax]
  41b997:	jmp    DWORD PTR [esi-0x1]
  41b99a:	aam    0xaa
  41b99c:	(bad)  
  41b99e:	add    DWORD PTR [esi+0x7fff9b00],0x72
  41b9a5:	(bad)  
  41b9a6:	(bad)  
  41b9a7:	jmp    FWORD PTR [edi-0x77]
  41b9aa:	mov    edx,edi
  41b9ac:	mov    esi,0x1d0089
  41b9b1:	imul   eax,DWORD PTR [eax],0xffcc3343
  41b9b7:	add    BYTE PTR [edx+0x0],al
  41b9ba:	mov    cl,0x81
  41b9bc:	loope  0x41b9bd
  41b9be:	sub    DWORD PTR [eax-0x1],0xffffff9a
  41b9c2:	int3   
  41b9c3:	mul    DWORD PTR [ecx+0x5a00ffff]
  41b9c9:	add    BYTE PTR [eax],ah
  41b9cb:	out    dx,al
  41b9cc:	in     eax,dx
  41b9cd:	inc    DWORD PTR [eax]
  41b9cf:	inc    eax
  41b9d0:	call   esi
  41b9d2:	add    BYTE PTR [edi-0xc7],cl
  41b9d8:	in     eax,dx
  41b9d9:	add    BYTE PTR [edx],ch
  41b9db:	jp     0x41ba41
  41b9dd:	cmp    edi,0xffffff8f
  41b9e0:	dec    DWORD PTR [ecx+0x26ad00]
  41b9e6:	(bad)  
  41b9e7:	inc    esp
  41b9e9:	add    BYTE PTR [ecx],bl
  41b9eb:	je     0x41b9e1
  41b9ed:	(bad)  
  41b9ee:	dec    DWORD PTR ds:0x7dcc7489
  41b9f4:	in     al,dx
  41b9f5:	(bad)  
  41b9f6:	inc    DWORD PTR [eax]
  41b9f8:	cli    
  41b9f9:	add    BYTE PTR [ebp+0xff2408],ch
  41b9ff:	push   DWORD PTR gs:[eax+0x0]
  41ba03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba04:	sbb    eax,DWORD PTR [eax]
  41ba06:	dec    DWORD PTR [ecx+0x4b89ffa7]
  41ba0c:	daa    
  41ba0d:	add    bh,bh
  41ba0f:	mov    eax,ds:0x66ff64ff
  41ba14:	dec    ah
  41ba16:	(bad)  
  41ba17:	jmp    FWORD PTR [eax]
  41ba19:	add    bh,al
  41ba1b:	dec    esi
  41ba1c:	jge    0x41ba1e
  41ba1e:	add    dh,bh
  41ba20:	(bad)  
  41ba21:	inc    BYTE PTR [eax]
  41ba23:	js     0x41ba3e
  41ba25:	inc    DWORD PTR [eax]
  41ba27:	jmp    FWORD PTR [edi+edi*8]
  41ba2a:	out    dx,eax
  41ba2b:	dec    edi
  41ba2c:	imul   edi,edi,0x0
  41ba2f:	dec    ebx
  41ba30:	call   DWORD PTR [edx]
  41ba32:	push   DWORD PTR [ebp-0x21]
  41ba35:	cmp    edi,0x0
  41ba38:	mov    cl,ah
  41ba3a:	(bad)  
  41ba3b:	cs loop 0x41b9c1
  41ba3e:	add    al,bl
  41ba40:	push   DWORD PTR [edx+0xe1bff]
  41ba46:	(bad)  
  41ba47:	dec    DWORD PTR [edx+0x0]
  41ba4a:	les    ecx,FWORD PTR [edx-0x7d]
  41ba4d:	add    bh,bh
  41ba4f:	sahf   
  41ba50:	dec    DWORD PTR [ebp-0x7c184d7d]
  41ba56:	(bad)  
  41ba57:	inc    DWORD PTR [edi]
  41ba59:	add    BYTE PTR [ecx-0x7c0033e4],bh
  41ba5f:	and    BYTE PTR [eax],al
  41ba61:	add    edi,edi
  41ba63:	enter  0xae,0xcc
  41ba67:	dec    DWORD PTR [edi+edi*8]
  41ba6a:	xor    BYTE PTR [ebp-0x7a7600a1],bh
  41ba70:	add    BYTE PTR [eax-0x7c62d301],cl
  41ba76:	inc    DWORD PTR [eax]
  41ba78:	push   ds
  41ba79:	xor    DWORD PTR [eax+0x71],0xffffff92
  41ba7d:	inc    DWORD PTR [eax]
  41ba7f:	cmp    eax,DWORD PTR [eax]
  41ba81:	sbb    bh,bh
  41ba83:	inc    ecx
  41ba84:	jbe    0x41ba09
  41ba86:	cmp    edi,0xffffffc2
  41ba89:	(bad)  
  41ba8a:	(bad)  
  41ba8c:	stos   DWORD PTR es:[edi],eax
  41ba8d:	int3   
  41ba8e:	mov    DWORD PTR [eax+0x0],esi
  41ba91:	retf   
  41ba92:	sub    DWORD PTR [esi+0x2e],0x0
  41ba96:	inc    DWORD PTR [eax]
  41ba98:	dec    edx
  41ba99:	add    BYTE PTR [edx-0xff65bc],dl
  41ba9f:	sub    cl,ah
  41baa1:	cmp    edi,edi
  41baa3:	jo     0x41ba67
  41baa5:	int3   
  41baa6:	or     esp,0xffffffd9
  41baa9:	jmp    FWORD PTR [esi+0x1a]
  41baac:	mov    bl,0xcc
  41baae:	int3   
  41baaf:	ins    BYTE PTR es:[edi],dx
  41bab0:	int3   
  41bab1:	stos   DWORD PTR es:[edi],eax
  41bab2:	add    BYTE PTR [ebx],bh
  41bab4:	clc    
  41bab5:	add    bh,bh
  41bab7:	mov    esi,ecx
  41bab9:	add    BYTE PTR [ebp+esi*4+0x1d00ffb5],dh
  41bac0:	add    DWORD PTR [ebp-0x39e400],0xffffffff
  41bac7:	mov    DWORD PTR [eax-0x77],esp
  41baca:	jo     0x41bb09
  41bacc:	mov    WORD PTR [eax],es
  41bace:	inc    esi
  41bad0:	add    BYTE PTR [edi-0x1],al
  41bad3:	shl    BYTE PTR [edi+edi*8+0x560000],cl
  41bada:	xchg   DWORD PTR [eax+0x6f00ffac],edx
  41bae0:	mov    DWORD PTR [ecx+0x0],esp
  41bae3:	out    dx,al
  41bae4:	pop    edx
  41bae5:	(bad)  
  41bae6:	(bad)  
  41bae7:	(bad)  
  41bae8:	std    
  41bae9:	inc    esi
  41baeb:	sub    eax,0xb8ff8356
  41baf0:	add    dh,cl
  41baf2:	add    ah,al
  41baf4:	lods   eax,DWORD PTR ds:[esi]
  41baf5:	int3   
  41baf6:	inc    DWORD PTR [ebx+0x73dfcc77]
  41bafc:	out    dx,eax
  41bafd:	add    bh,bh
  41baff:	adc    edi,edi
  41bb01:	push   esi
  41bb02:	dec    DWORD PTR [ecx]
  41bb04:	inc    esi
  41bb05:	cmp    edi,0x0
  41bb08:	dec    eax
  41bb09:	inc    DWORD PTR [edi+ecx*8+0x30008960]
  41bb10:	jmp    esp
  41bb12:	call   esp
  41bb14:	cmp    bh,0x89
  41bb17:	add    BYTE PTR [ebp-0x34],bh
  41bb1a:	(bad)  
  41bb1b:	out    0xbe,eax
  41bb1d:	inc    DWORD PTR [eax]
  41bb1f:	cdq    
  41bb20:	dec    DWORD PTR [eax-0x1]
  41bb23:	jbe    0x41bb5c
  41bb25:	add    bh,bh
  41bb27:	add    BYTE PTR [ebx-0x1],bh
  41bb2a:	mov    ebx,0x83ff501f
  41bb2f:	inc    eax
  41bb30:	(bad)  
  41bb31:	mov    ebx,0xffe7c289
  41bb36:	inc    DWORD PTR [eax]
  41bb38:	cdq    
  41bb39:	jmp    FWORD PTR [edi]
  41bb3b:	jp     0x41bb2d
  41bb3d:	add    bh,bh
  41bb3f:	leave  
  41bb40:	add    BYTE PTR [ebx+0x2096ff],bh
  41bb46:	mov    edi,edi
  41bb48:	push   ss
  41bb49:	jmp    DWORD PTR [eax-0x7c4bd6]
  41bb4f:	test   al,0x83
  41bb51:	and    eax,0xe72500
  41bb56:	inc    DWORD PTR [eax]
  41bb58:	in     eax,0xff
  41bb5a:	adc    bl,BYTE PTR [eax-0x36]
  41bb5d:	inc    DWORD PTR [eax]
  41bb5f:	out    0xff,eax
  41bb61:	add    al,0x0
  41bb63:	sahf   
  41bb64:	sub    DWORD PTR [eax],eax
  41bb66:	add    bh,bh
  41bb68:	fdivr  st,st(7)
  41bb6a:	sbb    BYTE PTR [ecx+eax*1+0x3d8300],cl
  41bb71:	stos   BYTE PTR es:[edi],al
  41bb72:	and    DWORD PTR [ecx],0xffffffaa
  41bb75:	add    DWORD PTR [ebx+0x5dff69ff],0x41
  41bb7c:	sbb    eax,0xff7bffff
  41bb81:	sub    edi,edi
  41bb83:	loopne 0x41bbe9
  41bb85:	add    BYTE PTR [eax],al
  41bb87:	add    BYTE PTR [eax],dl
  41bb89:	call   DWORD PTR [edi+edi*1-0x28]
  41bb8d:	inc    DWORD PTR [eax]
  41bb8f:	ja     0x41bb90
  41bb91:	mov    dh,0xff
  41bb93:	xchg   edx,eax
  41bb94:	xor    BYTE PTR [ebx+0x42ccff],al
  41bb9a:	or     eax,0x89ff8aa6
  41bb9f:	cdq    
  41bba0:	push   ebx
  41bba2:	dec    ebx
  41bba4:	mov    ah,cl
  41bba6:	(bad)  
  41bba7:	(bad)  
  41bba8:	fimul  DWORD PTR [ecx-0x33824492]
  41bbae:	add    BYTE PTR [ebx-0x976dd00],ah
  41bbb4:	inc    DWORD PTR [bx+si]
  41bbb7:	int3   
  41bbb8:	inc    esp
  41bbb9:	call   DWORD PTR [esi-0x7cffd72f]
  41bbbf:	popa   
  41bbc0:	push   DWORD PTR [eax+0x0]
  41bbc3:	jmp    0x41bb8a
  41bbc5:	add    BYTE PTR [ecx-0x4cff5100],cl
  41bbcb:	fdiv   QWORD PTR [eax-0x1]
  41bbce:	inc    edx
  41bbd0:	int3   
  41bbd1:	mov    ch,0x83
  41bbd3:	shr    DWORD PTR [ecx-0xb7cff01],0x0
  41bbda:	xchg   ebp,eax
  41bbdb:	dec    eax
  41bbdc:	mov    BYTE PTR [ebx-0x6400e600],al
  41bbe2:	int3   
  41bbe3:	xor    BYTE PTR [ebx+0x4fffff00],ah
  41bbe9:	(bad)  
  41bbea:	fimul  DWORD PTR [edx+0x6500ff2c]
  41bbf0:	add    BYTE PTR [edi+edi*8-0xa530],ah
  41bbf7:	call   DWORD PTR [eax]
  41bbf9:	int3   
  41bbfa:	loopne 0x41bc1b
  41bbfc:	loope  0x41bbfd
  41bbfe:	push   DWORD PTR [ecx+ecx*4]
  41bc01:	clc    
  41bc02:	mov    ebx,eax
  41bc04:	jl     0x41bb89
  41bc06:	inc    DWORD PTR [ebx+0x2254ff31]
  41bc0c:	mov    edx,0xffc383ff
  41bc11:	sbb    esp,ecx
  41bc13:	inc    edx
  41bc14:	stos   DWORD PTR es:[edi],eax
  41bc15:	(bad)  
  41bc16:	(bad)  
  41bc17:	jmp    FWORD PTR [eax+eax*1-0x25]
  41bc1b:	pusha  
  41bc1c:	adc    eax,0x83980000
  41bc21:	and    eax,DWORD PTR [eax]
  41bc23:	(bad)
  41bc26:	add    BYTE PTR [eax],al
  41bc28:	loop   0x41bbf6
  41bc2a:	add    BYTE PTR [ebp+0x6a],dh
  41bc2d:	mov    DWORD PTR [eax],eax
  41bc2f:	cs adc ecx,0xffffffff
  41bc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc34:	int    0x83
  41bc36:	mov    edi,edi
  41bc38:	ret    0xdcff
  41bc3b:	push   es
  41bc3c:	scas   al,BYTE PTR es:[edi]
  41bc3d:	add    DWORD PTR [eax],0xffffff80
  41bc40:	add    BYTE PTR [edx],al
  41bc42:	int3   
  41bc43:	je     0x41bbff
  41bc45:	add    DWORD PTR [eax],0xffffffff
  41bc48:	sti    
  41bc49:	add    BYTE PTR [eax],dl
  41bc4b:	adc    DWORD PTR [ebp-0x7cac3301],eax
  41bc51:	adc    DWORD PTR [ebx-0x7827],eax
  41bc57:	add    BYTE PTR [eax],ah
  41bc59:	add    BYTE PTR [ecx],dh
  41bc5b:	jo     0x41bc5c
  41bc5d:	add    BYTE PTR [eax],al
  41bc5f:	jo     0x41bbe4
  41bc61:	push   0xffffffff
  41bc63:	ja     0x41bcba
  41bc65:	mov    edi,edi
  41bc67:	add    BYTE PTR [eax+0x2511d500],cl
  41bc6d:	inc    DWORD PTR [eax]
  41bc6f:	dec    DWORD PTR [bp-0x7901]
  41bc74:	enter  0xff,0x0
  41bc78:	mov    ah,0x0
  41bc7a:	out    0xff,al
  41bc7c:	add    eax,0x83cf0000
  41bc81:	dec    ebp
  41bc82:	add    BYTE PTR [ebx],ch
  41bc84:	xor    al,0xff
  41bc86:	inc    DWORD PTR [eax]
  41bc88:	push   0xffffffff
  41bc8a:	call   0x8381:0xffff6f0d
  41bc91:	push   ebx
  41bc92:	add    BYTE PTR [ecx+0x2a],cl
  41bc95:	add    BYTE PTR [ebx+0x17ff0fff],al
  41bc9b:	xchg   DWORD PTR [ebx+0x4cffff],eax
  41bca1:	add    al,BYTE PTR [eax]
  41bca3:	ds leave 
  41bca5:	add    BYTE PTR [eax],al
  41bca7:	push   DWORD PTR [ecx]
  41bca9:	call   DWORD PTR [ebp+0x45]
  41bcac:	ja     0x41bcae
  41bcae:	add    bl,bl
  41bcb0:	int3   
  41bcb1:	sar    bh,0x23
  41bcb4:	outs   dx,BYTE PTR ds:[esi]
  41bcb5:	or     esp,0x0
  41bcb8:	jl     0x41bcb9
  41bcba:	xchg   esp,eax
  41bcbb:	(bad)  
  41bcbc:	out    0xcc,eax
  41bcbe:	(bad)  
  41bcbf:	std    
  41bcc0:	(bad)  
  41bcc1:	(bad)  
  41bcc3:	cmp    eax,0x8935
  41bcc8:	ud0    eax,DWORD PTR [ecx-0x69]
  41bccc:	imul   edi,edi,0x7d835100
  41bcd2:	push   DWORD PTR [eax]
  41bcd4:	mov    ch,0xff
  41bcd6:	dec    esp
  41bcd8:	std    
  41bcd9:	sbb    DWORD PTR [esi-0x7cff99a6],0x6c
  41bce0:	mov    DWORD PTR [eax+0xb3fb83],ecx
  41bce6:	(bad)  
  41bce7:	call   ecx
  41bce9:	(bad)  
  41bcea:	jl     0x41bcb8
  41bcec:	adc    al,BYTE PTR [ebx-0x44ffeb01]
  41bcf2:	add    BYTE PTR [ecx+eiz*8+0x47cc0000],ah
  41bcf9:	int3   
  41bcfa:	dec    DWORD PTR [esi-0x54]
  41bcfd:	inc    DWORD PTR [eax]
  41bcff:	or     al,0xff
  41bd01:	int3   
  41bd02:	call   DWORD PTR [eax+0x40]
  41bd05:	dec    DWORD PTR [ecx-0x54ff1834]
  41bd0b:	jecxz  0x41bd0e
  41bd0d:	dec    esp
  41bd0f:	mov    ebp,0x28cc0200
  41bd14:	xchg   esi,eax
  41bd15:	mov    DWORD PTR [eax],eax
  41bd17:	(bad)  
  41bd18:	(bad)  
  41bd19:	jmp    DWORD PTR [eax]
  41bd1b:	inc    edx
  41bd1c:	pop    ds
  41bd1d:	int3   
  41bd1e:	add    BYTE PTR [ebx],al
  41bd20:	add    BYTE PTR [ebx],dh
  41bd22:	jmp    DWORD PTR [ebp-0xff7cee]
  41bd28:	sbb    edi,edi
  41bd2a:	or     bh,BYTE PTR [ecx+edx*2-0x7c230001]
  41bd31:	cmp    al,0xcc
  41bd33:	jnp    0x41bcfc
  41bd35:	(bad)  
  41bd36:	inc    DWORD PTR [eax]
  41bd38:	pop    ebx
  41bd39:	push   DWORD PTR [edx-0x3]
  41bd3c:	add    BYTE PTR [eax],0xff
  41bd3f:	mov    bh,bh
  41bd41:	push   ebx
  41bd42:	mov    DWORD PTR [ecx],edi
  41bd44:	mov    ds:0xa0ffffcc,eax
  41bd49:	sbb    DWORD PTR [ebx+ebp*2],0x46
  41bd4d:	inc    DWORD PTR [ebx+0x93ffcd]
  41bd53:	das    
  41bd54:	xchg   DWORD PTR [eax],eax
  41bd56:	add    BYTE PTR [eax],al
  41bd58:	(bad)  
  41bd59:	add    BYTE PTR ds:0x83001743,ah
  41bd5f:	inc    ecx
  41bd60:	jmp    DWORD PTR [edx+0x496b00]
  41bd66:	(bad)  
  41bd67:	inc    esi
  41bd69:	add    BYTE PTR [esi-0x7c7c8bb8],dh
  41bd6f:	dec    ebx
  41bd70:	add    BYTE PTR [edi+0x950ff],al
  41bd76:	add    bh,bh
  41bd78:	lds    eax,FWORD PTR [eax]
  41bd7a:	push   edx
  41bd7b:	dec    ebx
  41bd7c:	sbb    al,BYTE PTR [eax]
  41bd7e:	add    BYTE PTR [ecx],dl
  41bd80:	sbb    DWORD PTR [edi-0x1],0x11
  41bd84:	fadd   DWORD PTR [eax]
  41bd86:	int3   
  41bd87:	push   DWORD PTR [edx-0x1]
  41bd8a:	inc    eax
  41bd8b:	mov    edi,0x6400004c
  41bd90:	add    BYTE PTR [edi-0x7ca73d7d],cl
  41bd96:	mov    edi,edi
  41bd98:	xor    eax,0xf389cc
  41bd9d:	(bad)  
  41bd9e:	push   edx
  41bda0:	add    DWORD PTR [ecx+ecx*4-0x3376967b],0xffffffff
  41bda8:	sub    bh,bh
  41bdaa:	loop   0x41bdc0
  41bdac:	je     0x41bdae
  41bdae:	xor    DWORD PTR [edi],0x0
  41bdb1:	out    0xcc,eax
  41bdb3:	out    0xed,al
  41bdb5:	inc    DWORD PTR [eax]
  41bdb7:	push   DWORD PTR [eax-0x4a37a01]
  41bdbd:	add    bh,bh
  41bdbf:	mov    dl,0xcc
  41bdc1:	or     eax,0x897a37ff
  41bdc6:	add    bh,bh
  41bdc8:	xlat   BYTE PTR ds:[ebx]
  41bdc9:	call   FWORD PTR [ebx+0x79]
  41bdcc:	jle    0x41bdce
  41bdce:	add    DWORD PTR [esi-0x6b7c0a01],0xffffffe1
  41bdd5:	add    BYTE PTR [ecx+0x51ff5bff],cl
  41bddb:	in     al,0x4b
  41bddd:	(bad)  
  41bdde:	push   DWORD PTR [edx-0x1]
  41bde1:	cmp    al,0xff
  41bde3:	mov    al,ds:0xffffff6f
  41bde8:	sub    cl,ah
  41bdea:	jmp    0x415acf
  41bdef:	in     eax,dx
  41bdf0:	call   FWORD PTR [esi+0x87cc00]
  41bdf6:	(bad)  
  41bdf7:	inc    ebx
  41bdf9:	call   esi
  41bdfb:	xchg   ebx,eax
  41bdfc:	fdivr  st,st(7)
  41bdfe:	jmp    FWORD PTR [edx+0x2c00acff]
  41be04:	add    eax,0x66ffcc00
  41be09:	sub    DWORD PTR [eax],0x55
  41be0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be0d:	(bad)  
  41be0e:	jmp    FWORD PTR [esi+0x50cc5bff]
  41be14:	gs (bad) 
  41be16:	inc    DWORD PTR [eax]
  41be18:	cmp    eax,DWORD PTR [ebx+0xe68487]
  41be1e:	call   FWORD PTR [edi+0x3dff6300]
  41be24:	or     eax,DWORD PTR [eax]
  41be26:	inc    DWORD PTR [ebx+0x267aff00]
  41be2c:	icebp  
  41be2d:	(bad)  
  41be2e:	(bad)  
  41be2f:	std    
  41be30:	add    BYTE PTR [ebp-0x6eb401],cl
  41be36:	inc    DWORD PTR [eax]
  41be38:	jo     0x41be39
  41be3a:	or     BYTE PTR [ecx-0xc],0x89
  41be3e:	mov    edx,esp
  41be40:	sub    DWORD PTR ds:0xff0ab0ff,0xffffffff
  41be47:	add    BYTE PTR [eax],cl
  41be49:	inc    DWORD PTR [ebx-0xdfd9]
  41be4f:	cld    
  41be50:	and    DWORD PTR [edx-0x1],0xffffff93
  41be54:	lds    eax,FWORD PTR [ebx+0x9283ff]
  41be5a:	inc    esp
  41be5b:	add    esp,0xffffff89
  41be5e:	add    dh,cl
  41be60:	jmp    DWORD PTR [eax-0x1fde7d]
  41be66:	dec    esp
  41be68:	out    0x0,al
  41be6a:	(bad)  
  41be6b:	sahf   
  41be6c:	or     eax,0xffbcffff
  41be71:	enter  0xdfff,0x1b
  41be75:	add    BYTE PTR [eax],al
  41be77:	push   esp
  41be79:	int3   
  41be7a:	test   eax,0x83ff0f1b
  41be7f:	loop   0x41be04
  41be81:	hlt    
  41be82:	add    BYTE PTR [ebx-0x55],dh
  41be88:	iret   
  41be89:	(bad)  
  41be8a:	mov    ecx,0xfffff137
  41be8f:	dec    DWORD PTR [ecx-0x845ffab]
  41be95:	add    bh,bh
  41be97:	push   DWORD PTR [edi+edi*8+0xc4fad0]
  41be9e:	call   FWORD PTR [ebp+0x330083ff]
  41bea4:	int3   
  41bea5:	(bad)  
  41bea6:	inc    DWORD PTR [ebx+0x532d005a]
  41beac:	repz dec esp
  41beaf:	in     al,dx
  41beb0:	jmp    FWORD PTR [esi-0x33b8ff77]
  41beb6:	(bad)  
  41beb7:	(bad)  
  41beb8:	mov    esi,0xa0bf0a00
  41bebd:	add    bh,bh
  41bebf:	jecxz  0x41bec0
  41bec1:	and    al,0x0
  41bec3:	pop    edx
  41bec4:	mov    WORD PTR [eax],es
  41bec6:	mov    esp,ecx
  41bec8:	mov    dl,0xff
  41beca:	mov    ah,0x7b
  41becc:	ins    DWORD PTR es:[edi],dx
  41becd:	dec    esp
  41becf:	xor    eax,DWORD PTR [eax]
  41bed1:	ja     0x41bed2
  41bed3:	fsubr  QWORD PTR [ebp-0x1]
  41bed6:	add    bh,bh
  41bed8:	out    dx,al
  41bed9:	int3   
  41beda:	jns    0x41be7c
  41bedc:	xchg   DWORD PTR [eax],eax
  41bede:	dec    eax
  41bee0:	cmp    DWORD PTR [ebx-0x76974701],0xffffffff
  41bee7:	dec    DWORD PTR [edi-0x1552700]
  41beed:	add    DWORD PTR [eax],0xffffffd7
  41bef0:	int3   
  41bef1:	and    al,BYTE PTR [ebx-0x7c001224]
  41bef7:	add    ebx,0xffffff89
  41befa:	sub    al,BYTE PTR [ebx-0x5b]
  41befd:	(bad)  
  41befe:	(bad)  
  41beff:	jg     0x41bf01
  41bf01:	jbe    0x41bf03
  41bf03:	sbb    eax,0xcc43
  41bf08:	stos   DWORD PTR es:[edi],eax
  41bf09:	jmp    DWORD PTR [esi+ebx*8+0x50]
  41bf0d:	int3   
  41bf0e:	(bad)  
  41bf0f:	jmp    0x5f424e13
  41bf14:	mov    esp,ecx
  41bf16:	add    BYTE PTR [ebx-0x4d4a0062],al
  41bf1c:	or     BYTE PTR [eax],al
  41bf1e:	add    BYTE PTR [edx-0x1],dl
  41bf21:	cmc    
  41bf22:	inc    DWORD PTR [ebx+0x11]
  41bf25:	int3   
  41bf26:	mov    DWORD PTR [ebx-0x355a005f],eax
  41bf2c:	dec    ebp
  41bf2d:	add    BYTE PTR [eax],al
  41bf2f:	inc    edi
  41bf30:	adc    ecx,0xffffffcc
  41bf33:	lods   al,BYTE PTR ds:[esi]
  41bf34:	(bad)  
  41bf35:	(bad)  
  41bf36:	(bad)  
  41bf37:	inc    DWORD PTR [edx-0x3aea4001]
  41bf3d:	add    BYTE PTR [ebx-0xc30072],al
  41bf43:	clc    
  41bf44:	stos   BYTE PTR es:[edi],al
  41bf45:	add    BYTE PTR [eax],al
  41bf47:	int3   
  41bf48:	cmp    BYTE PTR [ebx+0xafb830],al
  41bf4e:	int3   
  41bf4f:	in     al,dx
  41bf50:	add    BYTE PTR [ebp-0x1],dh
  41bf53:	xchg   BYTE PTR [edx+0x0],bl
  41bf56:	(bad)  
  41bf57:	inc    DWORD PTR [ebp+0x68a6f3ff]
  41bf5d:	dec    esp
  41bf5f:	inc    ecx
  41bf60:	add    BYTE PTR [edi+0xe4aff],dl
  41bf66:	add    ah,cl
  41bf68:	(bad)  
  41bf6a:	(bad)  
  41bf6b:	mov    ds:0xf400ff28,al
  41bf70:	(bad)  
  41bf71:	stc    
  41bf72:	jmp    DWORD PTR [ebp+0x35]
  41bf75:	mov    DWORD PTR [eax],eax
  41bf77:	inc    DWORD PTR [esi+0xedae3ff]
  41bf7d:	add    DWORD PTR [eax],0x4f
  41bf80:	call   FWORD PTR [eax+eax*1-0x7c20f7]
  41bf87:	add    BYTE PTR [edi-0x1],dl
  41bf8a:	int3   
  41bf8b:	sub    ch,cl
  41bf8d:	add    DWORD PTR [eax],0x63
  41bf90:	jmp    FWORD PTR [ecx-0x7ce14601]
  41bf96:	int3   
  41bf97:	sbb    DWORD PTR [eax+0x28a055ff],0xffffffff
  41bf9e:	add    dl,al
  41bfa0:	add    BYTE PTR [eax+eax*1-0x47],bh
  41bfa4:	retf   0xcc00
  41bfa7:	jmp    DWORD PTR [ebx]
  41bfa9:	jmp    FWORD PTR [edi-0x7c10cc]
  41bfaf:	mov    al,BYTE PTR [eax]
  41bfb1:	(bad)  
  41bfb2:	inc    ebp
  41bfb4:	outs   dx,BYTE PTR ds:[esi]
  41bfb5:	add    DWORD PTR [eax],0xffffff83
  41bfb8:	aad    0x89
  41bfba:	fdiv   DWORD PTR [ecx+0x3a]
  41bfbd:	int3   
  41bfbe:	add    BYTE PTR [ecx-0x4900ec7d],bl
  41bfc4:	pop    ds
  41bfc5:	dec    DWORD PTR [ecx+0x34fff5ff]
  41bfcb:	sub    ah,ch
  41bfcd:	(bad)  
  41bfce:	inc    ebx
  41bfd0:	jmp    DWORD PTR [eax+0xf7cd00]
  41bfd6:	mov    DWORD PTR [eax],eax
  41bfd8:	scas   al,BYTE PTR es:[edi]
  41bfd9:	inc    DWORD PTR [ecx]
  41bfdb:	repz add eax,0x83a3ff83
  41bfe1:	or     BYTE PTR [ebx-0x1db1],al
  41bfe7:	add    BYTE PTR [eax-0x1],bh
  41bfea:	xchg   esp,eax
  41bfeb:	mov    edi,0x4bff83b3
  41bff0:	mov    esi,ebp
  41bff2:	dec    DWORD PTR [ecx-0x3a]
  41bff5:	cmp    edi,0xffffff83
  41bff8:	mov    ah,cl
  41bffa:	into   
  41bffb:	xor    al,0x81
  41bffd:	(bad)  
  41bffe:	(bad)  
  41bfff:	ds add al,ah
  41c002:	push   DWORD PTR [edx+0xff0045]
  41c008:	clc    
  41c009:	add    BYTE PTR [ecx-0x33b9a6],dl
  41c00f:	mov    al,ds:0x4bff42ff
  41c014:	sbb    edi,edi
  41c016:	add    BYTE PTR [eax],al
  41c018:	or     DWORD PTR [eax],eax
  41c01a:	jno    0x41bfdc
  41c01c:	arpl   di,di
  41c01e:	add    BYTE PTR [edi-0x1d009100],bl
  41c024:	enter  0xff89,0x83
  41c028:	inc    eax
  41c029:	(bad)  
  41c02a:	fisub  WORD PTR [edx-0x15]
  41c02d:	add    BYTE PTR [eax],al
  41c02f:	inc    ebx
  41c030:	push   DWORD PTR [ecx-0x5f5701]
  41c036:	add    bh,bh
  41c038:	aaa    
  41c039:	call   FWORD PTR [ebx-0x27]
  41c03c:	add    DWORD PTR [eax],0xffffffff
  41c03f:	sar    edi,0xbb
  41c042:	call   DWORD PTR [ebx+0x26]
  41c045:	inc    DWORD PTR [eax]
  41c047:	call   FWORD PTR [ecx-0x7d]
  41c04a:	enter  0x280c,0x0
  41c04e:	mov    DWORD PTR [esi],esi
  41c050:	add    BYTE PTR [eax-0x1],al
  41c053:	jne    0x41c075
  41c055:	(bad)  
  41c056:	inc    DWORD PTR [ebx-0x149cff7c]
  41c05c:	jb     0x41c05d
  41c05e:	add    bl,bl
  41c060:	jmp    DWORD PTR [ebx-0xe93e01]
  41c066:	(bad)  
  41c067:	jmp    FWORD PTR [edi]
  41c069:	sbb    DWORD PTR [eax+edx*8-0x44ff7c80],0x0
  41c071:	ins    DWORD PTR es:[edi],dx
  41c072:	mov    DWORD PTR [ecx],esp
  41c074:	and    al,BYTE PTR [eax]
  41c076:	or     DWORD PTR [ecx-0x20727c39],0x3f
  41c07d:	add    DWORD PTR [ebx-0x7c37ff69],0x7b
  41c084:	dec    esi
  41c085:	inc    DWORD PTR [eax]
  41c087:	int3   
  41c088:	jmp    0x41c08a
  41c08a:	pop    esp
  41c08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08c:	xchg   BYTE PTR [eax],al
  41c08e:	add    ah,dh
  41c090:	add    BYTE PTR [edi+edi*8-0xffc26e],bh
  41c097:	add    ch,cl
  41c099:	add    BYTE PTR [edx],ah
  41c09b:	int3   
  41c09c:	fild   DWORD PTR [ebx+0x1883ee83]
  41c0a2:	mov    DWORD PTR [eax-0xff7b],esp
  41c0a8:	xor    DWORD PTR [eax],eax
  41c0aa:	jge    0x41c0d3
  41c0ac:	inc    DWORD PTR [bx+si]
  41c0af:	or     bh,bh
  41c0b1:	lods   eax,DWORD PTR ds:[esi]
  41c0b2:	mov    DWORD PTR [edx+ecx*2-0x37007c01],edx
  41c0b9:	add    ah,dl
  41c0bb:	push   eax
  41c0bc:	cld    
  41c0bd:	(bad)  
  41c0be:	call   DWORD PTR [edi-0x1c7c3c00]
  41c0c4:	push   ebp
  41c0c5:	inc    DWORD PTR [eax]
  41c0c7:	add    BYTE PTR [eax+0x7b8148ff],bl
  41c0cd:	add    BYTE PTR [eax],al
  41c0cf:	or     al,0xcc
  41c0d1:	sti    
  41c0d2:	add    BYTE PTR [esi+0x46],bh
  41c0d5:	int3   
  41c0d6:	inc    DWORD PTR [ebx-0x450b00b0]
  41c0dc:	iret   
  41c0dd:	(bad)  
  41c0de:	(bad)  
  41c0df:	std    
  41c0e0:	xchg   edx,eax
  41c0e1:	(bad)  
  41c0e4:	call   esp
  41c0e6:	(bad)  
  41c0e7:	cli    
  41c0e8:	(bad)  
  41c0e9:	jle    0x41c0ea
  41c0eb:	cmp    edi,0x1c
  41c0ee:	(bad)  
  41c0ef:	fcomi  st,st(5)
  41c0f1:	fiadd  DWORD PTR [ebx-0xc5ff01]
  41c0f7:	cs push ss
  41c0f9:	xlat   BYTE PTR ds:[ebx]
  41c0fa:	cmp    edi,0xffffffff
  41c0fd:	stos   DWORD PTR es:[edi],eax
  41c0fe:	push   eax
  41c100:	sub    esi,DWORD PTR [ebp-0x1]
  41c103:	add    ah,cl
  41c105:	adc    edi,edi
  41c107:	sub    bh,0x97
  41c10a:	cmp    edi,0x0
  41c10d:	dec    edi
  41c10e:	jmp    FWORD PTR [esi+0xe9c2]
  41c114:	add    BYTE PTR [edx-0x34],ah
  41c117:	push   edi
  41c118:	jmp    0x8441c02d
  41c11d:	rol    BYTE PTR [eax],1
  41c11f:	add    ecx,DWORD PTR [ecx+0x7c]
  41c122:	add    BYTE PTR [eax],al
  41c124:	add    BYTE PTR [ebp+0x0],ch
  41c127:	sbb    cl,0x6e
  41c12a:	mov    DWORD PTR [eax],eax
  41c12c:	add    BYTE PTR [ebx],ah
  41c12e:	(bad)  
  41c12f:	in     eax,dx
  41c130:	daa    
  41c131:	lea    ecx,[ecx-0x9aff7d]
  41c137:	rcr    ebp,0x40
  41c13a:	inc    DWORD PTR [eax]
  41c13c:	sbb    DWORD PTR [eax+eax*1-0x32],0xffffffed
  41c141:	add    al,0xcc
  41c143:	cmp    edi,0x44
  41c146:	xor    DWORD PTR [ecx+edx*2-0x45],0xffffffff
  41c14b:	inc    DWORD PTR [ebx+0x5af3000a]
  41c151:	(bad)  
  41c152:	inc    DWORD PTR [ebx-0x5700a77d]
  41c158:	adc    al,0x31
  41c15a:	add    BYTE PTR [eax],al
  41c15c:	push   DWORD PTR [ebx]
  41c15e:	add    ch,bl
  41c160:	mov    ds:0xff83ff22,al
  41c165:	cmp    DWORD PTR [ecx+0xe0c53c],ecx
  41c16b:	add    bh,bh
  41c16d:	dec    ebp
  41c16e:	add    dh,bl
  41c170:	pop    esp
  41c171:	mov    dl,0x0
  41c173:	(bad)  
  41c174:	(bad)  
  41c175:	cmp    BYTE PTR [eax],al
  41c177:	fs fwait
  41c179:	and    edi,edi
  41c17b:	dec    esp
  41c17d:	add    eax,0xda012100
  41c182:	add    DWORD PTR [eax],0xffffffff
  41c185:	inc    ebx
  41c186:	(bad)  
  41c187:	aas    
  41c188:	push   0xffffffdc
  41c18a:	dec    DWORD PTR [ecx+0x4500ec00]
  41c190:	ret    0x8378
  41c193:	(bad)  
  41c194:	jmp    FWORD PTR [eax-0x1]
  41c197:	cmp    al,0x4c
  41c199:	inc    eax
  41c19a:	(bad)  
  41c19b:	(bad)  
  41c19c:	jmp    DWORD PTR [edi]
  41c19e:	add    BYTE PTR [ecx+ebx*2],bl
  41c1a1:	jmp    0x844245a5
  41c1a6:	add    BYTE PTR [edi+esi*2+0x60],ch
  41c1aa:	inc    DWORD PTR [eax]
  41c1ac:	int3   
  41c1ad:	push   cs
  41c1ae:	dec    esi
  41c1b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b1:	jge    0x41c1b2
  41c1b3:	add    DWORD PTR [eax],0x6d
  41c1b6:	add    BYTE PTR [esi+ebp*8-0xdf],cl
  41c1bd:	inc    esi
  41c1be:	add    BYTE PTR [edx-0x7c7c8bd1],ch
  41c1c4:	jmp    FWORD PTR ds:0xfb9d200
  41c1ca:	(bad)  
  41c1cb:	(bad)  
  41c1cc:	call   FWORD PTR [edx-0x15d3417d]
  41c1d2:	add    bh,bh
  41c1d4:	mov    DWORD PTR [edx],edx
  41c1d6:	dec    DWORD PTR [ebp+eiz*2-0xb]
  41c1da:	add    BYTE PTR [ecx+0x5b83c883],cl
  41c1e0:	aad    0x34
  41c1e2:	(bad)  
  41c1e3:	(bad)  
  41c1e4:	jmp    DWORD PTR [esi-0x7b218a01]
  41c1ea:	inc    DWORD PTR [eax]
  41c1ec:	add    BYTE PTR [edx+0x61766e83],cl
  41c1f2:	inc    DWORD PTR [eax]
  41c1f4:	dec    DWORD PTR [edi-0x1a809600]
  41c1fa:	add    bh,bh
  41c1fc:	xor    DWORD PTR [esi-0x50b3b01],0xffffffff
  41c203:	or     esp,0x13
  41c206:	push   DWORD PTR [edi+0x49]
  41c209:	out    dx,eax
  41c20a:	inc    DWORD PTR [eax]
  41c20c:	inc    DWORD PTR [eax+eax*1-0xbf6029]
  41c213:	cmp    edi,0x3e
  41c216:	int3   
  41c217:	mov    eax,0xff00cfe5
  41c21c:	inc    DWORD PTR [edx-0x1]
  41c21f:	jg     0x41c249
  41c221:	mov    dh,0x0
  41c223:	dec    DWORD PTR [ecx-0x7c70007c]
  41c229:	jbe    0x41c1ae
  41c22b:	add    bh,bh
  41c22d:	adc    ecx,esp
  41c22f:	jg     0x41c223
  41c231:	lods   al,BYTE PTR ds:[esi]
  41c232:	(bad)  
  41c233:	(bad)  
  41c234:	push   DWORD PTR [ebp-0x1]
  41c237:	(bad)  
  41c238:	mov    ebx,0xffff8360
  41c23d:	in     al,dx
  41c23e:	int3   
  41c23f:	mov    dl,0xab
  41c241:	stos   BYTE PTR es:[edi],al
  41c242:	add    bh,bh
  41c244:	add    BYTE PTR [edi-0x444f5300],bh
  41c24a:	cmp    edi,0xffffff83
  41c24d:	xchg   ecx,eax
  41c24e:	cmp    ebx,0x6e
  41c251:	fwait
  41c252:	mov    edi,edi
  41c254:	call   DWORD PTR [edi]
  41c256:	add    ch,al
  41c258:	add    dh,BYTE PTR [ebx-0x4c33ff7d]
  41c25e:	(bad)  
  41c25f:	jnp    0x41c1ec
  41c261:	sub    al,0x83
  41c263:	add    bh,bh
  41c265:	xchg   esi,eax
  41c266:	int3   
  41c267:	nop
  41c268:	xchg   edi,eax
  41c269:	imul   eax,DWORD PTR [eax],0x0
  41c26c:	add    BYTE PTR [edx+0x42aca700],al
  41c272:	add    ah,cl
  41c274:	add    BYTE PTR [eax+eax*1-0x76],dl
  41c278:	out    0x21,eax
  41c27a:	add    bh,bh
  41c27c:	(bad)  
  41c27d:	mov    edi,0xb470a4cc
  41c282:	inc    DWORD PTR [eax]
  41c284:	dec    DWORD PTR [ecx-0x1]
  41c287:	imul   esp,ebp,0xff000088
  41c28d:	data16 add BYTE PTR [eax],ch
  41c290:	jae    0x41c2e4
  41c292:	mov    edi,edi
  41c294:	int3   
  41c295:	inc    esi
  41c296:	inc    DWORD PTR [edx]
  41c298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c299:	cmp    al,0x0
  41c29b:	dec    DWORD PTR [ecx-0x15467c91]
  41c2a1:	inc    esp
  41c2a2:	(bad)  
  41c2a3:	(bad)  
  41c2a4:	inc    DWORD PTR [esi-0x34]
  41c2a7:	jbe    0x41c27d
  41c2a9:	mov    bl,0xff
  41c2ab:	add    bh,bh
  41c2ad:	inc    DWORD PTR [bp+0x11]
  41c2b1:	adc    eax,DWORD PTR [eax]
  41c2b3:	inc    DWORD PTR [eax]
  41c2b5:	push   edi
  41c2b6:	add    BYTE PTR [eax],ah
  41c2b8:	bound  ecx,QWORD PTR [edi+0x7489ffff]
  41c2be:	int3   
  41c2bf:	out    0x4,al
  41c2c1:	push   ebx
  41c2c2:	add    bh,bh
  41c2c4:	add    BYTE PTR [edx-0x1],al
  41c2c7:	nop    DWORD PTR [edx]
  41c2ca:	(bad)  
  41c2cb:	inc    DWORD PTR [eax]
  41c2cd:	fdivr  st,st(7)
  41c2cf:	add    DWORD PTR [ebp-0x330000d7],0x2074ffdb
  41c2d9:	inc    eax
  41c2da:	(bad)  
  41c2db:	inc    DWORD PTR [ebx-0xf20097]
  41c2e1:	in     eax,dx
  41c2e2:	add    BYTE PTR [ecx-0x44ff007d],cl
  41c2e8:	mov    ebp,esi
  41c2ea:	add    bh,bh
  41c2ec:	add    ah,bl
  41c2ee:	add    cl,ah
  41c2f0:	sbb    BYTE PTR [eax+0x0],al
  41c2f3:	inc    DWORD PTR [eax]
  41c2f5:	ins    BYTE PTR es:[edi],dx
  41c2f6:	add    BYTE PTR ds:0xcccc4a41,bh
  41c2fc:	int3   
  41c2fd:	sbb    bh,bh
  41c2ff:	sub    al,BYTE PTR [edi-0x90]
  41c305:	mov    ecx,0xa5a003ff
  41c30a:	inc    DWORD PTR [eax]
  41c30c:	add    BYTE PTR [edi-0x10e99d01],dl
  41c312:	mov    edi,edi
  41c314:	call   DWORD PTR ds:0xc6316aff
  41c31a:	add    BYTE PTR [eax],al
  41c31c:	sub    DWORD PTR [edi],0xffffffff
  41c31f:	test   DWORD PTR [esi-0xff7caa],0x37ddff89
  41c329:	sbb    edi,edi
  41c32b:	cmp    edi,0x7d
  41c32e:	jmp    eax
  41c330:	xchg   edx,eax
  41c331:	and    bh,bh
  41c333:	mov    edi,edi
  41c335:	xor    eax,0x72bc8989
  41c33a:	add    bh,bh
  41c33c:	add    cl,dl
  41c33e:	add    BYTE PTR [ecx],cl
  41c340:	fdiv   st(6),st
  41c342:	add    BYTE PTR [eax],al
  41c344:	dec    DWORD PTR [eax+0x0]
  41c347:	call   0x7c83:0xcc988a
  41c34e:	call   DWORD PTR [ecx-0x9]
  41c351:	test   eax,0x4b8300ff
  41c356:	(bad)  
  41c357:	jp     0x41c3d1
  41c359:	les    eax,FWORD PTR [eax]
  41c35b:	dec    DWORD PTR [ecx-0x7b5b7c77]
  41c361:	inc    esp
  41c362:	inc    DWORD PTR [eax]
  41c364:	add    BYTE PTR [eax+eax*1+0xc],cl
  41c368:	arpl   WORD PTR [ebx+0x62ff0000],sp
  41c36e:	mov    esi,edi
  41c370:	mov    WORD PTR [edi+0x6e8900ff],ss
  41c376:	add    BYTE PTR [ecx],cl
  41c378:	sar    ch,cl
  41c37a:	inc    DWORD PTR [eax]
  41c37c:	sub    DWORD PTR [eax-0x28736b00],0x0
  41c383:	inc    DWORD PTR [ebx+0x336e8377]
  41c389:	dec    ebx
  41c38a:	add    bh,bh
  41c38c:	add    BYTE PTR [eax-0x7a0ba901],ch
  41c392:	(bad)  
  41c393:	inc    DWORD PTR [eax]
  41c395:	mov    eax,ds:0x81a571ff
  41c39a:	add    DWORD PTR [eax],0xffffffff
  41c39d:	jmp    FWORD PTR cs:[eax-0x33002e26]
  41c3a4:	add    BYTE PTR [ebx-0x77],dl
  41c3a7:	push   ss
  41c3a8:	mov    bl,0xf0
  41c3aa:	int3   
  41c3ab:	add    BYTE PTR [eax],al
  41c3ad:	fwait
  41c3ae:	add    ch,al
  41c3b0:	popf   
  41c3b1:	ins    DWORD PTR es:[edi],dx
  41c3b2:	(bad)  
  41c3b3:	inc    DWORD PTR [eax]
  41c3b5:	fwait
  41c3b6:	add    BYTE PTR [ecx],dl
  41c3b8:	mov    BYTE PTR ds:0x4c00ffff,al
  41c3be:	add    cl,ah
  41c3c0:	xor    ebp,DWORD PTR [edi+0x6b8900ff]
  41c3c6:	inc    DWORD PTR [esi]
  41c3c8:	loop   0x41c41f
  41c3ca:	inc    DWORD PTR [ebx-0x4a768301]
  41c3d0:	sub    al,0xb0
  41c3d2:	(bad)  
  41c3d3:	dec    DWORD PTR [ecx-0x38aa0085]
  41c3d9:	mov    al,ds:0x6effffff
  41c3de:	call   DWORD PTR [ebp+0xd]
  41c3e1:	push   ecx
  41c3e2:	add    BYTE PTR [eax],al
  41c3e4:	mov    DWORD PTR [ecx],ebp
  41c3e6:	call   FWORD PTR [ebx+ecx*8-0x48]
  41c3ea:	add    DWORD PTR [eax],0xffffffff
  41c3ed:	loopne 0x41c3ef
  41c3ef:	cli    
  41c3f0:	ds in  eax,dx
  41c3f2:	int3   
  41c3f3:	dec    DWORD PTR [ecx-0x537e0002]
  41c3f9:	fwait
  41c3fa:	add    DWORD PTR [eax],0xffffffff
  41c3fd:	stos   DWORD PTR es:[edi],eax
  41c3fe:	add    BYTE PTR [ebx-0xff09a3],bl
  41c404:	add    bl,ch
  41c406:	call   FWORD PTR [esi+0x13]
  41c409:	ret    0xff00
  41c40c:	jmp    FWORD PTR [eax+0x205cfeff]
  41c412:	add    bh,bh
  41c414:	push   DWORD PTR [eax+eax*1]
  41c417:	es cmp bh,bh
  41c41a:	add    DWORD PTR [eax],0xffffffff
  41c41d:	jae    0x41c41f
  41c41f:	bound  esp,QWORD PTR [ebx]
  41c421:	mov    ds:0x89ff8900,eax
  41c426:	int3   
  41c427:	sti    
  41c428:	(bad)  
  41c429:	in     eax,dx
  41c42a:	cmp    edi,0x0
  41c42d:	rol    DWORD PTR [eax],0xe6
  41c430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c431:	jbe    0x41c432
  41c433:	add    bh,bh
  41c435:	lods   eax,DWORD PTR ds:[esi]
  41c436:	jmp    DWORD PTR [eax-0x7c001fe5]
  41c43c:	call   DWORD PTR [esi-0x14d35e01]
  41c442:	inc    DWORD PTR [eax]
  41c444:	add    BYTE PTR [edx],ah
  41c446:	call   DWORD PTR [ecx]
  41c448:	add    BYTE PTR [edx+0x39ff0000],dl
  41c44e:	mov    DWORD PTR [ebx-0x7c007af8],ecx
  41c454:	int3   
  41c455:	in     al,0x0
  41c457:	(bad)  
  41c458:	icebp  
  41c459:	jecxz  0x41c45b
  41c45b:	cmp    edi,0x10
  41c45e:	add    BYTE PTR [esi-0x3a],dh
  41c461:	nop
  41c462:	add    bh,bh
  41c464:	int3   
  41c465:	and    BYTE PTR [ebx-0x81d950],al
  41c46b:	(bad)  
  41c46c:	call   esp
  41c46e:	add    bh,bh
  41c470:	sub    BYTE PTR [edx-0x76007c01],bl
  41c476:	(bad)  
  41c477:	frstor [eax-0x33]
  41c47a:	add    BYTE PTR [eax],al
  41c47c:	and    esp,0x0
  41c47f:	sbb    BYTE PTR [ecx-0x1c],0xff
  41c483:	add    bh,bh
  41c485:	xchg   esp,eax
  41c486:	jmp    FWORD PTR [ecx+ebx*2-0xff00e7]
  41c48d:	mov    bl,0xcc
  41c48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c490:	cs cli 
  41c492:	(bad)  
  41c493:	(bad)  
  41c494:	(bad)  
  41c495:	cmp    ecx,esp
  41c497:	ins    BYTE PTR es:[edi],dx
  41c498:	popf   
  41c499:	loop   0x41c49a
  41c49b:	int3   
  41c49c:	add    ah,al
  41c49e:	add    cl,bh
  41c4a0:	inc    esp
  41c4a1:	call   0x7000:0xc083ff83
  41c4a8:	rcr    DWORD PTR [ebx+0x2883ff00],1
  41c4ae:	call   DWORD PTR [ebp-0x4fc1]
  41c4b4:	add    BYTE PTR [ebp-0x7d],dl
  41c4b7:	add    BYTE PTR [eax],ch
  41c4b9:	sub    esp,ecx
  41c4bb:	int3   
  41c4bc:	inc    DWORD PTR [eax+eax*1]
  41c4bf:	mov    ch,al
  41c4c1:	stos   DWORD PTR es:[edi],eax
  41c4c2:	inc    DWORD PTR [eax]
  41c4c4:	or     esp,0x0
  41c4c7:	sbb    edi,DWORD PTR [eax+0x28]
  41c4ca:	inc    DWORD PTR [eax]
  41c4cc:	mov    DWORD PTR [eax],ebp
  41c4ce:	dec    edi
  41c4d0:	aaa    
  41c4d1:	enter  0x83,0xff
  41c4d5:	imul   edi,edi,0xffe4453f
  41c4db:	(bad)  
  41c4dc:	(bad)  
  41c4dd:	(bad)  
  41c4df:	in     eax,dx
  41c4e0:	mov    ebx,0xffff897e
  41c4e5:	out    dx,al
  41c4e6:	jmp    FWORD PTR ds:0xccff8e5a
  41c4ec:	jmp    DWORD PTR [esi+0x46171f00]
  41c4f2:	add    BYTE PTR [eax],al
  41c4f4:	and    DWORD PTR [edx-0x1],0xffffffe3
  41c4f8:	outs   dx,BYTE PTR ds:[esi]
  41c4f9:	ss int3 
  41c4fb:	add    bh,bh
  41c4fd:	pop    ss
  41c4fe:	or     ebp,0xffffff88
  41c501:	into   
  41c502:	add    BYTE PTR [ebx-0x5b001800],al
  41c508:	cli    
  41c509:	cmp    BYTE PTR [eax],al
  41c50b:	add    bh,bh
  41c50d:	cld    
  41c50e:	jmp    FWORD PTR [esi]
  41c510:	or     al,0x9a
  41c512:	add    DWORD PTR [eax],0x0
  41c515:	aad    0xcc
  41c517:	mov    ds,WORD PTR [ecx]
  41c519:	rol    DWORD PTR [eax],cl
  41c51b:	add    BYTE PTR [eax],al
  41c51d:	(bad)  
  41c51e:	push   DWORD PTR [ebx]
  41c520:	test   al,0x50
  41c522:	add    bh,bh
  41c524:	push   esi
  41c526:	call   FWORD PTR ds:0x83ccd7c4
  41c52c:	add    BYTE PTR [ecx-0x653bdf7d],dl
  41c532:	add    BYTE PTR [eax],al
  41c534:	add    bl,ch
  41c536:	(bad)  
  41c537:	sti    
  41c538:	test   esi,esi
  41c53a:	int3   
  41c53b:	add    BYTE PTR [eax],al
  41c53d:	sbb    al,BYTE PTR [eax]
  41c53f:	jmp    0x41c4de
  41c541:	hlt    
  41c542:	inc    DWORD PTR [eax]
  41c544:	sbb    esi,0xffffffff
  41c547:	jecxz  0x41c4fd
  41c549:	dec    esp
  41c54a:	add    bh,bh
  41c54c:	sbb    DWORD PTR [ecx],0xffffffff
  41c54f:	ret    
  41c550:	shl    DWORD PTR [ebx],0x0
  41c553:	or     esp,0xffffffb0
  41c556:	int3   
  41c557:	mov    edi,0xcc005ca7
  41c55c:	jmp    DWORD PTR [esi-0x533fd634]
  41c562:	(bad)  
  41c563:	inc    DWORD PTR [ebx-0x12933347]
  41c569:	xor    eax,0x58cc8383
  41c56e:	cmp    DWORD PTR [edx-0x3a],0xffffffb3
  41c572:	dec    DWORD PTR [ecx-0x4400e601]
  41c578:	mov    BYTE PTR [esi],0xff
  41c57b:	add    bh,bh
  41c57d:	les    eax,FWORD PTR [eax]
  41c57f:	xchg   edx,eax
  41c580:	xor    BYTE PTR [ebx+eax*4+0x0],bh
  41c584:	adc    DWORD PTR [esi+0x4c67e083],0x0
  41c58b:	int3   
  41c58c:	mov    edx,ebp
  41c58e:	mov    DWORD PTR [esi+0x2],edi
  41c591:	xor    edi,edi
  41c593:	dec    esp
  41c595:	rol    DWORD PTR [eax],cl
  41c597:	mov    bh,0x82
  41c599:	push   edi
  41c59a:	add    DWORD PTR [ebx+0x80ff],0xffffffeb
  41c5a1:	iret   
  41c5a2:	inc    DWORD PTR [eax]
  41c5a4:	add    BYTE PTR [ecx-0x1],ah
  41c5a7:	jbe    0x41c5cd
  41c5a9:	(bad)  
  41c5ac:	xor    DWORD PTR [edi+0x6c009300],0xffffffff
  41c5b3:	add    BYTE PTR [eax],al
  41c5b5:	retf   0x7400
  41c5b8:	mov    WORD PTR [eax],ss
  41c5ba:	mov    DWORD PTR [eax],eax
  41c5bc:	sub    DWORD PTR [eax-0x49b44901],0xffffffff
  41c5c3:	dec    esp
  41c5c5:	arpl   WORD PTR [ecx-0xc3916c],cx
  41c5cb:	add    bh,bh
  41c5cd:	mov    eax,0x114c9183
  41c5d2:	inc    DWORD PTR [eax]
  41c5d4:	add    BYTE PTR [edi],bl
  41c5d6:	int3   
  41c5d7:	fst    QWORD PTR [esi-0x7cff3388]
  41c5dd:	jmp    DWORD PTR cs:0xffffed1a
  41c5e4:	add    BYTE PTR [eax-0x1],cl
  41c5e7:	add    BYTE PTR [esp+esi*8-0x5bff7c01],bh
  41c5ee:	sub    DWORD PTR [ebp+0x0],0xffffffad
  41c5f2:	int3   
  41c5f3:	inc    DWORD PTR [ebx+0x4ee8ffd7]
  41c5f9:	mov    ebx,0x76ff8300
  41c5fe:	mov    DWORD PTR [esi],edi
  41c600:	adc    eax,0xff0000b1
  41c605:	add    BYTE PTR [ecx-0x20cee],cl
  41c60b:	inc    DWORD PTR [eax]
  41c60d:	push   0xffffff83
  41c60f:	and    edi,DWORD PTR [edx-0x19]
  41c612:	add    BYTE PTR [ecx+0x5cff0983],cl
  41c618:	outs   dx,DWORD PTR ds:[esi]
  41c619:	and    eax,0xd30089ff
  41c61e:	int3   
  41c61f:	popa   
  41c620:	ins    DWORD PTR es:[edi],dx
  41c621:	in     al,dx
  41c622:	mov    edi,edi
  41c624:	push   eax
  41c626:	call   DWORD PTR [ebp+ebp*4+0xffb5]
  41c62d:	mov    cl,0xff
  41c62f:	ja     0x41c5f3
  41c631:	outs   dx,DWORD PTR ds:[esi]
  41c632:	add    BYTE PTR [ebx+0x62ffa8ff],al
  41c638:	lds    edx,FWORD PTR [ecx+0xf008900]
  41c63e:	add    BYTE PTR [ebx-0x7cff29ab],dl
  41c644:	add    cl,ah
  41c646:	dec    DWORD PTR [esi-0x3e]
  41c649:	imul   edi,edi,0x1cff00
  41c64f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c650:	les    ebp,FWORD PTR [eax+eax*1-0x1]
  41c654:	int3   
  41c655:	(bad)  
  41c656:	jmp    DWORD PTR [edx-0x76008fcd]
  41c65c:	sub    DWORD PTR [ebp-0x1],0xffffffc8
  41c660:	icebp  
  41c661:	push   esp
  41c662:	inc    DWORD PTR [eax]
  41c664:	(bad)  
  41c665:	cmp    bh,bh
  41c667:	out    dx,al
  41c668:	aaa    
  41c669:	inc    ebx
  41c66a:	add    bh,bh
  41c66c:	call   DWORD PTR [esi-0x1]
  41c66f:	into   
  41c670:	lea    eax,[edi+edi*8-0x7d]
  41c674:	sub    esp,0x0
  41c677:	shl    DWORD PTR [ecx+0x2a],0x0
  41c67b:	dec    DWORD PTR [ecx-0x59b27cfd]
  41c681:	das    
  41c682:	inc    DWORD PTR [eax]
  41c684:	jmp    DWORD PTR [edi+edi*8]
  41c687:	lods   al,BYTE PTR ds:[esi]
  41c688:	mov    ebp,DWORD PTR [ebp+0x5700ff00]
  41c68e:	add    BYTE PTR [ebx],al
  41c690:	in     al,dx
  41c691:	xchg   ebx,eax
  41c692:	inc    DWORD PTR [eax]
  41c694:	adc    DWORD PTR [eax-0x77],0x2d
  41c698:	mov    ah,0x53
  41c69a:	inc    DWORD PTR [ebx-0x3003f7d]
  41c6a0:	fimul  DWORD PTR [ecx+0x0]
  41c6a3:	(bad)  
  41c6a4:	call   FWORD PTR [edi-0x1]
  41c6a7:	mov    dh,0xe7
  41c6a9:	and    edi,edi
  41c6ab:	(bad)  
  41c6ac:	push   ebx
  41c6ae:	cmp    DWORD PTR [eax-0x7c00b2fc],0xffffffff
  41c6b5:	outs   dx,BYTE PTR ds:[esi]
  41c6b6:	call   FWORD PTR [ebx-0xff0cad]
  41c6bc:	jmp    DWORD PTR [esi]
  41c6be:	dec    DWORD PTR [edi-0x33006945]
  41c6c4:	dec    DWORD PTR [ebx-0x3b741501]
  41c6ca:	(bad)  
  41c6cb:	(bad)  
  41c6cc:	inc    DWORD PTR [esi]
  41c6ce:	dec    eax
  41c6d0:	jae    0x41c745
  41c6d2:	add    bh,bh
  41c6d4:	xor    DWORD PTR [ebp+0x228dcdff],0x0
  41c6db:	int3   
  41c6dc:	push   DWORD PTR [edi+0x3b162483]
  41c6e2:	or     esp,0xffffffcc
  41c6e5:	mov    edi,?
  41c6e7:	and    edi,DWORD PTR [edx-0x58]
  41c6ea:	add    BYTE PTR [ebx-0x58ffdb00],al
  41c6f0:	sti    
  41c6f1:	mov    edx,0x4ffffff
  41c6f6:	dec    DWORD PTR [ebx+0x18]
  41c6f9:	in     eax,0x89
  41c6fb:	(bad)  
  41c6fc:	(bad)  
  41c6fd:	(bad)  
  41c6ff:	pop    esi
  41c700:	test   al,0x9d
  41c702:	add    DWORD PTR [eax],0xffffff89
  41c705:	in     eax,0x83
  41c707:	(bad)  
  41c708:	shr    BYTE PTR [ebx-0x7d],1
  41c70b:	add    BYTE PTR [eax],al
  41c70d:	jp     0x41c70e
  41c70f:	popf   
  41c710:	scas   eax,DWORD PTR es:[edi]
  41c711:	xchg   ecx,eax
  41c712:	add    BYTE PTR [eax],al
  41c714:	mov    DWORD PTR [ecx-0x1],esi
  41c717:	xor    cl,al
  41c719:	cmp    edi,0xcc148300
  41c71f:	push   0xffffffd3
  41c721:	imul   eax,DWORD PTR [eax],0x0
  41c724:	mov    ebx,edi
  41c726:	and    DWORD PTR [ebx+esi*2],0x48
  41c72a:	add    BYTE PTR [ecx+0x1583fdff],cl
  41c730:	sbb    DWORD PTR [eax],edi
  41c732:	add    BYTE PTR [ebx-0x107c3700],al
  41c738:	push   ebx
  41c739:	jno    0x41c707
  41c73b:	add    bh,bh
  41c73d:	ret    0x9c00
  41c740:	jae    0x41c7a1
  41c742:	add    bh,bh
  41c744:	mov    DWORD PTR [ebx-0x52802e01],ecx
  41c74a:	dec    DWORD PTR [ecx+0x73ffaa89]
  41c750:	inc    DWORD PTR [edx-0x14ff3301]
  41c756:	call   DWORD PTR [ebp+0xfff7bc]
  41c75c:	(bad)  
  41c75d:	jl     0x41c75e
  41c75f:	test   DWORD PTR [ebp-0x3300007a],edi
  41c765:	enter  0xe6ff,0x0
  41c769:	or     bh,bh
  41c76b:	mov    DWORD PTR [eax],eax
  41c76d:	stos   BYTE PTR es:[edi],al
  41c76e:	add    al,dl
  41c770:	shl    al,1
  41c772:	add    DWORD PTR [eax],0xffffffcc
  41c775:	rol    DWORD PTR [ebx-0x8ae1a5],cl
  41c77b:	cmp    edi,0xffffffe9
  41c77e:	sbb    DWORD PTR [ebp-0x6d],0x7c
  41c782:	(bad)  
  41c783:	inc    DWORD PTR [ebx-0x59a633b7]
  41c789:	inc    esi
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	call   DWORD PTR [edi+edi*8]
  41c78f:	aad    0xac
  41c791:	inc    ebp
  41c792:	dec    esp
  41c794:	inc    DWORD PTR [edi-0x77]
  41c797:	daa    
  41c798:	lahf   
  41c799:	xor    al,0xff
  41c79b:	add    ah,cl
  41c79d:	icebp  
  41c79e:	(bad)  
  41c79f:	fxch   st(4)
  41c7a1:	inc    esi
  41c7a2:	cmp    edi,0xffffffff
  41c7a5:	repz and DWORD PTR [eax],0x74
  41c7a9:	pop    ds
  41c7aa:	dec    esp
  41c7ac:	inc    DWORD PTR [edi+edi*8]
  41c7af:	jl     0x41c782
  41c7b1:	pushf  
  41c7b2:	add    bh,bh
  41c7b4:	jmp    FWORD PTR [edx-0x1]
  41c7b7:	pop    esi
  41c7b8:	sub    eax,0xff008322
  41c7bd:	(bad)  
  41c7bf:	int    0xca
  41c7c1:	inc    DWORD PTR gs:[ebx+0x1f83beff]
  41c7c8:	stc    
  41c7c9:	xchg   ebp,eax
  41c7ca:	dec    esp
  41c7cc:	call   FWORD PTR [eax+eax*1-0xb]
  41c7d0:	xor    BYTE PTR [ebx-0x1],dh
  41c7d3:	(bad)  
  41c7d4:	dec    DWORD PTR [edx+0x43912cff]
  41c7da:	add    BYTE PTR [eax],al
  41c7dc:	int3   
  41c7dd:	pop    edi
  41c7de:	add    BYTE PTR [edx],bl
  41c7e0:	adc    dh,ch
  41c7e2:	int3   
  41c7e3:	int3   
  41c7e4:	push   DWORD PTR [edx-0x7d]
  41c7e7:	in     eax,0x46
  41c7e9:	jne    0x41c7ea
  41c7eb:	add    DWORD PTR [eax],0x2a
  41c7ee:	add    BYTE PTR [ebx+0x50],bh
  41c7f1:	push   ss
  41c7f2:	dec    esp
  41c7f4:	add    BYTE PTR [ebx-0x2071bf00],ah
  41c7fa:	add    bh,bh
  41c7fc:	int3   
  41c7fd:	cdq    
  41c7fe:	int3   
  41c7ff:	(bad)  
  41c800:	push   ecx
  41c801:	mov    bh,bh
  41c803:	add    bh,bh
  41c805:	xchg   esp,eax
  41c806:	dec    edi
  41c808:	jp     0x41c78f
  41c80a:	int3   
  41c80b:	cmp    edi,0xfffffff5
  41c80e:	jmp    DWORD PTR [ebx+edi*2+0x44]
  41c812:	add    BYTE PTR [eax],al
  41c814:	push   DWORD PTR [esi]
  41c816:	call   DWORD PTR [ecx-0xc346]
  41c81c:	add    BYTE PTR [ecx],bh
  41c81e:	jmp    FWORD PTR [ecx]
  41c820:	push   esi
  41c821:	mov    edx,0x6583ff00
  41c826:	(bad)  
  41c827:	jmp    0x41c7cb
  41c829:	mov    ds:0xe8ff83ff,al
  41c82e:	add    BYTE PTR [esi],bh
  41c830:	shl    al,0x83
  41c833:	add    bh,bh
  41c835:	ins    BYTE PTR es:[edi],dx
  41c836:	call   FWORD PTR [ebp-0x331bf7]
  41c83c:	(bad)  
  41c83d:	fiadd  WORD PTR [eax]
  41c83f:	ror    DWORD PTR gs:[ecx-0x17337c01],0xcc
  41c847:	cli    
  41c848:	jp     0x41c7eb
  41c84a:	int3   
  41c84b:	(bad)  
  41c84c:	inc    DWORD PTR [eax-0x77]
  41c84f:	push   edi
  41c850:	push   0xffffffe7
  41c855:	(bad)  
  41c856:	inc    edx
  41c858:	fiadd  WORD PTR [ebx-0x1]
  41c85b:	add    BYTE PTR [eax],al
  41c85d:	xchg   edi,eax
  41c85e:	add    BYTE PTR [esp+eiz*4+0x46],bl
  41c862:	int3   
  41c863:	add    bh,bh
  41c865:	push   ds
  41c866:	add    BYTE PTR [edi-0x22],al
  41c869:	inc    ecx
  41c86a:	inc    DWORD PTR [ebx+0x3d893c89]
  41c870:	int3   
  41c871:	scas   al,BYTE PTR es:[edi]
  41c872:	inc    DWORD PTR [ebx-0x73fff101]
  41c878:	dec    esi
  41c879:	lods   al,BYTE PTR ds:[esi]
  41c87a:	add    DWORD PTR [ebx+0x36ffbe00],0xffffffd2
  41c881:	out    dx,eax
  41c882:	add    BYTE PTR [eax],al
  41c884:	add    ebp,0xffffffff
  41c887:	sbb    DWORD PTR [ecx+ebx*1],esi
  41c88a:	dec    DWORD PTR [ecx+0x31831eff]
  41c890:	(bad)  
  41c891:	cwde   
  41c892:	cmp    edi,0xffffffff
  41c895:	dec    ebp
  41c896:	int3   
  41c897:	mov    ds:0x89008ef4,eax
  41c89c:	jmp    DWORD PTR [esi+0x0]
  41c89f:	lea    ecx,[ebx+0xffffe2]
  41c8a5:	pusha  
  41c8a6:	add    BYTE PTR [ebx+0xffd2ba],dl
  41c8ac:	add    BYTE PTR [esi],dl
  41c8ae:	inc    edi
  41c8b0:	mov    WORD PTR [esi+0x5ff00ff],gs
  41c8b6:	add    BYTE PTR [eax-0x761552],bh
  41c8bc:	add    BYTE PTR [ebx+0x20d99fff],ah
  41c8c2:	inc    DWORD PTR [eax]
  41c8c4:	jmp    DWORD PTR [edx+0x6fdf9589]
  41c8ca:	add    bh,bh
  41c8cc:	inc    DWORD PTR [edi+edi*8-0x42]
  41c8d0:	ins    DWORD PTR es:[edi],dx
  41c8d1:	(bad)  
  41c8d4:	jmp    FWORD PTR [ecx+ecx*4+0x2]
  41c8d8:	ins    DWORD PTR es:[edi],dx
  41c8d9:	cmp    bh,bh
  41c8db:	int3   
  41c8dc:	int3   
  41c8dd:	xchg   edx,eax
  41c8de:	inc    ebp
  41c8e0:	xchg   DWORD PTR [edi+0x4b0083ff],ebp
  41c8e6:	and    DWORD PTR [ecx],0x77
  41c8e9:	mov    cl,ah
  41c8eb:	add    bh,bh
  41c8ed:	in     eax,dx
  41c8ee:	and    DWORD PTR [edi-0x7cff596d],0xffffffff
  41c8f5:	popf   
  41c8f6:	mov    DWORD PTR [ecx+0xff6dd9],ecx
  41c8fc:	jmp    ebp
  41c8fe:	inc    DWORD PTR [esi+0x95fe]
  41c904:	add    BYTE PTR [esi-0x7d],dh
  41c907:	shl    BYTE PTR [ebx],cl
  41c909:	or     BYTE PTR [ecx-0x8ff01],0x58
  41c910:	mov    edx,0xffff4e
  41c915:	sub    edi,edi
  41c917:	gs pop ss
  41c919:	sar    edi,cl
  41c91b:	inc    DWORD PTR [eax]
  41c91d:	(bad)  
  41c91e:	jmp    FWORD PTR [esi]
  41c920:	test   DWORD PTR [edi-0x1],ecx
  41c923:	inc    DWORD PTR [eax]
  41c925:	dec    ebp
  41c926:	sbb    DWORD PTR [edx],0x10
  41c929:	sahf   
  41c92a:	add    BYTE PTR [eax],al
  41c92c:	sub    DWORD PTR [ebx-0x600a4001],0x0
  41c933:	(bad)  
  41c934:	push   DWORD PTR [ebx-0x7a801d00]
  41c93a:	inc    DWORD PTR [eax]
  41c93c:	sbb    edx,0xffffffff
  41c93f:	test   BYTE PTR [edi-0xff00f4],ah
  41c945:	pop    edx
  41c946:	add    BYTE PTR [esi+0xd],dl
  41c949:	adc    eax,0x6389ff83
  41c94e:	mov    DWORD PTR [ebx-0x358b],ecx
  41c954:	add    BYTE PTR [esi-0x1],ch
  41c957:	outs   dx,BYTE PTR ds:[esi]
  41c958:	jge    0x41c9ad
  41c95a:	inc    DWORD PTR [eax]
  41c95c:	add    BYTE PTR [ebx+eax*4+0xbc59e9],al
  41c963:	inc    DWORD PTR [ebx-0x336a00c9]
  41c969:	xchg   esi,eax
  41c96a:	add    BYTE PTR [eax],al
  41c96c:	int3   
  41c96d:	clc    
  41c96e:	add    ch,ch
  41c970:	(bad)  
  41c971:	(bad)  
  41c972:	add    bh,bh
  41c974:	add    bh,dh
  41c976:	adc    eax,0xfffffff9
  41c979:	adc    eax,0x8fffff00
  41c97e:	jmp    esi
  41c980:	pop    ebx
  41c982:	inc    DWORD PTR [eax]
  41c984:	int3   
  41c985:	or     eax,DWORD PTR [eax]
  41c987:	sbb    al,0x50
  41c989:	(bad)  
  41c98a:	(bad)  
  41c98b:	inc    DWORD PTR [eax]
  41c98d:	xchg   esp,eax
  41c98e:	jmp    DWORD PTR [eax+edi*2+0x2b]
  41c992:	add    BYTE PTR [ebx-0x387c1401],al
  41c998:	cmp    dl,BYTE PTR [edi+edi*8-0x1]
  41c99c:	add    bl,dl
  41c99e:	add    BYTE PTR [ebx+0x833a6c],dl
  41c9a4:	call   DWORD PTR [edx]
  41c9a6:	sub    ebx,0x48
  41c9a9:	sub    edi,edi
  41c9ab:	add    bh,bh
  41c9ad:	in     al,dx
  41c9ae:	(bad)  
  41c9af:	cmp    al,0xd8
  41c9b1:	sbb    eax,DWORD PTR [eax]
  41c9b3:	(bad)  
  41c9b4:	push   DWORD PTR [ecx+0x5f0ef600]
  41c9ba:	dec    esp
  41c9bc:	inc    DWORD PTR [eax-0x1]
  41c9bf:	jp     0x41c962
  41c9c1:	jmp    0x41c9c2
  41c9c3:	dec    esp
  41c9c5:	repnz int3 
  41c9c7:	sbb    al,BYTE PTR [ecx]
  41c9c9:	cmp    edi,0x83aa00cc
  41c9cf:	add    cl,dh
  41c9d1:	outs   dx,BYTE PTR ds:[esi]
  41c9d2:	inc    DWORD PTR [eax]
  41c9d4:	dec    DWORD PTR [ecx-0x7d]
  41c9d7:	stos   BYTE PTR es:[edi],al
  41c9d8:	sub    BYTE PTR [edx-0x34],cl
  41c9db:	add    bh,bh
  41c9dd:	mov    edi,0x123e36cc
  41c9e2:	(bad)  
  41c9e3:	(bad)  
  41c9e4:	push   DWORD PTR [ebx-0x1]
  41c9e7:	ins    DWORD PTR es:[edi],dx
  41c9e8:	mov    WORD PTR [edx],gs
  41c9ea:	dec    DWORD PTR [ecx+0x35ff5100]
  41c9f0:	mov    ebx,?
  41c9f2:	dec    esp
  41c9f4:	add    BYTE PTR [esi],cl
  41c9f6:	int3   
  41c9f7:	outs   dx,DWORD PTR ds:[esi]
  41c9f8:	gs fcos 
  41c9fb:	inc    DWORD PTR [eax]
  41c9fd:	cld    
  41c9fe:	inc    esp
  41ca00:	stc    
  41ca01:	inc    BYTE PTR [eax]
  41ca03:	dec    esp
  41ca05:	push   ecx
  41ca06:	mov    DWORD PTR [ecx],ecx
  41ca08:	adc    BYTE PTR [edi-0x1],dh
  41ca0b:	(bad)  
  41ca0c:	(bad)  
  41ca0d:	mov    esi,0xa1068bff
  41ca12:	inc    DWORD PTR [eax]
  41ca14:	call   DWORD PTR [ebx-0x5ebd6c01]
  41ca1a:	add    BYTE PTR [ebx-0x27008634],al
  41ca20:	jnp    0x41ca23
  41ca22:	add    bh,bh
  41ca24:	cmp    DWORD PTR [edi-0x32b65b01],0xffffffff
  41ca2b:	add    DWORD PTR [eax],0xffffffe6
  41ca2e:	jmp    DWORD PTR [ebp-0x3301a0]
  41ca34:	or     ebp,0xffffffcc
  41ca37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca38:	sbb    eax,0xff00ffcd
  41ca3d:	mov    esi,0xd3352b00
  41ca42:	add    BYTE PTR [eax],al
  41ca44:	int3   
  41ca45:	and    al,BYTE PTR [eax]
  41ca47:	in     al,dx
  41ca48:	xlat   BYTE PTR ds:[ebx]
  41ca49:	(bad)  
  41ca4a:	int3   
  41ca4b:	dec    DWORD PTR [ecx-0x6d4433fb]
  41ca51:	je     0x41ca53
  41ca53:	int3   
  41ca54:	add    BYTE PTR [ecx+ecx*4],dh
  41ca57:	cmp    DWORD PTR [edi-0x76ff00e3],0xffffffb8
  41ca5e:	inc    DWORD PTR [ebp-0x45]
  41ca61:	jb     0x41ca2f
  41ca63:	(bad)  
  41ca64:	inc    DWORD PTR [eax]
  41ca66:	dec    DWORD PTR [edi+0x8c92]
  41ca6c:	or     DWORD PTR [ebx-0x26dde301],0xffffff83
  41ca73:	add    bh,bh
  41ca75:	add    BYTE PTR fs:[edx],cl
  41ca78:	sub    eax,0xffcc830c
  41ca7d:	dec    edx
  41ca7e:	xor    DWORD PTR [ebp-0x7c00e29e],0xffffffff
  41ca85:	or     BYTE PTR [ebx-0xa8a1e7],al
  41ca8b:	inc    DWORD PTR [eax]
  41ca8d:	ds adc esp,0xfffffffe
  41ca91:	inc    DWORD PTR fs:[ebx-0x7e76a201]
  41ca98:	sbb    DWORD PTR [esi-0x6aff0001],0x0
  41ca9f:	mov    ebx,0xffffdab7
  41caa4:	jmp    FWORD PTR [eax+0x25cd2f00]
  41caaa:	add    bh,bh
  41caac:	add    BYTE PTR [ecx+0x6ae8deff],ah
  41cab2:	add    BYTE PTR [eax],al
  41cab4:	mov    DWORD PTR [eax-0x45d26d00],ebp
  41caba:	mov    DWORD PTR [eax],eax
  41cabc:	int3   
  41cabd:	jmp    0x41cabf
  41cabf:	xchg   edx,eax
  41cac0:	jge    0x41cb01
  41cac2:	cmp    edi,0xffffff83
  41cac5:	out    dx,al
  41cac6:	call   DWORD PTR [ecx+eax*1+0x9f]
  41cacd:	mov    edi,edi
  41cacf:	dec    DWORD PTR [edi]
  41cad1:	loopne 0x41cad2
  41cad3:	add    BYTE PTR [eax],al
  41cad5:	or     bh,bh
  41cad7:	bound  ebx,QWORD PTR [ecx-0x7604]
  41cadd:	or     ah,cl
  41cadf:	aad    0x32
  41cae1:	inc    eax
  41cae2:	inc    DWORD PTR [eax]
  41cae4:	push   ebp
  41cae6:	push   DWORD PTR [ecx]
  41cae8:	aam    0x54
  41caea:	cmp    edi,0x0
  41caed:	mov    esp,0x5aa489ff
  41caf2:	int3   
  41caf3:	add    DWORD PTR [ebx+0x7ba200e0],0xffffff85
  41cafa:	int3   
  41cafb:	cmp    edi,0xffffffb2
  41cafe:	int3   
  41caff:	loopne 0x41cb67
  41cb01:	or     BYTE PTR [eax],al
  41cb03:	inc    DWORD PTR [ebx-0x304300ff]
  41cb09:	push   eax
  41cb0a:	int3   
  41cb0b:	inc    DWORD PTR [eax]
  41cb0d:	fadd   QWORD PTR [eax]
  41cb0f:	mov    dl,0x59
  41cb11:	pop    ebp
  41cb12:	inc    DWORD PTR [eax]
  41cb14:	add    al,bl
  41cb16:	int3   
  41cb17:	xchg   ecx,eax
  41cb18:	ja     0x41cafa
  41cb1a:	(bad)  
  41cb1b:	(bad)  
  41cb1c:	jmp    FWORD PTR [edx-0x401eaf00]
  41cb22:	inc    DWORD PTR [ebx+0x2a00f4ff]
  41cb28:	adc    DWORD PTR [ebx-0x1],ecx
  41cb2b:	add    BYTE PTR [eax],al
  41cb2d:	(bad)  
  41cb2e:	inc    DWORD PTR [edx-0x3300328f]
  41cb34:	call   DWORD PTR [ebx]
  41cb36:	jmp    FWORD PTR [ebp-0x23]
  41cb39:	pop    DWORD PTR [ebx-0xd70001]
  41cb3f:	jae    0x41cad0
  41cb41:	fxch   st(4)
  41cb43:	(bad)  
  41cb44:	jmp    DWORD PTR [esp+ecx*8]
  41cb47:	mov    gs,WORD PTR [eax+0x77]
  41cb4a:	add    bh,bh
  41cb4c:	add    BYTE PTR [esi],dl
  41cb4e:	add    BYTE PTR [eax],al
  41cb50:	aam    0xb8
  41cb52:	(bad)  
  41cb53:	inc    DWORD PTR [eax]
  41cb55:	popa   
  41cb56:	jmp    DWORD PTR [ebp-0x3300a29a]
  41cb5c:	add    BYTE PTR [edi-0x1],ah
  41cb5f:	in     eax,0x6b
  41cb61:	jo     0x41cb62
  41cb63:	cmp    edi,0xffffffb9
  41cb66:	call   DWORD PTR [ebx]
  41cb68:	ret    
  41cb69:	xlat   BYTE PTR ds:[ebx]
  41cb6a:	add    DWORD PTR [eax],0x0
  41cb6d:	jno    0x41caf2
  41cb6f:	ror    DWORD PTR [ecx],1
  41cb71:	mov    es,WORD PTR [eax]
  41cb73:	inc    DWORD PTR [eax]
  41cb75:	add    DWORD PTR [eax],0x2b
  41cb78:	scas   eax,DWORD PTR es:[edi]
  41cb79:	xor    edi,edi
  41cb7b:	dec    DWORD PTR [ecx+0xc83ffdb]
  41cb81:	(bad)  
  41cb83:	inc    DWORD PTR [eax]
  41cb85:	cmp    edi,edi
  41cb87:	and    eax,0xffff9236
  41cb8c:	or     esp,0xffffffff
  41cb8f:	retf   
  41cb90:	sti    
  41cb91:	or     eax,0x710083ff
  41cb96:	add    BYTE PTR ds:0xff83ef07,ah
  41cb9c:	inc    edx
  41cb9e:	mov    DWORD PTR [ebx+0xff1283],esp
  41cba4:	dec    esi
  41cba6:	mov    DWORD PTR [ebp-0x3319a8],ecx
  41cbac:	add    BYTE PTR [ecx+0x15ab29ff],bl
  41cbb2:	inc    DWORD PTR [ebx+0x57ffb800]
  41cbb8:	cld    
  41cbb9:	popa   
  41cbba:	mov    DWORD PTR [ebx-0x46ffd201],eax
  41cbc0:	push   0xffccffe8
  41cbc5:	ud0    ecx,DWORD PTR [esi-0x36]
  41cbc9:	and    bh,bh
  41cbcb:	int3   
  41cbcc:	adc    DWORD PTR [eax-0x1],0xffffff96
  41cbd0:	out    0x52,eax
  41cbd2:	cmp    edi,0x0
  41cbd5:	jmp    0x41cbd6
  41cbd7:	mov    dl,BYTE PTR [esi+0x54]
  41cbda:	(bad)  
  41cbdb:	(bad)  
  41cbdc:	push   DWORD PTR [ecx-0x1]
  41cbdf:	scas   al,BYTE PTR es:[edi]
  41cbe0:	(bad)  
  41cbe1:	lock add bh,bh
  41cbe4:	call   FWORD PTR [ebp-0x310b7700]
  41cbea:	(bad)  
  41cbeb:	inc    DWORD PTR [eax]
  41cbed:	lods   al,BYTE PTR ds:[esi]
  41cbee:	call   DWORD PTR [esi-0x55]
  41cbf1:	cmp    bh,bh
  41cbf3:	(bad)  
  41cbf4:	jmp    DWORD PTR [esi-0x1]
  41cbf7:	popf   
  41cbf8:	or     al,0x89
  41cbfa:	inc    DWORD PTR [ebx-0x4009801]
  41cc00:	push   0xffffffc8
  41cc02:	mov    edi,edi
  41cc04:	add    BYTE PTR [edi-0x1],ch
  41cc07:	call   0x100:0xcc005a03
  41cc0e:	int3   
  41cc0f:	sub    ebx,ebp
  41cc11:	xchg   edx,eax
  41cc12:	add    BYTE PTR [ebx-0x567cf47d],al
  41cc18:	scas   eax,DWORD PTR es:[edi]
  41cc19:	push   ebx
  41cc1a:	int3   
  41cc1b:	dec    esp
  41cc1d:	mov    WORD PTR [eax],es
  41cc1f:	nop
  41cc20:	inc    ebp
  41cc21:	jb     0x41cc22
  41cc23:	add    bh,bh
  41cc25:	ins    DWORD PTR es:[edi],dx
  41cc26:	jmp    DWORD PTR [ebx-0x5c]
  41cc29:	arpl   di,di
  41cc2b:	dec    DWORD PTR [ecx+0x2979ffa4]
  41cc31:	dec    ebp
  41cc32:	dec    esp
  41cc34:	call   FWORD PTR [esi]
  41cc36:	add    DWORD PTR [esi-0x30],0x52
  41cc3a:	or     DWORD PTR [ecx-0x6d7c6b77],0x4f
  41cc41:	jmp    0x6cbcb46
  41cc46:	call   ecx
  41cc48:	jp     0x41ccba
  41cc4a:	(bad)  
  41cc4b:	dec    esp
  41cc4d:	mov    DWORD PTR cs:[eax],ebx
  41cc50:	retf   0x5d
  41cc53:	(bad)  
  41cc54:	jmp    DWORD PTR [edi+edi*8-0x52]
  41cc58:	xchg   esi,eax
  41cc59:	or     bh,bh
  41cc5b:	inc    DWORD PTR [eax]
  41cc5d:	arpl   WORD PTR [ebx-0x7cb1fbb7],ax
  41cc63:	inc    DWORD PTR [eax]
  41cc65:	mov    es,WORD PTR [eax]
  41cc67:	dec    esp
  41cc68:	lock inc edi
  41cc6a:	inc    DWORD PTR [eax]
  41cc6c:	add    dh,al
  41cc6e:	dec    esp
  41cc70:	jmp    0x41cc18
  41cc72:	inc    DWORD PTR [eax]
  41cc74:	or     ebx,0x0
  41cc77:	xor    eax,0xff4a41
  41cc7c:	(bad)  
  41cc7d:	call   0x44a03d81
  41cc82:	dec    esp
  41cc84:	add    BYTE PTR [ecx-0x1],cl
  41cc87:	loope  0x41cc82
  41cc89:	(bad)  
  41cc8a:	(bad)  
  41cc8b:	inc    DWORD PTR [eax]
  41cc8d:	in     eax,0x0
  41cc8f:	out    0x6,eax
  41cc91:	mov    al,ds:0xe3ffff00
  41cc96:	push   DWORD PTR [ebx+esi*4-0x42]
  41cc9a:	add    bh,bh
  41cc9c:	add    BYTE PTR [edx-0x5eb2cd7d],bl
  41cca2:	mov    DWORD PTR [ebx+0x54ffa900],eax
  41cca8:	dec    esp
  41cca9:	and    al,0xff
  41ccab:	mov    edi,edi
  41ccad:	adc    bh,bh
  41ccaf:	push   0xf6b4
  41ccb4:	add    ch,dl
  41ccb6:	int3   
  41ccb7:	or     dl,ch
  41ccb9:	push   eax
  41ccba:	add    DWORD PTR [eax],0xffffffcc
  41ccbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccbe:	add    BYTE PTR [edi+0x48],dh
  41ccc1:	ret    0xcc83
  41ccc4:	jmp    DWORD PTR [edi+0x1539ac00]
  41ccca:	add    bh,bh
  41cccc:	call   DWORD PTR [edx-0x1]
  41cccf:	adc    edx,esp
  41ccd1:	bswap  esp
  41ccd3:	(bad)  
  41ccd4:	dec    DWORD PTR [edx]
  41ccd6:	call   FWORD PTR [edi-0x76000136]
  41ccdc:	mov    DWORD PTR [edx],ebp
  41ccde:	inc    DWORD PTR [eax-0x7c00dc12]
  41cce4:	jmp    FWORD PTR [ecx]
  41cce6:	add    BYTE PTR [eax+0x3f],bl
  41cce9:	imul   eax,DWORD PTR [eax],0x0
  41ccec:	int3   
  41cced:	ins    BYTE PTR es:[edi],dx
  41ccee:	add    BYTE PTR [edi+0x28],al
  41ccf1:	adc    al,0xcc
  41ccf3:	mov    edi,edi
  41ccf5:	mov    eax,ds:0x88f3e100
  41ccfa:	dec    DWORD PTR [ecx-0x2c00ed00]
  41cd00:	lahf   
  41cd01:	mov    ?,edi
  41cd03:	int3   
  41cd04:	add    BYTE PTR [esi-0x1d3da501],ah
  41cd0a:	inc    DWORD PTR [eax]
  41cd0c:	(bad)  
  41cd0d:	jns    0x41cd0f
  41cd0f:	scas   al,BYTE PTR es:[edi]
  41cd10:	cdq    
  41cd11:	sbb    al,BYTE PTR [eax]
  41cd13:	add    BYTE PTR [eax],al
  41cd15:	push   eax
  41cd16:	mov    DWORD PTR [edi-0x12],ecx
  41cd19:	(bad)  
  41cd1c:	add    BYTE PTR [ecx+0x0],dh
  41cd1f:	sbb    edx,DWORD PTR ds:0x898383d5
  41cd25:	xchg   DWORD PTR [ecx-0x353a7a],ecx
  41cd2b:	add    BYTE PTR [ecx+0x4fff73],cl
  41cd31:	adc    DWORD PTR [ecx-0x7d],0xffffffba
  41cd35:	push   ebx
  41cd36:	add    bh,bh
  41cd38:	dec    DWORD PTR [ecx-0x5fbfdcad]
  41cd3e:	ret    0xffff
  41cd41:	add    DWORD PTR [edi],0xffffffff
  41cd44:	mov    bl,0x85
  41cd46:	int3   
  41cd47:	add    ah,cl
  41cd49:	cmp    DWORD PTR [ecx+0x6914319c],0xffffffff
  41cd50:	dec    DWORD PTR [ecx+0x2f2a0033]
  41cd56:	add    bh,bh
  41cd58:	inc    DWORD PTR [eax]
  41cd5a:	retf   0xe85f
  41cd5d:	mov    ecx,0x8983f5
  41cd62:	dec    esp
  41cd63:	call   FWORD PTR [ebp-0x1e]
  41cd66:	int3   
  41cd67:	inc    DWORD PTR [ebx+0xd76e600]
  41cd6d:	pop    ebx
  41cd6e:	jmp    0xccc5cd72
  41cd73:	or     DWORD PTR [edi+0x2e],0xffffff83
  41cd77:	add    bh,bh
  41cd79:	dec    DWORD PTR [ebx-0x51488087]
  41cd7f:	or     esp,0xffffff83
  41cd82:	or     al,0x0
  41cd84:	add    eax,0xff00ffd1
  41cd89:	inc    DWORD PTR [edi]
  41cd8b:	ss inc ebp
  41cd8d:	sbb    DWORD PTR [eax+0x40ffffcc],0xff33faff
  41cd97:	(bad)  
  41cd98:	(bad)  
  41cd99:	jmp    eax
  41cd9b:	call   0xffcc867e
  41cda0:	add    bh,bh
  41cda2:	mov    ebp,0x54ea00
  41cda7:	add    bh,bh
  41cda9:	int3   
  41cdaa:	add    al,0xf2
  41cdac:	push   ds
  41cdad:	inc    edi
  41cdae:	ret    0xffff
  41cdb1:	inc    DWORD PTR [edx-0x1]
  41cdb4:	mov    esi,0xff0000f2
  41cdb9:	push   DWORD PTR [eax-0x1b]
  41cdbc:	jmp    0x41cdae
  41cdbe:	push   ss
  41cdbf:	add    bh,bh
  41cdc1:	sbb    esi,0xffffffff
  41cdc4:	outs   dx,BYTE PTR ds:[esi]
  41cdc5:	dec    ebp
  41cdc6:	inc    DWORD PTR [ebx-0x44450100]
  41cdcc:	fs mov ?,esp
  41cdcf:	dec    DWORD PTR [ecx+0x76ff5600]
  41cdd5:	cmp    bh,bh
  41cdd7:	add    BYTE PTR [eax],al
  41cdd9:	add    BYTE PTR [edi+0x3f],al
  41cddc:	add    bh,BYTE PTR [edi]
  41cdde:	inc    BYTE PTR [eax]
  41cde0:	add    bh,bh
  41cde2:	pop    esp
  41cde3:	add    al,ah
  41cde5:	cwde   
  41cde6:	cmp    edi,0xffffffff
  41cde9:	add    BYTE PTR [edx+ecx*8+0x53],ah
  41cded:	or     eax,0x83000004
  41cdf2:	out    dx,al
  41cdf3:	call   DWORD PTR [esi]
  41cdf5:	sbb    eax,DWORD PTR [eax]
  41cdf7:	(bad)  
  41cdf8:	dec    esp
  41cdfa:	call   0xff:0x5e28c270
  41ce01:	int3   
  41ce02:	out    0x89,al
  41ce04:	dec    ebx
  41ce05:	adc    al,0x0
  41ce07:	add    bh,bh
  41ce09:	int3   
  41ce0a:	in     eax,dx
  41ce0b:	aad    0xe9
  41ce0d:	out    dx,eax
  41ce0e:	js     0x41ce10
  41ce10:	add    BYTE PTR [ebx-0x49c0ff2a],al
  41ce16:	mov    DWORD PTR [ebx+0x243f0083],eax
  41ce1c:	cmp    al,0x18
  41ce1f:	add    BYTE PTR [eax],al
  41ce21:	mov    DWORD PTR [esi+0x0],ecx
  41ce24:	inc    ebp
  41ce25:	mov    ebx,0xff8900
  41ce2a:	or     eax,0x270ca499
  41ce2f:	inc    DWORD PTR [eax]
  41ce31:	dec    DWORD PTR [ebp+0x0]
  41ce34:	and    eax,0xffff837f
  41ce39:	(bad)  
  41ce3a:	in     al,dx
  41ce3b:	les    esp,FWORD PTR [ebp+edi*2-0x4e]
  41ce3f:	inc    DWORD PTR [ebx-0x500e101]
  41ce45:	push   esi
  41ce46:	(bad)  
  41ce47:	(bad)  
  41ce48:	inc    DWORD PTR [eax]
  41ce4a:	stos   DWORD PTR es:[edi],eax
  41ce4b:	cmp    al,0x71
  41ce4d:	mov    ebx,0xff83ccca
  41ce52:	call   0xffad3457
  41ce57:	inc    DWORD PTR [ebx+0x3d7e7eff]
  41ce5d:	and    dl,BYTE PTR [ecx]
  41ce5f:	int3   
  41ce60:	mov    DWORD PTR [ebx-0x5a48ff56],eax
  41ce66:	add    BYTE PTR [ebx-0x79437601],al
  41ce6c:	jne    0x41ce07
  41ce6e:	xor    ah,cl
  41ce70:	inc    DWORD PTR [eax]
  41ce72:	mov    ds:0xccb8d1ff,eax
  41ce77:	dec    esp
  41ce79:	add    BYTE PTR [ebx],bh
  41ce7b:	push   ebx
  41ce7c:	mov    eax,ds:0xff001e29
  41ce81:	add    BYTE PTR [esi],bl
  41ce83:	inc    DWORD PTR [eax]
  41ce85:	cmp    edi,edi
  41ce87:	dec    DWORD PTR [ecx+0x1ce1b000]
  41ce8d:	xchg   edi,eax
  41ce8e:	and    al,0xff
  41ce90:	add    bh,bh
  41ce92:	pop    edx
  41ce93:	jmp    FWORD PTR [ebx]
  41ce95:	jne    0x41ce1a
  41ce97:	inc    DWORD PTR [eax]
  41ce99:	dec    DWORD PTR [edx+0xf93c89a]
  41ce9f:	mov    edi,edi
  41cea1:	dec    DWORD PTR [ebx-0xb7ed00]
  41cea7:	cmp    edi,0xffffffff
  41ceaa:	enter  0x9f5c,0xc7
  41ceae:	pop    ss
  41ceaf:	int3   
  41ceb0:	add    bh,bh
  41ceb2:	and    edi,edi
  41ceb4:	and    BYTE PTR [esi+0xffffff],0xf8
  41cebb:	xchg   ebp,eax
  41cebc:	retf   
  41cebd:	sahf   
  41cebe:	(bad)  
  41cebf:	inc    DWORD PTR [ebx+0x5e002200]
  41cec5:	daa    
  41cec6:	add    BYTE PTR [eax],al
  41cec8:	dec    esp
  41ceca:	test   DWORD PTR [edi-0x29],edx
  41cecd:	sti    
  41cece:	iret   
  41cecf:	inc    DWORD PTR [ebx-0x46008c00]
  41ced5:	cmp    bh,0x0
  41ced8:	inc    DWORD PTR [eax]
  41ceda:	jno    0x41cf0e
  41cedc:	stos   BYTE PTR es:[edi],al
  41cedd:	mov    edi,0xff00fc
  41cee2:	jmp    0x41cee3
  41cee4:	push   0x40
  41cee6:	cmp    edi,0xffffffff
  41cee9:	jmp    FWORD PTR [edx+0x1c]
  41ceec:	outs   dx,DWORD PTR ds:[esi]
  41ceed:	fld    QWORD PTR ds:[eax]
  41cef0:	dec    esp
  41cef2:	xchg   ecx,eax
  41cef3:	push   ebx
  41cef5:	push   0x89008300
  41cefa:	arpl   WORD PTR [eax],si
  41cefc:	mov    edi,0x4563
  41cf01:	add    cl,cl
  41cf03:	add    BYTE PTR [ebx-0xff00e2],ch
  41cf09:	cmp    esp,0x41
  41cf0c:	push   ss
  41cf0d:	jo     0x41cf40
  41cf0f:	int3   
  41cf10:	(bad)  
  41cf11:	jmp    FWORD PTR [edx-0x1]
  41cf14:	stos   BYTE PTR es:[edi],al
  41cf15:	or     al,0xff
  41cf17:	add    DWORD PTR [eax],0xffffffff
  41cf1a:	fidiv  WORD PTR [esi-0x4f2cd8]
  41cf20:	cmp    edi,0x5d
  41cf23:	int3   
  41cf24:	sub    cl,dh
  41cf26:	cmp    edi,0xffffffff
  41cf29:	int3   
  41cf2a:	ins    DWORD PTR es:[edi],dx
  41cf2b:	adc    eax,0xff2a2d3e
  41cf30:	(bad)  
  41cf31:	(bad)  
  41cf32:	jle    0x41cf33
  41cf34:	jg     0x41cf76
  41cf36:	add    bh,bh
  41cf38:	add    ah,cl
  41cf3a:	rcl    BYTE PTR [esp+edi*8],1
  41cf3d:	int3   
  41cf3e:	scas   eax,DWORD PTR es:[edi]
  41cf3f:	(bad)  
  41cf40:	(bad)  
  41cf41:	(bad)  
  41cf42:	cmp    bh,bh
  41cf44:	mov    eax,0xffffff8c
  41cf49:	push   DWORD PTR [eax-0x7a]
  41cf4c:	jbe    0x41cf9f
  41cf4e:	nop
  41cf4f:	add    bh,bh
  41cf51:	(bad)  
  41cf52:	jnp    0x41cf54
  41cf54:	test   al,0x6c
  41cf56:	inc    DWORD PTR [ebx-0x67fa7d00]
  41cf5c:	loop   0x41cf96
  41cf5e:	and    edi,edi
  41cf60:	(bad)  
  41cf61:	call   eax
  41cf63:	add    ah,ch
  41cf65:	in     al,0xff
  41cf67:	inc    DWORD PTR [ebx+0x63b23383]
  41cf6d:	dec    ebx
  41cf6e:	(bad)  
  41cf6f:	dec    esp
  41cf71:	jmp    DWORD PTR [edi+edi*8+0xf4fb]
  41cf78:	cmp    edi,0xffffffdb
  41cf7b:	pop    ebx
  41cf7c:	pop    ebp
  41cf7d:	dec    esp
  41cf7e:	sub    al,BYTE PTR [eax]
  41cf80:	int3   
  41cf81:	int3   
  41cf82:	ss jmp esp
  41cf85:	add    al,0x0
  41cf87:	int3   
  41cf88:	add    BYTE PTR [ecx-0x250c286d],cl
  41cf8e:	(bad)  
  41cf8f:	int3   
  41cf90:	cmp    edi,0x44
  41cf93:	dec    DWORD PTR [ecx+0x4c]
  41cf96:	add    BYTE PTR [eax],al
  41cf98:	add    DWORD PTR [eax],0xffffff83
  41cf9b:	xlat   BYTE PTR ds:[ebx]
  41cf9c:	(bad)  
  41cf9d:	jmp    0xffd2:0xccffd9
  41cfa4:	or     al,0x9c
  41cfa6:	(bad)  
  41cfa7:	inc    DWORD PTR [ebx+0x7cf979ff]
  41cfad:	jg     0x41cf5c
  41cfaf:	inc    DWORD PTR [eax]
  41cfb1:	dec    DWORD PTR [esi+0xe6a883]
  41cfb7:	add    bh,bh
  41cfb9:	xor    DWORD PTR [ecx],0x7b
  41cfbc:	and    ebx,DWORD PTR [ebp+0xff8366]
  41cfc2:	repz add BYTE PTR [ebp-0x72],al
  41cfc6:	add    ah,cl
  41cfc8:	inc    DWORD PTR [eax]
  41cfca:	sbb    esp,eax
  41cfcc:	xchg   DWORD PTR [eax+0xffff9c],ebx
  41cfd2:	xor    bh,bh
  41cfd4:	add    bh,BYTE PTR [ecx]
  41cfd6:	(bad)  
  41cfd7:	dec    esp
  41cfd9:	add    DWORD PTR [ebx-0x16e6eae6],0xffffffff
  41cfe0:	(bad)  
  41cfe1:	call   FWORD PTR [ebp-0xcd2100]
  41cfe7:	add    BYTE PTR [eax],al
  41cfe9:	xor    DWORD PTR [edx-0x1e],0xffffff84
  41cfed:	ret    
  41cfee:	dec    DWORD PTR [ecx+0xf5ffcc]
  41cff4:	sahf   
  41cff5:	popa   
  41cff6:	add    BYTE PTR [ebx-0x393f0001],al
  41cffc:	leave  
  41cffd:	add    al,0xab
  41cfff:	cmp    edi,0xffffffff
  41d002:	stos   BYTE PTR es:[edi],al
  41d003:	dec    ebp
  41d005:	push   edx
  41d006:	add    bh,bh
  41d008:	(bad)  
  41d009:	jmp    DWORD PTR [edx]
  41d00b:	mov    ch,ch
  41d00d:	std    
  41d00e:	jae    0xffacd014
  41d014:	xor    DWORD PTR [esi],ebp
  41d016:	(bad)  
  41d017:	(bad)  
  41d018:	inc    DWORD PTR [ebx+0x3be428a2]
  41d01e:	push   ss
  41d01f:	mov    edi,edi
  41d021:	jmp    FWORD PTR [eax]
  41d023:	add    BYTE PTR [esi],dl
  41d025:	popf   
  41d026:	(bad)  
  41d027:	(bad)  
  41d028:	inc    DWORD PTR [eax]
  41d02a:	jae    0x41d076
  41d02c:	je     0x41d0a0
  41d02e:	push   es
  41d02f:	int3   
  41d030:	add    BYTE PTR [ebx-0x6b8c7cd7],al
  41d036:	cmp    edi,0xffffffcc
  41d039:	adc    DWORD PTR [ecx+0x721e10c6],0xffffff83
  41d040:	dec    DWORD PTR [ecx+0x51683f8]
  41d046:	(bad)  
  41d047:	inc    DWORD PTR [ebx-0x7b7d627d]
  41d04d:	mov    WORD PTR [edx+0x0],es
  41d050:	dec    DWORD PTR [ecx-0x67a2ff05]
  41d056:	inc    DWORD PTR [ebx-0x7cdb0000]
  41d05c:	dec    esp
  41d05d:	xchg   esi,eax
  41d05e:	xor    BYTE PTR [ecx+0xaeffff],cl
  41d064:	mov    WORD PTR [ebx-0x7600ff01],gs
  41d06a:	mov    esi,esp
  41d06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d06d:	js     0x41d022
  41d06f:	add    BYTE PTR [eax],al
  41d071:	jmp    FWORD PTR [ebx]
  41d073:	add    ah,cl
  41d075:	or     eax,0xffff00ff
  41d07a:	add    ch,BYTE PTR [edi]
  41d07c:	cli    
  41d07d:	iret   
  41d07e:	mov    bh,0xff
  41d080:	(bad)  
  41d081:	inc    edx
  41d083:	push   esp
  41d085:	ror    esp,cl
  41d087:	inc    DWORD PTR [eax]
  41d089:	add    BYTE PTR [eax+0x57],bh
  41d08c:	lea    ebp,[edi+ebx*2-0x1]
  41d090:	(bad)  
  41d091:	(bad)  
  41d092:	mov    eax,0x83a5c700
  41d097:	int3   
  41d098:	inc    DWORD PTR [eax]
  41d09a:	(bad)  
  41d09b:	popa   
  41d09c:	addr16 adc eax,0xffcc29
  41d0a2:	or     bh,bh
  41d0a4:	xor    al,0x3e
  41d0a6:	add    DWORD PTR [eax],0xffffffff
  41d0a9:	inc    DWORD PTR [eax+0x65]
  41d0ac:	vpand  xmm7,xmm3,xmm7
  41d0b0:	add    BYTE PTR [eax],al
  41d0b2:	and    edi,edi
  41d0b4:	inc    ebx
  41d0b5:	mov    dl,0x83
  41d0b7:	add    BYTE PTR [eax],al
  41d0b9:	int3   
  41d0ba:	inc    ebx
  41d0bb:	sub    bl,BYTE PTR [edx]
  41d0bd:	(bad)  
  41d0be:	cmp    al,0xcc
  41d0c0:	inc    DWORD PTR [eax]
  41d0c2:	mov    edi,0xccda7500
  41d0c7:	add    BYTE PTR [eax],al
  41d0c9:	call   DWORD PTR [ebp+0x5d]
  41d0cc:	mov    ds:0xffff1960,al
  41d0d1:	dec    DWORD PTR [edi+0xa344ff]
  41d0d7:	(bad)  
  41d0d8:	(bad)  
  41d0d9:	jmp    FWORD PTR [edx-0xf]
  41d0dc:	add    ch,BYTE PTR ds:[ebx]
  41d0df:	add    BYTE PTR [eax],al
  41d0e1:	inc    DWORD PTR [edx-0x1]
  41d0e4:	mov    ebx,0xffcc00a7
  41d0e9:	add    BYTE PTR [ebx-0x3d],bh
  41d0ec:	jns    0x41d08b
  41d0ee:	dec    ebx
  41d0ef:	add    DWORD PTR [eax],0xffffff89
  41d0f2:	pop    ebp
  41d0f3:	call   DWORD PTR [edi-0x33ffc9]
  41d0f9:	(bad)  
  41d0fa:	call   0x5fbeb996
  41d0ff:	inc    DWORD PTR [eax]
  41d101:	dec    DWORD PTR [edx-0x1]
  41d104:	fbld   TBYTE PTR [ebx-0x7d]
  41d107:	inc    DWORD PTR [ebx+0x6bb508ff]
  41d10d:	je     0x41d153
  41d10f:	add    DWORD PTR [ebx-0x6bff2401],0xffffffd4
  41d116:	add    BYTE PTR [eax],al
  41d118:	(bad)  
  41d119:	push   DWORD PTR [ecx+0x2c]
  41d11c:	out    dx,eax
  41d11d:	dec    ecx
  41d11e:	ret    
  41d11f:	(bad)  
  41d120:	inc    DWORD PTR [eax]
  41d122:	mov    edx,0xff6298ff
  41d127:	inc    DWORD PTR [eax]
  41d129:	push   DWORD PTR [edi+0xc91eeab]
  41d12f:	dec    esp
  41d131:	sbb    edx,0xffffff83
  41d134:	imul   ebx,DWORD PTR [ecx+0xff0000],0x2f
  41d13b:	mov    ecx,0xff2952e2
  41d140:	(bad)  
  41d141:	jmp    DWORD PTR [eax+0x0]
  41d144:	loope  0x41d159
  41d146:	inc    DWORD PTR [eax]
  41d148:	mov    edi,edi
  41d14a:	mov    ebx,DWORD PTR [ebp-0xe5e3a1]
  41d150:	add    bh,bh
  41d152:	test   BYTE PTR [eax],0xbf
  41d155:	add    DWORD PTR [eax],0x7ff0000
  41d15b:	mov    ebp,0x8369178c
  41d160:	inc    DWORD PTR [eax]
  41d162:	sar    bh,0xe6
  41d165:	pop    ebp
  41d166:	mov    DWORD PTR [eax],eax
  41d168:	add    DWORD PTR [eax],0xffffffbf
  41d16b:	retf   0x2755
  41d16e:	sbb    edi,edi
  41d170:	int3   
  41d171:	(bad)  
  41d172:	mov    ecx,0xff3364ff
  41d177:	add    bh,bh
  41d179:	call   FWORD PTR [ecx+0x50]
  41d17c:	sbb    BYTE PTR [eax+0x0],ah
  41d17f:	add    BYTE PTR [eax],al
  41d181:	jmp    DWORD PTR [ebp-0x52b801]
  41d187:	add    BYTE PTR [eax],al
  41d189:	dec    ecx
  41d18b:	jecxz  0x41d1dc
  41d18d:	mov    eax,ds:0x8983b6
  41d192:	scas   eax,DWORD PTR es:[edi]
  41d193:	call   FWORD PTR [ecx]
  41d195:	push   es
  41d196:	add    bh,bh
  41d198:	mov    DWORD PTR [eax],eax
  41d19a:	pop    ss
  41d19b:	pop    edi
  41d19c:	icebp  
  41d19d:	push   eax
  41d19e:	add    eax,0x3cffffcc
  41d1a3:	add    BYTE PTR [edi],bh
  41d1a5:	mov    bh,0x0
  41d1a7:	cmp    edi,0xffffffff
  41d1aa:	xchg   esp,eax
  41d1ab:	dec    ecx
  41d1ac:	xor    ch,BYTE PTR ds:0x83cc79
  41d1b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1b3:	dec    DWORD PTR [ecx-0x7c000003]
  41d1b9:	jmp    esi
  41d1bb:	adc    eax,ebx
  41d1bd:	es inc DWORD PTR fs:[ebx-0x72000901]
  41d1c5:	mov    cl,0xff
  41d1c7:	add    BYTE PTR [eax],al
  41d1c9:	call   FWORD PTR [esi+0x49]
  41d1cc:	pop    edx
  41d1cd:	dec    edi
  41d1ce:	push   ebp
  41d1cf:	or     esp,0xffffff83
  41d1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1d3:	add    cl,bh
  41d1d5:	and    BYTE PTR [ebx-0x73ff0100],al
  41d1db:	jae    0x41d1ad
  41d1dd:	pop    edi
  41d1de:	push   ecx
  41d1df:	add    bh,bh
  41d1e1:	jmp    FWORD PTR [edi]
  41d1e3:	add    BYTE PTR [ebp+eax*8-0x77],al
  41d1e7:	inc    DWORD PTR [ebx-0x72b1e17d]
  41d1ed:	or     BYTE PTR [ecx-0x1],0xff
  41d1f1:	inc    DWORD PTR [ecx]
  41d1f3:	mov    DWORD PTR [edx+0x2b],esp
  41d1f6:	inc    DWORD PTR [eax]
  41d1f8:	mov    DWORD PTR [ebx+0x6b692a1],eax
  41d1fe:	xor    edi,edi
  41d200:	add    BYTE PTR [eax],al
  41d202:	add    eax,0xffcdd400
  41d207:	add    DWORD PTR [eax],0xffffffcc
  41d20a:	sahf   
  41d20b:	jmp    0x41d1b2
  41d20d:	(bad)  
  41d20e:	dec    ebx
  41d20f:	inc    DWORD PTR [eax]
  41d211:	add    BYTE PTR [ebx],ch
  41d213:	add    bh,bl
  41d215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d216:	mov    DWORD PTR [eax],eax
  41d218:	(bad)  
  41d219:	jmp    DWORD PTR [esi-0x51]
  41d21c:	fwait
  41d21d:	je     0x41d1ea
  41d21f:	(bad)  
  41d220:	inc    DWORD PTR [ebx+0xb68894a]
  41d226:	(bad)  
  41d227:	inc    DWORD PTR [eax]
  41d229:	add    BYTE PTR [ebp-0x5a],ah
  41d22c:	mov    ch,0x23
  41d22e:	lods   eax,DWORD PTR ds:[esi]
  41d22f:	int3   
  41d230:	add    bh,bh
  41d232:	(bad)  
  41d233:	push   DWORD PTR [ebp-0x7633ff40]
  41d239:	add    BYTE PTR [edx-0x51eb4abc],ch
  41d23f:	add    BYTE PTR [ebx-0xf002300],al
  41d245:	push   esp
  41d246:	(bad)  
  41d247:	(bad)  
  41d248:	inc    DWORD PTR [ebx+0x28e5f5ec]
  41d24e:	loop   0x41d250
  41d250:	add    BYTE PTR [eax],al
  41d252:	mov    dl,0xff
  41d254:	test   BYTE PTR [ebp-0x1],al
  41d257:	mov    DWORD PTR [ecx-0x58945301],ecx
  41d25d:	pop    ecx
  41d25e:	(bad)  
  41d25f:	int3   
  41d260:	add    DWORD PTR [ebx-0x2c4affde],0xffffffff
  41d267:	cmp    edi,0xffffffcc
  41d26a:	gs pop ecx
  41d26c:	loope  0x41d241
  41d26e:	cmp    eax,DWORD PTR [eax]
  41d270:	(bad)  
  41d271:	call   FWORD PTR [ebx+0x34f000]
  41d277:	(bad)  
  41d278:	(bad)  
  41d279:	(bad)  
  41d27a:	fcom   st(6)
  41d27c:	inc    ebx
  41d27d:	xchg   esi,eax
  41d27e:	cld    
  41d27f:	(bad)  
  41d280:	(bad)  
  41d281:	call   ecx
  41d283:	add    BYTE PTR [edx+ecx*4+0x8300],al
  41d28a:	scas   al,BYTE PTR es:[edi]
  41d28b:	push   ds
  41d28c:	pop    ebp
  41d28d:	sub    edx,0xec00ff00
  41d293:	int3   
  41d294:	imul   esi,DWORD PTR [edx+0xff00cc],0x58d6317
  41d29e:	sub    al,BYTE PTR [ebx-0x76070001]
  41d2a4:	je     0x41d2b2
  41d2a6:	add    bh,bh
  41d2a8:	add    BYTE PTR [ebx+0x77ba01fc],al
  41d2ae:	inc    esp
  41d2af:	dec    DWORD PTR [ecx-0x48ffb577]
  41d2b5:	(bad)  
  41d2b6:	(bad)  
  41d2b7:	(bad)  
  41d2b8:	(bad)  
  41d2b9:	push   ecx
  41d2bb:	int    0xa8
  41d2bd:	jg     0x41d293
  41d2bf:	inc    DWORD PTR [ebx-0x6000be01]
  41d2c5:	daa    
  41d2c6:	add    DWORD PTR [eax],0xffffffff
  41d2c9:	add    BYTE PTR [esi],al
  41d2cb:	fiadd  DWORD PTR [edx-0x14]
  41d2ce:	mov    ebp,0x5dff8900
  41d2d3:	cmp    DWORD PTR [edx+0x89006c],0x0
  41d2da:	sub    ecx,ebp
  41d2dc:	and    BYTE PTR [ebx],dh
  41d2de:	out    0xff,al
  41d2e0:	(bad)  
  41d2e1:	call   FWORD PTR [ebp+0x0]
  41d2e4:	sub    BYTE PTR [ecx],bl
  41d2e6:	add    DWORD PTR [eax],0xffffffff
  41d2e9:	push   DWORD PTR [eax-0x6ed55315]
  41d2ef:	inc    DWORD PTR [ebx-0x687cd501]
  41d2f5:	rol    BYTE PTR [eax],1
  41d2f7:	inc    DWORD PTR [ebx+0x750c0cc]
  41d2fd:	cdq    
  41d2fe:	pop    eax
  41d2ff:	add    bh,bh
  41d301:	push   DWORD PTR [ebx-0x462501]
  41d307:	add    bh,bh
  41d309:	(bad)  
  41d30a:	cmp    eax,eax
  41d30c:	daa    
  41d30d:	popa   
  41d30e:	xchg   ebx,eax
  41d30f:	(bad)  
  41d310:	(bad)  
  41d311:	inc    eax
  41d313:	or     edx,0x7e
  41d316:	inc    DWORD PTR [eax]
  41d318:	add    BYTE PTR [ebx+0x62872461],al
  41d31e:	test   al,0xff
  41d320:	add    ah,cl
  41d322:	test   eax,0xc9fc83
  41d327:	add    BYTE PTR [ebx-0x7909aa01],al
  41d32d:	sub    DWORD PTR [esi+0x0],esp
  41d330:	(bad)  
  41d331:	call   DWORD PTR [ebp-0x76d84c01]
  41d337:	inc    DWORD PTR [ebx-0x36305800]
  41d33d:	jno    0x41d386
  41d33f:	(bad)  
  41d340:	(bad)  
  41d341:	call   DWORD PTR [edx-0xca501]
  41d347:	add    DWORD PTR [eax],0xffffffff
  41d34a:	jnp    0x41d391
  41d34c:	loop   0x41d3c8
  41d34e:	js     0x41d34f
  41d350:	dec    esp
  41d352:	cmp    al,BYTE PTR [ebx-0x3849]
  41d358:	inc    DWORD PTR [eax]
  41d35a:	push   cs
  41d35b:	imul   ebp,DWORD PTR [ebx],0x89832628
  41d361:	mov    DWORD PTR [esi+0xaeccff],ebx
  41d367:	dec    DWORD PTR [ecx+0x787bfbff]
  41d36d:	xchg   DWORD PTR [ebp-0x597cff01],ebx
  41d373:	add    BYTE PTR [esi-0x337cff55],ch
  41d379:	call   FWORD PTR [edi-0x3e]
  41d37c:	inc    esp
  41d37d:	or     eax,0x83ff83f6
  41d382:	add    DWORD PTR [eax],eax
  41d384:	dec    eax
  41d385:	mov    ecx,0xff8300
  41d38a:	mov    WORD PTR [esp+edx*2-0x7cff2b06],es
  41d391:	add    ah,al
  41d393:	add    DWORD PTR [ebp+0x1],0x0
  41d397:	add    bh,bh
  41d399:	push   esi
  41d39b:	jmp    0x41d39e
  41d39d:	push   eax
  41d39e:	jecxz  0x41d3a0
  41d3a0:	inc    DWORD PTR [ebx-0x556f7c35]
  41d3a6:	mov    edi,edi
  41d3a8:	add    DWORD PTR [eax],0x72
  41d3ab:	sbb    BYTE PTR [ebx+0xb],ah
  41d3ae:	fmul   st,st(4)
  41d3b0:	add    DWORD PTR [eax],0x54
  41d3b3:	int3   
  41d3b4:	not    DWORD PTR [esi]
  41d3b6:	int3   
  41d3b7:	(bad)  
  41d3b8:	(bad)  
  41d3b9:	(bad)  
  41d3ba:	cmp    al,0x22
  41d3bc:	mov    al,ds:0xffff081b
  41d3c1:	jmp    DWORD PTR [eax+0x0]
  41d3c4:	or     al,BYTE PTR [esi-0x33007c01]
  41d3ca:	adc    dh,dh
  41d3cc:	dec    edi
  41d3cd:	shl    BYTE PTR [ebx],cl
  41d3cf:	add    BYTE PTR [ebx-0x6d006500],al
  41d3d5:	fld    DWORD PTR [ebx-0x5fff0001]
  41d3db:	popf   
  41d3dc:	mov    ?,WORD PTR [edx+edx*8+0x57ffff00]
  41d3e3:	dec    DWORD PTR [ecx+esi*4-0x760001]
  41d3ea:	and    ah,al
  41d3ec:	push   esp
  41d3ed:	cmp    eax,0x89ff83b8
  41d3f2:	jne    0x41d37d
  41d3f4:	div    DWORD PTR [edi+edi*8]
  41d3f7:	(bad)  
  41d3f8:	(bad)  
  41d3f9:	(bad)  
  41d3fa:	js     0x41d423
  41d3fc:	shr    DWORD PTR [ecx-0x7c7c7c87],0x4
  41d403:	adc    DWORD PTR [ebx],0xffffffcc
  41d406:	add    BYTE PTR [eax],al
  41d408:	dec    esp
  41d40a:	(bad)  
  41d40c:	sub    al,ah
  41d40e:	adc    bh,bh
  41d410:	dec    DWORD PTR [ecx-0x631200d2]
  41d416:	(bad)  
  41d417:	(bad)  
  41d418:	inc    DWORD PTR [eax]
  41d41a:	daa    
  41d41b:	jns    0x41d451
  41d41d:	adc    dl,bh
  41d41f:	inc    DWORD PTR [ebx+0x430077ff]
  41d425:	fadd   DWORD PTR [eax]
  41d427:	cmp    edi,0xffffff83
  41d42a:	mov    dl,0xcf
  41d42c:	pushf  
  41d42d:	inc    ecx
  41d42e:	and    eax,0xa4ff00ff
  41d433:	mov    DWORD PTR [esp+ebx*4],ebx
  41d436:	add    DWORD PTR [eax],0xffffffcc
  41d439:	add    BYTE PTR [eax-0x73e8cd70],ah
  41d43f:	cmp    edi,0x0
  41d442:	icebp  
  41d443:	inc    DWORD PTR [ecx-0xff00ee]
  41d449:	add    BYTE PTR [eax],al
  41d44b:	mov    dh,0xf0
  41d44d:	inc    edx
  41d44e:	inc    ecx
  41d44f:	add    bh,bh
  41d451:	call   DWORD PTR ds:0xc7b3cc
  41d457:	dec    esp
  41d459:	mov    DWORD PTR [edi+0x70],ebp
  41d45c:	xor    edi,eax
  41d45e:	scas   al,BYTE PTR es:[edi]
  41d45f:	(bad)  
  41d460:	(bad)  
  41d461:	push   ebx
  41d463:	int3   
  41d464:	lds    ebp,FWORD PTR [ebx+0x0]
  41d467:	int3   
  41d468:	add    BYTE PTR [ebx-0x6a125a5c],al
  41d46e:	add    edi,edi
  41d470:	(bad)  
  41d471:	call   DWORD PTR ds:0x839114ff
  41d477:	(bad)  
  41d478:	(bad)  
  41d479:	call   FWORD PTR [edx-0x3e]
  41d47c:	sahf   
  41d47d:	jae    0x41d414
  41d47f:	(bad)  
  41d480:	inc    DWORD PTR [ebx-0x71f7002b]
  41d486:	dec    DWORD PTR [ecx-0x6f387601]
  41d48c:	push   ds
  41d48d:	in     eax,0xca
  41d48f:	add    BYTE PTR [eax],al
  41d491:	add    BYTE PTR [ebx-0x1],bh
  41d494:	out    0xdb,al
  41d496:	int3   
  41d497:	add    BYTE PTR [ebx-0x24a21a00],al
  41d49d:	inc    ebx
  41d49e:	add    bh,bh
  41d4a0:	inc    DWORD PTR [ebx-0x131e3344]
  41d4a6:	(bad)  
  41d4a7:	inc    DWORD PTR [eax]
  41d4a9:	add    BYTE PTR [esi],cl
  41d4ab:	retf   
  41d4ac:	and    ah,BYTE PTR [eax]
  41d4ae:	mov    ds:0x75000000,eax
  41d4b3:	add    BYTE PTR [ecx-0x339d],ch
  41d4b9:	dec    DWORD PTR [eax+0x3412282e]
  41d4bf:	or     esp,0xffffffff
  41d4c2:	mov    al,0x0
  41d4c4:	hlt    
  41d4c5:	fwait
  41d4c6:	add    bh,bh
  41d4c8:	int3   
  41d4c9:	jmp    FWORD PTR [esi+edx*8]
  41d4cc:	sub    DWORD PTR [ebx],0xff98
  41d4d2:	fdivr  st,st(7)
  41d4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4d5:	ja     0x41d45a
  41d4d7:	(bad)  
  41d4d8:	dec    esp
  41d4da:	pop    es
  41d4db:	lock scas al,BYTE PTR es:[edi]
  41d4dd:	sub    ah,BYTE PTR [ebp+0x3b00ff83]
  41d4e3:	add    BYTE PTR [ebp-0x57],cl
  41d4e6:	add    bh,bh
  41d4e8:	inc    DWORD PTR [eax]
  41d4ea:	je     0x41d4a4
  41d4ec:	push   ebp
  41d4ed:	jb     0x41d47a
  41d4ef:	add    bh,bh
  41d4f1:	add    bl,ah
  41d4f3:	add    BYTE PTR [ebx],ch
  41d4f5:	mov    BYTE PTR [eax],al
  41d4f7:	(bad)  
  41d4f8:	(bad)  
  41d4f9:	jmp    DWORD PTR [ecx-0x352adeaf]
  41d4ff:	cmp    edi,0x0
  41d502:	(bad)  
  41d503:	(bad)  
  41d504:	(bad)  
  41d505:	pop    ecx
  41d506:	(bad)  
  41d507:	(bad)  
  41d508:	inc    DWORD PTR [eax]
  41d50a:	data16 out dx,al
  41d50c:	xor    BYTE PTR [ebx],ah
  41d50e:	lahf   
  41d50f:	add    bh,bh
  41d511:	call   DWORD PTR [eax+0x0]
  41d514:	cdq    
  41d515:	fdivp  st(7),st
  41d517:	or     DWORD PTR [ecx-0x5bd0aa01],0xffffffc8
  41d51e:	sub    edi,edi
  41d520:	dec    esp
  41d522:	xor    bh,bh
  41d524:	xchg   ebp,eax
  41d525:	jnp    0x41d526
  41d527:	add    DWORD PTR [ebx-0x1fea2101],0xffffffc9
  41d52e:	or     al,0xff
  41d530:	cmp    edi,0x52
  41d533:	add    dh,bh
  41d535:	lds    ecx,FWORD PTR [ecx-0x14007c01]
  41d53b:	mov    ch,0x8b
  41d53d:	in     al,dx
  41d53e:	es cmp edi,0xffffffff
  41d542:	test   DWORD PTR [ecx-0x767c183f],0x30070000
  41d54c:	jge    0x41d573
  41d54e:	inc    esp
  41d54f:	mov    edi,edi
  41d551:	add    cl,ch
  41d553:	add    bh,al
  41d555:	mov    cl,ah
  41d557:	inc    DWORD PTR [eax]
  41d559:	push   eax
  41d55b:	and    eax,DWORD PTR [esi+0x66ce]
  41d561:	add    BYTE PTR [edi-0x97f601],ah
  41d567:	inc    DWORD PTR [eax]
  41d569:	add    edx,0xfffffff9
  41d56c:	mov    esi,DWORD PTR [ecx]
  41d56e:	icebp  
  41d56f:	add    bh,bh
  41d571:	add    BYTE PTR [ecx-0x7c6c01],dl
  41d577:	inc    DWORD PTR [eax]
  41d579:	add    BYTE PTR [ebx-0x56],dh
  41d57c:	adc    DWORD PTR [ecx-0x57],esp
  41d57f:	add    BYTE PTR [eax],al
  41d581:	add    DWORD PTR [esi+0x9325ff],0xffffffff
  41d588:	add    BYTE PTR [eax],al
  41d58a:	sub    DWORD PTR [eax],0xffffffcd
  41d58d:	aas    
  41d58e:	cwde   
  41d58f:	(bad)  
  41d590:	inc    DWORD PTR [eax]
  41d592:	lock add BYTE PTR [ebx],dh
  41d595:	ja     0x41d51a
  41d597:	inc    DWORD PTR [ebx-0xfeb7f01]
  41d59d:	cwde   
  41d59e:	push   ebx
  41d59f:	inc    DWORD PTR [eax]
  41d5a1:	mov    DWORD PTR [edx-0x764100],edi
  41d5a7:	add    DWORD PTR [eax],0xffffffff
  41d5aa:	inc    edx
  41d5ab:	sar    DWORD PTR [ecx+0xbd1c],0xff
  41d5b2:	in     al,dx
  41d5b3:	push   DWORD PTR [edx]
  41d5b5:	jno    0x41d5b6
  41d5b7:	(bad)  
  41d5b8:	(bad)  
  41d5b9:	(bad)  
  41d5ba:	jle    0x41d5c0
  41d5bc:	sub    DWORD PTR [ebp-0x767c00ab],ebx
  41d5c2:	push   esp
  41d5c3:	add    BYTE PTR [edx],ah
  41d5c5:	dec    ebp
  41d5c6:	int3   
  41d5c7:	mov    edi,edi
  41d5c9:	or     DWORD PTR [esi+ebp*8-0x48],0xffffffe7
  41d5ce:	in     eax,dx
  41d5cf:	add    BYTE PTR [ebx-0x60760d01],al
  41d5d5:	dec    edi
  41d5d6:	cmp    edi,0xffffff83
  41d5d9:	and    esi,0xffffffc1
  41d5dc:	inc    edi
  41d5dd:	stc    
  41d5de:	sub    BYTE PTR [ebx-0x440000],al
  41d5e4:	pop    ss
  41d5e5:	inc    esp
  41d5e6:	int3   
  41d5e7:	(bad)  
  41d5e8:	(bad)  
  41d5e9:	(bad)  
  41d5ea:	jmp    0xffcc:0xab736907
  41d5f1:	int3   
  41d5f2:	mov    edi,?
  41d5f4:	mov    cl,0xff
  41d5f6:	dec    esp
  41d5f8:	(bad)  
  41d5f9:	jmp    DWORD PTR [ecx+0x3f]
  41d5fc:	test   eax,0xff830655
  41d601:	adc    DWORD PTR [edi+edi*8+0x38],0x64
  41d606:	add    BYTE PTR [ebx-0x66740034],al
  41d60c:	out    0xb0,eax
  41d60e:	aam    0x0
  41d610:	add    bh,bh
  41d612:	mov    ds:0x89f063ff,al
  41d617:	mov    DWORD PTR [ebx+0x5fe37ff],eax
  41d61d:	dec    ebx
  41d61e:	mov    DWORD PTR [eax],eax
  41d620:	add    BYTE PTR [ecx+0x6686ccca],cl
  41d626:	inc    DWORD PTR [eax]
  41d628:	cmp    edi,0x35
  41d62b:	rol    DWORD PTR [edi+0x65],cl
  41d62e:	mov    ch,0x89
  41d630:	add    BYTE PTR [eax],al
  41d632:	lea    eax,[ebx-0xf526]
  41d638:	mov    DWORD PTR [ebx+0x1c9f4050],eax
  41d63e:	pusha  
  41d63f:	dec    DWORD PTR [ecx+0x51891dff]
  41d645:	fwait
  41d646:	(bad)  
  41d647:	inc    DWORD PTR [eax]
  41d649:	mov    DWORD PTR [edi+esi*8+0x68],ebx
  41d64d:	jmp    0xdc:0xffff1c
  41d654:	outs   dx,DWORD PTR ds:[esi]
  41d655:	popa   
  41d656:	inc    DWORD PTR [eax]
  41d658:	add    bh,bh
  41d65a:	dec    ebp
  41d65b:	dec    ebp
  41d65c:	addr16 jmp 0x41d668
  41d65f:	add    DWORD PTR [eax],0xffffff89
  41d662:	xchg   esp,eax
  41d663:	call   esi
  41d665:	adc    BYTE PTR [eax],al
  41d667:	add    bh,bh
  41d669:	int3   
  41d66a:	adc    dl,BYTE PTR [eax*2-0xff231b]
  41d671:	add    BYTE PTR [edx+0xd31b00],dh
  41d677:	inc    DWORD PTR [eax]
  41d679:	add    BYTE PTR ds:0xe7edca19,al
  41d67f:	add    BYTE PTR [ecx+0x3accfa83],cl
  41d685:	mov    ecx,0x83ffff00
  41d68a:	jbe    0x41d69f
  41d68c:	pop    ebp
  41d68d:	sahf   
  41d68e:	mov    dl,0x0
  41d690:	inc    DWORD PTR [ebx+0x245d009a]
  41d696:	(bad)  
  41d697:	inc    DWORD PTR [eax]
  41d699:	add    BYTE PTR [eax+0x15],bh
  41d69c:	push   es
  41d69d:	sub    eax,0xffff94
  41d6a2:	hlt    
  41d6a3:	sub    DWORD PTR [edx],0xffffffca
  41d6a6:	(bad)  
  41d6a7:	(bad)  
  41d6a8:	inc    DWORD PTR [eax]
  41d6aa:	sbb    bh,BYTE PTR [esi+0x7a]
  41d6ad:	and    esp,esp
  41d6af:	cmp    edi,0xffffffff
  41d6b2:	xor    eax,0xcc9ab200
  41d6b7:	cmp    edi,0xffffff89
  41d6ba:	(bad)  
  41d6bb:	jns    0x41d73c
  41d6bd:	push   edi
  41d6be:	fadd   DWORD PTR [eax]
  41d6c0:	add    bh,bh
  41d6c2:	ja     0x41d647
  41d6c4:	test   BYTE PTR [eax-0xff01],dl
  41d6ca:	loopne 0x41d6f9
  41d6cc:	jns    0x41d6aa
  41d6ce:	pop    DWORD PTR [eax]
  41d6d0:	add    DWORD PTR [eax],0xffffffbd
  41d6d3:	add    BYTE PTR [esi+0x18],ah
  41d6d6:	(bad)  
  41d6d7:	dec    DWORD PTR [ecx+0x3b73d6ff]
  41d6dd:	test   DWORD PTR [edi+edi*8-0x76be0001],ebp
  41d6e4:	pop    ebx
  41d6e5:	test   BYTE PTR [eax],0xff
  41d6e8:	add    bh,bh
  41d6ea:	xchg   ecx,eax
  41d6eb:	jae    0x41d6cf
  41d6ed:	mov    al,BYTE PTR [esi]
  41d6ef:	mov    edi,edi
  41d6f1:	add    bh,bh
  41d6f3:	add    ch,ah
  41d6f5:	dec    DWORD PTR [bx+di-0x1]
  41d6fa:	inc    ebx
  41d6fb:	pop    eax
  41d6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6fd:	test   WORD PTR [ecx-0x3b0000],cx
  41d704:	inc    esi
  41d705:	loop   0x41d707
  41d707:	add    ah,cl
  41d709:	call   FWORD PTR [eax]
  41d70b:	pusha  
  41d70c:	loopne 0x41d6d6
  41d70e:	xchg   ecx,eax
  41d70f:	inc    DWORD PTR [ebx+0x4d003d83]
  41d715:	ds dec esp
  41d718:	int3   
  41d719:	add    BYTE PTR [ebx*2+0x62458c],bl
  41d720:	add    BYTE PTR [eax],al
  41d722:	sahf   
  41d723:	int3   
  41d724:	inc    edx
  41d725:	cdq    
  41d726:	(bad)  
  41d727:	(bad)  
  41d728:	(bad)  
  41d729:	push   esi
  41d72b:	push   edx
  41d72c:	lods   al,BYTE PTR ds:[esi]
  41d72d:	retf   0xccc6
  41d730:	dec    esp
  41d732:	sbb    ecx,esp
  41d734:	jg     0x41d793
  41d736:	inc    DWORD PTR [eax]
  41d738:	add    BYTE PTR [eax],al
  41d73a:	mov    ebp,0x2fb76090
  41d73f:	add    BYTE PTR [ecx-0x6a00c800],cl
  41d745:	mov    bl,0xff
  41d747:	add    bh,bh
  41d749:	(bad)  
  41d74a:	(bad)  
  41d74c:	mov    cl,0xd0
  41d74e:	jmp    0xb800:0x9a00ff83
  41d755:	cmp    edi,edi
  41d757:	inc    DWORD PTR [ebx-0x4b8fd800]
  41d75d:	(bad)  [edx-0x1]
  41d760:	add    BYTE PTR [eax],al
  41d762:	push   ecx
  41d763:	mov    DWORD PTR ds:0x89ccff9e,eax
  41d769:	mov    eax,eax
  41d76b:	enter  0x2b78,0x87
  41d76f:	add    BYTE PTR [eax],al
  41d771:	add    BYTE PTR [ebx-0xa54634],dl
  41d777:	mov    DWORD PTR [ebx-0x3f2f3b00],eax
  41d77d:	jmp    0x25:0x8371
  41d784:	std    
  41d785:	sar    edi,cl
  41d787:	add    bh,bh
  41d789:	(bad)  
  41d78a:	mov    ecx,0xe9ed1448
  41d78f:	mov    edi,edi
  41d791:	add    BYTE PTR [edx-0x7d],dl
  41d794:	sub    ch,bl
  41d796:	add    BYTE PTR [ebx+0x297effff],al
  41d79c:	pop    esi
  41d79d:	mov    ecx,0xffccff8a
  41d7a2:	pop    ebx
  41d7a3:	jmp    DWORD PTR [esi+0x34]
  41d7a6:	mov    edi,edi
  41d7a8:	add    bh,bh
  41d7aa:	fild   QWORD PTR [edx-0xd525ad]
  41d7b0:	add    BYTE PTR [eax],al
  41d7b2:	int3   
  41d7b3:	(bad)  
  41d7b4:	js     0x41d770
  41d7b6:	add    bh,bh
  41d7b8:	add    ah,cl
  41d7ba:	rcl    bl,1
  41d7bc:	les    edx,FWORD PTR ds:0xffff0027
  41d7c2:	sub    al,0x83
  41d7c4:	aam    0x91
  41d7c6:	add    BYTE PTR [eax],al
  41d7c8:	inc    DWORD PTR [eax]
  41d7ca:	scas   al,BYTE PTR es:[edi]
  41d7cb:	rol    BYTE PTR [ecx],cl
  41d7cd:	pop    ss
  41d7ce:	cmp    eax,DWORD PTR [eax]
  41d7d0:	inc    DWORD PTR [eax]
  41d7d2:	jns    0x41d757
  41d7d4:	scas   al,BYTE PTR es:[edi]
  41d7d5:	pop    esp
  41d7d6:	(bad)  
  41d7d7:	(bad)  
  41d7d8:	inc    DWORD PTR [eax]
  41d7da:	mov    ebp,0x8dd20b31
  41d7df:	int3   
  41d7e0:	add    bh,bh
  41d7e2:	xor    al,0xff
  41d7e4:	jae    0x41d862
  41d7e6:	add    DWORD PTR [eax],0xffffffcc
  41d7e9:	inc    DWORD PTR [edi-0x2abdc729]
  41d7ef:	inc    DWORD PTR [eax]
  41d7f1:	add    cl,al
  41d7f3:	jmp    FWORD PTR [ebx]
  41d7f5:	mov    esi,0x89ffff00
  41d7fa:	and    DWORD PTR [edi-0x57],ebx
  41d7fd:	inc    edi
  41d7fe:	pop    ecx
  41d7ff:	add    BYTE PTR [eax],al
  41d801:	jmp    DWORD PTR [esi-0x1e2501]
  41d807:	add    BYTE PTR [eax],al
  41d809:	jmp    DWORD PTR ds:0xba67e98a
  41d80f:	dec    DWORD PTR [ecx+0x4f839400]
  41d815:	adc    edi,edi
  41d817:	dec    esp
  41d819:	add    BYTE PTR [edi-0x5c60939e],ch
  41d81f:	int3   
  41d820:	(bad)  
  41d821:	jmp    FWORD PTR [esi-0x825534]
  41d827:	add    bh,bh
  41d829:	jmp    DWORD PTR [esi+0x20]
  41d82c:	cmp    DWORD PTR [eax-0x7634],eax
  41d832:	retf   
  41d833:	mov    DWORD PTR [ebx+0xffffee],esp
  41d839:	inc    DWORD PTR [ebx-0x5f]
  41d83c:	pop    esp
  41d83d:	or     al,0x73
  41d83f:	inc    DWORD PTR [eax]
  41d841:	dec    DWORD PTR [edx]
  41d843:	add    ch,al
  41d845:	xor    edi,edi
  41d847:	or     DWORD PTR [ecx+0xc072ff],0xfffffff3
  41d84e:	cld    
  41d84f:	int3   
  41d850:	cmp    edi,0x3
  41d853:	mov    DWORD PTR [edx],edi
  41d855:	fdivr  st,st(7)
  41d857:	int3   
  41d858:	(bad)  
  41d859:	jmp    FWORD PTR [ecx+0x54]
  41d85c:	dec    edx
  41d85d:	mov    al,ds:0xffffff4f
  41d862:	mov    al,BYTE PTR [eax]
  41d864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d865:	xor    bh,bh
  41d867:	(bad)  
  41d868:	(bad)  
  41d869:	jmp    FWORD PTR [ecx]
  41d86b:	xchg   ebp,eax
  41d86c:	jae    0x41d86b
  41d86e:	add    edi,edi
  41d870:	(bad)  
  41d871:	push   DWORD PTR [ecx-0x1]
  41d874:	or     al,0x7d
  41d876:	inc    DWORD PTR [eax]
  41d878:	or     DWORD PTR [ecx+0x4ccb3b83],0xffffffd5
  41d87f:	inc    DWORD PTR [eax]
  41d881:	jmp    DWORD PTR [edi-0x7f9000]
  41d887:	or     esp,0xffffffff
  41d88a:	data16 adc BYTE PTR [ebp-0x2],ch
  41d88e:	adc    eax,0x3183cccc
  41d893:	jmp    FWORD PTR [ecx-0x7c00ff5d]
  41d899:	dec    DWORD PTR [edi+ebx*4]
  41d89c:	push   ds
  41d89d:	cmp    BYTE PTR [edi-0x1],bh
  41d8a0:	dec    esp
  41d8a2:	arpl   WORD PTR [eax],ax
  41d8a4:	into   
  41d8a5:	fadd   QWORD PTR [ebx+0x21898300]
  41d8ab:	mov    dh,BYTE PTR [esp-0xff0037]
  41d8b2:	xchg   BYTE PTR [ecx+0x832f54],cl
  41d8b8:	or     esp,0xffffffb7
  41d8bb:	pusha  
  41d8bc:	call   0x4236c5
  41d8c1:	add    dh,ah
  41d8c3:	add    BYTE PTR ds:0xcc00ffe5,bl
  41d8c9:	add    ebp,0x10
  41d8cc:	sbb    BYTE PTR [ebp-0xff32],ch
  41d8d2:	xchg   edi,eax
  41d8d3:	add    BYTE PTR [ecx+edi*1+0x0],ch
  41d8d7:	add    bh,bh
  41d8d9:	call   FWORD PTR [edx]
  41d8db:	jae    0x41d85d
  41d8dd:	sub    eax,0x83ffff8f
  41d8e2:	mov    ebx,0xff76c5ff
  41d8e7:	(bad)  
  41d8e8:	inc    DWORD PTR [ebx+0x888c423]
  41d8ee:	jb     0x41d8ef
  41d8f0:	add    BYTE PTR [eax],al
  41d8f2:	push   ss
  41d8f3:	add    bl,cl
  41d8f5:	imul   eax,DWORD PTR [eax],0x75830083
  41d8fb:	sbb    ebp,DWORD PTR [edi-0x76]
  41d8fe:	sbb    al,0xff
  41d900:	add    bh,bh
  41d902:	jb     0x41d903
  41d904:	sbb    edi,ebx
  41d906:	(bad)  
  41d907:	dec    esp
  41d909:	dec    eax
  41d90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d90c:	(bad)  
  41d90d:	fucomp st(1)
  41d90f:	dec    esp
  41d911:	jmp    FWORD PTR [eax+eax*1]
  41d914:	ja     0x41d8bf
  41d916:	inc    DWORD PTR [ebx+0x4d9a00ff]
  41d91c:	cmp    esi,ebx
  41d91e:	adc    eax,0xc38900ff
  41d923:	int3   
  41d924:	fxam   
  41d926:	add    DWORD PTR [ebx+0x47540083],0x11
  41d92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d92e:	xchg   edx,eax
  41d92f:	inc    DWORD PTR [eax]
  41d931:	add    cl,al
  41d933:	dec    DWORD PTR [ecx-0x7cff00d7]
  41d939:	push   eax
  41d93b:	jno    0x41d950
  41d93d:	mov    ch,0xa2
  41d93f:	add    bh,bh
  41d941:	dec    DWORD PTR [edx-0x33bc6201]
  41d947:	(bad)  
  41d948:	(bad)  
  41d949:	jmp    ebp
  41d94b:	mov    BYTE PTR [edx],dl
  41d94d:	lods   eax,DWORD PTR ds:[esi]
  41d94e:	and    al,0x89
  41d950:	mov    DWORD PTR [ecx+0x7814fff3],ecx
  41d956:	add    ah,cl
  41d958:	inc    DWORD PTR [eax]
  41d95a:	mov    bl,0x75
  41d95c:	sub    DWORD PTR [ebx+0xff835d],esi
  41d962:	mov    ch,0x83
  41d964:	pop    es
  41d965:	stc    
  41d966:	add    BYTE PTR [eax],al
  41d968:	inc    DWORD PTR [eax]
  41d96a:	bound  esi,QWORD PTR [ebx-0x7cc01036]
  41d970:	cmp    edi,0x30
  41d973:	add    BYTE PTR [ecx-0x767f],dh
  41d979:	push   DWORD PTR [eax]
  41d97b:	dec    edi
  41d97c:	xchg   esp,eax
  41d97d:	add    eax,0xffff39
  41d982:	adc    edi,edi
  41d984:	xchg   ebx,eax
  41d985:	sbb    bh,bh
  41d987:	add    bh,bh
  41d989:	xor    DWORD PTR [edi],0x61
  41d98c:	jb     0x41d978
  41d98e:	mov    BYTE PTR [ebx-0x33ed0100],al
  41d994:	dec    edi
  41d995:	cmp    cl,BYTE PTR [ecx-0x27000077]
  41d99b:	icebp  
  41d99c:	or     al,0x26
  41d99e:	stos   DWORD PTR es:[edi],eax
  41d99f:	add    DWORD PTR [eax],0x0
  41d9a2:	mov    bh,0x0
  41d9a4:	out    0xf1,al
  41d9a6:	add    ah,cl
  41d9a8:	inc    DWORD PTR [eax]
  41d9aa:	clc    
  41d9ab:	xchg   BYTE PTR [edx],bh
  41d9ad:	cld    
  41d9ae:	inc    edx
  41d9af:	add    bh,bh
  41d9b1:	call   ebp
  41d9b3:	add    BYTE PTR [edx+0xb],ah
  41d9b6:	inc    DWORD PTR [eax]
  41d9b8:	int3   
  41d9b9:	add    ah,ah
  41d9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9bc:	fld    DWORD PTR [ebp-0x6e]
  41d9bf:	add    ah,cl
  41d9c1:	call   FWORD PTR [ecx-0x7cdfd677]
  41d9c7:	mov    esp,ecx
  41d9c9:	int3   
  41d9ca:	dec    edi
  41d9cb:	add    DWORD PTR [ebx+0x2e],ebx
  41d9ce:	or     eax,0x14838383
  41d9d3:	int3   
  41d9d4:	(bad)  
  41d9d5:	out    0xff,al
  41d9d7:	(bad)  
  41d9d8:	(bad)  
  41d9d9:	call   DWORD PTR [ebp+0x77]
  41d9dc:	jp     0x41da16
  41d9de:	call   0xc883:0x34000000
  41d9e5:	and    al,0x0
  41d9e7:	cmp    edi,0x0
  41d9ea:	xchg   edi,eax
  41d9eb:	mov    al,0xb7
  41d9ed:	mov    edx,0x89ffff6f
  41d9f2:	stos   DWORD PTR es:[edi],eax
  41d9f3:	add    BYTE PTR [esi-0x76a8],cl
  41d9f9:	jmp    FWORD PTR [edx]
  41d9fb:	dec    eax
  41d9fc:	pop    ebp
  41d9fd:	mov    ebp,0xffff00f9
  41da02:	pop    edx
  41da03:	(bad)  
  41da04:	clc    
  41da05:	loop   0x41da07
  41da07:	dec    DWORD PTR [ecx+0x652f43ff]
  41da0d:	mov    al,ds:0xccff93
  41da12:	nop
  41da13:	call   edx
  41da15:	pop    ds
  41da16:	add    BYTE PTR [ecx+0x943ff83],cl
  41da1c:	sahf   
  41da1d:	inc    ebx
  41da1e:	(bad)  
  41da1f:	(bad)  
  41da20:	inc    DWORD PTR [eax]
  41da22:	sldt   WORD PTR [ecx-0x41]
  41da26:	(bad)  
  41da27:	dec    esp
  41da29:	dec    DWORD PTR [ebx+0x209adaab]
  41da2f:	mov    edi,edi
  41da31:	int3   
  41da32:	les    eax,FWORD PTR [eax]
  41da34:	sar    DWORD PTR [esi-0x1],0xff
  41da38:	(bad)  
  41da39:	call   FWORD PTR [ebp-0x7c]
  41da3c:	bound  edx,QWORD PTR [esi]
  41da3e:	adc    edi,edi
  41da40:	dec    DWORD PTR [ecx-0x710200c3]
  41da46:	dec    esp
  41da48:	inc    DWORD PTR [eax]
  41da4a:	push   0xc1b74202
  41da4f:	inc    DWORD PTR [ebx+0x31ffb7ff]
  41da55:	inc    ebp
  41da56:	(bad)  
  41da57:	(bad)  
  41da58:	(bad)  
  41da59:	jmp    DWORD PTR [eax+0x3b]
  41da5c:	(bad)  
  41da5d:	(bad)  
  41da5e:	in     eax,0xff
  41da60:	add    ah,cl
  41da62:	in     eax,0xff
  41da64:	push   ebp
  41da65:	in     al,dx
  41da66:	int3   
  41da67:	add    BYTE PTR [ecx+0xe8196ff],cl
  41da6d:	fs (bad) 
  41da6f:	inc    DWORD PTR [eax]
  41da71:	add    BYTE PTR [ecx-0x34],ch
  41da74:	mov    ebx,0x8900ff0c
  41da79:	inc    DWORD PTR [ecx-0x42]
  41da7c:	cmp    al,0xaa
  41da7e:	adc    bh,bh
  41da80:	int3   
  41da81:	push   DWORD PTR [edx+0x326700]
  41da87:	add    BYTE PTR [ebx-0x459ba400],al
  41da8d:	(bad)  
  41da8e:	ja     0x41da13
  41da90:	add    bh,bh
  41da92:	sbb    eax,0x831c1eff
  41da97:	(bad)  
  41da98:	(bad)  
  41da99:	inc    DWORD PTR [edx+ebp*8+0x23]
  41da9d:	and    DWORD PTR [eax-0x1],edi
  41daa0:	(bad)  
  41daa1:	inc    ebp
  41daa3:	add    BYTE PTR [esi],ch
  41daa5:	in     eax,dx
  41daa6:	add    bh,bh
  41daa8:	mov    DWORD PTR [ebx-0x89938eb],eax
  41daae:	inc    ebx
  41daaf:	add    bh,bh
  41dab1:	call   esi
  41dab3:	add    dh,bh
  41dab5:	out    dx,al
  41dab6:	add    DWORD PTR [eax],0xffffffff
  41dab9:	add    BYTE PTR [eax+ebx*2-0xef3462],al
  41dac0:	add    bh,bh
  41dac2:	mov    ?,edi
  41dac4:	test   BYTE PTR [eax-0x7c000100],ch
  41daca:	lea    ebx,[edi+0x1]
  41dacd:	lods   eax,DWORD PTR ds:[esi]
  41dace:	pop    ds
  41dacf:	add    bh,bh
  41dad1:	jmp    DWORD PTR [esi-0xda3501]
  41dad7:	add    BYTE PTR [ebx+0x3ceb54ff],al
  41dadd:	xlat   BYTE PTR ds:[ebx]
  41dade:	mov    al,0xff
  41dae0:	(bad)  
  41dae1:	call   FWORD PTR ds:0xb2d7cc
  41dae7:	(bad)  
  41dae8:	(bad)  
  41dae9:	(bad)  
  41daea:	std    
  41daeb:	mov    ch,0x5c
  41daed:	xor    BYTE PTR [ebx],0x83
  41daf0:	mov    edi,edi
  41daf2:	data16 add ch,bl
  41daf5:	jno    0x41daf6
  41daf7:	add    bh,bh
  41daf9:	int3   
  41dafa:	jmp    0x41db0d
  41dafc:	push   cs
  41dafd:	daa    
  41dafe:	ror    BYTE PTR [ecx-0x7cd20034],0x18
  41db05:	retf   0xff
  41db08:	dec    DWORD PTR [ecx-0x252d08c8]
  41db0e:	add    BYTE PTR ss:[ecx+0x1e894c00],cl
  41db15:	mov    bh,0x89
  41db17:	add    bh,bh
  41db19:	dec    DWORD PTR [edx+edi*4-0xc]
  41db1d:	mov    ebp,0x83ff000c
  41db22:	sub    DWORD PTR [ecx-0x79df],ecx
  41db28:	(bad)  
  41db29:	push   DWORD PTR [eax+0x605f0293]
  41db2f:	mov    edi,edi
  41db31:	jmp    DWORD PTR [eax-0x1]
  41db34:	and    BYTE PTR [ebx],dl
  41db36:	add    BYTE PTR [eax],al
  41db38:	(bad)  
  41db39:	(bad)  
  41db3a:	(bad)  
  41db3c:	in     al,dx
  41db3d:	add    cl,bl
  41db3f:	int3   
  41db40:	(bad)  
  41db41:	(bad)  
  41db42:	jmp    0xff88a947
  41db47:	inc    DWORD PTR [eax]
  41db49:	add    BYTE PTR [ebp+0x59bb4615],ch
  41db4f:	int3   
  41db50:	add    DWORD PTR [ebx-0x3dbd00ac],0xffffff89
  41db57:	add    BYTE PTR [ecx+0x96ed3ff],cl
  41db5d:	out    0x21,eax
  41db5f:	add    DWORD PTR [eax],0x0
  41db62:	inc    edx
  41db63:	int3   
  41db64:	mov    bh,0x12
  41db66:	dec    esp
  41db68:	add    bh,bh
  41db6a:	push   ecx
  41db6b:	std    
  41db6c:	xchg   esp,eax
  41db6d:	lods   eax,DWORD PTR ds:[esi]
  41db6e:	ud0    ecx,DWORD PTR [ecx-0x6a33017d]
  41db75:	in     al,0x0
  41db77:	add    bh,bh
  41db79:	int3   
  41db7a:	mov    edx,DWORD PTR [edx]
  41db7c:	pushf  
  41db7d:	lock (bad) 
  41db80:	add    BYTE PTR [eax],al
  41db82:	ror    BYTE PTR [ecx-0xff2592],cl
  41db88:	inc    DWORD PTR [ebx+0x5f14e9d9]
  41db8e:	jmp    0x41db90
  41db90:	int3   
  41db91:	add    BYTE PTR [ecx-0x3311317d],dh
  41db97:	(bad)  
  41db98:	inc    DWORD PTR [eax]
  41db9a:	xchg   edx,eax
  41db9b:	sbb    BYTE PTR [ecx],dh
  41db9d:	ret    0x50
  41dba0:	(bad)  
  41dba1:	dec    DWORD PTR [edi+0x0]
  41dba4:	cmp    al,al
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	add    bh,bh
  41dbaa:	aaa    
  41dbab:	mov    bl,0x71
  41dbad:	or     edx,esi
  41dbaf:	add    bh,bh
  41dbb1:	jmp    esi
  41dbb3:	jmp    DWORD PTR [edx+0x22]
  41dbb6:	inc    DWORD PTR [eax]
  41dbb8:	add    BYTE PTR [ebx-0x2b7c7cf6],al
  41dbbe:	dec    esp
  41dbbf:	(bad)  
  41dbc0:	inc    DWORD PTR [ebx-0x3edb7c3d]
  41dbc6:	(bad)  
  41dbc7:	inc    DWORD PTR [ebx+0x24775883]
  41dbcd:	outs   dx,BYTE PTR ds:[esi]
  41dbce:	int    0x83
  41dbd0:	add    BYTE PTR [ebx-0x6728ff4b],al
  41dbd6:	(bad)  
  41dbd7:	inc    DWORD PTR [ebx-0x6715f300]
  41dbdd:	call   0x41db81
  41dbe2:	aam    0x83
  41dbe4:	mov    bl,dh
  41dbe6:	cmp    edi,0xffffffff
  41dbe9:	add    BYTE PTR [ebp-0x111bcee5],dh
  41dbef:	int3   
  41dbf0:	add    BYTE PTR [eax],al
  41dbf2:	add    DWORD PTR [ebx-0x762fd1],0xffffff89
  41dbf9:	inc    eax
  41dbfb:	ins    DWORD PTR es:[edi],dx
  41dbfc:	das    
  41dbfd:	in     eax,dx
  41dbfe:	inc    edx
  41dbff:	int3   
  41dc00:	(bad)  
  41dc01:	jmp    DWORD PTR [ebx+eax*4+0x38]
  41dc05:	pushf  
  41dc06:	(bad)  
  41dc07:	dec    DWORD PTR [ecx+0x77c031ff]
  41dc0d:	mov    esp,0xff83ffc9
  41dc12:	sar    edi,cl
  41dc14:	pusha  
  41dc15:	out    dx,eax
  41dc16:	inc    DWORD PTR [eax]
  41dc18:	(bad)  
  41dc19:	call   FWORD PTR [esi+0x707ccddb]
  41dc1f:	int3   
  41dc20:	int3   
  41dc21:	add    BYTE PTR [edi+edi*8-0x3e],dh
  41dc25:	test   edi,edi
  41dc27:	add    BYTE PTR [eax],al
  41dc29:	dec    DWORD PTR [ebx-0x23b9294c]
  41dc2f:	mov    DWORD PTR [ebx-0x37ff1b00],eax
  41dc35:	inc    DWORD PTR fs:[eax]
  41dc38:	add    bh,bh
  41dc3a:	adc    al,0x65
  41dc3c:	jmp    0x41dc0c
  41dc3e:	adc    al,0x0
  41dc40:	inc    DWORD PTR [eax]
  41dc42:	js     0x41dc43
  41dc44:	ins    DWORD PTR es:[edi],dx
  41dc45:	jge    0x41dc46
  41dc47:	(bad)  
  41dc48:	inc    DWORD PTR [eax]
  41dc4a:	adc    ebx,DWORD PTR [eax+eiz*2-0x766418]
  41dc51:	inc    ebx
  41dc53:	int3   
  41dc54:	jnp    0x41dc47
  41dc56:	(bad)  
  41dc57:	(bad)  
  41dc58:	inc    DWORD PTR [ebx-0xe84bcb3]
  41dc5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc5f:	int3   
  41dc60:	add    BYTE PTR [ebx-0x3464ff91],al
  41dc66:	add    BYTE PTR [eax],al
  41dc68:	(bad)  
  41dc69:	(bad)  
  41dc6a:	jnp    0x41dce8
  41dc6c:	ja     0x41dcc3
  41dc6e:	jmp    0x41dc6f
  41dc70:	mov    edi,edi
  41dc72:	cld    
  41dc73:	add    ah,bl
  41dc75:	mov    ah,cl
  41dc77:	inc    DWORD PTR [eax]
  41dc79:	add    BYTE PTR [edi],al
  41dc7b:	popf   
  41dc7c:	call   0x6dff:0xccff12a2
  41dc83:	int3   
  41dc84:	jne    0x41dcac
  41dc86:	dec    DWORD PTR [ecx-0x3629ff01]
  41dc8c:	nop
  41dc8d:	repnz cli 
  41dc8f:	add    BYTE PTR [eax],al
  41dc91:	add    BYTE PTR [edi+edi*8],bl
  41dc94:	adc    BYTE PTR [edi+edi*8+0x6ff8300],0x9b
  41dc9c:	popa   
  41dc9d:	inc    edi
  41dc9e:	popa   
  41dc9f:	(bad)  
  41dca0:	(bad)  
  41dca1:	inc    DWORD PTR [eax-0x1]
  41dca4:	stc    
  41dca5:	test   BYTE PTR [ebx+0x13ffffff],al
  41dcab:	mov    ah,0xed
  41dcad:	mov    al,ds:0xffff00
  41dcb2:	addr16 int3 
  41dcb4:	xchg   esp,eax
  41dcb5:	inc    ebp
  41dcb6:	add    bh,bh
  41dcb8:	inc    DWORD PTR [eax]
  41dcba:	je     0x41dc6a
  41dcbc:	mov    esi,0xffccb7ce
  41dcc1:	(bad)  
  41dcc2:	sti    
  41dcc3:	or     DWORD PTR [eax+0x42],0xffffffff
  41dcc7:	(bad)  
  41dcc8:	dec    DWORD PTR [ecx-0x23c05548]
  41dcce:	out    0x0,eax
  41dcd0:	add    bh,bh
  41dcd2:	xchg   BYTE PTR [eax],al
  41dcd4:	mov    ch,0x19
  41dcd6:	cmp    edi,0xffffffff
  41dcd9:	add    cl,dh
  41dcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcdc:	mov    bl,0x12
  41dcde:	int    0x0
  41dce0:	add    DWORD PTR [eax],0x67
  41dce3:	add    DWORD PTR [edx+esi*1-0x1],0xffffffff
  41dce8:	(bad)  
  41dce9:	dec    DWORD PTR [eax+0x524e0407]
  41dcef:	int3   
  41dcf0:	dec    esp
  41dcf2:	mov    edi,0xd17c83
  41dcf7:	add    BYTE PTR [ebx-0x6174e877],al
  41dcfd:	inc    ebp
  41dcfe:	cmp    edi,edi
  41dd00:	dec    DWORD PTR [ecx-0x31c27689]
  41dd06:	add    DWORD PTR [eax],0xffffffff
  41dd09:	int3   
  41dd0a:	inc    edi
  41dd0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd0c:	sahf   
  41dd0d:	clc    
  41dd0e:	xchg   edi,eax
  41dd0f:	mov    DWORD PTR [eax],eax
  41dd11:	or     DWORD PTR [edi-0xa90001],0x0
  41dd18:	dec    DWORD PTR [ecx-0x100bebe2]
  41dd1e:	pushf  
  41dd1f:	inc    DWORD PTR [eax]
  41dd21:	mov    DWORD PTR [edi+edi*8+0x2e],ecx
  41dd25:	(bad)  
  41dd26:	inc    DWORD PTR [eax]
  41dd28:	(bad)  
  41dd29:	(bad)  
  41dd2a:	fist   WORD PTR [eax-0x2f]
  41dd2d:	fimul  DWORD PTR [eax]
  41dd2f:	add    ah,cl
  41dd31:	int3   
  41dd32:	xchg   ebx,eax
  41dd33:	int3   
  41dd34:	pop    eax
  41dd35:	hlt    
  41dd36:	add    bh,bh
  41dd38:	add    ah,cl
  41dd3a:	inc    ebx
  41dd3b:	popa   
  41dd3c:	daa    
  41dd3d:	je     0x41dda4
  41dd3f:	dec    DWORD PTR [ecx+0x7b83db00]
  41dd45:	xchg   ebx,eax
  41dd46:	(bad)  
  41dd47:	inc    DWORD PTR [eax]
  41dd49:	add    BYTE PTR [ecx+0x37652d92],dl
  41dd4f:	int3   
  41dd50:	cmp    edi,0x66
  41dd53:	sub    DWORD PTR [eax-0x3b],0xffffff89
  41dd57:	add    BYTE PTR [ecx+0x3dc4d583],cl
  41dd5d:	popa   
  41dd5e:	repz dec DWORD PTR [ecx-0x177c7a34]
  41dd65:	xchg   ebp,eax
  41dd66:	inc    DWORD PTR [eax]
  41dd68:	int3   
  41dd69:	int3   
  41dd6a:	and    BYTE PTR [ebp-0x5e],bl
  41dd6d:	xor    DWORD PTR [esi],0xb0ffffff
  41dd73:	add    bh,ah
  41dd75:	add    DWORD PTR gs:[eax],0xffffffff
  41dd79:	int3   
  41dd7a:	leave  
  41dd7b:	dec    edi
  41dd7c:	mov    eax,0xccffeee4
  41dd81:	add    BYTE PTR [ebx],al
  41dd83:	mov    DWORD PTR [esi-0x5a],esp
  41dd86:	add    DWORD PTR [eax],0xffffffff
  41dd89:	inc    DWORD PTR [esp+eiz*2-0x40]
  41dd8d:	push   edx
  41dd8e:	cmp    al,BYTE PTR [eax]
  41dd90:	add    bh,bh
  41dd92:	add    DWORD PTR [ecx-0xf7f0],ecx
  41dd98:	inc    DWORD PTR [eax]
  41dd9a:	mov    esi,0xd29c3c07
  41dd9f:	inc    DWORD PTR [eax]
  41dda1:	int3   
  41dda2:	add    eax,DWORD PTR [ebx-0x880b]
  41dda8:	cmp    edi,0xffffff8c
  41ddab:	data16 je 0x41de1c
  41ddae:	cmc    
  41ddaf:	(bad)  
  41ddb0:	inc    DWORD PTR [ebx+0x55ce8321]
  41ddb6:	add    bh,bh
  41ddb8:	(bad)  
  41ddb9:	call   FWORD PTR [ebp-0x17e2e26c]
  41ddbf:	inc    DWORD PTR [eax]
  41ddc1:	add    BYTE PTR [ecx+0x66efff],al
  41ddc7:	inc    DWORD PTR [eax]
  41ddc9:	int3   
  41ddca:	dec    esi
  41ddcb:	xor    DWORD PTR [ecx+ebp*8-0xff7ca2],esi
  41ddd2:	popa   
  41ddd3:	add    BYTE PTR [ecx-0xffffd4],cl
  41ddd9:	add    dl,al
  41dddb:	hlt    
  41dddc:	scas   eax,DWORD PTR es:[edi]
  41dddd:	xchg   BYTE PTR [edx],dh
  41dddf:	(bad)  
  41dde0:	inc    DWORD PTR [eax]
  41dde2:	mov    al,ds:0xffc07cff
  41dde7:	add    DWORD PTR [eax],0xffffff83
  41ddea:	std    
  41ddeb:	outs   dx,DWORD PTR ds:[esi]
  41ddec:	sub    bh,bl
  41ddee:	mov    cl,0xff
  41ddf0:	add    bh,bh
  41ddf2:	out    0xff,eax
  41ddf4:	mov    ah,0x1
  41ddf6:	add    bh,bh
  41ddf8:	(bad)  
  41ddf9:	push   DWORD PTR [edi-0x1c3bb1b1]
  41ddff:	add    BYTE PTR [eax],al
  41de01:	inc    esi
  41de03:	add    BYTE PTR [ecx+0x53],bl
  41de06:	(bad)  
  41de07:	inc    DWORD PTR [eax]
  41de09:	add    BYTE PTR [edx+0x71],bh
  41de0c:	stos   BYTE PTR es:[edi],al
  41de0d:	jnp    0x41de0d
  41de0f:	(bad)  
  41de10:	inc    DWORD PTR [eax]
  41de12:	dec    ebp
  41de13:	int3   
  41de14:	jo     0x41de00
  41de16:	add    BYTE PTR [ebx-0x1a00007d],al
  41de1c:	int    0xb8
  41de1e:	pusha  
  41de1f:	dec    DWORD PTR [ecx-0x1800aa01]
  41de25:	arpl   di,di
  41de27:	inc    DWORD PTR [ebx+0x258db1ff]
  41de2d:	add    BYTE PTR [edi-0x1],ch
  41de30:	inc    DWORD PTR [ebx-0x27abfff0]
  41de36:	add    BYTE PTR [eax],al
  41de38:	(bad)  
  41de39:	dec    DWORD PTR [ebx+0x23]
  41de3c:	inc    edi
  41de3d:	pop    ebp
  41de3e:	mov    dl,0x83
  41de40:	add    bh,bh
  41de42:	and    eax,0xfff85100
  41de47:	inc    DWORD PTR [ebx+0x3b5d1eff]
  41de4d:	aaa    
  41de4e:	xor    eax,0xee00ff83
  41de53:	dec    DWORD PTR [edi]
  41de55:	or     eax,DWORD PTR [ebx+0x54ff8389]
  41de5b:	mov    ?,WORD PTR [esi+0x5]
  41de5e:	push   esi
  41de5f:	inc    DWORD PTR [ebx+0x66006fff]
  41de65:	es int3 
  41de67:	inc    DWORD PTR [eax]
  41de69:	add    al,ch
  41de6b:	call   0xff:0x892d8692
  41de72:	das    
  41de73:	adc    DWORD PTR [ebx],0x47
  41de76:	dec    esp
  41de78:	inc    DWORD PTR [eax]
  41de7a:	ror    BYTE PTR [edx],0x6d
  41de7d:	repnz push 0x9589ffcc
  41de83:	mov    DWORD PTR [ebx-0x63],ebx
  41de86:	int3   
  41de87:	add    bh,bh
  41de89:	and    DWORD PTR [esi],0xffffff82
  41de8c:	test   DWORD PTR [ebp-0x1b],ebx
  41de8f:	or     DWORD PTR [ecx+0x64004789],0xffffffd5
  41de96:	mov    DWORD PTR [eax],eax
  41de98:	add    bh,bh
  41de9a:	daa    
  41de9b:	test   BYTE PTR [esp+ebp*8],0x55
  41de9f:	add    ah,cl
  41dea1:	and    edx,0x0
  41dea4:	dec    ebx
  41dea5:	jge    0x41dea6
  41dea7:	(bad)  
  41dea8:	(bad)  
  41dea9:	call   FWORD PTR [eax+0x10]
  41deac:	and    ebx,eax
  41deae:	in     eax,dx
  41deaf:	dec    esp
  41deb1:	push   DWORD PTR ds:0xfff936ff
  41deb7:	(bad)  
  41deb8:	inc    DWORD PTR [eax]
  41deba:	push   es
  41debb:	sbb    BYTE PTR [ebp+ebx*8-0x760025],dl
  41dec2:	add    DWORD PTR [ebx-0xfff8ac],0xc4c6cc83
  41decc:	mov    ecx,0xffffd8d1
  41ded1:	push   esi
  41ded3:	call   DWORD PTR [edi+0xff35]
  41ded9:	cmp    DWORD PTR [esi-0x10],0x4
  41dedd:	mov    WORD PTR ds:0xfeffffff,?
  41dee3:	push   esp
  41dee5:	in     al,dx
  41dee6:	add    bh,bh
  41dee8:	add    bh,bh
  41deea:	mov    ebx,0x37d87949
  41deef:	or     esp,0x0
  41def2:	adc    ah,cl
  41def4:	pop    edx
  41def5:	int    0x0
  41def7:	mov    DWORD PTR [eax],eax
  41def9:	add    BYTE PTR [eax-0x1d],al
  41defc:	mov    dl,0x92
  41defe:	test   BYTE PTR [eax],al
  41df00:	add    BYTE PTR [ecx-0x431000ad],cl
  41df06:	inc    DWORD PTR [eax]
  41df08:	int3   
  41df09:	add    BYTE PTR [edx+ebx*8],bl
  41df0c:	lahf   
  41df0d:	sbb    al,0x7a
  41df0f:	inc    DWORD PTR [eax]
  41df11:	add    al,dl
  41df13:	add    BYTE PTR [edi],dh
  41df15:	adc    edi,edi
  41df17:	mov    edi,edi
  41df19:	adc    DWORD PTR [ecx],0xffffff87
  41df1c:	add    ecx,ecx
  41df1e:	repnz (bad) 
  41df20:	inc    DWORD PTR [eax]
  41df22:	sbb    eax,0x6a90ff
  41df27:	add    BYTE PTR [eax],al
  41df29:	add    BYTE PTR ds:0x215ecaf0,al
  41df2f:	add    BYTE PTR [ecx+0x1f00f300],cl
  41df35:	lahf   
  41df36:	add    DWORD PTR [eax],0xffffff83
  41df39:	add    BYTE PTR [ebp-0xf],bl
  41df3c:	das    
  41df3d:	test   al,0x13
  41df3f:	inc    DWORD PTR [eax]
  41df41:	add    bh,ah
  41df43:	call   DWORD PTR [esi+eax*1-0x100]
  41df4a:	pusha  
  41df4b:	shl    DWORD PTR [esi+eiz*1],cl
  41df4e:	mov    al,ds:0x37ff83ff
  41df53:	inc    edi
  41df55:	cmp    eax,0xff0089
  41df5a:	stos   DWORD PTR es:[edi],eax
  41df5b:	mov    al,0x2
  41df5d:	xchg   edi,eax
  41df5e:	cwde   
  41df5f:	dec    esp
  41df61:	call   DWORD PTR [ebp+0x0]
  41df64:	pop    ss
  41df65:	enter  0x0,0x83
  41df69:	call   edx
  41df6b:	push   ebx
  41df6c:	xchg   edi,eax
  41df6d:	adc    eax,0xcc0000f5
  41df72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df73:	adc    DWORD PTR [ecx+0x83cc10],0x0
  41df7a:	fucomip st,st(1)
  41df7c:	cmp    DWORD PTR [eax],edx
  41df7e:	add    BYTE PTR [eax],0x83
  41df81:	push   edi
  41df83:	cmp    ebx,0x3d
  41df86:	cmp    edi,0xffffffff
  41df89:	call   FWORD PTR [edi]
  41df8b:	dec    esi
  41df8c:	ds sub dl,ah
  41df8f:	(bad)  
  41df90:	(bad)  
  41df91:	call   DWORD PTR [esi]
  41df93:	int3   
  41df94:	cmp    ebp,esp
  41df96:	add    bh,bh
  41df98:	(bad)  
  41df99:	(bad)  
  41df9a:	fild   QWORD PTR [esi+0x5a]
  41df9d:	xor    BYTE PTR [esi-0x3cffff01],dl
  41dfa3:	call   esp
  41dfa5:	pop    ebx
  41dfa6:	add    bh,bh
  41dfa8:	add    DWORD PTR [eax],0xffffff93
  41dfab:	call   0x83bd6a8c
  41dfb0:	(bad)  
  41dfb1:	dec    DWORD PTR [ecx-0xfafa01]
  41dfb7:	(bad)  
  41dfb8:	dec    esp
  41dfba:	(bad)  
  41dfbb:	inc    DWORD PTR [eax]
  41dfbd:	aam    0x49
  41dfbf:	add    bh,bh
  41dfc1:	call   DWORD PTR [ebx+0x0]
  41dfc4:	xor    ah,BYTE PTR [esi]
  41dfc6:	(bad)  
  41dfc7:	inc    DWORD PTR [eax]
  41dfc9:	add    BYTE PTR [ebx],bh
  41dfcb:	rol    bl,0x42
  41dfce:	or     bh,bh
  41dfd0:	add    ah,cl
  41dfd2:	cwde   
  41dfd3:	(bad)  
  41dfd4:	sti    
  41dfd5:	repnz dec esp
  41dfd8:	dec    esp
  41dfda:	push   ds
  41dfdb:	or     edi,DWORD PTR [edx+0xff6d74]
  41dfe1:	call   FWORD PTR [edx-0x1]
  41dfe4:	ds retf 
  41dfe6:	cmp    edi,0xffffff89
  41dfe9:	(bad)  
  41dfea:	cmp    BYTE PTR [ecx+ebx*1-0x90fc],dl
  41dff1:	xor    DWORD PTR [ecx+0x0],0xffffff9e
  41dff5:	jbe    0x41dff7
  41dff7:	(bad)  
  41dff8:	inc    DWORD PTR [eax]
  41dffa:	lea    ebx,[edi-0x6f]
  41dffd:	hlt    
  41dffe:	mov    al,ds:0xafff83ff
  41e003:	(bad)  
  41e004:	clc    
  41e005:	sub    bh,bh
  41e007:	add    bh,bh
  41e009:	push   DWORD PTR [esi]
  41e00b:	iret   
  41e00c:	outs   dx,BYTE PTR ds:[esi]
  41e00d:	jnp    0x41dfbb
  41e00f:	int3   
  41e010:	(bad)  
  41e011:	jmp    DWORD PTR [edi+edi*8-0x4935]
  41e018:	add    bh,bh
  41e01a:	mov    ecx,0x3e6016c5
  41e01f:	inc    DWORD PTR [eax]
  41e021:	adc    DWORD PTR [edx-0x1],0xffffffbf
  41e025:	lods   eax,DWORD PTR ds:[esi]
  41e026:	int3   
  41e027:	cmp    edi,0x0
  41e02a:	outs   dx,BYTE PTR ds:[esi]
  41e02b:	pop    ebp
  41e02c:	loope  0x41e023
  41e02e:	stos   BYTE PTR es:[edi],al
  41e02f:	dec    esp
  41e031:	jmp    DWORD PTR [eax+0xbf1eff]
  41e037:	add    DWORD PTR [eax],0x0
  41e03a:	jbe    0x41e0b2
  41e03c:	lahf   
  41e03d:	lea    ebx,[ebx+0x7cffffff]
  41e043:	push   DWORD PTR [ebx-0xb]
  41e046:	inc    DWORD PTR [ebx-0xb007d]
  41e04c:	xor    DWORD PTR [ebp-0x55],edi
  41e04f:	add    BYTE PTR [eax],al
  41e051:	add    BYTE PTR [ebx],bh
  41e053:	mov    eax,edi
  41e055:	jg     0x41e056
  41e057:	inc    DWORD PTR [eax]
  41e059:	dec    DWORD PTR [ecx-0x3109ebc9]
  41e05f:	cmp    edi,0x0
  41e062:	mov    bh,0xff
  41e064:	or     eax,0xffff30
  41e069:	jmp    DWORD PTR [ebp-0x28123171]
  41e06f:	add    DWORD PTR [ebx+0x298359ff],0xffffffa7
  41e076:	(bad)  
  41e077:	(bad)  
  41e078:	dec    esp
  41e07a:	loope  0x41e05d
  41e07c:	mov    edi,0x830004dc
  41e081:	push   DWORD PTR [ebx+0xedc3ff]
  41e087:	add    bh,bh
  41e089:	(bad)  
  41e08a:	call   0x81595011
  41e08f:	int3   
  41e090:	(bad)  
  41e091:	push   DWORD PTR [eax-0x1]
  41e094:	mov    ch,0x23
  41e096:	dec    esp
  41e098:	(bad)  
  41e099:	jmp    FWORD PTR ds:0x3246ff8d
  41e09f:	(bad)  
  41e0a0:	inc    DWORD PTR [ebx-0x48d500ae]
  41e0a6:	add    DWORD PTR [eax],0xffffff89
  41e0a9:	mov    DWORD PTR [ebp-0x7f6b7aa4],edx
  41e0af:	dec    esp
  41e0b1:	add    bl,bl
  41e0b3:	(bad)  
  41e0b4:	jmp    ecx
  41e0b6:	add    bh,bh
  41e0b8:	clc    
  41e0b9:	add    BYTE PTR [eax],al
  41e0bb:	cli    
  41e0bc:	fwait
  41e0bd:	fs inc esp
  41e0bf:	(bad)  
  41e0c0:	inc    DWORD PTR [eax]
  41e0c2:	aam    0xff
  41e0c4:	jmp    DWORD PTR [esi-0x1]
  41e0c7:	(bad)  
  41e0c8:	sti    
  41e0c9:	add    BYTE PTR [eax],al
  41e0cb:	iret   
  41e0cc:	pusha  
  41e0cd:	fmul   st(4),st
  41e0cf:	cli    
  41e0d0:	mov    edi,edi
  41e0d2:	fdivr  st,st(7)
  41e0d4:	jmp    FWORD PTR [edi+edi*8-0x1]
  41e0d8:	ja     0x41e05d
  41e0da:	jmp    DWORD PTR [ebx-0x7e]
  41e0dd:	repz (bad) 
  41e0df:	mov    esi,0xff17ffff
  41e0e4:	sub    DWORD PTR [esi],0xffffffff
  41e0e7:	(bad)  
  41e0e8:	fild   DWORD PTR [eax]
  41e0ea:	mov    DWORD PTR [edx+ebp*1-0x6b63dc],esp
  41e0f1:	call   DWORD PTR [eax-0x510001]
  41e0f7:	dec    DWORD PTR [ebx+0x2232ffff]
  41e0fd:	mov    al,0x2
  41e0ff:	jg     0x41e100
  41e101:	int3   
  41e102:	and    DWORD PTR [ecx-0xff537d],ecx
  41e108:	je     0x41e10a
  41e10a:	call   ecx
  41e10c:	jns    0x41e15d
  41e10e:	shr    BYTE PTR [ebx],0x89
  41e111:	call   DWORD PTR [eax]
  41e113:	add    bh,bh
  41e115:	mov    BYTE PTR [eax],0xff
  41e118:	jne    0x41e09d
  41e11a:	jmp    DWORD PTR [ecx]
  41e11c:	dec    ebx
  41e11d:	loope  0x41e154
  41e11f:	into   
  41e120:	add    BYTE PTR [eax],al
  41e122:	test   eax,0xffbdff00
  41e127:	add    BYTE PTR [esi+0x0],cl
  41e12a:	add    BYTE PTR [ecx+0x5b],ch
  41e12d:	js     0x41e14a
  41e12f:	test   al,0xff
  41e131:	add    cl,ch
  41e133:	inc    DWORD PTR [eax]
  41e135:	(bad)  
  41e136:	inc    DWORD PTR [ebx-0xb00ff41]
  41e13c:	leave  
  41e13d:	jp     0x41e0f0
  41e13f:	test   al,0x89
  41e141:	adc    esi,0xffffff83
  41e144:	adc    DWORD PTR [edx-0x1],0xffffffff
  41e148:	std    
  41e149:	inc    DWORD PTR [eax]
  41e14b:	inc    esi
  41e14c:	pop    ds
  41e14d:	je     0x41e0f3
  41e14f:	push   ecx
  41e150:	add    bh,bh
  41e152:	jecxz  0x41e0dd
  41e154:	jmp    DWORD PTR [ebp-0x76143400]
  41e15a:	dec    DWORD PTR [esi+ebx*2-0x1c]
  41e15e:	and    cl,BYTE PTR [edi]
  41e160:	or     esp,0x4f
  41e163:	int3   
  41e164:	(bad)  
  41e165:	(bad)  
  41e167:	(bad)  
  41e168:	ds cmp edi,0x6e
  41e16c:	ds mov bh,0x5
  41e16f:	mov    dl,0xff
  41e171:	xor    eax,0xffffffff
  41e174:	int3   
  41e175:	in     eax,dx
  41e176:	cmp    edi,0xfffffffc
  41e179:	int3   
  41e17a:	add    BYTE PTR [edi+edi*1],cl
  41e17d:	mov    al,0xdf
  41e17f:	popa   
  41e180:	add    BYTE PTR [eax],al
  41e182:	dec    ebp
  41e183:	add    bh,bh
  41e185:	dec    edx
  41e186:	(bad)  
  41e187:	dec    DWORD PTR [edi+0x0]
  41e18a:	add    BYTE PTR [edx-0x6c],ah
  41e18d:	loopne 0x41e114
  41e18f:	cwde   
  41e190:	add    bh,bh
  41e192:	push   ss
  41e193:	(bad)  
  41e194:	call   ebp
  41e196:	add    BYTE PTR [eax],al
  41e198:	jo     0x41e199
  41e19a:	mov    eax,esp
  41e19c:	out    0xec,al
  41e19e:	dec    ecx
  41e19f:	pop    es
  41e1a0:	(bad)  
  41e1a1:	push   DWORD PTR [edx-0x1f7700]
  41e1a7:	push   DWORD PTR [esi+0x5eb8ff00]
  41e1ad:	sub    DWORD PTR [ebp+0x1500ff1f],ebx
  41e1b3:	mov    DWORD PTR [eax],eax
  41e1b5:	clc    
  41e1b6:	int3   
  41e1b7:	dec    esp
  41e1b9:	dec    DWORD PTR [ecx+0x7221dd3a]
  41e1bf:	out    0xff,al
  41e1c1:	call   FWORD PTR [eax]
  41e1c3:	(bad)  
  41e1c4:	jmp    FWORD PTR [eax+0x720000]
  41e1ca:	jmp    FWORD PTR ds:0x9e921acc
  41e1d0:	add    DWORD PTR [eax],0xffffffa4
  41e1d3:	add    DWORD PTR [eax],0xffffffe5
  41e1d6:	add    BYTE PTR [eax],al
  41e1d8:	pop    ss
  41e1d9:	add    DWORD PTR [eax],0xffffff86
  41e1dc:	cmp    BYTE PTR [eax+0xff5359],ah
  41e1e2:	in     al,0xff
  41e1e4:	add    DWORD PTR [ebp-0x597c01],0xffffffff
  41e1eb:	pushf  
  41e1ec:	adc    edi,edx
  41e1ee:	cmp    bh,ch
  41e1f0:	(bad)  
  41e1f1:	inc    DWORD PTR [edi-0x87677]
  41e1f7:	int3   
  41e1f8:	ret    0x89
  41e1fb:	iret   
  41e1fc:	daa    
  41e1fd:	mov    ah,0xf3
  41e1ff:	lods   al,BYTE PTR ds:[esi]
  41e200:	mov    edi,edi
  41e202:	adc    edi,edi
  41e204:	mov    DWORD PTR ds:0xba0083,ecx
  41e20a:	jmp    esp
  41e20c:	fistp  DWORD PTR [edi-0x7c004b81]
  41e212:	mov    esi,0x660000
  41e217:	xor    DWORD PTR ds:0xfcd4ffcc,0xffffff83
  41e21e:	pop    eax
  41e21f:	and    eax,0xeeffcc
  41e224:	inc    DWORD PTR [edx]
  41e226:	dec    esp
  41e228:	out    0x0,al
  41e22a:	jmp    DWORD PTR [ebx+0x74]
  41e22d:	dec    ebp
  41e22e:	ret    
  41e22f:	aad    0xff
  41e231:	push   DWORD PTR [edi+0x0]
  41e234:	xor    DWORD PTR [ebp-0x7c96ff34],0x0
  41e23b:	or     DWORD PTR ds:0xff2640dc,0xffffff83
  41e242:	xor    DWORD PTR [eax],eax
  41e244:	call   DWORD PTR [edi+0x0]
  41e247:	cmp    DWORD PTR [edi+edi*8+0x24699dff],0xffffff98
  41e24f:	and    eax,0xff69ff83
  41e254:	add    BYTE PTR [ebx-0x41ff01],bh
  41e25a:	add    BYTE PTR [edi+0x1a],cl
  41e25d:	push   ss
  41e25e:	adc    DWORD PTR [edx],esi
  41e260:	(bad)  
  41e261:	(bad)  
  41e262:	cmp    al,0x83
  41e264:	(bad)  
  41e265:	mov    esp,0xffd9ffff
  41e26a:	add    BYTE PTR ds:0xb80bea,bl
  41e270:	inc    DWORD PTR [eax]
  41e272:	rol    DWORD PTR [eax],1
  41e274:	call   DWORD PTR [ebx]
  41e276:	(bad)  
  41e277:	push   DWORD PTR [edi+edi*8-0x1]
  41e27b:	inc    esp
  41e27c:	inc    esi
  41e27d:	lea    edi,[ebx]
  41e27f:	add    DWORD PTR [eax],0xffffffcc
  41e282:	fild   DWORD PTR [eax]
  41e284:	(bad)  
  41e285:	jnp    0x41e253
  41e287:	add    BYTE PTR [eax],dl
  41e289:	cmp    edi,0x34
  41e28c:	je     0x41e2f9
  41e28e:	ja     0x41e21d
  41e290:	dec    esp
  41e292:	xor    eax,0xff2dffff
  41e297:	cmp    DWORD PTR [ebx-0x640f7c01],0xfffffff6
  41e29e:	mov    dl,0x49
  41e2a0:	dec    esp
  41e2a2:	sbb    al,0x0
  41e2a4:	add    BYTE PTR [ebx+0x290000],cl
  41e2aa:	add    BYTE PTR [ecx],ch
  41e2ac:	inc    eax
  41e2ad:	adc    al,0xca
  41e2af:	ds or  esp,0xffffffc7
  41e2b3:	add    BYTE PTR [eax],al
  41e2b5:	push   0x83e7ffff
  41e2ba:	add    DWORD PTR [esi],0xffffffec
  41e2bd:	cmp    ebp,DWORD PTR [edi+0x3d]
  41e2c0:	int3   
  41e2c1:	add    BYTE PTR [edi],bl
  41e2c3:	add    BYTE PTR [eax],al
  41e2c5:	(bad)  
  41e2c6:	inc    DWORD PTR [eax]
  41e2c8:	sbb    edi,edi
  41e2ca:	call   DWORD PTR [edx]
  41e2cc:	cli    
  41e2cd:	push   ss
  41e2ce:	dec    ebx
  41e2cf:	dec    eax
  41e2d0:	add    DWORD PTR [eax],0x2c
  41e2d3:	inc    DWORD PTR [eax]
  41e2d5:	xchg   edi,edi
  41e2d7:	push   DWORD PTR ds:0x7b7f83ff
  41e2dd:	jb     0x41e2f2
  41e2df:	addr16 add bh,bh
  41e2e2:	and    eax,0x4e83cc
  41e2e7:	jmp    esi
  41e2e9:	or     DWORD PTR [ecx-0x2b85e283],0xffffffd5
  41e2f0:	or     esp,0x1a
  41e2f3:	add    bh,bh
  41e2f5:	out    0x0,al
  41e2f7:	add    dh,dh
  41e2f9:	(bad)  
  41e2fa:	jmp    FWORD PTR [ebx-0xd]
  41e2fd:	test   bh,bh
  41e2ff:	push   esp
  41e300:	inc    DWORD PTR [eax]
  41e302:	push   ebp
  41e303:	inc    DWORD PTR [eax]
  41e305:	cmp    bh,bh
  41e307:	add    BYTE PTR [edi-0x665dff34],ch
  41e30d:	ss in  eax,dx
  41e30f:	pop    ecx
  41e310:	dec    DWORD PTR [ecx-0x1affff4a]
  41e316:	(bad)  
  41e317:	push   DWORD PTR [ebx+0x0]
  41e31a:	add    BYTE PTR [ebx],bl
  41e31c:	sub    BYTE PTR [eax-0x1d],al
  41e31f:	aam    0x0
  41e321:	dec    DWORD PTR [eax-0x33fb0000]
  41e327:	add    BYTE PTR [edx-0x1],al
  41e32a:	add    BYTE PTR [edx+0xeafcec7],ah
  41e330:	inc    DWORD PTR [eax]
  41e332:	fiadd  DWORD PTR [eax]
  41e334:	inc    edx
  41e336:	inc    DWORD PTR [ebx-0x3800fff3]
  41e33c:	popf   
  41e33d:	mov    esi,DWORD PTR [ecx-0x347c001e]
  41e343:	int3   
  41e344:	dec    ebp
  41e346:	(bad)  
  41e347:	(bad)  
  41e348:	mov    esi,0xb644ffff
  41e34d:	cwde   
  41e34e:	push   cs
  41e34f:	sub    al,0x0
  41e351:	add    BYTE PTR [eax+eax*1-0xc200],ch
  41e358:	pop    DWORD PTR [ebx-0x5bea9101]
  41e35e:	and    al,0x25
  41e360:	add    BYTE PTR [ebx+0x48ff00b6],al
  41e366:	(bad)  
  41e367:	push   DWORD PTR [ebx+eax*4-0x6d38bc01]
  41e36e:	leave  
  41e36f:	pop    edi
  41e370:	int3   
  41e371:	call   FWORD PTR [ebx]
  41e373:	dec    esp
  41e375:	stos   BYTE PTR es:[edi],al
  41e376:	add    ah,cl
  41e378:	arpl   sp,cx
  41e37a:	sub    DWORD PTR [esi+0x387af556],0xffffffcc
  41e381:	sbb    DWORD PTR [edi],0xffffffff
  41e384:	call   FWORD PTR ds:0xcc448900
  41e38a:	call   DWORD PTR [edi+0x499c6b4c]
  41e390:	inc    DWORD PTR [eax]
  41e392:	icebp  
  41e393:	add    BYTE PTR [eax],al
  41e395:	pop    ss
  41e396:	cmp    edi,0x49
  41e399:	cmp    edi,0xffffffa1
  41e39c:	push   ds
  41e39d:	dec    ebx
  41e39e:	ror    ebx,cl
  41e3a0:	add    DWORD PTR [eax],0xffffff9a
  41e3a3:	(bad)  
  41e3a4:	(bad)  
  41e3a5:	mov    esp,0xff4c00ff
  41e3aa:	int3   
  41e3ab:	xor    dl,bl
  41e3ad:	xchg   ebp,eax
  41e3ae:	adc    eax,0x36ff895d
  41e3b3:	add    bh,bh
  41e3b5:	(bad)  
  41e3b6:	inc    DWORD PTR [eax]
  41e3b8:	jp     0x41e3ba
  41e3ba:	call   DWORD PTR [edi+0xb476d76]
  41e3c0:	add    bh,bh
  41e3c2:	idiv   bh
  41e3c4:	mov    DWORD PTR [edx-0x1],ebx
  41e3c7:	add    BYTE PTR [edx+0x2b7300ff],bh
  41e3cd:	daa    
  41e3ce:	aam    0x17
  41e3d0:	(bad)  
  41e3d1:	(bad)  
  41e3d2:	clc    
  41e3d3:	or     DWORD PTR [ecx-0x6400008c],0x0
  41e3da:	add    DWORD PTR [edi+0x7ad88099],0xffffffff
  41e3e1:	jmp    FWORD PTR [edi+edi*8-0x7cea7d]
  41e3e8:	sbb    al,0xff
  41e3ea:	add    BYTE PTR [edi-0x53],bl
  41e3ed:	pop    esi
  41e3ee:	test   al,0xe1
  41e3f0:	(bad)  
  41e3f1:	call   DWORD PTR [edi-0x707700]
  41e3f7:	inc    eax
  41e3f9:	(bad)  
  41e3fa:	(bad)  
  41e3fb:	jnp    0x41e3df
  41e3fd:	mov    al,ds:0x8300a9f5
  41e402:	lock dec esp
  41e405:	push   esp
  41e406:	add    DWORD PTR [eax],0x7
  41e409:	add    BYTE PTR [eax],al
  41e40b:	outs   dx,BYTE PTR ds:[esi]
  41e40c:	out    dx,al
  41e40d:	jecxz  0x41e3bd
  41e40f:	adc    al,BYTE PTR [eax]
  41e411:	add    dh,bh
  41e413:	or     esp,0x3f
  41e416:	(bad)  
  41e417:	call   DWORD PTR [edx-0x34]
  41e41a:	mov    DWORD PTR [ecx-0x34bb0da5],ecx
  41e420:	add    DWORD PTR [eax],0x3a
  41e423:	inc    DWORD PTR [ebx-0x30000d0]
  41e429:	add    bh,bh
  41e42b:	ror    DWORD PTR [ebp-0x238e21],0xcc
  41e432:	mov    cl,0x0
  41e434:	inc    DWORD PTR [esi]
  41e436:	add    BYTE PTR [eax],al
  41e438:	in     eax,0x0
  41e43a:	jmp    DWORD PTR [ebp+ecx*4-0x2e]
  41e43e:	jne    0x41e46a
  41e440:	int3   
  41e441:	add    BYTE PTR ds:0x6effff,al
  41e447:	call   FWORD PTR [esi+0x0]
  41e44a:	mov    DWORD PTR [ecx+ebx*1],ebx
  41e44d:	sbb    al,0x37
  41e44f:	popa   
  41e450:	inc    DWORD PTR [ebx+0x1e000038]
  41e456:	add    DWORD PTR [eax],0xffffffb1
  41e459:	int3   
  41e45a:	(bad)  
  41e45b:	std    
  41e45c:	int    0x1d
  41e45e:	cmp    al,0xb6
  41e460:	add    bh,bh
  41e462:	push   ebx
  41e463:	add    BYTE PTR [eax],al
  41e465:	xor    eax,DWORD PTR [eax]
  41e467:	add    BYTE PTR [edi-0x7d],al
  41e46a:	add    bh,ah
  41e46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e46d:	sub    cl,dl
  41e46f:	cmp    bh,0x89
  41e472:	and    DWORD PTR [ebx+0x97ff],eax
  41e478:	adc    edi,edi
  41e47a:	add    BYTE PTR [eax],bh
  41e47c:	repz push 0xffffffdd
  41e47f:	retf   0x8300
  41e482:	outs   dx,DWORD PTR ds:[esi]
  41e483:	add    bh,bh
  41e485:	loope  0x41e40a
  41e487:	int3   
  41e488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e489:	(bad)  
  41e48a:	inc    DWORD PTR [edx]
  41e48c:	stos   DWORD PTR es:[edi],eax
  41e48d:	(bad)  
  41e48e:	fcomip st,st(6)
  41e490:	add    BYTE PTR [eax],al
  41e492:	inc    edx
  41e493:	mov    edi,edi
  41e495:	popf   
  41e496:	add    BYTE PTR [eax],al
  41e498:	mov    al,ds:0xdc7683ff
  41e49d:	and    bh,BYTE PTR [edi+0xb]
  41e4a0:	add    DWORD PTR [eax],0x3f
  41e4a3:	add    bh,bh
  41e4a5:	push   edi
  41e4a6:	mov    edi,edi
  41e4a8:	and    bh,bh
  41e4aa:	jmp    DWORD PTR [edx]
  41e4ac:	jmp    0x41e441
  41e4ae:	xor    esi,DWORD PTR ds:0x899900ff
  41e4b4:	jmp    FWORD PTR [edx-0x1]
  41e4b7:	jmp    FWORD PTR [eax+eax*1]
  41e4ba:	sub    DWORD PTR [edi+0x48],0xffffff81
  41e4be:	mov    esp,0x3cffff14
  41e4c3:	inc    DWORD PTR [eax]
  41e4c5:	sbb    edi,edi
  41e4c7:	push   DWORD PTR [ebp+0x0]
  41e4ca:	add    BYTE PTR [edx+0x38708b6a],bh
  41e4d0:	inc    DWORD PTR [eax]
  41e4d2:	loop   0x41e4d3
  41e4d4:	int3   
  41e4d5:	push   ecx
  41e4d6:	add    BYTE PTR [eax],al
  41e4d8:	scas   al,BYTE PTR es:[edi]
  41e4d9:	inc    DWORD PTR [eax]
  41e4db:	inc    esp
  41e4dc:	and    al,0x13
  41e4de:	fiadd  WORD PTR gs:[eax]
  41e4e1:	xor    DWORD PTR [ebx-0x7c5f7601],0xffffffff
  41e4e8:	cli    
  41e4e9:	mov    edi,edi
  41e4eb:	(bad)  
  41e4ec:	retf   
  41e4ed:	(bad)  
  41e4ee:	in     al,dx
  41e4ef:	ror    DWORD PTR [ecx-0xee01],0xcf
  41e4f6:	(bad)  
  41e4f7:	(bad)  
  41e4f8:	in     al,dx
  41e4f9:	inc    DWORD PTR [eax]
  41e4fb:	ss adc edx,eax
  41e4fe:	or     DWORD PTR [eax+0xf800ff],edi
  41e504:	add    BYTE PTR [ecx-0x1],dh
  41e507:	(bad)  
  41e508:	cmp    esp,ecx
  41e50a:	sub    DWORD PTR [edi+0xa],0xffffffe4
  41e50e:	cmp    dh,BYTE PTR [eax+eax*1-0xff7201]
  41e515:	lods   eax,DWORD PTR ds:[esi]
  41e516:	(bad)  
  41e517:	inc    ebx
  41e519:	add    BYTE PTR [eax],al
  41e51b:	shld   DWORD PTR [edx-0xffbc35],edi,0xb
  41e523:	add    BYTE PTR [ebx+0x16ff8382],al
  41e529:	(bad)  
  41e52a:	(bad)  
  41e52b:	jl     0x41e4bf
  41e52d:	scas   al,BYTE PTR es:[edi]
  41e52e:	es push esp
  41e530:	cmp    edi,0x63
  41e533:	dec    esp
  41e535:	cmp    al,BYTE PTR [eax]
  41e537:	dec    DWORD PTR [edi]
  41e539:	cmp    edi,0xffffffcf
  41e53c:	sti    
  41e53d:	out    0x6a,eax
  41e53f:	push   esp
  41e540:	add    DWORD PTR [eax],0xffffffe4
  41e543:	dec    esp
  41e545:	inc    esi
  41e546:	int3   
  41e547:	(bad)  
  41e548:	jp     0x41e549
  41e54a:	push   ebp
  41e54c:	xor    eax,0x65bcd2
  41e551:	call   DWORD PTR [edx]
  41e553:	add    bh,bh
  41e555:	into   
  41e556:	inc    DWORD PTR [eax]
  41e558:	or     DWORD PTR [ebx+0x48b62e83],eax
  41e55e:	mov    ebp,0x31ffcc9a
  41e563:	int3   
  41e564:	xor    DWORD PTR [esp+ecx*8+0xff2bff],0x53
  41e56c:	push   edx
  41e56d:	push   es
  41e56e:	out    dx,eax
  41e56f:	inc    ebp
  41e570:	int3   
  41e571:	add    BYTE PTR [edi+0x0],ch
  41e574:	add    BYTE PTR [edx-0x1],dh
  41e577:	or     DWORD PTR [ebx+0x33c4ff00],0xffffffb9
  41e57e:	pop    ecx
  41e57f:	retf   
  41e580:	inc    DWORD PTR [ebx+0x4983cc34]
  41e586:	inc    DWORD PTR [ebx-0x1eff00c4]
  41e58c:	cdq    
  41e58d:	cmp    al,0x45
  41e58f:	push   esi
  41e590:	(bad)  
  41e591:	jmp    FWORD PTR [ebp-0x33730034]
  41e597:	(bad)  
  41e598:	cld    
  41e599:	(bad)  
  41e59a:	(bad)  
  41e59b:	out    dx,al
  41e59c:	nop
  41e59d:	jle    0x41e578
  41e59f:	scas   al,BYTE PTR es:[edi]
  41e5a0:	add    bh,bh
  41e5a2:	jns    0x41e5a4
  41e5a4:	add    BYTE PTR [ebx],al
  41e5a6:	cmp    edi,0xffffffa3
  41e5a9:	add    BYTE PTR [ebx+0x2a775dcc],al
  41e5af:	pop    es
  41e5b0:	add    bh,bh
  41e5b2:	push   ecx
  41e5b3:	add    DWORD PTR [ebx-0x640000fd],0xffffffff
  41e5ba:	jmp    FWORD PTR [ebp+0x1c943430]
  41e5c0:	inc    DWORD PTR [eax]
  41e5c2:	pop    ebp
  41e5c3:	add    bh,bh
  41e5c5:	fwait
  41e5c6:	add    ah,cl
  41e5c8:	jle    0x41e5ca
  41e5ca:	sbb    DWORD PTR [eax-0x2deb4dc0],0x0
  41e5d1:	add    BYTE PTR [edi-0x1],al
  41e5d4:	add    BYTE PTR [eax-0x7d],ch
  41e5d7:	add    BYTE PTR [ebp-0x1],al
  41e5da:	add    BYTE PTR [edi+0x5a],al
  41e5dd:	dec    ebx
  41e5de:	outs   dx,DWORD PTR ds:[esi]
  41e5df:	xchg   ecx,eax
  41e5e0:	inc    DWORD PTR [eax]
  41e5e2:	pop    edi
  41e5e3:	add    BYTE PTR [ecx-0x6d7cff97],cl
  41e5e9:	add    bh,bh
  41e5eb:	(bad)  
  41e5ec:	je     0x41e659
  41e5ee:	xor    al,0x49
  41e5f0:	add    DWORD PTR [eax],0x78
  41e5f3:	add    bh,bh
  41e5f5:	int    0x0
  41e5f7:	call   DWORD PTR [ecx-0x1]
  41e5fa:	call   FWORD PTR [ebp-0x144b8567]
  41e600:	int3   
  41e601:	add    BYTE PTR [edx-0x34],ch
  41e604:	add    BYTE PTR [eax+eax*1-0x1],bl
  41e608:	add    eax,0x72eeffff
  41e60d:	fcmovb st,st(4)
  41e60f:	xor    al,BYTE PTR [eax]
  41e611:	dec    DWORD PTR [ebx]
  41e613:	(bad)  
  41e614:	(bad)  
  41e615:	fadd   QWORD PTR [ebx-0xff9101]
  41e61b:	rol    esp,cl
  41e61d:	in     eax,dx
  41e61e:	lods   eax,DWORD PTR es:[esi]
  41e620:	inc    DWORD PTR [eax]
  41e622:	mov    al,BYTE PTR [eax]
  41e624:	add    BYTE PTR [eax-0x1],ch
  41e627:	int3   
  41e628:	in     al,0x83
  41e62a:	add    BYTE PTR [ebp-0x13061378],ch
  41e630:	add    ah,cl
  41e632:	jo     0x41e633
  41e634:	add    ah,dh
  41e636:	add    BYTE PTR [eax],al
  41e638:	pop    esi
  41e639:	inc    DWORD PTR [ebx+0x75cde5ea]
  41e63f:	adc    bh,bh
  41e641:	int3   
  41e642:	and    al,0x0
  41e644:	add    BYTE PTR [edi+0x0],bl
  41e647:	call   DWORD PTR [edx]
  41e649:	add    BYTE PTR [ebx-0x5ded2604],al
  41e64f:	arpl   di,di
  41e651:	sub    edi,0xffffffff
  41e654:	add    dh,al
  41e656:	cmp    edi,0x5a
  41e659:	add    ah,cl
  41e65b:	call   0xead3e7f6
  41e660:	(bad)  
  41e661:	dec    DWORD PTR [eax-0xcc0000]
  41e667:	add    ch,al
  41e669:	dec    esp
  41e66b:	inc    esi
  41e66c:	stos   DWORD PTR es:[edi],eax
  41e66d:	pop    ebp
  41e66e:	pop    ebp
  41e66f:	sub    edi,edi
  41e671:	mov    edi,ebx
  41e673:	(bad)  
  41e674:	dec    DWORD PTR [ebx-0x7d]
  41e677:	call   FWORD PTR [edi]
  41e679:	add    DWORD PTR [eax],0x1a
  41e67c:	sub    edx,DWORD PTR [esi]
  41e67e:	test   esi,esp
  41e680:	inc    DWORD PTR [eax]
  41e682:	push   0x0
  41e684:	push   DWORD PTR [ebp-0x7d]
  41e687:	jmp    FWORD PTR [ebp+0x0]
  41e68a:	call   DWORD PTR [edx-0x63d9722e]
  41e690:	dec    DWORD PTR [ecx-0x5cffff7e]
  41e696:	int3   
  41e697:	(bad)  
  41e698:	jge    0x41e699
  41e69a:	xor    DWORD PTR [ecx+0xf],0x4a
  41e69e:	cs jnp 0x41e6a0
  41e6a1:	call   DWORD PTR [eax]
  41e6a3:	add    bh,bh
  41e6a5:	out    0xff,eax
  41e6a7:	add    BYTE PTR [edx-0x7d],ch
  41e6aa:	call   DWORD PTR [ebx]
  41e6ac:	pusha  
  41e6ad:	sub    BYTE PTR [edi-0x4eff00e8],dh
  41e6b3:	inc    DWORD PTR [ebx-0x2dff00a1]
  41e6b9:	mov    esp,ecx
  41e6bb:	int    0x8
  41e6bd:	push   edi
  41e6be:	cmp    bh,BYTE PTR [eax+eax*1]
  41e6c1:	inc    DWORD PTR [ebp-0x7cef7d00]
  41e6c7:	call   FWORD PTR ds:0xfadcff00
  41e6cd:	or     BYTE PTR [edx],al
  41e6cf:	add    edi,edi
  41e6d1:	add    bh,bh
  41e6d3:	mov    DWORD PTR [eax],eax
  41e6d5:	enter  0xcc89,0xf8
  41e6d9:	add    bh,bh
  41e6db:	pusha  
  41e6dc:	jb     0x41e74d
  41e6de:	xchg   esp,eax
  41e6df:	(bad)  
  41e6e2:	xor    eax,0x14ff00
  41e6e7:	add    BYTE PTR [edi+edi*8-0x7d],al
  41e6eb:	mov    ecx,0x29ad6b10
  41e6f0:	(bad)  
  41e6f1:	inc    DWORD PTR [ebx+eax*4-0x7400]
  41e6f8:	mov    ch,0xff
  41e6fa:	jmp    DWORD PTR [ecx-0x42cf7e4e]
  41e700:	dec    esp
  41e702:	sub    bh,bh
  41e704:	add    BYTE PTR [edi],ch
  41e706:	add    BYTE PTR [ebx+0x33898359],al
  41e70c:	mov    edx,0xff9a5ed5
  41e711:	(bad)  
  41e712:	jg     0x41e714
  41e714:	call   FWORD PTR [ecx-0x567c01]
  41e71a:	jmp    DWORD PTR [esi+edx*4+0x21b57a]
  41e721:	jmp    FWORD PTR [edi-0x1]
  41e724:	add    BYTE PTR [ebx],dh
  41e726:	add    BYTE PTR [ecx-0x78ff00a9],cl
  41e72c:	lea    ebp,[esi+ecx*4+0x6]
  41e730:	int3   
  41e731:	sub    DWORD PTR [ebp-0x1],0xffffff89
  41e735:	xor    eax,0x12ffcc
  41e73a:	add    BYTE PTR [ebx-0x8a55b28],ah
  41e740:	(bad)  
  41e741:	(bad)  
  41e742:	jp     0x41e744
  41e744:	inc    DWORD PTR [edi+edi*8-0x1]
  41e748:	jo     0x41e74a
  41e74a:	add    DWORD PTR [eax-0x37],0xffffffe3
  41e74e:	std    
  41e74f:	imul   edi,edi,0xffffc000
  41e755:	add    cl,BYTE PTR [ecx-0x334301]
  41e75b:	add    al,dh
  41e75d:	mov    edi,cs
  41e75f:	(bad)  
  41e760:	(bad)  
  41e761:	jmp    edx
  41e763:	(bad)  
  41e764:	push   DWORD PTR [esp+ecx*8+0xfffeff]
  41e76b:	ja     0x41e797
  41e76d:	ja     0x41e795
  41e76f:	add    DWORD PTR [eax],0xffffffff
  41e772:	clc    
  41e773:	add    bh,bh
  41e775:	jnp    0x41e776
  41e777:	add    BYTE PTR [esi],ch
  41e779:	mov    DWORD PTR [ecx-0x28b1883b],ecx
  41e77f:	(bad)  
  41e780:	(bad)  
  41e781:	dec    DWORD PTR [edx-0x3d0000]
  41e787:	inc    ebx
  41e789:	int3   
  41e78a:	int3   
  41e78b:	repnz sbb BYTE PTR [ecx-0x6e],bh
  41e78f:	int    0xff
  41e791:	add    BYTE PTR [edx-0x7cfb007d],dh
  41e797:	add    BYTE PTR [edx],bl
  41e799:	or     esp,0x18
  41e79c:	sti    
  41e79d:	add    al,0xee
  41e79f:	adc    al,BYTE PTR [eax]
  41e7a1:	mov    DWORD PTR [eax],ebp
  41e7a3:	add    DWORD PTR [eax],0x67
  41e7a6:	add    bh,bh
  41e7a8:	mov    al,0x0
  41e7aa:	int3   
  41e7ab:	gs popf 
  41e7ad:	call   0x2f:0x83ff47e3
  41e7b4:	call   eax
  41e7b6:	inc    DWORD PTR [eax]
  41e7b8:	sahf   
  41e7b9:	(bad)  
  41e7ba:	jmp    FWORD PTR [esi-0x69]
  41e7bd:	out    0x7b,al
  41e7bf:	je     0x41e7c0
  41e7c1:	add    DWORD PTR [edi+edi*8-0x77],0x7d
  41e7c6:	dec    DWORD PTR [ecx+0x2d00ff40]
  41e7cc:	daa    
  41e7cd:	icebp  
  41e7ce:	and    al,0xcd
  41e7d0:	(bad)  
  41e7d1:	inc    DWORD PTR [ebp+0x35ffff]
  41e7d7:	dec    DWORD PTR [ebx]
  41e7d9:	inc    DWORD PTR [ebx-0x623489bf]
  41e7df:	jmp    0x41e7e0
  41e7e1:	add    dl,ah
  41e7e3:	inc    DWORD PTR [ebx+0x5fccff5f]
  41e7e9:	inc    DWORD PTR [eax]
  41e7eb:	outs   dx,DWORD PTR ds:[esi]
  41e7ec:	jmp    0xe4cc:0xb1036d
  41e7f3:	add    BYTE PTR [eax],al
  41e7f5:	imul   ecx,esp,0xffffb5ff
  41e7fb:	xchg   ebx,eax
  41e7fc:	pop    cx
  41e7fe:	cmc    
  41e7ff:	pop    eax
  41e800:	(bad)  
  41e801:	inc    DWORD PTR [eax]
  41e803:	(bad)  
  41e804:	dec    DWORD PTR [edi+edi*8-0x7d01]
  41e80b:	dec    edi
  41e80c:	mov    DWORD PTR [eax],eax
  41e80e:	and    eax,0xd489cc48
  41e813:	int3   
  41e814:	add    bl,ch
  41e816:	(bad)  
  41e817:	dec    DWORD PTR [esi+0x4fedffff]
  41e81d:	ficomp DWORD PTR [edx+0x70]
  41e820:	add    BYTE PTR [ecx-0x6c760085],cl
  41e826:	inc    DWORD PTR [eax]
  41e828:	fiadd  DWORD PTR [ebx+0xa03c89]
  41e82e:	mov    edx,0xc7ffffbf
  41e833:	inc    DWORD PTR [eax]
  41e835:	mov    ah,0x83
  41e837:	mov    ecx,edx
  41e839:	inc    DWORD PTR [eax]
  41e83b:	cmp    eax,0xced4f171
  41e840:	inc    DWORD PTR [eax]
  41e842:	and    al,0x83
  41e844:	add    BYTE PTR [ebx-0xa60100],al
  41e84a:	add    BYTE PTR ds:0x25c9f8d,dh
  41e850:	int3   
  41e851:	(bad)  
  41e852:	cmp    bh,bh
  41e854:	mov    ebx,esi
  41e856:	add    BYTE PTR [eax],al
  41e858:	test   eax,0x971cccff
  41e85d:	jecxz  0x41e838
  41e85f:	ss int3 
  41e861:	add    cl,bh
  41e863:	(bad)  
  41e864:	jmp    DWORD PTR ds:0xff130000
  41e86a:	call   esp
  41e86c:	and    edi,DWORD PTR [ebp+edi*4-0x5f0000f2]
  41e873:	mov    edi,edi
  41e875:	inc    ebp
  41e876:	(bad)  
  41e877:	call   FWORD PTR [ebx+0x3aad83cc]
  41e87d:	call   0x7c:0xffff2b3f
  41e884:	inc    DWORD PTR [esi-0x7d]
  41e887:	add    BYTE PTR [eax-0x479e7c7d],ah
  41e88d:	sub    eax,0xffd6e7
  41e892:	test   bh,bh
  41e894:	jmp    DWORD PTR [ebp-0xb90001]
  41e89a:	(bad)  
  41e89b:	jmp    0x5e2b49cd
  41e8a0:	add    ah,cl
  41e8a2:	stc    
  41e8a3:	(bad)  
  41e8a4:	(bad)  
  41e8a5:	cmp    bh,bh
  41e8a7:	jmp    DWORD PTR [ebx]
  41e8a9:	inc    DWORD PTR [eax]
  41e8ab:	fsub   st,st(1)
  41e8ad:	mov    ebp,0x83cca347
  41e8b2:	daa    
  41e8b3:	int3   
  41e8b4:	dec    DWORD PTR [ecx-0xf50077]
  41e8ba:	(bad)  
  41e8bb:	in     eax,dx
  41e8bc:	lahf   
  41e8bd:	sti    
  41e8be:	mov    ah,BYTE PTR [eax]
  41e8c0:	(bad)  
  41e8c1:	jmp    FWORD PTR [edx+0x0]
  41e8c4:	int3   
  41e8c5:	outs   dx,DWORD PTR ds:[esi]
  41e8c6:	add    BYTE PTR [ecx+0x6983ff02],cl
  41e8cc:	mov    WORD PTR [esi],es
  41e8ce:	push   esp
  41e8cf:	sbb    DWORD PTR [eax],eax
  41e8d1:	adc    DWORD PTR [edi],0xffffff83
  41e8d4:	mov    ecx,eax
  41e8d6:	inc    DWORD PTR [ebx+0x35ff0032]
  41e8dc:	mov    BYTE PTR [eax+0x89e547],ch
  41e8e2:	mov    al,ds:0x8bffff
  41e8e7:	add    BYTE PTR [ebp-0x77],ah
  41e8ea:	cmp    DWORD PTR [edi],0xffffffb9
  41e8ed:	sahf   
  41e8ee:	js     0x41e963
  41e8f0:	(bad)  
  41e8f1:	(bad)  
  41e8f2:	cld    
  41e8f3:	mov    edi,edi
  41e8f5:	daa    
  41e8f6:	inc    DWORD PTR [eax]
  41e8f8:	lock inc DWORD PTR [eax]
  41e8fb:	pop    esi
  41e8fc:	or     DWORD PTR [esi-0x7c333e73],edx
  41e902:	jne    0x41e904
  41e904:	call   FWORD PTR [edi]
  41e906:	(bad)  
  41e907:	jmp    FWORD PTR [edi+edi*8+0x44561083]
  41e90e:	call   0xcc:0xccff004d
  41e915:	(bad)  
  41e918:	dec    esi
  41e919:	add    BYTE PTR [ebx-0x9c04c33],al
  41e91f:	inc    eax
  41e920:	inc    DWORD PTR [eax]
  41e922:	push   ds
  41e923:	int3   
  41e924:	(bad)  
  41e925:	mov    edx,0xccde83ff
  41e92a:	push   esi
  41e92c:	rcr    DWORD PTR ds:0xff005c55,1
  41e932:	rol    BYTE PTR [ebx-0x76ffd534],cl
  41e938:	mov    bh,0xff
  41e93a:	int3   
  41e93b:	popa   
  41e93c:	aad    0x70
  41e93e:	push   ebp
  41e93f:	imul   edi,edi,0xffffffcc
  41e942:	mov    ah,0x83
  41e944:	call   FWORD PTR [eax+0x0]
  41e947:	(bad)  
  41e948:	jp     0x41e94a
  41e94a:	add    BYTE PTR [ebp-0x4a],ah
  41e94d:	add    esi,DWORD PTR [edi]
  41e94f:	pop    ebx
  41e950:	mov    edi,edi
  41e952:	push   ebp
  41e953:	(bad)  
  41e954:	push   DWORD PTR [ebx-0x76357c01]
  41e95a:	add    BYTE PTR [ebx+esi*8+0x4c],dh
  41e95e:	(bad)  
  41e95f:	rol    DWORD PTR [eax],1
  41e961:	jmp    FWORD PTR [eax+0x0]
  41e964:	jmp    FWORD PTR [ebx]
  41e966:	inc    DWORD PTR [eax]
  41e968:	sahf   
  41e969:	add    DWORD PTR [ebx-0x4bf699a3],0x61
  41e970:	add    BYTE PTR [ebx+0x1889ffb1],al
  41e976:	(bad)  
  41e977:	(bad)  
  41e978:	(bad)  
  41e979:	dec    esp
  41e97b:	push   0x5c
  41e97d:	jne    0x41e997
  41e97f:	fcos   
  41e981:	add    BYTE PTR [edi],al
  41e983:	dec    esp
  41e985:	sbb    BYTE PTR [ebx+0x8311ff],al
  41e98b:	lahf   
  41e98c:	(bad)  
  41e98d:	sbb    dh,al
  41e98f:	int    0x89
  41e991:	and    DWORD PTR [esi-0x7d],0xffffffff
  41e995:	aam    0xff
  41e997:	add    BYTE PTR [ecx+0x571e83ff],ch
  41e99d:	add    bh,BYTE PTR [ebx-0x1533ff51]
  41e9a3:	or     esp,0x4b
  41e9a6:	cmp    edi,0x47
  41e9a9:	inc    DWORD PTR [eax]
  41e9ab:	pop    es
  41e9ac:	dec    eax
  41e9ad:	xor    eax,0xffffcaa0
  41e9b2:	add    DWORD PTR [ebx-0xa300],eax
  41e9b8:	jmp    0x41e9b9
  41e9ba:	inc    DWORD PTR [eax-0x5274f5d0]
  41e9c0:	inc    DWORD PTR [eax]
  41e9c2:	sbb    al,0x0
  41e9c4:	dec    DWORD PTR [edi+edi*8-0x7d]
  41e9c8:	inc    eax
  41e9c9:	add    bh,bh
  41e9cb:	push   ds
  41e9cc:	xor    ch,dh
  41e9ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9cf:	fwait
  41e9d0:	add    DWORD PTR [eax],0xffffffc6
  41e9d3:	add    bh,bh
  41e9d5:	sahf   
  41e9d6:	(bad)  
  41e9d7:	call   FWORD PTR [eax-0x723bff34]
  41e9dd:	sti    
  41e9de:	xor    BYTE PTR [ebx-0x1],al
  41e9e1:	jmp    DWORD PTR [eax]
  41e9e3:	add    BYTE PTR [eax],al
  41e9e5:	(bad)  
  41e9e6:	or     esp,0xffffffa9
  41e9e9:	dec    esp
  41e9eb:	ja     0x41ea5c
  41e9ed:	sub    al,0x63
  41e9ef:	sub    bh,bh
  41e9f1:	call   DWORD PTR [ebp+0x5e0083]
  41e9f7:	(bad)  
  41e9f8:	stc    
  41e9f9:	(bad)  
  41e9fa:	inc    DWORD PTR [ebp-0x68]
  41e9fd:	mov    bl,BYTE PTR [ebx-0x40]
  41ea00:	(bad)  
  41ea01:	jmp    DWORD PTR [edx]
  41ea03:	add    DWORD PTR [eax],0x18
  41ea06:	mov    edi,edi
  41ea08:	push   es
  41ea09:	inc    DWORD PTR [eax]
  41ea0b:	mov    ecx,0x83ffdf9a
  41ea10:	inc    DWORD PTR [eax]
  41ea12:	sbb    esp,ecx
  41ea14:	int3   
  41ea15:	out    0x0,al
  41ea17:	jmp    DWORD PTR [ebx+0x7969cc00]
  41ea1d:	dec    edi
  41ea1e:	mov    eax,DWORD PTR [edx]
  41ea20:	inc    DWORD PTR [eax]
  41ea22:	and    DWORD PTR [ebx-0x336a01],eax
  41ea28:	and    esp,ecx
  41ea2a:	mov    DWORD PTR [ecx-0x9],eax
  41ea2d:	cmp    eax,0xff1092
  41ea32:	loopne 0x41ea33
  41ea34:	mov    DWORD PTR [eax],esp
  41ea36:	dec    esp
  41ea38:	std    
  41ea39:	int3   
  41ea3a:	(bad)  
  41ea3b:	std    
  41ea3c:	clc    
  41ea3d:	or     al,0xaa
  41ea3f:	inc    DWORD PTR [eax]
  41ea41:	(bad)  
  41ea42:	fdivp  st(7),st
  41ea44:	or     ebp,0xffffffff
  41ea47:	call   FWORD PTR [ebx+0x2577ffff]
  41ea4d:	fwait
  41ea4e:	or     DWORD PTR [ebp-0xeb0001],0xffffffff
  41ea55:	sbb    bh,bh
  41ea57:	cmp    ebx,0xffffffff
  41ea5a:	(bad)  
  41ea5b:	fcom   DWORD PTR [ecx-0x7cdfc661]
  41ea61:	call   ecx
  41ea63:	(bad)  
  41ea64:	dec    DWORD PTR [ecx]
  41ea66:	add    bh,bh
  41ea68:	push   es
  41ea69:	(bad)  
  41ea6a:	jmp    eax
  41ea6c:	fild   DWORD PTR [ecx+0x4]
  41ea6f:	cmp    edi,0xffffffcc
  41ea72:	adc    BYTE PTR [ebx-0x7c7c7801],al
  41ea78:	pop    edx
  41ea79:	add    bh,bh
  41ea7b:	ss fwait
  41ea7d:	mov    BYTE PTR [edi+edi*8-0xba007d],0xff
  41ea85:	inc    DWORD PTR ds:[eax]
  41ea88:	pop    esp
  41ea89:	add    bh,bh
  41ea8b:	jo     0x41ea40
  41ea8d:	cdq    
  41ea8e:	repnz int 0xff
  41ea91:	int3   
  41ea92:	adc    al,BYTE PTR [eax]
  41ea94:	dec    DWORD PTR [edi+edi*8]
  41ea97:	add    al,bh
  41ea99:	add    bh,bh
  41ea9b:	cmp    ebp,edx
  41ea9d:	ret    
  41ea9e:	sub    eax,0x84ffff35
  41eaa3:	add    DWORD PTR [eax],0xffffffb9
  41eaa6:	cmp    edi,0xffffffb8
  41eaa9:	inc    DWORD PTR [eax]
  41eaab:	call   esi
  41eaad:	stc    
  41eaae:	mov    al,ds:0x8e000053
  41eab3:	(bad)  
  41eab4:	jmp    DWORD PTR [ecx-0x333dff01]
  41eaba:	add    BYTE PTR [ecx],bh
  41eabc:	outs   dx,BYTE PTR ds:[esi]
  41eabd:	sar    ebp,0x8c
  41eac0:	mov    DWORD PTR [eax],eax
  41eac2:	add    edi,edi
  41eac4:	push   ebp
  41eac6:	inc    DWORD PTR [ebx+0x5ccff64]
  41eacc:	mov    edi,0x1a0f4d
  41ead1:	jmp    FWORD PTR [ebp-0x1]
  41ead4:	add    BYTE PTR [eax-0x1],bh
  41ead7:	add    BYTE PTR [esi+0x0],ch
  41eada:	add    cl,bl
  41eadc:	pushf  
  41eadd:	dec    esp
  41eade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eadf:	and    bh,bh
  41eae1:	int3   
  41eae2:	mov    bh,bh
  41eae4:	add    al,ah
  41eae6:	add    BYTE PTR [eax],al
  41eae8:	mov    ?,edi
  41eaea:	jmp    ebx
  41eaec:	push   cs
  41eaed:	aas    
  41eaee:	shr    eax,cl
  41eaf0:	add    BYTE PTR [eax],al
  41eaf2:	lock (bad) 
  41eaf4:	call   edx
  41eaf6:	add    BYTE PTR [eax],al
  41eaf8:	loopne 0x41eaf9
  41eafa:	add    BYTE PTR [esi-0x59b2146b],bh
  41eb00:	inc    DWORD PTR [ebx-0x59000022]
  41eb06:	add    bh,bh
  41eb08:	mov    ds:0xcd9089ff,al
  41eb0d:	xor    bl,bl
  41eb0f:	mov    cl,0xcc
  41eb11:	jmp    esi
  41eb13:	(bad)  
  41eb14:	push   ecx
  41eb16:	inc    DWORD PTR [eax]
  41eb18:	cmp    edi,0x23dedcff
  41eb1e:	das    
  41eb1f:	(bad)  
  41eb20:	inc    DWORD PTR [eax]
  41eb22:	inc    edx
  41eb23:	(bad)  
  41eb24:	(bad)  
  41eb25:	jnp    0x41eaaa
  41eb27:	add    BYTE PTR [edi+edi*8],dl
  41eb2a:	add    BYTE PTR [ecx],bl
  41eb2c:	pushf  
  41eb2d:	(bad)  
  41eb2e:	mov    cl,0x80
  41eb30:	(bad)  
  41eb31:	dec    eax
  41eb33:	add    BYTE PTR [ebx+0x3e00000f],al
  41eb39:	(bad)  
  41eb3a:	dec    DWORD PTR [edx+ebp*1]
  41eb3d:	adc    ch,BYTE PTR [ebp-0x6400ffcf]
  41eb43:	inc    DWORD PTR [eax]
  41eb45:	pop    ds
  41eb46:	(bad)  
  41eb47:	inc    DWORD PTR [eax]
  41eb49:	cmp    edi,0xffffffe4
  41eb4c:	pop    es
  41eb4d:	adc    cl,BYTE PTR [edx+0x6d]
  41eb50:	int3   
  41eb51:	(bad)  
  41eb52:	cmp    edi,edi
  41eb54:	jmp    DWORD PTR [esi]
  41eb56:	inc    DWORD PTR [eax]
  41eb58:	lea    eax,[eax]
  41eb5a:	call   FWORD PTR [ebx]
  41eb5c:	xchg   esi,eax
  41eb5d:	test   BYTE PTR [eax+0x79],ah
  41eb60:	int3   
  41eb61:	int3   
  41eb62:	inc    esi
  41eb63:	dec    esp
  41eb65:	out    0x0,eax
  41eb67:	adc    DWORD PTR [ecx-0x7d],0x0
  41eb6b:	mov    esp,0xeb18a36b
  41eb70:	(bad)  
  41eb71:	(bad)  
  41eb72:	in     al,dx
  41eb73:	mov    edi,edi
  41eb75:	xchg   bh,bh
  41eb77:	xor    edx,0xffffffff
  41eb7a:	int3   
  41eb7b:	sbb    esi,esp
  41eb7d:	stos   BYTE PTR es:[edi],al
  41eb7e:	add    ecx,DWORD PTR [ecx]
  41eb80:	add    ah,cl
  41eb82:	fadd   QWORD PTR [ebx-0x76006c01]
  41eb88:	dec    esi
  41eb89:	add    BYTE PTR [eax],al
  41eb8b:	add    cl,bl
  41eb8d:	mov    eax,0xffff8927
  41eb92:	sub    al,BYTE PTR [eax]
  41eb94:	add    DWORD PTR [ecx],0xffffff89
  41eb97:	add    BYTE PTR [ebx+0x1146ccff],cl
  41eb9d:	ins    BYTE PTR es:[edi],dx
  41eb9e:	cmp    DWORD PTR [ebx],edi
  41eba0:	inc    DWORD PTR [ebx+0x28ff0005]
  41eba6:	inc    DWORD PTR [ebx-0x97c7c6b]
  41ebac:	jb     0x41ec21
  41ebae:	aaa    
  41ebaf:	outs   dx,BYTE PTR ds:[esi]
  41ebb0:	add    bh,bh
  41ebb2:	inc    esi
  41ebb3:	inc    DWORD PTR [ebx-0x4e7c33d6]
  41ebb9:	add    bh,bh
  41ebbb:	rcr    DWORD PTR [edi+0xb4d089],cl
  41ebc1:	call   DWORD PTR [ebx-0x1]
  41ebc4:	int3   
  41ebc5:	xor    edi,edi
  41ebc7:	(bad)  
  41ebc8:	jnp    0x41ebc9
  41ebca:	(bad)  
  41ebcb:	cmp    DWORD PTR [edi+0x49],esp
  41ebce:	cdq    
  41ebcf:	and    al,0xff
  41ebd1:	dec    DWORD PTR [ecx+0xf8ffff]
  41ebd7:	inc    DWORD PTR [ebp+0x6a750000]
  41ebdd:	mov    ch,0x7d
  41ebdf:	fiadd  WORD PTR [eax]
  41ebe1:	jmp    ebx
  41ebe3:	int3   
  41ebe4:	(bad)  
  41ebe5:	mov    esi,0xff82ffff
  41ebea:	add    ch,al
  41ebec:	jo     0x41ec45
  41ebee:	loop   0x41ebd2
  41ebf0:	add    bh,bh
  41ebf2:	push   eax
  41ebf3:	inc    DWORD PTR [eax]
  41ebf5:	mov    esi,0xff4883ff
  41ebfa:	inc    DWORD PTR [eax]
  41ebfc:	scas   eax,DWORD PTR es:[edi]
  41ebfd:	test   al,0xb8
  41ebff:	or     al,0x83
  41ec01:	add    bh,dl
  41ec03:	(bad)  
  41ec04:	push   DWORD PTR [eax]
  41ec06:	mov    DWORD PTR [eax],eax
  41ec08:	xor    eax,0xf0e8ffff
  41ec0d:	jae    0x41ebc5
  41ec0f:	sub    DWORD PTR [eax],eax
  41ec11:	add    BYTE PTR [ebx+0x830000],ah
  41ec17:	(bad)  
  41ec18:	fild   DWORD PTR [eax]
  41ec1a:	add    ebx,0xfffffffc
  41ec1d:	ret    
  41ec1e:	pop    ebx
  41ec1f:	mov    ?,edi
  41ec21:	jmp    esp
  41ec23:	add    BYTE PTR [eax],al
  41ec25:	test   DWORD PTR [eax],eax
  41ec27:	xor    DWORD PTR [edi+edi*8+0x9291900],0xffffff8b
  41ec2f:	test   al,0xff
  41ec31:	inc    ecx
  41ec33:	int3   
  41ec34:	push   DWORD PTR [ecx]
  41ec36:	add    ah,cl
  41ec38:	lods   eax,DWORD PTR ds:[esi]
  41ec39:	mov    DWORD PTR [eax],eax
  41ec3b:	sub    eax,0x74e56a5d
  41ec40:	add    bh,bh
  41ec42:	or     esp,0x83004f00
  41ec48:	mov    eax,DWORD PTR [eax]
  41ec4a:	mov    DWORD PTR [ecx+esi*1+0x5d],ecx
  41ec4e:	mov    al,0x4a
  41ec50:	add    DWORD PTR [ebx+0x7c0000da],0x0
  41ec57:	mov    DWORD PTR [eax+eax*1+0x45d58800],esi
  41ec5e:	retf   
  41ec5f:	cmp    BYTE PTR [ecx-0xffe501],cl
  41ec65:	add    BYTE PTR [eax],al
  41ec67:	dec    DWORD PTR [ecx+0x0]
  41ec6a:	sub    ebx,0x15
  41ec6d:	push   edx
  41ec6e:	and    eax,0x20ffffae
  41ec73:	(bad)  
  41ec74:	jmp    DWORD PTR [edi]
  41ec76:	cmp    edi,0x14
  41ec79:	(bad)  
  41ec7a:	push   DWORD PTR [edx-0xd122570]
  41ec80:	(bad)  
  41ec81:	jmp    FWORD PTR [eax-0x7c8f3400]
  41ec87:	inc    DWORD PTR [edi+0x0]
  41ec8a:	dec    ebp
  41ec8c:	and    DWORD PTR [ebx-0x17],ebx
  41ec8f:	mov    ch,0xff
  41ec91:	and    DWORD PTR [esi-0x1],0xffffffcc
  41ec95:	mov    bh,0x89
  41ec97:	or     DWORD PTR [ecx+0x6cce0000],0x25
  41ec9e:	rol    DWORD PTR [ecx-0x76a2007d],cl
  41eca4:	int3   
  41eca5:	sub    edi,edi
  41eca7:	add    BYTE PTR [ebx-0x1],cl
  41ecaa:	int3   
  41ecab:	mov    esp,0x5dad14f9
  41ecb0:	dec    esp
  41ecb2:	jns    0x41ecb4
  41ecb4:	add    al,bh
  41ecb6:	inc    DWORD PTR [eax]
  41ecb8:	push   esi
  41ecb9:	(bad)  
  41ecba:	jmp    DWORD PTR ds:0xa4aba82a
  41ecc0:	dec    DWORD PTR [ecx+0x6fff00fe]
  41ecc6:	add    bh,bh
  41ecc8:	dec    esi
  41ecc9:	inc    DWORD PTR [ebx+0x32ec13ad]
  41eccf:	mov    ds:0xffff63,eax
  41ecd4:	cmp    eax,0x5a7c81ff
  41ecd9:	add    DWORD PTR [eax],0xffffffff
  41ecdc:	inc    esi
  41ecdd:	int3   
  41ecde:	(bad)  
  41ecdf:	add    ah,dl
  41ece1:	add    ah,cl
  41ece3:	dec    DWORD PTR [ebp+0x6fa6ceff]
  41ece9:	cmp    edi,0x0
  41ecec:	jmp    0x41eced
  41ecee:	and    DWORD PTR [edx],edx
  41ecf0:	(bad)  
  41ecf1:	mov    DWORD PTR [ecx+0x13ff3c00],ecx
  41ecf7:	out    0xfe,al
  41ecf9:	(bad)  
  41ecfa:	inc    DWORD PTR [eax]
  41ecfc:	and    edi,edi
  41ecfe:	jl     0x41ecd0
  41ed00:	or     al,BYTE PTR [eax]
  41ed02:	int3   
  41ed03:	add    bh,al
  41ed05:	inc    eax
  41ed07:	sbb    al,0x88
  41ed09:	dec    esp
  41ed0b:	add    BYTE PTR [edi],bh
  41ed0d:	int3   
  41ed0e:	fsub   st(2),st
  41ed10:	(bad)  
  41ed11:	(bad)  
  41ed12:	inc    DWORD PTR [eax]
  41ed14:	push   ecx
  41ed15:	(bad)  
  41ed16:	(bad)  
  41ed18:	in     al,dx
  41ed19:	inc    DWORD PTR [eax]
  41ed1b:	dec    DWORD PTR [ecx-0x62270400]
  41ed21:	cmp    edi,0x0
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	cmp    DWORD PTR [ecx-0xff5928],0xffffffff
  41ed2c:	mov    al,0xcc
  41ed2e:	mov    bl,dh
  41ed30:	xchg   DWORD PTR [ebx-0x833301],eax
  41ed36:	or     BYTE PTR [ebp+0x40],cl
  41ed3c:	in     eax,dx
  41ed3d:	(bad)  
  41ed3e:	jl     0x41ed8a
  41ed40:	or     DWORD PTR [ebx-0x76f70001],eax
  41ed46:	pop    ebp
  41ed47:	call   0xffc0:0xffff00ec
  41ed4e:	push   esp
  41ed4f:	(bad)  
  41ed50:	mov    bh,0xff
  41ed52:	(bad)  
  41ed53:	call   ecx
  41ed55:	add    ah,ch
  41ed57:	stos   DWORD PTR es:[edi],eax
  41ed58:	arpl   WORD PTR [eax],ax
  41ed5a:	cmp    edi,0x69
  41ed5d:	sbb    DWORD PTR [eax-0x9b2b],0xffffffff
  41ed64:	imul   eax,DWORD PTR [eax],0xba0f40
  41ed6a:	add    BYTE PTR [eax],al
  41ed6c:	fwait
  41ed6d:	cmp    DWORD PTR [esi+0x50],0x36
  41ed71:	(bad)  
  41ed72:	(bad)  
  41ed73:	call   FWORD PTR [eax+0x38356ff]
  41ed79:	inc    DWORD PTR [eax]
  41ed7b:	add    dl,dl
  41ed7d:	add    BYTE PTR [edx],ah
  41ed7f:	fmul   st(1),st
  41ed81:	int3   
  41ed82:	dec    DWORD PTR [ecx-0x6805ffd3]
  41ed88:	call   0x2cff:0x9d0000cc
  41ed8f:	cmp    al,0x31
  41ed91:	add    DWORD PTR [eax],0x0
  41ed94:	pushf  
  41ed95:	call   FWORD PTR [edx]
  41ed97:	outs   dx,BYTE PTR ds:[esi]
  41ed98:	pop    ebp
  41ed99:	cmp    edi,0xffffffff
  41ed9c:	lds    eax,FWORD PTR [eax]
  41ed9e:	or     DWORD PTR [eax+0xf],0xdd0000ff
  41eda5:	int3   
  41eda6:	loopne 0x41ed44
  41eda8:	idiv   bh
  41edaa:	add    ah,cl
  41edac:	(bad)  [ecx-0x7c7b5044]
  41edb2:	cmp    edi,0xfffffff8
  41edb5:	jmp    DWORD PTR [edi-0x53]
  41edb8:	fwait
  41edb9:	or     DWORD PTR [ecx+0x36ff3283],0x17
  41edc0:	idiv   edi
  41edc2:	dec    esp
  41edc4:	aad    0x0
  41edc6:	add    edx,DWORD PTR [esi+0x4f]
  41edc9:	add    bh,bh
  41edcb:	jmp    FWORD PTR [eax]
  41edcd:	dec    DWORD PTR [ebx-0x54cc]
  41edd3:	dec    DWORD PTR [ebp-0x7f932201]
  41edd9:	int3   
  41edda:	int3   
  41eddb:	jmp    DWORD PTR [eax+0x0]
  41edde:	mov    edi,0xffff529d
  41ede3:	dec    DWORD PTR [edi]
  41ede5:	(bad)  
  41ede6:	jl     0x41ed9e
  41ede8:	dec    eax
  41ede9:	inc    DWORD PTR [eax]
  41edeb:	sub    DWORD PTR [edi-0x1],0x37
  41edef:	ret    
  41edf0:	ja     0x41edf2
  41edf2:	add    ah,cl
  41edf4:	inc    ebp
  41edf5:	add    DWORD PTR [edx],0xffffffbc
  41edf8:	sbb    bh,bh
  41edfa:	add    BYTE PTR [eax],al
  41edfc:	cmc    
  41edfd:	add    BYTE PTR [esi*1-0x76ff006e],al
  41ee04:	cmp    bh,bh
  41ee06:	adc    BYTE PTR [edx-0x59],ch
  41ee09:	add    DWORD PTR [eax],0x0
  41ee0c:	xchg   esp,eax
  41ee0d:	push   DWORD PTR [eax+ecx*8+0x830095]
  41ee14:	out    dx,eax
  41ee15:	add    bh,dl
  41ee17:	outs   dx,DWORD PTR ds:[esi]
  41ee18:	inc    esp
  41ee19:	add    bh,bh
  41ee1b:	call   DWORD PTR [esi+0x0]
  41ee1e:	xchg   ecx,eax
  41ee1f:	push   ebx
  41ee20:	pop    eax
  41ee21:	inc    DWORD PTR [eax]
  41ee23:	int3   
  41ee24:	rol    DWORD PTR [ebx-0x2ed815],cl
  41ee2a:	int3   
  41ee2b:	add    BYTE PTR [edi+0x7898c9ff],dh
  41ee31:	cmp    edi,0xffffff83
  41ee34:	sti    
  41ee35:	call   DWORD PTR [ebp-0x33d3a7]
  41ee3b:	adc    DWORD PTR [ecx],0xffffffff
  41ee3e:	rcr    DWORD PTR ds:0xffffff7a,0x15
  41ee45:	(bad)  
  41ee46:	mov    edx,0x50a
  41ee4b:	add    BYTE PTR [eax+eax*1+0x1a],dl
  41ee4f:	xor    DWORD PTR [ebp-0x17000001],0x0
  41ee56:	shl    dh,0x6c
  41ee59:	(bad)  
  41ee5a:	inc    DWORD PTR [ebx-0x787d7c79]
  41ee60:	icebp  
  41ee61:	inc    DWORD PTR [ebx-0x2bff2901]
  41ee67:	leave  
  41ee68:	ins    BYTE PTR es:[edi],dx
  41ee69:	(bad)  
  41ee6a:	inc    DWORD PTR [ebx+0x6d9dffa2]
  41ee70:	jle    0x41ee71
  41ee72:	(bad)  
  41ee73:	(bad)  
  41ee74:	jp     0x41ee76
  41ee76:	idiv   DWORD PTR [ecx-0x2f]
  41ee7c:	add    al,0x0
  41ee7e:	add    DWORD PTR [ecx],edx
  41ee80:	cdq    
  41ee81:	add    BYTE PTR [eax],al
  41ee83:	add    BYTE PTR [edi+edi*8+0xd88058],bl
  41ee8a:	(bad)  
  41ee8b:	inc    DWORD PTR [ecx]
  41ee8d:	sbb    DWORD PTR [edx-0x45],0xfffffff1
  41ee91:	(bad)  
  41ee92:	inc    DWORD PTR [eax]
  41ee94:	ret    
  41ee95:	dec    DWORD PTR [edx-0x339845]
  41ee9b:	sub    DWORD PTR [esi+0x49a550ff],0x0
  41eea2:	inc    DWORD PTR [eax]
  41eea4:	fadd   QWORD PTR [eax]
  41eea6:	pop    ebp
  41eea7:	jl     0x41eeca
  41eea9:	(bad)  
  41eeaa:	inc    DWORD PTR [eax]
  41eeac:	ja     0x41eead
  41eeae:	adc    al,BYTE PTR [esi+0x3c]
  41eeb1:	add    BYTE PTR [eax],al
  41eeb3:	call   DWORD PTR [ebx-0x1]
  41eeb6:	call   0xff42d5bd
  41eebb:	(bad)  
  41eebc:	cmp    edi,edi
  41eebe:	mov    al,0x75
  41eec0:	mov    bh,0xff
  41eec2:	inc    DWORD PTR [ebx+0x3d020051]
  41eec8:	(bad)  
  41eecb:	call   FWORD PTR [edx-0x5d4c0301]
  41eed1:	inc    DWORD PTR [ebx+0x5bffae00]
  41eed7:	retf   0xe7
  41eeda:	or     DWORD PTR [ecx-0x20c43359],0x9
  41eee1:	(bad)  
  41eee2:	inc    DWORD PTR [eax]
  41eee4:	cmp    eax,0x4d660283
  41eee9:	inc    DWORD PTR [eax]
  41eeeb:	add    bh,bl
  41eeed:	add    BYTE PTR [edx-0x6bff],ch
  41eef3:	mov    DWORD PTR [eax-0x7d],edi
  41eef6:	fmul   DWORD PTR [ebx]
  41eef8:	fadd   DWORD PTR [eax]
  41eefa:	mov    DWORD PTR [ebx-0x45d00d2],eax
  41ef00:	sbb    bh,bh
  41ef02:	inc    DWORD PTR [ebx+0x609efffe]
  41ef08:	cmp    al,0x83
  41ef0a:	dec    esp
  41ef0c:	cmp    bh,0xfd
  41ef0f:	sub    ebx,DWORD PTR [edi+edi*8-0x1]
  41ef13:	push   DWORD PTR [edx+0x3206afcc]
  41ef19:	(bad)  
  41ef1a:	inc    DWORD PTR [eax]
  41ef1c:	repnz int3 
  41ef1e:	cmp    DWORD PTR [ecx-0x6a],ebx
  41ef21:	inc    DWORD PTR [eax]
  41ef23:	add    BYTE PTR [eax-0x15f0de77],ah
  41ef29:	int3   
  41ef2a:	add    DWORD PTR [eax],0x5c
  41ef2d:	add    ch,ah
  41ef2f:	sbb    ch,0xff
  41ef32:	add    bh,bh
  41ef34:	in     al,0x83
  41ef36:	jb     0x41eecc
  41ef38:	inc    esi
  41ef39:	inc    DWORD PTR [eax]
  41ef3b:	sub    DWORD PTR [edi+0x0],0xffffffeb
  41ef3f:	pop    edx
  41ef41:	dec    DWORD PTR [ecx+0x4e83f1ff]
  41ef47:	add    BYTE PTR [ebx-0x1],0x0
  41ef4b:	(bad)  
  41ef4c:	fdiv   st(7),st
  41ef4e:	push   ss
  41ef4f:	test   BYTE PTR [eax+0x0],bl
  41ef52:	int3   
  41ef53:	add    BYTE PTR [edi+edi*8],ch
  41ef56:	inc    ebx
  41ef57:	packssdw mm7,mm7
  41ef5a:	(bad)  
  41ef5b:	jmp    FWORD PTR [esi+0x45c1f400]
  41ef61:	inc    DWORD PTR [eax]
  41ef63:	jmp    eax
  41ef65:	add    bl,bl
  41ef67:	pop    edi
  41ef68:	int    0xff
  41ef6a:	add    BYTE PTR [ebx+0x2b66009e],al
  41ef70:	inc    DWORD PTR ss:[eax]
  41ef73:	(bad)  
  41ef74:	cli    
  41ef75:	(bad)  
  41ef76:	cmp    al,0x67
  41ef78:	das    
  41ef79:	(bad)  
  41ef7a:	inc    DWORD PTR [ebx-0x42ea00c3]
  41ef80:	popa   
  41ef81:	or     DWORD PTR [ecx-0x6b00d600],0x23
  41ef88:	inc    edx
  41ef89:	add    DWORD PTR [ebx+0x1000e483],0x6a
  41ef90:	xchg   ebp,eax
  41ef91:	int3   
  41ef92:	add    BYTE PTR [eax],al
  41ef94:	mov    ebx,0x7f4c2f00
  41ef99:	add    bh,bh
  41ef9b:	jmp    FWORD PTR [edi+edi*8]
  41ef9e:	cwde   
  41ef9f:	sbb    BYTE PTR [ebx],ah
  41efa1:	add    DWORD PTR [eax],0x0
  41efa4:	jg     0x41efa6
  41efa6:	es xor al,0xd8
  41efa9:	add    bh,bh
  41efab:	push   DWORD PTR [eax-0x72876c7d]
  41efb1:	add    DWORD PTR [eax],0x0
  41efb4:	mov    esp,0xed4a04ff
  41efb9:	(bad)  
  41efba:	dec    esp
  41efbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efbd:	add    BYTE PTR [edi+eax*8-0x16],ah
  41efc1:	inc    DWORD PTR [eax]
  41efc3:	or     DWORD PTR [esi-0x7f72497d],0xffffffff
  41efca:	add    DWORD PTR [ebx-0x133a3391],0xffffffca
  41efd1:	dec    DWORD PTR [ecx-0x3b000900]
  41efd7:	and    BYTE PTR [eax-0x1],al
  41efda:	(bad)  
  41efdb:	push   DWORD PTR [edi-0x33262401]
  41efe1:	int3   
  41efe2:	add    bh,bh
  41efe4:	xchg   edx,eax
  41efe5:	push   DWORD PTR [ecx-0x17]
  41efe8:	test   BYTE PTR [ebx-0x7c230001],0x2b
  41efef:	mov    eax,0xff83ffa0
  41eff4:	and    DWORD PTR [eax],eax
  41eff6:	loopne 0x41efcd
  41eff8:	xchg   ebp,eax
  41eff9:	inc    DWORD PTR [eax]
  41effb:	sbb    DWORD PTR [eax-0x5eef8a00],0xffffffff
  41f002:	cmp    edi,0x60
  41f005:	adc    DWORD PTR [ebx],0xffffffc1
  41f008:	cld    
  41f009:	inc    DWORD PTR [ebx-0x1c33dc00]
  41f00f:	add    eax,0xff00ffe7
  41f014:	or     bh,bh
  41f016:	mov    WORD PTR [ebx+0x39],?
  41f019:	cmp    edi,0xffffffff
  41f01c:	cmp    edi,0x5a
  41f01f:	aad    0x3c
  41f021:	add    bh,bh
  41f023:	(bad)  
  41f024:	call   0xbd891d29
  41f029:	int3   
  41f02a:	add    bh,bh
  41f02c:	jae    0x41f02d
  41f02e:	sbb    al,BYTE PTR [eax+0x56]
  41f031:	add    BYTE PTR [eax],al
  41f033:	int3   
  41f034:	out    dx,eax
  41f035:	push   DWORD PTR [esi+0xff1857]
  41f03b:	add    BYTE PTR [ebx-0x34],bh
  41f03e:	shr    BYTE PTR [ebp+0x45],1
  41f041:	add    BYTE PTR [ebx+0x3d000bff],al
  41f047:	fs push ebx
  41f049:	cmp    edi,0x0
  41f04c:	pop    edi
  41f04d:	add    bh,ah
  41f04f:	lock inc ebx
  41f051:	add    bh,bh
  41f053:	add    ah,al
  41f055:	add    BYTE PTR [edx+0x35],cl
  41f058:	test   edi,edi
  41f05a:	dec    esp
  41f05c:	lock add BYTE PTR [edi+edi*2],bl
  41f060:	cmp    BYTE PTR [ebx-0xebff01],al
  41f066:	inc    ecx
  41f067:	push   ebp
  41f068:	arpl   di,di
  41f06a:	cmp    edi,0x4
  41f06d:	mov    DWORD PTR [ebx+0x21],esp
  41f070:	leave  
  41f071:	inc    DWORD PTR [eax]
  41f073:	mov    DWORD PTR [edx-0x7d],edx
  41f076:	rol    DWORD PTR [ebp-0xffd4],0xa7
  41f07d:	(bad)  
  41f07e:	cmp    bl,BYTE PTR [ebp-0xff0098]
  41f084:	in     al,dx
  41f085:	(bad)  
  41f086:	jge    0x41f0dc
  41f088:	dec    ecx
  41f089:	dec    DWORD PTR [ecx+0xeffe6ff]
  41f08f:	jmp    0x41f0d9
  41f091:	dec    esp
  41f093:	call   FWORD PTR [ecx-0x10b60b00]
  41f099:	add    BYTE PTR [eax],al
  41f09b:	add    BYTE PTR [ecx-0x1],al
  41f09e:	xor    ch,0xa9
  41f0a1:	mov    edi,edi
  41f0a3:	inc    ecx
  41f0a5:	add    bh,bl
  41f0a7:	ret    0xff29
  41f0aa:	(bad)  
  41f0ab:	jmp    DWORD PTR [edx-0x1]
  41f0ae:	jmp    0x41f0d3
  41f0b0:	add    BYTE PTR [eax],al
  41f0b2:	cmp    edi,0xffffffb8
  41f0b5:	jmp    edi
  41f0b7:	inc    edx
  41f0b8:	add    cl,BYTE PTR [ecx+0x3fcc00]
  41f0be:	jno    0x41f04f
  41f0c0:	lahf   
  41f0c1:	mov    DWORD PTR [ecx-0x63005601],ecx
  41f0c7:	pushf  
  41f0c8:	(bad)  
  41f0c9:	inc    DWORD PTR [ebx-0x1f00b001]
  41f0cf:	adc    ch,ah
  41f0d1:	int3   
  41f0d2:	inc    DWORD PTR [eax]
  41f0d4:	jb     0x41f0d5
  41f0d6:	push   esi
  41f0d7:	sbb    dh,ah
  41f0d9:	(bad)  
  41f0da:	(bad)  
  41f0db:	(bad)  
  41f0dc:	out    dx,eax
  41f0dd:	call   FWORD PTR [esi+ebx*1+0x18]
  41f0e1:	dec    DWORD PTR [ecx+0x6d833383]
  41f0e7:	dec    edx
  41f0e8:	loope  0x41f073
  41f0ea:	add    bh,bh
  41f0ec:	add    edi,edi
  41f0ee:	stc    
  41f0ef:	sbb    al,0x6b
  41f0f1:	add    bh,bh
  41f0f3:	mov    DWORD PTR [ebp+0x0],edx
  41f0f6:	das    
  41f0f7:	jo     0x41f097
  41f0f9:	int3   
  41f0fa:	(bad)  
  41f0fb:	(bad)  
  41f0fc:	inc    BYTE PTR [eax]
  41f0fe:	repz mov ebp,edx
  41f101:	add    BYTE PTR [eax],al
  41f103:	inc    DWORD PTR [ebx-0x1]
  41f106:	jl     0x41f0bb
  41f108:	cwde   
  41f109:	add    DWORD PTR [eax],0xffffffcc
  41f10c:	outs   dx,DWORD PTR ds:[esi]
  41f10d:	add    BYTE PTR ds:0xff0086e7,bh
  41f113:	add    al,cl
  41f115:	call   FWORD PTR [eax-0x33c705]
  41f11b:	jmp    FWORD PTR [esi]
  41f11d:	add    dh,dl
  41f11f:	aad    0x4c
  41f121:	add    bh,bh
  41f123:	int3   
  41f124:	ret    0xffff
  41f127:	cwde   
  41f128:	sub    al,0xcc
  41f12a:	inc    DWORD PTR [ebx+0x78bfff79]
  41f130:	fmul   st(4),st
  41f132:	add    bh,bh
  41f134:	pop    esi
  41f135:	int3   
  41f136:	mov    cl,0x61
  41f138:	pushf  
  41f139:	add    BYTE PTR [eax],al
  41f13b:	mov    DWORD PTR [edi-0x2d148d01],ebx
  41f141:	add    BYTE PTR [eax],al
  41f143:	(bad)  
  41f144:	fadd   DWORD PTR [eax]
  41f146:	test   BYTE PTR [esp+ecx*4+0x0],dl
  41f14a:	inc    DWORD PTR [eax]
  41f14c:	fiadd  WORD PTR [ebx-0xa2f9d4]
  41f152:	mov    DWORD PTR [eax],eax
  41f154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f155:	add    BYTE PTR [edx-0x1d],ah
  41f158:	cli    
  41f159:	(bad)  
  41f15a:	inc    DWORD PTR [eax]
  41f15c:	mov    dh,0xff
  41f15e:	cwde   
  41f15f:	aaa    
  41f160:	pop    ds
  41f161:	(bad)  
  41f162:	(bad)  
  41f163:	dec    DWORD PTR [edi-0x6b390901]
  41f169:	add    BYTE PTR [eax],al
  41f16b:	(bad)  
  41f16c:	cmp    ecx,DWORD PTR [ecx-0xcc44e7]
  41f172:	or     DWORD PTR [ecx+0x6cdd8945],0xffffff91
  41f179:	(bad)  
  41f17a:	inc    DWORD PTR [ebx-0x58e733ff]
  41f180:	test   al,0x83
  41f182:	add    bh,bh
  41f184:	or     eax,0x8f8766cc
  41f189:	add    bh,bh
  41f18b:	add    BYTE PTR [ecx-0x1],bh
  41f18e:	add    esp,ecx
  41f190:	add    BYTE PTR [eax],0xff
  41f193:	(bad)  
  41f194:	cmp    al,BYTE PTR [eax]
  41f196:	or     eax,DWORD PTR [edi-0xff002c]
  41f19c:	clc    
  41f19d:	call   DWORD PTR [edx-0x7cff8203]
  41f1a3:	dec    DWORD PTR [eax-0x1]
  41f1a6:	mov    ch,0xb0
  41f1a8:	pop    eax
  41f1a9:	inc    DWORD PTR [ebx+0x1b833800]
  41f1af:	repz ret 0x0
  41f1b3:	mov    DWORD PTR [eax+0x0],edx
  41f1b6:	xchg   ecx,eax
  41f1b7:	dec    edi
  41f1b8:	repnz (bad) 
  41f1ba:	inc    DWORD PTR [eax]
  41f1bc:	xchg   ecx,eax
  41f1bd:	cmp    eax,0x44
  41f1c0:	jg     0x41f1c2
  41f1c2:	inc    DWORD PTR [ebx-0x154a0010]
  41f1c8:	test   bh,bh
  41f1ca:	add    bh,bh
  41f1cc:	add    DWORD PTR [eax],0x83a90e1d
  41f1d2:	(bad)  
  41f1d3:	jmp    DWORD PTR ds:0x97f141ff
  41f1d9:	mov    edi,edi
  41f1db:	inc    eax
  41f1dd:	add    BYTE PTR [ebp+0xbc57],bl
  41f1e3:	add    bl,ah
  41f1e5:	(bad)  
  41f1e6:	test   DWORD PTR ds:[eax],esp
  41f1e9:	inc    DWORD PTR [eax]
  41f1eb:	add    cl,bl
  41f1ed:	add    BYTE PTR [eax-0x2f],ah
  41f1f0:	pop    edi
  41f1f1:	inc    DWORD PTR [ebx+0x28834483]
  41f1f7:	shr    DWORD PTR [eax-0x1],cl
  41f1fa:	add    bh,bh
  41f1fc:	dec    edx
  41f1fd:	push   DWORD PTR [edx]
  41f1ff:	mov    edx,0xffffff34
  41f204:	pop    ds
  41f205:	(bad)  
  41f206:	jp     0x41f238
  41f208:	aaa    
  41f209:	inc    DWORD PTR [eax]
  41f20b:	adc    DWORD PTR [edi+0x0],0xffffffd5
  41f20f:	mov    ds:0xff89ff5a,eax
  41f214:	imul   eax,DWORD PTR [eax],0x76
  41f217:	lods   eax,DWORD PTR ds:[esi]
  41f218:	mov    ebp,0xdb000000
  41f21d:	add    BYTE PTR [ecx-0x4],bh
  41f220:	(bad)  
  41f221:	inc    DWORD PTR [eax]
  41f223:	add    al,cl
  41f225:	inc    DWORD PTR [ebp+0x6]
  41f228:	and    al,0x83
  41f22a:	dec    esp
  41f22c:	pop    ebx
  41f22d:	(bad)  
  41f22e:	jg     0x41f292
  41f230:	idiv   edi
  41f232:	inc    DWORD PTR [eax]
  41f234:	idiv   edi
  41f236:	fldcw  WORD PTR [esi]
  41f238:	pop    es
  41f239:	add    BYTE PTR [eax],al
  41f23b:	add    BYTE PTR [edi-0x7d],al
  41f23e:	mov    edi,ebp
  41f240:	cmp    edi,0xffffffff
  41f243:	call   DWORD PTR [esi-0xc6e4800]
  41f249:	add    DWORD PTR [eax],0xffffffff
  41f24c:	sar    edi,0x46
  41f24f:	mov    edi,DWORD PTR [ecx-0x34]
  41f252:	add    BYTE PTR [ecx-0x6e0bffa3],cl
  41f258:	sub    BYTE PTR [ebx+0x1a83ff],al
  41f25e:	je     0x41f1f1
  41f260:	ins    DWORD PTR es:[edi],dx
  41f261:	add    BYTE PTR [ebx+0x2883ba83],al
  41f267:	out    dx,eax
  41f268:	push   ss
  41f269:	dec    DWORD PTR [ecx+0x20ffe8ff]
  41f26f:	add    DWORD PTR [esi-0x7d],eax
  41f272:	inc    DWORD PTR [ebx-0x11033376]
  41f278:	cmc    
  41f279:	add    BYTE PTR [ecx+0x1789fc83],cl
  41f27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f280:	dec    edi
  41f281:	(bad)  
  41f282:	inc    DWORD PTR [eax]
  41f284:	in     al,dx
  41f285:	push   esp
  41f287:	rcr    BYTE PTR [ebx],0xff
  41f28a:	inc    DWORD PTR [eax]
  41f28c:	pop    eax
  41f28d:	call   eax
  41f28f:	clc    
  41f290:	popa   
  41f291:	cmp    edi,0xffffffcc
  41f294:	mov    ds:0x7800f7ff,al
  41f299:	add    bh,bh
  41f29b:	add    BYTE PTR [edi-0x1],dh
  41f29e:	icebp  
  41f29f:	dec    eax
  41f2a0:	fadd   QWORD PTR [ebx+0x28ffcc]
  41f2a6:	jnp    0x41f229
  41f2a8:	adc    BYTE PTR [eax],al
  41f2aa:	add    BYTE PTR [ebx+0x45d18338],al
  41f2b0:	cld    
  41f2b1:	cmp    edi,0xffffffff
  41f2b4:	(bad)  
  41f2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2b7:	int    0x4b
  41f2b9:	add    DWORD PTR [eax],0x0
  41f2bc:	loopne 0x41f2bd
  41f2be:	arpl   WORD PTR [eax-0x7c33ff50],dx
  41f2c4:	stos   DWORD PTR es:[edi],eax
  41f2c5:	jmp    DWORD PTR [edx]
  41f2c7:	and    eax,0xff00ffef
  41f2cc:	push   es
  41f2cd:	int3   
  41f2ce:	pushf  
  41f2cf:	mov    ecx,0x83ffff1b
  41f2d4:	xchg   edx,eax
  41f2d5:	add    DWORD PTR [edi-0x7a59],0xffffff89
  41f2dc:	idiv   edi
  41f2de:	add    BYTE PTR gs:[edx-0x77],bh
  41f2e2:	cmp    edi,0x5b
  41f2e5:	mov    ebx,ebx
  41f2e7:	popa   
  41f2e8:	mov    bl,0xcc
  41f2ea:	(bad)  
  41f2eb:	dec    esp
  41f2ed:	mov    DWORD PTR [ebp-0xffb2e2],edi
  41f2f3:	add    ah,al
  41f2f5:	int3   
  41f2f6:	dec    edx
  41f2f7:	mov    edx,DWORD PTR [ecx-0x1]
  41f2fa:	add    bh,bh
  41f2fc:	lea    eax,[eax]
  41f2fe:	fwait
  41f2ff:	rol    DWORD PTR [eax+eax*1-0x77],1
  41f303:	inc    DWORD PTR [edi]
  41f305:	sbb    DWORD PTR [eax+0x3a],0x30
  41f309:	add    BYTE PTR [eax],al
  41f30b:	int3   
  41f30c:	jnp    0x41f30e
  41f30e:	pop    ecx
  41f30f:	stos   DWORD PTR es:[edi],eax
  41f310:	sbb    bh,bh
  41f312:	int3   
  41f313:	mov    ecx,edx
  41f315:	jmp    ebp
  41f317:	repnz das 
  41f319:	inc    DWORD PTR [ebx+0xaff77ff]
  41f31f:	cwde   
  41f320:	adc    DWORD PTR [eax],eax
  41f322:	add    BYTE PTR [eax],al
  41f324:	mov    dh,0x0
  41f326:	jl     0x41f327
  41f328:	test   edi,edi
  41f32a:	add    ah,cl
  41f32c:	ja     0x41f32d
  41f32e:	neg    BYTE PTR [eax]
  41f330:	hlt    
  41f331:	(bad)  
  41f332:	inc    DWORD PTR [eax]
  41f334:	xor    al,0x0
  41f336:	xor    ah,dh
  41f338:	or     BYTE PTR [eax],al
  41f33a:	dec    esp
  41f33c:	sbb    bh,bh
  41f33e:	and    BYTE PTR [edi],ah
  41f340:	inc    edx
  41f341:	inc    DWORD PTR [eax]
  41f343:	int3   
  41f344:	mov    DWORD PTR [eax],0xc5b900
  41f34a:	(bad)  
  41f34b:	(bad)  
  41f34c:	jp     0x41f2d1
  41f34e:	icebp  
  41f34f:	(bad)  
  41f350:	mov    ebp,0x7eccffcc
  41f355:	inc    DWORD PTR [ecx-0x26]
  41f358:	push   esp
  41f359:	int3   
  41f35a:	add    bh,bh
  41f35c:	jo     0x41f35e
  41f35e:	inc    esp
  41f35f:	dec    edi
  41f360:	repz add BYTE PTR [eax],al
  41f363:	mov    DWORD PTR [edi+edi*8+0x1a],ebx
  41f367:	add    al,0x4c
  41f369:	add    bh,bh
  41f36b:	add    BYTE PTR [ecx],bh
  41f36d:	add    al,al
  41f36f:	xor    eax,0xff00ff0a
  41f374:	jno    0x41f375
  41f376:	js     0x41f388
  41f378:	mov    edi,0x900cc00
  41f37d:	add    dl,bh
  41f37f:	pop    esp
  41f380:	cdq    
  41f381:	add    BYTE PTR [ecx-0x29335d7d],cl
  41f387:	push   ecx
  41f388:	ret    
  41f389:	(bad)  
  41f38a:	inc    DWORD PTR [ebx-0x758f7cce]
  41f390:	iret   
  41f391:	int3   
  41f392:	add    bh,bh
  41f394:	idiv   bh
  41f396:	dec    edi
  41f397:	dec    eax
  41f398:	xor    eax,0x55ffffcc
  41f39d:	cmp    DWORD PTR [ebx-0x32],0xffffff94
  41f3a1:	add    bh,bh
  41f3a3:	(bad)  
  41f3a4:	cld    
  41f3a5:	(bad)  
  41f3a6:	clc    
  41f3a7:	fcos   
  41f3a9:	add    bh,bh
  41f3ab:	inc    DWORD PTR [ecx-0x1]
  41f3ae:	aad    0xd0
  41f3b0:	je     0x41f3b1
  41f3b2:	(bad)  
  41f3b3:	call   FWORD PTR [edx]
  41f3b5:	add    BYTE PTR [ebp+0x69],cl
  41f3b8:	std    
  41f3b9:	mov    DWORD PTR [eax],eax
  41f3bb:	push   DWORD PTR [eax+0x601031ff]
  41f3c1:	add    bh,bh
  41f3c3:	(bad)  
  41f3c4:	(bad)  
  41f3c5:	jmp    DWORD PTR [edi-0x76ffe9d7]
  41f3cb:	jmp    DWORD PTR [esi+0x1b6c03ff]
  41f3d1:	add    BYTE PTR [eax],al
  41f3d3:	add    BYTE PTR [eax+eax*1-0x67],dl
  41f3d7:	mov    eax,0xffff00e7
  41f3dc:	sbb    eax,0xa98149ff
  41f3e1:	add    bh,bh
  41f3e3:	sub    DWORD PTR [edx],0x0
  41f3e6:	iret   
  41f3e7:	jnp    0x41f3ad
  41f3e9:	inc    DWORD PTR [eax]
  41f3eb:	and    DWORD PTR ds:0x9a99de89,0xffffffff
  41f3f2:	(bad)  
  41f3f3:	(bad)  
  41f3f4:	mov    esi,0x91dcb1ff
  41f3f9:	dec    DWORD PTR [ecx+0x55ff77ff]
  41f3ff:	add    DWORD PTR [edx-0x1],eax
  41f402:	dec    esp
  41f404:	inc    edx
  41f405:	int3   
  41f406:	jg     0x41f46a
  41f408:	sub    edi,edi
  41f40a:	cmp    edi,0xffffffcb
  41f40d:	jmp    FWORD PTR [esi-0x4d]
  41f410:	ror    DWORD PTR [ecx-0x76d67d00],cl
  41f416:	adc    eax,esp
  41f418:	push   edx
  41f419:	int3   
  41f41a:	inc    DWORD PTR [eax]
  41f41c:	ins    DWORD PTR es:[edi],dx
  41f41d:	add    BYTE PTR [ecx+0x61],cl
  41f420:	clc    
  41f421:	int3   
  41f422:	int3   
  41f423:	add    ebx,0xffffffcc
  41f426:	xlat   BYTE PTR ds:[ebx]
  41f427:	sub    ecx,DWORD PTR [edi]
  41f429:	dec    esp
  41f42b:	add    BYTE PTR [esi],bh
  41f42d:	jmp    FWORD PTR [ebp+0x4ae6]
  41f433:	(bad)  
  41f434:	clc    
  41f435:	add    dl,bh
  41f437:	inc    edi
  41f438:	imul   edi,edi,0xffa200ff
  41f43e:	call   0x83cba020
  41f443:	add    BYTE PTR [ebx],ch
  41f445:	add    BYTE PTR [edx+0x3],ch
  41f448:	pop    ss
  41f449:	dec    DWORD PTR [ecx+0x38962cc]
  41f44f:	xchg   edi,eax
  41f450:	mov    ecx,0x82ff0000
  41f455:	int3   
  41f456:	cmp    eax,0x83ff7a87
  41f45b:	jmp    esi
  41f45d:	add    BYTE PTR [ecx+0x40],dl
  41f460:	cli    
  41f461:	int3   
  41f462:	inc    DWORD PTR [eax]
  41f464:	mov    ebp,0x5fab8600
  41f469:	(bad)  
  41f46a:	inc    DWORD PTR [eax]
  41f46c:	push   edi
  41f46d:	mov    DWORD PTR [ecx-0x40],ebx
  41f470:	mov    al,BYTE PTR [eax]
  41f472:	dec    DWORD PTR [ecx+0x2d14ff6a]
  41f478:	xor    esp,ecx
  41f47a:	or     DWORD PTR [ecx-0x74247c3a],0xffffff94
  41f481:	add    BYTE PTR [eax],al
  41f483:	add    BYTE PTR [ebx+eax*4],ah
  41f486:	sbb    DWORD PTR [esi],ebp
  41f488:	sub    eax,0xd2ffcccc
  41f48d:	push   esi
  41f48f:	mov    ecx,0xffff00b5
  41f494:	enter  0xf0ff,0x23
  41f498:	ins    BYTE PTR es:[edi],dx
  41f499:	add    bh,bh
  41f49b:	call   DWORD PTR [ebp-0x1e7f177]
  41f4a1:	inc    DWORD PTR [eax]
  41f4a3:	add    dl,dl
  41f4a5:	add    ch,bl
  41f4a7:	dec    ecx
  41f4a8:	cs (bad) 
  41f4aa:	inc    DWORD PTR [eax]
  41f4ac:	and    al,0x0
  41f4ae:	clc    
  41f4af:	push   eax
  41f4b0:	xlat   BYTE PTR ds:[ebx]
  41f4b1:	(bad)  
  41f4b2:	(bad)  
  41f4b3:	dec    DWORD PTR [esi+0x29bd5fff]
  41f4b9:	inc    DWORD PTR [eax]
  41f4bb:	(bad)  
  41f4bc:	jl     0x41f4bd
  41f4be:	cmp    al,0x93
  41f4c0:	mov    al,0xff
  41f4c2:	(bad)  
  41f4c3:	call   DWORD PTR [ecx-0x1]
  41f4c6:	enter  0x764e,0xff
  41f4ca:	(bad)  
  41f4cb:	(bad)  
  41f4cc:	fld    DWORD PTR [ebx-0xc3f7c2]
  41f4d2:	dec    esp
  41f4d4:	loop   0x41f4d5
  41f4d6:	popf   
  41f4d7:	leave  
  41f4d8:	pop    esp
  41f4d9:	int3   
  41f4da:	int3   
  41f4db:	inc    DWORD PTR [esi+0x3a1ac3ff]
  41f4e1:	inc    DWORD PTR [eax]
  41f4e3:	sbb    DWORD PTR [esi],0xffffff83
  41f4e6:	inc    ebp
  41f4e7:	mov    ?,esp
  41f4e9:	(bad)  
  41f4ea:	(bad)  
  41f4eb:	dec    esi
  41f4ed:	mov    DWORD PTR [edx],eax
  41f4ef:	pop    edi
  41f4f0:	fwait
  41f4f1:	int3   
  41f4f2:	add    DWORD PTR [eax],0xffffff9c
  41f4f5:	dec    eax
  41f4f7:	ret    0x22
  41f4fa:	mov    edi,edi
  41f4fc:	cmp    edi,edi
  41f4fe:	repnz push eax
  41f500:	xor    eax,0x160000ff
  41f505:	jmp    FWORD PTR [edx+0x5b]
  41f508:	rol    DWORD PTR [eax],0x0
  41f50b:	call   DWORD PTR ds:0xabbc9b00
  41f511:	add    BYTE PTR [eax],al
  41f513:	mov    DWORD PTR [ecx-0x1],edi
  41f516:	rcr    BYTE PTR [ebp+0xff89b2],1
  41f51c:	call   0xffff:0xed2e32ff
  41f523:	add    BYTE PTR [edi+edi*8-0x2ab82a],bh
  41f52a:	cmp    edi,0xffffff8a
  41f52d:	call   DWORD PTR [esi]
  41f52f:	push   ecx
  41f530:	ret    0xff89
  41f533:	int3   
  41f534:	jb     0x41f535
  41f536:	popa   
  41f537:	adc    ah,ah
  41f539:	add    DWORD PTR [eax],0xffffffff
  41f53c:	or     bh,bh
  41f53e:	mov    edi,0x89ffe6a8
  41f543:	add    ah,dh
  41f545:	(bad)  
  41f546:	jns    0x41f5c5
  41f548:	pop    edi
  41f549:	(bad)  
  41f54a:	inc    DWORD PTR [eax]
  41f54c:	dec    edx
  41f54d:	add    BYTE PTR [ecx-0x9a66],ch
  41f553:	xor    ecx,0xffffffff
  41f556:	loope  0x41f4e5
  41f558:	mov    ch,0xff
  41f55a:	mov    esp,ecx
  41f55c:	repnz add ah,bl
  41f55f:	repz cmp eax,0xebffffff
  41f565:	(bad)  
  41f566:	jle    0x41f567
  41f568:	jnp    0x41f56a
  41f56a:	(bad)  
  41f56b:	inc    DWORD PTR [ebp-0x7d]
  41f56e:	lea    esi,[edi+ebp*2-0x1]
  41f572:	inc    DWORD PTR [eax]
  41f574:	or     BYTE PTR [ebx-0x9b312b],al
  41f57a:	dec    DWORD PTR [ecx+0x1fffff42]
  41f580:	aad    0x83
  41f582:	(bad)  
  41f583:	jmp    FWORD PTR [ebx-0x77]
  41f586:	cmp    bl,BYTE PTR [edx-0xffd0]
  41f58c:	bound  eax,QWORD PTR [eax]
  41f58e:	mov    eax,DWORD PTR [esi+eax*1+0x4f00ff00]
  41f595:	add    BYTE PTR [eax-0x26],dh
  41f598:	add    DWORD PTR [ebx-0xf00077],0xffa7e236
  41f5a2:	inc    DWORD PTR [eax]
  41f5a4:	xor    ah,cl
  41f5a6:	jns    0x41f56a
  41f5a8:	inc    eax
  41f5a9:	inc    DWORD PTR [eax]
  41f5ab:	add    BYTE PTR [edx],dl
  41f5ad:	add    BYTE PTR [ecx-0x2c],dl
  41f5b0:	sbb    bh,bh
  41f5b2:	inc    DWORD PTR [ebx-0x3354ff22]
  41f5b8:	rol    BYTE PTR [eax],1
  41f5ba:	add    BYTE PTR [eax],al
  41f5bc:	or     eax,0x9a9ba2ff
  41f5c1:	(bad)  
  41f5c2:	(bad)  
  41f5c3:	(bad)  
  41f5c4:	fild   WORD PTR [eax]
  41f5c6:	push   ds
  41f5c7:	mov    edx,0xff83ccbd
  41f5cc:	pop    edx
  41f5cd:	mov    ecx,edx
  41f5cf:	gs xor al,0xff
  41f5d2:	int3   
  41f5d3:	mov    ecx,ebp
  41f5d5:	mov    DWORD PTR [ebx-0x76ff3128],eax
  41f5db:	cmp    edi,0xffffffff
  41f5de:	mov    ebp,0x76bf
  41f5e3:	dec    DWORD PTR [edx-0x34]
  41f5e6:	adc    al,0x9f
  41f5e8:	(bad)  
  41f5e9:	(bad)  
  41f5ea:	inc    DWORD PTR [eax]
  41f5ec:	jns    0x41f5ee
  41f5ee:	rcr    DWORD PTR [ebp+0x7c],cl
  41f5f1:	(bad)  
  41f5f2:	inc    DWORD PTR [eax]
  41f5f4:	popa   
  41f5f5:	sbb    DWORD PTR [edx+esi*8],0xffffff8c
  41f5f9:	inc    DWORD PTR [eax]
  41f5fb:	call   DWORD PTR [edx+0x2305ceff]
  41f601:	inc    DWORD PTR [ebx+0x6effc800]
  41f607:	xchg   edi,eax
  41f608:	dec    edi
  41f609:	mov    edi,edi
  41f60b:	add    BYTE PTR [esi-0x8752f00],ch
  41f611:	add    ah,cl
  41f613:	mov    DWORD PTR [edi-0x7f7d5534],eax
  41f619:	(bad)  
  41f61a:	dec    DWORD PTR [ecx+0x6cb583b8]
  41f620:	sub    al,0x0
  41f622:	(bad)  
  41f623:	jmp    DWORD PTR [ebp-0x1]
  41f626:	test   esp,edx
  41f628:	add    BYTE PTR ss:[eax],al
  41f62b:	add    BYTE PTR [esi],al
  41f62d:	add    BYTE PTR [edi],bh
  41f62f:	jo     0x41f62e
  41f631:	add    BYTE PTR [eax],al
  41f633:	call   eax
  41f635:	adc    DWORD PTR [esi],0x43
  41f638:	push   eax
  41f639:	dec    DWORD PTR [ecx-0x46338e01]
  41f63f:	dec    eax
  41f640:	push   0xffffffff
  41f642:	cmp    edi,0xffffffc7
  41f645:	jmp    FWORD PTR [eax+ecx*4-0x8]
  41f649:	(bad)  
  41f64a:	(bad)  
  41f64b:	call   DWORD PTR [edi-0x1494a777]
  41f651:	cmp    edi,0xffffffff
  41f654:	pop    ebx
  41f655:	push   DWORD PTR [edi+ecx*1]
  41f658:	int3   
  41f659:	int3   
  41f65a:	int3   
  41f65b:	int3   
  41f65c:	int3   
  41f65d:	int3   
  41f65e:	int3   
  41f65f:	int3   
  41f660:	sub    esp,0x104
  41f666:	push   ebx
  41f667:	push   ebp
  41f668:	push   esi
  41f669:	push   edi
  41f66a:	push   0x7a
  41f66c:	push   0x42
  41f66e:	call   DWORD PTR ds:0x444024
  41f674:	push   0x408460
  41f679:	mov    DWORD PTR [esp+0x14],eax
  41f67d:	call   0x426360
  41f682:	mov    edx,DWORD PTR ds:0x447d1c
  41f688:	mov    eax,DWORD PTR [esp+0x11c]
  41f68f:	add    esp,0x4
  41f692:	add    edx,0x1afc0
  41f698:	add    eax,0x4
  41f69b:	mov    esi,0x77
  41f6a0:	movzx  ecx,BYTE PTR [eax+0x2]
  41f6a4:	movzx  edi,WORD PTR [eax]
  41f6a7:	shl    ecx,0x10
  41f6aa:	add    ecx,edi
  41f6ac:	movzx  edi,BYTE PTR [eax-0x3]
  41f6b0:	shl    ecx,0x8
  41f6b3:	add    ecx,edi
  41f6b5:	mov    DWORD PTR ds:0x447d04,ecx
  41f6bb:	mov    edi,0x6830e7ea
  41f6c0:	sub    edi,DWORD PTR ds:0x447d14
  41f6c6:	add    eax,0x28
  41f6c9:	xor    edi,ecx
  41f6cb:	mov    DWORD PTR [edx],edi
  41f6cd:	movzx  ecx,BYTE PTR [eax-0x1e]
  41f6d1:	movzx  edi,WORD PTR [eax-0x20]
  41f6d5:	shl    ecx,0x10
  41f6d8:	add    ecx,edi
  41f6da:	movzx  edi,BYTE PTR [eax-0x23]
  41f6de:	shl    ecx,0x8
  41f6e1:	add    ecx,edi
  41f6e3:	mov    DWORD PTR ds:0x447d04,ecx
  41f6e9:	mov    edi,0x6830e7ea
  41f6ee:	sub    edi,DWORD PTR ds:0x447d14
  41f6f4:	add    edx,0x14
  41f6f7:	xor    edi,ecx
  41f6f9:	mov    DWORD PTR [edx-0x10],edi
  41f6fc:	movzx  ecx,BYTE PTR [eax-0x16]
  41f700:	movzx  edi,WORD PTR [eax-0x18]
  41f704:	shl    ecx,0x10
  41f707:	add    ecx,edi
  41f709:	movzx  edi,BYTE PTR [eax-0x1b]
  41f70d:	shl    ecx,0x8
  41f710:	add    ecx,edi
  41f712:	mov    DWORD PTR ds:0x447d04,ecx
  41f718:	mov    edi,0x6830e7ea
  41f71d:	sub    edi,DWORD PTR ds:0x447d14
  41f723:	xor    edi,ecx
  41f725:	mov    DWORD PTR [edx-0xc],edi
  41f728:	movzx  ecx,BYTE PTR [eax-0xe]
  41f72c:	movzx  edi,WORD PTR [eax-0x10]
  41f730:	shl    ecx,0x10
  41f733:	add    ecx,edi
  41f735:	movzx  edi,BYTE PTR [eax-0x13]
  41f739:	shl    ecx,0x8
  41f73c:	add    ecx,edi
  41f73e:	mov    DWORD PTR ds:0x447d04,ecx
  41f744:	mov    edi,0x6830e7ea
  41f749:	sub    edi,DWORD PTR ds:0x447d14
  41f74f:	xor    edi,ecx
  41f751:	mov    DWORD PTR [edx-0x8],edi
  41f754:	movzx  ecx,BYTE PTR [eax-0x6]
  41f758:	movzx  edi,WORD PTR [eax-0x8]
  41f75c:	shl    ecx,0x10
  41f75f:	add    ecx,edi
  41f761:	movzx  edi,BYTE PTR [eax-0xb]
  41f765:	shl    ecx,0x8
  41f768:	add    ecx,edi
  41f76a:	mov    edi,0x6830e7ea
  41f76f:	sub    edi,DWORD PTR ds:0x447d14
  41f775:	mov    DWORD PTR ds:0x447d04,ecx
  41f77b:	xor    edi,ecx
  41f77d:	dec    esi
  41f77e:	mov    DWORD PTR [edx-0x4],edi
  41f781:	jne    0x41f6a0
  41f787:	mov    esi,DWORD PTR ds:0x447d1c
  41f78d:	mov    ebx,DWORD PTR ds:0x444028
  41f793:	mov    edi,DWORD PTR ds:0x444014
  41f799:	mov    eax,ds:0x4470e0
  41f79e:	add    esi,0x1c2cc
  41f7a4:	mov    ebp,0x17b
  41f7a9:	lea    esp,[esp+0x0]
  41f7b0:	movzx  ecx,BYTE PTR [eax+0x6]
  41f7b4:	movzx  edx,BYTE PTR [eax+0x4]
  41f7b8:	movzx  eax,WORD PTR [eax+0x2]
  41f7bc:	shl    ecx,0x8
  41f7bf:	add    ecx,edx
  41f7c1:	shl    ecx,0x10
  41f7c4:	add    ecx,eax
  41f7c6:	push   0x446ba4
  41f7cb:	mov    DWORD PTR ds:0x447d04,ecx
  41f7d1:	call   ebx
  41f7d3:	mov    ecx,0x497ff1e1
  41f7d8:	sub    ecx,DWORD PTR ds:0x447d14
  41f7de:	push   0x0
  41f7e0:	xor    ecx,DWORD PTR ds:0x447d04
  41f7e6:	mov    DWORD PTR [esi],ecx
  41f7e8:	mov    ecx,DWORD PTR ds:0x4470e0
  41f7ee:	movzx  eax,BYTE PTR [ecx+0xf]
  41f7f2:	movzx  edx,BYTE PTR [ecx+0xc]
  41f7f6:	movzx  ecx,WORD PTR [ecx+0xa]
  41f7fa:	shl    eax,0x8
  41f7fd:	add    eax,edx
  41f7ff:	mov    edx,DWORD PTR ds:0x447d14
  41f805:	shl    eax,0x10
  41f808:	add    eax,ecx
  41f80a:	add    edx,0x497f71df
  41f810:	xor    edx,eax
  41f812:	mov    ds:0x447d04,eax
  41f817:	mov    DWORD PTR [esi+0x4],edx
  41f81a:	call   edi
  41f81c:	mov    eax,ds:0x4470e0
  41f821:	add    eax,0x10
  41f824:	add    esi,0x8
  41f827:	dec    ebp
  41f828:	mov    ds:0x4470e0,eax
  41f82d:	jne    0x41f7b0
  41f82f:	movzx  ecx,BYTE PTR [eax+0x6]
  41f833:	movzx  edx,BYTE PTR [eax+0x4]
  41f837:	movzx  eax,WORD PTR [eax+0x2]
  41f83b:	mov    ebp,DWORD PTR ds:0x444020
  41f841:	shl    ecx,0x8
  41f844:	add    ecx,edx
  41f846:	mov    edx,DWORD PTR ds:0x447d14
  41f84c:	shl    ecx,0x10
  41f84f:	add    ecx,eax
  41f851:	add    edx,0x497f71df
  41f857:	xor    edx,ecx
  41f859:	mov    DWORD PTR ds:0x447d04,ecx
  41f85f:	mov    DWORD PTR [esi],edx
  41f861:	mov    esi,DWORD PTR ds:0x447d1c
  41f867:	mov    ecx,DWORD PTR ds:0x4470e4
  41f86d:	add    esi,0x1d4e0
  41f873:	mov    ebx,0x92
  41f878:	jmp    0x41f880
  41f87a:	lea    ebx,[ebx+0x0]
  41f880:	movzx  eax,WORD PTR [ecx+0x9]
  41f884:	movzx  edx,BYTE PTR [ecx+0x5]
  41f888:	movzx  ecx,BYTE PTR [ecx]
  41f88b:	shl    eax,0x8
  41f88e:	add    eax,edx
  41f890:	mov    edx,DWORD PTR ds:0x447d14
  41f896:	shl    eax,0x8
  41f899:	add    eax,ecx
  41f89b:	add    edx,0x43e7fbb3
  41f8a1:	mov    ds:0x447d04,eax
  41f8a6:	xor    edx,eax
  41f8a8:	push   0x100
  41f8ad:	lea    eax,[esp+0x18]
  41f8b1:	push   eax
  41f8b2:	push   0x0
  41f8b4:	mov    DWORD PTR [esi],edx
  41f8b6:	call   ebp
  41f8b8:	mov    ecx,DWORD PTR ds:0x4470e4
  41f8be:	mov    eax,DWORD PTR [ecx+0xb]
  41f8c1:	mov    edx,0x43e87bb5
  41f8c6:	sub    edx,DWORD PTR ds:0x447d14
  41f8cc:	mov    ds:0x447d04,eax
  41f8d1:	xor    edx,eax
  41f8d3:	mov    DWORD PTR [esi+0x4],edx
  41f8d6:	mov    ecx,DWORD PTR ds:0x4470e4
  41f8dc:	add    ecx,0x10
  41f8df:	add    esi,0x8
  41f8e2:	dec    ebx
  41f8e3:	mov    DWORD PTR ds:0x4470e4,ecx
  41f8e9:	jne    0x41f880
  41f8eb:	call   0x43e2f0
  41f8f0:	mov    esi,DWORD PTR ds:0x447d1c
  41f8f6:	add    esi,0x1a868
  41f8fc:	mov    ebx,0x1d6
  41f901:	mov    ebp,0x8
  41f906:	push   0x0
  41f908:	call   edi
  41f90a:	mov    ecx,DWORD PTR ds:0x4470e8
  41f910:	movzx  eax,BYTE PTR [ecx+0x6]
  41f914:	movzx  edx,WORD PTR [ecx+0x2]
  41f918:	movzx  ecx,BYTE PTR [ecx]
  41f91b:	shl    eax,0x10
  41f91e:	add    eax,edx
  41f920:	mov    edx,DWORD PTR ds:0x447d14
  41f926:	shl    eax,0x8
  41f929:	add    eax,ecx
  41f92b:	xor    edx,eax
  41f92d:	xor    edx,0xaba36339
  41f933:	mov    ds:0x447d04,eax
  41f938:	mov    DWORD PTR [esi],edx
  41f93a:	add    DWORD PTR ds:0x4470e8,ebp
  41f940:	add    esi,0x4
  41f943:	dec    ebx
  41f944:	jne    0x41f906
  41f946:	mov    esi,DWORD PTR ds:0x447d1c
  41f94c:	mov    eax,ds:0x4470ec
  41f951:	add    esi,0x1b90c
  41f957:	mov    ebx,0x270
  41f95c:	lea    esp,[esp+0x0]
  41f960:	movzx  ecx,BYTE PTR [eax+0x6]
  41f964:	movzx  edx,BYTE PTR [eax+0x3]
  41f968:	movzx  eax,WORD PTR [eax+0x1]
  41f96c:	shl    ecx,0x8
  41f96f:	add    ecx,edx
  41f971:	shl    ecx,0x10
  41f974:	add    ecx,eax
  41f976:	push   0x0
  41f978:	mov    DWORD PTR ds:0x447d04,ecx
  41f97e:	call   edi
  41f980:	mov    ecx,0xafd3c113
  41f985:	sub    ecx,DWORD PTR ds:0x447d14
  41f98b:	add    esi,0x4
  41f98e:	xor    ecx,DWORD PTR ds:0x447d04
  41f994:	mov    DWORD PTR [esi-0x4],ecx
  41f997:	mov    eax,ds:0x4470ec
  41f99c:	add    eax,ebp
  41f99e:	dec    ebx
  41f99f:	mov    ds:0x4470ec,eax
  41f9a4:	jne    0x41f960
  41f9a6:	mov    edx,DWORD PTR ds:0x447d1c
  41f9ac:	mov    esi,DWORD PTR [esp+0x11c]
  41f9b3:	add    edx,0x1cea8
  41f9b9:	test   esi,esi
  41f9bb:	je     0x41fa01
  41f9bd:	mov    ecx,DWORD PTR ds:0x4470f0
  41f9c3:	movzx  eax,BYTE PTR [ecx+0x6]
  41f9c7:	movzx  edi,WORD PTR [ecx+0x3]
  41f9cb:	movzx  ecx,BYTE PTR [ecx+0x1]
  41f9cf:	shl    eax,0x10
  41f9d2:	add    eax,edi
  41f9d4:	shl    eax,0x8
  41f9d7:	add    eax,ecx
  41f9d9:	mov    ecx,0x39546823
  41f9de:	sub    ecx,DWORD PTR ds:0x447d14
  41f9e4:	mov    ds:0x447d04,eax
  41f9e9:	xor    ecx,eax
  41f9eb:	mov    DWORD PTR [edx],ecx
  41f9ed:	mov    ecx,DWORD PTR ds:0x4470f0
  41f9f3:	add    ecx,ebp
  41f9f5:	add    edx,0x4
  41f9f8:	dec    esi
  41f9f9:	mov    DWORD PTR ds:0x4470f0,ecx
  41f9ff:	jne    0x41f9c3
  41fa01:	call   0x431960
  41fa06:	mov    eax,DWORD PTR [esp+0x10]
  41fa0a:	pop    edi
  41fa0b:	pop    esi
  41fa0c:	pop    ebp
  41fa0d:	pop    ebx
  41fa0e:	test   eax,eax
  41fa10:	je     0x41fa19
  41fa12:	push   eax
  41fa13:	call   DWORD PTR ds:0x44402c
  41fa19:	add    esp,0x104
  41fa1f:	ret    
  41fa20:	mov    DWORD PTR [esi+0x8889f3],ecx
  41fa26:	into   
  41fa27:	(bad)  
  41fa28:	call   FWORD PTR ds:0xff1affe9
  41fa2e:	stos   DWORD PTR es:[edi],eax
  41fa2f:	cmp    edi,0xf
  41fa32:	call   0xff00:0x90ff5bff
  41fa39:	push   0xffffffbb
  41fa3b:	sbb    DWORD PTR [edx-0x7cff9800],0x5a
  41fa42:	arpl   di,di
  41fa44:	mov    cl,0x83
  41fa46:	sahf   
  41fa47:	cmp    edi,0xffffffd6
  41fa4a:	ins    DWORD PTR es:[edi],dx
  41fa4b:	(bad)  
  41fa4c:	cmp    bh,bh
  41fa4e:	and    ecx,esp
  41fa50:	add    BYTE PTR [edx-0x1f],dl
  41fa53:	and    eax,0xffffffff
  41fa56:	mov    ch,0x83
  41fa58:	(bad)  
  41fa59:	mov    esi,0x897fff1e
  41fa5e:	or     eax,0xd94d00ff
  41fa63:	add    ch,cl
  41fa65:	add    BYTE PTR [ebp-0x617c3400],ch
  41fa6b:	mov    DWORD PTR [edx],edi
  41fa6d:	call   DWORD PTR [esi]
  41fa6f:	add    BYTE PTR [ecx-0x62ff849a],cl
  41fa75:	add    BYTE PTR [edx],dl
  41fa77:	add    BYTE PTR [ecx+0x778308dc],cl
  41fa7d:	add    BYTE PTR [ecx+0x0],dh
  41fa80:	mov    DWORD PTR [ecx-0x44],eax
  41fa83:	add    BYTE PTR [esi],ch
  41fa85:	cmp    ebx,0xffffffff
  41fa88:	add    BYTE PTR [edx-0x3],cl
  41fa8b:	add    bl,dl
  41fa8d:	call   FWORD PTR [ebx+0x0]
  41fa90:	call   DWORD PTR [edx]
  41fa92:	js     0x41fa1d
  41fa94:	jo     0x41fa19
  41fa96:	xor    DWORD PTR [ebx-0x7967d],eax
  41fa9c:	push   esi
  41fa9d:	call   FWORD PTR [edi]
  41fa9f:	inc    DWORD PTR [eax]
  41faa1:	scas   al,BYTE PTR es:[edi]
  41faa2:	pop    edi
  41faa3:	add    BYTE PTR [ecx-0x7d],ah
  41faa6:	leave  
  41faa7:	dec    esp
  41faa9:	lods   al,BYTE PTR ds:[esi]
  41faaa:	rol    BYTE PTR [ebx+0xe00c6],0x0
  41fab1:	inc    esi
  41fab2:	scas   al,BYTE PTR es:[edi]
  41fab3:	call   DWORD PTR [eax-0x7c0d01]
  41fab9:	pop    ebx
  41faba:	jns    0x41fabc
  41fabc:	in     al,dx
  41fabd:	push   ebp
  41fabf:	dec    esp
  41fac1:	or     al,0x68
  41fac3:	mov    DWORD PTR [eax-0x1],esp
  41fac6:	cs dec esp
  41fac9:	std    
  41faca:	adc    al,0x0
  41facc:	mov    al,ds:0x83fbff
  41fad1:	in     eax,dx
  41fad2:	cmp    bh,0x93
  41fad5:	push   DWORD PTR [esi]
  41fad7:	inc    DWORD PTR [ebx+0x29ff2ce0]
  41fadd:	call   esi
  41fadf:	dec    DWORD PTR [ecx-0x710044c5]
  41fae5:	dec    DWORD PTR [esi]
  41fae7:	add    DWORD PTR [eax],0xffffffeb
  41faea:	fwait
  41faeb:	add    BYTE PTR [ebx-0x1],bh
  41faee:	sub    bh,bh
  41faf0:	int3   
  41faf1:	jb     0x41fb46
  41faf3:	jmp    FWORD PTR [ebx]
  41faf5:	add    bh,ah
  41faf7:	add    bh,bh
  41faf9:	mov    WORD PTR [eax-0x107c0501],cs
  41faff:	add    ah,cl
  41fb01:	xlat   BYTE PTR ds:[ebx]
  41fb02:	jns    0x41fb03
  41fb04:	jo     0x41fb05
  41fb06:	sar    edi,1
  41fb08:	and    esi,0x67
  41fb0b:	call   FWORD PTR [ebp+0xffc900]
  41fb11:	mov    al,0x47
  41fb13:	add    BYTE PTR [eax+0xffb1ff],bl
  41fb19:	mov    edi,0xcc5e8358
  41fb1e:	pop    es
  41fb1f:	inc    DWORD PTR [eax]
  41fb21:	mov    dh,0x6c
  41fb23:	(bad)  
  41fb24:	jle    0x41fb25
  41fb26:	retf   
  41fb27:	(bad)  
  41fb28:	(bad)  
  41fb29:	jnp    0x41fb67
  41fb2b:	add    ah,dl
  41fb2d:	mov    esp,ecx
  41fb2f:	add    bh,bh
  41fb31:	fldcw  WORD PTR [ebx-0x7d]
  41fb34:	dec    esi
  41fb35:	add    BYTE PTR [edx-0x77],cl
  41fb38:	adc    ebx,0x17
  41fb3b:	call   DWORD PTR [eax]
  41fb3d:	jmp    DWORD PTR [ebx]
  41fb3f:	add    DWORD PTR [eax],0xfffffff7
  41fb42:	test   bh,bh
  41fb44:	cmp    al,0xff
  41fb46:	aas    
  41fb47:	(bad)  
  41fb48:	(bad)  
  41fb49:	cli    
  41fb4a:	jge    0x41fb4b
  41fb4c:	into   
  41fb4d:	add    dl,bl
  41fb4f:	add    BYTE PTR [eax],al
  41fb51:	fmul   st(3),st
  41fb53:	jmp    DWORD PTR [edi+edi*8]
  41fb56:	dec    esp
  41fb57:	add    bh,bh
  41fb59:	clc    
  41fb5a:	imul   eax,DWORD PTR [eax],0x70
  41fb5d:	jmp    DWORD PTR [esi-0x34]
  41fb60:	add    ah,bl
  41fb62:	push   ebp
  41fb63:	int3   
  41fb64:	sbb    BYTE PTR [eax],al
  41fb66:	sbb    al,0x0
  41fb68:	mov    DWORD PTR [ebp+0x22ff81],eax
  41fb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb6f:	add    bh,bh
  41fb71:	retf   
  41fb72:	dec    edi
  41fb73:	call   DWORD PTR [esi]
  41fb75:	int3   
  41fb76:	popa   
  41fb77:	dec    esp
  41fb79:	popa   
  41fb7a:	xchg   ecx,eax
  41fb7b:	add    BYTE PTR [edi-0x7d],bl
  41fb7e:	mov    dl,0x0
  41fb80:	add    BYTE PTR [esi],bh
  41fb82:	loop   0x41fb83
  41fb84:	inc    BYTE PTR [ebx+0x4d89ff5a]
  41fb8a:	dec    ecx
  41fb8b:	call   FWORD PTR [eax+eax*1-0x6bff0044]
  41fb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb93:	mov    DWORD PTR [ecx-0x77],edx
  41fb96:	adc    al,0x83
  41fb98:	jmp    eax
  41fb9a:	(bad)  
  41fb9b:	add    BYTE PTR [edx-0x1],ch
  41fb9e:	gs add bh,bh
  41fba1:	dec    esp
  41fba2:	sbb    al,0xff
  41fba4:	or     al,0x89
  41fba6:	retf   
  41fba7:	add    BYTE PTR [eax],al
  41fba9:	or     DWORD PTR [ebp-0x1],ebx
  41fbac:	cmp    al,BYTE PTR [eax]
  41fbae:	and    edi,edi
  41fbb0:	int3   
  41fbb1:	sti    
  41fbb2:	cwde   
  41fbb3:	add    BYTE PTR [esp+ecx*8-0x270033a0],cl
  41fbba:	or     esp,ecx
  41fbbc:	and    BYTE PTR [eax],al
  41fbbe:	clc    
  41fbbf:	(bad)  
  41fbc0:	push   DWORD PTR [ecx]
  41fbc2:	(bad)  
  41fbc5:	add    BYTE PTR [edi+edi*8-0x7c360800],cl
  41fbcc:	xchg   ebp,eax
  41fbcd:	(bad)  
  41fbce:	jg     0x41fbd0
  41fbd0:	jmp    FWORD PTR [ebp-0x11]
  41fbd3:	add    BYTE PTR [esi],bh
  41fbd5:	adc    DWORD PTR [edx-0x1],0xffffffff
  41fbd9:	(bad)  
  41fbda:	mov    ah,0x89
  41fbdc:	or     eax,0x69ff
  41fbe1:	fidiv  WORD PTR [esi-0x7d]
  41fbe4:	cmp    bh,bh
  41fbe6:	fdiv   st(7),st
  41fbe8:	jmp    DWORD PTR [ebx+ebp*8]
  41fbeb:	add    BYTE PTR [eax-0x1],al
  41fbee:	cmp    bh,0x83
  41fbf1:	icebp  
  41fbf2:	jle    0x41fbf4
  41fbf4:	mov    esi,0xcc899dff
  41fbf9:	lds    esi,FWORD PTR [ecx+ecx*4-0x76c800e5]
  41fc00:	dec    ebp
  41fc02:	data16 add BYTE PTR [eax-0x7cff9901],ah
  41fc09:	push   cs
  41fc0a:	push   cs
  41fc0b:	add    BYTE PTR [eax-0x1],ah
  41fc0e:	sar    edi,0x0
  41fc11:	push   ss
  41fc12:	cld    
  41fc13:	call   FWORD PTR [esi]
  41fc15:	int3   
  41fc16:	mov    ds:0xca0aff00,al
  41fc1b:	push   eax
  41fc1d:	int3   
  41fc1e:	sahf   
  41fc1f:	cmp    edi,0xffffffcd
  41fc22:	pop    ebx
  41fc23:	add    BYTE PTR [esi],dl
  41fc25:	(bad)  
  41fc26:	jmp    0x3000:0xb8c3ff83
  41fc2d:	jmp    DWORD PTR [ebp+0x615f8383]
  41fc33:	cmp    edi,0xffffffff
  41fc36:	pop    eax
  41fc37:	mov    DWORD PTR [ebx-0x2cffd835],eax
  41fc3d:	add    BYTE PTR [esi],bh
  41fc3f:	add    BYTE PTR [ebx-0x700051af],al
  41fc45:	xor    DWORD PTR [edi-0x2a2b7d00],0xffffffff
  41fc4c:	call   0xf379:0xcce0ff
  41fc53:	xor    DWORD PTR [ebx],0xffffffff
  41fc56:	push   es
  41fc57:	inc    DWORD PTR [eax]
  41fc59:	stc    
  41fc5a:	xchg   ebp,eax
  41fc5b:	add    BYTE PTR [esi],ch
  41fc5d:	(bad)  
  41fc5e:	fiadd  DWORD PTR [ebx-0xd56801]
  41fc64:	xchg   ebx,eax
  41fc65:	add    BYTE PTR [ecx-0x31abff01],cl
  41fc6b:	call   FWORD PTR [ecx-0x1]
  41fc6e:	mov    edi,edi
  41fc70:	inc    DWORD PTR [ebp-0x5d00ea]
  41fc76:	jo     0x41fc77
  41fc78:	int3   
  41fc79:	cmp    DWORD PTR [edi-0x26005077],ebp
  41fc7f:	add    BYTE PTR [eax],al
  41fc81:	pop    ecx
  41fc82:	mov    ebp,0x88ff6400
  41fc87:	add    bh,bh
  41fc89:	aas    
  41fc8a:	out    dx,eax
  41fc8b:	call   FWORD PTR [eax+eax*1-0x3033ff85]
  41fc92:	adc    ecx,esp
  41fc94:	popf   
  41fc95:	int3   
  41fc96:	xor    edi,edi
  41fc98:	call   DWORD PTR [esi+0x51ff58]
  41fc9e:	test   BYTE PTR [ebx-0x33569400],al
  41fca4:	sti    
  41fca5:	call   FWORD PTR [edx-0x4bdbff01]
  41fcab:	jmp    DWORD PTR [ecx-0x1]
  41fcae:	fild   WORD PTR [eax]
  41fcb0:	mov    DWORD PTR [eax+0x87ff0b],eax
  41fcb6:	or     edi,edi
  41fcb8:	add    BYTE PTR [eax],dl
  41fcba:	scas   al,BYTE PTR es:[edi]
  41fcbb:	inc    DWORD PTR [edi-0x1]
  41fcbe:	adc    bh,bh
  41fcc0:	add    BYTE PTR [ecx],cl
  41fcc2:	cmp    edi,0xffffffb3
  41fcc5:	add    DWORD PTR [ebp+0x4f6fff00],0xffffffff
  41fccc:	pop    ecx
  41fccd:	jmp    DWORD PTR [ebp+0x0]
  41fcd0:	(bad)  
  41fcd1:	cmp    BYTE PTR [esi],al
  41fcd3:	add    BYTE PTR [ebx-0x3376c801],bl
  41fcd9:	jbe    0x41fc6a
  41fcdb:	push   edi
  41fcdd:	inc    DWORD PTR [edx]
  41fcdf:	int3   
  41fce0:	add    BYTE PTR [ecx+ebx*8-0x77],ch
  41fce4:	jae    0x41fce5
  41fce6:	ret    0x0
  41fce9:	sub    BYTE PTR [eax-0x1],dh
  41fcec:	rol    DWORD PTR [eax],0x1
  41fcef:	add    BYTE PTR [eax],al
  41fcf1:	dec    DWORD PTR [edi]
  41fcf3:	int3   
  41fcf4:	imul   edi,edi,0xffffff92
  41fcf7:	inc    DWORD PTR [eax]
  41fcf9:	imul   esp,DWORD PTR [eax+0x0],0xff9dff5f
  41fd00:	add    BYTE PTR [edx-0x6dffbd],dh
  41fd06:	push   edi
  41fd07:	inc    DWORD PTR [eax]
  41fd09:	xor    DWORD PTR [edi+edi*8],edi
  41fd0c:	adc    al,0x0
  41fd0e:	push   eax
  41fd0f:	add    bh,bh
  41fd11:	mov    bl,0x7f
  41fd13:	int3   
  41fd14:	dec    eax
  41fd15:	inc    DWORD PTR [ebx-0x1]
  41fd18:	add    ch,dl
  41fd1a:	repnz dec DWORD PTR [ecx+0x0]
  41fd1e:	inc    ebx
  41fd1f:	add    bh,bh
  41fd21:	add    edi,0xffffffff
  41fd24:	adc    eax,0x83ffbe00
  41fd29:	push   ss
  41fd2a:	or     BYTE PTR [ecx+0xdcff0b],cl
  41fd30:	dec    DWORD PTR [ecx+0x618315]
  41fd36:	cmp    eax,0x421e8900
  41fd3b:	inc    esi
  41fd3d:	mov    DWORD PTR [ebx],ebx
  41fd3f:	(bad)  
  41fd40:	inc    edi
  41fd42:	loopne 0x41fd44
  41fd44:	iret   
  41fd45:	add    al,bl
  41fd47:	(bad)  
  41fd48:	call   DWORD PTR [ebx-0x4d]
  41fd4b:	add    BYTE PTR [ebx+0xfdff],al
  41fd51:	jne    0x41fdac
  41fd53:	inc    edi
  41fd55:	inc    DWORD PTR [ecx-0x1]
  41fd58:	int3   
  41fd59:	push   eax
  41fd5a:	cmp    eax,DWORD PTR [ebx-0x7cf97cf2]
  41fd60:	jmp    FWORD PTR [eax+0x4]
  41fd63:	cmp    DWORD PTR [edi-0x33008500],0x39
  41fd6a:	push   edi
  41fd6b:	sbb    DWORD PTR [edi+edi*8+0x11ffff1b],0x37
  41fd73:	dec    DWORD PTR [eax]
  41fd75:	jmp    FWORD PTR [ebp+0x634083cc]
  41fd7b:	call   FWORD PTR [edi-0x7d]
  41fd7e:	add    cl,ah
  41fd80:	call   DWORD PTR [ebx+ebp*2+0x0]
  41fd84:	pusha  
  41fd85:	mov    DWORD PTR [edx+0x0],ecx
  41fd88:	add    BYTE PTR [eax+0x28],bl
  41fd8b:	mov    DWORD PTR [eax+eax*1],edi
  41fd8e:	pop    edx
  41fd8f:	(bad)  
  41fd90:	jmp    DWORD PTR [edx-0x51]
  41fd93:	int3   
  41fd94:	fld    DWORD PTR [eax]
  41fd96:	cs (bad) 
  41fd98:	jmp    DWORD PTR [edi+0x15]
  41fd9b:	dec    DWORD PTR [eax+eax*1+0xe]
  41fd9f:	int3   
  41fda0:	mov    DWORD PTR [esi-0x3e],edx
  41fda3:	dec    DWORD PTR [eax+eax*1]
  41fda6:	outs   dx,DWORD PTR ds:[esi]
  41fda7:	inc    DWORD PTR [ebx+0x3e00be76]
  41fdad:	int3   
  41fdae:	xor    eax,0x43f58300
  41fdb3:	inc    DWORD PTR [ecx]
  41fdb5:	push   DWORD PTR [eax+0x574900cc]
  41fdbb:	call   FWORD PTR [edx]
  41fdbd:	add    ah,ah
  41fdbf:	(bad)  
  41fdc0:	(bad)  
  41fdc1:	fldenv ds:0x8b008383
  41fdc7:	add    bh,bh
  41fdc9:	or     cl,BYTE PTR [edx+0x0]
  41fdcc:	call   0xffe:0xff0096cc
  41fdd3:	call   FWORD PTR [edi+edi*8+0x2dff004f]
  41fdda:	push   0xffffffff
  41fddc:	(bad)  
  41fddd:	(bad)  
  41fdde:	jp     0x41fddf
  41fde0:	dec    DWORD PTR [edi-0xa30050]
  41fde6:	inc    edi
  41fde7:	inc    DWORD PTR [ebx-0x28001d52]
  41fded:	jmp    FWORD PTR [eax]
  41fdef:	inc    DWORD PTR [eax]
  41fdf1:	(bad)  
  41fdf2:	mov    eax,0x3cffe683
  41fdf7:	inc    DWORD PTR [eax]
  41fdf9:	sbb    DWORD PTR [eax+0x0],ebp
  41fdfc:	jg     0x41fd81
  41fdfe:	fs (bad) 
  41fe00:	push   DWORD PTR [esi+eax*2]
  41fe03:	(bad)  
  41fe04:	mov    ebx,0xffffb0ff
  41fe09:	and    DWORD PTR [ecx+0x4100baff],eax
  41fe0f:	add    DWORD PTR [eax],0x5c
  41fe12:	mov    dl,0x0
  41fe14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe15:	xor    DWORD PTR [ebx-0x1],0xffffffff
  41fe19:	cmp    dh,0xff
  41fe1c:	sar    edi,1
  41fe1e:	ret    
  41fe1f:	inc    DWORD PTR [eax]
  41fe21:	data16 sub al,0x89
  41fe24:	sub    bh,bh
  41fe26:	xor    al,0xff
  41fe28:	add    bh,bh
  41fe2a:	jne    0x41fe2b
  41fe2c:	rol    DWORD PTR [eax],0xce
  41fe2f:	add    BYTE PTR [eax],al
  41fe31:	pop    edx
  41fe32:	stos   BYTE PTR es:[edi],al
  41fe33:	add    BYTE PTR ds:0xa600,cl
  41fe39:	ret    
  41fe3a:	fcos   
  41fe3c:	leave  
  41fe3d:	call   DWORD PTR [esi]
  41fe3f:	(bad)  
  41fe40:	jmp    FWORD PTR [edi+0x24]
  41fe43:	mov    DWORD PTR [eax+0xff75ff],edx
  41fe49:	adc    DWORD PTR [esi-0x317ccc01],edx
  41fe4f:	(bad)  
  41fe50:	(bad)  
  41fe51:	in     eax,dx
  41fe52:	push   ecx
  41fe53:	(bad)  
  41fe54:	jmp    0x8c3:0x830080ff
  41fe5b:	(bad)  
  41fe5c:	mov    eax,0xcc81cc
  41fe61:	(bad)  
  41fe62:	(bad)  
  41fe63:	push   DWORD PTR [eax]
  41fe65:	mov    ebp,ebp
  41fe67:	mov    edi,edi
  41fe69:	(bad)  
  41fe6a:	jl     0x41fdef
  41fe6c:	push   esp
  41fe6d:	call   DWORD PTR [eax+0x1f03ff00]
  41fe73:	cmp    DWORD PTR [ebx+eax*4],0xffffffe8
  41fe77:	inc    DWORD PTR [ebx-0x747c7cdd]
  41fe7d:	add    BYTE PTR [edx],cl
  41fe7f:	(bad)  
  41fe80:	(bad)  
  41fe81:	jg     0x41feb4
  41fe83:	add    BYTE PTR [ebp+0xa4ff],bh
  41fe89:	out    0x3d,eax
  41fe8b:	(bad)  
  41fe8c:	mov    eax,0xccff0100
  41fe91:	bound  esp,QWORD PTR [edx-0x1]
  41fe94:	jo     0x41fe95
  41fe96:	xchg   esi,eax
  41fe97:	int3   
  41fe98:	add    BYTE PTR [esi-0x5c],al
  41fe9b:	call   esp
  41fe9d:	dec    DWORD PTR [eax-0x1]
  41fea0:	dec    esi
  41fea2:	or     cl,BYTE PTR [ecx-0x35000d]
  41fea8:	jmp    FWORD PTR [eax-0x7a]
  41feab:	add    BYTE PTR [edx],ch
  41fead:	xor    DWORD PTR [ebx+eax*4-0x57f900],0xffffff80
  41feb5:	and    DWORD PTR [ecx+0x15b7ff00],0xffffffcc
  41febc:	data16 add BYTE PTR [edi+0x11d283ff],cl
  41fec3:	add    BYTE PTR [ebx-0x33ffa101],dh
  41fec9:	jno    0x41feb5
  41fecb:	adc    DWORD PTR [edx-0x1201],0xffffffc6
  41fed2:	dec    esp
  41fed3:	add    dl,bl
  41fed5:	call   DWORD PTR [edx-0x1]
  41fed8:	call   ebp
  41feda:	inc    ecx
  41fedb:	xor    DWORD PTR [ebx-0x7c3301],0xffffffba
  41fee2:	xchg   edx,eax
  41fee3:	add    BYTE PTR [ebx+eax*4-0x15003304],al
  41feea:	js     0x41feeb
  41feec:	dec    esi
  41feed:	adc    DWORD PTR [edi+0x25018900],0x0
  41fef4:	(bad)  
  41fef5:	int3   
  41fef6:	jl     0x41fef7
  41fef8:	add    BYTE PTR [ebx-0x36],cl
  41fefb:	add    cl,cl
  41fefd:	add    BYTE PTR [edi+edi*8],ch
  41ff00:	add    BYTE PTR [ebx+0x4e],bl
  41ff03:	int3   
  41ff04:	std    
  41ff05:	add    BYTE PTR [edx],dl
  41ff07:	add    BYTE PTR [ebx+0x2eff0dfc],al
  41ff0d:	add    dh,dh
  41ff0f:	add    bh,bh
  41ff11:	scas   eax,DWORD PTR es:[edi]
  41ff12:	adc    eax,0x55ff70ff
  41ff17:	add    ah,cl
  41ff19:	popa   
  41ff1a:	mov    edi,0xc300ea00
  41ff1f:	add    bh,bh
  41ff21:	or     eax,0x8397008f
  41ff26:	out    0x0,al
  41ff28:	push   DWORD PTR [esi]
  41ff2a:	add    edi,edi
  41ff2c:	jo     0x41ff2d
  41ff2e:	sar    bh,1
  41ff30:	sub    DWORD PTR [esi+edx*8-0x1],0xffffffc1
  41ff35:	add    BYTE PTR [edi],ch
  41ff37:	add    DWORD PTR [eax],0xffffffc1
  41ff3a:	pop    es
  41ff3b:	add    ch,cl
  41ff3d:	or     DWORD PTR [edx+0x213600cc],0xffffff83
  41ff44:	cmc    
  41ff45:	jmp    DWORD PTR [edi]
  41ff47:	(bad)  
  41ff48:	call   DWORD PTR [ecx]
  41ff4a:	int3   
  41ff4b:	jmp    DWORD PTR [edi-0xff4f01]
  41ff51:	ror    DWORD PTR [eax-0x1],cl
  41ff54:	jmp    0x5811:0xccffc6ff
  41ff5b:	add    BYTE PTR [edx],bh
  41ff5d:	push   DWORD PTR [ebx-0x1]
  41ff60:	jmp    edi
  41ff62:	pop    eax
  41ff63:	and    esi,0xffffffff
  41ff66:	fcos   
  41ff68:	call   FWORD PTR [edi]
  41ff6a:	mov    al,0xff
  41ff6c:	(bad)  
  41ff6d:	jmp    DWORD PTR [edx-0x6680001]
  41ff73:	adc    DWORD PTR [eax],0x0
  41ff76:	push   es
  41ff77:	add    bh,bh
  41ff79:	mov    ah,0xaf
  41ff7b:	jmp    DWORD PTR [ecx]
  41ff7d:	jmp    DWORD PTR [eax-0x40790000]
  41ff83:	add    ah,ah
  41ff85:	add    BYTE PTR [eax],bl
  41ff87:	inc    DWORD PTR [eax]
  41ff89:	js     0x41ff0c
  41ff8b:	mov    DWORD PTR [eax+eax*1-0x1a],esi
  41ff8f:	mov    edi,edi
  41ff91:	ds jb  0x41ff93
  41ff94:	add    edi,edi
  41ff96:	xchg   edx,eax
  41ff97:	add    BYTE PTR [eax],al
  41ff99:	jge    0x41ffaf
  41ff9b:	inc    DWORD PTR [edi+edi*8]
  41ff9e:	add    bh,bh
  41ffa0:	cmp    DWORD PTR [edi-0x6e],0xffffff89
  41ffa4:	aaa    
  41ffa5:	add    BYTE PTR [ebp+0x0],dh
  41ffa8:	(bad)  
  41ffa9:	fdiv   DWORD PTR [esi+0x268301ff]
  41ffaf:	(bad)  
  41ffb0:	dec    DWORD PTR [edi+0x5c]
  41ffb3:	int3   
  41ffb4:	data16 add BYTE PTR [ecx+0x38289ff],al
  41ffbb:	(bad)  
  41ffbc:	jnp    0x41ffbe
  41ffbe:	fiadd  DWORD PTR [eax]
  41ffc0:	call   FWORD PTR [edi+esi*2+0x38895fff]
  41ffc7:	add    bh,bh
  41ffc9:	xchg   esi,eax
  41ffca:	mov    al,0xff
  41ffcc:	sbb    eax,0xff80ff
  41ffd1:	mov    al,0x1e
  41ffd3:	adc    DWORD PTR [edi-0xff9e01],0xffffff93
  41ffda:	outs   dx,DWORD PTR ds:[esi]
  41ffdb:	push   esp
  41ffdd:	int3   
  41ffde:	ins    DWORD PTR es:[edi],dx
  41ffdf:	mov    edi,edi
  41ffe1:	push   ds
  41ffe2:	and    bh,bh
  41ffe4:	sti    
  41ffe5:	mov    DWORD PTR [eax],esi
  41ffe7:	(bad)  
  41ffe8:	call   FWORD PTR [edi+ecx*2-0x1]
  41ffec:	and    bh,bh
  41ffee:	jecxz  0x41ff73
  41fff0:	(bad)  
  41fff1:	sti    
  41fff2:	inc    eax
  41fff3:	mov    edi,esi
  41fff5:	(bad)  
  41fff6:	mov    ebp,0xb12bcc89
  41fffb:	add    al,bl
  41fffd:	int3   
  41fffe:	push   eax
  41ffff:	inc    DWORD PTR [eax]
  420001:	ror    DWORD PTR [ebp+0x2489bd00],cl
  420007:	add    DWORD PTR [ebx+0x7eff5c12],0x0
  42000e:	dec    ebx
  42000f:	add    bh,bh
  420011:	(bad)  
  420013:	call   FWORD PTR [ebp+0x899f00]
  420019:	dec    ebp
  42001a:	das    
  42001b:	dec    DWORD PTR [edx-0xbb01]
  420021:	and    DWORD PTR [edi+0x5aff7900],ebp
  420027:	(bad)  
  420028:	call   ecx
  42002a:	sar    bh,cl
  42002c:	xchg   ebx,eax
  42002d:	dec    DWORD PTR [edi-0x59ef007d]
  420033:	add    ah,ch
  420035:	(bad)  
  420036:	jle    0x420038
  420038:	cmp    DWORD PTR [ecx+0x65],0xffffff83
  42003c:	rol    BYTE PTR [eax],cl
  42003e:	adc    al,BYTE PTR [eax]
  420040:	add    BYTE PTR [edx],bh
  420042:	pop    ds
  420043:	add    BYTE PTR [ebx-0xb701],bl
  420049:	fidivr DWORD PTR [esp+ecx*8-0x761bffe6]
  420050:	adc    DWORD PTR [eax-0xc40098],0xffffff85
  420057:	mov    edi,edi
  420059:	in     al,dx
  42005a:	sbb    eax,0xfcff8b83
  42005f:	inc    DWORD PTR [eax]
  420061:	inc    eax
  420062:	ins    BYTE PTR es:[edi],dx
  420063:	jmp    FWORD PTR [esi-0x34]
  420066:	sub    eax,DWORD PTR [eax]
  420068:	sbb    DWORD PTR [ebx],0xffffffb0
  42006b:	add    BYTE PTR [eax+0x0],ch
  42006e:	mov    ebx,0x2ac68900
  420073:	add    BYTE PTR [edx-0x7d],bl
  420076:	fadd   DWORD PTR [eax]
  420078:	adc    DWORD PTR [eax-0x7c8d008a],0xffffff8b
  42007f:	inc    DWORD PTR [eax]
  420081:	fs sub bh,bh
  420084:	cmp    bh,0xda
  420087:	(bad)  
  420088:	jmp    ebp
  42008a:	mov    edx,0xe0000dff
  42008f:	add    DWORD PTR [eax],0x34
  420092:	mov    bh,bh
  420094:	lods   al,BYTE PTR ds:[esi]
  420095:	call   DWORD PTR [ebp-0x7aa4007d]
  42009b:	add    BYTE PTR [eax+eax*1+0x49],dh
  42009f:	add    BYTE PTR [eax],al
  4200a1:	push   edx
  4200a2:	mov    eax,0x27ff7983
  4200a7:	mov    DWORD PTR [eax],eax
  4200a9:	sbb    ebx,DWORD PTR [ebp-0x1c764101]
  4200af:	add    bh,bh
  4200b1:	pop    ebx
  4200b2:	or     eax,0xaff2800
  4200b7:	add    ah,cl
  4200b9:	xlat   BYTE PTR ds:[ebx]
  4200ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200bb:	add    ah,al
  4200bd:	add    BYTE PTR [ebx+0x2d6200cc],ch
  4200c3:	call   DWORD PTR [edx-0x1]
  4200c6:	dec    ah
  4200c8:	int3   
  4200c9:	cmp    edi,DWORD PTR [edx+0x0]
  4200cc:	ret    
  4200cd:	int3   
  4200ce:	out    0xff,al
  4200d0:	(bad)  
  4200d1:	cmp    BYTE PTR [ecx-0x7d],dl
  4200d4:	xchg   edi,edi
  4200d6:	cli    
  4200d7:	dec    DWORD PTR [ecx-0x367c6b8e]
  4200dd:	int3   
  4200de:	das    
  4200df:	cmp    edi,0xa
  4200e2:	inc    edx
  4200e3:	inc    DWORD PTR [ebx-0x7d]
  4200e6:	cmp    al,0xff
  4200e8:	push   DWORD PTR [edi+0x1a]
  4200eb:	jmp    FWORD PTR [edx]
  4200ed:	jmp    DWORD PTR [edx+0x0]
  4200f0:	(bad)  
  4200f1:	js     0x42014e
  4200f3:	call   FWORD PTR [edx-0x1]
  4200f6:	pop    DWORD PTR [ebx-0x6f8377]
  4200fc:	xor    eax,0xccff7900
  420101:	and    ch,0x83
  420104:	cmc    
  420105:	add    BYTE PTR [eax-0x6b440034],al
  42010b:	inc    DWORD PTR [ebx-0x34]
  42010e:	(bad)  
  420110:	mov    DWORD PTR [edi-0x33a2ff42],ebx
  420116:	cmp    edi,0xff049f83
  42011c:	(bad)  
  42011e:	adc    eax,0x45600089
  420123:	mov    edi,esp
  420125:	add    BYTE PTR [ebp+0x0],al
  420128:	int3   
  420129:	add    ah,dl
  42012b:	or     edx,0x0
  42012e:	jl     0x42012f
  420130:	add    BYTE PTR [edx+0x68],dh
  420133:	jmp    FWORD PTR [eax+eax*1+0x68fffff2]
  42013a:	push   ds
  42013b:	add    BYTE PTR [edi-0xff3e01],dl
  420141:	jbe    0x420145
  420143:	call   DWORD PTR [eax+eax*1-0x5100ff4f]
  42014a:	xor    eax,0x5fff0089
  42014f:	inc    DWORD PTR [ebx-0xe76fce5]
  420155:	(bad)  
  420156:	jmp    0x6900:0xd430089
  42015d:	mov    DWORD PTR [ebx-0x2a10100],ebp
  420163:	add    BYTE PTR [ebx],dl
  420165:	jmp    FWORD PTR [edi+edi*8+0x453a00]
  42016c:	cdq    
  42016d:	int3   
  42016e:	xor    al,BYTE PTR [eax]
  420170:	add    BYTE PTR [esi],al
  420172:	xchg   ecx,eax
  420173:	add    ah,bh
  420175:	add    BYTE PTR [edi+edi*8-0x508401],ah
  42017c:	jecxz  0x42017e
  42017e:	jns    0x420180
  420180:	int3   
  420181:	mov    dh,0x7c
  420183:	call   DWORD PTR [ebp-0x1]
  420186:	pop    edi
  420187:	mov    DWORD PTR [eax],eax
  420189:	xor    BYTE PTR [ebx-0x1],cl
  42018c:	jmp    0xde22:0x83ffc683
  420193:	sub    DWORD PTR [ebp+0xcfff],0x53
  42019a:	and    edi,edi
  42019c:	push   esi
  42019d:	add    dl,ah
  42019f:	(bad)  
  4201a0:	jmp    FWORD PTR [esp+eax*8]
  4201a3:	add    BYTE PTR ds:0xff838f83,cl
  4201a9:	arpl   WORD PTR [esi+0x5983dacc],bp
  4201af:	add    BYTE PTR [eax],al
  4201b1:	add    edx,edi
  4201b3:	mov    esp,edx
  4201b5:	jmp    ecx
  4201b7:	(bad)  
  4201b8:	(bad)  
  4201b9:	in     eax,dx
  4201ba:	cdq    
  4201bb:	int3   
  4201bc:	and    ah,cl
  4201be:	mov    dh,0xff
  4201c0:	and    DWORD PTR [edx],0x5f
  4201c3:	push   DWORD PTR [eax-0x7c00ef00]
  4201c9:	mov    edx,0xff08ff67
  4201ce:	dec    edx
  4201cf:	(bad)  
  4201d0:	call   DWORD PTR [edi-0x4b]
  4201d3:	call   FWORD PTR [ebp-0x1]
  4201d6:	jbe    0x420161
  4201d8:	add    BYTE PTR ds:0xccdcffdb,dh
  4201de:	dec    ebx
  4201df:	add    DWORD PTR [eax],0xffffffd4
  4201e2:	das    
  4201e3:	add    bh,dl
  4201e5:	call   FWORD PTR [esi-0x1f010100]
  4201eb:	add    dh,dl
  4201ed:	sub    edi,0xffffffff
  4201f0:	adc    DWORD PTR [edi-0x5ff2f],0x49
  4201f7:	inc    DWORD PTR [eax]
  4201f9:	xchg   edi,eax
  4201fa:	fdivp  st(7),st
  4201fc:	std    
  4201fd:	dec    edx
  4201ff:	(bad)  
  420200:	inc    DWORD PTR [eax-0xd0003b]
  420206:	cmp    al,BYTE PTR [eax]
  420208:	push   DWORD PTR [edx-0x8c330c]
  42020e:	mov    al,0x0
  420210:	add    BYTE PTR [eax-0x338e00c2],ah
  420216:	pop    es
  420217:	cmp    edi,0x6e
  42021a:	cwde   
  42021b:	add    dh,ah
  42021d:	int3   
  42021e:	rol    BYTE PTR [eax],0x0
  420221:	and    BYTE PTR [edx+0x118352ff],dl
  420227:	dec    esp
  420229:	out    dx,al
  42022a:	dec    ecx
  42022b:	add    BYTE PTR [ecx-0xf201],al
  420231:	jecxz  0x420214
  420233:	push   DWORD PTR ds:0xffff22ff
  420239:	in     al,0xf0
  42023b:	dec    esi
  42023d:	(bad)  
  42023e:	inc    DWORD PTR [eax]
  420240:	and    ecx,0xffffffa7
  420243:	int3   
  420244:	push   ss
  420245:	int3   
  420246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420247:	add    BYTE PTR [eax],al
  420249:	nop
  42024a:	enter  0xdaff,0x0
  42024e:	push   eax
  42024f:	inc    DWORD PTR [eax]
  420251:	push   eax
  420252:	mov    es,WORD PTR [eax]
  420254:	dec    ebx
  420255:	int3   
  420256:	xor    DWORD PTR [ebx-0x7c9e4400],eax
  42025c:	retf   
  42025d:	add    al,al
  42025f:	add    bh,bh
  420261:	aad    0x86
  420263:	or     DWORD PTR [edi-0x34],0x5d
  420267:	dec    esp
  420269:	mov    al,ds:0xcc038911
  42026e:	cmp    eax,0xe723ffff
  420273:	add    BYTE PTR [ecx-0x3e00],ch
  420279:	lds    esi,FWORD PTR [ebp-0x1]
  42027c:	mov    DWORD PTR gs:[ebx],edi
  42027f:	int3   
  420280:	call   FWORD PTR [esi]
  420282:	iret   
  420283:	add    BYTE PTR [ebx+0x0],cl
  420286:	sar    bh,cl
  420288:	cmp    DWORD PTR [ebx-0xae00f2],0x2c
  42028f:	dec    DWORD PTR [ecx+0x6f006e9e]
  420295:	jmp    DWORD PTR [eax-0x34]
  420298:	adc    DWORD PTR [esp+esi*1-0x707ca301],0x0
  4202a0:	add    BYTE PTR [eax+0x69],ah
  4202a3:	add    ah,al
  4202a5:	inc    DWORD PTR [eax-0x77]
  4202a8:	and    DWORD PTR [esi+0x8ff22],0xfffffffe
  4202af:	(bad)  
  4202b0:	call   DWORD PTR [esp+edx*1]
  4202b3:	or     edi,0xffffffff
  4202b6:	mov    edi,edi
  4202b8:	add    DWORD PTR [ebp-0x977c81],0x2e
  4202bf:	(bad)  
  4202c0:	(bad)  
  4202c1:	mov    eax,0x89a4ffd1
  4202c6:	arpl   WORD PTR [ebx-0x338ebb00],ax
  4202cc:	mov    DWORD PTR ds:[ebp-0x7d],eax
  4202d0:	cmp    DWORD PTR [ebp-0xf200a8],0xffffff9b
  4202d7:	cmp    edi,0xffffffa1
  4202da:	mov    DWORD PTR [eax],eax
  4202dc:	adc    eax,0x5183
  4202e1:	mov    ah,0x79
  4202e3:	add    BYTE PTR [eax+0xfff6ff],al
  4202e9:	scas   al,BYTE PTR es:[edi]
  4202ea:	out    0x0,al
  4202ec:	gs sub esp,0xffffffff
  4202f0:	mov    DWORD PTR [esi-0x41],esp
  4202f3:	dec    DWORD PTR [ebp-0x76ff6b01]
  4202f9:	jb     0x42034e
  4202fb:	int3   
  4202fc:	pop    esi
  4202fd:	add    BYTE PTR [ecx],dl
  4202ff:	inc    DWORD PTR [eax]
  420301:	mov    ebp,0xffb783f3
  420306:	mov    ch,0xff
  420308:	jmp    DWORD PTR [ebp-0x67cdc]
  42030e:	sbb    bh,bh
  420310:	add    BYTE PTR [ebx],bl
  420312:	xchg   edi,eax
  420313:	add    BYTE PTR [ebp-0x1],bl
  420316:	ja     0x420317
  420318:	add    BYTE PTR [ebx+eiz*8-0x1],dl
  42031c:	mov    ebp,0xcc834d00
  420321:	and    ebp,edi
  420323:	int3   
  420324:	cs (bad) 
  420326:	ds int3 
  420328:	(bad)  
  420329:	fistp  QWORD PTR ds:0x5300f589
  42032f:	inc    DWORD PTR [eax]
  420331:	jg     0x4202c5
  420333:	call   FWORD PTR [ebx]
  420335:	dec    DWORD PTR [ebx-0x1]
  420338:	int3   
  420339:	addr16 cdq 
  42033b:	add    BYTE PTR [eax+eax*1-0x42],bh
  42033f:	add    bh,bh
  420341:	mov    esi,0xd200b9
  420346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420347:	int3   
  420348:	adc    DWORD PTR [edi],0xffffffb9
  42034b:	push   DWORD PTR [ebp-0x4f34]
  420351:	inc    esi
  420352:	mov    al,ds:0x8effc4ff
  420357:	inc    DWORD PTR [eax]
  420359:	push   eax
  42035a:	hlt    
  42035b:	int3   
  42035c:	jo     0x42035d
  42035e:	mov    esi,0xab12ff83
  420363:	add    BYTE PTR [ebp+0x0],bl
  420366:	(bad)  
  420369:	sbb    ah,dl
  42036b:	call   DWORD PTR [ebp+0x0]
  42036e:	add    BYTE PTR [ebx-0x8e347d],0x9d
  420375:	(bad)  
  420376:	cli    
  420377:	inc    DWORD PTR [eax]
  420379:	xlat   BYTE PTR ds:[ebx]
  42037a:	jbe    0x42037c
  42037c:	jnp    0x420301
  42037e:	mov    ebx,0x64ef0000
  420383:	cmp    edi,0x0
  420386:	sbb    edi,edi
  420388:	add    bh,dh
  42038a:	xor    eax,0x5dff26ff
  42038f:	add    BYTE PTR [eax],al
  420391:	es cmp bh,bh
  420394:	add    eax,0xff0010ff
  420399:	cli    
  42039a:	mov    cl,0xff
  42039c:	or     eax,DWORD PTR [eax]
  42039e:	pop    eax
  42039f:	(bad)  
  4203a0:	jmp    DWORD PTR ds:0x8336ff4a
  4203a6:	jne    0x42032b
  4203a8:	add    DWORD PTR [ecx-0xdfff3b],0x38
  4203af:	(bad)  
  4203b0:	call   DWORD PTR [ecx-0x62ff56]
  4203b6:	xchg   bh,bh
  4203b8:	(bad)  
  4203b9:	cmp    bh,bh
  4203bb:	add    dh,al
  4203bd:	mov    DWORD PTR [edx+0x3a418300],esi
  4203c3:	dec    DWORD PTR [edx]
  4203c5:	dec    ebp
  4203c7:	add    bh,bh
  4203c9:	mov    esi,0xff60004e
  4203ce:	ss add bh,bh
  4203d1:	clc    
  4203d2:	sub    DWORD PTR ss:[ebp-0x7cff3c01],0x17
  4203da:	into   
  4203db:	add    BYTE PTR [eax-0x767c6600],dh
  4203e1:	mov    al,cs:0xfbff68ff
  4203e7:	inc    DWORD PTR [eax]
  4203e9:	mov    ds:0x54ff36,al
  4203ee:	icebp  
  4203ef:	(bad)  
  4203f0:	(bad)  
  4203f1:	jp     0x4203ed
  4203f3:	sub    DWORD PTR [edx+0x1c89],0x67
  4203fa:	cdq    
  4203fb:	dec    DWORD PTR [eax]
  4203fd:	and    edx,0xffffffff
  420400:	add    cl,cl
  420402:	sbb    ah,cl
  420404:	cmp    eax,0xffff89
  420409:	push   cs
  42040a:	dec    ebx
  42040b:	call   FWORD PTR [ebp-0x7d]
  42040e:	outs   dx,BYTE PTR ds:[esi]
  42040f:	add    bh,bh
  420411:	xlat   BYTE PTR ds:[ebx]
  420412:	jmp    0xffff:0x8ffa4cc
  420419:	enter  0xe2,0xb0
  42041d:	add    BYTE PTR [ecx-0x34],dh
  420420:	add    BYTE PTR [ebp+ebp*8-0x6d766c01],ah
  420427:	add    BYTE PTR [ebx-0xd7cbaea],al
  42042d:	add    BYTE PTR [eax+0x4f2cffff],cl
  420433:	add    BYTE PTR [ebx+0x0],ah
  420436:	inc    esi
  420437:	add    BYTE PTR [ecx-0x4dffdcaf],cl
  42043d:	call   FWORD PTR [edx-0x34]
  420440:	push   DWORD PTR [ebp+0x75]
  420443:	int3   
  420444:	pop    esi
  420445:	add    BYTE PTR [ebp-0x1],bh
  420448:	jmp    edx
  42044a:	pop    ds
  42044b:	add    BYTE PTR [ebp-0xba00],cl
  420451:	test   BYTE PTR [ebx-0x4d009a01],ch
  420457:	add    bh,bh
  420459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42045a:	cmp    bh,0x1b
  42045d:	add    BYTE PTR [esi+0x15580000],cl
  420463:	dec    DWORD PTR [edi]
  420465:	sub    DWORD PTR [ebx],0xffffff83
  420468:	push   eax
  42046a:	sahf   
  42046b:	jmp    FWORD PTR [edi+edi*8+0x38]
  42046f:	(bad)  
  420470:	call   DWORD PTR [ebp-0x3a]
  420473:	push   DWORD PTR [ebx]
  420475:	call   FWORD PTR [esi-0x1]
  420478:	jmp    FWORD PTR [ebp+ebx*1-0x2600d47d]
  42047f:	mov    edi,edi
  420481:	and    al,0xe4
  420483:	mov    DWORD PTR [ecx],ebx
  420485:	(bad)  
  420486:	(bad)  
  420488:	call   eax
  42048a:	mov    ebx,0x9cc68ff
  42048f:	add    bh,bh
  420491:	bound  edx,QWORD PTR [eax+eax*1]
  420494:	sub    ecx,esp
  420496:	add    al,BYTE PTR [ebx-0x7c83c234]
  42049c:	daa    
  42049d:	add    BYTE PTR [esi-0x6b17007d],cl
  4204a3:	call   FWORD PTR [esi]
  4204a5:	jmp    DWORD PTR [esi]
  4204a7:	inc    DWORD PTR [eax]
  4204a9:	add    al,0xbd
  4204ab:	add    BYTE PTR [esi+0x8329ff],ah
  4204b1:	fdiv   DWORD PTR [edi-0x5ffffd01]
  4204b7:	(bad)  
  4204b8:	inc    DWORD PTR [eax-0xb87c5e]
  4204be:	cmp    edi,0xcc5118ff
  4204c4:	sbb    edi,edi
  4204c6:	add    BYTE PTR [ebx+0xae8783],al
  4204cc:	in     al,dx
  4204cd:	push   DWORD PTR [ecx]
  4204cf:	dec    esp
  4204d1:	fwait
  4204d2:	dec    esi
  4204d3:	add    ch,dh
  4204d5:	add    BYTE PTR [eax+0x0],dh
  4204d8:	add    bl,al
  4204da:	mov    ebx,0x2bfff2ff
  4204df:	inc    DWORD PTR [ebx-0x72004e54]
  4204e5:	add    ch,bl
  4204e7:	(bad)  
  4204e8:	call   DWORD PTR [edi-0xa]
  4204eb:	int3   
  4204ec:	(bad)  
  4204ef:	int3   
  4204f0:	add    ah,cl
  4204f2:	mov    al,0x83
  4204f4:	icebp  
  4204f5:	add    BYTE PTR [ebx-0x28750001],dl
  4204fb:	add    bl,cl
  4204fd:	(bad)  
  4204fe:	cmp    al,0xcc
  420500:	(bad)  
  420501:	jmp    0xbb:0x630053
  420508:	add    BYTE PTR [esi],cl
  42050a:	pop    es
  42050b:	push   DWORD PTR [ecx]
  42050d:	add    BYTE PTR [edi],al
  42050f:	inc    DWORD PTR [eax]
  420511:	cmc    
  420512:	and    bh,bh
  420514:	xchg   ebp,eax
  420515:	jmp    FWORD PTR [esi-0x1]
  420518:	adc    DWORD PTR ds:0x12ff07,0x42
  42051f:	(bad)  
  420520:	call   DWORD PTR [ebx+edi*1]
  420523:	jmp    ebx
  420525:	call   DWORD PTR [ebx+0x65a20000]
  42052b:	add    BYTE PTR [ebx-0x1],dh
  42052e:	adc    eax,0x36b700cc
  420533:	mov    eax,edx
  420535:	and    DWORD PTR [eax+eax*1-0xacff00],0x72
  42053d:	jmp    DWORD PTR [edx]
  42053f:	add    bh,bh
  420541:	aas    
  420542:	jne    0x420543
  420544:	jmp    0x6b9c:0x839883
  42054b:	(bad)  
  42054c:	fadd   DWORD PTR [eax]
  42054e:	out    0xcc,al
  420550:	add    bh,ah
  420552:	adc    al,0x83
  420554:	sub    edi,edi
  420556:	aad    0x0
  420558:	inc    DWORD PTR [eax]
  42055a:	mov    al,BYTE PTR [eax]
  42055c:	aam    0x83
  42055e:	stc    
  42055f:	inc    DWORD PTR [eax]
  420561:	xchg   DWORD PTR [esi-0x227c7100],eax
  420567:	(bad)  
  420568:	dec    DWORD PTR [ebp+ecx*1-0x7300077d]
  42056f:	cmp    edi,0xffffffab
  420572:	in     al,0xcc
  420574:	xchg   ebx,eax
  420575:	(bad)  
  420576:	jl     0x420544
  420578:	add    BYTE PTR [ecx+0x52],bh
  42057b:	(bad)  
  42057c:	jmp    0x254f:0xff8364ff
  420583:	inc    edx
  420585:	inc    DWORD PTR [eax]
  420587:	(bad)  
  420588:	call   DWORD PTR [edx+0x15ffdd]
  42058e:	inc    WORD PTR [eax]
  420591:	dec    edi
  420592:	mov    al,0x0
  420594:	mov    esp,0xff6400
  420599:	and    esi,DWORD PTR [eax+0x58ff40cc]
  42059f:	add    BYTE PTR [ebx-0x3a000f40],al
  4205a5:	dec    DWORD PTR [edi-0x495fff01]
  4205ab:	int3   
  4205ac:	pop    eax
  4205ad:	jmp    DWORD PTR [edi-0x1]
  4205b0:	add    BYTE PTR [ecx+0xe9cc94],dh
  4205b6:	in     al,dx
  4205b7:	add    BYTE PTR [eax],al
  4205b9:	sub    DWORD PTR [ebp-0x50008101],esi
  4205bf:	(bad)  
  4205c0:	push   DWORD PTR [ecx+eiz*1-0x5b7cd300]
  4205c7:	inc    DWORD PTR [eax]
  4205c9:	pop    esi
  4205ca:	cli    
  4205cb:	(bad)  
  4205cc:	(bad)  
  4205ce:	and    bh,bh
  4205d0:	call   ebp
  4205d2:	pushf  
  4205d3:	call   FWORD PTR [esi-0xa07d]
  4205d9:	pop    edx
  4205da:	sub    eax,0xdaff86ff
  4205df:	inc    DWORD PTR [eax]
  4205e1:	stc    
  4205e2:	out    dx,al
  4205e3:	call   DWORD PTR [ebp+0x0]
  4205e6:	fs dec esp
  4205e9:	lods   al,BYTE PTR ds:[esi]
  4205ea:	jo     0x4205b8
  4205ec:	dec    ecx
  4205ed:	add    BYTE PTR [ecx+ecx*4],ah
  4205f0:	push   DWORD PTR [esi+0x6b]
  4205f3:	call   FWORD PTR [edi]
  4205f5:	(bad)  
  4205f6:	jmp    0xa19306fa
  4205fb:	(bad)  
  4205fc:	jmp    FWORD PTR ds:[edx]
  4205ff:	inc    DWORD PTR [eax]
  420601:	mov    edi,ebp
  420603:	call   DWORD PTR [esi]
  420605:	mov    DWORD PTR [edx],ebx
  420607:	int3   
  420608:	push   edi
  42060a:	pop    esp
  42060b:	xor    DWORD PTR [ecx+0x0],0xffffffa4
  42060f:	(bad)  
  420610:	call   DWORD PTR ds:0xffe70015
  420616:	dec    edi
  420617:	or     esp,0xffffff9a
  42061a:	fdivp  st(7),st
  42061c:	scas   al,BYTE PTR es:[edi]
  42061d:	call   edx
  42061f:	(bad)  
  420620:	(bad)  
  420621:	mov    edx,0xadffb1
  420626:	mov    ebp,0x7cf38300
  42062b:	inc    ecx
  42062d:	int3   
  42062e:	sub    bh,bh
  420630:	add    BYTE PTR [ecx+0x2d],al
  420633:	add    DWORD PTR [esi-0x7c9000],0xffffffcf
  42063a:	aad    0x89
  42063c:	xor    eax,DWORD PTR [ebx-0x4a767cb1]
  420642:	cdq    
  420643:	cmp    esp,0xffffff89
  420646:	sbb    edi,edi
  420648:	jmp    FWORD PTR [eax-0x4a]
  42064b:	add    dh,dh
  42064d:	add    BYTE PTR [ecx-0x34],bl
  420650:	mov    ecx,edi
  420652:	mov    ebp,0xdaffb400
  420657:	(bad)  
  420658:	push   DWORD PTR [esi-0x7a]
  42065b:	push   ecx
  42065d:	xor    edi,0xffffffff
  420660:	add    ch,cl
  420662:	and    al,0x83
  420664:	ins    BYTE PTR es:[edi],dx
  420665:	add    dl,cl
  420667:	add    bh,bh
  420669:	or     ch,ch
  42066b:	jmp    FWORD PTR [ebx+0x0]
  42066e:	fadd   QWORD PTR [eax]
  420670:	int3   
  420671:	mov    dh,0x52
  420673:	dec    DWORD PTR [ebx]
  420675:	jmp    FWORD PTR [eax]
  420677:	inc    DWORD PTR [ebx+0x6583d451]
  42067d:	add    BYTE PTR [ebp-0x34],dl
  420680:	jmp    DWORD PTR [edi]
  420682:	je     0x420607
  420684:	cmp    bh,bh
  420686:	dec    edx
  420687:	(bad)  
  420688:	call   edx
  42068a:	std    
  42068b:	jmp    FWORD PTR [eax+eax*1]
  42068e:	pop    ecx
  42068f:	add    bh,bh
  420691:	inc    eax
  420692:	jnp    0x420693
  420694:	aaa    
  420695:	add    bh,dh
  420697:	add    BYTE PTR [ebx-0x4f00a113],al
  42069d:	sbb    DWORD PTR [edi+0x0],0xffffffff
  4206a1:	xor    DWORD PTR [edx+0x13ffe5ff],ecx
  4206a7:	cmp    edi,0xffffffa4
  4206aa:	dec    esi
  4206ab:	jmp    FWORD PTR [ecx-0x8834]
  4206b1:	or     eax,0xcc92ffdc
  4206b6:	scas   eax,DWORD PTR es:[edi]
  4206b7:	int3   
  4206b8:	dec    DWORD PTR [ebx]
  4206ba:	pop    ds
  4206bb:	add    ch,dh
  4206bd:	call   FWORD PTR [edi-0x79e2ff7d]
  4206c3:	mov    ecx,ebp
  4206c5:	add    BYTE PTR [esi],dh
  4206c7:	dec    DWORD PTR [ecx+0x76ffe350]
  4206cd:	call   DWORD PTR [ebp+0x69adffff]
  4206d3:	(bad)  
  4206d4:	mov    edx,0xff89f189
  4206d9:	cmp    al,al
  4206db:	add    BYTE PTR [edi-0x1],bl
  4206de:	cld    
  4206df:	add    DWORD PTR [eax],0xfffffffd
  4206e2:	icebp  
  4206e3:	add    BYTE PTR [edx-0x76002334],bh
  4206e9:	lock cmp BYTE PTR [eax],al
  4206ec:	jmp    0x412cf1
  4206f1:	(bad)  
  4206f2:	or     DWORD PTR es:[ebp-0x1],0x4b
  4206f7:	inc    DWORD PTR [eax]
  4206f9:	inc    edi
  4206fa:	or     al,0x0
  4206fc:	dec    edi
  4206fd:	add    BYTE PTR [ebp-0x7f6d0001],al
  420703:	int3   
  420704:	and    BYTE PTR [eax],al
  420706:	mov    eax,ds:0x835a0083
  42070b:	xor    esp,0x0
  42070e:	das    
  42070f:	add    bh,bh
  420711:	ds gs int3 
  420714:	ror    ah,1
  420716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420717:	add    bh,bh
  420719:	sbb    eax,edi
  42071b:	add    DWORD PTR [ecx+0x83f400],0xfffffff6
  420722:	cwde   
  420723:	call   ebp
  420725:	add    bl,bh
  420727:	add    BYTE PTR [ebx+0x22cc5073],al
  42072d:	dec    DWORD PTR [edi+edi*8]
  420730:	sub    ebx,0x16
  420733:	jmp    FWORD PTR [edi+0x0]
  420736:	into   
  420737:	mov    DWORD PTR [eax],eax
  420739:	and    BYTE PTR [ebx+0x5183a7ff],al
  42073f:	dec    DWORD PTR [ecx-0x52ff162b]
  420745:	push   DWORD PTR [edx+0x2e50ff89]
  42074b:	add    BYTE PTR [ebx-0x77],ch
  42074e:	cmp    bh,0xff
  420751:	jecxz  0x4206e3
  420753:	int3   
  420754:	imul   edi,edi,0xffffffbd
  420757:	add    DWORD PTR [ebx-0x2b7c4207],0xffffffff
  42075e:	mov    esi,0x401b00cc
  420763:	dec    DWORD PTR [edi-0xb300]
  420769:	in     al,dx
  42076a:	mov    ebx,0xf6ffc4cc
  42076f:	add    DWORD PTR [ebx+0x6bcc0416],0xffffffff
  420776:	stos   DWORD PTR es:[edi],eax
  420777:	add    BYTE PTR [eax],al
  420779:	adc    cl,0xff
  42077c:	in     al,dx
  42077d:	(bad)  
  42077e:	mov    esi,0x2143ff00
  420783:	add    BYTE PTR [edx],cl
  420785:	add    BYTE PTR [ecx-0x1],bl
  420788:	call   DWORD PTR [ecx-0x80]
  42078b:	sub    DWORD PTR [edx-0x7d],0x1e
  42078f:	add    BYTE PTR [eax],al
  420791:	in     al,dx
  420792:	cdq    
  420793:	add    dl,bl
  420795:	add    BYTE PTR [eax+eax*1],al
  420798:	(bad)  
  420799:	jnp    0x4207be
  42079b:	sub    DWORD PTR [esi+0x5800],0x19
  4207a2:	sbb    al,0x83
  4207a4:	adc    bh,bh
  4207a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a7:	cmp    edi,0x63
  4207aa:	aad    0x83
  4207ac:	jno    0x4207ad
  4207ae:	(bad)  
  4207b0:	dec    DWORD PTR [edi]
  4207b2:	inc    edx
  4207b3:	jmp    DWORD PTR [esi-0x6601]
  4207b9:	mov    al,0x88
  4207bb:	add    BYTE PTR [edx],dh
  4207bd:	push   DWORD PTR ds:0x6b7983ff
  4207c3:	int3   
  4207c4:	out    0x0,al
  4207c6:	mov    ah,0xff
  4207c8:	add    BYTE PTR [eax],ah
  4207ca:	and    ecx,DWORD PTR [ecx+0x6ffb8]
  4207d0:	add    BYTE PTR [ecx-0x42],ah
  4207d3:	add    BYTE PTR [edi+edi*8-0x6700ffcf],dh
  4207da:	mov    dl,0x0
  4207dc:	outs   dx,DWORD PTR ds:[esi]
  4207dd:	add    BYTE PTR [eax+eax*1-0x7d],ah
  4207e1:	stc    
  4207e2:	ins    DWORD PTR es:[edi],dx
  4207e3:	add    BYTE PTR [ebp-0x336c7d],bl
  4207e9:	inc    edx
  4207ea:	mov    ecx,0xd3ccfa00
  4207ef:	add    DWORD PTR [eax],0x5d
  4207f2:	mov    ah,0xcc
  4207f4:	cmp    edi,edi
  4207f6:	mov    al,0x0
  4207f8:	add    BYTE PTR [esi+eax*2-0x1],bl
  4207fc:	cmp    edi,edi
  4207fe:	(bad)  
  420800:	add    bl,ch
  420802:	(bad)  
  420804:	mov    bl,0xff
  420806:	hlt    
  420807:	mov    edi,edi
  420809:	mov    al,ds:0xfff7005c
  42080e:	jne    0x4207dc
  420810:	call   DWORD PTR [ebp-0x33c500bd]
  420816:	test   DWORD PTR [eax],0xffaf5100
  42081c:	jecxz  0x42081d
  42081e:	sub    eax,0xe27c0083
  420823:	jmp    DWORD PTR [ebp+0xfe83]
  420829:	push   esi
  42082a:	test   eax,0x56ffc600
  42082f:	cmp    edi,0x5b
  420832:	add    eax,0x1f006589
  420837:	add    BYTE PTR [eax],al
  420839:	data16 jae 0x42083c
  42083c:	ins    DWORD PTR es:[edi],dx
  42083d:	add    BYTE PTR [eax-0x5c47c01],dl
  420843:	push   DWORD PTR [eax]
  420845:	add    BYTE PTR [esi+0x761e0083],ah
  42084b:	int3   
  42084c:	mov    ?,edi
  42084e:	and    eax,0x73fbffff
  420853:	jmp    DWORD PTR [ebp-0x77]
  420856:	add    al,BYTE PTR [eax]
  420858:	jmp    DWORD PTR [ebx-0x41]
  42085b:	jmp    DWORD PTR [eax-0x1]
  42085e:	je     0x420860
  420860:	dec    DWORD PTR [edx-0xb800bb]
  420866:	sbb    bh,bh
  420868:	add    BYTE PTR [eax],bl
  42086a:	or     eax,0xd300c4ff
  42086f:	(bad)  
  420870:	(bad)  
  420871:	cmp    dh,bl
  420873:	or     eax,0xffffffff
  420876:	dec    ebx
  420877:	int3   
  420878:	add    BYTE PTR [ebp-0x33587cb6],ch
  42087e:	add    bh,bh
  420880:	add    BYTE PTR [eax+0x188307],bl
  420886:	call   0x7fff:0xe55700ff
  42088d:	inc    DWORD PTR [ebx-0x296f0000]
  420893:	sbb    DWORD PTR [eax-0x1],0x39
  420897:	mov    DWORD PTR [ecx+0x50ff5a6a],ecx
  42089d:	int3   
  42089e:	icebp  
  42089f:	add    bh,bh
  4208a1:	outs   dx,BYTE PTR ds:[esi]
  4208a2:	(bad)  
  4208a5:	inc    DWORD PTR [eax+eax*1-0x34]
  4208a9:	enter  0xff48,0x2c
  4208ad:	push   eax
  4208af:	inc    DWORD PTR [eax]
  4208b1:	or     esi,esi
  4208b3:	call   DWORD PTR [edx-0x34]
  4208b6:	push   0x920e8383
  4208bb:	call   DWORD PTR [ebp+0xbe00]
  4208c1:	sbb    eax,DWORD PTR [edx-0x7d]
  4208c4:	sbb    BYTE PTR [ebx+0x2600ff56],al
  4208ca:	rol    DWORD PTR [eax],0x1c
  4208cd:	mov    esi,ebp
  4208cf:	add    bh,bh
  4208d1:	push   ecx
  4208d2:	outs   dx,BYTE PTR ds:[esi]
  4208d3:	add    BYTE PTR [edx-0x7cff1500],bl
  4208d9:	outs   dx,DWORD PTR ds:[esi]
  4208da:	mov    ebx,0x7cff60ff
  4208df:	inc    DWORD PTR [eax]
  4208e1:	hlt    
  4208e2:	aaa    
  4208e3:	call   FWORD PTR [ecx]
  4208e5:	jmp    esp
  4208e7:	mov    DWORD PTR [eax],eax
  4208e9:	es jmp 0xccff:0xe00b3ff
  4208f1:	out    dx,eax
  4208f2:	ss inc ebx
  4208f5:	int3   
  4208f6:	inc    ecx
  4208f7:	mov    edi,edi
  4208f9:	cs in  al,0x89
  4208fc:	cmp    edi,0x9400cccb
  420902:	(bad)  
  420903:	call   DWORD PTR [edi-0x33ff0f01]
  420909:	int3   
  42090a:	int3   
  42090b:	int3   
  42090c:	int3   
  42090d:	int3   
  42090e:	int3   
  42090f:	int3   
  420910:	int3   
  420911:	sub    DWORD PTR ds:0xd1ff0b7e,0xffffff89
  420918:	mov    edi,edi
  42091a:	pop    ebx
  42091b:	adc    DWORD PTR [esi-0x1],edx
  42091e:	test   bh,bh
  420920:	add    BYTE PTR [ebx+0x9b4375],al
  420926:	jne    0x420928
  420928:	(bad)  
  420929:	inc    ebp
  42092b:	adc    al,BYTE PTR [ebx-0x1]
  42092e:	mov    esp,0xa10000ff
  420933:	ja     0x4209ab
  420935:	call   DWORD PTR [ebp-0x7d]
  420938:	(bad)  
  420939:	call   FWORD PTR [esi-0x5d7c7fa6]
  42093f:	add    bh,bh
  420941:	(bad)  
  420942:	cmp    eax,0x800ac67
  420947:	inc    DWORD PTR [eax]
  420949:	mov    DWORD PTR [eax-0x2b],eax
  42094c:	add    BYTE PTR fs:[ebp+0x12ffffcc],ah
  420953:	bound  ecx,QWORD PTR [ebp+0xccd400]
  420959:	add    BYTE PTR [edi+ebp*8],al
  42095c:	and    bh,bh
  42095e:	pop    eax
  42095f:	dec    esp
  420961:	int3   
  420962:	and    DWORD PTR [ecx-0x20],0xffffff89
  420966:	in     eax,dx
  420967:	add    bh,bh
  420969:	inc    eax
  42096b:	cwde   
  42096c:	rol    DWORD PTR [ebx+0xffff19],cl
  420972:	outs   dx,DWORD PTR ds:[esi]
  420973:	test   DWORD PTR ds:0xffff1700,edi
  420979:	call   DWORD PTR [ecx+0x5]
  42097c:	loope  0x420901
  42097e:	jnp    0x42094c
  420980:	add    BYTE PTR [ecx-0xef7866],cl
  420986:	pop    eax
  420987:	(bad)  
  420988:	dec    esp
  42098a:	mov    ds,WORD PTR [edi+eiz*8-0x1]
  42098e:	inc    ecx
  42098f:	int3   
  420990:	(bad)  
  420991:	jmp    DWORD PTR [ebp-0x3200778a]
  420997:	add    BYTE PTR [eax],al
  420999:	jmp    FWORD PTR [ecx-0x5c]
  42099c:	sbb    al,0xff
  42099e:	cmp    BYTE PTR [eax],al
  4209a0:	add    BYTE PTR [eax],al
  4209a2:	cmp    ebx,DWORD PTR [edx+0xe68376]
  4209a8:	add    bh,bh
  4209aa:	les    ecx,FWORD PTR [edx+0x7e]
  4209ad:	call   FWORD PTR [esi]
  4209af:	add    ah,cl
  4209b1:	(bad)  
  4209b2:	(bad)  [esp+ebx*4-0x1]
  4209b6:	xchg   ecx,eax
  4209b7:	cmp    edi,0x0
  4209ba:	pop    ds
  4209bb:	sbb    esi,DWORD PTR [esi-0x7d]
  4209be:	sbb    DWORD PTR [eax],eax
  4209c0:	add    BYTE PTR [eax],al
  4209c2:	jmp    0xcf42bfe9
  4209c7:	(bad)  
  4209c8:	inc    DWORD PTR [ebx-0x7c4a21da]
  4209ce:	xchg   BYTE PTR [eax],al
  4209d0:	inc    DWORD PTR [eax]
  4209d2:	daa    
  4209d3:	jl     0x420a2a
  4209d5:	and    DWORD PTR [eax+0x0],0xffffffff
  4209d9:	(bad)  
  4209da:	cld    
  4209db:	mov    ah,0x5f
  4209dd:	jmp    esp
  4209df:	int3   
  4209e0:	dec    DWORD PTR [ecx+0x3e4b97]
  4209e6:	xchg   edx,eax
  4209e7:	add    BYTE PTR [ebx-0x32c87700],al
  4209ed:	(bad)  
  4209ee:	mov    edi,0x1c83ffff
  4209f3:	or     bh,BYTE PTR [ebp+0xfff9ff]
  4209f9:	jmp    FWORD PTR [edi+0x66ccb722]
  4209ff:	dec    DWORD PTR [ecx-0x75c4e101]
  420a05:	adc    DWORD PTR [ecx+0x5ffccff],0x1d
  420a0c:	pop    esp
  420a0d:	add    ch,bh
  420a0f:	inc    DWORD PTR [eax]
  420a11:	int3   
  420a12:	dec    esi
  420a13:	(bad)  
  420a14:	mov    al,0x83
  420a16:	mov    bh,bh
  420a18:	add    bh,bh
  420a1a:	call   DWORD PTR [ebx-0x7c]
  420a1d:	call   eax
  420a1f:	or     esp,0xffffff83
  420a22:	call   0xa7cbd26c
  420a27:	add    bh,bh
  420a29:	jmp    DWORD PTR [edi-0x2d]
  420a2c:	lods   al,BYTE PTR ds:[esi]
  420a2d:	add    ch,bh
  420a2f:	(bad)  
  420a30:	inc    DWORD PTR [ebx-0x6d52c7]
  420a36:	mov    edi,0x39008389
  420a3b:	fisttp QWORD PTR [ebx-0x7d]
  420a3e:	inc    eax
  420a3f:	inc    DWORD PTR [ebx-0x711d8b01]
  420a45:	(bad)  
  420a46:	(bad)  
  420a48:	add    BYTE PTR [ecx+0x646093],cl
  420a4e:	jg     0x4209d3
  420a50:	add    BYTE PTR [eax],al
  420a52:	and    al,0xd
  420a54:	mov    ebx,0x83ff7783
  420a59:	push   DWORD PTR [ebx+0x3cc199b]
  420a5f:	add    BYTE PTR [ebx+0x1b6a4f00],al
  420a65:	inc    DWORD PTR [ebp+0x0]
  420a68:	add    bh,bh
  420a6a:	mov    ebx,0x8500f795
  420a6f:	int3   
  420a70:	add    bh,bh
  420a72:	mov    ebx,0x7ff0efb
  420a77:	inc    DWORD PTR [eax]
  420a79:	add    BYTE PTR [edi+eiz*1-0x7c45ffd7],dh
  420a80:	add    BYTE PTR [ebx-0x1ab86b],al
  420a86:	dec    edx
  420a87:	inc    DWORD PTR [eax]
  420a89:	jmp    DWORD PTR [eax+esi*8]
  420a8c:	push   WORD PTR [edx]
  420a8f:	add    bh,bh
  420a91:	inc    DWORD PTR [ecx]
  420a93:	xor    DWORD PTR [ebx-0x1],ebx
  420a96:	add    BYTE PTR es:[eax],al
  420a99:	and    DWORD PTR [edi+0x37ffc794],0xffffffff
  420aa0:	dec    esp
  420aa2:	je     0x420a3e
  420aa4:	call   0x14173a8
  420aa9:	mov    DWORD PTR [edx],ebp
  420aab:	push   edi
  420aac:	rol    BYTE PTR [ebx+0xccfffc],cl
  420ab2:	cwde   
  420ab3:	pop    ebp
  420ab4:	repz int3 
  420ab6:	sar    bh,1
  420ab8:	inc    DWORD PTR [ebx-0xe88cfb]
  420abe:	das    
  420abf:	add    BYTE PTR [eax],al
  420ac1:	mov    DWORD PTR [ecx+0x36007f56],edi
  420ac7:	add    BYTE PTR [eax],al
  420ac9:	jmp    FWORD PTR [ebx]
  420acb:	xchg   edx,eax
  420acc:	jo     0x420a9a
  420ace:	out    dx,eax
  420acf:	dec    DWORD PTR [ecx+0x6ecc8e83]
  420ad5:	adc    DWORD PTR [esi-0x1],0xffffffff
  420ad9:	add    BYTE PTR [edi-0x2400350d],cl
  420adf:	dec    esp
  420ae1:	add    ch,bh
  420ae3:	fldenv [esi-0x76ffb577]
  420ae9:	or     DWORD PTR [esi],0xffffff9e
  420aec:	mov    ah,0xff
  420aee:	cmp    di,0x0
  420af2:	cld    
  420af3:	mov    bl,0xbc
  420af5:	dec    DWORD PTR [ebp-0x7d]
  420af8:	add    DWORD PTR [eax],0xffffffdc
  420afb:	cwde   
  420afc:	adc    al,0x83
  420afe:	cmp    eax,0x6600cc83
  420b03:	add    BYTE PTR ds:0xffff62ff,dl
  420b09:	jmp    ebp
  420b0b:	pop    ss
  420b0c:	and    BYTE PTR [eax],al
  420b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b0f:	mov    DWORD PTR [ebx-0x3c51f01],eax
  420b15:	add    BYTE PTR [ebx+eax*4+0x0],bl
  420b19:	int3   
  420b1a:	mov    eax,ds:0x25834b90
  420b1f:	inc    DWORD PTR [eax]
  420b21:	add    BYTE PTR [edi+ebp*8],dl
  420b24:	and    edi,edi
  420b26:	inc    edi
  420b27:	add    bh,bh
  420b29:	call   DWORD PTR [ecx+0x4d]
  420b2c:	rol    DWORD PTR [eax],0x70
  420b2f:	(bad)  
  420b30:	(bad)  
  420b31:	jmp    FWORD PTR [edx+0x3b]
  420b34:	pushf  
  420b35:	int3   
  420b36:	mov    esi,0x1a0083ff
  420b3b:	ins    DWORD PTR es:[edi],dx
  420b3c:	sar    edi,cl
  420b3e:	mov    ah,cl
  420b40:	add    BYTE PTR [eax],al
  420b42:	add    al,al
  420b44:	loop   0x420b46
  420b46:	xchg   bh,bh
  420b48:	add    BYTE PTR [eax],al
  420b4a:	xchg   ecx,eax
  420b4b:	lock inc ebx
  420b4d:	add    BYTE PTR [ebx-0x1],bl
  420b50:	add    DWORD PTR [ebx+0x40027f],0x6d
  420b57:	add    BYTE PTR [ebx+0xe793fff],al
  420b5d:	mov    DWORD PTR [eax],esi
  420b5f:	(bad)  
  420b60:	inc    DWORD PTR [ebx-0x763ac5a0]
  420b66:	clc    
  420b67:	add    bh,bh
  420b69:	add    BYTE PTR [eax-0x1c7ca246],ch
  420b6f:	add    bh,bh
  420b71:	(bad)  
  420b72:	jle    0x420b3c
  420b74:	enter  0x5ff,0x83
  420b78:	add    ah,cl
  420b7a:	inc    ebx
  420b7b:	lds    ebp,FWORD PTR [ecx-0x76cf7d]
  420b81:	(bad)  
  420b82:	jmp    0x8300:0x2a8320e1
  420b89:	mov    DWORD PTR [ebx-0x67],edx
  420b8c:	push   es
  420b8d:	(bad)  
  420b8e:	clc    
  420b8f:	(bad)  
  420b90:	(bad)  
  420b91:	jmp    esi
  420b93:	pusha  
  420b94:	aam    0x89
  420b96:	push   ss
  420b97:	(bad)  
  420b98:	inc    DWORD PTR [ebx-0xdef9ec]
  420b9e:	outs   dx,BYTE PTR ds:[esi]
  420b9f:	(bad)  
  420ba0:	inc    DWORD PTR [eax]
  420ba2:	add    eax,DWORD PTR [esi-0x53]
  420ba5:	int3   
  420ba6:	push   0x0
  420ba8:	(bad)  
  420ba9:	(bad)  
  420baa:	fnstcw WORD PTR [ecx+0xbb008d]
  420bb0:	mov    edi,edi
  420bb2:	push   ecx
  420bb3:	xor    ch,bh
  420bb5:	(bad)  
  420bb6:	(bad)  
  420bb7:	(bad)  
  420bb8:	inc    DWORD PTR [eax]
  420bba:	mov    bh,0x6e
  420bbc:	inc    DWORD PTR [ebx-0xff0002]
  420bc2:	mov    al,0xf0
  420bc4:	test   eax,0xff89b6ff
  420bc9:	call   DWORD PTR [ebp+0x12]
  420bcc:	push   edi
  420bcd:	and    DWORD PTR [ebx+0x5600ff00],0xffffffe4
  420bd4:	call   0x7fff:0x83008500
  420bdb:	pop    esp
  420bdc:	je     0x420bde
  420bde:	test   esp,0x1d6cff83
  420be4:	or     eax,0xcc89feff
  420be9:	sbb    DWORD PTR [edi+ebx*8],0xffffffcf
  420bed:	add    dh,dl
  420bef:	cmp    edi,0xffffffff
  420bf2:	push   esp
  420bf3:	and    BYTE PTR [edi-0x7d],cl
  420bf6:	stc    
  420bf7:	inc    DWORD PTR [eax]
  420bf9:	and    DWORD PTR [edi-0x6fff3673],0xffffffff
  420c00:	(bad)  
  420c01:	jmp    DWORD PTR ds:0x4d00c747
  420c07:	inc    DWORD PTR [eax]
  420c09:	jmp    ebp
  420c0b:	inc    ebp
  420c0c:	sub    al,0xff
  420c0e:	add    ah,cl
  420c10:	add    BYTE PTR [ebx-0x7097f7],al
  420c16:	add    al,0xff
  420c18:	add    BYTE PTR [ecx-0xcab3fe],cl
  420c1e:	(bad)  
  420c20:	(bad)  
  420c21:	jmp    FWORD PTR [edx+0x74]
  420c24:	(bad)  
  420c27:	cmp    edi,0x0
  420c2a:	and    eax,0xd4ffc97d
  420c2f:	(bad)  
  420c30:	(bad)  
  420c31:	(bad)  
  420c32:	cmp    ebp,esi
  420c34:	or     bh,bh
  420c36:	inc    ecx
  420c37:	inc    DWORD PTR [eax]
  420c39:	int3   
  420c3a:	rcl    DWORD PTR [edx-0x58],1
  420c3d:	dec    DWORD PTR [ecx]
  420c3f:	add    DWORD PTR [eax],0x0
  420c42:	ror    ebp,0x5e
  420c45:	sbb    ebp,0x0
  420c48:	(bad)  
  420c49:	jmp    DWORD PTR [edi]
  420c4b:	jae    0x420c35
  420c4d:	mov    DWORD PTR [ecx],ebx
  420c4f:	int3   
  420c50:	(bad)  
  420c51:	dec    esi
  420c53:	push   esp
  420c54:	pop    ss
  420c55:	add    BYTE PTR [esi-0x1],ah
  420c58:	add    BYTE PTR [ebx+0x219a80],al
  420c5e:	and    al,0xff
  420c60:	add    BYTE PTR [eax],al
  420c62:	outs   dx,BYTE PTR ds:[esi]
  420c63:	stos   BYTE PTR es:[edi],al
  420c64:	or     ah,0xe8
  420c67:	mov    edi,edi
  420c69:	jmp    FWORD PTR [edx]
  420c6b:	in     eax,dx
  420c6c:	xchg   edi,edi
  420c6e:	add    eax,0x9e00ffcc
  420c73:	xlat   BYTE PTR ds:[ebx]
  420c74:	xchg   esp,eax
  420c75:	add    BYTE PTR [edx+0x5fffffcc],ch
  420c7b:	mov    DWORD PTR [eax-0x334f7d],esp
  420c81:	sbb    esp,0xffffff8f
  420c84:	aad    0xff
  420c86:	jg     0x420c11
  420c88:	inc    DWORD PTR [ebx-0x764c7f3d]
  420c8e:	sar    edi,1
  420c90:	add    bh,bh
  420c92:	es push edi
  420c94:	aas    
  420c95:	add    BYTE PTR [edi+edi*8+0x0],al
  420c99:	add    BYTE PTR [edx+ecx*1-0x67],cl
  420c9d:	and    esp,0xffffffff
  420ca0:	dec    DWORD PTR [ecx-0xe6b1a3]
  420ca6:	or     esp,ecx
  420ca8:	add    BYTE PTR [eax],al
  420caa:	int    0x97
  420cac:	mov    edi,0xffffea83
  420cb1:	add    dl,ch
  420cb3:	and    eax,0xccb883b0
  420cb8:	add    BYTE PTR [eax],al
  420cba:	sub    al,0xd3
  420cbc:	mov    ebx,0xff83cdcc
  420cc1:	add    cl,ah
  420cc3:	push   es
  420cc4:	cs int3 
  420cc6:	cld    
  420cc7:	inc    DWORD PTR [eax]
  420cc9:	jmp    DWORD PTR [eax]
  420ccb:	lahf   
  420ccc:	inc    esp
  420ccd:	mov    DWORD PTR [eax+0x0],esi
  420cd0:	(bad)  
  420cd1:	jmp    FWORD PTR [edi+0x27ff33d0]
  420cd7:	or     DWORD PTR [ecx+0x73f697ff],0xffffffff
  420cde:	xchg   DWORD PTR [ebx+0x1f33ff00],eax
  420ce4:	out    0xff,eax
  420ce6:	xchg   edx,eax
  420ce7:	inc    DWORD PTR [eax]
  420ce9:	int3   
  420cea:	sub    BYTE PTR [edx+0xff0001],bh
  420cf0:	add    BYTE PTR [eax],al
  420cf2:	mov    WORD PTR [esi],cs
  420cf4:	sbb    BYTE PTR [eax],al
  420cf6:	xchg   ebx,eax
  420cf7:	add    DWORD PTR [eax],0xffffff83
  420cfa:	pop    edx
  420cfb:	gs adc edi,edi
  420cfe:	dec    esp
  420cff:	add    BYTE PTR [ecx-0x60d7f000],cl
  420d05:	inc    DWORD PTR [esi+0x2bffff83]
  420d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d0c:	dec    esi
  420d0d:	or     edi,0x0
  420d10:	cmp    edi,0x7b
  420d13:	xchg   ebp,eax
  420d14:	ja     0x420ce2
  420d16:	fild   WORD PTR [ebx-0x606a0000]
  420d1c:	sub    al,0x89
  420d1e:	mov    al,BYTE PTR [eax]
  420d20:	inc    DWORD PTR [ebx-0x835132]
  420d26:	dec    ebp
  420d27:	add    bh,bh
  420d29:	int3   
  420d2a:	lock adc al,0x76
  420d2d:	push   DWORD PTR [ebx-0x7d]
  420d30:	dec    DWORD PTR [ecx+0x8ac278]
  420d36:	or     al,0xff
  420d38:	(bad)  
  420d39:	(bad)  
  420d3a:	fdivr  DWORD PTR [ecx-0x1200b8]
  420d40:	(bad)  
  420d41:	dec    DWORD PTR [esi]
  420d43:	inc    ebp
  420d44:	(bad)  
  420d45:	jmp    DWORD PTR [ecx]
  420d47:	inc    DWORD PTR [eax]
  420d49:	jmp    ecx
  420d4b:	pushf  
  420d4c:	mov    dh,0xff
  420d4e:	push   0xffffffff
  420d50:	inc    DWORD PTR [eax]
  420d52:	fwait
  420d53:	sub    ebx,DWORD PTR [eax+eax*1-0x1a]
  420d57:	add    BYTE PTR [eax],al
  420d59:	int3   
  420d5a:	popa   
  420d5b:	outs   dx,BYTE PTR ds:[esi]
  420d5c:	iret   
  420d5d:	call   FWORD PTR [ebp-0x59000001]
  420d63:	sub    al,0x56
  420d65:	jmp    ebp
  420d67:	(bad)  
  420d68:	dec    esp
  420d6a:	bound  esi,QWORD PTR [edx-0x35]
  420d6d:	sub    DWORD PTR [eax+0x6600ffff],0x4a
  420d74:	and    eax,0xffccf500
  420d79:	sbb    esi,0x4b
  420d7c:	stc    
  420d7d:	push   esp
  420d7f:	int3   
  420d80:	add    bh,bh
  420d82:	pop    edi
  420d83:	imul   ebp,DWORD PTR [edi],0x0
  420d86:	cmp    edi,edi
  420d88:	add    DWORD PTR [eax],0x1c
  420d8b:	jbe    0x420de1
  420d8d:	jmp    edx
  420d8f:	add    bh,bh
  420d91:	xor    DWORD PTR [esi],0xffffffbf
  420d94:	into   
  420d95:	mov    DWORD PTR [eax-0x1],ebx
  420d98:	add    BYTE PTR [eax],al
  420d9a:	xor    cl,dh
  420d9c:	inc    ecx
  420d9d:	add    BYTE PTR [edi-0x5f003301],dl
  420da3:	adc    al,0x3
  420da5:	add    BYTE PTR [edi],bl
  420da7:	dec    esp
  420da9:	call   DWORD PTR [ecx]
  420dab:	push   esi
  420dac:	adc    al,0x0
  420dae:	clc    
  420daf:	add    bh,bh
  420db1:	(bad)  
  420db2:	jp     0x420d7e
  420db4:	ds (bad) 
  420db6:	cmp    edi,edi
  420db8:	add    DWORD PTR [eax],0x48
  420dbb:	adc    al,0x1d
  420dbd:	add    BYTE PTR [ebx+0x0],bh
  420dc0:	add    bh,bh
  420dc2:	jne    0x420e14
  420dc4:	add    al,0xff
  420dc6:	jg     0x420dc8
  420dc8:	inc    DWORD PTR [eax]
  420dca:	push   cs
  420dcb:	(bad)  
  420dcd:	add    BYTE PTR [ecx],bl
  420dcf:	inc    DWORD PTR [eax]
  420dd1:	mov    DWORD PTR [ebx],edi
  420dd3:	outs   dx,BYTE PTR ds:[esi]
  420dd4:	mov    eax,ds:0xffff6100
  420dd9:	add    dh,ah
  420ddb:	adc    al,0x95
  420ddd:	sub    DWORD PTR [ecx-0x1d7cff34],0xffffffc0
  420de4:	test   DWORD PTR [eax],eax
  420de6:	stc    
  420de7:	inc    DWORD PTR [eax]
  420de9:	int3   
  420dea:	sub    ch,bh
  420dec:	sar    bh,0x45
  420def:	add    BYTE PTR [ebx+0x78e1a783],al
  420df5:	inc    edi
  420df7:	inc    DWORD PTR [eax]
  420df9:	add    BYTE PTR [edx-0x5efffd0b],dh
  420dff:	(bad)  
  420e00:	dec    esp
  420e02:	xor    DWORD PTR ds:0xcaffe5,esp
  420e08:	inc    DWORD PTR [eax]
  420e0a:	cli    
  420e0b:	jno    0x420e18
  420e0d:	int3   
  420e0e:	lds    eax,FWORD PTR [ebx+0x1fb88389]
  420e14:	loop   0x420e16
  420e16:	adc    edi,edi
  420e18:	inc    DWORD PTR [eax]
  420e1a:	sbb    al,0x4b
  420e1c:	cwde   
  420e1d:	cmp    DWORD PTR [ebp+0x7500ff83],0x36
  420e24:	mov    edi,edi
  420e26:	(bad)  
  420e27:	inc    DWORD PTR [eax]
  420e29:	add    BYTE PTR [ecx],dh
  420e2b:	xchg   ebx,eax
  420e2c:	inc    esp
  420e2d:	mov    DWORD PTR [esi-0x1],esi
  420e30:	(bad)  
  420e31:	jmp    FWORD PTR [edi]
  420e33:	sub    esp,DWORD PTR [ebx-0x1]
  420e36:	cmp    bh,0x0
  420e39:	push   esi
  420e3b:	repz ret 
  420e3d:	add    bl,dh
  420e3f:	inc    DWORD PTR [eax]
  420e41:	cmp    DWORD PTR [ebp-0x3e],0x1
  420e45:	push   DWORD PTR [esp+ecx*8]
  420e48:	inc    DWORD PTR [ebx-0xc9842c]
  420e4e:	mov    cl,0xff
  420e50:	dec    esp
  420e52:	inc    esi
  420e53:	lock (bad) 
  420e55:	call   DWORD PTR [edi]
  420e57:	cmp    edi,0xffffffff
  420e5a:	ret    0x140c
  420e5d:	add    BYTE PTR [edx-0x3760001],dl
  420e63:	and    al,0xff
  420e65:	mov    DWORD PTR [eax+eax*1+0x0],ebp
  420e69:	int3   
  420e6a:	xchg   edx,eax
  420e6b:	fbld   TBYTE PTR [esi-0x1]
  420e6e:	in     al,dx
  420e6f:	cmp    edi,0xffffff83
  420e72:	xchg   DWORD PTR [eax],ebp
  420e74:	and    DWORD PTR [ebx-0x83],eax
  420e7a:	out    0x5e,eax
  420e7c:	test   bh,bh
  420e7e:	mov    dl,0xff
  420e80:	dec    esp
  420e82:	ins    DWORD PTR es:[edi],dx
  420e83:	xor    ebx,edi
  420e85:	add    BYTE PTR [ebp-0x3f007c01],bl
  420e8b:	jne    0x420e75
  420e8d:	and    DWORD PTR [ebx],0x0
  420e90:	inc    DWORD PTR [eax]
  420e92:	clc    
  420e93:	jae    0x420e24
  420e95:	dec    DWORD PTR [ebp-0x1]
  420e98:	add    ah,cl
  420e9a:	sub    ebx,DWORD PTR [ebx+0x2e]
  420e9d:	add    BYTE PTR [ecx-0x1],al
  420ea0:	int3   
  420ea1:	add    BYTE PTR [ebx-0x3d],dl
  420ea4:	mov    es,WORD PTR [eax]
  420ea6:	mov    BYTE PTR [eax],al
  420ea8:	add    BYTE PTR [ecx-0x7ce587e9],cl
  420eae:	jnp    0x420eb0
  420eb0:	add    ah,cl
  420eb2:	mov    bh,0x80
  420eb4:	and    BYTE PTR [eax],al
  420eb6:	sti    
  420eb7:	(bad)  
  420eb8:	(bad)  
  420eb9:	dec    DWORD PTR [edi-0x60ff43c1]
  420ebf:	add    bh,bh
  420ec1:	add    BYTE PTR [edi-0x49],cl
  420ec4:	std    
  420ec5:	cmp    edi,0xffffffff
  420ec8:	add    bh,bh
  420eca:	mov    ds:0x74ff188a,al
  420ecf:	int3   
  420ed0:	inc    DWORD PTR [eax]
  420ed2:	dec    BYTE PTR [ebx+0x6c]
  420ed5:	(bad)  
  420ed6:	mov    esp,0xc000ffcc
  420edb:	jle    0x420f14
  420edd:	add    BYTE PTR [edi-0x1],bh
  420ee0:	inc    DWORD PTR [eax]
  420ee2:	rol    DWORD PTR [ebx+0x3],cl
  420ee5:	int3   
  420ee6:	test   esp,0x817fff00
  420eec:	cmp    edi,0x77
  420eef:	add    BYTE PTR [eax],al
  420ef1:	jmp    DWORD PTR [ebp+0x1c00ef25]
  420ef7:	add    bh,bh
  420ef9:	mov    DWORD PTR [ecx],ebp
  420efb:	sbb    edi,DWORD PTR [ebx-0x1]
  420efe:	xchg   ecx,eax
  420eff:	(bad)  
  420f00:	(bad)  
  420f01:	push   esi
  420f03:	cdq    
  420f04:	stos   BYTE PTR es:[edi],al
  420f05:	push   DWORD PTR [edx+0x0]
  420f08:	add    bh,bh
  420f0a:	mov    DWORD PTR [edx+eax*4+0x0],ebx
  420f0e:	mov    esi,0x81ffff00
  420f13:	add    al,0xb0
  420f15:	add    BYTE PTR [eax],ah
  420f17:	inc    DWORD PTR [eax]
  420f19:	add    DWORD PTR [edi+ebx*8-0x42ff77],0x0
  420f21:	(bad)  
  420f22:	fsubr  QWORD PTR ds:0xffc7fff3
  420f28:	(bad)  
  420f29:	jmp    eax
  420f2b:	sbb    al,0xbd
  420f2d:	jmp    esp
  420f2f:	inc    DWORD PTR [eax]
  420f31:	dec    DWORD PTR [eax-0xcffc901]
  420f37:	(bad)  
  420f38:	dec    esp
  420f3a:	leave  
  420f3b:	or     ebp,DWORD PTR [ebx+eax*4+0x16]
  420f3f:	add    bh,bh
  420f41:	push   DWORD PTR [edx-0xb]
  420f44:	cmp    DWORD PTR [ebx-0xff1e],eax
  420f4a:	dec    ecx
  420f4b:	lock call 0x4e89:0x800
  420f53:	mov    al,0x7a
  420f55:	push   DWORD PTR [ecx]
  420f57:	inc    DWORD PTR [eax]
  420f59:	int3   
  420f5a:	fidivr WORD PTR [esi]
  420f5c:	or     al,BYTE PTR [eax]
  420f5e:	nop
  420f5f:	or     DWORD PTR [ecx-0x17705301],0xffffff83
  420f66:	jnp    0x420f68
  420f68:	add    BYTE PTR [ebx+0x619cc2],al
  420f6e:	jp     0x420f70
  420f70:	(bad)  
  420f71:	inc    DWORD PTR ds:0x56832114
  420f77:	add    BYTE PTR [ebx-0x1a2a401],al
  420f7d:	add    BYTE PTR [ebp-0x34],dh
  420f80:	dec    esp
  420f82:	popw   ss
  420f84:	jmp    0xff421f88
  420f89:	call   FWORD PTR [eax]
  420f8b:	fild   QWORD PTR [esi-0x1]
  420f8e:	cmp    edi,0x682000ff
  420f94:	mov    bh,0xff
  420f96:	(bad)  
  420f97:	(bad)  
  420f98:	(bad)  
  420f99:	call   DWORD PTR [edi-0x20ff2a65]
  420f9f:	(bad)  
  420fa0:	(bad)  
  420fa1:	dec    edi
  420fa3:	ja     0x420f74
  420fa5:	sbb    ebp,0xffffffff
  420fa8:	inc    DWORD PTR [ebx-0x72eef0]
  420fae:	in     eax,0xff
  420fb0:	dec    esp
  420fb2:	mov    al,0x77
  420fb4:	or     ecx,DWORD PTR [ecx+0xffff14]
  420fba:	pushf  
  420fbb:	mov    ds:0xff4300ff,eax
  420fc0:	add    BYTE PTR [eax],al
  420fc2:	or     bl,BYTE PTR [eax]
  420fc4:	and    al,0x89
  420fc6:	inc    ecx
  420fc7:	inc    DWORD PTR [eax]
  420fc9:	int3   
  420fca:	and    al,0x5f
  420fcc:	test   DWORD PTR [ebx-0x7c0036],0xfff85f47
  420fd6:	sbb    edi,edi
  420fd8:	add    BYTE PTR [ecx+0xaff98a],cl
  420fde:	mov    BYTE PTR [eax],0x0
  420fe1:	add    DWORD PTR [ecx-0x6c],0xffffff85
  420fe5:	inc    DWORD PTR [esi]
  420fe7:	dec    esp
  420fe9:	call   DWORD PTR [edi-0x9]
  420fec:	scas   eax,DWORD PTR es:[edi]
  420fed:	int3   
  420fee:	mov    cl,0xff
  420ff0:	add    BYTE PTR [eax],al
  420ff2:	ins    DWORD PTR es:[edi],dx
  420ff3:	and    eax,DWORD PTR [eax]
  420ff5:	add    BYTE PTR [ebx-0x597c7c01],al
  420ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ffc:	or     ecx,DWORD PTR [ecx-0x7c00ff65]
  421002:	(bad)  
  421003:	cmp    eax,0xaaff87
  421008:	add    DWORD PTR [eax],0xffffff91
  42100b:	mov    edx,0xff58ff8f
  421010:	cmp    edi,0xffffffaa
  421013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421014:	sbb    al,BYTE PTR [ebx+0xffcc97]
  42101a:	inc    edx
  42101b:	inc    ebx
  42101c:	mov    BYTE PTR [eax],al
  42101e:	push   esp
  42101f:	add    bh,bh
  421021:	sbb    DWORD PTR [ecx],0x23
  421024:	mov    al,BYTE PTR [eax]
  421026:	pop    DWORD PTR [eax]
  421028:	(bad)  
  421029:	jmp    FWORD PTR [ebp-0x51009b03]
  42102f:	(bad)  
  421030:	(bad)  
  421031:	jmp    FWORD PTR [ebx+0x42]
  421034:	push   0x0
  421036:	push   esi
  421037:	cmp    edi,0xffffffff
  42103a:	mov    esi,0xfeffe839
  42103f:	add    bh,bh
  421041:	call   edi
  421043:	and    eax,0xffc483cd
  421048:	inc    DWORD PTR [ebx-0x44924c]
  42104e:	icebp  
  42104f:	inc    DWORD PTR [ebx+0x5585b000]
  421055:	sub    DWORD PTR [edi+0x63ffffff],0xffffffbd
  42105c:	popf   
  42105d:	add    BYTE PTR [eax-0x5b00ff01],al
  421063:	sti    
  421064:	push   edx
  421065:	add    BYTE PTR [ebx+eax*4-0x5760ff01],bl
  42106c:	out    dx,eax
  42106d:	jmp    FWORD PTR [eax+eax*1-0x73980100]
  421074:	sub    cl,BYTE PTR [ecx+0x89cc4a]
  42107a:	mov    al,0x9a
  42107c:	adc    eax,0xfffff700
  421081:	dec    DWORD PTR [edx+0x6cff3447]
  421087:	add    bh,bh
  421089:	sbb    DWORD PTR [edx+0x2f],0xfffffffe
  42108d:	call   DWORD PTR [edi-0xc000000]
  421093:	sub    al,0x97
  421095:	sub    DWORD PTR [edi+0x54ffff83],0xffffffe2
  42109c:	scas   al,BYTE PTR es:[edi]
  42109d:	inc    DWORD PTR [edi]
  42109f:	int3   
  4210a0:	add    BYTE PTR [eax],al
  4210a2:	pop    ss
  4210a3:	rol    DWORD PTR [edi],cl
  4210a5:	add    BYTE PTR [edx+0x0],cl
  4210a8:	add    bh,bh
  4210aa:	dec    esp
  4210ab:	jge    0x4210e4
  4210ad:	(bad)  
  4210ae:	jns    0x421033
  4210b0:	(bad)  
  4210b1:	call   FWORD PTR [esi+ecx*1-0x29]
  4210b5:	xor    DWORD PTR [edx-0x7d],0xffffffff
  4210b9:	sbb    esp,0xffffff93
  4210bc:	adc    eax,DWORD PTR [eax]
  4210be:	and    bh,bh
  4210c0:	(bad)  
  4210c1:	push   DWORD PTR [eax]
  4210c3:	lods   al,BYTE PTR ds:[esi]
  4210c4:	xchg   ecx,eax
  4210c5:	mov    DWORD PTR [edi],ebx
  4210c7:	int3   
  4210c8:	add    ah,cl
  4210ca:	push   0x23
  4210cc:	out    dx,al
  4210cd:	dec    DWORD PTR [esi-0x19ff3301]
  4210d3:	push   edx
  4210d4:	and    al,0xff
  4210d6:	xchg   esp,eax
  4210d7:	mov    edi,edi
  4210d9:	push   DWORD PTR ds:0xecffa5cb
  4210df:	cmp    edi,0xffffffff
  4210e2:	jo     0x421151
  4210e4:	mov    esi,0xffb100
  4210e9:	dec    DWORD PTR [ecx]
  4210eb:	call   0x83ff:0x70ff0a
  4210f2:	in     eax,0xbf
  4210f4:	pop    edx
  4210f5:	sub    DWORD PTR [edx-0x1],0x0
  4210f9:	dec    DWORD PTR [edx+0x53]
  4210fc:	xchg   edi,eax
  4210fd:	inc    esp
  4210ff:	cmp    edi,0xffffffff
  421102:	push   eax
  421103:	addr16 (bad) 
  421106:	mov    esp,cs
  421108:	add    bh,bh
  42110a:	pop    ss
  42110b:	sbb    esi,edx
  42110d:	sbb    edi,0xffffffff
  421110:	(bad)  
  421111:	push   DWORD PTR [eax-0xeff6192]
  421117:	cmp    edi,0xffffffff
  42111a:	pop    edx
  42111b:	(bad)  
  42111c:	loopne 0x4210a1
  42111e:	test   DWORD PTR [eax],eax
  421120:	or     DWORD PTR [ecx+0xc61495],0x27
  421127:	int3   
  421128:	add    BYTE PTR [eax],al
  42112a:	popa   
  42112b:	stc    
  42112c:	cmp    bh,bh
  42112e:	push   0x4f8300ff
  421133:	mov    dl,0x53
  421135:	dec    DWORD PTR [edi-0x1]
  421138:	dec    esp
  42113a:	mov    ch,0xce
  42113c:	xor    BYTE PTR [ebx+0x68],al
  421142:	or     al,0x22
  421144:	dec    edi
  421145:	add    BYTE PTR [esi-0x47763301],bl
  42114b:	xor    dl,BYTE PTR [ebp-0x1]
  42114e:	xor    eax,0x6dffffff
  421153:	icebp  
  421154:	int3   
  421155:	int3   
  421156:	mov    ebx,0x118300ff
  42115b:	(bad)  
  42115c:	mov    al,ds:0xffa4ff
  421161:	add    DWORD PTR [edi-0x4e],0x3a
  421165:	cmp    DWORD PTR [edx-0x77],0xffffff89
  421169:	int3   
  42116a:	cld    
  42116b:	sbb    ch,BYTE PTR [edx-0x76167d]
  421171:	(bad)  
  421172:	cli    
  421173:	ins    DWORD PTR es:[edi],dx
  421174:	mov    es,WORD PTR [eax]
  421176:	inc    BYTE PTR [eax]
  421178:	inc    DWORD PTR [eax]
  42117a:	addr16 enter 0xf0,0xf1
  42117f:	(bad)  
  421180:	(bad)  
  421181:	(bad)  
  421182:	in     al,dx
  421183:	dec    eax
  421184:	inc    esi
  421185:	sub    DWORD PTR [esi-0x1],0xffffffff
  421189:	or     DWORD PTR [eax+ecx*4-0x7cdb7c54],0xffffffff
  421191:	mov    edx,ebx
  421193:	retf   0x89d8
  421196:	cwde   
  421197:	add    DWORD PTR [ebx+0x162bcecc],0x0
  42119e:	jns    0x4211a0
  4211a0:	add    bh,bh
  4211a2:	dec    eax
  4211a3:	lahf   
  4211a4:	adc    al,0xff
  4211a6:	push   ss
  4211a7:	or     DWORD PTR [ecx+0x4367cfff],0xffffffff
  4211ae:	idiv   bh
  4211b0:	inc    DWORD PTR [eax]
  4211b2:	aas    
  4211b3:	adc    edi,DWORD PTR [edi+0x834dff]
  4211b9:	mov    DWORD PTR [edi+ebx*2-0x10],ebp
  4211bd:	int3   
  4211be:	js     0x4211bf
  4211c0:	(bad)  
  4211c1:	jmp    esi
  4211c3:	or     ecx,DWORD PTR [ecx-0x1]
  4211c6:	cmp    esp,ecx
  4211c8:	inc    DWORD PTR [ebx-0x622a37]
  4211ce:	or     DWORD PTR [ecx-0x3ef77d00],0xcc3eff23
  4211d8:	dec    esp
  4211da:	push   es
  4211db:	pop    ds
  4211dc:	mov    bh,0xff
  4211de:	outs   dx,DWORD PTR ds:[esi]
  4211df:	mov    DWORD PTR [eax],eax
  4211e1:	mov    DWORD PTR [edx-0x75],eax
  4211e4:	mov    eax,ds:0xfffff300
  4211e9:	call   FWORD PTR [eax+0x2e0000d0]
  4211ef:	(bad)  
  4211f0:	inc    DWORD PTR [ebx-0x33893609]
  4211f6:	adc    ah,cl
  4211f8:	inc    DWORD PTR [eax]
  4211fa:	cmp    bh,ah
  4211fc:	and    eax,0xf400
  421201:	jmp    edx
  421203:	je     0x4211ab
  421205:	int3   
  421206:	mov    cl,0x89
  421208:	int3   
  421209:	add    BYTE PTR [esi],cl
  42120b:	add    esp,DWORD PTR [esi-0x1]
  42120e:	scas   al,BYTE PTR es:[edi]
  42120f:	inc    DWORD PTR [eax]
  421211:	add    BYTE PTR [esi+ecx*4],ah
  421214:	jo     0x421215
  421216:	jge    0x42119b
  421218:	add    bh,bh
  42121a:	adc    DWORD PTR cs:[eax+eax*1-0x3c],0x0
  421220:	cmp    edi,0x5a
  421223:	xchg   ecx,eax
  421224:	add    DWORD PTR [eax],0xffff65
  42122a:	outs   dx,DWORD PTR ds:[esi]
  42122b:	add    DWORD PTR [ebx-0x7c4901],esi
  421231:	add    BYTE PTR [esi-0x22],cl
  421234:	sbb    bh,bh
  421236:	xchg   ebp,eax
  421237:	add    bh,bh
  421239:	inc    DWORD PTR [edi-0x200031f4]
  42123f:	add    BYTE PTR [eax],al
  421241:	add    ah,al
  421243:	shl    ah,cl
  421245:	mov    DWORD PTR [eax-0x1],esi
  421248:	add    ah,cl
  42124a:	dec    eax
  42124b:	repz jo 0x42124e
  42124e:	mov    DWORD PTR [eax],eax
  421250:	inc    DWORD PTR [eax]
  421252:	or     edi,edx
  421254:	popa   
  421255:	push   DWORD PTR [ecx+0x1fffff89]
  42125b:	pop    es
  42125c:	fadd   DWORD PTR [eax]
  42125e:	mov    bl,0x0
  421260:	int3   
  421261:	add    BYTE PTR ds:0x4b83c430,ch
  421267:	add    ah,cl
  421269:	dec    DWORD PTR [edx-0x5d00069f]
  42126f:	add    BYTE PTR [eax],al
  421271:	add    BYTE PTR [edx-0x50],dl
  421274:	stc    
  421275:	jmp    DWORD PTR [esi-0xfff7c01]
  42127b:	sub    eax,0xcc93cc82
  421280:	inc    DWORD PTR [ebx-0x76760e3e]
  421286:	pop    edx
  421287:	inc    DWORD PTR [eax]
  421289:	add    dl,ch
  42128b:	dec    ebp
  42128c:	jecxz  0x42128e
  42128e:	push   0xffffff83
  421290:	inc    DWORD PTR [eax]
  421292:	push   edi
  421293:	inc    edx
  421294:	add    edi,edi
  421296:	inc    DWORD PTR gs:[ebx+0x4bfa36ff]
  42129d:	int3   
  42129e:	sar    bh,cl
  4212a0:	add    bh,bh
  4212a2:	test   eax,0xc3ff68cb
  4212a7:	(bad)  
  4212a8:	inc    DWORD PTR [eax]
  4212aa:	fistp  DWORD PTR [ecx]
  4212ac:	lods   eax,DWORD PTR ds:[esi]
  4212ad:	add    BYTE PTR ds:0x3183ffff,ch
  4212b3:	and    BYTE PTR [edx-0x7c00d901],ah
  4212b9:	jmp    FWORD PTR [esi+edx*1]
  4212bc:	xor    bh,bh
  4212be:	mov    ah,0xff
  4212c0:	int3   
  4212c1:	add    BYTE PTR [ebp-0xd],al
  4212c4:	ja     0x4212c5
  4212c6:	mov    esp,0x9900cc00
  4212cb:	inc    ebx
  4212cc:	lds    eax,FWORD PTR [eax]
  4212ce:	imul   eax,DWORD PTR [eax],0xe37b89ff
  4212d4:	je     0x4212d5
  4212d6:	idiv   edi
  4212d8:	mov    esp,ecx
  4212da:	mov    bl,0x17
  4212dc:	(bad)  
  4212dd:	int3   
  4212de:	add    bh,bh
  4212e0:	add    BYTE PTR [ebx-0x331fa198],al
  4212e6:	jnp    0x42126b
  4212e8:	int3   
  4212e9:	call   ebx
  4212eb:	bnd ret 
  4212ed:	sbb    edx,0xffffff89
  4212f0:	add    bh,bh
  4212f2:	or     eax,0x3100bf05
  4212f7:	dec    esp
  4212f9:	call   DWORD PTR [ecx+0x518326c9]
  4212ff:	(bad)  
  421300:	(bad)  
  421301:	jmp    FWORD PTR [esi-0x38ffa917]
  421307:	add    BYTE PTR [eax],al
  421309:	call   DWORD PTR [edx+0x1f]
  42130c:	lods   eax,DWORD PTR ds:[esi]
  42130d:	dec    DWORD PTR [ecx+0x0]
  421310:	add    bh,bh
  421312:	clc    
  421313:	adc    eax,0xfff900df
  421318:	inc    DWORD PTR [eax]
  42131a:	mov    BYTE PTR [esi-0xc77c4e],dh
  421320:	inc    DWORD PTR [ebx-0x1cadf8]
  421326:	pop    eax
  421327:	add    bh,bh
  421329:	(bad)  
  42132a:	js     0x421349
  42132c:	add    DWORD PTR [eax],eax
  42132e:	push   ecx
  42132f:	add    DWORD PTR [eax],0xffffffcc
  421332:	jmp    0xff:0x4aff7520
  421339:	add    BYTE PTR [ebx-0x64],ch
  42133c:	add    cl,ah
  42133e:	int3   
  42133f:	mov    DWORD PTR [eax],eax
  421341:	call   FWORD PTR [esi+edi*8]
  421344:	or     eax,0x8983afff
  421349:	int3   
  42134a:	icebp  
  42134b:	or     ah,bl
  42134d:	push   edx
  42134f:	add    DWORD PTR [eax],0xffffffff
  421352:	imul   edi,edi,0xffffffa0
  421355:	add    BYTE PTR [esi],dl
  421357:	dec    DWORD PTR [ecx+0xc98cbff]
  42135d:	add    dh,ah
  42135f:	(bad)  
  421360:	inc    DWORD PTR [ebx+0x31cf24]
  421366:	xchg   edx,eax
  421367:	add    BYTE PTR [eax],al
  421369:	push   ebx
  42136b:	cld    
  42136c:	scas   eax,DWORD PTR es:[edi]
  42136d:	add    BYTE PTR [edi-0x69000077],cl
  421373:	lds    ebx,FWORD PTR [esi]
  421375:	jmp    edx
  421377:	dec    esp
  421379:	push   DWORD PTR [ecx+0x7400e524]
  42137f:	(bad)  
  421380:	inc    DWORD PTR [eax]
  421382:	aaa    
  421383:	ins    BYTE PTR es:[edi],dx
  421384:	cmp    al,BYTE PTR [eax]
  421386:	lods   eax,DWORD PTR ds:[esi]
  421387:	dec    DWORD PTR [ecx+0x1089e7cc]
  42138d:	int3   
  42138e:	(bad)  
  42138f:	dec    esp
  421391:	call   eax
  421393:	push   0x83cf0081
  421398:	add    BYTE PTR [ebx+0x6e7a],al
  42139e:	out    0xff,al
  4213a0:	mov    edi,edi
  4213a2:	mov    eax,ds:0x10ffb37a
  4213a7:	(bad)  
  4213a8:	inc    DWORD PTR [eax]
  4213aa:	cwde   
  4213ab:	ja     0x421330
  4213ad:	call   FWORD PTR [eax+eax*1+0x60fa8900]
  4213b4:	outs   dx,DWORD PTR ds:[esi]
  4213b5:	or     DWORD PTR [edi-0x7d],0x0
  4213b9:	inc    DWORD PTR [edi-0x6a]
  4213bc:	pushf  
  4213bd:	int3   
  4213be:	inc    ecx
  4213bf:	inc    DWORD PTR [ebx-0x377b2001]
  4213c5:	(bad)  
  4213c6:	jmp    0x4213c8
  4213c8:	cmp    edi,0x50
  4213cb:	test   DWORD PTR [esp+ecx*8+0x83d0],eax
  4213d2:	in     eax,0x51
  4213d4:	pop    es
  4213d5:	call   eax
  4213d7:	inc    DWORD PTR [ebx+0x48404fff]
  4213dd:	add    BYTE PTR [ecx-0x1],bh
  4213e0:	add    BYTE PTR [eax],al
  4213e2:	mov    dl,0x26
  4213e4:	(bad)  
  4213e5:	jmp    esp
  4213e7:	(bad)  
  4213e8:	inc    DWORD PTR [eax]
  4213ea:	inc    eax
  4213eb:	jne    0x4213c7
  4213ed:	jmp    FWORD PTR [ebx+eax*4+0x1e32ff00]
  4213f4:	in     al,0x83
  4213f6:	loop   0x4213f8
  4213f8:	(bad)  
  4213f9:	call   FWORD PTR [ebx-0x2e00c874]
  4213ff:	add    bh,bh
  421401:	int3   
  421402:	push   esp
  421403:	mov    eax,0xfffeff96
  421408:	add    BYTE PTR [ebx-0xcf724c],al
  42140e:	pop    ds
  42140f:	inc    DWORD PTR [eax]
  421411:	add    al,al
  421413:	pop    ds
  421414:	add    DWORD PTR [eax],0xc
  421417:	dec    esp
  421419:	(bad)  
  42141a:	mov    edx,0xa7ff89ff
  42141f:	add    DWORD PTR [eax],0xffffffff
  421422:	(bad)  
  421423:	jnp    0x4214a1
  421425:	call   FWORD PTR [edi-0x1]
  421428:	add    BYTE PTR [eax],al
  42142a:	sbb    dl,BYTE PTR [eax-0x7ca1fff7]
  421430:	inc    DWORD PTR [ebx+0x91b467]
  421436:	pop    ecx
  421437:	inc    DWORD PTR [eax]
  421439:	dec    DWORD PTR [ebx+0x30]
  42143c:	int    0xff
  42143e:	aam    0xff
  421440:	inc    DWORD PTR [eax]
  421442:	mov    bl,0xa9
  421444:	push   esi
  421445:	jmp    DWORD PTR [edi-0x7d]
  421448:	mov    edi,edi
  42144a:	xchg   ecx,eax
  42144b:	ja     0x421473
  42144d:	call   DWORD PTR [edi+edi*8]
  421450:	inc    DWORD PTR [eax]
  421452:	adc    bh,ch
  421454:	inc    eax
  421455:	mov    DWORD PTR [edi],edx
  421457:	(bad)  
  421458:	inc    DWORD PTR [eax]
  42145a:	fldcw  WORD PTR fs:[ecx-0x3e01]
  421461:	add    BYTE PTR [edx+0x2dff4c55],ch
  421467:	add    bh,bh
  421469:	push   DWORD PTR [esi+0x40ff1fc0]
  42146f:	jmp    FWORD PTR [ebx-0x34]
  421472:	push   eax
  421473:	jp     0x421442
  421475:	add    BYTE PTR [ebx+0xffff00],dl
  42147b:	add    BYTE PTR [edi],al
  42147d:	add    BYTE PTR [ebp+ebx*1-0x1f1600d0],ah
  421484:	fiadd  DWORD PTR [eax]
  421486:	ins    BYTE PTR es:[edi],dx
  421487:	add    BYTE PTR [eax],al
  421489:	(bad)  
  42148a:	(bad)  
  42148b:	inc    edx
  42148d:	mov    DWORD PTR [ebp+0x43],esi
  421490:	ret    
  421491:	jmp    DWORD PTR [esi]
  421493:	inc    edi
  421494:	sbb    edi,edi
  421496:	mov    esi,0xffffffff
  42149b:	push   eax
  42149d:	call   DWORD PTR [esi+edi*4-0x40]
  4214a1:	call   DWORD PTR [edx+0x6b]
  4214a4:	repnz (bad) 
  4214a6:	fadd   QWORD PTR [eax]
  4214a8:	cmp    edi,0xffffffff
  4214ab:	call   DWORD PTR [esi]
  4214ad:	push   DWORD PTR [edi-0x7500feb5]
  4214b3:	loopne 0x421466
  4214b5:	(bad)  
  4214b6:	cmp    eax,0xff00ff
  4214bb:	dec    DWORD PTR [ebx-0x49b99800]
  4214c1:	jmp    eax
  4214c3:	sub    BYTE PTR [edi-0x2e01],bh
  4214c9:	add    DWORD PTR [eax],0xffffff83
  4214cc:	pop    ss
  4214cd:	add    BYTE PTR [ecx+0x630058aa],bl
  4214d3:	push   0x836d00f0
  4214d8:	add    BYTE PTR [ecx-0x617c34],cl
  4214de:	fidivr DWORD PTR [eax]
  4214e0:	loope  0x42146b
  4214e2:	ret    
  4214e3:	dec    ebp
  4214e4:	pop    ebx
  4214e5:	mov    DWORD PTR [esp+ecx*8-0x1],edi
  4214e9:	or     esp,0x0
  4214ec:	jmp    0xa4d4c8f0
  4214f1:	int3   
  4214f2:	push   edx
  4214f3:	mov    ecx,0x8c009e
  4214f8:	int3   
  4214f9:	dec    esp
  4214fb:	add    BYTE PTR [edi-0xebfb17d],bh
  421501:	cmp    DWORD PTR [esi+0x47],0x7e
  421505:	add    BYTE PTR [ecx+0x8300ff],dh
  42150b:	mov    DWORD PTR [edi+edi*8],ebx
  42150e:	mov    fs,WORD PTR [ecx-0x71a1ffb1]
  421514:	adc    edi,edi
  421516:	push   ebx
  421517:	(bad)  
  421518:	inc    DWORD PTR [eax]
  42151a:	inc    DWORD PTR [eax]
  42151c:	push   edx
  42151d:	cmp    DWORD PTR [eax+0x7a836a09],0xffffffd3
  421524:	cmp    edi,0x8306
  42152a:	cmp    edi,0xffffffea
  42152d:	add    BYTE PTR [ecx-0xa002069],dh
  421533:	mov    edx,0x200002
  421538:	or     esp,0xffffffcc
  42153b:	add    BYTE PTR [edi-0x34],dl
  42153e:	pop    es
  42153f:	sbb    BYTE PTR [edi-0x1],ah
  421542:	retf   
  421543:	jg     0x42159a
  421545:	mov    esp,esi
  421547:	add    BYTE PTR [eax],al
  421549:	inc    DWORD PTR [ebx+0xa0093cc]
  42154f:	sub    DWORD PTR [edi+edi*8],eax
  421552:	inc    eax
  421553:	cmp    esi,ebp
  421555:	call   DWORD PTR [edi+0xff00ff]
  42155b:	adc    edx,0xffffff83
  42155e:	stos   BYTE PTR es:[edi],al
  42155f:	into   
  421560:	mov    ah,0xcc
  421562:	daa    
  421563:	pop    ds
  421564:	fiadd  WORD PTR [ebx+0xccffe6]
  42156a:	add    DWORD PTR [eax],0xffffffa6
  42156d:	call   FWORD PTR [edx+eax*4+0x16cc0072]
  421574:	fiadd  DWORD PTR [eax]
  421576:	push   ecx
  421577:	add    DWORD PTR [eax],0x0
  42157a:	add    bh,bh
  42157c:	mov    al,ds:0xbe2f5fff
  421581:	(bad)  
  421582:	jle    0x421514
  421584:	xchg   esp,eax
  421585:	jmp    FWORD PTR [ecx-0x1]
  42158b:	inc    DWORD PTR [ecx+0x2f3520ff]
  421591:	dec    DWORD PTR [ecx-0x48ffbb81]
  421597:	mov    edi,edi
  421599:	dec    DWORD PTR [ecx+0x4d0043ff]
  42159f:	or     DWORD PTR [edi+edi*8-0xcc1195],esi
  4215a6:	mov    edi,edi
  4215a8:	dec    esp
  4215aa:	dec    DWORD PTR [ecx-0x65010069]
  4215b0:	adc    edi,edi
  4215b2:	sbb    al,0x1a
  4215b4:	push   es
  4215b5:	mov    DWORD PTR [edi-0x34],eax
  4215b8:	add    bh,bh
  4215ba:	add    BYTE PTR [eax],al
  4215bc:	daa    
  4215bd:	mov    DWORD PTR [eax-0x40],esp
  4215c0:	add    BYTE PTR [eax],0xa
  4215c3:	test   eax,0xffe4ff95
  4215c8:	add    BYTE PTR [eax],al
  4215ca:	add    DWORD PTR [ebx+0x6b79ff11],0x7b
  4215d1:	add    BYTE PTR [edx-0x777cd20f],bl
  4215d7:	int3   
  4215d8:	(bad)  
  4215d9:	(bad)  
  4215da:	inc    DWORD PTR [eax]
  4215dc:	cli    
  4215dd:	jmp    DWORD PTR [esi-0x45]
  4215e0:	fdivp  st(7),st
  4215e2:	mov    ecx,DWORD PTR [ecx]
  4215e4:	retf   0x6500
  4215e7:	(bad)  
  4215e8:	inc    DWORD PTR [ebx-0x220077]
  4215ee:	in     eax,0x8e
  4215f0:	nop
  4215f1:	sub    DWORD PTR [edi+ecx*8],0xffffffe9
  4215f5:	add    al,ch
  4215f7:	add    BYTE PTR [eax],al
  4215f9:	add    BYTE PTR [eax],al
  4215fb:	xor    DWORD PTR [eax-0x1],0x24
  4215ff:	push   esi
  421600:	das    
  421601:	call   edi
  421603:	sbb    al,0xde
  421605:	add    BYTE PTR [ebx+eax*4],dh
  421608:	(bad)  
  421609:	inc    DWORD PTR [eax]
  42160b:	sub    DWORD PTR [eax],0x0
  42160e:	nop
  42160f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421610:	inc    ecx
  421611:	push   DWORD PTR [esi]
  421613:	into   
  421614:	ror    DWORD PTR [ecx-0xff0001],0x83
  42161b:	add    dh,ah
  42161d:	int3   
  42161e:	out    dx,al
  42161f:	pop    ebx
  421620:	xchg   esi,eax
  421621:	push   DWORD PTR [edx+ecx*4]
  421624:	add    BYTE PTR gs:[edi+edi*8-0x77],ah
  421629:	add    BYTE PTR [eax],al
  42162b:	int3   
  42162c:	mov    dh,0xff
  42162e:	clc    
  42162f:	or     ebp,DWORD PTR ds:0xffc20900
  421635:	mov    ecx,ebx
  421637:	(bad)  
  421638:	inc    DWORD PTR [eax]
  42163a:	inc    DWORD PTR [eax]
  42163c:	sbb    eax,0x68c7b900
  421641:	(bad)  
  421642:	cmp    BYTE PTR [edi],dh
  421644:	mov    eax,0x830c00
  421649:	add    bh,bh
  42164b:	add    edi,0xffffffff
  42164e:	int3   
  42164f:	sub    bh,BYTE PTR [edx-0x6bf4f477]
  421655:	mov    DWORD PTR [ebp-0x77],esi
  42165b:	dec    esp
  42165d:	inc    ebx
  42165f:	inc    esp
  421660:	xchg   esi,eax
  421661:	call   esp
  421663:	ret    
  421664:	xchg   DWORD PTR [ecx-0x80],ecx
  42166a:	(bad)  
  42166b:	dec    DWORD PTR [edi+0x6de35fff]
  421671:	sub    DWORD PTR [ebp+0x59ffb998],0xffffff83
  421678:	inc    DWORD PTR [eax]
  42167a:	add    bh,bh
  42167c:	lods   al,BYTE PTR ds:[esi]
  42167d:	int3   
  42167e:	mov    edi,0xf1ff26b0
  421683:	idiv   DWORD PTR [eax+eax*1+0x77]
  421687:	mov    edi,edi
  421689:	mov    DWORD PTR [eax],eax
  42168b:	add    DWORD PTR [eax+eax*1-0xa64dd5],0xffffffb0
  421693:	xor    edi,ebp
  421695:	add    DWORD PTR [edx-0x33007c7d],0xffffffff
  42169c:	push   0xffffffff
  42169e:	sbb    eax,0xe9ff6e4a
  4216a3:	adc    esp,esp
  4216a5:	jmp    DWORD PTR [eax+0x0]
  4216a8:	inc    DWORD PTR [eax]
  4216aa:	add    BYTE PTR [ecx-0x325e7c51],cl
  4216b0:	test   eax,0xddafcaff
  4216b5:	jmp    eax
  4216b7:	mov    DWORD PTR [ebx+0x18ff8983],eax
  4216bd:	(bad)  
  4216be:	aas    
  4216bf:	les    ebp,FWORD PTR [ebx-0x15f84701]
  4216c5:	add    BYTE PTR [esi-0xff01],bl
  4216cb:	dec    DWORD PTR [esi+0x0]
  4216ce:	add    ecx,DWORD PTR [edx]
  4216d0:	mov    ecx,0xa7535e00
  4216d5:	sbb    ebx,0x0
  4216d8:	add    bh,bh
  4216da:	inc    DWORD PTR [eax]
  4216dc:	cli    
  4216dd:	add    BYTE PTR [eiz*1-0x7f96000d],dh
  4216e4:	in     al,dx
  4216e5:	add    BYTE PTR [edx+0x0],dl
  4216e8:	inc    DWORD PTR [eax]
  4216ea:	inc    DWORD PTR [eax]
  4216ec:	or     al,BYTE PTR [ebx-0x7c190636]
  4216f2:	cmp    edi,ecx
  4216f4:	pop    es
  4216f5:	call   eax
  4216f7:	(bad)  
  4216f8:	(bad)  
  4216f9:	(bad)  
  4216fa:	inc    DWORD PTR [ebx-0x78190009]
  421700:	out    dx,al
  421701:	dec    edi
  421703:	push   esp
  421704:	pop    ss
  421705:	add    BYTE PTR [edi],ah
  421707:	mov    DWORD PTR [eax],eax
  421709:	dec    DWORD PTR [ecx+0x6dff57cc]
  42170f:	mov    ds:0xe08900ea,eax
  421714:	ins    DWORD PTR es:[edi],dx
  421715:	add    dl,cl
  421717:	inc    DWORD PTR [eax]
  421719:	(bad)  
  42171a:	inc    DWORD PTR [eax]
  42171c:	mov    BYTE PTR [ebx-0xdbfa97],0x1b
  421723:	fwait
  421724:	pop    ecx
  421725:	dec    DWORD PTR [ebp+0x0]
  421728:	inc    DWORD PTR [eax]
  42172a:	mov    edi,edi
  42172c:	dec    ebp
  42172d:	xor    DWORD PTR [edi+0x6c],0xffffff80
  421731:	add    BYTE PTR [esi+0x5a004d35],dh
  421737:	add    ah,cl
  421739:	add    bh,bh
  42173b:	add    BYTE PTR [esi-0x93cf01],ch
  421741:	jmp    DWORD PTR [edx-0x2500fca5]
  421747:	inc    DWORD PTR [eax]
  421749:	add    ah,cl
  42174b:	cmp    ebx,0xffffff89
  42174e:	xor    eax,0xa3ffcc55
  421753:	mov    DWORD PTR [eax],ebx
  421755:	cmp    DWORD PTR [edx],0xffffffcc
  421758:	(bad)  
  421759:	inc    DWORD PTR [ebx-0x1b00cf01]
  42175f:	sub    BYTE PTR ds:0x240aa3ff,0x83
  421766:	dec    edi
  421767:	or     esp,0xffffffff
  42176a:	dec    esp
  42176c:	add    al,0x0
  42176e:	mov    ah,0x48
  421770:	and    eax,0xe3567500
  421775:	jmp    DWORD PTR [edi+0x0]
  421778:	int3   
  421779:	inc    DWORD PTR [ebx-0x1f004100]
  42177f:	(bad)  
  421780:	inc    edx
  421781:	jmp    FWORD PTR [ebx+0x54]
  421784:	push   es
  421785:	xor    DWORD PTR ds:0xff8900ff,0xffffff83
  42178c:	adc    BYTE PTR [eax],al
  42178e:	xor    BYTE PTR [edi-0x3c],ch
  421791:	add    BYTE PTR [edi],dl
  421793:	push   esp
  421794:	cmp    edi,0xff83838d
  42179a:	inc    DWORD PTR [eax]
  42179c:	mov    ds:0x520bfaff,al
  4217a1:	add    BYTE PTR [edx],al
  4217a3:	inc    esp
  4217a4:	jmp    0xcc00:0xff008200
  4217ab:	(bad)  
  4217ac:	jp     0x421731
  4217ae:	push   esi
  4217af:	pop    esp
  4217b0:	sar    edi,1
  4217b2:	pop    ecx
  4217b3:	stos   DWORD PTR es:[edi],eax
  4217b4:	sub    bh,bh
  4217b6:	repnz (bad) 
  4217b8:	inc    DWORD PTR [eax]
  4217ba:	add    BYTE PTR [eax],al
  4217bc:	(bad)  
  4217bd:	call   DWORD PTR [edx-0x4e]
  4217c0:	sbb    edi,edi
  4217c2:	mov    bl,0x84
  4217c4:	sbb    edi,edi
  4217c6:	jecxz  0x4217c7
  4217c8:	mov    edi,edi
  4217ca:	(bad)  
  4217cb:	call   DWORD PTR [esi+0x0]
  4217ce:	aam    0xb2
  4217d0:	int    0x0
  4217d2:	shl    BYTE PTR [edi+0x4d],cl
  4217d5:	(bad)  
  4217d6:	jnp    0x4217d7
  4217d8:	add    bh,bh
  4217da:	dec    DWORD PTR [ecx-0x43833cf]
  4217e0:	gs (bad) 
  4217e2:	cmp    ebx,ecx
  4217e4:	or     BYTE PTR [ecx-0x7cff7c3c],0x89
  4217eb:	(bad)  
  4217ec:	jge    0x4217ed
  4217ee:	jbe    0x42183f
  4217f0:	iret   
  4217f1:	mov    DWORD PTR [ecx+0x68],eax
  4217f4:	jmp    0x0:0xccffcfcc
  4217fb:	(bad)  
  4217fc:	jge    0x4217fd
  4217fe:	lods   al,BYTE PTR ds:[esi]
  4217ff:	ret    
  421800:	imul   edi,edi,0xffffff91
  421803:	add    BYTE PTR [edx-0x34],dh
  421806:	nop
  421807:	mov    esp,ecx
  421809:	mov    edi,edi
  42180b:	call   DWORD PTR [ecx-0x66703e01]
  421811:	adc    DWORD PTR [eax+0x2f009709],0xffffffff
  421818:	mov    DWORD PTR [ebx-0xab0001],eax
  42181e:	inc    ebp
  42181f:	xchg   esi,eax
  421820:	or     esp,ecx
  421822:	retf   0x344e
  421825:	mov    DWORD PTR [ebx-0x1],edi
  42182b:	or     esi,0xffffffff
  42182e:	and    BYTE PTR [edx-0x1b],ch
  421831:	add    BYTE PTR [eax+0x30ff3d18],dl
  421837:	inc    DWORD PTR [ebx+0x1cffff89]
  42183d:	int3   
  42183e:	imul   ebx
  421840:	cmp    BYTE PTR [eax],al
  421842:	xchg   edx,eax
  421843:	popa   
  421844:	retf   
  421845:	dec    DWORD PTR [ebx]
  421847:	inc    DWORD PTR [eax]
  421849:	(bad)  
  42184a:	(bad)  
  42184b:	call   FWORD PTR [ecx]
  42184d:	push   DWORD PTR [ebp+0x5c]
  421850:	lds    eax,FWORD PTR [ebx+0x71e13f]
  421856:	fadd   QWORD PTR [eax]
  421858:	add    BYTE PTR [ebx+0x5f00ff],al
  42185e:	mov    esp,0xdcff0966
  421863:	adc    eax,0x7aff3c
  421868:	add    bh,bh
  42186a:	add    bh,bh
  42186c:	push   ds
  42186d:	call   DWORD PTR [eax+0x15000e36]
  421873:	or     DWORD PTR [ebp+0x0],esp
  421876:	arpl   di,di
  421878:	cmp    edi,0x0
  42187b:	dec    eax
  42187d:	call   DWORD PTR [esi+ebx*8+0x50]
  421881:	jmp    DWORD PTR [esi]
  421883:	inc    esi
  421884:	xchg   esp,eax
  421885:	sbb    eax,0x0
  421888:	(bad)  
  421889:	inc    DWORD PTR [eax]
  42188b:	(bad)  
  42188c:	fld    QWORD PTR [eax]
  42188e:	ins    DWORD PTR es:[edi],dx
  42188f:	pop    edi
  421890:	mov    dl,0xff
  421892:	aam    0x34
  421894:	dec    ebp
  421895:	dec    DWORD PTR [eax+eax*1-0x3300007d]
  42189c:	add    al,0x89
  42189e:	ret    
  42189f:	out    dx,al
  4218a0:	std    
  4218a1:	call   FWORD PTR [ebx]
  4218a3:	fidivr WORD PTR [eax]
  4218a5:	mov    DWORD PTR [esi-0xff007d],ebx
  4218ab:	int3   
  4218ac:	ins    DWORD PTR es:[edi],dx
  4218ad:	int3   
  4218ae:	shr    BYTE PTR [esp+ebx*4+0x5edd5000],0x0
  4218b6:	jno    0x4218b8
  4218b8:	add    bh,bh
  4218ba:	add    BYTE PTR [eax],al
  4218bc:	sar    bh,1
  4218be:	leave  
  4218bf:	xor    BYTE PTR [ebp+0x52e52ff],cl
  4218c5:	call   esp
  4218c7:	add    bh,bh
  4218c9:	add    ah,cl
  4218cb:	jmp    DWORD PTR [eax+eax*1-0xe2f93e]
  4218d2:	in     eax,dx
  4218d3:	sbb    al,0xe4
  4218d5:	dec    ebx
  4218d7:	add    ah,cl
  4218d9:	add    bh,bh
  4218db:	add    DWORD PTR [ecx+0x223a1bff],0xffffff89
  4218e2:	hlt    
  4218e3:	mov    ch,0x66
  4218e5:	call   FWORD PTR [ebx-0x7d00]
  4218eb:	add    BYTE PTR [edx-0x1],al
  4218ee:	sbb    DWORD PTR [esi],ebx
  4218f0:	in     eax,dx
  4218f1:	add    BYTE PTR [edi-0x3b338955],ch
  4218f7:	inc    DWORD PTR [ebx-0x6c333400]
  4218fd:	sbb    DWORD PTR [eax+0x19000705],0x1b
  421904:	jge    0x42188f
  421906:	xchg   edx,eax
  421907:	int3   
  421908:	inc    DWORD PTR [ebx-0xd80001]
  42190e:	aam    0x36
  421910:	push   esp
  421911:	inc    esp
  421913:	in     eax,dx
  421914:	add    edi,edi
  421916:	xlat   BYTE PTR ds:[ebx]
  421917:	inc    DWORD PTR [ebx+0x4cccffff]
  42191d:	push   DWORD PTR [edx]
  42191f:	jnp    0x421940
  421921:	push   DWORD PTR [eax+0x2ffff957]
  421927:	add    ah,cl
  421929:	mov    DWORD PTR [eax],eax
  42192b:	adc    DWORD PTR [eax-0x1],0x15
  42192f:	dec    ebx
  421930:	mov    eax,0x9ddfc800
  421935:	inc    edi
  421937:	add    BYTE PTR [ebx-0x17000001],al
  42193d:	call   FWORD PTR [edi-0x6800b370]
  421943:	js     0x4218cb
  421945:	add    BYTE PTR [ebp+0xff8389],ah
  42194b:	add    bl,cl
  42194d:	or     DWORD PTR [edi-0x48],0xffffffe8
  421951:	sub    edx,0xffffffe7
  421954:	mov    ebx,0xff83c600
  421959:	inc    DWORD PTR [eax]
  42195b:	push   DWORD PTR [edx-0x29880401]
  421961:	jmp    esi
  421963:	mov    gs,WORD PTR [eax+0x0]
  421966:	push   ecx
  421967:	cmp    edi,0x0
  42196a:	int3   
  42196b:	jmp    DWORD PTR [ecx]
  42196d:	add    BYTE PTR [eax+0x4cff5558],bh
  421973:	jl     0x4219bd
  421975:	mov    eax,ebx
  421977:	or     DWORD PTR [ecx-0x7d],0xffffffff
  42197e:	xor    cl,dl
  421980:	or     DWORD PTR es:[eax+0x5f009adc],0xffffffff
  421988:	(bad)  
  421989:	dec    DWORD PTR [ecx-0x2576ce01]
  42198f:	in     al,0x81
  421991:	jmp    DWORD PTR [edi+0x62ffd258]
  421997:	add    ah,cl
  421999:	(bad)  
  42199a:	inc    DWORD PTR [ebx-0x4580fff8]
  4219a0:	scas   eax,DWORD PTR es:[edi]
  4219a1:	or     ebx,0x24
  4219a4:	iret   
  4219a5:	int3   
  4219a6:	adc    edi,edi
  4219a8:	(bad)  
  4219a9:	inc    DWORD PTR [ebx-0x6d004b01]
  4219af:	into   
  4219b0:	mov    BYTE PTR [ecx-0x6a0810],cl
  4219b6:	sub    bh,bh
  4219b8:	(bad)  
  4219b9:	inc    DWORD PTR [ebx-0x2bffcc00]
  4219bf:	mov    WORD PTR [edx+0x1155b4ff],?
  4219c5:	add    BYTE PTR [ebp-0xff7c7d],al
  4219cb:	add    al,ah
  4219cd:	dec    DWORD PTR ds:0xa600f2ac
  4219d3:	cmp    eax,0xffb100f8
  4219d8:	(bad)  
  4219d9:	dec    DWORD PTR [ecx-0x7c76ab01]
  4219df:	push   edi
  4219e0:	sbb    cl,ah
  4219e2:	int3   
  4219e3:	ja     0x421a58
  4219e5:	add    DWORD PTR [edx-0x1],0x0
  4219e9:	add    BYTE PTR [ebx-0x5ff5a01],al
  4219ef:	and    al,0x7
  4219f1:	jmp    edi
  4219f3:	mov    dh,0xa7
  4219f5:	dec    DWORD PTR [eax+eax*1-0x1]
  4219fc:	dec    ebx
  4219fd:	push   DWORD PTR [ecx]
  4219ff:	cwde   
  421a00:	push   edi
  421a01:	call   DWORD PTR [ecx+esi*2-0x7cf5ffd1]
  421a08:	add    bh,bh
  421a0a:	dec    DWORD PTR [ecx+0x2eabff27]
  421a10:	adc    al,0xff
  421a12:	dec    ebx
  421a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a14:	dec    esp
  421a15:	add    BYTE PTR [ecx],ah
  421a17:	mov    DWORD PTR [eax],eax
  421a19:	add    bh,bh
  421a1b:	add    BYTE PTR [ecx+ecx*4],dh
  421a1e:	jne    0x4219b9
  421a20:	(bad)  
  421a23:	jae    0x416628
  421a29:	inc    DWORD PTR [eax]
  421a2b:	add    DWORD PTR [ebx+0x7cc619ff],0xffffff83
  421a32:	xor    al,0x5f
  421a34:	xor    edi,edi
  421a36:	inc    esp
  421a37:	add    BYTE PTR [eax],al
  421a39:	add    BYTE PTR [ebx-0x2200e601],al
  421a3f:	jns    0x4219e7
  421a41:	add    BYTE PTR [edx],al
  421a43:	loop   0x4219d3
  421a45:	call   FWORD PTR [edi+edi*8-0xff0100]
  421a4c:	add    eax,DWORD PTR [ebx-0x489357]
  421a52:	test   BYTE PTR [edx-0x2f],0xcc
  421a56:	lea    ecx,[ecx-0x337d]
  421a5c:	ret    0x3100
  421a5f:	out    dx,al
  421a60:	and    edi,edi
  421a62:	mov    BYTE PTR [ecx-0x1f],0x0
  421a66:	or     ecx,DWORD PTR [ecx-0x1]
  421a6c:	mov    al,BYTE PTR [eax]
  421a6e:	pushf  
  421a6f:	jge    0x421a24
  421a71:	call   DWORD PTR [eax]
  421a73:	jecxz  0x421a13
  421a75:	add    BYTE PTR [edi-0x34],ch
  421a78:	int3   
  421a79:	(bad)  
  421a7a:	inc    DWORD PTR [eax]
  421a7c:	(bad)  
  421a7d:	jmp    FWORD PTR [ecx+0x37ff7379]
  421a83:	(bad)  
  421a84:	push   0x83837cff
  421a89:	inc    DWORD PTR [eax]
  421a8b:	(bad)  
  421a8c:	jp     0x421a5a
  421a8e:	outs   dx,DWORD PTR ds:[esi]
  421a8f:	bound  ecx,QWORD PTR [ebx-0x14b3347d]
  421a95:	jmp    FWORD PTR [eax+eax*1-0x7c010000]
  421a9c:	or     bh,bh
  421a9e:	pop    ebx
  421a9f:	in     eax,0x1f
  421aa1:	add    BYTE PTR [ebx+0x20],bh
  421aa4:	jecxz  0x421aa5
  421aa6:	mov    eax,0x83ffff89
  421aab:	xor    DWORD PTR [eax-0x1],0x39
  421aaf:	mov    eax,0xae28ff88
  421ab4:	cwde   
  421ab5:	push   DWORD PTR [edi+edi*8-0x1]
  421ab9:	mov    DWORD PTR [eax],eax
  421abb:	int3   
  421abc:	sub    al,BYTE PTR [eax]
  421abe:	loope  0x421a88
  421ac0:	mov    WORD PTR [eax],es
  421ac2:	fwait
  421ac3:	xchg   ecx,eax
  421ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ac5:	call   DWORD PTR [ebx]
  421ac7:	add    BYTE PTR [eax],al
  421ac9:	int3   
  421aca:	(bad)  
  421acb:	jmp    FWORD PTR [ecx-0x1]
  421ace:	sub    BYTE PTR [edx+0x1759ff55],bh
  421ad4:	dec    edi
  421ad5:	add    bl,bl
  421ad7:	mov    edi,edi
  421ad9:	add    BYTE PTR [eax],al
  421adb:	xor    DWORD PTR [ebx-0x46242001],0xffffffff
  421ae2:	iret   
  421ae3:	inc    eax
  421ae4:	push   eax
  421ae5:	and    esi,0xffffffff
  421ae8:	(bad)  
  421ae9:	(bad)  
  421aea:	(bad)  
  421aeb:	call   DWORD PTR [ebp+0x7ad28fff]
  421af1:	int3   
  421af2:	xor    al,0xc
  421af4:	lds    ecx,FWORD PTR [ecx-0x337c0087]
  421afa:	(bad)  
  421afb:	call   FWORD PTR [esi]
  421afd:	cmp    DWORD PTR [ebx-0x26],0x1b
  421b01:	add    BYTE PTR [ebx],dl
  421b03:	call   0xcd27e716
  421b08:	inc    DWORD PTR [eax]
  421b0a:	dec    esp
  421b0c:	and    DWORD PTR [ebx-0x7c8620d6],eax
  421b12:	sbb    al,ch
  421b14:	bound  ecx,QWORD PTR [ecx-0xf6]
  421b1a:	inc    DWORD PTR [eax]
  421b1c:	pushf  
  421b1d:	add    dl,dh
  421b1f:	(bad)  
  421b20:	sbb    edi,edi
  421b22:	sub    bl,BYTE PTR [edx-0x12]
  421b25:	push   DWORD PTR [eax]
  421b27:	add    bh,bh
  421b29:	dec    esp
  421b2b:	add    BYTE PTR [ebx+0x4d2090cc],al
  421b31:	mov    eax,eax
  421b33:	xchg   bl,al
  421b35:	add    cl,al
  421b37:	(bad)  
  421b38:	dec    DWORD PTR [ecx-0xcc7c01]
  421b3e:	sbb    DWORD PTR ds:0x40bfcc03,ecx
  421b44:	or     eax,DWORD PTR [ebx+0xffed]
  421b4a:	cmp    edi,0xffffffc9
  421b4d:	(bad)  
  421b4e:	aas    
  421b4f:	addr16 add al,0x0
  421b52:	imul   ebx,edx,0x39ff89
  421b58:	add    DWORD PTR [eax],0xffffff83
  421b5b:	push   esi
  421b5d:	(bad)  
  421b5e:	cli    
  421b5f:	js     0x421b3e
  421b61:	and    DWORD PTR [ebx-0x15],0xffffffb2
  421b65:	mov    edi,edx
  421b67:	inc    DWORD PTR [eax]
  421b69:	add    BYTE PTR [ebx+0x61003ecc],al
  421b6f:	jge    0x421b3a
  421b71:	push   ebp
  421b73:	pop    ds
  421b74:	sahf   
  421b75:	call   DWORD PTR [ebp-0x77]
  421b78:	inc    DWORD PTR [ebx-0x336f0001]
  421b7e:	mov    edx,0x85ffc8d8
  421b83:	mov    ah,0x67
  421b85:	add    dl,bl
  421b87:	dec    esp
  421b89:	(bad)  
  421b8a:	(bad)  
  421b8b:	dec    DWORD PTR [eax+0x0]
  421b8e:	and    edx,esi
  421b90:	dec    esi
  421b91:	add    BYTE PTR [ebp+ebx*8-0x6e00e9],dh
  421b98:	(bad)  
  421b99:	inc    DWORD PTR [eax]
  421b9b:	(bad)  
  421b9c:	mov    edx,0x2f7ee7cc
  421ba1:	add    BYTE PTR [esi],bh
  421ba3:	into   
  421ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ba5:	sbb    DWORD PTR [esi-0x1],0xffffffcc
  421ba9:	(bad)  
  421baa:	(bad)  
  421bab:	call   FWORD PTR [edi]
  421bad:	xor    DWORD PTR [esi+0x1000a7d6],0x78
  421bb4:	sti    
  421bb5:	add    BYTE PTR [edi+edi*8+0xffccff],bh
  421bbc:	out    0x0,al
  421bbe:	call   DWORD PTR [ecx]
  421bc0:	and    eax,0xd287e300
  421bc5:	jmp    DWORD PTR ds:0xffff83ff
  421bcb:	int3   
  421bcc:	adc    al,0xff
  421bce:	cmp    DWORD PTR [ecx],ebx
  421bd0:	push   edi
  421bd1:	add    BYTE PTR [ebp+0x5c002d73],bh
  421bd7:	(bad)  
  421bd8:	(bad)  
  421bd9:	inc    DWORD PTR [ebx+0x26ccbaff]
  421bdf:	call   0xcc62:0x37e483ab
  421be6:	adc    eax,0xffffff
  421beb:	call   FWORD PTR [eax+eax*1-0x7ce43285]
  421bf2:	arpl   WORD PTR [esi],bp
  421bf4:	mov    cl,0xff
  421bf6:	(bad)  
  421bf8:	dec    esp
  421bfa:	add    bh,bh
  421bfc:	call   0xf500:0x69764ff
  421c03:	add    DWORD PTR [edx-0x1],ebx
  421c06:	gs (bad) 
  421c08:	inc    DWORD PTR [eax]
  421c0a:	(bad)  
  421c0b:	jmp    DWORD PTR [ebp-0x6f7d6d01]
  421c11:	(bad)  
  421c12:	sti    
  421c13:	pop    ds
  421c14:	dec    edx
  421c15:	jmp    DWORD PTR [edi+0x0]
  421c18:	mov    edi,edi
  421c1a:	add    BYTE PTR [eax],al
  421c1c:	sub    DWORD PTR es:[ebx-0x62ff6ee1],0x6c
  421c24:	outs   dx,DWORD PTR ds:[esi]
  421c25:	(bad)  
  421c26:	clc    
  421c27:	dec    esp
  421c29:	mov    edi,edi
  421c2b:	dec    DWORD PTR [ebp+0x36a38883]
  421c31:	add    dl,dh
  421c33:	scas   al,BYTE PTR es:[edi]
  421c34:	ret    
  421c35:	sbb    DWORD PTR [edi],0x0
  421c38:	add    bh,bh
  421c3a:	inc    DWORD PTR [eax]
  421c3c:	mov    esp,0xd8acc700
  421c41:	call   DWORD PTR [ebp+0x57]
  421c44:	jae    0x421c12
  421c46:	pushf  
  421c47:	add    bh,bh
  421c49:	(bad)  
  421c4a:	inc    DWORD PTR [eax]
  421c4c:	imul   edi,edi,0xaf0b6a
  421c52:	sahf   
  421c53:	xor    al,0xfc
  421c55:	add    BYTE PTR [edi],bl
  421c57:	inc    DWORD PTR [eax]
  421c59:	(bad)  
  421c5a:	inc    DWORD PTR [eax]
  421c5c:	sbb    DWORD PTR [eax],eax
  421c5e:	fcom   QWORD PTR [esi+0x7d]
  421c61:	add    BYTE PTR [eax-0x3c7c0743],dl
  421c67:	mov    edi,edi
  421c69:	inc    DWORD PTR [ebx-0x4e7c0c01]
  421c6f:	inc    eax
  421c70:	popf   
  421c71:	int3   
  421c72:	add    edi,ebx
  421c74:	add    al,0xff
  421c76:	ss (bad) 
  421c78:	(bad)  
  421c79:	(bad)  
  421c7a:	inc    DWORD PTR [eax]
  421c7c:	xchg   esi,eax
  421c7d:	add    dl,cl
  421c7f:	out    dx,al
  421c80:	and    DWORD PTR [eax],eax
  421c82:	(bad)  
  421c83:	nop
  421c84:	add    DWORD PTR [eax],eax
  421c86:	ins    BYTE PTR es:[edi],dx
  421c87:	add    bh,bh
  421c89:	mov    DWORD PTR [eax],eax
  421c8b:	push   DWORD PTR [ebx+0x0]
  421c8e:	call   DWORD PTR [edi-0x7e]
  421c91:	add    BYTE PTR [ebp-0x7800f325],cl
  421c97:	cmp    edi,0x0
  421c9a:	inc    DWORD PTR [eax]
  421c9c:	retf   
  421c9d:	(bad)  
  421c9e:	jle    0x421c72
  421ca0:	ret    
  421ca1:	push   DWORD PTR [edi-0x3900ec15]
  421ca7:	add    BYTE PTR [eax],al
  421ca9:	inc    DWORD PTR [eax]
  421cab:	int3   
  421cac:	outs   dx,BYTE PTR ds:[esi]
  421cad:	int3   
  421cae:	in     eax,dx
  421caf:	lahf   
  421cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cb1:	inc    DWORD PTR [ecx-0x50]
  421cb4:	or     ah,0xfd
  421cb7:	inc    DWORD PTR [eax]
  421cb9:	inc    DWORD PTR [ebx+0x5083d9ff]
  421cbf:	xor    DWORD PTR [edx+0x71176c00],edi
  421cc5:	push   DWORD PTR [ebx+0x0]
  421cc8:	add    DWORD PTR [eax],0x0
  421ccb:	add    BYTE PTR [ebp+0x22a60bff],dh
  421cd1:	push   edx
  421cd3:	dec    ebp
  421cd4:	popa   
  421cd5:	add    BYTE PTR [esi-0x1],ah
  421cd8:	inc    DWORD PTR [eax]
  421cda:	inc    DWORD PTR [eax]
  421cdc:	jb     0x421cde
  421cde:	icebp  
  421cdf:	or     al,0x38
  421ce1:	(bad)  
  421ce2:	cmp    BYTE PTR [esp+edi*8-0x77],ah
  421ce6:	cmp    bh,0xff
  421ce9:	inc    DWORD PTR [eax]
  421ceb:	call   FWORD PTR [ebp-0x1]
  421cee:	xchg   esi,eax
  421cef:	xor    eax,0x9a9001c
  421cf4:	inc    esp
  421cf5:	call   DWORD PTR [eax]
  421cf7:	inc    DWORD PTR [eax]
  421cf9:	add    DWORD PTR [ebx-0x5800e401],0x56
  421d00:	mov    ah,0x0
  421d02:	scas   eax,DWORD PTR es:[edi]
  421d03:	es dec ebx
  421d05:	call   ebp
  421d07:	add    bh,bh
  421d09:	(bad)  
  421d0a:	dec    DWORD PTR [ecx+0x1721ff69]
  421d10:	push   ds
  421d11:	jmp    FWORD PTR ds:0xb000e7e
  421d17:	inc    DWORD PTR [eax]
  421d19:	mov    DWORD PTR [ebx-0x72ffe277],eax
  421d1f:	cmp    eax,0x5ac837c
  421d24:	aam    0xff
  421d26:	push   esi
  421d27:	add    DWORD PTR [eax],0x0
  421d2a:	(bad)  
  421d2b:	inc    DWORD PTR [edi-0x68e9bf00]
  421d31:	int3   
  421d32:	xchg   BYTE PTR ds:0xff460038,al
  421d38:	inc    DWORD PTR [eax]
  421d3a:	add    BYTE PTR [ebx-0x33d1761a],al
  421d40:	jne    0x421d41
  421d42:	retf   
  421d43:	dec    eax
  421d44:	aam    0xff
  421d46:	fild   WORD PTR [eax]
  421d48:	inc    DWORD PTR [eax]
  421d4a:	add    BYTE PTR [ebx+0x734effcb],al
  421d50:	push   ecx
  421d51:	mov    edi,esi
  421d53:	(bad)  
  421d54:	imul   edi,edi,0x2c
  421d57:	add    bh,bh
  421d59:	inc    DWORD PTR [eax]
  421d5b:	add    BYTE PTR [ecx-0x1],ch
  421d5e:	jmp    0x90418d3a
  421d63:	ins    BYTE PTR es:[edi],dx
  421d64:	pop    ds
  421d65:	mov    DWORD PTR [esi],esp
  421d67:	int3   
  421d68:	dec    DWORD PTR [ecx-0x8e007d]
  421d6e:	mov    eax,0xb7ff845f
  421d73:	iret   
  421d74:	pop    es
  421d75:	add    BYTE PTR [esi-0x1],dl
  421d78:	inc    DWORD PTR [eax]
  421d7a:	or     DWORD PTR [ecx-0x4a3c7680],0xffffffcb
  421d81:	mov    DWORD PTR [eax-0x1f],esi
  421d84:	sar    bh,0xaa
  421d87:	inc    DWORD PTR [eax]
  421d89:	inc    DWORD PTR [eax]
  421d8b:	or     DWORD PTR [ebx],0xffffff83
  421d8e:	ss sti 
  421d90:	push   esi
  421d91:	jmp    FWORD PTR [esi]
  421d93:	xor    esi,0xffffff83
  421d96:	hlt    
  421d97:	mov    esp,ecx
  421d99:	int3   
  421d9a:	inc    DWORD PTR [eax]
  421d9c:	cwde   
  421d9d:	add    BYTE PTR [eax-0x28ff0fd5],ch
  421da3:	sub    DWORD PTR [ebp+0x0],ebp
  421da6:	jae    0x421da7
  421da8:	mov    edi,edi
  421daa:	add    BYTE PTR [ecx+0x3ba4fff2],cl
  421db0:	adc    eax,0x1ec30583
  421db5:	add    BYTE PTR [ebx+eax*4-0x7c007d],dl
  421dbc:	pop    ss
  421dbd:	add    cl,al
  421dbf:	sbb    BYTE PTR [ebx-0x34],bh
  421dc2:	aam    0x11
  421dc4:	mov    BYTE PTR [eax],0x75
  421dc7:	add    bh,bh
  421dc9:	(bad)  
  421dca:	(bad)  
  421dcb:	call   esi
  421dcd:	int3   
  421dce:	mov    ebp,0xd5ff6bdb
  421dd3:	jmp    0x53ea22
  421dd8:	dec    DWORD PTR [ecx-0xf00100]
  421dde:	sahf   
  421ddf:	imul   ebx,DWORD PTR [ebx+0x0],0xff724366
  421de6:	adc    edi,edi
  421de8:	(bad)  
  421de9:	(bad)  
  421dea:	inc    DWORD PTR [eax]
  421dec:	test   al,0x83
  421dee:	push   esp
  421def:	addr16 repnz (bad) 
  421df2:	jns    0x421da4
  421df4:	mov    ?,edi
  421df6:	cmc    
  421df7:	int3   
  421df8:	(bad)  
  421df9:	inc    DWORD PTR [eax]
  421dfb:	int3   
  421dfc:	(bad)  
  421dfe:	inc    ecx
  421dff:	xlat   BYTE PTR ds:[ebx]
  421e00:	adc    al,BYTE PTR [eax]
  421e02:	mov    eax,0x80ccc394
  421e07:	add    bh,bh
  421e09:	(bad)  
  421e0a:	inc    DWORD PTR [ebx-0x2c65ff65]
  421e10:	mov    ecx,0x3310e9ff
  421e15:	and    eax,0xffffffcc
  421e18:	add    BYTE PTR [ebx-0x76400001],al
  421e1e:	mov    edi,0xa3ffff03
  421e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e25:	(bad)  
  421e26:	std    
  421e27:	int3   
  421e28:	(bad)  
  421e29:	(bad)  
  421e2a:	(bad)  
  421e2b:	inc    DWORD PTR [edi-0x1]
  421e2e:	or     bl,BYTE PTR [ebx+0x7449cc64]
  421e34:	(bad)  
  421e35:	push   DWORD PTR [esi]
  421e37:	add    BYTE PTR [ebx-0x79007c7d],al
  421e3d:	jmp    DWORD PTR [ecx+ebx*1]
  421e40:	add    BYTE PTR [eax],0xcb
  421e43:	xor    esi,esi
  421e45:	call   DWORD PTR [ecx-0x7d000000]
  421e4b:	jmp    FWORD PTR [ebx]
  421e4d:	add    BYTE PTR [ecx],dl
  421e4f:	jp     0x421dd5
  421e51:	add    BYTE PTR [edi],bh
  421e53:	sub    DWORD PTR [ebp-0x1],eax
  421e56:	push   ss
  421e57:	dec    esp
  421e59:	(bad)  
  421e5a:	(bad)  
  421e5b:	jmp    DWORD PTR [edi+edi*8]
  421e5e:	aaa    
  421e5f:	add    al,ch
  421e61:	call   DWORD PTR [ecx+0x37]
  421e64:	jb     0x421de9
  421e66:	mov    ds:0xccffcc00,eax
  421e6b:	add    BYTE PTR [edx],dl
  421e6d:	mov    DWORD PTR [ebp+0x1],eax
  421e70:	sar    bh,cl
  421e72:	loopne 0x421eb3
  421e74:	fcmove st,st(4)
  421e76:	add    BYTE PTR fs:[ecx+0x6c89ff00],cl
  421e7d:	int3   
  421e7e:	repz jle 0x421e53
  421e81:	jmp    DWORD PTR [eax]
  421e83:	ins    BYTE PTR es:[edi],dx
  421e84:	xchg   esi,eax
  421e85:	add    BYTE PTR [ecx],dh
  421e87:	(bad)  
  421e88:	inc    DWORD PTR [ebx-0x7cd6ff01]
  421e8e:	mov    al,ds:0xf5cc6b03
  421e93:	rcl    DWORD PTR [edi-0x1201],1
  421e99:	dec    esp
  421e9b:	or     DWORD PTR [edi+edi*8+0x59],0xffffffae
  421ea0:	jno    0x421ea1
  421ea2:	xlat   BYTE PTR ds:[ebx]
  421ea3:	pop    eax
  421ea4:	ins    DWORD PTR es:[edi],dx
  421ea5:	mov    edx,edx
  421ea7:	(bad)  
  421ea8:	(bad)  
  421ea9:	inc    DWORD PTR [eax]
  421eab:	adc    DWORD PTR [ecx],0x0
  421eae:	outs   dx,BYTE PTR ds:[esi]
  421eaf:	xchg   ebp,eax
  421eb0:	retf   0x30ff
  421eb3:	jns    0x421e69
  421eb5:	add    BYTE PTR [eax+0x8983],cl
  421ebb:	call   DWORD PTR [edi+edi*8+0x65e44d]
  421ec2:	push   edi
  421ec3:	jne    0x421efb
  421ec5:	call   ecx
  421ec7:	inc    DWORD PTR [eax]
  421ec9:	mov    edi,edi
  421ecb:	adc    DWORD PTR [esi-0x1],0xffffff86
  421ecf:	lahf   
  421ed0:	push   ebx
  421ed1:	push   DWORD PTR [edi-0x7e00537c]
  421ed7:	add    ah,cl
  421ed9:	add    bh,bh
  421edb:	call   DWORD PTR [ebx]
  421edd:	(bad)  
  421ede:	(bad)  
  421ee0:	(bad)  
  421ee1:	add    cl,dl
  421ee3:	dec    esp
  421ee4:	dec    edx
  421ee5:	int3   
  421ee6:	push   ss
  421ee7:	mov    DWORD PTR [ebx-0x32010000],eax
  421eed:	sub    esp,0xffffff8a
  421ef0:	pushf  
  421ef1:	add    BYTE PTR [edx+0x27891ea2],ch
  421ef7:	cmp    edi,0xffffff83
  421efa:	int3   
  421efb:	(bad)  
  421efc:	call   0xd66a4501
  421f01:	mov    DWORD PTR [edx],ebp
  421f03:	sub    eax,0xff0d00d3
  421f08:	(bad)  
  421f09:	(bad)  
  421f0a:	(bad)  
  421f0b:	(bad)  
  421f0c:	mov    ebp,0x14f8da83
  421f11:	int3   
  421f12:	or     ah,bh
  421f14:	call   0xff:0xe6ff
  421f1b:	xor    DWORD PTR [ecx],0xffffffff
  421f1e:	dec    ecx
  421f1f:	out    dx,eax
  421f20:	je     0x421f22
  421f22:	pop    ebp
  421f23:	xor    ecx,ebp
  421f25:	(bad)  
  421f26:	jle    0x421f27
  421f28:	add    BYTE PTR [ebx+0x5fff00],al
  421f2e:	(bad)  
  421f2f:	or     al,0x58
  421f31:	add    BYTE PTR [edx-0x67],al
  421f34:	xor    edi,edi
  421f36:	ds add bh,bh
  421f39:	add    BYTE PTR [eax],al
  421f3b:	add    BYTE PTR ds:0xccd47e00,dl
  421f41:	add    al,ah
  421f43:	jo     0x421f00
  421f45:	call   DWORD PTR ds:0xffff0083
  421f4b:	push   DWORD PTR [ecx]
  421f4d:	add    al,ch
  421f4f:	stos   BYTE PTR es:[edi],al
  421f50:	iret   
  421f51:	adc    DWORD PTR [edx+0x5c],0x55
  421f55:	sub    DWORD PTR [eax+eax*1-0x7600ff01],0x7a
  421f5d:	jmp    DWORD PTR [ecx-0x72ff6168]
  421f63:	in     al,dx
  421f64:	add    ecx,esp
  421f66:	add    eax,0xffffff00
  421f6b:	dec    esp
  421f6d:	dec    DWORD PTR [eax+0x5dfff43b]
  421f73:	pop    edx
  421f74:	sar    bh,0xfe
  421f77:	add    BYTE PTR [ebx-0x14ff3400],al
  421f7d:	call   DWORD PTR [ebx]
  421f7f:	int3   
  421f80:	xor    edi,edi
  421f82:	jg     0x421f50
  421f84:	addr16 int3 
  421f86:	or     al,0x83
  421f88:	inc    DWORD PTR [eax]
  421f8a:	add    bh,bh
  421f8c:	stc    
  421f8d:	(bad)  
  421f8e:	out    dx,al
  421f8f:	add    ah,0x0
  421f92:	iret   
  421f93:	fldenv [edi+edi*8-0x46]
  421f97:	inc    DWORD PTR [eax]
  421f99:	inc    DWORD PTR [ebx-0xff0400]
  421f9f:	scas   al,BYTE PTR es:[edi]
  421fa0:	fadd   QWORD PTR [eax]
  421fa2:	sbb    ch,al
  421fa4:	inc    eax
  421fa5:	push   esp
  421fa7:	add    bh,bh
  421fa9:	inc    DWORD PTR [eax]
  421fab:	(bad)  
  421fac:	fadd   QWORD PTR [eax]
  421fae:	out    0xa5,eax
  421fb0:	pusha  
  421fb1:	dec    ebx
  421fb3:	out    dx,al
  421fb4:	pusha  
  421fb5:	add    BYTE PTR [eax+0x0],bh
  421fb8:	add    bh,bh
  421fba:	dec    DWORD PTR [ecx+0x67b5ff0f]
  421fc0:	mov    WORD PTR [ecx],bx
  421fc3:	ja     0x421f7a
  421fc5:	mov    DWORD PTR [ecx-0x1],ebp
  421fc8:	inc    DWORD PTR [eax]
  421fca:	(bad)  
  421fcb:	call   FWORD PTR [edi]
  421fcd:	(bad)  
  421fce:	mov    esi,0xe700a95d
  421fd3:	dec    eax
  421fd4:	mov    ecx,esp
  421fd6:	aam    0x0
  421fd8:	add    ah,cl
  421fda:	int3   
  421fdb:	call   ebp
  421fdd:	int3   
  421fde:	adc    bl,cl
  421fe0:	mov    ds:0xfc2d4dcc,eax
  421fe5:	add    al,bh
  421fe7:	int3   
  421fe8:	dec    DWORD PTR [ecx-0xfd0100]
  421fee:	adc    eax,0x9a003727
  421ff3:	mov    al,ds:0x62ccd3
  421ff8:	dec    esp
  421ffa:	inc    DWORD PTR [eax]
  421ffc:	mov    dl,0xcc
  421ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fff:	cmc    
  422000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422001:	add    BYTE PTR [ebp-0x53],bl
  422004:	push   edx
  422005:	call   ebx
  422007:	add    BYTE PTR [ebx+0x27000000],al
  42200d:	inc    DWORD PTR [ebx+0x1c]
  422010:	jno    0x422011
  422012:	lods   eax,DWORD PTR ds:[esi]
  422013:	scas   eax,DWORD PTR es:[edi]
  422014:	and    bh,bh
  422016:	sub    ecx,DWORD PTR [ecx+0xff00]
  42201c:	dec    esp
  42201d:	add    BYTE PTR [ebx+0x208987a3],ah
  422023:	lds    ebp,FWORD PTR [eax]
  422025:	add    BYTE PTR [ebx+0xff8989],bh
  42202b:	call   ebp
  42202d:	mov    DWORD PTR [edi],eax
  42202f:	pusha  
  422030:	fs add ch,bl
  422033:	sbb    bh,bh
  422035:	push   DWORD PTR [eax+eax*1]
  422038:	add    bh,bh
  42203a:	int3   
  42203b:	inc    DWORD PTR [eax-0x34]
  42203e:	addr16 fwait
  422040:	mov    bh,bh
  422042:	fbstp  TBYTE PTR [edi-0x470011]
  422048:	add    BYTE PTR [eax],al
  42204a:	mov    edi,edi
  42204c:	in     eax,0x89
  42204e:	dec    edi
  42204f:	jnp    0x422026
  422051:	(bad)  
  422052:	mov    eax,0x79001818
  422057:	dec    esp
  422059:	inc    DWORD PTR [eax]
  42205b:	add    BYTE PTR [eax+eax*1],cl
  42205e:	fadd   DWORD PTR [ebx+0x705000a7]
  422064:	sbb    DWORD PTR es:[ebp-0x1],0xffffffff
  422069:	add    bh,bh
  42206b:	dec    DWORD PTR [eax+eax*1-0x217470]
  422072:	inc    ebx
  422073:	mov    ebp,0xff66ff68
  422078:	int3   
  422079:	inc    DWORD PTR [eax]
  42207b:	add    DWORD PTR [edi+edi*8+0x1d],0x1c
  422080:	and    al,0x0
  422082:	bound  eax,QWORD PTR [edi-0xfd0051]
  422088:	dec    esp
  42208a:	inc    DWORD PTR [eax]
  42208c:	sbb    BYTE PTR [eax],al
  42208e:	stos   DWORD PTR es:[edi],eax
  42208f:	add    DWORD PTR [eax+0xb992cff],0x0
  422096:	mov    WORD PTR [eax],es
  422098:	(bad)  
  422099:	inc    DWORD PTR [ebx-0x5ff5f34]
  42209f:	ins    DWORD PTR es:[edi],dx
  4220a0:	retf   
  4220a1:	int3   
  4220a2:	xchg   ecx,eax
  4220a3:	adc    ecx,DWORD PTR [ebx-0x7d]
  4220a6:	inc    edi
  4220a7:	(bad)  
  4220a8:	inc    DWORD PTR [ebx-0x76f1ff77]
  4220ae:	retf   
  4220af:	loopne 0x42203a
  4220b1:	int3   
  4220b2:	test   esi,eax
  4220b4:	mov    ecx,0x89ba00
  4220b9:	add    bh,bh
  4220bb:	sub    DWORD PTR [eax-0x7d],0x64
  4220bf:	lds    ecx,FWORD PTR [esi-0x26854501]
  4220c5:	(bad)  
  4220c6:	inc    DWORD PTR [eax]
  4220c8:	inc    DWORD PTR [eax]
  4220ca:	add    DWORD PTR [eax],0xfffffffb
  4220cd:	and    DWORD PTR [eax-0x367cdb49],0x33
  4220d4:	rol    DWORD PTR [eax],1
  4220d6:	mov    al,0x89
  4220d8:	dec    esp
  4220da:	inc    DWORD PTR [eax]
  4220dc:	push   esi
  4220dd:	mov    DWORD PTR [edi],edi
  4220df:	push   esi
  4220e0:	mov    dh,0xff
  4220e2:	push   ecx
  4220e3:	push   ecx
  4220e4:	(bad)  
  4220e5:	int3   
  4220e6:	sub    al,0xff
  4220e8:	(bad)  
  4220e9:	dec    esp
  4220eb:	add    BYTE PTR [eax],ch
  4220ed:	(bad)  
  4220ee:	cmp    BYTE PTR [eax],cl
  4220f0:	imul   eax,DWORD PTR [ebx+0xb29717],0xffff0066
  4220fa:	add    bh,bh
  4220fc:	mov    eax,0x5374deff
  422101:	inc    DWORD PTR [esi+0x7aff94a6]
  422107:	(bad)  
  422108:	(bad)  
  422109:	inc    DWORD PTR [eax]
  42210b:	call   DWORD PTR [edi+edi*8]
  42210e:	aad    0x96
  422110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422111:	push   DWORD PTR [esi-0x1f00ab3b]
  422117:	cmp    edi,0xffffff89
  42211a:	add    bh,bh
  42211c:	xor    bh,bh
  42211e:	inc    edx
  42211f:	sub    eax,0x917fcc03
  422124:	and    bh,bh
  422126:	adc    edi,edi
  422128:	int3   
  422129:	add    DWORD PTR [eax],0xffffff83
  42212c:	ins    DWORD PTR es:[edi],dx
  42212d:	int3   
  42212e:	jle    0x4220c9
  422130:	add    eax,0x1521b5ff
  422135:	or     DWORD PTR [ecx-0x7d],0x0
  42213c:	jae    0x42210a
  42213e:	aad    0x6
  422140:	js     0x422141
  422142:	fmul   QWORD PTR [eax+ebx*8]
  422145:	add    BYTE PTR [eax],dh
  422147:	(bad)  
  422148:	inc    DWORD PTR [eax]
  42214a:	(bad)  
  42214b:	(bad)  
  42214c:	cmp    al,BYTE PTR [eax]
  42214e:	add    al,0x35
  422150:	mov    ds:0x9057f4cc,eax
  422155:	mov    esi,ecx
  422157:	mov    esp,ecx
  422159:	dec    esp
  42215b:	inc    ebx
  42215d:	add    BYTE PTR ds:0x79833c16,bl
  422163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422164:	sub    al,0xff
  422166:	retf   
  422167:	inc    DWORD PTR [eax]
  422169:	add    DWORD PTR [ebx-0x62ff0301],0x18
  422170:	inc    esi
  422171:	inc    DWORD PTR [ebx+0x69fff002]
  422177:	int3   
  422178:	add    ah,cl
  42217a:	add    bh,bh
  42217c:	inc    ecx
  42217d:	mov    DWORD PTR [esp+esi*1],ecx
  422180:	push   edx
  422181:	add    BYTE PTR [eax+0x43ff6938],dh
  422187:	add    DWORD PTR [eax],0x0
  42218a:	inc    DWORD PTR [eax]
  42218c:	cmp    eax,DWORD PTR [eax]
  42218e:	mov    BYTE PTR [eax+0x59],dh
  422191:	call   FWORD PTR [edx+0x65ff1916]
  422197:	add    bh,bh
  422199:	cmp    edi,0xffffffff
  42219c:	push   cs
  42219d:	(bad)  
  42219e:	jmp    0xa041ffec
  4221a3:	sbb    BYTE PTR [edi-0xffab01],ah
  4221a9:	add    ah,cl
  4221ab:	add    BYTE PTR [esi-0x3a5a7b00],ch
  4221b1:	add    BYTE PTR [edi-0x10],dh
  4221b4:	test   BYTE PTR [ecx-0x7ce8],cl
  4221ba:	int3   
  4221bb:	add    BYTE PTR [esi],ch
  4221bd:	dec    esp
  4221bf:	jae    0x422152
  4221c1:	and    DWORD PTR [ecx+0x34002937],0x0
  4221c8:	inc    DWORD PTR [eax]
  4221ca:	(bad)  
  4221cb:	call   DWORD PTR [eax]
  4221cd:	add    BYTE PTR [ecx+0x8],ah
  4221d0:	fcos   
  4221d2:	es adc al,0xfa
  4221d5:	(bad)  
  4221d6:	inc    DWORD PTR [eax]
  4221d8:	int3   
  4221d9:	(bad)  
  4221da:	inc    DWORD PTR [eax]
  4221dc:	inc    ebx
  4221dd:	(bad)  
  4221de:	(bad)  
  4221e0:	xchg   DWORD PTR [ebx-0xc494b5],eax
  4221e6:	and    al,BYTE PTR [eax]
  4221e8:	(bad)  
  4221e9:	(bad)  
  4221ea:	(bad)  
  4221eb:	push   DWORD PTR [edi+0xd681900]
  4221f1:	add    BYTE PTR [ecx+0x1400e777],dh
  4221f7:	inc    DWORD PTR [eax]
  4221f9:	add    BYTE PTR [eax],al
  4221fb:	push   DWORD PTR [ebp+0x4a6a6400]
  422201:	(bad)  
  422202:	fsubp  st(4),st
  422204:	in     al,dx
  422205:	add    BYTE PTR [ebx+0x0],ch
  422208:	(bad)  
  422209:	(bad)  
  42220a:	(bad)  
  42220b:	(bad)  
  42220c:	call   0x6bb4ca11
  422211:	(bad)  
  422212:	mov    esp,0x9ffffb52
  422217:	add    BYTE PTR [eax],al
  422219:	add    BYTE PTR [ebx+0x66ffc8ff],al
  42221f:	out    dx,eax
  422220:	(bad)  
  422222:	arpl   WORD PTR ds:0x835aff4e,cx
  422228:	add    bh,bh
  42222a:	inc    DWORD PTR [eax]
  42222c:	pop    ds
  42222d:	jmp    FWORD PTR [eax+0x6bcc69cc]
  422233:	sub    esp,ebx
  422235:	(bad)  
  422236:	js     0x4221bb
  422238:	mov    edi,edi
  42223a:	add    BYTE PTR [eax],al
  42223c:	dec    ebx
  42223d:	xor    DWORD PTR [edx],0x5f
  422240:	cmp    eax,DWORD PTR [eax]
  422242:	hlt    
  422243:	and    DWORD PTR [eax-0x1],0x23
  422247:	add    bh,bh
  422249:	inc    DWORD PTR [ebx+0x6783f8ff]
  42224f:	lea    esi,[edi+0x586dc400]
  422255:	add    al,cl
  422257:	add    DWORD PTR [eax],0xffffffff
  42225a:	add    DWORD PTR [eax],0xffffffc2
  42225d:	mov    DWORD PTR [esi+0x5883bde9],edx
  422263:	loop   0x422270
  422265:	dec    DWORD PTR [edx]
  422267:	add    ah,cl
  422269:	cmp    edi,0x0
  42226c:	jno    0x42226d
  42226e:	mov    edx,0xefffe0f3
  422273:	in     al,0xd2
  422275:	add    BYTE PTR [edi-0x34],ah
  422278:	or     DWORD PTR [ecx-0xd30001],0x51
  42227f:	pushf  
  422280:	add    eax,0x586f383
  422285:	(bad)  
  422286:	ds int3 
  422288:	add    ah,cl
  42228a:	add    BYTE PTR [eax],al
  42228c:	pop    ss
  42228d:	mov    DWORD PTR [eax+eax*1],ebp
  422290:	dec    edx
  422291:	add    dl,bh
  422293:	hlt    
  422294:	sub    DWORD PTR gs:[edi-0x1],0xffffffff
  422299:	cmp    edi,0x0
  42229c:	test   DWORD PTR [eax],eax
  42229e:	or     eax,0x6bff9847
  4222a3:	mov    al,0x3e
  4222a5:	int3   
  4222a6:	retf   
  4222a7:	int3   
  4222a8:	inc    DWORD PTR [eax]
  4222aa:	add    bh,bh
  4222ac:	stos   BYTE PTR es:[edi],al
  4222ad:	and    DWORD PTR [edi+0x76],0xfffffff9
  4222b1:	add    bl,al
  4222b3:	push   0xff3f894f
  4222b8:	add    BYTE PTR [eax],al
  4222ba:	add    bh,bh
  4222bc:	jns    0x4222bd
  4222be:	dec    esp
  4222bf:	aas    
  4222c0:	cmp    DWORD PTR [ecx-0x7c19d07d],ecx
  4222c6:	icebp  
  4222c7:	(bad)  
  4222c8:	inc    DWORD PTR [eax]
  4222ca:	add    BYTE PTR [eax],al
  4222cc:	sbb    BYTE PTR [ebx+0x6ade4f],al
  4222d2:	gs ret 0xff77
  4222d6:	push   ecx
  4222d7:	dec    DWORD PTR [ecx-0x36763400]
  4222dd:	(bad)  
  4222de:	fisub  WORD PTR [edi+ebx*4+0x19859a83]
  4222e5:	dec    edx
  4222e7:	int3   
  4222e8:	cmp    edi,0xffffff89
  4222eb:	dec    DWORD PTR [ebx+eax*4-0x49]
  4222ef:	loop   0x4222f0
  4222f1:	add    al,ch
  4222f3:	xor    eax,0xff03ccb7
  4222f8:	or     DWORD PTR [ecx-0x8cff01],0xffffffcb
  4222ff:	jb     0x422299
  422301:	add    cl,ah
  422303:	clts   
  422305:	int3   
  422306:	jle    0x422308
  422308:	mov    edi,edi
  42230a:	add    DWORD PTR [ebx-0x5b8600e5],0x24
  422311:	add    BYTE PTR [ecx-0x1effabd0],bh
  422317:	add    bh,bh
  422319:	inc    DWORD PTR [ebx-0x727c0601]
  42231f:	(bad)  
  422320:	cmp    al,0x0
  422322:	inc    eax
  422323:	and    ecx,esp
  422325:	inc    DWORD PTR [edx]
  422327:	add    bh,bh
  422329:	int3   
  42232a:	(bad)  
  42232b:	call   esi
  42232d:	int3   
  42232e:	cmp    bl,cl
  422330:	repz jmp FWORD PTR [ecx+0x48832c9f]
  422337:	add    DWORD PTR [eax],0xffffffff
  42233a:	add    bh,bh
  42233c:	aam    0xff
  42233e:	(bad)  
  42233f:	out    0x3,eax
  422341:	(bad)  
  422342:	jmp    0x83ff:0x13fffb01
  422349:	int3   
  42234a:	int3   
  42234b:	call   FWORD PTR [ebx]
  42234d:	dec    DWORD PTR [eax+0x0]
  422350:	mov    ecx,0xbc95289
  422355:	inc    DWORD PTR [eax+eax*1]
  422358:	add    BYTE PTR [ebx+0x9b0083],al
  42235e:	xchg   DWORD PTR [ebp+0x4185cc0d],esp
  422364:	loopne 0x422365
  422366:	jo     0x422367
  422368:	add    bh,bh
  42236a:	inc    DWORD PTR [eax]
  42236c:	push   DWORD PTR gs:[esi-0x57]
  422370:	sar    edi,0xe8
  422373:	imul   esi,DWORD PTR [esi-0x7c7a01],0xffffff83
  42237a:	dec    DWORD PTR [ecx+0x6a3dff8b]
  422380:	xchg   esi,eax
  422381:	push   DWORD PTR [esi-0x78003f62]
  422387:	mov    DWORD PTR [ebx-0x4d00ff01],eax
  42238d:	(bad)  
  42238e:	fcmovbe st,st(1)
  422390:	mov    es,WORD PTR [eax]
  422392:	test   eax,0x43fff701
  422397:	add    DWORD PTR [eax],0x0
  42239a:	(bad)  
  42239b:	call   FWORD PTR [ecx]
  42239d:	dec    DWORD PTR [esi-0x6d7cb40d]
  4223a3:	call   0x53a79f
  4223a8:	add    bh,bh
  4223aa:	mov    edi,edi
  4223ac:	sar    bh,0x7e
  4223af:	sub    ah,BYTE PTR [edx+0xcfd7a00]
  4223b5:	add    BYTE PTR [eax-0x77],dh
  4223b8:	add    BYTE PTR [eax],al
  4223ba:	cmp    edi,0x5c
  4223bd:	dec    DWORD PTR [esi]
  4223bf:	neg    BYTE PTR [edx]
  4223c1:	mov    DWORD PTR [edi+ecx*1+0x2b],esp
  4223c5:	add    BYTE PTR [esi-0x7c3301],bl
  4223cb:	mov    DWORD PTR [ebp+0x0],edi
  4223ce:	xchg   ebx,eax
  4223cf:	add    eax,0xf238fffc
  4223d4:	mov    BYTE PTR [eax],al
  4223d6:	idiv   bh
  4223d8:	(bad)  
  4223d9:	(bad)  
  4223da:	inc    DWORD PTR [ebx-0x3191009b]
  4223e0:	pop    esi
  4223e1:	jmp    DWORD PTR [ebx+0xf008eee]
  4223e7:	add    bh,bh
  4223e9:	cmp    edi,0xffffff89
  4223ec:	mov    ecx,0x889f7000
  4223f1:	(bad)  
  4223f2:	dec    BYTE PTR [ebx+0xfd8305]
  4223f8:	add    BYTE PTR [eax],al
  4223fa:	add    BYTE PTR [eax],al
  4223fc:	sar    bh,0xe1
  4223ff:	into   
  422400:	pop    esi
  422401:	add    BYTE PTR [eax+0x34002d0f],bh
  422407:	(bad)  
  422408:	(bad)  
  422409:	(bad)  
  42240a:	(bad)  
  42240b:	call   edx
  42240d:	mov    eax,ebx
  42240f:	dec    eax
  422410:	adc    BYTE PTR [eax],al
  422412:	cmp    DWORD PTR [ebx-0x1d008f],edi
  422418:	inc    DWORD PTR [eax]
  42241a:	mov    edi,edi
  42241c:	fwait
  42241d:	dec    DWORD PTR [ebx-0x4c00d983]
  422423:	cld    
  422424:	loope  0x422425
  422426:	push   edi
  422427:	inc    DWORD PTR [ebx+0x3c89ff89]
  42242d:	jmp    FWORD PTR [edi]
  42242f:	mov    ch,0x8b
  422431:	push   DWORD PTR [edx]
  422433:	dec    eax
  422434:	jmp    0xffc52d38
  422439:	inc    DWORD PTR [eax]
  42243b:	add    dl,al
  42243d:	int3   
  42243e:	fsub   QWORD PTR [edi+eax*2+0x0]
  422442:	pop    ecx
  422443:	dec    edi
  422444:	repnz call FWORD PTR [eax+0xffcc00]
  42244b:	sub    DWORD PTR [edx],0xffffffff
  42244e:	sbb    dl,al
  422450:	out    0xff,eax
  422452:	sub    ebp,DWORD PTR [edx+edx*8-0x34]
  422456:	xchg   bh,bh
  422458:	inc    DWORD PTR [eax]
  42245a:	add    bh,bh
  42245c:	retf   0x60ff
  42245f:	add    edx,DWORD PTR ds:0x61272e00
  422465:	add    bh,ch
  422467:	add    DWORD PTR [ebx+0x29ffffcc],0x0
  42246e:	and    DWORD PTR [eax-0x7f],esp
  422471:	add    BYTE PTR [ebp+0x68ff2e5d],al
  422477:	inc    DWORD PTR [eax]
  422479:	inc    DWORD PTR [eax]
  42247b:	dec    DWORD PTR [edi-0x7eb70601]
  422481:	add    BYTE PTR [ebx],al
  422483:	xor    al,BYTE PTR [ecx]
  422485:	inc    DWORD PTR [eax-0x1]
  422488:	dec    esp
  42248a:	add    BYTE PTR [ebx+0xfd00012],al
  422490:	adc    al,BYTE PTR [ebx+0x5443d4]
  422496:	int    0x0
  422498:	int3   
  422499:	(bad)  
  42249a:	inc    DWORD PTR [eax]
  42249c:	das    
  42249d:	add    BYTE PTR [ecx+0x9],al
  4224a0:	daa    
  4224a1:	add    BYTE PTR [eax+0x4800bf6b],cl
  4224a7:	(bad)  
  4224a8:	(bad)  
  4224a9:	(bad)  
  4224aa:	inc    DWORD PTR [eax]
  4224ac:	bound  eax,QWORD PTR [eax]
  4224ae:	stc    
  4224af:	add    DWORD PTR [eax+eax*1-0x10],ebp
  4224b3:	mov    edi,DWORD PTR ds:0x898700
  4224b9:	dec    DWORD PTR [ecx+0x4000b4ff]
  4224bf:	iret   
  4224c0:	fwait
  4224c1:	inc    DWORD PTR [eax+eiz*1+0x37]
  4224c5:	(bad)  
  4224c6:	mov    esp,0xccff89ff
  4224cb:	call   DWORD PTR [esi-0x2371ea34]
  4224d1:	jmp    FWORD PTR [edx+ebp*2-0x3e]
  4224d5:	call   DWORD PTR [edx-0x760100]
  4224db:	jmp    FWORD PTR [esi+0x4178d589]
  4224e1:	call   DWORD PTR [ebx]
  4224e3:	lahf   
  4224e4:	jl     0x422469
  4224e6:	add    BYTE PTR cs:[ebx-0x2d003301],al
  4224ed:	call   FWORD PTR [edi+edi*4]
  4224f0:	fld    QWORD PTR [eax]
  4224f2:	popf   
  4224f3:	pop    edi
  4224f4:	push   ebp
  4224f5:	jmp    esp
  4224f7:	add    bh,bh
  4224f9:	dec    DWORD PTR [ecx+0x4cffeccc]
  4224ff:	mov    al,ds:0x58f589c4
  422504:	inc    esp
  422505:	inc    DWORD PTR [esi]
  422507:	inc    DWORD PTR [eax]
  422509:	add    ah,cl
  42250b:	push   DWORD PTR [eax+eax*1]
  42250e:	jecxz  0x4224be
  422510:	std    
  422511:	call   FWORD PTR [ecx+esi*1+0x73]
  422515:	int3   
  422516:	test   edi,edi
  422518:	add    bh,bh
  42251a:	(bad)  
  42251b:	push   DWORD PTR [edx]
  42251d:	add    BYTE PTR [esi+0x47],ah
  422520:	jbe    0x422522
  422522:	sbb    eax,0x6effd7f6
  422527:	add    DWORD PTR [eax],0xffffffff
  42252a:	(bad)  
  42252b:	(bad)  
  42252c:	jmp    0xfc83:0xc715c389
  422533:	xor    dh,BYTE PTR [eax]
  422535:	add    BYTE PTR [edx],ah
  422537:	(bad)  
  422538:	(bad)  
  422539:	inc    DWORD PTR [eax]
  42253b:	add    BYTE PTR [ebp-0x34],cl
  42253e:	inc    esp
  42253f:	loope  0x422533
  422541:	add    BYTE PTR [ebx-0x3e00e602],dh
  422547:	inc    DWORD PTR [eax]
  422549:	int3   
  42254a:	(bad)  
  42254b:	(bad)  
  42254c:	jmp    0x42254d
  42254e:	mov    ebp,ecx
  422550:	out    dx,eax
  422551:	cmp    ebx,0xffffffff
  422554:	inc    ebx
  422555:	add    BYTE PTR [ebx-0x77],ah
  422558:	int3   
  422559:	mov    edi,edi
  42255b:	jmp    DWORD PTR [eax-0x37dcf201]
  422561:	add    BYTE PTR [ecx-0x5a005631],dh
  422567:	add    DWORD PTR [eax],0x0
  42256a:	add    BYTE PTR [eax],al
  42256c:	adc    cl,BYTE PTR [ecx+0xcbd501]
  422572:	imul   ecx,DWORD PTR ds:0x890600f5,0xffffffff
  422579:	int3   
  42257a:	inc    DWORD PTR [eax]
  42257c:	push   ebx
  42257d:	sub    DWORD PTR [ebx+0x3dcc6a74],0xffffffdc
  422584:	das    
  422585:	add    BYTE PTR [ebp+0xff83cc],bl
  42258b:	call   ebx
  42258d:	call   FWORD PTR [ebx-0x36]
  422590:	jno    0x422592
  422592:	and    edx,eax
  422594:	xor    DWORD PTR [eax],eax
  422596:	push   es
  422597:	or     esp,0x0
  42259a:	(bad)  
  42259b:	jmp    DWORD PTR [edi+0x45f32400]
  4225a1:	add    DWORD PTR [eax-0x4476ed54],0x0
  4225a8:	inc    DWORD PTR [eax]
  4225aa:	int3   
  4225ab:	call   FWORD PTR [eax-0x7d]
  4225ae:	int3   
  4225af:	sahf   
  4225b0:	cmp    al,BYTE PTR [ebx-0x652390]
  4225b6:	dec    edi
  4225b7:	inc    DWORD PTR [eax]
  4225b9:	cmp    edi,0x0
  4225bc:	sub    eax,0x51f185ff
  4225c1:	add    BYTE PTR [ebp+0x130083],cl
  4225c7:	pop    esp
  4225c8:	mov    cl,0xff
  4225ca:	pop    ss
  4225cb:	add    bh,bh
  4225cd:	(bad)  
  4225d0:	daa    
  4225d1:	add    BYTE PTR [esi],dl
  4225d3:	inc    DWORD PTR [eax]
  4225d5:	pop    eax
  4225d6:	push   DWORD PTR [edx-0xa83349]
  4225dc:	int3   
  4225dd:	popa   
  4225de:	add    ah,cl
  4225e0:	jae    0x4225e2
  4225e2:	or     DWORD PTR [ecx+0x3004fcc],0x0
  4225e9:	int3   
  4225ea:	xor    eax,0x4aff83
  4225ef:	rcl    DWORD PTR [eax],1
  4225f1:	jmp    DWORD PTR [esp+ecx*8-0x9ffb200]
  4225f8:	add    DWORD PTR [eax],0x35ffff0e
  4225fe:	add    BYTE PTR [edi-0x76f8ffae],ch
  422604:	add    BYTE PTR [edx-0xec867d],ch
  42260a:	xchg   esi,eax
  42260b:	(bad)  
  42260c:	dec    esi
  42260e:	(bad)  
  42260f:	mov    esi,0xa1ff41
  422614:	add    BYTE PTR [ebp+0x0],ch
  422617:	and    al,0xb8
  422619:	xor    DWORD PTR [ebx],0xffffffff
  42261c:	add    BYTE PTR [eax+0x0],ah
  42261f:	loop   0x42269d
  422621:	inc    esi
  422623:	add    BYTE PTR [eax],al
  422625:	(bad)  
  422626:	int3   
  422627:	ss enter 0x4d89,0xff
  42262c:	add    BYTE PTR [edx-0x1],ah
  42262f:	or     edx,DWORD PTR [ebx]
  422631:	call   DWORD PTR [edx-0xa00001]
  422637:	sbb    bh,bh
  422639:	add    BYTE PTR [edx+0x1a8389],bl
  42263f:	je     0x42262d
  422641:	push   DWORD PTR [eax+eax*1]
  422644:	add    bh,bh
  422646:	inc    DWORD PTR [edi+eax*8-0x7d]
  42264a:	lods   al,BYTE PTR ds:[esi]
  42264b:	mov    DWORD PTR [eax],eax
  42264d:	loopne 0x42264e
  42264f:	xor    al,0xba
  422651:	mov    DWORD PTR [ebp+0xca00ff],edi
  422657:	adc    BYTE PTR [edi-0x7c002834],dh
  42265d:	pop    esi
  42265e:	dec    ecx
  422660:	mov    ecx,0x83ffcfff
  422665:	cmp    BYTE PTR [ecx-0x7d7c6d02],cl
  42266b:	(bad)  
  42266c:	jmp    DWORD PTR [edx-0x1]
  42266f:	add    eax,DWORD PTR [ebp-0xffe100]
  422675:	fiadd  WORD PTR [eax]
  422677:	sub    eax,0x899dff0d
  42267c:	(bad)  
  42267d:	js     0x42267e
  42267f:	add    eax,0x71008a
  422684:	add    BYTE PTR [eax],bl
  422686:	add    BYTE PTR [edx+0x6b],al
  422689:	add    BYTE PTR [eax+eax*1],dh
  42268c:	call   FWORD PTR [edi+edi*8+0x52]
  422690:	mov    ebp,0xffd800
  422695:	or     DWORD PTR [eax],eax
  422697:	jnp    0x42268a
  422699:	push   DWORD PTR [ecx-0x1]
  42269c:	mov    DWORD PTR [esi-0x2c4700],esi
  4226a2:	jae    0x422627
  4226a4:	add    dh,cl
  4226a6:	jmp    esp
  4226a8:	or     edi,edi
  4226aa:	bound  eax,QWORD PTR [ebx-0x457cd800]
  4226b0:	mov    edi,edi
  4226b2:	dec    esi
  4226b3:	inc    DWORD PTR [eax]
  4226b5:	mov    eax,0x9db500
  4226ba:	and    al,0xff
  4226bc:	add    BYTE PTR [esi-0x7d],al
  4226bf:	pop    ebp
  4226c0:	xor    bh,bh
  4226c2:	(bad)  
  4226c3:	int3   
  4226c4:	int3   
  4226c5:	loope  0x422693
  4226c7:	or     DWORD PTR [edi],esi
  4226c9:	add    BYTE PTR [esi+0xba00ff],ah
  4226cf:	js     0x4226a1
  4226d1:	add    BYTE PTR [ecx-0x4f7601],bh
  4226d7:	push   0xffffffa1
  4226d9:	dec    DWORD PTR [edi+edi*8+0x7acc1e00]
  4226e0:	test   DWORD PTR [eax],0x16ffcc66
  4226e6:	add    BYTE PTR [ebx+0x55],dh
  4226e9:	jmp    DWORD PTR [ebx-0x76040000]
  4226ef:	cli    
  4226f0:	xchg   ebx,eax
  4226f1:	int3   
  4226f2:	add    eax,DWORD PTR [eax]
  4226f4:	add    BYTE PTR [esi-0x1],bh
  4226f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226f8:	inc    edx
  4226f9:	call   FWORD PTR [ecx]
  4226fb:	add    BYTE PTR [ecx+0x5cdeffdf],cl
  422701:	add    BYTE PTR [esi+0x0],bl
  422704:	dec    DWORD PTR [esi-0xde1a00]
  42270a:	inc    esp
  42270b:	add    BYTE PTR [ecx+0x488d00ce],cl
  422711:	jmp    FWORD PTR [edi+edi*8]
  422714:	add    bl,ah
  422716:	dec    DWORD PTR [esi+0xe]
  422719:	add    BYTE PTR [edx],ah
  42271b:	add    bh,bh
  42271d:	(bad)  
  42271e:	(bad)  
  42271f:	aas    
  422720:	fadd   DWORD PTR [eax]
  422722:	inc    DWORD PTR [eax]
  422724:	int3   
  422725:	mov    ebx,0xff5fdeff
  42272a:	sub    al,BYTE PTR [eax]
  42272c:	add    ch,bl
  42272e:	add    BYTE PTR [ebp-0x3373ff31],ah
  422734:	cmp    DWORD PTR [edx-0x76c8dd7d],0xfffffff8
  42273b:	add    BYTE PTR [eax],al
  42273d:	push   ss
  42273e:	add    BYTE PTR [esp+ebx*1+0x835c00],bl
  422745:	jb     0x422747
  422747:	xor    eax,0xffc4ff20
  42274c:	push   DWORD PTR [edi+0x0]
  42274f:	in     al,dx
  422750:	push   ecx
  422751:	add    BYTE PTR [esi],bl
  422753:	add    bh,bh
  422755:	scas   al,BYTE PTR es:[edi]
  422756:	jmp    FWORD PTR [ebp-0x5b]
  422759:	dec    eax
  42275b:	add    bh,bh
  42275d:	and    al,BYTE PTR [eax]
  42275f:	push   ds
  422760:	(bad)  
  422761:	(bad)  
  422762:	fiadd  WORD PTR [ebx-0x59ff487d]
  422768:	std    
  422769:	add    BYTE PTR [edi-0x69ff01],al
  42276f:	adc    DWORD PTR [ebp-0x76761077],esi
  422775:	xor    al,0xff
  422777:	sbb    al,0xb1
  422779:	dec    DWORD PTR [ebx+0x0]
  42277c:	add    bh,dh
  42277e:	dec    DWORD PTR [edi]
  422780:	ss add dl,bl
  422783:	add    ah,cl
  422785:	fdiv   st(7),st
  422787:	pusha  
  422788:	adc    bh,bh
  42278a:	cwde   
  42278b:	add    DWORD PTR [ebx+0x67a1008b],0xffffff83
  422792:	fdiv   st(7),st
  422794:	dec    DWORD PTR [ebx-0x1]
  422797:	daa    
  422798:	nop
  422799:	add    BYTE PTR [edi+0x0],dh
  42279c:	(bad)  
  42279d:	clc    
  42279e:	jmp    DWORD PTR [ecx+edi*2]
  4227a1:	add    cl,bl
  4227a3:	(bad)  
  4227a4:	jmp    DWORD PTR [edx-0x7d]
  4227a7:	push   0xffffff8f
  4227a9:	add    BYTE PTR [esi-0x83ff01],dl
  4227af:	xchg   esi,eax
  4227b0:	out    0x0,al
  4227b2:	adc    al,BYTE PTR [ebx-0x15ff9800]
  4227b8:	adc    eax,DWORD PTR [eax]
  4227ba:	(bad)  
  4227bb:	inc    DWORD PTR [ebx-0x4a5a0088]
  4227c1:	push   ebx
  4227c3:	(bad)  
  4227c4:	call   DWORD PTR [eax+0xbcfbff]
  4227ca:	jae    0x4227cb
  4227cc:	add    BYTE PTR [esi-0x1],al
  4227cf:	shr    DWORD PTR [ebx],1
  4227d1:	push   DWORD PTR [ebx-0x2f0077]
  4227d7:	fsubrp st(0),st
  4227d9:	push   ecx
  4227db:	(bad)  
  4227dc:	jmp    edx
  4227de:	dec    DWORD PTR [esi+0x19]
  4227e1:	call   edx
  4227e3:	(bad)  
  4227e4:	push   DWORD PTR [edi+edi*8+0x15]
  4227e8:	fild   DWORD PTR [eax]
  4227ea:	fdivp  st(7),st
  4227ec:	cmp    DWORD PTR [edi-0x1],0x49
  4227f0:	jmp    0xff40:0x8300d9cc
  4227f7:	frstor [eax+0x0]
  4227fa:	dec    eax
  4227fb:	(bad)  
  4227fc:	dec    DWORD PTR [edx-0x905800]
  422802:	xlat   BYTE PTR ds:[ebx]
  422803:	add    bh,bh
  422805:	das    
  422806:	add    dl,dl
  422808:	mov    eax,0xffff96ff
  42280d:	test   esp,0xfcffe1f4
  422813:	inc    DWORD PTR [ebx+0x7000000f]
  422819:	dec    DWORD PTR ds:0x834aff00
  42281f:	pop    ebx
  422820:	pop    ebp
  422821:	xor    DWORD PTR [ebp-0x7c000001],0x7a
  422828:	sar    edi,0x97
  42282b:	add    BYTE PTR [eax],al
  42282d:	adc    edi,edi
  42282f:	mov    esp,0x9a833e
  422834:	mov    ecx,esi
  422836:	push   eax
  422838:	adc    eax,0xc900
  42283d:	cmp    bh,bh
  42283f:	xor    al,0x35
  422841:	inc    DWORD PTR [esi]
  422843:	(bad)  
  422844:	push   DWORD PTR [ebx+0x0]
  422847:	xchg   ebp,eax
  422848:	sbb    eax,0xffcc62ff
  42284d:	loopne 0x42284e
  42284f:	aad    0x21
  422851:	call   FWORD PTR [eax+0xb20083]
  422857:	jmp    0x105f4a4
  42285c:	dec    edx
  42285e:	add    ch,al
  422860:	cmp    eax,0x83006d89
  422865:	(bad)  
  422866:	mov    DWORD PTR [esp+ecx*2],ebx
  422869:	push   DWORD PTR [ebx-0x34]
  42286c:	add    BYTE PTR [ebx],al
  42286e:	jmp    FWORD PTR [ecx+0x54]
  422871:	add    dl,cl
  422873:	(bad)  
  422874:	push   DWORD PTR [esi-0x1]
  422877:	test   DWORD PTR [edi+edi*8+0x4d],eax
  42287b:	(bad)  
  42287c:	call   DWORD PTR [eax+eax*1]
  42287f:	pop    ss
  422880:	inc    si
  422883:	inc    DWORD PTR [eax]
  422885:	sub    al,0xff
  422887:	lahf   
  422888:	mov    eax,DWORD PTR [ebx-0x4effff6b]
  42288e:	add    BYTE PTR [ebp+0x7a],dl
  422891:	int3   
  422892:	mov    al,0xff
  422894:	dec    DWORD PTR [eax]
  422896:	add    BYTE PTR [edx-0x2000ab],cl
  42289c:	add    BYTE PTR [ebp-0x10d101],al
  4228a2:	(bad)  
  4228a3:	(bad)  
  4228a4:	jmp    DWORD PTR [ebx-0x2ccf77]
  4228aa:	push   edi
  4228ab:	int3   
  4228ac:	add    BYTE PTR [edi],dh
  4228ae:	mov    DWORD PTR [edx-0xec7c8d],ecx
  4228b4:	push   DWORD PTR [edi+edi*8-0x3f]
  4228b8:	or     edi,edi
  4228ba:	(bad)  
  4228bc:	jmp    DWORD PTR [esi]
  4228be:	(bad)  
  4228bf:	stc    
  4228c0:	icebp  
  4228c1:	sub    ebp,0xffffffff
  4228c4:	add    BYTE PTR [edx-0xb40601],ah
  4228ca:	mov    WORD PTR [eax],es
  4228cc:	add    BYTE PTR [ebp+0x0],ch
  4228cf:	inc    ebp
  4228d0:	inc    ebp
  4228d1:	add    BYTE PTR [edi],al
  4228d3:	add    bh,bh
  4228d5:	push   ebp
  4228d6:	add    BYTE PTR [edi],cl
  4228d8:	xlat   BYTE PTR ds:[ebx]
  4228d9:	mov    edx,edi
  4228db:	(bad)  
  4228dc:	(bad)  
  4228dd:	cmp    al,BYTE PTR [eax]
  4228df:	jmp    0x422885
  4228e1:	push   esi
  4228e3:	add    bh,bh
  4228e5:	mov    dl,0x0
  4228e7:	imul   ecx,DWORD PTR [ebp+0x0],0xd3000073
  4228ee:	int3   
  4228ef:	loop   0x4228ba
  4228f1:	inc    DWORD PTR [edi+edi*8]
  4228f4:	add    BYTE PTR [esi+0x0],ch
  4228f7:	or     dh,BYTE PTR [eax]
  4228f9:	add    BYTE PTR [esi-0xda0034],dh
  4228ff:	mov    ebx,0xff95ff34
  422904:	add    BYTE PTR ds:0xd21ff,dl
  42290a:	jae    0x42288f
  42290c:	add    DWORD PTR [ebp-0x1],0x16
  422910:	mov    ch,0xff
  422912:	cs add bh,bh
  422915:	pop    eax
  422916:	add    dh,bh
  422918:	imul   eax,DWORD PTR [ebx+0x4300ffb9],0x0
  42291f:	mov    al,ds:0xff7f0033
  422924:	add    BYTE PTR [edi-0x1],dl
  422927:	jmp    0x102297b
  42292c:	call   DWORD PTR ds:0xad52ff
  422932:	fdiv   st(7),st
  422934:	adc    DWORD PTR [ebp+0x0],0x3d
  422938:	adc    al,0xcc
  42293a:	stos   DWORD PTR es:[edi],eax
  42293b:	(bad)  
  42293c:	inc    DWORD PTR [eax-0x7d]
  42293f:	add    BYTE PTR ds:0xccff5dff,0xf7
  422946:	add    BYTE PTR [ecx+0x3],ch
  422949:	jmp    DWORD PTR [edx+0x0]
  42294c:	dec    DWORD PTR [eax-0x1]
  42294f:	fistp  WORD PTR [edi-0x77]
  422952:	or     BYTE PTR [eax],al
  422954:	add    BYTE PTR [ebp-0x1],cl
  422957:	ror    BYTE PTR [edi],0x83
  42295a:	nop
  42295b:	add    bh,bh
  42295d:	test   BYTE PTR [eax],0x7a
  422960:	call   0xffcb6b64
  422965:	adc    bh,bh
  422967:	aaa    
  422968:	dec    ebx
  422969:	mov    edx,ebx
  42296b:	(bad)  
  42296c:	jmp    FWORD PTR [esi+0x3fbbcc]
  422972:	jnp    0x422974
  422974:	mov    DWORD PTR [edi-0x7ccbb501],ebx
  42297a:	xlat   BYTE PTR ds:[ebx]
  42297b:	add    bh,bh
  42297d:	inc    eax
  42297e:	int3   
  42297f:	xchg   ecx,eax
  422980:	push   ds
  422981:	add    cl,dh
  422983:	(bad)  
  422984:	(bad)  
  422985:	cmp    al,BYTE PTR [eax]
  422987:	aam    0xae
  422989:	add    BYTE PTR [ecx],al
  42298b:	mov    edi,edi
  42298d:	dec    ebp
  42298e:	(bad)  
  42298f:	mov    edx,0xff1c8344
  422994:	add    ch,bl
  422996:	push   edi
  422998:	mov    DWORD PTR gs:[ebp+0x0],ecx
  42299c:	dec    DWORD PTR [eax]
  42299e:	add    BYTE PTR [esi+0x8d8388],cl
  4229a4:	add    BYTE PTR [edx-0xb75600],dl
  4229aa:	mov    edi,?
  4229ac:	int3   
  4229ad:	pop    esi
  4229ae:	dec    DWORD PTR [edi+0x8]
  4229b1:	add    BYTE PTR [edi-0xc37700],al
  4229b7:	dec    esi
  4229b8:	inc    ecx
  4229b9:	dec    edi
  4229bb:	(bad)  
  4229bc:	call   FWORD PTR [edx+0x59bdff]
  4229c2:	loope  0x42294d
  4229c4:	add    dl,ah
  4229c6:	int3   
  4229c7:	pop    ebx
  4229c8:	test   al,0x0
  4229ca:	jb     0x4229cb
  4229cc:	int3   
  4229cd:	sar    bh,0xcf
  4229d0:	fwait
  4229d1:	call   FWORD PTR [edi]
  4229d3:	add    bh,bh
  4229d5:	adc    al,0x83
  4229d7:	mov    DWORD PTR [ebx],edi
  4229d9:	inc    DWORD PTR [edi+0xca00cc]
  4229df:	and    edx,ecx
  4229e1:	int3   
  4229e2:	xor    BYTE PTR [ebx-0x7335f01],al
  4229e8:	sbb    eax,0xccffe0ff
  4229ed:	cmp    bh,0xd7
  4229f0:	je     0x4229f1
  4229f2:	mov    BYTE PTR [eax],al
  4229f4:	int3   
  4229f5:	push   ds
  4229f6:	int3   
  4229f7:	xor    DWORD PTR [edx],esi
  4229f9:	inc    DWORD PTR [eax+eax*1+0x1efff1ff]
  422a00:	pop    esp
  422a01:	add    BYTE PTR [edx],dh
  422a03:	(bad)  
  422a04:	inc    DWORD PTR [eax]
  422a06:	dec    DWORD PTR [eax]
  422a08:	xchg   edx,eax
  422a09:	(bad)  
  422a0a:	(bad)  
  422a0c:	inc    esi
  422a0e:	inc    DWORD PTR [ecx+0x14cc52]
  422a14:	(bad)  
  422a15:	mov    esp,0xfff37000
  422a1a:	in     al,0x0
  422a1c:	add    DWORD PTR [esi-0xe54800],0x0
  422a23:	add    BYTE PTR [eax],al
  422a25:	pop    edx
  422a26:	mov    DWORD PTR [ebx+eiz*1+0x83b8ff],edi
  422a2d:	mov    ds:0xff98da83,al
  422a32:	jno    0x422a33
  422a34:	add    BYTE PTR [edi],dh
  422a36:	(bad)  
  422a37:	mov    edx,0x831fffcb
  422a3c:	cmp    DWORD PTR [edx-0x1],0xffffffaf
  422a40:	mov    al,ds:0xff00b9ff
  422a45:	jp     0x422a46
  422a47:	icebp  
  422a48:	jo     0x422a49
  422a4a:	ss int3 
  422a4c:	add    al,dl
  422a4e:	add    BYTE PTR [ebx-0x76457c3c],cl
  422a54:	add    BYTE PTR ds:0xcfe9ff,dl
  422a5a:	jb     0x422a5b
  422a5c:	jmp    DWORD PTR [ecx-0x1]
  422a5f:	jecxz  0x422ace
  422a61:	add    DWORD PTR [ecx],0xffffffcc
  422a64:	add    BYTE PTR [edi+0x0],bh
  422a67:	out    0xc6,eax
  422a69:	add    BYTE PTR [edx],al
  422a6b:	add    BYTE PTR [eax],al
  422a6d:	xchg   esi,eax
  422a6e:	cmp    DWORD PTR [ebp-0x76ecff95],0xffffff83
  422a75:	xchg   ecx,eax
  422a76:	add    BYTE PTR [eax-0x7cd100bc],al
  422a7c:	sbb    DWORD PTR [eax],0x0
  422a7f:	fcomp  st(4)
  422a81:	int3   
  422a82:	push   0x0
  422a84:	add    ch,dl
  422a86:	(bad)  
  422a87:	jg     0x422a30
  422a89:	add    BYTE PTR [ebp+0x0],dl
  422a8c:	dec    DWORD PTR [eax-0x1]
  422a8f:	pop    es
  422a90:	fwait
  422a91:	add    BYTE PTR [ebp-0x40007d],dl
  422a97:	sbb    al,0x4b
  422a99:	(bad)  
  422a9a:	jns    0x422a9b
  422a9c:	add    BYTE PTR [edi-0x97ca00],bl
  422aa2:	(bad)  
  422aa3:	int3   
  422aa4:	jmp    FWORD PTR [edx]
  422aa6:	add    BYTE PTR [ecx],bl
  422aa8:	sub    edi,edi
  422aaa:	xor    edi,edi
  422aac:	dec    edi
  422aae:	adc    DWORD PTR [edi-0x3e],0xffffff83
  422ab2:	mov    DWORD PTR ss:[eax],eax
  422ab5:	pop    edi
  422ab6:	add    BYTE PTR [ecx-0x3a0070],al
  422abc:	add    BYTE PTR [ebx],dh
  422abe:	add    BYTE PTR [edi],dh
  422ac0:	ret    
  422ac1:	inc    DWORD PTR [esi-0xea0000]
  422ac7:	pop    es
  422ac8:	adc    ecx,DWORD PTR [ecx+0x3a83ff22]
  422ace:	call   edx
  422ad0:	jae    0x422ad2
  422ad2:	xor    eax,DWORD PTR [eax]
  422ad4:	jmp    DWORD PTR [eax+eax*1]
  422ad7:	fisttp WORD PTR [eax+eax*1-0x5007c54]
  422ade:	cmp    esi,0x15
  422ae1:	call   FWORD PTR [ebx-0xbd0100]
  422ae7:	(bad)
  422aeb:	(bad)  
  422aec:	jmp    eax
  422aee:	add    BYTE PTR ds:0x86ff84,al
  422af4:	add    bh,ah
  422af6:	mov    DWORD PTR [ebp+eax*1-0x1],eax
  422afa:	fwait
  422afb:	add    DWORD PTR [ebx-0x67c30071],0xffffffff
  422b02:	mov    dh,0xcc
  422b04:	call   DWORD PTR [edx-0x58be01]
  422b0a:	ror    DWORD PTR [ecx-0x14ff8e00],cl
  422b10:	popf   
  422b11:	(bad)  
  422b12:	mov    esp,0x3a0000
  422b17:	jo     0x422b18
  422b19:	call   DWORD PTR ds:0x860000
  422b1f:	mov    esp,0xff67ff5c
  422b24:	sub    DWORD PTR [edx-0xe37534],0x2c
  422b2b:	inc    DWORD PTR [ebx+0x47e6ccd1]
  422b31:	jmp    DWORD PTR [edi+0x5700ff]
  422b37:	sbb    esi,DWORD PTR [edx+0x0]
  422b3a:	adc    BYTE PTR [ecx-0x17ff8d01],cl
  422b40:	mov    al,0x0
  422b42:	xchg   edi,eax
  422b43:	(bad)  
  422b44:	push   DWORD PTR [ebp-0xb3e701]
  422b4a:	popa   
  422b4b:	(bad)  
  422b4c:	(bad)  
  422b4d:	fimul  WORD PTR [ecx+0xaff8252]
  422b53:	(bad)  
  422b54:	dec    DWORD PTR ds:0x8369e589
  422b5a:	dec    esp
  422b5b:	cmp    edi,0x45
  422b5e:	jmp    FWORD PTR [eax]
  422b60:	lods   al,BYTE PTR ds:[esi]
  422b61:	add    BYTE PTR [eax+0x0],cl
  422b64:	inc    DWORD PTR [esi-0x7c834d01]
  422b6a:	(bad)  
  422b6b:	inc    DWORD PTR [eax]
  422b6d:	out    0x83,eax
  422b6f:	int3   
  422b70:	sub    eax,DWORD PTR [eax]
  422b72:	sbb    edi,edi
  422b74:	mov    DWORD PTR [edi+edi*8-0x39ffd467],edi
  422b7b:	add    BYTE PTR [ecx-0x37790022],cl
  422b81:	mov    DWORD PTR [edi+edi*8+0x0],ebp
  422b85:	sub    al,0xcc
  422b87:	in     eax,dx
  422b88:	hlt    
  422b89:	add    bh,cl
  422b8b:	cmp    edi,0x44
  422b8e:	push   eax
  422b90:	add    al,BYTE PTR [eax]
  422b92:	mov    ebp,0xff17ffff
  422b97:	add    ebp,edi
  422b99:	add    BYTE PTR [edx-0x7e0034],ch
  422b9f:	mov    eax,ds:0x47ff86
  422ba4:	add    BYTE PTR [ecx],bl
  422ba6:	add    BYTE PTR [esi+0xd0061],al
  422bac:	jmp    ebp
  422bae:	(bad)  
  422baf:	clc    
  422bb0:	ror    BYTE PTR [ecx-0x567cff20],0x83
  422bb7:	sub    eax,0x7effa8
  422bbc:	inc    DWORD PTR ds:0x22ec89
  422bc2:	(bad)  
  422bc3:	inc    DWORD PTR [ebx+0xbebff57]
  422bc9:	add    BYTE PTR [esi],ah
  422bcb:	inc    DWORD PTR [ebx+0x42e7ff03]
  422bd1:	(bad)  
  422bd2:	jmp    0xbd2bd7
  422bd7:	outs   dx,DWORD PTR ds:[esi]
  422bd8:	ret    0xbfff
  422bdb:	add    DWORD PTR [eax],0x13
  422bde:	add    BYTE PTR [ecx-0x5e],ah
  422be1:	int3   
  422be2:	cmp    edi,0xb6ff4300
  422be8:	xchg   ebp,eax
  422be9:	add    BYTE PTR [edi-0x7c1f0000],ch
  422bef:	aaa    
  422bf0:	mov    ?,edi
  422bf2:	add    bh,bh
  422bf4:	add    DWORD PTR [ecx],0xffffffff
  422bf7:	mov    bh,0xef
  422bf9:	int3   
  422bfa:	out    0xff,al
  422bfc:	add    cl,ah
  422bfe:	add    esp,0xffffffcf
  422c01:	add    ah,ah
  422c03:	(bad)  
  422c04:	jmp    DWORD PTR [ecx-0x1]
  422c07:	ja     0x422c5e
  422c09:	mov    DWORD PTR [edi+edi*8],esi
  422c0c:	dec    DWORD PTR [esi]
  422c0e:	cmp    ebp,0xffffffea
  422c11:	int3   
  422c12:	dec    edx
  422c13:	add    BYTE PTR [eax],al
  422c15:	pusha  
  422c16:	mov    DWORD PTR [eax+0xac897f],esp
  422c1c:	sub    DWORD PTR [esi],0x0
  422c1f:	shl    BYTE PTR [ebp+0x6d83],1
  422c25:	loopne 0x422c26
  422c27:	outs   dx,DWORD PTR ds:[esi]
  422c28:	scas   eax,DWORD PTR es:[edi]
  422c29:	jmp    ecx
  422c2b:	inc    DWORD PTR [eax]
  422c2d:	daa    
  422c2e:	call   FWORD PTR [esi+edi*2]
  422c31:	inc    DWORD PTR [ebp-0x1]
  422c34:	(bad)  
  422c35:	cmp    DWORD PTR [ecx+0x47ffc9ce],ecx
  422c3b:	add    bh,bh
  422c3d:	inc    esi
  422c3e:	mov    DWORD PTR [edi-0x2],esi
  422c41:	int3   
  422c42:	or     al,BYTE PTR [ebx+0x1e00c189]
  422c48:	data16 int3 
  422c4a:	cmp    DWORD PTR [eax],eax
  422c4c:	add    ah,bl
  422c4e:	call   FWORD PTR [esi-0x7ce10057]
  422c54:	int3   
  422c55:	inc    ecx
  422c56:	call   DWORD PTR [ebp+eiz*8-0x7cff6d00]
  422c5d:	aas    
  422c5e:	add    BYTE PTR [esi-0x67],bh
  422c61:	inc    esi
  422c63:	add    DWORD PTR [ebx+0x4e0389aa],0x0
  422c6a:	add    DWORD PTR ss:[eax],0x67
  422c6e:	call   FWORD PTR [edx+eax*2]
  422c71:	add    BYTE PTR ds:0xfffcffff,ah
  422c77:	rol    ebx,1
  422c79:	add    BYTE PTR [edx],dl
  422c7b:	inc    DWORD PTR [eax]
  422c7d:	mov    DWORD PTR [eax],eax
  422c7f:	and    BYTE PTR [esi],ah
  422c81:	add    BYTE PTR [ebx-0x34],dh
  422c84:	(bad)  
  422c85:	fadd   DWORD PTR [eax]
  422c87:	sub    ch,BYTE PTR [eax+eax*1]
  422c8a:	and    BYTE PTR [eax],al
  422c8c:	add    BYTE PTR [edx-0x34],dh
  422c8f:	shl    esi,cl
  422c91:	(bad)  
  422c92:	mov    eax,0x2a00ff
  422c97:	out    0xda,eax
  422c99:	add    dh,dh
  422c9b:	inc    DWORD PTR [eax]
  422c9d:	push   esp
  422c9e:	add    BYTE PTR [eax+0x39],dl
  422ca1:	add    al,cl
  422ca3:	(bad)  
  422ca4:	inc    DWORD PTR [esp+ecx*8-0x6d00a655]
  422cab:	(bad)  
  422cac:	push   DWORD PTR [edi-0xe2547d]
  422cb2:	fwait
  422cb3:	(bad)  
  422cb4:	push   edi
  422cb6:	cmp    DWORD PTR [eax-0xd600c2],0x0
  422cbd:	jp     0x422c48
  422cbf:	xor    al,0x73
  422cc1:	dec    DWORD PTR [eax-0x1]
  422cc4:	jmp    esi
  422cc6:	push   DWORD PTR [eax-0x157cf3]
  422ccc:	add    BYTE PTR [ebx],ah
  422cce:	sub    DWORD PTR [esi],0xffffff87
  422cd1:	inc    DWORD PTR [edi-0x1]
  422cd4:	add    BYTE PTR [eax-0x174634],ch
  422cda:	ins    DWORD PTR es:[edi],dx
  422cdb:	add    BYTE PTR [eax],al
  422cdd:	or     BYTE PTR [ecx-0x410063ed],0xff
  422ce4:	inc    DWORD PTR [ecx]
  422ce6:	dec    esp
  422ce8:	(bad)  
  422ce9:	jmp    FWORD PTR [ecx]
  422ceb:	(bad)  
  422cec:	dec    DWORD PTR [eax-0x33f8b877]
  422cf2:	pop    eax
  422cf3:	inc    DWORD PTR [eax]
  422cf5:	aaa    
  422cf6:	add    BYTE PTR [ebx-0x9],dl
  422cf9:	add    BYTE PTR [edi],bl
  422cfb:	add    BYTE PTR [ebx+0x3e60ff19],al
  422d01:	(bad)  
  422d02:	std    
  422d03:	inc    DWORD PTR [eax]
  422d05:	jge    0x422d06
  422d07:	jle    0x422d0f
  422d09:	add    BYTE PTR [esi+0xe28383],bh
  422d0f:	jecxz  0x422c94
  422d11:	(bad)  
  422d12:	(bad)  
  422d14:	int3   
  422d15:	bound  eax,QWORD PTR [eax]
  422d17:	out    0x28,al
  422d19:	add    BYTE PTR [eax-0x2eff01],ch
  422d1f:	xor    ebx,ebp
  422d21:	xor    DWORD PTR [ebx],0xffffffff
  422d24:	add    bl,dh
  422d26:	add    BYTE PTR [edi+0xbdffe4],dh
  422d2c:	call   FWORD PTR [edx]
  422d2e:	inc    DWORD PTR [ecx-0x4a]
  422d31:	call   DWORD PTR [ecx+0x7600ff]
  422d37:	jle    0x422d33
  422d39:	(bad)  
  422d3a:	(bad)  
  422d3b:	(bad)  
  422d3c:	dec    esi
  422d3e:	push   DWORD PTR [edx]
  422d40:	mov    al,0x89
  422d42:	adc    BYTE PTR [eax],al
  422d44:	mov    esi,esp
  422d46:	call   FWORD PTR [ebp-0x7c6200fa]
  422d4c:	and    DWORD PTR [eax+eax*1],0xffffffa8
  422d50:	popa   
  422d51:	(bad)  
  422d52:	mov    ebp,0xff57ffcc
  422d57:	sub    BYTE PTR [esi],dl
  422d59:	add    BYTE PTR [ecx-0x7d],dh
  422d5c:	add    al,bh
  422d5e:	call   DWORD PTR [ecx]
  422d60:	mov    ah,0xff
  422d62:	es add bh,bh
  422d65:	xor    edi,edi
  422d67:	add    ch,BYTE PTR [edi+edi*8-0x1c00ff41]
  422d6e:	push   DWORD PTR [eax-0x76657cbb]
  422d74:	mov    eax,edx
  422d76:	int3   
  422d77:	pop    ss
  422d78:	aad    0xff
  422d7a:	repz (bad) 
  422d7c:	(bad)  
  422d7d:	jns    0x422d7f
  422d7f:	adc    eax,0xfffd8382
  422d84:	mov    DWORD PTR [ebx-0x1],eax
  422d87:	daa    
  422d88:	sub    esp,ecx
  422d8a:	ud0    eax,DWORD PTR [eax]
  422d8d:	aam    0xcc
  422d8f:	push   cs
  422d90:	call   0xffcb:0xffff3bff
  422d97:	imul   edx,DWORD PTR [ecx+ecx*4-0x56],0xffffffff
  422d9c:	add    BYTE PTR [ebx-0x13fd7d],al
  422da2:	loop   0x422da3
  422da4:	adc    DWORD PTR [ebx],0xffffffff
  422da7:	and    eax,0xffee005b
  422dac:	mov    ebp,esp
  422dae:	add    al,dl
  422db0:	or     al,BYTE PTR [eax]
  422db2:	pop    ebp
  422db3:	add    bh,bh
  422db5:	push   edi
  422db6:	xor    esp,0xfffffff4
  422db9:	jmp    DWORD PTR [eax+0x0]
  422dbc:	jmp    DWORD PTR ds:0xffce7600
  422dc2:	out    dx,eax
  422dc3:	mov    DWORD PTR [eax],eax
  422dc5:	pop    ss
  422dc6:	jmp    FWORD PTR [edx-0x5d]
  422dc9:	jmp    FWORD PTR [ecx-0x338a0001]
  422dcf:	mov    eax,ds:0xffaaffd6
  422dd4:	adc    DWORD PTR [eax+0xc12d83],0xffffffaf
  422ddb:	(bad)  
  422ddc:	(bad)  
  422ddd:	jnp    0x422ddf
  422ddf:	xchg   edx,eax
  422de0:	sbb    bh,bh
  422de2:	or     al,0x83
  422de4:	int3   
  422de5:	ins    BYTE PTR es:[edi],dx
  422de6:	sub    esp,0xffffff96
  422de9:	call   FWORD PTR [eax]
  422deb:	inc    DWORD PTR [eax]
  422ded:	xor    cl,ah
  422def:	push   ds
  422df0:	cmp    edi,0x55
  422df3:	(bad)  
  422df4:	push   DWORD PTR [eax-0x7d]
  422df7:	pop    edx
  422df8:	jmp    0x422dfa
  422dfa:	cmp    bh,0xff
  422dfd:	aam    0x0
  422dff:	mov    esi,0x190006
  422e04:	mov    DWORD PTR [edx-0x7ca10d7d],edx
  422e0a:	jo     0x422e0b
  422e0c:	(bad)  
  422e0d:	jmp    0x13:0xcc46dfff
  422e14:	dec    DWORD PTR [ecx-0x77]
  422e17:	add    edi,DWORD PTR [edi-0x7c7cf134]
  422e1d:	cmp    bh,bh
  422e1f:	aad    0xf3
  422e21:	(bad)  
  422e22:	fdivr  st,st(7)
  422e24:	add    BYTE PTR [ebx-0x8aea01],ch
  422e2a:	in     eax,0x83
  422e2c:	jmp    FWORD PTR [eax+eax*1-0x50]
  422e30:	inc    BYTE PTR [ebx+0xcff8956]
  422e36:	int3   
  422e37:	pusha  
  422e38:	fisttp QWORD PTR [ecx-0x7e7c7cdc]
  422e3e:	jmp    FWORD PTR [ecx-0x1e7c02]
  422e44:	dec    DWORD PTR [ebx-0x7632d401]
  422e4a:	push   0xff3a83ff
  422e4f:	pop    edi
  422e50:	mov    DWORD PTR [eax],eax
  422e52:	arpl   di,di
  422e54:	add    BYTE PTR [edi+0xda4600],dl
  422e5a:	pop    ecx
  422e5b:	add    BYTE PTR [eax],al
  422e5d:	add    eax,0xffb888ff
  422e62:	add    al,0xcc
  422e64:	add    BYTE PTR [ebx],al
  422e66:	add    ah,ah
  422e68:	pop    ds
  422e69:	dec    DWORD PTR [eax-0x76560001]
  422e6f:	push   ebp
  422e70:	mov    edx,0xff
  422e75:	into   
  422e76:	jmp    FWORD PTR [eax+0xf400a7]
  422e7c:	jmp    DWORD PTR [ebx-0xdfad00]
  422e82:	rol    BYTE PTR [eax],1
  422e84:	jmp    FWORD PTR [edi+edi*8]
  422e87:	mov    edi,0xff6bffed
  422e8c:	add    ebx,0xffffffff
  422e8f:	xchg   esi,eax
  422e90:	add    edi,edi
  422e92:	ds dec esp
  422e95:	fadd   DWORD PTR [ebx-0x47334841]
  422e9b:	inc    DWORD PTR [eax]
  422e9d:	test   eax,0xffa164ff
  422ea2:	outs   dx,DWORD PTR ds:[esi]
  422ea3:	int3   
  422ea4:	dec    DWORD PTR [ecx-0x1]
  422ea7:	or     BYTE PTR ds:0xffff09ff,al
  422ead:	mov    bl,0xff
  422eaf:	mov    BYTE PTR [edi-0x33537d],dh
  422eb5:	cmp    BYTE PTR [eax],al
  422eb7:	mov    dl,0x52
  422eb9:	add    BYTE PTR [eax+eax*1+0x23ff8583],dl
  422ec0:	call   0xcd4178c5
  422ec5:	jle    0x422ec7
  422ec7:	sub    dh,BYTE PTR [eax]
  422ec9:	adc    DWORD PTR [edi],0xffffffff
  422ecc:	int3   
  422ecd:	adc    eax,0xff57bbff
  422ed2:	mov    ebx,0x6bcc83
  422ed7:	fwait
  422ed8:	jnp    0x422ea6
  422eda:	cmp    bh,bh
  422edc:	(bad)  
  422edd:	jnp    0x422e62
  422edf:	rol    DWORD PTR [eax],0x83
  422ee2:	jnp    0x422ee4
  422ee4:	add    BYTE PTR [ebp-0x1],ah
  422ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ee8:	scas   eax,DWORD PTR es:[edi]
  422ee9:	push   DWORD PTR [edi-0x1]
  422eec:	add    BYTE PTR [edx-0x1],ch
  422eef:	call   0x7eff:0xff97ff41
  422ef6:	call   FWORD PTR [eax]
  422ef8:	jg     0x422efa
  422efa:	enter  0xffff,0xcc
  422efe:	mov    DWORD PTR [ebx],ebx
  422f00:	leave  
  422f01:	dec    DWORD PTR [edx-0x7c1d7c77]
  422f07:	mov    esi,edi
  422f09:	call   DWORD PTR [esi]
  422f0b:	(bad)  
  422f0c:	jmp    FWORD PTR [ebx-0x7cb1e977]
  422f12:	stos   DWORD PTR es:[edi],eax
  422f13:	(bad)  
  422f14:	dec    DWORD PTR [edx-0x963001]
  422f1a:	adc    ecx,esp
  422f1c:	inc    DWORD PTR [ecx-0x768c5a77]
  422f22:	push   ecx
  422f23:	inc    DWORD PTR [eax]
  422f25:	xchg   ebp,eax
  422f26:	(bad)  
  422f27:	jmp    0x422f9a
  422f29:	int3   
  422f2a:	js     0x422f2c
  422f2c:	(bad)  
  422f2d:	fdivp  st(7),st
  422f2f:	mov    ah,al
  422f31:	call   DWORD PTR [eax-0x1]
  422f34:	push   DWORD PTR [eax+eax*1]
  422f37:	pop    edi
  422f38:	add    BYTE PTR ds:[ebx],dl
  422f3b:	inc    DWORD PTR [eax]
  422f3d:	jmp    0xcc12:0x83a2c3ff
  422f44:	inc    ebp
  422f46:	dec    DWORD PTR [edx-0x820076]
  422f4c:	int3   
  422f4d:	loope  0x422f4e
  422f4f:	fadd   DWORD PTR [eax]
  422f51:	add    BYTE PTR [edx-0x500000],dl
  422f57:	adc    DWORD PTR [ecx],esi
  422f59:	push   DWORD PTR [esi-0x790100]
  422f5f:	sub    cl,ch
  422f61:	(bad)  
  422f62:	out    dx,al
  422f63:	inc    DWORD PTR [eax]
  422f65:	fcos   
  422f67:	scas   eax,DWORD PTR es:[edi]
  422f68:	dec    ebx
  422f69:	add    BYTE PTR [edi+edi*8],bh
  422f6c:	jmp    FWORD PTR [edi+0x252e83]
  422f72:	push   ss
  422f73:	mov    edi,edi
  422f75:	or     al,0xff
  422f77:	(bad)  [edx-0xffaa01]
  422f7d:	jnp    0x422f7e
  422f7f:	lock xchg edi,eax
  422f81:	add    BYTE PTR [edx],dl
  422f83:	add    BYTE PTR [eax],al
  422f85:	mov    eax,ds:0x838f89ff
  422f8a:	iret   
  422f8b:	add    BYTE PTR [eax],al
  422f8d:	clc    
  422f8e:	add    dh,al
  422f90:	jb     0x422f1b
  422f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f93:	add    bh,bh
  422f95:	add    bh,bh
  422f97:	mov    eax,0xcc5d83aa
  422f9c:	add    BYTE PTR [ecx+0x986dff],bl
  422fa2:	stc    
  422fa3:	add    BYTE PTR [ecx-0x4c510021],cl
  422fa9:	jmp    esi
  422fab:	(bad)  
  422fac:	(bad)  
  422fad:	jl     0x422f7b
  422faf:	(bad)  
  422fb0:	sahf   
  422fb1:	add    BYTE PTR [edi],bl
  422fb3:	inc    DWORD PTR [ebx+0x4994ff6d]
  422fb9:	or     DWORD PTR [eax],0xffffffff
  422fbc:	(bad)  
  422fbd:	jge    0x422fbe
  422fbf:	iret   
  422fc0:	add    BYTE PTR es:[edi-0x1],cl
  422fc4:	jmp    eax
  422fc6:	add    BYTE PTR [ecx-0x3394ff16],ah
  422fcc:	add    BYTE PTR [ebx-0x1],ah
  422fcf:	fild   QWORD PTR [esi+0x3a89]
  422fd5:	sbb    edi,edi
  422fd7:	pop    ecx
  422fd8:	mov    esi,0x8389beff
  422fdd:	in     eax,dx
  422fde:	int3   
  422fdf:	xchg   esp,eax
  422fe0:	dec    eax
  422fe1:	and    DWORD PTR ds:0xcc308300,0x72
  422fe8:	js     0x422f6d
  422fea:	hlt    
  422feb:	add    bh,bh
  422fed:	call   0xff82:0xff7fcecc
  422ff4:	add    BYTE PTR [edi-0x1],ch
  422ff7:	test   DWORD PTR [esi],ecx
  422ff9:	call   FWORD PTR [ebx+0x28ff83]
  422fff:	sbb    DWORD PTR [eax],eax
  423001:	add    BYTE PTR [ecx],cl
  423003:	add    bh,bh
  423005:	sti    
  423006:	add    BYTE PTR [edx+edx*1-0x1],dl
  42300a:	fadd   DWORD PTR [eax]
  42300c:	call   FWORD PTR [edi+edi*8+0x4f]
  423010:	jmp    0x89ee:0xffcc8900
  423017:	(bad)  
  423018:	pop    ecx
  423019:	(bad)  
  42301a:	fisttp DWORD PTR [ecx+0x9890600]
  423020:	mov    ?,edi
  423022:	retf   0x0
  423025:	dec    esi
  423026:	dec    DWORD PTR [edi+0x84ffcd]
  42302c:	mov    ebp,ecx
  42302e:	or     esp,0x0
  423031:	dec    DWORD PTR [eax+eax*1-0x1]
  423035:	push   ss
  423036:	add    BYTE PTR [eax],bl
  423038:	xchg   ebx,eax
  423039:	add    dl,bl
  42303b:	inc    DWORD PTR [eax]
  42303d:	push   ebp
  42303e:	add    BYTE PTR [ecx-0x6c],ch
  423041:	dec    DWORD PTR [eax-0x34]
  423044:	call   DWORD PTR [eax+0x0]
  423047:	leave  
  423048:	mov    ebx,0x898974ff
  42304d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42304e:	sbb    edx,0xffffff9d
  423051:	add    BYTE PTR [edx-0x1],dl
  423054:	add    BYTE PTR [esi],al
  423056:	call   DWORD PTR [eax+0x5aff24]
  42305c:	mov    DWORD PTR [ebx+eax*4+0x3100c3b7],ebp
  423063:	inc    DWORD PTR [eax]
  423065:	int3   
  423066:	dec    DWORD PTR [eax+0x53ff8f]
  42306c:	inc    DWORD PTR [ebx]
  42306e:	add    bl,ah
  423070:	inc    esi
  423071:	add    BYTE PTR [ebx],bh
  423073:	cmp    edi,0xffffffbf
  423076:	int3   
  423077:	(bad)  
  42307c:	add    BYTE PTR [esi-0x1],ch
  42307f:	lds    esp,FWORD PTR [esi]
  423081:	add    DWORD PTR [ebx-0x76930100],0xffffffa2
  423088:	dec    ebx
  423089:	add    BYTE PTR [edi-0x4e0001],bl
  42308f:	lock out dx,eax
  423091:	mov    ebp,edi
  423093:	mov    DWORD PTR [eax],eax
  423095:	pop    esp
  423096:	add    BYTE PTR [eax+0x6e],bh
  423099:	inc    DWORD PTR [eax-0x1]
  42309c:	call   DWORD PTR [ebx+0x2c0083]
  4230a2:	dec    eax
  4230a3:	add    BYTE PTR [eax],al
  4230a5:	mov    edi,edi
  4230a7:	rcr    DWORD PTR [eax],1
  4230a9:	add    BYTE PTR [edi],cl
  4230ab:	(bad)  
  4230ac:	jmp    DWORD PTR [esi-0xdecf00]
  4230b2:	(bad)  
  4230b3:	cmp    edi,0x5f
  4230b6:	add    bl,dl
  4230b8:	stos   BYTE PTR es:[edi],al
  4230b9:	mov    DWORD PTR [edi],eax
  4230bb:	or     DWORD PTR [ecx-0x40bd0081],0x0
  4230c2:	add    edi,edi
  4230c4:	jmp    DWORD PTR [ebp-0x1]
  4230c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230c9:	call   FWORD PTR [edx-0x7cff0100]
  4230cf:	push   ss
  4230d0:	lock int3 
  4230d2:	fild   DWORD PTR [eax]
  4230d4:	add    BYTE PTR [eax+0x479eff],ch
  4230da:	cmp    al,0xff
  4230dc:	mov    DWORD PTR [edi],edi
  4230de:	call   FWORD PTR [eax]
  4230e0:	xor    al,0x83
  4230e2:	xchg   edx,eax
  4230e3:	(bad)  
  4230e4:	jmp    DWORD PTR [eax+eax*1+0x1fffa114]
  4230eb:	(bad)  
  4230ec:	jmp    FWORD PTR [ebx-0x1]
  4230ef:	loopne 0x4230dc
  4230f1:	jmp    DWORD PTR [edi]
  4230f3:	mov    edi,edi
  4230f5:	mov    bl,0x83
  4230f7:	js     0x42316c
  4230f9:	jmp    DWORD PTR [ebx-0x1]
  4230fc:	jmp    DWORD PTR [ebx]
  4230fe:	int3   
  4230ff:	lods   al,BYTE PTR ds:[esi]
  423100:	mov    ds:0x9a00,eax
  423105:	and    BYTE PTR [eax],al
  423107:	ret    
  423108:	push   ds
  423109:	add    BYTE PTR [eax+0xd3cc00],ah
  42310f:	push   ebp
  423110:	enter  0xdeff,0xff
  423114:	(bad)  
  423115:	out    dx,al
  423116:	(bad)  
  423117:	in     al,dx
  423118:	sub    edi,edi
  42311a:	dec    ecx
  42311b:	mov    DWORD PTR [ebx+0x5f9800ef],eax
  423121:	add    BYTE PTR [ebx-0x62ff77],cl
  423127:	mov    esp,0x83f600c6
  42312c:	mov    DWORD PTR [edi-0x1],ebx
  42312f:	sbb    DWORD PTR [eax+eax*1-0x69ff008d],0x0
  423137:	jbe    0x423129
  423139:	jmp    FWORD PTR [eax-0x1]
  42313c:	inc    DWORD PTR [ebx-0x34]
  42313f:	enter  0xcc1b,0x9f
  423143:	inc    DWORD PTR [ebx+0x54fa83a8]
  423149:	mov    DWORD PTR [ebp+0x0],eax
  42314c:	call   FWORD PTR [edx+0x0]
  42314f:	push   esi
  423150:	inc    ebp
  423151:	dec    DWORD PTR [esp+ecx*8-0x2e005c7d]
  423158:	adc    eax,0xff6e00
  42315d:	push   ss
  42315e:	dec    DWORD PTR [esi-0x22]
  423161:	push   DWORD PTR [edi-0x7d]
  423164:	add    BYTE PTR [ebp-0xa47f34],bh
  42316a:	data16 int3 
  42316c:	add    BYTE PTR [ebp+0x8fccff],cl
  423172:	cdq    
  423173:	(bad)  
  423174:	(bad)  
  423175:	jg     0x423176
  423177:	test   eax,0xcfff7e
  42317c:	jmp    FWORD PTR [edi+0x0]
  42317f:	pop    eax
  423180:	mov    ah,cl
  423182:	dec    ebp
  423183:	(bad)  
  423184:	inc    DWORD PTR [edx]
  423186:	add    bh,al
  423188:	inc    ebp
  423189:	(bad)  
  42318a:	inc    DWORD PTR [eax]
  42318c:	add    bh,dl
  42318e:	(bad)  
  42318f:	jns    0x42311d
  423191:	add    BYTE PTR [edi+0x0],dl
  423194:	add    BYTE PTR [edi+0x35ce83],bh
  42319a:	imul   edi,edi,0xffffffff
  42319d:	lahf   
  42319e:	jmp    FWORD PTR [ebx]
  4231a0:	xor    al,0xff
  4231a2:	outs   dx,BYTE PTR ds:[esi]
  4231a3:	add    BYTE PTR [eax],al
  4231a5:	push   esi
  4231a6:	(bad)  
  4231a7:	jle    0x4231df
  4231a9:	dec    DWORD PTR ds:0xff8affff
  4231af:	push   esp
  4231b0:	jbe    0x4231b2
  4231b2:	mov    ds:0x28ffff,al
  4231b7:	dec    ebx
  4231b8:	jno    0x4231b9
  4231ba:	adc    al,0xff
  4231bc:	add    BYTE PTR [eax],dl
  4231be:	add    BYTE PTR [edx+0xaaffad],bl
  4231c4:	jmp    DWORD PTR [eax-0x7637c901]
  4231ca:	sar    edi,0x0
  4231cd:	dec    ebx
  4231ce:	(bad)  
  4231cf:	jnp    0x4231d7
  4231d1:	add    BYTE PTR [ebx],bl
  4231d3:	dec    DWORD PTR [ecx+0x7bb00bc]
  4231d9:	(bad)  
  4231da:	in     al,dx
  4231db:	mov    DWORD PTR [eax],eax
  4231dd:	bound  eax,QWORD PTR [eax]
  4231df:	xor    eax,0xcc8d00d2
  4231e4:	add    BYTE PTR [ebx-0xf49200],cl
  4231ea:	lahf   
  4231eb:	add    bh,bh
  4231ed:	inc    ebp
  4231ee:	add    dl,ch
  4231f0:	or     al,BYTE PTR [ebx+0x6e0083fe]
  4231f6:	inc    DWORD PTR [esi+0xe]
  4231f9:	add    BYTE PTR [eax],al
  4231fb:	inc    DWORD PTR [eax]
  4231fd:	cmp    al,0x83
  4231ff:	mov    ebp,0xffd3ff28
  423204:	call   DWORD PTR [ebp-0x7ce2ca7d]
  42320a:	mov    edi,0x8395ff83
  42320f:	jle    0x4231f6
  423211:	jmp    DWORD PTR [ecx-0x33917601]
  423217:	addr16 cdq 
  423219:	push   DWORD PTR [edi+edi*8-0x1]
  42321d:	mov    ds:0xff389e00,eax
  423222:	mov    BYTE PTR [eax],al
  423224:	add    BYTE PTR [esi-0x7cb5e700],ch
  42322a:	sub    eax,0xffd000ff
  42322f:	dec    esi
  423230:	jp     0x423231
  423232:	mov    al,0xff
  423234:	add    bh,bl
  423236:	push   edi
  423238:	sahf   
  423239:	sub    DWORD PTR ds:0xff45ffff,0x7
  423240:	push   0xffffffcc
  423242:	pop    ds
  423243:	add    BYTE PTR [ebx+0x392f0097],al
  423249:	(bad)  
  42324a:	cmp    al,0xff
  42324c:	mov    DWORD PTR [eax],ecx
  42324e:	call   DWORD PTR [ebx-0x5f0092]
  423254:	add    DWORD PTR [ebp+0x0],0x7b
  423258:	imul   edi,edi,0xffffffcb
  42325b:	add    bh,bh
  42325d:	or     cl,ah
  42325f:	jl     0x4231fe
  423261:	jmp    FWORD PTR [edi-0x890100]
  423267:	dec    edx
  423268:	fimul  WORD PTR [ecx-0x6400ffde]
  42326e:	mov    DWORD PTR ds:0xc5ff33,edi
  423274:	int3   
  423275:	les    eax,FWORD PTR [ebx+0x5fff5bd]
  42327b:	inc    DWORD PTR [eax]
  42327d:	mov    dl,0xff
  42327f:	pop    ebx
  423280:	fdivr  st,st(7)
  423282:	ins    BYTE PTR es:[edi],dx
  423283:	add    bh,bh
  423285:	sar    edi,1
  423287:	jo     0x423278
  423289:	jmp    DWORD PTR [edi+edi*8-0x5bff9b00]
  423290:	xor    al,0xcc
  423292:	in     eax,dx
  423293:	int3   
  423294:	call   DWORD PTR [eax-0x30c01]
  42329a:	push   eax
  42329b:	(bad)  
  42329c:	inc    DWORD PTR [edi+edi*8]
  42329f:	rol    DWORD PTR [ebx-0x3300dc77],0x7b
  4232a6:	call   DWORD PTR [ecx+0x1fffa8]
  4232ac:	(bad)  
  4232ad:	fiadd  DWORD PTR [ebx+0x3cc0c23]
  4232b3:	(bad)  
  4232b4:	call   FWORD PTR ds:0xff146800
  4232ba:	inc    ecx
  4232bb:	inc    DWORD PTR [ebx+0x39b08396]
  4232c1:	inc    DWORD PTR ds:0xff5d0083
  4232c7:	xchg   BYTE PTR [ebx-0xfffe01],dh
  4232cd:	mov    eax,0xf03aff
  4232d2:	pop    ds
  4232d3:	(bad)  
  4232d4:	call   DWORD PTR [ecx]
  4232d6:	cmp    ebx,0x44
  4232d9:	inc    DWORD PTR [esi-0xf0001]
  4232df:	pop    eax
  4232e0:	fwait
  4232e1:	add    BYTE PTR [ecx+0x0],dh
  4232e4:	sub    ecx,0xffffffff
  4232e7:	xchg   ebx,eax
  4232e8:	sub    al,BYTE PTR [eax]
  4232ea:	push   esi
  4232eb:	add    bh,bh
  4232ed:	aad    0x0
  4232ef:	mov    ch,0x64
  4232f1:	add    BYTE PTR [ebx-0x3ff7d],cl
  4232f7:	js     0x42332d
  4232f9:	add    al,bh
  4232fb:	add    BYTE PTR [eax],al
  4232fd:	xlat   BYTE PTR ds:[ebx]
  4232fe:	jmp    ebp
  423300:	xchg   ecx,eax
  423301:	add    BYTE PTR [edi-0x7d],al
  423304:	int3   
  423305:	jbe    0x42328a
  423307:	push   ss
  423308:	sub    bh,bh
  42330a:	mov    esp,cs
  42330c:	inc    DWORD PTR [edi-0xce0d01]
  423312:	mov    cs,WORD PTR [ecx-0x587ca401]
  423318:	(bad)  
  42331a:	popa   
  42331b:	(bad)  
  42331c:	call   DWORD PTR [esi+0xd17400]
  423322:	data16 (bad) 
  423324:	inc    ebp
  423326:	add    BYTE PTR [edx-0x7cf4ff15],al
  42332c:	(bad)  
  42332d:	fild   WORD PTR [eax]
  42332f:	mov    ebx,0x89b1002f
  423334:	int3   
  423335:	inc    ebp
  423336:	push   ebx
  423338:	add    edi,edi
  42333a:	pop    esi
  42333b:	mov    DWORD PTR [eax],eax
  42333d:	mov    bl,0xff
  42333f:	(bad)  
  423340:	push   0xffffffcc
  423342:	mov    BYTE PTR [eax],0x83
  423345:	lds    eax,FWORD PTR [eax]
  423347:	rcl    DWORD PTR [edi+edi*8+0xa],1
  42334b:	add    DWORD PTR [eax],0xffffff89
  42334e:	add    al,al
  423350:	push   ecx
  423351:	dec    esp
  423353:	mov    DWORD PTR [eax],eax
  423355:	(bad)  
  423356:	inc    DWORD PTR [edi+0x44ffb9]
  42335c:	(bad)  
  42335d:	fld    DWORD PTR [eax]
  42335f:	pop    eax
  423360:	jge    0x423362
  423362:	mov    al,0x0
  423364:	call   FWORD PTR [ebx-0x7c36ea00]
  42336a:	push   ebp
  42336b:	inc    DWORD PTR [eax]
  42336d:	inc    ecx
  42336e:	add    BYTE PTR [ebx-0x33437c89],bl
  423374:	push   esi
  423376:	call   ecx
  423378:	in     eax,0xcc
  42337a:	arpl   WORD PTR [ecx-0x4009000],cx
  423380:	mov    ah,0xff
  423382:	pop    es
  423383:	int3   
  423384:	dec    DWORD PTR [edi+edi*8-0x33]
  423388:	cmp    edi,edi
  42338a:	add    edi,edi
  42338c:	inc    DWORD PTR [edx+0x2bebcc]
  423392:	cmp    al,0x0
  423394:	adc    DWORD PTR [ebp-0x1],0xffffff85
  423398:	es add dh,cl
  42339b:	int3   
  42339c:	add    edi,0xffffff83
  42339f:	aam    0xf3
  4233a1:	jmp    DWORD PTR [eax+0x8dff83]
  4233a7:	or     al,0x23
  4233a9:	int3   
  4233aa:	xor    eax,0x6b00ff
  4233af:	(bad)  
  4233b0:	pop    ebp
  4233b1:	mov    DWORD PTR [edi-0x34],ebx
  4233b4:	inc    DWORD PTR ds:0x325f83
  4233ba:	jmp    0x4233bb
  4233bc:	add    DWORD PTR [edi-0x16b701],0x25
  4233c3:	(bad)  
  4233c4:	jmp    FWORD PTR [ebp+0x765c89]
  4233ca:	mov    DWORD PTR [eax],0x8400bb83
  4233d0:	inc    DWORD PTR [eax]
  4233d2:	sbb    al,BYTE PTR [eax]
  4233d4:	int3   
  4233d5:	jno    0x4233a3
  4233d7:	sbb    dl,ah
  4233d9:	add    esp,0xffffffff
  4233dc:	jmp    FWORD PTR [eax+0x0]
  4233df:	ins    BYTE PTR es:[edi],dx
  4233e0:	jb     0x4233e2
  4233e2:	fs cmp edi,0x74
  4233e6:	jmp    FWORD PTR [ebx-0x2c]
  4233e9:	add    BYTE PTR [esi],bh
  4233eb:	cmp    edi,0x3d
  4233ee:	call   DWORD PTR [eax-0x3000b]
  4233f4:	call   FWORD PTR [edi-0x7636b601]
  4233fa:	jnp    0x4233fb
  4233fc:	inc    DWORD PTR [edi+edi*8-0x72]
  423400:	das    
  423401:	inc    DWORD PTR [ebx+0x0]
  423404:	add    dh,dh
  423406:	jmp    DWORD PTR [esi+0x24]
  423409:	push   DWORD PTR [eax]
  42340b:	inc    DWORD PTR [ebx-0x3f140079]
  423411:	inc    DWORD PTR [eax+eax*1+0x0]
  423415:	popa   
  423416:	jmp    DWORD PTR [ebp-0xb00078]
  42341c:	xor    DWORD PTR [edx-0x7d],0xffffffce
  423420:	pop    esi
  423421:	inc    DWORD PTR [edx]
  423423:	cmp    edi,0xd
  423426:	mov    DWORD PTR [esi+ebp*8-0x1],ecx
  42342a:	mov    dh,0x0
  42342c:	mov    DWORD PTR [edx],esp
  42342e:	int3   
  42342f:	(bad)  
  423430:	fiadd  DWORD PTR [eax]
  423432:	aad    0x0
  423434:	mov    DWORD PTR [eax-0x1],edi
  423437:	jne    0x4234ac
  423439:	call   FWORD PTR [ebx]
  42343b:	dec    DWORD PTR [ecx-0x7c92ff91]
  423441:	int3   
  423442:	sub    al,0x89
  423444:	int3   
  423445:	mov    edi,0x608eff
  42344a:	cmp    bh,0x0
  42344d:	fwait
  42344e:	call   DWORD PTR [ecx+0x25]
  423451:	add    BYTE PTR [edi+0x0],ch
  423454:	add    bh,bh
  423456:	add    DWORD PTR [ecx-0x3dffbf],0x0
  42345d:	sar    edi,0x86
  423460:	or     ah,cl
  423462:	mov    eax,DWORD PTR [ebx+0x1583d0ff]
  423468:	scas   eax,DWORD PTR es:[edi]
  423469:	add    BYTE PTR [ebp-0x1],ah
  42346c:	add    BYTE PTR [ecx],bl
  42346e:	or     DWORD PTR [edx-0x76e0fff2],0xffffffcc
  423475:	pop    edi
  423476:	(bad)  
  423477:	cli    
  423478:	jnp    0x4233fd
  42347a:	or     edi,edi
  42347c:	add    dl,cl
  42347e:	push   DWORD PTR [edx]
  423480:	mov    edi,edi
  423482:	xchg   ebp,eax
  423483:	int3   
  423484:	call   ebp
  423486:	inc    DWORD PTR [esi-0x46]
  423489:	call   FWORD PTR [edx+0xaffff]
  42348f:	jo     0x4234f5
  423491:	xor    ecx,0xffffff83
  423494:	add    cl,ch
  423496:	push   DWORD PTR [edi-0x33]
  423499:	int3   
  42349a:	inc    edi
  42349b:	add    DWORD PTR [ebx+0x635600e8],0x0
  4234a2:	(bad)  
  4234a3:	(bad)  
  4234a4:	call   DWORD PTR [ebx-0x13ca34]
  4234aa:	cli    
  4234ab:	add    bh,bh
  4234ad:	sbb    eax,0xff922e83
  4234b2:	jmp    0x423437
  4234b4:	call   DWORD PTR ds:0x271e89
  4234ba:	xor    al,BYTE PTR [eax]
  4234bc:	inc    ebp
  4234be:	add    BYTE PTR [eax-0x28],ah
  4234c1:	mov    DWORD PTR [eax-0x1],edi
  4234c4:	int3   
  4234c5:	repz jmp FWORD PTR ds:0x89728368
  4234cc:	(bad)  
  4234cd:	out    dx,eax
  4234ce:	call   FWORD PTR [esi+0x2b]
  4234d1:	push   DWORD PTR [edx]
  4234d3:	inc    DWORD PTR [eax]
  4234d5:	ret    0x983
  4234d8:	cmc    
  4234d9:	sub    DWORD PTR [ecx-0x1],0xffffffff
  4234dd:	add    BYTE PTR [eax],al
  4234df:	or     al,0x82
  4234e1:	xor    DWORD PTR [ebp-0x1],0xffffffff
  4234e5:	xchg   DWORD PTR [eax],eax
  4234e7:	shl    bl,1
  4234e9:	add    BYTE PTR [eax-0x1],bl
  4234ec:	int3   
  4234ed:	pop    edi
  4234ee:	jmp    FWORD PTR [esi]
  4234f0:	xor    al,BYTE PTR [ebx+0x7cff83e7]
  4234f6:	call   DWORD PTR [edi+ebp*1+0x0]
  4234fa:	pushf  
  4234fb:	inc    DWORD PTR [eax]
  4234fd:	pop    ebp
  4234fe:	(bad)  
  4234ff:	cmp    BYTE PTR [eax-0x1],ah
  423502:	enter  0xff,0xc8
  423506:	int3   
  423507:	push   es
  423508:	mov    eax,ds:0xffcc7d00
  42350d:	push   ebp
  42350e:	add    BYTE PTR [edi-0x76aa002f],cl
  423514:	cmp    DWORD PTR [edi+edi*8+0x2d],0xffffffcc
  423519:	int3   
  42351a:	int3   
  42351b:	int3   
  42351c:	int3   
  42351d:	int3   
  42351e:	int3   
  42351f:	int3   
  423520:	(bad)  
  423521:	fisttp DWORD PTR [ecx-0x337d7c55]
  423527:	push   eax
  423528:	add    BYTE PTR [ebp+0x11831d00],bl
  42352e:	inc    DWORD PTR [eax-0x56ffea01]
  423534:	mov    DWORD PTR [edi+edi*8+0x71],ecx
  423538:	dec    eax
  42353a:	add    BYTE PTR [edi],al
  42353c:	add    BYTE PTR [edi],cl
  42353e:	call   FWORD PTR [eax+eax*1]
  423541:	fisttp QWORD PTR [ecx+0xa9ffbe]
  423547:	dec    eax
  423548:	add    BYTE PTR [ebx+0x48356ff],cl
  42354e:	xor    ebp,0x0
  423551:	test   BYTE PTR [ecx+0xfffc1],0x4d
  423558:	inc    eax
  42355a:	adc    DWORD PTR [edx],0x0
  42355d:	std    
  42355e:	adc    DWORD PTR [esi-0x1],0xffffffac
  423562:	inc    DWORD PTR [ebp-0x1]
  423565:	and    DWORD PTR [ebx-0xc70073],eax
  42356b:	jmp    0x42356c
  42356d:	xchg   esi,eax
  42356e:	push   DWORD PTR [eax]
  423570:	call   DWORD PTR [edx+0x0]
  423573:	mov    edx,0xbaffc383
  423578:	sub    DWORD PTR [edi+edi*8],0x5c
  42357c:	push   DWORD PTR [edi+edi*8]
  42357f:	jl     0x423580
  423581:	cmp    DWORD PTR [ecx+0xdcff49],ecx
  423587:	arpl   WORD PTR [ecx-0x35ff1c],cx
  42358d:	mov    bh,0x83
  42358f:	mov    ds:0xaccc7700,al
  423594:	call   FWORD PTR [ecx]
  423596:	sbb    DWORD PTR [esi],0xffffffff
  423599:	lock mov DWORD PTR [ecx+0x49899e83],ebp
  4235a0:	add    BYTE PTR [edi],ch
  4235a2:	dec    edi
  4235a4:	jmp    DWORD PTR [esi-0x34]
  4235a7:	push   esp
  4235a8:	call   ebx
  4235aa:	add    BYTE PTR [ebx],al
  4235ac:	dec    DWORD PTR [ebp+0x0]
  4235af:	xlat   BYTE PTR ds:[ebx]
  4235b0:	int3   
  4235b1:	jmp    0x504333b5
  4235b6:	int3   
  4235b7:	jbe    0x4235b8
  4235b9:	es add ch,bl
  4235bc:	add    DWORD PTR [ebx-0x77],0xffffff91
  4235c0:	inc    DWORD PTR [eax-0x1]
  4235c3:	imul   eax,DWORD PTR [eax],0xffffffed
  4235c6:	jmp    FWORD PTR [ecx]
  4235c8:	(bad)  
  4235c9:	jle    0x4235cb
  4235cb:	imul   eax,DWORD PTR [eax],0xffffffa3
  4235ce:	call   edi
  4235d0:	push   DWORD PTR [ebp+0x47005bff]
  4235d6:	add    cl,al
  4235d8:	add    BYTE PTR [esi],dl
  4235da:	int3   
  4235db:	add    bh,bh
  4235dd:	sub    eax,0xdfcc28ff
  4235e2:	call   ecx
  4235e4:	int3   
  4235e5:	mov    bl,0xcc
  4235e7:	inc    edx
  4235e8:	mov    ebp,esi
  4235ea:	(bad)  
  4235eb:	cmp    al,0xcc
  4235ed:	inc    esp
  4235ee:	jmp    DWORD PTR [esi]
  4235f0:	add    BYTE PTR [edi-0x68ff1501],cl
  4235f6:	int3   
  4235f7:	pop    ds
  4235f8:	add    BYTE PTR [edx-0x77],dh
  4235fb:	mov    bl,0x0
  4235fd:	popa   
  4235fe:	add    ah,bl
  423600:	and    DWORD PTR [eax],0xffffffff
  423603:	cmp    al,0xff
  423605:	out    0xff,al
  423607:	int    0xff
  423609:	inc    eax
  42360a:	add    DWORD PTR [ecx],0x0
  42360d:	sub    bh,bh
  42360f:	lods   eax,DWORD PTR ds:[esi]
  423610:	push   DWORD PTR [ecx-0x1]
  423613:	es (bad) 
  423615:	(bad)  
  423617:	in     eax,dx
  423618:	(bad)  
  423619:	fdivp  st(7),st
  42361b:	lahf   
  42361c:	add    BYTE PTR [ecx+0x28ff91cc],bl
  423622:	int3   
  423623:	sbb    BYTE PTR [eax],al
  423625:	inc    esi
  423626:	inc    edx
  423628:	add    BYTE PTR ds:0x8ff39ff,dh
  42362e:	push   DWORD PTR [edi+edi*8+0x51]
  423632:	add    BYTE PTR [ebp+0x72fffcff],dh
  423638:	int3   
  423639:	jmp    0x69ff:0x3f837389
  423640:	add    BYTE PTR [eax+eax*1-0x24],dl
  423644:	int3   
  423645:	retf   0xa4cc
  423648:	call   DWORD PTR [edx+0x0]
  42364b:	arpl   WORD PTR [ecx-0x17ff47],cx
  423651:	fdivr  st,st(7)
  423653:	cmp    bh,0xce
  423656:	mov    ebp,eax
  423658:	jmp    DWORD PTR [eax+eax*1]
  42365b:	mov    eax,0x9600f0ff
  423660:	jmp    DWORD PTR [ecx-0x7cffda01]
  423666:	add    BYTE PTR [edx-0x1],ch
  423669:	cmp    DWORD PTR [ebx-0x68ffe4],eax
  42366f:	sbb    BYTE PTR [ebx-0x207c48],al
  423675:	add    al,0x0
  423677:	std    
  423678:	sub    DWORD PTR [esi],0xffffffff
  42367b:	push   esp
  42367c:	add    DWORD PTR [ebx+0x670034ff],0xffffffff
  423683:	pop    edi
  423684:	add    edx,0xffffffff
  423687:	(bad)  
  423689:	inc    esi
  42368a:	jmp    DWORD PTR [esi]
  42368c:	int3   
  42368d:	push   edx
  42368e:	add    BYTE PTR [eax+eax*1-0x2f],cl
  423692:	mov    DWORD PTR [eax+0x189fdff],esp
  423698:	int3   
  423699:	(bad)  
  42369a:	jmp    DWORD PTR [edi-0x34]
  42369d:	imul   edi,edi,0x890e00ec
  4236a3:	and    eax,DWORD PTR [ebx-0x52001c]
  4236a9:	(bad)  
  4236aa:	call   DWORD PTR [ebp+0x5c83c600]
  4236b0:	push   DWORD PTR [ecx]
  4236b2:	dec    DWORD PTR [eax-0x31009801]
  4236b8:	call   FWORD PTR [ecx-0x34]
  4236bb:	jae    0x423646
  4236bd:	iret   
  4236be:	add    BYTE PTR [edx+0x0],cl
  4236c1:	sub    al,0xff
  4236c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236c4:	push   DWORD PTR [esi]
  4236c6:	(bad)  
  4236c7:	clc    
  4236c8:	sub    DWORD PTR ds:0x11004d83,0xffffff89
  4236cf:	mov    ebp,0x3c00a9ff
  4236d4:	add    BYTE PTR [edi+0x0],ch
  4236d7:	aam    0xff
  4236d9:	pop    esi
  4236da:	jmp    FWORD PTR [esi]
  4236dc:	call   DWORD PTR [ebx]
  4236de:	add    BYTE PTR [ebp+0x0],bh
  4236e1:	or     BYTE PTR [eax],al
  4236e3:	pop    esi
  4236e4:	add    al,dl
  4236e6:	dec    DWORD PTR [ecx-0x1]
  4236e9:	mov    ch,0xff
  4236eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236ec:	int3   
  4236ed:	push   es
  4236ee:	jmp    FWORD PTR [edx+0x0]
  4236f1:	out    0x0,eax
  4236f3:	mov    bh,0xff
  4236f5:	mov    cs,WORD PTR [ecx-0xb600a6]
  4236fb:	iret   
  4236fc:	add    BYTE PTR [edi+edi*8-0x9c0065],cl
  423703:	add    esp,ecx
  423705:	or     bh,bh
  423707:	push   edx
  423708:	and    DWORD PTR [eax],0x0
  42370b:	push   ebx
  42370c:	int3   
  42370d:	out    dx,eax
  42370e:	add    BYTE PTR [ecx-0x71ff6a00],cl
  423714:	push   DWORD PTR [edi+edi*8+0x8283b1]
  42371b:	or     eax,0x79ff52ff
  423720:	add    BYTE PTR [ebx-0x1],dl
  423723:	xor    eax,0xb3ffaf89
  423728:	add    BYTE PTR [eax+0x5ff9183],ch
  42372e:	sub    DWORD PTR [eax],0xffffff83
  423731:	loope  0x423732
  423733:	xchg   esp,eax
  423734:	jmp    FWORD PTR ds:0xdf00a7ff
  42373a:	add    BYTE PTR [eax-0x1],cl
  42373d:	inc    edi
  42373e:	add    BYTE PTR [ebx-0x4b000701],dh
  423744:	mov    DWORD PTR [esi-0x1],esi
  423747:	or     bh,bh
  423749:	jge    0x42374a
  42374b:	rol    DWORD PTR [eax],1
  42374d:	loopne 0x42374e
  42374f:	(bad)  
  423750:	mov    eax,ebx
  423752:	int3   
  423753:	loop   0x423721
  423755:	mov    ds:0x98ff9dff,eax
  42375a:	add    BYTE PTR [ecx],al
  42375c:	add    BYTE PTR [edi],cl
  42375e:	add    ah,ch
  423760:	add    bh,dh
  423762:	add    BYTE PTR [ebx],bh
  423764:	inc    DWORD PTR [esi]
  423766:	(bad)  
  423767:	mov    edi,0xeecc1083
  42376c:	add    DWORD PTR [ebp-0x1],0xffffffd8
  423770:	cmp    DWORD PTR [edx-0x7d],0x11
  423774:	jmp    FWORD PTR [eax-0x1]
  423777:	adc    al,BYTE PTR [eax]
  423779:	push   edi
  42377a:	(bad)  
  42377b:	aas    
  42377c:	call   FWORD PTR [ebx]
  42377e:	add    BYTE PTR [eax+0x36001f00],dl
  423784:	add    DWORD PTR [ebp-0x7d],0x38
  423788:	add    ch,dl
  42378a:	xor    edx,0x0
  42378d:	sbb    DWORD PTR [eax],eax
  42378f:	mov    bh,0xff
  423791:	and    bh,bh
  423793:	dec    ecx
  423794:	xor    DWORD PTR [ecx-0x21ff8201],0xffffffff
  42379b:	je     0x42379c
  42379d:	mov    es,WORD PTR [ebx-0x3f003f]
  4237a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237a4:	jmp    FWORD PTR [ebx-0xd761701]
  4237aa:	add    BYTE PTR [edx-0x7d],bh
  4237ad:	inc    edx
  4237ae:	add    BYTE PTR [eax+0xaff9600],ch
  4237b4:	call   ecx
  4237b6:	mov    DWORD PTR [edx],edi
  4237b8:	add    BYTE PTR [ecx+ecx*4],dl
  4237bb:	pop    ss
  4237bc:	add    BYTE PTR [eax+eax*1-0xa17c34],bl
  4237c3:	hlt    
  4237c4:	add    BYTE PTR [ecx],dh
  4237c6:	add    BYTE PTR [ecx-0x12335501],cl
  4237cc:	or     DWORD PTR [eax-0x7d],0x38
  4237d0:	add    BYTE PTR [eax-0x40002501],bh
  4237d6:	(bad)  
  4237d7:	jmp    0x4237d8
  4237d9:	cdq    
  4237da:	int3   
  4237db:	add    BYTE PTR ds:[ecx+0x20ff23ff],al
  4237e2:	mov    ebx,esi
  4237e4:	add    BYTE PTR [esi-0x1],ah
  4237e7:	jl     0x4237e8
  4237e9:	add    ecx,DWORD PTR [ecx+0x98ffb7]
  4237ef:	add    eax,DWORD PTR [eax]
  4237f1:	pusha  
  4237f2:	mov    DWORD PTR [ecx-0x1],eax
  4237f5:	push   esp
  4237f6:	call   FWORD PTR [eax-0x2dff0f00]
  4237fc:	int3   
  4237fd:	mov    BYTE PTR [eax],al
  4237ff:	inc    esi
  423800:	add    bl,bh
  423802:	mov    DWORD PTR [eax+0x54836f00],ecx
  423808:	call   DWORD PTR ds:0xe9893dff
  42380e:	adc    DWORD PTR [esi+0x1affdb89],0xffffffff
  423815:	push   ebx
  423816:	inc    edx
  423818:	mov    DWORD PTR [edi+0x0],edx
  42381b:	popa   
  42381c:	jmp    FWORD PTR [edx-0x1]
  42381f:	leave  
  423820:	sbb    ecx,0x0
  423823:	into   
  423824:	call   FWORD PTR [edi-0x1]
  423827:	or     al,0xcc
  423829:	add    DWORD PTR [eax],0x89ee83c2
  42382f:	adc    BYTE PTR [ebx-0x8400ec],al
  423835:	jmp    0x423836
  423837:	jmp    DWORD PTR cs:[eax-0x32ff8801]
  42383e:	add    BYTE PTR [ebp+0x2eff78ff],bh
  423844:	add    BYTE PTR [esi-0x74005801],bh
  42384a:	dec    DWORD PTR [eax+eax*1-0x597cf7]
  423851:	dec    ebp
  423852:	add    BYTE PTR [ebx-0x1],ch
  423855:	ret    
  423856:	jmp    FWORD PTR [edi]
  423858:	add    BYTE PTR ds:0x83ff4eff,ah
  42385e:	sbb    DWORD PTR [edi+edi*8],0x11
  423862:	add    ch,dl
  423864:	add    ah,al
  423866:	mov    DWORD PTR [edi-0xaff787d],ebx
  42386c:	sub    ebx,0x0
  42386f:	clc    
  423870:	adc    ecx,0xffffff83
  423873:	inc    DWORD PTR [eax]
  423875:	je     0x423876
  423877:	sub    al,0x0
  423879:	bound  eax,QWORD PTR [eax]
  42387b:	and    al,0x0
  42387d:	inc    edi
  42387e:	inc    DWORD PTR [edi-0x2d7c3501]
  423884:	add    BYTE PTR [ebx-0x1],bh
  423887:	mov    ebp,0x5fcc3b00
  42388c:	add    BYTE PTR [ebx-0x3fff734],cl
  423892:	add    BYTE PTR [eax-0x6bff3177],bh
  423898:	add    BYTE PTR [ecx+0x39006389],ch
  42389e:	dec    DWORD PTR [eax-0x1]
  4238a1:	xor    edi,edi
  4238a3:	in     eax,dx
  4238a4:	push   DWORD PTR [ebx]
  4238a6:	push   DWORD PTR [edi-0x1]
  4238a9:	or     ecx,esp
  4238ab:	jmp    0x4238ac
  4238ad:	or     al,BYTE PTR [ebx-0x7cd00006]
  4238b3:	sub    edi,edi
  4238b5:	lods   al,BYTE PTR ds:[esi]
  4238b6:	jmp    FWORD PTR [ebx-0x357cef34]
  4238bc:	call   DWORD PTR [eax]
  4238be:	add    DWORD PTR [ecx+ecx*4],0xffffffe6
  4238c2:	int3   
  4238c3:	rol    DWORD PTR [eax],0x79
  4238c6:	(bad)  
  4238c7:	aas    
  4238c8:	mov    DWORD PTR [edi+edi*8-0x1d002a],esi
  4238cf:	xor    edi,edi
  4238d1:	mov    BYTE PTR [ebx+0x270090],0x98
  4238d8:	add    BYTE PTR [eax+0x35ff7300],cl
  4238de:	add    BYTE PTR [edi+0x2700bc00],bl
  4238e4:	mov    DWORD PTR [edi],edx
  4238e6:	add    BYTE PTR [ecx-0x1],dh
  4238e9:	pop    esp
  4238ea:	int3   
  4238eb:	popf   
  4238ec:	inc    DWORD PTR [eax+eax*1]
  4238ef:	add    bh,bh
  4238f1:	ror    BYTE PTR [ecx-0x32003a],1
  4238f7:	sbb    ecx,esp
  4238f9:	lahf   
  4238fa:	dec    DWORD PTR [edi+edi*8]
  4238fd:	mov    al,ds:0xd5ffccff
  423902:	push   DWORD PTR [esi]
  423904:	dec    DWORD PTR [ebx+eax*4]
  423907:	or     bh,bh
  423909:	and    edi,edi
  42390b:	jg     0x42390c
  42390d:	sbb    al,BYTE PTR [eax]
  42390f:	jbe    0x423910
  423911:	dec    edx
  423912:	add    ah,bh
  423914:	push   eax
  423916:	inc    DWORD PTR [ebx+0x79cce100]
  42391c:	sbb    edx,0xffffffff
  42391f:	lods   eax,DWORD PTR ds:[esi]
  423920:	add    BYTE PTR [edx+0x4cffd900],dh
  423926:	add    BYTE PTR [eax+0x0],ch
  423929:	mov    cl,0x0
  42392b:	enter  0x3dff,0x0
  42392f:	ins    DWORD PTR es:[edi],dx
  423930:	(bad)  
  423931:	sti    
  423932:	(bad)  
  423933:	ds mov esp,eax
  423936:	add    BYTE PTR [edx],al
  423938:	jmp    FWORD PTR [eax-0x70ffd201]
  42393e:	inc    DWORD PTR [ebx]
  423940:	add    BYTE PTR [ecx],bh
  423942:	(bad)  
  423943:	mov    ecx,0x89ffb1ff
  423948:	jmp    FWORD PTR [esi-0x1]
  42394b:	in     eax,0xcc
  42394d:	icebp  
  42394e:	int3   
  42394f:	adc    ecx,esp
  423951:	xchg   bh,bh
  423953:	out    dx,eax
  423954:	add    bl,al
  423956:	or     esi,0x0
  423959:	mov    ah,0xff
  42395b:	or     al,BYTE PTR [ebx+0x24ff45]
  423961:	sub    DWORD PTR [eax],eax
  423963:	jo     0x423964
  423965:	jb     0x423967
  423967:	(bad)  
  423968:	jmp    DWORD PTR [ecx-0x77]
  42396b:	cmp    BYTE PTR [ebx-0xd7ffb3],al
  423971:	xchg   esi,eax
  423972:	add    BYTE PTR [ebx+eax*4],bl
  423975:	inc    esi
  423976:	jmp    FWORD PTR [esi-0x4733a37d]
  42397c:	push   edi
  42397e:	(bad)  
  42397f:	mov    ebx,0xbdff3d00
  423984:	dec    DWORD PTR [edi-0x7d]
  423987:	mov    cl,ah
  423989:	hlt    
  42398a:	jmp    FWORD PTR [edx+0x33009100]
  423990:	int3   
  423991:	jo     0x423992
  423993:	sub    eax,0x70ff6c83
  423998:	add    dl,bh
  42399a:	jmp    FWORD PTR [ecx-0x7ff7201]
  4239a0:	add    DWORD PTR [ebp+0x14891a00],0x0
  4239a7:	add    DWORD PTR [eax],0xcccb0094
  4239ad:	iret   
  4239ae:	add    BYTE PTR [eax+0x0],al
  4239b1:	sbb    edi,edi
  4239b3:	push   esp
  4239b4:	add    BYTE PTR [ebx-0x17001c00],cl
  4239ba:	jmp    DWORD PTR [ebx-0x7d]
  4239bd:	pop    esp
  4239be:	inc    DWORD PTR [ebp-0x66007200]
  4239c4:	call   DWORD PTR [ecx]
  4239c6:	int3   
  4239c7:	loop   0x4239c8
  4239c9:	sub    cl,BYTE PTR [ecx+0xedffa4]
  4239cf:	inc    edx
  4239d0:	call   DWORD PTR [edi-0x3d33f101]
  4239d6:	(bad)  
  4239d7:	(bad)  
  4239d9:	scas   eax,DWORD PTR es:[edi]
  4239da:	jmp    FWORD PTR ds:0xcaccfacc
  4239e0:	int3   
  4239e1:	mov    edi,edi
  4239e3:	out    dx,al
  4239e4:	add    BYTE PTR [esi-0x34],dl
  4239e7:	mov    cl,0x0
  4239e9:	mov    BYTE PTR [ebx-0x100e0],0x9
  4239f0:	inc    eax
  4239f2:	int3   
  4239f3:	dec    eax
  4239f4:	jmp    DWORD PTR [ebx]
  4239f6:	inc    edx
  4239f8:	add    dl,cl
  4239fa:	add    al,dh
  4239fc:	or     DWORD PTR [edi+edi*8+0x42],0xffffff83
  423a01:	fwait
  423a02:	call   FWORD PTR [ebp-0x7d]
  423a05:	clc    
  423a06:	add    bl,ch
  423a08:	push   DWORD PTR [esi]
  423a0a:	dec    DWORD PTR [ebx]
  423a0c:	(bad)  
  423a0d:	jp     0x423a0f
  423a0f:	inc    ebp
  423a10:	(bad)  
  423a11:	mov    esi,0xc68312ff
  423a16:	call   ecx
  423a18:	inc    DWORD PTR [ecx]
  423a1a:	add    bl,bl
  423a1c:	call   FWORD PTR [eax+0x0]
  423a1f:	retf   
  423a20:	push   DWORD PTR [ecx-0x77]
  423a23:	cmp    edi,edi
  423a25:	fdivp  st(7),st
  423a27:	dec    eax
  423a28:	cmp    DWORD PTR [eax],0xffffffff
  423a2b:	jbe    0x4239b0
  423a2d:	aam    0xff
  423a2f:	jge    0x4239fd
  423a31:	outs   dx,DWORD PTR ds:[esi]
  423a32:	add    DWORD PTR [edx],0x0
  423a35:	cmp    edi,edi
  423a37:	(bad)  
  423a38:	inc    DWORD PTR [edi+0x0]
  423a3b:	call   0xd89:0xe9891200
  423a42:	mov    ebp,edi
  423a44:	mov    DWORD PTR [eax-0x7d],ebp
  423a47:	or     BYTE PTR [ecx-0x287c8a],0x7a
  423a4e:	add    BYTE PTR [ecx],dl
  423a50:	add    BYTE PTR [esi],bl
  423a52:	push   DWORD PTR [edi]
  423a54:	int3   
  423a55:	or     ah,0x31
  423a58:	jmp    FWORD PTR [ecx]
  423a5a:	adc    edi,0xffffffff
  423a5d:	mov    esp,0xeecc4dff
  423a62:	cmp    DWORD PTR [edi+edi*8+0x11],0xffffffcc
  423a67:	jo     0x4239ec
  423a69:	sub    eax,DWORD PTR [ebx-0xcc00ee]
  423a6f:	adc    esp,ecx
  423a71:	dec    DWORD PTR cs:[eax-0x6c00f201]
  423a78:	add    BYTE PTR [ebp-0xbffb401],ah
  423a7e:	mov    ecx,ebx
  423a80:	add    BYTE PTR [ebx-0x1],ch
  423a83:	xor    eax,DWORD PTR [eax]
  423a85:	mov    cs,WORD PTR [ecx-0x73ff4f]
  423a8b:	dec    ebp
  423a8c:	push   DWORD PTR [ebp+0x1000f400]
  423a92:	add    BYTE PTR [edi-0x1],dl
  423a95:	dec    esi
  423a96:	jmp    edi
  423a98:	cmp    DWORD PTR [edx+0x0],0x70
  423a9c:	jmp    FWORD PTR [edi+edi*8-0x63ff50]
  423aa3:	jb     0x423aa4
  423aa5:	push   ecx
  423aa6:	adc    DWORD PTR [edi],0xffffff83
  423aa9:	cmp    DWORD PTR [eax],eax
  423aab:	adc    al,0xcc
  423aad:	push   ss
  423aae:	dec    DWORD PTR [ecx+0x55834b89]
  423ab4:	add    BYTE PTR [edi],dl
  423ab6:	add    dh,dh
  423ab8:	dec    DWORD PTR [ebx]
  423aba:	int3   
  423abb:	or     eax,0x1effca83
  423ac0:	push   DWORD PTR [ebp-0x1]
  423ac3:	retf   
  423ac4:	mov    esp,ebx
  423ac6:	add    dl,al
  423ac8:	int3   
  423ac9:	pop    es
  423aca:	jmp    FWORD PTR [edi+edi*8-0xc1008e]
  423ad1:	imul   edi,edi,0x834fcc61
  423ad7:	mov    edi,edi
  423ad9:	sub    bh,bh
  423adb:	jnp    0x423add
  423add:	daa    
  423ade:	add    BYTE PTR ds:0xd20048ff,al
  423ae4:	add    BYTE PTR [ebx],cl
  423ae6:	add    BYTE PTR [ecx-0x2dffd100],dl
  423aec:	call   DWORD PTR [esi]
  423aee:	int3   
  423aef:	sar    edi,1
  423af1:	lods   al,BYTE PTR ds:[esi]
  423af2:	xor    DWORD PTR [edi+edi*8+0x69],0xffffffff
  423af7:	enter  0x1eff,0x0
  423afb:	push   esi
  423afc:	inc    DWORD PTR [ebp-0x34]
  423aff:	arpl   WORD PTR [eax],ax
  423b01:	test   DWORD PTR [eax],eax
  423b03:	sar    bh,1
  423b05:	mov    eax,ds:0xc8fff6ff
  423b0a:	add    cl,cl
  423b0c:	add    bh,ah
  423b0e:	add    DWORD PTR [edi+0xfff5aff],0xffffffff
  423b15:	pop    es
  423b16:	add    BYTE PTR [eax+0x7eff23ff],al
  423b1c:	add    BYTE PTR [ecx+0x0],bh
  423b1f:	cmc    
  423b20:	int3   
  423b21:	mov    esi,0x8cff7400
  423b26:	int3   
  423b27:	push   ds
  423b28:	add    BYTE PTR [esi-0x2f7c1f00],al
  423b2e:	push   DWORD PTR [ebp+0x6b83b1ff]
  423b34:	jmp    eax
  423b36:	inc    DWORD PTR [edx-0x5b33167d]
  423b3c:	jmp    DWORD PTR [edi+0x0]
  423b3f:	and    bh,bh
  423b41:	mov    esi,0x2d8362ff
  423b46:	jmp    FWORD PTR [edx-0x1]
  423b49:	fimul  WORD PTR [ecx-0xad7681]
  423b4f:	call   0x62cc:0xbf83caff
  423b56:	call   FWORD PTR [edi]
  423b58:	int3   
  423b59:	push   ecx
  423b5a:	int3   
  423b5b:	sti    
  423b5c:	call   DWORD PTR [edx-0x27003300]
  423b62:	add    BYTE PTR [eax],cl
  423b64:	(bad)  
  423b65:	cmp    esp,ecx
  423b67:	adc    eax,DWORD PTR [eax]
  423b69:	jnp    0x423aee
  423b6b:	dec    eax
  423b6c:	sbb    edx,0xffffffff
  423b6f:	outs   dx,BYTE PTR ds:[esi]
  423b70:	and    esp,0xffffffcc
  423b73:	dec    edi
  423b74:	add    BYTE PTR [edi+0x70ffd9ff],ch
  423b7a:	add    BYTE PTR [esi-0x79005d01],ch
  423b80:	cmp    DWORD PTR [edx],0xffffffff
  423b83:	add    eax,0xb7ff53cc
  423b88:	dec    DWORD PTR [edx+0xdcca6ff]
  423b8e:	xor    DWORD PTR [ecx-0x1],0x3
  423b92:	push   DWORD PTR [esp+ecx*8]
  423b95:	jecxz  0x423b96
  423b97:	xchg   ebp,eax
  423b98:	add    BYTE PTR [eax+0x0],dl
  423b9b:	call   0x2a41df29
  423ba0:	int3   
  423ba1:	pop    ds
  423ba2:	add    DWORD PTR [ecx],0xffffff83
  423ba5:	mov    edi,edi
  423ba7:	xchg   ebp,eax
  423ba8:	mov    DWORD PTR ds:0xfccc9cc,ebp
  423bae:	push   DWORD PTR [ebx+eax*4+0x5a]
  423bb2:	cmp    DWORD PTR ds:0x13ff9500,0x0
  423bb9:	call   0x2f42e6be
  423bbe:	add    dh,ch
  423bc0:	call   FWORD PTR [ebp+0x0]
  423bc3:	pop    DWORD PTR [eax]
  423bc5:	in     al,dx
  423bc6:	call   FWORD PTR [edi+edi*8]
  423bc9:	mov    ecx,0xa9cc3200
  423bce:	add    ch,ah
  423bd0:	add    BYTE PTR ds:0x34ff7a00,bh
  423bd6:	cmp    DWORD PTR [ecx-0x7e008b77],0xffffff83
  423bdd:	mov    ebx,0xdfcc4200
  423be2:	add    BYTE PTR [edi+edi*8-0x39],ch
  423be6:	add    BYTE PTR [eax-0x1],dh
  423be9:	in     eax,0x0
  423beb:	xchg   edi,edi
  423bed:	add    cl,ah
  423bef:	enter  0xce89,0x89
  423bf3:	add    edi,edi
  423bf5:	push   ebx
  423bf6:	push   DWORD PTR [ebx-0x7d]
  423bf9:	xor    bh,bh
  423bfb:	mov    eax,ds:0x49002a00
  423c00:	add    BYTE PTR [ebp-0x7d],dh
  423c03:	test   BYTE PTR [ebx-0x16004f],al
  423c09:	sti    
  423c0a:	inc    DWORD PTR [edx+0x4f007dff]
  423c10:	add    BYTE PTR [edi+0x0],cl
  423c13:	(bad)  
  423c14:	dec    edi
  423c16:	dec    DWORD PTR [ebx+eax*4]
  423c19:	adc    cl,BYTE PTR [ecx-0x7cb8ff5c]
  423c1f:	das    
  423c20:	(bad)  
  423c21:	fdiv   st(7),st
  423c23:	(bad)  
  423c26:	mov    DWORD PTR [esi-0x7c00fb00],esp
  423c2c:	inc    DWORD PTR [edx+0x44ff3a00]
  423c32:	int3   
  423c33:	arpl   di,di
  423c35:	test   BYTE PTR [eax],al
  423c37:	pop    edx
  423c38:	dec    DWORD PTR [ebx]
  423c3a:	add    BYTE PTR [edx-0x17000600],ch
  423c40:	int3   
  423c41:	das    
  423c42:	(bad)  
  423c43:	cmp    edi,edi
  423c45:	mov    esp,0x83ff0200
  423c4a:	inc    DWORD PTR [ebx-0x1]
  423c4d:	mov    bl,0xff
  423c4f:	and    al,0xff
  423c51:	xor    bh,bh
  423c53:	inc    edi
  423c54:	add    bh,ah
  423c56:	int3   
  423c57:	mov    al,ds:0x1fff8ccc
  423c5c:	call   esi
  423c5e:	mov    DWORD PTR [ebp-0x1],eax
  423c61:	sub    cl,ah
  423c63:	dec    eax
  423c64:	(bad)  
  423c65:	call   0xdd424d6a
  423c6a:	push   esp
  423c6c:	and    DWORD PTR [ebp+0x0],0xffffffb6
  423c70:	jmp    edi
  423c72:	jmp    FWORD PTR [ecx-0x10000d00]
  423c78:	add    BYTE PTR ds:0xd083ce00,dl
  423c7e:	add    dh,dl
  423c80:	add    ch,al
  423c82:	add    cl,cl
  423c84:	add    BYTE PTR [esi+0x7cffdcff],bh
  423c8a:	(bad)  
  423c8b:	out    dx,eax
  423c8c:	call   FWORD PTR [edx-0x5c005400]
  423c92:	or     DWORD PTR [edx],0xffffffff
  423c95:	call   0xd600:0x4d830eff
  423c9c:	call   FWORD PTR [edx+0x29832089]
  423ca2:	dec    ebx
  423ca4:	int3   
  423ca5:	jnp    0x423ca6
  423ca7:	inc    edx
  423ca8:	dec    DWORD PTR [esi]
  423caa:	(bad)  
  423cab:	std    
  423cac:	mov    DWORD PTR [esi+0x0],edx
  423caf:	add    BYTE PTR [eax],al
  423cb1:	into   
  423cb2:	add    DWORD PTR [esp+ecx*8],0x0
  423cb6:	and    DWORD PTR [ecx+0x2600f200],0x0
  423cbd:	add    eax,DWORD PTR [eax]
  423cbf:	fild   DWORD PTR [eax]
  423cc1:	test   BYTE PTR [ecx+0x59ff77],0x15
  423cc8:	mov    DWORD PTR [edi-0x1],esi
  423ccb:	std    
  423ccc:	add    BYTE PTR [eax-0x1],al
  423ccf:	push   0xbcff1883
  423cd4:	add    BYTE PTR [ebx+0x12cc7700],bh
  423cda:	dec    ebp
  423cdc:	mov    DWORD PTR [ecx-0x5900c301],esi
  423ce2:	dec    DWORD PTR [ecx-0x7d]
  423ce5:	xchg   BYTE PTR [eax],al
  423ce7:	xchg   ebx,eax
  423ce8:	add    BYTE PTR [edi+0x3fff3e89],dh
  423cee:	inc    edx
  423cf0:	mov    DWORD PTR [ebx],esp
  423cf2:	int3   
  423cf3:	jecxz  0x423c7e
  423cf5:	dec    esi
  423cf6:	sbb    DWORD PTR [edx],0xffffffff
  423cf9:	push   ds
  423cfa:	sbb    DWORD PTR ds:0x3b004fff,0x0
  423d01:	add    DWORD PTR [eax],0x83a0ff2b
  423d07:	or     DWORD PTR ds:[eax],0xffffff83
  423d0b:	or     al,0xff
  423d0d:	jp     0x423d0e
  423d0f:	and    BYTE PTR [eax],al
  423d11:	jp     0x423d12
  423d13:	add    eax,0x58ff7300
  423d18:	call   DWORD PTR [edi+0x6a00f900]
  423d1e:	dec    DWORD PTR [edi+edi*8-0x7c7e7c22]
  423d25:	adc    DWORD PTR [eax],eax
  423d27:	pop    ss
  423d28:	call   FWORD PTR [esi+0x25832aff]
  423d2e:	add    ch,ah
  423d30:	int3   
  423d31:	jmp    0x1200:0x5d89bf00
  423d38:	sub    DWORD PTR [eax+0x2a0056ff],0xffffffff
  423d3f:	dec    ebx
  423d40:	inc    DWORD PTR ds:0xa6ff9900
  423d46:	add    DWORD PTR [eax+0x648394ff],0xffffffff
  423d4d:	and    al,0x89
  423d4f:	pop    esp
  423d50:	inc    DWORD PTR ds:0x2cff59ff
  423d56:	int3   
  423d57:	add    BYTE PTR fs:[edi-0x34],ah
  423d5b:	inc    esp
  423d5c:	add    BYTE PTR [edi-0x23ffc101],cl
  423d62:	add    BYTE PTR [eax-0x2b334500],ch
  423d68:	add    BYTE PTR [ecx-0x1],bh
  423d6b:	(bad)  
  423d6d:	ret    0xcbff
  423d70:	and    DWORD PTR [esi],0x0
  423d73:	xchg   edi,eax
  423d74:	add    BYTE PTR [ecx-0x6600a901],bl
  423d7a:	call   DWORD PTR [eax+0x41ff91ff]
  423d80:	jmp    DWORD PTR [ebx-0x46ff6001]
  423d86:	cmp    DWORD PTR [ecx-0x3766500],0xffffff83
  423d8d:	sbb    eax,0x8dff45ff
  423d92:	call   edx
  423d94:	call   DWORD PTR [edx-0x7d]
  423d97:	xchg   esp,eax
  423d98:	call   FWORD PTR [edx+0x6aff9aff]
  423d9e:	inc    DWORD PTR [ecx]
  423da0:	add    BYTE PTR [esi+0x0],al
  423da3:	mov    eax,0x5aff05cc
  423da8:	call   DWORD PTR [eax]
  423daa:	add    BYTE PTR [esi],al
  423dac:	call   DWORD PTR [esp+ecx*8-0x7c7dffb5]
  423db3:	dec    edi
  423db4:	int3   
  423db5:	(bad)  
  423db6:	int3   
  423db7:	adc    bh,bh
  423db9:	aam    0x0
  423dbb:	idiv   edi
  423dbd:	test   DWORD PTR [eax],0x77ff6f
  423dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dc4:	dec    ebx
  423dc6:	jmp    DWORD PTR [eax-0x1]
  423dc9:	push   cs
  423dca:	(bad)  
  423dcb:	(bad)  
  423dcc:	inc    DWORD PTR [edi-0x627c4a01]
  423dd2:	push   esp
  423dd4:	dec    DWORD PTR [edx-0x75008534]
  423dda:	add    BYTE PTR [edi-0x77],ch
  423ddd:	bound  eax,QWORD PTR [eax]
  423ddf:	xor    DWORD PTR [ebx-0xc900e1],eax
  423de5:	test   bh,bh
  423de7:	xor    cl,ah
  423de9:	int3   
  423dea:	int3   
  423deb:	int3   
  423dec:	int3   
  423ded:	int3   
  423dee:	int3   
  423def:	int3   
  423df0:	out    dx,al
  423df1:	(bad)  
  423df2:	add    BYTE PTR [eax],al
  423df4:	inc    DWORD PTR [esi+0xe630d6]
  423dfa:	add    BYTE PTR [edi+edi*8+0x3c948300],cl
  423e01:	(bad)  
  423e03:	mov    DWORD PTR [eax],eax
  423e05:	std    
  423e06:	in     eax,dx
  423e07:	scas   eax,DWORD PTR es:[edi]
  423e08:	rol    DWORD PTR [eax],0xff
  423e0b:	retf   0xff
  423e0e:	(bad)  
  423e0f:	mov    ebp,0xffffe537
  423e14:	inc    DWORD PTR [ebx-0x16]
  423e17:	test   BYTE PTR [esi-0x1],0x0
  423e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e1c:	add    bh,bh
  423e1e:	mov    DWORD PTR [eax+ecx*4+0x31],ebx
  423e22:	inc    DWORD PTR [ebx+0x35ef2489]
  423e28:	lock mov edi,edi
  423e2b:	cld    
  423e2c:	inc    DWORD PTR [ebx+0x3aad7ecc]
  423e32:	add    DWORD PTR [eax],0xffffffff
  423e35:	mov    bh,0x3c
  423e37:	add    ebp,esp
  423e39:	int3   
  423e3a:	add    BYTE PTR [eax],bh
  423e3c:	inc    DWORD PTR [eax]
  423e3e:	dec    DWORD PTR [ebp-0x1]
  423e41:	pop    esi
  423e42:	add    bh,bh
  423e44:	dec    DWORD PTR [ecx+0x10]
  423e47:	cmp    DWORD PTR [eax+0x0],eax
  423e4a:	call   DWORD PTR [eax+eax*1]
  423e4d:	(bad)  
  423e4e:	jmp    esp
  423e50:	fidiv  DWORD PTR [ebp+0x42ff8300]
  423e56:	ins    DWORD PTR es:[edi],dx
  423e57:	pop    ecx
  423e58:	xor    bh,bh
  423e5a:	inc    DWORD PTR [ebx-0x7d]
  423e5d:	add    BYTE PTR [ebx+0x8590c1],al
  423e63:	add    BYTE PTR [ecx-0x20c1309f],cl
  423e69:	add    bh,bh
  423e6b:	jge    0x423e6c
  423e6d:	add    BYTE PTR [ebx+0x63e042],al
  423e73:	inc    DWORD PTR [ebx+0x51334932]
  423e79:	(bad)  
  423e7a:	inc    DWORD PTR [eax+eax*1]
  423e7d:	inc    DWORD PTR [eax]
  423e7f:	jb     0x423e4a
  423e81:	inc    eax
  423e82:	cmp    edi,0xffffffff
  423e85:	test   BYTE PTR [edi+esi*4],al
  423e88:	inc    edi
  423e89:	dec    DWORD PTR [ecx+0xffff49]
  423e8f:	cmp    BYTE PTR [ecx+ecx*1+0x42000000],0x93
  423e97:	push   eax
  423e98:	or     eax,0xfdffff
  423e9d:	add    BYTE PTR [eax],al
  423e9f:	pop    es
  423ea0:	jno    0x423e4a
  423ea2:	inc    DWORD PTR [ebx+0x7d51f283]
  423ea8:	pop    es
  423ea9:	cmp    edi,0xffffffc1
  423eac:	add    bh,bh
  423eae:	call   DWORD PTR [ebp+edi*1-0x74]
  423eb2:	(bad)  
  423eb3:	(bad)  
  423eb4:	dec    edx
  423eb6:	aaa    
  423eb7:	fidiv  DWORD PTR [edi-0x1]
  423eba:	dec    DWORD PTR [edx+0x0]
  423ebd:	add    DWORD PTR [eax],0xffffffb7
  423ec0:	inc    esp
  423ec1:	repnz dec DWORD PTR [ecx+0x1f4e0bff]
  423ec8:	das    
  423ec9:	add    BYTE PTR [eax],al
  423ecb:	fld    DWORD PTR [eax]
  423ecd:	add    BYTE PTR [eax],al
  423ecf:	data16 icebp 
  423ed1:	cmp    bh,0x0
  423ed4:	add    BYTE PTR [eax],cl
  423ed6:	fxch   st(0)
  423ed8:	aaa    
  423ed9:	inc    DWORD PTR [ebx-0x330022]
  423edf:	fstp   QWORD PTR [esi+0xffffca]
  423ee5:	sbb    ebp,DWORD PTR [ebx]
  423ee7:	mov    WORD PTR [edx+0xa900ff],ss
  423eed:	add    BYTE PTR [ebx-0x1fc326],al
  423ef3:	(bad)  
  423ef4:	(bad)  
  423ef5:	jp     0x423f32
  423ef7:	mov    bh,0xb0
  423ef9:	add    BYTE PTR [ebx-0xffca],al
  423eff:	retf   0xd268
  423f02:	int3   
  423f03:	add    BYTE PTR [ecx-0x4380bbf6],cl
  423f09:	add    BYTE PTR [ebx+0x83ff76],al
  423f0f:	inc    esi
  423f10:	jbe    0x423efe
  423f12:	add    BYTE PTR [ebx-0x5fc9697d],al
  423f18:	push   edx
  423f19:	cmp    edi,0xfffffff7
  423f1c:	mov    edi,edi
  423f1e:	jmp    FWORD PTR [edi-0x38]
  423f21:	scas   eax,DWORD PTR es:[edi]
  423f22:	cmp    edi,0xffffff83
  423f25:	dec    BYTE PTR [edx+0xcc2b4c]
  423f2b:	mov    esp,0xb6898389
  423f30:	popf   
  423f31:	ds (bad) 
  423f33:	inc    DWORD PTR [eax]
  423f35:	mov    cl,0xd
  423f37:	push   ds
  423f38:	scas   al,BYTE PTR es:[edi]
  423f39:	(bad)  
  423f3a:	push   DWORD PTR [ecx]
  423f3c:	inc    DWORD PTR [eax]
  423f3e:	jmp    edi
  423f40:	repz cmp BYTE PTR [ebx+0x7f41ccff],al
  423f47:	xor    BYTE PTR [eax-0x9ff01],bh
  423f4d:	add    bh,bh
  423f4f:	pop    edi
  423f50:	loopne 0x423ef7
  423f52:	or     esp,0xffffffff
  423f55:	adc    dl,BYTE PTR [ebx+eiz*1-0x44ffff98]
  423f5c:	add    BYTE PTR [ebx+0x6cdd7883],al
  423f62:	cmp    edi,0xffffffff
  423f65:	mov    al,ds:0xff8aba4c
  423f6a:	and    DWORD PTR [edx+0x0],0x0
  423f6e:	push   DWORD PTR [ecx+edx*1+0x5]
  423f72:	add    ah,cl
  423f74:	sbb    DWORD PTR [ebx+eiz*1],0x4f
  423f78:	arpl   di,di
  423f7a:	jmp    DWORD PTR [ebx+0x6cccff00]
  423f80:	gs aam 0xff
  423f83:	inc    DWORD PTR [ebx-0x708fa002]
  423f89:	cmp    edi,0xffffffc3
  423f8c:	dec    DWORD PTR [ecx+0x39e6eeff]
  423f92:	mov    DWORD PTR [ebx+0xdc3d1ff],eax
  423f98:	sti    
  423f99:	mov    esp,ecx
  423f9b:	inc    ebp
  423f9c:	(bad)  
  423f9d:	dec    DWORD PTR [ecx+0x5e71d2]
  423fa3:	inc    DWORD PTR [eax]
  423fa5:	cmc    
  423fa6:	ins    DWORD PTR es:[edi],dx
  423fa7:	fisttp DWORD PTR [edx]
  423fa9:	int3   
  423faa:	dec    edx
  423fac:	add    bh,bh
  423fae:	add    BYTE PTR [eax+ebx*1-0x3f],dh
  423fb2:	add    BYTE PTR [ecx+0x5e4c31ff],cl
  423fb8:	jbe    0x423f3d
  423fba:	add    BYTE PTR [ebx+0x0],dh
  423fbd:	int3   
  423fbe:	add    BYTE PTR [ebx-0x33000c54],bl
  423fc4:	mov    DWORD PTR [eax+0x5],esp
  423fc7:	or     al,0x41
  423fc9:	(bad)  
  423fca:	(bad)  
  423fcb:	jnp    0x423f50
  423fcd:	(bad)  
  423fce:	inc    DWORD PTR [eax-0x19]
  423fd1:	mov    dl,0x0
  423fd3:	add    BYTE PTR [eax],al
  423fd5:	jl     0x424019
  423fd7:	mov    dl,0x46
  423fd9:	add    bh,bh
  423fdb:	inc    ebx
  423fdc:	add    ah,cl
  423fde:	jmp    ebx
  423fe0:	xchg   ebp,eax
  423fe1:	mov    al,ds:0xf700ffff
  423fe6:	hlt    
  423fe7:	and    BYTE PTR [eax+eax*1],ch
  423fea:	add    ch,dl
  423fec:	dec    esp
  423fee:	inc    DWORD PTR [edi+0xff73a8]
  423ff4:	int3   
  423ff5:	or     al,0xaf
  423ff7:	imul   edi,esp,0xffd90000
  423ffd:	inc    DWORD PTR [ebx-0x33e2146f]
  424003:	dec    esp
  424005:	enter  0x9a99,0x33
  424009:	dec    esp
  42400b:	fld    DWORD PTR [eax]
  42400d:	inc    DWORD PTR [eax]
  42400f:	and    edx,DWORD PTR [ebx]
  424011:	stc    
  424012:	add    BYTE PTR [eax],al
  424014:	mov    esi,ecx
  424016:	lahf   
  424017:	lahf   
  424018:	inc    DWORD PTR gs:[eax]
  42401b:	mov    dl,0xff
  42401d:	add    BYTE PTR [eax],al
  42401f:	cli    
  424020:	push   edi
  424021:	inc    DWORD PTR fs:[eax]
  424024:	(bad)  
  424025:	fld    QWORD PTR [edx+0xffe118]
  42402b:	mov    eax,0x5b0000cc
  424030:	push   0x43
  424032:	add    BYTE PTR [ecx-0x6234a17d],cl
  424038:	(bad)  
  424039:	int3   
  42403a:	push   DWORD PTR [ebx-0x1]
  42403d:	add    DWORD PTR [ebx-0x33bf23f3],0x0
  424044:	(bad)  
  424045:	cli    
  424046:	inc    eax
  424047:	int    0xef
  424049:	dec    esp
  42404b:	sub    bh,bh
  42404d:	inc    DWORD PTR [ebx+0x1238d2]
  424053:	(bad)  
  424054:	push   DWORD PTR [esi+ecx*2+0xff031d]
  42405b:	ja     0x42405c
  42405d:	(bad)  
  42405e:	dec    DWORD PTR [esi+edx*1-0x1d]
  424065:	imul   ecx,DWORD PTR [esi],0x89009178
  42406b:	push   edx
  42406c:	add    bh,bh
  42406e:	jmp    DWORD PTR [edi]
  424070:	jle    0x42408d
  424072:	add    bh,bh
  424074:	(bad)  
  424075:	jp     0x42406c
  424077:	js     0x4240d5
  424079:	inc    DWORD PTR [eax]
  42407b:	jge    0x424006
  42407d:	(bad)  
  42407e:	call   DWORD PTR [edi+0x39]
  424081:	ins    BYTE PTR es:[edi],dx
  424082:	add    BYTE PTR [eax],al
  424084:	add    dl,cl
  424086:	in     eax,dx
  424087:	in     eax,0xd3
  424089:	add    BYTE PTR [eax],al
  42408b:	(bad)  
  42408d:	(bad)  
  42408e:	(bad)  
  42408f:	cmp    eax,0xff005722
  424094:	add    DWORD PTR [esi-0x65],0x5c
  424098:	dec    eax
  424099:	add    bh,bh
  42409b:	jne    0x42409d
  42409d:	or     DWORD PTR [ecx-0x9bb4d0],0xffffffff
  4240a4:	call   DWORD PTR [edx]
  4240a6:	inc    edx
  4240a7:	dec    edx
  4240a8:	xor    al,0xff
  4240aa:	inc    DWORD PTR [edi-0x77]
  4240ad:	(bad)  
  4240ae:	dec    DWORD PTR [ebx-0x34]
  4240b1:	pop    ebp
  4240b2:	(bad)  
  4240b3:	dec    esp
  4240b5:	pop    ss
  4240b6:	sub    BYTE PTR [eax+eax*8],0xcc
  4240ba:	inc    DWORD PTR ds:0xc3ffff83
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	or     DWORD PTR [ecx+0x48618300],0xfffffffa
  4240c8:	and    eax,0xff21cc89
  4240cd:	add    BYTE PTR [eax],al
  4240cf:	cdq    
  4240d0:	and    DWORD PTR [edi],ebx
  4240d2:	int3   
  4240d3:	int3   
  4240d4:	xor    DWORD PTR [edi+0x30],0xffffffc8
  4240d8:	add    ecx,esp
  4240da:	dec    ebp
  4240dc:	int3   
  4240dd:	add    bh,bh
  4240df:	lock pop edi
  4240e1:	ins    DWORD PTR es:[edi],dx
  4240e2:	add    BYTE PTR [eax],al
  4240e4:	jmp    FWORD PTR [eax+0x3747f4]
  4240ea:	jmp    FWORD PTR [ecx-0x4a00ff01]
  4240f0:	mov    esp,0x838920
  4240f5:	or     ecx,DWORD PTR [edi]
  4240f7:	and    BYTE PTR [eax+eax*1],cl
  4240fa:	dec    DWORD PTR [esi-0x5e763377]
  424100:	jge    0x424159
  424102:	add    BYTE PTR [eax],al
  424104:	(bad)  
  424105:	fdivr  DWORD PTR [ebx]
  424107:	icebp  
  424108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424109:	int3   
  42410a:	call   FWORD PTR [ebx-0x7d]
  42410d:	inc    DWORD PTR [eax]
  42410f:	jbe    0x4240fa
  424111:	loop   0x4240df
  424113:	inc    DWORD PTR [eax]
  424115:	ja     0x42409a
  424117:	dec    esi
  424118:	xor    BYTE PTR [eax],al
  42411a:	(bad)  
  42411b:	(bad)  
  42411d:	add    BYTE PTR [ecx+0x608838],cl
  424123:	dec    DWORD PTR [ecx-0x5ee6ec36]
  424129:	dec    esp
  42412b:	jno    0x4240b0
  42412d:	mov    DWORD PTR [ebx+0xfc3363],eax
  424133:	add    BYTE PTR [eax],al
  424135:	or     al,0xc4
  424137:	mov    BYTE PTR ds:0xcc77cc83,dl
  42413d:	(bad)  
  42413e:	dec    DWORD PTR [edx-0x63]
  424141:	pop    ds
  424142:	add    bh,bh
  424144:	jmp    FWORD PTR [esi+0x73]
  424147:	xlat   BYTE PTR ds:[ebx]
  424148:	(bad)  
  424149:	inc    DWORD PTR [eax]
  42414b:	and    bh,bh
  42414d:	dec    DWORD PTR [ecx-0xe27e2a]
  424153:	add    BYTE PTR [eax],al
  424155:	cwde   
  424156:	pop    eax
  424157:	test   eax,0xcfff005e
  42415c:	inc    DWORD PTR [eax]
  42415e:	add    BYTE PTR [esi-0x311d],al
  424164:	jmp    DWORD PTR [edi]
  424166:	out    dx,al
  424167:	test   al,0x28
  424169:	(bad)  
  42416a:	jmp    FWORD PTR [ebp+0x0]
  42416d:	(bad)  
  42416e:	jmp    DWORD PTR [edx-0x4b53]
  424174:	call   FWORD PTR [esi-0xd00aaf]
  42417a:	push   DWORD PTR [edx+0x6a83ffff]
  424180:	push   eax
  424181:	cmp    bh,bh
  424183:	dec    esp
  424185:	and    DWORD PTR [ecx-0x33006740],ecx
  42418b:	push   ecx
  42418c:	int3   
  42418d:	(bad)  
  42418e:	jmp    DWORD PTR [edi+0xffd7cb]
  424194:	cmp    DWORD PTR [edx],0xe
  424197:	inc    esp
  424198:	in     eax,0x83
  42419a:	dec    eax
  42419c:	(bad)  
  42419d:	dec    DWORD PTR [ecx-0x334780e5]
  4241a3:	add    DWORD PTR [eax],0x24
  4241a6:	xchg   DWORD PTR [ebx-0x1b],ebp
  4241a9:	inc    DWORD PTR [eax]
  4241ab:	or     DWORD PTR [ecx-0x6cb40001],0xfff0
  4241b5:	xchg   esi,eax
  4241b6:	dec    ebx
  4241b7:	xchg   DWORD PTR [ecx+0x5800ff],esi
  4241bd:	inc    DWORD PTR [eax]
  4241bf:	lahf   
  4241c0:	cmp    al,BYTE PTR [edi+0x0]
  4241c3:	add    BYTE PTR [ecx-0x27150b69],cl
  4241c9:	dec    DWORD PTR [ecx-0xff0062]
  4241cf:	retf   
  4241d0:	xor    al,0x47
  4241d2:	(bad)  
  4241d3:	inc    DWORD PTR [eax]
  4241d5:	add    al,0x89
  4241d7:	add    ecx,DWORD PTR [edi-0x1]
  4241da:	push   DWORD PTR [ebx+eax*4+0x41c3ffff]
  4241e1:	pop    esi
  4241e2:	mov    edi,edi
  4241e4:	int3   
  4241e5:	xlat   BYTE PTR ds:[ebx]
  4241e6:	das    
  4241e7:	ret    0xff2c
  4241ea:	add    DWORD PTR [esi+0x2cffff00],0x26
  4241f1:	pop    edi
  4241f2:	dec    DWORD PTR [ecx+0x4cc34800]
  4241f8:	ud0    edi,edi
  4241fb:	call   0xc052:0x410000ff
  424202:	(bad)  
  424203:	inc    DWORD PTR [ebx+0x7950b33b]
  424209:	(bad)  
  42420a:	(bad)  
  42420b:	cmp    DWORD PTR [ecx+0x281600cc],ecx
  424211:	jecxz  0x424212
  424213:	(bad)  
  424214:	(bad)  
  424215:	call   0x3630f4
  42421a:	add    dh,dl
  42421c:	(bad)  
  42421d:	inc    DWORD PTR [ebx-0x2a96aa]
  424223:	inc    DWORD PTR [eax]
  424225:	popf   
  424226:	sbb    eax,0xff83da02
  42422b:	or     bh,bh
  42422d:	mov    edi,edi
  42422f:	mov    ds:0xff835895,al
  424234:	call   DWORD PTR [edi-0x7688a3d4]
  42423a:	add    BYTE PTR [ecx],ch
  42423c:	(bad)  
  42423d:	inc    DWORD PTR [eax]
  42423f:	jmp    0x3a00:0xff00c49b
  424246:	push   ecx
  424247:	loope  0x424220
  424249:	add    BYTE PTR [ebx-0x7683],al
  42424f:	ret    0xf0cd
  424252:	(bad)  
  424253:	inc    DWORD PTR [eax]
  424255:	sbb    al,0x73
  424257:	or     DWORD PTR [edi+0x79ffcc],edx
  42425d:	add    BYTE PTR [eax],al
  42425f:	mov    bl,0xa6
  424261:	sar    edi,cl
  424263:	inc    DWORD PTR [ebx-0x57b88738]
  424269:	add    BYTE PTR [eax],al
  42426b:	mov    eax,ds:0xc4ff0000
  424270:	in     eax,dx
  424271:	in     al,dx
  424272:	(bad)  
  424273:	(bad)  
  424274:	jmp    DWORD PTR [ebp+0xa7ebd1]
  42427a:	int3   
  42427b:	fild   DWORD PTR [ebx+0x52ce89ff]
  424281:	mov    ds:0x8f89ccff,eax
  424286:	in     eax,dx
  424287:	ss mov DWORD PTR es:[eax],eax
  42428b:	call   0x1c41c619
  424290:	xchg   ebx,eax
  424291:	sldt   WORD PTR [eax]
  424294:	inc    ebx
  424296:	addr16 (bad) 
  424299:	int3   
  42429a:	jmp    FWORD PTR [eax]
  42429c:	inc    DWORD PTR [eax]
  42429e:	add    BYTE PTR [eax-0x3075],dh
  4242a4:	add    ch,al
  4242a6:	ss inc esi
  4242a8:	rol    BYTE PTR [ebx-0xff7f01],0xff
  4242af:	outs   dx,DWORD PTR ds:[esi]
  4242b0:	pop    esp
  4242b1:	int3   
  4242b2:	inc    DWORD PTR [ebx+0x7b64b800]
  4242b8:	cmp    bh,0x89
  4242bb:	sti    
  4242bc:	inc    DWORD PTR [eax]
  4242be:	add    BYTE PTR [edi-0x33ffc2e5],ah
  4242c4:	mov    DWORD PTR [ecx],edx
  4242c6:	retf   0xa446
  4242c9:	int3   
  4242ca:	(bad)  
  4242cb:	jnp    0x4242cc
  4242cd:	mov    DWORD PTR [ebx+0x4ec5e5],eax
  4242d3:	(bad)  
  4242d4:	push   DWORD PTR [eax]
  4242d6:	mov    ebx,0xff57e2
  4242db:	inc    BYTE PTR [eax]
  4242dd:	add    BYTE PTR [eax],al
  4242df:	pusha  
  4242e0:	jecxz  0x424335
  4242e2:	add    BYTE PTR [eax],al
  4242e4:	dec    DWORD PTR [ebx+eiz*4-0x7caee6]
  4242eb:	pusha  
  4242ec:	mov    edi,edi
  4242ee:	int3   
  4242ef:	out    dx,eax
  4242f0:	and    ah,al
  4242f2:	inc    DWORD PTR [ebx+0x5035deff]
  4242f8:	popa   
  4242f9:	(bad)  
  4242fa:	inc    DWORD PTR [edx-0x1]
  4242fd:	dec    DWORD PTR [ecx-0x7caedff6]
  424303:	(bad)  
  424304:	dec    DWORD PTR [edx-0x7b]
  424307:	jbe    0x42434e
  424309:	(bad)  
  42430a:	(bad)  
  42430b:	cmp    eax,0x9ff83ff
  424310:	sub    ah,BYTE PTR [esi]
  424312:	(bad)  
  424313:	inc    DWORD PTR [ebx+0x1bcdc122]
  424319:	(bad)  
  42431a:	call   FWORD PTR [edx-0x17337c01]
  424320:	xchg   ecx,eax
  424321:	jo     0x424322
  424323:	cmp    edi,0x2
  424326:	cmc    
  424327:	(bad)  
  424328:	dec    esi
  424329:	cmp    edi,0xfffffff8
  42432c:	add    DWORD PTR [eax],0xffffffff
  42432f:	fbld   TBYTE PTR [ecx+eax*8]
  424332:	int3   
  424333:	cmp    edi,0xffffffb5
  424336:	and    al,0x2c
  424338:	in     eax,0xff
  42433a:	add    BYTE PTR [esi+0x568300ff],bh
  424340:	xor    BYTE PTR [esi],bl
  424342:	add    bh,bh
  424344:	inc    ebx
  424346:	mov    esi,0xff8ffa
  42434b:	aad    0xff
  42434d:	mov    DWORD PTR [ecx-0x3c51be],ecx
  424353:	int3   
  424354:	call   DWORD PTR [ecx+0x233e3f]
  42435a:	add    al,dl
  42435c:	dec    esp
  42435e:	mov    DWORD PTR [edx],edx
  424360:	cli    
  424361:	(bad)  
  424362:	inc    DWORD PTR [ebx-0x1e34cd01]
  424368:	jno    0x42436a
  42436a:	call   FWORD PTR [edx]
  42436c:	(bad)  
  42436d:	inc    DWORD PTR [eax]
  42436f:	dec    di
  424371:	icebp  
  424372:	cmp    edi,0xffffffff
  424375:	in     al,0x72
  424377:	es inc edi
  424379:	add    bh,bh
  42437b:	sub    BYTE PTR [eax],al
  42437d:	inc    DWORD PTR [eax]
  42437f:	shl    esi,1
  424381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424382:	cmp    edi,0x0
  424385:	js     0x424391
  424387:	enter  0x83a5,0x0
  42438b:	jl     0x42438d
  42438d:	(bad)  
  42438e:	inc    DWORD PTR [ecx-0x76ffa6ba]
  424394:	int3   
  424395:	push   cs
  424396:	lea    esi,[eax]
  424398:	mov    BYTE PTR [eax],al
  42439a:	add    BYTE PTR [ecx],ch
  42439c:	inc    DWORD PTR [eax]
  42439e:	push   DWORD PTR [edi]
  4243a0:	clc    
  4243a1:	pop    edx
  4243a2:	(bad)  
  4243a3:	(bad)  
  4243a4:	call   DWORD PTR [ebx-0x79]
  4243a7:	cwde   
  4243a8:	xor    eax,0xfff500cc
  4243ad:	dec    DWORD PTR [ecx-0x7c7d41d0]
  4243b3:	add    BYTE PTR [eax],al
  4243b5:	add    eax,0x9dad15
  4243ba:	add    BYTE PTR [eax-0x39000000],dl
  4243c0:	lahf   
  4243c1:	lahf   
  4243c2:	inc    DWORD PTR [eax]
  4243c4:	push   DWORD PTR [ebp+ebx*8-0xdb1b]
  4243cb:	inc    edx
  4243cc:	mov    esp,ecx
  4243ce:	add    bl,ch
  4243d0:	adc    eax,0xff0031
  4243d5:	and    al,0xf1
  4243d7:	call   0x8300:0x99ffff6c
  4243de:	mov    esp,eax
  4243e0:	(bad)  
  4243e1:	or     esp,ecx
  4243e3:	(bad)  
  4243e4:	inc    ecx
  4243e6:	js     0x4243e8
  4243e8:	cmp    bh,bh
  4243ea:	int3   
  4243eb:	leave  
  4243ec:	add    DWORD PTR [ebx-0x577c3600],0xffffff83
  4243f3:	add    BYTE PTR [ebx+0x53241531],al
  4243f9:	add    bh,bh
  4243fb:	push   cs
  4243fc:	dec    esp
  4243fe:	or     DWORD PTR [edi+0xb],0xffffff81
  424402:	inc    DWORD PTR [ebx-0x24cd4a00]
  424408:	add    eax,0xff2cffff
  42440d:	add    bh,bh
  42440f:	fsub   DWORD PTR ds:0xffff008c
  424415:	xchg   ebp,eax
  424416:	dec    ebp
  424417:	adc    ah,BYTE PTR [eax+eax*1]
  42441a:	add    ah,dh
  42441c:	mov    edi,edi
  42441e:	int3   
  42441f:	shr    DWORD PTR [ebx],cl
  424421:	js     0x424423
  424423:	add    DWORD PTR [eax],0xffffffcc
  424426:	es cmp ch,0x0
  42442a:	or     DWORD PTR [edi],0xffffffff
  42442d:	add    bh,bh
  42442f:	scas   eax,DWORD PTR es:[edi]
  424430:	imul   edi,DWORD PTR [edi],0xffffffff
  424433:	inc    DWORD PTR [ebx+0x2c0243a8]
  424439:	inc    DWORD PTR [ebx+0xffffce]
  42443f:	repnz scas eax,DWORD PTR es:[edi]
  424441:	(bad)  
  424442:	(bad)  
  424443:	(bad)  
  424444:	(bad)  
  424445:	jl     0x42440f
  424447:	retf   0x50
  42444a:	jmp    FWORD PTR [edx-0x677c0001]
  424450:	pusha  
  424451:	push   0xc1ff8900
  424456:	jg     0x424407
  424458:	out    dx,al
  424459:	add    bh,bh
  42445b:	mov    al,ds:0xd1ffffff
  424460:	push   DWORD PTR [ecx]
  424462:	int3   
  424463:	add    DWORD PTR [ebx-0x463138f4],0xffffffff
  42446a:	mov    DWORD PTR [eax-0x5eff3301],ebx
  424470:	or     al,0x7d
  424472:	inc    DWORD PTR [ebx+0x2308fcff]
  424478:	jecxz  0x424479
  42447a:	add    BYTE PTR [ebp-0x1],dh
  42447d:	(bad)  
  42447e:	call   DWORD PTR [edi+0x89ba92]
  424484:	jmp    DWORD PTR [edi]
  424486:	shr    ebp,cl
  424488:	cmp    bh,bh
  42448a:	jmp    DWORD PTR [ebx]
  42448c:	add    bh,bh
  42448e:	sub    DWORD PTR [esi-0x70],0xd
  424492:	add    DWORD PTR [eax],0xffffff89
  424495:	fld    DWORD PTR [edx+0xf]
  424498:	es (bad) 
  42449a:	push   DWORD PTR [edx-0x65000100]
  4244a0:	cli    
  4244a1:	(bad)  
  4244a2:	int3   
  4244a3:	dec    DWORD PTR [ecx-0x2ecd97e5]
  4244a9:	inc    DWORD PTR [eax]
  4244ab:	ret    
  4244ac:	inc    DWORD PTR [ebx+0x3613bbff]
  4244b2:	add    BYTE PTR [eax],al
  4244b4:	add    BYTE PTR [ebx-0x7b],al
  4244b7:	and    ah,BYTE PTR [edi+edi*8]
  4244ba:	push   DWORD PTR [esi-0x1]
  4244bd:	inc    DWORD PTR [eax]
  4244bf:	jbe    0x42450b
  4244c1:	ins    BYTE PTR es:[edi],dx
  4244c2:	int3   
  4244c3:	add    BYTE PTR [eax],al
  4244c5:	cs je  0x4244a2
  4244c8:	(bad)  
  4244c9:	(bad)  
  4244ca:	(bad)  
  4244cb:	cld    
  4244cc:	mov    edi,edi
  4244ce:	push   DWORD PTR [ebx-0x7ccd29]
  4244d4:	add    BYTE PTR [ebp+eax*1+0x48],al
  4244d8:	push   edx
  4244d9:	add    ah,cl
  4244db:	fwait
  4244dc:	add    BYTE PTR [ebx+0x4a6041ff],al
  4244e2:	int3   
  4244e3:	add    ah,cl
  4244e5:	aam    0x15
  4244e7:	shr    ebp,cl
  4244e9:	(bad)  
  4244ea:	call   FWORD PTR [edi-0x1]
  4244ed:	inc    DWORD PTR [eax]
  4244ef:	scas   al,BYTE PTR es:[edi]
  4244f0:	(bad)  
  4244f1:	cmc    
  4244f2:	cmp    edi,0xffffff83
  4244f5:	stos   DWORD PTR es:[edi],eax
  4244f6:	lods   eax,DWORD PTR ds:[esi]
  4244f7:	ror    BYTE PTR [eax],1
  4244f9:	(bad)  
  4244fa:	(bad)  
  4244fb:	mov    esp,0xd8ffff83
  424500:	dec    esi
  424501:	clc    
  424502:	add    bh,bh
  424504:	and    DWORD PTR [edi+eax*2+0xff7fa0],0x72
  42450c:	(bad)  
  42450d:	(bad)  
  42450e:	call   FWORD PTR [esi]
  424510:	rol    BYTE PTR [ebx-0x1d000100],cl
  424516:	xchg   edx,eax
  424517:	dec    esp
  424518:	jmp    0x42451a
  42451a:	add    BYTE PTR [esi-0xd000100],al
  424520:	gs jl  0x424522
  424523:	(bad)  
  424524:	dec    DWORD PTR [ecx-0x22]
  424527:	daa    
  424528:	push   edx
  424529:	add    DWORD PTR [eax],0xffffff81
  42452c:	inc    DWORD PTR [eax]
  42452e:	call   FWORD PTR [edx*1-0x7cff00c9]
  424535:	sbb    eax,0xcc0062a4
  42453b:	sbb    eax,DWORD PTR [eax]
  42453d:	add    bh,bh
  42453f:	fisttp QWORD PTR [eax]
  424541:	push   ebp
  424542:	mov    esp,ecx
  424544:	push   DWORD PTR [ebx-0x76042eb6]
  42454a:	add    BYTE PTR [edi-0x34],cl
  42454d:	(bad)  
  42454e:	jmp    FWORD PTR [edx+ebp*2]
  424551:	jmp    0x4244d6
  424553:	(bad)  
  424554:	jmp    DWORD PTR [ecx-0x5b]
  424557:	sub    esi,edx
  424559:	int3   
  42455a:	call   FWORD PTR [ebx]
  42455c:	add    BYTE PTR [ebx+0x55f27489],al
  424562:	add    bh,bh
  424564:	jmp    FWORD PTR [esi]
  424566:	pop    eax
  424567:	mov    WORD PTR cs:[eax],es
  42456a:	call   DWORD PTR [ebp-0x3aff0100]
  424570:	fmul   DWORD PTR [ebp+0x0]
  424573:	(bad)  
  424574:	jmp    DWORD PTR [edi-0xf2e689]
  42457a:	add    BYTE PTR [ecx-0x1],ch
  42457d:	add    BYTE PTR [ebx-0x4cef86],al
  424583:	(bad)  
  424584:	(bad)  
  424585:	jns    0x424513
  424587:	inc    esi
  424588:	mov    eax,ds:0x833fff00
  42458d:	inc    DWORD PTR [eax]
  42458f:	or     esp,DWORD PTR [edi]
  424591:	fadd   DWORD PTR [ebx-0x419d7c34]
  424597:	(bad)  
  424598:	sbb    BYTE PTR [eax],al
  42459a:	add    BYTE PTR [edx-0x1],dl
  42459d:	add    BYTE PTR [ebx-0x5fa581],al
  4245a3:	add    BYTE PTR [ebx-0x7f35bd6],al
  4245a9:	or     DWORD PTR [ecx-0xff31],0x5
  4245b0:	sar    dh,cl
  4245b2:	(bad)  
  4245b3:	dec    DWORD PTR [ecx+0x13dfa7d7]
  4245b9:	dec    DWORD PTR [ecx-0x7cff3383]
  4245bf:	pop    ebx
  4245c0:	test   edx,esi
  4245c2:	(bad)  
  4245c3:	inc    DWORD PTR [eax]
  4245c5:	stc    
  4245c6:	js     0x42456c
  4245c8:	xchg   edi,eax
  4245c9:	cmp    edi,0xffffffba
  4245cc:	add    BYTE PTR [eax],al
  4245ce:	mov    DWORD PTR [ebx-0xffea36],edi
  4245d4:	dec    DWORD PTR [edi-0x6f]
  4245d7:	and    al,0x29
  4245d9:	mov    edi,edi
  4245db:	cmc    
  4245dc:	add    BYTE PTR [eax],al
  4245de:	call   DWORD PTR [ebx]
  4245e0:	xor    eax,0xffff8399
  4245e5:	or     eax,0xffe5c532
  4245ea:	call   DWORD PTR [eax+eax*1]
  4245ed:	inc    DWORD PTR [eax]
  4245ef:	mov    ah,0xb6
  4245f1:	add    al,0x83
  4245f3:	add    BYTE PTR [eax],al
  4245f5:	jmp    0x83c44f44
  4245fa:	(bad)  
  4245fb:	jmp    0x8944:0x8ffff83
  424602:	add    BYTE PTR [eax],al
  424604:	int3   
  424605:	pop    eax
  424606:	int3   
  424607:	adc    al,BYTE PTR [ebp-0xb10034]
  42460d:	add    bh,bh
  42460f:	scas   eax,DWORD PTR es:[edi]
  424610:	imul   BYTE PTR [edi+0x0]
  424613:	add    BYTE PTR [ecx-0x5580bb75],cl
  424619:	(bad)  
  42461a:	inc    edi
  42461c:	inc    DWORD PTR [eax]
  42461e:	int3   
  42461f:	out    dx,al
  424620:	add    BYTE PTR [ebp-0x57ff0001],cl
  424626:	aaa    
  424627:	ins    DWORD PTR es:[edi],dx
  424628:	mov    edx,0xff14ff00
  42462d:	add    BYTE PTR [eax],al
  42462f:	ret    
  424630:	mov    ds,WORD PTR [ecx+0x0]
  424633:	add    bh,bh
  424635:	inc    edx
  424636:	xlat   BYTE PTR ds:[ebx]
  424637:	sbb    bh,BYTE PTR [esi-0x7650007d]
  42463d:	add    ah,cl
  42463f:	jp     0x42464f
  424641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424642:	inc    DWORD PTR [eax]
  424644:	push   ecx
  424646:	push   ecx
  424647:	cmp    DWORD PTR [edx-0x1],esi
  42464a:	push   DWORD PTR [edx-0x34]
  42464d:	add    bh,bh
  42464f:	imul   ebp,DWORD PTR [ecx-0x1],0xa9ffffff
  424656:	retf   0x10
  424659:	add    bh,bh
  42465b:	rol    BYTE PTR [eax],cl
  42465d:	mov    DWORD PTR [eax],eax
  42465f:	inc    esp
  424660:	adc    eax,0x83ffff62
  424665:	xchg   ebp,eax
  424666:	lahf   
  424667:	dec    edx
  424668:	pop    eax
  424669:	add    bh,bh
  42466b:	push   0x0
  42466d:	inc    DWORD PTR [eax]
  42466f:	enter  0x65d6,0x0
  424673:	inc    DWORD PTR [eax]
  424675:	popf   
  424676:	pop    edi
  424677:	loopne 0x4246da
  424679:	add    ah,cl
  42467b:	ret    0x83ff
  42467e:	mov    DWORD PTR [ecx],ebp
  424680:	or     al,0x9b
  424682:	inc    DWORD PTR [ebx-0x54ef6a7d]
  424688:	cmp    bh,0x0
  42468b:	dec    ebx
  42468c:	add    bh,bh
  42468e:	inc    DWORD PTR [eax+0x19]
  424691:	push   edi
  424692:	add    DWORD PTR [eax],0x0
  424695:	in     eax,0x93
  424697:	pop    ebp
  424698:	inc    ebx
  424699:	or     esp,0xffffff98
  42469c:	add    BYTE PTR [ebx-0x639e6e01],al
  4246a2:	add    bh,bh
  4246a4:	add    BYTE PTR [ebx-0x3c9d8c],bh
  4246aa:	inc    DWORD PTR [ebp+0x41ff00ff]
  4246b0:	arpl   WORD PTR [esi-0x1],bp
  4246b3:	inc    DWORD PTR [ebx-0x7b4ea0d]
  4246b9:	add    BYTE PTR [ebx-0x337cff25],al
  4246bf:	(bad)  
  4246c1:	pop    ebx
  4246c2:	inc    DWORD PTR [eax]
  4246c4:	int3   
  4246c5:	and    eax,0xff7f94be
  4246ca:	add    bl,ah
  4246cc:	add    DWORD PTR [eax],0xffffffff
  4246cf:	dec    edi
  4246d0:	jmp    DWORD PTR [ebx-0x1]
  4246d3:	(bad)  
  4246d4:	(bad)  
  4246d5:	inc    ah
  4246d7:	fwait
  4246d8:	call   0xff83:0x895d8983
  4246df:	push   ds
  4246e0:	lods   al,BYTE PTR ds:[esi]
  4246e1:	mov    bl,0x0
  4246e3:	inc    DWORD PTR [ebx-0x35878f41]
  4246e9:	(bad)  
  4246ea:	inc    DWORD PTR [edi]
  4246ec:	add    BYTE PTR [eax],al
  4246ee:	mov    DWORD PTR [esp+ebp*8+0x13],edi
  4246f2:	mov    esp,ecx
  4246f4:	mov    DWORD PTR [esi+0x20061],ebx
  4246fa:	add    bl,bh
  4246fc:	add    DWORD PTR [eax],0xffffffcc
  4246ff:	daa    
  424700:	aaa    
  424701:	dec    ebx
  424702:	add    DWORD PTR [eax],0x0
  424705:	dec    edi
  424706:	imul   BYTE PTR [ebp+eax*1-0x9e0100]
  42470d:	dec    esp
  42470f:	jl     0x424758
  424711:	and    edi,edi
  424713:	(bad)  
  424714:	call   esi
  424716:	fnsave [esi+0xeff0094]
  42471c:	inc    DWORD PTR [eax]
  42471e:	add    cl,ah
  424720:	xor    BYTE PTR [ebp+0x0],cl
  424723:	inc    DWORD PTR [ebx+0x60840ae1]
  424729:	int3   
  42472a:	add    BYTE PTR [edi-0x34],dl
  42472d:	mov    edi,edi
  42472f:	jo     0x424738
  424731:	scas   eax,DWORD PTR es:[edi]
  424732:	add    BYTE PTR [eax],al
  424734:	jmp    FWORD PTR [edx-0x9feee5]
  42473a:	dec    DWORD PTR [ecx+0x2183ffff]
  424740:	ins    DWORD PTR es:[edi],dx
  424741:	icebp  
  424742:	add    DWORD PTR [eax],0xffffffff
  424745:	push   cs
  424746:	aaa    
  424747:	xchg   ebp,eax
  424748:	les    eax,FWORD PTR [eax]
  42474a:	call   eax
  42474c:	cmp    edi,0x0
  42474f:	xchg   ebx,eax
  424750:	pop    ebp
  424751:	sbb    DWORD PTR [eax],eax
  424753:	(bad)  
  424754:	jmp    FWORD PTR [edi]
  424756:	bound  edi,QWORD PTR [esi+edx*8]
  424759:	add    ah,cl
  42475b:	(bad)  
  42475c:	add    DWORD PTR [eax],0x0
  42475f:	mov    eax,ds:0xff7e85
  424764:	add    bh,ah
  424766:	mov    ds:0xff899cc6,al
  42476b:	ret    0x0
  42476e:	jmp    DWORD PTR ds:0x83d0f0
  424774:	and    DWORD PTR [eax+ebx*4],0xffffffe8
  424778:	mov    bl,0xcc
  42477a:	add    bh,ch
  42477c:	inc    DWORD PTR [eax]
  42477e:	add    BYTE PTR [esi-0xff1e98],ah
  424784:	int3   
  424785:	lods   eax,DWORD PTR ds:[esi]
  424786:	loopne 0x4247c5
  424788:	xchg   edi,eax
  424789:	add    BYTE PTR [eax],al
  42478b:	fwait
  42478c:	cmp    edi,0xffffffff
  42478f:	inc    edx
  424790:	(bad)  
  424791:	imul   edi,edi,0xb8ceffff
  424797:	test   eax,0x6b00830f
  42479c:	add    bh,bh
  42479e:	(bad)  
  42479f:	clc    
  4247a0:	popf   
  4247a1:	inc    esp
  4247a2:	add    DWORD PTR [ebx+0x5206abff],0x64
  4247a9:	mov    edi,edi
  4247ab:	adc    al,0x0
  4247ad:	inc    DWORD PTR [ebx-0x7c15208d]
  4247b3:	add    BYTE PTR [ecx+0x2abbfa26],cl
  4247b9:	int3   
  4247ba:	call   DWORD PTR [ebx]
  4247bc:	inc    DWORD PTR [eax]
  4247be:	dec    DWORD PTR [edi+0x6b]
  4247c1:	sub    edi,edi
  4247c3:	cmp    edi,0xffffffbd
  4247c6:	stos   DWORD PTR es:[edi],eax
  4247c7:	aaa    
  4247c8:	pusha  
  4247c9:	add    DWORD PTR [eax],0xffffffc8
  4247cc:	add    BYTE PTR [eax],al
  4247ce:	sub    DWORD PTR [esi],0x47
  4247d1:	fiadd  DWORD PTR [eax]
  4247d3:	mov    edi,edi
  4247d5:	into   
  4247d6:	push   0xff00d520
  4247db:	xlat   BYTE PTR ds:[ebx]
  4247dc:	(bad)  
  4247dd:	dec    esp
  4247df:	pusha  
  4247e0:	test   DWORD PTR [edi+0x0],ebp
  4247e3:	add    DWORD PTR [eax],0x5b
  4247e6:	sub    DWORD PTR [edx+0x383cc86],edi
  4247ec:	cmp    edi,0x0
  4247ef:	pop    ds
  4247f0:	xchg   di,di
  4247f3:	mov    edi,edi
  4247f5:	dec    ebx
  4247f6:	sar    DWORD PTR [edx+ebx*8+0x8bcc00],cl
  4247fd:	inc    DWORD PTR [eax]
  4247ff:	loope  0x4247b7
  424801:	pop    edx
  424802:	(bad)  
  424803:	inc    DWORD PTR [ebx-0x13d4d2f2]
  424809:	inc    DWORD PTR [eax]
  42480b:	mov    bl,0x83
  42480d:	(bad)  
  42480e:	push   DWORD PTR [edx-0x61]
  424811:	adc    cl,ah
  424813:	cmp    edi,0x7b
  424816:	add    BYTE PTR [ecx-0x78],bl
  424819:	mov    edi,edi
  42481b:	les    ecx,FWORD PTR [ecx+0x5777ff83]
  424821:	inc    BYTE PTR [eax]
  424823:	inc    DWORD PTR [eax]
  424825:	sbb    DWORD PTR [ecx],edi
  424827:	mov    ebp,0x44ff831f
  42482c:	inc    DWORD PTR [ebx-0x25ee4400]
  424832:	(bad)  
  424833:	(bad)  
  424834:	jmp    DWORD PTR [ebx+0xe5d33]
  42483a:	sub    DWORD PTR [ecx+0x6f00ffcc],0xfffffffd
  424841:	int    0xff
  424843:	inc    DWORD PTR [eax]
  424845:	out    dx,al
  424846:	fwait
  424847:	sti    
  424848:	aaa    
  424849:	add    BYTE PTR [ebx-0x337c0052],al
  42484f:	js     0x4247f9
  424851:	int3   
  424852:	(bad)  
  424853:	(bad)  
  424854:	push   esi
  424856:	inc    ebp
  424857:	mov    esi,0xfbff00
  42485d:	inc    DWORD PTR [eax]
  42485f:	cmp    eax,0xffcc31e5
  424864:	inc    esp
  424866:	sub    ebx,DWORD PTR ds:0xbaff0052
  42486c:	add    BYTE PTR [eax],al
  42486e:	add    BYTE PTR [edx],cl
  424870:	mov    eax,ds:0xffffffaa
  424875:	mov    bl,0xb1
  424877:	icebp  
  424878:	repnz cmp edi,0xfffffffe
  42487c:	inc    DWORD PTR [eax]
  42487e:	add    BYTE PTR [ebx-0x6a63],ch
  424884:	add    BYTE PTR [ecx-0x613e02],bl
  42488a:	push   DWORD PTR [eax+0x4300ffff]
  424890:	aas    
  424891:	int3   
  424892:	mov    DWORD PTR [ebx+0x5b7ddc89],eax
  424898:	daa    
  424899:	(bad)  
  42489a:	(bad)  
  42489b:	fimul  WORD PTR [ecx+0x3a74cc00]
  4248a1:	add    bh,bh
  4248a3:	add    bh,bh
  4248a5:	cmc    
  4248a6:	test   DWORD PTR [edx+0x3e],esp
  4248a9:	add    DWORD PTR [eax],0xb
  4248ac:	mov    esp,ecx
  4248ae:	push   DWORD PTR [edi+0xffb26a]
  4248b4:	int3   
  4248b5:	js     0x4248b0
  4248b7:	xchg   esp,eax
  4248b8:	fmulp  st(4),st
  4248ba:	and    DWORD PTR [ebp-0x1],0x0
  4248be:	(bad)  
  4248bf:	cmp    ah,ah
  4248c1:	aam    0xcc
  4248c3:	inc    DWORD PTR [eax]
  4248c5:	pop    esp
  4248c6:	pop    ds
  4248c7:	and    bl,BYTE PTR [edx]
  4248c9:	inc    DWORD PTR [ebx-0x76ffffb4]
  4248cf:	and    eax,0xff93f2
  4248d4:	push   DWORD PTR [edx]
  4248d6:	loopne 0x4248a3
  4248d8:	sti    
  4248d9:	add    BYTE PTR [eax],al
  4248db:	jmp    0xcb0e49ac
  4248e0:	ss idiv edi
  4248e3:	add    BYTE PTR [ebx-0x2bb64fd4],al
  4248e9:	mov    esp,ecx
  4248eb:	arpl   WORD PTR [eax],ax
  4248ed:	or     DWORD PTR [ecx-0x7aecb5],0xffffffcc
  4248f4:	inc    DWORD PTR [ebx+0xe872cc]
  4248fa:	dec    DWORD PTR [ecx]
  4248fc:	cmp    edi,0x0
  4248ff:	mov    dh,0x4c
  424901:	mov    al,ds:0x430000ff
  424906:	pop    esi
  424907:	mov    ebp,DWORD PTR [ebp+0x11ff83]
  42490d:	add    BYTE PTR [ebx-0x7cd77f63],al
  424913:	(bad)  
  424914:	(bad)  
  424915:	ds xchg ebp,eax
  424917:	je     0x4248a9
  424919:	add    bh,bh
  42491b:	sub    edi,edi
  42491d:	add    BYTE PTR [eax],al
  42491f:	adc    eax,DWORD PTR [ebx]
  424921:	xchg   BYTE PTR [eax],al
  424923:	(bad)  
  424924:	dec    DWORD PTR [esi-0x33843d69]
  42492a:	int3   
  42492b:	cmp    bh,0x83
  42492e:	add    cl,al
  424930:	loopne 0x424972
  424932:	int3   
  424933:	add    BYTE PTR [eax],al
  424935:	sar    BYTE PTR [eax+0x2a],cl
  424938:	popa   
  424939:	add    BYTE PTR [eax],al
  42493b:	sar    bh,0x0
  42493e:	adc    DWORD PTR [eax],0x3d
  424941:	pop    ebx
  424942:	add    bh,bh
  424944:	int3   
  424945:	pop    ebp
  424946:	shl    DWORD PTR ds:[eax+eax*1-0x7c00af7d],1
  42494e:	add    BYTE PTR [ecx-0x72],bl
  424951:	lods   eax,DWORD PTR ds:[esi]
  424952:	dec    esp
  424954:	add    BYTE PTR [eax+0x577d1a],dl
  42495a:	add    BYTE PTR [edx],al
  42495c:	add    BYTE PTR [eax],al
  42495e:	add    BYTE PTR [edx+0xff2917],ch
  424964:	mov    DWORD PTR [edx-0x7ca8fd69],edx
  42496a:	(bad)  
  42496b:	cmp    eax,0x1cff00ff
  424970:	call   0x27db:0xff89cc6d
  424977:	ins    BYTE PTR es:[edi],dx
  424978:	cs cmp edi,0x1f
  42497c:	int3   
  42497d:	add    bh,bh
  42497f:	adc    edx,DWORD PTR [esi+0xffff0e]
  424985:	jp     0x424920
  424987:	(bad)  
  424988:	fisttp WORD PTR [ecx+0xafff]
  42498e:	jmp    FWORD PTR [ebx+0x31]
  424991:	mov    ds:0x7600ffff,eax
  424996:	test   eax,0xffcc563a
  42499b:	mov    al,BYTE PTR [eax]
  42499d:	add    ah,cl
  42499f:	scas   eax,DWORD PTR es:[edi]
  4249a0:	inc    ebx
  4249a1:	ret    0x83ff
  4249a4:	int3   
  4249a5:	mov    ds:0x8003dc,al
  4249aa:	inc    DWORD PTR [ebp+0x0]
  4249ad:	add    DWORD PTR [ebx-0xf27dac],0xffffffff
  4249b4:	int3   
  4249b5:	test   eax,0x38c6f2
  4249ba:	add    al,al
  4249bc:	inc    DWORD PTR [eax]
  4249be:	mov    DWORD PTR [esp+ebp*2-0x42],ebx
  4249c2:	or     esp,0x0
  4249c5:	cmp    BYTE PTR [ebx-0x7cabed],0x1c
  4249cc:	int3   
  4249cd:	(bad)  
  4249ce:	jmp    esp
  4249d0:	pop    ss
  4249d1:	xchg   esp,eax
  4249d2:	(bad)  
  4249d3:	dec    DWORD PTR [ecx-0x29083d69]
  4249d9:	(bad)  
  4249da:	call   FWORD PTR [edx]
  4249dc:	inc    DWORD PTR [eax]
  4249de:	add    BYTE PTR [edx],al
  4249e0:	cmp    al,0x1f
  4249e2:	add    bh,bh
  4249e4:	add    BYTE PTR [eax+0x584d53],bh
  4249ea:	add    ch,ch
  4249ec:	add    bh,bh
  4249ee:	add    ah,cl
  4249f0:	ret    
  4249f1:	add    eax,0x17ffffff
  4249f6:	popf   
  4249f7:	mov    DWORD PTR [esi-0x277d00],ecx
  4249fd:	add    DWORD PTR [eax],0xffffffd8
  424a00:	call   0x2cf6:0x8900ff3c
  424a07:	popf   
  424a08:	xchg   edi,edi
  424a0a:	mov    DWORD PTR [edx+0x0],ebp
  424a0d:	mov    edi,edi
  424a0f:	xchg   ecx,eax
  424a10:	retf   0x18
  424a13:	(bad)  
  424a14:	call   DWORD PTR [ebp+0x1a8ed8]
  424a1a:	(bad)  
  424a1b:	cmp    al,0xff
  424a1d:	(bad)  
  424a1e:	dec    DWORD PTR [edx]
  424a20:	xchg   edx,eax
  424a21:	enter  0xffff,0xff
  424a25:	gs popa 
  424a27:	shl    eax,0x83
  424a2a:	add    BYTE PTR [ecx+0x168300ff],dl
  424a30:	jae    0x424a68
  424a32:	(bad)  
  424a33:	(bad)  
  424a34:	dec    ebx
  424a36:	stc    
  424a37:	push   edi
  424a38:	add    bh,bh
  424a3a:	add    BYTE PTR [ecx],dh
  424a3c:	add    bh,bh
  424a3e:	add    bl,al
  424a40:	adc    DWORD PTR [eax-0x48000100],edx
  424a46:	push   esp
  424a47:	ja     0x424a3f
  424a49:	int3   
  424a4a:	jmp    DWORD PTR [eax+0x0]
  424a4d:	(bad)  
  424a4e:	push   DWORD PTR [ebx]
  424a50:	xor    al,ch
  424a52:	add    bh,bh
  424a54:	xor    DWORD PTR ds:0x12ec62,0xffffffff
  424a5b:	jecxz  0x424a5c
  424a5d:	add    DWORD PTR [eax],0x28
  424a60:	cwde   
  424a61:	mov    esp,0xa3ff00ff
  424a66:	stc    
  424a67:	cmp    eax,0x2900004d
  424a6c:	(bad)  
  424a6d:	inc    DWORD PTR [eax]
  424a6f:	pushf  
  424a70:	mov    ds:0xffff00f4,eax
  424a75:	push   edi
  424a76:	mov    esp,0x83009274
  424a7b:	push   ebp
  424a7c:	(bad)  
  424a7d:	inc    DWORD PTR [ebx-0x5fab65]
  424a83:	or     DWORD PTR [ecx-0x3bf17fd6],0x0
  424a8a:	call   FWORD PTR [edi+edi*8-0x77307d00]
  424a91:	int    0xff
  424a93:	add    BYTE PTR [ecx-0x49901d17],cl
  424a99:	add    BYTE PTR [eax],al
  424a9b:	cwde   
  424a9c:	mov    DWORD PTR [eax],eax
  424a9e:	call   DWORD PTR [ecx-0x1a]
  424aa1:	outs   dx,BYTE PTR ds:[esi]
  424aa2:	(bad)  
  424aa3:	inc    DWORD PTR [eax]
  424aa5:	jae    0x424a50
  424aa7:	xor    bh,BYTE PTR [edx-0x76083400]
  424aad:	int3   
  424aae:	mov    DWORD PTR [edi+0x5a],ecx
  424ab1:	pop    ss
  424ab2:	add    BYTE PTR [eax],al
  424ab4:	add    bl,bh
  424ab6:	jp     0x424b1a
  424ab8:	pop    ebp
  424ab9:	(bad)  
  424aba:	(bad)  
  424abb:	(bad)  
  424abd:	add    BYTE PTR [eax],al
  424abf:	inc    ecx
  424ac0:	inc    edi
  424ac1:	aaa    
  424ac2:	inc    DWORD PTR [eax]
  424ac4:	add    BYTE PTR [esi],dh
  424ac6:	(bad)  
  424ac7:	rcr    DWORD PTR [edx+0x5c00ff],0x0
  424ace:	sub    DWORD PTR [ebp-0xfffe78],0xffffffff
  424ad5:	enter  0xbed7,0xee
  424ad9:	add    BYTE PTR [eax],al
  424adb:	sub    bh,bh
  424add:	add    bh,bh
  424adf:	jp     0x424a6e
  424ae1:	(bad)  
  424ae2:	mov    DWORD PTR [ecx+0x1b00cbff],ecx
  424ae8:	xchg   edx,eax
  424ae9:	add    BYTE PTR [ecx-0x7f],cl
  424aef:	rcr    BYTE PTR [edi-0xa],1
  424af5:	fisubr DWORD PTR [ebp-0x33ff76ec]
  424afb:	bound  eax,QWORD PTR [eax]
  424afd:	(bad)  
  424afe:	jmp    FWORD PTR [ebx]
  424b00:	xchg   DWORD PTR [eax+eax*1-0x5d957c7d],eax
  424b07:	sbb    eax,esp
  424b09:	add    bh,bh
  424b0b:	stos   BYTE PTR es:[edi],al
  424b0c:	inc    DWORD PTR [eax]
  424b0e:	or     DWORD PTR [eax+0x2ece],0x0
  424b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b16:	cmp    DWORD PTR [ebx+0x79],ecx
  424b19:	add    bh,bh
  424b1b:	jbe    0x424aa0
  424b1d:	int3   
  424b1e:	mov    DWORD PTR ds:0xff4ff8,edi
  424b24:	add    BYTE PTR [ecx-0x43867f],ah
  424b2a:	jmp    DWORD PTR [ebx-0x79ff7c7d]
  424b30:	sub    al,0xa
  424b32:	add    bh,bh
  424b34:	jmp    FWORD PTR [ebx+0x33]
  424b37:	inc    esp
  424b38:	dec    ecx
  424b39:	inc    DWORD PTR [eax]
  424b3b:	ss (bad) 
  424b3d:	(bad)  
  424b3e:	dec    DWORD PTR [ebp+0xff5253]
  424b44:	call   esp
  424b46:	xchg   BYTE PTR ds:0x3bff002b,al
  424b4c:	mov    edi,edi
  424b4e:	int3   
  424b4f:	addr16 nop
  424b51:	(bad)  
  424b53:	add    BYTE PTR [eax],al
  424b55:	xchg   edi,eax
  424b56:	std    
  424b57:	push   ecx
  424b58:	sub    eax,0x890affff
  424b5d:	inc    DWORD PTR [ebx-0xc930e8]
  424b63:	add    BYTE PTR [eax],al
  424b65:	std    
  424b66:	pop    esp
  424b67:	aad    0x8f
  424b69:	add    BYTE PTR [eax],al
  424b6b:	fadd   DWORD PTR [eax]
  424b6d:	int3   
  424b6e:	sub    DWORD PTR [eax-0xffec0c],0xffffffff
  424b75:	retf   
  424b76:	ror    ch,1
  424b78:	into   
  424b79:	mov    DWORD PTR [eax],eax
  424b7b:	loopne 0x424b7c
  424b7d:	(bad)  
  424b7e:	inc    DWORD PTR [ebx-0x7c3367d9]
  424b84:	int3   
  424b85:	mov    eax,0x895280a6
  424b8a:	(bad)  
  424b8b:	mov    ecx,0xccccffcc
  424b90:	jle    0x424be5
  424b92:	inc    DWORD PTR [ebx+0x66a042ff]
  424b98:	add    BYTE PTR [ecx+0xc889],cl
  424b9e:	mov    DWORD PTR [ebx+0x19],ebp
  424ba1:	inc    ebp
  424ba2:	inc    DWORD PTR [eax]
  424ba4:	add    BYTE PTR [esi+0x52],ch
  424ba7:	jmp    0xfa0e4bb8
  424bac:	inc    DWORD PTR [ebx+0x33442783]
  424bb2:	add    BYTE PTR [ecx+0x6b46dbff],cl
  424bb8:	sar    bh,0xff
  424bbb:	sub    bh,bh
  424bbd:	int3   
  424bbe:	(bad)  
  424bbf:	jnp    0x424baa
  424bc1:	jbe    0x424bc2
  424bc3:	inc    DWORD PTR [eax]
  424bc5:	xor    BYTE PTR [eax-0x760076d4],ch
  424bcb:	cli    
  424bcc:	or     DWORD PTR [ecx-0x5be86700],0xffffff83
  424bd3:	inc    DWORD PTR [eax]
  424bd5:	leave  
  424bd6:	out    dx,al
  424bd7:	push   eax
  424bd8:	in     al,dx
  424bd9:	dec    esp
  424bdb:	mov    ah,0xcc
  424bdd:	inc    DWORD PTR [eax]
  424bdf:	popa   
  424be0:	test   BYTE PTR [edi-0x7d],ah
  424be3:	add    DWORD PTR [eax],0xffffffd4
  424be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424be7:	mov    gs,WORD PTR [ecx-0x1]
  424bea:	add    BYTE PTR [ecx],bh
  424bec:	(bad)  
  424bed:	inc    DWORD PTR [eax]
  424bef:	out    dx,al
  424bf0:	nop
  424bf1:	ds (bad) 
  424bf3:	dec    DWORD PTR [ecx-0x5a8385a5]
  424bf9:	inc    DWORD PTR [ebx+0xff1d]
  424bff:	fcom   QWORD PTR gs:[ebx+0x36ff00cc]
  424c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c07:	xchg   ecx,eax
  424c08:	mov    edi,0xffcfffcc
  424c0d:	add    BYTE PTR [eax],al
  424c0f:	stos   DWORD PTR es:[edi],eax
  424c10:	adc    BYTE PTR [esi],bl
  424c12:	inc    DWORD PTR [ebx-0x22bd1b01]
  424c18:	ror    DWORD PTR [ecx-0x7c006e01],0xff
  424c1f:	mov    ebp,0x8300a145
  424c24:	sbb    edx,0xffffffa5
  424c27:	repz xchg ebx,eax
  424c29:	add    bh,bh
  424c2b:	or     al,BYTE PTR [eax]
  424c2d:	add    BYTE PTR [eax],al
  424c2f:	pop    ss
  424c30:	adc    eax,0xffffc8
  424c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c36:	test   eax,0xff29a6
  424c3b:	test   DWORD PTR [ebx-0x29ed7c01],0xff830042
  424c45:	lds    ebx,FWORD PTR [esi+eiz*2+0x3ffff21]
  424c4c:	inc    DWORD PTR [ebx+0x4cfd1dff]
  424c52:	add    BYTE PTR [eax],al
  424c54:	dec    DWORD PTR [edx]
  424c56:	retf   
  424c57:	(bad)  
  424c58:	in     eax,dx
  424c59:	add    bh,bh
  424c5b:	xchg   edx,eax
  424c5c:	mov    DWORD PTR [eax],eax
  424c5e:	jmp    edi
  424c60:	xchg   DWORD PTR [ebx-0x7d],ebp
  424c63:	(bad)  
  424c64:	inc    DWORD PTR [edi-0x7c706b1f]
  424c6a:	call   DWORD PTR [esi+0x1983ff00]
  424c70:	sub    al,BYTE PTR cs:[ebx-0x59650100]
  424c77:	pop    ss
  424c78:	pop    esi
  424c79:	int3   
  424c7a:	sub    DWORD PTR [eax-0x25ff007d],0x7
  424c81:	imul   eax,DWORD PTR [eax],0x7cccff
  424c87:	or     ch,BYTE PTR [edx-0x34]
  424c8a:	jmp    DWORD PTR [eax]
  424c8c:	(bad)  
  424c8d:	dec    DWORD PTR [ecx-0x568de6]
  424c93:	add    BYTE PTR [ebx+0x3e98828c],al
  424c99:	inc    DWORD PTR [eax]
  424c9b:	inc    ebx
  424c9c:	(bad)  
  424c9d:	inc    DWORD PTR [eax]
  424c9f:	mov    eax,0x8930e3
  424ca4:	push   DWORD PTR ds:0xffa2eff3
  424caa:	add    BYTE PTR [edx+0x10ffff00],cl
  424cb0:	mov    ah,0x58
  424cb2:	add    BYTE PTR [eax],al
  424cb4:	inc    DWORD PTR [edi+ebp*8]
  424cb7:	sbb    esi,DWORD PTR [ecx-0x1]
  424cba:	mov    DWORD PTR [esi],esp
  424cbc:	add    DWORD PTR [eax],0xffffffff
  424cbf:	es mov ebp,0xff007a
  424cc5:	mov    ebx,0xcc04c659
  424cca:	add    BYTE PTR [ebp-0x7d],ah
  424ccd:	add    BYTE PTR [ebx-0xce010e],al
  424cd3:	add    bh,bh
  424cd5:	mov    bl,0x94
  424cd7:	or     DWORD PTR [edi+0x0],esp
  424cda:	dec    DWORD PTR [ebx]
  424cdc:	add    bh,bh
  424cde:	call   DWORD PTR [edi+ebp*8+0x61]
  424ce2:	add    BYTE PTR [eax],al
  424ce4:	jmp    FWORD PTR [eax-0x2c]
  424ce7:	scas   eax,DWORD PTR es:[edi]
  424ce8:	call   0xff9cd070
  424ced:	dec    DWORD PTR [ecx-0x6588da]
  424cf3:	(bad)  
  424cf4:	inc    DWORD PTR [eax-0xaa23be]
  424cfa:	add    BYTE PTR [esi-0x1],bh
  424cfd:	dec    DWORD PTR [ecx-0xb9dab3]
  424d03:	inc    DWORD PTR [eax]
  424d05:	mov    eax,ds:0x839a3775
  424d0a:	add    BYTE PTR [ecx],al
  424d0c:	int3   
  424d0d:	(bad)  
  424d0e:	(bad)  
  424d0f:	cmp    DWORD PTR [edi],ebx
  424d11:	sub    eax,DWORD PTR [eax]
  424d13:	(bad)  
  424d14:	dec    DWORD PTR [ebp+0x6a]
  424d17:	hlt    
  424d18:	sub    edi,edi
  424d1a:	sub    DWORD PTR ds:0xa8ff0000,0xfffffff1
  424d21:	in     al,0xff
  424d23:	add    DWORD PTR [eax],0x6d
  424d26:	adc    DWORD PTR [esp+ebx*2+0x26ffff],ebx
  424d2d:	add    DWORD PTR [eax],0xfffffff2
  424d30:	mov    ds:0x83ff07,eax
  424d35:	and    eax,0xffa8feec
  424d3a:	(bad)  
  424d3b:	jmp    0x9883:0x38ff89ff
  424d42:	add    bh,bh
  424d44:	mov    ecx,eax
  424d46:	imul   edx,DWORD PTR [edi],0xffffffff
  424d49:	add    bh,bh
  424d4b:	fcos   
  424d4d:	add    BYTE PTR [eax],al
  424d4f:	inc    DWORD PTR [ebx-0x55]
  424d52:	or     esp,0xffffff89
  424d55:	ds dec esp
  424d57:	and    al,BYTE PTR [esi-0x5e7c7d]
  424d5d:	inc    DWORD PTR [eax]
  424d5f:	(bad)  
  424d60:	je     0x424d0f
  424d62:	(bad)  
  424d63:	inc    DWORD PTR [eax]
  424d65:	call   0xaff:0xff2fdc71
  424d6c:	int3   
  424d6d:	add    DWORD PTR [eax],0xffffffd8
  424d70:	adc    BYTE PTR [eax],0x0
  424d73:	add    bh,bh
  424d75:	hlt    
  424d76:	adc    esp,DWORD PTR [eax]
  424d78:	dec    edi
  424d79:	add    bh,bh
  424d7b:	std    
  424d7c:	(bad)  
  424d7d:	inc    DWORD PTR [eax]
  424d7f:	mov    BYTE PTR [edx+0x20],0xff
  424d83:	mov    DWORD PTR [ebx-0x14e74594],eax
  424d89:	(bad)  
  424d8a:	dec    DWORD PTR [eax]
  424d8c:	inc    DWORD PTR [ebx+0x7e4cb4ff]
  424d92:	(bad)  
  424d93:	(bad)  
  424d94:	call   esp
  424d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d97:	cmp    ebx,DWORD PTR [ebp-0xe60001]
  424d9d:	add    DWORD PTR [eax],0x4a
  424da0:	addr16 repz (bad) 
  424da3:	(bad)  
  424da4:	dec    esi
  424da6:	or     bl,ah
  424da8:	inc    edx
  424da9:	add    bh,bh
  424dab:	add    bh,bh
  424dad:	(bad)  
  424dae:	jmp    DWORD PTR [ebp+0xcc3ce9]
  424db4:	int3   
  424db5:	and    DWORD PTR [edx+0x20],eax
  424db8:	add    eax,0xceccff
  424dbd:	inc    DWORD PTR [eax]
  424dbf:	fnstenv [eax-0x72]
  424dc2:	add    bh,bh
  424dc4:	add    BYTE PTR [esi+eiz*8-0x55],cl
  424dc8:	mov    esi,0xffe1ffcc
  424dcd:	add    bh,bh
  424dcf:	cmp    al,0x8c
  424dd1:	xchg   edx,eax
  424dd2:	int3   
  424dd3:	(bad)  
  424dd4:	push   DWORD PTR [ebp-0x2]
  424dd7:	in     al,0x2c
  424dd9:	inc    DWORD PTR [eax]
  424ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ddc:	inc    DWORD PTR [eax]
  424dde:	dec    DWORD PTR [edx-0x60]
  424de1:	mov    ch,0xff
  424de3:	add    BYTE PTR [eax],al
  424de5:	push   ebx
  424de6:	jmp    0xff00:0xff7d59
  424ded:	dec    DWORD PTR [ecx-0x337b5adb]
  424df3:	add    ah,cl
  424df5:	aaa    
  424df6:	out    0xa4,al
  424df8:	pop    esi
  424df9:	(bad)  
  424dfa:	jmp    DWORD PTR [ecx]
  424dfc:	int3   
  424dfd:	inc    DWORD PTR [eax]
  424dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e00:	imul   esp,DWORD PTR [edx-0x1400337d],0x914210
  424e0a:	call   DWORD PTR [ebx]
  424e0c:	or     DWORD PTR [ecx+0x623e6bff],0x0
  424e13:	int3   
  424e14:	add    bl,dl
  424e16:	lods   eax,DWORD PTR ds:[esi]
  424e17:	repnz add DWORD PTR [ebx-0x76333701],eax
  424e1e:	dec    DWORD PTR [esi-0xe]
  424e21:	push   es
  424e22:	inc    DWORD PTR [eax]
  424e24:	and    DWORD PTR [esi+ecx*2],0x28
  424e28:	cmp    edi,0xff0083ff
  424e2e:	add    BYTE PTR [edi],dh
  424e30:	call   0x8342d1a9
  424e35:	push   ebp
  424e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e37:	add    DWORD PTR [eax],esi
  424e39:	inc    DWORD PTR [eax]
  424e3b:	pop    esp
  424e3c:	cmp    edi,0xffffff83
  424e3f:	mov    esp,0x83ff9322
  424e44:	add    BYTE PTR [edi],cl
  424e46:	jle    0x424e5d
  424e48:	and    DWORD PTR [ecx+0xf900],ecx
  424e4e:	(bad)  
  424e4f:	cmp    al,0x69
  424e51:	in     al,dx
  424e52:	add    BYTE PTR [ebx-0x23d6dd01],al
  424e58:	mov    BYTE PTR [ebx-0xff2701],0x0
  424e5f:	dec    esp
  424e60:	jg     0x424e1c
  424e62:	inc    DWORD PTR [eax]
  424e64:	add    BYTE PTR [edx],dh
  424e66:	xlat   BYTE PTR ds:[ebx]
  424e67:	(bad)  
  424e69:	(bad)  
  424e6a:	call   ebp
  424e6c:	(bad)  
  424e6d:	(bad)  
  424e6e:	call   ecx
  424e70:	adc    ch,BYTE PTR ds:0xc0ffff00
  424e76:	push   esp
  424e77:	mov    ?,edx
  424e79:	int3   
  424e7a:	add    BYTE PTR [edi],dh
  424e7c:	add    bh,bh
  424e7e:	add    BYTE PTR [edx+0x24],bh
  424e81:	ins    DWORD PTR es:[edi],dx
  424e82:	add    bh,bh
  424e84:	jmp    DWORD PTR [ecx-0xb3a300]
  424e8a:	add    BYTE PTR ds:0x52ffff00,bl
  424e90:	adc    dh,BYTE PTR [esi]
  424e92:	add    BYTE PTR [ebx+0x597064ff],al
  424e98:	mov    eax,0xff70ff83
  424e9d:	(bad)  
  424e9e:	call   eax
  424ea0:	add    eax,0xffffccc7
  424ea5:	in     eax,0xac
  424ea7:	mov    cl,ah
  424ea9:	mov    DWORD PTR [ebx+0x88],eax
  424eaf:	adc    esi,edi
  424eb1:	test   DWORD PTR [eax],0xd04dcc00
  424eb7:	outs   dx,BYTE PTR ds:[esi]
  424eb8:	inc    DWORD PTR fs:[eax]
  424ebb:	je     0x424ebc
  424ebd:	dec    DWORD PTR [ecx-0x7cb9d60e]
  424ec3:	dec    DWORD PTR [ecx+0x308fe0f6]
  424ec9:	int3   
  424eca:	add    DWORD PTR [edi+edi*8-0x1],0xffffffff
  424ecf:	mov    BYTE PTR [esi+0x89ccf4],dh
  424ed5:	fist   DWORD PTR [ebp+0x8920a1]
  424edb:	xor    al,0xff
  424edd:	add    BYTE PTR [eax],al
  424edf:	mov    ds:0xff6bbd,eax
  424ee4:	xor    esi,0x9
  424ee7:	inc    esp
  424ee8:	mov    eax,ds:0xff2600cc
  424eed:	(bad)  
  424eee:	jmp    FWORD PTR [ebp-0x3300d62d]
  424ef4:	push   DWORD PTR [ebx-0x67]
  424ef7:	jl     0x424ec8
  424ef9:	inc    DWORD PTR [eax]
  424efb:	mov    esi,0xbe8300ff
  424f00:	ret    0x33
  424f03:	inc    DWORD PTR [ebx-0x2e484c03]
  424f09:	inc    DWORD PTR [eax]
  424f0b:	mov    esi,0x3983ff00
  424f10:	mov    al,0xbc
  424f12:	(bad)  
  424f13:	(bad)  
  424f14:	call   FWORD PTR [ecx+0x175339]
  424f1a:	sbb    DWORD PTR [esp+ecx*8+0x51b4ff83],0xffffffb7
  424f22:	add    bh,bh
  424f24:	jmp    FWORD PTR [esi+0x4]
  424f27:	lahf   
  424f28:	loope  0x424f29
  424f2a:	add    bh,al
  424f2c:	(bad)  
  424f2d:	(bad)  
  424f2e:	(bad)  
  424f2f:	jl     0x424f65
  424f31:	(bad)  
  424f32:	inc    DWORD PTR [ebx+0x7e509ff]
  424f38:	xchg   edi,eax
  424f39:	add    BYTE PTR [ecx-0x8c],cl
  424f3f:	mov    bl,0x72
  424f41:	dec    ecx
  424f42:	add    BYTE PTR [eax],al
  424f44:	push   DWORD PTR [edi-0x3b]
  424f47:	push   esp
  424f48:	add    BYTE PTR gs:[eax],al
  424f4b:	sbb    edi,edi
  424f4d:	add    bh,bh
  424f4f:	cmc    
  424f50:	out    dx,al
  424f51:	pusha  
  424f52:	add    BYTE PTR [eax],al
  424f54:	dec    ebx
  424f56:	jae    0x424f75
  424f58:	mov    edi,0xe0000
  424f5d:	(bad)  
  424f5e:	call   DWORD PTR [esp+ecx*8]
  424f61:	cmp    bh,bh
  424f63:	inc    DWORD PTR [ebx+0x64e93152]
  424f69:	int3   
  424f6a:	call   FWORD PTR [eax]
  424f6c:	(bad)  
  424f6d:	(bad)  
  424f6e:	jmp    ecx
  424f70:	or     al,0xfa
  424f72:	add    bh,bh
  424f74:	xor    edx,0x50
  424f77:	stos   BYTE PTR es:[edi],al
  424f78:	xchg   ah,cl
  424f7a:	add    BYTE PTR [ebx+0x7aff0000],dh
  424f80:	jmp    0xff434f6d
  424f85:	dec    esi
  424f86:	stc    
  424f87:	pop    es
  424f88:	pop    es
  424f89:	add    BYTE PTR [eax],al
  424f8b:	imul   edi,edi,0xffffffff
  424f8e:	add    ch,dl
  424f90:	xor    ecx,esp
  424f92:	dec    DWORD PTR [ecx+0x48aad783]
  424f98:	std    
  424f99:	inc    DWORD PTR [eax]
  424f9b:	pop    ds
  424f9c:	(bad)  
  424f9d:	(bad)  
  424f9e:	dec    esi
  424fa0:	push   ecx
  424fa1:	mov    WORD PTR [eax],es
  424fa3:	mov    edi,edi
  424fa5:	ja     0x424fdc
  424fa7:	in     eax,dx
  424fa8:	cmp    al,0xcc
  424faa:	add    al,cl
  424fac:	cmp    edi,0xffffffff
  424faf:	test   DWORD PTR [ecx+edi*8+0x7dff0000],ebp
  424fb6:	mov    edi,cs
  424fb8:	push   es
  424fb9:	int3   
  424fba:	inc    ecx
  424fbc:	add    BYTE PTR [ecx-0x36ba1f7d],cl
  424fc2:	(bad)  
  424fc3:	(bad)  
  424fc4:	(bad)  
  424fc5:	sti    
  424fc6:	push   cs
  424fc7:	adc    DWORD PTR [ebx+eax*4],0xffffffff
  424fcb:	sbb    eax,0xbdff00ff
  424fd0:	popa   
  424fd1:	aad    0x83
  424fd3:	inc    DWORD PTR [eax]
  424fd5:	jae    0x424f88
  424fd7:	sar    DWORD PTR [edi+edi*8+0xe4ff],1
  424fde:	add    cl,ch
  424fe0:	scas   al,BYTE PTR es:[edi]
  424fe1:	or     al,BYTE PTR [ebx+0x265e83ff]
  424fe7:	mov    dl,0x7e
  424fe9:	add    BYTE PTR [eax],al
  424feb:	adc    al,0x89
  424fed:	(bad)  
  424fee:	jmp    DWORD PTR [ebx-0x2b]
  424ff1:	mov    ebp,0xa8ff8383
  424ff6:	push   es
  424ff7:	dec    edi
  424ff8:	mov    edi,?
  424ffa:	inc    DWORD PTR [edi+edi*8-0x3660ff7d]
  425001:	out    0xff,al
  425003:	add    BYTE PTR [eax],al
  425005:	fadd   st(3),st
  425007:	or     ebp,ebp
  425009:	dec    esp
  42500b:	pop    edx
  42500c:	add    bh,bh
  42500e:	add    BYTE PTR [ecx-0xf996],al
  425014:	call   DWORD PTR [ebx-0x41577]
  42501a:	add    BYTE PTR [edx-0x7d],dl
  42501d:	(bad)  
  42501e:	jmp    eax
  425020:	push   ebp
  425021:	ds cmp edi,0x0
  425025:	dec    ecx
  425026:	retf   0x28de
  425029:	add    DWORD PTR [eax],0xfffffff6
  42502c:	add    BYTE PTR [eax],al
  42502e:	add    BYTE PTR [ecx+0xf],cl
  425031:	sbb    al,0xff
  425033:	add    DWORD PTR [ebx+0x7511ee4e],0xffffff83
  42503a:	add    DWORD PTR [ebx-0x78007d00],0x29
  425041:	xchg   esi,eax
  425042:	inc    DWORD PTR [ebx-0x39bb2a01]
  425048:	jae    0x424fcd
  42504a:	add    ch,dl
  42504c:	inc    DWORD PTR [ebx-0xd347534]
  425052:	int3   
  425053:	add    BYTE PTR [ebx-0x60945a26],al
  425059:	cmp    edi,0xffffffc9
  42505c:	int3   
  42505d:	int3   
  42505e:	jmp    FWORD PTR [ecx]
  425060:	(bad)  
  425061:	adc    BYTE PTR [eax],al
  425063:	mov    edi,edi
  425065:	dec    ebx
  425066:	xor    al,dh
  425068:	clc    
  425069:	add    DWORD PTR [eax],0xffffffc2
  42506c:	inc    DWORD PTR [eax]
  42506e:	jmp    FWORD PTR [esi+0x3e]
  425071:	mov    cl,0x0
  425073:	add    bh,bh
  425075:	push   esi
  425076:	daa    
  425077:	out    dx,al
  425078:	mov    esp,0xccb8ff83
  42507d:	int3   
  42507e:	add    ch,bl
  425080:	clc    
  425081:	adc    DWORD PTR [ebx-0x7f090100],eax
  425087:	rcr    DWORD PTR [ebx-0x7d],cl
  42508a:	add    BYTE PTR [eax-0x1],al
  42508d:	add    bh,bh
  42508f:	pusha  
  425090:	mov    DWORD PTR [ebx-0x2e000001],0xff94c558
  42509a:	inc    ebx
  42509c:	add    DWORD PTR [ebx+0x6fd33000],0xffffff83
  4250a3:	add    BYTE PTR [ebx+0x76797fa6],al
  4250a9:	dec    esp
  4250ab:	je     0x4250ac
  4250ad:	inc    DWORD PTR [eax]
  4250af:	adc    eax,0xffffebe9
  4250b4:	add    bl,bl
  4250b6:	mov    esp,0xff89bbc7
  4250bb:	push   ecx
  4250bc:	(bad)  
  4250bd:	(bad)  
  4250be:	(bad)  
  4250bf:	fbld   TBYTE PTR [ecx+0x3b]
  4250c2:	(bad)  
  4250c3:	dec    DWORD PTR [ecx+0x13e510f6]
  4250c9:	(bad)  
  4250ca:	inc    eax
  4250cc:	add    bh,bh
  4250ce:	add    BYTE PTR [edi+0x4a],ch
  4250d1:	aaa    
  4250d2:	inc    DWORD PTR [eax]
  4250d4:	(bad)  
  4250d5:	jl     0x4250ca
  4250d7:	xor    al,BYTE PTR ds:0x835fffff
  4250dd:	inc    DWORD PTR [eax]
  4250df:	lods   al,BYTE PTR ds:[esi]
  4250e0:	shr    DWORD PTR [ebp+0x1283ff83],cl
  4250e6:	aam    0x67
  4250e8:	inc    DWORD PTR ds:[eax]
  4250eb:	rol    BYTE PTR [ebx-0x3edf0001],0xab
  4250f2:	add    BYTE PTR [eax],al
  4250f4:	dec    DWORD PTR [ebx]
  4250f6:	mov    edx,0xff16ae
  4250fb:	xchg   BYTE PTR [ebx-0x21770000],al
  425101:	sub    edi,edi
  425103:	inc    DWORD PTR [eax]
  425105:	dec    eax
  425106:	or     al,0x39
  425108:	mov    eax,ds:0x41cc00
  42510d:	dec    DWORD PTR [ecx-0x7c76dacd]
  425113:	inc    DWORD PTR [eax]
  425115:	mov    edx,0xff584eea
  42511a:	(bad)  
  42511b:	std    
  42511c:	add    DWORD PTR [ebx-0x3a172f01],0xffffffff
  425123:	inc    DWORD PTR [eax]
  425125:	push   edx
  425126:	fmul   DWORD PTR [ebp+0xe]
  425129:	inc    DWORD PTR [eax]
  42512b:	xor    al,BYTE PTR [eax]
  42512d:	mov    edi,edi
  42512f:	inc    eax
  425130:	into   
  425131:	(bad)  
  425132:	(bad)  
  425133:	(bad)  
  425134:	(bad)  
  425135:	mov    ebp,0x79dff4
  42513a:	call   FWORD PTR [edx-0x6000ff7d]
  425140:	adc    eax,0xff00ffa6
  425145:	je     0x425136
  425147:	sbb    edi,DWORD PTR [ebx-0x1]
  42514a:	dec    edx
  42514c:	add    BYTE PTR [ebx-0x656a167d],al
  425152:	inc    DWORD PTR [eax]
  425154:	mov    DWORD PTR [esi+ecx*2-0x5f],esp
  425158:	sbb    edi,edi
  42515a:	call   DWORD PTR [ecx+0x1200ffff]
  425160:	jg     0x4251cf
  425162:	int3   
  425163:	inc    DWORD PTR [eax]
  425165:	pop    ecx
  425166:	arpl   WORD PTR [edx+eax*2-0x78ff7d],di
  42516d:	inc    DWORD PTR [ebx+0x83c24c]
  425173:	mov    edi,edi
  425175:	test   al,0xcc
  425177:	or     eax,0x6600ff5d
  42517c:	int3   
  42517d:	or     esp,0xffffff87
  425180:	adc    ebx,DWORD PTR [eax]
  425182:	inc    DWORD PTR [eax]
  425184:	add    BYTE PTR [ecx-0x10],bh
  425187:	sbb    esi,DWORD PTR [esi-0xbc0000]
  42518d:	(bad)  
  42518e:	inc    DWORD PTR [edx+ebp*8-0x50]
  425192:	(bad)  
  425193:	(bad)  
  425194:	(bad)  
  425195:	cli    
  425196:	fisttp WORD PTR [eax]
  425198:	inc    eax
  425199:	(bad)  
  42519a:	jmp    DWORD PTR [edi+edi*8+0x0]
  42519e:	add    BYTE PTR [esi+eax*8],bh
  4251a1:	mov    esp,0x4600ffff
  4251a6:	sub    esp,edx
  4251a8:	jnp    0x4251a9
  4251aa:	add    cl,cl
  4251ac:	cmp    edi,0xffffffff
  4251af:	push   cs
  4251b0:	loopne 0x425137
  4251b2:	add    bh,bh
  4251b4:	call   FWORD PTR [ebp-0x762f3128]
  4251ba:	xor    DWORD PTR [edx-0xd330034],0xf
  4251c1:	jmp    0xe5425192
  4251c6:	pop    edi
  4251c7:	dec    edx
  4251c8:	nop
  4251c9:	add    bh,bh
  4251cb:	repnz add bh,bh
  4251ce:	push   ebx
  4251d0:	fcom   DWORD PTR [ecx-0x2800007d]
  4251d6:	out    dx,al
  4251d7:	mov    bl,BYTE PTR [ebx]
  4251d9:	int3   
  4251da:	or     esp,0xffffffff
  4251dd:	(bad)  
  4251de:	jmp    FWORD PTR [edx]
  4251e0:	ins    DWORD PTR es:[edi],dx
  4251e1:	mov    ebp,0x1a8389ff
  4251e6:	mov    dh,0x9a
  4251e8:	and    al,BYTE PTR [eax]
  4251ea:	add    BYTE PTR [edi+edi*8],bh
  4251ed:	(bad)  
  4251ee:	call   ebp
  4251f0:	outs   dx,DWORD PTR ds:[esi]
  4251f1:	scas   al,BYTE PTR es:[edi]
  4251f2:	add    bh,bh
  4251f4:	add    BYTE PTR [esi],bl
  4251f6:	repnz push es
  4251f8:	sbb    eax,DWORD PTR [eax]
  4251fa:	mov    DWORD PTR [edx-0x1],eax
  4251fd:	add    BYTE PTR [ecx+0xf3ea6c],cl
  425203:	add    BYTE PTR [eax],al
  425205:	rcl    BYTE PTR [ebx-0x11],cl
  425208:	jle    0x425209
  42520a:	int3   
  42520b:	dec    esp
  42520d:	mov    DWORD PTR [eax],eax
  42520f:	xchg   esi,eax
  425210:	jb     0x42525e
  425212:	add    DWORD PTR [eax],0xffffffff
  425215:	jno    0x425233
  425217:	outs   dx,DWORD PTR ds:[esi]
  425218:	imul   edi,edi,0xffffffff
  42521b:	(bad)  
  42521c:	inc    DWORD PTR [ebx-0x480afd01]
  425222:	inc    DWORD PTR [eax]
  425224:	add    BYTE PTR [ecx+eiz*1-0x41],dl
  425228:	jg     0x42522a
  42522a:	call   DWORD PTR [ebx-0x63000100]
  425230:	xchg   DWORD PTR [esi+0x4bffccff],esi
  425236:	pop    DWORD PTR [ebp-0xcff7c4e]
  42523c:	inc    DWORD PTR [eax]
  42523e:	cmp    eax,0x66
  425241:	mov    ?,edi
  425243:	add    bh,bh
  425245:	std    
  425246:	daa    
  425247:	fnsave [ecx-0x76be0077]
  42524d:	add    BYTE PTR [ebx+0xc362ca],al
  425253:	inc    DWORD PTR [eax]
  425255:	pop    edx
  425256:	scas   al,BYTE PTR es:[edi]
  425257:	adc    ecx,DWORD PTR [edi]
  425259:	inc    DWORD PTR [ebx+0xcc8329]
  42525f:	push   ebp
  425260:	push   ss
  425261:	push   ebx
  425262:	(bad)  
  425263:	(bad)  
  425264:	call   FWORD PTR [ebx-0x7c30a7bf]
  42526a:	inc    DWORD PTR [edx]
  42526c:	cmp    edi,0xffffff89
  42526f:	inc    ecx
  425270:	mov    ecx,0xff83ff0c
  425275:	test   cl,0x8d
  425278:	inc    esi
  425279:	(bad)  
  42527a:	call   DWORD PTR [edx+0x0]
  42527d:	add    bh,bh
  42527f:	push   esp
  425280:	cmc    
  425281:	xor    al,BYTE PTR [ebx+0x25dd8383]
  425287:	xlat   BYTE PTR ds:[ebx]
  425288:	call   0xe7518d
  42528d:	add    bh,bh
  42528f:	outs   dx,DWORD PTR ds:[esi]
  425290:	push   ss
  425291:	sub    eax,0x1b00ffff
  425296:	nop
  425297:	mov    bh,0x80
  425299:	(bad)  
  42529a:	call   edi
  42529c:	cmp    edi,0xffffffff
  42529f:	inc    edi
  4252a0:	or     BYTE PTR [ebx+0x0],bh
  4252a3:	int3   
  4252a4:	add    BYTE PTR [esi-0x900e36],ah
  4252aa:	mov    DWORD PTR [ecx+0x0],edi
  4252ad:	inc    DWORD PTR [ebx-0xe29e8a]
  4252b3:	mov    DWORD PTR [eax],eax
  4252b5:	test   eax,0xffa16b3c
  4252ba:	jmp    DWORD PTR [eax]
  4252bc:	mov    DWORD PTR [ebx-0xbbe7f7d],eax
  4252c2:	int3   
  4252c3:	int3   
  4252c4:	inc    DWORD PTR [esi+0xc]
  4252c7:	mov    dl,0x68
  4252c9:	add    BYTE PTR [eax],al
  4252cb:	add    eax,DWORD PTR [eax]
  4252cd:	add    DWORD PTR [eax],0xffffffd4
  4252d0:	inc    esp
  4252d1:	clc    
  4252d2:	inc    DWORD PTR [eax]
  4252d4:	add    BYTE PTR [edi-0x30],bl
  4252d7:	pop    eax
  4252d8:	push   es
  4252d9:	add    bh,bh
  4252db:	call   0xb54152e0
  4252e0:	shl    ebx,1
  4252e2:	inc    DWORD PTR [eax]
  4252e4:	mov    DWORD PTR [ebx-0x88ed17],edi
  4252ea:	push   DWORD PTR [edi-0x29ff0001]
  4252f0:	and    eax,0xffff94
  4252f5:	xor    al,0xef
  4252f7:	xchg   edi,eax
  4252f8:	icebp  
  4252f9:	inc    DWORD PTR [eax]
  4252fb:	lds    eax,FWORD PTR [ebx-0x40830100]
  425301:	into   
  425302:	int3   
  425303:	add    bh,bh
  425305:	add    ch,BYTE PTR [esi+0x6d]
  425308:	inc    DWORD PTR gs:[eax]
  42530b:	push   esi
  42530c:	add    bh,bh
  42530e:	(bad)  
  42530f:	cmp    edx,esp
  425311:	sub    DWORD PTR [eax],eax
  425313:	add    BYTE PTR [ebx-0x502bfa83],al
  425319:	(bad)  
  42531a:	push   DWORD PTR [ebx]
  42531c:	(bad)  
  42531d:	(bad)  
  42531e:	call   DWORD PTR [edi]
  425320:	inc    esp
  425321:	jae    0x425322
  425323:	add    BYTE PTR [eax],al
  425325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425326:	inc    ebp
  425327:	inc    eax
  425328:	xor    al,0x0
  42532a:	add    DWORD PTR [ebp+0x7ecc0000],0xb
  425331:	sahf   
  425332:	add    bh,bh
  425334:	adc    DWORD PTR [eax+0x50],0x4e
  425338:	mov    bh,bh
  42533a:	add    BYTE PTR [ecx-0x18ff0001],dl
  425340:	sbb    BYTE PTR [ebx+0x718383ff],cl
  425346:	sub    BYTE PTR [ecx-0x55],dh
  425349:	add    BYTE PTR [eax],al
  42534b:	jp     0x42534d
  42534d:	add    ah,cl
  42534f:	mov    esp,0x83ff5573
  425354:	sbb    DWORD PTR [ecx-0x72],0x29
  425358:	pop    edi
  425359:	int3   
  42535a:	(bad)  
  42535b:	mov    esp,0xd500ff00
  425360:	pop    ebx
  425361:	xchg   ecx,eax
  425362:	(bad)  
  425363:	(bad)  
  425364:	jmp    DWORD PTR ds:0x6418a9
  42536a:	jmp    DWORD PTR [ebx]
  42536c:	int3   
  42536d:	add    BYTE PTR [eax],al
  42536f:	retf   
  425370:	out    0xb0,eax
  425372:	dec    DWORD PTR [ecx+0xc50f7ff]
  425378:	inc    BYTE PTR [ebx-0x6834]
  42537e:	(bad)  
  42537f:	jmp    0xffc588ff
  425384:	(bad)  
  425385:	mov    esi,0xcc636b6f
  42538a:	int3   
  42538b:	scas   eax,DWORD PTR es:[edi]
  42538c:	(bad)  
  42538d:	dec    esp
  42538f:	and    DWORD PTR ds:0xff8300f5,ebp
  425395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425396:	ja     0x4253cb
  425398:	xchg   edx,eax
  425399:	add    bh,bh
  42539b:	mov    edi,0xff83ffff
  4253a0:	cwde   
  4253a1:	xchg   DWORD PTR [eax],eax
  4253a3:	inc    DWORD PTR [eax]
  4253a5:	mov    bl,0x1c
  4253a7:	sub    eax,0x98ff896a
  4253ac:	cmp    edi,0xffffffff
  4253af:	xor    DWORD PTR [eax+esi*8-0x34],ebx
  4253b3:	(bad)  
  4253b4:	inc    DWORD PTR [eax-0x7cd424e9]
  4253ba:	jmp    ebp
  4253bc:	(bad)  
  4253bd:	(bad)  
  4253be:	dec    DWORD PTR [ecx-0xcf42]
  4253c4:	mov    DWORD PTR [esi-0x7c11c830],ecx
  4253ca:	add    BYTE PTR [ebx-0x1],bl
  4253cd:	(bad)  
  4253ce:	(bad)  
  4253cf:	fidivr WORD PTR [eax-0xa2]
  4253d5:	xchg   ebx,esp
  4253d7:	and    dh,ah
  4253d9:	(bad)  
  4253da:	(bad)  
  4253db:	(bad)  
  4253dd:	int3   
  4253de:	add    DWORD PTR [esi+0x40],0xffffffb7
  4253e2:	(bad)  
  4253e3:	dec    esp
  4253e5:	je     0x4253c6
  4253e7:	xor    eax,0xca8383cc
  4253ec:	add    DWORD PTR [eax],0xffffffff
  4253ef:	rcl    DWORD PTR [eax-0xff0066],cl
  4253f5:	rcl    DWORD PTR [esi-0x2b],1
  4253f8:	fdivr  st,st(7)
  4253fa:	int3   
  4253fb:	int    0xff
  4253fd:	(bad)  
  4253fe:	call   DWORD PTR [ebp-0x4e]
  425401:	xchg   edi,eax
  425402:	int3   
  425403:	dec    esp
  425405:	fisub  WORD PTR [esi]
  425407:	out    dx,eax
  425408:	lea    ecx,[ecx+0x74ff]
  42540e:	add    BYTE PTR [edi-0x7ccab0],al
  425414:	int3   
  425415:	push   edx
  425416:	imul   ebx,DWORD PTR [eax+ebx*2],0x0
  42541a:	call   FWORD PTR [edx+0x6affff00]
  425420:	xlat   BYTE PTR ds:[ebx]
  425421:	in     al,0x0
  425423:	int3   
  425424:	add    BYTE PTR [eax-0x36],bl
  425427:	test   al,0x98
  425429:	cmp    edi,0xffffffd9
  42542c:	add    bh,bh
  42542e:	add    BYTE PTR [ebp-0x33008b74],dl
  425434:	add    BYTE PTR [edi+0x7],bl
  425437:	sbb    ch,bl
  425439:	mov    edi,edi
  42543b:	inc    ecx
  42543c:	add    bh,bh
  42543e:	or     DWORD PTR [edi-0x33de31],0x0
  425445:	push   cs
  425446:	xchg   edx,eax
  425447:	xor    ch,BYTE PTR [edi+0x0]
  42544a:	add    ch,ch
  42544c:	add    bh,bh
  42544e:	add    BYTE PTR [ecx],ah
  425450:	pop    esi
  425451:	in     al,0xff
  425453:	dec    DWORD PTR [ecx+0x570ceb8f]
  425459:	int3   
  42545a:	(bad)  
  42545b:	cmp    al,0xff
  42545d:	dec    esp
  42545f:	or     eax,0x8300abf4
  425464:	add    bl,cl
  425466:	das    
  425467:	test   BYTE PTR [edx-0x7d],0xff
  42546b:	xchg   DWORD PTR [ebx-0xeee7c01],eax
  425471:	into   
  425472:	dec    DWORD PTR [ecx+0x183ad4ff]
  425478:	mov    ds:0x893bff83,eax
  42547d:	int3   
  42547e:	call   FWORD PTR [ebp-0x31]
  425481:	xor    eax,0x8d89ff00
  425486:	pop    ebp
  425487:	mov    ecx,0xb100ff95
  42548c:	mov    DWORD PTR [ecx+0x1c3846ff],ecx
  425492:	inc    DWORD PTR [eax]
  425494:	(bad)  
  425495:	sti    
  425496:	arpl   WORD PTR [ebp-0x31],dx
  425499:	add    ah,cl
  42549b:	sbb    al,0xff
  42549d:	int3   
  42549e:	inc    DWORD PTR [ebp+0x57]
  4254a1:	push   ds
  4254a2:	add    BYTE PTR [eax],al
  4254a4:	cmp    DWORD PTR [edx-0x57],0x1
  4254a8:	sbb    eax,0xffff8900
  4254ad:	add    BYTE PTR [eax],al
  4254af:	leave  
  4254b0:	(bad)  
  4254b3:	(bad)  
  4254b4:	call   edx
  4254b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254b7:	mov    DWORD PTR [eax],eax
  4254b9:	(bad)  
  4254ba:	inc    DWORD PTR [ebx-0x33000001]
  4254c0:	jmp    DWORD PTR ds:0xcca2cc
  4254c6:	fsubr  st,st(2)
  4254c8:	(bad)  
  4254c9:	jmp    FWORD PTR ds:0x833d0b
  4254cf:	ror    ah,1
  4254d1:	rol    DWORD PTR [eax],cl
  4254d3:	jle    0x4254d5
  4254d5:	add    BYTE PTR [edx],dh
  4254d7:	sti    
  4254d8:	add    BYTE PTR [eax],al
  4254da:	fcmovu st,st(7)
  4254dc:	sbb    eax,0x39ccff
  4254e1:	dec    eax
  4254e2:	jmp    FWORD PTR [edi+edi*8-0xa4a601]
  4254e9:	dec    ebx
  4254eb:	or     ecx,ebx
  4254ed:	inc    DWORD PTR [eax]
  4254ef:	pop    edx
  4254f0:	mov    DWORD PTR ds:0x8383d2ff,eax
  4254f6:	pop    edx
  4254f7:	and    eax,0x359bffff
  4254fc:	pusha  
  4254fd:	(bad)  
  4254fe:	jmp    DWORD PTR [ecx-0x26338c7d]
  425504:	(bad)  
  425505:	call   FWORD PTR [ecx-0x5e7cffb7]
  42550b:	jg     0x4254db
  42550d:	add    DWORD PTR [eax],0x28
  425510:	call   DWORD PTR [edx]
  425512:	dec    DWORD PTR [eax-0x1]
  425515:	add    BYTE PTR [ecx+0x4200ffff],al
  42551b:	push   DWORD PTR [eax+eax*1+0x0]
  42551f:	and    DWORD PTR [eax],eax
  425521:	fdiv   st(7),st
  425523:	pop    ss
  425524:	cmp    edi,0xffffffe6
  425527:	fiadd  DWORD PTR [eax]
  425529:	call   FWORD PTR [ebp+eiz*1-0x4c]
  42552d:	inc    DWORD PTR [eax]
  42552f:	aas    
  425530:	add    BYTE PTR [eax-0x4801],dl
  425536:	inc    ecx
  425537:	mov    esp,0xbbb7ff00
  42553c:	add    eax,0x8332ff89
  425541:	scas   al,BYTE PTR es:[edi]
  425542:	add    dh,ch
  425544:	add    ah,cl
  425546:	mov    ecx,0xb2ffffef
  42554b:	loop   0x425555
  42554d:	add    bh,bh
  42554f:	dec    ebp
  425550:	add    BYTE PTR [esi-0x7d],al
  425553:	jmp    0xffff:0x8b4fccff
  42555a:	pushf  
  42555b:	call   0xbdff:0x7400ff40
  425562:	add    ebp,0xffffff89
  425565:	sbb    DWORD PTR [eax+0x1d],0x0
  425569:	call   FWORD PTR [eax]
  42556b:	xor    DWORD PTR [ebp-0x7d],edi
  42556e:	adc    DWORD PTR [edi-0x40764f00],0xffffffcc
  425575:	mov    DWORD PTR [ebx],esi
  425577:	push   edi
  425578:	inc    DWORD PTR [eax]
  42557a:	and    esp,DWORD PTR ds:0x60ffff1e
  425580:	jmp    ecx
  425582:	call   FWORD PTR [edx]
  425584:	add    bh,bh
  425586:	repnz cmp bh,0xff
  42558a:	or     dl,BYTE PTR [ebp+0x6e]
  42558d:	add    bh,bh
  42558f:	mov    cl,0x0
  425591:	and    cl,BYTE PTR [ecx+0x7f00cc8e]
  425597:	xchg   esi,eax
  425598:	add    BYTE PTR [ebx+0x836cda],al
  42559e:	call   edi
  4255a0:	add    BYTE PTR [eax-0x7d],al
  4255a3:	adc    eax,DWORD PTR [ebx-0x76ae3801]
  4255a9:	call   esi
  4255ab:	or     edx,esp
  4255ad:	(bad)  
  4255ae:	(bad)  
  4255af:	in     eax,dx
  4255b0:	mov    DWORD PTR [esi],ebp
  4255b2:	call   DWORD PTR [eax+eax*1-0x62f101]
  4255b9:	add    BYTE PTR [edi-0x7c00ee1e],dl
  4255bf:	bound  eax,QWORD PTR [ebx-0x24005e]
  4255c5:	jmp    FWORD PTR [ebx+0x19]
  4255c8:	mov    DWORD PTR [eax],eax
  4255ca:	cmp    BYTE PTR [eax+ecx*8+0x0],ah
  4255ce:	call   DWORD PTR ds:0xeecc0a00
  4255d4:	inc    DWORD PTR [eax]
  4255d6:	loope  0x42558a
  4255d8:	(bad)  
  4255d9:	jmp    FWORD PTR [edx-0x7c00c592]
  4255df:	pop    ebx
  4255e0:	add    BYTE PTR [ecx-0x1],bh
  4255e3:	mov    ch,0xff
  4255e5:	jmp    DWORD PTR [ebx+0x4789ffb0]
  4255eb:	(bad)
  4255ee:	add    al,bl
  4255f0:	(bad)  
  4255f1:	cmp    BYTE PTR [ebx-0x7d],al
  4255f7:	inc    ecx
  4255f8:	repnz dec eax
  4255fa:	adc    BYTE PTR [eax+0x0],al
  4255fd:	and    DWORD PTR [ebx],0xffffff83
  425600:	jmp    DWORD PTR [edi+0x69]
  425603:	int3   
  425604:	add    bh,bh
  425606:	call   DWORD PTR [ebx-0x20]
  425609:	pusha  
  42560a:	add    DWORD PTR [ecx+0xa100ff],eax
  425610:	or     al,0x0
  425612:	mov    DWORD PTR [eax-0x66],esp
  425615:	int3   
  425616:	xor    DWORD PTR [ebx+0x9714ff],eax
  42561c:	add    ah,cl
  42561e:	mov    ebx,0xffffb846
  425623:	clc    
  425624:	cs add al,bl
  425627:	add    bh,bh
  425629:	pop    ss
  42562a:	mov    ebp,0xf4ff00ff
  42562f:	out    0x0,al
  425631:	mov    ebx,0xaa7a00
  425636:	inc    esp
  425637:	add    ah,cl
  425639:	mov    esp,ecx
  42563b:	sub    DWORD PTR [esi],esi
  42563d:	dec    DWORD PTR [eax+eax*1]
  425640:	jmp    edx
  425642:	jmp    DWORD PTR [edx-0x4b]
  425645:	jmp    DWORD PTR [ebx-0x77]
  425648:	int3   
  425649:	push   ss
  42564a:	add    BYTE PTR [ebx+ecx*2-0x1],dl
  42564e:	push   0xccd600cc
  425653:	div    DWORD PTR [ecx-0x77]
  425656:	sub    al,BYTE PTR [eax]
  425658:	(bad)  
  425659:	(bad)  
  42565b:	stos   DWORD PTR es:[edi],eax
  42565c:	push   edx
  42565d:	int3   
  42565e:	mov    es,WORD PTR [eax]
  425660:	add    BYTE PTR [eax],al
  425662:	call   FWORD PTR [ebx]
  425664:	mov    esp,0xff001e83
  425669:	xchg   edi,edi
  42566b:	in     eax,dx
  42566c:	mov    cl,0xff
  42566e:	add    bh,bh
  425670:	and    DWORD PTR [ebx-0x34],0xffffffd4
  425674:	add    bh,bh
  425676:	(bad)  
  425678:	add    BYTE PTR [eax],bl
  42567a:	call   FWORD PTR [esi+0x4a]
  42567d:	add    cl,bl
  42567f:	(bad)  
  425680:	inc    DWORD PTR [ebx-0x77]
  425683:	pop    ss
  425684:	xchg   esi,eax
  425685:	int3   
  425686:	(bad)  
  425687:	(bad)  
  425688:	call   FWORD PTR [ebx+eax*4-0x63003bd8]
  42568f:	cmp    edi,0xffffffb2
  425692:	add    bh,al
  425694:	rol    BYTE PTR [eax],1
  425696:	jmp    0x504c:0xf60000
  42569d:	add    BYTE PTR [ebx+eax*4],ah
  4256a0:	(bad)  
  4256a1:	jns    0x4256a3
  4256a3:	sub    ebp,DWORD PTR [ebx]
  4256a5:	add    BYTE PTR [edi],al
  4256a7:	(bad)  
  4256a8:	(bad)  
  4256a9:	jge    0x4256ab
  4256ab:	fiadd  WORD PTR [ecx]
  4256ad:	xor    ebx,0xffffff83
  4256b0:	add    BYTE PTR [edi+edi*8],dl
  4256b3:	and    edx,DWORD PTR [ebx-0xffcf00]
  4256b9:	mov    BYTE PTR [eax],al
  4256bb:	fdiv   QWORD PTR [eax+eax*1]
  4256be:	add    DWORD PTR [eax],0xffffff83
  4256c1:	xchg   bh,bh
  4256c3:	xor    bl,BYTE PTR [esi]
  4256c5:	add    BYTE PTR [edi-0x3b0034],al
  4256cb:	xor    al,0xc6
  4256cd:	add    BYTE PTR [ebx],ch
  4256cf:	add    BYTE PTR [eax],al
  4256d1:	cdq    
  4256d2:	sub    DWORD PTR [edi],0xffffff87
  4256d5:	or     DWORD PTR [ebx-0x33590077],0x69
  4256dc:	call   0x8995:0x83ff23ff
  4256e3:	pop    ebp
  4256e4:	lods   al,BYTE PTR ds:[esi]
  4256e5:	mov    DWORD PTR [edi-0x720034],edx
  4256eb:	stc    
  4256ec:	cmp    al,BYTE PTR [eax]
  4256ee:	jle    0x425673
  4256f0:	add    ah,ah
  4256f2:	int3   
  4256f3:	pop    ss
  4256f4:	(bad)  
  4256f5:	jmp    DWORD PTR [eax+eax*1+0x2bff23ff]
  4256fc:	push   ss
  4256fd:	add    dh,cl
  4256ff:	dec    esp
  425701:	mov    ds:0x8902eaff,eax
  425706:	daa    
  425707:	add    bh,bh
  425709:	out    0xff,al
  42570b:	mov    BYTE PTR [ecx],dh
  42570d:	add    BYTE PTR [ecx-0x7d],al
  425710:	(bad)  
  425711:	cmp    DWORD PTR [ebx+0x1d007ddb],eax
  425717:	mov    edi,edi
  425719:	dec    edi
  42571a:	push   eax
  42571c:	mov    edi,edi
  42571e:	js     0x42571f
  425720:	call   FWORD PTR [esi]
  425722:	call   FWORD PTR [edi-0xb1000b]
  425728:	jmp    FWORD PTR [eax-0x34]
  42572b:	ret    
  42572c:	dec    eax
  42572d:	call   FWORD PTR [edi+0x2ffff]
  425733:	jo     0x42579e
  425735:	add    BYTE PTR [ebp-0xb10001],dh
  42573b:	jp     0x42571b
  42573d:	call   eax
  42573f:	(bad)  
  425740:	(bad)  
  425741:	out    dx,al
  425742:	add    ch,cl
  425744:	jl     0x425746
  425746:	mov    cl,ah
  425748:	push   DWORD PTR ds:0xffcff583
  42574e:	cmc    
  42574f:	(bad)  
  425750:	call   DWORD PTR [ebx-0x2d0f34]
  425756:	call   0x8370585a
  42575b:	js     0x4257d0
  42575d:	add    dl,dl
  42575f:	inc    DWORD PTR [eax]
  425761:	push   cs
  425762:	call   FWORD PTR [ebx]
  425764:	nop
  425765:	add    BYTE PTR [edi+edi*8+0x2cffbf83],ch
  42576c:	iret   
  42576d:	dec    DWORD PTR [ebp-0x1]
  425770:	add    BYTE PTR [ecx-0x1],dh
  425773:	pop    eax
  425774:	mov    al,ds:0xff91ff
  425779:	mov    ?,edi
  42577b:	outs   dx,DWORD PTR ds:[esi]
  42577c:	sub    ecx,DWORD PTR [ecx-0x517c76b7]
  425782:	inc    edi
  425784:	ds (bad) 
  425786:	std    
  425787:	inc    DWORD PTR [eax]
  425789:	out    dx,al
  42578a:	(bad)  
  42578b:	mov    esp,0xffb6ff65
  425790:	or     edi,0xffffffff
  425793:	leave  
  425794:	cli    
  425795:	cmp    DWORD PTR [eax],0xffffffff
  425798:	sbb    DWORD PTR [edx+0x0],0x35
  42579c:	pop    ecx
  42579d:	mov    DWORD PTR [ecx],ebp
  42579f:	add    bh,bh
  4257a1:	out    dx,al
  4257a2:	xor    DWORD PTR [edx-0x9500bd],0xffffffcc
  4257a9:	lea    eax,[eax]
  4257ab:	rol    DWORD PTR [edi+edi*8+0x43],0xff
  4257b0:	jmp    DWORD PTR [edx]
  4257b2:	push   ebp
  4257b4:	lds    eax,FWORD PTR [eax]
  4257b6:	push   0xcc1bff00
  4257bb:	clc    
  4257bc:	jb     0x4257bd
  4257be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257bf:	add    DWORD PTR [ebx+0x7869006a],0xffffffff
  4257c6:	inc    edx
  4257c7:	(bad)  
  4257c8:	(bad)  
  4257c9:	jle    0x4257ca
  4257cb:	push   ecx
  4257cc:	repz inc DWORD PTR [edi-0x1]
  4257d0:	mov    ecx,esp
  4257d2:	add    BYTE PTR [edx],dh
  4257d4:	lock add BYTE PTR [ebx-0x100001],dl
  4257db:	adc    eax,0xff7a0052
  4257e0:	dec    DWORD PTR [esi+0x0]
  4257e3:	test   DWORD PTR [eax-0x7c009401],ebx
  4257e9:	and    DWORD PTR [eax],eax
  4257eb:	dec    eax
  4257ec:	out    dx,eax
  4257ed:	jmp    DWORD PTR [ecx]
  4257ef:	int3   
  4257f0:	call   DWORD PTR [ebx-0x333f6077]
  4257f6:	ins    BYTE PTR es:[edi],dx
  4257f7:	(bad)  
  4257f8:	call   DWORD PTR [edx+0xc89200]
  4257fe:	sub    al,0xff
  425800:	push   DWORD PTR [eax+0x0]
  425803:	sub    al,0x9
  425805:	add    BYTE PTR [eax-0x77],bl
  425808:	int3   
  425809:	inc    esp
  42580a:	jmp    FWORD PTR [edi+edx*1+0xcc11ff]
  425811:	xchg   bh,bh
  425813:	mov    al,0x29
  425815:	(bad)  
  425816:	fiadd  DWORD PTR [eax]
  425818:	inc    DWORD PTR [eax]
  42581a:	int3   
  42581b:	sti    
  42581c:	sbb    DWORD PTR [eax],eax
  42581e:	imul   edi,edi,0xffffff83
  425821:	call   FWORD PTR es:[edi-0x6a]
  425825:	mov    esi,edx
  425827:	(bad)  
  425828:	(bad)  
  425829:	sti    
  42582a:	add    BYTE PTR [esi],dl
  42582c:	test   DWORD PTR [ebx+0x18cc002b],0xff8fec83
  425836:	sub    DWORD PTR [ebx-0x1b76a07d],eax
  42583c:	(bad)  
  42583d:	inc    DWORD PTR [eax-0x1]
  425840:	add    BYTE PTR [ecx+0x0],ah
  425843:	pop    edx
  425844:	arpl   sp,cx
  425846:	nop
  425847:	add    BYTE PTR [eax],al
  425849:	inc    esp
  42584a:	push   DWORD PTR [edx+0x69]
  42584d:	int3   
  42584e:	sbb    edi,edi
  425850:	push   DWORD PTR [eax+0x0]
  425853:	mov    al,0x53
  425855:	int3   
  425856:	or     DWORD PTR [eax],eax
  425858:	or     edx,0xffffffff
  42585b:	popf   
  42585c:	lea    eax,[eax]
  42585e:	sbb    al,BYTE PTR [eax]
  425860:	call   FWORD PTR [ecx-0x1]
  425863:	mov    al,ds:0x8946cca7
  425868:	or     DWORD PTR [ebx+0x2760ff],0x5d
  42586f:	add    BYTE PTR [ebx+0x1105cc7b],al
  425875:	jmp    DWORD PTR [edi+edi*8]
  425878:	push   DWORD PTR [ebx+0x66bff]
  42587e:	fadd   QWORD PTR [ebx+0x35ff4fff]
  425884:	cdq    
  425885:	add    BYTE PTR [ebx-0x7c763400],ah
  42588b:	xchg   esi,eax
  42588c:	lea    eax,[eax]
  42588e:	pop    ebp
  42588f:	int3   
  425890:	add    bh,dh
  425892:	jmp    FWORD PTR [ebp-0x48ff6b]
  425898:	(bad)  
  425899:	jmp    0xcc7e:0xff56eaff
  4258a0:	add    BYTE PTR [ebp+0xaa0aff],bh
  4258a6:	mov    esp,0xff79cc00
  4258ab:	dec    eax
  4258ac:	inc    edx
  4258ad:	(bad)  
  4258ae:	in     eax,dx
  4258af:	add    bh,bh
  4258b1:	mov    ch,0xff
  4258b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258b4:	add    DWORD PTR [ecx+0x4cff0003],ecx
  4258ba:	inc    DWORD PTR ds:0x52836f
  4258c0:	push   esp
  4258c2:	add    BYTE PTR [ebp-0xd],dl
  4258c5:	adc    DWORD PTR [ecx-0x38ff01],0xf
  4258cc:	sbb    DWORD PTR [ebx+0x3eff00bf],eax
  4258d2:	push   DWORD PTR [esi+eiz*1]
  4258d5:	cmp    DWORD PTR [eax],0xffffffcc
  4258d8:	sbb    esp,0xffffffff
  4258db:	push   esi
  4258dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258dd:	jmp    DWORD PTR [esi+0x0]
  4258e0:	add    BYTE PTR [ecx+0xcdb00],dl
  4258e6:	int    0xcc
  4258e8:	push   DWORD PTR [edx-0x1]
  4258eb:	lea    ebx,[ebx+0xff1a83]
  4258f1:	cmc    
  4258f2:	jmp    eax
  4258f4:	xor    DWORD PTR [ebx+0x6a83007b],eax
  4258fa:	mov    DWORD PTR [ebx],ebx
  4258fc:	inc    edi
  4258fd:	int3   
  4258fe:	pop    ss
  4258ff:	add    BYTE PTR [ebx+0x6a55ffc3],al
  425905:	jmp    DWORD PTR [ebx-0x77]
  425908:	jmp    DWORD PTR [esi]
  42590a:	jmp    FWORD PTR [eax-0x74]
  42590d:	(bad)  
  42590e:	jge    0x42590f
  425910:	push   DWORD PTR [ecx]
  425912:	add    BYTE PTR [esi+0x23],bh
  425915:	add    BYTE PTR [ebx-0x77],ch
  425918:	add    BYTE PTR [edi+edi*8],cl
  42591b:	dec    edx
  42591c:	mov    edi,0x83ffe283
  425921:	jnp    0x4258a6
  425923:	es add edi,edi
  425926:	sahf   
  425927:	inc    DWORD PTR [eax]
  425929:	inc    eax
  42592a:	(bad)  
  42592b:	jp     0x4258ed
  42592d:	sub    DWORD PTR [ebx],0xffffffff
  425930:	mov    DWORD PTR [edx-0x7c7ed001],ecx
  425936:	outs   dx,DWORD PTR ds:[esi]
  425937:	inc    DWORD PTR [ebx+0x45b0cc4a]
  42593d:	jmp    DWORD PTR [eax-0x1]
  425940:	add    dh,bh
  425942:	call   DWORD PTR [ebp-0xd9ffcd]
  425948:	add    BYTE PTR [eax],cl
  42594a:	add    BYTE PTR [edi-0xb3337e],bh
  425950:	push   ecx
  425952:	call   FWORD PTR [ecx+0xafffb2]
  425958:	add    cl,bh
  42595a:	add    BYTE PTR [esi+ecx*4-0x1],dl
  42595e:	pop    ebx
  42595f:	add    BYTE PTR [eax],al
  425961:	cld    
  425962:	jmp    FWORD PTR [eax-0x4b]
  425965:	mov    edi,edi
  425967:	inc    DWORD PTR [ebx-0x5e5d00e3]
  42596d:	add    BYTE PTR [ecx-0x430100],bl
  425973:	pushf  
  425974:	(bad)  
  425975:	dec    esi
  425977:	add    bh,bh
  425979:	call   FWORD PTR cs:[ebx-0x3a]
  42597d:	add    BYTE PTR [edx-0xcf0001],al
  425983:	fst    st(2)
  425985:	dec    DWORD PTR [ebp-0x7c9b0100]
  42598b:	pop    ebp
  42598c:	mov    bl,0x0
  42598e:	out    dx,al
  42598f:	mov    DWORD PTR [eax],eax
  425991:	or     eax,0xff6b0eff
  425996:	cmc    
  425997:	inc    DWORD PTR [ebx-0x6fb8ff5a]
  42599d:	push   DWORD PTR [ebx-0x840100]
  4259a3:	hlt    
  4259a4:	sbb    bh,bh
  4259a6:	pop    esp
  4259a7:	(bad)  
  4259a8:	push   DWORD PTR [esi]
  4259aa:	add    ebx,0xffffffb7
  4259ad:	add    DWORD PTR [edi-0x76720000],0x59
  4259b4:	lea    eax,[eax]
  4259b6:	pop    edi
  4259b7:	or     DWORD PTR [ecx+0x513783b8],0xffffff83
  4259be:	or     DWORD PTR [ebx+0x4683c200],eax
  4259c4:	push   edx
  4259c5:	jmp    ebp
  4259c7:	add    ah,cl
  4259c9:	inc    ebp
  4259ca:	add    BYTE PTR [edi+eiz*8+0x0],cl
  4259ce:	sbb    eax,0xfff00000
  4259d3:	push   ecx
  4259d4:	into   
  4259d5:	add    BYTE PTR [ebp-0x1],ch
  4259d8:	add    BYTE PTR [eax+eax*1+0x3c83faec],bl
  4259df:	add    DWORD PTR [ebx-0x669b7646],0x0
  4259e6:	adc    edi,edi
  4259e8:	jmp    FWORD PTR [eax+eax*1-0x79]
  4259ec:	es call eax
  4259ef:	add    bh,bh
  4259f1:	push   ebp
  4259f2:	mov    DWORD PTR [edx-0x7cfb00da],ebx
  4259f8:	call   DWORD PTR [esi+0x0]
  4259fb:	imul   ebp,DWORD PTR ds:0xff12ff,0xd9808349
  425a05:	push   edx
  425a07:	add    BYTE PTR [eax],al
  425a09:	jnp    0x425a0a
  425a0b:	sub    al,0xb5
  425a0d:	add    BYTE PTR [ebx+0x0],ch
  425a10:	int3   
  425a11:	fs add dl,bh
  425a14:	mov    eax,ds:0x83ff2fcc
  425a19:	sbb    eax,0xffc1cbff
  425a1e:	popa   
  425a1f:	dec    DWORD PTR [ecx-0x73967622]
  425a25:	add    BYTE PTR [eax-0x1],bh
  425a28:	call   FWORD PTR [ebp-0xe4d101]
  425a2e:	popf   
  425a2f:	cmp    edi,0xffffffa9
  425a32:	inc    DWORD PTR [esi]
  425a34:	jge    0x425a35
  425a36:	mov    al,ds:0x83c2ff00
  425a3b:	(bad)  
  425a3c:	fild   WORD PTR [eax]
  425a3e:	sti    
  425a3f:	add    BYTE PTR [ebx+0x160ff06],al
  425a45:	sbb    DWORD PTR [ecx-0x7d],0xffffffff
  425a49:	std    
  425a4a:	(bad)  
  425a4b:	std    
  425a4c:	out    dx,eax
  425a4d:	call   FWORD PTR [esp+ecx*8+0x0]
  425a51:	and    DWORD PTR [ebx+0x2affa0f3],eax
  425a57:	cmp    edi,0x66
  425a5a:	call   FWORD PTR [esp+eiz*8+0xffd489]
  425a61:	out    dx,al
  425a62:	add    BYTE PTR [edx],cl
  425a64:	call   0xcc431869
  425a69:	adc    al,0x89
  425a6b:	inc    esi
  425a6c:	mov    al,ds:0x890095ff
  425a71:	outs   dx,BYTE PTR ds:[esi]
  425a72:	add    BYTE PTR [ebx+0xe100b9],ah
  425a78:	mov    DWORD PTR [ebp+0xe02c83],ebx
  425a7e:	or     al,BYTE PTR [eax]
  425a80:	mov    DWORD PTR [edi],edi
  425a82:	add    BYTE PTR [eax-0x27c88],dh
  425a88:	add    BYTE PTR [eax+eax*1-0xe],dl
  425a8c:	stc    
  425a8d:	(bad)  
  425a8e:	stc    
  425a8f:	add    bh,bh
  425a91:	xchg   ecx,eax
  425a92:	mov    eax,eax
  425a94:	dec    eax
  425a95:	add    eax,0xffffff83
  425a98:	and    DWORD PTR [edx],0xffffffff
  425a9b:	es sub al,0xff
  425a9e:	inc    DWORD PTR es:[eax]
  425aa1:	xchg   ebx,eax
  425aa2:	add    BYTE PTR [edx],dl
  425aa4:	sub    DWORD PTR [bx+si-0x1],0xffffffcc
  425aa9:	test   al,0x83
  425aab:	loope  0x425a2e
  425aad:	add    al,ah
  425aaf:	add    BYTE PTR [eax],al
  425ab1:	xor    edi,edi
  425ab3:	(bad)  
  425ab4:	fwait
  425ab5:	(bad)  
  425ab6:	ds cmp edi,0xffffff85
  425aba:	add    BYTE PTR [esi+0x1c],al
  425abd:	call   FWORD PTR [esi-0x76d23301]
  425ac3:	test   ebp,0xccffb8ff
  425ac9:	ss add dh,dh
  425acc:	loope  0x425acd
  425ace:	add    WORD PTR [eax],0xffd0
  425ad2:	push   ecx
  425ad4:	cmp    al,0xff
  425ad6:	adc    edi,edi
  425ad8:	xor    DWORD PTR [ebx],0xffffffff
  425adb:	ss scas eax,DWORD PTR es:[edi]
  425add:	inc    DWORD PTR [edx]
  425adf:	dec    DWORD PTR [ecx-0x765b00dd]
  425ae5:	(bad)  
  425ae6:	fiadd  WORD PTR [ebx+0x2100ea00]
  425aec:	sti    
  425aed:	jmp    ebx
  425aef:	dec    esp
  425af1:	push   cs
  425af2:	(bad)  
  425af3:	jmp    0x425a9c
  425af5:	add    BYTE PTR [ecx+0x0],al
  425af8:	inc    DWORD PTR [edi-0x1]
  425afb:	pop    ecx
  425afc:	aad    0x83
  425afe:	xchg   ebp,eax
  425aff:	add    ah,cl
  425b01:	stc    
  425b02:	inc    DWORD PTR [eax-0x2500a0]
  425b08:	add    DWORD PTR [ebp-0x1],0xffffffea
  425b0c:	int3   
  425b0d:	add    BYTE PTR [ecx+0x7e00ff],al
  425b13:	jg     0x425aeb
  425b15:	jmp    esp
  425b17:	inc    DWORD PTR [eax]
  425b19:	cmp    al,0x83
  425b1b:	lahf   
  425b1c:	push   eax
  425b1d:	int3   
  425b1e:	repz inc DWORD PTR [eax]
  425b21:	into   
  425b22:	jmp    DWORD PTR [eax-0x2600a8]
  425b28:	inc    DWORD PTR [ecx]
  425b2a:	add    dh,bh
  425b2c:	addr16 mov ebx,edi
  425b2f:	add    bh,bh
  425b31:	pop    edx
  425b32:	sbb    DWORD PTR [esi],0xc
  425b35:	add    BYTE PTR [esi-0xc47c77],ah
  425b3b:	adc    cl,bh
  425b3d:	(bad)  
  425b3e:	jmp    0x425ac3
  425b40:	add    BYTE PTR [ebx-0x1f6901],bh
  425b46:	mov    ecx,0xffd2ffff
  425b4b:	(bad)  
  425b4c:	fadd   QWORD PTR [eax]
  425b4e:	mov    ch,0x0
  425b50:	add    BYTE PTR [edx-0x1701],cl
  425b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b57:	add    bh,bh
  425b59:	ins    BYTE PTR es:[edi],dx
  425b5a:	add    bh,al
  425b5c:	aaa    
  425b5d:	push   esi
  425b5f:	int3   
  425b60:	add    bh,ah
  425b62:	int3   
  425b63:	cs add BYTE PTR fs:[edi+0x0],ah
  425b68:	mov    DWORD PTR [esi-0x1],esi
  425b6b:	cs xchg ecx,eax
  425b6d:	add    dh,ah
  425b6f:	add    bh,bh
  425b71:	mov    edi,edi
  425b73:	xor    edi,DWORD PTR [esi]
  425b75:	int3   
  425b76:	sbb    edi,edi
  425b78:	int3   
  425b79:	jl     0x425b7b
  425b7b:	sar    BYTE PTR [ebx+0x5f83],1
  425b81:	outs   dx,DWORD PTR ds:[esi]
  425b82:	push   DWORD PTR [edx]
  425b84:	or     eax,DWORD PTR [ebx+0x5b89ff88]
  425b8a:	dec    DWORD PTR [esi]
  425b8c:	inc    ebx
  425b8d:	add    BYTE PTR [ebp-0x1],cl
  425b90:	add    BYTE PTR [edi-0x77],dl
  425b93:	mov    bh,0x4c
  425b95:	mov    DWORD PTR [eax],ecx
  425b97:	cmp    edi,0xffffffe2
  425b9a:	add    BYTE PTR [esi],bl
  425b9c:	mov    edi,0xff0010ff
  425ba1:	addr16 push ebp
  425ba4:	fimul  DWORD PTR [ecx-0xaffff81]
  425baa:	jmp    DWORD PTR [edi-0x81ff3d]
  425bb0:	int3   
  425bb1:	xlat   BYTE PTR ds:[ebx]
  425bb2:	add    ah,ch
  425bb4:	into   
  425bb5:	int3   
  425bb6:	adc    ah,cl
  425bb8:	(bad)  
  425bb9:	std    
  425bba:	int3   
  425bbb:	call   0xfff65c5a
  425bc0:	jmp    DWORD PTR [edi+0x81e7ff]
  425bc6:	das    
  425bc7:	inc    DWORD PTR [eax]
  425bc9:	mov    es,WORD PTR [ebx+0x59ff1671]
  425bcf:	add    bh,bh
  425bd1:	enter  0xff00,0xdf
  425bd5:	sub    DWORD PTR [ecx-0x1],0xffffffff
  425bd9:	and    ecx,DWORD PTR [ecx+0x2cff4f84]
  425bdf:	add    BYTE PTR [eax],al
  425be1:	rol    BYTE PTR [ebx+0x1ff655e],0xff
  425be8:	jmp    DWORD PTR [ebx]
  425bea:	add    BYTE PTR [eax-0x71],dl
  425bed:	(bad)  
  425bee:	mov    eax,0xd383ff
  425bf3:	retf   
  425bf4:	inc    ebx
  425bf5:	push   DWORD PTR [ebx-0x76793377]
  425bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bfc:	clc    
  425bfd:	call   DWORD PTR [eax]
  425bff:	mov    edi,edi
  425c01:	outs   dx,DWORD PTR ds:[esi]
  425c02:	add    BYTE PTR [edx],al
  425c04:	in     al,0xff
  425c06:	xor    al,BYTE PTR [eax]
  425c08:	adc    DWORD PTR [ebx-0xf7e700],0x4a
  425c0f:	inc    DWORD PTR [eax]
  425c11:	xchg   edi,edi
  425c13:	clc    
  425c14:	sbb    eax,0xff007acc
  425c19:	(bad)  
  425c1b:	sub    al,0xf6
  425c1d:	int3   
  425c1e:	out    0x83,eax
  425c20:	push   eax
  425c22:	add    BYTE PTR [ecx+ecx*2-0x7c0c01],bh
  425c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c2a:	add    BYTE PTR [ebp-0x7c1f0027],ch
  425c30:	xor    DWORD PTR [edi],0xffffff83
  425c33:	daa    
  425c34:	dec    esp
  425c35:	dec    ebp
  425c37:	mov    DWORD PTR [ebx-0x7456ffd6],eax
  425c3d:	add    cl,ch
  425c3f:	add    BYTE PTR [ebx-0x6bd8001b],al
  425c45:	sbb    DWORD PTR [ebx+0x0],0xffffff83
  425c49:	add    bh,bh
  425c4b:	loopne 0x425c81
  425c4d:	(bad)  
  425c4e:	ds int3 
  425c50:	add    BYTE PTR [ecx-0x7d],ch
  425c53:	inc    ecx
  425c54:	mov    ebx,0xffabff
  425c59:	inc    ecx
  425c5a:	add    BYTE PTR [eax-0x7c2c009c],bl
  425c60:	jmp    DWORD PTR [esi+0xa5d3ff]
  425c66:	sbb    edi,edi
  425c68:	add    BYTE PTR [edx-0xf8ed01],al
  425c6e:	nop
  425c6f:	(bad)  
  425c70:	dec    ecx
  425c72:	inc    edi
  425c74:	sti    
  425c75:	inc    DWORD PTR [edi-0x1]
  425c78:	int3   
  425c79:	mov    bh,0x89
  425c7b:	lds    esp,FWORD PTR [esi]
  425c7d:	(bad)  
  425c7e:	cmp    eax,0x490000
  425c83:	jge    0x425cc6
  425c85:	call   DWORD PTR [eax+0x0]
  425c88:	jmp    FWORD PTR [ebx+0xb65cff]
  425c8e:	pop    es
  425c8f:	add    ah,cl
  425c91:	or     esp,0x1
  425c94:	xchg   ebx,eax
  425c95:	int3   
  425c96:	xchg   edi,edi
  425c98:	jmp    FWORD PTR [ecx-0x1]
  425c9b:	and    eax,0x834d0056
  425ca0:	add    BYTE PTR [edi-0x34],al
  425ca3:	mov    al,ds:0xff6bffec
  425ca8:	add    bh,bl
  425caa:	call   FWORD PTR [edi]
  425cac:	test   edi,edi
  425cae:	cli    
  425caf:	add    BYTE PTR [ecx+0xe60ff50],cl
  425cb5:	add    BYTE PTR [eax],bl
  425cb7:	inc    DWORD PTR [eax]
  425cb9:	sub    edi,edi
  425cbb:	aas    
  425cbc:	stos   BYTE PTR es:[edi],al
  425cbd:	inc    DWORD PTR [ebp-0xfff01]
  425cc3:	adc    al,0xd7
  425cc5:	sub    DWORD PTR [eax+eax*1],0xffffffff
  425cc9:	xchg   ecx,eax
  425cca:	inc    DWORD PTR [edx+0x22]
  425ccd:	push   eax
  425ccf:	add    bh,bh
  425cd1:	mov    al,ds:0xff5c6b00
  425cd6:	cs mov esp,ecx
  425cd9:	aas    
  425cda:	call   DWORD PTR [ebx-0x65]
  425cdd:	push   ecx
  425cdf:	int3   
  425ce0:	add    dl,bh
  425ce2:	mov    DWORD PTR [edi-0x1d],eax
  425ce5:	inc    DWORD PTR [edx-0x70000]
  425ceb:	cwde   
  425cec:	sub    eax,0xce00
  425cf1:	or     cl,ah
  425cf3:	stos   BYTE PTR es:[edi],al
  425cf4:	jb     0x425cf5
  425cf6:	test   edi,edi
  425cf8:	add    ah,bh
  425cfa:	add    BYTE PTR [ebx-0xc30065],ah
  425d00:	add    BYTE PTR [ecx],ah
  425d02:	add    dh,dl
  425d04:	call   0x1423208
  425d09:	sar    edi,0xf0
  425d0c:	outs   dx,BYTE PTR ds:[esi]
  425d0d:	add    BYTE PTR [ebx-0x33130100],dl
  425d13:	xor    esp,0xff11ff
  425d19:	lods   eax,DWORD PTR ds:[esi]
  425d1a:	jmp    FWORD PTR [edx]
  425d1c:	lds    eax,FWORD PTR [eax]
  425d1e:	pop    edx
  425d1f:	add    bh,bh
  425d21:	mov    bl,0xff
  425d23:	jg     0x425d2b
  425d25:	add    al,bh
  425d27:	inc    DWORD PTR [ebx+0x73bb89d8]
  425d2d:	inc    DWORD PTR [edx-0x7c150100]
  425d33:	push   cs
  425d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d35:	add    BYTE PTR [eax],ch
  425d37:	add    BYTE PTR [ecx-0x6b9400d1],cl
  425d3d:	mov    DWORD PTR [edi+edi*8-0x1],edx
  425d41:	xchg   ebx,eax
  425d42:	add    BYTE PTR [ebx+ebp*8-0xc700],bh
  425d49:	sbb    DWORD PTR [eax],eax
  425d4b:	inc    esp
  425d4c:	pop    esi
  425d4d:	call   FWORD PTR [edx]
  425d4f:	add    BYTE PTR [eax],al
  425d51:	mov    ds:0xff1a3eff,al
  425d56:	mov    al,ds:0x8364ccff
  425d5b:	repz jo 0x425ce1
  425d5e:	cmp    eax,DWORD PTR [ebx+0x6a8332ff]
  425d64:	nop
  425d65:	add    BYTE PTR [edx-0x1],dl
  425d68:	int3   
  425d69:	stos   DWORD PTR es:[edi],eax
  425d6a:	sub    DWORD PTR [ecx],0x4b
  425d6d:	call   ebp
  425d6f:	(bad)  
  425d70:	(bad)  
  425d71:	cli    
  425d72:	(bad)  
  425d73:	cmp    al,0xe7
  425d75:	push   DWORD PTR [edi-0x34]
  425d78:	cmp    DWORD PTR [edi+edi*8],0x5e
  425d7c:	jge    0x425d01
  425d7e:	sub    ecx,esp
  425d80:	(bad)  
  425d81:	jl     0x425d83
  425d83:	sahf   
  425d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d85:	mov    ecx,ecx
  425d87:	add    BYTE PTR [eax],al
  425d89:	pop    ebx
  425d8a:	mov    DWORD PTR ds:0xffe90086,esi
  425d90:	call   FWORD PTR [esi-0x34]
  425d93:	test   al,0x7
  425d95:	add    ch,dl
  425d97:	(bad)  
  425d98:	call   DWORD PTR [ebp+0x6d5aff]
  425d9e:	sbb    ecx,esp
  425da0:	mov    DWORD PTR [ebp+0xed56ff],edi
  425da6:	adc    edi,edi
  425da8:	xor    ebp,0x0
  425dab:	sub    al,0x27
  425dad:	int3   
  425dae:	push   cs
  425daf:	add    BYTE PTR [ebx+0x3887ffc8],al
  425db5:	call   FWORD PTR [esp+ecx*8+0x0]
  425db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dba:	push   DWORD PTR [ecx]
  425dbc:	pop    ecx
  425dbd:	add    dh,ah
  425dbf:	(bad)  
  425dc0:	call   DWORD PTR [ecx+0xfd1e83]
  425dc6:	repz add bh,bh
  425dc9:	xchg   DWORD PTR [eax],eax
  425dcb:	xor    eax,0x46cc37
  425dd0:	inc    DWORD PTR [ebx-0x1]
  425dd3:	cld    
  425dd4:	(bad)  
  425dd6:	push   eax
  425dd7:	add    bh,bh
  425dd9:	jmp    0xff6bb2dd
  425dde:	jnp    0x425ddf
  425de0:	call   FWORD PTR [edi+edi*8-0x23]
  425de4:	(bad)  
  425de5:	(bad)  
  425de6:	cmp    edi,edi
  425de8:	add    edx,0xffffffff
  425deb:	imul   ecx,DWORD PTR [edx],0xffffffff
  425dee:	inc    ebp
  425def:	inc    DWORD PTR [eax]
  425df1:	bound  eax,QWORD PTR [ebx+0x24ff0ed8]
  425df7:	inc    DWORD PTR [eax]
  425df9:	mov    DWORD PTR [eax],0x3837bde
  425dff:	(bad)  
  425e00:	dec    DWORD PTR [eax-0x1]
  425e03:	js     0x425db9
  425e05:	call   FWORD PTR [edi+edi*8-0x52005001]
  425e0c:	or     eax,0x834200
  425e11:	pop    edx
  425e12:	add    ch,dh
  425e14:	mov    al,0x83
  425e16:	and    bh,bh
  425e18:	dec    DWORD PTR [edx-0x1]
  425e1b:	dec    esi
  425e1c:	xchg   edx,eax
  425e1d:	jmp    FWORD PTR [ebx-0x7680ff01]
  425e23:	daa    
  425e24:	mov    esp,0xff0cff
  425e29:	lods   eax,DWORD PTR ds:[esi]
  425e2a:	(bad)  
  425e2b:	out    dx,eax
  425e2c:	scas   al,BYTE PTR es:[edi]
  425e2d:	add    BYTE PTR [eax+eax*1],dl
  425e30:	add    BYTE PTR [ebx],bl
  425e32:	add    BYTE PTR [esi+0xed00d3],ch
  425e38:	add    BYTE PTR [edi-0x1],ah
  425e3b:	dec    cx
  425e3d:	call   FWORD PTR [eax-0x1]
  425e40:	call   DWORD PTR [ecx+ecx*4]
  425e43:	mov    dl,0x2f
  425e45:	call   FWORD PTR [ecx-0x66ff01]
  425e4b:	or     ebp,edi
  425e4d:	or     DWORD PTR [edi+edi*8-0x1],0x59
  425e52:	call   ebx
  425e54:	test   edi,edi
  425e56:	mov    eax,0xff888300
  425e5b:	sbb    eax,0xcc97ccaa
  425e60:	add    al,bh
  425e62:	inc    DWORD PTR [edx-0x769176ea]
  425e68:	jmp    FWORD PTR [edx-0xb3a67d]
  425e6e:	pusha  
  425e6f:	add    bh,bh
  425e71:	es cmp edi,0xffffffa6
  425e75:	add    DWORD PTR [edx],0xffffffff
  425e78:	add    DWORD PTR [eax-0x7d],0x55
  425e7c:	add    BYTE PTR [bx+di],bl
  425e7f:	(bad)  
  425e80:	dec    DWORD PTR [esi-0xa79500]
  425e86:	add    BYTE PTR [eax],al
  425e88:	add    BYTE PTR [edx],dl
  425e8a:	inc    DWORD PTR [ebp+0x0]
  425e8d:	add    BYTE PTR [ecx-0x1],dh
  425e90:	int3   
  425e91:	es (bad) 
  425e93:	fst    DWORD PTR [ecx]
  425e95:	call   DWORD PTR [edx]
  425e97:	int3   
  425e98:	add    BYTE PTR [ebx],cl
  425e9a:	push   DWORD PTR [edi]
  425e9c:	sub    eax,0xffff07ff
  425ea1:	xrelease mov DWORD PTR [ecx-0x6a0090],edx
  425ea8:	call   DWORD PTR [eax-0x7c098d00]
  425eae:	add    DWORD PTR fs:[eax],0x3b
  425eb2:	(bad)  
  425eb3:	out    dx,eax
  425eb4:	sbb    BYTE PTR [ebx-0xc00fffe],al
  425eba:	int3   
  425ebb:	cmp    al,0x58
  425ebd:	add    BYTE PTR [ebx+0xb783ff],al
  425ec3:	or     dh,BYTE PTR [eax-0x33ff2e01]
  425ec9:	jl     0x425e4e
  425ecb:	lahf   
  425ecc:	stos   DWORD PTR es:[edi],eax
  425ecd:	(bad)  
  425ece:	(bad)  
  425ed0:	inc    DWORD PTR [ebp-0x922d00]
  425ed6:	jnp    0x425ed7
  425ed8:	push   ebx
  425eda:	add    DWORD PTR [edx+0x58],0xffffffff
  425ede:	mov    BYTE PTR [ebx+0x350017ff],0x22
  425ee5:	adc    DWORD PTR [eax-0x34],0xffffffff
  425ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425eea:	jmp    FWORD PTR [edi]
  425eec:	push   0x89009983
  425ef1:	cmp    eax,DWORD PTR [eax]
  425ef3:	jmp    0x4e00:0xff9dccbf
  425efa:	add    BYTE PTR [ebx-0x58],dl
  425efd:	add    BYTE PTR [eax],ch
  425eff:	inc    DWORD PTR [eax]
  425f01:	mov    cl,ah
  425f03:	jp     0x425f77
  425f05:	add    BYTE PTR [ebp-0x517d00],dh
  425f0b:	nop
  425f0c:	fiadd  WORD PTR [eax]
  425f0e:	stc    
  425f0f:	add    bh,bh
  425f11:	mov    ch,0xff
  425f13:	loop   0x425f46
  425f15:	(bad)  
  425f16:	stc    
  425f17:	add    ah,cl
  425f19:	lods   eax,DWORD PTR ds:[esi]
  425f1a:	add    BYTE PTR [eax+0x7a0035],dh
  425f20:	inc    DWORD PTR [eax-0x7cbb4d00]
  425f26:	push   eax
  425f27:	add    bh,bh
  425f29:	pusha  
  425f2a:	call   DWORD PTR [edx]
  425f2c:	dec    ebx
  425f2d:	push   DWORD PTR [ebx-0x1]
  425f30:	or     DWORD PTR [ecx+0x7c87ff],0xffffffb8
  425f37:	add    DWORD PTR [eax],0xffffffd2
  425f3a:	add    ch,al
  425f3c:	pop    edx
  425f3d:	adc    esp,0xffffffcc
  425f40:	add    BYTE PTR [ecx-0x7ee17d],ch
  425f46:	pop    eax
  425f47:	(bad)  
  425f48:	inc    DWORD PTR [edi]
  425f4a:	call   FWORD PTR [edi]
  425f4c:	add    edi,edi
  425f4e:	cmp    eax,DWORD PTR [eax]
  425f50:	jmp    DWORD PTR [eax-0x1]
  425f53:	in     al,dx
  425f54:	scas   eax,DWORD PTR es:[edi]
  425f55:	dec    DWORD PTR [ecx-0x1]
  425f58:	int3   
  425f59:	mov    al,BYTE PTR [eax]
  425f5b:	jns    0x425f6e
  425f5d:	(bad)  
  425f5e:	in     al,dx
  425f5f:	(bad)  
  425f60:	call   DWORD PTR [eax]
  425f62:	xor    DWORD PTR [esi],0x78
  425f65:	push   DWORD PTR [edx]
  425f67:	(bad)  
  425f68:	call   edi
  425f6a:	push   DWORD PTR [esp+eax*2-0x1]
  425f6e:	sahf   
  425f6f:	(bad)  
  425f70:	inc    DWORD PTR [ebp+0x1b8b83]
  425f76:	rol    BYTE PTR [eax],0xff
  425f79:	out    0xff,eax
  425f7b:	cld    
  425f7c:	iret   
  425f7d:	call   DWORD PTR [eax+eax*1]
  425f80:	add    dh,ch
  425f82:	add    BYTE PTR [edi+ecx*1],ah
  425f85:	add    BYTE PTR [edi+edi*8],al
  425f88:	add    BYTE PTR [edx+0x40b289],dh
  425f8e:	scas   al,BYTE PTR es:[edi]
  425f8f:	mov    edi,edi
  425f91:	add    edi,edi
  425f93:	push   ds
  425f94:	push   ds
  425f95:	call   FWORD PTR [ecx]
  425f97:	add    BYTE PTR [eax],al
  425f99:	imul   edi,edi,0x5
  425f9c:	or     bh,bh
  425f9e:	ret    0x83ff
  425fa1:	mov    WORD PTR [ecx-0x72ff7cca],cs
  425fa7:	add    bh,bh
  425fa9:	push   ebp
  425faa:	call   FWORD PTR [esi-0x40]
  425fad:	xor    DWORD PTR [edi-0x1],0xffffffff
  425fb1:	(bad)
  425fb4:	dec    ecx
  425fb5:	add    BYTE PTR [ebp-0x1],cl
  425fb8:	mov    DWORD PTR [ecx-0x1],ebx
  425fbb:	mov    esi,0x3b008a
  425fc0:	jmp    DWORD PTR [esi]
  425fc2:	jmp    DWORD PTR [ebp-0x28]
  425fc5:	mov    DWORD PTR [edx+0x0],edi
  425fc8:	call   FWORD PTR [edi]
  425fca:	dec    ebx
  425fcc:	xchg   ebx,eax
  425fcd:	jmp    DWORD PTR [edx-0x7c70ff01]
  425fd3:	ds xchg ebp,eax
  425fd5:	inc    DWORD PTR [edx-0x670100]
  425fdb:	loope  0x425f6a
  425fdd:	int3   
  425fde:	mov    DWORD PTR [ecx-0x6100e001],ecx
  425fe4:	mov    ecx,DWORD PTR [ecx-0x2100002a]
  425fea:	push   DWORD PTR [esi-0x7c2800f2]
  425ff0:	jmp    DWORD PTR [edx-0x77]
  425ff3:	outs   dx,BYTE PTR ds:[esi]
  425ff4:	mov    al,ds:0xcc8961ff
  425ff9:	pop    edi
  425ffa:	add    BYTE PTR [ebp-0xcd3352],al
  426000:	add    BYTE PTR [eax],ah
  426002:	add    BYTE PTR [ebx-0xd],bl
  426005:	mov    DWORD PTR [edi-0x7d],edx
  426008:	sbb    esp,0xffffffff
  42600b:	sbb    BYTE PTR [ebx+0x0],ah
  42600e:	gs add bh,bh
  426011:	cld    
  426012:	call   FWORD PTR [ebp-0x76ebffba]
  426018:	add    BYTE PTR [ebx],ch
  42601a:	(bad)  
  42601b:	cmp    eax,0xffacffe6
  426020:	dec    DWORD PTR [esi]
  426022:	add    al,al
  426024:	stc    
  426025:	jmp    edx
  426027:	(bad)  
  426028:	inc    DWORD PTR [ecx]
  42602a:	jmp    DWORD PTR [edi-0x7c0500aa]
  426030:	inc    edx
  426032:	add    bl,cl
  426034:	cmp    bh,bh
  426036:	add    BYTE PTR [eax],0x83
  426039:	push   ss
  42603a:	or     DWORD PTR [ecx+0x2600a1],0x0
  426041:	test   DWORD PTR [eax],eax
  426043:	rcl    DWORD PTR [ebx-0x1],0x1f
  42604a:	int3   
  42604b:	push   0x89ea0019
  426050:	xor    DWORD PTR [esi-0x1],0x51
  426054:	push   ds
  426055:	(bad)  
  426056:	clc    
  426057:	mov    edi,edi
  426059:	lea    eax,[ebx+0x41ff8122]
  42605f:	inc    DWORD PTR [eax]
  426061:	stc    
  426062:	jmp    edx
  426064:	ror    ah,1
  426066:	sti    
  426067:	add    BYTE PTR [ebx-0x72dbffa4],al
  42606d:	add    BYTE PTR [edi],ah
  42606f:	add    BYTE PTR [ecx-0x1fa5ff12],cl
  426075:	add    edx,0x0
  426078:	cmp    DWORD PTR [edi-0x7cc54701],0x29
  42607f:	inc    DWORD PTR [eax]
  426081:	ret    
  426082:	inc    DWORD PTR [eax-0x72]
  426085:	(bad)  
  426086:	mov    esp,0xff49ffff
  42608b:	push   ebp
  42608c:	xor    BYTE PTR [eax],al
  42608e:	mov    ds:0xffe60083,al
  426093:	fldcw  WORD PTR ds:0xff83d2ff
  426099:	out    dx,eax
  42609a:	add    BYTE PTR [ebx],al
  42609c:	call   0x4345a1
  4260a1:	and    DWORD PTR [ebx-0x50009abc],eax
  4260a7:	mov    DWORD PTR [eax],eax
  4260a9:	jmp    0x4260aa
  4260ab:	test   ebp,0xff00fd89
  4260b1:	data16 add BYTE PTR [edx+ebx*2-0x33ffa501],cl
  4260b9:	js     0x4260bb
  4260bb:	jns    0x426114
  4260bd:	add    BYTE PTR [ecx],ah
  4260bf:	int3   
  4260c0:	add    BYTE PTR [edi-0x1],dh
  4260c3:	ret    
  4260c4:	aaa    
  4260c5:	call   FWORD PTR [ecx+0x21cccc]
  4260cb:	shr    DWORD PTR [edx-0xad34],1
  4260d1:	je     0x426056
  4260d3:	mov    dl,BYTE PTR [esi-0x1]
  4260d6:	add    bh,bh
  4260d8:	mov    DWORD PTR [ecx-0x3358dc7d],ecx
  4260de:	xor    eax,DWORD PTR [ebx+0x3fff94ff]
  4260e4:	mov    ebx,0xffff7583
  4260e9:	push   edi
  4260ea:	call   DWORD PTR [ebx]
  4260ec:	lods   al,BYTE PTR ds:[esi]
  4260ed:	(bad)  
  4260ee:	clc    
  4260ef:	add    bh,bh
  4260f1:	inc    ebp
  4260f2:	jmp    FWORD PTR [edi-0x7c1e00a5]
  4260f8:	mov    ebp,edx
  4260fa:	(bad)  
  4260fb:	clc    
  4260fc:	mov    eax,ds:0xccffc200
  426101:	test   DWORD PTR [ebx-0x41ffa261],eax
  426107:	int3   
  426108:	call   FWORD PTR [ecx]
  42610a:	(bad)  
  42610b:	call   0xcc872dae
  426110:	mov    DWORD PTR [ecx],edx
  426112:	add    BYTE PTR [ecx-0x603328],al
  426118:	cmp    DWORD PTR [eax-0x8d8001],0xffffffd6
  42611f:	mov    DWORD PTR [eax],eax
  426121:	dec    esp
  426122:	mov    DWORD PTR [eax],esp
  426124:	or     al,0x0
  426126:	lock add ah,cl
  426129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42612a:	xor    DWORD PTR [edx],0x61
  42612d:	add    BYTE PTR [ebp-0x1],ch
  426130:	add    BYTE PTR [ebp-0x1],bh
  426133:	xor    cl,ah
  426135:	add    BYTE PTR [edi+edi*8-0x8ff5b01],dl
  42613c:	pop    ecx
  42613d:	jmp    DWORD PTR [ebp+0x0]
  426140:	inc    DWORD PTR [ebp+0x4fd2ff]
  426146:	gs add bh,bh
  426149:	pop    ecx
  42614a:	mov    DWORD PTR [eax],edx
  42614c:	cmp    edi,0x8a83ffe8
  426152:	mov    DWORD PTR [ebx-0x24],esi
  426155:	jmp    DWORD PTR [edi]
  426157:	mov    DWORD PTR [eax],eax
  426159:	les    eax,FWORD PTR [eax]
  42615b:	jmp    0x426144
  42615d:	mov    DWORD PTR [ebx+0x89ff00],ebx
  426163:	loope  0x42611a
  426165:	call   DWORD PTR [eax-0x1]
  426168:	add    BYTE PTR [edx],al
  42616a:	add    BYTE PTR ds:0x86cc64,ah
  426170:	add    BYTE PTR [ecx],cl
  426172:	add    BYTE PTR [edi+ebp*8],al
  426175:	add    BYTE PTR [edi+edi*8-0x25002701],ah
  42617c:	and    al,0x0
  42617e:	repnz add ah,cl
  426181:	pop    ebp
  426182:	jmp    FWORD PTR [edx+edi*4]
  426185:	(bad)  
  426186:	dec    DWORD PTR [ecx+0x1fff5300]
  42618c:	mov    eax,ds:0x83ff8983
  426191:	push   0xffffff83
  426193:	in     eax,0xe4
  426195:	jmp    FWORD PTR [eax]
  426197:	add    BYTE PTR [eax],al
  426199:	sar    edi,0x36
  42619c:	push   es
  42619d:	add    BYTE PTR [ecx-0x1],dh
  4261a0:	call   FWORD PTR [eax]
  4261a2:	add    BYTE PTR [ecx-0x7ce47cd6],dl
  4261a8:	(bad)  
  4261a9:	cmp    ah,cl
  4261ab:	outs   dx,DWORD PTR ds:[esi]
  4261ac:	test   BYTE PTR [ebx+0x2400004a],0x89
  4261b3:	inc    esp
  4261b4:	jmp    0x4261b5
  4261b6:	xor    edi,edi
  4261b8:	jmp    DWORD PTR [ebx-0x34]
  4261bb:	loop   0x426186
  4261bd:	int3   
  4261be:	inc    edx
  4261bf:	inc    DWORD PTR [ebx-0x2fae007e]
  4261c5:	add    BYTE PTR [esi-0xf47c01],al
  4261cb:	rol    DWORD PTR [ebp-0x501],1
  4261d1:	xchg   edx,eax
  4261d2:	dec    ebp
  4261d4:	push   ebp
  4261d5:	jmp    DWORD PTR ds:0xff4a0089
  4261db:	jp     0x426230
  4261dd:	int3   
  4261de:	push   edx
  4261df:	add    DWORD PTR [eax],0x3
  4261e2:	add    BYTE PTR [esi+0x71],bh
  4261e5:	call   DWORD PTR [ecx]
  4261e7:	add    bh,bh
  4261e9:	dec    esp
  4261ea:	add    BYTE PTR [edi+0x5e],cl
  4261ed:	or     DWORD PTR [edi+0x8f83ff],0xfffffff1
  4261f4:	retf   
  4261f5:	call   FWORD PTR [esi-0x1]
  4261f8:	add    BYTE PTR [esi],ch
  4261fa:	(bad)  
  4261fb:	cli    
  4261fc:	imul   edi,edi,0xeaffff77
  426202:	push   DWORD PTR [eax]
  426204:	jecxz  0x426205
  426206:	mov    ds:0xcc8aff00,al
  42620b:	mov    ebp,0xf2ff2e
  426210:	add    BYTE PTR [edx],cl
  426212:	dec    DWORD PTR [ecx]
  426214:	(bad)
  426217:	cmp    edi,0xfffffff2
  42621a:	add    BYTE PTR [ebp+0x34],cl
  42621d:	int3   
  42621e:	clc    
  42621f:	add    BYTE PTR [eax],al
  426221:	out    dx,eax
  426222:	dec    DWORD PTR [edi]
  426224:	retf   0x9583
  426227:	dec    esp
  426229:	add    BYTE PTR [di-0x54],ch
  42622e:	(bad)  
  42622f:	(bad)  
  426230:	dec    DWORD PTR [ebx]
  426232:	push   edi
  426234:	mov    ebp,0xffff0aff
  426239:	mov    ebp,0xffa554ff
  42623e:	pusha  
  42623f:	add    BYTE PTR [ebx+0x69a4cc4a],al
  426245:	int3   
  426246:	push   0xffd70000
  42624b:	(bad)  
  42624c:	je     0x42624e
  42624e:	clc    
  42624f:	inc    DWORD PTR [eax]
  426251:	inc    eax
  426252:	add    BYTE PTR [ecx-0x7cd53306],ch
  426258:	add    al,bl
  42625a:	xor    edx,0x5b
  42625d:	add    BYTE PTR [edi-0x7c500100],dl
  426263:	push   ds
  426264:	jmp    0x89c8:0xccffe8cc
  42626b:	push   eax
  42626c:	loope  0x42623a
  42626e:	jns    0x42626f
  426270:	(bad)  
  426271:	inc    BYTE PTR [eax]
  426273:	out    dx,al
  426274:	pop    ds
  426275:	add    BYTE PTR [ebx],bh
  426277:	(bad)  
  426278:	(bad)  
  426279:	sti    
  42627a:	inc    DWORD PTR [edi+0x45]
  42627d:	mov    ebp,esp
  42627f:	int3   
  426280:	call   FWORD PTR [ecx]
  426282:	add    BYTE PTR [edx+0x6e],cl
  426285:	add    BYTE PTR [ebp-0x1],ch
  426288:	add    DWORD PTR [esi-0x1],0x56
  42628c:	push   ss
  42628d:	jmp    FWORD PTR [esi]
  42628f:	dec    DWORD PTR [ecx-0x29b7ff3b]
  426295:	call   FWORD PTR [esi-0xd37c34]
  42629b:	(bad)  
  42629c:	and    cx,0x0
  4262a0:	add    BYTE PTR [eax+eax*1],al
  4262a3:	xchg   ecx,eax
  4262a4:	pop    esp
  4262a5:	(bad)  
  4262a6:	mov    edx,0xffc28389
  4262ab:	and    esp,DWORD PTR [ebx]
  4262ad:	add    BYTE PTR [edx],bh
  4262af:	(bad)  
  4262b0:	dec    DWORD PTR [ebx+eax*4]
  4262b3:	loop   0x426301
  4262b5:	push   DWORD PTR [ebx-0x7c907c01]
  4262bb:	pop    esi
  4262bc:	(bad)  
  4262bd:	push   DWORD PTR [edi+edi*8-0x1]
  4262c1:	idiv   edi
  4262c3:	mov    edi,0x835a89d5
  4262c8:	add    BYTE PTR [edi-0x766daf34],bh
  4262ce:	add    DWORD PTR [ebx+0x75ff7f83],eax
  4262d4:	add    al,0xff
  4262d6:	cmp    al,BYTE PTR [ebx-0x37ff5f01]
  4262dc:	pop    ds
  4262dd:	and    DWORD PTR [ebp+0x0],0x0
  4262e1:	into   
  4262e2:	add    BYTE PTR [edx+eax*1-0x1],ah
  4262e6:	sar    bh,1
  4262e8:	add    ch,al
  4262ea:	add    BYTE PTR [ebx-0x3d7c79],cl
  4262f0:	mov    DWORD PTR [eax-0xdc6501],esp
  4262f6:	rol    BYTE PTR [eax],0x89
  4262f9:	xchg   ah,cl
  4262fb:	sub    dh,BYTE PTR [eax+0x0]
  4262fe:	call   0x83596402
  426303:	mov    dl,0xf4
  426305:	jmp    DWORD PTR [ebx]
  426307:	(bad)  
  426308:	call   DWORD PTR [ecx-0x479a7d]
  42630e:	idiv   edi
  426310:	add    BYTE PTR [ecx],bl
  426312:	add    BYTE PTR [ecx],dl
  426314:	std    
  426315:	(bad)  
  426316:	std    
  426317:	inc    DWORD PTR [eax]
  426319:	pop    ebp
  42631a:	jmp    FWORD PTR [edi+eiz*2+0x0]
  42631e:	or     eax,DWORD PTR [ebx-0x3033dc34]
  426324:	stc    
  426325:	call   eax
  426327:	int3   
  426328:	call   FWORD PTR [esi+0x725489]
  42632e:	cld    
  42632f:	inc    DWORD PTR [eax]
  426331:	lods   al,BYTE PTR ds:[esi]
  426332:	call   FWORD PTR [edx+0x43]
  426335:	(bad)  
  426336:	mov    ecx,0x78ccff
  42633b:	sub    al,0x99
  42633d:	add    BYTE PTR [esi],bl
  42633f:	add    bh,bh
  426341:	dec    eax
  426342:	add    BYTE PTR [edx],dh
  426344:	mov    ch,0x0
  426346:	iret   
  426347:	int3   
  426348:	and    DWORD PTR [ebx],0xffffffff
  42634b:	aad    0x93
  42634d:	int3   
  42634e:	ss (bad) 
  426350:	inc    DWORD PTR [ebx-0x1]
  426353:	mov    eax,ds:0xff90ff1d
  426358:	int3   
  426359:	int3   
  42635a:	int3   
  42635b:	int3   
  42635c:	int3   
  42635d:	int3   
  42635e:	int3   
  42635f:	int3   
  426360:	sub    esp,0x4c
  426363:	push   ebx
  426364:	push   ebp
  426365:	push   esi
  426366:	mov    esi,DWORD PTR ds:0x444024
  42636c:	push   edi
  42636d:	push   0x58
  42636f:	push   0x42
  426371:	call   esi
  426373:	push   0xb3
  426378:	push   0x42
  42637a:	mov    ebp,eax
  42637c:	call   esi
  42637e:	push   0x57
  426380:	push   0x42
  426382:	mov    DWORD PTR [esp+0x18],eax
  426386:	call   esi
  426388:	mov    esi,DWORD PTR ds:0x447d1c
  42638e:	mov    ebx,DWORD PTR ds:0x444028
  426394:	mov    ecx,DWORD PTR ds:0x44707c
  42639a:	mov    DWORD PTR [esp+0x14],eax
  42639e:	mov    DWORD PTR [esp+0x18],0x44
  4263a6:	add    esi,0x9138
  4263ac:	mov    edi,0x162
  4263b1:	movzx  eax,BYTE PTR [ecx+0x5]
  4263b5:	movzx  edx,WORD PTR [ecx+0x3]
  4263b9:	movzx  ecx,BYTE PTR [ecx+0x1]
  4263bd:	shl    eax,0x10
  4263c0:	add    eax,edx
  4263c2:	mov    edx,DWORD PTR ds:0x447d14
  4263c8:	shl    eax,0x8
  4263cb:	add    eax,ecx
  4263cd:	xor    edx,eax
  4263cf:	xor    edx,0x6c120ccf
  4263d5:	mov    ds:0x447d04,eax
  4263da:	push   0x446b1c
  4263df:	mov    DWORD PTR [esi],edx
  4263e1:	call   ebx
  4263e3:	mov    ecx,DWORD PTR ds:0x44707c
  4263e9:	movzx  eax,BYTE PTR [ecx+0xe]
  4263ed:	movzx  edx,BYTE PTR [ecx+0xc]
  4263f1:	shl    eax,0x8
  4263f4:	add    eax,edx
  4263f6:	movzx  edx,BYTE PTR [ecx+0xa]
  4263fa:	movzx  ecx,BYTE PTR [ecx+0x7]
  4263fe:	shl    eax,0x8
  426401:	add    eax,edx
  426403:	shl    eax,0x8
  426406:	add    eax,ecx
  426408:	mov    edx,0x6c128ccf
  42640d:	sub    edx,DWORD PTR ds:0x447d14
  426413:	mov    ds:0x447d04,eax
  426418:	xor    edx,eax
  42641a:	mov    DWORD PTR [esi+0x4],edx
  42641d:	mov    ecx,DWORD PTR ds:0x44707c
  426423:	add    ecx,0x10
  426426:	add    esi,0x8
  426429:	dec    edi
  42642a:	mov    DWORD PTR ds:0x44707c,ecx
  426430:	jne    0x4263b1
  426436:	mov    esi,DWORD PTR ds:0x447d1c
  42643c:	push   0x47
  42643e:	add    esi,0x9c48
  426444:	call   DWORD PTR ds:0x444070
  42644a:	mov    ecx,DWORD PTR ds:0x447080
  426450:	mov    edx,0x191
  426455:	movzx  eax,WORD PTR [ecx+0x6]
  426459:	movzx  ecx,WORD PTR [ecx+0x3]
  42645d:	shl    eax,0x10
  426460:	add    eax,ecx
  426462:	mov    ecx,0xc9c3a891
  426467:	sub    ecx,DWORD PTR ds:0x447d14
  42646d:	mov    ds:0x447d04,eax
  426472:	xor    ecx,eax
  426474:	mov    DWORD PTR [esi],ecx
  426476:	mov    ecx,DWORD PTR ds:0x447080
  42647c:	add    ecx,0x8
  42647f:	add    esi,0x4
  426482:	dec    edx
  426483:	mov    DWORD PTR ds:0x447080,ecx
  426489:	jne    0x426455
  42648b:	mov    ecx,DWORD PTR ds:0x447d1c
  426491:	mov    edx,DWORD PTR ds:0x447084
  426497:	add    ecx,0xa28c
  42649d:	mov    esi,0xb5
  4264a2:	movzx  eax,WORD PTR [edx+0x4]
  4264a6:	movzx  edx,WORD PTR [edx+0x1]
  4264aa:	shl    eax,0x10
  4264ad:	add    eax,edx
  4264af:	mov    ds:0x447d04,eax
  4264b4:	mov    edx,0xfce81096
  4264b9:	sub    edx,DWORD PTR ds:0x447d14
  4264bf:	add    ecx,0x8
  4264c2:	xor    edx,eax
  4264c4:	mov    DWORD PTR [ecx-0x8],edx
  4264c7:	mov    edx,DWORD PTR ds:0x447084
  4264cd:	movzx  eax,BYTE PTR [edx+0xd]
  4264d1:	movzx  edi,WORD PTR [edx+0x9]
  4264d5:	movzx  edx,BYTE PTR [edx+0x6]
  4264d9:	shl    eax,0x10
  4264dc:	add    eax,edi
  4264de:	shl    eax,0x8
  4264e1:	add    eax,edx
  4264e3:	mov    edx,DWORD PTR ds:0x447d14
  4264e9:	add    edx,0xfce79094
  4264ef:	xor    edx,eax
  4264f1:	mov    ds:0x447d04,eax
  4264f6:	mov    DWORD PTR [ecx-0x4],edx
  4264f9:	mov    edx,DWORD PTR ds:0x447084
  4264ff:	add    edx,0x10
  426502:	dec    esi
  426503:	mov    DWORD PTR ds:0x447084,edx
  426509:	jne    0x4264a2
  42650b:	movzx  eax,WORD PTR [edx+0x4]
  42650f:	movzx  edx,WORD PTR [edx+0x1]
  426513:	shl    eax,0x10
  426516:	add    eax,edx
  426518:	mov    edx,0xfce81096
  42651d:	sub    edx,DWORD PTR ds:0x447d14
  426523:	mov    ds:0x447d04,eax
  426528:	xor    edx,eax
  42652a:	mov    DWORD PTR [ecx],edx
  42652c:	mov    eax,ds:0x447d1c
  426531:	mov    edx,DWORD PTR ds:0x447088
  426537:	add    eax,0xa838
  42653c:	mov    esi,0x40
  426541:	movzx  ecx,BYTE PTR [edx+0x6]
  426545:	movzx  edi,WORD PTR [edx+0x3]
  426549:	movzx  edx,BYTE PTR [edx]
  42654c:	shl    ecx,0x10
  42654f:	add    ecx,edi
  426551:	shl    ecx,0x8
  426554:	add    ecx,edx
  426556:	mov    DWORD PTR ds:0x447d04,ecx
  42655c:	mov    edx,0x413d0337
  426561:	sub    edx,DWORD PTR ds:0x447d14
  426567:	xor    edx,ecx
  426569:	mov    DWORD PTR [eax],edx
  42656b:	mov    edx,DWORD PTR ds:0x447088
  426571:	movzx  ecx,BYTE PTR [edx+0xe]
  426575:	movzx  edi,WORD PTR [edx+0xb]
  426579:	movzx  edx,BYTE PTR [edx+0x7]
  42657d:	shl    ecx,0x10
  426580:	add    ecx,edi
  426582:	shl    ecx,0x8
  426585:	add    ecx,edx
  426587:	mov    DWORD PTR ds:0x447d04,ecx
  42658d:	mov    edx,0x413d0337
  426592:	sub    edx,DWORD PTR ds:0x447d14
  426598:	xor    edx,ecx
  42659a:	mov    DWORD PTR [eax+0x4],edx
  42659d:	mov    edx,DWORD PTR ds:0x447088
  4265a3:	add    edx,0x10
  4265a6:	mov    DWORD PTR ds:0x447088,edx
  4265ac:	movzx  ecx,BYTE PTR [edx+0x6]
  4265b0:	movzx  edi,WORD PTR [edx+0x3]
  4265b4:	movzx  edx,BYTE PTR [edx]
  4265b7:	shl    ecx,0x10
  4265ba:	add    ecx,edi
  4265bc:	shl    ecx,0x8
  4265bf:	add    ecx,edx
  4265c1:	mov    DWORD PTR ds:0x447d04,ecx
  4265c7:	mov    edx,0x413d0337
  4265cc:	sub    edx,DWORD PTR ds:0x447d14
  4265d2:	xor    edx,ecx
  4265d4:	mov    DWORD PTR [eax+0x8],edx
  4265d7:	mov    edx,DWORD PTR ds:0x447088
  4265dd:	movzx  ecx,BYTE PTR [edx+0xe]
  4265e1:	movzx  edi,WORD PTR [edx+0xb]
  4265e5:	movzx  edx,BYTE PTR [edx+0x7]
  4265e9:	shl    ecx,0x10
  4265ec:	add    ecx,edi
  4265ee:	shl    ecx,0x8
  4265f1:	add    ecx,edx
  4265f3:	mov    DWORD PTR ds:0x447d04,ecx
  4265f9:	mov    edx,0x413d0337
  4265fe:	sub    edx,DWORD PTR ds:0x447d14
  426604:	xor    edx,ecx
  426606:	mov    DWORD PTR [eax+0xc],edx
  426609:	mov    edx,DWORD PTR ds:0x447088
  42660f:	add    edx,0x10
  426612:	mov    DWORD PTR ds:0x447088,edx
  426618:	movzx  ecx,BYTE PTR [edx+0x6]
  42661c:	movzx  edi,WORD PTR [edx+0x3]
  426620:	movzx  edx,BYTE PTR [edx]
  426623:	shl    ecx,0x10
  426626:	add    ecx,edi
  426628:	shl    ecx,0x8
  42662b:	add    ecx,edx
  42662d:	mov    DWORD PTR ds:0x447d04,ecx
  426633:	mov    edx,0x413d0337
  426638:	sub    edx,DWORD PTR ds:0x447d14
  42663e:	xor    edx,ecx
  426640:	mov    DWORD PTR [eax+0x10],edx
  426643:	mov    edx,DWORD PTR ds:0x447088
  426649:	movzx  ecx,BYTE PTR [edx+0xe]
  42664d:	movzx  edi,WORD PTR [edx+0xb]
  426651:	movzx  edx,BYTE PTR [edx+0x7]
  426655:	shl    ecx,0x10
  426658:	add    ecx,edi
  42665a:	shl    ecx,0x8
  42665d:	add    ecx,edx
  42665f:	mov    edx,0x413d0337
  426664:	sub    edx,DWORD PTR ds:0x447d14
  42666a:	mov    DWORD PTR ds:0x447d04,ecx
  426670:	xor    edx,ecx
  426672:	mov    DWORD PTR [eax+0x14],edx
  426675:	mov    edx,DWORD PTR ds:0x447088
  42667b:	add    edx,0x10
  42667e:	mov    DWORD PTR ds:0x447088,edx
  426684:	movzx  ecx,BYTE PTR [edx+0x6]
  426688:	movzx  edi,WORD PTR [edx+0x3]
  42668c:	movzx  edx,BYTE PTR [edx]
  42668f:	shl    ecx,0x10
  426692:	add    ecx,edi
  426694:	shl    ecx,0x8
  426697:	add    ecx,edx
  426699:	mov    DWORD PTR ds:0x447d04,ecx
  42669f:	mov    edx,0x413d0337
  4266a4:	sub    edx,DWORD PTR ds:0x447d14
  4266aa:	add    eax,0x20
  4266ad:	xor    edx,ecx
  4266af:	mov    DWORD PTR [eax-0x8],edx
  4266b2:	mov    edx,DWORD PTR ds:0x447088
  4266b8:	movzx  ecx,BYTE PTR [edx+0xe]
  4266bc:	movzx  edi,WORD PTR [edx+0xb]
  4266c0:	movzx  edx,BYTE PTR [edx+0x7]
  4266c4:	shl    ecx,0x10
  4266c7:	add    ecx,edi
  4266c9:	shl    ecx,0x8
  4266cc:	add    ecx,edx
  4266ce:	mov    edx,0x413d0337
  4266d3:	sub    edx,DWORD PTR ds:0x447d14
  4266d9:	mov    DWORD PTR ds:0x447d04,ecx
  4266df:	xor    edx,ecx
  4266e1:	mov    DWORD PTR [eax-0x4],edx
  4266e4:	mov    edx,DWORD PTR ds:0x447088
  4266ea:	add    edx,0x10
  4266ed:	dec    esi
  4266ee:	mov    DWORD PTR ds:0x447088,edx
  4266f4:	jne    0x426541
  4266fa:	movzx  ecx,BYTE PTR [edx+0x6]
  4266fe:	movzx  esi,WORD PTR [edx+0x3]
  426702:	movzx  edx,BYTE PTR [edx]
  426705:	shl    ecx,0x10
  426708:	add    ecx,esi
  42670a:	shl    ecx,0x8
  42670d:	add    ecx,edx
  42670f:	mov    edx,DWORD PTR ds:0x447d14
  426715:	add    edx,0x413c8335
  42671b:	xor    edx,ecx
  42671d:	mov    DWORD PTR ds:0x447d04,ecx
  426723:	push   0x0
  426725:	mov    DWORD PTR [eax],edx
  426727:	call   DWORD PTR ds:0x444014
  42672d:	mov    eax,ds:0x447d1c
  426732:	mov    edx,DWORD PTR ds:0x44708c
  426738:	add    eax,0xb03c
  42673d:	mov    esi,0x5b
  426742:	movzx  ecx,WORD PTR [edx+0x5]
  426746:	movzx  edx,WORD PTR [edx]
  426749:	shl    ecx,0x10
  42674c:	add    ecx,edx
  42674e:	mov    DWORD PTR ds:0x447d04,ecx
  426754:	mov    edx,0x6d5ff162
  426759:	sub    edx,DWORD PTR ds:0x447d14
  42675f:	xor    edx,ecx
  426761:	mov    DWORD PTR [eax],edx
  426763:	mov    edx,DWORD PTR ds:0x44708c
  426769:	movzx  ecx,BYTE PTR [edx+0xf]
  42676d:	movzx  edi,BYTE PTR [edx+0xb]
  426771:	movzx  edx,WORD PTR [edx+0x7]
  426775:	shl    ecx,0x8
  426778:	add    ecx,edi
  42677a:	shl    ecx,0x10
  42677d:	add    ecx,edx
  42677f:	mov    edx,DWORD PTR ds:0x447d14
  426785:	mov    DWORD PTR ds:0x447d04,ecx
  42678b:	add    edx,0x6d5f7160
  426791:	xor    edx,ecx
  426793:	mov    DWORD PTR [eax+0x4],edx
  426796:	mov    edx,DWORD PTR ds:0x44708c
  42679c:	add    edx,0x10
  42679f:	mov    DWORD PTR ds:0x44708c,edx
  4267a5:	movzx  ecx,WORD PTR [edx+0x5]
  4267a9:	movzx  edx,WORD PTR [edx]
  4267ac:	shl    ecx,0x10
  4267af:	add    ecx,edx
  4267b1:	mov    DWORD PTR ds:0x447d04,ecx
  4267b7:	mov    edx,0x6d5ff162
  4267bc:	sub    edx,DWORD PTR ds:0x447d14
  4267c2:	xor    edx,ecx
  4267c4:	mov    DWORD PTR [eax+0x8],edx
  4267c7:	mov    edx,DWORD PTR ds:0x44708c
  4267cd:	movzx  ecx,BYTE PTR [edx+0xf]
  4267d1:	movzx  edi,BYTE PTR [edx+0xb]
  4267d5:	movzx  edx,WORD PTR [edx+0x7]
  4267d9:	shl    ecx,0x8
  4267dc:	add    ecx,edi
  4267de:	shl    ecx,0x10
  4267e1:	add    ecx,edx
  4267e3:	mov    edx,DWORD PTR ds:0x447d14
  4267e9:	add    edx,0x6d5f7160
  4267ef:	xor    edx,ecx
  4267f1:	mov    DWORD PTR ds:0x447d04,ecx
  4267f7:	mov    DWORD PTR [eax+0xc],edx
  4267fa:	mov    edx,DWORD PTR ds:0x44708c
  426800:	add    edx,0x10
  426803:	mov    DWORD PTR ds:0x44708c,edx
  426809:	movzx  ecx,WORD PTR [edx+0x5]
  42680d:	movzx  edx,WORD PTR [edx]
  426810:	shl    ecx,0x10
  426813:	add    ecx,edx
  426815:	mov    DWORD PTR ds:0x447d04,ecx
  42681b:	mov    edx,0x6d5ff162
  426820:	sub    edx,DWORD PTR ds:0x447d14
  426826:	xor    edx,ecx
  426828:	mov    DWORD PTR [eax+0x10],edx
  42682b:	mov    edx,DWORD PTR ds:0x44708c
  426831:	movzx  ecx,BYTE PTR [edx+0xf]
  426835:	movzx  edi,BYTE PTR [edx+0xb]
  426839:	movzx  edx,WORD PTR [edx+0x7]
  42683d:	shl    ecx,0x8
  426840:	add    ecx,edi
  426842:	shl    ecx,0x10
  426845:	add    ecx,edx
  426847:	mov    edx,DWORD PTR ds:0x447d14
  42684d:	add    edx,0x6d5f7160
  426853:	xor    edx,ecx
  426855:	mov    DWORD PTR ds:0x447d04,ecx
  42685b:	mov    DWORD PTR [eax+0x14],edx
  42685e:	mov    edx,DWORD PTR ds:0x44708c
  426864:	add    edx,0x10
  426867:	mov    DWORD PTR ds:0x44708c,edx
  42686d:	movzx  ecx,WORD PTR [edx+0x5]
  426871:	movzx  edx,WORD PTR [edx]
  426874:	shl    ecx,0x10
  426877:	add    ecx,edx
  426879:	mov    DWORD PTR ds:0x447d04,ecx
  42687f:	mov    edx,0x6d5ff162
  426884:	sub    edx,DWORD PTR ds:0x447d14
  42688a:	add    eax,0x20
  42688d:	xor    edx,ecx
  42688f:	mov    DWORD PTR [eax-0x8],edx
  426892:	mov    edx,DWORD PTR ds:0x44708c
  426898:	movzx  ecx,BYTE PTR [edx+0xf]
  42689c:	movzx  edi,BYTE PTR [edx+0xb]
  4268a0:	movzx  edx,WORD PTR [edx+0x7]
  4268a4:	shl    ecx,0x8
  4268a7:	add    ecx,edi
  4268a9:	shl    ecx,0x10
  4268ac:	add    ecx,edx
  4268ae:	mov    edx,DWORD PTR ds:0x447d14
  4268b4:	add    edx,0x6d5f7160
  4268ba:	xor    edx,ecx
  4268bc:	mov    DWORD PTR ds:0x447d04,ecx
  4268c2:	mov    DWORD PTR [eax-0x4],edx
  4268c5:	mov    edx,DWORD PTR ds:0x44708c
  4268cb:	add    edx,0x10
  4268ce:	dec    esi
  4268cf:	mov    DWORD PTR ds:0x44708c,edx
  4268d5:	jne    0x426742
  4268db:	movzx  ecx,WORD PTR [edx+0x5]
  4268df:	movzx  edx,WORD PTR [edx]
  4268e2:	mov    esi,DWORD PTR ds:0x444018
  4268e8:	shl    ecx,0x10
  4268eb:	add    ecx,edx
  4268ed:	mov    edx,DWORD PTR ds:0x447d14
  4268f3:	add    edx,0x6d5f7160
  4268f9:	xor    edx,ecx
  4268fb:	mov    DWORD PTR ds:0x447d04,ecx
  426901:	mov    DWORD PTR [eax],edx
  426903:	lea    eax,[esp+0x18]
  426907:	push   eax
  426908:	call   esi
  42690a:	lea    ecx,[esp+0x18]
  42690e:	push   ecx
  42690f:	call   esi
  426911:	mov    edx,DWORD PTR ds:0x447d1c
  426917:	mov    ecx,DWORD PTR [esp+0x60]
  42691b:	add    edx,0xbba0
  426921:	add    ecx,0x3
  426924:	mov    esi,0x20b
  426929:	lea    esp,[esp+0x0]
  426930:	movzx  eax,WORD PTR [ecx+0x3]
  426934:	movzx  edi,BYTE PTR [ecx]
  426937:	shl    eax,0x8
  42693a:	add    eax,edi
  42693c:	movzx  edi,BYTE PTR [ecx-0x2]
  426940:	shl    eax,0x8
  426943:	add    eax,edi
  426945:	mov    edi,0x949c02ea
  42694a:	sub    edi,DWORD PTR ds:0x447d14
  426950:	mov    ds:0x447d04,eax
  426955:	xor    edi,eax
  426957:	mov    DWORD PTR [edx],edi
  426959:	add    edx,0x4
  42695c:	add    ecx,0x8
  42695f:	dec    esi
  426960:	jne    0x426930
  426962:	mov    esi,DWORD PTR ds:0x44402c
  426968:	test   ebp,ebp
  42696a:	je     0x42696f
  42696c:	push   ebp
  42696d:	call   esi
  42696f:	mov    eax,DWORD PTR [esp+0x10]
  426973:	test   eax,eax
  426975:	je     0x42697a
  426977:	push   eax
  426978:	call   esi
  42697a:	mov    eax,DWORD PTR [esp+0x14]
  42697e:	test   eax,eax
  426980:	je     0x426985
  426982:	push   eax
  426983:	call   esi
  426985:	pop    edi
  426986:	pop    esi
  426987:	pop    ebp
  426988:	pop    ebx
  426989:	add    esp,0x4c
  42698c:	ret    
  42698d:	int3   
  42698e:	int3   
  42698f:	int3   
  426990:	in     al,dx
  426991:	add    ch,bh
  426993:	add    BYTE PTR [ecx],bh
  426995:	add    BYTE PTR [esi],al
  426997:	cmp    DWORD PTR [edx-0x1],0xffffffa2
  42699b:	add    BYTE PTR [esi-0x61005d01],bl
  4269a1:	call   FWORD PTR [edi+0x26ff2bff]
  4269a7:	push   DWORD PTR [eax-0x4cff0434]
  4269ad:	add    BYTE PTR [ecx+0x0],bl
  4269b0:	add    eax,0x30836900
  4269b5:	dec    ebx
  4269b7:	sub    DWORD PTR [eax+eax*1],0xffffffb3
  4269bb:	call   DWORD PTR [edx-0x7d]
  4269be:	hlt    
  4269bf:	inc    DWORD PTR [ebx-0x34]
  4269c2:	ins    BYTE PTR es:[edi],dx
  4269c3:	(bad)  
  4269c4:	fdivr  st,st(7)
  4269c6:	adc    al,0x83
  4269c8:	pop    edi
  4269c9:	(bad)  
  4269ca:	mov    esi,0xa100d5ff
  4269cf:	sbb    eax,0xffffff89
  4269d2:	add    BYTE PTR fs:[edx-0x12ffcb00],dh
  4269d9:	add    BYTE PTR [esi],al
  4269db:	(bad)  
  4269dc:	in     al,dx
  4269dd:	mov    DWORD PTR [eax-0x1],ebp
  4269e0:	inc    esp
  4269e1:	add    BYTE PTR [edi+edi*8-0x767c52],ch
  4269e8:	cmp    BYTE PTR [eax],al
  4269ea:	stc    
  4269eb:	add    BYTE PTR [edx-0x1],dh
  4269ee:	mov    WORD PTR [eax],es
  4269f0:	pusha  
  4269f1:	add    BYTE PTR [ebx+0x6283d4ff],bh
  4269f7:	inc    DWORD PTR [edx-0x647c4c00]
  4269fd:	push   DWORD PTR [edi+edi*8+0x7d]
  426a01:	jmp    FWORD PTR [ecx]
  426a03:	inc    DWORD PTR [edi]
  426a05:	add    BYTE PTR [esi-0x5800ef01],dh
  426a0b:	mov    eax,eax
  426a0d:	mov    DWORD PTR [ebp-0x1],esi
  426a10:	ds (bad) 
  426a12:	cmp    BYTE PTR [ebx-0xe0ff54],al
  426a18:	adc    edi,edi
  426a1a:	cmp    bh,0xe8
  426a1d:	jmp    FWORD PTR [edi+edi*8-0x5a]
  426a21:	jmp    DWORD PTR [edi+edi*8]
  426a24:	dec    edi
  426a25:	mov    DWORD PTR [edi+edi*8],esp
  426a28:	lahf   
  426a29:	mov    ebx,edx
  426a2b:	sub    DWORD PTR [edi],0xffffffff
  426a2e:	dec    ebx
  426a2f:	add    BYTE PTR [esp+ecx*8+0x5c],cl
  426a33:	call   FWORD PTR [edi+0x0]
  426a36:	retf   0xb00
  426a39:	add    BYTE PTR [eax+eax*1+0x21],bh
  426a3d:	inc    edx
  426a3f:	call   DWORD PTR [eax]
  426a41:	int3   
  426a42:	mov    bh,0xff
  426a44:	lods   al,BYTE PTR ds:[esi]
  426a45:	or     DWORD PTR [edx+0x25ffd700],0xffffffff
  426a4c:	push   edx
  426a4d:	call   FWORD PTR [eax]
  426a4f:	add    bl,ch
  426a51:	adc    DWORD PTR ds:0xf3ffea83,0xffffffff
  426a58:	lock call DWORD PTR [ebp-0x1]
  426a5c:	jbe    0x426a5d
  426a5e:	cwde   
  426a5f:	jmp    FWORD PTR [ebx-0x6400de01]
  426a65:	mov    DWORD PTR [edi-0x32ff8b01],ecx
  426a6b:	jmp    FWORD PTR [ebx]
  426a6d:	inc    DWORD PTR [ebp+0x5a830f83]
  426a73:	jmp    FWORD PTR [edi+edi*8-0x94ff19]
  426a7a:	or     cl,BYTE PTR [ecx-0xa97c33]
  426a80:	test   BYTE PTR [ebx-0xb8ffbc],0xfa
  426a87:	add    BYTE PTR [ecx-0x34],ah
  426a8a:	aaa    
  426a8b:	push   DWORD PTR [esi+0x0]
  426a8e:	pop    esp
  426a8f:	int3   
  426a90:	and    eax,DWORD PTR [eax]
  426a92:	add    DWORD PTR [eax],eax
  426a94:	ins    DWORD PTR es:[edi],dx
  426a95:	add    BYTE PTR [eax+0x0],bh
  426a98:	mov    eax,ds:0x83002c00
  426a9d:	mov    DWORD PTR ds:0x58ff1c00,edx
  426aa3:	add    dh,ah
  426aa5:	jmp    eax
  426aa7:	call   DWORD PTR [edx]
  426aa9:	(bad)  
  426aaa:	out    dx,eax
  426aab:	jmp    DWORD PTR [ebp-0x1]
  426aae:	pop    esp
  426aaf:	(bad)  
  426ab0:	(bad)  
  426ab2:	mov    al,0xff
  426ab4:	mov    edx,0x64837e89
  426ab9:	adc    DWORD PTR ds:0xce0020ff,0xffffffff
  426ac0:	adc    eax,0xa483a4ff
  426ac5:	push   esi
  426ac7:	(bad)  
  426ac8:	call   0x6bcc38cd
  426acd:	int3   
  426ace:	sub    al,BYTE PTR [eax]
  426ad0:	sub    bh,bh
  426ad2:	pushf  
  426ad3:	mov    DWORD PTR [esi+0x0],edx
  426ad6:	add    BYTE PTR es:[ecx+0x0],bh
  426ada:	fadd   QWORD PTR [eax]
  426adc:	fiadd  WORD PTR [ebx+0xcd00da]
  426ae2:	lods   eax,DWORD PTR ds:[esi]
  426ae3:	add    BYTE PTR [edx+0x2dff4289],ah
  426ae9:	add    BYTE PTR [ecx-0x27caf7d],bl
  426aef:	jmp    DWORD PTR [eax-0x34]
  426af2:	(bad)  
  426af3:	(bad)  
  426af4:	cmp    DWORD PTR [eax],eax
  426af6:	cmp    DWORD PTR [eax],eax
  426af8:	mov    ecx,0x2cff6d00
  426afd:	add    BYTE PTR [edi-0x53004401],al
  426b03:	add    BYTE PTR [esi+0x4083e383],ch
  426b09:	or     eax,0x0
  426b0c:	test   BYTE PTR [eax],0xfe
  426b0f:	mov    DWORD PTR [edi+edi*8-0x14],esp
  426b13:	call   FWORD PTR [ecx-0x77]
  426b16:	xor    edi,edi
  426b18:	retf   0x39ff
  426b1b:	add    al,bl
  426b1d:	int3   
  426b1e:	sbb    eax,DWORD PTR [eax]
  426b20:	and    al,0xff
  426b22:	(bad)  
  426b24:	inc    edx
  426b25:	push   DWORD PTR [eax]
  426b27:	jmp    FWORD PTR [ebx+0x41002383]
  426b2d:	call   esi
  426b2f:	add    ah,ch
  426b31:	call   esi
  426b33:	jmp    FWORD PTR [ecx-0x1]
  426b36:	cmp    eax,0xd89c983
  426b3b:	dec    DWORD PTR [esi-0x1]
  426b3e:	cs int3 
  426b40:	xchg   ebp,eax
  426b41:	push   edi
  426b43:	jmp    edi
  426b45:	call   edx
  426b47:	push   DWORD PTR [esi]
  426b49:	add    BYTE PTR [edx],dl
  426b4b:	(bad)  
  426b4c:	sti    
  426b4d:	add    BYTE PTR [esi+0x0],dl
  426b50:	lods   eax,DWORD PTR ds:[esi]
  426b51:	mov    ebx,edi
  426b53:	int3   
  426b54:	daa    
  426b55:	add    dl,ch
  426b57:	cmp    ebp,0xffffffff
  426b5a:	and    al,0x0
  426b5c:	sbb    BYTE PTR [eax],al
  426b5e:	cmp    ah,cl
  426b60:	or     eax,0xb5cc2c00
  426b65:	jmp    FWORD PTR [esi+0x0]
  426b68:	fxch   st(4)
  426b6a:	mov    ebx,0x5ff70ff
  426b6f:	add    BYTE PTR [ecx+0x1f006100],ch
  426b75:	call   DWORD PTR ds:0xe88340ff
  426b7b:	call   FWORD PTR [edi+edi*8+0x18]
  426b7f:	inc    DWORD PTR [ebp-0x7d]
  426b82:	lock add BYTE PTR [eax],ah
  426b85:	add    BYTE PTR ds:0x3bff8cff,bl
  426b8b:	(bad)  
  426b8c:	jmp    0xe100:0x89ff54ff
  426b93:	add    BYTE PTR [edi+0x46008783],bl
  426b99:	jmp    FWORD PTR ds:0x63ff2fff
  426b9f:	add    BYTE PTR [eax-0x7d],bh
  426ba2:	jb     0x426ba3
  426ba4:	inc    ebx
  426ba5:	push   eax
  426ba7:	jmp    FWORD PTR [eax-0x7c4034]
  426bad:	mov    DWORD PTR [ecx-0x6b00fc34],esi
  426bb3:	jmp    DWORD PTR [ecx+0xf83c7cc]
  426bb9:	add    BYTE PTR [edx],dl
  426bbb:	adc    DWORD PTR [ecx+0x1a0039cc],0xffffff83
  426bc2:	jbe    0x426bc3
  426bc4:	xlat   BYTE PTR ds:[ebx]
  426bc5:	adc    DWORD PTR [ebp-0x34],0xffffffe6
  426bc9:	add    BYTE PTR ds:0x330048ff,bl
  426bcf:	add    BYTE PTR [edx],bl
  426bd1:	add    BYTE PTR [esi],bl
  426bd3:	mov    DWORD PTR [edi-0x6f00a801],eax
  426bd9:	add    BYTE PTR [ebx-0x1],al
  426bdc:	mov    al,0x83
  426bde:	sub    eax,0xbdffbdff
  426be3:	(bad)  
  426be4:	cld    
  426be5:	(bad)  
  426be6:	mov    esp,0xe3833bff
  426beb:	jmp    edx
  426bed:	jmp    FWORD PTR [esi-0x1]
  426bf0:	inc    ebx
  426bf1:	xor    DWORD PTR [esi-0x1f008234],0x0
  426bf8:	lods   eax,DWORD PTR ds:[esi]
  426bf9:	inc    DWORD PTR [eax-0x1]
  426bfc:	int    0xff
  426bfe:	pop    edi
  426bff:	add    BYTE PTR [edx-0x77],dl
  426c02:	xchg   BYTE PTR [eax],al
  426c04:	mov    cl,ah
  426c06:	enter  0xcbcc,0xff
  426c0a:	(bad)  
  426c0c:	or     edi,edi
  426c0e:	add    BYTE PTR ss:[ebx],bl
  426c11:	(bad)  
  426c12:	jmp    0x426c13
  426c14:	es int3 
  426c16:	push   ecx
  426c17:	add    BYTE PTR [ebx-0x77],bl
  426c1a:	xor    eax,0x6effdb89
  426c1f:	or     DWORD PTR [eax+eax*1],0xffffffdf
  426c23:	int3   
  426c24:	push   esp
  426c25:	add    BYTE PTR [edi+0x1ff3700],ch
  426c2b:	jmp    DWORD PTR [ebx-0x7d]
  426c2e:	iret   
  426c2f:	int3   
  426c30:	les    eax,FWORD PTR [ebx-0x7f0001]
  426c36:	sbb    al,0x0
  426c38:	jp     0x426c3a
  426c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c3b:	and    DWORD PTR [edx-0x7400df7d],0xffffffff
  426c42:	cmp    DWORD PTR [eax],eax
  426c44:	sbb    WORD PTR [eax+eax*1-0x6d],0xffff
  426c4a:	cmp    eax,0xfb0079ff
  426c4f:	dec    ebp
  426c51:	jmp    eax
  426c53:	add    BYTE PTR [ebp-0x34],dh
  426c56:	mov    ds:0xa40056ff,eax
  426c5b:	add    BYTE PTR [ecx+0x1cccb6ff],dh
  426c61:	call   DWORD PTR [edi-0x2effd034]
  426c67:	add    dh,bl
  426c69:	mov    DWORD PTR [ecx],eax
  426c6b:	add    ch,ah
  426c6d:	sub    ebp,0xffffffcc
  426c70:	ja     0x426c72
  426c72:	jb     0x426c73
  426c74:	pop    edx
  426c75:	add    BYTE PTR [edi+0x0],bh
  426c78:	scas   al,BYTE PTR es:[edi]
  426c79:	dec    edx
  426c7b:	mov    DWORD PTR [edi+edi*8+0x4],ecx
  426c7f:	mov    DWORD PTR [edx],esp
  426c81:	and    edx,0xffffffff
  426c84:	retf   0x1989
  426c87:	mov    DWORD PTR [edx-0x1],esi
  426c8a:	hlt    
  426c8b:	inc    ebx
  426c8d:	mov    ebx,esp
  426c8f:	add    bh,bh
  426c91:	add    ah,bh
  426c93:	add    BYTE PTR [ebx],bl
  426c95:	push   ecx
  426c97:	add    BYTE PTR [ebx-0x28ff5b01],dh
  426c9d:	push   DWORD PTR [edx]
  426c9f:	or     DWORD PTR [eax+eax*1],0xffffffed
  426ca3:	add    BYTE PTR [esi],ch
  426ca5:	jmp    FWORD PTR [edi+edi*8]
  426ca8:	jnp    0x426caa
  426caa:	cli    
  426cab:	int3   
  426cac:	call   0x700:0x1e890fff
  426cb3:	push   DWORD PTR [ecx]
  426cb5:	add    bh,cl
  426cb7:	add    BYTE PTR [edx-0x357c1f7d],ch
  426cbd:	push   DWORD PTR [esp+ecx*8+0x14]
  426cc1:	add    DWORD PTR [eax-0x6300c37d],0xffffffff
  426cc8:	in     eax,0x83
  426cca:	mov    bh,bh
  426ccc:	(bad)  
  426ccd:	(bad)  
  426cce:	call   0x7242ced3
  426cd3:	mov    DWORD PTR [ecx-0x34],ebx
  426cd6:	sub    eax,0x7d005b83
  426cdb:	add    BYTE PTR [ebx],bl
  426cdd:	(bad)  
  426cde:	jns    0x426cdf
  426ce0:	push   esp
  426ce1:	call   FWORD PTR [edi-0x2600997d]
  426ce7:	mov    DWORD PTR [ecx+0x0],esp
  426cea:	xchg   esp,eax
  426ceb:	call   FWORD PTR [ecx]
  426ced:	add    BYTE PTR [ecx],bl
  426cef:	add    cl,dh
  426cf1:	jmp    DWORD PTR [ebx+eax*4]
  426cf4:	pop    ds
  426cf5:	inc    edx
  426cf7:	inc    DWORD PTR [edi-0x1]
  426cfa:	mov    WORD PTR [ebx-0x77],sp
  426cfe:	push   esp
  426cff:	add    BYTE PTR [ecx],dl
  426d01:	call   DWORD PTR ds:0x2b00fcff
  426d07:	call   DWORD PTR [ecx]
  426d09:	add    BYTE PTR ds:0xe4838783,bh
  426d0f:	call   FWORD PTR [eax]
  426d11:	push   DWORD PTR [edx-0x7d]
  426d14:	aaa    
  426d15:	add    ah,bl
  426d17:	int3   
  426d18:	sub    eax,0x3fff81cc
  426d1d:	call   DWORD PTR ds:0x4ff1989
  426d23:	adc    DWORD PTR [edi-0x34],0x6c
  426d27:	(bad)  
  426d28:	cmp    al,0xff
  426d2a:	pushf  
  426d2b:	(bad)  
  426d2c:	jmp    0xcd418131
  426d31:	mov    edx,edx
  426d33:	int3   
  426d34:	add    BYTE PTR [eax],0xe3
  426d37:	int3   
  426d38:	ss push edi
  426d3b:	add    BYTE PTR [ebx+eax*4-0x60005a],ah
  426d42:	push   0xffffffff
  426d44:	and    eax,0x80ff1900
  426d49:	add    BYTE PTR [ebx],ch
  426d4b:	mov    DWORD PTR [edi],ebx
  426d4d:	add    dl,cl
  426d4f:	sbb    DWORD PTR [edi+edi*8-0x61],0xffffffff
  426d54:	cmp    bh,bh
  426d56:	jbe    0x426cdb
  426d58:	jg     0x426d59
  426d5a:	xchg   edi,eax
  426d5b:	push   DWORD PTR [ebp+0x0]
  426d5e:	(bad)  
  426d5f:	dec    DWORD PTR [eax]
  426d61:	int3   
  426d62:	add    DWORD PTR [ebx-0x33f70088],eax
  426d68:	test   al,0xff
  426d6a:	dec    esi
  426d6b:	dec    DWORD PTR [edi+edi*8-0x2c]
  426d6f:	dec    DWORD PTR [ebx-0x507ca801]
  426d75:	inc    ebp
  426d77:	add    BYTE PTR [ebx-0x1],al
  426d7a:	xor    DWORD PTR [eax],eax
  426d7c:	rol    DWORD PTR [eax],cl
  426d7e:	mov    bh,0xff
  426d80:	loop   0x426d81
  426d82:	in     al,0x83
  426d84:	pop    esp
  426d85:	or     DWORD PTR [edx+0x0],0xffffff92
  426d89:	add    DWORD PTR [esi-0x1],0xfffffff7
  426d8d:	jmp    edx
  426d8f:	(bad)  
  426d90:	(bad)  
  426d91:	call   DWORD PTR [edi]
  426d93:	int3   
  426d94:	mov    al,ds:0x34833383
  426d99:	add    BYTE PTR [esi-0x3a33467d],dl
  426d9f:	sub    DWORD PTR [eax+eax*1],0x6b
  426da3:	add    BYTE PTR [ebx+0x0],al
  426da6:	test   BYTE PTR [eax],al
  426da8:	repnz or DWORD PTR [ecx-0x1],0xfffffff5
  426dad:	add    BYTE PTR [edi-0xd7c8d01],bh
  426db3:	add    ch,dh
  426db5:	add    BYTE PTR [edi-0x1],dh
  426db8:	add    BYTE PTR [ebx+0x6a0019],0x88
  426dbf:	(bad)  
  426dc0:	cmp    edi,edi
  426dc2:	lahf   
  426dc3:	add    BYTE PTR [ebp+0x21ff56ff],ah
  426dc9:	and    DWORD PTR [eax+0x370080ff],0xffffffff
  426dd0:	push   cs
  426dd1:	jmp    DWORD PTR [ecx-0x7d00e87d]
  426dd7:	push   DWORD PTR [ebx+0x83eeff]
  426ddd:	dec    DWORD PTR [edx-0x2876c077]
  426de3:	or     ebx,0xffffffcc
  426de6:	into   
  426de7:	add    BYTE PTR [eax+eax*1-0x5f7c63],cl
  426dee:	or     eax,DWORD PTR [eax]
  426df0:	pop    ss
  426df1:	push   DWORD PTR [edi+edi*8-0x6c]
  426df5:	add    BYTE PTR [edx-0x7400d777],cl
  426dfb:	add    BYTE PTR [edi-0x7d],cl
  426dfe:	push   cs
  426dff:	add    BYTE PTR [ebx+0x29ffd689],ah
  426e05:	or     DWORD PTR [edi+edi*8-0x600012],0x3d
  426e0d:	add    bh,bl
  426e0f:	xor    DWORD PTR [ebx-0x1],0x60
  426e13:	dec    ecx
  426e15:	adc    DWORD PTR [esi-0x1],0xffffffa9
  426e19:	call   DWORD PTR [eax+0x0]
  426e1c:	jecxz  0x426e1e
  426e1e:	pop    edx
  426e1f:	add    BYTE PTR [eax+eax*1+0x9],bl
  426e23:	add    BYTE PTR [edx+0x12001300],ah
  426e29:	add    ch,bl
  426e2b:	add    BYTE PTR [edi+0x7700ef83],ch
  426e31:	call   DWORD PTR [ebx-0x1]
  426e34:	fild   WORD PTR [eax]
  426e36:	ror    DWORD PTR [ecx-0x4b765e],1
  426e3c:	ja     0x426e3d
  426e3e:	cmp    BYTE PTR [eax],al
  426e40:	jb     0x426dc5
  426e42:	or     eax,DWORD PTR [ebx-0xb7ff66]
  426e48:	xlat   BYTE PTR ds:[ebx]
  426e49:	call   DWORD PTR [eax-0x1]
  426e4c:	mov    ebx,0xba89e400
  426e51:	add    BYTE PTR [ebx+eax*4-0x7c6fff13],dh
  426e58:	test   edi,edi
  426e5a:	jge    0x426e5b
  426e5c:	xchg   ebp,eax
  426e5d:	call   FWORD PTR [esi]
  426e5f:	push   DWORD PTR [esp+ecx*8+0x42]
  426e63:	(bad)  
  426e64:	in     al,dx
  426e65:	jmp    FWORD PTR [edi-0x5338000]
  426e6b:	add    ah,dh
  426e6d:	dec    DWORD PTR [ebp-0x1]
  426e70:	dec    ah
  426e72:	in     al,0x83
  426e74:	lods   eax,DWORD PTR ds:[esi]
  426e75:	adc    DWORD PTR [eax-0x1],0xffffff85
  426e79:	mov    DWORD PTR [ecx+0x0],edi
  426e7c:	fcos   
  426e7e:	jecxz  0x426e7f
  426e80:	inc    ebp
  426e81:	add    BYTE PTR [edi+0x0],dh
  426e84:	jle    0x426e86
  426e86:	in     eax,dx
  426e87:	adc    edi,0xffffff83
  426e8a:	xchg   BYTE PTR [eax],al
  426e8c:	and    eax,0x6100feff
  426e91:	add    BYTE PTR [eax+eax*1+0xdb00be],bh
  426e98:	mov    edx,0xd2839eff
  426e9d:	inc    DWORD PTR [eax]
  426e9f:	jmp    FWORD PTR [edi-0x64ffbd7d]
  426ea5:	(bad)  
  426ea6:	fiadd  DWORD PTR [eax]
  426ea8:	(bad)  
  426eaa:	in     eax,dx
  426eab:	add    BYTE PTR [eax+eax*1-0x46],dh
  426eaf:	call   FWORD PTR [edx]
  426eb1:	(bad)  
  426eb2:	cmp    eax,DWORD PTR [eax]
  426eb4:	ins    DWORD PTR es:[edi],dx
  426eb5:	adc    DWORD PTR [ebx+0x0],0xffffffe2
  426eb9:	jmp    FWORD PTR [esi]
  426ebb:	add    BYTE PTR ds:0xfb00e0ff,dh
  426ec1:	add    DWORD PTR [edi-0x77],0xffffffe2
  426ec5:	call   DWORD PTR [edi]
  426ec7:	add    BYTE PTR [eax],ch
  426ec9:	sbb    DWORD PTR ds:0xa3ff1b00,0xffffffff
  426ed0:	inc    ebx
  426ed1:	dec    DWORD PTR [esi-0x1]
  426ed4:	push   ds
  426ed5:	jmp    DWORD PTR [edi-0x34]
  426ed8:	fadd   DWORD PTR [eax]
  426eda:	inc    ecx
  426edb:	dec    edi
  426edd:	add    bh,cl
  426edf:	mov    DWORD PTR [ebp-0x6600ba7d],esi
  426ee5:	sbb    edx,0xffffffff
  426ee8:	outs   dx,BYTE PTR ds:[esi]
  426ee9:	add    BYTE PTR [eax-0x7d],bl
  426eec:	gs (bad) 
  426eee:	cld    
  426eef:	cmp    ebx,0xffffffff
  426ef2:	or     edi,edi
  426ef4:	pop    esp
  426ef5:	add    BYTE PTR [edx+0x220025ff],ch
  426efb:	call   DWORD PTR [eax]
  426efd:	int3   
  426efe:	data16 int3 
  426f00:	loopne 0x426e8b
  426f02:	inc    edi
  426f03:	or     ebx,0xffffffff
  426f06:	xchg   esi,eax
  426f07:	sub    DWORD PTR [edi],0xffffff83
  426f0a:	adc    edi,edi
  426f0c:	popa   
  426f0d:	(bad)  
  426f0e:	mov    edx,0x49ff20ff
  426f13:	cmp    DWORD PTR [esi],0xffffffff
  426f16:	out    dx,eax
  426f17:	int3   
  426f18:	sbb    bh,bh
  426f1a:	cmp    bh,bh
  426f1c:	dec    esi
  426f1d:	call   DWORD PTR [esi-0x77]
  426f20:	push   esi
  426f21:	add    DWORD PTR [eax],0xffffffff
  426f24:	ret    0x8683
  426f27:	add    BYTE PTR [ebx],bh
  426f29:	call   FWORD PTR [ecx]
  426f2b:	dec    DWORD PTR [esp+ecx*8]
  426f2e:	pop    esi
  426f2f:	sbb    DWORD PTR [ebx],0xffffffff
  426f32:	jae    0x426f33
  426f34:	and    al,0x0
  426f36:	ins    DWORD PTR es:[edi],dx
  426f37:	add    dl,al
  426f39:	cmp    DWORD PTR [ecx+0x0],0x7
  426f3d:	jmp    DWORD PTR [eax-0x1]
  426f40:	ja     0x426f42
  426f42:	fdivr  st,st(7)
  426f44:	stc    
  426f45:	call   FWORD PTR [esi+0x27000a00]
  426f4b:	mov    DWORD PTR [ecx],eax
  426f4d:	add    bh,dh
  426f4f:	mov    DWORD PTR [eax+eax*1],ebx
  426f52:	aad    0x0
  426f54:	fcmove st,st(4)
  426f56:	test   DWORD PTR [eax],eax
  426f58:	inc    ebp
  426f59:	mov    DWORD PTR [edx-0x6bffb000],eax
  426f5f:	add    DWORD PTR [esi+0x83b7ff],0x0
  426f66:	(bad)  
  426f67:	add    BYTE PTR [edx],dl
  426f69:	int3   
  426f6a:	adc    eax,0xe4fffbff
  426f6f:	push   DWORD PTR [esi-0x7dff2a01]
  426f75:	dec    DWORD PTR [ebp-0x34]
  426f78:	add    edi,edi
  426f7a:	sub    al,0x89
  426f7c:	bound  eax,QWORD PTR [ebx-0x33ce76b9]
  426f82:	cwde   
  426f83:	and    DWORD PTR [eax+0x67003aff],0xffffff83
  426f8a:	aad    0xff
  426f8c:	clc    
  426f8d:	call   DWORD PTR [edi+0x5dffa6ff]
  426f93:	mov    DWORD PTR [ecx+ecx*4-0x93ff3d],edi
  426f9a:	enter  0xc6cc,0xff
  426f9e:	or     edi,edi
  426fa0:	sar    bh,0xef
  426fa3:	inc    ecx
  426fa5:	int3   
  426fa6:	jp     0x426fa8
  426fa8:	add    bh,bh
  426faa:	sbb    edi,edi
  426fac:	jp     0x426fad
  426fae:	sti    
  426faf:	(bad)  
  426fb0:	std    
  426fb1:	int3   
  426fb2:	xchg   edx,eax
  426fb3:	jmp    FWORD PTR [edx]
  426fb5:	add    BYTE PTR [ebx+0x0],ah
  426fb8:	xchg   ebx,eax
  426fb9:	add    BYTE PTR [edx],ch
  426fbb:	sbb    DWORD PTR [ecx+0x78004389],0x0
  426fc2:	and    eax,0xf8009e83
  426fc7:	add    DWORD PTR [eax-0x15001100],0x0
  426fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fcf:	push   edi
  426fd1:	call   FWORD PTR [edi+edi*8-0xea7c6f]
  426fd8:	scas   al,BYTE PTR es:[edi]
  426fd9:	add    BYTE PTR ds:0x2583b183,dl
  426fdf:	add    ecx,0x0
  426fe2:	push   edi
  426fe3:	add    BYTE PTR [eax],ah
  426fe5:	jmp    DWORD PTR [eax]
  426fe7:	add    ah,ah
  426fe9:	add    bh,al
  426feb:	call   FWORD PTR [esi]
  426fed:	dec    DWORD PTR [ebp-0x1]
  426ff0:	(bad)  
  426ff1:	inc    ebp
  426ff3:	add    BYTE PTR [esp+ecx*8+0xa89b9],al
  426ffa:	loopne 0x426fc8
  426ffc:	std    
  426ffd:	adc    DWORD PTR [eax+eax*1],0x4e
  427001:	adc    DWORD PTR [esp+ecx*8+0x2b],0x0
  427006:	out    0xff,al
  427008:	or     edi,edi
  42700a:	adc    edi,edi
  42700c:	sub    al,0x0
  42700e:	jbe    0x427010
  427010:	test   BYTE PTR [ebx-0x33b3007d],0xd2
  427017:	call   DWORD PTR [ebx+0x5589abff]
  42701d:	dec    esp
  42701f:	and    DWORD PTR [edi],0xffffffff
  427022:	pop    ebx
  427023:	(bad)  
  427024:	cmp    al,0x0
  427026:	clc    
  427027:	mov    DWORD PTR [edx-0x1],ebx
  42702a:	idiv   bh
  42702c:	dec    edi
  42702d:	jmp    DWORD PTR [edx+0x88343ff]
  427033:	mov    ebp,esi
  427035:	inc    DWORD PTR [ecx+0x0]
  427038:	call   0x694253c0
  42703d:	(bad)  
  42703e:	mov    ebx,0x64004aff
  427043:	adc    DWORD PTR [eax-0x1],0xffffff87
  427047:	add    BYTE PTR [ecx],bl
  427049:	or     DWORD PTR [ebx+0x7a002acc],0xffffffff
  427050:	cwde   
  427051:	call   ebp
  427053:	add    BYTE PTR [ebx-0x1],bh
  427056:	aam    0xff
  427058:	xchg   ecx,eax
  427059:	call   DWORD PTR [edx+0x7e0067ff]
  42705f:	int3   
  427060:	xchg   esi,eax
  427061:	push   DWORD PTR [edi+0x4cff05ff]
  427067:	add    BYTE PTR [ecx-0x34],ah
  42706a:	push   0xea892a00
  42706f:	push   esi
  427071:	mov    DWORD PTR [ebx-0x1],ebx
  427074:	sub    al,0x0
  427076:	stc    
  427077:	and    DWORD PTR [ebp-0x1],0xffffff97
  42707b:	int3   
  42707c:	sbb    eax,0x120057ff
  427081:	(bad)  
  427082:	(bad)  
  427084:	adc    cl,ah
  427086:	or     BYTE PTR [ecx-0x7c30ffc3],0xdf
  42708d:	int3   
  42708e:	pop    ss
  42708f:	add    BYTE PTR ds:0xbd00fd00,cl
  427095:	add    ah,al
  427097:	(bad)  
  427098:	mov    ecx,0x3d893600
  42709d:	(bad)  
  42709e:	mov    edx,0x71ffc500
  4270a3:	add    BYTE PTR [ebx],cl
  4270a5:	or     esi,0x0
  4270a8:	icebp  
  4270a9:	push   ecx
  4270ab:	(bad)  
  4270ac:	std    
  4270ad:	sbb    DWORD PTR [ebx],0xffffffff
  4270b0:	cli    
  4270b1:	add    BYTE PTR [esp+ecx*8],bh
  4270b4:	pop    edi
  4270b5:	int3   
  4270b6:	mov    dl,0xff
  4270b8:	loopne 0x427086
  4270ba:	(bad)  
  4270bb:	jmp    edx
  4270bd:	call   ebx
  4270bf:	(bad)  
  4270c0:	mov    edi,0xfd007dcc
  4270c5:	(bad)  
  4270c6:	cmp    eax,DWORD PTR [eax]
  4270c8:	mov    ?,edi
  4270ca:	lods   eax,DWORD PTR ds:[esi]
  4270cb:	add    BYTE PTR [edi-0x5800be00],dh
  4270d1:	jmp    DWORD PTR [ecx]
  4270d3:	adc    ecx,0xffffff83
  4270d6:	push   esi
  4270d7:	add    bl,bh
  4270d9:	int3   
  4270da:	sti    
  4270db:	dec    DWORD PTR [esi-0xafff501]
  4270e1:	int3   
  4270e2:	call   0xd000:0xf8ffdbff
  4270e9:	add    DWORD PTR [eax-0x1],0x5
  4270ed:	dec    edi
  4270ef:	push   DWORD PTR [edx]
  4270f1:	mov    DWORD PTR [ebx],esi
  4270f3:	add    al,ch
  4270f5:	call   FWORD PTR [ecx-0x1]
  4270f8:	icebp  
  4270f9:	add    BYTE PTR ds:0x76ff35ff,dl
  4270ff:	jmp    DWORD PTR [edi-0x1]
  427102:	cli    
  427103:	add    BYTE PTR [edi-0x1],ah
  427106:	xor    eax,0xcfff3300
  42710b:	call   FWORD PTR [esi]
  42710d:	add    ch,dh
  42710f:	add    BYTE PTR [esi+0x5f898f00],ch
  427115:	(bad)  
  427116:	fiadd  WORD PTR [ebx+0xd78985]
  42711c:	add    edi,edi
  42711e:	pop    ecx
  42711f:	mov    eax,eax
  427121:	mov    DWORD PTR [ebx-0x1],ebp
  427124:	popf   
  427125:	add    BYTE PTR [ecx-0x34],cl
  427128:	push   ss
  427129:	(bad)  
  42712a:	mov    esp,0x2fff47cc
  42712f:	dec    DWORD PTR [ebx]
  427131:	call   FWORD PTR [esi]
  427133:	(bad)  
  427134:	jl     0x427136
  427136:	add    DWORD PTR [eax],eax
  427138:	imul   ecx,DWORD PTR [ecx-0x8c7c64],0xe38314
  427142:	mov    ebp,0x26ff58ff
  427147:	(bad)  
  427148:	jmp    0x4270cd
  42714a:	(bad)  
  42714c:	test   edi,edi
  42714e:	and    eax,DWORD PTR [eax]
  427150:	push   0xffffff83
  427152:	add    DWORD PTR [eax],eax
  427154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427155:	add    BYTE PTR [esp+ecx*8+0xf5ffc5],ch
  42715c:	ret    
  42715d:	add    BYTE PTR [ebx-0x500547d],ch
  427163:	add    ah,ah
  427165:	mov    DWORD PTR [ecx],edi
  427167:	or     DWORD PTR [edi+0x45ff6489],0x0
  42716e:	push   WORD PTR [eax-0x3c002301]
  427175:	add    BYTE PTR [ecx],ch
  427177:	inc    DWORD PTR [edx+0x36ff27ff]
  42717d:	push   ebp
  42717f:	call   ebx
  427181:	call   DWORD PTR [ecx-0x1]
  427184:	icebp  
  427185:	add    BYTE PTR [esi+0x73ffdecc],ah
  42718b:	push   DWORD PTR [eax-0x1]
  42718e:	mov    bl,0x0
  427190:	cmp    edi,edi
  427192:	enter  0x689,0xcc
  427196:	inc    ebx
  427197:	add    BYTE PTR [ecx],bl
  427199:	add    BYTE PTR ds:0xa89d5ff,ch
  42719f:	add    BYTE PTR [ebx],dl
  4271a1:	dec    ebx
  4271a3:	sbb    DWORD PTR [ebp+0x10057ff],0x0
  4271aa:	adc    bh,bh
  4271ac:	aam    0xff
  4271ae:	xor    DWORD PTR [eax],eax
  4271b0:	popa   
  4271b1:	push   edi
  4271b3:	add    dh,dh
  4271b5:	(bad)  
  4271b6:	cmp    bh,bh
  4271b8:	call   0xf3431ebd
  4271bd:	mov    DWORD PTR [edi],ebx
  4271bf:	add    BYTE PTR [edi-0x1],ch
  4271c2:	xor    bh,bh
  4271c4:	add    BYTE PTR ds:[ebx],bl
  4271c7:	int3   
  4271c8:	test   al,0x83
  4271ca:	inc    esi
  4271cb:	or     ebp,0xffffff89
  4271ce:	mov    bl,0xff
  4271d0:	aam    0xcc
  4271d2:	dec    edx
  4271d3:	mov    DWORD PTR [edi-0x1],esp
  4271d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271d7:	call   FWORD PTR [eax+0x7bff82ff]
  4271dd:	call   FWORD PTR [esi+0x39899aff]
  4271e3:	add    BYTE PTR [eax+eax*1],al
  4271e6:	add    edi,edi
  4271e8:	out    0x83,eax
  4271ea:	stos   BYTE PTR es:[edi],al
  4271eb:	and    eax,0x0
  4271ee:	lock call FWORD PTR [ebp+0x59006500]
  4271f5:	int3   
  4271f6:	(bad)  
  4271f8:	adc    bh,bh
  4271fa:	pop    ss
  4271fb:	add    dh,al
  4271fd:	jmp    DWORD PTR [ebp+0x54006683]
  427203:	add    BYTE PTR [edi-0x7d],cl
  427206:	(bad)  
  427207:	push   DWORD PTR [esi]
  427209:	add    BYTE PTR [edi-0x34766e7d],ch
  42720f:	(bad)  
  427210:	std    
  427211:	mov    DWORD PTR [ebp-0x1],ecx
  427214:	ds int3 
  427216:	dec    esp
  427218:	xor    eax,0xb7ff7d00
  42721d:	add    BYTE PTR [ecx],ah
  42721f:	int3   
  427220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427221:	add    DWORD PTR [edi-0x34],0x35
  427225:	jmp    FWORD PTR [eax+eax*1-0x3329ffd6]
  42722c:	sbb    bh,bh
  42722e:	jge    0x42722f
  427230:	call   0xa400:0x620085ff
  427237:	add    bl,bh
  427239:	call   FWORD PTR [ebx+0x72ffc3cc]
  42723f:	add    cl,bl
  427241:	call   DWORD PTR [eax+eax*1]
  427244:	jle    0x427246
  427246:	test   BYTE PTR [eax],0xdc
  427249:	add    bh,dh
  42724b:	or     DWORD PTR [esi-0x1],0xfffffff3
  42724f:	add    BYTE PTR [eax+0x208335ff],dl
  427255:	dec    edi
  427257:	int3   
  427258:	lds    eax,FWORD PTR [eax]
  42725a:	icebp  
  42725b:	add    BYTE PTR [ecx-0x44340000],bh
  427261:	(bad)  
  427262:	mov    ebx,0x31004600
  427267:	add    bl,bl
  427269:	int3   
  42726a:	and    eax,0xe6ff41ff
  42726f:	mov    DWORD PTR [edi+edi*8-0xb],eax
  427273:	jmp    DWORD PTR [esi]
  427275:	call   DWORD PTR [edi+edi*8+0x69]
  427279:	dec    DWORD PTR [edx]
  42727b:	add    dl,ch
  42727d:	add    BYTE PTR [ebx],bh
  42727f:	or     DWORD PTR [esi+0x0],0xffffffcf
  427283:	add    BYTE PTR [eax+eax*1-0x763c7cb7],bl
  42728a:	clc    
  42728b:	jmp    FWORD PTR ds:0xdffbcff
  427291:	inc    DWORD PTR [ebp-0x7d]
  427294:	mov    edi,0x358359ff
  427299:	inc    DWORD PTR [ecx-0x257c5a00]
  42729f:	call   esp
  4272a1:	(bad)  
  4272a2:	cmp    edi,edi
  4272a4:	dec    ebp
  4272a5:	add    BYTE PTR [eax-0x2c00c100],al
  4272ab:	add    BYTE PTR [edi],cl
  4272ad:	call   FWORD PTR [ebx+0x1e83e800]
  4272b3:	add    cl,bl
  4272b5:	call   DWORD PTR [ebx]
  4272b7:	add    dl,al
  4272b9:	add    DWORD PTR [ebx],0xffffff83
  4272bc:	inc    ebx
  4272bd:	add    BYTE PTR [edx],bl
  4272bf:	inc    DWORD PTR [ebp-0x1]
  4272c2:	jmp    0x4272c3
  4272c4:	inc    edx
  4272c5:	mov    DWORD PTR [edi-0x54006e7d],esp
  4272cb:	inc    DWORD PTR [ecx-0x1]
  4272ce:	inc    ebp
  4272cf:	(bad)  
  4272d0:	call   0x7a41cfd5
  4272d5:	push   DWORD PTR [ebx+0x0]
  4272d8:	scas   al,BYTE PTR es:[edi]
  4272d9:	and    DWORD PTR [esi-0x1],0x56
  4272dd:	xor    DWORD PTR [ebx-0x6009900],0xffffffcc
  4272e4:	call   0x8141fbe8
  4272e9:	add    BYTE PTR [edx],cl
  4272eb:	add    BYTE PTR [ecx],dl
  4272ed:	add    cl,al
  4272ef:	sub    DWORD PTR [ecx],0xffffff83
  4272f2:	add    eax,DWORD PTR [ebx-0x8b0083]
  4272f8:	fld    QWORD PTR [eax]
  4272fa:	test   al,0xff
  4272fc:	sahf   
  4272fd:	dec    DWORD PTR [edi+edi*8]
  427300:	inc    edx
  427301:	call   DWORD PTR [ecx]
  427303:	(bad)  
  427304:	jnp    0x427305
  427306:	imul   ecx,esp,0xff1accca
  42730c:	adc    eax,DWORD PTR [eax]
  42730e:	cmp    edi,edi
  427310:	dec    esi
  427311:	add    BYTE PTR [edx],cl
  427313:	jmp    DWORD PTR [ecx-0x7d]
  427316:	push   eax
  427317:	add    BYTE PTR [ecx-0x7633c601],dh
  42731d:	jmp    FWORD PTR [edx+0x7f0053ff]
  427323:	inc    DWORD PTR [edi]
  427325:	sbb    DWORD PTR [ecx+0x13ff0583],0xffffff83
  42732c:	jge    0x42732d
  42732e:	jbe    0x427330
  427330:	and    bh,bh
  427332:	jnp    0x427333
  427334:	jl     0x427335
  427336:	mov    ebp,0xc0ffeeff
  42733b:	call   DWORD PTR [ebx]
  42733d:	inc    ebp
  42733f:	add    BYTE PTR [eax+eax*1-0x77009f],ch
  427346:	cmp    edi,0x31
  427349:	jmp    FWORD PTR [ecx-0x1]
  42734c:	in     al,dx
  42734d:	int3   
  42734e:	test   BYTE PTR [ecx-0x76957c5d],0xf9
  427355:	xor    DWORD PTR [ecx-0x34],0xffffff90
  427359:	add    dl,bh
  42735b:	dec    edx
  42735d:	push   DWORD PTR [eax]
  42735f:	and    DWORD PTR [eax+eax*1-0x47c48],0x78
  427367:	dec    DWORD PTR [eax-0x7d]
  42736a:	and    DWORD PTR [eax],eax
  42736c:	inc    esp
  42736d:	call   FWORD PTR [edi+edi*8+0xaaff71]
  427374:	inc    ebx
  427375:	add    dl,ah
  427377:	add    BYTE PTR [eax-0x34],bl
  42737a:	inc    ecx
  42737b:	jmp    FWORD PTR [esi+0x0]
  42737e:	cmp    edi,0xfa0064
  427384:	sar    edi,cl
  427386:	and    eax,DWORD PTR [eax]
  427388:	xchg   esi,eax
  427389:	push   edi
  42738b:	add    cl,ah
  42738d:	jmp    FWORD PTR [eax-0x1]
  427390:	jmp    0x20432894
  427395:	mov    DWORD PTR [edx-0x26339100],esi
  42739b:	jmp    FWORD PTR [ecx-0x1]
  42739e:	iret   
  42739f:	add    DWORD PTR [eax-0x44002934],0xffffffff
  4273a6:	dec    esp
  4273a8:	(bad)  
  4273a9:	(bad)  
  4273aa:	jl     0x4273ab
  4273ac:	pop    ebp
  4273ad:	inc    DWORD PTR [edi+0x6683ab89]
  4273b3:	mov    DWORD PTR [edi],eax
  4273b5:	jmp    FWORD PTR [eax-0x1]
  4273b8:	enter  0x8fff,0x89
  4273bc:	ins    BYTE PTR es:[edi],dx
  4273bd:	jmp    DWORD PTR [esi]
  4273bf:	add    bl,ah
  4273c1:	add    BYTE PTR [ecx+0x66ffd2cc],cl
  4273c7:	add    dh,dl
  4273c9:	push   eax
  4273cb:	mov    ebp,edi
  4273cd:	mov    DWORD PTR [edi+edi*8+0x65],esi
  4273d1:	jmp    DWORD PTR [eax-0x1]
  4273d4:	and    eax,0x8bffb2ff
  4273d9:	dec    DWORD PTR ds:0x9100facc
  4273df:	mov    DWORD PTR [ecx-0x7900297d],esi
  4273e5:	add    BYTE PTR [ecx-0x34],dl
  4273e8:	push   es
  4273e9:	add    BYTE PTR [ecx+0x0],cl
  4273ec:	sub    DWORD PTR fs:[eax],0xffffff83
  4273f0:	add    bh,bh
  4273f2:	and    ecx,esp
  4273f4:	push   0x3d835eff
  4273f9:	add    BYTE PTR [ebp-0x7d],dl
  4273fc:	cmc    
  4273fd:	inc    DWORD PTR [edi+0x0]
  427400:	mov    edi,0x61002b00
  427405:	add    BYTE PTR [ebp-0x4b009c77],dl
  42740b:	call   FWORD PTR [ecx+0x0]
  42740e:	jg     0x427393
  427410:	sbb    DWORD PTR [eax],eax
  427412:	mov    eax,0x4283c2ff
  427417:	call   FWORD PTR [esp+ecx*8]
  42741a:	push   ds
  42741b:	dec    edi
  42741d:	and    DWORD PTR [ebx],0xffffffff
  427420:	stc    
  427421:	sub    DWORD PTR [esi-0x1],0xffffffa0
  427425:	cmp    edx,0x0
  427428:	adc    al,0xff
  42742a:	push   ecx
  42742b:	add    BYTE PTR [edi-0x1],dh
  42742e:	outs   dx,BYTE PTR ds:[esi]
  42742f:	add    BYTE PTR [edi+edi*8],cl
  427432:	add    BYTE PTR [eax],al
  427434:	in     eax,0x83
  427436:	(bad)  
  427437:	int3   
  427438:	ret    
  427439:	cmp    DWORD PTR [edi+edi*8],0xffffffc9
  42743d:	push   DWORD PTR [ebp-0x77]
  427440:	mov    ch,0xff
  427442:	pop    ss
  427443:	add    BYTE PTR [eax+eax*1+0x770079],al
  42744a:	jno    0x42744b
  42744c:	jb     0x42744d
  42744e:	fwait
  42744f:	inc    DWORD PTR [edi+edi*8]
  427452:	stos   DWORD PTR es:[edi],eax
  427453:	add    BYTE PTR [ebx],dl
  427455:	add    BYTE PTR [edi+0x0],ah
  427458:	and    al,0x0
  42745a:	xor    edi,edi
  42745c:	fdivp  st(7),st
  42745e:	inc    ecx
  42745f:	(bad)  
  427460:	sti    
  427461:	add    BYTE PTR [edx-0x58007200],bl
  427467:	dec    DWORD PTR [eax]
  427469:	adc    DWORD PTR [esi-0x41ff9400],0xffffffff
  427470:	leave  
  427471:	inc    DWORD PTR [edi-0x1a7cfb00]
  427477:	call   FWORD PTR [edx-0x34]
  42747a:	adc    al,BYTE PTR [eax]
  42747c:	into   
  42747d:	push   esp
  42747f:	add    ch,dl
  427481:	add    BYTE PTR [ecx+0x0],bh
  427484:	data16 add BYTE PTR [ecx],ah
  427487:	call   DWORD PTR [ebx-0x1]
  42748a:	into   
  42748b:	mov    DWORD PTR [edx-0x7d],edi
  42748e:	push   0xf9007500
  427493:	int3   
  427494:	jo     0x427496
  427496:	int3   
  427497:	(bad)  
  427498:	jp     0x42741d
  42749a:	test   eax,0xc289c0cc
  42749f:	(bad)  
  4274a0:	cmp    edi,edi
  4274a2:	jl     0x4274a4
  4274a4:	and    al,0xff
  4274a6:	outs   dx,DWORD PTR ds:[esi]
  4274a7:	inc    DWORD PTR [edx+0x22ff63ff]
  4274ad:	add    BYTE PTR [ebp-0x58339e01],dh
  4274b3:	add    BYTE PTR [edi+edi*8+0x508978],bh
  4274ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274bb:	int3   
  4274bc:	xor    BYTE PTR [ebx-0xec0037],al
  4274c2:	push   cs
  4274c3:	jmp    DWORD PTR [edx-0x1]
  4274c6:	push   edi
  4274c7:	push   DWORD PTR [eax+0x0]
  4274ca:	add    al,0xff
  4274cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274cd:	push   DWORD PTR [edx]
  4274cf:	inc    DWORD PTR [ebx-0x7600df01]
  4274d5:	and    DWORD PTR [edx+0x0],0x59
  4274d9:	add    BYTE PTR [ebp-0x36ffe67d],bh
  4274df:	(bad)  
  4274e0:	cld    
  4274e1:	inc    DWORD PTR [edx-0x1]
  4274e4:	std    
  4274e5:	or     DWORD PTR [ebp-0x5f7c2401],0x0
  4274ec:	test   DWORD PTR [eax],eax
  4274ee:	add    BYTE PTR fs:[esi+0x448340ff],ch
  4274f5:	sbb    edx,0x0
  4274f8:	xchg   esp,eax
  4274f9:	push   DWORD PTR [ebp+0x0]
  4274fc:	ret    0x1100
  4274ff:	inc    edi
  427501:	jmp    eax
  427503:	xor    DWORD PTR [ecx],0x0
  427506:	jbe    0x427508
  427508:	in     al,dx
  427509:	int3   
  42750a:	push   ds
  42750b:	push   DWORD PTR [esi+0x1dffb7ff]
  427511:	add    bh,dl
  427513:	mov    DWORD PTR ds:0x65ffd3cc,esp
  427519:	(bad)  
  42751a:	mov    esp,0xadccfaff
  42751f:	int3   
  427520:	(bad)  
  427523:	push   DWORD PTR [ebp+0x17cccfff]
  427529:	add    BYTE PTR [edi],cl
  42752b:	jmp    DWORD PTR [ecx-0x4b7c1b01]
  427531:	inc    DWORD PTR [edi+edi*8]
  427534:	pop    edx
  427535:	or     DWORD PTR [edi-0x7d],0x18
  427539:	int3   
  42753a:	push   edi
  42753b:	jmp    DWORD PTR [edx+0x5000dcff]
  427541:	add    BYTE PTR [ebp-0xd005900],dh
  427547:	add    BYTE PTR [ebp+0x7b00c500],ah
  42754d:	inc    ebx
  42754f:	add    cl,bh
  427551:	int3   
  427552:	mov    dh,0xff
  427554:	(bad)  
  427555:	dec    edx
  427557:	jmp    esp
  427559:	add    BYTE PTR [edx+0x0],dh
  42755c:	jl     0x42755e
  42755e:	sub    bh,bh
  427560:	mov    al,ds:0x2c00b289
  427565:	jmp    FWORD PTR [edx+0x54ffc8ff]
  42756b:	(bad)  
  42756c:	cld    
  42756d:	jmp    DWORD PTR [edx+0x0]
  427570:	inc    esp
  427571:	mov    DWORD PTR [eax+eax*1-0x6f],ecx
  427575:	add    BYTE PTR [esi-0x77],al
  427578:	js     0x427579
  42757a:	(bad)  
  42757b:	jmp    FWORD PTR [edx]
  42757d:	int3   
  42757e:	cmp    eax,0x4dff9900
  427583:	jmp    FWORD PTR [edx-0x1]
  427586:	repz push DWORD PTR [esi-0x1]
  42758a:	cmp    bh,bh
  42758c:	mov    DWORD PTR [ebx-0x760b0082],eax
  427592:	xchg   ecx,eax
  427593:	add    BYTE PTR [ecx+0x3f8345ff],dh
  427599:	add    bh,dh
  42759b:	push   ecx
  42759d:	add    dl,dl
  42759f:	add    BYTE PTR [esi],ah
  4275a1:	adc    ecx,0xffffffff
  4275a4:	cmp    edi,0x4a
  4275a7:	add    al,bl
  4275a9:	add    BYTE PTR [ecx+ecx*4],ah
  4275ac:	pusha  
  4275ad:	jmp    FWORD PTR [esi+0x0]
  4275b0:	jmp    0x9100:0xd7837983
  4275b7:	dec    edi
  4275b9:	int3   
  4275ba:	jno    0x4275bb
  4275bc:	rol    DWORD PTR [ebx-0x95ff6c],0xa2
  4275c3:	inc    DWORD PTR [esi-0x533337d]
  4275c9:	add    BYTE PTR [ecx],cl
  4275cb:	int3   
  4275cc:	push   edi
  4275cd:	int3   
  4275ce:	std    
  4275cf:	jmp    FWORD PTR [edx]
  4275d1:	int3   
  4275d2:	mov    esi,0x5783c2ff
  4275d7:	(bad)  
  4275d8:	mov    eax,0x35ff6700
  4275dd:	int3   
  4275de:	push   cs
  4275df:	int3   
  4275e0:	mov    ebp,0x41ffe1ff
  4275e5:	sbb    DWORD PTR [eax-0x1],0xffffffcf
  4275e9:	or     ecx,0x0
  4275ec:	xor    BYTE PTR [ebx-0x33790047],al
  4275f2:	(bad)  
  4275f3:	(bad)  
  4275f4:	std    
  4275f5:	adc    ebx,0xffffffff
  4275f8:	scas   eax,DWORD PTR es:[edi]
  4275f9:	or     DWORD PTR ds:0xe1005989,0x0
  427600:	ins    BYTE PTR es:[edi],dx
  427601:	int3   
  427602:	dec    eax
  427603:	add    BYTE PTR [eax],al
  427605:	add    BYTE PTR [esi-0x69ffaa01],al
  42760b:	call   FWORD PTR [esp+ecx*8-0x7d]
  42760f:	dec    DWORD PTR [edi]
  427611:	add    BYTE PTR [ebx-0x50ff8f01],cl
  427617:	add    bh,cl
  427619:	add    BYTE PTR [eax-0x1],ch
  42761c:	scas   eax,DWORD PTR es:[edi]
  42761d:	add    BYTE PTR [edi],cl
  42761f:	(bad)  
  427620:	out    dx,eax
  427621:	add    BYTE PTR [ebx-0x1],bl
  427624:	xchg   edx,eax
  427625:	int3   
  427626:	stos   DWORD PTR es:[edi],eax
  427627:	call   FWORD PTR [esi]
  427629:	add    BYTE PTR [ebp+0x9008600],dl
  42762f:	add    DWORD PTR [eax-0x1],0xffffffcc
  427633:	add    BYTE PTR [edx+0x0],bh
  427636:	inc    esi
  427637:	jmp    DWORD PTR [edi]
  427639:	add    BYTE PTR [edi],cl
  42763b:	add    BYTE PTR [ebx+eax*4],dl
  42763e:	sbb    eax,0xa7ff6900
  427643:	int3   
  427644:	adc    al,BYTE PTR [ebx-0x92ff9f]
  42764a:	mov    esp,0xe8ffd4ff
  42764f:	add    BYTE PTR [edx],bl
  427651:	(bad)  
  427652:	jmp    0xbbff:0x44ffdeff
  427659:	inc    DWORD PTR [edi-0x1]
  42765c:	mov    edx,0xf38309ff
  427661:	add    BYTE PTR [ebx-0x77],ch
  427664:	out    0xff,eax
  427666:	mov    ecx,0x4200d000
  42766b:	dec    ebp
  42766d:	add    al,ch
  42766f:	jmp    DWORD PTR ds:0x9dff67ff
  427675:	mov    edi,esp
  427677:	add    BYTE PTR [edi+edi*8+0x1683c1],ah
  42767e:	sub    bh,bh
  427680:	icebp  
  427681:	int3   
  427682:	xchg   ecx,eax
  427683:	add    BYTE PTR [eax],al
  427685:	or     DWORD PTR [edi],0x0
  427688:	(bad)  
  427689:	add    ah,dh
  42768b:	add    DWORD PTR [eax-0x77],0xffffffd4
  42768f:	call   FWORD PTR [ebx+0x0]
  427692:	jl     0x427693
  427694:	add    DWORD PTR [eax],eax
  427696:	or     eax,DWORD PTR [ebx-0x7ce700da]
  42769c:	xchg   ecx,eax
  42769d:	add    BYTE PTR [edi+edi*8-0x2dff8e],al
  4276a4:	fxch   st(4)
  4276a6:	pushf  
  4276a7:	add    BYTE PTR [ecx],dl
  4276a9:	int3   
  4276aa:	inc    eax
  4276ab:	call   DWORD PTR [edx]
  4276ad:	int3   
  4276ae:	mov    cl,0x83
  4276b0:	xor    bh,bh
  4276b2:	aas    
  4276b3:	jmp    FWORD PTR [edx-0x7a00cf01]
  4276b9:	call   DWORD PTR [edi]
  4276bb:	cmp    DWORD PTR [esi],0x0
  4276be:	jle    0x4276c0
  4276c0:	fdivp  st(7),st
  4276c2:	nop
  4276c3:	add    ah,ch
  4276c5:	jmp    FWORD PTR [eax]
  4276c7:	int3   
  4276c8:	stc    
  4276c9:	dec    esi
  4276cb:	add    BYTE PTR [edi],dl
  4276cd:	call   FWORD PTR [edi-0x77]
  4276d0:	jp     0x427655
  4276d2:	sahf   
  4276d3:	xor    DWORD PTR [edx],0xffffffff
  4276d6:	imul   edi,edi,0x9ff40
  4276dc:	push   esi
  4276dd:	jmp    DWORD PTR [edi-0x1]
  4276e0:	cli    
  4276e1:	push   DWORD PTR [edx-0x527cc001]
  4276e7:	add    BYTE PTR [edi+edi*8],al
  4276ea:	cmp    bh,0xc5
  4276ed:	add    DWORD PTR [ebp-0x7d],0xffffffb3
  4276f1:	add    BYTE PTR [ebx],cl
  4276f3:	add    BYTE PTR [ecx-0x1],dh
  4276f6:	add    eax,0xa1ff5f00
  4276fb:	add    BYTE PTR [edi+edi*8-0x1],ah
  4276ff:	int3   
  427700:	xor    bh,bh
  427702:	jge    0x427704
  427704:	call   FWORD PTR [bp-0x1]
  427708:	or     DWORD PTR [ebx-0x7cf6003e],eax
  42770e:	pop    es
  42770f:	jmp    eax
  427711:	cmp    DWORD PTR [ebp-0x1],0xffffff8c
  427715:	dec    DWORD PTR [eax-0x1]
  427718:	pop    eax
  427719:	jmp    DWORD PTR [edi+0x4cffc800]
  42771f:	add    BYTE PTR [edx],ah
  427721:	(bad)  
  427722:	add    BYTE PTR ds:[esi-0x7d],dh
  427726:	sbb    bh,bh
  427728:	sub    esp,ecx
  42772a:	dec    ebp
  42772b:	mov    DWORD PTR [esi+0x5a836c00],esi
  427731:	add    bl,ah
  427733:	add    ch,dh
  427735:	jmp    DWORD PTR [edx]
  427737:	mov    DWORD PTR [edx-0x3933487d],esi
  42773d:	int3   
  42773e:	mov    ebp,0xe0ff4b00
  427743:	add    ch,bh
  427745:	push   ebx
  427747:	add    BYTE PTR [ecx],dh
  427749:	inc    edx
  42774b:	(bad)  
  42774c:	js     0x42774d
  42774e:	aaa    
  42774f:	dec    DWORD PTR [edi]
  427751:	call   DWORD PTR [ecx]
  427753:	jmp    DWORD PTR [eax+0x69009300]
  427759:	inc    DWORD PTR [edi-0x5fff101]
  42775f:	dec    DWORD PTR [ebx]
  427761:	call   FWORD PTR [edx]
  427763:	(bad)  
  427764:	fld    DWORD PTR [eax]
  427766:	mov    al,0xff
  427768:	jmp    0x42776a
  42776a:	pop    DWORD PTR [ebx+0x7dff04]
  427770:	fadd   DWORD PTR [eax]
  427772:	push   es
  427773:	push   DWORD PTR [ecx]
  427775:	add    BYTE PTR [ebp+0x0],dl
  427778:	mov    ds:0x2e00d500,eax
  42777d:	int3   
  42777e:	test   eax,0x24ccafff
  427783:	push   eax
  427785:	jmp    FWORD PTR [eax-0x3ff5f01]
  42778b:	add    BYTE PTR [ecx],ch
  42778d:	int3   
  42778e:	mov    esi,0xd300a3ff
  427793:	call   esp
  427795:	jmp    DWORD PTR ds:0xbfff2f83
  42779b:	mov    DWORD PTR [esi-0x7d],eax
  42779e:	mov    edi,edi
  4277a0:	add    DWORD PTR [ebx+0x9dffbf],eax
  4277a6:	ds add dl,al
  4277a9:	add    BYTE PTR [edi+edi*8+0xb1fff6],ah
  4277b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277b1:	int3   
  4277b2:	(bad)  
  4277b4:	inc    esp
  4277b5:	adc    ebx,0xffffffff
  4277b8:	(bad)  
  4277b9:	jmp    DWORD PTR [esi+0x2effed83]
  4277bf:	mov    DWORD PTR [eax+eax*1],ebp
  4277c2:	jmp    0x1c42a54a
  4277c7:	mov    ebp,ebx
  4277c9:	inc    edx
  4277cb:	push   DWORD PTR [esi]
  4277cd:	add    BYTE PTR [edi-0x77],dh
  4277d0:	(bad)  
  4277d1:	call   FWORD PTR [edi]
  4277d3:	add    BYTE PTR [ebx-0x1],dl
  4277d6:	cmp    bh,bh
  4277d8:	mov    al,ds:0xd400ba00
  4277dd:	xor    DWORD PTR [ecx],0xffffffff
  4277e0:	cld    
  4277e1:	(bad)  
  4277e2:	dec    DWORD PTR [ecx-0x7c770012]
  4277e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277e9:	push   DWORD PTR [esi-0x1]
  4277ec:	popa   
  4277ed:	add    BYTE PTR [esi-0x7b001401],ah
  4277f3:	int3   
  4277f4:	rol    DWORD PTR [eax],cl
  4277f6:	xchg   edi,eax
  4277f7:	add    BYTE PTR [ecx-0x1],ch
  4277fa:	test   BYTE PTR [ebx-0x33c400ca],0x3d
  427801:	jmp    FWORD PTR [ecx+0x2a004bff]
  427807:	push   DWORD PTR [edi+0x0]
  42780a:	cmp    eax,0xe009fcc
  42780f:	jmp    FWORD PTR [ebp-0x1]
  427812:	sbb    eax,0xadff17cc
  427817:	int3   
  427818:	fwait
  427819:	(bad)  
  42781a:	fdivr  st,st(7)
  42781c:	or     DWORD PTR ds:[edi+0x0],0xffffffa3
  427821:	add    BYTE PTR [edx],dh
  427823:	inc    edi
  427825:	xor    DWORD PTR [edx+0x25ffce89],0xffffff83
  42782c:	inc    edi
  42782d:	add    BYTE PTR [ecx],bh
  42782f:	sub    DWORD PTR [edi+edi*8-0x420080],0xffffffe5
  427837:	mov    DWORD PTR [ebp+0x0],esp
  42783a:	jbe    0x42783b
  42783c:	pop    eax
  42783d:	add    BYTE PTR [ebx],ch
  42783f:	dec    DWORD PTR [ecx-0x7533a601]
  427845:	add    BYTE PTR [ebp-0x1],bl
  427848:	jb     0x427849
  42784a:	outs   dx,BYTE PTR ds:[esi]
  42784b:	add    BYTE PTR [ebx],dl
  42784d:	add    al,bl
  42784f:	add    BYTE PTR [esi-0x1],al
  427852:	add    bh,bh
  427854:	sbb    edi,edi
  427856:	(bad)  
  427857:	int3   
  427858:	sub    DWORD PTR [ebx+0x73ffa9],eax
  42785e:	mov    al,ds:0xc4ff5700
  427863:	push   ebp
  427865:	jmp    DWORD PTR [edx]
  427867:	sub    edi,0xffffffff
  42786a:	xchg   edx,eax
  42786b:	mov    DWORD PTR [ebp-0x157c4e00],esp
  427871:	add    DWORD PTR [eax-0x2000434],0x0
  427878:	pop    ds
  427879:	call   DWORD PTR [edx]
  42787b:	mov    DWORD PTR [edx],eax
  42787d:	mov    DWORD PTR [edi-0x7eff1501],eax
  427883:	int3   
  427884:	call   DWORD PTR fs:[edi]
  427887:	jmp    edi
  427889:	cmp    DWORD PTR [ecx],0xffffffff
  42788c:	jnp    0x42788e
  42788e:	fdivp  st(7),st
  427890:	sahf   
  427891:	sbb    DWORD PTR [edi+edi*8-0x3369001c],0xffffffff
  427899:	jmp    DWORD PTR ds:0xce003aff
  42789f:	(bad)  
  4278a0:	std    
  4278a1:	add    bh,cl
  4278a3:	dec    DWORD PTR ds:0x1fcc17ff
  4278a9:	inc    DWORD PTR [ebx+eax*4-0x64]
  4278ad:	call   DWORD PTR [ebp-0x1]
  4278b0:	add    BYTE PTR [ebx-0x7c4f0065],0x4e
  4278b7:	dec    DWORD PTR [edi+0x4eff3aff]
  4278bd:	jmp    DWORD PTR [edx]
  4278bf:	add    cl,dh
  4278c1:	(bad)  
  4278c2:	jge    0x427847
  4278c4:	xchg   edi,edi
  4278c6:	cmp    DWORD PTR [ebx-0x247c6c],eax
  4278cc:	or     eax,0x3008f00
  4278d1:	inc    DWORD PTR [ebp-0x1]
  4278d4:	lahf   
  4278d5:	mov    DWORD PTR [eax],esi
  4278d7:	(bad)  
  4278d8:	cmp    bh,bh
  4278da:	sub    BYTE PTR [eax],al
  4278dc:	jp     0x4278de
  4278de:	inc    edi
  4278df:	jmp    esi
  4278e1:	dec    DWORD PTR [edx+0x5c0055ff]
  4278e7:	add    BYTE PTR [eax],ch
  4278e9:	add    BYTE PTR [eax+eax*1-0x760b00fd],cl
  4278f0:	cmp    al,0xff
  4278f2:	adc    eax,DWORD PTR [eax]
  4278f4:	mov    WORD PTR [eax],es
  4278f6:	add    edi,edi
  4278f8:	push   ecx
  4278f9:	dec    DWORD PTR [esp+ecx*8]
  4278fc:	jmp    0x4278fe
  4278fe:	push   esi
  4278ff:	add    bh,cl
  427901:	inc    DWORD PTR [ebx-0x1]
  427904:	mov    BYTE PTR [ecx+0x9b00f6],cl
  42790a:	mov    edi,0xc58901ff
  42790f:	add    BYTE PTR [ebx],dl
  427911:	call   edx
  427913:	add    BYTE PTR [ecx+ecx*4-0x2c7cff],ch
  42791a:	sub    DWORD PTR [eax],eax
  42791c:	jmp    FWORD PTR gs:[ecx+0x27ffa2ff]
  427923:	add    BYTE PTR [ebx-0xaffb400],dl
  427929:	call   FWORD PTR [ebx+0xdccb100]
  42792f:	inc    DWORD PTR [eax]
  427931:	sbb    DWORD PTR [edi-0x1],0x46
  427935:	push   DWORD PTR [ebx+0x7800a6ff]
  42793b:	int3   
  42793c:	retf   0x8fcc
  42793f:	(bad)  
  427940:	mov    ecx,0xd1009300
  427945:	and    DWORD PTR [edi+0x0],0xfffffffa
  427949:	call   DWORD PTR [ebx+0x2e009dff]
  42794f:	int3   
  427950:	adc    al,0xff
  427952:	retf   0x41ff
  427955:	inc    DWORD PTR [eax-0x2333107d]
  42795b:	(bad)  
  42795c:	cld    
  42795d:	mov    DWORD PTR [ecx+0x2c831200],edi
  427963:	push   ebx
  427965:	add    dh,al
  427967:	call   FWORD PTR [ebx-0x7d]
  42796a:	jmp    0x42796b
  42796c:	mov    eax,0xabff2c00
  427971:	push   DWORD PTR [esi]
  427973:	add    BYTE PTR [ebp-0x2ff4e00],cl
  427979:	inc    edx
  42797b:	add    BYTE PTR [edx+0x7896bff],ch
  427981:	push   DWORD PTR [edx]
  427983:	add    BYTE PTR [ebx+0x0],bl
  427986:	sar    bh,cl
  427988:	or     BYTE PTR [eax],al
  42798a:	sar    edi,0x32
  42798d:	add    BYTE PTR [eax+eax*1+0x67],cl
  427991:	inc    DWORD PTR [ebx+0x0]
  427994:	fiadd  WORD PTR [eax]
  427996:	aad    0xcc
  427998:	xchg   ebx,eax
  427999:	(bad)  
  42799a:	(bad)  
  42799c:	mov    BYTE PTR [ebx-0x6fffcf],al
  4279a2:	pop    eax
  4279a3:	(bad)  
  4279a4:	js     0x4279a6
  4279a6:	ror    BYTE PTR [ecx-0x1f0044],0xe5
  4279ad:	cmp    DWORD PTR [edi+edi*8],0x22
  4279b1:	mov    DWORD PTR [ebx+eax*4+0xaf004d],eax
  4279b8:	test   edi,edi
  4279ba:	xchg   edi,eax
  4279bb:	and    DWORD PTR [edx],0xffffff83
  4279be:	mov    bh,0xff
  4279c0:	(bad)  
  4279c1:	mov    DWORD PTR [esi-0x1],edx
  4279c4:	pop    eax
  4279c5:	jmp    FWORD PTR [edx-0x1]
  4279c8:	adc    eax,0x9aff6aff
  4279cd:	cmp    DWORD PTR [esi],0xffffffff
  4279d0:	pop    ds
  4279d1:	dec    DWORD PTR [esi]
  4279d3:	add    al,dh
  4279d5:	add    BYTE PTR [ebx+eax*4-0x12],ch
  4279d9:	add    BYTE PTR [ecx-0x6200bc7d],dh
  4279df:	call   DWORD PTR [eax-0x46008200]
  4279e5:	cmp    DWORD PTR [eax-0x2300db00],0xffffffff
  4279ec:	or     DWORD PTR [ebx+0x1089ad],eax
  4279f2:	inc    edx
  4279f3:	add    BYTE PTR [ebp+0x50ffda00],dl
  4279f9:	push   DWORD PTR [ecx+0x8ff1083]
  4279ff:	inc    DWORD PTR [ebp-0x1]
  427a02:	icebp  
  427a03:	add    BYTE PTR [ebx-0x7d],cl
  427a06:	std    
  427a07:	(bad)  
  427a08:	cmp    bh,bh
  427a0a:	cwde   
  427a0b:	add    BYTE PTR [edi+0x0],al
  427a0e:	add    edi,edi
  427a10:	ins    DWORD PTR es:[edi],dx
  427a11:	push   eax
  427a13:	add    BYTE PTR ds:0x74894d00,al
  427a19:	int3   
  427a1a:	pop    ecx
  427a1b:	mov    ecx,edx
  427a1d:	int3   
  427a1e:	add    BYTE PTR fs:[esi-0x1],bh
  427a22:	push   0xbeff9eff
  427a27:	add    BYTE PTR [eax-0x1],al
  427a2a:	ins    DWORD PTR es:[edi],dx
  427a2b:	call   FWORD PTR [ebp-0x40002200]
  427a31:	(bad)  
  427a32:	jmp    0xe1ff:0x100c589
  427a39:	push   DWORD PTR [ecx]
  427a3b:	inc    DWORD PTR [eax+eax*1-0x7c777c8f]
  427a42:	jp     0x427a44
  427a44:	sbb    eax,DWORD PTR [eax]
  427a46:	mov    DWORD PTR cs:[edi+edi*8],ecx
  427a4a:	dec    ecx
  427a4b:	call   ebx
  427a4d:	add    DWORD PTR [ebx-0x34767d01],0xffffffff
  427a54:	aas    
  427a55:	add    BYTE PTR [ebp-0x65339c00],dh
  427a5b:	push   DWORD PTR [ecx+0x7100fdff]
  427a61:	(bad)  
  427a62:	out    dx,eax
  427a63:	add    ah,cl
  427a65:	jmp    DWORD PTR [edi]
  427a67:	jmp    FWORD PTR [edi+edi*8]
  427a6a:	and    edi,edi
  427a6c:	sar    bh,cl
  427a6e:	out    dx,al
  427a6f:	add    ah,ah
  427a71:	add    BYTE PTR [eax-0x7d],dl
  427a74:	(bad)  
  427a75:	inc    DWORD PTR [ebx+0x47ffa500]
  427a7b:	push   DWORD PTR [ebp-0x11760200]
  427a81:	or     DWORD PTR [ebx+0x0],0x22
  427a85:	mov    ebp,ebp
  427a87:	add    BYTE PTR [edi+edi*8-0x4b],ch
  427a8b:	add    BYTE PTR [ebp+0x0],ah
  427a8e:	mov    ebp,0x3583c689
  427a93:	add    bl,dh
  427a95:	mov    DWORD PTR ds:0xa5ff73cc,ebp
  427a9b:	jmp    ebp
  427a9d:	jmp    DWORD PTR [eax+0x57ff6aff]
  427aa3:	add    BYTE PTR [edx-0x7d],ah
  427aa6:	retf   0x48ff
  427aa9:	add    BYTE PTR ds:0xb8372ff,ah
  427aaf:	add    BYTE PTR [esp+ecx*8-0x5b],ch
  427ab3:	add    BYTE PTR [ecx-0x7d],al
  427ab6:	mov    al,0xff
  427ab8:	mov    ecx,0xd400aaff
  427abd:	inc    DWORD PTR [ecx+0x6883d083]
  427ac3:	add    dh,ah
  427ac5:	(bad)  
  427ac6:	jg     0x427ac7
  427ac8:	push   ds
  427ac9:	add    BYTE PTR [ebx],dl
  427acb:	add    dh,dh
  427acd:	int3   
  427ace:	sbb    al,0xff
  427ad0:	sub    al,0x0
  427ad2:	dec    ebp
  427ad3:	jmp    FWORD PTR [esi+0x0]
  427ad6:	repnz push DWORD PTR [edi]
  427ad9:	add    BYTE PTR [esi-0x2b7cd501],cl
  427adf:	dec    ebp
  427ae1:	int3   
  427ae2:	or     al,0x0
  427ae4:	clc    
  427ae5:	call   FWORD PTR [ecx-0x4cffd27d]
  427aeb:	call   FWORD PTR [edi+edi*8+0x3ecc42]
  427af2:	mov    DWORD PTR [ebx+0x7f83ac],0xff93ff6c
  427afc:	xor    bh,bh
  427afe:	(bad)  
  427aff:	push   DWORD PTR [ecx+0x0]
  427b02:	sbb    al,0x0
  427b04:	lods   al,BYTE PTR ds:[esi]
  427b05:	inc    DWORD PTR [edi]
  427b07:	jmp    FWORD PTR [esi+0x0]
  427b0a:	cmp    bh,bh
  427b0c:	mov    ebx,0x5e00a100
  427b11:	add    BYTE PTR [ebp+0x0],dh
  427b14:	inc    ecx
  427b15:	add    DWORD PTR [edi],0x0
  427b18:	loopne 0x427b19
  427b1a:	and    al,0xff
  427b1c:	or     al,0x0
  427b1e:	jo     0x427b20
  427b20:	addr16 (bad) 
  427b22:	mov    ebp,0x52ff4f00
  427b27:	or     DWORD PTR [ecx-0x77],0xffffffda
  427b2b:	add    bl,bl
  427b2d:	and    DWORD PTR [edi],0xffffffff
  427b30:	mov    edx,0xa7ff20cc
  427b35:	inc    DWORD PTR [edx-0x6f007601]
  427b3b:	and    DWORD PTR [esi],0xffffff83
  427b3e:	adc    eax,0xadffa5ff
  427b43:	jmp    FWORD PTR [ebx-0x1f766100]
  427b49:	add    BYTE PTR [edx-0x147ca200],ah
  427b4f:	add    BYTE PTR [ebx],al
  427b51:	call   FWORD PTR [ebp-0x16330301]
  427b57:	jmp    edx
  427b59:	add    BYTE PTR [edi+0x0],cl
  427b5c:	jnp    0x427ae1
  427b5e:	xchg   edi,edi
  427b60:	ins    BYTE PTR es:[edi],dx
  427b61:	and    DWORD PTR [ebx-0x77],0x15
  427b65:	add    BYTE PTR [esi],dh
  427b67:	and    DWORD PTR [edx],0xffffff83
  427b6a:	dec    edi
  427b6b:	add    BYTE PTR [ebx+eax*4+0x3d],ah
  427b6f:	add    BYTE PTR [ebx+eax*4],bl
  427b72:	inc    ebp
  427b73:	inc    DWORD PTR [edi+0x5aff1a00]
  427b79:	add    BYTE PTR [esi],ch
  427b7b:	add    BYTE PTR [ebx+0x0],dl
  427b7e:	sub    bh,bh
  427b80:	add    edi,edi
  427b82:	add    eax,DWORD PTR [eax]
  427b84:	(bad)  
  427b85:	push   DWORD PTR [ebp+0x52ccb3ff]
  427b8b:	call   FWORD PTR [edi+edi*8-0x7ce900b0]
  427b92:	xor    bh,bh
  427b94:	xchg   BYTE PTR [ebx+0x7fff39],al
  427b9a:	mov    esi,0x38365ff
  427b9f:	add    BYTE PTR [edi+edi*8],bl
  427ba2:	or     DWORD PTR es:[esi],0x0
  427ba6:	push   ebp
  427ba7:	add    BYTE PTR [eax],cl
  427ba9:	add    BYTE PTR [edx],cl
  427bab:	(bad)  
  427bac:	jg     0x427bad
  427bae:	pop    ss
  427baf:	inc    DWORD PTR [edx]
  427bb1:	add    cl,al
  427bb3:	int3   
  427bb4:	mov    ecx,0x15ff83ff
  427bb9:	and    DWORD PTR [edi-0x1],0x30
  427bbd:	add    BYTE PTR [ecx-0x1],cl
  427bc0:	test   BYTE PTR [ebx+0x890066],0x21
  427bc7:	dec    esp
  427bc9:	add    BYTE PTR [edi+edi*8],bh
  427bcc:	popf   
  427bcd:	inc    DWORD PTR [esi]
  427bcf:	(bad)  
  427bd0:	cmp    ecx,esp
  427bd2:	jl     0x427bd4
  427bd4:	sbb    ecx,DWORD PTR [ecx-0xdc0023]
  427bda:	or     BYTE PTR [ecx-0x76d20026],0xd6
  427be1:	(bad)  
  427be2:	jg     0x427be3
  427be4:	push   ds
  427be5:	add    BYTE PTR [ebx-0x1],dh
  427be8:	xlat   BYTE PTR ds:[ebx]
  427be9:	(bad)  
  427bea:	fadd   DWORD PTR [eax]
  427bec:	arpl   di,di
  427bee:	cmp    DWORD PTR [eax],eax
  427bf0:	xchg   edi,edi
  427bf2:	and    eax,0x95ffc6cc
  427bf7:	push   DWORD PTR [ebx-0x36005900]
  427bfd:	add    ah,dl
  427bff:	cmp    edx,0x0
  427c02:	and    al,BYTE PTR [ebx+0x50ff1b]
  427c08:	bound  eax,QWORD PTR [ebx-0x7700ee]
  427c0e:	adc    eax,0x4dffd500
  427c13:	cmp    DWORD PTR [eax-0x5fff5b00],0xffffffcc
  427c1a:	jbe    0x427c1c
  427c1c:	xchg   esp,eax
  427c1d:	add    BYTE PTR ds:0x9bff10ff,al
  427c23:	dec    DWORD PTR [edx-0x1]
  427c26:	push   edx
  427c27:	(bad)  
  427c28:	jl     0x427c29
  427c2a:	mov    BYTE PTR [eax],al
  427c2c:	mov    ah,0x0
  427c2e:	sbb    bh,bh
  427c30:	mov    cl,0xff
  427c32:	je     0x427bbd
  427c34:	jmp    DWORD PTR fs:[edx-0x4e00dd7d]
  427c3b:	dec    DWORD PTR [edx]
  427c3d:	push   DWORD PTR [esi-0x1]
  427c40:	dec    ebp
  427c41:	push   ebx
  427c43:	add    BYTE PTR [edi+0xcffcf89],dl
  427c49:	jmp    DWORD PTR [edi-0x7a7cdc77]
  427c4f:	int3   
  427c50:	leave  
  427c51:	jmp    FWORD PTR [ebp-0x1]
  427c54:	aaa    
  427c55:	(bad)  
  427c56:	call   0xe1c6185a
  427c5b:	add    BYTE PTR [ebx+0x0],ch
  427c5e:	push   ebp
  427c5f:	add    BYTE PTR [ebx+eax*4],ch
  427c62:	sbb    DWORD PTR [eax],eax
  427c64:	aad    0x0
  427c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c67:	dec    DWORD PTR [eax+eax*1]
  427c6a:	cld    
  427c6b:	add    BYTE PTR [edi+edi*8+0x97ff78],al
  427c72:	xchg   bh,bh
  427c74:	js     0x427c75
  427c76:	xchg   edi,eax
  427c77:	add    ah,al
  427c79:	add    cl,dl
  427c7b:	mov    ebx,ebp
  427c7d:	inc    DWORD PTR [ebx+0x0]
  427c80:	jge    0x427c82
  427c82:	push   ds
  427c83:	add    ebp,0x0
  427c86:	add    al,0xff
  427c88:	sub    al,0xff
  427c8a:	pop    esp
  427c8b:	int3   
  427c8c:	push   edx
  427c8d:	and    ebp,0xffffffff
  427c90:	outs   dx,BYTE PTR ds:[esi]
  427c91:	mov    DWORD PTR [eax-0x2d000b00],edi
  427c97:	jmp    FWORD PTR [ebp+0x6eff27cc]
  427c9d:	add    BYTE PTR [ecx],ch
  427c9f:	add    BYTE PTR [edi+edi*8-0x2],bl
  427ca3:	inc    DWORD PTR [eax]
  427ca5:	jmp    FWORD PTR [ebx-0x1]
  427ca8:	sbb    eax,DWORD PTR [eax]
  427caa:	jmp    0x427cac
  427cac:	xchg   ebx,eax
  427cad:	call   DWORD PTR [eax-0x27ff9001]
  427cb3:	mov    DWORD PTR [esi],ecx
  427cb5:	push   edx
  427cb7:	dec    esp
  427cb9:	int3   
  427cba:	int3   
  427cbb:	int3   
  427cbc:	int3   
  427cbd:	int3   
  427cbe:	int3   
  427cbf:	int3   
  427cc0:	int3   
  427cc1:	add    DWORD PTR [eax],0xffffffff
  427cc4:	mov    DWORD PTR [eax],eax
  427cc6:	add    BYTE PTR [ebx-0x9c34c3],al
  427ccc:	sbb    eax,0xff002c58
  427cd1:	jmp    FWORD PTR [edx-0x4500]
  427cd7:	jmp    esi
  427cd9:	loop   0x427cd4
  427cdb:	jmp    eax
  427cdd:	pop    ecx
  427cde:	push   ds
  427cdf:	(bad)  
  427ce0:	inc    DWORD PTR [eax]
  427ce2:	stc    
  427ce3:	adc    ecx,0x0
  427ce6:	(bad)  
  427ce7:	push   ecx
  427ce9:	neg    DWORD PTR [eax-0x77]
  427cec:	retf   0x75bf
  427cef:	(bad)  
  427cf0:	inc    DWORD PTR [eax]
  427cf2:	xchg   edi,eax
  427cf3:	mov    edi,edx
  427cf5:	add    BYTE PTR [eax],al
  427cf7:	jmp    DWORD PTR [ebp-0x1bff129a]
  427cfd:	icebp  
  427cfe:	loope  0x427c89
  427d00:	(bad)  
  427d01:	call   DWORD PTR [edi-0xd701]
  427d07:	add    bh,al
  427d09:	cli    
  427d0a:	leave  
  427d0b:	adc    esp,0x27
  427d0e:	xor    edi,edi
  427d10:	cmp    edi,0x49
  427d13:	add    BYTE PTR [ebx+0x0],cl
  427d16:	add    BYTE PTR [ebx-0x816bfa],al
  427d1c:	int    0xad
  427d1e:	repnz inc DWORD PTR [eax]
  427d21:	dec    DWORD PTR [edx]
  427d23:	jmp    FWORD PTR [eax+0x0]
  427d26:	inc    DWORD PTR [eax]
  427d28:	ret    
  427d29:	and    DWORD PTR [ebp-0x6a98d101],ebx
  427d2f:	cmp    edi,0xffffffcc
  427d32:	sub    eax,0xcc83e189
  427d37:	(bad)  
  427d38:	stc    
  427d39:	leave  
  427d3a:	hlt    
  427d3b:	jmp    esi
  427d3d:	pop    esp
  427d3e:	or     BYTE PTR [eax],al
  427d40:	inc    DWORD PTR [eax]
  427d42:	bound  ecx,QWORD PTR [ecx-0xdb]
  427d48:	push   esi
  427d49:	mov    fs,edi
  427d4b:	(bad)  
  427d4c:	cmp    eax,0xff00cf55
  427d51:	add    al,bl
  427d53:	int3   
  427d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d55:	int3   
  427d56:	(bad)  
  427d57:	call   FWORD PTR [ebp+0x4a00be7a]
  427d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d5e:	(bad)  
  427d5f:	(bad)  
  427d60:	(bad)  
  427d61:	inc    DWORD PTR [ebx-0x7d]
  427d64:	mov    al,ds:0x1a00ff83
  427d69:	inc    ebx
  427d6a:	jecxz  0x427d6b
  427d6c:	push   edx
  427d6d:	pop    edi
  427d6e:	dec    esp
  427d70:	cmp    edi,0x69
  427d73:	add    BYTE PTR [edx+0x60ff0000],al
  427d79:	lds    esi,FWORD PTR [ebx]
  427d7b:	sub    esi,0xffffffb5
  427d7e:	retf   
  427d7f:	inc    DWORD PTR [eax]
  427d81:	call   DWORD PTR [edi-0x9c77]
  427d87:	sub    DWORD PTR [ecx+esi*8-0x7b],0xffffff83
  427d8c:	mov    ebx,0xffffb496
  427d91:	push   DWORD PTR [edx]
  427d93:	push   esp
  427d95:	dec    DWORD PTR [ecx-0x3056ce00]
  427d9b:	int3   
  427d9c:	add    al,0x91
  427d9e:	push   0x0
  427da0:	add    bh,bh
  427da2:	clc    
  427da3:	add    BYTE PTR [ebx],bh
  427da5:	add    ah,cl
  427da7:	jmp    esi
  427da9:	jo     0x427d5a
  427dab:	(bad)  
  427dac:	cld    
  427dad:	mov    ds:0xffffb8,al
  427db2:	push   es
  427db3:	mov    DWORD PTR [ebx-0x67ffff01],esi
  427db9:	push   es
  427dba:	pop    ecx
  427dbb:	adc    DWORD PTR [edx],0x47
  427dbe:	sbb    bh,bh
  427dc0:	inc    DWORD PTR [ebx-0xc000a5]
  427dc6:	(bad)  
  427dc7:	jmp    DWORD PTR [ebp+0x2dff94c9]
  427dcd:	out    0x50,eax
  427dcf:	dec    esp
  427dd1:	mov    DWORD PTR [esi],ebx
  427dd3:	dec    DWORD PTR [edi+0x7bffcc83]
  427dd9:	ins    BYTE PTR es:[edi],dx
  427dda:	(bad)  
  427ddc:	sbb    ah,BYTE PTR [ecx+0x73]
  427ddf:	add    DWORD PTR [eax],0xffffffcc
  427de2:	push   ecx
  427de3:	int3   
  427de4:	pop    ecx
  427de5:	inc    DWORD PTR [eax]
  427de7:	dec    DWORD PTR [edx-0x43]
  427dea:	test   eax,0x3173d0cc
  427def:	add    DWORD PTR [ebx+0x62ffbb89],0xffffffff
  427df6:	(bad)  
  427df7:	(bad)  
  427df8:	in     eax,dx
  427df9:	xor    BYTE PTR [eax+eax*1],0xcd
  427dfd:	inc    edx
  427dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dff:	add    bh,bh
  427e01:	dec    edi
  427e03:	add    BYTE PTR [ebx],ch
  427e05:	(bad)  
  427e06:	dec    esp
  427e08:	retf   
  427e09:	ret    
  427e0a:	rol    DWORD PTR [eax],1
  427e0c:	xor    ebx,DWORD PTR [esp+edx*4]
  427e0f:	int3   
  427e10:	mov    DWORD PTR [eax],eax
  427e12:	sbb    eax,0x89ff71ff
  427e17:	push   esp
  427e19:	or     DWORD PTR [edi-0x7d],esp
  427e1c:	ret    
  427e1d:	das    
  427e1e:	out    0xff,eax
  427e20:	int3   
  427e21:	adc    DWORD PTR [edx],0xffffffff
  427e24:	xchg   ecx,eax
  427e25:	add    BYTE PTR [eax],al
  427e27:	cmp    DWORD PTR [ecx-0x6f00afaf],0xffffff93
  427e2e:	mov    dl,0xff
  427e30:	add    bh,bh
  427e32:	sub    eax,DWORD PTR [eax]
  427e34:	sbb    BYTE PTR [ebx+0x7e6b8300],al
  427e3a:	dec    DWORD PTR es:[esi-0x7c009f95]
  427e41:	mov    DWORD PTR [ebp+0xdeff],edi
  427e47:	cmp    ecx,0xffffffe5
  427e4a:	addr16 int3 
  427e4c:	dec    edx
  427e4d:	or     DWORD PTR [eax+0x0],0xffffffff
  427e51:	(bad)  
  427e52:	cmp    cl,BYTE PTR [ecx-0x7c004f]
  427e58:	or     eax,DWORD PTR [ebp+0x40]
  427e5b:	call   FWORD PTR ds:0xffccba89
  427e61:	add    BYTE PTR [ecx],bl
  427e63:	(bad)  
  427e64:	mov    esi,0x58ffffcc
  427e69:	lahf   
  427e6a:	cwde   
  427e6b:	(bad)  
  427e6c:	mov    esi,0xc851
  427e71:	dec    edx
  427e73:	inc    DWORD PTR [edi]
  427e75:	(bad)  
  427e76:	inc    DWORD PTR [eax]
  427e78:	xchg   ebp,eax
  427e79:	sub    ch,ch
  427e7b:	dec    DWORD PTR [ebx+0xcc4a1e]
  427e81:	cmp    DWORD PTR [eax-0x33c501],0xffffffff
  427e88:	mov    DWORD PTR [eax+esi*2],esi
  427e8b:	dec    DWORD PTR [edi+edx*4+0x37]
  427e8f:	add    DWORD PTR [eax],0x0
  427e92:	(bad)  
  427e93:	inc    edi
  427e95:	dec    esp
  427e97:	call   FWORD PTR [esi]
  427e99:	mov    ebx,0xa26a0036
  427e9e:	mov    ds:0x7cff0000,al
  427ea3:	call   esp
  427ea5:	cmp    edi,0xffffffff
  427ea8:	sub    BYTE PTR [eax],dl
  427eaa:	out    dx,al
  427eab:	int3   
  427eac:	bound  ebp,QWORD PTR [eax+0xffa2]
  427eb2:	jo     0x427eb3
  427eb4:	jge    0x427eb5
  427eb6:	inc    DWORD PTR [ebx-0x434672]
  427ebc:	inc    edx
  427ebd:	mov    al,0x3c
  427ebf:	int3   
  427ec0:	or     esp,0xffffffdb
  427ec3:	inc    DWORD PTR [edx+0x5a00ffff]
  427ec9:	dec    ebp
  427eca:	dec    ebp
  427ecb:	inc    esi
  427ecd:	add    ebp,DWORD PTR [ecx]
  427ecf:	add    BYTE PTR [ebx+0x21ff6cff],al
  427ed5:	dec    esp
  427ed7:	add    BYTE PTR [ebx*1+0x26bffdb],dh
  427ede:	mov    al,ds:0xa5ff00ff
  427ee3:	push   ebp
  427ee5:	inc    DWORD PTR [eax]
  427ee7:	push   DWORD PTR [edi-0x3400238b]
  427eed:	jmp    0x427eb2
  427ef2:	adc    al,0x0
  427ef4:	push   edx
  427ef5:	mov    edi,edi
  427ef7:	add    BYTE PTR [ebx+0x5a],bl
  427efa:	cmp    BYTE PTR [eax],al
  427efc:	shl    bh,0x1d
  427eff:	add    DWORD PTR [eax],0xffffffff
  427f02:	call   0x67ff:0x89cca5ff
  427f09:	iret   
  427f0a:	in     eax,dx
  427f0b:	jmp    DWORD PTR [edx+ebx*1-0x7cff7c44]
  427f12:	rol    BYTE PTR [eax],1
  427f14:	retf   0xff00
  427f17:	(bad)  
  427f18:	jp     0x427f1f
  427f1a:	ret    
  427f1b:	add    BYTE PTR [edi+0x4],bh
  427f1e:	push   esp
  427f1f:	add    bh,bh
  427f21:	int3   
  427f22:	sbb    eax,DWORD PTR [eax]
  427f24:	idiv   bh
  427f26:	(bad)  
  427f27:	(bad)  
  427f28:	jmp    0xeff8:0xb3007947
  427f2f:	inc    DWORD PTR [eax]
  427f31:	add    ah,ch
  427f33:	jmp    FWORD PTR [eax+0x0]
  427f36:	(bad)  
  427f37:	jmp    FWORD PTR [ecx-0xbffd9bb]
  427f3d:	mov    ebp,0x830000a9
  427f42:	stc    
  427f43:	mov    DWORD PTR [ecx-0xe7c0001],ebx
  427f49:	adc    ebp,DWORD PTR ds:0xc326aff
  427f4f:	or     esp,0xffffffff
  427f52:	push   edx
  427f53:	jmp    DWORD PTR [eax-0x1]
  427f56:	(bad)  
  427f57:	call   DWORD PTR [ecx-0x23]
  427f5a:	mov    ds:0xbfab2600,eax
  427f5f:	add    BYTE PTR [eax],al
  427f61:	add    al,ah
  427f63:	add    BYTE PTR [ebp+0x690089ff],ch
  427f69:	xlat   BYTE PTR ds:[ebx]
  427f6a:	or     bh,bh
  427f6c:	adc    al,0x6c
  427f6e:	loop   0x427f70
  427f70:	add    bh,bh
  427f72:	sbb    eax,DWORD PTR [ebx-0xff0068]
  427f78:	leave  
  427f79:	shl    DWORD PTR [edi-0x1be3b500],1
  427f7f:	(bad)  
  427f80:	(bad)  
  427f81:	jmp    DWORD PTR [eax-0xff9200]
  427f87:	add    BYTE PTR [edx+0x5cca626],al
  427f8d:	xor    eax,0xccffcc77
  427f92:	test   al,0xff
  427f94:	mov    bl,0x0
  427f96:	inc    DWORD PTR [ebx-0xce7dc5]
  427f9c:	push   eax
  427f9d:	sbb    ebp,edi
  427f9f:	add    DWORD PTR [eax],0xffffffff
  427fa2:	mov    al,BYTE PTR [eax]
  427fa4:	push   ds
  427fa5:	add    DWORD PTR [eax],0x0
  427fa8:	push   ecx
  427fa9:	add    al,BYTE PTR [eax-0x658cc200]
  427faf:	(bad)  
  427fb0:	inc    DWORD PTR [eax]
  427fb2:	sub    eax,0xff83ff
  427fb7:	dec    DWORD PTR [ebx-0x47]
  427fba:	out    0x0,al
  427fbc:	bound  eax,QWORD PTR [ebp+eax*8-0x12760100]
  427fc3:	call   DWORD PTR [eax+0x3d00ffff]
  427fc9:	ins    DWORD PTR es:[edi],dx
  427fca:	push   esi
  427fcb:	(bad)  
  427fcc:	jnp    0x428016
  427fce:	cmp    eax,0xf4ff00ff
  427fd3:	jmp    FWORD PTR [esi+0x0]
  427fd6:	add    DWORD PTR [ebx-0xc809c5],0xffffffa4
  427fdd:	(bad)  
  427fde:	mov    ecx,0xe8ff00ff
  427fe3:	add    BYTE PTR [esi],dl
  427fe5:	(bad)  
  427fe6:	(bad)  
  427fe7:	dec    DWORD PTR [edi+0x38]
  427fea:	fimul  DWORD PTR [ecx-0x10a243]
  427ff0:	inc    DWORD PTR [eax]
  427ff2:	push   eax
  427ff3:	(bad)  
  427ff4:	jl     0x427ff6
  427ff6:	mov    DWORD PTR [ebx-0x76e11806],eax
  427ffc:	pushf  
  427ffd:	nop
  427ffe:	fiadd  WORD PTR [eax]
  428000:	cmp    edi,0xfffffff6
  428003:	add    DWORD PTR [edi+0x35ff0000],0xfffffff8
  42800a:	adc    edi,edi
  42800c:	jnp    0x427f8f
  42800e:	jns    0x428010
  428010:	int3   
  428011:	add    BYTE PTR [ecx],al
  428013:	inc    DWORD PTR [edi+0x2b0000ff]
  428019:	xor    BYTE PTR [ebx-0x5abd177d],al
  42801f:	mov    edi,edi
  428021:	call   ecx
  428023:	add    BYTE PTR [edi+edi*8+0x0],dh
  428027:	add    dh,bl
  428029:	call   0x15dc033c
  42802e:	xor    edi,edi
  428030:	mov    edi,edi
  428032:	sub    DWORD PTR [eax],eax
  428034:	fdivp  st(7),st
  428036:	inc    DWORD PTR [eax]
  428038:	shl    DWORD PTR [edi],cl
  42803a:	add    BYTE PTR ds:[esi-0x8],bl
  42803e:	sar    bh,cl
  428040:	dec    DWORD PTR [ecx-0x26335b]
  428046:	mov    DWORD PTR [ebx-0xbc57e7],eax
  42804c:	rcl    BYTE PTR [ebx+0x7b],1
  42804f:	(bad)  
  428050:	inc    DWORD PTR [eax]
  428052:	mov    bh,bh
  428054:	mov    al,0xff
  428056:	add    BYTE PTR [ebx-0x7613aab7],al
  42805c:	loope  0x428029
  42805e:	lock mov DWORD PTR [ecx-0x7600b501],ecx
  428065:	add    bh,bh
  428067:	add    BYTE PTR [esi+0x1b],ch
  42806a:	pop    ebx
  42806b:	sbb    DWORD PTR [edi],0xffffff9b
  42806e:	pop    eax
  42806f:	cmp    edi,0xffffff83
  428072:	pop    eax
  428073:	mov    edi,edi
  428075:	int3   
  428076:	int3   
  428077:	push   DWORD PTR [edi+0xd]
  42807a:	pop    ds
  42807b:	add    dl,bh
  42807d:	mov    ch,0xf7
  42807f:	add    BYTE PTR [eax],al
  428081:	add    BYTE PTR [ebp-0x1],dl
  428084:	cs mov edi,edi
  428087:	add    bh,dh
  428089:	test   al,0x10
  42808b:	mov    DWORD PTR [edi-0x7c00e276],ebp
  428091:	add    BYTE PTR [ecx-0x7c9a7d],dh
  428097:	cmp    esi,0x2d
  42809a:	jbe    0x42809b
  42809c:	add    bh,BYTE PTR [esi]
  42809e:	fild   WORD PTR [eax]
  4280a0:	int3   
  4280a1:	add    BYTE PTR [ebx+0x0],bl
  4280a4:	cmp    bh,0xff
  4280a7:	call   FWORD PTR [ecx+0x38ffcfb4]
  4280ad:	adc    al,0x34
  4280af:	int3   
  4280b0:	dec    esp
  4280b2:	dec    eax
  4280b3:	add    BYTE PTR [edi+edi*8-0x77],ah
  4280b7:	add    BYTE PTR [ebx+0x5b],bl
  4280ba:	jmp    0x4280bb
  4280bc:	repz and BYTE PTR [ebx-0x1],dl
  4280c0:	add    bh,bh
  4280c2:	or     bh,bh
  4280c4:	pop    edx
  4280c5:	(bad)  
  4280c6:	(bad)  
  4280c7:	push   edx
  4280c9:	lods   al,BYTE PTR ds:[esi]
  4280ca:	jl     0x4280cc
  4280cc:	fwait
  4280cd:	retf   
  4280ce:	inc    edi
  4280cf:	cmp    edi,0xffffffff
  4280d2:	aas    
  4280d3:	int3   
  4280d4:	and    bh,bh
  4280d6:	inc    DWORD PTR [eax]
  4280d8:	xchg   dl,dl
  4280da:	sbb    al,0xcc
  4280dc:	aas    
  4280dd:	lods   al,BYTE PTR ds:[esi]
  4280de:	pop    edi
  4280df:	int3   
  4280e0:	add    ah,cl
  4280e2:	jmp    0x41b6e7
  4280e7:	dec    DWORD PTR [esi-0x4b]
  4280ea:	xchg   ebx,eax
  4280eb:	and    DWORD PTR [esi],0x66
  4280ee:	xchg   edx,eax
  4280ef:	add    bh,bh
  4280f1:	sbb    DWORD PTR [edx-0x34],0xffffffdd
  4280f5:	add    BYTE PTR [ebx+0x6f0cf6ff],al
  4280fb:	jmp    DWORD PTR [ebx-0x50]
  4280fe:	into   
  4280ff:	mov    edi,edi
  428101:	inc    esi
  428103:	int3   
  428104:	add    eax,0xe8ffffff
  428109:	xor    ebp,eax
  42810b:	(bad)  
  42810c:	ds and eax,0xffccff96
  428112:	(bad)  
  428113:	add    BYTE PTR [eax+0xe838383],dl
  428119:	jne    0x4280c6
  42811b:	call   FWORD PTR [ebp+0xffc2d4]
  428121:	(bad)  
  428122:	fiadd  DWORD PTR [eax]
  428124:	ret    
  428125:	add    BYTE PTR [eax],al
  428127:	or     DWORD PTR [esp+edi*4-0x22],0xffffffff
  42812c:	aaa    
  42812d:	add    ah,ch
  42812f:	add    BYTE PTR [eax],al
  428131:	dec    DWORD PTR [edi+edi*8+0x5a]
  428135:	int3   
  428136:	(bad)  
  428137:	call   esp
  428139:	pop    ebp
  42813a:	dec    eax
  42813b:	(bad)  
  42813c:	jmp    0x41e1c3
  428141:	and    DWORD PTR [eax+eax*1-0x1c],0xffffffcc
  428146:	dec    esp
  428148:	fcomi  st,st(4)
  42814a:	add    BYTE PTR es:[ebx],al
  42814d:	xlat   BYTE PTR ds:[ebx]
  42814e:	enter  0xff89,0xcc
  428152:	dec    ecx
  428153:	add    BYTE PTR [ecx-0x1a00ff77],cl
  428159:	int3   
  42815a:	pop    esp
  42815b:	mov    DWORD PTR [ebx-0x30],edx
  42815e:	push   esi
  42815f:	int3   
  428160:	inc    DWORD PTR [eax]
  428162:	pop    ss
  428163:	push   DWORD PTR [ebp-0x1]
  428166:	cmp    edi,0x68
  428169:	pop    ebx
  42816a:	mov    DWORD PTR [eax],0x83fb8f8f
  428170:	int3   
  428171:	push   DWORD PTR [ecx]
  428173:	(bad)  
  428174:	mov    edi,0x43ccffff
  428179:	ins    BYTE PTR es:[edi],dx
  42817a:	dec    edi
  42817b:	add    DWORD PTR [esi+0x37],0xffffffce
  42817f:	(bad)  
  428180:	dec    DWORD PTR [ecx-0xa200fa]
  428186:	inc    DWORD PTR [eax]
  428188:	and    edi,DWORD PTR [ecx+0x77]
  42818b:	cmp    DWORD PTR [ebx],0xffffff9d
  42818e:	cmp    al,0x0
  428190:	inc    DWORD PTR [eax]
  428192:	enter  0xfe83,0x89
  428196:	add    BYTE PTR [eax],al
  428198:	pop    ebp
  428199:	in     eax,0x39
  42819b:	(bad)  
  42819c:	(bad)  
  42819e:	ins    BYTE PTR es:[edi],dx
  42819f:	inc    DWORD PTR [eax]
  4281a1:	call   ecx
  4281a3:	(bad)  
  4281a4:	fild   WORD PTR [eax]
  4281a6:	mov    edi,edi
  4281a8:	push   0xfffffffa
  4281aa:	xchg   ebx,eax
  4281ab:	sub    DWORD PTR [ebp+ecx*2-0x84],0xffffffb3
  4281b3:	add    BYTE PTR [ebx-0x34],ah
  4281b6:	add    bh,bh
  4281b8:	mov    al,0x1d
  4281ba:	xchg   edi,eax
  4281bb:	push   DWORD PTR [edx]
  4281bd:	pusha  
  4281be:	cmp    al,0xff
  4281c0:	add    ah,cl
  4281c2:	sbb    DWORD PTR [ecx+0x831b],ecx
  4281c8:	cmp    al,0xf0
  4281ca:	push   ss
  4281cb:	(bad)  
  4281cc:	fistp  DWORD PTR [ebp-0x76ff7c9a]
  4281d2:	mov    al,0x83
  4281d4:	jo     0x4281d5
  4281d6:	or     esp,0xffffffab
  4281d9:	xlat   BYTE PTR ds:[ebx]
  4281da:	add    eax,0xb92e90ff
  4281df:	add    BYTE PTR [ecx+0x75ffb700],cl
  4281e5:	(bad)  
  4281e6:	(bad)  
  4281e7:	call   DWORD PTR [ecx+0x56ff9975]
  4281ed:	jmp    0xe1:0xffcc83e6
  4281f4:	add    BYTE PTR [eax],0xff
  4281f7:	add    BYTE PTR [edx],ch
  4281f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281fa:	in     eax,dx
  4281fb:	cmp    esp,0xffffffaf
  4281fe:	cmp    edi,0xffc2ff00
  428204:	sti    
  428205:	add    BYTE PTR [ebx+0x8a49c00],al
  42820b:	call   DWORD PTR [edi]
  42820d:	add    al,0x97
  42820f:	add    BYTE PTR [eax],al
  428211:	(bad)  
  428212:	call   0x141dc17
  428217:	add    dl,cl
  428219:	shl    BYTE PTR [ecx],0x0
  42821c:	jne    0x4281bf
  42821e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42821f:	add    BYTE PTR [eax],al
  428221:	jmp    FWORD PTR ds:0xff00e783
  428227:	push   DWORD PTR [esi+0x5ff80cd]
  42822d:	add    ch,ch
  42822f:	add    BYTE PTR [ebx-0xaffca7d],al
  428235:	inc    DWORD PTR [eax]
  428237:	push   DWORD PTR [ebx-0x5d762077]
  42823d:	sub    eax,0xcc00ffe3
  428242:	inc    edi
  428243:	add    al,dh
  428245:	(bad)  
  428246:	(bad)  
  428247:	jmp    FWORD PTR [eax]
  428249:	add    cl,bl
  42824b:	(bad)  
  42824c:	stc    
  42824d:	push   esp
  42824e:	inc    eax
  42824f:	(bad)  
  428250:	(bad)  
  428251:	dec    esi
  428253:	add    BYTE PTR [ebx-0x6133ff7d],bh
  428259:	leave  
  42825a:	sbb    DWORD PTR [eax],eax
  42825c:	adc    al,0x17
  42825e:	pusha  
  42825f:	(bad)  
  428260:	dec    esp
  428262:	pop    esi
  428263:	sbb    ebp,0xffffffff
  428266:	add    BYTE PTR [eax],al
  428268:	ins    BYTE PTR es:[edi],dx
  428269:	aas    
  42826a:	sar    bh,cl
  42826c:	and    eax,0xff05ad
  428271:	dec    DWORD PTR [edi-0x1]
  428274:	push   edx
  428275:	add    bh,bh
  428277:	sbb    DWORD PTR [ebx-0x68],0x21
  42827b:	add    BYTE PTR [edx-0x66],ah
  42827e:	push   edx
  42827f:	add    BYTE PTR [eax],al
  428281:	dec    DWORD PTR [eax+eax*1-0x3b]
  428285:	(bad)  
  428286:	inc    DWORD PTR [eax]
  428288:	cmp    ebp,ebx
  42828a:	cmp    bh,0x9f
  42828d:	js     0x42823a
  42828f:	add    bh,bh
  428291:	add    BYTE PTR [eax+eax*1-0xff34],ch
  428298:	stos   BYTE PTR es:[edi],al
  428299:	into   
  42829a:	inc    esi
  42829b:	mov    DWORD PTR ds:0x89ff361e,eax
  4282a1:	mov    DWORD PTR [edx],ebp
  4282a3:	call   FWORD PTR ds:0xa3ff00ff
  4282a9:	add    ecx,DWORD PTR [edx]
  4282ab:	jmp    FWORD PTR [ebp+0xff371f]
  4282b1:	int3   
  4282b2:	out    dx,al
  4282b3:	add    BYTE PTR [esi-0x76333400],dl
  4282b9:	pushf  
  4282ba:	int3   
  4282bb:	call   DWORD PTR [ecx]
  4282bd:	sahf   
  4282be:	adc    ah,cl
  4282c0:	int3   
  4282c1:	add    dh,al
  4282c3:	int3   
  4282c4:	fwait
  4282c5:	dec    DWORD PTR [ecx-0x62481d00]
  4282cb:	dec    DWORD PTR [ebp+0x45]
  4282ce:	xchg   bh,bh
  4282d0:	add    ah,cl
  4282d2:	adc    DWORD PTR [eax],eax
  4282d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282d5:	dec    esp
  4282d7:	jmp    DWORD PTR [esi+0x5c00c4bc]
  4282dd:	add    dh,BYTE PTR [esi-0x34]
  4282e0:	add    bh,bh
  4282e2:	rol    BYTE PTR [eax],0x13
  4282e5:	add    DWORD PTR [eax],0x0
  4282e8:	mov    ah,0x88
  4282ea:	jg     0x4282ec
  4282ec:	dec    ecx
  4282ed:	ins    DWORD PTR es:[edi],dx
  4282ee:	cmp    edi,0xffffffff
  4282f1:	jmp    eax
  4282f3:	mov    DWORD PTR [eax+0x0],ebp
  4282f6:	inc    DWORD PTR [eax]
  4282f8:	xchg   DWORD PTR [eax+0x1eb90041],esi
  4282fe:	dec    ebx
  4282ff:	add    BYTE PTR [ecx+0x7d89a100],cl
  428305:	mov    edi,edi
  428307:	add    BYTE PTR [ebx-0x5000d692],bh
  42830d:	and    DWORD PTR [ebx+0x2eff0089],esp
  428313:	add    BYTE PTR [ecx],cl
  428315:	add    bh,bh
  428317:	int3   
  428318:	sbb    eax,0xd6fff1c7
  42831d:	jp     0x4282b6
  42831f:	int3   
  428320:	(bad)  
  428321:	inc    DWORD PTR [eax+0x8bff]
  428327:	mov    DWORD PTR [ebp+0x5f],edx
  42832a:	xchg   edx,eax
  42832b:	jmp    ebp
  42832d:	push   ds
  42832e:	mov    ecx,0x3b00ff89
  428333:	inc    DWORD PTR [ebp-0x34]
  428336:	inc    DWORD PTR [eax]
  428338:	push   edx
  428339:	sub    dh,BYTE PTR [ecx-0x49677a00]
  42833f:	add    BYTE PTR [eax],al
  428341:	sbb    ebp,0xffffffff
  428344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428345:	inc    DWORD PTR [eax]
  428347:	(bad)  
  428348:	fstp   QWORD PTR [edx+0x9e7fffd]
  42834e:	xchg   ebx,eax
  42834f:	add    bh,bh
  428351:	dec    edx
  428353:	call   FWORD PTR [esp+ecx*8-0x1]
  428357:	add    BYTE PTR [ebx+0x13],dl
  42835a:	adc    BYTE PTR [ebx-0x5cfa6e],al
  428360:	add    bh,bh
  428362:	add    edi,edi
  428364:	sub    edi,edi
  428366:	int3   
  428367:	push   DWORD PTR [ecx]
  428369:	test   al,0x1e
  42836b:	add    BYTE PTR [ebx],dh
  42836d:	cmp    cl,0x0
  428370:	inc    DWORD PTR [eax]
  428372:	jge    0x428374
  428374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428375:	(bad)  
  428376:	inc    DWORD PTR [ebx-0x33679ba8]
  42837c:	mov    ds:0xcc007edb,eax
  428381:	adc    DWORD PTR [edi+edi*8],0xffffffaa
  428385:	inc    DWORD PTR [ebx-0x5c1fdd77]
  42838b:	add    BYTE PTR [eax-0x3376bf29],ch
  428391:	add    BYTE PTR [edx-0x77],bl
  428394:	push   ecx
  428395:	add    BYTE PTR [eax],al
  428397:	jmp    DWORD PTR [esi]
  428399:	shl    BYTE PTR [ebp-0x2e6d6d7d],cl
  42839f:	cmp    edi,0xffffffff
  4283a2:	cmp    al,BYTE PTR [eax]
  4283a4:	push   edi
  4283a5:	inc    DWORD PTR [eax]
  4283a7:	or     DWORD PTR [ecx-0x71ff943f],0x2c
  4283ae:	add    DWORD PTR fs:[ebx+0x989b600],0xffffffff
  4283b6:	int3   
  4283b7:	call   DWORD PTR [ebx]
  4283b9:	or     bl,BYTE PTR [ecx]
  4283bb:	add    al,bl
  4283bd:	(bad)  
  4283be:	or     ecx,DWORD PTR [ecx-0xc53301]
  4283c4:	scas   al,BYTE PTR es:[edi]
  4283c5:	(bad)  
  4283c6:	dec    esp
  4283c8:	lods   al,BYTE PTR ds:[esi]
  4283c9:	jp     0x42840b
  4283cb:	add    BYTE PTR [esi-0x6c],bh
  4283ce:	jo     0x4283cf
  4283d0:	add    DWORD PTR [eax],0x4
  4283d3:	add    BYTE PTR [ebx-0x1],bh
  4283d6:	inc    DWORD PTR [eax]
  4283d8:	jns    0x428434
  4283da:	inc    DWORD PTR ds:[edx]
  4283dd:	ins    BYTE PTR es:[edi],dx
  4283de:	fwait
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	call   FWORD PTR [edi+edi*8-0x3c]
  4283e5:	(bad)  
  4283e6:	inc    DWORD PTR [eax]
  4283e8:	mov    ebx,0x5cfff23a
  4283ed:	jmp    0x4283f8
  4283ef:	(bad)  
  4283f0:	(bad)  
  4283f1:	jmp    DWORD PTR [eax-0x7600b47d]
  4283f7:	add    BYTE PTR [ecx],bl
  4283f9:	dec    edx
  4283fa:	imul   edi,edi,0xffffffbb
  4283fd:	pop    ecx
  4283fe:	xchg   esp,eax
  4283ff:	dec    esp
  428401:	(bad)  
  428402:	jl     0x428403
  428404:	fxch   st(4)
  428406:	add    DWORD PTR [eax],0x69
  428409:	push   ds
  42840a:	sub    eax,0xd9a43583
  42840f:	int3   
  428410:	inc    DWORD PTR [ebx-0x297c80]
  428416:	(bad)  
  428417:	call   DWORD PTR [eax-0x56ff212a]
  42841d:	ret    
  42841e:	mov    dh,0xcc
  428420:	inc    DWORD PTR [eax]
  428422:	and    bh,bh
  428424:	stc    
  428425:	inc    DWORD PTR [eax]
  428427:	call   DWORD PTR [edx]
  428429:	sti    
  42842a:	dec    ecx
  42842b:	call   FWORD PTR [eax+0x3]
  42842e:	jo     0x428430
  428430:	int3   
  428431:	mov    DWORD PTR [edx-0x330377],edx
  428437:	int3   
  428438:	fs (bad) 
  42843a:	hlt    
  42843b:	(bad)  
  42843c:	jge    0x4284bb
  42843e:	xor    DWORD PTR [eax],eax
  428440:	cmp    edi,0x48
  428443:	call   FWORD PTR [edx-0xc7c7d00]
  428449:	sub    DWORD PTR [edx-0x1],esi
  42844c:	cmc    
  42844d:	adc    DWORD PTR [esi+0x68ffff00],esi
  428453:	int3   
  428454:	push   ss
  428455:	add    ah,cl
  428457:	add    BYTE PTR [edx],ch
  428459:	cli    
  42845a:	dec    ebp
  42845b:	jmp    DWORD PTR [edi]
  42845d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42845e:	sub    cl,BYTE PTR [ecx-0x7c2f0100]
  428464:	lods   al,BYTE PTR ds:[esi]
  428465:	add    BYTE PTR [eax],al
  428467:	call   eax
  428469:	loop   0x428476
  42846b:	add    ch,al
  42846d:	scas   al,BYTE PTR es:[edi]
  42846e:	jae    0x428470
  428470:	(bad)  
  428471:	(bad)  
  428472:	jmp    0x15ff:0x83ff0e00
  428479:	je     0x42843f
  42847b:	inc    DWORD PTR [ebx-0xce9a]
  428481:	push   DWORD PTR [esi]
  428483:	add    dh,dh
  428485:	inc    DWORD PTR [eax]
  428487:	int3   
  428488:	fisub  DWORD PTR [eax-0x1aebfff1]
  42848e:	push   esp
  42848f:	add    BYTE PTR [eax],al
  428491:	mov    DWORD PTR [eax-0x7d],edi
  428494:	sahf   
  428495:	(bad)  
  428496:	dec    esp
  428498:	inc    eax
  428499:	mov    eax,0x384100d5
  42849e:	idiv   bh
  4284a0:	add    DWORD PTR [eax],0xffffffe9
  4284a3:	add    BYTE PTR [edi-0x1],dh
  4284a6:	add    bh,bh
  4284a8:	test   al,0xd
  4284aa:	aas    
  4284ab:	inc    edi
  4284ad:	mov    BYTE PTR [edi+0x0],dl
  4284b0:	(bad)  
  4284b1:	call   esi
  4284b3:	add    BYTE PTR [esi],al
  4284b5:	int3   
  4284b6:	(bad)  
  4284b7:	inc    DWORD PTR ds:0x2e002339
  4284bd:	jle    0x4284c0
  4284bf:	inc    DWORD PTR [ebx+0x6c00adff]
  4284c5:	(bad)  
  4284c6:	(bad)  
  4284c7:	jmp    FWORD PTR [eax-0x36]
  4284ca:	lock jmp DWORD PTR [ecx]
  4284cd:	jle    0x428450
  4284cf:	add    BYTE PTR [eax],al
  4284d1:	add    dh,cl
  4284d3:	call   DWORD PTR [eax+eax*1+0x0]
  4284d7:	add    BYTE PTR [ecx-0x39],cl
  4284da:	cwde   
  4284db:	push   ecx
  4284dd:	add    ecx,DWORD PTR [eax]
  4284df:	add    bh,bh
  4284e1:	add    BYTE PTR [eax+eax*1-0xe9],ah
  4284e8:	xor    esp,edi
  4284ea:	add    edi,edi
  4284ec:	leave  
  4284ed:	lahf   
  4284ee:	fwait
  4284ef:	add    bh,bh
  4284f1:	dec    DWORD PTR [ebx+0x2000]
  4284f7:	adc    eax,0x24
  4284fa:	into   
  4284fb:	jmp    esp
  4284fd:	stos   BYTE PTR es:[edi],al
  4284fe:	sar    edi,0xff
  428501:	inc    DWORD PTR [edi-0xff747d]
  428507:	jmp    edx
  428509:	mov    ebp,0xf380095
  42850e:	enter  0xccff,0xff
  428512:	and    DWORD PTR [ebx+0xff89f7],eax
  428518:	imul   BYTE PTR [ebp+0x7f]
  42851b:	add    BYTE PTR [ecx-0x10],al
  42851e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42851f:	add    DWORD PTR [eax],0xffffffff
  428522:	mov    ebp,0xffff3600
  428527:	adc    ebp,0xffffffe9
  42852a:	test   eax,0x651b02ff
  42852f:	add    DWORD PTR [eax],0x0
  428532:	rol    BYTE PTR [ebx-0x7c00ffcc],cl
  428538:	je     0x4284c8
  42853a:	push   ds
  42853b:	add    BYTE PTR [edx-0x45],bh
  42853e:	ror    DWORD PTR [ecx+0x52ff83],cl
  428544:	mov    esp,0xf9ff83cc
  428549:	sbb    eax,esi
  42854b:	add    BYTE PTR [ebx-0x55ca],dh
  428551:	add    BYTE PTR [esi-0x767cee34],dh
  428557:	jmp    DWORD PTR [ecx+0x55]
  42855a:	adc    bh,bh
  42855c:	xchg   esi,eax
  42855d:	cwde   
  42855e:	inc    DWORD PTR gs:[ebx+0xbcc3eff]
  428565:	add    ah,cl
  428567:	add    BYTE PTR [edi-0x3f],al
  42856a:	push   ss
  42856b:	add    BYTE PTR [ebx+0x2a],ah
  42856e:	jne    0x4284f9
  428570:	add    BYTE PTR [ebx-0xc1009e],al
  428576:	cmp    edi,0x66
  428579:	xchg   esp,eax
  42857a:	fld    QWORD PTR [eax]
  42857c:	fdivr  st,st(1)
  42857e:	dec    esi
  42857f:	add    bh,bh
  428581:	int3   
  428582:	ror    esp,0xf
  428585:	inc    DWORD PTR [eax]
  428587:	add    BYTE PTR [eax+0x6aff3e1f],bl
  42858d:	mov    ds:0x890083da,al
  428592:	and    al,0xff
  428594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428595:	add    BYTE PTR [eax],al
  428597:	add    ch,bl
  428599:	cmp    DWORD PTR [ebp-0x13eda201],esp
  42859f:	dec    DWORD PTR [ecx+0x77ff3d83]
  4285a5:	inc    DWORD PTR [eax]
  4285a7:	add    dh,al
  4285a9:	ja     0x42857e
  4285ab:	add    dl,bh
  4285ad:	ss ja  0x428533
  4285b0:	add    bh,bh
  4285b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285b3:	call   DWORD PTR [ecx+ecx*4+0x0]
  4285b7:	int3   
  4285b8:	sbb    DWORD PTR [ebx],esp
  4285ba:	mov    cl,BYTE PTR [ecx-0x7ef913]
  4285c0:	cmp    edi,0xffffff96
  4285c3:	int3   
  4285c4:	push   edx
  4285c5:	cmp    edi,0xffffff89
  4285c8:	xchg   edi,eax
  4285c9:	inc    eax
  4285ca:	(bad)  
  4285cb:	dec    DWORD PTR [ebx+edi*4-0x33ff7c6e]
  4285d2:	(bad)  
  4285d3:	dec    DWORD PTR [esi-0x7d]
  4285d6:	mov    edi,edi
  4285d8:	out    dx,eax
  4285d9:	bound  eax,QWORD PTR [ebp+0x34382100]
  4285df:	inc    DWORD PTR [eax]
  4285e1:	int3   
  4285e2:	repnz add BYTE PTR [ebx],bh
  4285e5:	mov    edi,edi
  4285e7:	add    edi,0xffffffc0
  4285ea:	or     BYTE PTR [ebx-0x28b905],al
  4285f0:	add    BYTE PTR [eax],al
  4285f2:	and    al,0x0
  4285f4:	xchg   bh,bh
  4285f6:	inc    DWORD PTR [ebx-0xb5dd10]
  4285fc:	or     BYTE PTR [edi+0x2c],ah
  4285ff:	add    DWORD PTR [eax],0xffffffff
  428602:	call   0x2bff:0xccff8100
  428609:	inc    edi
  42860a:	mov    cl,0xff
  42860c:	cdq    
  42860d:	mov    eax,0x83ffcc38
  428612:	pop    esp
  428613:	sbb    DWORD PTR [edx-0x51ff0100],0xffffff94
  42861a:	add    edi,edi
  42861c:	sub    esi,ebx
  42861e:	jno    0x42861f
  428620:	(bad)  
  428621:	call   ecx
  428623:	dec    esp
  428625:	or     esp,0xffffffcc
  428628:	in     al,dx
  428629:	and    bl,BYTE PTR [ecx]
  42862b:	(bad)  
  42862c:	fnstenv [esi-0x7600d1]
  428632:	scas   al,BYTE PTR es:[edi]
  428633:	add    BYTE PTR [esi+0x0],cl
  428636:	add    DWORD PTR [ebx+0x710bb2],0x4f
  42863d:	bound  ebp,QWORD PTR [ecx]
  42863f:	add    ah,cl
  428641:	inc    ecx
  428643:	call   DWORD PTR [eax+eax*1]
  428646:	(bad)  
  428647:	dec    DWORD PTR [esp+ecx*8+0x54]
  42864b:	add    BYTE PTR [ebx+0x1a],cl
  42864e:	sub    edi,edi
  428650:	(bad)  
  428651:	call   FWORD PTR [edx]
  428653:	add    DWORD PTR [edx],0xffffffff
  428656:	cmp    edi,0xffffffee
  428659:	ja     0x428646
  42865b:	mov    DWORD PTR [ebp+0x3b],ebx
  42865e:	mov    cl,0xff
  428660:	(bad)  
  428661:	jmp    DWORD PTR [ebx-0x7caa77]
  428667:	add    BYTE PTR [eax],ah
  428669:	mov    ch,0x15
  42866b:	push   DWORD PTR [esi+eax*1-0xff004d]
  428672:	jae    0xff428729
  428678:	loope  0x4286e8
  42867a:	mov    edi,?
  42867c:	imul   ecx,DWORD PTR [ebx-0x7c7c0094],0xffffffb7
  428683:	add    BYTE PTR [edi+0x1689ff00],bl
  428689:	and    esi,ecx
  42868b:	inc    DWORD PTR [eax]
  42868d:	es out 0xff,eax
  428690:	add    BYTE PTR [eax],al
  428692:	adc    eax,0x2b89
  428697:	cmp    DWORD PTR [edx],0x48
  42869a:	cmp    edi,0xffdd9e34
  4286a0:	mov    DWORD PTR [eax],eax
  4286a2:	ja     0x4286a3
  4286a4:	or     ah,0x83
  4286a7:	jmp    DWORD PTR [esi+ecx*2+0x763f898e]
  4286ae:	test   BYTE PTR [eax],al
  4286b0:	inc    DWORD PTR [eax]
  4286b2:	xchg   ebp,eax
  4286b3:	(bad)  
  4286b4:	cld    
  4286b5:	(bad)  
  4286b6:	(bad)  
  4286b7:	dec    DWORD PTR [eax+edi*2+0x0]
  4286bb:	xor    ebx,0xffffff8e
  4286be:	cmp    edi,0xf00ff
  4286c4:	dec    esp
  4286c5:	inc    DWORD PTR [ebx-0x65733301]
  4286cb:	mov    DWORD PTR [edi],edi
  4286cd:	shr    BYTE PTR [ebx],1
  4286cf:	add    bh,bh
  4286d1:	sub    DWORD PTR [edi],0x0
  4286d4:	call   0xfd4286d9
  4286d9:	mov    cs,WORD PTR [eax+0x37479900]
  4286df:	inc    DWORD PTR [eax]
  4286e1:	add    BYTE PTR [ebx-0x1],ch
  4286e4:	je     0x4286e5
  4286e6:	(bad)  
  4286e7:	(bad)  
  4286e8:	mov    ebp,0x66ff08de
  4286ed:	mov    edx,0xff008950
  4286f2:	test   eax,0xffd6ff
  4286f7:	mov    esp,ebp
  4286f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286fa:	loopne 0x4286fb
  4286fc:	jo     0x428737
  4286fe:	lods   eax,DWORD PTR ds:[esi]
  4286ff:	(bad)  
  428700:	(bad)  
  428701:	inc    DWORD PTR [ecx-0x1]
  428704:	jae    0x83838693
  42870a:	adc    BYTE PTR [ecx-0xc2c4a8],cl
  428710:	(bad)  
  428711:	jmp    DWORD PTR [edi-0x7d]
  428714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428715:	(bad)  
  428716:	inc    DWORD PTR [eax]
  428718:	push   esi
  428719:	jg     0x42878a
  42871b:	add    BYTE PTR [ecx],dh
  42871d:	xchg   BYTE PTR [ebp+0x4eff00cc],cl
  428723:	add    BYTE PTR [ebx],ch
  428725:	int3   
  428726:	inc    DWORD PTR [eax]
  428728:	and    bh,al
  42872a:	test   BYTE PTR [ebx-0x872cd0],0xff
  428731:	int3   
  428732:	jg     0x428733
  428734:	mov    eax,0xe80000ff
  428739:	pop    ds
  42873a:	cmc    
  42873b:	call   FWORD PTR [esi+0x41]
  42873e:	aas    
  42873f:	inc    DWORD PTR [eax]
  428741:	add    ah,ah
  428743:	add    DWORD PTR [ebp+0x8ffcc83],0xfffffff4
  42874a:	xchg   edi,eax
  42874b:	push   DWORD PTR [ebp+0x5f]
  42874e:	bound  eax,QWORD PTR [eax]
  428750:	add    bh,bh
  428752:	mov    edi,edi
  428754:	enter  0xff00,0x0
  428758:	pop    es
  428759:	into   
  42875a:	jbe    0x42875b
  42875c:	and    eax,0xff7b4b
  428761:	(bad)  
  428762:	in     al,dx
  428763:	push   ecx
  428765:	dec    esp
  428767:	add    BYTE PTR ds:0xb9837d22,ah
  42876d:	pop    edx
  42876e:	call   0x6f00:0xd3008300
  428775:	int3   
  428776:	(bad)  
  428777:	jmp    FWORD PTR [esp+eiz*2]
  42877a:	mov    ds:0xb2c71700,eax
  42877f:	add    BYTE PTR [eax],al
  428781:	add    BYTE PTR [ebp-0x2201],bh
  428787:	(bad)  
  428788:	sti    
  428789:	bound  ebp,QWORD PTR [edi+0x0]
  42878c:	(bad)  
  42878d:	push   eax
  42878e:	fild   WORD PTR [eax]
  428790:	add    BYTE PTR [eax],al
  428792:	ins    BYTE PTR es:[edi],dx
  428793:	mov    DWORD PTR [edx+0x0],eax
  428796:	dec    DWORD PTR [ecx-0xb91994]
  42879c:	fadd   DWORD PTR [edi]
  42879e:	fs add bh,bh
  4287a1:	jmp    FWORD PTR [edi+edi*8-0x330076cc]
  4287a8:	(bad)  
  4287aa:	mov    eax,0x9c48bcff
  4287af:	int3   
  4287b0:	(bad)  
  4287b1:	push   ebx
  4287b3:	add    BYTE PTR [ecx+0x7eff89ff],ch
  4287b9:	pop    edi
  4287ba:	mov    al,ds:0x5f03ebff
  4287bf:	mov    edi,edi
  4287c1:	sub    esi,0x0
  4287c4:	mov    WORD PTR [ebx-0x43613301],es
  4287ca:	dec    edi
  4287cb:	call   ebx
  4287cd:	pop    ebx
  4287ce:	outs   dx,DWORD PTR ds:[esi]
  4287cf:	inc    DWORD PTR [eax]
  4287d1:	jmp    ebx
  4287d3:	add    BYTE PTR [ecx],al
  4287d5:	(bad)  
  4287d6:	dec    DWORD PTR [ecx-0x33fb6bce]
  4287dc:	push   0x89ff9f4b
  4287e1:	push   DWORD PTR [ebp-0x1]
  4287e4:	xor    eax,DWORD PTR [eax]
  4287e6:	add    ah,cl
  4287e8:	idiv   BYTE PTR [edx]
  4287ea:	dec    edi
  4287eb:	call   FWORD PTR [ecx]
  4287ed:	lock sbb DWORD PTR [eax],eax
  4287f0:	dec    esp
  4287f2:	fdiv   st(7),st
  4287f4:	push   ds
  4287f5:	add    bh,bh
  4287f7:	call   FWORD PTR [ecx+0x6c]
  4287fa:	jno    0x4287fb
  4287fc:	xchg   ebp,eax
  4287fd:	je     0x428831
  4287ff:	add    BYTE PTR [eax],al
  428801:	dec    edi
  428803:	or     DWORD PTR [edx+0x0],0xffffffff
  428807:	push   esp
  428809:	xchg   DWORD PTR [edx-0x1],eax
  42880c:	xchg   esp,eax
  42880d:	lock jmp 0x428799
  428810:	add    DWORD PTR [eax],0xffffffd5
  428813:	jmp    DWORD PTR [edx]
  428815:	(bad)  
  428816:	inc    DWORD PTR [eax]
  428818:	jecxz  0x4287e6
  42881a:	ja     0x42881c
  42881c:	xor    eax,0xcc0b02
  428821:	push   ecx
  428823:	call   eax
  428825:	add    ah,cl
  428827:	call   FWORD PTR [esi]
  428829:	pop    esp
  42882a:	sar    bh,1
  42882c:	outs   dx,BYTE PTR ds:[esi]
  42882d:	std    
  42882e:	repz inc DWORD PTR [ebx-0x4f76ca00]
  428835:	int3   
  428836:	mov    edi,edi
  428838:	adc    BYTE PTR [esi+ebx*2-0x1],bh
  42883c:	mov    esp,0xff8ec6
  428841:	push   DWORD PTR [ebx+eax*4+0x7f]
  428845:	add    BYTE PTR [eax],al
  428847:	add    BYTE PTR [edi-0x2bfff8f0],dl
  42884d:	jne    0x4287f4
  42884f:	mov    DWORD PTR [eax],eax
  428851:	add    ah,al
  428853:	mov    DWORD PTR [eax],ecx
  428855:	dec    esp
  428857:	push   DWORD PTR [eax+0x2d00ae43]
  42885d:	inc    eax
  42885e:	rol    DWORD PTR [ebx-0x3302ff34],1
  428864:	mov    al,0x83
  428866:	inc    DWORD PTR [eax]
  428868:	clc    
  428869:	mov    dl,0x97
  42886b:	call   DWORD PTR [edi]
  42886d:	pop    es
  42886e:	mov    ebx,0xbe0000ff
  428873:	xor    DWORD PTR [ebx-0x34],0x0
  428877:	call   FWORD PTR [edi-0x4]
  42887a:	xchg   esp,eax
  42887b:	call   DWORD PTR [ebp+0x71]
  42887e:	jmp    0x428880
  428880:	or     DWORD PTR [ecx-0x1ff83],0x0
  428887:	int3   
  428888:	adc    cl,al
  42888a:	sub    bh,bh
  42888c:	sub    edx,DWORD PTR [ebx-0x7c7c90]
  428892:	dec    ebp
  428893:	dec    DWORD PTR [ecx+0x32ff8300]
  428899:	or     al,BYTE PTR [eax-0x3b428b00]
  42889f:	dec    esp
  4288a1:	int3   
  4288a2:	pop    ds
  4288a3:	call   DWORD PTR [edi]
  4288a5:	mov    edi,edi
  4288a7:	push   DWORD PTR [esi]
  4288a9:	mov    edi,0xd0d3ff9e
  4288ae:	mov    ch,0xcc
  4288b0:	(bad)  
  4288b1:	call   DWORD PTR [edi]
  4288b3:	add    BYTE PTR ds:0x73ffffff,bh
  4288b9:	or     dl,BYTE PTR [edi]
  4288bb:	push   DWORD PTR [ebp+0x25]
  4288be:	nop
  4288bf:	dec    esp
  4288c1:	jmp    FWORD PTR [ecx]
  4288c3:	call   DWORD PTR [edi]
  4288c5:	dec    DWORD PTR [ecx+0x48024389]
  4288cb:	dec    DWORD PTR [edi+0x45]
  4288ce:	adc    eax,DWORD PTR [eax]
  4288d0:	add    ah,cl
  4288d2:	scas   al,BYTE PTR es:[edi]
  4288d3:	push   ecx
  4288d5:	add    BYTE PTR [eax],al
  4288d7:	dec    DWORD PTR [eax]
  4288d9:	inc    edi
  4288da:	jnp    0x42885f
  4288dc:	shr    DWORD PTR [esi-0x26],1
  4288df:	(bad)  
  4288e0:	inc    DWORD PTR [ebx-0x763f005a]
  4288e6:	(bad)  
  4288e7:	call   DWORD PTR [esi-0x14ffe707]
  4288ed:	cmp    edi,DWORD PTR [esp+ecx*8-0xd40100]
  4288f4:	into   
  4288f5:	(bad)  
  4288f6:	(bad)  
  4288f7:	inc    DWORD PTR [ebx]
  4288f9:	(bad)  
  4288fa:	idiv   bh
  4288fc:	mov    dh,0xa6
  4288fe:	mov    ?,edi
  428900:	inc    DWORD PTR [eax]
  428902:	je     0x428903
  428904:	cmp    al,0x83
  428906:	inc    DWORD PTR [eax]
  428908:	imul   esi,DWORD PTR [ebx-0x4bd77c9d],0xffffff8b
  42890f:	inc    DWORD PTR [eax]
  428911:	push   DWORD PTR [ecx-0x1]
  428914:	pop    ebp
  428915:	or     DWORD PTR [ecx+0x7c0bdaff],0xffffffcc
  42891c:	(bad)  
  42891d:	ins    DWORD PTR es:[edi],dx
  42891e:	cmc    
  42891f:	mov    DWORD PTR [eax],eax
  428921:	add    BYTE PTR [edx-0x7cc57d],ah
  428927:	add    ah,dl
  428929:	test   al,0xc
  42892b:	(bad)  
  42892c:	cmp    eax,ebx
  42892e:	inc    DWORD PTR ss:[eax]
  428931:	add    BYTE PTR [edi+edi*8+0x8931],dl
  428938:	mov    ebx,0xf5cc6069
  42893d:	mov    eax,ds:0xff00ccd9
  428942:	outs   dx,DWORD PTR ds:[esi]
  428943:	add    BYTE PTR [esi-0x7000ff01],dl
  428949:	push   edi
  42894a:	outs   dx,DWORD PTR ds:[esi]
  42894b:	add    BYTE PTR [eax-0xff4a7d],dh
  428951:	push   eax
  428953:	add    BYTE PTR [edi-0x11337700],al
  428959:	(bad)  
  42895a:	ds push ebp
  42895d:	push   ebx
  42895e:	push   cs
  42895f:	(bad)  
  428960:	(bad)  
  428961:	(bad)  
  428962:	cmp    DWORD PTR [ebx+0xff0074],eax
  428968:	shl    dl,0x53
  42896b:	int3   
  42896c:	xchg   edx,eax
  42896d:	int    0x52
  42896f:	mov    edi,edi
  428971:	(bad)  
  428972:	cmp    eax,0xffcca7ff
  428977:	add    BYTE PTR [edi+ebp*4+0x2],al
  42897b:	add    BYTE PTR [edi-0xd849],dl
  428981:	add    dl,cl
  428983:	push   ecx
  428985:	add    bh,bh
  428987:	or     DWORD PTR [esi+0x25ff79d9],0x30
  42898e:	test   ah,0xff
  428991:	push   DWORD PTR [edi]
  428993:	push   DWORD PTR [edi+0x30ff0000]
  428999:	es jbe 0x428968
  42899c:	in     eax,0x6a
  42899e:	ins    DWORD PTR es:[edi],dx
  42899f:	mov    esp,ecx
  4289a1:	add    ch,bl
  4289a3:	inc    DWORD PTR [ebx-0x56767c01]
  4289a9:	mov    ah,0x20
  4289ab:	call   ebx
  4289ad:	inc    esp
  4289ae:	and    DWORD PTR [eax],eax
  4289b0:	add    bh,bh
  4289b2:	xchg   ebx,eax
  4289b3:	mov    DWORD PTR [ebp-0x7d],esp
  4289b6:	add    DWORD PTR [eax],0x34
  4289b9:	addr16 xchg ecx,eax
  4289bb:	call   DWORD PTR [edi+0xff7e7f]
  4289c1:	add    BYTE PTR [edx-0x33947d],ch
  4289c7:	inc    DWORD PTR [eax+0xa]
  4289ca:	cmp    edi,0x7b
  4289cd:	je     0x428965
  4289cf:	cmp    edi,0xffffffff
  4289d2:	call   0xf7460
  4289d7:	dec    DWORD PTR [ecx]
  4289d9:	jp     0x4289bf
  4289db:	mov    DWORD PTR [eax-0x76336196],ebx
  4289e1:	add    DWORD PTR [ecx-0x7cff5900],0xffffff83
  4289e8:	jb     0x4289c8
  4289ea:	retf   
  4289eb:	push   DWORD PTR [edx]
  4289ed:	ror    DWORD PTR [edx+0x78ffccff],0x83
  4289f4:	(bad)  
  4289f5:	(bad)  
  4289f6:	(bad)  
  4289f7:	call   DWORD PTR [edx-0x73]
  4289fa:	(bad)  
  4289fb:	call   eax
  4289fd:	stos   BYTE PTR es:[edi],al
  4289fe:	js     0x428a00
  428a00:	(bad)  
  428a01:	call   FWORD PTR [ebx-0x1]
  428a04:	dec    eax
  428a05:	or     DWORD PTR [ecx+0x105b4000],0xffffffff
  428a0c:	dec    ecx
  428a0d:	(bad)  
  428a0e:	jl     0x428a10
  428a10:	add    BYTE PTR [ebx+0xbbff3d],al
  428a16:	add    bh,bh
  428a18:	mov    eax,ds:0x3ff4d1c
  428a1d:	icebp  
  428a1e:	inc    BYTE PTR [eax]
  428a20:	mov    DWORD PTR [ebx-0x8e33cc],eax
  428a26:	cmp    edi,0x77
  428a29:	sbb    eax,0x608fffa8
  428a2e:	mov    esp,cs
  428a30:	mov    edi,edi
  428a32:	jns    0x428a33
  428a34:	fdivp  st(7),st
  428a36:	int3   
  428a37:	dec    DWORD PTR [eax-0x63005e94]
  428a3d:	dec    edi
  428a3e:	sahf   
  428a3f:	cmp    edi,0xffffffff
  428a42:	sar    edi,0xe0
  428a45:	(bad)  
  428a46:	inc    DWORD PTR [ebx+0xbfb649]
  428a4c:	dec    ebp
  428a4d:	xor    dl,al
  428a4f:	add    bh,bh
  428a51:	add    BYTE PTR [edi-0x1],ah
  428a54:	cdq    
  428a55:	cmp    edi,0xffffffff
  428a58:	fldl2t 
  428a5a:	push   edx
  428a5b:	push   DWORD PTR [ebx]
  428a5d:	cmp    dh,dl
  428a5f:	int3   
  428a60:	add    bh,bh
  428a62:	icebp  
  428a63:	int3   
  428a64:	xchg   edi,edi
  428a66:	int3   
  428a67:	add    BYTE PTR [ebp+0x20ff1c52],dl
  428a6d:	ss inc DWORD PTR ss:[eax]
  428a71:	jmp    DWORD PTR [eax+eax*1+0x1c]
  428a75:	(bad)  
  428a76:	(bad)  
  428a77:	push   DWORD PTR [ebx]
  428a79:	pop    ds
  428a7a:	mov    bh,0x83
  428a7c:	pop    ebp
  428a7d:	pop    ebp
  428a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a7f:	(bad)  
  428a80:	(bad)  
  428a81:	(bad)  
  428a82:	jge    0x428a83
  428a84:	sub    al,BYTE PTR [eax]
  428a86:	inc    DWORD PTR [eax]
  428a88:	into   
  428a89:	push   edi
  428a8a:	xor    bh,bh
  428a8c:	sbb    ebx,DWORD PTR [eax-0x4b]
  428a8f:	add    bh,bh
  428a91:	add    BYTE PTR [esi+0x0],bl
  428a94:	sahf   
  428a95:	int3   
  428a96:	inc    DWORD PTR [eax]
  428a98:	retf   
  428a99:	sub    eax,0x7a55cc51
  428a9e:	in     al,dx
  428a9f:	inc    DWORD PTR [ebx+0x39ff0883]
  428aa5:	add    DWORD PTR [eax],0x0
  428aa8:	stos   BYTE PTR es:[edi],al
  428aa9:	jne    0x428a34
  428aab:	mov    DWORD PTR [ebx+0x32],esp
  428aae:	(bad)  
  428aaf:	(bad)  
  428ab0:	(bad)  
  428ab1:	jmp    DWORD PTR [esi+0x0]
  428ab4:	cmp    DWORD PTR [ecx-0x390d0100],ecx
  428aba:	test   eax,0xf32916ff
  428abf:	int3   
  428ac0:	inc    DWORD PTR [eax]
  428ac2:	pop    eax
  428ac3:	int3   
  428ac4:	push   ebp
  428ac5:	inc    DWORD PTR [eax]
  428ac7:	add    ch,bh
  428ac9:	xchg   ebx,eax
  428aca:	stos   DWORD PTR es:[edi],eax
  428acb:	add    BYTE PTR [esp+eiz*8-0x4],ah
  428ad2:	mov    dl,0xff
  428ad4:	lods   eax,DWORD PTR ds:[esi]
  428ad5:	(bad)  
  428ad6:	inc    DWORD PTR [ebx-0x7cf2ab73]
  428adc:	pop    eax
  428add:	dec    edx
  428ade:	mov    esi,0x5e89ffff
  428ae3:	jmp    ecx
  428ae5:	mov    DWORD PTR [ebx+0x5aa46900],eax
  428aeb:	call   FWORD PTR [eax-0x77]
  428aee:	pop    DWORD PTR [eax]
  428af0:	inc    DWORD PTR [ebx-0x7cc10045]
  428af6:	inc    DWORD PTR [ebx-0x5e0dab]
  428afc:	dec    ebx
  428afd:	mov    esi,ebx
  428aff:	(bad)  
  428b00:	(bad)  
  428b01:	inc    DWORD PTR [edx+0xff41ff]
  428b07:	and    ebp,0xfffffffa
  428b0a:	or     edi,edi
  428b0c:	jmp    0xf000:0xffff2856
  428b13:	(bad)  
  428b14:	fdivr  st,st(7)
  428b16:	(bad)  
  428b17:	jmp    ecx
  428b19:	retf   0x8310
  428b1c:	pop    esp
  428b1d:	lods   eax,DWORD PTR ds:[esi]
  428b1e:	pop    edi
  428b1f:	add    bh,bh
  428b21:	dec    DWORD PTR [ebx]
  428b23:	jmp    DWORD PTR [ecx]
  428b25:	inc    DWORD PTR [eax]
  428b27:	add    BYTE PTR ds:0x8b00ce54,bl
  428b2d:	icebp  
  428b2e:	push   0xffffffff
  428b30:	or     esp,0x46
  428b33:	inc    DWORD PTR [ebx+0x6483ff00]
  428b39:	jnp    0x428ac7
  428b3b:	mov    esp,esi
  428b3d:	pop    edi
  428b3e:	ud0    eax,DWORD PTR [eax]
  428b41:	int3   
  428b42:	jne    0x428b44
  428b44:	pop    ebx
  428b45:	(bad)  
  428b46:	inc    DWORD PTR [eax]
  428b48:	addr16 mov edi,0xc93ecc3a
  428b4e:	push   ebp
  428b4f:	cmp    edi,0xffffffff
  428b52:	push   edx
  428b53:	xor    DWORD PTR [ebx-0x7d],0x0
  428b57:	dec    ecx
  428b59:	fdivrp st(1),st
  428b5b:	mov    esp,eax
  428b5d:	dec    eax
  428b5e:	adc    cl,ah
  428b60:	int3   
  428b61:	int3   
  428b62:	pusha  
  428b63:	push   DWORD PTR [edx]
  428b65:	(bad)  
  428b66:	inc    DWORD PTR [eax]
  428b68:	fcom   DWORD PTR [ebx-0x15]
  428b6b:	mov    DWORD PTR [ebp+0x17],ebp
  428b6e:	arpl   sp,cx
  428b70:	inc    DWORD PTR [eax]
  428b72:	fmul   st,st(4)
  428b74:	push   ebp
  428b75:	(bad)  
  428b76:	inc    DWORD PTR [ebx-0xd3b637]
  428b7c:	pop    ecx
  428b7d:	aam    0x71
  428b7f:	inc    DWORD PTR [eax]
  428b81:	(bad)  
  428b82:	jle    0x428b83
  428b84:	pop    ecx
  428b85:	add    bh,bh
  428b87:	mov    ebx,edi
  428b89:	ficomp WORD PTR [ebx-0x1]
  428b8c:	aam    0x12
  428b8e:	cli    
  428b8f:	add    BYTE PTR [ebx-0x2c00977d],al
  428b95:	add    bh,bh
  428b97:	dec    DWORD PTR [edi+0x6f]
  428b9a:	mov    edi,0x246f8b00
  428b9f:	inc    DWORD PTR [ebx+0x4a83b6ff]
  428ba5:	add    bh,bh
  428ba7:	add    BYTE PTR [edi-0x23],ah
  428baa:	mov    esi,0xbeaac0ff
  428baf:	int3   
  428bb0:	(bad)  
  428bb1:	inc    esi
  428bb3:	add    BYTE PTR [esi-0x277c0001],dl
  428bb9:	jp     0x428b97
  428bbb:	jmp    DWORD PTR [ecx-0x33ff96e1]
  428bc1:	int3   
  428bc2:	dec    ebp
  428bc3:	jmp    FWORD PTR [ebx]
  428bc5:	dec    DWORD PTR [ecx-0x32051300]
  428bcb:	jmp    DWORD PTR [ebx-0x2b]
  428bce:	mov    dh,0xff
  428bd0:	(bad)  
  428bd1:	push   edi
  428bd3:	add    BYTE PTR [eax],ah
  428bd5:	add    BYTE PTR [eax],al
  428bd7:	jmp    DWORD PTR [ebp+0x1500147d]
  428bdd:	in     eax,0x24
  428bdf:	dec    esp
  428be1:	cmp    DWORD PTR [ebx-0x7c33e401],0x0
  428be8:	gs mov eax,0x8fbbccd7
  428bee:	std    
  428bef:	add    BYTE PTR [eax],al
  428bf1:	jmp    FWORD PTR [edi-0x77]
  428bf4:	pop    ds
  428bf5:	add    bh,bh
  428bf7:	add    ah,al
  428bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428bfa:	dec    DWORD PTR ds:[edx]
  428bfd:	pop    esi
  428bfe:	sub    cl,BYTE PTR [ecx+0xeaffff]
  428c04:	aas    
  428c05:	(bad)  
  428c06:	inc    DWORD PTR [eax]
  428c08:	push   cs
  428c09:	pop    ebp
  428c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c0b:	mov    DWORD PTR [edx-0x19],ebp
  428c0e:	test   BYTE PTR [eax],0x0
  428c11:	add    BYTE PTR [edx],dl
  428c13:	(bad)  
  428c14:	(bad)  
  428c15:	inc    DWORD PTR [eax]
  428c17:	push   eax
  428c19:	leave  
  428c1a:	xor    DWORD PTR [ecx-0x7c79e9f8],ecx
  428c20:	add    bh,bh
  428c22:	pop    edi
  428c23:	add    BYTE PTR [ebx-0x1],bl
  428c26:	(bad)  
  428c27:	call   DWORD PTR [edx]
  428c29:	fcomip st,st(2)
  428c2b:	mov    DWORD PTR [ebx-0x3300631c],esp
  428c31:	int3   
  428c32:	dec    esi
  428c33:	add    BYTE PTR [edx+0x0],cl
  428c36:	inc    DWORD PTR [ebx-0x76cbb4f7]
  428c3c:	lods   eax,DWORD PTR ds:[esi]
  428c3d:	dec    ebx
  428c3e:	leave  
  428c3f:	or     DWORD PTR [ecx+0x4589fb00],0x0
  428c46:	(bad)  
  428c47:	inc    DWORD PTR [esi+0x34cc1972]
  428c4d:	adc    BYTE PTR [ebx+0x3ff83ff],dh
  428c53:	(bad)  
  428c54:	fild   WORD PTR [eax]
  428c56:	dec    DWORD PTR [ecx-0xb9676a]
  428c5c:	ins    DWORD PTR es:[edi],dx
  428c5d:	lsl    eax,WORD PTR [eax]
  428c60:	int3   
  428c61:	cmp    DWORD PTR [ecx],0xffffffff
  428c64:	test   BYTE PTR [eax],al
  428c66:	dec    DWORD PTR [ecx-0x7c7d8224]
  428c6c:	xor    ebx,DWORD PTR [eax]
  428c6e:	(bad)  
  428c6f:	add    DWORD PTR [eax],0xffffffff
  428c72:	rol    BYTE PTR [eax],cl
  428c74:	rol    BYTE PTR [eax],0xff
  428c77:	int3   
  428c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c79:	ss popa 
  428c7b:	cmp    DWORD PTR [edx+0x688f],0xffffffff
  428c82:	inc    edx
  428c83:	dec    ebx
  428c85:	or     esp,0xffffffff
  428c88:	call   0xc555:0x5bcce4c1
  428c8f:	add    bh,bh
  428c91:	inc    DWORD PTR [edi+edi*8]
  428c94:	daa    
  428c95:	add    DWORD PTR [eax],0xffffffff
  428c98:	jmp    DWORD PTR [ecx]
  428c9a:	push   ss
  428c9b:	add    BYTE PTR [ecx-0x33ff32c0],bl
  428ca1:	(bad)  
  428ca2:	std    
  428ca3:	or     DWORD PTR [ecx-0x30ff0001],0x5
  428caa:	test   edi,edi
  428cac:	adc    ah,bl
  428cae:	jns    0x428c33
  428cb0:	add    BYTE PTR [eax],al
  428cb2:	call   FWORD PTR [bx-0x3301]
  428cb7:	add    ch,dh
  428cb9:	mov    ah,0x35
  428cbb:	inc    DWORD PTR [edi-0x3333af59]
  428cc1:	mov    DWORD PTR [ebx],esp
  428cc3:	or     DWORD PTR [esi-0x1],0xffffffff
  428cc7:	add    BYTE PTR [esi],dh
  428cc9:	jae    0x428d28
  428ccb:	int3   
  428ccc:	(bad)  
  428ccd:	mov    ecx,0xffff83c6
  428cd2:	cwde   
  428cd3:	add    BYTE PTR ds:0x2300cc83,dl
  428cd9:	out    dx,al
  428cda:	inc    edx
  428cdb:	dec    DWORD PTR [esi+0x19]
  428cde:	cwde   
  428cdf:	(bad)  
  428ce0:	(bad)  
  428ce1:	call   DWORD PTR [edi+edi*8]
  428ce4:	cwde   
  428ce5:	(bad)  
  428ce6:	dec    DWORD PTR [ecx+0xbbcd7a]
  428cec:	das    
  428ced:	repz xor al,0x83
  428cf0:	add    bh,bh
  428cf2:	xor    edi,edi
  428cf4:	fadd   QWORD PTR [eax]
  428cf6:	(bad)  
  428cf7:	inc    DWORD PTR [ebx+0x25]
  428cfa:	dec    ebp
  428cfb:	push   DWORD PTR [esi-0x33ffce33]
  428d01:	add    BYTE PTR [eax+0xffbbff],cl
  428d07:	inc    DWORD PTR [ebx-0x72]
  428d0a:	add    DWORD PTR [ebx-0xc1fbce],eax
  428d10:	add    ah,cl
  428d12:	push   edx
  428d13:	push   DWORD PTR [ebx]
  428d15:	(bad)  
  428d16:	(bad)  
  428d17:	call   DWORD PTR [ebp+0x8]
  428d1a:	adc    eax,DWORD PTR [eax]
  428d1c:	retf   
  428d1d:	outs   dx,BYTE PTR ds:[esi]
  428d1e:	ja     0x428d1f
  428d20:	add    DWORD PTR [ebx-0xac764f],0xffffffff
  428d27:	add    BYTE PTR [eax+0x33fff06a],bl
  428d2d:	jnp    0x428d8d
  428d2f:	(bad)  
  428d30:	dec    esp
  428d32:	sar    bh,1
  428d34:	(bad)  
  428d36:	add    BYTE PTR [eax],al
  428d38:	inc    esp
  428d39:	out    0x13,eax
  428d3b:	jmp    DWORD PTR [ebx]
  428d3d:	out    0x54,eax
  428d3f:	inc    DWORD PTR [eax]
  428d41:	add    BYTE PTR [eax],ch
  428d43:	(bad)  
  428d44:	jge    0x428ccf
  428d46:	inc    DWORD PTR [eax]
  428d48:	mov    ah,0xb4
  428d4a:	stos   DWORD PTR es:[edi],eax
  428d4b:	call   FWORD PTR [ebx]
  428d4d:	std    
  428d4e:	or     bh,bh
  428d50:	int3   
  428d51:	add    BYTE PTR [edi+0x0],cl
  428d54:	jb     0x428d55
  428d56:	inc    DWORD PTR [eax]
  428d58:	mov    bl,0xee
  428d5a:	adc    DWORD PTR [ebx-0x33b36bd4],eax
  428d60:	(bad)  
  428d61:	(bad)  
  428d62:	mov    eax,0xffffa183
  428d67:	add    BYTE PTR [ecx-0x5000418b],bh
  428d6d:	inc    esp
  428d6e:	ins    DWORD PTR es:[edi],dx
  428d6f:	inc    DWORD PTR [ebx-0x4c00e601]
  428d75:	int3   
  428d76:	int3   
  428d77:	cmp    DWORD PTR [esi-0x77],0x43
  428d7b:	add    ah,dh
  428d7d:	mov    esp,0xccffff9b
  428d82:	(bad)  
  428d83:	(bad)  
  428d84:	out    dx,al
  428d85:	(bad)  
  428d86:	(bad)  
  428d87:	(bad)  
  428d88:	cmp    DWORD PTR [edi-0x72ed7c03],ebp
  428d8e:	or     bh,bh
  428d90:	add    BYTE PTR [ebx+0x49835b],al
  428d96:	int3   
  428d97:	add    BYTE PTR [ebp-0x787c4907],dh
  428d9d:	jo     0x428d82
  428d9f:	(bad)  
  428da0:	inc    DWORD PTR [ebx-0x33240001]
  428da6:	(bad)  
  428da7:	call   DWORD PTR [edx+eax*1+0x5b]
  428dab:	(bad)  
  428dac:	jg     0x428d51
  428dae:	les    eax,FWORD PTR [eax]
  428db0:	(bad)  
  428db1:	(bad)  
  428db2:	(bad)  
  428db4:	outs   dx,BYTE PTR ds:[esi]
  428db5:	add    bh,bh
  428db7:	adc    DWORD PTR [esi-0x41],0x40
  428dbb:	add    DWORD PTR [ebx],0x7d
  428dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428dbf:	(bad)  
  428dc0:	(bad)  
  428dc1:	(bad)  
  428dc2:	jp     0x428dc3
  428dc4:	pop    ss
  428dc5:	inc    DWORD PTR [eax]
  428dc7:	mov    DWORD PTR [eax+0x66ff2f9e],edx
  428dcd:	repnz popf 
  428dcf:	(bad)  
  428dd0:	dec    esp
  428dd2:	pop    ds
  428dd3:	add    BYTE PTR [eax],ch
  428dd5:	add    bh,bh
  428dd7:	(bad)  
  428dd8:	cmp    ecx,DWORD PTR [esi+0x4771ff30]
  428dde:	loop   0x428d63
  428de0:	add    bh,bh
  428de2:	cwde   
  428de3:	dec    DWORD PTR [esi-0x7d]
  428de6:	(bad)  
  428de7:	(bad)  
  428de8:	mov    ebp,0xaf0019e0
  428ded:	lahf   
  428dee:	sar    bh,1
  428df0:	int3   
  428df1:	push   DWORD PTR [ecx-0x7600bb00]
  428df7:	add    dh,bh
  428df9:	test   BYTE PTR [ebx],0xff
  428dfc:	call   0xff431bba
  428e01:	push   DWORD PTR [ecx]
  428e03:	add    BYTE PTR [ebx-0x38ff7601],dh
  428e09:	daa    
  428e0a:	(bad)  
  428e0c:	pop    es
  428e0d:	jnp    0x428dd5
  428e0f:	(bad)  
  428e10:	(bad)  
  428e11:	jmp    DWORD PTR [ecx]
  428e13:	sbb    ebx,0xffffffcc
  428e16:	add    DWORD PTR [eax],0xffffffb2
  428e19:	es xchg esp,eax
  428e1b:	add    dl,dl
  428e1d:	aam    0xcf
  428e1f:	add    BYTE PTR [eax],al
  428e21:	add    al,bh
  428e23:	(bad)  
  428e24:	jmp    0x428e25
  428e26:	inc    DWORD PTR [eax]
  428e28:	xor    ebx,DWORD PTR [eax]
  428e2a:	and    BYTE PTR [eax],al
  428e2c:	int    0x7e
  428e2e:	dec    ebp
  428e2f:	inc    DWORD PTR [eax]
  428e31:	or     DWORD PTR [edx],0xffffff83
  428e34:	ror    DWORD PTR [ecx+0x6851ff83],1
  428e3a:	add    DWORD PTR [eax],eax
  428e3c:	mov    al,0x7c
  428e3e:	jbe    0x428e0c
  428e40:	add    bh,bh
  428e42:	mov    ds:0xffd8ff,eax
  428e47:	add    BYTE PTR [ebx-0x3a],ah
  428e4a:	(bad)
  428e4d:	fsubr  QWORD PTR [edi]
  428e4f:	(bad)  
  428e50:	(bad)  
  428e51:	(bad)  
  428e52:	jl     0x428dd7
  428e54:	add    BYTE PTR cs:[ebx+0x410b1f83],al
  428e5b:	int3   
  428e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e5d:	test   eax,0xffffd1
  428e62:	add    BYTE PTR gs:[ecx],bl
  428e65:	add    BYTE PTR [eax],al
  428e67:	inc    DWORD PTR [ecx+0x4effc02a]
  428e6d:	mov    bh,0x94
  428e6f:	dec    esp
  428e71:	call   DWORD PTR [edi-0x1]
  428e74:	cmp    esp,ecx
  428e76:	add    BYTE PTR [eax],al
  428e78:	jno    0x428e18
  428e7a:	adc    eax,0xa52cceff
  428e7f:	add    bh,bh
  428e81:	call   FWORD PTR [eax-0x34]
  428e84:	pop    esp
  428e85:	(bad)  
  428e86:	inc    DWORD PTR [ebx+0x955ab5]
  428e8c:	sbb    esi,DWORD PTR [ecx+0x53]
  428e8f:	add    BYTE PTR [eax],al
  428e91:	jmp    FWORD PTR [ebp-0x34]
  428e94:	pop    ebp
  428e95:	dec    esp
  428e97:	mov    DWORD PTR [esi-0x2200c2be],ebx
  428e9d:	or     BYTE PTR [eax],dh
  428e9f:	inc    DWORD PTR [eax]
  428ea1:	add    dh,cl
  428ea3:	add    BYTE PTR [edx-0x77],dl
  428ea6:	add    DWORD PTR [eax],0xffffffd5
  428ea9:	fdivr  QWORD PTR [eax]
  428eab:	mov    DWORD PTR [esi+0xa118],ebp
  428eb1:	(bad)  
  428eb2:	(bad)  
  428eb3:	inc    DWORD PTR [ebx-0x1]
  428eb6:	int3   
  428eb7:	add    cl,ah
  428eb9:	pop    esi
  428eba:	cdq    
  428ebb:	add    BYTE PTR [edx+ebp*1-0x24],bl
  428ebf:	cmp    edi,0x0
  428ec2:	ror    BYTE PTR [ecx+0x8900cc],0xf
  428ec9:	ja     0x428ef2
  428ecb:	add    BYTE PTR [esi-0xff39a9],ah
  428ed1:	(bad)  
  428ed2:	jnp    0x428ed4
  428ed4:	inc    DWORD PTR ss:[ebx-0x9a2ed01]
  428edb:	sub    DWORD PTR [ecx],0x3d
  428ede:	sub    edi,edi
  428ee0:	add    BYTE PTR [eax],al
  428ee2:	adc    eax,DWORD PTR [ebx-0x7c7c7c2d]
  428ee8:	popf   
  428ee9:	mov    esp,0xb2360057
  428eee:	sar    edi,1
  428ef0:	add    bh,bh
  428ef2:	mov    bh,bh
  428ef4:	inc    eax
  428ef5:	cmp    edi,0xffffffff
  428ef8:	(bad)  
  428ef9:	xor    esp,DWORD PTR [ecx-0x10cf9100]
  428eff:	int3   
  428f00:	mov    edi,edi
  428f02:	mov    ebp,0x83ff93ff
  428f07:	add    BYTE PTR [ebp+0x3a],ah
  428f0a:	sbb    edi,edi
  428f0c:	call   0x5d00:0xffffa283
  428f13:	(bad)  
  428f14:	cmp    bh,bh
  428f16:	(bad)  
  428f17:	jmp    ebp
  428f19:	jmp    FWORD PTR [ebx]
  428f1b:	and    DWORD PTR [edi+0x8],0xf
  428f1f:	add    BYTE PTR [eax],al
  428f21:	add    BYTE PTR [eax+eax*1],bh
  428f24:	retf   0xffff
  428f27:	sub    DWORD PTR [ebx],0xffffff8a
  428f2a:	jbe    0x428f2b
  428f2c:	add    BYTE PTR [edx-0xffff84],0xe5
  428f33:	push   DWORD PTR [ecx+ecx*4-0x7d]
  428f37:	inc    eax
  428f39:	mov    ds,WORD PTR [ebp-0x14722701]
  428f3f:	or     DWORD PTR [ecx-0x48008d00],0xffffffff
  428f46:	mov    edi,edi
  428f48:	or     ebp,esp
  428f4a:	or     BYTE PTR [eax],al
  428f4c:	xchg   ecx,eax
  428f4d:	push   ebx
  428f4e:	mov    dl,0xff
  428f50:	(bad)  
  428f51:	dec    DWORD PTR [ebp-0xffc177]
  428f57:	inc    DWORD PTR [eax+edi*1+0x2d1dff79]
  428f5e:	inc    ebp
  428f5f:	mov    DWORD PTR [eax],eax
  428f61:	dec    DWORD PTR [esi-0xffa100]
  428f67:	dec    DWORD PTR [eax-0x6aff8fbf]
  428f6d:	xchg   ebp,eax
  428f6e:	pop    ebp
  428f6f:	cmp    edi,0x0
  428f72:	push   ebp
  428f73:	add    cl,dl
  428f75:	add    BYTE PTR [eax],al
  428f77:	int3   
  428f78:	call   FWORD PTR [ebx+0x3c]
  428f7b:	call   DWORD PTR [ecx+0x31]
  428f7e:	imul   eax,DWORD PTR [eax],0xffffffff
  428f81:	and    DWORD PTR [ebp-0x1],0xffffff96
  428f85:	(bad)  
  428f86:	inc    DWORD PTR [ebx-0x7cc87a43]
  428f8c:	jp     0x428ffe
  428f8e:	rol    DWORD PTR [eax],1
  428f90:	add    bh,bh
  428f92:	out    dx,al
  428f93:	inc    DWORD PTR [esi-0x76ff7601]
  428f99:	in     eax,dx
  428f9a:	arpl   WORD PTR [ebx-0x7c9d79b4],ax
  428fa0:	(bad)  
  428fa1:	inc    DWORD PTR [ecx-0x1]
  428fa4:	sbb    edi,edi
  428fa6:	mov    DWORD PTR [eax],eax
  428fa8:	jg     0x428fa5
  428faa:	jne    0x428f2f
  428fac:	ds inc ebp
  428fae:	test   DWORD PTR [eax],0xff2e8383
  428fb4:	xor    BYTE PTR [ebx-0x4fa1007d],al
  428fba:	fwait
  428fbb:	jmp    FWORD PTR [edx+0x1c]
  428fbe:	xlat   BYTE PTR ds:[ebx]
  428fbf:	or     esp,0xffffffcc
  428fc2:	sbb    cl,ah
  428fc4:	fild   DWORD PTR [eax]
  428fc6:	(bad)  
  428fc7:	jmp    FWORD PTR [eax-0x7c]
  428fca:	jge    0x428f4f
  428fcc:	or     edi,edi
  428fce:	or     eax,0x6583ffff
  428fd3:	inc    DWORD PTR ds:0x30ffffff
  428fd9:	pushf  
  428fda:	push   ebx
  428fdb:	push   DWORD PTR [edi]
  428fdd:	push   edx
  428fde:	lahf   
  428fdf:	add    bh,bh
  428fe1:	call   FWORD PTR [ebp-0xa401]
  428fe7:	dec    DWORD PTR [edi+eiz*1]
  428fea:	stc    
  428feb:	mov    DWORD PTR [esp+eax*4-0xff7626],ebp
  428ff2:	mov    ?,edi
  428ff4:	gs add ah,cl
  428ff7:	add    bh,dl
  428ff9:	add    ch,cl
  428ffb:	(bad)  
  428ffc:	mov    ebx,0x8300212a
  429001:	jmp    DWORD PTR [ebp+0x0]
  429004:	add    BYTE PTR [eax],al
  429006:	dec    esp
  429008:	shl    dl,cl
  42900a:	mov    ah,0x0
  42900c:	ret    0x3555
  42900f:	(bad)  
  429010:	(bad)  
  429011:	call   DWORD PTR [ebp+0x0]
  429014:	jo     0x428f9f
  429016:	(bad)  
  429017:	jmp    FWORD PTR [esi]
  429019:	pop    eax
  42901a:	repz call edx
  42901d:	or     DWORD PTR [eax],esp
  42901f:	add    bh,bh
  429021:	add    dl,ch
  429023:	add    BYTE PTR [esp+ecx*8-0x7d],ah
  429027:	int3   
  429028:	(bad)  
  429029:	xchg   edi,eax
  42902a:	mov    esp,cs
  42902c:	dec    esi
  42902d:	dec    ecx
  42902e:	xchg   ecx,eax
  42902f:	mov    edi,edi
  429031:	jmp    DWORD PTR [edi+edi*8-0x2c]
  429035:	dec    esp
  429037:	add    BYTE PTR [eax],dl
  429039:	pushf  
  42903a:	out    dx,al
  42903b:	sub    esp,0xffffffe4
  42903e:	fwait
  42903f:	(bad)  
  429040:	inc    DWORD PTR [ebx+0xe300e1]
  429046:	add    BYTE PTR [ebx-0x9e1934],al
  42904c:	xor    ebx,DWORD PTR [ebx+0x71]
  42904f:	add    bh,bh
  429051:	mov    DWORD PTR [esi],esp
  429053:	(bad)  
  429054:	stc    
  429055:	(bad)  
  429056:	(bad)  
  429057:	push   DWORD PTR [esi]
  429059:	std    
  42905a:	sbb    eax,DWORD PTR [ebx+0xb46827]
  429060:	int3   
  429061:	inc    DWORD PTR [edi+0x0]
  429064:	iret   
  429065:	add    BYTE PTR [eax],al
  429067:	add    bh,al
  429069:	test   ebx,edi
  42906b:	dec    DWORD PTR [edi+0x9b14]
  429071:	mov    ebp,esp
  429073:	jmp    DWORD PTR [edi+edi*8-0x1]
  429077:	(bad)  
  429078:	cmp    eax,0x6eff2fdc
  42907d:	lds    ecx,FWORD PTR [ebx]
  42907f:	inc    DWORD PTR [eax]
  429081:	add    BYTE PTR [esi-0x1],bh
  429084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429085:	(bad)  
  429086:	inc    DWORD PTR [eax]
  429088:	xchg   BYTE PTR [eax-0x55],ch
  42908b:	inc    esi
  42908d:	mov    ebx,0xff8383c7
  429092:	inc    edx
  429093:	dec    esi
  429095:	add    BYTE PTR [ebx-0x5c183d00],al
  42909b:	call   FWORD PTR [esi]
  42909d:	mov    DWORD PTR ds:0xabb60000,ebx
  4290a3:	pop    ss
  4290a4:	(bad)  
  4290a6:	ud0    esp,DWORD PTR [eax]
  4290a9:	add    BYTE PTR [esi+0x0],cl
  4290ac:	inc    DWORD PTR [eax]
  4290ae:	dec    DWORD PTR [eax-0x34]
  4290b1:	mov    edi,0xff1337e6
  4290b6:	mov    cl,0x0
  4290b8:	xchg   DWORD PTR [eax],eax
  4290ba:	dec    ecx
  4290bb:	add    BYTE PTR [eax],al
  4290bd:	inc    DWORD PTR [eax]
  4290bf:	scas   al,BYTE PTR es:[edi]
  4290c0:	(bad)  
  4290c1:	jns    0x4290ea
  4290c3:	jno    0x4290cf
  4290c5:	mov    DWORD PTR [ebp-0x247ce67d],edx
  4290cb:	add    DWORD PTR [eax],0xffffff89
  4290ce:	dec    DWORD PTR [eax+eax*1]
  4290d1:	dec    edi
  4290d2:	call   0xec5e789
  4290d7:	and    eax,0xffffffff
  4290da:	mov    edi,0xffffff
  4290df:	(bad)  
  4290e1:	jl     0x4290d6
  4290e3:	pop    sp
  4290e5:	mov    DWORD PTR [eax+0x5e896289],esi
  4290eb:	add    DWORD PTR [eax],0xffffffff
  4290ee:	xor    DWORD PTR [edx],0xffffffff
  4290f1:	dec    ebp
  4290f2:	ins    DWORD PTR es:[edi],dx
  4290f3:	cmp    ebx,edx
  4290f5:	(bad)  
  4290f6:	cmp    al,0x83
  4290f8:	pop    ebx
  4290f9:	jmp    DWORD PTR [edx-0x77]
  4290fc:	add    bh,bh
  4290fe:	int3   
  4290ff:	leave  
  429100:	dec    ebx
  429102:	and    eax,0x4d83b74c
  429107:	push   DWORD PTR [edx+0x0]
  42910a:	jb     0x42910b
  42910c:	int3   
  42910d:	(bad)  
  42910e:	push   DWORD PTR [edx]
  429110:	(bad)  
  429111:	mov    ebp,0x600e9f
  429116:	or     esp,0xffb700cf
  42911c:	dec    esp
  42911e:	jmp    DWORD PTR [edi+0x6dccb989]
  429124:	push   ebp
  429125:	jmp    DWORD PTR [ecx+0x210028ff]
  42912b:	add    DWORD PTR [eax],0x0
  42912e:	int3   
  42912f:	sar    bh,0xde
  429132:	inc    ebp
  429133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429134:	jb     0x429135
  429136:	mov    cl,0xff
  429138:	and    DWORD PTR [eax],eax
  42913a:	js     0x42913c
  42913c:	add    DWORD PTR [ebx+0x20ff5b00],0x67
  429143:	dec    ebp
  429144:	outs   dx,BYTE PTR ds:[esi]
  429145:	add    BYTE PTR ds:0x5f0085ff,bh
  42914b:	(bad)  
  42914c:	inc    DWORD PTR [eax]
  42914e:	add    BYTE PTR [edx-0x77],al
  429151:	imul   edi,DWORD PTR [eax+0x1dcc047d],0x59ff8400
  42915b:	add    DWORD PTR [eax],0x0
  42915e:	sbb    DWORD PTR [edi+edi*8+0x16],0xffffff94
  429163:	add    al,0x59
  429165:	dec    DWORD PTR [edi-0x6776a400]
  42916b:	int3   
  42916c:	dec    esp
  42916e:	add    DWORD PTR [edi+edi*8],0xffffffb8
  429172:	clc    
  429173:	loope  0x429181
  429175:	push   DWORD PTR [edi+edi*8]
  429178:	imul   ecx,esp,0xffffffb4
  42917b:	(bad)  
  42917c:	inc    DWORD PTR [ebx+0x7fcca7ff]
  429182:	add    ebx,ecx
  429184:	(bad)  
  429185:	jmp    esp
  429187:	add    BYTE PTR [edx+0x6ff],dl
  42918d:	int3   
  42918e:	int3   
  42918f:	cmp    al,0x0
  429191:	cs push cs
  429193:	add    bl,BYTE PTR [edi+edi*8-0x12]
  429197:	cmp    DWORD PTR [edx],0xffffffff
  42919a:	mov    ?,edi
  42919c:	inc    DWORD PTR [eax]
  42919e:	jmp    FWORD PTR [edx+0x0]
  4291a1:	addr16 (bad) 
  4291a3:	and    cl,BYTE PTR [esi]
  4291a5:	int3   
  4291a6:	jmp    0x4291a7
  4291a8:	mov    esi,0xffcc3900
  4291ad:	(bad)  
  4291ae:	call   DWORD PTR [edi+edi*8+0x73f6f266]
  4291b5:	int3   
  4291b6:	rol    BYTE PTR [ebx+0xb500ae],cl
  4291bc:	cmp    edi,0xffffffff
  4291bf:	rol    DWORD PTR [eax],1
  4291c1:	or     eax,0xd2452d
  4291c6:	cmc    
  4291c7:	inc    DWORD PTR [ebx+0x0]
  4291ca:	fdivp  st(7),st
  4291cc:	add    bh,bh
  4291ce:	call   FWORD PTR [esi+0x0]
  4291d1:	mov    eax,0x83f0c83f
  4291d6:	add    al,0xff
  4291d8:	cli    
  4291d9:	int3   
  4291da:	push   0xccccffff
  4291df:	call   0x2db79b67
  4291e4:	rol    BYTE PTR [eax],0xa3
  4291e7:	add    DWORD PTR [edi+edi*8],0xffffff8e
  4291eb:	inc    DWORD PTR [eax]
  4291ed:	inc    DWORD PTR [eax]
  4291ef:	leave  
  4291f0:	jmp    DWORD PTR [eax]
  4291f2:	add    BYTE PTR [ecx],ah
  4291f4:	arpl   WORD PTR [eax],ax
  4291f6:	sub    al,0xff
  4291f8:	add    BYTE PTR [bp+di-0x34],cl
  4291fc:	add    bh,bh
  4291fe:	int3   
  4291ff:	mov    esi,0xd5538a00
  429204:	jl     0x429205
  429206:	and    BYTE PTR [eax],al
  429208:	mov    ah,0xcc
  42920a:	fwait
  42920b:	int3   
  42920c:	add    BYTE PTR [ecx-0x39003a00],cl
  429212:	add    ebp,eax
  429214:	ud0    esi,esp
  429217:	int3   
  429218:	jg     0x42921a
  42921a:	dec    ebp
  42921b:	mov    edi,edi
  42921d:	add    bh,bh
  42921f:	xor    edi,edi
  429221:	aam    0x1f
  429223:	cli    
  429224:	and    eax,0x70002900
  429229:	add    BYTE PTR [esp+ecx*8+0x42ffccff],ah
  429230:	int3   
  429231:	mov    eax,ds:0xf5c857
  429236:	jl     0x4291c1
  429238:	stos   DWORD PTR es:[edi],eax
  429239:	push   ecx
  42923b:	inc    DWORD PTR [eax]
  42923d:	inc    DWORD PTR [ebx-0x12237c60]
  429243:	daa    
  429244:	aaa    
  429245:	int3   
  429246:	outs   dx,BYTE PTR ds:[esi]
  429247:	call   FWORD PTR [esi]
  429249:	inc    DWORD PTR [ecx]
  42924b:	(bad)  
  42924c:	inc    DWORD PTR [eax]
  42924e:	add    BYTE PTR [esi-0x27d59a00],dh
  429254:	cmp    eax,0xee8969ff
  429259:	add    BYTE PTR [ecx],bh
  42925b:	add    BYTE PTR [eax],al
  42925d:	add    bh,bh
  42925f:	popa   
  429260:	dec    ebp
  429262:	imul   ebx,DWORD PTR [ecx],0x89bbff6f
  429268:	fdivr  st,st(7)
  42926a:	inc    edx
  42926b:	dec    esp
  42926d:	add    BYTE PTR [ebx+0x2ff3ffc2],al
  429273:	jg     0x42924a
  429275:	jmp    FWORD PTR [ebx-0x34ff8534]
  42927b:	inc    DWORD PTR [eax]
  42927d:	add    BYTE PTR [eax],al
  42927f:	push   ebp
  429280:	(bad)  
  429281:	clc    
  429282:	adc    DWORD PTR [edx-0x5900eb],ebp
  429288:	imul   eax,DWORD PTR [ebx+0xffff41],0xed835b00
  429292:	xchg   edi,eax
  429293:	psrad  mm7,mm7
  429296:	fwait
  429297:	jmp    FWORD PTR [ebp-0x4201]
  42929d:	add    DWORD PTR [eax],0xffffffe8
  4292a0:	jmp    FWORD PTR [eax]
  4292a2:	orps   xmm2,XMMWORD PTR [ecx+0x2683f700]
  4292a9:	(bad)  
  4292aa:	js     0x4292ab
  4292ac:	inc    DWORD PTR [ebx-0x2300077d]
  4292b2:	xchg   ebx,eax
  4292b3:	(bad)  
  4292b5:	(bad)  
  4292b6:	jg     0x4292b8
  4292b8:	cmp    eax,DWORD PTR [ebx+0xffffb1]
  4292be:	int3   
  4292bf:	push   eax
  4292c0:	or     DWORD PTR [edx+0x2e],0x0
  4292c4:	adc    eax,0xd2ff
  4292c9:	inc    ebx
  4292cb:	inc    DWORD PTR [ebx+0xbf00ff]
  4292d1:	push   esi
  4292d2:	jmp    0x429328
  4292d4:	aad    0xff
  4292d6:	repz (bad) 
  4292d8:	std    
  4292d9:	adc    DWORD PTR [edi+edi*8-0x3a330077],0xffffff83
  4292e1:	lods   al,BYTE PTR ds:[esi]
  4292e2:	repnz pusha 
  4292e4:	xchg   BYTE PTR [ecx+0x27ccd6],cl
  4292ea:	sub    edi,edi
  4292ec:	add    BYTE PTR [ebx-0x33ff8f01],al
  4292f2:	lods   eax,DWORD PTR ds:[esi]
  4292f3:	mov    bh,0x45
  4292f5:	add    esi,0xffffffff
  4292f8:	xor    bh,bh
  4292fa:	aas    
  4292fb:	int3   
  4292fc:	int3   
  4292fd:	int3   
  4292fe:	add    BYTE PTR [edi],dl
  429300:	jmp    ebp
  429302:	jmp    0xf742838a
  429307:	call   DWORD PTR [eax-0x7d]
  42930a:	xchg   edi,edi
  42930c:	add    BYTE PTR [eax],al
  42930e:	add    DWORD PTR [edi],0x0
  429311:	out    0x37,eax
  429313:	(bad)  
  429314:	dec    DWORD PTR cs:[esi-0x1]
  429318:	xchg   edx,eax
  429319:	add    BYTE PTR [esi-0xff34],bl
  42931f:	cld    
  429320:	int3   
  429321:	dec    eax
  429322:	jno    0x4292fa
  429324:	aas    
  429325:	and    eax,0xffffffcc
  429328:	int    0xff
  42932a:	xchg   ecx,eax
  42932b:	int3   
  42932c:	(bad)  
  42932d:	(bad)  
  42932e:	call   DWORD PTR [esp+ecx*8+0x1e]
  429332:	mov    eax,0x5ff9381
  429337:	add    BYTE PTR [ebp+0x0],ah
  42933a:	xor    eax,0x83ffffff
  42933f:	cwde   
  429340:	push   eax
  429342:	shr    DWORD PTR [ebx-0x327cea],cl
  429348:	jg     0x42934a
  42934a:	push   ebp
  42934b:	inc    DWORD PTR [eax]
  42934d:	int3   
  42934e:	jmp    FWORD PTR [edi]
  429350:	add    BYTE PTR [ebp-0x69],bh
  429353:	xor    DWORD PTR [edi-0x6b003b00],ebx
  429359:	call   FWORD PTR [ebx]
  42935b:	add    DWORD PTR [ebx-0xdc7c01],0xffffff98
  429362:	xor    dl,BYTE PTR [ebx-0x73]
  429365:	add    dl,cl
  429367:	mov    DWORD PTR [eax-0x1],edi
  42936a:	xchg   BYTE PTR [eax],al
  42936c:	add    bh,bh
  42936e:	and    DWORD PTR [edx],0xffffffcc
  429371:	mov    esp,0x7a129f
  429376:	jmp    0x429377
  429378:	das    
  429379:	add    BYTE PTR [eax-0x1],ch
  42937c:	add    DWORD PTR [ebx-0x9003200],0xffffffd9
  429383:	mov    ss,WORD PTR [edi]
  429385:	(bad)  
  429386:	fdiv   st(7),st
  429388:	mov    al,0xff
  42938a:	iret   
  42938b:	add    bh,bh
  42938d:	cmp    edi,0x6e
  429390:	add    bl,bl
  429392:	jl     0x4293ff
  429394:	or     edi,edi
  429396:	sub    edi,edi
  429398:	pop    ebx
  429399:	call   FWORD PTR [esi]
  42939b:	inc    DWORD PTR [eax]
  42939d:	cmp    edi,0xffffff86
  4293a0:	xor    DWORD PTR [ecx],0xffffff81
  4293a3:	jae    0x429424
  4293a5:	mov    DWORD PTR [edi+edi*8-0xde0008],ebx
  4293ac:	or     esp,0xffffffff
  4293af:	sbb    DWORD PTR [eax],eax
  4293b1:	and    al,0xd6
  4293b3:	lock daa 
  4293b5:	jmp    DWORD PTR [edi]
  4293b7:	jmp    DWORD PTR [ebx+eax*4+0xff00f2]
  4293be:	push   ecx
  4293c0:	sbb    DWORD PTR [esi+ecx*1+0x7bffc951],0xffffffff
  4293c8:	in     eax,0x0
  4293ca:	mov    DWORD PTR [ebx+0x2c00cc83],eax
  4293d0:	dec    edx
  4293d2:	inc    DWORD PTR [ebx]
  4293d4:	xor    eax,0x57ccbbff
  4293d9:	inc    DWORD PTR [edx+0x8300]
  4293df:	pop    ebp
  4293e0:	push   DWORD PTR [esi+0x67]
  4293e3:	sub    BYTE PTR [esi-0x1f766801],bh
  4293e9:	push   DWORD PTR ds:0xff00ffff
  4293ef:	adc    al,0xff
  4293f1:	adc    eax,0xe15944
  4293f6:	ret    0x9dff
  4293f9:	cmp    DWORD PTR [edi],0x0
  4293fc:	int3   
  4293fd:	add    bh,bh
  4293ff:	mov    edx,0x97c157cc
  429404:	or     eax,0x8cff8483
  429409:	mov    DWORD PTR [edi+0xffff00],ebp
  42940f:	cmp    al,0xff
  429411:	arpl   WORD PTR [ebp-0x55],bp
  429414:	xor    al,BYTE PTR [ebx-0xd00093]
  42941a:	repnz cmp edi,0xffffffff
  42941e:	jmp    DWORD PTR [eax+0x2c0a7f83]
  429424:	imul   eax,DWORD PTR [eax],0xffffffc6
  429427:	add    dh,ah
  429429:	add    BYTE PTR [esi],bl
  42942b:	int3   
  42942c:	add    BYTE PTR [ebx-0x1f001034],al
  429432:	into   
  429433:	and    al,0xd2
  429435:	call   ecx
  429437:	dec    DWORD PTR [eax-0x76002700]
  42943d:	cmp    edi,0xffffffca
  429440:	push   DWORD PTR [edi+0x80f2b5]
  429446:	inc    esp
  429447:	add    BYTE PTR [esi],dl
  429449:	call   FWORD PTR [esi-0x34]
  42944c:	add    BYTE PTR [ecx-0x6d006600],cl
  429452:	iret   
  429453:	adc    al,bl
  429455:	add    BYTE PTR [edi+edi*8-0x1b00be],dl
  42945c:	mov    DWORD PTR [eax],eax
  42945e:	xor    DWORD PTR [eax-0x368dab00],0x7e
  429465:	inc    DWORD PTR [eax-0x34]
  429468:	loop   0x42946a
  42946a:	or     BYTE PTR [eax],al
  42946c:	mov    DWORD PTR [ecx-0x7008801],ecx
  429472:	push   ecx
  429473:	push   ds
  429474:	inc    DWORD PTR fs:[esi-0x61ff8a01]
  42947b:	mov    edi,edi
  42947d:	mov    edi,edi
  42947f:	add    al,0x0
  429481:	mov    cl,0x4
  429483:	jp     0x4294c3
  429485:	add    ch,al
  429487:	add    BYTE PTR [esi+0x5c00],bh
  42948d:	add    bh,bh
  42948f:	(bad)  
  429491:	lods   eax,DWORD PTR ds:[esi]
  429492:	js     0x429491
  429494:	dec    ecx
  429495:	dec    DWORD PTR [eax]
  429497:	call   DWORD PTR [eax-0x33797d]
  42949d:	inc    DWORD PTR [eax]
  42949f:	ds (bad) 
  4294a1:	mov    edi,0xff96067e
  4294a6:	or     al,BYTE PTR [eax]
  4294a8:	mov    al,ds:0xff001783
  4294ad:	cmp    edi,0x1
  4294b0:	int3   
  4294b1:	dec    ebx
  4294b2:	int3   
  4294b3:	push   ss
  4294b4:	cld    
  4294b5:	add    BYTE PTR [esp+ecx*8],bl
  4294b8:	and    eax,0xf1ff
  4294bd:	or     esp,0x7c
  4294c0:	int3   
  4294c1:	leave  
  4294c2:	es dec esp
  4294c4:	dec    esp
  4294c5:	int3   
  4294c6:	stos   DWORD PTR es:[edi],eax
  4294c7:	(bad)  
  4294c8:	stc    
  4294c9:	add    al,cl
  4294cb:	inc    DWORD PTR [ebx-0xab0100]
  4294d1:	sbb    BYTE PTR [esi],bl
  4294d3:	sahf   
  4294d4:	icebp  
  4294d5:	(bad)  
  4294d6:	out    dx,eax
  4294d7:	add    BYTE PTR [edx],bl
  4294d9:	call   DWORD PTR [ebp+0x0]
  4294dc:	add    ah,cl
  4294de:	cmp    DWORD PTR [edx-0x1],0x2b
  4294e2:	clc    
  4294e3:	jg     0x429542
  4294e5:	mov    DWORD PTR [eax],ebp
  4294e7:	mov    DWORD PTR [edi-0xff0b01],ebx
  4294ed:	dec    esp
  4294ef:	sbb    al,BYTE PTR [eax]
  4294f1:	es push 0x45
  4294f4:	jno    0x4294f5
  4294f6:	sar    bh,1
  4294f8:	push   DWORD PTR gs:[ecx]
  4294fb:	add    bh,bh
  4294fd:	inc    DWORD PTR [ebx+0x65a0890f]
  429503:	sbb    bl,BYTE PTR [edi-0x28009934]
  429509:	jmp    ecx
  42950b:	inc    DWORD PTR [eax]
  42950d:	add    DWORD PTR [ebx-0x7303ff26],0x6c
  429514:	leave  
  429515:	add    BYTE PTR [edx-0x77],dl
  429518:	inc    ecx
  429519:	add    cl,ch
  42951b:	inc    DWORD PTR [eax]
  42951d:	add    ah,cl
  42951f:	sbb    bh,bh
  429521:	jmp    0xad:0xff48ec63
  429528:	jbe    0x429529
  42952a:	mov    edi,0x890083ff
  42952f:	dec    ebp
  429530:	(bad)  
  429531:	cli    
  429532:	aad    0x6e
  429534:	mov    eax,ds:0x87ffa3ff
  429539:	add    BYTE PTR [edi+edi*8],ch
  42953c:	cmp    edi,0x0
  42953f:	ja     0x429540
  429541:	rol    DWORD PTR [ebx],1
  429543:	inc    edi
  429544:	xchg   esi,eax
  429545:	add    bl,bl
  429547:	add    dl,ch
  429549:	add    bl,al
  42954b:	int3   
  42954c:	(bad)  
  42954d:	(bad)  
  42954e:	call   DWORD PTR [ebp-0x1]
  429551:	aas    
  429552:	ins    DWORD PTR es:[edi],dx
  429553:	enter  0x88,0x1d
  429557:	xor    DWORD PTR [eax+eax*1+0x74],0xffffffcc
  42955c:	inc    DWORD PTR [eax]
  42955e:	jmp    DWORD PTR [edi-0x1]
  429561:	cmp    eax,0xff0dc663
  429566:	cmp    bh,0xfe
  429569:	adc    DWORD PTR [edx-0x7d],0xffffffff
  42956d:	(bad)  
  42956e:	(bad)  
  42956f:	jg     0x4294f4
  429571:	xor    bh,BYTE PTR [edx-0x8ff62a8]
  429577:	inc    ecx
  429579:	int3   
  42957a:	add    eax,0xffcc83ff
  42957f:	enter  0x3089,0x7e
  429583:	addr16 jl 0x429586
  429586:	test   DWORD PTR [eax],0xffa50022
  42958c:	add    bh,bh
  42958e:	call   FWORD PTR [ebx+eax*4+0x42]
  429592:	fadd   QWORD PTR [edi+0x5d]
  429595:	add    BYTE PTR [esi-0x1],ch
  429598:	out    0x89,al
  42959a:	sub    edi,edi
  42959c:	int3   
  42959d:	dec    DWORD PTR [ecx+0x528eff5c]
  4295a3:	retf   0xcc48
  4295a6:	call   0x6241d3ab
  4295ab:	add    DWORD PTR [ebx-0xd20001],0x37
  4295b2:	test   DWORD PTR [edi-0x7ccd33e8],0x920088
  4295bc:	add    bh,bh
  4295be:	add    BYTE PTR [edi+0x0],bl
  4295c1:	sub    BYTE PTR [ebx-0x5b],bh
  4295c4:	out    dx,eax
  4295c5:	call   FWORD PTR [eax-0x1]
  4295c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295c9:	(bad)  
  4295ca:	cli    
  4295cb:	(bad)  
  4295cc:	inc    DWORD PTR [eax]
  4295ce:	mov    DWORD PTR [ebx],edx
  4295d0:	add    ah,bh
  4295d2:	push   esp
  4295d3:	stos   BYTE PTR es:[edi],al
  4295d4:	into   
  4295d5:	call   FWORD PTR ds:0x6eccf5ff
  4295db:	mov    DWORD PTR [eax],eax
  4295dd:	(bad)  
  4295de:	(bad)  
  4295df:	jp     0x4295e0
  4295e1:	cmc    
  4295e2:	in     al,0x85
  4295e4:	jmp    0xed0e9fe8
  4295e9:	add    BYTE PTR [eax],bl
  4295eb:	(bad)  
  4295ec:	(bad)  
  4295ed:	(bad)  
  4295ee:	jmp    FWORD PTR [ecx-0x34]
  4295f1:	pop    edx
  4295f2:	cmp    BYTE PTR [ecx+0x72],0xff
  4295f6:	(bad)  
  4295f7:	inc    DWORD PTR [ebp-0x3f01]
  4295fd:	add    BYTE PTR [eax],al
  4295ff:	sub    al,0xff
  429601:	pop    ds
  429602:	lahf   
  429603:	fidivr WORD PTR [eax+0x0]
  429606:	cmp    bh,bh
  429608:	jns    0x42958d
  42960a:	ins    DWORD PTR es:[edi],dx
  42960b:	add    bh,bh
  42960d:	(bad)  
  42960e:	jmp    FWORD PTR [edx]
  429610:	int3   
  429611:	in     al,0xf1
  429613:	cmc    
  429614:	jg     0x429615
  429616:	jae    0xff8896b3
  42961c:	(bad)  
  42961d:	(bad)  
  42961e:	call   FWORD PTR [esi+0x5b0dfdcc]
  429624:	or     eax,0xfbffb900
  429629:	add    al,ch
  42962b:	add    BYTE PTR [ecx-0x65ff01],cl
  429631:	dec    edi
  429632:	add    DWORD PTR [ebp-0x769d7c0a],ebx
  429638:	mov    eax,ds:0x83001eff
  42963d:	(bad)  
  42963e:	call   DWORD PTR [edi-0x64edf201]
  429644:	(bad)  
  429645:	mov    DWORD PTR [ecx-0x1],eax
  429648:	cdq    
  429649:	mov    ebp,eax
  42964b:	add    bh,bh
  42964d:	add    DWORD PTR [eax],0xffffff9c
  429650:	int3   
  429651:	lds    ebx,FWORD PTR [edi-0x14]
  429654:	or     DWORD PTR [ebx+0xe5ffa5],eax
  42965a:	aaa    
  42965b:	inc    DWORD PTR [ebx-0x76df0100]
  429661:	xor    BYTE PTR [ebx+0x2aff1cc8],ch
  429667:	jmp    DWORD PTR [esi-0x34]
  42966a:	sub    bh,bh
  42966c:	add    bh,bh
  42966e:	add    BYTE PTR [ecx],bh
  429670:	adc    esi,0x1
  429673:	in     al,dx
  429674:	push   edi
  429675:	int3   
  429676:	(bad)  
  429678:	xor    DWORD PTR [ecx+0xffff45],ecx
  42967e:	jmp    edx
  429680:	mov    DWORD PTR [edi+ecx*2+0x54ff193a],ebx
  429687:	add    BYTE PTR ds:0x83e083,cl
  42968d:	dec    DWORD PTR [ecx+0xc0100c6]
  429693:	xor    BYTE PTR [ebx+0x2d0063ff],dl
  429699:	add    BYTE PTR [ebx],ch
  42969b:	(bad)  
  42969c:	inc    DWORD PTR [eax]
  42969e:	push   DWORD PTR [eax+eax*1-0x7bb07f0d]
  4296a5:	call   FWORD PTR [esi]
  4296a7:	int3   
  4296a8:	xor    eax,0xff00f4ff
  4296ad:	(bad)  
  4296ae:	jmp    FWORD PTR [edi]
  4296b0:	call   FWORD PTR [ebp+0x79]
  4296b3:	cld    
  4296b4:	lods   eax,DWORD PTR ds:[esi]
  4296b5:	call   DWORD PTR [esi-0x22ffd801]
  4296bb:	int3   
  4296bc:	int3   
  4296bd:	(bad)  
  4296be:	push   DWORD PTR [eax+eax*1]
  4296c1:	sub    al,0x86
  4296c3:	add    al,0xa4
  4296c5:	inc    edi
  4296c7:	(bad)  
  4296c8:	cmp    eax,DWORD PTR [eax]
  4296ca:	lea    eax,[eax]
  4296cc:	add    BYTE PTR [ebx+0x230059cc],al
  4296d2:	sti    
  4296d3:	test   eax,0x6effba
  4296d8:	mov    al,ds:0xccccb300
  4296dd:	add    BYTE PTR [eax],al
  4296df:	xchg   ecx,eax
  4296e0:	cmp    DWORD PTR [edx+0x7b],0x28
  4296e4:	add    BYTE PTR [eax],al
  4296e6:	imul   edi,edi,0x5ff7c
  4296ec:	inc    DWORD PTR [eax]
  4296ee:	add    BYTE PTR [ebx],bl
  4296f0:	add    BYTE PTR [edi],ah
  4296f2:	dec    edx
  4296f3:	shl    ebx,0x0
  4296f6:	repz add BYTE PTR [edi],dl
  4296f9:	or     esp,0xffffffff
  4296fc:	mov    DWORD PTR [ebx+0x658365ff],eax
  429702:	cmp    esp,ebp
  429704:	jb     0x429705
  429706:	jnp    0x429708
  429708:	sar    bh,1
  42970a:	inc    ecx
  42970b:	mov    edi,edi
  42970d:	inc    DWORD PTR [eax]
  42970f:	jmp    0x429711
  429711:	cmp    DWORD PTR [esi+0x3d],ecx
  429714:	sbb    edi,edi
  429716:	call   0x89ff:0x85ffcd00
  42971d:	add    BYTE PTR [eax],al
  42971f:	xlat   BYTE PTR ds:[ebx]
  429720:	int3   
  429721:	jg     0x42978c
  429723:	out    0x3,eax
  429725:	int3   
  429726:	push   ebx
  429727:	push   DWORD PTR [eax+eax*1-0x45]
  42972b:	dec    esp
  42972d:	or     DWORD PTR [ecx-0x54d5ffe6],0xffffff91
  429734:	and    al,0x0
  429736:	enter  0xbbff,0xff
  42973a:	mov    ecx,esp
  42973c:	(bad)  
  42973d:	(bad)  
  42973e:	jmp    FWORD PTR [ebx]
  429740:	add    BYTE PTR [edx],ch
  429742:	jbe    0x429747
  429744:	push   cs
  429745:	inc    DWORD PTR [esi+0x7cccffff]
  42974b:	dec    DWORD PTR [ecx+0x37ff83]
  429751:	inc    edx
  429752:	mov    ?,WORD PTR [ebp*4+0x648976ff]
  429759:	inc    DWORD PTR [eax+eax*1]
  42975c:	add    BYTE PTR [eax],al
  42975e:	cmp    ecx,0x0
  429761:	xor    dh,BYTE PTR [esi+0x8]
  429764:	mov    al,0xff
  429766:	mov    edi,0xe500d483
  42976b:	inc    DWORD PTR [eax]
  42976d:	(bad)  
  42976e:	dec    DWORD PTR [edi-0x1]
  429771:	leave  
  429772:	push   edi
  429773:	xchg   esi,eax
  429774:	xchg   edi,eax
  429775:	dec    esp
  429777:	inc    DWORD PTR [esi+0x0]
  42977a:	mov    ch,0x0
  42977c:	add    BYTE PTR [ecx+0x21cc3600],cl
  429782:	jb     0x42976f
  429784:	enter  0x7983,0xff
  429788:	mov    esi,0xffc0ff
  42978d:	(bad)  
  42978e:	(bad)  
  42978f:	jnp    0x429790
  429791:	inc    esp
  429792:	mov    edx,0xd2ffefa8
  429797:	inc    DWORD PTR [edx-0x7c00ae00]
  42979d:	cmp    edi,0x1b
  4297a0:	call   edx
  4297a2:	(bad)  
  4297a3:	std    
  4297a4:	mov    edi,0xefffcdff
  4297a9:	add    BYTE PTR [edi+edi*8+0x0],dh
  4297ad:	cmp    edi,0xffffffc4
  4297b0:	(bad)  
  4297b1:	fisubr DWORD PTR [ecx-0x2800ac8f]
  4297b7:	add    dh,ah
  4297b9:	int3   
  4297ba:	daa    
  4297bb:	inc    DWORD PTR [ebx-0x260000]
  4297c1:	xor    edi,DWORD PTR [esi]
  4297c3:	mov    WORD PTR [edx],es
  4297c5:	(bad)  
  4297c6:	mov    esi,0x410061cc
  4297cb:	cmp    edi,0xffffffff
  4297ce:	(bad)  
  4297cf:	in     eax,dx
  4297d0:	jmp    FWORD PTR [edx+0x2f5f51]
  4297d6:	aam    0xff
  4297d8:	add    DWORD PTR [eax],eax
  4297da:	pop    ebp
  4297db:	add    ah,cl
  4297dd:	(bad)  
  4297de:	(bad)  
  4297df:	cld    
  4297e0:	xor    DWORD PTR [ecx-0x74f267],0x14
  4297e7:	inc    esp
  4297e9:	add    BYTE PTR [edi-0x7c00ff01],ch
  4297ef:	jl     0x4297f0
  4297f1:	arpl   WORD PTR [ebp+0x4ecc799f],bp
  4297f7:	push   DWORD PTR [edi]
  4297f9:	inc    DWORD PTR [ebp+0x830000]
  4297ff:	hlt    
  429800:	xor    DWORD PTR ds:0xff28bd28,0x3c
  429807:	int3   
  429808:	repnz inc esi
  42980b:	add    bh,bh
  42980d:	dec    DWORD PTR [ecx-0x2df1ff12]
  429813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429814:	popf   
  429815:	(bad)  
  429816:	cli    
  429817:	or     DWORD PTR [edi-0x33ff6600],0xffffffff
  42981e:	add    ch,dh
  429820:	int3   
  429821:	shl    DWORD PTR [eax+ecx*4+0x3e],cl
  429825:	add    ch,bl
  429827:	add    BYTE PTR ds:0xffcc5c00,dl
  42982d:	(bad)  
  42982e:	push   edi
  429830:	add    BYTE PTR [ecx-0x7c6e423e],bl
  429836:	mov    esi,0x1600d0ff
  42983b:	add    BYTE PTR [eax],al
  42983d:	add    bh,bh
  42983f:	cld    
  429840:	int3   
  429841:	call   0xb2:0x8316398c
  429848:	pop    edi
  429849:	inc    DWORD PTR [eax-0x1]
  42984c:	inc    DWORD PTR [ebx-0x2e00c501]
  429852:	xchg   bh,ah
  429854:	add    bh,bh
  429856:	xchg   esi,eax
  429857:	mov    ebx,eax
  429859:	push   DWORD PTR [edi-0x337d]
  42985f:	jmp    0x429860
  429861:	jae    0x42986c
  429863:	pushf  
  429864:	sub    eax,0xd1cc5689
  429869:	jmp    esp
  42986b:	cmp    edi,0x0
  42986e:	add    al,al
  429870:	add    BYTE PTR [eax-0x9a72f0],ch
  429876:	add    eax,0x8983de89
  42987b:	add    bh,bh
  42987d:	add    bh,bh
  42987f:	(bad)  
  429881:	in     eax,dx
  429882:	sar    BYTE PTR [edi-0xc7ff0e],cl
  429888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429889:	cmp    edi,0x0
  42988c:	add    BYTE PTR [ebx-0x77002077],al
  429892:	mov    dl,0xa2
  429894:	je     0x429895
  429896:	jo     0x429898
  429898:	xchg   ebx,eax
  429899:	add    bh,bl
  42989b:	mov    DWORD PTR [ebx+0xb0ccff],eax
  4298a1:	cmc    
  4298a2:	xor    al,0xef
  4298a4:	sbb    edi,edi
  4298a6:	and    DWORD PTR [eax],eax
  4298a8:	adc    eax,DWORD PTR [ebx-0x7c002c]
  4298ae:	call   DWORD PTR [edi-0x716e5101]
  4298b4:	fwait
  4298b5:	add    ah,cl
  4298b7:	(bad)  
  4298b8:	jns    0x4298b9
  4298ba:	std    
  4298bb:	inc    DWORD PTR [ebx-0x737d00]
  4298c1:	ins    BYTE PTR es:[edi],dx
  4298c2:	inc    esi
  4298c3:	sub    DWORD PTR [ebp+0x2ffae00],0xff26ff
  4298cd:	add    BYTE PTR [ebx+0x3416ff5f],al
  4298d3:	pop    ss
  4298d4:	or     al,BYTE PTR [eax]
  4298d6:	aad    0xff
  4298d8:	in     al,dx
  4298d9:	call   FWORD PTR [edx]
  4298db:	add    bh,bh
  4298dd:	(bad)  
  4298de:	push   DWORD PTR [edx-0x1]
  4298e1:	xchg   DWORD PTR [eax+0x5ff360f],ebp
  4298e7:	call   FWORD PTR [edx]
  4298e9:	jmp    DWORD PTR [eax]
  4298eb:	add    bh,bh
  4298ed:	(bad)  
  4298ee:	jmp    FWORD PTR [esi]
  4298f0:	(bad)  
  4298f1:	jle    0x42989b
  4298f3:	test   BYTE PTR [ebx-0x34],dl
  4298f6:	test   eax,0xb400a2ff
  4298fb:	int3   
  4298fc:	inc    DWORD PTR [eax]
  4298fe:	(bad)  
  4298ff:	sti    
  429900:	call   eax
  429902:	out    0xda,al
  429904:	ret    0xf2cc
  429907:	(bad)  
  429908:	cmp    cl,BYTE PTR [ecx-0x7c000005]
  42990e:	xor    DWORD PTR [edi],0xffffffff
  429911:	push   0xff9b3f44
  429916:	mov    dh,0xff
  429918:	popf   
  429919:	(bad)  
  42991a:	fdivr  st,st(7)
  42991c:	mov    edi,edi
  42991e:	call   FWORD PTR [eax+eax*1+0x40]
  429922:	pop    eax
  429923:	adc    DWORD PTR [edx+0x290038ff],0x0
  42992a:	lods   eax,DWORD PTR ds:[esi]
  42992b:	add    BYTE PTR [ebx+0xf5ff00],al
  429931:	cmp    BYTE PTR [ebp+0x21834138],dh
  429937:	xor    ebx,0xffffffff
  42993a:	std    
  42993b:	add    bh,bh
  42993d:	inc    DWORD PTR [ebx-0x5b94002d]
  429943:	fwait
  429944:	inc    esi
  429945:	call   FWORD PTR [edi+edi*8]
  429948:	inc    edi
  429949:	or     DWORD PTR [esp+ecx*8],0xffffffff
  42994d:	cmp    edi,0xffffffe6
  429950:	xor    DWORD PTR [ecx+0x67],0xffffff8b
  429954:	push   edx
  429955:	(bad)  
  429956:	fmulp  st(4),st
  429958:	sar    edi,1
  42995a:	stos   DWORD PTR es:[edi],eax
  42995b:	cmp    edi,0xffffffff
  42995e:	add    BYTE PTR [edi+0x0],bl
  429961:	stos   BYTE PTR es:[edi],al
  429962:	sub    BYTE PTR [ecx+0x8b0040],dl
  429968:	scas   eax,DWORD PTR es:[edi]
  429969:	int3   
  42996a:	or     eax,0xffff83ff
  42996f:	fild   DWORD PTR [eax]
  429971:	mov    dh,0xa
  429973:	daa    
  429974:	lds    eax,FWORD PTR [eax]
  429976:	lahf   
  429977:	int3   
  429978:	rol    BYTE PTR [ebx-0xff7cb1],1
  42997e:	jmp    DWORD PTR [edx-0x71789f01]
  429984:	icebp  
  429985:	push   DWORD PTR [esi]
  429987:	inc    DWORD PTR [ecx+0x0]
  42998a:	cmp    bh,bh
  42998c:	add    DWORD PTR [eax],0xffffffff
  42998f:	icebp  
  429990:	sbb    DWORD PTR ds:0xffbfe6ce,0x73
  429997:	inc    DWORD PTR [edx]
  429999:	push   DWORD PTR [eax-0x33330034]
  42999f:	dec    eax
  4299a0:	call   esi
  4299a2:	imul   DWORD PTR [ecx+0x52]
  4299a5:	adc    DWORD PTR [ebx+0x0],0x62
  4299a9:	call   FWORD PTR [edx-0x1]
  4299ac:	add    BYTE PTR [ebx-0x54008d01],al
  4299b2:	je     0x4299ad
  4299b4:	fdiv   st(7),st
  4299b6:	jg     0x4299b8
  4299b8:	out    0xff,eax
  4299ba:	je     0x4299bb
  4299bc:	dec    DWORD PTR [ecx-0x4002300]
  4299c2:	nop
  4299c3:	mov    al,ch
  4299c5:	inc    esp
  4299c7:	add    BYTE PTR [esp+ecx*8-0x7c7c8f],ah
  4299ce:	int3   
  4299cf:	ins    DWORD PTR es:[edi],dx
  4299d0:	sbb    DWORD PTR ds:0xff9496d9,0x38
  4299d7:	int3   
  4299d8:	aaa    
  4299d9:	jmp    FWORD PTR [edx]
  4299db:	add    bh,bh
  4299dd:	add    DWORD PTR [eax],0x4a
  4299e0:	mov    DWORD PTR [ebx-0x3f67c2],eax
  4299e6:	repz int3 
  4299e8:	sbb    al,BYTE PTR [eax]
  4299ea:	mov    al,ds:0x898300
  4299ef:	je     0x4299f1
  4299f1:	pop    ebx
  4299f2:	pop    es
  4299f3:	mov    dl,0x58
  4299f5:	add    BYTE PTR [edx-0x76760701],cl
  4299fb:	inc    DWORD PTR [ebx+0xdcccff]
  429a01:	es loop 0x429a51
  429a04:	pop    esi
  429a05:	call   FWORD PTR [ebx]
  429a07:	int3   
  429a08:	or     al,0x0
  429a0a:	ja     0x429a0b
  429a0c:	inc    DWORD PTR [eax]
  429a0e:	jmp    DWORD PTR [esi]
  429a10:	int3   
  429a11:	xor    dh,BYTE PTR [edi+ebp*4-0x33a100fc]
  429a18:	xchg   DWORD PTR [eax],eax
  429a1a:	xchg   ecx,eax
  429a1b:	add    BYTE PTR [eax],al
  429a1d:	add    ah,cl
  429a1f:	dec    ebx
  429a20:	int3   
  429a21:	rcl    edx,cl
  429a23:	les    eax,FWORD PTR [ebx+0x33cc84ff]
  429a29:	cmp    DWORD PTR [edi+edi*8-0x7d],0xffffffcc
  429a2e:	call   DWORD PTR ds:0x4e959700
  429a34:	fild   WORD PTR [eax]
  429a36:	push   ds
  429a37:	push   DWORD PTR [ebx+0x0]
  429a3a:	xor    al,0xcc
  429a3c:	inc    DWORD PTR [ebx-0x7affa67d]
  429a42:	xchg   ecx,eax
  429a43:	mov    ecx,0xd8ff66
  429a48:	dec    DWORD PTR [bp+di]
  429a4b:	dec    esp
  429a4d:	inc    DWORD PTR [eax]
  429a4f:	xor    bh,bh
  429a51:	ds inc esi
  429a53:	mov    ds:0xff8dff4d,al
  429a58:	call   0x419e29
  429a5d:	inc    DWORD PTR [eax]
  429a5f:	fwait
  429a60:	inc    DWORD PTR [edi]
  429a62:	and    bh,BYTE PTR [esp+edi*2]
  429a65:	dec    ebx
  429a67:	(bad)  
  429a68:	out    dx,eax
  429a69:	int3   
  429a6a:	int    0xff
  429a6c:	inc    DWORD PTR [ebx-0x6676f101]
  429a72:	mov    edi,0x91fff447
  429a77:	int3   
  429a78:	adc    edi,edi
  429a7a:	sbb    eax,0xffff0000
  429a7f:	or     DWORD PTR [ebx+0x1a0a8231],eax
  429a85:	xor    DWORD PTR [ebx+eax*4-0xc4ffac],0x0
  429a8d:	(bad)  
  429a8e:	jmp    DWORD PTR [edx-0x1]
  429a91:	and    bh,BYTE PTR ds:0x7cff8297
  429a97:	or     ebp,0xffffffff
  429a9a:	inc    eax
  429a9b:	add    bh,bh
  429a9d:	add    bh,bh
  429a9f:	cmc    
  429aa0:	dec    esi
  429aa2:	sbb    BYTE PTR ds:0xfff9ff92,bh
  429aa8:	inc    eax
  429aa9:	call   FWORD PTR [ebx]
  429aab:	inc    DWORD PTR [eax]
  429aad:	(bad)  
  429aae:	call   FWORD PTR [edx-0x30876201]
  429ab4:	nop
  429ab5:	add    BYTE PTR [ebx],dh
  429ab7:	jmp    esp
  429ab9:	call   DWORD PTR [esi]
  429abb:	(bad)  
  429abc:	inc    DWORD PTR [ebx-0x62ff6a01]
  429ac2:	jg     0x429aad
  429ac4:	xchg   DWORD PTR [eax],eax
  429ac6:	inc    edx
  429ac7:	jmp    FWORD PTR [edi]
  429ac9:	(bad)  
  429aca:	jmp    0x429acb
  429acc:	add    bh,bh
  429ace:	add    BYTE PTR [esi],cl
  429ad0:	add    BYTE PTR [edi+0x79],ah
  429ad3:	(bad)  
  429ad4:	cli    
  429ad5:	(bad)  
  429ad6:	fcos   
  429ad8:	mov    eax,0xff009300
  429add:	add    bh,bh
  429adf:	push   edi
  429ae0:	push   DWORD PTR [edi+eiz*1-0xd765c85]
  429ae7:	(bad)  
  429ae8:	jmp    0xffc610ec
  429aed:	inc    DWORD PTR [eax]
  429aef:	mov    ds:0x9b7e3aff,eax
  429af4:	pop    ebx
  429af5:	(bad)  
  429af6:	cli    
  429af7:	add    BYTE PTR [ebp-0x34],ah
  429afa:	xor    bh,bh
  429afc:	add    bh,bh
  429afe:	mov    DWORD PTR [ebp-0x34],edx
  429b01:	mov    edx,eax
  429b03:	dec    esi
  429b04:	or     ah,0x66
  429b07:	mov    ecx,edi
  429b09:	call   DWORD PTR [ecx+ecx*4]
  429b0c:	inc    DWORD PTR [ebx+0x5aff1d83]
  429b12:	leave  
  429b13:	loopne 0x429ab4
  429b15:	(bad)  
  429b16:	cmp    eax,0xedff1300
  429b1b:	add    BYTE PTR [eax],al
  429b1d:	inc    DWORD PTR [eax]
  429b1f:	and    edi,edi
  429b21:	add    cl,cl
  429b23:	scas   eax,DWORD PTR es:[edi]
  429b24:	je     0x429b26
  429b26:	outs   dx,DWORD PTR ds:[esi]
  429b27:	call   FWORD PTR [ebp+0x837a00]
  429b2d:	add    bh,bh
  429b2f:	das    
  429b30:	adc    ebp,0x51
  429b33:	and    eax,0xffde00a6
  429b38:	push   edi
  429b39:	inc    DWORD PTR [edi+edi*8]
  429b3c:	add    BYTE PTR [ebx-0x54000400],al
  429b42:	(bad)  
  429b43:	sub    dl,bl
  429b45:	add    BYTE PTR [ebx],ch
  429b47:	add    bl,ah
  429b49:	add    BYTE PTR [edi+edi*8-0x1],cl
  429b4d:	int3   
  429b4e:	call   FWORD PTR [ebp-0x7d]
  429b51:	mov    bl,0xcc
  429b53:	sbb    al,0x8e
  429b55:	push   DWORD PTR [eax-0x32ff7f01]
  429b5b:	add    bh,bh
  429b5d:	add    bh,bh
  429b5f:	add    al,BYTE PTR [eax]
  429b61:	jmp    0x350537
  429b66:	cdq    
  429b67:	(bad)  
  429b68:	aas    
  429b69:	mov    ebp,eax
  429b6b:	dec    DWORD PTR [ecx+0xe00000]
  429b71:	(bad)  
  429b72:	hlt    
  429b73:	fld    st(7)
  429b75:	inc    DWORD PTR [edi]
  429b77:	call   DWORD PTR [edi+edi*8-0x70]
  429b7b:	dec    DWORD PTR [ecx-0x33820001]
  429b81:	or     BYTE PTR [ecx-0x75],ch
  429b84:	pushf  
  429b85:	add    al,dl
  429b87:	push   DWORD PTR [ebp-0x1]
  429b8a:	rol    BYTE PTR [eax],cl
  429b8c:	int3   
  429b8d:	add    BYTE PTR [ecx+0x7444ff43],cl
  429b93:	xchg   esp,eax
  429b94:	rol    BYTE PTR [eax],0x7
  429b97:	inc    ecx
  429b99:	(bad)  
  429b9a:	cmp    al,0xff
  429b9c:	(bad)  
  429b9d:	inc    DWORD PTR [eax]
  429b9f:	pusha  
  429ba0:	add    BYTE PTR [edi-0x7c14b243],bh
  429ba6:	xchg   ebp,eax
  429ba7:	call   DWORD PTR [edx-0x1]
  429baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429bab:	or     esp,0xffffff83
  429bae:	add    BYTE PTR [eax+eax*1+0xa735a85],ah
  429bb5:	(bad)  
  429bb6:	fld    QWORD PTR [eax]
  429bb8:	int3   
  429bb9:	add    BYTE PTR [ebx],al
  429bbb:	inc    DWORD PTR [eax]
  429bbd:	add    BYTE PTR [ecx-0x375eff9f],cl
  429bc3:	stc    
  429bc4:	js     0x429b49
  429bc6:	das    
  429bc7:	mov    DWORD PTR [edx+0xfff4ff],esi
  429bcd:	(bad)  
  429bce:	jmp    FWORD PTR [ebp+0x0]
  429bd1:	push   es
  429bd2:	sub    BYTE PTR [edx+eax*2-0x1aff9501],ah
  429bd9:	mov    DWORD PTR [ebp-0x7600007d],edi
  429bdf:	repnz and DWORD PTR [edx],0xffffffc1
  429be3:	test   eax,0xff950043
  429be8:	sahf   
  429be9:	add    DWORD PTR [eax-0x1],0xffffffff
  429bed:	add    bh,bh
  429bef:	in     eax,0xff
  429bf1:	push   eax
  429bf2:	imul   esp,edx,0xa3ff0f
  429bf8:	xor    al,0xff
  429bfa:	xchg   edx,eax
  429bfb:	(bad)  
  429bfc:	(bad)  
  429bfd:	inc    DWORD PTR [ebx-0x1a79ff26]
  429c03:	jbe    0x429be8
  429c05:	add    BYTE PTR ds:0xe0000cc,dh
  429c0b:	int3   
  429c0c:	add    BYTE PTR [eax],al
  429c0e:	jmp    FWORD PTR [edx]
  429c10:	call   edi
  429c12:	mov    ds:0x9900b186,eax
  429c17:	(bad)  
  429c18:	fiadd  WORD PTR [eax]
  429c1a:	and    eax,0x890000
  429c1f:	push   ebp
  429c20:	mov    DWORD PTR [esi-0x8],ebp
  429c23:	xor    cl,BYTE PTR [edi+edi*8-0x50]
  429c27:	jmp    FWORD PTR [edi+edi*8-0x14]
  429c2b:	inc    DWORD PTR [eax]
  429c2d:	dec    esp
  429c2f:	ud0    ebx,DWORD PTR [esi+0x51]
  429c33:	add    BYTE PTR [esi-0x1fff0f00],bh
  429c39:	jmp    DWORD PTR [eax+0x0]
  429c3c:	add    bh,bh
  429c3e:	mov    DWORD PTR [esi],edx
  429c40:	add    BYTE PTR [ebp+0x6a7ba2],al
  429c46:	das    
  429c47:	(bad)  
  429c48:	mov    edx,0xffff77ff
  429c4d:	(bad)  
  429c4e:	jmp    FWORD PTR [edi+edi*8]
  429c51:	jo     0x429bd6
  429c53:	(bad)  
  429c54:	mov    ah,0xff
  429c56:	or     eax,DWORD PTR [eax]
  429c58:	sar    edi,1
  429c5a:	push   es
  429c5b:	int3   
  429c5c:	add    BYTE PTR [eax],al
  429c5e:	add    BYTE PTR [edi+edi*8-0x3c5d9143],bl
  429c65:	call   FWORD PTR [edx]
  429c67:	(bad)  
  429c68:	fisttp DWORD PTR [ecx-0xa2]
  429c6e:	jmp    FWORD PTR [edi+0x5eccaeff]
  429c74:	ror    BYTE PTR [ecx-0x7c777c4e],1
  429c7a:	sar    edi,cl
  429c7c:	add    DWORD PTR [eax],0xffffffff
  429c7f:	dec    ebx
  429c80:	(bad)  
  429c81:	ds (bad) 
  429c83:	bound  esi,QWORD PTR [eax-0x1]
  429c86:	int3   
  429c87:	add    BYTE PTR [eax+eax*1-0x33ff004d],dh
  429c8e:	dec    DWORD PTR [ebx-0x6fcb8d00]
  429c94:	xchg   edx,eax
  429c95:	add    dh,bh
  429c97:	jmp    FWORD PTR [ecx]
  429c99:	jmp    FWORD PTR [edx-0x77]
  429c9c:	add    ah,cl
  429c9e:	call   ebx
  429ca0:	mov    DWORD PTR [eax-0x22607c],ebx
  429ca6:	call   0x83ff:0x16ff46ff
  429cad:	dec    esp
  429caf:	pushf  
  429cb0:	int3   
  429cb1:	pushf  
  429cb2:	jns    0x429c34
  429cb4:	cmp    bh,0xee
  429cb7:	push   DWORD PTR [eax+0xffa9ff]
  429cbd:	(bad)  
  429cbe:	call   DWORD PTR ds:0x811c0100
  429cc4:	(bad)  
  429cc5:	inc    DWORD PTR [ebx-0x1cffe101]
  429ccb:	(bad)  
  429ccc:	inc    DWORD PTR [ebx-0x5000b677]
  429cd2:	or     eax,esi
  429cd4:	mov    esp,0x55006bcc
  429cd9:	jmp    esp
  429cdb:	add    bh,bh
  429cdd:	inc    DWORD PTR [eax]
  429cdf:	mov    DWORD PTR [eax],0x97c6241d
  429ce5:	add    ch,dh
  429ce7:	inc    edx
  429ce9:	add    BYTE PTR [eax+0xcc],dh
  429cef:	popa   
  429cf0:	add    BYTE PTR [edi+0x77],bh
  429cf3:	into   
  429cf4:	fadd   QWORD PTR [ebx-0xb5ff75]
  429cfa:	or     bh,bh
  429cfc:	inc    DWORD PTR [eax]
  429cfe:	jmp    FWORD PTR [edi+edi*8+0x5150990e]
  429d05:	int3   
  429d06:	retf   
  429d07:	add    BYTE PTR ds:0xcc8315ff,ah
  429d0d:	add    bh,bh
  429d0f:	mov    ds:0xddac3f00,al
  429d14:	or     eax,0xbbffe783
  429d19:	mov    DWORD PTR [ebx],ebp
  429d1b:	add    BYTE PTR [ecx-0x33897601],cl
  429d21:	pop    ebp
  429d22:	and    al,0x7d
  429d24:	gs (bad) 
  429d26:	(bad)  
  429d28:	adc    WORD PTR [edx],0xffff
  429d2c:	add    DWORD PTR [eax],0xffffffff
  429d2f:	lds    eax,FWORD PTR [ebx+0x7d929cfc]
  429d35:	add    BYTE PTR [ebp+0x1bff5bff],dh
  429d3b:	add    BYTE PTR [eax],al
  429d3d:	add    BYTE PTR [eax],al
  429d3f:	or     eax,0xd8131bff
  429d44:	inc    edx
  429d45:	add    BYTE PTR [eax-0x34],dh
  429d48:	sbb    eax,0xff89ff
  429d4d:	add    bh,bh
  429d4f:	ds sbb eax,0x75
  429d53:	cld    
  429d54:	stc    
  429d55:	push   eax
  429d57:	int3   
  429d58:	aam    0xff
  429d5a:	mov    esp,0xff00ff00
  429d5f:	jg     0x429d61
  429d61:	enter  0x994b,0x46
  429d65:	(bad)  
  429d66:	sti    
  429d67:	and    DWORD PTR [eax-0x7d],0xffffffe3
  429d6b:	add    bh,bh
  429d6d:	add    bh,bh
  429d6f:	stos   BYTE PTR es:[edi],al
  429d70:	add    BYTE PTR [ecx-0xf48646],bh
  429d76:	mov    esi,0xb6896800
  429d7b:	(bad)  
  429d7c:	inc    DWORD PTR [ebx+0x7d00c089]
  429d82:	cmp    eax,DWORD PTR [ebp-0x93001b]
  429d88:	sar    edi,cl
  429d8a:	scas   al,BYTE PTR es:[edi]
  429d8b:	inc    DWORD PTR [eax]
  429d8d:	inc    DWORD PTR [ebx+0x18f683eb]
  429d93:	mov    eax,0xcc3bffe6
  429d98:	rol    BYTE PTR [ebx-0x33ff17],cl
  429d9e:	call   eax
  429da0:	add    BYTE PTR [ebx-0xe],al
  429da3:	stos   DWORD PTR es:[edi],eax
  429da4:	add    BYTE PTR [ebx-0x3effe6],0xa1
  429dab:	inc    DWORD PTR [eax]
  429dad:	add    BYTE PTR [ebx+0x4f5600e9],al
  429db3:	mov    eax,ds:0x95fffe
  429db8:	and    al,BYTE PTR [eax]
  429dba:	repz int3 
  429dbc:	inc    DWORD PTR [eax]
  429dbe:	add    BYTE PTR [esi-0x128abc01],bh
  429dc4:	xlat   BYTE PTR ds:[ebx]
  429dc5:	add    ch,ch
  429dc7:	adc    DWORD PTR [ebp-0x34],0xffffff97
  429dcb:	add    bh,bh
  429dcd:	add    bh,bh
  429dcf:	pop    es
  429dd0:	jmp    FWORD PTR [ebp-0x337670bf]
  429dd6:	ja     0x429dd7
  429dd8:	test   DWORD PTR [ebx-0x7c3360],eax
  429dde:	jmp    FWORD PTR [esi-0x1]
  429de1:	test   al,0xe8
  429de3:	jbe    0x429df4
  429de5:	add    BYTE PTR [esi],bh
  429de7:	push   DWORD PTR [edi+edi*8-0x760033b2]
  429dee:	add    DWORD PTR [edi+edi*8+0x46],0xffffff98
  429df3:	mov    ch,0xc5
  429df5:	xor    DWORD PTR [ecx-0x78002301],0xffffff83
  429dfc:	int3   
  429dfd:	add    bh,bh
  429dff:	cmp    bh,0x10
  429e02:	div    cl
  429e04:	clc    
  429e05:	add    bl,dh
  429e07:	call   DWORD PTR [edx]
  429e09:	int3   
  429e0a:	cmp    edi,0x0
  429e0d:	add    BYTE PTR [eax],al
  429e0f:	xchg   ebx,eax
  429e10:	sub    ebx,0xffffffa4
  429e13:	loopne 0x429e27
  429e15:	mov    DWORD PTR [edx-0x1],edi
  429e18:	mov    bh,bh
  429e1a:	xchg   ebp,eax
  429e1b:	cmp    edi,0xffffff89
  429e1e:	and    DWORD PTR [edx],0xffffff83
  429e21:	sub    edi,eax
  429e23:	scas   eax,DWORD PTR es:[edi]
  429e24:	mov    eax,0x7fffab83
  429e29:	push   DWORD PTR [eax-0x76007d00]
  429e2f:	dec    ecx
  429e30:	jmp    DWORD PTR [esi+edi*8]
  429e33:	fisubr WORD PTR [ebx]
  429e35:	call   DWORD PTR [ecx-0x7300f777]
  429e3b:	add    BYTE PTR [ebx-0x76be0001],al
  429e41:	or     DWORD PTR [edx+0x14],eax
  429e44:	sbb    edi,edi
  429e46:	push   ecx
  429e47:	push   DWORD PTR [esi-0xff617d]
  429e4d:	add    BYTE PTR [ebx-0x1b27ffe4],al
  429e53:	sbb    eax,0x83b3005e
  429e58:	dec    esi
  429e59:	call   DWORD PTR [ecx-0x34]
  429e5c:	add    BYTE PTR [eax],al
  429e5e:	add    BYTE PTR [edx+0x4d971100],dh
  429e64:	mov    ds:0x1eff2aff,al
  429e69:	add    BYTE PTR [ecx-0x34],bh
  429e6c:	add    bh,bh
  429e6e:	inc    DWORD PTR [ecx+ecx*4+0x57]
  429e72:	inc    ebp
  429e73:	jge    0x429e5b
  429e75:	call   FWORD PTR [ecx+0x53ff4e00]
  429e7b:	inc    DWORD PTR [eax]
  429e7d:	cmp    edi,0xffffff93
  429e80:	call   DWORD PTR [ebp+eax*1-0x1e]
  429e84:	inc    esi
  429e85:	(bad)  
  429e86:	jns    0x429e87
  429e88:	lock (bad) 
  429e8a:	sti    
  429e8b:	add    bh,bh
  429e8d:	(bad)  
  429e8e:	dec    ebx
  429e90:	jmp    ebx
  429e92:	or     DWORD PTR [esi],ecx
  429e94:	iret   
  429e95:	call   DWORD PTR [edx]
  429e97:	jmp    DWORD PTR [edi+edi*8-0x33ff00d8]
  429e9e:	add    cl,dl
  429ea0:	dec    DWORD PTR [ebp-0x7c]
  429ea3:	mov    ds:0xffdecc9b,eax
  429ea8:	lods   al,BYTE PTR ds:[esi]
  429ea9:	dec    ebx
  429eab:	inc    DWORD PTR [ebx-0x7c940001]
  429eb1:	lea    esp,[ecx*1-0xcffb0]
  429eb8:	xchg   esp,eax
  429eb9:	call   ebx
  429ebb:	(bad)  
  429ebc:	(bad)  
  429ebd:	dec    esp
  429ebf:	push   edx
  429ec0:	inc    DWORD PTR ds:0x83f9600a
  429ec6:	in     eax,0xff
  429ec8:	out    0x0,al
  429eca:	add    edi,edi
  429ecc:	inc    DWORD PTR [eax]
  429ece:	add    ecx,0xffffffff
  429ed1:	sub    bl,dh
  429ed3:	mov    ds:0xacffc9,eax
  429ed8:	add    al,BYTE PTR [ebx+0x898913]
  429ede:	add    cl,bh
  429ee0:	add    BYTE PTR ds:0xcb4fce,ah
  429ee6:	stc    
  429ee7:	adc    eax,0xffffff83
  429eea:	or     al,0xff
  429eec:	inc    DWORD PTR [eax]
  429eee:	adc    DWORD PTR [edi+edi*8-0x79],0xffffffcf
  429ef3:	and    bh,dl
  429ef5:	add    BYTE PTR [ebx],al
  429ef7:	add    DWORD PTR [ecx-0x77],0x57
  429efb:	(bad)  
  429efc:	dec    esp
  429efe:	(bad)  
  429eff:	in     al,dx
  429f00:	inc    DWORD PTR [edx-0x37]
  429f03:	nop
  429f04:	mov    edx,0x79005b00
  429f09:	adc    eax,0xffffffff
  429f0c:	inc    DWORD PTR [eax]
  429f0e:	call   DWORD PTR [eax+eax*1+0x1a]
  429f12:	js     0x429f54
  429f14:	adc    al,BYTE PTR [eax]
  429f16:	retf   0x7483
  429f19:	mov    DWORD PTR [edi+edi*8+0x2dffcc83],eax
  429f20:	dec    DWORD PTR ds:0xfff7e47c
  429f26:	scas   eax,DWORD PTR es:[edi]
  429f27:	jmp    DWORD PTR [eax+0xfff3ff]
  429f2d:	add    bh,bh
  429f2f:	fwait
  429f30:	dec    DWORD PTR ds:0xffe327cf
  429f36:	and    BYTE PTR [ebx-0x3bff07],al
  429f3c:	(bad)  
  429f3d:	(bad)  
  429f3e:	call   DWORD PTR [ebx-0x1]
  429f41:	aaa    
  429f42:	ins    DWORD PTR es:[edi],dx
  429f43:	and    ecx,esi
  429f45:	adc    DWORD PTR [ebx-0x7a006101],0x0
  429f4c:	int3   
  429f4d:	(bad)  
  429f4e:	inc    DWORD PTR [ebp-0x1]
  429f51:	mov    DWORD PTR [edx+eiz*1-0x36ff40],esi
  429f58:	and    eax,0xffdf00
  429f5d:	cmp    edi,0x3b
  429f60:	call   DWORD PTR [eax]
  429f62:	rol    DWORD PTR [ecx],1
  429f64:	push   ds
  429f65:	add    BYTE PTR [edi],dh
  429f67:	sbb    DWORD PTR [edx-0x3300e900],0xffffff83
  429f6e:	add    BYTE PTR [edi+0x39f129ff],ah
  429f74:	and    edi,edi
  429f76:	mov    bl,0xff
  429f78:	aas    
  429f79:	xor    DWORD PTR [eax-0x7d],0x0
  429f7d:	cmp    edi,0xffffffd7
  429f80:	and    eax,0x2
  429f83:	sahf   
  429f84:	cs dec esp
  429f87:	add    cl,bl
  429f89:	dec    DWORD PTR [ecx+0x0]
  429f8c:	int3   
  429f8d:	dec    esp
  429f8f:	sub    edi,edi
  429f91:	clc    
  429f92:	nop
  429f93:	repz xchg edx,eax
  429f95:	add    BYTE PTR [ebp-0x58008a00],ah
  429f9b:	inc    DWORD PTR [ebx-0x7c1aff01]
  429fa1:	dec    eax
  429fa2:	push   es
  429fa3:	jb     0x429fe7
  429fa5:	call   FWORD PTR [ebx-0x1]
  429fa8:	mov    al,ds:0x8380ff
  429fad:	(bad)  
  429fae:	push   DWORD PTR [esi+0x0]
  429fb1:	cwde   
  429fb2:	mov    ebx,0x7c83651b
  429fb7:	add    dl,ch
  429fb9:	add    BYTE PTR [ecx-0x1],ch
  429fbc:	(bad)  
  429fbd:	inc    DWORD PTR [eax]
  429fbf:	mov    DWORD PTR [eax],eax
  429fc1:	xchg   edi,eax
  429fc2:	mov    ah,0x57
  429fc4:	mov    BYTE PTR [eax],0x17
  429fc7:	add    BYTE PTR [ecx-0x1],cl
  429fca:	jns    0x429fcc
  429fcc:	int3   
  429fcd:	or     esp,0x15
  429fd0:	add    cl,ah
  429fd2:	(bad)  
  429fd3:	xor    al,0x45
  429fd5:	add    dh,dl
  429fd7:	call   DWORD PTR ds:0xff83d8ff
  429fdd:	inc    DWORD PTR [eax]
  429fdf:	xor    edi,edi
  429fe1:	in     eax,0x84
  429fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fe4:	pop    edi
  429fe5:	int3   
  429fe6:	sbb    BYTE PTR [eax],al
  429fe8:	inc    edi
  429fe9:	add    bl,ch
  429feb:	inc    DWORD PTR [eax]
  429fed:	add    BYTE PTR [eax],al
  429fef:	(bad)  
  429ff0:	jmp    DWORD PTR [edi+ebx*2+0x3d00e150]
  429ff7:	int3   
  429ff8:	ja     0x429f83
  429ffa:	or     bh,bh
  429ffc:	(bad)  
  429ffd:	(bad)  
  429ffe:	push   DWORD PTR [edx+0x2f599eff]
  42a004:	hlt    
  42a005:	sub    DWORD PTR [ecx-0x1],0x1e
  42a009:	push   DWORD PTR [edi]
  42a00b:	dec    DWORD PTR [ecx-0x33e90001]
  42a011:	jecxz  0x429fe1
  42a013:	xchg   ecx,eax
  42a014:	in     al,0xff
  42a016:	cmp    bh,0x67
  42a019:	push   DWORD PTR [ebp-0x7d]
  42a01c:	inc    DWORD PTR [ebx-0x46007077]
  42a022:	push   esi
  42a023:	in     eax,dx
  42a024:	add    BYTE PTR [ebx+0x27ffec],0x13
  42a02b:	add    BYTE PTR [ecx-0x1bff01],cl
  42a031:	lods   al,BYTE PTR ds:[esi]
  42a032:	dec    esi
  42a033:	mov    ebx,0x7100f0
  42a038:	add    BYTE PTR [eax],al
  42a03a:	ins    BYTE PTR es:[edi],dx
  42a03b:	(bad)  
  42a03c:	(bad)  
  42a03d:	inc    DWORD PTR [eax]
  42a03f:	mov    cl,0xcc
  42a041:	fs jbe 0x42a078
  42a044:	mov    bl,0xff
  42a046:	jno    0x42a047
  42a048:	jmp    0x844216d0
  42a04d:	add    BYTE PTR [eax],al
  42a04f:	dec    esp
  42a050:	add    BYTE PTR [ebp-0x76be73d8],bl
  42a056:	dec    esi
  42a057:	add    BYTE PTR [esi+0xffcf89],ch
  42a05d:	add    BYTE PTR [eax],al
  42a05f:	xchg   ecx,eax
  42a060:	add    al,dh
  42a062:	push   ss
  42a063:	cmp    BYTE PTR [esi],bh
  42a065:	jmp    FWORD PTR [edx+0x1a0087ff]
  42a06b:	add    BYTE PTR [eax],al
  42a06d:	add    DWORD PTR [eax],0x5c
  42a070:	(bad)  
  42a071:	sti    
  42a072:	cs jnp 0x42a094
  42a075:	add    BYTE PTR [edi-0x687caf7d],ah
  42a07b:	add    BYTE PTR [ebx+0x6fffcc],al
  42a081:	xchg   ebp,eax
  42a082:	cmp    DWORD PTR [ecx-0x769d33b7],ebx
  42a088:	ds sbb esp,0x0
  42a08c:	(bad)  
  42a08d:	inc    DWORD PTR [eax]
  42a08f:	and    bh,bh
  42a091:	add    esi,esi
  42a093:	sub    eax,0xcc3e83ba
  42a098:	bound  eax,QWORD PTR [ebx+0x89ccf5]
  42a09e:	(bad)  
  42a09f:	inc    BYTE PTR [eax]
  42a0a1:	and    eax,0xffba8ca4
  42a0a6:	jecxz  0x42a0a7
  42a0a8:	scas   eax,DWORD PTR es:[edi]
  42a0a9:	sbb    DWORD PTR [eax-0x3333ff01],0xffffff86
  42a0b0:	mov    edx,esi
  42a0b2:	ret    
  42a0b3:	cdq    
  42a0b4:	test   BYTE PTR [eax],0x97
  42a0b7:	call   ebx
  42a0b9:	dec    DWORD PTR [ecx-0x1]
  42a0bc:	add    DWORD PTR [eax],0x0
  42a0bf:	adc    bh,bh
  42a0c1:	mov    WORD PTR [esi+0x72004783],cs
  42a0c7:	add    BYTE PTR [eax+eax*1],bl
  42a0ca:	xchg   ecx,eax
  42a0cb:	add    bh,bh
  42a0cd:	(bad)  
  42a0ce:	call   FWORD PTR [ebx]
  42a0d0:	add    BYTE PTR [edi+0x56],ch
  42a0d3:	push   ebp
  42a0d4:	fwait
  42a0d5:	sub    DWORD PTR [eax+eax*1-0x27],0x0
  42a0da:	dec    ebx
  42a0db:	add    DWORD PTR [eax],0xffffffff
  42a0de:	call   DWORD PTR [eax+eax*1]
  42a0e1:	iret   
  42a0e2:	ret    0x6fca
  42a0e5:	int3   
  42a0e6:	(bad)  
  42a0e8:	mov    esp,cs
  42a0ea:	outs   dx,DWORD PTR ds:[esi]
  42a0eb:	int3   
  42a0ec:	inc    DWORD PTR [eax]
  42a0ee:	(bad)  
  42a0ef:	cmp    BYTE PTR [ebx+0xd389ea9],al
  42a0f5:	mov    DWORD PTR [edi-0x1],edx
  42a0f8:	xchg   ebx,eax
  42a0f9:	inc    DWORD PTR [edx-0x1]
  42a0fc:	dec    esp
  42a0fe:	add    BYTE PTR [edx+0x3207e700],bh
  42a104:	add    edi,edi
  42a106:	jnp    0x42a08b
  42a108:	adc    al,0x0
  42a10a:	xchg   edx,eax
  42a10b:	add    ah,cl
  42a10d:	inc    DWORD PTR [eax]
  42a10f:	iret   
  42a110:	add    BYTE PTR [edi],dl
  42a112:	fdivp  st(1),st
  42a114:	add    al,0x83
  42a116:	int    0xcc
  42a118:	push   edi
  42a119:	dec    DWORD PTR [ebx+0x0]
  42a11c:	(bad)  
  42a11d:	inc    DWORD PTR [eax]
  42a11f:	pop    eax
  42a120:	mov    DWORD PTR [esi+0x48bf5b],ebx
  42a126:	or     bh,bh
  42a128:	ins    BYTE PTR es:[edi],dx
  42a129:	jmp    DWORD PTR [edi-0x1]
  42a12c:	add    BYTE PTR [eax],al
  42a12e:	add    cl,bl
  42a130:	call   FWORD PTR [edi+0x5]
  42a133:	adc    ah,dl
  42a135:	dec    DWORD PTR [esi-0x7d]
  42a138:	icebp  
  42a139:	sub    DWORD PTR [edx],0xffffff83
  42a13c:	add    BYTE PTR [eax],al
  42a13e:	add    ah,dh
  42a140:	add    DWORD PTR [ecx],0xffffffe8
  42a143:	imul   esp,ecx,0xd383a600
  42a149:	jmp    ebp
  42a14b:	cmp    edi,0xffffff83
  42a14e:	add    BYTE PTR [ecx],ch
  42a150:	add    ch,bh
  42a152:	sub    bl,BYTE PTR [ebx-0x4700d1]
  42a158:	mov    eax,ds:0xffbeff
  42a15d:	add    bh,bh
  42a15f:	fisttp DWORD PTR [ecx+0x4e838234]
  42a165:	call   eax
  42a167:	(bad)  
  42a168:	mov    ecx,0x89898700
  42a16d:	inc    DWORD PTR [eax]
  42a16f:	(bad)  
  42a172:	add    ecx,eax
  42a174:	xor    al,0xff
  42a176:	xchg   ebp,eax
  42a177:	add    BYTE PTR ds:0xffffa189,ah
  42a17d:	dec    DWORD PTR [ecx-0x1757ff0c]
  42a183:	rcr    DWORD PTR [eax],0x0
  42a186:	nop
  42a187:	add    bh,ch
  42a189:	mov    DWORD PTR [edx+0x0],esi
  42a18c:	(bad)  
  42a18d:	(bad)  
  42a18e:	(bad)  
  42a18f:	jmp    0xf:0x939389ff
  42a196:	mov    bh,bh
  42a198:	lock and DWORD PTR [ebp-0x1],0xffffff83
  42a19d:	int3   
  42a19e:	(bad)  
  42a19f:	cmp    eax,DWORD PTR [eax]
  42a1a1:	cmp    ecx,DWORD PTR [ebx+ecx*1-0x22]
  42a1a5:	(bad)  
  42a1a6:	jmp    0x4541abaa
  42a1ab:	add    bh,bh
  42a1ad:	add    BYTE PTR [ebx+0x82b00a3],al
  42a1b3:	dec    esi
  42a1b4:	xchg   edi,edi
  42a1b6:	stc    
  42a1b7:	add    cl,dh
  42a1b9:	xor    DWORD PTR [ebx-0x76ff0001],0xffffffb3
  42a1c0:	call   eax
  42a1c2:	mov    edi,0xb1ff5e61
  42a1c7:	add    BYTE PTR [esi-0xffd501],ch
  42a1cd:	inc    DWORD PTR [eax]
  42a1cf:	inc    esp
  42a1d0:	add    BYTE PTR [ebx],bl
  42a1d2:	fld    TBYTE PTR [ecx+edi*1]
  42a1d5:	add    ch,bl
  42a1d7:	(bad)  
  42a1d8:	jl     0x42a1d9
  42a1da:	jp     0x42a1db
  42a1dc:	cmp    edi,0xffffffff
  42a1df:	inc    edx
  42a1e0:	inc    esp
  42a1e2:	shl    DWORD PTR [ecx+0x2a],1
  42a1e5:	xor    DWORD PTR [edx+0x59832fff],0x0
  42a1ec:	inc    DWORD PTR [ebx+0x4c009aff]
  42a1f2:	mov    edi,0x2bff69b7
  42a1f7:	add    DWORD PTR [edi],0xffffffff
  42a1fa:	ja     0x42a1c8
  42a1fc:	(bad)  
  42a1fd:	(bad)  
  42a1fe:	inc    DWORD PTR [ebp-0x4ee12401]
  42a204:	sbb    edi,edi
  42a206:	test   DWORD PTR [ebx-0x5000e6],eax
  42a20c:	add    DWORD PTR [eax],0xffffffff
  42a20f:	ins    DWORD PTR es:[edi],dx
  42a210:	add    BYTE PTR [edx+0x76],ah
  42a213:	or     esi,edx
  42a215:	jmp    esp
  42a217:	inc    ebp
  42a219:	inc    DWORD PTR [eax-0xff34]
  42a21f:	push   edx
  42a220:	adc    DWORD PTR [edx-0x72],0xffffff98
  42a224:	stc    
  42a225:	mov    DWORD PTR [ecx],ecx
  42a227:	call   FWORD PTR [esi-0x76ff2a01]
  42a22d:	inc    DWORD PTR [ebx-0x308e7c3e]
  42a233:	push   ecx
  42a234:	test   DWORD PTR [ebx+0x1aff06],eax
  42a23a:	arpl   WORD PTR [eax],ax
  42a23c:	(bad)  
  42a23d:	inc    DWORD PTR [eax]
  42a23f:	xchg   ebx,eax
  42a240:	jmp    FWORD PTR [ebx+0x73]
  42a243:	lock stos BYTE PTR es:[edi],al
  42a245:	jmp    edi
  42a247:	sub    DWORD PTR [edx-0x1],0xffffff8e
  42a24b:	(bad)  
  42a24c:	(bad)  
  42a24d:	dec    esp
  42a24f:	lock jmp DWORD PTR [edx*8-0x5000cedb]
  42a257:	or     DWORD PTR [edx-0x857d],0xffffffff
  42a25e:	add    BYTE PTR [edi+0x258d38ff],dl
  42a264:	dec    edi
  42a265:	dec    ebx
  42a267:	call   DWORD PTR [eax+eax*1-0x3300ff35]
  42a26e:	jmp    FWORD PTR [ecx+0x241151ff]
  42a274:	loope  0x42a275
  42a276:	dec    eax
  42a277:	add    DWORD PTR [ecx-0x7d],0xffffffea
  42a27b:	add    BYTE PTR [eax],al
  42a27d:	add    BYTE PTR [eax],al
  42a27f:	in     al,dx
  42a280:	inc    DWORD PTR [edx+0xce95f6]
  42a286:	fwait
  42a287:	call   DWORD PTR [esi-0x7c003a00]
  42a28d:	(bad)  
  42a28e:	call   FWORD PTR [ebp-0x1]
  42a291:	outs   dx,BYTE PTR ds:[esi]
  42a292:	sub    ebp,eax
  42a294:	xor    al,BYTE PTR [eax]
  42a296:	jne    0x42a21b
  42a298:	(bad)  
  42a299:	(bad)  
  42a29a:	cli    
  42a29b:	mov    DWORD PTR [ebx-0x33590000],eax
  42a2a1:	pop    esi
  42a2a2:	out    0x13,eax
  42a2a4:	aaa    
  42a2a5:	add    bl,bl
  42a2a7:	add    BYTE PTR [edi],ch
  42a2a9:	jmp    DWORD PTR [ebx-0x1]
  42a2ac:	mov    DWORD PTR [eax],eax
  42a2ae:	int3   
  42a2af:	cmp    bh,bh
  42a2b1:	sub    DWORD PTR [ecx],ebx
  42a2b3:	jl     0x42a23e
  42a2b5:	call   FWORD PTR [edx-0x31009f01]
  42a2bb:	(bad)  
  42a2bc:	inc    DWORD PTR [eax]
  42a2be:	inc    DWORD PTR [edi-0x73b51500]
  42a2c4:	repz add BYTE PTR [edi+0x0],bh
  42a2c8:	loopne 0x42a2c9
  42a2ca:	repnz cmp edi,0xffffffcc
  42a2ce:	add    ecx,0x0
  42a2d1:	(bad)  
  42a2d3:	ret    
  42a2d4:	add    DWORD PTR [ebx-0x5400f2],0x83ff0094
  42a2de:	add    ch,cl
  42a2e0:	add    BYTE PTR ds:0xff6a3e4e,dl
  42a2e6:	jmp    0x42a2e7
  42a2e8:	jp     0x42a26d
  42a2ea:	clc    
  42a2eb:	inc    DWORD PTR [eax]
  42a2ed:	add    bh,bh
  42a2ef:	sub    edi,edi
  42a2f1:	loop   0x42a2c9
  42a2f3:	dec    BYTE PTR [ecx]
  42a2f5:	push   ecx
  42a2f7:	add    BYTE PTR [ebx-0x7600db01],cl
  42a2fd:	add    DWORD PTR [eax],0xa
  42a300:	call   FWORD PTR [ecx-0xa9eac5]
  42a306:	ds (bad) 
  42a308:	jmp    0x89c5bc0d
  42a30d:	add    BYTE PTR [ebx+0x75bbff5e],al
  42a313:	sub    BYTE PTR ss:[eax],al
  42a316:	jp     0x42a318
  42a318:	mov    ebx,0x89ff7a00
  42a31d:	add    BYTE PTR [ebx+0x24888326],al
  42a323:	adc    ch,BYTE PTR [ecx-0x72000501]
  42a329:	int3   
  42a32a:	cmp    al,0x0
  42a32c:	add    BYTE PTR [eax],al
  42a32e:	push   DWORD PTR [ecx]
  42a330:	add    BYTE PTR [eax+0x55],ch
  42a333:	stos   DWORD PTR es:[edi],eax
  42a334:	inc    esi
  42a335:	add    BYTE PTR [ebx-0x54760b00],ah
  42a33b:	add    bh,bh
  42a33d:	add    BYTE PTR [eax],al
  42a33f:	pop    ebx
  42a340:	add    BYTE PTR [ebx+0x82bf6f],bl
  42a346:	add    al,0x0
  42a348:	sub    edi,edi
  42a34a:	cmp    bh,0xff
  42a34d:	inc    DWORD PTR [eax]
  42a34f:	jb     0x42a350
  42a351:	adc    al,0xdf
  42a353:	sar    DWORD PTR [ecx-0x4e33667d],cl
  42a359:	dec    DWORD PTR [esi]
  42a35b:	or     DWORD PTR [ecx-0x7c4eff7d],0xffffff82
  42a362:	test   DWORD PTR [esi+0x62ff02],ebp
  42a368:	xchg   DWORD PTR [ebx-0xff8d],eax
  42a36e:	call   DWORD PTR [ebx+0x1a8a3dff]
  42a374:	mov    eax,ds:0x6100acff
  42a379:	(bad)  
  42a37a:	mov    eax,0xff0000
  42a37f:	push   ecx
  42a380:	dec    DWORD PTR [edi]
  42a382:	inc    edx
  42a383:	jne    0x42a3cc
  42a385:	jmp    FWORD PTR [ebp-0x1c00f201]
  42a38b:	(bad)  
  42a38c:	(bad)  
  42a38d:	inc    DWORD PTR [eax]
  42a38f:	and    eax,DWORD PTR [eax]
  42a391:	add    al,0x46
  42a393:	or     DWORD PTR [ebx-0x34],edx
  42a396:	fwait
  42a397:	(bad)  
  42a398:	fld    DWORD PTR [ebx-0xffff3d]
  42a39e:	jmp    DWORD PTR [edx-0x1]
  42a3a1:	imul   edx,edx,0x40009a2d
  42a3a7:	mov    DWORD PTR [ebx-0xb800],ecx
  42a3ad:	add    BYTE PTR [ecx+0x716c8927],cl
  42a3b3:	push   edi
  42a3b4:	push   0xffffffff
  42a3b6:	repnz int3 
  42a3b8:	mov    bl,0xff
  42a3ba:	sbb    eax,DWORD PTR [eax]
  42a3bc:	int3   
  42a3bd:	(bad)  
  42a3be:	push   DWORD PTR [eax]
  42a3c0:	add    BYTE PTR [edi-0x76bdc116],ch
  42a3c6:	push   ds
  42a3c7:	add    BYTE PTR [edi-0x1],al
  42a3ca:	push   edx
  42a3cb:	dec    DWORD PTR [ecx+0xeccc83]
  42a3d1:	cli    
  42a3d2:	sub    al,0x26
  42a3d4:	bound  eax,QWORD PTR [eax]
  42a3d6:	sbb    al,BYTE PTR [ebx-0xc004c]
  42a3dc:	add    BYTE PTR [ecx+0x5cff64ff],cl
  42a3e2:	mov    dh,0xfd
  42a3e4:	imul   eax,DWORD PTR [eax],0xffffff85
  42a3e7:	add    BYTE PTR [edi+edi*8],cl
  42a3ea:	mov    edi,0xff8900
  42a3ef:	std    
  42a3f0:	add    BYTE PTR [ecx*1+0x3affa0ed],bh
  42a3f7:	cmp    DWORD PTR [ebp-0x76ff767d],0xffffffff
  42a3fe:	add    BYTE PTR [edi+edi*8],dl
  42a401:	mov    ds:0x83022819,al
  42a406:	push   edx
  42a407:	add    BYTE PTR [ebx+eax*4],dl
  42a40a:	out    0xff,eax
  42a40c:	(bad)  
  42a40d:	inc    DWORD PTR [ebx+0x34d8ff9f]
  42a413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a414:	mov    edi,edi
  42a416:	sbb    bh,bh
  42a418:	test   al,0xff
  42a41a:	jge    0x42a41b
  42a41c:	add    BYTE PTR [ebx-0x2d7cb201],al
  42a422:	adc    esp,0xffffffe0
  42a425:	(bad)  
  42a426:	(bad)  
  42a428:	call   0x8a41d52c
  42a42d:	inc    DWORD PTR [eax]
  42a42f:	mov    cl,0x89
  42a431:	pop    edx
  42a432:	inc    esp
  42a433:	aad    0xab
  42a435:	add    ch,cl
  42a437:	jmp    FWORD PTR [ecx]
  42a439:	cmp    DWORD PTR [eax+eax*1],0xffffffcc
  42a43d:	inc    DWORD PTR [ebx-0x3da40012]
  42a443:	adc    DWORD PTR [ecx+ecx*4],esi
  42a446:	jno    0x42a3cb
  42a448:	push   ebp
  42a449:	mov    DWORD PTR [edi-0x33000100],esi
  42a44f:	mov    dh,0xff
  42a451:	jg     0x42a424
  42a453:	and    esp,DWORD PTR [edi]
  42a455:	add    BYTE PTR [ebp+0x240061ff],dh
  42a45b:	int3   
  42a45c:	inc    DWORD PTR [eax]
  42a45e:	int3   
  42a45f:	add    edi,edi
  42a461:	fidiv  WORD PTR [ebx]
  42a463:	test   BYTE PTR [ebx],cl
  42a465:	add    ah,bh
  42a467:	sub    DWORD PTR [esi-0x777],0x0
  42a46e:	push   DWORD PTR [esi-0x725f1301]
  42a474:	push   cs
  42a475:	add    BYTE PTR [ebx+0x0],bh
  42a478:	jne    0x42a479
  42a47a:	lods   eax,DWORD PTR ds:[esi]
  42a47b:	(bad)  
  42a47c:	inc    DWORD PTR [eax]
  42a47e:	add    BYTE PTR [esi],dl
  42a480:	add    al,cl
  42a482:	pop    es
  42a483:	cmc    
  42a484:	push   edx
  42a485:	int3   
  42a486:	jo     0x42a487
  42a488:	or     bh,bh
  42a48a:	fcmove st,st(4)
  42a48c:	dec    esp
  42a48e:	int3   
  42a48f:	add    eax,0x61308989
  42a494:	(bad)  
  42a495:	inc    edi
  42a497:	int3   
  42a498:	ja     0x42a499
  42a49a:	fild   DWORD PTR [eax]
  42a49c:	inc    DWORD PTR [eax]
  42a49e:	int3   
  42a49f:	sub    al,BYTE PTR [eax]
  42a4a1:	xor    dh,ah
  42a4a3:	loope  0x42a458
  42a4a5:	mov    DWORD PTR [ebx+0x55008e00],esi
  42a4ab:	cmp    edi,0xffffffff
  42a4ae:	jmp    DWORD PTR [edi-0x1]
  42a4b1:	add    DWORD PTR [ecx],edi
  42a4b3:	aad    0x65
  42a4b5:	and    DWORD PTR [ebp-0x1a00ec00],0xffffffff
  42a4bc:	(bad)  
  42a4bd:	(bad)  
  42a4be:	jmp    DWORD PTR [edi+edi*8-0x62]
  42a4c2:	popf   
  42a4c3:	test   ah,ch
  42a4c5:	inc    DWORD PTR [eax]
  42a4c7:	int3   
  42a4c8:	dec    esp
  42a4ca:	add    bh,bh
  42a4cc:	add    bh,bh
  42a4ce:	(bad)  
  42a4cf:	(bad)  
  42a4d0:	cmp    ah,cl
  42a4d2:	cmp    edi,0xffffffff
  42a4d5:	add    BYTE PTR [eax],al
  42a4d7:	mov    ebx,0x5f9b70ff
  42a4dc:	sub    al,0xf0
  42a4de:	call   DWORD PTR [edi-0x13]
  42a4e1:	(bad)  
  42a4e2:	inc    DWORD PTR [eax]
  42a4e4:	inc    DWORD PTR [eax]
  42a4e6:	(bad)  
  42a4e7:	cli    
  42a4e8:	add    DWORD PTR [ecx+0x7d585add],0xffffffff
  42a4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4f0:	adc    edi,edi
  42a4f2:	cmp    edi,0x0
  42a4f5:	add    DWORD PTR [eax],0x38
  42a4f8:	push   DWORD PTR [ebp-0x41]
  42a4fb:	pop    ecx
  42a4fc:	inc    esp
  42a4fd:	ja     0x42a4fe
  42a4ff:	adc    al,0xcb
  42a501:	int3   
  42a502:	(bad)  
  42a503:	inc    DWORD PTR [eax]
  42a505:	inc    DWORD PTR [ebx+0x41b7cc9d]
  42a50b:	sbb    cl,BYTE PTR [ebx]
  42a50d:	mov    esi,0xccdef8cc
  42a512:	(bad)  
  42a513:	dec    DWORD PTR [ecx-0xa10001]
  42a519:	inc    eax
  42a51a:	inc    ebx
  42a51b:	sbb    ch,0x35
  42a51e:	(bad)  
  42a51f:	jl     0x42a4b2
  42a521:	inc    DWORD PTR [eax]
  42a523:	add    BYTE PTR [eax],al
  42a525:	int3   
  42a526:	add    BYTE PTR [ecx-0x1],al
  42a529:	daa    
  42a52a:	xchg   ebp,eax
  42a52b:	std    
  42a52c:	ficomp WORD PTR [ecx+0x0]
  42a52f:	and    al,cl
  42a531:	inc    DWORD PTR [ebx-0x7c007677]
  42a537:	and    al,0xff
  42a539:	jmp    0x42a5b3
  42a53b:	and    al,0xf9
  42a53d:	sub    al,BYTE PTR [eax]
  42a53f:	loop   0x42a4d8
  42a541:	add    DWORD PTR [ebx+0xff00],0x76
  42a548:	sub    DWORD PTR [esi+edi*2-0x7dbe6c],0xffffff80
  42a550:	push   ebp
  42a551:	dec    DWORD PTR [ecx-0x7c7c01]
  42a557:	fcos   
  42a559:	and    DWORD PTR [ecx+0x49],ecx
  42a55c:	ss fcmove st,st(4)
  42a55f:	(bad)  
  42a561:	add    BYTE PTR [ecx-0xff01],cl
  42a567:	test   BYTE PTR [eax],al
  42a569:	mov    ch,0xcb
  42a56b:	inc    edi
  42a56c:	fistp  WORD PTR [esi]
  42a56e:	add    BYTE PTR [ebx+0xff3a],dl
  42a574:	(bad)  
  42a575:	inc    DWORD PTR [eax]
  42a577:	aad    0xff
  42a579:	add    DWORD PTR [esi],0xffffff92
  42a57c:	out    0x22,eax
  42a57e:	add    BYTE PTR [eax-0x42],ch
  42a581:	mov    edi,edi
  42a583:	add    bh,bh
  42a585:	inc    DWORD PTR [eax]
  42a587:	mov    ecx,0xef8928ff
  42a58c:	sbb    eax,0x7ab9897a
  42a591:	add    bh,bh
  42a593:	(bad)  
  42a594:	(bad)  
  42a595:	(bad)  
  42a596:	dec    esi
  42a598:	inc    DWORD PTR [ecx-0xe]
  42a59b:	pop    edi
  42a59c:	arpl   WORD PTR [ecx+ecx*4],sp
  42a59f:	lahf   
  42a5a0:	pop    ecx
  42a5a1:	dec    esp
  42a5a3:	int3   
  42a5a4:	(bad)  
  42a5a5:	inc    DWORD PTR [ebx+0x14f6002f]
  42a5ab:	sbb    DWORD PTR [ebp-0x63],ecx
  42a5ae:	and    DWORD PTR [esi],0xfffffff3
  42a5b1:	int3   
  42a5b2:	add    bh,bh
  42a5b4:	add    DWORD PTR [eax],0xffffff83
  42a5b7:	push   cs
  42a5b8:	push   DWORD PTR [edx]
  42a5ba:	jecxz  0x42a56e
  42a5bc:	lods   al,BYTE PTR ds:[esi]
  42a5bd:	les    ecx,FWORD PTR [ecx+0xffb2f4]
  42a5c3:	(bad)  
  42a5c4:	inc    DWORD PTR [eax]
  42a5c6:	add    BYTE PTR [ebx-0x1bd3a200],al
  42a5cc:	mov    edi,0x7e868325
  42a5d1:	mov    edi,edi
  42a5d3:	add    bh,bh
  42a5d5:	(bad)  
  42a5d6:	(bad)  
  42a5d7:	cli    
  42a5d8:	add    BYTE PTR [eax-0x2af78382],cl
  42a5de:	inc    esp
  42a5e0:	sbb    bh,bh
  42a5e2:	inc    DWORD PTR [eax]
  42a5e4:	(bad)  
  42a5e5:	(bad)  
  42a5e6:	dec    DWORD PTR [eax+eax*1+0x7624fa0]
  42a5ed:	add    al,0x83
  42a5ef:	lock popf 
  42a5f1:	add    BYTE PTR [eax],al
  42a5f3:	cmp    edi,0x0
  42a5f6:	(bad)  
  42a5f7:	cmp    al,0xff
  42a5f9:	inc    edi
  42a5fa:	dec    eax
  42a5fb:	jns    0x42a5df
  42a5fd:	dec    edi
  42a5fe:	add    cl,dl
  42a600:	je     0x42a601
  42a602:	add    BYTE PTR [ebx-0x37ff0001],al
  42a608:	(bad)  
  42a609:	cli    
  42a60a:	jmp    0x75df:0x4fc29d
  42a611:	cmp    edi,0xffffff89
  42a614:	mov    edi,edi
  42a616:	jmp    DWORD PTR [eax+eax*1+0x2c26730]
  42a61d:	inc    esi
  42a61e:	push   DWORD PTR [eax+0xffd4]
  42a624:	add    DWORD PTR [eax],0xffffffff
  42a627:	rol    BYTE PTR [ebx+0x5b4a171a],0x24
  42a62e:	push   esp
  42a630:	pusha  
  42a631:	add    BYTE PTR [eax],al
  42a633:	int3   
  42a634:	add    BYTE PTR [eax],al
  42a636:	jmp    FWORD PTR [eax+0x148b1800]
  42a63c:	jle    0xbe88c5
  42a642:	(bad)  
  42a643:	(bad)  
  42a644:	(bad)  
  42a645:	inc    DWORD PTR [eax]
  42a647:	test   ah,cl
  42a649:	lahf   
  42a64a:	out    dx,al
  42a64b:	dec    eax
  42a64c:	cmp    eax,0xd78b006d
  42a651:	(bad)  
  42a652:	inc    DWORD PTR [eax]
  42a654:	inc    DWORD PTR [eax]
  42a656:	adc    DWORD PTR [edi-0x149fd101],0x2
  42a65d:	cmp    DWORD PTR [ebx-0xa368],eax
  42a663:	add    BYTE PTR [eax],al
  42a665:	add    DWORD PTR [eax],0xffffffea
  42a668:	jmp    DWORD PTR [ebp+0xe286e1f]
  42a66e:	xor    DWORD PTR [edi],0x60
  42a671:	inc    DWORD PTR [eax]
  42a673:	(bad)  
  42a674:	inc    DWORD PTR [eax]
  42a676:	call   DWORD PTR [esi-0x1]
  42a679:	sbb    BYTE PTR [eax+0x59c17c],ah
  42a67f:	jmp    0xffff:0xffccff15
  42a686:	call   DWORD PTR [edx]
  42a688:	int3   
  42a689:	pop    ebp
  42a68a:	mov    ds:0xcc19cfdb,al
  42a68f:	inc    eax
  42a690:	inc    ebp
  42a691:	dec    esp
  42a693:	add    BYTE PTR [ebx-0x6ff01],al
  42a699:	xchg   edi,eax
  42a69a:	pop    ebx
  42a69b:	call   0xcc7e:0xd883bbb2
  42a6a2:	add    bh,bh
  42a6a4:	int3   
  42a6a5:	(bad)  
  42a6a6:	dec    DWORD PTR [eax-0x42265001]
  42a6ac:	or     BYTE PTR [eax-0x7a3c01],bl
  42a6b2:	mov    DWORD PTR [eax],eax
  42a6b4:	(bad)  
  42a6b5:	dec    esp
  42a6b7:	xchg   BYTE PTR [eax],al
  42a6b9:	and    BYTE PTR [ebp-0x339189ed],ch
  42a6bf:	adc    al,0x4e
  42a6c1:	(bad)  
  42a6c2:	inc    DWORD PTR [eax]
  42a6c4:	inc    DWORD PTR [eax]
  42a6c6:	(bad)  
  42a6c7:	cli    
  42a6c8:	int3   
  42a6c9:	es adc eax,0x89c1f098
  42a6cf:	(bad)
  42a6d2:	(bad)  
  42a6d3:	(bad)  
  42a6d4:	(bad)  
  42a6d5:	inc    DWORD PTR [eax]
  42a6d7:	fs inc esp
  42a6da:	repnz adc al,BYTE PTR [ebp+0x44abff7b]
  42a6e1:	add    BYTE PTR [ebx-0xff0034],al
  42a6e7:	inc    ebp
  42a6e8:	adc    DWORD PTR [ecx+0x13d3bbbd],0xffffffff
  42a6ef:	mov    BYTE PTR [esi],dh
  42a6f1:	inc    DWORD PTR [ebx-0x330100]
  42a6f7:	std    
  42a6f8:	xor    DWORD PTR [ecx+0x65596a3a],0xffffffcc
  42a6ff:	stc    
  42a700:	cmp    edi,edi
  42a702:	add    bh,bh
  42a704:	add    BYTE PTR [eax],al
  42a706:	add    ch,dh
  42a708:	int3   
  42a709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a70a:	fisttp DWORD PTR [eax]
  42a70c:	pushf  
  42a70d:	jge    0x42a70f
  42a70f:	inc    ebx
  42a710:	mov    ecx,esp
  42a712:	dec    DWORD PTR [ecx-0x1833ff34]
  42a718:	add    BYTE PTR [ebp+0x21],cl
  42a71b:	es push eax
  42a71d:	mov    al,ds:0xffa38089
  42a722:	add    BYTE PTR [ecx+0x4cffccff],cl
  42a728:	(bad)  
  42a729:	jle    0x42a73a
  42a72b:	mov    bh,0x8e
  42a72d:	and    bh,bh
  42a72f:	pop    eax
  42a730:	push   cs
  42a731:	add    BYTE PTR [eax],al
  42a733:	cmp    edi,0xffffff83
  42a736:	add    bh,ch
  42a738:	(bad)  
  42a739:	cld    
  42a73a:	push   ds
  42a73b:	cmp    al,0xb9
  42a73d:	jl     0x42a73f
  42a73f:	sti    
  42a740:	in     eax,0x83
  42a742:	int3   
  42a743:	inc    DWORD PTR [ebx-0x4d7c01]
  42a749:	das    
  42a74a:	jne    0x42a762
  42a74c:	retf   0x83fe
  42a74f:	bound  esi,QWORD PTR [edi+edi*8-0x1]
  42a753:	add    BYTE PTR [ebx-0x997c01],al
  42a759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a75a:	ins    BYTE PTR es:[edi],dx
  42a75b:	xor    esp,esi
  42a75d:	popa   
  42a75e:	mov    DWORD PTR [edi-0x34],edi
  42a761:	(bad)  
  42a762:	inc    DWORD PTR [eax]
  42a764:	add    bh,bh
  42a766:	(bad)  
  42a767:	mov    ecx,0x8c9f74ff
  42a76c:	rol    ah,0x0
  42a76f:	mov    edi,0xff00cc
  42a774:	inc    DWORD PTR [eax]
  42a776:	add    bh,ch
  42a778:	mov    DWORD PTR [ebx+0x5376609],edi
  42a77e:	add    BYTE PTR [eax+ebx*8-0x77],dl
  42a782:	add    ah,cl
  42a784:	add    BYTE PTR [ebx-0x5e7c7b01],al
  42a78a:	rcl    DWORD PTR [edi-0x9007e9e],cl
  42a790:	pushf  
  42a791:	add    BYTE PTR [eax],al
  42a793:	add    bh,bh
  42a795:	inc    DWORD PTR [eax]
  42a797:	out    dx,eax
  42a798:	add    BYTE PTR [ecx],dh
  42a79a:	jnp    0x42a7f9
  42a79c:	cmp    BYTE PTR [eax-0x1],al
  42a79f:	sahf   
  42a7a0:	pop    es
  42a7a1:	mov    edi,edi
  42a7a3:	dec    esp
  42a7a5:	inc    DWORD PTR [eax]
  42a7a7:	push   ss
  42a7a8:	push   DWORD PTR [edx-0x7c]
  42a7ab:	jp     0x42a7a8
  42a7ad:	out    dx,eax
  42a7ae:	(bad)  
  42a7af:	jge    0x42a7f5
  42a7b1:	cmp    edi,0x0
  42a7b4:	dec    esp
  42a7b6:	adc    DWORD PTR [ebx],0xffffff83
  42a7b9:	loope  0x42a7e4
  42a7bb:	add    bl,bl
  42a7bd:	ret    0xe600
  42a7c0:	sahf   
  42a7c1:	int3   
  42a7c2:	cmp    edi,0xffffffcc
  42a7c5:	add    bh,bh
  42a7c7:	lahf   
  42a7c8:	and    DWORD PTR [edi+0x488bf330],0xffffffff
  42a7cf:	retf   
  42a7d0:	mov    esp,0xffcc
  42a7d5:	inc    DWORD PTR [eax]
  42a7d7:	jnp    0x42a7d9
  42a7d9:	lods   eax,DWORD PTR ds:[esi]
  42a7da:	jl     0x42a7b5
  42a7dc:	xor    bl,BYTE PTR [esp+ecx*8]
  42a7df:	bound  esi,QWORD PTR [ecx]
  42a7e1:	(bad)  
  42a7e2:	(bad)  
  42a7e3:	inc    DWORD PTR [eax]
  42a7e5:	inc    DWORD PTR [ebx+0x598bff67]
  42a7eb:	pop    ss
  42a7ec:	xor    DWORD PTR [esi],ecx
  42a7ee:	add    bl,ch
  42a7f0:	push   edx
  42a7f1:	inc    DWORD PTR [eax]
  42a7f3:	add    bh,bh
  42a7f5:	dec    esp
  42a7f7:	cli    
  42a7f8:	(bad)  
  42a7f9:	jmp    0x74ff:0x562bede1
  42a800:	pusha  
  42a801:	cmp    edi,0xffffffff
  42a804:	dec    esp
  42a806:	inc    ebx
  42a808:	(bad)  
  42a809:	mov    ecx,0xb3b9e5d3
  42a80e:	int3   
  42a80f:	inc    edi
  42a810:	lods   al,BYTE PTR ds:[esi]
  42a811:	add    bh,bh
  42a813:	add    BYTE PTR [eax],al
  42a815:	(bad)  
  42a816:	inc    DWORD PTR [ebx+0x0]
  42a819:	in     al,dx
  42a81a:	jmp    0xffff566f
  42a81f:	(bad)  
  42a820:	lods   al,BYTE PTR ds:[esi]
  42a821:	dec    esp
  42a823:	add    bh,bh
  42a825:	inc    DWORD PTR [ebx-0xf3f00f6]
  42a82b:	jmp    0x83d8:0x19ffdb33
  42a832:	add    BYTE PTR [eax],al
  42a834:	add    DWORD PTR [eax],0xffffffff
  42a837:	cdq    
  42a838:	add    BYTE PTR [ebx],al
  42a83a:	mov    bh,BYTE PTR [ecx]
  42a83c:	std    
  42a83d:	fwait
  42a83e:	add    ah,cl
  42a840:	sar    edi,0xff
  42a843:	mov    edi,edi
  42a845:	(bad)  
  42a846:	(bad)  
  42a847:	mov    edi,0x3be33300
  42a84c:	cmp    al,0x59
  42a84e:	dec    eax
  42a850:	mov    al,ds:0xff83ffff
  42a855:	inc    DWORD PTR [ebx+0x15390029]
  42a85b:	lods   eax,DWORD PTR ds:[esi]
  42a85c:	in     eax,dx
  42a85d:	mov    WORD PTR [eax],es
  42a85f:	adc    DWORD PTR [ebx+eax*4],edi
  42a862:	(bad)  
  42a863:	dec    DWORD PTR [ecx-0x72ff01]
  42a869:	xchg   DWORD PTR [ecx],esi
  42a86b:	push   0xffffff80
  42a86d:	js     0x42a7f8
  42a86f:	hlt    
  42a870:	test   eax,0xff00ffcc
  42a875:	inc    DWORD PTR [ebx-0x6fddffa8]
  42a87b:	(bad)  [ecx]
  42a87d:	mov    esp,0x89e5d7ff
  42a882:	cmp    edi,0x0
  42a885:	dec    esp
  42a887:	outs   dx,DWORD PTR ds:[esi]
  42a888:	push   ebx
  42a88a:	sbb    al,0xde
  42a88c:	push   ebx
  42a88d:	int3   
  42a88e:	push   esi
  42a890:	imul   edi,edi,0x83ff83cc
  42a896:	jmp    DWORD PTR [eax-0x7ee7a700]
  42a89c:	int3   
  42a89d:	sbb    edi,edi
  42a89f:	adc    al,0x3a
  42a8a1:	(bad)  
  42a8a2:	(bad)  
  42a8a3:	(bad)  
  42a8a4:	inc    DWORD PTR [eax]
  42a8a6:	jmp    DWORD PTR [edi+edi*8-0x6951f7a]
  42a8ad:	and    eax,0xff963d00
  42a8b2:	inc    DWORD PTR [eax]
  42a8b4:	(bad)  
  42a8b5:	(bad)  
  42a8b6:	jmp    DWORD PTR [eax-0x1]
  42a8b9:	je     0x42a83e
  42a8bb:	cdq    
  42a8bc:	mov    esp,edi
  42a8be:	(bad)  
  42a8bf:	mov    edx,0xff83ffd2
  42a8c4:	dec    DWORD PTR [ecx+0x7d005aff]
  42a8ca:	xor    BYTE PTR [eax+eax*1],0xfd
  42a8ce:	(bad)  
  42a8cf:	fcomp  QWORD PTR [edi-0x33ff3400]
  42a8d5:	add    BYTE PTR [ebx+0xe983f2],al
  42a8db:	mov    ?,WORD PTR [edx-0x15597c4a]
  42a8e1:	int3   
  42a8e2:	dec    esp
  42a8e4:	add    bh,bh
  42a8e6:	add    BYTE PTR [edx-0x1],ch
  42a8e9:	ins    BYTE PTR es:[edi],dx
  42a8ea:	scas   al,BYTE PTR es:[edi]
  42a8eb:	inc    eax
  42a8ec:	(bad)  
  42a8ed:	sbb    bh,bh
  42a8ef:	pop    ss
  42a8f0:	sbb    edi,edi
  42a8f2:	dec    DWORD PTR [ecx-0x1b330001]
  42a8f8:	push   DWORD PTR [esi+0x7c1c662c]
  42a8fe:	sub    DWORD PTR [ebx*1-0x7c76767d],0x0
  42a906:	jmp    FWORD PTR [ecx-0x12e9f877]
  42a90c:	adc    eax,0x9c41ffbe
  42a911:	(bad)  
  42a912:	dec    esp
  42a914:	mov    DWORD PTR [eax],eax
  42a916:	jmp    FWORD PTR [eax-0x1]
  42a919:	dec    esp
  42a91a:	pop    esi
  42a91b:	jb     0x42a984
  42a91d:	retf   0xfcff
  42a920:	das    
  42a921:	(bad)  
  42a922:	inc    DWORD PTR [eax]
  42a924:	add    DWORD PTR [ebx-0x51ff5701],0x18
  42a92b:	xchg   edx,eax
  42a92c:	clc    
  42a92d:	out    0x0,al
  42a92f:	inc    ebp
  42a930:	inc    ecx
  42a931:	inc    DWORD PTR [eax]
  42a933:	add    bh,bh
  42a935:	inc    DWORD PTR [eax]
  42a937:	sub    al,BYTE PTR [ebx-0x196a6d3]
  42a93d:	fiadd  DWORD PTR [eax]
  42a93f:	outs   dx,BYTE PTR ds:[esi]
  42a940:	pop    es
  42a941:	inc    DWORD PTR [eax]
  42a943:	(bad)  
  42a944:	(bad)  
  42a945:	dec    esp
  42a947:	das    
  42a948:	add    BYTE PTR [eax+edx*4+0x3d],dh
  42a94c:	jl     0x42a939
  42a94e:	jmp    FWORD PTR [esi-0x5a]
  42a951:	(bad)  
  42a952:	inc    DWORD PTR [eax]
  42a954:	add    BYTE PTR [eax],al
  42a956:	push   DWORD PTR [eax-0x76704601]
  42a95c:	fdiv   st,st(6)
  42a95e:	dec    DWORD PTR [esi]
  42a960:	mov    eax,DWORD PTR [eax]
  42a962:	inc    DWORD PTR [eax]
  42a964:	or     DWORD PTR [ecx+0x12005783],0x59
  42a96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a96c:	cdq    
  42a96d:	fwait
  42a96e:	jmp    DWORD PTR [eax-0x14]
  42a971:	dec    DWORD PTR [ecx+0xffff]
  42a977:	pop    ecx
  42a978:	add    ch,dl
  42a97a:	repz sub esp,DWORD PTR [ecx]
  42a97d:	sbb    esp,ecx
  42a97f:	and    al,0x2d
  42a981:	add    DWORD PTR [eax],0xffffffcc
  42a984:	add    BYTE PTR [ebx-0xa007234],al
  42a98a:	in     eax,0x9
  42a98c:	loop   0x42a949
  42a98e:	add    BYTE PTR ds:0xffff009d,al
  42a994:	dec    esp
  42a996:	dec    DWORD PTR [eax-0x1]
  42a999:	push   cs
  42a99a:	mov    esi,0xff1eb72a
  42a99f:	sub    eax,0x8989ffcd
  42a9a4:	(bad)  
  42a9a5:	inc    DWORD PTR [ebx+0x878ffa3]
  42a9ab:	cdq    
  42a9ac:	loope  0x42a93b
  42a9ae:	add    BYTE PTR [ecx+esi*1],ah
  42a9b1:	add    BYTE PTR [eax],al
  42a9b3:	int3   
  42a9b4:	add    ah,cl
  42a9b6:	mov    DWORD PTR [edi+edi*8],edi
  42a9b9:	dec    DWORD PTR [ebx+0x1a5ab6]
  42a9bf:	shr    DWORD PTR [eax-0x1],cl
  42a9c2:	mov    DWORD PTR [eax],eax
  42a9c4:	(bad)  
  42a9c5:	dec    esp
  42a9c7:	push   ds
  42a9c8:	add    BYTE PTR [ebp+0x2745563d],ah
  42a9ce:	call   FWORD PTR [edx]
  42a9d0:	cmp    edi,0x0
  42a9d3:	inc    DWORD PTR [eax]
  42a9d5:	add    BYTE PTR [eax],al
  42a9d7:	add    BYTE PTR es:[esi-0x20565625],dh
  42a9de:	mov    DWORD PTR [ebx+0xffff6e],eax
  42a9e4:	add    BYTE PTR [ebx+0x5389d183],al
  42a9ea:	repnz out dx,al
  42a9ec:	and    al,0x79
  42a9ee:	mov    DWORD PTR [esi-0x57],esi
  42a9f1:	inc    DWORD PTR [eax]
  42a9f3:	mov    edi,edi
  42a9f5:	cmp    edi,0x66
  42a9f8:	jmp    edx
  42a9fa:	out    0x37,al
  42a9fc:	stc    
  42a9fd:	int3   
  42a9fe:	add    bl,cl
  42aa00:	scas   al,BYTE PTR es:[edi]
  42aa01:	(bad)  
  42aa02:	dec    DWORD PTR [ecx-0xaff3400]
  42aa08:	add    BYTE PTR [ecx],dh
  42aa0a:	mov    ah,0x99
  42aa0c:	test   eax,0x9822ff7d
  42aa11:	inc    DWORD PTR [eax]
  42aa13:	add    BYTE PTR [eax],al
  42aa15:	inc    DWORD PTR [eax]
  42aa17:	inc    ebx
  42aa18:	add    BYTE PTR [ebx-0x7b8153c2],cl
  42aa1e:	add    BYTE PTR [eax-0xd],cl
  42aa21:	(bad)  
  42aa22:	(bad)  
  42aa23:	dec    DWORD PTR [ecx-0xd10001]
  42aa29:	add    eax,0xe309b4cb
  42aa2e:	(bad)  
  42aa2f:	in     al,dx
  42aa30:	sahf   
  42aa31:	(bad)  
  42aa32:	(bad)  
  42aa33:	(bad)  
  42aa34:	(bad)  
  42aa35:	(bad)  
  42aa36:	(bad)  
  42aa37:	cmp    eax,DWORD PTR [eax]
  42aa39:	leave  
  42aa3a:	lds    edi,FWORD PTR [edx]
  42aa3c:	mov    esp,0xd6998336
  42aa41:	(bad)  
  42aa42:	(bad)  
  42aa43:	(bad)  
  42aa44:	(bad)  
  42aa45:	(bad)  
  42aa46:	inc    DWORD PTR [ecx]
  42aa48:	push   DWORD PTR [esi]
  42aa4a:	bound  edx,QWORD PTR [eax+0x2500a700]
  42aa50:	(bad)  
  42aa53:	inc    DWORD PTR [eax]
  42aa55:	(bad)  
  42aa56:	dec    DWORD PTR [edi+edi*8]
  42aa59:	mov    ebp,0x80ed2030
  42aa5e:	call   DWORD PTR [ebx]
  42aa60:	into   
  42aa61:	add    DWORD PTR [eax],0xffffff83
  42aa64:	add    BYTE PTR [eax],al
  42aa66:	add    BYTE PTR [edi],cl
  42aa68:	cmp    DWORD PTR [ebx+0x52693935],0x0
  42aa6f:	es repnz mov esp,ecx
  42aa73:	cmp    edi,0xffffff89
  42aa76:	mov    DWORD PTR [esi+0x6b3e55cc],ebx
  42aa7c:	pop    ebp
  42aa7d:	and    edi,edi
  42aa7f:	dec    ebx
  42aa80:	jmp    0xcc:0xff00cc83
  42aa87:	rol    DWORD PTR [eax],1
  42aa89:	sahf   
  42aa8a:	jl     0x42ab0a
  42aa8c:	mov    ecx,0x1748cc2c
  42aa91:	dec    esp
  42aa93:	add    BYTE PTR [ebx-0x28ff7d],al
  42aa99:	fs ds cs add esi,ecx
  42aa9e:	add    al,al
  42aaa0:	jae    0x42aa25
  42aaa2:	add    BYTE PTR [ecx-0x6e00ff01],cl
  42aaa8:	call   FWORD PTR [ebp-0x3a]
  42aaab:	fcomp  DWORD PTR [ebp-0x53eb0091]
  42aab1:	add    bh,bh
  42aab3:	add    BYTE PTR [ebx-0x7cd5007d],al
  42aab9:	(bad)  
  42aaba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aabb:	popf   
  42aabc:	(bad)  
  42aabe:	add    BYTE PTR [ebp-0x7cff90],dh
  42aac4:	add    bh,bh
  42aac6:	add    BYTE PTR [eax],bh
  42aac8:	add    BYTE PTR [ecx],dh
  42aaca:	inc    esp
  42aacb:	jle    0x42ab25
  42aacd:	jl     0x42aa52
  42aacf:	dec    esp
  42aad0:	dec    ebx
  42aad1:	int3   
  42aad2:	int3   
  42aad3:	add    ah,cl
  42aad5:	dec    DWORD PTR [ecx-0x6ab6ffcd]
  42aadb:	int3   
  42aadc:	test   eax,0xcfb30057
  42aae1:	inc    DWORD PTR [ebx-0xff34]
  42aae7:	mov    dl,0xff
  42aae9:	(bad)  
  42aaeb:	adc    al,0xed
  42aaed:	test   BYTE PTR [eax],al
  42aaef:	adc    al,0x15
  42aaf1:	inc    DWORD PTR [eax]
  42aaf3:	add    DWORD PTR [ebx-0x9b7c34],0x20
  42aafa:	mov    esp,0xcc7b6a07
  42aaff:	sbb    DWORD PTR [eax-0xff7d00],eax
  42ab05:	add    BYTE PTR [eax],al
  42ab07:	ret    
  42ab08:	sbb    ebx,0x3d
  42ab0b:	xor    bl,BYTE PTR [edi-0x5c]
  42ab0e:	add    BYTE PTR [edx-0xffffea],bl
  42ab14:	(bad)  
  42ab15:	(bad)  
  42ab16:	dec    DWORD PTR [ecx+0x64d932ff]
  42ab1c:	das    
  42ab1d:	lock call FWORD PTR [esi-0x76]
  42ab24:	(bad)  
  42ab25:	inc    DWORD PTR [eax]
  42ab27:	xchg   ecx,eax
  42ab28:	mov    DWORD PTR [ebp+0x6f],ecx
  42ab2b:	xchg   ecx,eax
  42ab2c:	test   DWORD PTR [edi+edi*8-0x76004014],eax
  42ab33:	inc    DWORD PTR [eax]
  42ab35:	(bad)  
  42ab36:	jmp    DWORD PTR [ecx-0x1]
  42ab39:	ret    0xaaa8
  42ab3c:	ds mov ?,edi
  42ab3f:	mov    edx,0x89ffcc09
  42ab44:	(bad)  
  42ab45:	dec    DWORD PTR [ecx+0x2a9dcc8e]
  42ab4b:	dec    eax
  42ab4c:	sub    DWORD PTR [ecx+0x0],ebx
  42ab4f:	dec    ebx
  42ab50:	stos   DWORD PTR es:[edi],eax
  42ab51:	inc    DWORD PTR [eax]
  42ab53:	add    BYTE PTR [ecx-0x880100],cl
  42ab59:	in     al,0xc3
  42ab5b:	jmp    0x42ab67
  42ab5d:	je     0x42ab5f
  42ab5f:	dec    esp
  42ab60:	popf   
  42ab61:	add    BYTE PTR [ebx-0x7cff007d],al
  42ab67:	dec    edx
  42ab68:	int3   
  42ab69:	out    0xb2,al
  42ab6b:	aam    0x70
  42ab6d:	call   0xff:0xffa020ff
  42ab74:	(bad)  
  42ab75:	inc    DWORD PTR [eax]
  42ab77:	cmp    eax,0x73cbdcff
  42ab7c:	mov    ah,0x74
  42ab7e:	(bad)  
  42ab7f:	jnp    0x42ab9d
  42ab81:	or     DWORD PTR [ecx+0x83ffff],0x2
  42ab88:	add    bh,cl
  42ab8a:	xchg   esp,eax
  42ab8b:	imul   eax,DWORD PTR [ecx+0x2ea90040],0xff830000
  42ab95:	inc    DWORD PTR [eax]
  42ab97:	sbb    BYTE PTR [ebx-0x39f63bb6],al
  42ab9d:	popf   
  42ab9e:	jmp    FWORD PTR [eax]
  42aba0:	test   al,0xff
  42aba2:	add    BYTE PTR [ebx-0x56760100],al
  42aba8:	jmp    FWORD PTR [ebp-0x5]
  42abab:	fimul  WORD PTR [edi-0x1c19ff83]
  42abb1:	inc    DWORD PTR [ebx+0xffcc00]
  42abb7:	aas    
  42abb8:	jmp    esi
  42abba:	(bad)  [esi-0x5976b0f0]
  42abc0:	rol    DWORD PTR [eax],1
  42abc2:	add    ah,cl
  42abc4:	inc    DWORD PTR [eax]
  42abc6:	mov    DWORD PTR [ebx],esi
  42abc8:	inc    DWORD PTR [edx+edx*1-0x76a0b8]
  42abcf:	xor    eax,0xff00f7
  42abd4:	add    bh,bh
  42abd6:	add    BYTE PTR [ebp-0x7d],cl
  42abd9:	push   0x1d035a2d
  42abde:	add    bh,al
  42abe0:	inc    ebp
  42abe1:	add    bh,bh
  42abe3:	cmp    edi,0xffffff89
  42abe6:	mov    DWORD PTR [edx],eax
  42abe8:	mov    DWORD PTR [eax+eiz*1],ebx
  42abeb:	mov    al,ds:0x19ffb550
  42abf0:	stos   BYTE PTR es:[edi],al
  42abf1:	(bad)  
  42abf2:	(bad)  
  42abf3:	(bad)  
  42abf4:	(bad)  
  42abf5:	dec    DWORD PTR [ecx+0x5bebff1e]
  42abfb:	jmp    0x42abf6
  42abfd:	add    bh,bh
  42abff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac00:	and    edi,edi
  42ac02:	(bad)  
  42ac03:	(bad)  
  42ac04:	inc    DWORD PTR [ebx-0xf7c1601]
  42ac0a:	mul    ebx
  42ac0c:	mov    fs,WORD PTR [edi]
  42ac0e:	call   DWORD PTR [edx+0x26]
  42ac11:	add    BYTE PTR [eax],al
  42ac13:	dec    esp
  42ac15:	inc    DWORD PTR [eax]
  42ac17:	dec    BYTE PTR [ecx-0x64c9ed78]
  42ac1d:	mov    esp,0x8912c8ff
  42ac22:	add    BYTE PTR [ebx-0x657c0100],al
  42ac28:	cmp    DWORD PTR [esi+0x65e496bf],0xffffff83
  42ac2f:	push   eax
  42ac30:	sahf   
  42ac31:	dec    esp
  42ac33:	(bad)  
  42ac34:	(bad)  
  42ac35:	(bad)  
  42ac36:	(bad)  
  42ac37:	jl     0x42ac39
  42ac39:	and    BYTE PTR [edi],bl
  42ac3b:	cli    
  42ac3c:	iret   
  42ac3d:	add    bh,bh
  42ac3f:	mov    ds:0x89000039,eax
  42ac44:	cmp    edi,0xffffffff
  42ac47:	dec    esp
  42ac48:	mov    DWORD PTR [esi+0x44026d73],esp
  42ac4e:	and    DWORD PTR [esi-0x767c4c],0xffffffff
  42ac55:	inc    DWORD PTR [eax]
  42ac57:	stos   DWORD PTR es:[edi],eax
  42ac58:	jmp    DWORD PTR [esi]
  42ac5a:	aad    0xf0
  42ac5c:	push   ss
  42ac5d:	mov    ebx,0xffb9b800
  42ac62:	(bad)  
  42ac63:	inc    DWORD PTR [eax]
  42ac65:	add    BYTE PTR [ebx-0x7980ff35],al
  42ac6b:	shl    eax,cl
  42ac6d:	inc    edx
  42ac6e:	add    BYTE PTR [eax],dl
  42ac70:	xchg   edi,eax
  42ac71:	(bad)  
  42ac72:	inc    DWORD PTR [eax]
  42ac74:	add    bh,bh
  42ac76:	add    BYTE PTR [edx],dl
  42ac78:	add    BYTE PTR [ebx-0x15d93c9],bl
  42ac7e:	(bad)  
  42ac7f:	(bad)  [eax]
  42ac81:	add    bh,bh
  42ac83:	add    BYTE PTR [ebx-0x4f007d],al
  42ac89:	(bad)
  42ac8c:	int3   
  42ac8d:	ja     0x42ac8e
  42ac8f:	test   bl,0xff
  42ac92:	inc    DWORD PTR [ebx+0x1a00ffff]
  42ac98:	mov    DWORD PTR [eax],esp
  42ac9a:	in     al,0x66
  42ac9c:	gs push ebp
  42ac9e:	add    BYTE PTR [ecx+edx*4],bh
  42aca1:	dec    DWORD PTR [ecx+0xffcc]
  42aca7:	(bad)  
  42aca9:	rcr    bl,1
  42acab:	inc    ebp
  42acac:	jp     0x42ad0d
  42acae:	add    BYTE PTR [ebx],ah
  42acb0:	or     eax,0x8300ffff
  42acb5:	(bad)  
  42acb6:	dec    DWORD PTR [eax-0x41aa7000]
  42acbc:	pop    edx
  42acbd:	add    al,0xff
  42acbf:	jno    0x42acd8
  42acc1:	add    BYTE PTR [ecx+0x83ff],cl
  42acc7:	dec    eax
  42acc8:	add    BYTE PTR [edi-0x6d],dl
  42accb:	sub    DWORD PTR [ebp-0x6b],edx
  42acce:	int3   
  42accf:	adc    al,0xa6
  42acd1:	add    bh,bh
  42acd3:	add    bh,bh
  42acd5:	(bad)  
  42acd6:	(bad)  
  42acd7:	mov    ebx,0xed1ca1ff
  42acdc:	lds    edi,FWORD PTR [ecx+0x0]
  42acdf:	sbb    DWORD PTR [edi-0x767c3400],edx
  42ace5:	inc    DWORD PTR [ebx-0x762f3355]
  42aceb:	imul   ecx,edx,0xffffffe9
  42acee:	inc    ecx
  42acf0:	clc    
  42acf1:	inc    DWORD PTR [ebx-0x7c000001]
  42acf7:	fld    QWORD PTR [ebx+0x28778c5f]
  42acfd:	into   
  42acfe:	int3   
  42acff:	push   DWORD PTR [edi+edi*8+0xccff]
  42ad06:	(bad)  
  42ad07:	fiadd  WORD PTR [eax]
  42ad09:	repz or eax,0xcc1d55fd
  42ad0f:	das    
  42ad10:	xchg   esp,eax
  42ad11:	inc    DWORD PTR [ebx-0x7c000100]
  42ad17:	pop    ebx
  42ad18:	dec    esp
  42ad1a:	xchg   edi,eax
  42ad1b:	cld    
  42ad1c:	dec    ebx
  42ad1d:	mov    ds:0x89cfcc00,eax
  42ad22:	inc    DWORD PTR [ebx-0xb010000]
  42ad28:	xor    ecx,0x22
  42ad2b:	in     eax,0xf8
  42ad2d:	inc    ebp
  42ad2e:	sub    ebp,0xfffffffa
  42ad31:	(bad)  
  42ad32:	inc    DWORD PTR [eax]
  42ad34:	inc    DWORD PTR [eax]
  42ad36:	add    BYTE PTR [ebp+0x0],ch
  42ad39:	push   ss
  42ad3a:	xchg   esp,eax
  42ad3b:	in     al,0xbb
  42ad3d:	jb     0x42ad3e
  42ad3f:	sub    eax,0xffcc008d
  42ad44:	cmp    edi,0xffffffff
  42ad47:	(bad)  
  42ad48:	dec    DWORD PTR [edi-0xf8aa35c]
  42ad4e:	inc    DWORD PTR [edx+0x5f]
  42ad51:	add    BYTE PTR [eax],al
  42ad53:	add    bh,bh
  42ad55:	(bad)  
  42ad56:	dec    DWORD PTR [edi+edi*8]
  42ad59:	popf   
  42ad5a:	mov    al,ds:0x893fd6b7
  42ad5f:	pop    esp
  42ad60:	inc    edi
  42ad61:	(bad)  
  42ad62:	(bad)  
  42ad63:	inc    DWORD PTR [eax]
  42ad65:	add    bh,bh
  42ad67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad68:	call   DWORD PTR [ecx-0x8]
  42ad6b:	jne    0x42adc6
  42ad6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad6e:	add    BYTE PTR [edx+eiz*4],bh
  42ad71:	(bad)  
  42ad72:	dec    DWORD PTR [ecx-0xa760034]
  42ad78:	xor    DWORD PTR [ebp+edx*2+0x5e],0x2a
  42ad7d:	int3   
  42ad7e:	add    BYTE PTR [esi-0x20],dh
  42ad81:	or     DWORD PTR [ecx-0x33760001],0xffffff82
  42ad88:	call   DWORD PTR [esi]
  42ad8a:	ds push cs
  42ad8c:	popa   
  42ad8d:	cli    
  42ad8e:	int3   
  42ad8f:	(bad)  
  42ad90:	jp     0x42ad92
  42ad92:	add    bh,bh
  42ad94:	(bad)  
  42ad95:	dec    esp
  42ad97:	mov    WORD PTR [ebx],cx
  42ad9a:	(bad)  
  42ad9b:	cli    
  42ad9c:	adc    eax,0x7701cc86
  42ada1:	mov    edi,edi
  42ada3:	(bad)  
  42ada4:	inc    DWORD PTR [ebx-0x3f008500]
  42adaa:	pop    esi
  42adab:	push   edi
  42adac:	pushf  
  42adad:	ret    0xa289
  42adb0:	lods   al,BYTE PTR ds:[esi]
  42adb1:	cmp    edi,0xffffffff
  42adb4:	dec    esp
  42adb6:	mov    DWORD PTR [esi+0x3a52c5ff],ebx
  42adbc:	inc    edi
  42adbd:	clc    
  42adbe:	jmp    edx
  42adc0:	cmp    bh,0xff
  42adc3:	cmp    edi,0x0
  42adc6:	inc    ebp
  42adc8:	call   FWORD PTR [eax]
  42adca:	das    
  42adcb:	aas    
  42adcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adcd:	out    dx,eax
  42adce:	sbb    DWORD PTR [edx-0x7668],0xffffffcc
  42add5:	add    bh,bh
  42add7:	mov    ah,0xff
  42add9:	dec    esp
  42adda:	push   esp
  42addb:	in     al,0x37
  42addd:	mov    edx,0xff620900
  42ade2:	(bad)  
  42ade3:	(bad)  
  42ade4:	inc    DWORD PTR [ebx+0x6e004800]
  42adea:	cs gs jge 0x42adc6
  42adee:	add    BYTE PTR [edi],ah
  42adf0:	sbb    BYTE PTR [ebx-0xffff01],al
  42adf6:	inc    DWORD PTR [eax+eax*1]
  42adf9:	shl    DWORD PTR [eax],cl
  42adfb:	and    ch,BYTE PTR [edx+0x1f300f3]
  42ae01:	inc    DWORD PTR [eax]
  42ae03:	(bad)  
  42ae04:	inc    DWORD PTR [eax]
  42ae06:	add    BYTE PTR ds:0x2ac703ff,bh
  42ae0c:	nop
  42ae0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae0e:	and    esi,0xffffffa0
  42ae11:	inc    DWORD PTR [eax]
  42ae13:	(bad)  
  42ae14:	(bad)  
  42ae15:	inc    DWORD PTR [ebx+0x2069000b]
  42ae1b:	adc    eax,0x1ffbfa1
  42ae20:	mov    esi,0xff00ff
  42ae25:	(bad)  
  42ae26:	(bad)  
  42ae27:	cld    
  42ae28:	add    BYTE PTR [ebx],ah
  42ae2a:	in     eax,0x7b
  42ae2c:	fild   WORD PTR [ebx-0x6a52]
  42ae33:	int3   
  42ae34:	mov    edi,edi
  42ae36:	mov    ecx,edi
  42ae38:	cmp    DWORD PTR [ecx-0x75b93997],0xffffffff
  42ae3f:	hlt    
  42ae40:	adc    DWORD PTR [eax],eax
  42ae42:	dec    esp
  42ae44:	int3   
  42ae45:	add    BYTE PTR [eax],al
  42ae47:	mov    eax,DWORD PTR [eax]
  42ae49:	mov    cl,0xd8
  42ae4b:	std    
  42ae4c:	fidivr WORD PTR [eax+0x0]
  42ae4f:	out    dx,al
  42ae50:	mov    edx,0xff0000ff
  42ae55:	(bad)  
  42ae56:	inc    DWORD PTR [edx]
  42ae58:	add    BYTE PTR [ebx],bh
  42ae5a:	call   0xd4eb:0xffe476f6
  42ae61:	add    ah,cl
  42ae63:	inc    DWORD PTR [eax]
  42ae65:	(bad)  
  42ae66:	(bad)  
  42ae67:	ds add ah,dh
  42ae6a:	lea    esp,[ebx]
  42ae6c:	(bad)
  42ae70:	clc    
  42ae71:	add    bh,bh
  42ae73:	cmp    edi,0xffffff89
  42ae76:	jmp    esp
  42ae78:	add    bl,ah
  42ae7a:	pop    edx
  42ae7b:	retf   0x7e7c
  42ae7e:	sub    DWORD PTR [edx],0x2c
  42ae81:	(bad)  
  42ae82:	inc    DWORD PTR [eax]
  42ae84:	inc    DWORD PTR [eax]
  42ae86:	int3   
  42ae87:	(bad)  
  42ae89:	pop    ecx
  42ae8a:	cmp    al,ch
  42ae8c:	(bad)  
  42ae8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae8e:	sub    edi,0x61
  42ae91:	add    ah,cl
  42ae93:	int3   
  42ae94:	add    DWORD PTR [eax],0xffffff89
  42ae97:	(bad)  
  42ae98:	int3   
  42ae99:	arpl   WORD PTR [esi],bx
  42ae9b:	jmp    0x42af02
  42ae9d:	adc    edi,edi
  42ae9f:	push   ebx
  42aea0:	pop    ss
  42aea1:	cmp    edi,0xffffffff
  42aea4:	(bad)  
  42aea5:	(bad)  
  42aea6:	call   FWORD PTR [eax+0x7d1a74ff]
  42aeac:	retf   0x83e5
  42aeaf:	xchg   esi,eax
  42aeb0:	aad    0xff
  42aeb2:	dec    esp
  42aeb4:	(bad)  
  42aeb5:	(bad)  
  42aeb6:	inc    DWORD PTR [ebx-0xdb7b800]
  42aebc:	int3   
  42aebd:	dec    ecx
  42aebe:	int3   
  42aebf:	sbb    al,0xad
  42aec1:	mov    DWORD PTR [eax],eax
  42aec3:	cmp    edi,0x0
  42aec6:	jmp    FWORD PTR [ebx+0x0]
  42aec9:	push   ds
  42aeca:	push   ds
  42aecb:	ret    
  42aecc:	das    
  42aecd:	xchg   esp,eax
  42aece:	add    DWORD PTR ds:0xffffff25,0xffffffff
  42aed5:	inc    DWORD PTR [eax]
  42aed7:	cld    
  42aed8:	mov    edi,ebx
  42aeda:	ins    DWORD PTR es:[edi],dx
  42aedb:	jo     0x42ae8e
  42aedd:	dec    eax
  42aede:	sub    DWORD PTR [ebp+edx*2-0x1],0x0
  42aee3:	add    BYTE PTR [ebx-0x7cb7ff7d],al
  42aee9:	fst    DWORD PTR [edi-0xa75806]
  42aeef:	int    0xb5
  42aef1:	inc    DWORD PTR [eax]
  42aef3:	(bad)  
  42aef4:	(bad)  
  42aef5:	inc    DWORD PTR [eax]
  42aef7:	clc    
  42aef8:	adc    DWORD PTR [esi-0xd],0x45
  42aefc:	(bad)  
  42aefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aefe:	(bad)  
  42aeff:	call   FWORD PTR [ebx+0x0]
  42af02:	int3   
  42af03:	inc    DWORD PTR [eax]
  42af05:	dec    DWORD PTR [ecx+0x70f8379]
  42af0b:	cli    
  42af0c:	xchg   edx,eax
  42af0d:	jnp    0x42ae98
  42af0f:	jle    0x42af11
  42af11:	cmp    edi,0xffffffff
  42af14:	inc    DWORD PTR [ebx-0x76002f00]
  42af1a:	test   edi,edx
  42af1c:	push   ebx
  42af1d:	adc    edi,edi
  42af1f:	cmp    DWORD PTR [ecx-0x76007601],ebp
  42af25:	(bad)  
  42af26:	call   FWORD PTR [edx+0x0]
  42af29:	in     eax,dx
  42af2a:	and    eax,0xcca58763
  42af2f:	rcl    esp,1
  42af31:	(bad)  
  42af32:	inc    DWORD PTR [ebx+0x30cc8300]
  42af38:	call   edx
  42af3a:	icebp  
  42af3b:	out    dx,eax
  42af3c:	mov    bl,ch
  42af3e:	call   ebx
  42af40:	cmp    edi,edi
  42af42:	cmp    edi,0xffffffff
  42af45:	mov    edi,edi
  42af47:	jns    0x42af48
  42af49:	cld    
  42af4a:	cmp    ebp,edi
  42af4c:	xlat   BYTE PTR ds:[ebx]
  42af4d:	mov    ds:0xff7817ff,eax
  42af52:	add    DWORD PTR [eax],0x0
  42af55:	inc    DWORD PTR [eax]
  42af57:	out    0x83,eax
  42af59:	xor    eax,0x66abe063
  42af5e:	xor    DWORD PTR [edi+0x37],0x0
  42af62:	inc    DWORD PTR [eax]
  42af64:	inc    DWORD PTR [eax]
  42af66:	add    BYTE PTR [ebp-0x1],bh
  42af69:	xchg   ebp,eax
  42af6a:	(bad)  
  42af6b:	(bad)  
  42af6c:	dec    DWORD PTR [ecx-0x1ff7601]
  42af72:	mov    DWORD PTR [edx+0xecff7f],edx
  42af78:	stos   DWORD PTR es:[edi],eax
  42af79:	sub    cl,ah
  42af7b:	cmp    edi,0xffffff89
  42af7e:	sub    BYTE PTR [edx],al
  42af80:	int3   
  42af81:	pop    ebp
  42af82:	call   FWORD PTR [edi]
  42af84:	fild   DWORD PTR [eax]
  42af86:	add    BYTE PTR [bp+di-0xd7],dl
  42af8b:	inc    DWORD PTR [eax]
  42af8d:	jmp    edx
  42af8f:	jo     0x42af90
  42af91:	(bad)  
  42af92:	(bad)  
  42af93:	out    dx,eax
  42af94:	xor    DWORD PTR [eax],eax
  42af96:	retf   
  42af97:	add    DWORD PTR [edi+0x58],0xffffffff
  42af9b:	add    bh,bh
  42af9d:	inc    DWORD PTR [ecx]
  42af9f:	outs   dx,BYTE PTR ds:[esi]
  42afa0:	mov    DWORD PTR [edi-0x33d7f801],edi
  42afa6:	jg     0x42afa7
  42afa8:	(bad)  
  42afa9:	retf   0xffff
  42afac:	(bad)  
  42afad:	jmp    DWORD PTR [esi]
  42afaf:	pop    esi
  42afb0:	int3   
  42afb1:	mov    edi,edi
  42afb3:	(bad)  {k6}
  42afb8:	inc    ebp
  42afb9:	sbb    DWORD PTR [eax],eax
  42afbb:	inc    DWORD PTR [eax]
  42afbd:	call   FWORD PTR [ecx-0x7b]
  42afc0:	push   DWORD PTR [eax+eax*1-0x7c]
  42afc4:	in     al,0x89
  42afc6:	lods   eax,DWORD PTR ds:[esi]
  42afc7:	mov    DWORD PTR [ebx+0xffffa6],ebp
  42afcd:	add    BYTE PTR [ebx],dl
  42afcf:	inc    ebx
  42afd0:	call   DWORD PTR [edx-0x1]
  42afd3:	cmc    
  42afd4:	pop    es
  42afd5:	int3   
  42afd6:	jo     0x42afa4
  42afd8:	sbb    DWORD PTR [edx-0x7cff01],ebx
  42afde:	inc    ecx
  42afdf:	ja     0x42af64
  42afe1:	in     eax,dx
  42afe2:	add    BYTE PTR [edi+eiz*1+0x6dcc8083],ah
  42afe9:	int    0x0
  42afeb:	mov    DWORD PTR [ebx+0x6e700],eax
  42aff1:	mov    edi,edi
  42aff3:	enter  0xbc,0x8
  42aff7:	int3   
  42aff8:	xor    al,0x3c
  42affa:	inc    DWORD PTR [ebx+0x6865ff00]
  42b000:	inc    esp
  42b002:	add    BYTE PTR [ebp-0x3e],dh
  42b005:	dec    DWORD PTR [ebx-0x1]
  42b008:	add    ebx,DWORD PTR [edi+edi*8]
  42b00b:	cmp    edi,0xffffff89
  42b00e:	xor    bl,BYTE PTR [ebp-0x1]
  42b011:	mov    ds:0xffaf9c89,al
  42b016:	pop    es
  42b017:	add    ah,ch
  42b019:	adc    al,0xff
  42b01b:	(bad)  
  42b01c:	(bad)  
  42b01d:	dec    DWORD PTR [edi-0x55ffe2]
  42b023:	or     edi,DWORD PTR [ebx-0x1]
  42b026:	xchg   edi,eax
  42b027:	cmp    esp,0xfffffff9
  42b02a:	inc    DWORD PTR [eax]
  42b02c:	inc    DWORD PTR [ebx-0x2100c0e1]
  42b032:	int3   
  42b033:	ss ud0 eax,eax
  42b037:	add    BYTE PTR [ecx+0xcc008e],ch
  42b03d:	add    bh,ch
  42b03f:	call   0xff64:0xa0ff48cc
  42b046:	ja     0x42b047
  42b048:	sub    ebp,esp
  42b04a:	(bad)  
  42b04b:	(bad)  
  42b04c:	(bad)  
  42b04d:	dec    DWORD PTR [ecx-0x8a000c]
  42b053:	xchg   ecx,eax
  42b054:	xchg   bh,bh
  42b056:	pusha  
  42b057:	dec    DWORD PTR [eax-0x337633b6]
  42b05d:	add    BYTE PTR [esi-0x80],ch
  42b060:	(bad)  
  42b061:	(bad)  
  42b063:	mov    BYTE PTR [edi],ch
  42b065:	push   DWORD PTR [edi+edi*8-0x76ffc07f]
  42b06c:	dec    DWORD PTR [ecx+0x5cff3a6b]
  42b072:	add    BYTE PTR [edx-0x76f27cbc],ch
  42b078:	cmp    eax,ebp
  42b07a:	(bad)  
  42b07b:	(bad)  
  42b07c:	inc    DWORD PTR [eax]
  42b07e:	fmul   QWORD PTR [eax-0x7d]
  42b081:	cwde   
  42b082:	mov    DWORD PTR [ecx+0xb6ffc6],edx
  42b088:	ret    
  42b089:	and    eax,0x8300ff
  42b08e:	add    DWORD PTR [ecx+0x41ff8e00],esi
  42b094:	xor    bh,bh
  42b096:	int    0x0
  42b098:	shl    BYTE PTR [edi],1
  42b09a:	int3   
  42b09b:	(bad)  
  42b09c:	dec    DWORD PTR [ecx+0x5b00e75f]
  42b0a2:	add    BYTE PTR [eax-0x33a8003f],cl
  42b0a8:	outs   dx,BYTE PTR ds:[esi]
  42b0a9:	add    esp,ecx
  42b0ab:	add    bh,bh
  42b0ad:	push   DWORD PTR [eax+0x2f]
  42b0b0:	add    ah,dl
  42b0b2:	add    BYTE PTR [ecx-0x62],ah
  42b0b5:	inc    DWORD PTR [edi+edi*8-0x6a]
  42b0b9:	dec    ebx
  42b0ba:	(bad)  
  42b0bb:	dec    DWORD PTR [ecx-0xeabe01]
  42b0c1:	jge    0x42b0c2
  42b0c3:	sbb    al,0xb9
  42b0c5:	int3   
  42b0c6:	lods   eax,DWORD PTR ds:[esi]
  42b0c7:	add    DWORD PTR [ebp+0xffffa0],0xffffffff
  42b0ce:	(bad)  
  42b0cf:	mov    BYTE PTR [ebx+0x71970045],al
  42b0d5:	add    DWORD PTR [ecx-0x39f87d],0x0
  42b0dc:	(bad)  
  42b0dd:	dec    DWORD PTR [ebx+ecx*4]
  42b0e0:	jmp    FWORD PTR [ebx]
  42b0e2:	jmp    ebx
  42b0e4:	xor    eax,0x5bffecff
  42b0e9:	out    0x0,al
  42b0eb:	int3   
  42b0ec:	(bad)  
  42b0ed:	(bad)  
  42b0ee:	jp     0x42b0da
  42b0f0:	dec    DWORD PTR [edi]
  42b0f2:	jmp    DWORD PTR ds:0x97ffc0
  42b0f8:	imul   esi,DWORD PTR [esi-0x337c34],0xf8895494
  42b102:	jmp    DWORD PTR [eax-0xdb00c0]
  42b108:	adc    dl,BYTE PTR [esi-0x33ff0001]
  42b10e:	iret   
  42b10f:	mov    ch,0x0
  42b111:	sub    ecx,DWORD PTR [ecx+0x15ffe5b2]
  42b117:	add    edx,0xffffffff
  42b11a:	add    BYTE PTR [ebx-0x25b4767d],al
  42b120:	(bad)  
  42b121:	cmp    eax,DWORD PTR [ebx+0x7b00365c]
  42b127:	(bad)  
  42b128:	in     al,dx
  42b129:	aaa    
  42b12a:	mov    DWORD PTR [eax],eax
  42b12c:	(bad)  
  42b12d:	jmp    DWORD PTR [edx+0xda0050]
  42b133:	(bad)  
  42b134:	gs mov esp,ebp
  42b137:	add    DWORD PTR [edx-0x7600003f],0xffffffff
  42b13e:	jmp    0x42b0e6
  42b140:	(bad)  
  42b141:	jns    0x42b143
  42b143:	push   ebp
  42b144:	stos   BYTE PTR es:[edi],al
  42b145:	jmp    esp
  42b147:	add    BYTE PTR [esi],ch
  42b149:	xchg   esp,ecx
  42b14b:	add    DWORD PTR [eax],0xffffffff
  42b14e:	xchg   ebx,edx
  42b150:	jmp    FWORD PTR [esi]
  42b152:	call   FWORD PTR [eax-0x7ca000b6]
  42b158:	cmp    dh,BYTE PTR [eax+0xccff00]
  42b15e:	pop    ds
  42b15f:	jmp    0x42b160
  42b161:	mov    ah,0xcc
  42b163:	(bad)  
  42b165:	add    BYTE PTR [ebp-0x7d],ch
  42b168:	(bad)  
  42b169:	jp     0x42b16a
  42b16b:	add    ah,cl
  42b16d:	jmp    ebx
  42b16f:	and    al,0xff
  42b171:	xor    eax,0xcc5b8583
  42b176:	push   ecx
  42b177:	jmp    FWORD PTR [esp+eax*4-0x337c0100]
  42b17e:	adc    eax,0x89290066
  42b183:	jns    0x42b10a
  42b185:	jmp    FWORD PTR [ebp-0xffd034]
  42b18b:	int3   
  42b18c:	cmp    edi,0x17
  42b18f:	lods   al,BYTE PTR ds:[esi]
  42b190:	add    bl,bh
  42b192:	(bad)  
  42b193:	call   FWORD PTR [esi-0xaffe000]
  42b199:	cmp    al,0x89
  42b19b:	(bad)  
  42b19c:	(bad)  
  42b19d:	(bad)  
  42b19e:	jg     0x42b203
  42b1a0:	inc    eax
  42b1a2:	sbb    DWORD PTR [edx+0xb189d9],0x1d
  42b1a9:	mov    eax,ds:0xff00ff00
  42b1ae:	test   DWORD PTR [esi-0x1],esi
  42b1b1:	push   ebp
  42b1b2:	add    BYTE PTR [esi-0x78],dh
  42b1b5:	add    edi,0xffffff83
  42b1b8:	dec    ecx
  42b1b9:	jge    0x42b1bb
  42b1bb:	cmp    edi,0xffffff89
  42b1be:	stos   DWORD PTR es:[edi],eax
  42b1bf:	cmp    edi,edi
  42b1c1:	ret    0x75ff
  42b1c4:	(bad)  
  42b1c6:	xlat   BYTE PTR ds:[ebx]
  42b1c7:	int3   
  42b1c8:	sub    eax,0xff00ff67
  42b1cd:	int3   
  42b1ce:	ret    
  42b1cf:	add    eax,0xcbff9d83
  42b1d4:	cmp    eax,0xd6004883
  42b1d9:	mov    al,0x89
  42b1db:	add    DWORD PTR [ebx-0x934501],0x53
  42b1e2:	add    BYTE PTR [esi],cl
  42b1e4:	int    0xff
  42b1e6:	inc    DWORD PTR [ebx-0x33ffeb65]
  42b1ec:	or     esp,0xffffff8a
  42b1ef:	pop    ds
  42b1f0:	and    ecx,0xffffffff
  42b1f3:	inc    ebp
  42b1f4:	mov    bl,0xff
  42b1f6:	lock add BYTE PTR [edi],dl
  42b1f9:	stos   DWORD PTR es:[edi],eax
  42b1fa:	(bad)  
  42b1fb:	inc    DWORD PTR [ebx-0x3f0000]
  42b201:	add    eax,0xff2ffdff
  42b206:	pop    ecx
  42b207:	call   ecx
  42b209:	cmp    bh,bh
  42b20b:	add    BYTE PTR [eax],al
  42b20d:	jmp    ebp
  42b20f:	ins    DWORD PTR es:[edi],dx
  42b210:	inc    DWORD PTR [edi-0x7d]
  42b213:	pushw  0x0
  42b216:	(bad)  
  42b217:	jmp    edx
  42b219:	pop    edx
  42b21a:	add    DWORD PTR [eax],0x0
  42b21d:	call   FWORD PTR [eax]
  42b21f:	pop    eax
  42b220:	push   esi
  42b222:	jmp    DWORD PTR [ebp+0xd2cc3d]
  42b228:	test   dl,ch
  42b22a:	(bad)  
  42b22b:	inc    DWORD PTR [eax]
  42b22d:	add    ch,ch
  42b22f:	ins    BYTE PTR es:[edi],dx
  42b230:	xor    DWORD PTR [ebp-0x34],0x24
  42b234:	(bad)  
  42b235:	inc    DWORD PTR [ebx-0x34]
  42b238:	aaa    
  42b239:	test   eax,0x83ffff
  42b23e:	fwait
  42b23f:	sbb    al,0x0
  42b241:	dec    ebx
  42b242:	jmp    DWORD PTR [edx-0x16]
  42b245:	call   FWORD PTR [eax-0x1]
  42b248:	jmp    0x42b21b
  42b24a:	(bad)  
  42b24b:	inc    DWORD PTR [ebx-0x76ba5100]
  42b251:	sub    eax,0xffdd48ff
  42b256:	cmp    eax,DWORD PTR [eax]
  42b258:	cli    
  42b259:	(bad)  
  42b25b:	add    ah,cl
  42b25d:	int3   
  42b25e:	xor    al,0xdb
  42b260:	add    BYTE PTR [edi+edi*8],ch
  42b263:	xor    ax,WORD PTR [eax]
  42b266:	fs int3 
  42b268:	mov    edx,DWORD PTR [ecx]
  42b26a:	inc    DWORD PTR [eax]
  42b26c:	cmp    edi,0x27
  42b26f:	jmp    0x42b23d
  42b271:	enter  0xa9ff,0x89
  42b275:	int3   
  42b276:	cld    
  42b277:	mov    DWORD PTR [edx+ecx*1-0x7600ff01],edx
  42b27e:	push   edi
  42b27f:	jno    0x42b280
  42b281:	mov    ds:0xccb1c4cc,eax
  42b286:	in     eax,0xff
  42b288:	and    edx,esi
  42b28a:	add    bh,bh
  42b28c:	inc    DWORD PTR [ebx+0x6ff2767]
  42b292:	(bad)  
  42b293:	js     0x42b265
  42b295:	push   DWORD PTR [edx]
  42b297:	push   DWORD PTR [ebx-0x39]
  42b29d:	dec    DWORD PTR [ecx+eax*4-0x1]
  42b2a1:	icebp  
  42b2a2:	xor    DWORD PTR [edx],0x25
  42b2a5:	jmp    DWORD PTR [esi-0x1]
  42b2a8:	aad    0x59
  42b2aa:	cmp    edi,0xffffffff
  42b2ad:	call   DWORD PTR [esi-0x38]
  42b2b0:	add    BYTE PTR [edi-0xd8a101],dl
  42b2b6:	push   esp
  42b2b7:	jmp    ebp
  42b2b9:	stos   BYTE PTR es:[edi],al
  42b2ba:	dec    esp
  42b2bc:	cmp    edi,0xfffffff1
  42b2bf:	sub    al,0x83
  42b2c1:	daa    
  42b2c2:	xor    DWORD PTR [ebp+0x35],0x0
  42b2c6:	ud0    ebp,esi
  42b2c9:	imul   eax,DWORD PTR [ebx+0x35ffffff],0x37ff37
  42b2d3:	or     al,0x4c
  42b2d5:	add    BYTE PTR [edx-0x1],dh
  42b2d8:	lods   eax,DWORD PTR ds:[esi]
  42b2d9:	mov    ecx,0xff00ccff
  42b2de:	pop    es
  42b2df:	idiv   edi
  42b2e1:	push   esp
  42b2e2:	add    BYTE PTR [ecx],dl
  42b2e4:	iret   
  42b2e5:	add    BYTE PTR [edi+edi*8+0x6b],dh
  42b2e9:	mov    ecx,0x83ffff
  42b2ee:	and    DWORD PTR [ebx+0x25ff6483],0xeaff4a
  42b2f8:	clc    
  42b2f9:	add    BYTE PTR [eax],0x0
  42b2fc:	(bad)  
  42b2fd:	(bad)  
  42b2fe:	(bad)  
  42b300:	inc    esp
  42b302:	add    ah,ah
  42b304:	adc    ecx,esp
  42b306:	xlat   BYTE PTR ds:[ebx]
  42b307:	add    BYTE PTR [ecx],dl
  42b309:	xor    cl,BYTE PTR [ecx-0x100]
  42b30f:	push   ds
  42b310:	push   DWORD PTR [ebx+eax*4-0x29008a6f]
  42b317:	int3   
  42b318:	pop    ds
  42b319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b31a:	add    bh,bh
  42b31c:	inc    DWORD PTR [eax]
  42b31e:	gs fcos 
  42b321:	and    al,BYTE PTR [eax]
  42b323:	mov    dh,0x6f
  42b325:	add    BYTE PTR [ebx],al
  42b327:	add    ch,dh
  42b329:	jbe    0x42b32a
  42b32b:	int3   
  42b32c:	inc    DWORD PTR [eax]
  42b32e:	mov    edi,0xb00080
  42b333:	sbb    cl,dl
  42b335:	push   DWORD PTR ds:0xe98cff
  42b33b:	add    bh,bh
  42b33d:	dec    DWORD PTR [edi-0x56]
  42b340:	add    bl,bh
  42b342:	add    BYTE PTR [ebx],cl
  42b344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b345:	(bad)  
  42b346:	mov    esi,0xff469000
  42b34b:	cmp    edi,0xffffffff
  42b34e:	in     al,0x68
  42b350:	add    al,dh
  42b352:	jmp    ebp
  42b354:	xor    al,0xff
  42b356:	mov    bh,0x89
  42b358:	ins    DWORD PTR es:[edi],dx
  42b359:	test   eax,0xffffffcc
  42b35e:	fadd   DWORD PTR [edi-0x1]
  42b361:	adc    al,0x0
  42b363:	test   eax,0xff85ffca
  42b368:	pop    ebx
  42b369:	in     eax,dx
  42b36a:	inc    DWORD PTR [eax]
  42b36c:	(bad)  
  42b36d:	call   DWORD PTR [esi]
  42b36f:	ret    
  42b370:	and    DWORD PTR [eax],0x0
  42b373:	cmp    DWORD PTR [edi-0x1],eax
  42b376:	verw   WORD PTR [edi+0xffffb3]
  42b37d:	sbb    DWORD PTR [ebx-0x46],0x0
  42b381:	mov    WORD PTR [eax],es
  42b383:	ins    DWORD PTR es:[edi],dx
  42b384:	sahf   
  42b385:	call   DWORD PTR [edi+0x1a9fff]
  42b38b:	(bad)  
  42b38c:	inc    DWORD PTR [eax]
  42b38e:	cmp    bh,BYTE PTR [edx]
  42b390:	inc    ebx
  42b392:	inc    DWORD PTR [edx-0xdf7c0c]
  42b398:	cwde   
  42b399:	test   ah,0xff
  42b39c:	(bad)  
  42b39d:	inc    esp
  42b39f:	popa   
  42b3a0:	jmp    FWORD PTR [edi+0x8e5000]
  42b3a6:	or     edi,edi
  42b3a8:	sbb    BYTE PTR [ecx],dl
  42b3aa:	int3   
  42b3ab:	int3   
  42b3ac:	dec    esp
  42b3ae:	mov    ecx,0x83230070
  42b3b3:	sub    BYTE PTR [ecx+0x19007883],cl
  42b3b9:	es (bad) 
  42b3bb:	dec    DWORD PTR [ecx-0xcdc301]
  42b3c1:	fild   WORD PTR [ebx-0x2c00852d]
  42b3c7:	int3   
  42b3c8:	add    edx,edi
  42b3ca:	add    ah,cl
  42b3cc:	cmp    edi,0xffffffa7
  42b3cf:	cmc    
  42b3d0:	(bad)  
  42b3d1:	jg     0x42b35c
  42b3d3:	out    0x47,al
  42b3d5:	add    ch,ah
  42b3d7:	add    dh,cl
  42b3d9:	ja     0x42b3da
  42b3db:	inc    DWORD PTR [eax]
  42b3dd:	cmp    edi,0xd
  42b3e0:	mov    DWORD PTR [edx-0x61eb00],ecx
  42b3e6:	inc    edi
  42b3e7:	int3   
  42b3e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3e9:	inc    esi
  42b3ea:	inc    DWORD PTR [ebx-0x3b4d0100]
  42b3f0:	push   edx
  42b3f2:	add    DWORD PTR [ecx-0x7c447cbd],0xffffffa7
  42b3f9:	in     al,0x0
  42b3fb:	(bad)  
  42b3fc:	inc    DWORD PTR [ebx+0x3dccb29a]
  42b402:	sub    DWORD PTR [eax],0xe
  42b405:	add    BYTE PTR [ebp+0x2e49ff],bh
  42b40b:	(bad)  
  42b40c:	dec    esp
  42b40e:	cli    
  42b40f:	sar    bh,cl
  42b411:	popf   
  42b412:	(bad)  
  42b413:	jns    0x42b3c4
  42b415:	(bad)  
  42b416:	fdivr  st,st(7)
  42b418:	clc    
  42b419:	adc    bh,bh
  42b41b:	(bad)  
  42b41c:	(bad)  
  42b41d:	call   esp
  42b41f:	mov    al,0x0
  42b421:	jne    0x42b422
  42b423:	not    DWORD PTR [edi-0x42ffc900]
  42b429:	and    BYTE PTR [eax],al
  42b42b:	dec    esp
  42b42d:	jmp    FWORD PTR [esi+eiz*8-0x1]
  42b431:	sbb    edi,edi
  42b433:	adc    BYTE PTR [edx-0x1],dh
  42b436:	mov    ah,0x0
  42b438:	push   esp
  42b439:	fild   WORD PTR [eax]
  42b43b:	(bad)  
  42b43c:	inc    DWORD PTR [eax]
  42b43e:	jl     0x42b4a9
  42b440:	(bad)  
  42b441:	std    
  42b442:	xor    DWORD PTR [edx],0xffffffdd
  42b445:	call   esp
  42b447:	dec    DWORD PTR ds:0xff008396
  42b44d:	call   FWORD PTR [eax+edx*2-0x77]
  42b451:	bound  eax,QWORD PTR [eax]
  42b453:	dec    esp
  42b454:	add    edi,edi
  42b456:	adc    bh,bh
  42b458:	dec    esp
  42b459:	mov    esp,0x0
  42b45e:	sbb    eax,DWORD PTR [esi]
  42b460:	add    BYTE PTR [ebx+0xbf8dff],dl
  42b466:	mov    BYTE PTR [ebx-0xff83],0x0
  42b46d:	add    BYTE PTR [ebp-0x7c2cff01],ch
  42b473:	xchg   edx,eax
  42b474:	ja     0x42b475
  42b476:	les    eax,FWORD PTR [eax]
  42b478:	or     al,0x3e
  42b47a:	(bad)  
  42b47b:	dec    esp
  42b47d:	jmp    FWORD PTR [ebp-0x3366ffa8]
  42b483:	sub    eax,0x388923
  42b488:	or     DWORD PTR [ebp+0x0],edi
  42b48b:	dec    esp
  42b48d:	add    BYTE PTR [edi+0x3f],ah
  42b490:	add    BYTE PTR [ebx-0x7d],cl
  42b493:	loop   0x42b442
  42b495:	add    BYTE PTR [edx],al
  42b497:	mov    DWORD PTR [edx-0x2e],eax
  42b49a:	add    DWORD PTR [ebx-0x36c60000],0x0
  42b4a1:	add    ecx,DWORD PTR [ecx-0x2bff0e26]
  42b4a7:	add    BYTE PTR [eax+0xff894e],dh
  42b4ad:	inc    esi
  42b4af:	stc    
  42b4b0:	add    BYTE PTR [edi+edi*8+0x4f009d17],cl
  42b4b7:	sub    DWORD PTR [ebp-0xbb],0xffffffff
  42b4be:	jmp    0x2742:0xffab8348
  42b4c5:	dec    DWORD PTR [edx-0x1]
  42b4c8:	repz cmp bh,bh
  42b4cb:	inc    DWORD PTR [eax]
  42b4cd:	int3   
  42b4ce:	add    DWORD PTR [eax-0x7d],eax
  42b4d1:	jb     0x42b4d2
  42b4d3:	xchg   ecx,eax
  42b4d4:	in     al,dx
  42b4d5:	add    BYTE PTR [edi],dh
  42b4d7:	push   edx
  42b4d9:	adc    bh,bh
  42b4db:	cmp    edi,0xffffffcc
  42b4de:	xchg   ecx,eax
  42b4df:	out    0x89,eax
  42b4e1:	fadd   QWORD PTR [ebx+0x1300b79f]
  42b4e7:	add    BYTE PTR [ecx-0x69],dl
  42b4ea:	cmp    edi,0xffffff89
  42b4ed:	int3   
  42b4ee:	xchg   esp,eax
  42b4ef:	call   FWORD PTR ss:[eax+0x0]
  42b4f3:	inc    ebp
  42b4f4:	arpl   di,di
  42b4f6:	test   ah,0x74
  42b4f9:	test   edi,edi
  42b4fb:	int3   
  42b4fc:	add    BYTE PTR [eax],al
  42b4fe:	xchg   esi,eax
  42b4ff:	sar    bh,cl
  42b501:	adc    eax,0xffb85900
  42b506:	pop    esi
  42b507:	push   DWORD PTR [ecx+0x89ff53]
  42b50d:	(bad)  
  42b50e:	(bad)  
  42b510:	add    BYTE PTR [edx],ch
  42b512:	call   FWORD PTR [edx]
  42b514:	push   0xca83b9ff
  42b519:	adc    bh,bh
  42b51b:	add    bh,bh
  42b51d:	mov    DWORD PTR [ebx-0x57],eax
  42b520:	push   DWORD PTR [ecx-0x1]
  42b523:	push   0x4c
  42b525:	add    BYTE PTR [eax-0x7ce5ef01],dh
  42b52b:	(bad)  
  42b52c:	dec    esp
  42b52e:	push   es
  42b52f:	and    BYTE PTR [eax],al
  42b531:	mov    ah,0xff
  42b533:	sbb    esi,DWORD PTR [eax]
  42b535:	call   DWORD PTR [esi-0x1]
  42b538:	dec    edx
  42b539:	mov    edi,edi
  42b53b:	inc    DWORD PTR [eax]
  42b53d:	jmp    esp
  42b53f:	push   edx
  42b540:	or     DWORD PTR [edi+0x75b900],0x7a
  42b547:	add    ch,al
  42b549:	retf   
  42b54a:	add    bh,bh
  42b54c:	int3   
  42b54d:	dec    DWORD PTR [ebp+0x39]
  42b550:	or     DWORD PTR [ecx],0x0
  42b553:	jmp    0x6944:0xff4aff9b
  42b55a:	add    bh,bh
  42b55c:	add    BYTE PTR [eax],al
  42b55e:	jne    0x42b5cd
  42b560:	inc    DWORD PTR [esi]
  42b562:	add    BYTE PTR [ecx+0x5e],bl
  42b565:	jmp    DWORD PTR [ecx-0x7d]
  42b568:	outs   dx,DWORD PTR ds:[esi]
  42b569:	(bad)  
  42b56b:	(bad)  
  42b56c:	inc    DWORD PTR [eax]
  42b56e:	lods   eax,DWORD PTR ds:[esi]
  42b56f:	xor    al,0xff
  42b571:	(bad)  
  42b572:	int3   
  42b573:	dec    esp
  42b574:	xchg   edi,eax
  42b575:	dec    DWORD PTR [eax+0x0]
  42b578:	test   BYTE PTR [eax+0x890083],dl
  42b57e:	xlat   BYTE PTR ds:[ebx]
  42b57f:	push   ds
  42b580:	add    BYTE PTR [edi],bl
  42b582:	add    BYTE PTR ds:0xfff000f4,dh
  42b588:	jmp    0x8441b61b
  42b58d:	int3   
  42b58e:	dec    ebp
  42b58f:	std    
  42b590:	call   DWORD PTR [ebx-0xd89601]
  42b596:	and    bh,bh
  42b598:	in     eax,0xd
  42b59a:	add    DWORD PTR [eax],0xffffffff
  42b59d:	(bad)  
  42b59e:	in     eax,dx
  42b59f:	lods   al,BYTE PTR ds:[esi]
  42b5a0:	adc    DWORD PTR [ecx-0x33346201],0x6b
  42b5a7:	cmp    DWORD PTR [ecx+0x3b],0xffffffff
  42b5ab:	dec    esp
  42b5ad:	call   FWORD PTR [edx]
  42b5af:	sbb    bh,bh
  42b5b1:	fdivr  st,st(7)
  42b5b3:	lods   al,BYTE PTR ds:[esi]
  42b5b4:	mov    bh,bh
  42b5b6:	into   
  42b5b7:	add    bl,ah
  42b5b9:	(bad)  
  42b5ba:	inc    DWORD PTR [eax]
  42b5bc:	int3   
  42b5bd:	inc    DWORD PTR [ebx]
  42b5bf:	out    dx,eax
  42b5c0:	push   DWORD PTR [eax]
  42b5c2:	push   eax
  42b5c4:	imul   edi,edi,0xa9e0ff1f
  42b5ca:	(bad)  
  42b5cb:	(bad)  
  42b5cc:	inc    DWORD PTR [eax]
  42b5ce:	sbb    DWORD PTR [edi+edi*8],esi
  42b5d1:	fwait
  42b5d2:	jmp    FWORD PTR [edx-0x95ffc3]
  42b5d8:	mov    esi,DWORD PTR [ecx]
  42b5da:	add    DWORD PTR [eax],0xffffff83
  42b5dd:	inc    edx
  42b5df:	mov    ah,0xff
  42b5e1:	dec    edi
  42b5e2:	call   DWORD PTR [eax+0x76]
  42b5e5:	add    BYTE PTR [ebx-0xc51201],ah
  42b5eb:	add    DWORD PTR [ebx-0x33c68c01],0xffffffae
  42b5f2:	inc    DWORD PTR ds:0xa1ff3c
  42b5f8:	xor    eax,0xff8300c5
  42b5fd:	add    BYTE PTR [edx+0x48],dl
  42b600:	int3   
  42b601:	inc    ecx
  42b602:	int3   
  42b603:	pop    ebx
  42b604:	mov    bh,bh
  42b606:	add    DWORD PTR [eax],eax
  42b608:	dec    ebp
  42b609:	mov    dh,0xcc
  42b60b:	add    BYTE PTR [ecx-0x7caefb34],cl
  42b611:	out    0xff,al
  42b613:	add    ch,BYTE PTR [esi]
  42b615:	(bad)  
  42b616:	jmp    0x42b618
  42b618:	or     eax,0x8300fe
  42b61d:	dec    DWORD PTR [edi]
  42b61f:	(bad)  
  42b620:	int3   
  42b621:	mov    ds:0xff959d00,al
  42b626:	mov    eax,0xff3d88ff
  42b62b:	cmp    edi,0xffffffff
  42b62e:	jne    0x42b5fe
  42b630:	add    BYTE PTR [esi-0x7c5b9901],bl
  42b636:	add    DWORD PTR [eax],0xffffffe6
  42b639:	bound  eax,QWORD PTR [eax]
  42b63b:	inc    DWORD PTR [ebx-0x26477d]
  42b641:	out    0x0,eax
  42b643:	test   BYTE PTR [ecx+0x0],bh
  42b646:	pop    edx
  42b647:	add    BYTE PTR [edi+0xffcc73],ah
  42b64d:	(bad)  
  42b64e:	mov    ecx,0xa6ffa4
  42b653:	jp     0x42b629
  42b655:	call   FWORD PTR [edi+edi*8+0x79]
  42b659:	in     al,dx
  42b65a:	dec    esp
  42b65c:	cmp    edi,0xffffffec
  42b65f:	or     bh,bh
  42b661:	mov    ch,0xff
  42b663:	js     0x42b6ca
  42b665:	add    bh,al
  42b667:	jmp    FWORD PTR [ebp-0x7cffff1e]
  42b66d:	mov    DWORD PTR [edx],eax
  42b66f:	mov    eax,ds:0x60ff36cc
  42b674:	stc    
  42b675:	add    BYTE PTR [eax+0x0],dl
  42b678:	mov    esi,0xffff8385
  42b67d:	adc    DWORD PTR [eax+0xe],0xffffffff
  42b681:	stos   DWORD PTR es:[edi],eax
  42b682:	inc    DWORD PTR [esi]
  42b684:	lods   al,BYTE PTR ds:[esi]
  42b685:	call   ebp
  42b687:	add    BYTE PTR [esp+ebp*2],dl
  42b68a:	(bad)  
  42b68b:	(bad)  
  42b68c:	inc    DWORD PTR [ebx-0x2effff4e]
  42b692:	add    BYTE PTR [ebp+0x58],dl
  42b695:	(bad)  
  42b696:	js     0x42b697
  42b698:	add    ecx,DWORD PTR [eax-0x1]
  42b69b:	inc    DWORD PTR [ebx-0xe00177]
  42b6a1:	pop    ss
  42b6a2:	inc    DWORD PTR [ecx-0x7cffc2]
  42b6a8:	ins    DWORD PTR es:[edi],dx
  42b6a9:	push   esi
  42b6aa:	(bad)  
  42b6ab:	inc    DWORD PTR [eax]
  42b6ad:	int3   
  42b6ae:	and    esp,DWORD PTR [ebp+0x0]
  42b6b1:	or     BYTE PTR [ebx+0x20836d04],al
  42b6b7:	add    DWORD PTR [eax+ebp*8],0xffffffff
  42b6bb:	int3   
  42b6bc:	add    DWORD PTR [ebx+0x25fffb70],0xffffff89
  42b6c3:	ficomp WORD PTR [edi-0x4c00657d]
  42b6c9:	inc    esp
  42b6ca:	inc    DWORD PTR [ebx-0x6eacff7d]
  42b6d0:	jmp    FWORD PTR [ebx+0xc22289]
  42b6d6:	(bad)  
  42b6d8:	jnp    0x42b6cc
  42b6da:	add    DWORD PTR [eax],0x0
  42b6dd:	mov    ebp,edx
  42b6df:	xchg   edx,eax
  42b6e0:	call   FWORD PTR [ecx]
  42b6e2:	dec    esi
  42b6e4:	rol    DWORD PTR [eax],1
  42b6e6:	jae    0x42b6e7
  42b6e8:	add    ah,bl
  42b6ea:	add    bh,bh
  42b6ec:	mov    DWORD PTR [eax],eax
  42b6ee:	mov    bl,0x99
  42b6f0:	add    BYTE PTR [edi+0x786fff],bh
  42b6f6:	push   0x7e38ff
  42b6fb:	(bad)  
  42b6fc:	(bad)  
  42b6fd:	call   DWORD PTR [ebp+0x54]
  42b700:	call   DWORD PTR [edi+edi*8]
  42b703:	sub    BYTE PTR [esi],dl
  42b705:	call   FWORD PTR [ebp-0xf67434]
  42b70b:	add    BYTE PTR [eax],al
  42b70d:	push   DWORD PTR [edx-0x4200ee]
  42b713:	retf   0x35
  42b716:	hlt    
  42b717:	cmp    eax,0xfffffffe
  42b71a:	int3   
  42b71b:	inc    DWORD PTR [eax]
  42b71d:	int3   
  42b71e:	in     eax,0x97
  42b720:	call   DWORD PTR [eax]
  42b722:	add    BYTE PTR [ecx],dl
  42b724:	outs   dx,BYTE PTR ds:[esi]
  42b725:	dec    ebx
  42b727:	cmp    DWORD PTR [esi-0x7a],0x0
  42b72b:	(bad)  
  42b72c:	(bad)  
  42b72d:	push   DWORD PTR [ebx+0x2f00e5]
  42b733:	xchg   ecx,eax
  42b734:	imul   edi,edi,0xffffffa9
  42b737:	sbb    DWORD PTR [ebx-0x33ffffba],0xffffffcc
  42b73e:	xchg   BYTE PTR [edi-0x1],cl
  42b741:	outs   dx,BYTE PTR ds:[esi]
  42b742:	add    al,ah
  42b744:	test   BYTE PTR [eax],0x26
  42b747:	int3   
  42b748:	arpl   WORD PTR [eax+0x0],sp
  42b74b:	add    bh,bh
  42b74d:	call   FWORD PTR [esi-0x2000d1]
  42b753:	add    DWORD PTR [edx],edx
  42b755:	(bad)  
  42b756:	mov    edi,0xffaf1400
  42b75b:	(bad)  
  42b75c:	inc    DWORD PTR [eax]
  42b75e:	test   eax,0xff4800dd
  42b763:	mov    ds:0x6eff3e,eax
  42b768:	sub    BYTE PTR [ebx-0x7cff0034],ch
  42b76e:	cmp    DWORD PTR [edx+0x0],0xe9e689e5
  42b775:	(bad)  
  42b776:	cmp    eax,0xcc160300
  42b77b:	(bad)  
  42b77c:	(bad)  
  42b77d:	inc    DWORD PTR ds:0xff090085
  42b783:	sub    ebx,DWORD PTR [ecx]
  42b785:	(bad)  
  42b786:	cmp    DWORD PTR [ebx-0x7c00b0f0],eax
  42b78c:	inc    DWORD PTR [ebx-0x87c5720]
  42b792:	jmp    FWORD PTR [ebx+ebx*1]
  42b795:	add    ah,dh
  42b797:	add    BYTE PTR [edi-0xff55],ch
  42b79d:	call   FWORD PTR [esi+0xa6ffd6]
  42b7a3:	mov    esp,0xff10ffe1
  42b7a8:	ror    BYTE PTR [ebx],cl
  42b7aa:	inc    DWORD PTR [eax]
  42b7ac:	(bad)  
  42b7ad:	jmp    FWORD PTR [esi+0x1a]
  42b7b0:	int3   
  42b7b1:	inc    edx
  42b7b2:	sub    DWORD PTR [esi+ecx*1-0x65ffd17d],0x63
  42b7ba:	add    bh,bh
  42b7bc:	add    bh,bh
  42b7be:	data16 int3 
  42b7c0:	call   FWORD PTR [ecx]
  42b7c2:	jmp    DWORD PTR [ebp+eax*2+0x68ff4a00]
  42b7c9:	cwde   
  42b7ca:	add    BYTE PTR [ecx+0x72c9ffff],cl
  42b7d0:	add    bl,dl
  42b7d2:	dec    ecx
  42b7d4:	pusha  
  42b7d5:	add    dh,al
  42b7d7:	add    BYTE PTR [eax-0xffffb0],al
  42b7dd:	add    eax,0xffffffa1
  42b7e0:	dec    DWORD PTR [ecx+0x0]
  42b7e3:	jp     0x42b863
  42b7e5:	push   edi
  42b7e7:	mov    DWORD PTR [eax-0x48],ecx
  42b7ea:	add    BYTE PTR [ebx-0xf50100],al
  42b7f0:	int3   
  42b7f1:	jmp    WORD PTR [esi]
  42b7f4:	sub    edi,edi
  42b7f6:	jp     0x42b7f7
  42b7f8:	outs   dx,BYTE PTR ds:[esi]
  42b7f9:	mov    WORD PTR [eax],es
  42b7fb:	(bad)  
  42b7fc:	inc    DWORD PTR [eax]
  42b7fe:	or     al,0x5f
  42b800:	add    BYTE PTR [esi-0x951001],ch
  42b806:	sbb    bh,bh
  42b808:	dec    edi
  42b809:	das    
  42b80a:	add    BYTE PTR [eax],al
  42b80c:	inc    DWORD PTR [ebx+0x6a89eb70]
  42b812:	add    ah,ch
  42b814:	mov    ah,0xff
  42b816:	dec    ebx
  42b817:	add    BYTE PTR [edi],ch
  42b819:	mov    dl,0xff
  42b81b:	mov    DWORD PTR [eax],eax
  42b81d:	int3   
  42b81e:	sbb    al,0x4e
  42b820:	call   FWORD PTR ds:0xa18dff
  42b826:	adc    eax,DWORD PTR [eax]
  42b828:	mov    bh,0x33
  42b82a:	cmp    edi,0xffffffff
  42b82d:	int3   
  42b82e:	(bad)  
  42b82f:	or     DWORD PTR [ebx-0x7b71ffe6],eax
  42b835:	push   DWORD PTR [ebp-0x65af01]
  42b83b:	cmp    edi,0xffffffff
  42b83e:	mov    dl,0x99
  42b840:	cmp    DWORD PTR [edi+edi*8+0x10],0xffffff9a
  42b845:	(bad)  
  42b846:	(bad)  
  42b848:	fs jns 0x42b84b
  42b84b:	add    bh,bh
  42b84d:	cmp    eax,0x17
  42b850:	int3   
  42b851:	adc    al,0x83
  42b853:	fmul   DWORD PTR [eax+eax*1]
  42b856:	xchg   ecx,eax
  42b857:	and    DWORD PTR [edx+ebx*1],0x0
  42b85b:	inc    DWORD PTR [eax]
  42b85d:	add    BYTE PTR ds:0xff00ff79,al
  42b863:	cli    
  42b864:	sbb    BYTE PTR [eax],al
  42b866:	sbb    al,0x89
  42b868:	or     esi,DWORD PTR [esi-0x7c7c01]
  42b86e:	jae    0x42b80d
  42b870:	push   DWORD PTR [eax]
  42b872:	(bad)  
  42b873:	out    dx,al
  42b874:	dec    BYTE PTR [ecx+0x37daffe5]
  42b87a:	add    BYTE PTR [ecx-0x34d2007d],cl
  42b880:	add    BYTE PTR [eax+0x7c3f00],cl
  42b886:	mov    bh,0xff
  42b888:	add    ah,0x83
  42b88b:	add    ah,cl
  42b88d:	dec    DWORD PTR [esi+0x46]
  42b890:	add    BYTE PTR [edi+0x17f500],ah
  42b896:	cmp    BYTE PTR [ecx-0xff0003],cl
  42b89c:	(bad)  
  42b89d:	dec    DWORD PTR [esi]
  42b89f:	scas   eax,DWORD PTR es:[edi]
  42b8a0:	push   edx
  42b8a2:	adc    DWORD PTR [ebp+eiz*4-0x77],0xffffffc5
  42b8a7:	inc    DWORD PTR [ecx+0xffcd]
  42b8ad:	int3   
  42b8ae:	ss int3 
  42b8b0:	add    BYTE PTR [ebx],dl
  42b8b2:	jmp    DWORD PTR [ecx+0xdaff2c]
  42b8b8:	adc    DWORD PTR [esp+ecx*8-0x26ffff77],ecx
  42b8bf:	cmp    eax,0xdb005a83
  42b8c4:	imul   edi,edi,0xffffffc1
  42b8c7:	dec    ebx
  42b8c9:	mov    cl,0xff
  42b8cb:	inc    DWORD PTR [ebx+0xea9500]
  42b8d1:	jae    0x42b8d3
  42b8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b8d4:	mov    bl,0xff
  42b8d6:	sub    bh,bh
  42b8d8:	add    al,0x23
  42b8da:	mov    DWORD PTR [ecx-0x4453301],ecx
  42b8e0:	add    DWORD PTR [eax],0xffffff83
  42b8e3:	mov    ebp,0xffc0008d
  42b8e8:	daa    
  42b8e9:	cs cmp edi,0xffffffcc
  42b8ed:	add    dl,cl
  42b8ef:	loopne 0x42b8f0
  42b8f1:	mov    edi,0x6790ff
  42b8f6:	adc    BYTE PTR [eax],al
  42b8f8:	int    0x7c
  42b8fa:	(bad)  
  42b8fb:	(bad)  
  42b8fc:	(bad)  
  42b8fd:	dec    DWORD PTR [ebx+ebx*8]
  42b900:	jmp    FWORD PTR [ebx-0x1]
  42b903:	test   al,0x47
  42b905:	add    BYTE PTR [eax+0x0],al
  42b908:	inc    ecx
  42b909:	inc    edi
  42b90a:	add    DWORD PTR [eax],0x0
  42b90d:	add    BYTE PTR [edi],dl
  42b90f:	mov    ds:0x2a0030ff,eax
  42b914:	(bad)  
  42b915:	int3   
  42b916:	int3   
  42b917:	int3   
  42b918:	and    al,0x34
  42b91a:	add    bh,bh
  42b91c:	add    BYTE PTR [ebx-0x710084fa],al
  42b922:	push   edi
  42b924:	ins    BYTE PTR es:[edi],dx
  42b925:	mov    DWORD PTR [edx-0xee2700],esp
  42b92b:	add    BYTE PTR [ebx-0x76d24701],al
  42b931:	sti    
  42b932:	mov    DWORD PTR [ebx-0x3aff1d],eax
  42b938:	inc    ebx
  42b939:	mov    dh,0xff
  42b93b:	(bad)  
  42b93c:	(bad)  
  42b93d:	jmp    DWORD PTR [esi-0x7b7c56]
  42b943:	shl    BYTE PTR [ebx-0x2b7c2f01],0xee
  42b94a:	add    bh,bh
  42b94c:	add    BYTE PTR [eax],al
  42b94e:	test   dl,0x89
  42b951:	fdivp  st(7),st
  42b953:	clc    
  42b954:	pop    es
  42b955:	adc    DWORD PTR [ecx-0x760c3100],0x0
  42b95c:	add    bh,bh
  42b95e:	dec    esi
  42b95f:	mov    ebx,0xf2ffd7ff
  42b964:	inc    esp
  42b965:	add    BYTE PTR [eax-0x7d],ah
  42b968:	pop    ebp
  42b969:	fild   DWORD PTR [eax]
  42b96b:	(bad)  
  42b96c:	(bad)  
  42b96d:	(bad)  
  42b96e:	mov    ecx,0xffca83f5
  42b973:	daa    
  42b974:	aad    0x83
  42b976:	inc    BYTE PTR [eax]
  42b978:	push   edi
  42b97a:	inc    DWORD PTR [ebx+0x316c00cc]
  42b980:	(bad)  
  42b981:	(bad)  
  42b983:	push   cs
  42b984:	mov    dh,0xff
  42b986:	das    
  42b987:	jmp    ecx
  42b989:	push   ecx
  42b98a:	add    bh,bh
  42b98c:	(bad)  
  42b98d:	inc    DWORD PTR [esi-0x54]
  42b990:	call   DWORD PTR [ecx-0x1]
  42b993:	jo     0x42b94d
  42b995:	cmp    DWORD PTR ds:0x88bbff,0x0
  42b99c:	cmp    edi,0xffffffcd
  42b99f:	jl     0x42b9a1
  42b9a1:	cli    
  42b9a2:	int3   
  42b9a3:	push   0x708338
  42b9a8:	ds pop ds
  42b9aa:	add    BYTE PTR [ebx+0x33ef00ff],al
  42b9b0:	(bad)  
  42b9b1:	mov    eax,0xff2719ff
  42b9b6:	pop    ss
  42b9b7:	mov    esi,ebx
  42b9b9:	in     eax,dx
  42b9ba:	inc    DWORD PTR [ebx+0x2be5ff00]
  42b9c0:	(bad)  
  42b9c1:	mov    ecx,0xff5d0cff
  42b9c6:	lahf   
  42b9c7:	jmp    FWORD PTR [edx]
  42b9c9:	mov    cl,0x83
  42b9cb:	add    bh,bh
  42b9cd:	call   FWORD PTR [ebx+0x38]
  42b9d0:	call   edi
  42b9d2:	int3   
  42b9d3:	jle    0x42ba3b
  42b9d5:	cmp    DWORD PTR [edi+edi*8+0x18],0x11
  42b9da:	(bad)  
  42b9db:	inc    DWORD PTR [eax]
  42b9dd:	sub    DWORD PTR [edi-0x76e176c7],0xffffffb6
  42b9e4:	add    bh,bh
  42b9e6:	mov    ds:0xffb2a800,eax
  42b9eb:	mov    edi,edi
  42b9ed:	(bad)  
  42b9ee:	out    dx,al
  42b9ef:	mov    WORD PTR [eax],es
  42b9f1:	bound  eax,QWORD PTR [ebx-0x25ff40ba]
  42b9f7:	add    al,dl
  42b9f9:	add    al,0x83
  42b9fb:	int3   
  42b9fc:	inc    DWORD PTR [ebx-0x7d00d4c6]
  42ba02:	adc    DWORD PTR [ecx+esi*1+0x0],0xffffffc1
  42ba07:	add    BYTE PTR [esi-0x1e],al
  42ba0a:	cmp    edi,0x0
  42ba0d:	add    BYTE PTR ds:0x7f83b5,ah
  42ba13:	sbb    al,0x79
  42ba15:	sub    DWORD PTR [edi+0x0],0x4f
  42ba19:	mov    edx,0xffff00
  42ba1e:	adc    bl,BYTE PTR [edi]
  42ba20:	push   DWORD PTR ds:0x830a2183
  42ba26:	dec    BYTE PTR [ecx-0x7c0065e1]
  42ba2c:	add    ah,cl
  42ba2e:	push   ebp
  42ba2f:	inc    edi
  42ba30:	add    edi,0x0
  42ba33:	das    
  42ba34:	mov    esp,0x8dccc2cc
  42ba39:	test   eax,0xffffffff
  42ba3e:	adc    al,0xa0
  42ba40:	inc    DWORD PTR [ebx-0x1]
  42ba43:	dec    ebp
  42ba44:	test   al,0x0
  42ba46:	(bad)  
  42ba47:	push   edx
  42ba49:	sub    al,0x83
  42ba4b:	dec    esp
  42ba4d:	add    BYTE PTR [edx+0x5783ac],dl
  42ba53:	fidivr WORD PTR [edi+edi*8-0x1c87cb5]
  42ba5a:	(bad)  
  42ba5b:	inc    DWORD PTR [eax]
  42ba5d:	add    BYTE PTR [ebp+ebx*4-0x56009201],ah
  42ba64:	das    
  42ba65:	push   DWORD PTR [edi]
  42ba67:	call   ebx
  42ba69:	inc    edi
  42ba6a:	dec    DWORD PTR [ecx+0x68483ff]
  42ba70:	jmp    FWORD PTR [ebx-0x77]
  42ba73:	test   DWORD PTR [esi],0xf1fff189
  42ba79:	scas   al,BYTE PTR es:[edi]
  42ba7a:	(bad)  
  42ba7b:	(bad)  
  42ba7c:	inc    DWORD PTR [ebx-0x257c4c3b]
  42ba82:	or     DWORD PTR [ebp-0x48],0xffffff83
  42ba86:	stos   BYTE PTR es:[edi],al
  42ba87:	add    BYTE PTR [ebx],dh
  42ba89:	jle    0x42ba8b
  42ba8b:	dec    esp
  42ba8d:	call   DWORD PTR [eax+0x6f]
  42ba90:	call   ecx
  42ba92:	mov    DWORD PTR ds:0xffa8ffd1,esi
  42ba98:	cld    
  42ba99:	push   esi
  42ba9a:	(bad)  
  42ba9b:	inc    DWORD PTR [eax]
  42ba9d:	(bad)  
  42ba9e:	cmp    al,0xd4
  42baa0:	or     DWORD PTR [edi+edi*8+0x5b],0xffffffd4
  42baa5:	add    BYTE PTR [eax],bl
  42baa7:	add    bl,ch
  42baa9:	out    dx,al
  42baaa:	cmp    edi,0xffffff83
  42baad:	jmp    DWORD PTR [edx+eiz*2+0xeffee00]
  42bab4:	xchg   esi,eax
  42bab5:	mov    DWORD PTR [edx-0x7d],edx
  42bab8:	fimul  DWORD PTR [edi+0x0]
  42babb:	int3   
  42babc:	add    BYTE PTR [ebx+0x7bff4dbb],al
  42bac2:	add    BYTE PTR [ebx+edx*8],ch
  42bac5:	(bad)  
  42bac6:	fcos   
  42bac8:	shr    DWORD PTR [ebx],cl
  42baca:	add    bh,bh
  42bacc:	add    BYTE PTR [eax],al
  42bace:	sbb    al,0xb7
  42bad0:	jmp    DWORD PTR [edi-0x1]
  42bad3:	(bad)  
  42bad5:	int3   
  42bad6:	out    dx,al
  42bad7:	add    BYTE PTR [ebp-0x76330092],dh
  42badd:	dec    DWORD PTR [ebx]
  42badf:	jne    0x42bae0
  42bae1:	and    eax,0xcc39a4ff
  42bae6:	jmp    0x8300:0xcc588b00
  42baed:	jmp    FWORD PTR [ebp+0xb]
  42baf0:	dec    DWORD PTR [edx-0x1]
  42baf3:	sar    dl,1
  42baf5:	push   DWORD PTR [ebx+eax*4-0x433e]
  42bafc:	(bad)  
  42bafd:	(bad)  
  42bafe:	aas    
  42baff:	mov    bh,0xff
  42bb01:	and    DWORD PTR [ebx-0x3700d35a],eax
  42bb07:	inc    DWORD PTR [ebx+esi*8]
  42bb0a:	mov    edi,edi
  42bb0c:	mov    DWORD PTR [eax],eax
  42bb0e:	ins    BYTE PTR es:[edi],dx
  42bb0f:	inc    ecx
  42bb10:	add    BYTE PTR [ebx],dl
  42bb12:	add    BYTE PTR [ebp-0x33fe001c],bh
  42bb18:	sub    al,0x72
  42bb1a:	add    BYTE PTR [ebx+0x4af9ff00],al
  42bb20:	jmp    DWORD PTR [edx-0x7d]
  42bb23:	ins    DWORD PTR es:[edi],dx
  42bb24:	pop    ebp
  42bb25:	int3   
  42bb26:	ds (bad) 
  42bb28:	push   DWORD PTR [edx+0xff]
  42bb2e:	arpl   bp,dx
  42bb30:	add    ch,bl
  42bb32:	add    BYTE PTR [ecx],cl
  42bb34:	mov    esi,0x88cc9b00
  42bb39:	adc    edi,edi
  42bb3b:	(bad)  
  42bb3c:	inc    DWORD PTR [ebx-0x3333f659]
  42bb42:	(bad)  
  42bb43:	jge    0x42bb91
  42bb45:	add    BYTE PTR [edx+0x0],dl
  42bb48:	ret    0xff21
  42bb4b:	int3   
  42bb4c:	(bad)  
  42bb4d:	jmp    ebp
  42bb4f:	scas   eax,DWORD PTR es:[edi]
  42bb50:	add    BYTE PTR [ebx],al
  42bb52:	add    BYTE PTR [edx-0x7c7900b4],cl
  42bb58:	pop    ebx
  42bb59:	(bad)  
  42bb5b:	dec    esp
  42bb5d:	adc    ebx,0x45
  42bb60:	jmp    DWORD PTR [eax+eax*1-0x66]
  42bb64:	rol    BYTE PTR [eax],0x45
  42bb67:	add    BYTE PTR [ebp+ebx*4-0x1],dh
  42bb6b:	inc    DWORD PTR [eax]
  42bb6d:	add    BYTE PTR [eax-0x35],bh
  42bb70:	call   DWORD PTR [edx+0x0]
  42bb73:	jge    0x42bb57
  42bb75:	add    BYTE PTR [esi],ah
  42bb77:	add    BYTE PTR [ebx],dh
  42bb79:	pop    edi
  42bb7a:	(bad)  
  42bb7b:	(bad)  
  42bb7c:	inc    DWORD PTR [ebx-0x4e002c3b]
  42bb82:	add    bh,ah
  42bb84:	fcos   
  42bb86:	sbb    edi,edi
  42bb88:	je     0x42bbe1
  42bb8a:	(bad)  
  42bb8b:	inc    DWORD PTR [eax]
  42bb8d:	add    BYTE PTR [esi-0xae006d],cl
  42bb93:	nop
  42bb94:	mov    DWORD PTR [eax],eax
  42bb96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb97:	call   FWORD PTR [ecx-0x767c6e]
  42bb9d:	call   FWORD PTR [edi+0x1a]
  42bba0:	push   DWORD PTR [esi]
  42bba2:	int3   
  42bba3:	pop    edi
  42bba4:	pop    ecx
  42bba5:	inc    eax
  42bba7:	call   DWORD PTR [edx]
  42bba9:	adc    eax,DWORD PTR [ebx+0x16ffff83]
  42bbaf:	push   0xffffff83
  42bbb1:	mov    bh,bh
  42bbb3:	lds    esp,FWORD PTR ds:0x3e89ad00
  42bbb9:	cwde   
  42bbba:	inc    DWORD PTR [ebx-0x1f067c01]
  42bbc0:	jmp    FWORD PTR [edi+edi*8-0x4c]
  42bbc4:	ror    DWORD PTR [ecx-0x67cc7c51],cl
  42bbca:	mov    DWORD PTR [eax],eax
  42bbcc:	add    BYTE PTR [ecx+0x25ff22c9],cl
  42bbd2:	add    BYTE PTR [edx+0x71],dh
  42bbd5:	add    BYTE PTR [ecx-0x34],ch
  42bbd8:	push   esi
  42bbd9:	int3   
  42bbda:	inc    DWORD PTR [eax]
  42bbdc:	inc    DWORD PTR [eax]
  42bbde:	mov    ds:0xa00097,al
  42bbe3:	inc    ebp
  42bbe4:	add    bh,bh
  42bbe6:	popa   
  42bbe7:	dec    DWORD PTR [ecx]
  42bbe9:	pushf  
  42bbea:	inc    DWORD PTR [eax]
  42bbec:	add    DWORD PTR [eax],0xffffffef
  42bbef:	adc    edi,edi
  42bbf1:	in     eax,dx
  42bbf2:	add    BYTE PTR [ecx+ebp*8-0x1],ah
  42bbf6:	in     eax,0xff
  42bbf8:	test   al,0x52
  42bbfa:	inc    DWORD PTR [eax]
  42bbfc:	add    BYTE PTR [eax],al
  42bbfe:	or     DWORD PTR [edx+0x0],edx
  42bc01:	sub    eax,0xff7e1e83
  42bc06:	das    
  42bc07:	add    BYTE PTR [ebx+0xff6f],al
  42bc0d:	call   DWORD PTR [edi+0x3affec]
  42bc13:	sub    BYTE PTR [eax+eax*1-0x76777c79],0xff
  42bc1b:	cmp    edi,0xffffffff
  42bc1e:	cli    
  42bc1f:	out    dx,eax
  42bc20:	add    BYTE PTR [edx+0x7eda89],ch
  42bc26:	sbb    al,0xff
  42bc28:	pop    edi
  42bc29:	js     0x42bbae
  42bc2b:	add    bh,bh
  42bc2d:	add    BYTE PTR [edi],ch
  42bc2f:	inc    eax
  42bc30:	add    BYTE PTR [edi+edi*8+0x12ff4ba7],cl
  42bc37:	(bad)  
  42bc38:	ds aam 0xff
  42bc3b:	(bad)  
  42bc3c:	(bad)  
  42bc3d:	jmp    FWORD PTR [esi+0x46]
  42bc40:	sbb    DWORD PTR [ebp-0x77],0x33
  42bc44:	add    DWORD PTR [eax],0x4c5acc5f
  42bc4a:	mov    edi,edi
  42bc4c:	add    DWORD PTR [eax],0xfffffffc
  42bc4f:	or     al,0x83
  42bc51:	sbb    bh,bh
  42bc53:	test   al,0x8a
  42bc55:	mov    DWORD PTR [ecx-0x7d],ecx
  42bc58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc59:	aaa    
  42bc5a:	inc    DWORD PTR [ebx-0x38d67c7d]
  42bc60:	add    BYTE PTR [edx-0x792a00],bl
  42bc66:	loopne 0x42bc34
  42bc68:	inc    ebx
  42bc69:	or     al,0xff
  42bc6b:	(bad)  
  42bc6c:	dec    esp
  42bc6e:	jns    0x42bcdd
  42bc70:	dec    DWORD PTR [ebp-0x34]
  42bc73:	out    0x58,eax
  42bc75:	(bad)  
  42bc76:	cmp    bh,bh
  42bc78:	or     DWORD PTR ds:0x83ffffcc,edi
  42bc7e:	(bad)  
  42bc7f:	and    edi,edi
  42bc81:	pop    ds
  42bc82:	sub    DWORD PTR [edx],0xffffffd8
  42bc85:	inc    DWORD PTR [edi]
  42bc87:	add    BYTE PTR [ecx-0x337cb4],cl
  42bc8d:	add    cl,bl
  42bc8f:	ja     0x42bc91
  42bc91:	inc    edi
  42bc92:	call   DWORD PTR [ecx-0x765700ca]
  42bc98:	(bad)  
  42bc99:	xchg   ebx,eax
  42bc9a:	mov    DWORD PTR [ebx-0x14eeff01],eax
  42bca0:	add    BYTE PTR ds:0xcc031a89,dl
  42bca6:	sbb    bh,bh
  42bca8:	mov    ch,0x78
  42bcaa:	add    BYTE PTR [ebx+0x6d889ff],al
  42bcb0:	add    BYTE PTR [esi-0x7ca68800],ch
  42bcb6:	popf   
  42bcb7:	push   DWORD PTR [edi-0x7c760019]
  42bcbd:	push   DWORD PTR [eax-0x676d6]
  42bcc3:	xchg   DWORD PTR [esi],esi
  42bcc5:	mov    DWORD PTR [edi-0xb5d001],edx
  42bccb:	add    BYTE PTR [ecx-0xaa4c01],cl
  42bcd1:	sub    al,0x0
  42bcd3:	rol    BYTE PTR cs:[eax],1
  42bcd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcd7:	dec    DWORD PTR [edi+eax*8+0x0]
  42bcdb:	add    bh,bh
  42bcdd:	xor    DWORD PTR [ebp+ebp*2+0x0],0x69
  42bce2:	mov    DWORD PTR [ebp+0x1bff0b],edx
  42bce8:	in     al,0x4e
  42bcea:	add    bh,bh
  42bcec:	int3   
  42bced:	add    al,dh
  42bcef:	aam    0xff
  42bcf1:	jnp    0x42bcf3
  42bcf3:	iret   
  42bcf4:	test   eax,0x94007200
  42bcf9:	imul   edi,edi,0x62000000
  42bcff:	push   ebx
  42bd00:	mov    DWORD PTR [eax-0x33cf1a7d],edx
  42bd06:	mov    esi,0xff456f00
  42bd0b:	inc    DWORD PTR [ebx-0xf93100]
  42bd11:	and    al,BYTE PTR [ebx+0x14008d8e]
  42bd17:	dec    DWORD PTR [esi-0xb]
  42bd1a:	inc    DWORD PTR [eax]
  42bd1c:	add    bh,bh
  42bd1e:	dec    edi
  42bd1f:	idiv   bh
  42bd21:	push   esi
  42bd22:	add    BYTE PTR [ebp-0x527c17],ah
  42bd28:	mov    ds,WORD PTR [ecx-0x1]
  42bd2b:	inc    DWORD PTR [eax]
  42bd2d:	or     DWORD PTR [edx+edi*8-0x1],0x3e
  42bd32:	call   FWORD PTR [eax]
  42bd34:	fild   DWORD PTR [eax]
  42bd36:	pop    es
  42bd37:	int3   
  42bd38:	dec    esi
  42bd39:	daa    
  42bd3a:	cmp    edi,0xffffff89
  42bd3d:	add    BYTE PTR [ebx-0x8fff62],bl
  42bd43:	or     BYTE PTR [ebx-0x7d],al
  42bd46:	daa    
  42bd47:	call   FWORD PTR [eax]
  42bd49:	jl     0x42bd4b
  42bd4b:	(bad)  
  42bd4c:	inc    DWORD PTR [eax]
  42bd4e:	jmp    0x1194103
  42bd53:	xchg   esp,eax
  42bd54:	xor    al,0x0
  42bd56:	imul   edi,edi,0x89ffe238
  42bd5c:	(bad)  
  42bd5d:	jmp    esp
  42bd5f:	cmp    edi,0x6b0effd9
  42bd65:	mov    DWORD PTR [edi-0x295e00],edx
  42bd6b:	add    bh,bh
  42bd6d:	mov    edx,edx
  42bd6f:	inc    eax
  42bd70:	push   DWORD PTR [ecx]
  42bd72:	add    BYTE PTR [edi],ah
  42bd74:	rol    DWORD PTR [eax],0x63
  42bd77:	dec    DWORD PTR [ebx-0x7604]
  42bd7d:	mov    DWORD PTR [eax-0x8],edi
  42bd80:	add    bl,cl
  42bd82:	add    BYTE PTR [eax],al
  42bd84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd85:	jmp    FWORD PTR [ebx+0x0]
  42bd88:	cmp    DWORD PTR [ecx],ebp
  42bd8a:	add    ah,cl
  42bd8c:	(bad)  
  42bd8d:	jmp    FWORD PTR [eax-0x7cc57ce9]
  42bd93:	addr16 mov ebx,0x18ffda00
  42bd99:	outs   dx,DWORD PTR ds:[esi]
  42bd9a:	int3   
  42bd9b:	int3   
  42bd9c:	add    BYTE PTR [eax],al
  42bd9e:	repz dec ebx
  42bda0:	add    al,dh
  42bda2:	add    dl,ah
  42bda4:	dec    ah
  42bda6:	and    eax,0xffef4eff
  42bdab:	(bad)  
  42bdac:	dec    esp
  42bdae:	jecxz  0x42bdcf
  42bdb0:	dec    DWORD PTR [edx]
  42bdb2:	int3   
  42bdb3:	repz ret 
  42bdb5:	int3   
  42bdb6:	push   0xe35aff
  42bdbb:	add    BYTE PTR [eax],al
  42bdbd:	add    BYTE PTR [edx+0x7],dh
  42bdc0:	mov    DWORD PTR [ebp-0xa52f00],ecx
  42bdc6:	mov    cl,0xff
  42bdc8:	dec    ecx
  42bdc9:	sbb    eax,0x83ffff00
  42bdce:	loopne 0x42bdaa
  42bdd0:	jmp    ebx
  42bdd2:	add    BYTE PTR [eax-0x4ff51],dh
  42bdd8:	pop    esp
  42bdd9:	xchg   esi,eax
  42bdda:	inc    DWORD PTR [ebx-0x56e20100]
  42bde0:	add    BYTE PTR [eax+eax*1-0x7c7651a1],cl
  42bde7:	dec    DWORD PTR [ecx-0x767633e1]
  42bded:	add    dl,bh
  42bdef:	mov    esi,0x3b004c00
  42bdf4:	mov    ebp,0x65ff90cc
  42bdf9:	adc    ecx,DWORD PTR [ecx-0x317cff7d]
  42bdff:	inc    esi
  42be00:	add    BYTE PTR [ecx],cl
  42be02:	add    BYTE PTR [edx-0x6cff3d],ah
  42be08:	add    al,0x1c
  42be0a:	add    bh,bh
  42be0c:	dec    DWORD PTR [ecx-0x3e00ede4]
  42be12:	add    BYTE PTR [ebp+0x888375],cl
  42be18:	loope  0x42bdb8
  42be1a:	cmp    edi,0xffffffff
  42be1d:	(bad)  
  42be1e:	js     0x42be01
  42be20:	int3   
  42be21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be22:	jmp    eax
  42be24:	add    al,0xff
  42be26:	test   BYTE PTR [ecx+0xff3883],0xff
  42be2d:	jmp    DWORD PTR [edi+edi*1+0x0]
  42be31:	dec    ecx
  42be32:	add    bh,dh
  42be34:	jno    0x42be35
  42be36:	sti    
  42be37:	add    BYTE PTR [edi+eiz*2+0xcc00ff],bl
  42be3e:	sbb    dl,BYTE PTR [ecx-0x1]
  42be41:	imul   edi,edi,0x2c835f23
  42be47:	add    BYTE PTR [esi+ebx*4+0x0],ah
  42be4b:	inc    DWORD PTR [eax]
  42be4d:	add    BYTE PTR [edi+0xfaff67],dh
  42be53:	mov    BYTE PTR [ebp-0x7d],0x59
  42be57:	call   DWORD PTR [ecx+0xfffff0]
  42be5d:	int3   
  42be5e:	jl     0x42be59
  42be60:	add    dl,al
  42be62:	call   FWORD PTR [edx+ebp*1-0x4c7c7301]
  42be69:	push   ecx
  42be6a:	add    ah,cl
  42be6c:	(bad)  
  42be6d:	inc    DWORD PTR [esi+eiz*1+0x0]
  42be71:	test   DWORD PTR [eax],0x75ffc550
  42be77:	add    bh,dl
  42be79:	xchg   edi,eax
  42be7a:	(bad)  
  42be7b:	dec    DWORD PTR [ecx+0x22f400]
  42be81:	and    bh,bh
  42be83:	out    0xdb,eax
  42be85:	inc    eax
  42be87:	(bad)  
  42be88:	jmp    0xff42be94
  42be8d:	jmp    FWORD PTR [edx]
  42be8f:	int    0x89
  42be91:	lock add BYTE PTR [eax-0x607cae],al
  42be98:	push   ds
  42be99:	ss dec esp
  42be9c:	add    ah,cl
  42be9e:	std    
  42be9f:	daa    
  42bea0:	call   FWORD PTR [edx-0x3395d201]
  42bea6:	cmc    
  42bea7:	(bad)  
  42bea8:	call   0x41bebe
  42bead:	mov    eax,ebx
  42beaf:	sar    edi,1
  42beb1:	(bad)  
  42beb2:	push   DWORD PTR [ebp+0x6]
  42beb5:	mov    edi,esi
  42beb7:	dec    DWORD PTR [ecx-0xff003c]
  42bebd:	(bad)  
  42bebe:	in     eax,dx
  42bebf:	pop    ebp
  42bec0:	add    BYTE PTR [edx+0x4cdaff],ch
  42bec6:	(bad)  
  42bec7:	inc    DWORD PTR [ecx-0xd]
  42beca:	or     DWORD PTR [ecx+0x52c5ccff],0xffffff83
  42bed1:	dec    edx
  42bed2:	call   DWORD PTR [ecx]
  42bed4:	push   ecx
  42bed5:	mov    DWORD PTR [esi-0x1],esp
  42bed8:	fsubr  QWORD PTR [ecx-0x34]
  42bedb:	(bad)  
  42bedc:	(bad)  
  42bedd:	(bad)  
  42bede:	(bad)  [edi+0x69fffaff]
  42bee4:	jl     0x42bee6
  42bee6:	cmp    bh,0x34
  42bee9:	outs   dx,BYTE PTR ds:[esi]
  42beea:	(bad)  
  42beeb:	(bad)  
  42beec:	(bad)  
  42beed:	call   FWORD PTR [ebx-0x23]
  42bef0:	push   DWORD PTR [esi]
  42bef2:	call   FWORD PTR [edi-0xa]
  42bef5:	call   FWORD PTR [ecx+0x55a1ff]
  42befb:	or     DWORD PTR [ecx+0x95f1ff],0xffffffec
  42bf02:	jmp    DWORD PTR [edx]
  42bf04:	sahf   
  42bf05:	add    ah,ah
  42bf07:	call   DWORD PTR [esi-0x25]
  42bf0a:	or     esp,0xffffffff
  42bf0d:	int3   
  42bf0e:	shr    dh,cl
  42bf10:	int3   
  42bf11:	fld    QWORD PTR [ebx-0x6700b260]
  42bf17:	add    BYTE PTR [edi+edi*4],ah
  42bf1a:	inc    DWORD PTR [ebx-0x79600001]
  42bf20:	call   FWORD PTR [ebx]
  42bf22:	int3   
  42bf23:	repz inc esp
  42bf25:	add    BYTE PTR [ecx+0x4fe983],dh
  42bf2b:	or     DWORD PTR [ecx+0xd2e8ff],0x2b
  42bf32:	dec    DWORD PTR [eax]
  42bf34:	mov    bl,0x89
  42bf36:	push   es
  42bf37:	xor    DWORD PTR [edx+0x48],0x0
  42bf3b:	or     esp,0x0
  42bf3e:	cmc    
  42bf3f:	hlt    
  42bf40:	add    BYTE PTR [ecx],cl
  42bf42:	add    BYTE PTR [ecx-0x4effbc],ch
  42bf48:	pop    ecx
  42bf49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf4a:	add    ah,cl
  42bf4c:	add    DWORD PTR [eax],0xffffffd1
  42bf4f:	xor    eax,0x9fffcfff
  42bf54:	adc    al,0x0
  42bf56:	dec    ebp
  42bf57:	add    BYTE PTR [ebx-0x6b],al
  42bf5a:	add    bh,bh
  42bf5c:	(bad)  
  42bf5d:	call   DWORD PTR [ecx-0x7c2e00dc]
  42bf63:	mov    edx,DWORD PTR [edx+0x34ff69ff]
  42bf69:	lods   eax,DWORD PTR ds:[esi]
  42bf6a:	(bad)  
  42bf6b:	inc    DWORD PTR [ebx+0x982dff]
  42bf71:	add    DWORD PTR [eax],0xffffffb8
  42bf74:	les    eax,FWORD PTR [eax]
  42bf76:	test   BYTE PTR [eax],al
  42bf78:	jge    0x42bf2d
  42bf7a:	add    DWORD PTR [eax],0xffffff83
  42bf7d:	inc    DWORD PTR [ebx-0x17]
  42bf80:	add    BYTE PTR [edi+edi*8+0x28],dh
  42bf84:	loopne 0x42bf85
  42bf86:	dec    DWORD PTR cs:[ebx-0x330008]
  42bf8d:	inc    edi
  42bf8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf90:	int3   
  42bf91:	adc    edi,edi
  42bf93:	test   eax,0xff2b009e
  42bf98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf99:	mov    DWORD PTR [ebx+0x3fff00ff],eax
  42bf9f:	mov    DWORD PTR [eax],eax
  42bfa1:	cmp    cl,BYTE PTR [ecx-0x5335c57]
  42bfa7:	or     DWORD PTR [esi-0x78],0xffffff83
  42bfab:	add    DWORD PTR [eax],0xffffffff
  42bfae:	jmp    0x42bf6c
  42bfb0:	add    BYTE PTR [ecx-0x294700],ch
  42bfb6:	imul   edi,edi,0xffffffca
  42bfb9:	dec    ecx
  42bfba:	add    BYTE PTR [ebx-0x7a30ff01],al
  42bfc0:	call   edi
  42bfc2:	dec    ecx
  42bfc4:	cwde   
  42bfc5:	dec    edi
  42bfc7:	int3   
  42bfc8:	shr    DWORD PTR [edx-0x1],0xff
  42bfcc:	dec    DWORD PTR [ecx+0x6789fa0d]
  42bfd2:	mov    DWORD PTR [ecx+0xa2ffed],edi
  42bfd8:	ins    DWORD PTR es:[edi],dx
  42bfd9:	outs   dx,BYTE PTR ds:[esi]
  42bfda:	int3   
  42bfdb:	inc    DWORD PTR [eax]
  42bfdd:	add    DWORD PTR [ebx+0x82ff12],0xffffffcd
  42bfe4:	adc    DWORD PTR ss:[edx],0x0
  42bfe8:	push   edi
  42bfe9:	mov    bh,0x0
  42bfeb:	inc    DWORD PTR [eax]
  42bfed:	and    DWORD PTR [edx-0x687c52],0x3d
  42bff4:	sbb    BYTE PTR [eax],al
  42bff6:	fmul   DWORD PTR [ecx-0x8b0]
  42bffc:	(bad)  
  42bffd:	call   FWORD PTR [esi+eax*2-0x1]
  42c001:	inc    BYTE PTR [eax]
  42c003:	inc    edi
  42c004:	push   ebx
  42c005:	call   FWORD PTR [edx+0xa996ff]
  42c00b:	inc    DWORD PTR [ebx+0xee5483]
  42c011:	sbb    eax,0xcc4793ff
  42c016:	or     eax,0x896baa89
  42c01b:	(bad)  
  42c01c:	inc    DWORD PTR [ebx+0x3e003f8e]
  42c022:	add    BYTE PTR [esi+0x28],cl
  42c025:	add    BYTE PTR [ebx-0x334a5a00],ah
  42c02b:	inc    DWORD PTR [eax]
  42c02d:	add    BYTE PTR [edi],bl
  42c02f:	ins    DWORD PTR es:[edi],dx
  42c030:	push   DWORD PTR [edi+0xd465ff]
  42c036:	jle    0x42c037
  42c038:	mov    ss,ebx
  42c03a:	add    ah,cl
  42c03c:	add    BYTE PTR [eax],al
  42c03e:	dec    edi
  42c03f:	adc    ecx,esp
  42c041:	dec    esp
  42c042:	inc    DWORD PTR [ecx-0x34]
  42c045:	mov    ebx,eax
  42c047:	xor    DWORD PTR [edx],0x56
  42c04a:	mov    esp,ecx
  42c04c:	int3   
  42c04d:	sub    edi,0xffffffd8
  42c050:	or     esi,0xffffff83
  42c053:	ret    0xccb8
  42c056:	pop    esi
  42c057:	(bad)  
  42c058:	inc    BYTE PTR [esi+0xffffff]
  42c05e:	imul   edx,DWORD PTR [ecx],0x4400cf00
  42c064:	sbb    eax,0xf000d283
  42c069:	xlat   BYTE PTR ds:[ebx]
  42c06a:	cmp    edi,0x0
  42c06d:	call   FWORD PTR [eax]
  42c06f:	push   eax
  42c070:	inc    DWORD PTR [ecx+0x92e389]
  42c076:	out    dx,al
  42c077:	mov    DWORD PTR [eax+ebx*8-0x1],ecx
  42c07b:	(bad)  
  42c07c:	inc    DWORD PTR [eax]
  42c07e:	sbb    eax,0xff2cff4f
  42c083:	ds pop ds
  42c085:	push   DWORD PTR [ecx-0x761c00]
  42c08b:	mov    edi,edi
  42c08d:	push   DWORD PTR [ecx+0xc2cce1]
  42c093:	inc    ebp
  42c094:	xor    bh,bh
  42c096:	xchg   edx,eax
  42c097:	add    BYTE PTR [eax-0x7c7628],cl
  42c09d:	jmp    FWORD PTR [edi+0x56]
  42c0a0:	(bad)  
  42c0a1:	sti    
  42c0a2:	add    BYTE PTR [eax-0xd2ffd6],dl
  42c0a8:	push   ecx
  42c0a9:	xchg   edi,edi
  42c0ab:	int3   
  42c0ac:	dec    DWORD PTR [ecx+0x2fffe38b]
  42c0b2:	int3   
  42c0b3:	jns    0x42c117
  42c0b5:	add    BYTE PTR [edi+edi*8+0x64],dh
  42c0b9:	lock (bad) 
  42c0bb:	(bad)  
  42c0bc:	(bad)  
  42c0bd:	jmp    ecx
  42c0bf:	inc    ebp
  42c0c0:	jmp    DWORD PTR [ecx+ecx*4+0xb]
  42c0c4:	pop    es
  42c0c5:	(bad)  
  42c0c6:	cmp    al,0xff
  42c0c8:	mov    cs,WORD PTR [ebx-0xff0034]
  42c0ce:	push   edi
  42c0cf:	fld    QWORD PTR [ebx+0x6ccaffd1]
  42c0d5:	push   DWORD PTR [ebp-0x1]
  42c0d8:	xor    esi,DWORD PTR [ecx-0x1]
  42c0de:	aad    0x71
  42c0e0:	add    BYTE PTR [esi-0x18a334],al
  42c0e6:	adc    al,0xcc
  42c0e8:	cli    
  42c0e9:	je     0x42c0eb
  42c0eb:	mov    edi,edi
  42c0ed:	jmp    FWORD PTR [eax]
  42c0ef:	sbb    eax,DWORD PTR [eax]
  42c0f1:	ret    
  42c0f2:	add    BYTE PTR [edi+eiz*8],ch
  42c0f5:	int3   
  42c0f6:	and    bh,bh
  42c0f8:	aad    0x8b
  42c0fa:	add    BYTE PTR [ecx+0x11affff],cl
  42c100:	int3   
  42c101:	data16 (bad) 
  42c103:	ds in  eax,0x0
  42c106:	cli    
  42c107:	add    BYTE PTR [edi],bl
  42c109:	or     al,0x0
  42c10b:	add    DWORD PTR [eax],0xffffff83
  42c10e:	dec    esp
  42c10f:	les    eax,FWORD PTR [eax]
  42c111:	icebp  
  42c112:	jmp    eax
  42c114:	mov    edi,0x583b9ff
  42c119:	aam    0xff
  42c11b:	(bad)  
  42c11c:	(bad)  
  42c11d:	call   DWORD PTR [edx-0x800f3]
  42c123:	xlat   BYTE PTR ds:[ebx]
  42c124:	xor    DWORD PTR [eax],eax
  42c126:	stos   DWORD PTR es:[edi],eax
  42c127:	add    ch,dl
  42c129:	fdiv   st(7),st
  42c12b:	mov    DWORD PTR [ebx-0xde2d00],eax
  42c131:	jae    0x42c132
  42c133:	cmp    al,0x82
  42c135:	add    BYTE PTR [esi+0x828e83],dh
  42c13b:	inc    DWORD PTR [eax]
  42c13d:	(bad)  
  42c13e:	fst    DWORD PTR [ebx]
  42c140:	add    BYTE PTR [edi-0xa8d401],cl
  42c146:	xchg   ebp,eax
  42c147:	add    BYTE PTR [ebp+0x69],bl
  42c14a:	(bad)  
  42c14b:	inc    DWORD PTR [ebx-0xc11400]
  42c151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c152:	call   DWORD PTR [esi-0x3d]
  42c155:	call   FWORD PTR [esi-0x1]
  42c158:	cli    
  42c159:	sub    al,BYTE PTR [eax]
  42c15b:	cmp    edi,0xffffffff
  42c15e:	stos   DWORD PTR es:[edi],eax
  42c15f:	sar    bh,cl
  42c161:	mov    al,ds:0xcc14c2ff
  42c166:	pop    ebx
  42c167:	add    BYTE PTR [ecx],cl
  42c169:	ja     0x42c16a
  42c16b:	(bad)  
  42c16c:	inc    DWORD PTR [ebx+0x4a8983b4]
  42c172:	push   DWORD PTR [edx+0x3d]
  42c175:	add    cl,bl
  42c177:	call   FWORD PTR [eax+0x22]
  42c17a:	add    bh,bh
  42c17c:	int3   
  42c17d:	mov    DWORD PTR [esi+0x2f],ebp
  42c180:	int3   
  42c181:	and    eax,0x83759eff
  42c186:	mov    cl,0xff
  42c188:	popa   
  42c189:	pop    esp
  42c18a:	add    bh,bh
  42c18c:	mov    DWORD PTR [eax],eax
  42c18e:	inc    ecx
  42c18f:	mov    cs,WORD PTR [ecx-0x690dffde]
  42c195:	mov    DWORD PTR [ecx],ebp
  42c197:	mov    ecx,ebx
  42c199:	sub    eax,DWORD PTR [eax]
  42c19b:	(bad)  
  42c19c:	inc    DWORD PTR [eax]
  42c19e:	daa    
  42c19f:	and    bh,bh
  42c1a1:	add    DWORD PTR [ebx-0xa76fd8b],0xff8b66ff
  42c1ab:	(bad)  
  42c1ac:	dec    DWORD PTR [ecx-0x70008449]
  42c1b2:	push   DWORD PTR [eax]
  42c1b4:	add    eax,0x63000bff
  42c1b9:	xchg   ebp,eax
  42c1ba:	add    bh,bh
  42c1bc:	dec    esp
  42c1be:	outs   dx,BYTE PTR ds:[esi]
  42c1bf:	inc    esi
  42c1c0:	call   FWORD PTR [eax+0xb590ff]
  42c1c6:	dec    esi
  42c1c7:	call   FWORD PTR [edi]
  42c1c9:	lock inc DWORD PTR [eax]
  42c1cc:	add    ah,cl
  42c1ce:	lods   al,BYTE PTR ds:[esi]
  42c1cf:	mov    eax,DWORD PTR [ebx-0x4fa77c9d]
  42c1d5:	jmp    DWORD PTR [ecx+ecx*4]
  42c1d8:	lahf   
  42c1d9:	mov    ds:0x83ff8900,al
  42c1de:	sub    BYTE PTR [edi-0x3aff2800],bl
  42c1e4:	dec    esp
  42c1e6:	cmp    edi,0xffffff86
  42c1e9:	xor    al,0xcc
  42c1eb:	add    bh,bh
  42c1ed:	jmp    DWORD PTR [esi-0x27]
  42c1f0:	mov    DWORD PTR [ebx+eax*4-0x51],ecx
  42c1f4:	pop    eax
  42c1f5:	int3   
  42c1f6:	test   eax,0x889a00
  42c1fb:	dec    esp
  42c1fd:	dec    DWORD PTR [edi+0xe10024]
  42c203:	sbb    eax,0x6b8901
  42c208:	push   esi
  42c209:	aaa    
  42c20a:	(bad)  
  42c20b:	inc    DWORD PTR [ebx-0x336eee00]
  42c211:	add    DWORD PTR [eax],eax
  42c213:	or     eax,0xcc488334
  42c218:	icebp  
  42c219:	out    0xff,al
  42c21b:	inc    DWORD PTR [eax]
  42c21d:	add    bl,dh
  42c21f:	push   es
  42c220:	jmp    DWORD PTR [edi+0x1edbff]
  42c226:	dec    eax
  42c227:	add    BYTE PTR [ebx],bh
  42c229:	outs   dx,BYTE PTR ds:[esi]
  42c22a:	add    BYTE PTR [eax],al
  42c22c:	inc    DWORD PTR [eax]
  42c22e:	out    dx,al
  42c22f:	iret   
  42c230:	dec    DWORD PTR [ecx-0x1]
  42c233:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42c235:	jmp    FWORD PTR [edi+edi*8]
  42c238:	cmp    eax,0x83000059
  42c23d:	dec    esp
  42c23f:	sub    al,0xff
  42c241:	loop   0x42c1c6
  42c243:	xchg   edi,eax
  42c244:	mov    ds:0xdff7983,eax
  42c249:	inc    eax
  42c24a:	inc    DWORD PTR [ebx-0x5bd87c7d]
  42c250:	add    bl,bh
  42c252:	adc    DWORD PTR [ebx+0x41],0x0
  42c256:	dec    edx
  42c257:	(bad)  
  42c258:	mov    esi,0x83ff25
  42c25d:	dec    DWORD PTR [esi-0xd500e9]
  42c263:	and    eax,0x83fa832b
  42c268:	and    ch,dh
  42c26a:	(bad)  
  42c26b:	inc    DWORD PTR [eax]
  42c26d:	int3   
  42c26e:	cwde   
  42c26f:	test   eax,0xb0009c00
  42c274:	add    eax,0x8c89a683
  42c279:	inc    eax
  42c27a:	dec    DWORD PTR [ecx+0x4308ccff]
  42c280:	call   FWORD PTR [ecx]
  42c282:	(bad)  
  42c283:	jmp    0x42c29a
  42c285:	sub    DWORD PTR [ebp-0xb01a01],0xffffff89
  42c28c:	(bad)  
  42c28d:	inc    DWORD PTR [ebx+eax*1-0x7d]
  42c291:	jns    0x42c292
  42c293:	loopne 0x42c2f0
  42c295:	jmp    FWORD PTR [edx-0x1]
  42c298:	ja     0x42c2db
  42c29a:	add    bh,bh
  42c29c:	dec    esp
  42c29e:	das    
  42c29f:	pop    ss
  42c2a0:	int3   
  42c2a1:	add    eax,0xff54cc00
  42c2a6:	pop    edi
  42c2a7:	inc    DWORD PTR [esi]
  42c2a9:	sbb    al,0x0
  42c2ab:	add    bh,bh
  42c2ad:	mov    DWORD PTR [ecx+0x3083dc],eax
  42c2b3:	mov    eax,ss
  42c2b5:	add    al,ch
  42c2b7:	jmp    DWORD PTR [ebx-0xffff97]
  42c2bd:	add    BYTE PTR [ebp-0xc],dh
  42c2c0:	jmp    FWORD PTR [edi]
  42c2c2:	add    BYTE PTR [esi-0x62],bl
  42c2c5:	jmp    FWORD PTR [edi-0x1]
  42c2c8:	ins    DWORD PTR es:[edi],dx
  42c2c9:	sbb    bh,bh
  42c2cb:	inc    DWORD PTR [eax]
  42c2cd:	mov    DWORD PTR [ebx-0xc000c3],eax
  42c2d3:	lahf   
  42c2d4:	mov    ah,0xcc
  42c2d6:	dec    ebx
  42c2d7:	push   DWORD PTR [ecx]
  42c2d9:	cdq    
  42c2da:	(bad)  
  42c2db:	inc    DWORD PTR [ebx+0x6311cc]
  42c2e1:	xchg   edi,eax
  42c2e2:	add    DWORD PTR [ebp+0x58],0x0
  42c2e6:	rol    DWORD PTR [eax],cl
  42c2e8:	cwde   
  42c2e9:	ins    DWORD PTR es:[edi],dx
  42c2ea:	add    bh,bh
  42c2ec:	(bad)  
  42c2ed:	jmp    DWORD PTR [edx]
  42c2ef:	mov    cs,WORD PTR [ecx-0x39980049]
  42c2f5:	add    BYTE PTR [ebx-0xea2634],ch
  42c2fb:	add    BYTE PTR [eax],al
  42c2fd:	jmp    FWORD PTR [edx-0x443328]
  42c303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c304:	sub    ecx,esp
  42c306:	sar    edi,0x69
  42c309:	xchg   esi,eax
  42c30a:	mov    edi,edi
  42c30c:	add    BYTE PTR [eax],al
  42c30e:	jmp    0xd565:0x9100ee
  42c315:	call   DWORD PTR [eax-0x1]
  42c318:	jge    0x42c333
  42c31a:	add    BYTE PTR [ebx+0x200affff],al
  42c320:	call   FWORD PTR [eax]
  42c322:	inc    DWORD PTR [ebp+0x3c]
  42c325:	(bad)  
  42c326:	inc    DWORD PTR [ebx-0x18c2]
  42c32c:	(bad)  
  42c32d:	push   DWORD PTR [edi+ebx*1]
  42c330:	(bad)  
  42c331:	js     0x42c333
  42c333:	xchg   ebp,eax
  42c334:	aad    0xcc
  42c336:	push   edi
  42c337:	add    BYTE PTR [esi],al
  42c339:	adc    bh,bh
  42c33b:	inc    DWORD PTR [eax]
  42c33d:	int3   
  42c33e:	aaa    
  42c33f:	cmp    edi,0xfd8dffd2
  42c345:	sbb    edi,0xffffffff
  42c348:	iret   
  42c349:	int3   
  42c34a:	(bad)  
  42c34b:	dec    DWORD PTR [ecx+0x2de100]
  42c351:	jnp    0x42c352
  42c353:	out    0xc6,eax
  42c355:	add    BYTE PTR [eax-0x5e7b7d],al
  42c35b:	inc    DWORD PTR [eax]
  42c35d:	add    dh,al
  42c35f:	pop    ss
  42c360:	add    DWORD PTR [esi+0x0],0x57
  42c364:	cmc    
  42c365:	sbb    DWORD PTR [eax-0x1],0xffffffaa
  42c369:	sub    eax,0xccffffff
  42c36e:	gs adc eax,0x30ccc0ff
  42c374:	adc    eax,DWORD PTR [ebx-0x5b2bffd6]
  42c37a:	add    BYTE PTR [ebx-0x16d90077],al
  42c380:	jmp    FWORD PTR [ecx]
  42c382:	mov    DWORD PTR [esi-0x13],edi
  42c385:	mov    eax,edi
  42c387:	sub    ebp,0xffffff85
  42c38a:	add    bh,bh
  42c38c:	int3   
  42c38d:	mov    ecx,edx
  42c38f:	cmp    DWORD PTR [eax],eax
  42c391:	fiadd  WORD PTR [ebx-0x610045c3]
  42c397:	push   DWORD PTR [ebx+ebp*8+0x0]
  42c39b:	dec    DWORD PTR [ecx+0xae5bff]
  42c3a1:	in     eax,0x89
  42c3a3:	cmp    esp,DWORD PTR [ecx-0xe009501]
  42c3a9:	fadd   QWORD PTR [eax]
  42c3ab:	(bad)  
  42c3ac:	inc    DWORD PTR [eax]
  42c3ae:	outs   dx,DWORD PTR ds:[esi]
  42c3af:	ins    BYTE PTR es:[edi],dx
  42c3b0:	int3   
  42c3b1:	pop    eax
  42c3b2:	int3   
  42c3b3:	hlt    
  42c3b4:	fxch   st(4)
  42c3b6:	add    BYTE PTR [eax],0xf5
  42c3b9:	xlat   BYTE PTR ds:[ebx]
  42c3ba:	inc    DWORD PTR [eax]
  42c3bc:	int3   
  42c3bd:	call   DWORD PTR [eax]
  42c3bf:	fimul  WORD PTR [ecx+0x2ab0003f]
  42c3c5:	sbb    DWORD PTR [ecx-0xa9601],0x0
  42c3cc:	add    ah,cl
  42c3ce:	pop    ds
  42c3cf:	mov    ebp,0xcfff7783
  42c3d4:	and    eax,0xd089e683
  42c3d9:	xchg   ecx,eax
  42c3da:	add    BYTE PTR [ecx+0x43ff83],cl
  42c3e0:	mov    DWORD PTR [edi-0x34],esi
  42c3e3:	ds popa 
  42c3e5:	and    edx,0xffffffff
  42c3e8:	cmp    ch,al
  42c3ea:	add    ah,cl
  42c3ec:	int3   
  42c3ed:	jmp    FWORD PTR [ebp-0xcf0023]
  42c3f3:	(bad)  
  42c3f4:	jne    0x42c3f6
  42c3f6:	sub    BYTE PTR [ebx-0xff42ff],al
  42c3fc:	int3   
  42c3fd:	jmp    FWORD PTR [ebp-0x5b]
  42c400:	int3   
  42c401:	push   cs
  42c402:	add    BYTE PTR [ecx-0x7cbe76b3],ch
  42c408:	fild   WORD PTR [ebx]
  42c40a:	add    bh,bh
  42c40c:	inc    DWORD PTR [eax]
  42c40e:	pop    edx
  42c40f:	adc    al,0x0
  42c411:	dec    esi
  42c412:	inc    DWORD PTR [edx+0x42]
  42c415:	mov    ebx,esi
  42c417:	jmp    DWORD PTR [edx]
  42c419:	(bad)  
  42c41a:	(bad)  
  42c41b:	inc    DWORD PTR [eax]
  42c41d:	(bad)  
  42c41e:	mov    ecx,0xccd200c8
  42c423:	inc    ecx
  42c424:	add    DWORD PTR [ebx-0x38c400b5],0xffffffff
  42c42b:	cmp    edi,0xffffffff
  42c42e:	das    
  42c42f:	and    al,0xff
  42c431:	and    al,BYTE PTR [ebx+0x5f8344e9]
  42c437:	add    BYTE PTR ds:0xffffff0f,bl
  42c43d:	(bad)  
  42c43e:	clc    
  42c43f:	mov    edi,0x2300da00
  42c444:	in     eax,0xff
  42c446:	fadd   DWORD PTR [eax]
  42c448:	scas   al,BYTE PTR es:[edi]
  42c449:	jbe    0x42c44a
  42c44b:	add    ah,cl
  42c44d:	add    DWORD PTR [edx],0xd
  42c450:	add    BYTE PTR [esi],bl
  42c452:	inc    DWORD PTR ds:0xae002a
  42c458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c459:	ds add bh,bh
  42c45c:	add    bh,bh
  42c45e:	push   cs
  42c45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c460:	push   edx
  42c462:	add    BYTE PTR [ecx-0x130047],dl
  42c468:	das    
  42c469:	mov    al,ds:0xff830083
  42c46e:	cmp    BYTE PTR fs:[eax],al
  42c471:	add    eax,0xff625dff
  42c476:	xlat   BYTE PTR ds:[ebx]
  42c477:	add    BYTE PTR [edx+eiz*1-0x1],dl
  42c47b:	(bad)  
  42c47c:	inc    DWORD PTR [eax]
  42c47e:	sub    bl,bh
  42c480:	add    BYTE PTR [eax+0x2dcaff],al
  42c486:	pop    esi
  42c487:	call   DWORD PTR [ebx-0x5d]
  42c48a:	inc    DWORD PTR [eax]
  42c48c:	add    bh,bh
  42c48e:	dec    esi
  42c48f:	push   esi
  42c490:	call   FWORD PTR [edi+0x0]
  42c493:	jecxz  0x42c427
  42c495:	int3   
  42c496:	out    dx,eax
  42c497:	add    BYTE PTR ds:0xff838354,cl
  42c49d:	inc    DWORD PTR [esi+eax*2]
  42c4a0:	mov    ecx,ebx
  42c4a2:	call   FWORD PTR ds:0xff6bff7c
  42c4a8:	mov    esp,0xff83ff30
  42c4ad:	jmp    DWORD PTR [ebx-0x7c990075]
  42c4b3:	jnp    0x42c46c
  42c4b5:	add    BYTE PTR [edx+0xa64900],ah
  42c4bb:	(bad)  
  42c4bc:	inc    DWORD PTR [ebx-0x43ff20ba]
  42c4c2:	push   DWORD PTR [ebp-0x76ff95]
  42c4c8:	dec    edi
  42c4c9:	dec    esi
  42c4ca:	inc    DWORD PTR [ebx-0x24fb7c01]
  42c4d0:	(bad)  
  42c4d1:	fadd   DWORD PTR [eax]
  42c4d3:	sahf   
  42c4d4:	push   es
  42c4d5:	dec    DWORD PTR [eax-0x7d]
  42c4d8:	sbb    DWORD PTR [edi-0x7c77],ebp
  42c4de:	in     eax,dx
  42c4df:	push   ds
  42c4e0:	cmp    DWORD PTR [eax-0x1],0x9
  42c4e4:	retf   
  42c4e5:	add    BYTE PTR [esi-0x34],al
  42c4e8:	aam    0x4c
  42c4ea:	inc    DWORD PTR [eax]
  42c4ec:	add    BYTE PTR [ecx+0x73ff63c2],cl
  42c4f2:	add    bh,bh
  42c4f4:	call   0xcc7e:0xecff7583
  42c4fb:	inc    DWORD PTR [eax]
  42c4fd:	int3   
  42c4fe:	fdiv   st,st(6)
  42c500:	jmp    DWORD PTR [edi-0x76b43c77]
  42c506:	ins    DWORD PTR es:[edi],dx
  42c507:	int3   
  42c508:	pop    ebp
  42c509:	imul   eax,DWORD PTR [eax],0xffffffff
  42c50c:	add    DWORD PTR [ebx+0xe89fd42],0xffffff89
  42c513:	xor    al,0x0
  42c516:	(bad)  
  42c517:	mov    DWORD PTR [eax+esi*1+0xff0000],eax
  42c51e:	sbb    eax,0x83adccd2
  42c523:	rol    BYTE PTR ds:0x78ff6b00,0xb4
  42c52a:	(bad)  
  42c52b:	(bad)  
  42c52c:	(bad)  
  42c52d:	dec    DWORD PTR [edi]
  42c52f:	int    0xcc
  42c531:	repnz jmp FWORD PTR ds:0xffa6ffb9
  42c538:	ins    DWORD PTR es:[edi],dx
  42c539:	cmp    edi,0x5eff00ff
  42c53f:	sbb    DWORD PTR [ecx+0x1787ff49],ecx
  42c545:	sbb    DWORD PTR [edx+0x0],0xffffff90
  42c549:	cmp    edi,0x4ffcc83
  42c54f:	inc    edx
  42c550:	jmp    DWORD PTR [ebx-0x1]
  42c553:	pop    ebx
  42c554:	imul   edi,edi,0xa8e1ff53
  42c55a:	add    BYTE PTR [eax],al
  42c55c:	cmp    edi,0x17
  42c55f:	scas   al,BYTE PTR es:[edi]
  42c560:	push   DWORD PTR [edi+edi*8-0x5600b9c7]
  42c567:	add    BYTE PTR [esi],dl
  42c569:	push   ecx
  42c56a:	inc    DWORD PTR [eax]
  42c56c:	inc    DWORD PTR [ebx+0x29cc2dcb]
  42c572:	add    BYTE PTR [ebx+0xd9cc3c],dl
  42c578:	or     DWORD PTR [edx],esi
  42c57a:	mov    DWORD PTR [eax],eax
  42c57c:	add    BYTE PTR [eax],al
  42c57e:	bound  esp,QWORD PTR [eax+0x0]
  42c581:	test   al,0x89
  42c583:	hlt    
  42c584:	dec    ebx
  42c585:	push   DWORD PTR [eax]
  42c587:	call   DWORD PTR [ebx]
  42c589:	stc    
  42c58a:	add    ah,cl
  42c58c:	add    bh,bh
  42c58e:	jo     0x42c5cd
  42c590:	add    BYTE PTR [ebx],dh
  42c592:	add    BYTE PTR [edx+ebp*4],dh
  42c595:	add    BYTE PTR [edi+edi*8-0x76bd58],dl
  42c59c:	cmp    edi,0xffffff90
  42c59f:	adc    edi,edi
  42c5a1:	nop
  42c5a2:	add    BYTE PTR [ebx],bl
  42c5a4:	pusha  
  42c5a5:	jmp    FWORD PTR [edx+0x0]
  42c5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5a9:	test   BYTE PTR [eax],al
  42c5ab:	add    BYTE PTR [eax],al
  42c5ad:	add    BYTE PTR [ecx],bh
  42c5af:	stc    
  42c5b0:	mov    edx,esp
  42c5b2:	add    BYTE PTR [ebx-0x7c43ff7f],ch
  42c5b8:	sub    DWORD PTR ds:0xff008300,edi
  42c5be:	call   ebp
  42c5c0:	add    BYTE PTR [ebp+0x0],ah
  42c5c3:	jb     0x42c61c
  42c5c5:	jmp    FWORD PTR [eax-0xd74500]
  42c5cb:	(bad)  
  42c5cc:	(bad)  
  42c5cd:	jmp    DWORD PTR [eax-0x97c02]
  42c5d3:	rol    DWORD PTR [eax+0x628918ff],1
  42c5d9:	mov    dh,0x0
  42c5db:	inc    DWORD PTR [eax]
  42c5dd:	inc    DWORD PTR [edx+0x8]
  42c5e0:	int3   
  42c5e1:	(bad)  
  42c5e2:	(bad)  
  42c5e3:	mov    ecx,0x4f00f8
  42c5e8:	pusha  
  42c5e9:	mov    dh,0x0
  42c5eb:	cmp    edi,0x0
  42c5ee:	fsub   st(3),st
  42c5f0:	add    BYTE PTR [edi-0x34],dh
  42c5f3:	mov    cl,0xef
  42c5f5:	add    DWORD PTR [eax],0xffffffcc
  42c5f8:	aad    0xef
  42c5fa:	add    DWORD PTR [eax],0x0
  42c5fd:	add    BYTE PTR [edi-0x3f7c0b],bl
  42c603:	inc    bh
  42c605:	and    DWORD PTR [ebx+eax*4-0x14],0xffffffb0
  42c60a:	(bad)  
  42c60b:	(bad)  
  42c60c:	(bad)  
  42c60d:	(bad)  
  42c60e:	jle    0x42c644
  42c610:	call   edx
  42c612:	call   edx
  42c614:	fmulp  st(4),st
  42c616:	and    DWORD PTR [eax],eax
  42c618:	add    DWORD PTR [ebx],esi
  42c61a:	(bad)  
  42c61b:	(bad)  
  42c61c:	(bad)  
  42c61d:	jmp    FWORD PTR [edx+0x28]
  42c620:	add    BYTE PTR [edi+0x0],bl
  42c623:	pop    ebp
  42c624:	stc    
  42c625:	dec    DWORD PTR [esi+0x0]
  42c628:	mov    al,ds:0x83ffbd
  42c62d:	or     DWORD PTR [ebx-0xcb0027],0x48
  42c634:	add    eax,0xf1ffdfff
  42c639:	in     al,dx
  42c63a:	(bad)  
  42c63b:	dec    esp
  42c63d:	add    cl,dl
  42c63f:	sbb    edi,edi
  42c641:	dec    esp
  42c642:	inc    DWORD PTR [esp+ebx*8+0x0]
  42c646:	das    
  42c647:	call   FWORD PTR [ebp+0xff82]
  42c64d:	jmp    FWORD PTR [ebx-0x19]
  42c650:	add    BYTE PTR [esi-0x313334],ah
  42c656:	cmp    edi,edi
  42c658:	lds    esi,FWORD PTR ds:0xffccffcc
  42c65e:	lds    esi,FWORD PTR [esi+0x6fffc100]
  42c664:	cmp    eax,0x6483c2ff
  42c669:	lods   al,BYTE PTR ds:[esi]
  42c66a:	dec    DWORD PTR [ecx+0x2c75ffff]
  42c670:	push   DWORD PTR [edi-0x7d]
  42c673:	push   esi
  42c674:	add    DWORD PTR [eax],0x15b700bf
  42c67a:	(bad)  
  42c67b:	inc    DWORD PTR [eax]
  42c67d:	(bad)  
  42c67e:	(bad)  
  42c67f:	fs sbb esi,0xffffffff
  42c683:	neg    BYTE PTR [esi+0x2cffe6ff]
  42c689:	dec    edx
  42c68a:	add    bh,bh
  42c68c:	dec    esp
  42c68e:	push   esi
  42c68f:	sar    edi,1
  42c691:	xchg   bh,bh
  42c693:	call   0xff75c5f6
  42c698:	daa    
  42c699:	cmp    edi,edi
  42c69b:	add    bh,bh
  42c69d:	push   DWORD PTR [eax-0x7c1eff07]
  42c6a3:	push   ss
  42c6a4:	mov    ah,0xff
  42c6a6:	mov    al,0xcc
  42c6a8:	scas   al,BYTE PTR es:[edi]
  42c6a9:	call   0x7a29:0xff00ff83
  42c6b0:	int3   
  42c6b1:	jg     0x42c6b2
  42c6b3:	and    BYTE PTR [ebp-0xbff0c01],bh
  42c6b9:	mov    eax,0xff000083
  42c6be:	xor    al,0x3f
  42c6c0:	(bad)  
  42c6c1:	mov    edx,0xffa4f7ff
  42c6c6:	(bad)  
  42c6c7:	jmp    FWORD PTR [eax-0x7c7cf3]
  42c6cd:	add    BYTE PTR [ecx],ch
  42c6cf:	mov    bh,0x0
  42c6d1:	push   edx
  42c6d2:	add    dl,al
  42c6d4:	aam    0x89
  42c6d6:	fdiv   st(7),st
  42c6d8:	inc    esi
  42c6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6da:	inc    DWORD PTR [eax]
  42c6dc:	inc    DWORD PTR [ebx+0x3cffa0ba]
  42c6e2:	add    BYTE PTR [eax],ah
  42c6e4:	ds inc edx
  42c6e7:	push   DWORD PTR [ebp-0xff0044]
  42c6ed:	sbb    DWORD PTR [ebp-0xc97ccd],0x17
  42c6f4:	sbb    eax,DWORD PTR [ebx+0x63d6ff34]
  42c6fa:	(bad)  
  42c6fb:	dec    esp
  42c6fd:	add    BYTE PTR [ebp-0x907c52],al
  42c703:	mov    edi,0x17ffdd
  42c708:	sub    ch,BYTE PTR [eax]
  42c70a:	add    bh,bh
  42c70c:	dec    esp
  42c70e:	shr    DWORD PTR [esi],0xff
  42c711:	fdivr  st,st(7)
  42c713:	adc    edx,ebp
  42c715:	jmp    FWORD PTR [eax-0x3399ce01]
  42c71b:	(bad)  
  42c71c:	(bad)  
  42c71d:	jmp    FWORD PTR [esi+0x74]
  42c720:	inc    DWORD PTR [ebp-0xa0e37d]
  42c726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c727:	and    DWORD PTR [eax-0x47],0x0
  42c72b:	mov    DWORD PTR [ecx-0xa10501],ecx
  42c731:	cld    
  42c732:	xor    edi,0xffffff9f
  42c735:	add    BYTE PTR [ebx-0x7d],bh
  42c738:	pop    es
  42c739:	mov    eax,0x83ffffff
  42c73e:	inc    esp
  42c73f:	daa    
  42c740:	add    BYTE PTR [eax],dh
  42c742:	add    BYTE PTR [ecx],bl
  42c744:	ins    DWORD PTR es:[edi],dx
  42c745:	int3   
  42c746:	push   es
  42c747:	dec    DWORD PTR [eax]
  42c749:	jge    0x42c74a
  42c74b:	(bad)  
  42c74c:	(bad)  
  42c74d:	inc    DWORD PTR [edi+0x56555387]
  42c753:	push   edi
  42c754:	call   DWORD PTR ds:0x444068
  42c75a:	mov    edx,DWORD PTR ds:0x447028
  42c760:	mov    ebp,eax
  42c762:	mov    eax,ds:0x447d1c
  42c767:	add    eax,0xdcb0
  42c76c:	mov    esi,0x5b
  42c771:	movzx  ecx,WORD PTR [edx+0x6]
  42c775:	movzx  edx,WORD PTR [edx+0x2]
  42c779:	shl    ecx,0x10
  42c77c:	add    ecx,edx
  42c77e:	mov    DWORD PTR ds:0x447d04,ecx
  42c784:	mov    edx,0x22cf9da1
  42c789:	sub    edx,DWORD PTR ds:0x447d14
  42c78f:	add    eax,0x10
  42c792:	xor    edx,ecx
  42c794:	mov    DWORD PTR [eax-0x10],edx
  42c797:	mov    edx,DWORD PTR ds:0x447028
  42c79d:	add    edx,0x8
  42c7a0:	mov    DWORD PTR ds:0x447028,edx
  42c7a6:	movzx  ecx,WORD PTR [edx+0x6]
  42c7aa:	movzx  edx,WORD PTR [edx+0x2]
  42c7ae:	shl    ecx,0x10
  42c7b1:	add    ecx,edx
  42c7b3:	mov    DWORD PTR ds:0x447d04,ecx
  42c7b9:	mov    edx,0x22cf9da1
  42c7be:	sub    edx,DWORD PTR ds:0x447d14
  42c7c4:	xor    edx,ecx
  42c7c6:	mov    DWORD PTR [eax-0xc],edx
  42c7c9:	mov    edx,DWORD PTR ds:0x447028
  42c7cf:	add    edx,0x8
  42c7d2:	mov    DWORD PTR ds:0x447028,edx
  42c7d8:	movzx  ecx,WORD PTR [edx+0x6]
  42c7dc:	movzx  edx,WORD PTR [edx+0x2]
  42c7e0:	shl    ecx,0x10
  42c7e3:	add    ecx,edx
  42c7e5:	mov    DWORD PTR ds:0x447d04,ecx
  42c7eb:	mov    edx,0x22cf9da1
  42c7f0:	sub    edx,DWORD PTR ds:0x447d14
  42c7f6:	xor    edx,ecx
  42c7f8:	mov    DWORD PTR [eax-0x8],edx
  42c7fb:	mov    edx,DWORD PTR ds:0x447028
  42c801:	add    edx,0x8
  42c804:	mov    DWORD PTR ds:0x447028,edx
  42c80a:	movzx  ecx,WORD PTR [edx+0x6]
  42c80e:	movzx  edx,WORD PTR [edx+0x2]
  42c812:	shl    ecx,0x10
  42c815:	add    ecx,edx
  42c817:	mov    edx,0x22cf9da1
  42c81c:	sub    edx,DWORD PTR ds:0x447d14
  42c822:	mov    DWORD PTR ds:0x447d04,ecx
  42c828:	xor    edx,ecx
  42c82a:	mov    DWORD PTR [eax-0x4],edx
  42c82d:	mov    edx,DWORD PTR ds:0x447028
  42c833:	add    edx,0x8
  42c836:	dec    esi
  42c837:	mov    DWORD PTR ds:0x447028,edx
  42c83d:	jne    0x42c771
  42c843:	push   0x413a50
  42c848:	push   0x421470
  42c84d:	call   0x440e30
  42c852:	mov    esi,DWORD PTR ds:0x447d1c
  42c858:	mov    ebx,DWORD PTR ds:0x444050
  42c85e:	mov    ecx,DWORD PTR ds:0x44702c
  42c864:	add    esp,0x8
  42c867:	add    esi,0xc3cc
  42c86d:	mov    edi,0xc2
  42c872:	movzx  eax,BYTE PTR [ecx+0xb]
  42c876:	movzx  edx,BYTE PTR [ecx+0x8]
  42c87a:	shl    eax,0x8
  42c87d:	add    eax,edx
  42c87f:	movzx  edx,BYTE PTR [ecx+0x5]
  42c883:	movzx  ecx,BYTE PTR [ecx+0x2]
  42c887:	shl    eax,0x8
  42c88a:	add    eax,edx
  42c88c:	shl    eax,0x8
  42c88f:	add    eax,ecx
  42c891:	mov    edx,0xde80c6af
  42c896:	sub    edx,DWORD PTR ds:0x447d14
  42c89c:	mov    ds:0x447d04,eax
  42c8a1:	xor    edx,eax
  42c8a3:	mov    DWORD PTR [esi],edx
  42c8a5:	mov    eax,ds:0x44702c
  42c8aa:	mov    ecx,DWORD PTR ds:0x447d14
  42c8b0:	mov    eax,DWORD PTR [eax+0xc]
  42c8b3:	add    ecx,0xde8046ad
  42c8b9:	xor    ecx,eax
  42c8bb:	mov    ds:0x447d04,eax
  42c8c0:	mov    DWORD PTR [esi+0x4],ecx
  42c8c3:	call   ebx
  42c8c5:	mov    ecx,DWORD PTR ds:0x44702c
  42c8cb:	add    ecx,0x10
  42c8ce:	add    esi,0x8
  42c8d1:	dec    edi
  42c8d2:	mov    DWORD PTR ds:0x44702c,ecx
  42c8d8:	jne    0x42c872
  42c8da:	mov    edx,DWORD PTR ds:0x447d1c
  42c8e0:	mov    ecx,DWORD PTR ds:0x447030
  42c8e6:	add    edx,0xc9dc
  42c8ec:	mov    esi,0x103
  42c8f1:	movzx  eax,BYTE PTR [ecx+0xa]
  42c8f5:	movzx  edi,BYTE PTR [ecx+0x7]
  42c8f9:	shl    eax,0x8
  42c8fc:	add    eax,edi
  42c8fe:	movzx  edi,BYTE PTR [ecx+0x3]
  42c902:	movzx  ecx,BYTE PTR [ecx]
  42c905:	shl    eax,0x8
  42c908:	add    eax,edi
  42c90a:	shl    eax,0x8
  42c90d:	add    eax,ecx
  42c90f:	mov    ecx,0xeb373a87
  42c914:	sub    ecx,DWORD PTR ds:0x447d14
  42c91a:	mov    ds:0x447d04,eax
  42c91f:	xor    ecx,eax
  42c921:	mov    DWORD PTR [edx],ecx
  42c923:	mov    eax,ds:0x447030
  42c928:	mov    eax,DWORD PTR [eax+0xc]
  42c92b:	mov    ecx,DWORD PTR ds:0x447d14
  42c931:	add    ecx,0xeb36ba85
  42c937:	xor    ecx,eax
  42c939:	mov    ds:0x447d04,eax
  42c93e:	mov    DWORD PTR [edx+0x4],ecx
  42c941:	mov    ecx,DWORD PTR ds:0x447030
  42c947:	add    ecx,0x10
  42c94a:	add    edx,0x8
  42c94d:	dec    esi
  42c94e:	mov    DWORD PTR ds:0x447030,ecx
  42c954:	jne    0x42c8f1
  42c956:	movzx  eax,BYTE PTR [ecx+0xa]
  42c95a:	movzx  esi,BYTE PTR [ecx+0x7]
  42c95e:	shl    eax,0x8
  42c961:	add    eax,esi
  42c963:	movzx  esi,BYTE PTR [ecx+0x3]
  42c967:	movzx  ecx,BYTE PTR [ecx]
  42c96a:	shl    eax,0x8
  42c96d:	add    eax,esi
  42c96f:	shl    eax,0x8
  42c972:	add    eax,ecx
  42c974:	mov    ecx,DWORD PTR ds:0x447d14
  42c97a:	add    ecx,0xeb36ba85
  42c980:	xor    ecx,eax
  42c982:	mov    ds:0x447d04,eax
  42c987:	mov    DWORD PTR [edx],ecx
  42c989:	mov    esi,DWORD PTR ds:0x447d1c
  42c98f:	push   0x446ad8
  42c994:	add    esi,0xd1f8
  42c99a:	call   DWORD PTR ds:0x444028
  42c9a0:	mov    eax,DWORD PTR [esp+0x14]
  42c9a4:	add    eax,0x5
  42c9a7:	mov    edx,0x157
  42c9ac:	lea    esp,[esp+0x0]
  42c9b0:	movzx  ecx,BYTE PTR [eax+0x2]
  42c9b4:	movzx  edi,WORD PTR [eax]
  42c9b7:	shl    ecx,0x10
  42c9ba:	add    ecx,edi
  42c9bc:	movzx  edi,BYTE PTR [eax-0x2]
  42c9c0:	shl    ecx,0x8
  42c9c3:	add    ecx,edi
  42c9c5:	mov    edi,DWORD PTR ds:0x447d14
  42c9cb:	mov    DWORD PTR ds:0x447d04,ecx
  42c9d1:	add    edi,0xd8e1b754
  42c9d7:	xor    edi,ecx
  42c9d9:	mov    DWORD PTR [esi],edi
  42c9db:	movzx  ecx,BYTE PTR [eax+0xa]
  42c9df:	movzx  edi,WORD PTR [eax+0x8]
  42c9e3:	shl    ecx,0x10
  42c9e6:	add    ecx,edi
  42c9e8:	movzx  edi,BYTE PTR [eax+0x6]
  42c9ec:	shl    ecx,0x8
  42c9ef:	add    ecx,edi
  42c9f1:	mov    edi,DWORD PTR ds:0x447d14
  42c9f7:	add    edi,0xd8e1b754
  42c9fd:	xor    edi,ecx
  42c9ff:	mov    DWORD PTR ds:0x447d04,ecx
  42ca05:	mov    DWORD PTR [esi+0x4],edi
  42ca08:	add    eax,0x10
  42ca0b:	add    esi,0x8
  42ca0e:	dec    edx
  42ca0f:	jne    0x42c9b0
  42ca11:	mov    esi,DWORD PTR ds:0x447d1c
  42ca17:	mov    ebx,DWORD PTR ds:0x44406c
  42ca1d:	mov    ecx,DWORD PTR ds:0x447034
  42ca23:	add    esi,0xe260
  42ca29:	mov    edi,0x1f5
  42ca2e:	mov    edi,edi
  42ca30:	movzx  eax,BYTE PTR [ecx+0x5]
  42ca34:	movzx  edx,WORD PTR [ecx+0x3]
  42ca38:	movzx  ecx,BYTE PTR [ecx]
  42ca3b:	push   0x0
  42ca3d:	push   0x15e
  42ca42:	shl    eax,0x10
  42ca45:	add    eax,edx
  42ca47:	mov    edx,DWORD PTR ds:0x447d14
  42ca4d:	push   0x70
  42ca4f:	push   0xb8
  42ca54:	shl    eax,0x8
  42ca57:	add    eax,ecx
  42ca59:	push   0x49
  42ca5b:	add    edx,0x217efc8
  42ca61:	xor    edx,eax
  42ca63:	push   0x0
  42ca65:	mov    ds:0x447d04,eax
  42ca6a:	mov    DWORD PTR [esi],edx
  42ca6c:	push   ebp
  42ca6d:	add    esi,0x4
  42ca70:	call   ebx
  42ca72:	mov    ecx,DWORD PTR ds:0x447034
  42ca78:	add    ecx,0x8
  42ca7b:	dec    edi
  42ca7c:	mov    DWORD PTR ds:0x447034,ecx
  42ca82:	jne    0x42ca30
  42ca84:	mov    esi,DWORD PTR ds:0x447d1c
  42ca8a:	add    esi,0xea34
  42ca90:	cmp    DWORD PTR ds:0x44703c,edi
  42ca96:	jbe    0x42cb36
  42ca9c:	mov    ecx,DWORD PTR ds:0x447038
  42caa2:	movzx  eax,WORD PTR [ecx+0x5]
  42caa6:	movzx  edx,BYTE PTR [ecx+0x3]
  42caaa:	movzx  ecx,BYTE PTR [ecx+0x1]
  42caae:	shl    eax,0x8
  42cab1:	add    eax,edx
  42cab3:	mov    edx,DWORD PTR ds:0x447d14
  42cab9:	shl    eax,0x8
  42cabc:	add    eax,ecx
  42cabe:	mov    ds:0x447d04,eax
  42cac3:	add    edx,0x2f374455
  42cac9:	xor    edx,eax
  42cacb:	mov    DWORD PTR [esi],edx
  42cacd:	mov    eax,ds:0x447038
  42cad2:	movzx  ecx,BYTE PTR [eax+0xe]
  42cad6:	movzx  edx,WORD PTR [eax+0xc]
  42cada:	movzx  eax,BYTE PTR [eax+0x8]
  42cade:	push   0x0
  42cae0:	push   0x121
  42cae5:	push   0x113
  42caea:	shl    ecx,0x10
  42caed:	push   0x2a
  42caef:	add    ecx,edx
  42caf1:	push   0x3b
  42caf3:	shl    ecx,0x8
  42caf6:	push   0x0
  42caf8:	add    ecx,eax
  42cafa:	push   ebp
  42cafb:	mov    DWORD PTR ds:0x447d04,ecx
  42cb01:	call   ebx
  42cb03:	mov    ecx,0x2f37c457
  42cb08:	sub    ecx,DWORD PTR ds:0x447d14
  42cb0e:	inc    edi
  42cb0f:	xor    ecx,DWORD PTR ds:0x447d04
  42cb15:	add    esi,0x8
  42cb18:	mov    DWORD PTR [esi-0x4],ecx
  42cb1b:	mov    ecx,DWORD PTR ds:0x447038
  42cb21:	add    ecx,0x10
  42cb24:	mov    DWORD PTR ds:0x447038,ecx
  42cb2a:	cmp    edi,DWORD PTR ds:0x44703c
  42cb30:	jb     0x42caa2
  42cb36:	mov    edx,DWORD PTR ds:0x447d1c
  42cb3c:	mov    ecx,DWORD PTR ds:0x447040
  42cb42:	add    edx,0xf0a4
  42cb48:	mov    esi,0xa9
  42cb4d:	lea    ecx,[ecx+0x0]
  42cb50:	movzx  eax,WORD PTR [ecx+0x9]
  42cb54:	movzx  edi,BYTE PTR [ecx+0x7]
  42cb58:	movzx  ecx,BYTE PTR [ecx]
  42cb5b:	shl    eax,0x8
  42cb5e:	add    eax,edi
  42cb60:	shl    eax,0x8
  42cb63:	add    eax,ecx
  42cb65:	mov    ds:0x447d04,eax
  42cb6a:	mov    ecx,0x18f96d3e
  42cb6f:	sub    ecx,DWORD PTR ds:0x447d14
  42cb75:	add    edx,0x8
  42cb78:	xor    ecx,eax
  42cb7a:	mov    DWORD PTR [edx-0x8],ecx
  42cb7d:	mov    ecx,DWORD PTR ds:0x447040
  42cb83:	movzx  eax,BYTE PTR [ecx+0xf]
  42cb87:	movzx  edi,BYTE PTR [ecx+0xd]
  42cb8b:	movzx  ecx,WORD PTR [ecx+0xb]
  42cb8f:	shl    eax,0x8
  42cb92:	add    eax,edi
  42cb94:	shl    eax,0x10
  42cb97:	add    eax,ecx
  42cb99:	mov    ecx,0x18f96d3e
  42cb9e:	sub    ecx,DWORD PTR ds:0x447d14
  42cba4:	mov    ds:0x447d04,eax
  42cba9:	xor    ecx,eax
  42cbab:	mov    DWORD PTR [edx-0x4],ecx
  42cbae:	mov    ecx,DWORD PTR ds:0x447040
  42cbb4:	add    ecx,0x10
  42cbb7:	dec    esi
  42cbb8:	mov    DWORD PTR ds:0x447040,ecx
  42cbbe:	jne    0x42cb50
  42cbc0:	movzx  eax,WORD PTR [ecx+0x9]
  42cbc4:	movzx  esi,BYTE PTR [ecx+0x7]
  42cbc8:	movzx  ecx,BYTE PTR [ecx]
  42cbcb:	shl    eax,0x8
  42cbce:	add    eax,esi
  42cbd0:	shl    eax,0x8
  42cbd3:	add    eax,ecx
  42cbd5:	mov    ecx,DWORD PTR ds:0x447d14
  42cbdb:	pop    edi
  42cbdc:	pop    esi
  42cbdd:	xor    ecx,eax
  42cbdf:	xor    ecx,0x18f96d3c
  42cbe5:	pop    ebp
  42cbe6:	mov    ds:0x447d04,eax
  42cbeb:	mov    DWORD PTR [edx],ecx
  42cbed:	pop    ebx
  42cbee:	ret    
  42cbef:	int3   
  42cbf0:	add    DWORD PTR [edx],0xffffffff
  42cbf3:	add    BYTE PTR [edi],ch
  42cbf5:	iret   
  42cbf6:	mov    esp,ecx
  42cbf8:	mov    DWORD PTR ds:0x22808389,esp
  42cbfe:	(bad)  
  42cbff:	fild   WORD PTR [eax]
  42cc01:	pop    eax
  42cc02:	add    bh,bh
  42cc04:	cs jl  0x42cb90
  42cc07:	ud0    esi,DWORD PTR [ebp-0x1]
  42cc0b:	jmp    ecx
  42cc0d:	xor    al,BYTE PTR [eax]
  42cc0f:	rol    DWORD PTR [eax],1
  42cc11:	mov    ds:0x51b8383,al
  42cc16:	mov    ecx,eax
  42cc18:	push   DWORD PTR [edi+edi*8]
  42cc1b:	add    BYTE PTR [ebp+0x7b],dh
  42cc1e:	jmp    FWORD PTR [edi+edi*8+0x7183ff02]
  42cc25:	scas   eax,DWORD PTR es:[edi]
  42cc26:	add    BYTE PTR [ebx],bl
  42cc28:	(bad)  
  42cc29:	fadd   QWORD PTR [eax]
  42cc2b:	sub    DWORD PTR [eax],0x75
  42cc2e:	(bad)  
  42cc2f:	cmp    eax,DWORD PTR [ebx-0x5900ffa2]
  42cc35:	xchg   ebx,eax
  42cc36:	add    BYTE PTR [ebx],bl
  42cc38:	and    DWORD PTR [ebx],0x0
  42cc3b:	add    dh,ah
  42cc3d:	jbe    0x42cc3e
  42cc3f:	add    edi,edi
  42cc41:	lods   al,BYTE PTR ds:[esi]
  42cc42:	add    BYTE PTR [ebx-0x2833bee0],al
  42cc48:	call   DWORD PTR [esi-0x1]
  42cc4b:	(bad)  
  42cc4c:	ficomp WORD PTR [ecx+0x0]
  42cc4f:	mov    edi,edi
  42cc51:	cmp    al,BYTE PTR [eax]
  42cc53:	dec    DWORD PTR [edx-0x7c5e0099]
  42cc59:	pop    ecx
  42cc5a:	inc    DWORD PTR [eax]
  42cc5c:	xchg   ecx,eax
  42cc5d:	verw   WORD PTR [edi+edi*8-0x7233ff15]
  42cc65:	dec    ecx
  42cc66:	add    ch,al
  42cc68:	add    al,bl
  42cc6a:	inc    DWORD PTR [ebx+0x6f00a14c]
  42cc70:	push   DWORD PTR [edx]
  42cc72:	add    BYTE PTR [ecx+0x70003473],cl
  42cc78:	int3   
  42cc79:	das    
  42cc7a:	(bad)  
  42cc7b:	call   esp
  42cc7d:	mov    dh,0xff
  42cc7f:	fwait
  42cc80:	inc    DWORD PTR [ecx-0x7d]
  42cc83:	push   ebp
  42cc85:	(bad)  
  42cc87:	xchg   esi,eax
  42cc88:	jmp    FWORD PTR [ecx+0x705affff]
  42cc8e:	add    dl,dl
  42cc90:	add    DWORD PTR [edi-0x5260001],0xffffffff
  42cc97:	or     al,BYTE PTR [eax]
  42cc99:	mov    bl,0xff
  42cc9b:	jmp    edi
  42cc9d:	cmp    eax,0xe9cc2c00
  42cca2:	add    ah,cl
  42cca4:	lds    esp,FWORD PTR [eax]
  42cca6:	inc    DWORD PTR [esi]
  42cca8:	add    BYTE PTR [ecx-0x34],al
  42ccab:	add    dh,bl
  42ccad:	or     DWORD PTR [ebx+0x9bffda],eax
  42ccb3:	add    dl,dl
  42ccb5:	std    
  42ccb6:	sub    edx,0x0
  42ccb9:	test   BYTE PTR [eax],al
  42ccbb:	sub    DWORD PTR [ecx],0x60
  42ccbe:	mov    ebx,ecx
  42ccc0:	or     DWORD PTR [ebp-0x657f0001],0x0
  42ccc7:	fdivp  st(7),st
  42ccc9:	ror    esp,1
  42cccb:	add    BYTE PTR [ebx],al
  42cccd:	loope  0x42cc9b
  42cccf:	adc    bh,bh
  42ccd1:	xor    al,BYTE PTR [ebx-0x2e2600]
  42ccd7:	sub    eax,0xffff4800
  42ccdc:	popf   
  42ccdd:	cld    
  42ccde:	xor    ebp,0x0
  42cce1:	loopne 0x42cce2
  42cce3:	(bad)  
  42cce4:	ds dec esi
  42cce6:	inc    edx
  42cce8:	jmp    DWORD PTR [edi+0x5d18ff00]
  42ccee:	call   FWORD PTR [esi-0x1]
  42ccf1:	add    DWORD PTR [eax],0xffffffff
  42ccf4:	fild   QWORD PTR [edi+edi*8+0x2c0053]
  42ccfb:	int3   
  42ccfc:	mov    ebx,0x83b783a1
  42cd01:	in     eax,0x0
  42cd03:	(bad)  
  42cd04:	js     0x42cd13
  42cd06:	dec    edx
  42cd08:	add    bl,al
  42cd0a:	(bad)  
  42cd0b:	(bad)  
  42cd0c:	jns    0x42cc94
  42cd0e:	inc    DWORD PTR [esi-0x1]
  42cd11:	mov    ebx,0x775200ff
  42cd16:	add    BYTE PTR [edi-0x7d],ah
  42cd19:	xchg   esi,eax
  42cd1a:	add    BYTE PTR [eax],al
  42cd1c:	retf   
  42cd1d:	jne    0x42cd1f
  42cd1f:	push   edi
  42cd20:	push   esi
  42cd22:	(bad)  
  42cd23:	inc    edi
  42cd25:	sbb    eax,0xc8001ecc
  42cd2a:	add    BYTE PTR [eax],al
  42cd2c:	imul   esp,DWORD PTR [ebp+0x4b000e00],0x802c83ff
  42cd36:	add    dh,ch
  42cd38:	and    DWORD PTR [ecx-0x7d],0xffffffff
  42cd3c:	add    eax,0x8351ff0a
  42cd41:	push   es
  42cd42:	(bad)  
  42cd43:	dec    DWORD PTR [ebp-0xa8fffa]
  42cd49:	ret    0xffff
  42cd4c:	out    0xf9,al
  42cd4e:	cmp    DWORD PTR [edi],0x0
  42cd51:	push   esi
  42cd52:	(bad)  
  42cd53:	inc    edx
  42cd55:	mov    edi,0xc6ff2589
  42cd5a:	add    bh,bh
  42cd5c:	mov    bh,0x8e
  42cd5e:	add    DWORD PTR [eax-0xec01],0xffffffc1
  42cd65:	xor    bh,bh
  42cd67:	lods   al,BYTE PTR ds:[esi]
  42cd68:	call   esi
  42cd6a:	add    BYTE PTR [eax],al
  42cd6c:	cmp    eax,0x3acc25
  42cd71:	aad    0x83
  42cd73:	push   DWORD PTR [edi]
  42cd75:	fdivr  st,st(7)
  42cd77:	(bad)  
  42cd78:	call   DWORD PTR [esi+0x0]
  42cd7b:	call   FWORD PTR [ecx-0x3d]
  42cd7e:	jmp    edi
  42cd80:	xor    DWORD PTR [ecx],0xffffffff
  42cd83:	dec    DWORD PTR [ebp-0x34]
  42cd86:	inc    DWORD PTR [ebx+0x0]
  42cd89:	xchg   BYTE PTR [eax],al
  42cd8b:	sub    DWORD PTR [eax],0xffffff84
  42cd8e:	int3   
  42cd8f:	sbb    bh,bh
  42cd91:	xlat   BYTE PTR ds:[ebx]
  42cd92:	add    bh,bh
  42cd94:	dec    ebx
  42cd95:	mov    dl,0xcc
  42cd97:	nop
  42cd98:	inc    DWORD PTR [edx]
  42cd9a:	int3   
  42cd9b:	add    BYTE PTR [ecx],bh
  42cd9d:	(bad)  
  42cd9f:	sub    eax,DWORD PTR [ebx-0x6bff7c94]
  42cda5:	pop    es
  42cda6:	push   DWORD PTR [eax+eax*1-0x6fff00a8]
  42cdad:	adc    al,0xff
  42cdaf:	popf   
  42cdb0:	add    BYTE PTR [ebx],cl
  42cdb2:	add    DWORD PTR [eax],0xffffffbe
  42cdb5:	pop    edx
  42cdb6:	(bad)  
  42cdb7:	mov    edi,0xffff5e00
  42cdbc:	adc    cl,BYTE PTR [esi]
  42cdbe:	(bad)  
  42cdbf:	xor    DWORD PTR ds:[ecx],0x0
  42cdc3:	jmp    DWORD PTR [edx]
  42cdc5:	sar    edi,1
  42cdc7:	imul   edi,edi,0x29
  42cdca:	dec    DWORD PTR [ecx+0x5bffad70]
  42cdd0:	mov    esp,esi
  42cdd2:	cmp    edi,0x19
  42cdd5:	out    0xff,al
  42cdd7:	adc    bh,bh
  42cdd9:	adc    cl,ah
  42cddb:	call   DWORD PTR [edi-0x1b]
  42cdde:	and    DWORD PTR [eax+eax*1-0x1800ffd8],0xffffffcd
  42cde6:	jmp    DWORD PTR [esi]
  42cde8:	add    BYTE PTR [ebx-0x3980001],ch
  42cdee:	push   DWORD PTR ds:0xffacff
  42cdf4:	inc    ebp
  42cdf5:	test   al,0xff
  42cdf7:	cdq    
  42cdf8:	inc    DWORD PTR ds:0xfe7cffcc
  42cdfe:	add    BYTE PTR [ebp+0x0],ah
  42ce01:	mov    edx,0x7c38ff00
  42ce06:	add    dl,al
  42ce08:	mov    DWORD PTR [edi+edi*8+0x0],ebp
  42ce0c:	or     edx,esp
  42ce0e:	mov    ebx,edx
  42ce10:	add    BYTE PTR [ebp+0x639600ff],al
  42ce16:	and    DWORD PTR [ecx+0x0],0xffffff95
  42ce1a:	inc    DWORD PTR [eax]
  42ce1c:	add    DWORD PTR [ebx-0x79008334],eax
  42ce22:	add    bh,bh
  42ce24:	xor    al,0x9b
  42ce26:	add    BYTE PTR [ebx],bl
  42ce28:	jmp    FWORD PTR [ecx-0x1]
  42ce2b:	add    BYTE PTR ds:0x8364ff6e,dh
  42ce31:	xchg   ebp,eax
  42ce32:	add    BYTE PTR [eax],al
  42ce34:	adc    ah,bl
  42ce36:	add    BYTE PTR [esi-0x1],ch
  42ce39:	data16 (bad) 
  42ce3b:	jmp    DWORD PTR [edx-0x4f]
  42ce3e:	cmp    esp,0xffffffff
  42ce41:	mov    BYTE PTR [eax],0xff
  42ce44:	pushf  
  42ce45:	pop    eax
  42ce46:	add    BYTE PTR [eax+eax*1],bl
  42ce49:	push   0x2dc9ffff
  42ce4e:	add    ch,dh
  42ce50:	dec    DWORD PTR [edx]
  42ce52:	int3   
  42ce53:	(bad)  
  42ce54:	dec    BYTE PTR [eax+0x78ccab00]
  42ce5a:	(bad)  
  42ce5b:	call   DWORD PTR [ecx-0x56]
  42ce5e:	add    BYTE PTR [eax+0x0],bl
  42ce61:	and    eax,DWORD PTR [ebx+0x1d55cc]
  42ce67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce68:	(bad)  
  42ce69:	mov    esi,0xb1c6ffff
  42ce6e:	add    BYTE PTR [edx-0x7c008501],bl
  42ce74:	add    bl,ah
  42ce76:	jmp    DWORD PTR [edx]
  42ce78:	add    BYTE PTR [edx-0x2bbe7d00],ah
  42ce7e:	jmp    FWORD PTR [eax+0xffe9ff]
  42ce84:	cdq    
  42ce85:	retf   0x3400
  42ce88:	mov    ebx,edi
  42ce8a:	add    bh,bh
  42ce8c:	in     eax,dx
  42ce8d:	stc    
  42ce8e:	dec    DWORD PTR [eax-0x1]
  42ce91:	call   0xe2695295
  42ce96:	dec    DWORD PTR [ecx-0x7d]
  42ce99:	in     eax,0x83
  42ce9b:	xor    DWORD PTR [eax+0xaeff9b],0x47
  42cea2:	or     DWORD PTR [ecx+0x61ff91a1],0x0
  42cea9:	push   edi
  42ceaa:	add    ah,cl
  42ceac:	mov    ebx,0x6cff87
  42ceb1:	cmp    bh,bh
  42ceb3:	jmp    FWORD PTR [ebp+0x42]
  42ceb6:	add    dl,bl
  42ceb8:	and    ebx,0x0
  42cebb:	call   DWORD PTR [edx]
  42cebd:	push   cs
  42cebe:	push   ecx
  42cec0:	sbb    DWORD PTR [ebp+0x1837ff89],0xffffffff
  42cec7:	leave  
  42cec8:	cmp    DWORD PTR [esi-0x7d],0x0
  42cecc:	inc    eax
  42cecd:	ins    DWORD PTR es:[edi],dx
  42cece:	inc    DWORD PTR [edi+edi*8]
  42ced1:	lods   eax,DWORD PTR ds:[esi]
  42ced2:	add    ah,cl
  42ced4:	fs loopne 0x42cea3
  42ced7:	aaa    
  42ced8:	push   DWORD PTR [ebp-0x260a3400]
  42cede:	sbb    DWORD PTR [ecx-0x1],0x4d
  42cee2:	add    BYTE PTR [eax],al
  42cee4:	retf   
  42cee5:	(bad)  
  42cee6:	dec    DWORD PTR [ebx-0x333d01]
  42ceec:	push   eax
  42ceed:	out    dx,eax
  42ceee:	int3   
  42ceef:	ror    BYTE PTR [ecx+0x1489ff36],0x6b
  42cef6:	mov    DWORD PTR [edi+edi*8-0x6a],ecx
  42cefa:	add    BYTE PTR [eax],al
  42cefc:	jp     0x42cf64
  42cefe:	(bad)  
  42ceff:	jmp    0x11f4:0xcc008500
  42cf06:	call   ecx
  42cf08:	add    BYTE PTR [ecx-0x73e00100],cl
  42cf0e:	add    DWORD PTR ds:0xffff9e00,0x6b
  42cf15:	stos   BYTE PTR es:[edi],al
  42cf16:	(bad)  
  42cf17:	jmp    0x42cf19
  42cf19:	repz inc DWORD PTR [eax]
  42cf1c:	int    0xa1
  42cf1e:	(bad)  
  42cf1f:	cld    
  42cf20:	dec    DWORD PTR [edx-0x34]
  42cf23:	call   FWORD PTR [ebx-0x3f]
  42cf26:	add    BYTE PTR [ebp+0xb9ff],al
  42cf2c:	or     esi,0xffffffff
  42cf2f:	push   ds
  42cf30:	sbb    DWORD PTR [esi-0x77],0x0
  42cf34:	(bad)  
  42cf35:	and    al,BYTE PTR [eax]
  42cf37:	push   ds
  42cf38:	call   FWORD PTR [ebp-0x1]
  42cf3b:	(bad)  
  42cf3c:	ds add al,0xcc
  42cf3f:	mov    esi,0xffff7100
  42cf44:	add    DWORD PTR [ebp-0x77001101],ebx
  42cf4a:	add    BYTE PTR [eax],al
  42cf4c:	sub    DWORD PTR [esp+ecx*8],esp
  42cf4f:	arpl   di,di
  42cf51:	(bad)  
  42cf52:	(bad)  
  42cf53:	push   edi
  42cf55:	cmp    al,0xff
  42cf57:	xor    eax,0xffc183
  42cf5c:	(bad)  
  42cf5d:	xor    edi,edi
  42cf5f:	push   ecx
  42cf60:	add    BYTE PTR [edx-0x1],ch
  42cf63:	and    DWORD PTR [ebx-0x9a0096],0x13
  42cf6a:	(bad)  
  42cf6b:	jmp    FWORD PTR [edx-0x80]
  42cf6e:	inc    DWORD PTR [esi+0xffddff]
  42cf74:	stos   BYTE PTR es:[edi],al
  42cf75:	inc    ecx
  42cf76:	jmp    DWORD PTR [ebx-0x7d]
  42cf79:	cli    
  42cf7a:	add    BYTE PTR [eax],al
  42cf7c:	pop    WORD PTR [ebx+0x4f0085]
  42cf83:	sbb    ebx,0xffffffdf
  42cf86:	add    BYTE PTR [eax+eax*1],bh
  42cf89:	pop    ds
  42cf8a:	or     DWORD PTR [ecx+0xb002a39],0xffffffff
  42cf91:	stos   DWORD PTR es:[edi],eax
  42cf92:	(bad)  
  42cf93:	(bad)  
  42cf94:	fstp   QWORD PTR [esi]
  42cf96:	dec    DWORD PTR [edi-0x1]
  42cf99:	add    ecx,esp
  42cf9b:	add    BYTE PTR [esi-0x35],dh
  42cf9e:	adc    DWORD PTR [ebx-0x1],0xe
  42cfa2:	add    DWORD PTR [eax],0x7f
  42cfa5:	sub    BYTE PTR [ecx-0x5d009d],cl
  42cfab:	int3   
  42cfac:	mov    eax,0x95cccc
  42cfb1:	(bad)  
  42cfb2:	(bad)  
  42cfb3:	call   DWORD PTR [edx+0x7cff47]
  42cfb9:	mov    bh,0xff
  42cfbb:	call   FWORD PTR [ebx-0x760063]
  42cfc1:	les    eax,FWORD PTR [eax]
  42cfc3:	add    edi,0xffffffdf
  42cfc6:	jmp    DWORD PTR [edi]
  42cfc8:	add    dh,dl
  42cfca:	(bad)  
  42cfcb:	inc    DWORD PTR [eax+0x7e898d]
  42cfd1:	sbb    eax,0x7faffff
  42cfd6:	push   DWORD PTR [ecx]
  42cfd8:	int3   
  42cfd9:	dec    edi
  42cfda:	mov    edi,edi
  42cfdc:	ins    BYTE PTR es:[edi],dx
  42cfdd:	iret   
  42cfde:	add    al,cl
  42cfe0:	add    bh,al
  42cfe2:	add    DWORD PTR [eax],0xffffffcd
  42cfe5:	(bad)  
  42cfe6:	call   DWORD PTR [esi]
  42cfe8:	call   FWORD PTR [ecx-0x1]
  42cfeb:	add    BYTE PTR [edx+0x59],al
  42cfee:	int3   
  42cfef:	dec    edi
  42cff0:	add    BYTE PTR [eax+eax*1],dl
  42cff3:	jmp    DWORD PTR [eax+0x35]
  42cff6:	add    BYTE PTR [edi],bh
  42cff8:	int3   
  42cff9:	push   ss
  42cffa:	cmp    edi,0xffffffd2
  42cffd:	ins    BYTE PTR es:[edi],dx
  42cffe:	jmp    DWORD PTR [ebx-0x7c76f101]
  42d004:	gs jb  0x42cf90
  42d007:	add    BYTE PTR ds:[edi+edi*8],bh
  42d00b:	add    BYTE PTR [esi+0x1a004e],dh
  42d011:	in     eax,dx
  42d012:	add    BYTE PTR [ebx-0x387c53b8],al
  42d018:	jmp    FWORD PTR [ecx-0x1]
  42d01b:	inc    DWORD PTR [edi]
  42d01d:	mov    eax,0xc8cc12ff
  42d022:	cmp    edi,0xfffffff3
  42d025:	pop    es
  42d026:	int3   
  42d027:	mov    eax,0xcc892e83
  42d02c:	xor    edx,DWORD PTR [edi+edi*8+0x78]
  42d030:	call   FWORD PTR [esp+ecx*8]
  42d033:	add    BYTE PTR [ecx+0x1d],dl
  42d036:	sub    DWORD PTR [ecx-0x1],0x62
  42d03a:	or     DWORD PTR [ecx-0x500027c8],0x0
  42d041:	and    bh,bh
  42d043:	push   edi
  42d045:	test   al,0x83
  42d047:	test   eax,0xfffff183
  42d04c:	sar    DWORD PTR [edx],cl
  42d04e:	dec    esp
  42d050:	add    al,ah
  42d052:	or     esp,0x1b
  42d055:	xor    esp,ecx
  42d057:	cwde   
  42d058:	add    dh,dl
  42d05a:	add    BYTE PTR [ecx-0x35008f71],cl
  42d060:	int3   
  42d061:	mov    eax,0x125483ff
  42d066:	dec    DWORD PTR [edx-0x7c6401]
  42d06c:	dec    ebp
  42d06d:	cmp    al,BYTE PTR [eax]
  42d06f:	mov    DWORD PTR [eax],0xc2ff00ed
  42d075:	inc    edx
  42d076:	add    BYTE PTR [ecx+0x0],cl
  42d079:	lea    eax,[eax]
  42d07b:	add    BYTE PTR [eax],dh
  42d07d:	push   ebx
  42d07e:	sub    DWORD PTR [edi-0x7101],0x22
  42d085:	sar    edi,0xe
  42d088:	push   DWORD PTR [edi+0x0]
  42d08b:	int3   
  42d08c:	cs mov al,0x0
  42d08f:	test   DWORD PTR [eax],eax
  42d091:	sub    edi,edi
  42d093:	add    BYTE PTR [esp+eax*8+0x0],cl
  42d097:	mov    esp,0xffccdc83
  42d09c:	push   ebx
  42d09d:	(bad)  
  42d09e:	call   FWORD PTR [eax+0xc1ff]
  42d0a4:	add    dl,BYTE PTR [ebp+0x1b0051ff]
  42d0aa:	add    BYTE PTR [eax],al
  42d0ac:	cli    
  42d0ad:	adc    edi,edi
  42d0af:	dec    esp
  42d0b0:	dec    DWORD PTR [eax-0x7d]
  42d0b3:	add    ch,bl
  42d0b5:	jmp    0x1fc5f8ba
  42d0ba:	inc    DWORD PTR [eax]
  42d0bc:	out    dx,al
  42d0bd:	scas   al,BYTE PTR es:[edi]
  42d0be:	(bad)  
  42d0bf:	jmp    0x42d0c1
  42d0c1:	jae    0x42d0c3
  42d0c3:	int3   
  42d0c4:	lds    ecx,FWORD PTR [edx-0x800b57d]
  42d0ca:	cmp    edi,0xffffffd3
  42d0cd:	sbb    BYTE PTR [ecx-0xc2ff98],cl
  42d0d3:	add    BYTE PTR [edx+0x37006e],bl
  42d0d9:	jmp    0x42d0db
  42d0db:	dec    ebp
  42d0dd:	xchg   esp,eax
  42d0de:	(bad)  
  42d0df:	jp     0x42d0e0
  42d0e1:	cmc    
  42d0e2:	add    bh,bh
  42d0e4:	mov    ebx,0xcc7accbc
  42d0e9:	sub    edi,edi
  42d0eb:	cmp    DWORD PTR [ebx+eiz*8],0xffffff89
  42d0ef:	sti    
  42d0f0:	(bad)  
  42d0f1:	cmp    edi,edi
  42d0f3:	add    bh,cl
  42d0f5:	in     al,0xff
  42d0f7:	sub    ah,cl
  42d0f9:	xor    BYTE PTR [ecx-0x594677],cl
  42d0ff:	cli    
  42d100:	add    BYTE PTR [ebp+0x9b8ffff],al
  42d106:	call   DWORD PTR [edi-0x1]
  42d109:	loop   0x42d0d7
  42d10b:	xor    DWORD PTR [ebx],0x54
  42d10e:	and    DWORD PTR [ecx],0xffffffff
  42d111:	and    eax,0x7296ff00
  42d116:	int3   
  42d117:	xchg   ebp,eax
  42d118:	add    bl,ch
  42d11a:	(bad)  
  42d11b:	jmp    FWORD PTR [esi+ecx*1+0x55ff73ff]
  42d122:	(bad)  
  42d123:	inc    DWORD PTR [ebx]
  42d125:	push   es
  42d126:	add    BYTE PTR [eax-0xe97d],cl
  42d12c:	mov    esp,0xffceffc8
  42d131:	test   eax,0x2559ffff
  42d136:	add    BYTE PTR [eax],bl
  42d138:	xor    edx,0xffffff83
  42d13b:	add    BYTE PTR [edi-0xa6004f],dh
  42d141:	sub    al,BYTE PTR [eax]
  42d143:	add    BYTE PTR [ecx+0x498398],cl
  42d149:	cmp    bh,0xff
  42d14c:	bound  ecx,QWORD PTR [edi+edi*8+0x62ccf7]
  42d153:	call   DWORD PTR ds:0x83cf83df
  42d159:	dec    eax
  42d15a:	mov    edi,edi
  42d15c:	(bad)  
  42d15d:	idiv   bh
  42d15f:	pop    ecx
  42d160:	sub    esi,0xffffffff
  42d163:	int3   
  42d164:	add    ebp,DWORD PTR [edx]
  42d166:	sub    DWORD PTR [esi+0x0],0xffffffeb
  42d16a:	inc    DWORD PTR [eax]
  42d16c:	sub    BYTE PTR [eax-0x1],al
  42d16f:	add    eax,0xff8305ff
  42d174:	push   es
  42d175:	iret   
  42d176:	mov    ecx,esi
  42d178:	int3   
  42d179:	sub    BYTE PTR [ebx+0xe42b83],al
  42d17f:	or     BYTE PTR [ebx-0x710033c8],al
  42d185:	dec    edx
  42d186:	jmp    DWORD PTR [edi+edi*8-0x3c7c00e7]
  42d18d:	dec    esp
  42d18e:	mov    esp,esp
  42d190:	cmp    esi,0x0
  42d193:	call   FWORD PTR [ebx-0xf600fd]
  42d199:	mov    ch,0x89
  42d19b:	add    BYTE PTR [edi],dh
  42d19d:	mov    cl,0x0
  42d19f:	pop    edx
  42d1a0:	add    al,dh
  42d1a2:	add    BYTE PTR [eax],al
  42d1a4:	ins    BYTE PTR es:[edi],dx
  42d1a5:	jmp    0x742782d
  42d1aa:	int3   
  42d1ab:	(bad)  
  42d1ac:	jg     0x42d13c
  42d1ae:	add    BYTE PTR [ecx-0x1],dh
  42d1b1:	mov    cl,0xff
  42d1b3:	jmp    DWORD PTR [esi-0x38]
  42d1b6:	jmp    eax
  42d1b8:	(bad)  
  42d1b9:	cmp    al,BYTE PTR [eax]
  42d1bb:	add    BYTE PTR [edx+0x5d],dl
  42d1be:	mov    ebx,ebp
  42d1c0:	or     DWORD PTR [edi+0x14cd8900],0xffffffff
  42d1c7:	add    al,0xcc
  42d1c9:	in     eax,dx
  42d1ca:	mov    DWORD PTR [eax],eax
  42d1cc:	int    0xdc
  42d1ce:	add    BYTE PTR [ebp-0xcf01],bh
  42d1d4:	out    dx,eax
  42d1d5:	sub    eax,0x45833400
  42d1da:	add    bh,bh
  42d1dc:	mov    DWORD PTR [edi+0x0],0xff34ff2d
  42d1e3:	and    ecx,0xffffffca
  42d1e6:	add    bl,bl
  42d1e8:	jmp    FWORD PTR [eax]
  42d1ea:	(bad)  
  42d1eb:	inc    DWORD PTR [eax-0xb]
  42d1ee:	add    BYTE PTR [edx],cl
  42d1f0:	push   edi
  42d1f2:	(bad)  
  42d1f3:	push   esi
  42d1f5:	mov    ch,0xff
  42d1f7:	inc    BYTE PTR [eax]
  42d1f9:	mov    BYTE PTR [eax],0xcc
  42d1fc:	in     al,0xb3
  42d1fe:	call   ebx
  42d200:	mov    DWORD PTR [eax+0x735883ff],esp
  42d206:	add    ah,dl
  42d208:	add    bl,ch
  42d20a:	inc    DWORD PTR [eax]
  42d20c:	cmp    bh,ah
  42d20e:	call   DWORD PTR [edx+0xff3800]
  42d214:	xchg   ebp,eax
  42d215:	fxch   st(4)
  42d217:	imul   eax,DWORD PTR [ebx+0x2e89837c],0x19
  42d21e:	push   DWORD PTR [edx-0x1]
  42d221:	inc    esp
  42d222:	dec    esp
  42d224:	out    dx,al
  42d225:	std    
  42d226:	add    BYTE PTR [eax],ah
  42d228:	add    edx,0x0
  42d22b:	inc    DWORD PTR [edi+0xb00de]
  42d231:	push   esp
  42d232:	(bad)  
  42d233:	dec    DWORD PTR [ecx-0xb87693]
  42d239:	pop    edx
  42d23a:	dec    DWORD PTR [ecx-0x5d007c40]
  42d240:	jmp    DWORD PTR [ebx+0x0]
  42d243:	jmp    FWORD PTR [ebx]
  42d245:	mov    dl,0xff
  42d247:	ins    BYTE PTR es:[edi],dx
  42d248:	dec    DWORD PTR [esi]
  42d24a:	cmp    edi,0x41
  42d24d:	cdq    
  42d24e:	(bad)  
  42d24f:	out    dx,al
  42d250:	jmp    DWORD PTR [ebx-0x7d]
  42d253:	add    BYTE PTR [esi],dh
  42d255:	mov    dh,0x89
  42d257:	and    eax,0x8311cc
  42d25c:	pop    ss
  42d25d:	js     0x42d25e
  42d25f:	jbe    0x42d260
  42d261:	je     0x42d262
  42d263:	push   DWORD PTR [ecx+0x20]
  42d266:	jmp    DWORD PTR [eax]
  42d268:	add    BYTE PTR [esi+0x725283ff],al
  42d26e:	add    BYTE PTR [edi-0x1],bl
  42d271:	pop    edx
  42d272:	add    BYTE PTR [ecx-0xff6b7c],cl
  42d278:	cmp    DWORD PTR [ebp-0x77],0x0
  42d27c:	adc    eax,0xff24fff6
  42d281:	push   edi
  42d282:	add    DWORD PTR [eax],0xffffffbf
  42d285:	je     0x42d287
  42d287:	mov    BYTE PTR [ebx+0x130083c5],al
  42d28d:	ins    DWORD PTR es:[edi],dx
  42d28e:	add    al,cl
  42d290:	sbb    DWORD PTR [edi-0x544cff7d],0xffffffff
  42d297:	or     al,0xff
  42d299:	dec    edx
  42d29a:	dec    esp
  42d29c:	push   esp
  42d29d:	fwait
  42d29e:	inc    DWORD PTR [ecx]
  42d2a0:	xor    DWORD PTR [edx-0x1d337601],0xffffffff
  42d2a7:	ja     0x42d2a8
  42d2a9:	sub    bh,bh
  42d2ab:	add    BYTE PTR [eax+0xb],bh
  42d2ae:	int3   
  42d2af:	ret    0x3000
  42d2b2:	inc    DWORD PTR [eax]
  42d2b4:	jge    0x42d2d3
  42d2b6:	call   FWORD PTR [ecx+0x67ff]
  42d2bc:	mov    bl,0x87
  42d2be:	add    BYTE PTR [esi-0x1],cl
  42d2c1:	or     al,BYTE PTR [eax]
  42d2c3:	call   FWORD PTR [ebx-0x19]
  42d2c6:	dec    DWORD PTR [esi]
  42d2c8:	(bad)  
  42d2c9:	(bad)  
  42d2ca:	dec    DWORD PTR [ecx+0x25ff6d32]
  42d2d0:	int3   
  42d2d1:	rol    DWORD PTR [eax],cl
  42d2d3:	or     DWORD PTR [edi-0x7c92ff74],0xffffffef
  42d2da:	(bad)  
  42d2db:	call   FWORD PTR [esi+0x52ffe5]
  42d2e1:	(bad)  
  42d2e2:	(bad)  
  42d2e3:	(bad)  
  42d2e4:	cmp    ebp,DWORD PTR [ebp-0x1]
  42d2e7:	lock add BYTE PTR [eax+eax*1-0x433d00],bh
  42d2ef:	adc    al,0x0
  42d2f1:	and    BYTE PTR [ecx-0x7c315534],cl
  42d2f7:	xchg   ecx,eax
  42d2f8:	push   esi
  42d2fa:	inc    DWORD PTR [eax]
  42d2fc:	in     eax,dx
  42d2fd:	mov    es,WORD PTR [eax]
  42d2ff:	cdq    
  42d300:	inc    DWORD PTR [ebp-0x7af17c7d]
  42d306:	add    BYTE PTR [edx-0x1],bh
  42d309:	mov    al,0xff
  42d30b:	int3   
  42d30c:	jbe    0x42d328
  42d30e:	sub    esi,0x0
  42d311:	repz add bh,bh
  42d314:	clc    
  42d315:	cmp    edi,0x8c83d7
  42d31b:	int3   
  42d31c:	dec    ebp
  42d31d:	rol    BYTE PTR [eax],cl
  42d31f:	xor    bh,bh
  42d321:	cmp    eax,DWORD PTR [eax]
  42d323:	add    BYTE PTR [edi-0x4],al
  42d326:	push   DWORD PTR [edx-0x34]
  42d329:	test   BYTE PTR [ebx+0x3fddcc],al
  42d32f:	adc    eax,DWORD PTR [ebx-0x1b0033c0]
  42d335:	mov    al,0x0
  42d337:	mov    dh,0x89
  42d339:	mov    edx,0x459100cc
  42d33e:	add    BYTE PTR [edi-0x1],bl
  42d341:	pop    esp
  42d342:	add    bh,bh
  42d344:	mov    bh,0x35
  42d346:	int3   
  42d347:	int    0xff
  42d349:	stc    
  42d34a:	add    DWORD PTR [eax],0x59
  42d34d:	adc    eax,0x9bff7289
  42d352:	inc    DWORD PTR [eax]
  42d354:	outs   dx,DWORD PTR ds:[esi]
  42d355:	push   esp
  42d356:	add    BYTE PTR [esi],dl
  42d358:	call   FWORD PTR ds:0x5ef4ff00
  42d35e:	inc    ebx
  42d360:	push   eax
  42d362:	mov    DWORD PTR [ebx+0x6c8969bd],eax
  42d368:	mov    DWORD PTR [edx+0x0],ebp
  42d36b:	add    BYTE PTR [ebp-0x70],dl
  42d36e:	call   edx
  42d370:	mov    edx,eax
  42d372:	inc    DWORD PTR [eax]
  42d374:	xchg   DWORD PTR [eax-0x7d],edx
  42d377:	dec    edi
  42d378:	push   DWORD PTR [ebx-0x77]
  42d37b:	jmp    FWORD PTR [esi+0x470020]
  42d381:	adc    eax,0xdc8eccff
  42d386:	adc    edx,0xffffff83
  42d389:	test   edi,edi
  42d38b:	add    BYTE PTR [ebp+ecx*2-0x1],dh
  42d38f:	nop
  42d390:	call   DWORD PTR [ecx]
  42d392:	add    BYTE PTR [eax],al
  42d394:	push   cs
  42d395:	add    BYTE PTR [ebx-0xb3ff5b],0x0
  42d39c:	mov    esp,0xffb50065
  42d3a1:	mov    eax,DWORD PTR [eax]
  42d3a3:	add    BYTE PTR [eax+0x4],dl
  42d3a6:	(bad)  
  42d3a7:	std    
  42d3a8:	add    bh,dl
  42d3aa:	add    BYTE PTR [eax],al
  42d3ac:	sbb    ah,bl
  42d3ae:	add    BYTE PTR [edx-0x7c003701],ch
  42d3b4:	int    0x8a
  42d3b6:	mov    eax,edx
  42d3b8:	inc    DWORD PTR [ebx]
  42d3ba:	add    bh,bh
  42d3bc:	(bad)  
  42d3bd:	loopne 0x42d348
  42d3bf:	pop    eax
  42d3c0:	add    BYTE PTR ds:0x6766ffcc,dl
  42d3c6:	int3   
  42d3c7:	(bad)  
  42d3c9:	push   ebx
  42d3ca:	add    BYTE PTR [eax],al
  42d3cc:	xor    BYTE PTR [ecx-0x77],bl
  42d3cf:	lods   al,BYTE PTR ds:[esi]
  42d3d0:	add    BYTE PTR [edx],cl
  42d3d2:	add    bh,bh
  42d3d4:	push   ss
  42d3d5:	pop    edi
  42d3d6:	push   DWORD PTR [ecx]
  42d3d8:	mov    DWORD PTR [esi+0x0],ebx
  42d3db:	push   DWORD PTR [edi-0x8500ea]
  42d3e1:	dec    ecx
  42d3e2:	dec    DWORD PTR [ecx-0x51006134]
  42d3e8:	(bad)  
  42d3e9:	clc    
  42d3ea:	add    BYTE PTR [ebx+0x70834c9a],al
  42d3f0:	add    DWORD PTR [eax+0x3175ffff],0xffffff89
  42d3f7:	adc    bh,bh
  42d3f9:	adc    bh,bh
  42d3fb:	dec    DWORD PTR [edx-0xa]
  42d3fe:	call   FWORD PTR [ebp-0x1]
  42d401:	add    eax,DWORD PTR [eax]
  42d403:	add    ebx,0xffffff8d
  42d406:	add    bh,ah
  42d408:	jmp    FWORD PTR [ecx+0x0]
  42d40b:	(bad)  
  42d40c:	fcmovbe st,st(0)
  42d40e:	(bad)  
  42d40f:	cmp    bh,bh
  42d411:	ror    esp,1
  42d413:	(bad)  
  42d414:	in     eax,dx
  42d415:	aas    
  42d416:	cmp    eax,0xffffff83
  42d419:	mov    al,0xff
  42d41b:	call   DWORD PTR [esi-0x7c51ff8e]
  42d421:	xlat   BYTE PTR ds:[ebx]
  42d422:	inc    DWORD PTR [eax]
  42d424:	push   edx
  42d425:	push   ss
  42d426:	dec    esi
  42d428:	call   FWORD PTR [edi+edi*8-0x1]
  42d42c:	cdq    
  42d42d:	aam    0xff
  42d42f:	mov    DWORD PTR [eax],0x9c0089b5
  42d435:	jae    0x42d436
  42d437:	pusha  
  42d438:	add    BYTE PTR [edi],al
  42d43a:	inc    DWORD PTR [ebx+0x15832b86]
  42d440:	int3   
  42d441:	fiadd  WORD PTR [eax]
  42d443:	add    BYTE PTR [ebx-0x7cf8004e],bl
  42d449:	mov    bl,0x83
  42d44b:	inc    DWORD PTR [edx]
  42d44d:	adc    al,BYTE PTR [eax]
  42d44f:	and    eax,0xffffc8ff
  42d454:	loopne 0x42d42d
  42d456:	add    bl,ah
  42d458:	dec    DWORD PTR [eax+eax*1-0x7d]
  42d45c:	jmp    0xff9f:0xb7ff19
  42d463:	push   DWORD PTR [ebp+0x16]
  42d466:	add    BYTE PTR [edx-0x201],dh
  42d46c:	mov    eax,ds:0xff5d0004
  42d471:	jecxz  0x42d472
  42d473:	add    BYTE PTR [ecx+0x28],dl
  42d476:	push   DWORD PTR [esi-0x1]
  42d479:	sbb    al,0x89
  42d47b:	push   DWORD PTR [edx-0x2]
  42d47e:	int3   
  42d47f:	inc    esi
  42d480:	adc    DWORD PTR [edi-0x1],0xffffffff
  42d484:	dec    ebp
  42d485:	cli    
  42d486:	jmp    FWORD PTR [ebp-0x1]
  42d489:	sar    edi,0xcc
  42d48c:	or     DWORD PTR [eax-0x1],edx
  42d48f:	inc    edi
  42d490:	add    dl,ch
  42d492:	add    ah,cl
  42d494:	pop    ebp
  42d495:	sahf   
  42d496:	add    BYTE PTR [eax],dl
  42d498:	int3   
  42d499:	fadd   DWORD PTR [ebx-0x33ad0534]
  42d49f:	cmp    eax,0xff839100
  42d4a4:	mov    ds:0xffcc89d9,eax
  42d4a9:	pop    es
  42d4aa:	(bad)  
  42d4ab:	call   FWORD PTR [ebp+eiz*4-0x7d]
  42d4af:	test   eax,0xff0057ff
  42d4b4:	fisub  WORD PTR [eax+0x500ba00]
  42d4ba:	add    bh,bh
  42d4bc:	repz jae 0x42d4be
  42d4bf:	mov    dl,0xff
  42d4c1:	inc    esi
  42d4c2:	(bad)  
  42d4c3:	inc    DWORD PTR [ecx+0xcf0035]
  42d4c9:	xchg   esp,eax
  42d4ca:	(bad)  
  42d4cb:	(bad)  
  42d4cc:	jnp    0x42d4ed
  42d4ce:	(bad)  
  42d4cf:	mov    esi,0x899aff
  42d4d4:	xchg   ebx,eax
  42d4d5:	enter  0xb5ff,0xff
  42d4d9:	lock dec DWORD PTR [ecx+0x73ff89a6]
  42d4e0:	(bad)  
  42d4e1:	jge    0x42d4e2
  42d4e3:	inc    esi
  42d4e5:	lods   eax,DWORD PTR ds:[esi]
  42d4e6:	inc    DWORD PTR [ebx]
  42d4e8:	inc    DWORD PTR [edi]
  42d4ea:	add    BYTE PTR [eax],al
  42d4ec:	and    BYTE PTR [ebp-0x2bffcb01],al
  42d4f2:	add    bh,bh
  42d4f4:	xchg   edx,eax
  42d4f5:	lods   al,BYTE PTR ds:[esi]
  42d4f6:	push   DWORD PTR [ebx-0x7c7c5700]
  42d4fc:	and    DWORD PTR [esp+ecx*8-0x3e],esp
  42d500:	call   DWORD PTR [ebp-0x311c0001]
  42d506:	push   ecx
  42d508:	(bad)  
  42d509:	fadd   DWORD PTR [eax]
  42d50b:	xor    ebp,0xfffffff6
  42d50e:	add    BYTE PTR [ecx+ecx*4-0x36000061],dl
  42d515:	call   DWORD PTR ss:[edi+edi*8+0x23ffcc92]
  42d51d:	sar    edi,1
  42d51f:	fld    DWORD PTR [eax]
  42d521:	fdivr  st,st(7)
  42d523:	inc    DWORD PTR [eax+0x58]
  42d526:	(bad)  
  42d527:	mov    esi,0xff89d700
  42d52c:	jnp    0x42d59c
  42d52e:	call   FWORD PTR [edi-0x1]
  42d531:	je     0x42d532
  42d533:	call   FWORD PTR [edi]
  42d535:	cmp    al,0xcc
  42d537:	stc    
  42d538:	add    BYTE PTR [eax-0x7d],al
  42d53b:	jmp    ecx
  42d53d:	popa   
  42d53e:	inc    DWORD PTR [ecx]
  42d540:	sbb    DWORD PTR [ebx-0x1],0x0
  42d544:	rcl    BYTE PTR [edx-0xd003101],1
  42d54a:	(bad)  
  42d54b:	dec    ecx
  42d54d:	out    dx,al
  42d54e:	adc    edi,0x0
  42d551:	push   ss
  42d552:	add    bh,bh
  42d554:	mov    ah,0x4
  42d556:	jmp    FWORD PTR [esi-0x1]
  42d559:	inc    esp
  42d55a:	cmp    edi,0x14
  42d55d:	or     al,0x0
  42d55f:	imul   eax,DWORD PTR [eax],0xffffffe3
  42d562:	inc    DWORD PTR [ebx+0x3c83ecec]
  42d568:	dec    DWORD PTR [ebp-0x77]
  42d56b:	push   DWORD PTR ds:0x3400d8
  42d571:	int    0x89
  42d573:	jmp    DWORD PTR [ecx-0x5]
  42d576:	cmp    DWORD PTR [esi+0x0],0xf
  42d57a:	mov    DWORD PTR [eax],eax
  42d57c:	mov    ds,WORD PTR [ebx]
  42d57e:	call   ebp
  42d580:	dec    DWORD PTR [eax-0xc2d0034]
  42d586:	dec    DWORD PTR [ecx+0xcc01cc]
  42d58c:	in     al,0xa9
  42d58e:	jmp    edi
  42d590:	dec    DWORD PTR [ebx-0x1]
  42d593:	add    BYTE PTR [eax],bl
  42d595:	(bad)  
  42d596:	push   DWORD PTR [esi+0x0]
  42d599:	mov    bl,0x83
  42d59b:	add    cl,dl
  42d59d:	or     eax,DWORD PTR [ebx-0x67fffd]
  42d5a3:	dec    eax
  42d5a5:	xchg   ecx,eax
  42d5a6:	add    BYTE PTR [edi-0x34],cl
  42d5a9:	pop    ecx
  42d5aa:	add    BYTE PTR [ebx+0x7400b616],al
  42d5b0:	add    BYTE PTR [ecx],ah
  42d5b2:	inc    DWORD PTR [eax]
  42d5b4:	adc    cl,BYTE PTR [eax+0x69003900]
  42d5ba:	add    BYTE PTR [eax],al
  42d5bc:	int    0x17
  42d5be:	dec    DWORD PTR [edi+edi*8]
  42d5c1:	sar    bh,1
  42d5c3:	add    BYTE PTR [ebx],dl
  42d5c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5c6:	or     DWORD PTR [ecx+ecx*4],0x3c
  42d5ca:	(bad)  
  42d5cb:	inc    DWORD PTR [edx+eiz*2-0x1]
  42d5cf:	mov    ebp,0xffffbf00
  42d5d4:	inc    ecx
  42d5d5:	imul   edi,edi,0xffffffe3
  42d5d8:	add    BYTE PTR [esi-0x7d],dl
  42d5db:	dec    DWORD PTR [ebp+0x3d]
  42d5de:	add    BYTE PTR [ecx+ecx*4],al
  42d5e1:	add    al,0xcc
  42d5e3:	mov    edi,edi
  42d5e5:	out    0x0,eax
  42d5e7:	(bad)  
  42d5e8:	call   edx
  42d5ea:	mov    DWORD PTR [eax],eax
  42d5ec:	xchg   ebp,eax
  42d5ed:	loope  0x42d5ee
  42d5ef:	sbb    eax,0x83ff9e00
  42d5f4:	rcl    BYTE PTR [ebx],1
  42d5f6:	xor    DWORD PTR [ecx],0x0
  42d5f9:	pop    ecx
  42d5fa:	cmp    edi,0x10
  42d5fd:	leave  
  42d5fe:	int3   
  42d5ff:	jge    0x42d600
  42d601:	inc    edi
  42d602:	(bad)  
  42d603:	inc    DWORD PTR [ebx-0x75]
  42d606:	add    cl,dh
  42d608:	(bad)  
  42d609:	in     eax,dx
  42d60a:	add    BYTE PTR [ebx-0x2300b34f],al
  42d610:	mov    esi,edi
  42d612:	(bad)  
  42d613:	push   DWORD PTR [esi-0x33383383]
  42d619:	test   eax,0x4b0ecc89
  42d61e:	add    BYTE PTR [edx-0x1],al
  42d621:	xchg   BYTE PTR [eax],al
  42d623:	(bad)  
  42d624:	jmp    0x42d608
  42d626:	call   FWORD PTR ds:0xff839dff
  42d62c:	xor    DWORD PTR [edx+0x22fff6ff],eax
  42d632:	(bad)  
  42d633:	(bad)  
  42d634:	cmp    ebp,DWORD PTR [eax+eax*1+0x10]
  42d638:	(bad)  
  42d639:	jge    0x42d5c4
  42d63b:	xor    DWORD PTR [edx-0x7c1c00db],0xffffffee
  42d642:	add    bh,bh
  42d644:	pop    ebp
  42d645:	sub    cx,0xffff
  42d649:	test   bh,bh
  42d64b:	add    BYTE PTR [ebp+0xa],bh
  42d64e:	dec    DWORD PTR [ecx+0xe400]
  42d654:	rcr    DWORD PTR [eax-0x7d],cl
  42d657:	mov    ebx,0x898349ff
  42d65c:	int    0x5c
  42d65e:	mov    DWORD PTR ds:0xff898200,edx
  42d664:	iret   
  42d665:	push   ebp
  42d666:	and    DWORD PTR [edi+edi*8+0x7e],0xffffffff
  42d66b:	add    BYTE PTR [ebp-0x5b],ah
  42d66e:	add    BYTE PTR [ebx-0x33000201],ah
  42d674:	outs   dx,DWORD PTR ds:[esi]
  42d675:	sbb    bh,bh
  42d677:	aaa    
  42d678:	int3   
  42d679:	sar    bh,0x0
  42d67c:	inc    esp
  42d67d:	fadd   DWORD PTR [eax]
  42d67f:	mov    ds:0xffff57ff,eax
  42d684:	fcomip st,st(3)
  42d686:	push   DWORD PTR [edi+edi*8]
  42d689:	jge    0x42d614
  42d68b:	add    dh,bh
  42d68d:	inc    esi
  42d68e:	mov    ecx,esi
  42d690:	add    BYTE PTR [ecx],dh
  42d692:	add    bh,bh
  42d694:	(bad)  
  42d695:	enter  0x1100,0x0
  42d699:	dec    DWORD PTR es:[ecx+0x2dffa965]
  42d6a0:	(bad)  
  42d6a1:	mov    edx,0x80e0ff89
  42d6a6:	add    BYTE PTR ds:0x83831383,dl
  42d6ac:	mov    bl,0x20
  42d6ae:	add    BYTE PTR [ebx-0x6101],al
  42d6b4:	mov    esi,0xff16008e
  42d6b9:	cmp    bh,0xff
  42d6bc:	mov    eax,0xff47ff4f
  42d6c1:	xor    BYTE PTR [eax],al
  42d6c3:	add    BYTE PTR [ebx+0x58fff0],al
  42d6c9:	gs dec esp
  42d6cc:	pop    ebx
  42d6cd:	mov    edi,0xba004cff
  42d6d2:	mov    esp,ecx
  42d6d4:	fs inc edx
  42d6d6:	(bad)  
  42d6d7:	out    dx,eax
  42d6d8:	add    BYTE PTR [edx+0x5e5e89ff],dh
  42d6de:	mov    DWORD PTR [esi-0x1],eax
  42d6e1:	jae    0x42d666
  42d6e3:	add    BYTE PTR [edx-0x33ee7cb3],ah
  42d6e9:	mov    dl,0x0
  42d6eb:	inc    DWORD PTR [edi+0x23]
  42d6ee:	mov    DWORD PTR [ebp+0xff2383],edx
  42d6f4:	scas   eax,DWORD PTR es:[edi]
  42d6f5:	sar    edi,0x18
  42d6f8:	mov    DWORD PTR [esi-0x627b0001],ecx
  42d6fe:	add    BYTE PTR [esi-0x1],ch
  42d701:	or     DWORD PTR [ecx+0x53e200],0x838effe5
  42d70b:	add    BYTE PTR [ebx-0x51],ah
  42d70e:	call   FWORD PTR [esi]
  42d710:	add    al,bl
  42d712:	(bad)  
  42d713:	call   DWORD PTR [esp+eax*2-0x5fff7b00]
  42d71a:	add    ah,cl
  42d71c:	shr    BYTE PTR [ebx-0x77],0x33
  42d720:	inc    DWORD PTR [esi-0x7d]
  42d723:	add    BYTE PTR [edi+0x10],dh
  42d726:	call   edi
  42d728:	add    cl,ch
  42d72a:	cmp    edi,0x13
  42d72d:	add    DWORD PTR [eax],0xffbfcc93
  42d733:	dec    DWORD PTR [ebx-0xa]
  42d736:	add    BYTE PTR [ebx],al
  42d738:	int3   
  42d739:	xchg   ecx,eax
  42d73a:	add    ah,cl
  42d73c:	out    0x72,eax
  42d73e:	inc    esi
  42d740:	dec    DWORD PTR [esi+0x12738383]
  42d746:	call   DWORD PTR [esi+0x8983]
  42d74c:	retf   0xff20
  42d74f:	pop    eax
  42d750:	call   ebx
  42d752:	(bad)  
  42d753:	inc    ebp
  42d755:	and    DWORD PTR [eax],eax
  42d757:	test   BYTE PTR [eax],0x7b
  42d75a:	add    bh,bh
  42d75c:	shl    DWORD PTR [edi-0x7d],cl
  42d75f:	(bad)  
  42d761:	std    
  42d762:	mov    edi,edi
  42d764:	jg     0x42d6ea
  42d766:	mov    DWORD PTR [eax-0x34],edi
  42d769:	inc    edi
  42d76a:	add    bh,bh
  42d76c:	add    ebp,DWORD PTR [ebx+eax*4+0xfdff19]
  42d773:	add    bl,bh
  42d775:	test   edi,edi
  42d777:	lock add BYTE PTR [edx],ch
  42d77a:	add    bh,bh
  42d77c:	mov    ebx,0xccd2ff1b
  42d781:	sbb    DWORD PTR [ebx+0x698283],eax
  42d787:	cmp    bh,0x26
  42d78a:	add    bh,bh
  42d78c:	mov    esi,0xfdffbd
  42d791:	xor    edi,edi
  42d793:	add    BYTE PTR [ecx-0x76d70031],ah
  42d799:	adc    bh,bh
  42d79b:	call   FWORD PTR [ebx+0x99006b]
  42d7a1:	and    ah,cl
  42d7a3:	mov    DWORD PTR [ecx-0x32],eax
  42d7a6:	jmp    FWORD PTR [edx-0x34]
  42d7a9:	retf   
  42d7aa:	add    bh,bh
  42d7ac:	dec    ecx
  42d7ad:	add    al,0xff
  42d7af:	fdivr  st,st(7)
  42d7b1:	xor    bh,bh
  42d7b3:	inc    DWORD PTR [ebp+ebp*2+0x78ffebff]
  42d7ba:	dec    esp
  42d7bc:	and    al,dl
  42d7be:	add    DWORD PTR [ecx-0x1],0xffffff8c
  42d7c2:	add    DWORD PTR [eax],0x57
  42d7c5:	ds add dl,dl
  42d7c8:	add    BYTE PTR [eax+eax*1-0x7d],bh
  42d7cc:	add    ecx,edi
  42d7ce:	xor    DWORD PTR ds:0xcc00a500,0x6c
  42d7d5:	popa   
  42d7d6:	dec    DWORD PTR [edx+0x0]
  42d7d9:	(bad)  
  42d7da:	(bad)  
  42d7db:	push   DWORD PTR ds:0xff2a00bc
  42d7e1:	xchg   edi,edi
  42d7e3:	call   DWORD PTR [eax+eax*2]
  42d7e6:	jmp    FWORD PTR [ebp-0x33006900]
  42d7ec:	scas   al,BYTE PTR es:[edi]
  42d7ed:	out    0xff,eax
  42d7ef:	mov    bh,bh
  42d7f1:	lds    eax,FWORD PTR [eax]
  42d7f3:	add    dh,al
  42d7f5:	pop    ebx
  42d7f6:	jmp    eax
  42d7f8:	jmp    FWORD PTR [ecx-0x1ebfff01]
  42d7fe:	push   DWORD PTR [eax]
  42d800:	cmp    ebx,0xffffff89
  42d803:	call   ecx
  42d805:	pop    ebx
  42d806:	dec    DWORD PTR [edi-0xffef01]
  42d80c:	xor    ebx,edx
  42d80e:	(bad)  
  42d80f:	jp     0x42d810
  42d811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d812:	add    DWORD PTR [eax],0x6a
  42d815:	pop    edi
  42d816:	xor    edx,0x0
  42d819:	pop    esp
  42d81a:	add    BYTE PTR [eax],al
  42d81c:	jl     0x42d7e2
  42d81e:	push   DWORD PTR [ecx-0x77]
  42d821:	aas    
  42d822:	add    bh,bh
  42d824:	jmp    0xff59:0xcc250072
  42d82b:	int3   
  42d82c:	stos   BYTE PTR es:[edi],al
  42d82d:	ins    DWORD PTR es:[edi],dx
  42d82e:	push   ebx
  42d830:	call   FWORD PTR ds:0xc36400ff
  42d836:	add    BYTE PTR [edx],bl
  42d838:	jmp    DWORD PTR [eax+0x80083ff]
  42d83e:	add    BYTE PTR [ecx],bl
  42d840:	add    BYTE PTR [ecx-0x77],dl
  42d843:	jmp    FWORD PTR [eax-0x7c]
  42d846:	inc    DWORD PTR [esi+0x0]
  42d849:	cs add bh,bh
  42d84c:	in     al,0x46
  42d84e:	adc    edi,0xffffffff
  42d851:	xor    edi,edi
  42d853:	call   FWORD PTR [ebx+0x38]
  42d856:	mov    DWORD PTR [edx-0x927d],ecx
  42d85c:	adc    DWORD PTR [eax],eax
  42d85e:	int3   
  42d85f:	push   0x83006889
  42d864:	fidiv  WORD PTR [edx-0x29ff2a01]
  42d86a:	add    DWORD PTR [ebx+0x5f00de9c],0xffffffff
  42d871:	mov    bh,bh
  42d873:	sbb    DWORD PTR [ebx-0x3b],0xffffff89
  42d877:	enter  0xfbff,0x0
  42d87b:	dec    DWORD PTR [ecx-0x1]
  42d87e:	int3   
  42d87f:	(bad)  
  42d880:	inc    DWORD PTR [eax+0x583cccff]
  42d886:	add    BYTE PTR [ecx-0x1],cl
  42d889:	idiv   bh
  42d88b:	jmp    ecx
  42d88d:	jle    0x42d88f
  42d88f:	pop    edi
  42d890:	(bad)  
  42d891:	jns    0x42d816
  42d893:	(bad)  
  42d894:	mov    ebp,0xff74cccc
  42d899:	and    DWORD PTR [ebx-0x76b8fc00],eax
  42d89f:	lods   eax,DWORD PTR ds:[esi]
  42d8a0:	sub    DWORD PTR [esi+0x0],0x0
  42d8a4:	addr16 das 
  42d8a6:	add    dh,bl
  42d8a8:	add    BYTE PTR ds:0x7429ffff,al
  42d8ae:	adc    edx,0xffffff83
  42d8b1:	(bad)  
  42d8b2:	(bad)  
  42d8b3:	inc    DWORD PTR [ecx-0x5]
  42d8b6:	dec    DWORD PTR ds:0x83ffa6ff
  42d8bc:	imul   esp,DWORD PTR [ebp+0x0],0xffffffbe
  42d8c0:	add    BYTE PTR [ebx+0x6230ff89],bl
  42d8c6:	add    BYTE PTR [eax-0x7ce57d],cl
  42d8cc:	(bad)  [ebx-0x46ffbc01]
  42d8d2:	add    bh,bh
  42d8d4:	int    0xcb
  42d8d6:	add    ch,ch
  42d8d8:	add    BYTE PTR [ebx-0x1],bh
  42d8db:	add    BYTE PTR [ecx-0x113349],dl
  42d8e1:	fadd   QWORD PTR [eax]
  42d8e3:	dec    DWORD PTR [edx-0xe800ef]
  42d8e9:	ss int3 
  42d8eb:	add    BYTE PTR [ecx-0x33d80075],ch
  42d8f1:	(bad)  
  42d8f3:	inc    edx
  42d8f5:	jns    0x42d8f6
  42d8f7:	xor    DWORD PTR [eax],eax
  42d8f9:	cwde   
  42d8fa:	mov    edi,edi
  42d8fc:	stos   DWORD PTR es:[edi],eax
  42d8fd:	jmp    0xffff:0x2100af00
  42d904:	(bad)  
  42d905:	mov    ebx,0xc003b00
  42d90a:	(bad)  
  42d90b:	push   DWORD PTR [edi+0x60]
  42d90e:	mov    DWORD PTR [esi-0xff2901],edx
  42d914:	lods   eax,DWORD PTR ds:[esi]
  42d916:	add    BYTE PTR [eax+0x0],bl
  42d919:	and    al,BYTE PTR [eax]
  42d91b:	(bad)  
  42d91c:	out    dx,al
  42d91d:	mov    eax,DWORD PTR [eax]
  42d91f:	rol    DWORD PTR [eax],1
  42d921:	dec    ebx
  42d922:	add    bh,bh
  42d924:	aam    0xa1
  42d926:	call   FWORD PTR [eax+0xffbd89]
  42d92c:	ja     0x42d958
  42d92e:	jmp    FWORD PTR [edi-0x1]
  42d931:	sar    bh,0xff
  42d934:	and    DWORD PTR [eax+eax*1+0x41],0xd4ff
  42d93c:	retf   
  42d93d:	ret    0xd9ff
  42d940:	jmp    DWORD PTR ds:0x80db0083
  42d946:	sbb    DWORD PTR [edi+0x0],0xffffffe0
  42d94a:	inc    DWORD PTR [eax]
  42d94c:	mov    dh,0xc
  42d94e:	mov    DWORD PTR [edx],esi
  42d950:	add    dh,al
  42d952:	int3   
  42d953:	int3   
  42d954:	mul    BYTE PTR [esi+0x0]
  42d957:	hlt    
  42d958:	call   FWORD PTR [esi-0x1]
  42d95b:	add    BYTE PTR [ebp-0x737665],al
  42d961:	(bad)  
  42d964:	popa   
  42d965:	jne    0x42d966
  42d967:	ret    
  42d968:	(bad)  
  42d969:	jge    0x42d96a
  42d96b:	add    BYTE PTR [edx-0xfe006b],dh
  42d971:	rol    BYTE PTR [eax],0xff
  42d974:	dec    esi
  42d975:	iret   
  42d976:	adc    DWORD PTR [eax-0x5301],0x39
  42d97d:	retf   
  42d97e:	add    cl,dl
  42d980:	push   edi
  42d982:	inc    DWORD PTR [eax]
  42d984:	jo     0x42d919
  42d986:	push   DWORD PTR [eax]
  42d988:	int3   
  42d989:	retf   
  42d98a:	add    BYTE PTR [eax],al
  42d98c:	push   ecx
  42d98d:	fdivr  st,st(7)
  42d98f:	ins    BYTE PTR es:[edi],dx
  42d990:	add    bh,ah
  42d992:	add    BYTE PTR [eax],al
  42d994:	dec    ebp
  42d995:	inc    esi
  42d996:	(bad)  
  42d997:	std    
  42d998:	add    BYTE PTR [esi-0x515bff01],ah
  42d99e:	dec    DWORD PTR [ebx-0x667d]
  42d9a4:	jbe    0x42d98a
  42d9a6:	dec    ecx
  42d9a8:	add    BYTE PTR [ebp-0x1],bl
  42d9ab:	add    ah,bl
  42d9ad:	dec    ecx
  42d9ae:	dec    ebp
  42d9b0:	push   DWORD PTR [edx+0x0]
  42d9b3:	add    al,al
  42d9b5:	xor    bh,bh
  42d9b7:	xchg   edi,edi
  42d9b9:	mov    al,ds:0x2b5b00ff
  42d9be:	(bad)  
  42d9bf:	in     eax,dx
  42d9c0:	sub    esi,0xffffffff
  42d9c3:	inc    DWORD PTR [edi]
  42d9c5:	int    0xcc
  42d9c7:	or     al,0x0
  42d9c9:	xor    edi,edi
  42d9cb:	(bad)  
  42d9cc:	call   0x83b26363
  42d9d1:	xor    eax,DWORD PTR [ebx-0x797d00]
  42d9d7:	retf   
  42d9d8:	int3   
  42d9d9:	pop    esi
  42d9da:	cmp    edi,0x5b
  42d9dd:	cmp    bh,bh
  42d9df:	and    bh,bh
  42d9e1:	jae    0x42d9e2
  42d9e3:	(bad)  
  42d9e4:	clc    
  42d9e5:	popa   
  42d9e6:	int3   
  42d9e7:	push   edx
  42d9e8:	jmp    edx
  42d9ea:	(bad)  
  42d9eb:	jmp    DWORD PTR [ecx-0x336e3335]
  42d9f1:	adc    al,0xff
  42d9f3:	cmp    DWORD PTR ds:0xff7aff06,0xffffffd9
  42d9fa:	or     DWORD PTR [ecx+0x27ffef95],0xffffffcc
  42da01:	sbb    ecx,esp
  42da03:	mov    DWORD PTR ds:0x3dff37,esi
  42da09:	fild   DWORD PTR [eax]
  42da0b:	cmp    DWORD PTR [esi-0xe00cd],0xffffffcc
  42da12:	inc    DWORD PTR [eax]
  42da14:	int3   
  42da15:	lea    eax,[ebx-0x557c0c]
  42da1b:	jmp    FWORD PTR [eax+eax*1-0x7d]
  42da1f:	jl     0x42d9ed
  42da21:	inc    eax
  42da22:	or     esp,0x5c
  42da25:	mov    DWORD PTR [eax],eax
  42da27:	inc    edx
  42da28:	jmp    DWORD PTR [ecx+0x1858ff89]
  42da2e:	inc    DWORD PTR [eax+eax*1]
  42da31:	mov    BYTE PTR [ecx-0x96897d],cl
  42da37:	lahf   
  42da38:	int3   
  42da39:	ss (bad) 
  42da3b:	(bad)  
  42da3c:	fcmovne st,st(6)
  42da3e:	xor    DWORD PTR [edx-0x1],0x44
  42da42:	mov    DWORD PTR [eax],eax
  42da44:	mov    ?,WORD PTR [esi-0xc009934]
  42da4a:	add    BYTE PTR [ecx-0x2900c015],cl
  42da50:	push   DWORD PTR [edi+edi*8-0x336e9201]
  42da57:	mov    dl,0xff
  42da59:	ret    
  42da5a:	cmp    edi,0x2
  42da5d:	mov    al,ds:0x5683c683
  42da62:	int3   
  42da63:	push   DWORD PTR [ebx]
  42da65:	mov    ebx,0xc58354ff
  42da6a:	add    bh,bh
  42da6c:	or     dh,BYTE PTR [edx]
  42da6e:	push   DWORD PTR [edx]
  42da70:	add    BYTE PTR [esi],dl
  42da72:	int3   
  42da73:	add    BYTE PTR [esi-0x4e],bl
  42da76:	mov    DWORD PTR [ecx-0x1],esp
  42da79:	ins    BYTE PTR es:[edi],dx
  42da7a:	add    BYTE PTR [eax],al
  42da7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da7d:	ret    0xc400
  42da80:	cmp    DWORD PTR [eax+eax*1-0x59e201],0xffffff87
  42da88:	add    DWORD PTR [ebx],0xffffffff
  42da8b:	add    BYTE PTR [edx-0x7cbe0075],bl
  42da91:	cmp    edi,0xffb9bdff
  42da97:	pop    ebp
  42da98:	add    BYTE PTR [edi-0x7ca0001],bl
  42da9e:	call   FWORD PTR [esi]
  42daa0:	add    BYTE PTR [edx+0x0],cl
  42daa3:	push   eax
  42daa5:	mov    bl,0xff
  42daa7:	mov    eax,ds:0xffffebcc
  42daac:	push   ds
  42daad:	jo     0x42da32
  42daaf:	inc    edx
  42dab0:	add    BYTE PTR [eax+eax*1-0xab6f01],dl
  42dab7:	cs add ch,bh
  42daba:	(bad)  
  42dabb:	jmp    FWORD PTR [esi]
  42dabd:	pop    esp
  42dabe:	inc    DWORD PTR [ebx+0x0]
  42dac1:	das    
  42dac2:	add    bh,bh
  42dac4:	add    al,0xd5
  42dac6:	jmp    FWORD PTR [eax]
  42dac8:	jmp    FWORD PTR [esi-0x12410001]
  42dace:	adc    DWORD PTR [edi-0x7c000900],0x6e
  42dad5:	jg     0x42dad6
  42dad7:	or     eax,0xcc89afff
  42dadc:	inc    ebp
  42dadd:	fwait
  42dade:	inc    DWORD PTR [ebx-0x7c33557d]
  42dae4:	and    eax,0xff98891f
  42dae9:	mov    dh,0xcc
  42daeb:	dec    DWORD PTR [esi+0x42]
  42daee:	dec    ebp
  42daf0:	add    DWORD PTR [esi-0x77],0xffffffff
  42daf4:	jge    0x42dae6
  42daf6:	jmp    FWORD PTR [edx-0x1]
  42daf9:	mov    BYTE PTR [eax],al
  42dafb:	add    BYTE PTR [ecx],dh
  42dafd:	out    dx,eax
  42dafe:	(bad)  
  42daff:	cmp    eax,DWORD PTR [eax]
  42db01:	sti    
  42db02:	add    bh,bh
  42db04:	sub    eax,0xfff900dc
  42db09:	js     0x42db0a
  42db0b:	int3   
  42db0c:	in     eax,dx
  42db0d:	pop    ds
  42db0e:	mov    edi,edx
  42db10:	jmp    DWORD PTR [eax]
  42db12:	inc    DWORD PTR [eax]
  42db14:	jb     0x42db6f
  42db16:	add    dl,dl
  42db18:	push   DWORD PTR [ebx-0x4d0c0100]
  42db1e:	sub    ebx,0x0
  42db21:	pop    ecx
  42db22:	cmp    edi,0x55
  42db25:	xchg   edx,eax
  42db26:	inc    DWORD PTR [edi-0x3e77]
  42db2c:	jp     0x42dab0
  42db2e:	add    BYTE PTR [edx-0x7d],ah
  42db31:	in     al,dx
  42db32:	(bad)  
  42db33:	call   edx
  42db35:	mov    dh,0xff
  42db37:	cmp    bh,0xe4
  42db3a:	(bad)  
  42db3b:	jmp    FWORD PTR [ebx-0xacff21]
  42db41:	sar    edi,1
  42db43:	add    edx,0xffffff91
  42db46:	and    DWORD PTR [edx+0x0],0x33
  42db4a:	add    bh,bh
  42db4c:	stos   BYTE PTR es:[edi],al
  42db4d:	dec    eax
  42db4e:	jmp    DWORD PTR [edi+0xffb9cc]
  42db54:	xlat   BYTE PTR ds:[ebx]
  42db55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db56:	(bad)  
  42db57:	mov    ecx,0xff83b700
  42db5c:	je     0x42db21
  42db5e:	call   FWORD PTR [edx-0x7f01]
  42db64:	enter  0x8320,0xe4
  42db68:	xor    DWORD PTR [eax+eax*1],0x0
  42db6c:	add    cl,ch
  42db6e:	adc    DWORD PTR [eax+eax*1],0xfffffff6
  42db72:	(bad)  
  42db73:	jmp    DWORD PTR [ebp-0x49]
  42db76:	push   DWORD PTR [edi]
  42db78:	add    dl,dl
  42db7a:	(bad)  
  42db7b:	inc    DWORD PTR [eax+0x47]
  42db7e:	dec    DWORD PTR [edx-0x1]
  42db81:	push   edi
  42db82:	(bad)  
  42db83:	push   DWORD PTR [ebx-0x7c00ff28]
  42db89:	xchg   edi,edi
  42db8b:	call   esp
  42db8d:	sar    bh,0xfc
  42db90:	jmp    DWORD PTR [eax]
  42db92:	add    BYTE PTR [eax],al
  42db94:	mov    WORD PTR [eax+0x74ff5e83],gs
  42db9a:	mov    DWORD PTR [eax],eax
  42db9c:	sbb    bl,bh
  42db9e:	add    BYTE PTR [esi],dh
  42dba0:	add    dh,ch
  42dba2:	(bad)  
  42dba3:	jmp    DWORD PTR [eax-0x78]
  42dba6:	call   FWORD PTR [ebx+eax*4+0x56ffff9a]
  42dbad:	and    eax,DWORD PTR [ebx-0xc700aa]
  42dbb3:	add    al,ch
  42dbb5:	push   0xe4ffac83
  42dbba:	add    bh,bh
  42dbbc:	cmp    bh,BYTE PTR [eax-0x53003201]
  42dbc2:	(bad)  
  42dbc3:	push   ecx
  42dbc5:	out    dx,eax
  42dbc6:	add    BYTE PTR [edi+edi*8-0x1f],ch
  42dbca:	(bad)  
  42dbcb:	(bad)  
  42dbcc:	jmp    0xff4c:0x83b2ff0d
  42dbd3:	add    BYTE PTR [esi+0x60ffa9],bh
  42dbd9:	and    edi,edi
  42dbdb:	dec    ecx
  42dbdd:	mov    ecx,0x34ff7dff
  42dbe2:	inc    DWORD PTR [eax]
  42dbe4:	jge    0x42dbc6
  42dbe6:	add    ah,ch
  42dbe8:	add    BYTE PTR [ebx+0x0],ch
  42dbeb:	add    BYTE PTR [esi],ch
  42dbed:	fiadd  DWORD PTR [ebx-0x5c7cf6]
  42dbf3:	dec    DWORD PTR [ecx-0x7c9bffba]
  42dbf9:	mov    dl,0xff
  42dbfb:	dec    DWORD PTR [esi]
  42dbfd:	xchg   ebp,eax
  42dbfe:	(bad)  
  42dbff:	jnp    0x42dc01
  42dc01:	push   ecx
  42dc02:	(bad)  
  42dc03:	call   ebp
  42dc05:	xchg   bh,bh
  42dc07:	popf   
  42dc08:	jmp    DWORD PTR [eax]
  42dc0a:	int3   
  42dc0b:	int3   
  42dc0c:	adc    eax,0xffcd0009
  42dc11:	sub    bh,bh
  42dc13:	sub    DWORD PTR [eax-0x337dffdf],0xc
  42dc1a:	add    BYTE PTR [eax],al
  42dc1c:	push   esp
  42dc1d:	jb     0x42dc1f
  42dc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc20:	add    BYTE PTR [edx-0x3ad30100],dh
  42dc26:	int3   
  42dc27:	sbb    eax,0xffff3100
  42dc2c:	lods   al,BYTE PTR ds:[esi]
  42dc2d:	sub    al,0xff
  42dc2f:	sub    bh,bh
  42dc31:	test   al,0xff
  42dc33:	dec    esi
  42dc35:	bound  eax,QWORD PTR [eax]
  42dc37:	dec    ebx
  42dc38:	mov    DWORD PTR [edx-0x1],ecx
  42dc3b:	cmp    DWORD PTR [edi],0xe
  42dc3e:	or     DWORD PTR [edx-0x4c01],0xffffffe1
  42dc45:	sar    bh,1
  42dc47:	icebp  
  42dc48:	sbb    DWORD PTR [esp+ecx*8-0xd73601],0xffffffa8
  42dc50:	add    ch,ah
  42dc52:	add    DWORD PTR [ebx-0x52ff4337],0xffffffff
  42dc59:	test   al,0xff
  42dc5b:	jmp    DWORD PTR [ebp-0xc7ff38]
  42dc61:	push   es
  42dc62:	add    BYTE PTR [eax],al
  42dc64:	inc    esp
  42dc65:	popf   
  42dc66:	add    BYTE PTR [ebx+0x0],ch
  42dc69:	mov    edi,0x19df83ff
  42dc6e:	inc    DWORD PTR [edx]
  42dc70:	add    BYTE PTR [eax+0x3c3affff],cl
  42dc76:	add    BYTE PTR [eax+eax*1],ch
  42dc79:	mov    bl,0xff
  42dc7b:	inc    DWORD PTR [edx+ebp*1]
  42dc7e:	jmp    DWORD PTR [edx+0x0]
  42dc81:	nop
  42dc82:	dec    DWORD PTR [ecx-0x28004a94]
  42dc88:	cmp    DWORD PTR [eax+eax*1-0x336cb700],0xffffffea
  42dc90:	inc    DWORD PTR [edx-0x1]
  42dc93:	add    BYTE PTR [ebx+0x65ffe0],bh
  42dc99:	jns    0x42dc1e
  42dc9b:	jmp    DWORD PTR [edx-0x25]
  42dc9e:	int3   
  42dc9f:	fcos   
  42dca1:	test   al,0xff
  42dca3:	jmp    FWORD PTR [edi-0x89ffce]
  42dca9:	push   ds
  42dcaa:	or     DWORD PTR [ecx-0x6c7c09ae],0x0
  42dcb1:	sbb    eax,0xea7783ff
  42dcb6:	cmp    eax,0x0
  42dcb9:	push   es
  42dcba:	mov    esp,ecx
  42dcbc:	cmp    DWORD PTR [ecx+ecx*4],edx
  42dcbf:	sar    bh,0x70
  42dcc2:	add    bh,bh
  42dcc4:	fild   DWORD PTR [ebp-0x1]
  42dcc7:	sbb    edi,edi
  42dcc9:	and    al,0xff
  42dccb:	add    ch,ch
  42dccd:	inc    eax
  42dcce:	inc    DWORD PTR [ebp-0x1]
  42dcd1:	lahf   
  42dcd2:	inc    DWORD PTR [eax]
  42dcd4:	fiadd  DWORD PTR [edi+edi*8]
  42dcd7:	jmp    0x42dcd9
  42dcd9:	push   edi
  42dcda:	mov    esp,ecx
  42dcdc:	push   ebx
  42dcdd:	cmp    BYTE PTR [eax],al
  42dcdf:	add    BYTE PTR es:[edx-0x7d],bl
  42dce3:	add    BYTE PTR [eax+0x5d],dl
  42dce6:	jmp    FWORD PTR [edx+0x0]
  42dce9:	xchg   esi,eax
  42dcea:	add    DWORD PTR [ebx+0x29ff7a6f],0xffffff89
  42dcf1:	xchg   esi,eax
  42dcf2:	(bad)  
  42dcf3:	call   DWORD PTR [ecx-0x56]
  42dcf6:	call   DWORD PTR [edx+0xff2589]
  42dcfc:	imul   DWORD PTR [esi]
  42dcfe:	inc    DWORD PTR [ebp-0xfff701]
  42dd04:	push   esi
  42dd05:	aam    0x83
  42dd07:	jo     0x42dc8c
  42dd09:	mov    bl,0xff
  42dd0b:	call   DWORD PTR [eax-0x76c40031]
  42dd11:	add    BYTE PTR ss:[eax],al
  42dd14:	jno    0x42dd12
  42dd16:	inc    esp
  42dd18:	add    BYTE PTR [ecx+0x697affcc],ch
  42dd1e:	add    BYTE PTR [edi-0xe401],ah
  42dd24:	or     bh,BYTE PTR [edx]
  42dd26:	add    DWORD PTR [edx],0x0
  42dd29:	push   ecx
  42dd2a:	(bad)  
  42dd2b:	inc    DWORD PTR [edx]
  42dd2d:	sub    bh,bh
  42dd2f:	dec    ebx
  42dd30:	inc    ecx
  42dd32:	mov    DWORD PTR [ecx+0x1000291a],ecx
  42dd38:	add    BYTE PTR [ebp+0x4c0cc00],dl
  42dd3e:	call   DWORD PTR [ebx]
  42dd40:	add    BYTE PTR [ebx-0xa180100],dh
  42dd46:	sub    DWORD PTR [edx-0x1],0x76
  42dd4a:	int3   
  42dd4b:	push   DWORD PTR [ebp+0xd2ff5e]
  42dd51:	aam    0x0
  42dd53:	(bad)  
  42dd54:	cmp    al,0x22
  42dd56:	add    dh,al
  42dd58:	jmp    FWORD PTR [esi+0x0]
  42dd5b:	call   DWORD PTR [eax-0xd]
  42dd5e:	(bad)  
  42dd5f:	fdiv   st(7),st
  42dd61:	arpl   WORD PTR [eax],ax
  42dd63:	cmp    DWORD PTR [ebp-0xcf00bd],0xffffffab
  42dd6a:	add    BYTE PTR [eax],al
  42dd6c:	xchg   ebx,eax
  42dd6d:	mov    esi,0x40ff23ff
  42dd72:	add    bh,bh
  42dd74:	pusha  
  42dd75:	xchg   esp,eax
  42dd76:	call   DWORD PTR [ecx+ecx*4]
  42dd79:	mov    edx,0xb2a9ffcc
  42dd7e:	call   DWORD PTR [ecx]
  42dd80:	add    BYTE PTR [eax+eax*1+0x7ac1ff],bl
  42dd87:	cld    
  42dd88:	(bad)  
  42dd89:	aas    
  42dd8a:	add    BYTE PTR [eax],al
  42dd8c:	fs dec ebp
  42dd8e:	push   ebp
  42dd90:	mov    edx,esp
  42dd92:	inc    DWORD PTR [eax]
  42dd94:	scas   al,BYTE PTR es:[edi]
  42dd95:	in     al,0xff
  42dd97:	mov    esi,0xccff66ff
  42dd9c:	imul   ebx,edi,0xb7fff0ff
  42dda2:	add    BYTE PTR [eax],al
  42dda4:	out    0x11,al
  42dda6:	add    BYTE PTR [ebp-0xffca01],bl
  42ddac:	cs xchg ebx,eax
  42ddae:	add    BYTE PTR [ebx-0x1],cl
  42ddb1:	or     edi,edi
  42ddb3:	push   DWORD PTR [ebx-0xa6ffec]
  42ddb9:	xlat   BYTE PTR ds:[ebx]
  42ddba:	inc    DWORD PTR [ebx-0x7f00621f]
  42ddc0:	add    BYTE PTR [ebx-0x34],ch
  42ddc3:	cmp    DWORD PTR [edx-0x65ff9e],0xffffffd0
  42ddca:	inc    DWORD PTR [eax]
  42ddcc:	xchg   esp,eax
  42ddcd:	mov    ds:0xebffc7ff,al
  42ddd2:	add    BYTE PTR [eax],al
  42ddd4:	add    eax,0xff1fffe5
  42ddd9:	icebp  
  42ddda:	add    DWORD PTR [ebx+0x2bfff2f4],0xffffffff
  42dde1:	jecxz  0x42dde3
  42dde3:	dec    DWORD PTR [edi-0x11]
  42dde6:	xor    ecx,0x0
  42dde9:	ins    BYTE PTR es:[edi],dx
  42ddea:	inc    DWORD PTR [eax]
  42ddec:	mov    ebp,0xff86cc90
  42ddf1:	xor    al,0xff
  42ddf3:	call   FWORD PTR [eax+0x14]
  42ddf6:	mov    DWORD PTR [ebx],ecx
  42ddf8:	add    BYTE PTR [ebx-0x1],ah
  42ddfb:	and    DWORD PTR [esi+eiz*1-0x1],0x6a
  42de00:	add    bh,ah
  42de02:	cmp    edi,0xffffffde
  42de05:	pop    esp
  42de06:	add    BYTE PTR [eax+eax*1],al
  42de09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de0a:	inc    DWORD PTR [ebx+0x1783488e]
  42de10:	call   FWORD PTR [edx]
  42de12:	dec    esp
  42de14:	jp     0x42ddc3
  42de16:	mov    DWORD PTR [ebp+0x836200],esi
  42de1c:	leave  
  42de1d:	mov    edx,0xcb00f8ff
  42de22:	add    BYTE PTR [eax],al
  42de24:	dec    ecx
  42de25:	(bad)  
  42de26:	call   FWORD PTR [edx-0x34]
  42de29:	adc    bh,bh
  42de2b:	int3   
  42de2c:	(bad)  
  42de2e:	or     DWORD PTR [ebx-0x34],0xfffffff7
  42de32:	dec    esp
  42de34:	stos   DWORD PTR es:[edi],eax
  42de35:	add    eax,0x70cc28cc
  42de3a:	add    BYTE PTR [eax],al
  42de3c:	sub    ebp,ecx
  42de3e:	dec    DWORD PTR [ebp-0xff3f77]
  42de44:	into   
  42de45:	pop    ds
  42de46:	add    BYTE PTR [ebx+eax*4],ah
  42de49:	rol    DWORD PTR [eax],1
  42de4b:	jmp    FWORD PTR [ecx+0x50]
  42de4e:	call   FWORD PTR [ecx+ecx*4-0x4fff7654]
  42de55:	fcos   
  42de57:	stc    
  42de58:	add    BYTE PTR [ecx-0x1],bh
  42de5b:	call   esp
  42de5d:	mov    ch,0x0
  42de5f:	out    0x0,eax
  42de61:	aaa    
  42de62:	add    bh,bh
  42de64:	lahf   
  42de65:	rol    BYTE PTR [eax],cl
  42de67:	xchg   esp,eax
  42de68:	mov    ebp,ebx
  42de6a:	add    bh,bh
  42de6c:	ror    BYTE PTR [edx],1
  42de6e:	dec    DWORD PTR [ebx-0x7c002c01]
  42de74:	(bad)  
  42de75:	pop    edi
  42de76:	push   DWORD PTR [ecx+0x0]
  42de79:	inc    eax
  42de7a:	add    ah,cl
  42de7c:	mov    ah,BYTE PTR [esi-0x117c9901]
  42de82:	int3   
  42de83:	add    BYTE PTR [edx],bh
  42de85:	cmp    bh,bh
  42de87:	jg     0x42de88
  42de89:	pop    esp
  42de8a:	inc    DWORD PTR [ebx+0x9ffac12]
  42de90:	add    BYTE PTR [edi+edi*8],al
  42de93:	mov    eax,esp
  42de95:	pop    DWORD PTR [eax]
  42de97:	inc    esi
  42de98:	call   DWORD PTR [edx-0x37b60001]
  42de9e:	mov    DWORD PTR [eax+0x0],ebx
  42dea1:	jecxz  0x42de6f
  42dea3:	(bad)  
  42dea4:	mov    ebp,0xff200076
  42dea9:	jge    0x42deaa
  42deab:	add    BYTE PTR [ecx+0x2eff49],al
  42deb1:	test   eax,0xe327ffff
  42deb6:	cmp    DWORD PTR [edx],0xffffffff
  42deb9:	jno    0x42de44
  42debb:	dec    DWORD PTR [ebp-0x76]
  42debe:	call   DWORD PTR [edi+0x0]
  42dec1:	cmp    bh,0x0
  42dec4:	cmp    DWORD PTR [ebp+0x260059ff],ebx
  42deca:	inc    DWORD PTR [eax]
  42decc:	scas   eax,DWORD PTR es:[edi]
  42decd:	ror    DWORD PTR [ecx-0x180032],1
  42ded3:	add    DWORD PTR ds:0x83b9ffbb,0x5f
  42deda:	add    BYTE PTR [eax],al
  42dedc:	dec    edx
  42dedd:	adc    al,0xff
  42dedf:	je     0x42dee1
  42dee1:	sar    edi,cl
  42dee3:	call   DWORD PTR [eax]
  42dee5:	cmc    
  42dee6:	add    BYTE PTR [edx],ah
  42dee8:	call   DWORD PTR [esi]
  42deea:	add    BYTE PTR [eax],al
  42deec:	adc    edi,edi
  42deee:	add    BYTE PTR [eax],ah
  42def0:	jmp    DWORD PTR [edi+0x8f000ff]
  42def6:	and    DWORD PTR [ebp+0x0],0x9
  42defa:	add    DWORD PTR [ebx+0x6b83e791],0xffffffff
  42df01:	pop    edi
  42df02:	(bad)  
  42df03:	jmp    esi
  42df05:	mov    al,0xff
  42df07:	jg     0x42df08
  42df09:	stos   DWORD PTR es:[edi],eax
  42df0a:	inc    DWORD PTR [eax]
  42df0c:	addr16 jb 0x42df0f
  42df0f:	ret    
  42df10:	add    BYTE PTR [edi-0x18040001],cl
  42df16:	add    dh,dh
  42df18:	dec    DWORD PTR [edx-0x43dd7c01]
  42df1e:	push   DWORD PTR [esp+ecx*8+0x34ff005d]
  42df25:	test   DWORD PTR [ecx-0x3e0039],0xffe59bcc
  42df2f:	pop    ebx
  42df30:	call   DWORD PTR [esi]
  42df32:	mov    esp,ecx
  42df34:	dec    eax
  42df35:	mov    esp,0x18006400
  42df3a:	mov    edi,edi
  42df3c:	add    BYTE PTR [eax],al
  42df3e:	add    BYTE PTR ds:0xffaecc,dh
  42df44:	xchg   ebp,eax
  42df45:	repnz sbb DWORD PTR [edi+edi*8],0x2b
  42df4a:	add    BYTE PTR [eax],al
  42df4c:	xchg   BYTE PTR fs:[ecx+0xf5000e],cl
  42df53:	push   DWORD PTR [ebx-0x33120074]
  42df59:	fild   DWORD PTR [ebx+0xddd0ff]
  42df5f:	popf   
  42df60:	sub    DWORD PTR [ebx],0x0
  42df63:	cmp    esp,0xffffffb0
  42df66:	add    BYTE PTR [ecx+0xccceff],ah
  42df6c:	test   BYTE PTR [edi+edi*8-0xfe0067],al
  42df73:	jmp    esp
  42df75:	into   
  42df76:	add    ch,al
  42df78:	add    BYTE PTR [ebp-0x1],cl
  42df7b:	push   ecx
  42df7d:	loope  0x42df7e
  42df7f:	dec    ecx
  42df80:	jmp    FWORD PTR [ecx+0x632bffcc]
  42df86:	push   edi
  42df88:	mov    DWORD PTR [esi+0x62c78389],ecx
  42df8e:	call   FWORD PTR [ebx-0xe97d]
  42df94:	lods   eax,DWORD PTR ds:[esi]
  42df95:	inc    esp
  42df96:	sub    esi,0xffffffff
  42df99:	stc    
  42df9a:	int3   
  42df9b:	(bad)  
  42df9c:	mov    ebp,0xffa8ff1b
  42dfa1:	outs   dx,BYTE PTR ds:[esi]
  42dfa2:	add    BYTE PTR [eax],al
  42dfa4:	mov    ebx,0x83d70048
  42dfa9:	and    DWORD PTR [eax],eax
  42dfab:	(bad)  
  42dfac:	fsubr  st,st(1)
  42dfae:	add    BYTE PTR [ebx+0x0],dl
  42dfb1:	pop    es
  42dfb2:	int3   
  42dfb3:	mov    DWORD PTR [edi-0x7cffff8e],esp
  42dfb9:	mov    ?,edi
  42dfbb:	adc    DWORD PTR [ebx-0x6a769f],0x67
  42dfc2:	inc    DWORD PTR [ebx-0x65ff9e81]
  42dfc8:	add    cl,dh
  42dfca:	int3   
  42dfcb:	add    ecx,0x35
  42dfce:	add    BYTE PTR [ebx-0x1],bh
  42dfd1:	iret   
  42dfd2:	add    bh,bh
  42dfd4:	and    ah,BYTE PTR [esp+ecx*8]
  42dfd7:	inc    eax
  42dfd8:	sub    DWORD PTR [edi-0x7d],0xffffffff
  42dfdc:	sbb    BYTE PTR [edx-0x42ff8e01],ch
  42dfe2:	add    BYTE PTR [eax],al
  42dfe4:	sbb    BYTE PTR [ecx+0x7683de00],bl
  42dfea:	dec    DWORD PTR [ecx-0x3600a4c4]
  42dff0:	add    BYTE PTR [ecx+0x43aff00],cl
  42dff6:	add    BYTE PTR [ebp-0x601],bl
  42dffc:	repnz ins BYTE PTR es:[edi],dx
  42dffe:	add    BYTE PTR [ebx+0x4a00],cl
  42e004:	or     edx,DWORD PTR [eax-0x17cdd00]
  42e00a:	add    bh,bh
  42e00c:	das    
  42e00d:	fdivp  st(7),st
  42e00f:	enter  0x2b00,0xff
  42e013:	jmp    DWORD PTR [edx-0x7c130021]
  42e019:	adc    al,BYTE PTR [eax]
  42e01b:	add    BYTE PTR [eax],ch
  42e01d:	in     eax,0x83
  42e01f:	iret   
  42e020:	(bad)  
  42e021:	jmp    0x42e022
  42e023:	call   FWORD PTR [ecx-0x31]
  42e026:	push   ebx
  42e028:	add    bl,dh
  42e02a:	add    BYTE PTR [eax],al
  42e02c:	aas    
  42e02d:	or     DWORD PTR [eax],eax
  42e02f:	loope  0x42e030
  42e031:	aas    
  42e032:	inc    DWORD PTR [eax]
  42e034:	inc    edx
  42e035:	add    BYTE PTR [di-0x34],al
  42e039:	inc    DWORD PTR cs:[ebx-0x1133f7ad]
  42e040:	add    BYTE PTR [eax],ch
  42e042:	dec    esp
  42e044:	imul   ebx,DWORD PTR [edi+edi*8-0x8600df],0xffffff89
  42e04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e04d:	dec    ebx
  42e04e:	add    BYTE PTR [edi-0x8700],bl
  42e054:	dec    ecx
  42e055:	stos   DWORD PTR es:[edi],eax
  42e056:	add    BYTE PTR [ebx],dl
  42e058:	cmp    DWORD PTR [ecx-0x1],0xffffffff
  42e05c:	stos   DWORD PTR es:[edi],eax
  42e05d:	(bad)  
  42e05f:	xor    eax,0x8316cc
  42e064:	mov    ch,0x8e
  42e066:	adc    DWORD PTR [ecx-0x77],0xffffffb6
  42e06a:	add    DWORD PTR [eax],0x11
  42e06d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e06e:	inc    DWORD PTR [edi-0x7c001201]
  42e074:	addr16 clc 
  42e076:	jmp    DWORD PTR [edx-0x34]
  42e079:	int3   
  42e07a:	int3   
  42e07b:	int3   
  42e07c:	int3   
  42e07d:	int3   
  42e07e:	int3   
  42e07f:	int3   
  42e080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e081:	(bad)  
  42e082:	push   eax
  42e084:	inc    ecx
  42e085:	sub    bh,bh
  42e087:	mov    DWORD PTR [edx],ebx
  42e089:	add    bh,bh
  42e08b:	cld    
  42e08c:	sbb    al,0x81
  42e08e:	cmp    edi,0x23
  42e091:	add    BYTE PTR [ebx-0xc1ca7d],al
  42e097:	add    BYTE PTR [ecx+0x0],bl
  42e09a:	jmp    ebp
  42e09c:	ins    DWORD PTR es:[edi],dx
  42e09d:	jo     0x42e022
  42e09f:	sbb    DWORD PTR [edx-0x1],0xffffffff
  42e0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0a4:	ins    BYTE PTR es:[edi],dx
  42e0a5:	(bad)
  42e0a8:	mov    ebp,0xae2d8300
  42e0ad:	pop    edi
  42e0ae:	add    bh,bh
  42e0b0:	js     0x42e0b2
  42e0b2:	add    BYTE PTR [esi+ecx*2+0x35],dl
  42e0b6:	add    bh,bh
  42e0b8:	mov    eax,ds:0x16b2ffcc
  42e0bd:	(bad)
  42e0c0:	add    eax,0xea3affcc
  42e0c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0c6:	int3   
  42e0c7:	int3   
  42e0c8:	ins    BYTE PTR es:[edi],dx
  42e0c9:	int3   
  42e0ca:	add    BYTE PTR [ecx+0x1e],cl
  42e0cd:	clc    
  42e0ce:	add    bh,bh
  42e0d0:	(bad)  
  42e0d1:	mov    DWORD PTR [eax],eax
  42e0d3:	dec    eax
  42e0d4:	ins    BYTE PTR es:[edi],dx
  42e0d5:	mov    bh,bh
  42e0d7:	add    BYTE PTR [eax],dl
  42e0d9:	add    DWORD PTR [eax],0x5d
  42e0dc:	arpl   WORD PTR [eax],sp
  42e0de:	(bad)  
  42e0df:	call   DWORD PTR [ecx+ecx*4+0xebc3b89]
  42e0e6:	add    bh,bh
  42e0e8:	mov    al,BYTE PTR [eax]
  42e0ea:	jmp    FWORD PTR [eax]
  42e0ec:	loopne 0x42e10d
  42e0ee:	inc    DWORD PTR [eax]
  42e0f0:	fld    DWORD PTR [eax]
  42e0f2:	add    BYTE PTR [edx],al
  42e0f4:	push   ss
  42e0f5:	sar    edi,0x0
  42e0f8:	imul   ecx,DWORD PTR [ecx-0x2c493e00],0xfffbffff
  42e102:	dec    DWORD PTR [ebx]
  42e104:	pop    eax
  42e105:	(bad)  
  42e106:	cmp    edi,0x24
  42e109:	add    BYTE PTR [eax],al
  42e10b:	mov    eax,0xffcc1e6b
  42e110:	mov    bl,0x83
  42e112:	int3   
  42e113:	fld    TBYTE PTR [edi+0x28ff0092]
  42e119:	(bad)  
  42e11a:	jmp    edx
  42e11c:	xchg   esi,eax
  42e11d:	mov    dh,0x83
  42e11f:	inc    DWORD PTR [ebx+0x656bff00]
  42e125:	imul   ecx,DWORD PTR [ecx-0xfe00],0xff9378e8
  42e12f:	mov    DWORD PTR [ebx],ebp
  42e131:	add    ah,cl
  42e133:	adc    al,0xf3
  42e135:	cmp    eax,0xff2400ff
  42e13a:	call   ebp
  42e13c:	add    al,0x83
  42e13e:	add    bh,bh
  42e140:	sub    DWORD PTR [eax],eax
  42e142:	(bad)  
  42e143:	stc    
  42e144:	or     ecx,esi
  42e146:	inc    DWORD PTR [ebx-0x2c76001b]
  42e14c:	push   ebx
  42e14d:	mov    ds:0xd9ffff,al
  42e152:	dec    DWORD PTR [edx+0x17]
  42e155:	stos   BYTE PTR es:[edi],al
  42e156:	add    bh,bh
  42e158:	mov    dl,0x0
  42e15a:	jmp    DWORD PTR [edx-0x76ffed4d]
  42e160:	sar    edi,0xff
  42e163:	cli    
  42e164:	mov    dl,0xe
  42e166:	cmp    edi,0x28
  42e169:	add    DWORD PTR [eax],0x19
  42e16c:	pop    edi
  42e16d:	xor    al,0x0
  42e16f:	inc    DWORD PTR ds:0x9891ff00
  42e175:	jl     0x42e176
  42e177:	add    BYTE PTR [ecx-0x569eff01],dh
  42e17d:	or     eax,0xff370000
  42e182:	(bad)  
  42e183:	js     0x42e125
  42e185:	call   0xd8648a
  42e18a:	sub    DWORD PTR [eax-0x7c7c96d1],0x2d
  42e191:	(bad)  
  42e192:	dec    DWORD PTR [ecx+edi*8+0x50ffff83]
  42e199:	(bad)  
  42e19a:	call   DWORD PTR [edi+edx*4+0x75000057]
  42e1a1:	add    bh,bh
  42e1a3:	dec    edx
  42e1a4:	jge    0x42e1ab
  42e1a6:	inc    DWORD PTR [eax]
  42e1a8:	pop    ss
  42e1a9:	(bad)  
  42e1aa:	call   esp
  42e1ac:	push   eax
  42e1ad:	push   edx
  42e1ae:	cmp    edi,0x17
  42e1b1:	int3   
  42e1b2:	add    BYTE PTR [ebx-0x63],ah
  42e1b5:	xchg   edi,eax
  42e1b6:	dec    DWORD PTR [ecx+0x74ffffd3]
  42e1bc:	lea    edx,ds:0xffe7ffcc
  42e1c2:	mov    DWORD PTR [ecx+eiz*1-0x72ff33a0],ecx
  42e1c9:	add    BYTE PTR [ecx-0xf6ad0e],cl
  42e1cf:	add    BYTE PTR [edx-0x34],al
  42e1d2:	dec    DWORD PTR ds:0x8300c49a
  42e1d8:	scas   eax,DWORD PTR es:[edi]
  42e1d9:	inc    DWORD PTR [eax]
  42e1db:	enter  0xa9c9,0x0
  42e1df:	mov    ecx,esi
  42e1e1:	add    BYTE PTR [eax],al
  42e1e3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42e1e5:	(bad)  
  42e1e6:	(bad)  
  42e1e7:	push   esp
  42e1e9:	int3   
  42e1ea:	add    DWORD PTR [esi+0xb],0x67
  42e1ee:	inc    DWORD PTR [eax]
  42e1f0:	add    BYTE PTR [ebx-0x682ce00],al
  42e1f6:	add    DWORD PTR [eax],0xffffffaf
  42e1f9:	dec    esp
  42e1fb:	jb     0x42e225
  42e1fd:	xor    DWORD PTR [eax],eax
  42e1ff:	inc    DWORD PTR ds:0x1263ffff
  42e205:	(bad)  
  42e206:	inc    DWORD PTR [eax]
  42e208:	add    BYTE PTR [eax],0xff
  42e20b:	rol    BYTE PTR [ebx],0x3b
  42e20e:	(bad)  
  42e20f:	push   ebx
  42e211:	dec    esp
  42e213:	xchg   esi,eax
  42e214:	les    ebp,FWORD PTR [esi]
  42e216:	(bad)  
  42e217:	(bad)  
  42e218:	sti    
  42e219:	mov    DWORD PTR [ecx-0x7cee4d82],ecx
  42e21f:	call   DWORD PTR [edi-0x58d3007d]
  42e225:	out    0xff,al
  42e227:	or     DWORD PTR [ecx-0x1],0xffffffcc
  42e22b:	(bad)  
  42e22c:	push   edx
  42e22d:	mov    ebx,0xff20ffff
  42e232:	add    BYTE PTR [ebp+0x1509],dl
  42e238:	sbb    al,BYTE PTR [ebx-0x1a973000]
  42e23e:	inc    DWORD PTR [eax]
  42e240:	pop    esp
  42e241:	add    ah,cl
  42e243:	sbb    eax,0x895849
  42e248:	mov    al,0x83
  42e24a:	jmp    DWORD PTR [ebp+0x13]
  42e24d:	jo     0x42e1d2
  42e24f:	mov    DWORD PTR [eax],edi
  42e251:	(bad)  
  42e252:	inc    DWORD PTR [esi+0x32]
  42e255:	pop    ss
  42e256:	add    DWORD PTR [eax],0x5c
  42e259:	add    ah,cl
  42e25b:	retf   0x1078
  42e25e:	add    DWORD PTR [eax],0x4c
  42e261:	inc    DWORD PTR [eax]
  42e263:	loop   0x42e299
  42e265:	retf   
  42e266:	dec    esp
  42e268:	add    DWORD PTR [bp+di-0x3c1b],0xffffffe9
  42e26e:	(bad)  
  42e26f:	jmp    esi
  42e271:	add    BYTE PTR [eax],al
  42e273:	mov    BYTE PTR [esi+0x50000c2],cl
  42e279:	cmp    edi,0xffffffc6
  42e27c:	inc    edi
  42e27d:	xchg   esi,eax
  42e27e:	mov    edi,edi
  42e280:	cmp    al,0x0
  42e282:	add    cl,al
  42e284:	stc    
  42e285:	jle    0x42e286
  42e287:	add    BYTE PTR [eax-0x1],dh
  42e28a:	call   esi
  42e28c:	lea    edi,[edi+edi*8+0xce00]
  42e293:	imul   ebp,DWORD PTR [edx-0x5b],0x0
  42e297:	add    ah,bl
  42e299:	add    DWORD PTR [eax],0x48
  42e29c:	pop    edi
  42e29d:	xor    eax,0x5fffff
  42e2a2:	call   FWORD PTR [ecx]
  42e2a4:	sub    al,BYTE PTR [edi+edi*8-0x1]
  42e2a8:	add    BYTE PTR [ebx+0x3c6d7900],al
  42e2ae:	add    BYTE PTR [ebx+0x6fffff71],al
  42e2b4:	mov    eax,ds:0x46fffff3
  42e2b9:	add    BYTE PTR [eax],al
  42e2bb:	clc    
  42e2bc:	jge    0x42e337
  42e2be:	add    BYTE PTR [eax],al
  42e2c0:	and    al,0xff
  42e2c2:	jmp    FWORD PTR [ebx-0x8]
  42e2c5:	add    eax,DWORD PTR [eax]
  42e2c7:	add    BYTE PTR [eax],ch
  42e2c9:	int3   
  42e2ca:	jmp    DWORD PTR [esi+edx*2-0x6c337c17]
  42e2d1:	add    bh,bh
  42e2d3:	mov    dl,0xd4
  42e2d5:	mov    eax,ds:0xffe3ffcc
  42e2da:	call   FWORD PTR [edi]
  42e2dc:	pop    eax
  42e2dd:	ror    BYTE PTR [ecx-0xfff900],0x6f
  42e2e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2e5:	jp     0x42e2e6
  42e2e7:	add    ch,al
  42e2e9:	cmp    edi,0x39
  42e2ec:	cmp    al,ch
  42e2ee:	(bad)  
  42e2ef:	jmp    FWORD PTR [eax-0x746f7c34]
  42e2f5:	ret    0x8300
  42e2f8:	mov    ds:0x3368389,al
  42e2fd:	mov    edx,0xff19ff00
  42e302:	push   ebp
  42e304:	ins    BYTE PTR es:[edi],dx
  42e305:	sbb    eax,0x88ff83
  42e30a:	add    cl,ah
  42e30c:	xor    edx,DWORD PTR ds:0xcc1a0000
  42e312:	int3   
  42e313:	jmp    0xffdf:0xffc52a
  42e31a:	call   FWORD PTR [ecx-0x55]
  42e31d:	lods   eax,DWORD PTR ds:[esi]
  42e31e:	dec    DWORD PTR [ecx-0x11ff3326]
  42e324:	ds cmp eax,0x45ccff
  42e32a:	int3   
  42e32b:	cdq    
  42e32c:	rsqrtps xmm1,XMMWORD PTR [ecx-0xd200]
  42e333:	jge    0x42e348
  42e335:	push   ebx
  42e336:	int3   
  42e337:	add    ch,dl
  42e339:	add    bh,bh
  42e33b:	(bad)  
  42e33c:	fnstcw WORD PTR [esi]
  42e33e:	add    DWORD PTR [eax],0xffffff89
  42e341:	(bad)  
  42e342:	jmp    DWORD PTR [esi-0xf9d0]
  42e348:	jp     0x42e2cd
  42e34a:	int3   
  42e34b:	dec    esi
  42e34c:	cwde   
  42e34d:	push   ecx
  42e34e:	(bad)  
  42e34f:	inc    DWORD PTR [eax+0x0]
  42e352:	push   DWORD PTR [ebx+eax*4+0x40]
  42e356:	add    bh,bh
  42e358:	int    0xff
  42e35a:	mov    DWORD PTR [ebp-0x33ec56],esp
  42e360:	hlt    
  42e361:	inc    DWORD PTR [ebx-0xd98f16]
  42e367:	or     DWORD PTR [ecx],0xffffffff
  42e36a:	add    BYTE PTR [edx+0x6b],bh
  42e36d:	loopne 0x42e36f
  42e36f:	add    BYTE PTR [eax+eax*1],ah
  42e372:	add    BYTE PTR [edx],ch
  42e374:	push   ss
  42e375:	stc    
  42e376:	add    BYTE PTR [ebx+0xb00ffaf],al
  42e37c:	jmp    FWORD PTR [eax+eax*1+0xfff6ff]
  42e383:	repnz and al,0x26
  42e386:	add    DWORD PTR [ebx-0x7300ff3c],0xffffff8f
  42e38d:	xchg   edx,eax
  42e38e:	add    BYTE PTR [eax],al
  42e390:	push   0x28d00ff
  42e395:	fild   WORD PTR [eax]
  42e397:	add    BYTE PTR ds:0xdb0fff83,cl
  42e39d:	aam    0x0
  42e39f:	int3   
  42e3a0:	clc    
  42e3a1:	(bad)  
  42e3a2:	dec    DWORD PTR [ebx-0x4b]
  42e3a5:	inc    BYTE PTR [eax]
  42e3a7:	add    cl,dl
  42e3a9:	add    BYTE PTR [ebx-0x7ce00dcc],al
  42e3af:	mov    esi,eax
  42e3b1:	dec    esp
  42e3b3:	arpl   dx,si
  42e3b5:	xchg   ebx,eax
  42e3b6:	(bad)  
  42e3b7:	inc    esi
  42e3b9:	or     DWORD PTR [ecx-0x7697787b],0xffffffcc
  42e3c0:	pop    ebx
  42e3c1:	(bad)  
  42e3c2:	push   esi
  42e3c4:	mov    ecx,0x1883008e
  42e3c9:	add    ah,cl
  42e3cb:	mov    fs,WORD PTR [ebx+0x7b]
  42e3ce:	inc    DWORD PTR [eax]
  42e3d0:	sar    bh,cl
  42e3d2:	inc    DWORD PTR [ebx]
  42e3d4:	jo     0x42e3ae
  42e3d6:	add    bh,bh
  42e3d8:	repz int3 
  42e3da:	inc    DWORD PTR [edx+0x896f85]
  42e3e0:	push   ebx
  42e3e1:	(bad)  
  42e3e2:	dec    DWORD PTR [ebp-0x72]
  42e3e5:	cld    
  42e3e6:	add    BYTE PTR [ebx-0x77c0003],al
  42e3ec:	push   esp
  42e3ed:	mov    ds:0xff5d8900,al
  42e3f2:	dec    DWORD PTR [eax+0x1d]
  42e3f5:	(bad)  
  42e3f6:	(bad)  
  42e3f7:	jmp    DWORD PTR [edi+edi*8-0x1]
  42e3fb:	lods   eax,DWORD PTR ds:[esi]
  42e3fc:	imul   edx,edx,0xff76ffff
  42e402:	int3   
  42e403:	jne    0x42e3b8
  42e405:	lock (bad) 
  42e407:	(bad)  
  42e408:	mov    esp,0xe35700ff
  42e40d:	jb     0x42e40f
  42e40f:	jmp    FWORD PTR [edx-0x1]
  42e412:	jmp    eax
  42e414:	push   esi
  42e415:	retf   
  42e416:	(bad)  
  42e417:	call   DWORD PTR [eax-0x1]
  42e41a:	add    BYTE PTR [eax-0x33ff3473],ch
  42e420:	push   ds
  42e421:	inc    DWORD PTR [ebx-0x4e9dfe]
  42e427:	dec    DWORD PTR [edi+0x70b3ccff]
  42e42d:	jb     0x42e42e
  42e42f:	(bad)  
  42e430:	fiadd  WORD PTR [eax]
  42e432:	add    DWORD PTR [esi-0x58],0xffffffd1
  42e436:	add    bh,bh
  42e438:	rol    BYTE PTR [eax],0xff
  42e43b:	dec    ebx
  42e43c:	sar    BYTE PTR [esi+0x0],1
  42e43f:	dec    ebp
  42e441:	cmp    edi,0xffffffdb
  42e444:	packsswb mm7,mm7
  42e447:	inc    DWORD PTR [ecx]
  42e449:	add    bh,bh
  42e44b:	sub    BYTE PTR [esi],cl
  42e44d:	dec    ecx
  42e44e:	(bad)  
  42e44f:	call   DWORD PTR [edi]
  42e451:	add    bh,bh
  42e453:	dec    esp
  42e454:	popa   
  42e455:	sbb    cl,BYTE PTR [ecx-0x7c5177]
  42e45b:	mov    DWORD PTR [edx],ebp
  42e45d:	sar    bh,cl
  42e45f:	(bad)  
  42e460:	jle    0x42e462
  42e462:	jmp    FWORD PTR [esp+edi*8+0x43ffff29]
  42e469:	cmp    edi,0xffffffe4
  42e46c:	mov    cl,0x72
  42e46e:	cmp    edi,0x22
  42e471:	add    DWORD PTR [eax],0xa
  42e474:	aas    
  42e475:	mov    ch,0x89
  42e477:	add    BYTE PTR [ebx],bh
  42e479:	inc    DWORD PTR [ebx-0x2113a2]
  42e47f:	call   DWORD PTR [ecx]
  42e481:	int3   
  42e482:	add    cl,cl
  42e484:	dec    edx
  42e485:	addr16 (bad) 
  42e487:	(bad)  
  42e488:	aas    
  42e489:	(bad)  
  42e48a:	dec    DWORD PTR [esi]
  42e48c:	xor    BYTE PTR [edi-0x5e0000],dh
  42e492:	int3   
  42e493:	dec    esi
  42e494:	xor    ecx,esi
  42e496:	inc    DWORD PTR [ebx+0x7b008351]
  42e49c:	adc    BYTE PTR [edx-0x1],bl
  42e49f:	push   DWORD PTR [eax-0x1]
  42e4a2:	jmp    DWORD PTR [esi+edx*4-0x34]
  42e4a6:	(bad)  
  42e4a7:	call   DWORD PTR [eax]
  42e4a9:	mov    DWORD PTR [eax],eax
  42e4ab:	sub    BYTE PTR [ecx],dl
  42e4ad:	and    eax,0xff19ff00
  42e4b2:	(bad)  
  42e4b3:	sti    
  42e4b4:	ja     0x42e43d
  42e4b6:	add    bh,bh
  42e4b8:	test   eax,0x8c4d00ff
  42e4bd:	push   edx
  42e4be:	(bad)  
  42e4bf:	(bad)  
  42e4c0:	inc    DWORD PTR [ebx-0x3acb8100]
  42e4c6:	dec    esp
  42e4c8:	dec    ecx
  42e4c9:	dec    DWORD PTR [ecx-0x33e6d02d]
  42e4cf:	call   FWORD PTR [eax-0x2f69ff01]
  42e4d5:	sbb    al,BYTE PTR [eax]
  42e4d7:	dec    DWORD PTR [ebp-0x1]
  42e4da:	add    BYTE PTR [ebx-0x76ff494f],al
  42e4e0:	add    al,0xcc
  42e4e2:	push   DWORD PTR [edx-0x3300619f]
  42e4e8:	out    dx,al
  42e4e9:	add    bh,bh
  42e4eb:	mov    ecx,0xfffa76
  42e4f0:	pop    ebp
  42e4f1:	dec    esp
  42e4f3:	xchg   esi,eax
  42e4f4:	(bad)  
  42e4f5:	cs add bh,bh
  42e4f8:	xor    eax,DWORD PTR [ebx+0x76afa8ff]
  42e4fe:	mov    edi,edi
  42e500:	xor    edi,edi
  42e502:	add    BYTE PTR [ebx+0x8346ed],dl
  42e508:	mov    cl,ah
  42e50a:	sub    eax,0x29
  42e50d:	inc    edx
  42e50e:	inc    DWORD PTR [ebx-0x2e767c27]
  42e514:	adc    dh,cl
  42e516:	(bad)  
  42e517:	push   DWORD PTR [edi+0x0]
  42e51a:	add    BYTE PTR [ecx+0x1a],bh
  42e51d:	aaa    
  42e51e:	int3   
  42e51f:	add    BYTE PTR [esi+0x0],cl
  42e522:	call   FWORD PTR [esi-0x338a0a]
  42e528:	jg     0x42e529
  42e52a:	add    BYTE PTR [edx],cl
  42e52c:	mov    WORD PTR [edx-0x34],ds
  42e52f:	add    BYTE PTR [edx],dl
  42e531:	cmp    edi,0xffffff99
  42e534:	pop    eax
  42e535:	test   eax,0xff070000
  42e53a:	push   ecx
  42e53c:	dec    esp
  42e53d:	stos   DWORD PTR es:[edi],eax
  42e53e:	int3   
  42e53f:	mov    ebp,edi
  42e541:	cmp    edi,0xffffffb9
  42e544:	mov    al,0xc4
  42e546:	add    BYTE PTR [eax],al
  42e548:	xchg   ebx,eax
  42e549:	or     esp,0xffffffe4
  42e54c:	aad    0x5f
  42e54e:	(bad)  
  42e54f:	dec    DWORD PTR [esi+0x66b7ffff]
  42e555:	push   esi
  42e556:	add    BYTE PTR [ebx+0x47ffffd6],al
  42e55c:	je     0x42e515
  42e55e:	add    BYTE PTR [eax],al
  42e560:	push   0xffffffcc
  42e562:	add    esi,0x22
  42e565:	repnz add ah,cl
  42e568:	mov    al,BYTE PTR [eax]
  42e56a:	call   DWORD PTR [edi-0xff5d96]
  42e570:	inc    esp
  42e571:	(bad)  
  42e572:	call   DWORD PTR [eax+eiz*4+0xcccff16]
  42e579:	add    bh,bh
  42e57b:	sbb    eax,0x9cd1
  42e580:	lock int3 
  42e582:	inc    DWORD PTR [ecx]
  42e584:	cmp    al,BYTE PTR [ecx-0x1]
  42e587:	add    cl,dh
  42e589:	(bad)  
  42e58a:	(bad)  
  42e58b:	stc    
  42e58c:	adc    BYTE PTR [ebp-0x77],dh
  42e58f:	add    BYTE PTR [edi+edi*8],al
  42e592:	dec    edx
  42e594:	addr16 push edx
  42e596:	add    DWORD PTR [eax],0xffffff94
  42e599:	inc    DWORD PTR [eax]
  42e59b:	xchg   esi,eax
  42e59c:	(bad)  
  42e59d:	pop    esi
  42e59e:	cmp    edi,0x62
  42e5a1:	add    bh,bh
  42e5a3:	in     eax,0x72
  42e5a5:	or     eax,0xff1f0083
  42e5aa:	push   DWORD PTR [edi-0x337c369d]
  42e5b0:	xor    al,0x83
  42e5b2:	(bad)  
  42e5b3:	fimul  WORD PTR [ebx+0x3e]
  42e5b6:	inc    DWORD PTR [eax]
  42e5b8:	jno    0x42e5ba
  42e5ba:	add    BYTE PTR [edx+0x1],ch
  42e5bd:	push   esp
  42e5be:	add    ah,cl
  42e5c0:	inc    eax
  42e5c1:	(bad)  
  42e5c2:	call   FWORD PTR [esi-0x64]
  42e5c5:	ret    0xff83
  42e5c8:	into   
  42e5c9:	add    bh,bh
  42e5cb:	mov    ebx,0x83d563
  42e5d0:	jns    0x42e555
  42e5d2:	mov    DWORD PTR [ebx+eax*4-0x58ff3339],esp
  42e5d9:	cmp    edi,0xffffff82
  42e5dc:	add    bl,BYTE PTR [edi+edi*8-0x77]
  42e5e0:	stos   BYTE PTR es:[edi],al
  42e5e1:	(bad)  
  42e5e2:	jmp    FWORD PTR [esi]
  42e5e4:	mov    esi,0x7ffff0d
  42e5e9:	inc    DWORD PTR [eax]
  42e5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5ec:	popf   
  42e5ed:	mov    DWORD PTR [eax],eax
  42e5ef:	mov    eax,esi
  42e5f1:	add    bh,bh
  42e5f3:	cmp    al,0x56
  42e5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5f6:	cmp    edi,0xfffffff0
  42e5f9:	add    DWORD PTR [ebx-0xc18c8e],0xffffffff
  42e600:	lds    eax,FWORD PTR [eax]
  42e602:	jmp    FWORD PTR [ebp+eax*4+0x48ff8324]
  42e609:	mov    edi,edi
  42e60b:	pop    ebp
  42e60c:	out    dx,eax
  42e60d:	inc    BYTE PTR [ebx-0x337ccd01]
  42e613:	or     BYTE PTR [ecx+0x1e],al
  42e616:	(bad)  
  42e617:	inc    DWORD PTR [ebp-0x455a0100]
  42e61d:	sbb    eax,0xd9ff00
  42e622:	add    dh,cl
  42e624:	or     BYTE PTR [edi-0x34],ah
  42e627:	(bad)  
  42e628:	in     al,dx
  42e629:	(bad)  
  42e62a:	dec    DWORD PTR [esi]
  42e62c:	inc    eax
  42e62d:	cwde   
  42e62e:	inc    DWORD PTR [eax]
  42e630:	rol    DWORD PTR [eax],0x0
  42e633:	sub    DWORD PTR [edx+0xc],esi
  42e636:	inc    DWORD PTR [eax]
  42e638:	and    al,BYTE PTR [eax]
  42e63a:	dec    edi
  42e63c:	out    0x5c,al
  42e63e:	mov    edi,edi
  42e640:	push   0xffffff83
  42e642:	push   esi
  42e644:	loop   0x42e62b
  42e646:	add    BYTE PTR [eax],al
  42e648:	sbb    edi,edi
  42e64a:	call   ebx
  42e64c:	fiadd  DWORD PTR [edi+edi*8+0x0]
  42e650:	jmp    0x8c:0xd92bffff
  42e657:	jmp    FWORD PTR [edx-0x1]
  42e65a:	push   DWORD PTR [ebp+0xff9736]
  42e660:	mov    ds:0x3ea583ff,eax
  42e665:	inc    esi
  42e666:	add    BYTE PTR [ecx-0x4e00ff0c],cl
  42e66c:	lea    ecx,[edi+edi*8]
  42e66f:	push   DWORD PTR [ebx+0x64820083]
  42e675:	push   es
  42e676:	inc    DWORD PTR [eax]
  42e678:	loop   0x42e679
  42e67a:	dec    DWORD PTR [eax]
  42e67c:	ins    BYTE PTR es:[edi],dx
  42e67d:	loope  0x42e67e
  42e67f:	inc    esi
  42e681:	inc    DWORD PTR [ebx-0x7cb65532]
  42e687:	add    BYTE PTR [eax+eax*1],bh
  42e68a:	mov    DWORD PTR [ebp+esi*1+0x74],ebp
  42e68e:	add    BYTE PTR [ebx-0x437c76d4],al
  42e694:	xor    al,0x3c
  42e696:	add    DWORD PTR [ebx+0x6e8300fd],0xc
  42e69d:	(bad)  
  42e69f:	add    BYTE PTR [edi],ah
  42e6a1:	int3   
  42e6a2:	add    BYTE PTR [ecx],dl
  42e6a4:	dec    edi
  42e6a5:	add    eax,0xa00000
  42e6aa:	jmp    DWORD PTR [ebp-0xff7780]
  42e6b0:	cwde   
  42e6b1:	add    BYTE PTR [eax],al
  42e6b3:	test   edi,esp
  42e6b5:	in     eax,dx
  42e6b6:	add    DWORD PTR [ebx+0x2789833f],0xffffff87
  42e6bd:	test   eax,0xff4dff00
  42e6c2:	add    cl,bl
  42e6c4:	das    
  42e6c5:	mov    ebx,0xff3200ff
  42e6ca:	mov    esp,eax
  42e6cc:	popa   
  42e6cd:	pop    esi
  42e6ce:	inc    DWORD PTR [ebx-0x43ff00ae]
  42e6d4:	sub    ecx,DWORD PTR [esi]
  42e6d6:	(bad)  
  42e6d7:	(bad)  
  42e6d8:	stc    
  42e6d9:	add    BYTE PTR [ebx-0xcb952],al
  42e6df:	add    BYTE PTR [eax],ah
  42e6e1:	add    bh,bh
  42e6e3:	fist   DWORD PTR [esi+0x45]
  42e6e6:	add    BYTE PTR [eax],al
  42e6e8:	es int3 
  42e6ea:	add    BYTE PTR [esi],bl
  42e6ec:	aam    0x95
  42e6ee:	int3   
  42e6ef:	dec    DWORD PTR [edx+0x6559ff83]
  42e6f5:	(bad)  
  42e6f8:	imul   ecx,DWORD PTR [ecx-0x33c87d77],0xffc6ff00
  42e702:	inc    DWORD PTR [edi+0x73]
  42e705:	scas   eax,DWORD PTR es:[edi]
  42e706:	inc    DWORD PTR [ebx-0x35000077]
  42e70c:	aaa    
  42e70d:	(bad)  
  42e70e:	inc    DWORD PTR [eax]
  42e710:	cmp    bh,bh
  42e712:	xor    DWORD PTR [ecx],0xffffffd9
  42e715:	jmp    0xeff:0x83fe0000
  42e71c:	in     eax,dx
  42e71d:	pop    ecx
  42e71e:	add    DWORD PTR [ebx-0x20000f8],0x73
  42e725:	int3   
  42e726:	dec    esp
  42e728:	jnp    0x42e72a
  42e72a:	sbb    ebx,0x51
  42e72d:	dec    eax
  42e72e:	inc    DWORD PTR [ebx+0x5fffff16]
  42e734:	push   ecx
  42e735:	out    0x89,al
  42e737:	jmp    FWORD PTR [ebx]
  42e739:	add    BYTE PTR [eax],al
  42e73b:	or     ah,BYTE PTR [edi-0x3d]
  42e73e:	add    BYTE PTR [eax],al
  42e740:	out    dx,al
  42e741:	int3   
  42e742:	mov    DWORD PTR [eax],ecx
  42e744:	aas    
  42e745:	stos   DWORD PTR es:[edi],eax
  42e746:	inc    DWORD PTR [eax]
  42e748:	and    eax,0xd24f0089
  42e74d:	loop   0x42e74f
  42e74f:	add    BYTE PTR [ecx],al
  42e751:	mov    DWORD PTR [ebx+0x1a1217],eax
  42e757:	add    BYTE PTR [edi],al
  42e759:	mov    DWORD PTR [eax],eax
  42e75b:	sbb    DWORD PTR [edx],ecx
  42e75d:	xchg   ecx,eax
  42e75e:	cmp    edi,0xfffffff1
  42e761:	add    BYTE PTR [eax],al
  42e763:	adc    BYTE PTR [ecx],0x82
  42e766:	inc    DWORD PTR [eax]
  42e768:	(bad)  
  42e769:	dec    DWORD PTR [ecx-0x7c6d89e6]
  42e76f:	cmp    DWORD PTR [edx],0xffffff83
  42e772:	inc    DWORD PTR [esi-0x34]
  42e775:	test   edi,edi
  42e777:	inc    DWORD PTR [edx]
  42e779:	add    BYTE PTR [eax],al
  42e77b:	call   0xffc68de3
  42e780:	addr16 int3 
  42e782:	cmp    DWORD PTR [ebx+ebx*4],0xffffffb8
  42e786:	add    BYTE PTR [eax],al
  42e788:	mov    bl,0x0
  42e78a:	jmp    FWORD PTR [eax-0x74]
  42e78d:	mov    ds:0xff2c83ff,al
  42e792:	add    BYTE PTR [ecx-0xdfcf],bl
  42e798:	xchg   ebx,eax
  42e799:	int3   
  42e79a:	mov    DWORD PTR [edx+eax*1],ebp
  42e79d:	dec    ebp
  42e79e:	(bad)  
  42e79f:	dec    DWORD PTR [edi-0x34]
  42e7a2:	add    BYTE PTR [edi-0x44],bl
  42e7a5:	enter  0x83ff,0x71
  42e7a9:	add    bh,bh
  42e7ab:	cmp    edi,DWORD PTR ds:0x52fffff0
  42e7b1:	cmp    edi,0xffffff90
  42e7b4:	jl     0x42e7ee
  42e7b6:	(bad)  
  42e7b7:	(bad)  
  42e7b8:	dec    BYTE PTR [ecx-0x5f3e3d01]
  42e7be:	inc    DWORD PTR [ebx-0x61ffffe7]
  42e7c4:	gs (bad) 
  42e7c8:	das    
  42e7c9:	int3   
  42e7ca:	push   ebp
  42e7cc:	les    ebp,FWORD PTR [eax+eax*1]
  42e7cf:	add    bh,ah
  42e7d1:	(bad)  
  42e7d2:	jmp    FWORD PTR [esp+0x7100839e]
  42e7d9:	int3   
  42e7da:	call   FWORD PTR [eax-0xafb1]
  42e7e0:	mov    al,0x83
  42e7e2:	call   DWORD PTR [eax-0xff52c9]
  42e7e8:	jl     0x42e7ea
  42e7ea:	add    BYTE PTR [ebp+0x35],dh
  42e7ed:	data16 (bad) 
  42e7ef:	jmp    FWORD PTR [edx-0x4617d00]
  42e7f5:	push   cs
  42e7f6:	int3   
  42e7f7:	push   ecx
  42e7f9:	add    bh,bh
  42e7fb:	out    dx,al
  42e7fc:	stos   BYTE PTR es:[edi],al
  42e7fd:	cmp    edi,0xffffffff
  42e800:	mov    ds:0xd13f00ff,eax
  42e805:	adc    eax,0xffc40089
  42e80a:	sbb    DWORD PTR [esp+eax*4+0x27890001],0xffffff83
  42e812:	push   ecx
  42e814:	pop    eax
  42e815:	cli    
  42e816:	inc    DWORD PTR [ebx-0x4100ff23]
  42e81c:	les    esp,FWORD PTR [edx-0x8f0001]
  42e822:	jmp    FWORD PTR [esi]
  42e824:	js     0x42e7f3
  42e826:	add    BYTE PTR [eax],al
  42e828:	inc    ecx
  42e829:	add    bh,bh
  42e82b:	ss inc ecx
  42e82d:	mov    ebx,0xff0400ff
  42e832:	add    bl,bh
  42e834:	sub    edi,DWORD PTR [edi+edi*8]
  42e837:	int3   
  42e838:	dec    edi
  42e839:	add    ah,cl
  42e83b:	(bad)  
  42e83c:	fistp  QWORD PTR [ecx+0x0]
  42e83f:	add    BYTE PTR [esi-0x297d0077],dl
  42e845:	sub    eax,0xffdc0000
  42e84a:	(bad)  
  42e84b:	ds mov ah,0xb1
  42e84e:	int3   
  42e84f:	push   DWORD PTR [ebp+0x579f00cc]
  42e855:	cmc    
  42e856:	add    DWORD PTR [eax],0x44
  42e859:	add    bh,bh
  42e85b:	mov    edx,eax
  42e85d:	inc    edx
  42e85e:	cmp    edi,0xffffff8a
  42e861:	mov    edi,edi
  42e863:	loope  0x42e825
  42e865:	xor    eax,0x4cff00
  42e86a:	mov    DWORD PTR [edx],esp
  42e86c:	inc    edi
  42e86d:	pushf  
  42e86e:	mov    DWORD PTR [ebx+0x1100ff83],eax
  42e874:	xchg   edx,edi
  42e876:	inc    DWORD PTR [eax]
  42e878:	daa    
  42e879:	(bad)  
  42e87a:	call   FWORD PTR [ebx]
  42e87c:	scas   eax,DWORD PTR es:[edi]
  42e87d:	test   al,0x89
  42e87f:	add    BYTE PTR [eax],dh
  42e881:	add    bh,bh
  42e883:	mov    esp,0xff000d2b
  42e888:	adc    cl,ah
  42e88a:	add    BYTE PTR [edi-0x3333874b],ah
  42e890:	sbb    edi,edi
  42e892:	int3   
  42e893:	pop    esi
  42e894:	pushf  
  42e895:	mov    ds:0xffa8ff00,eax
  42e89a:	call   edx
  42e89c:	xchg   esp,eax
  42e89d:	jns    0x42e89f
  42e89f:	call   FWORD PTR [eax+eax*1-0x7d]
  42e8a3:	scas   al,BYTE PTR es:[edi]
  42e8a4:	and    esp,edi
  42e8a6:	inc    DWORD PTR [eax]
  42e8a8:	adc    bh,bh
  42e8aa:	add    BYTE PTR [edi-0x44],ch
  42e8ad:	sbb    BYTE PTR [ebx-0x76000d01],al
  42e8b3:	push   cs
  42e8b4:	fiadd  WORD PTR [ecx-0x1]
  42e8b7:	add    BYTE PTR [eax+eax*1],bh
  42e8ba:	adc    ecx,0xffffffcf
  42e8bd:	ins    BYTE PTR es:[edi],dx
  42e8be:	(bad)  
  42e8bf:	dec    DWORD PTR [ecx-0x1]
  42e8c2:	add    dh,dl
  42e8c4:	enter  0xff2c,0xff
  42e8c8:	test   BYTE PTR [ebx-0x61cbf700],0xff
  42e8cf:	mov    edx,esp
  42e8d1:	int3   
  42e8d2:	mov    DWORD PTR [esi-0x7600d259],edx
  42e8d8:	mov    bl,0xff
  42e8da:	add    BYTE PTR [eax-0x79],ch
  42e8dd:	loop   0x42e8de
  42e8df:	add    BYTE PTR [edx-0x7d],cl
  42e8e2:	add    BYTE PTR [edi+ebp*2],bl
  42e8e5:	sar    bh,cl
  42e8e7:	dec    DWORD PTR [ebp+0x0]
  42e8ea:	dec    ebp
  42e8ec:	and    al,0xa
  42e8ee:	int3   
  42e8ef:	add    bh,bh
  42e8f1:	(bad)  
  42e8f2:	jmp    FWORD PTR [eax]
  42e8f4:	shr    DWORD PTR [ebx-0x34],0x83
  42e8f8:	push   ss
  42e8f9:	inc    DWORD PTR [eax]
  42e8fb:	addr16 xchg dx,ax
  42e8fe:	inc    DWORD PTR [ebx+0x6f00ffb1]
  42e904:	add    edx,ebx
  42e906:	inc    DWORD PTR [ebx+0x46838363]
  42e90c:	ins    BYTE PTR es:[edi],dx
  42e90d:	scas   eax,DWORD PTR es:[edi]
  42e90e:	dec    DWORD PTR [ecx-0x1ff7cd6]
  42e914:	pop    es
  42e915:	sti    
  42e916:	add    BYTE PTR [eax],al
  42e918:	fild   WORD PTR [ebx+0x2d5942ff]
  42e91e:	add    DWORD PTR [eax],0xffffffaf
  42e921:	cmp    edi,0xffffff86
  42e924:	xor    al,0xd5
  42e926:	dec    esp
  42e928:	mov    DWORD PTR [eax],0x94ab3c83
  42e92e:	(bad)  
  42e92f:	call   DWORD PTR [eax+eax*1+0x0]
  42e933:	jp     0x42e952
  42e935:	(bad)  
  42e938:	sar    edi,cl
  42e93a:	(bad)  
  42e93b:	std    
  42e93c:	rcl    BYTE PTR [eax],cl
  42e93e:	add    bh,bh
  42e940:	sbb    al,0x0
  42e942:	dec    DWORD PTR [edi-0xe9a2]
  42e948:	mov    bh,bh
  42e94a:	inc    DWORD PTR [ecx-0xa637]
  42e950:	cwde   
  42e951:	int3   
  42e952:	mov    DWORD PTR [edx+0x11],edi
  42e955:	mov    ?,edi
  42e957:	add    bl,dl
  42e959:	add    BYTE PTR [eax],al
  42e95b:	xlat   BYTE PTR ds:[ebx]
  42e95c:	pop    ecx
  42e95d:	pop    ss
  42e95e:	inc    DWORD PTR [eax]
  42e960:	jg     0x42e961
  42e962:	push   DWORD PTR [esi+0x722f]
  42e968:	daa    
  42e969:	int3   
  42e96a:	int3   
  42e96b:	dec    ebp
  42e96c:	(bad)  
  42e96d:	dec    edx
  42e96e:	int3   
  42e96f:	call   DWORD PTR [edi+edi*8-0x2c391501]
  42e976:	add    BYTE PTR [ebx+0x71cc001a],al
  42e97c:	mov    bl,0x3b
  42e97e:	(bad)  
  42e97f:	call   esi
  42e981:	add    bh,bh
  42e983:	xchg   ebp,eax
  42e984:	(bad)  
  42e985:	xchg   edi,eax
  42e986:	inc    DWORD PTR [eax]
  42e988:	or     DWORD PTR [ecx+0x642974ff],ecx
  42e98e:	add    bh,bh
  42e990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e991:	add    bh,bh
  42e993:	sbb    BYTE PTR [esi-0x12],bh
  42e996:	(bad)  
  42e997:	call   DWORD PTR [esi+0x0]
  42e99a:	inc    DWORD PTR [esi+0x40]
  42e99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e99e:	add    DWORD PTR [eax],0xffffffc0
  42e9a1:	(bad)  
  42e9a2:	jmp    DWORD PTR [ecx]
  42e9a4:	sbb    eax,0xb500ffd8
  42e9a9:	inc    DWORD PTR [eax]
  42e9ab:	pop    esi
  42e9ac:	into   
  42e9ad:	mov    al,ds:0xcc3e89ff
  42e9b2:	(bad)  
  42e9b3:	jmp    0x42e9cb
  42e9b5:	ins    DWORD PTR es:[edi],dx
  42e9b6:	dec    esp
  42e9b8:	push   eax
  42e9b9:	add    BYTE PTR [ecx-0x32c4b],cl
  42e9bf:	add    BYTE PTR [eax+0x0],dl
  42e9c2:	push   DWORD PTR [eax-0x41]
  42e9c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9c6:	add    BYTE PTR [eax],al
  42e9c8:	test   eax,0xa13dcc00
  42e9cd:	xchg   ebx,eax
  42e9ce:	(bad)  
  42e9cf:	push   esi
  42e9d1:	add    BYTE PTR [eax],al
  42e9d3:	or     BYTE PTR [edx-0x2c0000d1],cl
  42e9d9:	add    BYTE PTR [eax],al
  42e9db:	xor    ah,BYTE PTR [esi]
  42e9dd:	xor    bh,bh
  42e9df:	call   FWORD PTR [ebx]
  42e9e1:	add    bh,bh
  42e9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9e4:	push   ebp
  42e9e5:	and    al,0x0
  42e9e7:	add    dl,dl
  42e9e9:	dec    esp
  42e9eb:	mov    dh,0xfa
  42e9ed:	mov    bh,bh
  42e9ef:	push   DWORD PTR [eax+0x0]
  42e9f2:	dec    DWORD PTR [edx-0x35]
  42e9f5:	mov    ah,0x0
  42e9f7:	add    ah,ch
  42e9f9:	(bad)  
  42e9fa:	push   DWORD PTR [edx]
  42e9fc:	xchg   esp,eax
  42e9fd:	dec    ebp
  42e9fe:	add    bh,bh
  42ea00:	push   eax
  42ea01:	or     DWORD PTR [ecx-0x99eaa5],0x0
  42ea08:	inc    DWORD PTR fs:[ebx+0x89ef36]
  42ea0f:	add    ah,cl
  42ea11:	mov    edi,edi
  42ea13:	in     eax,dx
  42ea14:	popa   
  42ea15:	and    BYTE PTR [ecx+0xff1dff],cl
  42ea1b:	mov    bl,BYTE PTR [ebp*2-0xf80100]
  42ea22:	add    BYTE PTR [ebx],cl
  42ea24:	fadd   QWORD PTR [esi+0xd900ff]
  42ea2a:	(bad)  
  42ea2b:	jl     0x42e9d2
  42ea2d:	cmp    eax,0xcc56ffff
  42ea32:	sbb    ebp,0xffffff93
  42ea35:	hlt    
  42ea36:	add    DWORD PTR [ebx+0x4f83ff27],0xffffff89
  42ea3d:	mov    al,BYTE PTR [eax]
  42ea3f:	inc    DWORD PTR [esp+ecx*8-0x7d]
  42ea43:	dec    si
  42ea45:	dec    edx
  42ea46:	(bad)  
  42ea47:	inc    DWORD PTR [esi]
  42ea49:	(bad)  
  42ea4a:	(bad)  
  42ea4b:	fsub   QWORD PTR [edi+0x4cccff8d]
  42ea51:	cmp    edi,0x33
  42ea54:	dec    esp
  42ea55:	lods   eax,DWORD PTR ds:[esi]
  42ea56:	or     esp,0xffffffff
  42ea59:	inc    DWORD PTR [eax]
  42ea5b:	bound  ebp,QWORD PTR [eax-0x1fff7647]
  42ea61:	add    BYTE PTR [ecx+0x48207e],cl
  42ea67:	push   DWORD PTR [edi+edi*8]
  42ea6a:	int3   
  42ea6b:	pop    ecx
  42ea6c:	pop    eax
  42ea6d:	jmp    0xf6ff:0xff24ff00
  42ea74:	(bad)  
  42ea75:	sbb    BYTE PTR [eax],al
  42ea77:	int3   
  42ea78:	stc    
  42ea79:	mov    edi,edi
  42ea7b:	xlat   BYTE PTR ds:[ebx]
  42ea7c:	sub    ecx,DWORD PTR [ebx]
  42ea7e:	add    bh,bh
  42ea80:	rol    DWORD PTR [ebx+0xd1a0d00],1
  42ea86:	int3   
  42ea87:	add    BYTE PTR [esi-0x7d],cl
  42ea8a:	inc    DWORD PTR [esp+edx*8]
  42ea8d:	sbb    edi,edi
  42ea8f:	int3   
  42ea90:	pop    eax
  42ea91:	add    bh,bh
  42ea93:	add    al,0xa8
  42ea95:	loope  0x42ea97
  42ea97:	call   esi
  42ea99:	inc    DWORD PTR [ebx+0xcc161d]
  42ea9f:	add    BYTE PTR [ecx+0xff400ff],dl
  42eaa5:	cmp    ah,cl
  42eaa7:	add    bh,bh
  42eaa9:	(bad)  
  42eaaa:	push   DWORD PTR [edi+eiz*8]
  42eaad:	adc    bh,bh
  42eaaf:	add    BYTE PTR [esi-0x36270001],al
  42eab5:	cmp    edi,edi
  42eab7:	inc    DWORD PTR [edi+edi*8]
  42eaba:	push   ebx
  42eabc:	and    ch,BYTE PTR [edi]
  42eabe:	(bad)  
  42eabf:	inc    edi
  42eac1:	cmp    edi,0x6f
  42eac4:	ins    BYTE PTR es:[di],dx
  42eac6:	(bad)  
  42eac7:	(bad)  
  42eac8:	mov    ecx,0x70698300
  42eacd:	(bad)  
  42eace:	(bad)  
  42eacf:	dec    esp
  42ead1:	add    BYTE PTR [eax],al
  42ead3:	push   es
  42ead4:	aaa    
  42ead5:	out    0x83,al
  42ead7:	inc    DWORD PTR [eax-0x1]
  42eada:	dec    DWORD PTR [eax+0x13]
  42eadd:	sub    edi,edi
  42eadf:	call   FWORD PTR [edi-0x27a40001]
  42eae5:	add    DWORD PTR [eax],0xe83
  42eaeb:	mov    ah,BYTE PTR [eax-0x65]
  42eaee:	cmp    edi,0x17
  42eaf1:	(bad)  
  42eaf2:	jmp    DWORD PTR [edi-0x35da]
  42eaf8:	retf   0x8900
  42eafb:	cmp    BYTE PTR [edi-0x500009e],0x0
  42eb02:	call   DWORD PTR [esi+0x95ea]
  42eb08:	arpl   WORD PTR [eax],ax
  42eb0a:	add    BYTE PTR [ebx+0x1e],ch
  42eb0d:	into   
  42eb0e:	add    BYTE PTR [eax],al
  42eb10:	outs   dx,BYTE PTR ds:[esi]
  42eb11:	add    bh,bh
  42eb13:	int3   
  42eb14:	xchg   DWORD PTR [eax-0x9e0001],edx
  42eb1a:	mov    DWORD PTR [ebx-0x7277],edx
  42eb20:	xchg   ebx,eax
  42eb21:	add    bh,bh
  42eb23:	mov    DWORD PTR [edx],ebx
  42eb25:	cmp    al,BYTE PTR [ebx-0xd001]
  42eb2b:	loop   0x42eb6d
  42eb2d:	mov    al,0xff
  42eb2f:	add    BYTE PTR [ebp-0x7d],bh
  42eb32:	jmp    FWORD PTR [ecx]
  42eb34:	mov    BYTE PTR [esp+ecx*8],bl
  42eb37:	int3   
  42eb38:	pop    ecx
  42eb39:	add    bh,bh
  42eb3b:	(bad)  
  42eb3c:	jmp    0x42eb96
  42eb3e:	mov    DWORD PTR [ecx-0x1d7c0076],ecx
  42eb44:	mov    dh,BYTE PTR [ecx-0x1]
  42eb47:	add    cl,dh
  42eb49:	inc    DWORD PTR [ebx-0x7c69774b]
  42eb4f:	call   DWORD PTR [ecx+0x34d08383]
  42eb55:	add    DWORD PTR [eax],0xff5dff
  42eb5b:	test   al,0x38
  42eb5d:	loop   0x42eb5e
  42eb5f:	add    dh,dh
  42eb61:	add    bh,bh
  42eb63:	sti    
  42eb64:	ja     0x42eb76
  42eb66:	add    bh,bh
  42eb68:	fs int3 
  42eb6a:	(bad)  
  42eb6b:	(bad)  
  42eb6d:	lods   eax,DWORD PTR ds:[esi]
  42eb6e:	dec    esp
  42eb70:	hlt    
  42eb71:	add    bh,bh
  42eb73:	jecxz  0x42eb4a
  42eb75:	out    0xff,al
  42eb77:	dec    DWORD PTR [esi-0x41667601]
  42eb7d:	xchg   esp,eax
  42eb7e:	(bad)  
  42eb7f:	inc    DWORD PTR [edi]
  42eb81:	inc    DWORD PTR [eax]
  42eb83:	xchg   ebp,eax
  42eb84:	mov    BYTE PTR [ebx+eax*4],ch
  42eb87:	sub    edx,0x0
  42eb8a:	jmp    DWORD PTR [ebx]
  42eb8c:	(bad)  
  42eb8d:	int3   
  42eb8e:	add    DWORD PTR [eax],0x73
  42eb91:	dec    esp
  42eb93:	sub    al,0xe9
  42eb95:	out    0x0,al
  42eb97:	(bad)  
  42eb98:	cmp    eax,DWORD PTR [ebx-0x1db96800]
  42eb9e:	inc    DWORD PTR [eax]
  42eba0:	adc    ecx,esp
  42eba2:	sbb    DWORD PTR [edi],0x64
  42eba5:	push   ds
  42eba6:	(bad)  
  42eba7:	call   DWORD PTR [ecx]
  42eba9:	inc    DWORD PTR [eax]
  42ebab:	jg     0x42ec0a
  42ebad:	sbb    eax,0xff0affff
  42ebb2:	cmp    DWORD PTR [eax+edx*4],0xffffff8e
  42ebb6:	inc    DWORD PTR [ebx-0x50ff00f5]
  42ebbc:	stos   DWORD PTR es:[edi],eax
  42ebbd:	add    BYTE PTR [ebx-0xa634],0xf1
  42ebc4:	push   edx
  42ebc5:	fwait
  42ebc6:	add    DWORD PTR [eax],0x33
  42ebc9:	mov    DWORD PTR [eax],eax
  42ebcb:	das    
  42ebcc:	xchg   esp,eax
  42ebcd:	xchg   esp,ecx
  42ebcf:	jmp    edi
  42ebd1:	add    BYTE PTR [eax],al
  42ebd3:	icebp  
  42ebd4:	in     al,dx
  42ebd5:	mov    edx,0xc6ff00
  42ebda:	int3   
  42ebdb:	test   eax,0xff00
  42ebe0:	lock cmp edi,0x50
  42ebe4:	sahf   
  42ebe5:	cmp    eax,0xffaa0000
  42ebea:	dec    DWORD PTR [edx]
  42ebec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ebed:	in     al,0xff
  42ebef:	add    BYTE PTR [esp+ecx*8+0x0],cl
  42ebf3:	sub    eax,0xcd64
  42ebf8:	cmp    edi,edi
  42ebfa:	add    BYTE PTR [eax+0x833c76],al
  42ec00:	sbb    al,0xff
  42ec02:	jmp    FWORD PTR [ebx+0x66]
  42ec05:	ud0    edi,edi
  42ec08:	push   cs
  42ec09:	cmp    edi,0x38
  42ec0c:	xchg   BYTE PTR [eax+0x0],bh
  42ec0f:	cmp    DWORD PTR [edi],0x0
  42ec12:	add    BYTE PTR [eax+ebp*8],bh
  42ec15:	std    
  42ec16:	or     esp,0xffffffd8
  42ec19:	add    BYTE PTR [ebx-0xe1c85a],al
  42ec1f:	dec    DWORD PTR [ebp-0x52a00001]
  42ec25:	add    eax,0xff2200ff
  42ec2a:	call   edx
  42ec2c:	inc    ebp
  42ec2d:	mov    al,0xff
  42ec2f:	call   FWORD PTR [ecx]
  42ec31:	int3   
  42ec32:	add    dl,cl
  42ec34:	cmc    
  42ec35:	ret    
  42ec36:	(bad)  
  42ec37:	(bad)  
  42ec38:	jmp    0x67fc703c
  42ec3d:	outs   dx,BYTE PTR ds:[esi]
  42ec3e:	(bad)  
  42ec3f:	push   edx
  42ec41:	(bad)  
  42ec42:	jmp    DWORD PTR [esi]
  42ec44:	arpl   WORD PTR [esi-0xf30001],ax
  42ec4a:	sbb    DWORD PTR [ecx],0x59
  42ec4d:	in     al,0x0
  42ec4f:	add    BYTE PTR [ebx],ah
  42ec51:	(bad)  
  42ec52:	(bad)  
  42ec53:	mov    ebx,0xff702b
  42ec58:	jnp    0x42ec5a
  42ec5a:	add    BYTE PTR [ecx+0x3],ah
  42ec5d:	js     0x42ec5f
  42ec5f:	push   DWORD PTR [edi-0x4e237700]
  42ec65:	in     eax,dx
  42ec66:	add    BYTE PTR [ecx-0x490000fe],cl
  42ec6c:	retf   
  42ec6d:	xor    edi,edi
  42ec6f:	add    BYTE PTR [esi+0x5f7aff00],dh
  42ec75:	retf   0xffff
  42ec78:	outs   dx,DWORD PTR ds:[esi]
  42ec79:	or     DWORD PTR [ecx+0x92d068],0x0
  42ec80:	call   0x83be:0x6c36ffff
  42ec87:	call   ecx
  42ec89:	dec    esp
  42ec8b:	xchg   esp,eax
  42ec8c:	not    DWORD PTR [edi-0x76d20100]
  42ec92:	(bad)  
  42ec93:	jmp    0xff24:0xac00
  42ec9a:	push   DWORD PTR [eax+0x898dfb]
  42eca0:	inc    edx
  42eca1:	(bad)  
  42eca2:	dec    DWORD PTR [edx-0x72ed]
  42eca8:	mov    eax,0x99948300
  42ecad:	adc    edi,edi
  42ecaf:	add    BYTE PTR [ecx],bl
  42ecb1:	(bad)  
  42ecb2:	call   DWORD PTR [eax-0x2f]
  42ecb5:	popa   
  42ecb6:	int3   
  42ecb7:	mov    DWORD PTR [ecx-0x1],ebp
  42ecba:	push   DWORD PTR [edx]
  42ecbc:	loope  0x42ed34
  42ecbe:	mov    edi,edi
  42ecc0:	(bad)  
  42ecc1:	(bad)  
  42ecc2:	dec    eax
  42ecc4:	fcomp  DWORD PTR [eax-0x1]
  42ecc7:	cmp    DWORD PTR [esi-0x1],0xffffff89
  42eccb:	arpl   cx,ax
  42eccd:	add    bh,bh
  42eccf:	mov    DWORD PTR [ecx+0x160400cc],edx
  42ecd5:	adc    ecx,esp
  42ecd7:	jmp    DWORD PTR [esi]
  42ecd9:	add    BYTE PTR [eax],al
  42ecdb:	push   0x72
  42ecdd:	cmp    al,0x89
  42ecdf:	cmp    DWORD PTR [ebx+eax*4],0xffffffff
  42ece3:	call   0x431985
  42ece8:	pop    ds
  42ece9:	(bad)  
  42ecea:	call   FWORD PTR [eax]
  42ecec:	out    0xfe,eax
  42ecee:	add    BYTE PTR [ecx+0x63ff00bb],cl
  42ecf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ecf5:	sar    bh,1
  42ecf7:	call   DWORD PTR [edi+0x720600ff]
  42ecfd:	adc    al,0xff
  42ecff:	jmp    ebp
  42ed01:	(bad)  
  42ed02:	dec    DWORD PTR [esp+eax*8+0x3083ffba]
  42ed09:	inc    DWORD PTR [eax]
  42ed0b:	cmp    al,0x29
  42ed0d:	out    0xff,al
  42ed0f:	add    dh,dl
  42ed11:	add    DWORD PTR [ebx+0x3cac7f],0x0
  42ed18:	das    
  42ed19:	add    BYTE PTR [eax],al
  42ed1b:	mov    ah,bl
  42ed1d:	cmp    al,0xff
  42ed1f:	(bad)  
  42ed20:	mov    edi,0x9b60ccff
  42ed25:	pop    esp
  42ed26:	add    BYTE PTR [ecx-0x1007cd2],cl
  42ed2c:	cmpps  xmm7,xmm7,0x89
  42ed30:	inc    eax
  42ed31:	inc    DWORD PTR [ebx-0x1e3b1b]
  42ed37:	inc    esi
  42ed39:	add    bh,bh
  42ed3b:	mov    ebx,0xcc7b81
  42ed40:	jmp    0x42ecc5
  42ed42:	add    dl,dl
  42ed44:	push   esi
  42ed45:	xchg   ebx,eax
  42ed46:	add    BYTE PTR [eax],al
  42ed48:	stc    
  42ed49:	mov    DWORD PTR [eax],eax
  42ed4b:	iret   
  42ed4c:	inc    ebx
  42ed4d:	xor    BYTE PTR [ebx-0x7cb900],al
  42ed53:	ss pusha 
  42ed55:	imul   eax,DWORD PTR [ebx-0xfff801],0xffffffd6
  42ed5c:	and    BYTE PTR [ebx-0x7a0001],bl
  42ed62:	call   DWORD PTR [eax-0x30]
  42ed65:	push   eax
  42ed66:	add    BYTE PTR [ebx-0x3b00fff6],al
  42ed6c:	mov    ebx,0x8183ff01
  42ed71:	inc    DWORD PTR [eax]
  42ed73:	or     DWORD PTR [eax-0x5],ecx
  42ed76:	add    BYTE PTR [eax],al
  42ed78:	fiadd  DWORD PTR [eax]
  42ed7a:	adc    edx,0xffffffe4
  42ed7d:	pusha  
  42ed7e:	dec    DWORD PTR [ecx+0x6dff0064]
  42ed84:	jl     0x42ede6
  42ed86:	mov    DWORD PTR [eax],eax
  42ed88:	mov    ch,0xff
  42ed8a:	add    BYTE PTR [edx],ah
  42ed8c:	adc    DWORD PTR [edx],ebp
  42ed8e:	inc    DWORD PTR [eax]
  42ed90:	inc    esp
  42ed91:	int3   
  42ed92:	add    ch,dh
  42ed94:	mov    al,ds:0x7acc0040
  42ed99:	add    bh,bh
  42ed9b:	sub    al,0x9f
  42ed9d:	in     al,0xff
  42ed9f:	int3   
  42eda0:	in     al,0xcc
  42eda2:	add    BYTE PTR [edi-0x335114],bh
  42eda8:	inc    DWORD PTR fs:[ebx-0x28ea56]
  42edaf:	jmp    FWORD PTR [edx+0x700f8389]
  42edb5:	jl     0x42ed83
  42edb7:	and    DWORD PTR [ebx],0xffffffff
  42edba:	jmp    DWORD PTR [ebp-0x7c343b]
  42edc0:	gs (bad) 
  42edc2:	(bad)  
  42edc3:	call   0x142618c
  42edc8:	and    eax,0x2b3effff
  42edcd:	mov    bh,bh
  42edcf:	xor    DWORD PTR [eax+0x249bff89],0xffffffca
  42edd6:	add    bh,bh
  42edd8:	scas   eax,DWORD PTR es:[edi]
  42edd9:	int3   
  42edda:	sub    edx,0xffffffb3
  42eddd:	xor    BYTE PTR [eax],al
  42eddf:	int3   
  42ede0:	dec    edi
  42ede1:	(bad)  
  42ede2:	jmp    DWORD PTR [edx]
  42ede4:	xor    eax,esp
  42ede6:	int3   
  42ede7:	int3   
  42ede8:	mov    ds:0x5550089,al
  42eded:	add    ah,cl
  42edef:	jmp    DWORD PTR [ecx-0x4cc1007d]
  42edf5:	pop    esp
  42edf6:	dec    DWORD PTR [ecx+0x67890050]
  42edfc:	outs   dx,DWORD PTR ds:[esi]
  42edfd:	mov    cl,0x0
  42edff:	add    BYTE PTR ds:0xb13383cc,dh
  42ee05:	mov    WORD PTR [eax],es
  42ee07:	(bad)  
  42ee08:	mov    edi,0x73b2ff00
  42ee0d:	jno    0x42ee0f
  42ee0f:	(bad)  
  42ee10:	cmp    bh,bh
  42ee12:	add    bl,bl
  42ee14:	enter  0xffcd,0x0
  42ee18:	(bad)  
  42ee19:	(bad)  
  42ee1a:	inc    DWORD PTR [ecx+0x4f]
  42ee1d:	mov    eax,DWORD PTR [eax]
  42ee1f:	add    bh,ch
  42ee21:	dec    DWORD PTR [ecx-0xc72244]
  42ee27:	call   DWORD PTR [ebx-0x7d]
  42ee2a:	mov    DWORD PTR [ebx],esp
  42ee2c:	mov    cl,BYTE PTR [edx+0xfe89ff]
  42ee32:	add    ah,bh
  42ee34:	ret    0x8987
  42ee37:	add    BYTE PTR [esi-0x1],cl
  42ee3a:	add    BYTE PTR [eax],cl
  42ee3c:	scas   eax,DWORD PTR es:[edi]
  42ee3d:	sar    edi,1
  42ee3f:	call   FWORD PTR [eax]
  42ee41:	add    BYTE PTR [eax],al
  42ee43:	jecxz  0x42ee80
  42ee45:	pop    ss
  42ee46:	int3   
  42ee47:	add    BYTE PTR [ebx+0x0],ah
  42ee4a:	add    al,ah
  42ee4c:	push   edi
  42ee4d:	mov    ebp,0xffb8ff00
  42ee52:	dec    DWORD PTR [edx]
  42ee54:	cdq    
  42ee55:	mov    BYTE PTR [eax],al
  42ee57:	add    BYTE PTR [eax-0x34],ch
  42ee5a:	(bad)  
  42ee5b:	(bad)  
  42ee5c:	adc    esi,ebx
  42ee5e:	dec    DWORD PTR [ecx+0x73ff0015]
  42ee64:	test   DWORD PTR [esi-0x7ce6007d],ebp
  42ee6a:	sub    ebx,0x7a
  42ee6d:	jbe    0x42ee6e
  42ee6f:	add    dh,ch
  42ee71:	add    bh,bh
  42ee73:	clc    
  42ee74:	(bad)  
  42ee75:	nop
  42ee76:	add    bh,bh
  42ee78:	xlat   BYTE PTR ds:[ebx]
  42ee79:	inc    DWORD PTR [eax]
  42ee7b:	rol    DWORD PTR [edi+0x13],1
  42ee7e:	add    DWORD PTR [ebx-0x77330013],0x41
  42ee85:	jae    0x42ee0a
  42ee87:	add    BYTE PTR [ecx+0x0],bl
  42ee8a:	mov    edx,ebx
  42ee8c:	dec    ebp
  42ee8d:	sti    
  42ee8e:	(bad)  
  42ee8f:	inc    DWORD PTR [ebx-0x1]
  42ee92:	int3   
  42ee93:	cmc    
  42ee94:	push   eax
  42ee95:	dec    edx
  42ee96:	int3   
  42ee97:	call   FWORD PTR [ebp+0x3761ff83]
  42ee9d:	xchg   ebx,eax
  42ee9e:	add    bh,bh
  42eea0:	dec    esp
  42eea1:	cmp    edi,0xffffffb9
  42eea4:	push   ebp
  42eea6:	(bad)  
  42eea7:	jmp    DWORD PTR [esi-0x1]
  42eeaa:	(bad)  
  42eeab:	cmp    eax,0x89ff579b
  42eeb0:	sub    DWORD PTR [eax],eax
  42eeb2:	call   DWORD PTR [ebp-0x7c335570]
  42eeb8:	push   cs
  42eeb9:	add    BYTE PTR [eax],al
  42eebb:	js     0x42ef31
  42eebd:	xchg   ebx,eax
  42eebe:	inc    DWORD PTR [eax]
  42eec0:	sub    eax,0xe61000ff
  42eec5:	cld    
  42eec6:	cmp    edi,0xffffffe0
  42eec9:	add    DWORD PTR [eax],0xffffff93
  42eecc:	pop    eax
  42eecd:	arpl   di,di
  42eecf:	jmp    DWORD PTR [eax+0x0]
  42eed2:	call   DWORD PTR [ebp-0x5a]
  42eed5:	push   0xffffffff
  42eed7:	(bad)  
  42eed8:	mov    esi,0xa0a2ffff
  42eedd:	jecxz  0x42eede
  42eedf:	add    BYTE PTR [ebx+0xf63ccff],ah
  42eee5:	dec    eax
  42eee6:	inc    DWORD PTR [eax]
  42eee8:	add    DWORD PTR [eax],0x602317ff
  42eeee:	int3   
  42eeef:	add    DWORD PTR [edi],0xffffffff
  42eef2:	add    al,dh
  42eef4:	push   edi
  42eef5:	int    0xcc
  42eef7:	add    BYTE PTR [esi+0x0],dl
  42eefa:	push   DWORD PTR [esi+0x46]
  42eefd:	jne    0x42ee82
  42eeff:	(bad)  
  42ef00:	dec    esp
  42ef02:	add    ch,dl
  42ef04:	aas    
  42ef05:	xchg   bh,bh
  42ef07:	(bad)  
  42ef08:	mov    esp,0x43a6ffff
  42ef0d:	add    edi,edi
  42ef0f:	call   FWORD PTR [ebp-0x1]
  42ef12:	(bad)  
  42ef13:	ficomp WORD PTR ds:0xffcf
  42ef19:	or     esp,0xffffff8c
  42ef1c:	add    DWORD PTR [edx+0xf100cc],ecx
  42ef22:	call   FWORD PTR [eax-0xff8508]
  42ef28:	cld    
  42ef29:	add    BYTE PTR [eax],al
  42ef2b:	jg     0x42eeae
  42ef2d:	lods   al,BYTE PTR ds:[esi]
  42ef2e:	int3   
  42ef2f:	cmp    DWORD PTR [ecx],0x0
  42ef32:	and    DWORD PTR [esi],0x48
  42ef35:	int    0x0
  42ef37:	add    BYTE PTR [edi],bl
  42ef39:	inc    DWORD PTR [ebx-0x33dd0bfc]
  42ef3f:	(bad)  
  42ef40:	mov    edx,0x44d789cc
  42ef45:	xchg   edx,eax
  42ef46:	int3   
  42ef47:	jmp    FWORD PTR [ebx-0x1]
  42ef4a:	add    bl,ah
  42ef4c:	mov    BYTE PTR [esi],dh
  42ef4e:	add    bh,bh
  42ef50:	xchg   esp,eax
  42ef51:	(bad)  
  42ef52:	call   ebp
  42ef54:	aaa    
  42ef55:	fmul   QWORD PTR [ecx+0xffdecc]
  42ef5b:	imul   esi,ecx,0xfffffffb
  42ef5e:	add    bh,bh
  42ef60:	aam    0x83
  42ef62:	call   DWORD PTR [edx+ecx*4+0x19]
  42ef66:	(bad)  
  42ef67:	push   DWORD PTR [esi-0x77]
  42ef6a:	add    BYTE PTR [esi+edx*2+0x3eccfffd],bh
  42ef71:	cmp    edi,0x1e
  42ef74:	mov    ah,0x7a
  42ef76:	add    DWORD PTR [eax],0x37
  42ef79:	add    BYTE PTR [eax],al
  42ef7b:	jnp    0x42ef04
  42ef7d:	and    edi,edi
  42ef7f:	mov    DWORD PTR [ebx+eax*4-0x1],ebp
  42ef83:	rcl    DWORD PTR [ebx],cl
  42ef85:	push   ebx
  42ef86:	add    bh,bh
  42ef88:	and    edi,edi
  42ef8a:	add    DWORD PTR [eax+ebp*2+0x7a],0xffffffff
  42ef8f:	inc    DWORD PTR [ecx-0x7d]
  42ef92:	sbb    DWORD PTR [edi+0x1],0xffffffc3
  42ef96:	(bad)  
  42ef97:	call   DWORD PTR [ebx-0x1]
  42ef9a:	call   FWORD PTR ds:0x838900fc
  42efa0:	scas   eax,DWORD PTR es:[edi]
  42efa1:	add    ah,cl
  42efa3:	les    eax,FWORD PTR [ecx+0x548389cb]
  42efa9:	cmp    edi,0xffffff83
  42efac:	in     eax,dx
  42efad:	jbe    0x42efae
  42efaf:	adc    ecx,0xffffffff
  42efb2:	add    BYTE PTR [ebp-0x80],dl
  42efb5:	iret   
  42efb6:	add    DWORD PTR [eax],0xffffffdf
  42efb9:	add    BYTE PTR [eax],al
  42efbb:	push   ds
  42efbc:	xor    al,0x55
  42efbe:	(bad)  
  42efbf:	dec    DWORD PTR [ecx]
  42efc1:	add    BYTE PTR [eax],al
  42efc3:	dec    eax
  42efc4:	in     eax,0x9f
  42efc6:	cmp    edi,0x59
  42efc9:	mov    edi,edi
  42efcb:	les    ebp,FWORD PTR [ecx-0x56]
  42efce:	inc    DWORD PTR [eax]
  42efd0:	cs mov esp,ecx
  42efd3:	stos   BYTE PTR es:[edi],al
  42efd4:	adc    eax,0xc9ff009a
  42efd9:	add    BYTE PTR [ebx-0x561c77],al
  42efdf:	dec    DWORD PTR [ebx-0x1de37c01]
  42efe5:	mov    ch,0xff
  42efe7:	(bad)  
  42efe8:	cli    
  42efe9:	add    BYTE PTR [eax],al
  42efeb:	fimul  WORD PTR [ebp+0xf]
  42efee:	(bad)  
  42efef:	jmp    DWORD PTR [esi]
  42eff1:	add    bh,bh
  42eff3:	cmp    eax,DWORD PTR [eax]
  42eff5:	scas   eax,DWORD PTR es:[edi]
  42eff6:	add    BYTE PTR [ebx+0x6eccccc7],al
  42effc:	ror    DWORD PTR [ecx-0x1],1
  42efff:	int3   
  42f000:	(bad)  
  42f002:	mov    DWORD PTR [eax],ebx
  42f004:	inc    esp
  42f005:	adc    al,0x0
  42f007:	call   DWORD PTR [ecx+0x0]
  42f00a:	push   DWORD PTR [edi+esi*2+0xd]
  42f00e:	(bad)  
  42f00f:	call   DWORD PTR [edi+0xeb800cc]
  42f015:	int3   
  42f016:	add    BYTE PTR [eax],al
  42f018:	xchg   bh,bh
  42f01a:	add    BYTE PTR [ecx-0x33ff8910],dh
  42f020:	out    dx,eax
  42f021:	cmp    edi,0xffffffbc
  42f024:	mov    edi,0xccffccf5
  42f029:	int3   
  42f02a:	int3   
  42f02b:	int3   
  42f02c:	int3   
  42f02d:	int3   
  42f02e:	int3   
  42f02f:	int3   
  42f030:	jmp    0xda00:0x8900007a
  42f037:	outs   dx,BYTE PTR ds:[esi]
  42f038:	and    edi,edi
  42f03a:	or     edi,edi
  42f03c:	or     eax,0xf0e48300
  42f041:	jbe    0x42f042
  42f043:	add    BYTE PTR [ecx+0x2d794800],cl
  42f049:	mov    DWORD PTR [ecx+ecx*4],esi
  42f04c:	leave  
  42f04d:	or     DWORD PTR [ecx-0x1e],0xffffffff
  42f054:	popa   
  42f055:	add    DWORD PTR [edx-0x66],0x9963e1cc
  42f05c:	inc    DWORD PTR [ebx+0xff9800]
  42f062:	add    bh,bh
  42f064:	cmp    al,0x3b
  42f066:	add    ch,bl
  42f068:	jmp    DWORD PTR [eax-0xffb7b9]
  42f06e:	add    BYTE PTR [ebx-0x337d],dh
  42f074:	push   ds
  42f075:	push   0x5d
  42f077:	jecxz  0x42f079
  42f079:	xor    cl,dh
  42f07b:	mov    cl,0x83
  42f07d:	add    BYTE PTR [ebx-0x7c0079],al
  42f083:	(bad)  
  42f084:	mov    esi,0xffcf6050
  42f089:	(bad)  
  42f08a:	mov    ch,0x87
  42f08c:	add    BYTE PTR [ebx-0x3300027d],al
  42f092:	add    bh,bh
  42f094:	test   eax,0xffd8ca9c
  42f099:	test   DWORD PTR [esi+0x19],eax
  42f09c:	inc    DWORD PTR [eax]
  42f09e:	add    BYTE PTR [esi+0x89ff00],dl
  42f0a4:	sub    al,0xd4
  42f0a6:	sub    al,0x56
  42f0a8:	add    dl,bl
  42f0aa:	fcomi  st,st(5)
  42f0ac:	add    ah,cl
  42f0ae:	add    BYTE PTR [ebx-0x7d],dh
  42f0b1:	(bad)  
  42f0b2:	inc    DWORD PTR [eax]
  42f0b4:	shl    DWORD PTR ds:0x70ff1cdb,1
  42f0ba:	push   ecx
  42f0bb:	mov    dh,0x83
  42f0bd:	add    BYTE PTR [eax],al
  42f0bf:	mov    ch,0x0
  42f0c1:	mov    esp,ecx
  42f0c3:	xor    DWORD PTR [ebp+0xd],0xffffffb6
  42f0c7:	cmp    edi,0xe8dec5
  42f0cd:	add    ah,cl
  42f0cf:	data16 (bad) 
  42f0d1:	inc    DWORD PTR [eax]
  42f0d3:	add    BYTE PTR [esi],bl
  42f0d5:	fsubr  QWORD PTR [edi]
  42f0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0d8:	dec    DWORD PTR [esi]
  42f0da:	cli    
  42f0db:	add    eax,0x2dff00ff
  42f0e0:	add    BYTE PTR [eax],al
  42f0e2:	(bad)  
  42f0e3:	push   DWORD PTR [esi]
  42f0e5:	cmp    ch,al
  42f0e7:	cwde   
  42f0e8:	add    BYTE PTR [esi],cl
  42f0ea:	rol    DWORD PTR [ebp-0x1],0xff
  42f0ee:	inc    ebx
  42f0f0:	mov    edi,edi
  42f0f2:	add    ah,cl
  42f0f4:	adc    BYTE PTR ds:0xa100eaad,al
  42f0fa:	call   0x84427a39
  42f0ff:	pop    es
  42f100:	add    BYTE PTR [eax],al
  42f102:	mov    DWORD PTR [eax],eax
  42f104:	retf   0x87c6
  42f107:	iret   
  42f108:	jmp    FWORD PTR [esi+0x26]
  42f10b:	pushf  
  42f10c:	inc    DWORD PTR [eax]
  42f10e:	adc    DWORD PTR [edi],0xffffffff
  42f111:	add    BYTE PTR [ecx-0x16ca0d00],cl
  42f117:	cli    
  42f118:	mov    DWORD PTR ds:0x83893e9c,ebx
  42f11e:	mov    DWORD PTR [eax],edx
  42f120:	(bad)  
  42f121:	(bad)  
  42f122:	(bad)  
  42f123:	call   FWORD PTR [edx+ecx*8+0x600084e7]
  42f12a:	push   ecx
  42f12b:	inc    DWORD PTR fs:[eax]
  42f12e:	call   FWORD PTR [eax-0x1]
  42f131:	add    DWORD PTR [eax],0xffffffff
  42f134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f135:	sahf   
  42f136:	clc    
  42f137:	or     edi,edi
  42f139:	retf   0x4e0
  42f13c:	add    BYTE PTR [eax],al
  42f13e:	inc    ebp
  42f140:	inc    DWORD PTR [eax]
  42f142:	add    bh,bh
  42f144:	in     al,0xd6
  42f146:	scas   al,BYTE PTR es:[edi]
  42f147:	sbb    al,BYTE PTR [ebx-0x7c99d957]
  42f14d:	inc    DWORD PTR [ebx-0xff33d2]
  42f153:	int3   
  42f154:	das    
  42f155:	(bad)  [eax-0x19817c73]
  42f15b:	xchg   edx,eax
  42f15c:	int3   
  42f15d:	(bad)  
  42f15e:	inc    DWORD PTR [edx+0x0]
  42f161:	add    BYTE PTR [eax],al
  42f163:	cmp    DWORD PTR [ebp-0xe82ee1],0xffffffc1
  42f16a:	loopne 0x42f17b
  42f16c:	(bad)  
  42f16d:	(bad)  
  42f16e:	(bad)  
  42f16f:	mov    ebx,0xff898300
  42f174:	stc    
  42f175:	fcom   QWORD PTR [ecx-0x64350100]
  42f17b:	sahf   
  42f17c:	cmp    edi,0xffffffcc
  42f17f:	out    0xcc,eax
  42f181:	add    BYTE PTR [eax],al
  42f183:	dec    ecx
  42f185:	mov    ecx,0x6a894bb4
  42f18a:	(bad)  
  42f18b:	jl     0x42f18d
  42f18d:	inc    DWORD PTR [eax]
  42f18f:	jg     0x42f190
  42f191:	int3   
  42f192:	int3   
  42f193:	(bad)  
  42f194:	cmp    eax,DWORD PTR [eax-0x2d]
  42f197:	fdivr  st,st(7)
  42f199:	and    esp,DWORD PTR [esi-0xff00b4]
  42f19f:	out    dx,al
  42f1a0:	int3   
  42f1a1:	add    BYTE PTR [ecx-0x39122901],cl
  42f1a7:	data16 add al,bh
  42f1aa:	stos   DWORD PTR es:[edi],eax
  42f1ab:	test   DWORD PTR [eax],eax
  42f1ad:	add    bh,bh
  42f1af:	out    dx,eax
  42f1b0:	add    bh,bh
  42f1b2:	add    BYTE PTR [eax],al
  42f1b4:	mov    dl,0xda
  42f1b6:	enter  0x8399,0x1d
  42f1ba:	jne    0x42f13d
  42f1bc:	inc    DWORD PTR [eax]
  42f1be:	call   DWORD PTR [edi+0xff0000]
  42f1c4:	mov    al,ds:0xe5273f
  42f1c9:	test   al,0xb6
  42f1cb:	mov    ds:0x87ffffff,al
  42f1d0:	(bad)  
  42f1d1:	(bad)  
  42f1d2:	inc    DWORD PTR [eax]
  42f1d4:	or     ebp,DWORD PTR [edx]
  42f1d6:	stos   DWORD PTR es:[edi],eax
  42f1d7:	fiadd  DWORD PTR [eax]
  42f1d9:	leave  
  42f1da:	lods   al,BYTE PTR ds:[esi]
  42f1db:	inc    esp
  42f1dc:	(bad)  
  42f1dd:	(bad)  
  42f1de:	call   FWORD PTR [ecx]
  42f1e0:	inc    DWORD PTR [eax]
  42f1e2:	inc    DWORD PTR [eax]
  42f1e4:	sbb    al,0xd3
  42f1e6:	or     al,0xa5
  42f1e8:	add    dh,dl
  42f1ea:	mov    esp,0xdc
  42f1ef:	test   DWORD PTR [ebx+0x5bffffff],0xff378bf9
  42f1f9:	cmp    BYTE PTR [esi],dl
  42f1fb:	adc    al,0x83
  42f1fd:	inc    DWORD PTR [eax]
  42f1ff:	lea    eax,[eax]
  42f201:	add    ah,cl
  42f203:	inc    DWORD PTR [edi+0xec7fcf]
  42f209:	dec    ecx
  42f20a:	cmp    eax,0xffff000a
  42f20f:	cs cmp edi,0xffffffff
  42f213:	add    cl,al
  42f215:	inc    esi
  42f216:	jmp    0x144f28c
  42f21b:	in     al,dx
  42f21c:	add    DWORD PTR [ebx-0x7c000901],0xffffffff
  42f223:	(bad)  
  42f224:	mov    edi,0xb4a3ad
  42f229:	push   eax
  42f22a:	pop    ss
  42f22b:	push   cs
  42f22c:	int3   
  42f22d:	(bad)  
  42f22e:	call   FWORD PTR [edx+0xffff]
  42f234:	jmp    0xa50972
  42f239:	cmp    eax,0xff836f87
  42f23e:	(bad)  
  42f23f:	call   0xccf1cd
  42f244:	call   0xeb47b1
  42f249:	jno    0x42f227
  42f24b:	aas    
  42f24c:	add    bh,bh
  42f24e:	add    BYTE PTR [eax],dl
  42f250:	int3   
  42f251:	(bad)  
  42f252:	dec    esp
  42f254:	inc    esi
  42f255:	cmp    dh,BYTE PTR [edi+esi*8]
  42f258:	add    bh,ah
  42f25a:	xor    al,0x4d
  42f25c:	inc    DWORD PTR [ebx-0x761b01]
  42f262:	inc    DWORD PTR [eax]
  42f264:	mov    ebp,0x83ea55bd
  42f269:	lods   al,BYTE PTR ds:[esi]
  42f26a:	add    al,0xe4
  42f26c:	(bad)  
  42f26d:	(bad)  
  42f26e:	push   DWORD PTR [ecx-0x34]
  42f271:	int3   
  42f272:	cmp    edi,0x50
  42f275:	out    dx,eax
  42f276:	retf   0x83ef
  42f279:	aad    0x3c
  42f27b:	or     bh,bh
  42f27d:	add    BYTE PTR [ebx-0x7cff7628],al
  42f283:	dec    DWORD PTR [ebp-0x4e]
  42f286:	test   eax,0x91a6ffff
  42f28b:	fwait
  42f28c:	(bad)  
  42f28d:	inc    DWORD PTR [ebx+0xccff89]
  42f293:	call   DWORD PTR [ebx-0x764b862f]
  42f299:	lea    esp,[ecx+0x83000b]
  42f29f:	imul   eax,DWORD PTR [eax],0x0
  42f2a2:	cmp    edi,0xffffff9a
  42f2a5:	clc    
  42f2a6:	bound  edi,QWORD PTR [esp+ecx*8-0x7ccba467]
  42f2ad:	add    ah,cl
  42f2af:	or     BYTE PTR [ecx+0x77ff8383],0xc5
  42f2b6:	in     al,dx
  42f2b7:	mov    bl,0x0
  42f2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2ba:	sub    cl,BYTE PTR [ebp-0x7d]
  42f2bd:	add    DWORD PTR [ebx-0x7c007666],0x0
  42f2c4:	sbb    ebp,DWORD PTR [ecx]
  42f2c6:	sbb    esp,DWORD PTR [edx-0x1]
  42f2c9:	mov    al,ds:0xccff9e3d
  42f2ce:	int3   
  42f2cf:	xor    cl,BYTE PTR [ecx-0x3900ff01]
  42f2d5:	ss push ecx
  42f2d7:	bound  eax,QWORD PTR [eax]
  42f2d9:	pop    edi
  42f2da:	popf   
  42f2db:	(bad)  
  42f2dc:	(bad)  
  42f2dd:	inc    DWORD PTR [eax]
  42f2df:	ins    DWORD PTR es:[edi],dx
  42f2e0:	int3   
  42f2e1:	add    BYTE PTR [eax],al
  42f2e3:	mov    DWORD PTR [edi+0x1a],ebp
  42f2e6:	mov    ds:0xc889008a,eax
  42f2eb:	dec    esi
  42f2ec:	dec    esp
  42f2ee:	call   FWORD PTR ds:0x8383ff00
  42f2f4:	in     eax,0x2e
  42f2f6:	jnp    0x42f2d3
  42f2f8:	push   edi
  42f2fa:	jo     0x42f305
  42f2fc:	inc    DWORD PTR [eax]
  42f2fe:	int3   
  42f2ff:	and    al,0xff
  42f301:	add    BYTE PTR [eax],al
  42f303:	call   FWORD PTR [ebx+esi*8-0x377c978f]
  42f30a:	test   DWORD PTR [ebx+eax*4-0x77],ecx
  42f30e:	call   DWORD PTR [ecx-0x1]
  42f311:	add    BYTE PTR [ebx+0x5a8a34ff],al
  42f317:	jno    0x42f29c
  42f319:	stc    
  42f31a:	inc    ebx
  42f31b:	in     al,dx
  42f31c:	dec    esp
  42f31e:	add    BYTE PTR [ebp-0x1],ah
  42f321:	inc    DWORD PTR [eax]
  42f323:	jmp    DWORD PTR [ebx]
  42f325:	outs   dx,BYTE PTR ds:[esi]
  42f326:	addr16 jb 0x42f328
  42f329:	dec    BYTE PTR [ebp-0x14]
  42f32c:	add    BYTE PTR [eax],al
  42f32e:	add    BYTE PTR [ebx-0x7c007c7d],dh
  42f334:	lods   al,BYTE PTR ds:[esi]
  42f335:	adc    eax,0xdccc627a
  42f33a:	pushf  
  42f33b:	sahf   
  42f33c:	dec    esp
  42f33e:	adc    DWORD PTR [ebx-0x1],0xffffffff
  42f342:	inc    DWORD PTR [eax]
  42f344:	inc    eax
  42f345:	fcom   DWORD PTR [eax+eiz*8-0x586cd601]
  42f34c:	add    BYTE PTR [eax],al
  42f34e:	mov    DWORD PTR [edi+edi*8-0x5e760100],ebp
  42f355:	dec    DWORD PTR [eax]
  42f357:	jmp    0x42f358
  42f359:	push   ecx
  42f35b:	std    
  42f35c:	(bad)  
  42f35d:	inc    DWORD PTR [eax]
  42f35f:	aas    
  42f360:	add    DWORD PTR [eax],0xffffff83
  42f363:	add    ch,cl
  42f365:	mov    cl,bh
  42f367:	lea    ecx,[ecx-0x7cc6ad01]
  42f36d:	inc    DWORD PTR [eax]
  42f36f:	(bad)  
  42f371:	int3   
  42f372:	add    DWORD PTR [eax],0xfffffff0
  42f375:	and    ebp,DWORD PTR [ecx+0x9]
  42f378:	cmp    DWORD PTR [eax+0xff09ab],0xffffff83
  42f37f:	sbb    edi,edi
  42f381:	inc    DWORD PTR [ebx-0x68bf8400]
  42f387:	mov    ecx,0xc19c5fff
  42f38c:	(bad)  
  42f38d:	inc    DWORD PTR [eax]
  42f38f:	inc    ebx
  42f390:	inc    DWORD PTR [eax]
  42f392:	(bad)  
  42f393:	inc    DWORD PTR [ebp-0x18]
  42f396:	retf   0xff54
  42f399:	jns    0x42f31d
  42f39b:	xor    al,0x89
  42f39d:	cmp    edi,0xffffffdd
  42f3a0:	inc    DWORD PTR [ebx-0x604f0001]
  42f3a6:	cdq    
  42f3a7:	js     0x42f3a8
  42f3a9:	mov    cl,BYTE PTR [ecx]
  42f3ab:	adc    al,0xff
  42f3ad:	add    BYTE PTR [eax],al
  42f3af:	pop    esp
  42f3b0:	add    BYTE PTR [eax],al
  42f3b2:	(bad)  
  42f3b3:	inc    DWORD PTR [ecx-0xdc9d79]
  42f3b9:	nop
  42f3ba:	stos   BYTE PTR es:[edi],al
  42f3bb:	pop    eax
  42f3bc:	add    bh,bh
  42f3be:	add    BYTE PTR [ecx-0x1],bl
  42f3c1:	dec    esp
  42f3c3:	add    BYTE PTR [edi-0x3387e61f],bl
  42f3c9:	jns    0x42f447
  42f3cb:	retf   0xff89
  42f3ce:	and    DWORD PTR [ecx+0xff83ff],0x66
  42f3d5:	test   DWORD PTR ds:0x2adb00c7,ebx
  42f3db:	ror    ah,0xff
  42f3de:	dec    DWORD PTR ds:0xffffffff
  42f3e4:	lods   al,BYTE PTR ds:[esi]
  42f3e5:	jp     0x42f3f8
  42f3e7:	add    eax,0x48632400
  42f3ec:	(bad)  
  42f3ed:	(bad)  
  42f3ee:	dec    edx
  42f3f0:	add    bh,bh
  42f3f2:	inc    DWORD PTR [eax]
  42f3f4:	sub    eax,0xff3cdeb2
  42f3f9:	xor    eax,DWORD PTR [esi-0x23]
  42f3fc:	inc    DWORD PTR [eax]
  42f3fe:	add    dl,bl
  42f400:	(bad)  
  42f401:	dec    DWORD PTR [ecx+0x5798a1ff]
  42f407:	dec    ecx
  42f408:	add    BYTE PTR [ecx-0x76ff4afb],bl
  42f40e:	add    BYTE PTR [esi-0x1],dh
  42f411:	add    BYTE PTR [eax],al
  42f413:	int3   
  42f414:	mov    ds:0xff87de51,al
  42f419:	(bad)  
  42f41a:	ror    BYTE PTR [ebx-0x1],cl
  42f41d:	mov    DWORD PTR [ecx-0x7c000076],ecx
  42f423:	jmp    FWORD PTR [ecx-0x22493e]
  42f429:	pop    esp
  42f42a:	stos   BYTE PTR es:[edi],al
  42f42b:	cmp    bh,0x0
  42f42e:	int3   
  42f42f:	mov    esi,0x8383ff
  42f434:	aam    0x7d
  42f436:	test   eax,0xc7f1ff66
  42f43b:	popa   
  42f43c:	(bad)  
  42f43d:	(bad)  
  42f43e:	push   eax
  42f440:	inc    DWORD PTR [eax]
  42f442:	inc    DWORD PTR [ebx+0x564c344]
  42f448:	add    ch,ah
  42f44a:	out    0x1c,al
  42f44c:	int3   
  42f44d:	add    bh,bh
  42f44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f450:	add    bh,bh
  42f452:	inc    DWORD PTR [eax]
  42f454:	icebp  
  42f455:	ja     0x42f4c7
  42f457:	dec    esi
  42f458:	int3   
  42f459:	push   esp
  42f45a:	and    BYTE PTR [ecx-0x48ff0100],ch
  42f460:	add    DWORD PTR [eax],0xffffffff
  42f463:	mov    edi,esp
  42f465:	ins    BYTE PTR es:[edi],dx
  42f466:	shl    ecx,cl
  42f468:	add    ch,dl
  42f46a:	adc    DWORD PTR [ecx],ebp
  42f46c:	add    bh,bh
  42f46e:	or     DWORD PTR [esi-0x1],0x0
  42f472:	int3   
  42f473:	int3   
  42f474:	dec    edx
  42f475:	ins    DWORD PTR es:[edi],dx
  42f476:	ret    
  42f477:	rol    DWORD PTR [eax],0xcf
  42f47a:	mov    es,WORD PTR [ecx-0x1]
  42f47d:	add    BYTE PTR [eax],al
  42f47f:	xor    eax,0xffff0000
  42f484:	sahf   
  42f485:	add    dh,BYTE PTR [esp+eiz*8-0x1]
  42f489:	les    edx,FWORD PTR [ecx]
  42f48b:	ss int3 
  42f48d:	add    ah,cl
  42f48f:	je     0x42f490
  42f491:	(bad)  
  42f492:	(bad)  
  42f493:	dec    ebp
  42f495:	adc    DWORD PTR [eax+0x47a00b9],ebx
  42f49b:	xor    eax,0xf7ffff00
  42f4a0:	inc    DWORD PTR [ebx-0x8d93301]
  42f4a6:	frstor [esp+ecx*8]
  42f4a9:	adc    BYTE PTR [edx+0xcc00ed],ch
  42f4af:	push   esi
  42f4b0:	mov    edi,edi
  42f4b2:	(bad)  
  42f4b3:	dec    DWORD PTR [edx]
  42f4b5:	adc    eax,0x2f83d001
  42f4ba:	es test bh,bh
  42f4bd:	(bad)  
  42f4be:	jmp    FWORD PTR [ebx-0x1]
  42f4c1:	(bad)  
  42f4c2:	(bad)  
  42f4c3:	dec    DWORD PTR [ebx-0x96616f]
  42f4c9:	les    esp,FWORD PTR es:[edx]
  42f4cc:	add    bh,bh
  42f4ce:	(bad)  
  42f4cf:	jp     0x42f4d1
  42f4d1:	inc    DWORD PTR [ebx-0x30b64601]
  42f4d7:	mov    al,ds:0xbb838083
  42f4dc:	(bad)  
  42f4dd:	dec    esp
  42f4df:	pop    esp
  42f4e0:	add    ah,cl
  42f4e2:	inc    DWORD PTR [eax]
  42f4e4:	mov    eax,ds:0xff581282
  42f4e9:	repnz hlt 
  42f4eb:	dec    ebp
  42f4ec:	add    BYTE PTR [eax],al
  42f4ee:	add    DWORD PTR [eax+eax*1-0x34],0x0
  42f4f3:	add    BYTE PTR [esi-0x7cc7df18],ah
  42f4f9:	jle    0x42f4f7
  42f4fb:	ret    0xff00
  42f4fe:	add    ch,ah
  42f500:	inc    DWORD PTR [eax]
  42f502:	(bad)  
  42f503:	dec    DWORD PTR [edx]
  42f505:	push   ebx
  42f506:	call   0xbb89f4d0
  42f50b:	mov    esi,0xa4008300
  42f510:	add    ah,cl
  42f512:	inc    DWORD PTR [eax]
  42f514:	clc    
  42f515:	ror    DWORD PTR ds:0x157d00aa,cl
  42f51b:	push   esp
  42f51c:	inc    DWORD PTR [eax]
  42f51e:	(bad)  
  42f51f:	jmp    0xaeee:0xff89ff00
  42f526:	outs   dx,BYTE PTR ds:[esi]
  42f527:	pop    ss
  42f528:	inc    DWORD PTR [ebp+ebx*4+0x51]
  42f52c:	(bad)  
  42f52d:	inc    DWORD PTR [eax]
  42f52f:	ja     0x42f530
  42f531:	inc    DWORD PTR [eax]
  42f533:	call   FWORD PTR [edi+0x2a]
  42f536:	sub    esi,ecx
  42f538:	add    BYTE PTR [ebx-0x3300542e],dh
  42f53e:	int3   
  42f53f:	icebp  
  42f540:	add    bh,bh
  42f542:	mov    DWORD PTR [ebx+0x7456da82],eax
  42f548:	call   DWORD PTR [ebx-0x4d]
  42f54b:	pusha  
  42f54c:	(bad)  
  42f54d:	dec    DWORD PTR [ecx-0x9a]
  42f553:	jmp    FWORD PTR [edi-0x1a]
  42f556:	sub    BYTE PTR [esi+0x72a18300],ch
  42f55c:	add    bh,bh
  42f55e:	(bad)  
  42f55f:	out    dx,eax
  42f560:	(bad)  
  42f561:	inc    DWORD PTR [eax]
  42f563:	int3   
  42f564:	jecxz  0x42f4fc
  42f566:	sub    DWORD PTR ds:0xf0b24683,ebp
  42f56c:	mov    DWORD PTR [eax],eax
  42f56e:	(bad)  
  42f56f:	mov    edi,0xffffffcc
  42f574:	fild   WORD PTR [ebx+0x2e]
  42f577:	imul   edi,edi,0xffbaf43c
  42f57d:	cmp    edi,0xffffff9d
  42f580:	dec    DWORD PTR [ecx-0x51980001]
  42f586:	mov    esp,esp
  42f588:	mov    DWORD PTR [ecx+0x35],ecx
  42f58b:	and    esp,ecx
  42f58d:	inc    DWORD PTR [eax]
  42f58f:	dec    esp
  42f590:	(bad)  
  42f591:	inc    DWORD PTR [eax]
  42f593:	int3   
  42f594:	or     eax,0xffe4cbe1
  42f599:	lea    ebx,[eax]
  42f59b:	and    edi,edi
  42f59d:	add    DWORD PTR [eax],0x74
  42f5a0:	add    ah,cl
  42f5a2:	(bad)  
  42f5a3:	call   FWORD PTR [ebx+0xe4c60]
  42f5a9:	rcr    DWORD PTR [eax-0x1d],0x0
  42f5ad:	inc    DWORD PTR [eax]
  42f5af:	add    al,BYTE PTR [ebx-0x72000077]
  42f5b5:	test   al,0xe3
  42f5b7:	cmp    bh,bh
  42f5b9:	mov    DWORD PTR [edx+0xffcd],edi
  42f5bf:	push   edx
  42f5c0:	cmp    edi,0xffffff83
  42f5c3:	sub    ebp,0xffffffed
  42f5c6:	dec    eax
  42f5c7:	add    bh,bh
  42f5c9:	push   0xffffffa9
  42f5cb:	mov    ecx,0x4900ffff
  42f5d0:	(bad)  
  42f5d1:	dec    esp
  42f5d3:	(bad)  
  42f5d4:	(bad)  
  42f5d5:	aad    0xd6
  42f5d7:	xchg   edi,eax
  42f5d8:	(bad)  
  42f5d9:	jle    0x42f639
  42f5db:	sub    esp,ecx
  42f5dd:	inc    DWORD PTR [ebx-0x7c30]
  42f5e3:	push   esi
  42f5e5:	std    
  42f5e6:	cs xor bh,bh
  42f5e9:	ficom  DWORD PTR [ebx-0x66]
  42f5ec:	add    bh,bh
  42f5ee:	add    DWORD PTR [ebx+0x0],0xffffffff
  42f5f2:	dec    esp
  42f5f4:	inc    edx
  42f5f5:	sti    
  42f5f6:	int3   
  42f5f7:	leave  
  42f5f8:	cmp    DWORD PTR [edx-0x2],0xffffffe1
  42f5fc:	add    ah,cl
  42f5fe:	call   FWORD PTR [edi]
  42f600:	inc    DWORD PTR [eax]
  42f602:	add    BYTE PTR [ebx-0x5e52782b],al
  42f608:	push   DWORD PTR [edx+ebp*8-0xff7697]
  42f60f:	mov    dh,0xff
  42f611:	inc    DWORD PTR [eax]
  42f613:	add    BYTE PTR [eax-0x3d9c8a],dh
  42f619:	lahf   
  42f61a:	mov    BYTE PTR ds:0x5fffffff,ah
  42f620:	inc    DWORD PTR [eax]
  42f622:	int3   
  42f623:	add    cl,al
  42f625:	dec    esp
  42f626:	imul   DWORD PTR [edx-0x553fe000]
  42f62c:	add    bh,bh
  42f62e:	int3   
  42f62f:	lahf   
  42f630:	(bad)  
  42f631:	inc    DWORD PTR [eax]
  42f633:	add    BYTE PTR [edx-0x65],ch
  42f636:	bound  edx,QWORD PTR [edx]
  42f638:	int3   
  42f639:	push   ds
  42f63a:	pop    es
  42f63b:	dec    eax
  42f63c:	int3   
  42f63d:	dec    esp
  42f63f:	inc    WORD PTR [eax]
  42f642:	inc    DWORD PTR [eax]
  42f644:	jns    0x42f6b5
  42f646:	rol    cl,cl
  42f648:	adc    ebp,0xfffffff0
  42f64b:	out    0xff,al
  42f64d:	dec    esp
  42f64f:	imul   ecx,esp,0x0
  42f652:	add    BYTE PTR [eax],al
  42f654:	add    esi,esp
  42f656:	cwde   
  42f657:	sbb    al,0x0
  42f659:	xchg   edx,eax
  42f65a:	xchg   ecx,eax
  42f65b:	add    edi,edi
  42f65d:	int3   
  42f65e:	call   DWORD PTR [esi]
  42f660:	int3   
  42f661:	add    BYTE PTR [eax],al
  42f663:	call   DWORD PTR [ecx-0x5a]
  42f666:	fsubr  DWORD PTR [edx+0x668176ff]
  42f66c:	inc    DWORD PTR [eax]
  42f66e:	add    bh,ch
  42f670:	mov    edi,edi
  42f672:	add    bh,bh
  42f674:	add    al,0x64
  42f676:	xchg   BYTE PTR [eax-0x456f2c77],dl
  42f67c:	(bad)  
  42f67d:	inc    DWORD PTR [eax]
  42f67f:	sar    bh,0x0
  42f682:	add    bh,bh
  42f684:	ins    BYTE PTR es:[edi],dx
  42f685:	es adc eax,0x70ffff1e
  42f68b:	nop
  42f68c:	(bad)  
  42f68d:	inc    DWORD PTR [eax]
  42f68f:	enter  0xff,0x0
  42f693:	inc    ecx
  42f695:	leave  
  42f696:	repnz mov ebx,0x723ef8ff
  42f69c:	(bad)  
  42f69d:	(bad)  
  42f69e:	call   DWORD PTR [edi+edi*8-0x1]
  42f6a2:	add    BYTE PTR [eax],al
  42f6a4:	icebp  
  42f6a5:	mov    edi,0x9b005794
  42f6aa:	sub    DWORD PTR [ebx],edx
  42f6ac:	inc    DWORD PTR [ebx-0xff5900]
  42f6b2:	(bad)  
  42f6b3:	(bad)  
  42f6b4:	std    
  42f6b5:	cmp    ecx,ebp
  42f6b7:	xor    BYTE PTR [eax],al
  42f6b9:	mov    ds:0xffbdc8,eax
  42f6be:	mov    DWORD PTR ds:0xccffffff,ecx
  42f6c4:	in     eax,0x85
  42f6c6:	dec    edx
  42f6c7:	mov    dh,0xff
  42f6c9:	popf   
  42f6ca:	psubb  mm0,QWORD PTR [ebx-0xdfff01]
  42f6d1:	dec    esp
  42f6d3:	call   FWORD PTR [ebp+eiz*1-0x5ffdace]
  42f6da:	inc    eax
  42f6db:	ja     0x42f6dc
  42f6dd:	add    ah,cl
  42f6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6e0:	(bad)  
  42f6e1:	(bad)  
  42f6e2:	inc    DWORD PTR [eax]
  42f6e4:	into   
  42f6e5:	retf   0xb2dd
  42f6e8:	dec    DWORD PTR [eax]
  42f6ea:	and    DWORD PTR [ebx-0x66337c77],esi
  42f6f0:	add    BYTE PTR [ecx+0x601483ff],cl
  42f6f6:	out    0x84,al
  42f6f8:	call   FWORD PTR [ecx-0x65]
  42f6fb:	ds mov esp,ecx
  42f6fe:	call   DWORD PTR [eax-0x7c000001]
  42f704:	jge    0x42f736
  42f706:	imul   ebx,DWORD PTR [eax],0xffffffcc
  42f709:	outs   dx,DWORD PTR ds:[esi]
  42f70b:	call   0xff83:0xd6ff83ff
  42f712:	add    bh,bh
  42f714:	mov    edi,0xff882b17
  42f719:	imul   esp,ebp,0xff8307
  42f71f:	data16 (bad) 
  42f721:	inc    DWORD PTR [eax]
  42f723:	add    BYTE PTR [edx+edx*2+0x6fff7110],dl
  42f72a:	pop    ss
  42f72b:	push   0xe0000000
  42f730:	add    bh,bh
  42f732:	add    BYTE PTR [ecx+0x2b16018f],cl
  42f738:	sbb    DWORD PTR [edi-0x33ff483a],0x0
  42f73f:	retf   0x83ff
  42f742:	inc    DWORD PTR [ebx-0xc4245b6]
  42f748:	push   DWORD PTR [eax+0x62]
  42f74b:	and    al,0x83
  42f74d:	dec    esp
  42f74f:	sub    al,0x0
  42f751:	mov    edi,edi
  42f753:	add    BYTE PTR [ecx+esi*8-0x6d],bh
  42f757:	test   edi,edi
  42f759:	mov    edi,0xff007b84
  42f75e:	call   FWORD PTR [edi+edi*8-0x1]
  42f762:	inc    DWORD PTR [eax]
  42f764:	ins    DWORD PTR es:[edi],dx
  42f765:	adc    BYTE PTR [edx+0x4351ffa1],cl
  42f76b:	loope  0x42f76c
  42f76d:	(bad)  
  42f76e:	jmp    FWORD PTR ds:0x83ff
  42f774:	popf   
  42f775:	jg     0x42f7d6
  42f777:	sar    edi,0x1d
  42f77a:	inc    edx
  42f77b:	loope  0x42f77c
  42f77d:	add    BYTE PTR [ecx-0xffff2f],cl
  42f783:	push   DWORD PTR [esi-0x1b]
  42f786:	push   cs
  42f787:	repz add BYTE PTR [edi+0x67],cl
  42f78b:	xor    al,0xcc
  42f78d:	add    bh,bh
  42f78f:	mov    ds:0x8983ffff,al
  42f794:	cld    
  42f795:	mov    eax,ds:0x5f00c87f
  42f79a:	test   BYTE PTR [edx+0x0],dh
  42f79d:	(bad)  
  42f79e:	jmp    FWORD PTR [ecx]
  42f7a0:	(bad)  
  42f7a1:	inc    DWORD PTR [eax]
  42f7a3:	jmp    FWORD PTR [esi]
  42f7a5:	(bad)  
  42f7a6:	(bad)  [ebp-0x1]
  42f7a9:	mov    eax,ds:0x89ff428a
  42f7ae:	mov    ebp,ebx
  42f7b0:	mov    edi,edi
  42f7b2:	add    BYTE PTR [eax],al
  42f7b4:	xlat   BYTE PTR ds:[ebx]
  42f7b5:	pop    esp
  42f7b6:	nop
  42f7b7:	out    0x83,al
  42f7b9:	add    DWORD PTR [esi-0xfffc],ebx
  42f7bf:	and    edi,edi
  42f7c1:	add    bh,bh
  42f7c3:	add    al,dl
  42f7c5:	(bad)  
  42f7c6:	in     al,dx
  42f7c7:	pop    eax
  42f7c8:	add    cl,dl
  42f7ca:	xchg   edx,eax
  42f7cb:	ins    DWORD PTR es:[edi],dx
  42f7cc:	cmp    edi,0xffffffff
  42f7cf:	cmp    edi,edi
  42f7d1:	dec    esp
  42f7d3:	sub    DWORD PTR [ebp-0xcfa1fa],0xffffffa0
  42f7da:	mov    eax,0xff74
  42f7df:	loop   0x42f7e1
  42f7e1:	inc    DWORD PTR [eax]
  42f7e3:	(bad)  
  42f7e4:	fst    QWORD PTR [ebp-0x18]
  42f7e7:	test   eax,0x5b45ecc
  42f7ec:	inc    DWORD PTR [eax]
  42f7ee:	add    cl,ah
  42f7f0:	add    DWORD PTR [eax],0x0
  42f7f3:	add    BYTE PTR [esi-0x18],cl
  42f7f6:	sbb    edi,eax
  42f7f8:	sub    DWORD PTR [ecx],0x1d
  42f7fb:	add    edi,edi
  42f7fd:	(bad)  
  42f7fe:	call   DWORD PTR [edx]
  42f800:	add    DWORD PTR [eax],0xffffffff
  42f803:	add    bh,cl
  42f805:	or     DWORD PTR [edx-0x1b9d006f],eax
  42f80b:	pusha  
  42f80c:	inc    DWORD PTR [ebx+0xcc7400]
  42f812:	inc    DWORD PTR [eax]
  42f814:	add    eax,DWORD PTR [ebx]
  42f816:	mov    al,0x81
  42f818:	add    BYTE PTR [esi],al
  42f81a:	dec    edx
  42f81b:	call   0x68c6f7a9
  42f820:	(bad)  
  42f821:	dec    DWORD PTR [ecx-0x2f6e977d]
  42f827:	int3   
  42f828:	add    BYTE PTR [ebx-0x23],ah
  42f82b:	fwait
  42f82c:	or     esp,0xffffff89
  42f82f:	adc    eax,0x83ff89ff
  42f834:	xchg   esi,eax
  42f835:	rcl    BYTE PTR [bx+0x0],1
  42f839:	and    DWORD PTR [edi+0x20],esi
  42f83c:	add    bh,bh
  42f83e:	int3   
  42f83f:	adc    DWORD PTR [ecx+0x15ff0000],ecx
  42f845:	or     ebp,DWORD PTR [eax+0x69]
  42f848:	int3   
  42f849:	aaa    
  42f84a:	jp     0x42f80f
  42f84c:	add    BYTE PTR [eax],al
  42f84e:	dec    DWORD PTR [ebp+0x0]
  42f851:	int3   
  42f852:	dec    DWORD PTR [ecx-0x6c9e5de9]
  42f858:	add    dl,ch
  42f85a:	cld    
  42f85b:	pop    edx
  42f85c:	or     esp,0xffffffff
  42f85f:	push   ebx
  42f860:	dec    esp
  42f862:	(bad)  
  42f863:	push   DWORD PTR [ebp-0x6a5af4]
  42f869:	(bad)  
  42f86b:	xor    bh,bh
  42f86d:	cmp    edi,0xffffff8a
  42f870:	inc    DWORD PTR [ebx+0x1c41ff89]
  42f876:	ss cmp bh,bh
  42f879:	jmp    0x42f860
  42f87b:	add    BYTE PTR [eax],al
  42f87d:	inc    DWORD PTR [ebx-0x337cff58]
  42f883:	dec    DWORD PTR [eax-0xc53f34]
  42f889:	js     0x42f8df
  42f88b:	jbe    0x42f88c
  42f88d:	(bad)  
  42f88e:	inc    esi
  42f890:	or     esp,0xffffffff
  42f893:	jmp    DWORD PTR [edi+eiz*2+0x4b830acd]
  42f89a:	mov    al,0xb9
  42f89c:	dec    esp
  42f89e:	add    ch,bl
  42f8a0:	(bad)  
  42f8a1:	(bad)  
  42f8a2:	inc    DWORD PTR [ebx-0x42c12fe]
  42f8a8:	inc    DWORD PTR [edx]
  42f8aa:	cmp    esp,eax
  42f8ac:	add    BYTE PTR [ebx-0x7c332777],al
  42f8b2:	(bad)  
  42f8b3:	push   DWORD PTR [ecx+0x73]
  42f8b6:	mov    ecx,0x4d4f0078
  42f8bb:	sbb    al,BYTE PTR [eax]
  42f8bd:	add    bh,bh
  42f8bf:	je     0x42f8c0
  42f8c1:	dec    DWORD PTR [ecx-0x1a0d9700]
  42f8c7:	mov    cl,0xff
  42f8c9:	mov    ch,0xc6
  42f8cb:	ins    DWORD PTR es:[edi],dx
  42f8cc:	(bad)  
  42f8cd:	inc    DWORD PTR [eax]
  42f8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8d0:	add    BYTE PTR [eax],al
  42f8d2:	add    BYTE PTR [eax],al
  42f8d4:	inc    esi
  42f8d5:	pusha  
  42f8d6:	call   0x8d417ca5
  42f8db:	jmp    0x89ff:0xb50089ff
  42f8e2:	inc    DWORD PTR [eax]
  42f8e4:	pop    ss
  42f8e5:	and    al,0x63
  42f8e7:	stos   DWORD PTR es:[edi],eax
  42f8e8:	mov    DWORD PTR [ebp+0x45],ecx
  42f8eb:	xchg   ah,cl
  42f8ed:	mov    DWORD PTR [ebx-0x7c760006],eax
  42f8f3:	add    BYTE PTR [ebx+edi*4-0x5c7c9fea],bh
  42f8fa:	mov    dl,0xe9
  42f8fc:	(bad)  
  42f8fd:	inc    DWORD PTR [ebx-0x33ff00de]
  42f903:	mov    ecx,edx
  42f905:	sbb    al,0xc9
  42f907:	sub    al,BYTE PTR [eax]
  42f909:	inc    esp
  42f90a:	inc    DWORD PTR [ecx+0x70ffcc00]
  42f910:	add    DWORD PTR [eax],0xffffff89
  42f913:	jmp    DWORD PTR [ebx-0x7c9c4a04]
  42f919:	inc    ebp
  42f91a:	mov    esi,0xffff0009
  42f91f:	outs   dx,BYTE PTR ds:[esi]
  42f920:	mov    edi,edi
  42f922:	add    BYTE PTR [ecx+0x4b5d06b7],cl
  42f928:	cmp    edi,0xffffffbd
  42f92b:	mov    bh,0x89
  42f92d:	inc    DWORD PTR [eax]
  42f92f:	in     eax,0xff
  42f931:	add    BYTE PTR [eax],al
  42f933:	inc    DWORD PTR [edi-0xdb2aa9]
  42f939:	pop    esi
  42f93a:	and    eax,0xcc00ffd8
  42f93f:	pusha  
  42f940:	int3   
  42f941:	add    bh,bh
  42f943:	add    BYTE PTR [edi-0xfe5c8a],al
  42f949:	inc    edx
  42f94a:	aad    0x8b
  42f94c:	add    bh,bh
  42f94e:	int3   
  42f94f:	xchg   ecx,eax
  42f950:	int3   
  42f951:	add    bh,bh
  42f953:	mov    edx,ebx
  42f955:	lahf   
  42f956:	and    al,dl
  42f958:	jmp    FWORD PTR [edi-0x7c00615e]
  42f95e:	add    dh,ch
  42f960:	(bad)  
  42f961:	inc    DWORD PTR [ebx-0x17e0e500]
  42f967:	loope  0x42f969
  42f969:	jle    0x42f997
  42f96b:	jp     0x42f96c
  42f96d:	add    ah,cl
  42f96f:	out    dx,al
  42f970:	add    ah,cl
  42f972:	add    bh,bh
  42f974:	test   BYTE PTR [esi+0x18],bl
  42f977:	out    dx,eax
  42f978:	add    BYTE PTR ds:0xccffabc4,al
  42f97e:	jmp    FWORD PTR [eax+0x0]
  42f981:	mov    edi,edi
  42f983:	dec    DWORD PTR [esi]
  42f985:	ds stos DWORD PTR es:[edi],eax
  42f987:	jnp    0x42f988
  42f989:	lock xlat BYTE PTR ds:[ebx]
  42f98b:	lock add DWORD PTR [eax],0xffffff83
  42f98f:	test   DWORD PTR [ecx-0x32ffff01],ecx
  42f995:	punpckldq mm4,mm7
  42f998:	add    ch,cl
  42f99a:	push   edi
  42f99b:	mov    BYTE PTR [eax],0x0
  42f99e:	jmp    FWORD PTR [eax+0xff8383]
  42f9a4:	out    dx,al
  42f9a5:	fbld   TBYTE PTR [eax-0x6a]
  42f9a8:	add    dh,bl
  42f9aa:	pop    esi
  42f9ab:	add    BYTE PTR es:[eax],al
  42f9ae:	push   esp
  42f9b0:	add    ah,cl
  42f9b2:	(bad)  
  42f9b3:	call   FWORD PTR [edx-0x7c04a622]
  42f9b9:	int3   
  42f9ba:	cs repnz (bad) 
  42f9bd:	inc    DWORD PTR [eax]
  42f9bf:	xchg   edi,eax
  42f9c0:	dec    DWORD PTR [ecx+0x39ecff83]
  42f9c6:	mov    al,ds:0xeaceffd5
  42f9cb:	add    BYTE PTR [eax],0x83
  42f9ce:	add    dl,bl
  42f9d0:	inc    DWORD PTR [eax]
  42f9d2:	add    BYTE PTR [eax],al
  42f9d4:	mov    esi,DWORD PTR [esp+ebp*8-0x3a]
  42f9d8:	push   DWORD PTR ds:0x83ffc8aa
  42f9de:	xor    DWORD PTR [eax+eax*1-0x2cff0001],0xfffffff0
  42f9e6:	sub    DWORD PTR [edi-0x16c7e077],ecx
  42f9ec:	(bad)  
  42f9ed:	inc    DWORD PTR [eax]
  42f9ef:	xor    al,BYTE PTR [eax]
  42f9f1:	(bad)  
  42f9f2:	(bad)  
  42f9f3:	call   FWORD PTR [ebx]
  42f9f5:	aad    0xff
  42f9f7:	rol    DWORD PTR [eax],1
  42f9f9:	stos   DWORD PTR es:[edi],eax
  42f9fa:	fisubr WORD PTR [edx-0x1]
  42f9fd:	(bad)  
  42f9fe:	push   DWORD PTR [ecx-0x33ff7d]
  42fa04:	iret   
  42fa05:	jb     0x42f9e4
  42fa07:	pop    esi
  42fa08:	jmp    esp
  42fa0a:	(bad)  
  42fa0b:	xchg   ecx,eax
  42fa0c:	(bad)  
  42fa0d:	(bad)  
  42fa0e:	call   FWORD PTR [ebx-0x1]
  42fa11:	inc    DWORD PTR [eax]
  42fa13:	mov    DWORD PTR ds:0xff4f53bb,esp
  42fa19:	mov    bh,BYTE PTR [ebx+0x5a]
  42fa1c:	mov    edi,edi
  42fa1e:	add    ch,cl
  42fa20:	inc    DWORD PTR [eax]
  42fa22:	inc    DWORD PTR [ebx+0x357a11fd]
  42fa28:	add    BYTE PTR [edi],ch
  42fa2a:	push   es
  42fa2b:	jge    0x42fa2c
  42fa2d:	inc    DWORD PTR [ebx-0xff96]
  42fa33:	jmp    FWORD PTR [ecx-0xac422d]
  42fa39:	add    al,cl
  42fa3b:	jp     0x42f9c6
  42fa3d:	int3   
  42fa3e:	add    BYTE PTR [ebx+0x0],al
  42fa41:	inc    DWORD PTR [ebx-0x478a0500]
  42fa47:	fadd   DWORD PTR [ebx-0x76fdfcce]
  42fa4d:	add    BYTE PTR [ebx+0xffffb3],al
  42fa53:	add    BYTE PTR [esi],ah
  42fa55:	and    ah,BYTE PTR [ebp-0x33]
  42fa58:	add    BYTE PTR [eax+edx*4-0x10000],bh
  42fa5f:	inc    edx
  42fa60:	or     esp,0xffffffff
  42fa63:	int3   
  42fa64:	jns    0x42fa54
  42fa66:	cmp    esi,eax
  42fa68:	dec    DWORD PTR [ebx]
  42fa6a:	fistp  WORD PTR [ebx+0x1ffffff]
  42fa70:	inc    DWORD PTR [ebx+0x544affcc]
  42fa76:	ins    BYTE PTR es:[edi],dx
  42fa77:	stos   DWORD PTR es:[edi],eax
  42fa78:	mov    DWORD PTR [edi],ecx
  42fa7a:	rcl    DWORD PTR [ebx],0xcc
  42fa7d:	int3   
  42fa7e:	int3   
  42fa7f:	add    eax,DWORD PTR [eax]
  42fa81:	dec    DWORD PTR [ecx-0x2b8e0900]
  42fa87:	jg     0x42fa88
  42fa89:	cs repz inc esi
  42fa8c:	add    BYTE PTR [eax],al
  42fa8e:	inc    DWORD PTR [esi]
  42fa90:	(bad)  
  42fa91:	inc    DWORD PTR [eax]
  42fa93:	add    DWORD PTR [esi-0x54],0x28
  42fa97:	jb     0x42fa99
  42fa99:	push   ebx
  42fa9a:	sbb    esi,DWORD PTR [ebx]
  42fa9c:	cmp    edi,0xffffff83
  42fa9f:	xor    BYTE PTR [eax],al
  42faa1:	add    BYTE PTR [eax],al
  42faa3:	int3   
  42faa4:	pusha  
  42faa5:	stc    
  42faa6:	push   cs
  42faa7:	nop
  42faa8:	int3   
  42faa9:	retf   
  42faaa:	aaa    
  42faab:	pop    eax
  42faac:	inc    DWORD PTR [eax]
  42faae:	inc    DWORD PTR [eax-0x33007c01]
  42fab4:	add    DWORD PTR [eax],edx
  42fab6:	dec    ecx
  42fab7:	mov    ecx,0x34f189ff
  42fabc:	inc    DWORD PTR [ebx-0x33768900]
  42fac2:	cmp    edi,0x2d
  42fac5:	pop    edi
  42fac6:	mov    esp,0x95c58335
  42facb:	jl     0x42facc
  42facd:	inc    DWORD PTR [eax]
  42facf:	mov    dl,0xff
  42fad1:	add    bh,bh
  42fad3:	xor    edi,0xffffffe8
  42fad6:	pop    es
  42fad7:	ins    BYTE PTR es:[edi],dx
  42fad8:	mov    ecx,esi
  42fada:	data16 (bad) 
  42fadc:	inc    DWORD PTR [eax]
  42fade:	(bad)  
  42fadf:	fld    QWORD PTR [ebx-0x417d0000]
  42fae5:	(bad)  
  42fae6:	iret   
  42fae7:	adc    edi,edi
  42fae9:	pushf  
  42faea:	jmp    FWORD PTR [edi]
  42faec:	dec    esp
  42faee:	add    BYTE PTR [eax],cl
  42faf0:	inc    DWORD PTR [eax]
  42faf2:	inc    DWORD PTR [eax]
  42faf4:	push   es
  42faf5:	jnp    0x42fb5d
  42faf7:	mov    bh,0xff
  42faf9:	enter  0x5790,0x83
  42fafd:	cmp    edi,0xffffffa9
  42fb00:	dec    esp
  42fb02:	(bad)  
  42fb03:	call   DWORD PTR [edi-0x9f2624]
  42fb09:	cmp    eax,0xff892afd
  42fb0e:	add    BYTE PTR [esi],ah
  42fb10:	add    DWORD PTR [eax],0xffffffff
  42fb13:	add    BYTE PTR [ecx],ch
  42fb15:	inc    ecx
  42fb16:	mov    esi,0x52e90030
  42fb1b:	(bad)  
  42fb1c:	int3   
  42fb1d:	inc    DWORD PTR [eax]
  42fb1f:	lods   eax,DWORD PTR ds:[esi]
  42fb20:	add    DWORD PTR [eax],0xffffffff
  42fb23:	mov    edx,esp
  42fb25:	test   BYTE PTR [ebx],bh
  42fb27:	xor    bh,bh
  42fb29:	add    dh,BYTE PTR [edi]
  42fb2b:	enter  0xff,0xcc
  42fb2f:	jo     0x42faba
  42fb31:	inc    DWORD PTR [ebx+0xc1224cc]
  42fb37:	mov    ds:0x7e4608ff,al
  42fb3c:	inc    DWORD PTR [ebx-0x2701]
  42fb42:	cmp    edi,0x4b
  42fb45:	dec    ecx
  42fb46:	out    0x5d,al
  42fb48:	jmp    DWORD PTR [esi-0x33760e47]
  42fb4e:	push   DWORD PTR [eax+eax*1+0x13ff83ff]
  42fb55:	push   eax
  42fb56:	(bad)  
  42fb57:	adc    eax,0x797433ff
  42fb5c:	add    BYTE PTR [eax],al
  42fb5e:	adc    DWORD PTR [edi],0xffffffff
  42fb61:	add    bh,bh
  42fb63:	call   DWORD PTR [esp+edi*4+0x12]
  42fb67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb68:	dec    DWORD PTR [eax-0xd977]
  42fb6e:	mov    DWORD PTR [eax-0x34],edx
  42fb71:	(bad)  
  42fb72:	dec    DWORD PTR [ecx-0x50ed4cc5]
  42fb78:	add    dh,al
  42fb7a:	mov    esp,0xffffff52
  42fb7f:	fs int3 
  42fb81:	inc    DWORD PTR [eax]
  42fb83:	dec    ebx
  42fb85:	sub    ch,dh
  42fb87:	(bad)  
  42fb8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb8b:	das    
  42fb8c:	add    DWORD PTR [eax],0x0
  42fb8f:	add    BYTE PTR cs:[eax],al
  42fb92:	inc    DWORD PTR [eax]
  42fb94:	xlat   BYTE PTR ds:[ebx]
  42fb95:	scas   eax,DWORD PTR es:[edi]
  42fb96:	xor    edx,DWORD PTR [esi+0x0]
  42fb99:	(bad)  
  42fb9b:	cdq    
  42fb9c:	int3   
  42fb9d:	inc    DWORD PTR [eax]
  42fb9f:	xchg   ecx,eax
  42fba0:	mov    edi,edi
  42fba2:	(bad)  
  42fba3:	jmp    FWORD PTR [ebp-0x63a564]
  42fba9:	push   0xffffffe6
  42fbab:	adc    ecx,esp
  42fbad:	(bad)  
  42fbae:	push   DWORD PTR [ebp+0x0]
  42fbb1:	inc    DWORD PTR [eax]
  42fbb3:	mov    DWORD PTR ds:0xff34ba4b,esp
  42fbb9:	sbb    eax,0xcc837bea
  42fbbe:	or     esi,0x0
  42fbc1:	add    bh,bh
  42fbc3:	call   DWORD PTR [eax]
  42fbc5:	sub    BYTE PTR [ecx+0x39030076],dl
  42fbcb:	popa   
  42fbcc:	add    ah,cl
  42fbce:	add    BYTE PTR [ebx-0x7c7d0000],bl
  42fbd4:	das    
  42fbd5:	hlt    
  42fbd6:	(bad)  
  42fbd7:	in     eax,0xff
  42fbd9:	mov    edi,ebx
  42fbdb:	pop    ebp
  42fbdc:	add    BYTE PTR [eax],al
  42fbde:	and    DWORD PTR [edx],0xffffffff
  42fbe1:	add    BYTE PTR [eax],al
  42fbe3:	add    dl,al
  42fbe5:	xor    ebp,DWORD PTR [ebx]
  42fbe7:	jae    0x42fbe8
  42fbe9:	mov    edx,0x83ffb392
  42fbee:	dec    DWORD PTR [ebx+0x0]
  42fbf1:	(bad)  
  42fbf2:	inc    DWORD PTR [eax]
  42fbf4:	dec    esp
  42fbf5:	mov    esi,0xa2ff8c38
  42fbfa:	iret   
  42fbfb:	add    ah,cl
  42fbfd:	add    ah,cl
  42fbff:	ret    0x83ff
  42fc02:	(bad)  
  42fc03:	push   DWORD PTR [eax+0x6b1718]
  42fc09:	cmp    ebx,DWORD PTR [ebx-0x76ff65]
  42fc0f:	fimul  DWORD PTR [ecx+0x183ffcc]
  42fc15:	and    eax,0x9ff5188
  42fc1a:	pushf  
  42fc1b:	pop    ebx
  42fc1c:	inc    DWORD PTR [eax]
  42fc1e:	add    BYTE PTR [eax+eax*1-0x1],ch
  42fc22:	(bad)  
  42fc23:	jmp    FWORD PTR [edi]
  42fc25:	bound  ebx,QWORD PTR [ecx+ecx*4]
  42fc28:	add    BYTE PTR [ecx],bh
  42fc2a:	loop   0x42fbf2
  42fc2c:	add    bh,bh
  42fc2e:	inc    DWORD PTR [ebp+0x0]
  42fc31:	(bad)  
  42fc32:	(bad)  
  42fc33:	(bad)  
  42fc34:	cmp    eax,0xff18016c
  42fc39:	mul    DWORD PTR [ebx+0x54]
  42fc3c:	inc    DWORD PTR [eax]
  42fc3e:	call   FWORD PTR [ebp-0x1]
  42fc41:	(bad)  
  42fc42:	inc    DWORD PTR [ebx-0x269fc6c3]
  42fc48:	jmp    esi
  42fc4a:	push   ss
  42fc4b:	scas   eax,DWORD PTR es:[edi]
  42fc4c:	add    DWORD PTR [ebx+0xff95ff],0xffffffff
  42fc53:	or     DWORD PTR ds:0xe16e3d,0xffffffd3
  42fc5a:	retf   0xffd4
  42fc5d:	int3   
  42fc5e:	mov    DWORD PTR [eax-0x100],eax
  42fc64:	pop    ebx
  42fc65:	(bad)  
  42fc66:	popa   
  42fc67:	sub    DWORD PTR [eax],eax
  42fc69:	jne    0x42fc59
  42fc6b:	test   bh,bh
  42fc6d:	(bad)  
  42fc6e:	call   FWORD PTR [ebp-0x7d]
  42fc74:	mov    ds:0xcca76209,al
  42fc79:	lds    ebp,FWORD PTR [esi-0x7c337cdd]
  42fc7f:	mov    ebx,0xff0000ff
  42fc84:	jmp    DWORD PTR [esi]
  42fc86:	sub    dh,BYTE PTR [eax-0xac4bf00]
  42fc8c:	cmp    edi,0xffffffff
  42fc8f:	push   ebp
  42fc90:	inc    DWORD PTR [eax]
  42fc92:	(bad)  
  42fc93:	jmp    ecx
  42fc95:	jne    0x42fcdd
  42fc97:	into   
  42fc98:	add    BYTE PTR [edi],al
  42fc9a:	sbb    bl,BYTE PTR [esi]
  42fc9c:	add    bh,bh
  42fc9e:	push   DWORD PTR [esi]
  42fca0:	dec    DWORD PTR [ecx-0x40be007d]
  42fca6:	ss sar edi,cl
  42fca9:	loop   0x42fcdd
  42fcab:	jecxz  0x42fc30
  42fcad:	inc    DWORD PTR [eax]
  42fcaf:	lods   al,BYTE PTR ds:[esi]
  42fcb0:	inc    DWORD PTR [eax]
  42fcb2:	inc    DWORD PTR [eax]
  42fcb4:	mov    al,0x85
  42fcb6:	iret   
  42fcb7:	arpl   WORD PTR [eax],ax
  42fcb9:	fs pop ebx
  42fcbb:	fmul   st,st(4)
  42fcbd:	inc    DWORD PTR [ebx+0xfffffd]
  42fcc3:	cmp    DWORD PTR [edx-0x6b],0x3a
  42fcc7:	icebp  
  42fcc8:	mov    DWORD PTR [ecx-0x7cff66f2],ebx
  42fcce:	int3   
  42fccf:	popf   
  42fcd0:	(bad)  
  42fcd1:	dec    esp
  42fcd3:	add    BYTE PTR [ecx-0xc],dl
  42fcd6:	stos   DWORD PTR es:[edi],eax
  42fcd7:	imul   ecx,esp,0x83f92dcf
  42fcdd:	add    BYTE PTR [eax],al
  42fcdf:	cmc    
  42fce0:	inc    DWORD PTR [ebx+0x74a0ffff]
  42fce6:	(bad)  
  42fce7:	cli    
  42fce8:	add    BYTE PTR [edx+edi*2-0xffffc7],ch
  42fcef:	mov    al,0xff
  42fcf1:	add    bh,bh
  42fcf3:	add    BYTE PTR [edx-0x21efe1],ch
  42fcf9:	std    
  42fcfa:	inc    esp
  42fcfb:	pop    eax
  42fcfc:	add    BYTE PTR [ebx+0xffd0ff],al
  42fd02:	add    BYTE PTR [eax],al
  42fd04:	pushf  
  42fd05:	ds xchg ebx,eax
  42fd07:	mov    DWORD PTR [eax],0xdaf7a6
  42fd0d:	inc    DWORD PTR [eax]
  42fd0f:	sub    al,0x83
  42fd11:	dec    DWORD PTR [ecx-0x7d20ca01]
  42fd17:	(bad)  
  42fd18:	jmp    FWORD PTR [edx]
  42fd1a:	loop   0x42fce3
  42fd1c:	mov    edi,edi
  42fd1e:	call   FWORD PTR [edi+0x0]
  42fd21:	or     esp,0x0
  42fd24:	call   0xdd27:0xffd20386
  42fd2b:	jmp    0x42fd2c
  42fd2d:	add    BYTE PTR [ebx-0x7685],al
  42fd33:	(bad)  
  42fd34:	cld    
  42fd35:	inc    edx
  42fd36:	add    BYTE PTR [edx],ch
  42fd38:	add    dl,bh
  42fd3a:	xchg   esp,eax
  42fd3b:	dec    esp
  42fd3c:	cmp    edi,0x0
  42fd3f:	idiv   bh
  42fd41:	inc    DWORD PTR [ebx-0x45f25a00]
  42fd47:	in     eax,dx
  42fd48:	jmp    FWORD PTR [esi-0x64dc]
  42fd4e:	adc    DWORD PTR [eax+eax*1],0xffffff83
  42fd52:	add    bh,bh
  42fd54:	int    0x88
  42fd56:	mov    ebp,0xc5df83a3
  42fd5b:	mov    dl,0x0
  42fd5d:	(bad)  
  42fd5e:	(bad)  
  42fd5f:	jmp    0x28ba:0x8383ff
  42fd66:	imul   ebx,DWORD PTR [ebx+0x1183f889],0x0
  42fd6d:	add    bh,bh
  42fd6f:	mov    ds:0x83ff8300,al
  42fd74:	push   esi
  42fd75:	and    al,0x22
  42fd77:	jl     0x42fd78
  42fd79:	cs popf 
  42fd7b:	pop    ecx
  42fd7c:	add    BYTE PTR [eax],al
  42fd7e:	(bad)  
  42fd7f:	mov    esi,0xff00ff00
  42fd84:	pop    es
  42fd85:	cmc    
  42fd86:	jns    0x42fd44
  42fd88:	sub    DWORD PTR [edx+0x7e],0x36
  42fd8c:	inc    DWORD PTR [eax]
  42fd8e:	call   DWORD PTR [edi+0xffff]
  42fd94:	add    eax,0x70de37
  42fd99:	fnstcw WORD PTR [ebx+0xff8303]
  42fd9f:	fild   WORD PTR [eax]
  42fda1:	inc    DWORD PTR [eax]
  42fda3:	push   DWORD PTR [esi-0x33add7db]
  42fda9:	mov    edi,0x89ff3a4c
  42fdae:	(bad)  
  42fdaf:	fadd   QWORD PTR [eax]
  42fdb1:	int3   
  42fdb2:	or     esp,0x2e
  42fdb5:	push   edi
  42fdb6:	and    DWORD PTR [eax],ecx
  42fdb8:	mov    ebp,esi
  42fdba:	push   edx
  42fdbb:	retf   
  42fdbc:	int3   
  42fdbd:	add    BYTE PTR [eax],al
  42fdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fdc0:	mov    edi,edi
  42fdc2:	add    BYTE PTR [ecx-0x223dc766],cl
  42fdc8:	adc    DWORD PTR [edi],0x2
  42fdcb:	jae    0x42fdcd
  42fdcd:	int3   
  42fdce:	add    BYTE PTR [esi+0xffff],dh
  42fdd4:	(bad)  
  42fdd5:	sbb    DWORD PTR [eax-0x7bb70012],edi
  42fddb:	loopne 0x42fddd
  42fddd:	add    BYTE PTR [eax],al
  42fddf:	bnd jb 0x42fd75
  42fde2:	mov    ecx,0x8983a400
  42fde7:	mov    DWORD PTR [esi-0x74],esp
  42fdea:	(bad)  
  42fdeb:	mov    DWORD PTR [eax+0x2500ffff],ebx
  42fdf1:	fiadd  WORD PTR [ecx-0x1]
  42fdf4:	loop   0x42fdf6
  42fdf6:	add    DWORD PTR [ebx-0x85e6f8],0x49
  42fdfd:	or     DWORD PTR [ecx+0x2b48cecc],0xffffffcc
  42fe04:	and    bh,bh
  42fe06:	add    BYTE PTR [eax],al
  42fe08:	adc    DWORD PTR [edx],ecx
  42fe0a:	jmp    0x1789:0xff006400
  42fe11:	mov    edx,0x6bffd7
  42fe16:	mov    edi,edi
  42fe18:	retf   0x6d9f
  42fe1b:	add    DWORD PTR [ecx],0x0
  42fe1e:	add    DWORD PTR [ebx-0x3ae32],0x42
  42fe25:	cmp    edi,0x0
  42fe28:	outs   dx,DWORD PTR ds:[esi]
  42fe29:	in     al,dx
  42fe2a:	xor    esp,ecx
  42fe2c:	fiadd  DWORD PTR [eax]
  42fe2e:	add    bh,bh
  42fe30:	idiv   edx
  42fe32:	repz inc DWORD PTR [eax-0x64330001]
  42fe39:	jg     0x42fe2a
  42fe3b:	call   DWORD PTR [edx]
  42fe3d:	int3   
  42fe3e:	add    bh,bh
  42fe40:	jb     0x42fe72
  42fe42:	into   
  42fe43:	mov    DWORD PTR [eax+eax*1-0x5e4c0001],esp
  42fe4a:	fwait
  42fe4b:	add    BYTE PTR [ebx-0x1],al
  42fe4e:	(bad)  
  42fe4f:	dec    DWORD PTR [edx+eax*1]
  42fe52:	mov    ?,edi
  42fe54:	mov    ecx,0x7e8300ff
  42fe59:	adc    eax,DWORD PTR [edi+edi*8+0x4d]
  42fe5d:	dec    esp
  42fe5f:	push   DWORD PTR [edx+ebp*1-0xe]
  42fe63:	dec    DWORD PTR [eax+eax*1]
  42fe66:	int3   
  42fe67:	int3   
  42fe68:	iret   
  42fe69:	rol    DWORD PTR [ecx+0xcc6e00],1
  42fe6f:	jmp    DWORD PTR [esi]
  42fe71:	sub    al,0x79
  42fe73:	(bad)  
  42fe74:	sti    
  42fe75:	inc    DWORD PTR [ebx+0x3f7cdc00]
  42fe7b:	dec    DWORD PTR [ebx+eax*4+0x3bfa00cc]
  42fe82:	loope  0x42fe07
  42fe84:	add    bh,bh
  42fe86:	dec    DWORD PTR [ecx-0x765f6d]
  42fe8c:	retf   
  42fe8d:	dec    esp
  42fe8f:	jmp    DWORD PTR [edi+eax*1]
  42fe92:	jne    0x42fe93
  42fe94:	out    0xff,eax
  42fe96:	(bad)  
  42fe97:	(bad)  
  42fe98:	fnstenv [eax-0x2e333a]
  42fe9e:	add    BYTE PTR [ebx-0x7ce34e84],al
  42fea4:	mov    WORD PTR [ebx+0x27d3ffff],es
  42feaa:	sbb    eax,DWORD PTR [eax]
  42feac:	pusha  
  42fead:	inc    DWORD PTR [eax]
  42feaf:	add    BYTE PTR [eax],ch
  42feb1:	xchg   esp,eax
  42feb2:	push   edx
  42feb3:	add    BYTE PTR [ebx+eax*4],bl
  42feb6:	inc    DWORD PTR [eax]
  42feb8:	(bad)  
  42feb9:	leave  
  42feba:	rol    BYTE PTR [eax],cl
  42febc:	xor    al,0xff
  42febe:	dec    esp
  42fec0:	cmp    ecx,esi
  42fec2:	jb     0x42fec3
  42fec4:	int    0xff
  42fec6:	(bad)  
  42fec7:	inc    DWORD PTR [edi-0x12]
  42feca:	pop    ss
  42fecb:	(bad)  
  42fecc:	jl     0x42fe51
  42fece:	add    ah,cl
  42fed0:	push   ss
  42fed1:	retf   
  42fed2:	into   
  42fed3:	jmp    FWORD PTR [edx-0x34]
  42fed6:	add    BYTE PTR [ecx-0xa0d267],cl
  42fedc:	mov    bh,0xcc
  42fede:	add    BYTE PTR [ecx+0x46ecce],cl
  42fee4:	or     al,0xff
  42fee6:	mov    esp,ecx
  42fee8:	in     al,dx
  42fee9:	xchg   ebp,eax
  42feea:	mov    bh,bh
  42feec:	imul   eax,DWORD PTR [eax],0xffffffff
  42feef:	(bad)  
  42fef0:	jmp    DWORD PTR [eax+eiz*1]
  42fef3:	sub    DWORD PTR [edi+0x418300ff],0xffffffb9
  42fefa:	into   
  42fefb:	int3   
  42fefc:	int3   
  42fefd:	(bad)  
  42fefe:	(bad)  
  42feff:	dec    DWORD PTR [ebp-0x2e00c3a8]
  42ff05:	int3   
  42ff06:	cmp    edi,0x7c
  42ff09:	mov    ah,0xf3
  42ff0b:	call   ebx
  42ff0d:	mov    edi,edi
  42ff0f:	call   DWORD PTR [edi]
  42ff11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff12:	mov    esi,0x83005aff
  42ff17:	add    BYTE PTR [ecx+0x57ff6d04],ah
  42ff1d:	add    BYTE PTR [ebx-0x57938777],al
  42ff23:	add    BYTE PTR [edi],dl
  42ff25:	add    bh,bh
  42ff27:	call   DWORD PTR [edx]
  42ff29:	imul   esi,DWORD PTR [eax+eax*1+0xffffe7],0xffffff9d
  42ff31:	clc    
  42ff32:	pop    es
  42ff33:	mov    ecx,ebp
  42ff35:	inc    DWORD PTR [ebx-0x10738c01]
  42ff3b:	jmp    FWORD PTR [edi+edi*8+0x5a97cc00]
  42ff42:	arpl   WORD PTR [eax],ax
  42ff44:	mov    edi,?
  42ff46:	(bad)  
  42ff47:	(bad)  
  42ff48:	stc    
  42ff49:	(bad)  
  42ff4a:	cmp    DWORD PTR [eax],eax
  42ff4c:	push   edx
  42ff4d:	int3   
  42ff4e:	mov    DWORD PTR [ebx+0x9576c6],eax
  42ff54:	bound  eax,QWORD PTR [eax]
  42ff56:	inc    DWORD PTR [ebx+0x287a6]
  42ff5c:	ret    0x8389
  42ff5f:	jmp    FWORD PTR [edi-0x3e]
  42ff62:	sbb    DWORD PTR [ebx+0xffcce7],eax
  42ff68:	pop    ecx
  42ff69:	sahf   
  42ff6a:	pop    esi
  42ff6b:	mov    DWORD PTR [eax+eax*1-0x32430001],ebx
  42ff72:	mov    ch,0xff
  42ff74:	xor    al,0xff
  42ff76:	inc    DWORD PTR [ebx-0x335559b5]
  42ff7c:	cmc    
  42ff7d:	inc    DWORD PTR [eax]
  42ff7f:	add    BYTE PTR [ecx],cl
  42ff81:	mov    ds:0xeff5d,eax
  42ff86:	cmp    edi,0x1e
  42ff89:	stos   BYTE PTR es:[edi],al
  42ff8a:	dec    esp
  42ff8b:	add    BYTE PTR [ecx],ch
  42ff8d:	(bad)  
  42ff8e:	inc    DWORD PTR [eax]
  42ff90:	or     eax,0x33832be6
  42ff95:	add    bh,bh
  42ff97:	add    BYTE PTR [edx-0x6c],al
  42ff9a:	out    0x0,al
  42ff9c:	mov    edi,edi
  42ff9e:	add    bh,bh
  42ffa0:	(bad)  
  42ffa1:	cmp    DWORD PTR [ebx+0x1000],eax
  42ffa7:	add    BYTE PTR [ebx],al
  42ffa9:	dec    ebx
  42ffaa:	rol    DWORD PTR [eax],0xf
  42ffad:	inc    DWORD PTR [ebx-0x1b023e00]
  42ffb3:	(bad)  
  42ffb4:	(bad)  
  42ffb6:	inc    DWORD PTR [eax]
  42ffb8:	retf   
  42ffb9:	inc    esi
  42ffba:	out    dx,al
  42ffbb:	add    ecx,0xffffff83
  42ffbe:	add    bh,bh
  42ffc0:	(bad)  
  42ffc2:	imul   eax,DWORD PTR [eax],0xffffffb8
  42ffc5:	dec    DWORD PTR [ecx-0x6a1b0e01]
  42ffcb:	add    BYTE PTR [edi],ch
  42ffcd:	int3   
  42ffce:	add    bh,bh
  42ffd0:	cmp    eax,0x8bff53ff
  42ffd5:	(bad)  
  42ffd6:	(bad)  
  42ffd7:	dec    DWORD PTR [esi+0xc]
  42ffda:	fdivr  st,st(7)
  42ffdc:	arpl   di,di
  42ffde:	add    BYTE PTR [ebx+0x6d5d4d],al
  42ffe4:	or     al,0xcc
  42ffe6:	add    bh,bh
  42ffe8:	jmp    0x6942c204
  42ffed:	int3   
  42ffee:	cmp    edi,0x17
  42fff1:	nop
  42fff2:	aam    0x0
  42fff4:	hlt    
  42fff5:	add    bh,bh
  42fff7:	(bad)  
  42fff8:	cmp    al,0xc7
  42fffa:	out    0x0,eax
  42fffc:	pop    ebx
  42fffd:	(bad)  
  42fffe:	inc    DWORD PTR [eax]
  430000:	(bad)  
  430001:	pusha  
  430002:	inc    edi
  430003:	inc    DWORD PTR [ecx]
  430005:	add    DWORD PTR [eax],0x0
  430008:	daa    
  430009:	cmc    
  43000a:	iret   
  43000b:	add    BYTE PTR [esi],cl
  43000d:	inc    DWORD PTR [eax]
  43000f:	jmp    DWORD PTR [edi]
  430011:	aad    0xa2
  430013:	(bad)  
  430014:	out    dx,eax
  430015:	add    bh,bh
  430017:	add    al,ch
  430019:	cli    
  43001a:	mov    ecx,0xbeff
  43001f:	add    BYTE PTR [ebp-0x2d],bh
  430022:	arpl   di,di
  430024:	mov    ecx,0x1bff89ff
  430029:	or     al,0x26
  43002b:	mov    DWORD PTR [eax-0x77],ecx
  43002e:	(bad)  
  43002f:	dec    ebp
  430031:	pop    esp
  430032:	sub    DWORD PTR [eax],eax
  430034:	leave  
  430035:	(bad)  
  430036:	(bad)  
  430037:	jmp    FWORD PTR [edx]
  430039:	ss call 0x1400:0xccee00
  430041:	jb     0x430064
  430043:	int3   
  430044:	int    0xcc
  430046:	dec    esp
  430048:	pop    ds
  430049:	xchg   DWORD PTR [ebp-0x33ff3a34],edx
  43004f:	jmp    DWORD PTR [edx+edi*4+0x378912]
  430056:	(bad)  
  430057:	dec    DWORD PTR [edx]
  430059:	push   cs
  43005a:	sbb    eax,0xcc3800
  43005f:	inc    DWORD PTR [eax]
  430061:	(bad)  
  430062:	call   0x1427533
  430067:	int3   
  430068:	push   esi
  430069:	or     DWORD PTR [esi+0x0],esp
  43006c:	push   edx
  43006d:	inc    DWORD PTR [eax]
  43006f:	sbb    ecx,0xffffff91
  430072:	bound  eax,QWORD PTR [eax]
  430074:	jno    0x430076
  430076:	add    bh,bh
  430078:	hlt    
  430079:	ds pop edi
  43007b:	push   esi
  43007d:	dec    DWORD PTR [ecx+0x3c5ac900]
  430083:	inc    DWORD PTR [esi+0x0]
  430086:	add    BYTE PTR [eax],al
  430088:	jmp    0x430098
  43008a:	sbb    BYTE PTR [ecx-0x7676fffc],cl
  430090:	stos   DWORD PTR es:[edi],eax
  430091:	push   ecx
  430092:	aam    0xff
  430094:	adc    DWORD PTR [eax],eax
  430096:	dec    DWORD PTR [ecx+0xfaf60a]
  43009c:	push   eax
  43009d:	inc    DWORD PTR [eax]
  43009f:	add    BYTE PTR [edi+0x5c],cl
  4300a2:	jns    0x4300a3
  4300a4:	fwait
  4300a5:	int3   
  4300a6:	dec    esp
  4300a8:	adc    ah,BYTE PTR [ebx+0x33]
  4300ab:	dec    DWORD PTR [ecx-0x3eff0001]
  4300b1:	push   esp
  4300b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300b3:	add    BYTE PTR [edi+0xb89ff89],dh
  4300b9:	nop
  4300ba:	pop    ss
  4300bb:	call   FWORD PTR [ebx]
  4300bd:	add    bh,bh
  4300bf:	int3   
  4300c0:	or     DWORD PTR [edx+0x44],esp
  4300c3:	call   DWORD PTR [eax+eax*1]
  4300c6:	add    BYTE PTR [eax],al
  4300c8:	inc    eax
  4300c9:	outs   dx,DWORD PTR ds:[esi]
  4300ca:	inc    esi
  4300cb:	add    BYTE PTR [ecx+0x2effff83],dh
  4300d1:	lock test DWORD PTR [eax],eax
  4300d4:	push   eax
  4300d5:	(bad)  
  4300d6:	inc    DWORD PTR [eax]
  4300d8:	pop    ss
  4300d9:	xor    eax,0xff10ffe1
  4300de:	dec    esp
  4300e0:	retf   0x282c
  4300e3:	call   DWORD PTR [eax+eax*1+0x325aff83]
  4300ea:	mov    DWORD PTR [eax],0xffffffa4
  4300f0:	lds    edi,FWORD PTR [eax+0x2f]
  4300f3:	int3   
  4300f4:	scas   al,BYTE PTR es:[edi]
  4300f5:	inc    DWORD PTR [eax]
  4300f7:	add    BYTE PTR [eax-0x6009949],ch
  4300fd:	add    BYTE PTR [eax],al
  4300ff:	jmp    FWORD PTR [edx+eiz*2-0x7c650025]
  430106:	int3   
  430107:	add    BYTE PTR [edi-0x71],ah
  43010a:	(bad)  
  43010b:	int3   
  43010c:	addr16 cmp edi,0xffffffff
  430110:	sub    al,BYTE PTR [esi-0x76917ca9]
  430116:	add    BYTE PTR [ecx-0x3382bbc6],cl
  43011c:	or     BYTE PTR [eax],al
  43011e:	mov    DWORD PTR [eax],eax
  430120:	or     edi,ebp
  430122:	mov    DWORD PTR [eax],eax
  430124:	js     0x430125
  430126:	add    DWORD PTR [ebx-0xe0d17f],0xffffff9f
  43012d:	inc    DWORD PTR [eax]
  43012f:	dec    ecx
  430131:	je     0x43014b
  430133:	add    bh,bh
  430135:	add    DWORD PTR [eax],0xffffff83
  430138:	mov    dl,0x5d
  43013a:	out    0x83,al
  43013c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43013d:	add    BYTE PTR [ecx-0x135dff01],cl
  430143:	int3   
  430144:	out    0xff,eax
  430146:	add    BYTE PTR [ecx-0x5ddaf1],cl
  43014c:	sub    cl,ah
  43014e:	(bad)  
  43014f:	call   DWORD PTR [ecx+0x4dffe2d5]
  430155:	int3   
  430156:	add    bh,bh
  430158:	pop    esi
  430159:	dec    eax
  43015a:	mov    WORD PTR [ebx-0xffff3d],es
  430160:	std    
  430161:	inc    ebp
  430162:	mov    edi,edi
  430164:	mov    eax,DWORD PTR [eax]
  430166:	(bad)  
  430167:	push   DWORD PTR [eax+0x64ffe0a0]
  43016d:	(bad)  
  43016e:	(bad)  
  43016f:	jmp    FWORD PTR [edi+0x4fff1ae4]
  430175:	add    bh,bh
  430177:	(bad)  
  430178:	cmp    eax,0x99ff83ad
  43017d:	inc    DWORD PTR [ebx+0x52f672ff]
  430183:	mov    esi,edi
  430185:	add    bh,bh
  430187:	push   DWORD PTR [ecx]
  430189:	inc    esi
  43018a:	out    0xcc,al
  43018c:	out    dx,al
  43018d:	(bad)  
  43018e:	dec    esp
  430190:	icebp  
  430191:	pop    ebp
  430192:	inc    ebp
  430193:	cmp    DWORD PTR [ebx+0x0],0xffffff83
  430197:	int3   
  430198:	int3   
  430199:	pop    edi
  43019a:	imul   edi,edi,0xff8383e0
  4301a0:	xchg   edi,eax
  4301a1:	sar    dl,0xff
  4301a4:	add    bh,bh
  4301a6:	add    ah,cl
  4301a8:	cli    
  4301a9:	cld    
  4301aa:	ud0    ecx,DWORD PTR [eax+eax*1]
  4301ae:	(bad)  
  4301af:	(bad)  
  4301b0:	mov    edi,0xa3004aad
  4301b5:	(bad)  
  4301b6:	inc    DWORD PTR [eax]
  4301b8:	shl    BYTE PTR [ebx],cl
  4301ba:	outs   dx,BYTE PTR ds:[esi]
  4301bb:	int3   
  4301bc:	iret   
  4301bd:	mov    DWORD PTR [ecx+0x68bfb4cc],ecx
  4301c3:	inc    DWORD PTR [eax]
  4301c5:	int3   
  4301c6:	inc    DWORD PTR [eax]
  4301c8:	mov    bh,BYTE PTR [esi-0x7b7c40]
  4301ce:	inc    DWORD PTR [eax]
  4301d0:	jo     0x430232
  4301d2:	ins    BYTE PTR es:[edi],dx
  4301d3:	adc    DWORD PTR [edx],0xffffff83
  4301d6:	inc    DWORD PTR [eax]
  4301d8:	jg     0x4301f4
  4301da:	and    bh,bh
  4301dc:	outs   dx,DWORD PTR ds:[esi]
  4301dd:	dec    esp
  4301df:	add    BYTE PTR [ebx],cl
  4301e1:	cs sbb ah,cl
  4301e4:	hlt    
  4301e5:	add    bh,bh
  4301e7:	mov    ecx,edx
  4301e9:	and    eax,0xff1200c9
  4301ee:	add    DWORD PTR [eax],0xd
  4301f1:	pop    ecx
  4301f2:	mov    edx,0xff1300
  4301f7:	add    BYTE PTR [ecx-0x22007679],ah
  4301fd:	inc    DWORD PTR [eax]
  4301ff:	dec    ebp
  430201:	icebp  
  430202:	dec    edi
  430203:	and    DWORD PTR [ecx-0x6000001],0xfffffff2
  43020a:	and    bh,bh
  43020c:	jg     0x43020d
  43020e:	add    bh,bh
  430210:	xor    edx,DWORD PTR [edi-0x3333ffad]
  430216:	add    BYTE PTR [eax],al
  430218:	mov    ds:0x3000f79d,al
  43021d:	mov    DWORD PTR [ebx-0x7b322b01],eax
  430223:	call   DWORD PTR [ecx]
  430225:	int3   
  430226:	add    bh,bh
  430228:	neg    DWORD PTR [ebp+ebp*1-0x7d]
  43022c:	jae    0x43022e
  43022e:	add    bh,bh
  430230:	cs xor eax,0xff6100dc
  430236:	inc    DWORD PTR [eax]
  430238:	loopne 0x43025a
  43023a:	cmp    bh,bh
  43023c:	mov    edi,0x56cc00ff
  430241:	(bad)  
  430242:	jmp    FWORD PTR fs:[edi+edi*8+0x0]
  430247:	(bad)  
  430248:	cmp    DWORD PTR [esi+eax*2+0xff5383],esi
  43024f:	jmp    DWORD PTR [edi]
  430251:	sbb    BYTE PTR [edi+edi*8+0xffffcc],cl
  430258:	xchg   edi,eax
  430259:	shl    DWORD PTR [ecx],cl
  43025b:	add    BYTE PTR [edx+0x0],ah
  43025e:	inc    DWORD PTR [eax]
  430260:	ss pushf 
  430262:	mov    ds:0xff000900,al
  430267:	add    BYTE PTR [edi-0x11],bl
  43026a:	xchg   ecx,eax
  43026b:	jmp    DWORD PTR [edi+0x0]
  43026e:	add    bh,bh
  430270:	(bad)  
  430271:	aad    0xbb
  430273:	jmp    DWORD PTR [edx]
  430275:	(bad)  
  430276:	inc    DWORD PTR [eax]
  430278:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  43027a:	jb     0x43027b
  43027c:	enter  0xff,0x0
  430280:	lods   eax,DWORD PTR ds:[esi]
  430281:	scas   al,BYTE PTR es:[edi]
  430282:	xchg   DWORD PTR [eax],eax
  430284:	mov    dl,0x83
  430286:	(bad)  
  430287:	jmp    edx
  430289:	inc    ecx
  43028a:	sub    bh,bh
  43028c:	into   
  43028d:	inc    DWORD PTR [ebx+0x4f002b00]
  430293:	(bad)  
  430294:	cmp    bh,bh
  430296:	add    bh,bh
  430298:	dec    esi
  430299:	adc    eax,DWORD PTR [edi]
  43029b:	int3   
  43029c:	cmp    bh,bh
  43029e:	or     DWORD PTR [ecx-0x593888],0xffffffdd
  4302a5:	add    BYTE PTR [eax],al
  4302a7:	xor    DWORD PTR [edi-0x32ffde06],0xffffffff
  4302ae:	add    bh,bh
  4302b0:	sub    dl,0xe7
  4302b3:	push   DWORD PTR [edi-0x7d]
  4302b6:	inc    DWORD PTR [ebx+0x96bfae]
  4302bc:	push   cs
  4302bd:	add    BYTE PTR [ebx+0x5b468500],al
  4302c3:	push   DWORD PTR [eax-0x7676ff7d]
  4302c9:	fwait
  4302ca:	pop    esi
  4302cb:	or     DWORD PTR [ebp-0x5933ff01],0x57
  4302d2:	ret    
  4302d3:	xor    DWORD PTR [edi-0x1],0x0
  4302d7:	call   FWORD PTR [ebx-0x6d009c7d]
  4302dd:	add    ah,cl
  4302df:	adc    edx,0xfffffff4
  4302e2:	outs   dx,BYTE PTR ds:[esi]
  4302e3:	mov    DWORD PTR [edi+edi*8],ebx
  4302e6:	(bad)  
  4302e7:	call   FWORD PTR [esp+eax*2-0x97c9b]
  4302ee:	int3   
  4302ef:	add    BYTE PTR [ebx+0x3e],bl
  4302f2:	and    ah,cl
  4302f4:	ins    DWORD PTR es:[edi],dx
  4302f5:	add    BYTE PTR [eax],al
  4302f7:	mov    eax,esp
  4302f9:	call   0x83940369
  4302fe:	(bad)  
  4302ff:	dec    DWORD PTR [edx-0x387c8674]
  430305:	inc    DWORD PTR [eax]
  430307:	add    BYTE PTR [edi+0x17ff1708],dl
  43030d:	int3   
  43030e:	int3   
  43030f:	inc    DWORD PTR [edx-0x69]
  430312:	fadd   QWORD PTR [eax]
  430314:	xchg   esi,eax
  430315:	add    bh,bh
  430317:	adc    esp,0xfffffff4
  43031a:	inc    ebp
  43031b:	add    BYTE PTR [ebp-0x34ff0077],ah
  430321:	int    0x98
  430323:	add    BYTE PTR [eax+eax*1-0x36d0001],al
  43032a:	mov    DWORD PTR [ecx-0x7c81],ecx
  430330:	jo     0x4302fb
  430332:	repz add al,dh
  430335:	add    BYTE PTR [eax],al
  430337:	xor    DWORD PTR [eax],0xffffffb8
  43033a:	jbe    0x43033c
  43033c:	(bad)  
  43033d:	(bad)  
  43033e:	dec    DWORD PTR [ecx+0x2a5515]
  430344:	dec    ebx
  430345:	int3   
  430346:	mov    edi,edi
  430348:	dec    eax
  430349:	std    
  43034a:	add    BYTE PTR [ebx-0x7c3300f4],al
  430350:	jne    0x4303bc
  430352:	out    0xff,al
  430354:	popa   
  430355:	mov    edi,edi
  430357:	sbb    edx,0xffffffbe
  43035a:	mov    al,0x0
  43035c:	mov    eax,ds:0xbc83ffcc
  430361:	adc    ebx,DWORD PTR [ebx]
  430363:	mov    DWORD PTR [ecx-0x3100ff01],ebx
  430369:	(bad)  
  43036a:	add    BYTE PTR gs:[esi-0x4276ff34],bl
  430371:	sbb    DWORD PTR [ebx-0x7c7c3c01],edi
  430377:	push   DWORD PTR [esp+ebp*4+0xdf0075]
  43037e:	add    bh,bh
  430380:	and    al,0x77
  430382:	mov    edi,edi
  430384:	xchg   DWORD PTR [ebx+0x7e4583ff],eax
  43038a:	rol    DWORD PTR [eax],0x85
  43038d:	inc    DWORD PTR [eax]
  43038f:	inc    DWORD PTR [edi-0x10330bd4]
  430395:	(bad)  
  430396:	dec    esp
  430398:	inc    eax
  430399:	push   cs
  43039a:	idiv   edi
  43039c:	jp     0x430321
  43039e:	add    DWORD PTR [eax],0x69
  4303a1:	sub    al,0x1b
  4303a3:	call   DWORD PTR [esi+0x0]
  4303a6:	(bad)  
  4303a7:	dec    edi
  4303a9:	imul   ebx,DWORD PTR [ebx-0x1],0x83ffffb6
  4303b0:	sub    dl,BYTE PTR [edx+0x8]
  4303b3:	int3   
  4303b4:	mov    eax,ds:0xb3ffffcc
  4303b9:	ja     0x4303fb
  4303bb:	mov    ebx,edx
  4303bd:	inc    DWORD PTR [eax]
  4303bf:	add    cl,dl
  4303c1:	inc    ecx
  4303c2:	cs add ecx,0xffffff83
  4303c6:	add    BYTE PTR [eax],al
  4303c8:	gs jg  0x430367
  4303cb:	int3   
  4303cc:	dec    esp
  4303cd:	(bad)  
  4303ce:	inc    DWORD PTR [eax]
  4303d0:	inc    esp
  4303d1:	xchg   BYTE PTR [edx],ah
  4303d3:	dec    DWORD PTR [esi+0x59ff00ff]
  4303d9:	cld    
  4303da:	adc    edi,edi
  4303dc:	repnz inc DWORD PTR [ebx-0x3a975301]
  4303e3:	adc    DWORD PTR ds:0xfbff89ff,0xffffffd9
  4303ea:	scas   eax,DWORD PTR es:[edi]
  4303eb:	push   edi
  4303ed:	dec    DWORD PTR [ecx+0x220fc783]
  4303f3:	call   esi
  4303f5:	add    bh,bh
  4303f7:	(bad)  
  4303f8:	jp     0x4303e5
  4303fa:	imul   eax,DWORD PTR [eax],0xf
  4303fd:	inc    DWORD PTR [ebx-0x6317eb00]
  430403:	add    BYTE PTR [ebx-0x33000001],ah
  430409:	nop
  43040a:	push   esp
  43040b:	xor    DWORD PTR [ebp+0x31000083],0x7a
  430412:	inc    edi
  430413:	inc    DWORD PTR [ebx+0x7dffff89]
  430419:	push   edi
  43041a:	call   0x8943961f
  43041f:	add    BYTE PTR [ebp+0x510045b7],ch
  430425:	cmp    edi,0xffffffff
  430428:	sbb    DWORD PTR [esi],ebp
  43042a:	sub    al,0x89
  43042c:	out    dx,eax
  43042d:	add    bh,bh
  43042f:	int3   
  430430:	setl   BYTE PTR [eax-0x7600397d]
  430437:	add    bh,dl
  430439:	aam    0xdd
  43043b:	push   edx
  43043d:	add    bh,bh
  43043f:	call   DWORD PTR [ebp-0x19]
  430442:	sub    edi,edi
  430444:	jl     0x430445
  430446:	cmp    edi,0x78
  430449:	std    
  43044a:	cmc    
  43044b:	jmp    FWORD PTR [ecx]
  43044d:	add    BYTE PTR [eax],al
  43044f:	push   DWORD PTR [edi-0x27]
  430452:	jle    0x4303d7
  430454:	cmp    bh,bh
  430456:	mov    DWORD PTR [eax],eax
  430458:	jl     0x430460
  43045a:	ud0    ebp,ebp
  43045d:	add    DWORD PTR [eax],0x0
  430460:	lods   al,BYTE PTR ds:[esi]
  430461:	(bad)  
  430462:	lods   al,BYTE PTR ds:[esi]
  430463:	add    BYTE PTR [ebx+0x0],cl
  430466:	add    bh,bh
  430468:	sbb    eax,0x3d0094b0
  43046d:	add    bh,bh
  43046f:	call   FWORD PTR [edx-0x2a]
  430472:	cli    
  430473:	call   DWORD PTR [ebp-0x1]
  430476:	dec    DWORD PTR [ecx+0xaae597]
  43047c:	in     al,dx
  43047d:	(bad)  
  43047e:	(bad)  
  43047f:	call   DWORD PTR [ebx]
  430481:	mov    ebx,0x89bf0047
  430486:	(bad)  
  430487:	call   DWORD PTR [ecx]
  430489:	cmc    
  43048a:	out    0xff,al
  43048c:	das    
  43048d:	(bad)  
  43048e:	inc    DWORD PTR [ebx-0x760b02e6]
  430494:	dec    DWORD PTR [bx+di-0x1801]
  430499:	test   DWORD PTR [eax-0x7c009c01],0x3b94eaff
  4304a3:	push   DWORD PTR [ebx-0x6c340000]
  4304a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4304aa:	or     eax,DWORD PTR [eax]
  4304ac:	xor    edi,edi
  4304ae:	add    ah,cl
  4304b0:	in     al,0x8
  4304b2:	xchg   ebx,eax
  4304b3:	jmp    DWORD PTR [esi+0x36ff8300]
  4304b9:	(bad)  
  4304ba:	or     al,0xff
  4304bc:	je     0x43048a
  4304be:	(bad)  
  4304bf:	push   DWORD PTR [ebx+0x19]
  4304c2:	lds    eax,FWORD PTR [eax]
  4304c4:	inc    edx
  4304c5:	add    bh,bh
  4304c7:	jmp    ecx
  4304c9:	inc    edx
  4304ca:	pushf  
  4304cb:	add    BYTE PTR [eax+0x0],dl
  4304ce:	add    DWORD PTR [ebx-0x33e47bff],0xffffffe8
  4304d5:	(bad)  
  4304d6:	inc    DWORD PTR [eax]
  4304d8:	or     cl,dh
  4304da:	in     al,0x0
  4304dc:	push   eax
  4304dd:	(bad)  
  4304de:	inc    DWORD PTR [eax]
  4304e0:	mov    eax,ds:0x67ff0eeb
  4304e5:	add    bh,bh
  4304e7:	(bad)  
  4304e8:	cmp    bl,BYTE PTR [edi-0xb1ff3b]
  4304ee:	(bad)  
  4304ef:	jmp    DWORD PTR [esi+0x5cc29ee]
  4304f5:	add    BYTE PTR [ebx-0x4f179000],al
  4304fb:	and    DWORD PTR [eax+eax*1-0xdee3400],0x20
  430503:	dec    DWORD PTR [ebp-0x3dffff01]
  430509:	mov    al,0x49
  43050b:	add    BYTE PTR [ebp+0x0],al
  43050e:	(bad)  
  43050f:	push   DWORD PTR [esi]
  430511:	xor    al,BYTE PTR [edx]
  430513:	(bad)  
  430514:	out    dx,eax
  430515:	inc    DWORD PTR [eax]
  430517:	add    cl,bl
  430519:	dec    esi
  43051a:	sub    BYTE PTR [eax],al
  43051c:	inc    edi
  43051d:	add    BYTE PTR [ecx+0x6305ad00],cl
  430523:	call   FWORD PTR [ecx-0x77]
  430526:	inc    DWORD PTR [eax]
  430528:	retf   0xd89c
  43052b:	jmp    FWORD PTR [edi-0x54760001]
  430531:	js     0x43058c
  430533:	dec    DWORD PTR [ecx-0x34]
  430536:	dec    esp
  430538:	pusha  
  430539:	jp     0x430528
  43053b:	jmp    DWORD PTR [edi+edi*8+0x0]
  43053f:	call   FWORD PTR [eax]
  430541:	push   esp
  430542:	xchg   DWORD PTR [ecx-0x76000080],ecx
  430548:	test   al,0xe2
  43054a:	pop    es
  43054b:	inc    DWORD PTR [eax]
  43054d:	add    DWORD PTR [eax],0xffffff83
  430550:	adc    DWORD PTR [edi-0x56],eax
  430553:	jmp    DWORD PTR [edx]
  430555:	int3   
  430556:	(bad)  
  430557:	(bad)  
  430558:	cmp    bl,BYTE PTR [eax+0x77]
  43055b:	add    BYTE PTR [ebp+0x62ff00ff],ch
  430561:	div    edi
  430563:	(bad)  
  430564:	mov    esp,0x79ffcc89
  430569:	pop    esi
  43056a:	push   ecx
  43056b:	mov    DWORD PTR [esi-0x1],eax
  43056e:	inc    DWORD PTR [eax]
  430570:	rcr    BYTE PTR [edi],1
  430572:	fld    QWORD PTR [eax]
  430574:	jb     0x430542
  430576:	inc    DWORD PTR [eax]
  430578:	mov    ecx,0x36ff8c58
  43057d:	int3   
  43057e:	inc    DWORD PTR [eax]
  430580:	adc    ecx,DWORD PTR [edx-0x77]
  430583:	(bad)  
  430584:	mov    edi,0xe00ffff
  430589:	into   
  43058a:	dec    ecx
  43058b:	add    BYTE PTR [eax],ah
  43058d:	inc    DWORD PTR [ebx+0x4f469f00]
  430593:	(bad)  
  430594:	clc    
  430595:	(bad)  
  430596:	dec    DWORD PTR [ecx-0x7c9d7b46]
  43059c:	mov    ds:0xf4ffff00,eax
  4305a1:	fwait
  4305a2:	ret    
  4305a3:	(bad)  
  4305a4:	mov    esi,0x28cc0000
  4305a9:	retf   0x7c
  4305ac:	push   ds
  4305ad:	(bad)  
  4305ae:	inc    DWORD PTR [eax]
  4305b0:	rcl    bl,cl
  4305b2:	(bad)
  4305b5:	(bad)  
  4305b6:	(bad)  
  4305b7:	dec    DWORD PTR [edx]
  4305b9:	dec    edx
  4305ba:	xor    al,BYTE PTR [ebx-0x3376ff60]
  4305c0:	rcr    BYTE PTR [edi+ebp*2-0x77],cl
  4305c4:	dec    ebp
  4305c5:	(bad)  
  4305c6:	(bad)  
  4305c7:	call   DWORD PTR [ebp-0x62]
  4305ca:	fwait
  4305cb:	add    BYTE PTR [eax],cl
  4305cd:	inc    DWORD PTR [ebx-0x646a6800]
  4305d3:	add    bh,ah
  4305d5:	add    BYTE PTR [eax],al
  4305d7:	mov    esi,ecx
  4305d9:	xchg   edx,eax
  4305da:	cmp    DWORD PTR [eax],eax
  4305dc:	jno    0x4305de
  4305de:	mov    edi,edi
  4305e0:	sti    
  4305e1:	cli    
  4305e2:	lahf   
  4305e3:	int3   
  4305e4:	sbb    bh,bh
  4305e6:	add    BYTE PTR [ebx-0x337eb290],al
  4305ec:	icebp  
  4305ed:	add    ah,cl
  4305ef:	or     DWORD PTR [ebp+0x1fffa835],0x0
  4305f6:	(bad)  
  4305f7:	push   DWORD PTR [esi-0x23]
  4305fa:	jg     0x4305fc
  4305fc:	std    
  4305fd:	add    BYTE PTR [ebx-0xc438b34],al
  430603:	add    BYTE PTR [edi+0x6f00ffff],ah
  430609:	and    esp,DWORD PTR [ecx-0x7d]
  43060c:	adc    cl,BYTE PTR [ecx+0x7302ff00]
  430612:	mov    bh,0x0
  430614:	cs int3 
  430616:	inc    DWORD PTR [ebx-0x7c050a8b]
  43061c:	in     eax,0xff
  43061e:	inc    DWORD PTR [eax]
  430620:	sub    al,0x44
  430622:	cmp    BYTE PTR [ebx-0xff0007],al
  430628:	test   edi,esi
  43062a:	out    dx,al
  43062b:	int3   
  43062c:	adc    ah,cl
  43062e:	dec    DWORD PTR [ecx-0x36c69a]
  430634:	mov    edi,?
  430636:	dec    esp
  430638:	test   eax,0xefff4ebe
  43063d:	inc    DWORD PTR [eax]
  43063f:	inc    DWORD PTR [ecx]
  430641:	jp     0x43061c
  430643:	call   FWORD PTR [edx-0x4d000001]
  430649:	sbb    eax,0xfff5cc43
  43064e:	(bad)  
  43064f:	call   FWORD PTR [ecx+0x1a895310]
  430655:	mov    edi,edi
  430657:	add    BYTE PTR [edi+0x5b],ah
  43065a:	rol    DWORD PTR [eax],1
  43065c:	pop    ss
  43065d:	int3   
  43065e:	inc    DWORD PTR [eax]
  430660:	sub    ebp,0xff8f000a
  430666:	cmp    edi,0xd
  430669:	mov    ebp,0x8354ffbc
  43066e:	dec    DWORD PTR [ecx-0xd6c0fd]
  430674:	pop    ebx
  430675:	inc    DWORD PTR [eax]
  430677:	int3   
  430678:	outs   dx,BYTE PTR ds:[esi]
  430679:	aas    
  43067a:	push   0xffff9800
  43067f:	jmp    DWORD PTR [edi+0x44]
  430682:	sbb    eax,0xffff39ff
  430687:	dec    DWORD PTR [ecx]
  430689:	mov    ebp,0x85ff65
  43068e:	inc    DWORD PTR [ebx-0xb9c565]
  430694:	retf   0x8300
  430697:	jmp    ebp
  430699:	in     al,dx
  43069a:	cmp    al,BYTE PTR [eax]
  43069c:	out    0xff,eax
  43069e:	inc    DWORD PTR [ebx-0x76f2c94c]
  4306a4:	jl     0x4306a5
  4306a6:	int3   
  4306a7:	mov    DWORD PTR [ebx+0x3c],esp
  4306aa:	jl     0x4306ac
  4306ac:	popf   
  4306ad:	add    BYTE PTR [ebx-0x5a124b7d],al
  4306b3:	jmp    esi
  4306b5:	add    bh,bh
  4306b7:	dec    DWORD PTR [eax]
  4306b9:	mov    WORD PTR [esi],?
  4306bb:	add    BYTE PTR [eax+0x4089ff00],ah
  4306c1:	xor    ecx,DWORD PTR [ebx-0x33ff1800]
  4306c7:	int3   
  4306c8:	sbb    dl,ch
  4306ca:	fadd   QWORD PTR [eax]
  4306cc:	sub    edi,edi
  4306ce:	add    bh,bh
  4306d0:	hlt    
  4306d1:	ror    BYTE PTR [ebx],cl
  4306d3:	add    BYTE PTR [ebp+0x620000ff],ah
  4306d9:	push   ebx
  4306da:	sar    edi,1
  4306dc:	icebp  
  4306dd:	inc    DWORD PTR [eax]
  4306df:	add    BYTE PTR [edi+0x26],bh
  4306e2:	ror    DWORD PTR [ecx-0x3376],1
  4306e8:	inc    edx
  4306e9:	loop   0x4306df
  4306eb:	jmp    FWORD PTR [edi+edi*8-0x25a7ff7d]
  4306f2:	mov    bh,bh
  4306f4:	add    eax,DWORD PTR [eax]
  4306f6:	int3   
  4306f7:	mov    DWORD PTR [edi+0x5eff5112],esi
  4306fd:	(bad)  
  4306fe:	dec    esp
  430700:	jne    0x43077d
  430702:	or     edi,edi
  430704:	fwait
  430705:	add    BYTE PTR [eax],al
  430707:	call   FWORD PTR [esi-0x560088be]
  43070d:	add    bh,bh
  43070f:	add    BYTE PTR [esi-0x1400e848],bh
  430715:	cmp    edi,0xffffffcc
  430718:	inc    edi
  430719:	cs fdivp st(7),st
  43071c:	mov    eax,ds:0x9900ffff
  430721:	push   es
  430722:	call   0x6389:0xccff9c00
  430729:	(bad)  
  43072b:	int3   
  43072c:	dec    esi
  43072d:	add    bh,bh
  43072f:	push   ebx
  430731:	adc    eax,0x892a8343
  430736:	inc    DWORD PTR [eax]
  430738:	in     al,dx
  430739:	aad    0x71
  43073b:	add    BYTE PTR ds:0xa18389ff,dl
  430741:	jmp    0x4307a4
  430743:	add    DWORD PTR [ecx+0x1cffff00],0x19
  43074a:	fild   WORD PTR [eax]
  43074c:	inc    ecx
  43074d:	add    BYTE PTR [ebx+0x1ffc5fcc],al
  430753:	jmp    esi
  430755:	(bad)  
  430756:	inc    DWORD PTR [ebx-0x727b10]
  43075c:	mov    edi,edi
  43075e:	mov    esp,ecx
  430760:	xor    ebx,edx
  430762:	mov    dl,0xff
  430764:	pop    edi
  430765:	dec    DWORD PTR [ecx+0x58e012cc]
  43076b:	mov    DWORD PTR ds:0xe9000083,esi
  430771:	or     ah,BYTE PTR [ecx-0x7d]
  430774:	call   0x7360:0x83ffff83
  43077b:	int3   
  43077c:	xor    bh,bh
  43077e:	cmp    edi,0x56
  430781:	push   es
  430782:	or     edi,edi
  430784:	(bad)  
  430786:	inc    DWORD PTR [eax]
  430788:	scas   eax,DWORD PTR es:[edi]
  430789:	data16 sub bh,bh
  43078c:	jge    0x43078d
  43078e:	inc    DWORD PTR [ebx-0x767fe7fe]
  430794:	mov    BYTE PTR [eax],al
  430796:	inc    DWORD PTR [eax]
  430798:	jg     0x4307a3
  43079a:	int3   
  43079b:	add    BYTE PTR [edx+0xf00ff83],bl
  4307a1:	test   eax,0xff7400d1
  4307a6:	inc    DWORD PTR [eax]
  4307a8:	and    DWORD PTR [ebp-0x7c07767f],esp
  4307ae:	int3   
  4307af:	call   FWORD PTR [edi-0x26]
  4307b2:	jno    0x430737
  4307b4:	or     edi,edi
  4307b6:	dec    esp
  4307b8:	push   ebp
  4307b9:	push   0x2f
  4307bb:	mov    DWORD PTR ds:0x42ffffff,edi
  4307c1:	lds    esi,FWORD PTR [esp+ecx*8]
  4307c4:	sub    edi,edi
  4307c6:	inc    DWORD PTR [ebx-0x8009e7]
  4307cc:	push   0x92ffffff
  4307d1:	mov    al,ds:0x8398ff59
  4307d6:	add    BYTE PTR [eax],al
  4307d8:	setle  al
  4307db:	push   ebx
  4307dd:	add    bh,bh
  4307df:	or     DWORD PTR [ebx-0x34],0x46
  4307e3:	inc    DWORD PTR [edx]
  4307e5:	(bad)  
  4307e6:	dec    esp
  4307e8:	jl     0x430822
  4307ea:	push   es
  4307eb:	add    BYTE PTR [ebp+0x5effccff],al
  4307f1:	aas    
  4307f2:	retf   0xa1cc
  4307f5:	add    bh,bh
  4307f7:	dec    DWORD PTR [ebp-0x67ff1410]
  4307fd:	inc    DWORD PTR [eax]
  4307ff:	(bad)  
  430800:	mov    esi,0xc6ffe9e8
  430805:	inc    DWORD PTR [ebx+0x7a127bff]
  43080b:	dec    DWORD PTR [esi+0x4c00ffff]
  430811:	mov    ecx,0x61ffe3
  430816:	inc    DWORD PTR [eax]
  430818:	addr16 mov dh,0x4
  43081b:	inc    DWORD PTR [edi+0x0]
  43081e:	add    ah,cl
  430820:	test   al,0x28
  430822:	mov    edi,edi
  430824:	loop   0x430826
  430826:	int3   
  430827:	jmp    DWORD PTR [edx+0x68]
  43082a:	add    DWORD PTR [ebx-0x7c007ccb],0x53
  430831:	ror    DWORD PTR [esi+0x0],cl
  430834:	retf   
  430835:	add    BYTE PTR [ecx-0x11354801],cl
  43083b:	call   DWORD PTR [ebx]
  43083d:	inc    DWORD PTR [eax]
  43083f:	mov    DWORD PTR [esp+edx*1-0x1d],esi
  430843:	add    BYTE PTR [ecx],ah
  430845:	(bad)  
  430846:	dec    esp
  430848:	outs   dx,BYTE PTR ds:[esi]
  430849:	rol    BYTE PTR [eax-0x33ff9501],cl
  43084f:	(bad)  
  430850:	jg     0x4307f3
  430852:	cmp    eax,DWORD PTR [eax]
  430854:	into   
  430855:	add    BYTE PTR [eax],al
  430857:	call   DWORD PTR ds:0x82ffea75
  43085d:	(bad)  
  43085e:	(bad)  
  43085f:	push   DWORD PTR [ecx]
  430861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430862:	jmp    0x83c62c66
  430867:	jmp    ebx
  430869:	mov    ebx,DWORD PTR [esi-0x1]
  43086c:	inc    ebx
  43086d:	mov    edi,edi
  43086f:	mov    DWORD PTR [esi-0x5e],ebp
  430872:	sbb    BYTE PTR [ebx+0xff00b2],al
  430878:	mov    bh,0x79
  43087a:	sub    al,0xff
  43087c:	fld    QWORD PTR [ebx-0x16937c01]
  430882:	cmp    edi,edi
  430884:	xor    BYTE PTR [ebx-0x46cb0001],al
  43088a:	pop    ebx
  43088b:	call   FWORD PTR ds:0x9effffff
  430891:	add    dh,dh
  430893:	add    BYTE PTR [ebx+eax*4],bl
  430896:	(bad)  
  430897:	jmp    DWORD PTR [edx]
  430899:	xchg   ebx,eax
  43089a:	sahf   
  43089b:	(bad)  
  43089c:	fild   WORD PTR [eax]
  43089e:	(bad)  
  43089f:	dec    DWORD PTR [ebp-0x8]
  4308a2:	add    bh,bh
  4308a4:	mov    ch,0xff
  4308a6:	add    DWORD PTR [eax],0xffffff89
  4308a9:	inc    ecx
  4308aa:	cmc    
  4308ab:	call   DWORD PTR [edi+edi*8-0x285b0001]
  4308b2:	and    eax,0x4f00
  4308b7:	dec    ebx
  4308b9:	dec    ecx
  4308ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308bb:	xor    edx,0xffffffcc
  4308be:	inc    DWORD PTR [eax]
  4308c0:	or     DWORD PTR [ebx-0x3a],edi
  4308c3:	call   DWORD PTR [ebx+eax*4-0x77]
  4308c7:	call   DWORD PTR [edi-0x51ffb5d4]
  4308cd:	int3   
  4308ce:	add    bh,bh
  4308d0:	xchg   ecx,eax
  4308d1:	jle    0x4308ec
  4308d3:	push   DWORD PTR [ebx+0x0]
  4308d6:	int3   
  4308d7:	adc    DWORD PTR [ebp-0x34002a9b],0xffffffff
  4308de:	add    DWORD PTR [ebx+0xe7517e],0x8
  4308e5:	dec    DWORD PTR [ecx+0x30cb48cc]
  4308eb:	int3   
  4308ec:	add    cl,ah
  4308ee:	(bad)  
  4308ef:	dec    DWORD PTR [esi+ecx*8+0x50ff3b]
  4308f6:	mov    esp,ecx
  4308f8:	shr    BYTE PTR [edx+0x1bffe7],1
  4308fe:	int3   
  4308ff:	inc    DWORD PTR [esi-0x1c00ba14]
  430905:	cmp    edi,0xffffffff
  430908:	or     eax,0x7300cc1b
  43090d:	(bad)  
  43090e:	inc    DWORD PTR [eax]
  430910:	jle    0x430931
  430912:	dec    edi
  430913:	jmp    DWORD PTR [ebp-0x77]
  430916:	inc    DWORD PTR [eax]
  430918:	icebp  
  430919:	pop    es
  43091a:	adc    eax,DWORD PTR [ebx+0xff830b]
  430920:	outs   dx,DWORD PTR ds:[esi]
  430921:	aas    
  430922:	scas   eax,DWORD PTR es:[edi]
  430923:	call   FWORD PTR [ebx+0x51ff00ff]
  430929:	mov    ds:0xff7f8383,eax
  43092e:	add    DWORD PTR [eax],0xfffffff5
  430931:	inc    edi
  430932:	sahf   
  430933:	jmp    FWORD PTR [edx]
  430935:	add    bh,bh
  430937:	int3   
  430938:	out    dx,al
  430939:	repz push cs
  43093b:	call   DWORD PTR [edi+edi*8-0x25e80100]
  430942:	(bad)  
  430943:	(bad)  
  430944:	jge    0x4308c9
  430946:	inc    DWORD PTR [eax]
  430948:	dec    eax
  430949:	push   ds
  43094a:	or     ecx,esp
  43094c:	jp     0x43091a
  43094e:	(bad)  
  43094f:	call   DWORD PTR [edi]
  430951:	jg     0x4309a2
  430953:	mov    ebx,eax
  430955:	add    bh,bh
  430957:	jmp    DWORD PTR [ecx-0x310020d3]
  43095d:	inc    DWORD PTR [eax]
  43095f:	add    BYTE PTR [ebp-0x62ffcbea],ah
  430965:	inc    DWORD PTR [eax]
  430967:	inc    ecx
  430969:	cmp    esp,DWORD PTR [eax-0x7c7234]
  43096f:	int3   
  430970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430971:	dec    edi
  430972:	sub    al,BYTE PTR [ebx+0xcc00a8]
  430978:	and    DWORD PTR [edi-0xc1ffe1],esp
  43097e:	mov    DWORD PTR [eax],eax
  430980:	sub    DWORD PTR [edi+ecx*8],ebx
  430983:	(bad)  
  430984:	out    dx,eax
  430985:	add    bh,bh
  430987:	mov    DWORD PTR [edi],edi
  430989:	xlat   BYTE PTR ds:[ebx]
  43098a:	jecxz  0x43098b
  43098c:	inc    edi
  43098d:	inc    DWORD PTR [eax]
  43098f:	jmp    FWORD PTR [ecx]
  430991:	test   BYTE PTR [edx-0x1],cl
  430994:	add    BYTE PTR ss:[ecx+0x3ef34c00],cl
  43099b:	add    BYTE PTR [esi],bh
  43099d:	add    bh,bh
  43099f:	call   FWORD PTR [edi]
  4309a1:	stos   DWORD PTR es:[edi],eax
  4309a2:	add    al,0x0
  4309a4:	int    0xff
  4309a6:	mov    DWORD PTR [ebx+0x66a158],eax
  4309ac:	pop    ebx
  4309ad:	inc    DWORD PTR [eax]
  4309af:	(bad)  
  4309b0:	jp     0x430958
  4309b2:	aas    
  4309b3:	call   DWORD PTR [ecx-0x5b007601]
  4309b9:	mov    WORD PTR [edi-0x34],ds
  4309bc:	jne    0x43098a
  4309be:	add    BYTE PTR [eax],al
  4309c0:	bnd jb 0x430a0d
  4309c3:	inc    DWORD PTR [esi-0x7d]
  4309c6:	mov    DWORD PTR [ebx-0x762af073],eax
  4309cc:	sub    DWORD PTR [eax],eax
  4309ce:	mov    DWORD PTR [eax],eax
  4309d0:	pop    ss
  4309d1:	pop    eax
  4309d2:	aad    0xff
  4309d4:	aad    0xff
  4309d6:	int3   
  4309d7:	(bad)  
  4309d8:	cmp    al,0x6a
  4309da:	xchg   ecx,eax
  4309db:	and    DWORD PTR [ecx],0xffffffff
  4309de:	inc    DWORD PTR [eax]
  4309e0:	ror    BYTE PTR [edi+eiz*1-0x1],cl
  4309e4:	in     eax,dx
  4309e5:	mov    edi,edi
  4309e7:	add    BYTE PTR [edx-0x58],cl
  4309ea:	cmp    cl,ah
  4309ec:	test   eax,0x4700ff83
  4309f1:	nop
  4309f2:	mov    bh,bh
  4309f4:	pusha  
  4309f5:	mov    DWORD PTR [ebx+0x11d95a83],eax
  4309fb:	add    BYTE PTR [esi],bl
  4309fd:	inc    DWORD PTR [eax]
  4309ff:	add    BYTE PTR [esi],bl
  430a01:	ins    BYTE PTR es:[edi],dx
  430a02:	inc    ebp
  430a03:	jmp    DWORD PTR [ecx]
  430a05:	int3   
  430a06:	add    DWORD PTR [eax],0xffffffd6
  430a09:	xchg   esp,eax
  430a0a:	scas   al,BYTE PTR es:[edi]
  430a0b:	add    BYTE PTR [ecx-0x1],al
  430a0e:	inc    DWORD PTR [ebx-0x33614b50]
  430a14:	push   ebx
  430a15:	dec    esp
  430a17:	add    BYTE PTR [esi+0x10fffe6f],dl
  430a1d:	(bad)  
  430a1e:	inc    DWORD PTR [ebx+0x45e2a2]
  430a24:	sub    al,0xff
  430a26:	add    BYTE PTR [eax],al
  430a28:	add    al,0x1c
  430a2a:	fmulp  st(4),st
  430a2c:	aas    
  430a2d:	inc    DWORD PTR [ebx-0x6f55f01]
  430a33:	(bad)  
  430a34:	mov    esp,0xbe83ff00
  430a39:	adc    edx,DWORD PTR [eax-0xffe400]
  430a3f:	inc    DWORD PTR [ebp-0x2e]
  430a42:	sbb    al,0xcc
  430a44:	mov    eax,0x62ccff00
  430a49:	scas   eax,DWORD PTR es:[edi]
  430a4a:	cmp    ecx,esp
  430a4c:	fimul  DWORD PTR [ecx-0x36b1007d]
  430a52:	in     eax,dx
  430a53:	call   edi
  430a55:	add    ah,cl
  430a57:	sbb    DWORD PTR [ebp+ecx*2-0xb3006f],0x0
  430a5f:	cmp    DWORD PTR [ecx],0x33
  430a62:	test   esp,ecx
  430a64:	push   ebx
  430a65:	add    bh,bh
  430a67:	jmp    DWORD PTR [edx-0x2d]
  430a6a:	fdiv   st(7),st
  430a6c:	cmp    bh,bh
  430a6e:	(bad)  
  430a6f:	dec    DWORD PTR [ebx]
  430a71:	ds enter 0x18ff,0x89
  430a76:	add    BYTE PTR [ebx+0xf284c0],al
  430a7c:	or     bh,bh
  430a7e:	inc    DWORD PTR [eax]
  430a80:	sar    DWORD PTR [ecx-0x55],0xff
  430a84:	cmp    edi,0xffffffff
  430a87:	add    BYTE PTR [ecx-0x1d],cl
  430a8a:	jmp    0x430a58
  430a8c:	in     al,dx
  430a8d:	add    bh,bh
  430a8f:	inc    DWORD PTR [esi+0x1700e1b8]
  430a95:	inc    DWORD PTR [ebx+0x3853afff]
  430a9b:	add    ah,al
  430a9d:	int3   
  430a9e:	(bad)  
  430a9f:	push   DWORD PTR [ebp+0x55]
  430aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430aa3:	call   esp
  430aa5:	inc    DWORD PTR [eax]
  430aa7:	push   DWORD PTR [eax]
  430aa9:	cdq    
  430aaa:	sbb    al,BYTE PTR [ebx-0x767c24]
  430ab0:	test   al,0xdd
  430ab2:	test   bh,bh
  430ab4:	daa    
  430ab5:	add    bh,bh
  430ab7:	call   DWORD PTR [ecx+0x3dffd214]
  430abd:	int3   
  430abe:	(bad)  
  430abf:	call   DWORD PTR [eax]
  430ac1:	dec    eax
  430ac2:	mov    bh,0x0
  430ac4:	das    
  430ac5:	add    bh,bh
  430ac7:	jmp    FWORD PTR [esi+0x2d]
  430aca:	ltr    di
  430acd:	add    bh,bh
  430acf:	mov    esi,ebx
  430ad1:	aaa    
  430ad2:	idiv   bh
  430ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430ad5:	add    bh,bh
  430ad7:	jmp    FWORD PTR [ecx-0x3f]
  430ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430adb:	int3   
  430adc:	cmp    al,0x0
  430ade:	add    bh,bh
  430ae0:	jecxz  0x430b61
  430ae2:	dec    edi
  430ae3:	push   DWORD PTR [ebp+0x0]
  430ae6:	or     esp,0x1a
  430ae9:	add    ch,BYTE PTR [eax-0x7c00c201]
  430aef:	call   FWORD PTR [ebx+0x6fff56e1]
  430af5:	add    bh,bh
  430af7:	jmp    DWORD PTR [eax]
  430af9:	aaa    
  430afa:	test   eax,0xffffe983
  430aff:	int3   
  430b00:	or     al,0xdd
  430b02:	iret   
  430b03:	int3   
  430b04:	icebp  
  430b05:	add    DWORD PTR [eax],0xffffffff
  430b08:	push   ebp
  430b09:	jmp    0xccf60a42
  430b0e:	(bad)  
  430b0f:	dec    DWORD PTR [eax-0x4]
  430b12:	mov    eax,0x83ffbbff
  430b17:	call   FWORD PTR [ecx]
  430b19:	xchg   DWORD PTR [edx-0x7c7c3800],eax
  430b1f:	add    BYTE PTR [eax+0x13cc9fc0],dh
  430b25:	add    BYTE PTR [ebx+0x47ce0fff],al
  430b2b:	call   FWORD PTR [eax-0x7d]
  430b2e:	dec    esp
  430b30:	mov    esp,0x68ff310d
  430b35:	(bad)  
  430b36:	inc    DWORD PTR [eax]
  430b38:	les    ebp,FWORD PTR [edi]
  430b3a:	jae    0x430b3b
  430b3c:	(bad)  
  430b3d:	(bad)  
  430b3e:	inc    DWORD PTR [eax]
  430b40:	sub    al,0x3
  430b42:	push   0xffffffff
  430b44:	aam    0x83
  430b46:	cmp    edi,0x22
  430b49:	push   ebx
  430b4a:	mov    al,ds:0xffffaeff
  430b4f:	(bad)  
  430b50:	mov    ebp,0xae00c3df
  430b55:	mov    edi,edi
  430b57:	jmp    FWORD PTR ds:0x53ffce3e
  430b5d:	int3   
  430b5e:	add    BYTE PTR [eax],al
  430b60:	jnp    0x430b15
  430b62:	test   edi,edi
  430b64:	push   edx
  430b65:	(bad)  
  430b66:	inc    DWORD PTR [ebx+0xd57ff9]
  430b6c:	cmc    
  430b6d:	(bad)  
  430b6e:	inc    DWORD PTR [ebx-0x156d2a]
  430b74:	dec    ebx
  430b75:	inc    DWORD PTR [eax]
  430b77:	call   FWORD PTR [ecx-0x4]
  430b7a:	inc    ecx
  430b7b:	int3   
  430b7c:	popa   
  430b7d:	inc    DWORD PTR [eax]
  430b7f:	inc    ebx
  430b81:	xchg   esp,eax
  430b82:	pop    eax
  430b83:	mov    ebx,esi
  430b85:	add    bh,bh
  430b87:	add    BYTE PTR [ebx-0x3f00dea6],ch
  430b8d:	inc    DWORD PTR [eax]
  430b8f:	push   DWORD PTR [ebp-0x437657d6]
  430b95:	add    ah,cl
  430b97:	inc    DWORD PTR [ecx+0x65ffc7ec]
  430b9d:	inc    DWORD PTR [ebx+0x42eb7acc]
  430ba3:	adc    DWORD PTR [edi],0x0
  430ba6:	add    BYTE PTR [eax],al
  430ba8:	aaa    
  430ba9:	(bad)  
  430baa:	std    
  430bab:	add    BYTE PTR [ecx],ch
  430bad:	add    bh,bh
  430baf:	jmp    DWORD PTR [ecx-0x7]
  430bb2:	add    edi,edi
  430bb4:	sbb    eax,0x70ff0000
  430bb9:	in     eax,dx
  430bba:	pop    esi
  430bbb:	add    BYTE PTR [edi-0x48767c7d],al
  430bc1:	cmp    DWORD PTR ds:0xff9083,edi
  430bc7:	int3   
  430bc8:	fldcw  WORD PTR [edi]
  430bca:	sbb    al,BYTE PTR [eax]
  430bcc:	push   ds
  430bcd:	(bad)  
  430bce:	(bad)  
  430bcf:	dec    DWORD PTR [edx]
  430bd1:	and    BYTE PTR [edi+0x0],cl
  430bd4:	mov    dh,0x0
  430bd6:	int3   
  430bd7:	inc    DWORD PTR [edi+0x5f]
  430bda:	sub    edi,edi
  430bdc:	mov    al,ds:0x2a0083ff
  430be1:	inc    eax
  430be2:	dec    ebp
  430be3:	sub    DWORD PTR [esi-0x7d],0xffffffcc
  430be7:	call   FWORD PTR [edi]
  430be9:	test   BYTE PTR [edi+edi*8],0x32
  430bed:	add    BYTE PTR [eax],al
  430bef:	add    BYTE PTR [ebx+ecx*4],dh
  430bf2:	sub    DWORD PTR [eax],eax
  430bf4:	xchg   edx,eax
  430bf5:	(bad)  
  430bf6:	(bad)  
  430bf7:	push   ebp
  430bf9:	lds    esi,FWORD PTR [ebx-0x7334]
  430bff:	int3   
  430c00:	mov    eax,ds:0x4a001139
  430c05:	add    bh,bh
  430c07:	add    ch,dh
  430c09:	xchg   esp,eax
  430c0a:	xchg   ecx,eax
  430c0b:	push   DWORD PTR [esi-0x1]
  430c0e:	int3   
  430c0f:	dec    DWORD PTR [ecx-0x30007b31]
  430c15:	add    DWORD PTR [eax],0x0
  430c18:	or     al,0x8b
  430c1a:	inc    edi
  430c1b:	add    BYTE PTR [eax],bl
  430c1d:	dec    esp
  430c1f:	(bad)  
  430c20:	jg     0x430bed
  430c22:	push   esi
  430c23:	int3   
  430c24:	addr16 mov edi,edi
  430c27:	jmp    DWORD PTR [edi-0x57]
  430c2a:	arpl   WORD PTR [eax],ax
  430c2c:	inc    edi
  430c2d:	add    BYTE PTR [eax],al
  430c2f:	mov    DWORD PTR [edi-0x5b7c703d],esi
  430c35:	add    BYTE PTR [ecx-0x28496a00],cl
  430c3b:	add    dl,bl
  430c3d:	(bad)  
  430c3e:	(bad)  
  430c3f:	call   DWORD PTR [edi+0x4bcc6605]
  430c45:	add    BYTE PTR [eax],al
  430c47:	xor    esp,0xffffffd2
  430c4a:	dec    ecx
  430c4b:	dec    DWORD PTR [eax+0x0]
  430c4e:	mov    DWORD PTR [eax],eax
  430c50:	pop    esp
  430c51:	enter  0x895d,0xc0
  430c55:	add    BYTE PTR [eax],al
  430c57:	add    BYTE PTR [ebx],al
  430c59:	clc    
  430c5a:	mov    bh,bh
  430c5c:	or     bh,bh
  430c5e:	add    bh,bh
  430c60:	mov    ch,0x86
  430c62:	xlat   BYTE PTR ds:[ebx]
  430c63:	and    DWORD PTR [ecx-0x7b007c01],0xffffff92
  430c6a:	sbb    eax,0x8300bf00
  430c6f:	xor    esi,0xffffffcd
  430c72:	sbb    al,BYTE PTR [ebx-0xff7c11]
  430c78:	js     0x430c52
  430c7a:	cdq    
  430c7b:	add    BYTE PTR [esi-0x1],cl
  430c7e:	inc    DWORD PTR [ebx-0x60eb01]
  430c84:	inc    DWORD PTR [eax]
  430c86:	aad    0xe7
  430c88:	sub    eax,0x7d
  430c8b:	inc    DWORD PTR [eax]
  430c8d:	add    al,ah
  430c8f:	retf   0x2ff
  430c92:	outs   dx,DWORD PTR ds:[esi]
  430c93:	(bad)  
  430c94:	(bad)  
  430c95:	dec    DWORD PTR [ecx]
  430c97:	xchg   esi,eax
  430c98:	push   DWORD PTR [ebx]
  430c9a:	(bad)  
  430c9c:	(bad)  
  430c9d:	push   DWORD PTR [ebx+0x30fa8307]
  430ca3:	(bad)  
  430ca4:	(bad)  
  430ca5:	dec    edi
  430ca7:	enter  0x73ff,0xcd
  430cab:	add    DWORD PTR [eax],0xffffff83
  430cae:	mov    DWORD PTR [eax],edi
  430cb0:	dec    eax
  430cb2:	add    DWORD PTR [eax],eax
  430cb4:	inc    DWORD PTR [eax]
  430cb6:	jno    0x430c3e
  430cb8:	(bad)  
  430cb9:	jns    0x430c59
  430cbb:	mov    DWORD PTR [ebx+0x83cbcc],eax
  430cc1:	or     DWORD PTR [ebp-0x67767d00],esi
  430cc7:	dec    edx
  430cc8:	add    BYTE PTR ds:0x83ff8317,dh
  430cce:	(bad)  
  430cd0:	call   FWORD PTR [ebx]
  430cd2:	addr16 add bh,bh
  430cd5:	(bad)  
  430cd6:	cmp    BYTE PTR [eax],cl
  430cd8:	add    BYTE PTR [eax-0x76007cce],bh
  430cde:	shl    BYTE PTR [ebx],cl
  430ce0:	add    BYTE PTR [edx-0x7c7cc2],cl
  430ce6:	les    edx,FWORD PTR [eax+eax*1]
  430ce9:	push   ebx
  430cea:	dec    esp
  430ceb:	dec    esp
  430ced:	add    DWORD PTR [edi],0xffffff87
  430cf0:	dec    edx
  430cf2:	push   es
  430cf3:	(bad)  
  430cf4:	inc    DWORD PTR [eax]
  430cf6:	int    0x57
  430cf8:	add    DWORD PTR [ebx+eax*4+0x0],0xffffffff
  430cfd:	int3   
  430cfe:	test   esi,edi
  430d00:	dec    DWORD PTR [ecx+edx*1-0x1]
  430d04:	add    bh,bh
  430d06:	lock int 0x83
  430d09:	push   cs
  430d0a:	rol    DWORD PTR [eax],cl
  430d0c:	cmp    edi,0x23
  430d0f:	jl     0x430d10
  430d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430d12:	mov    WORD PTR [ecx+0x4756ffff],cs
  430d18:	add    BYTE PTR [edx-0x36],bl
  430d1b:	add    BYTE PTR [eax],al
  430d1d:	int3   
  430d1e:	cmc    
  430d1f:	pop    esp
  430d20:	(bad)  
  430d21:	fisubr DWORD PTR [edi]
  430d23:	add    BYTE PTR [ebx-0x211d00],al
  430d29:	and    eax,0xff40
  430d2e:	pushf  
  430d2f:	mov    ds:0x834fbe00,eax
  430d34:	add    ah,cl
  430d36:	adc    DWORD PTR [ecx+0xdbb900],eax
  430d3c:	inc    DWORD PTR [ebx+0x8008f6e]
  430d42:	mov    edi,0x6e89ffff
  430d47:	std    
  430d48:	and    DWORD PTR [eax],0xffffffbc
  430d4b:	inc    DWORD PTR [ebx-0x33dd01]
  430d51:	or     bl,bl
  430d53:	mov    edi,edi
  430d55:	add    BYTE PTR [edi],cl
  430d57:	mov    esi,0x83156600
  430d5c:	(bad)  
  430d5d:	jmp    FWORD PTR [edi+0x6554ff70]
  430d63:	(bad)  
  430d64:	(bad)  
  430d65:	call   FWORD PTR [ecx+0x0]
  430d68:	add    BYTE PTR [edx-0x7c],ch
  430d6e:	popf   
  430d6f:	add    BYTE PTR [eax],al
  430d71:	mov    eax,0x8389006d
  430d76:	xchg   edx,eax
  430d77:	add    BYTE PTR [ebx+0x192d],0x83
  430d7e:	cmp    bh,BYTE PTR [esi-0x1]
  430d81:	popa   
  430d82:	add    eax,0xe100ffff
  430d87:	adc    al,0x0
  430d89:	(bad)  
  430d8a:	cmp    bh,bh
  430d8c:	mov    edi,edi
  430d8e:	fs loop 0x430d90
  430d91:	gs pop edx
  430d93:	add    BYTE PTR [ebx+0x5242ff],al
  430d99:	xchg   esp,eax
  430d9a:	pusha  
  430d9b:	add    BYTE PTR [ecx-0xf7cb7d],cl
  430da1:	add    BYTE PTR [esi+0x34000083],bh
  430da7:	inc    ecx
  430da8:	int3   
  430da9:	retf   0xff43
  430dac:	add    BYTE PTR [ecx-0x707c04e4],cl
  430db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430db3:	add    bh,bh
  430db5:	call   DWORD PTR [esi-0x11]
  430db8:	add    dl,bl
  430dba:	sbb    edi,edi
  430dbc:	(bad)  
  430dbd:	(bad)  
  430dbe:	jns    0x430db2
  430dc0:	inc    ebp
  430dc2:	pop    ebp
  430dc3:	add    bh,bh
  430dc5:	(bad)  
  430dc6:	jp     0x430e07
  430dc8:	add    ch,ah
  430dca:	cwde   
  430dcb:	dec    DWORD PTR [ecx-0x9cf7d]
  430dd1:	push   0xffffffdf
  430dd6:	shl    BYTE PTR [ebp+0xfdaaff],1
  430ddc:	inc    DWORD PTR [eax]
  430dde:	sub    ecx,DWORD PTR [edi-0x77]
  430de1:	daa    
  430de2:	ud0    eax,DWORD PTR [ebx-0x55d600]
  430de9:	data16 jbe 0x430deb
  430dec:	add    bh,bh
  430dee:	test   al,0xb0
  430df0:	add    ch,ch
  430df2:	mov    dl,0x0
  430df4:	dec    esp
  430df6:	icebp  
  430df7:	nop
  430df8:	push   DWORD PTR [ebp+0x69]
  430dfe:	in     eax,dx
  430dff:	arpl   WORD PTR [eax],ax
  430e01:	repnz inc DWORD PTR ds:[eax]
  430e05:	(bad)  
  430e06:	fsubr  st,st(5)
  430e08:	jmp    FWORD PTR [ecx]
  430e0a:	fwait
  430e0b:	inc    DWORD PTR [ebx-0x757d01]
  430e11:	jle    0x430da0
  430e13:	(bad)  
  430e14:	(bad)  
  430e15:	jmp    FWORD PTR [edi]
  430e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430e18:	add    DWORD PTR [ebp+0x52],0xffffffff
  430e1c:	add    BYTE PTR [eax],al
  430e1e:	inc    edx
  430e1f:	mov    eax,ds:0xff961a00
  430e24:	add    DWORD PTR [eax],0x59
  430e27:	add    bh,bh
  430e29:	push   edx
  430e2a:	stc    
  430e2b:	dec    esp
  430e2d:	push   esp
  430e2f:	or     al,BYTE PTR [eax]
  430e31:	sbb    esi,DWORD PTR [edx+0x0]
  430e34:	add    BYTE PTR [eax],al
  430e36:	adc    esi,ebp
  430e38:	push   DWORD PTR [ebp-0x65]
  430e3b:	add    bh,bh
  430e3d:	jmp    DWORD PTR [edi+0x4f9789c6]
  430e43:	inc    DWORD PTR [eax]
  430e45:	push   DWORD PTR [ebp+0x6ebffff7]
  430e4b:	dec    esp
  430e4d:	add    BYTE PTR [ebp+0x3d],al
  430e50:	int3   
  430e51:	sub    al,0x1d
  430e53:	(bad)  
  430e54:	inc    DWORD PTR [ebx+0x63ff8bc7]
  430e5a:	mov    al,0x89
  430e5c:	cmp    edi,0x7f
  430e5f:	fdiv   st(7),st
  430e61:	jo     0x430eaf
  430e63:	mov    edi,edi
  430e65:	add    BYTE PTR [ebp-0x3b9700d7],bh
  430e6b:	int3   
  430e6c:	(bad)  
  430e6d:	inc    DWORD PTR [esp+edx*8-0x1]
  430e71:	arpl   WORD PTR [ecx-0x77],ax
  430e74:	(bad)  
  430e75:	jmp    ebx
  430e77:	push   ebp
  430e78:	int3   
  430e79:	ret    0xfffe
  430e7c:	int3   
  430e7d:	int3   
  430e7e:	xor    dl,ah
  430e80:	call   FWORD PTR [ebp-0x3375]
  430e86:	ins    BYTE PTR es:[edi],dx
  430e87:	js     0x430e88
  430e89:	arpl   WORD PTR [eax-0x1],dx
  430e8c:	add    bh,bh
  430e8e:	aad    0xf5
  430e90:	call   DWORD PTR [ebx+0x40]
  430e93:	add    DWORD PTR [ebx-0xbf4634],0x6d
  430e9a:	mov    ?,edi
  430e9c:	add    DWORD PTR [ebx-0x71ffcc0d],0x7e
  430ea3:	or     esp,0xffffff83
  430ea6:	add    esi,DWORD PTR [esi-0x1]
  430ea9:	mov    al,ds:0xffff0073
  430eae:	push   0xffffffd9
  430eb0:	dec    ebx
  430eb2:	fadd   DWORD PTR [ebx-0x114d007d]
  430eb8:	mov    ecx,edx
  430eba:	fimul  DWORD PTR [ecx-0x26837c7d]
  430ec0:	add    dh,cl
  430ec2:	adc    eax,0xd6890000
  430ec7:	arpl   WORD PTR [eax],ax
  430ec9:	push   esi
  430eca:	pop    es
  430ecb:	(bad)  
  430ecc:	inc    DWORD PTR [eax]
  430ece:	js     0x430e7b
  430ed0:	(bad)  
  430ed1:	fstp   st(1)
  430ed3:	(bad)  
  430ed4:	dec    esp
  430ed6:	jmp    0x430eef
  430ed8:	and    DWORD PTR [ecx-0x7c00ff03],0x78
  430edf:	mov    dh,0x89
  430ee1:	mov    BYTE PTR ds:0x108389cc,ah
  430ee7:	mov    es,WORD PTR [eax]
  430ee9:	pop    ebx
  430eea:	das    
  430eeb:	add    bh,bh
  430eed:	add    ebp,0x63
  430ef0:	sub    DWORD PTR [edi-0x337c0091],0xffffff8a
  430ef7:	jb     0x430ef9
  430ef9:	push   ecx
  430efa:	jmp    0x430efb
  430efc:	add    BYTE PTR [eax],al
  430efe:	loope  0x430e9b
  430f00:	jmp    edx
  430f02:	cwde   
  430f03:	(bad)  
  430f04:	inc    DWORD PTR [ebx+0x6effc593]
  430f0a:	mov    edx,0x4200ffff
  430f0f:	push   eax
  430f10:	sbb    DWORD PTR [ebx],0x5c
  430f13:	cmp    edi,0x0
  430f16:	dec    edi
  430f17:	xor    eax,0xdad400
  430f1c:	inc    DWORD PTR [eax]
  430f1e:	dec    edi
  430f1f:	test   eax,0x8327a1ff
  430f24:	mov    edi,edi
  430f26:	sahf   
  430f27:	int    0xcc
  430f29:	mov    edi,0x89ffcc9f
  430f2e:	jp     0x430ec6
  430f30:	dec    DWORD PTR [ebx+0xff8392]
  430f36:	cmc    
  430f37:	pop    ecx
  430f38:	sbb    DWORD PTR [edx+0x7],0x0
  430f3c:	(bad)  
  430f3d:	(bad)  
  430f3e:	fidiv  DWORD PTR [ecx-0xdbac01]
  430f44:	dec    esp
  430f46:	or     al,0x6
  430f48:	add    al,dh
  430f4a:	jns    0x430f4b
  430f4c:	int3   
  430f4d:	push   DWORD PTR [edi-0x28fd0003]
  430f53:	add    BYTE PTR [eax],al
  430f55:	cmp    DWORD PTR [eax],0x5b
  430f58:	dec    DWORD PTR [eax+0x6]
  430f5b:	dec    DWORD PTR [ecx-0x568d00]
  430f61:	add    al,dl
  430f63:	inc    DWORD PTR [eax]
  430f65:	call   DWORD PTR [ebp+0x3aa90061]
  430f6b:	inc    DWORD PTR [eax]
  430f6d:	(bad)  
  430f6e:	call   0x94af0e98
  430f73:	add    BYTE PTR [eax],al
  430f75:	cmp    edx,0xe
  430f78:	add    dl,ch
  430f7a:	and    bh,bh
  430f7c:	inc    DWORD PTR [eax]
  430f7e:	dec    edi
  430f7f:	je     0x430f80
  430f81:	jo     0x430fbd
  430f83:	inc    DWORD PTR [eax]
  430f85:	add    BYTE PTR [esi],cl
  430f87:	pop    ebp
  430f88:	inc    DWORD PTR [eax]
  430f8a:	mov    eax,DWORD PTR [eax]
  430f8c:	(bad)  
  430f8d:	jmp    DWORD PTR [ebx+0x4bbbff67]
  430f93:	mov    edi,edi
  430f95:	jmp    FWORD PTR [ecx-0x2a]
  430f98:	int3   
  430f99:	ret    0xff2c
  430f9c:	add    bh,bh
  430f9e:	jecxz  0x43101d
  430fa0:	call   DWORD PTR [eax+0xff90]
  430fa6:	ret    
  430fa7:	add    DWORD PTR es:[esi],0xffffff8e
  430fab:	or     esp,0x0
  430fae:	mov    BYTE PTR [ecx-0x1],ah
  430fb1:	push   ecx
  430fb2:	das    
  430fb3:	mov    DWORD PTR [eax],eax
  430fb5:	jmp    edi
  430fb7:	out    dx,eax
  430fb8:	dec    DWORD PTR [ebp-0xff0094]
  430fbe:	sbb    di,di
  430fc1:	push   edx
  430fc2:	ret    0xff
  430fc5:	dec    esi
  430fc7:	xchg   edx,eax
  430fc8:	dec    DWORD PTR [edx+0x14]
  430fcb:	int3   
  430fcc:	add    DWORD PTR [eax],0xffffffe4
  430fcf:	mov    ebx,0x788083
  430fd4:	mov    edi,edi
  430fd6:	inc    eax
  430fd7:	pop    edx
  430fd8:	call   DWORD PTR [ebp-0x80]
  430fdb:	mov    DWORD PTR [ecx+0x45800],ecx
  430fe1:	sti    
  430fe2:	xchg   ebx,eax
  430fe3:	or     esp,0xffffffff
  430fe6:	jne    0x430ffd
  430fe8:	add    BYTE PTR [ecx+0x31],bl
  430feb:	(bad)  
  430fec:	(bad)  
  430fed:	jmp    DWORD PTR [ebx-0x17277628]
  430ff3:	(bad)  
  430ff4:	(bad)  
  430ff5:	jmp    FWORD PTR [ebp+ebp*4+0x1bc0ff]
  430ffc:	add    BYTE PTR [ebx+0x7d8983e6],al
  431002:	pop    es
  431003:	(bad)  
  431004:	(bad)  
  431005:	(bad)  
  431006:	std    
  431007:	fild   DWORD PTR [ebx-0x7790]
  43100d:	(bad)  
  43100e:	in     al,dx
  43100f:	push   0x0
  431011:	pop    edi
  431012:	call   0xcc39:0x8ffff83
  431019:	js     0x431011
  43101b:	add    BYTE PTR [eax],al
  43101d:	int3   
  43101e:	out    0xc9,eax
  431020:	add    BYTE PTR [ecx+0x6f],dh
  431023:	add    BYTE PTR [ecx-0x7c0bc100],cl
  431029:	cld    
  43102a:	mov    al,ds:0xa90000ff
  43102f:	aaa    
  431030:	(bad)  
  431031:	ds push ebx
  431033:	int3   
  431034:	inc    DWORD PTR [ebx-0x7cff5619]
  43103a:	dec    edi
  43103b:	(bad)  
  43103c:	inc    DWORD PTR [ebx+0x390020b7]
  431042:	popf   
  431043:	inc    DWORD PTR [ebx+0x9ce783]
  431049:	gs or  edi,edi
  43104c:	add    BYTE PTR [ecx-0x280006cd],cl
  431052:	adc    edi,edi
  431054:	mov    edi,edi
  431056:	fstp   QWORD PTR [ecx+ecx*4]
  431059:	jecxz  0x43106c
  43105b:	inc    DWORD PTR [ebx-0xa1800]
  431061:	cmp    eax,0x830083b6
  431066:	stos   DWORD PTR es:[edi],eax
  431067:	jge    0x430fec
  431069:	lock stos DWORD PTR es:[edi],eax
  43106b:	add    DWORD PTR [eax],0xffffffcc
  43106e:	or     al,0x5d
  431070:	add    BYTE PTR [eax+0xc],dh
  431073:	add    BYTE PTR [ebx-0xc2247d],al
  431079:	es jae 0x431005
  43107c:	mov    edi,edi
  43107e:	cli    
  43107f:	out    0xcc,al
  431081:	sub    BYTE PTR [eax-0x7d],ah
  431084:	(bad)  
  431085:	jmp    edi
  431087:	das    
  431088:	add    BYTE PTR [edx+eiz*8],bh
  43108b:	add    bh,bh
  43108d:	add    cl,cl
  43108f:	adc    BYTE PTR [eax],al
  431091:	push   eax
  431092:	mov    esp,0x5a0083ff
  431097:	xor    BYTE PTR [eax],al
  431099:	fadd   QWORD PTR [edx-0x1]
  43109c:	int3   
  43109d:	int3   
  43109e:	mov    al,0x20
  4310a0:	inc    DWORD PTR [esi]
  4310a2:	rol    BYTE PTR [eax],cl
  4310a4:	add    BYTE PTR [ecx+0x53006a0d],cl
  4310aa:	push   ecx
  4310ab:	mov    edi,edi
  4310ad:	add    BYTE PTR [edx+ebp*1+0x3ddbcc],ch
  4310b4:	mov    DWORD PTR [ebx-0x4a00427a],eax
  4310ba:	call   0x8305:0x8b83ffcc
  4310c1:	ja     0x4310aa
  4310c3:	inc    DWORD PTR [eax]
  4310c5:	inc    DWORD PTR [esi]
  4310c7:	cwde   
  4310c8:	add    ah,cl
  4310ca:	scas   eax,DWORD PTR es:[edi]
  4310cb:	inc    DWORD PTR [eax]
  4310cd:	add    BYTE PTR [ecx+0x6d],bl
  4310d0:	int3   
  4310d1:	cli    
  4310d2:	ds cmp edi,0xffffffff
  4310d6:	sub    cl,BYTE PTR [esi+0x7e8bff]
  4310dc:	inc    DWORD PTR [ebx+0x46ffd1dd]
  4310e2:	rol    DWORD PTR [ebx-0x3dc9ff7d],0x0
  4310e9:	ficom  DWORD PTR [ebx-0x34]
  4310ec:	add    bh,bh
  4310ee:	fild   QWORD PTR [edx+0x0]
  4310f1:	mov    eax,ds:0xff83a2
  4310f6:	inc    eax
  4310f7:	arpl   di,di
  4310f9:	jg     0x431134
  4310fb:	add    BYTE PTR [ebx-0xbf9134],al
  431101:	leave  
  431102:	pop    esi
  431103:	inc    DWORD PTR [eax]
  431105:	mov    DWORD PTR [edi],ecx
  431107:	xchg   esp,eax
  431108:	push   DWORD PTR [eax]
  43110a:	pop    ss
  43110b:	inc    DWORD PTR [ebx-0x8ce201]
  431111:	dec    ebx
  431112:	mov    eax,0xc600ff83
  431117:	inc    ebp
  431118:	int3   
  431119:	imul   ebp,eax,0xffffffff
  43111c:	dec    DWORD PTR [ecx-0xa00b951]
  431122:	xchg   edi,eax
  431123:	cmp    edi,0xffffffff
  431126:	adc    edi,edx
  431128:	jmp    DWORD PTR [ebp+0x76]
  43112b:	add    DWORD PTR [ebx-0x7cdea47d],0x33
  431132:	pop    edi
  431133:	add    bh,bh
  431135:	int3   
  431136:	mov    ebp,0x26d5008c
  43113b:	mov    edi,edi
  43113d:	inc    DWORD PTR [edi-0x76]
  431140:	jmp    FWORD PTR [ebp-0x41]
  431143:	add    bh,bh
  431145:	int3   
  431146:	pop    esi
  431147:	je     0x431115
  431149:	or     al,0xd9
  43114b:	add    DWORD PTR [eax],0xffffffff
  43114e:	loope  0x431147
  431150:	jmp    FWORD PTR [eax+0xff89d7]
  431156:	adc    al,0x23
  431158:	(bad)  
  431159:	out    dx,eax
  43115a:	push   ebx
  43115b:	dec    DWORD PTR [ecx-0x33d1d977]
  431161:	data16 and al,0x83
  431164:	(bad)  
  431165:	call   DWORD PTR [esi+0x424b834d]
  43116b:	cmp    edi,0x0
  43116e:	sbb    esi,ebp
  431170:	call   eax
  431172:	adc    al,0x0
  431174:	(bad)  
  431175:	call   DWORD PTR [ecx+0xc73ff4c]
  43117b:	inc    DWORD PTR [ebx-0xea01]
  431181:	jge    0x43110d
  431183:	int3   
  431184:	int3   
  431185:	jmp    eax
  431187:	push   ss
  431188:	mov    DWORD PTR ds:0xffcc46,ebx
  43118e:	pop    esp
  43118f:	jne    0x431190
  431191:	lds    eax,FWORD PTR [esi+0x46ffffff]
  431197:	scas   eax,DWORD PTR es:[edi]
  431198:	dec    DWORD PTR [eax-0xa5]
  43119e:	push   ebp
  43119f:	bound  eax,QWORD PTR [eax]
  4311a1:	push   es
  4311a2:	icebp  
  4311a3:	add    DWORD PTR [eax],0xffffff83
  4311a6:	sbb    BYTE PTR [edi-0x1],dh
  4311a9:	imul   esp,DWORD PTR [edx-0x4bff0100],0x42
  4311b0:	dec    ebx
  4311b2:	es add ah,cl
  4311b5:	add    BYTE PTR [ebx],dh
  4311b7:	xor    edi,edi
  4311b9:	dec    ebx
  4311ba:	jb     0x4311bb
  4311bc:	add    BYTE PTR [ecx+0x1bff007a],cl
  4311c2:	cs (bad) 
  4311c4:	(bad)  
  4311c5:	(bad)  
  4311c6:	jns    0x4311db
  4311c8:	sub    DWORD PTR [ebp+0x7f],0xffffffff
  4311cc:	add    bh,bh
  4311ce:	adc    DWORD PTR [esi],ebp
  4311d0:	cmp    DWORD PTR [edi],0x20
  4311d3:	cmp    edi,0xffffff83
  4311d6:	jecxz  0x4311db
  4311d8:	add    cl,al
  4311da:	push   ss
  4311db:	dec    esp
  4311dd:	mov    DWORD PTR [ebx-0xd],esi
  4311e0:	sbb    DWORD PTR [edx],0x5f
  4311e3:	add    bh,bh
  4311e5:	dec    DWORD PTR [edi-0x224008b]
  4311eb:	inc    DWORD PTR [eax]
  4311ed:	(bad)  
  4311ee:	fidiv  WORD PTR [ebx]
  4311f0:	add    BYTE PTR [esi+0x75],dl
  4311f3:	(bad)  
  4311f4:	inc    DWORD PTR [ebx-0x3bff5377]
  4311fa:	xchg   edi,edi
  4311fc:	inc    DWORD PTR [ebx+0xb00d782]
  431202:	add    DWORD PTR ss:[ebx-0x7c309f77],0xffffffcc
  43120a:	dec    esp
  43120b:	add    BYTE PTR [ecx-0x2f6601],cl
  431211:	addr16 adc al,0xff
  431214:	inc    DWORD PTR [eax]
  431216:	fdiv   st(4),st
  431218:	(bad)  
  431219:	mov    esi,0xff0089c5
  43121e:	jle    0x431268
  431220:	int3   
  431221:	jg     0x43124c
  431223:	inc    DWORD PTR [eax]
  431225:	add    BYTE PTR [esp+ebp*1],ah
  431228:	sbb    DWORD PTR [ecx-0x7600f6],0xffffffe8
  43122f:	jae    0x431230
  431231:	mov    esi,0xff83ccb0
  431236:	adc    BYTE PTR ds:0x8319c0cc,dl
  43123c:	(bad)  
  43123d:	inc    DWORD PTR [esi+0x38]
  431240:	jmp    FWORD PTR [edx+0xcc9c]
  431246:	sbb    cl,BYTE PTR [esi]
  431248:	(bad)  
  431249:	clc    
  43124a:	jge    0x4311d5
  43124c:	add    BYTE PTR [ebx-0x68006a56],al
  431252:	mov    esi,0x80cc0089
  431257:	retf   0x9283
  43125a:	jno    0x4311e5
  43125c:	or     esp,0xffffffac
  43125f:	push   ds
  431260:	add    BYTE PTR [esp+ebx*4-0x7d],dh
  431264:	inc    DWORD PTR [eax]
  431266:	mov    dh,0xbe
  431268:	int3   
  431269:	lds    eax,FWORD PTR [edx-0x1]
  43126c:	(bad)  
  43126d:	(bad)  
  43126e:	cmp    eax,DWORD PTR [edi]
  431270:	and    DWORD PTR [ebp+eax*1-0x1],0x0
  431275:	int3   
  431276:	lock mov ecx,0xff60cfcc
  43127c:	mov    edi,edi
  43127e:	jmp    0xff89:0x20a7ffba
  431285:	add    BYTE PTR [ecx-0x6a],al
  431288:	jmp    DWORD PTR [edx+ebx*4]
  43128b:	add    BYTE PTR [eax],al
  43128d:	sub    esi,0x33
  431290:	call   DWORD PTR [esi-0x73]
  431293:	add    bh,bh
  431295:	add    BYTE PTR [ebp-0x5f],cl
  431298:	add    cl,dl
  43129a:	and    edi,edi
  43129c:	int3   
  43129d:	add    BYTE PTR [eax+0x5ccbff7a],ah
  4312a3:	(bad)  
  4312a4:	inc    DWORD PTR [eax]
  4312a6:	shl    DWORD PTR [ebx+eax*4-0x38],0x29
  4312ab:	add    BYTE PTR [eax],al
  4312ad:	call   FWORD PTR [eax]
  4312af:	icebp  
  4312b0:	int3   
  4312b1:	push   ecx
  4312b2:	mov    edi,?
  4312b4:	add    BYTE PTR [eax],al
  4312b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4312b7:	sub    edi,edi
  4312b9:	aas    
  4312ba:	pop    eax
  4312bb:	add    BYTE PTR [eax],al
  4312bd:	add    BYTE PTR [eax-0x5e],dh
  4312c0:	add    bl,cl
  4312c2:	js     0x4312c4
  4312c4:	inc    DWORD PTR [eax]
  4312c6:	or     cl,BYTE PTR [esi-0x7c5a3677]
  4312cc:	inc    DWORD PTR [ebx+0x78ffc57f]
  4312d2:	les    eax,FWORD PTR [eax]
  4312d4:	int3   
  4312d5:	jmp    esi
  4312d7:	and    BYTE PTR [eax],al
  4312d9:	xchg   edi,eax
  4312da:	sbb    eax,DWORD PTR [eax]
  4312dc:	add    bh,bh
  4312de:	std    
  4312df:	add    BYTE PTR [eax],0x86
  4312e2:	mov    ecx,0x4a0083ff
  4312e7:	or     al,0xff
  4312e9:	jae    0x431302
  4312eb:	inc    DWORD PTR [eax]
  4312ed:	sbb    DWORD PTR [eax+ebx*4+0x0],0x1c
  4312f2:	rol    BYTE PTR [eax],0x0
  4312f5:	add    BYTE PTR [eax-0x54da00cf],ah
  4312fb:	cmp    edi,0xffffffff
  4312fe:	inc    ecx
  4312ff:	inc    esp
  431300:	jmp    FWORD PTR [edx-0x33ff7c75]
  431306:	mov    al,ds:0x73afffe7
  43130b:	(bad)  
  43130c:	(bad)  
  43130d:	(bad)  
  43130e:	call   0xba8adfcd
  431313:	add    BYTE PTR [eax],al
  431315:	call   FWORD PTR ds:0x1f5d007f
  43131b:	mov    edi,edi
  43131d:	dec    DWORD PTR [eax]
  43131f:	leave  
  431320:	xor    DWORD PTR ds:0xff83ff1b,0x7d
  431327:	sbb    bh,bh
  431329:	pop    es
  43132a:	and    eax,DWORD PTR [eax]
  43132c:	inc    DWORD PTR [ebx-0x5933fd20]
  431332:	cmp    eax,0x200ffff
  431337:	pop    es
  431338:	mov    edi,esi
  43133a:	aad    0xff
  43133c:	inc    DWORD PTR [ebx+0x75ffbcde]
  431342:	sar    bh,0xff
  431345:	add    BYTE PTR [ecx-0x72a5ff9f],ah
  43134b:	int3   
  43134c:	mov    DWORD PTR [eax],eax
  43134e:	gs (bad) 
  431350:	int3   
  431351:	pusha  
  431352:	jmp    0x2042e056
  431357:	cmp    edi,edi
  431359:	mov    ds:0x89ffccbe,eax
  43135e:	aam    0x54
  431360:	add    al,dl
  431362:	push   cs
  431363:	inc    DWORD PTR [eax]
  431365:	(bad)  
  431366:	aas    
  431367:	imul   eax,DWORD PTR [ebx-0x7c00edad],0xffffffcc
  43136e:	add    BYTE PTR [edi+0x0],0x56
  431372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431373:	cmp    edi,0xffffffff
  431376:	sbb    ch,BYTE PTR [eax-0x77]
  431379:	mov    eax,ds:0xcc00cc76
  43137e:	stos   BYTE PTR es:[edi],al
  43137f:	test   al,0xff
  431381:	jbe    0x4313aa
  431383:	(bad)  
  431384:	dec    esp
  431386:	out    dx,eax
  431387:	ret    0x3fff
  43138a:	out    0x0,eax
  43138c:	inc    DWORD PTR [eax]
  43138e:	jb     0x4313a3
  431390:	add    BYTE PTR [eax],ch
  431392:	fs add bh,bh
  431395:	add    BYTE PTR [edi],al
  431397:	add    BYTE PTR [eax],0xd8
  43139a:	pop    ecx
  43139b:	add    ah,cl
  43139d:	add    BYTE PTR [ecx+0x7943cc13],dh
  4313a3:	(bad)  
  4313a4:	inc    DWORD PTR [eax]
  4313a6:	lds    ebp,FWORD PTR [ebx-0x1]
  4313a9:	mov    es,WORD PTR [eax-0x34]
  4313ac:	add    DWORD PTR [eax],0xffffffa0
  4313af:	mov    ah,0xff
  4313b1:	sbb    BYTE PTR [eax+eax*1],0x0
  4313b5:	inc    DWORD PTR [ebx+ebx*1]
  4313b8:	sub    DWORD PTR [ecx+0xccff91],0xffffffe4
  4313bf:	mov    dl,0x0
  4313c1:	imul   ebp,DWORD PTR [esi+0x2b83ccff],0xffffffd1
  4313c8:	jmp    FWORD PTR [edi+0x29]
  4313cb:	inc    DWORD PTR [ebx-0x7696ce00]
  4313d1:	in     eax,0x9c
  4313d3:	add    ah,cl
  4313d5:	call   FWORD PTR [ebp-0x31]
  4313d8:	add    BYTE PTR [ebx],al
  4313da:	dec    edi
  4313db:	dec    DWORD PTR [ecx-0x7c0a407d]
  4313e1:	imul   ebx,DWORD PTR [esi+0x0],0xdf7f8900
  4313e8:	int3   
  4313e9:	pop    ebx
  4313ea:	retf   
  4313eb:	add    ah,cl
  4313ed:	call   FWORD PTR [edi+eax*4-0x34]
  4313f1:	(bad)  
  4313f2:	xchg   ebp,eax
  4313f3:	cmp    edi,0x0
  4313f6:	repnz (bad) 
  4313f9:	xor    DWORD PTR [eax+0x700ffff],edx
  4313ff:	fiadd  DWORD PTR [eax]
  431401:	loop   0x4313a4
  431403:	inc    DWORD PTR [eax]
  431405:	call   FWORD PTR [ebx+ecx*2-0x7f8200]
  43140c:	add    bh,bh
  43140e:	dec    edx
  43140f:	loopne 0x431411
  431411:	jbe    0x431422
  431413:	dec    esp
  431415:	sbb    ecx,0xffffffc5
  431418:	jmp    DWORD PTR [edi-0xff00aa]
  43141e:	mov    ecx,ecx
  431420:	add    BYTE PTR [eax-0x5d],dl
  431423:	inc    DWORD PTR [eax]
  431425:	add    BYTE PTR [esi-0x5],dl
  431428:	int3   
  431429:	not    bh
  43142b:	add    bh,bh
  43142d:	dec    DWORD PTR [ebx+edx*8-0x228377]
  431434:	add    bh,bh
  431436:	xor    al,0x82
  431438:	int3   
  431439:	(bad)  
  43143a:	jmp    0x43143c
  43143c:	(bad)  
  43143d:	(bad)  
  43143e:	jp     0x43142c
  431440:	jmp    FWORD PTR [ecx]
  431442:	scas   eax,DWORD PTR es:[edi]
  431443:	(bad)  
  431444:	(bad)  
  431445:	(bad)  
  431446:	jnp    0x4314a1
  431448:	jmp    FWORD PTR [esi-0x2a]
  43144b:	int3   
  43144c:	(bad)  
  43144d:	dec    DWORD PTR [edx-0x3c]
  431450:	add    BYTE PTR [ecx],cl
  431452:	loop   0x4313d7
  431454:	add    bh,bh
  431456:	in     al,0xe1
  431458:	push   DWORD PTR [ebx+0x63]
  43145b:	inc    DWORD PTR [eax]
  43145d:	add    BYTE PTR [ebx+0x337009f],bl
  431463:	(bad)  
  431464:	dec    DWORD PTR [ecx-0x460053d5]
  43146a:	(bad)  
  43146b:	inc    DWORD PTR [ebx+0x4c200]
  431471:	push   ds
  431472:	xor    eax,0x6189ff00
  431477:	mov    ebp,0x83e76e83
  43147c:	inc    DWORD PTR [ebx-0x2e00a21f]
  431482:	jle    0x431484
  431484:	add    DWORD PTR [ebx-0xcff069f],0xffffff97
  43148b:	inc    DWORD PTR [eax]
  43148d:	call   DWORD PTR [eax-0x1109ff11]
  431493:	(bad)  
  431494:	(bad)  
  431495:	jmp    FWORD PTR [ebp+0x10]
  431498:	(bad)  
  431499:	jge    0x4314e0
  43149b:	(bad)  
  43149c:	(bad)  
  43149d:	call   FWORD PTR [eax-0x70]
  4314a0:	call   FWORD PTR [edx-0x95]
  4314a6:	in     eax,dx
  4314a7:	adc    al,0xff
  4314a9:	fsubr  QWORD PTR [ebp-0x7d]
  4314ac:	cmp    edi,0xffffffb5
  4314af:	sar    edi,1
  4314b1:	mov    edx,0xff890058
  4314b6:	(bad)  
  4314b7:	dec    ebp
  4314b8:	add    dl,bh
  4314ba:	(bad)  
  4314bc:	inc    DWORD PTR [eax]
  4314be:	out    0x8c,eax
  4314c0:	int3   
  4314c1:	add    ebx,edi
  4314c3:	(bad)  
  4314c4:	inc    DWORD PTR [ebx-0x660057e0]
  4314ca:	xor    bh,bh
  4314cc:	(bad)  
  4314cd:	jmp    FWORD PTR [esi]
  4314cf:	sahf   
  4314d0:	int3   
  4314d1:	cld    
  4314d2:	xchg   edx,eax
  4314d3:	(bad)  
  4314d4:	inc    DWORD PTR [eax]
  4314d6:	xor    ebp,ebp
  4314d8:	(bad)  
  4314d9:	jnp    0x431559
  4314db:	(bad)  
  4314dc:	inc    DWORD PTR [ebx+0x3f00e605]
  4314e2:	lock inc DWORD PTR [eax]
  4314e5:	add    ch,al
  4314e7:	daa    
  4314e8:	jmp    DWORD PTR [edx+edi*8+0x52ff00ff]
  4314ef:	arpl   di,di
  4314f1:	cld    
  4314f2:	or     esp,0xa818383
  4314f8:	jmp    DWORD PTR [edx+0x76]
  4314fb:	inc    DWORD PTR [eax]
  4314fd:	int3   
  4314fe:	and    bl,BYTE PTR [ecx]
  431500:	call   DWORD PTR [eax+ebx*8-0x23767c01]
  431507:	lock add BYTE PTR [ebx+0x83ff3b],bl
  43150e:	out    0xfc,al
  431510:	dec    eax
  431512:	or     eax,0x7eff00ff
  431517:	mov    eax,0x555400
  43151c:	or     DWORD PTR [ecx-0x2800c665],0xfffffff8
  431523:	add    ah,cl
  431525:	dec    edi
  431527:	inc    ebp
  431528:	add    BYTE PTR [eax+0x2b],ah
  43152b:	int3   
  43152c:	(bad)  
  43152d:	call   FWORD PTR [ebp+0x4359008f]
  431533:	mov    edi,edi
  431535:	mov    edi,esp
  431537:	test   eax,0xffc8e800
  43153c:	mov    DWORD PTR [eax],eax
  43153e:	jnp    0x431528
  431540:	add    BYTE PTR [ecx-0x6f],cl
  431543:	inc    DWORD PTR [ebx-0x85f001]
  431549:	mov    cl,0xe1
  43154b:	add    DWORD PTR [eax],0xffffffff
  43154e:	scas   eax,DWORD PTR es:[edi]
  43154f:	jge    0x431551
  431551:	xchg   ebp,eax
  431552:	and    ecx,esp
  431554:	add    bh,bh
  431556:	fsubr  st(2),st
  431558:	add    BYTE PTR [edi+0x43],dh
  43155b:	add    bh,bh
  43155d:	jmp    FWORD PTR [edi]
  43155f:	clc    
  431560:	jmp    FWORD PTR [edi-0x7c76008b]
  431566:	dec    ebx
  431567:	cmp    al,0xff
  431569:	sbb    ecx,DWORD PTR [ebx+eax*4+0x0]
  43156d:	add    BYTE PTR [ecx+0x19],dl
  431570:	int3   
  431571:	sub    eax,0xffff002a
  431576:	ret    0xffc8
  431579:	mov    ebx,0xff5b
  43157e:	call   0x2ce415f0
  431583:	int3   
  431584:	add    DWORD PTR [eax],0x2e
  431587:	jnp    0x431555
  431589:	mov    ecx,0xffff0086
  43158e:	xchg   eax,eax
  431590:	add    BYTE PTR [esi+0xcc007f],cl
  431596:	ss cmp edi,edi
  431599:	jp     0x4315b4
  43159b:	mov    edi,edi
  43159d:	dec    edx
  43159f:	test   ah,0xaf
  4315a2:	jge    0x4315a3
  4315a4:	inc    DWORD PTR [ebx+0x58899084]
  4315aa:	pop    edx
  4315ab:	(bad)  
  4315ac:	inc    DWORD PTR [eax]
  4315ae:	fwait
  4315af:	mov    dh,0xff
  4315b1:	cmp    BYTE PTR [edi+0x6a830000],dh
  4315b7:	pusha  
  4315b8:	inc    ecx
  4315ba:	in     eax,dx
  4315bb:	inc    DWORD PTR [eax]
  4315bd:	(bad)  
  4315be:	cld    
  4315bf:	pusha  
  4315c0:	add    BYTE PTR [eax+0xff8320],dl
  4315c6:	jg     0x431596
  4315c8:	add    BYTE PTR [eax+0x5b],al
  4315cb:	int3   
  4315cc:	mov    DWORD PTR [ebx-0x470002b6],eax
  4315d2:	mov    edi,edi
  4315d4:	add    BYTE PTR [ebx-0x6f7cb8d5],al
  4315da:	fiadd  WORD PTR [eax]
  4315dc:	add    bh,bh
  4315de:	jmp    0x8389:0x4f27004e
  4315e5:	add    BYTE PTR [esi-0x74],al
  4315e8:	mov    DWORD PTR [ecx-0x38],esp
  4315eb:	add    BYTE PTR [eax],al
  4315ed:	jmp    FWORD PTR [ecx+0x54ac00ed]
  4315f3:	(bad)  
  4315f4:	(bad)  
  4315f5:	push   edi
  4315f7:	adc    eax,0x83dc5bff
  4315fc:	add    BYTE PTR [eax],al
  4315fe:	mov    esp,DWORD PTR [edi+0x0]
  431601:	inc    ebp
  431602:	std    
  431603:	dec    esp
  431605:	inc    eax
  431607:	or     edi,edi
  431609:	jecxz  0x431644
  43160b:	add    BYTE PTR [eax],al
  43160d:	add    BYTE PTR [edx+0x6ed3ccb3],bh
  431613:	dec    DWORD PTR [ecx+0x844300]
  431619:	pop    es
  43161a:	xor    BYTE PTR [eax],al
  43161c:	add    bh,bh
  43161e:	sbb    eax,0xf9de0023
  431623:	mov    DWORD PTR [ecx-0x626a01],ecx
  431629:	pop    es
  43162a:	test   al,0xff
  43162c:	(bad)  
  43162d:	jmp    FWORD PTR [ecx]
  43162f:	add    BYTE PTR [eax],0x65
  431632:	xchg   esi,eax
  431633:	add    BYTE PTR [eax],al
  431635:	inc    DWORD PTR [edi+0x6ef600f5]
  43163b:	(bad)  
  43163c:	dec    DWORD PTR [ecx+0x10ff18ad]
  431642:	inc    esi
  431643:	or     DWORD PTR [ecx+0x1a7600],0xffffffb4
  43164a:	loop   0x43164b
  43164c:	(bad)  
  43164d:	push   DWORD PTR [eax]
  43164f:	(bad)  
  431650:	int3   
  431651:	xchg   esp,eax
  431652:	fld    QWORD PTR [eax]
  431654:	cmp    edi,0x71
  431657:	dec    eax
  431658:	push   DWORD PTR [esi+0x1e]
  43165b:	add    BYTE PTR [eax],al
  43165d:	add    BYTE PTR ds:0x73a000ea,al
  431663:	inc    DWORD PTR [eax]
  431665:	int3   
  431666:	dec    ebp
  431667:	lods   al,BYTE PTR ds:[esi]
  431668:	mov    DWORD PTR [eax+0x24],ebx
  43166b:	(bad)  
  43166c:	inc    DWORD PTR [ebx+0x58008919]
  431672:	xor    eax,0x23ffff83
  431677:	dec    esp
  431678:	add    BYTE PTR [ecx-0x7633ff8f],ch
  43167e:	ret    0x8381
  431681:	dec    BYTE PTR [eax-0x34770000]
  431687:	pop    ss
  431688:	add    BYTE PTR [ecx],dl
  43168a:	xchg   edx,eax
  43168b:	(bad)  
  43168c:	inc    DWORD PTR [ebx-0x340091d6]
  431692:	push   ebx
  431693:	(bad)  
  431694:	(bad)  
  431695:	jmp    eax
  431697:	jbe    0x431698
  431699:	jle    0x43169c
  43169b:	(bad)  
  43169c:	inc    DWORD PTR [ebx-0x78330fd4]
  4316a2:	mov    ebp,0x2700ff00
  4316a7:	lahf   
  4316a8:	jmp    DWORD PTR [ebp+0xd]
  4316ab:	cmp    edi,0xffffff83
  4316ae:	dec    edi
  4316af:	xchg   ah,cl
  4316b1:	dec    esi
  4316b2:	loop   0x4316b4
  4316b4:	dec    esp
  4316b6:	mov    ds:0x4696ffb5,al
  4316bb:	add    BYTE PTR [eax],al
  4316bd:	add    BYTE PTR [ecx-0x37b37c11],cl
  4316c3:	add    bh,bh
  4316c5:	add    al,al
  4316c7:	mov    bh,bh
  4316c9:	sar    BYTE PTR [ecx-0x1],cl
  4316cc:	inc    DWORD PTR [eax]
  4316ce:	cmpxchg BYTE PTR [ecx+0xff3c58],cl
  4316d5:	int3   
  4316d6:	loope  0x431666
  4316d8:	cmp    DWORD PTR [esi],0x3b
  4316db:	add    BYTE PTR [ecx-0xac27d],cl
  4316e1:	xlat   BYTE PTR ds:[ebx]
  4316e2:	(bad)  
  4316e3:	dec    esp
  4316e5:	add    BYTE PTR [eax],bh
  4316e7:	cli    
  4316e8:	jmp    FWORD PTR [eax-0x1]
  4316eb:	add    BYTE PTR [ebx+0xca6b00],al
  4316f1:	pushf  
  4316f2:	or     DWORD PTR [eax],eax
  4316f4:	mov    edi,edi
  4316f6:	dec    ebx
  4316f7:	dec    ebx
  4316f8:	call   DWORD PTR [eax-0x66]
  4316fb:	add    ah,cl
  4316fd:	push   edx
  4316ff:	test   BYTE PTR [ebx-0x7c00e43e],0xff
  431706:	imul   esp,DWORD PTR [edx],0xff6e35ff
  43170c:	inc    DWORD PTR [eax]
  43170e:	push   ecx
  43170f:	push   es
  431710:	int3   
  431711:	into   
  431712:	mov    eax,ds:0x89ff00ff
  431717:	aam    0xff
  431719:	imul   esp,esp,0xffffffff
  43171c:	inc    DWORD PTR [eax]
  43171e:	push   ds
  43171f:	(bad)  
  431721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431722:	clc    
  431723:	cmp    edi,0x0
  431726:	rcr    BYTE PTR [edi+0xec6000],0x0
  43172d:	add    BYTE PTR [ebp+0x22d589d7],ch
  431733:	inc    DWORD PTR [ebx+0x38e100]
  431739:	retf   
  43173a:	sub    DWORD PTR [eax],eax
  43173c:	cmp    edi,0x6d
  43173f:	sub    eax,DWORD PTR [eax]
  431741:	xor    BYTE PTR [ebx],0x0
  431744:	add    bh,bh
  431746:	dec    DWORD PTR [eax+eax*1]
  431749:	mov    dh,0x73
  43174b:	(bad)  
  43174c:	(bad)  
  43174d:	inc    DWORD PTR [esi+0x5f798347]
  431753:	mov    DWORD PTR [eax],eax
  431755:	add    BYTE PTR [esi+ecx*1-0x1],bl
  431759:	call   0x7cd3:0xffffffa9
  431760:	push   esp
  431762:	mov    eax,ds:0x88ffffcc
  431767:	adc    eax,DWORD PTR [ebx-0x1d45]
  43176d:	call   eax
  43176f:	cmp    BYTE PTR [eax],al
  431771:	cdq    
  431772:	test   bh,bh
  431774:	dec    esp
  431776:	(bad)
  431779:	mov    bl,0x53
  43177b:	int3   
  43177c:	cmp    edi,0xffffffd9
  43177f:	rol    BYTE PTR [eax],1
  431781:	sti    
  431782:	test   DWORD PTR [eax],eax
  431784:	dec    DWORD PTR [ecx-0x62002d8d]
  43178a:	retf   
  43178b:	mov    DWORD PTR [eax],eax
  43178d:	add    BYTE PTR [ebx+edi*8-0x7d],dh
  431791:	repnz fiadd WORD PTR [eax]
  431794:	add    BYTE PTR [ebx-0x4a7c143c],al
  43179a:	push   ebp
  43179b:	(bad)  
  43179c:	inc    DWORD PTR [eax]
  43179e:	int3   
  43179f:	ins    BYTE PTR es:[edi],dx
  4317a0:	mov    DWORD PTR [edx],eax
  4317a2:	xchg   ebx,eax
  4317a3:	(bad)  
  4317a4:	(bad)  
  4317a5:	call   FWORD PTR [ebx]
  4317a7:	lahf   
  4317a8:	xor    DWORD PTR [esp+ebp*2],0xffffffcc
  4317ac:	inc    DWORD PTR [ebx-0x56ff6789]
  4317b2:	xor    al,BYTE PTR [eax]
  4317b4:	(bad)  
  4317b5:	jmp    DWORD PTR [eax+0x5266008b]
  4317bb:	dec    esp
  4317bd:	(bad)  
  4317be:	jg     0x43180f
  4317c0:	add    BYTE PTR [edx],cl
  4317c2:	xchg   edi,edi
  4317c4:	(bad)  
  4317c5:	call   ebx
  4317c7:	xor    eax,0xffab58ff
  4317cc:	(bad)  
  4317cd:	call   FWORD PTR [eax]
  4317cf:	mov    cl,0xcc
  4317d1:	pop    edi
  4317d2:	loopne 0x43175d
  4317d4:	inc    DWORD PTR [eax]
  4317d6:	test   bl,0xff
  4317d9:	fld    DWORD PTR [ecx-0x6d00ff01]
  4317df:	lods   eax,DWORD PTR ds:[esi]
  4317e0:	xor    DWORD PTR [eax-0x7c000014],0xffffffa9
  4317e7:	mov    DWORD PTR [eax],0xcc007545
  4317ed:	add    BYTE PTR [ebx+eax*8+0xa570ff],al
  4317f4:	inc    DWORD PTR [ebx-0x5b00b134]
  4317fa:	jae    0x4317fb
  4317fc:	cmp    edi,0xffffff87
  4317ff:	inc    ebp
  431800:	jmp    ebp
  431802:	push   edx
  431803:	add    BYTE PTR [ebx-0x7d801],al
  431809:	xchg   edx,eax
  43180a:	push   0xffffffff
  43180c:	add    ah,cl
  43180e:	push   ebx
  43180f:	lods   al,BYTE PTR ds:[esi]
  431810:	dec    DWORD PTR [eax]
  431812:	ret    0xff00
  431815:	or     DWORD PTR [edi+0x197ff40],0x0
  43181c:	mov    edi,edi
  43181e:	cmp    DWORD PTR [esi-0x1],ebx
  431821:	and    BYTE PTR [ecx],ah
  431823:	add    BYTE PTR [eax],al
  431825:	mov    DWORD PTR [edx-0x6a],edi
  431828:	add    BYTE PTR [ebx+0x14],ch
  43182b:	inc    DWORD PTR [ebx-0x99567d]
  431831:	pop    ds
  431832:	mov    bl,0x0
  431834:	int3   
  431835:	(bad)  
  431836:	jg     0x431802
  431838:	add    BYTE PTR [edx+esi*2+0x4000ff00],dh
  43183f:	mov    al,0xff
  431841:	adc    bl,BYTE PTR [esp+ecx*8]
  431844:	inc    DWORD PTR [eax]
  431846:	iret   
  431847:	(bad)  
  431849:	jp     0x431849
  43184b:	mov    edi,edi
  43184d:	xor    eax,0x7a
  431850:	add    dh,al
  431852:	dec    ebx
  431853:	dec    DWORD PTR [ecx-0xc25677]
  431859:	outs   dx,DWORD PTR ds:[esi]
  43185a:	call   0xb942a25e
  43185f:	xchg   edi,edi
  431861:	jge    0x4317f9
  431863:	(bad)  
  431864:	inc    DWORD PTR [ebx-0x7e008edf]
  43186a:	pop    esp
  43186b:	dec    esp
  43186d:	jmp    DWORD PTR [ebx+0x4e]
  431870:	(bad)  
  431871:	cli    
  431872:	pusha  
  431873:	add    bh,bh
  431875:	add    BYTE PTR [ebp-0x32],ah
  431878:	add    BYTE PTR [edi-0x70],al
  43187b:	inc    DWORD PTR [eax]
  43187d:	cmp    DWORD PTR [esi-0x739900b3],0xffffffff
  431884:	inc    DWORD PTR [eax]
  431886:	xchg   edi,eax
  431887:	cli    
  431888:	add    BYTE PTR [ebp+0x5],al
  43188b:	add    ah,cl
  43188d:	mov    DWORD PTR [eax+0x6b58ff09],ebx
  431893:	dec    DWORD PTR [ecx+0x7753ff]
  431899:	(bad)  
  43189a:	enter  0xcc83,0x83
  43189e:	add    BYTE PTR [eax-0xb7e201],dl
  4318a4:	(bad)  
  4318a5:	jmp    FWORD PTR [esi-0x34]
  4318a8:	jmp    ebx
  4318aa:	jp     0x4318ac
  4318ac:	add    BYTE PTR [ebx-0x53766aa1],al
  4318b2:	mov    ds:0xed000089,al
  4318b7:	sbb    edi,edi
  4318b9:	data16 add BYTE PTR [ebx+0x219eff83],al
  4318c0:	add    BYTE PTR [ebp+0x14],bh
  4318c3:	dec    esp
  4318c5:	add    BYTE PTR [edi-0x3abb00e0],al
  4318cb:	add    bh,bh
  4318cd:	add    ch,dl
  4318cf:	rol    BYTE PTR [ebx+0xffd003],1
  4318d5:	add    dl,al
  4318d7:	mov    esp,0xff5ff1ff
  4318dc:	add    bh,bh
  4318de:	xchg   esp,eax
  4318df:	je     0x4318e1
  4318e1:	xchg   DWORD PTR [ecx-0x1],esi
  4318e4:	(bad)  
  4318e5:	call   DWORD PTR [eax+0x3cf7ff6f]
  4318eb:	add    BYTE PTR [eax],al
  4318ed:	add    BYTE PTR [esi+0x34],cl
  4318f0:	add    cl,bh
  4318f2:	xchg   esp,eax
  4318f3:	int3   
  4318f4:	add    bh,bh
  4318f6:	xlat   BYTE PTR ds:[ebx]
  4318f7:	mov    eax,ds:0xccb5adff
  4318fc:	mov    DWORD PTR [ebx+0x4f009ad3],eax
  431902:	arpl   WORD PTR [ebx-0x4ad0007d],ax
  431908:	jmp    DWORD PTR [esi-0xff10]
  43190e:	sar    BYTE PTR [ebx],cl
  431910:	or     DWORD PTR [ebp-0x7c00b2],0xffffffc3
  431917:	xor    edi,edi
  431919:	cwde   
  43191a:	pop    ebx
  43191b:	add    BYTE PTR [eax],al
  43191d:	xor    DWORD PTR [ecx],0x69
  431920:	push   ecx
  431922:	call   0xff86:0xdf000089
  431929:	bound  edi,QWORD PTR [esi-0x34]
  43192c:	cmp    edi,0x21
  43192f:	in     eax,0xff
  431931:	js     0x431962
  431933:	add    bh,bh
  431935:	add    BYTE PTR ds:0x5822ffa6,ch
  43193b:	add    ah,cl
  43193d:	add    BYTE PTR [esi+0x61],dl
  431940:	and    DWORD PTR [edx],0xfffffff8
  431943:	add    BYTE PTR [eax],al
  431945:	jmp    edi
  431947:	mov    eax,ds:0xff53d1ff
  43194c:	(bad)  
  43194d:	push   esi
  43194f:	out    0x0,al
  431951:	pusha  
  431952:	in     eax,dx
  431953:	mov    DWORD PTR [eax],eax
  431955:	and    DWORD PTR [esi],0xffffffd4
  431958:	add    BYTE PTR [edx-0x76e3],ch
  43195e:	push   edx
  43195f:	cmp    eax,0x5310ec83
  431964:	push   esi
  431965:	mov    esi,DWORD PTR ds:0x447d1c
  43196b:	push   edi
  43196c:	push   0x35
  43196e:	mov    DWORD PTR [esp+0x10],0xab
  431976:	mov    DWORD PTR [esp+0x14],0xc6
  43197e:	mov    DWORD PTR [esp+0x18],0x6e
  431986:	mov    DWORD PTR [esp+0x1c],0x3c
  43198e:	call   DWORD PTR ds:0x444070
  431994:	mov    edx,DWORD PTR ds:0x4470c4
  43199a:	lea    ecx,[esi+0x5d58]
  4319a0:	mov    esi,0x9f
  4319a5:	jmp    0x4319b0
  4319a7:	lea    esp,[esp+0x0]
  4319ae:	mov    edi,edi
  4319b0:	movzx  eax,BYTE PTR [edx+0x6]
  4319b4:	movzx  edi,BYTE PTR [edx+0x4]
  4319b8:	movzx  edx,WORD PTR [edx+0x1]
  4319bc:	shl    eax,0x8
  4319bf:	add    eax,edi
  4319c1:	shl    eax,0x10
  4319c4:	add    eax,edx
  4319c6:	mov    edx,DWORD PTR ds:0x447d14
  4319cc:	add    edx,0xcc1ff063
  4319d2:	xor    edx,eax
  4319d4:	mov    ds:0x447d04,eax
  4319d9:	mov    DWORD PTR [ecx-0x8],edx
  4319dc:	mov    edx,DWORD PTR ds:0x4470c4
  4319e2:	add    edx,0x8
  4319e5:	mov    DWORD PTR ds:0x4470c4,edx
  4319eb:	movzx  eax,BYTE PTR [edx+0x6]
  4319ef:	movzx  edi,BYTE PTR [edx+0x4]
  4319f3:	movzx  edx,WORD PTR [edx+0x1]
  4319f7:	shl    eax,0x8
  4319fa:	add    eax,edi
  4319fc:	shl    eax,0x10
  4319ff:	add    eax,edx
  431a01:	mov    edx,DWORD PTR ds:0x447d14
  431a07:	add    edx,0xcc1ff063
  431a0d:	xor    edx,eax
  431a0f:	mov    ds:0x447d04,eax
  431a14:	mov    DWORD PTR [ecx-0x4],edx
  431a17:	mov    edx,DWORD PTR ds:0x4470c4
  431a1d:	add    edx,0x8
  431a20:	mov    DWORD PTR ds:0x4470c4,edx
  431a26:	movzx  eax,BYTE PTR [edx+0x6]
  431a2a:	movzx  edi,BYTE PTR [edx+0x4]
  431a2e:	movzx  edx,WORD PTR [edx+0x1]
  431a32:	shl    eax,0x8
  431a35:	add    eax,edi
  431a37:	shl    eax,0x10
  431a3a:	add    eax,edx
  431a3c:	mov    edx,DWORD PTR ds:0x447d14
  431a42:	add    edx,0xcc1ff063
  431a48:	xor    edx,eax
  431a4a:	mov    ds:0x447d04,eax
  431a4f:	mov    DWORD PTR [ecx],edx
  431a51:	mov    edx,DWORD PTR ds:0x4470c4
  431a57:	add    edx,0x8
  431a5a:	add    ecx,0xc
  431a5d:	dec    esi
  431a5e:	mov    DWORD PTR ds:0x4470c4,edx
  431a64:	jne    0x4319b0
  431a6a:	mov    edx,DWORD PTR ds:0x447d1c
  431a70:	mov    ecx,DWORD PTR ds:0x4470c8
  431a76:	add    edx,0x64c4
  431a7c:	mov    esi,0xc5
  431a81:	movzx  eax,BYTE PTR [ecx+0x7]
  431a85:	movzx  edi,BYTE PTR [ecx+0x5]
  431a89:	movzx  ecx,WORD PTR [ecx]
  431a8c:	shl    eax,0x8
  431a8f:	add    eax,edi
  431a91:	shl    eax,0x10
  431a94:	add    eax,ecx
  431a96:	mov    ecx,DWORD PTR ds:0x447d14
  431a9c:	add    ecx,0x839a0234
  431aa2:	xor    ecx,eax
  431aa4:	mov    ds:0x447d04,eax
  431aa9:	mov    DWORD PTR [edx],ecx
  431aab:	mov    ecx,DWORD PTR ds:0x4470c8
  431ab1:	add    ecx,0x8
  431ab4:	mov    DWORD PTR ds:0x4470c8,ecx
  431aba:	movzx  eax,BYTE PTR [ecx+0x7]
  431abe:	movzx  edi,BYTE PTR [ecx+0x5]
  431ac2:	movzx  ecx,WORD PTR [ecx]
  431ac5:	shl    eax,0x8
  431ac8:	add    eax,edi
  431aca:	shl    eax,0x10
  431acd:	add    eax,ecx
  431acf:	mov    ecx,DWORD PTR ds:0x447d14
  431ad5:	add    ecx,0x839a0234
  431adb:	xor    ecx,eax
  431add:	mov    ds:0x447d04,eax
  431ae2:	mov    DWORD PTR [edx+0x4],ecx
  431ae5:	mov    ecx,DWORD PTR ds:0x4470c8
  431aeb:	add    ecx,0x8
  431aee:	add    edx,0x8
  431af1:	dec    esi
  431af2:	mov    DWORD PTR ds:0x4470c8,ecx
  431af8:	jne    0x431a81
  431afa:	mov    ecx,DWORD PTR ds:0x447d1c
  431b00:	mov    edx,DWORD PTR ds:0x4470cc
  431b06:	add    ecx,0x6aec
  431b0c:	mov    esi,0x61
  431b11:	movzx  eax,BYTE PTR [edx+0x5]
  431b15:	movzx  edi,BYTE PTR [edx+0x2]
  431b19:	movzx  edx,WORD PTR [edx]
  431b1c:	shl    eax,0x8
  431b1f:	add    eax,edi
  431b21:	shl    eax,0x10
  431b24:	add    eax,edx
  431b26:	mov    edx,DWORD PTR ds:0x447d14
  431b2c:	add    edx,0x7cf03e5
  431b32:	xor    edx,eax
  431b34:	mov    ds:0x447d04,eax
  431b39:	mov    DWORD PTR [ecx],edx
  431b3b:	mov    edx,DWORD PTR ds:0x4470cc
  431b41:	add    edx,0x8
  431b44:	mov    DWORD PTR ds:0x4470cc,edx
  431b4a:	movzx  eax,BYTE PTR [edx+0x5]
  431b4e:	movzx  edi,BYTE PTR [edx+0x2]
  431b52:	movzx  edx,WORD PTR [edx]
  431b55:	shl    eax,0x8
  431b58:	add    eax,edi
  431b5a:	shl    eax,0x10
  431b5d:	add    eax,edx
  431b5f:	mov    edx,DWORD PTR ds:0x447d14
  431b65:	add    edx,0x7cf03e5
  431b6b:	xor    edx,eax
  431b6d:	mov    ds:0x447d04,eax
  431b72:	mov    DWORD PTR [ecx+0x4],edx
  431b75:	mov    edx,DWORD PTR ds:0x4470cc
  431b7b:	add    edx,0x8
  431b7e:	mov    DWORD PTR ds:0x4470cc,edx
  431b84:	movzx  eax,BYTE PTR [edx+0x5]
  431b88:	movzx  edi,BYTE PTR [edx+0x2]
  431b8c:	movzx  edx,WORD PTR [edx]
  431b8f:	shl    eax,0x8
  431b92:	add    eax,edi
  431b94:	shl    eax,0x10
  431b97:	add    eax,edx
  431b99:	mov    edx,DWORD PTR ds:0x447d14
  431b9f:	add    edx,0x7cf03e5
  431ba5:	xor    edx,eax
  431ba7:	mov    ds:0x447d04,eax
  431bac:	mov    DWORD PTR [ecx+0x8],edx
  431baf:	mov    edx,DWORD PTR ds:0x4470cc
  431bb5:	add    edx,0x8
  431bb8:	add    ecx,0xc
  431bbb:	dec    esi
  431bbc:	mov    DWORD PTR ds:0x4470cc,edx
  431bc2:	jne    0x431b11
  431bc8:	push   0x208
  431bcd:	push   0x446b90
  431bd2:	push   esi
  431bd3:	call   DWORD PTR ds:0x44404c
  431bd9:	mov    eax,ds:0x447d1c
  431bde:	mov    edx,DWORD PTR ds:0x4470d0
  431be4:	add    eax,0x6f78
  431be9:	mov    esi,0x4e
  431bee:	mov    edi,edi
  431bf0:	movzx  ecx,BYTE PTR [edx+0x4]
  431bf4:	movzx  edi,BYTE PTR [edx+0x2]
  431bf8:	movzx  edx,WORD PTR [edx]
  431bfb:	shl    ecx,0x8
  431bfe:	add    ecx,edi
  431c00:	shl    ecx,0x10
  431c03:	add    ecx,edx
  431c05:	mov    edx,DWORD PTR ds:0x447d14
  431c0b:	mov    DWORD PTR ds:0x447d04,ecx
  431c11:	add    edx,0x17536c5d
  431c17:	xor    edx,ecx
  431c19:	mov    DWORD PTR [eax],edx
  431c1b:	mov    edx,DWORD PTR ds:0x4470d0
  431c21:	add    edx,0x8
  431c24:	mov    DWORD PTR ds:0x4470d0,edx
  431c2a:	movzx  ecx,BYTE PTR [edx+0x4]
  431c2e:	movzx  edi,BYTE PTR [edx+0x2]
  431c32:	movzx  edx,WORD PTR [edx]
  431c35:	shl    ecx,0x8
  431c38:	add    ecx,edi
  431c3a:	shl    ecx,0x10
  431c3d:	add    ecx,edx
  431c3f:	mov    edx,DWORD PTR ds:0x447d14
  431c45:	mov    DWORD PTR ds:0x447d04,ecx
  431c4b:	add    edx,0x17536c5d
  431c51:	xor    edx,ecx
  431c53:	mov    DWORD PTR [eax+0x4],edx
  431c56:	mov    edx,DWORD PTR ds:0x4470d0
  431c5c:	add    edx,0x8
  431c5f:	mov    DWORD PTR ds:0x4470d0,edx
  431c65:	movzx  ecx,BYTE PTR [edx+0x4]
  431c69:	movzx  edi,BYTE PTR [edx+0x2]
  431c6d:	movzx  edx,WORD PTR [edx]
  431c70:	shl    ecx,0x8
  431c73:	add    ecx,edi
  431c75:	shl    ecx,0x10
  431c78:	add    ecx,edx
  431c7a:	mov    edx,DWORD PTR ds:0x447d14
  431c80:	mov    DWORD PTR ds:0x447d04,ecx
  431c86:	add    edx,0x17536c5d
  431c8c:	xor    edx,ecx
  431c8e:	mov    DWORD PTR [eax+0x8],edx
  431c91:	mov    edx,DWORD PTR ds:0x4470d0
  431c97:	add    edx,0x8
  431c9a:	mov    DWORD PTR ds:0x4470d0,edx
  431ca0:	movzx  ecx,BYTE PTR [edx+0x4]
  431ca4:	movzx  edi,BYTE PTR [edx+0x2]
  431ca8:	movzx  edx,WORD PTR [edx]
  431cab:	shl    ecx,0x8
  431cae:	add    ecx,edi
  431cb0:	shl    ecx,0x10
  431cb3:	add    ecx,edx
  431cb5:	mov    edx,DWORD PTR ds:0x447d14
  431cbb:	mov    DWORD PTR ds:0x447d04,ecx
  431cc1:	add    edx,0x17536c5d
  431cc7:	xor    edx,ecx
  431cc9:	mov    DWORD PTR [eax+0xc],edx
  431ccc:	mov    edx,DWORD PTR ds:0x4470d0
  431cd2:	add    edx,0x8
  431cd5:	mov    DWORD PTR ds:0x4470d0,edx
  431cdb:	movzx  ecx,BYTE PTR [edx+0x4]
  431cdf:	movzx  edi,BYTE PTR [edx+0x2]
  431ce3:	movzx  edx,WORD PTR [edx]
  431ce6:	shl    ecx,0x8
  431ce9:	add    ecx,edi
  431ceb:	shl    ecx,0x10
  431cee:	add    ecx,edx
  431cf0:	mov    edx,DWORD PTR ds:0x447d14
  431cf6:	add    edx,0x17536c5d
  431cfc:	xor    edx,ecx
  431cfe:	mov    DWORD PTR ds:0x447d04,ecx
  431d04:	mov    DWORD PTR [eax+0x10],edx
  431d07:	mov    edx,DWORD PTR ds:0x4470d0
  431d0d:	add    edx,0x8
  431d10:	mov    DWORD PTR ds:0x4470d0,edx
  431d16:	movzx  ecx,BYTE PTR [edx+0x4]
  431d1a:	movzx  edi,BYTE PTR [edx+0x2]
  431d1e:	movzx  edx,WORD PTR [edx]
  431d21:	shl    ecx,0x8
  431d24:	add    ecx,edi
  431d26:	shl    ecx,0x10
  431d29:	add    ecx,edx
  431d2b:	mov    edx,DWORD PTR ds:0x447d14
  431d31:	add    edx,0x17536c5d
  431d37:	xor    edx,ecx
  431d39:	mov    DWORD PTR ds:0x447d04,ecx
  431d3f:	mov    DWORD PTR [eax+0x14],edx
  431d42:	mov    edx,DWORD PTR ds:0x4470d0
  431d48:	add    edx,0x8
  431d4b:	add    eax,0x18
  431d4e:	dec    esi
  431d4f:	mov    DWORD PTR ds:0x4470d0,edx
  431d55:	jne    0x431bf0
  431d5b:	mov    esi,DWORD PTR ds:0x447d1c
  431d61:	mov    ebx,DWORD PTR ds:0x444050
  431d67:	mov    ecx,DWORD PTR ds:0x4470d4
  431d6d:	add    esi,0x76c8
  431d73:	mov    edi,0x14d
  431d78:	jmp    0x431d80
  431d7a:	lea    ebx,[ebx+0x0]
  431d80:	movzx  eax,BYTE PTR [ecx+0x7]
  431d84:	movzx  edx,WORD PTR [ecx+0x5]
  431d88:	movzx  ecx,BYTE PTR [ecx+0x1]
  431d8c:	shl    eax,0x10
  431d8f:	add    eax,edx
  431d91:	shl    eax,0x8
  431d94:	add    eax,ecx
  431d96:	mov    ds:0x447d04,eax
  431d9b:	mov    edx,0x2fd461f2
  431da0:	sub    edx,DWORD PTR ds:0x447d14
  431da6:	xor    edx,eax
  431da8:	mov    DWORD PTR [esi],edx
  431daa:	mov    eax,ds:0x4470d4
  431daf:	movzx  ecx,BYTE PTR [eax+0xe]
  431db3:	movzx  edx,WORD PTR [eax+0xa]
  431db7:	movzx  eax,BYTE PTR [eax+0x8]
  431dbb:	shl    ecx,0x10
  431dbe:	add    ecx,edx
  431dc0:	shl    ecx,0x8
  431dc3:	add    ecx,eax
  431dc5:	mov    DWORD PTR ds:0x447d04,ecx
  431dcb:	call   ebx
  431dcd:	mov    ecx,0x2fd461f2
  431dd2:	sub    ecx,DWORD PTR ds:0x447d14
  431dd8:	add    esi,0x8
  431ddb:	xor    ecx,DWORD PTR ds:0x447d04
  431de1:	mov    DWORD PTR [esi-0x4],ecx
  431de4:	mov    ecx,DWORD PTR ds:0x4470d4
  431dea:	add    ecx,0x10
  431ded:	dec    edi
  431dee:	mov    DWORD PTR ds:0x4470d4,ecx
  431df4:	jne    0x431d80
  431df6:	mov    esi,DWORD PTR ds:0x447d1c
  431dfc:	mov    ebx,DWORD PTR ds:0x44400c
  431e02:	mov    ecx,DWORD PTR ds:0x4470d8
  431e08:	add    esi,0x8130
  431e0e:	mov    edi,0x119
  431e13:	movzx  eax,BYTE PTR [ecx+0x7]
  431e17:	movzx  edx,BYTE PTR [ecx+0x5]
  431e1b:	shl    eax,0x8
  431e1e:	add    eax,edx
  431e20:	movzx  edx,BYTE PTR [ecx+0x3]
  431e24:	movzx  ecx,BYTE PTR [ecx+0x1]
  431e28:	shl    eax,0x8
  431e2b:	add    eax,edx
  431e2d:	shl    eax,0x8
  431e30:	mov    edx,0x2dc4eb74
  431e35:	sub    edx,DWORD PTR ds:0x447d14
  431e3b:	add    eax,ecx
  431e3d:	xor    edx,eax
  431e3f:	push   0x0
  431e41:	mov    ds:0x447d04,eax
  431e46:	mov    DWORD PTR [esi],edx
  431e48:	push   0x0
  431e4a:	add    esi,0x4
  431e4d:	call   ebx
  431e4f:	mov    ecx,DWORD PTR ds:0x4470d8
  431e55:	add    ecx,0x8
  431e58:	dec    edi
  431e59:	mov    DWORD PTR ds:0x4470d8,ecx
  431e5f:	jne    0x431e13
  431e61:	mov    esi,DWORD PTR ds:0x447d1c
  431e67:	mov    ebx,DWORD PTR ds:0x44405c
  431e6d:	mov    eax,ds:0x4470dc
  431e72:	add    esi,0x8594
  431e78:	mov    edi,0x2e9
  431e7d:	lea    ecx,[ecx+0x0]
  431e80:	movzx  ecx,BYTE PTR [eax+0x7]
  431e84:	movzx  edx,BYTE PTR [eax+0x5]
  431e88:	movzx  eax,WORD PTR [eax]
  431e8b:	shl    ecx,0x8
  431e8e:	add    ecx,edx
  431e90:	shl    ecx,0x10
  431e93:	add    ecx,eax
  431e95:	mov    DWORD PTR ds:0x447d04,ecx
  431e9b:	lea    ecx,[esp+0xc]
  431e9f:	push   ecx
  431ea0:	push   0x0
  431ea2:	call   ebx
  431ea4:	mov    edx,0xbd376285
  431ea9:	sub    edx,DWORD PTR ds:0x447d14
  431eaf:	add    esi,0x4
  431eb2:	xor    edx,DWORD PTR ds:0x447d04
  431eb8:	mov    DWORD PTR [esi-0x4],edx
  431ebb:	mov    eax,ds:0x4470dc
  431ec0:	add    eax,0x8
  431ec3:	dec    edi
  431ec4:	mov    ds:0x4470dc,eax
  431ec9:	jne    0x431e80
  431ecb:	push   0x68
  431ecd:	call   DWORD PTR ds:0x447d1c
  431ed3:	add    esp,0x4
  431ed6:	pop    edi
  431ed7:	pop    esi
  431ed8:	pop    ebx
  431ed9:	add    esp,0x10
  431edc:	ret    
  431edd:	int3   
  431ede:	int3   
  431edf:	int3   
  431ee0:	(bad)  
  431ee1:	out    dx,al
  431ee2:	add    BYTE PTR [edi+edi*8],bh
  431ee5:	or     al,0xc0
  431ee7:	dec    esp
  431ee9:	jno    0x431e74
  431eeb:	add    eax,DWORD PTR [ebx+0xff52b6]
  431ef1:	bound  eax,QWORD PTR [eax]
  431ef3:	push   edx
  431ef4:	int3   
  431ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ef6:	dec    esp
  431ef7:	int3   
  431ef8:	push   DWORD PTR [esi-0x47760300]
  431efe:	fild   WORD PTR [eax]
  431f00:	push   DWORD PTR [ecx]
  431f02:	call   FWORD PTR [ecx]
  431f04:	inc    DWORD PTR [eax-0x9]
  431f07:	mov    edi,edi
  431f09:	enter  0x7a00,0xff
  431f0d:	popa   
  431f0e:	add    al,BYTE PTR [eax]
  431f10:	jmp    DWORD PTR [edi+edi*8+0x156d0071]
  431f17:	add    bh,bh
  431f19:	cdq    
  431f1a:	sbb    edx,0x0
  431f1d:	sbb    BYTE PTR [ecx-0x1],dh
  431f20:	cmp    DWORD PTR [edi],0xffffff83
  431f23:	mov    ch,0xff
  431f25:	(bad)  
  431f26:	cld    
  431f27:	add    BYTE PTR [ebx-0x7c3c00e3],al
  431f2d:	sub    BYTE PTR [eax-0x1],dh
  431f30:	add    BYTE PTR [ecx+0x2f83f8ff],bl
  431f36:	ds (bad) 
  431f38:	dec    DWORD PTR [edi+0x23cc34ff]
  431f3e:	pop    es
  431f3f:	add    BYTE PTR [eax],al
  431f41:	mov    ebx,0xdaffcb89
  431f46:	mov    edi,0xffe9cc89
  431f4b:	sub    esp,ecx
  431f4d:	rcpps  xmm7,xmm7
  431f50:	add    BYTE PTR [edx+0x59832589],dl
  431f56:	clc    
  431f57:	(bad)  
  431f58:	dec    DWORD PTR [ecx]
  431f5a:	inc    DWORD PTR [eax]
  431f5c:	add    BYTE PTR [edx+0x2aff8348],ah
  431f62:	(bad)  
  431f63:	jmp    0xffd03667
  431f68:	(bad)  
  431f69:	jge    0x431f37
  431f6b:	mov    ch,0x89
  431f6d:	dec    ebp
  431f6e:	mov    dh,0x0
  431f70:	add    BYTE PTR [ecx+0x5dffbcff],ch
  431f76:	aaa    
  431f77:	inc    DWORD PTR [ebx+0x36832f]
  431f7d:	call   0xbe00:0x1dff8953
  431f84:	add    BYTE PTR [eax+0xdff0077],cl
  431f8a:	push   DWORD PTR [edi+edi*8]
  431f8d:	jge    0x431f51
  431f8f:	add    BYTE PTR [eax],al
  431f91:	repz add BYTE PTR [ecx-0x49c200],bl
  431f98:	jmp    ecx
  431f9a:	push   DWORD PTR [esi-0x34]
  431f9d:	push   ecx
  431f9e:	(bad)  
  431fa0:	add    BYTE PTR [edi-0x4f001100],ch
  431fa6:	int3   
  431fa7:	mov    edi,edi
  431fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431faa:	jmp    DWORD PTR [edi+0x0]
  431fad:	xor    ecx,DWORD PTR [edx-0x1]
  431fb0:	jmp    DWORD PTR [ecx-0x1]
  431fb3:	imul   ecx,esp,0x79
  431fb6:	pop    esi
  431fb7:	inc    DWORD PTR [ebx-0x332fffad]
  431fbd:	lahf   
  431fbe:	cld    
  431fbf:	add    BYTE PTR [eax],al
  431fc1:	mov    WORD PTR [eax],es
  431fc3:	sbb    al,0xff
  431fc5:	mov    esi,0x8583ffca
  431fca:	add    BYTE PTR [ecx-0xfa5001],bh
  431fd0:	add    BYTE PTR [ecx-0x1],dl
  431fd3:	cwde   
  431fd4:	mov    DWORD PTR [eax-0x29],esp
  431fd7:	inc    DWORD PTR [eax]
  431fd9:	inc    esi
  431fda:	cmp    ebx,0xffffffff
  431fdd:	mov    bl,0x65
  431fdf:	add    DWORD PTR [ebx-0xe400f5],0xffffffd2
  431fe6:	dec    ebp
  431fe7:	inc    DWORD PTR [eax]
  431fe9:	in     al,dx
  431fea:	add    BYTE PTR [edx+0x9996ff],cl
  431ff0:	inc    DWORD PTR [ebx+0x1989c7ff]
  431ff6:	cmp    bh,bh
  431ff8:	inc    ecx
  431ffa:	call   FWORD PTR [eax+0x0]
  431ffd:	(bad)  
  431ffe:	push   0xcc1689ff
  432003:	add    cl,ah
  432005:	mov    edi,0x22ffff6f
  43200a:	add    al,al
  43200c:	add    BYTE PTR [ebx+ecx*4+0x0],dh
  432010:	add    BYTE PTR [ebx+0x6cff6a00],dh
  432016:	jl     0x432017
  432018:	sub    DWORD PTR [eax],0xffffffcc
  43201b:	mov    DWORD PTR [ebx-0x7c00449d],0xffaa83d5
  432025:	sub    dl,ah
  432027:	inc    DWORD PTR [eax]
  432029:	call   0x1f424d2d
  43202e:	lds    eax,FWORD PTR [eax]
  432030:	add    BYTE PTR [ebx-0x337c0700],al
  432036:	fiadd  WORD PTR [ebx-0x487c8c00]
  43203c:	add    BYTE PTR [edi],cl
  43203e:	jmp    0x8392:0xff65ff00
  432045:	pop    ss
  432046:	pop    es
  432047:	inc    DWORD PTR [eax]
  432049:	ds (bad) 
  43204b:	mov    ebx,0x83ebcbff
  432050:	(bad)  
  432051:	out    dx,al
  432052:	(bad)  
  432053:	mov    eax,0xff4b2dff
  432058:	mov    DWORD PTR [ebp+0x0],ecx
  43205b:	cmp    eax,DWORD PTR [ebx+0x3e1d]
  432061:	xor    edi,edi
  432063:	cmp    edi,edi
  432065:	lds    edx,FWORD PTR [ecx-0x761aff77]
  43206b:	dec    esi
  43206c:	add    BYTE PTR [edx-0x247cff19],dh
  432072:	(bad)  
  432073:	jmp    0x115de78
  432078:	call   DWORD PTR [eax]
  43207a:	int3   
  43207b:	retf   0xcc83
  43207e:	jne    0x432003
  432080:	add    BYTE PTR [ebp-0x1],dl
  432083:	sbb    al,0xff
  432085:	pop    ecx
  432086:	pop    edx
  432087:	(bad)  
  432088:	dec    DWORD PTR [ebp-0x34]
  43208b:	sbb    DWORD PTR [eax],eax
  43208d:	mov    DWORD PTR [edi-0x1],eax
  432090:	push   ebp
  432092:	mov    edi,esi
  432094:	add    BYTE PTR [edx+0x34ffff44],cl
  43209a:	mov    DWORD PTR ds:0x1599ff,edx
  4320a0:	add    BYTE PTR [edi-0x77],cl
  4320a3:	mov    edi,0xff4b31ff
  4320a8:	add    BYTE PTR [ecx+0x0],bl
  4320ab:	(bad)  
  4320ac:	int3   
  4320ad:	pop    ss
  4320ae:	add    BYTE PTR es:[eax],al
  4320b1:	in     eax,0x89
  4320b3:	sbb    eax,0x83d14a00
  4320b8:	jmp    FWORD PTR [eax]
  4320ba:	call   FWORD PTR [ebx]
  4320bc:	mov    DWORD PTR [ecx+esi*1-0x7d],ebp
  4320c0:	mov    DWORD PTR [eax],esi
  4320c2:	push   DWORD PTR [ebx]
  4320c4:	dec    DWORD PTR [esi+0x8]
  4320c7:	dec    DWORD PTR [ecx-0x66ff98]
  4320cd:	ss mov edx,0x8183ff
  4320d3:	into   
  4320d4:	(bad)  
  4320d5:	jp     0x4320b6
  4320d7:	dec    esp
  4320d9:	cmp    al,BYTE PTR [eax]
  4320db:	rol    DWORD PTR [ebx-0x7c76a1ea],1
  4320e1:	xchg   edx,eax
  4320e2:	(bad)  
  4320e3:	stc    
  4320e4:	(bad)  
  4320e5:	stc    
  4320e6:	inc    eax
  4320e7:	(bad)  
  4320e8:	(bad)  
  4320e9:	cmp    edi,edi
  4320eb:	test   DWORD PTR [eax],0xff00c0ea
  4320f1:	stos   BYTE PTR es:[edi],al
  4320f2:	jmp    FWORD PTR [eax+0x0]
  4320f5:	xchg   edx,eax
  4320f6:	repz (bad) 
  4320f8:	(bad)  
  4320f9:	(bad)  
  4320fb:	pop    edi
  4320fc:	add    BYTE PTR [esi+0x6c],bh
  4320ff:	cmp    edi,0x45
  432102:	add    BYTE PTR [ecx],al
  432104:	jmp    eax
  432106:	pop    esp
  432107:	inc    DWORD PTR [eax]
  432109:	scas   eax,DWORD PTR es:[edi]
  43210a:	call   FWORD PTR [edi+edi*8+0x41]
  43210e:	aad    0x83
  432110:	call   ebx
  432112:	add    BYTE PTR [eax+eax*1-0x7c762526],al
  432119:	bound  eax,QWORD PTR [eax]
  43211b:	arpl   WORD PTR [ebx-0x7cffc4bb],ax
  432121:	inc    edi
  432122:	or     esi,0x0
  432125:	test   eax,0x4900ff65
  43212a:	add    BYTE PTR [edi-0x36de00],ah
  432130:	dec    DWORD PTR [ebx+eax*4]
  432133:	add    al,BYTE PTR [eax]
  432135:	ja     0x432114
  432137:	inc    DWORD PTR [eax]
  432139:	in     al,0xcc
  43213b:	test   DWORD PTR [eax],0xcc3cde
  432141:	fiadd  WORD PTR [eax]
  432143:	push   edi
  432144:	mov    DWORD PTR [esi+0x580000db],ecx
  43214a:	mov    DWORD PTR [esi+0x0],ecx
  43214d:	ins    DWORD PTR es:[edi],dx
  43214e:	ja     0x43214f
  432150:	inc    DWORD PTR [ebx]
  432152:	push   DWORD PTR [eax-0x5a8e01]
  432158:	jmp    ecx
  43215a:	int3   
  43215b:	sbb    al,0xff
  43215d:	jo     0x4321b3
  43215f:	cmp    edi,0xffffffa3
  432162:	or     DWORD PTR [esi-0x1],0x4d
  432166:	pop    ds
  432167:	dec    esp
  432169:	int3   
  43216a:	sub    DWORD PTR [eax-0x7cdc4b01],0xffffff89
  432171:	add    ecx,esp
  432173:	mov    al,ds:0xffdcdb00
  432178:	mov    DWORD PTR [esi],edx
  43217a:	(bad)  
  43217b:	out    dx,al
  43217c:	inc    DWORD PTR [eax-0x78]
  43217f:	(bad)  
  432180:	(bad)  
  432181:	jl     0x432106
  432183:	arpl   WORD PTR [eax],ax
  432185:	hlt    
  432186:	retf   0x0
  432189:	leave  
  43218a:	add    BYTE PTR [esi],ch
  43218c:	inc    DWORD PTR [ebp+0x1f000039]
  432192:	add    bh,dl
  432194:	mov    DWORD PTR [ebp+edi*2+0x0],ebp
  432198:	jmp    FWORD PTR [edx-0x34]
  43219b:	sub    eax,0xb6b7ff
  4321a0:	jmp    FWORD PTR [ecx-0x77]
  4321a3:	mov    edi,edi
  4321a5:	imul   DWORD PTR [edi+edi*8]
  4321a8:	int3   
  4321a9:	pop    ebx
  4321aa:	jmp    FWORD PTR ds:0xff1c58ff
  4321b0:	dec    edx
  4321b2:	(bad)  
  4321b3:	call   FWORD PTR ds:[ecx+0x1cff8392]
  4321ba:	call   FWORD PTR [ebp-0x1]
  4321bd:	hlt    
  4321be:	fld    QWORD PTR [eax]
  4321c0:	(bad)  
  4321c1:	jns    0x4321c3
  4321c3:	cmp    eax,0xff74afff
  4321c8:	add    BYTE PTR [ecx],dh
  4321ca:	int3   
  4321cb:	sbb    DWORD PTR gs:[edx+ebx*8-0x1],0x0
  4321d1:	inc    edi
  4321d2:	add    BYTE PTR [ecx-0x1],bh
  4321d5:	mov    dl,0x1f
  4321d7:	add    BYTE PTR [eax],al
  4321d9:	push   ebx
  4321da:	add    dl,cl
  4321dc:	jmp    FWORD PTR [esi-0x1400fff6]
  4321e2:	inc    esp
  4321e4:	mov    edi,ebx
  4321e6:	add    al,BYTE PTR [eax]
  4321e8:	(bad)  
  4321e9:	(bad)  
  4321eb:	xchg   BYTE PTR [eax],al
  4321ed:	and    DWORD PTR [edi+edi*8],0x0
  4321f1:	out    0xff,al
  4321f3:	outs   dx,BYTE PTR ds:[esi]
  4321f4:	jmp    FWORD PTR [eax]
  4321f6:	hlt    
  4321f7:	(bad)  
  4321f8:	push   DWORD PTR [edi+0x26ccacff]
  4321fe:	xchg   edx,eax
  4321ff:	int3   
  432200:	int3   
  432201:	retf   0xdfff
  432204:	add    BYTE PTR [ebp+0x6b0083d5],cl
  43220a:	inc    eax
  43220c:	add    DWORD PTR [edx-0x64],0xffffffff
  432210:	add    al,ch
  432212:	add    BYTE PTR [ebp+0x3735ff],bh
  432218:	jmp    DWORD PTR [ecx+ecx*4-0x4f]
  43221c:	and    DWORD PTR [ebx],0xffffffca
  43221f:	add    bh,bh
  432221:	sahf   
  432222:	add    BYTE PTR [eax-0x7d],bl
  432225:	sbb    DWORD PTR [ecx-0x1],edx
  432228:	sbb    edx,0xffffffcc
  43222b:	(bad)  
  43222c:	call   FWORD PTR [edi+0x37]
  43222f:	inc    DWORD PTR [eax]
  432231:	push   ss
  432232:	(bad)  
  432233:	fcos   
  432235:	push   edx
  432236:	pushf  
  432237:	or     esp,0x1e
  43223a:	dec    ebx
  43223c:	add    BYTE PTR [edi],al
  43223e:	adc    BYTE PTR [eax],al
  432240:	int3   
  432241:	jae    0x432242
  432243:	pop    ebx
  432244:	and    DWORD PTR [eax],0x59
  432247:	inc    DWORD PTR [eax]
  432249:	outs   dx,DWORD PTR ds:[esi]
  43224a:	push   esi
  43224c:	call   FWORD PTR [ebx+ebp*8+0x0]
  432250:	sub    ebp,0x0
  432253:	hlt    
  432254:	mov    DWORD PTR [ebp-0x48],esp
  432257:	add    BYTE PTR [eax],al
  432259:	add    BYTE PTR [eax],al
  43225b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43225c:	int3   
  43225d:	pop    esi
  43225e:	out    0x0,eax
  432260:	add    BYTE PTR [ecx-0x1],ch
  432263:	mov    bh,0x0
  432265:	dec    ebx
  432266:	dec    esi
  432267:	add    bh,bh
  432269:	sub    al,0xff
  43226b:	sbb    al,BYTE PTR [ebx+0xff0277]
  432271:	(bad)  
  432274:	jmp    FWORD PTR [edi-0x9]
  432277:	int3   
  432278:	jmp    FWORD PTR [ecx-0x77]
  43227b:	mov    esp,0xd036ff
  432280:	jmp    DWORD PTR [edi+edi*8-0x75]
  432284:	int3   
  432285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432286:	sbb    al,0xff
  432288:	jmp    DWORD PTR [edi+edi*8-0x35cb33c0]
  43228f:	int3   
  432290:	int3   
  432291:	add    al,0xff
  432293:	hlt    
  432294:	add    BYTE PTR [esi],al
  432296:	mov    dl,0xcc
  432298:	add    BYTE PTR [ebx],cl
  43229a:	cmp    DWORD PTR [ebp-0xe9cd01],0xffffffff
  4322a1:	(bad)  
  4322a3:	inc    esi
  4322a4:	dec    DWORD PTR [ecx-0x79ff0091]
  4322aa:	add    BYTE PTR [edx-0x7d],bh
  4322ad:	dec    ebx
  4322ae:	arpl   di,di
  4322b0:	or     DWORD PTR [edi+edi*8+0x68],0xffffff83
  4322b5:	pop    ecx
  4322b6:	fild   DWORD PTR [eax]
  4322b8:	call   FWORD PTR [eax-0x1]
  4322bb:	dec    DWORD PTR ss:[edi-0x5e00ff70]
  4322c2:	(bad)  
  4322c3:	fild   DWORD PTR [ebx-0x9221]
  4322c9:	outs   dx,BYTE PTR ds:[esi]
  4322ca:	add    BYTE PTR ds:0x9886ff,ah
  4322d0:	inc    DWORD PTR [edi]
  4322d2:	mov    DWORD PTR [edi-0x1],ebx
  4322d5:	adc    bl,bl
  4322d7:	inc    DWORD PTR [ebx-0x7c4200bd]
  4322dd:	sub    DWORD PTR [ecx],eax
  4322df:	dec    esp
  4322e1:	lods   al,BYTE PTR ds:[esi]
  4322e2:	and    DWORD PTR [edi-0xda8800],0xffffffff
  4322e9:	mov    esi,0x20006b00
  4322ee:	out    dx,eax
  4322ef:	mov    DWORD PTR [ecx-0x76d976a9],ecx
  4322f5:	sub    al,0xf6
  4322f7:	or     DWORD PTR [ecx-0xe7cf7],0xffffffe2
  4322fe:	xchg   ebp,eax
  4322ff:	add    BYTE PTR [eax],al
  432301:	push   esi
  432302:	jmp    DWORD PTR [esi]
  432304:	int3   
  432305:	cmp    eax,0x98ffcca7
  43230a:	add    DWORD PTR [ecx-0x1],0xffffffbc
  43230e:	lock dec esp
  432311:	pop    edi
  432312:	adc    DWORD PTR [ebp-0x336eee01],0xffffff83
  432319:	xchg   BYTE PTR [ebx-0x4f9100ef],al
  43231f:	dec    esp
  432321:	jmp    0x432322
  432323:	(bad)  
  432326:	inc    eax
  432327:	inc    DWORD PTR [eax]
  432329:	cmp    edi,edi
  43232b:	pop    ecx
  43232c:	add    BYTE PTR [ecx+ebp*1-0x77],bh
  432330:	add    BYTE PTR ds:0x200096ff,ch
  432336:	xor    BYTE PTR [ecx-0x16001c00],cl
  43233c:	push   DWORD PTR [ebx]
  43233e:	test   DWORD PTR [eax],0xf200a200
  432344:	push   DWORD PTR [eax]
  432346:	sar    bh,0x83
  432349:	cli    
  43234a:	add    bl,ch
  43234c:	inc    DWORD PTR [ebx-0x1bff005b]
  432352:	dec    DWORD PTR [ecx-0x7c7f6701]
  432358:	sub    DWORD PTR [eax+0x0],0xffffffbd
  43235c:	int3   
  43235d:	sbb    bl,bh
  43235f:	dec    DWORD PTR [ecx+0xaa8340]
  432365:	xchg   cl,dl
  432367:	add    bh,bh
  432369:	pusha  
  43236a:	int3   
  43236b:	pop    ebx
  43236c:	cmp    DWORD PTR [edx],0xffffffbe
  43236f:	(bad)  
  432370:	jmp    edx
  432372:	call   DWORD PTR [edi]
  432374:	mov    DWORD PTR ds:0x5acc007c,eax
  43237a:	jmp    DWORD PTR [ecx-0xabf801]
  432380:	jmp    FWORD PTR [ebx]
  432382:	(bad)  
  432383:	mov    edx,0x830989cc
  432388:	call   ebx
  43238a:	(bad)  
  43238b:	jmp    0x43238d
  43238d:	or     BYTE PTR [ecx+0xc8ff00],al
  432393:	jl     0x432395
  432395:	xlat   BYTE PTR ds:[ebx]
  432396:	cld    
  432397:	add    BYTE PTR [eax],al
  432399:	jnp    0x43239b
  43239b:	aaa    
  43239c:	inc    DWORD PTR [eax-0x2c]
  43239f:	int3   
  4323a0:	push   DWORD PTR [ebx+0x73ff1383]
  4323a6:	cmp    eax,0x20ffff
  4323ab:	idiv   edi
  4323ad:	pop    edx
  4323ae:	loop   0x43237c
  4323b0:	add    BYTE PTR [ecx],dh
  4323b2:	add    al,ah
  4323b4:	inc    DWORD PTR [edx+0x54]
  4323b7:	(bad)  
  4323b8:	(bad)  
  4323b9:	jmp    0xdb43e9be
  4323be:	outs   dx,DWORD PTR ds:[esi]
  4323bf:	cmp    edi,0xffffffd3
  4323c2:	dec    DWORD PTR [edx+0x3b17ff]
  4323c8:	call   DWORD PTR [ebx-0x1effbd01]
  4323ce:	ja     0x4323d0
  4323d0:	int3   
  4323d1:	inc    esi
  4323d2:	add    BYTE PTR [ecx-0x1],dh
  4323d5:	shl    BYTE PTR [edx+0x8900cc],cl
  4323db:	inc    ecx
  4323dc:	cmp    DWORD PTR [esi+0x72ffff12],0xffffff83
  4323e3:	mov    bl,0xff
  4323e5:	lds    ebp,FWORD PTR [edi+edi*8+0x35cc0983]
  4323ec:	call   FWORD PTR [edi]
  4323ee:	jne    0x4323f0
  4323f0:	call   DWORD PTR [esi]
  4323f2:	call   DWORD PTR [ebx+eax*4-0x7b8e]
  4323f9:	push   ebp
  4323fa:	mov    DWORD PTR [eax],esp
  4323fc:	mov    DWORD PTR [eax+0x5],esp
  4323ff:	(bad)  
  432400:	push   ebx
  432402:	or     esi,0xffffffcc
  432405:	or     esi,DWORD PTR [edi+edi*8-0x34]
  432409:	fxch   st(4)
  43240b:	stos   DWORD PTR es:[edi],eax
  43240c:	call   FWORD PTR [edi+0x6dff00cb]
  432412:	add    BYTE PTR [ebp-0x1],bh
  432415:	(bad)  
  432417:	int3   
  432418:	add    dl,dh
  43241a:	and    DWORD PTR [edx-0xabca7d],0xffffff83
  432421:	pop    ss
  432422:	int3   
  432423:	rol    DWORD PTR [eax],0xcd
  432426:	mov    ds:0xd5ffff,al
  43242b:	idiv   bh
  43242d:	mov    esp,0x8b83ffb3
  432432:	inc    ecx
  432434:	int3   
  432435:	leave  
  432436:	cmp    bh,bh
  432438:	dec    DWORD PTR [eax-0x5c33f401]
  43243e:	int    0x83
  432440:	inc    DWORD PTR [eax]
  432442:	(bad)  
  432443:	cmp    eax,0xffcf66cc
  432448:	add    BYTE PTR [edi+0x27896900],cl
  43244e:	ss dec esp
  432451:	pushf  
  432452:	add    DWORD PTR [ebx],0xffffff83
  432455:	popa   
  432456:	out    0xff,eax
  432458:	mov    DWORD PTR [edx+0x40cc88cc],ebx
  43245e:	mov    esp,0x836f83ff
  432463:	push   0xffcf6b00
  432468:	add    ch,dh
  43246a:	add    BYTE PTR [eax],ch
  43246c:	add    BYTE PTR [ebp-0x3f00ff26],bl
  432472:	add    BYTE PTR [edx-0xe2c700],bl
  432478:	call   DWORD PTR [eax+eax*1-0x7aad33ec]
  43247f:	add    BYTE PTR [eax],al
  432481:	xchg   edx,eax
  432482:	add    BYTE PTR [ecx],al
  432484:	inc    DWORD PTR [esi+edx*4]
  432487:	or     DWORD PTR [ecx-0x7cc600be],0x29
  43248e:	jg     0x432490
  432490:	int3   
  432491:	mov    BYTE PTR [eax],al
  432493:	sbb    edi,edi
  432495:	pop    esi
  432496:	pop    ebp
  432497:	add    bh,bh
  432499:	mov    ah,0x0
  43249b:	sar    edi,cl
  43249d:	rol    dl,0xcc
  4324a0:	mov    DWORD PTR [edx-0x77],esi
  4324a3:	lods   eax,DWORD PTR ds:[esi]
  4324a4:	call   DWORD PTR [edx]
  4324a6:	mov    ecx,0xff3383ff
  4324ab:	retf   0x2800
  4324ae:	inc    esp
  4324af:	add    BYTE PTR [eax],al
  4324b1:	cdq    
  4324b2:	sub    DWORD PTR [ecx-0x51727d],0xffffffff
  4324b9:	or     eax,0xedff47ff
  4324be:	pop    edi
  4324bf:	add    BYTE PTR [eax],al
  4324c1:	inc    DWORD PTR [eax]
  4324c3:	add    edi,edi
  4324c5:	jb     0x43250f
  4324c7:	inc    DWORD PTR [ebx+0xc8890e]
  4324cd:	scas   al,BYTE PTR es:[edi]
  4324ce:	adc    al,BYTE PTR [ebx+0x7dff0eff]
  4324d4:	jmp    esi
  4324d6:	(bad)  
  4324d7:	mov    DWORD PTR [eax],eax
  4324d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4324da:	jmp    FWORD PTR [ecx]
  4324dc:	jmp    FWORD PTR [esi+0x36]
  4324df:	add    bh,bh
  4324e1:	popa   
  4324e2:	int3   
  4324e3:	cmp    bh,bh
  4324e5:	push   0x57ff0066
  4324ea:	add    BYTE PTR [ecx-0xc0b300],ah
  4324f0:	int3   
  4324f1:	cdq    
  4324f2:	inc    eax
  4324f4:	call   DWORD PTR [ecx-0x36]
  4324f7:	add    bh,bh
  4324f9:	aam    0xff
  4324fb:	jp     0x4324fc
  4324fd:	das    
  4324fe:	lahf   
  4324ff:	(bad)  
  432500:	inc    DWORD PTR [edi+0x590011ff]
  432506:	push   edx
  432507:	int3   
  432508:	int3   
  432509:	sub    al,0xff
  43250b:	test   al,0xff
  43250d:	fild   WORD PTR [esi-0x77]
  432510:	jmp    FWORD PTR [esi-0x5d00e434]
  432516:	inc    BYTE PTR [eax]
  432518:	add    BYTE PTR [ecx-0x1],al
  43251b:	jbe    0x4324a0
  43251d:	and    dl,BYTE PTR [eax+eax*1-0x1]
  432521:	out    dx,eax
  432522:	dec    edi
  432524:	add    BYTE PTR [ebx-0x4d],al
  432527:	inc    DWORD PTR [eax]
  432529:	push   ebx
  43252a:	add    BYTE PTR [eax+0xe1e83],cl
  432530:	add    BYTE PTR [eax+eax*1+0x77],dl
  432534:	add    BYTE PTR [ebx+0x3e],bh
  432537:	(bad)  
  432538:	(bad)  
  432539:	out    dx,al
  43253a:	dec    DWORD PTR [edx-0x1]
  43253d:	mov    bl,0xbf
  43253f:	add    bh,bh
  432541:	xlat   BYTE PTR ds:[ebx]
  432542:	cmp    esi,0xffffffff
  432545:	jbe    0x432570
  432547:	inc    DWORD PTR [ebx-0xe3ffea]
  43254d:	mov    ah,0xed
  43254f:	mov    DWORD PTR [ebx-0x331800f4],eax
  432555:	xchg   esp,eax
  432556:	fwait
  432557:	(bad)  
  432558:	push   DWORD PTR [ebp-0x1]
  43255b:	sbb    cl,BYTE PTR [ecx+0xf238]
  432561:	jbe    0x4324e6
  432563:	and    eax,0x83417fcc
  432568:	add    BYTE PTR [esi],ch
  43256a:	add    BYTE PTR [edi+0x3a1700],ch
  432570:	add    dl,dh
  432572:	mov    DWORD PTR [esi],esi
  432574:	call   FWORD PTR ds:0x97890094
  43257a:	(bad)  
  43257b:	std    
  43257c:	add    BYTE PTR [ebp+0x7e],bl
  43257f:	inc    DWORD PTR [ebx+0x1fffba]
  432585:	lods   eax,DWORD PTR ds:[esi]
  432586:	ds add ah,cl
  432589:	push   ecx
  43258a:	call   edi
  43258c:	mov    edx,esp
  43258e:	sbb    bh,bh
  432590:	jmp    DWORD PTR [edx]
  432592:	inc    esi
  432594:	or     ebx,0x58
  432597:	add    BYTE PTR [eax],al
  432599:	mov    ah,0x89
  43259b:	mov    eax,ds:0xff60eaff
  4325a0:	mov    DWORD PTR [ebp-0x34],eax
  4325a3:	or     ecx,DWORD PTR [ecx-0x7c0310]
  4325a9:	add    DWORD PTR [ebx-0x4dd700b1],0x570000
  4325b3:	fwait
  4325b4:	jmp    eax
  4325b6:	bound  eax,QWORD PTR [ebx+0x5f835a83]
  4325bc:	call   DWORD PTR [edx-0x2e]
  4325bf:	inc    DWORD PTR [eax]
  4325c1:	aam    0xff
  4325c3:	fld    DWORD PTR [eax]
  4325c5:	mov    ds:0xe2ffff34,al
  4325ca:	add    BYTE PTR [ebx-0xe23e00],ch
  4325d0:	(bad)  
  4325d1:	jns    0x432556
  4325d3:	pop    edx
  4325d4:	cmp    ecx,0x2f
  4325d7:	add    bh,bh
  4325d9:	cli    
  4325da:	call   DWORD PTR [ecx-0x7d]
  4325dd:	dec    esp
  4325de:	scas   eax,DWORD PTR es:[edi]
  4325df:	add    ah,cl
  4325e1:	bound  eax,QWORD PTR [eax]
  4325e3:	mov    edx,0xd5a489
  4325e8:	adc    esi,0xffffffff
  4325eb:	sub    eax,0xff291900
  4325f0:	jmp    DWORD PTR [ebx]
  4325f2:	add    ah,bl
  4325f4:	inc    DWORD PTR [eax-0x43]
  4325f7:	cmp    edi,0xffffffec
  4325fa:	xor    DWORD PTR [edi],0xffffffff
  4325fd:	ja     0x4325ac
  4325ff:	mov    edi,edi
  432601:	popa   
  432602:	inc    DWORD PTR [edx-0x335cd301]
  432608:	add    ch,bl
  43260a:	int3   
  43260b:	mov    DWORD PTR [eax],eax
  43260d:	sbb    DWORD PTR [ecx+0x1e00ff],0x16
  432614:	add    cl,bh
  432616:	stos   DWORD PTR es:[edi],eax
  432617:	int3   
  432618:	add    BYTE PTR [ecx-0x1],bh
  43261b:	dec    edx
  43261c:	inc    DWORD PTR [ebp+0x3e83ff1a]
  432622:	add    cl,bh
  432624:	add    BYTE PTR [edx+0x53ffffba],bh
  43262a:	call   DWORD PTR [ebx-0x33d201]
  432630:	jmp    ebp
  432632:	call   DWORD PTR [edi-0x7cc44300]
  432638:	add    BYTE PTR [esi],al
  43263a:	mov    DWORD PTR [edi-0x54be7d],edx
  432640:	jmp    FWORD PTR [esi]
  432642:	call   ecx
  432644:	dec    DWORD PTR [esi+0x4a]
  432647:	cmp    edi,0xffffffa2
  43264a:	(bad)  
  43264b:	stc    
  43264c:	jmp    DWORD PTR [ecx-0x40]
  43264f:	inc    DWORD PTR [eax]
  432651:	rol    BYTE PTR [eax],0x48
  432654:	int3   
  432655:	mov    dh,BYTE PTR [ebp+0x43ffff]
  43265b:	dec    eax
  43265c:	(bad)  
  43265d:	jp     0x432605
  43265f:	int3   
  432660:	add    ch,bh
  432662:	add    DWORD PTR [ebp-0x34],0xffffffcd
  432666:	ror    ah,0xff
  432669:	add    eax,DWORD PTR [eax]
  43266b:	test   bh,bh
  43266d:	add    DWORD PTR ds:0x17ff00,ebx
  432673:	mov    edi,edi
  432675:	sbb    BYTE PTR [ebx-0x2b0001],ah
  43267b:	push   ecx
  43267c:	jmp    eax
  43267e:	push   es
  43267f:	inc    DWORD PTR [ebx-0xfa00b7]
  432685:	or     al,0x64
  432687:	int3   
  432688:	(bad)  
  432689:	jp     0x43268b
  43268b:	mov    WORD PTR [ebp-0x4f],dx
  43268f:	add    BYTE PTR [ebx-0x120084],al
  432695:	repnz idiv edi
  432698:	or     esi,0xffffffff
  43269b:	loope  0x43269d
  43269d:	dec    ebp
  43269e:	popf   
  43269f:	add    bh,bh
  4326a1:	jae    0x43262c
  4326a3:	cmp    eax,0xffd66dff
  4326a8:	xor    DWORD PTR [eax+0x6f00a9ff],0xffffff8e
  4326af:	add    bh,bh
  4326b1:	jne    0x4326b2
  4326b3:	sbb    BYTE PTR [eax],al
  4326b5:	test   DWORD PTR [esi+0x0],esp
  4326b8:	jmp    FWORD PTR [eax-0x1]
  4326bb:	outs   dx,BYTE PTR ds:[esi]
  4326bc:	add    BYTE PTR [ecx],cl
  4326be:	xchg   esp,eax
  4326bf:	(bad)  
  4326c0:	(bad)  
  4326c1:	sti    
  4326c2:	push   DWORD PTR [eax]
  4326c4:	push   DWORD PTR [eax-0x3a007c64]
  4326ca:	add    BYTE PTR [esi],cl
  4326cc:	inc    DWORD PTR [ebx-0x30000078]
  4326d2:	call   DWORD PTR [ecx-0x137200]
  4326d8:	sub    DWORD PTR [edx],0x0
  4326db:	push   eax
  4326dc:	jmp    FWORD PTR [eax+ebp*1-0x1]
  4326e0:	add    BYTE PTR [edi+0x6f899883],dh
  4326e6:	test   eax,0x8302ff83
  4326eb:	jmp    0xfff9b4bc
  4326f0:	sub    DWORD PTR [eax+eax*1],0xffffffcc
  4326f4:	dec    esp
  4326f6:	fcos   
  4326f8:	jmp    FWORD PTR [edi+0x180032ff]
  4326fe:	imul   ecx,esp,0x0
  432701:	ja     0x432686
  432703:	sbb    bh,bh
  432705:	test   DWORD PTR [ebp-0x1],edx
  432708:	(bad)  
  432709:	cmp    BYTE PTR [eax],al
  43270b:	test   ah,0x98
  43270e:	mov    bl,0x83
  432710:	int3   
  432711:	jmp    0x432713
  432713:	jmp    0x432714
  432715:	push   esp
  432716:	rol    BYTE PTR [ebx+0x51001d00],cl
  43271c:	add    al,ah
  43271e:	mov    edi,0xff48ff89
  432723:	mov    BYTE PTR [ecx+0xff20],cl
  432729:	icebp  
  43272a:	call   eax
  43272c:	add    ch,al
  43272e:	inc    esi
  43272f:	cmp    edi,0xffffffef
  432732:	int3   
  432733:	jl     0x432701
  432735:	ss std 
  432737:	(bad)  
  432738:	jmp    FWORD PTR [ecx-0x2cff9401]
  43273e:	mov    al,ds:0xff13ffff
  432743:	rol    DWORD PTR [ebx-0x957],0xce
  43274a:	call   FWORD PTR [edi-0x1]
  43274d:	ret    
  43274e:	sar    edi,cl
  432750:	push   DWORD PTR [ebp+0x6fff7dcc]
  432756:	mov    BYTE PTR [eax],al
  432758:	cmp    DWORD PTR [eax+0x3fff4aff],0xffffffd5
  43275f:	dec    DWORD PTR [ecx-0xcd00c3]
  432765:	fimul  WORD PTR [edi+edi*8-0x1]
  432769:	jle    0x43276b
  43276b:	and    al,BYTE PTR [eax]
  43276d:	shr    BYTE PTR [ebx+0xca8383],cl
  432773:	push   edi
  432774:	jmp    DWORD PTR [eax]
  432776:	xor    al,0x83
  432778:	int3   
  432779:	mov    ah,0x0
  43277b:	scas   al,BYTE PTR es:[edi]
  43277c:	(bad)  
  43277d:	mov    ebx,0x34ff83be
  432782:	add    BYTE PTR [edx-0x70c01],dl
  432788:	mov    eax,eax
  43278a:	inc    DWORD PTR [edx]
  43278c:	add    BYTE PTR [esi-0x7f760082],bl
  432792:	int3   
  432793:	or     BYTE PTR [ebx-0xec2],al
  432799:	mov    edi,0x398345ff
  43279e:	dec    esp
  43279f:	inc    DWORD PTR [eax]
  4327a1:	add    eax,0x2783b7ff
  4327a6:	cmp    al,BYTE PTR [eax]
  4327a8:	inc    DWORD PTR [edi+edi*8]
  4327ab:	mov    ebx,0xffa6d3ff
  4327b0:	add    BYTE PTR [ebx],al
  4327b2:	add    BYTE PTR [edx-0x1],bl
  4327b5:	inc    ebp
  4327b6:	test   eax,0x83a0ff83
  4327bb:	adc    al,0x83
  4327bd:	xchg   ebp,eax
  4327be:	out    0x83,al
  4327c0:	add    BYTE PTR [eax],bl
  4327c2:	sbb    DWORD PTR [ebx],0x0
  4327c5:	pushf  
  4327c6:	adc    ecx,esp
  4327c8:	add    BYTE PTR [ecx],dh
  4327ca:	int3   
  4327cb:	adc    DWORD PTR [eax],eax
  4327cd:	mov    esi,0xe289ff2a
  4327d2:	add    BYTE PTR ds:0xff576aff,bh
  4327d8:	int3   
  4327d9:	jno    0x4327da
  4327db:	nop
  4327dc:	add    BYTE PTR [ecx+0x74],cl
  4327df:	int3   
  4327e0:	add    DWORD PTR [ecx],0xffffffff
  4327e3:	sub    bh,bh
  4327e5:	inc    esi
  4327e6:	ret    0xcc
  4327e9:	outs   dx,BYTE PTR ds:[esi]
  4327ea:	cmp    ebp,0xffffffff
  4327ed:	mov    eax,0x2100000b
  4327f2:	dec    edx
  4327f4:	push   DWORD PTR [esp+ebx*8-0xc5337d]
  4327fb:	push   cs
  4327fc:	add    BYTE PTR [eax+edx*8],bh
  4327ff:	add    ah,cl
  432801:	xchg   edi,eax
  432802:	sub    DWORD PTR [edx+0x0],0x5d
  432806:	xchg   ebx,eax
  432807:	inc    DWORD PTR [eax]
  432809:	fiadd  WORD PTR [eax]
  43280b:	dec    esp
  43280c:	adc    DWORD PTR [edi+0x59],0xffffff89
  432810:	int3   
  432811:	or     ah,0x99
  432814:	add    BYTE PTR [ebx-0x6c000007],dh
  43281a:	push   DWORD PTR [ebx-0x1]
  43281d:	arpl   WORD PTR [edi+edi*8],cx
  432820:	add    BYTE PTR [edx-0x6b338c34],al
  432826:	cmc    
  432827:	add    bh,bh
  432829:	daa    
  43282a:	push   DWORD PTR [ebx-0x18a7d]
  432830:	sbb    ebx,0xffffffff
  432833:	mov    ebp,0xfffaa8cc
  432838:	or     DWORD PTR [ebx+0x10ff25ff],0x41
  43283f:	add    BYTE PTR [ecx+0x7c0030],cl
  432845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432846:	sbb    al,BYTE PTR [eax]
  432848:	call   FWORD PTR [ebx+eax*4+0x19]
  43284c:	add    bl,cl
  43284e:	push   eax
  43284f:	inc    DWORD PTR [eax]
  432851:	jle    0x432852
  432853:	xor    al,BYTE PTR [eax]
  432855:	push   0xffffffa0
  432857:	add    DWORD PTR [ebx-0x387c6b],0xffffffdc
  43285e:	scas   eax,DWORD PTR es:[edi]
  43285f:	add    DWORD PTR [eax],0xfffffff9
  432862:	add    BYTE PTR [edi-0x7d],bl
  432865:	lods   eax,DWORD PTR ds:[esi]
  432866:	int3   
  432867:	(bad)  
  432868:	(bad)  
  432869:	fld    QWORD PTR [ebx-0x4a1cffa7]
  43286f:	add    DWORD PTR [eax],0xffffffab
  432872:	jmp    DWORD PTR ds:0x684dff
  432878:	int3   
  432879:	outs   dx,BYTE PTR ds:[esi]
  43287a:	int3   
  43287b:	int3   
  43287c:	cmp    esp,0xffffffd2
  43287f:	dec    esp
  432881:	mov    eax,0x23ff21ff
  432886:	scas   al,BYTE PTR es:[edi]
  432887:	(bad)  
  432888:	jmp    FWORD PTR [eax+0x7bff7bcc]
  43288e:	fild   WORD PTR [eax]
  432890:	push   DWORD PTR [ebp-0x5007001]
  432896:	cwde   
  432897:	or     esp,0xffffffa4
  43289a:	adc    DWORD PTR [edx],0xffffff83
  43289d:	iret   
  43289e:	scas   al,BYTE PTR es:[edi]
  43289f:	(bad)  
  4328a0:	(bad)  
  4328a1:	jmp    0xab438ba5
  4328a6:	jno    0x4328a7
  4328a8:	add    BYTE PTR [eax-0x7d],ch
  4328ab:	add    bh,bh
  4328ad:	(bad)  
  4328ae:	imul   edi,edi,0xffffffff
  4328b1:	dec    edx
  4328b2:	add    BYTE PTR [ebx+0xb85600],ch
  4328b8:	call   DWORD PTR [eax+eax*1]
  4328bb:	sbb    al,BYTE PTR [eax]
  4328bd:	sub    al,0x96
  4328bf:	add    bh,bh
  4328c1:	pop    ds
  4328c2:	(bad)  
  4328c3:	jmp    0xffd710c8
  4328c8:	(bad)  
  4328c9:	jmp    0x4328ca
  4328cb:	jmp    0xb2ff:0xff04fa00
  4328d2:	push   DWORD PTR [eax+eax*1-0x79]
  4328d6:	hlt    
  4328d7:	add    BYTE PTR [ebx-0xe17c93],al
  4328dd:	and    al,0x2f
  4328df:	inc    DWORD PTR [eax]
  4328e1:	stc    
  4328e2:	add    ecx,0xffffffff
  4328e5:	(bad)  
  4328e6:	mov    esi,0x8379ffcc
  4328eb:	into   
  4328ec:	add    BYTE PTR [ecx-0x5ffffcf],ch
  4328f2:	call   FWORD PTR [ebx+0x0]
  4328f5:	cmc    
  4328f6:	retf   
  4328f7:	add    BYTE PTR [eax],al
  4328f9:	sbb    bh,bh
  4328fb:	xor    DWORD PTR [eax],eax
  4328fd:	mov    bl,0x9
  4328ff:	inc    DWORD PTR [eax]
  432901:	xchg   ebp,eax
  432902:	add    bh,dl
  432904:	add    ah,bh
  432906:	mov    ebx,0xffa60000
  43290b:	or     eax,0x83b04eff
  432910:	push   DWORD PTR [esi-0x1]
  432913:	mov    edx,0xd589ff
  432918:	inc    DWORD PTR [esi]
  43291a:	inc    DWORD PTR [esi-0x1]
  43291d:	bound  ebx,QWORD PTR [eax]
  43291f:	inc    DWORD PTR [eax]
  432921:	icebp  
  432922:	sbb    DWORD PTR [edi-0x77],0xffffffec
  432926:	lock add bh,bh
  432929:	mov    es,WORD PTR [eax]
  43292b:	or     eax,DWORD PTR [eax]
  43292d:	ror    BYTE PTR [eax],0x0
  432930:	add    BYTE PTR [edx],bl
  432932:	add    BYTE PTR [esi+0x0],dh
  432935:	imul   esi,DWORD PTR [ebx],0x832effff
  43293b:	dec    edx
  43293c:	add    BYTE PTR [edi-0x6e7cff28],dl
  432942:	sbb    DWORD PTR [ecx+0x0],0x62
  432946:	cmp    eax,DWORD PTR [eax]
  432948:	mov    ecx,ebp
  43294a:	add    BYTE PTR [edx],ah
  43294c:	add    al,dl
  43294e:	fs add bh,bh
  432951:	sub    BYTE PTR [eax],al
  432953:	(bad)  
  432954:	jmp    DWORD PTR [esi]
  432956:	sub    eax,0x8906ff00
  43295b:	(bad)  
  43295d:	dec    esp
  43295e:	imul   eax,DWORD PTR [eax],0x5383adff
  432964:	add    BYTE PTR [esi+0x78],bl
  432967:	(bad)  
  432968:	(bad)  
  432969:	mov    esp,0x9e00e000
  43296e:	cli    
  43296f:	cmp    edi,0x32
  432972:	sub    esp,0x0
  432975:	pop    edi
  432976:	add    BYTE PTR [ebx+0x110068ff],0xff
  43297d:	push   ebx
  43297e:	push   es
  43297f:	int3   
  432980:	add    BYTE PTR [ebx],ch
  432982:	int3   
  432983:	lds    eax,FWORD PTR [eax]
  432985:	sbb    ebx,ebx
  432987:	inc    DWORD PTR [eax]
  432989:	push   edx
  43298a:	(bad)  
  43298b:	cmp    bh,bh
  43298d:	jns    0x432921
  43298f:	mov    DWORD PTR [ebx-0x37ff12],eax
  432995:	in     eax,dx
  432996:	(bad)  
  432997:	add    bh,bh
  432999:	push   edi
  43299a:	int3   
  43299b:	sbb    eax,0xcb4400
  4329a0:	add    dl,bh
  4329a2:	(bad)  
  4329a3:	cli    
  4329a4:	add    BYTE PTR [edi],ah
  4329a6:	in     al,dx
  4329a7:	add    bh,bh
  4329a9:	mov    BYTE PTR [eax],al
  4329ab:	pop    ss
  4329ac:	call   DWORD PTR [eax-0xa]
  4329af:	dec    DWORD PTR [ecx+0xc0cc38]
  4329b5:	add    DWORD PTR [ebp-0x700100],0x2f
  4329bc:	or     DWORD PTR [esi-0x77007ce7],0xffffffff
  4329c3:	lods   al,BYTE PTR ds:[esi]
  4329c4:	call   FWORD PTR [edi]
  4329c6:	pop    ebp
  4329c7:	mov    DWORD PTR [eax],eax
  4329c9:	inc    esi
  4329ca:	add    BYTE PTR [ecx],al
  4329cc:	int3   
  4329cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4329ce:	popf   
  4329cf:	(bad)  
  4329d0:	call   FWORD PTR [esi-0x7500d400]
  4329d6:	int    0xff
  4329d8:	add    ch,dh
  4329da:	add    BYTE PTR [esi-0x1],cl
  4329dd:	push   0x41
  4329df:	dec    DWORD PTR [ecx-0x76aaffac]
  4329e5:	(bad)  
  4329e6:	mov    ecx,0xcc4100ff
  4329eb:	mov    es,WORD PTR [ebx-0x5b27]
  4329f1:	jno    0x432976
  4329f3:	jp     0x4329f4
  4329f5:	cmc    
  4329f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4329f7:	add    bh,bh
  4329f9:	cmp    edi,edi
  4329fb:	fild   WORD PTR [ebx-0x4c56]
  432a01:	xchg   ecx,eax
  432a02:	(bad)  
  432a03:	mov    ecx,0xff455989
  432a08:	(bad)  
  432a09:	jl     0x432a0b
  432a0b:	jo     0x432a0c
  432a0d:	imul   dh
  432a0f:	add    ah,cl
  432a11:	lahf   
  432a12:	add    BYTE PTR [edi+0x0],ah
  432a15:	stos   BYTE PTR es:[edi],al
  432a16:	xor    eax,0xfff9ffff
  432a1b:	push   0xffffff83
  432a1d:	cmp    ebx,eax
  432a1f:	inc    DWORD PTR [ebx-0xdfff98]
  432a25:	imul   eax,DWORD PTR [eax+0x0],0x0
  432a29:	enter  0x5dff,0x0
  432a2d:	and    DWORD PTR [eax+eax*1-0x7d],eax
  432a31:	out    0x0,eax
  432a33:	dec    esp
  432a34:	inc    eax
  432a36:	dec    sp
  432a39:	dec    ecx
  432a3a:	mov    DWORD PTR [ebx-0x1],ecx
  432a3d:	mov    ebx,0x6effffc5
  432a42:	(bad)  
  432a43:	mov    ebx,0x489bff
  432a48:	cmp    DWORD PTR [ebx-0x1],0x10
  432a4c:	add    BYTE PTR [ecx],dl
  432a4e:	inc    edi
  432a4f:	(bad)  
  432a50:	push   DWORD PTR [eax+eax*1+0x78]
  432a54:	(bad)  
  432a55:	fsubr  QWORD PTR [esi]
  432a57:	add    bh,bh
  432a59:	cmp    bh,0x8
  432a5c:	jmp    DWORD PTR [edx-0x1f]
  432a5f:	add    bh,bh
  432a61:	sar    edi,0xc6
  432a64:	mov    DWORD PTR [ecx+edi*2-0x1],ebp
  432a68:	int3   
  432a69:	cmp    BYTE PTR [eax],al
  432a6b:	scas   eax,DWORD PTR es:[edi]
  432a6c:	add    bl,bl
  432a6e:	leave  
  432a6f:	inc    DWORD PTR [eax]
  432a71:	dec    esi
  432a72:	add    BYTE PTR [edi],dh
  432a74:	push   DWORD PTR [ecx]
  432a76:	add    BYTE PTR [ebx+0x1bff70ff],al
  432a7c:	add    bl,cl
  432a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a7f:	int3   
  432a80:	inc    DWORD PTR [ecx-0x3764601]
  432a86:	sub    edi,edi
  432a88:	(bad)  
  432a89:	stc    
  432a8a:	add    dh,al
  432a8c:	add    BYTE PTR [ebx],al
  432a8e:	jno    0x432a13
  432a90:	add    BYTE PTR [esi+0xbffbcff],ah
  432a96:	add    edi,edi
  432a98:	add    BYTE PTR [eax-0x5d00a97d],al
  432a9e:	popf   
  432a9f:	add    DWORD PTR [eax],0x16
  432aa2:	call   DWORD PTR [ecx]
  432aa4:	jmp    FWORD PTR [esi]
  432aa6:	inc    eax
  432aa7:	int3   
  432aa8:	and    DWORD PTR [ebx],0xffffffff
  432aab:	out    0x0,eax
  432aad:	mov    edx,0xd6ccff71
  432ab2:	mov    DWORD PTR [ecx+0xdca389],esi
  432ab8:	(bad)  
  432ab9:	cld    
  432aba:	jmp    ebp
  432abc:	mov    DWORD PTR [eax-0x55767cf4],eax
  432ac2:	call   DWORD PTR [esi-0x1]
  432ac5:	jecxz  0x432a4e
  432ac7:	inc    DWORD PTR [eax]
  432ac9:	aad    0x83
  432acb:	add    al,0xff
  432acd:	popf   
  432ace:	mov    DWORD PTR [eax],eax
  432ad0:	int3   
  432ad1:	push   esi
  432ad2:	dec    DWORD PTR [esi+0x0]
  432ad5:	arpl   WORD PTR [ebx],sp
  432ad7:	int3   
  432ad8:	dec    DWORD PTR [ebp+0x7c008a00]
  432ade:	loop   0x432a69
  432ae0:	add    BYTE PTR [eax+0x4883a000],cl
  432ae6:	ja     0x432a6b
  432ae8:	jmp    FWORD PTR [edi+0x1897583]
  432aee:	retf   0xcc00
  432af1:	dec    edx
  432af2:	adc    edi,0xffffffcc
  432af5:	test   eax,0xb9ff0005
  432afa:	push   DWORD PTR [ecx]
  432afc:	int3   
  432afd:	dec    esi
  432afe:	push   ss
  432aff:	cmp    edi,0xffffffce
  432b02:	push   DWORD PTR [eax-0x7d]
  432b05:	xchg   DWORD PTR [ecx-0x34],esi
  432b08:	add    BYTE PTR [ebx],dh
  432b0a:	call   DWORD PTR [edx-0x934b01]
  432b10:	and    esp,0xffffff89
  432b13:	sub    DWORD PTR [eax],eax
  432b15:	lock xor BYTE PTR [eax],al
  432b18:	int3   
  432b19:	clc    
  432b1a:	int3   
  432b1b:	imul   eax,DWORD PTR [eax],0x4b
  432b1e:	nop
  432b1f:	add    DWORD PTR [eax],0x16
  432b22:	and    DWORD PTR [edx-0xbaf07d],0xffffffff
  432b29:	mov    al,ds:0x3ecc8600
  432b2e:	jbe    0x432b2f
  432b30:	int3   
  432b31:	push   eax
  432b32:	(bad)  
  432b33:	(bad)  
  432b35:	(bad)  
  432b36:	repz (bad) 
  432b38:	(bad)  
  432b39:	js     0x432b3b
  432b3b:	int    0xff
  432b3d:	mov    ch,0x2a
  432b3f:	add    bh,bh
  432b41:	sub    al,0x0
  432b43:	xchg   edx,eax
  432b44:	or     DWORD PTR [edi-0x2000084],0xffffffff
  432b4b:	out    0xff,eax
  432b4d:	lock sahf 
  432b4f:	or     esp,0xfffffffb
  432b52:	call   DWORD PTR [edi+0x0]
  432b55:	int    0xe2
  432b57:	inc    DWORD PTR [eax]
  432b59:	xor    eax,0xad832000
  432b5e:	mov    al,ds:0xffd7ff00
  432b63:	inc    esp
  432b64:	push   DWORD PTR [edx+0x43]
  432b67:	add    BYTE PTR [ecx-0x76ddff80],cl
  432b6d:	cld    
  432b6e:	out    0xff,eax
  432b70:	add    BYTE PTR [eax-0x7d],bh
  432b73:	xor    al,0xff
  432b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b76:	clc    
  432b77:	(bad)  
  432b78:	jmp    DWORD PTR [ecx-0x34]
  432b7b:	int3   
  432b7c:	mov    DWORD PTR [ecx],ebp
  432b7e:	jmp    0xd0:0xcc4dff89
  432b85:	dec    esp
  432b86:	(bad)  
  432b87:	add    DWORD PTR [eax],0x6d
  432b8a:	inc    DWORD PTR [eax+eax*1+0xc]
  432b8e:	dec    edi
  432b8f:	int3   
  432b90:	jmp    ecx
  432b92:	add    BYTE PTR [edx-0x56401],dl
  432b98:	add    BYTE PTR [ebx+0x0],al
  432b9b:	xchg   edi,eax
  432b9c:	call   FWORD PTR [ebx+0x13]
  432b9f:	mov    DWORD PTR [ecx-0x4e3368],ecx
  432ba5:	and    ebp,DWORD PTR [esi-0x338e0001]
  432bab:	pop    ds
  432bac:	mov    DWORD PTR [ebx-0x6d],edx
  432baf:	add    bh,bh
  432bb1:	das    
  432bb2:	add    BYTE PTR [ebp-0x7c0f0600],bl
  432bb8:	call   FWORD PTR [edi+0x0]
  432bbb:	(bad)  
  432bbc:	jmp    DWORD PTR [ecx+0x5d]
  432bbf:	add    bh,bh
  432bc1:	scas   al,BYTE PTR es:[edi]
  432bc2:	inc    DWORD PTR [ebx-0x33ea1e00]
  432bc8:	and    DWORD PTR [edx-0x5bffd134],0xffffffea
  432bcf:	(bad)  
  432bd0:	(bad)  
  432bd1:	(bad)  
  432bd3:	addr16 (bad) 
  432bd5:	mov    ecx,0xbe830092
  432bda:	add    ah,ah
  432bdc:	add    BYTE PTR [eax-0x78],dh
  432bdf:	(bad)  
  432be0:	inc    DWORD PTR [edx-0x7d]
  432be3:	mov    ebx,0xff2250ff
  432be8:	add    BYTE PTR [ebp+0x2000c5ff],cl
  432bee:	in     al,0x0
  432bf0:	int3   
  432bf1:	(bad)  
  432bf3:	(bad)  
  432bf4:	or     ecx,0xffffffda
  432bf7:	add    bh,bh
  432bf9:	pop    eax
  432bfa:	add    cl,al
  432bfc:	or     DWORD PTR [eax],0xffffffbf
  432bff:	mov    DWORD PTR [ecx-0x36ff48],ecx
  432c05:	mov    al,ds:0xbeffff4a
  432c0a:	add    BYTE PTR [ecx],al
  432c0c:	add    BYTE PTR ds:0xd783cc8e,dl
  432c12:	int3   
  432c13:	or     edi,edi
  432c15:	and    eax,0xcccc00e8
  432c1a:	int3   
  432c1b:	int3   
  432c1c:	int3   
  432c1d:	int3   
  432c1e:	int3   
  432c1f:	int3   
  432c20:	add    bh,bh
  432c22:	mov    cl,0x83
  432c24:	mov    ebp,0xd41ff
  432c29:	dec    DWORD PTR [esi+0x42ff8dff]
  432c2f:	inc    DWORD PTR fs:[eax]
  432c32:	(bad)  
  432c33:	inc    DWORD PTR [edx]
  432c35:	call   DWORD PTR [eax-0x6a000056]
  432c3b:	sub    esi,0xffffffff
  432c3e:	push   0x4900ffb0
  432c43:	jmp    DWORD PTR [esi+0x0]
  432c46:	mov    ds:0x55ff0087,eax
  432c4b:	and    edi,0xffffff83
  432c4e:	push   edi
  432c4f:	pop    ebp
  432c50:	add    DWORD PTR [eax],0xffffff9d
  432c53:	int3   
  432c54:	pusha  
  432c55:	jmp    FWORD PTR [edx+0x49]
  432c58:	inc    DWORD PTR [eax]
  432c5a:	sub    eax,0x6b005dcc
  432c5f:	lahf   
  432c60:	add    DWORD PTR [eax],0xfffffff7
  432c63:	add    BYTE PTR [edi],al
  432c65:	add    BYTE PTR [ebp+0x98300bb],dh
  432c6b:	and    ebp,0xffffffff
  432c6e:	cdq    
  432c6f:	push   cs
  432c70:	inc    DWORD PTR [ebx-0xccffb1]
  432c76:	jae    0x432cef
  432c78:	dec    esp
  432c7a:	push   edx
  432c7b:	adc    DWORD PTR [edi-0x1],0xffffffbb
  432c7f:	mov    bl,0x89
  432c81:	adc    DWORD PTR [eax-0x30ff0f01],0x28
  432c88:	inc    DWORD PTR [eax]
  432c8a:	add    DWORD PTR es:[ebx-0x5c687d],0x0
  432c92:	rol    BYTE PTR [ebx+0x59b6fff3],cl
  432c98:	add    bh,bh
  432c9a:	lds    eax,FWORD PTR [ebx+0x76aeff54]
  432ca0:	add    bh,bh
  432ca2:	or     DWORD PTR [ecx+0x63778321],0x22cccc
  432cac:	or     edi,edi
  432cae:	add    DWORD PTR [ebx-0x50100],edx
  432cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432cb5:	jmp    FWORD PTR [edi]
  432cb7:	mov    al,ds:0xccb2cc00
  432cbc:	pop    ebp
  432cbd:	int3   
  432cbe:	addr16 xchg bh,bh
  432cc1:	mov    DWORD PTR [eax-0x13003d00],eax
  432cc7:	sbb    eax,0xff838300
  432ccc:	push   esp
  432ccd:	add    BYTE PTR [edi-0x70],dh
  432cd0:	add    BYTE PTR [ecx+0xdeff6a],cl
  432cd6:	xor    eax,0x39ffffba
  432cdb:	jmp    edx
  432cdd:	add    al,cl
  432cdf:	sar    bh,1
  432ce1:	push   DWORD PTR [ecx+ecx*4-0x414200ae]
  432ce8:	dec    DWORD PTR [ecx-0xbb0015]
  432cee:	loopne 0x432d56
  432cf0:	cmp    edi,0x69
  432cf3:	(bad)  
  432cf4:	in     eax,dx
  432cf5:	add    BYTE PTR [eax+ebx*1],cl
  432cf8:	dec    DWORD PTR [ecx-0xabfffe]
  432cfe:	repz (bad) 
  432d01:	int3   
  432d02:	mov    ds:0xee83f6ff,al
  432d07:	arpl   di,di
  432d09:	dec    DWORD PTR [ebp+0x1dff33ff]
  432d0f:	fdivp  st(7),st
  432d11:	jmp    FWORD PTR [ebp-0x1]
  432d14:	stos   BYTE PTR es:[edi],al
  432d15:	add    BYTE PTR [esi],dl
  432d17:	loop   0x432d19
  432d19:	(bad)  
  432d1a:	cli    
  432d1b:	dec    DWORD PTR [eax-0x333afb00]
  432d21:	int3   
  432d22:	cmc    
  432d23:	inc    DWORD PTR [ebx-0x1f8d01]
  432d29:	add    BYTE PTR [edi+edi*8+0x2d],ah
  432d2d:	int3   
  432d2e:	push   ds
  432d2f:	jae    0xfd438735
  432d35:	int3   
  432d36:	xlat   BYTE PTR ds:[ebx]
  432d37:	jp     0x432d39
  432d39:	jmp    FWORD PTR [esi]
  432d3b:	add    BYTE PTR [eax-0xc6134],bl
  432d41:	inc    DWORD PTR [ebp-0x1]
  432d44:	mov    dl,0xff
  432d46:	(bad)  
  432d47:	fs dec esp
  432d4a:	or     DWORD PTR gs:[ebp-0xcb0501],0x0
  432d52:	sub    edi,edi
  432d54:	xchg   esp,eax
  432d55:	dec    DWORD PTR [ebx+0x2dff0021]
  432d5b:	call   FWORD PTR [ecx-0x34]
  432d5e:	push   ebx
  432d5f:	inc    edx
  432d60:	add    BYTE PTR [eax],al
  432d62:	and    al,0x0
  432d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432d65:	add    bh,bl
  432d67:	xor    bh,bh
  432d69:	push   DWORD PTR [ebp+0x22ffec89]
  432d6f:	inc    ebp
  432d70:	add    BYTE PTR [eax],al
  432d72:	xchg   ebx,eax
  432d73:	mov    esp,esi
  432d75:	(bad)  
  432d76:	out    dx,eax
  432d77:	mov    esp,ecx
  432d79:	add    BYTE PTR [eax],ah
  432d7b:	and    DWORD PTR [eax],0xffffff89
  432d7e:	and    al,0x44
  432d80:	cmp    edi,0xffffff84
  432d83:	adc    DWORD PTR [eax+eax*1],0x2a
  432d87:	cmp    bh,bh
  432d89:	inc    DWORD PTR ds:0x5cff4aff
  432d8f:	add    al,0x83
  432d91:	call   DWORD PTR [eax+0x4dcc3000]
  432d97:	test   esp,0x7c838b00
  432d9d:	(bad)  
  432d9e:	jmp    0x3542fa2a
  432da3:	(bad)  
  432da4:	js     0x432d29
  432da6:	mov    eax,ds:0x18300bf
  432dab:	add    BYTE PTR [ebx-0x2d7d7d],ah
  432db1:	add    al,dl
  432db3:	int3   
  432db4:	inc    ebp
  432db5:	add    BYTE PTR [eax-0xf],dh
  432db8:	add    bh,bh
  432dba:	(bad)  
  432dbb:	jmp    FWORD PTR [esi-0x763b0901]
  432dc1:	or     DWORD PTR [ebp-0x52ffe734],0xffffffc1
  432dc8:	inc    DWORD PTR [ebx-0xf7cc2]
  432dce:	ficom  DWORD PTR [eax]
  432dd0:	inc    DWORD PTR [ebx-0x7c1eff68]
  432dd6:	inc    ebp
  432dd7:	add    edi,edi
  432dd9:	add    BYTE PTR [ebx-0x1],dl
  432ddc:	xor    eax,0x83479983
  432de1:	add    BYTE PTR [ebx+0x6700cc00],cl
  432de7:	and    edi,edi
  432de9:	call   FWORD PTR [edx-0x1]
  432dec:	sar    bh,0xa9
  432def:	add    BYTE PTR [ebx-0x70003d7d],0x0
  432df6:	and    ah,al
  432df8:	dec    DWORD PTR [ecx+0x48ff51]
  432dfe:	adc    eax,0xc50083b7
  432e03:	(bad)  
  432e04:	clc    
  432e05:	add    BYTE PTR [esi+0x4f],dh
  432e08:	mov    DWORD PTR [ecx+0x71ff1a],ecx
  432e0e:	outs   dx,BYTE PTR ds:[esi]
  432e0f:	mov    ds:0xc0ff89,al
  432e14:	xor    DWORD PTR [eax],eax
  432e16:	mov    dl,BYTE PTR [edi+edi*8]
  432e19:	(bad)  
  432e1a:	jle    0x432e1b
  432e1c:	das    
  432e1d:	sub    DWORD PTR [eax],0xffffffb2
  432e20:	add    BYTE PTR [ebx-0x3f7c33],al
  432e26:	in     al,0x55
  432e28:	inc    DWORD PTR [ebx-0x7606ffcf]
  432e2e:	or     ebx,DWORD PTR [ebp+0x0]
  432e31:	cmp    DWORD PTR [edi],0xffffffff
  432e34:	or     eax,0xffcf76cc
  432e39:	call   DWORD PTR [ebx-0x34]
  432e3c:	test   al,0xff
  432e3e:	sbb    eax,0x29830038
  432e43:	push   DWORD PTR [edi+edi*8]
  432e46:	mov    al,0x5f
  432e48:	(bad)  
  432e49:	push   ebx
  432e4b:	add    dh,bh
  432e4d:	push   DWORD PTR [edi]
  432e4f:	aas    
  432e50:	dec    DWORD PTR [ecx-0x8e0081]
  432e56:	data16 fiadd DWORD PTR [eax]
  432e59:	and    DWORD PTR ds:0xcbff1fff,0x25
  432e60:	(bad)  
  432e61:	dec    DWORD PTR [esi-0xff697d]
  432e67:	cmp    edi,edi
  432e69:	int3   
  432e6a:	inc    esp
  432e6b:	add    BYTE PTR [ecx-0x457700],cl
  432e71:	jmp    DWORD PTR [eax]
  432e73:	mov    DWORD PTR [edi+edi*8-0x33003748],ebx
  432e7a:	jns    0x432e7c
  432e7c:	test   DWORD PTR [eax],eax
  432e7e:	mov    dh,0xd5
  432e80:	add    DWORD PTR [eax],0x56
  432e83:	jmp    DWORD PTR [ecx-0x7c95a301]
  432e89:	int3   
  432e8a:	or     edi,edi
  432e8c:	ja     0x432e8d
  432e8e:	and    DWORD PTR [ebp+0x0],esi
  432e91:	mov    DWORD PTR [ebx+0x46ff2d83],ecx
  432e97:	push   ds
  432e98:	add    BYTE PTR [ebx-0x7c720059],al
  432e9e:	jl     0x432ee1
  432ea0:	add    DWORD PTR [eax],0xffffff9d
  432ea3:	call   DWORD PTR [eax-0x7c4e7601]
  432ea9:	jmp    ebp
  432eab:	add    BYTE PTR [ecx+ecx*4],bl
  432eae:	pop    edx
  432eaf:	jp     0x432eb1
  432eb1:	push   DWORD PTR [ecx-0x3333b300]
  432eb7:	mov    ds:0x8942ff00,eax
  432ebc:	sub    al,0xff
  432ebe:	enter  0xcc5f,0xff
  432ec2:	cmp    bh,0xce
  432ec5:	jmp    DWORD PTR [eax]
  432ec7:	popf   
  432ec8:	add    DWORD PTR [ebx+0xcb00db],0xffffffef
  432ecf:	adc    bh,bh
  432ed1:	(bad)  
  432ed2:	mov    ecx,0xc9ffd4ff
  432ed7:	inc    esp
  432ed8:	inc    DWORD PTR [eax]
  432eda:	xor    al,0x83
  432edc:	push   es
  432edd:	dec    DWORD PTR [ebx]
  432edf:	sub    eax,0x2bff00
  432ee4:	sub    edi,edi
  432ee6:	loopne 0x432ebd
  432ee8:	add    bh,bh
  432eea:	or     DWORD PTR [ecx+0x52668305],ecx
  432ef0:	(bad)  
  432ef1:	jmp    FWORD PTR [edi+edi*8]
  432ef4:	and    eax,0xff57cd83
  432ef9:	call   edx
  432efb:	add    DWORD PTR [ebx-0x33dab501],0xffffffff
  432f02:	jbe    0x432f04
  432f04:	xchg   esp,eax
  432f05:	push   esi
  432f07:	pop    ds
  432f08:	add    bh,bh
  432f0a:	sub    edi,edi
  432f0c:	leave  
  432f0d:	int3   
  432f0e:	mov    ebp,0x2c83ccbc
  432f13:	jmp    FWORD PTR [ebx]
  432f15:	dec    DWORD PTR ds:0x44ffcc50
  432f1b:	add    ah,ah
  432f1d:	add    dh,ah
  432f1f:	add    al,BYTE PTR [ebx-0x6d00957d]
  432f25:	add    BYTE PTR [ebx-0xd],al
  432f28:	dec    DWORD PTR [ecx-0x76af007d]
  432f2e:	jnp    0x432fa4
  432f30:	dec    DWORD PTR [ecx-0xa001b]
  432f36:	retf   0x8971
  432f39:	push   DWORD PTR [ebp-0x417c5877]
  432f3f:	xchg   ecx,eax
  432f40:	(bad)  
  432f41:	(bad)  
  432f42:	mov    ebp,0xcc00acff
  432f47:	(bad)  
  432f49:	mov    ebp,eax
  432f4b:	mov    DWORD PTR [ecx-0x33a77334],ecx
  432f51:	(bad)  
  432f52:	jp     0x432f53
  432f54:	mov    ebp,0x541dff
  432f59:	add    BYTE PTR [eax+eax*1],dh
  432f5c:	ss add cl,bh
  432f5f:	sub    al,BYTE PTR [eax]
  432f61:	(bad)  
  432f62:	mov    ecx,0xd90074ff
  432f67:	pop    ecx
  432f68:	inc    DWORD PTR [eax]
  432f6a:	jmp    0x19:0x55ff5600
  432f71:	add    BYTE PTR [esi-0x70ff6000],cl
  432f77:	test   edi,edi
  432f79:	int3   
  432f7a:	in     eax,dx
  432f7b:	(bad)  
  432f7c:	fiadd  WORD PTR [eax]
  432f7e:	(bad)  
  432f7f:	or     eax,0xd30000
  432f84:	sar    edi,1
  432f86:	test   al,0x17
  432f88:	(bad)  
  432f89:	dec    eax
  432f8b:	(bad)  
  432f8c:	call   0x89b0aa14
  432f91:	add    BYTE PTR [esi+0x32ff8200],dh
  432f97:	add    DWORD PTR [eax],0xec89bcff
  432f9d:	add    ch,al
  432f9f:	adc    bh,bh
  432fa1:	add    BYTE PTR [edi+0x2fff58ff],bh
  432fa7:	and    eax,DWORD PTR [ebx-0x2dff2201]
  432fad:	(bad)  
  432fae:	jg     0x432fe0
  432fb0:	(bad)  
  432fb1:	(bad)  
  432fb2:	mov    eax,0xbc83cecc
  432fb7:	cmp    DWORD PTR [eax],eax
  432fb9:	jmp    DWORD PTR [ecx-0x7d]
  432fbc:	sbb    edi,edi
  432fbe:	cmp    BYTE PTR ds:[eax],al
  432fc1:	or     DWORD PTR [ebx-0x7d],0x53
  432fc5:	inc    DWORD PTR [eax+0x71ff89a1]
  432fcb:	(bad)  
  432fcc:	ds int3 
  432fce:	test   al,0xe7
  432fd0:	(bad)  
  432fd1:	dec    DWORD PTR [ebp-0x30335001]
  432fd7:	push   es
  432fd8:	cmp    edi,0xffffffd7
  432fdb:	add    BYTE PTR [ecx+0x56a0ff],cl
  432fe1:	push   DWORD PTR [eax+eax*1-0x62]
  432fe5:	push   DWORD PTR [ecx+0x3bccffb5]
  432feb:	int3   
  432fec:	sbb    edi,edi
  432fee:	mov    DWORD PTR [ebx+eax*4+0x49008dff],0xffb6e600
  432ff9:	mov    DWORD PTR [eax],ebp
  432ffb:	cmp    DWORD PTR [ebp+0x0],0x3f
  432fff:	inc    DWORD PTR es:[eax]
  433002:	jp     0x433003
  433004:	and    BYTE PTR [eax],al
  433006:	dec    ecx
  433007:	sbb    bh,bh
  433009:	add    BYTE PTR [esi],dh
  43300b:	add    BYTE PTR [ecx+0x0],bl
  43300e:	xor    cl,BYTE PTR [edi-0x7d]
  433011:	dec    DWORD PTR [ebp+0x2289f1cc]
  433017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433018:	or     esp,0x60
  43301b:	jmp    DWORD PTR [ebx-0x76d01500]
  433021:	int3   
  433022:	int3   
  433023:	(bad)  
  433024:	sti    
  433025:	call   DWORD PTR [ebp+0x320083b2]
  43302b:	sub    DWORD PTR [ebp-0x909634],0xffffffff
  433032:	xchg   edx,eax
  433033:	add    BYTE PTR [ecx-0xd63400],bl
  433039:	add    dh,bh
  43303b:	dec    edi
  43303d:	xor    eax,0x78
  433040:	(bad)  
  433041:	call   FWORD PTR [ebp+0x52ff4883]
  433047:	mov    ebp,0xff0400ff
  43304c:	jae    0x43304d
  43304e:	sbb    ebp,ebx
  433050:	inc    DWORD PTR [eax]
  433052:	int3   
  433053:	add    BYTE PTR [edx-0x1],ah
  433056:	and    bl,BYTE PTR [ecx+0x5300ff]
  43305c:	jl     0x43305e
  43305e:	jno    0x433082
  433060:	int3   
  433061:	dec    DWORD PTR [esi]
  433063:	add    dh,dl
  433065:	int3   
  433066:	xchg   esp,eax
  433067:	lock (bad) 
  433069:	call   ebp
  43306b:	dec    DWORD PTR [edx-0x1]
  43306e:	mov    esp,0x3a83ffb5
  433073:	adc    DWORD PTR [esi],0xffffffff
  433076:	popf   
  433077:	inc    DWORD PTR cs:[eax]
  43307a:	pushf  
  43307b:	(bad)  
  43307c:	cli    
  43307d:	push   DWORD PTR [ecx-0x15ff0010]
  433083:	add    cl,ah
  433085:	dec    DWORD PTR [ebp-0x4a7c7639]
  43308b:	add    BYTE PTR [esi],dh
  43308d:	inc    DWORD PTR [eax+0xb]
  433090:	int3   
  433091:	cmp    DWORD PTR ds:0xc1ff88cc,0xffffff92
  433098:	mov    DWORD PTR [ebx-0x3a00ed],eax
  43309e:	xor    DWORD PTR [ebp-0x7d],esi
  4330a1:	dec    DWORD PTR [edi+edi*8+0x4a]
  4330a5:	call   FWORD PTR [edi]
  4330a7:	mov    dh,0xff
  4330a9:	jmp    DWORD PTR [eax]
  4330ab:	dec    DWORD PTR [ebx-0x7d]
  4330ae:	shl    BYTE PTR [edx],0x0
  4330b1:	int3   
  4330b2:	stc    
  4330b3:	add    BYTE PTR [ebx],ah
  4330b5:	jmp    DWORD PTR [edx-0x7]
  4330b8:	or     esp,0xfffffff4
  4330bb:	add    BYTE PTR [ecx-0x1],al
  4330be:	push   ebx
  4330bf:	out    0x0,eax
  4330c1:	push   DWORD PTR [ebx+0x660026cc]
  4330c7:	or     BYTE PTR [eax],al
  4330c9:	call   FWORD PTR [ebx+eax*4+0x23caff8d]
  4330d0:	inc    DWORD PTR [ebx+0x4000ca]
  4330d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4330d7:	cdq    
  4330d8:	add    bh,bh
  4330da:	lahf   
  4330db:	xor    DWORD PTR [edx+0x0],0x4
  4330df:	add    DWORD PTR [eax],0xc4002f83
  4330e5:	(bad)  
  4330e6:	jnp    0x43306f
  4330e8:	add    ah,cl
  4330ea:	fiadd  DWORD PTR [eax]
  4330ec:	dec    DWORD PTR es:[eax]
  4330ef:	out    0x0,eax
  4330f1:	inc    DWORD PTR [edx-0x66ffca7d]
  4330f7:	ins    DWORD PTR es:[edi],dx
  4330f8:	add    bh,bh
  4330fa:	push   edx
  4330fb:	(bad)  
  4330fc:	stc    
  4330fd:	add    DWORD PTR [edx-0x17000013],0xffffff83
  433104:	mov    al,ds:0x83500aff
  433109:	int3   
  43310a:	scas   eax,DWORD PTR es:[edi]
  43310b:	adc    DWORD PTR [ebp-0x34],0x6
  43310f:	test   edi,edi
  433111:	(bad)  
  433112:	cmp    DWORD PTR [eax],eax
  433114:	or     al,BYTE PTR [eax]
  433116:	sbb    BYTE PTR [ebx],bl
  433118:	add    DWORD PTR [ebx-0x130003],0x7c
  43311f:	fwait
  433120:	(bad)  
  433121:	dec    DWORD PTR [ebp-0x7d]
  433124:	or     edi,edi
  433126:	xchg   ebp,eax
  433127:	xchg   ecx,eax
  433128:	(bad)  
  433129:	call   FWORD PTR [esi-0x1]
  43312c:	fcos   
  43312e:	rcl    BYTE PTR [ebx],0xff
  433131:	mov    ebp,ecx
  433133:	add    ah,ah
  433135:	add    BYTE PTR [esi-0x3000331d],al
  43313b:	add    al,ch
  43313d:	add    ah,bh
  43313f:	xor    al,0x89
  433141:	dec    DWORD PTR [edx+0x4fffe1cc]
  433147:	lods   al,BYTE PTR ds:[esi]
  433148:	mov    DWORD PTR [eax],eax
  43314a:	test   al,0xff
  43314c:	je     0x43314d
  43314e:	mov    ecx,0xeb000031
  433153:	push   DWORD PTR [edi-0x1]
  433156:	xor    esi,ebp
  433158:	cmp    edi,0x6b
  43315b:	int3   
  43315c:	xor    eax,0x411a00
  433161:	mov    DWORD PTR [eax+0x69cc3f83],esp
  433167:	mov    dl,0xff
  433169:	inc    edx
  43316b:	int3   
  43316c:	and    bh,bh
  43316e:	rcl    BYTE PTR [edx+0x21cc00],cl
  433174:	or     al,0x0
  433176:	mov    ch,0x89
  433178:	(bad)  
  433179:	call   FWORD PTR [edx-0xe336700]
  43317f:	pop    ss
  433180:	add    bh,bh
  433182:	cmp    BYTE PTR [eax],al
  433184:	mov    bl,0x0
  433186:	into   
  433187:	arpl   WORD PTR [ebx-0x7c00517d],ax
  43318d:	dec    DWORD PTR [esi-0x6a]
  433190:	add    BYTE PTR [eax],al
  433192:	push   0x6bff1d00
  433197:	push   edx
  433198:	add    ah,cl
  43319a:	retf   
  43319b:	cmp    DWORD PTR [edi-0x7cdd1834],0xffffffff
  4331a2:	mov    ?,edi
  4331a4:	add    al,0xff
  4331a6:	mov    gs,WORD PTR [ebp-0xf43377]
  4331ac:	outs   dx,DWORD PTR ds:[esi]
  4331ad:	int3   
  4331ae:	pop    esp
  4331af:	stos   DWORD PTR es:[edi],eax
  4331b0:	(bad)  
  4331b1:	call   DWORD PTR ds:0x2aff4083
  4331b7:	cmp    al,0xff
  4331b9:	jmp    FWORD PTR [ecx-0x1]
  4331bc:	pop    es
  4331bd:	add    BYTE PTR [eax],dl
  4331bf:	sbb    edi,edi
  4331c1:	(bad)  
  4331c2:	cmp    BYTE PTR [eax],al
  4331c4:	xchg   BYTE PTR [eax],al
  4331c6:	push   edx
  4331c7:	addr16 cmp edi,0x69
  4331cb:	mov    DWORD PTR [eax+0x867ff],eax
  4331d1:	dec    DWORD PTR [ebx+eax*4]
  4331d4:	(bad)  
  4331d5:	jmp    DWORD PTR [eax-0x6d]
  4331d8:	inc    DWORD PTR [eax]
  4331da:	add    edi,edi
  4331dc:	lock call FWORD PTR [ebp-0x4d]
  4331e0:	int3   
  4331e1:	(bad)  
  4331e2:	jge    0x4331b0
  4331e4:	xchg   ecx,eax
  4331e5:	cmp    DWORD PTR [ecx-0x29],0xffffffff
  4331e9:	call   FWORD PTR [edi+0x150041ff]
  4331ef:	jns    0x694297f5
  4331f5:	mov    eax,edi
  4331f7:	cli    
  4331f8:	inc    DWORD PTR [ebx-0x4dff34]
  4331fe:	int    0xa0
  433200:	add    BYTE PTR [eax],al
  433202:	or     edi,edi
  433204:	or     DWORD PTR [eax],eax
  433206:	xlat   BYTE PTR ds:[ebx]
  433207:	mov    al,0x83
  433209:	mov    DWORD PTR [esi-0x1],esi
  43320c:	add    BYTE PTR [eax],al
  43320e:	and    DWORD PTR [ecx-0x34],0x0
  433212:	loopne 0x433213
  433214:	fld    DWORD PTR [eax]
  433216:	idiv   ecx
  433218:	add    DWORD PTR [ebx-0xa000d3],0xffffffa6
  43321f:	stos   BYTE PTR es:[edi],al
  433220:	add    BYTE PTR [ecx-0x2b0011],cl
  433226:	xor    bh,BYTE PTR [esi]
  433228:	(bad)  
  433229:	jmp    esi
  43322b:	jmp    DWORD PTR [ebp-0x60f301]
  433231:	add    BYTE PTR [ebx-0x3a00e777],bh
  433237:	jg     0x433239
  433239:	adc    DWORD PTR [edi+edi*8+0x543cffd9],0xffffff83
  433241:	inc    DWORD PTR [ebx]
  433243:	inc    DWORD PTR [eax-0x1e5f00]
  433249:	mov    DWORD PTR [edi],ecx
  43324b:	inc    DWORD PTR [edx-0xdf77d]
  433251:	add    BYTE PTR [esi-0x77],ch
  433254:	mov    ch,0xff
  433256:	scas   al,BYTE PTR es:[edi]
  433257:	pop    ds
  433258:	inc    DWORD PTR [eax]
  43325a:	inc    ebx
  43325b:	jmp    FWORD PTR [edx]
  43325d:	dec    DWORD PTR [esi+0x7f]
  433260:	(bad)  
  433261:	call   DWORD PTR [ecx+0x7dcc1f89]
  433267:	imul   edi,edi,0x0
  43326a:	jmp    0x8a44036f
  43326f:	stc    
  433270:	(bad)  
  433271:	jmp    DWORD PTR [ebx]
  433273:	inc    edi
  433275:	add    cl,bh
  433277:	xchg   edi,eax
  433278:	mov    DWORD PTR [ebx-0x330f33e9],eax
  43327e:	out    0x4,eax
  433280:	add    bh,bh
  433282:	add    ecx,esp
  433284:	rol    DWORD PTR [ebx-0xb7f2],0x4e
  43328b:	add    BYTE PTR [ebp-0x76058901],dl
  433291:	dec    DWORD PTR [edx-0x7d]
  433294:	jbe    0x433296
  433296:	(bad)
  433299:	and    DWORD PTR [edx+0xeff9200],0x79
  4332a0:	add    BYTE PTR [ecx-0x28ff23],cl
  4332a6:	jb     0x433297
  4332a8:	inc    DWORD PTR [ebx-0x2eff0d]
  4332ae:	sub    eax,0x45ff008f
  4332b3:	push   DWORD PTR [esi+0xcd77ff]
  4332b9:	call   DWORD PTR [ebx-0x1]
  4332bc:	popf   
  4332bd:	jmp    FWORD PTR [ebx]
  4332bf:	fiadd  DWORD PTR [eax]
  4332c1:	add    BYTE PTR [eax-0x1],cl
  4332c4:	lods   eax,DWORD PTR ds:[esi]
  4332c5:	mov    DWORD PTR [esi-0x15],esp
  4332c8:	mov    edi,edi
  4332ca:	jne    0x4332cb
  4332cc:	inc    esp
  4332cd:	add    BYTE PTR [edi-0x6],dl
  4332d0:	add    bh,bh
  4332d2:	sub    bh,bh
  4332d4:	push   0xffbdaeff
  4332d9:	dec    DWORD PTR [ebx-0x34]
  4332dc:	loopne 0x4332dd
  4332de:	retf   
  4332df:	pop    edx
  4332e0:	(bad)  
  4332e1:	call   DWORD PTR [eax-0x7b00d077]
  4332e7:	sbb    bh,bh
  4332e9:	int3   
  4332ea:	or     esp,0xda6dffab
  4332f0:	inc    DWORD PTR [eax]
  4332f2:	push   eax
  4332f3:	(bad)  
  4332f4:	mov    ecx,0xffebf189
  4332f9:	add    BYTE PTR [esi],bh
  4332fb:	sub    DWORD PTR [esi],0x0
  4332fe:	js     0x4332a5
  433300:	(bad)  
  433301:	(bad)  
  433302:	inc    BYTE PTR [ebx+0x20ecffb3]
  433308:	dec    esp
  43330a:	adc    bh,bh
  43330c:	xor    al,0x0
  43330e:	ficomp DWORD PTR [ebp+0x0]
  433311:	mov    DWORD PTR [ebx+0x2e83c4ff],ecx
  433317:	rol    BYTE PTR [eax],1
  433319:	dec    DWORD PTR [ebp+0x71ff20ff]
  43331f:	or     al,0xcc
  433321:	add    dh,ah
  433323:	add    BYTE PTR [ecx-0x7d],bl
  433326:	out    0xe,al
  433328:	(bad)  
  433329:	push   ebx
  43332b:	add    BYTE PTR ds:0x89264000,ah
  433331:	call   FWORD PTR [ebx+0x64894d00]
  433337:	call   0xffde:0xfdffcc
  43333e:	push   esi
  43333f:	mov    bh,0xff
  433341:	int3   
  433342:	jecxz  0x433344
  433344:	fild   WORD PTR [eax]
  433346:	jmp    0x9200:0xe50083ae
  43334d:	int3   
  43334e:	sti    
  43334f:	pop    ebp
  433350:	add    BYTE PTR [ebx+0x27ffaf],al
  433356:	imul   ebp,DWORD PTR [edx-0x1],0x0
  43335a:	adc    eax,DWORD PTR [ebx+0x4c16cc76]
  433360:	add    BYTE PTR [ebx-0x7cc8ff99],al
  433366:	outs   dx,BYTE PTR ds:[esi]
  433367:	fiadd  DWORD PTR [ebx-0x1effb400]
  43336d:	add    BYTE PTR [edi],ch
  43336f:	sar    edi,cl
  433371:	and    DWORD PTR [ecx+ecx*4+0x503b89fa],0x0
  433379:	push   DWORD PTR [ebp-0x6e004434]
  43337f:	clc    
  433380:	inc    DWORD PTR [eax]
  433382:	in     eax,0xff
  433384:	das    
  433385:	int3   
  433386:	test   al,0x26
  433388:	(bad)  
  433389:	(bad)  
  43338a:	stc    
  43338b:	(bad)  
  43338c:	cmp    al,0xcc
  43338e:	ror    BYTE PTR [ebx+0x8800ff],0xa
  433395:	add    BYTE PTR [ebx],al
  433397:	rol    BYTE PTR [eax],0xff
  43339a:	inc    esp
  43339b:	and    DWORD PTR [ecx-0x1],0x3b
  43339f:	pop    ds
  4333a0:	(bad)  
  4333a1:	call   edi
  4333a3:	add    ch,bh
  4333a5:	int3   
  4333a6:	inc    ecx
  4333a7:	mov    bl,0xcc
  4333a9:	push   DWORD PTR [eax-0x1]
  4333ac:	fiadd  DWORD PTR [ebx-0x7c7c05fb]
  4333b2:	add    BYTE PTR [eax],0x28
  4333b5:	and    DWORD PTR [eax],0xffffff9b
  4333b8:	add    bh,bh
  4333ba:	ins    DWORD PTR es:[edi],dx
  4333bb:	add    BYTE PTR [edi-0x879f01],bl
  4333c1:	jmp    FWORD PTR [edx-0x79ff297d]
  4333c7:	mov    al,ds:0xff798983
  4333cc:	pop    ebp
  4333cd:	mov    DWORD PTR [esi+0x2b],ebx
  4333d0:	(bad)  
  4333d1:	push   ebx
  4333d3:	add    BYTE PTR [edx],al
  4333d5:	add    BYTE PTR [edx+ebx*1+0x0],ah
  4333d9:	jmp    esi
  4333db:	dec    DWORD PTR [ebx-0x33dda234]
  4333e1:	add    BYTE PTR [esi],dh
  4333e3:	int3   
  4333e4:	cld    
  4333e5:	add    BYTE PTR [esi],ah
  4333e7:	repz (bad) 
  4333e9:	(bad)  
  4333ea:	notrack call DWORD PTR [eax]
  4333ed:	add    BYTE PTR [ebx-0x97600ba],ch
  4333f3:	jmp    FWORD PTR [ebp-0x7d]
  4333f6:	pop    ebp
  4333f7:	add    BYTE PTR [eax],al
  4333f9:	mov    edi,ebp
  4333fb:	add    BYTE PTR [ebx-0x34],dh
  4333fe:	sub    ch,al
  433400:	dec    DWORD PTR [ecx-0x20007a]
  433406:	mov    dl,0x89
  433408:	(bad)  
  433409:	jmp    FWORD PTR [ebx+eax*4]
  43340c:	sbb    DWORD PTR [eax],eax
  43340e:	pop    ds
  43340f:	aad    0xcc
  433411:	add    dl,ch
  433413:	mov    eax,ebp
  433415:	add    cl,bh
  433417:	or     al,BYTE PTR [eax]
  433419:	call   FWORD PTR [esp+ecx*8]
  43341c:	leave  
  43341d:	int3   
  43341e:	cs xor edi,edi
  433421:	int3   
  433422:	push   ecx
  433423:	add    BYTE PTR ds:0x2e1ff,ch
  433429:	int3   
  43342a:	push   esi
  43342b:	cmp    DWORD PTR [ebx-0x1],0xffffffde
  43342f:	stos   BYTE PTR es:[edi],al
  433430:	cmp    edi,0x4a
  433433:	int3   
  433434:	enter  0x7d00,0xc9
  433438:	mov    DWORD PTR [eax],eax
  43343a:	ins    DWORD PTR es:[edi],dx
  43343b:	add    cl,dh
  43343d:	add    BYTE PTR [ebp-0xf000041],al
  433443:	add    BYTE PTR [edx-0x1],dl
  433446:	sub    ch,BYTE PTR [edi-0x5b0001]
  43344c:	loopne 0x43344d
  43344e:	mov    ds,WORD PTR [esi+0x0]
  433451:	call   esi
  433453:	(bad)  
  433454:	in     al,dx
  433455:	add    al,cl
  433457:	cli    
  433458:	inc    DWORD PTR [eax]
  43345a:	ret    
  43345b:	add    DWORD PTR [eax+eax*1+0x54],0x5b
  433460:	inc    DWORD PTR [eax]
  433462:	aam    0xcc
  433464:	fwait
  433465:	jmp    DWORD PTR [esi+0x1b]
  433468:	(bad)  
  433469:	jmp    FWORD PTR [edi-0x1]
  43346c:	imul   edi,edi,0x83ffabca
  433472:	pop    ebx
  433473:	call   DWORD PTR [eax-0x419b77]
  433479:	(bad)  
  43347a:	js     0x433448
  43347c:	mov    al,ds:0xff20ce00
  433481:	add    BYTE PTR [edi+0x0],dh
  433484:	cld    
  433485:	(bad)  
  433486:	out    dx,eax
  433487:	push   ss
  433488:	add    BYTE PTR [ecx-0x330f00ac],cl
  43348e:	sub    eax,0x8bff00fd
  433493:	add    BYTE PTR [esi],al
  433495:	call   FWORD PTR [ecx+0x2d83007c]
  43349b:	call   FWORD PTR [esi-0xbe1d00]
  4334a1:	mov    DWORD PTR [edi-0x22ff3e00],edx
  4334a7:	sahf   
  4334a8:	inc    DWORD PTR [eax]
  4334aa:	inc    ebx
  4334ab:	adc    DWORD PTR [eax],0xffffffff
  4334ae:	(bad)  
  4334b2:	imul   eax,DWORD PTR [eax],0xcfef009d
  4334b8:	add    BYTE PTR [eax],al
  4334ba:	(bad)  
  4334bb:	call   FWORD PTR [eax-0x3310d67d]
  4334c1:	jmp    DWORD PTR [edx+0x76001ecc]
  4334c7:	push   0xff6d8989
  4334cc:	sbb    edi,edi
  4334ce:	sub    esi,DWORD PTR [edi+0xd8ffff]
  4334d4:	iret   
  4334d5:	xor    ecx,0xffffff88
  4334d8:	(bad)  
  4334d9:	jmp    eax
  4334db:	jmp    DWORD PTR [ebp-0x7d]
  4334de:	cmp    edx,DWORD PTR [ebx+0x0]
  4334e1:	(bad)  
  4334e2:	cmp    al,0x0
  4334e4:	xor    DWORD PTR [ecx-0x7d3d],ecx
  4334ea:	mov    DWORD PTR [ebx-0x26e4000a],eax
  4334f0:	add    BYTE PTR [ebx-0xb376c7],al
  4334f6:	adc    al,0x9a
  4334f8:	inc    DWORD PTR [eax]
  4334fa:	add    edi,edi
  4334fc:	ror    DWORD PTR [ecx-0x7626e3],cl
  433502:	ins    DWORD PTR es:[edi],dx
  433503:	add    BYTE PTR [ecx],bh
  433505:	sbb    DWORD PTR [edi+0xd],0xffffffff
  433509:	push   esp
  43350b:	call   FWORD PTR [edx]
  43350d:	(bad)  
  43350e:	call   FWORD PTR [eax+0xd3cc89]
  433514:	popa   
  433515:	jmp    FWORD PTR [ecx-0x207c3355]
  43351b:	push   DWORD PTR [eax]
  43351d:	inc    ebx
  43351f:	mov    ah,0x0
  433521:	inc    DWORD PTR [eax-0x6700657d]
  433527:	mov    bh,bh
  433529:	(bad)  
  43352a:	out    dx,al
  43352b:	dec    DWORD PTR ds:0x606189
  433531:	add    BYTE PTR [ebx+0x2500e000],ah
  433537:	(bad)  
  433539:	add    BYTE PTR [edi+0x25ff97ff],bl
  43353f:	lods   eax,DWORD PTR ds:[esi]
  433540:	add    bh,bh
  433542:	push   ebp
  433543:	push   DWORD PTR [edi-0x1]
  433546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433547:	out    dx,eax
  433548:	add    bh,bh
  43354a:	je     0x43354c
  43354c:	add    bh,bh
  43354e:	into   
  43354f:	push   cs
  433550:	add    BYTE PTR [ecx+0x36ffc2],cl
  433556:	daa    
  433557:	addr16 (bad) 
  433559:	jmp    esp
  43355b:	add    BYTE PTR [ebx-0x952c7d],ah
  433561:	add    al,dl
  433563:	int3   
  433564:	fwait
  433565:	call   DWORD PTR [ebx+esi*8]
  433568:	(bad)  
  433569:	call   FWORD PTR [edi+edi*8+0x5e3b8392]
  433570:	(bad)  
  433571:	inc    DWORD PTR [edx]
  433573:	add    BYTE PTR ds:0x89d64e83,bh
  433579:	add    ah,bh
  43357b:	call   FWORD PTR [ebx]
  43357d:	call   DWORD PTR [edi+0xf0000f9]
  433583:	add    BYTE PTR [ecx-0x7d],bl
  433586:	(bad)  
  433588:	add    bh,bh
  43358a:	mov    ebx,0x5eff1bff
  43358f:	ret    0xffff
  433592:	mov    DWORD PTR [eax],0xdf20ffd3
  433598:	add    DWORD PTR [eax],0xfffffff3
  43359b:	inc    edx
  43359d:	int3   
  43359e:	sub    ecx,esi
  4335a0:	add    ah,cl
  4335a2:	popa   
  4335a3:	dec    DWORD PTR ds:0x830ab0ff
  4335a9:	call   FWORD PTR [edi]
  4335ab:	add    BYTE PTR [edi+edi*8-0x7676b087],al
  4335b2:	int3   
  4335b3:	add    bh,cl
  4335b5:	inc    DWORD PTR [edi]
  4335b7:	lods   al,BYTE PTR ds:[esi]
  4335b8:	(bad)  
  4335b9:	call   DWORD PTR [esi+0x0]
  4335bc:	aad    0xff
  4335be:	jne    0x4335f3
  4335c0:	add    ah,cl
  4335c2:	mov    al,BYTE PTR [eax]
  4335c4:	push   ecx
  4335c5:	jmp    FWORD PTR [edi+0x32ccff99]
  4335cb:	add    dl,cl
  4335cd:	int3   
  4335ce:	sbb    DWORD PTR [ecx],ebp
  4335d0:	(bad)  
  4335d1:	call   DWORD PTR ds:0xa5ff1e00
  4335d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4335d8:	inc    DWORD PTR [eax]
  4335da:	jns    0x4335db
  4335dc:	xchg   BYTE PTR [eax],al
  4335de:	sub    BYTE PTR [ebx+eax*4-0x6dffbb01],cl
  4335e5:	sbb    DWORD PTR [edx+0x7e],0x0
  4335e9:	jmp    edi
  4335eb:	inc    DWORD PTR [ecx]
  4335ed:	int3   
  4335ee:	inc    edx
  4335ef:	xor    DWORD PTR [ebx-0x7933d101],eax
  4335f5:	jmp    edx
  4335f7:	inc    DWORD PTR [eax]
  4335f9:	add    BYTE PTR [ecx+0x0],dh
  4335fc:	inc    eax
  4335fd:	jmp    DWORD PTR [ebp+eiz*4-0xa4007d]
  433604:	jo     0x43358f
  433606:	lea    edi,[eax+eax*1-0x1]
  43360a:	push   ebx
  43360b:	inc    esp
  43360d:	call   DWORD PTR [ecx-0x5000008a]
  433613:	call   DWORD PTR [esi]
  433615:	add    BYTE PTR ds:0xd830082,bl
  43361b:	(bad)  
  43361c:	jmp    0xffbd92a4
  433621:	call   FWORD PTR [ebx-0x68ffb401]
  433627:	mov    cl,0x0
  433629:	add    BYTE PTR [ecx],ah
  43362b:	add    BYTE PTR ds:0xff9eef83,ch
  433631:	push   DWORD PTR [edx-0x1]
  433634:	outs   dx,DWORD PTR ds:[esi]
  433635:	call   FWORD PTR [esi]
  433637:	lock inc DWORD PTR [eax]
  43363a:	jmp    0x43363c
  43363c:	xor    DWORD PTR [eax],eax
  43363e:	out    0xc7,eax
  433640:	int3   
  433641:	jmp    FWORD PTR [ecx+ecx*4+0x5cb00b6]
  433648:	int3   
  433649:	add    BYTE PTR [esi+0x7afff300],ch
  43364f:	sti    
  433650:	add    DWORD PTR [eax],0xffffff90
  433653:	add    BYTE PTR [esi],dh
  433655:	jmp    FWORD PTR [edi]
  433657:	push   edx
  433658:	cmp    edi,0x3
  43365b:	jmp    FWORD PTR [edi+0x0]
  43365e:	in     al,0xe
  433660:	inc    DWORD PTR [eax]
  433662:	imul   eax,DWORD PTR [eax],0x3d61cc8a
  433668:	inc    DWORD PTR [eax]
  43366a:	xor    ecx,esp
  43366c:	leave  
  43366d:	mov    DWORD PTR [ebx+0x4b],ecx
  433670:	add    DWORD PTR [ebx-0x690068],0xffffff97
  433677:	xchg   edi,eax
  433678:	or     DWORD PTR [ecx-0x207cd4],0xffffffcd
  43367f:	fs (bad) 
  433681:	call   DWORD PTR [ebp-0x78ff3a34]
  433687:	fadd   DWORD PTR [eax]
  433689:	inc    DWORD PTR [edi+edi*8-0x554b00a4]
  433690:	(bad)  
  433691:	inc    DWORD PTR [edi-0x1]
  433694:	pop    ebx
  433695:	push   esi
  433697:	dec    esi
  433698:	int3   
  433699:	int3   
  43369a:	push   edx
  43369b:	dec    eax
  43369d:	add    dl,cl
  43369f:	dec    esp
  4336a0:	(bad)  
  4336a1:	(bad)  
  4336a2:	mov    ebp,0xeaffadff
  4336a7:	push   esi
  4336a8:	inc    DWORD PTR [eax]
  4336aa:	daa    
  4336ab:	sbb    edi,0xffffffff
  4336ae:	adc    al,0xdd
  4336b0:	add    BYTE PTR [eax],al
  4336b2:	fmulp  st(4),st
  4336b4:	and    DWORD PTR [ebx+0xffdda8],eax
  4336ba:	rol    DWORD PTR [eax],0xd5
  4336bd:	add    BYTE PTR [ecx+edi*1],bh
  4336c0:	inc    DWORD PTR [eax]
  4336c2:	ja     0x43364d
  4336c4:	sahf   
  4336c5:	inc    DWORD PTR [ebx+0x35]
  4336c8:	add    DWORD PTR [eax],0xffffff82
  4336cb:	add    BYTE PTR [esi-0x1],cl
  4336ce:	lds    ebx,FWORD PTR ds:0xc68300
  4336d4:	adc    eax,0x6ac800
  4336d9:	jmp    FWORD PTR [edx]
  4336db:	push   DWORD PTR [eax+eax*1+0x48]
  4336df:	mov    ecx,0xcc7100ff
  4336e4:	dec    esp
  4336e5:	or     DWORD PTR [ecx],0xffffffb5
  4336e8:	dec    esp
  4336ea:	and    eax,0x78ff3500
  4336ef:	push   es
  4336f0:	cmp    edi,0xffffffea
  4336f3:	add    esi,0xffffffff
  4336f6:	jbe    0x4336b4
  4336f8:	int3   
  4336f9:	(bad)  
  4336fa:	js     0x43367f
  4336fc:	xchg   esi,eax
  4336fd:	jmp    DWORD PTR [ebx]
  4336ff:	test   al,0xff
  433701:	push   DWORD PTR [ecx]
  433703:	push   DWORD PTR [eax-0x1]
  433706:	mul    al
  433708:	add    BYTE PTR [eax],al
  43370a:	jae    0x43370c
  43370c:	std    
  43370d:	add    BYTE PTR [ebp-0x13],bh
  433710:	(bad)  
  433711:	push   DWORD PTR [edi+edi*8-0x5b71ff26]
  433718:	(bad)  
  433719:	dec    DWORD PTR [ebx+eax*4-0x22]
  43371d:	and    eax,0x6a
  433720:	inc    DWORD PTR [ebx+0x6aff9d]
  433726:	loopne 0x4336f8
  433728:	(bad)  
  433729:	push   DWORD PTR [eax-0x7d]
  43372c:	and    bh,bh
  43372e:	fdiv   DWORD PTR [esi-0x6d0001]
  433734:	mov    al,ds:0xffbe5600
  433739:	(bad)  
  43373a:	aas    
  43373b:	call   FWORD PTR [eax+0x0]
  43373e:	outs   dx,DWORD PTR ds:[esi]
  43373f:	jnp    0x433741
  433741:	add    bh,al
  433743:	add    BYTE PTR [eax],ah
  433745:	jmp    FWORD PTR [ebp-0x48]
  433748:	add    bh,bh
  43374a:	dec    eax
  43374b:	(bad)  
  43374c:	fadd   QWORD PTR [ebx-0x48bd]
  433752:	imul   eax,DWORD PTR [eax],0x1cbcff2d
  433758:	int3   
  433759:	inc    DWORD PTR [ebx+eax*4+0x77bfff0f]
  433760:	add    bh,bh
  433762:	and    al,BYTE PTR [eax]
  433764:	int3   
  433765:	add    BYTE PTR [ebp+eiz*1+0xeffff],ch
  43376c:	jb     0x43376d
  43376e:	pushf  
  43376f:	(bad)  
  433770:	add    BYTE PTR [eax],al
  433772:	pop    edi
  433773:	(bad)  
  433774:	fcos   
  433776:	mov    dh,0x35
  433778:	add    bh,bh
  43377a:	test   bh,bh
  43377c:	or     eax,0xffe034ff
  433781:	call   ebp
  433783:	adc    DWORD PTR [edx],0x0
  433786:	push   edx
  433787:	pop    edi
  433788:	(bad)  
  433789:	inc    DWORD PTR [ebp-0x1]
  43378c:	cmc    
  43378d:	push   DWORD PTR [esi-0x27]
  433790:	inc    DWORD PTR [ebx-0x13ffc2]
  433796:	loope  0x433774
  433798:	add    BYTE PTR [ebx-0x33c67690],al
  43379e:	std    
  43379f:	(bad)  
  4337a0:	(bad)  
  4337a1:	(bad)  
  4337a2:	fiadd  WORD PTR [eax]
  4337a4:	xor    eax,0xff8e9683
  4337a9:	add    BYTE PTR [eax+eax*1],dl
  4337ac:	push   0xff8a1f00
  4337b1:	(bad)  
  4337b2:	jmp    0xd3:0xda831d89
  4337b9:	mov    DWORD PTR [ebx+eax*4+0x75],esp
  4337bd:	(bad)  
  4337be:	std    
  4337bf:	xor    edi,edi
  4337c1:	dec    DWORD PTR [ecx+0x35ff2f83]
  4337c7:	mov    ebx,0xccf2ff83
  4337cc:	loopne 0x4337cd
  4337ce:	and    DWORD PTR [edx-0x1],0xffffffff
  4337d2:	test   edi,edi
  4337d4:	in     eax,0xcc
  4337d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4337d7:	mov    bl,0xff
  4337d9:	push   DWORD PTR ds:0x25cc7e00
  4337df:	mov    bl,0xff
  4337e1:	add    BYTE PTR [edx+0x0],ch
  4337e4:	mov    dl,0x89
  4337e6:	pushf  
  4337e7:	(bad)  
  4337e8:	int3   
  4337e9:	sbb    DWORD PTR [ebx],0x0
  4337ec:	imul   eax,DWORD PTR [eax],0xffffffe4
  4337ef:	xchg   edi,edi
  4337f1:	add    BYTE PTR [eax-0x1],dl
  4337f4:	in     al,dx
  4337f5:	cmp    DWORD PTR [edi+edi*4],0xffffffff
  4337f9:	add    BYTE PTR ds:0x2f002883,ah
  4337ff:	or     edi,edi
  433801:	mov    DWORD PTR [edi-0x1],edx
  433804:	or     eax,DWORD PTR [ebx+0xffbe14]
  43380a:	sar    bh,0x9c
  43380d:	inc    DWORD PTR [ebx+0x63]
  433810:	add    ah,cl
  433812:	add    eax,0x20ffed00
  433817:	(bad)  
  433818:	(bad)  
  433819:	push   DWORD PTR [ebp-0x1]
  43381c:	aaa    
  43381d:	add    BYTE PTR [edx-0x2e],al
  433820:	inc    DWORD PTR [eax]
  433822:	daa    
  433823:	(bad)  
  433824:	fiadd  DWORD PTR [eax]
  433826:	jg     0x433823
  433828:	inc    DWORD PTR [eax]
  43382a:	push   edi
  43382b:	add    DWORD PTR [ebx+0x0],0x75
  43382f:	pop    ebp
  433830:	inc    DWORD PTR [eax]
  433832:	cmp    bh,0x25
  433835:	dec    esi
  433837:	test   edi,edi
  433839:	jmp    FWORD PTR [eax]
  43383b:	add    DWORD PTR [ebp-0x7ca47501],0xffffff89
  433842:	dec    ebx
  433843:	add    BYTE PTR [edi+edi*8-0x7c7cccd9],dh
  43384a:	outs   dx,DWORD PTR ds:[esi]
  43384b:	adc    DWORD PTR [ebx+0x0],0x42
  43384f:	enter  0xcc,0xeb
  433853:	add    bl,bl
  433855:	add    BYTE PTR [esi],al
  433857:	stos   BYTE PTR es:[edi],al
  433858:	add    bh,bh
  43385a:	sar    edi,1
  43385c:	inc    esi
  43385d:	call   DWORD PTR [edx-0x77]
  433860:	add    DWORD PTR [eax],0xffffffe1
  433863:	add    bh,ch
  433865:	add    BYTE PTR [eax],bl
  433867:	fadd   DWORD PTR [eax]
  433869:	inc    DWORD PTR [edx]
  43386b:	call   DWORD PTR [ebp-0x7c324b7d]
  433871:	add    dl,dh
  433873:	add    BYTE PTR [edi+edi*8-0x6d],cl
  433877:	popf   
  433878:	(bad)  
  433879:	call   FWORD PTR [ebp-0x34]
  43387c:	push   ss
  43387d:	add    bh,dl
  43387f:	inc    WORD PTR [eax]
  433882:	adc    eax,DWORD PTR [ebx-0x2a47c4f]
  433888:	inc    DWORD PTR [ebx-0x33bc7c7f]
  43388e:	int3   
  43388f:	or     al,0xff
  433891:	mov    DWORD PTR [eax+eax*1],eax
  433894:	xor    edi,edi
  433896:	mov    esp,DWORD PTR [eax-0x1]
  433899:	(bad)  
  43389a:	cmp    edi,edi
  43389c:	cli    
  43389d:	call   edx
  43389f:	call   0xff643970
  4338a4:	dec    edx
  4338a5:	call   FWORD PTR [ebx]
  4338a7:	inc    ebp
  4338a8:	cmp    edi,0x71
  4338ab:	(bad)  
  4338ac:	jns    0x433831
  4338ae:	and    al,0x67
  4338b0:	inc    DWORD PTR [ebx+0x4affa1]
  4338b6:	sbb    cl,al
  4338b8:	inc    DWORD PTR [eax]
  4338ba:	dec    edi
  4338bb:	add    DWORD PTR [edi],0x0
  4338be:	sub    edi,DWORD PTR [esi-0x1]
  4338c1:	xor    DWORD PTR [esi],0xffffffff
  4338c4:	or     al,0x83
  4338c6:	adc    al,0x88
  4338c8:	inc    DWORD PTR [ebx-0x33eefff8]
  4338ce:	jbe    0x43387b
  4338d0:	inc    DWORD PTR [eax]
  4338d2:	or     al,0xff
  4338d4:	and    eax,0x835b78ff
  4338d9:	inc    DWORD PTR [edi+edi*8+0x27]
  4338dd:	push   DWORD PTR [ebp-0x3d]
  4338e0:	add    bh,bh
  4338e2:	popa   
  4338e3:	(bad)  
  4338e4:	fadd   QWORD PTR [eax]
  4338e6:	push   0xffffffeb
  4338e8:	int3   
  4338e9:	add    BYTE PTR [eax],dh
  4338eb:	call   FWORD PTR [edx+0xf15bff]
  4338f1:	add    dh,al
  4338f3:	int3   
  4338f4:	inc    ecx
  4338f5:	push   esi
  4338f7:	push   ds
  4338f8:	inc    DWORD PTR [eax]
  4338fa:	jo     0x4338fc
  4338fc:	xchg   ebp,eax
  4338fd:	int3   
  4338fe:	(bad)  
  433900:	add    BYTE PTR [ebx+0xcff0e],al
  433906:	dec    ebp
  433907:	sub    al,BYTE PTR [ebx-0x4eff3501]
  43390d:	add    BYTE PTR [edx+0x79ff00b4],dl
  433913:	add    dl,ah
  433915:	add    BYTE PTR [esi+0x65ffff25],dh
  43391b:	int3   
  43391c:	cmp    eax,0x8358ca00
  433921:	jmp    FWORD PTR [eax+eax*1-0x6b4e0025]
  433928:	inc    DWORD PTR [ebx-0x76f600f9]
  43392e:	(bad)  
  43392f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433930:	inc    DWORD PTR [eax]
  433932:	(bad)  
  433933:	mov    DWORD PTR [esi-0x7d],ebx
  433936:	call   0xe4ff:0xd5ff00ea
  43393d:	call   edi
  43393f:	lods   eax,DWORD PTR ds:[esi]
  433940:	inc    DWORD PTR [eax]
  433942:	push   ss
  433943:	call   FWORD PTR [esi-0x1]
  433946:	pop    es
  433947:	cmp    edi,edi
  433949:	mov    DWORD PTR [edx-0x1],edi
  43394c:	lock inc ebp
  43394f:	cmc    
  433950:	dec    esp
  433952:	sar    bh,0x73
  433955:	add    bh,bh
  433957:	jmp    0x433959
  433959:	add    BYTE PTR [eax+eax*1+0x7d],al
  43395d:	push   DWORD PTR [eax]
  43395f:	mov    edi,0xff57ff89
  433964:	mov    DWORD PTR [eax],eax
  433966:	jne    0x433994
  433968:	(bad)  
  433969:	inc    DWORD PTR ds:0xbbff0cff
  43396f:	loopne 0x433971
  433971:	adc    DWORD PTR [ebx-0x1],0xf
  433975:	jmp    esi
  433977:	in     al,dx
  433978:	mov    DWORD PTR [eax],eax
  43397a:	(bad)  
  43397b:	int3   
  43397c:	sub    eax,DWORD PTR [eax]
  43397e:	(bad)  
  43397f:	call   0xfff2c30d
  433984:	call   DWORD PTR ss:[edi-0x41]
  433988:	inc    DWORD PTR [ebx-0xc9002a]
  43398e:	mov    ah,0x2a
  433990:	int3   
  433991:	jmp    ecx
  433993:	add    bh,bh
  433995:	(bad)  
  433996:	(bad)  [edi-0x1]
  433999:	jmp    DWORD PTR [edx]
  43399b:	(bad)  
  43399c:	js     0x43399d
  43399e:	push   0x6e89ff54
  4339a3:	sub    DWORD PTR [ebx],0xffffff83
  4339a6:	or     dl,BYTE PTR [edi]
  4339a8:	mov    DWORD PTR [eax],eax
  4339aa:	cmp    edi,edi
  4339ac:	iret   
  4339ad:	inc    ebx
  4339af:	push   ds
  4339b0:	add    bh,bh
  4339b2:	or     ecx,DWORD PTR [ecx+0x322e00dd]
  4339b8:	int3   
  4339b9:	inc    ebp
  4339bb:	dec    DWORD PTR [edi]
  4339bd:	add    BYTE PTR [ecx-0x29ffff9e],dl
  4339c3:	push   DWORD PTR [edi-0x7c95f001]
  4339c9:	add    dh,dl
  4339cb:	int3   
  4339cc:	out    dx,eax
  4339cd:	add    BYTE PTR [eax-0x5b00ff49],al
  4339d3:	add    BYTE PTR [edx-0x1],ch
  4339d6:	mov    dh,0x41
  4339d8:	int3   
  4339d9:	call   DWORD PTR [ebx-0x1]
  4339dc:	dec    esp
  4339dd:	add    BYTE PTR [esi+0x4f],al
  4339e0:	add    bh,bh
  4339e2:	xor    eax,0xf5ffdfcc
  4339e7:	xor    ah,cl
  4339e9:	inc    DWORD PTR [esi]
  4339eb:	cmp    DWORD PTR [esi],0xffffffff
  4339ee:	xor    dl,BYTE PTR [esp+ecx*8+0x0]
  4339f2:	mov    ecx,0x67cc82ff
  4339f7:	xor    DWORD PTR [eax],eax
  4339f9:	add    BYTE PTR [eax-0x5f003677],ah
  4339ff:	jmp    0x433a01
  433a01:	add    BYTE PTR [edi+0xb00b0ff],bl
  433a07:	adc    DWORD PTR [eax],eax
  433a09:	dec    esi
  433a0b:	add    bl,ah
  433a0d:	adc    DWORD PTR [ebp+0x58],0xffffffff
  433a11:	mov    DWORD PTR [ecx+0x0],esp
  433a14:	xchg   esp,eax
  433a15:	add    BYTE PTR [esi+0x32],bl
  433a18:	(bad)  
  433a19:	inc    DWORD PTR [eax+0x3efff800]
  433a1f:	cdq    
  433a20:	(bad)  
  433a21:	jmp    FWORD PTR [eax]
  433a23:	call   FWORD PTR [edx]
  433a25:	jmp    DWORD PTR [esi-0x33]
  433a28:	add    BYTE PTR [eax],al
  433a2a:	arpl   di,di
  433a2c:	adc    ecx,DWORD PTR [ecx-0x7c00a158]
  433a32:	inc    edx
  433a33:	mov    DWORD PTR ds:0xfffefb89,esp
  433a39:	(bad)  
  433a3a:	mov    esp,0x1cc3383
  433a3f:	or     DWORD PTR [ebx+0x1bffd700],eax
  433a45:	int3   
  433a46:	aam    0x76
  433a48:	add    bh,bh
  433a4a:	in     eax,dx
  433a4b:	add    BYTE PTR [ebx+0x5d12ff],ch
  433a51:	call   FWORD PTR [esi-0x1]
  433a54:	pop    DWORD PTR [eax]
  433a56:	out    0x8b,al
  433a58:	inc    DWORD PTR [eax]
  433a5a:	scas   eax,DWORD PTR es:[edi]
  433a5b:	push   edx
  433a5d:	jmp    DWORD PTR [ecx+0xb]
  433a60:	add    BYTE PTR [ebx-0x6d00b2],al
  433a66:	es sub al,0xff
  433a69:	adc    DWORD PTR [esi],0x0
  433a6c:	cmp    al,BYTE PTR [ebx+0x43ba]
  433a72:	jle    0x4339fd
  433a74:	jno    0x433a76
  433a76:	add    BYTE PTR [eax+0xdaffff],dh
  433a7c:	aam    0x83
  433a7e:	mov    BYTE PTR [ecx-0x7c440100],bh
  433a84:	idiv   edi
  433a86:	out    0xbf,al
  433a88:	inc    DWORD PTR [eax]
  433a8a:	call   0xca43768e
  433a8f:	mov    cl,0x83
  433a91:	jmp    FWORD PTR [edi+edi*8+0x45bfffdc]
  433a98:	mov    edi,edi
  433a9a:	jge    0x433a9b
  433a9c:	loop   0x433a9e
  433a9e:	daa    
  433a9f:	mov    edi,0xfc0000
  433aa4:	(bad)  
  433aa5:	inc    esp
  433aa7:	or     bh,bh
  433aa9:	add    BYTE PTR [edx],cl
  433aab:	add    ah,dh
  433aad:	add    dh,dl
  433aaf:	sbb    edi,edi
  433ab1:	or     DWORD PTR [edi+0xe830783],0x4e
  433ab8:	inc    DWORD PTR [eax]
  433aba:	sahf   
  433abb:	push   DWORD PTR [esi-0x1]
  433abe:	pop    ds
  433abf:	add    edi,edi
  433ac1:	push   DWORD PTR [ebx+0x55ff6cff]
  433ac7:	scas   al,BYTE PTR es:[edi]
  433ac8:	inc    DWORD PTR [eax]
  433aca:	imul   eax,DWORD PTR [ebx+0x39ff0024],0xffc289ff
  433ad4:	add    BYTE PTR [eax],al
  433ad6:	jnp    0x433a5d
  433ad8:	add    BYTE PTR [eax],al
  433ada:	xchg   ecx,eax
  433adb:	add    BYTE PTR [esi],bh
  433add:	add    BYTE PTR [edi],al
  433adf:	pop    ds
  433ae0:	inc    DWORD PTR [eax]
  433ae2:	sbb    DWORD PTR [eax],eax
  433ae4:	dec    ebp
  433ae5:	jmp    DWORD PTR [ebx-0x50]
  433ae8:	cmp    edi,0x71
  433aeb:	int3   
  433aec:	sahf   
  433aed:	(bad)  
  433aee:	mov    edi,0x19ffff74
  433af3:	add    ah,ch
  433af5:	push   DWORD PTR [ebp+0x24]
  433af8:	add    BYTE PTR [eax],al
  433afa:	je     0x433afc
  433afc:	cwde   
  433afd:	xor    DWORD PTR [esi-0x5],0xffffffff
  433b01:	dec    DWORD PTR [eax+0x10083ff]
  433b07:	loope  0x433a8c
  433b09:	add    ch,dl
  433b0b:	inc    DWORD PTR [ebx]
  433b0d:	call   FWORD PTR [ebp-0x55ff3361]
  433b13:	mov    DWORD PTR [eax+eax*1-0x7cc0e8],ebp
  433b1a:	iret   
  433b1b:	xor    DWORD PTR [esi],0x0
  433b1e:	rol    DWORD PTR [eax+eax*1],0x83
  433b22:	mov    ebp,0xb83c283
  433b27:	int3   
  433b28:	dec    DWORD PTR [ecx-0x6100d1]
  433b2e:	cmp    DWORD PTR ds:0x8300ff83,esp
  433b34:	pop    eax
  433b35:	int3   
  433b36:	loope  0x433bb2
  433b38:	add    BYTE PTR [ecx-0x76ca7cb4],cl
  433b3e:	jno    0x433adc
  433b40:	(bad)  
  433b41:	call   DWORD PTR [eax+eax*1+0xb2affc4]
  433b48:	(bad)  
  433b49:	push   DWORD PTR [edi+0x0]
  433b4c:	mov    ch,0xff
  433b4e:	into   
  433b4f:	ret    0xff83
  433b52:	fmul   st(4),st
  433b54:	and    bh,bh
  433b56:	test   al,0xa7
  433b58:	add    bh,bh
  433b5a:	sbb    DWORD PTR [eax],eax
  433b5c:	aas    
  433b5d:	call   DWORD PTR [ebx]
  433b5f:	xchg   edx,eax
  433b60:	or     esp,0x4c
  433b63:	(bad)  
  433b64:	fld    DWORD PTR [eax]
  433b66:	lea    esi,[eax+0x0]
  433b69:	add    BYTE PTR [ebx-0x3f7cf17d],dh
  433b6f:	jg     0x433af4
  433b71:	(bad)  
  433b72:	jle    0x433b73
  433b74:	lods   eax,DWORD PTR ds:[esi]
  433b75:	dec    DWORD PTR [esi+edx*4-0x7d]
  433b79:	add    BYTE PTR [edx+0x0],cl
  433b7c:	int3   
  433b7d:	push   edi
  433b7f:	sbb    al,BYTE PTR [eax]
  433b81:	int3   
  433b82:	pushf  
  433b83:	cmp    edi,0xffffffff
  433b86:	out    0x54,al
  433b88:	inc    DWORD PTR [eax]
  433b8a:	add    edi,edi
  433b8c:	dec    esp
  433b8d:	int3   
  433b8e:	cdq    
  433b8f:	idiv   bh
  433b91:	inc    DWORD PTR [ecx-0x5d7c7e7d]
  433b97:	(bad)  
  433b98:	(bad)  
  433b99:	inc    DWORD PTR [ebp+0x74ff5489]
  433b9f:	into   
  433ba0:	mov    DWORD PTR [ebx-0x76880011],eax
  433ba6:	out    dx,eax
  433ba7:	cld    
  433ba8:	int3   
  433ba9:	push   DWORD PTR [eax+0x4789beff]
  433baf:	pop    ebp
  433bb0:	add    bh,bh
  433bb2:	ins    BYTE PTR es:[edi],dx
  433bb3:	add    ch,ah
  433bb5:	int3   
  433bb6:	outs   dx,BYTE PTR ds:[esi]
  433bb7:	inc    DWORD PTR fs:[eax]
  433bba:	arpl   di,di
  433bbc:	add    BYTE PTR [eax],al
  433bbe:	fld    TBYTE PTR [edi+0x0]
  433bc1:	mov    DWORD PTR [edi+edi*8-0x62537c46],edi
  433bc8:	add    BYTE PTR [eax],al
  433bca:	jnp    0x433b98
  433bcc:	lds    eax,FWORD PTR [eax]
  433bce:	fist   DWORD PTR [ebp-0x76523301]
  433bd4:	enter  0xdfff,0x9
  433bd8:	inc    DWORD PTR [ebx-0x980005]
  433bde:	push   esp
  433bdf:	mov    ah,0x0
  433be1:	add    BYTE PTR [edx+0x64005400],al
  433be7:	pop    edi
  433be8:	inc    DWORD PTR [eax]
  433bea:	push   edx
  433beb:	int3   
  433bec:	mov    al,0xff
  433bee:	lahf   
  433bef:	dec    ebp
  433bf0:	(bad)  
  433bf1:	jmp    DWORD PTR [ebx]
  433bf3:	add    BYTE PTR [edi],bl
  433bf5:	add    dl,dl
  433bf7:	sbb    eax,DWORD PTR [eax]
  433bf9:	call   ebp
  433bfb:	int3   
  433bfc:	inc    ebx
  433bfd:	(bad)  
  433bfe:	fst    st(5)
  433c00:	inc    DWORD PTR [eax]
  433c02:	pop    edi
  433c03:	int3   
  433c04:	inc    eax
  433c05:	add    BYTE PTR [esi+0x34],bh
  433c08:	add    bh,bh
  433c0a:	pop    edx
  433c0b:	jmp    DWORD PTR [edx]
  433c0d:	sbb    DWORD PTR [ebx+0x5e],0xffffffcc
  433c11:	call   FWORD PTR [edi-0x34]
  433c14:	cld    
  433c15:	dec    DWORD PTR [ecx]
  433c17:	mov    ah,cl
  433c19:	add    BYTE PTR [edi+edi*8-0x30c0fff4],al
  433c20:	add    BYTE PTR [eax],al
  433c22:	jp     0x433bad
  433c24:	sar    edi,0x95
  433c27:	mov    BYTE PTR [eax],al
  433c29:	(bad)  
  433c2a:	cli    
  433c2b:	add    BYTE PTR [edi+0x0],dl
  433c2e:	or     DWORD PTR [eax-0x1],0x9affca00
  433c35:	call   DWORD PTR [eax-0xe33ff15]
  433c3b:	add    BYTE PTR [eax+eax*1-0x76ff2da1],ah
  433c42:	lea    eax,[ebx+0x4cecccb1]
  433c48:	(bad)  
  433c49:	call   edi
  433c4b:	adc    ebx,0xffffff83
  433c4e:	retf   
  433c4f:	aas    
  433c50:	int3   
  433c51:	add    ch,bl
  433c53:	(bad)  
  433c54:	mov    esp,0xcc5daeff
  433c59:	int3   
  433c5a:	int3   
  433c5b:	int3   
  433c5c:	int3   
  433c5d:	int3   
  433c5e:	int3   
  433c5f:	int3   
  433c60:	(bad)  
  433c61:	in     eax,dx
  433c62:	add    BYTE PTR [eax],al
  433c64:	mov    edi,0xcc893ba4
  433c69:	and    eax,0x4d5bcc89
  433c6e:	jmp    0x433c70
  433c70:	(bad)  
  433c71:	(bad)  
  433c72:	(bad)  
  433c73:	call   FWORD PTR [ecx]
  433c75:	jp     0x433c5c
  433c77:	add    bh,bh
  433c79:	int    0xff
  433c7b:	add    al,ah
  433c7d:	add    al,0x17
  433c7f:	(bad)  
  433c80:	push   DWORD PTR [eax]
  433c82:	mov    DWORD PTR [eax],eax
  433c84:	shr    BYTE PTR [esi],1
  433c86:	cmp    eax,0xff01ffff
  433c8b:	add    BYTE PTR [edi-0x2],dh
  433c8e:	in     al,0x83
  433c90:	and    eax,0x0
  433c93:	add    ch,dl
  433c95:	adc    ebp,DWORD PTR [ebx-0x5b0077]
  433c9b:	sbb    ebx,0xffffffc5
  433c9e:	(bad)  
  433c9f:	dec    DWORD PTR [ecx-0x3dff0006]
  433ca5:	add    BYTE PTR [edi],cl
  433ca7:	add    ah,cl
  433ca9:	cmc    
  433caa:	(bad)  
  433cab:	call   DWORD PTR [ecx-0xff3377]
  433cb1:	icebp  
  433cb2:	add    bh,bh
  433cb4:	sub    DWORD PTR [esi+0x59ffffad],esp
  433cba:	(bad)  
  433cbb:	jmp    esi
  433cbd:	dec    ebp
  433cbe:	cwde   
  433cbf:	add    BYTE PTR [eax],al
  433cc1:	mov    ds:0x2bb0ff83,al
  433cc6:	pop    esp
  433cc7:	add    bh,bh
  433cc9:	out    dx,eax
  433cca:	inc    DWORD PTR [eax]
  433ccc:	push   ebp
  433ccd:	aad    0x54
  433ccf:	mov    DWORD PTR [ebx+0x38900c7],eax
  433cd5:	and    BYTE PTR [eax],al
  433cd7:	add    bh,bh
  433cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433cda:	add    BYTE PTR [eax],al
  433cdc:	stos   BYTE PTR es:[edi],al
  433cdd:	adc    DWORD PTR ds:[ecx-0x76ff727d],ecx
  433ce4:	int    0x14
  433ce6:	leave  
  433ce7:	int3   
  433ce8:	(bad)  
  433ce9:	jnp    0x433cea
  433ceb:	push   DWORD PTR [ebx-0x49]
  433cee:	jl     0x433cef
  433cf0:	push   DWORD PTR [eax+eax*1+0x1c9a8583]
  433cf7:	inc    DWORD PTR [eax]
  433cf9:	test   bh,bh
  433cfb:	adc    DWORD PTR [ebx+0x48],0x30
  433cff:	add    ah,cl
  433d01:	pop    ds
  433d02:	add    BYTE PTR [ebx-0xa50d0a],al
  433d08:	push   esi
  433d0a:	add    bh,bh
  433d0c:	dec    eax
  433d0d:	mov    edi,0xda838361
  433d12:	add    bh,bh
  433d14:	or     eax,0xff443a
  433d19:	aas    
  433d1a:	add    ah,cl
  433d1c:	pop    esi
  433d1d:	leave  
  433d1e:	retf   
  433d1f:	inc    DWORD PTR [eax]
  433d21:	(bad)  
  433d22:	inc    DWORD PTR [eax]
  433d24:	fistp  QWORD PTR [esi+0x6800ffc0]
  433d2a:	inc    DWORD PTR [ebx-0x628fae]
  433d30:	int3   
  433d31:	test   BYTE PTR [eax],0xff
  433d34:	mov    ds:0x83ec08,al
  433d39:	ud0    edi,edi
  433d3c:	(bad)  [edx]
  433d3e:	ins    DWORD PTR es:[edi],dx
  433d3f:	int3   
  433d40:	add    al,cl
  433d42:	add    DWORD PTR [ebx+0x47380e],0xffffffff
  433d49:	push   ds
  433d4a:	(bad)  
  433d4b:	call   FWORD PTR [esi-0x3]
  433d4e:	pop    esp
  433d4f:	inc    DWORD PTR [eax]
  433d51:	sub    DWORD PTR [eax],eax
  433d53:	(bad)  
  433d54:	cmp    DWORD PTR [edx],eax
  433d56:	or     eax,0xff9b00ff
  433d5b:	add    BYTE PTR [edi],ch
  433d5d:	out    dx,al
  433d5e:	dec    ecx
  433d5f:	add    BYTE PTR [eax],al
  433d61:	mov    cl,0x0
  433d63:	add    ecx,0xffffff9f
  433d66:	and    al,BYTE PTR [eax]
  433d68:	call   FWORD PTR [eax]
  433d6a:	inc    DWORD PTR [eax]
  433d6c:	jnp    0x433db6
  433d6e:	out    dx,al
  433d6f:	add    bh,bh
  433d71:	mov    ch,0x0
  433d73:	(bad)  
  433d74:	out    dx,al
  433d75:	arpl   WORD PTR [eax-0x7d],bp
  433d78:	mov    edx,edx
  433d7a:	add    BYTE PTR [ebx-0xd8faad],al
  433d80:	int3   
  433d81:	mov    bh,bh
  433d83:	call   DWORD PTR [edi+0x2e]
  433d86:	test   bh,bh
  433d88:	jmp    DWORD PTR [ebx]
  433d8a:	add    DWORD PTR [ebx-0x8e0e03],0xffffffff
  433d91:	xlat   BYTE PTR ds:[ebx]
  433d92:	inc    DWORD PTR [eax]
  433d94:	and    BYTE PTR [edi+0x77008902],0x0
  433d9b:	sbb    esp,0xffffffc3
  433d9e:	sub    eax,0xff60ff00
  433da3:	int3   
  433da4:	xchg   esp,eax
  433da5:	outs   dx,DWORD PTR ds:[esi]
  433da6:	pop    edx
  433da7:	inc    DWORD PTR [eax]
  433da9:	push   eax
  433daa:	add    BYTE PTR [ebx-0xa79854],al
  433db0:	and    DWORD PTR [edx-0x77],0x0
  433db4:	(bad)  
  433db5:	mov    eax,ds:0x5f838397
  433dba:	add    BYTE PTR [ebx+0x52f8f1],al
  433dc0:	xor    edi,0xffffffff
  433dc3:	add    cl,bl
  433dc5:	inc    DWORD PTR [edi+edi*8+0x0]
  433dc9:	jg     0x433dcb
  433dcb:	add    BYTE PTR [ecx],dh
  433dcd:	fwait
  433dce:	dec    ebp
  433dcf:	(bad)  
  433dd0:	(bad)  
  433dd1:	jg     0x433dd3
  433dd3:	jmp    DWORD PTR [eax+eiz*2-0x13]
  433dd7:	dec    esp
  433dd9:	retf   0xffff
  433ddc:	sbb    ch,BYTE PTR [esi]
  433dde:	inc    ebx
  433ddf:	inc    DWORD PTR [ebx+0x7f83ff0f]
  433de5:	dec    esi
  433de6:	loope  0x433de7
  433de8:	add    BYTE PTR [edi-0x1],dl
  433deb:	or     ebx,0xffffffed
  433dee:	inc    edi
  433def:	add    bh,bh
  433df1:	ret    
  433df2:	add    DWORD PTR [eax],0x65
  433df5:	and    eax,DWORD PTR [eax+eax*1-0xdf00]
  433dfc:	xor    cl,cl
  433dfe:	int    0xff
  433e00:	add    al,bh
  433e02:	int3   
  433e03:	inc    edx
  433e05:	xor    dh,BYTE PTR [ecx-0xee7c01]
  433e0b:	add    BYTE PTR [ebx-0x7c009443],dh
  433e11:	push   edx
  433e12:	add    BYTE PTR [eax],al
  433e14:	pop    ebx
  433e15:	and    al,0xf4
  433e17:	inc    DWORD PTR [eax]
  433e19:	xor    bh,bh
  433e1b:	call   FWORD PTR [ecx+0x4d]
  433e1e:	jns    0x433e1f
  433e20:	int3   
  433e21:	dec    ebx
  433e22:	add    BYTE PTR [ecx-0x79f450],cl
  433e28:	inc    ebx
  433e2a:	mov    edi,edi
  433e2c:	iret   
  433e2d:	inc    ebp
  433e2e:	stos   BYTE PTR es:[edi],al
  433e2f:	mov    edi,edi
  433e31:	arpl   di,di
  433e33:	add    BYTE PTR [edx-0xd20d],ch
  433e39:	or     eax,0x8b95ff00
  433e3e:	add    al,BYTE PTR [eax]
  433e40:	(bad)  
  433e41:	cli    
  433e42:	int3   
  433e43:	push   esi
  433e45:	or     al,0xd7
  433e47:	inc    DWORD PTR [eax]
  433e49:	xchg   ecx,eax
  433e4a:	inc    DWORD PTR [eax]
  433e4c:	push   0x42
  433e4e:	lock add DWORD PTR [eax],0x53
  433e52:	cmp    edi,0x5a
  433e55:	jmp    0x66c63f43
  433e5a:	(bad)  
  433e5b:	call   DWORD PTR [ebx]
  433e5d:	frstor [ecx]
  433e5f:	add    bh,bh
  433e61:	sub    eax,0x7d560083
  433e66:	and    BYTE PTR [eax],al
  433e68:	int3   
  433e69:	mov    ch,0x0
  433e6b:	add    dl,ah
  433e6d:	dec    ebx
  433e6e:	sub    bh,bh
  433e70:	jmp    FWORD PTR [eax]
  433e72:	(bad)  
  433e73:	inc    DWORD PTR [edx]
  433e75:	sbb    al,0xb1
  433e77:	(bad)  
  433e78:	push   DWORD PTR [ebp+0x0]
  433e7b:	add    BYTE PTR [esi+edx*4-0x7500009e],ch
  433e82:	mov    edi,edi
  433e84:	shl    DWORD PTR [edi],0xda
  433e87:	cmp    edi,0xffffffce
  433e8a:	(bad)  
  433e8b:	inc    DWORD PTR [ecx]
  433e8d:	dec    edi
  433e8e:	fdivr  st,st(7)
  433e90:	(bad)  
  433e91:	cmp    al,BYTE PTR [eax]
  433e93:	mov    ecx,ebp
  433e95:	sbb    eax,0xe4ffff9a
  433e9a:	mov    DWORD PTR [ebx-0x33223de6],eax
  433ea0:	jmp    DWORD PTR [edi-0x3d5a0001]
  433ea6:	jle    0x433ea7
  433ea8:	sub    eax,0x0
  433eab:	add    BYTE PTR [ebx-0x7cff111c],al
  433eb1:	add    eax,0x71a40000
  433eb6:	retf   0xff
  433eb9:	int3   
  433eba:	add    bh,bh
  433ebc:	je     0xfa443e0f
  433ec2:	(bad)  
  433ec3:	push   DWORD PTR [ebp+0x120f]
  433ec9:	push   es
  433eca:	mov    edi,edi
  433ecc:	outs   dx,DWORD PTR ds:[esi]
  433ecd:	aaa    
  433ece:	je     0x433ed0
  433ed0:	add    BYTE PTR [ebx+eax*4+0x3eb75600],ah
  433ed7:	(bad)  
  433ed8:	dec    DWORD PTR [ecx-0x34]
  433edb:	cmp    DWORD PTR ds:0x89ff63cc,0xffffffca
  433ee2:	add    bh,bh
  433ee4:	bound  esp,QWORD PTR [esi+edi*1-0x1]
  433ee8:	int3   
  433ee9:	add    eax,0x2b800ff
  433eee:	or     al,BYTE PTR [eax]
  433ef0:	inc    ecx
  433ef2:	(bad)  
  433ef3:	push   esi
  433ef5:	fisubr WORD PTR [edi+edi*8]
  433ef8:	add    BYTE PTR [edi],dh
  433efa:	add    bh,bh
  433efc:	and    al,0x96
  433efe:	mov    ?,edi
  433f00:	add    dh,ch
  433f02:	mov    edi,edi
  433f04:	push   eax
  433f05:	ficom  DWORD PTR [esi-0x7c583301]
  433f0b:	push   ebp
  433f0d:	scas   al,BYTE PTR es:[edi]
  433f0e:	add    BYTE PTR [ecx-0x2977],cl
  433f14:	mov    bl,0x8b
  433f16:	mov    ecx,0x830200ff
  433f1b:	add    BYTE PTR [esp+ebx*1+0x21],bl
  433f1f:	add    bh,bh
  433f21:	xchg   edi,edi
  433f23:	push   DWORD PTR [ebx+0xffd929]
  433f29:	xor    eax,0x76c1ff00
  433f2e:	inc    edi
  433f2f:	cmp    edi,0x15
  433f32:	inc    DWORD PTR [ebx+0x1014e7]
  433f38:	(bad)  
  433f39:	fdivr  st,st(7)
  433f3b:	add    BYTE PTR [edi+0x49],bl
  433f3e:	and    bh,bh
  433f40:	add    BYTE PTR [ecx+ecx*4-0x258dd700],cl
  433f47:	int3   
  433f48:	call   DWORD PTR [esi]
  433f4a:	inc    DWORD PTR [eax]
  433f4c:	popf   
  433f4d:	or     al,0x1c
  433f4f:	int3   
  433f50:	add    dl,al
  433f52:	add    bh,bh
  433f54:	test   DWORD PTR [edx-0x3a330045],0xe3df89cc
  433f5e:	sti    
  433f5f:	add    bh,bh
  433f61:	add    edi,edi
  433f63:	add    ebx,0x77
  433f66:	sar    edi,cl
  433f68:	call   FWORD PTR [eax+0x2df20000]
  433f6e:	jae    0x433f6f
  433f70:	jmp    DWORD PTR [ecx+0x115f83ff]
  433f76:	xchg   ecx,eax
  433f77:	int3   
  433f78:	add    BYTE PTR [eax],ah
  433f7a:	mov    edi,edi
  433f7c:	std    
  433f7d:	mov    ch,0x82
  433f7f:	(bad)  
  433f80:	jmp    FWORD PTR [ebx]
  433f82:	int3   
  433f83:	jmp    FWORD PTR [ecx-0x33978d]
  433f89:	sbb    eax,0x3d92ffff
  433f8e:	and    al,BYTE PTR [eax]
  433f90:	add    dh,dl
  433f92:	(bad)  
  433f93:	inc    DWORD PTR [edi+0x692]
  433f99:	jmp    0x433f9b
  433f9b:	sbb    edi,0x6b
  433f9e:	add    BYTE PTR [eax],al
  433fa0:	add    BYTE PTR [edi+0x3ac5ffff],bh
  433fa6:	adc    eax,0xff23cc00
  433fab:	call   DWORD PTR [ebp-0x7ca430]
  433fb1:	cmp    eax,0x52988300
  433fb6:	or     BYTE PTR [eax],al
  433fb8:	add    BYTE PTR [eax+eax*1+0x66085200],dl
  433fbf:	(bad)  
  433fc0:	jmp    DWORD PTR [edi]
  433fc2:	add    DWORD PTR [ebx+0xcb6091],0xffffffff
  433fc9:	adc    al,BYTE PTR [eax]
  433fcb:	add    DWORD PTR [ebx-0xd],0x5f
  433fcf:	add    bh,bh
  433fd1:	cmc    
  433fd2:	(bad)  
  433fd3:	call   FWORD PTR [esp+ebp*1+0x71]
  433fd7:	int3   
  433fd8:	call   FWORD PTR [ecx+ecx*4+0xf86f100]
  433fdf:	add    BYTE PTR [ebx+0x26ff0061],al
  433fe5:	jae    0x43400f
  433fe7:	(bad)  
  433fe8:	push   DWORD PTR [ecx+0x5de7ff83]
  433fee:	jmp    0x2f40f2
  433ff3:	int3   
  433ff4:	(bad)  [edi]
  433ff6:	and    edi,edi
  433ff8:	mov    DWORD PTR [esi-0x1],ebx
  433ffb:	or     DWORD PTR [eax-0x2d],0xffffff92
  433fff:	dec    esp
  434001:	mov    al,ds:0x928c00ff
  434006:	push   ecx
  434007:	inc    DWORD PTR [eax]
  434009:	mov    al,0xcc
  43400b:	sbb    DWORD PTR [eax+ecx*4+0x1f00ff86],0xffffffff
  434013:	(bad)  
  434014:	(bad)  
  434016:	xor    eax,0x83fbcc83
  43401b:	mov    DWORD PTR [ecx-0xff6be6],edi
  434021:	js     0x434022
  434023:	add    BYTE PTR [edx-0x36],ah
  434026:	pusha  
  434027:	(bad)  
  434028:	dec    DWORD PTR [ebx+eax*4]
  43402b:	jmp    FWORD PTR [edi]
  43402d:	cmc    
  43402e:	and    cl,BYTE PTR [ecx-0x7cffee7d]
  434034:	mov    ebp,0x83ffd8e6
  434039:	jbe    0x43403a
  43403b:	(bad)  
  43403c:	jle    0x434021
  43403e:	sti    
  43403f:	inc    DWORD PTR [eax]
  434041:	fmul   DWORD PTR [ecx-0x675ccb00]
  434047:	add    DWORD PTR [eax],0x7e
  43404a:	add    BYTE PTR [ebx-0xaf37a7],al
  434050:	and    DWORD PTR [esi-0x7903301],0xffffff98
  434057:	add    BYTE PTR [ebx-0x4a00ff01],al
  43405d:	xor    ch,BYTE PTR [edi+0x0]
  434060:	add    ch,dl
  434062:	inc    DWORD PTR [eax]
  434064:	dec    esp
  434065:	pop    ebp
  434066:	dec    eax
  434067:	int3   
  434068:	add    BYTE PTR [edi-0x1],cl
  43406b:	dec    ebx
  43406d:	pop    ebx
  43406e:	mov    bh,bh
  434070:	add    BYTE PTR [ecx+0x0],ch
  434073:	add    bh,cl
  434075:	xor    BYTE PTR [ebp-0x7d],bh
  434078:	add    BYTE PTR [edx],al
  43407a:	cmp    edi,0xffffffb7
  43407d:	xchg   ebp,eax
  43407e:	call   0x7eff:0xffc300ff
  434085:	or     dh,al
  434087:	add    bh,bh
  434089:	cmp    edi,0xbe1c38ff
  43408f:	add    BYTE PTR [eax],al
  434091:	fadd   QWORD PTR [ebx-0x733d2001]
  434097:	(bad)  
  434098:	call   FWORD PTR [esi-0x25260034]
  43409e:	jns    0x43409f
  4340a0:	add    BYTE PTR [ebp+0x55738389],al
  4340a6:	aam    0xff
  4340a8:	int3   
  4340a9:	cmp    eax,DWORD PTR [eax]
  4340ab:	int3   
  4340ac:	aas    
  4340ad:	add    DWORD PTR [edi],edx
  4340af:	(bad)  
  4340b0:	push   DWORD PTR [ebx-0x7d]
  4340b3:	(bad)  
  4340b4:	fmul   st(1),st
  4340b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4340b7:	add    BYTE PTR [eax],al
  4340b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4340ba:	mov    DWORD PTR [eax],eax
  4340bc:	mov    al,BYTE PTR [edx+0x20000021]
  4340c2:	dec    esp
  4340c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4340c5:	push   es
  4340c6:	jmp    0xc183:0x83e889ff
  4340cd:	ss (bad) 
  4340cf:	(bad)  
  4340d0:	call   DWORD PTR [eax]
  4340d2:	add    bh,bh
  4340d4:	out    0x7d,eax
  4340d6:	ss dec esp
  4340d9:	xor    al,BYTE PTR [eax]
  4340db:	mov    DWORD PTR [ecx],edi
  4340dd:	cmp    al,0x94
  4340df:	add    BYTE PTR [ecx+0x4bff8317],cl
  4340e5:	pop    ds
  4340e6:	or     al,BYTE PTR [ebx-0xff9b01]
  4340ec:	jecxz  0x434122
  4340ee:	imul   eax,DWORD PTR [ebx-0x7cff097d],0x83717b36
  4340f8:	int3   
  4340f9:	out    dx,eax
  4340fa:	add    bh,bh
  4340fc:	popa   
  4340fd:	test   BYTE PTR [ebx],dl
  4340ff:	(bad)  
  434100:	call   FWORD PTR [esi-0x34c6ff01]
  434106:	jbe    0x434091
  434108:	sbb    DWORD PTR [esi-0x1],0x0
  43410c:	and    ecx,DWORD PTR [eax]
  43410e:	mov    eax,0xccbe0083
  434113:	sub    DWORD PTR [ecx+0xffc6ba],0x39
  43411a:	add    bh,bh
  43411c:	ffreep st(0)
  43411e:	sub    eax,0xff70ff00
  434123:	add    BYTE PTR [ebx+0x3f],bh
  434126:	jmp    0x13cc:0xff44ffff
  43412d:	ins    DWORD PTR es:[edi],dx
  43412e:	ret    
  43412f:	inc    DWORD PTR [ebx-0x4500ffe9]
  434135:	ret    0xcc74
  434138:	add    ch,cl
  43413a:	add    BYTE PTR [eax],al
  43413c:	cs mov al,0xc2
  43413f:	inc    DWORD PTR [eax]
  434141:	ins    BYTE PTR es:[edi],dx
  434142:	add    BYTE PTR [eax],al
  434144:	into   
  434145:	push   cs
  434146:	inc    ecx
  434147:	inc    DWORD PTR [ebx-0x1eff7c92]
  43414d:	sub    al,0x4b
  43414f:	add    BYTE PTR [ebx+0x3889ffc8],al
  434155:	pop    ebx
  434156:	sbb    edi,edi
  434158:	(bad)  
  434159:	cmp    al,BYTE PTR [ebx+0x2ce0a89]
  43415f:	add    bh,bh
  434161:	sbb    al,0x0
  434163:	add    ebx,0x4a
  434166:	inc    esp
  434167:	add    bh,bh
  434169:	or     edi,edi
  43416b:	(bad)  
  43416c:	aas    
  43416d:	jmp    0x6c43c546
  434172:	int3   
  434173:	adc    edx,0x60
  434176:	jb     0x434101
  434178:	push   edi
  43417a:	inc    DWORD PTR [ebx+0x2560d4]
  434180:	or     DWORD PTR [ebx+0x329fff89],0xffffffa3
  434187:	(bad)  
  434188:	jmp    DWORD PTR [eax+0x156789ff]
  43418e:	enter  0xffff,0x19
  434192:	cmp    edi,0x2e
  434195:	add    eax,0xe4ffff15
  43419a:	add    ah,cl
  43419c:	repnz adc BYTE PTR [ecx-0x140100],bh
  4341a3:	add    BYTE PTR [ebx+edx*2-0x6f],ch
  4341a7:	add    BYTE PTR [ecx+0x74ffff50],cl
  4341ad:	stos   BYTE PTR es:[edi],al
  4341ae:	ss (bad) 
  4341b0:	dec    DWORD PTR [edi]
  4341b2:	add    BYTE PTR [ebx-0x8da647],al
  4341b8:	add    BYTE PTR [eax+0x52ffff],bh
  4341be:	jne    0x434149
  4341c0:	(bad)  
  4341c1:	fdiv   st(7),st
  4341c3:	cmp    DWORD PTR ds:0xff00d212,0x3
  4341ca:	add    BYTE PTR [eax],al
  4341cc:	push   edi
  4341cd:	xor    eax,0x34830020
  4341d2:	inc    DWORD PTR [eax]
  4341d4:	lods   al,BYTE PTR ds:[esi]
  4341d5:	push   eax
  4341d6:	add    esp,ecx
  4341d8:	add    edx,0xffffffff
  4341db:	inc    DWORD PTR [edx+0x34]
  4341de:	cmc    
  4341df:	mov    esp,ecx
  4341e1:	fld    DWORD PTR [ebx-0x55dfca00]
  4341e7:	cmp    edi,0x4b
  4341ea:	inc    DWORD PTR [ebx-0x469b4e]
  4341f0:	add    BYTE PTR [eax-0x67e3ff7d],dh
  4341f6:	mov    ds:0xffbfffff,eax
  4341fb:	add    BYTE PTR [ecx],bh
  4341fd:	cli    
  4341fe:	inc    DWORD PTR fs:[eax]
  434201:	mov    bh,bh
  434203:	call   DWORD PTR [edi+0x1c]
  434206:	jp     0x4341d4
  434208:	add    BYTE PTR [ecx+0x5356ff83],dh
  43420e:	add    al,0xff
  434210:	add    BYTE PTR [edx-0x70d10077],dl
  434216:	(bad)  
  434218:	inc    DWORD PTR [esi]
  43421a:	(bad)  
  43421b:	call   FWORD PTR [esi]
  43421d:	inc    ebp
  43421e:	repnz cmp edi,0x9
  434222:	add    bh,bh
  434224:	pop    ss
  434225:	add    DWORD PTR [eax-0x610001],ebx
  43422b:	(bad)  
  43422c:	stc    
  43422d:	mov    al,0xe3
  43422f:	inc    DWORD PTR [eax]
  434231:	std    
  434232:	int3   
  434233:	dec    edi
  434235:	retf   
  434236:	sbb    BYTE PTR [ebx-0x7cff1500],al
  43423c:	into   
  43423d:	daa    
  43423e:	mov    bh,0x0
  434240:	call   DWORD PTR [edi-0x65cd7601]
  434246:	ret    
  434247:	int3   
  434248:	dec    DWORD PTR [edi+edi*8+0x0]
  43424c:	fsub   QWORD PTR [ecx+0x100ff16]
  434252:	add    DWORD PTR [eax],0x52
  434255:	sbb    esi,DWORD PTR [ebx+0x6e00ff]
  43425b:	int3   
  43425c:	inc    esi
  43425d:	mov    al,ds:0x89ff8928
  434262:	(bad)  
  434263:	jmp    FWORD PTR [edx-0x4b]
  434266:	xchg   edx,eax
  434267:	int3   
  434268:	call   DWORD PTR [ecx]
  43426a:	add    BYTE PTR [eax],al
  43426c:	mov    ch,0xde
  43426e:	mov    ah,0xcc
  434270:	inc    DWORD PTR [eax]
  434272:	inc    DWORD PTR [ebx-0x332abd68]
  434278:	(bad)  
  434279:	fadd   QWORD PTR [ebx-0x1da7c401]
  43427f:	mov    edi,edi
  434281:	int    0x83
  434283:	mov    DWORD PTR [eax+0xff89c9],edx
  434289:	add    edi,edi
  43428b:	add    BYTE PTR [ecx+0x4],ch
  43428e:	jecxz  0x43428f
  434290:	add    BYTE PTR [edi-0x51197d00],ch
  434296:	in     eax,0xff
  434298:	push   DWORD PTR [edi-0x7cfa0077]
  43429e:	or     ecx,esp
  4342a0:	add    dl,ch
  4342a2:	add    BYTE PTR [ebx-0x5d00d4],al
  4342a8:	(bad)  
  4342a9:	cmp    al,0x0
  4342ab:	or     ebx,0x4d
  4342ae:	pop    esp
  4342af:	int3   
  4342b0:	add    BYTE PTR [eax+eax*1],al
  4342b3:	int3   
  4342b4:	dec    esi
  4342b5:	dec    ecx
  4342b6:	out    dx,eax
  4342b7:	cmp    edi,0xffffff94
  4342ba:	add    ah,cl
  4342bc:	out    0x33,al
  4342be:	in     eax,dx
  4342bf:	inc    DWORD PTR [eax]
  4342c1:	sub    al,0xff
  4342c3:	mov    DWORD PTR [ebx-0xffe019],ecx
  4342c9:	mov    al,ds:0xf8bbffff
  4342ce:	jg     0x434253
  4342d0:	mov    DWORD PTR [esi-0x1],ebp
  4342d3:	push   DWORD PTR [edi]
  4342d5:	mov    esp,0xd10083b3
  4342da:	(bad)  
  4342db:	(bad)  
  4342dc:	mov    esi,0xff04f8
  4342e1:	(bad)  
  4342e3:	add    BYTE PTR [eax+0xd996],ah
  4342e9:	mov    al,0x0
  4342eb:	add    cl,cl
  4342ed:	sahf   
  4342ee:	push   edx
  4342ef:	add    DWORD PTR [eax],0xffffff93
  4342f2:	cmp    edi,0xfffffffd
  4342f5:	dec    ebx
  4342f7:	add    BYTE PTR [ecx-0x2300ffb3],cl
  4342fd:	(bad)  
  4342fe:	pushf  
  4342ff:	cmp    edi,0x52
  434302:	inc    DWORD PTR [ebx+0xec07ae]
  434308:	adc    DWORD PTR [eax+0x797cccff],0x2a
  43430f:	add    DWORD PTR [eax],0x6d
  434312:	add    BYTE PTR [ecx+0xb06fa],cl
  434318:	(bad)  
  434319:	cmp    eax,0xf301ff83
  43431e:	cmp    al,BYTE PTR [eax]
  434320:	inc    DWORD PTR [esp+ecx*8-0x7c6a7601]
  434327:	cmp    edi,0xfffffff4
  43432a:	mov    DWORD PTR [eax],eax
  43432c:	pusha  
  43432d:	mov    bh,0x62
  43432f:	(bad)  
  434330:	call   FWORD PTR [edi-0x1]
  434333:	push   DWORD PTR [edx-0x8ed1]
  434339:	mov    bl,0xff
  43433b:	(bad)  
  43433c:	push   ebx
  43433e:	mov    ebp,0xfff200ff
  434343:	inc    DWORD PTR [edx-0x46]
  434346:	data16 (bad) 
  434348:	push   ecx
  43434a:	add    BYTE PTR [eax],al
  43434c:	xor    dl,dh
  43434e:	data16 add BYTE PTR [eax],al
  434351:	jae    0x43431f
  434353:	(bad)  
  434354:	jmp    FWORD PTR [esi-0x10000b3]
  43435a:	(bad)  
  43435b:	push   DWORD PTR [ebx+eax*1+0x57ffff97]
  434362:	int3   
  434363:	sbb    edx,0x70
  434366:	(bad)  
  434367:	(bad)  
  434368:	jmp    FWORD PTR [ebx]
  43436a:	add    BYTE PTR [eax],al
  43436c:	fcom   DWORD PTR [eax+0x32]
  43436f:	int3   
  434370:	call   edi
  434372:	cmp    edi,0xffffffbc
  434375:	pop    ds
  434376:	adc    cl,ah
  434378:	add    BYTE PTR [esi+0x65be00ff],ch
  43437e:	dec    esi
  43437f:	inc    DWORD PTR [ebx-0xe00ffc4]
  434385:	sar    BYTE PTR [edi+0x0],0xff
  434389:	push   edi
  43438a:	or     DWORD PTR [ecx-0xf6e92b],0x0
  434391:	das    
  434392:	add    BYTE PTR [eax],al
  434394:	pop    ebx
  434395:	sub    ch,BYTE PTR [ecx]
  434397:	dec    esp
  434399:	cmp    bh,0x0
  43439c:	out    0xf9,al
  43439e:	test   al,0xff
  4343a0:	int3   
  4343a1:	xor    edi,edi
  4343a3:	add    BYTE PTR [esp+edi*1+0x37ff0015],ah
  4343aa:	(bad)  
  4343ab:	push   DWORD PTR [edi-0x4f]
  4343ae:	idiv   edi
  4343b0:	sub    esi,0x0
  4343b3:	add    BYTE PTR [ecx+0x27],dl
  4343b6:	mov    ds:0xff290000,eax
  4343bb:	(bad)  
  4343bc:	jmp    0x4343e4
  4343be:	pop    ebp
  4343bf:	add    bh,bh
  4343c1:	fadd   QWORD PTR [eax]
  4343c3:	add    BYTE PTR [edi],bh
  4343c5:	xor    ebp,DWORD PTR [edx]
  4343c7:	inc    DWORD PTR [eax]
  4343c9:	mov    BYTE PTR [ecx+0x79c92c00],cl
  4343cf:	(bad)  
  4343d0:	call   DWORD PTR [edx+0x335c8300]
  4343d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4343d7:	int3   
  4343d8:	add    dl,bh
  4343da:	add    DWORD PTR [eax],0x21
  4343dd:	add    BYTE PTR [edi-0x3373ff01],bl
  4343e3:	push   DWORD PTR [esi+0x36]
  4343e6:	inc    ebx
  4343e7:	add    BYTE PTR [ebx-0x43007c4a],al
  4343ed:	bnd jns 0x4343ef
  4343f0:	add    BYTE PTR [ebx],bh
  4343f2:	add    BYTE PTR [eax],al
  4343f4:	mov    edx,0xffff3b99
  4343f9:	mov    esi,0x8f63ffcc
  4343fe:	inc    eax
  4343ff:	add    bh,bh
  434401:	mov    dh,0x0
  434403:	int3   
  434404:	cdq    
  434405:	stos   BYTE PTR es:[edi],al
  434406:	sbb    BYTE PTR [ebx+0x839e89],al
  43440c:	call   0x428582
  434411:	inc    esp
  434412:	add    BYTE PTR [ebx-0x7c7aa296],al
  434418:	jmp    esi
  43441a:	add    bh,bh
  43441c:	out    0xfd,al
  43441e:	(bad)  
  43441f:	inc    DWORD PTR [eax]
  434421:	push   es
  434422:	add    BYTE PTR [ecx-0x8bc98f],cl
  434428:	jmp    DWORD PTR [esi+0x3be1ffff]
  43442e:	xor    edi,edi
  434430:	add    cl,ch
  434432:	inc    DWORD PTR [eax]
  434434:	mov    BYTE PTR [ecx-0x1c],dh
  434437:	inc    DWORD PTR [eax]
  434439:	repnz cmp edi,0xffffffd9
  43443d:	add    BYTE PTR [edx],bl
  43443f:	int3   
  434440:	call   esi
  434442:	cmp    edi,0xa
  434445:	stos   DWORD PTR es:[edi],eax
  434446:	int3   
  434447:	(bad)  
  434448:	(bad)  
  434449:	fcmove st,st(4)
  43444b:	call   FWORD PTR [edx-0x7c8473]
  434451:	repz inc DWORD PTR [eax]
  434454:	sbb    ch,dl
  434456:	mov    bh,0xff
  434458:	(bad)  
  434459:	jns    0x4343e4
  43445b:	mov    DWORD PTR [ecx+0x6d],ebp
  43445e:	push   0x0
  434460:	add    BYTE PTR [esi],al
  434462:	int3   
  434463:	call   FWORD PTR [esi]
  434465:	xchg   edx,eax
  434466:	mov    al,BYTE PTR [ebx-0x7c7cb101]
  43446c:	push   ecx
  43446d:	(bad)  
  43446e:	retf   
  43446f:	(bad)  
  434470:	jmp    FWORD PTR [edi+edi*8]
  434473:	call   FWORD PTR [edx-0xa627]
  434479:	and    eax,0xa60500cc
  43447e:	and    bh,bh
  434480:	adc    edx,0xffffffff
  434483:	add    edx,0xffffffde
  434486:	push   eax
  434487:	add    bh,bh
  434489:	ins    DWORD PTR es:[edi],dx
  43448a:	add    bh,bh
  43448c:	shr    BYTE PTR [esi+0x2a00ffd0],cl
  434492:	int3   
  434493:	add    dh,ah
  434495:	test   al,0xf8
  434497:	dec    esp
  434499:	cmp    al,0x0
  43449b:	add    BYTE PTR [edi+0x68],dh
  43449e:	lock add BYTE PTR [eax],al
  4344a1:	test   DWORD PTR [ecx+0x4b393683],0xcccc0000
  4344ab:	add    BYTE PTR [ebx+edx*1+0x4bfffffc],bl
  4344b2:	inc    DWORD PTR [eax]
  4344b4:	sub    BYTE PTR [esi],ah
  4344b6:	rol    DWORD PTR [eax],0xff
  4344b9:	jl     0x4344bb
  4344bb:	add    DWORD PTR [eax+0xff81c0],0xfffffffd
  4344c2:	(bad)  
  4344c3:	jmp    FWORD PTR [eax-0x58]
  4344c6:	mov    ds:0xf8ffcc,al
  4344cb:	inc    DWORD PTR [esi]
  4344cd:	jge    0x43448d
  4344cf:	int3   
  4344d0:	call   FWORD PTR [ebx+0x56cd0000]
  4344d6:	mov    eax,0xdaffff
  4344db:	int3   
  4344dc:	mov    edi,0xcc2f45
  4344e1:	(bad)  
  4344e2:	(bad)  
  4344e3:	dec    DWORD PTR [esi+ecx*2-0x7cffff4d]
  4344ea:	inc    DWORD PTR [eax]
  4344ec:	jns    0x4344e2
  4344ee:	cmp    DWORD PTR [eax],eax
  4344f0:	inc    ebx
  4344f2:	mov    edi,edi
  4344f4:	or     eax,0xfffff2fc
  4344f9:	sub    al,0xff
  4344fb:	(bad)  
  4344fc:	out    dx,al
  4344fd:	and    ah,BYTE PTR [edx-0x180000]
  434503:	add    BYTE PTR [esp],dl
  434506:	mov    BYTE PTR [eax],0xff
  434509:	fcos   
  43450b:	add    ch,dl
  43450d:	sub    DWORD PTR [eax-0x7c48ff01],ebp
  434513:	add    dl,bl
  434515:	jmp    0x434593
  434517:	inc    DWORD PTR [eax]
  434519:	loop   0x43451a
  43451b:	call   FWORD PTR [ecx-0x82fa]
  434521:	sar    bh,0xff
  434524:	mov    DWORD PTR [ebx-0x15],0xff9400ff
  43452b:	add    cl,al
  43452d:	cmp    al,0x12
  43452f:	(bad)  
  434530:	call   FWORD PTR [edi]
  434532:	int3   
  434533:	or     DWORD PTR [edi],0xffffffc7
  434536:	inc    DWORD PTR [eax]
  434538:	push   DWORD PTR [ecx]
  43453a:	inc    DWORD PTR [ebx+0x2ef008]
  434540:	call   DWORD PTR [edi-0x1]
  434543:	add    ch,bh
  434545:	pop    ebp
  434546:	cld    
  434547:	add    BYTE PTR [eax],al
  434549:	dec    eax
  43454a:	mov    edi,edi
  43454c:	or     cl,bh
  43454e:	push   ss
  43454f:	inc    DWORD PTR [eax]
  434551:	pop    edx
  434552:	int3   
  434553:	add    al,ch
  434555:	inc    esi
  434556:	repz or DWORD PTR [ecx-0x747c0046],0x14
  43455e:	int    0x0
  434560:	add    BYTE PTR [edx],ah
  434562:	add    DWORD PTR [eax],0xffffffd3
  434565:	loope  0x434528
  434567:	add    bh,bh
  434569:	sar    bh,cl
  43456b:	and    DWORD PTR [ebp-0x7cff16d0],0x5f
  434572:	inc    DWORD PTR [eax]
  434574:	mov    eax,ds:0xffcca03c
  434579:	xchg   edi,eax
  43457a:	int3   
  43457b:	jmp    edx
  43457d:	mov    ah,BYTE PTR [eax+eax*1]
  434580:	call   FWORD PTR [edi+edi*8-0x1]
  434584:	pop    ss
  434585:	cwde   
  434586:	mov    eax,0xd4ffff
  43458b:	(bad)  
  43458c:	mov    eax,0xffff56c1
  434591:	dec    eax
  434592:	inc    DWORD PTR [eax]
  434594:	and    ebp,DWORD PTR [edi]
  434596:	jecxz  0x434597
  434598:	dec    eax
  43459a:	inc    DWORD PTR [ebx-0x5a76e8]
  4345a0:	dec    DWORD PTR [eax-0x359c007d]
  4345a6:	jae    0x4345a7
  4345a8:	jmp    FWORD PTR [eax]
  4345aa:	int3   
  4345ab:	mov    DWORD PTR [ecx-0x3f],ebx
  4345ae:	push   ebx
  4345af:	(bad)  
  4345b0:	(bad)  
  4345b1:	std    
  4345b2:	add    BYTE PTR [eax],al
  4345b4:	gs jmp 0x43454f
  4345b7:	inc    DWORD PTR [eax]
  4345b9:	add    eax,DWORD PTR [eax]
  4345bb:	mov    DWORD PTR [ecx],eax
  4345bd:	cwde   
  4345be:	push   edx
  4345bf:	inc    DWORD PTR [eax]
  4345c1:	loope  0x43458f
  4345c3:	and    DWORD PTR [ecx+ebp*8+0x5283ffa6],0xffffffff
  4345cb:	call   DWORD PTR [eax+eiz*2-0x3f]
  4345cf:	inc    DWORD PTR [eax]
  4345d1:	xchg   edx,eax
  4345d2:	mov    DWORD PTR [eax],eax
  4345d4:	rcr    BYTE PTR [ecx+0x3500007e],0x83
  4345db:	dec    DWORD PTR [edi+0x47]
  4345de:	mov    edi,?
  4345e0:	int3   
  4345e1:	retf   0xccff
  4345e4:	jl     0x43462b
  4345e6:	pop    edi
  4345e7:	inc    DWORD PTR [eax]
  4345e9:	test   BYTE PTR [eax],al
  4345eb:	add    BYTE PTR [ebx],ch
  4345ed:	ss jecxz 0x4345ef
  4345f0:	or     DWORD PTR [edx+0x3be08983],0xffffff8a
  4345f7:	add    bh,bh
  4345f9:	fild   WORD PTR [ebx+0x1bfb57ff]
  4345ff:	add    BYTE PTR [ebx-0x6700ff7c],al
  434605:	sbb    dl,BYTE PTR [edi]
  434607:	inc    DWORD PTR [ebx+0x1183ff4a]
  43460d:	push   ecx
  43460e:	ror    ah,1
  434610:	jmp    FWORD PTR [edx]
  434612:	add    BYTE PTR [eax],al
  434614:	or     BYTE PTR [edi-0x6d00ff21],ah
  43461a:	add    DWORD PTR [eax],0xffffffff
  43461d:	jl     0x4345ab
  43461f:	add    bh,bh
  434621:	std    
  434622:	(bad)  
  434623:	(bad)  
  434624:	fistp  QWORD PTR [edi]
  434626:	mov    bh,0xff
  434628:	push   DWORD PTR [edi-0x1]
  43462b:	add    BYTE PTR [edi-0x71],al
  43462e:	inc    DWORD PTR [ebx-0xac01]
  434634:	xor    eax,0xff00edea
  434639:	sar    edi,cl
  43463b:	cmp    DWORD PTR [edx-0x72cd],0xffffffaa
  434642:	cmp    edi,0xffffff82
  434645:	int    0x7e
  434647:	inc    DWORD PTR [ebx+0x178300a3]
  43464d:	neg    DWORD PTR [esi-0x320001]
  434653:	add    BYTE PTR [esi+0xff3d3d],dh
  434659:	sar    bh,cl
  43465b:	add    BYTE PTR [esi+esi*8-0x43],bl
  43465f:	cmp    edi,0xffffff93
  434662:	add    bh,bh
  434664:	dec    eax
  434665:	mov    es,WORD PTR [esi+0x0]
  434668:	add    BYTE PTR [esi-0x1],bl
  43466b:	mov    DWORD PTR [ecx-0x76330627],ebp
  434671:	pop    edi
  434672:	add    BYTE PTR [eax],al
  434674:	aaa    
  434675:	mov    ebp,0xd6ffff59
  43467a:	(bad)  
  43467b:	dec    eax
  43467d:	popf   
  43467e:	push   ds
  43467f:	add    bh,bh
  434681:	pushf  
  434682:	cmp    edi,0xffffff8b
  434685:	xchg   esp,eax
  434686:	in     eax,dx
  434687:	add    BYTE PTR [eax],al
  434689:	mov    al,0x0
  43468b:	xor    edx,0xffffffa4
  43468e:	cdq    
  43468f:	cmp    edi,0x8
  434692:	(bad)  
  434693:	jmp    DWORD PTR [esi+0xcc0761]
  434699:	cmc    
  43469a:	add    BYTE PTR [eax],al
  43469c:	add    edi,DWORD PTR [esi+0x4]
  43469f:	add    BYTE PTR [eax],al
  4346a1:	(bad)  
  4346a3:	jmp    eax
  4346a5:	push   ss
  4346a6:	sbb    DWORD PTR [ebx-0x7c007d01],eax
  4346ac:	ds int 0x8d
  4346af:	cmp    edi,0x7b
  4346b2:	add    DWORD PTR [eax],0xffffff8d
  4346b5:	jnp    0x4346e8
  4346b7:	(bad)  
  4346b8:	push   DWORD PTR [edx-0x1]
  4346bb:	mov    DWORD PTR [eax+0xcc3c64],edi
  4346c1:	sahf   
  4346c2:	int3   
  4346c3:	(bad)  
  4346c4:	fmul   st,st(7)
  4346c6:	hlt    
  4346c7:	dec    esp
  4346c9:	in     al,dx
  4346ca:	add    bh,bh
  4346cc:	xor    BYTE PTR ds:0x25ff8965,al
  4346d2:	(bad)  
  4346d3:	jmp    FWORD PTR [esi-0x3d]
  4346d6:	ss cmp edi,0xffffffe3
  4346da:	inc    DWORD PTR [eax]
  4346dc:	mov    esi,DWORD PTR [eax-0x58ff0048]
  4346e2:	(bad)  
  4346e3:	push   eax
  4346e5:	mov    esi,DWORD PTR ds:0x8395ff00
  4346eb:	or     DWORD PTR [esi],0xffffffed
  4346ee:	popa   
  4346ef:	inc    DWORD PTR [eax]
  4346f1:	xchg   edi,eax
  4346f2:	(bad)  
  4346f3:	jmp    DWORD PTR [edi]
  4346f5:	(bad)  
  4346f6:	and    eax,0xff1cff83
  4346fb:	push   DWORD PTR [ebp+0xcc2cbb]
  434701:	sahf   
  434702:	inc    DWORD PTR [ebx-0xb8efb]
  434708:	dec    DWORD PTR [edi-0x1]
  43470b:	add    ah,ah
  43470d:	leave  
  43470e:	add    BYTE PTR [ebx-0x7c004401],0xbe
  434715:	gs leave 
  434717:	add    BYTE PTR [ebx+0x260089ad],al
  43471d:	push   ecx
  43471e:	mov    esp,cs
  434720:	add    BYTE PTR [edx-0x51d40100],dl
  434726:	sahf   
  434727:	inc    DWORD PTR [eax]
  434729:	in     al,dx
  43472a:	cmp    edi,0x49
  43472d:	mov    es,WORD PTR [edi-0x1]
  434730:	push   eax
  434732:	int3   
  434733:	cmp    DWORD PTR [edx+eiz*1-0x9ffffb8],0x0
  43473b:	add    ch,ah
  43473d:	xchg   DWORD PTR [ebp-0x1],ebp
  434740:	int3   
  434741:	test   DWORD PTR [ecx-0x71e0d301],0xff18ffff
  43474b:	int3   
  43474c:	cmp    BYTE PTR [eax-0x43ff00d1],bh
  434752:	cmp    edi,0x3f
  434755:	mov    ebx,0x2300ff08
  43475a:	add    DWORD PTR [ebx-0x762672b3],0xffffff89
  434761:	dec    ecx
  434762:	int3   
  434763:	cmp    DWORD PTR [eax],0x53
  434766:	inc    eax
  434767:	mov    edi,edi
  434769:	(bad)  
  43476c:	jle    0x4347d4
  43476e:	sub    al,0x0
  434770:	inc    DWORD PTR [ebx+0x78da0000]
  434776:	stc    
  434777:	(bad)  
  434778:	call   DWORD PTR [edi+edi*8]
  43477b:	or     DWORD PTR [edx-0x54aa],0x59
  434782:	add    DWORD PTR [ebx-0x7c2b8f27],0xffffffff
  434789:	pop    eax
  43478a:	mov    DWORD PTR [ecx-0x7ce66cdf],ecx
  434790:	add    DWORD PTR [ebx-0x34],0x0
  434794:	sub    edx,ebp
  434796:	rol    BYTE PTR [eax],1
  434798:	add    BYTE PTR [edx-0x1],dl
  43479b:	push   DWORD PTR [ecx]
  43479d:	sbb    BYTE PTR [edi-0x7d],al
  4347a0:	mov    DWORD PTR [edx],ebp
  4347a2:	(bad)  
  4347a3:	push   DWORD PTR ds:0xffffe812
  4347a9:	ins    BYTE PTR es:[edi],dx
  4347aa:	add    bh,bh
  4347ac:	fistp  QWORD PTR [eax-0x57]
  4347af:	add    DWORD PTR [eax],0x4a
  4347b2:	mov    esp,ecx
  4347b4:	sub    eax,0xffff2b86
  4347b9:	js     0x4347ba
  4347bb:	jmp    FWORD PTR [esi]
  4347bd:	xlat   BYTE PTR ds:[ebx]
  4347be:	ja     0x43478c
  4347c0:	jmp    DWORD PTR [edi]
  4347c2:	cmp    edi,0x6c
  4347c5:	inc    ebp
  4347c6:	pop    ebx
  4347c7:	mov    DWORD PTR [eax],eax
  4347c9:	cmp    al,BYTE PTR [ebx+0x4a2e95ff]
  4347cf:	int3   
  4347d0:	push   DWORD PTR [esp+ecx*8+0x76b0e2ff]
  4347d7:	mov    DWORD PTR [eax],eax
  4347d9:	clc    
  4347da:	mov    DWORD PTR [eax],eax
  4347dc:	test   BYTE PTR [edx-0x23],cl
  4347df:	(bad)  
  4347e0:	call   DWORD PTR [ecx-0x1]
  4347e3:	add    ah,al
  4347e5:	pop    edi
  4347e6:	ds (bad) 
  4347e8:	call   FWORD PTR [ebx-0x4f85337d]
  4347ee:	out    0xcc,al
  4347f0:	(bad)  
  4347f1:	fild   DWORD PTR [eax]
  4347f3:	add    BYTE PTR [edi+0x26],al
  4347f6:	add    BYTE PTR [eax],al
  4347f8:	add    bl,dh
  4347fa:	dec    esp
  4347fc:	ins    DWORD PTR es:[edi],dx
  4347fd:	or     BYTE PTR [eax],0x89
  434800:	int3   
  434801:	xchg   ecx,eax
  434802:	add    bh,bh
  434804:	xchg   esi,eax
  434805:	mov    dh,BYTE PTR [esi]
  434807:	inc    DWORD PTR [eax]
  434809:	mov    bl,0x0
  43480b:	push   DWORD PTR ds:0x834a59
  434811:	jmp    0x434812
  434813:	add    BYTE PTR [esi],bh
  434815:	clc    
  434816:	aam    0x0
  434818:	or     DWORD PTR [edi+edi*8+0x0],0x71
  43481d:	(bad)  [ebx]
  43481f:	(bad)  
  434820:	(bad)  
  434821:	cmp    DWORD PTR [eax],eax
  434823:	call   FWORD PTR [edi-0x7c6ed5]
  434829:	push   ebx
  43482a:	add    bh,bh
  43482c:	in     al,dx
  43482d:	aaa    
  43482e:	and    eax,DWORD PTR [eax]
  434830:	jmp    FWORD PTR [ebx-0x47e80001]
  434836:	or     al,0x0
  434838:	add    dh,al
  43483a:	add    BYTE PTR [ecx-0x926d59],cl
  434840:	add    BYTE PTR [eax-0x34],cl
  434843:	add    ah,bh
  434845:	sar    cl,0x0
  434848:	dec    DWORD PTR [eax+eax*1-0x1]
  43484c:	adc    al,0xf4
  43484e:	mov    DWORD PTR [ecx+0xff30ff],ecx
  434854:	inc    ebp
  434855:	add    eax,0x46cc0096
  43485a:	add    BYTE PTR [ebx+0x514122],al
  434860:	int3   
  434861:	cmp    bh,0xff
  434864:	jb     0x43484f
  434866:	repz add BYTE PTR [eax],al
  434869:	xor    al,0x0
  43486b:	inc    DWORD PTR [ecx]
  43486d:	cs xchg bh,bh
  434870:	add    esp,0x0
  434873:	int3   
  434874:	pushw  0xff8e
  434877:	int3   
  434878:	push   ebp
  43487a:	or     DWORD PTR [ecx-0xcf602],0x0
  434881:	jns    0x434883
  434883:	add    BYTE PTR ds:0xff8301e4,al
  434889:	jno    0x43488b
  43488b:	(bad)  
  43488c:	cmp    eax,0x83ffd1b8
  434891:	sub    bh,bh
  434893:	int3   
  434894:	jl     0x4348b4
  434896:	xor    edi,edi
  434898:	add    BYTE PTR ds:0xa831ffff,al
  43489e:	jl     0x43489f
  4348a0:	dec    esp
  4348a2:	add    BYTE PTR [eax],al
  4348a4:	mov    ebp,0x85ffffd4
  4348aa:	cmp    edi,0xffffffd7
  4348ad:	lods   eax,DWORD PTR ds:[esi]
  4348ae:	cmp    bh,bh
  4348b0:	and    DWORD PTR [edi+0x3b66ffff],0x6c
  4348b7:	dec    esp
  4348b9:	addr16 add bh,bh
  4348bc:	mov    BYTE PTR [ebp+0x42cc0061],ah
  4348c2:	add    BYTE PTR [eax],al
  4348c4:	xchg   esp,eax
  4348c5:	mov    al,BYTE PTR gs:[eax]
  4348c8:	call   DWORD PTR [edx+0x1bf5ff89]
  4348ce:	add    bh,bh
  4348d0:	mov    edx,edi
  4348d2:	int3   
  4348d3:	int3   
  4348d4:	outs   dx,BYTE PTR ds:[esi]
  4348d5:	xor    al,0x86
  4348d7:	inc    DWORD PTR [eax]
  4348d9:	mov    bl,0x83
  4348db:	int3   
  4348dc:	cs push ecx
  4348de:	mov    al,BYTE PTR [ebx-0x7c007134]
  4348e4:	mov    ?,WORD PTR [edi]
  4348e6:	jne    0x434871
  4348e8:	add    BYTE PTR [ebx-0x1],cl
  4348eb:	add    BYTE PTR [esp+edx*8-0x1f3300ae],dh
  4348f2:	inc    DWORD PTR [ebx-0x973209]
  4348f8:	jmp    DWORD PTR [ecx-0x37b1ff01]
  4348fe:	inc    ebp
  4348ff:	add    BYTE PTR [eax],al
  434901:	ret    
  434902:	(bad)  
  434903:	dec    esi
  434905:	lds    eax,FWORD PTR [bx+si]
  434908:	add    al,ah
  43490a:	inc    DWORD PTR [eax]
  43490c:	(bad)  
  43490d:	mov    ecx,0x4effff19
  434912:	add    BYTE PTR [ebx-0x198fd],al
  434918:	inc    DWORD PTR [ebp+0x2a3fff83]
  43491e:	dec    edi
  43491f:	add    bh,bh
  434921:	inc    DWORD PTR ss:[eax]
  434924:	int    0x6b
  434926:	lods   eax,DWORD PTR ds:[esi]
  434927:	add    DWORD PTR [eax],0x5b
  43492a:	int3   
  43492b:	dec    DWORD PTR [ebx+0xff1bfc]
  434931:	mov    WORD PTR [eax],es
  434933:	int3   
  434934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434935:	into   
  434936:	inc    ebp
  434937:	mov    DWORD PTR [eax],eax
  434939:	call   0x8330:0x98d0ffff
  434940:	mov    DWORD PTR [esp+ecx*8-0x1],edx
  434944:	fld    TBYTE PTR [ecx+ecx*8]
  434947:	add    DWORD PTR [eax],0x41
  43494a:	inc    DWORD PTR [eax]
  43494c:	stos   DWORD PTR es:[edi],eax
  43494d:	xchg   BYTE PTR [ebp-0xe17601],ch
  434953:	add    BYTE PTR [ebx+edx*2],ch
  434956:	inc    esi
  434957:	(bad)  
  434958:	inc    DWORD PTR [ebp-0x7d]
  43495b:	add    BYTE PTR [ecx+0x2584],ah
  434961:	xchg   ecx,eax
  434962:	inc    DWORD PTR [eax]
  434964:	cmp    BYTE PTR [edi+0xa],dh
  434967:	mov    edi,edi
  434969:	pop    esp
  43496a:	(bad)  
  43496b:	(bad)  
  43496c:	(bad)  [ecx]
  43496e:	jl     0x43496f
  434970:	int3   
  434971:	idiv   bh
  434973:	add    ah,ah
  434975:	adc    DWORD PTR [eax],eax
  434977:	(bad)  
  434978:	call   esp
  43497a:	add    BYTE PTR [eax],al
  43497c:	jo     0x43496d
  43497e:	sahf   
  43497f:	dec    DWORD PTR [ecx+0x7bccccd0]
  434985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434986:	mov    dh,0xff
  434988:	int3   
  434989:	(bad)  
  43498a:	inc    DWORD PTR [eax]
  43498c:	push   edx
  43498d:	push   0xdf00834c
  434992:	add    DWORD PTR [eax],0xffffffe7
  434995:	loope  0x434966
  434997:	dec    DWORD PTR [ecx-0x550000ff]
  43499d:	pop    ss
  43499e:	and    bh,bh
  4349a0:	jmp    DWORD PTR [edx+0x0]
  4349a3:	push   DWORD PTR [eax+edi*4]
  4349a6:	xchg   BYTE PTR [eax],al
  4349a8:	add    BYTE PTR [ecx-0x19c07c77],bh
  4349ae:	outs   dx,DWORD PTR ds:[esi]
  4349af:	add    DWORD PTR [eax],0x3f
  4349b2:	dec    esp
  4349b4:	jns    0x434960
  4349b6:	fdivr  st,st(7)
  4349b8:	and    DWORD PTR [ecx-0x1],0xffffffff
  4349bc:	cdq    
  4349bd:	inc    ebp
  4349be:	in     eax,0x0
  4349c0:	adc    DWORD PTR [ecx+0x541bccff],0x75
  4349c7:	add    DWORD PTR [eax],0x3
  4349ca:	add    bh,bh
  4349cc:	push   edi
  4349cd:	mov    DWORD PTR [ebp-0x1],0xffb783
  4349d4:	scas   eax,DWORD PTR es:[edi]
  4349d5:	in     eax,0x38
  4349d7:	inc    DWORD PTR [eax]
  4349d9:	in     eax,0x0
  4349db:	push   DWORD PTR [esi-0x8e4f]
  4349e1:	in     eax,dx
  4349e2:	add    bh,bh
  4349e4:	mov    ah,0xa2
  4349e6:	or     eax,0xffa40083
  4349eb:	and    DWORD PTR [edx],0x1
  4349ee:	mov    edi,0xffd9ff00
  4349f3:	jmp    FWORD PTR [ebp-0x3f]
  4349f6:	loope  0x4349f8
  4349f8:	jmp    FWORD PTR [edi-0x40d00034]
  4349fe:	inc    DWORD PTR ss:[eax]
  434a01:	arpl   WORD PTR [ebx+0x6c2702ff],ax
  434a07:	inc    DWORD PTR [eax]
  434a09:	jle    0x434a0b
  434a0b:	add    BYTE PTR [ecx-0x33003436],dh
  434a11:	adc    eax,0x9d05ffff
  434a16:	xchg   DWORD PTR [ebx-0x1b00],eax
  434a1c:	sbb    eax,0xff1556
  434a21:	lea    eax,[eax]
  434a23:	add    BYTE PTR [esp+ecx*1-0x58007ca8],ah
  434a2a:	add    DWORD PTR [eax],0xfffffff6
  434a2d:	cmp    al,0x65
  434a2f:	inc    DWORD PTR [eax]
  434a31:	jae    0x434a32
  434a33:	call   DWORD PTR [eax-0xe201]
  434a39:	mov    al,ds:0x8607ff00
  434a3e:	sub    DWORD PTR [ebx-0xe077],eax
  434a44:	xor    eax,DWORD PTR [eax+0x58]
  434a47:	(bad)  
  434a48:	(bad)  
  434a49:	mov    ebp,0xbc558900
  434a4e:	sub    edi,edi
  434a50:	inc    DWORD PTR [ecx]
  434a52:	add    bh,bh
  434a54:	push   esi
  434a55:	mov    ecx,0xb2ffffe3
  434a5a:	add    bh,bh
  434a5c:	ret    
  434a5d:	leave  
  434a5e:	jae    0x434a60
  434a60:	push   DWORD PTR [ebx]
  434a62:	(bad)  
  434a63:	jmp    FWORD PTR [eax]
  434a65:	xor    al,0x7e
  434a67:	inc    DWORD PTR [eax]
  434a69:	ror    BYTE PTR [ecx+0x74ecb000],1
  434a6f:	or     esp,0xffffff8f
  434a72:	(bad)  
  434a73:	dec    ebp
  434a75:	iret   
  434a76:	test   DWORD PTR [eax],0x8900f289
  434a7c:	enter  0x1831,0xff
  434a80:	(bad)  
  434a81:	cmp    eax,0xf37a83ff
  434a86:	sub    bh,bh
  434a88:	add    dl,ch
  434a8a:	add    bh,bh
  434a8c:	dec    eax
  434a8d:	in     al,0x12
  434a8f:	inc    DWORD PTR [ebx+0x4689ffe0]
  434a95:	loop   0x434a17
  434a97:	inc    DWORD PTR [eax]
  434a99:	add    BYTE PTR gs:[ebx-0x95ecf0],al
  434aa0:	push   DWORD PTR [ecx-0x764f0000]
  434aa6:	mov    eax,DWORD PTR [eax]
  434aa8:	and    DWORD PTR [edx],0xffffffff
  434aab:	add    BYTE PTR [esi],dh
  434aad:	lods   eax,DWORD PTR ds:[esi]
  434aae:	popa   
  434aaf:	add    DWORD PTR [eax],0xfffffff2
  434ab2:	add    BYTE PTR [eax],al
  434ab4:	loop   0x434b30
  434ab6:	sti    
  434ab7:	inc    DWORD PTR [eax]
  434ab9:	mov    edi,?
  434abb:	jmp    DWORD PTR [ebp+0xffffcc]
  434ac1:	scas   eax,DWORD PTR es:[edi]
  434ac2:	inc    DWORD PTR [eax]
  434ac4:	out    dx,eax
  434ac5:	pop    DWORD PTR ds:0x50083
  434acb:	add    BYTE PTR [edx-0x767c0c3e],al
  434ad1:	add    eax,0x2038ff00
  434ad6:	mov    es,WORD PTR [ebx-0xe601]
  434adc:	cld    
  434add:	or     esi,DWORD PTR [ebp-0x1]
  434ae0:	jmp    DWORD PTR [eax-0x1]
  434ae3:	call   DWORD PTR [edi]
  434ae5:	aam    0xd5
  434ae7:	(bad)  
  434ae8:	call   DWORD PTR [esi+0x24220089]
  434aee:	aas    
  434aef:	dec    esp
  434af1:	(bad)  
  434af2:	inc    DWORD PTR [eax]
  434af4:	push   cs
  434af5:	jne    0x434b17
  434af7:	(bad)  
  434af8:	push   DWORD PTR [eax]
  434afa:	(bad)  
  434afb:	call   FWORD PTR [edi-0x8f9c]
  434b01:	mov    esi,0x790783ff
  434b06:	or     eax,0xff98ffcc
  434b0b:	xor    DWORD PTR [edx],0x33
  434b0e:	leave  
  434b0f:	mov    esp,ecx
  434b11:	xor    al,0xff
  434b13:	mov    DWORD PTR [ebx-0x53],edx
  434b16:	ss add bh,bh
  434b19:	xor    DWORD PTR [eax],eax
  434b1b:	mov    ecx,edi
  434b1d:	in     al,dx
  434b1e:	stos   DWORD PTR es:[edi],eax
  434b1f:	(bad)  
  434b20:	jmp    FWORD PTR [ecx-0x585b7601]
  434b26:	inc    DWORD PTR gs:[eax]
  434b29:	rol    BYTE PTR [ebx-0x696f0d01],1
  434b2f:	mov    edi,edi
  434b31:	pusha  
  434b32:	inc    DWORD PTR [eax]
  434b34:	daa    
  434b35:	sar    DWORD PTR [edi+0x0],1
  434b38:	jmp    esp
  434b3a:	mov    DWORD PTR [eax],eax
  434b3c:	dec    esp
  434b3d:	mov    ecx,0xfe83ff5b
  434b42:	or     esp,0xffffff95
  434b45:	dec    edi
  434b46:	aam    0xff
  434b48:	(bad)  
  434b49:	cmp    edi,edi
  434b4b:	dec    DWORD PTR [ecx]
  434b4d:	loopne 0x434af8
  434b4f:	(bad)  
  434b50:	push   esi
  434b52:	cmp    edi,0xffffffe1
  434b55:	jno    0x434b52
  434b57:	add    DWORD PTR [ebx+0x47830019],0x72
  434b5e:	push   ds
  434b5f:	add    bh,bh
  434b61:	dec    ebp
  434b62:	(bad)  
  434b63:	(bad)  
  434b64:	fadd   DWORD PTR ds:0x2f000066
  434b6a:	add    bh,bh
  434b6c:	call   0xff8e:0xff89686f
  434b73:	cmp    DWORD PTR ds:0x8953a8,0xfffffff7
  434b7a:	(bad)  
  434b7b:	dec    DWORD PTR [ecx-0x118a]
  434b81:	out    dx,al
  434b82:	add    BYTE PTR [ebx-0x2746d0],al
  434b88:	jmp    FWORD PTR [ecx-0x1]
  434b8b:	dec    DWORD PTR [ebx+0x51]
  434b8e:	lahf   
  434b8f:	mov    DWORD PTR [eax],eax
  434b91:	mov    al,ds:0x4c26ffff
  434b96:	in     eax,dx
  434b97:	add    BYTE PTR [ebx+0x61ff0039],al
  434b9d:	test   DWORD PTR [eax-0x1],ebp
  434ba0:	add    BYTE PTR [eax+0x0],dl
  434ba3:	add    BYTE PTR [edi-0x767cfe5c],ah
  434ba9:	or     al,BYTE PTR [eax]
  434bab:	add    cl,ch
  434bad:	mov    ds,WORD PTR [edi-0x77]
  434bb0:	add    BYTE PTR [ecx-0x34],bl
  434bb3:	jmp    FWORD PTR [ebx]
  434bb5:	xchg   edx,eax
  434bb6:	and    DWORD PTR [ebx+0x1600],eax
  434bbc:	xchg   edi,eax
  434bbd:	ins    BYTE PTR es:[edi],dx
  434bbe:	cld    
  434bbf:	cmp    edi,0x79
  434bc2:	dec    esp
  434bc4:	jmp    0x434b9e
  434bc6:	sbb    eax,0x99cccc
  434bcb:	xor    DWORD PTR [esi],0x38
  434bce:	jle    0x434bcf
  434bd0:	add    cl,dl
  434bd2:	dec    esp
  434bd4:	(bad)  
  434bd5:	aad    0xbe
  434bd7:	mov    esp,ecx
  434bd9:	adc    al,0x83
  434bdb:	(bad)  
  434bdc:	jle    0x434bc3
  434bde:	mov    edi,0xff1dff89
  434be3:	jmp    DWORD PTR [ecx-0xffb12a]
  434be9:	aad    0xff
  434beb:	(bad)  
  434bec:	out    dx,al
  434bed:	mov    ds:0xbf83ffa7,eax
  434bf2:	(bad)  
  434bf3:	call   DWORD PTR [ecx-0xffbac6]
  434bf9:	pop    es
  434bfa:	inc    DWORD PTR [eax]
  434bfc:	jl     0x434c41
  434bfe:	ret    0xffcc
  434c01:	imul   edi,edi,0x0
  434c04:	cwde   
  434c05:	push   ebx
  434c06:	jne    0x434b8b
  434c08:	adc    DWORD PTR ds:0xcb6affcc,0x69
  434c0f:	int3   
  434c10:	int3   
  434c11:	sbb    al,0x0
  434c13:	add    BYTE PTR [eax+0x61],ah
  434c16:	mov    BYTE PTR [ebx+0xffef83],0xde
  434c1d:	addr16 inc eax
  434c1f:	dec    DWORD PTR [ecx-0x363300c0]
  434c25:	cmc    
  434c26:	(bad)  
  434c28:	push   DWORD PTR [ebx+eax*4]
  434c2b:	add    BYTE PTR [edi-0x33fffb4c],dh
  434c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434c32:	add    BYTE PTR [eax],al
  434c34:	mov    ds:0xff00c83a,al
  434c39:	ins    DWORD PTR es:[edi],dx
  434c3a:	dec    DWORD PTR [ecx-0xc0ad18]
  434c40:	call   FWORD PTR [esp+ecx*8-0x1]
  434c44:	test   BYTE PTR [edi-0x33ffffb4],dl
  434c4a:	add    BYTE PTR [ebx-0x68f41],al
  434c50:	jmp    edi
  434c52:	add    BYTE PTR [ebx-0x7669ba09],al
  434c58:	add    al,dl
  434c5a:	(bad)  
  434c5b:	(bad)  
  434c5c:	jge    0x434c76
  434c5e:	stos   DWORD PTR es:[edi],eax
  434c5f:	inc    DWORD PTR [ebx-0x59ff00a9]
  434c65:	bound  esi,QWORD PTR ds:0x89b500ff
  434c6b:	inc    DWORD PTR [ebx-0x7c7654da]
  434c71:	xor    edi,edi
  434c73:	add    dl,ah
  434c75:	sub    BYTE PTR [esp+ecx*8-0x77],dl
  434c79:	jle    0x434c04
  434c7b:	(bad)  
  434c7c:	ds xchg ebx,eax
  434c7e:	mov    esi,0xff2900ff
  434c83:	push   edx
  434c85:	in     eax,dx
  434c86:	dec    esi
  434c87:	inc    DWORD PTR [ebx-0x2976ff85]
  434c8d:	pop    eax
  434c8e:	cmp    bh,bh
  434c90:	dec    ebp
  434c92:	(bad)  
  434c93:	dec    DWORD PTR [ebp+0x1c]
  434c96:	cld    
  434c97:	(bad)  
  434c98:	inc    DWORD PTR [ebx-0x32be3400]
  434c9e:	jl     0x434ca0
  434ca0:	add    BYTE PTR [eax-0x1],dh
  434ca3:	int3   
  434ca4:	sub    ebp,ebx
  434ca6:	push   es
  434ca7:	add    BYTE PTR [eax],al
  434ca9:	mov    cl,0x0
  434cab:	mov    esi,esp
  434cad:	xchg   ecx,eax
  434cae:	fimul  DWORD PTR [ecx-0xa901]
  434cb4:	fstp   QWORD PTR [eax+eax*8-0x76020034]
  434cbb:	(bad)  
  434cbc:	cmp    al,0x38
  434cbe:	mov    edi,?
  434cc0:	call   FWORD PTR [ecx-0x65e87c01]
  434cc6:	jbe    0x434cc7
  434cc8:	add    BYTE PTR [edi+0x7a4eff83],bl
  434cce:	fmul   st,st(4)
  434cd0:	add    esp,0x0
  434cd3:	(bad)  
  434cd4:	fisubr WORD PTR ds:0xdeccff4e
  434cda:	add    DWORD PTR [eax],0x37
  434cdd:	dec    ecx
  434cde:	or     eax,DWORD PTR [eax]
  434ce0:	jmp    FWORD PTR [ebp+0x2558989]
  434ce6:	outs   dx,BYTE PTR ds:[esi]
  434ce7:	add    BYTE PTR [eax],al
  434ce9:	icebp  
  434cea:	(bad)  
  434ceb:	call   DWORD PTR [edi+0x895ab4]
  434cf1:	mov    eax,0x76c2ff00
  434cf6:	dec    esp
  434cf7:	or     esp,0xffffffaf
  434cfa:	(bad)  
  434cfb:	call   DWORD PTR [eax-0x4a]
  434cfe:	dec    ecx
  434cff:	inc    DWORD PTR [eax]
  434d01:	inc    edi
  434d02:	(bad)  
  434d03:	jmp    edx
  434d05:	in     al,0xa6
  434d07:	add    bh,bh
  434d09:	xchg   edi,edi
  434d0b:	add    BYTE PTR [esi+edx*2-0x7d7c003a],bl
  434d12:	add    DWORD PTR [eax],0xffffffff
  434d15:	and    cl,al
  434d17:	inc    DWORD PTR [ebx+0x4d838987]
  434d1d:	call   DWORD PTR [ebx+0x0]
  434d20:	add    BYTE PTR [edi+0x0],dh
  434d23:	push   DWORD PTR [edi+0x3c]
  434d26:	test   bh,bh
  434d28:	push   esp
  434d2a:	inc    DWORD PTR [eax]
  434d2c:	jle    0x434d67
  434d2e:	xchg   esp,eax
  434d2f:	(bad)  
  434d30:	call   FWORD PTR [esi-0x77]
  434d33:	sbb    DWORD PTR [edi-0x33],0x4b
  434d37:	add    bh,bh
  434d39:	pop    edx
  434d3a:	add    bh,bh
  434d3c:	cdq    
  434d3d:	adc    al,0xfd
  434d3f:	add    bh,bh
  434d41:	sub    al,BYTE PTR [eax]
  434d43:	mov    esi,ebp
  434d45:	test   edi,ebx
  434d47:	(bad)  
  434d48:	jmp    DWORD PTR [eax-0x1]
  434d4b:	add    BYTE PTR [edi+0x40],ah
  434d4e:	pop    DWORD PTR [eax]
  434d50:	add    BYTE PTR [edi+edi*8-0x1],cl
  434d54:	sub    eax,0x83ff1e0a
  434d59:	loope  0x434cde
  434d5b:	(bad)  
  434d5c:	mov    ebp,0x3cf5
  434d61:	mov    bl,0x83
  434d63:	add    BYTE PTR [ebx],ah
  434d65:	xor    BYTE PTR ds:0x2789ff,0x0
  434d6c:	xchg   DWORD PTR [edi],eax
  434d6e:	sbb    DWORD PTR [eax],eax
  434d70:	jmp    DWORD PTR [edi]
  434d72:	dec    DWORD PTR [ecx-0x773c83]
  434d78:	adc    DWORD PTR [ebp+0x187989ff],0x2c
  434d7f:	inc    DWORD PTR [eax]
  434d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434d82:	add    ah,cl
  434d84:	or     DWORD PTR [ebp+0x118983b4],esp
  434d8a:	dec    esp
  434d8c:	pop    ebx
  434d8d:	imul   eax,DWORD PTR [edi-0x76d80100],0xcbda4983
  434d97:	inc    DWORD PTR [ebx+0x4783ffc6]
  434d9d:	out    dx,al
  434d9e:	jmp    0x434d9f
  434da0:	add    BYTE PTR [edi],bh
  434da2:	int3   
  434da3:	mov    eax,esp
  434da5:	adc    BYTE PTR ds:0xff6783ff,dh
  434dab:	call   FWORD PTR [esi]
  434dad:	clc    
  434dae:	out    dx,eax
  434daf:	add    bh,bh
  434db1:	into   
  434db2:	add    bh,bh
  434db4:	push   eax
  434db5:	push   ss
  434db6:	out    0xff,al
  434db8:	(bad)  
  434db9:	inc    DWORD PTR [eax]
  434dbb:	dec    DWORD PTR [eax-0x51]
  434dbe:	ins    BYTE PTR es:[edi],dx
  434dbf:	cmp    edi,0xffffffc5
  434dc2:	(bad)  
  434dc3:	jmp    FWORD PTR [edx-0x43]
  434dc6:	adc    al,BYTE PTR [eax]
  434dc8:	jmp    DWORD PTR [ebx]
  434dca:	add    BYTE PTR [eax],al
  434dcc:	lods   al,BYTE PTR ds:[esi]
  434dcd:	(bad)  
  434dce:	test   BYTE PTR [eax],0xff
  434dd1:	or     cl,BYTE PTR [ecx-0x60b4fe34]
  434dd7:	int3   
  434dd8:	add    BYTE PTR [edx-0x4feff77],dh
  434dde:	mov    ebx,0xb5ff00
  434de3:	int3   
  434de4:	jbe    0x434e08
  434de6:	sub    cl,ah
  434de8:	mov    edi,edx
  434dea:	int3   
  434deb:	dec    DWORD PTR [eax]
  434ded:	fistp  WORD PTR [ebx]
  434def:	add    BYTE PTR [ecx+0x79ff8385],cl
  434df5:	test   al,0xb0
  434df7:	mov    esp,ecx
  434df9:	loopne 0x434d7e
  434dfb:	call   FWORD PTR [esi-0x76bb1e]
  434e01:	das    
  434e02:	dec    DWORD PTR [ecx-0x7ccc7c70]
  434e08:	jmp    DWORD PTR [ebx+0x14040083]
  434e0e:	dec    ah
  434e10:	int3   
  434e11:	aaa    
  434e12:	add    BYTE PTR [ecx-0x7c19d093],cl
  434e18:	int3   
  434e19:	push   ds
  434e1a:	inc    DWORD PTR [eax]
  434e1c:	xchg   esp,eax
  434e1d:	outs   dx,DWORD PTR ds:[esi]
  434e1e:	push   edi
  434e1f:	(bad)  
  434e20:	call   FWORD PTR [edi+edi*8]
  434e23:	jmp    DWORD PTR [ecx+edi*4]
  434e26:	push   esi
  434e27:	int3   
  434e28:	int3   
  434e29:	jnp    0x434e2a
  434e2b:	call   esi
  434e2d:	arpl   bx,sp
  434e2f:	cmp    edi,0xffffffb9
  434e32:	add    bh,bh
  434e34:	or     dl,BYTE PTR [ecx+0x5600897c]
  434e3a:	inc    DWORD PTR [eax]
  434e3c:	inc    ecx
  434e3d:	push   0xf
  434e3f:	int3   
  434e40:	add    DWORD PTR [ebx],0xffffffff
  434e43:	or     DWORD PTR [ecx-0x6f],0x69
  434e47:	mov    DWORD PTR [eax],eax
  434e49:	das    
  434e4a:	or     DWORD PTR [ecx-0x76ea27d2],0xffffffcc
  434e51:	pushf  
  434e52:	add    BYTE PTR [ecx-0xc42910],cl
  434e58:	add    BYTE PTR [ecx-0x28b20000],ch
  434e5e:	sar    edi,1
  434e60:	dec    ebp
  434e62:	inc    DWORD PTR [eax]
  434e64:	or     al,dh
  434e66:	push   eax
  434e67:	add    bh,bh
  434e69:	je     0x434df4
  434e6b:	mov    DWORD PTR [eax],ecx
  434e6d:	test   BYTE PTR [ebx+0x32ffff],al
  434e73:	(bad)  
  434e74:	mov    ebx,0xffffcd4e
  434e79:	out    dx,eax
  434e7a:	add    DWORD PTR [eax],0xffffffb4
  434e7d:	das    
  434e7e:	sub    al,BYTE PTR [ebx-0x3300f900]
  434e84:	outs   dx,DWORD PTR ds:[esi]
  434e85:	dec    esi
  434e86:	fcos   
  434e88:	int3   
  434e89:	stc    
  434e8a:	add    bh,bh
  434e8c:	sub    eax,0x83834abb
  434e91:	dec    ebx
  434e92:	(bad)  
  434e93:	jmp    DWORD PTR [edi]
  434e95:	rcr    DWORD PTR [ebx-0x77],cl
  434e98:	(bad)  
  434e99:	jmp    0xc13c4e9d
  434e9e:	xchg   ecx,eax
  434e9f:	(bad)  
  434ea0:	call   FWORD PTR [edx+0x4fdfff83]
  434ea6:	nop
  434ea7:	mov    DWORD PTR [eax],eax
  434ea9:	pushf  
  434eaa:	cmp    edi,0xffffffaf
  434ead:	add    eax,0x4983ff90
  434eb2:	inc    DWORD PTR [eax]
  434eb4:	imul   ebx,ebp,0x54
  434eb7:	add    BYTE PTR [eax],al
  434eb9:	(bad)  
  434ebb:	add    BYTE PTR [esi-0x7c0b0d],bh
  434ec1:	push   0x9bca00cc
  434ec6:	dec    ecx
  434ec7:	(bad)  
  434ec8:	call   DWORD PTR [edi]
  434eca:	add    bh,bh
  434ecc:	dec    esi
  434ecd:	aaa    
  434ece:	jecxz  0x434ed0
  434ed0:	mov    esi,edi
  434ed2:	inc    DWORD PTR [eax]
  434ed4:	mov    ebx,?
  434ed6:	or     al,BYTE PTR [eax]
  434ed8:	adc    DWORD PTR [edi-0x1],0xffffffff
  434edc:	sub    edx,DWORD PTR [ebx+0x4b]
  434edf:	add    DWORD PTR [eax],0xe
  434ee2:	add    BYTE PTR [eax],al
  434ee4:	dec    ecx
  434ee5:	push   0x19898332
  434eea:	add    bh,bh
  434eec:	push   es
  434eed:	gs jo  0x434eef
  434ef0:	cmp    DWORD PTR [eax-0x1],0xffffffff
  434ef4:	sbb    ebp,DWORD PTR [edx-0x33330054]
  434efa:	int3   
  434efb:	int3   
  434efc:	int3   
  434efd:	int3   
  434efe:	int3   
  434eff:	int3   
  434f00:	add    DWORD PTR [ebx-0xff1769],0xffffffb3
  434f07:	sub    eax,0x80affff
  434f0c:	int3   
  434f0d:	(bad)  
  434f0e:	fsub   QWORD PTR [ebx+0x7280ff83]
  434f14:	mov    edi,edi
  434f16:	mov    cl,0x6c
  434f18:	(bad)  
  434f19:	jmp    DWORD PTR ds:0x83cc00b4
  434f1f:	adc    BYTE PTR [eax],al
  434f21:	jmp    FWORD PTR [ebp-0x5c00ff78]
  434f27:	jle    0x434f28
  434f29:	add    dh,ah
  434f2b:	ret    
  434f2c:	add    BYTE PTR [eax],al
  434f2e:	out    dx,eax
  434f2f:	sti    
  434f30:	inc    DWORD PTR [eax]
  434f32:	xor    al,0x67
  434f34:	(bad)  
  434f35:	dec    ecx
  434f37:	scas   al,BYTE PTR es:[edi]
  434f38:	(bad)  
  434f39:	(bad)  
  434f3a:	out    dx,al
  434f3b:	cwde   
  434f3c:	mov    edi,edi
  434f3e:	push   eax
  434f3f:	jecxz  0x434f0d
  434f41:	add    al,al
  434f43:	iret   
  434f44:	add    DWORD PTR [eax],0x1a
  434f47:	fld    DWORD PTR [ebx-0xc22201]
  434f4d:	(bad)  
  434f4e:	jle    0x434f08
  434f50:	add    bh,bh
  434f52:	test   BYTE PTR [edi],0xff
  434f55:	dec    esi
  434f57:	add    al,0x0
  434f59:	add    BYTE PTR [ecx+0x1d],dl
  434f5c:	add    bh,bh
  434f5e:	call   0xccc4:0xd38900bc
  434f65:	sub    eax,0x24
  434f68:	(bad)  
  434f69:	(bad)  
  434f6a:	jl     0x434f3d
  434f6c:	add    BYTE PTR [eax],al
  434f6e:	imul   esi,DWORD PTR [ecx],0xffffffff
  434f71:	add    DWORD PTR [ebx-0x12],0xffffff83
  434f75:	add    BYTE PTR [ebx+0x4affff4a],ch
  434f7b:	aad    0xcc
  434f7d:	sub    DWORD PTR [eax-0x2ffffe0],0x14
  434f84:	(bad)  
  434f85:	dec    DWORD PTR [ecx-0x77]
  434f88:	add    DWORD PTR [eax],0x54
  434f8b:	loop   0x434f59
  434f8d:	add    BYTE PTR [ecx],bl
  434f8f:	xor    edi,edi
  434f91:	add    BYTE PTR [esi+0x55],bl
  434f94:	add    bh,bh
  434f96:	and    eax,0x3183cc8e
  434f9b:	adc    ecx,esp
  434f9d:	add    BYTE PTR [esi],ch
  434f9f:	cdq    
  434fa0:	or     esp,0x3e
  434fa3:	pop    ss
  434fa4:	inc    DWORD PTR [eax]
  434fa6:	xor    eax,0x36cc894f
  434fab:	scas   eax,DWORD PTR es:[edi]
  434fac:	add    BYTE PTR [eax],al
  434fae:	mov    cl,0x97
  434fb0:	inc    DWORD PTR [eax]
  434fb2:	dec    esi
  434fb3:	in     al,dx
  434fb4:	dec    esp
  434fb6:	dec    eax
  434fb7:	mov    bh,bh
  434fb9:	sub    DWORD PTR [esi],0x2d
  434fbc:	add    BYTE PTR [ecx-0xb217],cl
  434fc2:	pusha  
  434fc3:	in     al,dx
  434fc4:	add    BYTE PTR [eax],al
  434fc6:	xchg   ebp,eax
  434fc7:	cmp    al,0xff
  434fc9:	add    BYTE PTR [edx],ah
  434fcb:	fwait
  434fcc:	(bad)  
  434fcd:	call   DWORD PTR [edx-0x7a]
  434fd0:	dec    DWORD PTR [ecx-0x767cfee3]
  434fd6:	push   edi
  434fd7:	test   BYTE PTR [ecx+0xbcbf00],0xff
  434fde:	sahf   
  434fdf:	fimul  WORD PTR [ecx+0xa6e2ff]
  434fe5:	and    DWORD PTR [ebx+0x7f89ff32],0x4b
  434fec:	inc    DWORD PTR [eax]
  434fee:	mov    eax,0x1cff0045
  434ff3:	(bad)  
  434ff4:	int3   
  434ff5:	and    DWORD PTR [ecx],0x53
  434ff8:	cmp    edi,0x56
  434ffb:	cwde   
  434ffc:	add    bh,bh
  434ffe:	mov    dl,0xea
  435000:	inc    DWORD PTR [eax]
  435002:	adc    al,0x97
  435004:	add    BYTE PTR [ebx-0xffc8e7],al
  43500a:	mov    al,0x76
  43500c:	add    BYTE PTR [eax],al
  43500e:	add    al,0x90
  435010:	inc    DWORD PTR [eax]
  435012:	shr    ch,0x0
  435015:	(bad)  
  435016:	jnp    0x435026
  435018:	add    BYTE PTR [eax],al
  43501a:	xchg   edx,eax
  43501b:	push   ebx
  43501c:	add    BYTE PTR [eax],al
  43501e:	sub    eax,0x56ffff6c
  435023:	fwait
  435024:	or     DWORD PTR [ecx+0xfff62b],0xffffff91
  43502b:	repz dec DWORD PTR [ecx-0x33ff376c]
  435032:	das    
  435033:	xlat   BYTE PTR ds:[ebx]
  435034:	dec    esp
  435036:	add    DWORD PTR [esi],ebx
  435038:	inc    DWORD PTR [eax]
  43503a:	jl     0x4350ad
  43503c:	add    BYTE PTR [ecx+0x5c27],cl
  435042:	xor    BYTE PTR [edi+edi*8-0x7600ae01],cl
  435049:	add    cl,bh
  43504b:	mov    ah,0xff
  43504d:	(bad)  
  43504e:	in     eax,dx
  43504f:	sub    bh,bh
  435051:	(bad)  
  435052:	jmp    0x435032
  435054:	mov    edi,edi
  435056:	inc    edx
  435057:	je     0x435058
  435059:	add    bl,bh
  43505b:	mov    WORD PTR [ebx-0x7c97c57d],es
  435061:	call   esi
  435063:	das    
  435064:	dec    DWORD PTR [ecx-0x4231]
  43506a:	leave  
  43506b:	and    bh,bh
  43506d:	push   esp
  43506f:	cld    
  435070:	inc    DWORD PTR [eax]
  435072:	gs das 
  435074:	add    DWORD PTR [eax],0x34
  435077:	push   eax
  435078:	inc    DWORD PTR [eax]
  43507a:	fs xchg edi,eax
  43507c:	(bad)  
  43507d:	dec    DWORD PTR [ebp-0x6d]
  435080:	dec    esp
  435082:	call   0xfdc75086
  435087:	into   
  435088:	cmp    edi,0xffffffcc
  43508b:	outs   dx,BYTE PTR ds:[esi]
  43508c:	inc    DWORD PTR [eax]
  43508e:	pop    ds
  43508f:	jp     0x435014
  435091:	jmp    DWORD PTR [edx+0x77ff00f5]
  435097:	sar    bh,1
  435099:	(bad)  
  43509a:	jmp    0x46435053
  43509f:	test   DWORD PTR [eax],0x990989
  4350a5:	call   FWORD PTR [esi]
  4350a7:	mov    ecx,0xf8fbff00
  4350ac:	add    DWORD PTR [ebx+0xcc5c9d],0x16
  4350b3:	cmp    DWORD PTR [eax],eax
  4350b5:	dec    esi
  4350b7:	push   eax
  4350b8:	add    DWORD PTR [ebx+0xfff727],0x6a
  4350bf:	addr16 (bad) 
  4350c1:	dec    DWORD PTR [ebx]
  4350c3:	ins    DWORD PTR es:[edi],dx
  4350c4:	inc    DWORD PTR [eax]
  4350c6:	out    0xeb,eax
  4350c8:	inc    DWORD PTR [eax]
  4350ca:	ror    BYTE PTR [eax+0x1c65ff83],cl
  4350d0:	add    bh,bh
  4350d2:	push   esp
  4350d3:	and    eax,0xc8e100ff
  4350d8:	(bad)  
  4350d9:	call   FWORD PTR [edi+edi*1-0x62dbff01]
  4350e0:	(bad)  
  4350e1:	dec    DWORD PTR [ecx+eiz*1]
  4350e4:	add    bh,bh
  4350e6:	enter  0xff48,0x89
  4350ea:	mov    ebp,0x91ccff01
  4350ef:	jbe    0x435074
  4350f1:	push   DWORD PTR [ecx+ecx*1]
  4350f4:	(bad)  
  4350f5:	jmp    FWORD PTR [ebx]
  4350f7:	cli    
  4350f8:	(bad)  
  4350f9:	jmp    FWORD PTR [ebp-0x3d00336c]
  4350ff:	add    BYTE PTR [eax],0x0
  435102:	leave  
  435103:	jg     0x4350d1
  435105:	add    al,dh
  435107:	jp     0x4350d5
  435109:	xor    eax,0x73
  43510c:	int3   
  43510d:	int3   
  43510e:	out    dx,al
  43510f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435110:	add    BYTE PTR [ebx-0x76006c19],al
  435116:	pop    esi
  435117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435118:	(bad)  
  435119:	inc    DWORD PTR [esp+ebp*8+0x181083ff]
  435120:	inc    DWORD PTR [eax]
  435122:	inc    esi
  435123:	sar    edi,1
  435125:	add    BYTE PTR [edi+ebx*1],al
  435128:	add    BYTE PTR [eax],al
  43512a:	fwait
  43512b:	mov    ebp,0x8d0bffff
  435130:	(bad)  
  435131:	inc    DWORD PTR [eax-0x78ff0097]
  435137:	inc    esi
  435138:	add    bh,bh
  43513a:	sbb    ch,BYTE PTR [esi]
  43513c:	(bad)  
  43513d:	call   DWORD PTR [esi-0x7e]
  435140:	dec    DWORD PTR [ecx-0xff24d1]
  435146:	push   eax
  435147:	test   eax,0x3193ffff
  43514c:	mov    edi,edi
  43514e:	dec    edx
  43514f:	(bad)  
  435151:	push   eax
  435153:	mov    eax,0xc73effff
  435158:	inc    DWORD PTR [eax]
  43515a:	inc    ebp
  43515b:	xor    al,BYTE PTR [eax]
  43515d:	inc    DWORD PTR [edi-0xd]
  435160:	add    BYTE PTR [eax],al
  435162:	cwde   
  435163:	ss (bad) 
  435165:	(bad)  
  435166:	jge    0x4350ec
  435168:	add    BYTE PTR [ebx-0x337c6e37],al
  43516e:	inc    edx
  43516f:	sub    bh,bh
  435171:	jmp    DWORD PTR [ebp-0xd00007b]
  435177:	pop    ecx
  435178:	inc    DWORD PTR [eax]
  43517a:	sbb    ebp,ecx
  43517c:	add    DWORD PTR [eax],0xffffffdb
  43517f:	hlt    
  435180:	mov    edi,edi
  435182:	dec    edi
  435183:	mov    bh,bh
  435185:	jmp    DWORD PTR [edx+0x69]
  435188:	dec    esp
  43518a:	adc    edi,DWORD PTR [edx]
  43518c:	(bad)  
  43518d:	push   ebp
  43518f:	mov    dh,0x0
  435191:	call   FWORD PTR [edx+0x1c]
  435194:	(bad)  
  435195:	jmp    DWORD PTR [edx+0x6c]
  435198:	add    BYTE PTR [ecx-0x8c9e],cl
  43519e:	sbb    al,0x72
  4351a0:	(bad)  
  4351a1:	call   FWORD PTR [eax]
  4351a3:	out    0xff,al
  4351a5:	int3   
  4351a6:	cmp    edi,DWORD PTR [edx+0x0]
  4351a9:	adc    DWORD PTR [eax],0x65
  4351ac:	(bad)  
  4351ad:	push   DWORD PTR ds:0x36ff83bf
  4351b3:	xchg   ecx,eax
  4351b4:	add    bh,bh
  4351b6:	sub    al,0xb3
  4351b8:	(bad)  
  4351b9:	(bad)  
  4351ba:	inc    bh
  4351bc:	inc    DWORD PTR [ebx+0x18ee]
  4351c2:	sub    eax,0x81fffffe
  4351c7:	and    bh,bh
  4351c9:	adc    ecx,0xffffffbd
  4351cc:	inc    DWORD PTR [eax]
  4351ce:	inc    edx
  4351cf:	or     eax,DWORD PTR [eax]
  4351d1:	dec    ebp
  4351d3:	push   esi
  4351d4:	add    DWORD PTR [ebx-0x76007dd6],0x1f
  4351db:	stos   DWORD PTR es:[edi],eax
  4351dc:	inc    DWORD PTR [eax]
  4351de:	and    bh,BYTE PTR [ebp-0x23af7700]
  4351e4:	inc    DWORD PTR [ebx-0x76ff15bb]
  4351ea:	dec    esp
  4351eb:	ins    DWORD PTR es:[edi],dx
  4351ec:	add    bh,bh
  4351ee:	pop    edi
  4351ef:	mov    eax,ds:0x2707ccff
  4351f4:	(bad)  
  4351f5:	inc    esi
  4351f7:	ror    ah,cl
  4351f9:	int3   
  4351fa:	fisub  WORD PTR [edx+0x1ea1ff00]
  435200:	(bad)  
  435201:	jmp    FWORD PTR [eax+0xff0002]
  435207:	dec    ebx
  435208:	add    BYTE PTR [ebx-0x7cff34c2],al
  43520e:	xlat   BYTE PTR ds:[ebx]
  43520f:	mov    DWORD PTR [eax],0xff9dfbff
  435215:	add    BYTE PTR [eax+0x5e],bh
  435218:	int3   
  435219:	add    bl,al
  43521b:	push   ecx
  43521c:	add    DWORD PTR [eax],0xffffffc1
  43521f:	mov    ah,0x0
  435221:	call   DWORD PTR [eax-0x36fffff2]
  435227:	add    DWORD PTR [eax],eax
  435229:	add    BYTE PTR ds:0xf3ff003f,dh
  43522f:	test   al,0xff
  435231:	push   esp
  435233:	mov    edi,0x236f8300
  435238:	mov    edi,edi
  43523a:	dec    ebx
  43523b:	loopne 0x43523c
  43523d:	dec    DWORD PTR [eax]
  43523f:	push   esi
  435240:	add    bh,bh
  435242:	add    dl,0xff
  435245:	jmp    DWORD PTR [ebp-0x3f7cffba]
  43524b:	and    bh,bh
  43524d:	add    BYTE PTR [edi-0x73337693],cl
  435253:	xor    cl,BYTE PTR [ecx-0x697600]
  435259:	mov    DWORD PTR [edx],eax
  43525b:	mov    WORD PTR [eax],es
  43525d:	call   FWORD PTR [esi+0x56]
  435260:	add    bh,bh
  435262:	ror    BYTE PTR [edi-0x2f8e7c7d],1
  435268:	add    BYTE PTR [ebx-0x3300e7b0],al
  43526e:	ins    DWORD PTR es:[edi],dx
  43526f:	and    eax,0xa768ffff
  435274:	inc    DWORD PTR [eax]
  435276:	cs add al,0xff
  435279:	add    ch,ch
  43527b:	push   edx
  43527c:	cmp    edi,0x32
  43527f:	mov    di,di
  435282:	ret    
  435283:	ja     0x435284
  435285:	int3   
  435286:	jns    0x4352d4
  435288:	int3   
  435289:	mov    DWORD PTR [ebx-0x5f],ebx
  43528c:	int3   
  43528d:	add    BYTE PTR [edx-0x1e],bl
  435290:	inc    DWORD PTR [eax]
  435292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435293:	cmp    bh,0xff
  435296:	je     0x435287
  435298:	inc    DWORD PTR [ebx-0x31e]
  43529e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43529f:	xor    bh,bh
  4352a1:	push   eax
  4352a3:	inc    eax
  4352a4:	inc    DWORD PTR [eax]
  4352a6:	repz (bad) 
  4352a8:	dec    DWORD PTR [ecx-0x7c3ac9]
  4352ae:	ret    
  4352af:	(bad)  
  4352b0:	add    DWORD PTR [eax],0x29
  4352b3:	jle    0x4352b4
  4352b5:	sbb    DWORD PTR [eax],0xffffff9b
  4352b8:	(bad)  
  4352b9:	push   DWORD PTR [edx-0x53]
  4352bc:	add    bh,bh
  4352be:	in     al,dx
  4352bf:	xlat   BYTE PTR ds:[ebx]
  4352c0:	add    BYTE PTR [eax],al
  4352c2:	ja     0x43524f
  4352c4:	add    BYTE PTR [ebx-0x7c00cb52],al
  4352ca:	mov    edx,0x80898983
  4352cf:	ret    0x8900
  4352d2:	push   cs
  4352d3:	cmc    
  4352d4:	inc    DWORD PTR [ebx-0x3213]
  4352da:	xor    dl,BYTE PTR [esi-0x70340000]
  4352e0:	(bad)  
  4352e1:	inc    DWORD PTR [esi]
  4352e3:	sbb    eax,0x9ad6ffcc
  4352e8:	int3   
  4352e9:	call   edi
  4352eb:	mov    al,0x0
  4352ed:	add    BYTE PTR [edi+0x9],bh
  4352f0:	(bad)  
  4352f1:	call   esi
  4352f3:	cmp    edi,edi
  4352f5:	jmp    FWORD PTR [edx]
  4352f7:	dec    DWORD PTR fs:[ecx-0x76ff0c1c]
  4352fe:	rcl    DWORD PTR [ebp-0x25d50000],1
  435304:	inc    DWORD PTR [eax]
  435306:	mov    dh,0x4
  435308:	add    bh,bh
  43530a:	popa   
  43530b:	mov    edx,0x65dfff89
  435310:	dec    DWORD PTR [ecx+0xffc6cb]
  435316:	call   0x8392:0x1f8383d0
  43531d:	add    BYTE PTR [ecx-0x3c],dh
  435320:	(bad)  
  435321:	jmp    FWORD PTR [ebp-0x7f]
  435324:	inc    DWORD PTR [eax]
  435326:	jle    0x435399
  435328:	(bad)  
  435329:	(bad)  
  43532a:	fbstp  TBYTE PTR [ebx-0x1]
  43532d:	jmp    DWORD PTR [edx+0x2d]
  435330:	inc    DWORD PTR [eax]
  435332:	int3   
  435333:	mov    ah,0x0
  435335:	call   DWORD PTR [eax+0x79]
  435338:	add    bh,bh
  43533a:	shl    DWORD PTR [edi-0x49490034],1
  435340:	add    BYTE PTR [ecx-0x3318df],cl
  435346:	mov    ecx,0x39ff0037
  43534b:	or     ecx,DWORD PTR [ecx-0xe9277]
  435351:	and    DWORD PTR [edi-0x67cff3d],0xffffffe9
  435358:	int3   
  435359:	add    al,al
  43535b:	test   al,0xff
  43535d:	mov    DWORD PTR [ecx+eiz*4],eax
  435360:	cmp    edi,0xffffff9f
  435363:	jg     0x435365
  435365:	dec    DWORD PTR [edx+0xc]
  435368:	mov    edi,edi
  43536a:	jp     0x435311
  43536c:	inc    DWORD PTR [eax]
  43536e:	(bad)  
  43536f:	or     edi,edi
  435371:	mov    DWORD PTR [edi+0x10],ecx
  435374:	add    BYTE PTR [eax],al
  435376:	rcl    DWORD PTR [ebx-0x7d547c01],0x0
  43537d:	call   ecx
  43537f:	ret    0xff00
  435382:	push   esi
  435383:	(bad)  
  435385:	add    BYTE PTR [esi],dh
  435387:	mov    DWORD PTR [eax],0xcca46600
  43538d:	mov    DWORD PTR [edi-0x137c0097],esi
  435393:	aad    0x0
  435395:	jmp    DWORD PTR [esi]
  435397:	and    al,BYTE PTR [eax]
  435399:	cmp    DWORD PTR [esi+ebx*8-0x1],0x0
  43539e:	xor    ch,BYTE PTR [eax-0x34]
  4353a1:	jmp    FWORD PTR [edi-0x23]
  4353a4:	inc    DWORD PTR [eax]
  4353a6:	jp     0x4353ff
  4353a8:	int3   
  4353a9:	add    BYTE PTR [edi+0x7],bl
  4353ac:	int3   
  4353ad:	call   edi
  4353af:	sar    edi,0x83
  4353b2:	cli    
  4353b3:	xchg   edx,eax
  4353b4:	cmp    edi,0x31
  4353b7:	inc    eax
  4353b8:	add    DWORD PTR [eax],0xffffffa3
  4353bb:	pusha  
  4353bc:	add    bh,bh
  4353be:	scas   eax,DWORD PTR es:[edi]
  4353bf:	mov    ebp,0x9f1bffff
  4353c4:	inc    DWORD PTR [eax]
  4353c6:	out    dx,al
  4353c7:	and    eax,0x98350000
  4353cc:	inc    DWORD PTR [ebx-0x760062f3]
  4353d2:	stos   BYTE PTR es:[edi],al
  4353d3:	repnz dec DWORD PTR [ecx+0xccd462]
  4353da:	call   0x77c753a6
  4353df:	(bad)  
  4353e0:	inc    DWORD PTR [eax]
  4353e2:	and    eax,0x78ff0041
  4353e7:	enter  0x0,0x4c
  4353eb:	test   al,0xff
  4353ed:	push   edx
  4353ef:	push   ds
  4353f0:	int3   
  4353f1:	adc    DWORD PTR [edi],0xffffff86
  4353f4:	add    DWORD PTR [eax],0x2c
  4353f7:	pop    esi
  4353f8:	inc    DWORD PTR [eax]
  4353fa:	jae    0x4353dc
  4353fc:	(bad)  
  4353fd:	dec    DWORD PTR [ebp-0x2100ffd5]
  435403:	inc    esp
  435404:	add    bh,bh
  435406:	push   esp
  435407:	arpl   WORD PTR [ecx-0x336501],cx
  43540d:	add    BYTE PTR [edi+0x2bcc00f0],dh
  435413:	jbe    0x43539e
  435415:	call   FWORD PTR [edi-0x60ff33cd]
  43541b:	xchg   edi,edi
  43541d:	dec    ebp
  43541f:	icebp  
  435420:	(bad)  
  435421:	call   DWORD PTR [eax-0x30]
  435424:	(bad)  
  435425:	jmp    DWORD PTR [edx+0x37ffff4a]
  43542b:	int    0xcc
  43542d:	sub    DWORD PTR [ebp-0x3a7c0017],0x29
  435434:	add    BYTE PTR [eax],al
  435436:	cmc    
  435437:	add    BYTE PTR ds:[eax],al
  43543a:	xor    al,0x84
  43543c:	add    DWORD PTR [ebx+0x6526],0x19
  435443:	pop    edi
  435444:	int3   
  435445:	call   DWORD PTR [ebx-0x30]
  435448:	add    bh,bh
  43544a:	cld    
  43544b:	(bad)  
  43544e:	shl    esp,cl
  435450:	(bad)  
  435451:	dec    esp
  435453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435454:	(bad)  
  435455:	call   DWORD PTR [esi]
  435457:	adc    DWORD PTR [eax],eax
  435459:	jmp    FWORD PTR [edx+edx*8]
  43545c:	int3   
  43545d:	call   ebp
  43545f:	sub    bh,bh
  435461:	add    BYTE PTR [eax-0x2600ffb0],bl
  435467:	(bad)  
  435468:	(bad)  
  435469:	call   DWORD PTR [esi]
  43546b:	xchg   edi,eax
  43546c:	add    bh,bh
  43546e:	call   0xfccd84b
  435473:	and    bh,bh
  435475:	jmp    DWORD PTR [edx+0x45]
  435478:	inc    DWORD PTR [eax]
  43547a:	je     0x43547a
  43547c:	(bad)  
  43547d:	dec    DWORD PTR [edi+ebp*8-0x764d7c01]
  435484:	add    BYTE PTR [ebx+0xe4ca],al
  43548a:	inc    ecx
  43548b:	add    BYTE PTR [eax],0xff
  43548e:	xor    cl,BYTE PTR [esi]
  435490:	mov    DWORD PTR [eax],eax
  435492:	test   al,0xb8
  435494:	inc    DWORD PTR [eax]
  435496:	xor    eax,0x75ffcc94
  43549b:	test   esp,0xff6415ff
  4354a1:	inc    DWORD PTR [esi+0x4]
  4354a4:	add    BYTE PTR [eax],al
  4354a6:	pop    esp
  4354a7:	sbb    al,0xff
  4354a9:	inc    DWORD PTR [ebx-0x22ff7ce3]
  4354af:	daa    
  4354b0:	add    BYTE PTR [ecx-0xf14],cl
  4354b6:	xor    al,0x14
  4354b8:	add    BYTE PTR [eax],al
  4354ba:	into   
  4354bb:	inc    DWORD PTR gs:[ebx-0x3b18]
  4354c2:	adc    al,bh
  4354c4:	dec    DWORD PTR [ecx-0x7cfb44]
  4354ca:	jmp    0x43548d
  4354cc:	dec    esp
  4354ce:	cmp    DWORD PTR [ebx],0xffffff89
  4354d1:	add    BYTE PTR [edi+0x5aff8385],bh
  4354d7:	and    BYTE PTR [eax],al
  4354d9:	add    DWORD PTR [ebx-0x41ff7caf],0x4
  4354e0:	(bad)  
  4354e1:	call   FWORD PTR [eax]
  4354e3:	push   edi
  4354e4:	or     DWORD PTR [ecx+0xff9139],0xa
  4354eb:	in     al,0xff
  4354ed:	int3   
  4354ee:	mov    dh,0xca
  4354f0:	(bad)  
  4354f1:	call   DWORD PTR [ebp+0x5700cc2d]
  4354f7:	gs (bad) 
  4354f9:	jmp    DWORD PTR [edi+eax*8]
  4354fc:	inc    DWORD PTR [eax]
  4354fe:	and    eax,0x7783ff33
  435503:	jmp    0x435504
  435505:	int3   
  435506:	fsubr  DWORD PTR [ecx-0x1]
  435509:	cmp    DWORD PTR [ecx],0xfffffff5
  43550c:	add    BYTE PTR [ecx+0x832bd4],cl
  435512:	jecxz  0x43557c
  435514:	add    BYTE PTR [eax],al
  435516:	push   ds
  435517:	push   0x6f9cff00
  43551c:	inc    DWORD PTR [ebx-0x7c4958]
  435522:	cmp    edi,ebp
  435524:	(bad)  
  435525:	(bad)  
  435526:	jmp    0x43552e
  435528:	(bad)  
  435529:	(bad)  
  43552a:	fmul   QWORD PTR [ebx-0x7d]
  43552d:	add    dh,dl
  43552f:	pop    ss
  435530:	add    BYTE PTR [ecx+0xffb334],cl
  435536:	les    esi,FWORD PTR [ecx-0x7d]
  435539:	xor    DWORD PTR [edx],0xfffffff3
  43553c:	(bad)  
  43553d:	call   edi
  43553f:	imul   eax,DWORD PTR [eax],0xff117300
  435545:	add    BYTE PTR [ebx+0x45],dl
  435548:	add    bh,bh
  43554a:	dec    esp
  43554b:	dec    eax
  43554c:	add    ah,cl
  43554e:	mov    ah,0x83
  435550:	inc    DWORD PTR [eax]
  435552:	retf   
  435553:	mov    edi,0x99b6ffff
  435558:	dec    esp
  43555a:	jno    0x43558e
  43555c:	add    bh,bh
  43555e:	outs   dx,DWORD PTR ds:[esi]
  43555f:	ret    0xcc
  435562:	inc    eax
  435563:	jecxz  0x435564
  435565:	dec    DWORD PTR [eax+0x60]
  435568:	add    BYTE PTR [ecx+0xff3f73],cl
  43556e:	inc    eax
  43556f:	popa   
  435570:	add    bh,bh
  435572:	js     0x4355e5
  435574:	inc    DWORD PTR [eax]
  435576:	scas   eax,DWORD PTR es:[edi]
  435577:	pop    ds
  435578:	add    bh,bh
  43557a:	fcomp  st(3)
  43557c:	dec    DWORD PTR [ecx+0xffd738]
  435582:	rcl    DWORD PTR [edi+0x18f800ff],1
  435588:	add    BYTE PTR [eax],al
  43558a:	sbb    BYTE PTR [eax-0x1],ah
  43558d:	add    BYTE PTR [edx+0x770000d8],dl
  435593:	cmp    bh,bh
  435595:	(bad)  
  435596:	jl     0x4355e7
  435598:	mov    edi,edi
  43559a:	jl     0x435565
  43559c:	add    bh,bh
  43559e:	inc    ecx
  43559f:	mov    ds:0xc9b5ffff,eax
  4355a4:	inc    DWORD PTR [eax]
  4355a6:	pop    eax
  4355a7:	adc    edi,edi
  4355a9:	add    BYTE PTR [edi-0xc],al
  4355ac:	add    bh,bh
  4355ae:	fdivr  DWORD PTR [ebx-0x1]
  4355b1:	cmp    DWORD PTR [ebx-0x28],0x0
  4355b5:	cmp    DWORD PTR [esi],0x7d
  4355b8:	add    bh,bh
  4355ba:	xchg   ecx,eax
  4355bb:	ja     0x4355bd
  4355bd:	mov    DWORD PTR [edi+eiz*1+0x5b37cc00],ecx
  4355c4:	int3   
  4355c5:	add    BYTE PTR [ebp-0x42000091],ah
  4355cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4355cc:	add    BYTE PTR [ecx-0x8dd1],cl
  4355d2:	rcr    dh,cl
  4355d4:	cmp    edi,0xffffffd0
  4355d7:	pop    edi
  4355d8:	(bad)  
  4355d9:	dec    DWORD PTR [esi-0xc]
  4355dc:	add    bh,bh
  4355de:	adc    DWORD PTR [esi-0x1],esi
  4355e1:	add    BYTE PTR [ebx+0x1a83ff3d],bl
  4355e7:	dec    edx
  4355e8:	(bad)  
  4355e9:	jmp    DWORD PTR [eax+ebx*1-0x1]
  4355ed:	add    BYTE PTR [ebp-0x3000070],bl
  4355f3:	lea    eax,[eax]
  4355f5:	dec    DWORD PTR [eax]
  4355f7:	jecxz  0x4355c5
  4355f9:	add    dh,ch
  4355fb:	sti    
  4355fc:	add    bh,bh
  4355fe:	aas    
  4355ff:	js     0x435601
  435601:	add    al,al
  435603:	and    eax,0x60e0ff00
  435608:	add    bh,bh
  43560a:	jmp    0x8344:0xb9ff00ee
  435611:	inc    DWORD PTR [esi-0x1c000040]
  435617:	rol    BYTE PTR [eax],cl
  435619:	dec    DWORD PTR [edx+0x7ff0046]
  43561f:	cmp    bh,0x0
  435622:	push   cs
  435623:	mov    dh,0x0
  435625:	call   FWORD PTR [ebp-0x10]
  435628:	(bad)  
  435629:	dec    esi
  43562b:	dec    ecx
  43562c:	add    bh,bh
  43562e:	add    al,0xaa
  435630:	cmp    edi,0x61
  435633:	adc    edi,edi
  435635:	int3   
  435636:	sub    DWORD PTR [edi],eax
  435638:	add    bh,bh
  43563a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43563b:	fcos   
  43563d:	mov    DWORD PTR [ebx+0x23838393],ebx
  435643:	adc    DWORD PTR [eax],eax
  435645:	inc    DWORD PTR [ecx-0x117c33de]
  43564b:	jbe    0x43564c
  43564d:	dec    DWORD PTR [ebp-0x1d]
  435650:	(bad)  
  435651:	dec    ebp
  435653:	xlat   BYTE PTR ds:[ebx]
  435654:	dec    esp
  435656:	out    0xb5,eax
  435658:	(bad)  
  435659:	push   DWORD PTR [edx+0x41]
  43565c:	dec    esp
  43565e:	pushf  
  43565f:	cmp    ah,cl
  435661:	inc    ecx
  435663:	fwait
  435664:	cmp    edi,0x6c
  435667:	daa    
  435668:	inc    DWORD PTR [ebx-0x76c651]
  43566e:	shl    ebx,0xcc
  435671:	int3   
  435672:	and    bl,BYTE PTR [ebx+0x21f6ff89]
  435678:	add    BYTE PTR [eax],al
  43567a:	ins    BYTE PTR es:[edi],dx
  43567b:	rol    BYTE PTR [ebx-0x407401],0xff
  435682:	inc    ecx
  435683:	enter  0x8300,0x29
  435687:	loop   0x43560c
  435689:	call   ebx
  43568b:	xor    bh,bh
  43568d:	xor    DWORD PTR [edi+0x6483cc5f],0x13
  435694:	int3   
  435695:	add    BYTE PTR [ecx+0x71],al
  435698:	dec    DWORD PTR [ecx-0xdca1]
  43569e:	retf   
  43569f:	call   0xff83:0x74b48900
  4356a6:	xchg   edi,eax
  4356a7:	jecxz  0x435675
  4356a9:	inc    esi
  4356ab:	adc    al,0xff
  4356ad:	sub    DWORD PTR [esp+ebp*4-0x1],0xffffff89
  4356b2:	push   ss
  4356b3:	xor    al,BYTE PTR [eax]
  4356b5:	int3   
  4356b6:	xchg   esi,eax
  4356b7:	xor    al,0xff
  4356b9:	add    ch,dl
  4356bb:	je     0x435646
  4356bd:	(bad)  
  4356be:	js     0x435683
  4356c0:	(bad)  
  4356c1:	(bad)  
  4356c2:	stc    
  4356c3:	dec    ebx
  4356c4:	dec    esp
  4356c6:	jge    0x435717
  4356c8:	inc    DWORD PTR [ebx-0x7c00361f]
  4356ce:	mov    al,0x83
  4356d1:	int3   
  4356d2:	and    al,BYTE PTR [esi]
  4356d4:	(bad)  
  4356d5:	(bad)  
  4356d6:	cmp    ch,BYTE PTR [edi-0xdbcff7d]
  4356dc:	(bad)  
  4356dd:	dec    ecx
  4356df:	or     eax,DWORD PTR [eax]
  4356e1:	int3   
  4356e2:	inc    ecx
  4356e3:	and    DWORD PTR [eax],eax
  4356e5:	mov    esi,eax
  4356e7:	sti    
  4356e8:	inc    DWORD PTR [eax]
  4356ea:	lods   eax,DWORD PTR gs:[esi]
  4356ec:	add    BYTE PTR [eax],al
  4356ee:	inc    esi
  4356ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4356f0:	add    DWORD PTR [eax],0xffffff8c
  4356f3:	sar    edi,cl
  4356f5:	jmp    FWORD PTR [eax]
  4356f7:	ss cmp edi,0x6f
  4356fb:	pop    eax
  4356fc:	add    bh,bh
  4356fe:	out    0x27,eax
  435700:	cmp    edi,0xfffffff8
  435703:	jae    0x435704
  435705:	inc    DWORD PTR [edi-0x1300ffd2]
  43570b:	cli    
  43570c:	(bad)  
  43570d:	dec    esp
  43570f:	jbe    0x435711
  435711:	add    ch,bl
  435713:	inc    ecx
  435714:	(bad)  
  435715:	(bad)  
  435716:	stc    
  435717:	or     al,0xcc
  435719:	jmp    DWORD PTR [ebx-0x407c00ea]
  43571f:	add    DWORD PTR [eax],0x0
  435722:	sar    BYTE PTR [edi-0x4b620001],cl
  435728:	add    bh,bh
  43572a:	push   ebp
  43572b:	mov    cl,0xff
  43572d:	(bad)  
  43572e:	std    
  43572f:	jno    0x435731
  435731:	add    BYTE PTR [esi+0x65],dl
  435734:	(bad)  
  435735:	dec    DWORD PTR [edx]
  435737:	(bad)  
  435738:	(bad)  
  435739:	call   DWORD PTR [edi+0x1883ff68]
  43573f:	popa   
  435740:	add    bh,bh
  435742:	push   edi
  435743:	fiadd  WORD PTR [ebx-0x6c1001]
  435749:	mov    DWORD PTR [esi-0x140033c4],ebp
  43574f:	or     eax,0xcd5fcc83
  435754:	or     DWORD PTR [ecx-0x33007c2a],0xffffffc3
  43575b:	sbb    edi,edi
  43575d:	(bad)  
  43575e:	jnp    0x435726
  435760:	or     DWORD PTR [ecx-0xe499],0x20
  435767:	in     al,dx
  435768:	inc    DWORD PTR [eax]
  43576a:	addr16 popa 
  43576c:	add    bh,bh
  43576e:	in     al,0x44
  435770:	add    BYTE PTR [eax],al
  435772:	shl    BYTE PTR [ecx],0xff
  435775:	add    BYTE PTR [eax+eiz*1],cl
  435778:	(bad)  
  435779:	dec    DWORD PTR [ebx-0x457633a6]
  43577f:	mov    al,0xff
  435781:	(bad)  
  435782:	fldenv [ebp-0x7a60000]
  435788:	inc    DWORD PTR [eax]
  43578a:	mov    ebx,DWORD PTR [esi-0x2fc77c01]
  435790:	add    BYTE PTR [ebx-0x6bf0],al
  435796:	fld    QWORD PTR [ebx+0x4d81ff89]
  43579c:	inc    DWORD PTR [eax]
  43579e:	cwde   
  43579f:	xchg   edx,eax
  4357a0:	cmp    edi,0xffffffa9
  4357a3:	iret   
  4357a4:	(bad)  
  4357a5:	(bad)  
  4357a6:	cld    
  4357a7:	sbb    al,0xff
  4357a9:	jmp    esp
  4357ab:	(bad)  
  4357ac:	inc    DWORD PTR [eax]
  4357ae:	fsubrp st(1),st
  4357b0:	(bad)  
  4357b1:	jmp    eax
  4357b3:	cmp    BYTE PTR [ebx+0x795583],al
  4357b9:	add    BYTE PTR [edx+0x4cffff84],ch
  4357bf:	(bad)  
  4357c0:	int3   
  4357c1:	jmp    ebx
  4357c3:	dec    eax
  4357c4:	add    bh,bh
  4357c6:	jne    0x4357c3
  4357c8:	add    BYTE PTR [ebx-0xb57f],al
  4357ce:	dec    ebp
  4357cf:	add    al,0xff
  4357d1:	(bad)  
  4357d2:	sti    
  4357d3:	mov    al,ds:0xb9de83ff
  4357d8:	add    DWORD PTR [eax],0xffffffc9
  4357db:	push   0xe7ba8300
  4357e0:	add    bh,bh
  4357e2:	inc    eax
  4357e3:	sub    bh,bh
  4357e5:	jmp    DWORD PTR [esp+ecx*2]
  4357e8:	add    bh,bh
  4357ea:	jo     0x43584a
  4357ec:	(bad)  
  4357ed:	inc    DWORD PTR [eax-0x2c0000cb]
  4357f3:	fdivp  st(7),st
  4357f5:	add    BYTE PTR [eax-0x7f],dl
  4357f8:	cmp    edi,0x1e
  4357fb:	sti    
  4357fc:	(bad)  
  4357fd:	call   FWORD PTR [ebx]
  4357ff:	das    
  435800:	inc    DWORD PTR [eax]
  435802:	out    0x2e,al
  435804:	add    BYTE PTR [ebx-0x7600b8ea],al
  43580a:	jg     0x4357eb
  43580c:	add    BYTE PTR [eax],al
  43580e:	js     0x435791
  435810:	add    bh,bh
  435812:	xchg   ebp,eax
  435813:	jl     0x435814
  435815:	call   eax
  435817:	add    BYTE PTR [ebx-0x526b01],0x83
  43581e:	xor    eax,0xf6ffff95
  435823:	fadd   QWORD PTR [eax]
  435825:	and    edx,0x36
  435828:	inc    DWORD PTR [eax]
  43582a:	xor    eax,0x8ffffee
  43582f:	(bad)  
  435831:	dec    DWORD PTR [ebx-0x6f]
  435834:	inc    DWORD PTR [eax]
  435836:	push   ss
  435837:	cmc    
  435838:	(bad)  
  435839:	inc    DWORD PTR [eax]
  43583b:	xchg   edi,eax
  43583c:	(bad)  
  43583d:	call   DWORD PTR [eax*8+0x277cff83]
  435844:	add    bh,bh
  435846:	fsubr  DWORD PTR [eax+eax*1-0x1]
  43584a:	xchg   edx,eax
  43584b:	out    dx,eax
  43584c:	(bad)  
  43584d:	(bad)  
  43584e:	aas    
  43584f:	ud0    edi,edi
  435852:	das    
  435853:	jle    0x435855
  435855:	add    BYTE PTR [eax-0x17ffff35],al
  43585b:	mov    edi,0x9d378300
  435860:	cmp    edi,0xffffffff
  435863:	or     eax,0x59c800ff
  435868:	cmp    edi,0x51
  43586b:	dec    edi
  43586c:	(bad)  
  43586d:	jmp    FWORD PTR [edi-0xa]
  435870:	add    bh,bh
  435872:	arpl   WORD PTR [edx],dx
  435874:	(bad)  
  435875:	call   FWORD PTR [ecx+0x11ccff14]
  43587b:	mov    ds:0x62e700cc,al
  435880:	(bad)  
  435881:	call   DWORD PTR [esi]
  435883:	repz add DWORD PTR [eax],0x62
  435887:	mov    ecx,esp
  435889:	add    BYTE PTR [esi],bh
  43588b:	xor    BYTE PTR [eax],al
  43588d:	add    BYTE PTR [ecx+0x1d000073],ch
  435893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435894:	dec    esp
  435896:	imul   edx,DWORD PTR [ebx+0x7a84ff00],0xffffffff
  43589d:	dec    DWORD PTR [edi+0x5e]
  4358a0:	(bad)  
  4358a1:	(bad)  
  4358a2:	mov    ebp,0x9b00ff7b
  4358a7:	add    ecx,DWORD PTR [ecx-0x7c6b4201]
  4358ad:	sbb    DWORD PTR [ecx+eiz*8],0xffffffff
  4358b1:	call   FWORD PTR [eax-0x680000d0]
  4358b7:	or     BYTE PTR [ebx-0xce9d34],al
  4358bd:	call   FWORD PTR [ebp+0x5a830052]
  4358c3:	sbb    eax,DWORD PTR [ebx-0x5c5700]
  4358c9:	jmp    DWORD PTR [esp+edi*1-0x1]
  4358cd:	add    BYTE PTR [edx+0x2],ch
  4358d0:	inc    DWORD PTR [eax]
  4358d2:	mov    ch,0x41
  4358d4:	add    BYTE PTR [eax],al
  4358d6:	xchg   esp,eax
  4358d7:	rol    DWORD PTR [eax],1
  4358d9:	(bad)  
  4358da:	jp     0x4358b7
  4358dc:	cmp    edi,0x1a
  4358df:	aaa    
  4358e0:	add    bh,bh
  4358e2:	into   
  4358e3:	push   0xffffffff
  4358e5:	add    bh,dl
  4358e7:	push   edx
  4358e8:	add    bh,bh
  4358ea:	jl     0x43589e
  4358ec:	(bad)  
  4358ed:	jmp    FWORD PTR [edx+ebp*2+0x0]
  4358f1:	inc    DWORD PTR [eax+0x26]
  4358f4:	mov    edi,edi
  4358f6:	jns    0x435888
  4358f8:	add    DWORD PTR [eax],0x1a
  4358fb:	fwait
  4358fc:	add    ah,cl
  4358fe:	adc    BYTE PTR [ebx-0x1],0xff
  435902:	retf   0xbe
  435905:	(bad)  
  435906:	std    
  435907:	add    BYTE PTR [eax],al
  435909:	add    DWORD PTR [ebx],0xffffffb6
  43590c:	dec    esp
  43590e:	mov    esp,0x4cffffc0
  435913:	jge    0x435914
  435915:	add    bh,dl
  435917:	pop    eax
  435918:	inc    DWORD PTR [ebx-0x7c762e84]
  43591e:	jne    0x435998
  435920:	add    bh,bh
  435922:	into   
  435923:	and    eax,0xec6e8383
  435928:	add    BYTE PTR [ecx-0x763348c2],cl
  43592e:	push   0x5b
  435930:	inc    DWORD PTR [eax]
  435932:	std    
  435933:	in     al,dx
  435934:	(bad)  
  435935:	inc    DWORD PTR [esi]
  435937:	sbb    bh,bh
  435939:	call   DWORD PTR [edx]
  43593b:	pop    ecx
  43593c:	add    bh,bh
  43593e:	sub    eax,0x9ffff39
  435943:	jp     0x435945
  435945:	inc    DWORD PTR [edx-0x4676ff36]
  43594b:	outs   dx,BYTE PTR ds:[esi]
  43594c:	int3   
  43594d:	add    bl,ch
  43594f:	test   BYTE PTR [eax],al
  435951:	sub    ebp,0xffffff8b
  435954:	add    bh,bh
  435956:	in     eax,dx
  435957:	bound  eax,QWORD PTR [eax]
  435959:	adc    DWORD PTR [edx+0x29ff83d1],0xffffffdc
  435960:	mov    edi,edi
  435962:	sbb    BYTE PTR [ecx],0xff
  435965:	jmp    DWORD PTR [ebp+0x11]
  435968:	mov    edi,edi
  43596a:	adc    DWORD PTR [ebx+0x0],esi
  43596d:	dec    DWORD PTR [eax]
  43596f:	in     al,0xff
  435971:	add    cl,dl
  435973:	loop   0x435974
  435975:	add    DWORD PTR [ebx+0x72ff835f],0x65
  43597c:	(bad)  
  43597d:	dec    DWORD PTR [ecx+0x69]
  435980:	mov    DWORD PTR [eax],eax
  435982:	cmp    BYTE PTR [edx+0x0],bh
  435985:	dec    DWORD PTR [ebx+0x28]
  435988:	add    ah,cl
  43598a:	adc    dl,ah
  43598c:	inc    DWORD PTR [eax]
  43598e:	xor    eax,ebp
  435990:	(bad)  
  435991:	jmp    DWORD PTR [eax]
  435993:	push   edi
  435994:	inc    DWORD PTR [ebx-0xffe141]
  43599a:	stc    
  43599b:	imul   edi,edi,0xff2827ff
  4359a1:	mov    DWORD PTR [edi+0x4c00890c],ecx
  4359a7:	icebp  
  4359a8:	add    BYTE PTR [eax],al
  4359aa:	ins    BYTE PTR es:[edi],dx
  4359ab:	inc    ebx
  4359ac:	int3   
  4359ad:	dec    DWORD PTR ds:0x2b0000fc
  4359b3:	and    bh,bh
  4359b5:	or     ebp,0xffffffcf
  4359b8:	dec    esp
  4359ba:	push   ebx
  4359bb:	sub    al,0xff
  4359bd:	jmp    FWORD PTR [eax]
  4359bf:	push   eax
  4359c0:	add    BYTE PTR [eax],al
  4359c2:	adc    eax,DWORD PTR [edi+edi*8+0x0]
  4359c6:	xor    eax,0xdf00ff43
  4359cb:	pop    edx
  4359cc:	(bad)  
  4359cd:	push   DWORD PTR [eax+0x14]
  4359d0:	inc    DWORD PTR [eax]
  4359d2:	push   esi
  4359d3:	stc    
  4359d4:	cmp    edi,0xffffffb2
  4359d7:	inc    ecx
  4359d8:	inc    DWORD PTR [eax]
  4359da:	push   esi
  4359db:	stos   BYTE PTR es:[edi],al
  4359dc:	add    bh,bh
  4359de:	aas    
  4359df:	dec    edi
  4359e0:	inc    DWORD PTR [eax]
  4359e2:	adc    al,ah
  4359e4:	(bad)  
  4359e5:	(bad)  
  4359e6:	call   0x8e0fe3a0
  4359eb:	outs   dx,BYTE PTR ds:[esi]
  4359ec:	(bad)  
  4359ed:	(bad)  
  4359ee:	mov    ebx,0xb90000cd
  4359f3:	sar    bh,0x0
  4359f6:	jge    0x43597b
  4359f8:	inc    DWORD PTR [eax]
  4359fa:	clc    
  4359fb:	out    dx,al
  4359fc:	add    bh,bh
  4359fe:	cld    
  4359ff:	sbb    DWORD PTR [ecx+0x1bcfff],ecx
  435a05:	call   FWORD PTR [ecx-0x18]
  435a08:	(bad)  
  435a09:	(bad)  
  435a0a:	mov    edx,0xa0ffcc0f
  435a0f:	aaa    
  435a10:	inc    DWORD PTR [eax]
  435a12:	dec    eax
  435a13:	fild   DWORD PTR [eax]
  435a15:	add    BYTE PTR [ebx],ah
  435a17:	dec    edx
  435a18:	inc    DWORD PTR [eax]
  435a1a:	push   0xffffff89
  435a1c:	inc    DWORD PTR [eax]
  435a1e:	mov    ch,bl
  435a20:	(bad)  
  435a21:	call   FWORD PTR [ebx-0x44]
  435a24:	inc    DWORD PTR [eax]
  435a26:	xor    BYTE PTR [edi+edi*8],dh
  435a29:	(bad)  
  435a2a:	cmp    BYTE PTR [ecx],dh
  435a2c:	cmp    edi,0x11
  435a2f:	adc    DWORD PTR [eax],eax
  435a31:	int3   
  435a32:	out    dx,al
  435a33:	xor    eax,0xab850083
  435a38:	(bad)  
  435a39:	call   FWORD PTR [ebx]
  435a3b:	mov    bh,0x0
  435a3d:	jmp    FWORD PTR [edx-0x2cff00f0]
  435a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a44:	add    bh,bh
  435a46:	cmp    al,0xcd
  435a48:	inc    DWORD PTR [ebx-0x7c99af]
  435a4e:	pop    edi
  435a4f:	inc    eax
  435a50:	inc    DWORD PTR [eax]
  435a52:	out    dx,al
  435a53:	pop    edx
  435a54:	inc    DWORD PTR [ebx-0xff55ac]
  435a5a:	shr    DWORD PTR [esi],cl
  435a5c:	add    ah,cl
  435a5e:	adc    DWORD PTR [eax-0x34],0x1b
  435a62:	int3   
  435a63:	inc    DWORD PTR [eax]
  435a65:	jmp    FWORD PTR [ecx+0x0]
  435a68:	(bad)  
  435a69:	call   FWORD PTR [esi]
  435a6b:	xchg   esp,eax
  435a6c:	int3   
  435a6d:	sahf   
  435a6e:	jnp    0x435a63
  435a70:	add    al,bl
  435a72:	add    DWORD PTR [ebx-0x332a7c01],0x1
  435a79:	add    BYTE PTR [ecx+ebp*2],al
  435a7c:	call   FWORD PTR [ecx]
  435a7e:	(bad)  
  435a7f:	stc    
  435a80:	dec    DWORD PTR [eax+eax*1]
  435a83:	(bad)  
  435a84:	inc    DWORD PTR [ebx-0x33c4005a]
  435a8a:	es mov esi,0x4cc5c7ff
  435a90:	push   DWORD PTR ds:0xff83ccff
  435a96:	jge    0x435a97
  435a98:	inc    ebx
  435a99:	int3   
  435a9a:	in     al,0xb5
  435a9c:	jmp    esp
  435a9e:	adc    eax,DWORD PTR ss:[eax]
  435aa1:	jmp    0xcd42e3a6
  435aa6:	mov    BYTE PTR [ebx-0x5c77cc8],0xff
  435aad:	jo     0x435abf
  435aaf:	jae    0x435a3a
  435ab1:	mov    ds:0x83ffcccc,eax
  435ab6:	jno    0x435a3b
  435ab8:	add    BYTE PTR es:[esi],ch
  435abb:	push   ecx
  435abc:	jmp    DWORD PTR [ebp+0x390001c0]
  435ac2:	add    BYTE PTR [eax],al
  435ac4:	add    bh,bh
  435ac6:	adc    DWORD PTR [eax],eax
  435ac8:	dec    edi
  435ac9:	add    BYTE PTR [edx+eax*4-0x1],dh
  435acd:	gs lahf 
  435acf:	sbb    edi,edi
  435ad1:	les    eax,FWORD PTR [eax]
  435ad3:	int3   
  435ad4:	add    BYTE PTR [eax],al
  435ad6:	inc    esi
  435ad7:	add    BYTE PTR [ebp-0x1],ah
  435ada:	push   ebx
  435adb:	jae    0x89b2063c
  435ae1:	pop    esi
  435ae2:	inc    DWORD PTR [ebx+0x80cc00]
  435ae8:	cmp    bh,0x92
  435aeb:	push   cs
  435aec:	add    BYTE PTR [ebx],cl
  435aee:	js     0x435a85
  435af0:	(bad)  
  435af1:	jmp    0x89d5:0x89ccff00
  435af8:	sub    edi,edi
  435afa:	mov    dl,0x11
  435afc:	push   esi
  435afe:	(bad)  
  435aff:	mov    edi,0xff1983
  435b04:	add    BYTE PTR [eax],al
  435b06:	sbb    BYTE PTR [ebx+0x1596834a],al
  435b0c:	call   DWORD PTR [edx+0x6ff7b03]
  435b12:	(bad)  
  435b13:	inc    DWORD PTR [eax]
  435b15:	add    BYTE PTR [ecx+0x0],dh
  435b18:	imul   edi,edi,0xa2ff5d45
  435b1e:	popa   
  435b1f:	popa   
  435b20:	add    DWORD PTR [ecx],0xffffff89
  435b23:	add    BYTE PTR [ebx-0x1c006601],al
  435b29:	(bad)  
  435b2a:	jl     0x435b29
  435b2c:	mov    DWORD PTR [edx+0xb00b4ee],ecx
  435b32:	(bad)  
  435b33:	inc    DWORD PTR [eax]
  435b35:	inc    DWORD PTR [esi]
  435b37:	int3   
  435b38:	cmp    bh,bh
  435b3a:	jmp    0x435bab
  435b3c:	add    dh,ah
  435b3e:	push   ds
  435b3f:	and    bh,bh
  435b41:	mov    eax,ds:0xccff0000
  435b46:	xlat   BYTE PTR ds:[ebx]
  435b47:	push   esp
  435b49:	(bad)  
  435b4a:	cmp    BYTE PTR [ebp+0x5ac51500],al
  435b50:	call   FWORD PTR [ecx-0x1]
  435b53:	(bad)  
  435b54:	(bad)  
  435b55:	dec    DWORD PTR [ecx+0x5f0010ff]
  435b5b:	test   ah,0xc2
  435b5e:	loopne 0x435b02
  435b60:	int3   
  435b61:	scas   eax,DWORD PTR es:[edi]
  435b62:	(bad)  
  435b63:	dec    DWORD PTR [ecx+0x13ccfdff]
  435b69:	jmp    DWORD PTR [edi*8-0x58e89e00]
  435b70:	add    BYTE PTR [ebp-0xff7c01],dh
  435b76:	mov    al,0xff
  435b78:	push   edx
  435b79:	add    bh,cl
  435b7b:	in     al,dx
  435b7c:	jmp    esp
  435b7e:	stos   BYTE PTR es:[edi],al
  435b7f:	loop   0x435b81
  435b81:	xlat   BYTE PTR ds:[ebx]
  435b82:	add    BYTE PTR [ebx+0x2e0000],al
  435b88:	aam    0x0
  435b8a:	and    ebp,DWORD PTR [edx-0x1]
  435b8d:	popa   
  435b8e:	sti    
  435b8f:	(bad)  
  435b90:	call   FWORD PTR [ebp-0xff0001]
  435b96:	pushf  
  435b97:	and    DWORD PTR [eax-0x1],0xffffff9f
  435b9b:	fcos   
  435b9d:	inc    esi
  435b9e:	sbb    BYTE PTR [ecx],cl
  435ba0:	xor    DWORD PTR [edx],0x0
  435ba3:	dec    DWORD PTR [ecx+0x6eff8283]
  435ba9:	int3   
  435baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435bab:	mov    bh,bh
  435bad:	std    
  435bae:	jno    0x435bb6
  435bb0:	jmp    ecx
  435bb2:	dec    DWORD PTR [ecx-0x7c1c0000]
  435bb8:	popa   
  435bb9:	int3   
  435bba:	lock inc edi
  435bbc:	sbb    DWORD PTR ds:0xe900fb66,0x0
  435bc3:	add    BYTE PTR [eax],al
  435bc5:	add    BYTE PTR [ecx+ecx*4-0x24],al
  435bc9:	call   DWORD PTR [ebx+0x15920074]
  435bcf:	or     BYTE PTR [ecx-0xff0014],0x83
  435bd6:	mov    al,ds:0xff0052ff
  435bdb:	add    DWORD PTR [eax],eax
  435bdd:	xchg   DWORD PTR [ecx],esp
  435bdf:	aaa    
  435be0:	int3   
  435be1:	ret    0x89ff
  435be4:	(bad)  
  435be5:	jmp    edx
  435be7:	dec    DWORD PTR [edx-0x7d]
  435bea:	cmp    al,0x1e
  435bec:	add    BYTE PTR [ebx-0x44ff107b],ah
  435bf2:	mov    edi,edi
  435bf4:	dec    DWORD PTR [ecx-0x76c433f9]
  435bfa:	inc    esp
  435bfb:	push   0xc9743583
  435c00:	(bad)  
  435c01:	mov    eax,0xff83
  435c06:	jae    0x435c08
  435c08:	or     eax,0x831b82ff
  435c0d:	mov    ebp,0xdb83a7ba
  435c12:	cmp    edi,0xffffffff
  435c15:	add    al,bh
  435c17:	jmp    FWORD PTR [eax+0x0]
  435c1a:	xchg   ebx,eax
  435c1b:	retf   
  435c1c:	(bad)  
  435c1d:	mov    ebx,0xbdffdbbd
  435c22:	add    BYTE PTR [eax],al
  435c24:	(bad)  
  435c25:	(bad)  
  435c26:	inc    DWORD PTR [ebx+0x79f083a7]
  435c2c:	add    BYTE PTR [ecx+esi*4+0x73],dl
  435c30:	dec    DWORD PTR [ebx-0x33ff7c01]
  435c36:	xchg   edx,eax
  435c37:	add    BYTE PTR [esi-0x77],cl
  435c3a:	fild   QWORD PTR [esi+0x4baf8000]
  435c40:	xor    DWORD PTR [edi+edi*8+0x23ffff00],0x0
  435c48:	jbe    0x435c49
  435c4a:	and    eax,0xa1c283b8
  435c4f:	adc    bh,bh
  435c51:	cmp    DWORD PTR [ebx+0x7ff89ff],eax
  435c57:	jmp    ebp
  435c59:	jmp    FWORD PTR [ecx+0x5602cc4c]
  435c5f:	cmp    eax,DWORD PTR [eax]
  435c61:	ror    ah,1
  435c63:	add    bh,bh
  435c65:	add    dh,bl
  435c67:	add    BYTE PTR [ebp+0x0],dl
  435c6a:	jmp    0xfe:0x6744ccfa
  435c71:	loope  0x435c72
  435c73:	(bad)  
  435c74:	inc    DWORD PTR [ebx+0x2f00bd]
  435c7a:	stos   DWORD PTR es:[edi],eax
  435c7b:	xor    eax,0xdf1cd3ff
  435c80:	call   FWORD PTR [edx]
  435c82:	(bad)  
  435c83:	(bad)  
  435c84:	(bad)  
  435c85:	dec    DWORD PTR [edx-0x1]
  435c88:	cmc    
  435c89:	add    dh,ah
  435c8b:	popf   
  435c8c:	or     DWORD PTR [ebp-0x59],0x4
  435c90:	add    ch,bh
  435c92:	mov    DWORD PTR [ebx-0x420001],eax
  435c98:	xor    bh,bh
  435c9a:	and    DWORD PTR [ebx],esp
  435c9c:	sub    DWORD PTR [esi+edi*2-0xe],0xffffffff
  435ca1:	dec    esp
  435ca2:	(bad)  
  435ca3:	(bad)  
  435ca4:	inc    DWORD PTR [eax]
  435ca6:	jns    0x435ca8
  435ca8:	out    dx,eax
  435ca9:	int3   
  435caa:	pop    esp
  435cab:	xchg   esp,eax
  435cac:	call   DWORD PTR [ecx-0x680054db]
  435cb2:	add    bh,bh
  435cb4:	int3   
  435cb5:	add    BYTE PTR [ebx-0x7d],al
  435cb8:	gs int3 
  435cba:	jbe    0x435cb0
  435cbc:	int3   
  435cbd:	xchg   edx,eax
  435cbe:	push   0x6f
  435cc0:	jmp    DWORD PTR [eax-0xff0100]
  435cc6:	dec    edx
  435cc7:	add    bl,bh
  435cc9:	call   FWORD PTR [edx+0x4ac6ffa2]
  435ccf:	fdivp  st(7),st
  435cd1:	lods   al,BYTE PTR ds:[esi]
  435cd2:	(bad)  
  435cd3:	(bad)  
  435cd4:	inc    DWORD PTR [ebx-0xe800b9]
  435cda:	or     ch,al
  435cdc:	int3   
  435cdd:	es movq mm7,mm7
  435ce1:	imul   eax,DWORD PTR [eax],0xc3830089
  435ce7:	call   FWORD PTR [ecx-0x1]
  435cea:	push   esp
  435ceb:	mov    ch,0xff
  435ced:	xchg   edi,eax
  435cee:	jne    0x435cc3
  435cf0:	and    ebx,0xffffffff
  435cf3:	add    BYTE PTR [eax],al
  435cf5:	push   DWORD PTR [esi]
  435cf7:	mov    DWORD PTR [edi+edi*8-0x1300f8c5],edi
  435cfe:	and    BYTE PTR [ebx+0xffba83],0x0
  435d05:	jmp    FWORD PTR [esi]
  435d07:	dec    DWORD PTR ds:0x7c6800
  435d0d:	and    BYTE PTR [ebx-0xd0093],ah
  435d13:	add    bh,bh
  435d15:	jmp    FWORD PTR [ebx-0x1]
  435d18:	sub    edi,edi
  435d1a:	xor    eax,0x386683b0
  435d1f:	(bad)  
  435d20:	(bad)  
  435d21:	inc    BYTE PTR [eax]
  435d23:	(bad)  
  435d24:	(bad)  
  435d25:	(bad)  
  435d26:	jg     0x435d27
  435d28:	mov    ds:0xff8fc600,eax
  435d2d:	dec    esi
  435d2e:	ds adc eax,0xff00b483
  435d34:	inc    DWORD PTR [eax]
  435d36:	test   DWORD PTR [ebx+0x468089cf],0x5e14d383
  435d40:	call   FWORD PTR [edi-0x7d]
  435d43:	int3   
  435d44:	inc    DWORD PTR [ebx-0xa5ff5c]
  435d4a:	sub    al,0x29
  435d4c:	jmp    FWORD PTR [edi]
  435d4e:	inc    edi
  435d4f:	(bad)  
  435d50:	dec    DWORD PTR [ecx-0x1]
  435d53:	add    ah,cl
  435d55:	add    BYTE PTR [ebp-0x7d],dl
  435d58:	sub    eax,0xff0ae7ff
  435d5d:	and    DWORD PTR [ebx-0x60],edi
  435d60:	call   DWORD PTR [edi+0x0]
  435d63:	int3   
  435d64:	or     esp,0x63
  435d67:	add    BYTE PTR [esi-0x7ce61301],ch
  435d6d:	sar    BYTE PTR [edx+0x4c],1
  435d70:	add    BYTE PTR [edx+0x0],bh
  435d73:	add    BYTE PTR [ecx+0x60ffd6ff],cl
  435d79:	mov    DWORD PTR [ebp+0x1f],edx
  435d7c:	add    ch,cl
  435d7e:	fsub   DWORD PTR [ebp+0xffef00]
  435d84:	cmp    edi,0xffffffb0
  435d87:	int3   
  435d88:	xchg   ebx,eax
  435d89:	int3   
  435d8a:	add    eax,0xbd2bff1a
  435d8f:	mov    esp,0xffa1ff
  435d94:	(bad)  
  435d95:	call   DWORD PTR [ebx-0x1]
  435d98:	adc    eax,DWORD PTR [ebx-0x640053f9]
  435d9e:	fidiv  WORD PTR [edx]
  435da0:	(bad)  
  435da1:	jns    0x435da2
  435da3:	(bad)  
  435da4:	(bad)  
  435da5:	jmp    ecx
  435da7:	int3   
  435da8:	repnz dec DWORD PTR [ebx+0x41]
  435dac:	add    BYTE PTR [ebp+0x1e],bh
  435daf:	push   esp
  435db0:	adc    DWORD PTR [edi-0x1],0xffffffff
  435db4:	dec    DWORD PTR [ecx-0x120059]
  435dba:	ds xor eax,0x89949aff
  435dc0:	dec    DWORD PTR [eax]
  435dc2:	add    BYTE PTR [eax],al
  435dc4:	add    DWORD PTR [ebx-0x66ff8b],0x67
  435dcb:	stos   DWORD PTR es:[edi],eax
  435dcc:	add    ebx,0x11
  435dcf:	sbb    ecx,esp
  435dd1:	fild   DWORD PTR [eax]
  435dd3:	inc    DWORD PTR [ebx+0x3400d3ff]
  435dd9:	call   DWORD PTR [ecx+ebx*8-0x1]
  435ddd:	pop    ds
  435dde:	sub    bl,ah
  435de0:	mov    DWORD PTR [ebp-0x7600ff01],edx
  435de6:	or     cl,ah
  435de8:	scas   al,BYTE PTR es:[edi]
  435de9:	xor    DWORD PTR [esi+ecx*1-0x1],0x45
  435dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435def:	test   edi,edi
  435df1:	or     al,0xff
  435df3:	cmp    edi,0x0
  435df6:	icebp  
  435df7:	(bad)  
  435df8:	mov    ebx,0x3c7883
  435dfd:	fdiv   st,st(5)
  435dff:	mov    al,ds:0xffffe0ff
  435e04:	inc    DWORD PTR [eax]
  435e06:	mov    eax,0xbaff5100
  435e0b:	je     0x435d90
  435e0d:	aas    
  435e0e:	or     al,0x57
  435e10:	dec    DWORD PTR [ebx+eax*4-0x7d]
  435e14:	add    DWORD PTR [eax],0x7a
  435e17:	sub    DWORD PTR [edi+0x0],0x66
  435e1b:	mov    ebx,0x97d9ddcc
  435e20:	add    BYTE PTR [edi-0x34],ah
  435e23:	add    bh,bh
  435e25:	mov    DWORD PTR [edx-0x4e003800],eax
  435e2b:	push   edi
  435e2c:	call   FWORD PTR [edi+0x40cc7468]
  435e32:	inc    DWORD PTR [eax]
  435e34:	int3   
  435e35:	adc    DWORD PTR [ebx-0x5c00fe01],0xffffffcb
  435e3c:	int3   
  435e3d:	pop    ds
  435e3e:	xor    edi,edx
  435e40:	add    BYTE PTR [edi],bh
  435e42:	cmp    edi,0x0
  435e45:	add    BYTE PTR [edx],ch
  435e47:	jmp    FWORD PTR [eax-0x7c42d001]
  435e4d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435e4f:	inc    edi
  435e50:	int3   
  435e51:	mov    ds:0xcc0000ff,al
  435e56:	xchg   esp,eax
  435e57:	cmp    DWORD PTR [edx-0x477c00],0x58
  435e5e:	cmp    esi,DWORD PTR [ecx-0x7cfff900]
  435e64:	mov    esp,ecx
  435e66:	xor    eax,0x2800f0cc
  435e6b:	add    al,0xff
  435e6d:	sbb    bl,bl
  435e6f:	sti    
  435e70:	jmp    FWORD PTR [edi+edi*8-0x1]
  435e74:	inc    DWORD PTR [eax]
  435e76:	push   ebx
  435e77:	int3   
  435e78:	jmp    0x135a049
  435e7d:	cld    
  435e7e:	jo     0x435ec5
  435e80:	(bad)  
  435e81:	jp     0x435e82
  435e83:	cmp    edi,0xffffff83
  435e86:	cmp    eax,0x6dcc8cff
  435e8b:	ret    0xdeff
  435e8e:	push   ecx
  435e8f:	mov    DWORD PTR [ebx+0xffff80],eax
  435e95:	mov    ecx,ebx
  435e97:	add    BYTE PTR [eax+eax*1],al
  435e9a:	sub    eax,0xcee0022
  435e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435ea0:	call   FWORD PTR [ebx+eax*4+0x3000ff00]
  435ea7:	push   DWORD PTR [edx]
  435ea9:	add    BYTE PTR [eax-0x15807cfa],dh
  435eaf:	push   ecx
  435eb0:	or     DWORD PTR [ebx+eax*4+0x750083ff],0x0
  435eb8:	aad    0x83
  435eba:	mov    ch,0xbb
  435ebc:	push   esi
  435ebe:	mov    ds:0x8317ff41,al
  435ec3:	add    BYTE PTR [ebx-0x4300d600],al
  435ec9:	call   FWORD PTR [ebp-0x5c]
  435ecc:	add    BYTE PTR ds:0xd6cc6ec6,cl
  435ed2:	int3   
  435ed3:	cmp    edi,0xffffffcc
  435ed6:	push   0x79ff1bff
  435edb:	push   ebx
  435edc:	call   ecx
  435ede:	adc    esp,DWORD PTR [esi-0x1]
  435ee1:	mov    ds:0xff00ffcc,eax
  435ee6:	call   0x8389:0xd6ff20ff
  435eed:	arpl   WORD PTR [ecx-0x18],ax
  435ef0:	int3   
  435ef1:	add    BYTE PTR [ebx+0x6cffff83],0xff
  435ef8:	test   DWORD PTR [eax],eax
  435efa:	adc    eax,0x2e8affd0
  435eff:	str    WORD PTR [esi-0x7d]
  435f03:	(bad)  
  435f04:	(bad)  
  435f05:	call   DWORD PTR [ebp+0x0]
  435f08:	mov    DWORD PTR [eax],eax
  435f0a:	(bad)  
  435f0b:	jmp    0x76ff:0x2a62de00
  435f12:	add    BYTE PTR [eax],al
  435f14:	add    bh,bh
  435f16:	dec    esp
  435f17:	jmp    edi
  435f19:	add    BYTE PTR [edi+0xa95ff7c],al
  435f1f:	jne    0x435f20
  435f21:	fwait
  435f22:	inc    DWORD PTR [eax]
  435f24:	(bad)  
  435f25:	dec    ebp
  435f27:	(bad)  
  435f28:	in     al,dx
  435f29:	add    BYTE PTR [esi-0x3beff1b],al
  435f2f:	rol    BYTE PTR [ebx-0x7c09],1
  435f35:	add    BYTE PTR [ecx],al
  435f37:	cmp    DWORD PTR [eax-0x1],0xffffffb1
  435f3b:	or     ah,0x52
  435f3e:	call   0x0:0x8327ff97
  435f45:	add    BYTE PTR [edi+0x290010ff],ch
  435f4b:	sbb    BYTE PTR [eax],al
  435f4d:	inc    edi
  435f4e:	dec    ebp
  435f4f:	inc    esp
  435f50:	add    BYTE PTR [ecx+0xff00ff],dl
  435f56:	mov    al,ds:0x600d400
  435f5b:	mov    dh,0x0
  435f5d:	ins    BYTE PTR es:[edi],dx
  435f5e:	cmp    eax,0xff3c00c0
  435f63:	inc    DWORD PTR [ebx-0x7800a101]
  435f69:	dec    DWORD PTR [esi]
  435f6b:	push   0x0
  435f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435f6e:	xor    DWORD PTR [ebx],esp
  435f70:	jmp    FWORD PTR [edi+0xffffff]
  435f76:	icebp  
  435f77:	xor    DWORD PTR [ecx+ecx*4-0x6b],0x2f
  435f7c:	add    bh,al
  435f7e:	or     ebx,ecx
  435f80:	jmp    DWORD PTR [esi+0x0]
  435f83:	add    BYTE PTR [eax],al
  435f85:	add    BYTE PTR [eax+eax*1],ch
  435f88:	add    al,0x0
  435f8a:	aam    0x8c
  435f8c:	jmp    DWORD PTR [ebx-0x34]
  435f8f:	cld    
  435f90:	jmp    FWORD PTR [ecx-0x7cffff7d]
  435f96:	stos   DWORD PTR es:[edi],eax
  435f97:	sub    DWORD PTR [ecx+0x0],0x62
  435f9b:	mov    ebp,0xd2277000
  435fa0:	mov    DWORD PTR [eax+eax*1+0x0],ebp
  435fa4:	add    bh,bh
  435fa6:	jg     0x435fa8
  435fa8:	jge    0x435fa9
  435faa:	adc    ch,bh
  435fac:	add    dl,ah
  435fae:	out    0x15,eax
  435fb0:	call   DWORD PTR [edx-0x77]
  435fb3:	inc    DWORD PTR [eax]
  435fb5:	inc    DWORD PTR [ecx]
  435fb7:	sbb    esi,0x0
  435fba:	popaw  
  435fbc:	push   DWORD PTR [edx+0x7c]
  435fbf:	sub    bh,bh
  435fc1:	push   es
  435fc2:	add    BYTE PTR [eax],al
  435fc4:	cmp    edi,0x47
  435fc7:	sbb    DWORD PTR [edx],0x0
  435fca:	push   ecx
  435fcb:	push   esp
  435fcc:	sbb    edi,0x21
  435fcf:	mov    ebx,0xff00cdff
  435fd4:	int3   
  435fd5:	add    BYTE PTR [esp+ecx*8+0x57],cl
  435fd9:	add    BYTE PTR [eax+0x46],bl
  435fdc:	dec    DWORD PTR [edi]
  435fde:	pop    ds
  435fdf:	pushf  
  435fe0:	add    BYTE PTR [ebp-0x7c760001],dh
  435fe6:	dec    ebp
  435fe7:	add    BYTE PTR [edi-0x1],al
  435fea:	jno    0x435fe6
  435fec:	add    BYTE PTR [ebx+0x73ff9568],dh
  435ff2:	int3   
  435ff3:	add    BYTE PTR [eax],al
  435ff5:	add    BYTE PTR [eax],ch
  435ff7:	(bad)  
  435ff8:	out    dx,eax
  435ff9:	add    BYTE PTR [ebx-0x2f],ch
  435ffc:	add    BYTE PTR [ebx+0x79],al
  435fff:	(bad)  
  436001:	adc    eax,DWORD PTR [eax]
  436003:	(bad)  
  436004:	dec    DWORD PTR [ecx+0xdbccdf]
  43600a:	loope  0x435fbf
  43600c:	add    BYTE PTR [esi],ch
  43600e:	jbe    0x435fc7
  436010:	jmp    DWORD PTR [eax-0x7c7c01]
  436016:	pushf  
  436017:	call   DWORD PTR [edi+edi*8]
  43601a:	or     dl,BYTE PTR [ebx]
  43601c:	mov    edx,esp
  43601e:	gs pop ds
  436020:	add    cl,cl
  436022:	add    ah,cl
  436024:	(bad)  
  436025:	(bad)  
  436026:	mov    ecx,0x73ff6a00
  43602b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43602c:	jmp    DWORD PTR [ecx+0x1200f5f0]
  436032:	add    bh,bh
  436034:	dec    DWORD PTR [ecx-0x76a0ff33]
  43603a:	push   cs
  43603b:	imul   edi,edi,0x6a829d
  436041:	loopne 0x43600f
  436043:	cmp    edi,0xffffffff
  436046:	std    
  436047:	sbb    DWORD PTR [esi],0xffffffff
  43604a:	adc    BYTE PTR [esi],bl
  43604c:	add    bl,dl
  43604e:	push   0x58
  436050:	call   FWORD PTR [ebx-0x7c01]
  436056:	ins    DWORD PTR es:[edi],dx
  436057:	inc    eax
  436059:	mov    DWORD PTR [edx],eax
  43605b:	fdiv   st(7),st
  43605d:	daa    
  43605e:	inc    ebx
  43605f:	pop    esp
  436060:	call   FWORD PTR [ebx]
  436062:	add    bh,bh
  436064:	add    ah,cl
  436066:	cli    
  436067:	add    BYTE PTR [ecx+0x0],bh
  43606a:	in     eax,dx
  43606b:	loop   0x43606c
  43606d:	push   fs
  43606f:	(bad)  
  436072:	inc    DWORD PTR [ebx+0x8c83ff]
  436078:	out    0xff,eax
  43607a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43607b:	inc    BYTE PTR [eax]
  43607d:	test   al,0x41
  43607f:	pop    ebp
  436080:	add    cl,ah
  436082:	inc    DWORD PTR [eax]
  436084:	add    BYTE PTR [ebx-0x6cff0d],al
  43608a:	cld    
  43608b:	cmp    edi,edi
  43608d:	mov    esp,0x17cce46f
  436092:	mov    edi,edi
  436094:	(bad)  
  436095:	push   DWORD PTR [ebp-0x1]
  436098:	pop    esp
  436099:	jmp    esi
  43609b:	mov    ebp,0xcd705e00
  4360a0:	sub    DWORD PTR ds:0xffff00ff,0xffffffdc
  4360a7:	add    BYTE PTR [ecx-0x1],bh
  4360aa:	das    
  4360ab:	mov    esp,0x7a696800
  4360b0:	inc    DWORD PTR [ebp-0x1]
  4360b3:	inc    DWORD PTR [eax]
  4360b5:	push   DWORD PTR [edi+0x3289d3ff]
  4360bb:	mov    esi,0x3eca2dff
  4360c0:	int3   
  4360c1:	rol    DWORD PTR [eax],0x0
  4360c4:	inc    DWORD PTR [eax]
  4360c6:	test   DWORD PTR [eax],eax
  4360c8:	push   esp
  4360c9:	jmp    DWORD PTR [esi+0x2c]
  4360cc:	or     DWORD PTR [ebp+0x51],0xffffffec
  4360d0:	(bad)  
  4360d1:	aas    
  4360d2:	inc    DWORD PTR [eax]
  4360d4:	int3   
  4360d5:	(bad)  
  4360d6:	cmp    bh,bh
  4360d8:	mov    esi,0xffc71489
  4360dd:	add    al,0x2a
  4360df:	pusha  
  4360e0:	push   DWORD PTR [ecx+0x830000]
  4360e6:	cli    
  4360e7:	(bad)  
  4360e8:	cmp    al,0xff
  4360ea:	push   edx
  4360eb:	push   cs
  4360ec:	jmp    DWORD PTR [ecx-0x2a]
  4360ef:	retf   0xa000
  4360f2:	cmp    edi,0xffffff83
  4360f5:	add    BYTE PTR [eax-0x55005601],al
  4360fb:	ds int3 
  4360fd:	inc    ecx
  4360fe:	pop    edi
  4360ff:	sub    eax,0xffc283
  436104:	dec    esp
  436106:	cmp    BYTE PTR [ecx+0x334f89cc],cl
  43610c:	add    bh,dh
  43610e:	loop   0x436165
  436110:	inc    DWORD PTR [esi-0x1]
  436113:	mov    DWORD PTR [ebx-0x62004f77],eax
  436119:	dec    DWORD PTR [ebx-0x62]
  43611c:	call   DWORD PTR [ecx]
  43611e:	mov    bh,0x3b
  436120:	add    BYTE PTR [ebx+eax*4],dl
  436123:	inc    DWORD PTR [eax]
  436125:	int3   
  436126:	idiv   edi
  436128:	test   eax,0xccdf8a00
  43612d:	push   ebx
  43612e:	loopne 0x4360b0
  436130:	(bad)  
  436131:	out    dx,eax
  436132:	add    BYTE PTR [eax],al
  436134:	mov    DWORD PTR [eax],eax
  436136:	dec    eax
  436137:	add    BYTE PTR [edi-0x7c88057d],dh
  43613d:	xlat   BYTE PTR ds:[ebx]
  43613e:	mov    esp,0x83d2ff00
  436143:	mov    DWORD PTR [eax],eax
  436145:	int3   
  436146:	test   BYTE PTR [ebx+0x660cc16],al
  43614c:	add    dh,dh
  43614e:	jae    0x436137
  436150:	call   ebp
  436152:	dec    esp
  436154:	cmp    edi,0xfffffff8
  436157:	call   FWORD PTR [ecx]
  436159:	and    DWORD PTR [esi-0x6c],0xffffffcc
  43615d:	mov    ds:0xd8001f98,al
  436162:	(bad)  
  436163:	(bad)  
  436164:	inc    DWORD PTR [ebx+0xe4893a]
  43616a:	inc    esp
  43616b:	dec    eax
  43616c:	add    ah,al
  43616e:	sub    eax,0xcc0dcc76
  436173:	add    BYTE PTR [ebx+0x17839c00],al
  436179:	adc    ebx,0x11
  43617c:	dec    DWORD PTR [eax]
  43617e:	fisubr WORD PTR [eax-0x33ff7401]
  436184:	dec    esp
  436186:	sbb    edi,edi
  436188:	dec    edi
  436189:	dec    DWORD PTR [esp+ebx*4+0x3c67ffff]
  436190:	dec    DWORD PTR [ecx-0xff0100]
  436196:	xchg   edi,eax
  436197:	add    dl,dh
  436199:	cmp    DWORD PTR [esi-0x56],0xffffffff
  43619d:	aas    
  43619e:	out    0xee,eax
  4361a0:	dec    esi
  4361a2:	(bad)  
  4361a3:	inc    DWORD PTR [ebx-0x6e001a34]
  4361a9:	add    BYTE PTR [edx-0x7d],bl
  4361ac:	dec    DWORD PTR [esi+0x2b]
  4361af:	repnz add BYTE PTR [ebx+0x0],ah
  4361b3:	add    DWORD PTR [eax],0xffffffff
  4361b6:	(bad)  
  4361b7:	push   DWORD PTR [eax-0x1]
  4361ba:	push   ds
  4361bb:	add    DWORD PTR [eax],0x891cfe6d
  4361c1:	dec    eax
  4361c2:	add    BYTE PTR [ecx-0x7c6eff01],cl
  4361c8:	xor    al,0xff
  4361ca:	(bad)  
  4361cb:	in     al,0xff
  4361cd:	pushf  
  4361ce:	or     ebx,ecx
  4361d0:	call   FWORD PTR [esp+ecx*8+0x1dff8989]
  4361d7:	int3   
  4361d8:	jmp    0x2945:0x83000500
  4361df:	adc    BYTE PTR [eax],al
  4361e1:	repz inc DWORD PTR [eax]
  4361e4:	int3   
  4361e5:	jmp    DWORD PTR [eax+eax*1+0x63]
  4361e9:	jmp    FWORD PTR [edx]
  4361eb:	stos   DWORD PTR es:[edi],eax
  4361ec:	call   DWORD PTR [edx]
  4361ee:	loope  0x4361b9
  4361f0:	add    dh,al
  4361f2:	add    bh,bh
  4361f4:	mov    DWORD PTR [ecx-0x283321],ecx
  4361fa:	jge    0x436274
  4361fc:	inc    DWORD PTR [ecx-0xa00767d]
  436202:	int3   
  436203:	mov    DWORD PTR [eax],eax
  436205:	call   FWORD PTR [eax-0xdff8c00]
  43620b:	add    eax,DWORD PTR [ebx-0x640700]
  436211:	(bad)  
  436213:	inc    DWORD PTR [eax]
  436215:	call   DWORD PTR [edx+0x6b007eff]
  43621b:	pop    ebp
  43621c:	int3   
  43621d:	mov    edx,0x218378f8
  436222:	int3   
  436223:	add    bh,bh
  436225:	dec    ecx
  436227:	push   DWORD PTR [ebx]
  436229:	jmp    DWORD PTR [ebx+0xfa10069]
  43622f:	push   ebx
  436230:	sbb    DWORD PTR [ebx+0x0],0x0
  436234:	(bad)  
  436235:	push   DWORD PTR [ebx-0x707d]
  43623b:	or     edi,edi
  43623d:	mov    eax,ds:0xf50041ee
  436242:	inc    DWORD PTR [eax]
  436244:	add    ah,cl
  436246:	ja     0x436214
  436248:	jmp    0x4361cd
  43624a:	call   0x881e62bc
  43624f:	inc    esp
  436250:	call   FWORD PTR ds:0x89898300
  436256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436257:	add    al,dl
  436259:	jmp    DWORD PTR [edx+0x328dff3d]
  43625f:	xchg   bh,bh
  436261:	repnz add BYTE PTR [eax],al
  436264:	int3   
  436265:	add    DWORD PTR [ebp-0x34],0xffffffea
  436269:	jmp    FWORD PTR [edx+0x3ac0001e]
  43626f:	aas    
  436270:	inc    DWORD PTR ds:0xccffffff
  436276:	sbb    edi,edi
  436278:	pop    ebp
  436279:	cmp    DWORD PTR [edi],0x1f
  43627c:	add    BYTE PTR [edx],al
  43627e:	inc    ebp
  43627f:	stos   BYTE PTR es:[edi],al
  436280:	(bad)  
  436281:	jmp    0x32:0xffff0000
  436288:	je     0x436289
  43628a:	dec    esp
  43628b:	fiadd  WORD PTR [eax]
  43628d:	xchg   DWORD PTR [ebx-0x33787c43],edx
  436293:	(bad)  
  436294:	inc    DWORD PTR [eax]
  436296:	sub    al,BYTE PTR [ebx+0x50be007b]
  43629c:	add    DWORD PTR [edx+ecx*1-0x7c990087],0xffffffff
  4362a4:	(bad)  
  4362a5:	dec    DWORD PTR [ecx+0x0]
  4362a8:	aam    0x83
  4362aa:	adc    BYTE PTR [ebx-0x76c3ad7d],bh
  4362b0:	call   FWORD PTR [esp+ecx*8+0x0]
  4362b4:	(bad)  
  4362b5:	jmp    DWORD PTR [edx]
  4362b7:	call   DWORD PTR [ebx+0xf7300]
  4362bd:	addr16 jge 0x436282
  4362c0:	add    BYTE PTR [ebx+0x89ff],al
  4362c6:	or     al,0x0
  4362c8:	inc    esp
  4362c9:	int3   
  4362ca:	adc    eax,0x128600a9
  4362cf:	ds cmp ecx,0xffffffff
  4362d3:	inc    DWORD PTR [eax]
  4362d5:	jmp    DWORD PTR [edi-0x3cffa17d]
  4362db:	daa    
  4362dc:	add    BYTE PTR [edx+0x2a006237],al
  4362e2:	mov    esp,ecx
  4362e4:	cmp    edi,0x53
  4362e7:	add    BYTE PTR [ebp-0x3335d900],bl
  4362ed:	loope  0x43628c
  4362ef:	mov    bh,0xff
  4362f1:	adc    al,0xff
  4362f3:	add    BYTE PTR [eax],al
  4362f5:	call   FWORD PTR [ecx+0x4f0056ff]
  4362fb:	add    edi,edi
  4362fd:	dec    edi
  4362fe:	cdq    
  4362ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436300:	add    BYTE PTR [ecx+0x0],al
  436303:	(bad)  
  436304:	inc    DWORD PTR [eax]
  436306:	icebp  
  436307:	(bad)  
  436308:	cmp    eax,0xffca1cff
  43630d:	jge    0x4362dd
  43630f:	jmp    0x143599d
  436314:	int3   
  436315:	add    BYTE PTR [ecx+ecx*4],bl
  436318:	jo     0x436319
  43631a:	shr    DWORD PTR [ebx+eax*4+0x1b],0x61
  43631f:	xchg   DWORD PTR [eax],eax
  436321:	aas    
  436322:	add    BYTE PTR [ecx-0xf30100],cl
  436328:	adc    BYTE PTR [eax],al
  43632a:	and    DWORD PTR [edi-0x2f33ee7d],edi
  436330:	jmp    edx
  436332:	add    BYTE PTR [ecx-0x76197700],cl
  436338:	mov    WORD PTR [ebx+0x328932dd],es
  43633e:	imul   ch
  436340:	push   DWORD PTR [ebp+0xffffff]
  436346:	mov    ah,0xff
  436348:	push   0xff9dd100
  43634d:	idiv   BYTE PTR [eax-0x7cd800f8]
  436353:	add    bh,bh
  436355:	push   ecx
  436357:	add    BYTE PTR ds:0xff60f300,bl
  43635d:	sbb    al,0x66
  43635f:	push   ebp
  436360:	call   FWORD PTR [ebx-0x7c010000]
  436366:	xor    al,BYTE PTR [ebx-0x3fc9001d]
  43636c:	xor    edi,0x29
  43636f:	push   ss
  436370:	int3   
  436371:	repnz add bh,bh
  436374:	int3   
  436375:	sbb    DWORD PTR [esi-0x34],0x69
  436379:	jmp    DWORD PTR [edi+0x32]
  43637c:	jmp    DWORD PTR [esi-0x36]
  43637f:	fild   WORD PTR [eax]
  436381:	push   ebp
  436382:	add    BYTE PTR [eax],al
  436384:	cmp    edi,0x3b
  436387:	(bad)  
  436388:	mov    edi,0xffde67ff
  43638d:	sbb    ecx,edi
  43638f:	popa   
  436390:	add    BYTE PTR [eax-0x767d],cl
  436396:	hlt    
  436397:	cmp    DWORD PTR [ecx-0x1],0xffffffe1
  43639b:	jbe    0x436369
  43639d:	or     eax,0x27cc7a67
  4363a2:	add    BYTE PTR [eax],al
  4363a4:	dec    DWORD PTR [ecx-0x66ff5f]
  4363aa:	addr16 clc 
  4363ac:	add    bl,ch
  4363ae:	inc    edx
  4363af:	cmc    
  4363b0:	call   eax
  4363b2:	int3   
  4363b3:	int3   
  4363b4:	(bad)  
  4363b5:	jmp    FWORD PTR [edi+edi*8-0x6f]
  4363b9:	add    BYTE PTR [edi+0x2492ff0e],ah
  4363bf:	bswap  esp
  4363c1:	cmp    DWORD PTR [eax],eax
  4363c3:	mov    edi,edi
  4363c5:	add    BYTE PTR [eax+eax*1-0x71b0ff0b],ch
  4363cc:	call   FWORD PTR [ecx]
  4363ce:	or     ah,BYTE PTR [eax]
  4363d0:	add    BYTE PTR [ebp-0x1],cl
  4363d3:	add    BYTE PTR [eax],al
  4363d5:	xor    DWORD PTR [edi-0x1],0xffffffd1
  4363d9:	add    BYTE PTR [eax-0x17],bh
  4363dc:	push   edx
  4363de:	pop    ebx
  4363df:	hlt    
  4363e0:	add    BYTE PTR [edi],dh
  4363e2:	add    bh,bh
  4363e4:	add    BYTE PTR [eax],al
  4363e6:	pop    edi
  4363e7:	push   DWORD PTR [esi-0x33bb01]
  4363ed:	mov    ah,0x12
  4363ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4363f0:	jmp    FWORD PTR [esi]
  4363f2:	(bad)  
  4363f3:	inc    DWORD PTR [eax]
  4363f5:	add    BYTE PTR ds:0xfcff30ff,cl
  4363fb:	into   
  4363fc:	call   DWORD PTR [ebp-0x19]
  4363ff:	pop    ds
  436400:	(bad)  
  436401:	mov    esp,0xff00
  436406:	mov    BYTE PTR [eax],al
  436408:	mov    bh,0x0
  43640a:	imul   ebp,DWORD PTR [ebx+0x68b8b500],0xffffff83
  436411:	adc    al,0xff
  436413:	(bad)  
  436414:	(bad)  
  436415:	inc    esp
  436417:	sbb    DWORD PTR [edi-0x1],0x40
  43641b:	fiadd  DWORD PTR [eax]
  43641d:	aam    0x9e
  43641f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436420:	add    ah,ch
  436422:	add    ah,cl
  436424:	inc    DWORD PTR [eax]
  436426:	add    BYTE PTR ds:[ecx-0xe4101],al
  43642d:	test   BYTE PTR [edx+0x44],0x83
  436431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436432:	(bad)  
  436433:	inc    DWORD PTR [eax]
  436435:	add    cl,bh
  436437:	sub    ecx,0xffffff83
  43643a:	out    dx,al
  43643b:	jl     0x43643c
  43643d:	stc    
  43643e:	pop    ss
  43643f:	js     0x436440
  436441:	sbb    eax,0xffff83
  436446:	mov    eax,ds:0xb3ff23cc
  43644b:	pop    esi
  43644c:	push   DWORD PTR [ecx+0x55ffcd33]
  436452:	inc    DWORD PTR [eax]
  436454:	add    BYTE PTR [eax],al
  436456:	mov    esi,0x1cff4f83
  43645b:	xlat   BYTE PTR ds:[ebx]
  43645c:	jmp    DWORD PTR [ecx+0x66]
  43645f:	in     al,dx
  436460:	mov    edi,ebp
  436462:	dec    DWORD PTR [ecx+0xc70000]
  436468:	or     eax,0x5d28ff
  43646d:	jno    0x436494
  43646f:	and    al,0xcc
  436471:	mov    edi,?
  436473:	dec    esp
  436475:	add    BYTE PTR [ebp-0x1],bh
  436478:	fiadd  DWORD PTR [ebx-0x29000b83]
  43647e:	lods   al,BYTE PTR ds:[esi]
  43647f:	jo     0x43640a
  436481:	or     edi,edi
  436483:	inc    DWORD PTR [eax]
  436485:	or     DWORD PTR [esi-0x59002e01],0xffffffef
  43648c:	inc    DWORD PTR [ebx+eiz*4-0x334e33b2]
  436493:	cmp    edi,0xffffff83
  436496:	xchg   ebp,eax
  436497:	(bad)  
  436498:	jns    0x43649a
  43649a:	ret    
  43649b:	push   0xffffff83
  43649d:	mov    WORD PTR [ecx+eax*2],fs
  4364a0:	mov    DWORD PTR [ecx-0x7d00],edi
  4364a6:	mov    bl,0xff
  4364a8:	lahf   
  4364a9:	jmp    DWORD PTR [ebp+0x2da083ac]
  4364af:	mov    al,ds:0xcc43ff
  4364b4:	dec    DWORD PTR [ecx-0x7c1dffec]
  4364ba:	jno    0x436509
  4364bc:	add    BYTE PTR [edx-0x69],ah
  4364bf:	sbb    BYTE PTR [eax],al
  4364c1:	dec    ecx
  4364c2:	add    BYTE PTR [ebx-0x7c733301],al
  4364c8:	cdq    
  4364c9:	add    BYTE PTR [eax+0x33],dh
  4364cc:	int3   
  4364cd:	dec    edx
  4364ce:	push   eax
  4364cf:	jg     0x43645a
  4364d1:	je     0x436456
  4364d3:	cmp    edi,0x0
  4364d6:	jg     0x43645b
  4364d8:	sbb    eax,0x83c67883
  4364dd:	xor    al,0x42
  4364df:	dec    edx
  4364e0:	mov    eax,eax
  4364e2:	inc    DWORD PTR [ebx-0x210100]
  4364e8:	adc    eax,0xcc4963cc
  4364ed:	jecxz  0x436478
  4364ef:	jecxz  0x43647a
  4364f1:	push   ss
  4364f2:	inc    DWORD PTR [eax]
  4364f4:	inc    DWORD PTR [eax]
  4364f6:	push   0xffffffff
  4364f8:	(bad)  
  4364fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4364fb:	xlat   BYTE PTR ds:[ebx]
  4364fc:	add    BYTE PTR [ebp-0x25],cl
  4364ff:	xor    esp,ecx
  436501:	aad    0x0
  436503:	add    BYTE PTR [ecx+0x34ff1000],cl
  436509:	int3   
  43650a:	sti    
  43650b:	int3   
  43650c:	push   DWORD PTR [ebp-0x68]
  43650f:	mov    edi,0x83ff5500
  436514:	cmp    edi,0x2f
  436517:	call   DWORD PTR [eax+eax*1-0x63]
  43651b:	cmp    eax,0x4b2953cc
  436520:	jmp    DWORD PTR [ecx]
  436522:	add    BYTE PTR [eax],al
  436524:	inc    DWORD PTR [ebx-0x76d97ccf]
  43652a:	aad    0x8d
  43652c:	dec    DWORD PTR [ecx-0x6500da85]
  436532:	add    BYTE PTR [ebx-0x777c01],al
  436538:	xchg   esp,ecx
  43653a:	mov    ebx,0xa250035
  43653f:	sar    bh,cl
  436541:	cld    
  436542:	inc    DWORD PTR [eax]
  436544:	(bad)  
  436545:	call   FWORD PTR [edi]
  436547:	add    BYTE PTR [edi+0x863f00],dl
  43654d:	mov    edi,0x2f83747e
  436552:	cmp    edi,0xffffff83
  436555:	int3   
  436556:	mov    edi,edi
  436558:	sbb    esp,ecx
  43655a:	into   
  43655b:	cmp    eax,0x91da5b83
  436560:	inc    esi
  436562:	(bad)  
  436563:	inc    DWORD PTR [eax]
  436565:	inc    DWORD PTR [edi]
  436567:	add    BYTE PTR [edx-0x76f24000],dl
  43656d:	mov    ds:0xf7ffe187,al
  436572:	add    bh,bh
  436574:	mov    edi,edi
  436576:	ins    DWORD PTR es:[edi],dx
  436577:	call   FWORD PTR [ebp+0xfda4ff]
  43657d:	shl    DWORD PTR [eax+esi*2-0x7cff947d],0x0
  436585:	mov    edi,edi
  436587:	add    DWORD PTR [esi-0x1],0x11
  43658b:	std    
  43658c:	add    bl,ch
  43658e:	nop
  43658f:	fwait
  436590:	dec    ebx
  436592:	int3   
  436593:	add    DWORD PTR [eax],0xffffff83
  436596:	mov    al,0xff
  436598:	add    BYTE PTR ds:[edx-0x6f387c91],cl
  43659f:	push   es
  4365a0:	jmp    DWORD PTR [esi-0x1]
  4365a3:	add    DWORD PTR [eax],0xffffffff
  4365a6:	(bad)  
  4365a8:	or     al,0xff
  4365aa:	ins    DWORD PTR es:[edi],dx
  4365ab:	push   esp
  4365ac:	add    BYTE PTR [ebp-0x7a],al
  4365af:	mov    esi,0xff006cff
  4365b4:	(bad)  
  4365b5:	(bad)  
  4365b6:	fmul   DWORD PTR [ecx+0x16ca8325]
  4365bc:	call   FWORD PTR [edi-0x3e00aff2]
  4365c2:	cmp    edi,0xffffffff
  4365c5:	inc    DWORD PTR [ebp-0x1]
  4365c8:	xchg   esp,eax
  4365c9:	add    BYTE PTR [ebp+edx*4+0x44fa9600],bl
  4365d0:	add    BYTE PTR [ecx-0x100],cl
  4365d6:	xchg   esp,eax
  4365d7:	add    BYTE PTR [eax+0xc5bdff],cl
  4365dd:	std    
  4365de:	sti    
  4365df:	adc    edi,edi
  4365e1:	sti    
  4365e2:	dec    esp
  4365e4:	add    ah,cl
  4365e6:	ins    DWORD PTR es:[edi],dx
  4365e7:	mov    DWORD PTR [ebp-0x7c33bd01],edx
  4365ed:	add    eax,0xa6ff1fc4
  4365f2:	cmp    edi,0x0
  4365f5:	add    BYTE PTR [ecx-0x34],bh
  4365f8:	cmp    bh,bh
  4365fa:	push   esp
  4365fb:	popf   
  4365fc:	call   FWORD PTR [esi+ebp*2]
  4365ff:	int3   
  436600:	jmp    FWORD PTR [edi-0x1]
  436603:	(bad)  
  436604:	inc    DWORD PTR [eax]
  436606:	push   edi
  436607:	call   DWORD PTR [edx-0x1]
  43660a:	jp     0x436668
  43660c:	inc    DWORD PTR [esi]
  43660e:	sbb    cl,BYTE PTR [edi-0x2c00]
  436614:	add    bh,bh
  436616:	and    bh,bh
  436618:	inc    eax
  436619:	add    BYTE PTR [edx],dh
  43661b:	push   ss
  43661c:	add    BYTE PTR [edi-0x2],ch
  43661f:	push   DWORD PTR ss:[edx]
  436622:	dec    DWORD PTR [ecx+0x6000ff]
  436628:	call   0x1402ab6
  43662d:	mov    al,ss:0x2aff41
  436633:	add    ah,cl
  436635:	(bad)  
  436636:	jnp    0x436637
  436638:	or     DWORD PTR [ecx-0x3a76538c],0xeffa8a4
  436642:	inc    DWORD PTR [ebx-0x150001]
  436648:	dec    ebp
  436649:	add    BYTE PTR [edx-0x47],al
  43664c:	int3   
  43664d:	xchg   ecx,eax
  43664e:	dec    ebp
  43664f:	stos   BYTE PTR es:[edi],al
  436650:	inc    DWORD PTR [ebp-0xff7c7d]
  436656:	cmp    edi,0x1eb8ff2f
  43665c:	call   DWORD PTR [esi-0x3700ffe8]
  436662:	add    bh,bh
  436664:	add    DWORD PTR [eax],0xffffffa9
  436667:	int3   
  436668:	sub    BYTE PTR [eax],al
  43666a:	push   esp
  43666b:	dec    edi
  43666c:	dec    ebp
  43666e:	leave  
  43666f:	jmp    0x430574
  436674:	add    ah,cl
  436676:	add    eax,0xb6ff2c00
  43667b:	sbb    al,BYTE PTR [eax]
  43667d:	cmp    BYTE PTR [edi+0xbf8370],al
  436683:	dec    DWORD PTR [ecx+0x3600ed00]
  436689:	(bad)  
  43668a:	fild   DWORD PTR [edx]
  43668c:	adc    DWORD PTR [esi+0x42ffcab9],0x0
  436693:	int3   
  436694:	int3   
  436695:	add    BYTE PTR [eax],al
  436697:	dec    DWORD PTR [ecx+0x4ac00]
  43669d:	or     BYTE PTR [ebx],dh
  43669f:	icebp  
  4366a0:	add    BYTE PTR ds:0xffffff00,al
  4366a6:	and    cl,ah
  4366a8:	mov    ds:0xcc098400,eax
  4366ad:	and    edi,eax
  4366af:	adc    bh,bh
  4366b1:	mov    bl,0xff
  4366b3:	(bad)  
  4366b4:	inc    DWORD PTR [eax]
  4366b6:	aam    0x0
  4366b8:	dec    dx
  4366bb:	or     edi,edi
  4366bd:	lahf   
  4366be:	pop    esp
  4366bf:	jbe    0x4366c0
  4366c1:	cld    
  4366c2:	cmp    edi,0xffffffcc
  4366c5:	int3   
  4366c6:	push   ebp
  4366c7:	add    BYTE PTR [edi+0x52decc],ah
  4366cd:	mov    ebx,DWORD PTR [edi-0x987624]
  4366d3:	(bad)  
  4366d4:	inc    DWORD PTR [ebx-0xb0006d]
  4366da:	mov    dh,0xd2
  4366dc:	jmp    DWORD PTR [edi-0x7d]
  4366df:	stc    
  4366e0:	inc    esp
  4366e2:	(bad)  
  4366e3:	(bad)  
  4366e4:	(bad)  
  4366e5:	(bad)  
  4366e6:	clc    
  4366e7:	add    bl,dh
  4366e9:	push   edi
  4366eb:	cwde   
  4366ec:	jmp    FWORD PTR [edx+0x6c]
  4366ef:	stos   BYTE PTR es:[edi],al
  4366f0:	add    BYTE PTR [esi-0x7c007c01],dl
  4366f6:	or     edi,edi
  4366f8:	cmp    edi,edi
  4366fa:	jnp    0x436774
  4366fc:	int3   
  4366fd:	(bad)  
  4366ff:	jp     0x436701
  436701:	out    0xcc,eax
  436703:	inc    DWORD PTR [eax]
  436705:	call   FWORD PTR [eax+eax*1-0x7e84ffce]
  43670c:	and    ebx,0x34
  43670f:	pop    ss
  436710:	add    dl,dh
  436712:	int3   
  436713:	add    BYTE PTR [eax],al
  436715:	or     DWORD PTR ds:0x8affd200,0x52
  43671c:	add    BYTE PTR [ebx-0x69008128],cl
  436722:	add    bh,bh
  436724:	(bad)  
  436725:	call   DWORD PTR [ebx]
  436727:	add    BYTE PTR [ebx+eax*4+0x730091cf],dh
  43672e:	loopne 0x436704
  436730:	add    BYTE PTR [esp+ecx*8+0x3d0000ff],cl
  436737:	jmp    DWORD PTR [eax+0x0]
  43673a:	gs mov bh,bh
  43673d:	adc    edx,eax
  43673f:	aam    0x0
  436741:	loop   0x436742
  436743:	mov    edi,edi
  436745:	call   esi
  436747:	dec    DWORD PTR [edi+edi*8-0x3a]
  43674b:	mov    al,ds:0xbbdc2100
  436750:	inc    esi
  436752:	inc    DWORD PTR [eax]
  436754:	inc    DWORD PTR [eax]
  436756:	mov    bh,bh
  436758:	jmp    0x436726
  43675a:	imul   ecx,DWORD PTR [eax],0x557512cc
  436760:	add    BYTE PTR [eax],ch
  436762:	dec    DWORD PTR [ecx-0x7c007d]
  436768:	popf   
  436769:	push   DWORD PTR [eax+0xf]
  43676c:	mov    ecx,ebp
  43676e:	(bad)  
  43676f:	jnp    0x436770
  436771:	fdivr  st,st(7)
  436773:	(bad)  
  436774:	inc    DWORD PTR [eax]
  436776:	cmp    eax,DWORD PTR [eax]
  436778:	cmp    al,0xff
  43677a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43677b:	(bad)  
  43677c:	inc    edi
  43677e:	pop    esp
  43677f:	fcos   
  436781:	pop    esi
  436782:	inc    DWORD PTR [eax]
  436784:	int3   
  436785:	adc    DWORD PTR [ecx-0x77],0x60
  436789:	add    BYTE PTR [esi+esi*1+0x4951b5ff],bl
  436790:	int3   
  436791:	cmp    eax,0xffffffff
  436796:	out    dx,al
  436797:	inc    DWORD PTR [ebx]
  436799:	adc    esp,0xffffffb9
  43679c:	(bad)  
  43679d:	out    dx,eax
  43679e:	mov    ebp,0x892cffb5
  4367a3:	(bad)  
  4367a4:	dec    DWORD PTR [ecx-0x7533e9]
  4367aa:	pop    eax
  4367ab:	(bad)  
  4367ad:	test   DWORD PTR [esi-0xd90094],0x4dffcc00
  4367b7:	call   DWORD PTR [esi]
  4367b9:	and    DWORD PTR [ebx-0x7d8fff3e],0xfffffff7
  4367c0:	add    BYTE PTR [edx+0xffffcc],bh
  4367c6:	sbb    DWORD PTR [eax],eax
  4367c8:	mov    ds:0x4a9ff,eax
  4367cd:	rcl    DWORD PTR [ebp+0x43],cl
  4367d0:	and    DWORD PTR [esi-0x77],0xffffffff
  4367d4:	(bad)  
  4367d5:	jmp    FWORD PTR [eax-0x1]
  4367d8:	dec    ebp
  4367d9:	add    BYTE PTR [edi],cl
  4367db:	xor    al,0x0
  4367dd:	fisubr WORD PTR [edi]
  4367df:	out    dx,al
  4367e0:	sbb    DWORD PTR [eax],0xffffffff
  4367e3:	add    DWORD PTR [ebx+0x4fffa3ff],0xffffffff
  4367ea:	dec    edi
  4367eb:	mov    bh,0x0
  4367ed:	sbb    al,dh
  4367ef:	sub    bh,bh
  4367f1:	sub    bh,bh
  4367f3:	int3   
  4367f4:	(bad)  
  4367f5:	inc    DWORD PTR [esp+ecx*8+0x34d4ff83]
  4367fc:	sub    DWORD PTR [ebx-0x8],0x75
  436800:	or     DWORD PTR [edx-0x1],0x3
  436807:	add    BYTE PTR [edi-0x7cf05001],cl
  43680d:	adc    eax,0x4d00a6db
  436812:	(bad)  
  436813:	dec    esp
  436815:	xor    DWORD PTR [eax+eax*1+0x73a7cc3f],0xffffffff
  43681d:	rol    esp,cl
  43681f:	xchg   ebx,eax
  436820:	dec    ebp
  436822:	add    BYTE PTR [eax],al
  436824:	cmp    edi,0xfffffff2
  436827:	mov    DWORD PTR [ebp-0x3a2f00],eax
  43682d:	inc    esp
  43682e:	retf   
  43682f:	pop    ds
  436830:	(bad)  
  436831:	mov    ecx,0xff0000ff
  436836:	fwait
  436837:	inc    DWORD PTR [esi-0x344101]
  43683d:	popf   
  43683e:	sbb    eax,0xf6ff9b
  436843:	int3   
  436844:	add    BYTE PTR [eax],al
  436846:	les    eax,FWORD PTR [eax]
  436848:	jle    0x436849
  43684a:	nop
  43684b:	loop   0x436819
  43684d:	addr16 cdq 
  43684f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436850:	push   DWORD PTR [eax]
  436852:	inc    DWORD PTR [eax]
  436854:	add    ah,cl
  436856:	test   ah,0xed
  436859:	dec    DWORD PTR [edx]
  43685b:	fmul   st(4),st
  43685d:	jo     0x436815
  43685f:	(bad)  
  436860:	push   DWORD PTR [eax+eax*1-0x357cff01]
  436867:	jmp    FWORD PTR ds:0xcca8f9ff
  43686d:	xchg   edx,eax
  43686e:	add    BYTE PTR [esp+ecx*8+0x4f],dh
  436872:	add    BYTE PTR [eax],al
  436874:	add    BYTE PTR [eax],al
  436876:	stos   DWORD PTR es:[edi],eax
  436877:	(bad)  
  436878:	out    dx,eax
  436879:	int3   
  43687a:	pop    ebp
  43687b:	stos   BYTE PTR es:[edi],al
  43687c:	call   esp
  43687e:	loopne 0x43687c
  436880:	int3   
  436881:	or     al,BYTE PTR [eax]
  436883:	add    bh,bh
  436885:	(bad)  
  436886:	js     0x436887
  436888:	cmp    eax,0xf02a00
  43688d:	ret    
  43688e:	ins    DWORD PTR es:[edi],dx
  43688f:	adc    cl,BYTE PTR [ecx-0xff007d]
  436895:	mov    DWORD PTR [edi+0x5ffe9ff],ebp
  43689b:	imul   eax,DWORD PTR [eax],0x7c
  43689e:	ins    BYTE PTR es:[edi],dx
  43689f:	xor    eax,0x6bff
  4368a4:	(bad)  
  4368a5:	jmp    DWORD PTR [ecx-0x1]
  4368a8:	mov    ebp,0x1695ff
  4368ad:	popf   
  4368ae:	adc    DWORD PTR [ebx-0x1],edi
  4368b1:	or     BYTE PTR [eax],al
  4368b3:	add    bh,bh
  4368b5:	jmp    FWORD PTR [ebx]
  4368b7:	inc    DWORD PTR [esi]
  4368b9:	(bad)  
  4368ba:	clc    
  4368bb:	pop    ebp
  4368bc:	jmp    DWORD PTR [ecx+0x18]
  4368bf:	outs   dx,BYTE PTR ds:[esi]
  4368c0:	push   DWORD PTR [edi]
  4368c2:	inc    DWORD PTR [eax]
  4368c4:	add    BYTE PTR [eax],al
  4368c6:	ret    0x12ff
  4368c9:	sbb    DWORD PTR [ecx],0xffffff89
  4368cc:	add    ah,ch
  4368ce:	pop    eax
  4368cf:	in     eax,dx
  4368d0:	add    bl,dh
  4368d2:	(bad)  
  4368d3:	(bad)  
  4368d4:	inc    DWORD PTR [eax]
  4368d6:	mov    ebx,0x83005eff
  4368db:	xchg   edx,eax
  4368dc:	mov    DWORD PTR [ecx],eax
  4368de:	pop    ecx
  4368df:	jnp    0x4368e0
  4368e1:	aam    0xff
  4368e3:	dec    esp
  4368e5:	jmp    DWORD PTR [ebx-0x7d]
  4368e8:	sub    al,0xff
  4368ea:	inc    ecx
  4368eb:	inc    edx
  4368ec:	add    ah,dh
  4368ee:	xchg   edi,eax
  4368ef:	clc    
  4368f0:	(bad)  
  4368f1:	jg     0x4368f2
  4368f3:	int3   
  4368f4:	inc    DWORD PTR [eax]
  4368f6:	sub    bh,bh
  4368f8:	adc    eax,DWORD PTR [eax]
  4368fa:	or     al,0x30
  4368fc:	int3   
  4368fd:	push   edi
  4368fe:	retf   0xffc6
  436901:	jae    0x436902
  436903:	inc    DWORD PTR [eax]
  436905:	push   DWORD PTR [ecx+ecx*4]
  436908:	sub    al,BYTE PTR [ebx+0x5fccac44]
  43690e:	jbe    0x4368fe
  436910:	add    BYTE PTR [eax],ch
  436912:	mov    edi,edi
  436914:	cmp    edi,0x17
  436917:	mov    ebx,edx
  436919:	int3   
  43691a:	rcl    bl,1
  43691c:	(bad)  
  43691d:	sti    
  43691e:	fsubr  QWORD PTR [ebp-0x9401]
  436924:	or     esp,0xffffffe5
  436927:	inc    DWORD PTR [esi]
  436929:	cmp    DWORD PTR [edi-0x3c],0xffffffff
  43692d:	(bad)  
  43692f:	test   BYTE PTR [ebx-0xff001c],al
  436935:	push   DWORD PTR [esi-0x7d]
  436938:	fcos   
  43693a:	sub    eax,0x525a00df
  43693f:	arpl   di,di
  436941:	and    bh,bh
  436943:	add    BYTE PTR [eax],al
  436945:	call   FWORD PTR [edi]
  436947:	add    BYTE PTR [edi+0x244300],bh
  43694d:	lods   al,BYTE PTR ds:[esi]
  43694e:	sub    DWORD PTR [edi+0x0],ebp
  436951:	(bad)  
  436952:	inc    DWORD PTR [eax]
  436954:	mov    DWORD PTR [ebx-0x33bdff9a],eax
  43695a:	leave  
  43695b:	add    BYTE PTR [bp+0x3768],al
  436960:	call   FWORD PTR [ebx]
  436962:	cmp    edi,0xffffff83
  436965:	push   DWORD PTR [ecx]
  436967:	sbb    DWORD PTR [ebp-0x1],0xffffffd2
  43696b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43696c:	int3   
  43696d:	add    ch,ch
  43696f:	add    DWORD PTR [eax],0x0
  436972:	mov    edi,edi
  436974:	add    bh,bh
  436976:	icebp  
  436977:	add    bh,dh
  436979:	call   ebx
  43697b:	mov    bh,bh
  43697d:	and    al,BYTE PTR [esi+0x1a]
  436980:	dec    DWORD PTR [edx-0x1]
  436983:	inc    DWORD PTR [eax]
  436985:	(bad)  
  436986:	cmp    bh,bh
  436988:	or     bh,bh
  43698a:	add    ebp,DWORD PTR [edx-0x1]
  43698d:	sub    bl,dh
  43698f:	iret   
  436990:	push   DWORD PTR ds:0xff000083
  436996:	xchg   edx,eax
  436997:	(bad)  
  436998:	cmp    al,BYTE PTR [eax]
  43699a:	fild   DWORD PTR [edi-0x2d420477]
  4369a0:	add    BYTE PTR [eax+eax*1-0x1],dl
  4369a4:	inc    DWORD PTR [eax]
  4369a6:	lock int3 
  4369a8:	test   al,0x0
  4369aa:	loop   0x4369b5
  4369ac:	dec    DWORD PTR [ebx+0x37ffac48]
  4369b2:	inc    DWORD PTR [ebx+0x5d0089]
  4369b8:	mov    edi,edi
  4369ba:	mov    al,0x79
  4369bc:	(bad)  
  4369bd:	ds cmp eax,0xff76ff19
  4369c3:	add    bh,bh
  4369c5:	push   DWORD PTR [edi]
  4369c7:	dec    DWORD PTR [edx]
  4369c9:	mov    DWORD PTR [ecx+0x41],eax
  4369cc:	mov    DWORD PTR [ebx-0x16],esi
  4369cf:	push   ds
  4369d0:	mov    esi,edi
  4369d2:	inc    DWORD PTR [eax]
  4369d4:	add    BYTE PTR [ebx-0xaaff29],al
  4369da:	sub    eax,0xd220ff85
  4369df:	and    bh,bh
  4369e1:	xlat   BYTE PTR ds:[ebx]
  4369e2:	add    bh,bh
  4369e4:	add    BYTE PTR [eax],al
  4369e6:	jbe    0x43696b
  4369e8:	xchg   esp,eax
  4369e9:	jmp    FWORD PTR [edx+0x4c5afff6]
  4369ef:	vunpckhps ymm7,ymm0,ymm7
  4369f3:	int3   
  4369f4:	cmp    edi,0xffffff91
  4369f7:	push   DWORD PTR [ebx+0x0]
  4369fa:	xlat   BYTE PTR ds:[ebx]
  4369fb:	push   esi
  4369fc:	add    bh,ah
  4369fe:	fwait
  4369ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436a00:	add    BYTE PTR ds:0xccff00ff,ch
  436a06:	mov    edx,0xe90016ff
  436a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436a0c:	add    BYTE PTR [ecx],bl
  436a0e:	xor    al,0xfd
  436a10:	cmp    DWORD PTR [edi+0x0],0x0
  436a14:	add    BYTE PTR [ebx-0xa700bd],al
  436a1a:	adc    eax,0x5ffdffa0
  436a1f:	push   es
  436a20:	and    edx,0x0
  436a23:	inc    DWORD PTR [eax]
  436a25:	(bad)  
  436a26:	mov    edx,0x3783f3ff
  436a2b:	stos   BYTE PTR es:[edi],al
  436a2c:	add    BYTE PTR [ecx-0x7b],al
  436a2f:	(bad)  
  436a30:	int3   
  436a31:	mov    eax,ds:0xff00
  436a36:	fisttp QWORD PTR [ecx+0xfc0ff79]
  436a3c:	adc    edi,0x3e
  436a3f:	jle    0x436a40
  436a41:	jbe    0x436a42
  436a43:	mov    DWORD PTR [ebx-0x277cd200],eax
  436a49:	int3   
  436a4a:	and    ecx,DWORD PTR [bx+di-0x3c01]
  436a4f:	mov    esp,0xff890fff
  436a54:	add    DWORD PTR [eax],0x45
  436a57:	add    BYTE PTR [ebx],bh
  436a59:	push   ebx
  436a5b:	cli    
  436a5c:	int3   
  436a5d:	inc    edx
  436a5e:	push   ebp
  436a5f:	jbe    0x4369ea
  436a61:	rol    BYTE PTR [eax],1
  436a63:	add    bh,bh
  436a65:	int3   
  436a66:	test   BYTE PTR [eax],0x62
  436a69:	add    BYTE PTR [eax],ch
  436a6b:	xchg   edi,eax
  436a6c:	jmp    DWORD PTR ds:0xc40057a1
  436a72:	int3   
  436a73:	dec    DWORD PTR [ecx-0x697cb200]
  436a79:	int3   
  436a7a:	in     al,dx
  436a7b:	out    dx,al
  436a7c:	inc    DWORD PTR [ecx+0x22]
  436a7f:	push   edi
  436a80:	(bad)  
  436a81:	jnp    0x436a4f
  436a83:	(bad)  
  436a84:	(bad)  
  436a85:	call   FWORD PTR [eax]
  436a87:	jmp    FWORD PTR [edx-0x7d]
  436a8a:	loopne 0x436a33
  436a8c:	(bad)  
  436a8d:	jmp    0x7642b101
  436a92:	or     DWORD PTR [ecx+0x6ffff],0xffffff92
  436a99:	jmp    DWORD PTR [esp+edx*8]
  436a9c:	sbb    DWORD PTR [ecx-0x19],0xffffffb8
  436aa0:	add    bl,al
  436aa2:	or     esp,0xffffffff
  436aa5:	inc    esp
  436aa7:	push   DWORD PTR [edx-0xca6001]
  436aad:	lea    ecx,[eax+0x6d]
  436ab0:	and    DWORD PTR [ebx],0xffffffcc
  436ab3:	(bad)  
  436ab4:	inc    DWORD PTR [ebx-0x3307007f]
  436aba:	fld    DWORD PTR [esi+0xe79f00]
  436ac0:	call   DWORD PTR [edx]
  436ac2:	(bad)  
  436ac3:	inc    DWORD PTR [ebx-0x5cffd701]
  436ac9:	adc    esi,0x78
  436acc:	mov    DWORD PTR [edx-0x713390bd],ecx
  436ad2:	cmp    edi,0xffffffff
  436ad5:	add    BYTE PTR [esi+0x0],al
  436ad8:	sbb    eax,0xff8bf700
  436add:	pop    eax
  436ade:	cdq    
  436adf:	xchg   edx,eax
  436ae0:	jmp    FWORD PTR [edi+edi*8]
  436ae3:	mov    DWORD PTR [eax],eax
  436ae5:	jmp    DWORD PTR [edi]
  436ae7:	push   esp
  436ae9:	inc    DWORD PTR ds:0x259000fd
  436aef:	xor    eax,0xb900
  436af4:	add    BYTE PTR [ebx-0x76db009c],al
  436afa:	aam    0x1c
  436afc:	add    BYTE PTR [eax+0x44ff1b7e],bl
  436b02:	mov    edi,edi
  436b04:	add    BYTE PTR [ecx-0x764a33ea],cl
  436b0a:	mov    al,0x6b
  436b0c:	add    DWORD PTR [eax+0x2aff5555],0xffffff89
  436b13:	add    DWORD PTR [eax],0xffffff83
  436b16:	jbe    0x436b17
  436b18:	test   bh,bh
  436b1a:	cmp    al,0x63
  436b1c:	or     DWORD PTR [eax],0xffffffdd
  436b1f:	dec    ebp
  436b20:	(bad)  
  436b21:	fild   WORD PTR [eax]
  436b23:	int3   
  436b24:	mov    DWORD PTR [eax],eax
  436b26:	mov    eax,0xcfcc4300
  436b2b:	int    0xff
  436b2d:	stc    
  436b2e:	cdq    
  436b2f:	push   esi
  436b30:	xor    DWORD PTR [edx-0x7c007700],0x43
  436b37:	add    bh,bl
  436b39:	(bad)  
  436b3a:	call   ebx
  436b3c:	dec    DWORD PTR [edi]
  436b3e:	jp     0x436ae6
  436b40:	mov    ecx,edx
  436b42:	inc    DWORD PTR [eax]
  436b44:	mov    DWORD PTR [ebx-0xad763b],eax
  436b4a:	(bad)  
  436b4b:	and    al,BYTE PTR [eax]
  436b4d:	stos   DWORD PTR es:[edi],eax
  436b4e:	loopne 0x436b3b
  436b50:	(bad)  
  436b51:	std    
  436b52:	add    BYTE PTR [eax],al
  436b54:	(bad)  
  436b55:	call   FWORD PTR ds:0x480061ff
  436b5b:	imul   ecx,esp,0xcc5bd79d
  436b61:	push   ebx
  436b62:	add    bh,bh
  436b64:	add    bh,bh
  436b66:	mov    ebp,0x6cff2900
  436b6b:	xchg   ah,cl
  436b6d:	fisubr WORD PTR ds:[ebx]
  436b70:	int3   
  436b71:	add    eax,0xff89ff00
  436b76:	loope  0x436b77
  436b78:	mov    ds:0x26f683,eax
  436b7d:	jb     0x436bc9
  436b7f:	(bad)  
  436b80:	jmp    edi
  436b82:	inc    DWORD PTR [ebx-0x670000]
  436b88:	mov    edi,0xcced9f00
  436b8d:	sbb    BYTE PTR [ecx],bh
  436b8f:	ins    DWORD PTR es:[edi],dx
  436b90:	add    BYTE PTR [esp+ecx*8+0x0],al
  436b94:	inc    DWORD PTR [eax]
  436b96:	cmp    bh,bh
  436b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436b99:	int3   
  436b9a:	daa    
  436b9b:	(bad)  
  436b9c:	push   DWORD PTR [esi+0x5800200f]
  436ba2:	mov    edi,edi
  436ba4:	(bad)  
  436ba5:	inc    DWORD PTR [esi]
  436ba7:	sbb    esp,0x0
  436baa:	test   eax,0xfc4a839a
  436baf:	sub    al,0x89
  436bb1:	pop    edi
  436bb2:	inc    DWORD PTR [eax]
  436bb4:	add    BYTE PTR [eax],al
  436bb6:	push   edi
  436bb7:	add    BYTE PTR [ecx-0x5c5700],ah
  436bbd:	outs   dx,DWORD PTR ds:[esi]
  436bbe:	push   ds
  436bbf:	xor    DWORD PTR [ebx+0xff83cb],eax
  436bc5:	add    BYTE PTR [edi],al
  436bc7:	add    BYTE PTR [ebp-0xf84600],al
  436bcd:	sub    BYTE PTR [esi-0x33e5ff40],bl
  436bd3:	(bad)  
  436bd4:	inc    DWORD PTR [ebx-0x9c0074]
  436bda:	mov    esp,0x3e650054
  436bdf:	(bad)  
  436be1:	mov    eax,ds:0xffff8389
  436be6:	add    BYTE PTR [eax],0xe5
  436be9:	sbb    DWORD PTR [ebx],0x61
  436bec:	add    BYTE PTR [ecx],dl
  436bee:	int3   
  436bef:	(bad)  
  436bf0:	(bad)  
  436bf1:	cli    
  436bf2:	add    BYTE PTR [eax],al
  436bf4:	add    bh,bh
  436bf6:	call   FWORD PTR es:[ebx+eax*4+0x7d]
  436bfb:	add    eax,0xb7072483
  436c00:	add    bl,dl
  436c02:	(bad)  
  436c03:	inc    DWORD PTR [eax]
  436c05:	mov    DWORD PTR [ecx],esp
  436c07:	inc    DWORD PTR [esi-0x1]
  436c0a:	cmp    BYTE PTR [esi],dh
  436c0c:	add    BYTE PTR [edx-0x3c],bh
  436c0f:	into   
  436c10:	add    BYTE PTR [ebp-0x1],dl
  436c13:	(bad)  
  436c14:	inc    DWORD PTR [eax]
  436c16:	sub    al,0xff
  436c18:	cld    
  436c19:	inc    esp
  436c1b:	jmp    0xe383:0x730beeff
  436c22:	add    ah,cl
  436c24:	(bad)  
  436c25:	dec    DWORD PTR [ebp-0x1]
  436c28:	dec    ecx
  436c29:	(bad)  
  436c2a:	fisttp DWORD PTR [edx]
  436c2c:	dec    DWORD PTR ds:0x3dff3bc9
  436c32:	inc    DWORD PTR [eax]
  436c34:	mov    edi,edi
  436c36:	pushf  
  436c37:	mov    esi,ebx
  436c39:	(bad)  
  436c3a:	fcomp  QWORD PTR [edi]
  436c3c:	add    dh,bh
  436c3e:	push   ds
  436c3f:	gs inc edx
  436c42:	add    bh,bh
  436c44:	add    DWORD PTR [eax],0xffffffa2
  436c47:	jmp    DWORD PTR [edi-0x7cd0fc01]
  436c4d:	nop
  436c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436c4f:	add    BYTE PTR gs:[ebx-0x1],dl
  436c56:	scas   al,BYTE PTR es:[edi]
  436c57:	mov    DWORD PTR [edi-0x34],ebx
  436c5a:	xor    al,0x96
  436c5c:	add    BYTE PTR [edx-0x26],cl
  436c5f:	inc    BYTE PTR [eax]
  436c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436c62:	inc    DWORD PTR [ebx-0x767e7d00]
  436c68:	bound  eax,QWORD PTR [eax]
  436c6a:	inc    DWORD PTR ss:[ebx-0x169531]
  436c71:	jae    0x436c72
  436c73:	add    BYTE PTR [eax],al
  436c75:	add    dh,dh
  436c77:	add    BYTE PTR [edx],ah
  436c79:	jmp    DWORD PTR [esi-0x706000fd]
  436c7f:	popa   
  436c80:	add    DWORD PTR ds:0xffccffcc,0xffffff96
  436c87:	push   DWORD PTR [ebx-0x1]
  436c8a:	cwde   
  436c8b:	(bad)  
  436c8d:	out    dx,eax
  436c8e:	and    DWORD PTR [ecx],ebp
  436c90:	push   DWORD PTR [ebx+eax*4-0x34]
  436c94:	dec    DWORD PTR [ecx-0x33073356]
  436c9a:	jmp    FWORD PTR [ebx+0xb5545cc]
  436ca0:	add    cl,al
  436ca2:	dec    DWORD PTR [ecx+0x65ff00]
  436ca8:	sti    
  436ca9:	add    BYTE PTR [ecx+0x5e5cff1f],cl
  436caf:	fdivp  st(7),st
  436cb1:	mov    edi,edi
  436cb3:	add    BYTE PTR [ebx-0x47c8000],al
  436cb9:	jmp    DWORD PTR [edi+0x1f2583ca]
  436cbf:	push   ds
  436cc0:	add    BYTE PTR [edx-0x33340000],dl
  436cc6:	xchg   edi,eax
  436cc7:	call   edx
  436cc9:	add    BYTE PTR [edx+ebx*4-0x46df5801],ah
  436cd0:	push   DWORD PTR [eax]
  436cd2:	cmp    edi,0xffffffcc
  436cd5:	call   FWORD PTR [edi+0x2883bdff]
  436cdb:	cmp    DWORD PTR [eax],eax
  436cdd:	loop   0x436c92
  436cdf:	xor    eax,0x83ccc089
  436ce4:	inc    DWORD PTR [ebx-0x4000ec]
  436cea:	int    0xb5
  436cec:	add    BYTE PTR [ebp+0x44ff34e1],cl
  436cf2:	add    bh,bh
  436cf4:	or     DWORD PTR [ecx+0x70ff6c],0x1f
  436cfb:	jle    0x436cfc
  436cfd:	mov    eax,0xf083b67d
  436d02:	add    BYTE PTR [eax],al
  436d04:	cmp    edi,0xffffff92
  436d07:	(bad)  
  436d08:	jmp    0x436cd6
  436d0a:	dec    edx
  436d0b:	cmp    eax,0xed488500
  436d10:	(bad)  
  436d11:	mov    esi,0xff00ff00
  436d16:	and    BYTE PTR [ebx-0x2f1e7c3c],al
  436d1c:	jmp    esp
  436d1e:	mov    esi,0xccdcff8d
  436d23:	(bad)  
  436d24:	(bad)  
  436d25:	(bad)  
  436d26:	jge    0x436cb1
  436d28:	arpl   di,di
  436d2a:	call   FWORD PTR [esi+0x0]
  436d2d:	loope  0x436cb6
  436d2f:	lods   al,BYTE PTR ds:[esi]
  436d30:	cmp    DWORD PTR [eax+eax*1-0x1],0x0
  436d35:	add    dh,dl
  436d37:	int3   
  436d38:	cmp    edi,edi
  436d3a:	aam    0x48
  436d3c:	add    BYTE PTR [ebx+0x1d],bh
  436d3f:	or     eax,DWORD PTR [ebx-0x7600ff6d]
  436d45:	(bad)  
  436d46:	aas    
  436d47:	(bad)  
  436d48:	aas    
  436d49:	add    dh,cl
  436d4b:	fcmove st,st(4)
  436d4d:	imul   ebp,esp,0xffffffd3
  436d50:	mov    DWORD PTR [ecx-0x337c01],esi
  436d56:	pop    ebp
  436d57:	call   edx
  436d59:	sbb    DWORD PTR [edi],0xffffff8f
  436d5c:	dec    DWORD PTR [esi]
  436d5e:	aam    0x53
  436d60:	call   FWORD PTR [edx]
  436d62:	inc    DWORD PTR [ebx-0x76f10001]
  436d68:	(bad)  
  436d69:	int3   
  436d6a:	jge    0x436d8f
  436d6c:	inc    DWORD PTR [eax-0x2affac0c]
  436d72:	inc    DWORD PTR [ebx+0x18ffff]
  436d78:	jecxz  0x436d7a
  436d7a:	or     DWORD PTR [ebp-0x7d],ecx
  436d7d:	mov    esi,0xf0ff9f30
  436d82:	add    bh,bh
  436d84:	(bad)  
  436d85:	dec    DWORD PTR [eax+0x4aff9cff]
  436d8b:	les    ecx,FWORD PTR [ecx-0x3309ca6f]
  436d91:	je     0x436d92
  436d93:	dec    DWORD PTR [ecx-0x800d100]
  436d99:	push   DWORD PTR [esi]
  436d9b:	je     0x436d9c
  436d9d:	mov    al,ds:0xff77fd7d
  436da2:	fcos   
  436da4:	inc    DWORD PTR [ebx+0x6d00fff3]
  436daa:	jb     0x436d4a
  436dac:	call   FWORD PTR [eax+eax*1]
  436daf:	ja     0x436d85
  436db1:	add    bh,dh
  436db3:	(bad)  
  436db4:	inc    DWORD PTR [eax]
  436db6:	out    dx,al
  436db7:	dec    esp
  436db9:	pop    ebp
  436dbb:	cmp    al,0xff
  436dbd:	or     eax,DWORD PTR [eax]
  436dbf:	pop    edi
  436dc0:	dec    esp
  436dc1:	int3   
  436dc2:	fdivr  st,st(7)
  436dc4:	inc    DWORD PTR [eax]
  436dc6:	add    al,0x0
  436dc8:	adc    DWORD PTR [eax],0x1d
  436dcb:	xor    eax,0xbd00e4cc
  436dd0:	cmp    edi,edi
  436dd2:	xchg   ebx,eax
  436dd3:	(bad)  
  436dd4:	inc    DWORD PTR [eax]
  436dd6:	in     al,0xff
  436dd8:	(bad)  
  436dd9:	jl     0x436d71
  436ddb:	xor    al,BYTE PTR [ebx-0x1d6e001d]
  436de1:	add    BYTE PTR [esi],bh
  436de3:	add    BYTE PTR [ebx-0x2c01],al
  436de9:	hlt    
  436dea:	sub    eax,DWORD PTR [edi+0x0]
  436ded:	fadd   DWORD PTR [eax]
  436def:	mov    edx,esi
  436df1:	mov    DWORD PTR [edi],esp
  436df3:	add    bh,bh
  436df5:	(bad)  
  436df6:	(bad)  
  436df8:	(bad)  
  436df9:	jle    0x436dc2
  436dfb:	sbb    BYTE PTR [ebx+0x3997ff1e],al
  436e01:	and    DWORD PTR [ecx-0x22007c7d],0x0
  436e08:	add    esi,0x0
  436e0b:	imul   ecx,DWORD PTR [ecx+0x4eebff06],0xcc005200
  436e15:	push   DWORD PTR [edi]
  436e17:	add    bh,bh
  436e19:	out    0xc0,al
  436e1b:	(bad)  
  436e1d:	mov    al,0x0
  436e1f:	and    eax,0x4f8323
  436e24:	(bad)  
  436e25:	push   DWORD PTR [ecx]
  436e27:	or     DWORD PTR [ecx-0xd0742e],0x4b
  436e2e:	(bad)  
  436e2f:	call   0x8353f186
  436e34:	add    bh,bh
  436e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436e37:	inc    DWORD PTR [eax]
  436e39:	sub    al,0xca
  436e3b:	ret    
  436e3c:	int3   
  436e3d:	je     0x436e0b
  436e3f:	ja     0x436e1d
  436e41:	inc    DWORD PTR [eax+eax*1-0x8c7c34]
  436e48:	add    BYTE PTR [esi-0x53ff9cdb],cl
  436e4e:	call   DWORD PTR [eax-0x33aa008d]
  436e54:	dec    esp
  436e56:	out    0x89,al
  436e58:	call   ebx
  436e5a:	(bad)  
  436e5b:	and    BYTE PTR [ecx+0x2e4589d5],cl
  436e61:	call   DWORD PTR [esi]
  436e63:	add    BYTE PTR [eax],al
  436e65:	jmp    DWORD PTR [edi+0x0]
  436e68:	add    BYTE PTR [edx-0x2b],ah
  436e6b:	or     al,0xcc
  436e6d:	sar    bh,1
  436e6f:	lahf   
  436e70:	dec    esi
  436e71:	add    BYTE PTR [eax+eax*1-0x1],ch
  436e75:	sub    DWORD PTR [eax+eax*1],0xffffffff
  436e79:	popa   
  436e7a:	repz dec edx
  436e7c:	call   ecx
  436e7e:	dec    DWORD PTR [ecx]
  436e80:	and    eax,0xff9f00
  436e85:	jmp    DWORD PTR [ecx+0x40edccff]
  436e8b:	int3   
  436e8c:	call   DWORD PTR [edx+0x0]
  436e8f:	jo     0x436eaa
  436e91:	(bad)  
  436e92:	mov    esp,0xb6ff0000
  436e97:	or     DWORD PTR [ecx+0x25f4ca],0xffffffc4
  436e9e:	add    BYTE PTR [edi],al
  436ea0:	(bad)  
  436ea2:	lods   eax,DWORD PTR ds:[esi]
  436ea3:	(bad)  
  436ea4:	dec    esp
  436ea6:	pop    ebx
  436ea7:	add    bh,bh
  436ea9:	mov    WORD PTR [eax-0x5a],gs
  436eac:	jmp    FWORD PTR [esi]
  436eae:	jmp    edi
  436eb0:	sar    bh,0x3a
  436eb3:	add    BYTE PTR [eax],al
  436eb5:	int3   
  436eb6:	dec    ecx
  436eb7:	(bad)  
  436eb8:	push   DWORD PTR [ebx+eax*8]
  436ebb:	test   bh,bh
  436ebd:	sbb    bh,bh
  436ebf:	xchg   dl,bh
  436ec1:	adc    DWORD PTR [ecx-0x1],0x0
  436ec5:	call   FWORD PTR [esi+0x0]
  436ec8:	call   FWORD PTR [esi]
  436eca:	adc    BYTE PTR [edx-0x51003e7d],ch
  436ed0:	or     edi,edi
  436ed2:	sar    bh,0xff
  436ed5:	(bad)  
  436ed6:	(bad)  
  436ed8:	dec    esi
  436eda:	cmp    eax,DWORD PTR [ecx+0x0]
  436edd:	call   0x835927e1
  436ee2:	mov    eax,ds:0xac830000
  436ee7:	add    BYTE PTR [eax],al
  436ee9:	fadd   DWORD PTR [ebp+0xfe832d]
  436eef:	jp     0x436f4d
  436ef1:	add    dl,dh
  436ef3:	or     DWORD PTR [ecx-0xbe00],0xa
  436efa:	push   esi
  436efb:	out    0xff,eax
  436efd:	sahf   
  436efe:	call   DWORD PTR [ebx-0x33cc0012]
  436f04:	add    BYTE PTR [ebx+0x683ff13],al
  436f0a:	jne    0x436f26
  436f0c:	add    BYTE PTR [ecx-0x77],bh
  436f0f:	fs mov bl,0xff
  436f12:	out    0xff,eax
  436f14:	int3   
  436f15:	int3   
  436f16:	push   ss
  436f17:	add    bh,bh
  436f19:	jae    0x436f37
  436f1b:	jns    0x436f1c
  436f1d:	mov    ah,0xff
  436f1f:	pop    DWORD PTR [ebx]
  436f21:	add    BYTE PTR [edx-0x1],cl
  436f24:	(bad)  
  436f25:	inc    DWORD PTR [ecx]
  436f27:	inc    DWORD PTR [eax]
  436f29:	inc    edi
  436f2a:	jno    0x436efd
  436f2c:	and    ecx,0xffffffff
  436f2f:	lods   eax,DWORD PTR ds:[esi]
  436f30:	add    BYTE PTR ds:0xffff,dl
  436f35:	mov    DWORD PTR [ebp-0x16250100],esi
  436f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436f3c:	call   DWORD PTR [edi+edi*8+0x41cc84d0]
  436f43:	mov    edi,edi
  436f45:	add    ch,cl
  436f47:	add    BYTE PTR [ebx+0xc908c6],al
  436f4d:	pop    edi
  436f4e:	(bad)  
  436f4f:	jmp    0xff8d6e82
  436f54:	add    ah,cl
  436f56:	mov    edi,0x532d0000
  436f5b:	mov    bh,bh
  436f5d:	into   
  436f5e:	add    BYTE PTR [edx+0x26],bh
  436f61:	int3   
  436f62:	retf   
  436f63:	cmp    edi,0xffffffff
  436f66:	ret    0x89ff
  436f69:	fnstenv [esi-0x760b7c2d]
  436f6f:	push   esp
  436f70:	mov    dh,0x0
  436f72:	push   es
  436f73:	inc    DWORD PTR [eax]
  436f75:	add    BYTE PTR [edx-0x49790000],al
  436f7b:	pop    ecx
  436f7c:	cmp    DWORD PTR [ebp-0x7d],0x3f
  436f80:	and    edi,edi
  436f82:	dec    ebx
  436f83:	(bad)  
  436f84:	(bad)  
  436f85:	push   ebx
  436f87:	int3   
  436f88:	cmp    DWORD PTR [ecx],0xffffffee
  436f8b:	pop    eax
  436f8c:	push   DWORD PTR [ecx]
  436f8e:	int3   
  436f8f:	dec    esp
  436f90:	fwait
  436f91:	cmp    DWORD PTR [edx],0xffffff89
  436f94:	int3   
  436f95:	dec    DWORD PTR [ebx-0x1]
  436f98:	int3   
  436f99:	(bad)  
  436f9b:	(bad)  
  436f9c:	add    BYTE PTR [edx],bl
  436f9e:	sub    DWORD PTR [ebx],0xfffffff1
  436fa1:	push   DWORD PTR [ebx+eax*4+0x30ff89]
  436fa8:	call   DWORD PTR [edi]
  436faa:	push   ebp
  436fab:	in     al,dx
  436fac:	jmp    FWORD PTR [esi-0x7c53117d]
  436fb2:	es (bad) 
  436fb4:	(bad)  
  436fb5:	jmp    FWORD PTR [eax+0x0]
  436fb8:	add    DWORD PTR [edx],0x5a
  436fbb:	jae    0x436f89
  436fbd:	(bad)  
  436fbe:	int3   
  436fbf:	(bad)  
  436fc0:	pop    ss
  436fc1:	add    ah,ah
  436fc3:	add    BYTE PTR [ecx-0x337401],cl
  436fc9:	jb     0x436ff8
  436fcb:	test   eax,0x63ff8983
  436fd0:	xor    bh,bh
  436fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436fd3:	cmp    edi,0x0
  436fd6:	xchg   esp,eax
  436fd7:	add    BYTE PTR [eax],al
  436fd9:	ret    
  436fda:	adc    cl,BYTE PTR [ebp+0x4400ebff]
  436fe0:	scas   eax,DWORD PTR es:[edi]
  436fe1:	add    BYTE PTR [eax],bl
  436fe3:	add    BYTE PTR [eax],al
  436fe5:	adc    DWORD PTR [eax],0xffffffff
  436fe8:	inc    DWORD PTR [ebp-0x1a]
  436feb:	adc    edi,edi
  436fed:	jmp    0xfface3f1
  436ff2:	in     al,dx
  436ff3:	add    ah,cl
  436ff5:	add    BYTE PTR [eax+eax*1-0x1fc2aa01],dl
  436ffc:	add    BYTE PTR [esi-0x7c7a9500],ah
  437002:	loopne 0x436fd0
  437004:	(bad)  
  437005:	inc    DWORD PTR [ebp-0x6fcff01]
  43700b:	mov    es,WORD PTR [eax]
  43700d:	loopne 0x43700e
  43700f:	inc    esp
  437010:	arpl   WORD PTR [eax],ax
  437012:	outs   dx,DWORD PTR ds:[esi]
  437013:	add    BYTE PTR [eax],al
  437015:	(bad)  
  437016:	stc    
  437017:	inc    DWORD PTR [ebx+0x1641e6]
  43701d:	stos   BYTE PTR es:[edi],al
  43701e:	add    BYTE PTR [edi+eax*8],bl
  437021:	sub    edi,0xffffffff
  437024:	add    bh,bh
  437026:	jno    0x437028
  437028:	add    BYTE PTR [ecx+0x4bcc5f06],cl
  43702e:	or     DWORD PTR [ebp+0x5b],0xffffffff
  437032:	push   esp
  437033:	cmp    edi,0xffffff89
  437036:	push   cs
  437037:	add    bh,bh
  437039:	or     BYTE PTR [eax+ebp*8+0x0],bh
  43703d:	sub    al,BYTE PTR [eax]
  43703f:	idiv   DWORD PTR [ecx]
  437041:	add    bl,bh
  437043:	add    bh,bh
  437045:	inc    DWORD PTR [edi]
  437047:	inc    DWORD PTR [eax]
  437049:	xchg   ecx,eax
  43704a:	ffreep st(1)
  43704c:	push   ebx
  43704e:	int3   
  43704f:	aas    
  437050:	cmc    
  437051:	int3   
  437052:	xchg   esp,eax
  437053:	inc    DWORD PTR [ebx-0x9477]
  437059:	out    dx,al
  43705a:	rcl    DWORD PTR [edi],1
  43705c:	add    BYTE PTR ds:0xccf23fff,ch
  437062:	or     cl,BYTE PTR [ecx+0x2dff89]
  437068:	push   DWORD PTR [eax+0x78]
  43706b:	scas   eax,DWORD PTR es:[edi]
  43706c:	(bad)  
  43706d:	stc    
  43706e:	jmp    DWORD PTR [esi]
  437070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437071:	dec    edi
  437073:	int3   
  437074:	add    DWORD PTR [ebx+0x6000ff0f],0x3b
  43707b:	imul   edi,edi,0x9f64cc34
  437081:	add    BYTE PTR [ebx-0x54000001],bl
  437087:	(bad)  
  437088:	inc    ebx
  43708a:	push   esi
  43708b:	retf   
  43708c:	(bad)  
  43708d:	mov    ecx,0x83287700
  437092:	jg     0x437093
  437094:	(bad)  
  437095:	dec    DWORD PTR [ebx-0x1]
  437098:	inc    DWORD PTR [eax+0x38ffa37e]
  43709e:	add    BYTE PTR [edi-0x7c227c06],bl
  4370a4:	add    bh,bh
  4370a6:	jg     0x4370a7
  4370a8:	add    BYTE PTR [esi+0xe],bl
  4370ab:	fld    DWORD PTR [eax]
  4370ad:	mov    bl,0x83
  4370af:	out    dx,al
  4370b0:	xchg   DWORD PTR [eax],eax
  4370b2:	xchg   edi,eax
  4370b3:	(bad)  
  4370b4:	(bad)  
  4370b5:	call   DWORD PTR [esp+ecx*8+0x0]
  4370b9:	adc    cl,BYTE PTR [ebp-0x7c400068]
  4370bf:	mov    bh,0x66
  4370c1:	and    DWORD PTR [ebx],0xffffff89
  4370c4:	(bad)  
  4370c5:	(bad)  
  4370c6:	call   0xa650704e
  4370cb:	push   eax
  4370cc:	int3   
  4370cd:	js     0x437052
  4370cf:	add    ebp,DWORD PTR [esi+0xff2100]
  4370d5:	inc    DWORD PTR [eax+0x1fd283ff]
  4370db:	aam    0xff
  4370dd:	xlat   BYTE PTR ds:[ebx]
  4370de:	mov    esp,esi
  4370e0:	(bad)  
  4370e1:	int3   
  4370e2:	mov    al,0x83
  4370e4:	add    DWORD PTR [eax],0x56
  4370e7:	or     esp,0x12
  4370ea:	lahf   
  4370eb:	pop    ss
  4370ec:	(bad)  
  4370ed:	ds (bad) 
  4370ef:	push   DWORD PTR [esi]
  4370f1:	push   esp
  4370f3:	inc    DWORD PTR [ebx+0x83cb89]
  4370f9:	aas    
  4370fa:	and    eax,0xff6aff20
  4370ff:	daa    
  437100:	int3   
  437101:	(bad)  
  437102:	mov    edi,0xf1000089
  437107:	add    BYTE PTR [eax],al
  437109:	(bad)  
  43710a:	cmp    ax,WORD PTR [eax]
  43710d:	leave  
  43710e:	sbb    ebx,0xffffffeb
  437111:	(bad)  
  437112:	jmp    0x9d4470e3
  437117:	(bad)  
  437118:	(bad)  
  437119:	jl     0x437162
  43711b:	(bad)  
  43711c:	(bad)  
  43711d:	cld    
  43711e:	dec    ebx
  437120:	cmc    
  437121:	dec    ecx
  437123:	add    BYTE PTR [eax],al
  437125:	mov    DWORD PTR [edx-0x7d],esp
  437128:	add    BYTE PTR [esi+0xa89debd],al
  43712e:	(bad)  
  43712f:	cmp    eax,0x8909cc83
  437134:	add    BYTE PTR [eax],al
  437136:	push   edx
  437137:	(bad)  
  437138:	dec    DWORD PTR [eax+0x2c]
  43713b:	cmp    edi,edi
  43713d:	pop    edx
  43713e:	add    BYTE PTR [esi-0x24],dh
  437141:	add    DWORD PTR [ecx+0x0],0xffffffff
  437145:	add    BYTE PTR [esi-0x41890001],ah
  43714b:	cld    
  43714c:	sub    DWORD PTR [eax],0x0
  43714f:	out    0xe4,al
  437151:	call   FWORD PTR [edi+edi*8-0xacff01]
  437158:	call   DWORD PTR [esi]
  43715a:	inc    edx
  43715b:	std    
  43715c:	push   ecx
  43715e:	jmp    DWORD PTR [ebx]
  437160:	test   BYTE PTR [eax],al
  437162:	or     BYTE PTR [eax],al
  437164:	int3   
  437165:	call   DWORD PTR [edx]
  437167:	mov    edi,edi
  437169:	jmp    0x4371a5
  43716b:	fiadd  WORD PTR [ebx-0x1af7ff93]
  437171:	add    BYTE PTR [esi],al
  437173:	inc    DWORD PTR [eax]
  437175:	dec    DWORD PTR [edx+0x0]
  437178:	jmp    FWORD PTR [eax+edx*4-0x34]
  43717c:	add    BYTE PTR [esi],cl
  43717e:	int3   
  43717f:	inc    esp
  437180:	jbe    0x437105
  437182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437183:	or     DWORD PTR [ecx-0x8901],0x6d
  43718a:	inc    ebx
  43718b:	leave  
  43718c:	int3   
  43718d:	and    BYTE PTR [eax],al
  43718f:	push   ds
  437190:	hlt    
  437191:	sbb    DWORD PTR [ebx-0x14ff0100],0x0
  437198:	call   FWORD PTR [eax]
  43719a:	and    eax,0x8993ffc2
  43719f:	lea    edi,[ecx-0x76009301]
  4371a5:	(bad)  
  4371a6:	mov    edx,0x5cd700ff
  4371ab:	lods   al,BYTE PTR ds:[esi]
  4371ac:	call   DWORD PTR [edi]
  4371ae:	inc    DWORD PTR [ecx-0x6b]
  4371b1:	call   FWORD PTR [ebx+eax*4-0x1]
  4371b5:	jmp    FWORD PTR [edi+edi*8]
  4371b8:	xor    DWORD PTR [ecx*4-0x76eaff64],0x7a
  4371c0:	je     0x43718e
  4371c2:	call   0xffff:0x60ff0083
  4371c9:	sahf   
  4371ca:	dec    edx
  4371cb:	dec    WORD PTR [ecx]
  4371ce:	(bad)  
  4371cf:	mov    ebp,0xff3600a5
  4371d4:	add    DWORD PTR [eax],0x23
  4371d7:	inc    DWORD PTR [eax]
  4371d9:	or     bl,al
  4371db:	jne    0x437166
  4371dd:	scas   al,BYTE PTR es:[edi]
  4371de:	add    BYTE PTR [ebx],dl
  4371e0:	pusha  
  4371e1:	sub    DWORD PTR [edi],0xffffff89
  4371e4:	add    bh,bh
  4371e6:	cdq    
  4371e7:	inc    DWORD PTR [ebx+0xd5acb1]
  4371ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4371ee:	add    BYTE PTR [ecx+edx*4],dh
  4371f1:	sub    esp,0xffffff83
  4371f4:	add    BYTE PTR [eax],al
  4371f6:	stos   DWORD PTR es:[edi],eax
  4371f7:	add    DWORD PTR [ebx+0xb9102a],0xffffff89
  4371fe:	call   FWORD PTR [ebp+0x56]
  437201:	dec    DWORD PTR [ebp+0x4cffccff]
  437207:	cmp    edi,0x16
  43720a:	daa    
  43720b:	cmp    DWORD PTR [ecx-0x5fbe0006],ecx
  437211:	call   DWORD PTR [ecx-0x1]
  437214:	add    ah,cl
  437216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437217:	add    bh,bh
  437219:	and    DWORD PTR [eax+eiz*4],esi
  43721c:	add    BYTE PTR [eax-0x1],ah
  43721f:	(bad)  
  437220:	idiv   edi
  437222:	arpl   WORD PTR [eax],ax
  437224:	add    BYTE PTR [eax],al
  437226:	mov    edi,?
  437228:	add    BYTE PTR [ebp+0x5],dh
  43722b:	xlat   BYTE PTR ds:[ebx]
  43722c:	dec    DWORD PTR [edi+edi*8+0x5cff9a6f]
  437233:	dec    DWORD PTR [ecx+0xccdbff]
  437239:	mov    eax,ds:0xa583f55f
  43723e:	add    BYTE PTR [edi-0xb87c40],bh
  437244:	(bad)  
  437245:	call   ebx
  437247:	add    bh,bh
  437249:	inc    esi
  43724a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43724b:	cmp    edi,edi
  43724d:	dec    ecx
  43724e:	inc    DWORD PTR [eax+0x3d008a]
  437254:	add    bh,bh
  437256:	mov    ds:0x42cb8900,eax
  43725b:	into   
  43725c:	int3   
  43725d:	mov    dh,0x83
  43725f:	retf   0xff89
  437262:	icebp  
  437263:	inc    DWORD PTR [eax]
  437265:	add    BYTE PTR [eax-0x1],bh
  437268:	adc    DWORD PTR [ebx],0x6e
  43726b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43726c:	cmp    DWORD PTR [ebx+0x0],0xffffffa0
  437270:	xchg   edi,edi
  437272:	push   esi
  437273:	dec    esp
  437275:	xor    DWORD PTR [eax+eax*1+0x0],0x15
  43727a:	lods   al,BYTE PTR ds:[esi]
  43727b:	xchg   edi,eax
  43727c:	inc    DWORD PTR [edi-0x1]
  43727f:	dec    ebx
  437280:	fld    DWORD PTR [ebx+0xcc00e6]
  437286:	test   edi,edi
  437288:	add    BYTE PTR [esi],cl
  43728a:	and    eax,DWORD PTR fs:[eax]
  43728d:	jp     0x43728e
  43728f:	cmp    al,0xa6
  437291:	int3   
  437292:	mov    al,ds:0x8300cc83
  437297:	or     esp,0x14
  43729a:	cwde   
  43729b:	and    edi,edi
  43729d:	mov    BYTE PTR [eax],al
  43729f:	push   es
  4372a0:	fmul   QWORD PTR [ecx+0xcc68]
  4372a6:	xor    edi,edi
  4372a8:	add    BYTE PTR [ebx-0xb00191f],al
  4372ae:	int3   
  4372af:	clc    
  4372b0:	sar    edi,cl
  4372b2:	jl     0x437237
  4372b4:	add    BYTE PTR [ecx+0xdffff27],cl
  4372ba:	mov    DWORD PTR [ebx+0x38005900],ecx
  4372c0:	mov    edx,0xff0053ff
  4372c5:	inc    DWORD PTR [ebx-0x1]
  4372c8:	mov    DWORD PTR [edx+0x6e837166],edi
  4372ce:	mov    edx,esi
  4372d0:	enter  0xc089,0x0
  4372d4:	add    bh,bh
  4372d6:	pop    edi
  4372d7:	mov    edi,edi
  4372d9:	js     0x437285
  4372db:	sbb    al,0x0
  4372dd:	pop    eax
  4372de:	adc    ebp,0xffffff83
  4372e1:	dec    DWORD PTR [ecx-0x4fff0077]
  4372e7:	add    bh,bh
  4372e9:	xor    eax,0xaecc13e2
  4372ee:	cmp    DWORD PTR [edi-0x1c],0xffffff83
  4372f2:	jb     0x4372f3
  4372f4:	add    bh,bh
  4372f6:	lock inc DWORD PTR [eax]
  4372f9:	psrlw  mm4,QWORD PTR [esi-0x427cb700]
  437300:	pop    esi
  437301:	add    BYTE PTR [eax],ch
  437303:	inc    DWORD PTR [eax]
  437305:	add    BYTE PTR [eax-0x1],bl
  437308:	add    BYTE PTR ds:0xfe00b264,ch
  43730e:	call   DWORD PTR [ecx+0x4c003a]
  437314:	add    BYTE PTR [eax],al
  437316:	daa    
  437317:	(bad)  
  437318:	(bad)  
  437319:	jle    0x437385
  43731b:	inc    ebx
  43731c:	sbb    DWORD PTR [ebp-0x77],0xffffff82
  437320:	xor    edi,edi
  437322:	push   ss
  437323:	add    bh,bh
  437325:	mov    DWORD PTR [edx+0x0],edx
  437328:	int3   
  437329:	xchg   BYTE PTR [ebx],bl
  43732b:	dec    ecx
  43732c:	(bad)  
  43732d:	dec    ah
  43732f:	push   edi
  437330:	sbb    edi,edi
  437332:	dec    esi
  437333:	add    BYTE PTR [eax],al
  437335:	mov    DWORD PTR [ecx+0x0],esi
  437338:	add    bh,dl
  43733a:	test   BYTE PTR [edx],al
  43733c:	push   DWORD PTR [eax]
  43733e:	(bad)  
  43733f:	jl     0x437303
  437341:	mov    ecx,eax
  437343:	add    bh,bh
  437345:	call   edi
  437347:	(bad)  
  437348:	call   DWORD PTR [esi]
  43734a:	sar    al,1
  43734c:	mov    DWORD PTR [esi-0x43bc01],ecx
  437352:	jno    0x437354
  437354:	add    DWORD PTR [ebx+0x4aff837d],0xffffff8f
  43735b:	out    dx,al
  43735c:	push   DWORD PTR [ecx+ecx*4-0x4e]
  437360:	pop    ds
  437361:	inc    DWORD PTR [ecx-0x38000001]
  437367:	inc    DWORD PTR [eax]
  437369:	sbb    ebp,DWORD PTR [esi+0xd783a0]
  43736f:	icebp  
  437370:	mov    ds:0xff002fff,al
  437375:	call   DWORD PTR [ebp-0x7da3301]
  43737b:	xor    eax,0xb98345ff
  437380:	mov    eax,0xffff4483
  437385:	add    BYTE PTR [eax-0x7d],ch
  437388:	call   DWORD PTR [esi+0x47004862]
  43738e:	dec    DWORD PTR [ebp-0x26]
  437391:	call   DWORD PTR [ebx-0x66000001]
  437397:	add    BYTE PTR [ecx+0xaddf03],cl
  43739d:	fdivp  st(7),st
  43739f:	mov    al,0x1a
  4373a1:	add    BYTE PTR [edi+edi*8-0x7d],bl
  4373a5:	xor    DWORD PTR [edx-0x53cff34],0x5c
  4373ac:	add    bh,ch
  4373ae:	(bad)  
  4373af:	fdivr  QWORD PTR [eax-0x7d]
  4373b2:	inc    edx
  4373b3:	cmp    edi,0x0
  4373b6:	jecxz  0x4373b7
  4373b8:	push   DWORD PTR [edi+0x71fff15d]
  4373be:	add    BYTE PTR [ecx+0x35ff05],dh
  4373c4:	cmp    edi,0x20
  4373c7:	add    bh,bh
  4373c9:	cmp    al,0x70
  4373cb:	jmp    FWORD PTR ds:0xffdb2d00
  4373d2:	ds (bad) 
  4373d4:	inc    DWORD PTR [eax]
  4373d6:	sar    bh,cl
  4373d8:	call   DWORD PTR ds:0x2d002e75
  4373de:	call   ecx
  4373e0:	mov    ch,0xff
  4373e2:	mov    eax,ds:0x37ccff89
  4373e7:	cmp    edi,0xffffffa9
  4373ea:	test   eax,0xff9fff68
  4373ef:	pop    esp
  4373f0:	out    dx,al
  4373f1:	call   DWORD PTR [ebx-0x74003301]
  4373f7:	add    BYTE PTR [eax],al
  4373f9:	lahf   
  4373fa:	inc    esp
  4373fb:	out    0xcc,al
  4373fd:	dec    esp
  4373fe:	add    ah,al
  437400:	ror    esp,cl
  437402:	push   cs
  437403:	or     esp,0xffffffcc
  437406:	push   0x22d28300
  43740b:	sbb    bh,bh
  43740d:	jle    0x437398
  43740f:	push   ss
  437410:	das    
  437411:	jmp    FWORD PTR [edx-0x1]
  437414:	inc    DWORD PTR [ebx-0x11ff001c]
  43741a:	test   BYTE PTR [edi+edi*8+0x47210041],dl
  437421:	add    BYTE PTR [eax+eax*1-0x4f0001],bl
  437428:	(bad)  
  437429:	mov    edi,0x93ff5181
  43742e:	add    ch,bh
  437430:	add    DWORD PTR [eax],0x4c
  437433:	(bad)  
  437434:	(bad)  
  437435:	inc    DWORD PTR [edi+edi*8-0x77]
  437439:	xchg   ebx,eax
  43743a:	mov    cl,0x40
  43743c:	add    BYTE PTR [ebx-0x58ed01],cl
  437442:	retf   0x89ff
  437445:	call   edi
  437447:	(bad)  
  437448:	call   DWORD PTR [edi+0xcfffb6d]
  43744e:	inc    DWORD PTR [eax]
  437450:	in     al,dx
  437451:	call   FWORD PTR [ebx]
  437453:	add    BYTE PTR [eax],al
  437455:	(bad)  
  437456:	jle    0x437458
  437458:	add    BYTE PTR [eax-0x5500e00e],bl
  43745e:	(bad)  
  43745f:	cmp    al,0xca
  437461:	add    cl,bl
  437463:	add    DWORD PTR [ebx-0x6b34],0xffffffad
  43746a:	and    DWORD PTR [ecx-0x1],ebp
  43746d:	in     al,dx
  43746e:	jmp    ebp
  437470:	mov    al,0xff
  437472:	or     al,BYTE PTR [eax]
  437474:	add    DWORD PTR [eax],0xffffffd3
  437477:	mov    edi,edi
  437479:	mov    WORD PTR [ebx-0x4100e0],es
  43747f:	sbb    al,0xc5
  437481:	inc    DWORD PTR [eax-0x34]
  437484:	(bad)  
  437485:	call   DWORD PTR [ecx]
  437487:	add    bh,bh
  437489:	fnsave [edi-0xb90077]
  43748f:	mov    ebx,0x8957008c
  437494:	(bad)  
  437495:	inc    edx
  437497:	(bad)  
  437498:	call   FWORD PTR [ebp+0x5eff9602]
  43749e:	int3   
  43749f:	xor    ch,BYTE PTR ds:0xff833400
  4374a5:	jmp    edi
  4374a7:	cmp    edi,0xfffffffa
  4374aa:	retf   0x8b
  4374ad:	sar    edi,cl
  4374af:	dec    eax
  4374b0:	test   bh,bh
  4374b2:	mov    edi,?
  4374b4:	inc    DWORD PTR [ebx+0x2000011]
  4374ba:	push   0xfff5ffd9
  4374bf:	pop    es
  4374c0:	(bad)  
  4374c1:	jmp    FWORD PTR [edx-0x6eff007d]
  4374c7:	add    bh,bh
  4374c9:	dec    ecx
  4374ca:	cmp    dl,ah
  4374cc:	and    esi,0xffffff83
  4374cf:	sbb    cl,BYTE PTR [ecx-0x1]
  4374d2:	adc    ecx,DWORD PTR [ecx+0xbc00ff]
  4374d8:	mov    DWORD PTR [ecx],edi
  4374da:	mov    DWORD PTR [edi+edi*8+0x63],ebp
  4374de:	add    DWORD PTR [edi],0x54
  4374e1:	add    BYTE PTR [ecx-0x77],bh
  4374e4:	add    bh,bh
  4374e6:	sub    edi,edi
  4374e8:	int3   
  4374e9:	loop   0x437537
  4374eb:	pop    esp
  4374ec:	jmp    FWORD PTR ds:0xcce5c0ff
  4374f2:	lock int3 
  4374f4:	add    bh,bh
  4374f6:	leave  
  4374f7:	(bad)  
  4374f8:	call   DWORD PTR [edi+0x12]
  4374fb:	fild   WORD PTR [eax]
  4374fd:	loopne 0x4374fe
  4374ff:	repnz mov ds:0x837d00,al
  437505:	and    DWORD PTR [ecx+0x5e8cff00],0xffffff9c
  43750c:	(bad)  
  43750d:	mov    eax,0xcc5a3000
  437512:	jo     0x437514
  437514:	add    DWORD PTR [eax],0xffffff86
  437517:	add    bh,bh
  437519:	shr    BYTE PTR [esi],1
  43751b:	xor    eax,DWORD PTR [eax]
  43751d:	jmp    0x43751f
  43751f:	ins    DWORD PTR es:[edi],dx
  437520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437521:	add    BYTE PTR [edx-0x34010000],dh
  437527:	(bad)  
  437528:	call   DWORD PTR [eax+0x42]
  43752b:	sub    al,BYTE PTR [eax]
  43752d:	dec    ecx
  43752e:	or     esi,0x42
  437531:	mov    edi,ecx
  437533:	(bad)  
  437534:	(bad)  
  437535:	jmp    FWORD PTR [ebp-0x76ad0100]
  43753b:	out    0xff,al
  43753d:	add    bh,bh
  43753f:	mov    eax,0x83a800b7
  437544:	inc    DWORD PTR [eax]
  437546:	retf   
  437547:	mov    esp,ecx
  437549:	(bad)  
  43754a:	jmp    0x43751e
  43754c:	mov    eax,edi
  43754e:	add    BYTE PTR [edx],dl
  437550:	or     edi,edi
  437552:	sbb    cl,BYTE PTR [ecx+0xdff00]
  437558:	call   eax
  43755a:	div    esp
  43755c:	or     DWORD PTR [esi-0x7d],0xffffffb3
  437560:	loope  0x437562
  437562:	and    al,BYTE PTR [ebx-0x4f3301]
  437568:	push   DWORD PTR [eax]
  43756a:	lahf   
  43756b:	(bad)  
  43756d:	jo     0x43756f
  43756f:	fisub  DWORD PTR [ecx]
  437571:	call   FWORD PTR [eax]
  437573:	add    BYTE PTR [ebx-0x76a601],al
  437579:	(bad)  
  43757b:	pusha  
  43757c:	jmp    edi
  43757e:	int3   
  43757f:	push   ebp
  437580:	pop    ecx
  437581:	int3   
  437582:	or     BYTE PTR [ecx-0x1fff34],cl
  437588:	add    BYTE PTR [edx*1-0x2f00d7],ah
  43758f:	dec    esi
  437590:	mov    ebx,0xff83daff
  437595:	jmp    DWORD PTR [edi-0x1]
  437598:	(bad)  
  437599:	mov    edi,0xc9ffe686
  43759e:	add    BYTE PTR ds:0x89cfff74,ah
  4375a4:	cmp    edi,0xa
  4375a7:	add    DWORD PTR [eax],0x32
  4375aa:	mov    al,0x22
  4375ac:	call   DWORD PTR [ebp-0x7d]
  4375af:	xor    al,0x65
  4375b1:	call   DWORD PTR [eax]
  4375b3:	inc    DWORD PTR [eax]
  4375b5:	jmp    DWORD PTR [edi+0x0]
  4375b8:	add    BYTE PTR [ebx-0x7bffb1ad],dl
  4375be:	adc    edi,0x46
  4375c1:	(bad)  
  4375c2:	cmp    BYTE PTR [ebx+0x228989],al
  4375c8:	mov    ebx,eax
  4375ca:	jecxz  0x437605
  4375cc:	(bad)  
  4375cd:	inc    DWORD PTR [ebx+0x4fff1ff2]
  4375d3:	inc    DWORD PTR [eax]
  4375d5:	add    BYTE PTR [edx],dh
  4375d7:	(bad)  
  4375d8:	call   FWORD PTR [ebx]
  4375da:	mov    ebx,0xff55cc0a
  4375df:	mov    esp,0xff3ecc96
  4375e4:	add    BYTE PTR [eax],al
  4375e6:	mov    bl,0xff
  4375e8:	(bad)  
  4375e9:	ds dec ebp
  4375eb:	cmp    edi,edi
  4375ed:	inc    ebp
  4375ee:	(bad)  
  4375ef:	call   0x8a27751d
  4375f4:	add    BYTE PTR [ecx+0x2a0000c4],cl
  4375fa:	cs mov ah,0xff
  4375fd:	cdq    
  4375fe:	add    al,al
  437600:	sub    al,BYTE PTR [eax]
  437602:	sar    edi,cl
  437604:	mov    edi,edi
  437606:	call   0xffb9:0xb83389ff
  43760d:	push   cs
  43760e:	add    BYTE PTR [ebx+ebp*4-0x7c7cfe7d],bh
  437615:	add    BYTE PTR [ecx-0x1],bl
  437618:	(bad)  
  437619:	mov    ebp,0xd3ffd0df
  43761e:	add    bl,dh
  437620:	mov    esi,0xffff52ff
  437625:	call   FWORD PTR [esi]
  437627:	inc    DWORD PTR [eax]
  437629:	add    al,0x97
  43762b:	inc    edi
  43762c:	add    BYTE PTR [ebx+0x9581ff],ah
  437632:	iret   
  437633:	dec    esp
  437635:	(bad)  
  437636:	fild   WORD PTR [eax]
  437638:	mov    DWORD PTR [ebx+0x77],esi
  43763b:	(bad)  
  43763c:	int3   
  43763d:	arpl   di,di
  43763f:	mov    edx,0xff1300aa
  437644:	mov    DWORD PTR [ecx-0x647c00a6],ecx
  43764a:	pop    ecx
  43764b:	inc    esi
  43764c:	add    BYTE PTR [edx-0x33aadb7d],dl
  437652:	adc    eax,DWORD PTR [eax]
  437654:	dec    DWORD PTR [ecx+0x4fff8392]
  43765a:	mov    gs,WORD PTR [ebx+0x0]
  43765d:	mov    dl,0xff
  43765f:	pop    es
  437660:	xchg   esp,eax
  437661:	mov    DWORD PTR [ecx],esi
  437663:	(bad)  
  437664:	inc    DWORD PTR [eax]
  437666:	push   ebp
  437667:	dec    DWORD PTR [ecx+0xe32e98]
  43766d:	test   al,0x0
  43766f:	adc    BYTE PTR [ecx-0x1],0x72
  437673:	add    DWORD PTR [eax],0xffffffff
  437676:	iret   
  437677:	add    bh,bh
  437679:	imul   ecx,DWORD PTR [edx+0x46],0xffffffff
  43767d:	xor    al,BYTE PTR [eax]
  43767f:	adc    ah,BYTE PTR [edx]
  437681:	add    BYTE PTR [esi+0x0],bh
  437684:	int3   
  437685:	mov    DWORD PTR [ebx-0x1],esi
  437688:	add    DWORD PTR [edi],0xfffffffc
  43768b:	add    eax,0x81ff9b00
  437690:	dec    edi
  437691:	add    BYTE PTR [esi-0x7d],bl
  437694:	inc    DWORD PTR [eax]
  437696:	dec    eax
  437697:	int3   
  437698:	call   FWORD PTR [ebx]
  43769a:	dec    ebp
  43769b:	mov    eax,0x20007cff
  4376a0:	xor    ah,cl
  4376a2:	mov    ebx,0x57ffcc00
  4376a7:	inc    DWORD PTR [ebx-0x7c29d397]
  4376ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4376ae:	call   DWORD PTR [ebp-0x2d]
  4376b1:	sbb    DWORD PTR [eax+eax*1-0xff0100],0xffffffff
  4376b9:	fcomip st,st(6)
  4376bb:	lahf   
  4376bc:	call   FWORD PTR [ebx+0x123a00]
  4376c2:	inc    esp
  4376c3:	add    bh,bh
  4376c5:	sub    DWORD PTR [edi+edi*8-0x77],0x45
  4376ca:	xchg   ecx,eax
  4376cb:	cwde   
  4376cc:	call   FWORD PTR [edi-0x77]
  4376cf:	nop
  4376d0:	iret   
  4376d1:	int3   
  4376d2:	inc    esi
  4376d3:	add    bh,bh
  4376d5:	or     DWORD PTR [edi+edi*8+0x0],0xffffffe7
  4376da:	xor    DWORD PTR [esi],edi
  4376dc:	add    BYTE PTR [edi+edi*8-0xe],al
  4376e0:	enter  0xc200,0x0
  4376e4:	(bad)  
  4376e5:	call   FWORD PTR [ebx-0x4d07c34]
  4376eb:	test   DWORD PTR [ebx+0x7fe0005c],0xff00b3ff
  4376f5:	call   DWORD PTR [edi]
  4376f7:	add    bh,bh
  4376f9:	outs   dx,DWORD PTR ds:[esi]
  4376fa:	(bad)  
  4376fb:	lock add BYTE PTR [eax-0x760dd001],cl
  437702:	cmc    
  437703:	(bad)  
  437704:	inc    DWORD PTR [eax]
  437706:	js     0x437708
  437708:	int3   
  437709:	mov    dl,BYTE PTR [esi+0x3]
  43770c:	mov    DWORD PTR [esi-0x33e65e01],edi
  437712:	jnp    0x437714
  437714:	(bad)  
  437715:	dec    DWORD PTR [ebx]
  437717:	(bad)  
  437718:	inc    esp
  43771a:	xlat   BYTE PTR ds:[ebx]
  43771b:	into   
  43771c:	inc    DWORD PTR ds:0xff8075ff
  437722:	sub    bh,bh
  437724:	int3   
  437725:	adc    DWORD PTR [eax-0x1],0xffffff83
  437729:	shl    DWORD PTR [ecx],cl
  43772b:	mov    eax,DWORD PTR [eax]
  43772d:	into   
  43772e:	add    BYTE PTR [ecx+0x34],bl
  437731:	add    BYTE PTR [ebp+0x0],bl
  437734:	add    DWORD PTR [ebx+0x270000e2],0x25
  43773b:	push   ebp
  43773c:	int3   
  43773d:	adc    al,0xff
  43773f:	(bad)  
  437740:	sub    BYTE PTR [eax],al
  437742:	fcos   
  437744:	inc    DWORD PTR [eax]
  437746:	stos   BYTE PTR es:[edi],al
  437747:	(bad)  
  437748:	push   DWORD PTR [ecx]
  43774a:	mov    dl,0xe5
  43774c:	dec    esi
  43774e:	call   FWORD PTR [edi-0xfbffde]
  437754:	int3   
  437755:	(bad)  
  437756:	mov    edi,0x752600ff
  43775b:	dec    ecx
  43775c:	add    BYTE PTR [edi],bh
  43775e:	push   DWORD PTR [ecx+0x49]
  437761:	inc    ebx
  437763:	inc    DWORD PTR [eax]
  437765:	call   FWORD PTR [ecx]
  437767:	or     DWORD PTR [ecx-0x8fc00b],0xfffffff2
  43776e:	call   DWORD PTR [ecx+eiz*8]
  437771:	dec    ebx
  437773:	add    bh,bh
  437775:	inc    DWORD PTR [eax-0x1]
  437778:	and    DWORD PTR [edx+edi*2],0xffffffca
  43777c:	add    BYTE PTR [esi+0x390283],bl
  437782:	or     DWORD PTR [eax],eax
  437784:	add    bh,bh
  437786:	out    dx,eax
  437787:	mov    DWORD PTR [eax],eax
  437789:	(bad)  
  43778a:	cli    
  43778b:	add    edi,edi
  43778d:	repnz add BYTE PTR [ebx-0x4a],ah
  437791:	int3   
  437792:	test   edi,edi
  437794:	int3   
  437795:	push   esi
  437797:	(bad)  
  437798:	dec    DWORD PTR [eax]
  43779a:	jne    0x437760
  43779c:	add    BYTE PTR ds:0xffbece00,dl
  4377a2:	cmp    eax,0xb50083ff
  4377a7:	add    BYTE PTR [ecx-0x8d9f6a],cl
  4377ad:	retf   0xf2ff
  4377b0:	cld    
  4377b1:	add    dh,al
  4377b3:	add    bh,bh
  4377b5:	cmp    DWORD PTR [edx],0xffffffff
  4377b8:	jmp    DWORD PTR [edi]
  4377ba:	dec    esi
  4377bb:	imul   edi,edi,0x58
  4377be:	mov    DWORD PTR [ebp-0x967c20],esp
  4377c4:	dec    esp
  4377c6:	std    
  4377c7:	mov    DWORD PTR [eax],eax
  4377c9:	clc    
  4377ca:	imul   ebx,DWORD PTR [esi],0xffffff83
  4377cd:	cmp    bh,0xe4
  4377d0:	aas    
  4377d1:	add    BYTE PTR [esi],ah
  4377d3:	add    DWORD PTR [ebx-0x9e00],0xffffffe0
  4377da:	jmp    0x8977fb00
  4377df:	inc    esi
  4377e0:	scas   eax,DWORD PTR es:[edi]
  4377e1:	call   ebx
  4377e3:	add    bh,bh
  4377e5:	int3   
  4377e6:	int    0xff
  4377e8:	dec    DWORD PTR [edx+esi*1+0x87cc40]
  4377ef:	ficom  WORD PTR [eax-0x1301]
  4377f5:	add    BYTE PTR [esi+0x15ff83ff],ch
  4377fb:	retf   
  4377fc:	jmp    ecx
  4377fe:	int3   
  4377ff:	dec    esi
  437800:	loope  0x437801
  437802:	inc    edx
  437803:	add    DWORD PTR [eax],0xffffff89
  437806:	mov    bl,0x83
  437808:	add    dh,dl
  43780a:	sub    ebp,ebx
  43780c:	add    BYTE PTR [ebx+0x0],dl
  43780f:	(bad)  
  437810:	and    al,BYTE PTR [eax]
  437812:	jmp    0x84c77816
  437817:	cmp    edi,0xfffffff5
  43781a:	scas   al,BYTE PTR es:[edi]
  43781b:	ins    DWORD PTR es:[edi],dx
  43781c:	call   FWORD PTR [esi-0x1]
  43781f:	push   edi
  437820:	mov    edi,edi
  437822:	cdq    
  437823:	inc    DWORD PTR [ebx-0x76ffea00]
  437829:	call   0xc500:0x3dfff006
  437830:	je     0x4377b5
  437832:	push   edi
  437833:	cmp    edi,0xffffffff
  437836:	rol    DWORD PTR [eax],1
  437838:	add    BYTE PTR [ebp+0x21],ch
  43783b:	xchg   esp,eax
  43783c:	dec    eax
  43783e:	add    BYTE PTR [edi-0x34],ah
  437841:	add    BYTE PTR [ebx-0x1],ah
  437844:	add    ah,cl
  437846:	(bad)  
  437847:	inc    DWORD PTR [eax]
  437849:	mul    BYTE PTR [edi+0x4]
  43784c:	inc    DWORD PTR [eax-0x37d601]
  437852:	jb     0x437820
  437854:	add    bh,bh
  437856:	loope  0x437824
  437858:	add    ch,ah
  43785a:	ss xchg bh,bh
  43785d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43785e:	dec    edi
  437860:	sbb    eax,0xff890700
  437865:	add    BYTE PTR [ecx+0x0],bh
  437868:	jmp    DWORD PTR [esi+ebp*1+0x3f]
  43786c:	(bad)  
  43786d:	cli    
  43786e:	add    BYTE PTR [eax],ch
  437870:	stos   DWORD PTR es:[edi],eax
  437871:	add    BYTE PTR [edx],dh
  437873:	(bad)  
  437874:	dec    DWORD PTR [ecx-0x32ff006d]
  43787a:	mov    bh,0x38
  43787c:	jmp    DWORD PTR [ebx+0x0]
  43787f:	enter  0x5b,0xf5
  437883:	add    bh,bh
  437885:	add    BYTE PTR [eax-0x5310000],dh
  43788b:	xchg   ebx,eax
  43788c:	push   DWORD PTR [eax-0x1]
  43788f:	rdtsc  
  437891:	mov    DWORD PTR [ecx-0x3400ff01],edx
  437897:	(bad)  
  437898:	push   DWORD PTR [ebx+ebp*2-0x52]
  43789c:	call   FWORD PTR [eax+eax*1-0x38]
  4378a0:	enter  0x16ff,0x0
  4378a4:	add    bh,bh
  4378a6:	aas    
  4378a7:	inc    DWORD PTR [ebx+0x5baee0]
  4378ad:	dec    eax
  4378ae:	adc    edx,0x6
  4378b1:	add    BYTE PTR [ecx-0x1],cl
  4378b4:	add    BYTE PTR [ecx+0x3fcc00e7],cl
  4378ba:	arpl   WORD PTR [eax+0xa007acc],bp
  4378c0:	mov    cl,0xff
  4378c2:	push   edx
  4378c3:	inc    DWORD PTR [eax]
  4378c5:	mov    DWORD PTR [edx],edx
  4378c7:	(bad)  
  4378c8:	jmp    DWORD PTR [ebx+0x7183fb75]
  4378ce:	inc    DWORD PTR [edx]
  4378d0:	into   
  4378d1:	push   DWORD PTR [edi]
  4378d3:	inc    DWORD PTR [eax]
  4378d5:	jmp    edx
  4378d7:	inc    DWORD PTR [eax]
  4378d9:	ret    
  4378da:	mov    ds:0x83f9ffb2,eax
  4378df:	cli    
  4378e0:	mov    esp,0xffff6cff
  4378e5:	add    BYTE PTR [edx+0xcabffff],al
  4378eb:	xchg   ebx,eax
  4378ec:	add    BYTE PTR [edx-0x1],bh
  4378ef:	sbb    al,bh
  4378f1:	int3   
  4378f2:	dec    edi
  4378f3:	add    BYTE PTR [eax],al
  4378f5:	(bad)  
  4378f6:	cld    
  4378f7:	add    BYTE PTR [eax],al
  4378f9:	xchg   ebx,eax
  4378fa:	data16 mov al,0x0
  4378fd:	aad    0xff
  4378ff:	jno    0x437882
  437901:	add    BYTE PTR [eax-0x7700ff01],al
  437907:	cmp    edi,0xffffffe2
  43790a:	cmp    BYTE PTR [ebp-0x3200ac01],bl
  437910:	inc    esp
  437911:	add    cl,bl
  437913:	inc    DWORD PTR [eax]
  437915:	push   ecx
  437917:	inc    DWORD PTR [eax]
  437919:	cdq    
  43791a:	aaa    
  43791b:	xchg   ebx,eax
  43791c:	add    BYTE PTR [edi-0x1],dl
  43791f:	nop
  437920:	adc    edi,edi
  437922:	inc    eax
  437923:	inc    DWORD PTR [eax]
  437925:	inc    DWORD PTR [eax-0x7d]
  437928:	inc    DWORD PTR [esi-0x7b00d619]
  43792e:	int3   
  43792f:	fcomp  QWORD PTR [ecx-0x9300]
  437935:	mov    DWORD PTR [ebx+eax*4-0x7d],ebx
  437939:	sbb    BYTE PTR [ebp-0xc3ff37],cl
  43793f:	pop    edi
  437941:	int3   
  437942:	inc    ebx
  437943:	cmp    edi,0xffffffff
  437946:	cs (bad) 
  437948:	call   esp
  43794a:	call   0xcc9f78a5
  43794f:	push   edx
  437950:	mov    ecx,0xffff16ff
  437955:	int3   
  437956:	fmul   st,st(4)
  437958:	inc    DWORD PTR [esi+esi*8+0x5]
  43795c:	or     DWORD PTR [ebp-0x70a501],0x66
  437963:	or     DWORD PTR [ecx-0x33331d01],0xffffffcd
  43796a:	stos   DWORD PTR es:[edi],eax
  43796b:	fisttp DWORD PTR [ecx-0x14670024]
  437971:	add    BYTE PTR [esi+0x0],ah
  437974:	cmp    edi,0xffffff87
  437977:	(bad)  
  437978:	(bad)  
  437979:	jle    0x437935
  43797b:	and    eax,0x84833a00
  437980:	push   ss
  437981:	cmp    DWORD PTR [eax],0xffffffff
  437984:	inc    DWORD PTR [ebx+0x4983ccce]
  43798a:	ss add ah,cl
  43798d:	call   0xff681292
  437992:	stos   BYTE PTR es:[edi],al
  437993:	mov    edi,edi
  437995:	dec    DWORD PTR [esi]
  437997:	add    BYTE PTR [ecx-0x7c76817f],cl
  43799d:	and    bh,bh
  43799f:	xchg   ebp,eax
  4379a0:	add    esp,ecx
  4379a2:	dec    eax
  4379a3:	(bad)  
  4379a4:	inc    DWORD PTR [ebx+0x1d89ffe7]
  4379aa:	out    dx,eax
  4379ab:	test   DWORD PTR [eax],eax
  4379ad:	xlat   BYTE PTR ds:[ebx]
  4379ae:	int3   
  4379af:	adc    DWORD PTR [ecx-0x76ffe501],edx
  4379b5:	push   DWORD PTR [ebx+0x1b45ffff]
  4379bb:	cmp    edi,edi
  4379bd:	ins    BYTE PTR es:[edi],dx
  4379be:	int3   
  4379bf:	jne    0x4379c2
  4379c1:	push   DWORD PTR [edi+0x4c83ff83]
  4379c7:	or     esp,0xffffffda
  4379ca:	fcomp  QWORD PTR [ebx+0x21ffdbff]
  4379d0:	add    eax,0xff008683
  4379d5:	jmp    FWORD PTR [eax+0x79d0cc00]
  4379db:	dec    ebp
  4379dc:	add    ah,bh
  4379de:	mov    DWORD PTR [ebx+0xefffd5],esp
  4379e4:	add    BYTE PTR [eax],al
  4379e6:	stos   BYTE PTR es:[edi],al
  4379e7:	add    DWORD PTR [eax],0xffffff93
  4379ea:	jnp    0x4379e6
  4379ec:	inc    edi
  4379ee:	dec    DWORD PTR [edx-0x367c95]
  4379f4:	add    bh,bh
  4379f6:	mov    BYTE PTR [ebx-0x1a546c01],al
  4379fc:	push   DWORD PTR [eax+0x1687ff]
  437a02:	cmc    
  437a03:	(bad)  
  437a04:	(bad)  
  437a05:	dec    DWORD PTR [ebx+0x1a830000]
  437a0b:	mov    bh,bh
  437a0d:	and    bh,bh
  437a0f:	retf   
  437a10:	popa   
  437a11:	int3   
  437a12:	(bad)  
  437a14:	inc    DWORD PTR [ebx-0x7ffff4c]
  437a1a:	cmp    BYTE PTR ds:0x88ffbeff,ah
  437a20:	daa    
  437a21:	add    BYTE PTR [edi+edi*8],bl
  437a24:	(bad)  
  437a25:	(bad)  
  437a26:	jns    0x437a28
  437a28:	add    BYTE PTR [eax-0xc00f42b],bh
  437a2e:	call   ebx
  437a30:	xchg   ebx,eax
  437a31:	(bad)  
  437a32:	(bad)  
  437a34:	inc    DWORD PTR [ebx-0x7f00ff4d]
  437a3a:	xchg   BYTE PTR [eax+0x61ffa783],dl
  437a40:	dec    esi
  437a41:	inc    DWORD PTR [edx-0x77]
  437a44:	int3   
  437a45:	jmp    FWORD PTR [ecx+0x2518cc83]
  437a4b:	sub    DWORD PTR ss:[eax-0x77],0xffffff8f
  437a50:	jle    0x437a51
  437a52:	push   edx
  437a53:	int3   
  437a54:	(bad)  
  437a55:	(bad)  
  437a56:	cmp    al,0x83
  437a58:	mov    DWORD PTR [ecx+0x5d],eax
  437a5b:	sar    bh,cl
  437a5d:	out    0xff,al
  437a5f:	xor    edx,0xffffffff
  437a62:	imul   eax,DWORD PTR [eax],0xb0ff00
  437a68:	add    al,bh
  437a6a:	jno    0x437ad4
  437a6c:	dec    DWORD PTR [eax+eax*1]
  437a6f:	lahf   
  437a70:	add    bh,bh
  437a72:	jnp    0x437a73
  437a74:	int3   
  437a75:	mov    DWORD PTR ds:0x2c29ffff,edx
  437a7b:	aam    0x0
  437a7d:	xchg   esp,eax
  437a7e:	add    cl,dl
  437a80:	pop    edi
  437a81:	(bad)  
  437a82:	inc    BYTE PTR [eax]
  437a84:	inc    DWORD PTR [ebx+0x368300ee]
  437a8a:	or     bl,dh
  437a8c:	jmp    DWORD PTR [ecx]
  437a8e:	call   edx
  437a90:	sti    
  437a91:	mov    DWORD PTR [esi-0x1],ebp
  437a94:	inc    DWORD PTR [eax]
  437a96:	mov    es,WORD PTR [ebx-0x887cb01]
  437a9c:	(bad)  
  437a9d:	std    
  437a9e:	dec    DWORD PTR [ecx+esi*8-0xae01]
  437aa5:	add    BYTE PTR [ebp-0x1],bh
  437aa8:	call   DWORD PTR [ecx-0x5b7caadf]
  437aae:	sbb    DWORD PTR ds:0xaf00ff,0xffffffff
  437ab5:	dec    DWORD PTR [eax+0x2511ffcc]
  437abb:	outs   dx,DWORD PTR ds:[esi]
  437abc:	add    BYTE PTR [edi+0x209fff],ch
  437ac2:	adc    al,0x83
  437ac4:	(bad)  
  437ac5:	call   FWORD PTR [edi+edi*8+0x15b22aff]
  437acc:	(bad)  
  437acd:	cld    
  437ace:	cmp    DWORD PTR [ebp+0xe18306],0x0
  437ad5:	and    DWORD PTR [ecx],0x0
  437ad8:	inc    DWORD PTR [ebx+0x8]
  437adb:	adc    al,0xff
  437add:	sub    edi,edi
  437adf:	xchg   edi,eax
  437ae0:	hlt    
  437ae1:	add    BYTE PTR [ecx],ah
  437ae3:	(bad)  
  437ae4:	(bad)  
  437ae5:	jmp    DWORD PTR [esi]
  437ae7:	(bad)  
  437ae8:	call   FWORD PTR [ebp-0x58]
  437aeb:	mov    esp,0xee0042ff
  437af0:	sub    al,0x83
  437af2:	retf   0xffff
  437af5:	jmp    eax
  437af7:	inc    DWORD PTR [eax]
  437af9:	xlat   BYTE PTR ds:[ebx]
  437afa:	xchg   ebx,eax
  437afb:	mov    bh,0x0
  437afd:	inc    DWORD PTR [ebx+0x71ff867c]
  437b03:	mov    DWORD PTR [eax],eax
  437b05:	add    ch,cl
  437b07:	add    bh,bh
  437b09:	(bad)  
  437b0a:	lock cmc 
  437b0c:	(bad)  
  437b0d:	jge    0x437b0e
  437b0f:	arpl   WORD PTR [edx-0x7d],bp
  437b12:	lock (bad) 
  437b14:	inc    DWORD PTR [ebx-0x3e000044]
  437b1a:	lea    esi,[ebx-0x5e7c3600]
  437b20:	and    edi,edi
  437b22:	xchg   edi,eax
  437b23:	add    bh,bh
  437b25:	push   DWORD PTR [ecx-0x785d0001]
  437b2b:	adc    bh,bh
  437b2d:	rol    BYTE PTR [eax],cl
  437b2f:	loop   0x437afd
  437b31:	dec    DWORD PTR [ebx+0x70ffffff]
  437b37:	cmp    edi,0x18
  437b3a:	ret    0xa2
  437b3d:	add    bh,bh
  437b3f:	push   eax
  437b40:	test   al,0x0
  437b42:	push   cs
  437b43:	(bad)  
  437b44:	(bad)  
  437b45:	jmp    eax
  437b47:	(bad)  
  437b48:	push   DWORD PTR [ebp+0x6500d432]
  437b4e:	add    BYTE PTR [esi],bl
  437b50:	adc    al,0x0
  437b52:	mov    ebx,0xf0830000
  437b57:	cmp    edi,0xffffffdc
  437b5a:	push   esp
  437b5b:	mov    edi,edi
  437b5d:	cmp    al,BYTE PTR [eax]
  437b5f:	cmp    DWORD PTR [eax-0x7d],ecx
  437b62:	iret   
  437b63:	(bad)  
  437b64:	(bad)  
  437b65:	push   DWORD PTR [ebp+0x0]
  437b68:	(bad)  
  437b69:	cld    
  437b6a:	add    DWORD PTR [edx-0x3f00c501],eax
  437b70:	sub    esp,0x8
  437b73:	push   ebx
  437b74:	push   ebp
  437b75:	push   esi
  437b76:	mov    esi,DWORD PTR ds:0x444068
  437b7c:	push   edi
  437b7d:	call   esi
  437b7f:	push   0x0
  437b81:	mov    edi,eax
  437b83:	call   DWORD PTR ds:0x444010
  437b89:	call   esi
  437b8b:	mov    esi,DWORD PTR ds:0x444024
  437b91:	push   0xba
  437b96:	push   0x42
  437b98:	mov    ebx,eax
  437b9a:	call   esi
  437b9c:	push   0x97
  437ba1:	push   0x42
  437ba3:	mov    DWORD PTR [esp+0x18],eax
  437ba7:	call   esi
  437ba9:	mov    esi,DWORD PTR ds:0x447d1c
  437baf:	mov    ebp,DWORD PTR ds:0x44406c
  437bb5:	push   0x0
  437bb7:	push   0xb4
  437bbc:	push   0x71
  437bbe:	push   0x8e
  437bc3:	push   0xd3
  437bc8:	push   0x0
  437bca:	push   edi
  437bcb:	mov    DWORD PTR [esp+0x30],eax
  437bcf:	add    esi,0x1d970
  437bd5:	call   ebp
  437bd7:	mov    ecx,DWORD PTR ds:0x4470a8
  437bdd:	mov    edx,0x44
  437be2:	movzx  eax,BYTE PTR [ecx+0x5]
  437be6:	movzx  edi,BYTE PTR [ecx+0x3]
  437bea:	movzx  ecx,WORD PTR [ecx+0x1]
  437bee:	shl    eax,0x8
  437bf1:	add    eax,edi
  437bf3:	shl    eax,0x10
  437bf6:	add    eax,ecx
  437bf8:	mov    ds:0x447d04,eax
  437bfd:	mov    ecx,0xb6303fa3
  437c02:	sub    ecx,DWORD PTR ds:0x447d14
  437c08:	xor    ecx,eax
  437c0a:	mov    DWORD PTR [esi],ecx
  437c0c:	mov    ecx,DWORD PTR ds:0x4470a8
  437c12:	movzx  eax,BYTE PTR [ecx+0xe]
  437c16:	movzx  edi,BYTE PTR [ecx+0xb]
  437c1a:	shl    eax,0x8
  437c1d:	add    eax,edi
  437c1f:	movzx  edi,BYTE PTR [ecx+0x9]
  437c23:	movzx  ecx,BYTE PTR [ecx+0x6]
  437c27:	shl    eax,0x8
  437c2a:	add    eax,edi
  437c2c:	shl    eax,0x8
  437c2f:	add    eax,ecx
  437c31:	mov    ds:0x447d04,eax
  437c36:	mov    ecx,0xb6303fa3
  437c3b:	sub    ecx,DWORD PTR ds:0x447d14
  437c41:	xor    ecx,eax
  437c43:	mov    DWORD PTR [esi+0x4],ecx
  437c46:	mov    ecx,DWORD PTR ds:0x4470a8
  437c4c:	add    ecx,0x10
  437c4f:	mov    DWORD PTR ds:0x4470a8,ecx
  437c55:	movzx  eax,BYTE PTR [ecx+0x5]
  437c59:	movzx  edi,BYTE PTR [ecx+0x3]
  437c5d:	movzx  ecx,WORD PTR [ecx+0x1]
  437c61:	shl    eax,0x8
  437c64:	add    eax,edi
  437c66:	shl    eax,0x10
  437c69:	add    eax,ecx
  437c6b:	mov    ds:0x447d04,eax
  437c70:	mov    ecx,0xb6303fa3
  437c75:	sub    ecx,DWORD PTR ds:0x447d14
  437c7b:	xor    ecx,eax
  437c7d:	mov    DWORD PTR [esi+0x8],ecx
  437c80:	mov    ecx,DWORD PTR ds:0x4470a8
  437c86:	movzx  eax,BYTE PTR [ecx+0xe]
  437c8a:	movzx  edi,BYTE PTR [ecx+0xb]
  437c8e:	shl    eax,0x8
  437c91:	add    eax,edi
  437c93:	movzx  edi,BYTE PTR [ecx+0x9]
  437c97:	movzx  ecx,BYTE PTR [ecx+0x6]
  437c9b:	shl    eax,0x8
  437c9e:	add    eax,edi
  437ca0:	shl    eax,0x8
  437ca3:	add    eax,ecx
  437ca5:	mov    ds:0x447d04,eax
  437caa:	mov    ecx,0xb6303fa3
  437caf:	sub    ecx,DWORD PTR ds:0x447d14
  437cb5:	xor    ecx,eax
  437cb7:	mov    DWORD PTR [esi+0xc],ecx
  437cba:	mov    ecx,DWORD PTR ds:0x4470a8
  437cc0:	add    ecx,0x10
  437cc3:	mov    DWORD PTR ds:0x4470a8,ecx
  437cc9:	movzx  eax,BYTE PTR [ecx+0x5]
  437ccd:	movzx  edi,BYTE PTR [ecx+0x3]
  437cd1:	movzx  ecx,WORD PTR [ecx+0x1]
  437cd5:	shl    eax,0x8
  437cd8:	add    eax,edi
  437cda:	shl    eax,0x10
  437cdd:	add    eax,ecx
  437cdf:	mov    ds:0x447d04,eax
  437ce4:	mov    ecx,0xb6303fa3
  437ce9:	sub    ecx,DWORD PTR ds:0x447d14
  437cef:	xor    ecx,eax
  437cf1:	mov    DWORD PTR [esi+0x10],ecx
  437cf4:	mov    ecx,DWORD PTR ds:0x4470a8
  437cfa:	movzx  eax,BYTE PTR [ecx+0xe]
  437cfe:	movzx  edi,BYTE PTR [ecx+0xb]
  437d02:	shl    eax,0x8
  437d05:	add    eax,edi
  437d07:	movzx  edi,BYTE PTR [ecx+0x9]
  437d0b:	shl    eax,0x8
  437d0e:	movzx  ecx,BYTE PTR [ecx+0x6]
  437d12:	add    eax,edi
  437d14:	shl    eax,0x8
  437d17:	add    eax,ecx
  437d19:	mov    ds:0x447d04,eax
  437d1e:	mov    ecx,0xb6303fa3
  437d23:	sub    ecx,DWORD PTR ds:0x447d14
  437d29:	add    esi,0x28
  437d2c:	xor    ecx,eax
  437d2e:	mov    DWORD PTR [esi-0x14],ecx
  437d31:	mov    ecx,DWORD PTR ds:0x4470a8
  437d37:	add    ecx,0x10
  437d3a:	mov    DWORD PTR ds:0x4470a8,ecx
  437d40:	movzx  eax,BYTE PTR [ecx+0x5]
  437d44:	movzx  edi,BYTE PTR [ecx+0x3]
  437d48:	movzx  ecx,WORD PTR [ecx+0x1]
  437d4c:	shl    eax,0x8
  437d4f:	add    eax,edi
  437d51:	shl    eax,0x10
  437d54:	add    eax,ecx
  437d56:	mov    ds:0x447d04,eax
  437d5b:	mov    ecx,0xb6303fa3
  437d60:	sub    ecx,DWORD PTR ds:0x447d14
  437d66:	xor    ecx,eax
  437d68:	mov    DWORD PTR [esi-0x10],ecx
  437d6b:	mov    ecx,DWORD PTR ds:0x4470a8
  437d71:	movzx  eax,BYTE PTR [ecx+0xe]
  437d75:	movzx  edi,BYTE PTR [ecx+0xb]
  437d79:	shl    eax,0x8
  437d7c:	add    eax,edi
  437d7e:	movzx  edi,BYTE PTR [ecx+0x9]
  437d82:	movzx  ecx,BYTE PTR [ecx+0x6]
  437d86:	shl    eax,0x8
  437d89:	add    eax,edi
  437d8b:	shl    eax,0x8
  437d8e:	add    eax,ecx
  437d90:	mov    ds:0x447d04,eax
  437d95:	mov    ecx,0xb6303fa3
  437d9a:	sub    ecx,DWORD PTR ds:0x447d14
  437da0:	xor    ecx,eax
  437da2:	mov    DWORD PTR [esi-0xc],ecx
  437da5:	mov    ecx,DWORD PTR ds:0x4470a8
  437dab:	add    ecx,0x10
  437dae:	mov    DWORD PTR ds:0x4470a8,ecx
  437db4:	movzx  eax,BYTE PTR [ecx+0x5]
  437db8:	movzx  edi,BYTE PTR [ecx+0x3]
  437dbc:	movzx  ecx,WORD PTR [ecx+0x1]
  437dc0:	shl    eax,0x8
  437dc3:	add    eax,edi
  437dc5:	shl    eax,0x10
  437dc8:	add    eax,ecx
  437dca:	mov    ds:0x447d04,eax
  437dcf:	mov    ecx,0xb6303fa3
  437dd4:	sub    ecx,DWORD PTR ds:0x447d14
  437dda:	xor    ecx,eax
  437ddc:	mov    DWORD PTR [esi-0x8],ecx
  437ddf:	mov    ecx,DWORD PTR ds:0x4470a8
  437de5:	movzx  eax,BYTE PTR [ecx+0xe]
  437de9:	movzx  edi,BYTE PTR [ecx+0xb]
  437ded:	shl    eax,0x8
  437df0:	add    eax,edi
  437df2:	movzx  edi,BYTE PTR [ecx+0x9]
  437df6:	movzx  ecx,BYTE PTR [ecx+0x6]
  437dfa:	shl    eax,0x8
  437dfd:	add    eax,edi
  437dff:	shl    eax,0x8
  437e02:	add    eax,ecx
  437e04:	mov    ecx,0xb6303fa3
  437e09:	sub    ecx,DWORD PTR ds:0x447d14
  437e0f:	mov    ds:0x447d04,eax
  437e14:	xor    ecx,eax
  437e16:	mov    DWORD PTR [esi-0x4],ecx
  437e19:	mov    ecx,DWORD PTR ds:0x4470a8
  437e1f:	add    ecx,0x10
  437e22:	dec    edx
  437e23:	mov    DWORD PTR ds:0x4470a8,ecx
  437e29:	jne    0x437be2
  437e2f:	movzx  eax,BYTE PTR [ecx+0x5]
  437e33:	movzx  edx,BYTE PTR [ecx+0x3]
  437e37:	movzx  ecx,WORD PTR [ecx+0x1]
  437e3b:	shl    eax,0x8
  437e3e:	add    eax,edx
  437e40:	shl    eax,0x10
  437e43:	mov    edx,0xb6303fa3
  437e48:	sub    edx,DWORD PTR ds:0x447d14
  437e4e:	add    eax,ecx
  437e50:	xor    edx,eax
  437e52:	mov    ds:0x447d04,eax
  437e57:	mov    DWORD PTR [esi],edx
  437e59:	mov    esi,DWORD PTR ds:0x447d1c
  437e5f:	add    esi,0x1e414
  437e65:	mov    edi,0xe3
  437e6a:	lea    ebx,[ebx+0x0]
  437e70:	mov    eax,ds:0x4470ac
  437e75:	mov    eax,DWORD PTR [eax]
  437e77:	mov    ds:0x447d04,eax
  437e7c:	mov    ecx,0xa0006b7b
  437e81:	sub    ecx,DWORD PTR ds:0x447d14
  437e87:	push   0x0
  437e89:	xor    ecx,eax
  437e8b:	mov    DWORD PTR [esi],ecx
  437e8d:	mov    ecx,DWORD PTR ds:0x4470ac
  437e93:	movzx  eax,WORD PTR [ecx+0x7]
  437e97:	movzx  edx,WORD PTR [ecx+0x4]
  437e9b:	push   0x15f
  437ea0:	push   0xe1
  437ea5:	push   0xbb
  437eaa:	shl    eax,0x10
  437ead:	mov    ecx,0xa0006b7b
  437eb2:	sub    ecx,DWORD PTR ds:0x447d14
  437eb8:	push   0x81
  437ebd:	add    eax,edx
  437ebf:	push   0x0
  437ec1:	xor    ecx,eax
  437ec3:	mov    ds:0x447d04,eax
  437ec8:	push   ebx
  437ec9:	mov    DWORD PTR [esi+0x4],ecx
  437ecc:	call   ebp
  437ece:	add    DWORD PTR ds:0x4470ac,0x10
  437ed5:	add    esi,0x8
  437ed8:	dec    edi
  437ed9:	jne    0x437e70
  437edb:	mov    edx,DWORD PTR ds:0x447d1c
  437ee1:	mov    ecx,DWORD PTR ds:0x4470b0
  437ee7:	add    edx,0x1eb2c
  437eed:	mov    esi,0xdd
  437ef2:	movzx  eax,BYTE PTR [ecx+0x9]
  437ef6:	movzx  edi,BYTE PTR [ecx+0x6]
  437efa:	shl    eax,0x8
  437efd:	add    eax,edi
  437eff:	movzx  edi,BYTE PTR [ecx+0x2]
  437f03:	movzx  ecx,BYTE PTR [ecx]
  437f06:	shl    eax,0x8
  437f09:	add    eax,edi
  437f0b:	shl    eax,0x8
  437f0e:	add    eax,ecx
  437f10:	mov    ecx,DWORD PTR ds:0x447d14
  437f16:	sub    ecx,0x80004001
  437f1c:	neg    ecx
  437f1e:	sbb    ecx,ecx
  437f20:	and    ecx,0xaec57d2d
  437f26:	add    ecx,0x513abf68
  437f2c:	xor    ecx,eax
  437f2e:	mov    ds:0x447d04,eax
  437f33:	mov    DWORD PTR [edx],ecx
  437f35:	mov    ecx,DWORD PTR ds:0x4470b0
  437f3b:	movzx  eax,BYTE PTR [ecx+0xf]
  437f3f:	movzx  edi,BYTE PTR [ecx+0xd]
  437f43:	movzx  ecx,WORD PTR [ecx+0xa]
  437f47:	shl    eax,0x8
  437f4a:	add    eax,edi
  437f4c:	shl    eax,0x10
  437f4f:	add    eax,ecx
  437f51:	mov    ecx,0xd13aff69
  437f56:	sub    ecx,DWORD PTR ds:0x447d14
  437f5c:	mov    ds:0x447d04,eax
  437f61:	xor    ecx,eax
  437f63:	mov    DWORD PTR [edx+0x4],ecx
  437f66:	mov    ecx,DWORD PTR ds:0x4470b0
  437f6c:	add    ecx,0x10
  437f6f:	add    edx,0x8
  437f72:	dec    esi
  437f73:	mov    DWORD PTR ds:0x4470b0,ecx
  437f79:	jne    0x437ef2
  437f7f:	push   0x446b5c
  437f84:	push   esi
  437f85:	call   DWORD PTR ds:0x444060
  437f8b:	mov    ecx,DWORD PTR ds:0x447d1c
  437f91:	mov    edx,DWORD PTR ds:0x4470b4
  437f97:	add    ecx,0x1f214
  437f9d:	mov    esi,0x13
  437fa2:	movzx  eax,WORD PTR [edx+0x6]
  437fa6:	movzx  edi,BYTE PTR [edx+0x3]
  437faa:	movzx  edx,BYTE PTR [edx+0x1]
  437fae:	shl    eax,0x8
  437fb1:	add    eax,edi
  437fb3:	shl    eax,0x8
  437fb6:	add    eax,edx
  437fb8:	mov    edx,DWORD PTR ds:0x447d14
  437fbe:	add    edx,0xee616aa6
  437fc4:	xor    edx,eax
  437fc6:	mov    ds:0x447d04,eax
  437fcb:	mov    DWORD PTR [ecx],edx
  437fcd:	mov    edx,DWORD PTR ds:0x4470b4
  437fd3:	movzx  eax,BYTE PTR [edx+0xf]
  437fd7:	movzx  edi,BYTE PTR [edx+0xc]
  437fdb:	movzx  edx,WORD PTR [edx+0xa]
  437fdf:	shl    eax,0x8
  437fe2:	add    eax,edi
  437fe4:	shl    eax,0x10
  437fe7:	add    eax,edx
  437fe9:	mov    edx,0xee61eaa8
  437fee:	sub    edx,DWORD PTR ds:0x447d14
  437ff4:	mov    ds:0x447d04,eax
  437ff9:	xor    edx,eax
  437ffb:	mov    DWORD PTR [ecx+0x4],edx
  437ffe:	mov    edx,DWORD PTR ds:0x4470b4
  438004:	add    edx,0x10
  438007:	add    ecx,0x8
  43800a:	dec    esi
  43800b:	mov    DWORD PTR ds:0x4470b4,edx
  438011:	jne    0x437fa2
  438013:	mov    eax,DWORD PTR [esp+0x10]
  438017:	mov    esi,DWORD PTR ds:0x44402c
  43801d:	test   eax,eax
  43801f:	je     0x438024
  438021:	push   eax
  438022:	call   esi
  438024:	mov    eax,DWORD PTR [esp+0x14]
  438028:	test   eax,eax
  43802a:	je     0x43802f
  43802c:	push   eax
  43802d:	call   esi
  43802f:	pop    edi
  438030:	pop    esi
  438031:	pop    ebp
  438032:	pop    ebx
  438033:	add    esp,0x8
  438036:	ret    
  438037:	int3   
  438038:	int3   
  438039:	int3   
  43803a:	int3   
  43803b:	int3   
  43803c:	int3   
  43803d:	int3   
  43803e:	int3   
  43803f:	int3   
  438040:	cs cli 
  438042:	add    bh,bh
  438044:	in     eax,dx
  438045:	add    BYTE PTR [ecx+0x65004fff],cl
  43804b:	jno    0x43804e
  43804d:	mov    DWORD PTR [eax],eax
  43804f:	jmp    FWORD PTR [edx+ebx*4+0xdcffff]
  438056:	add    BYTE PTR [eax],al
  438058:	lock add BYTE PTR [edi+ebp*2],bh
  43805c:	push   edx
  43805d:	and    al,0xff
  43805f:	sbb    edi,0x18
  438062:	inc    DWORD PTR [eax]
  438064:	cmp    bh,0x0
  438067:	add    BYTE PTR [ebx+0x3c464000],bh
  43806d:	mov    edi,edi
  43806f:	int3   
  438070:	cmp    eax,0xf6ffcca4
  438075:	add    BYTE PTR [eax],al
  438077:	dec    DWORD PTR [esp+ecx*8]
  43807a:	jle    0x4380ac
  43807c:	inc    esi
  43807e:	mov    edi,edi
  438080:	das    
  438081:	mov    ebx,0xfffeffff
  438086:	add    DWORD PTR [eax],0x58
  438089:	add    esp,0xffffffd1
  43808c:	(bad)  
  43808d:	jmp    0x8300:0xc33ffff
  438094:	jp     0x438096
  438096:	add    ah,cl
  438098:	sbb    al,0x0
  43809a:	ds xchg esi,eax
  43809c:	test   DWORD PTR [ebx],ebx
  43809e:	(bad)  
  43809f:	(bad)  
  4380a0:	fisubr DWORD PTR [edi-0x1]
  4380a3:	add    BYTE PTR [edi-0x2ff767d],cl
  4380a9:	add    BYTE PTR [edi-0x65],bl
  4380ac:	push   eax
  4380ad:	sahf   
  4380ae:	add    BYTE PTR [eax],al
  4380b0:	mov    dh,0xb9
  4380b2:	add    BYTE PTR [eax],al
  4380b4:	pop    eax
  4380b5:	int3   
  4380b6:	(bad)  
  4380b7:	dec    DWORD PTR [esi]
  4380b9:	add    cl,dh
  4380bb:	xor    al,0xb6
  4380bd:	ins    DWORD PTR es:[edi],dx
  4380be:	(bad)  
  4380bf:	dec    DWORD PTR [eax+eax*4+0x4883cc]
  4380c6:	add    BYTE PTR [eax],al
  4380c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4380c9:	sbb    DWORD PTR [esi+0xf5bd32],0xffffffff
  4380d0:	sbb    al,0xaa
  4380d2:	inc    DWORD PTR [eax]
  4380d4:	mov    al,0xff
  4380d6:	inc    DWORD PTR [eax]
  4380d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4380d9:	add    bh,ah
  4380db:	sar    DWORD PTR [edi],cl
  4380dd:	enter  0xff83,0xbf
  4380e1:	dec    edi
  4380e2:	int3   
  4380e3:	int3   
  4380e4:	mov    bl,0xff
  4380e6:	add    BYTE PTR [eax],al
  4380e8:	pop    esi
  4380e9:	call   FWORD PTR [esi]
  4380eb:	xchg   BYTE PTR [edi-0x5c7cff72],cl
  4380f1:	lahf   
  4380f2:	add    DWORD PTR [eax],0x49
  4380f5:	int3   
  4380f6:	(bad)  
  4380f7:	dec    DWORD PTR [eax]
  4380f9:	dec    DWORD PTR [edx-0x9e0742]
  4380ff:	add    BYTE PTR [edx-0x43330059],bh
  438105:	add    bh,bh
  438107:	push   DWORD PTR [ebx-0x1]
  43810a:	mov    BYTE PTR [eax+esi*1],al
  43810d:	ins    BYTE PTR es:[edi],dx
  43810e:	inc    DWORD PTR [eax]
  438110:	push   edx
  438111:	push   edi
  438112:	add    bh,bh
  438114:	mov    ch,0xff
  438116:	add    BYTE PTR [ecx+0x7ca983bf],cl
  43811c:	push   ecx
  43811d:	cli    
  43811e:	inc    DWORD PTR [eax]
  438120:	or     al,dl
  438122:	inc    DWORD PTR [eax]
  438124:	jp     0x4380f2
  438126:	int3   
  438127:	inc    DWORD PTR ds:0xd2412600
  43812d:	test   edi,edi
  43812f:	int3   
  438130:	inc    esi
  438131:	xchg   ebx,eax
  438132:	inc    DWORD PTR [eax]
  438134:	lahf   
  438135:	or     esp,0xffffffff
  438138:	dec    edx
  438139:	(bad)  
  43813a:	mov    eax,0xcc5624bc
  43813f:	jmp    ecx
  438141:	jmp    0xcc9a0a46
  438146:	inc    DWORD PTR [eax]
  438148:	xchg   edi,eax
  438149:	inc    DWORD PTR [ebx+0x66]
  43814c:	into   
  43814d:	cmp    edi,edi
  43814f:	call   FWORD PTR [esi]
  438151:	loopne 0x4380d6
  438153:	push   ecx
  438155:	mov    edi,edi
  438157:	call   esp
  438159:	jmp    FWORD PTR ds:0xffbe316d
  43815f:	jmp    DWORD PTR [ebx-0x5c]
  438162:	add    BYTE PTR [eax],al
  438164:	test   bh,bh
  438166:	add    DWORD PTR [eax],0x4d
  438169:	call   DWORD PTR [ebx+ebp*2+0xff9236]
  438170:	int    0xba
  438172:	cmp    edi,0xffffffb9
  438175:	inc    DWORD PTR [ebx+0x398387cc]
  43817b:	dec    DWORD PTR [edx+0x46ff8901]
  438181:	cwde   
  438182:	inc    DWORD PTR [ebx-0xffff5b]
  438188:	ins    DWORD PTR es:[edi],dx
  438189:	add    ch,ch
  43818b:	xchg   ebp,eax
  43818c:	sbb    al,0x21
  43818e:	add    BYTE PTR [eax],al
  438190:	xchg   esi,eax
  438191:	xchg   edx,eax
  438192:	add    BYTE PTR [ebx+0xff02],al
  438198:	imul   edi,edi,0xffffffc6
  43819b:	ins    DWORD PTR es:[edi],dx
  43819c:	or     edx,esp
  43819e:	inc    DWORD PTR [eax]
  4381a0:	mov    esi,0x12ccff4d
  4381a5:	(bad)  
  4381a6:	(bad)  
  4381a7:	jmp    DWORD PTR [esi+0x6c51b4ff]
  4381ad:	sub    al,0x0
  4381af:	(bad)  
  4381b0:	std    
  4381b1:	add    bh,bh
  4381b3:	or     DWORD PTR [ecx-0x9ff0001],0xffffffff
  4381ba:	sbb    DWORD PTR [eax-0x5f],ebp
  4381bd:	mov    ds:0x4f750000,al
  4381c2:	int3   
  4381c3:	int3   
  4381c4:	dec    edx
  4381c5:	int3   
  4381c6:	inc    DWORD PTR [ebx-0x1d070088]
  4381cc:	sbb    BYTE PTR [edi+edi*8+0x0],ch
  4381d0:	mov    DWORD PTR [edx-0xa60001],edi
  4381d6:	(bad)  
  4381d7:	inc    DWORD PTR [esi]
  4381d9:	add    DWORD PTR [ecx-0x7c66041c],0xffffffff
  4381e0:	fst    QWORD PTR [ecx+0x0]
  4381e3:	int3   
  4381e4:	icebp  
  4381e5:	int3   
  4381e6:	dec    esp
  4381e8:	sbb    eax,0xa72f9700
  4381ed:	test   al,0xff
  4381ef:	(bad)  
  4381f0:	jnp    0x43822f
  4381f2:	(bad)  
  4381f3:	dec    DWORD PTR [ebp-0x34]
  4381f6:	or     esp,0x4a
  4381f9:	(bad)  
  4381fa:	push   DWORD PTR ds:0xff4430
  438200:	sbb    edi,edi
  438202:	inc    DWORD PTR [eax]
  438204:	inc    edi
  438205:	add    BYTE PTR [ebx-0x55005800],al
  43820b:	push   ebx
  43820c:	ins    DWORD PTR es:[edi],dx
  43820d:	sub    BYTE PTR [ebx+0x4391ff],al
  438213:	add    BYTE PTR [ebx],cl
  438215:	add    DWORD PTR [eax],0xffffffff
  438218:	(bad)  
  438219:	(bad)  
  43821a:	ds cmp al,0xe9
  43821d:	fwait
  43821e:	add    bh,bh
  438220:	gs dec ecx
  438222:	(bad)  
  438223:	push   DWORD PTR [ebx+0x0]
  438226:	(bad)  
  438227:	call   DWORD PTR [esi-0x1]
  43822a:	mov    DWORD PTR [ebx-0x1c],0xbdff0047
  438231:	sbb    al,0x0
  438233:	(bad)  
  438234:	fdivp  st(7),st
  438236:	(bad)  
  438237:	inc    DWORD PTR [ecx-0x1]
  43823a:	jns    0x4381fb
  43823c:	call   0x674282a5
  438241:	das    
  438242:	add    bh,bh
  438244:	ret    0xff00
  438247:	add    BYTE PTR [edi+edi*8],dh
  43824a:	fild   WORD PTR [eax-0x33205b]
  438250:	aam    0xe4
  438252:	(bad)  
  438253:	inc    DWORD PTR ds:0x9ff00ff
  438259:	add    BYTE PTR [edi-0x49],bl
  43825c:	cmc    
  43825d:	test   eax,0x297d00cc
  438262:	inc    DWORD PTR [ebx-0x7c00009c]
  438268:	sar    edi,1
  43826a:	popf   
  43826b:	sub    eax,0xff1bbf
  438270:	addr16 retf 0x8983
  438274:	pop    ebp
  438275:	dec    DWORD PTR [ecx-0x42007a01]
  43827b:	inc    ebp
  43827c:	popa   
  43827d:	ss (bad) 
  43827f:	(bad)  
  438280:	cld    
  438281:	test   eax,0xffccff00
  438286:	inc    DWORD PTR [eax]
  438288:	push   ebx
  438289:	call   edi
  43828b:	xor    dl,BYTE PTR [eax-0x430076ef]
  438291:	sahf   
  438292:	(bad)  
  438293:	push   DWORD PTR [eax+eax*1]
  438296:	inc    DWORD PTR [eax]
  438298:	mov    eax,0x8eb05cff
  43829d:	mov    ebx,0x45a6ccff
  4382a2:	or     DWORD PTR [ecx-0x76ffff4f],0xffffff9d
  4382a9:	add    BYTE PTR [esi],ah
  4382ab:	pop    ebx
  4382ac:	fwait
  4382ad:	inc    WORD PTR [eax]
  4382b0:	xor    esi,edx
  4382b2:	int3   
  4382b3:	int3   
  4382b4:	ja     0x4382b5
  4382b6:	inc    DWORD PTR [ebx-0x60eb0065]
  4382bc:	and    BYTE PTR [edi+0x0],ah
  4382bf:	add    BYTE PTR [ecx+0x2b],ch
  4382c2:	add    bh,bh
  4382c4:	fwait
  4382c5:	(bad)  
  4382c6:	(bad)  
  4382c7:	dec    DWORD PTR [eax-0x1]
  4382ca:	ficomp DWORD PTR [ebx+0x83e37f]
  4382d0:	out    0x6f,al
  4382d2:	inc    DWORD PTR [eax]
  4382d4:	icebp  
  4382d5:	add    bh,bh
  4382d7:	int3   
  4382d8:	inc    edi
  4382d9:	mov    DWORD PTR [eax+0x1c540f],ecx
  4382df:	add    BYTE PTR [esi+edx*8-0x7d],ah
  4382e3:	add    BYTE PTR [eax+0x0],bh
  4382e6:	(bad)  
  4382e7:	(bad)  
  4382e8:	mov    ecx,0x65884f83
  4382ed:	(bad)  
  4382ee:	inc    DWORD PTR [eax]
  4382f0:	lods   al,BYTE PTR ds:[esi]
  4382f1:	mov    ch,0xff
  4382f3:	call   FWORD PTR [esi]
  4382f5:	int3   
  4382f6:	mov    edi,edi
  4382f8:	mov    ah,0x0
  4382fa:	lock in al,0x27
  4382fd:	sar    bh,0x0
  438300:	sbb    eax,0x37008369
  438305:	add    bh,bh
  438307:	add    BYTE PTR ds:0xa3a31500,cl
  43830d:	or     ecx,esp
  43830f:	add    BYTE PTR [edx-0x5f7cffd3],bl
  438315:	add    DWORD PTR [eax],0x0
  438318:	inc    ebp
  438319:	call   DWORD PTR [ecx]
  43831b:	out    dx,eax
  43831c:	call   0xd1438250
  438321:	dec    esi
  438322:	add    BYTE PTR [eax],al
  438324:	mov    ch,0x0
  438326:	(bad)  
  438327:	(bad)  
  438328:	fadd   QWORD PTR [eax]
  43832a:	sub    al,0x1e
  43832c:	sbb    bh,BYTE PTR [ebx]
  43832e:	cmp    edi,0x2e
  438331:	xchg   esp,eax
  438332:	inc    DWORD PTR [eax]
  438334:	repz inc DWORD PTR [eax]
  438337:	jmp    FWORD PTR [edx-0x7d]
  43833a:	cmc    
  43833b:	rcr    DWORD PTR [edi+0x7],0xff
  43833f:	add    BYTE PTR [edx+0x3bffff19],cl
  438345:	add    bh,bh
  438347:	add    DWORD PTR [ecx+0x232c4700],0xffffffd3
  43834e:	mov    edi,edi
  438350:	dec    ecx
  438351:	xchg   edx,eax
  438352:	add    BYTE PTR [ecx+0xffff00],cl
  438358:	or     cl,ah
  43835a:	ret    0x7e85
  43835d:	and    bh,bh
  43835f:	add    BYTE PTR [ebp+0x69],bl
  438362:	mov    DWORD PTR [eax],eax
  438364:	clc    
  438365:	dec    esp
  438367:	add    al,dl
  438369:	int3   
  43836a:	inc    esi
  43836b:	mov    ebp,0x89ff8b98
  438370:	push   cs
  438371:	loop   0x438373
  438373:	mov    DWORD PTR [edx-0x1],ebx
  438376:	dec    DWORD PTR [ecx-0x1067ffa0]
  43837c:	xlat   BYTE PTR ds:[ebx]
  43837d:	int    0xff
  43837f:	or     DWORD PTR [esi-0x47],0x0
  438383:	call   FWORD PTR [eax]
  438385:	(bad)  
  438386:	dec    esp
  438388:	loop   0x43830d
  43838a:	ret    0xab9e
  43838d:	pop    ebx
  43838e:	dec    DWORD PTR [ecx-0xff0c04]
  438394:	retf   0xff
  438397:	(bad)  
  438398:	mov    edi,0xee832500
  43839d:	sahf   
  43839e:	(bad)  
  43839f:	call   FWORD PTR ds:0xd80083f6
  4383a5:	inc    DWORD PTR [ebx+0x50ffb6ff]
  4383ab:	jp     0x438374
  4383ad:	in     al,0xff
  4383af:	call   edi
  4383b1:	sub    edi,edi
  4383b3:	dec    DWORD PTR [ecx+0x39830000]
  4383b9:	add    BYTE PTR [ecx+eiz*2-0x9],dl
  4383bd:	add    al,0xff
  4383bf:	jmp    FWORD PTR [ebx+ecx*8]
  4383c2:	add    DWORD PTR [ebx-0x7ce4],0x1e
  4383c9:	int3   
  4383ca:	cmp    al,0x4a
  4383cc:	leave  
  4383cd:	outs   dx,DWORD PTR ds:[esi]
  4383ce:	add    bh,bh
  4383d0:	pop    esi
  4383d1:	icebp  
  4383d2:	(bad)  
  4383d3:	jmp    DWORD PTR [esi+0x40ffffff]
  4383d9:	add    BYTE PTR [ecx+0x5f],dh
  4383dc:	mov    eax,ds:0x2600835e
  4383e1:	or     edi,edi
  4383e3:	mov    DWORD PTR [edi-0x78330100],eax
  4383e9:	add    bl,al
  4383eb:	or     eax,0xff9e0d
  4383f0:	jns    0x4383d9
  4383f2:	add    bh,bh
  4383f4:	ins    DWORD PTR es:[edi],dx
  4383f5:	cmp    edi,0x0
  4383f8:	jl     0x4383f9
  4383fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4383fb:	in     eax,dx
  4383fc:	shl    ecx,cl
  4383fe:	inc    DWORD PTR [eax]
  438400:	jb     0x438435
  438402:	inc    DWORD PTR [ebx-0x7c0033c5]
  438408:	test   DWORD PTR [eax],eax
  43840a:	dec    ecx
  43840b:	jl     0x4383ca
  43840d:	ins    DWORD PTR es:[edi],dx
  43840e:	add    BYTE PTR [eax],al
  438410:	mov    ah,0xd0
  438412:	inc    DWORD PTR [eax]
  438414:	test   eax,0x7000ffff
  438419:	add    BYTE PTR [ecx-0x7ca73954],al
  43841f:	add    BYTE PTR ds:0xf10000d5,bl
  438425:	add    BYTE PTR [eax],al
  438427:	jmp    DWORD PTR [eax-0x7d]
  43842a:	in     al,dx
  43842b:	and    al,0x61
  43842d:	imul   eax,DWORD PTR [eax],0x0
  438430:	adc    eax,0x298900ab
  438435:	inc    DWORD PTR [eax]
  438437:	call   FWORD PTR [edi+edi*8+0x3d]
  43843b:	jne    0x4384a3
  43843d:	popa   
  43843e:	add    BYTE PTR [eax],al
  438440:	cld    
  438441:	imul   eax,DWORD PTR [eax],0xff70ff
  438447:	call   DWORD PTR [edi+0x0]
  43844a:	sub    eax,0x6179fb
  43844f:	(bad)  
  438450:	jmp    0x43845a
  438452:	(bad)  
  438453:	jmp    DWORD PTR [ecx]
  438455:	add    BYTE PTR [eax],al
  438457:	add    BYTE PTR [edx-0x6ac6e201],dh
  43845d:	cmp    bh,0xff
  438460:	repnz inc eax
  438462:	(bad)  
  438463:	jmp    FWORD PTR [edi-0x37ff767d]
  438469:	add    cl,dh
  43846b:	jmp    0x50d6:0xffff81f6
  438472:	int3   
  438473:	jmp    DWORD PTR [esi+0x7800ff00]
  438479:	add    BYTE PTR [esi-0x76bbd942],bh
  43847f:	jmp    DWORD PTR [ebp-0x1fff00f0]
  438485:	inc    DWORD PTR [ebx-0x7a000200]
  43848b:	scas   eax,DWORD PTR es:[edi]
  43848c:	add    al,0xf
  43848e:	int3   
  43848f:	jmp    DWORD PTR [ebx-0x3b]
  438492:	(bad)  
  438493:	jmp    DWORD PTR [ecx+0x58ff00ff]
  438499:	or     DWORD PTR [edx],0xe
  43849c:	(bad)  
  43849d:	jl     0x43849e
  43849f:	or     DWORD PTR [ebp+0x7389cc6d],0x0
  4384a6:	add    BYTE PTR [eax],al
  4384a8:	sti    
  4384a9:	mov    ecx,edx
  4384ab:	sbb    eax,0xffff89a9
  4384b0:	out    dx,eax
  4384b1:	repz inc DWORD PTR [ebx-0x7c92]
  4384b8:	je     0x43843d
  4384ba:	jne    0x43846f
  4384bc:	paddd  mm7,mm7
  4384bf:	int3   
  4384c0:	clc    
  4384c1:	hlt    
  4384c2:	(bad)  
  4384c3:	inc    DWORD PTR [edi]
  4384c5:	inc    DWORD PTR [eax]
  4384c7:	int3   
  4384c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4384c9:	int3   
  4384ca:	push   0xccfa3f76
  4384cf:	xor    edx,0x7d
  4384d2:	add    bh,bh
  4384d4:	jg     0x43845f
  4384d6:	add    bh,bh
  4384d8:	inc    esi
  4384d9:	call   FWORD PTR [ecx+0x6c]
  4384dc:	and    bl,BYTE PTR [ebp-0x77]
  4384df:	int3   
  4384e0:	(bad)  
  4384e1:	push   esi
  4384e2:	add    bh,bh
  4384e4:	inc    edx
  4384e5:	add    DWORD PTR [eax],0xffffffff
  4384e8:	lods   al,BYTE PTR ds:[esi]
  4384e9:	or     edi,0xffffffd6
  4384ec:	data16 jp 0x4384ee
  4384ef:	dec    DWORD PTR [esi-0x1233ffcc]
  4384f5:	cmp    edi,0xffffffff
  4384f8:	xor    al,0xcc
  4384fa:	das    
  4384fb:	lock mov ds:0x5acc00e0,al
  438501:	hlt    
  438502:	inc    DWORD PTR [eax]
  438504:	aas    
  438505:	add    BYTE PTR [eax],al
  438507:	push   DWORD PTR [eax]
  438509:	dec    DWORD PTR [ebp-0x948f19]
  43850f:	dec    DWORD PTR [ebx-0x3e]
  438512:	(bad)  
  438513:	push   DWORD PTR [ecx+0x0]
  438516:	or     DWORD PTR [ecx+0x2881831d],0xfffffff4
  43851d:	pop    esp
  43851e:	add    bh,bh
  438520:	push   ds
  438521:	inc    edx
  438522:	add    DWORD PTR [eax],0x3d
  438525:	inc    DWORD PTR [eax]
  438527:	dec    esi
  438529:	dec    ecx
  43852b:	xchg   edi,eax
  43852c:	lods   al,BYTE PTR ds:[esi]
  43852d:	je     0x43852f
  43852f:	add    BYTE PTR [esi+0x76ffff4d],bh
  438535:	inc    DWORD PTR [eax]
  438537:	add    BYTE PTR [edx-0x77],bl
  43853a:	int    0xe9
  43853c:	lock sbb edi,edi
  43853f:	inc    DWORD PTR [edi-0x6e003366]
  438545:	mov    DWORD PTR [eax],eax
  438547:	add    BYTE PTR [ebx],bl
  438549:	call   DWORD PTR [eax+0x68]
  43854c:	sar    BYTE PTR [ebp+0x0],cl
  43854f:	add    BYTE PTR [ebx+0x7bff00d5],ah
  438555:	(bad)  
  438556:	(bad)  
  438557:	call   FWORD PTR [ebx-0x1]
  43855a:	xchg   esi,eax
  43855b:	popf   
  43855c:	push   cs
  43855d:	add    WORD PTR [eax],0x31
  438561:	push   ecx
  438562:	int3   
  438563:	adc    DWORD PTR [esi-0x1],0xffffffff
  438567:	add    BYTE PTR [eax],al
  438569:	add    BYTE PTR [edx-0x7c1bd013],al
  43856f:	call   esp
  438571:	dec    eax
  438572:	mov    edi,edi
  438574:	xor    DWORD PTR [eax],eax
  438576:	add    bh,bh
  438578:	jb     0x43857a
  43857a:	repz (bad) 
  43857c:	les    ecx,FWORD PTR [esi+0x459a0000]
  438582:	dec    esp
  438584:	mov    eax,0x29ccff00
  438589:	inc    eax
  43858b:	pop    edi
  43858c:	sbb    al,0x16
  43858e:	add    BYTE PTR [eax],al
  438590:	pop    ss
  438591:	bound  eax,QWORD PTR [ebx+0x57cc]
  438597:	dec    DWORD PTR [edi+edi*8+0x54]
  43859b:	xchg   DWORD PTR [edi],ecx
  43859d:	daa    
  43859e:	inc    DWORD PTR [eax]
  4385a0:	cwde   
  4385a1:	(bad)  
  4385a2:	inc    DWORD PTR [eax]
  4385a4:	mov    edi,0x5eff8900
  4385a9:	call   DWORD PTR [ecx]
  4385ab:	xor    BYTE PTR [esi+0x1ff0033],bl
  4385b1:	idiv   bh
  4385b3:	(bad)  
  4385b4:	fadd   DWORD PTR [eax]
  4385b6:	add    BYTE PTR [ecx-0x235c006a],cl
  4385bc:	push   edx
  4385bd:	ud0    edi,edi
  4385c0:	jle    0x438631
  4385c2:	add    bh,bh
  4385c4:	jmp    0x4385c5
  4385c6:	dec    esp
  4385c8:	sbb    al,0x83
  4385ca:	dec    ebx
  4385cb:	rol    DWORD PTR [eax+0x6900ff15],0xbb
  4385d2:	int3   
  4385d3:	mov    DWORD PTR [edi-0x5a7c0100],ecx
  4385d9:	inc    DWORD PTR [edx+0x59]
  4385dc:	jmp    DWORD PTR [esi+0x0]
  4385df:	push   eax
  4385e1:	jns    0x4385af
  4385e3:	jmp    ecx
  4385e5:	inc    DWORD PTR [ebx-0x6c7c8334]
  4385eb:	sar    DWORD PTR [esi],cl
  4385ed:	je     0x4385ef
  4385ef:	mov    ebp,esp
  4385f1:	cdq    
  4385f2:	add    BYTE PTR [eax],al
  4385f4:	pop    eax
  4385f5:	inc    DWORD PTR [ebx+0x60066ff]
  4385fb:	push   es
  4385fc:	xchg   edx,eax
  4385fd:	in     al,0x0
  4385ff:	add    BYTE PTR [eax],ch
  438601:	ja     0x43858c
  438603:	dec    DWORD PTR [eax+0x0]
  438606:	(bad)  
  438607:	push   DWORD PTR [esi-0x7a804801]
  43860d:	sub    eax,0xb39fff00
  438612:	add    bh,bh
  438614:	mov    BYTE PTR [ebx-0x7cfe0034],al
  43861a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43861b:	dec    ebx
  43861c:	hlt    
  43861d:	aaa    
  43861e:	dec    esp
  438620:	pop    ebx
  438621:	xchg   edi,eax
  438622:	inc    DWORD PTR [eax]
  438624:	mov    edi,?
  438626:	inc    DWORD PTR [eax]
  438628:	inc    eax
  438629:	add    BYTE PTR [ecx-0x51],bh
  43862c:	jmp    0x57c785e5
  438631:	or     eax,0xff1affff
  438636:	add    bh,bh
  438638:	sub    eax,0x1b79cf00
  43863d:	mov    esp,0x535a8300
  438642:	mov    edi,edi
  438644:	fwait
  438645:	mov    DWORD PTR [eax],eax
  438647:	int3   
  438648:	push   ecx
  438649:	push   DWORD PTR [ebp+0x2a]
  43864c:	mov    ebx,0xbffff47
  438651:	in     eax,0x83
  438653:	call   FWORD PTR [ebx+eax*4-0x1]
  438657:	jmp    ebp
  438659:	inc    DWORD PTR [ebx-0x32]
  43865c:	imul   ah
  43865e:	add    ah,cl
  438660:	std    
  438661:	rol    BYTE PTR [eax],0xff
  438664:	out    0xff,eax
  438666:	(bad)  
  438667:	push   DWORD PTR [eax]
  438669:	push   edi
  43866b:	mov    eax,0xff83b512
  438670:	rcl    edi,1
  438672:	add    bh,bh
  438674:	inc    eax
  438675:	add    ah,cl
  438677:	or     DWORD PTR [esi],0xffffffff
  43867a:	jb     0x43864a
  43867c:	add    DWORD PTR [esi],edi
  43867e:	dec    esp
  438680:	fsubr  QWORD PTR [edi+0x64ff00]
  438686:	add    BYTE PTR [eax],al
  438688:	cmp    bh,bh
  43868a:	sbb    BYTE PTR [ecx-0x33ffe130],0xe0
  438691:	xchg   edi,eax
  438692:	dec    DWORD PTR [ecx+0x83001a]
  438698:	sub    bh,bh
  43869a:	scas   eax,DWORD PTR es:[edi]
  43869b:	jecxz  0x438688
  43869d:	out    dx,eax
  43869e:	(bad)  
  43869f:	jmp    FWORD PTR [ebx+0x33]
  4386a2:	add    BYTE PTR [eax],al
  4386a4:	ret    
  4386a5:	cmp    edi,0xffffffff
  4386a8:	test   DWORD PTR [eax],0xb37dc2ee
  4386ae:	inc    DWORD PTR [ebx-0x7c339789]
  4386b4:	pop    edx
  4386b5:	add    bh,bh
  4386b7:	xor    DWORD PTR [ebx-0x7d],0xffffffbf
  4386bb:	push   0x7f
  4386bd:	scas   eax,DWORD PTR es:[edi]
  4386be:	cmp    edi,0xffffffa9
  4386c1:	sbb    eax,0xff07ff00
  4386c6:	inc    DWORD PTR [ebx+0x5c2affae]
  4386cc:	sub    al,dl
  4386ce:	add    BYTE PTR [eax],al
  4386d0:	jae    0x4386f1
  4386d2:	int3   
  4386d3:	(bad)  
  4386d4:	std    
  4386d5:	add    BYTE PTR [eax],al
  4386d7:	jmp    DWORD PTR [ecx]
  4386d9:	add    BYTE PTR [eax+0x22],ah
  4386dc:	ss jae 0x438662
  4386df:	(bad)  
  4386e0:	mov    edx,0x3100ff05
  4386e5:	(bad)  
  4386e6:	(bad)  
  4386e7:	(bad)  
  4386e8:	sti    
  4386e9:	add    BYTE PTR [esi+0x2c7d75],ch
  4386ef:	push   DWORD PTR [edx+eiz*2-0x1]
  4386f3:	add    BYTE PTR [eax+eax*1-0x1],al
  4386f7:	dec    DWORD PTR [ebp+0x0]
  4386fa:	(bad)
  4386fe:	(bad)  
  4386ff:	(bad)  
  438700:	cli    
  438701:	out    dx,eax
  438702:	inc    DWORD PTR [eax]
  438704:	stos   BYTE PTR es:[edi],al
  438705:	inc    DWORD PTR [eax]
  438707:	add    BYTE PTR [edi+0x0],bl
  43870a:	repnz pop ebp
  43870c:	(bad)  [edx+0x4e9800ff]
  438712:	add    bh,bh
  438714:	je     0x438715
  438716:	inc    DWORD PTR [eax]
  438718:	or     eax,0x522a92ff
  43871d:	xor    al,BYTE PTR [ebx+0xeb0eff]
  438723:	add    BYTE PTR [ecx+ecx*4],bh
  438726:	add    BYTE PTR [ebx+0x4726ff2f],al
  43872c:	data16 sar bh,0x83
  438730:	mul    DWORD PTR ds:0xff5eff00
  438736:	inc    DWORD PTR [eax]
  438738:	jge    0x438706
  43873a:	pop    ebp
  43873b:	std    
  43873c:	sbb    dl,bl
  43873e:	add    bh,bh
  438740:	nop
  438741:	imul   eax,DWORD PTR [eax],0xffffffff
  438744:	xchg   ecx,eax
  438745:	or     esp,0xffffffff
  438748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438749:	call   DWORD PTR [edi-0x38]
  43874c:	inc    ecx
  43874d:	inc    edi
  43874e:	add    DWORD PTR [ebx-0x332874],0x2a
  438755:	inc    DWORD PTR [eax]
  438757:	call   DWORD PTR [edx-0x1]
  43875a:	outs   dx,BYTE PTR ds:[esi]
  43875b:	out    dx,eax
  43875c:	jmp    0x11:0x87ffffc6
  438763:	add    dl,dl
  438765:	inc    DWORD PTR [eax]
  438767:	add    BYTE PTR [edx+0x0],ah
  43876a:	xor    eax,DWORD PTR [edi]
  43876c:	xor    al,al
  43876e:	add    BYTE PTR [ecx-0xff2543],cl
  438774:	aam    0x0
  438776:	add    bh,bh
  438778:	adc    eax,0x821af900
  43877d:	test   eax,0xa07e00ff
  438782:	add    DWORD PTR [eax],0x28
  438785:	dec    DWORD PTR [ecx+0x25ff92ff]
  43878b:	rcr    DWORD PTR [esi],cl
  43878d:	sbb    bh,bh
  43878f:	add    BYTE PTR [eax],bh
  438791:	lahf   
  438792:	mov    DWORD PTR [ecx+0x8990],ecx
  438798:	dec    ecx
  438799:	add    BYTE PTR [esi-0x7be6e7],bl
  43879f:	call   DWORD PTR [edx]
  4387a1:	lock dec DWORD PTR [ecx-0x3300332b]
  4387a8:	mov    dl,0xff
  4387aa:	sbb    BYTE PTR [ebp+0x7c],ch
  4387ad:	or     eax,0x115effff
  4387b2:	add    BYTE PTR [ebx-0x333300ca],al
  4387b8:	cdq    
  4387b9:	add    al,bl
  4387bb:	call   0xbe51:0x83ffd330
  4387c2:	(bad)  
  4387c3:	jmp    DWORD PTR [eax+eax*1-0xd4ff01]
  4387ca:	jae    0x4387be
  4387cc:	sbb    edx,edx
  4387ce:	add    BYTE PTR [ecx-0x76ff0462],cl
  4387d4:	cli    
  4387d5:	int3   
  4387d6:	dec    DWORD PTR [ecx+0x6a0e8377]
  4387dc:	jne    0x4387b7
  4387de:	(bad)  
  4387df:	(bad)  
  4387e0:	ds ins BYTE PTR es:[edi],dx
  4387e2:	add    bh,bh
  4387e4:	xor    ecx,esp
  4387e6:	add    BYTE PTR [ecx-0x49d4ffef],cl
  4387ec:	mov    cl,0x53
  4387ee:	(bad)  
  4387ef:	jmp    esp
  4387f1:	jae    0x4387f2
  4387f3:	add    BYTE PTR [ebp+0x5e00ffff],bh
  4387f9:	inc    esi
  4387fb:	jno    0x43883c
  4387fd:	outs   dx,BYTE PTR ds:[esi]
  4387fe:	(bad)  
  4387ff:	jmp    DWORD PTR [ecx+0x48]
  438802:	mov    DWORD PTR [ebx-0x7c0000ae],eax
  438808:	test   DWORD PTR [ebx-0x62dd3aa9],0x1bfd89ff
  438812:	(bad)  
  438813:	(bad)  
  438814:	ds add bh,bh
  438817:	inc    DWORD PTR [ecx-0x766cc134]
  43881d:	mov    ebp,0xfdafffff
  438822:	(bad)  
  438823:	inc    DWORD PTR [ebx]
  438825:	inc    DWORD PTR [eax]
  438827:	add    BYTE PTR [ecx-0x1],al
  43882a:	or     eax,0xa0ad41
  43882f:	sbb    edx,0x38
  438832:	(bad)  
  438833:	call   DWORD PTR [eax]
  438835:	(bad)  
  438836:	(bad)  
  438837:	(bad)  
  438838:	jmp    0xff68:0xb7e789
  43883f:	jmp    eax
  438841:	addr16 mov esp,ecx
  438844:	mov    eax,ds:0xc5ffff83
  438849:	call   FWORD PTR [edx+0x27]
  43884c:	mov    dl,0xcc
  43884e:	int3   
  43884f:	sbb    eax,0x42
  438852:	add    BYTE PTR [eax],al
  438854:	dec    esi
  438855:	cmp    edi,0xffffffff
  438858:	push   eax
  438859:	add    bl,dh
  43885b:	pop    eax
  43885c:	pop    esp
  43885d:	(bad)
  438860:	fcomp  QWORD PTR [ebx]
  438862:	mov    DWORD PTR [eax],eax
  438864:	or     al,0x89
  438866:	add    DWORD PTR [eax],0xffffff8f
  438869:	add    BYTE PTR [eax+0x26],dl
  43886c:	inc    ecx
  43886d:	rol    DWORD PTR [eax],0xff
  438870:	mov    ch,BYTE PTR [ecx+0x0]
  438873:	add    BYTE PTR [esi],bh
  438875:	add    bh,bh
  438877:	add    BYTE PTR [ebx+eax*4+0x22],dh
  43887b:	push   ds
  43887c:	adc    esi,0xc1340000
  438882:	add    DWORD PTR [eax],0xffffffa7
  438885:	add    DWORD PTR [ebx+0x59ff36cc],0xffffff85
  43888c:	xchg   ebx,eax
  43888d:	(bad)  
  43888e:	(bad)  
  43888f:	(bad)  
  438890:	in     eax,dx
  438891:	inc    ecx
  438892:	add    BYTE PTR [ecx-0x337c00e3],cl
  438898:	rol    DWORD PTR [eax],cl
  43889a:	inc    edi
  43889b:	repnz icebp 
  43889d:	cwde   
  43889e:	mov    DWORD PTR [eax],eax
  4388a0:	dec    ebp
  4388a1:	inc    edx
  4388a2:	add    bh,bh
  4388a4:	rol    DWORD PTR [eax],1
  4388a6:	inc    DWORD PTR [eax]
  4388a8:	add    bh,bh
  4388aa:	xchg   esp,eax
  4388ab:	push   es
  4388ac:	ja     0x438868
  4388ae:	add    BYTE PTR [ebx-0x33331e61],al
  4388b4:	repnz (bad) 
  4388b6:	(bad)  
  4388b7:	jmp    FWORD PTR [ebp-0x51b94b01]
  4388bd:	mov    BYTE PTR [eax],al
  4388bf:	(bad)  
  4388c0:	mov    edi,0xc100fffe
  4388c5:	add    BYTE PTR [ecx+0x69ffe700],cl
  4388cb:	push   edx
  4388cc:	int    0x27
  4388ce:	int3   
  4388cf:	add    BYTE PTR [edx-0x19],ch
  4388d2:	add    bh,bh
  4388d4:	push   eax
  4388d5:	(bad)  
  4388d6:	(bad)  
  4388d7:	dec    DWORD PTR [ecx]
  4388d9:	add    dl,ah
  4388db:	mov    eax,0x89ff6379
  4388e0:	retf   
  4388e1:	jmp    0x4388e2
  4388e3:	inc    DWORD PTR [edi]
  4388e5:	(bad)  
  4388e6:	dec    DWORD PTR [ecx+0x60ddffc4]
  4388ec:	push   edx
  4388ed:	int3   
  4388ee:	inc    DWORD PTR [eax]
  4388f0:	mov    esi,0x4effff79
  4388f5:	cmp    edi,0x0
  4388f8:	adc    eax,0x4ffa8acc
  4388fd:	cs dec esp
  438900:	inc    eax
  438901:	out    0xff,al
  438903:	add    cl,dh
  438905:	(bad)  
  438906:	(bad)  
  438907:	dec    DWORD PTR [eax-0xb9e601]
  43890d:	add    al,BYTE PTR [eax]
  43890f:	add    BYTE PTR [edi-0x3b7cff79],bh
  438915:	inc    DWORD PTR [eax]
  438917:	jmp    DWORD PTR ds:0xa7512c00
  43891d:	fwait
  43891e:	(bad)  
  43891f:	jmp    FWORD PTR [esi]
  438921:	mov    bl,0xff
  438923:	(bad)  
  438924:	call   0x45438929
  438929:	cmp    DWORD PTR [edx-0x40e1e2],0x0
  438930:	fwait
  438931:	dec    ecx
  438932:	add    DWORD PTR [eax],0x7d
  438935:	cmp    edi,0xffffffff
  438938:	out    dx,al
  438939:	call   DWORD PTR [esi+0x2f]
  43893c:	loope  0x43893e
  43893e:	mov    DWORD PTR [eax],eax
  438940:	in     al,0x0
  438942:	add    DWORD PTR [ebx-0x33ffffee],0x1
  438949:	(bad)  
  43894a:	fidiv  WORD PTR [ecx]
  43894c:	mov    dh,BYTE PTR [eax-0x24dd0034]
  438952:	(bad)  
  438953:	inc    ebx
  438955:	(bad)  
  438956:	(bad)  
  438957:	inc    DWORD PTR [edi+edi*8-0x3d5fe1fa]
  43895e:	(bad)  
  43895f:	(bad)  
  438960:	sti    
  438961:	lahf   
  438962:	add    BYTE PTR [eax],al
  438964:	sbb    edi,edi
  438966:	add    bh,bh
  438968:	cmp    eax,0xdfa84a00
  43896d:	dec    ecx
  43896e:	(bad)  
  43896f:	jmp    DWORD PTR [ecx-0x833ff43]
  438975:	inc    DWORD PTR [eax]
  438977:	jmp    DWORD PTR [edx+0x46e24ff]
  43897d:	imul   edi,edi,0x0
  438980:	scas   eax,DWORD PTR es:[edi]
  438981:	inc    ebp
  438982:	(bad)  
  438983:	dec    DWORD PTR [ebx+0x49ff8983]
  438989:	add    bh,ah
  43898b:	add    edx,ebp
  43898d:	out    dx,al
  43898e:	int3   
  43898f:	inc    DWORD PTR [ecx+0x2d00ff43]
  438995:	inc    DWORD PTR [eax]
  438997:	cmp    eax,0xffffff83
  43899a:	out    0xb7,al
  43899c:	lods   eax,DWORD PTR ds:[esi]
  43899d:	mov    bh,0x0
  43899f:	dec    ecx
  4389a1:	add    BYTE PTR [eax],al
  4389a3:	mov    DWORD PTR [ebp+0x7fcc83cc],esi
  4389a9:	add    BYTE PTR [ebx],dh
  4389ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4389ac:	mov    eax,ds:0x7cffffc0
  4389b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4389b2:	add    bh,bh
  4389b4:	add    DWORD PTR [eax],0xd8ff00
  4389ba:	stos   DWORD PTR es:[edi],eax
  4389bb:	push   eax
  4389bc:	imul   esp,ebp,0xffffffff
  4389bf:	jmp    DWORD PTR [eax+ecx*4+0x74ffff]
  4389c6:	add    BYTE PTR [ecx-0x221d00e0],cl
  4389cc:	jecxz  0x438a1d
  4389ce:	(bad)  
  4389cf:	jmp    FWORD PTR [esp+ebp*4-0x1]
  4389d3:	(bad)  
  4389d4:	in     eax,dx
  4389d5:	cmp    edi,0xffffffff
  4389d8:	ret    0xd1ff
  4389db:	xlat   BYTE PTR ds:[ebx]
  4389dc:	push   esp
  4389dd:	mov    cl,0xff
  4389df:	sub    DWORD PTR [ecx+ebx*8],0xffffffff
  4389e3:	push   DWORD PTR [ebx]
  4389e5:	add    BYTE PTR [ecx-0x70007401],cl
  4389eb:	imul   edi,DWORD PTR [edi-0x16],0x8614ffff
  4389f2:	(bad)  
  4389f3:	(bad)  
  4389f4:	jnp    0x4389f5
  4389f6:	(bad)  
  4389f7:	(bad)  
  4389f8:	call   0xd8a16bc9
  4389fd:	mov    edi,0x825c8389
  438a02:	add    bh,bh
  438a04:	dec    edi
  438a05:	add    bh,bh
  438a07:	mov    DWORD PTR [ecx],edx
  438a09:	call   DWORD PTR [ecx-0x4e]
  438a0c:	(bad)  
  438a0d:	rol    BYTE PTR [eax],cl
  438a0f:	(bad)  
  438a10:	in     al,dx
  438a11:	jne    0x438a13
  438a13:	(bad)  
  438a14:	jmp    0x438999
  438a16:	inc    DWORD PTR [eax]
  438a18:	and    al,BYTE PTR [eax]
  438a1a:	mov    ds:0x67c85a,eax
  438a1f:	push   DWORD PTR [ebx+0x61]
  438a22:	inc    DWORD PTR [eax]
  438a24:	inc    DWORD PTR [eax]
  438a26:	add    bh,bh
  438a28:	mov    BYTE PTR [eax],al
  438a2a:	pop    edi
  438a2b:	push   esi
  438a2c:	pop    ds
  438a2d:	cld    
  438a2e:	inc    DWORD PTR [eax]
  438a30:	push   0x57
  438a32:	inc    DWORD PTR [ebx-0x7600ffcd]
  438a38:	mov    ds:0xeffc3683,eax
  438a3d:	daa    
  438a3e:	add    DWORD PTR [ebx-0xd0b0],0xffffffd3
  438a45:	inc    DWORD PTR [eax]
  438a47:	add    BYTE PTR [ebp+0x6ecc20ff],ah
  438a4d:	mov    ch,0x89
  438a4f:	jmp    FWORD PTR [ecx*8-0x76533400]
  438a56:	inc    DWORD PTR [ebx+0x56b5cc9d]
  438a5c:	xchg   edi,eax
  438a5d:	mov    edx,0x3e4cffcc
  438a62:	(bad)  
  438a63:	jmp    FWORD PTR [edx-0x7d]
  438a66:	(bad)  
  438a67:	jmp    FWORD PTR [edi-0x7d]
  438a6a:	popf   
  438a6b:	pop    esp
  438a6c:	sub    eax,0xa1ccff9f
  438a71:	leave  
  438a72:	cmp    edi,0xffffff91
  438a75:	int3   
  438a76:	add    BYTE PTR [eax],al
  438a78:	mov    DWORD PTR [eax],0x7980d576
  438a7e:	add    bh,bh
  438a80:	dec    esi
  438a81:	pop    ecx
  438a82:	(bad)  
  438a83:	call   DWORD PTR [edx+0x0]
  438a86:	add    BYTE PTR [eax],al
  438a88:	cwde   
  438a89:	(bad)  
  438a8a:	mov    eax,0xff9cdeb7
  438a8f:	(bad)  
  438a90:	mov    esp,0x5e000088
  438a95:	dec    DWORD PTR [ecx-0x4f005f01]
  438a9b:	sbb    al,0x66
  438a9d:	lahf   
  438a9e:	add    BYTE PTR [ecx-0x3c1c],cl
  438aa4:	pop    ecx
  438aa5:	add    bh,bh
  438aa7:	push   ebp
  438aa9:	add    al,al
  438aab:	or     DWORD PTR [esi+0x2700898c],edx
  438ab1:	jge    0x438a7f
  438ab3:	(bad)  
  438ab4:	out    dx,al
  438ab5:	dec    DWORD PTR [ecx-0x6200d001]
  438abb:	push   0xffffff90
  438abd:	mov    ebx,0xbda0ffff
  438ac2:	add    BYTE PTR [eax],al
  438ac4:	into   
  438ac5:	add    bh,bh
  438ac7:	sbb    DWORD PTR [ecx],0x0
  438aca:	outs   dx,DWORD PTR ds:[esi]
  438acb:	xchg   ebp,eax
  438acc:	fst    QWORD PTR [eax-0x4573ff7d]
  438ad2:	add    BYTE PTR [eax],al
  438ad4:	dec    eax
  438ad5:	add    DWORD PTR [eax],0xffffffff
  438ad8:	mov    al,0x0
  438ada:	inc    ebx
  438adb:	into   
  438adc:	lock inc DWORD PTR [bp+di-0x1b97]
  438ae2:	inc    DWORD PTR [ebx-0x42]
  438ae8:	(bad)  
  438ae9:	jmp    DWORD PTR [ebp-0x41]
  438aec:	dec    eax
  438aed:	(bad)
  438af1:	int3   
  438af2:	dec    esp
  438af4:	adc    cl,BYTE PTR [ecx-0x4b7700]
  438afa:	dec    edi
  438afb:	sbb    al,0xdb
  438afd:	mov    edi,0xa11989ff
  438b02:	add    DWORD PTR [eax],0x55
  438b05:	add    bh,bh
  438b07:	call   ecx
  438b09:	or     DWORD PTR [edi-0x4],0x4e
  438b0d:	push   ss
  438b0e:	add    BYTE PTR [eax],al
  438b10:	mov    cs,esp
  438b12:	add    BYTE PTR [ebx-0x330033f4],al
  438b18:	jmp    0x438b19
  438b1a:	pushf  
  438b1b:	dec    ebp
  438b1c:	inc    ecx
  438b1d:	xchg   esi,eax
  438b1e:	add    bh,bh
  438b20:	repz dec ebp
  438b22:	dec    esp
  438b24:	stos   DWORD PTR es:[edi],eax
  438b25:	add    bh,bh
  438b27:	push   DWORD PTR [edi-0x1]
  438b2a:	jns    0x438b31
  438b2c:	mov    esi,0xce830078
  438b31:	(bad)  
  438b32:	int3   
  438b33:	add    dh,cl
  438b35:	add    DWORD PTR [eax],0xffffffff
  438b38:	pop    edx
  438b39:	or     edx,0x47
  438b3c:	sub    eax,0x5aff0054
  438b41:	mov    BYTE PTR [eax],0x83
  438b44:	fwait
  438b45:	(bad)  
  438b46:	inc    DWORD PTR [ebx-0x106800cd]
  438b4c:	dec    edi
  438b4d:	adc    bh,bh
  438b4f:	add    bl,al
  438b51:	aam    0xff
  438b53:	add    BYTE PTR [ebx-0x1],bl
  438b56:	add    bh,bh
  438b58:	pop    esp
  438b59:	call   DWORD PTR [esi+0x7b]
  438b5c:	repnz and BYTE PTR [ebx-0xb9d601],al
  438b63:	call   DWORD PTR [eax-0x1]
  438b66:	add    bh,bh
  438b68:	jae    0x438b6a
  438b6a:	mov    bl,BYTE PTR [esi-0x72]
  438b6d:	test   DWORD PTR [eax],0xffa7b4ff
  438b73:	call   DWORD PTR [ecx-0x1]
  438b76:	inc    DWORD PTR [eax]
  438b78:	jns    0x438b46
  438b7a:	mov    ss,WORD PTR [esp+ecx*4-0x7400ff27]
  438b81:	xor    cl,ah
  438b83:	add    BYTE PTR [ebx+eax*4-0x33d20001],cl
  438b8a:	cdq    
  438b8b:	or     eax,0xffff2ab2
  438b90:	sub    BYTE PTR [eax-0x1],0x83
  438b94:	adc    bh,bh
  438b96:	cmp    edi,0xffffffa7
  438b99:	int3   
  438b9a:	fwait
  438b9b:	mov    ecx,0xa6cf
  438ba0:	xchg   ecx,eax
  438ba1:	dec    ecx
  438ba2:	add    BYTE PTR [eax],al
  438ba4:	cwde   
  438ba5:	add    BYTE PTR [eax],al
  438ba7:	or     DWORD PTR [edx],0xffffffcc
  438baa:	bound  edi,QWORD PTR [edx]
  438bac:	or     al,0x12
  438bae:	add    BYTE PTR [eax],al
  438bb0:	sar    BYTE PTR [ebx],cl
  438bb2:	(bad)  
  438bb3:	call   DWORD PTR [esi-0x7d]
  438bb6:	or     esp,0x49
  438bb9:	add    BYTE PTR [eax],dl
  438bbb:	jg     0x438bf2
  438bbd:	add    BYTE PTR es:[eax],al
  438bc0:	push   ds
  438bc1:	jo     0x438bc2
  438bc3:	add    ah,ch
  438bc5:	(bad)  
  438bc6:	inc    DWORD PTR [ebx+0x2b2800e5]
  438bcc:	adc    eax,0x5d00ff8d
  438bd1:	add    bh,bh
  438bd3:	call   DWORD PTR [esi]
  438bd5:	inc    DWORD PTR [ebx-0x4600bb00]
  438bdb:	sub    dh,dh
  438bdd:	mov    cl,0xcc
  438bdf:	sbb    DWORD PTR [edi+edx*2+0x0],0xffffffff
  438be4:	mov    ds:0xad838983,al
  438be9:	int3   
  438bea:	pop    esi
  438beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438bec:	fdiv   QWORD PTR [eax+0x0]
  438bef:	dec    DWORD PTR [eax-0x16ffff8e]
  438bf5:	(bad)  
  438bf6:	(bad)  
  438bf7:	push   DWORD PTR [eax+eax*1-0x52]
  438bfb:	push   edi
  438bfc:	add    bh,BYTE PTR [ebx-0x1]
  438bff:	add    BYTE PTR [esi-0x61],dl
  438c02:	inc    DWORD PTR [eax]
  438c04:	mov    ch,0xcc
  438c06:	add    bh,bh
  438c08:	scas   eax,DWORD PTR es:[edi]
  438c09:	mov    DWORD PTR [edi+0x16],esp
  438c0c:	loop   0x438c80
  438c0e:	add    BYTE PTR [eax],al
  438c10:	pushf  
  438c11:	add    bh,bh
  438c13:	jmp    FWORD PTR [esi+0x0]
  438c16:	add    BYTE PTR [eax],al
  438c18:	cwde   
  438c19:	inc    edx
  438c1b:	mov    dh,BYTE PTR [ecx-0x1f]
  438c1e:	add    BYTE PTR [eax],al
  438c20:	add    al,0x57
  438c22:	int3   
  438c23:	add    BYTE PTR [edi+edi*8],dl
  438c26:	add    bh,bh
  438c28:	cwde   
  438c29:	add    BYTE PTR [ebp+0x41],al
  438c2c:	mov    edi,0x85ff00fc
  438c31:	xchg   edi,eax
  438c32:	inc    DWORD PTR [ebx-0xfffb]
  438c38:	pop    ds
  438c39:	adc    DWORD PTR [edi+0x56],0x6f
  438c3d:	mov    bl,0xcc
  438c3f:	jmp    eax
  438c41:	cs (bad) 
  438c43:	push   DWORD PTR [edx-0x1]
  438c46:	inc    DWORD PTR [eax]
  438c48:	or     BYTE PTR [eax],al
  438c4a:	jns    0x438c04
  438c4c:	rcl    DWORD PTR [eax],1
  438c4e:	add    BYTE PTR [eax],al
  438c50:	call   0xff83:0x5fffff88
  438c57:	add    BYTE PTR [ecx+0x2753a383],ah
  438c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438c5e:	add    bh,bh
  438c60:	jl     0x438c18
  438c62:	(bad)  
  438c63:	(bad)  
  438c64:	sti    
  438c65:	cmp    edi,0xffffffcc
  438c68:	add    edi,edi
  438c6a:	lea    ebx,[esi+0x76]
  438c6d:	(bad)  
  438c6f:	int3   
  438c70:	in     al,dx
  438c71:	mov    DWORD PTR [eax],0x83ccb1cc
  438c77:	int3   
  438c78:	out    dx,al
  438c79:	xor    edi,0xffffffc8
  438c7c:	dec    esi
  438c7d:	(bad)  
  438c7e:	(bad)  
  438c7f:	inc    DWORD PTR [esi-0x68]
  438c82:	add    BYTE PTR [ecx-0x3326],cl
  438c88:	push   edi
  438c89:	add    BYTE PTR [ecx],dl
  438c8b:	aas    
  438c8c:	test   eax,ebx
  438c8e:	add    BYTE PTR [eax],al
  438c90:	mov    esi,0xc4ff83fa
  438c95:	cmp    edi,0xffffff83
  438c98:	jl     0x438c9a
  438c9a:	or     ecx,DWORD PTR [ebp-0xc1e3]
  438ca0:	into   
  438ca1:	cli    
  438ca2:	inc    DWORD PTR [eax]
  438ca4:	aaa    
  438ca5:	dec    esp
  438ca7:	mov    DWORD PTR [eax-0x1],ecx
  438caa:	sub    al,0x9c
  438cac:	cmp    edi,esp
  438cae:	add    bh,bh
  438cb0:	inc    edx
  438cb1:	std    
  438cb2:	inc    DWORD PTR [eax]
  438cb4:	lea    eax,[eax]
  438cb6:	inc    DWORD PTR [eax]
  438cb8:	pop    eax
  438cb9:	jmp    ebx
  438cbb:	pusha  
  438cbc:	ss dec ebx
  438cbe:	dec    DWORD PTR [ecx+0xffff28]
  438cc4:	dec    edi
  438cc5:	inc    DWORD PTR [eax]
  438cc7:	(bad)  
  438cc8:	mov    edx,0x7312b5ff
  438ccd:	or     WORD PTR [ecx-0xe7c7],0xffd6
  438cd5:	add    BYTE PTR [ebx+0x3cff19ff],al
  438cdb:	sub    eax,0x83ff630a
  438ce0:	cmp    BYTE PTR [edx-0x7d],ah
  438ce3:	dec    ecx
  438ce5:	inc    DWORD PTR [eax]
  438ce7:	jmp    FWORD PTR [esi]
  438ce9:	(bad)  
  438cea:	fldenv [edx]
  438cec:	leave  
  438ced:	mov    al,0x0
  438cef:	mov    DWORD PTR [eax+0x64fffffe],ecx
  438cf5:	(bad)  
  438cf6:	inc    DWORD PTR [eax]
  438cf8:	cwde   
  438cf9:	sbb    ecx,0x1f
  438cfc:	ins    BYTE PTR es:[edi],dx
  438cfd:	test   edi,edi
  438cff:	int3   
  438d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438d01:	sahf   
  438d02:	add    DWORD PTR [eax],0xffffff89
  438d05:	add    BYTE PTR [eax],al
  438d07:	add    BYTE PTR [eax+eax*1+0xa],ch
  438d0b:	shl    DWORD PTR [edx-0x20],cl
  438d0e:	or     esp,0x5f
  438d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438d12:	(bad)  
  438d13:	(bad)  
  438d14:	fcmovne st,st(4)
  438d16:	mov    DWORD PTR [ebx-0x3a6ff26],eax
  438d1c:	push   edi
  438d1d:	adc    edi,edi
  438d1f:	or     DWORD PTR [ebp-0x480000e6],0x0
  438d26:	(bad)  
  438d27:	jmp    FWORD PTR [ebp-0x4907af34]
  438d2d:	addr16 add bh,bh
  438d30:	repz pop ebp
  438d32:	add    BYTE PTR [eax],al
  438d34:	adc    DWORD PTR [eax],eax
  438d36:	dec    esp
  438d38:	test   eax,0x1d0cd000
  438d3d:	lods   eax,DWORD PTR ds:[esi]
  438d3e:	(bad)  
  438d3f:	jmp    DWORD PTR [ecx]
  438d41:	push   esi
  438d42:	add    bh,bh
  438d44:	dec    ebp
  438d45:	add    BYTE PTR [ecx+0x7b8330ff],cl
  438d4b:	mov    ecx,0xbfb1
  438d50:	pcmpeqd mm0,QWORD PTR [ebx-0x33d100]
  438d57:	add    BYTE PTR [ebx],ch
  438d59:	call   FWORD PTR [ebp+0x51]
  438d5c:	cwde   
  438d5d:	dec    ecx
  438d5e:	add    BYTE PTR [eax],al
  438d60:	push   esp
  438d61:	inc    esi
  438d62:	add    BYTE PTR [eax],al
  438d64:	rol    BYTE PTR [ebx-0x76f00100],1
  438d6a:	repnz add edx,DWORD PTR [esi]
  438d6d:	mov    DWORD PTR [ebx+0x686eff],eax
  438d73:	add    BYTE PTR [edi+edi*8-0x7c480000],bl
  438d7a:	pop    edx
  438d7b:	mov    eax,ds:0xff001d8c
  438d80:	mov    cl,0xb4
  438d82:	or     esp,0xffffff89
  438d85:	(bad)  
  438d86:	inc    DWORD PTR [eax]
  438d88:	js     0x438d8a
  438d8a:	cs data16 je 0x438dbc
  438d8e:	mov    edi,edi
  438d90:	or     al,BYTE PTR es:[eax]
  438d93:	add    BYTE PTR [ecx-0x507c7c01],ch
  438d99:	add    BYTE PTR [esi+0x4a],dl
  438d9c:	mov    ds:0x64ff0012,eax
  438da1:	aaa    
  438da2:	mov    edi,edi
  438da4:	test   edi,edi
  438da6:	(bad)  
  438da7:	call   DWORD PTR [ebp+0x3840d400]
  438dad:	or     ecx,DWORD PTR [ecx-0x945001]
  438db3:	inc    DWORD PTR [ebp+0x0]
  438db6:	cmp    edi,0x6e
  438db9:	jmp    DWORD PTR [edi-0x614c3b]
  438dbf:	add    BYTE PTR [eax+0x53ffff89],ah
  438dc5:	add    BYTE PTR [eax],al
  438dc7:	call   ebx
  438dc9:	add    BYTE PTR [edi],dh
  438dcb:	xor    al,0x22
  438dcd:	sar    edi,cl
  438dcf:	int3   
  438dd0:	lods   eax,DWORD PTR ds:[esi]
  438dd1:	test   al,0x0
  438dd3:	add    BYTE PTR [ecx-0x1],ah
  438dd6:	add    BYTE PTR [eax],al
  438dd8:	and    BYTE PTR [ebx+0x30e81e8],al
  438dde:	dec    DWORD PTR [ecx-0x7c990d]
  438de4:	mov    ds:0xff89ff89,al
  438de9:	push   edx
  438deb:	cmp    DWORD PTR [ebx+0x6bffffe8],0x1fffff04
  438df5:	inc    DWORD PTR [eax]
  438df7:	call   FWORD PTR [ebx+0x0]
  438dfa:	inc    eax
  438dfb:	ss jecxz 0x438e7c
  438dfe:	add    BYTE PTR [eax],al
  438e00:	imul   esp,DWORD PTR [edx-0x332e0001],0xffffff83
  438e07:	add    bh,al
  438e09:	call   FWORD PTR [eax]
  438e0b:	push   ebp
  438e0c:	popf   
  438e0d:	inc    DWORD PTR [eax]
  438e0f:	jmp    FWORD PTR [edx]
  438e11:	push   eax
  438e12:	(bad)  
  438e13:	(bad)  
  438e14:	fild   DWORD PTR [eax]
  438e16:	add    BYTE PTR [eax],al
  438e18:	jno    0x438e19
  438e1a:	jg     0x438dae
  438e1c:	push   ds
  438e1d:	loop   0x438e1f
  438e1f:	adc    DWORD PTR [edx+0x5a],0xffffff83
  438e23:	call   DWORD PTR [ecx-0x57c0001]
  438e29:	dec    DWORD PTR [ecx]
  438e2b:	fs out 0xfc,al
  438e2e:	dec    esp
  438e30:	jl     0x438e7d
  438e32:	add    bh,bh
  438e34:	in     al,0x83
  438e36:	inc    DWORD PTR [ebx-0x78acffcc]
  438e3c:	cmp    ah,ch
  438e3e:	dec    esp
  438e40:	test   al,0x21
  438e42:	int3   
  438e43:	call   FWORD PTR ds:0x3f00ffff
  438e49:	(bad)  
  438e4a:	stc    
  438e4b:	or     al,0xa1
  438e4d:	mov    esp,0x25e5ff00
  438e52:	inc    DWORD PTR [eax]
  438e54:	popa   
  438e55:	add    DWORD PTR [ebx+0x1ffc2cc],0x3d
  438e5c:	gs call 0xffcc:0xf1e383cc
  438e64:	loope  0x438e65
  438e66:	add    ah,cl
  438e68:	and    eax,0x69ef9600
  438e6d:	ret    
  438e6e:	add    BYTE PTR [eax],al
  438e70:	mov    dh,0x57
  438e72:	inc    DWORD PTR [ebx-0xff80]
  438e78:	push   cs
  438e79:	cmp    DWORD PTR [esp+ebp*8-0x7c33c88b],0x3b
  438e81:	daa    
  438e82:	inc    DWORD PTR [ebx-0xff009b]
  438e88:	or     eax,0x5e9c1dff
  438e8d:	sub    cl,ah
  438e8f:	call   DWORD PTR [ebx+0x76]
  438e92:	int3   
  438e93:	inc    ebx
  438e95:	(bad)  
  438e96:	inc    DWORD PTR [eax]
  438e98:	stos   BYTE PTR es:[edi],al
  438e99:	jmp    DWORD PTR [edi+0x4f0515]
  438e9f:	add    BYTE PTR [esi],bh
  438ea1:	push   es
  438ea2:	cmp    edi,0xffffff83
  438ea5:	add    BYTE PTR [ebx+0x3fff2800],al
  438eab:	aaa    
  438eac:	sahf   
  438ead:	mov    ecx,0x99588383
  438eb2:	(bad)  
  438eb3:	push   edi
  438eb5:	(bad)  
  438eb6:	(bad)  
  438eb7:	dec    DWORD PTR [edx+0x0]
  438eba:	jmp    0xf7dc09
  438ebf:	push   edi
  438ec1:	sahf   
  438ec2:	add    ah,cl
  438ec4:	fiadd  WORD PTR [eax]
  438ec6:	add    DWORD PTR [eax],0xffffff87
  438ec9:	add    BYTE PTR [edi],cl
  438ecb:	add    eax,0xffe674
  438ed0:	scas   al,BYTE PTR es:[edi]
  438ed1:	ja     0x438e56
  438ed3:	add    bh,al
  438ed5:	inc    DWORD PTR [eax]
  438ed7:	call   DWORD PTR [esi+0x0]
  438eda:	sub    ecx,DWORD PTR [eax+0x40]
  438edd:	inc    BYTE PTR [eax]
  438edf:	mov    DWORD PTR [edx+0x7483008b],edi
  438ee5:	add    bh,bh
  438ee7:	xor    DWORD PTR [ecx-0x22ba6600],0x7a
  438eee:	add    bh,bh
  438ef0:	sbb    esp,DWORD PTR [edi]
  438ef2:	add    bh,bh
  438ef4:	push   es
  438ef5:	(bad)  
  438ef6:	dec    esp
  438ef8:	xchg   ecx,eax
  438ef9:	add    BYTE PTR [ebp-0x3349bab3],dh
  438eff:	add    BYTE PTR [esi-0x34],bh
  438f02:	add    bh,bh
  438f04:	push   0xffffffff
  438f06:	inc    DWORD PTR [eax]
  438f08:	mov    bh,bh
  438f0a:	xor    dl,BYTE PTR [edi]
  438f0c:	dec    ebx
  438f0d:	stos   DWORD PTR es:[edi],eax
  438f0e:	(bad)  
  438f0f:	jmp    DWORD PTR [ecx+eax*4-0x7d]
  438f13:	push   ebx
  438f15:	add    bh,bh
  438f17:	inc    DWORD PTR [ebp+0x0]
  438f1a:	mov    esi,0xa9e43c
  438f1f:	add    BYTE PTR [esi+0xb],dh
  438f22:	dec    esp
  438f24:	sub    al,0x83
  438f26:	add    BYTE PTR [eax],al
  438f28:	cmp    al,0xcc
  438f2a:	arpl   WORD PTR [esi+0xff835f],sp
  438f30:	jl     0x438f15
  438f32:	add    BYTE PTR [eax],al
  438f34:	adc    bh,bh
  438f36:	cmp    edi,0xffffffa3
  438f39:	int3   
  438f3a:	xchg   esi,eax
  438f3b:	jno    0x438fab
  438f3d:	sbb    eax,0x91b40000
  438f42:	add    bh,bh
  438f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438f45:	add    BYTE PTR [ebx-0x6a7cef01],al
  438f4b:	fsub   QWORD PTR [esi+0x2]
  438f4e:	inc    DWORD PTR [eax]
  438f50:	retf   0x83f4
  438f53:	call   DWORD PTR [ebx+0x0]
  438f56:	int3   
  438f57:	(bad)  
  438f58:	jle    0x438f59
  438f5a:	int3   
  438f5b:	mov    edi,0x3720
  438f60:	(bad)  
  438f61:	fdivp  st(7),st
  438f63:	add    BYTE PTR [esi-0x4e003301],cl
  438f69:	mov    DWORD PTR [ebp-0xa05fad],ebp
  438f6f:	inc    esi
  438f71:	es cmp edi,0xffffffde
  438f75:	add    DWORD PTR [eax],0xffffffff
  438f78:	test   BYTE PTR [eax],al
  438f7a:	adc    eax,0x8559a2
  438f7f:	jmp    FWORD PTR [ebx+0x57ff8377]
  438f85:	add    bh,bh
  438f87:	jmp    FWORD PTR [ecx+ecx*4-0x7d]
  438f8b:	jne    0x438fd4
  438f8d:	std    
  438f8e:	add    BYTE PTR [eax],al
  438f90:	mov    DWORD PTR [ebx-0x34],ebx
  438f93:	inc    DWORD PTR [edx]
  438f95:	inc    DWORD PTR [ebx-0x800dc01]
  438f9b:	call   ebp
  438f9d:	add    BYTE PTR [eax],0xff
  438fa0:	mov    eax,ds:0xb700ff96
  438fa5:	cmp    edi,0xffffffff
  438fa8:	aas    
  438fa9:	add    BYTE PTR [esi+0x73],al
  438fac:	dec    ebx
  438fad:	sti    
  438fae:	inc    DWORD PTR [ebx+0xff6da0]
  438fb4:	cmc    
  438fb5:	mov    esp,ecx
  438fb7:	add    BYTE PTR [edx],dl
  438fb9:	dec    DWORD PTR [eax]
  438fbb:	popa   
  438fbc:	mov    WORD PTR [esi+0x28dd8300],?
  438fc2:	cmp    edi,0xfffffff8
  438fc5:	add    bh,bh
  438fc7:	call   FWORD PTR [edx+0x0]
  438fca:	js     0x438f5f
  438fcc:	push   cs
  438fcd:	push   ss
  438fce:	mov    DWORD PTR [eax],eax
  438fd0:	sbb    BYTE PTR [ecx+ecx*4-0xff9934],0xff
  438fd8:	mov    cl,0x0
  438fda:	pushf  
  438fdb:	ret    0x4512
  438fde:	add    bh,bh
  438fe0:	mov    edi,0x6d000049
  438fe5:	inc    DWORD PTR [ebx+0x38ff8cff]
  438feb:	mov    ecx,ecx
  438fed:	sub    eax,DWORD PTR [ebx-0x7cf000]
  438ff3:	call   DWORD PTR [esi+0x13ffffff]
  438ff9:	int3   
  438ffa:	aad    0x3e
  438ffc:	lods   eax,DWORD PTR ds:[esi]
  438ffd:	sahf   
  438ffe:	inc    DWORD PTR [eax]
  439000:	popf   
  439001:	lea    eax,[eax]
  439003:	sbb    edi,0xffffff83
  439006:	mov    edi,edi
  439008:	hlt    
  439009:	jmp    FWORD PTR [ebx]
  43900b:	jb     0x43900c
  43900d:	inc    ebx
  43900e:	add    bh,bh
  439010:	pushf  
  439011:	cli    
  439012:	inc    DWORD PTR [ebx+0xfffffc]
  439018:	mov    ?,edi
  43901a:	test   dh,al
  43901c:	mov    dl,0xed
  43901e:	inc    DWORD PTR [eax]
  439020:	dec    ebx
  439021:	add    BYTE PTR es:[ebx-0x900077],cl
  439028:	sub    eax,0xcc39ffda
  43902d:	inc    esi
  43902f:	int3   
  439030:	es xor eax,0xffffefff
  439036:	and    al,0x0
  439038:	inc    ebp
  439039:	test   BYTE PTR [eax],al
  43903b:	sub    bh,bh
  43903d:	dec    ebx
  43903f:	add    BYTE PTR [ebx+0x5b],al
  439042:	add    BYTE PTR [eax+0x638300],bh
  439048:	in     al,0x6
  43904a:	add    al,dh
  43904c:	(bad)  
  43904d:	call   FWORD PTR [esi-0x338fa300]
  439053:	inc    ecx
  439054:	(bad)  
  439055:	call   FWORD PTR [esi-0xa6587d]
  43905b:	push   eax
  43905c:	add    BYTE PTR [ebx+0x4df300cc],al
  439062:	add    BYTE PTR [edi-0x360000],ah
  439068:	(bad)  
  439069:	adc    bh,bh
  43906b:	repnz add DWORD PTR [ebx-0x731bff71],0xffffffff
  439073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439074:	add    BYTE PTR [ebx+0x3ddd00b4],al
  43907a:	inc    DWORD PTR [eax]
  43907c:	(bad)  
  43907d:	call   FWORD PTR [ecx-0x34]
  439080:	inc    ebx
  439081:	fdiv   st(7),st
  439083:	aas    
  439084:	mov    DWORD PTR [eax],eax
  439086:	cli    
  439087:	add    BYTE PTR [ecx+0xfe83b6],dh
  43908d:	push   DWORD PTR [edx]
  43908f:	jmp    DWORD PTR [esi]
  439091:	test   al,0xff
  439093:	push   0xffffff83
  439095:	call   DWORD PTR [ebp-0x1]
  439098:	(bad)  
  439099:	jl     0x43909b
  43909b:	or     eax,0xffeaccff
  4390a0:	aad    0xbc
  4390a2:	mov    DWORD PTR [ebx],ebx
  4390a4:	inc    DWORD PTR [ebx-0x5670051]
  4390aa:	int3   
  4390ab:	cmp    edi,edi
  4390ad:	add    BYTE PTR [eax-0x1],bl
  4390b0:	mov    ?,WORD PTR [edi+0x0]
  4390b3:	pop    eax
  4390b4:	int3   
  4390b5:	and    DWORD PTR [ebp-0x1],0xffffff9f
  4390b9:	adc    eax,0xffff0e00
  4390be:	aas    
  4390bf:	or     DWORD PTR [edx-0x7c7d33a2],0xffffff89
  4390c6:	adc    eax,DWORD PTR [eax]
  4390c8:	mov    ah,0x9e
  4390ca:	call   DWORD PTR [eax-0x1]
  4390cd:	add    al,dh
  4390cf:	jmp    DWORD PTR [edi-0x7c5600ae]
  4390d5:	dec    DWORD PTR [ebp-0x77]
  4390d8:	dec    ebp
  4390d9:	lahf   
  4390da:	or     ebx,0x0
  4390dd:	sub    DWORD PTR [edx-0x1],0xffffffa5
  4390e1:	ins    BYTE PTR es:[edi],dx
  4390e2:	sbb    DWORD PTR [edi+edi*8-0x7700d601],0xffffffe0
  4390ea:	add    BYTE PTR [ecx],ch
  4390ec:	mov    DWORD PTR [eax],eax
  4390ee:	pop    esi
  4390ef:	sub    DWORD PTR [ebx+0x68],0x0
  4390f3:	mov    eax,ds:0xff778300
  4390f8:	xchg   edi,eax
  4390f9:	cmp    DWORD PTR [ebx+0x52ccffb0],eax
  4390ff:	add    al,al
  439101:	daa    
  439102:	or     DWORD PTR [edx],0x0
  439105:	jmp    FWORD PTR [eax+0x8db200]
  43910b:	xor    eax,0xcc5400ff
  439110:	in     al,0x5d
  439112:	add    BYTE PTR [edx-0x1],cl
  439115:	(bad)  
  439116:	jle    0x439117
  439118:	out    dx,al
  439119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43911a:	add    bl,bh
  43911c:	add    BYTE PTR [eax],al
  43911e:	push   esp
  43911f:	or     DWORD PTR [edi-0x7ccfff41],0xffffffff
  439126:	cmp    al,0xff
  439128:	jno    0x4390e1
  43912a:	add    BYTE PTR [edi+edi*8],bh
  43912d:	(bad)  
  43912e:	mov    edi,0xfff58900
  439133:	mov    bl,0xff
  439135:	(bad)  
  439136:	js     0x439138
  439138:	mov    bl,0xcb
  43913a:	add    BYTE PTR [ecx-0x7d],dh
  43913d:	dec    DWORD PTR [esi]
  43913f:	dec    ecx
  439141:	in     eax,dx
  439142:	(bad)  
  439143:	jle    0x439111
  439145:	inc    DWORD PTR [edi+edi*8+0x56]
  439149:	push   eax
  43914a:	add    BYTE PTR [ecx+ecx*4],ch
  43914d:	sbb    ebp,0xffffffff
  439150:	add    eax,DWORD PTR [eax-0x34]
  439153:	mov    esp,0xffd1cc00
  439158:	gs mov bl,0xff
  43915b:	mov    al,ds:0x3cff83
  439160:	mov    cl,0xbd
  439162:	add    BYTE PTR [eax+0x8a0089],ah
  439168:	jno    0x4391a6
  43916a:	add    bh,al
  43916c:	dec    esp
  43916e:	into   
  43916f:	push   esp
  439171:	jmp    0xff9f:0x8383b889
  439178:	sub    BYTE PTR [eax],bl
  43917a:	inc    DWORD PTR [eax-0x390100]
  439180:	jns    0x439145
  439182:	int3   
  439183:	mov    al,0x0
  439185:	mov    DWORD PTR [ebp-0x76a28600],ebp
  43918b:	jmp    0x20e4:0x83a0ff83
  439192:	jmp    eax
  439194:	add    bh,bh
  439196:	arpl   WORD PTR [ebx-0x237c2635],ax
  43919c:	add    BYTE PTR [ebx+0x7cf83bc],al
  4391a2:	int3   
  4391a3:	mov    edx,0xff82ff00
  4391a8:	outs   dx,BYTE PTR ds:[esi]
  4391a9:	mov    al,ds:0xff13ff
  4391ae:	ror    BYTE PTR [ecx-0x7f7c2909],1
  4391b4:	inc    DWORD PTR [eax]
  4391b6:	loope  0x43913b
  4391b8:	xor    ecx,DWORD PTR [edx]
  4391ba:	add    bh,dh
  4391bc:	int3   
  4391bd:	cmp    DWORD PTR [ecx],0xffffffff
  4391c0:	jp     0x439206
  4391c2:	add    BYTE PTR [eax+eax*1+0x3f006aff],cl
  4391c9:	stc    
  4391ca:	call   FWORD PTR [esi]
  4391cc:	inc    DWORD PTR [eax]
  4391ce:	sar    edi,1
  4391d0:	dec    edi
  4391d1:	(bad)  
  4391d2:	jmp    DWORD PTR [edi+edi*8+0x13ff31cc]
  4391d9:	out    0x83,al
  4391db:	mov    eax,0xcc6dff00
  4391e0:	xchg   DWORD PTR [ecx+0x5200],ebp
  4391e6:	xchg   edi,edi
  4391e8:	mov    ds:0x8a00fe,eax
  4391ed:	add    dh,dh
  4391ef:	dec    DWORD PTR [esi+esi*2+0x830b83]
  4391f6:	rol    DWORD PTR [eax],0x80
  4391f9:	fld    DWORD PTR [ebx+0x1689ffa9]
  4391ff:	jmp    FWORD PTR [ebx-0x7c]
  439202:	jmp    FWORD PTR [ebx]
  439204:	or     DWORD PTR [ecx+0x42c6003a],0xffffffff
  43920b:	pop    eax
  43920c:	add    BYTE PTR [ebx+0x581d008c],al
  439212:	jmp    eax
  439214:	(bad)  
  439215:	call   eax
  439217:	cmp    DWORD PTR [ecx-0x334dff92],0xffffff83
  43921e:	push   0xff750489
  439223:	cmp    al,0xff
  439225:	xor    DWORD PTR [ebp+0x0],0x34
  439229:	and    BYTE PTR [ebx-0x140076e2],al
  43922f:	call   DWORD PTR [edi-0xf0006d]
  439235:	mov    DWORD PTR [edi+edi*8],esi
  439238:	fistp  QWORD PTR [edi+edi*8]
  43923b:	jmp    0xff4b91c3
  439240:	push   0x4e
  439242:	(bad)  
  439243:	ds add ah,cl
  439246:	in     al,0x0
  439248:	mov    bl,0xc6
  43924a:	push   DWORD PTR [ebp-0x1]
  43924d:	add    ch,ch
  43924f:	add    dh,dh
  439251:	xchg   edx,eax
  439252:	mov    DWORD PTR [edi-0x1],esi
  439255:	jmp    DWORD PTR [esi]
  439257:	inc    DWORD PTR [edi-0x40]
  43925a:	call   FWORD PTR [ebx]
  43925c:	add    BYTE PTR [ebx-0x76e100bd],al
  439262:	add    BYTE PTR [ecx-0x76ed0001],dl
  439268:	pop    ebx
  439269:	int    0xff
  43926b:	ud0    eax,DWORD PTR [ebx-0x28b7ff24]
  439272:	push   DWORD PTR [edi]
  439274:	add    BYTE PTR [eax],al
  439276:	mov    al,ds:0x8332aa00
  43927b:	sar    bh,cl
  43927d:	add    BYTE PTR [edx-0x34],dh
  439280:	(bad)  
  439281:	push   eax
  439282:	xor    ebx,0xffffffff
  439285:	inc    DWORD PTR [esi-0x3312ae77]
  43928b:	pop    ds
  43928c:	add    DWORD PTR [eax],0x3b
  43928f:	or     edx,0x73
  439292:	call   DWORD PTR [edi-0x917c01]
  439298:	idiv   BYTE PTR [ecx+0x838c00]
  43929e:	mov    ds:0xff2af6ff,al
  4392a3:	inc    DWORD PTR ss:[eax]
  4392a6:	adc    al,0xff
  4392a8:	xor    ebx,DWORD PTR [edx]
  4392aa:	add    BYTE PTR [edx-0x33480001],ch
  4392b0:	lods   al,BYTE PTR ds:[si]
  4392b2:	add    dl,dl
  4392b4:	cmp    edi,0xffffffe4
  4392b7:	jmp    DWORD PTR [ebx]
  4392b9:	push   edi
  4392ba:	add    bh,dl
  4392bc:	mov    edi,edi
  4392be:	or     al,0xff
  4392c0:	nop
  4392c1:	ins    BYTE PTR es:[edi],dx
  4392c2:	dec    DWORD PTR [ebx-0x7c020001]
  4392c8:	cmp    al,0x1
  4392ca:	jmp    FWORD PTR [eax+0x0]
  4392cd:	inc    DWORD PTR [edi+edi*8-0x2400a425]
  4392d4:	(bad)  
  4392d5:	push   DWORD PTR [esi+0x8dfeff]
  4392db:	dec    edi
  4392dc:	int3   
  4392dd:	jmp    DWORD PTR [edi-0x7d]
  4392e0:	mov    WORD PTR [ebp+0x0],cs
  4392e3:	enter  0x8300,0xe6
  4392e7:	add    BYTE PTR [edi-0x470095],bh
  4392ed:	mov    DWORD PTR [ecx-0x34],edi
  4392f0:	dec    ebp
  4392f1:	(bad)  
  4392f4:	inc    DWORD PTR [eax]
  4392f6:	outs   dx,DWORD PTR ds:[esi]
  4392f7:	jmp    FWORD PTR [edx-0x7c41ff4e]
  4392fd:	add    ah,cl
  4392ff:	jmp    FWORD PTR [ebp+0xd00dd]
  439305:	int3   
  439306:	int3   
  439307:	mov    DWORD PTR [ebp-0x510037],esp
  43930d:	dec    ebp
  43930f:	int3   
  439310:	sub    ch,bl
  439312:	push   DWORD PTR [eax+0x0]
  439315:	add    bl,cl
  439317:	int3   
  439318:	xchg   esi,eax
  439319:	imul   edi,edi,0xc83ffa4
  43931f:	int3   
  439320:	mov    ebp,0xff8308ff
  439326:	push   es
  439327:	mov    DWORD PTR [ebp-0x7c1c00c1],edx
  43932d:	mov    DWORD PTR [edi+edi*8],edx
  439330:	dec    esi
  439331:	nop
  439332:	add    dh,ah
  439334:	inc    DWORD PTR [eax]
  439336:	xchg   ebp,eax
  439337:	call   FWORD PTR [edx]
  439339:	je     0x43933b
  43933b:	loop   0x43933d
  43933d:	and    esp,0xffffffff
  439340:	or     DWORD PTR ds:0xff8936ff,0xeb61ccab
  43934a:	add    BYTE PTR [ebx-0x677d00],dl
  439350:	fsub   DWORD PTR [edx]
  439352:	inc    esp
  439354:	add    BYTE PTR [ebx+0x4ebccc5b],al
  43935a:	add    BYTE PTR [esi+0x0],dl
  43935d:	int3   
  43935e:	pop    ecx
  43935f:	adc    DWORD PTR [ecx+0x7e],0xffffffff
  439363:	xchg   esi,eax
  439364:	add    ah,cl
  439366:	push   edx
  439367:	call   FWORD PTR ds:0xff0b000e
  43936d:	mov    DWORD PTR [ecx-0x3f8d00],esi
  439373:	mov    ah,0xff
  439375:	jmp    ebx
  439377:	xor    DWORD PTR [edx-0x55],0xffffff89
  43937b:	(bad)  
  43937c:	(bad)  
  43937d:	push   DWORD PTR [edx+0x24ad83]
  439383:	sub    eax,0xff00ffff
  439388:	mov    DWORD PTR [ecx+0x0],esi
  43938b:	jne    0x439359
  43938d:	add    BYTE PTR [esi+0xb15a00],bl
  439393:	add    al,0x0
  439395:	add    BYTE PTR [ebx+eax*4],ah
  439398:	push   edx
  439399:	push   0xff832a00
  43939e:	mov    edx,0x8992cd00
  4393a3:	imul   eax,DWORD PTR [eax],0xffffffff
  4393a6:	jmp    0x43932b
  4393a8:	das    
  4393a9:	loopne 0x4393aa
  4393ab:	mov    ebp,0xa983ff
  4393b0:	xchg   ebx,eax
  4393b1:	dec    esp
  4393b2:	adc    DWORD PTR [edi-0x1],0xffffffcc
  4393b6:	and    BYTE PTR [ebx-0x60fff510],al
  4393bc:	add    BYTE PTR [ecx+0x16380031],cl
  4393c2:	jmp    esi
  4393c4:	cmp    edi,0xffffffe3
  4393c7:	add    BYTE PTR [ecx],cl
  4393c9:	dec    ebx
  4393ca:	jmp    DWORD PTR [edi-0x7cb10034]
  4393d0:	in     al,0x52
  4393d2:	(bad)  
  4393d3:	jl     0x43935e
  4393d5:	add    BYTE PTR [ecx-0x1],al
  4393d8:	pop    ecx
  4393d9:	jns    0x4393da
  4393db:	(bad)  
  4393dc:	(bad)  
  4393dd:	inc    DWORD PTR [eax]
  4393df:	push   DWORD PTR [ebx]
  4393e1:	enter  0xaff,0xff
  4393e5:	call   eax
  4393e7:	inc    DWORD PTR [ecx-0x55]
  4393ea:	add    al,dh
  4393ec:	(bad)  
  4393ed:	push   edx
  4393ef:	jmp    DWORD PTR [ebx-0x9]
  4393f2:	inc    DWORD PTR [edi]
  4393f4:	add    BYTE PTR [eax],al
  4393f6:	rol    BYTE PTR [eax],0x77
  4393f9:	jmp    0xff37:0xffcc2b00
  439400:	ja     0x4393cb
  439402:	(bad)  
  439403:	mov    edx,0xffeaffff
  439408:	pop    eax
  439409:	xchg   esi,eax
  43940a:	jmp    DWORD PTR [eax-0xf97c34]
  439410:	mov    ebp,0x2aff23
  439415:	add    BYTE PTR [ebx-0xe65334],ch
  43941b:	test   DWORD PTR [ebx+0x42cc88ff],eax
  439421:	mov    DWORD PTR [eax],0x700ff37
  439427:	call   FWORD PTR [esi]
  439429:	aaa    
  43942a:	sbb    ecx,0x0
  43942d:	dec    DWORD PTR [ebp-0x7c9a00]
  439433:	rol    BYTE PTR [ebx+0x3ffe789],1
  439439:	or     eax,0xfe00
  43943e:	add    bh,bh
  439440:	dec    edx
  439441:	push   es
  439442:	int3   
  439443:	add    edi,edi
  439445:	add    BYTE PTR [edi-0x1],al
  439448:	test   al,0xc6
  43944a:	int3   
  43944b:	pop    esi
  43944c:	inc    DWORD PTR [eax]
  43944e:	push   esi
  43944f:	add    BYTE PTR [edx],dl
  439451:	or     eax,0xffff15ff
  439456:	mov    ebx,0x83834bff
  43945b:	mov    al,0x0
  43945d:	add    dl,ch
  43945f:	add    BYTE PTR [eax-0x7b],dh
  439462:	add    cl,al
  439464:	(bad)  
  439465:	dec    DWORD PTR [esi+0x0]
  439468:	int    0x5d
  43946a:	push   ecx
  43946c:	add    BYTE PTR [eax],al
  43946e:	push   es
  43946f:	inc    DWORD PTR [ecx+0x7c]
  439472:	add    cl,bh
  439474:	mov    DWORD PTR [eax],eax
  439476:	xor    edi,edi
  439478:	in     al,0x50
  43947a:	call   FWORD PTR ds:0xcc578300
  439480:	shl    BYTE PTR [ecx+0x83d800],0xd4
  439487:	jmp    edx
  439489:	js     0x43948b
  43948b:	iret   
  43948c:	int3   
  43948d:	inc    DWORD PTR [ebx+0x0]
  439490:	clc    
  439491:	mov    ah,0x83
  439493:	mov    eax,DWORD PTR [ebx+0x15fff5ff]
  439499:	outs   dx,BYTE PTR ds:[esi]
  43949a:	add    dh,dh
  43949c:	add    BYTE PTR [eax],al
  43949e:	hlt    
  43949f:	jmp    DWORD PTR [eax]
  4394a1:	cld    
  4394a2:	jmp    FWORD PTR [edx]
  4394a4:	int3   
  4394a5:	jmp    DWORD PTR [ebx+0x0]
  4394a8:	sub    eax,ebx
  4394aa:	jmp    ebp
  4394ac:	add    ah,cl
  4394ae:	mov    bl,0x83
  4394b0:	dec    ecx
  4394b1:	mov    bp,di
  4394b4:	add    DWORD PTR [eax],0x73
  4394b7:	push   DWORD PTR [edi+0x17fff8]
  4394bd:	add    DWORD PTR [esi],0xffffff83
  4394c0:	test   bh,bl
  4394c2:	jmp    esp
  4394c4:	add    bh,bh
  4394c6:	or     edi,edi
  4394c8:	jl     0x439451
  4394ca:	add    BYTE PTR [ebx],bh
  4394cc:	add    BYTE PTR [ecx-0x51e200c0],cl
  4394d2:	(bad)  
  4394d3:	cmp    eax,0xff9bffff
  4394d8:	test   ebx,ebp
  4394da:	add    BYTE PTR [edi-0x1],ch
  4394dd:	add    cl,ah
  4394df:	dec    DWORD PTR [edi]
  4394e1:	jns    0x4394e3
  4394e3:	mov    BYTE PTR [ebx-0x19337201],0x2d
  4394ea:	dec    DWORD PTR [ecx]
  4394ec:	cmp    edi,0x7a
  4394ef:	(bad)  
  4394f0:	fcmovbe st,st(6)
  4394f2:	inc    DWORD PTR [eax]
  4394f4:	int3   
  4394f5:	inc    DWORD PTR [edi]
  4394f7:	xor    DWORD PTR [edx+0x33],0xffffffff
  4394fb:	and    bh,bh
  4394fd:	add    BYTE PTR [ecx-0xe8a601],al
  439503:	cli    
  439504:	mov    DWORD PTR [ecx-0x7253ff4a],ecx
  43950a:	add    BYTE PTR [eax-0x7cd80034],bl
  439510:	push   ss
  439511:	dec    esi
  439512:	call   FWORD PTR [ecx-0x697c7d]
  439518:	dec    eax
  439519:	popa   
  43951a:	jmp    edx
  43951c:	(bad)  
  43951d:	jmp    FWORD PTR [edx-0x1]
  439520:	add    esp,DWORD PTR [esi]
  439522:	dec    DWORD PTR [esi-0xdfff34]
  439528:	dec    edx
  439529:	cmp    eax,0x83ff6a83
  43952e:	aad    0x0
  439530:	push   ebx
  439531:	in     al,dx
  439532:	dec    edi
  439534:	add    bh,bh
  439536:	mov    ?,edi
  439538:	test   BYTE PTR [ebx+0x0],bh
  43953b:	pop    ebp
  43953c:	int3   
  43953d:	add    BYTE PTR [ebp-0x33f0ee01],ch
  439543:	rol    DWORD PTR [eax],cl
  439545:	add    BYTE PTR [eax],cl
  439547:	add    BYTE PTR [eax+eiz*4],cl
  43954a:	add    BYTE PTR [edi+0xc8389],ah
  439550:	jp     0x4395ca
  439552:	add    BYTE PTR [ecx-0x34],cl
  439555:	add    BYTE PTR [edi-0x380c01],bl
  43955b:	int3   
  43955c:	inc    DWORD PTR [eax]
  43955e:	jmp    0x35fc63
  439563:	or     eax,0xffd18300
  439568:	or     al,0xb6
  43956a:	add    BYTE PTR ds:0xccedffff,ch
  439570:	sub    DWORD PTR [ebx-0xff8001],edx
  439576:	sbb    ecx,esp
  439578:	or     DWORD PTR [ebx],esp
  43957a:	(bad)  
  43957b:	fld    DWORD PTR [eax]
  43957d:	add    BYTE PTR [ebx],bh
  43957f:	inc    edx
  439581:	push   esp
  439582:	(bad)  
  439583:	jle    0x439585
  439585:	int3   
  439586:	fcmove st,st(4)
  439588:	cld    
  439589:	jecxz  0x43958b
  43958b:	mov    bh,bh
  43958d:	call   ebx
  43958f:	add    BYTE PTR [edx],bl
  439591:	out    0x0,al
  439593:	mov    ebx,0xbb00ff
  439598:	xchg   DWORD PTR [ebx],edx
  43959a:	call   DWORD PTR [edi-0x77]
  43959d:	(bad)  
  43959e:	mov    edx,0xff0685ff
  4395a3:	adc    bh,bh
  4395a5:	call   DWORD PTR [ecx]
  4395a7:	add    BYTE PTR [ebx-0x14ff9e],al
  4395ad:	add    BYTE PTR [edx-0x165500],al
  4395b3:	idiv   edi
  4395b5:	add    BYTE PTR [edx],dl
  4395b7:	dec    DWORD PTR [edi]
  4395b9:	lds    eax,FWORD PTR [eax]
  4395bb:	push   0xffffff83
  4395bd:	add    BYTE PTR [edx-0x1],bl
  4395c0:	lds    ebp,FWORD PTR [ecx-0x6d00]
  4395c6:	int3   
  4395c7:	(bad)  
  4395c8:	ds add edi,edi
  4395cb:	nop
  4395cc:	(bad)  
  4395cd:	call   FWORD PTR [esi-0x1]
  4395d0:	mov    al,ds:0xffaf007e
  4395d5:	add    BYTE PTR [eax],bl
  4395d7:	inc    DWORD PTR [ebp-0x3306002d]
  4395dd:	add    eax,0x0
  4395e0:	call   0x1c83:0xff98ffbc
  4395e7:	add    BYTE PTR [eax+0x30],ah
  4395ea:	call   DWORD PTR [eax]
  4395ec:	inc    DWORD PTR [eax]
  4395ee:	retf   0x8800
  4395f1:	xchg   edx,eax
  4395f2:	add    BYTE PTR ds:0xffc3ff89,dl
  4395f8:	fwait
  4395f9:	push   cs
  4395fa:	add    BYTE PTR [ebp-0x34],ch
  4395fd:	add    BYTE PTR [ebx+eax*4+0x6f89d5ce],ah
  439604:	inc    DWORD PTR [ebx-0x6a21ff98]
  43960a:	add    BYTE PTR [ebx+eax*4],cl
  43960d:	add    BYTE PTR [ebx-0xc43100],ah
  439613:	outs   dx,DWORD PTR ds:[esi]
  439614:	inc    DWORD PTR [ebx-0x1607ff28]
  43961a:	xor    DWORD PTR [esi-0x3348ff01],0x24
  439621:	pop    esi
  439622:	inc    DWORD PTR [esi+0x98ffcc]
  439628:	(bad)  
  439629:	push   ebp
  43962a:	call   FWORD PTR [eax]
  43962c:	(bad)  
  43962d:	jmp    FWORD PTR [edi-0x7d9d01]
  439633:	addr16 add bh,bh
  439636:	or     eax,0xff4d2cff
  43963b:	cmp    bh,0x0
  43963e:	(bad)  
  43963f:	jmp    DWORD PTR [ecx+ecx*8-0x7c00c401]
  439646:	aam    0xff
  439648:	enter  0xffb9,0xfa
  43964c:	cmp    edi,0x43
  43964f:	jmp    FWORD PTR [ebx+ecx*2-0x76333d01]
  439656:	adc    edi,edi
  439658:	push   edi
  439659:	(bad)  
  43965a:	push   DWORD PTR [eax+eax*1]
  43965d:	add    BYTE PTR [edi-0x1],al
  439660:	jl     0x4395fb
  439662:	add    BYTE PTR [eax+eax*1-0x77],ah
  439666:	mov    esi,0xeaeeff
  43966b:	outs   dx,DWORD PTR ds:[esi]
  43966c:	int3   
  43966d:	sbb    DWORD PTR [edi-0x1],0xffffffd7
  439671:	stos   BYTE PTR es:[edi],al
  439672:	sbb    DWORD PTR [ebp-0x4f0001],0xffffffc0
  439679:	jnp    0x43967b
  43967b:	dec    esi
  43967c:	mov    DWORD PTR [eax],eax
  43967e:	add    BYTE PTR [eax],0x9c
  439681:	xchg   edx,eax
  439682:	add    BYTE PTR [ebp-0x88007d],bh
  439688:	mov    dl,0x14
  43968a:	int3   
  43968b:	dec    edx
  43968c:	dec    esp
  43968e:	push   0xb9e3ff
  439693:	jl     0x439695
  439695:	add    dh,bh
  439697:	(bad)  
  439698:	mov    edi,0x8328833f
  43969d:	mov    ebp,ecx
  43969f:	add    BYTE PTR [ebx-0x7c59007c],cl
  4396a5:	call   eax
  4396a7:	add    BYTE PTR [edx],bh
  4396a9:	mov    al,ds:0xff00dd83
  4396ae:	push   edx
  4396af:	push   DWORD PTR [ecx-0x97c84]
  4396b5:	adc    DWORD PTR [eax],0xffffffcc
  4396b8:	dec    esi
  4396b9:	adc    al,0xff
  4396bb:	inc    ebx
  4396bc:	add    BYTE PTR [eax],al
  4396be:	sub    eax,DWORD PTR [eax]
  4396c0:	cmp    al,0x87
  4396c2:	call   DWORD PTR [ecx+0xa70083]
  4396c8:	dec    ebx
  4396c9:	inc    edi
  4396ca:	push   esp
  4396cc:	(bad)  
  4396cd:	dec    ebx
  4396cf:	dec    DWORD PTR [ebx-0x420009]
  4396d5:	add    BYTE PTR ds:0xffde4c83,bh
  4396db:	or     edi,edi
  4396dd:	jmp    edx
  4396df:	add    BYTE PTR [ecx-0x2d],dh
  4396e2:	dec    DWORD PTR [edi+edi*8-0x7d]
  4396e6:	aas    
  4396e7:	push   DWORD PTR [edi-0x66]
  4396ea:	push   DWORD PTR [edx-0x7d]
  4396ed:	push   edi
  4396ef:	(bad)  
  4396f0:	in     al,dx
  4396f1:	dec    edx
  4396f2:	xor    DWORD PTR [esi+0x0],0xffffff83
  4396f6:	pop    ecx
  4396f7:	call   FWORD PTR [ebp+eax*1+0xffe7ff]
  4396fe:	mov    bh,bh
  439700:	pop    esi
  439701:	xor    al,BYTE PTR [eax]
  439703:	scas   al,BYTE PTR es:[edi]
  439704:	inc    DWORD PTR [eax]
  439706:	jae    0x53439348
  43970c:	add    bh,bh
  43970e:	out    dx,eax
  43970f:	add    ah,ch
  439711:	mov    esp,0x89ffcc00
  439716:	mov    ds:0x896004cc,al
  43971b:	jbe    0x43971d
  43971d:	add    BYTE PTR ds:0xffca6aff,cl
  439723:	jmp    0x739727
  439728:	add    DWORD PTR [ebx-0x7cfb01],ebx
  43972e:	mov    al,ds:0xe7a400
  439733:	in     eax,0x0
  439735:	cmp    DWORD PTR [ebx-0x7d],0x36
  439739:	call   0xccc1:0xffff87ff
  439740:	dec    eax
  439741:	loop   0x439743
  439743:	std    
  439744:	add    BYTE PTR [eax],al
  439746:	jbe    0x439748
  439748:	out    dx,eax
  439749:	cmp    DWORD PTR [eax],eax
  43974b:	push   edi
  43974c:	(bad)  
  43974d:	(bad)  
  43974e:	mov    ebp,0xff61ff83
  439753:	popf   
  439754:	inc    DWORD PTR [ebx+0x589483e8]
  43975a:	push   DWORD PTR [eax]
  43975c:	add    DWORD PTR [eax],0xffffffbb
  43975f:	jmp    DWORD PTR ds:0xff8cff85
  439765:	mov    DWORD PTR [ecx-0x34],edi
  439768:	xchg   al,ch
  43976a:	add    BYTE PTR [esi-0x34],dl
  43976d:	inc    DWORD PTR [ebx-0x3372f301]
  439773:	aam    0x0
  439775:	jmp    FWORD PTR [ebx-0xe0dd77]
  43977b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43977c:	(bad)  
  43977d:	(bad)  
  43977e:	in     eax,dx
  43977f:	and    DWORD PTR [ecx-0x23],0xffffffff
  439783:	retf   
  439784:	inc    DWORD PTR [eax]
  439786:	jle    0x439787
  439788:	pop    edi
  439789:	and    eax,0xffffb600
  43978e:	sbb    DWORD PTR [eax],eax
  439790:	and    ecx,DWORD PTR [ecx-0x7c7c1901]
  439796:	cld    
  439797:	jmp    FWORD PTR [edi-0xe]
  43979a:	add    BYTE PTR [ebx-0x7cdc0001],ch
  4397a0:	inc    esp
  4397a1:	dec    ebp
  4397a2:	push   DWORD PTR [edi+edi*8]
  4397a5:	(bad)  
  4397a6:	call   0xd4b877
  4397ab:	inc    DWORD PTR fs:[ebx-0x1aa7008b]
  4397b2:	jmp    FWORD PTR [edx-0x7c12ff01]
  4397b8:	push   edx
  4397b9:	(bad)  
  4397bc:	inc    DWORD PTR [ebx+0xfa900a0]
  4397c2:	or     ebx,0xffffff89
  4397c5:	add    BYTE PTR [esp+ecx*8],al
  4397c8:	jne    0x439774
  4397ca:	add    BYTE PTR [edi],bh
  4397cc:	add    bh,bh
  4397ce:	jp     0x4397cf
  4397d0:	push   cs
  4397d1:	sbb    BYTE PTR [eax],al
  4397d3:	and    BYTE PTR [ebx-0x4e002501],al
  4397d9:	xor    bh,bh
  4397db:	inc    eax
  4397dc:	int3   
  4397dd:	and    DWORD PTR ds:0xd20800,0xffffff94
  4397e4:	add    BYTE PTR [eax],al
  4397e6:	jmp    0x4397e7
  4397e8:	mov    ebx,0x8977ccfc
  4397ed:	inc    edx
  4397ef:	push   DWORD PTR [edx+edi*4-0x1]
  4397f3:	pushf  
  4397f4:	dec    esp
  4397f6:	inc    edx
  4397f7:	(bad)  
  4397f8:	cld    
  4397f9:	push   cs
  4397fa:	add    BYTE PTR [esi-0x7d],ch
  4397fd:	call   ebp
  4397ff:	inc    DWORD PTR [edx]
  439801:	out    dx,eax
  439802:	add    bl,dl
  439804:	add    DWORD PTR [ebx+0x4b6589af],0xffffff89
  43980b:	sti    
  43980c:	int3   
  43980d:	cmp    DWORD PTR [edx-0x77],0x63
  439811:	sbb    edi,edi
  439813:	(bad)  
  439816:	adc    al,BYTE PTR [eax]
  439818:	push   edi
  439819:	das    
  43981a:	call   DWORD PTR [ebp-0x220000]
  439820:	cli    
  439821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439822:	(bad)  
  439823:	mov    esi,0xff4683ff
  439828:	ds aad 0xff
  43982b:	and    BYTE PTR [ebx-0x747c767d],al
  439831:	or     eax,0x89895fff
  439836:	mov    BYTE PTR [ebx+0x23832364],al
  43983c:	int3   
  43983d:	add    BYTE PTR [edi+0x397900],ch
  439843:	adc    al,0xff
  439845:	(bad)  
  439846:	js     0x4397cb
  439848:	push   esi
  439849:	test   eax,0xffff8389
  43984e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43984f:	jmp    DWORD PTR [ebp+0x56]
  439852:	dec    DWORD PTR [ebx]
  439854:	add    bh,bh
  439856:	inc    esi
  439857:	or     ebx,0x66
  43985a:	add    BYTE PTR [ecx-0x953377],ah
  439860:	xchg   esp,eax
  439861:	mov    edi,edi
  439863:	js     0x439864
  439865:	dec    DWORD PTR [ecx]
  439867:	int3   
  439868:	xchg   edi,eax
  439869:	push   esi
  43986a:	call   DWORD PTR [ecx-0x76c2007d]
  439870:	mov    edi,0xff83df00
  439876:	xchg   ebp,eax
  439877:	int3   
  439878:	ret    
  439879:	icebp  
  43987a:	jmp    FWORD PTR [edi-0x76170034]
  439880:	sti    
  439881:	add    BYTE PTR [bx+si+0x89],cl
  439886:	call   DWORD PTR gs:[eax+0x73]
  43988a:	push   esi
  43988c:	inc    DWORD PTR [eax]
  43988e:	cmp    bh,bh
  439890:	ds mov edi,edi
  439893:	dec    edx
  439894:	or     esp,0xffffffa1
  439897:	int3   
  439898:	adc    cl,cl
  43989a:	push   eax
  43989c:	add    BYTE PTR [eax],al
  43989e:	hlt    
  43989f:	add    ch,ch
  4398a1:	(bad)  
  4398a3:	jne    0x4398a4
  4398a5:	int3   
  4398a6:	aam    0x89
  4398a8:	jbe    0x4398f4
  4398aa:	int3   
  4398ab:	(bad)  
  4398ac:	add    bh,bh
  4398ae:	cmp    bh,bh
  4398b0:	inc    esp
  4398b1:	hlt    
  4398b2:	add    BYTE PTR [edi+0x0],dh
  4398b5:	push   DWORD PTR [eax+0x719783]
  4398bb:	pushf  
  4398bc:	inc    DWORD PTR [eax]
  4398be:	sbb    al,0x0
  4398c0:	sub    eax,0xff688353
  4398c5:	add    BYTE PTR [edi-0x294101],dh
  4398cb:	jle    0x4398cd
  4398cd:	inc    esp
  4398cf:	add    DWORD PTR [ecx+0xc3ffd7],0xffffffff
  4398d6:	stos   BYTE PTR es:[edi],al
  4398d7:	add    BYTE PTR [edi-0xdb0069],ah
  4398dd:	dec    edx
  4398df:	add    BYTE PTR [ebx+ebp*1-0x76ff6500],bl
  4398e6:	std    
  4398e7:	(bad)  
  4398e8:	mov    ebp,0xccd800fd
  4398ed:	add    BYTE PTR [eax+0x0],cl
  4398f0:	dec    esp
  4398f1:	mov    ebx,0xff00e0ff
  4398f6:	xrelease mov DWORD PTR [ecx+0xc],esp
  4398fa:	jmp    DWORD PTR [esi+0x8c00ff]
  439900:	push   edi
  439901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439902:	int3   
  439903:	dec    ebx
  439904:	add    BYTE PTR [ebx-0xb34ffc7],al
  43990a:	int3   
  43990b:	test   edi,edi
  43990d:	dec    DWORD PTR [edx]
  43990f:	add    BYTE PTR [ebp-0x7a],ah
  439912:	add    BYTE PTR [ecx-0xb60100],bl
  439918:	mov    ebx,0xc88361
  43991d:	int3   
  43991e:	iret   
  43991f:	int3   
  439920:	ss (bad) 
  439923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439924:	or     DWORD PTR [ecx-0x68a800cf],0x0
  43992b:	push   ebx
  43992c:	add    BYTE PTR [eax],al
  43992e:	cmp    BYTE PTR [ebx-0x4600d3cf],al
  439934:	add    bh,bh
  439936:	repnz (bad) 
  439938:	cmp    ah,BYTE PTR [esi-0x7d]
  43993b:	inc    edi
  43993c:	dec    esp
  43993e:	sub    bh,bh
  439940:	dec    eax
  439941:	icebp  
  439942:	add    BYTE PTR [esi],al
  439944:	(bad)  
  439945:	dec    DWORD PTR [ebp-0x1]
  439948:	sbb    al,0x28
  43994a:	(bad)  
  43994b:	aas    
  43994c:	add    BYTE PTR [eax],al
  43994e:	in     eax,0xff
  439950:	xor    bh,BYTE PTR [edi]
  439952:	push   DWORD PTR [ebx-0x7d]
  439955:	(bad)  
  439956:	sti    
  439957:	inc    DWORD PTR [edi]
  439959:	mov    ecx,0xffff4183
  43995e:	adc    edi,edi
  439960:	jg     0x439932
  439962:	int3   
  439963:	sbb    al,BYTE PTR [eax]
  439965:	dec    DWORD PTR [edx-0x33c43800]
  43996b:	fadd   QWORD PTR [eax]
  43996d:	add    bh,ah
  43996f:	add    dl,ah
  439971:	cmp    bh,0x27
  439974:	mov    edi,edi
  439976:	test   bh,bh
  439978:	clc    
  439979:	out    dx,eax
  43997a:	mov    DWORD PTR [esp+ecx*8-0x34],eax
  43997e:	outs   dx,DWORD PTR ds:[esi]
  43997f:	(bad)  
  439980:	(bad)  
  439981:	aam    0x0
  439983:	retf   
  439984:	or     esp,0xffffff9e
  439987:	xor    DWORD PTR [esi],0x1d
  43998a:	int3   
  43998b:	or     edi,edi
  43998d:	and    edx,0xffffff89
  439990:	xchg   edx,eax
  439991:	xchg   ecx,eax
  439992:	add    BYTE PTR [ecx],bl
  439994:	inc    DWORD PTR [eax]
  439996:	lods   eax,DWORD PTR ds:[esi]
  439997:	push   DWORD PTR [esi-0x2c3350]
  43999d:	cmp    DWORD PTR [edi+edi*8-0x49],0x2b
  4399a2:	push   edi
  4399a4:	inc    DWORD PTR [eax]
  4399a6:	sub    al,BYTE PTR [eax]
  4399a8:	dec    esi
  4399a9:	pop    ss
  4399aa:	add    ah,bh
  4399ac:	(bad)  
  4399ad:	jmp    DWORD PTR [eax+0x0]
  4399b0:	cmp    bl,BYTE PTR [edi]
  4399b2:	add    BYTE PTR [esi],dl
  4399b4:	inc    DWORD PTR [eax]
  4399b6:	ins    DWORD PTR es:[edi],dx
  4399b7:	call   DWORD PTR [ecx]
  4399b9:	cmc    
  4399ba:	(bad)  
  4399bb:	fiadd  DWORD PTR [eax]
  4399bd:	and    DWORD PTR [ecx],0xffffffff
  4399c0:	pop    ebp
  4399c1:	xor    bh,bh
  4399c3:	sbb    BYTE PTR [ebx+0x190088ff],al
  4399c9:	(bad)  
  4399ca:	inc    DWORD PTR [ebx-0x1]
  4399cd:	add    BYTE PTR [edi-0x7d],cl
  4399d0:	and    al,0x0
  4399d2:	add    al,al
  4399d4:	int3   
  4399d5:	dec    DWORD PTR [edi+edi*8]
  4399d8:	jg     0x4399ef
  4399da:	add    BYTE PTR [ebx+0x0],ah
  4399dd:	int3   
  4399de:	fimul  WORD PTR [ecx+0x42000a12]
  4399e4:	(bad)  
  4399e5:	(bad)  
  4399e6:	jmp    0x43996b
  4399e8:	cwde   
  4399e9:	inc    ecx
  4399ea:	mov    DWORD PTR [esi-0x34],esi
  4399ed:	dec    DWORD PTR ds:0xe15483
  4399f3:	(bad)  
  4399f4:	inc    DWORD PTR [eax]
  4399f6:	dec    eax
  4399f7:	push   DWORD PTR [ecx+esi*4-0x77]
  4399fb:	pop    ss
  4399fc:	inc    DWORD PTR [eax]
  4399fe:	xchg   bh,bh
  439a00:	scas   eax,DWORD PTR es:[edi]
  439a01:	enter  0x5ff,0x83
  439a05:	add    BYTE PTR [ebp+0x0],dl
  439a08:	xchg   ecx,eax
  439a09:	mov    BYTE PTR [eax],al
  439a0b:	dec    esi
  439a0c:	inc    DWORD PTR [eax]
  439a0e:	jo     0x439999
  439a10:	cmp    BYTE PTR [eax],dh
  439a12:	jmp    DWORD PTR [eax-0xe30001]
  439a18:	sub    bl,ah
  439a1a:	int3   
  439a1b:	cld    
  439a1c:	inc    DWORD PTR [eax]
  439a1e:	push   ebx
  439a1f:	push   DWORD PTR [eax+0x34]
  439a22:	(bad)  
  439a23:	jge    0x439a25
  439a25:	add    BYTE PTR [edi+edi*8-0x17670b7],dh
  439a2c:	int3   
  439a2d:	int3   
  439a2e:	jnp    0x439a2f
  439a30:	xor    DWORD PTR ds:0xffa3cc,eax
  439a36:	pop    esp
  439a37:	sub    DWORD PTR [edi],0x67
  439a3a:	add    BYTE PTR [edx-0xc4ff7d],cl
  439a40:	sbb    eax,0xff9b8923
  439a45:	dec    DWORD PTR [eax]
  439a47:	push   esi
  439a49:	push   cs
  439a4a:	call   FWORD PTR [eax+eax*1-0x1]
  439a4e:	test   BYTE PTR [eax],al
  439a50:	pop    eax
  439a51:	outs   dx,DWORD PTR ds:[esi]
  439a52:	add    BYTE PTR [ebp-0x7cd37c77],dl
  439a58:	scas   al,BYTE PTR es:[edi]
  439a59:	lea    eax,[eax]
  439a5b:	xor    edi,edi
  439a5d:	int3   
  439a5e:	pop    ds
  439a5f:	(bad)  
  439a60:	mov    esi,0xff7683b9
  439a65:	call   DWORD PTR [esi+0x0]
  439a68:	popa   
  439a69:	jg     0x4399ee
  439a6b:	mov    ?,edi
  439a6d:	int3   
  439a6e:	pop    esi
  439a6f:	sub    DWORD PTR [ecx],0xffffffb2
  439a72:	add    BYTE PTR [edi+0x0],al
  439a75:	dec    DWORD PTR [edx-0x7c240701]
  439a7b:	mov    esp,0xffbb00ff
  439a80:	dec    ebx
  439a81:	iret   
  439a82:	add    BYTE PTR [ebx+0x0],bl
  439a85:	push   ecx
  439a87:	push   DWORD PTR [edi-0x5a]
  439a8a:	call   FWORD PTR [eax]
  439a8c:	add    bh,bh
  439a8e:	aam    0x83
  439a90:	pop    es
  439a91:	rol    DWORD PTR [eax],0xb3
  439a94:	inc    DWORD PTR [ebx+0x7e140033]
  439a9a:	(bad)  
  439a9b:	jge    0x439a9c
  439a9d:	jmp    DWORD PTR [edx]
  439a9f:	add    BYTE PTR [ebx],ch
  439aa1:	aas    
  439aa2:	dec    DWORD PTR [ecx]
  439aa4:	int3   
  439aa5:	jmp    DWORD PTR [edi-0x1]
  439aa8:	stc    
  439aa9:	arpl   WORD PTR [eax],ax
  439aab:	aas    
  439aac:	cmp    edi,0xffffff84
  439aaf:	dec    DWORD PTR [eax+0x26]
  439ab2:	add    BYTE PTR [eax],al
  439ab4:	add    BYTE PTR [eax],al
  439ab6:	or     edi,edi
  439ab8:	inc    eax
  439ab9:	enter  0x4cc,0xff
  439abd:	call   DWORD PTR [eax]
  439abf:	add    ecx,0x1b
  439ac2:	add    BYTE PTR [edx],al
  439ac4:	(bad)  
  439ac5:	push   DWORD PTR [edi]
  439ac7:	call   edx
  439ac9:	inc    esi
  439aca:	add    BYTE PTR [eax-0x7c3a0000],bh
  439ad0:	jno    0x439b17
  439ad2:	call   DWORD PTR [edx-0x7d]
  439ad5:	add    BYTE PTR [esi],ch
  439ad7:	call   FWORD PTR [esi-0x73ff95]
  439add:	(bad)  
  439ade:	mov    ecx,0xff5a1bff
  439ae3:	imul   eax,DWORD PTR [eax],0xffffffff
  439ae6:	mov    esi,0x8938c383
  439aeb:	mov    eax,0xff31ffff
  439af0:	pop    ebx
  439af1:	jl     0x439af2
  439af3:	xor    eax,0xff4c8900
  439af8:	cwde   
  439af9:	(bad)  
  439afa:	jmp    DWORD PTR [esi]
  439afc:	add    bh,bh
  439afe:	push   0xffffffff
  439b00:	pop    edx
  439b01:	(bad)  
  439b02:	jmp    DWORD PTR [ebx]
  439b04:	add    bh,bh
  439b06:	retf   
  439b07:	add    BYTE PTR [edi-0x7d0036],cl
  439b0d:	call   DWORD PTR [ebx-0x1]
  439b10:	out    dx,eax
  439b11:	jmp    0x83bc:0x891000
  439b18:	bound  edi,QWORD PTR [esi-0x34]
  439b1b:	fdivr  st,st(7)
  439b1d:	jmp    DWORD PTR [ebp+0x0]
  439b20:	dec    ebx
  439b21:	pop    ss
  439b22:	mov    DWORD PTR [ecx-0xa77700],ecx
  439b28:	push   0xff7aff91
  439b2d:	sub    DWORD PTR [ebx],0xffffffff
  439b30:	adc    ah,BYTE PTR [ecx]
  439b32:	add    BYTE PTR [eax-0x750100],cl
  439b38:	sbb    edx,DWORD PTR [ecx-0x7d]
  439b3b:	sub    edi,edi
  439b3d:	mov    DWORD PTR [eax],ebp
  439b3f:	call   DWORD PTR [edx+ebp*8+0x0]
  439b43:	iret   
  439b44:	add    BYTE PTR [ebx-0x6c8700b9],al
  439b4a:	call   FWORD PTR [eax+eax*1+0x0]
  439b4e:	repnz add al,ch
  439b51:	inc    ebx
  439b52:	xor    edi,0xffffffff
  439b55:	add    dh,ch
  439b57:	cmp    DWORD PTR [ebx+0x80059],0x0
  439b5e:	mov    edx,0x9e31ff
  439b63:	inc    esp
  439b64:	(bad)  
  439b65:	jmp    DWORD PTR [esi+0x76ffff]
  439b6b:	xor    bh,bh
  439b6d:	add    BYTE PTR [ebx],bh
  439b6f:	cmp    DWORD PTR [ecx],0x7d
  439b72:	add    BYTE PTR [ecx],bl
  439b74:	add    BYTE PTR [eax],al
  439b76:	sahf   
  439b77:	cmp    eax,0x62
  439b7a:	mov    DWORD PTR [edi+0x0],esi
  439b7d:	call   DWORD PTR [edi-0x7d]
  439b80:	pushf  
  439b81:	aas    
  439b82:	inc    DWORD PTR [edx-0x1]
  439b85:	dec    DWORD PTR [ebx-0xee2901]
  439b8b:	ja     0x439b8c
  439b8d:	inc    DWORD PTR [ecx-0x1]
  439b90:	pop    edi
  439b91:	push   0xffffffff
  439b93:	push   ecx
  439b94:	mov    DWORD PTR [eax],eax
  439b96:	lock inc DWORD PTR [edi]
  439b99:	test   ah,0xba
  439b9c:	inc    DWORD PTR [eax]
  439b9e:	cmp    bh,bh
  439ba0:	dec    esp
  439ba1:	fdiv   st(7),st
  439ba3:	scas   eax,DWORD PTR es:[edi]
  439ba4:	(bad)  
  439ba5:	(bad)  
  439ba6:	cmp    bh,bh
  439ba8:	add    ecx,DWORD PTR [ecx]
  439baa:	call   FWORD PTR [eax]
  439bac:	inc    DWORD PTR [ebx-0x751a330c]
  439bb2:	(bad)  
  439bb3:	jnp    0x439bb4
  439bb5:	adc    DWORD PTR [esi-0x77],0xffffffec
  439bb9:	retf   0xcacc
  439bbc:	dec    DWORD PTR [ecx-0x2cdfffee]
  439bc2:	(bad)  
  439bc3:	cld    
  439bc4:	add    BYTE PTR [ecx-0x7824009a],cl
  439bca:	dec    DWORD PTR [ecx]
  439bcc:	dec    DWORD PTR [ecx-0x14ff00b4]
  439bd2:	add    BYTE PTR [ebp-0x7d],bh
  439bd5:	call   DWORD PTR [ecx-0x77]
  439bd8:	scas   al,BYTE PTR es:[edi]
  439bd9:	mov    edi,edi
  439bdb:	inc    edx
  439bdc:	inc    DWORD PTR [eax]
  439bde:	rol    BYTE PTR [eax],1
  439be0:	scas   al,BYTE PTR es:[edi]
  439be1:	fdiv   st(7),st
  439be3:	mov    al,ds:0xff630089
  439be8:	push   esi
  439be9:	lock xor DWORD PTR [eax-0xa1337d],0x66
  439bf1:	mov    bl,0xff
  439bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439bf4:	(bad)  
  439bf5:	(bad)  
  439bf6:	jmp    0x8379:0xffd7cfff
  439bfd:	call   FWORD PTR [esi-0x7c457b7d]
  439c03:	mov    esi,0x8b8300
  439c08:	cli    
  439c09:	and    bh,bh
  439c0b:	lods   al,BYTE PTR ds:[esi]
  439c0c:	(bad)  
  439c0d:	dec    edx
  439c0f:	add    BYTE PTR [ecx],ch
  439c11:	das    
  439c12:	add    BYTE PTR [eax+0x0],cl
  439c15:	(bad)  
  439c16:	fisttp DWORD PTR [ecx-0x3c0060fd]
  439c1c:	inc    DWORD PTR [ebx+0x6e5a8920]
  439c22:	add    ch,dh
  439c24:	(bad)  
  439c25:	jmp    FWORD PTR [eax-0x631701]
  439c2b:	pusha  
  439c2c:	add    BYTE PTR [ebx-0x5b1c0082],al
  439c32:	inc    DWORD PTR [edi+edi*8+0x1d8902ff]
  439c39:	mov    ch,0x0
  439c3b:	js     0x439c3c
  439c3d:	jmp    FWORD PTR [ecx+0x0]
  439c40:	mov    cx,0x9183
  439c44:	add    bh,bh
  439c46:	pop    ds
  439c47:	push   ebx
  439c49:	fld    QWORD PTR [eax]
  439c4b:	inc    edi
  439c4c:	add    BYTE PTR [eax],al
  439c4e:	les    eax,FWORD PTR [ebx-0x607610f9]
  439c54:	add    BYTE PTR [eax],al
  439c56:	mov    ecx,DWORD PTR [ecx+0x1c004fe1]
  439c5c:	int3   
  439c5d:	inc    edx
  439c5f:	and    DWORD PTR [ebp-0x80],0x0
  439c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c64:	add    BYTE PTR [eax],al
  439c66:	push   0xff96af83
  439c6b:	test   edi,edi
  439c6d:	int3   
  439c6e:	out    0xcc,al
  439c70:	pop    edi
  439c71:	into   
  439c72:	int3   
  439c73:	push   esp
  439c74:	add    BYTE PTR [ebx-0x7acc0080],al
  439c7a:	add    BYTE PTR [eax-0x76b33301],bh
  439c80:	lods   al,BYTE PTR ds:[esi]
  439c81:	xor    cl,ah
  439c83:	iret   
  439c84:	cmp    edi,0x24
  439c87:	mov    esp,eax
  439c89:	(bad)  
  439c8a:	(bad)  
  439c8b:	ds (bad) 
  439c8d:	call   FWORD PTR [edx]
  439c8f:	add    BYTE PTR [ebx],ch
  439c91:	push   0xffffffff
  439c93:	(bad)  
  439c94:	(bad)  
  439c95:	jmp    esp
  439c97:	push   DWORD PTR ds:0xff368375
  439c9d:	dec    DWORD PTR [ebp-0xf8b200]
  439ca3:	jae    0x439ca4
  439ca5:	add    BYTE PTR [eax],cl
  439ca7:	int3   
  439ca8:	imul   esp,DWORD PTR [eax+0xffbaff],0xcc838324
  439cb2:	adc    DWORD PTR [edx],0xffffffcc
  439cb5:	push   DWORD PTR [edx-0x330e2434]
  439cbb:	in     al,dx
  439cbc:	add    BYTE PTR [eax],al
  439cbe:	pop    ds
  439cbf:	sub    DWORD PTR [eax-0xb77cc8],0x0
  439cc6:	and    al,0xff
  439cc8:	and    edx,DWORD PTR [ebx]
  439cca:	mov    DWORD PTR [eax],esp
  439ccc:	dec    esp
  439cce:	scas   eax,DWORD PTR es:[edi]
  439ccf:	jmp    FWORD PTR [ecx+edx*2]
  439cd2:	jmp    FWORD PTR [edi]
  439cd4:	add    DWORD PTR [eax],0xffffffd9
  439cd7:	add    BYTE PTR [eax+edx*4-0x34],ah
  439cdb:	cmp    DWORD PTR [eax],eax
  439cdd:	add    dh,bh
  439cdf:	add    bh,ah
  439ce1:	adc    edi,edi
  439ce3:	sub    edi,edi
  439ce5:	mov    DWORD PTR [edi+edi*8+0x23],esp
  439ce9:	test   eax,0xffcc46ff
  439cee:	cmp    eax,0xba6d00
  439cf3:	push   ecx
  439cf4:	add    BYTE PTR [ebx+0x3c22ffb4],al
  439cfa:	push   DWORD PTR [ecx+0x0]
  439cfd:	adc    DWORD PTR [edi],0xffffff89
  439d00:	outs   dx,DWORD PTR ds:[esi]
  439d01:	or     al,BYTE PTR [eax]
  439d03:	cmp    bh,0xff
  439d06:	jns    0x439d07
  439d08:	imul   ebp,DWORD PTR [edi-0x7d],0x52
  439d0c:	inc    DWORD PTR [eax]
  439d0e:	mov    edi,0xac49ff
  439d13:	std    
  439d14:	mov    edi,edi
  439d16:	mov    al,0x89
  439d18:	mov    ebp,0xff85836c
  439d1d:	add    BYTE PTR [esp+ecx*8-0x4c],dh
  439d21:	mov    al,0x89
  439d23:	scas   al,BYTE PTR es:[edi]
  439d24:	mov    edi,edi
  439d26:	lods   eax,DWORD PTR ds:[esi]
  439d27:	(bad)  
  439d28:	fst    DWORD PTR [eax-0xb800]
  439d2e:	fdivp  st(7),st
  439d30:	inc    esi
  439d31:	xchg   DWORD PTR [ebx+0x4b8900d6],eax
  439d37:	dec    DWORD PTR [ecx-0xb0090]
  439d3d:	(bad)  
  439d3e:	(bad)  
  439d40:	xor    eax,0x4fffc1
  439d45:	int3   
  439d46:	jmp    0x439d48
  439d48:	push   edi
  439d49:	inc    ebp
  439d4a:	add    dl,ch
  439d4c:	dec    esp
  439d4e:	lea    eax,[eax]
  439d50:	std    
  439d51:	mov    bh,0x0
  439d53:	mov    eax,0x89108900
  439d58:	xor    eax,esp
  439d5a:	call   DWORD PTR [edi+edi*8]
  439d5d:	call   DWORD PTR [ebx-0x34]
  439d60:	out    0x59,al
  439d62:	jmp    FWORD PTR [ecx+ecx*4-0x1]
  439d66:	jmp    DWORD PTR es:[esi+0x37]
  439d6a:	dec    DWORD PTR [edx]
  439d6c:	inc    DWORD PTR [ebx-0x32b6008b]
  439d72:	add    BYTE PTR [eax-0x3330007d],ah
  439d78:	mov    ecx,DWORD PTR [ebp-0x7d]
  439d7b:	adc    eax,DWORD PTR [eax]
  439d7d:	inc    DWORD PTR [ebx]
  439d7f:	inc    DWORD PTR [esp+eax*8-0x34]
  439d83:	jmp    0x759e0b
  439d88:	fdiv   st,st(7)
  439d8a:	jmp    DWORD PTR [eax-0x77]
  439d8d:	mov    DWORD PTR [eax+eax*1+0x10],esp
  439d91:	cmp    eax,DWORD PTR [eax]
  439d93:	pop    edx
  439d94:	(bad)  
  439d95:	push   edi
  439d97:	mov    DWORD PTR [esi+0x36],esp
  439d9a:	add    BYTE PTR [edx-0x7c3a0100],dh
  439da0:	jb     0x439d65
  439da2:	int3   
  439da3:	loopne 0x439da4
  439da5:	inc    DWORD PTR [ecx+0xdb6ff]
  439dab:	mov    esi,0xc6ffff
  439db0:	or     eax,DWORD PTR [edx]
  439db2:	dec    DWORD PTR [edi-0x1]
  439db5:	add    BYTE PTR [ebp-0x1],ah
  439db8:	rcr    BYTE PTR [eax],cl
  439dba:	cmp    DWORD PTR [ebx+eax*4+0x4fff1200],0xd
  439dc2:	sub    DWORD PTR [ebp+0x9d8389],0xffffff8e
  439dc9:	push   ebp
  439dca:	add    BYTE PTR [eax-0x100],dl
  439dd0:	lea    ecx,[edx+0xff36ff]
  439dd6:	(bad)  
  439dd7:	(bad)  
  439dd8:	jnp    0x439dc1
  439dda:	dec    esi
  439ddc:	mov    DWORD PTR [ebx+0x4431006a],eax
  439de2:	call   eax
  439de4:	add    bh,bh
  439de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439de7:	add    BYTE PTR [ecx-0xc],bl
  439dea:	inc    esi
  439dec:	add    BYTE PTR [ecx-0x49f80093],cl
  439df2:	jmp    DWORD PTR [esi]
  439df4:	inc    DWORD PTR [eax]
  439df6:	or     BYTE PTR [eax],al
  439df8:	push   edx
  439df9:	rol    DWORD PTR [eax],1
  439dfb:	jl     0x439dfc
  439dfd:	call   DWORD PTR [edi+edi*8+0x18]
  439e01:	fild   DWORD PTR [ebx+0x4fff832a]
  439e07:	add    ch,bh
  439e09:	mov    cl,0x0
  439e0b:	mov    edi,0xff070083
  439e10:	mov    ds:0x27894e,al
  439e15:	add    BYTE PTR [ecx+0x0],ah
  439e18:	mov    ah,0x50
  439e1a:	jmp    ebx
  439e1c:	dec    DWORD PTR [ecx-0x7ab700e2]
  439e22:	add    DWORD PTR [ebx-0x1],0xffffff89
  439e26:	and    edi,edi
  439e28:	or     eax,0x3300fd
  439e2d:	int3   
  439e2e:	cld    
  439e2f:	sbb    DWORD PTR [ebx],0xffffffd8
  439e32:	mov    DWORD PTR [ecx],esi
  439e34:	dec    esp
  439e36:	ja     0x439e38
  439e38:	xor    DWORD PTR ds:0x838908ff,ecx
  439e3e:	mov    al,ds:0x83e5e4ff
  439e43:	add    bh,bh
  439e45:	cmp    DWORD PTR [edi+edi*8-0x53ffaecc],0xffffffcc
  439e4d:	mov    DWORD PTR [eax-0x7ca53701],eax
  439e53:	outs   dx,BYTE PTR ds:[esi]
  439e54:	(bad)  
  439e55:	jmp    FWORD PTR [ebp-0x33dc00]
  439e5b:	test   eax,0xff1fff00
  439e60:	pop    ds
  439e61:	push   ss
  439e62:	call   FWORD PTR [edx+0x0]
  439e65:	call   ebp
  439e67:	sub    DWORD PTR [eax-0x5700ea],0xffffffff
  439e6e:	and    eax,0xff074a00
  439e73:	into   
  439e74:	add    BYTE PTR [eax],al
  439e76:	pushf  
  439e77:	add    BYTE PTR [edx-0x76cc0058],ch
  439e7d:	int3   
  439e7e:	jbe    0x439e4c
  439e80:	push   cs
  439e81:	jns    0x439e83
  439e83:	jmp    0x439e0e
  439e85:	add    BYTE PTR [eax-0xe0f700],dh
  439e8b:	sbb    eax,DWORD PTR [eax]
  439e8d:	int3   
  439e8e:	out    dx,al
  439e8f:	int3   
  439e90:	cli    
  439e91:	cmp    BYTE PTR [ecx-0x37003345],cl
  439e97:	add    BYTE PTR ds:0x83de894f,bl
  439e9d:	push   DWORD PTR [edi-0x334eff77]
  439ea3:	add    eax,0x89f6ff83
  439ea8:	jle    0x439e53
  439eaa:	(bad)  
  439eab:	std    
  439eac:	dec    DWORD PTR [ecx+0x40ef837a]
  439eb2:	jmp    FWORD PTR [edx]
  439eb4:	add    DWORD PTR [eax],0xffffffb1
  439eb7:	int3   
  439eb8:	call   0xa06b22
  439ebd:	mov    DWORD PTR [ebp-0x33d1027d],edi
  439ec3:	xor    eax,0xff9200ff
  439ec8:	adc    eax,0xff28ff99
  439ecd:	(bad)  
  439ece:	mov    ebp,0xccd3becc
  439ed3:	(bad)  
  439ed4:	(bad)  
  439ed5:	push   DWORD PTR ds:0xffb29b83
  439edb:	add    DWORD PTR [eax],0xba898aff
  439ee1:	mov    ds:0xff6e00,al
  439ee6:	jle    0x439eb4
  439ee8:	pop    eax
  439ee9:	mov    esi,0x83ffce83
  439eee:	cmp    eax,0x214689
  439ef3:	or     al,0x83
  439ef5:	mov    DWORD PTR [edi],edi
  439ef7:	mov    DWORD PTR [edi],ebp
  439ef9:	xchg   ebp,eax
  439efa:	int3   
  439efb:	lds    eax,FWORD PTR [eax]
  439efd:	mov    DWORD PTR [eax-0x1],ebx
  439f00:	mov    edi,0xc80065
  439f05:	add    BYTE PTR [esi],dh
  439f07:	jmp    FWORD PTR [ebp-0x7c]
  439f0a:	jmp    DWORD PTR [eax-0x1]
  439f0d:	add    ah,dl
  439f0f:	add    BYTE PTR [ecx+0x0],ch
  439f12:	push   eax
  439f14:	mov    DWORD PTR [ecx+0x6dbfffdc],ecx
  439f1a:	jmp    DWORD PTR [edi-0x4b0100]
  439f20:	or     BYTE PTR [esi+0x83c1ff],dh
  439f26:	fadd   QWORD PTR [ebx-0x64ffa930]
  439f2c:	dec    esp
  439f2e:	out    dx,al
  439f2f:	jmp    DWORD PTR [eax]
  439f31:	or     esp,ecx
  439f33:	push   esp
  439f34:	add    bh,bh
  439f36:	mov    esi,0x83f2c183
  439f3b:	inc    ebp
  439f3c:	(bad)  
  439f3d:	call   DWORD PTR [esi-0x77]
  439f40:	in     al,dx
  439f41:	cdq    
  439f42:	inc    DWORD PTR [esi-0x1]
  439f45:	push   DWORD PTR [ebx]
  439f47:	inc    DWORD PTR [esi+eiz*2-0x7cca01]
  439f4e:	mov    al,0x89
  439f50:	mov    DWORD PTR [ecx-0x7d0000],ebp
  439f56:	xchg   edx,eax
  439f57:	inc    DWORD PTR [eax+ebx*8+0xffea83]
  439f5e:	popf   
  439f5f:	add    BYTE PTR [edi],bl
  439f61:	and    DWORD PTR [eax],eax
  439f63:	jge    0x439f64
  439f65:	add    BYTE PTR [edx-0x7d],cl
  439f68:	inc    esp
  439f69:	fdivr  st,st(7)
  439f6b:	leave  
  439f6c:	int3   
  439f6d:	add    BYTE PTR [eax-0xbd1e01],cl
  439f73:	pop    ds
  439f74:	add    bh,bh
  439f76:	call   0x8996557b
  439f7b:	add    eax,0x1100ff
  439f80:	xchg   ecx,eax
  439f81:	xchg   ebx,eax
  439f82:	sub    DWORD PTR [edi-0x1],0xffffffff
  439f86:	lahf   
  439f87:	or     DWORD PTR [esi+0x710007],0x0
  439f8e:	lea    eax,[ebx-0x6f7667fb]
  439f94:	add    bh,bh
  439f96:	xchg   esi,eax
  439f97:	(bad)  
  439f98:	out    dx,eax
  439f99:	inc    DWORD PTR [ebx+0x2fffffc1]
  439f9f:	push   DWORD PTR ds:0xffc30059
  439fa5:	(bad)  
  439fa6:	mov    ebx,0x839444cc
  439fab:	lock add bh,bh
  439fae:	inc    edi
  439faf:	mov    eax,esp
  439fb1:	das    
  439fb2:	dec    DWORD PTR [edi+0xb3cc00]
  439fb8:	rol    BYTE PTR [esp+ecx*8],cl
  439fbb:	cmp    al,0x0
  439fbd:	inc    ebx
  439fbf:	mov    eax,edx
  439fc1:	dec    ebp
  439fc2:	add    BYTE PTR [edi+edi*8-0x1],ch
  439fc6:	in     al,dx
  439fc7:	add    BYTE PTR [esi+ebx*4-0x77],cl
  439fcb:	push   es
  439fcc:	inc    DWORD PTR [ebx-0x27c00e2]
  439fd2:	jmp    FWORD PTR [ebx-0x450000]
  439fd8:	ret    
  439fd9:	xchg   esp,eax
  439fda:	add    ebp,0x0
  439fdd:	add    DWORD PTR [ebx],0xffffffff
  439fe0:	out    dx,al
  439fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439fe2:	int3   
  439fe3:	dec    esi
  439fe4:	inc    DWORD PTR [eax]
  439fe6:	add    BYTE PTR [bp+di],bl
  439fe9:	inc    ecx
  439fea:	dec    DWORD PTR [esi]
  439fec:	cmp    edi,0x35
  439fef:	add    BYTE PTR [esi-0x6ff77],ah
  439ff5:	add    BYTE PTR [ebx-0x3392d734],bh
  439ffb:	pop    edi
  439ffc:	add    DWORD PTR [eax],0x67
  439fff:	call   FWORD PTR [ecx+edi*2+0xb200]
  43a006:	out    0xff,al
  43a008:	jmp    0x43a068
  43a00a:	add    ah,dl
  43a00c:	mov    DWORD PTR [eax],eax
  43a00e:	fld    QWORD PTR [eax]
  43a010:	fcomp  st(7)
  43a012:	int3   
  43a013:	xor    edi,edi
  43a015:	call   DWORD PTR [eax+0xabea89]
  43a01b:	ds (bad) 
  43a01d:	jmp    FWORD PTR [edx-0x7d]
  43a020:	pushf  
  43a021:	ss push edi
  43a024:	(bad)  
  43a025:	call   FWORD PTR [eax-0x3354e101]
  43a02b:	adc    eax,DWORD PTR [ebx+0x3300daff]
  43a031:	test   DWORD PTR [ebx+0x31ff833b],0xe3f7ff
  43a03b:	sub    bh,bh
  43a03d:	(bad)  
  43a03e:	fmulp  st(4),st
  43a040:	mov    al,ds:0xffcaffc4
  43a045:	add    BYTE PTR [edi-0x742b7d],al
  43a04b:	xchg   esp,eax
  43a04c:	inc    DWORD PTR [eax]
  43a04e:	mov    cl,0x0
  43a050:	shr    BYTE PTR [edx-0x1],cl
  43a053:	sbb    BYTE PTR [eax],al
  43a055:	push   DWORD PTR [esi]
  43a057:	push   DWORD PTR [esi-0x76efff25]
  43a05d:	push   DWORD PTR [ecx+ecx*4-0x6dff433c]
  43a064:	add    bh,bh
  43a066:	adc    eax,0xbc5eff
  43a06b:	pop    esi
  43a06c:	or     DWORD PTR [ecx-0x173200aa],0x0
  43a073:	xor    al,BYTE PTR [eax]
  43a075:	add    ah,al
  43a077:	or     DWORD PTR [eax+0x12],0xffffffff
  43a07b:	cdq    
  43a07c:	add    DWORD PTR [eax],0xffffffb7
  43a07f:	push   DWORD PTR [esi]
  43a081:	and    eax,0xcc89f2ff
  43a086:	dec    edx
  43a087:	(bad)  
  43a088:	jge    0x43a0dd
  43a08a:	call   DWORD PTR [edi]
  43a08c:	inc    DWORD PTR [eax]
  43a08e:	mov    bl,0xff
  43a090:	xor    bl,BYTE PTR [esi+0x6683]
  43a096:	sub    DWORD PTR [eax],eax
  43a098:	dec    ebx
  43a099:	sar    bh,1
  43a09b:	es int3 
  43a09d:	inc    DWORD PTR [esi]
  43a09f:	dec    DWORD PTR [ebp-0x7c750037]
  43a0a5:	add    al,cl
  43a0a7:	dec    DWORD PTR [esi+0x5]
  43a0aa:	add    BYTE PTR [ecx-0x1],al
  43a0ad:	add    DWORD PTR [edx+0xe83089],0xffffff88
  43a0b4:	add    bh,bh
  43a0b6:	mov    eax,ds:0xffce4b00
  43a0bb:	cmp    edi,edi
  43a0bd:	and    DWORD PTR [esi],0x0
  43a0c0:	lahf   
  43a0c1:	pop    ecx
  43a0c2:	int3   
  43a0c3:	push   eax
  43a0c4:	cmp    edi,0x3e
  43a0c7:	add    BYTE PTR [edx+edi*4],ah
  43a0ca:	or     DWORD PTR ds:0xffc700ff,0xffffffa7
  43a0d1:	xor    eax,0xffb5ff
  43a0d6:	pop    esp
  43a0d7:	add    BYTE PTR [eax-0x4b],al
  43a0da:	add    BYTE PTR [esi+0x0],bh
  43a0dd:	jmp    FWORD PTR [ecx-0x1]
  43a0e0:	sbb    BYTE PTR ds:0xccff6dcc,bh
  43a0e6:	add    BYTE PTR [eax],0x5f
  43a0e9:	pop    ss
  43a0ea:	call   ebx
  43a0ec:	mov    edi,edi
  43a0ee:	and    edi,edi
  43a0f0:	xchg   DWORD PTR [ebx-0x7cf37d],edi
  43a0f6:	or     cl,BYTE PTR [ecx+0x4a003393]
  43a0fc:	add    bh,bh
  43a0fe:	add    al,BYTE PTR [eax]
  43a100:	and    edx,ecx
  43a102:	call   edx
  43a104:	add    BYTE PTR [eax],al
  43a106:	inc    edx
  43a107:	add    BYTE PTR [eax+edi*8-0x1],dl
  43a10b:	adc    eax,0x6fff00
  43a110:	in     al,dx
  43a111:	cmp    ah,cl
  43a113:	adc    cl,BYTE PTR [ecx-0x3601]
  43a119:	jg     0x43a11b
  43a11b:	in     al,dx
  43a11c:	or     esp,0xfffffff3
  43a11f:	add    bl,ch
  43a121:	cmp    edi,0x4c
  43a124:	inc    DWORD PTR [eax]
  43a126:	mov    edi,edi
  43a128:	xchg   ecx,edx
  43a12a:	int3   
  43a12b:	dec    edx
  43a12c:	cmp    edi,0xffffffc8
  43a12f:	adc    DWORD PTR [eax+0x82ff9b],0xffffffff
  43a136:	xchg   edx,eax
  43a137:	add    BYTE PTR [ecx+eiz*2-0x1],al
  43a13b:	js     0x43a13d
  43a13d:	or     DWORD PTR ds:0xffff8a00,0x3a
  43a144:	dec    esp
  43a146:	rol    DWORD PTR [eax],1
  43a148:	jnp    0x43a17d
  43a14a:	sub    DWORD PTR [esi],0x0
  43a14d:	add    BYTE PTR [eax+eax*1-0x50],cl
  43a151:	jg     0x43a0d6
  43a153:	retf   
  43a154:	(bad)  
  43a155:	inc    DWORD PTR [ecx-0x3a8e01]
  43a15b:	loope  0x43a15c
  43a15d:	sub    DWORD PTR [edx+0x0],0xffffffce
  43a161:	outs   dx,BYTE PTR ds:[esi]
  43a162:	call   FWORD PTR [edx-0x1]
  43a165:	mov    DWORD PTR [edx],eax
  43a167:	add    BYTE PTR [esi-0x33390075],cl
  43a16d:	inc    DWORD PTR [edx+0x0]
  43a170:	jmp    FWORD PTR [eax+0x4283ffa8]
  43a176:	pushf  
  43a177:	pushf  
  43a178:	(bad)  
  43a179:	cmp    eax,0x83ffa0ff
  43a17e:	(bad)  
  43a17f:	call   0x369583
  43a184:	adc    DWORD PTR [edi-0x11338b0e],0xffffffff
  43a18b:	test   al,0x83
  43a18d:	inc    DWORD PTR [ebx-0x72280002]
  43a193:	add    DWORD PTR [eax],0xffffffa9
  43a196:	enter  0xff40,0xbd
  43a19a:	int3   
  43a19b:	leave  
  43a19c:	cmp    edi,0xffffffff
  43a19f:	add    BYTE PTR fs:[edi],bl
  43a1a2:	stc    
  43a1a3:	inc    DWORD PTR [eax]
  43a1a5:	mov    ds:0xb883cfce,al
  43a1aa:	add    BYTE PTR [eax-0x33000001],ah
  43a1b0:	add    BYTE PTR [esi],bl
  43a1b2:	loope  0x43a1b3
  43a1b4:	mov    edx,ebx
  43a1b6:	js     0x43a1a0
  43a1b8:	mov    DWORD PTR [eax],edx
  43a1ba:	push   edi
  43a1bc:	int3   
  43a1bd:	inc    DWORD PTR [eax]
  43a1bf:	fiadd  WORD PTR [eax]
  43a1c1:	or     BYTE PTR [edi-0x1],0xcc
  43a1c5:	xor    al,0x86
  43a1c7:	dec    eax
  43a1c8:	mov    ebp,eax
  43a1ca:	jmp    FWORD PTR [ebx-0x7ff007d]
  43a1d0:	(bad)  
  43a1d1:	ds cmp eax,0x79dfffff
  43a1d7:	ret    
  43a1d8:	add    dl,dh
  43a1da:	adc    DWORD PTR [ebx],0xffffffff
  43a1dd:	inc    DWORD PTR [eax]
  43a1df:	mov    bh,0xff
  43a1e1:	loop   0x43a1f5
  43a1e3:	add    bh,bh
  43a1e5:	inc    ecx
  43a1e6:	sbb    BYTE PTR [esi+0x3e832700],dh
  43a1ec:	inc    DWORD PTR [eax]
  43a1ee:	and    edi,0x0
  43a1f1:	js     0x43a1cc
  43a1f3:	add    bh,bh
  43a1f5:	popf   
  43a1f6:	into   
  43a1f7:	js     0x43a1f8
  43a1f9:	adc    eax,DWORD PTR [eax]
  43a1fb:	add    al,0x89
  43a1fd:	int3   
  43a1fe:	add    dl,bh
  43a200:	add    BYTE PTR [eax],ah
  43a202:	mov    edi,edi
  43a204:	add    BYTE PTR [esp+esi*4],bh
  43a207:	sbb    edi,edi
  43a209:	retf   
  43a20a:	dec    DWORD PTR [esi-0x1]
  43a20d:	dec    esp
  43a20f:	sbb    al,BYTE PTR [eax]
  43a211:	clc    
  43a212:	xchg   esi,eax
  43a213:	(bad)  
  43a214:	dec    DWORD PTR [ebx]
  43a216:	sbb    bh,BYTE PTR [ebx]
  43a218:	mov    edi,esi
  43a21a:	cmp    DWORD PTR [edi+0x4c000000],0x0
  43a221:	mov    ebp,ds
  43a223:	add    BYTE PTR [eax],al
  43a225:	fcom   QWORD PTR [edi-0x93fffd]
  43a22b:	mov    esi,0xbaffff00
  43a230:	inc    ebx
  43a232:	mov    ecx,0xea66cc89
  43a237:	test   BYTE PTR [eax],0x98
  43a23a:	add    dh,ch
  43a23c:	inc    DWORD PTR [eax]
  43a23e:	dec    DWORD PTR ds:0x7c66ff
  43a244:	sbb    DWORD PTR [edi],0xffffffd4
  43a247:	jle    0x43a1d2
  43a249:	jmp    0x3dff:0xffff48cc
  43a250:	int3   
  43a251:	jmp    0x43a278
  43a253:	add    DWORD PTR [ebx+0xe5e5a7],0xffffffbb
  43a25a:	cmp    eax,0x0
  43a25d:	add    DWORD PTR [eax],0x76
  43a260:	dec    DWORD PTR [eax+0x68]
  43a263:	dec    esp
  43a265:	inc    esi
  43a266:	fcom   DWORD PTR [eax-0x7d]
  43a269:	out    0xff,eax
  43a26b:	test   eax,0xa1ff0083
  43a270:	call   DWORD PTR [edx-0x3cff0084]
  43a276:	(bad)  
  43a277:	imul   edi,edi,0xff6400dc
  43a27d:	inc    DWORD PTR [eax]
  43a27f:	xor    BYTE PTR [eax],al
  43a281:	pop    ebx
  43a282:	mov    ds:0x64bcff89,al
  43a287:	xor    ecx,esp
  43a289:	xchg   ebp,eax
  43a28a:	add    BYTE PTR [edx-0x7d],bh
  43a28d:	add    BYTE PTR [eax],al
  43a28f:	out    0x83,al
  43a291:	idiv   BYTE PTR [ecx+0x43b500ff]
  43a297:	fdivr  st,st(7)
  43a299:	cwde   
  43a29a:	dec    DWORD PTR ds:0x15ff83ff
  43a2a0:	sbb    DWORD PTR [ebx-0x3400009e],0x2e
  43a2a7:	test   BYTE PTR [eax],al
  43a2a9:	cmp    eax,0xffffd9ff
  43a2ae:	add    BYTE PTR [edi-0x62be01],cl
  43a2b4:	push   DWORD PTR [ecx-0x307cb60c]
  43a2ba:	add    BYTE PTR [eax],bl
  43a2bc:	mov    edi,edi
  43a2be:	add    cl,dl
  43a2c0:	dec    DWORD PTR [eax+eax*8-0x1]
  43a2c4:	call   FWORD PTR [edx+0x71ff8887]
  43a2ca:	int3   
  43a2cb:	sub    eax,0xbff8383
  43a2d0:	mov    DWORD PTR [edx+0x51ccffee],eax
  43a2d6:	pop    esi
  43a2d7:	mov    bl,0x0
  43a2d9:	cs (bad) 
  43a2db:	jmp    0x43a260
  43a2dd:	(bad)  
  43a2de:	(bad)  
  43a2df:	in     eax,dx
  43a2e0:	add    BYTE PTR [edi+edi*4-0x1],bh
  43a2e4:	inc    DWORD PTR [ebp-0x26]
  43a2e7:	mov    ah,0xff
  43a2e9:	or     DWORD PTR [ecx-0xffda],0x2a
  43a2f0:	push   DWORD PTR [ecx+0x4f]
  43a2f3:	add    bh,bh
  43a2f5:	or     cl,bl
  43a2f7:	mov    DWORD PTR [ebx+0x88360],0xfff6ff89
  43a301:	push   edx
  43a302:	sub    al,BYTE PTR [eax]
  43a304:	call   FWORD PTR [ebp-0xd]
  43a307:	xchg   ebx,eax
  43a308:	jmp    FWORD PTR [edi-0x34]
  43a30b:	cdq    
  43a30c:	dec    DWORD PTR [ecx+0x1f00f4ff]
  43a312:	cmp    bh,bh
  43a314:	sub    DWORD PTR [edx+0xff526d],0x0
  43a31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a31c:	add    BYTE PTR [eax],al
  43a31e:	jmp    edi
  43a320:	inc    ebx
  43a322:	in     al,0xff
  43a324:	jmp    DWORD PTR ds:0xfe00d32f
  43a32a:	int3   
  43a32b:	inc    eax
  43a32c:	add    BYTE PTR [eax],al
  43a32e:	(bad)  
  43a32f:	call   0x8a41a733
  43a334:	inc    DWORD PTR [edi-0x62]
  43a337:	dec    eax
  43a338:	push   DWORD PTR [ebp+0xff6a83]
  43a33e:	add    BYTE PTR [ecx-0x34],ah
  43a341:	pop    edx
  43a342:	and    al,0x0
  43a344:	sbb    DWORD PTR [ebx-0x51],0xffffffc8
  43a348:	(bad)  
  43a349:	cmp    ah,cl
  43a34b:	cdq    
  43a34c:	add    ah,cl
  43a34e:	dec    DWORD PTR [esi-0x1]
  43a351:	stc    
  43a352:	in     eax,dx
  43a353:	(bad)  
  43a354:	(bad)  
  43a355:	jmp    0x3447900
  43a35a:	add    DWORD PTR [ebx-0x1],0xffffff83
  43a35e:	jmp    DWORD PTR [ebx-0x1]
  43a361:	out    dx,al
  43a362:	fld    QWORD PTR [ebx+0x6bdce8ff]
  43a368:	jmp    FWORD PTR [edi]
  43a36a:	add    dl,dl
  43a36c:	inc    DWORD PTR [ebx+0x1e0076ff]
  43a372:	xchg   edi,eax
  43a373:	(bad)  
  43a374:	push   DWORD PTR [edi]
  43a376:	pop    eax
  43a377:	push   esp
  43a378:	call   DWORD PTR [eax+0x0]
  43a37b:	mov    ds:0x7b00ffff,eax
  43a380:	add    BYTE PTR [edi+0x78ff00a4],cl
  43a386:	inc    ebx
  43a387:	call   0xffff:0x57ffe4ff
  43a38e:	and    DWORD PTR [edx],0x0
  43a391:	test   BYTE PTR [eax-0x1],al
  43a394:	add    BYTE PTR [edi+0x39ff4702],al
  43a39a:	jmp    FWORD PTR [ebx-0x2fff7d00]
  43a3a0:	int3   
  43a3a1:	push   ss
  43a3a2:	inc    eax
  43a3a3:	add    BYTE PTR [eax],al
  43a3a5:	(bad)
  43a3a9:	dec    esp
  43a3aa:	mov    DWORD PTR [esi+0x89ffcc],edx
  43a3b0:	add    BYTE PTR [esi-0x41],ch
  43a3b3:	int3   
  43a3b4:	dec    esp
  43a3b6:	add    BYTE PTR [ebx-0x1],dh
  43a3b9:	pop    ecx
  43a3ba:	sbb    DWORD PTR [edi+edi*8-0x1],0xffffffcc
  43a3bf:	cmp    bh,0x3
  43a3c2:	inc    eax
  43a3c3:	add    BYTE PTR [ebx-0x76176a6d],al
  43a3c9:	fiadd  DWORD PTR [eax]
  43a3cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a3cc:	(bad)  
  43a3cd:	inc    DWORD PTR [eax]
  43a3cf:	pop    ecx
  43a3d0:	push   eax
  43a3d2:	mov    bh,0x0
  43a3d4:	push   ebp
  43a3d6:	call   0xff7d:0xe0065
  43a3dd:	(bad)  
  43a3de:	inc    DWORD PTR [ebx]
  43a3e0:	add    BYTE PTR [ecx-0x71ff00dd],dh
  43a3e6:	or     eax,0xff0a8369
  43a3eb:	sbb    eax,0x4700ffff
  43a3f0:	jmp    edx
  43a3f2:	fild   WORD PTR [ebx+0x2337e0ff]
  43a3f8:	add    BYTE PTR [edx-0x7d],dh
  43a3fb:	xor    cl,ah
  43a3fd:	add    DWORD PTR [eax],0x2b
  43a400:	add    BYTE PTR [edx],ah
  43a402:	out    dx,al
  43a403:	inc    DWORD PTR [eax]
  43a405:	sbb    eax,0xd28300de
  43a40a:	inc    DWORD PTR [ebp-0x407c7d00]
  43a410:	mov    DWORD PTR [ebx+eax*4+0x0],ecx
  43a414:	(bad)  
  43a415:	fdiv   st(1),st
  43a417:	jl     0x43a418
  43a419:	xchg   ebp,eax
  43a41a:	call   FWORD PTR ds:0x9eff89ff
  43a420:	mov    DWORD PTR [esi],esi
  43a422:	je     0x43a3f0
  43a424:	add    BYTE PTR [edx],dh
  43a426:	sub    al,0xc4
  43a428:	or     DWORD PTR [ebp+0xff09ff],0xffffff83
  43a42f:	aas    
  43a430:	call   DWORD PTR [edi+0x1e]
  43a433:	add    BYTE PTR [eax],al
  43a435:	cmc    
  43a436:	sbb    bh,BYTE PTR [ecx+ecx*4-0x9dffe6]
  43a43d:	dec    DWORD PTR [ecx-0x7613002a]
  43a443:	add    BYTE PTR [eax],al
  43a445:	fldcw  WORD PTR ds:0x835dffaa
  43a44b:	(bad)  
  43a44e:	call   FWORD PTR [ecx-0x1]
  43a451:	hlt    
  43a452:	add    DWORD PTR [eax],0xdbf47aff
  43a458:	add    BYTE PTR [esi],ch
  43a45a:	sbb    DWORD PTR [ebp+0x0],0x0
  43a45e:	and    DWORD PTR [edx-0x1],0x7f
  43a462:	add    BYTE PTR [ebx+0x2eea2fff],0xff
  43a469:	sbb    eax,0xcc006000
  43a46e:	int3   
  43a46f:	jne    0x43a470
  43a471:	push   ds
  43a472:	mov    ds:0xd90400ff,al
  43a477:	fwait
  43a478:	inc    DWORD PTR [edi+0x0]
  43a47b:	sub    al,0x0
  43a47d:	mov    edi,edi
  43a47f:	mov    bl,0xff
  43a481:	xchg   edi,eax
  43a482:	and    edi,edi
  43a484:	add    BYTE PTR [edi+edi*1],ah
  43a487:	mov    dl,0xcc
  43a489:	out    dx,eax
  43a48a:	push   DWORD PTR [esi-0x6affff01]
  43a490:	(bad)  
  43a491:	cli    
  43a492:	stos   BYTE PTR es:[edi],al
  43a493:	inc    DWORD PTR [eax]
  43a495:	and    DWORD PTR [edx-0x54],edi
  43a498:	add    BYTE PTR [eax-0xff0d00],ah
  43a49e:	and    DWORD PTR [edi-0x7685aa01],0x0
  43a4a5:	xchg   edi,eax
  43a4a6:	push   es
  43a4a7:	adc    ah,cl
  43a4a9:	icebp  
  43a4aa:	(bad)  
  43a4ab:	ds add bh,bh
  43a4ae:	(bad)  
  43a4af:	fdiv   st(7),st
  43a4b1:	push   eax
  43a4b2:	pushf  
  43a4b3:	int3   
  43a4b4:	add    BYTE PTR [ebx+ecx*8-0x61],dl
  43a4b8:	call   FWORD PTR [ebp-0x1]
  43a4bb:	add    eax,0x7400ffff
  43a4c0:	call   ebx
  43a4c2:	outs   dx,BYTE PTR ds:[esi]
  43a4c3:	add    BYTE PTR [ecx+0xe9e858],cl
  43a4c9:	push   0x83ff9eff
  43a4ce:	add    BYTE PTR [esi],cl
  43a4d0:	jmp    FWORD PTR [ecx+0x45]
  43a4d3:	add    bh,bh
  43a4d5:	fcmovbe st,st(3)
  43a4d7:	aaa    
  43a4d8:	add    BYTE PTR [ecx+0x0],ch
  43a4db:	dec    ecx
  43a4dc:	inc    DWORD PTR [eax]
  43a4de:	add    BYTE PTR [esp+ecx*8-0x7c00ff92],bh
  43a4e5:	hlt    
  43a4e6:	fld    TBYTE PTR [ebp-0x77]
  43a4e9:	dec    DWORD PTR ds:[ebx-0x7d]
  43a4ed:	cmp    edi,0xffffff93
  43a4f0:	add    al,dh
  43a4f2:	(bad)  
  43a4f4:	push   DWORD PTR [ebx]
  43a4f6:	ret    
  43a4f7:	mov    al,0xff
  43a4f9:	in     al,dx
  43a4fa:	sub    DWORD PTR [edx-0x47d0000],0xffffffcc
  43a501:	jno    0x43a51c
  43a503:	add    BYTE PTR [ebx-0xf935d3],al
  43a509:	fld    DWORD PTR [eax]
  43a50b:	xor    edi,edi
  43a50d:	add    bh,bh
  43a50f:	das    
  43a510:	jmp    DWORD PTR [ebp+0x5f00ffd9]
  43a516:	repnz fdiv st(7),st
  43a519:	hlt    
  43a51a:	(bad)  
  43a51b:	out    dx,eax
  43a51c:	inc    DWORD PTR [ebx+0x23833b00]
  43a522:	jne    0x43a524
  43a524:	add    esi,0xffffffdd
  43a527:	and    cl,ah
  43a529:	xor    eax,0xcc0058ff
  43a52e:	push   DWORD PTR [eax+0x0]
  43a531:	xchg   BYTE PTR [ebx],bh
  43a533:	add    DWORD PTR [eax],0x3e
  43a536:	mov    bl,0x75
  43a538:	push   DWORD PTR [ebx-0x1]
  43a53b:	xor    bh,bh
  43a53d:	inc    DWORD PTR [ebx-0x18e876bc]
  43a543:	mov    DWORD PTR [ebx-0x9171ff],eax
  43a549:	xchg   ebx,eax
  43a54a:	add    ch,ah
  43a54c:	inc    DWORD PTR [ebx-0x60000401]
  43a552:	mov    esi,0x4bcf0000
  43a557:	popa   
  43a558:	mov    DWORD PTR [esi-0x77],edi
  43a55b:	jo     0x43a529
  43a55d:	mov    DWORD PTR [eax],eax
  43a55f:	xor    eax,0x83ceb200
  43a564:	add    ah,bl
  43a566:	adc    eax,0x8357cc22
  43a56b:	fild   DWORD PTR [eax]
  43a56d:	add    BYTE PTR [eax],al
  43a56f:	cmp    bh,bh
  43a571:	pop    es
  43a572:	(bad)  
  43a573:	(bad)  
  43a574:	call   DWORD PTR [eax+0x56cc03d1]
  43a57a:	push   DWORD PTR [esi]
  43a57c:	(bad)  
  43a57d:	inc    DWORD PTR [eax]
  43a57f:	pop    eax
  43a580:	(bad)  
  43a581:	dec    BYTE PTR [edi+0x2dc800ff]
  43a587:	das    
  43a588:	add    bh,cl
  43a58a:	add    BYTE PTR [ebp-0x1],cl
  43a58d:	or     esp,0xffffffca
  43a590:	add    BYTE PTR [esi+0x6b],bl
  43a593:	int3   
  43a594:	mov    esp,ecx
  43a596:	(bad)  
  43a597:	iret   
  43a598:	jmp    DWORD PTR [eax+eax*1]
  43a59b:	rol    BYTE PTR [eax],cl
  43a59d:	(bad)  
  43a59e:	dec    DWORD PTR ds:0xff62e7ff
  43a5a4:	jmp    DWORD PTR [ebp-0x417c950e]
  43a5aa:	adc    DWORD PTR [ecx+0x0],0xffffffff
  43a5ae:	add    dl,ah
  43a5b0:	inc    DWORD PTR [edi+esi*1-0x7d]
  43a5b4:	call   DWORD PTR [edi+0x61]
  43a5b7:	and    al,BYTE PTR [eax]
  43a5b9:	sub    DWORD PTR [eax],eax
  43a5bb:	inc    ebp
  43a5bc:	(bad)  
  43a5bd:	inc    DWORD PTR [eax]
  43a5bf:	fmul   st(4),st
  43a5c1:	pop    ebp
  43a5c2:	stos   DWORD PTR es:[edi],eax
  43a5c3:	add    DWORD PTR [eax],0x44
  43a5c6:	cmp    al,0x34
  43a5c8:	add    BYTE PTR [ecx],cl
  43a5ca:	jmp    ebp
  43a5cc:	add    BYTE PTR [eax],al
  43a5ce:	mov    esp,esp
  43a5d0:	dec    DWORD PTR [edx]
  43a5d2:	adc    al,BYTE PTR [eax]
  43a5d4:	add    BYTE PTR [esi],bl
  43a5d6:	sar    ebx,0xff
  43a5d9:	xor    eax,DWORD PTR [ebx-0x337cffd6]
  43a5df:	pop    edi
  43a5e0:	add    BYTE PTR [ecx],dh
  43a5e2:	inc    eax
  43a5e3:	inc    DWORD PTR [eax]
  43a5e5:	mov    ah,0x58
  43a5e7:	in     al,dx
  43a5e8:	add    bh,ch
  43a5ea:	add    BYTE PTR [ebx-0x42ff3301],ch
  43a5f0:	add    BYTE PTR [ecx*8+0x5236ff83],ch
  43a5f7:	mov    ds:0x95ffe0ff,al
  43a5fc:	(bad)  
  43a5fd:	inc    DWORD PTR [ebx+0x506d00c8]
  43a603:	add    bh,bh
  43a605:	jge    0x43a5d8
  43a607:	cmp    bh,0x35
  43a60a:	xor    DWORD PTR [ebp-0x7d],0xffffffff
  43a60e:	mov    DWORD PTR ds:0xa6adff,esp
  43a614:	inc    DWORD PTR [ebx-0x1a7c52e1]
  43a61a:	sub    ecx,0x0
  43a61d:	mov    esp,ecx
  43a61f:	add    al,0xff
  43a621:	mov    ah,0xab
  43a623:	inc    DWORD PTR [eax]
  43a625:	fild   DWORD PTR [ebx-0x34]
  43a628:	jmp    FWORD PTR [ebx]
  43a62a:	call   FWORD PTR [ebx]
  43a62c:	cmp    edi,0xffffff83
  43a62f:	ret    
  43a630:	add    cl,cl
  43a632:	enter  0x0,0x98
  43a636:	out    0xfc,eax
  43a638:	add    DWORD PTR ds:0xff896800,0x0
  43a63f:	nop
  43a640:	jmp    DWORD PTR [edx]
  43a642:	cdq    
  43a643:	(bad)  
  43a644:	jmp    FWORD PTR [edx-0x36]
  43a647:	inc    edi
  43a648:	int3   
  43a649:	inc    esp
  43a64a:	add    ch,bh
  43a64c:	add    DWORD PTR [eax],0xffffffcc
  43a64f:	add    DWORD PTR [ebx-0x7cad53],eax
  43a655:	inc    edx
  43a656:	arpl   si,bp
  43a658:	add    BYTE PTR [ebp-0x764c01],dh
  43a65e:	add    bl,al
  43a660:	int3   
  43a661:	xlat   BYTE PTR ds:[ebx]
  43a662:	mov    dh,0x0
  43a664:	push   DWORD PTR [ecx-0x42ff08a4]
  43a66a:	inc    DWORD PTR [eax-0x7c01]
  43a670:	add    cl,al
  43a672:	stc    
  43a673:	cmp    edi,0xffffffdd
  43a676:	outs   dx,BYTE PTR ds:[esi]
  43a677:	leave  
  43a678:	(bad)  
  43a679:	aas    
  43a67a:	int3   
  43a67b:	xchg   edx,eax
  43a67c:	cmp    edi,0xffffff89
  43a67f:	add    al,0xff
  43a681:	jp     0x43a66a
  43a683:	mov    DWORD PTR [ebx-0x1a8d05],eax
  43a689:	gs add dh,ch
  43a68c:	inc    DWORD PTR [eax]
  43a68e:	add    DWORD PTR [eax-0x1],0xfffffffc
  43a692:	je     0x43a693
  43a694:	sub    DWORD PTR [ebx-0x37],0xffffffee
  43a698:	add    BYTE PTR [ebx-0xbd01],dh
  43a69e:	add    bh,ah
  43a6a0:	or     DWORD PTR [esi-0x4d],0xffffffcc
  43a6a4:	jmp    DWORD PTR [esi+ecx*1]
  43a6a7:	mov    ds:0x80ff8e00,eax
  43a6ac:	inc    DWORD PTR [eax]
  43a6ae:	add    BYTE PTR [edx-0x7d],ch
  43a6b1:	xlat   BYTE PTR ds:[ebx]
  43a6b2:	adc    al,0xff
  43a6b4:	xor    DWORD PTR [eax],0x4e
  43a6b7:	mov    dh,0xcc
  43a6b9:	clc    
  43a6ba:	push   DWORD PTR [edi+edi*8-0x1]
  43a6be:	add    BYTE PTR [ebp+0xe34aff],ch
  43a6c4:	(bad)  
  43a6c5:	fisttp WORD PTR [ebx-0x336bffe3]
  43a6cb:	scas   al,BYTE PTR es:[edi]
  43a6cc:	(bad)  
  43a6cd:	inc    DWORD PTR [eax]
  43a6cf:	scas   eax,DWORD PTR es:[edi]
  43a6d0:	inc    DWORD PTR [ecx+0x31]
  43a6d3:	add    BYTE PTR [eax],al
  43a6d5:	retf   
  43a6d6:	ds in  al,dx
  43a6d8:	add    BYTE PTR [eax],bl
  43a6da:	call   FWORD PTR [ebx-0x1]
  43a6dd:	inc    DWORD PTR [ebx+0x5374ff8f]
  43a6e3:	inc    DWORD PTR [eax]
  43a6e5:	and    BYTE PTR [ecx],ch
  43a6e7:	sti    
  43a6e8:	add    dl,cl
  43a6ea:	(bad)  
  43a6eb:	mov    ebx,0x78ff00ff
  43a6f0:	call   FWORD PTR [ecx+0x21ffffc9]
  43a6f6:	push   ecx
  43a6f7:	add    BYTE PTR [eax],0xa0
  43a6fa:	mov    esi,ebp
  43a6fc:	or     DWORD PTR [ecx-0x8003901],0xffffffd4
  43a703:	mov    DWORD PTR [eax],eax
  43a705:	cmp    DWORD PTR [edi+ebx*2],ebx
  43a708:	int3   
  43a709:	xor    bh,bh
  43a70b:	ja     0x43a70d
  43a70d:	inc    DWORD PTR [ebx+0x1ba900ac]
  43a713:	mov    esp,ecx
  43a715:	in     eax,dx
  43a716:	ja     0x43a69d
  43a718:	call   ebx
  43a71a:	jmp    DWORD PTR [eax+0x3ecccc00]
  43a720:	and    eax,0x79
  43a723:	inc    DWORD PTR [eax]
  43a725:	in     eax,0x68
  43a727:	dec    ebp
  43a728:	jmp    FWORD PTR [esi]
  43a72a:	int3   
  43a72b:	xor    al,0xff
  43a72d:	add    bh,bh
  43a72f:	popf   
  43a730:	or     DWORD PTR [esi],0x65
  43a733:	add    BYTE PTR [eax],al
  43a735:	adc    BYTE PTR [eax],cl
  43a737:	popa   
  43a738:	mov    DWORD PTR [edi+edi*8],ebp
  43a73b:	mov    edi,0xbd00ff00
  43a740:	add    BYTE PTR [edx],dl
  43a742:	mov    eax,0x41dd00cc
  43a747:	nop
  43a748:	int3   
  43a749:	mov    bh,bh
  43a74b:	jmp    0x26cc:0xd898300
  43a752:	pushf  
  43a753:	add    BYTE PTR [ebx-0x76911580],al
  43a759:	cmp    bh,0xfa
  43a75c:	int3   
  43a75d:	inc    DWORD PTR [eax]
  43a75f:	fdivp  st(7),st
  43a761:	mov    al,ds:0xf0ff8378
  43a766:	aas    
  43a767:	mov    esi,0xfcff5e00
  43a76c:	add    BYTE PTR [eax],al
  43a76e:	cmp    DWORD PTR [eax],0xffffffff
  43a771:	das    
  43a772:	add    BYTE PTR gs:[eax],al
  43a775:	push   es
  43a776:	test   eax,0x8394830b
  43a77b:	js     0x43a77c
  43a77d:	inc    DWORD PTR [eax]
  43a77f:	repnz dec eax
  43a782:	xchg   edi,eax
  43a783:	inc    DWORD PTR [eax]
  43a785:	fistp  DWORD PTR [ecx]
  43a787:	xchg   ecx,eax
  43a788:	add    BYTE PTR [eax+0x0],bl
  43a78b:	int3   
  43a78c:	(bad)  
  43a78d:	dec    esp
  43a78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a790:	int3   
  43a791:	cld    
  43a792:	clc    
  43a793:	inc    DWORD PTR [ebx+0xeb361c]
  43a799:	or     ecx,esp
  43a79b:	inc    DWORD PTR [eax]
  43a79d:	add    BYTE PTR [eax],al
  43a79f:	adc    al,BYTE PTR [eax]
  43a7a1:	adc    bh,dh
  43a7a3:	inc    DWORD PTR [eax]
  43a7a5:	in     al,dx
  43a7a6:	in     al,0x24
  43a7a8:	cmp    DWORD PTR [eax+eax*1+0xccff97],0x23
  43a7b0:	adc    DWORD PTR [edi],0xffffffa6
  43a7b3:	inc    DWORD PTR [ebx+0xb133af]
  43a7b9:	xchg   esi,eax
  43a7ba:	call   DWORD PTR [ebx]
  43a7bc:	int3   
  43a7bd:	add    BYTE PTR [eax],al
  43a7bf:	xor    DWORD PTR [eax],eax
  43a7c1:	pop    ebp
  43a7c2:	outs   dx,DWORD PTR ds:[esi]
  43a7c3:	add    BYTE PTR [eax],al
  43a7c5:	pusha  
  43a7c6:	mov    ecx,0xff54003d
  43a7cb:	mov    ebx,0x2f838900
  43a7d0:	dec    DWORD PTR [esp+ecx*8]
  43a7d3:	inc    DWORD PTR [eax]
  43a7d5:	pop    esi
  43a7d6:	stos   BYTE PTR es:[edi],al
  43a7d7:	mov    edi,0x2dccabff
  43a7dc:	mov    edi,edi
  43a7de:	xor    DWORD PTR [edx],0xffffffff
  43a7e1:	sub    eax,0x8700cc7d
  43a7e6:	enter  0xff01,0x5e
  43a7ea:	jmp    DWORD PTR [eax-0x1]
  43a7ed:	add    BYTE PTR [ecx-0x101f0012],cl
  43a7f3:	add    BYTE PTR [eax],al
  43a7f5:	rcl    DWORD PTR [ecx],1
  43a7f7:	stc    
  43a7f8:	call   FWORD PTR [edx]
  43a7fa:	dec    DWORD PTR [ebx+0x50cc00ff]
  43a800:	call   FWORD PTR [ecx+0x79]
  43a803:	add    BYTE PTR [eax],al
  43a805:	mov    edi,DWORD PTR [eax-0x4d]
  43a808:	int3   
  43a809:	jbe    0x43a80a
  43a80b:	push   0x8700cc83
  43a810:	jmp    DWORD PTR [ebx+0x32830064]
  43a816:	stos   BYTE PTR es:[edi],al
  43a817:	inc    edi
  43a818:	cmp    DWORD PTR [edi+edi*8],0xffffffc3
  43a81c:	dec    esp
  43a81e:	add    dh,bl
  43a820:	add    BYTE PTR [ebp+0x7a],bh
  43a823:	inc    DWORD PTR [eax]
  43a825:	push   ebp
  43a826:	add    eax,0x83748925
  43a82b:	ror    ah,1
  43a82d:	add    BYTE PTR [ebx-0x62a2006a],al
  43a833:	int3   
  43a834:	call   DWORD PTR [esp+eiz*4-0x980079]
  43a83b:	sbb    eax,0xd7ff89ff
  43a840:	inc    esi
  43a842:	mov    dl,0xff
  43a844:	add    BYTE PTR [ebp-0x36],dl
  43a847:	cs add al,cl
  43a84a:	add    BYTE PTR [ebp-0x1],dh
  43a84d:	add    BYTE PTR [eax],al
  43a84f:	or     DWORD PTR [eax],eax
  43a851:	fsubr  st,st(3)
  43a853:	add    bh,bh
  43a855:	lods   al,BYTE PTR ds:[esi]
  43a856:	lds    ebx,FWORD PTR [ebx+0x0]
  43a859:	xchg   ebx,eax
  43a85a:	call   FWORD PTR [edx]
  43a85c:	(bad)  
  43a85d:	inc    DWORD PTR [eax]
  43a85f:	test   DWORD PTR [ebx-0x7c0018e6],eax
  43a865:	ret    0x12ef
  43a868:	add    bh,dl
  43a86a:	push   esp
  43a86c:	add    BYTE PTR [ecx+0xb8919ff],cl
  43a872:	jle    0x43a874
  43a874:	mov    DWORD PTR [edx-0x47],eax
  43a877:	call   0x5543e17b
  43a87c:	(bad)  
  43a87d:	inc    DWORD PTR [eax]
  43a87f:	js     0x43a880
  43a881:	gs xor eax,0xa3a7ffff
  43a887:	jp     0x43a888
  43a889:	aas    
  43a88a:	jmp    FWORD PTR [edi+edi*8-0x1]
  43a88e:	sub    DWORD PTR [ecx],0x0
  43a891:	and    DWORD PTR [edx-0x1],0x0
  43a895:	push   eax
  43a896:	xchg   edx,eax
  43a897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a898:	add    DWORD PTR [eax-0x1],0xffffffda
  43a89c:	(bad)  
  43a89d:	(bad)  
  43a89e:	inc    DWORD PTR [esi+0xc80c00]
  43a8a4:	jmp    DWORD PTR [ebp+0x3f0024b3]
  43a8aa:	add    BYTE PTR [edi+edi*8-0x1],al
  43a8ae:	int3   
  43a8af:	call   0x29ff:0x89d9ff
  43a8b6:	or     al,0x43
  43a8b8:	dec    DWORD PTR [ecx+0x0]
  43a8bb:	jg     0x43a8bc
  43a8bd:	add    DWORD PTR [eax],0x15
  43a8c0:	dec    DWORD PTR [ebp-0x5f]
  43a8c3:	inc    DWORD PTR [ebx+0x73c8bc]
  43a8c9:	test   eax,0xff008eff
  43a8ce:	add    BYTE PTR [eax],bh
  43a8d0:	add    BYTE PTR [ebx],cl
  43a8d2:	push   esi
  43a8d3:	(bad)  
  43a8d4:	dec    DWORD PTR [esi+0x370089f0]
  43a8da:	add    BYTE PTR [ebp-0x78ff0001],ch
  43a8e0:	xor    DWORD PTR [eax+0xc],0xffffffff
  43a8e4:	call   FWORD PTR [esi+0x39]
  43a8e7:	repz cmp DWORD PTR [ebp-0x1],0xffffffb5
  43a8ec:	or     DWORD PTR [ecx+0x57ff6900],0x53
  43a8f3:	inc    DWORD PTR [eax]
  43a8f5:	or     eax,0xd38344ac
  43a8fa:	dec    DWORD PTR [esi+0x8008900]
  43a900:	add    ah,al
  43a902:	or     DWORD PTR [ecx+0x4000f600],ecx
  43a908:	inc    DWORD PTR [edi]
  43a90a:	inc    DWORD PTR [edx-0x3bffff01]
  43a910:	int3   
  43a911:	(bad)  
  43a912:	add    DWORD PTR [ecx-0x7aa7e034],ecx
  43a918:	mov    DWORD PTR [eax+0xfe00],esp
  43a91e:	call   ebx
  43a920:	jmp    FWORD PTR [eax+0x17]
  43a923:	int3   
  43a924:	add    BYTE PTR ds:0x1d000ebd,dh
  43a92a:	call   DWORD PTR [eax+0x32ff0000]
  43a930:	add    BYTE PTR [ecx],al
  43a932:	jb     0x43a934
  43a934:	add    BYTE PTR [eax-0x577cc2c3],cl
  43a93a:	add    BYTE PTR [edx],dl
  43a93c:	(bad)  
  43a93d:	inc    DWORD PTR [eax]
  43a93f:	jecxz  0x43a941
  43a941:	push   ecx
  43a942:	jge    0x43a943
  43a944:	add    al,bh
  43a946:	or     edx,eax
  43a948:	call   DWORD PTR [ecx+ecx*4]
  43a94b:	add    cl,BYTE PTR [ecx-0x76f4ff01]
  43a951:	outs   dx,BYTE PTR ds:[esi]
  43a952:	fdivp  st(7),st
  43a954:	inc    DWORD PTR [ebx+0x59ff9584]
  43a95a:	jmp    FWORD PTR [edi-0x1]
  43a95d:	inc    DWORD PTR [eax]
  43a95f:	ins    BYTE PTR es:[edi],dx
  43a960:	int3   
  43a961:	xor    DWORD PTR [esi+0x0],ecx
  43a964:	jmp    ebx
  43a966:	mov    cl,dl
  43a968:	(bad)  
  43a969:	cld    
  43a96a:	add    BYTE PTR [edi-0x44ff7c7d],ah
  43a970:	dec    DWORD PTR [ecx]
  43a972:	cmp    edi,edi
  43a974:	add    BYTE PTR [ebx],bh
  43a976:	pop    ecx
  43a977:	ja     0x43a8fc
  43a979:	inc    esp
  43a97a:	add    BYTE PTR [eax+eax*1-0xb0000],ah
  43a981:	data16 fld QWORD PTR [ebx+0x559785cc]
  43a988:	mov    DWORD PTR [edx-0x1],ecx
  43a98b:	pop    DWORD PTR [eax]
  43a98d:	add    bh,bh
  43a98f:	inc    eax
  43a990:	call   DWORD PTR [ebp+0x39]
  43a993:	add    DWORD PTR [ebx+0xe59f8f],0xffffff85
  43a99a:	add    bh,dl
  43a99c:	(bad)  
  43a99d:	(bad)  
  43a99e:	push   DWORD PTR [ebx-0x6dfa00]
  43a9a4:	jmp    ebx
  43a9a6:	dec    esp
  43a9a7:	retf   0xabff
  43a9aa:	inc    DWORD PTR [edi]
  43a9ac:	add    bh,bh
  43a9ae:	add    dh,ah
  43a9b0:	dec    DWORD PTR [ecx+0x14]
  43a9b3:	mov    edi,edi
  43a9b5:	in     eax,0xaa
  43a9b7:	pusha  
  43a9b8:	int3   
  43a9b9:	idiv   edi
  43a9bb:	xor    al,BYTE PTR [eax]
  43a9bd:	add    bh,bh
  43a9bf:	leave  
  43a9c0:	call   FWORD PTR [esp+esi*8]
  43a9c3:	mov    edi,edi
  43a9c5:	xlat   BYTE PTR ds:[ebx]
  43a9c6:	jbe    0x43a9b6
  43a9c8:	or     DWORD PTR [eax],0xffffffff
  43a9cb:	inc    edi
  43a9cc:	add    BYTE PTR [eax],al
  43a9ce:	add    BYTE PTR [ecx+0x483f00],dl
  43a9d4:	int3   
  43a9d5:	clc    
  43a9d6:	pop    ds
  43a9d7:	test   BYTE PTR [ebx-0xd0ff25],al
  43a9dd:	dec    DWORD PTR [ecx-0x6c2fff41]
  43a9e3:	(bad)  
  43a9e4:	push   DWORD PTR [esi+0x7cff21c8]
  43a9ea:	int3   
  43a9eb:	mov    dh,0x83
  43a9ed:	int3   
  43a9ee:	mov    esp,edi
  43a9f0:	push   DWORD PTR [edx-0x5100330b]
  43a9f6:	adc    bh,dl
  43a9f8:	int3   
  43a9f9:	cdq    
  43a9fa:	push   DWORD PTR [ebp+0x1089ff83]
  43aa00:	mov    DWORD PTR ds:0xf40000e6,ecx
  43aa06:	mov    ebp,0xff2b8910
  43aa0b:	int3   
  43aa0c:	add    BYTE PTR [eax],al
  43aa0e:	add    BYTE PTR [ebx-0x1ea234],bh
  43aa14:	add    ecx,0x14
  43aa17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aa18:	cmp    DWORD PTR [ebx],0x0
  43aa1b:	push   ebp
  43aa1c:	mov    edi,edi
  43aa1e:	jmp    DWORD PTR [edi]
  43aa20:	call   FWORD PTR [esi]
  43aa22:	xor    al,0xff
  43aa24:	int3   
  43aa25:	adc    esp,0xff45ff18
  43aa2b:	inc    DWORD PTR ds:[eax]
  43aa2e:	call   DWORD PTR [eax-0x77]
  43aa31:	(bad)  
  43aa32:	repz or DWORD PTR [ecx+0x6af03e],0xffffffe2
  43aa3a:	cmp    DWORD PTR [edi+edi*8-0x33150100],0xffffffc7
  43aa42:	jne    0x43aa10
  43aa44:	call   FWORD PTR ds:0xdf001e0b
  43aa4a:	cmp    DWORD PTR [edi-0x5b00ff7d],0x0
  43aa51:	ror    DWORD PTR [edi-0x1],0xff
  43aa55:	pop    ds
  43aa56:	test   eax,0xff5a0029
  43aa5b:	cli    
  43aa5c:	dec    DWORD PTR [ecx-0x6c7c8b01]
  43aa62:	scas   eax,DWORD PTR es:[edi]
  43aa63:	inc    DWORD PTR [eax]
  43aa65:	shr    DWORD PTR [eax-0x332dff72],1
  43aa6b:	cmp    al,BYTE PTR [eax]
  43aa6d:	dec    esp
  43aa6f:	or     bh,bh
  43aa71:	cmp    BYTE PTR [eax],bh
  43aa73:	inc    DWORD PTR [eax]
  43aa75:	sub    dh,BYTE PTR [ecx+ebx*2+0x0]
  43aa79:	jmp    0x43aa7a
  43aa7b:	cld    
  43aa7c:	cmp    edi,0xffffff89
  43aa7f:	sbb    bh,bh
  43aa81:	push   ebx
  43aa82:	mov    ebx,0x50d83ff
  43aa87:	(bad)  
  43aa89:	bound  eax,QWORD PTR [eax]
  43aa8b:	dec    eax
  43aa8c:	add    DWORD PTR [ebx-0x53001400],0xffffffd3
  43aa93:	add    BYTE PTR [eax],al
  43aa95:	mov    edi,0xa200341b
  43aa9a:	dec    edi
  43aa9c:	inc    DWORD PTR [eax]
  43aa9e:	(bad)  
  43aa9f:	mov    edx,0x83341400
  43aaa4:	jmp    FWORD PTR [edx-0x1f]
  43aaa7:	jmp    0xff83:0x1e009783
  43aaae:	jmp    DWORD PTR [edx-0x400b01]
  43aab4:	cmp    DWORD PTR [esi],0xffffff8c
  43aab7:	and    edi,edi
  43aab9:	push   edi
  43aaba:	add    BYTE PTR [esi+0x0],ch
  43aabd:	inc    DWORD PTR [eax]
  43aabf:	lods   eax,DWORD PTR ds:[esi]
  43aac0:	dec    DWORD PTR [eax-0x20]
  43aac3:	mov    DWORD PTR [eax],eax
  43aac5:	enter  0x2bab,0xff
  43aac9:	inc    ecx
  43aaca:	sub    DWORD PTR [ecx],0xffffffff
  43aacd:	inc    DWORD PTR [ebx-0x52f10005]
  43aad3:	add    bh,bh
  43aad5:	pop    ebx
  43aad6:	call   0x841c2eca
  43aadb:	push   ds
  43aadc:	add    bh,bh
  43aade:	int3   
  43aadf:	dec    ecx
  43aae0:	xor    DWORD PTR [esp+edx*8-0x7d],0xffffffff
  43aae5:	mov    al,0xb8
  43aae7:	test   BYTE PTR [eax],al
  43aae9:	scas   al,BYTE PTR es:[edi]
  43aaea:	add    BYTE PTR [ebx+0x30ccccff],al
  43aaf0:	(bad)  
  43aaf1:	cld    
  43aaf2:	ja     0x43aaf3
  43aaf4:	(bad)  
  43aaf5:	std    
  43aaf6:	(bad)  
  43aaf7:	mov    bl,0x89
  43aaf9:	push   cs
  43aafa:	dec    DWORD PTR [edx+0x0]
  43aafd:	cmp    edi,0xffffffbf
  43ab00:	add    BYTE PTR [edi],al
  43ab02:	xor    edi,edi
  43ab04:	inc    DWORD PTR [esi]
  43ab06:	retf   0x26
  43ab09:	fwait
  43ab0a:	mov    DWORD PTR [edx+0x0],ecx
  43ab0d:	(bad)  
  43ab0e:	call   DWORD PTR [eax+eax*1-0xff582c]
  43ab15:	xor    ecx,0x74ffb8
  43ab1b:	aas    
  43ab1c:	add    bh,bh
  43ab1e:	(bad)  
  43ab1f:	cli    
  43ab20:	mov    DWORD PTR [eax],esp
  43ab22:	lahf   
  43ab23:	add    DWORD PTR [eax],0xffffffcd
  43ab26:	fsubr  DWORD PTR [edi-0x1]
  43ab29:	dec    edx
  43ab2a:	add    BYTE PTR [edx-0x1],al
  43ab2d:	add    ah,cl
  43ab2f:	call   0x5600:0x835d9c00
  43ab36:	cwde   
  43ab37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ab38:	adc    DWORD PTR [edx],0xffffffff
  43ab3b:	out    0x0,al
  43ab3d:	inc    DWORD PTR [eax]
  43ab3f:	test   bh,bh
  43ab41:	xchg   ebx,eax
  43ab42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ab43:	add    bh,bh
  43ab45:	dec    esi
  43ab46:	outs   dx,BYTE PTR ds:[esi]
  43ab47:	mov    ch,0xff
  43ab49:	cmc    
  43ab4a:	add    BYTE PTR [esi],dl
  43ab4c:	add    bh,bh
  43ab4e:	or     DWORD PTR [eax-0x7d],0x5d
  43ab52:	mov    eax,0xe8adffff
  43ab57:	push   ebp
  43ab58:	mov    DWORD PTR [ebx],ebp
  43ab5a:	call   esp
  43ab5c:	(bad)  
  43ab5d:	(bad)  
  43ab5e:	jmp    DWORD PTR [ebp-0x5f1c00]
  43ab64:	jmp    DWORD PTR [ebp-0x1676462f]
  43ab6a:	(bad)  
  43ab6b:	mov    ebp,0x2a8300ff
  43ab70:	add    al,dh
  43ab72:	enter  0xffcc,0xb7
  43ab76:	out    dx,eax
  43ab77:	jmp    0xffff:0x9f005dff
  43ab7e:	call   edx
  43ab80:	add    DWORD PTR [edi],0x26
  43ab83:	add    BYTE PTR [eax],al
  43ab85:	or     eax,0xff29ff1a
  43ab8b:	jmp    0x43ab10
  43ab8d:	add    bh,bh
  43ab8f:	fcos   
  43ab91:	and    BYTE PTR [esi],0x0
  43ab94:	add    edi,0x5
  43ab97:	jmp    0xa4436c9c
  43ab9c:	add    DWORD PTR [eax],0xffffffff
  43ab9f:	sub    edi,edi
  43aba1:	idiv   bl
  43aba3:	dec    DWORD PTR [ecx-0x8af5d1]
  43aba9:	mov    ebp,0x89ffb900
  43abae:	add    cl,dl
  43abb0:	(bad)  
  43abb1:	mov    esp,0x9900ff5c
  43abb6:	sahf   
  43abb7:	inc    BYTE PTR [eax]
  43abb9:	pop    es
  43abba:	sub    edi,0xffffffcc
  43abbd:	mov    DWORD PTR [ebx-0x2c6a7c12],eax
  43abc3:	(bad)  
  43abc4:	jmp    FWORD PTR ds:0x6c00ecf2
  43abca:	(bad)  
  43abcb:	jmp    0x79ff:0x47ff00ff
  43abd2:	lods   al,BYTE PTR ds:[esi]
  43abd3:	int3   
  43abd4:	cmp    DWORD PTR [edx-0x59ff8cb3],0x0
  43abdb:	ins    BYTE PTR es:[edi],dx
  43abdc:	add    bh,bh
  43abde:	add    BYTE PTR [edi+edi*8-0xe60],bh
  43abe5:	pop    esp
  43abe6:	xor    BYTE PTR [ebp+0x40ffad00],ch
  43abec:	mov    DWORD PTR [ebx-0x500e801],eax
  43abf2:	pop    edi
  43abf3:	inc    DWORD PTR [ebx-0xf6e208]
  43abf9:	ja     0x43abfa
  43abfb:	and    edi,edi
  43abfd:	(bad)  
  43abfe:	call   FWORD PTR [eax]
  43ac00:	call   DWORD PTR [ebx+0x61]
  43ac03:	inc    DWORD PTR [ebx+0xb29a36]
  43ac09:	pop    es
  43ac0a:	call   DWORD PTR [ebx-0x1]
  43ac0d:	inc    DWORD PTR [eax]
  43ac0f:	mov    ah,0xff
  43ac11:	dec    ebx
  43ac12:	mov    dh,0xff
  43ac14:	(bad)  
  43ac15:	mov    esp,0xd3ff1595
  43ac1a:	int3   
  43ac1b:	jmp    0x7437820
  43ac20:	int3   
  43ac21:	add    DWORD PTR [edx+0x0],eax
  43ac24:	jmp    FWORD PTR [edi-0x29]
  43ac27:	inc    esi
  43ac28:	add    BYTE PTR ds:0xfff700,cl
  43ac2e:	int3   
  43ac2f:	loop   0x43ac30
  43ac31:	arpl   bp,bp
  43ac33:	inc    DWORD PTR [eax]
  43ac35:	rol    BYTE PTR [ebx-0x1],cl
  43ac38:	(bad)  
  43ac39:	stc    
  43ac3a:	int3   
  43ac3b:	je     0x43ac3c
  43ac3d:	(bad)  
  43ac3e:	inc    DWORD PTR [ebp+0x0]
  43ac41:	cld    
  43ac42:	xor    edi,edi
  43ac44:	add    BYTE PTR [ecx-0x6],bl
  43ac47:	ins    BYTE PTR es:[edi],dx
  43ac48:	inc    DWORD PTR [esi+0xa2ff]
  43ac4e:	dec    DWORD PTR [eax+0x0]
  43ac51:	xchg   edx,eax
  43ac52:	sub    bh,bh
  43ac54:	inc    DWORD PTR [ebp+0x36890a92]
  43ac5a:	int3   
  43ac5b:	ret    
  43ac5c:	add    ah,cl
  43ac5e:	call   DWORD PTR [eax-0x33ff6101]
  43ac64:	inc    ebp
  43ac66:	(bad)  
  43ac67:	pusha  
  43ac68:	add    BYTE PTR [ebx+eax*4],bl
  43ac6b:	cli    
  43ac6c:	int3   
  43ac6d:	inc    DWORD PTR [eax]
  43ac6f:	mov    ds:0x833d2eff,al
  43ac74:	mov    ecx,ecx
  43ac76:	ret    
  43ac77:	fcos   
  43ac79:	inc    DWORD PTR [eax]
  43ac7b:	jle    0x43ac49
  43ac7d:	add    BYTE PTR [ebx+0xe4fff6a],al
  43ac83:	int3   
  43ac84:	mov    DWORD PTR [eax+0x4d],ebp
  43ac87:	xchg   edi,edi
  43ac89:	leave  
  43ac8a:	dec    DWORD PTR [edi]
  43ac8c:	add    BYTE PTR [ebx+0x2eff96ff],al
  43ac92:	or     al,BYTE PTR [eax]
  43ac94:	(bad)  
  43ac95:	cmp    DWORD PTR [esi],eax
  43ac97:	rol    DWORD PTR [eax],1
  43ac99:	fadd   QWORD PTR [ebx-0x7cff35]
  43ac9f:	lds    eax,FWORD PTR [eax]
  43aca1:	xor    DWORD PTR [ebx+0x5956ff83],esi
  43aca7:	add    eax,0x8fff0c83
  43acac:	add    DWORD PTR [eax],0xffffff89
  43acaf:	jmp    0x4b28b4
  43acb4:	add    BYTE PTR [eax+0x52ff967a],cl
  43acba:	add    ah,ah
  43acbc:	cmp    edi,0xffffff83
  43acbf:	push   ds
  43acc0:	call   FWORD PTR [ecx-0x57]
  43acc3:	add    bh,bh
  43acc5:	hlt    
  43acc6:	jl     0x43acc6
  43acc8:	add    BYTE PTR [ecx],dl
  43acca:	call   FWORD PTR [eax+eax*1+0x0]
  43acce:	jmp    FWORD PTR [ecx]
  43acd0:	dec    edi
  43acd2:	call   0xce9acd6
  43acd7:	xlat   BYTE PTR ds:[ebx]
  43acd8:	call   DWORD PTR [eax+eax*1]
  43acdb:	int3   
  43acdc:	(bad)  
  43acdd:	dec    esp
  43acdf:	xchg   ecx,eax
  43ace0:	add    BYTE PTR [esp+ebp*4-0x3a470100],dh
  43ace7:	les    eax,FWORD PTR [eax]
  43ace9:	xchg   BYTE PTR [eax],al
  43aceb:	sar    edi,1
  43aced:	(bad)  
  43acee:	dec    eax
  43acf0:	add    BYTE PTR [edx-0x22],bl
  43acf3:	add    bh,bh
  43acf5:	fisub  WORD PTR [eax+0x9aff6e]
  43acfb:	addr16 cmp edi,0xffffff83
  43acff:	pop    esi
  43ad00:	(bad)  
  43ad01:	jns    0x43ad2b
  43ad03:	(bad)  
  43ad04:	call   FWORD PTR [eax+0x3f]
  43ad07:	clc    
  43ad08:	inc    DWORD PTR [edx-0x3a34]
  43ad0e:	mov    DWORD PTR [eax],esp
  43ad10:	adc    DWORD PTR [esi-0x50ffff8f],0xffffffd8
  43ad17:	xchg   edi,eax
  43ad18:	add    BYTE PTR [ebx],ch
  43ad1a:	add    BYTE PTR [eax+0x0],ch
  43ad1d:	int3   
  43ad1e:	dec    DWORD PTR [ebp-0x73bc00]
  43ad24:	(bad)  
  43ad25:	in     al,dx
  43ad26:	dec    ebx
  43ad27:	jmp    0x3fc727b5
  43ad2c:	dec    DWORD PTR [ecx+0x1f83a4cc]
  43ad32:	call   0x26f7ad36
  43ad37:	dec    edi
  43ad38:	dec    ebx
  43ad3a:	int3   
  43ad3b:	aam    0x89
  43ad3d:	add    BYTE PTR [ecx+0x656a00ee],cl
  43ad43:	inc    DWORD PTR [eax]
  43ad45:	in     al,0x53
  43ad47:	sti    
  43ad48:	add    BYTE PTR [ecx],ch
  43ad4a:	(bad)  
  43ad4b:	fild   WORD PTR [eax]
  43ad4d:	or     esp,0x76
  43ad50:	add    BYTE PTR [ebp-0x510000b4],ah
  43ad56:	cmp    al,0x41
  43ad58:	inc    DWORD PTR [edi+edi*8-0x33fb]
  43ad5f:	js     0x43ad61
  43ad61:	test   eax,0x8500ffba
  43ad66:	std    
  43ad67:	gs add ebp,0x0
  43ad6b:	fcos   
  43ad6d:	cmp    edi,0xffffffa2
  43ad70:	add    BYTE PTR [edi],dl
  43ad72:	outs   dx,DWORD PTR ds:[esi]
  43ad73:	add    bh,bh
  43ad75:	sti    
  43ad76:	rcl    BYTE PTR [esi-0x7d],1
  43ad79:	test   al,0xff
  43ad7b:	jg     0x43ad7c
  43ad7d:	inc    DWORD PTR [eax]
  43ad7f:	fiadd  WORD PTR [ebx-0x7c33a45e]
  43ad85:	and    BYTE PTR [edi+0x78ffe0],dl
  43ad8b:	mov    ch,0xff
  43ad8d:	(bad)  
  43ad8e:	call   FWORD PTR [ebx-0x730900]
  43ad94:	jmp    DWORD PTR [esp+edi*4-0x1600e8]
  43ad9b:	jmp    0xaa89:0x7000ff83
  43ada2:	and    edi,edi
  43ada4:	(bad)  
  43ada5:	fistp  WORD PTR [eax+0x5a]
  43ada8:	inc    DWORD PTR [eax-0xff6700]
  43adae:	add    dl,ch
  43adb0:	add    BYTE PTR [esi],bl
  43adb2:	inc    edi
  43adb3:	inc    DWORD PTR [eax]
  43adb5:	or     esi,DWORD PTR [ebx]
  43adb7:	retf   
  43adb8:	(bad)  
  43adb9:	aas    
  43adba:	add    BYTE PTR [edi-0x7cff0100],bh
  43adc0:	add    cl,dh
  43adc2:	in     al,0x0
  43adc4:	inc    DWORD PTR [edi+0x78ff34a1]
  43adca:	call   FWORD PTR [ecx-0x1]
  43adcd:	or     esp,0xffffff99
  43add0:	push   DWORD PTR [ecx]
  43add2:	out    dx,eax
  43add3:	(bad)  
  43add4:	(bad)  
  43add5:	mov    esi,0xafffac2c
  43adda:	add    dl,al
  43addc:	inc    DWORD PTR [ebx+0x4e00a8cc]
  43ade2:	popa   
  43ade3:	add    BYTE PTR [eax],al
  43ade5:	rol    DWORD PTR [ebp+eiz*2-0x1],cl
  43ade9:	repnz (bad) 
  43adeb:	ds add bh,bh
  43adee:	add    BYTE PTR [ecx+0x0],dh
  43adf1:	call   0xaf43acf8
  43adf6:	dec    BYTE PTR [edx]
  43adf8:	add    BYTE PTR [ecx-0x7c76e701],dl
  43adfe:	dec    DWORD PTR [eax]
  43ae00:	add    BYTE PTR [ebp+0x1fffffc1],ch
  43ae06:	pop    es
  43ae07:	xor    al,0xff
  43ae09:	jnp    0x43ae0b
  43ae0b:	ins    DWORD PTR es:[edi],dx
  43ae0c:	mov    edi,edi
  43ae0e:	int3   
  43ae0f:	push   cs
  43ae10:	add    BYTE PTR [eax],bl
  43ae12:	jne    0x43ad97
  43ae14:	jmp    ebp
  43ae16:	stc    
  43ae17:	xor    bh,bh
  43ae19:	and    al,BYTE PTR [eax]
  43ae1b:	add    eax,0x4cccff00
  43ae20:	call   FWORD PTR [esi-0x2976ffe0]
  43ae26:	pop    es
  43ae27:	inc    edx
  43ae28:	or     DWORD PTR [edi-0xd601],0xffffff83
  43ae2f:	jmp    DWORD PTR ds:0xff3a
  43ae34:	add    BYTE PTR [ecx],dh
  43ae36:	pop    edi
  43ae37:	xchg   ebx,eax
  43ae38:	jmp    DWORD PTR [edx+0xff2b83]
  43ae3e:	inc    DWORD PTR [eax+0x39dcff]
  43ae44:	add    BYTE PTR [eax+esi*8],ch
  43ae47:	push   0x34837900
  43ae4c:	inc    DWORD PTR [ebx+0x2a005100]
  43ae52:	sub    ecx,DWORD PTR [ecx+0x4e4a15ff]
  43ae58:	call   FWORD PTR [ebx-0x7d]
  43ae5b:	inc    ebp
  43ae5c:	cmp    edi,0xffffffff
  43ae5f:	sub    bh,bh
  43ae61:	ins    DWORD PTR es:[edi],dx
  43ae62:	retf   0x83ff
  43ae65:	mov    bl,0x9c
  43ae67:	add    BYTE PTR [eax],0xaf
  43ae6a:	jmp    DWORD PTR [edi-0x42010000]
  43ae70:	int3   
  43ae71:	pop    edx
  43ae72:	nop
  43ae73:	add    bh,bh
  43ae75:	leave  
  43ae76:	pop    esp
  43ae77:	lock add BYTE PTR [ecx-0xfe01],ah
  43ae7e:	jmp    ebp
  43ae80:	add    BYTE PTR [ebx+0x49ff83ae],bl
  43ae86:	dec    ebx
  43ae87:	(bad)  
  43ae88:	jmp    FWORD PTR [ecx+0xffed83]
  43ae8e:	sub    DWORD PTR [ebp+0xbee400],0x0
  43ae95:	xchg   ebx,eax
  43ae96:	xor    bh,BYTE PTR [edx+0x0]
  43ae99:	jmp    0xed83:0x83832bff
  43aea0:	sub    DWORD PTR [esp+esi*1+0x5e588300],0x34
  43aea8:	call   FWORD PTR [edi]
  43aeaa:	dec    DWORD PTR [edx-0x7d]
  43aead:	inc    DWORD PTR [ebx+0x128f00a7]
  43aeb3:	inc    DWORD PTR [ebx-0x33912e55]
  43aeb9:	sahf   
  43aeba:	int3   
  43aebb:	les    eax,FWORD PTR [eax]
  43aebd:	add    DWORD PTR [ebx-0x461c003c],0xffffffcc
  43aec4:	int3   
  43aec5:	xor    ebp,0xffffff94
  43aec8:	inc    DWORD PTR [ebx]
  43aeca:	add    BYTE PTR [ebx],bh
  43aecc:	mov    edi,edi
  43aece:	adc    DWORD PTR [edi+0x0],0xffffffb7
  43aed2:	inc    DWORD PTR cs:[eax]
  43aed5:	rol    BYTE PTR [ecx+edx*1-0x1],cl
  43aed9:	rol    BYTE PTR [eax],1
  43aedb:	leave  
  43aedc:	add    bh,bh
  43aede:	xor    DWORD PTR [ecx-0x1],0xffffffb8
  43aee2:	jo     0x43aeb0
  43aee4:	int3   
  43aee5:	stc    
  43aee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aee7:	add    eax,DWORD PTR [eax]
  43aee9:	mov    cl,0x83
  43aeeb:	xor    DWORD PTR [eax],eax
  43aeed:	inc    DWORD PTR [ebx-0x7684ffdd]
  43aef3:	inc    DWORD PTR [eax]
  43aef5:	mov    cl,0x75
  43aef7:	mov    edi,edi
  43aef9:	cli    
  43aefa:	(bad)  
  43aefb:	call   0x4c43aeff
  43af00:	dec    DWORD PTR [eax]
  43af02:	int    0x83
  43af04:	xor    DWORD PTR [eax],0xffffffac
  43af07:	jg     0x43af09
  43af09:	pop    esi
  43af0a:	or     DWORD PTR [ebx],0x0
  43af0d:	cmp    edi,0xfffffff4
  43af10:	int3   
  43af11:	xchg   esi,eax
  43af12:	stos   BYTE PTR es:[edi],al
  43af13:	(bad)  
  43af14:	dec    DWORD PTR [esi]
  43af16:	mov    eax,ds:0xff7e008f
  43af1b:	jl     0x43af1c
  43af1d:	add    BYTE PTR [ecx+0x8c7ff5c],cl
  43af23:	(bad)  
  43af24:	inc    DWORD PTR [eax-0x4b]
  43af27:	in     eax,0xff
  43af29:	scas   eax,DWORD PTR es:[edi]
  43af2a:	push   DWORD PTR [edx]
  43af2c:	dec    DWORD PTR [ecx+0x53ff71ff]
  43af32:	sahf   
  43af33:	add    bh,bh
  43af35:	fimul  WORD PTR [ebp-0x45ff3b]
  43af3b:	fld    DWORD PTR [eax]
  43af3d:	(bad)  
  43af3e:	call   FWORD PTR [ecx-0x7c8cce01]
  43af44:	dec    DWORD PTR [ebx+0x7d00550c]
  43af4a:	and    DWORD PTR [esi],0xffffffff
  43af4d:	cmp    edi,0x6b
  43af50:	add    BYTE PTR [eax],cl
  43af52:	pop    ss
  43af53:	cmp    edi,0xfffffffa
  43af56:	mov    ?,WORD PTR [esi-0x1]
  43af59:	sbb    eax,DWORD PTR [eax]
  43af5b:	ret    
  43af5c:	add    bh,bh
  43af5e:	push   DWORD PTR [esi]
  43af60:	add    BYTE PTR [ebp-0x59ff7c23],bl
  43af66:	jns    0x43af8d
  43af68:	add    ch,bl
  43af6a:	(bad)  
  43af6b:	fdiv   st(7),st
  43af6d:	add    BYTE PTR [eax],al
  43af6f:	dec    ebx
  43af70:	int3   
  43af71:	or     al,0x49
  43af73:	add    bh,bh
  43af75:	in     al,dx
  43af76:	push   0xffffffb3
  43af78:	mov    esp,esp
  43af7a:	cmp    DWORD PTR [edi+edi*8-0x250100],0xffffffe9
  43af82:	push   ss
  43af83:	add    DWORD PTR [ebx-0xa64eae],0xfffffff2
  43af8a:	dec    DWORD PTR [eax-0x1]
  43af8d:	add    bh,bh
  43af8f:	outs   dx,DWORD PTR ds:[esi]
  43af90:	add    bh,cl
  43af92:	adc    BYTE PTR [eax],al
  43af94:	mov    DWORD PTR [ebp-0x3400071f],ebx
  43af9a:	jmp    FWORD PTR [edi]
  43af9c:	(bad)  
  43af9d:	inc    DWORD PTR [eax]
  43af9f:	adc    edi,edi
  43afa1:	add    ah,ch
  43afa3:	add    DWORD PTR [eax],0x2a
  43afa6:	ins    BYTE PTR es:[edi],dx
  43afa7:	xor    bh,bh
  43afa9:	mov    ebx,0xff0053ff
  43afae:	call   esi
  43afb0:	inc    esi
  43afb2:	retf   0x8300
  43afb5:	inc    edi
  43afb6:	data16 int 0x83
  43afb9:	push   es
  43afba:	(bad)  
  43afbb:	jmp    0x43afbd
  43afbd:	mov    edi,edi
  43afbf:	sub    edi,edi
  43afc1:	ja     0x43afad
  43afc3:	(bad)  
  43afc4:	inc    DWORD PTR [esi+0x6200485e]
  43afca:	int3   
  43afcb:	push   0xe28300ff
  43afd0:	add    BYTE PTR [eax+eiz*2],al
  43afd3:	(bad)  
  43afd4:	(bad)  
  43afd5:	mov    ebx,0xa683544b
  43afda:	add    BYTE PTR [ecx],ah
  43afdc:	mov    edi,edi
  43afde:	dec    DWORD PTR [eax+eax*1+0x6c]
  43afe2:	cmp    ah,cl
  43afe4:	xor    DWORD PTR [esi-0x58339322],0xffffffff
  43afeb:	xchg   BYTE PTR [eax],al
  43afed:	add    BYTE PTR [eax],al
  43afef:	adc    eax,DWORD PTR [eax]
  43aff1:	or     BYTE PTR [edi-0x504c0001],al
  43aff7:	cwde   
  43aff8:	push   ebp
  43affa:	call   DWORD PTR [edi-0x7d000001]
  43b000:	inc    ebx
  43b002:	inc    DWORD PTR [bx+si]
  43b005:	pop    ds
  43b006:	push   ebp
  43b007:	add    BYTE PTR [eax],0x3c
  43b00a:	call   DWORD PTR [esi-0x1]
  43b00d:	add    bh,bh
  43b00f:	push   cs
  43b010:	add    dl,ah
  43b012:	repnz cmp edi,0xffffffa2
  43b016:	sub    dl,BYTE PTR [eax-0x1]
  43b019:	iret   
  43b01a:	add    BYTE PTR [edi],dl
  43b01c:	(bad)  
  43b01d:	dec    DWORD PTR [ecx+0x3ab4832f]
  43b023:	int3   
  43b024:	dec    edx
  43b026:	rcr    BYTE PTR [esi-0x1733f434],cl
  43b02c:	(bad)  
  43b02d:	inc    DWORD PTR [eax]
  43b02f:	test   edi,edi
  43b031:	aam    0x63
  43b033:	add    bh,bh
  43b035:	daa    
  43b036:	xor    cl,BYTE PTR [esi-0x1]
  43b039:	das    
  43b03a:	sub    esi,0xffffffff
  43b03d:	dec    esp
  43b03f:	ja     0x43afc4
  43b041:	cmp    DWORD PTR [ebx-0x1],eax
  43b044:	call   FWORD PTR [eax+0x47ffb9f6]
  43b04a:	(bad)  
  43b04b:	fisttp DWORD PTR [ecx+0xfc0083]
  43b051:	test   BYTE PTR [ecx],dh
  43b053:	(bad)  
  43b054:	call   FWORD PTR [ebp+0x3a]
  43b057:	mov    esp,0xdc00caff
  43b05c:	inc    DWORD PTR [eax]
  43b05e:	add    ah,bl
  43b060:	mov    DWORD PTR [ebp+0x37],ebp
  43b063:	inc    DWORD PTR [eax]
  43b065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b066:	dec    esi
  43b067:	mov    ecx,0xcf004789
  43b06c:	add    BYTE PTR [eax],al
  43b06e:	push   DWORD PTR [esp+ecx*8]
  43b071:	xor    al,0x84
  43b073:	int3   
  43b074:	mov    DWORD PTR [edx-0x47],edi
  43b077:	imul   eax,DWORD PTR [eax],0xfc8346
  43b07d:	(bad)  
  43b07e:	call   FWORD PTR [ebp-0x75d001]
  43b084:	sub    DWORD PTR ds:0xe7ff4de6,0xffffffff
  43b08b:	xor    BYTE PTR [eax],al
  43b08d:	add    BYTE PTR [eax],al
  43b08f:	cmp    edi,edi
  43b091:	jmp    FWORD PTR [ebx+0x0]
  43b094:	jmp    FWORD PTR [edi]
  43b096:	imul   ecx,DWORD PTR ds:0x34ff13ff,0xffffffcc
  43b09d:	inc    DWORD PTR [ebx-0x2a12ff71]
  43b0a3:	inc    DWORD PTR [eax]
  43b0a5:	mov    eax,0x52838aa4
  43b0aa:	call   FWORD PTR [eax]
  43b0ac:	add    bh,bh
  43b0ae:	mov    DWORD PTR [esi-0x1],edi
  43b0b1:	loop   0x43b0f3
  43b0b3:	mov    DWORD PTR [eax],eax
  43b0b5:	sbb    edi,DWORD PTR [edx-0x10]
  43b0b8:	add    DWORD PTR [ebp+0x0],0xffffffe4
  43b0bc:	inc    DWORD PTR [eax]
  43b0be:	dec    DWORD PTR [edi-0x7d]
  43b0c1:	outs   dx,BYTE PTR ds:[esi]
  43b0c2:	add    BYTE PTR [ebx-0x13df5c34],al
  43b0c8:	add    ah,ch
  43b0ca:	push   DWORD PTR [ebx-0x687c0001]
  43b0d0:	jmp    FWORD PTR [esp+eiz*2]
  43b0d3:	cmp    edi,0x56
  43b0d6:	in     al,dx
  43b0d7:	push   ebx
  43b0d8:	mov    DWORD PTR [ebx-0x1],ebp
  43b0db:	xchg   esp,eax
  43b0dc:	cmp    edi,0xffffffff
  43b0df:	cmp    edi,edi
  43b0e1:	outs   dx,DWORD PTR ds:[esi]
  43b0e2:	mov    eax,ds:0x2adc0000
  43b0e7:	out    dx,al
  43b0e8:	(bad)  
  43b0e9:	fiadd  DWORD PTR [ebx+0x8383b2]
  43b0ef:	loop   0x43b0f0
  43b0f1:	sbb    ah,al
  43b0f3:	add    BYTE PTR [eax],al
  43b0f5:	clc    
  43b0f6:	sbb    BYTE PTR [ebp-0x1],cl
  43b0f9:	xor    bh,bh
  43b0fb:	mov    edi,0x4bff00ff
  43b100:	inc    DWORD PTR [edi-0xf007cda]
  43b106:	jbe    0x43b0f9
  43b108:	jmp    esp
  43b10a:	add    BYTE PTR [ebx-0x34],dl
  43b10d:	add    bh,bh
  43b10f:	jns    0xff44255e
  43b115:	sub    BYTE PTR [edx+eiz*2],ch
  43b118:	cmp    DWORD PTR [eax+0x8905ff],0xffffffff
  43b11f:	push   0xffffffff
  43b121:	add    cl,BYTE PTR [eax]
  43b123:	mov    DWORD PTR [ebx-0x7c2f32cd],eax
  43b129:	jo     0x43b0f7
  43b12b:	ss int3 
  43b12d:	inc    DWORD PTR [eax]
  43b12f:	mov    WORD PTR [eax],es
  43b131:	outs   dx,DWORD PTR ds:[esi]
  43b132:	add    DWORD PTR [eax],0xffffff83
  43b135:	scas   al,BYTE PTR es:[edi]
  43b136:	sbb    eax,0xff6300e8
  43b13b:	mov    WORD PTR [eax],es
  43b13d:	add    BYTE PTR [eax],al
  43b13f:	add    al,0xff
  43b141:	jmp    DWORD PTR [edi-0x16160000]
  43b147:	pushf  
  43b148:	dec    DWORD PTR [edx]
  43b14a:	dec    DWORD PTR [esi]
  43b14c:	add    BYTE PTR [ecx+0x5cffc0ff],cl
  43b152:	add    edi,edi
  43b154:	call   FWORD PTR [ebx+0x37]
  43b157:	or     al,BYTE PTR [eax]
  43b159:	loopne 0x43b15a
  43b15b:	xchg   bh,bh
  43b15d:	add    bh,bh
  43b15f:	rol    DWORD PTR [eax],0xc2
  43b162:	repz add DWORD PTR [eax],0xffffff94
  43b166:	and    BYTE PTR [ebx-0x1],al
  43b169:	xchg   edx,eax
  43b16a:	int3   
  43b16b:	and    eax,0x17ffff00
  43b170:	add    BYTE PTR [ecx],dl
  43b172:	leave  
  43b173:	add    bh,bh
  43b175:	not    DWORD PTR [esi]
  43b177:	idiv   edi
  43b179:	aas    
  43b17a:	add    BYTE PTR [edx+0x0],dl
  43b17d:	cmp    edi,0xfffffff9
  43b180:	call   ebp
  43b182:	fcos   
  43b184:	jmp    FWORD PTR [eax-0x60007d84]
  43b18a:	dec    esi
  43b18c:	add    BYTE PTR [eax],al
  43b18e:	add    BYTE PTR [edi+0xa40183],al
  43b194:	add    ah,bl
  43b196:	pop    esi
  43b197:	mov    al,ds:0xbb00a3cc
  43b19c:	inc    DWORD PTR [ebx+0x1e0003ff]
  43b1a2:	and    al,0xff
  43b1a4:	jmp    FWORD PTR [eax]
  43b1a6:	push   esi
  43b1a7:	pop    eax
  43b1a8:	add    dl,ch
  43b1aa:	inc    edx
  43b1ac:	add    DWORD PTR [ebx-0x71ff6a00],0xffffffed
  43b1b3:	add    BYTE PTR [eax],al
  43b1b5:	add    bl,dl
  43b1b7:	ror    ah,1
  43b1b9:	pop    esi
  43b1ba:	dec    ecx
  43b1bc:	add    DWORD PTR [ebx-0x2a00d534],0xffffff85
  43b1c3:	add    bh,bh
  43b1c5:	pushf  
  43b1c6:	mov    esp,0xff15002f
  43b1cb:	jl     0x43b1cc
  43b1cd:	inc    DWORD PTR [eax]
  43b1cf:	pusha  
  43b1d0:	call   DWORD PTR [ecx+ebx*2]
  43b1d3:	int3   
  43b1d4:	add    al,bh
  43b1d6:	push   ebp
  43b1d7:	mov    edx,0x6cff4000
  43b1dc:	mov    edi,edi
  43b1de:	and    DWORD PTR [ecx-0xe9c934],0xffffffff
  43b1e5:	aad    0xb6
  43b1e7:	cmp    bh,0x6e
  43b1ea:	cmp    DWORD PTR [eax+0x77ccffff],0xffffffcc
  43b1f1:	xor    esi,DWORD PTR [edi+edi*8+0x6b5625ff]
  43b1f8:	int3   
  43b1f9:	data16 add BYTE PTR [ecx-0x7d],bh
  43b1fd:	inc    DWORD PTR [eax]
  43b1ff:	inc    ecx
  43b200:	jmp    FWORD PTR [eax]
  43b202:	xchg   bh,bh
  43b204:	inc    esi
  43b206:	cmc    
  43b207:	push   esi
  43b208:	add    DWORD PTR [eax+eax*1],0x20
  43b20c:	inc    DWORD PTR [eax]
  43b20e:	mov    DWORD PTR [edi+edi*8],esp
  43b211:	fucom  st(0)
  43b213:	cmp    edi,0xffffffe7
  43b216:	cmp    DWORD PTR [ebx+0x56cc0dff],edi
  43b21c:	(bad)  
  43b21d:	inc    DWORD PTR [ebx-0x4cf800de]
  43b223:	(bad)  
  43b224:	push   DWORD PTR [eax]
  43b226:	pop    ds
  43b227:	mov    bh,0xff
  43b229:	mov    al,ds:0x89ff26ff
  43b22e:	xor    DWORD PTR [edx],0x0
  43b231:	fwait
  43b232:	in     eax,0xff
  43b234:	dec    esi
  43b236:	lods   al,BYTE PTR ds:[esi]
  43b237:	add    al,0xff
  43b239:	(bad)  
  43b23a:	inc    DWORD PTR [ebx-0x1]
  43b23d:	(bad)  
  43b23e:	call   FWORD PTR [ecx-0x1]
  43b241:	lods   eax,DWORD PTR ds:[esi]
  43b242:	push   es
  43b243:	dec    esp
  43b245:	mov    al,ds:0xcc83cb52
  43b24a:	call   FWORD PTR [esi-0x1]
  43b24d:	int3   
  43b24e:	cmp    ecx,0xffffff83
  43b251:	sbb    ebp,DWORD PTR [ecx]
  43b253:	add    DWORD PTR [eax],0xffffffd2
  43b256:	xchg   edi,eax
  43b257:	mov    eax,ds:0xbfff76ff
  43b25c:	add    bh,bh
  43b25e:	(bad)  
  43b25f:	mov    eax,0xff4bb6cc
  43b264:	jmp    DWORD PTR [ebx]
  43b266:	sub    bh,BYTE PTR [ebp-0x1]
  43b269:	mov    ah,0xcc
  43b26b:	jp     0x43b26c
  43b26d:	int3   
  43b26e:	mov    ebx,ebx
  43b270:	call   DWORD PTR [edx-0x25ffff7d]
  43b276:	adc    al,BYTE PTR [eax+eax*1-0x207cb5]
  43b27d:	int3   
  43b27e:	add    BYTE PTR [ebx+0xf3deff],ch
  43b284:	call   DWORD PTR [ecx]
  43b286:	xchg   edx,eax
  43b287:	dec    ecx
  43b288:	push   DWORD PTR [eax]
  43b28a:	add    BYTE PTR [eax-0x34],ch
  43b28d:	add    BYTE PTR [ebx-0x1d3a0050],al
  43b293:	add    bh,bh
  43b295:	add    BYTE PTR [edx+edi*1-0x6200ac00],cl
  43b29c:	int3   
  43b29d:	add    BYTE PTR [ecx+0x5ec4ff66],cl
  43b2a3:	add    bh,bh
  43b2a5:	sub    DWORD PTR [ebp+0x7d],esi
  43b2a8:	adc    ebp,0xffffffcc
  43b2ab:	or     al,0xff
  43b2ad:	add    BYTE PTR [eax],al
  43b2af:	cmp    eax,0x5c4600
  43b2b4:	(bad)  
  43b2b5:	(bad)  [esi+0x35]
  43b2b8:	add    BYTE PTR [ebp-0x1],ah
  43b2bb:	jl     0x43b2bc
  43b2bd:	mov    esp,ecx
  43b2bf:	add    edi,edi
  43b2c1:	lahf   
  43b2c2:	test   edi,edi
  43b2c4:	jmp    edi
  43b2c6:	icebp  
  43b2c7:	xor    ecx,esp
  43b2c9:	rol    DWORD PTR [eax],1
  43b2cb:	fadd   DWORD PTR [ebx-0xe27d00]
  43b2d1:	fild   QWORD PTR ds:0x6b04ff83
  43b2d7:	daa    
  43b2d8:	sub    DWORD PTR [eax],0xffffffff
  43b2db:	jo     0x43b266
  43b2dd:	inc    DWORD PTR [ebx+0x140ff16]
  43b2e3:	mov    esp,ecx
  43b2e5:	mov    ds:0x7ffa1d3,eax
  43b2ea:	add    BYTE PTR [ebx+0x63ff89ff],bh
  43b2f0:	add    BYTE PTR [edi],dl
  43b2f2:	add    DWORD PTR [ecx-0x73108f77],ecx
  43b2f8:	push   DWORD PTR [ecx]
  43b2fa:	dec    DWORD PTR [esi]
  43b2fc:	add    bh,bh
  43b2fe:	add    BYTE PTR [ecx-0x34],bl
  43b301:	ret    
  43b302:	je     0x43b303
  43b304:	int3   
  43b305:	push   edx
  43b306:	into   
  43b307:	sbb    bh,bh
  43b309:	add    BYTE PTR gs:[eax+0x0],ah
  43b30d:	add    DWORD PTR [eax],0x3c
  43b310:	mov    DWORD PTR [ebp+0x67],edi
  43b313:	inc    DWORD PTR [eax]
  43b315:	sub    al,0x7a
  43b317:	inc    esp
  43b318:	add    BYTE PTR [edi-0x1],ch
  43b31b:	inc    esi
  43b31c:	(bad)  
  43b31d:	dec    DWORD PTR [ecx+0x15a50054]
  43b323:	(bad)  
  43b324:	dec    DWORD PTR [esi-0x16]
  43b327:	pop    edx
  43b328:	adc    DWORD PTR [ebx-0x1],0x31
  43b32c:	(bad)  
  43b32d:	dec    esp
  43b32f:	lock add DWORD PTR [eax-0x2a00ff38],0x5e
  43b337:	test   BYTE PTR [ebx-0x33bf0036],0xff
  43b33e:	int3   
  43b33f:	dec    esi
  43b340:	(bad)  
  43b341:	js     0x43b345
  43b343:	(bad)  
  43b344:	call   FWORD PTR [ebp+ecx*1-0x52]
  43b348:	sub    DWORD PTR [edx],0x0
  43b34b:	jb     0x43b2d6
  43b34d:	inc    DWORD PTR [eax]
  43b34f:	ja     0x43b350
  43b351:	retf   
  43b352:	push   edi
  43b353:	add    BYTE PTR [eax],al
  43b355:	ror    BYTE PTR [ebp-0xc3765c],1
  43b35b:	fdivr  st,st(7)
  43b35d:	add    bh,bh
  43b35f:	retf   0xe2ff
  43b362:	add    eax,0x5a04ffff
  43b367:	into   
  43b368:	call   FWORD PTR [edi-0x2201]
  43b36e:	int3   
  43b36f:	or     eax,DWORD PTR [eax]
  43b371:	cmp    al,0x2a
  43b373:	(bad)  
  43b374:	jmp    DWORD PTR [esi-0x6c002490]
  43b37a:	call   ecx
  43b37c:	add    BYTE PTR [eax],al
  43b37e:	mov    DWORD PTR ds:0xff581700,eax
  43b384:	jmp    edx
  43b386:	pop    eax
  43b387:	and    al,0x89
  43b389:	xor    eax,0xffff5800
  43b38e:	inc    ebp
  43b390:	add    BYTE PTR [ebx-0x34000068],ch
  43b396:	add    cl,BYTE PTR [ecx]
  43b398:	and    DWORD PTR [edx],0x0
  43b39b:	lock (bad) 
  43b39d:	inc    DWORD PTR [eax]
  43b39f:	add    DWORD PTR [eax],0xffffffac
  43b3a2:	push   ecx
  43b3a3:	add    ah,cl
  43b3a5:	jno    0x43b41b
  43b3a7:	add    edi,edi
  43b3a9:	push   edx
  43b3aa:	int3   
  43b3ab:	or     eax,0x2c000000
  43b3b0:	push   DWORD PTR [edx+0x7e]
  43b3b3:	add    bh,bh
  43b3b5:	xor    ebp,esi
  43b3b7:	(bad)  
  43b3b8:	jmp    DWORD PTR [esi]
  43b3ba:	add    al,bh
  43b3bc:	add    BYTE PTR [eax],al
  43b3be:	add    BYTE PTR [edi+0x0],dl
  43b3c1:	sub    ecx,DWORD PTR [ebx+0xa43ff00]
  43b3c7:	xor    BYTE PTR [ecx+0xb400a0],cl
  43b3cd:	add    BYTE PTR [eax],al
  43b3cf:	inc    eax
  43b3d0:	int3   
  43b3d1:	xlat   BYTE PTR ds:[ebx]
  43b3d2:	jns    0x43b3d4
  43b3d4:	add    BYTE PTR [esi+0x7e890c2c],al
  43b3da:	call   FWORD PTR ds:0x8500ff00
  43b3e0:	(bad)  
  43b3e1:	(bad)  
  43b3e2:	xchg   edi,eax
  43b3e3:	add    BYTE PTR [eax],al
  43b3e5:	add    ah,dh
  43b3e7:	cmp    edi,edi
  43b3e9:	sar    edi,cl
  43b3eb:	adc    edi,edi
  43b3ed:	add    BYTE PTR [ebx-0xbfc0076],al
  43b3f3:	(bad)  
  43b3f4:	inc    DWORD PTR [ecx]
  43b3f6:	pop    eax
  43b3f7:	mov    ds:0xd896fff,al
  43b3fc:	(bad)  
  43b3fd:	inc    DWORD PTR [eax]
  43b3ff:	mov    ds:0xff1022ff,al
  43b404:	mov    DWORD PTR [edi+0x39ff98a1],edx
  43b40a:	dec    DWORD PTR [edi-0x77]
  43b40d:	(bad)  
  43b40e:	dec    eax
  43b410:	add    BYTE PTR [ecx+0x27],dh
  43b413:	cmp    edi,0x61
  43b416:	push   cs
  43b417:	jl     0x43b3e5
  43b419:	push   ds
  43b41a:	sub    DWORD PTR [eax-0x77],0x0
  43b41e:	int3   
  43b41f:	in     al,0xff
  43b421:	in     eax,dx
  43b422:	mov    edx,0x506189ff
  43b427:	loope  0x43b3ac
  43b429:	fdiv   st(7),st
  43b42b:	jo     0x43b42d
  43b42d:	(bad)  
  43b42e:	call   DWORD PTR [ebx+eax*4-0x48]
  43b432:	sbb    al,BYTE PTR [eax]
  43b434:	sbb    DWORD PTR [edx-0x35],0x63
  43b438:	add    DWORD PTR [ebx],0xffffffff
  43b43b:	adc    bh,bh
  43b43d:	add    bh,bh
  43b43f:	pop    edi
  43b440:	adc    edx,0x15
  43b443:	(bad)  
  43b444:	(bad)  
  43b445:	dec    bl
  43b447:	add    al,0x0
  43b449:	cmp    bh,0x36
  43b44c:	add    ah,cl
  43b44e:	dec    DWORD PTR [edi-0x337a9c7d]
  43b454:	call   esi
  43b456:	or     al,0x9e
  43b458:	int3   
  43b459:	xor    eax,0xff0006ff
  43b45e:	jmp    FWORD PTR [edi+edi*8-0xff6143]
  43b465:	xchg   ebx,eax
  43b466:	mov    ah,0x4a
  43b468:	jmp    FWORD PTR [eax]
  43b46a:	inc    DWORD PTR [ebp+0xcffff00]
  43b470:	add    BYTE PTR [ecx-0x61],dl
  43b473:	add    BYTE PTR [eax],al
  43b475:	or     bl,BYTE PTR [ecx]
  43b477:	je     0x43b478
  43b479:	push   edx
  43b47a:	sub    DWORD PTR [edi],0xffffffff
  43b47d:	add    bh,bh
  43b47f:	adc    al,BYTE PTR [ebx+0xff83e5]
  43b485:	neg    BYTE PTR [edx]
  43b487:	lock add BYTE PTR [eax-0x7d],al
  43b48b:	fs (bad) 
  43b48d:	dec    esp
  43b48f:	cmc    
  43b490:	add    cl,bl
  43b492:	pop    esp
  43b493:	add    bh,bh
  43b495:	and    dl,BYTE PTR [edx]
  43b497:	mov    ebx,0x97ffb383
  43b49c:	add    BYTE PTR [eax],al
  43b49e:	jmp    DWORD PTR [edx]
  43b4a0:	int3   
  43b4a1:	mov    al,ds:0x3ff00c1
  43b4a6:	mov    eax,0x8f83ac
  43b4ab:	mov    esi,0x5e00ff83
  43b4b0:	(bad)  
  43b4b1:	mov    edx,0x1e00ccb2
  43b4b6:	outs   dx,BYTE PTR ds:[esi]
  43b4b7:	in     al,0xff
  43b4b9:	inc    edi
  43b4ba:	(bad)  
  43b4bb:	jmp    0xdd00:0x87000000
  43b4c2:	xor    eax,0x24caffff
  43b4c7:	pop    ecx
  43b4c8:	add    dl,ch
  43b4ca:	call   FWORD PTR [esi]
  43b4cc:	inc    DWORD PTR [eax]
  43b4ce:	call   FWORD PTR [edx-0x34]
  43b4d1:	push   esp
  43b4d2:	mov    esi,0x545300ff
  43b4d7:	out    0xff,al
  43b4d9:	sub    al,BYTE PTR [eax]
  43b4db:	dec    ecx
  43b4dc:	int3   
  43b4dd:	inc    DWORD PTR [eax]
  43b4df:	sar    edi,cl
  43b4e1:	jle    0x43b499
  43b4e3:	dec    DWORD PTR [ecx+0xcf1186]
  43b4e9:	in     al,0x0
  43b4eb:	icebp  
  43b4ec:	add    ah,cl
  43b4ee:	add    BYTE PTR [eax],cl
  43b4f0:	add    cl,bl
  43b4f2:	daa    
  43b4f3:	add    bh,bh
  43b4f5:	cli    
  43b4f6:	aam    0xbf
  43b4f8:	(bad)  
  43b4f9:	stc    
  43b4fa:	adc    DWORD PTR [ebx],0xffffffff
  43b4fd:	dec    esp
  43b4ff:	or     DWORD PTR [eax],eax
  43b501:	xchg   ebp,eax
  43b502:	ret    0xffff
  43b505:	(bad)  [esi+0x34cc84]
  43b50b:	test   DWORD PTR [eax],eax
  43b50d:	inc    DWORD PTR [ebx-0x4cc0fff0]
  43b513:	add    DWORD PTR [eax],0x78
  43b516:	cmp    BYTE PTR [ecx-0x1],al
  43b519:	lahf   
  43b51a:	jmp    FWORD PTR ds:0xb700ff00
  43b520:	inc    DWORD PTR [eax-0x4dffff97]
  43b526:	xchg   ebp,eax
  43b527:	push   es
  43b528:	dec    DWORD PTR [edi+0x0]
  43b52b:	call   0x243b430
  43b530:	add    BYTE PTR [ecx-0x35007c28],ch
  43b536:	xlat   BYTE PTR ds:[ebx]
  43b537:	arpl   WORD PTR [eax],ax
  43b539:	in     eax,0xcc
  43b53b:	or     eax,0x2accffff
  43b540:	call   FWORD PTR [eax-0x5100ffd0]
  43b546:	mov    al,ds:0xff8683ff
  43b54b:	xlat   BYTE PTR ds:[ebx]
  43b54c:	inc    DWORD PTR [eax]
  43b54e:	cmp    DWORD PTR [ebx-0x77],0xffffffb6
  43b552:	into   
  43b553:	cmp    edi,0xffffff99
  43b556:	fld    TBYTE PTR [esi-0x3000cd01]
  43b55c:	add    bh,bh
  43b55e:	add    BYTE PTR [edx-0x34],dh
  43b561:	outs   dx,BYTE PTR ds:[esi]
  43b562:	(bad)  
  43b564:	dec    edi
  43b566:	push   ss
  43b567:	loop   0x43b569
  43b569:	rol    BYTE PTR [ebx-0x7c93],1
  43b56f:	push   cs
  43b570:	call   FWORD PTR [ecx]
  43b572:	int3   
  43b573:	(bad)  
  43b574:	call   FWORD PTR [eax]
  43b576:	sub    al,0x2c
  43b578:	add    BYTE PTR [ebp-0x1],cl
  43b57b:	sub    bh,bh
  43b57d:	inc    DWORD PTR [eax]
  43b57f:	sub    eax,0xff65cbff
  43b584:	add    BYTE PTR [ebx+0x70],bh
  43b587:	mov    bl,0x0
  43b589:	test   eax,0xff6aff
  43b58e:	(bad)  
  43b58f:	jmp    0x8ab294
  43b594:	int3   
  43b595:	cld    
  43b596:	xchg   ebp,eax
  43b597:	(bad)  
  43b598:	dec    DWORD PTR [esi]
  43b59a:	int3   
  43b59b:	cdq    
  43b59c:	add    DWORD PTR [eax],0xffffffff
  43b59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b5a0:	add    BYTE PTR [edi-0x68],cl
  43b5a3:	inc    DWORD PTR [eax]
  43b5a5:	adc    ah,dl
  43b5a7:	mov    BYTE PTR [eax],0x21
  43b5aa:	mov    DWORD PTR [esi],edx
  43b5ac:	mov    edi,edi
  43b5ae:	inc    DWORD PTR [eax+eax*1+0xff855f]
  43b5b5:	jecxz  0x43b5cb
  43b5b7:	lahf   
  43b5b8:	call   FWORD PTR [eax+0x0]
  43b5bb:	aad    0xff
  43b5bd:	add    BYTE PTR [ebx+0x1ddcff11],al
  43b5c3:	mov    esp,ecx
  43b5c5:	in     eax,0xa2
  43b5c7:	and    bh,bh
  43b5c9:	(bad)  
  43b5cb:	cli    
  43b5cc:	cmp    edi,0x0
  43b5cf:	dec    DWORD PTR ss:[edi+esi*1]
  43b5d3:	add    bh,bh
  43b5d5:	call   0x51ff:0xdb892e84
  43b5dc:	inc    DWORD PTR [ebx-0x20ff567d]
  43b5e2:	addr16 (bad) 
  43b5e4:	dec    DWORD PTR [esi-0x4b004a7c]
  43b5ea:	jmp    esi
  43b5ec:	add    BYTE PTR [ecx+0x5aff3eff],cl
  43b5f2:	(bad)  
  43b5f4:	call   edi
  43b5f6:	pop    ebp
  43b5f7:	jb     0x43b57c
  43b5f9:	push   ds
  43b5fa:	jmp    DWORD PTR [esp+ecx*8-0x7c070100]
  43b601:	pusha  
  43b602:	or     DWORD PTR [ebx-0x4c2c3e01],eax
  43b608:	int3   
  43b609:	cmp    edi,0xff830015
  43b60f:	stos   DWORD PTR es:[edi],eax
  43b610:	adc    DWORD PTR [edx-0x7ffffff1],0xfffffffd
  43b617:	or     bh,bh
  43b619:	or     edi,edi
  43b61b:	gs (bad) 
  43b61d:	inc    DWORD PTR [eax]
  43b61f:	or     edi,edi
  43b621:	xor    DWORD PTR [edi+0x0],0xffffffff
  43b625:	jecxz  0x43b63a
  43b627:	inc    DWORD PTR [ebx-0x33ff0001]
  43b62d:	int3   
  43b62e:	dec    esp
  43b630:	xchg   bh,dl
  43b632:	add    BYTE PTR [ebx+0xff73ff],al
  43b638:	xchg   edx,eax
  43b639:	imul   eax,DWORD PTR [eax],0x894dffff
  43b63f:	add    BYTE PTR [ecx],ch
  43b641:	inc    ebx
  43b642:	xchg   esp,eax
  43b643:	int3   
  43b644:	add    ah,bh
  43b646:	add    bh,bh
  43b648:	jmp    0xdf:0xffe20a
  43b64f:	add    BYTE PTR [ebx+0x3a],ch
  43b652:	xchg   edi,edi
  43b654:	add    ah,ch
  43b656:	add    BYTE PTR [eax],al
  43b658:	cdq    
  43b659:	mov    DWORD PTR [eax-0x8c0001],0x31932d89
  43b663:	(bad)  
  43b664:	call   DWORD PTR [ebx+0x7e12ffff]
  43b66a:	push   edi
  43b66b:	(bad)  
  43b66c:	(bad)  
  43b66d:	jns    0x43b66e
  43b66f:	call   DWORD PTR [ebp-0x4a18]
  43b675:	ins    BYTE PTR es:[edi],dx
  43b676:	add    BYTE PTR [ebx-0xf04752],al
  43b67c:	inc    DWORD PTR [edi]
  43b67e:	(bad)  
  43b67f:	(bad)  
  43b680:	cmp    al,0x8
  43b682:	jl     0x43b683
  43b684:	(bad)  
  43b685:	cmp    bh,bh
  43b687:	add    BYTE PTR ds:0xffa431,ah
  43b68d:	idiv   bh
  43b68f:	add    BYTE PTR [edi],ah
  43b691:	lds    esi,FWORD PTR [edi+edi*8-0x1]
  43b695:	sbb    edi,edi
  43b697:	call   DWORD PTR [ebp+0x835728]
  43b69d:	rol    BYTE PTR [ebx+0x538cae00],cl
  43b6a3:	add    BYTE PTR [eax],al
  43b6a5:	in     al,dx
  43b6a6:	add    DWORD PTR [eax],0x2f
  43b6a9:	inc    ebx
  43b6aa:	xor    BYTE PTR [ecx-0x7c5d34],cl
  43b6b0:	jmp    0x43b72d
  43b6b2:	mov    eax,0xccdd8989
  43b6b7:	jmp    DWORD PTR [edi-0x18]
  43b6ba:	jbe    0x43b63f
  43b6bc:	int3   
  43b6bd:	add    DWORD PTR [eax],eax
  43b6bf:	push   DWORD PTR [edi]
  43b6c1:	pop    ds
  43b6c2:	and    eax,0x8300cc
  43b6c7:	int3   
  43b6c8:	sbb    DWORD PTR [ecx],ecx
  43b6ca:	inc    esp
  43b6cb:	dec    esp
  43b6cd:	pop    ecx
  43b6ce:	add    BYTE PTR [ebx-0x7c03d8a1],al
  43b6d4:	add    BYTE PTR [ebx],ah
  43b6d6:	inc    DWORD PTR [eax]
  43b6d8:	push   ebp
  43b6d9:	cmp    DWORD PTR [edi],0x897e0083
  43b6df:	inc    esi
  43b6e1:	loope  0x43b74e
  43b6e3:	add    bh,bh
  43b6e5:	idiv   bh
  43b6e7:	jmp    FWORD PTR [edi-0xff6078]
  43b6ed:	mov    ah,0x0
  43b6ef:	adc    DWORD PTR [eax-0x7c957d],0xffffffd7
  43b6f6:	add    DWORD PTR [eax],0xffffffcd
  43b6f9:	jl     0x43b749
  43b6fb:	add    BYTE PTR [ebx+0x1200ffeb],al
  43b701:	jno    0x43b6b2
  43b703:	inc    DWORD PTR [eax]
  43b705:	and    al,0x0
  43b707:	adc    DWORD PTR [ebx],0xffffffab
  43b70a:	jae    0x43b6d8
  43b70c:	int3   
  43b70d:	les    eax,FWORD PTR [eax]
  43b70f:	int3   
  43b710:	pop    ebp
  43b711:	push   edx
  43b712:	adc    edi,edi
  43b714:	mov    DWORD PTR [edi+0x0],ebx
  43b717:	add    ch,bl
  43b719:	idiv   esp
  43b71b:	inc    DWORD PTR [ebx+0x7400ccae]
  43b721:	or     al,0xc4
  43b723:	(bad)  
  43b724:	inc    DWORD PTR [ecx-0x1]
  43b727:	add    BYTE PTR [esp+edi*4+0x18],al
  43b72b:	inc    DWORD PTR [eax]
  43b72d:	jmp    0xefcc3ab5
  43b732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b733:	int3   
  43b734:	sub    DWORD PTR ds:0x6d75ccff,0x75
  43b73b:	add    BYTE PTR [ebx+0x2bff0061],al
  43b741:	jo     0x43b72d
  43b743:	add    BYTE PTR [eax],al
  43b745:	fild   WORD PTR [ebx-0x649c8400]
  43b74b:	add    BYTE PTR [eax],al
  43b74d:	ins    DWORD PTR es:[edi],dx
  43b74e:	(bad)  
  43b74f:	jmp    DWORD PTR [ebx+eiz*8+0x4dffff65]
  43b756:	(bad)  
  43b757:	push   DWORD PTR [esp-0x45]
  43b75b:	(bad)  
  43b75c:	(bad)  
  43b75d:	jg     0x43b75e
  43b75f:	inc    DWORD PTR [edx]
  43b761:	mov    al,ds:0xaa00ffc1
  43b766:	mov    edi,edi
  43b768:	les    ecx,FWORD PTR [esi-0x107600f1]
  43b76e:	inc    DWORD PTR [eax]
  43b770:	pop    esi
  43b771:	or     BYTE PTR [edi+edi*8],al
  43b774:	push   edi
  43b776:	(bad)  
  43b777:	jmp    DWORD PTR [ebx]
  43b779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b77a:	inc    eax
  43b77b:	int3   
  43b77c:	dec    esp
  43b77e:	mov    edi,edi
  43b780:	jp     0x43b7b1
  43b782:	mov    al,0xff
  43b784:	mov    edx,eax
  43b786:	int3   
  43b787:	add    BYTE PTR [ecx+esi*1-0x6eff00f0],bh
  43b78e:	add    BYTE PTR [ecx+0x25e385],cl
  43b794:	call   FWORD PTR [esi+0x2dc00ff]
  43b79a:	xchg   ecx,eax
  43b79b:	add    BYTE PTR [ebx+0xaff83aa],al
  43b7a1:	pop    edx
  43b7a2:	cld    
  43b7a3:	add    BYTE PTR [ebx-0x3d003399],al
  43b7a9:	xor    eax,0x99ffff2d
  43b7ae:	add    bh,bh
  43b7b0:	sbb    edx,DWORD PTR [ebp+0x3f]
  43b7b3:	inc    DWORD PTR [eax]
  43b7b5:	mov    esp,0x5f8cffff
  43b7ba:	imul   eax,DWORD PTR [ebx-0xbf77],0x83c433c0
  43b7c4:	add    BYTE PTR [esi],ah
  43b7c6:	add    BYTE PTR [eax],al
  43b7c8:	and    esp,ebx
  43b7ca:	cli    
  43b7cb:	add    BYTE PTR [eax],al
  43b7cd:	test   BYTE PTR [ebx+0x3a85d3ff],al
  43b7d3:	inc    DWORD PTR [eax]
  43b7d5:	leave  
  43b7d6:	cmp    edi,0xfffffff0
  43b7d9:	adc    eax,0xc900ff70
  43b7de:	add    DWORD PTR [eax],0x25
  43b7e1:	stos   BYTE PTR es:[edi],al
  43b7e2:	(bad)  
  43b7e3:	dec    DWORD PTR [ecx-0x58ff00f4]
  43b7e9:	loop   0x43b7df
  43b7eb:	inc    DWORD PTR [ebx-0x4f33ffee]
  43b7f1:	arpl   dx,bp
  43b7f3:	inc    DWORD PTR [eax]
  43b7f5:	sub    edi,edi
  43b7f7:	mov    ebx,ebx
  43b7f9:	loop   0x43b831
  43b7fb:	add    BYTE PTR [eax],al
  43b7fd:	jp     0x43b7cb
  43b7ff:	jmp    FWORD PTR [edx]
  43b801:	sbb    ax,0x8900
  43b805:	cmp    bh,bh
  43b807:	call   FWORD PTR [edx]
  43b809:	retf   
  43b80a:	es add bh,bh
  43b80d:	xchg   esp,eax
  43b80e:	add    BYTE PTR [eax],al
  43b810:	mov    ebp,0xff515b
  43b815:	imul   eax,DWORD PTR [ebx-0x504f5100],0x0
  43b81c:	push   DWORD PTR [ebx-0x7d]
  43b81f:	call   DWORD PTR [esi+esi*1+0x52]
  43b823:	mov    DWORD PTR [ecx+0x2ff891f],ecx
  43b829:	or     eax,0x12ffffa8
  43b82e:	(bad)  
  43b82f:	push   DWORD PTR [esi+edi*8+0x2c]
  43b833:	dec    DWORD PTR [ecx-0x2f000055]
  43b839:	inc    ebp
  43b83a:	add    bh,bh
  43b83c:	call   DWORD PTR ds:0x72e3ffff
  43b842:	and    DWORD PTR [ebx-0x7c6c01],eax
  43b848:	xchg   edi,eax
  43b849:	jbe    0x43b80f
  43b84b:	add    BYTE PTR [eax],al
  43b84d:	ss dec esp
  43b850:	xor    eax,0xffb626
  43b855:	fmul   DWORD PTR [ecx-0x4900b901]
  43b85b:	mov    DWORD PTR [eax],eax
  43b85d:	imul   eax,DWORD PTR [ebx-0x4f219200],0x830d83ff
  43b867:	sbb    edx,0x2a
  43b86a:	xchg   bh,bh
  43b86c:	int3   
  43b86d:	aam    0xff
  43b86f:	dec    DWORD PTR [edx-0xbb9c]
  43b875:	mov    bl,0x0
  43b877:	(bad)  
  43b878:	jle    0x43b8aa
  43b87a:	jmp    0xd583:0x89fc0000
  43b881:	cmp    BYTE PTR [edi+edi*8],0xff
  43b885:	out    dx,al
  43b886:	mov    DWORD PTR [ebx-0x7c0b677b],eax
  43b88c:	mov    DWORD PTR [edx-0x1],edi
  43b88f:	jmp    DWORD PTR [ebx-0x5]
  43b892:	out    0xff,al
  43b894:	add    BYTE PTR [eax],dl
  43b896:	inc    DWORD PTR [eax]
  43b898:	dec    esi
  43b899:	(bad)  {k7}{z}
  43b89e:	inc    DWORD PTR [eax]
  43b8a0:	xchg   ebx,eax
  43b8a1:	popf   
  43b8a2:	add    BYTE PTR es:[ebx+0x70000013],al
  43b8a9:	sub    eax,DWORD PTR ds:0xf4ffff
  43b8af:	add    BYTE PTR [esp+edx*1],bl
  43b8b2:	push   esi
  43b8b3:	inc    DWORD PTR [eax]
  43b8b5:	push   ss
  43b8b6:	add    bh,bh
  43b8b8:	and    ecx,DWORD PTR [eax]
  43b8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b8bb:	add    bh,bh
  43b8bd:	data16 add BYTE PTR [ebx-0x7cf1be3f],al
  43b8c4:	call   DWORD PTR [ebp-0x1]
  43b8c7:	call   FWORD PTR [edx]
  43b8c9:	mov    bh,BYTE PTR ds:0x838affff
  43b8cf:	(bad)  
  43b8d0:	clc    
  43b8d1:	not    cl
  43b8d3:	inc    DWORD PTR [eax]
  43b8d5:	and    al,0x89
  43b8d7:	add    BYTE PTR [edi],cl
  43b8d9:	push   cs
  43b8da:	xchg   ecx,eax
  43b8db:	dec    DWORD PTR [ecx+0x5bffccc8]
  43b8e1:	pop    esp
  43b8e2:	int3   
  43b8e3:	add    BYTE PTR [eax],al
  43b8e5:	je     0x43b8e6
  43b8e7:	add    dh,dl
  43b8e9:	je     0x43b8f5
  43b8eb:	(bad)  
  43b8ec:	dec    DWORD PTR [ebp+0x0]
  43b8ef:	sbb    ebx,0x6b
  43b8f2:	mov    ebp,0x8effff
  43b8f7:	(bad)  
  43b8f8:	jg     0x43b960
  43b8fa:	repz add BYTE PTR [ecx-0x767c00f7],cl
  43b901:	and    ecx,DWORD PTR [ecx+0xbf0000]
  43b907:	int3   
  43b908:	mov    bh,0x1a
  43b90a:	sbb    BYTE PTR [eax],al
  43b90c:	(bad)  
  43b90d:	stc    
  43b90e:	add    bh,bh
  43b910:	rcl    DWORD PTR [edi],1
  43b912:	adc    bh,bh
  43b914:	(bad)  
  43b915:	jle    0x43b916
  43b917:	add    BYTE PTR [esi-0x50],al
  43b91a:	pop    ebx
  43b91b:	add    ah,cl
  43b91d:	outs   dx,BYTE PTR ds:[esi]
  43b91e:	or     DWORD PTR [ecx-0xe74a6a],0xffffff83
  43b925:	xor    ecx,esp
  43b927:	push   DWORD PTR [ebp+0x10]
  43b92a:	inc    DWORD PTR [bp+di-0xbc]
  43b92f:	(bad)  
  43b930:	cmp    DWORD PTR [ebp-0x71],ebx
  43b933:	inc    DWORD PTR [ebx+0x2ccc8396]
  43b939:	aad    0xb9
  43b93b:	(bad)  
  43b93c:	dec    DWORD PTR [esi-0x34]
  43b93f:	add    BYTE PTR [eiz*2-0x7f00ffa8],bh
  43b946:	add    ah,cl
  43b948:	and    al,BYTE PTR [ebx]
  43b94a:	sar    edi,cl
  43b94c:	cmp    esp,0x0
  43b94f:	jmp    edi
  43b951:	sbb    BYTE PTR [ecx-0x1],ah
  43b954:	adc    DWORD PTR ds:0xd29a00ff,0x59
  43b95b:	mov    edi,edi
  43b95d:	pop    ebx
  43b95e:	add    DWORD PTR [eax],0x4
  43b961:	inc    DWORD PTR [eax+0x0]
  43b964:	(bad)  
  43b965:	fadd   QWORD PTR [ebx+0x545d0e83]
  43b96b:	(bad)  
  43b96c:	jmp    DWORD PTR [eax+eax*1-0x1]
  43b970:	mov    edi,ss
  43b972:	push   es
  43b973:	add    BYTE PTR [eax],al
  43b975:	loope  0x43b977
  43b977:	call   DWORD PTR [eax]
  43b979:	loopne 0x43b950
  43b97b:	add    ah,cl
  43b97d:	sub    edi,edi
  43b97f:	and    esi,0x21
  43b982:	test   edi,edi
  43b984:	call   DWORD PTR [edi+edi*8-0x1]
  43b988:	dec    eax
  43b989:	in     eax,dx
  43b98a:	add    DWORD PTR [eax],0x0
  43b98d:	aam    0x0
  43b98f:	(bad)  
  43b990:	in     eax,dx
  43b991:	push   eax
  43b992:	add    bh,bh
  43b994:	call   DWORD PTR [eax]
  43b996:	dec    DWORD PTR [ecx-0xa1fe28]
  43b99c:	push   DWORD PTR [ebp+0x3d4900ff]
  43b9a2:	in     eax,0x0
  43b9a4:	(bad)  
  43b9a5:	(bad)  
  43b9a6:	inc    DWORD PTR [eax]
  43b9a8:	sub    eax,0xffffaece
  43b9ad:	or     cl,BYTE PTR [ecx+0x9201acc]
  43b9b3:	dec    DWORD PTR [ecx+0x5f008316]
  43b9b9:	mov    al,ds:0xa78983a1
  43b9be:	(bad)  
  43b9bf:	jmp    DWORD PTR [esi]
  43b9c1:	sbb    cl,dl
  43b9c3:	mov    esp,ecx
  43b9c5:	test   al,0xff
  43b9c7:	int3   
  43b9c8:	push   ebp
  43b9c9:	nop
  43b9ca:	rol    BYTE PTR [eax],1
  43b9cc:	add    BYTE PTR [edx-0x325d0001],al
  43b9d2:	jno    0x43b9d3
  43b9d4:	int3   
  43b9d5:	loop   0x43b960
  43b9d7:	int3   
  43b9d8:	les    ebp,FWORD PTR [esi-0x67]
  43b9db:	mov    edi,edi
  43b9dd:	outs   dx,DWORD PTR ds:[esi]
  43b9de:	(bad)  
  43b9df:	(bad)  
  43b9e0:	mov    ebp,0x838f9f
  43b9e5:	fdivp  st(7),st
  43b9e7:	mov    esi,ebx
  43b9e9:	jae    0x43b9da
  43b9eb:	cmp    edi,0x41
  43b9ee:	(bad)  
  43b9ef:	push   DWORD PTR [esi-0x763335aa]
  43b9f5:	in     eax,dx
  43b9f6:	(bad)  
  43b9f7:	jmp    FWORD PTR ds:0xfffff7d2
  43b9fd:	mov    eax,DWORD PTR [ebx-0x2fa44401]
  43ba03:	add    bh,bh
  43ba05:	push   ds
  43ba06:	inc    DWORD PTR [ebx-0x76e65c1d]
  43ba0c:	push   DWORD PTR [ecx-0x700e3301]
  43ba12:	push   ecx
  43ba13:	add    bh,bh
  43ba15:	sbb    bh,bh
  43ba17:	add    cl,bl
  43ba19:	rol    BYTE PTR [eax-0x1],cl
  43ba1c:	(bad)  
  43ba1d:	sti    
  43ba1e:	(bad)  
  43ba1f:	jmp    DWORD PTR [edi]
  43ba21:	test   al,0x46
  43ba23:	add    DWORD PTR [eax],0xffffffbc
  43ba26:	add    BYTE PTR [eax],al
  43ba28:	lahf   
  43ba29:	pop    eax
  43ba2a:	es cmp edi,0xa
  43ba2e:	add    BYTE PTR [eax],al
  43ba30:	mov    al,ds:0xffff1e19
  43ba35:	pop    DWORD PTR [eax]
  43ba37:	add    BYTE PTR [esi],al
  43ba39:	fistp  DWORD PTR [edx]
  43ba3b:	inc    DWORD PTR [eax]
  43ba3d:	in     eax,dx
  43ba3e:	(bad)  
  43ba3f:	call   DWORD PTR [edx-0x7d]
  43ba42:	adc    BYTE PTR [eax],al
  43ba44:	add    BYTE PTR [esi],dl
  43ba46:	inc    DWORD PTR [ebx-0xf3e45a]
  43ba4c:	add    ah,dl
  43ba4e:	(bad)  
  43ba4f:	jmp    FWORD PTR [esi+0x2c]
  43ba52:	jo     0x43ba53
  43ba54:	add    eax,0x0
  43ba57:	inc    DWORD PTR ds:0xff0c3a
  43ba5d:	retf   0xff
  43ba60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ba61:	ins    BYTE PTR es:[edi],dx
  43ba62:	fdivp  st(7),st
  43ba64:	inc    eax
  43ba66:	add    BYTE PTR [ebx-0x9fb412],al
  43ba6c:	dec    esi
  43ba6e:	int3   
  43ba6f:	mov    DWORD PTR [edx],eax
  43ba71:	fisttp QWORD PTR [edx-0x7cd87601]
  43ba77:	inc    esi
  43ba79:	and    al,0x1b
  43ba7b:	add    bh,bh
  43ba7d:	loop   0x43ba4b
  43ba7f:	int3   
  43ba80:	lock add BYTE PTR fs:[eax],al
  43ba84:	add    dl,bl
  43ba86:	add    BYTE PTR [eax],al
  43ba88:	pop    ebp
  43ba89:	mov    esp,0x8800ff7d
  43ba8e:	add    bh,bh
  43ba90:	hlt    
  43ba91:	je     0x43bb0b
  43ba93:	(bad)  
  43ba94:	dec    DWORD PTR [ecx+0x28ff00]
  43ba9a:	jbe    0x43ba9c
  43ba9c:	int3   
  43ba9d:	aas    
  43ba9e:	inc    DWORD PTR [eax]
  43baa0:	fisub  DWORD PTR [esi-0x5f00006e]
  43baa6:	add    ah,cl
  43baa8:	sbb    al,0x95
  43baaa:	sbb    BYTE PTR [eax],al
  43baac:	jmp    DWORD PTR [edx-0x212f007d]
  43bab2:	adc    ecx,DWORD PTR [ecx-0x7cffbc01]
  43bab8:	les    ecx,FWORD PTR [ebx+0x3f]
  43babb:	(bad)  
  43babc:	call   DWORD PTR [eax+0x0]
  43babf:	inc    DWORD PTR [ebp-0x7d]
  43bac2:	add    DWORD PTR [eax],0x83ffcfcc
  43bac8:	jae    0x43bb1c
  43baca:	addr16 add ah,cl
  43bacd:	inc    edi
  43bace:	int3   
  43bacf:	adc    DWORD PTR [ebx+0x5a],0x7e
  43bad3:	add    BYTE PTR [ecx-0xe003345],cl
  43bad9:	lea    esi,[ebx+eax*4-0xe501]
  43bae0:	and    DWORD PTR [esi+0x45ffff56],ecx
  43bae6:	inc    DWORD PTR [ebx-0xd1cb21]
  43baec:	call   FWORD PTR ds:0x62fdffcc
  43baf2:	pushf  
  43baf3:	(bad)  
  43baf4:	call   DWORD PTR [edx]
  43baf6:	add    ah,cl
  43baf8:	sbb    bh,BYTE PTR [esi+eax*8]
  43bafb:	mov    DWORD PTR [eax],eax
  43bafd:	dec    edi
  43bafe:	cmp    edi,0xfffffffc
  43bb01:	mov    cl,0x3b
  43bb03:	add    bh,bh
  43bb05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bb06:	add    BYTE PTR [ebx-0x5f63a2],al
  43bb0c:	dec    esp
  43bb0e:	(bad)  
  43bb0f:	push   ecx
  43bb11:	pop    es
  43bb12:	cmp    edi,edi
  43bb14:	add    BYTE PTR [eax-0x77],ch
  43bb17:	cmp    edi,0x4c
  43bb1a:	inc    esp
  43bb1b:	inc    DWORD PTR [eax]
  43bb1d:	sbb    eax,DWORD PTR [eax]
  43bb1f:	add    ecx,0x57
  43bb22:	jns    0x43baa7
  43bb24:	add    BYTE PTR [ecx-0x7d],ch
  43bb27:	dec    DWORD PTR [ebx-0x15]
  43bb2a:	mov    ds:0xffaa00ff,al
  43bb2f:	jmp    FWORD PTR [esi+0xffd5e0]
  43bb35:	mov    BYTE PTR [ebx+0x409fc9ff],0x0
  43bb3c:	int3   
  43bb3d:	xor    eax,0xe45d00ff
  43bb42:	fwait
  43bb43:	dec    DWORD PTR [ecx-0x7c767ce3]
  43bb49:	clc    
  43bb4a:	leave  
  43bb4b:	cmp    edi,0x11
  43bb4e:	(bad)  
  43bb4f:	(bad)  
  43bb50:	cmp    dh,ch
  43bb52:	dec    edi
  43bb53:	add    DWORD PTR [eax],0x50
  43bb56:	(bad)  
  43bb57:	jmp    FWORD PTR [ecx]
  43bb59:	pop    edi
  43bb5a:	ja     0x43bb5b
  43bb5c:	mov    DWORD PTR [ebx],esp
  43bb5e:	dec    DWORD PTR [ecx-0x913d5a]
  43bb64:	call   DWORD PTR [edx]
  43bb66:	add    ah,cl
  43bb68:	push   es
  43bb69:	jl     0x43bb0f
  43bb6b:	(bad)  
  43bb6c:	(bad)  
  43bb6d:	cli    
  43bb6e:	add    DWORD PTR [eax],0x25
  43bb71:	push   edi
  43bb72:	dec    esi
  43bb73:	or     esp,0x51
  43bb76:	(bad)  
  43bb77:	jmp    ebx
  43bb79:	dec    ebp
  43bb7a:	call   0x68ff:0xff5a83ff
  43bb81:	test   al,0x89
  43bb84:	inc    DWORD PTR [esi-0x1]
  43bb87:	(bad)  
  43bb88:	sti    
  43bb89:	test   dl,bh
  43bb8b:	inc    DWORD PTR [ebx+0x500005d]
  43bb91:	ret    
  43bb92:	popa   
  43bb93:	inc    DWORD PTR [eax]
  43bb95:	loope  0x43bb1a
  43bb97:	xor    DWORD PTR [ebx],0x73
  43bb9a:	xchg   BYTE PTR [eax],al
  43bb9c:	(bad)  
  43bb9d:	cli    
  43bb9e:	add    bh,bh
  43bba0:	mov    ?,WORD PTR [eax-0x54ffff05]
  43bba6:	(bad)  
  43bba7:	inc    DWORD PTR [esi+edx*2]
  43bbaa:	sar    bh,0x89
  43bbad:	aad    0xff
  43bbaf:	mov    esi,esi
  43bbb1:	add    esp,DWORD PTR [esi]
  43bbb3:	int3   
  43bbb4:	add    eax,0xffffffff
  43bbb7:	add    cl,cl
  43bbb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bbba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bbbb:	add    BYTE PTR [ebx-0x57ff00a0],al
  43bbc1:	jno    0x43bba4
  43bbc3:	(bad)  
  43bbc4:	call   FWORD PTR [esi+0x24c7ff00]
  43bbca:	add    bh,bh
  43bbcc:	call   DWORD PTR [edx-0x1]
  43bbcf:	(bad)  
  43bbd0:	mov    edi,0xffbec8
  43bbd5:	and    DWORD PTR [ebx-0x394bf600],eax
  43bbdb:	(bad)  
  43bbdc:	inc    DWORD PTR [ebp-0x46420077]
  43bbe2:	and    bh,bh
  43bbe4:	add    BYTE PTR [ecx+ecx*4+0x6221d300],al
  43bbeb:	add    bh,bh
  43bbed:	fiadd  WORD PTR [eax]
  43bbef:	mov    DWORD PTR [ecx],eax
  43bbf1:	outs   dx,DWORD PTR ds:[esi]
  43bbf2:	fcos   
  43bbf4:	(bad)  
  43bbf5:	cld    
  43bbf6:	(bad)  
  43bbf7:	(bad)  
  43bbf8:	jmp    0x43bbbe
  43bbfa:	loopne 0x43bbfb
  43bbfc:	add    BYTE PTR [esi+0x6326ff83],bl
  43bc02:	mov    esi,0x74ff83
  43bc07:	add    BYTE PTR [edi+0x74],ch
  43bc0a:	loop   0x43bc0c
  43bc0c:	sbb    DWORD PTR [edx+0x4430ffff],0xffffffb7
  43bc13:	add    bh,bh
  43bc15:	call   0xfd3bbd19
  43bc1a:	enter  0xff,0xae
  43bc1e:	inc    DWORD PTR [ebx-0x69a313]
  43bc24:	int3   
  43bc25:	adc    cl,BYTE PTR [ecx+0x34386683]
  43bc2b:	int3   
  43bc2c:	jmp    FWORD PTR [esi]
  43bc2e:	inc    DWORD PTR [eax]
  43bc30:	fmul   st,st(5)
  43bc32:	sbb    edi,edi
  43bc34:	add    BYTE PTR [edi+0x78feff89],dh
  43bc3a:	jno    0x43bc3b
  43bc3c:	jmp    FWORD PTR [ebx+0x2c8000ff]
  43bc42:	or     eax,0xcc3400ff
  43bc47:	int3   
  43bc48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bc49:	dec    ecx
  43bc4a:	or     bh,bh
  43bc4c:	jmp    DWORD PTR [ecx-0x791e0100]
  43bc52:	inc    eax
  43bc53:	(bad)  
  43bc54:	(bad)  
  43bc55:	jmp    0xff92:0x1e808383
  43bc5c:	add    bh,dh
  43bc5e:	dec    esp
  43bc60:	or     eax,0xff834543
  43bc65:	scas   eax,DWORD PTR es:[edi]
  43bc66:	add    BYTE PTR [eax],al
  43bc68:	imul   edi,DWORD PTR [esi*4-0x7c260100],0xffffffff
  43bc70:	xor    ebp,DWORD PTR [edi]
  43bc72:	xchg   ecx,eax
  43bc73:	add    bh,bh
  43bc75:	sahf   
  43bc76:	mov    edi,edi
  43bc78:	push   ss
  43bc79:	out    dx,al
  43bc7a:	and    edi,edi
  43bc7c:	add    edx,0xffffff83
  43bc7f:	inc    DWORD PTR [eax-0x225a]
  43bc85:	into   
  43bc86:	(bad)  
  43bc87:	call   DWORD PTR [edi+0x898a64]
  43bc8d:	sbb    al,0xcc
  43bc8f:	add    BYTE PTR [edi-0x58],ch
  43bc92:	(bad)  
  43bc93:	add    bh,bh
  43bc95:	in     al,dx
  43bc96:	add    BYTE PTR [eax],al
  43bc98:	cld    
  43bc99:	sbb    BYTE PTR [ebx-0xe70034],0xff
  43bca0:	dec    ebx
  43bca2:	in     eax,0xff
  43bca4:	add    BYTE PTR [edi-0x77],bl
  43bca7:	jmp    DWORD PTR [ecx]
  43bca9:	mov    ah,0x6c
  43bcab:	add    BYTE PTR [eax],al
  43bcad:	or     al,BYTE PTR [ebx-0x64af6501]
  43bcb3:	inc    DWORD PTR [ebx-0x3c0000c9]
  43bcb9:	popf   
  43bcba:	jmp    0x43bcbb
  43bcbc:	call   DWORD PTR [ebx+0x4e41ffff]
  43bcc2:	sub    eax,0xff8d89cc
  43bcc7:	xor    DWORD PTR [edx+ebp*4-0x26],0xffffffcc
  43bccc:	dec    DWORD PTR [eax]
  43bcce:	inc    DWORD PTR [ebx+0x878b83]
  43bcd4:	int3   
  43bcd5:	inc    ebx
  43bcd6:	int3   
  43bcd7:	(bad)  
  43bcd8:	fld    QWORD PTR [eax]
  43bcda:	push   esi
  43bcdb:	add    bh,bh
  43bcdd:	out    dx,al
  43bcde:	int3   
  43bcdf:	sbb    DWORD PTR [ecx-0x767c1a2c],0x4b
  43bce6:	(bad)  
  43bce7:	call   FWORD PTR ds:0xffffac14
  43bced:	xor    eax,DWORD PTR [eax]
  43bcef:	add    BYTE PTR [esi+eiz*1],cl
  43bcf2:	(bad)  
  43bcf5:	push   esp
  43bcf6:	add    bh,bh
  43bcf8:	xchg   ecx,eax
  43bcf9:	and    al,0x18
  43bcfb:	dec    esp
  43bcfd:	clc    
  43bcfe:	add    ah,cl
  43bd00:	or     esi,DWORD PTR [eax]
  43bd02:	jmp    0x43bc8d
  43bd04:	add    BYTE PTR [ecx-0x1],dh
  43bd07:	inc    DWORD PTR [ecx+eax*4-0x2e0076a0]
  43bd0e:	cmp    edi,0x12
  43bd11:	sub    dl,BYTE PTR [esp+ecx*8+0xffa983]
  43bd18:	xlat   BYTE PTR ss:[ebx]
  43bd1a:	mov    ds:0xff3d8300,al
  43bd1f:	dec    edi
  43bd21:	push   ds
  43bd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bd23:	add    bh,bh
  43bd25:	sbb    DWORD PTR [eax],eax
  43bd27:	sbb    edi,0xfffffffe
  43bd2a:	push   ebp
  43bd2b:	add    BYTE PTR [ebx+0x5ffff0c],al
  43bd31:	mov    ch,0x21
  43bd33:	or     DWORD PTR [ecx-0x76ff00f7],0xffffffc3
  43bd3a:	jb     0x43bd3c
  43bd3c:	add    ecx,0xffffffcc
  43bd3f:	add    dl,ch
  43bd41:	test   al,0x97
  43bd43:	(bad)  
  43bd44:	(bad)  
  43bd45:	mov    ebx,0xde55ff89
  43bd4a:	fild   WORD PTR [ebx-0x33009401]
  43bd50:	ror    BYTE PTR [ebp+0x36],cl
  43bd53:	inc    DWORD PTR [eax]
  43bd55:	push   ebp
  43bd56:	dec    esp
  43bd58:	mov    bh,al
  43bd5a:	arpl   di,di
  43bd5c:	call   edi
  43bd5e:	inc    DWORD PTR [eax]
  43bd60:	(bad)  
  43bd61:	imul   edi,DWORD PTR [edx-0x380100],0x9709d5ff
  43bd6b:	inc    DWORD PTR [eax]
  43bd6d:	mov    bh,0xff
  43bd6f:	int3   
  43bd70:	inc    esp
  43bd71:	cs mov ebx,0xffda8300
  43bd77:	int3   
  43bd78:	into   
  43bd79:	xor    al,0x21
  43bd7b:	(bad)  
  43bd7c:	dec    DWORD PTR [edi-0x1]
  43bd7f:	and    DWORD PTR [esi-0x50],0x1f
  43bd83:	add    BYTE PTR [eax],al
  43bd85:	mov    ch,0xff
  43bd87:	inc    DWORD PTR [ecx-0x338ef4]
  43bd8d:	icebp  
  43bd8e:	add    BYTE PTR [eax],al
  43bd90:	out    dx,eax
  43bd91:	pop    ecx
  43bd92:	stos   DWORD PTR es:[edi],eax
  43bd93:	add    bh,bh
  43bd95:	add    edi,edi
  43bd97:	sub    DWORD PTR [ecx-0xec06],0x35
  43bd9e:	int3   
  43bd9f:	call   FWORD PTR [eax+esi*1-0x19]
  43bda3:	add    BYTE PTR [eax],al
  43bda5:	outs   dx,BYTE PTR ds:[esi]
  43bda6:	(bad)  
  43bda7:	(bad)  
  43bda8:	fld    TBYTE PTR [esi]
  43bdaa:	lods   eax,DWORD PTR ds:[esi]
  43bdab:	inc    DWORD PTR [ebx-0x6b330060]
  43bdb1:	mov    al,ds:0x19cc8371
  43bdb6:	(bad)  
  43bdb7:	jmp    FWORD PTR [esi+0xfff34b]
  43bdbd:	mov    ah,0xff
  43bdbf:	add    BYTE PTR [edi+0x36],bh
  43bdc2:	add    eax,0xfffcff83
  43bdc7:	inc    DWORD PTR ds:0xcc5b41
  43bdcd:	push   esp
  43bdce:	(bad)  
  43bdcf:	inc    eax
  43bdd1:	sbb    al,0xea
  43bdd3:	add    bh,bh
  43bdd5:	xor    bh,bh
  43bdd7:	dec    esi
  43bdd9:	cli    
  43bdda:	rol    BYTE PTR [eax],1
  43bddc:	push   DWORD PTR [esi-0x1]
  43bddf:	call   DWORD PTR [edx-0x82f4]
  43bde5:	fild   WORD PTR [eax]
  43bde7:	mov    ebx,ebp
  43bde9:	ins    DWORD PTR es:[edi],dx
  43bdea:	retf   
  43bdeb:	inc    DWORD PTR [eax]
  43bded:	bound  eax,QWORD PTR [eax]
  43bdef:	cmp    ecx,0xffffffa2
  43bdf2:	jmp    0x43bdf4
  43bdf4:	inc    DWORD PTR [eax-0x1]
  43bdf7:	int3   
  43bdf8:	cmovp  ecx,DWORD PTR ss:[ecx-0x7c007901]
  43be00:	lea    ecx,[eax]
  43be02:	add    BYTE PTR [eax],0x83
  43be05:	push   ss
  43be06:	add    BYTE PTR [eax],al
  43be08:	dec    edi
  43be09:	test   BYTE PTR [eax-0x1],bh
  43be0c:	dec    DWORD PTR ds:0x6b890000
  43be12:	inc    edx
  43be13:	dec    esp
  43be15:	in     eax,dx
  43be16:	add    bh,bh
  43be18:	jb     0x43bde9
  43be1a:	or     edi,edi
  43be1c:	jmp    FWORD PTR [ebx+0x199eff00]
  43be22:	fiadd  WORD PTR [eax]
  43be24:	add    BYTE PTR [eax-0x2a4dff01],dl
  43be2a:	ins    DWORD PTR es:[edi],dx
  43be2b:	(bad)  
  43be2c:	call   DWORD PTR [edi]
  43be2e:	add    BYTE PTR [eax],al
  43be30:	retf   
  43be31:	repnz rol DWORD PTR [eax],0x83
  43be35:	jbe    0x43bdc0
  43be37:	call   DWORD PTR [ebp-0x64]
  43be3a:	repz inc DWORD PTR [ebx-0x4e7c0039]
  43be41:	loop   0x43be68
  43be43:	int3   
  43be44:	jmp    FWORD PTR [edx-0x1]
  43be47:	dec    DWORD PTR [eax+0x21]
  43be4a:	xor    edi,edi
  43be4c:	(bad)  
  43be4d:	fild   DWORD PTR [eax]
  43be4f:	add    al,dh
  43be51:	jle    0x43bec8
  43be53:	add    BYTE PTR [eax],al
  43be55:	push   esi
  43be56:	add    bh,bh
  43be58:	sub    al,cl
  43be5a:	mov    ecx,DWORD PTR [ecx+0xffde00]
  43be60:	dec    edx
  43be61:	out    dx,eax
  43be62:	xchg   esp,eax
  43be63:	add    bh,bh
  43be65:	pop    edi
  43be66:	cmp    edi,0x41
  43be69:	int3   
  43be6a:	jno    0x43be6c
  43be6c:	jmp    FWORD PTR [esi]
  43be6e:	add    bh,bh
  43be70:	add    al,0x53
  43be72:	(bad)  
  43be74:	jmp    FWORD PTR [ecx+0x13150000]
  43be7a:	push   esi
  43be7b:	inc    DWORD PTR [eax]
  43be7d:	and    al,0xcc
  43be7f:	int3   
  43be80:	ret    
  43be81:	adc    ebx,DWORD PTR [edi+edi*8+0xff69cc]
  43be88:	mov    ds:0x83ffc1f9,al
  43be8d:	fwait
  43be8e:	inc    DWORD PTR [ebx+0x36f6e4]
  43be94:	(bad)  
  43be95:	cmp    al,0x0
  43be97:	cmp    edi,0xffffff8e
  43be9a:	add    BYTE PTR [bx+si],al
  43be9d:	enter  0xff00,0x7e
  43bea1:	mov    ds:0x3c00ff59,al
  43bea6:	(bad)  
  43bea7:	dec    DWORD PTR [ebx-0x20]
  43beaa:	push   ds
  43beab:	add    bh,bh
  43bead:	mov    ah,0x0
  43beaf:	add    BYTE PTR [ebp-0x7600d1b0],ch
  43beb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43beb6:	(bad)  
  43beb7:	call   DWORD PTR [esi]
  43beb9:	sbb    BYTE PTR [edi-0xbff01],al
  43bebf:	dec    DWORD PTR [edx-0x77]
  43bec2:	push   esi
  43bec3:	add    bh,bh
  43bec5:	or     edi,edi
  43bec7:	add    BYTE PTR [edi],dl
  43bec9:	(bad)  
  43beca:	mov    ah,0x83
  43becc:	xor    DWORD PTR [edx+0x7bd1ffff],0x1d
  43bed3:	add    bh,bh
  43bed5:	mov    DWORD PTR [eax],eax
  43bed7:	jmp    FWORD PTR [esi*8+0xffff68]
  43bede:	mov    edi,edi
  43bee0:	popf   
  43bee1:	add    eax,0x9000ffec
  43bee6:	inc    DWORD PTR [eax]
  43bee8:	lahf   
  43bee9:	arpl   bx,ax
  43beeb:	mov    DWORD PTR [ebx-0x6cff76be],eax
  43bef1:	(bad)  
  43bef2:	push   0x8365ff83
  43bef7:	add    al,dh
  43bef9:	inc    esi
  43befa:	out    dx,al
  43befb:	add    bh,bh
  43befd:	(bad)  
  43befe:	inc    DWORD PTR [eax]
  43bf00:	fwait
  43bf01:	imul   eax,esp,0xff7f00cc
  43bf07:	push   DWORD PTR [ecx]
  43bf09:	jo     0x43bf15
  43bf0b:	add    BYTE PTR [eax],al
  43bf0d:	sbb    BYTE PTR [ebx+0x63f30789],al
  43bf13:	(bad)  
  43bf14:	jmp    FWORD PTR [ebx-0x177e0100]
  43bf1a:	sbb    al,0x0
  43bf1c:	add    BYTE PTR [edi-0x7d],cl
  43bf1f:	dec    DWORD PTR [eax+0x77]
  43bf22:	or     DWORD PTR [ecx-0xff1601],ecx
  43bf28:	and    ecx,DWORD PTR [edx-0x18ff00cb]
  43bf2e:	add    bh,bh
  43bf30:	pusha  
  43bf31:	mov    bh,0x59
  43bf33:	dec    DWORD PTR [ecx-0x750033b7]
  43bf39:	aam    0xb3
  43bf3b:	mov    DWORD PTR [ebx+0x42ffff85],eax
  43bf41:	sahf   
  43bf42:	(bad)  
  43bf43:	inc    DWORD PTR [eax]
  43bf45:	lahf   
  43bf46:	(bad)  
  43bf47:	dec    esp
  43bf49:	int3   
  43bf4a:	int3   
  43bf4b:	int3   
  43bf4c:	int3   
  43bf4d:	int3   
  43bf4e:	int3   
  43bf4f:	int3   
  43bf50:	enter  0xaccc,0xff
  43bf54:	test   BYTE PTR [edx-0x1b0100],ah
  43bf5a:	repz xor DWORD PTR [ebx+0x760000a4],0x0
  43bf62:	dec    eax
  43bf63:	add    BYTE PTR [ecx],dl
  43bf65:	inc    ebx
  43bf66:	inc    DWORD PTR [eax]
  43bf68:	call   0x750ffb6d
  43bf6d:	pop    ss
  43bf6e:	inc    DWORD PTR [eax]
  43bf70:	and    al,0x89
  43bf72:	sar    edi,cl
  43bf74:	fild   DWORD PTR [edi+edi*8]
  43bf77:	call   DWORD PTR [ebp-0x1]
  43bf7a:	xchg   ebx,eax
  43bf7b:	int3   
  43bf7c:	or     eax,0xe0fffff0
  43bf81:	add    ah,dh
  43bf83:	dec    ebx
  43bf85:	test   DWORD PTR [eax],0x8dff1489
  43bf8b:	cmp    DWORD PTR [ebx],0xffffffc1
  43bf8e:	int3   
  43bf8f:	xor    DWORD PTR [ecx+0x3b00d000],0xffffffb8
  43bf96:	(bad)  
  43bf97:	inc    DWORD PTR [eax+eax*1-0x3acaff09]
  43bf9e:	int3   
  43bf9f:	add    BYTE PTR [ecx],cl
  43bfa1:	add    BYTE PTR [edx],bl
  43bfa3:	add    cl,bl
  43bfa5:	add    DWORD PTR cs:[ebx+0x3cffde],0xffffffd3
  43bfad:	jle    0x43bfaf
  43bfaf:	sub    DWORD PTR [ebx-0x1],0x63
  43bfb3:	add    bh,bh
  43bfb5:	aas    
  43bfb6:	add    BYTE PTR [eax],al
  43bfb8:	adc    edi,edi
  43bfba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bfbb:	(bad)  
  43bfbc:	mov    esp,0x30ff83e4
  43bfc1:	add    BYTE PTR [edx-0x1],al
  43bfc4:	lock push 0xffffffff
  43bfc7:	add    BYTE PTR [eax-0x1],cl
  43bfca:	ror    esp,cl
  43bfcc:	adc    ch,BYTE PTR [eax]
  43bfce:	add    ah,cl
  43bfd0:	or     edi,edi
  43bfd2:	push   ss
  43bfd3:	sbb    esi,0x16
  43bfd6:	(bad)  
  43bfd7:	dec    DWORD PTR [esi+0x2009d00]
  43bfdd:	mov    di,di
  43bfe0:	pop    es
  43bfe1:	mov    DWORD PTR [esi-0x730b34],eax
  43bfe7:	sub    DWORD PTR [edx],0xffffffff
  43bfea:	pop    ds
  43bfeb:	jmp    DWORD PTR [ebx-0x61ffff09]
  43bff1:	add    dl,cl
  43bff3:	inc    DWORD PTR [eax+edi*4-0x1]
  43bff7:	inc    DWORD PTR [edx+0x52005400]
  43bffd:	scas   al,BYTE PTR es:[edi]
  43bffe:	(bad)  
  43bfff:	jmp    DWORD PTR [ebx-0x4d003600]
  43c005:	mov    bh,0xff
  43c007:	dec    esp
  43c009:	jmp    DWORD PTR [ebx+0x626ff]
  43c00f:	jmp    FWORD PTR [ebx+0x52ff72ff]
  43c015:	sub    edi,edi
  43c017:	xor    DWORD PTR [edi-0x57c4f01],0xffffffea
  43c01e:	cmp    edi,0xffffffe3
  43c021:	dec    DWORD PTR [ebp-0x676900]
  43c027:	and    DWORD PTR [eax],0x0
  43c02a:	mov    al,ds:0xccef7bff
  43c02f:	mov    DWORD PTR [ebx+0x0],edx
  43c032:	popa   
  43c033:	(bad)  
  43c034:	jns    0x43c0b4
  43c036:	(bad)  
  43c037:	jmp    DWORD PTR [ecx+0x0]
  43c03a:	retf   
  43c03b:	dec    DWORD PTR [edx+0x17ffff54]
  43c041:	adc    DWORD PTR [ebx],0xffffffff
  43c044:	loop   0x43c04b
  43c046:	(bad)  
  43c047:	inc    DWORD PTR [ecx]
  43c049:	int3   
  43c04a:	add    DWORD PTR [ebx-0x7c338cb8],0xf8ff56
  43c054:	mov    ebx,0x8cff0092
  43c059:	add    ah,bh
  43c05b:	adc    DWORD PTR [edx-0x200000a2],0xffffffff
  43c062:	jne    0x43c064
  43c064:	leave  
  43c065:	jne    0x43c066
  43c067:	(bad)  
  43c068:	cmp    eax,DWORD PTR [eax]
  43c06a:	push   edx
  43c06b:	add    BYTE PTR [ebx-0x7d],dl
  43c06e:	(bad)  
  43c06f:	jmp    FWORD PTR [esi]
  43c071:	jmp    edx
  43c073:	mov    DWORD PTR [eax+0x3a],edx
  43c076:	cmp    edi,0x2d
  43c079:	call   DWORD PTR [ecx-0x7d]
  43c07c:	fsub   QWORD PTR [edi+edi*8]
  43c07f:	add    BYTE PTR [esi-0x1],cl
  43c082:	jl     0x43c084
  43c084:	add    eax,0x3d00ff48
  43c089:	add    BYTE PTR ds:0xff6ac0cc,ah
  43c08f:	sbb    DWORD PTR [edx-0x1],0xffffffdf
  43c093:	jmp    FWORD PTR [ebx+0x4f830093]
  43c099:	mov    DWORD PTR [esi],edi
  43c09b:	add    BYTE PTR [ebp+0x62],cl
  43c09e:	or     esp,0x27
  43c0a1:	call   edi
  43c0a3:	push   DWORD PTR [ebx+edi*2-0x34]
  43c0a7:	add    BYTE PTR [ecx],ah
  43c0a9:	int3   
  43c0aa:	mov    es,WORD PTR [ebx+0x1665]
  43c0b0:	fcos   
  43c0b2:	add    BYTE PTR [ebx-0x82e7],0xcd
  43c0b9:	add    BYTE PTR [ecx+0xf12900],bl
  43c0bf:	(bad)  
  43c0c0:	js     0x43c0c1
  43c0c2:	test   BYTE PTR [eax],al
  43c0c4:	bound  edx,QWORD PTR [edi-0x8cff01]
  43c0ca:	add    DWORD PTR [eax],0xff839362
  43c0d0:	mov    edx,0x1700b2ff
  43c0d5:	xchg   ebx,eax
  43c0d6:	add    BYTE PTR [eax],al
  43c0d8:	cmc    
  43c0d9:	add    BYTE PTR [esi+0x0],cl
  43c0dc:	lock mov esi,0x83a600ff
  43c0e2:	dec    ebp
  43c0e3:	call   FWORD PTR [ebp+0x76]
  43c0e6:	mov    edi,edi
  43c0e8:	inc    DWORD PTR es:[esi]
  43c0eb:	mov    DWORD PTR [esi-0x5e],ecx
  43c0ee:	(bad)  
  43c0ef:	call   DWORD PTR [eax]
  43c0f1:	add    ch,bh
  43c0f3:	or     DWORD PTR [ecx-0x51],0xffffffcc
  43c0f7:	add    BYTE PTR [edx+0x8ff9eff],ah
  43c0fd:	or     eax,DWORD PTR [eax]
  43c0ff:	sub    DWORD PTR [ebp+0x7cff1089],0x43
  43c106:	(bad)  
  43c107:	(bad)  
  43c108:	jg     0x43c10a
  43c10a:	test   DWORD PTR [ebx+0xff14ea],0xffdeff3b
  43c114:	scas   al,BYTE PTR es:[edi]
  43c115:	cmp    DWORD PTR [ebx-0x53007900],eax
  43c11b:	(bad)  
  43c11c:	jp     0x43c0bc
  43c11e:	inc    DWORD PTR [ebx-0x7cfbffbd]
  43c124:	neg    BYTE PTR [edi+0x0]
  43c127:	call   DWORD PTR [ebx+eax*4-0x67]
  43c12b:	add    BYTE PTR [ebx],dh
  43c12d:	nop
  43c12e:	(bad)  
  43c12f:	call   FWORD PTR [edi+edi*8]
  43c132:	rol    BYTE PTR [ebx+0x838b0c],cl
  43c138:	add    cl,BYTE PTR [ecx-0x2fbdff6f]
  43c13e:	add    bh,bh
  43c140:	in     eax,0x0
  43c142:	je     0x43c0c7
  43c144:	stc    
  43c145:	(bad)  
  43c146:	inc    DWORD PTR [ebx+0xc7ff6b]
  43c14c:	lods   eax,DWORD PTR ds:[esi]
  43c14d:	xchg   esi,eax
  43c14e:	add    bh,bh
  43c150:	push   0x0
  43c152:	push   ebp
  43c153:	jmp    edx
  43c155:	rol    DWORD PTR [eax],1
  43c157:	push   DWORD PTR [ecx-0x7d]
  43c15a:	inc    DWORD PTR ss:[edx+0x7bff004b]
  43c161:	(bad)  
  43c162:	mov    esp,0xdc8dff
  43c167:	add    BYTE PTR [ebx],dh
  43c169:	add    BYTE PTR [edx-0x7d],bl
  43c16c:	cmp    ebp,edx
  43c16e:	inc    DWORD PTR [eax]
  43c170:	scas   eax,DWORD PTR es:[edi]
  43c171:	add    BYTE PTR [ebp-0x1],dl
  43c174:	jae    0x43c112
  43c176:	add    bh,bh
  43c178:	or     ah,0xf8
  43c17b:	inc    DWORD PTR [ecx+0x29ff8973]
  43c181:	add    BYTE PTR [ecx],bl
  43c183:	int3   
  43c184:	fcomi  st,st(3)
  43c186:	or     esp,0xffffffde
  43c189:	mov    ebp,edi
  43c18b:	int3   
  43c18c:	cmc    
  43c18d:	enter  0x0,0x63
  43c191:	mov    edx,edx
  43c193:	jmp    esi
  43c195:	xor    eax,0x83938900
  43c19a:	fadd   DWORD PTR [eax]
  43c19c:	neg    ebx
  43c19e:	int3   
  43c19f:	add    cl,cl
  43c1a1:	(bad)  
  43c1a2:	(bad)  
  43c1a4:	xchg   DWORD PTR [eax+eax*1+0x3cffc100],esp
  43c1ab:	add    dh,dl
  43c1ad:	adc    eax,0x8c0000
  43c1b2:	mov    ds:0xccd51e83,al
  43c1b7:	int3   
  43c1b8:	sbb    al,0x0
  43c1ba:	or     eax,0xcc71feff
  43c1bf:	add    bh,bh
  43c1c1:	add    BYTE PTR [edx+0x6393ff],cl
  43c1c7:	and    DWORD PTR [ecx],0xffffffff
  43c1ca:	jmp    DWORD PTR fs:[edx-0x6433ff56]
  43c1d1:	add    BYTE PTR [edx-0x1],dh
  43c1d4:	outs   dx,DWORD PTR ds:[esi]
  43c1d5:	mov    WORD PTR [eax],es
  43c1d7:	add    bh,bh
  43c1d9:	int3   
  43c1da:	mov    ds:0x2c09cc,al
  43c1df:	call   DWORD PTR [ebx]
  43c1e1:	call   FWORD PTR [ecx-0x7d]
  43c1e4:	cmp    eax,0x6fff8931
  43c1e9:	call   FWORD PTR [ebp-0xdfd200]
  43c1ef:	sub    DWORD PTR ds:0x6f837800,0xffffffdd
  43c1f6:	add    BYTE PTR [eax],al
  43c1f8:	dec    ecx
  43c1f9:	call   DWORD PTR [esi+0x0]
  43c1fc:	xchg   ebx,eax
  43c1fd:	ret    0xffff
  43c200:	push   ds
  43c201:	add    BYTE PTR [edx+0xacbbff],al
  43c207:	jmp    FWORD PTR [eax-0x34]
  43c20a:	pop    eax
  43c20b:	jmp    FWORD PTR [ebx]
  43c20d:	xor    ecx,esp
  43c20f:	add    BYTE PTR ds:0xb789fb00,ch
  43c215:	or     ah,cl
  43c217:	add    cl,bl
  43c219:	int3   
  43c21a:	aad    0x83
  43c21c:	mov    ds:0x2e00ffa0,al
  43c221:	jmp    DWORD PTR [ebx-0x34]
  43c224:	and    BYTE PTR [eax+eax*1+0x0],dh
  43c228:	fiadd  WORD PTR [eax]
  43c22a:	mov    edi,edi
  43c22c:	jnp    0x43c278
  43c22e:	inc    DWORD PTR [eax]
  43c230:	sub    al,BYTE PTR [eax]
  43c232:	dec    ebx
  43c233:	mov    DWORD PTR [esi*4-0x137d00],esi
  43c23a:	(bad)  
  43c23c:	cmp    DWORD PTR [edi],esp
  43c23e:	(bad)  
  43c23f:	push   DWORD PTR [eax]
  43c241:	push   DWORD PTR [ecx+0xeb1400]
  43c247:	add    al,bl
  43c249:	add    DWORD PTR [edi],0xffffffff
  43c24c:	sub    al,0x89
  43c24e:	add    BYTE PTR [eax],al
  43c250:	mov    al,ds:0x990040ff
  43c255:	jne    0x43c257
  43c257:	int3   
  43c258:	mov    ds:0x89ffd389,al
  43c25d:	mov    bl,0x0
  43c25f:	jmp    FWORD PTR [ecx]
  43c261:	call   esp
  43c263:	call   FWORD PTR [edi]
  43c265:	adc    bh,bh
  43c267:	dec    ecx
  43c269:	add    dh,dh
  43c26b:	mov    DWORD PTR [edx+esi*4],ebp
  43c26e:	add    DWORD PTR [eax],0x58
  43c271:	call   FWORD PTR [ebp+0x0]
  43c274:	adc    ebx,DWORD PTR [eax-0x7c3c0100]
  43c27a:	cli    
  43c27b:	mov    DWORD PTR [edx],edx
  43c27d:	dec    edi
  43c27e:	add    bh,bh
  43c280:	mov    esi,0x89ff8689
  43c285:	sti    
  43c286:	add    BYTE PTR [eax],al
  43c288:	or     ah,cl
  43c28a:	mov    edi,0x83208aff
  43c28f:	jmp    FWORD PTR [edx-0x4c005c01]
  43c295:	xor    al,0x83
  43c297:	mov    DWORD PTR [esi-0x7d],esi
  43c29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c29b:	inc    esp
  43c29d:	pop    esi
  43c29e:	(bad)  
  43c29f:	jmp    FWORD PTR [ebp+0x0]
  43c2a2:	lods   al,BYTE PTR ds:[esi]
  43c2a3:	add    BYTE PTR [ebx-0x18],ah
  43c2a6:	inc    DWORD PTR [eax]
  43c2a8:	(bad)  
  43c2aa:	dec    DWORD PTR [ecx-0x3e08]
  43c2b0:	and    al,BYTE PTR [eax]
  43c2b2:	pop    eax
  43c2b3:	add    al,cl
  43c2b5:	add    BYTE PTR es:[eax],al
  43c2b8:	cmp    al,0x0
  43c2ba:	cmp    DWORD PTR [eax],eax
  43c2bc:	pop    esi
  43c2bd:	or     edi,edi
  43c2bf:	dec    DWORD PTR [edx+0x0]
  43c2c2:	mov    dh,0xff
  43c2c4:	inc    edx
  43c2c5:	cmp    eax,0xff400000
  43c2ca:	cmp    edi,edi
  43c2cc:	f2xm1  
  43c2ce:	mov    DWORD PTR [eax],eax
  43c2d0:	(bad)  
  43c2d2:	out    dx,al
  43c2d3:	cmp    esi,0x1a
  43c2d6:	add    bh,bh
  43c2d8:	int    0xff
  43c2da:	pop    edi
  43c2db:	sbb    DWORD PTR [ebp-0x597cffa9],0xffffffff
  43c2e2:	lock inc ebx
  43c2e5:	add    BYTE PTR [eax],0x0
  43c2e8:	test   DWORD PTR [eax],eax
  43c2ea:	popf   
  43c2eb:	dec    DWORD PTR [ecx-0x7]
  43c2ee:	add    BYTE PTR [ebx-0x336f00e7],al
  43c2f4:	sbb    BYTE PTR [ecx],ch
  43c2f6:	int3   
  43c2f7:	int3   
  43c2f8:	cld    
  43c2f9:	add    al,bh
  43c2fb:	(bad)  
  43c2fc:	in     eax,dx
  43c2fd:	adc    al,0x0
  43c2ff:	add    BYTE PTR [ecx+0x0],ah
  43c302:	push   ecx
  43c303:	dec    DWORD PTR [esp+edx*4]
  43c306:	mov    edi,edi
  43c308:	enter  0x19ff,0xff
  43c30c:	and    edx,esi
  43c30e:	add    ah,cl
  43c310:	push   esp
  43c311:	add    cl,bl
  43c313:	int3   
  43c314:	(bad)  
  43c315:	sbb    al,0xff
  43c317:	add    BYTE PTR [ecx],bl
  43c319:	call   FWORD PTR [edx+0x177a00]
  43c31f:	mov    DWORD PTR ds:0x800e6cc,esi
  43c325:	hlt    
  43c326:	add    bh,bh
  43c328:	dec    ebp
  43c329:	jmp    DWORD PTR [ecx-0x76196400]
  43c32f:	dec    DWORD PTR [ebx]
  43c331:	add    BYTE PTR [eax-0x920500],ch
  43c337:	add    BYTE PTR [ecx-0x1],dh
  43c33a:	inc    esi
  43c33b:	add    BYTE PTR [ebp+eax*1-0x2fff77],dl
  43c342:	jbe    0x43c343
  43c344:	ja     0x43c308
  43c346:	add    bh,bh
  43c348:	nop
  43c349:	add    BYTE PTR [edi],ah
  43c34b:	add    al,dl
  43c34d:	std    
  43c34e:	(bad)  
  43c34f:	jmp    DWORD PTR [eax+eax*1]
  43c352:	rol    DWORD PTR [eax],cl
  43c354:	xchg   DWORD PTR [esp+ecx*8-0x1],edi
  43c358:	ret    
  43c359:	jmp    FWORD PTR [eax+0x0]
  43c35c:	mov    WORD PTR [ebp+0x0],gs
  43c35f:	add    BYTE PTR [ebx+0x0],bl
  43c362:	test   ah,0x59
  43c365:	push   eax
  43c366:	add    DWORD PTR [ebx+0x6f894b],0xffffff82
  43c36d:	xchg   ebx,eax
  43c36e:	add    BYTE PTR [eax],al
  43c370:	mov    dh,0x0
  43c372:	lds    eax,FWORD PTR [ebx+0x8641]
  43c378:	inc    eax
  43c379:	call   eax
  43c37b:	(bad)  
  43c37c:	stc    
  43c37d:	push   cs
  43c37e:	inc    DWORD PTR [eax]
  43c380:	lds    eax,FWORD PTR [eax]
  43c382:	fadd   QWORD PTR [eax]
  43c384:	lahf   
  43c385:	stc    
  43c386:	(bad)  
  43c387:	jmp    DWORD PTR [ebx-0x1]
  43c38a:	mov    bh,0x0
  43c38c:	inc    ebp
  43c38d:	aas    
  43c38e:	inc    DWORD PTR [eax]
  43c390:	out    dx,al
  43c391:	dec    DWORD PTR [edi-0x7d]
  43c394:	lds    esi,FWORD PTR [ebx+eax*4+0x0]
  43c398:	adc    eax,0xd1ff5700
  43c39d:	fild   DWORD PTR [eax]
  43c39f:	jmp    FWORD PTR [edi-0x1c760a77]
  43c3a5:	lahf   
  43c3a6:	mov    edi,edi
  43c3a8:	pop    edx
  43c3a9:	call   FWORD PTR [ecx+0x8cd700]
  43c3af:	call   DWORD PTR [ebx+0x0]
  43c3b2:	sub    eax,DWORD PTR [eax]
  43c3b4:	inc    esp
  43c3b5:	in     al,dx
  43c3b6:	int3   
  43c3b7:	(bad)  
  43c3b8:	(bad)  
  43c3ba:	ins    BYTE PTR es:[edi],dx
  43c3bb:	cmp    esp,0x14
  43c3be:	add    DWORD PTR [eax],0xffffffef
  43c3c1:	or     eax,0xffffffff
  43c3c4:	dec    edi
  43c3c5:	ds (bad) 
  43c3c7:	inc    esi
  43c3c9:	add    al,al
  43c3cb:	add    cl,dh
  43c3cd:	jno    0x43c3ce
  43c3cf:	jmp    DWORD PTR [edi]
  43c3d1:	add    BYTE PTR [edi-0x1],bh
  43c3d4:	mov    ebx,0xbe83ff03
  43c3d9:	add    BYTE PTR [ebp+0x828eff],bl
  43c3df:	call   FWORD PTR [ebp+0x0]
  43c3e2:	sbb    eax,0x16fd83
  43c3e7:	add    ch,al
  43c3e9:	add    dh,dl
  43c3eb:	call   DWORD PTR [ecx+0x3a]
  43c3ee:	cmp    edi,0x23
  43c3f1:	inc    DWORD PTR ds:0xff9c2eff
  43c3f7:	jmp    esi
  43c3f9:	add    BYTE PTR [ebx+0x1597ff],ch
  43c3ff:	dec    DWORD PTR [ebp+0x52896fff]
  43c405:	repz (bad) 
  43c407:	(bad)  
  43c408:	(bad)  
  43c409:	(bad)  
  43c40a:	cmp    edi,edi
  43c40c:	push   esp
  43c40d:	(bad)  
  43c40e:	(bad)  
  43c40f:	push   DWORD PTR [esi]
  43c411:	(bad)  
  43c412:	jl     0x43c413
  43c414:	sub    edi,DWORD PTR [ebx+0x57ffff]
  43c41a:	cmp    edi,0xff83ac78
  43c420:	outs   dx,DWORD PTR ds:[esi]
  43c421:	int3   
  43c422:	add    BYTE PTR [eax],0xc2
  43c425:	ret    
  43c426:	cmp    edi,0xffffffdd
  43c429:	add    BYTE PTR [ebp-0x1],cl
  43c42c:	stos   DWORD PTR es:[edi],eax
  43c42d:	or     bh,bh
  43c42f:	add    BYTE PTR [edi+edi*8],ch
  43c432:	xchg   esi,eax
  43c433:	add    BYTE PTR [edi],al
  43c435:	cmp    bh,bh
  43c437:	add    BYTE PTR [edi+edi*8],bl
  43c43a:	cmp    al,0xff
  43c43c:	sbb    DWORD PTR [ebp-0x393301],edi
  43c442:	in     eax,dx
  43c443:	call   FWORD PTR [edi+0x5a008334]
  43c449:	(bad)  
  43c44a:	jp     0x43c44c
  43c44c:	js     0x43c473
  43c44e:	inc    DWORD PTR [ebx-0x277ca0]
  43c454:	sub    BYTE PTR [edi-0xdd7c01],bh
  43c45a:	push   esp
  43c45b:	add    BYTE PTR [ecx+0x60ff004a],ch
  43c461:	add    DWORD PTR [esi+0x0],0x3b
  43c465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c466:	mov    edi,edi
  43c468:	lods   eax,DWORD PTR ds:[esi]
  43c469:	add    BYTE PTR [ebx],ah
  43c46b:	add    BYTE PTR [ecx-0x7b00ffac],bl
  43c471:	(bad)  
  43c472:	jmp    0x2900:0xff34baff
  43c479:	jmp    FWORD PTR [eax-0x34]
  43c47c:	gs dec edx
  43c47e:	(bad)  
  43c47f:	jmp    esp
  43c481:	call   eax
  43c483:	sbb    DWORD PTR [edi],0x57
  43c486:	add    BYTE PTR [eax],al
  43c488:	push   ebp
  43c489:	int3   
  43c48a:	stc    
  43c48b:	add    BYTE PTR [edx+0x6c00ff8e],ch
  43c491:	mov    ecx,ebx
  43c493:	add    BYTE PTR [ecx],dh
  43c495:	imul   eax,DWORD PTR [ebx-0x78004477],0xcfa0cc
  43c49f:	call   FWORD PTR [ecx]
  43c4a1:	add    BYTE PTR [ebp-0xdf9801],dl
  43c4a7:	jmp    FWORD PTR [ebp-0x1800ff01]
  43c4ad:	cmp    bh,0x0
  43c4b0:	popf   
  43c4b1:	call   DWORD PTR [eax]
  43c4b3:	dec    DWORD PTR [edi+ecx*8+0x0]
  43c4b7:	jmp    DWORD PTR [ebp-0x7d]
  43c4ba:	out    0x0,eax
  43c4bc:	je     0x43c4b0
  43c4be:	add    BYTE PTR [eax],al
  43c4c0:	ror    ah,0xb4
  43c4c3:	call   DWORD PTR [edx+ecx*4-0xccff01]
  43c4ca:	adc    bh,bh
  43c4cc:	icebp  
  43c4cd:	mov    esi,0xff96ff00
  43c4d2:	mov    ecx,0xff103aff
  43c4d7:	mov    DWORD PTR [ebx+0x49cc54ff],ebp
  43c4dd:	in     eax,0x0
  43c4df:	mov    DWORD PTR [ebx+eax*4+0x3e],edi
  43c4e3:	jmp    DWORD PTR [ebp+eax*4-0x1]
  43c4e7:	(bad)  
  43c4e8:	clc    
  43c4e9:	(bad)  
  43c4ea:	jmp    0x43c4eb
  43c4ec:	aam    0x4b
  43c4ee:	(bad)  
  43c4ef:	inc    DWORD PTR [esi-0x7d]
  43c4f2:	es push edi
  43c4f5:	add    al,BYTE PTR [eax]
  43c4f7:	call   DWORD PTR [edx-0x1]
  43c4fa:	add    DWORD PTR [eax],0x6bd1
  43c500:	ins    DWORD PTR es:[edi],dx
  43c501:	add    BYTE PTR [ebx-0xdd4f00],bl
  43c507:	add    dl,cl
  43c509:	mov    DWORD PTR [eax-0x1],esp
  43c50c:	mov    eax,0x2e00ffb5
  43c511:	dec    edi
  43c513:	add    BYTE PTR [ebx+ebp*8],dl
  43c516:	inc    DWORD PTR [eax]
  43c518:	mov    BYTE PTR [eax],0x8d
  43c51b:	add    dl,bh
  43c51d:	xor    BYTE PTR [eax],al
  43c51f:	int3   
  43c520:	loopne 0x43c521
  43c522:	jmp    FWORD PTR ds:[ebp+eiz*2+0xa90000]
  43c52a:	lods   eax,DWORD PTR ds:[esi]
  43c52b:	int3   
  43c52c:	or     al,0x1e
  43c52e:	(bad)  
  43c52f:	call   DWORD PTR [edx-0x1]
  43c532:	push   esp
  43c533:	call   FWORD PTR [eax+0x37]
  43c536:	add    bh,bh
  43c538:	lods   eax,DWORD PTR ds:[esi]
  43c539:	add    BYTE PTR [esi],ah
  43c53b:	cmp    DWORD PTR [edi+eax*1-0x9d007d],0xb
  43c543:	add    BYTE PTR [ecx-0x1fff00b2],ch
  43c549:	sub    DWORD PTR [eax+0xf377ff],0x0
  43c550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c551:	add    ch,bh
  43c553:	jmp    FWORD PTR [esi-0x6b]
  43c556:	add    bh,bh
  43c558:	cmp    DWORD PTR [eax],eax
  43c55a:	mov    al,ds:0xfffa3100
  43c55f:	jmp    DWORD PTR [eax+eax*1+0x5a69ff09]
  43c566:	add    DWORD PTR [eax],0xffffffdc
  43c569:	int3   
  43c56a:	push   0xffffffff
  43c56c:	popf   
  43c56d:	inc    edi
  43c56e:	inc    DWORD PTR [ebx-0xe80071]
  43c574:	mov    ah,0x19
  43c576:	int3   
  43c577:	add    dh,al
  43c579:	push   DWORD PTR [ecx+0x0]
  43c57c:	inc    dh
  43c57e:	(bad)  
  43c57f:	call   FWORD PTR [eax]
  43c581:	mov    DWORD PTR ds:0xbd8100,edx
  43c587:	(bad)  
  43c588:	fiadd  WORD PTR [ebx-0x6cadff90]
  43c58e:	inc    DWORD PTR [eax]
  43c590:	sub    edi,edi
  43c592:	xchg   esi,eax
  43c593:	mov    DWORD PTR [edi],ecx
  43c595:	push   ds
  43c596:	(bad)  
  43c597:	call   DWORD PTR [ecx+ecx*4-0x6]
  43c59b:	call   DWORD PTR [ebp-0x313300a8]
  43c5a1:	add    ah,bh
  43c5a3:	add    BYTE PTR [eax],al
  43c5a5:	mov    ds:0x834fff89,al
  43c5aa:	inc    BYTE PTR [eax]
  43c5ac:	mov    ebp,DWORD PTR [ecx-0x1]
  43c5af:	int3   
  43c5b0:	jns    0x43c5b2
  43c5b2:	ins    BYTE PTR es:[edi],dx
  43c5b3:	call   DWORD PTR [ecx-0x3b]
  43c5b6:	inc    DWORD PTR [eax]
  43c5b8:	outs   dx,BYTE PTR ds:[esi]
  43c5b9:	add    BYTE PTR [ebp-0x477c77],ah
  43c5bf:	inc    DWORD PTR [ebp-0x5900637d]
  43c5c5:	loopne 0x43c5c7
  43c5c7:	jmp    FWORD PTR [edi]
  43c5c9:	mov    DWORD PTR [edi],ebx
  43c5cb:	add    al,cl
  43c5cd:	xor    edi,edi
  43c5cf:	add    BYTE PTR [edx-0x7d],ch
  43c5d2:	inc    esp
  43c5d3:	add    BYTE PTR [ebx],cl
  43c5d5:	push   0x0
  43c5d7:	add    dh,dl
  43c5d9:	inc    edx
  43c5db:	dec    DWORD PTR [edx+0x68]
  43c5de:	int3   
  43c5df:	call   FWORD PTR [ecx+0x0]
  43c5e2:	inc    edi
  43c5e3:	add    BYTE PTR [ecx],ch
  43c5e5:	xchg   esp,eax
  43c5e6:	mov    edi,edi
  43c5e8:	loop   0x43c5e9
  43c5ea:	dec    ebx
  43c5eb:	inc    esi
  43c5ed:	and    bh,bh
  43c5ef:	dec    DWORD PTR ds:0x6a89aa00
  43c5f5:	jne    0x43c5f7
  43c5f7:	int3   
  43c5f8:	mov    al,ds:0xfcff2c00
  43c5fd:	dec    ah
  43c5ff:	jmp    DWORD PTR [edi+edi*8+0x53150091]
  43c606:	inc    DWORD PTR [ebx-0x337a00a7]
  43c60c:	nop
  43c60d:	bound  eax,QWORD PTR [eax]
  43c60f:	add    al,ch
  43c611:	int3   
  43c612:	ds adc edx,0x52
  43c616:	dec    esp
  43c618:	mov    ah,0xff
  43c61a:	retf   
  43c61b:	(bad)  
  43c61c:	cmp    BYTE PTR [ecx],dl
  43c61e:	int3   
  43c61f:	call   DWORD PTR [edi-0x1]
  43c622:	out    0x0,eax
  43c624:	popa   
  43c625:	or     eax,0xffe0cccc
  43c62a:	fiadd  WORD PTR [eax]
  43c62c:	sbb    DWORD PTR [edi+0xfffff],eax
  43c632:	sar    edi,0xea
  43c635:	ins    BYTE PTR es:[edi],dx
  43c636:	(bad)  
  43c637:	inc    DWORD PTR [edi]
  43c639:	(bad)  
  43c63a:	jle    0x43c63b
  43c63c:	jo     0x43c63b
  43c63e:	(bad)  
  43c63f:	push   DWORD PTR [edi+0x1400b5cc]
  43c645:	sar    bh,cl
  43c647:	add    bh,bl
  43c649:	call   edi
  43c64b:	add    BYTE PTR [ebx+ecx*1-0x64ff7d],al
  43c652:	adc    eax,0x5adb00
  43c657:	mov    eax,ebp
  43c659:	inc    DWORD PTR [eax+0x6e3983]
  43c65f:	and    DWORD PTR [ecx],0xffffffff
  43c662:	(bad)  
  43c663:	jmp    DWORD PTR [edx-0x79]
  43c666:	add    bh,bh
  43c668:	nop
  43c669:	(bad)  
  43c66a:	call   0x83f239f2
  43c66f:	call   DWORD PTR [ebx-0x1]
  43c672:	xchg   BYTE PTR [eax],al
  43c674:	lock je 0x43c676
  43c677:	(bad)  
  43c678:	fdivp  st(7),st
  43c67a:	scas   eax,DWORD PTR es:[edi]
  43c67b:	int3   
  43c67c:	cmp    dl,bh
  43c67e:	add    BYTE PTR [eax],al
  43c680:	fwait
  43c681:	sbb    DWORD PTR [ebx-0x77],0xffffffc1
  43c685:	out    dx,eax
  43c686:	add    bh,bh
  43c688:	icebp  
  43c689:	add    BYTE PTR [ecx],bh
  43c68b:	inc    DWORD PTR [edi+0x7f]
  43c68e:	(bad)  
  43c68f:	jmp    edx
  43c691:	sbb    edx,0xffffffcc
  43c694:	test   DWORD PTR [ebx],esi
  43c696:	add    BYTE PTR [eax],al
  43c698:	adc    eax,DWORD PTR [eax]
  43c69a:	sbb    DWORD PTR [eax],eax
  43c69c:	mov    BYTE PTR [ebp+0x0],bl
  43c69f:	or     edx,0x0
  43c6a2:	jg     0x43c62d
  43c6a4:	push   ds
  43c6a5:	ret    0x83
  43c6a8:	pop    ss
  43c6a9:	(bad)  
  43c6aa:	in     al,dx
  43c6ab:	cmp    DWORD PTR [ecx-0x6eff7c34],0xffffffcc
  43c6b2:	push   0x0
  43c6b4:	mov    edx,0xbcff00e9
  43c6b9:	add    BYTE PTR ds:0xff193800,al
  43c6bf:	call   DWORD PTR [ebx+0x0]
  43c6c2:	cmp    eax,0xff521083
  43c6c7:	jmp    esi
  43c6c9:	call   ebp
  43c6cb:	jmp    FWORD PTR [esi+0x2b]
  43c6ce:	add    BYTE PTR [eax],al
  43c6d0:	xchg   ebx,eax
  43c6d1:	(bad)  
  43c6d2:	cli    
  43c6d3:	int3   
  43c6d4:	cwde   
  43c6d5:	jg     0x43c6d6
  43c6d7:	add    BYTE PTR ds:0x7ffefff,al
  43c6dd:	loop   0x43c6de
  43c6df:	adc    DWORD PTR [ecx],0xffffff83
  43c6e2:	adc    BYTE PTR [ecx+0xb06a],cl
  43c6e8:	push   esi
  43c6e9:	push   DWORD PTR [ebx+0x7211ff]
  43c6ef:	add    BYTE PTR [eax],ah
  43c6f1:	jmp    FWORD PTR [ebp+0x40ca00]
  43c6f7:	dec    DWORD PTR [eax-0x32000077]
  43c6fd:	add    DWORD PTR [ebx+0x7e00fdff],0xff88d100
  43c707:	add    BYTE PTR [esi+0x0],ah
  43c70a:	in     al,dx
  43c70b:	sub    DWORD PTR [eax],0x39
  43c70e:	inc    DWORD PTR [ebx+0x7aff98]
  43c714:	lods   al,BYTE PTR ds:[esi]
  43c715:	xchg   edi,edi
  43c717:	jmp    FWORD PTR [eax+eax*1]
  43c71a:	adc    bh,bh
  43c71c:	fimul  DWORD PTR [eax]
  43c71e:	inc    DWORD PTR [eax]
  43c720:	adc    al,0xff
  43c722:	push   ss
  43c723:	add    BYTE PTR [esi],cl
  43c725:	call   0x8380:0xff6f8900
  43c72c:	inc    edi
  43c72d:	dec    edi
  43c72e:	cmp    edi,0xffffffa7
  43c731:	call   DWORD PTR [edx-0x3d7b34]
  43c737:	jmp    DWORD PTR [edx]
  43c739:	dec    esi
  43c73b:	mov    DWORD PTR [ecx-0x68],ebp
  43c73e:	add    BYTE PTR [eax],al
  43c740:	jb     0x43c741
  43c742:	add    eax,DWORD PTR [eax]
  43c744:	sahf   
  43c745:	mov    al,ds:0xff0a0000
  43c74a:	and    eax,DWORD PTR [eax]
  43c74c:	sub    BYTE PTR [ebx-0xd10000],dl
  43c752:	arpl   di,di
  43c754:	fwait
  43c755:	pop    edx
  43c756:	or     esp,0x5e
  43c759:	jmp    DWORD PTR [esi-0x7cafa301]
  43c75f:	int3   
  43c760:	arpl   di,di
  43c762:	pop    ecx
  43c763:	jmp    FWORD PTR [edx+eax*8]
  43c766:	add    BYTE PTR [eax],al
  43c768:	rol    DWORD PTR [eax],0x29
  43c76b:	mov    DWORD PTR [edx-0x75],edi
  43c76e:	inc    DWORD PTR [eax]
  43c770:	jle    0x43c772
  43c772:	dec    esi
  43c773:	push   DWORD PTR [ecx+0x48ffff43]
  43c779:	jmp    FWORD PTR [edi+edi*8-0x7600826c]
  43c780:	push   ds
  43c781:	inc    DWORD PTR [eax-0x1]
  43c784:	jecxz  0x43c708
  43c786:	dec    DWORD PTR [ecx-0x7cc37cf3]
  43c78c:	ja     0x43c7e3
  43c78e:	(bad)  
  43c78f:	jmp    FWORD PTR [ecx+0x27006100]
  43c795:	out    0xff,al
  43c797:	call   FWORD PTR [ebp-0x7d]
  43c79a:	xchg   ebx,eax
  43c79b:	call   ebx
  43c79d:	xchg   DWORD PTR [eax],eax
  43c79f:	sub    DWORD PTR [edx-0x72005400],0xffffffc4
  43c7a6:	mov    edi,edi
  43c7a8:	jg     0x43c7aa
  43c7aa:	dec    esp
  43c7ab:	add    BYTE PTR ds:0xc6ff89cd,bh
  43c7b1:	mov    eax,esp
  43c7b3:	jmp    DWORD PTR [edx]
  43c7b5:	add    BYTE PTR [eax],0xcc
  43c7b8:	stos   DWORD PTR es:[edi],eax
  43c7b9:	add    BYTE PTR [eax-0xbbf27d],al
  43c7bf:	(bad)  
  43c7c0:	clc    
  43c7c1:	add    BYTE PTR [ecx],cl
  43c7c3:	inc    DWORD PTR [esi-0x42]
  43c7c6:	(bad)  
  43c7c7:	call   DWORD PTR [edx]
  43c7c9:	add    bh,dl
  43c7cb:	int3   
  43c7cc:	pushf  
  43c7cd:	mov    eax,0xff0affff
  43c7d2:	les    eax,FWORD PTR [eax]
  43c7d4:	sbb    eax,ebx
  43c7d6:	add    BYTE PTR [eax],al
  43c7d8:	mov    ebx,0xc1003800
  43c7dd:	es (bad) 
  43c7df:	call   FWORD PTR [eax-0x77]
  43c7e2:	call   0x843300e7
  43c7e7:	add    edx,0xffffffff
  43c7ea:	push   ds
  43c7eb:	add    cl,al
  43c7ed:	cld    
  43c7ee:	dec    DWORD PTR [ecx-0xb6ff8b]
  43c7f4:	adc    eax,0xedff835d
  43c7f9:	add    BYTE PTR [ebx-0x7c9d6e01],bl
  43c7ff:	jmp    DWORD PTR [esi-0x1]
  43c802:	jl     0x43c804
  43c804:	dec    edx
  43c805:	cmp    al,BYTE PTR [eax]
  43c807:	add    dh,ah
  43c809:	push   DWORD PTR [edx-0x7d]
  43c80c:	int3   
  43c80d:	stos   DWORD PTR es:[edi],eax
  43c80e:	add    BYTE PTR [eax],al
  43c810:	xchg   ecx,eax
  43c811:	int3   
  43c812:	mov    dl,0xff
  43c814:	adc    BYTE PTR [eax+eax*1],dh
  43c817:	jmp    DWORD PTR [eax+eax*1-0x19]
  43c81b:	add    BYTE PTR [esi-0x66],ah
  43c81e:	add    BYTE PTR [ebx-0x500f5],al
  43c824:	inc    ebx
  43c825:	test   DWORD PTR [ebx+0x5ecc41ff],0xa84bff
  43c82f:	sub    DWORD PTR [edx+0x0],0x61
  43c833:	(bad)  
  43c834:	cmp    al,0xce
  43c836:	(bad)  
  43c837:	inc    ebx
  43c839:	mov    ebx,ecx
  43c83b:	(bad)  
  43c83c:	cli    
  43c83d:	mov    esi,0xccc683ff
  43c842:	mov    ds:0xefb000,eax
  43c847:	mov    eax,edi
  43c849:	mov    DWORD PTR [eax+eax*1+0x83837c],edx
  43c850:	sub    eax,0xae007483
  43c855:	sub    eax,DWORD PTR [eax]
  43c857:	jmp    eax
  43c859:	inc    DWORD PTR [ebx+0xd28eff]
  43c85f:	inc    DWORD PTR [edi-0x2b00db01]
  43c865:	scas   al,BYTE PTR es:[edi]
  43c866:	dec    DWORD PTR [ecx+0xdff64]
  43c86c:	icebp  
  43c86d:	xchg   edi,edi
  43c86f:	mov    eax,eax
  43c871:	int3   
  43c872:	fadd   DWORD PTR [ebx+0x89eee6]
  43c878:	xchg   ecx,eax
  43c879:	int3   
  43c87a:	mov    bh,0x0
  43c87c:	loop   0x43c8ea
  43c87e:	add    bh,bh
  43c880:	(bad)  
  43c882:	push   ebx
  43c883:	cmp    DWORD PTR [eax-0x3d],0xffffffcc
  43c887:	(bad)  
  43c888:	jmp    0x836b:0x3d005e00
  43c88f:	add    BYTE PTR [ebp-0x507c3901],dh
  43c895:	or     al,BYTE PTR [ebx+0x7b00e089]
  43c89b:	add    DWORD PTR [ebp+0x27],0x0
  43c89f:	call   DWORD PTR [edx+0x0]
  43c8a2:	cld    
  43c8a3:	push   DWORD PTR [edi]
  43c8a5:	mov    dh,0xff
  43c8a7:	(bad)  
  43c8a8:	in     al,dx
  43c8a9:	add    BYTE PTR [edi-0x1],bh
  43c8ac:	int3   
  43c8ad:	popf   
  43c8ae:	add    BYTE PTR [eax],al
  43c8b0:	rol    DWORD PTR [eax],1
  43c8b2:	nop
  43c8b3:	int3   
  43c8b4:	and    al,0xef
  43c8b6:	inc    DWORD PTR [eax]
  43c8b8:	inc    ebp
  43c8b9:	add    BYTE PTR [edi+0x0],bl
  43c8bc:	pop    esp
  43c8bd:	mov    ecx,0xffc1cc00
  43c8c2:	sbb    eax,0x98f9ff
  43c8c7:	add    bh,cl
  43c8c9:	add    BYTE PTR [edi+edi*8+0x0],ah
  43c8cd:	lods   eax,DWORD PTR ds:[esi]
  43c8ce:	add    BYTE PTR [eax],al
  43c8d0:	inc    eax
  43c8d1:	add    BYTE PTR [edi+edi*8+0x23],al
  43c8d5:	test   al,0xff
  43c8d7:	int3   
  43c8d8:	je     0x43c8d9
  43c8da:	pop    eax
  43c8db:	push   edx
  43c8dd:	in     eax,dx
  43c8de:	inc    DWORD PTR [ebx-0xea0037]
  43c8e4:	loop   0x43c8bc
  43c8e6:	inc    DWORD PTR [ebx-0xdd0045]
  43c8ec:	shr    DWORD PTR [esi-0xce7700],0x9
  43c8f3:	push   DWORD PTR [esi+0x24]
  43c8f6:	(bad)  
  43c8f7:	jmp    FWORD PTR [ebx+eax*4+0x9]
  43c8fb:	inc    DWORD PTR [ebx-0x3b7cff31]
  43c901:	call   FWORD PTR [edi+edi*8-0x33ffe7db]
  43c908:	jo     0x43c909
  43c90a:	loope  0x43c90c
  43c90c:	inc    edi
  43c90d:	in     al,dx
  43c90e:	add    BYTE PTR [ecx-0xec004c],cl
  43c914:	test   al,0x9a
  43c916:	(bad)  
  43c917:	call   DWORD PTR [edi+edi*8-0x60db007a]
  43c91e:	dec    DWORD PTR [ecx-0x793328]
  43c924:	mov    BYTE PTR [ecx],dh
  43c926:	add    BYTE PTR [eax],al
  43c928:	inc    esp
  43c929:	add    BYTE PTR [eax+eax*1+0x19],ch
  43c92d:	int    0x83
  43c92f:	dec    ebp
  43c931:	inc    DWORD PTR [esi]
  43c933:	push   DWORD PTR [eax+0x51]
  43c936:	add    bh,bh
  43c938:	sbb    al,0x0
  43c93a:	inc    edx
  43c93b:	sbb    DWORD PTR [esi],0x5c
  43c93e:	add    DWORD PTR [eax],0xc
  43c941:	call   esp
  43c943:	call   DWORD PTR [edx+eiz*1]
  43c946:	int3   
  43c947:	add    BYTE PTR ds:0x30ffa300,cl
  43c94d:	or     al,BYTE PTR [eax]
  43c94f:	call   esi
  43c951:	add    ebp,0xffffffff
  43c954:	int    0xc1
  43c956:	add    BYTE PTR [eax],al
  43c958:	int3   
  43c959:	jmp    FWORD PTR [ecx]
  43c95b:	add    bh,ch
  43c95d:	idiv   edi
  43c95f:	push   DWORD PTR [ebx-0x1]
  43c962:	mov    bh,bh
  43c964:	aam    0x7e
  43c966:	add    BYTE PTR [eax],al
  43c968:	call   0x4043176c
  43c96d:	xchg   ecx,eax
  43c96e:	(bad)  
  43c96f:	inc    DWORD PTR [esi-0x77]
  43c972:	fwait
  43c973:	add    BYTE PTR [eax+0x4dff89c1],ch
  43c979:	call   DWORD PTR [edx-0x7d]
  43c97c:	add    ecx,DWORD PTR [esi-0x7d]
  43c97f:	add    BYTE PTR [ecx-0x1],cl
  43c982:	and    cl,ah
  43c984:	jae    0x43c958
  43c986:	(bad)  
  43c987:	(bad)  
  43c988:	std    
  43c989:	add    BYTE PTR [esi],bh
  43c98b:	sub    DWORD PTR [eax+0x1eff004a],0xffffffff
  43c992:	jp     0x43c994
  43c994:	and    DWORD PTR [ebx-0x1b0001],ecx
  43c99a:	inc    DWORD PTR [eax]
  43c99c:	xor    DWORD PTR [edi+edi*8-0x6a7c9a01],ecx
  43c9a3:	mov    esi,edi
  43c9a5:	enter  0xcc89,0x7f
  43c9a9:	call   DWORD PTR [ecx-0x1]
  43c9ac:	push   edx
  43c9ad:	mov    bl,0xff
  43c9af:	add    dh,cl
  43c9b1:	and    DWORD PTR [edx-0x1],0x45
  43c9b5:	push   ebp
  43c9b6:	mov    edi,edi
  43c9b8:	push   ds
  43c9b9:	int3   
  43c9ba:	cli    
  43c9bb:	(bad)  
  43c9bc:	mov    edx,0xaacc0014
  43c9c1:	push   DWORD PTR [ebp-0x1]
  43c9c4:	or     ah,bl
  43c9c6:	(bad)  
  43c9c7:	dec    DWORD PTR [ebp+0x1cff4689]
  43c9cd:	xor    eax,0xff2e8300
  43c9d2:	(bad)  
  43c9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c9d5:	sub    al,0x83
  43c9d7:	inc    DWORD PTR [edi]
  43c9d9:	add    BYTE PTR [ebp-0x76dfae01],ah
  43c9df:	add    cl,al
  43c9e1:	add    BYTE PTR [ecx+0x0],cl
  43c9e4:	repnz mov esp,0xff4e83ff
  43c9ea:	push   edi
  43c9eb:	add    BYTE PTR [edx],ch
  43c9ed:	jo     0x43c9ee
  43c9ef:	add    BYTE PTR [ebp-0x48769e01],dl
  43c9f5:	sbb    BYTE PTR [eax],al
  43c9f7:	jmp    DWORD PTR [edx-0x5e006901]
  43c9fd:	pusha  
  43c9fe:	dec    esp
  43ca00:	js     0x43ca01
  43ca02:	stc    
  43ca03:	jmp    DWORD PTR [esi+0x47838366]
  43ca09:	add    al,ch
  43ca0b:	jmp    DWORD PTR [ecx-0x69ff00c0]
  43ca11:	jmp    eax
  43ca13:	adc    DWORD PTR [eax-0x5b7c3303],0xffffffff
  43ca1a:	aam    0xff
  43ca1c:	inc    ebp
  43ca1d:	xor    eax,DWORD PTR [eax]
  43ca1f:	int3   
  43ca20:	out    0xff,eax
  43ca22:	and    edi,edi
  43ca24:	mov    dl,0x42
  43ca26:	inc    DWORD PTR [ebx-0xa1fff2]
  43ca2c:	inc    eax
  43ca2d:	scas   eax,DWORD PTR es:[edi]
  43ca2e:	inc    DWORD PTR [eax]
  43ca30:	push   ecx
  43ca31:	add    BYTE PTR [eax+0x0],al
  43ca34:	fist   DWORD PTR [ecx]
  43ca36:	mov    DWORD PTR [ebx-0x797cd1],eax
  43ca3c:	ret    0xff9c
  43ca3f:	dec    DWORD PTR [edi-0x15ff8e34]
  43ca45:	add    bh,bh
  43ca47:	mov    ebp,ebx
  43ca49:	int3   
  43ca4a:	inc    edi
  43ca4b:	add    DWORD PTR [ebp-0x35],0xffffff83
  43ca4f:	push   DWORD PTR [ecx]
  43ca51:	(bad)  
  43ca52:	js     0x43ca53
  43ca54:	pop    edi
  43ca55:	rol    DWORD PTR [eax],1
  43ca57:	(bad)  
  43ca58:	aas    
  43ca59:	call   ecx
  43ca5b:	or     DWORD PTR ds:0x8e00ff0e,0xffffff83
  43ca62:	and    eax,0xffb65189
  43ca67:	int3   
  43ca68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ca69:	mov    DWORD PTR [edi-0x7d],esi
  43ca6c:	mov    ebx,DWORD PTR [esi]
  43ca6e:	cmp    edi,0x6b
  43ca71:	add    DWORD PTR [edi-0x1],0xffffffe4
  43ca75:	fs (bad) 
  43ca77:	call   DWORD PTR [ecx+0x16ff7d89]
  43ca7d:	fadd   DWORD PTR [ebx+0x1b003eff]
  43ca83:	(bad)  
  43ca84:	(bad)  
  43ca85:	sti    
  43ca86:	add    BYTE PTR [eax],al
  43ca88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ca89:	add    BYTE PTR [eax+0x8d8d00],ah
  43ca8f:	jmp    edx
  43ca91:	dec    DWORD PTR [ecx-0x34]
  43ca94:	inc    ecx
  43ca95:	sbb    al,BYTE PTR [eax]
  43ca97:	add    BYTE PTR [ecx-0x7500c101],ah
  43ca9d:	pop    eax
  43ca9e:	dec    DWORD PTR [ecx+0xf3ffb4]
  43caa4:	test   al,0x77
  43caa6:	add    bh,bh
  43caa8:	xlat   BYTE PTR ds:[ebx]
  43caa9:	add    dh,ah
  43caab:	add    BYTE PTR [ecx-0x52ff0081],dl
  43cab1:	call   DWORD PTR [ebx+0x0]
  43cab4:	sbb    eax,DWORD PTR [edi]
  43cab6:	(bad)  
  43cab7:	call   DWORD PTR [eax]
  43cab9:	jmp    FWORD PTR [edi+edi*8+0x4a]
  43cabd:	push   es
  43cabe:	cmp    edi,0x61
  43cac1:	call   DWORD PTR [ecx]
  43cac3:	(bad)  
  43cac4:	cmp    al,0x56
  43cac6:	int3   
  43cac7:	sub    DWORD PTR [esi-0xc005234],0x35
  43cace:	add    bh,bh
  43cad0:	das    
  43cad1:	dec    DWORD PTR [ebp-0x292334]
  43cad7:	call   DWORD PTR [ecx+0x4affbeff]
  43cadd:	call   0xccc2:0x8334ffff
  43cae4:	nop
  43cae5:	cmp    bh,0x0
  43cae8:	add    eax,0x2f002b00
  43caed:	cmp    BYTE PTR [ebx-0x31ff4701],al
  43caf3:	call   esp
  43caf5:	jecxz  0x43cac3
  43caf7:	add    BYTE PTR [edx+0x6dff9383],dh
  43cafd:	leave  
  43cafe:	int3   
  43caff:	(bad)  
  43cb00:	stc    
  43cb01:	jmp    DWORD PTR [edi-0x330c237d]
  43cb07:	add    BYTE PTR [edx+0x4dffaccc],bh
  43cb0d:	sub    al,0xff
  43cb0f:	adc    DWORD PTR [edx+0xc00ce83],0x2c
  43cb16:	add    bh,bh
  43cb18:	in     eax,dx
  43cb19:	jmp    DWORD PTR [esi-0x1]
  43cb1c:	dec    eax
  43cb1d:	add    DWORD PTR [eax],0xffffffff
  43cb20:	sti    
  43cb21:	jmp    FWORD PTR [edi+edi*8]
  43cb24:	xor    al,0x56
  43cb26:	(bad)  
  43cb27:	jmp    FWORD PTR [eax+0x0]
  43cb2a:	or     al,0xff
  43cb2c:	fild   DWORD PTR [esi-0x1]
  43cb2f:	mov    DWORD PTR [edx-0x6a765001],edx
  43cb35:	pop    esi
  43cb36:	add    DWORD PTR [ebx-0x61000f],0x16
  43cb3d:	mov    ds:0x833b89ff,al
  43cb42:	xchg   ecx,eax
  43cb43:	call   FWORD PTR [ebx+0x76ffff79]
  43cb49:	call   FWORD PTR [eax-0x4fac34]
  43cb4f:	mov    DWORD PTR [ebx-0x2a009977],ebp
  43cb55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cb56:	add    bh,bh
  43cb58:	popa   
  43cb59:	int3   
  43cb5a:	cmp    eax,0xff080200
  43cb5f:	jmp    FWORD PTR [edi]
  43cb61:	call   FWORD PTR [esi-0x1]
  43cb64:	mov    ds:0xd500fff8,eax
  43cb69:	add    BYTE PTR [ecx],al
  43cb6b:	inc    DWORD PTR [edx+0x27ff0052]
  43cb71:	sbb    DWORD PTR [esp+ecx*8-0xd83f],0x10
  43cb79:	(bad)  
  43cb7a:	mov    eax,0xcc0d18ff
  43cb7f:	call   DWORD PTR [eax+0x2c00]
  43cb85:	add    BYTE PTR [eax],al
  43cb87:	(bad)  
  43cb88:	mov    edi,0xdd0046ff
  43cb8d:	and    bh,bh
  43cb8f:	(bad)  
  43cb90:	cmp    edi,edi
  43cb92:	cmp    bh,bh
  43cb94:	sub    ah,ch
  43cb96:	add    bh,bh
  43cb98:	xchg   edx,eax
  43cb99:	add    BYTE PTR [eax-0xb8401],bl
  43cb9f:	sbb    DWORD PTR [eax+eax*1],0xc
  43cba3:	mov    DWORD PTR [edi],ecx
  43cba5:	sahf   
  43cba6:	(bad)  
  43cba7:	(bad)  
  43cba8:	cmp    eax,0x87008aff
  43cbad:	push   ebx
  43cbae:	(bad)  
  43cbaf:	jmp    DWORD PTR [eax+0x65005700]
  43cbb5:	int    0x0
  43cbb7:	call   DWORD PTR [esi-0x7d]
  43cbba:	adc    eax,DWORD PTR [eax]
  43cbbc:	adc    esi,DWORD PTR [eax+eax*1]
  43cbbf:	add    BYTE PTR [esi],dh
  43cbc1:	mov    DWORD PTR [esi-0x1f8e00],edi
  43cbc7:	push   esp
  43cbc9:	or     DWORD PTR [esi+0x10e1cc],0xffffffff
  43cbd0:	test   BYTE PTR [eax],al
  43cbd2:	push   ebx
  43cbd3:	add    BYTE PTR [edx+0x1bff893d],bl
  43cbd9:	(bad)  
  43cbda:	jge    0x43cbdb
  43cbdc:	popa   
  43cbdd:	xchg   esi,eax
  43cbde:	dec    esp
  43cbe0:	cmp    eax,0x12ff8600
  43cbe5:	push   0x836cff83
  43cbea:	jmp    0x43cbeb
  43cbec:	mov    BYTE PTR [eax-0x1],bh
  43cbef:	inc    DWORD PTR [esi]
  43cbf1:	add    al,bl
  43cbf3:	push   DWORD PTR [edi-0xeff001f]
  43cbf9:	add    BYTE PTR [esi-0x34],bl
  43cbfc:	out    0xfe,al
  43cbfe:	add    bh,bh
  43cc00:	fisttp WORD PTR [ecx-0x416effb7]
  43cc06:	add    bh,bh
  43cc08:	notrack call DWORD PTR [ecx]
  43cc0b:	mov    edx,edi
  43cc0d:	cs or  esp,0x4d
  43cc11:	or     edx,0x0
  43cc14:	cmp    eax,0x83a6cc83
  43cc1a:	jae    0x43cc1c
  43cc1c:	aas    
  43cc1d:	sar    bh,cl
  43cc1f:	int3   
  43cc20:	inc    ebx
  43cc21:	jmp    DWORD PTR [ecx+0xbfebff]
  43cc27:	inc    DWORD PTR [eax+0x20831fff]
  43cc2d:	sub    edi,edi
  43cc2f:	add    BYTE PTR [ebx],bh
  43cc31:	add    BYTE PTR [edi+0x0],cl
  43cc34:	sbb    al,BYTE PTR [edi]
  43cc36:	inc    DWORD PTR [eax]
  43cc38:	inc    esp
  43cc39:	jmp    DWORD PTR [ebx]
  43cc3b:	add    BYTE PTR [ebp+0x2dffff3e],ch
  43cc41:	add    BYTE PTR [ecx-0x34],ah
  43cc44:	adc    ah,al
  43cc46:	dec    DWORD PTR [ecx-0x762800fa]
  43cc4c:	or     al,0x0
  43cc4f:	mov    DWORD PTR [edi],esp
  43cc51:	jmp    DWORD PTR [ecx+0x0]
  43cc54:	retf   0x40
  43cc57:	call   FWORD PTR [edi-0x1]
  43cc5a:	cmc    
  43cc5b:	add    dl,cl
  43cc5d:	and    cl,BYTE PTR [ecx+0x63ff4f83]
  43cc63:	add    BYTE PTR [ebp+0x48],bh
  43cc66:	inc    DWORD PTR [eax]
  43cc68:	adc    DWORD PTR [eax],eax
  43cc6a:	cmp    edi,edi
  43cc6c:	mov    dl,0xe0
  43cc6e:	add    BYTE PTR [eax],al
  43cc70:	fwait
  43cc71:	call   edi
  43cc73:	int3   
  43cc74:	mov    edi,0xb000ff79
  43cc79:	jmp    DWORD PTR [ebp-0x77]
  43cc7c:	pop    edx
  43cc7d:	dec    DWORD PTR [ecx-0x1dff387d]
  43cc83:	jmp    DWORD PTR [eax-0x4b]
  43cc86:	add    bh,bh
  43cc88:	cmp    al,0xff
  43cc8a:	xchg   esp,eax
  43cc8b:	add    ah,bh
  43cc8d:	mov    DWORD PTR gs:[ebx-0xbfff3f],eax
  43cc94:	dec    ebx
  43cc95:	int    0x0
  43cc97:	(bad)  
  43cc98:	(bad)  
  43cc9a:	test   DWORD PTR [eax],0xff05a4
  43cca0:	or     al,0x0
  43cca2:	or     al,BYTE PTR [ebx-0x3300eeea]
  43cca8:	vmovntps YMMWORD PTR [eax],ymm0
  43ccac:	pop    ebp
  43ccad:	jmp    0xe3:0x8331ff00
  43ccb4:	shr    DWORD PTR ds:0xde89ff,1
  43ccba:	idiv   bh
  43ccbc:	and    DWORD PTR [edi+edi*8-0x2476fd01],edi
  43ccc3:	mov    edx,ebp
  43ccc5:	outs   dx,BYTE PTR ds:[esi]
  43ccc6:	add    BYTE PTR [eax],al
  43ccc8:	ja     0x43ccc9
  43ccca:	pushf  
  43cccb:	(bad)  
  43cccc:	ficom  DWORD PTR [esi]
  43ccce:	inc    DWORD PTR [ebx+0xdd00d2]
  43ccd4:	fisub  WORD PTR [eax+eax*1+0x11009cff]
  43ccdb:	call   FWORD PTR [ebx+0x7a00ff59]
  43cce1:	(bad)  
  43cce2:	mov    ecx,0xff692983
  43cce7:	add    BYTE PTR [edx],bh
  43cce9:	mov    DWORD PTR [ebx+eax*4-0x13],esp
  43cced:	pop    ecx
  43ccee:	mov    edi,edi
  43ccf0:	cmp    eax,0xf2fff800
  43ccf5:	or     edi,edi
  43ccf7:	push   DWORD PTR [edi]
  43ccf9:	push   DWORD PTR [eax+eax*1-0x4e]
  43ccfd:	xchg   ebp,eax
  43ccfe:	inc    DWORD PTR [ebx+0x23cc75]
  43cd04:	inc    ebp
  43cd05:	es add bh,bh
  43cd08:	add    eax,0x8fff9e00
  43cd0d:	add    BYTE PTR [ecx-0x797cfd01],cl
  43cd13:	push   DWORD PTR [esi]
  43cd15:	loopne 0x43cd16
  43cd17:	add    BYTE PTR [ebx],dl
  43cd19:	push   esi
  43cd1b:	(bad)  
  43cd1c:	mov    ebp,0xacffff3e
  43cd21:	jmp    DWORD PTR [ebx-0x824b77]
  43cd27:	add    DWORD PTR [ebp-0x2e00fe01],0xffffffaa
  43cd2e:	dec    esp
  43cd30:	jmp    0xd8:0x2f004d00
  43cd37:	add    BYTE PTR [edi-0x6ff3300],cl
  43cd3d:	cmp    al,0xcc
  43cd3f:	add    BYTE PTR [ebx],ah
  43cd41:	(bad)  
  43cd42:	fdivr  st,st(7)
  43cd44:	add    ah,cl
  43cd46:	(bad)  
  43cd47:	call   DWORD PTR [edx]
  43cd49:	dec    esp
  43cd4b:	mov    DWORD PTR [eax+0x1f008330],ecx
  43cd51:	add    dl,dl
  43cd53:	mov    ecx,ebp
  43cd55:	push   es
  43cd56:	add    bh,bh
  43cd58:	nop
  43cd59:	add    BYTE PTR [eax],ch
  43cd5b:	adc    DWORD PTR [esp+eax*1+0x7dff89],0xffffffeb
  43cd63:	inc    DWORD PTR [esi+0x61000005]
  43cd69:	call   edx
  43cd6b:	push   edi
  43cd6d:	mov    bh,bh
  43cd6f:	int3   
  43cd70:	ins    DWORD PTR es:[edi],dx
  43cd71:	int3   
  43cd72:	or     edi,edi
  43cd74:	in     eax,dx
  43cd75:	push   esp
  43cd76:	add    DWORD PTR [ebx+0x1c8950],0x68
  43cd7d:	in     eax,0xff
  43cd7f:	add    BYTE PTR [ecx],dh
  43cd81:	call   FWORD PTR [edx-0x7cc3bd34]
  43cd87:	push   ebp
  43cd89:	add    ah,ah
  43cd8b:	push   DWORD PTR [ebx]
  43cd8d:	ret    
  43cd8e:	add    bh,bh
  43cd90:	call   0xb7c77894
  43cd95:	push   0x0
  43cd97:	int3   
  43cd98:	hlt    
  43cd99:	jmp    ebp
  43cd9b:	int3   
  43cd9c:	push   es
  43cd9d:	lahf   
  43cd9e:	add    bh,bh
  43cda0:	bound  eax,QWORD PTR [eax]
  43cda2:	jle    0x43cda3
  43cda4:	test   eax,0x54ffff58
  43cda9:	(bad)  
  43cdaa:	mov    esi,0xffda5700
  43cdaf:	add    dl,bh
  43cdb1:	int3   
  43cdb2:	imul   edi,edi,0x7f
  43cdb5:	out    dx,eax
  43cdb6:	inc    DWORD PTR [eax]
  43cdb8:	pop    ss
  43cdb9:	jmp    FWORD PTR [edx]
  43cdbb:	add    BYTE PTR [eax-0x6d],bl
  43cdbe:	add    bh,bh
  43cdc0:	sbb    eax,DWORD PTR [eax]
  43cdc2:	xor    DWORD PTR [eax],eax
  43cdc4:	pop    es
  43cdc5:	lea    eax,[eax]
  43cdc7:	and    DWORD PTR [ecx+0x47ff0400],0xffffffc4
  43cdce:	(bad)  
  43cdcf:	dec    edx
  43cdd1:	inc    DWORD PTR [ecx+0x4df200]
  43cdd7:	push   DWORD PTR ds:0x98ff35ff
  43cddd:	push   es
  43cdde:	(bad)  
  43cddf:	jmp    FWORD PTR [edi]
  43cde1:	add    BYTE PTR [ecx-0x962f01],bh
  43cde7:	add    BYTE PTR [ebp-0x1],bh
  43cdea:	inc    edx
  43cdeb:	jmp    ebx
  43cded:	pop    es
  43cdee:	add    BYTE PTR [eax],al
  43cdf0:	jmp    0xff90:0x5e0095ff
  43cdf7:	push   DWORD PTR [ebx+0x5cffd189]
  43cdfd:	imul   eax,DWORD PTR [eax],0xffffffff
  43ce00:	fs add dl,cl
  43ce03:	dec    edi
  43ce05:	pushf  
  43ce06:	mov    DWORD PTR [eax],eax
  43ce08:	test   al,0xff
  43ce0a:	pop    edx
  43ce0b:	mov    DWORD PTR [esi+0x7b000005],edx
  43ce11:	add    BYTE PTR [ebp+0x3eedcc],ch
  43ce17:	add    BYTE PTR [edx+0x70022ff],bl
  43ce1d:	and    eax,0x830000ff
  43ce22:	and    eax,DWORD PTR [ebx-0xff0fb4]
  43ce28:	xor    al,BYTE PTR [eax]
  43ce2a:	jne    0x43ce2b
  43ce2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ce2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ce2e:	add    BYTE PTR [ebx-0xd400ee],al
  43ce34:	push   ss
  43ce35:	adc    bh,bh
  43ce37:	cmp    DWORD PTR [edx-0x7d],0xffffff97
  43ce3b:	xor    eax,0x18
  43ce3e:	inc    DWORD PTR [ebx-0x890066]
  43ce44:	pusha  
  43ce45:	or     ecx,DWORD PTR [ecx-0x6f00bb34]
  43ce4b:	jmp    DWORD PTR [ecx+0x2d00ff1d]
  43ce51:	call   DWORD PTR [ebx+0x0]
  43ce54:	popa   
  43ce55:	scas   al,BYTE PTR es:[edi]
  43ce56:	add    BYTE PTR [eax],al
  43ce58:	loopne 0x43cddd
  43ce5a:	push   edx
  43ce5b:	call   FWORD PTR [edx+0x10ff0021]
  43ce61:	call   FWORD PTR ds:0xf75eff
  43ce67:	call   eax
  43ce69:	sbb    DWORD PTR [eax],0xffffffff
  43ce6c:	stos   DWORD PTR es:[edi],eax
  43ce6d:	lods   eax,DWORD PTR ds:[esi]
  43ce6e:	(bad)  
  43ce6f:	call   DWORD PTR [esi-0x34]
  43ce72:	dec    esp
  43ce73:	add    ah,al
  43ce75:	mov    esp,0xff1c0083
  43ce7a:	sbb    bh,bh
  43ce7c:	or     ebp,DWORD PTR [esi-0xc0077]
  43ce82:	addr16 (bad) 
  43ce84:	fadd   QWORD PTR [ebx-0x7d]
  43ce87:	add    BYTE PTR [edx-0x1],al
  43ce8a:	cmp    eax,DWORD PTR [eax]
  43ce8c:	add    BYTE PTR [ebx-0x1],bh
  43ce8f:	int3   
  43ce90:	add    bh,bh
  43ce92:	mov    es,WORD PTR [eax]
  43ce94:	jne    0x43ce54
  43ce96:	(bad)  
  43ce97:	dec    DWORD PTR [ecx+0xa00a889]
  43ce9d:	fdivp  st(7),st
  43ce9f:	mov    DWORD PTR [ebx+0x5f00b2ff],edx
  43cea5:	add    ecx,esp
  43cea7:	or     DWORD PTR [ebp-0x1],0x66
  43ceab:	push   DWORD PTR [esi]
  43cead:	xchg   edx,eax
  43ceae:	add    bh,bh
  43ceb0:	ins    DWORD PTR es:[edi],dx
  43ceb1:	call   DWORD PTR [edx+0x0]
  43ceb4:	sbb    dh,0xff
  43ceb7:	(bad)  
  43ceb8:	in     al,dx
  43ceb9:	call   DWORD PTR [eax]
  43cebb:	dec    edx
  43cebd:	push   0xcc5e0000
  43cec2:	add    ecx,esp
  43cec4:	xchg   esp,eax
  43cec5:	sar    edi,1
  43cec7:	jmp    FWORD PTR [ebx+0x15ffa2ff]
  43cecd:	and    edi,edi
  43cecf:	jmp    FWORD PTR [edi-0x77]
  43ced2:	cmp    bh,0x48
  43ced5:	cmp    ah,cl
  43ced7:	inc    DWORD PTR [edi+edi*8]
  43ceda:	add    BYTE PTR ds:[ebx],dh
  43cedd:	sar    edi,cl
  43cedf:	add    DWORD PTR [ebx-0x4600fd34],0x1d
  43cee6:	inc    DWORD PTR [eax]
  43cee8:	dec    edx
  43cee9:	(bad)  
  43ceea:	cmp    edi,edi
  43ceec:	add    ecx,DWORD PTR [edi-0x7d]
  43ceef:	sbb    DWORD PTR [ecx+0x3f8377ff],0xffffffb6
  43cef6:	add    bh,bh
  43cef8:	fdivr  st,st(7)
  43cefa:	mov    cl,0x0
  43cefc:	inc    ebx
  43cefd:	hlt    
  43cefe:	(bad)  
  43ceff:	jmp    DWORD PTR [ebx-0x69005500]
  43cf05:	iret   
  43cf06:	inc    DWORD PTR [ebx-0x39006f]
  43cf0c:	shl    BYTE PTR [ebx+0xf1ffff],1
  43cf12:	pop    DWORD PTR [eax]
  43cf14:	lods   al,BYTE PTR ds:[esi]
  43cf15:	and    eax,0x3dff83
  43cf1a:	and    eax,DWORD PTR [eax]
  43cf1c:	aad    0x37
  43cf1e:	inc    DWORD PTR [eax]
  43cf20:	jmp    0xadc78925
  43cf25:	rol    BYTE PTR [eax],0xff
  43cf28:	inc    esi
  43cf29:	add    cl,ah
  43cf2b:	add    BYTE PTR [ebp-0x1a00ffc9],dl
  43cf31:	add    al,ah
  43cf33:	sbb    DWORD PTR [ebp-0x59],0xffffffcc
  43cf37:	sub    edx,0xffffffff
  43cf3a:	das    
  43cf3b:	int3   
  43cf3c:	sub    al,al
  43cf3e:	(bad)  
  43cf3f:	call   DWORD PTR [esi]
  43cf41:	(bad)  
  43cf42:	mov    edx,0xffe33289
  43cf47:	or     DWORD PTR [edi],0xffffffff
  43cf4a:	popf   
  43cf4b:	jmp    FWORD PTR [ecx-0x71ff0003]
  43cf51:	add    BYTE PTR [edx-0x263c01],dh
  43cf57:	add    BYTE PTR [ecx+0x0],dl
  43cf5a:	mov    eax,DWORD PTR [ebx+0xff0df7]
  43cf60:	data16 add dh,ah
  43cf63:	mov    DWORD PTR [edi-0x1a],ecx
  43cf66:	int3   
  43cf67:	push   DWORD PTR [edx]
  43cf69:	push   DWORD PTR [ecx]
  43cf6b:	mov    DWORD PTR [eax-0x1100ff61],ecx
  43cf71:	int3   
  43cf72:	add    DWORD PTR [eax],0x75
  43cf75:	jne    0x43cefa
  43cf77:	add    dl,dl
  43cf79:	call   DWORD PTR [edx-0x7d]
  43cf7c:	test   BYTE PTR [esi+0x0],dl
  43cf7f:	add    BYTE PTR [edx+0x738924ff],dl
  43cf85:	sub    BYTE PTR [eax],al
  43cf87:	dec    eax
  43cf89:	call   DWORD PTR [esi]
  43cf8b:	add    BYTE PTR [eax-0x1e],al
  43cf8e:	inc    DWORD PTR [eax]
  43cf90:	sbb    eax,0x9900f400
  43cf95:	jl     0x43cf96
  43cf97:	add    BYTE PTR [ebx+eax*4],dh
  43cf9a:	aad    0xff
  43cf9c:	xor    al,0xad
  43cf9e:	add    BYTE PTR [eax],al
  43cfa0:	pop    DWORD PTR [ebx+0x110acc48]
  43cfa6:	(bad)  
  43cfa7:	(bad)  
  43cfa8:	mov    ebx,0x948992cc
  43cfad:	jbe    0x43cfaf
  43cfaf:	(bad)  
  43cfb0:	cmp    edi,edi
  43cfb2:	data16 int3 
  43cfb4:	adc    esi,DWORD PTR [edx-0xa60001]
  43cfba:	pop    esi
  43cfbb:	push   DWORD PTR [esi-0x25]
  43cfbe:	dec    esp
  43cfc0:	sbb    eax,0x5e00de00
  43cfc5:	mov    DWORD PTR [ebx-0x35ff2d01],eax
  43cfcb:	int3   
  43cfcc:	push   esp
  43cfcd:	add    DWORD PTR ss:[ebx-0x7c7100d4],0xffffff85
  43cfd5:	inc    DWORD PTR [bx+si]
  43cfd8:	ror    ah,0x7a
  43cfdb:	(bad)  
  43cfdc:	cmp    al,0xc
  43cfde:	add    BYTE PTR [eax],al
  43cfe0:	loopne 0x43cf6b
  43cfe2:	xor    eax,0xff9594cc
  43cfe7:	cmp    DWORD PTR [ebp+0x0],0xffffffa3
  43cfeb:	jmp    DWORD PTR [eax+eax*8-0x7d]
  43cfef:	inc    ebx
  43cff1:	dec    ebp
  43cff3:	call   FWORD PTR ds:0x9289ffed
  43cff9:	add    BYTE PTR [eax+eax*1+0x838208],al
  43d000:	jmp    0xae444c05
  43d005:	retf   
  43d006:	int3   
  43d007:	int3   
  43d008:	and    eax,0x1ffa583
  43d00d:	adc    eax,0x1700ff
  43d012:	rol    DWORD PTR [ebx-0xcf47],1
  43d018:	inc    eax
  43d019:	add    BYTE PTR [eax],al
  43d01b:	cmp    DWORD PTR [ebp-0x600009d],0xffffffff
  43d022:	aas    
  43d023:	call   FWORD PTR [ebx]
  43d025:	js     0x43d026
  43d027:	jmp    DWORD PTR [edx+0x7dff1589]
  43d02d:	iret   
  43d02e:	(bad)  
  43d02f:	jmp    DWORD PTR [esi-0x1]
  43d032:	stos   BYTE PTR es:[edi],al
  43d033:	add    BYTE PTR [ebx+0x66],dh
  43d036:	add    bh,bh
  43d038:	(bad)  
  43d039:	dec    DWORD PTR [edi]
  43d03b:	jmp    FWORD PTR [ebp-0x50]
  43d03e:	cmp    edi,0xffffffb3
  43d041:	jmp    DWORD PTR [edx+0x0]
  43d044:	adc    DWORD PTR [eax+0x0],0xffffffff
  43d048:	mov    ebx,0x83ff2eff
  43d04d:	sub    DWORD PTR [ebx+0x1dffa283],eax
  43d053:	cmp    DWORD PTR [ebp-0x3d760040],0xffffffff
  43d05a:	xchg   esi,eax
  43d05b:	add    BYTE PTR [esi],bh
  43d05d:	sti    
  43d05e:	mov    esp,ecx
  43d060:	xor    eax,0xc0000300
  43d065:	popa   
  43d066:	mov    edi,edi
  43d068:	lods   al,BYTE PTR ds:[esi]
  43d069:	(bad)  
  43d06a:	call   0x89b11f6e
  43d06f:	add    dl,ch
  43d071:	int3   
  43d072:	sub    cl,BYTE PTR [ecx-0x3332ea]
  43d078:	test   BYTE PTR [eax],0x9
  43d07b:	inc    ebx
  43d07d:	aad    0x0
  43d07f:	jmp    FWORD PTR [esi]
  43d081:	add    BYTE PTR [edi],dh
  43d083:	add    dl,dl
  43d085:	pop    ebx
  43d086:	add    BYTE PTR [ebx-0xaffffb],al
  43d08c:	fldenv [esi-0x33b70100]
  43d092:	xlat   BYTE PTR ds:[ebx]
  43d093:	sbb    ecx,0x5e
  43d096:	inc    DWORD PTR [ebx-0x20ffd6]
  43d09c:	loope  0x43d096
  43d09e:	add    BYTE PTR [ebx-0x76caffaa],al
  43d0a4:	ins    BYTE PTR es:[edi],dx
  43d0a5:	jmp    0x83a0d076
  43d0aa:	jge    0x43d0ab
  43d0ac:	mov    WORD PTR ss:[eax],es
  43d0af:	(bad)  
  43d0b0:	cmp    edi,edi
  43d0b2:	push   ss
  43d0b3:	int3   
  43d0b4:	adc    al,0x1d
  43d0b6:	(bad)  
  43d0b7:	push   DWORD PTR [ebx]
  43d0b9:	call   FWORD PTR [edi-0x977001]
  43d0bf:	add    BYTE PTR [edx-0x7d],bl
  43d0c2:	pop    DWORD PTR [ebx-0xff80f4]
  43d0c8:	inc    ebp
  43d0c9:	int3   
  43d0ca:	cmp    al,BYTE PTR [ebx+0x83976e]
  43d0d0:	loop   0x43d0d2
  43d0d2:	sar    bh,cl
  43d0d4:	inc    ebx
  43d0d5:	ds dec esp
  43d0d8:	inc    ebp
  43d0d9:	push   DWORD PTR [esi]
  43d0db:	add    BYTE PTR [edx],al
  43d0dd:	inc    ebp
  43d0de:	inc    DWORD PTR [ebx-0x7c30000f]
  43d0e4:	dec    esp
  43d0e5:	mov    edi,?
  43d0e7:	mov    DWORD PTR [eax+eax*1],edi
  43d0ea:	sub    eax,0xff85fe00
  43d0ef:	add    BYTE PTR [ecx-0x77],cl
  43d0f2:	popa   
  43d0f3:	inc    DWORD PTR [ebx-0x22]
  43d0f6:	int3   
  43d0f7:	jmp    FWORD PTR [ecx-0x7d]
  43d0fa:	mov    bl,0x89
  43d0fc:	scas   eax,DWORD PTR es:[edi]
  43d0fd:	cmp    edi,edi
  43d0ff:	call   edi
  43d101:	push   DWORD PTR [edx]
  43d103:	inc    DWORD PTR [esi-0x767cffd2]
  43d109:	or     ebp,0xffffffff
  43d10c:	or     dh,0xff
  43d10f:	add    dl,al
  43d111:	cmp    DWORD PTR [ecx-0x1],0xffffff82
  43d115:	ud0    eax,DWORD PTR [eax]
  43d118:	adc    al,BYTE PTR [eax]
  43d11a:	xchg   ebx,eax
  43d11b:	call   ebx
  43d11d:	pusha  
  43d11e:	int3   
  43d11f:	call   FWORD PTR [ebx+eax*4+0x45]
  43d123:	adc    DWORD PTR [ebp+0x5affff68],0x0
  43d12a:	pop    esi
  43d12b:	call   DWORD PTR [ebp+0x4eff00df]
  43d131:	(bad)  
  43d132:	std    
  43d133:	jmp    DWORD PTR [ebp+0x2ccc00ec]
  43d139:	add    BYTE PTR [edx-0x19b634],dl
  43d13f:	add    BYTE PTR [ecx-0x38760101],bl
  43d145:	popf   
  43d146:	cmp    edi,0xffffffb8
  43d149:	add    dl,bh
  43d14b:	add    BYTE PTR [ebp+0x1f830031],cl
  43d151:	inc    DWORD PTR [eax+eax*1]
  43d154:	xlat   BYTE PTR ds:[ebx]
  43d155:	out    dx,eax
  43d156:	(bad)  
  43d157:	inc    DWORD PTR [esi]
  43d159:	inc    ecx
  43d15b:	inc    DWORD PTR [eax-0x5100002f]
  43d161:	int3   
  43d162:	inc    eax
  43d163:	add    BYTE PTR [edx],cl
  43d165:	ret    0x0
  43d168:	mov    al,BYTE PTR [eax]
  43d16a:	je     0x43d0ef
  43d16c:	loop   0x43d140
  43d16e:	inc    DWORD PTR [ebx-0x78ffef]
  43d174:	adc    al,0xf4
  43d176:	cmp    edi,0x16
  43d179:	int3   
  43d17a:	sub    bh,bh
  43d17c:	(bad)  
  43d17d:	sub    bh,bh
  43d17f:	add    DWORD PTR [ecx],0xffffffff
  43d182:	loope  0x43d183
  43d184:	popa   
  43d185:	lods   al,BYTE PTR ds:[esi]
  43d186:	add    BYTE PTR [ebx+0x3189ec],al
  43d18c:	retf   0xdb
  43d18f:	add    BYTE PTR [esi-0x7c00d100],ah
  43d195:	je     0x43d120
  43d197:	(bad)  
  43d198:	fiadd  DWORD PTR [eax]
  43d19a:	cmp    bh,0xf2
  43d19d:	xchg   esi,eax
  43d19e:	cmp    edi,0xfffffff3
  43d1a1:	add    BYTE PTR [eax],cl
  43d1a3:	add    cl,bh
  43d1a5:	xchg   esp,eax
  43d1a6:	inc    DWORD PTR [eax]
  43d1a8:	imul   eax,DWORD PTR [eax],0x69
  43d1ab:	jmp    FWORD PTR [edx+ecx*2-0x7d]
  43d1af:	call   FWORD PTR [eax+eax*1]
  43d1b2:	js     0x43d137
  43d1b4:	jp     0x43d14c
  43d1b6:	(bad)  
  43d1b7:	inc    DWORD PTR [edx-0x1]
  43d1ba:	adc    bh,bh
  43d1bc:	add    bh,ah
  43d1be:	add    bh,bh
  43d1c0:	mov    esp,0xa389deff
  43d1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d1c6:	mov    edi,edi
  43d1c8:	adc    eax,0xba83acff
  43d1cd:	add    BYTE PTR [eax],al
  43d1cf:	jmp    FWORD PTR [edi+edi*8-0x1d]
  43d1d3:	call   FWORD PTR [ebp-0x22]
  43d1d6:	(bad)  
  43d1d7:	dec    DWORD PTR [ecx]
  43d1d9:	push   DWORD PTR [edi+edi*8-0x76fcac]
  43d1e0:	pop    esp
  43d1e1:	mov    DWORD PTR [ebx],edi
  43d1e3:	sbb    DWORD PTR [edi+edi*1-0x33caff01],0xffffff90
  43d1eb:	jmp    ebp
  43d1ed:	test   eax,0xe20000
  43d1f2:	pop    ebx
  43d1f3:	add    bh,bh
  43d1f5:	inc    eax
  43d1f6:	(bad)  
  43d1f7:	push   edi
  43d1f9:	int3   
  43d1fa:	mov    edx,0x8321baff
  43d1ff:	add    BYTE PTR [ecx-0x1],cl
  43d202:	scas   al,BYTE PTR es:[edi]
  43d203:	push   DWORD PTR [edi-0x1aff00c1]
  43d209:	xor    DWORD PTR [eax-0x28a7d],0xffffffff
  43d210:	adc    eax,0xcff3fff
  43d215:	gs (bad) 
  43d217:	push   DWORD PTR [eax]
  43d219:	jmp    DWORD PTR [eax-0x7694dc01]
  43d21f:	(bad)  
  43d220:	mov    ebp,0xdfff3a00
  43d225:	dec    esi
  43d226:	inc    DWORD PTR [ebx-0x967ce6]
  43d22c:	jle    0x43d253
  43d22e:	inc    DWORD PTR [eax]
  43d230:	loop   0x43d231
  43d232:	test   al,0x89
  43d234:	xor    esp,DWORD PTR [eax-0x7d]
  43d237:	inc    edi
  43d239:	sub    DWORD PTR [ebp-0x789100],0x0
  43d240:	je     0x43d20e
  43d242:	sar    bh,cl
  43d244:	sub    ecx,ebx
  43d246:	add    ah,cl
  43d248:	test   eax,0x3900bd00
  43d24d:	or     BYTE PTR [eax],al
  43d24f:	add    BYTE PTR [eax+0x0],ah
  43d252:	fiadd  WORD PTR [eax]
  43d254:	outs   dx,DWORD PTR ds:[esi]
  43d255:	and    BYTE PTR [ecx+0x8ff6100],cl
  43d25b:	add    dh,bl
  43d25d:	xlat   BYTE PTR ds:[ebx]
  43d25e:	(bad)  
  43d25f:	(bad)  
  43d260:	in     al,dx
  43d261:	(bad)  
  43d262:	fdivr  st,st(7)
  43d264:	bound  esp,QWORD PTR [ebx-0x790001]
  43d26a:	ja     0x43d26b
  43d26c:	loopne 0x43d250
  43d26e:	mov    DWORD PTR [ebx-0xe37cf1],eax
  43d274:	mov    cl,0x9f
  43d276:	add    bh,bh
  43d278:	mov    ecx,0xe583c6ff
  43d27d:	xchg   esi,eax
  43d27e:	(bad)  
  43d27f:	(bad)  
  43d280:	fld    DWORD PTR [eax]
  43d282:	pop    es
  43d283:	mov    esi,esi
  43d285:	ror    esp,cl
  43d287:	add    BYTE PTR [ebp+0x6089f4ff],al
  43d28d:	add    BYTE PTR es:[eax],al
  43d290:	mov    ds:0xd0002500,eax
  43d295:	adc    BYTE PTR [ebx+0x7f002d00],al
  43d29b:	add    dh,bh
  43d29d:	mov    dh,0x89
  43d29f:	(bad)  
  43d2a0:	jle    0x43d2a2
  43d2a2:	add    BYTE PTR [ebx-0x7c8046],0x48
  43d2a9:	int3   
  43d2aa:	stc    
  43d2ab:	(bad)  
  43d2ac:	mov    edx,0x130000d9
  43d2b1:	add    BYTE PTR [edi+edi*8-0x46],dh
  43d2b5:	mov    DWORD PTR [eax],eax
  43d2b7:	dec    DWORD PTR [edi-0x1]
  43d2ba:	xor    BYTE PTR [eax],al
  43d2bc:	cmp    BYTE PTR [edi],dl
  43d2be:	add    DWORD PTR [ebx+0xd48313],0x52
  43d2c5:	fadd   QWORD PTR [eax]
  43d2c7:	mov    edi,ebp
  43d2c9:	call   FWORD PTR [edx]
  43d2cb:	jmp    ebp
  43d2cd:	sbb    ecx,DWORD PTR [ecx-0x2b007701]
  43d2d3:	add    BYTE PTR [esi+0x1d00ccf9],bh
  43d2d9:	(bad)  
  43d2da:	in     al,dx
  43d2db:	int3   
  43d2dc:	mov    dl,0xda
  43d2de:	(bad)  
  43d2df:	jmp    FWORD PTR [edx]
  43d2e1:	adc    DWORD PTR [edx+0x0],0x49
  43d2e5:	sar    edi,0x0
  43d2e8:	sar    edi,cl
  43d2ea:	enter  0x62ff,0x68
  43d2ee:	inc    DWORD PTR [ebx-0x7776ba]
  43d2f4:	ret    
  43d2f5:	popf   
  43d2f6:	dec    esp
  43d2f8:	repnz dec ecx
  43d2fb:	jmp    DWORD PTR [ebx]
  43d2fd:	cli    
  43d2fe:	(bad)  
  43d2ff:	inc    DWORD PTR [ebx+0x38ffe000]
  43d305:	sbb    DWORD PTR [eax],eax
  43d307:	add    cl,al
  43d309:	mov    ebx,edx
  43d30b:	int3   
  43d30c:	mov    bh,0x2c
  43d30e:	add    BYTE PTR [ebx+0xcbffa7],al
  43d314:	scas   al,BYTE PTR es:[edi]
  43d315:	push   0xcccccc00
  43d31a:	int3   
  43d31b:	int3   
  43d31c:	int3   
  43d31d:	int3   
  43d31e:	int3   
  43d31f:	int3   
  43d320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d321:	jle    0x43d323
  43d323:	mov    DWORD PTR [eax],eax
  43d325:	std    
  43d326:	xor    DWORD PTR [ebx-0x33dabd],0xffffffff
  43d32d:	test   DWORD PTR [eax],eax
  43d32f:	pop    es
  43d330:	jns    0x43d2f4
  43d332:	mov    DWORD PTR [eax],eax
  43d334:	mov    DWORD PTR [eax-0x1],ebx
  43d337:	and    al,0xf8
  43d339:	scas   al,BYTE PTR es:[edi]
  43d33a:	(bad)  
  43d33b:	inc    DWORD PTR [ebx-0x7bcf0067]
  43d341:	fld    QWORD PTR [eax]
  43d343:	add    bh,bh
  43d345:	jmp    0x43d346
  43d347:	add    BYTE PTR [ecx+ecx*2],al
  43d34a:	cmp    edi,0xffffff89
  43d34d:	(bad)  
  43d34e:	jmp    FWORD PTR [ecx+0xdf3e]
  43d354:	xor    esp,0xffffffff
  43d357:	pop    esi
  43d358:	jns    0x43d319
  43d35a:	inc    DWORD PTR [eax]
  43d35c:	add    BYTE PTR [edx-0xde64f00],bl
  43d362:	cmp    edi,0x0
  43d365:	lods   eax,DWORD PTR ds:[esi]
  43d366:	adc    DWORD PTR [eax+ebp*1],0x62
  43d36a:	add    BYTE PTR [eax],al
  43d36c:	add    BYTE PTR [edi-0x1],ah
  43d36f:	adc    BYTE PTR [eax-0x18],0x0
  43d373:	(bad)  
  43d374:	push   DWORD PTR [edi+edi*8+0x83d1ee]
  43d37b:	inc    DWORD PTR [eax]
  43d37d:	fld    DWORD PTR [ebx+0x52bf2c]
  43d383:	add    BYTE PTR [eax],al
  43d385:	and    eax,DWORD PTR [ebx-0x76563541]
  43d38b:	add    bh,bh
  43d38d:	push   ebp
  43d38e:	sbb    esp,0xffffffad
  43d391:	retf   0xffff
  43d394:	(bad)  
  43d395:	mov    edx,0x5f2fe1ff
  43d39a:	(bad)  
  43d39b:	(bad)  
  43d39c:	inc    DWORD PTR [edx]
  43d39e:	jmp    DWORD PTR [esi-0x7600190d]
  43d3a4:	add    ch,al
  43d3a6:	jmp    FWORD PTR [ecx+edi*2]
  43d3a9:	fcmovne st,st(4)
  43d3ab:	inc    DWORD PTR [eax]
  43d3ad:	mov    esi,0x9b5206ff
  43d3b2:	(bad)  
  43d3b3:	(bad)  
  43d3b4:	push   DWORD PTR [edi-0x211edf01]
  43d3ba:	(bad)  
  43d3bb:	inc    DWORD PTR [ebx-0x543c3361]
  43d3c1:	cmp    bh,0xff
  43d3c4:	sbb    ebp,0xffffff89
  43d3c7:	mov    ebx,0xffcc39b3
  43d3cc:	mov    DWORD PTR [eax+eax*1-0x23],eax
  43d3d0:	mov    dh,0x9e
  43d3d2:	inc    DWORD PTR [eax]
  43d3d4:	mov    DWORD PTR [eax-0x1],ebx
  43d3d7:	clc    
  43d3d8:	ds int3 
  43d3da:	(bad)  
  43d3db:	dec    DWORD PTR [ecx-0x4e1500bb]
  43d3e1:	jae    0x43d3e3
  43d3e3:	cmp    edi,0xffffffdf
  43d3e6:	mov    DWORD PTR [ebx+ebx*4+0xffff1f],eax
  43d3ed:	test   eax,0x58802700
  43d3f2:	dec    DWORD PTR [ecx-0x2600ef00]
  43d3f8:	ins    BYTE PTR es:[edi],dx
  43d3f9:	sbb    al,BYTE PTR [ebx-0x88337d]
  43d3ff:	mov    al,0xcc
  43d401:	sar    bh,cl
  43d403:	(bad)  
  43d404:	jmp    FWORD PTR [ebp-0x1]
  43d407:	sub    eax,0x83ff958d
  43d40c:	call   FWORD PTR [edi-0x7d]
  43d40f:	hlt    
  43d410:	sar    DWORD PTR [ebx+eax*4+0x0],1
  43d414:	sub    DWORD PTR [ecx+0xe034300],0xffffffff
  43d41b:	(bad)  
  43d41c:	push   ecx
  43d41e:	add    BYTE PTR [edi-0x31],cl
  43d421:	mov    ds:0xabff0000,eax
  43d426:	mov    DWORD PTR [eax-0x666a],ecx
  43d42c:	add    DWORD PTR [ecx+ecx*4+0xc0ae3d],0xffffffff
  43d434:	(bad)  
  43d435:	cmp    al,0xff
  43d437:	(bad)  
  43d438:	jecxz  0x43d4b7
  43d43a:	inc    DWORD PTR [eax]
  43d43c:	xor    edx,0xffffffff
  43d43f:	jmp    0x43d46d
  43d441:	sub    edi,edi
  43d443:	(bad)  
  43d444:	jmp    esp
  43d446:	mov    DWORD PTR [edx+edi*8],ebx
  43d449:	jmp    0xd043d34e
  43d44e:	add    BYTE PTR [ebp+0x83f4e9],bl
  43d454:	push   DWORD PTR [ebp-0x1]
  43d457:	in     al,dx
  43d458:	out    dx,eax
  43d459:	and    eax,DWORD PTR [eax]
  43d45b:	add    BYTE PTR [eax],al
  43d45d:	test   BYTE PTR [ebx-0x7655f00d],al
  43d463:	add    BYTE PTR [eax],al
  43d465:	inc    eax
  43d466:	mov    DWORD PTR [ecx-0xe],ebp
  43d469:	outs   dx,DWORD PTR ds:[esi]
  43d46a:	add    ah,cl
  43d46c:	push   DWORD PTR [ebx]
  43d46e:	adc    ebx,0xffffff97
  43d471:	jbe    0x43d473
  43d473:	add    BYTE PTR [eax],al
  43d475:	ja     0x43d3fa
  43d477:	ret    
  43d478:	xchg   DWORD PTR [ebp-0x1],ebx
  43d47b:	dec    esp
  43d47d:	xor    ah,cl
  43d47f:	add    BYTE PTR [ebx-0x7cff33b7],dl
  43d485:	jne    0x43d486
  43d487:	ficom  DWORD PTR fs:[ebp+0x0]
  43d48b:	dec    esp
  43d48d:	stos   DWORD PTR es:[edi],eax
  43d48e:	mov    DWORD PTR [ecx-0x7c338fba],esp
  43d494:	call   DWORD PTR [ecx+ecx*4+0x74]
  43d498:	cdq    
  43d499:	or     bh,bh
  43d49b:	(bad)  
  43d49c:	jmp    DWORD PTR [eax+0x0]
  43d49f:	and    ah,dh
  43d4a1:	adc    bh,bh
  43d4a3:	(bad)  
  43d4a4:	call   edx
  43d4a6:	(bad)  
  43d4a7:	(bad)  [ecx+ecx*8-0x7f00007d]
  43d4ae:	add    BYTE PTR [ecx+0x57],cl
  43d4b1:	push   esp
  43d4b2:	(bad)  
  43d4b3:	inc    DWORD PTR [eax]
  43d4b5:	jno    0x43d483
  43d4b7:	(bad)  
  43d4b8:	pop    ecx
  43d4b9:	das    
  43d4ba:	(bad)  
  43d4bb:	inc    DWORD PTR [eax]
  43d4bd:	mov    bh,0x83
  43d4bf:	std    
  43d4c0:	push   cs
  43d4c1:	fld    QWORD PTR [ebx-0x33000034]
  43d4c7:	adc    DWORD PTR [edi+0xcc4f],ecx
  43d4cd:	mov    ecx,0x91e13783
  43d4d2:	cmp    edi,0x0
  43d4d5:	mov    dh,0xff
  43d4d7:	das    
  43d4d8:	mov    BYTE PTR [edx-0x5a330077],al
  43d4de:	call   DWORD PTR [edx+0x19]
  43d4e1:	push   esi
  43d4e2:	inc    DWORD PTR [ebx-0x38ff8300]
  43d4e8:	mov    edx,0xcca0
  43d4ed:	inc    ecx
  43d4ee:	add    BYTE PTR [ebx-0x55],ah
  43d4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d4f2:	(bad)  
  43d4f3:	dec    DWORD PTR [ecx-0x6f9600e1]
  43d4f9:	js     0x43d4fa
  43d4fb:	int3   
  43d4fc:	dec    DWORD PTR [esi-0x45a3f500]
  43d502:	add    BYTE PTR [eax],al
  43d504:	cmp    DWORD PTR [ebx-0x1],0x30
  43d508:	mov    cl,0x16
  43d50a:	inc    DWORD PTR [eax]
  43d50c:	adc    DWORD PTR [ebx],0xffffff89
  43d50f:	push   0xff000128
  43d514:	inc    DWORD PTR [esi]
  43d516:	call   FWORD PTR [edx-0x5a]
  43d519:	cmp    DWORD PTR [ebx-0x99ff01],eax
  43d51f:	je     0x43d537
  43d521:	data16 add BYTE PTR [ecx-0x37762301],cl
  43d528:	pop    ss
  43d529:	test   BYTE PTR [ebx-0x33eaff01],al
  43d52f:	push   0x89891e65
  43d534:	inc    eax
  43d536:	dec    DWORD PTR [edx]
  43d538:	repz mov esi,0x33ffff00
  43d53e:	call   FWORD PTR [eax]
  43d540:	sbb    eax,0x8900839d
  43d545:	inc    eax
  43d546:	dec    DWORD PTR [edi]
  43d548:	mov    ebx,ebp
  43d54a:	(bad)  
  43d54b:	(bad)  
  43d54c:	dec    DWORD PTR [edx]
  43d54e:	(bad)  
  43d54f:	mov    esp,0xff7433
  43d554:	int3   
  43d555:	add    BYTE PTR ds:[esi-0xff2acb],ch
  43d55c:	int3   
  43d55d:	add    BYTE PTR [bx+di-0x1f],dl
  43d561:	out    0x0,al
  43d563:	add    BYTE PTR [ecx+0x1cb489b2],cl
  43d569:	cmp    edi,edi
  43d56b:	(bad)  
  43d56c:	(bad)  
  43d56d:	cmp    al,0xcc
  43d56f:	mov    esi,0x89ff014b
  43d574:	(bad)  
  43d575:	cmp    bh,bh
  43d577:	jb     0x43d5bd
  43d579:	dec    ebp
  43d57a:	(bad)  
  43d57b:	inc    DWORD PTR [ebx-0x56b2000c]
  43d581:	test   eax,0xc2ff8300
  43d586:	int3   
  43d587:	bound  esi,QWORD PTR [ecx-0xff7c2b]
  43d58d:	jmp    0x43d58e
  43d58f:	mov    ebp,0x83ccb104
  43d594:	add    BYTE PTR [ebp-0x47397100],bl
  43d59a:	dec    DWORD PTR [ecx+0x58008f89]
  43d5a0:	mov    ebx,DWORD PTR [eax+eax*1-0x1]
  43d5a4:	jmp    DWORD PTR [edi]
  43d5a6:	mov    esp,ebp
  43d5a8:	pop    edi
  43d5a9:	call   0x9083:0xbaff0000
  43d5b0:	leave  
  43d5b1:	adc    ecx,esp
  43d5b3:	(bad)  
  43d5b4:	inc    DWORD PTR ds:0xea05f1ff
  43d5ba:	add    bh,bh
  43d5bc:	(bad)  
  43d5bd:	jle    0x43d5bf
  43d5bf:	out    0x73,eax
  43d5c1:	scas   eax,DWORD PTR es:[edi]
  43d5c2:	(bad)  
  43d5c3:	inc    DWORD PTR [eax]
  43d5c5:	out    0xff,al
  43d5c7:	sub    al,0x45
  43d5c9:	add    BYTE PTR [ebx-0xbcff7d],0x40
  43d5d0:	test   BYTE PTR [ecx+0x41838983],ah
  43d5d6:	add    BYTE PTR [edi+ebx*4-0xffff16],ah
  43d5dd:	and    eax,0x44cef8ff
  43d5e2:	(bad)  
  43d5e3:	inc    DWORD PTR [eax]
  43d5e5:	or     al,0xff
  43d5e7:	and    al,al
  43d5e9:	mov    edx,0x658389ff
  43d5ee:	add    BYTE PTR [edi+0xff54d2],dl
  43d5f4:	jmp    DWORD PTR [ebp+0x0]
  43d5f7:	ja     0x43d5c3
  43d5f9:	jp     0x43d5fa
  43d5fb:	add    BYTE PTR [ecx+0x7836ffc7],cl
  43d601:	out    0xff,eax
  43d603:	inc    DWORD PTR [eax]
  43d605:	and    DWORD PTR [eax],eax
  43d607:	hlt    
  43d608:	in     al,0xf9
  43d60a:	add    bh,bh
  43d60c:	jmp    DWORD PTR [ecx-0x1]
  43d60f:	dec    esi
  43d610:	call   0x5a:0xff838386
  43d617:	lahf   
  43d618:	or     edx,DWORD PTR [ecx+0x0]
  43d61b:	add    DWORD PTR [eax],0x6e
  43d61e:	push   DWORD PTR [edx]
  43d620:	out    0x3,al
  43d622:	mov    DWORD PTR [eax],eax
  43d624:	add    BYTE PTR [eax+eax*1-0x37],dl
  43d628:	test   eax,0x89ffff0f
  43d62d:	in     al,0xff
  43d62f:	add    edx,DWORD PTR [edi]
  43d631:	add    BYTE PTR [ebx-0x587601],0x6
  43d638:	sub    DWORD PTR [edx],0x89cc0000
  43d63e:	xor    ecx,0x7b
  43d641:	pop    esp
  43d642:	mov    edi,edi
  43d644:	int3   
  43d645:	jne    0x43d647
  43d647:	call   0xad83:0x89ff104d
  43d64e:	jmp    DWORD PTR [esi-0x7c63a3]
  43d654:	xor    DWORD PTR [ebx],0xffffffff
  43d657:	daa    
  43d658:	mov    eax,0x89cc00e6
  43d65d:	stos   DWORD PTR es:[edi],eax
  43d65e:	call   DWORD PTR [ebp-0x40]
  43d661:	add    DWORD PTR [ebx+0xbcffff],eax
  43d667:	fdivr  DWORD PTR [ebx]
  43d669:	mov    ebx,0xfff00ff
  43d66e:	call   DWORD PTR [eiz*8-0xff00f3]
  43d675:	push   0xffffff83
  43d677:	mov    ebp,0xffff3112
  43d67c:	push   ebp
  43d67e:	add    BYTE PTR [esi+0xff9f41],dl
  43d684:	add    BYTE PTR ds:0xd051c00,dl
  43d68a:	dec    DWORD PTR [ecx+0x3fcc3ecc]
  43d690:	and    dl,cl
  43d692:	add    BYTE PTR [ecx-0x77ff3900],cl
  43d698:	int    0x53
  43d69a:	inc    DWORD PTR [eax]
  43d69c:	int3   
  43d69d:	(bad)
  43d6a0:	inc    edx
  43d6a1:	or     BYTE PTR [ecx+0xfcffcc],0xdc
  43d6a8:	dec    edi
  43d6a9:	cdq    
  43d6aa:	mov    DWORD PTR [ebx+0x5889cfff],eax
  43d6b0:	jbe    0x43d729
  43d6b2:	int3   
  43d6b3:	cmp    edi,0x0
  43d6b6:	mov    DWORD PTR [esi-0x2a],ecx
  43d6b9:	add    eax,0xe589ffff
  43d6be:	sbb    edx,0xffffffcd
  43d6c1:	push   0xffffffff
  43d6c3:	add    DWORD PTR [eax],0xffffffa4
  43d6c6:	int3   
  43d6c7:	sbb    eax,0xccde7b
  43d6cc:	mov    DWORD PTR [ebx],eax
  43d6ce:	adc    ecx,0xffffffc7
  43d6d1:	mov    cl,0xcc
  43d6d3:	inc    DWORD PTR [eax]
  43d6d5:	mov    esp,0x97d9d9ff
  43d6da:	(bad)  
  43d6db:	(bad)  
  43d6dc:	call   DWORD PTR [esi+0x48eabdcc]
  43d6e2:	int3   
  43d6e3:	(bad)  
  43d6e4:	push   DWORD PTR [eax]
  43d6e6:	add    DWORD PTR [ebp+0xff470b],0xffffffff
  43d6ed:	iret   
  43d6ee:	mov    esi,ecx
  43d6f0:	push   0xff00a5
  43d6f5:	dec    ecx
  43d6f6:	int3   
  43d6f7:	add    al,0xfe
  43d6f9:	sbb    BYTE PTR [ebx-0x76e67c01],al
  43d6ff:	cmp    dh,BYTE PTR [ebx-0x767cff92]
  43d705:	dec    eax
  43d706:	mov    DWORD PTR ds:0xcc3c50,edi
  43d70c:	mov    DWORD PTR [ecx+0x7631feff],esi
  43d712:	add    BYTE PTR [eax],al
  43d714:	add    cl,dl
  43d716:	call   esp
  43d718:	dec    ebp
  43d719:	adc    edi,edi
  43d71b:	inc    DWORD PTR [eax]
  43d71d:	mov    DWORD PTR [eax],0xff8b9834
  43d723:	mov    DWORD PTR [ecx+0x172affd4],ecx
  43d729:	test   eax,0x27ff00ff
  43d72e:	dec    DWORD PTR [esi]
  43d730:	pushf  
  43d731:	xlat   BYTE PTR ds:[ebx]
  43d732:	inc    DWORD PTR [ebx-0x757c3900]
  43d738:	xchg   esi,eax
  43d739:	ins    BYTE PTR es:[edi],dx
  43d73a:	add    bh,bh
  43d73c:	int3   
  43d73d:	sar    edi,cl
  43d73f:	mov    bl,0x5c
  43d741:	outs   dx,DWORD PTR ds:[esi]
  43d742:	int3   
  43d743:	add    bh,bh
  43d745:	push   0xffffff83
  43d747:	push   eax
  43d748:	sbb    ecx,0x45ffff83
  43d74e:	mov    DWORD PTR [esi+0x9],ebp
  43d751:	xor    bh,bh
  43d753:	(bad)  
  43d754:	call   FWORD PTR [edi-0x1c07e601]
  43d75a:	inc    DWORD PTR [ebx+0x3d89c2ff]
  43d760:	stc    
  43d761:	(bad)  
  43d762:	add    BYTE PTR [ebx-0x12000a01],al
  43d768:	mov    eax,0xff838b
  43d76d:	test   DWORD PTR [eax],eax
  43d76f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d770:	inc    eax
  43d771:	jno    0x43d773
  43d773:	inc    DWORD PTR [eax]
  43d775:	leave  
  43d776:	cmp    DWORD PTR [ecx],0x1c
  43d779:	cmp    al,0xff
  43d77b:	int3   
  43d77c:	add    BYTE PTR [ecx-0x43ca6b01],dh
  43d782:	inc    DWORD PTR [eax]
  43d784:	push   esp
  43d786:	add    BYTE PTR [edx],ch
  43d788:	dec    ebp
  43d789:	in     al,0x89
  43d78b:	inc    DWORD PTR [eax]
  43d78d:	lahf   
  43d78e:	add    BYTE PTR [ebx+0x67],dl
  43d791:	test   BYTE PTR [ebx-0x7c940001],0x61
  43d798:	lea    ebx,[edi-0x3a000000]
  43d79e:	adc    DWORD PTR [ebp-0x71],0xffffffd3
  43d7a2:	mov    DWORD PTR [eax],eax
  43d7a4:	push   DWORD PTR [edi+edi*8-0x7cc99973]
  43d7ab:	(bad)  
  43d7ac:	jmp    DWORD PTR [edi+edi*8+0xb2cf31]
  43d7b3:	(bad)  
  43d7b4:	call   FWORD PTR [esi-0x34]
  43d7b7:	(bad)
  43d7bb:	add    bh,bh
  43d7bd:	dec    edx
  43d7be:	mov    ebp,ecx
  43d7c0:	js     0x43d7cd
  43d7c2:	inc    DWORD PTR [eax]
  43d7c4:	int3   
  43d7c5:	fld    QWORD PTR [eax]
  43d7c7:	je     0x43d7c9
  43d7c9:	sub    cl,ah
  43d7cb:	add    bh,bh
  43d7cd:	mov    ecx,DWORD PTR [ecx+0x167d81]
  43d7d3:	(bad)  
  43d7d4:	jmp    DWORD PTR [ebx-0x76baa600]
  43d7da:	mov    edi,edi
  43d7dc:	sub    DWORD PTR [ecx+0x31cc6cff],0xffffffff
  43d7e3:	add    BYTE PTR [eax],al
  43d7e5:	test   edi,edi
  43d7e7:	in     eax,dx
  43d7e8:	cmp    eax,DWORD PTR cs:[ebx-0x617d00]
  43d7ef:	and    ah,ch
  43d7f1:	scas   al,BYTE PTR es:[edi]
  43d7f2:	int3   
  43d7f3:	inc    DWORD PTR [eax]
  43d7f5:	xchg   esp,eax
  43d7f6:	add    al,cl
  43d7f8:	sbb    BYTE PTR [esi-0x1],dh
  43d7fb:	cmp    edi,0x7f
  43d7fe:	add    BYTE PTR [edi],dl
  43d800:	mov    BYTE PTR [edi+0x0],cl
  43d803:	inc    DWORD PTR [eax]
  43d805:	retf   0xbccc
  43d808:	cld    
  43d809:	push   ebx
  43d80a:	int3   
  43d80b:	add    DWORD PTR [eax],0xffffff95
  43d80e:	call   FWORD PTR [eax]
  43d810:	inc    esp
  43d811:	add    BYTE PTR [eax],al
  43d813:	add    BYTE PTR [eax],al
  43d815:	stos   DWORD PTR es:[edi],eax
  43d816:	jmp    FWORD PTR [eax-0x10]
  43d819:	pop    ebx
  43d81a:	add    BYTE PTR [ecx-0x1aff8200],cl
  43d820:	xchg   edi,eax
  43d821:	xchg   ebx,eax
  43d822:	int3   
  43d823:	(bad)  
  43d824:	call   FWORD PTR ds:0xf1488989
  43d82a:	add    bh,bh
  43d82c:	inc    ebx
  43d82e:	and    DWORD PTR [ebp-0xb695],0xffffffff
  43d835:	ret    0x17ff
  43d838:	jbe    0x43d87e
  43d83a:	int3   
  43d83b:	cmp    edi,0xffffffdd
  43d83e:	add    BYTE PTR [ebx-0x32],dl
  43d841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d842:	add    DWORD PTR [ebx+0x5eff79ff],0x65
  43d849:	push   cs
  43d84a:	add    bh,bh
  43d84c:	inc    DWORD PTR ds:0x3b311acc
  43d852:	(bad)  
  43d853:	inc    DWORD PTR [eax]
  43d855:	or     DWORD PTR [ebx-0x1bd432],eax
  43d85b:	inc    DWORD PTR [eax]
  43d85d:	fiadd  WORD PTR [eax]
  43d85f:	jns    0x43d7f8
  43d861:	inc    ebx
  43d862:	inc    DWORD PTR [eax]
  43d864:	inc    DWORD PTR [edx-0x1]
  43d867:	repnz xor eax,0xff890077
  43d86d:	and    DWORD PTR [ecx+0xa64915],ecx
  43d873:	add    bh,bh
  43d875:	or     bh,bh
  43d877:	add    ebp,DWORD PTR [ebx+eax*4]
  43d87a:	add    BYTE PTR [ebx+0x27ff5f89],al
  43d880:	outs   dx,DWORD PTR ds:[esi]
  43d881:	repnz add BYTE PTR [eax],al
  43d884:	add    BYTE PTR [ebp-0x7d],dl
  43d887:	add    bl,dh
  43d889:	inc    ebp
  43d88a:	inc    DWORD PTR [ebx+0x15ff6b00]
  43d890:	pop    ebx
  43d891:	mov    ah,0xff
  43d893:	mov    esp,ecx
  43d895:	sar    bh,1
  43d897:	xor    al,dl
  43d899:	xchg   ecx,eax
  43d89a:	(bad)  
  43d89b:	inc    DWORD PTR [eax]
  43d89d:	gs (bad) 
  43d89f:	mov    esi,0x830a2e
  43d8a4:	add    BYTE PTR [eax+eax*1-0xf00fb],al
  43d8ab:	int3   
  43d8ac:	(bad)  
  43d8ad:	cld    
  43d8ae:	dec    DWORD PTR [esi+0x2b]
  43d8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d8b2:	inc    DWORD PTR [ebx+0xfff3a00]
  43d8b8:	mov    ebp,0x83ff0076
  43d8bd:	xor    eax,0x76e66789
  43d8c2:	add    BYTE PTR [eax],al
  43d8c4:	inc    DWORD PTR [ecx+0x0]
  43d8c7:	fyl2xp1 
  43d8c9:	and    edi,edi
  43d8cb:	inc    DWORD PTR [ebx-0x1d42ffeb]
  43d8d1:	mov    ecx,esp
  43d8d3:	cmp    edi,0xffffffd3
  43d8d6:	add    BYTE PTR [edx+0x2c],cl
  43d8d9:	xor    BYTE PTR [ebx-0x43ff01],al
  43d8df:	psubw  mm5,mm5
  43d8e2:	(bad)  
  43d8e3:	inc    DWORD PTR [eax]
  43d8e5:	pop    DWORD PTR [eax]
  43d8e7:	push   eax
  43d8e8:	dec    edi
  43d8e9:	in     eax,dx
  43d8ea:	add    BYTE PTR [eax],al
  43d8ec:	jmp    DWORD PTR [ecx-0x1]
  43d8ef:	mov    ch,0x2d
  43d8f1:	dec    esp
  43d8f2:	int3   
  43d8f3:	dec    esp
  43d8f5:	add    BYTE PTR [bp+0x10],cl
  43d8f9:	leave  
  43d8fa:	dec    DWORD PTR [ecx-0x64002a01]
  43d900:	(bad)  
  43d901:	fld    QWORD PTR [ebx-0x76ad007d]
  43d907:	push   edx
  43d908:	mov    ebp,0xff000024
  43d90d:	inc    eax
  43d90e:	add    BYTE PTR [ecx],al
  43d910:	sub    edx,DWORD PTR [ebx-0x1]
  43d913:	add    BYTE PTR [eax],al
  43d915:	in     eax,0x0
  43d917:	dec    esp
  43d918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d919:	(bad)  
  43d91b:	add    bh,bh
  43d91d:	dec    ecx
  43d91e:	add    BYTE PTR [esi-0x76339ce4],dh
  43d924:	call   FWORD PTR [ecx]
  43d926:	jmp    FWORD PTR [edi-0x48]
  43d929:	test   al,0x0
  43d92b:	or     esp,0xffffffa4
  43d92e:	add    BYTE PTR [esi+edi*4-0x4b],cl
  43d932:	(bad)  
  43d933:	inc    DWORD PTR [eax]
  43d935:	or     al,0xff
  43d937:	jle    0x43d8cc
  43d939:	mov    ah,cl
  43d93b:	cmp    edi,0xb
  43d93e:	or     DWORD PTR [ebx-0x7e],0x6d
  43d942:	inc    DWORD PTR [eax]
  43d944:	push   DWORD PTR [esi+0x72ea9500]
  43d94a:	inc    DWORD PTR [eax]
  43d94c:	adc    DWORD PTR [eax],0x0
  43d94f:	cdq    
  43d950:	stc    
  43d951:	nop
  43d952:	(bad)  
  43d953:	dec    esp
  43d955:	sbb    BYTE PTR [eax],al
  43d957:	mov    dl,0x69
  43d959:	rol    BYTE PTR [ebx+0x20000],cl
  43d95f:	xchg   DWORD PTR [eax-0x7cc9],esi
  43d965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d966:	jmp    DWORD PTR [edi-0x25]
  43d969:	cld    
  43d96a:	(bad)  
  43d96b:	inc    DWORD PTR [ebx-0x8faff04]
  43d971:	sar    bh,1
  43d973:	dec    DWORD PTR [ecx-0x20eeff5e]
  43d979:	aad    0xff
  43d97b:	int3   
  43d97c:	(bad)  
  43d97d:	mov    ebx,0xee894700
  43d982:	add    bh,bh
  43d984:	or     DWORD PTR [edi+edi*8],0xffffff8e
  43d988:	push   0xffff00fe
  43d98d:	retf   
  43d98e:	dec    DWORD PTR [edx+0xff0a45]
  43d994:	dec    edi
  43d996:	jmp    ecx
  43d998:	nop
  43d999:	(bad)  
  43d99a:	(bad)  
  43d99b:	inc    DWORD PTR [ebx-0x3dcf00e1]
  43d9a1:	pop    ds
  43d9a2:	inc    DWORD PTR [eax]
  43d9a4:	jmp    ecx
  43d9a6:	add    BYTE PTR [edx-0xffe5b0],ch
  43d9ac:	add    edi,0xffffff83
  43d9af:	jmp    ecx
  43d9b1:	stos   DWORD PTR es:[edi],eax
  43d9b2:	add    DWORD PTR [eax],0xffffffcc
  43d9b5:	lods   eax,DWORD PTR ds:[esi]
  43d9b6:	jmp    ecx
  43d9b8:	aam    0xe7
  43d9ba:	inc    DWORD PTR [eax]
  43d9bc:	int3   
  43d9bd:	or     eax,0x732dae00
  43d9c2:	add    DWORD PTR [eax],0x0
  43d9c5:	and    al,BYTE PTR [eax]
  43d9c7:	das    
  43d9c8:	xchg   ecx,eax
  43d9c9:	pop    edx
  43d9ca:	add    BYTE PTR [ebx+0x1cff9783],al
  43d9d0:	sub    DWORD PTR [ebp-0x1],0xffffff83
  43d9d4:	add    ah,bl
  43d9d6:	jmp    DWORD PTR [edi-0x3300fe67]
  43d9dc:	cmp    DWORD PTR [edi-0x33697001],0xffffff89
  43d9e3:	cmp    edi,0xffffffc1
  43d9e6:	add    BYTE PTR [edx-0x8],dh
  43d9e9:	jns    0x43d9ea
  43d9eb:	add    BYTE PTR [ebx-0xb3f7c70],al
  43d9f1:	inc    ebp
  43d9f2:	inc    DWORD PTR [eax]
  43d9f4:	and    DWORD PTR [edi],0xffffffff
  43d9f7:	sbb    al,0x9
  43d9f9:	test   DWORD PTR [eax],0xff0683ff
  43d9ff:	lods   al,BYTE PTR ds:[esi]
  43da00:	mov    ss,WORD PTR [esi+0x0]
  43da03:	dec    DWORD PTR [ecx-0x18c97cff]
  43da09:	loopne 0x43d9d7
  43da0b:	int3   
  43da0c:	add    BYTE PTR [edi-0x60c0bb01],dh
  43da12:	add    bh,bh
  43da14:	call   DWORD PTR [ebp-0x1]
  43da17:	pop    ebp
  43da18:	jnp    0x43da91
  43da1a:	add    ah,cl
  43da1c:	int3   
  43da1d:	mov    cl,ah
  43da1f:	stos   DWORD PTR es:[edi],eax
  43da20:	ins    DWORD PTR es:[edi],dx
  43da21:	pop    ebp
  43da22:	dec    DWORD PTR [ecx+0x3cff9700]
  43da28:	mov    esp,DWORD PTR [edi-0x31007d00]
  43da2e:	add    BYTE PTR [eax],al
  43da30:	xchg   BYTE PTR ds:0x39ff8900,dl
  43da36:	add    BYTE PTR [ebx-0xc1e2],cl
  43da3c:	jmp    DWORD PTR [edi+0x0]
  43da3f:	(bad)  
  43da40:	or     eax,0x89ffffb2
  43da45:	(bad)  
  43da46:	jmp    DWORD PTR [ebp-0x7600b5c6]
  43da4c:	(bad)  
  43da4d:	mov    ecx,0xfbde2eff
  43da52:	cmp    edi,0xffffffff
  43da55:	dec    ebx
  43da56:	add    BYTE PTR [ebp+0x31],ch
  43da59:	pop    eax
  43da5a:	dec    DWORD PTR [ecx-0x1f003c00]
  43da60:	pusha  
  43da61:	out    0xff,al
  43da63:	int3   
  43da64:	(bad)  
  43da65:	mov    ebx,0x4a993483
  43da6a:	(bad)  
  43da6b:	(bad)  
  43da6c:	jmp    DWORD PTR [edx]
  43da6e:	call   FWORD PTR [ebx-0xb11e]
  43da74:	push   DWORD PTR [edi+0x0]
  43da77:	inc    ebp
  43da78:	lods   eax,DWORD PTR ds:[esi]
  43da79:	push   ebp
  43da7a:	add    bh,bh
  43da7c:	push   edi
  43da7e:	add    bh,al
  43da80:	jae    0x43dab1
  43da82:	int3   
  43da83:	int3   
  43da84:	call   DWORD PTR [esi+0x567c46ff]
  43da8a:	inc    DWORD PTR [eax]
  43da8c:	jmp    DWORD PTR [eax-0xd535634]
  43da92:	add    DWORD PTR [eax],0x0
  43da95:	push   ebp
  43da96:	int3   
  43da97:	dec    eax
  43da98:	push   esi
  43da9a:	add    bh,bh
  43da9c:	add    BYTE PTR [edx-0x34],dh
  43da9f:	sbb    ebp,DWORD PTR [ecx]
  43daa1:	std    
  43daa2:	(bad)  
  43daa3:	(bad)  
  43daa4:	call   FWORD PTR [eax-0x1]
  43daa7:	outs   dx,BYTE PTR ds:[esi]
  43daa8:	into   
  43daa9:	mov    ds:0x6883ccff,al
  43daae:	jmp    DWORD PTR ds:0xff5860
  43dab4:	(bad)  
  43dab5:	cli    
  43dab6:	jmp    FWORD PTR [ecx]
  43dab8:	popa   
  43dab9:	or     eax,DWORD PTR [eax]
  43dabb:	(bad)  
  43dabc:	call   FWORD PTR [edx-0x34]
  43dabf:	mov    edx,0x1d12
  43dac4:	add    bh,dh
  43dac6:	add    BYTE PTR [ecx],dl
  43dac8:	mov    ebp,0x89ffff67
  43dacd:	mov    ds:0xd47afdff,al
  43dad2:	add    BYTE PTR [eax],al
  43dad4:	mov    DWORD PTR [ebx],eax
  43dad6:	push   DWORD PTR [ebx+edi*2-0x7cff337e]
  43dadd:	sub    ecx,DWORD PTR [ecx-0x7c189d9e]
  43dae3:	inc    DWORD PTR [ebx-0x79e1ff75]
  43dae9:	hlt    
  43daea:	(bad)  
  43daeb:	(bad)  
  43daec:	call   DWORD PTR [edx-0x1]
  43daef:	imul   edx,DWORD PTR [ebp-0x38],0xffffff83
  43daf3:	inc    DWORD PTR [eax]
  43daf5:	pusha  
  43daf6:	int3   
  43daf7:	hlt    
  43daf8:	test   al,0x29
  43dafa:	int3   
  43dafb:	add    BYTE PTR [ebx-0x466e005a],al
  43db01:	mov    ah,cl
  43db03:	(bad)  
  43db04:	call   FWORD PTR [ebx+eax*4+0x468b05]
  43db0b:	add    DWORD PTR [eax],0x29
  43db0e:	add    DWORD PTR [ebx+ecx*2],0xffffff8e
  43db12:	inc    DWORD PTR [eax]
  43db14:	int3   
  43db15:	verr   WORD PTR [ecx+ecx*2]
  43db19:	xlat   BYTE PTR ds:[ebx]
  43db1a:	add    bh,bh
  43db1c:	inc    DWORD PTR [edi]
  43db1e:	inc    DWORD PTR [eax]
  43db20:	pop    ss
  43db21:	dec    ebp
  43db22:	mov    DWORD PTR [ebx+0xc00c0cc],eax
  43db28:	sub    eax,0x8383ffa9
  43db2d:	outs   dx,DWORD PTR ds:[esi]
  43db2e:	dec    eax
  43db30:	pop    ecx
  43db31:	sar    edi,0x83
  43db34:	add    dl,ch
  43db36:	sbb    DWORD PTR [eax],0xffffffa4
  43db39:	popa   
  43db3a:	inc    DWORD PTR [eax]
  43db3c:	dec    DWORD PTR [esi-0x7d]
  43db3f:	icebp  
  43db40:	adc    al,0xa5
  43db42:	add    DWORD PTR [eax],0x0
  43db45:	and    al,BYTE PTR [eax]
  43db47:	mov    cl,0xf
  43db49:	xchg   ebp,eax
  43db4a:	(bad)  
  43db4b:	(bad)  
  43db4c:	jmp    DWORD PTR [eax-0x33e15901]
  43db52:	add    DWORD PTR [ebx-0x75ff6501],0xffffffc1
  43db59:	xchg   bh,bh
  43db5b:	mov    edi,edi
  43db5d:	mov    ds:0x92d33b00,al
  43db62:	add    DWORD PTR [eax],0xffffffff
  43db65:	repnz add BYTE PTR [edx],bh
  43db68:	mov    BYTE PTR [ebx],al
  43db6a:	mov    DWORD PTR [ecx+0x120042ff],ecx
  43db70:	pop    es
  43db71:	retf   0xff89
  43db74:	add    al,dl
  43db76:	add    BYTE PTR [esi+eax*1-0x2b],al
  43db7d:	pop    edx
  43db7e:	add    edi,0xffffffa4
  43db81:	or     eax,DWORD PTR [eax]
  43db83:	add    DWORD PTR [ebx-0x3be200d4],0xfffffff1
  43db8a:	inc    DWORD PTR [ebx-0x2576b300]
  43db90:	pop    ecx
  43db91:	imul   eax,DWORD PTR [eax],0xffffff83
  43db94:	call   FWORD PTR [ecx-0x23d96334]
  43db9a:	(bad)  
  43db9b:	dec    esp
  43db9d:	out    dx,al
  43db9e:	push   DWORD PTR [ebx+edx*8-0x7cffc6]
  43dba5:	jbe    0x43dba6
  43dba7:	nop
  43dba8:	dec    eax
  43dba9:	lods   al,BYTE PTR ds:[esi]
  43dbaa:	(bad)  
  43dbab:	inc    DWORD PTR [eax]
  43dbad:	sbb    bh,bh
  43dbaf:	sub    eax,0x89ffa546
  43dbb4:	(bad)  
  43dbb5:	cmp    edi,edi
  43dbb7:	pop    ss
  43dbb8:	push   0xffffffae
  43dbba:	add    BYTE PTR [ebx+0x5dff2aff],al
  43dbc0:	sub    esi,edx
  43dbc2:	(bad)  
  43dbc3:	inc    DWORD PTR [ebx-0xc19ffa5]
  43dbc9:	imul   edi,edi,0x3b00cc
  43dbcf:	mov    cl,0x2f
  43dbd1:	ins    DWORD PTR es:[edi],dx
  43dbd2:	(bad)  
  43dbd3:	dec    DWORD PTR [ecx-0x36ca0060]
  43dbd9:	fs dec esp
  43dbdc:	add    BYTE PTR [edi],al
  43dbde:	add    dl,dl
  43dbe0:	dec    ecx
  43dbe1:	mov    eax,ds:0xf3ff0083
  43dbe6:	dec    DWORD PTR [ebx-0x337c33c0]
  43dbec:	jmp    DWORD PTR [edx-0x1]
  43dbef:	sbb    eax,eax
  43dbf1:	add    BYTE PTR ss:[ecx+0x54ff7083],cl
  43dbf8:	(bad)  
  43dbf9:	data16 add BYTE PTR [ebx-0x4e7c0f01],al
  43dc00:	sbb    edi,DWORD PTR [ecx-0x7d]
  43dc03:	add    bh,bh
  43dc05:	add    eax,0x8d68dbff
  43dc0a:	cmp    edi,0x0
  43dc0d:	jmp    0xff00:0xaef23089
  43dc14:	add    BYTE PTR [eax-0x34],dh
  43dc17:	add    BYTE PTR [esi+0x1],ah
  43dc1a:	add    bh,bh
  43dc1c:	mov    ecx,esi
  43dc1e:	call   DWORD PTR [eax-0x33cb27]
  43dc24:	call   ebx
  43dc26:	dec    edx
  43dc28:	mov    bl,0x21
  43dc2a:	add    DWORD PTR [ebx+0x10002800],0x6a
  43dc31:	sub    bh,bh
  43dc33:	(bad)  
  43dc34:	jmp    DWORD PTR [eax]
  43dc36:	dec    DWORD PTR [edi+0xff89ad]
  43dc3c:	cmp    DWORD PTR [edx],0xffffffff
  43dc3f:	sti    
  43dc40:	xchg   esi,eax
  43dc41:	out    dx,al
  43dc42:	add    bh,bh
  43dc44:	add    BYTE PTR ds:0x80b272ff,ch
  43dc4a:	add    bh,bh
  43dc4c:	mov    DWORD PTR [ebp+0x526ea683],ebx
  43dc52:	(bad)  
  43dc53:	(bad)  
  43dc54:	jmp    FWORD PTR [edx+0x63baff83]
  43dc5a:	(bad)  
  43dc5b:	inc    DWORD PTR [ebx-0x50c900ee]
  43dc61:	or     ah,cl
  43dc63:	inc    DWORD PTR [eax]
  43dc65:	(bad)  
  43dc66:	jmp    FWORD PTR [eax]
  43dc68:	cdq    
  43dc69:	pop    DWORD PTR [eax]
  43dc6b:	(bad)  
  43dc6c:	(bad)  
  43dc6d:	jp     0x43dc3b
  43dc6f:	mov    es,edi
  43dc71:	aam    0xcc
  43dc73:	cmp    edi,0x7a
  43dc76:	dec    DWORD PTR [eax+0x71]
  43dc79:	jecxz  0x43dc47
  43dc7b:	inc    DWORD PTR [eax]
  43dc7d:	and    DWORD PTR [eax],eax
  43dc7f:	shr    BYTE PTR [ecx+0x7a],0x83
  43dc83:	cmp    edi,0x4a
  43dc86:	add    BYTE PTR [ebp+eiz*1-0x760084],ch
  43dc8d:	mov    DWORD PTR [bp+si+0xa6d],edi
  43dc92:	dec    DWORD PTR [ecx-0x6f00f201]
  43dc98:	cmp    cl,al
  43dc9a:	mov    edi,edi
  43dc9c:	mov    edx,eax
  43dc9e:	adc    DWORD PTR ds:0xffff3dfa,0xffffffff
  43dca5:	push   esi
  43dca6:	add    BYTE PTR [ebx-0x76001546],dl
  43dcac:	mov    DWORD PTR [esi],eax
  43dcae:	int3   
  43dcaf:	pushw  0xcc53
  43dcb3:	(bad)  
  43dcb4:	(bad)  
  43dcb5:	js     0x43dcb6
  43dcb7:	ins    BYTE PTR es:[edi],dx
  43dcb8:	jg     0x43dc4c
  43dcba:	add    BYTE PTR [eax],al
  43dcbc:	add    ah,ah
  43dcbe:	add    BYTE PTR [ebx],bh
  43dcc0:	xchg   ebx,eax
  43dcc1:	imul   eax,DWORD PTR [eax],0xffffffff
  43dcc4:	push   DWORD PTR [esi+0x0]
  43dcc7:	mov    bl,0xa2
  43dcc9:	add    bh,bh
  43dccb:	add    BYTE PTR [eax],al
  43dccd:	sar    bh,1
  43dccf:	gs mov esp,0xec
  43dcd5:	mov    ebp,0xc695bc00
  43dcda:	dec    esp
  43dcdc:	jmp    DWORD PTR [edx-0x46333300]
  43dce2:	add    BYTE PTR [eax],al
  43dce4:	add    BYTE PTR [edx+0x43cce9ff],dl
  43dcea:	(bad)  
  43dceb:	(bad)  
  43dcec:	jmp    edi
  43dcee:	or     DWORD PTR ds:0x89e50d,0x0
  43dcf5:	stos   BYTE PTR es:[edi],al
  43dcf6:	push   DWORD PTR [esi+ebx*1]
  43dcf9:	rol    DWORD PTR [eax],cl
  43dcfb:	dec    DWORD PTR [ecx-0x1182ff85]
  43dd01:	test   eax,0xc3ff00ff
  43dd06:	call   esi
  43dd08:	out    dx,eax
  43dd09:	rol    BYTE PTR [ebx-0x2aff01],1
  43dd0f:	mov    ch,0xdb
  43dd11:	push   ebp
  43dd12:	(bad)  
  43dd13:	dec    esp
  43dd15:	inc    edi
  43dd16:	cmp    DWORD PTR [esi+eiz*8-0x66],0x0
  43dd1b:	inc    DWORD PTR [ebx-0x562e00d6]
  43dd21:	in     al,0x0
  43dd23:	add    DWORD PTR [ebx-0x4ff500dd],0xffffff8f
  43dd2a:	mov    edi,edi
  43dd2c:	dec    DWORD PTR [ecx-0x34]
  43dd2f:	mov    edi,0xffff4e2a
  43dd34:	call   DWORD PTR [ecx-0x5c89bf34]
  43dd3a:	cmp    edi,0x0
  43dd3d:	pushf  
  43dd3e:	push   DWORD PTR [edi-0x31]
  43dd41:	lods   eax,DWORD PTR ds:[esi]
  43dd42:	add    bh,bh
  43dd44:	add    BYTE PTR [ecx-0x55b66601],bh
  43dd4a:	dec    esp
  43dd4c:	int3   
  43dd4d:	dec    DWORD PTR gs:[ebp-0x7cae7d]
  43dd54:	add    BYTE PTR [edx+0x0],dl
  43dd57:	jecxz  0x43dd9e
  43dd59:	repnz dec DWORD PTR [ecx+0x6900c683]
  43dd60:	iret   
  43dd61:	(bad)  
  43dd63:	add    bh,bh
  43dd65:	mov    esi,0x2da58200
  43dd6a:	inc    DWORD PTR [eax]
  43dd6c:	add    BYTE PTR [ebp+0x0],cl
  43dd6f:	add    al,0xad
  43dd71:	repz cmp edi,0xffffffcc
  43dd75:	nop
  43dd76:	mov    DWORD PTR [eax+0x26],ecx
  43dd79:	dec    edi
  43dd7a:	or     esp,0xffffffff
  43dd7d:	sbb    al,0x0
  43dd7f:	or     al,0xfb
  43dd81:	test   DWORD PTR [ecx-0x60034],ecx
  43dd87:	mov    edx,0x83409c
  43dd8c:	adc    edi,0xffffffcc
  43dd8f:	inc    ebp
  43dd90:	xchg   ecx,eax
  43dd91:	jbe    0x43dd92
  43dd93:	inc    DWORD PTR [eax]
  43dd95:	retf   
  43dd96:	add    cl,al
  43dd98:	push   edx
  43dd99:	push   es
  43dd9a:	inc    DWORD PTR [eax]
  43dd9c:	call   FWORD PTR [ebx-0x7d]
  43dd9f:	sub    eax,0xffff3ba4
  43dda4:	cmp    DWORD PTR [edi+edi*8],0xffffffaf
  43dda8:	mov    edi,DWORD PTR [edi]
  43ddaa:	inc    DWORD PTR [eax]
  43ddac:	call   DWORD PTR [ecx+0x716facff]
  43ddb2:	inc    DWORD PTR [eax]
  43ddb4:	add    BYTE PTR [esi-0x4929501],ah
  43ddba:	inc    DWORD PTR [eax]
  43ddbc:	add    BYTE PTR ds:0xdc7b3500,ah
  43ddc2:	int3   
  43ddc3:	inc    DWORD PTR [eax]
  43ddc5:	mov    bh,0xcc
  43ddc7:	pop    ecx
  43ddc8:	lahf   
  43ddc9:	inc    esi
  43ddca:	(bad)  
  43ddcb:	(bad)  
  43ddcc:	jmp    DWORD PTR [ebx]
  43ddce:	push   esi
  43ddd0:	or     ebx,DWORD PTR [edi-0x1]
  43ddd3:	add    DWORD PTR [ebx+0x1a65ffa2],0xffffffef
  43ddda:	inc    DWORD PTR [eax]
  43dddc:	jmp    FWORD PTR [ebx-0x1]
  43dddf:	pop    esi
  43dde0:	push   edx
  43dde1:	pop    ecx
  43dde2:	inc    DWORD PTR [eax]
  43dde4:	add    BYTE PTR [eax],al
  43dde6:	jmp    DWORD PTR [esi-0x7c76b4d7]
  43ddec:	add    BYTE PTR [ebx+0x200775ff],bl
  43ddf2:	int3   
  43ddf3:	or     esp,0x38
  43ddf6:	call   DWORD PTR [ebp-0x7c76d93b]
  43ddfc:	inc    DWORD PTR [esi-0x16bbd301]
  43de02:	cmp    edi,0xffffffff
  43de05:	pop    eax
  43de06:	jmp    ebx
  43de08:	lahf   
  43de09:	out    0xff,al
  43de0b:	(bad)  
  43de0c:	call   DWORD PTR [eax-0x7d]
  43de0f:	sbb    al,BYTE PTR [ebx]
  43de11:	out    dx,eax
  43de12:	add    ah,cl
  43de14:	add    dl,cl
  43de16:	(bad)  
  43de17:	mov    ebx,0xcc83d745
  43de1c:	add    BYTE PTR [ebx+0x3dfec0ff],ch
  43de22:	add    bh,bh
  43de24:	int3   
  43de25:	fadd   QWORD PTR [eax]
  43de27:	mov    ch,0x51
  43de29:	push   ecx
  43de2a:	add    bh,bh
  43de2c:	or     DWORD PTR [esi],0xffffffff
  43de2f:	int    0x94
  43de31:	(bad)  
  43de32:	inc    DWORD PTR [ebx+0x4a008900]
  43de38:	loope  0x43de12
  43de3a:	add    bh,bh
  43de3c:	and    DWORD PTR [eax+0x0],0x2
  43de40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43de41:	push   0x0
  43de43:	add    DWORD PTR [eax],0xffffffa4
  43de46:	dec    DWORD PTR [ebp-0x80]
  43de49:	add    BYTE PTR [eax],0xcc
  43de4c:	add    BYTE PTR [ebp-0x1],ch
  43de4f:	sbb    DWORD PTR [edi],ecx
  43de51:	addr16 add bh,bh
  43de54:	and    DWORD PTR [edx+0x227a2300],0x0
  43de5b:	(bad)  
  43de5c:	call   DWORD PTR [edx+0x56ed383]
  43de62:	(bad)  
  43de63:	inc    DWORD PTR [ebx+0x3801ff53]
  43de69:	jl     0x43ddee
  43de6b:	int3   
  43de6c:	add    DWORD PTR [edx-0x3c5dbd34],0xffffffff
  43de73:	inc    DWORD PTR [eax]
  43de75:	mov    bh,0x0
  43de77:	mov    ebx,esi
  43de79:	js     0x43ddfe
  43de7b:	cmp    edi,0xffffffc3
  43de7e:	jmp    FWORD PTR [edi-0x9bff]
  43de84:	cmp    ebp,0xffffffff
  43de87:	push   edi
  43de88:	xchg   ebp,eax
  43de89:	pusha  
  43de8a:	(bad)  
  43de8b:	(bad)  
  43de8c:	(bad)  
  43de8d:	jg     0x43de8e
  43de8f:	(bad)  
  43de90:	fdiv   st(5),st
  43de92:	dec    DWORD PTR [ecx-0x46ff9500]
  43de98:	pop    edx
  43de99:	or     al,0xcc
  43de9b:	inc    DWORD PTR [eax]
  43de9d:	sub    BYTE PTR [eax],al
  43de9f:	stos   BYTE PTR es:[edi],al
  43dea0:	nop
  43dea1:	es mov edi,edi
  43dea4:	int3   
  43dea5:	cmp    edi,0xffffffc9
  43dea8:	and    BYTE PTR [ecx-0x77],cl
  43deab:	add    bh,bh
  43dead:	and    bh,bh
  43deaf:	aam    0xe8
  43deb1:	stos   BYTE PTR es:[edi],al
  43deb2:	add    BYTE PTR [eax],al
  43deb4:	jmp    DWORD PTR [edi-0x1]
  43deb7:	call   0xffc7c5e2
  43debc:	int3   
  43debd:	int    0x0
  43debf:	add    BYTE PTR [ebx-0x8],0x0
  43dec3:	mov    DWORD PTR [ebx+0x703dcc6f],eax
  43dec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43deca:	(bad)  
  43decb:	dec    esp
  43decd:	xor    al,0xff
  43decf:	std    
  43ded0:	lea    ecx,[eax+eax*1-0x34]
  43ded4:	add    cl,cl
  43ded6:	add    BYTE PTR [edx],ch
  43ded8:	xor    ebx,DWORD PTR [ecx-0x1]
  43dedb:	inc    DWORD PTR [eax]
  43dedd:	sbb    ah,cl
  43dedf:	(bad)  
  43dee0:	aas    
  43dee1:	ret    
  43dee2:	add    bh,bh
  43dee4:	add    bl,al
  43dee6:	add    BYTE PTR [esi-0x7c7ce5a6],cl
  43deec:	(bad)  
  43deed:	(bad)  
  43deef:	mov    cs,ebx
  43def1:	mov    eax,ds:0xc5000000
  43def6:	inc    DWORD PTR [esp+ebx*4]
  43def9:	jmp    0x35c7aafe
  43defe:	int3   
  43deff:	mov    eax,ds:0xff8357d0
  43df04:	call   FWORD PTR [esi]
  43df06:	call   FWORD PTR [ecx-0x73]
  43df09:	hlt    
  43df0a:	mov    esp,ecx
  43df0c:	jmp    DWORD PTR [ecx-0x28416e34]
  43df12:	(bad)  
  43df13:	inc    DWORD PTR [ebx+0x7e4bffc5]
  43df19:	out    dx,eax
  43df1a:	(bad)  
  43df1b:	(bad)  
  43df1c:	call   esi
  43df1e:	add    BYTE PTR [ebx-0xb457],bl
  43df24:	add    BYTE PTR [esi],dl
  43df26:	add    BYTE PTR [ebx+0x69],dl
  43df29:	add    DWORD PTR [ebx-0x5f7601],0x840dc
  43df33:	inc    DWORD PTR [ebx+0x554bff2b]
  43df39:	xor    bh,bh
  43df3b:	add    bh,bh
  43df3d:	jb     0x43df3e
  43df3f:	pusha  
  43df40:	cmp    esi,DWORD PTR ds:0xa2ccffcc
  43df46:	sub    DWORD PTR ds:0xffffdb9d,0xffffffff
  43df4d:	jo     0x43df4f
  43df4f:	hlt    
  43df50:	js     0x43df82
  43df52:	mov    DWORD PTR [eax],eax
  43df54:	call   DWORD PTR [edi-0x77]
  43df57:	cmp    bl,BYTE PTR [esi]
  43df59:	jmp    0x43df5a
  43df5b:	add    DWORD PTR [eax],0x2e
  43df5e:	inc    DWORD PTR [eax+0xb545]
  43df64:	call   DWORD PTR [ebx]
  43df66:	add    BYTE PTR [eax-0x767c9357],dh
  43df6c:	inc    DWORD PTR [edi+0x0]
  43df6f:	or     eax,0xcc7138
  43df74:	jmp    DWORD PTR [ecx+0xf62d800]
  43df7a:	add    DWORD PTR [ebx-0x4d008401],0x63
  43df81:	push   ebx
  43df82:	add    BYTE PTR [ecx+0x1cff17ff],cl
  43df88:	sub    BYTE PTR [edi+edi*8],bl
  43df8b:	(bad)  
  43df8c:	jmp    FWORD PTR [ebp-0x11681501]
  43df92:	inc    DWORD PTR [eax]
  43df94:	mov    DWORD PTR [esi-0x26ccbb01],ebx
  43df9a:	add    BYTE PTR [ebx+0x3dffc2ff],al
  43dfa0:	sbb    esp,DWORD PTR [edi]
  43dfa2:	cmp    edi,0xffffffff
  43dfa5:	mov    al,0x0
  43dfa7:	sti    
  43dfa8:	iret   
  43dfa9:	xchg   bh,bh
  43dfab:	mov    edi,edi
  43dfad:	pop    ds
  43dfae:	sbb    ebx,0x3d
  43dfb1:	inc    DWORD PTR ds:[eax]
  43dfb4:	mov    DWORD PTR [edi+edi*8+0x49],ebx
  43dfb8:	mov    WORD PTR [eax],fs
  43dfba:	inc    DWORD PTR [eax]
  43dfbc:	inc    esi
  43dfbe:	inc    DWORD PTR [eax]
  43dfc0:	retf   0xfff9
  43dfc3:	dec    DWORD PTR [ecx-0x6bd330d]
  43dfc9:	jae    0x43dfca
  43dfcb:	add    BYTE PTR [eax],al
  43dfcd:	adc    al,BYTE PTR [eax]
  43dfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dfd0:	push   es
  43dfd1:	mov    al,0xff
  43dfd3:	(bad)  
  43dfd4:	jmp    FWORD PTR [ebx]
  43dfd6:	add    BYTE PTR [eax],bl
  43dfd8:	stos   DWORD PTR es:[edi],eax
  43dfd9:	fisttp QWORD PTR [ecx-0x33c5337d]
  43dfdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dfe0:	push   ecx
  43dfe1:	add    al,0x0
  43dfe3:	dec    esp
  43dfe5:	inc    edx
  43dfe6:	cmp    DWORD PTR [ebp-0xbff7],0x0
  43dfed:	pop    es
  43dfee:	dec    DWORD PTR [ebx-0x40]
  43dff1:	lock mov edi,edi
  43dff4:	or     DWORD PTR [edx],0x0
  43dff7:	dec    esi
  43dff8:	or     ecx,DWORD PTR [ecx-0x77]
  43dffb:	add    DWORD PTR [eax],0xfffffff4
  43dffe:	jmp    FWORD PTR [ebx]
  43e000:	cmp    al,0xa4
  43e002:	add    BYTE PTR [ecx+0x5eff0900],cl
  43e008:	ror    BYTE PTR [ebp-0x1],0x83
  43e00c:	add    BYTE PTR [eax],ah
  43e00e:	jmp    DWORD PTR [ebx-0xff97fd]
  43e014:	call   DWORD PTR [esi+0x3b2ac2ff]
  43e01a:	add    bh,bh
  43e01c:	call   DWORD PTR [eax-0x1]
  43e01f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e020:	inc    eax
  43e021:	sub    eax,0x70ff0000
  43e026:	mov    DWORD PTR [ebp-0x7665c2],edx
  43e02c:	(bad)  
  43e02d:	cmp    al,0x0
  43e02f:	xchg   ebx,eax
  43e030:	mov    bl,0x17
  43e032:	add    bh,bh
  43e034:	(bad)  
  43e035:	(bad)  
  43e037:	and    DWORD PTR [edx-0x3300000c],edi
  43e03d:	add    edi,edi
  43e03f:	dec    ecx
  43e040:	es sar edi,cl
  43e043:	dec    DWORD PTR [ecx-0x29e40054]
  43e049:	jg     0x43e04a
  43e04b:	int3   
  43e04c:	int3   
  43e04d:	(bad)  
  43e04f:	nop
  43e050:	sti    
  43e051:	xor    edi,edi
  43e053:	add    bh,bh
  43e055:	arpl   WORD PTR [ecx-0xee1b62],cx
  43e05b:	add    BYTE PTR [ebx+0x6fb20076],al
  43e061:	cld    
  43e062:	(bad)  
  43e063:	inc    DWORD PTR [ebx-0x36fb0056]
  43e069:	call   0xb300:0xc5ffccff
  43e070:	mov    ch,0xfc
  43e072:	add    BYTE PTR [ecx-0x137c6f01],cl
  43e078:	xchg   ebp,eax
  43e079:	dec    eax
  43e07a:	add    bh,bh
  43e07c:	jmp    edx
  43e07e:	call   DWORD PTR [ecx+0x3]
  43e081:	adc    esp,ecx
  43e083:	add    BYTE PTR [eax],al
  43e085:	test   DWORD PTR [ebx-0xa6e097],eax
  43e08b:	inc    DWORD PTR [eax]
  43e08d:	in     eax,dx
  43e08e:	add    BYTE PTR [ebx+0x51],ch
  43e091:	hlt    
  43e092:	mov    edi,edi
  43e094:	add    BYTE PTR [eax-0x7f54cb77],dh
  43e09a:	int3   
  43e09b:	inc    DWORD PTR [eax]
  43e09d:	xor    bh,bh
  43e09f:	inc    edx
  43e0a0:	repnz mov eax,0xa700ccff
  43e0a6:	add    bl,ah
  43e0a8:	sar    BYTE PTR [esi-0x74ffff7d],cl
  43e0ae:	int3   
  43e0af:	sahf   
  43e0b0:	js     0x43e0b9
  43e0b2:	add    BYTE PTR [ebx-0x2effd001],al
  43e0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e0b9:	inc    ebx
  43e0ba:	inc    DWORD PTR [eax]
  43e0bc:	adc    DWORD PTR [esi-0x3262a934],0x0
  43e0c3:	add    DWORD PTR [eax],0xffffffab
  43e0c6:	sub    esp,0xffffffde
  43e0c9:	mov    ecx,0xcf000083
  43e0ce:	add    BYTE PTR [ebp-0x7c00f914],dl
  43e0d4:	mov    ebp,eax
  43e0d6:	mov    DWORD PTR [edx-0xff8b26],esp
  43e0dc:	int3   
  43e0dd:	sub    bh,bh
  43e0df:	adc    eax,0xff7e00
  43e0e4:	inc    DWORD PTR [esi]
  43e0e6:	int3   
  43e0e7:	pushf  
  43e0e8:	mov    WORD PTR [edi+edi*8-0x1],?
  43e0ec:	jmp    DWORD PTR [esi-0x2300c334]
  43e0f2:	inc    DWORD PTR [eax]
  43e0f4:	add    BYTE PTR [edi],dl
  43e0f6:	add    BYTE PTR ds:0xff0017b2,bl
  43e0fc:	add    DWORD PTR [eax-0x1],0x1e
  43e100:	aas    
  43e101:	outs   dx,BYTE PTR ds:[esi]
  43e102:	(bad)  
  43e103:	inc    DWORD PTR [eax]
  43e105:	std    
  43e106:	int3   
  43e107:	rcr    DWORD PTR [esi-0x6],0xcc
  43e10b:	(bad)  
  43e10c:	jmp    FWORD PTR [eax]
  43e10e:	sub    DWORD PTR [ecx-0x58],0x48
  43e112:	add    DWORD PTR [ebx-0x3e7c0300],0xffffffc9
  43e119:	inc    edi
  43e11a:	add    bh,bh
  43e11c:	add    dh,dh
  43e11e:	push   edx
  43e120:	loope  0x43e0b8
  43e122:	(bad)  
  43e123:	inc    DWORD PTR [ebx-0xe6ffff5]
  43e129:	rol    DWORD PTR [ebx-0x76f90077],cl
  43e12f:	push   esi
  43e130:	xchg   esp,eax
  43e131:	xlat   BYTE PTR ds:[ebx]
  43e132:	(bad)  
  43e133:	inc    DWORD PTR [eax]
  43e135:	cmp    DWORD PTR [eax],eax
  43e137:	fs mov esi,0xffff00ef
  43e13d:	mov    ecx,esp
  43e13f:	out    0x44,al
  43e141:	sub    ecx,esp
  43e143:	add    ah,cl
  43e145:	rol    BYTE PTR [eax],0x5c
  43e148:	sbb    ebp,esp
  43e14a:	(bad)  
  43e14b:	(bad)  
  43e14c:	inc    edx
  43e14e:	add    dh,ah
  43e150:	or     eax,0xff89ff18
  43e155:	leave  
  43e156:	adc    esp,0x0
  43e159:	or     BYTE PTR [eax],al
  43e15b:	mov    DWORD PTR [eax],eax
  43e15d:	pop    esp
  43e15e:	int3   
  43e15f:	pop    esi
  43e160:	sub    eax,0xff89ffa4
  43e165:	out    0xff,al
  43e167:	push   ecx
  43e168:	mov    sp,0xffff
  43e16c:	sub    DWORD PTR [esi],0x0
  43e16f:	xor    edi,DWORD PTR [edi]
  43e171:	(bad)  
  43e173:	add    BYTE PTR [ecx-0x6ee8ff06],cl
  43e179:	xor    eax,DWORD PTR [eax]
  43e17b:	dec    esp
  43e17d:	inc    ebp
  43e17e:	int3   
  43e17f:	push   eax
  43e180:	fidivr WORD PTR [edi-0x1]
  43e183:	int3   
  43e184:	add    BYTE PTR [edx+0x41e6aaff],ch
  43e18a:	add    ah,cl
  43e18c:	cmp    DWORD PTR [ecx-0x1],0xffffffa4
  43e190:	inc    esi
  43e191:	jae    0x43e116
  43e193:	dec    esp
  43e195:	sbb    al,BYTE PTR [eax]
  43e197:	jns    0x43e1bd
  43e199:	mov    WORD PTR [eax],ax
  43e19c:	add    cl,dh
  43e19e:	add    BYTE PTR [edi-0xefa4],al
  43e1a4:	add    BYTE PTR [ebp-0x18c06501],bh
  43e1aa:	(bad)  
  43e1ab:	(bad)  
  43e1ac:	call   FWORD PTR [edx-0x1]
  43e1af:	fild   DWORD PTR ds:0xffff00ac
  43e1b5:	arpl   WORD PTR [eax],ax
  43e1b7:	shl    DWORD PTR [edi],cl
  43e1b9:	mov    ?,edi
  43e1bb:	add    BYTE PTR [ebx+0x61f0034],al
  43e1c1:	cmp    al,0xff
  43e1c3:	add    ah,cl
  43e1c5:	dec    edx
  43e1c6:	(bad)  
  43e1c7:	fistp  DWORD PTR [edx+0x19]
  43e1ca:	(bad)  
  43e1cb:	(bad)  
  43e1cc:	call   esi
  43e1ce:	dec    DWORD PTR [ebx-0x7c00e2e8]
  43e1d4:	jmp    DWORD PTR [ebx-0x77]
  43e1d7:	jg     0x43e1d2
  43e1d9:	into   
  43e1da:	(bad)  
  43e1db:	dec    esp
  43e1dd:	lods   eax,DWORD PTR ds:[esi]
  43e1de:	add    BYTE PTR [ebx],bl
  43e1e0:	iret   
  43e1e1:	and    bh,bh
  43e1e3:	add    BYTE PTR [eax],al
  43e1e5:	in     eax,dx
  43e1e6:	push   DWORD PTR ds:0x89000161
  43e1ec:	inc    DWORD PTR [eax-0x34]
  43e1ef:	jg     0x43e23a
  43e1f1:	mov    BYTE PTR [eax],0xff
  43e1f4:	add    BYTE PTR [ebx],bh
  43e1f6:	(bad)  
  43e1f7:	js     0x43e19e
  43e1f9:	sub    eax,0x98ff8300
  43e1fe:	add    BYTE PTR [eax-0x65],ch
  43e201:	int    0xff
  43e203:	mov    DWORD PTR [eax],eax
  43e205:	cmp    al,0x0
  43e207:	or     BYTE PTR [ecx-0x7cff00f8],ch
  43e20d:	stos   DWORD PTR es:[edi],eax
  43e20e:	inc    DWORD PTR [ebx-0xbbe6]
  43e214:	add    cl,dl
  43e216:	add    dl,ch
  43e218:	add    eax,0xff0000fd
  43e21d:	xchg   ecx,eax
  43e21e:	adc    edi,0x15
  43e221:	jp     0x43e1ef
  43e223:	dec    esp
  43e225:	lock add BYTE PTR [ebp+0x73],dh
  43e229:	or     DWORD PTR [ecx-0xb20077],ecx
  43e22f:	pop    ebx
  43e230:	mov    bh,0x2c
  43e232:	(bad)  
  43e233:	inc    DWORD PTR [eax]
  43e235:	jb     0x43e1ba
  43e237:	cmc    
  43e238:	xchg   ebp,eax
  43e239:	push   esp
  43e23a:	(bad)  
  43e23b:	(bad)  
  43e23c:	inc    ebx
  43e23e:	xor    ebx,0xffffffde
  43e241:	inc    ebp
  43e242:	add    bh,bh
  43e244:	add    BYTE PTR [ebx],ah
  43e246:	mov    DWORD PTR [eax+eax*4-0x6c],edx
  43e24a:	(bad)  
  43e24b:	inc    DWORD PTR [ebx+0x72eff0a]
  43e251:	xchg   edx,eax
  43e252:	add    BYTE PTR [ebx-0xb000377],al
  43e258:	and    BYTE PTR [eax-0x1],al
  43e25b:	add    bh,bh
  43e25d:	test   BYTE PTR [ecx-0x76de9a56],0xff
  43e264:	add    BYTE PTR [eax-0x4828277d],ch
  43e26a:	(bad)  
  43e26b:	(bad)  
  43e26c:	call   FWORD PTR [ecx]
  43e26e:	inc    DWORD PTR [ebx-0x3]
  43e271:	test   DWORD PTR [ecx-0xbaff34],0xcc49c902
  43e27b:	cmp    edi,0x47
  43e27e:	call   FWORD PTR [esi]
  43e280:	inc    edx
  43e281:	test   DWORD PTR [eax],0xff6a83ff
  43e287:	pop    ebp
  43e288:	adc    eax,0xffffff11
  43e28d:	dec    esi
  43e28e:	mov    DWORD PTR [esi+0x7d],ebx
  43e291:	call   0xe143e296
  43e296:	add    BYTE PTR [edi+0xff21dc],cl
  43e29c:	(bad)  
  43e29d:	call   0x813460a1
  43e2a2:	add    bh,bh
  43e2a4:	inc    DWORD PTR [edi+0x6ddeb8ff]
  43e2aa:	add    bh,bh
  43e2ac:	add    ah,ah
  43e2ae:	(bad)  
  43e2af:	fstp   QWORD PTR [ebx-0x76ff2a]
  43e2b5:	add    BYTE PTR [eax],0x10
  43e2b8:	mov    bl,0x94
  43e2ba:	(bad)  
  43e2bb:	inc    DWORD PTR [eax]
  43e2bd:	lahf   
  43e2be:	xor    DWORD PTR [ebx+0x62],0x39
  43e2c2:	inc    DWORD PTR [eax]
  43e2c4:	int3   
  43e2c5:	or     eax,0x575420ff
  43e2ca:	(bad)  
  43e2cb:	(bad)  
  43e2cc:	(bad)  
  43e2cd:	jnp    0x43e252
  43e2cf:	cmp    dh,ch
  43e2d1:	dec    ecx
  43e2d2:	(bad)  
  43e2d3:	inc    DWORD PTR [eax]
  43e2d5:	mov    eax,DWORD PTR [ebx-0x76023381]
  43e2db:	add    bh,bh
  43e2dd:	out    0xff,al
  43e2df:	popa   
  43e2e0:	and    eax,0xeb
  43e2e5:	loopne 0x43e26a
  43e2e7:	mov    ebp,0xff00261d
  43e2ec:	dec    DWORD PTR [ecx-0x137e3901]
  43e2f2:	add    BYTE PTR [ecx],al
  43e2f4:	add    BYTE PTR [eax],al
  43e2f6:	push   ebx
  43e2f7:	push   ebp
  43e2f8:	push   esi
  43e2f9:	push   edi
  43e2fa:	push   0x100
  43e2ff:	lea    eax,[esp+0x14]
  43e303:	push   eax
  43e304:	push   0x0
  43e306:	call   DWORD PTR ds:0x444020
  43e30c:	push   0x420910
  43e311:	call   0x43fda0
  43e316:	add    esp,0x4
  43e319:	push   0x5a
  43e31b:	call   DWORD PTR ds:0x444070
  43e321:	mov    edx,DWORD PTR ds:0x4470b8
  43e327:	movzx  eax,BYTE PTR [edx+0x6]
  43e32b:	movzx  esi,BYTE PTR [edx+0x4]
  43e32f:	shl    eax,0x8
  43e332:	add    eax,esi
  43e334:	movzx  esi,BYTE PTR [edx+0x2]
  43e338:	movzx  edx,BYTE PTR [edx]
  43e33b:	mov    ecx,DWORD PTR ds:0x447d1c
  43e341:	shl    eax,0x8
  43e344:	add    eax,esi
  43e346:	shl    eax,0x8
  43e349:	add    eax,edx
  43e34b:	mov    ds:0x447d04,eax
  43e350:	mov    edx,0x2ac4224a
  43e355:	sub    edx,DWORD PTR ds:0x447d14
  43e35b:	mov    ebp,DWORD PTR ds:0x444050
  43e361:	xor    edx,eax
  43e363:	mov    DWORD PTR [ecx],edx
  43e365:	mov    edx,DWORD PTR ds:0x4470b8
  43e36b:	movzx  eax,WORD PTR [edx+0xd]
  43e36f:	movzx  esi,BYTE PTR [edx+0xb]
  43e373:	movzx  edx,BYTE PTR [edx+0x7]
  43e377:	shl    eax,0x8
  43e37a:	add    eax,esi
  43e37c:	shl    eax,0x8
  43e37f:	add    eax,edx
  43e381:	mov    ds:0x447d04,eax
  43e386:	mov    edx,0x2ac4224a
  43e38b:	sub    edx,DWORD PTR ds:0x447d14
  43e391:	mov    ebx,0x2
  43e396:	xor    edx,eax
  43e398:	mov    DWORD PTR [ecx+0x4],edx
  43e39b:	mov    edx,DWORD PTR ds:0x4470b8
  43e3a1:	add    edx,0x10
  43e3a4:	mov    DWORD PTR ds:0x4470b8,edx
  43e3aa:	movzx  eax,BYTE PTR [edx+0x6]
  43e3ae:	movzx  esi,BYTE PTR [edx+0x4]
  43e3b2:	shl    eax,0x8
  43e3b5:	add    eax,esi
  43e3b7:	movzx  esi,BYTE PTR [edx+0x2]
  43e3bb:	movzx  edx,BYTE PTR [edx]
  43e3be:	shl    eax,0x8
  43e3c1:	add    eax,esi
  43e3c3:	shl    eax,0x8
  43e3c6:	add    eax,edx
  43e3c8:	mov    ds:0x447d04,eax
  43e3cd:	mov    edx,0x2ac4224a
  43e3d2:	sub    edx,DWORD PTR ds:0x447d14
  43e3d8:	xor    edx,eax
  43e3da:	mov    DWORD PTR [ecx+0x8],edx
  43e3dd:	mov    edx,DWORD PTR ds:0x4470b8
  43e3e3:	movzx  eax,WORD PTR [edx+0xd]
  43e3e7:	movzx  esi,BYTE PTR [edx+0xb]
  43e3eb:	movzx  edx,BYTE PTR [edx+0x7]
  43e3ef:	shl    eax,0x8
  43e3f2:	add    eax,esi
  43e3f4:	shl    eax,0x8
  43e3f7:	add    eax,edx
  43e3f9:	mov    edx,0x2ac4224a
  43e3fe:	sub    edx,DWORD PTR ds:0x447d14
  43e404:	mov    ds:0x447d04,eax
  43e409:	xor    edx,eax
  43e40b:	mov    DWORD PTR [ecx+0xc],edx
  43e40e:	mov    esi,DWORD PTR ds:0x447d1c
  43e414:	add    DWORD PTR ds:0x4470b8,0x10
  43e41b:	add    esi,0x10
  43e41e:	mov    edi,DWORD PTR ds:0x444028
  43e424:	call   ebp
  43e426:	mov    ecx,DWORD PTR ds:0x4470bc
  43e42c:	movzx  eax,WORD PTR [ecx+0x7]
  43e430:	movzx  ecx,WORD PTR [ecx+0x1]
  43e434:	mov    edx,DWORD PTR ds:0x447d14
  43e43a:	shl    eax,0x10
  43e43d:	add    eax,ecx
  43e43f:	xor    edx,eax
  43e441:	xor    edx,0x61814061
  43e447:	mov    ds:0x447d04,eax
  43e44c:	push   0x446b78
  43e451:	mov    DWORD PTR [esi],edx
  43e453:	call   edi
  43e455:	push   0x446b60
  43e45a:	call   edi
  43e45c:	mov    ecx,DWORD PTR ds:0x4470bc
  43e462:	movzx  eax,BYTE PTR [ecx+0xe]
  43e466:	movzx  edx,BYTE PTR [ecx+0xb]
  43e46a:	movzx  ecx,WORD PTR [ecx+0x9]
  43e46e:	shl    eax,0x8
  43e471:	add    eax,edx
  43e473:	mov    edx,DWORD PTR ds:0x447d14
  43e479:	shl    eax,0x10
  43e47c:	add    eax,ecx
  43e47e:	add    edx,0x6180c05f
  43e484:	xor    edx,eax
  43e486:	mov    ds:0x447d04,eax
  43e48b:	mov    DWORD PTR [esi+0x4],edx
  43e48e:	add    DWORD PTR ds:0x4470bc,0x10
  43e495:	add    esi,0x8
  43e498:	dec    ebx
  43e499:	jne    0x43e424
  43e49b:	mov    edx,DWORD PTR ds:0x4470c0
  43e4a1:	movzx  eax,BYTE PTR [edx+0x7]
  43e4a5:	movzx  esi,BYTE PTR [edx+0x5]
  43e4a9:	movzx  edx,WORD PTR [edx+0x2]
  43e4ad:	mov    ecx,DWORD PTR ds:0x447d1c
  43e4b3:	shl    eax,0x8
  43e4b6:	add    eax,esi
  43e4b8:	shl    eax,0x10
  43e4bb:	add    eax,edx
  43e4bd:	mov    edx,DWORD PTR ds:0x447d14
  43e4c3:	mov    ds:0x447d04,eax
  43e4c8:	add    edx,0x86233afc
  43e4ce:	xor    edx,eax
  43e4d0:	mov    DWORD PTR [ecx+0x20],edx
  43e4d3:	mov    edx,DWORD PTR ds:0x4470c0
  43e4d9:	add    edx,0x8
  43e4dc:	mov    DWORD PTR ds:0x4470c0,edx
  43e4e2:	movzx  eax,BYTE PTR [edx+0x7]
  43e4e6:	movzx  esi,BYTE PTR [edx+0x5]
  43e4ea:	movzx  edx,WORD PTR [edx+0x2]
  43e4ee:	shl    eax,0x8
  43e4f1:	add    eax,esi
  43e4f3:	shl    eax,0x10
  43e4f6:	add    eax,edx
  43e4f8:	mov    edx,DWORD PTR ds:0x447d14
  43e4fe:	mov    ds:0x447d04,eax
  43e503:	add    edx,0x86233afc
  43e509:	xor    edx,eax
  43e50b:	mov    DWORD PTR [ecx+0x24],edx
  43e50e:	mov    edx,DWORD PTR ds:0x4470c0
  43e514:	add    edx,0x8
  43e517:	mov    DWORD PTR ds:0x4470c0,edx
  43e51d:	movzx  eax,BYTE PTR [edx+0x7]
  43e521:	movzx  esi,BYTE PTR [edx+0x5]
  43e525:	movzx  edx,WORD PTR [edx+0x2]
  43e529:	shl    eax,0x8
  43e52c:	add    eax,esi
  43e52e:	shl    eax,0x10
  43e531:	add    eax,edx
  43e533:	mov    edx,DWORD PTR ds:0x447d14
  43e539:	mov    ds:0x447d04,eax
  43e53e:	add    edx,0x86233afc
  43e544:	xor    edx,eax
  43e546:	mov    DWORD PTR [ecx+0x28],edx
  43e549:	mov    edx,DWORD PTR ds:0x4470c0
  43e54f:	add    edx,0x8
  43e552:	mov    DWORD PTR ds:0x4470c0,edx
  43e558:	movzx  eax,BYTE PTR [edx+0x7]
  43e55c:	movzx  esi,BYTE PTR [edx+0x5]
  43e560:	movzx  edx,WORD PTR [edx+0x2]
  43e564:	shl    eax,0x8
  43e567:	add    eax,esi
  43e569:	shl    eax,0x10
  43e56c:	add    eax,edx
  43e56e:	mov    edx,DWORD PTR ds:0x447d14
  43e574:	add    edx,0x86233afc
  43e57a:	xor    edx,eax
  43e57c:	mov    ds:0x447d04,eax
  43e581:	mov    DWORD PTR [ecx+0x2c],edx
  43e584:	add    DWORD PTR ds:0x4470c0,0x8
  43e58b:	call   0x437b70
  43e590:	pop    edi
  43e591:	pop    esi
  43e592:	pop    ebp
  43e593:	pop    ebx
  43e594:	add    esp,0x100
  43e59a:	ret    
  43e59b:	int3   
  43e59c:	int3   
  43e59d:	int3   
  43e59e:	int3   
  43e59f:	int3   
  43e5a0:	mov    edi,edi
  43e5a2:	popf   
  43e5a3:	jmp    0x9449692b
  43e5a8:	pop    ebx
  43e5a9:	cmp    edi,0xffffffff
  43e5ac:	and    ebx,esp
  43e5ae:	dec    esi
  43e5b0:	add    DWORD PTR [eax],0x4
  43e5b3:	xchg   ebx,eax
  43e5b4:	inc    DWORD PTR [ebx-0x7c9fdd4e]
  43e5ba:	add    bh,bh
  43e5bc:	outs   dx,BYTE PTR ds:[esi]
  43e5bd:	sub    bh,bh
  43e5bf:	(bad)  
  43e5c0:	(bad)  
  43e5c1:	(bad)  
  43e5c2:	(bad)  
  43e5c3:	jae    0x43e5c4
  43e5c5:	(bad)  
  43e5c6:	mov    esp,0x52c0
  43e5cb:	and    DWORD PTR [edx+0x4d],0x0
  43e5cf:	mov    bh,bh
  43e5d1:	(bad)  
  43e5d2:	in     al,dx
  43e5d3:	(bad)  
  43e5d4:	(bad)  
  43e5d5:	jmp    FWORD PTR [edi]
  43e5d7:	pop    esi
  43e5d8:	jnp    0x43e5da
  43e5da:	add    BYTE PTR [ebx+0x21cceec7],al
  43e5e0:	add    BYTE PTR [eax],al
  43e5e2:	inc    ebx
  43e5e3:	(bad)  
  43e5e5:	add    BYTE PTR [esi],cl
  43e5e7:	cmp    eax,0xccffff
  43e5ec:	and    BYTE PTR ds:0x9b83,bl
  43e5f2:	push   edx
  43e5f3:	cmp    DWORD PTR [eax],eax
  43e5f5:	int3   
  43e5f6:	sub    esi,DWORD PTR [ecx-0xff00f1]
  43e5fc:	mov    ebp,0xffbbfff7
  43e601:	add    BYTE PTR [esi],dl
  43e603:	pusha  
  43e604:	inc    DWORD PTR [eax]
  43e606:	xor    al,0xd0
  43e608:	adc    al,0xff
  43e60a:	(bad)  
  43e60b:	jmp    FWORD PTR [esi]
  43e60d:	sbb    edi,edi
  43e60f:	test   al,0xff
  43e611:	add    BYTE PTR [edx],al
  43e613:	inc    edi
  43e614:	(bad)  
  43e615:	inc    DWORD PTR [ebx]
  43e617:	xchg   edi,eax
  43e618:	enter  0xff00,0xff
  43e61c:	inc    ebx
  43e61d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e61e:	int3   
  43e61f:	jecxz  0x43e620
  43e621:	add    BYTE PTR [ecx],ch
  43e623:	(bad)
  43e626:	mov    edi,0x1056
  43e62b:	call   FWORD PTR [ebx-0x2e]
  43e62e:	or     eax,0xffffff83
  43e631:	add    al,dh
  43e633:	je     0x43e634
  43e635:	add    BYTE PTR [ecx+edi*8-0x71],al
  43e639:	mov    edi,edi
  43e63b:	add    BYTE PTR [esi-0xf20072],ch
  43e641:	add    BYTE PTR [edx-0xf0000bf],dh
  43e647:	or     eax,0x838d
  43e64c:	fdiv   st,st(0)
  43e64e:	inc    DWORD PTR [ecx]
  43e650:	inc    DWORD PTR [eax]
  43e652:	iret   
  43e653:	icebp  
  43e654:	inc    DWORD PTR [ebx-0xbb53d]
  43e65a:	(bad)  
  43e65b:	dec    DWORD PTR [esi-0x15]
  43e65e:	sbb    DWORD PTR [edx],0xffffffcc
  43e661:	mov    DWORD PTR [ebp-0x73ff0023],eax
  43e667:	(bad)  
  43e668:	xor    DWORD PTR [eax],eax
  43e66a:	(bad)  
  43e66b:	call   DWORD PTR [edi]
  43e66d:	and    BYTE PTR [eax],al
  43e66f:	cld    
  43e670:	(bad)  
  43e671:	call   FWORD PTR [ebp-0x4b]
  43e674:	inc    DWORD PTR [ebx+0xa3a2ed]
  43e67a:	(bad)  
  43e67b:	inc    DWORD PTR [esi+ebx*4]
  43e67e:	jmp    FWORD PTR [edi]
  43e680:	add    BYTE PTR [eax],al
  43e682:	leave  
  43e683:	adc    al,BYTE PTR [eax]
  43e685:	call   FWORD PTR [edi]
  43e687:	dec    eax
  43e688:	push   cs
  43e689:	add    DWORD PTR [ebx+0xb55cff],0xffffff86
  43e690:	int3   
  43e691:	add    BYTE PTR [ebp-0x63],al
  43e694:	add    BYTE PTR [eax],al
  43e696:	mov    bl,dh
  43e698:	pop    ds
  43e699:	int3   
  43e69a:	(bad)  
  43e69b:	inc    DWORD PTR [eax]
  43e69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e69e:	dec    DWORD PTR [edx+0x2d2c8900]
  43e6a4:	add    bh,bh
  43e6a6:	ret    0xed8
  43e6a9:	add    bh,bh
  43e6ab:	add    BYTE PTR [esi+edx*8-0xfc01],dl
  43e6b2:	(bad)  
  43e6b3:	cmp    al,0x0
  43e6b5:	inc    DWORD PTR ds:0xff834879
  43e6bb:	jmp    FWORD PTR [edx]
  43e6bd:	cmp    al,BYTE PTR [ebx+0xff89df]
  43e6c3:	sub    BYTE PTR [ecx+0x51d77283],cl
  43e6c9:	add    bh,bh
  43e6cb:	sub    esp,0xffffffee
  43e6ce:	dec    DWORD PTR [edx+0x562e8900]
  43e6d4:	dec    DWORD PTR [ecx+0x7d0520]
  43e6da:	inc    DWORD PTR [ebx-0x7fff620c]
  43e6e0:	inc    DWORD PTR [eax]
  43e6e2:	pop    edx
  43e6e3:	or     bh,bh
  43e6e5:	add    BYTE PTR [edi+0x4e],ah
  43e6e8:	loope  0x43e6e9
  43e6ea:	(bad)  
  43e6eb:	call   edi
  43e6ed:	addr16 int3 
  43e6ef:	pop    esp
  43e6f0:	int3   
  43e6f1:	jmp    FWORD PTR [eax+0x11]
  43e6f4:	add    BYTE PTR [eax],al
  43e6f6:	test   al,0xde
  43e6f8:	lods   eax,DWORD PTR ds:[esi]
  43e6f9:	add    bh,bh
  43e6fb:	add    ah,ch
  43e6fd:	mov    WORD PTR [ebx+0x6700fff8],es
  43e703:	and    eax,0x36f900ff
  43e708:	cmc    
  43e709:	add    BYTE PTR [ecx-0x33cdcf00],cl
  43e70f:	dec    eax
  43e710:	mov    DWORD PTR [eax],eax
  43e712:	or     esi,DWORD PTR [edi]
  43e714:	add    bh,bh
  43e716:	std    
  43e717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e718:	mov    bl,0x83
  43e71a:	(bad)  
  43e71b:	(bad)  
  43e71c:	out    dx,al
  43e71d:	std    
  43e71e:	dec    DWORD PTR [edx-0x1]
  43e721:	inc    eax
  43e723:	cwde   
  43e724:	inc    DWORD PTR [ebx-0x33243c66]
  43e72a:	inc    DWORD PTR [eax]
  43e72c:	and    DWORD PTR [esi+0xff6400],esp
  43e732:	cdq    
  43e733:	sub    al,0xff
  43e735:	inc    DWORD PTR [edi-0xfa73]
  43e73b:	add    BYTE PTR [ecx],ch
  43e73d:	dec    esp
  43e73f:	test   edi,edi
  43e741:	call   DWORD PTR [edx-0x33]
  43e744:	add    bh,bh
  43e746:	adc    DWORD PTR [eax+0x1a],ebp
  43e749:	add    bh,bh
  43e74b:	dec    DWORD PTR [ebp+0x5200df]
  43e751:	add    cl,ah
  43e753:	sbb    eax,0xf45cffcc
  43e758:	sub    al,0xff
  43e75a:	(bad)  
  43e75b:	call   FWORD PTR [ebx-0x62]
  43e75e:	int3   
  43e75f:	out    dx,eax
  43e760:	inc    DWORD PTR [ebx-0x55f0]
  43e766:	mov    al,ds:0x7f24
  43e76b:	(bad)  
  43e76c:	jmp    0x76cc:0xfff18304
  43e773:	mov    DWORD PTR [ecx-0x6cbaf100],ecx
  43e779:	add    bh,bh
  43e77b:	jmp    FWORD PTR [esi]
  43e77d:	or     edi,edi
  43e77f:	mov    dl,0x83
  43e781:	int3   
  43e782:	mov    ds:0x30083f5,eax
  43e787:	mov    eax,0xffff0026
  43e78c:	push   0x56
  43e78e:	(bad)  
  43e78f:	fcos   
  43e791:	mov    DWORD PTR [ebx+edx*4+0x101aff00],eax
  43e798:	fs (bad) 
  43e79a:	(bad)  
  43e79b:	jmp    DWORD PTR [ecx-0xc5ffca]
  43e7a1:	mov    DWORD PTR [eax+0x6600ff9f],ebp
  43e7a7:	sbb    al,0x14
  43e7a9:	add    BYTE PTR [ebx-0x76327c01],al
  43e7af:	xchg   ebp,eax
  43e7b0:	add    DWORD PTR [eax],0x68
  43e7b3:	test   DWORD PTR [ecx-0xe8efe01],ecx
  43e7b9:	inc    DWORD PTR [eax]
  43e7bb:	push   DWORD PTR [ecx+edi*4]
  43e7be:	int3   
  43e7bf:	add    DWORD PTR [eax],0x0
  43e7c2:	sub    al,0xa0
  43e7c4:	add    ah,cl
  43e7c6:	mov    WORD PTR [eax],fs
  43e7c8:	pop    DWORD PTR [eax]
  43e7ca:	add    BYTE PTR [ebx-0x2700fdf2],al
  43e7d0:	(bad)  
  43e7d1:	push   eax
  43e7d3:	pop    eax
  43e7d4:	int3   
  43e7d5:	jmp    FWORD PTR [ecx-0x768bf0]
  43e7db:	call   FWORD PTR [eax+0x21]
  43e7de:	add    BYTE PTR [ebp-0x1],bh
  43e7e1:	add    BYTE PTR [eax+0x4b],dl
  43e7e4:	int3   
  43e7e5:	add    BYTE PTR [eax-0xffd8ca],bh
  43e7eb:	(bad)  
  43e7ec:	out    dx,al
  43e7ed:	pop    edx
  43e7ee:	jmp    FWORD PTR [ecx]
  43e7f0:	add    bh,bh
  43e7f2:	jae    0x43e819
  43e7f4:	add    BYTE PTR [eax],al
  43e7f6:	outs   dx,BYTE PTR ds:[esi]
  43e7f7:	xchg   ebx,eax
  43e7f8:	fmul   st(4),st
  43e7fa:	inc    DWORD PTR [eax]
  43e7fc:	popf   
  43e7fd:	sar    edi,0x49
  43e800:	inc    DWORD PTR [ebx-0x7600e0c7]
  43e806:	mov    ecx,0xff00e0bd
  43e80b:	call   FWORD PTR [ebp-0x66]
  43e80e:	mov    edi,edi
  43e810:	add    DWORD PTR [eax],0x2f
  43e813:	or     bh,bh
  43e815:	add    ah,bl
  43e817:	or     eax,0xff0000f7
  43e81c:	sub    eax,DWORD PTR [edi+edi*8-0x50ff7cd8]
  43e823:	out    0x83,al
  43e825:	push   edx
  43e827:	add    BYTE PTR [esi],bh
  43e829:	inc    DWORD PTR [ebx-0x849301]
  43e82f:	pop    esp
  43e830:	(bad)  
  43e831:	call   eax
  43e833:	outs   dx,BYTE PTR ds:[esi]
  43e834:	add    bh,bh
  43e836:	mov    cs,edx
  43e838:	xchg   BYTE PTR [eax],al
  43e83a:	(bad)  
  43e83b:	call   DWORD PTR [ebx+0x8e89ae]
  43e841:	add    dl,al
  43e843:	arpl   di,di
  43e845:	dec    DWORD PTR [edx]
  43e847:	sub    al,BYTE PTR [ecx+0x30ff00ff]
  43e84d:	push   eax
  43e84e:	sbb    ecx,0xffffffff
  43e851:	mov    DWORD PTR [eax+0x6d],edi
  43e854:	dec    esp
  43e856:	adc    BYTE PTR [ecx],al
  43e858:	call   0xab43e7e6
  43e85d:	and    al,0x0
  43e85f:	in     al,dx
  43e860:	or     esp,0xffffff9f
  43e863:	add    BYTE PTR [eax],al
  43e865:	add    ah,cl
  43e867:	mov    esi,eax
  43e869:	dec    esp
  43e86b:	mov    DWORD PTR [ecx-0x6b],ebp
  43e86e:	add    BYTE PTR [ebp-0x1],ah
  43e871:	int3   
  43e872:	es pop ecx
  43e874:	(bad)  
  43e875:	call   FWORD PTR [esi]
  43e877:	xchg   ebp,eax
  43e878:	mov    al,ds:0x6700ff00
  43e87d:	cmp    bh,0xef
  43e880:	(bad)  
  43e881:	inc    DWORD PTR [esi-0x51ffffc6]
  43e887:	out    dx,eax
  43e888:	loop   0x43e856
  43e88a:	inc    DWORD PTR [eax]
  43e88c:	imul   ecx,DWORD PTR [edx-0x7c76ca7d],0xffffb727
  43e896:	mov    ecx,0xffef53
  43e89b:	(bad)  
  43e89c:	in     al,dx
  43e89d:	jo     0x43e89f
  43e89f:	mov    edi,0x58a8ffff
  43e8a4:	(bad)  
  43e8a5:	push   DWORD PTR [ebp-0x12]
  43e8a8:	repz add bh,bh
  43e8ab:	(bad)  
  43e8ac:	cld    
  43e8ad:	and    eax,DWORD PTR [eax]
  43e8af:	sbb    al,0x0
  43e8b1:	call   ebp
  43e8b3:	inc    DWORD PTR ds:[eax]
  43e8b6:	adc    edi,ebp
  43e8b8:	imul   eax,DWORD PTR [eax],0xe99283ff
  43e8be:	inc    DWORD PTR [eax-0x1]
  43e8c1:	sub    DWORD PTR [edi+0x17],0xffffffff
  43e8c5:	inc    DWORD PTR [eax+eiz*2]
  43e8c8:	repz int3 
  43e8ca:	inc    DWORD PTR [eax]
  43e8cc:	ret    0x8320
  43e8cf:	leave  
  43e8d0:	add    bh,bh
  43e8d2:	pop    ds
  43e8d3:	cmp    al,0xcc
  43e8d5:	(bad)  
  43e8d6:	jmp    0xd600:0xffff4a5a
  43e8dd:	jns    0x43e8ab
  43e8df:	mov    al,ds:0x2198ff83
  43e8e4:	int3   
  43e8e5:	jmp    DWORD PTR [ebx]
  43e8e7:	call   esi
  43e8e9:	add    bh,bh
  43e8eb:	dec    esi
  43e8ed:	retf   0xb0ff
  43e8f0:	int3   
  43e8f1:	push   ebx
  43e8f3:	mov    al,0xff
  43e8f5:	add    BYTE PTR [edi+0x9cfa],al
  43e8fb:	(bad)  
  43e8fc:	mov    edx,0x5ff19
  43e901:	cmp    DWORD PTR [edi+0x2d],0x0
  43e905:	call   FWORD PTR [esi]
  43e907:	adc    BYTE PTR [eax-0x57ff007d],0x3
  43e90e:	add    BYTE PTR [edi+edi*8-0xeeb101],al
  43e915:	add    BYTE PTR [edi],dh
  43e917:	adc    eax,0xccffff25
  43e91c:	and    ah,ch
  43e91e:	add    BYTE PTR [eax-0x6ea87d00],bl
  43e924:	(bad)  
  43e925:	jmp    DWORD PTR [edi+0xff801f]
  43e92b:	jmp    eax
  43e92d:	sar    edi,1
  43e92f:	dec    ah
  43e931:	add    DWORD PTR [eax+0x330083d9],0xf
  43e938:	mov    eax,ds:0xf5ff00ff
  43e93d:	aam    0x0
  43e93f:	ins    DWORD PTR es:[edi],dx
  43e940:	add    BYTE PTR [ebx-0x33001b5b],al
  43e946:	loop   0x43e931
  43e948:	(bad)  
  43e949:	inc    DWORD PTR [ebx-0x7cf3b000]
  43e94f:	cld    
  43e950:	cmp    edi,0x7e
  43e953:	and    BYTE PTR [eax],al
  43e955:	call   DWORD PTR [edx-0x60b]
  43e95b:	call   FWORD PTR [ebx-0x7600007c]
  43e961:	(bad)  
  43e962:	jle    0x43e9e2
  43e964:	add    bh,bh
  43e966:	stos   BYTE PTR es:[edi],al
  43e967:	popf   
  43e968:	cmp    eax,0x9d00ff00
  43e96d:	les    eax,FWORD PTR [eax]
  43e96f:	stos   DWORD PTR es:[edi],eax
  43e970:	int3   
  43e971:	add    BYTE PTR [edx-0x6affffce],dh
  43e977:	cs cwde 
  43e979:	inc    DWORD PTR [eax]
  43e97b:	mov    DWORD PTR [edx],edi
  43e97d:	out    dx,eax
  43e97e:	jmp    DWORD PTR [esi+0x186883ff]
  43e984:	inc    DWORD PTR [eax]
  43e986:	dec    edi
  43e987:	inc    edi
  43e988:	jb     0x43e98a
  43e98a:	inc    DWORD PTR [eax]
  43e98c:	pusha  
  43e98d:	inc    ebx
  43e98e:	mov    DWORD PTR [edx],ecx
  43e990:	inc    DWORD PTR [eax]
  43e992:	mov    bl,0x1b
  43e994:	add    bh,bh
  43e996:	mov    dh,0xe9
  43e998:	das    
  43e999:	(bad)  
  43e99a:	inc    DWORD PTR [eax]
  43e99c:	ds jbe 0x43e99f
  43e99f:	mov    bl,0x0
  43e9a1:	add    BYTE PTR [ecx+0x4],al
  43e9a4:	inc    DWORD PTR [ebx-0xb20b8e]
  43e9aa:	add    bh,bh
  43e9ac:	pop    ss
  43e9ad:	inc    edi
  43e9ae:	add    BYTE PTR [edx+0x1270000],ah
  43e9b4:	dec    esp
  43e9b6:	jge    0x43e9cb
  43e9b8:	jle    0x43e986
  43e9ba:	inc    DWORD PTR [eax]
  43e9bc:	scas   al,BYTE PTR es:[edi]
  43e9bd:	fild   DWORD PTR [eax]
  43e9bf:	fcos   
  43e9c1:	int3   
  43e9c2:	push   es
  43e9c3:	sub    DWORD PTR [ecx-0x6e474c01],ecx
  43e9c9:	(bad)  
  43e9ca:	(bad)  
  43e9cb:	call   DWORD PTR [ebx+0xf783e8]
  43e9d1:	sub    DWORD PTR [ecx],0x73
  43e9d4:	(bad)  
  43e9d5:	(bad)  
  43e9d6:	stc    
  43e9d7:	pop    eax
  43e9d8:	pop    ebp
  43e9d9:	add    BYTE PTR [ebx+0x179c00],al
  43e9df:	das    
  43e9e0:	int3   
  43e9e1:	add    BYTE PTR [esp+eiz*4],dh
  43e9e4:	(bad)  
  43e9e5:	jmp    FWORD PTR [edx]
  43e9e7:	jmp    0x12bb:0x8300ff9d
  43e9ee:	mov    DWORD PTR [eax-0x3ef70000],edx
  43e9f4:	add    BYTE PTR [eax],al
  43e9f6:	add    al,0xca
  43e9f8:	xchg   ebx,eax
  43e9f9:	add    BYTE PTR [eax],al
  43e9fb:	int3   
  43e9fc:	popf   
  43e9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9fe:	call   DWORD PTR [eax-0x1]
  43ea01:	add    BYTE PTR [ebx],dh
  43ea03:	push   ebp
  43ea04:	(bad)  
  43ea05:	jmp    FWORD PTR [edi+edi*4+0x83cce7]
  43ea0c:	push   cs
  43ea0d:	je     0x43ea0f
  43ea0f:	push   esi
  43ea10:	add    BYTE PTR [ebx-0xff03f6],al
  43ea16:	mov    cl,0x7
  43ea18:	dec    eax
  43ea19:	inc    DWORD PTR [eax]
  43ea1b:	dec    DWORD PTR ds:0x9effad
  43ea21:	add    BYTE PTR [eax-0x51],dl
  43ea24:	cmp    edi,0xffffff9f
  43ea27:	(bad)  
  43ea28:	or     eax,0x29ffcccc
  43ea2d:	inc    ecx
  43ea2e:	add    dl,dl
  43ea30:	add    bh,bh
  43ea32:	or     al,0xdd
  43ea34:	add    BYTE PTR [ebx-0x7cb039e8],al
  43ea3a:	add    ah,cl
  43ea3c:	add    BYTE PTR [ecx],ah
  43ea3e:	jmp    FWORD PTR [ecx-0x1]
  43ea41:	(bad)  
  43ea42:	fiadd  WORD PTR [esi+0x4f900ff]
  43ea48:	pop    eax
  43ea49:	dec    esp
  43ea4b:	add    BYTE PTR [edx+0x77],al
  43ea4e:	jmp    FWORD PTR [ebp+0x5aabffff]
  43ea54:	inc    DWORD PTR [eax]
  43ea56:	xor    esi,DWORD PTR [esi+0x52]
  43ea59:	add    bh,bh
  43ea5b:	inc    DWORD PTR [edx-0x7669ffb4]
  43ea61:	sbb    DWORD PTR [ecx+0x64],0xffffffff
  43ea65:	add    bl,bh
  43ea67:	shl    BYTE PTR [esi],0xff
  43ea6a:	add    ah,cl
  43ea6c:	(bad)  
  43ea6d:	cmp    ecx,esp
  43ea6f:	inc    DWORD PTR [bx+si]
  43ea72:	(bad)  
  43ea73:	hlt    
  43ea74:	dec    esp
  43ea76:	cmp    BYTE PTR [ebx-0x7cff0019],dh
  43ea7c:	dec    esp
  43ea7d:	push   0xffff20cc
  43ea82:	aam    0x9e
  43ea84:	int3   
  43ea85:	(bad)  
  43ea86:	mov    edx,0x89004668
  43ea8b:	int3   
  43ea8c:	not    bh
  43ea8e:	call   eax
  43ea90:	add    bh,bh
  43ea92:	pop    ss
  43ea93:	lods   al,BYTE PTR ds:[esi]
  43ea94:	(bad)  
  43ea95:	call   DWORD PTR [ebp-0x7c33d9]
  43ea9b:	mov    DWORD PTR [ebp+0x51],eax
  43ea9e:	jmp    DWORD PTR [ebx]
  43eaa0:	(bad)  
  43eaa1:	jmp    FWORD PTR [ebp-0x55000072]
  43eaa7:	(bad)  
  43eaa8:	ins    BYTE PTR es:[edi],dx
  43eaa9:	add    BYTE PTR [eax],al
  43eaab:	jmp    ecx
  43eaad:	sbb    eax,DWORD PTR [ebx+0x42ff00c3]
  43eab3:	(bad)  
  43eab4:	inc    DWORD PTR [eax]
  43eab6:	push   ebp
  43eab7:	mov    ah,0x16
  43eab9:	cmp    edi,0xffffffff
  43eabc:	inc    edx
  43eabd:	popf   
  43eabe:	xor    DWORD PTR [eax-0x34],0xffffff83
  43eac2:	jnp    0x43eb19
  43eac4:	mov    edi,edi
  43eac6:	xchg   ebp,eax
  43eac7:	adc    al,0xe4
  43eac9:	inc    DWORD PTR [ebx+0x5a4600]
  43eacf:	push   edi
  43ead0:	inc    DWORD PTR [eax]
  43ead2:	and    ebx,DWORD PTR [ebp-0x42070000]
  43ead8:	sub    eax,0x9eff8300
  43eadd:	cmp    DWORD PTR [eax],eax
  43eadf:	daa    
  43eae0:	add    bh,bh
  43eae2:	jae    0x43eaa1
  43eae4:	inc    DWORD PTR [eax]
  43eae6:	xor    BYTE PTR [edx+0xc],0xff
  43eaea:	int3   
  43eaeb:	call   DWORD PTR [eax]
  43eaed:	out    dx,al
  43eaee:	jmp    FWORD PTR ds:0x7815ffff
  43eaf4:	add    bh,bh
  43eaf6:	push   ecx
  43eaf7:	push   ebp
  43eaf8:	retf   0x83ff
  43eafb:	call   ebx
  43eafd:	add    bh,bh
  43eaff:	adc    al,0x0
  43eb01:	push   DWORD PTR [eax+0x1e]
  43eb04:	add    BYTE PTR [eax],al
  43eb06:	xchg   bl,bl
  43eb08:	jns    0x43ead6
  43eb0a:	int3   
  43eb0b:	int3   
  43eb0c:	push   eax
  43eb0d:	pop    esi
  43eb0e:	jmp    FWORD PTR [ebx+0x43b5ff83]
  43eb14:	inc    DWORD PTR [eax]
  43eb16:	or     eax,0xffff8192
  43eb1b:	(bad)  
  43eb1c:	fucomi st,st(7)
  43eb1e:	inc    DWORD PTR [ecx-0x2cc87c01]
  43eb24:	cmp    edi,0xffffffc9
  43eb27:	jae    0x43eac8
  43eb29:	add    ah,cl
  43eb2b:	int3   
  43eb2c:	jmp    0x3e00:0xcc1dff25
  43eb33:	fdiv   st(7),st
  43eb35:	(bad)  
  43eb36:	jmp    0x8dcc:0xffff31fb
  43eb3d:	mov    edx,0xffcc1783
  43eb42:	sti    
  43eb43:	cdq    
  43eb44:	inc    DWORD PTR [eax]
  43eb46:	and    BYTE PTR [esi+eiz*4-0x41ffff01],dh
  43eb4d:	xchg   esp,eax
  43eb4e:	cmp    DWORD PTR [edi-0x6ea20100],0xffffff83
  43eb55:	(bad)  
  43eb56:	jp     0x43eb42
  43eb58:	inc    BYTE PTR [eax]
  43eb5a:	add    BYTE PTR [ebx-0x79ff88e9],al
  43eb60:	(bad)  
  43eb61:	(bad)  
  43eb62:	js     0x43eb35
  43eb64:	add    bh,bh
  43eb66:	jg     0x43ebbc
  43eb68:	or     al,0xff
  43eb6a:	inc    DWORD PTR [eax]
  43eb6c:	adc    esp,DWORD PTR [edi-0x1]
  43eb6f:	(bad)  
  43eb71:	inc    DWORD PTR [ebx-0x5100ffe8]
  43eb77:	jb     0x43eb92
  43eb79:	add    bh,bh
  43eb7b:	call   DWORD PTR [esi+0x18]
  43eb7e:	call   FWORD PTR [edi]
  43eb80:	(bad)  
  43eb81:	dec    DWORD PTR [eax-0x7100ff76]
  43eb87:	arpl   WORD PTR [eax+0x0],bp
  43eb8a:	inc    DWORD PTR [eax]
  43eb8c:	scas   eax,DWORD PTR es:[edi]
  43eb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eb8e:	call   DWORD PTR [ecx]
  43eb90:	add    bh,bh
  43eb92:	mov    esp,0xc2ffccb1
  43eb97:	cmp    bh,BYTE PTR [edi+edi*8+0x2285ffff]
  43eb9e:	add    bl,cl
  43eba0:	inc    DWORD PTR [eax]
  43eba2:	sahf   
  43eba3:	and    ecx,esp
  43eba5:	add    BYTE PTR [ecx-0x7c00ea34],ch
  43ebab:	jmp    DWORD PTR [ebx-0x7cc00080]
  43ebb1:	dec    DWORD PTR [esi-0x27]
  43ebb4:	inc    DWORD PTR [eax]
  43ebb6:	and    ecx,esp
  43ebb8:	sbb    eax,0xdff8983
  43ebbd:	iret   
  43ebbe:	mov    DWORD PTR [eax],ecx
  43ebc0:	(bad)  
  43ebc1:	dec    ecx
  43ebc3:	icebp  
  43ebc4:	(bad)  
  43ebc5:	jmp    DWORD PTR [ebx-0x13]
  43ebc8:	test   BYTE PTR [eax],al
  43ebca:	(bad)  
  43ebcb:	inc    DWORD PTR [esp+esi*2-0x1]
  43ebcf:	das    
  43ebd0:	add    bh,bh
  43ebd2:	mov    ds:0x89ff8925,eax
  43ebd7:	xchg   edi,eax
  43ebd8:	out    0xff,al
  43ebda:	inc    DWORD PTR [eax]
  43ebdc:	popa   
  43ebdd:	inc    eax
  43ebde:	call   FWORD PTR [ebx+0x7bb5ff00]
  43ebe4:	dec    esp
  43ebe6:	test   DWORD PTR [esi],ebx
  43ebe8:	push   esi
  43ebe9:	or     DWORD PTR [ecx+0x7f3b00],0x21
  43ebf0:	mov    DWORD PTR [eax],eax
  43ebf2:	call   0xc844eb64
  43ebf7:	out    0x4,eax
  43ebf9:	int3   
  43ebfa:	int3   
  43ebfb:	(bad)  
  43ebfc:	jle    0x43ec64
  43ebfe:	call   FWORD PTR [edx+0x5f4cff83]
  43ec04:	add    BYTE PTR [eax],al
  43ec06:	int3   
  43ec07:	sbb    dh,BYTE PTR [edx-0x8000100]
  43ec0d:	push   es
  43ec0e:	call   FWORD PTR [ebp+0x654dffff]
  43ec14:	add    DWORD PTR [eax],0x4f
  43ec17:	pushf  
  43ec18:	(bad)  
  43ec19:	inc    DWORD PTR [eax]
  43ec1b:	add    BYTE PTR [edx-0xa],al
  43ec1e:	call   FWORD PTR [eax+0x20489cc]
  43ec24:	add    BYTE PTR [eax],al
  43ec26:	pop    ss
  43ec27:	das    
  43ec28:	in     eax,dx
  43ec29:	add    DWORD PTR [eax],0x0
  43ec2c:	pop    ds
  43ec2d:	ds (bad) 
  43ec2f:	clc    
  43ec30:	inc    DWORD PTR [ebx+0xff36f8]
  43ec36:	and    DWORD PTR [ebp-0x6f],eax
  43ec39:	(bad)  
  43ec3a:	dec    esp
  43ec3c:	mov    ds:0xffc089ff,eax
  43ec41:	add    BYTE PTR [ebx],ah
  43ec43:	xor    bh,bh
  43ec45:	add    ch,al
  43ec47:	pop    es
  43ec48:	aad    0x83
  43ec4a:	add    BYTE PTR [eax],al
  43ec4c:	jge    0x43ec04
  43ec4e:	(bad)  
  43ec4f:	jge    0x43ec51
  43ec51:	add    BYTE PTR [ecx+0x54],dl
  43ec54:	int3   
  43ec55:	add    ah,bh
  43ec57:	pop    esi
  43ec58:	push   cs
  43ec59:	add    BYTE PTR [ebx+0x1baf83],al
  43ec5f:	sti    
  43ec60:	add    bh,bh
  43ec62:	jbe    0x43ec62
  43ec64:	(bad)  
  43ec65:	call   FWORD PTR [esi+0xf7d9]
  43ec6b:	add    cl,bl
  43ec6d:	mov    bh,bh
  43ec6f:	std    
  43ec70:	inc    DWORD PTR [eax]
  43ec72:	sbb    DWORD PTR [ebp-0x7d],0x836bdcff
  43ec79:	inc    DWORD PTR [eax]
  43ec7b:	jmp    DWORD PTR [eax]
  43ec7d:	arpl   WORD PTR [eax],ax
  43ec7f:	jb     0x43ec80
  43ec81:	and    DWORD PTR [edi],0x29
  43ec84:	inc    DWORD PTR [eax]
  43ec86:	xor    eax,0xffffc6e2
  43ec8b:	add    BYTE PTR [edx],dl
  43ec8d:	call   0x9bdc:0x8365ff
  43ec94:	mov    edi,edi
  43ec96:	iret   
  43ec97:	xchg   edx,eax
  43ec98:	test   BYTE PTR [eax],0x89
  43ec9b:	jmp    FWORD PTR [ecx]
  43ec9d:	cmp    edi,edi
  43ec9f:	and    BYTE PTR [eax],al
  43eca1:	int3   
  43eca2:	xchg   DWORD PTR [esi],edi
  43eca4:	inc    DWORD PTR [eax]
  43eca6:	xchg   ecx,eax
  43eca7:	ja     0x43ecbc
  43eca9:	mov    DWORD PTR [eax],eax
  43ecab:	push   DWORD PTR [ebx+0xfbccf1]
  43ecb1:	int3   
  43ecb2:	cmp    BYTE PTR [ebp-0x1],dl
  43ecb5:	mov    ecx,edi
  43ecb7:	sti    
  43ecb8:	ins    DWORD PTR es:[edi],dx
  43ecb9:	add    BYTE PTR [ecx-0xba1901],cl
  43ecbf:	push   eax
  43ecc0:	mov    DWORD PTR [eax],eax
  43ecc2:	leave  
  43ecc3:	adc    bh,bh
  43ecc5:	xor    DWORD PTR [edi+0x36],0xffffffa9
  43ecc9:	add    bh,bh
  43eccb:	push   DWORD PTR [eax+0x58]
  43ecce:	jmp    FWORD PTR [esp+ecx*8-0x683f7d]
  43ecd5:	mov    DWORD PTR [esi],ebx
  43ecd7:	mov    ebx,0xffff0026
  43ecdc:	xchg   esi,eax
  43ecdd:	sbb    eax,0xff8b00
  43ece2:	in     eax,dx
  43ece3:	fwait
  43ece4:	(bad)  
  43ece5:	(bad)  
  43ece6:	jmp    0xc757b1
  43eceb:	(bad)  
  43ecec:	cmp    esi,DWORD PTR [ecx]
  43ecee:	or     edx,0xffffffff
  43ecf1:	jmp    FWORD PTR [ebp+0x14ffff3e]
  43ecf7:	retf   
  43ecf8:	pushf  
  43ecf9:	(bad)  
  43ecfa:	inc    DWORD PTR [eax]
  43ecfc:	aas    
  43ecfd:	adc    eax,DWORD PTR [eax]
  43ecff:	xchg   esi,eax
  43ed00:	add    DWORD PTR [eax],0xffffff95
  43ed03:	test   eax,0xac20ffff
  43ed08:	rol    BYTE PTR [ebx+0x7d678383],cl
  43ed0e:	(bad)  
  43ed0f:	in     al,dx
  43ed10:	dec    esp
  43ed12:	dec    ecx
  43ed13:	mov    ah,0x0
  43ed15:	inc    DWORD PTR [ecx-0x9f0a]
  43ed1b:	(bad)  
  43ed1c:	out    dx,al
  43ed1d:	pop    ds
  43ed1e:	(bad)  
  43ed1f:	cmp    eax,0x59c100ff
  43ed24:	add    DWORD PTR [eax],0xfffffff7
  43ed27:	mov    eax,0x89ffe4
  43ed2c:	rcr    DWORD PTR [ecx+0xcc22ff],0x36
  43ed33:	in     al,0xff
  43ed35:	add    BYTE PTR [ebp+ebp*8+0x37],bl
  43ed39:	add    bh,bh
  43ed3b:	sub    eax,0x3c
  43ed3e:	push   DWORD PTR [esi]
  43ed40:	add    bh,bh
  43ed42:	add    eax,0x2000ff7b
  43ed47:	cs sbb edi,edi
  43ed4a:	or     esp,0xffffffa1
  43ed4d:	push   0x835bff
  43ed52:	sbb    BYTE PTR [esi+0x0],ah
  43ed55:	add    BYTE PTR ds:0xff10e5,al
  43ed5b:	call   esp
  43ed5d:	adc    edi,edi
  43ed5f:	fwait
  43ed60:	add    BYTE PTR [eax],al
  43ed62:	pop    ss
  43ed63:	jno    0x43ece8
  43ed65:	add    BYTE PTR [edx],ch
  43ed67:	xchg   esi,eax
  43ed68:	sub    DWORD PTR [eax],eax
  43ed6a:	add    BYTE PTR [eax],al
  43ed6c:	std    
  43ed6d:	sbb    eax,DWORD PTR [eax]
  43ed6f:	sar    edi,1
  43ed71:	sub    DWORD PTR [ebx],0x4d
  43ed74:	add    BYTE PTR [eax],al
  43ed76:	jp     0x43edf3
  43ed78:	cwde   
  43ed79:	add    BYTE PTR [ecx+0xc9ccff],cl
  43ed7f:	xchg   esi,eax
  43ed80:	(bad)  
  43ed81:	call   FWORD PTR [ecx+0x7]
  43ed84:	add    BYTE PTR [eax],al
  43ed86:	push   edi
  43ed87:	mov    esi,0xffff0056
  43ed8c:	jbe    0x43eddc
  43ed8e:	add    BYTE PTR [ebx-0x317fff01],ch
  43ed94:	add    bh,bh
  43ed96:	xor    eax,0xffffe1bc
  43ed9b:	add    dl,ah
  43ed9d:	inc    edi
  43ed9e:	add    BYTE PTR [edx+0x0],ch
  43eda1:	push   DWORD PTR [ebx+ebp*2-0x3cf0001]
  43eda8:	sar    bh,cl
  43edaa:	inc    DWORD PTR [ebx+0x3589ed3a]
  43edb0:	add    BYTE PTR [eax],al
  43edb2:	rcl    DWORD PTR [ebx],0xff
  43edb5:	dec    DWORD PTR ds:0xffcce590
  43edbb:	add    BYTE PTR [ecx],cl
  43edbd:	imul   edi,edi,0xffffff80
  43edc0:	add    BYTE PTR [eax],al
  43edc2:	loop   0x43ed6b
  43edc4:	mov    edi,edi
  43edc6:	jae    0x43ed76
  43edc8:	xchg   edx,eax
  43edc9:	inc    DWORD PTR [eax]
  43edcb:	call   DWORD PTR [eax+0xab831b]
  43edd1:	jmp    DWORD PTR [esp+esi*2-0x34]
  43edd5:	(bad)  
  43edd6:	in     al,dx
  43edd7:	mov    ah,BYTE PTR [ebx+0x37ffffff]
  43eddd:	pop    ds
  43edde:	add    BYTE PTR [eax],al
  43ede0:	inc    DWORD PTR [ebx-0x7c00eb05]
  43ede6:	fisttp DWORD PTR [esi]
  43ede8:	adc    cl,ah
  43edea:	mov    DWORD PTR [eax],eax
  43edec:	out    dx,eax
  43eded:	fld    QWORD PTR [eax]
  43edef:	and    al,0x0
  43edf1:	mov    edx,esp
  43edf3:	inc    edi
  43edf4:	(bad)  
  43edf5:	call   FWORD PTR [esi+0x6f]
  43edf8:	jmp    0x43edf9
  43edfa:	add    DWORD PTR [ebx-0x4faf],0xffffffff
  43ee01:	and    DWORD PTR [ebp-0x42],0xffffffff
  43ee05:	int3   
  43ee06:	or     DWORD PTR [esp+edi*4-0x1],edx
  43ee0a:	(bad)  
  43ee0b:	jmp    esi
  43ee0d:	arpl   WORD PTR [eax],ax
  43ee0f:	pop    esp
  43ee10:	int3   
  43ee11:	int3   
  43ee12:	rol    BYTE PTR [ebp-0x34],0x83
  43ee16:	mov    ebx,0xff005915
  43ee1b:	mov    ecx,esi
  43ee1d:	mov    eax,0xffffda00
  43ee22:	and    al,0x96
  43ee24:	mov    esp,ecx
  43ee26:	repnz ss stc 
  43ee29:	add    bh,bh
  43ee2b:	or     DWORD PTR [eax],0x41
  43ee2e:	add    BYTE PTR [eax],ah
  43ee30:	inc    DWORD PTR [ebx-0xb9f4]
  43ee36:	into   
  43ee37:	and    edi,ebp
  43ee39:	add    ah,cl
  43ee3b:	and    esi,0xffffffa7
  43ee3e:	inc    DWORD PTR [edi+edi*8+0xe527cc]
  43ee45:	int3   
  43ee46:	adc    ecx,DWORD PTR [esi+0xff92]
  43ee4c:	retf   
  43ee4d:	xor    al,BYTE PTR [eax]
  43ee4f:	xchg   esp,eax
  43ee50:	(bad)  
  43ee51:	call   DWORD PTR [esi-0x4c00009f]
  43ee57:	push   cs
  43ee58:	and    edi,edi
  43ee5a:	inc    DWORD PTR [eax]
  43ee5c:	xor    BYTE PTR [ecx],dh
  43ee5e:	adc    ebx,0xffffff89
  43ee61:	or     DWORD PTR [eax+0x24ff00fc],0xffffffae
  43ee68:	jo     0x43eded
  43ee6a:	add    bh,bh
  43ee6c:	test   eax,edx
  43ee6e:	add    BYTE PTR [edi],ch
  43ee70:	(bad)  
  43ee71:	call   DWORD PTR [ebx-0x2a]
  43ee74:	add    BYTE PTR [eax],al
  43ee76:	iret   
  43ee77:	in     eax,dx
  43ee78:	(bad)  
  43ee79:	(bad)  
  43ee7a:	(bad)  
  43ee7b:	call   DWORD PTR [ecx+0x4b]
  43ee7e:	add    ah,dh
  43ee80:	add    BYTE PTR [ecx-0x2547],cl
  43ee86:	pushf  
  43ee87:	xchg   edx,eax
  43ee88:	data16 int3 
  43ee8a:	dec    DWORD PTR [ecx-0x50ff105a]
  43ee90:	add    bh,bh
  43ee92:	jns    0x43ee80
  43ee94:	add    BYTE PTR [eax],al
  43ee96:	jmp    0x43ee45
  43ee98:	mov    bl,0x0
  43ee9a:	(bad)  
  43ee9b:	call   DWORD PTR [eax-0xb600dc]
  43eea1:	(bad)  
  43eea2:	(bad)  
  43eea3:	jbe    0x43ee28
  43eea5:	add    ah,bl
  43eea7:	and    ebp,ebx
  43eea9:	int3   
  43eeaa:	cmp    edi,0xffffffe2
  43eead:	inc    ecx
  43eeae:	(bad)  
  43eeaf:	aas    
  43eeb0:	add    BYTE PTR [eax],al
  43eeb2:	mov    ah,0x16
  43eeb4:	cmp    edi,0xffffffd2
  43eeb7:	push   ss
  43eeb8:	pop    esp
  43eeb9:	mov    edi,edi
  43eebb:	add    BYTE PTR [edi],dl
  43eebd:	cmp    BYTE PTR [eax],al
  43eebf:	and    eax,0xdd8d00ff
  43eec4:	add    BYTE PTR [eax],al
  43eec6:	hlt    
  43eec7:	in     eax,dx
  43eec8:	cmp    eax,0x800ccff
  43eecd:	push   ss
  43eece:	(bad)  
  43eecf:	mov    ecx,0xa91ffcc
  43eed4:	add    BYTE PTR [eax],al
  43eed6:	pop    ecx
  43eed7:	pushf  
  43eed8:	push   0xcc00cc83
  43eedd:	inc    eax
  43eede:	add    BYTE PTR [edi-0x1],dl
  43eee1:	(bad)  
  43eee2:	cmp    DWORD PTR [ebx],esp
  43eee4:	inc    DWORD PTR [eax]
  43eee6:	mov    WORD PTR [ebx+0xff71],cs
  43eeec:	jg     0x43ef06
  43eeee:	mov    DWORD PTR [eax-0x1],esp
  43eef1:	(bad)  
  43eef2:	aas    
  43eef3:	mov    edx,0x2016ff00
  43eef8:	xchg   edi,edi
  43eefa:	inc    DWORD PTR [eax]
  43eefc:	cmp    DWORD PTR [esi],ecx
  43eefe:	add    BYTE PTR [ebp+0x5c3cff89],cl
  43ef04:	(bad)  
  43ef05:	inc    DWORD PTR [eax]
  43ef07:	fucomip st,st(2)
  43ef09:	add    bh,bh
  43ef0b:	call   FWORD PTR [ecx-0x63]
  43ef0e:	(bad)  
  43ef0f:	jmp    0x43eedd
  43ef11:	and    DWORD PTR [edx],0xffffff8a
  43ef14:	inc    DWORD PTR [eax]
  43ef16:	mov    ebp,0x89cc0587
  43ef1b:	add    BYTE PTR [edi-0x7c1800e2],bh
  43ef21:	call   DWORD PTR [esi]
  43ef23:	mov    esp,0xf19ff00
  43ef28:	push   0xffffffcc
  43ef2a:	(bad)  
  43ef2b:	jmp    FWORD PTR [ebx+0x30]
  43ef2e:	sub    DWORD PTR [esi-0x34],0xffffff83
  43ef32:	jle    0x43ef51
  43ef34:	add    BYTE PTR [ecx+0x32741b],cl
  43ef3a:	add    bh,bh
  43ef3c:	cmp    DWORD PTR [edi],ebp
  43ef3e:	or     DWORD PTR [edi+0x652900ff],0x0
  43ef45:	add    BYTE PTR [esi+0x1f],dl
  43ef48:	mov    eax,0x7200ff89
  43ef4d:	fdivr  st,st(7)
  43ef4f:	cld    
  43ef50:	(bad)  
  43ef51:	push   esp
  43ef53:	pop    ebx
  43ef54:	add    bh,bh
  43ef56:	xchg   DWORD PTR [edx],edi
  43ef58:	data16 add bh,bh
  43ef5b:	adc    DWORD PTR [eax],0x5e
  43ef5e:	int3   
  43ef5f:	fdivr  st,st(7)
  43ef61:	or     DWORD PTR [ebx+esi*4-0x1],0xffffffcc
  43ef66:	xor    eax,0xff0df7
  43ef6b:	jmp    FWORD PTR [ebx]
  43ef6d:	and    edi,edi
  43ef6f:	fld    DWORD PTR [eax]
  43ef71:	add    BYTE PTR [eax],ah
  43ef73:	scas   eax,DWORD PTR es:[edi]
  43ef74:	inc    DWORD PTR [ebx-0x4b051c]
  43ef7a:	(bad)  
  43ef7b:	(bad)  
  43ef7c:	js     0x43efd1
  43ef7e:	add    BYTE PTR ds:0x1ddf00ff,al
  43ef84:	add    BYTE PTR [ebx-0x76feb7de],al
  43ef8a:	dec    DWORD PTR [ecx+0x40017e8]
  43ef90:	int3   
  43ef91:	inc    DWORD PTR [ebx+0x6d]
  43ef94:	(bad)  
  43ef95:	(bad)  
  43ef96:	mov    edi,0xff8318e6
  43ef9b:	xor    DWORD PTR [edi-0x72000e],0xffffffff
  43efa2:	xchg   edx,eax
  43efa3:	fiadd  DWORD PTR [eax]
  43efa5:	int3   
  43efa6:	mov    ebp,0xff0005fb
  43efab:	call   esp
  43efad:	push   edx
  43efae:	inc    DWORD PTR [edi-0x1]
  43efb1:	push   DWORD PTR [ebx-0x2d]
  43efb4:	cmp    edi,0x74
  43efb7:	shr    DWORD PTR [eax+eax*1],0xff
  43efbb:	add    bh,cl
  43efbd:	popa   
  43efbe:	int3   
  43efbf:	push   eax
  43efc0:	cmp    edi,0xffffffb9
  43efc3:	cmp    edi,edi
  43efc5:	int3   
  43efc6:	shl    BYTE PTR ds:0xff002b,cl
  43efcc:	aad    0x38
  43efce:	add    bl,ah
  43efd0:	add    bh,bh
  43efd2:	pop    esp
  43efd3:	ins    DWORD PTR es:[edi],dx
  43efd4:	add    ah,cl
  43efd6:	adc    al,BYTE PTR [ebx]
  43efd8:	xchg   ebx,eax
  43efd9:	dec    DWORD PTR [ecx-0x7c2f2300]
  43efdf:	jns    0x43efe1
  43efe1:	(bad)  
  43efe2:	jns    0x43efd9
  43efe4:	(bad)  
  43efe5:	call   FWORD PTR ds:0xe033
  43efeb:	add    DWORD PTR [edx-0xba00bb],0x0
  43eff2:	lds    eax,FWORD PTR [ebx]
  43eff4:	inc    DWORD PTR [ebx-0x3346dd73]
  43effa:	add    DWORD PTR [eax],0xffffff9f
  43effd:	fdivr  st,st(7)
  43efff:	mov    esi,0x34c48383
  43f004:	cmp    edi,0xffffff90
  43f007:	push   es
  43f008:	mov    es,WORD PTR [eax]
  43f00a:	(bad)  
  43f00b:	call   FWORD PTR ds:0x83b6ff48
  43f011:	(bad)  
  43f012:	jns    0x43efd8
  43f014:	add    BYTE PTR [eax],al
  43f016:	iret   
  43f017:	ds addr16 int3 
  43f01a:	inc    DWORD PTR [eax]
  43f01c:	jbe    0x43efb5
  43f01e:	add    al,dh
  43f020:	inc    DWORD PTR [eax]
  43f022:	(bad)  [ecx+0x5522ff83]
  43f028:	mov    esp,0x4dff00ff
  43f02d:	pop    ds
  43f02e:	inc    DWORD PTR [ebp-0x28f3ff01]
  43f034:	add    bh,bh
  43f036:	jmp    0x1432945
  43f03b:	add    BYTE PTR [ecx],bl
  43f03d:	or     al,0xff
  43f03f:	outs   dx,BYTE PTR ds:[esi]
  43f040:	inc    DWORD PTR [eax]
  43f042:	les    eax,FWORD PTR [edi+edi*8-0x1]
  43f046:	dec    esp
  43f047:	mov    cl,0x32
  43f049:	inc    DWORD PTR [eax]
  43f04b:	(bad)  
  43f04c:	mov    esp,0x670077
  43f051:	add    BYTE PTR [ebp+0x7b],dh
  43f054:	inc    DWORD PTR [eax]
  43f056:	adc    cl,al
  43f058:	jmp    0x8043ef5d
  43f05d:	out    0xff,al
  43f05f:	in     al,dx
  43f060:	add    bh,bh
  43f062:	enter  0x83cd,0xff
  43f066:	setbe  BYTE PTR [eax+eax*1+0x0]
  43f06b:	mov    DWORD PTR [esi],eax
  43f06d:	push   0xff836d00
  43f072:	pusha  
  43f073:	pop    es
  43f074:	inc    DWORD PTR [ebx+0xe4af07]
  43f07a:	(bad)  
  43f07b:	jmp    DWORD PTR [ebp-0x2a]
  43f07e:	call   FWORD PTR [ecx+0x0]
  43f081:	int3   
  43f082:	jp     0x43f08a
  43f084:	add    bh,bh
  43f086:	sbb    BYTE PTR [edx-0x7c00ffb7],0x1a
  43f08d:	pop    edi
  43f08e:	int3   
  43f08f:	push   ebp
  43f090:	(bad)  
  43f091:	push   DWORD PTR [esi]
  43f093:	das    
  43f094:	add    DWORD PTR [ebx-0x3381e1ab],0xffffffff
  43f09b:	call   DWORD PTR [esi]
  43f09d:	retf   
  43f09e:	add    BYTE PTR [ecx-0x46550001],al
  43f0a4:	(bad)  
  43f0a5:	dec    DWORD PTR [ecx+0x23]
  43f0a8:	sbb    al,BYTE PTR [eax]
  43f0aa:	add    bh,bh
  43f0ac:	fwait
  43f0ad:	push   es
  43f0ae:	add    BYTE PTR [ecx+0x0],cl
  43f0b1:	add    BYTE PTR [ebx+0x26890087],bh
  43f0b7:	mov    edi,0xff0072
  43f0bc:	push   edi
  43f0bd:	fiadd  WORD PTR [eax]
  43f0bf:	jns    0x43f0c0
  43f0c1:	add    cl,ah
  43f0c3:	mov    dl,0xff
  43f0c5:	add    bl,cl
  43f0c7:	push   ebp
  43f0c8:	jg     0x43f04d
  43f0ca:	add    bh,bh
  43f0cc:	adc    ah,dl
  43f0ce:	mov    ebx,edx
  43f0d0:	(bad)  
  43f0d1:	jmp    esi
  43f0d3:	push   esp
  43f0d4:	inc    DWORD PTR [eax]
  43f0d6:	ins    BYTE PTR es:[edi],dx
  43f0d7:	mov    ds:0x89898901,eax
  43f0dc:	xor    eax,0xa7006d
  43f0e1:	add    BYTE PTR [eax+0x17],dl
  43f0e4:	(bad)  
  43f0e5:	(bad)  
  43f0e6:	mov    eax,0x89ffe51f
  43f0eb:	int3   
  43f0ec:	loopne 0x43f0e2
  43f0ee:	(bad)  
  43f0ef:	jle    0x43f0bd
  43f0f1:	(bad)  
  43f0f2:	mov    esp,0x9ffffb5
  43f0f7:	or     esi,esp
  43f0f9:	add    BYTE PTR [ebx-0x3316eb01],al
  43f0ff:	ret    
  43f100:	int3   
  43f101:	add    BYTE PTR [ebx],al
  43f103:	fcos   
  43f105:	xor    edi,0xffffffd1
  43f108:	add    eax,0x2700ffff
  43f10d:	ja     0x43f10e
  43f10f:	jno    0x43f111
  43f111:	jmp    eax
  43f113:	sbb    eax,0x5c8f8900
  43f118:	test   DWORD PTR [eax],0x5282cc89
  43f11e:	(bad)  
  43f11f:	jmp    0x43f0aa
  43f121:	xor    DWORD PTR [edx+esi*1],0xffffffff
  43f125:	inc    DWORD PTR [ebx]
  43f127:	jbe    0x43f0cb
  43f129:	add    bh,bh
  43f12b:	int3   
  43f12c:	lock adc al,BYTE PTR [eax]
  43f12f:	jg     0x43f0ba
  43f131:	add    dh,ch
  43f133:	inc    eax
  43f134:	(bad)  
  43f135:	call   FWORD PTR [edx+0xffd2e7]
  43f13b:	push   DWORD PTR [edi]
  43f13d:	adc    eax,0xff0017ff
  43f142:	adc    dl,BYTE PTR [edi+0x527affff]
  43f148:	jmp    0xb84374d6
  43f14d:	bnd call DWORD PTR [ecx]
  43f150:	add    DWORD PTR [ebx-0x7600af2b],0xfffffff8
  43f157:	ds add eax,0xe000ffff
  43f15d:	or     bh,bh
  43f15f:	xchg   ebx,eax
  43f160:	dec    esp
  43f162:	ins    DWORD PTR es:[edi],dx
  43f163:	cmp    edi,0x703eebff
  43f169:	(bad)  
  43f16a:	(bad)  
  43f16b:	(bad)  
  43f16c:	jns    0x43f140
  43f16e:	add    BYTE PTR [ecx+0x6c15ff00],bh
  43f174:	add    BYTE PTR [ebx-0xe75e25],al
  43f17a:	(bad)  
  43f17b:	(bad)  
  43f17c:	fucomp st(4)
  43f17e:	(bad)  
  43f17f:	js     0x43f180
  43f181:	mov    ecx,eax
  43f183:	add    al,0xff
  43f185:	jmp    DWORD PTR [ebp+0x22]
  43f188:	ret    
  43f189:	mov    esp,ecx
  43f18b:	cmp    DWORD PTR [eax],0x3f
  43f18e:	(bad)  
  43f18f:	jmp    0x43f190
  43f191:	dec    edi
  43f193:	inc    esp
  43f194:	int3   
  43f195:	cmp    DWORD PTR [ecx+eax*2-0xf],0x0
  43f19a:	add    BYTE PTR [ebx-0x4100cb88],al
  43f1a0:	inc    DWORD PTR [eax]
  43f1a2:	int    0x20
  43f1a4:	int3   
  43f1a5:	sub    DWORD PTR [ebx],0xffffff9b
  43f1a8:	in     al,dx
  43f1a9:	mov    DWORD PTR [eax],eax
  43f1ab:	mov    ecx,ebx
  43f1ad:	sub    eax,0x9883
  43f1b2:	pop    edx
  43f1b3:	jl     0x43f1b5
  43f1b5:	call   DWORD PTR [eax+0x72]
  43f1b8:	sub    eax,0x65000000
  43f1bd:	xor    bh,bh
  43f1bf:	inc    eax
  43f1c0:	add    BYTE PTR [ebx+0x804],al
  43f1c6:	mov    ds:0x83e88c,al
  43f1cb:	and    DWORD PTR [edx+eiz*4-0x7d],0xfffffff6
  43f1d0:	int3   
  43f1d1:	push   DWORD PTR [ebx+edi*4-0x1]
  43f1d5:	jmp    FWORD PTR [eax-0x76ffff08]
  43f1db:	push   DWORD PTR [eax-0x33747cd9]
  43f1e1:	add    BYTE PTR [esi],al
  43f1e3:	test   BYTE PTR [ecx-0x52344b00],0x0
  43f1ea:	inc    DWORD PTR [eax]
  43f1ec:	imul   edi,DWORD PTR [edi-0x1],0xffffffbc
  43f1f0:	add    bh,bh
  43f1f2:	stos   DWORD PTR es:[edi],eax
  43f1f3:	cmp    al,0x0
  43f1f5:	sbb    ecx,0x8
  43f1f8:	ret    0xcccc
  43f1fb:	jmp    FWORD PTR [edx]
  43f1fd:	out    0xff,al
  43f1ff:	push   esi
  43f200:	(bad)  
  43f201:	dec    DWORD PTR [esp+eax*2+0x0]
  43f205:	(bad)  
  43f206:	cmp    ecx,DWORD PTR [eax+0x8]
  43f209:	inc    DWORD PTR [eax]
  43f20b:	add    BYTE PTR [esi+0x15],cl
  43f20e:	mov    DWORD PTR [edx-0x63230100],esp
  43f214:	int3   
  43f215:	add    BYTE PTR [ebx-0xff6624],ch
  43f21b:	dec    esp
  43f21d:	or     bh,bh
  43f21f:	dec    esp
  43f220:	inc    DWORD PTR [eax]
  43f222:	bound  esp,QWORD PTR [ecx-0x1]
  43f225:	mov    DWORD PTR [eax+0x7a],eax
  43f228:	cmp    edi,0xffffffff
  43f22b:	(bad)  
  43f22c:	mov    edi,0x89b2ffe1
  43f231:	(bad)  
  43f232:	jg     0x43f1e6
  43f234:	inc    DWORD PTR [eax]
  43f236:	cld    
  43f237:	mov    edx,0x83ffff7c
  43f23c:	mov    dl,BYTE PTR [edi+edi*8-0x36]
  43f240:	add    ah,cl
  43f242:	ja     0x43f241
  43f244:	dec    esp
  43f246:	mov    BYTE PTR [ecx+0x7],cl
  43f249:	inc    DWORD PTR [eax]
  43f24b:	(bad)  
  43f24c:	jp     0x43f249
  43f24e:	call   FWORD PTR ds:0x9801ffff
  43f254:	add    BYTE PTR [eax],al
  43f256:	dec    eax
  43f257:	xchg   edi,eax
  43f258:	ja     0x43f25a
  43f25a:	cmp    edi,0xfffffff9
  43f25d:	cmp    eax,DWORD PTR [eax]
  43f25f:	adc    eax,0x50d400ff
  43f264:	(bad)  
  43f265:	call   DWORD PTR [esp+edx*8]
  43f268:	jp     0x43f269
  43f26a:	inc    DWORD PTR [eax]
  43f26c:	dec    ecx
  43f26d:	mov    ds:0x8300bb00,al
  43f272:	scas   eax,DWORD PTR es:[edi]
  43f273:	dec    ebp
  43f274:	inc    DWORD PTR [eax]
  43f276:	add    eax,ebp
  43f278:	jb     0x43f1fd
  43f27a:	add    BYTE PTR [ebx-0x3800abf6],al
  43f280:	(bad)  
  43f281:	(bad)  
  43f282:	ficomp DWORD PTR ds:0x474d0089
  43f288:	add    BYTE PTR [ebx-0x2ffbff7d],0x0
  43f28f:	sbb    al,0xcc
  43f291:	dec    DWORD PTR [eax]
  43f293:	ds int3 
  43f295:	push   DWORD PTR [esi]
  43f297:	sbb    esp,0xf8ffffff
  43f29d:	mov    eax,ds:0xffffb6ff
  43f2a2:	push   eax
  43f2a3:	mov    cl,0xff
  43f2a5:	call   FWORD PTR [ecx]
  43f2a7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  43f2a9:	add    BYTE PTR [eax],al
  43f2ab:	call   edi
  43f2ad:	lock add al,dh
  43f2b0:	inc    DWORD PTR [eax]
  43f2b2:	mov    bl,0xe2
  43f2b4:	(bad)  
  43f2b5:	push   ebx
  43f2b7:	adc    al,0x20
  43f2b9:	add    ah,cl
  43f2bb:	call   FWORD PTR [ebx+esi*1+0x0]
  43f2bf:	mov    bl,0xff
  43f2c1:	dec    DWORD PTR [ebx-0x5fff00ef]
  43f2c7:	lods   al,BYTE PTR ds:[esi]
  43f2c8:	mov    ?,edi
  43f2ca:	inc    DWORD PTR [ebx-0x5b765fea]
  43f2d0:	inc    DWORD PTR [eax]
  43f2d2:	popa   
  43f2d3:	in     eax,0xcc
  43f2d5:	push   DWORD PTR [edx]
  43f2d7:	out    dx,eax
  43f2d8:	cmc    
  43f2d9:	inc    DWORD PTR [eax]
  43f2db:	(bad)  
  43f2dc:	jmp    0x9683:0x838600cd
  43f2e3:	inc    esi
  43f2e4:	add    bh,bh
  43f2e6:	adc    al,bh
  43f2e8:	adc    eax,DWORD PTR [eax]
  43f2ea:	mov    esp,ecx
  43f2ec:	or     eax,0xcc0c83d0
  43f2f1:	add    BYTE PTR [edx],ch
  43f2f3:	pop    edi
  43f2f4:	(bad)  
  43f2f5:	(bad)  
  43f2f6:	cmp    eax,0xff00d1e8
  43f2fb:	add    BYTE PTR ds:0xff9500a6,ch
  43f301:	add    BYTE PTR [edx-0x63],ah
  43f304:	(bad)  
  43f305:	(bad)  
  43f306:	fst    DWORD PTR [ecx]
  43f308:	sbb    al,0xff
  43f30a:	inc    DWORD PTR [eax]
  43f30c:	out    dx,eax
  43f30d:	out    0x0,eax
  43f30f:	gs mov edi,edi
  43f312:	arpl   WORD PTR [eax-0x1],dx
  43f315:	(bad)  
  43f316:	std    
  43f317:	daa    
  43f318:	(bad)  
  43f31a:	inc    DWORD PTR [ebx+0x4affd587]
  43f320:	(bad)  
  43f321:	dec    DWORD PTR [ebp-0x237c0015]
  43f327:	mov    BYTE PTR [edi+edi*8-0x1],bl
  43f32b:	add    BYTE PTR [ebx],al
  43f32d:	mov    bh,0x89
  43f32f:	call   0xc46ef333
  43f334:	(bad)  
  43f335:	inc    esp
  43f337:	in     al,0x74
  43f339:	(bad)  
  43f33a:	(bad)  
  43f33b:	jmp    edi
  43f33d:	stos   BYTE PTR es:[edi],al
  43f33e:	jmp    FWORD PTR [ecx+0x1befccff]
  43f344:	mov    DWORD PTR [ebx+0x6a4b4e],eax
  43f34a:	inc    DWORD PTR [eax]
  43f34c:	mov    gs,WORD PTR [edi-0x1]
  43f34f:	out    dx,al
  43f350:	mov    edi,edi
  43f352:	out    dx,al
  43f353:	rol    BYTE PTR [eax],1
  43f355:	jmp    FWORD PTR [ecx+0x3]
  43f358:	(bad)  
  43f359:	add    bh,bh
  43f35b:	or     DWORD PTR [ebp+0x6f],0xffffffff
  43f35f:	push   cs
  43f360:	add    BYTE PTR [eax],al
  43f362:	hlt    
  43f363:	add    BYTE PTR [eax],0xff
  43f366:	adc    eax,0xffbee5
  43f36b:	add    BYTE PTR [eax-0x6cffda],ah
  43f371:	add    BYTE PTR [eax],ch
  43f373:	pop    esi
  43f374:	inc    DWORD PTR [eax]
  43f376:	mov    cl,0x88
  43f378:	adc    bh,bh
  43f37a:	add    DWORD PTR [eax],0xffffffe0
  43f37d:	or     bh,bh
  43f37f:	push   cs
  43f380:	mov    DWORD PTR [ebx-0x7c7cfc1e],eax
  43f386:	add    dh,ah
  43f388:	sbb    al,0xff
  43f38a:	(bad)  
  43f38b:	jmp    FWORD PTR [edx+ebx*8-0xff9b00]
  43f392:	mov    esi,0xbeff898a
  43f397:	nop
  43f398:	sub    DWORD PTR [eax],eax
  43f39a:	int3   
  43f39b:	mov    DWORD PTR [edi-0x7cc50043],ecx
  43f3a1:	int3   
  43f3a2:	ror    DWORD PTR [eax],cl
  43f3a4:	int3   
  43f3a5:	inc    DWORD PTR [edi-0xb]
  43f3a8:	inc    eax
  43f3a9:	(bad)  
  43f3aa:	inc    DWORD PTR [ebx-0x3a00db23]
  43f3b0:	inc    DWORD PTR [ebx-0x33009184]
  43f3b6:	iret   
  43f3b7:	xor    al,BYTE PTR es:[ebx-0x79ee3301]
  43f3be:	add    ah,ah
  43f3c0:	add    BYTE PTR [eax],al
  43f3c2:	aas    
  43f3c3:	test   DWORD PTR [eax],eax
  43f3c5:	(bad)  
  43f3c6:	fistp  QWORD PTR [ecx]
  43f3c8:	cmp    edi,0xffffffff
  43f3cb:	add    dh,dl
  43f3cd:	xchg   edx,eax
  43f3ce:	add    cl,cl
  43f3d0:	add    bh,bh
  43f3d2:	xor    BYTE PTR [ecx-0x1],bl
  43f3d5:	jmp    DWORD PTR [ebp+0xff82]
  43f3db:	jmp    DWORD PTR [ebp-0xb7635]
  43f3e1:	jmp    DWORD PTR ds:0xf48900de
  43f3e7:	cli    
  43f3e8:	mov    edi,edi
  43f3ea:	inc    DWORD PTR [eax]
  43f3ec:	data16 (bad) 
  43f3ee:	push   ebp
  43f3f0:	inc    DWORD PTR [eax]
  43f3f2:	dec    edi
  43f3f3:	retf   
  43f3f4:	mov    DWORD PTR [eax],eax
  43f3f6:	inc    edx
  43f3f7:	mov    BYTE PTR [ebx-0x34],ah
  43f3fa:	(bad)  
  43f3fb:	jmp    FWORD PTR [ebx-0x17669]
  43f401:	(bad)  
  43f402:	mov    eax,0x36ffffb3
  43f407:	xor    esp,DWORD PTR [eax+0x0]
  43f40a:	add    BYTE PTR [eax],al
  43f40c:	ins    DWORD PTR es:[edi],dx
  43f40d:	scas   al,BYTE PTR es:[edi]
  43f40e:	call   FWORD PTR [esi]
  43f410:	add    DWORD PTR [eax],0xffffff93
  43f413:	cmp    al,BYTE PTR [ebx-0xfceeb00]
  43f419:	add    BYTE PTR [eax],al
  43f41b:	add    DWORD PTR [edi-0x6a],0x0
  43f41f:	dec    edx
  43f420:	inc    DWORD PTR [eax]
  43f422:	mov    DWORD PTR [ecx],esi
  43f424:	inc    DWORD PTR [ebx-0x119c8]
  43f42a:	cmp    edi,0x17
  43f42d:	mov    esi,0xffffcfff
  43f432:	push   ds
  43f433:	xchg   edx,eax
  43f434:	mov    DWORD PTR [ecx-0x8baea0],ecx
  43f43a:	int3   
  43f43b:	mov    DWORD PTR [ebx],ebx
  43f43d:	lds    eax,FWORD PTR [eax]
  43f43f:	out    dx,al
  43f440:	mov    edi,edi
  43f442:	lock push ebx
  43f444:	dec    DWORD PTR [ecx-0x7ca16929]
  43f44a:	add    BYTE PTR [eax],al
  43f44c:	push   edi
  43f44d:	ud0    edi,DWORD PTR [esi-0x497b7c01]
  43f454:	add    BYTE PTR [eax],al
  43f456:	stos   DWORD PTR es:[edi],eax
  43f457:	ins    DWORD PTR es:[edi],dx
  43f458:	dec    ebx
  43f459:	add    BYTE PTR [ebx-0x92fb34],al
  43f45f:	popa   
  43f460:	int3   
  43f461:	inc    DWORD PTR [ebx]
  43f463:	mov    ah,0x0
  43f465:	jmp    FWORD PTR [edi]
  43f467:	jp     0x43f49c
  43f469:	dec    esp
  43f46b:	add    BYTE PTR [ebp-0x23],dh
  43f46e:	inc    DWORD PTR [edx-0x1]
  43f471:	dec    edi
  43f473:	xor    eax,0x82de8300
  43f478:	mov    dh,0xcc
  43f47a:	add    BYTE PTR [ebx-0x3efff50a],al
  43f480:	inc    DWORD PTR [ebx-0xffeed6]
  43f486:	xchg   esi,eax
  43f487:	fstp   QWORD PTR [eax+0x0]
  43f48a:	cmp    edi,0xffffff88
  43f48d:	mov    al,0xff
  43f48f:	dec    edx
  43f490:	cmp    edi,0xffffffcc
  43f493:	imul   edi,edi,0x0
  43f496:	xor    al,0xc3
  43f498:	push   ebx
  43f499:	inc    DWORD PTR [eax]
  43f49b:	jmp    DWORD PTR [eax-0x86ff26]
  43f4a1:	(bad)  
  43f4a2:	mov    esp,0x3aff8306
  43f4a7:	stc    
  43f4a8:	dec    edx
  43f4a9:	(bad)  
  43f4aa:	(bad)  
  43f4ab:	push   eax
  43f4ad:	stos   BYTE PTR es:[edi],al
  43f4ae:	add    cl,dl
  43f4b0:	inc    DWORD PTR [eax]
  43f4b2:	lds    ecx,FWORD PTR [ebp-0x5f3a0100]
  43f4b8:	dec    ebp
  43f4b9:	(bad)  
  43f4ba:	(bad)  
  43f4bb:	dec    DWORD PTR [esi+0xd6ff95]
  43f4c1:	int3   
  43f4c2:	mov    ch,0x3c
  43f4c4:	add    bh,bh
  43f4c6:	hlt    
  43f4c7:	dec    eax
  43f4c8:	dec    ecx
  43f4c9:	int3   
  43f4ca:	add    BYTE PTR [ebx-0x6a00ba2d],al
  43f4d0:	dec    esp
  43f4d2:	pop    ecx
  43f4d3:	push   esp
  43f4d4:	(bad)  
  43f4d5:	inc    DWORD PTR [ebx-0x1a]
  43f4d8:	(bad)  
  43f4da:	cmp    edi,0xffffffa4
  43f4dd:	mov    ch,0x83
  43f4df:	lahf   
  43f4e0:	dec    esp
  43f4e2:	add    dl,dh
  43f4e4:	add    BYTE PTR [eax],al
  43f4e6:	push   0x65
  43f4e8:	sbb    eax,DWORD PTR [eax]
  43f4ea:	add    BYTE PTR [eax],al
  43f4ec:	add    eax,DWORD PTR [eax-0x337c4600]
  43f4f2:	and    dh,BYTE PTR ds:0xa6330000
  43f4f8:	cmp    bh,bh
  43f4fa:	inc    DWORD PTR [ebx+0x56837cc0]
  43f500:	int3   
  43f501:	add    BYTE PTR [edi-0x52],dh
  43f504:	add    BYTE PTR [eax],al
  43f506:	hlt    
  43f507:	jnp    0x43f50f
  43f509:	inc    DWORD PTR [eax]
  43f50b:	call   DWORD PTR [esp+ebp*2+0x8352ff]
  43f512:	sbb    ch,BYTE PTR [edi+edi*8+0x30673800]
  43f519:	(bad)  
  43f51a:	(bad)  
  43f51b:	call   DWORD PTR [edi+0xf283ab]
  43f521:	jmp    DWORD PTR [edi+edx*8]
  43f524:	int3   
  43f525:	xor    esi,0xffffffe9
  43f528:	fld    DWORD PTR [eax]
  43f52a:	inc    DWORD PTR [ebx-0x476c7c4]
  43f530:	or     esp,0x7e
  43f533:	test   al,0x0
  43f535:	(bad)  
  43f536:	mov    ebp,0xe442
  43f53b:	jmp    esi
  43f53d:	mov    edi,0xff20ff
  43f542:	push   edx
  43f543:	(bad)  
  43f545:	add    BYTE PTR [ebx+eiz*4],bh
  43f548:	pop    ss
  43f549:	inc    DWORD PTR [eax]
  43f54b:	int3   
  43f54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f54d:	lods   eax,DWORD PTR ds:[esi]
  43f54e:	add    BYTE PTR [ecx],al
  43f550:	dec    DWORD PTR [ecx+0x3a01]
  43f556:	mov    ss,WORD PTR [eax]
  43f558:	jle    0x43f559
  43f55a:	inc    DWORD PTR [eax]
  43f55c:	inc    eax
  43f55d:	iret   
  43f55e:	add    dl,bh
  43f560:	add    bh,bh
  43f562:	jnp    0x43f53e
  43f564:	add    BYTE PTR [eax],al
  43f566:	cmp    dl,BYTE PTR [edx+0x75]
  43f569:	int3   
  43f56a:	add    bh,bh
  43f56c:	pop    eax
  43f56d:	push   ebx
  43f56e:	add    BYTE PTR [edx+0x1b4b00ff],cl
  43f574:	add    bh,bh
  43f576:	(bad)  
  43f577:	sub    esi,ebp
  43f579:	inc    DWORD PTR [ebx-0x819d00]
  43f57f:	repz inc DWORD PTR [ebx-0x33a8e7]
  43f586:	dec    edx
  43f587:	dec    esi
  43f588:	and    eax,0xeffffff
  43f58d:	enter  0x2ff,0x0
  43f591:	add    BYTE PTR [ebx-0x5d],bl
  43f594:	add    BYTE PTR [eax],al
  43f596:	xor    ecx,ebx
  43f598:	or     al,0xff
  43f59a:	inc    DWORD PTR [ebx-0x150089c5]
  43f5a0:	add    BYTE PTR [ebx-0xff088b],al
  43f5a6:	adc    bl,BYTE PTR [eax-0x7c0000f6]
  43f5ac:	xor    eax,0xffcc3aff
  43f5b2:	imul   edi,DWORD PTR [ebx-0x1],0xffffffcc
  43f5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f5b7:	les    ebp,FWORD PTR [eax+0x0]
  43f5ba:	int3   
  43f5bb:	int3   
  43f5bc:	pop    edx
  43f5bd:	je     0x43f542
  43f5bf:	outs   dx,BYTE PTR ds:[esi]
  43f5c0:	int3   
  43f5c1:	adc    esi,0x65
  43f5c4:	(bad)  
  43f5c5:	jmp    DWORD PTR [ecx]
  43f5c7:	cmc    
  43f5c8:	mov    bl,0x0
  43f5ca:	mov    esp,ecx
  43f5cc:	imul   edi,DWORD PTR [edi+edi*8+0x22],0xffffffff
  43f5d1:	add    BYTE PTR [edi+0x6f000082],al
  43f5d7:	mov    cl,0xc1
  43f5d9:	cmp    edi,0xffffff83
  43f5dc:	int    0x98
  43f5de:	jmp    esp
  43f5e0:	add    DWORD PTR [eax],0x1c
  43f5e3:	stc    
  43f5e4:	(bad)  
  43f5e5:	(bad)  
  43f5e6:	frstor ds:0xff00ff86
  43f5ec:	js     0x43f63c
  43f5ee:	int3   
  43f5ef:	mov    dh,0x89
  43f5f1:	jmp    FWORD PTR [esi]
  43f5f3:	in     eax,0x0
  43f5f5:	jmp    FWORD PTR [ebp-0x6e]
  43f5f8:	mov    ?,edi
  43f5fa:	add    BYTE PTR [eax],al
  43f5fc:	jno    0x43f5c1
  43f5fe:	(bad)  
  43f5ff:	fiadd  WORD PTR [eax]
  43f601:	push   DWORD PTR [edi+0x41]
  43f604:	dec    DWORD PTR [ecx-0x254c15]
  43f60a:	add    bh,bh
  43f60c:	mov    bh,0xf5
  43f60e:	add    BYTE PTR [ebx],dh
  43f610:	(bad)  
  43f611:	inc    DWORD PTR [edx+0x5d]
  43f614:	or     DWORD PTR [ecx-0xc83cf7],0xffffffff
  43f61b:	add    dh,cl
  43f61d:	stc    
  43f61e:	and    DWORD PTR [ecx-0x1f8f0001],0xffffffff
  43f625:	adc    DWORD PTR [esi-0x7cff6f],0xffffffff
  43f62c:	cmp    ebp,eax
  43f62e:	add    BYTE PTR [edi+edi*8],al
  43f631:	(bad)  
  43f632:	js     0x43f5e1
  43f634:	add    BYTE PTR [ecx-0x6da35e],cl
  43f63a:	(bad)  
  43f63b:	call   DWORD PTR [ebp-0x20]
  43f63e:	(bad)  
  43f63f:	cli    
  43f640:	add    BYTE PTR [ebx-0x330006e2],al
  43f646:	xor    dh,0x92
  43f649:	add    DWORD PTR [eax],0x0
  43f64c:	jge    0x43f625
  43f64e:	add    bl,ch
  43f650:	add    BYTE PTR [eax],al
  43f652:	popa   
  43f653:	and    eax,DWORD PTR [ebx-0x7f443a34]
  43f659:	(bad)  
  43f65a:	dec    esp
  43f65c:	and    DWORD PTR [ebx+0x83b689],esp
  43f662:	outs   dx,BYTE PTR ds:[esi]
  43f663:	test   al,0xff
  43f665:	add    DWORD PTR [eax],0xffffff86
  43f668:	cs (bad) 
  43f66a:	inc    DWORD PTR [eax]
  43f66c:	ret    
  43f66d:	mov    esp,0xccff54ff
  43f672:	aaa    
  43f673:	test   DWORD PTR [eax],eax
  43f675:	jmp    FWORD PTR [ebx+0x6e14]
  43f67b:	add    BYTE PTR [eax],dh
  43f67d:	retf   
  43f67e:	(bad)  
  43f67f:	ds int3 
  43f681:	add    BYTE PTR [ecx+eax*1],bh
  43f684:	(bad)  
  43f685:	inc    DWORD PTR [edi-0x5a]
  43f688:	sub    eax,0x7100ff00
  43f68d:	jns    0xbcc7f635
  43f693:	dec    ebp
  43f694:	add    BYTE PTR [eax],al
  43f696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f697:	fnstcw WORD PTR [ebx-0x7d]
  43f69a:	add    ah,cl
  43f69c:	aas    
  43f69d:	and    bh,bh
  43f69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f6a0:	add    bh,bh
  43f6a2:	adc    bl,0x0
  43f6a5:	add    BYTE PTR [edx+0x79fb],cl
  43f6ab:	cmp    DWORD PTR [edi-0xbcff76],0xffffff89
  43f6b2:	and    DWORD PTR [ebx+eax*4-0x1],0xb95123
  43f6ba:	add    bh,bh
  43f6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f6bd:	or     al,0x0
  43f6bf:	push   esp
  43f6c0:	add    BYTE PTR [ebx-0xff3613],al
  43f6c6:	retf   0xab8d
  43f6c9:	or     esp,0xffffffff
  43f6cc:	mov    ds:0x78ff81,al
  43f6d1:	add    BYTE PTR [eax],dh
  43f6d3:	jns    0x4e1617d8
  43f6d9:	add    BYTE PTR [eax],al
  43f6db:	push   DWORD PTR [ecx]
  43f6dd:	fiadd  WORD PTR [ebx+0x5d008377]
  43f6e3:	mov    ds:0xdd09ff00,al
  43f6e8:	lock mov edi,edi
  43f6eb:	jmp    FWORD PTR ds:0xffc9ffc2
  43f6f1:	add    BYTE PTR [ebp-0x6],cl
  43f6f4:	mov    edi,edi
  43f6f6:	inc    ebp
  43f6f7:	pop    ss
  43f6f8:	push   ecx
  43f6f9:	(bad)  
  43f6fa:	inc    DWORD PTR [eax]
  43f6fc:	adc    BYTE PTR [ecx-0x7d],cl
  43f6ff:	mov    cl,0xff
  43f701:	push   eax
  43f703:	arpl   di,di
  43f705:	add    BYTE PTR [ecx],bl
  43f707:	inc    ecx
  43f708:	push   es
  43f709:	(bad)  
  43f70a:	inc    DWORD PTR [eax]
  43f70c:	inc    ebp
  43f70d:	mov    dh,0x0
  43f70f:	sbb    bh,bh
  43f711:	add    BYTE PTR [eax],bh
  43f713:	add    al,0xff
  43f715:	int3   
  43f716:	mov    al,ds:0x1491
  43f71b:	inc    DWORD PTR [edx]
  43f71d:	test   eax,0x8300da00
  43f722:	rcr    BYTE PTR [ebp+0x7e3089ff],0x83
  43f729:	cmp    edi,0xffffff89
  43f72c:	sbb    DWORD PTR [ebx],0xff89f5ff
  43f732:	int3   
  43f733:	xor    bh,bh
  43f735:	call   DWORD PTR [ecx-0xe]
  43f738:	retf   0xffff
  43f73b:	jmp    FWORD PTR [ecx]
  43f73d:	cmp    eax,DWORD PTR [eax]
  43f73f:	das    
  43f740:	inc    DWORD PTR [eax]
  43f742:	dec    esp
  43f743:	push   ebx
  43f744:	add    BYTE PTR [eax],al
  43f746:	stos   DWORD PTR es:[edi],eax
  43f747:	or     DWORD PTR ds:0xd8ccffff,esp
  43f74d:	and    eax,DWORD PTR [ebx-0x200ff7c]
  43f753:	xchg   ebp,eax
  43f754:	add    bh,bh
  43f756:	inc    esp
  43f757:	lods   al,BYTE PTR ds:[esi]
  43f758:	into   
  43f759:	(bad)  
  43f75a:	inc    DWORD PTR [eax]
  43f75c:	mov    esi,0xf6000f
  43f761:	dec    ebx
  43f763:	mov    al,BYTE PTR [eax]
  43f765:	xor    DWORD PTR [ecx-0x7cdd68],0xffffffff
  43f76c:	xlat   BYTE PTR es:[ebx]
  43f76e:	call   FWORD PTR [ecx]
  43f770:	cmp    edi,0x46
  43f773:	xchg   edx,eax
  43f774:	dec    esp
  43f776:	shr    BYTE PTR [ebx-0x72],1
  43f779:	add    bh,bh
  43f77b:	sbb    DWORD PTR [ebx+0x5b],0xffffffff
  43f77f:	aaa    
  43f780:	add    DWORD PTR [eax],0x5c
  43f783:	cmp    bh,bh
  43f785:	int3   
  43f786:	shr    DWORD PTR [esi+0x33],cl
  43f789:	int3   
  43f78a:	(bad)  
  43f78b:	dec    DWORD PTR [ebp+0xd9ff16]
  43f791:	(bad)  
  43f792:	call   FWORD PTR [edi+0x0]
  43f795:	inc    DWORD PTR [esi+0xff837f]
  43f79b:	sbb    DWORD PTR [ebp-0x33a97c28],0xffffffff
  43f7a2:	jno    0x43f808
  43f7a4:	int3   
  43f7a5:	and    DWORD PTR [eax-0x4],0x33
  43f7a9:	int3   
  43f7aa:	(bad)  
  43f7ab:	inc    DWORD PTR [esi]
  43f7ad:	out    dx,al
  43f7ae:	add    BYTE PTR [esp+ecx*8],al
  43f7b1:	add    ch,ah
  43f7b3:	jmp    0x43f7b5
  43f7b5:	add    BYTE PTR [edx+edi*4],bl
  43f7b8:	in     eax,dx
  43f7b9:	inc    DWORD PTR [ebx-0x856b00]
  43f7bf:	adc    edi,edi
  43f7c1:	sbb    DWORD PTR [ebx+0x2083cc4c],0xffffffd2
  43f7c8:	sahf   
  43f7c9:	inc    DWORD PTR [ebx+0x8f2dff]
  43f7cf:	push   ecx
  43f7d0:	(bad)  
  43f7d1:	(bad)  
  43f7d2:	out    dx,eax
  43f7d3:	int    0xcc
  43f7d5:	dec    DWORD PTR [ecx+0x1c]
  43f7d8:	jmp    0xff92:0x94ffffcc
  43f7df:	clc    
  43f7e0:	add    bh,bh
  43f7e2:	int    0x48
  43f7e4:	add    BYTE PTR [eax],al
  43f7e6:	add    DWORD PTR [edi+ecx*4],esp
  43f7e9:	cmp    edi,0x0
  43f7ec:	test   BYTE PTR [edx-0xff357d],cl
  43f7f2:	pushf  
  43f7f3:	nop
  43f7f4:	add    DWORD PTR [ebx-0xacb971],0xffffffff
  43f7fb:	dec    DWORD PTR [esi-0x100051]
  43f801:	add    BYTE PTR [eax],dl
  43f803:	icebp  
  43f804:	add    bh,bh
  43f806:	adc    eax,0xcc00481f
  43f80b:	add    BYTE PTR [eax],bh
  43f80d:	mov    es,WORD PTR [ebx-0x11ffff4f]
  43f813:	loop   0x43f814
  43f815:	add    BYTE PTR [ebx+0x58],dh
  43f818:	add    DWORD PTR gs:[eax],0xffffffff
  43f81c:	int    0xa0
  43f81e:	add    BYTE PTR [esi-0x684cff01],cl
  43f824:	add    BYTE PTR [ecx+0x38ff36],cl
  43f82a:	add    DWORD PTR [eax],0xffffffd2
  43f82d:	mov    eax,0x834dff
  43f832:	push   es
  43f833:	mov    WORD PTR [eax],es
  43f835:	call   DWORD PTR [esi-0xff9f7a]
  43f83b:	call   FWORD PTR [eax-0x332b008b]
  43f841:	add    BYTE PTR [ebp+0x5a00cc7a],cl
  43f847:	stos   DWORD PTR es:[edi],eax
  43f848:	jp     0x43f84a
  43f84a:	(bad)  
  43f84b:	(bad)  
  43f84c:	jmp    0x2aff:0xf8ff9f
  43f853:	loope  0x43f854
  43f855:	jmp    ebx
  43f857:	leave  
  43f858:	push   edx
  43f859:	cmp    edi,0x0
  43f85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f85d:	jb     0x43f85e
  43f85f:	inc    ebp
  43f860:	inc    DWORD PTR [eax]
  43f862:	jbe    0x43f8bb
  43f864:	add    BYTE PTR [eax],al
  43f866:	mov    ah,0x28
  43f868:	xchg   ecx,eax
  43f869:	dec    esp
  43f86b:	xor    esp,0x5e
  43f86e:	add    BYTE PTR [edx+0x0],ch
  43f871:	int3   
  43f872:	jg     0x43f85c
  43f874:	inc    DWORD PTR [eax]
  43f876:	sbb    DWORD PTR [edx],esi
  43f878:	xchg   esi,eax
  43f879:	add    BYTE PTR [eax],al
  43f87b:	(bad)  
  43f87c:	fiadd  WORD PTR [esi-0x3300ef7d]
  43f882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f883:	js     0x43f885
  43f885:	add    ah,dl
  43f887:	sub    DWORD PTR [edx+0x0],edx
  43f88a:	inc    DWORD PTR [eax]
  43f88c:	jo     0x43f86e
  43f88e:	and    DWORD PTR [ecx-0x1],0xffffff83
  43f892:	mov    ebp,0x6000ffa8
  43f897:	inc    ecx
  43f898:	add    BYTE PTR [ebx-0x7b0dff01],0xcc
  43f89f:	dec    ebx
  43f8a0:	(bad)  
  43f8a1:	call   FWORD PTR [esi+eax*8]
  43f8a4:	add    BYTE PTR [eax],al
  43f8a6:	xchg   edi,eax
  43f8a7:	mov    DWORD PTR [eax],0x36ff00ff
  43f8ad:	push   0x89ff2fcc
  43f8b2:	inc    esi
  43f8b3:	mov    edi,?
  43f8b5:	jmp    FWORD PTR [esi-0x7c3e62]
  43f8bb:	adc    ebp,0xffffff88
  43f8be:	add    BYTE PTR [ebx-0x1],ch
  43f8c1:	add    cl,ah
  43f8c3:	std    
  43f8c4:	add    bh,bh
  43f8c6:	push   es
  43f8c7:	adc    DWORD PTR [ebx-0x7d],edx
  43f8ca:	inc    DWORD PTR [eax]
  43f8cc:	outs   dx,BYTE PTR ds:[esi]
  43f8cd:	ins    BYTE PTR es:[edi],dx
  43f8ce:	call   FWORD PTR [eax]
  43f8d0:	dec    DWORD PTR [ecx+0xb86f]
  43f8d6:	mov    bh,0x70
  43f8d8:	popa   
  43f8d9:	int3   
  43f8da:	(bad)  
  43f8db:	call   ebx
  43f8dd:	bound  eax,QWORD PTR [ebx-0x5500000e]
  43f8e3:	add    al,0x0
  43f8e5:	(bad)  
  43f8e6:	sti    
  43f8e7:	pop    ss
  43f8e8:	ret    0xff
  43f8eb:	sub    eax,0xffffff90
  43f8ee:	call   FWORD PTR [edi-0x7bb2ff01]
  43f8f4:	inc    DWORD PTR [ebx-0x8de01f]
  43f8fa:	add    BYTE PTR [ecx+0x52cc007b],cl
  43f900:	add    bh,bh
  43f902:	add    BYTE PTR ds:0x49878300,0xaf
  43f909:	cmp    edi,0x0
  43f90c:	jmp    0x43f8bd
  43f90e:	(bad)  
  43f90f:	cmp    bh,bh
  43f911:	add    BYTE PTR [ecx-0x71],dl
  43f914:	mov    DWORD PTR [eax],eax
  43f916:	cld    
  43f917:	xchg   ebx,eax
  43f918:	mov    ebx,0xed00cc89
  43f91d:	inc    DWORD PTR cs:[edi+0x71d800ff]
  43f924:	add    bh,bh
  43f926:	xchg   esi,eax
  43f927:	or     al,0x27
  43f929:	add    BYTE PTR [eax],al
  43f92b:	(bad)  
  43f92c:	jns    0x43f94b
  43f92e:	sbb    DWORD PTR [ecx-0x1],0xffffffff
  43f932:	and    edi,edi
  43f934:	add    DWORD PTR [eax],0xfffffff5
  43f937:	mov    edx,0xfffffff4
  43f93c:	imul   edx,DWORD PTR [edi+edi*8],0x14ccff0f
  43f943:	test   bh,bh
  43f945:	add    ch,dh
  43f947:	cli    
  43f948:	mov    DWORD PTR [eax],eax
  43f94a:	add    DWORD PTR [ebx-0x7376ed99],0xffffffff
  43f951:	inc    DWORD PTR [edi]
  43f953:	cmp    eax,DWORD PTR [eax]
  43f955:	(bad)  
  43f956:	jle    0x43f8ff
  43f958:	out    dx,eax
  43f959:	inc    DWORD PTR [ebx-0x946e01]
  43f95f:	popf   
  43f960:	add    bh,bh
  43f962:	mov    ch,0x4e
  43f964:	inc    DWORD PTR [eax]
  43f966:	nop
  43f967:	fwait
  43f968:	repnz add BYTE PTR [ecx+0xaaa2ff],cl
  43f96f:	pusha  
  43f970:	int3   
  43f971:	sbb    DWORD PTR [edi-0x217600d3],0x56
  43f978:	push   esp
  43f979:	int3   
  43f97a:	inc    DWORD PTR [eax]
  43f97c:	rol    BYTE PTR [esi+0x0],cl
  43f97f:	aaa    
  43f980:	(bad)  
  43f981:	call   esi
  43f983:	out    0x0,al
  43f985:	(bad)  
  43f986:	jns    0x43f9f1
  43f988:	cwde   
  43f989:	(bad)  
  43f98a:	inc    DWORD PTR [eax]
  43f98c:	pop    ebx
  43f98d:	lds    eax,FWORD PTR [ebx-0x4ff0038]
  43f993:	imul   edi,edi,0xffffffff
  43f996:	mov    edx,0xff89cccc
  43f99b:	int3   
  43f99c:	lds    esp,FWORD PTR [edi+edi*8-0x7f000010]
  43f9a3:	repnz (bad) 
  43f9a5:	jmp    FWORD PTR [eax+eiz*4+0x13]
  43f9a9:	int3   
  43f9aa:	(bad)  
  43f9ab:	dec    DWORD PTR [ecx]
  43f9ad:	cwde   
  43f9ae:	add    BYTE PTR [ebx],ah
  43f9b0:	add    bh,bh
  43f9b2:	sbb    al,0x8c
  43f9b4:	add    bh,bh
  43f9b6:	nop
  43f9b7:	jmp    0x8944f8e9
  43f9bc:	mov    ch,0x10
  43f9be:	mov    DWORD PTR [ebx-0x25580001],esp
  43f9c4:	add    BYTE PTR [eax],al
  43f9c6:	jecxz  0x43fa3b
  43f9c8:	add    bh,bh
  43f9ca:	dec    esp
  43f9cc:	add    al,0x0
  43f9ce:	int3   
  43f9cf:	(bad)  
  43f9d0:	inc    DWORD PTR [eax]
  43f9d2:	aad    0x9
  43f9d4:	cmp    edi,0xffffffb7
  43f9d7:	jmp    DWORD PTR [ebx+eax*4+0x0]
  43f9db:	cmp    DWORD PTR [edx],0x1c
  43f9de:	int3   
  43f9df:	push   0x0
  43f9e1:	mov    DWORD PTR [ebx-0x4aff7c71],edi
  43f9e7:	sub    BYTE PTR [eax+0x0],ah
  43f9ea:	inc    DWORD PTR [eax]
  43f9ec:	and    BYTE PTR [eax-0x7c00db34],cl
  43f9f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f9f3:	leave  
  43f9f4:	add    bh,bh
  43f9f6:	jbe    0x43fa1a
  43f9f8:	nop
  43f9f9:	inc    DWORD PTR [eax]
  43f9fb:	call   DWORD PTR [ecx-0x200051]
  43fa01:	and    DWORD PTR [ebx-0x40],0xffffffff
  43fa05:	mov    DWORD PTR [ecx+0x4f],edx
  43fa08:	inc    eax
  43fa09:	dec    DWORD PTR [ecx+0x2d51ff]
  43fa0f:	sbb    edi,edi
  43fa11:	jmp    FWORD PTR [edi]
  43fa13:	lahf   
  43fa14:	(bad)  
  43fa15:	jmp    ecx
  43fa17:	mov    cl,0xf7
  43fa19:	add    bh,bh
  43fa1b:	inc    DWORD PTR [eax-0xfb7cd5]
  43fa21:	add    BYTE PTR [ebx+0x67],cl
  43fa24:	inc    DWORD PTR [ebx-0x669675]
  43fa2a:	int3   
  43fa2b:	call   DWORD PTR ds:0x4f0068
  43fa31:	int3   
  43fa32:	aam    0x98
  43fa34:	add    BYTE PTR [eax],al
  43fa36:	imul   eax,DWORD PTR [ebx-0x3351],0xc6ff670d
  43fa40:	(bad)  
  43fa41:	call   DWORD PTR [edx+0x6]
  43fa44:	(bad)  
  43fa45:	push   DWORD PTR [esi-0x5a]
  43fa48:	pushf  
  43fa49:	(bad)  
  43fa4a:	(bad)  
  43fa4b:	jmp    DWORD PTR [edi+0x36]
  43fa4e:	jmp    DWORD PTR [ecx-0x34]
  43fa51:	mov    DWORD PTR [edi],esi
  43fa53:	lock int3 
  43fa55:	add    bl,ah
  43fa57:	out    dx,al
  43fa58:	dec    ebp
  43fa59:	(bad)  
  43fa5a:	(bad)  
  43fa5b:	(bad)  
  43fa5c:	mov    esi,0x90ffb8
  43fa61:	mov    ecx,eax
  43fa63:	pop    esp
  43fa64:	dec    DWORD PTR [ecx-0x6b1299]
  43fa6a:	add    BYTE PTR [ebx-0x6e760df9],al
  43fa70:	(bad)  
  43fa71:	dec    DWORD PTR [esi+0x7e00ffe6]
  43fa77:	int3   
  43fa78:	iret   
  43fa79:	or     DWORD PTR [ecx+0x8f63ff],0x78
  43fa80:	inc    DWORD PTR [eax]
  43fa82:	mov    ax,WORD PTR [ebx+0x641c4a00]
  43fa89:	add    bh,bh
  43fa8b:	jmp    ebx
  43fa8d:	fiadd  WORD PTR [eax]
  43fa8f:	nop
  43fa90:	int3   
  43fa91:	push   edx
  43fa93:	ins    BYTE PTR es:[edi],dx
  43fa94:	dec    DWORD PTR [ecx+0x2394ee]
  43fa9a:	add    bh,bh
  43fa9c:	ret    0xcc93
  43fa9f:	cmp    ah,cl
  43faa1:	add    BYTE PTR ds:0xccffff98,bh
  43faa7:	add    eax,0xff000094
  43faac:	adc    esi,DWORD PTR [eax-0x1]
  43faaf:	(bad)  
  43fab0:	(bad)  
  43fab1:	call   DWORD PTR [ebp+ecx*4+0x761bff89]
  43fab8:	cmp    edi,0xffffffff
  43fabb:	int3   
  43fabc:	frstor [ebx+eax*4]
  43fabf:	and    bh,bh
  43fac1:	(bad)  
  43fac2:	cli    
  43fac3:	arpl   WORD PTR [eax],ax
  43fac5:	jmp    DWORD PTR [edi+0x830f7f]
  43facb:	or     DWORD PTR [ebx],0xffffffd3
  43face:	adc    DWORD PTR [edi-0x358cff01],0xffffffff
  43fad5:	jmp    FWORD PTR [eax+eax*1]
  43fad8:	push   ds
  43fad9:	(bad)  
  43fada:	(bad)  
  43fadb:	jmp    FWORD PTR [edx-0x61]
  43fade:	(bad)  
  43fadf:	fadd   QWORD PTR [eax]
  43fae1:	int3   
  43fae2:	stos   BYTE PTR es:[edi],al
  43fae3:	mov    cl,0xff
  43fae5:	inc    DWORD PTR [esi-0xa99e]
  43faeb:	call   DWORD PTR [edi-0x333fff94]
  43faf1:	sub    DWORD PTR [eax-0x250033e2],0xffffffae
  43faf8:	pop    ecx
  43faf9:	mov    edi,edi
  43fafb:	(bad)  
  43fafc:	jmp    0xff77fa46
  43fb01:	push   DWORD PTR [edx+0x6acc004f]
  43fb07:	xchg   BYTE PTR [ecx],bh
  43fb09:	add    BYTE PTR [ecx-0x7c13cd01],cl
  43fb0f:	out    dx,eax
  43fb10:	add    BYTE PTR [ebx-0x767c3ec0],al
  43fb16:	shr    DWORD PTR [ebx+0x14],cl
  43fb19:	inc    DWORD PTR [ebx-0xc19800]
  43fb1f:	cmp    DWORD PTR [ecx-0xc36400],ecx
  43fb25:	(bad)  
  43fb26:	jmp    0x4d89:0xad5
  43fb2d:	gs adc eax,0xffffffff
  43fb31:	dec    DWORD PTR [ebp+0x3bff8903]
  43fb37:	nop
  43fb38:	retf   
  43fb39:	inc    DWORD PTR [eax]
  43fb3b:	inc    DWORD PTR [ecx-0x333affde]
  43fb41:	cmp    DWORD PTR [ebx],0x4b
  43fb44:	add    bh,bh
  43fb46:	stos   BYTE PTR es:[edi],al
  43fb47:	pop    ds
  43fb48:	addr16 (bad) 
  43fb4a:	(bad)  
  43fb4b:	(bad)  
  43fb4c:	fidiv  WORD PTR [edi-0x7d]
  43fb4f:	pop    ecx
  43fb50:	add    bh,bh
  43fb52:	popf   
  43fb53:	pushf  
  43fb54:	int3   
  43fb55:	add    BYTE PTR [ecx-0x11],dh
  43fb58:	test   al,0xff
  43fb5a:	int3   
  43fb5b:	add    BYTE PTR ds:0xfff8832f,bl
  43fb61:	add    dl,bl
  43fb63:	out    dx,al
  43fb64:	int3   
  43fb65:	inc    ebx
  43fb67:	jmp    0xccc7facb
  43fb6c:	xor    BYTE PTR [eax-0xff3001],dh
  43fb72:	xchg   esp,eax
  43fb73:	cli    
  43fb74:	or     esp,0x18
  43fb77:	xor    BYTE PTR [eax+0x1cff8900],dl
  43fb7d:	mov    edi,0xccffd6cc
  43fb82:	not    BYTE PTR [ebx+eax*4-0x1]
  43fb86:	(bad)  
  43fb87:	dec    esi
  43fb88:	mov    DWORD PTR [eax],eax
  43fb8a:	inc    DWORD PTR [eax]
  43fb8c:	dec    esi
  43fb8d:	sahf   
  43fb8e:	add    BYTE PTR [ebp-0x5b60077],cl
  43fb94:	(bad)  
  43fb95:	inc    DWORD PTR [esi+0x24]
  43fb98:	dec    ecx
  43fb99:	inc    DWORD PTR [ebx+0x8e6b89]
  43fb9f:	fiadd  DWORD PTR [eax]
  43fba1:	inc    esp
  43fba3:	push   cs
  43fba4:	add    bh,bh
  43fba6:	push   edx
  43fba7:	cmp    al,0xd6
  43fba9:	inc    DWORD PTR [eax]
  43fbab:	xor    ebp,0x1a
  43fbae:	xor    DWORD PTR [eax],0x0
  43fbb1:	add    DWORD PTR [edi+0x6789ffe3],0x72
  43fbb8:	inc    ecx
  43fbb9:	(bad)  
  43fbba:	(bad)  
  43fbbb:	(bad)  
  43fbbc:	call   0xffe5c819
  43fbc1:	add    dl,ch
  43fbc3:	xchg   ebx,eax
  43fbc4:	dec    esp
  43fbc6:	test   eax,0xff83f757
  43fbcb:	or     DWORD PTR [ebp-0x7695ff86],0xffffff83
  43fbd2:	xchg   ebx,eax
  43fbd3:	ins    BYTE PTR es:[edi],dx
  43fbd4:	cmp    edi,0x62
  43fbd7:	cs sar edi,cl
  43fbda:	add    bh,bh
  43fbdc:	sahf   
  43fbdd:	push   esi
  43fbde:	sbb    DWORD PTR [esi+0x0],0xffffffcc
  43fbe2:	loop   0x43fc33
  43fbe4:	or     esp,0x5
  43fbe7:	(bad)  [edi-0x4500007d]
  43fbed:	je     0x43fbef
  43fbef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fbf0:	(bad)  
  43fbf1:	jmp    DWORD PTR [eax-0x68ff7ca0]
  43fbf7:	retf   
  43fbf8:	mov    edi,0xffffffff
  43fbfd:	ud0    ecx,DWORD PTR [ecx-0x76c2ff01]
  43fc04:	add    bh,bh
  43fc06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fc07:	loope  0x43fbc7
  43fc09:	inc    DWORD PTR [ebx-0x276800]
  43fc0f:	outs   dx,DWORD PTR ds:[esi]
  43fc10:	add    DWORD PTR [eax],0xffffffce
  43fc13:	mov    DWORD PTR [eax],eax
  43fc15:	(bad)  
  43fc16:	fmul   st,st(6)
  43fc18:	add    bh,bh
  43fc1a:	dec    esp
  43fc1c:	mov    edx,0xff3b0039
  43fc21:	call   FWORD PTR [eax+0x11000080]
  43fc27:	pop    ebp
  43fc28:	mov    bl,0x83
  43fc2a:	int3   
  43fc2b:	jmp    DWORD PTR [edx-0x65]
  43fc2e:	int3   
  43fc2f:	ret    
  43fc30:	(bad)  
  43fc31:	call   FWORD PTR [eax]
  43fc33:	mov    al,0x83
  43fc35:	add    BYTE PTR [ebx-0xffc7f3],bl
  43fc3b:	push   ecx
  43fc3d:	push   esp
  43fc3e:	push   DWORD PTR [ebx]
  43fc40:	(bad)  
  43fc41:	call   FWORD PTR [ebp-0x75ff7c17]
  43fc47:	les    ebp,FWORD PTR [esi-0x1d000077]
  43fc4d:	outs   dx,BYTE PTR ds:[esi]
  43fc4e:	add    dh,bl
  43fc50:	inc    DWORD PTR [eax]
  43fc52:	les    ebx,FWORD PTR [edi-0x34]
  43fc55:	int3   
  43fc56:	sbb    al,ch
  43fc58:	out    dx,al
  43fc59:	add    bh,bh
  43fc5b:	add    BYTE PTR [ecx-0xb5336a],al
  43fc61:	add    dh,bh
  43fc63:	pop    eax
  43fc64:	cmp    edi,0x2
  43fc67:	push   0xccffcc5a
  43fc6c:	and    BYTE PTR [ebx+0xffb089],bl
  43fc72:	push   ebx
  43fc73:	jl     0x43fc74
  43fc75:	mov    DWORD PTR [edx],edx
  43fc77:	cdq    
  43fc78:	clc    
  43fc79:	dec    esp
  43fc7b:	int3   
  43fc7c:	cmp    ch,BYTE PTR [eax]
  43fc7e:	call   FWORD PTR [ebx+0x0]
  43fc81:	(bad)  
  43fc82:	fcom   DWORD PTR [edx]
  43fc84:	inc    DWORD PTR [ebx-0xe82af9]
  43fc8a:	(bad)  
  43fc8b:	push   DWORD PTR [esi+0x68]
  43fc8e:	(bad)  
  43fc8f:	out    dx,eax
  43fc90:	(bad)  
  43fc91:	(bad)  
  43fc92:	mov    ebx,0x8fffff8e
  43fc97:	je     0x43fcca
  43fc99:	inc    DWORD PTR [ebx-0x455001]
  43fc9f:	cmp    DWORD PTR [ebx-0xe82c01],eax
  43fca5:	inc    edx
  43fca7:	iret   
  43fca8:	in     al,0x0
  43fcaa:	(bad)  
  43fcab:	push   DWORD PTR [eax]
  43fcad:	(bad)  
  43fcae:	(bad)  
  43fcaf:	stc    
  43fcb0:	dec    esp
  43fcb2:	retf   0x8378
  43fcb5:	(bad)  
  43fcb6:	fidivr WORD PTR [ecx+0x8383eb]
  43fcbc:	hlt    
  43fcbd:	fcos   
  43fcbf:	sti    
  43fcc0:	cmp    edi,0xffffff93
  43fcc3:	add    edi,edi
  43fcc5:	dec    DWORD PTR [esi+0xff2554]
  43fccb:	add    al,dh
  43fccd:	jmp    FWORD PTR gs:[ecx]
  43fcd0:	dec    esp
  43fcd2:	push   ebp
  43fcd3:	mov    eax,0xb497ff00
  43fcd8:	scas   eax,DWORD PTR es:[edi]
  43fcd9:	inc    DWORD PTR [eax]
  43fcdb:	add    BYTE PTR [edi-0x63],dh
  43fcde:	(bad)  
  43fcdf:	call   0x5ee5fce3
  43fce4:	add    DWORD PTR [eax],0x75
  43fce7:	cmp    cl,0x83
  43fcea:	(bad)  
  43fceb:	(bad)  
  43fcec:	cld    
  43fced:	sbb    eax,0x200
  43fcf2:	leave  
  43fcf3:	jb     0x43fcf4
  43fcf5:	inc    DWORD PTR [edi+eax*1]
  43fcf8:	std    
  43fcf9:	inc    DWORD PTR [eax]
  43fcfb:	int3   
  43fcfc:	mov    bh,BYTE PTR [edx+0x893700]
  43fd02:	rcl    DWORD PTR [ebp-0x1],1
  43fd05:	(bad)  
  43fd06:	fcomi  st,st(0)
  43fd08:	int    0xff
  43fd0a:	cmp    edi,0xffffffe9
  43fd0d:	test   eax,0xff00e1cc
  43fd12:	jl     0x43fcb9
  43fd14:	inc    DWORD PTR [eax]
  43fd16:	in     al,0x45
  43fd18:	adc    edi,edi
  43fd1a:	add    BYTE PTR [eax],al
  43fd1c:	(bad)  
  43fd1d:	sahf   
  43fd1e:	add    ah,ch
  43fd20:	dec    esp
  43fd22:	cmp    eax,0x9400ffe4
  43fd27:	adc    al,0x0
  43fd2a:	add    bh,bh
  43fd2c:	mov    ch,0x2b
  43fd2e:	dec    ecx
  43fd30:	add    BYTE PTR [eax],al
  43fd32:	stc    
  43fd33:	es (bad) 
  43fd35:	inc    DWORD PTR [edx+0x39be]
  43fd3b:	jmp    DWORD PTR [ecx-0xe3ff3b]
  43fd41:	cmp    edi,0xffffff81
  43fd44:	(bad)  
  43fd45:	(bad)  
  43fd46:	mov    esp,0xff007f0a
  43fd4b:	(bad)  
  43fd4c:	fdivr  DWORD PTR [ebx]
  43fd4e:	mov    esp,eax
  43fd50:	int3   
  43fd51:	dec    DWORD PTR [edx+0x1a]
  43fd54:	(bad)  
  43fd55:	call   FWORD PTR [ecx-0x62]
  43fd58:	jle    0x43fd59
  43fd5a:	add    bh,bh
  43fd5c:	or     bh,0xff
  43fd5f:	fwait
  43fd60:	inc    DWORD PTR [eax]
  43fd62:	jne    0x1bcbfd67
  43fd68:	mov    ecx,0x16ff0083
  43fd6d:	iret   
  43fd6e:	add    BYTE PTR [eax+0xe92ffff],ch
  43fd74:	add    BYTE PTR [ebx+0x692321],al
  43fd7a:	add    bh,bh
  43fd7c:	ret    0xff96
  43fd7f:	int3   
  43fd80:	add    bh,bh
  43fd82:	les    edx,FWORD PTR [ebp-0x1a2aff01]
  43fd88:	xor    al,0xff
  43fd8a:	inc    DWORD PTR [ebx-0x3a007822]
  43fd90:	int3   
  43fd91:	dec    eax
  43fd93:	into   
  43fd94:	(bad)  
  43fd95:	call   FWORD PTR [eax+0xffb9]
  43fd9b:	dec    esp
  43fd9d:	int3   
  43fd9e:	dec    esp
  43fda0:	push   ecx
  43fda1:	push   ebx
  43fda2:	push   ebp
  43fda3:	push   esi
  43fda4:	push   edi
  43fda5:	call   DWORD PTR ds:0x444068
  43fdab:	mov    esi,DWORD PTR ds:0x447d1c
  43fdb1:	mov    ebp,DWORD PTR ds:0x44406c
  43fdb7:	mov    ebx,DWORD PTR ds:0x44404c
  43fdbd:	mov    DWORD PTR [esp+0x10],eax
  43fdc1:	mov    eax,ds:0x447090
  43fdc6:	add    esi,0x30
  43fdc9:	mov    edi,0x2
  43fdce:	mov    edi,edi
  43fdd0:	movzx  ecx,BYTE PTR [eax+0x6]
  43fdd4:	movzx  edx,WORD PTR [eax+0x3]
  43fdd8:	movzx  eax,BYTE PTR [eax]
  43fddb:	push   0x0
  43fddd:	shl    ecx,0x10
  43fde0:	push   0x8f
  43fde5:	add    ecx,edx
  43fde7:	push   0x121
  43fdec:	shl    ecx,0x8
  43fdef:	push   0xd4
  43fdf4:	add    ecx,eax
  43fdf6:	push   0x8e
  43fdfb:	mov    DWORD PTR ds:0x447d04,ecx
  43fe01:	mov    ecx,DWORD PTR [esp+0x24]
  43fe05:	push   0x0
  43fe07:	push   ecx
  43fe08:	call   ebp
  43fe0a:	mov    edx,0x7343d1f2
  43fe0f:	sub    edx,DWORD PTR ds:0x447d14
  43fe15:	push   0x50
  43fe17:	xor    edx,DWORD PTR ds:0x447d04
  43fe1d:	push   0x446b54
  43fe22:	push   0x0
  43fe24:	mov    DWORD PTR [esi],edx
  43fe26:	call   ebx
  43fe28:	mov    ecx,DWORD PTR ds:0x447090
  43fe2e:	movzx  eax,WORD PTR [ecx+0xe]
  43fe32:	movzx  ecx,WORD PTR [ecx+0x9]
  43fe36:	shl    eax,0x10
  43fe39:	add    eax,ecx
  43fe3b:	mov    edx,0x7343d1f2
  43fe40:	sub    edx,DWORD PTR ds:0x447d14
  43fe46:	mov    ds:0x447d04,eax
  43fe4b:	xor    edx,eax
  43fe4d:	mov    DWORD PTR [esi+0x4],edx
  43fe50:	mov    eax,ds:0x447090
  43fe55:	add    eax,0x10
  43fe58:	add    esi,0x8
  43fe5b:	dec    edi
  43fe5c:	mov    ds:0x447090,eax
  43fe61:	jne    0x43fdd0
  43fe67:	mov    edx,DWORD PTR ds:0x447094
  43fe6d:	movzx  eax,BYTE PTR [edx+0x5]
  43fe71:	movzx  esi,WORD PTR [edx+0x3]
  43fe75:	movzx  edx,BYTE PTR [edx+0x1]
  43fe79:	shl    eax,0x10
  43fe7c:	add    eax,esi
  43fe7e:	mov    ecx,DWORD PTR ds:0x447d1c
  43fe84:	shl    eax,0x8
  43fe87:	add    eax,edx
  43fe89:	mov    edx,DWORD PTR ds:0x447d14
  43fe8f:	sub    edx,0x80004001
  43fe95:	neg    edx
  43fe97:	sbb    edx,edx
  43fe99:	and    edx,0x9a229497
  43fe9f:	add    edx,0x65ddbd21
  43fea5:	xor    edx,eax
  43fea7:	mov    ds:0x447d04,eax
  43feac:	mov    DWORD PTR [ecx+0x40],edx
  43feaf:	mov    edx,DWORD PTR ds:0x447094
  43feb5:	add    edx,0x8
  43feb8:	mov    DWORD PTR ds:0x447094,edx
  43febe:	movzx  eax,BYTE PTR [edx+0x5]
  43fec2:	movzx  esi,WORD PTR [edx+0x3]
  43fec6:	movzx  edx,BYTE PTR [edx+0x1]
  43feca:	shl    eax,0x10
  43fecd:	add    eax,esi
  43fecf:	shl    eax,0x8
  43fed2:	add    eax,edx
  43fed4:	mov    edx,DWORD PTR ds:0x447d14
  43feda:	sub    edx,0x80004001
  43fee0:	neg    edx
  43fee2:	sbb    edx,edx
  43fee4:	and    edx,0x9a229497
  43feea:	add    edx,0x65ddbd21
  43fef0:	xor    edx,eax
  43fef2:	mov    ds:0x447d04,eax
  43fef7:	mov    DWORD PTR [ecx+0x44],edx
  43fefa:	mov    edx,DWORD PTR ds:0x447094
  43ff00:	add    edx,0x8
  43ff03:	mov    DWORD PTR ds:0x447094,edx
  43ff09:	movzx  eax,BYTE PTR [edx+0x5]
  43ff0d:	movzx  esi,WORD PTR [edx+0x3]
  43ff11:	movzx  edx,BYTE PTR [edx+0x1]
  43ff15:	shl    eax,0x10
  43ff18:	add    eax,esi
  43ff1a:	shl    eax,0x8
  43ff1d:	add    eax,edx
  43ff1f:	mov    edx,DWORD PTR ds:0x447d14
  43ff25:	sub    edx,0x80004001
  43ff2b:	neg    edx
  43ff2d:	sbb    edx,edx
  43ff2f:	and    edx,0x9a229497
  43ff35:	add    edx,0x65ddbd21
  43ff3b:	xor    edx,eax
  43ff3d:	mov    ds:0x447d04,eax
  43ff42:	mov    DWORD PTR [ecx+0x48],edx
  43ff45:	mov    edx,DWORD PTR ds:0x447094
  43ff4b:	add    edx,0x8
  43ff4e:	mov    DWORD PTR ds:0x447094,edx
  43ff54:	movzx  eax,BYTE PTR [edx+0x5]
  43ff58:	movzx  esi,WORD PTR [edx+0x3]
  43ff5c:	movzx  edx,BYTE PTR [edx+0x1]
  43ff60:	shl    eax,0x10
  43ff63:	add    eax,esi
  43ff65:	shl    eax,0x8
  43ff68:	add    eax,edx
  43ff6a:	mov    edx,DWORD PTR ds:0x447d14
  43ff70:	sub    edx,0x80004001
  43ff76:	neg    edx
  43ff78:	sbb    edx,edx
  43ff7a:	and    edx,0x9a229497
  43ff80:	add    edx,0x65ddbd21
  43ff86:	xor    edx,eax
  43ff88:	mov    ds:0x447d04,eax
  43ff8d:	mov    DWORD PTR [ecx+0x4c],edx
  43ff90:	add    DWORD PTR ds:0x447094,0x8
  43ff97:	mov    edx,DWORD PTR ds:0x447098
  43ff9d:	movzx  eax,WORD PTR [edx+0x6]
  43ffa1:	mov    ecx,DWORD PTR ds:0x447d1c
  43ffa7:	movzx  edx,WORD PTR [edx]
  43ffaa:	shl    eax,0x10
  43ffad:	add    eax,edx
  43ffaf:	mov    edx,DWORD PTR ds:0x447d14
  43ffb5:	mov    ds:0x447d04,eax
  43ffba:	add    edx,0x500a3df2
  43ffc0:	xor    edx,eax
  43ffc2:	mov    DWORD PTR [ecx+0x50],edx
  43ffc5:	mov    edx,DWORD PTR ds:0x447098
  43ffcb:	movzx  eax,BYTE PTR [edx+0xf]
  43ffcf:	movzx  esi,BYTE PTR [edx+0xc]
  43ffd3:	shl    eax,0x8
  43ffd6:	add    eax,esi
  43ffd8:	movzx  esi,BYTE PTR [edx+0xa]
  43ffdc:	movzx  edx,BYTE PTR [edx+0x8]
  43ffe0:	shl    eax,0x8
  43ffe3:	add    eax,esi
  43ffe5:	shl    eax,0x8
  43ffe8:	add    eax,edx
  43ffea:	mov    edx,DWORD PTR ds:0x447d14
  43fff0:	xor    edx,eax
  43fff2:	mov    ds:0x447d04,eax
  43fff7:	xor    edx,0x500a3df2
  43fffd:	mov    DWORD PTR [ecx+0x54],edx
  440000:	mov    edx,DWORD PTR ds:0x447098
  440006:	add    edx,0x10
  440009:	mov    DWORD PTR ds:0x447098,edx
  44000f:	movzx  eax,WORD PTR [edx+0x6]
  440013:	movzx  edx,WORD PTR [edx]
  440016:	shl    eax,0x10
  440019:	add    eax,edx
  44001b:	mov    edx,DWORD PTR ds:0x447d14
  440021:	mov    ds:0x447d04,eax
  440026:	add    edx,0x500a3df2
  44002c:	xor    edx,eax
  44002e:	mov    DWORD PTR [ecx+0x58],edx
  440031:	mov    edx,DWORD PTR ds:0x447098
  440037:	movzx  eax,BYTE PTR [edx+0xf]
  44003b:	movzx  esi,BYTE PTR [edx+0xc]
  44003f:	shl    eax,0x8
  440042:	add    eax,esi
  440044:	movzx  esi,BYTE PTR [edx+0xa]
  440048:	movzx  edx,BYTE PTR [edx+0x8]
  44004c:	shl    eax,0x8
  44004f:	add    eax,esi
  440051:	shl    eax,0x8
  440054:	add    eax,edx
  440056:	mov    edx,DWORD PTR ds:0x447d14
  44005c:	xor    edx,eax
  44005e:	xor    edx,0x500a3df2
  440064:	mov    ds:0x447d04,eax
  440069:	mov    DWORD PTR [ecx+0x5c],edx
  44006c:	mov    esi,DWORD PTR ds:0x447d1c
  440072:	add    DWORD PTR ds:0x447098,0x10
  440079:	mov    ecx,DWORD PTR ds:0x44709c
  44007f:	add    esi,0x60
  440082:	mov    edi,0xd0
  440087:	jmp    0x440090
  440089:	lea    esp,[esp+0x0]
  440090:	movzx  eax,BYTE PTR [ecx+0x6]
  440094:	movzx  edx,BYTE PTR [ecx+0x4]
  440098:	movzx  ecx,WORD PTR [ecx]
  44009b:	shl    eax,0x8
  44009e:	add    eax,edx
  4400a0:	shl    eax,0x10
  4400a3:	mov    edx,0x6ff2573
  4400a8:	sub    edx,DWORD PTR ds:0x447d14
  4400ae:	push   0x4c
  4400b0:	add    eax,ecx
  4400b2:	push   0x446b40
  4400b7:	xor    edx,eax
  4400b9:	mov    ds:0x447d04,eax
  4400be:	push   0x0
  4400c0:	mov    DWORD PTR [esi],edx
  4400c2:	call   ebx
  4400c4:	mov    ecx,DWORD PTR ds:0x44709c
  4400ca:	movzx  eax,BYTE PTR [ecx+0xf]
  4400ce:	movzx  edx,BYTE PTR [ecx+0xd]
  4400d2:	movzx  ecx,WORD PTR [ecx+0x7]
  4400d6:	shl    eax,0x8
  4400d9:	add    eax,edx
  4400db:	shl    eax,0x10
  4400de:	add    eax,ecx
  4400e0:	mov    edx,0x6ff2573
  4400e5:	sub    edx,DWORD PTR ds:0x447d14
  4400eb:	mov    ds:0x447d04,eax
  4400f0:	xor    edx,eax
  4400f2:	mov    DWORD PTR [esi+0x4],edx
  4400f5:	mov    ecx,DWORD PTR ds:0x44709c
  4400fb:	add    ecx,0x10
  4400fe:	add    esi,0x8
  440101:	dec    edi
  440102:	mov    DWORD PTR ds:0x44709c,ecx
  440108:	jne    0x440090
  44010a:	mov    esi,DWORD PTR ds:0x447d1c
  440110:	mov    ecx,DWORD PTR ds:0x4470a0
  440116:	add    esi,0x6e0
  44011c:	mov    edi,0x1eb
  440121:	movzx  eax,BYTE PTR [ecx+0x7]
  440125:	movzx  edx,BYTE PTR [ecx+0x5]
  440129:	shl    eax,0x8
  44012c:	add    eax,edx
  44012e:	movzx  edx,BYTE PTR [ecx+0x2]
  440132:	movzx  ecx,BYTE PTR [ecx]
  440135:	push   0x0
  440137:	shl    eax,0x8
  44013a:	add    eax,edx
  44013c:	push   0xfd
  440141:	push   0x107
  440146:	shl    eax,0x8
  440149:	push   0x2c
  44014b:	add    eax,ecx
  44014d:	mov    edx,0xf7bd2282
  440152:	sub    edx,DWORD PTR ds:0x447d14
  440158:	push   0xb
  44015a:	mov    ds:0x447d04,eax
  44015f:	xor    edx,eax
  440161:	mov    eax,DWORD PTR [esp+0x24]
  440165:	push   0x0
  440167:	mov    DWORD PTR [esi],edx
  440169:	push   eax
  44016a:	add    esi,0x4
  44016d:	call   ebp
  44016f:	mov    ecx,DWORD PTR ds:0x4470a0
  440175:	add    ecx,0x8
  440178:	dec    edi
  440179:	mov    DWORD PTR ds:0x4470a0,ecx
  44017f:	jne    0x440121
  440181:	push   0xe8
  440186:	push   0x446b38
  44018b:	push   edi
  44018c:	call   ebx
  44018e:	mov    edx,DWORD PTR ds:0x447d1c
  440194:	mov    ecx,DWORD PTR ds:0x4470a4
  44019a:	add    edx,0xe8c
  4401a0:	mov    esi,0x265
  4401a5:	movzx  eax,BYTE PTR [ecx+0x6]
  4401a9:	movzx  edi,BYTE PTR [ecx+0x4]
  4401ad:	shl    eax,0x8
  4401b0:	add    eax,edi
  4401b2:	movzx  edi,BYTE PTR [ecx+0x2]
  4401b6:	movzx  ecx,BYTE PTR [ecx]
  4401b9:	shl    eax,0x8
  4401bc:	add    eax,edi
  4401be:	shl    eax,0x8
  4401c1:	add    eax,ecx
  4401c3:	mov    ecx,DWORD PTR ds:0x447d14
  4401c9:	xor    ecx,eax
  4401cb:	xor    ecx,0x9b6e7f12
  4401d1:	mov    ds:0x447d04,eax
  4401d6:	mov    DWORD PTR [edx],ecx
  4401d8:	mov    ecx,DWORD PTR ds:0x4470a4
  4401de:	add    ecx,0x8
  4401e1:	add    edx,0x4
  4401e4:	dec    esi
  4401e5:	mov    DWORD PTR ds:0x4470a4,ecx
  4401eb:	jne    0x4401a5
  4401ed:	mov    edx,DWORD PTR ds:0x447d1c
  4401f3:	mov    eax,DWORD PTR [esp+0x18]
  4401f7:	add    edx,0x1820
  4401fd:	add    eax,0x4
  440200:	mov    esi,0x5b
  440205:	movzx  ecx,BYTE PTR [eax+0x2]
  440209:	movzx  edi,BYTE PTR [eax]
  44020c:	shl    ecx,0x8
  44020f:	add    ecx,edi
  440211:	movzx  edi,WORD PTR [eax-0x2]
  440215:	shl    ecx,0x10
  440218:	add    ecx,edi
  44021a:	mov    DWORD PTR ds:0x447d04,ecx
  440220:	mov    edi,0x28501f8c
  440225:	sub    edi,DWORD PTR ds:0x447d14
  44022b:	add    eax,0x20
  44022e:	xor    edi,ecx
  440230:	mov    DWORD PTR [edx],edi
  440232:	movzx  ecx,BYTE PTR [eax-0x16]
  440236:	movzx  edi,BYTE PTR [eax-0x18]
  44023a:	shl    ecx,0x8
  44023d:	add    ecx,edi
  44023f:	movzx  edi,WORD PTR [eax-0x1a]
  440243:	shl    ecx,0x10
  440246:	add    ecx,edi
  440248:	mov    DWORD PTR ds:0x447d04,ecx
  44024e:	mov    edi,0x28501f8c
  440253:	sub    edi,DWORD PTR ds:0x447d14
  440259:	add    edx,0x10
  44025c:	xor    edi,ecx
  44025e:	mov    DWORD PTR [edx-0xc],edi
  440261:	movzx  ecx,BYTE PTR [eax-0xe]
  440265:	movzx  edi,BYTE PTR [eax-0x10]
  440269:	shl    ecx,0x8
  44026c:	add    ecx,edi
  44026e:	movzx  edi,WORD PTR [eax-0x12]
  440272:	shl    ecx,0x10
  440275:	add    ecx,edi
  440277:	mov    DWORD PTR ds:0x447d04,ecx
  44027d:	mov    edi,0x28501f8c
  440282:	sub    edi,DWORD PTR ds:0x447d14
  440288:	xor    edi,ecx
  44028a:	mov    DWORD PTR [edx-0x8],edi
  44028d:	movzx  ecx,BYTE PTR [eax-0x6]
  440291:	movzx  edi,BYTE PTR [eax-0x8]
  440295:	shl    ecx,0x8
  440298:	add    ecx,edi
  44029a:	movzx  edi,WORD PTR [eax-0xa]
  44029e:	shl    ecx,0x10
  4402a1:	add    ecx,edi
  4402a3:	mov    edi,0x28501f8c
  4402a8:	sub    edi,DWORD PTR ds:0x447d14
  4402ae:	mov    DWORD PTR ds:0x447d04,ecx
  4402b4:	xor    edi,ecx
  4402b6:	dec    esi
  4402b7:	mov    DWORD PTR [edx-0x4],edi
  4402ba:	jne    0x440205
  4402c0:	pop    edi
  4402c1:	pop    esi
  4402c2:	pop    ebp
  4402c3:	pop    ebx
  4402c4:	pop    ecx
  4402c5:	ret    
  4402c6:	int3   
  4402c7:	int3   
  4402c8:	int3   
  4402c9:	int3   
  4402ca:	int3   
  4402cb:	int3   
  4402cc:	int3   
  4402cd:	int3   
  4402ce:	int3   
  4402cf:	int3   
  4402d0:	jmp    FWORD PTR [ebx]
  4402d2:	bound  ecx,QWORD PTR [ecx+0xde819f]
  4402d8:	call   DWORD PTR [esp+ecx*4]
  4402db:	(bad)  
  4402dc:	jmp    FWORD PTR [ebx]
  4402de:	(bad)  
  4402df:	(bad)  
  4402e0:	push   DWORD PTR [edx-0x2f]
  4402e3:	jmp    FWORD PTR [ecx]
  4402e5:	fcmovnb st,st(7)
  4402e7:	(bad)  
  4402e8:	dec    DWORD PTR [ebx]
  4402ea:	push   cs
  4402eb:	add    bh,bh
  4402ed:	mov    dl,0xff
  4402ef:	(bad)  
  4402f0:	jmp    FWORD PTR [edi+0x12a200df]
  4402f6:	adc    al,BYTE PTR [eax]
  4402f8:	add    BYTE PTR [ebp-0x6f],al
  4402fb:	add    ah,cl
  4402fd:	test   bh,bh
  4402ff:	(bad)  
  440300:	call   edx
  440302:	inc    ebx
  440303:	dec    ecx
  440305:	shr    BYTE PTR [ebx-0x56150001],1
  44030b:	dec    esp
  44030d:	mov    esp,0x16ffff83
  440312:	in     al,0x0
  440314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440315:	xchg   ebp,eax
  440316:	add    BYTE PTR [eax],al
  440318:	int3   
  440319:	mov    eax,DWORD PTR [edx-0x1]
  44031c:	and    DWORD PTR [esi+0x2300ccff],0x40
  440323:	call   FWORD PTR [esp+eax*1+0x19]
  440327:	add    bh,bh
  440329:	rcr    DWORD PTR [edx-0x7d],1
  44032c:	add    ah,bh
  44032e:	inc    DWORD PTR [eax]
  440330:	call   DWORD PTR [esi-0x3b]
  440333:	and    edx,0xffffffc5
  440336:	nop
  440337:	mov    edi,edi
  440339:	cmp    BYTE PTR [ebp+0xdf0000],al
  44033f:	dec    esp
  440341:	mov    dh,0xc3
  440343:	dec    DWORD PTR [ebp+eiz*1-0xff34]
  44034a:	test   ah,0xff
  44034d:	sub    al,0x0
  44034f:	add    bh,bh
  440351:	fwait
  440352:	sar    bh,cl
  440354:	jmp    0x4402e8
  440356:	enter  0xffff,0x11
  44035a:	mov    DWORD PTR [ebx+0xe200],0xffb49100
  440364:	cmp    edi,edi
  440366:	stc    
  440367:	inc    DWORD PTR [eax]
  440369:	sbb    al,0x96
  44036b:	inc    DWORD PTR [eax]
  44036d:	push   ebp
  44036e:	add    bh,bh
  440370:	add    BYTE PTR [edi],ah
  440372:	mov    esp,0xd9719c89
  440377:	add    bh,bh
  440379:	enter  0xff9b,0x0
  44037d:	pop    ecx
  44037e:	or     esp,0x0
  440381:	sbb    bh,BYTE PTR [ebx+eax*4+0x5d2733]
  440388:	push   DWORD PTR [ebp-0x7633ff2c]
  44038e:	inc    DWORD PTR [eax]
  440390:	adc    DWORD PTR [eax],0x2e
  440393:	xor    DWORD PTR [esi],0xfffffffc
  440396:	add    bh,bh
  440398:	inc    DWORD PTR [edi+ecx*2]
  44039b:	add    BYTE PTR [eax],al
  44039d:	or     al,BYTE PTR [eax]
  44039f:	(bad)  
  4403a0:	push   DWORD PTR [esi-0x5fbe33a1]
  4403a6:	pop    edi
  4403a7:	inc    DWORD PTR [eax]
  4403a9:	retf   0xff44
  4403ac:	add    BYTE PTR ds:0xf38983cc,bl
  4403b2:	add    DWORD PTR es:[edi+0x1e],0x50
  4403b7:	add    bh,bh
  4403b9:	cmp    ebp,DWORD PTR [edi-0x1]
  4403bc:	add    BYTE PTR [ebx+eax*4-0x7d],dl
  4403c0:	call   DWORD PTR ds:0x2b5f00fe
  4403c6:	jg     0x4403c7
  4403c8:	(bad)  
  4403c9:	mov    ebp,0x7f000072
  4403ce:	mov    edi,edi
  4403d0:	jmp    FWORD PTR [ebx+0x7]
  4403d3:	jmp    FWORD PTR [edx-0x5c32]
  4403d9:	jo     0x440378
  4403db:	add    bh,bh
  4403dd:	test   eax,0x2d00ff00
  4403e2:	sub    al,0x83
  4403e4:	out    dx,al
  4403e5:	ja     0x440416
  4403e7:	dec    esp
  4403e9:	push   0xe183ff9a
  4403ee:	(bad)  
  4403ef:	(bad)  
  4403f0:	inc    DWORD PTR [ecx+0xbb4ccf4]
  4403f6:	in     al,dx
  4403f7:	inc    DWORD PTR [ebx-0xa378]
  4403fd:	cli    
  4403fe:	add    bh,bh
  440400:	jmp    DWORD PTR [esi+eax*1]
  440403:	mov    ebx,eax
  440405:	jmp    0xb448ded
  44040a:	push   esp
  44040b:	add    ah,cl
  44040d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44040e:	inc    DWORD PTR [ebx-0x7c101801]
  440414:	adc    dh,BYTE PTR [esi+0x6ff8398]
  44041a:	xchg   ebp,eax
  44041b:	(bad)  
  44041c:	(bad)  
  44041d:	jl     0x44041e
  44041f:	(bad)  
  440420:	push   DWORD PTR [eax-0x2ddd3376]
  440426:	mov    esp,0xf52cff00
  44042b:	cmp    edi,0xffffffed
  44042e:	add    DWORD PTR [eax],0xffffffff
  440431:	cmp    ah,BYTE PTR [edi+0x0]
  440434:	(bad)  
  440435:	mov    edx,0x1fffffdb
  44043a:	mov    ch,0x0
  44043c:	int3   
  44043d:	aaa    
  44043e:	add    bh,bh
  440440:	int3   
  440441:	cwde   
  440442:	rol    DWORD PTR [eax],0x9d
  440445:	and    eax,0x2900008d
  44044a:	repnz add BYTE PTR [ecx+0x839f],cl
  440451:	jns    0x4404b9
  440453:	int3   
  440454:	sbb    bl,cl
  440456:	out    0x0,eax
  440458:	(bad)  
  440459:	(bad)  
  44045a:	sub    bh,bh
  44045c:	dec    DWORD PTR [edx-0x19010000]
  440462:	or     BYTE PTR [eax],al
  440464:	std    
  440465:	jbe    0x4403ed
  440467:	cmp    edi,0x4a
  44046a:	pop    esi
  44046b:	add    bh,bh
  44046d:	cdq    
  44046e:	dec    esp
  440470:	dec    esi
  440472:	jbe    0x440474
  440474:	std    
  440475:	hlt    
  440476:	dec    edx
  440477:	dec    esp
  440479:	jb     0x4404c3
  44047b:	inc    DWORD PTR [eax]
  44047d:	dec    ecx
  44047e:	add    bh,bh
  440480:	jmp    FWORD PTR [ebp-0x39affa2]
  440486:	sub    ah,cl
  440488:	int3   
  440489:	or     ebp,DWORD PTR [edi-0x90100]
  44048f:	add    BYTE PTR [eax],al
  440491:	xor    eax,0x79abff61
  440496:	push   esi
  440497:	add    BYTE PTR [eax],al
  440499:	lahf   
  44049a:	adc    eax,0xff9089ff
  44049f:	(bad)  
  4404a0:	dec    DWORD PTR [edi]
  4404a2:	je     0x4404a3
  4404a4:	sub    eax,esp
  4404a6:	jmp    0x39705aa
  4404ab:	add    bh,bh
  4404ad:	sahf   
  4404ae:	add    BYTE PTR [eax],al
  4404b0:	call   eax
  4404b2:	dec    eax
  4404b3:	call   DWORD PTR [eax-0xffc3d9]
  4404b9:	je     0x4404d1
  4404bb:	add    BYTE PTR [ebx+0xff0075],al
  4404c1:	jne    0x44053b
  4404c3:	(bad)  
  4404c4:	mov    eax,0xffffa643
  4404c9:	mov    al,ds:0xaeffff37
  4404ce:	(bad)  
  4404cf:	inc    DWORD PTR [eax]
  4404d1:	stos   BYTE PTR es:[edi],al
  4404d2:	inc    edx
  4404d3:	inc    DWORD PTR [eax-0xff946d]
  4404d9:	daa    
  4404da:	test   edi,edi
  4404dc:	int3   
  4404dd:	pop    ecx
  4404de:	add    DWORD PTR [eax],0xffffffff
  4404e1:	xchg   edi,eax
  4404e2:	mov    bh,bh
  4404e4:	dec    eax
  4404e5:	retf   0x83e8
  4404e8:	add    dl,dh
  4404ea:	xor    bh,bh
  4404ec:	inc    DWORD PTR [edi+0x0]
  4404ef:	add    BYTE PTR [eax],al
  4404f1:	cmp    eax,0x9b9b89c8
  4404f6:	(bad)  
  4404f7:	(bad)  
  4404f8:	inc    DWORD PTR [eax+eiz*4+0x8ecc00]
  4404ff:	or     DWORD PTR [ecx-0x4b00d23f],0x21
  440506:	loop   0x44048b
  440508:	add    BYTE PTR [ecx+0x74],dl
  44050b:	add    BYTE PTR [ebx-0xfffffc],al
  440511:	push   edi
  440512:	sar    edi,cl
  440514:	repnz cs inc edx
  440517:	add    DWORD PTR [eax],0x61
  44051a:	out    0x83,eax
  44051c:	call   DWORD PTR [eax+eax*1]
  44051f:	int3   
  440520:	jmp    DWORD PTR [eax]
  440522:	sahf   
  440523:	int3   
  440524:	xchg   edi,eax
  440525:	leave  
  440526:	jl     0x440527
  440528:	add    BYTE PTR ds:0x4affff83,al
  44052e:	(bad)  
  44052f:	(bad)  
  440530:	call   FWORD PTR [edi]
  440532:	or     BYTE PTR [eax],al
  440534:	sbb    BYTE PTR [ebp-0xb00000b],0xd4
  44053b:	(bad)  
  44053c:	call   FWORD PTR [eax-0x49000100]
  440542:	push   0xffffffff
  440544:	xor    DWORD PTR [esi],edx
  440546:	pusha  
  440547:	cmp    edi,0xffffffcc
  44054a:	push   ebx
  44054b:	inc    DWORD PTR [ebx-0x41]
  440551:	pop    es
  440552:	scas   al,BYTE PTR es:[edi]
  440553:	int3   
  440554:	adc    edi,DWORD PTR [eax-0x380076eb]
  44055a:	call   0xff:0x1400ff
  440561:	push   ebx
  440562:	mov    al,0x0
  440564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440565:	in     al,0xf0
  440567:	mov    edi,edi
  440569:	outs   dx,DWORD PTR ds:[esi]
  44056a:	mov    dh,0x0
  44056c:	int3   
  44056d:	fild   WORD PTR [ebx+0x11f083ff]
  440573:	dec    DWORD PTR [esi-0x40]
  440576:	add    edi,edi
  440578:	jmp    FWORD PTR [ecx]
  44057a:	bound  eax,QWORD PTR [eax]
  44057c:	mov    eax,ecx
  44057e:	add    BYTE PTR [eax],al
  440580:	add    ch,ch
  440582:	int3   
  440583:	sbb    DWORD PTR [eax-0xa450],0x1e
  44058a:	(bad)  
  44058b:	int3   
  44058c:	call   DWORD PTR [ebx-0x34]
  44058f:	inc    DWORD PTR [eax]
  440591:	cld    
  440592:	adc    eax,0x2e9f4d00
  440597:	add    bh,bh
  440599:	test   eax,0xed838392
  44059e:	mov    DWORD PTR [eax],eax
  4405a0:	push   DWORD PTR [edi-0x6b7a7cef]
  4405a6:	outs   dx,DWORD PTR ds:[esi]
  4405a7:	inc    DWORD PTR [eax]
  4405a9:	inc    ebx
  4405aa:	stos   BYTE PTR es:[edi],al
  4405ab:	add    DWORD PTR [eax],0xffffffca
  4405ae:	(bad)  
  4405af:	inc    DWORD PTR [ebx-0x58007670]
  4405b5:	daa    
  4405b6:	iret   
  4405b7:	or     esp,0x2
  4405ba:	cmp    edi,edi
  4405bc:	add    BYTE PTR [eax+eax*1+0x7edaff00],bh
  4405c3:	sub    DWORD PTR [ebx-0x3a],0xffffffc4
  4405c7:	add    BYTE PTR [eax],al
  4405c9:	inc    esi
  4405ca:	(bad)  
  4405cd:	mov    bh,bh
  4405cf:	(bad)  
  4405d0:	call   ebp
  4405d2:	call   0x8300:0x31e53eff
  4405d9:	or     BYTE PTR [edi],0xff
  4405dc:	dec    edx
  4405de:	inc    DWORD PTR [eax]
  4405e0:	jmp    FWORD PTR [edx-0x2df400aa]
  4405e6:	xor    DWORD PTR [ebx-0x603201],eax
  4405ec:	or     DWORD PTR [ebp+0x4883ffff],0xffffffac
  4405f3:	add    BYTE PTR [ebx-0x7cac13],al
  4405f9:	mov    ebx,0x74ffff7a
  4405fe:	add    bh,bh
  440600:	add    BYTE PTR [edi+ebp*1-0x1],al
  440604:	xchg   edx,eax
  440605:	sbb    ch,BYTE PTR [ebx]
  440607:	add    BYTE PTR [ebx+0xff359c],al
  44060d:	adc    bh,bh
  44060f:	add    BYTE PTR [eax],al
  440611:	fcomip st,st(6)
  440613:	jmp    FWORD PTR [eax]
  440615:	lahf   
  440616:	mov    al,ds:0x2d85cc89
  44061b:	mov    DWORD PTR [eax],eax
  44061d:	sub    al,0x0
  44061f:	(bad)  
  440620:	dec    DWORD PTR [edi]
  440622:	sub    bh,bh
  440624:	cmp    ecx,DWORD PTR [esi-0x5cff0075]
  44062a:	ret    0x83ff
  44062d:	mov    bh,bh
  44062f:	add    BYTE PTR [eax],al
  440631:	(bad)  
  440632:	mov    al,BYTE PTR [eax]
  440634:	add    DWORD PTR [edi+esi*4-0x7d],eax
  440638:	adc    ebp,0xffffff82
  44063b:	(bad)  
  44063c:	call   DWORD PTR [esi+0x4600ccff]
  440642:	or     DWORD PTR [eax],eax
  440644:	jns    0x440612
  440646:	ret    0x0
  440649:	lods   al,BYTE PTR ds:[esi]
  44064a:	jne    0x44064c
  44064c:	(bad)  
  44064d:	mov    ebp,0x68ff83ff
  440652:	sbb    edi,edi
  440654:	cs icebp 
  440656:	and    BYTE PTR [ebx-0xabc87d],al
  44065c:	sub    DWORD PTR [ebp+0x0],0xffffffff
  440660:	inc    DWORD PTR [ecx+ebp*2-0x1f79f601]
  440667:	mov    esp,ecx
  440669:	div    BYTE PTR [ebx]
  44066b:	add    ah,cl
  44066d:	xchg   ebx,eax
  44066e:	(bad)  
  44066f:	dec    esp
  440671:	push   edx
  440672:	fadd   QWORD PTR [eax]
  440674:	call   0xa8fa:0x89ffa7ce
  44067b:	(bad)  
  44067c:	inc    DWORD PTR [ecx]
  44067e:	inc    DWORD PTR [ebx-0x22f901]
  440684:	shr    BYTE PTR [edi],0x6c
  440687:	add    bh,bh
  440689:	cmp    DWORD PTR [eax],edi
  44068b:	add    bh,bh
  44068d:	cmc    
  44068e:	inc    DWORD PTR [eax]
  440690:	(bad)  
  440691:	call   0x1bb89a2
  440696:	xchg   ebx,eax
  440697:	cmp    edi,0x3f
  44069a:	push   es
  44069b:	add    bh,bh
  44069d:	push   ecx
  44069e:	inc    DWORD PTR [ebx-0x6b9601]
  4406a4:	mov    dl,0x7b
  4406a6:	inc    esp
  4406a7:	dec    esp
  4406a9:	xlat   BYTE PTR ds:[ebx]
  4406aa:	dec    edi
  4406ab:	add    bh,bh
  4406ad:	add    BYTE PTR [ebx-0x3cac0001],0xff
  4406b4:	or     ch,al
  4406b6:	stos   DWORD PTR es:[edi],eax
  4406b7:	add    BYTE PTR [ebx-0x985c],al
  4406bd:	adc    DWORD PTR [ebx-0xc6f7d00],eax
  4406c3:	mov    DWORD PTR ds:0xcc007215,ebp
  4406c9:	out    dx,eax
  4406ca:	pushf  
  4406cb:	add    BYTE PTR [eax],al
  4406cd:	stos   DWORD PTR es:[edi],eax
  4406ce:	(bad)  
  4406cf:	inc    DWORD PTR [eax]
  4406d1:	gs ins BYTE PTR es:[edi],dx
  4406d3:	adc    DWORD PTR [ebx],0xffffffd3
  4406d6:	sar    bh,1
  4406d8:	(bad)  
  4406d9:	jl     0x4406b4
  4406db:	dec    esp
  4406dd:	sbb    eax,0x80000083
  4406e2:	push   0xf7b59800
  4406e7:	add    bh,bh
  4406e9:	jmp    0x37cdd3b0
  4406ee:	(bad)  
  4406ef:	(bad)  
  4406f0:	(bad)  
  4406f1:	jp     0x44071a
  4406f3:	dec    ecx
  4406f5:	mov    eax,0x6bffcc47
  4406fa:	les    eax,FWORD PTR [eax]
  4406fc:	and    ebp,0xffffffff
  4406ff:	inc    DWORD PTR [eax]
  440701:	inc    ebx
  440702:	or     BYTE PTR [ebx-0x7c095543],al
  440708:	mov    ebx,esi
  44070a:	xor    cl,BYTE PTR [ecx-0x767cba34]
  440710:	inc    DWORD PTR [ebp-0x15b700b4]
  440716:	sub    eax,0xb6cf0000
  44071b:	inc    DWORD PTR [eax]
  44071d:	or     BYTE PTR [eax],al
  44071f:	(bad)  
  440720:	call   DWORD PTR [edx]
  440722:	cld    
  440723:	call   DWORD PTR [ecx]
  440725:	xchg   BYTE PTR ds:0xe109ff83,dh
  44072b:	inc    DWORD PTR [ebx-0x7c7ce1]
  440731:	pop    edi
  440732:	jmp    0x8389:0x147ec489
  440739:	fwait
  44073a:	mov    DWORD PTR [ebx+0xf3cc],0xffbab800
  440744:	fwait
  440745:	int3   
  440746:	mov    cl,0xff
  440748:	and    DWORD PTR [ecx+ebx*2],0xffffff89
  44074c:	call   DWORD PTR [edx]
  44074e:	(bad)  
  44074f:	(bad)  
  440750:	call   DWORD PTR [esi]
  440752:	xor    eax,DWORD PTR [eax]
  440754:	pop    edi
  440755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440757:	inc    DWORD PTR [ebx-0x76ffd592]
  44075d:	adc    ah,cl
  44075f:	(bad)  
  440760:	push   DWORD PTR [esp+ebp*8-0x1]
  440764:	mov    ds:0xccff2f8b,eax
  440769:	mov    eax,ds:0xd983ff3d
  44076e:	dec    DWORD PTR [ecx-0x7c550200]
  440774:	sar    edx,cl
  440776:	mov    esi,0x9dc2ccff
  44077b:	dec    esp
  44077d:	out    0xff,al
  44077f:	mov    DWORD PTR [eax],eax
  440781:	test   eax,0x31aa8983
  440786:	stos   BYTE PTR es:[edi],al
  440787:	add    bh,bh
  440789:	and    eax,0xa0ffff37
  44078e:	add    bh,bh
  440790:	(bad)  
  440791:	jge    0x440716
  440793:	cmp    esp,0x68
  440796:	(bad)  
  440798:	int3   
  440799:	mov    DWORD PTR [edi+edi*8+0x0],esp
  44079d:	inc    eax
  44079e:	add    BYTE PTR [eax],al
  4407a0:	add    bh,al
  4407a2:	pop    edx
  4407a3:	jmp    FWORD PTR [eax-0x7633f3d3]
  4407a9:	xchg   edi,eax
  4407aa:	imul   ecx,esp,0x0
  4407ad:	pushf  
  4407ae:	(bad)  
  4407af:	inc    DWORD PTR [eax]
  4407b1:	daa    
  4407b2:	add    DWORD PTR [eax],0x7
  4407b5:	jae    0x4407ab
  4407b7:	inc    DWORD PTR [ebx-0xff8e7e]
  4407bd:	stos   DWORD PTR es:[edi],eax
  4407be:	add    BYTE PTR [eax],al
  4407c0:	and    DWORD PTR [ebx-0x6b],0xffffffff
  4407c4:	inc    ecx
  4407c5:	bndldx bnd0,[eax]
  4407c8:	dec    edi
  4407ca:	lods   eax,DWORD PTR ds:[esi]
  4407cb:	inc    DWORD PTR [eax]
  4407cd:	mov    cl,0xff
  4407cf:	cmp    edi,0xffffffd8
  4407d2:	jb     0x4407d4
  4407d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4407d5:	fcmove st,st(2)
  4407d7:	inc    DWORD PTR [eax]
  4407d9:	out    0xc8,al
  4407db:	(bad)  
  4407dc:	jmp    DWORD PTR [esi+0x410000ff]
  4407e2:	push   ds
  4407e3:	add    BYTE PTR [esi+0x7f],dh
  4407e6:	adc    ecx,DWORD PTR [ecx+0x2c6ff]
  4407ec:	int3   
  4407ed:	call   0x6e:0x25ff0000
  4407f4:	lahf   
  4407f5:	inc    esp
  4407f6:	cli    
  4407f7:	dec    DWORD PTR [ecx-0xb24e]
  4407fd:	cmp    al,0x0
  4407ff:	add    ah,cl
  440801:	jb     0x440840
  440803:	add    al,cl
  440805:	adc    bh,ah
  440807:	add    DWORD PTR [eax],0xffffffd6
  44080a:	mov    bh,0xcc
  44080c:	inc    DWORD PTR [eax-0x1]
  44080f:	add    BYTE PTR [eax],al
  440811:	xchg   esi,eax
  440812:	cmp    al,0x0
  440814:	sub    ebx,DWORD PTR [esi+0x60ffffb0]
  44081a:	arpl   WORD PTR [ebx-0x3333b400],ax
  440820:	push   ebp
  440822:	mov    ebx,0x7e1ce083
  440827:	mov    edi,edi
  440829:	ss fwait
  44082b:	add    BYTE PTR [eax],al
  44082d:	fadd   QWORD PTR [eax]
  44082f:	cmp    edi,0x18
  440832:	mov    es,WORD PTR [eax]
  440834:	mul    BYTE PTR [esp+ecx*8-0x22200001]
  44083b:	cmp    edi,0x38
  44083e:	int3   
  44083f:	inc    DWORD PTR [eax]
  440841:	out    dx,al
  440842:	push   es
  440843:	push   DWORD PTR [edx+0x43]
  440846:	das    
  440847:	(bad)  
  440848:	dec    DWORD PTR [edi+edi*2+0x9800ff]
  44084f:	(bad)  
  440850:	push   DWORD PTR [ebx]
  440852:	mov    eax,DWORD PTR [ebx-0xb85934]
  440858:	inc    ebp
  44085a:	jmp    0xff6907e2
  44085f:	dec    esp
  440861:	repz iret 
  440863:	add    BYTE PTR [eax],ch
  440865:	fsub   DWORD PTR [ebx-0x6cd8ff01]
  44086b:	int3   
  44086c:	add    BYTE PTR [edx],ah
  44086e:	add    BYTE PTR [eax],al
  440870:	(bad)  
  440871:	jg     0x4408b9
  440873:	mov    DWORD PTR [edi],ebx
  440875:	(bad)  
  440876:	lahf   
  440877:	(bad)  
  440878:	call   DWORD PTR [esi-0x2d]
  44087b:	mov    esp,ecx
  44087d:	mov    edi,0x2a00ffcc
  440882:	add    DWORD PTR [ebx-0x33cb2a69],0xccc4c483
  44088c:	jmp    DWORD PTR [ebx+eax*4]
  44088f:	mov    DWORD PTR [eax],eax
  440891:	mov    eax,ds:0x3e18ff39
  440896:	loop   0x440898
  440898:	push   eax
  44089a:	aad    0xcc
  44089c:	inc    DWORD PTR [edx-0x6500007d]
  4408a2:	ret    
  4408a3:	jmp    FWORD PTR [edi+0x59ca]
  4408a9:	rcr    ebp,cl
  4408ab:	add    bh,bh
  4408ad:	add    edi,edi
  4408af:	add    BYTE PTR [eax],al
  4408b1:	or     BYTE PTR [edx-0x1],0x18
  4408b5:	shl    bh,cl
  4408b7:	add    bh,bh
  4408b9:	out    0xcc,al
  4408bb:	inc    DWORD PTR [eax]
  4408bd:	fadd   QWORD PTR [ebx+0x42a4ffff]
  4408c3:	adc    DWORD PTR [edx-0x58],0xffffffb7
  4408c7:	inc    DWORD PTR [eax]
  4408c9:	and    eax,0x8affffb3
  4408ce:	add    BYTE PTR [ebx-0x33ea0a00],al
  4408d4:	cli    
  4408d5:	dec    esi
  4408d6:	addr16 (bad) 
  4408d8:	push   DWORD PTR [edx+0x7e]
  4408db:	add    BYTE PTR [eax],al
  4408dd:	push   ds
  4408de:	int3   
  4408df:	mov    DWORD PTR [eax],eax
  4408e1:	mov    dh,0x8a
  4408e3:	jmp    DWORD PTR [eax+eax*1]
  4408e6:	or     bh,bh
  4408e8:	adc    DWORD PTR [ebx+0x4fcc895c],0xffffffff
  4408ef:	add    DWORD PTR [eax],0xffffffd2
  4408f2:	retf   0x7aff
  4408f5:	jmp    0x8960:0x20ff0058
  4408fc:	dec    DWORD PTR [eax-0x7a000100]
  440902:	xchg   edx,eax
  440903:	add    DWORD PTR [edi],0xffffffb9
  440906:	lea    eax,[eax]
  440908:	add    BYTE PTR [edx-0x3c00ff0e],cl
  44090e:	add    BYTE PTR [ecx-0xc3ce01],cl
  440914:	jns    0x44091f
  440916:	popa   
  440917:	(bad)  
  440918:	jmp    esi
  44091a:	imul   ecx,esp,0xff00cfff
  440920:	push   DWORD PTR [ebx]
  440922:	and    DWORD PTR [eax],eax
  440924:	jae    0x44097d
  440926:	xchg   ecx,eax
  440927:	add    bh,bh
  440929:	arpl   sp,sp
  44092b:	mov    esp,ecx
  44092d:	fcmovne st,st(4)
  44092f:	dec    esp
  440931:	mov    edx,0x30cfff47
  440936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440937:	add    BYTE PTR [ebx-0x7cff0634],al
  44093d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44093e:	add    bh,bh
  440940:	mov    ebx,edi
  440942:	xchg   ebp,eax
  440943:	jmp    DWORD PTR [edx-0x4b]
  440946:	test   bh,bh
  440948:	call   DWORD PTR [esi+0x31]
  44094b:	inc    DWORD PTR [eax]
  44094d:	pushf  
  44094e:	inc    DWORD PTR [eax]
  440950:	add    BYTE PTR [edi],dl
  440952:	inc    esi
  440953:	mov    DWORD PTR [ebx],edx
  440955:	jmp    0x26c78d58
  44095a:	adc    al,BYTE PTR [eax]
  44095c:	dec    DWORD PTR [ebx-0x34]
  44095f:	inc    DWORD PTR [ebx-0xa00a77d]
  440965:	loopne 0x44091d
  440967:	inc    DWORD PTR [eax]
  440969:	mov    ss,WORD PTR [edi]
  44096b:	cmp    edi,0xffffffcd
  44096e:	int3   
  44096f:	add    DWORD PTR [eax],0x41
  440972:	inc    esi
  440973:	add    BYTE PTR [esi-0xb675],bl
  440979:	jmp    0x7438d61
  44097e:	add    bh,bh
  440980:	add    bh,dl
  440982:	dec    edi
  440983:	add    BYTE PTR [edi-0x7e7f],al
  440989:	mov    dh,0xe5
  44098b:	inc    DWORD PTR [eax]
  44098d:	mov    ds:0x820083ff,eax
  440992:	jae    0x440993
  440994:	call   0xc7b8c1
  440999:	xchg   edx,eax
  44099a:	push   ebp
  44099b:	(bad)  
  44099c:	dec    edi
  44099e:	inc    DWORD PTR [eax]
  4409a0:	jmp    FWORD PTR [edx+0x7c]
  4409a3:	int3   
  4409a4:	cmp    BYTE PTR [edi],cl
  4409a6:	xchg   ebx,eax
  4409a7:	(bad)  
  4409a8:	inc    DWORD PTR [ebp-0x657cff36]
  4409ae:	(bad)  
  4409af:	inc    DWORD PTR [eax]
  4409b1:	cs xchg esp,eax
  4409b3:	add    BYTE PTR [esi],ah
  4409b5:	ins    BYTE PTR es:[edi],dx
  4409b6:	out    dx,eax
  4409b7:	add    bh,bh
  4409b9:	inc    esi
  4409ba:	(bad)  
  4409bb:	int3   
  4409bc:	call   FWORD PTR [ebx+0x240083ff]
  4409c2:	jne    0x4409c3
  4409c4:	xlat   BYTE PTR ds:[ebx]
  4409c5:	xchg   BYTE PTR [eax+0x20d0ffff],ah
  4409cb:	add    BYTE PTR [eax],al
  4409cd:	test   BYTE PTR [eax],0x83
  4409d0:	call   FWORD PTR [ebp+ecx*8+0x6e95a183]
  4409d7:	add    bh,bh
  4409d9:	dec    esi
  4409da:	dec    eax
  4409db:	add    bh,bh
  4409dd:	aas    
  4409de:	(bad)  
  4409df:	(bad)  
  4409e0:	push   DWORD PTR [ecx-0x61d8ffc0]
  4409e6:	cmp    bh,bh
  4409e8:	or     DWORD PTR [ecx+0x28],0xffffff89
  4409ec:	call   FWORD PTR [esi-0x72000001]
  4409f2:	push   esp
  4409f3:	add    BYTE PTR [eax-0x76f3a6],dh
  4409f9:	fnstcw WORD PTR [ecx]
  4409fb:	inc    DWORD PTR [eax]
  4409fd:	xor    eax,0xe0ffffff
  440a02:	adc    DWORD PTR [eax],eax
  440a04:	retf   0xeb9e
  440a07:	inc    DWORD PTR [eax]
  440a09:	jl     0x4409f9
  440a0b:	(bad)  
  440a0c:	push   ebp
  440a0e:	(bad)  
  440a0f:	inc    DWORD PTR [eax]
  440a11:	and    eax,0xf75e893d
  440a16:	mov    BYTE PTR [eax],al
  440a18:	xor    DWORD PTR [eax],0xc
  440a1b:	int3   
  440a1c:	(bad)  
  440a1d:	cmp    edi,edi
  440a1f:	add    BYTE PTR [ecx-0x51ffcb8f],cl
  440a25:	sti    
  440a26:	sbb    DWORD PTR [ecx-0x8ff501],ecx
  440a2c:	inc    DWORD PTR [esi]
  440a2e:	cmp    edi,0x0
  440a31:	mov    DWORD PTR [edi],ecx
  440a33:	add    BYTE PTR [ebp-0xdae1],al
  440a39:	aad    0x91
  440a3b:	cmp    edi,0x6
  440a3e:	mov    edi,edi
  440a40:	add    BYTE PTR [ebp+0x3e],dl
  440a43:	add    BYTE PTR ds:0xff83e9b3,ch
  440a49:	mov    dl,0x5d
  440a4b:	inc    DWORD PTR [eax]
  440a4d:	or     DWORD PTR [eax],eax
  440a4f:	add    BYTE PTR [ebx+0x76ff4ba7],al
  440a55:	popa   
  440a56:	rol    BYTE PTR [eax],1
  440a58:	sbb    DWORD PTR [eax-0x13],0x0
  440a5c:	add    BYTE PTR [edx+0x0],bh
  440a5f:	inc    DWORD PTR [eax]
  440a61:	add    esi,0xe3065bff
  440a67:	(bad)  
  440a68:	push   DWORD PTR [ebx]
  440a6a:	jbe    0x440a6c
  440a6c:	(bad)  
  440a6d:	jnp    0x440a6f
  440a6f:	add    DWORD PTR [eax],0x3
  440a72:	or     al,0x0
  440a74:	or     eax,0x8300ad76
  440a79:	mov    ds:0xa500896f,eax
  440a7e:	inc    DWORD PTR [ebx-0x39ea01]
  440a84:	popf   
  440a85:	mov    eax,ds:0xa9ffff64
  440a8a:	(bad)  
  440a8b:	(bad)  
  440a8c:	dec    DWORD PTR [ecx-0x1]
  440a8f:	(bad)  
  440a90:	(bad)  
  440a91:	mov    edx,0x409e8963
  440a96:	stos   BYTE PTR es:[edi],al
  440a97:	add    bh,bh
  440a99:	or     edx,esp
  440a9b:	int3   
  440a9c:	call   DWORD PTR [eax+0x2affff00]
  440aa2:	adc    al,0xff
  440aa4:	add    eax,DWORD PTR [edi]
  440aa6:	pop    ecx
  440aa7:	(bad)  
  440aa8:	inc    eax
  440aaa:	aaa    
  440aab:	(bad)  
  440aac:	call   DWORD PTR [ebx+eax*4]
  440aaf:	int3   
  440ab0:	call   ebp
  440ab2:	js     0x440ab3
  440ab4:	scas   al,BYTE PTR es:[edi]
  440ab5:	xchg   DWORD PTR [edx],ebp
  440ab7:	or     DWORD PTR [ecx-0x334a00],0x67
  440abe:	mov    DWORD PTR [eax],eax
  440ac0:	(bad)  
  440ac1:	jmp    0xdaf80b45
  440ac6:	outs   dx,DWORD PTR ds:[esi]
  440ac7:	mov    edi,edi
  440ac9:	jg     0x440aec
  440acb:	(bad)  
  440acc:	jmp    FWORD PTR [ebp-0x77]
  440acf:	inc    DWORD PTR [eax]
  440ad1:	clc    
  440ad2:	lahf   
  440ad3:	or     DWORD PTR [edx-0x23],0x28
  440ad7:	dec    DWORD PTR [ecx-0x6cfe]
  440add:	sti    
  440ade:	add    BYTE PTR [eax],al
  440ae0:	(bad)  
  440ae1:	mov    esi,0xb9378929
  440ae6:	jle    0x440ae8
  440ae8:	jmp    DWORD PTR [eax+0x3]
  440aeb:	add    DWORD PTR [ebx-0x338a],0x2a
  440af2:	push   ebp
  440af3:	inc    edx
  440af5:	call   0xffa1:0xcaffff6a
  440afc:	adc    DWORD PTR [edi+edi*8-0x7d],0xffffff83
  440b01:	mov    edi,0x75ba0001
  440b06:	lahf   
  440b07:	add    DWORD PTR [eax],0xffffffc6
  440b0a:	cwde   
  440b0b:	(bad)  
  440b0c:	jmp    DWORD PTR [edx-0x1]
  440b0f:	add    BYTE PTR [eax],al
  440b11:	lods   eax,DWORD PTR fs:[esi]
  440b13:	add    BYTE PTR [ebx],dh
  440b15:	imul   esp,DWORD PTR [esi+0x36ae89ff],0x8323ffff
  440b1f:	mov    DWORD PTR [eax],eax
  440b21:	pop    ecx
  440b22:	(bad)  
  440b23:	(bad)  
  440b24:	cmp    al,0xba
  440b26:	mov    eax,0x200dffff
  440b2b:	inc    DWORD PTR [eax]
  440b2d:	in     eax,0x83
  440b2f:	(bad)  
  440b30:	call   esi
  440b32:	add    eax,0xc70872ff
  440b37:	dec    DWORD PTR [ecx-0xff1e08]
  440b3d:	and    edi,edi
  440b3f:	add    BYTE PTR [ebx-0x38ff998b],al
  440b45:	push   ebp
  440b46:	jg     0x440b47
  440b48:	call   DWORD PTR [esi-0x32ffff77]
  440b4e:	add    BYTE PTR [ebx+0xb14989],al
  440b54:	in     al,0x19
  440b56:	and    eax,0xff578900
  440b5b:	add    ah,cl
  440b5d:	(bad)  
  440b5e:	inc    DWORD PTR [ebx+0x263a00]
  440b64:	cmp    al,0x21
  440b66:	lods   eax,DWORD PTR ds:[esi]
  440b67:	add    BYTE PTR [ebx-0xdfc4],al
  440b6d:	xchg   edx,eax
  440b6e:	int3   
  440b6f:	int3   
  440b70:	int3   
  440b71:	pop    ebx
  440b72:	mov    ds:0x3412b00,eax
  440b77:	cmp    edi,0x77
  440b7a:	je     0x440b7c
  440b7c:	jmp    FWORD PTR [eax-0x34]
  440b7f:	mov    esp,ecx
  440b81:	jecxz  0x440c00
  440b83:	sub    DWORD PTR [edi+edi*4],0xfffffff9
  440b87:	dec    DWORD PTR [ecx-0xd5eb]
  440b8d:	mov    ecx,0x8eff00ff
  440b92:	pop    edx
  440b93:	jmp    DWORD PTR [ebx+edx*1-0x4b00003a]
  440b9a:	mov    bh,0x83
  440b9c:	dec    DWORD PTR [edi+edi*8+0x3904ff00]
  440ba3:	call   FWORD PTR [ecx-0x33ffed00]
  440ba9:	or     al,0xd9
  440bab:	(bad)  
  440bac:	jmp    DWORD PTR [edi+0x0]
  440baf:	add    DWORD PTR [ebx+0x27cc4207],0xffffff92
  440bb6:	ret    
  440bb7:	dec    esp
  440bb9:	test   BYTE PTR [eax],cl
  440bbb:	int3   
  440bbc:	add    BYTE PTR [esi],ah
  440bbe:	add    BYTE PTR [ebx-0x87d],al
  440bc4:	outs   dx,BYTE PTR ds:[esi]
  440bc6:	push   ss
  440bc7:	add    bh,bh
  440bc9:	add    DWORD PTR [eax-0x77],esi
  440bcc:	inc    DWORD PTR [ebx-0x34]
  440bcf:	(bad)  
  440bd0:	jmp    FWORD PTR [esi+0x4f]
  440bd3:	cmp    ebx,0xffffff81
  440bd6:	mov    al,0x0
  440bd8:	add    BYTE PTR [edi],bl
  440bda:	bswap  esp
  440bdc:	add    BYTE PTR [esi+0x0],al
  440bdf:	add    bh,bh
  440be1:	sbb    DWORD PTR [ebx-0x5db3d201],0xccd2ff89
  440beb:	dec    esp
  440bed:	jge    0x440bee
  440bef:	add    BYTE PTR [eax],al
  440bf1:	rol    DWORD PTR [edi+0x0],0x5e
  440bf5:	popf   
  440bf6:	lods   eax,DWORD PTR ds:[esi]
  440bf7:	cmp    edi,0xffffff8b
  440bfa:	cmp    al,0xff
  440bfc:	add    BYTE PTR [edi],al
  440bfe:	or     DWORD PTR [ecx-0x271600],0xffffff95
  440c05:	pop    ebp
  440c06:	and    edi,edi
  440c08:	dec    DWORD PTR [edx+0xb]
  440c0b:	cmp    edi,0xffffff99
  440c0e:	add    bh,bh
  440c10:	add    BYTE PTR [ebp-0x4dce76c3],dl
  440c16:	mov    eax,ds:0x87fa89ff
  440c1b:	cmp    edi,0xffffff80
  440c1e:	add    ah,cl
  440c20:	mov    DWORD PTR [ecx+0xf91898c],eax
  440c26:	cdq    
  440c27:	(bad)  
  440c28:	jmp    FWORD PTR [edx]
  440c2a:	mov    ebx,0xff42ff00
  440c2f:	inc    DWORD PTR [ebx+0x3c00d6a1]
  440c35:	in     al,dx
  440c36:	jecxz  0x440bc1
  440c38:	dec    esp
  440c3a:	das    
  440c3b:	(bad)  
  440c3c:	(bad)  
  440c3d:	in     al,dx
  440c3e:	(bad)  
  440c3f:	(bad)  
  440c40:	call   FWORD PTR [edx]
  440c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440c43:	add    BYTE PTR [ebx],bl
  440c45:	or     ch,BYTE PTR ds:0xf61700cc
  440c4b:	add    bh,bh
  440c4d:	(bad)  
  440c4e:	int3   
  440c4f:	add    BYTE PTR [eax],al
  440c51:	retf   0x6a
  440c54:	cmp    DWORD PTR [ecx+0x3c],0xffffff89
  440c58:	mov    DWORD PTR [ebx],eax
  440c5a:	jae    0x440c5b
  440c5c:	push   DWORD PTR [esi-0x1]
  440c5f:	int3   
  440c60:	dec    DWORD PTR [edx-0x344767b]
  440c66:	dec    ebp
  440c67:	(bad)  
  440c68:	jmp    FWORD PTR [ebx+0x41ffff95]
  440c6e:	cmp    edi,0x0
  440c71:	sbb    DWORD PTR [eax],ebp
  440c73:	cmp    DWORD PTR [ebx+esi*4-0x3300c2],0xa
  440c7b:	add    DWORD PTR [eax],0x2d
  440c7e:	(bad)  
  440c7f:	dec    esp
  440c81:	jo     0x440c56
  440c83:	sbb    edx,0xffffffda
  440c86:	xor    DWORD PTR [eax],eax
  440c88:	add    BYTE PTR [esi],ch
  440c8a:	mov    bh,bh
  440c8c:	mov    DWORD PTR [esi-0x77],ebx
  440c8f:	add    BYTE PTR [eax],al
  440c91:	pop    esi
  440c92:	pop    esi
  440c93:	jmp    FWORD PTR [ebp-0x34]
  440c96:	pop    ebx
  440c97:	dec    DWORD PTR [ecx+0x2d3c]
  440c9d:	add    bh,bh
  440c9f:	or     esp,0x26
  440ca2:	mov    al,0xff
  440ca4:	jns    0x440c86
  440ca6:	cmp    bh,0xff
  440ca9:	loope  0x440c7e
  440cab:	add    bh,bh
  440cad:	(bad)  
  440cae:	inc    DWORD PTR [eax]
  440cb0:	jmp    FWORD PTR [edx+0x4657ff56]
  440cb6:	imul   eax,DWORD PTR [eax],0xffffffff
  440cb9:	push   ds
  440cba:	sahf   
  440cbb:	add    DWORD PTR [ebx-0x7c00ff99],0xffffffdd
  440cc2:	mov    al,ds:0x31661989
  440cc7:	add    DWORD PTR [eax],0xffffffbe
  440cca:	daa    
  440ccb:	add    BYTE PTR [eax],al
  440ccd:	arpl   di,di
  440ccf:	(bad)  
  440cd0:	jmp    DWORD PTR [esi-0x22c9002e]
  440cd6:	pop    DWORD PTR [eax]
  440cd8:	jmp    FWORD PTR [edx+0x4f89ff20]
  440cde:	add    DWORD PTR [eax],0xffffffff
  440ce1:	ret    
  440ce2:	mov    ah,0x0
  440ce4:	cld    
  440ce5:	das    
  440ce6:	pop    esi
  440ce7:	inc    DWORD PTR [eax]
  440ce9:	jl     0x440cbb
  440ceb:	inc    DWORD PTR [eax]
  440ced:	in     eax,dx
  440cee:	mov    edi,edi
  440cf0:	jmp    FWORD PTR [ecx-0x57e200a7]
  440cf6:	xchg   DWORD PTR [eax],eax
  440cf8:	add    BYTE PTR [ebp+0xbff0054],bl
  440cfe:	(bad)  
  440cff:	inc    DWORD PTR [ebx-0x657c22aa]
  440d05:	outs   dx,DWORD PTR ds:[esi]
  440d06:	mov    edi,0x63ba00ff
  440d0b:	add    BYTE PTR [ebx-0x7600ff9f],al
  440d11:	cli    
  440d12:	jne    0x440d14
  440d14:	cmp    BYTE PTR [esp+edi*2+0x0],bh
  440d18:	add    al,al
  440d1a:	sub    edi,edi
  440d1c:	push   DWORD PTR [ecx-0x137c0077]
  440d22:	inc    DWORD PTR es:[esi+0x63]
  440d26:	cmp    al,0x89
  440d28:	push   DWORD PTR [ebp+0x3000006b]
  440d2e:	int3   
  440d2f:	or     DWORD PTR [ecx-0x1d002ea3],0xb
  440d36:	inc    esi
  440d37:	int3   
  440d38:	add    BYTE PTR [ebp+0x3389ffe1],cl
  440d3e:	cmp    edi,0xffffff83
  440d41:	dec    esp
  440d42:	je     0x440d43
  440d44:	pop    esi
  440d45:	bound  esi,QWORD PTR [ebp-0x7d]
  440d48:	(bad)  
  440d49:	jle    0x440cf7
  440d4b:	add    ah,cl
  440d4d:	adc    eax,0x5b83ff89
  440d52:	xor    edi,edi
  440d54:	sbb    dh,BYTE PTR [ecx+0x2300ff35]
  440d5a:	push   ecx
  440d5b:	inc    DWORD PTR [eax]
  440d5d:	ins    BYTE PTR es:[edi],dx
  440d5e:	(bad)  
  440d5f:	(bad)  
  440d60:	(bad)  
  440d61:	fcomp  st(3)
  440d63:	add    BYTE PTR [ebp*4+0x3b83ff86],ah
  440d6a:	mov    ?,edi
  440d6c:	call   FWORD PTR [eax]
  440d6e:	inc    DWORD PTR [eax]
  440d70:	push   DWORD PTR [esi]
  440d72:	add    eax,0xd62cfc00
  440d77:	add    BYTE PTR [eax],al
  440d79:	mov    ebp,0xfb89ff4f
  440d7e:	int3   
  440d7f:	int3   
  440d80:	add    BYTE PTR [esi],dh
  440d82:	and    BYTE PTR [ecx+0xe32af5],cl
  440d88:	add    BYTE PTR [ebx],bh
  440d8a:	mov    cl,0xff
  440d8c:	add    BYTE PTR [ecx],bl
  440d8e:	int3   
  440d8f:	int3   
  440d90:	mov    DWORD PTR [edx-0x2ebd333b],esi
  440d96:	test   eax,0x740900ff
  440d9b:	mov    DWORD PTR [ebx-0x3376002f],eax
  440da1:	(bad)  
  440da2:	les    eax,FWORD PTR [ebx-0xd916d8]
  440da8:	mov    esi,ebp
  440daa:	(bad)  
  440dab:	(bad)  
  440dac:	dec    DWORD PTR [edi+0x6cff8389]
  440db2:	or     DWORD PTR [ebx+0x6566dc],eax
  440db8:	int3   
  440db9:	jno    0x440db6
  440dbb:	int3   
  440dbc:	add    dl,al
  440dbe:	mov    DWORD PTR [ebx-0xa4ef34],eax
  440dc4:	or     eax,edi
  440dc6:	mov    bh,0x0
  440dc8:	push   DWORD PTR [edi+0x35ffffc4]
  440dce:	dec    esp
  440dd0:	int3   
  440dd1:	and    eax,0x9098ff7d
  440dd6:	pop    eax
  440dd7:	inc    DWORD PTR [ebx+0xff17f3]
  440ddd:	lock dec DWORD PTR [ecx-0xb47000]
  440de4:	fwait
  440de5:	dec    ecx
  440de6:	cmc    
  440de7:	add    ah,cl
  440de9:	sahf   
  440dea:	stos   DWORD PTR es:[edi],eax
  440deb:	cmp    edi,0xffffffe6
  440dee:	or     DWORD PTR [ecx-0x7c3f2900],0xffffff8d
  440df5:	mov    edi,0x4a89897d
  440dfa:	inc    esp
  440dfb:	int3   
  440dfc:	add    BYTE PTR [edx],al
  440dfe:	mov    edi,edi
  440e00:	add    ah,bl
  440e02:	loopne 0x440e04
  440e04:	test   DWORD PTR [ecx+0x70ff002e],esp
  440e0a:	loop   0x440e0b
  440e0c:	(bad)  
  440e0d:	mov    eax,0xfaff0000
  440e12:	dec    ebp
  440e13:	mov    eax,edx
  440e15:	add    BYTE PTR [eax+0x4e6bff89],dh
  440e1b:	inc    DWORD PTR [eax]
  440e1d:	out    0xff,eax
  440e1f:	(bad)  
  440e20:	push   DWORD PTR [eax]
  440e22:	cmp    DWORD PTR [ebx-0x7cff40f4],eax
  440e28:	add    bh,bh
  440e2a:	int3   
  440e2b:	dec    esp
  440e2d:	add    bh,bh
  440e2f:	add    DWORD PTR [ecx+0x100ec],0x0
  440e36:	push   ebp
  440e37:	push   esi
  440e38:	push   edi
  440e39:	push   0x0
  440e3b:	push   0x0
  440e3d:	push   0x0
  440e3f:	call   DWORD PTR ds:0x44401c
  440e45:	mov    edx,DWORD PTR ds:0x447d1c
  440e4b:	mov    ecx,DWORD PTR ds:0x447014
  440e51:	add    edx,0x16bf8
  440e57:	mov    esi,0x1a5
  440e5c:	mov    ebp,0x8
  440e61:	movzx  eax,BYTE PTR [ecx+0x6]
  440e65:	movzx  edi,WORD PTR [ecx+0x3]
  440e69:	movzx  ecx,BYTE PTR [ecx+0x1]
  440e6d:	shl    eax,0x10
  440e70:	add    eax,edi
  440e72:	shl    eax,0x8
  440e75:	add    eax,ecx
  440e77:	mov    ecx,DWORD PTR ds:0x447d14
  440e7d:	add    ecx,0x3e8bc64d
  440e83:	xor    ecx,eax
  440e85:	mov    ds:0x447d04,eax
  440e8a:	mov    DWORD PTR [edx],ecx
  440e8c:	mov    ecx,DWORD PTR ds:0x447014
  440e92:	add    ecx,ebp
  440e94:	add    edx,0x4
  440e97:	dec    esi
  440e98:	mov    DWORD PTR ds:0x447014,ecx
  440e9e:	jne    0x440e61
  440ea0:	mov    esi,DWORD PTR ds:0x447d1c
  440ea6:	push   ebx
  440ea7:	mov    ebx,DWORD PTR ds:0x444028
  440ead:	add    esi,0x1728c
  440eb3:	mov    edi,0x242
  440eb8:	jmp    0x440ec0
  440eba:	lea    ebx,[ebx+0x0]
  440ec0:	mov    edx,DWORD PTR ds:0x447018
  440ec6:	mov    eax,DWORD PTR [edx]
  440ec8:	mov    ecx,0x4f693103
  440ecd:	sub    ecx,DWORD PTR ds:0x447d14
  440ed3:	mov    ds:0x447d04,eax
  440ed8:	xor    ecx,eax
  440eda:	push   0x446abc
  440edf:	mov    DWORD PTR [esi],ecx
  440ee1:	call   ebx
  440ee3:	add    DWORD PTR ds:0x447018,ebp
  440ee9:	add    esi,0x4
  440eec:	dec    edi
  440eed:	jne    0x440ec0
  440eef:	mov    edx,DWORD PTR ds:0x447d1c
  440ef5:	mov    eax,DWORD PTR [esp+0x114]
  440efc:	add    edx,0x17b94
  440f02:	add    eax,0x2
  440f05:	mov    esi,0x115
  440f0a:	lea    ebx,[ebx+0x0]
  440f10:	movzx  ecx,BYTE PTR [eax+0x2]
  440f14:	movzx  edi,WORD PTR [eax]
  440f17:	shl    ecx,0x10
  440f1a:	add    ecx,edi
  440f1c:	movzx  edi,BYTE PTR [eax-0x2]
  440f20:	shl    ecx,0x8
  440f23:	add    ecx,edi
  440f25:	mov    edi,DWORD PTR ds:0x447d14
  440f2b:	mov    DWORD PTR ds:0x447d04,ecx
  440f31:	add    edi,0x3921fb72
  440f37:	xor    edi,ecx
  440f39:	mov    DWORD PTR [edx],edi
  440f3b:	movzx  ecx,WORD PTR [eax+0xc]
  440f3f:	movzx  edi,BYTE PTR [eax+0xa]
  440f43:	shl    ecx,0x8
  440f46:	add    ecx,edi
  440f48:	movzx  edi,BYTE PTR [eax+0x4]
  440f4c:	shl    ecx,0x8
  440f4f:	add    ecx,edi
  440f51:	mov    edi,DWORD PTR ds:0x447d14
  440f57:	add    edi,0x3921fb72
  440f5d:	xor    edi,ecx
  440f5f:	mov    DWORD PTR ds:0x447d04,ecx
  440f65:	mov    DWORD PTR [edx+0x4],edi
  440f68:	add    edx,ebp
  440f6a:	add    eax,0x10
  440f6d:	dec    esi
  440f6e:	jne    0x440f10
  440f70:	push   0x38
  440f72:	call   DWORD PTR ds:0x444070
  440f78:	mov    ecx,DWORD PTR ds:0x447d1c
  440f7e:	mov    eax,DWORD PTR [esp+0x118]
  440f85:	add    ecx,0x1843c
  440f8b:	mov    esi,0x34
  440f90:	movzx  edx,BYTE PTR [eax+0x7]
  440f94:	movzx  edi,BYTE PTR [eax+0x3]
  440f98:	shl    edx,0x8
  440f9b:	add    edx,edi
  440f9d:	movzx  edi,WORD PTR [eax+0x1]
  440fa1:	shl    edx,0x10
  440fa4:	add    edx,edi
  440fa6:	mov    DWORD PTR ds:0x447d04,edx
  440fac:	mov    edi,0xe6cf8ff2
  440fb1:	sub    edi,DWORD PTR ds:0x447d14
  440fb7:	xor    edi,edx
  440fb9:	mov    DWORD PTR [ecx],edi
  440fbb:	movzx  edx,WORD PTR [eax+0xe]
  440fbf:	movzx  edi,BYTE PTR [eax+0xc]
  440fc3:	shl    edx,0x8
  440fc6:	add    edx,edi
  440fc8:	movzx  edi,BYTE PTR [eax+0x9]
  440fcc:	shl    edx,0x8
  440fcf:	add    edx,edi
  440fd1:	mov    DWORD PTR ds:0x447d04,edx
  440fd7:	mov    edi,0xe6cf8ff2
  440fdc:	sub    edi,DWORD PTR ds:0x447d14
  440fe2:	xor    edi,edx
  440fe4:	mov    DWORD PTR [ecx+0x4],edi
  440fe7:	movzx  edx,BYTE PTR [eax+0x17]
  440feb:	movzx  edi,BYTE PTR [eax+0x13]
  440fef:	shl    edx,0x8
  440ff2:	add    edx,edi
  440ff4:	movzx  edi,WORD PTR [eax+0x11]
  440ff8:	shl    edx,0x10
  440ffb:	add    edx,edi
  440ffd:	mov    DWORD PTR ds:0x447d04,edx
  441003:	mov    edi,0xe6cf8ff2
  441008:	sub    edi,DWORD PTR ds:0x447d14
  44100e:	xor    edi,edx
  441010:	mov    DWORD PTR [ecx+0x8],edi
  441013:	movzx  edx,WORD PTR [eax+0x1e]
  441017:	movzx  edi,BYTE PTR [eax+0x1c]
  44101b:	shl    edx,0x8
  44101e:	add    edx,edi
  441020:	movzx  edi,BYTE PTR [eax+0x19]
  441024:	shl    edx,0x8
  441027:	add    edx,edi
  441029:	mov    DWORD PTR ds:0x447d04,edx
  44102f:	mov    edi,0xe6cf8ff2
  441034:	sub    edi,DWORD PTR ds:0x447d14
  44103a:	xor    edi,edx
  44103c:	mov    DWORD PTR [ecx+0xc],edi
  44103f:	movzx  edx,BYTE PTR [eax+0x27]
  441043:	movzx  edi,BYTE PTR [eax+0x23]
  441047:	shl    edx,0x8
  44104a:	add    edx,edi
  44104c:	movzx  edi,WORD PTR [eax+0x21]
  441050:	shl    edx,0x10
  441053:	add    edx,edi
  441055:	mov    DWORD PTR ds:0x447d04,edx
  44105b:	mov    edi,0xe6cf8ff2
  441060:	sub    edi,DWORD PTR ds:0x447d14
  441066:	xor    edi,edx
  441068:	mov    DWORD PTR [ecx+0x10],edi
  44106b:	movzx  edx,WORD PTR [eax+0x2e]
  44106f:	movzx  edi,BYTE PTR [eax+0x2c]
  441073:	shl    edx,0x8
  441076:	add    edx,edi
  441078:	movzx  edi,BYTE PTR [eax+0x29]
  44107c:	shl    edx,0x8
  44107f:	add    edx,edi
  441081:	mov    DWORD PTR ds:0x447d04,edx
  441087:	mov    edi,0xe6cf8ff2
  44108c:	sub    edi,DWORD PTR ds:0x447d14
  441092:	xor    edi,edx
  441094:	mov    DWORD PTR [ecx+0x14],edi
  441097:	movzx  edx,BYTE PTR [eax+0x37]
  44109b:	movzx  edi,BYTE PTR [eax+0x33]
  44109f:	shl    edx,0x8
  4410a2:	add    edx,edi
  4410a4:	movzx  edi,WORD PTR [eax+0x31]
  4410a8:	shl    edx,0x10
  4410ab:	add    edx,edi
  4410ad:	mov    DWORD PTR ds:0x447d04,edx
  4410b3:	mov    edi,0xe6cf8ff2
  4410b8:	sub    edi,DWORD PTR ds:0x447d14
  4410be:	add    ecx,0x20
  4410c1:	xor    edi,edx
  4410c3:	mov    DWORD PTR [ecx-0x8],edi
  4410c6:	movzx  edx,WORD PTR [eax+0x3e]
  4410ca:	movzx  edi,BYTE PTR [eax+0x3c]
  4410ce:	shl    edx,0x8
  4410d1:	add    edx,edi
  4410d3:	movzx  edi,BYTE PTR [eax+0x39]
  4410d7:	shl    edx,0x8
  4410da:	add    edx,edi
  4410dc:	mov    edi,0xe6cf8ff2
  4410e1:	sub    edi,DWORD PTR ds:0x447d14
  4410e7:	mov    DWORD PTR ds:0x447d04,edx
  4410ed:	xor    edi,edx
  4410ef:	mov    DWORD PTR [ecx-0x4],edi
  4410f2:	add    eax,0x40
  4410f5:	dec    esi
  4410f6:	jne    0x440f90
  4410fc:	movzx  edx,BYTE PTR [eax+0x7]
  441100:	movzx  esi,BYTE PTR [eax+0x3]
  441104:	movzx  eax,WORD PTR [eax+0x1]
  441108:	mov    ebx,DWORD PTR ds:0x444020
  44110e:	shl    edx,0x8
  441111:	add    edx,esi
  441113:	shl    edx,0x10
  441116:	add    edx,eax
  441118:	mov    eax,ds:0x447d14
  44111d:	add    eax,0xe6cf0ff0
  441122:	xor    eax,edx
  441124:	mov    DWORD PTR ds:0x447d04,edx
  44112a:	mov    DWORD PTR [ecx],eax
  44112c:	mov    esi,DWORD PTR ds:0x447d1c
  441132:	add    esi,0x18ac0
  441138:	mov    edi,0x289
  44113d:	lea    ecx,[ecx+0x0]
  441140:	push   0x100
  441145:	lea    ecx,[esp+0x14]
  441149:	push   ecx
  44114a:	push   0x0
  44114c:	call   ebx
  44114e:	mov    ecx,DWORD PTR ds:0x44701c
  441154:	movzx  eax,BYTE PTR [ecx+0x7]
  441158:	movzx  edx,WORD PTR [ecx+0x5]
  44115c:	movzx  ecx,BYTE PTR [ecx+0x1]
  441160:	shl    eax,0x10
  441163:	add    eax,edx
  441165:	mov    edx,DWORD PTR ds:0x447d14
  44116b:	shl    eax,0x8
  44116e:	add    eax,ecx
  441170:	add    edx,0x3e51037b
  441176:	xor    edx,eax
  441178:	mov    ds:0x447d04,eax
  44117d:	mov    DWORD PTR [esi],edx
  44117f:	add    DWORD PTR ds:0x44701c,ebp
  441185:	add    esi,0x4
  441188:	dec    edi
  441189:	jne    0x441140
  44118b:	mov    eax,ds:0x447d1c
  441190:	mov    edx,DWORD PTR ds:0x447020
  441196:	add    eax,0x194e4
  44119b:	lea    esi,[edi+0x4d]
  44119e:	pop    ebx
  44119f:	nop
  4411a0:	movzx  ecx,BYTE PTR [edx+0xa]
  4411a4:	movzx  edi,BYTE PTR [edx+0x8]
  4411a8:	shl    ecx,0x8
  4411ab:	add    ecx,edi
  4411ad:	movzx  edi,BYTE PTR [edx+0x6]
  4411b1:	movzx  edx,BYTE PTR [edx+0x1]
  4411b5:	shl    ecx,0x8
  4411b8:	add    ecx,edi
  4411ba:	shl    ecx,0x8
  4411bd:	add    ecx,edx
  4411bf:	mov    DWORD PTR ds:0x447d04,ecx
  4411c5:	mov    edx,0xf610b473
  4411ca:	sub    edx,DWORD PTR ds:0x447d14
  4411d0:	xor    edx,ecx
  4411d2:	mov    DWORD PTR [eax],edx
  4411d4:	mov    edx,DWORD PTR ds:0x447020
  4411da:	movzx  ecx,BYTE PTR [edx+0xf]
  4411de:	movzx  edi,WORD PTR [edx+0xd]
  4411e2:	movzx  edx,BYTE PTR [edx+0xb]
  4411e6:	shl    ecx,0x10
  4411e9:	add    ecx,edi
  4411eb:	shl    ecx,0x8
  4411ee:	add    ecx,edx
  4411f0:	mov    edx,DWORD PTR ds:0x447d14
  4411f6:	mov    DWORD PTR ds:0x447d04,ecx
  4411fc:	add    edx,0xf6103471
  441202:	xor    edx,ecx
  441204:	mov    DWORD PTR [eax+0x4],edx
  441207:	mov    edx,DWORD PTR ds:0x447020
  44120d:	add    edx,0x10
  441210:	mov    DWORD PTR ds:0x447020,edx
  441216:	movzx  ecx,BYTE PTR [edx+0xa]
  44121a:	movzx  edi,BYTE PTR [edx+0x8]
  44121e:	shl    ecx,0x8
  441221:	add    ecx,edi
  441223:	movzx  edi,BYTE PTR [edx+0x6]
  441227:	movzx  edx,BYTE PTR [edx+0x1]
  44122b:	shl    ecx,0x8
  44122e:	add    ecx,edi
  441230:	shl    ecx,0x8
  441233:	add    ecx,edx
  441235:	mov    DWORD PTR ds:0x447d04,ecx
  44123b:	mov    edx,0xf610b473
  441240:	sub    edx,DWORD PTR ds:0x447d14
  441246:	xor    edx,ecx
  441248:	mov    DWORD PTR [eax+0x8],edx
  44124b:	mov    edx,DWORD PTR ds:0x447020
  441251:	movzx  ecx,BYTE PTR [edx+0xf]
  441255:	movzx  edi,WORD PTR [edx+0xd]
  441259:	movzx  edx,BYTE PTR [edx+0xb]
  44125d:	shl    ecx,0x10
  441260:	add    ecx,edi
  441262:	shl    ecx,0x8
  441265:	add    ecx,edx
  441267:	mov    edx,DWORD PTR ds:0x447d14
  44126d:	mov    DWORD PTR ds:0x447d04,ecx
  441273:	add    edx,0xf6103471
  441279:	xor    edx,ecx
  44127b:	mov    DWORD PTR [eax+0xc],edx
  44127e:	mov    edx,DWORD PTR ds:0x447020
  441284:	add    edx,0x10
  441287:	mov    DWORD PTR ds:0x447020,edx
  44128d:	movzx  ecx,BYTE PTR [edx+0xa]
  441291:	movzx  edi,BYTE PTR [edx+0x8]
  441295:	shl    ecx,0x8
  441298:	add    ecx,edi
  44129a:	movzx  edi,BYTE PTR [edx+0x6]
  44129e:	movzx  edx,BYTE PTR [edx+0x1]
  4412a2:	shl    ecx,0x8
  4412a5:	add    ecx,edi
  4412a7:	shl    ecx,0x8
  4412aa:	add    ecx,edx
  4412ac:	mov    edx,0xf610b473
  4412b1:	sub    edx,DWORD PTR ds:0x447d14
  4412b7:	mov    DWORD PTR ds:0x447d04,ecx
  4412bd:	xor    edx,ecx
  4412bf:	mov    DWORD PTR [eax+0x10],edx
  4412c2:	mov    edx,DWORD PTR ds:0x447020
  4412c8:	movzx  ecx,BYTE PTR [edx+0xf]
  4412cc:	movzx  edi,WORD PTR [edx+0xd]
  4412d0:	shl    ecx,0x10
  4412d3:	movzx  edx,BYTE PTR [edx+0xb]
  4412d7:	add    ecx,edi
  4412d9:	shl    ecx,0x8
  4412dc:	add    ecx,edx
  4412de:	mov    edx,DWORD PTR ds:0x447d14
  4412e4:	mov    DWORD PTR ds:0x447d04,ecx
  4412ea:	add    edx,0xf6103471
  4412f0:	xor    edx,ecx
  4412f2:	mov    DWORD PTR [eax+0x14],edx
  4412f5:	mov    edx,DWORD PTR ds:0x447020
  4412fb:	add    edx,0x10
  4412fe:	mov    DWORD PTR ds:0x447020,edx
  441304:	movzx  ecx,BYTE PTR [edx+0xa]
  441308:	movzx  edi,BYTE PTR [edx+0x8]
  44130c:	shl    ecx,0x8
  44130f:	add    ecx,edi
  441311:	movzx  edi,BYTE PTR [edx+0x6]
  441315:	movzx  edx,BYTE PTR [edx+0x1]
  441319:	shl    ecx,0x8
  44131c:	add    ecx,edi
  44131e:	shl    ecx,0x8
  441321:	add    ecx,edx
  441323:	mov    DWORD PTR ds:0x447d04,ecx
  441329:	mov    edx,0xf610b473
  44132e:	sub    edx,DWORD PTR ds:0x447d14
  441334:	add    eax,0x20
  441337:	xor    edx,ecx
  441339:	mov    DWORD PTR [eax-0x8],edx
  44133c:	mov    edx,DWORD PTR ds:0x447020
  441342:	movzx  ecx,BYTE PTR [edx+0xf]
  441346:	movzx  edi,WORD PTR [edx+0xd]
  44134a:	movzx  edx,BYTE PTR [edx+0xb]
  44134e:	shl    ecx,0x10
  441351:	add    ecx,edi
  441353:	shl    ecx,0x8
  441356:	add    ecx,edx
  441358:	mov    edx,DWORD PTR ds:0x447d14
  44135e:	add    edx,0xf6103471
  441364:	xor    edx,ecx
  441366:	mov    DWORD PTR ds:0x447d04,ecx
  44136c:	mov    DWORD PTR [eax-0x4],edx
  44136f:	mov    edx,DWORD PTR ds:0x447020
  441375:	add    edx,0x10
  441378:	dec    esi
  441379:	mov    DWORD PTR ds:0x447020,edx
  44137f:	jne    0x4411a0
  441385:	mov    ecx,DWORD PTR ds:0x447d1c
  44138b:	mov    edx,DWORD PTR ds:0x447024
  441391:	add    ecx,0x19e84
  441397:	mov    esi,0xd3
  44139c:	lea    esp,[esp+0x0]
  4413a0:	movzx  eax,WORD PTR [edx+0x4]
  4413a4:	movzx  edi,BYTE PTR [edx+0x2]
  4413a8:	movzx  edx,BYTE PTR [edx]
  4413ab:	shl    eax,0x8
  4413ae:	add    eax,edi
  4413b0:	shl    eax,0x8
  4413b3:	add    eax,edx
  4413b5:	mov    ds:0x447d04,eax
  4413ba:	mov    edx,0xd4a37f64
  4413bf:	sub    edx,DWORD PTR ds:0x447d14
  4413c5:	add    ecx,0xc
  4413c8:	xor    edx,eax
  4413ca:	mov    DWORD PTR [ecx-0xc],edx
  4413cd:	mov    edx,DWORD PTR ds:0x447024
  4413d3:	add    edx,ebp
  4413d5:	mov    DWORD PTR ds:0x447024,edx
  4413db:	movzx  eax,WORD PTR [edx+0x4]
  4413df:	movzx  edi,BYTE PTR [edx+0x2]
  4413e3:	movzx  edx,BYTE PTR [edx]
  4413e6:	shl    eax,0x8
  4413e9:	add    eax,edi
  4413eb:	shl    eax,0x8
  4413ee:	add    eax,edx
  4413f0:	mov    ds:0x447d04,eax
  4413f5:	mov    edx,0xd4a37f64
  4413fa:	sub    edx,DWORD PTR ds:0x447d14
  441400:	xor    edx,eax
  441402:	mov    DWORD PTR [ecx-0x8],edx
  441405:	mov    edx,DWORD PTR ds:0x447024
  44140b:	add    edx,ebp
  44140d:	mov    DWORD PTR ds:0x447024,edx
  441413:	movzx  eax,WORD PTR [edx+0x4]
  441417:	movzx  edi,BYTE PTR [edx+0x2]
  44141b:	movzx  edx,BYTE PTR [edx]
  44141e:	shl    eax,0x8
  441421:	add    eax,edi
  441423:	shl    eax,0x8
  441426:	add    eax,edx
  441428:	mov    edx,0xd4a37f64
  44142d:	sub    edx,DWORD PTR ds:0x447d14
  441433:	mov    ds:0x447d04,eax
  441438:	xor    edx,eax
  44143a:	mov    DWORD PTR [ecx-0x4],edx
  44143d:	mov    edx,DWORD PTR ds:0x447024
  441443:	add    edx,ebp
  441445:	dec    esi
  441446:	mov    DWORD PTR ds:0x447024,edx
  44144c:	jne    0x4413a0
  441452:	pop    edi
  441453:	pop    esi
  441454:	pop    ebp
  441455:	add    esp,0x100
  44145b:	ret    
  44145c:	int3   
  44145d:	int3   
  44145e:	int3   
  44145f:	int3   
  441460:	sub    eax,DWORD PTR [ebx-0x71c301]
  441466:	cmp    eax,DWORD PTR [ecx+ecx*4-0x7c820001]
  44146d:	inc    DWORD PTR [ebp-0x1]
  441470:	inc    DWORD PTR [bp+di+0x71ff]
  441475:	push   DWORD PTR [ebx+0x0]
  441478:	mov    DWORD PTR [eax],eax
  44147a:	and    ecx,0x79
  44147d:	inc    DWORD PTR [ecx]
  44147f:	(bad)  
  441480:	cmp    eax,DWORD PTR [ebx+0x1e6dff]
  441486:	add    eax,0xff00001b
  44148b:	lds    esi,FWORD PTR [eax+eax*1+0x3f]
  44148f:	or     DWORD PTR [edx-0x1],0xffffffcc
  441493:	lock add DWORD PTR [eax],0xffffffe6
  441497:	loopne 0x441498
  441499:	inc    DWORD PTR [eax]
  44149b:	adc    ch,BYTE PTR [eax+0x2a00a3ff]
  4414a1:	mov    edi,edi
  4414a3:	inc    ebx
  4414a4:	stc    
  4414a5:	add    BYTE PTR [esi-0x7cffa9],bl
  4414ab:	xchg   edi,eax
  4414ac:	mov    ecx,0x558393ff
  4414b1:	add    BYTE PTR [eax],al
  4414b3:	int3   
  4414b4:	test   DWORD PTR [eax],0x8983e8fa
  4414ba:	add    BYTE PTR [ecx+0x35],cl
  4414bd:	jmp    FWORD PTR [ebx-0x7c1e01]
  4414c3:	call   edi
  4414c5:	jmp    FWORD PTR [ecx+ebp*2]
  4414c8:	inc    DWORD PTR [eax]
  4414ca:	inc    DWORD PTR [edi-0x2e]
  4414cd:	call   esp
  4414cf:	int3   
  4414d0:	push   edi
  4414d1:	add    DWORD PTR [eax],0x9
  4414d4:	push   ecx
  4414d5:	call   DWORD PTR [ebx+0xd]
  4414d8:	mov    edi,edi
  4414da:	add    BYTE PTR [esi+ecx*2-0x27ffc734],cl
  4414e1:	int3   
  4414e2:	add    BYTE PTR [ebp+0x2599ff41],bl
  4414e8:	mov    DWORD PTR [eax],eax
  4414ea:	dec    DWORD PTR [edi+esi*8-0x1]
  4414ee:	and    BYTE PTR [eax],al
  4414f0:	mov    ds:0x1cadff89,al
  4414f5:	add    DWORD PTR [ecx],0x1a
  4414f8:	(bad)  
  4414f9:	inc    DWORD PTR [eax]
  4414fb:	add    ch,dl
  4414fd:	add    cl,cl
  4414ff:	call   DWORD PTR [eax]
  441501:	add    DWORD PTR [eax],0xffffff9a
  441504:	pop    ecx
  441505:	sub    DWORD PTR [ebp-0x33009a],0x0
  44150c:	xor    eax,DWORD PTR [eax]
  44150e:	mov    DWORD PTR [eax],0x8b83ff98
  441514:	(bad)  
  441515:	call   FWORD PTR [esi-0xffff0e]
  44151b:	adc    al,0x94
  44151d:	add    BYTE PTR [esi-0x7c331a34],dl
  441523:	dec    esi
  441524:	inc    ecx
  441525:	add    BYTE PTR [eax+0xffdc],bh
  44152b:	lahf   
  44152c:	popf   
  44152d:	add    dl,dl
  44152f:	inc    DWORD PTR [ebx+0x4f0d8900]
  441535:	add    BYTE PTR [ebp+0x36],dh
  441538:	add    ah,cl
  44153a:	dec    DWORD PTR [ecx-0x762c00b9]
  441540:	xor    BYTE PTR [eax],al
  441542:	jmp    FWORD PTR [edx+ebx*8-0x1]
  441546:	arpl   WORD PTR [ebx+eax*4-0x2c1a0001],bx
  44154d:	dec    ebx
  44154f:	inc    DWORD PTR [edi]
  441551:	int3   
  441552:	sbb    eax,0x2a
  441555:	jmp    esp
  441557:	fild   DWORD PTR [eax]
  441559:	add    DWORD PTR [ebx-0x1900db92],0xffffffff
  441560:	fs add bh,bh
  441563:	arpl   WORD PTR [eax-0x1],cx
  441566:	and    edi,ebx
  441568:	int3   
  441569:	(bad)  
  44156a:	dec    eax
  44156c:	mov    ah,0x0
  44156e:	xor    al,BYTE PTR [ebx+0x2bfffff3]
  441574:	mov    al,0x0
  441576:	sti    
  441577:	push   0x0
  441579:	inc    DWORD PTR [eax]
  44157b:	retf   0xff11
  44157e:	xchg   esi,eax
  44157f:	dec    DWORD PTR [eax]
  441581:	add    BYTE PTR [ecx+0x61ff9f38],cl
  441587:	mov    edi,0x65000089
  44158c:	lahf   
  44158d:	inc    DWORD PTR [ebx-0x1]
  441590:	mov    esp,0x29a38300
  441595:	mov    DWORD PTR [ecx+eax*8],eax
  441598:	inc    DWORD PTR [eax]
  44159a:	add    BYTE PTR [ecx+0x77],bh
  44159d:	add    BYTE PTR [edx-0x7c00bf7d],ah
  4415a3:	mov    bh,0x48
  4415a5:	add    BYTE PTR [eax+eiz*1-0x1],al
  4415a9:	dec    DWORD PTR [ecx+0x7ccc3965]
  4415af:	inc    DWORD PTR [edx]
  4415b1:	(bad)  
  4415b2:	dec    ebp
  4415b4:	cmp    DWORD PTR [eax],eax
  4415b6:	jecxz  0x4415e2
  4415b8:	inc    DWORD PTR [ebx+0xed1700]
  4415be:	popf   
  4415bf:	add    BYTE PTR [ebp-0x1],bl
  4415c2:	int3   
  4415c3:	in     eax,0x5c
  4415c5:	push   DWORD PTR [ebx]
  4415c7:	mov    ebx,0xde83ffff
  4415cc:	jmp    0xff00:0x83ffd900
  4415d3:	or     DWORD PTR [ecx-0x7d],ebx
  4415d6:	adc    BYTE PTR [edx-0x77],bh
  4415d9:	add    BYTE PTR [eax],al
  4415db:	out    0xb9,eax
  4415dd:	(bad)  
  4415de:	jp     0x4415e0
  4415e0:	dec    eax
  4415e1:	(bad)  
  4415e2:	push   eax
  4415e4:	repnz or ecx,0xffffff8f
  4415e8:	add    ah,cl
  4415ea:	sub    DWORD PTR [eax+0x9aff3b],0x10
  4415f1:	cmp    edi,0xffffff9d
  4415f4:	inc    BYTE PTR [eax]
  4415f6:	es mov dl,0xff
  4415f9:	(bad)  
  4415fa:	push   DWORD PTR [ebx-0x50]
  4415fd:	add    BYTE PTR [ebx+0xc700],al
  441603:	add    eax,0x969aff7a
  441608:	dec    esp
  44160a:	push   DWORD PTR [ecx]
  44160c:	adc    ah,cl
  44160e:	mov    DWORD PTR [eax],eax
  441610:	pop    ds
  441611:	dec    DWORD PTR [ecx+0x41ff4b45]
  441617:	jo     0x441618
  441619:	add    DWORD PTR [ebx+0x75ff8702],0xffffff89
  441620:	mov    DWORD PTR [eax],eax
  441622:	add    BYTE PTR [eax],ah
  441624:	ret    0xd6ff
  441627:	out    0x0,eax
  441629:	inc    DWORD PTR [eax]
  44162b:	mov    ebx,0x13002c
  441630:	and    bh,bh
  441632:	add    BYTE PTR [ecx-0x26],bh
  441635:	push   DWORD PTR [esi-0x7633ffb9]
  44163b:	dec    edi
  44163c:	dec    edi
  44163d:	jmp    FWORD PTR [ecx]
  44163f:	call   DWORD PTR [edx]
  441641:	add    BYTE PTR [ebx-0x6d33c77d],al
  441647:	push   ss
  441648:	add    bh,bh
  44164a:	jmp    esp
  44164c:	or     DWORD PTR [eax],eax
  44164e:	lods   eax,DWORD PTR ds:[esi]
  44164f:	jmp    DWORD PTR [edi-0x34]
  441652:	sub    esi,0x22
  441655:	jmp    FWORD PTR [ebp-0x1f]
  441658:	cmp    edi,0x0
  44165b:	out    dx,al
  44165c:	in     al,0xff
  44165e:	retf   
  44165f:	add    BYTE PTR [ecx-0x1],dl
  441662:	add    BYTE PTR [eax+eiz*1],bh
  441665:	adc    DWORD PTR [edi-0xffb1],0x26
  44166c:	call   0x83:0xe80059cc
  441673:	shl    ecx,cl
  441675:	add    BYTE PTR [ecx-0x28],bl
  441678:	add    BYTE PTR [ebx-0xeda01],al
  44167e:	(bad)  
  44167f:	call   ecx
  441681:	(bad)  
  441682:	push   DWORD PTR [edx-0x77]
  441685:	add    DWORD PTR [edi+edx*2+0x0],0xffffffff
  44168a:	call   edi
  44168c:	fisttp QWORD PTR [ecx-0x2dffd4]
  441692:	int3   
  441693:	leave  
  441694:	push   ebx
  441695:	jmp    DWORD PTR [eax+esi*8]
  441698:	add    BYTE PTR [eax],al
  44169a:	jmp    FWORD PTR [ebp-0x20]
  44169d:	sub    DWORD PTR [esi-0x1],0x53
  4416a1:	add    bh,bh
  4416a3:	aas    
  4416a4:	test   al,0xff
  4416a6:	jne    0x44168f
  4416a8:	(bad)  
  4416a9:	inc    DWORD PTR [eax]
  4416ab:	adc    DWORD PTR [edx],esi
  4416ad:	(bad)  
  4416ae:	cmp    al,0xff
  4416b0:	dec    esp
  4416b1:	(bad)  
  4416b2:	inc    DWORD PTR [edi]
  4416b4:	sahf   
  4416b5:	cmp    DWORD PTR [eax+0xffffbc],0xffffffff
  4416bc:	(bad)  
  4416bd:	dec    DWORD PTR [edi-0xff0e00]
  4416c3:	cmp    edi,edx
  4416c5:	xor    DWORD PTR [eax+0x838357],0xffffffff
  4416cc:	or     al,0xcc
  4416ce:	sub    bh,bh
  4416d0:	mov    eax,ds:0xc39d00ff
  4416d5:	int3   
  4416d6:	mov    dh,BYTE PTR [ecx]
  4416d8:	add    BYTE PTR [ebx+0x14df00],al
  4416de:	aad    0x0
  4416e0:	clc    
  4416e1:	add    BYTE PTR [ebx+0x4083a4ae],al
  4416e7:	es (bad) 
  4416e9:	inc    DWORD PTR [ebx+0x37002ed6]
  4416ef:	jmp    FWORD PTR [edi]
  4416f1:	dec    esp
  4416f3:	or     DWORD PTR [ecx-0x7d],esp
  4416f6:	je     0x441743
  4416f8:	dec    DWORD PTR [ecx-0xef4d7d]
  4416fe:	xor    eax,DWORD PTR [eax]
  441700:	xchg   esp,eax
  441701:	inc    DWORD PTR [eax]
  441703:	sub    BYTE PTR [ebx+eax*4-0x7c55cb],ah
  44170a:	add    dl,ch
  44170c:	xor    DWORD PTR [ebx+0x82ffec],eax
  441712:	push   DWORD PTR [edx-0x12]
  441715:	sbb    DWORD PTR [ebx+0x7],0xffffffff
  441719:	add    bh,bh
  44171b:	jbe    0x44170c
  44171d:	mov    DWORD PTR [ebx-0x7d],esi
  441720:	in     al,0xcc
  441722:	int3   
  441723:	fmul   DWORD PTR [esi+0x0]
  441726:	fs jmp 0x441728
  441729:	add    bh,bh
  44172b:	add    eax,DWORD PTR [edi+edi*8+0x11ffc3]
  441732:	int3   
  441733:	loope  0x441765
  441735:	int3   
  441736:	aas    
  441737:	inc    edx
  441738:	int3   
  441739:	dec    DWORD PTR [ecx-0x5dffe16d]
  44173f:	dec    DWORD PTR [ebx+0x5c138300]
  441745:	call   eax
  441747:	mov    ds:0x6e890000,al
  44174c:	cmp    al,0xff
  44174e:	add    al,0x0
  441750:	aaa    
  441751:	(bad)  
  441752:	push   DWORD PTR [ecx+edx*2]
  441755:	(bad)  
  441756:	std    
  441757:	push   ebp
  441758:	add    bh,bh
  44175a:	jmp    FWORD PTR ds:0xffb3898f
  441760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441761:	dec    DWORD PTR [ecx-0x1500c0b0]
  441767:	cmp    edi,0xffffff83
  44176a:	inc    ebp
  44176c:	sub    edi,edi
  44176e:	inc    edi
  44176f:	add    BYTE PTR [edx-0x1],ch
  441772:	mov    DWORD PTR [edi-0x7a],esp
  441775:	add    ah,al
  441777:	adc    edi,edi
  441779:	dec    esp
  44177b:	hlt    
  44177c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44177d:	jmp    DWORD PTR [ebp-0x7f7d]
  441783:	mov    dh,0x6f
  441785:	call   edi
  441787:	hlt    
  441788:	(bad)  
  441789:	(bad)  
  44178a:	(bad)  
  44178b:	sti    
  44178c:	xor    bh,bh
  44178e:	fwait
  44178f:	add    BYTE PTR [ecx+0x0],dl
  441792:	call   FWORD PTR [esi+0x19a6ff62]
  441798:	add    ah,cl
  44179a:	int3   
  44179b:	rol    BYTE PTR [edx],0xff
  44179e:	inc    ebx
  44179f:	call   DWORD PTR [eax-0x71c3ff01]
  4417a5:	push   esi
  4417a7:	pop    ecx
  4417a8:	int3   
  4417a9:	add    DWORD PTR [eax],0x3f
  4417ac:	mov    cl,0x0
  4417ae:	xor    ah,cl
  4417b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4417b1:	add    bh,bh
  4417b3:	mov    esp,0x30090096
  4417b8:	int3   
  4417b9:	(bad)  
  4417ba:	dec    DWORD PTR [ecx-0x53]
  4417bd:	dec    DWORD PTR [edi+edi*8-0x49]
  4417c1:	dec    esp
  4417c3:	jb     0x4417d0
  4417c5:	cmp    DWORD PTR [esi+0x6d],0xffffffff
  4417c9:	inc    DWORD PTR [eax]
  4417cb:	pop    ss
  4417cc:	cli    
  4417cd:	jmp    ebp
  4417cf:	dec    esp
  4417d1:	add    bh,bh
  4417d3:	add    BYTE PTR [esi],0xff
  4417d6:	add    al,0x7b
  4417d8:	int3   
  4417d9:	add    BYTE PTR [eax],al
  4417db:	dec    eax
  4417dc:	xchg   BYTE PTR [eax],al
  4417de:	adc    eax,0xffff0000
  4417e3:	xor    al,0xad
  4417e5:	mov    DWORD PTR [ecx],edi
  4417e7:	jb     0x4417e8
  4417e9:	add    BYTE PTR [eax],al
  4417eb:	pop    ecx
  4417ec:	or     cl,BYTE PTR [ecx-0x33ad00aa]
  4417f2:	add    BYTE PTR [ebp-0x7fa7c49],ch
  4417f8:	mov    DWORD PTR [ebx-0x7ceffe01],eax
  4417fe:	xor    al,0x0
  441800:	or     bh,bh
  441802:	call   eax
  441804:	out    dx,al
  441805:	(bad)  
  441806:	js     0x4417c1
  441808:	inc    DWORD PTR [ebx+0xfbf9ff]
  44180e:	dec    edx
  44180f:	int3   
  441810:	push   ecx
  441811:	int3   
  441812:	add    BYTE PTR [edi],ch
  441814:	adc    eax,0xff05b583
  441819:	int3   
  44181a:	call   FWORD PTR [esi+0x23]
  44181d:	dec    DWORD PTR [edi-0x7cff977d]
  441823:	ficomp DWORD PTR [eax+eax*1-0x27]
  441827:	mov    ebp,0x3200ff83
  44182c:	xchg   esp,eax
  44182d:	int3   
  44182e:	and    al,BYTE PTR [eax]
  441830:	inc    esp
  441831:	add    bh,bh
  441833:	mov    ds:0x23caff2a,al
  441838:	dec    DWORD PTR [ecx-0x33c4117d]
  44183e:	xchg   ebp,eax
  44183f:	add    BYTE PTR [edi-0x1],bh
  441842:	sbb    eax,0xffffffaa
  441845:	sbb    DWORD PTR [edx-0x7c0000f5],0xffffffd3
  44184c:	in     eax,dx
  44184d:	add    BYTE PTR [ecx],ch
  44184f:	or     DWORD PTR [esi],0xffffffff
  441852:	add    BYTE PTR [ebx+0x423affe0],bl
  441858:	add    DWORD PTR [ebx+0xa53800],0xffffffbf
  44185f:	add    BYTE PTR [eax],bl
  441861:	(bad)  
  441862:	jmp    FWORD PTR [ecx-0x2b]
  441865:	jmp    FWORD PTR [edx-0x7c7c0072]
  44186b:	fisttp QWORD PTR [ecx]
  44186d:	jmp    DWORD PTR [edx-0x7600fa00]
  441873:	js     0x44188c
  441875:	inc    DWORD PTR [edi+0x8300ef]
  44187b:	(bad)  
  44187c:	sbb    edi,edi
  44187e:	adc    al,0x0
  441880:	sub    eax,0x726e8989
  441885:	dec    DWORD PTR [edi]
  441887:	test   BYTE PTR [eax],0x89
  44188a:	jmp    FWORD PTR [ebp+0xb80066]
  441890:	sar    edi,1
  441892:	call   DWORD PTR [eax-0x1f5e00bb]
  441898:	add    DWORD PTR [eax],0xffffff83
  44189b:	pusha  
  44189c:	sbb    al,BYTE PTR [ebx-0xef0067]
  4418a2:	xor    DWORD PTR [ecx],0xffffffb1
  4418a5:	add    BYTE PTR [ebx],al
  4418a7:	call   0xd1c71935
  4418ac:	inc    edi
  4418ad:	dec    edx
  4418af:	int3   
  4418b0:	(bad)  
  4418b1:	(bad)  
  4418b2:	dec    ecx
  4418b4:	pop    ebp
  4418b5:	int3   
  4418b6:	and    dl,bh
  4418b8:	inc    DWORD PTR [eax]
  4418ba:	or     ecx,0xfffffff0
  4418bd:	inc    edx
  4418bf:	push   DWORD PTR [esi-0x1]
  4418c2:	dec    DWORD PTR [ebx+0x2f]
  4418c5:	add    BYTE PTR [edx+eax*4],cl
  4418c8:	(bad)  
  4418c9:	dec    DWORD PTR [ecx+0x76ff496a]
  4418cf:	call   FWORD PTR [ebx]
  4418d1:	add    BYTE PTR [ebx+0x61fff214],al
  4418d7:	sar    bh,cl
  4418d9:	(bad)  
  4418da:	dec    DWORD PTR [ebp+0xf08339]
  4418e0:	xchg   ebx,eax
  4418e1:	dec    esp
  4418e3:	sahf   
  4418e4:	ins    BYTE PTR es:[edi],dx
  4418e5:	add    BYTE PTR [ebp-0x6f],ah
  4418e8:	add    bh,bh
  4418ea:	inc    DWORD PTR [esp+esi*2-0x77]
  4418ee:	mov    bh,bh
  4418f0:	fdivr  st,st(7)
  4418f2:	int3   
  4418f3:	stos   BYTE PTR es:[edi],al
  4418f4:	lahf   
  4418f5:	add    dh,ah
  4418f7:	pusha  
  4418f8:	add    BYTE PTR [ebx-0x26b400],al
  4418fe:	xor    bh,bh
  441900:	sub    eax,0xb6e9cc83
  441905:	inc    eax
  441907:	sar    bh,1
  441909:	add    BYTE PTR [ecx+0x58839686],cl
  44190f:	(bad)  
  441910:	stc    
  441911:	add    BYTE PTR [ebx-0x21005405],al
  441917:	and    BYTE PTR [ebx+0x21970083],al
  44191d:	inc    edx
  44191f:	dec    DWORD PTR [edx]
  441921:	cmp    edi,0x69
  441924:	sbb    DWORD PTR [eax],eax
  441926:	add    esi,DWORD PTR [esi-0x77]
  441929:	add    bh,bh
  44192b:	push   0x3d
  44192d:	add    BYTE PTR [ebx],ch
  44192f:	int3   
  441930:	pop    esi
  441931:	add    bh,bh
  441933:	sub    eax,0x777890b
  441938:	dec    esp
  44193a:	(bad)  
  44193b:	mov    ebx,0xffafffbe
  441940:	adc    al,BYTE PTR [ebx+0x2deb83]
  441946:	(bad)  
  441947:	retf   0xff00
  44194a:	push   edi
  44194c:	out    0xff,al
  44194e:	ins    BYTE PTR es:[edi],dx
  44194f:	dec    DWORD PTR [edi+edi*8+0x0]
  441953:	mov    edx,esi
  441955:	cmp    DWORD PTR [ebx+0x22],0xffffffff
  441959:	add    bh,bh
  44195b:	pop    eax
  44195c:	cmp    BYTE PTR [eax],al
  44195e:	dec    edx
  44195f:	call   FWORD PTR [esi]
  441961:	add    bh,bh
  441963:	sbb    BYTE PTR [edx-0x7c92d177],0xff
  44196a:	jmp    FWORD PTR [esi-0x7cc90001]
  441970:	mov    ch,0xff
  441972:	call   FWORD PTR [ebx+0x61bd8367]
  441978:	dec    esp
  44197a:	inc    edx
  44197c:	sbb    eax,0xbbffd800
  441981:	add    bh,bh
  441983:	mov    ebp,gs
  441985:	call   DWORD PTR [edi-0x7c3333ea]
  44198b:	hlt    
  44198c:	in     eax,0xff
  44198e:	jecxz  0x44198f
  441990:	xor    ecx,esp
  441992:	call   DWORD PTR [eax]
  441994:	cmp    al,0x0
  441996:	mov    ebx,?
  441998:	add    BYTE PTR [ebx-0x51fa7d],al
  44199e:	adc    al,BYTE PTR [eax]
  4419a0:	mov    ebp,0xed5489ff
  4419a5:	call   DWORD PTR [eax+0x21]
  4419a8:	mov    edi,edi
  4419aa:	mov    DWORD PTR [eax-0x8],ecx
  4419ad:	push   DWORD PTR [edi+edi*8-0x2e007620]
  4419b4:	imul   ecx,DWORD PTR [ecx-0x7c8314],0xffffffff
  4419bb:	aaa    
  4419bc:	(bad)  
  4419bd:	(bad)  
  4419be:	mov    esi,0x89ffeb00
  4419c3:	xchg   ebp,eax
  4419c4:	les    ecx,FWORD PTR [ecx-0x3333e50a]
  4419ca:	call   FWORD PTR [esi-0x6300c1]
  4419d0:	(bad)  
  4419d1:	add    BYTE PTR [eax],al
  4419d3:	dec    ecx
  4419d4:	inc    edx
  4419d5:	add    BYTE PTR [ebp-0x2d],dl
  4419d8:	add    BYTE PTR [eax],al
  4419da:	push   ecx
  4419dc:	icebp  
  4419dd:	dec    DWORD PTR [eax]
  4419df:	add    cl,ah
  4419e1:	inc    DWORD PTR [eax]
  4419e3:	hlt    
  4419e4:	ins    BYTE PTR es:[edi],dx
  4419e5:	add    BYTE PTR [esi],dl
  4419e7:	push   ss
  4419e8:	inc    DWORD PTR [eax]
  4419ea:	add    BYTE PTR [edx],dh
  4419ec:	mov    al,ds:0xb2008200
  4419f1:	dec    esp
  4419f3:	jge    0x4419f1
  4419f5:	(bad)  
  4419f6:	clc    
  4419f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4419f8:	add    BYTE PTR [eax],al
  4419fa:	add    BYTE PTR [edx-0x6d],dh
  4419fd:	add    BYTE PTR [esi-0x1],bh
  441a00:	fcos   
  441a02:	jmp    FWORD PTR [edi-0x1b]
  441a05:	dec    DWORD PTR [esi]
  441a07:	add    DWORD PTR [ebx-0x7edaff77],0x66ff5200
  441a11:	add    bh,bh
  441a13:	push   0x1c3a89ab
  441a18:	add    bh,bh
  441a1a:	add    BYTE PTR [edx],dl
  441a1c:	sbb    edi,edi
  441a1e:	stos   DWORD PTR es:[edi],eax
  441a1f:	inc    DWORD PTR [ebx+eax*4]
  441a22:	jmp    FWORD PTR [ecx+0x5a]
  441a25:	add    BYTE PTR [ebp+0x5a],bh
  441a28:	(bad)  
  441a29:	(bad)  
  441a2a:	jmp    FWORD PTR [edx]
  441a2c:	test   ah,cl
  441a2e:	add    BYTE PTR [ebx+0x18ff00f7],al
  441a34:	cwde   
  441a35:	sbb    DWORD PTR [ebx-0x7cff0014],0xffffffd2
  441a3c:	nop
  441a3d:	add    DWORD PTR [ebp-0x76d601],0xf
  441a44:	outs   dx,BYTE PTR ds:[esi]
  441a45:	call   FWORD PTR [ecx]
  441a47:	(bad)  
  441a48:	int3   
  441a49:	(bad)  
  441a4a:	call   FWORD PTR [esi-0x332f00de]
  441a50:	test   BYTE PTR [ebx+0x1fe9ff],al
  441a56:	ret    
  441a57:	jae    0x441a58
  441a59:	add    bh,bh
  441a5b:	outs   dx,DWORD PTR ds:[esi]
  441a5c:	pop    ebp
  441a5d:	add    BYTE PTR [ebp-0x1],al
  441a60:	pop    esp
  441a61:	dec    esp
  441a63:	mov    bl,0x62
  441a65:	int3   
  441a66:	and    DWORD PTR [esi-0x1],ebp
  441a69:	cmp    edi,0xffffffe9
  441a6c:	scas   eax,DWORD PTR es:[edi]
  441a6d:	add    BYTE PTR [ebx+0x0],cl
  441a70:	idiv   bh
  441a72:	mov    DWORD PTR [esi-0x4ae37cf7],ebx
  441a78:	add    bh,bh
  441a7a:	add    dh,dl
  441a7c:	(bad)  
  441a7e:	pop    edx
  441a7f:	add    ah,ch
  441a81:	inc    DWORD PTR [eax]
  441a83:	push   esi
  441a84:	xchg   ebx,eax
  441a85:	add    cl,ch
  441a87:	mov    esi,0xcaff8300
  441a8c:	xor    ecx,esp
  441a8e:	ins    DWORD PTR es:[edi],dx
  441a8f:	mov    DWORD PTR [ebx],ebx
  441a91:	or     esp,0x62
  441a94:	adc    bh,bh
  441a96:	xchg   ebp,eax
  441a97:	aad    0x0
  441a99:	mov    esp,ecx
  441a9b:	loop   0x441a2b
  441a9d:	(bad)  
  441a9e:	jge    0x441a9f
  441aa0:	dec    ebp
  441aa1:	add    DWORD PTR [eax],0xffffffb9
  441aa4:	mov    WORD PTR [ebx-0x33a216],es
  441aaa:	dec    DWORD PTR [ebx]
  441aac:	pop    edx
  441aad:	add    BYTE PTR ds:0xffe000,al
  441ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441ab4:	icebp  
  441ab5:	(bad)  
  441ab6:	jl     0x441ad0
  441ab8:	cmp    edi,0xffffffff
  441abb:	sbb    BYTE PTR [eax+0x79ff6883],bh
  441ac1:	inc    DWORD PTR [eax]
  441ac3:	push   0x3b40ffdb
  441ac8:	(bad)  
  441ac9:	inc    DWORD PTR [eax]
  441acb:	xchg   ebp,ebx
  441acd:	add    BYTE PTR [ebx],bl
  441acf:	call   FWORD PTR [eax]
  441ad1:	inc    DWORD PTR [eax]
  441ad3:	push   edx
  441ad4:	sbb    BYTE PTR [eax],al
  441ad6:	les    edi,FWORD PTR [esi+0xeffcc00]
  441adc:	pop    ebp
  441add:	add    BYTE PTR [ebx-0xf734],dh
  441ae3:	leave  
  441ae4:	xchg   esp,eax
  441ae5:	dec    DWORD PTR [ebx]
  441ae7:	cmp    eax,0xc83ffff
  441aec:	scas   eax,DWORD PTR es:[edi]
  441aed:	xor    DWORD PTR [ebx],0xffffffff
  441af0:	mov    bh,0xff
  441af2:	add    BYTE PTR [edi],al
  441af4:	lods   al,BYTE PTR ds:[esi]
  441af5:	call   FWORD PTR [eax+0x40]
  441af8:	(bad)  
  441af9:	inc    DWORD PTR [eax]
  441afb:	in     eax,dx
  441afc:	xchg   DWORD PTR [eax],eax
  441afe:	sub    edi,edi
  441b00:	lds    ecx,FWORD PTR [ecx+0xae6183]
  441b06:	sub    eax,DWORD PTR [ecx-0x1]
  441b09:	int3   
  441b0a:	cmp    DWORD PTR [edi-0x193337],0xffffffd9
  441b11:	mov    DWORD PTR [ebx+0x34ff10a3],eax
  441b17:	xchg   edx,eax
  441b18:	inc    DWORD PTR [ebx-0x932a01]
  441b1e:	jmp    0x43a022
  441b23:	clc    
  441b24:	cmp    edi,0xffffffdd
  441b27:	mov    eax,0x8acc0083
  441b2c:	push   edx
  441b2d:	add    BYTE PTR [esi-0x337c3b01],ah
  441b33:	or     eax,DWORD PTR cs:[eax]
  441b36:	and    eax,0xff00ff20
  441b3b:	in     eax,dx
  441b3c:	push   ds
  441b3d:	int3   
  441b3e:	cmp    eax,DWORD PTR [eax]
  441b40:	jno    0x441b42
  441b42:	dec    DWORD PTR [edx]
  441b44:	icebp  
  441b45:	xor    DWORD PTR [esi-0x60],0xffffffff
  441b49:	inc    DWORD PTR [ebx-0x47ff9026]
  441b4f:	add    BYTE PTR [eax],dh
  441b51:	add    bh,bh
  441b53:	inc    BYTE PTR fs:[ebx+0xd770]
  441b5a:	xor    DWORD PTR [ebx+esi*2+0x0],0xb
  441b5f:	jmp    DWORD PTR [esi+0x0]
  441b62:	int3   
  441b63:	pop    esi
  441b64:	dec    eax
  441b65:	add    BYTE PTR [edi],bl
  441b67:	sbb    eax,0x2eff00ff
  441b6c:	xchg   esp,eax
  441b6d:	xor    DWORD PTR [ebx],0x0
  441b70:	dec    esp
  441b71:	add    bh,bh
  441b73:	mov    edx,0xc7e1ff52
  441b78:	cmp    edi,0xffffffff
  441b7b:	mov    dl,BYTE PTR [edi-0x3e00567d]
  441b81:	or     esp,0xffffffeb
  441b84:	and    BYTE PTR [ebx-0x33ba0d],al
  441b8a:	inc    DWORD PTR [edi+0x42]
  441b8d:	add    BYTE PTR [ebp+0x0],ch
  441b90:	xchg   ebx,eax
  441b91:	add    DWORD PTR [ebx-0x210003b7],0x1c
  441b98:	(bad)  
  441b99:	(bad)  
  441b9a:	jmp    esi
  441b9c:	cmp    DWORD PTR [ebx-0x50048],eax
  441ba2:	inc    DWORD PTR [ebx]
  441ba4:	loopne 0x441ba5
  441ba6:	dec    edi
  441ba7:	int    0xff
  441ba9:	dec    DWORD PTR [ecx+0x71002882]
  441baf:	add    BYTE PTR ds:0x23dfffcc,bl
  441bb5:	add    cl,dh
  441bb7:	pop    eax
  441bb8:	add    BYTE PTR [ecx-0x33aa5301],cl
  441bbe:	xor    edi,edi
  441bc0:	mov    DWORD PTR cs:[eax],eax
  441bc3:	enter  0xfffd,0x76
  441bc7:	je     0x441bc8
  441bc9:	add    BYTE PTR [eax],al
  441bcb:	mov    ebx,DWORD PTR [edx-0x1]
  441bce:	cmp    edi,edi
  441bd0:	inc    BYTE PTR [ebx-0x33573501]
  441bd6:	iret   
  441bd7:	add    al,BYTE PTR [eax]
  441bd9:	add    BYTE PTR [ecx-0x157c9af7],cl
  441bdf:	int3   
  441be0:	mov    edi,?
  441be2:	dec    DWORD PTR [edx+eiz*4]
  441be5:	int3   
  441be6:	inc    eax
  441be7:	push   ebp
  441be8:	inc    DWORD PTR [eax]
  441bea:	int3   
  441beb:	stos   DWORD PTR es:[edi],eax
  441bec:	int    0x0
  441bee:	sahf   
  441bef:	add    BYTE PTR [esi],dl
  441bf1:	(bad)  
  441bf2:	(bad)  
  441bf3:	(bad)  
  441bf4:	arpl   WORD PTR [eax],ax
  441bf6:	ins    DWORD PTR es:[edi],dx
  441bf7:	jno    0x441bc5
  441bf9:	add    bh,bh
  441bfb:	aad    0x45
  441bfd:	add    BYTE PTR [edi-0x7c7cab00],bh
  441c03:	in     al,0x99
  441c05:	call   ebx
  441c07:	sahf   
  441c08:	inc    DWORD PTR [eax]
  441c0a:	add    BYTE PTR [esi],dl
  441c0c:	fiadd  WORD PTR [eax]
  441c0e:	ins    DWORD PTR es:[edi],dx
  441c0f:	inc    DWORD PTR [esi-0x76a73400]
  441c15:	xor    DWORD PTR [edi-0x7c33a9],0x4d
  441c1c:	xchg   edi,edi
  441c1e:	jns    0x441c1f
  441c20:	fisttp QWORD PTR [ecx-0xe30c34]
  441c26:	out    dx,eax
  441c27:	add    esp,ecx
  441c29:	(bad)  
  441c2a:	dec    DWORD PTR [ecx-0xf47c33]
  441c30:	push   esi
  441c31:	(bad)  
  441c32:	push   DWORD PTR ds:0x8d17ffe4
  441c38:	add    bh,bh
  441c3a:	inc    DWORD PTR [ebp+0x2b00a0]
  441c40:	push   ebx
  441c41:	cmp    edi,0x54
  441c44:	jnp    0x441bcf
  441c46:	jmp    0x441c30
  441c48:	inc    DWORD PTR [eax]
  441c4a:	jmp    FWORD PTR [edi+0x2f]
  441c4d:	and    ebx,0xffffffff
  441c50:	aad    0xff
  441c52:	add    BYTE PTR [esi],al
  441c54:	add    eax,0xff7e6eff
  441c59:	int3   
  441c5a:	jmp    DWORD PTR [ebp+eax*8-0x34]
  441c5e:	jmp    0x441be3
  441c60:	xor    bh,bh
  441c62:	jmp    FWORD PTR [ebx]
  441c64:	cmp    edi,0x89009afa
  441c6a:	add    dl,al
  441c6c:	call   0x83ff:0xf1892cff
  441c73:	push   ss
  441c74:	add    BYTE PTR ds:[eax-0x37],bh
  441c78:	inc    DWORD PTR [eax]
  441c7a:	add    bl,bl
  441c7c:	sar    bh,1
  441c7e:	outs   dx,BYTE PTR ds:[esi]
  441c7f:	add    bl,bl
  441c81:	or     DWORD PTR [ecx+0x1bff287e],0x6a
  441c88:	add    ah,cl
  441c8a:	add    BYTE PTR [esi+ebp*1-0x16ff3001],dh
  441c91:	add    DWORD PTR [ebx+0x24ff765e],0x38
  441c98:	inc    DWORD PTR [eax]
  441c9a:	mov    edx,esi
  441c9c:	pop    ss
  441c9d:	dec    esi
  441c9f:	call   edx
  441ca1:	(bad)  
  441ca2:	inc    DWORD PTR ds:0xaa4fffa8
  441ca8:	(bad)  
  441ca9:	inc    DWORD PTR [eax]
  441cab:	mov    ecx,esi
  441cad:	mov    ebx,esp
  441caf:	push   DWORD PTR [ebp+0x0]
  441cb2:	adc    DWORD PTR [eax],0x46
  441cb5:	call   FWORD PTR [edi]
  441cb7:	xchg   ebp,eax
  441cb8:	inc    DWORD PTR [ebx-0x39b701]
  441cbe:	jae    0x441cc0
  441cc0:	inc    esi
  441cc1:	dec    DWORD PTR [ecx+0xffe434]
  441cc7:	jo     0x441c4c
  441cc9:	inc    DWORD PTR [eax]
  441ccb:	in     eax,0xd3
  441ccd:	mov    DWORD PTR ds:0xffcfff,ecx
  441cd3:	pop    ebp
  441cd4:	leave  
  441cd5:	jmp    DWORD PTR [esi-0x9e]
  441cdb:	arpl   WORD PTR [esi+0x69ccd889],dx
  441ce1:	inc    DWORD PTR [eax]
  441ce3:	push   0xf7ce009a
  441ce8:	add    bh,bh
  441cea:	(bad)  
  441ceb:	jle    0x441cd1
  441ced:	(bad)  
  441cee:	jmp    0x83cdf5f3
  441cf3:	jmp    0x441ccb
  441cf5:	int3   
  441cf6:	or     eax,esi
  441cf8:	int3   
  441cf9:	add    bh,bh
  441cfb:	dec    ecx
  441cfc:	sbb    eax,0x7d83a7cc
  441d01:	(bad)  
  441d02:	call   DWORD PTR [ebp-0x7143ff9f]
  441d08:	dec    DWORD PTR [ecx-0x7cefd501]
  441d0e:	jge    0x441d10
  441d10:	inc    ecx
  441d11:	mov    DWORD PTR [ebx-0x3cff103b],eax
  441d17:	mov    ds:0xf58900ff,al
  441d1c:	loope  0x441d1e
  441d1e:	inc    DWORD PTR cs:[esi]
  441d21:	inc    DWORD PTR [ebx-0x38ff30e4]
  441d27:	inc    eax
  441d28:	inc    DWORD PTR [eax]
  441d2a:	(bad)  
  441d2b:	cmp    BYTE PTR [ebp-0x4b008901],al
  441d31:	add    bh,bh
  441d33:	mov    ah,0x2b
  441d35:	(bad)  
  441d36:	mov    eax,0xff3d
  441d3b:	mov    bl,bl
  441d3d:	(bad)  
  441d3e:	mov    eax,0xff896489
  441d43:	aam    0xa8
  441d45:	jmp    FWORD PTR [ecx+0x36]
  441d48:	add    BYTE PTR [eax],al
  441d4a:	jmp    DWORD PTR [esi]
  441d4c:	fdivr  st,st(7)
  441d4e:	in     al,dx
  441d4f:	jmp    DWORD PTR [edx]
  441d51:	(bad)  
  441d52:	dec    DWORD PTR [ebx+0x2c]
  441d55:	int3   
  441d56:	jmp    0x441d04
  441d58:	(bad)  
  441d59:	(bad)  
  441d5a:	(bad)  
  441d5b:	jmp    0xff49:0xff9389c5
  441d62:	int3   
  441d63:	xor    al,0x12
  441d65:	int3   
  441d66:	and    eax,0xffff0e
  441d6b:	mov    eax,0x89a2ff6e
  441d70:	add    bh,bh
  441d72:	add    al,dh
  441d74:	lahf   
  441d75:	or     DWORD PTR [edi-0xff3e],0x2b
  441d7c:	pop    esp
  441d7d:	sbb    DWORD PTR [ebx],0xffffffff
  441d80:	idiv   edi
  441d82:	int3   
  441d83:	dec    ebx
  441d84:	stc    
  441d85:	jmp    DWORD PTR [edi-0x2]
  441d88:	add    BYTE PTR [eax],al
  441d8a:	mov    DWORD PTR [esp+esi*8],ecx
  441d8d:	jmp    FWORD PTR [eax]
  441d8f:	adc    DWORD PTR [eax+eax*1-0x1],0x60
  441d94:	adc    edi,edi
  441d96:	loopne 0x441df4
  441d98:	dec    esp
  441d9a:	add    BYTE PTR [esp+eax*8+0x5883d500],dl
  441da1:	(bad)  
  441da2:	inc    DWORD PTR [ecx]
  441da4:	ds add dh,cl
  441da7:	and    eax,0x1ff8900
  441dac:	sbb    BYTE PTR [eax],al
  441dae:	daa    
  441daf:	mov    DWORD PTR [esi-0x34],edx
  441db2:	call   FWORD PTR [edx-0x63]
  441db5:	add    BYTE PTR [ebp+eiz*4+0x7ccffff],dh
  441dbc:	adc    BYTE PTR [eax],al
  441dbe:	xchg   ebp,eax
  441dbf:	add    BYTE PTR [eax-0x6e9dff7d],bh
  441dc5:	add    BYTE PTR [ecx-0x62],bl
  441dc8:	int3   
  441dc9:	add    BYTE PTR [ebx-0x1100045e],al
  441dcf:	add    BYTE PTR [edi],al
  441dd1:	inc    DWORD PTR [eax]
  441dd3:	shr    edx,cl
  441dd5:	sub    edx,0x5e
  441dd8:	int3   
  441dd9:	add    BYTE PTR [ebx-0x78ff46db],al
  441ddf:	add    DWORD PTR [ecx+0x59870083],0x0
  441de6:	mov    ecx,0x83ff004f
  441deb:	pop    ss
  441dec:	fmul   QWORD PTR [ecx+0x7b8904]
  441df2:	jmp    FWORD PTR [edx]
  441df4:	xchg   ah,cl
  441df6:	or     al,0x25
  441df8:	(bad)  
  441df9:	inc    DWORD PTR [eax]
  441dfb:	xor    DWORD PTR [edi+edi*8-0x2b336d],ecx
  441e02:	call   edx
  441e04:	outs   dx,DWORD PTR ds:[esi]
  441e05:	call   esp
  441e07:	ss int3 
  441e09:	inc    DWORD PTR [eax]
  441e0b:	jmp    0x441de1
  441e0d:	add    BYTE PTR [ebx-0xff5200],ch
  441e13:	sbb    eax,0xdf8683dc
  441e18:	(bad)  
  441e19:	(bad)  
  441e1a:	(bad)  
  441e1b:	js     0x441db1
  441e1d:	add    BYTE PTR [edx-0x34],bh
  441e20:	(bad)  
  441e21:	int3   
  441e22:	jmp    FWORD PTR [edx+0x2b]
  441e25:	inc    DWORD PTR [ebx-0x7c7c7cd7]
  441e2b:	popf   
  441e2c:	or     eax,0xfd831600
  441e31:	add    bh,bh
  441e33:	add    DWORD PTR [esi],esp
  441e35:	add    BYTE PTR [eax+edx*2+0xdffffff],ch
  441e3c:	(bad)  
  441e3d:	adc    DWORD PTR [edx],0x0
  441e40:	rol    BYTE PTR [ebx-0xf5077],0x51
  441e47:	adc    eax,0x14ffff89
  441e4c:	sub    eax,0x5200f900
  441e51:	add    bh,bh
  441e53:	and    eax,0x6a30ff77
  441e58:	int3   
  441e59:	int3   
  441e5a:	add    dl,dh
  441e5c:	aam    0xcc
  441e5e:	jno    0x441e60
  441e60:	cld    
  441e61:	(bad)  
  441e62:	jmp    FWORD PTR [esi+0x6a89ff7b]
  441e68:	add    bh,bh
  441e6a:	mov    eax,edi
  441e6c:	(bad)  
  441e6e:	lds    eax,FWORD PTR [ebx-0x7676ff05]
  441e74:	sahf   
  441e75:	add    ch,bh
  441e77:	(bad)  
  441e78:	int3   
  441e79:	dec    DWORD PTR [ecx+0x4aff6633]
  441e7f:	call   DWORD PTR [esi]
  441e81:	(bad)  
  441e82:	jmp    DWORD PTR [edi+0x13a983fd]
  441e88:	add    ah,cl
  441e8a:	add    BYTE PTR [ecx],dh
  441e8c:	jl     0x441e17
  441e8e:	xchg   esi,eax
  441e8f:	add    BYTE PTR [eax+eax*1-0x33026b01],al
  441e96:	ret    
  441e97:	xor    al,0xcc
  441e99:	dec    esp
  441e9b:	ins    DWORD PTR es:[edi],dx
  441e9c:	add    al,0x0
  441e9e:	xchg   ecx,eax
  441e9f:	(bad)  
  441ea0:	out    dx,eax
  441ea1:	add    ah,cl
  441ea3:	out    dx,al
  441ea4:	sub    al,BYTE PTR [ebx-0x7c007fcb]
  441eaa:	push   DWORD PTR [eax-0x51]
  441ead:	int3   
  441eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441eaf:	add    BYTE PTR [ecx+0x43010089],cl
  441eb5:	add    BYTE PTR [ebx+0x48],ch
  441eb8:	add    bh,bh
  441eba:	(bad)  
  441ebb:	lods   al,BYTE PTR ds:[esi]
  441ebd:	add    BYTE PTR [edx-0x1],bh
  441ec0:	cld    
  441ec1:	(bad)  
  441ec2:	call   DWORD PTR [edx-0x1cd80031]
  441ec8:	inc    DWORD PTR [eax]
  441eca:	dec    esp
  441ecc:	and    eax,0x7400bfff
  441ed1:	inc    DWORD PTR [eax]
  441ed3:	int3   
  441ed4:	enter  0x3283,0xd2
  441ed8:	add    bh,bh
  441eda:	add    BYTE PTR [eax],cl
  441edc:	addr16 int3 
  441ede:	dec    ebx
  441edf:	push   DWORD PTR [ebp-0x1]
  441ee2:	inc    DWORD PTR [ecx]
  441ee4:	adc    eax,0xffaf35ff
  441ee9:	inc    DWORD PTR [ebx-0x44008a2a]
  441eef:	mov    DWORD PTR [edi+edi*8],edi
  441ef2:	jmp    DWORD PTR [ebx+0x6b09cc80]
  441ef8:	add    bh,bh
  441efa:	add    BYTE PTR [ecx+0x38],ah
  441efd:	add    BYTE PTR [ecx-0x76ff1901],ch
  441f03:	xor    cl,BYTE PTR [edx-0x1]
  441f06:	ret    
  441f07:	arpl   sp,cx
  441f09:	add    bh,bh
  441f0b:	shl    BYTE PTR [eax],1
  441f0d:	add    BYTE PTR [ecx-0x7cff9601],bh
  441f13:	push   ebx
  441f14:	sbb    al,0xff
  441f16:	adc    bl,BYTE PTR [esi-0x7c760100]
  441f1c:	mov    ecx,0xf0009900
  441f21:	inc    DWORD PTR [eax]
  441f23:	(bad)  
  441f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441f25:	adc    DWORD PTR [ebx-0x16],0x16
  441f2c:	cmp    eax,0x3000200
  441f31:	add    BYTE PTR [eax],al
  441f33:	leave  
  441f34:	inc    eax
  441f35:	(bad)  
  441f36:	jnp    0x441ee7
  441f38:	or     esp,0xffffffff
  441f3b:	enter  0xcc3e,0xab
  441f3f:	add    BYTE PTR [edx],dl
  441f41:	mov    DWORD PTR [ecx+0x2ff3692],ecx
  441f47:	xlat   BYTE PTR ds:[ebx]
  441f48:	(bad)  
  441f49:	(bad)  
  441f4a:	call   ebx
  441f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441f4d:	add    BYTE PTR [ecx-0x257d],bl
  441f53:	stos   BYTE PTR es:[edi],al
  441f54:	mov    ebx,0x83b923ff
  441f59:	add    bh,bh
  441f5b:	nop
  441f5c:	out    dx,eax
  441f5d:	add    al,ch
  441f5f:	mov    DWORD PTR [esi-0x5aac0001],edx
  441f65:	add    DWORD PTR [edi],0xffffff94
  441f68:	inc    DWORD PTR [eax]
  441f6a:	sub    DWORD PTR [edi],0x50
  441f6d:	mov    ecx,edi
  441f6f:	call   DWORD PTR [ebx+0x50ed00ff]
  441f75:	dec    DWORD PTR [esi-0x65]
  441f78:	mov    DWORD PTR [ecx+0x48edff],ecx
  441f7e:	int    0x83
  441f80:	jg     0x441f81
  441f82:	jmp    FWORD PTR [esi+edi*2-0x1]
  441f86:	push   cs
  441f87:	or     edi,edi
  441f89:	mov    esp,ecx
  441f8b:	fld    st(5)
  441f8d:	add    ch,ah
  441f8f:	(bad)  
  441f90:	jmp    0x441f5e
  441f92:	sub    DWORD PTR [esi-0x7db30026],0xffffffff
  441f99:	add    bh,bh
  441f9b:	mov    dh,0x8
  441f9d:	sbb    esp,0xffffffff
  441fa0:	mov    ah,0xff
  441fa2:	dec    ebx
  441fa4:	mov    edi,edi
  441fa6:	mov    edx,DWORD PTR [edx-0x77]
  441fa9:	add    BYTE PTR [eax],al
  441fab:	mov    ecx,0xe000b4
  441fb0:	dec    ebp
  441fb1:	inc    DWORD PTR [eax]
  441fb3:	sbb    eax,0x881ff88
  441fb8:	inc    DWORD PTR [eax]
  441fba:	jmp    DWORD PTR [eax+0x34]
  441fbd:	(bad)  
  441fbe:	jl     0x441fbf
  441fc0:	clc    
  441fc1:	add    bh,bh
  441fc3:	jl     0x441fbe
  441fc5:	add    BYTE PTR [edi-0x12],ch
  441fc8:	inc    DWORD PTR [eax]
  441fca:	mov    ebp,edi
  441fcc:	push   ebp
  441fcd:	call   DWORD PTR [edi+0x0]
  441fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441fd1:	(bad)  
  441fd2:	jmp    FWORD PTR [eax+0x56ef00c8]
  441fd8:	cmp    edi,0x0
  441fdb:	jl     0x441fca
  441fdd:	int3   
  441fde:	std    
  441fdf:	(bad)  
  441fe0:	in     al,dx
  441fe1:	(bad)  
  441fe2:	jmp    FWORD PTR [eax]
  441fe4:	xor    edi,edi
  441fe6:	xor    eax,esp
  441fe8:	cmp    edi,0xffffffff
  441feb:	inc    esi
  441fec:	jno    0x441fee
  441fee:	das    
  441fef:	sbb    DWORD PTR [esi],0xffffff89
  441ff2:	add    BYTE PTR [ebx+0x5c84fff5],dl
  441ff8:	inc    DWORD PTR [eax]
  441ffa:	add    al,ch
  441ffc:	jmp    0xff00:0x1d839e00
  442003:	clc    
  442004:	mov    ch,0xff
  442006:	cmp    al,0xf
  442008:	(bad)  
  442009:	(bad)  
  44200a:	dec    DWORD PTR [ecx+0x60]
  44200d:	add    BYTE PTR [edi+edi*8],bl
  442010:	lea    eax,[ebx-0x355700]
  442016:	jle    0x441ffd
  442018:	int3   
  442019:	add    ah,cl
  44201b:	sub    eax,0xffedff20
  442020:	cdq    
  442021:	cmp    edi,0xffffffdf
  442024:	sbb    BYTE PTR [eax],al
  442026:	or     BYTE PTR [eax-0x40767601],0x7d
  44202d:	add    BYTE PTR [edi+edi*8],dl
  442030:	pop    ds
  442031:	(bad)  
  442032:	inc    DWORD PTR [edi+ecx*1-0x96a800]
  442039:	add    ah,cl
  44203b:	inc    ecx
  44203c:	pusha  
  44203d:	add    BYTE PTR [ecx-0x1],al
  442040:	mov    ch,0xff
  442042:	int3   
  442043:	std    
  442044:	add    al,BYTE PTR [eax]
  442046:	dec    ebp
  442047:	mov    al,ds:0x6effffcc
  44204c:	xor    eax,DWORD PTR [eax]
  44204e:	cdq    
  44204f:	jmp    DWORD PTR [esi-0x1]
  442052:	add    BYTE PTR [esi-0xe7f0036],cl
  442058:	add    BYTE PTR [ebx+0xc199ff],al
  44205e:	fwait
  44205f:	adc    ebp,0x0
  442062:	push   edi
  442064:	or     edi,edi
  442066:	fsub   QWORD PTR [ecx]
  442068:	int3   
  442069:	cmp    edi,0xffffffec
  44206c:	inc    esp
  44206d:	int3   
  44206e:	push   ebp
  44206f:	(bad)  
  442070:	jmp    0x6600:0x9f2b0000
  442077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442078:	inc    DWORD PTR [ebx-0xd63e01]
  44207e:	push   esp
  44207f:	mov    DWORD PTR [eax],edi
  442081:	add    bh,bh
  442083:	(bad)  
  442084:	push   cs
  442085:	inc    DWORD PTR [ecx]
  442087:	retf   
  442088:	(bad)  
  442089:	(bad)  
  44208a:	jmp    DWORD PTR [ebx+0x15]
  44208d:	call   DWORD PTR [eax+eax*1-0x267cffd2]
  442094:	xor    al,0xff
  442096:	mov    dl,0x54
  442098:	cmp    edi,0xffffffff
  44209b:	retf   0xff3b
  44209e:	jmp    0x44b1a3
  4420a3:	xchg   edi,eax
  4420a4:	aas    
  4420a5:	add    BYTE PTR ds:0xffff839b,cl
  4420ab:	mov    ds:0xff8affa7,eax
  4420b0:	aad    0xff
  4420b2:	add    BYTE PTR [ebx-0x6257ff4c],cl
  4420b8:	add    ah,cl
  4420ba:	(bad)  
  4420bb:	js     0x4420f3
  4420bd:	mov    DWORD PTR [eax+eax*1+0x5c],edi
  4420c1:	int3   
  4420c2:	add    cl,bl
  4420c4:	rol    BYTE PTR [eax],0xcd
  4420c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4420c8:	inc    DWORD PTR [ebx+0x18a300]
  4420ce:	pop    ebx
  4420cf:	call   DWORD PTR [eax]
  4420d1:	cmp    edi,0x33
  4420d4:	mov    eax,0x170aff
  4420d9:	inc    DWORD PTR [eax]
  4420db:	cmp    BYTE PTR [esi],ch
  4420dd:	add    bl,bh
  4420df:	int3   
  4420e0:	sbb    bh,bh
  4420e2:	add    dh,bl
  4420e4:	pop    esi
  4420e5:	int3   
  4420e6:	dec    esi
  4420e7:	and    DWORD PTR [ecx+0x2da18383],ecx
  4420ed:	jmp    FWORD PTR [eax-0x1]
  4420f0:	call   0xfb83:0x122c8983
  4420f7:	test   al,0xff
  4420f9:	(bad)  
  4420fa:	push   DWORD PTR [edi+0x25]
  4420fd:	int3   
  4420fe:	jecxz  0x442100
  442100:	cmp    eax,0x8600ff00
  442105:	push   edx
  442107:	jbe    0x442108
  442109:	(bad)  
  44210a:	(bad)  
  44210b:	call   0x2e2102
  442110:	push   edi
  442111:	int3   
  442112:	int3   
  442113:	in     al,dx
  442114:	sar    edi,cl
  442116:	aas    
  442117:	ds add bh,bh
  44211a:	jmp    edi
  44211c:	jmp    DWORD PTR gs:[edx-0x1]
  442120:	icebp  
  442121:	inc    DWORD PTR [eax]
  442123:	je     0x442106
  442125:	xor    esp,0xffffffdd
  442128:	inc    DWORD PTR [eax]
  44212a:	add    bl,dl
  44212c:	xor    al,0xcc
  44212e:	aaa    
  44212f:	or     ebx,0xffffffff
  442132:	add    BYTE PTR [ecx+0x65],ch
  442135:	add    BYTE PTR [esi+0xff0077],bl
  44213b:	pop    eax
  44213c:	jl     0x4420c7
  44213e:	into   
  44213f:	inc    DWORD PTR [esi]
  442141:	add    DWORD PTR [eax],0x3c
  442144:	inc    eax
  442145:	add    cl,al
  442147:	jnp    0x442148
  442149:	add    BYTE PTR [ebx+0x35002dae],al
  44214f:	add    bh,dl
  442151:	add    bh,bh
  442153:	out    0xc2,al
  442155:	inc    DWORD PTR [esi-0x6c]
  442158:	add    bh,bh
  44215a:	add    BYTE PTR [eax-0x7c1d3399],cl
  442160:	pop    esi
  442161:	dec    esp
  442163:	inc    esp
  442164:	sbb    BYTE PTR [eax],al
  442166:	or     eax,DWORD PTR [ebx]
  442168:	inc    DWORD PTR [ebx-0x7ca9c601]
  44216e:	ds (bad) 
  442170:	cmp    ecx,esp
  442172:	jmp    DWORD PTR [ebx-0x7bfc7caf]
  442178:	(bad)  
  442179:	(bad)  
  44217a:	inc    DWORD PTR [ebx]
  44217c:	(bad)  
  44217d:	(bad)  
  44217e:	fdivp  st(7),st
  442180:	pop    DWORD PTR [eax]
  442182:	add    BYTE PTR [esi],bh
  442184:	cmp    al,0x0
  442186:	push   0xffffff94
  442188:	add    bh,bh
  44218a:	inc    DWORD PTR [ebp+0x2b]
  44218d:	(bad)  
  44218e:	jmp    0x434593
  442193:	mov    edx,0x7a4e836e
  442198:	cmp    edi,0xffffff83
  44219b:	inc    eax
  44219c:	arpl   di,di
  44219e:	adc    al,BYTE PTR [eax]
  4421a0:	cmp    edi,0xffffffff
  4421a3:	jnp    0x4421bc
  4421a5:	adc    ebx,0x7d
  4421a8:	(bad)  
  4421a9:	(bad)  
  4421aa:	dec    ebx
  4421ac:	push   DWORD PTR ds:[edi]
  4421af:	add    BYTE PTR [edi-0x1],ch
  4421b2:	push   DWORD PTR [esi+0xf]
  4421b5:	jmp    DWORD PTR [edx+0x9a]
  4421bb:	popf   
  4421bc:	jmp    0xff00:0x5affed00
  4421c3:	mov    es,WORD PTR [ebp-0x7c227a01]
  4421c9:	(bad)  
  4421ca:	jmp    FWORD PTR [esi+0x2a]
  4421cd:	add    al,cl
  4421cf:	dec    edi
  4421d1:	int3   
  4421d2:	jmp    DWORD PTR [ebp+0x26178310]
  4421d8:	inc    DWORD PTR [eax]
  4421da:	call   FWORD PTR [ebp+0x970018]
  4421e0:	cwde   
  4421e1:	(bad)  
  4421e2:	jmp    DWORD PTR [edx-0x29]
  4421e5:	add    BYTE PTR [ecx+0xff91],dh
  4421eb:	push   edx
  4421ec:	inc    edi
  4421ed:	call   FWORD PTR [ecx]
  4421ef:	call   eax
  4421f1:	add    bh,bh
  4421f3:	dec    esp
  4421f4:	sub    eax,0xffdf1bff
  4421f9:	(bad)  
  4421fa:	(bad)  
  4421fb:	sti    
  4421fc:	inc    ecx
  4421fd:	adc    DWORD PTR [ebx-0xde00],0xffffffb6
  442204:	dec    eax
  442205:	call   DWORD PTR [ecx-0x7c0000a4]
  44220b:	add    eax,0xff2500fd
  442210:	add    BYTE PTR [bp+di-0x3619],al
  442215:	mov    DWORD PTR [ebx-0x33ac],eax
  44221b:	mov    eax,ds
  44221d:	add    BYTE PTR [ecx+0xff9383],dl
  442223:	add    BYTE PTR [ecx+0x0],ch
  442226:	push   ebp
  442227:	ret    0xff00
  44222a:	call   DWORD PTR [ebp-0x7c6876b8]
  442230:	bound  eax,QWORD PTR [eax]
  442232:	mov    ebx,esp
  442234:	pop    edx
  442235:	cmp    DWORD PTR [eax-0xd3],0xffffffa8
  44223c:	xor    al,0x83
  44223e:	xchg   esi,eax
  44223f:	jmp    DWORD PTR [ecx]
  442241:	cmp    edi,0xffffff92
  442244:	mov    dl,0xcc
  442246:	adc    edx,0xffffffff
  442249:	(bad)  
  44224a:	inc    esi
  44224c:	push   ds
  44224d:	dec    ecx
  44224f:	int3   
  442250:	outs   dx,BYTE PTR ds:[esi]
  442251:	(bad)  
  442252:	push   DWORD PTR [edx]
  442254:	stos   DWORD PTR es:[edi],eax
  442255:	add    BYTE PTR [ecx+0xffcc6b],cl
  44225b:	lock jge 0x44225e
  44225e:	inc    ecx
  44225f:	mov    DWORD PTR [esp+ecx*8+0x31683],edi
  442266:	stos   DWORD PTR es:[edi],eax
  442267:	lock add bh,bh
  44226a:	add    BYTE PTR [esi],bl
  44226c:	xchg   ecx,eax
  44226d:	push   DWORD PTR [ecx]
  44226f:	sbb    DWORD PTR [esi-0x939ff01],0xffffff83
  442276:	jecxz  0x4422e1
  442278:	add    bh,bh
  44227a:	mov    DWORD PTR [esi],edi
  44227c:	xor    edi,edi
  44227e:	or     al,0x83
  442280:	(bad)  
  442281:	inc    DWORD PTR [eax]
  442283:	mov    edx,0xff5a12ff
  442289:	add    ah,cl
  44228b:	jno    0x442287
  44228d:	add    bl,dl
  44228f:	jmp    FWORD PTR [edi]
  442291:	(bad)  
  442292:	(bad)  
  442293:	fadd   QWORD PTR [ebx]
  442295:	jmp    esi
  442297:	rol    DWORD PTR [eax],cl
  442299:	inc    DWORD PTR [eax]
  44229b:	lods   al,BYTE PTR ds:[esi]
  44229c:	ret    
  44229d:	(bad)  
  44229e:	jl     0x4422a0
  4422a0:	test   eax,0x3c1400ff
  4422a5:	sbb    eax,0x7d
  4422a8:	add    bh,bh
  4422aa:	add    BYTE PTR [ecx],dl
  4422ac:	xchg   edi,edi
  4422ae:	adc    eax,0xffff12ff
  4422b3:	int3   
  4422b4:	xor    BYTE PTR [ebx-0x7c00eea7],al
  4422ba:	mov    DWORD PTR ds:0xff26003c,ebp
  4422c0:	hlt    
  4422c1:	add    DWORD PTR [ebx-0x7b7c6dc2],0xffffff81
  4422c8:	add    ah,cl
  4422ca:	add    bh,al
  4422cc:	jg     0x4422ce
  4422ce:	cmp    eax,0xff00e900
  4422d3:	(bad)  
  4422d5:	jmp    FWORD PTR [ebx-0xd]
  4422d8:	inc    DWORD PTR [ebx+0x339900]
  4422de:	push   ss
  4422df:	add    dl,ch
  4422e1:	add    bh,bh
  4422e3:	and    dh,BYTE PTR [edi-0x7cceea01]
  4422e9:	add    DWORD PTR [eax],0xffffff81
  4422ec:	arpl   WORD PTR [eax],ax
  4422ee:	inc    esi
  4422ef:	jmp    DWORD PTR [ecx-0x1]
  4422f2:	call   DWORD PTR [eax-0x2eea3326]
  4422f8:	add    bh,bh
  4422fa:	add    BYTE PTR [edi-0x7c107c90],ch
  442300:	mov    cl,0xff
  442302:	and    DWORD PTR [eax+0x72],0xffffff83
  442306:	pop    eax
  442307:	mov    ah,0xcc
  442309:	dec    DWORD PTR [ecx-0xeffe8a8]
  44230f:	(bad)  
  442310:	cmp    edi,edi
  442312:	inc    DWORD PTR [ebx+ecx*8-0x1]
  442316:	test   DWORD PTR [edi-0x1],ebp
  442319:	int3   
  44231a:	add    cl,bh
  44231c:	fs (bad) 
  44231e:	cli    
  44231f:	jmp    edi
  442321:	cmp    edi,0xffffff97
  442324:	(bad)  
  442325:	jmp    DWORD PTR [edi]
  442327:	and    al,0x83
  442329:	inc    DWORD PTR [ebx+0x53ff57af]
  44232f:	add    BYTE PTR [esi-0x1],ah
  442332:	add    ah,ch
  442334:	add    BYTE PTR [ebx-0xffc29d],al
  44233a:	sub    DWORD PTR [eax+eax*8],0xffffffff
  44233e:	pusha  
  44233f:	xor    DWORD PTR [edx+0x225983ff],0x0
  442346:	push   esi
  442347:	cmp    ecx,esp
  442349:	inc    DWORD PTR [eax]
  44234b:	xchg   ebp,eax
  44234c:	mov    esp,0xc7ffc0ff
  442351:	cmp    edi,0xffffffe3
  442354:	ret    0x6ff
  442357:	mov    bh,bh
  442359:	add    bh,bh
  44235b:	scas   eax,DWORD PTR es:[edi]
  44235c:	push   es
  44235d:	dec    DWORD PTR [ebp+0x0]
  442360:	jge    0x44232e
  442362:	add    dl,bl
  442364:	pop    es
  442365:	(bad)  
  442366:	cmp    esp,edi
  442368:	inc    DWORD PTR [eax]
  44236a:	add    dl,cl
  44236c:	retf   0x86cc
  44236f:	inc    DWORD PTR [ebx-0x1]
  442372:	add    BYTE PTR [esi-0x6a],dh
  442375:	add    BYTE PTR [edi+edi*2-0x34],ch
  442379:	add    BYTE PTR [ebx-0x460034f1],al
  44237f:	add    BYTE PTR [esi],ch
  442381:	cmp    edi,0xffffffdc
  442384:	push   esp
  442385:	add    BYTE PTR [ebp-0xffffd3],ah
  44238b:	cmp    ecx,DWORD PTR [eax]
  44238d:	add    al,dh
  44238f:	add    BYTE PTR [ebp-0x1],dh
  442392:	dec    DWORD PTR [edi-0x3f]
  442395:	int3   
  442396:	leave  
  442397:	jb     0x442399
  442399:	cmp    edi,0x57
  44239c:	pop    ss
  44239d:	add    BYTE PTR [esi-0x1],bl
  4423a0:	pop    edx
  4423a1:	inc    DWORD PTR [ebx-0x3500f8c8]
  4423a7:	xlat   BYTE PTR ds:[ebx]
  4423a8:	mov    edi,edi
  4423aa:	add    BYTE PTR [edi-0x7cb97617],ch
  4423b0:	test   BYTE PTR [eax],al
  4423b2:	call   esp
  4423b4:	notrack jmp eax
  4423b7:	xor    bh,bh
  4423b9:	inc    DWORD PTR [eax]
  4423bb:	jno    0x44243b
  4423bd:	call   FWORD PTR [edx-0x7600f101]
  4423c3:	test   al,0x65
  4423c5:	dec    edi
  4423c7:	dec    esp
  4423c8:	(bad)  
  4423c9:	dec    esp
  4423cb:	test   di,di
  4423ce:	xchg   esp,eax
  4423cf:	add    BYTE PTR [ecx-0x3ffd0000],ch
  4423d5:	add    BYTE PTR [ebx+eiz*2],dl
  4423d8:	dec    DWORD PTR [ecx-0x55ad01]
  4423de:	jl     0x4423e0
  4423e0:	outs   dx,DWORD PTR ds:[esi]
  4423e1:	(bad)  
  4423e2:	inc    DWORD PTR [edi-0x45]
  4423e5:	dec    esi
  4423e7:	fdivr  st,st(7)
  4423e9:	add    BYTE PTR [ebx-0x4d004c22],al
  4423ef:	(bad)  
  4423f0:	mov    eax,0xa8520089
  4423f5:	int3   
  4423f6:	xchg   edi,eax
  4423f7:	xchg   edx,eax
  4423f8:	add    BYTE PTR [ecx-0x971c77],cl
  4423fe:	jmp    0x4423ff
  442400:	jnp    0x442401
  442402:	sbb    DWORD PTR [esi+esi*2],0xffffffff
  442406:	mov    DWORD PTR [edi+edi*8+0x18a2ffcc],ebp
  44240d:	add    BYTE PTR [ebx-0xa01],cl
  442413:	rcl    BYTE PTR [ebx-0x1],1
  442416:	inc    edx
  442417:	jo     0x442418
  442419:	dec    DWORD PTR [ecx+0x7e83d354]
  44241f:	and    DWORD PTR [eax],0xffffff89
  442422:	add    BYTE PTR [ebx+eax*1-0x1],dh
  442426:	shr    BYTE PTR [edi+edi*8+0x0],cl
  44242a:	inc    edx
  44242c:	or     BYTE PTR [ecx-0x3316ffae],0xff
  442433:	(bad)  
  442434:	pusha  
  442435:	push   DWORD PTR [ebx]
  442437:	mov    ebx,0x0
  44243c:	adc    edi,edi
  44243e:	jmp    0x44243f
  442440:	jb     0x4423c5
  442442:	add    ah,dl
  442444:	push   cs
  442445:	int3   
  442446:	or     ebp,DWORD PTR [ebp+0x0]
  442449:	add    bh,bh
  44244b:	cmp    DWORD PTR [eax+eax*1-0x33a40033],esi
  442452:	(bad)  
  442453:	sti    
  442454:	test   eax,0x2f45ff
  442459:	add    bh,bh
  44245b:	in     al,dx
  44245c:	jns    0x44242a
  44245e:	call   FWORD PTR gs:[edx-0x34]
  442462:	dec    edx
  442464:	pop    ebp
  442465:	xor    DWORD PTR [edi+edi*8],0xffffffcc
  442469:	add    bh,bh
  44246b:	int3   
  44246c:	add    BYTE PTR [eax],al
  44246e:	mov    edi,edi
  442470:	jp     0x442471
  442472:	sub    DWORD PTR [ebx],0xffffffd0
  442475:	int3   
  442476:	add    DWORD PTR [ebx+0x3e6c00e2],0xffffff83
  44247d:	or     esp,0xffffff83
  442480:	int    0x0
  442482:	adc    BYTE PTR [edx],ch
  442484:	mov    al,0x0
  442486:	add    BYTE PTR [eax],al
  442488:	imul   eax,DWORD PTR [ebx-0x86bd5],0x83f0ff00
  442492:	xor    al,BYTE PTR [edx-0xffff1f]
  442498:	adc    DWORD PTR fs:[ecx+ecx*1-0xffffa1],0x1d
  4424a1:	call   ecx
  4424a3:	mov    bl,0x28
  4424a5:	add    bh,bh
  4424a7:	inc    eax
  4424a9:	and    DWORD PTR [edi],0xffffff9b
  4424ac:	test   eax,0x50ff00ff
  4424b1:	push   DWORD PTR [edi-0x12]
  4424b4:	jnp    0x442439
  4424b6:	(bad)  
  4424b7:	inc    DWORD PTR [eax+0x143a9dff]
  4424bd:	cmp    edi,0xffffff89
  4424c0:	cmp    cl,BYTE PTR [ecx-0x7c73634a]
  4424c6:	int3   
  4424c7:	add    BYTE PTR [eax+0x0],cl
  4424ca:	popf   
  4424cb:	jnp    0x442502
  4424cd:	cmp    edi,0x0
  4424d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4424d1:	call   eax
  4424d3:	sbb    BYTE PTR [edi+edi*8-0x587700],ah
  4424da:	stos   DWORD PTR es:[edi],eax
  4424db:	leave  
  4424dc:	repnz add BYTE PTR [ebx-0x20767e00],al
  4424e3:	adc    eax,esi
  4424e5:	inc    DWORD PTR [ebx+0x1fff25ff]
  4424eb:	lahf   
  4424ec:	jne    0x4424ed
  4424ee:	add    BYTE PTR [ebx-0x799c00e7],al
  4424f4:	ins    BYTE PTR es:[edi],dx
  4424f5:	inc    DWORD PTR [ebx-0x4a00a501]
  4424fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4424fc:	mov    DWORD PTR [eax],0x990000
  442502:	sbb    edx,0x6f
  442508:	int3   
  442509:	add    BYTE PTR [edx-0x7cff26e6],cl
  44250f:	add    bh,bl
  442511:	call   FWORD PTR [ecx]
  442513:	scas   eax,DWORD PTR es:[edi]
  442514:	and    al,0xff
  442516:	add    BYTE PTR [ecx-0x5a9762f],cl
  44251c:	mov    al,0xff
  44251e:	inc    DWORD PTR [eax]
  442520:	push   0xffffff83
  442522:	jno    0x442599
  442524:	add    WORD PTR [eax],0xffff
  442528:	xchg   edi,edi
  44252a:	shl    ecx,cl
  44252c:	(bad)  
  44252d:	inc    DWORD PTR [eax]
  44252f:	mov    DWORD PTR [ebx+0x73e55d00],edi
  442535:	add    DWORD PTR [eax],0xffffff83
  442538:	dec    ebp
  442539:	(bad)  
  44253a:	push   DWORD PTR [edx-0x9]
  44253d:	(bad)  
  44253e:	(bad)  
  44253f:	jmp    FWORD PTR [ebp-0x34]
  442542:	jno    0x44259d
  442544:	loope  0x442545
  442546:	inc    DWORD PTR [eax]
  442548:	mov    esi,0x24436fcc
  44254d:	add    bh,bh
  44254f:	(bad)  
  442550:	(bad)  
  442552:	mov    esp,0x8383ddab
  442557:	inc    ecx
  442559:	mov    DWORD PTR [esi],ebp
  44255b:	sahf   
  44255c:	cmp    DWORD PTR [eax],eax
  44255e:	(bad)  
  44255f:	inc    ebp
  442561:	add    BYTE PTR [esi],bl
  442563:	sub    eax,0x830000ce
  442568:	in     eax,dx
  442569:	adc    DWORD PTR [ebx-0xff1b47],0x0
  442570:	fiadd  DWORD PTR [eax]
  442572:	pop    eax
  442573:	pushf  
  442574:	or     DWORD PTR [eax],eax
  442576:	add    BYTE PTR [eax],al
  442578:	pushf  
  442579:	(bad)  
  44257a:	cmp    al,0x33
  44257c:	or     eax,DWORD PTR [ebx-0x7c540001]
  442582:	or     eax,0xff00733b
  442587:	add    BYTE PTR [esi],ch
  442589:	jmp    FWORD PTR [ebp+edx*8-0xf]
  44258d:	add    BYTE PTR [eax],al
  44258f:	call   FWORD PTR [ebp-0x1]
  442592:	push   ebp
  442593:	pop    ebx
  442594:	stc    
  442595:	add    BYTE PTR [ebx+0x5dff6100],al
  44259b:	sti    
  44259c:	aas    
  44259d:	add    bh,bh
  44259f:	add    cl,ch
  4425a1:	add    DWORD PTR [ebx+0x1d],0x3c
  4425a5:	mov    edi,edi
  4425a7:	add    BYTE PTR [ebx-0x7d],bl
  4425aa:	data16 (bad) 
  4425ac:	out    dx,eax
  4425ad:	add    bh,bh
  4425af:	jmp    DWORD PTR [esi]
  4425b1:	inc    ecx
  4425b3:	rcl    eax,1
  4425b5:	(bad)  
  4425b6:	dec    esp
  4425b8:	das    
  4425b9:	add    BYTE PTR [esi],ch
  4425bb:	fadd   QWORD PTR [ecx-0x1]
  4425be:	add    BYTE PTR [ecx+0x590b83b0],cl
  4425c4:	sub    edi,edi
  4425c6:	cmp    edi,0xfffffffb
  4425c9:	add    BYTE PTR [edx],ah
  4425cb:	lds    esp,FWORD PTR [ecx+0x7283ff83]
  4425d1:	dec    DWORD PTR [ebx+0xffd045]
  4425d7:	call   ebp
  4425d9:	add    BYTE PTR [ecx-0x3300ad13],ah
  4425df:	int3   
  4425e0:	lea    ecx,[ecx-0x7c4924e7]
  4425e6:	inc    DWORD PTR [ebx+0x22578339]
  4425ec:	out    dx,al
  4425ed:	(bad)  
  4425ee:	(bad)  
  4425ef:	inc    DWORD PTR [esi+0x3b9f36ff]
  4425f5:	cmp    edi,0xffffffcc
  4425f8:	xor    bh,bh
  4425fa:	jmp    0x439e31
  4425ff:	mov    DWORD PTR [edx],eax
  442601:	xor    DWORD PTR [esi-0x7c00017e],0x0
  442608:	and    bh,bh
  44260a:	inc    eax
  44260b:	sbb    eax,0x83ccff14
  442610:	aam    0xff
  442612:	arpl   WORD PTR [edi+edx*4-0x4bffff01],si
  442619:	cmp    DWORD PTR [ecx-0x52],0xffffff8c
  44261d:	add    bh,bh
  44261f:	push   DWORD PTR [esi]
  442621:	add    BYTE PTR [eax+0x3e],ch
  442624:	aam    0xff
  442626:	inc    DWORD PTR [eax]
  442628:	mov    eax,0xea80eb00
  44262d:	mov    DWORD PTR [eax],eax
  44262f:	mov    DWORD PTR [edx+0x0],esp
  442632:	dec    esi
  442633:	repz mov ebp,0x8d00cc00
  442639:	mov    DWORD PTR [esi+0x1a],esp
  44263c:	add    BYTE PTR ss:[eax],al
  44263f:	sbb    edi,0xffffffff
  442642:	leave  
  442643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442644:	in     al,dx
  442645:	add    DWORD PTR [eax],0x0
  442648:	or     eax,0x99fba5cc
  44264d:	(bad)  
  44264e:	(bad)  
  44264f:	call   FWORD PTR [edx]
  442651:	(bad)  
  442652:	fisub  WORD PTR [edx-0x3300ff96]
  442658:	jne    0x442659
  44265a:	fisttp WORD PTR [edx-0x4f]
  44265d:	mov    DWORD PTR [ebx-0x55332b77],eax
  442663:	lea    edx,[edi]
  442665:	cmp    edi,0x0
  442668:	pop    ss
  442669:	xor    DWORD PTR [edx-0x24],0xffffffbd
  44266d:	(bad)  
  44266e:	(bad)  
  44266f:	push   ebp
  442671:	jmp    DWORD PTR [ebp+0x3a]
  442674:	lea    ecx,[ecx-0xe8ff77]
  44267a:	xchg   ecx,eax
  44267b:	loop   0x442684
  44267d:	int3   
  44267e:	(bad)  
  44267f:	push   DWORD PTR ds:0x5778efff
  442685:	dec    esp
  442687:	add    BYTE PTR [esi-0x1],bh
  44268a:	inc    esp
  44268b:	mov    esp,0xffffff3d
  442690:	sub    cl,ah
  442692:	dec    esi
  442693:	into   
  442694:	ins    BYTE PTR es:[edi],dx
  442695:	inc    DWORD PTR [eax]
  442697:	add    cl,al
  442699:	add    bl,ch
  44269b:	icebp  
  44269c:	mov    ch,0x83
  44269e:	mov    DWORD PTR [eax],eax
  4426a0:	mov    ds:0x9b1f9900,eax
  4426a5:	add    DWORD PTR [eax],0xffffff83
  4426a8:	bound  eax,QWORD PTR [eax]
  4426aa:	arpl   WORD PTR [esi],sp
  4426ac:	loope  0x4426ad
  4426ae:	add    bh,bh
  4426b0:	lock inc DWORD PTR [edi-0x4c]
  4426b4:	xchg   esp,eax
  4426b5:	inc    DWORD PTR [ebx+0x1e0010ff]
  4426bb:	pslld  mm0,QWORD PTR [ebx+0xa78383]
  4426c2:	dec    ecx
  4426c3:	stos   DWORD PTR es:[edi],eax
  4426c4:	xchg   edx,eax
  4426c5:	add    bh,bh
  4426c7:	add    BYTE PTR [ecx+0x0],bh
  4426ca:	sar    BYTE PTR [eax-0x4c],1
  4426d0:	call   DWORD PTR es:[esi+0x26]
  4426d4:	inc    ecx
  4426d5:	add    ah,cl
  4426d7:	mov    DWORD PTR [ebx+0x0],esi
  4426da:	cwde   
  4426db:	cs ret 0x83cc
  4426df:	add    BYTE PTR [eax],dl
  4426e1:	sbb    DWORD PTR [ebx-0x5d],0xffffff84
  4426e5:	int3   
  4426e6:	add    bh,bh
  4426e8:	mov    dl,0xff
  4426ea:	pop    eax
  4426eb:	xchg   DWORD PTR [ebx-0x72ffff01],eax
  4426f1:	sub    DWORD PTR [esi-0x3300ebdd],0xffffffff
  4426f8:	mov    cl,0xff
  4426fa:	mov    al,ds:0xff89cb2a
  4426ff:	xor    DWORD PTR [ebx],0xffffffff
  442702:	or     ebx,ecx
  442704:	inc    ebx
  442705:	inc    DWORD PTR [eax]
  442707:	mov    DWORD PTR [esi],edx
  442709:	push   DWORD PTR [eax-0x5640]
  44270f:	dec    DWORD PTR [edx-0x7d]
  442712:	cmp    BYTE PTR [ebx+0x4c],0x89
  442716:	inc    DWORD PTR [eax]
  442718:	pop    DWORD PTR [ebx-0xeb8687]
  44271e:	(bad)  
  44271f:	call   FWORD PTR [eax+eax*1-0x5c]
  442723:	mov    ds:0xff8312,al
  442728:	mov    eax,ds:0x795a4b83
  44272d:	int3   
  44272e:	add    bh,bh
  442730:	imul   edi,edi,0xbb5423
  442736:	(bad)  
  442737:	jmp    FWORD PTR [edx-0x1]
  44273a:	fimul  WORD PTR [ebp+0x57]
  44273d:	inc    DWORD PTR [eax]
  44273f:	int3   
  442740:	in     al,0xff
  442742:	push   edx
  442743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442744:	fdivr  st,st(7)
  442746:	inc    DWORD PTR [eax]
  442748:	dec    eax
  442749:	int3   
  44274a:	fidivr DWORD PTR [ebp+ebx*4+0xeff8900]
  442751:	mov    DWORD PTR [edx+0x64],edx
  442754:	cmp    bh,0x0
  442757:	and    DWORD PTR [esi+0x13693fff],0xffffffcc
  44275e:	inc    DWORD PTR [eax]
  442760:	call   0xccff:0xf7b201ff
  442767:	mov    DWORD PTR [ecx+0x35103000],eax
  44276d:	or     esp,0x0
  442770:	mov    cl,0x0
  442772:	mov    dh,0xe5
  442774:	adc    eax,DWORD PTR [eax]
  442776:	add    bh,bh
  442778:	add    DWORD PTR [eax],0x89f498a9
  44277e:	inc    DWORD PTR [eax]
  442780:	push   ds
  442781:	call   ebp
  442783:	pop    edx
  442784:	mov    eax,0xbb008300
  442789:	dec    DWORD PTR [ecx]
  44278b:	xor    BYTE PTR [esi-0x1],bl
  44278e:	cmp    edi,0xffffff8e
  442791:	add    ah,bl
  442793:	jle    0x442803
  442795:	int3   
  442796:	int3   
  442797:	jmp    DWORD PTR [ecx-0x2614b734]
  44279d:	(bad)  
  44279e:	(bad)  
  44279f:	push   DWORD PTR ds:0x637c18cc
  4427a5:	add    bh,bh
  4427a7:	add    BYTE PTR [ebx],bh
  4427a9:	inc    DWORD PTR [ebx+0x6e]
  4427ac:	leave  
  4427ad:	add    BYTE PTR [eax],al
  4427af:	call   DWORD PTR [ebp-0x608ff601]
  4427b5:	add    DWORD PTR [ebx+0x41cc6c00],0x10
  4427bc:	cmp    eax,0xf700ffff
  4427c1:	int3   
  4427c2:	adc    ch,bl
  4427c4:	push   ss
  4427c5:	(bad)  
  4427c6:	inc    DWORD PTR [eax]
  4427c8:	push   ebx
  4427c9:	sbb    DWORD PTR [edi+eiz*4+0xd],0xffffffff
  4427ce:	(bad)  
  4427cf:	call   FWORD PTR [edi]
  4427d1:	mov    DWORD PTR [edx],esi
  4427d3:	fcom   DWORD PTR [esi+0x2affff00]
  4427d9:	add    cl,dl
  4427db:	xlat   BYTE PTR ds:[ebx]
  4427dc:	mov    dl,0xff
  4427de:	(bad)  
  4427df:	push   ebx
  4427e1:	dec    DWORD PTR [esi-0x3e]
  4427e4:	rol    DWORD PTR [eax],0xff
  4427e7:	add    BYTE PTR [esi-0x1],bl
  4427ea:	js     0x4427d4
  4427ec:	dec    eax
  4427ed:	inc    DWORD PTR [eax]
  4427ef:	add    ah,cl
  4427f1:	add    BYTE PTR [ecx-0x766b08],ah
  4427f7:	and    DWORD PTR [esi],0xffffff89
  4427fa:	pop    ebx
  4427fb:	dec    edi
  4427fc:	xchg   ecx,eax
  4427fd:	add    bh,bh
  4427ff:	mov    DWORD PTR [ecx+ecx*4],ebp
  442802:	xor    al,ch
  442804:	dec    edx
  442805:	inc    DWORD PTR [eax]
  442807:	int3   
  442808:	pop    esp
  442809:	call   DWORD PTR [ebp-0x330192]
  44280f:	dec    DWORD PTR [ebx-0x1]
  442812:	leave  
  442813:	mov    BYTE PTR [edi+edi*8],ah
  442816:	add    BYTE PTR [eax],al
  442818:	outs   dx,DWORD PTR ds:[esi]
  442819:	mov    DWORD PTR [esi-0x67],edi
  44281c:	add    BYTE PTR [ebx+0xe783ff],al
  442822:	pop    ss
  442823:	add    BYTE PTR [ebx+0x55ffffff],bh
  442829:	add    ebx,0xffffff9d
  44282c:	sub    cl,ah
  44282e:	inc    DWORD PTR [eax]
  442830:	dec    ecx
  442831:	cmp    DWORD PTR [eax+0xbf8c],0xffffffcc
  442838:	jne    0x442839
  44283a:	stc    
  44283b:	retf   0xcb
  44283e:	add    BYTE PTR [ebx-0xd1d00e0],al
  442844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442845:	add    BYTE PTR [ecx+0x16892a83],cl
  44284b:	clc    
  44284c:	push   ebp
  44284d:	inc    DWORD PTR [eax]
  44284f:	dec    DWORD PTR [edi+edi*8-0x51]
  442853:	shl    BYTE PTR [edx-0x1f00ff01],0xff
  44285a:	pop    ebp
  44285b:	in     al,dx
  44285c:	leave  
  44285d:	(bad)  
  44285e:	(bad)  
  44285f:	call   esi
  442861:	jmp    FWORD PTR [eax+0xff4944]
  442867:	int3   
  442868:	pushf  
  442869:	jmp    FWORD PTR [ecx]
  44286b:	and    edx,esp
  44286d:	(bad)  
  44286e:	inc    DWORD PTR [eax]
  442870:	sbb    al,0xff
  442872:	pop    edx
  442873:	sti    
  442874:	xchg   ebx,eax
  442875:	mov    esp,ecx
  442877:	add    BYTE PTR [edx+0x6449da00],bl
  44287d:	dec    DWORD PTR [ecx+0x21fffa00]
  442883:	dec    edi
  442884:	xchg   DWORD PTR [ebx+0x700ff],eax
  44288a:	sbb    al,0xc8
  44288c:	sub    edi,edi
  44288e:	inc    DWORD PTR [eax]
  442890:	adc    edi,edi
  442892:	shl    DWORD PTR [edi-0xff12],1
  442898:	sub    al,BYTE PTR [eax]
  44289a:	adc    dh,BYTE PTR [edi-0x47]
  44289d:	add    BYTE PTR [ecx+0x1fff500],cl
  4428a3:	and    BYTE PTR [esi+0x1acc00ff],bh
  4428a9:	sub    edi,0x17
  4428ac:	jp     0x442831
  4428ae:	mov    edi,edi
  4428b0:	mov    ch,0xcc
  4428b2:	push   edi
  4428b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4428b4:	cdq    
  4428b5:	mov    edi,edi
  4428b7:	(bad)  
  4428b8:	cmp    bh,bh
  4428ba:	adc    al,0x4e
  4428bc:	std    
  4428bd:	(bad)  
  4428be:	(bad)  
  4428bf:	push   DWORD PTR [ecx-0x77]
  4428c2:	xchg   ecx,eax
  4428c3:	stos   DWORD PTR es:[edi],eax
  4428c4:	sbb    al,BYTE PTR [eax]
  4428c6:	add    bh,bh
  4428c8:	inc    ebx
  4428c9:	and    ecx,0x55
  4428cc:	dec    edx
  4428cd:	add    DWORD PTR [eax],0xffffffff
  4428d0:	stos   DWORD PTR es:[edi],eax
  4428d1:	add    BYTE PTR [edi],al
  4428d3:	test   DWORD PTR [ebx+0x47ffcc00],ecx
  4428d9:	call   FWORD PTR [edx-0xff3ad7]
  4428df:	sub    DWORD PTR [edx-0x27d9fd00],0x0
  4428e6:	cmp    edi,0xffffffc5
  4428e9:	add    dh,bh
  4428eb:	imul   edx,DWORD PTR [esi-0x7d],0x895fff89
  4428f2:	add    cl,cl
  4428f4:	icebp  
  4428f5:	dec    esp
  4428f7:	int3   
  4428f8:	add    BYTE PTR [eax],al
  4428fa:	sbb    eax,0xff6b4c
  4428ff:	int3   
  442900:	ret    0x1083
  442903:	cmp    ebp,DWORD PTR [esi]
  442905:	int3   
  442906:	inc    DWORD PTR [eax]
  442908:	push   ecx
  442909:	add    BYTE PTR [edx-0x330dc8],ah
  44290f:	jmp    esi
  442911:	(bad)  
  442912:	jmp    0xb800:0x1c6c
  442919:	dec    ecx
  44291b:	mov    ds:0xffcce4,eax
  442920:	(bad)  
  442921:	call   DWORD PTR [edi]
  442923:	jl     0x4428c2
  442925:	add    BYTE PTR [eax],al
  442927:	add    BYTE PTR [eax+eax*1+0xf],bh
  44292b:	imul   edx,esp,0xb600ff83
  442931:	dec    DWORD PTR [eax+eiz*8-0x33007cb9]
  442938:	cld    
  442939:	add    BYTE PTR [ebp+0xe224],dl
  44293f:	int3   
  442940:	mov    al,ds:0xd170aaff
  442945:	add    BYTE PTR [eax],al
  442947:	add    BYTE PTR [esp+ecx*8],ch
  44294a:	mov    cl,0xe7
  44294c:	std    
  44294d:	(bad)  
  44294e:	dec    DWORD PTR [ecx+0x3a2bff45]
  442954:	mov    ecx,0x68ffffff
  442959:	call   FWORD PTR [ebx]
  44295b:	sub    dl,BYTE PTR [ecx+0x0]
  44295e:	add    BYTE PTR [ebx-0x5fb6ffc0],al
  442964:	add    BYTE PTR cs:[eax],al
  442967:	xor    eax,0xffffff89
  44296a:	scas   al,BYTE PTR es:[edi]
  44296b:	mov    esi,0xffffff56
  442970:	pop    ecx
  442971:	(bad)  
  442972:	mov    ecx,0xff8383bb
  442977:	xor    esp,0xffffffff
  44297a:	and    ah,BYTE PTR [esp+eiz*4-0x12007d00]
  442981:	jmp    DWORD PTR [eax-0x47]
  442984:	dec    ecx
  442985:	inc    DWORD PTR [eax]
  442987:	add    ch,ch
  442989:	dec    DWORD PTR [esi]
  44298b:	mov    ah,0x8e
  44298d:	add    bh,bh
  44298f:	add    bl,bh
  442991:	cmp    DWORD PTR [ebx-0xff4382],0x0
  442998:	dec    ebx
  442999:	add    eax,0x6b
  44299c:	inc    DWORD PTR [ebx-0x1a0100]
  4429a2:	test   al,0x4b
  4429a4:	sub    al,0xff
  4429a6:	mov    DWORD PTR [ebx-0x34ce0074],eax
  4429ac:	fdivp  st(7),st
  4429ae:	(bad)  
  4429af:	call   DWORD PTR [eax+eax*1]
  4429b2:	pop    esi
  4429b3:	out    0x36,eax
  4429b5:	(bad)  
  4429b6:	inc    DWORD PTR [eax]
  4429b8:	sub    eax,0x67145283
  4429bd:	inc    DWORD PTR [ebx+0x56ffde00]
  4429c3:	ss and ah,cl
  4429c6:	(bad)  
  4429c7:	(bad)  
  4429c8:	mov    esi,0x58c66500
  4429cd:	add    BYTE PTR [eax],al
  4429cf:	sbb    DWORD PTR [ebx],0xffffff83
  4429d2:	cmp    bl,ch
  4429d4:	test   BYTE PTR [ebx+0x72ffff],al
  4429da:	das    
  4429db:	jo     0x44296d
  4429dd:	(bad)  
  4429de:	(bad)  
  4429df:	jmp    DWORD PTR [edx]
  4429e1:	jmp    FWORD PTR [eax-0x428d]
  4429e7:	int3   
  4429e8:	ja     0x4429b6
  4429ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4429eb:	pop    ebp
  4429ec:	mov    cl,0xff
  4429ee:	add    bh,bh
  4429f0:	inc    edi
  4429f1:	add    BYTE PTR [eax],al
  4429f3:	bound  ebx,QWORD PTR [ebp-0x1]
  4429f6:	add    DWORD PTR [eax],0x77
  4429f9:	(bad)  
  4429fa:	jl     0x442a46
  4429fc:	in     al,dx
  4429fd:	int3   
  4429fe:	(bad)  
  4429ff:	dec    DWORD PTR [esi+0x1663bc00]
  442a05:	inc    DWORD PTR [ebx+0x49ff5d83]
  442a0b:	div    DWORD PTR [ebp-0x7d]
  442a0e:	inc    DWORD PTR [eax]
  442a10:	lahf   
  442a11:	jmp    DWORD PTR [edx+esi*4-0x68]
  442a18:	xor    bh,bh
  442a1a:	dec    ecx
  442a1b:	sbb    DWORD PTR [edi+edi*8+0x9400ff],0xffffffb0
  442a23:	mov    cs,WORD PTR [esi+0x7ffffff]
  442a29:	dec    ecx
  442a2b:	sub    DWORD PTR [ebp+0x5189ccff],0xffffff83
  442a32:	mov    al,ds:0x83891226
  442a37:	int3   
  442a38:	add    DWORD PTR [eax],0x65
  442a3b:	add    DWORD PTR [edi+edi*8+0x7e83ff],0xffffffd9
  442a43:	jo     0x442a21
  442a45:	cmp    edi,0xffffffff
  442a48:	sbb    BYTE PTR [ebx+0x1eea58],al
  442a4e:	(bad)  
  442a4f:	call   DWORD PTR [esi]
  442a51:	dec    DWORD PTR [esi]
  442a53:	repnz inc ebp
  442a55:	add    BYTE PTR [eax],al
  442a57:	add    cl,ch
  442a59:	int3   
  442a5a:	popa   
  442a5b:	pop    ebp
  442a5c:	mov    bh,0xff
  442a5e:	add    bh,bh
  442a60:	and    al,0x0
  442a62:	adc    dh,ch
  442a64:	stos   BYTE PTR es:[edi],al
  442a65:	add    bh,bh
  442a67:	add    BYTE PTR [edi+0x386502ff],ch
  442a6d:	add    bh,bh
  442a6f:	call   DWORD PTR [edx-0x56901001]
  442a75:	add    BYTE PTR [ecx+0x36cc2f00],cl
  442a7b:	fidiv  DWORD PTR [edx]
  442a7d:	(bad)  
  442a7e:	inc    DWORD PTR [ebx-0x58e93357]
  442a84:	jmp    0x442a85
  442a86:	dec    esp
  442a88:	cmp    edi,0xffffffd5
  442a8b:	cmp    esi,DWORD PTR [esi]
  442a8d:	(bad)  
  442a8e:	dec    DWORD PTR [ecx+0x2afa839f]
  442a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442a95:	mov    edi,edi
  442a97:	inc    DWORD PTR [esi-0x1]
  442a9a:	iret   
  442a9b:	add    al,0x20
  442a9d:	mov    edi,edi
  442a9f:	add    cl,al
  442aa1:	add    BYTE PTR [edx-0x7e],dl
  442aa4:	arpl   sp,cx
  442aa6:	inc    DWORD PTR [eax]
  442aa8:	dec    edx
  442aa9:	jmp    FWORD PTR [eax-0x76764f20]
  442aaf:	call   FWORD PTR [edx-0x1]
  442ab2:	jbe    0x442ae9
  442ab4:	xchg   edx,eax
  442ab5:	(bad)  
  442ab6:	(bad)  
  442ab7:	inc    edi
  442ab9:	inc    DWORD PTR [edi]
  442abb:	stos   DWORD PTR es:[edi],eax
  442abc:	jl     0x442a8a
  442abe:	add    BYTE PTR [ecx+0xc3c83a7],cl
  442ac4:	add    al,0xff
  442ac6:	add    ah,cl
  442ac8:	cld    
  442ac9:	add    BYTE PTR [ebx-0x7cff72f6],ch
  442acf:	cmp    DWORD PTR [edi+edi*8-0x33009b2f],0xffffffff
  442ad7:	add    DWORD PTR [ecx+0x0],0xffffff96
  442adb:	adc    edx,ebp
  442add:	cmp    edi,0x0
  442ae0:	stos   BYTE PTR es:[edi],al
  442ae1:	add    BYTE PTR [esp+ebx*2-0x76ffff01],ch
  442ae8:	sbb    eax,0xfb050eff
  442aed:	inc    DWORD PTR [eax]
  442aef:	cmp    ebp,0x0
  442af2:	(bad)  
  442af3:	arpl   di,di
  442af5:	inc    DWORD PTR [ebx-0x13333a01]
  442afb:	mov    edi,edi
  442afd:	inc    DWORD PTR [ebx+0x308361ff]
  442b03:	jb     0x442abd
  442b05:	inc    DWORD PTR [ebx-0x2e004d00]
  442b0b:	xchg   ebx,eax
  442b0c:	mov    ah,0x0
  442b0e:	inc    DWORD PTR [eax]
  442b10:	mov    dh,0xff
  442b12:	xchg   ebx,eax
  442b13:	and    al,0xf5
  442b15:	add    BYTE PTR [ebx-0x17cf534],al
  442b1b:	sub    BYTE PTR [ecx-0x42760001],ch
  442b21:	dec    DWORD PTR [ebp+0xaf89]
  442b27:	add    ch,al
  442b29:	add    BYTE PTR [ebx],dh
  442b2b:	jecxz  0x442b02
  442b2d:	(bad)  
  442b2e:	(bad)  
  442b2f:	call   DWORD PTR [ecx]
  442b31:	jmp    DWORD PTR [esi+0xcfe4]
  442b37:	add    dh,ch
  442b39:	add    BYTE PTR [eax],ah
  442b3b:	adc    eax,0xffffffd4
  442b40:	mov    ch,0x0
  442b42:	repz dec esp
  442b44:	xor    DWORD PTR [eax],eax
  442b46:	(bad)  
  442b47:	jmp    esi
  442b49:	sub    ecx,0xffffffbc
  442b4c:	bound  eax,QWORD PTR [eax]
  442b4e:	add    bh,bh
  442b50:	add    al,0xff
  442b52:	jg     0x442bb0
  442b54:	arpl   WORD PTR [eax],ax
  442b56:	cmp    edi,0x68
  442b59:	int3   
  442b5a:	dec    eax
  442b5b:	xor    DWORD PTR [edi+0x0],edx
  442b5e:	inc    DWORD PTR [eax]
  442b60:	jne    0x442b62
  442b62:	shl    DWORD PTR [edx-0xffff9b],cl
  442b68:	jmp    0x8389:0xbba600ff
  442b6f:	add    BYTE PTR [edi+0x0],ah
  442b72:	inc    ebp
  442b73:	lahf   
  442b74:	into   
  442b75:	int3   
  442b76:	add    bh,bh
  442b78:	push   ebx
  442b79:	sub    DWORD PTR [edi],0xfffffffa
  442b7c:	pusha  
  442b7d:	int3   
  442b7e:	mov    edi,edi
  442b80:	data16 (bad) 
  442b82:	mov    ebp,0xff0004fa
  442b87:	(bad)  
  442b88:	(bad)  
  442b89:	call   esp
  442b8b:	xchg   esp,eax
  442b8c:	push   cs
  442b8d:	inc    DWORD PTR [eax]
  442b8f:	push   DWORD PTR [ecx-0x34]
  442b92:	pop    ebp
  442b93:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b95:	add    bh,bh
  442b97:	mov    DWORD PTR [eax+eax*1-0x334305b4],esi
  442b9e:	cmp    edi,0x1b
  442ba1:	(bad)  
  442ba2:	fidiv  WORD PTR [ebx-0x68]
  442ba5:	(bad)  
  442ba6:	(bad)  
  442ba7:	push   DWORD PTR [eax+eax*1-0xfdb44f]
  442bae:	(bad)  
  442baf:	jmp    DWORD PTR [edx-0x2fdbb801]
  442bb5:	inc    DWORD PTR [ebx+0x50002900]
  442bbb:	sahf   
  442bbc:	fadd   DWORD PTR [ebx-0x8a0100]
  442bc2:	xor    al,0x29
  442bc4:	sbb    al,0xff
  442bc6:	cmp    edi,0x2d
  442bc9:	and    DWORD PTR [ecx+0x54],0x28
  442bcd:	add    BYTE PTR [eax],al
  442bcf:	add    BYTE PTR [edx],bh
  442bd1:	(bad)  
  442bd2:	faddp  st(0),st
  442bd4:	repnz add DWORD PTR [ebx+0x10ff0700],0x11
  442bdc:	ret    0x0
  442bdf:	jmp    FWORD PTR [esi]
  442be1:	call   FWORD PTR [esi-0x6c]
  442be4:	call   0xf4cc:0x9b000083
  442beb:	out    dx,eax
  442bec:	daa    
  442bed:	(bad)  
  442bee:	(bad)  
  442bef:	(bad)  
  442bf0:	jmp    0x442bf2
  442bf2:	cs cmp eax,0xffcc8992
  442bf8:	sub    al,0xff
  442bfa:	sbb    al,0x22
  442bfc:	enter  0xccff,0xcc
  442c00:	dec    edi
  442c01:	(bad)  
  442c02:	in     al,dx
  442c03:	jns    0x442c60
  442c05:	(bad)  
  442c06:	dec    esp
  442c08:	stos   DWORD PTR es:[edi],eax
  442c09:	add    dh,bh
  442c0b:	mov    esi,ebp
  442c0d:	(bad)  
  442c0e:	inc    DWORD PTR [ebx-0x99300b3]
  442c14:	dec    ebp
  442c15:	inc    DWORD PTR [ebx-0x4633517d]
  442c1b:	icebp  
  442c1c:	outs   dx,DWORD PTR ds:[esi]
  442c1d:	(bad)  
  442c1e:	inc    DWORD PTR [eax]
  442c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442c21:	add    BYTE PTR [ecx],bl
  442c23:	call   0x1432c2f
  442c28:	add    BYTE PTR fs:[eax-0xff7001],dh
  442c2f:	add    bl,bl
  442c31:	int3   
  442c32:	mov    eax,ds:0xffffc3e8
  442c37:	(bad)  
  442c38:	fld    DWORD PTR [eax]
  442c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442c3b:	mov    WORD PTR [esi+0x0],?
  442c3e:	add    bh,bh
  442c40:	in     eax,dx
  442c41:	mov    DWORD PTR [ecx+edi*1-0x50],edx
  442c45:	add    bh,bh
  442c47:	dec    esp
  442c49:	push   ebx
  442c4b:	jg     0x442c7f
  442c4d:	(bad)  
  442c4e:	inc    DWORD PTR [eax]
  442c50:	jecxz  0x442bdb
  442c52:	cli    
  442c53:	nop
  442c54:	push   esi
  442c55:	add    BYTE PTR [eax],al
  442c57:	mov    DWORD PTR [ebp-0x50323401],edx
  442c5d:	dec    esp
  442c5f:	add    BYTE PTR [eax+0x126769ff],bh
  442c65:	(bad)  
  442c66:	(bad)  
  442c67:	jmp    DWORD PTR [ecx]
  442c69:	(bad)  
  442c6a:	jmp    0x6dff:0x83ff1491
  442c71:	mov    DWORD PTR [ebp-0xff8239],esi
  442c77:	sbb    DWORD PTR [eax+0x38111600],0xffffffff
  442c7e:	add    BYTE PTR [eax],al
  442c80:	inc    esi
  442c81:	and    ecx,0x7
  442c84:	cmp    bh,bh
  442c86:	inc    DWORD PTR [eax]
  442c88:	sahf   
  442c89:	add    BYTE PTR [eax],ah
  442c8b:	lods   eax,DWORD PTR ds:[esi]
  442c8c:	mov    bl,0x89
  442c8e:	inc    DWORD PTR [eax]
  442c90:	cmp    BYTE PTR [ebx-0x7c158ff1],al
  442c96:	add    bh,bh
  442c98:	je     0x442c66
  442c9a:	jecxz  0x442cd8
  442c9c:	mov    ?,edi
  442c9e:	add    DWORD PTR [eax],0x68
  442ca1:	push   edi
  442ca3:	out    dx,al
  442ca4:	cdq    
  442ca5:	inc    DWORD PTR [ebx-0x77ff3b34]
  442cab:	retf   0xcc6f
  442cae:	int3   
  442caf:	(bad)  
  442cb0:	js     0x442c7e
  442cb2:	retf   
  442cb3:	out    dx,eax
  442cb4:	call   0x1300:0xf8ff83ff
  442cbb:	stos   DWORD PTR es:[edi],eax
  442cbc:	jb     0x442cbd
  442cbe:	int3   
  442cbf:	int3   
  442cc0:	aad    0xff
  442cc2:	pop    ebx
  442cc3:	js     0x442caf
  442cc5:	inc    DWORD PTR [ebx+0x5883f7ff]
  442ccb:	pushf  
  442ccc:	xor    BYTE PTR [eax],al
  442cce:	cmp    edi,0xffffffdc
  442cd1:	int3   
  442cd2:	hlt    
  442cd3:	imul   eax,DWORD PTR [edx-0x1],0x83b0ff83
  442cda:	aas    
  442cdb:	inc    edx
  442cdc:	or     DWORD PTR [ecx-0x332e0000],0xffffff86
  442ce3:	lea    edx,[esi+0x20ff0000]
  442ce9:	add    BYTE PTR [ecx],al
  442ceb:	jmp    0x442c92
  442ced:	dec    esp
  442cef:	dec    DWORD PTR [edi+0x0]
  442cf2:	dec    esi
  442cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442cf4:	ja     0x442cf5
  442cf6:	add    BYTE PTR [eax],al
  442cf8:	xlat   BYTE PTR ds:[ebx]
  442cf9:	add    dh,bl
  442cfb:	push   ss
  442cfc:	pop    es
  442cfd:	inc    DWORD PTR [eax]
  442cff:	push   esi
  442d01:	add    dl,cl
  442d03:	out    dx,al
  442d04:	je     0x442d05
  442d06:	int3   
  442d07:	(bad)  
  442d08:	mov    edx,0xc3547300
  442d0d:	add    BYTE PTR [eax],al
  442d0f:	adc    edi,0xffffffff
  442d12:	sub    DWORD PTR [ecx+0xc],0x0
  442d16:	add    bh,bh
  442d18:	jnp    0x442d1a
  442d1a:	push   ss
  442d1b:	xor    DWORD PTR [edx+0x0],ebx
  442d1e:	add    DWORD PTR [eax],0x8
  442d21:	jmp    DWORD PTR [eax-0x7c333f7e]
  442d27:	add    BYTE PTR [eax+0x4f0a2eff],al
  442d2d:	(bad)  
  442d2e:	inc    DWORD PTR [eax]
  442d30:	or     edi,edi
  442d32:	dec    esi
  442d33:	enter  0xff2e,0xff
  442d37:	(bad)  
  442d38:	jmp    0xffff:0xde1565ff
  442d3f:	add    DWORD PTR [ebp-0x3bacd900],0xffffff89
  442d46:	inc    DWORD PTR [eax]
  442d48:	jno    0x442d4a
  442d4a:	or     cl,ah
  442d4c:	out    dx,eax
  442d4d:	inc    DWORD PTR [eax]
  442d4f:	push   DWORD PTR [ebp-0x7e546701]
  442d55:	dec    DWORD PTR [ecx+0x37ff7b00]
  442d5b:	sub    al,0x74
  442d5d:	add    DWORD PTR [eax],0xffffffff
  442d60:	(bad)  
  442d62:	mov    ah,0x4c
  442d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442d65:	add    BYTE PTR [ebx+0x20006b00],al
  442d6b:	cmp    al,0xd1
  442d6d:	or     DWORD PTR [ecx-0x64ff6901],0x77
  442d74:	sbb    bh,bh
  442d76:	add    BYTE PTR [ebx+0x34ffff20],al
  442d7c:	mov    eax,ds:0xb1ff0083
  442d81:	add    BYTE PTR [edx-0x33001d48],bl
  442d87:	add    BYTE PTR [edi+0x2a2d50cc],bl
  442d8d:	dec    esp
  442d8f:	adc    DWORD PTR [esi-0x2a13be01],0xffffffff
  442d96:	(bad)  
  442d97:	(bad)  
  442d98:	cmp    edi,edi
  442d9a:	push   esp
  442d9b:	push   cs
  442d9c:	xor    al,BYTE PTR [ebx-0x440000]
  442da2:	inc    ecx
  442da3:	fsin   
  442da5:	add    bh,bh
  442da7:	int3   
  442da8:	cmc    
  442da9:	call   FWORD PTR [edx-0xff318c]
  442daf:	mov    ecx,esp
  442db1:	cmp    DWORD PTR ds:0xff83d475,0xffffffff
  442db8:	dec    ebp
  442db9:	call   FWORD PTR [ebp-0x18]
  442dbc:	push   esp
  442dbd:	add    bh,bh
  442dbf:	call   FWORD PTR [edi]
  442dc1:	dec    DWORD PTR [ecx]
  442dc3:	test   al,0x8d
  442dc5:	inc    DWORD PTR [ebx+0x2cffcc00]
  442dcb:	cwde   
  442dcc:	inc    WORD PTR [ebx-0x29ffb17d]
  442dd3:	(bad)  
  442dd4:	jns    0x442dd6
  442dd6:	inc    DWORD PTR [eax]
  442dd8:	call   0xa717aadc
  442ddd:	add    bh,bh
  442ddf:	int3   
  442de0:	sbb    bh,bh
  442de2:	imul   ebx,ecx,0xffffff92
  442de5:	add    bh,bh
  442de7:	call   FWORD PTR [ebx]
  442de9:	add    edx,0x6c
  442dec:	mov    ebp,0x57ff83ff
  442df1:	add    esi,0xffffffba
  442df4:	lods   al,BYTE PTR ds:[esi]
  442df5:	(bad)  
  442df6:	(bad)  
  442df7:	jmp    DWORD PTR [edi+edi*8+0x92c036]
  442dfe:	inc    DWORD PTR [eax]
  442e00:	mov    edi,?
  442e02:	leave  
  442e03:	jmp    0x442e69
  442e05:	add    BYTE PTR [ebx+0x57cc73ff],al
  442e0b:	jns    0x442e24
  442e0d:	mov    DWORD PTR [eax],eax
  442e0f:	and    DWORD PTR ds:0x74a00200,0x0
  442e16:	dec    DWORD PTR [ecx+0x46f58350]
  442e1c:	mov    bh,0xcc
  442e1e:	int3   
  442e1f:	add    BYTE PTR [ebp-0x1],ah
  442e22:	mov    esi,0xff006347
  442e27:	add    BYTE PTR [eax-0x1],bl
  442e2a:	mov    ah,0x9c
  442e2c:	repnz (bad) 
  442e2e:	(bad)  
  442e2f:	call   DWORD PTR [ecx-0x1]
  442e32:	jno    0x442e46
  442e34:	enter  0xff,0x0
  442e38:	sar    bh,cl
  442e3a:	mov    BYTE PTR [ebx-0xff00c8],cl
  442e40:	or     al,0xff
  442e42:	lods   eax,DWORD PTR ds:[esi]
  442e43:	push   0xff00ffee
  442e48:	mov    cl,0x0
  442e4a:	jae    0x442e41
  442e4c:	xchg   ebx,eax
  442e4d:	cmp    edi,0x0
  442e50:	rol    DWORD PTR [eax],0xb0
  442e53:	pop    esi
  442e54:	loopne 0x442e55
  442e56:	add    BYTE PTR [eax],al
  442e58:	enter  0x7100,0xce
  442e5c:	push   ebp
  442e5d:	add    ah,cl
  442e5f:	(bad)  
  442e60:	dec    esp
  442e62:	pop    eax
  442e63:	pop    eax
  442e64:	cwde   
  442e65:	(bad)  
  442e66:	(bad)  
  442e67:	call   DWORD PTR [edi-0x37ccff00]
  442e6d:	add    ah,cl
  442e6f:	inc    DWORD PTR [eax+eax*1]
  442e72:	mov    cl,BYTE PTR [edi]
  442e74:	sub    edi,edi
  442e76:	inc    DWORD PTR [ebx+0x3ab1ff61]
  442e7c:	aam    0x89
  442e7e:	cmp    edi,0x15
  442e81:	and    DWORD PTR [edi+0xff840d],0x0
  442e88:	call   0x9f94378d
  442e8d:	(bad)  
  442e8e:	inc    DWORD PTR [eax]
  442e90:	jb     0x442e5e
  442e92:	pusha  
  442e93:	or     eax,0xff83ffa6
  442e98:	adc    eax,0x8fafa7ff
  442e9d:	cmp    edi,0xffffff89
  442ea0:	scas   eax,DWORD PTR es:[edi]
  442ea1:	add    BYTE PTR [edx+edi*4],al
  442ea4:	cmp    DWORD PTR [ebx-0xf87700],eax
  442eaa:	jno    0x442ea0
  442eac:	sbb    eax,0xe28900ff
  442eb1:	call   FWORD PTR [edx-0xff435e]
  442eb7:	jmp    DWORD PTR [ebx+0x0]
  442eba:	xor    al,0xe8
  442ebc:	pushf  
  442ebd:	add    BYTE PTR [ebx+0x17ffe2ff],al
  442ec3:	jle    0x442ee4
  442ec5:	mov    edi,edi
  442ec7:	cmp    edi,0xffffffff
  442eca:	sub    al,0xa5
  442ecc:	aas    
  442ecd:	inc    DWORD PTR [eax]
  442ecf:	jmp    DWORD PTR [edi+edi*8]
  442ed2:	adc    DWORD PTR [ebx+ebx*8],esp
  442ed5:	int3   
  442ed6:	add    BYTE PTR [eax],al
  442ed8:	sar    bh,0xfd
  442edb:	into   
  442edc:	xchg   edi,eax
  442edd:	cmp    edi,0xffffffcc
  442ee0:	mov    ds:0xe9719aff,eax
  442ee5:	inc    DWORD PTR [eax]
  442ee7:	call   FWORD PTR [ecx]
  442ee9:	add    al,bl
  442eeb:	and    eax,0xff00cc3d
  442ef0:	lods   eax,DWORD PTR ds:[esi]
  442ef1:	jmp    ecx
  442ef3:	mov    bh,BYTE PTR [ecx+0x66ccffcc]
  442ef9:	(bad)  
  442efa:	mov    ebx,0x83ffd452
  442eff:	add    dh,dl
  442f01:	add    dh,bh
  442f03:	sahf   
  442f04:	xor    edi,edi
  442f06:	or     DWORD PTR [ecx-0x38240078],0x4c
  442f0d:	add    DWORD PTR [eax],0xffffff83
  442f10:	xchg   ecx,eax
  442f11:	inc    DWORD PTR [eax+0x61]
  442f14:	js     0x442f15
  442f16:	dec    DWORD PTR [ecx+0x623100df]
  442f1c:	inc    eax
  442f1d:	inc    DWORD PTR [eax]
  442f1f:	(bad)  
  442f20:	cmp    eax,0x871659ff
  442f25:	int3   
  442f26:	add    bh,bh
  442f28:	xchg   edi,edi
  442f2a:	cmp    eax,0xb9a0
  442f2f:	add    BYTE PTR ds:0x821949ff,ch
  442f35:	(bad)  
  442f36:	dec    esp
  442f38:	mov    ebp,0x4df92183
  442f3d:	inc    DWORD PTR [eax]
  442f3f:	add    dl,cl
  442f41:	inc    ecx
  442f43:	loop   0x442f6a
  442f45:	(bad)  
  442f46:	inc    DWORD PTR [ebx+0x5ca7ffb8]
  442f4c:	xchg   ebp,eax
  442f4d:	mov    DWORD PTR [eax],eax
  442f4f:	or     DWORD PTR [ebp-0x7d],0x7c
  442f53:	or     DWORD PTR [edi],0x2700ffcc
  442f59:	inc    DWORD PTR [ecx-0x7676ee76]
  442f5f:	call   DWORD PTR [ebx+0x0]
  442f62:	cmp    ebx,DWORD PTR [ecx-0x3326]
  442f68:	call   0xff:0x2f886783
  442f6f:	call   FWORD PTR [edi-0x7d]
  442f72:	mov    al,0xea
  442f74:	(bad)  
  442f75:	(bad)  
  442f76:	dec    esp
  442f78:	cdq    
  442f79:	inc    DWORD PTR [eax+0xff71a5]
  442f7f:	push   DWORD PTR [esi]
  442f81:	add    BYTE PTR [ecx-0x3a9c],bl
  442f87:	int3   
  442f88:	or     al,0xff
  442f8a:	shl    DWORD PTR [esi-0x7c0d],0x4f
  442f91:	sbb    ebx,0xffffff82
  442f94:	mov    bl,0xff
  442f96:	cmp    edi,0xc
  442f99:	call   DWORD PTR [esp+edi*2-0x2b]
  442f9d:	(bad)  
  442f9e:	inc    DWORD PTR [eax]
  442fa0:	jmp    0xff83:0xa80b9fff
  442fa7:	sbb    ecx,0xffffff83
  442faa:	mov    ah,BYTE PTR [ebp+0xffbd]
  442fb0:	mov    esi,0x8ab681ff
  442fb5:	dec    DWORD PTR [ecx-0x3400b701]
  442fbb:	mov    bl,0xbf
  442fbd:	add    BYTE PTR [eax],al
  442fbf:	call   DWORD PTR [esi]
  442fc1:	(bad)  
  442fc2:	mov    ecx,0xff3b43
  442fc7:	add    bl,bl
  442fc9:	add    al,ch
  442fcb:	push   ebx
  442fcc:	cmp    DWORD PTR [eax],eax
  442fce:	dec    DWORD PTR [ecx+0x1bd1ffd8]
  442fd4:	retf   
  442fd5:	add    BYTE PTR [eax],al
  442fd7:	call   FWORD PTR [eax]
  442fd9:	dec    DWORD PTR [esi]
  442fdb:	mov    edi,0xcc6d
  442fe0:	jg     0x442fe1
  442fe2:	push   esi
  442fe3:	popa   
  442fe4:	jne    0x442fe5
  442fe6:	mov    DWORD PTR [eax],eax
  442fe8:	jge    0x442fea
  442fea:	mov    eax,ds:0x89ffb1ff
  442fef:	add    dh,ch
  442ff1:	call   FWORD PTR ds:0x8900a550
  442ff7:	adc    DWORD PTR [ebx-0x1],0x24
  442ffb:	jecxz  0x443037
  442ffd:	add    bh,bh
  442fff:	inc    DWORD PTR [ebp-0x1]
  443002:	push   es
  443003:	fs pop edx
  443005:	add    BYTE PTR [eax],al
  443007:	add    BYTE PTR [ebx-0x1],ch
  44300a:	shl    DWORD PTR [ebp-0x33ff92],0x2a
  443011:	xor    DWORD PTR [edx+0x2c],0xfffffff8
  443015:	(bad)  
  443016:	(bad)  
  443017:	dec    DWORD PTR [ebx]
  443019:	add    BYTE PTR [ebp-0x33334e56],bh
  44301f:	inc    DWORD PTR [edx]
  443021:	add    BYTE PTR [ebp-0x7cffcd88],dh
  443027:	add    BYTE PTR [edi],al
  443029:	inc    DWORD PTR [eax-0x5f]
  44302c:	loop   0x44302d
  44302e:	add    ah,cl
  443030:	outs   dx,BYTE PTR ds:[esi]
  443031:	jmp    FWORD PTR [esi-0x2e43]
  443037:	sbb    DWORD PTR [esp+ecx*8-0x9bfaaa],0xffffff89
  44303f:	add    BYTE PTR [ecx-0x7d],dh
  443042:	xchg   BYTE PTR [ebp+edi*2-0x1],dl
  443046:	add    bh,bh
  443048:	mov    dh,0x83
  44304a:	add    eax,0xff7399
  44304f:	(bad)  
  443050:	jns    0x443051
  443052:	cs inc ecx
  443054:	add    BYTE PTR ss:[eax],al
  443057:	add    cl,al
  443059:	push   DWORD PTR [eax+ebp*4-0x7600ff1f]
  443060:	(bad)  
  443062:	cli    
  443063:	sub    eax,0xff000088
  443068:	stc    
  443069:	add    BYTE PTR [edx+0x1],ah
  44306c:	mov    ecx,0xfb0000ff
  443071:	(bad)  
  443072:	mov    eax,0x7436
  443077:	int3   
  443078:	stc    
  443079:	inc    DWORD PTR [eax-0x42]
  44307c:	loope  0x44307d
  44307e:	add    DWORD PTR [eax],0x6d
  443081:	inc    DWORD PTR [ebp-0x60]
  443084:	lock inc DWORD PTR [eax]
  443087:	mov    DWORD PTR [esi+0x161931ff],edi
  44308d:	inc    DWORD PTR [ebx+0x318973ff]
  443093:	(bad)  
  443094:	aas    
  443095:	add    DWORD PTR [eax],0x0
  443098:	push   esi
  443099:	push   DWORD PTR [ecx]
  44309b:	(bad)  
  44309c:	inc    BYTE PTR [ebx-0x7630007d]
  4430a2:	leave  
  4430a3:	dec    ecx
  4430a4:	dec    ebp
  4430a5:	(bad)  
  4430a6:	(bad)  
  4430a7:	call   DWORD PTR [edi]
  4430a9:	jmp    FWORD PTR [ecx+eiz*1-0x7c007f]
  4430b0:	push   eax
  4430b1:	call   FWORD PTR [ebx]
  4430b3:	mov    ecx,0x8300004a
  4430b8:	push   esp
  4430b9:	add    BYTE PTR [ecx-0x7ce3d1],ah
  4430bf:	push   DWORD PTR [eax]
  4430c1:	add    BYTE PTR ds:0x83ff9fc8,ah
  4430c7:	add    BYTE PTR [edi],al
  4430c9:	dec    ecx
  4430cb:	xor    eax,0x8983ff09
  4430d0:	mov    edx,0xd1e5e900
  4430d5:	add    BYTE PTR [eax],al
  4430d7:	inc    esi
  4430d9:	call   DWORD PTR [ebx]
  4430db:	mov    bl,0x35
  4430dd:	cmp    edi,0xffffffff
  4430e0:	(bad)  
  4430e1:	push   DWORD PTR [edi+0x6f]
  4430e4:	inc    edi
  4430e5:	add    BYTE PTR [ebx-0x2c007801],al
  4430eb:	push   esp
  4430ec:	call   0xe4ff:0x58ff0000
  4430f3:	das    
  4430f4:	xchg   edx,eax
  4430f5:	add    BYTE PTR [eax],al
  4430f7:	mov    DWORD PTR [esi-0x34],esp
  4430fa:	add    esp,DWORD PTR [ebp+0x62]
  4430fd:	mov    esp,ecx
  4430ff:	add    dl,al
  443101:	(bad)  
  443102:	fstp   DWORD PTR ds:0xffff47
  443108:	cli    
  443109:	jmp    FWORD PTR [esi+0xff25e5]
  44310f:	(bad)  
  443110:	mov    edx,0xa1af12ff
  443115:	mov    DWORD PTR [eax],eax
  443117:	jmp    DWORD PTR [ebp-0x10581501]
  44311d:	inc    DWORD PTR [eax]
  44311f:	adc    DWORD PTR [edi-0xb33677d],0x0
  443126:	add    BYTE PTR [ecx+0x574eff37],cl
  44312c:	push   ebx
  44312d:	inc    DWORD PTR [ebx-0x4d76cd01]
  443133:	ds (bad) 
  443135:	inc    DWORD PTR [eax]
  443137:	add    BYTE PTR [eax],dh
  443139:	int3   
  44313a:	push   ecx
  44313b:	adc    eax,0xffff09
  443140:	sbb    edi,edi
  443142:	hlt    
  443143:	imul   eax,DWORD PTR [edx],0x0
  443146:	(bad)  
  443147:	dec    DWORD PTR ds:0x5afda8ff
  44314d:	(bad)  
  44314e:	inc    DWORD PTR [eax]
  443150:	push   ebx
  443151:	add    BYTE PTR [edx-0x18],ah
  443154:	and    BYTE PTR [ebx-0x88ff01],al
  44315a:	and    esp,DWORD PTR [ebp-0x7d]
  44315d:	inc    DWORD PTR [eax]
  44315f:	mov    DWORD PTR [ecx],esp
  443161:	sbb    eax,0x54
  443164:	jp     0x443166
  443166:	mov    DWORD PTR [eax],eax
  443168:	(bad)  
  443169:	dec    DWORD PTR [ecx+ecx*8+0x26]
  44316d:	add    BYTE PTR [eax],al
  44316f:	mov    esp,esp
  443171:	or     DWORD PTR [edi+0x1f],0x16
  443175:	add    BYTE PTR [ecx+0x4dffa1cc],cl
  44317b:	lds    ebp,FWORD PTR [edi-0x1]
  44317e:	(bad)  
  44317f:	(bad)  
  443180:	cmp    edi,edi
  443182:	neg    dh
  443184:	mov    esp,0x63ff8300
  443189:	add    cl,cl
  44318b:	or     DWORD PTR [ebp-0x1],0xffffff83
  44318f:	add    BYTE PTR [ebp-0x34],ch
  443192:	nop
  443193:	dec    edx
  443194:	test   DWORD PTR [eax],0xff44ff83
  44319a:	adc    BYTE PTR [edi+0x24],ch
  44319d:	add    bh,bh
  44319f:	sub    DWORD PTR [eax],0xffffff83
  4431a2:	test   eax,0xff004cc1
  4431a7:	push   DWORD PTR [eax+eax*1]
  4431aa:	std    
  4431ab:	fwait
  4431ac:	loope  0x4431ae
  4431ae:	int3   
  4431af:	dec    DWORD PTR [eax+eax*1+0x2a]
  4431b3:	xor    esi,DWORD PTR [esi+0x70ff00ff]
  4431b9:	add    BYTE PTR [ebp+0x6a],bh
  4431bc:	mov    bl,0xff
  4431be:	cmp    edi,0x4f
  4431c1:	int3   
  4431c2:	imul   ebx,DWORD PTR [edi+ebp*2],0x0
  4431c6:	inc    DWORD PTR [ebx-0x5c27ff5f]
  4431cc:	push   edx
  4431cd:	(bad)  
  4431ce:	dec    esp
  4431d0:	mov    DWORD PTR [eax],eax
  4431d2:	and    BYTE PTR [esi+0x838314],dh
  4431d8:	ret    
  4431d9:	call   FWORD PTR [edx-0xeeda]
  4431df:	(bad)  
  4431e0:	fld    QWORD PTR [eax]
  4431e2:	xchg   DWORD PTR [ebx-0xff58],edx
  4431e8:	dec    eax
  4431e9:	add    BYTE PTR [ecx+0xffbbb7],dl
  4431ef:	add    BYTE PTR [eax-0x55afaf00],al
  4431f5:	add    BYTE PTR [ebx-0x14003c00],al
  4431fb:	lds    esp,FWORD PTR [ecx+0x190000ff]
  443201:	inc    DWORD PTR [ebx+0x63]
  443204:	jge    0x443206
  443206:	inc    DWORD PTR [ebx+0x647789e3]
  44320c:	add    BYTE PTR ss:[ebx-0x3a335a01],al
  443213:	pop    ebx
  443214:	out    0xff,al
  443216:	(bad)  
  443217:	jmp    DWORD PTR [edx+0x6b9f99ff]
  44321d:	add    DWORD PTR [ebx-0x13004701],0xfffffff1
  443224:	adc    al,0xff
  443226:	add    BYTE PTR [ecx+0x5b6c0061],cl
  44322c:	or     al,BYTE PTR [eax]
  44322e:	add    DWORD PTR [eax],0xffffffc9
  443231:	jmp    FWORD PTR [edx-0x65]
  443234:	cmp    bh,0xcc
  443237:	push   eax
  443239:	add    BYTE PTR [edi-0x3],dh
  44323c:	jle    0x44323e
  44323e:	cmp    edi,0xe
  443241:	sub    DWORD PTR [edx],0xffffffd0
  443244:	sbb    al,0x89
  443246:	add    BYTE PTR [ebx+0x507e832c],al
  44324c:	pop    es
  44324d:	add    BYTE PTR [ebx+0x4a83e800],al
  443253:	dec    eax
  443254:	mov    bl,0xff
  443256:	add    bh,bh
  443258:	mov    eax,0x256bdf00
  44325d:	add    BYTE PTR [eax],al
  44325f:	jmp    FWORD PTR [ecx+0x7b1053ff]
  443265:	add    bh,bh
  443267:	inc    ecx
  443269:	int3   
  44326a:	adc    eax,0xffffbd57
  44326f:	call   DWORD PTR [ebx+eax*4-0x7592e]
  443276:	cmp    edi,0xffffffe7
  443279:	add    ah,cl
  44327b:	push   0xffffffdd
  44327d:	inc    DWORD PTR [ebx-0x64001800]
  443283:	outs   dx,BYTE PTR ds:[esi]
  443284:	adc    al,0x83
  443286:	add    BYTE PTR [eax],al
  443288:	push   ebp
  443289:	add    BYTE PTR [ebx],dl
  44328b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44328c:	outs   dx,DWORD PTR ds:[esi]
  44328d:	(bad)  
  44328e:	(bad)  
  44328f:	jmp    FWORD PTR [edi]
  443291:	add    BYTE PTR [ecx],al
  443293:	shr    BYTE PTR [ecx],cl
  443295:	int3   
  443296:	(bad)  
  443297:	jmp    DWORD PTR [edx-0x303f857d]
  44329d:	inc    DWORD PTR [eax]
  44329f:	inc    ebx
  4432a1:	add    ebp,0x5c
  4432a4:	fadd   QWORD PTR [eax]
  4432a6:	add    bh,bh
  4432a8:	push   cs
  4432a9:	add    BYTE PTR [edi-0xb8f4],al
  4432af:	inc    esp
  4432b1:	int3   
  4432b2:	stos   BYTE PTR es:[edi],al
  4432b3:	sub    eax,0xff890042
  4432b8:	mov    dh,0xff
  4432ba:	and    bh,BYTE PTR [ecx+edx*4]
  4432bd:	mov    edi,edi
  4432bf:	mov    esi,esi
  4432c1:	(bad)  
  4432c2:	mov    esi,0xff0e90
  4432c7:	(bad)  
  4432c8:	jl     0x4432c9
  4432ca:	mov    al,ds:0xff002ed0
  4432cf:	add    dh,bh
  4432d1:	jmp    FWORD PTR [edi+0x74]
  4432d4:	aam    0xcc
  4432d6:	(bad)  
  4432d7:	call   DWORD PTR [esi-0x61661000]
  4432dd:	inc    DWORD PTR [eax]
  4432df:	sub    esp,0x0
  4432e2:	push   ecx
  4432e3:	cmp    BYTE PTR [ebx+eax*4-0x1],ah
  4432e7:	add    bl,ah
  4432e9:	adc    DWORD PTR [esi],0x39
  4432ec:	mov    cl,0xff
  4432ee:	inc    DWORD PTR [eax]
  4432f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4432f1:	jmp    DWORD PTR [edx]
  4432f3:	sub    al,0xca
  4432f5:	add    DWORD PTR [eax],0x0
  4432f8:	pop    esi
  4432f9:	int3   
  4432fa:	repnz xor cl,bl
  4432fd:	add    BYTE PTR [eax],al
  4432ff:	push   DWORD PTR [ebx-0x1]
  443302:	xor    edi,DWORD PTR [edx]
  443304:	dec    ebx
  443305:	(bad)  
  443306:	(bad)  
  443307:	(bad)  
  443308:	out    dx,eax
  443309:	jmp    ebp
  44330b:	outs   dx,DWORD PTR ds:[esi]
  44330c:	xlat   BYTE PTR ds:[ebx]
  44330d:	add    BYTE PTR [eax],al
  44330f:	call   DWORD PTR [edi]
  443311:	dec    DWORD PTR [ebx+esi*4-0x37]
  443315:	mov    edi,edi
  443317:	adc    DWORD PTR [edi+0x51ea8aff],0xffffffff
  44331e:	(bad)  
  44331f:	(bad)  
  443320:	mov    esi,0x39fc66ff
  443325:	add    BYTE PTR [ecx-0x1e003801],cl
  44332b:	and    eax,0xcc8389b8
  443330:	pop    edi
  443331:	jmp    esi
  443333:	out    dx,eax
  443334:	sar    edi,cl
  443336:	(bad)  
  443337:	dec    DWORD PTR [esi+0x486a583]
  44333d:	add    BYTE PTR [eax],al
  44333f:	add    ch,cl
  443341:	and    DWORD PTR [esi+edi*4],0xffffff9c
  443345:	add    BYTE PTR [eax],al
  443347:	jmp    FWORD PTR [edi]
  443349:	add    BYTE PTR [edx],dh
  44334b:	out    0x82,eax
  44334d:	add    bh,bh
  44334f:	(bad)  
  443350:	mov    ecx,0x2e5fde00
  443355:	(bad)  
  443356:	inc    DWORD PTR [eax]
  443358:	dec    edi
  443359:	add    BYTE PTR [esi+0x18],ch
  44335c:	cmp    DWORD PTR [ecx+0x2600ff],ecx
  443362:	gs push ss
  443364:	inc    DWORD PTR [ebx-0x780100]
  44336a:	ficomp DWORD PTR [ebp+eax*8-0x34]
  44336e:	cmp    edi,0xffffffe0
  443371:	mov    DWORD PTR [esi],ebp
  443373:	adc    dl,BYTE PTR [esi+0x0]
  443376:	(bad)  
  443377:	push   DWORD PTR ds:0xb2edf5cc
  44337d:	inc    DWORD PTR [eax]
  44337f:	add    BYTE PTR [edi+edi*8-0x1cd4c8],dl
  443386:	(bad)  
  443387:	push   DWORD PTR [ecx]
  443389:	add    BYTE PTR [edi-0x3f],al
  44338c:	scas   eax,DWORD PTR es:[edi]
  44338d:	add    bh,bh
  44338f:	inc    DWORD PTR [ecx+0x0]
  443392:	mov    edx,0xff89ff6c
  443397:	inc    edi
  443399:	int3   
  44339a:	pushf  
  44339b:	jne    0x443412
  44339d:	cmp    edi,0xffffff89
  4433a0:	add    DWORD PTR [ecx-0x4e80c7],ecx
  4433a6:	(bad)  
  4433a7:	inc    DWORD PTR [edi+0x0]
  4433aa:	add    DWORD PTR [ebp+edi*2-0x1effff7d],ecx
  4433b1:	dec    esp
  4433b3:	stc    
  4433b4:	fdivr  st,st(7)
  4433b6:	(bad)  
  4433b7:	dec    ecx
  4433b9:	add    BYTE PTR [ebp+0x66],ch
  4433bc:	jns    0x4433be
  4433be:	inc    DWORD PTR [ebx+0x4cddff28]
  4433c4:	cmp    edi,0xffad0083
  4433ca:	pop    esp
  4433cb:	(bad)  
  4433cc:	lahf   
  4433cd:	inc    DWORD PTR [eax]
  4433cf:	(bad)  
  4433d0:	aas    
  4433d1:	add    BYTE PTR [esp+edi*1-0x3a],al
  4433d5:	mov    DWORD PTR [eax],eax
  4433d7:	int3   
  4433d8:	and    bh,bh
  4433da:	inc    edx
  4433db:	jmp    0xcc45330c
  4433e0:	aad    0x0
  4433e2:	mov    ch,0x8
  4433e4:	stc    
  4433e5:	add    bh,bh
  4433e7:	push   DWORD PTR [ebx+0x5cd8b9cc]
  4433ed:	int3   
  4433ee:	mov    DWORD PTR [eax],eax
  4433f0:	cmp    edi,edi
  4433f2:	sub    al,0x12
  4433f4:	sar    edi,0x83
  4433f7:	call   FWORD PTR [esi-0x2854d401]
  4433fd:	add    BYTE PTR [eax],al
  4433ff:	call   DWORD PTR [edi+edi*8]
  443402:	and    cl,BYTE PTR [esi]
  443404:	and    al,0xff
  443406:	or     esp,0xffffffcc
  443409:	int3   
  44340a:	int3   
  44340b:	int3   
  44340c:	int3   
  44340d:	int3   
  44340e:	int3   
  44340f:	int3   
  443410:	mov    eax,ds:0x447d38
  443415:	sub    esp,0x8
  443418:	cmp    eax,0xbb40e64e
  44341d:	je     0x443431
  44341f:	test   eax,0xffff0000
  443424:	je     0x443431
  443426:	not    eax
  443428:	mov    ds:0x447d10,eax
  44342d:	add    esp,0x8
  443430:	ret    
  443431:	push   esi
  443432:	call   DWORD PTR ds:0x444044
  443438:	mov    esi,eax
  44343a:	call   DWORD PTR ds:0x444000
  443440:	xor    esi,eax
  443442:	call   DWORD PTR ds:0x444040
  443448:	xor    esi,eax
  44344a:	lea    eax,[esp+0x4]
  44344e:	push   eax
  44344f:	call   DWORD PTR ds:0x44403c
  443455:	mov    ecx,DWORD PTR [esp+0x8]
  443459:	xor    ecx,DWORD PTR [esp+0x4]
  44345d:	xor    esi,ecx
  44345f:	cmp    esi,0xbb40e64e
  443465:	jne    0x44347f
  443467:	mov    esi,0xbb40e64f
  44346c:	mov    DWORD PTR ds:0x447d38,esi
  443472:	not    esi
  443474:	mov    DWORD PTR ds:0x447d10,esi
  44347a:	pop    esi
  44347b:	add    esp,0x8
  44347e:	ret    
  44347f:	test   esi,0xffff0000
  443485:	jne    0x443494
  443487:	mov    edx,esi
  443489:	or     edx,0x4711
  44348f:	shl    edx,0x10
  443492:	or     esi,edx
  443494:	mov    DWORD PTR ds:0x447d38,esi
  44349a:	not    esi
  44349c:	mov    DWORD PTR ds:0x447d10,esi
  4434a2:	pop    esi
  4434a3:	add    esp,0x8
  4434a6:	ret    
  4434a7:	int3   
  4434a8:	int3   
  4434a9:	int3   
  4434aa:	int3   
  4434ab:	int3   
  4434ac:	int3   
  4434ad:	int3   
  4434ae:	int3   
  4434af:	int3   
  4434b0:	sub    esp,0x8
  4434b3:	push   0x0
  4434b5:	push   0x0
  4434b7:	push   0x0
  4434b9:	push   0x446a44
  4434be:	push   0x0
  4434c0:	call   DWORD PTR ds:0x444064
  4434c6:	lea    eax,[esp]
  4434c9:	push   eax
  4434ca:	call   DWORD PTR ds:0x444080
  4434d0:	mov    eax,DWORD PTR [esp]
  4434d3:	mov    ecx,DWORD PTR [eax]
  4434d5:	lea    edx,[esp+0x4]
  4434d9:	push   edx
  4434da:	push   0x447d44
  4434df:	push   eax
  4434e0:	push   0x0
  4434e2:	push   eax
  4434e3:	mov    eax,DWORD PTR [ecx+0x24]
  4434e6:	call   eax
  4434e8:	mov    ds:0x447d14,eax
  4434ed:	xor    eax,eax
  4434ef:	add    esp,0x8
  4434f2:	ret    0x8
  4434f5:	int3   
  4434f6:	int3   
  4434f7:	int3   
  4434f8:	int3   
  4434f9:	int3   
  4434fa:	int3   
  4434fb:	int3   
  4434fc:	int3   
  4434fd:	int3   
  4434fe:	int3   
  4434ff:	int3   
  443500:	mov    eax,ds:0x444008
  443505:	mov    ds:0x447d40,eax
  44350a:	ret    
  44350b:	int3   
  44350c:	int3   
  44350d:	int3   
  44350e:	int3   
  44350f:	int3   
  443510:	mov    eax,ds:0x444004
  443515:	mov    ds:0x447d3c,eax
  44351a:	ret    
