
c13faee0bbf381aa34989e10e282160caee0e6caae633f6a4f5865a093e4077d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [eax+0x7cdddd21],ecx
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax+0x18],0x6d6c6c63
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	sbb    eax,0x495a441
  402f46:	pop    eax
  402f47:	jns    0x402f7b
  402f49:	ins    DWORD PTR es:[edi],dx
  402f4a:	ss jecxz 0x402f0d
  402f4d:	jno    0x402f26
  402f4f:	je     0x402fb4
  402f51:	mov    esp,0x8cb82fb8
  402f56:	mov    ch,0xae
  402f58:	mov    esi,0xd2ec34f
  402f5d:	outs   dx,DWORD PTR ds:[esi]
  402f5e:	fstp   DWORD PTR [eax]
  402f60:	inc    ebp
  402f61:	mov    ebp,0xfe6f81f6
  402f66:	daa    
  402f67:	shl    DWORD PTR [ecx],cl
  402f69:	mov    ecx,0x842479e2
  402f6e:	out    dx,eax
  402f6f:	and    al,BYTE PTR [ebp+0xcb1cba2]
  402f75:	sub    eax,0x4ddee452
  402f7a:	inc    edx
  402f7b:	pop    eax
  402f7c:	fwait
  402f7d:	out    0xb4,al
  402f7f:	lods   al,BYTE PTR ds:[esi]
  402f80:	in     eax,0x60
  402f82:	(bad)  
  402f83:	fst    QWORD PTR [ecx-0x66]
  402f86:	in     eax,0x2d
  402f88:	das    
  402f89:	(bad)  
  402f8a:	adc    DWORD PTR [esi+ebx*1+0x60],ebp
  402f8e:	nop
  402f8f:	shl    DWORD PTR [esi],1
  402f91:	add    edx,ebx
  402f93:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  402f95:	push   ds
  402f96:	jecxz  0x402fdb
  402f98:	int    0xbf
  402f9a:	sub    cl,BYTE PTR [eax-0x532085ca]
  402fa0:	xlat   BYTE PTR ds:[ebx]
  402fa1:	cmc    
  402fa2:	popf   
  402fa3:	pop    edi
  402fa4:	xor    eax,0xe2298fe2
  402fa9:	(bad)  
  402faa:	mov    cl,0x0
  402fac:	shl    esi,1
  402fae:	push   ss
  402faf:	outs   dx,BYTE PTR ds:[esi]
  402fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fb1:	rol    DWORD PTR [ebp+0x68],1
  402fb4:	imul   esi,DWORD PTR [ebx+esi*1-0x5e],0xffffff8b
  402fb9:	dec    esp
  402fba:	repz or al,0x75
  402fbd:	ja     0x402fce
  402fbf:	push   cs
  402fc0:	xchg   esi,eax
  402fc1:	jmp    0x402f73
  402fc3:	ret    0x9596
  402fc6:	xchg   edi,eax
  402fc7:	dec    esp
  402fc8:	pop    eax
  402fc9:	jle    0x402fe3
  402fcb:	test   BYTE PTR [eax+0x1a],bl
  402fce:	adc    eax,edx
  402fd0:	push   ebp
  402fd1:	mov    bl,0xa3
  402fd3:	aad    0xae
  402fd5:	sbb    eax,0xfffffff3
  402fd8:	jle    0x402fcb
  402fda:	rcr    DWORD PTR [edx],0x14
  402fdd:	inc    edx
  402fde:	out    dx,eax
  402fdf:	jp     0x402f75
  402fe1:	out    dx,eax
  402fe2:	cli    
  402fe3:	pop    eax
  402fe4:	cmp    esp,DWORD PTR [ebp-0x59af45d0]
  402fea:	imul   edi,DWORD PTR [edi-0xc53a2f4],0x17
  402ff1:	xor    ebx,DWORD PTR [esi+0x4d0d04e0]
  402ff7:	shr    DWORD PTR [eax],cl
  402ff9:	add    BYTE PTR [edx+0x39],dh
  402ffc:	jne    0x402f85
  402ffe:	std    
  402fff:	pop    ss
  403000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403001:	(bad)  
  403002:	xchg   edi,eax
  403003:	inc    ebp
  403004:	push   edi
  403005:	not    edx
  403007:	xchg   esp,eax
  403008:	cmc    
  403009:	add    eax,DWORD PTR [esi-0x6f1ea3c4]
  40300f:	les    ebx,FWORD PTR [eax]
  403011:	pcmpeqd mm5,QWORD PTR [esi]
  403014:	cmc    
  403015:	mov    gs,WORD PTR [eax+0x2068193f]
  40301b:	adc    DWORD PTR [eax-0x58],ebx
  40301e:	sub    BYTE PTR [ebx],bh
  403020:	push   esi
  403021:	mov    ah,bh
  403023:	cwde   
  403024:	test   cl,bh
  403026:	dec    edi
  403027:	popa   
  403028:	rcr    ebx,cl
  40302a:	xlat   BYTE PTR ds:[ebx]
  40302b:	mov    es,WORD PTR [ebp+ebp*4-0x38]
  40302f:	jns    0x402ff6
  403031:	inc    ecx
  403032:	mov    edi,0x9ec14bc
  403037:	and    edi,DWORD PTR [eax]
  403039:	dec    esp
  40303a:	fldcw  WORD PTR [eax-0x103b4d1]
  403040:	dec    eax
  403041:	xchg   ecx,eax
  403042:	xchg   ecx,eax
  403043:	not    dh
  403045:	(bad)  
  403046:	xchg   ebp,eax
  403047:	cmp    DWORD PTR [ebp+0xa],ebp
  40304a:	xchg   edi,eax
  40304b:	arpl   di,si
  40304d:	shr    esi,0xd4
  403050:	cmp    al,0x89
  403052:	ret    0xde02
  403055:	and    DWORD PTR [edi-0x1e],0x52
  403059:	sar    BYTE PTR [ebx+eiz*4],1
  40305c:	adc    DWORD PTR [edi],ebp
  40305e:	aas    
  40305f:	jl     0x402ff9
  403061:	lds    eax,FWORD PTR [esi]
  403063:	adc    ecx,DWORD PTR [ebx+0x4]
  403066:	leave  
  403067:	mov    bl,0x10
  403069:	add    BYTE PTR [edx],ah
  40306b:	xlat   BYTE PTR ds:[ebx]
  40306c:	daa    
  40306d:	cmp    al,0x6e
  40306f:	lock js 0x40300e
  403072:	mov    BYTE PTR [esp+eax*1],bl
  403075:	(bad)  
  403076:	sbb    al,0xb9
  403078:	daa    
  403079:	push   ecx
  40307a:	shl    BYTE PTR [esi],cl
  40307c:	fst    DWORD PTR [ebp+0x32]
  40307f:	xchg   edx,eax
  403080:	sub    al,0xd1
  403082:	pushf  
  403083:	outs   dx,BYTE PTR ds:[esi]
  403084:	mov    ebx,0xbf13712c
  403089:	mov    esi,0x1c86b33a
  40308e:	test   DWORD PTR [edi+esi*2+0x75],ebp
  403092:	cmp    dh,BYTE PTR [ecx-0x7f]
  403095:	out    dx,eax
  403096:	rcr    DWORD PTR [ebx],cl
  403098:	shl    DWORD PTR [ecx],1
  40309a:	mov    ebx,0x2caa25ab
  40309f:	and    cl,bl
  4030a1:	sub    al,BYTE PTR [edx]
  4030a3:	(bad)  
  4030a4:	(bad)  
  4030a5:	fcmove st,st(7)
  4030a7:	imul   edx,DWORD PTR [ecx+0x3f],0x24245f43
  4030ae:	mov    ecx,0x8adb0b42
  4030b3:	pop    ds
  4030b4:	aad    0x92
  4030b6:	cdq    
  4030b7:	sbb    esp,ecx
  4030b9:	xchg   BYTE PTR [edx],dh
  4030bb:	pop    ds
  4030bc:	dec    ebx
  4030bd:	mov    ah,BYTE PTR [esi]
  4030bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030c0:	call   0x7b64:0xbf7260f3
  4030c7:	imul   ecx,ecx,0xffffffd1
  4030ca:	(bad)  
  4030cb:	dec    ecx
  4030cc:	or     eax,0xcc8f6f8f
  4030d1:	ficomp WORD PTR [eax-0x26]
  4030d4:	rcr    DWORD PTR [edx+0x2ca9a874],cl
  4030da:	dec    esp
  4030db:	or     ch,BYTE PTR cs:[ecx+ebx*8-0x48]
  4030e0:	cs cmc 
  4030e2:	mov    ecx,0xe0bd0380
  4030e7:	(bad)  
  4030e8:	std    
  4030e9:	sar    BYTE PTR [edi-0x5a226f42],0x73
  4030f0:	fwait
  4030f1:	sbb    DWORD PTR [esi+0x54127bd2],edx
  4030f7:	jge    0x40309f
  4030f9:	loopne 0x403129
  4030fb:	jmp    0x58f4257f
  403100:	inc    edi
  403101:	aad    0xae
  403103:	xor    dl,ah
  403105:	aaa    
  403106:	rcr    BYTE PTR [eax],0x8f
  403109:	fisttp QWORD PTR [eax-0xd]
  40310c:	outs   dx,DWORD PTR ds:[esi]
  40310d:	xor    cl,cl
  40310f:	retf   
  403110:	mov    ebx,0x771ce195
  403115:	jle    0x403193
  403117:	jmp    0xac267c6b
  40311c:	mov    cs,WORD PTR ds:[ecx+0x0]
  403120:	int3   
  403121:	inc    eax
  403122:	sbb    eax,DWORD PTR [edx+0x3cb6d68a]
  403128:	add    al,0xa4
  40312a:	and    al,0x84
  40312c:	inc    edi
  40312d:	inc    esi
  40312e:	shl    BYTE PTR [ecx-0x4a105bf0],0xc7
  403135:	sbb    esp,ebx
  403137:	(bad)  
  403138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403139:	xor    eax,0x3e53c5a2
  40313e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40313f:	ror    DWORD PTR [ecx+eax*4+0x5788fb5c],1
  403146:	jo     0x403172
  403148:	cmp    cl,BYTE PTR [edi]
  40314a:	push   ecx
  40314b:	ror    ebx,cl
  40314d:	inc    ecx
  40314e:	add    bl,dl
  403150:	fild   QWORD PTR [ebp+0x43792c32]
  403156:	pop    ecx
  403157:	cld    
  403158:	int    0xa9
  40315a:	out    0xde,al
  40315c:	gs sub al,0x6f
  40315f:	dec    esi
  403160:	js     0x40317c
  403162:	dec    ebx
  403163:	in     al,0x1d
  403165:	dec    eax
  403166:	fnclex 
  403168:	push   0x59a69847
  40316d:	ret    
  40316e:	into   
  40316f:	call   0x8d76a045
  403174:	inc    ebp
  403175:	adc    ecx,DWORD PTR [ecx-0x3b]
  403178:	xor    cl,BYTE PTR [esi-0x1]
  40317b:	es loopne 0x403167
  40317e:	cmc    
  40317f:	stos   BYTE PTR es:[edi],al
  403180:	jp     0x403192
  403182:	popf   
  403183:	ss xchg ecx,eax
  403185:	out    0x18,eax
  403187:	mov    ds:0x8c92ddec,eax
  40318c:	cmc    
  40318d:	in     al,0x7d
  40318f:	adc    ebx,DWORD PTR [edi]
  403191:	xchg   ebx,eax
  403192:	sbb    BYTE PTR [ebx-0x57],bl
  403195:	(bad)  
  403197:	and    bl,dl
  403199:	lahf   
  40319a:	ret    
  40319b:	cmp    eax,0x66864518
  4031a0:	cmp    eax,0x1954ee9a
  4031a5:	xor    DWORD PTR [ebx+0x431a6958],edi
  4031ab:	sahf   
  4031ac:	jns    0x4031cf
  4031ae:	fstp   QWORD PTR [eax+0x5c]
  4031b1:	and    ebp,DWORD PTR [ebx]
  4031b3:	fs call 0x3b4f3fd
  4031b9:	loopne 0x4031a4
  4031bb:	pusha  
  4031bc:	jo     0x403225
  4031be:	pop    ss
  4031bf:	leave  
  4031c0:	mov    WORD PTR [eax-0x54a9587d],gs
  4031c6:	outs   dx,BYTE PTR ds:[esi]
  4031c7:	es (bad) 
  4031c9:	or     edx,DWORD PTR [edx]
  4031cb:	(bad)  
  4031cc:	mov    al,0x31
  4031ce:	mov    edx,0xdb1f5ad3
  4031d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031d4:	shl    BYTE PTR [ebx-0x45],1
  4031d7:	mov    edi,0x84078a77
  4031dc:	add    eax,0xb8659b4e
  4031e1:	iret   
  4031e2:	cmp    DWORD PTR [esi+0x2502af58],eax
  4031e8:	aam    0x1d
  4031ea:	pop    ebx
  4031eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031ec:	ror    DWORD PTR [edi],0x5a
  4031ef:	lock or edx,DWORD PTR [ecx-0x61]
  4031f3:	inc    esi
  4031f4:	test   eax,0x7cb89a63
  4031f9:	aad    0x91
  4031fb:	xchg   ebx,eax
  4031fc:	lahf   
  4031fd:	cmp    ebp,DWORD PTR [eax+0x3c]
  403200:	out    0xde,eax
  403202:	mov    edi,cs
  403204:	adc    DWORD PTR [ecx+0x23b93c78],esp
  40320a:	or     edi,edx
  40320c:	push   ebp
  40320d:	xchg   edi,eax
  40320e:	repz cmp dl,BYTE PTR [esi-0x41]
  403212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403213:	add    ch,ah
  403215:	or     DWORD PTR [ecx-0xd],ebp
  403218:	aaa    
  403219:	sbb    eax,0xcc7c4861
  40321e:	mov    ds:0x3a4657e6,al
  403223:	xor    eax,0x2a12a0ef
  403228:	push   edx
  403229:	(bad)  
  40322a:	popf   
  40322b:	lds    eax,FWORD PTR [edx]
  40322d:	retf   0x198c
  403230:	cmp    al,0x64
  403232:	xchg   esi,eax
  403233:	xchg   ebx,eax
  403234:	nop
  403235:	int3   
  403236:	loopne 0x4031ba
  403238:	xlat   BYTE PTR ds:[ebx]
  403239:	fucomip st,st(1)
  40323b:	xor    DWORD PTR [edx+0x5c],esp
  40323e:	in     al,0xe8
  403240:	or     eax,DWORD PTR [edi]
  403242:	sub    al,0xb0
  403244:	retf   
  403245:	mov    ebx,0xd8bbfac
  40324a:	sub    al,0x5
  40324c:	cs push esi
  40324e:	pop    ds
  40324f:	cmp    edx,DWORD PTR [ebp-0x7b]
  403252:	int    0x12
  403254:	adc    bh,dh
  403256:	xor    edi,DWORD PTR [edx-0x15ce79e5]
  40325c:	stos   DWORD PTR es:[edi],eax
  40325d:	mov    ch,dh
  40325f:	(bad)  
  403260:	mov    ah,0x96
  403262:	adc    eax,0xee4e8ada
  403267:	jg     0x40329c
  403269:	sbb    al,0x0
  40326b:	inc    ebp
  40326c:	and    bh,BYTE PTR [ebp-0x1]
  40326f:	in     al,dx
  403270:	call   0x4be1:0x8ea07d89
  403277:	xor    bl,dl
  403279:	sbb    DWORD PTR [ebp+eiz*2+0x4d689f4a],esi
  403280:	jmp    FWORD PTR [edi]
  403282:	cmp    esp,ecx
  403284:	push   ecx
  403285:	add    al,0x4d
  403287:	jnp    0x4032ea
  403289:	mov    edi,0x29b972be
  40328e:	fisttp QWORD PTR [esi-0x15]
  403291:	add    BYTE PTR [esi],0x9
  403294:	aad    0xf4
  403296:	push   edi
  403297:	test   BYTE PTR [edx+0x5949a2c8],dh
  40329d:	cmp    esi,edi
  40329f:	push   ss
  4032a0:	sub    edx,DWORD PTR [edx+0x5332f78f]
  4032a6:	mov    esp,ecx
  4032a8:	push   esp
  4032a9:	sar    esi,cl
  4032ab:	sbb    eax,0x975a5a13
  4032b0:	or     ebx,ebp
  4032b2:	int    0xf7
  4032b4:	inc    esi
  4032b5:	mov    ds:0x41a5d60f,al
  4032ba:	or     eax,0x48960dad
  4032bf:	test   BYTE PTR [ebx],ch
  4032c1:	cmc    
  4032c2:	data16 jge 0x40332f
  4032c5:	jge    0x4032f6
  4032c7:	sub    edx,DWORD PTR [esi-0x51]
  4032ca:	lahf   
  4032cb:	loope  0x4032c1
  4032cd:	cmc    
  4032ce:	jno    0x4032aa
  4032d0:	cmp    edx,edi
  4032d2:	into   
  4032d3:	in     al,0xcb
  4032d5:	cmp    dh,cl
  4032d7:	and    bh,al
  4032d9:	sbb    DWORD PTR [edx],ebp
  4032db:	and    eax,0x6de50e6f
  4032e0:	mov    bl,0xbc
  4032e2:	imul   DWORD PTR [esi+0x2ec1ea76]
  4032e8:	sahf   
  4032e9:	jbe    0x40332f
  4032eb:	js     0x403349
  4032ed:	adc    al,0x43
  4032ef:	cmp    al,0x23
  4032f1:	inc    esi
  4032f2:	call   0xe79d0b42
  4032f7:	mov    bh,0x7a
  4032f9:	mov    edi,0x64068988
  4032fe:	mov    eax,0xab1bf535
  403303:	push   ecx
  403304:	(bad)  
  403305:	and    eax,0x8fe90569
  40330a:	jecxz  0x40332a
  40330c:	dec    eax
  40330d:	jns    0x4032e6
  40330f:	lods   al,BYTE PTR ds:[esi]
  403310:	pop    es
  403311:	loope  0x4032b8
  403313:	jp     0x4032de
  403315:	xchg   ebp,eax
  403316:	inc    esi
  403317:	mov    esp,0xd067e428
  40331c:	cmp    DWORD PTR [esp+eax*1-0x6a576226],ebp
  403323:	hlt    
  403324:	in     al,dx
  403325:	ret    
  403326:	mov    dl,BYTE PTR [ebx+0x6d]
  403329:	mov    al,ds:0xcfbb9c
  40332e:	mov    ah,0xea
  403330:	jmp    0xb21f:0x6510f30e
  403337:	out    0x6c,eax
  403339:	je     0x4033b0
  40333b:	(bad)  
  40333c:	(bad)  
  40333d:	gs sbb dh,dh
  403340:	adc    edx,eax
  403342:	stos   BYTE PTR es:[edi],al
  403343:	cli    
  403344:	push   ss
  403345:	push   edx
  403346:	push   ebx
  403347:	jb     0x403376
  403349:	cmp    ecx,DWORD PTR ds:0xfa0dcdef
  40334f:	adc    cl,al
  403351:	jl     0x4033a8
  403353:	ja     0x4032f8
  403355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403356:	and    DWORD PTR [ebp-0x58],ecx
  403359:	aas    
  40335a:	les    edx,FWORD PTR [eax+0x7fed2091]
  403360:	out    dx,eax
  403361:	push   esi
  403362:	fwait
  403363:	or     DWORD PTR [edx-0xd],edx
  403366:	leave  
  403367:	jmp    0x8c02:0x801be404
  40336e:	lods   eax,DWORD PTR ds:[esi]
  40336f:	adc    eax,0xefb8dc21
  403374:	scas   eax,DWORD PTR es:[edi]
  403375:	cmc    
  403376:	xor    cl,ah
  403378:	fmulp  st(3),st
  40337a:	adc    BYTE PTR [esi],bh
  40337c:	cli    
  40337d:	mov    ds:0xc7f4068e,al
  403382:	test   DWORD PTR [ebp-0x1c3f2875],0xc38dcb4e
  40338c:	int    0x8e
  40338e:	sub    al,0x4d
  403390:	cmp    eax,0x8dd97045
  403395:	xor    al,0x1e
  403397:	xchg   DWORD PTR [edi-0x2808e181],ebx
  40339d:	int    0xb3
  40339f:	clc    
  4033a0:	xchg   DWORD PTR [eax+0x66],eax
  4033a3:	pop    edx
  4033a4:	push   ebx
  4033a5:	mov    eax,ds:0x3d6502c4
  4033aa:	popf   
  4033ab:	enter  0x374b,0xd5
  4033af:	popa   
  4033b0:	retf   
  4033b1:	sbb    ebp,DWORD PTR [eax]
  4033b3:	xor    bh,dh
  4033b5:	test   al,0x5c
  4033b7:	adc    DWORD PTR [ebx+0x7],ebp
  4033ba:	sbb    eax,0xadca7fa5
  4033bf:	xor    BYTE PTR [eax+ecx*1],al
  4033c2:	pop    edi
  4033c3:	cld    
  4033c4:	rcr    dl,cl
  4033c6:	enter  0x9985,0x11
  4033ca:	xchg   edi,eax
  4033cb:	out    dx,al
  4033cc:	mov    ch,0xef
  4033ce:	dec    eax
  4033cf:	outs   dx,DWORD PTR ds:[esi]
  4033d0:	(bad)  
  4033d1:	jb     0x4033b2
  4033d3:	cli    
  4033d4:	jl     0x403399
  4033d6:	cmp    al,0x11
  4033d8:	aam    0x9c
  4033da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033db:	stos   DWORD PTR es:[edi],eax
  4033dc:	in     al,0x30
  4033de:	clc    
  4033df:	inc    edi
  4033e0:	retf   0x1d13
  4033e3:	or     bl,cl
  4033e5:	fst    DWORD PTR [esi+0x2506f3e9]
  4033eb:	stos   DWORD PTR es:[edi],eax
  4033ec:	outs   dx,BYTE PTR ds:[esi]
  4033ed:	out    0x75,eax
  4033ef:	mov    ebp,0xe218ba76
  4033f4:	mov    bl,0x40
  4033f6:	mov    DWORD PTR [eax],edi
  4033f8:	mov    al,0xec
  4033fa:	out    dx,eax
  4033fb:	outs   dx,BYTE PTR ds:[esi]
  4033fc:	rcl    DWORD PTR [edx+ebx*4+0x4f6c705b],1
  403403:	mov    al,ds:0x633612fb
  403408:	jbe    0x4033af
  40340a:	add    al,0x89
  40340c:	fld    TBYTE PTR [ebp+0x52]
  40340f:	or     ah,dl
  403411:	add    DWORD PTR [ebp-0x33],0x56d4167f
  403418:	cmp    eax,DWORD PTR [eax+0xd6f277e]
  40341e:	and    al,0x58
  403420:	lds    ebx,FWORD PTR [ebx+0x4e]
  403423:	jmp    0xb257:0x4eafe494
  40342a:	in     eax,dx
  40342b:	pushf  
  40342c:	sbb    dl,BYTE PTR [ebx-0x477889a9]
  403432:	push   0x1
  403434:	pop    eax
  403435:	jne    0x4033c3
  403437:	xor    BYTE PTR [ebx+0x20],dl
  40343a:	in     al,0xf
  40343c:	cmp    al,0xa8
  40343e:	jne    0x4033f7
  403440:	mov    ch,0x8a
  403442:	mov    eax,ds:0x60eba5e8
  403447:	mov    dl,0xcd
  403449:	jle    0x403404
  40344b:	pop    esp
  40344c:	adc    eax,0xe9663aa7
  403451:	mov    ebx,0x9e206bde
  403456:	lods   eax,DWORD PTR ds:[esi]
  403457:	test   al,0x4f
  403459:	push   ss
  40345a:	fsincos 
  40345c:	cli    
  40345d:	mov    ecx,DWORD PTR [esi+0xac1a3a4]
  403463:	dec    ebp
  403464:	xchg   ch,al
  403466:	fdiv   st(7),st
  403468:	(bad)  
  403469:	call   0xb9a94735
  40346e:	out    0xed,al
  403470:	movlps xmm5,QWORD PTR [esi+0x40]
  403474:	sti    
  403475:	bound  edi,QWORD PTR [edx+ecx*2+0x19]
  403479:	sub    al,0xc6
  40347b:	int3   
  40347c:	in     eax,dx
  40347d:	push   ecx
  40347e:	adc    DWORD PTR [esp-0x77],esp
  403482:	xor    bl,BYTE PTR [ecx+ecx*2]
  403485:	test   BYTE PTR [edx+0x46daf65f],dl
  40348b:	jle    0x403463
  40348d:	dec    esi
  40348e:	out    0xcf,al
  403490:	into   
  403491:	jecxz  0x4034d1
  403493:	push   ebx
  403494:	aam    0x1d
  403496:	sbb    BYTE PTR [eax],bl
  403498:	hlt    
  403499:	cmp    al,0x7a
  40349b:	repnz mov ebp,0x9d65a7d3
  4034a1:	icebp  
  4034a2:	cdq    
  4034a3:	mov    ch,0x38
  4034a5:	or     BYTE PTR [edx-0x10dfbd63],ch
  4034ab:	stos   DWORD PTR es:[edi],eax
  4034ac:	jmp    0xc4ffa6e0
  4034b1:	sbb    dl,0xa3
  4034b4:	aam    0xd
  4034b6:	dec    esi
  4034b7:	test   eax,0x6f058db4
  4034bc:	test   DWORD PTR [esi-0x65],eax
  4034bf:	(bad)  
  4034c0:	jno    0x4034db
  4034c2:	and    bh,BYTE PTR [ecx+0x7c]
  4034c5:	popf   
  4034c6:	inc    ebx
  4034c7:	jg     0x4034df
  4034c9:	cmp    DWORD PTR [eax+0x4],0xfffffff4
  4034cd:	jg     0x40346e
  4034cf:	fisub  DWORD PTR ds:[edi-0x234e2274]
  4034d6:	add    eax,0x4093d7c7
  4034db:	xchg   esp,eax
  4034dc:	aam    0x71
  4034de:	lock mov ebx,0x37bd98af
  4034e4:	jmp    0xb15e:0x5ea5bf25
  4034eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034ec:	fst    DWORD PTR [esi]
  4034ee:	div    bh
  4034f0:	xlat   BYTE PTR ds:[ebx]
  4034f1:	mov    al,ds:0x2ae6817d
  4034f6:	lods   eax,DWORD PTR ds:[esi]
  4034f7:	ins    BYTE PTR es:[edi],dx
  4034f8:	dec    esi
  4034f9:	xor    BYTE PTR [ecx],ch
  4034fb:	test   BYTE PTR [esi-0x683a09fa],bh
  403501:	cmp    al,0x2f
  403503:	dec    ebx
  403504:	cmp    edi,DWORD PTR [esi+edi*1+0x2c0791ba]
  40350b:	sbb    al,0x41
  40350d:	jp     0x4034d2
  40350f:	xlat   BYTE PTR ds:[ebx]
  403510:	je     0x40349d
  403512:	mov    eax,ds:0xb7818089
  403517:	rcl    ebp,1
  403519:	jno    0x4034cd
  40351b:	imul   eax,DWORD PTR [ebp-0x4e],0xffffffe7
  40351f:	neg    BYTE PTR [ebp-0x196fb54]
  403525:	(bad)  
  403526:	mul    bl
  403528:	call   FWORD PTR [edi]
  40352a:	lods   al,BYTE PTR ds:[esi]
  40352b:	and    bh,dl
  40352d:	fidiv  WORD PTR [edx-0x3a]
  403530:	or     esp,DWORD PTR [ecx+ecx*1+0x4f34b26e]
  403537:	(bad)  
  403538:	shl    BYTE PTR [esi],0xc3
  40353b:	sub    BYTE PTR [edx-0x424fecfe],dh
  403541:	(bad)  
  403542:	in     al,0xee
  403544:	aas    
  403545:	imul   ebp,ebp,0xfffffff1
  403548:	neg    DWORD PTR [ebx]
  40354a:	data16 xlat BYTE PTR ds:[ebx]
  40354c:	stos   DWORD PTR es:[edi],eax
  40354d:	pop    edi
  40354e:	jo     0x40355e
  403550:	mov    edi,0xe85044c3
  403555:	push   ds
  403556:	mov    dh,0x50
  403558:	sub    DWORD PTR [bp+si],edx
  40355b:	sub    al,0xf
  40355d:	sbb    DWORD PTR [ebp+0x73],esp
  403560:	jnp    0x403507
  403562:	dec    ecx
  403563:	mov    dl,0x67
  403565:	hlt    
  403566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403567:	pusha  
  403568:	sub    DWORD PTR [edx-0x21],0xffffff82
  40356c:	jmp    0xdc1dcfd2
  403571:	adc    DWORD PTR [ecx+0x40],0xffffffd7
  403575:	jns    0x403571
  403577:	mov    ch,0xb4
  403579:	push   0x4c
  40357b:	xchg   esp,eax
  40357c:	scas   eax,DWORD PTR es:[edi]
  40357d:	xor    eax,0x94047df6
  403582:	jmp    0x403566
  403584:	repz sbb BYTE PTR [eax+eiz*4+0x1f49e75b],al
  40358c:	mov    bl,cl
  40358e:	push   esi
  40358f:	mov    esi,0xab779571
  403594:	je     0x40354f
  403596:	jle    0x4035de
  403598:	mov    ebx,0x98d80dec
  40359d:	test   DWORD PTR [esi],esi
  40359f:	sti    
  4035a0:	mov    si,WORD PTR [esi]
  4035a3:	push   0xa00a0997
  4035a8:	in     al,0x32
  4035aa:	xor    cl,cl
  4035ac:	cmp    al,0x85
  4035ae:	fild   DWORD PTR [edx]
  4035b0:	pushf  
  4035b1:	mov    ds:0xf486687b,al
  4035b6:	cmp    BYTE PTR [eax],dh
  4035b8:	cdq    
  4035b9:	or     bl,ah
  4035bb:	mov    dl,0xdb
  4035bd:	aaa    
  4035be:	shl    al,1
  4035c0:	ds test al,0xfd
  4035c3:	rcl    BYTE PTR [eax+0x28],cl
  4035c6:	mov    eax,ds:0xa856924e
  4035cb:	iret   
  4035cc:	adc    BYTE PTR [esi+0x64],bh
  4035cf:	pushf  
  4035d0:	mov    ebp,0x49f690ca
  4035d5:	int3   
  4035d6:	adc    esp,ecx
  4035d8:	jg     0x40359f
  4035da:	push   ebp
  4035db:	int    0xaa
  4035dd:	inc    esi
  4035de:	enter  0xa0f7,0x6c
  4035e2:	aas    
  4035e3:	inc    ebx
  4035e4:	sar    BYTE PTR [ebp+0x1df043d4],0x3a
  4035eb:	add    eax,0x51936c1b
  4035f0:	push   edx
  4035f1:	add    ch,dl
  4035f3:	mov    ecx,0x34a071f1
  4035f8:	fwait
  4035f9:	mov    bl,ch
  4035fb:	pushf  
  4035fc:	ret    
  4035fd:	pop    esp
  4035fe:	push   eax
  4035ff:	sbb    eax,0xcdc2c530
  403604:	fidivr WORD PTR [ebx]
  403606:	mov    esp,0xb5133cd0
  40360b:	(bad)  
  40360c:	je     0x403631
  40360e:	fsub   DWORD PTR [esi+0x31c446e1]
  403614:	not    BYTE PTR [ecx]
  403616:	int3   
  403617:	aas    
  403618:	into   
  403619:	es jmp 0x403649
  40361c:	test   DWORD PTR [eax],esi
  40361e:	sbb    DWORD PTR [eax-0x1bebfd68],edi
  403624:	inc    ebx
  403625:	and    BYTE PTR [ebp+esi*4+0x8],ah
  403629:	xor    al,0xfa
  40362b:	add    BYTE PTR [edx],bh
  40362d:	ret    
  40362e:	aas    
  40362f:	and    eax,0x8c581646
  403634:	cmp    dh,BYTE PTR [ecx+0x68]
  403637:	shl    BYTE PTR [edi],1
  403639:	(bad)  
  40363a:	dec    edi
  40363b:	jg     0x4035d3
  40363d:	loope  0x4035fd
  40363f:	popa   
  403640:	mov    dl,0xd1
  403642:	xor    eax,0x8b020736
  403647:	test   eax,0x68e97062
  40364c:	out    dx,eax
  40364d:	mov    ch,0x2b
  40364f:	or     al,0x4c
  403651:	jmp    0x69cd:0xdd3c2f64
  403658:	into   
  403659:	cmp    al,0x58
  40365b:	cld    
  40365c:	retf   
  40365d:	loope  0x40365d
  40365f:	sub    al,0x63
  403661:	xchg   ecx,eax
  403662:	cmc    
  403663:	jbe    0x403621
  403665:	cmp    eax,0x655a418d
  40366a:	inc    edx
  40366b:	push   ecx
  40366c:	cld    
  40366d:	imul   esp,DWORD PTR [ecx+0x53],0x2c38caa3
  403674:	(bad)
  403678:	outs   dx,BYTE PTR ds:[esi]
  403679:	lods   eax,DWORD PTR ds:[esi]
  40367a:	ret    
  40367b:	test   ebx,edi
  40367d:	push   ebx
  40367e:	fcom   DWORD PTR [edx]
  403680:	mov    ?,WORD PTR [edi-0x26]
  403683:	clc    
  403684:	(bad)  
  403685:	add    DWORD PTR [edx],0xffffff88
  403688:	push   ds
  403689:	in     eax,0xa2
  40368b:	adc    ebp,esp
  40368d:	jb     0x40368b
  40368f:	popa   
  403690:	xchg   BYTE PTR [ecx],al
  403692:	dec    ecx
  403693:	(bad)  
  403694:	jmp    0xa9117cf6
  403699:	in     al,dx
  40369a:	and    bl,BYTE PTR [edi+0x1b]
  40369d:	inc    ecx
  40369e:	and    bl,ch
  4036a0:	adc    al,0xc7
  4036a2:	sar    BYTE PTR [ebx-0x75c90d9e],1
  4036a8:	ja     0x4036ed
  4036aa:	cmp    BYTE PTR [esi+0x1e0ae0e7],dh
  4036b0:	mov    ch,0xd9
  4036b2:	es nop
  4036b4:	test   al,0xd3
  4036b6:	pop    esi
  4036b7:	or     DWORD PTR [esi+0x71],ebp
  4036ba:	mov    ecx,0x15d2a3
  4036bf:	retf   0xda61
  4036c2:	push   ebp
  4036c3:	mov    edx,esi
  4036c5:	xor    esp,0xfffffff0
  4036c8:	(bad)  
  4036c9:	(bad)  
  4036cb:	mov    dl,0x96
  4036cd:	jecxz  0x40368d
  4036cf:	cli    
  4036d0:	sbb    eax,0x93f9adc
  4036d5:	(bad)  [edx]
  4036d7:	or     al,0xa2
  4036d9:	mov    edi,DWORD PTR [ecx-0x57]
  4036dc:	jb     0x4036c0
  4036de:	pop    ebp
  4036df:	mov    esp,0xf8af5ed0
  4036e4:	mov    eax,ss
  4036e6:	pop    ds
  4036e7:	je     0x40371c
  4036e9:	pop    ecx
  4036ea:	scas   eax,DWORD PTR es:[edi]
  4036eb:	xor    al,0xde
  4036ed:	and    DWORD PTR [eax],esi
  4036ef:	mov    cl,0xd7
  4036f1:	push   eax
  4036f2:	jo     0x4036e7
  4036f4:	call   0x5036:0x562da4e4
  4036fb:	scas   al,BYTE PTR es:[edi]
  4036fc:	mov    eax,0x612f64eb
  403701:	mov    al,0x8a
  403703:	pop    edi
  403704:	ja     0x40370c
  403706:	repnz or DWORD PTR [ecx+0x3],0xf43a92d5
  40370e:	push   edi
  40370f:	in     al,dx
  403710:	inc    edi
  403711:	iret   
  403712:	xlat   BYTE PTR ds:[ebx]
  403713:	test   edx,0x3c0da9f
  403719:	aam    0x2d
  40371b:	push   esi
  40371c:	js     0x4036fc
  40371e:	leave  
  40371f:	repz (bad) 
  403721:	pop    ss
  403722:	rcl    dl,1
  403724:	sbb    BYTE PTR [ebx],ah
  403726:	loope  0x4036c6
  403728:	sbb    eax,0xf9af42cc
  40372d:	fadd   QWORD PTR [ebx+0x5]
  403730:	lea    edi,[esi-0x699e6103]
  403736:	jb     0x4036ff
  403738:	mov    esi,0x99c752a4
  40373d:	pop    eax
  40373e:	and    DWORD PTR [ecx],esp
  403740:	shl    BYTE PTR [edx-0x80],cl
  403743:	aas    
  403744:	pop    esi
  403745:	(bad)  
  403746:	pop    ebx
  403747:	jbe    0x403776
  403749:	mov    esp,0x80431078
  40374e:	sbb    BYTE PTR [ecx-0x62],al
  403751:	mov    BYTE PTR [eax+0x12ddc730],0x54
  403758:	scas   eax,DWORD PTR es:[edi]
  403759:	dec    ebp
  40375a:	stc    
  40375b:	dec    esi
  40375c:	rcr    BYTE PTR [edx],1
  40375e:	mov    ebp,0x3da2d1b6
  403763:	pusha  
  403764:	push   edx
  403765:	ins    DWORD PTR es:[edi],dx
  403766:	clc    
  403767:	or     edx,DWORD PTR ss:[edi]
  40376a:	and    BYTE PTR gs:[edi],al
  40376d:	test   al,0x3d
  40376f:	push   eax
  403770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403771:	jg     0x40379a
  403773:	dec    esi
  403774:	and    cl,BYTE PTR [eax+0x4]
  403777:	push   es
  403778:	test   DWORD PTR [edx-0x4f],esp
  40377b:	shl    ah,0xf1
  40377e:	jbe    0x4037c4
  403780:	adc    eax,0xd176f12e
  403785:	mov    ecx,0x5957e413
  40378a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40378b:	shl    BYTE PTR [ebx],0xd5
  40378e:	push   edi
  40378f:	ins    BYTE PTR es:[edi],dx
  403790:	mov    dh,0x2f
  403792:	sbb    eax,0xaabbedca
  403797:	mov    cs,WORD PTR [eax+ebp*4]
  40379a:	dec    esi
  40379b:	xchg   edx,eax
  40379c:	std    
  40379d:	dec    edx
  40379e:	push   es
  40379f:	add    DWORD PTR [eax],0xc9f74282
  4037a5:	jmp    0x403816
  4037a7:	mov    eax,ds:0x9591a98f
  4037ac:	enter  0x8f00,0x7d
  4037b0:	leave  
  4037b1:	aas    
  4037b2:	ficomp DWORD PTR [ebx-0x57]
  4037b5:	stos   BYTE PTR es:[edi],al
  4037b6:	push   0x1a5d8ff4
  4037bb:	aaa    
  4037bc:	inc    eax
  4037bd:	inc    esi
  4037be:	push   0xffffffa9
  4037c0:	xor    BYTE PTR [eax],ah
  4037c2:	inc    esi
  4037c3:	jl     0x40380f
  4037c5:	popf   
  4037c6:	push   edi
  4037c7:	mov    eax,ds:0x182ffda
  4037cc:	into   
  4037cd:	pop    ebp
  4037ce:	xor    DWORD PTR [eax-0x4f],0xffffffb7
  4037d2:	int    0x7
  4037d4:	and    DWORD PTR [edx+0x41],0x3834f733
  4037db:	sub    al,0xec
  4037dd:	popa   
  4037de:	push   cs
  4037df:	repnz push 0x188c9cbb
  4037e5:	mov    ebp,0x4bb25679
  4037ea:	test   BYTE PTR [edi-0x5],cl
  4037ed:	mov    DWORD PTR [esi],edi
  4037ef:	sub    BYTE PTR [edi+0x589437c4],dh
  4037f5:	ins    DWORD PTR es:[edi],dx
  4037f6:	inc    edi
  4037f7:	sbb    eax,0x79bb93ec
  4037fc:	clc    
  4037fd:	ret    0x3f64
  403800:	inc    esi
  403801:	imul   edx,DWORD PTR [ebx+esi*2],0x20
  403805:	mov    ch,0xc
  403808:	sub    DWORD PTR [edi-0x7c],ecx
  40380b:	cs dec esp
  40380d:	sti    
  40380e:	out    dx,eax
  40380f:	cdq    
  403810:	imul   edx,DWORD PTR fs:[ecx+0x14],0xffffffd9
  403815:	dec    eax
  403816:	in     al,dx
  403817:	jns    0x40381d
  403819:	dec    eax
  40381a:	mov    edx,0x1cf2de3b
  40381f:	ds pop ds
  403821:	jno    0x403810
  403823:	xchg   BYTE PTR ds:0xde56f225,bl
  403829:	test   BYTE PTR [esi],al
  40382b:	leave  
  40382c:	push   ecx
  40382d:	fstp   QWORD PTR [esi+0x66d2d98a]
  403833:	sti    
  403834:	in     al,0x13
  403836:	int3   
  403837:	mov    dl,0xbf
  403839:	add    DWORD PTR [edx+edi*1+0x6bccf57d],eax
  403840:	test   BYTE PTR [edx+0x4960fb5e],al
  403846:	into   
  403847:	mul    al
  403849:	mov    esp,DWORD PTR [edx]
  40384b:	sub    eax,0x79201328
  403850:	test   al,0xdc
  403852:	sbb    cl,BYTE PTR [eax+0x1d976a20]
  403858:	jbe    0x403869
  40385a:	dec    esi
  40385b:	mov    edx,0x606358a5
  403860:	(bad)  
  403861:	sti    
  403862:	or     eax,0xfd6bfcb
  403867:	jle    0x403809
  403869:	je     0x403858
  40386b:	iret   
  40386c:	mov    bh,0x45
  40386e:	add    edx,DWORD PTR [eax]
  403870:	in     eax,0xa8
  403872:	outs   dx,BYTE PTR ds:[esi]
  403873:	outs   dx,DWORD PTR ds:[esi]
  403874:	xchg   ecx,eax
  403875:	imul   ebx,DWORD PTR [esi-0x78],0xd47012a8
  40387c:	jbe    0x4038ec
  40387e:	mov    edx,0x69378fc7
  403883:	mov    esp,0xfeee8618
  403888:	lahf   
  403889:	and    DWORD PTR [eax+0x3a790306],eax
  40388f:	adc    BYTE PTR [esi-0x2],cl
  403892:	lods   eax,DWORD PTR ds:[esi]
  403893:	sub    ecx,DWORD PTR [ebx-0x74]
  403896:	mov    ebp,0xb95ca5ee
  40389b:	ficom  WORD PTR [esi-0x1f4088b8]
  4038a1:	xor    bl,BYTE PTR ds:0xf2325b35
  4038a7:	add    al,BYTE PTR [ecx+0x11]
  4038aa:	pop    eax
  4038ab:	inc    eax
  4038ac:	add    DWORD PTR ds:0x2aee2320,ecx
  4038b2:	loopne 0x403840
  4038b4:	scas   eax,DWORD PTR es:[edi]
  4038b5:	cld    
  4038b6:	stos   DWORD PTR es:[edi],eax
  4038b7:	imul   esi,DWORD PTR [esi+esi*1]
  4038bb:	push   es
  4038bc:	(bad)  
  4038bd:	clc    
  4038be:	sti    
  4038bf:	pop    esi
  4038c0:	mov    esp,0xbfd4b5f0
  4038c5:	imul   eax,DWORD PTR [edi-0x1c],0xffffffaa
  4038c9:	stc    
  4038ca:	mov    eax,0x757d05bb
  4038cf:	sbb    BYTE PTR [eax-0x42],bh
  4038d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038d3:	loope  0x403920
  4038d5:	shl    DWORD PTR [edi-0x187ce5cc],1
  4038db:	or     ebx,ebx
  4038dd:	shr    BYTE PTR [ecx-0xe],1
  4038e0:	adc    ecx,esi
  4038e2:	mov    eax,ds:0xc1d94d1b
  4038e7:	pop    ebx
  4038e8:	xor    esi,0xc
  4038eb:	push   0xfffffffd
  4038ed:	aaa    
  4038ee:	shl    BYTE PTR [eax+0x40],cl
  4038f1:	scas   al,BYTE PTR es:[edi]
  4038f2:	xchg   ebp,eax
  4038f3:	xchg   DWORD PTR [edi],ebp
  4038f5:	mov    eax,0xb8238d7b
  4038fa:	outs   dx,DWORD PTR ds:[esi]
  4038fb:	sar    BYTE PTR [ebx],1
  4038fd:	fdivr  DWORD PTR [eax+edx*4]
  403900:	sbb    ah,BYTE PTR [esi+0x69]
  403903:	cmc    
  403904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403905:	mov    ch,0xf4
  403907:	push   ds
  403908:	sub    eax,0xf716c239
  40390d:	sbb    al,0x27
  40390f:	adc    eax,0x25f963a8
  403914:	xor    BYTE PTR [esi-0x29a15b68],ah
  40391a:	dec    eax
  40391b:	jp     0x40395b
  40391d:	sub    BYTE PTR [ecx],bh
  40391f:	add    al,0xa
  403921:	in     al,0xbb
  403923:	mov    esp,DWORD PTR [ebx]
  403925:	push   ebx
  403926:	ret    
  403927:	xor    al,0xbf
  403929:	in     al,0xb9
  40392b:	jg     0x4038f3
  40392d:	sub    BYTE PTR [esi+eax*8-0x25cf42d0],dl
  403934:	add    eax,0xbedebc23
  403939:	sub    BYTE PTR [ebp-0x53],ah
  40393c:	push   ecx
  40393d:	cmp    DWORD PTR [edi-0x66],ebx
  403940:	inc    edi
  403941:	mov    DWORD PTR [ecx],edx
  403943:	ins    BYTE PTR es:[edi],dx
  403944:	dec    edi
  403945:	sahf   
  403946:	in     al,dx
  403947:	arpl   WORD PTR [ecx],bx
  403949:	les    esp,FWORD PTR [ebp-0x71]
  40394c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40394d:	pushf  
  40394e:	xor    ah,BYTE PTR [ecx-0x51829cc7]
  403954:	in     ax,dx
  403956:	fild   WORD PTR [eax-0x50]
  403959:	mov    esi,0xab455dc9
  40395e:	pop    ebp
  40395f:	mov    eax,0xe1da9cb2
  403964:	es push cs
  403966:	or     al,0xb0
  403968:	dec    edi
  403969:	push   ebp
  40396a:	pop    edx
  40396b:	stc    
  40396c:	stc    
  40396d:	ffree  st(0)
  40396f:	and    eax,0x5804c671
  403974:	cld    
  403975:	sbb    BYTE PTR [ebx],bl
  403977:	out    0x14,eax
  403979:	out    0x47,al
  40397b:	mov    ah,0xfe
  40397d:	and    al,0x1c
  40397f:	mov    edx,0x929c2a88
  403984:	imul   eax,edi,0xffffffe2
  403987:	pop    es
  403988:	pop    ecx
  403989:	jle    0x40393f
  40398b:	cli    
  40398c:	or     dl,BYTE PTR [esi+0x2a]
  40398f:	cmp    DWORD PTR [ebx+eiz*1-0x2d],edi
  403993:	mov    ds:0x71bc98d2,al
  403998:	xchg   esi,eax
  403999:	(bad)  
  40399a:	repnz adc DWORD PTR [eax-0x618509ee],esi
  4039a1:	fdivr  QWORD PTR [ebp+0x33]
  4039a4:	jmp    ebx
  4039a6:	mov    bh,BYTE PTR [ecx-0x4f]
  4039a9:	out    0x70,al
  4039ab:	push   es
  4039ac:	add    bl,BYTE PTR [edi-0x60]
  4039af:	sbb    eax,0xfa0418ba
  4039b4:	sbb    ah,0x93
  4039b7:	scas   eax,DWORD PTR es:[edi]
  4039b8:	mov    bh,0xfa
  4039ba:	adc    BYTE PTR [ebx],dh
  4039bc:	jp     0x4039c5
  4039be:	cmp    DWORD PTR [edx+0x45],esp
  4039c1:	pop    es
  4039c2:	int    0xb3
  4039c4:	lods   al,BYTE PTR ds:[esi]
  4039c5:	lock adc BYTE PTR ds:0x4ed9ca71,0xe4
  4039cd:	lods   al,BYTE PTR ds:[esi]
  4039ce:	jbe    0x403991
  4039d0:	xchg   edi,eax
  4039d1:	cmc    
  4039d2:	push   ebp
  4039d3:	and    edx,edi
  4039d5:	fs mov ah,0x66
  4039d8:	adc    al,0xcd
  4039da:	sub    cl,BYTE PTR [ecx-0x4b]
  4039dd:	cmp    BYTE PTR [ecx],bl
  4039df:	sbb    BYTE PTR [edi+0xf],ch
  4039e2:	adc    DWORD PTR [edi+0x430f35b4],esp
  4039e8:	or     eax,0x3ec0bb10
  4039ed:	push   0x67
  4039ef:	mov    dh,0xb0
  4039f1:	pusha  
  4039f2:	cmp    BYTE PTR [ecx+ecx*2+0x44],0x73
  4039f7:	shl    cl,1
  4039f9:	jge    0x4039ad
  4039fb:	fwait
  4039fc:	mov    BYTE PTR [ebp+0x4d],dl
  4039ff:	cmp    ebx,DWORD PTR [edx-0x6d17d472]
  403a05:	iret   
  403a06:	mov    edx,0xc1f24dab
  403a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a0c:	xor    bh,al
  403a0e:	(bad)  
  403a0f:	jnp    0x403a5f
  403a11:	sar    DWORD PTR [esi],cl
  403a13:	mov    ds:0x2ebc3459,al
  403a18:	push   ebx
  403a19:	mov    BYTE PTR [edx+edi*8+0x61],al
  403a1d:	mov    ebp,0x9e39df8
  403a22:	retf   0x67a8
  403a25:	cmc    
  403a26:	pop    esp
  403a27:	xlat   BYTE PTR ds:[ebx]
  403a28:	sbb    esi,DWORD PTR [ecx-0xd]
  403a2b:	push   0xe0cbefce
  403a30:	fisub  DWORD PTR [edi-0x7]
  403a33:	push   0x4
  403a35:	ss cmp eax,0xab3c55ca
  403a3b:	retf   0x465e
  403a3e:	mov    dh,0x31
  403a40:	jno    0x403a01
  403a42:	pop    eax
  403a43:	leave  
  403a44:	mov    ds:0x4b478c50,al
  403a49:	rcr    BYTE PTR [eax-0x51],0xe6
  403a4d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a4f:	xor    ch,BYTE PTR [edi-0x5b79a9d2]
  403a55:	mov    dh,0xa1
  403a57:	push   ss
  403a58:	jno    0x403a4b
  403a5a:	ja     0x403a64
  403a5c:	or     al,0xc7
  403a5e:	das    
  403a5f:	(bad)  
  403a60:	sbb    BYTE PTR [ebx],bh
  403a62:	jg     0x403a74
  403a64:	xor    DWORD PTR [esp+esi*8-0x26],edi
  403a68:	ins    BYTE PTR es:[edi],dx
  403a69:	(bad)  [si-0x52]
  403a6d:	xor    eax,DWORD PTR [edi]
  403a6f:	adc    ah,bh
  403a71:	jle    0x403a0b
  403a73:	iret   
  403a74:	les    esi,FWORD PTR [ebx]
  403a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a77:	mov    al,ds:0x3d4fdb73
  403a7c:	lock (bad) 
  403a7e:	fsubr  DWORD PTR [ebx+ecx*2-0x3b8f7a6e]
  403a85:	sub    DWORD PTR [ecx+0x4f7ae84f],ebx
  403a8b:	adc    al,0x98
  403a8d:	scas   al,BYTE PTR es:[edi]
  403a8e:	sbb    ah,BYTE PTR [esi-0x3a65aa67]
  403a94:	test   BYTE PTR [ebp-0x1b],dl
  403a97:	or     ecx,DWORD PTR [ecx]
  403a99:	or     dl,BYTE PTR [ecx]
  403a9b:	mov    ecx,0x721f4753
  403aa0:	je     0x403a52
  403aa2:	stos   DWORD PTR es:[edi],eax
  403aa3:	sub    al,0x66
  403aa5:	cwde   
  403aa6:	jno    0x403a80
  403aa8:	sar    DWORD PTR [edx],0x6d
  403aab:	std    
  403aac:	loop   0x403a36
  403aae:	fs mov ah,0xb9
  403ab1:	loope  0x403aa0
  403ab3:	jge    0x403a68
  403ab5:	mov    ah,0x75
  403ab7:	xlat   BYTE PTR ds:[ebx]
  403ab8:	push   ecx
  403ab9:	fisub  WORD PTR [edi]
  403abb:	sbb    esp,eax
  403abd:	dec    ebx
  403abe:	sahf   
  403abf:	aaa    
  403ac0:	je     0x403b0e
  403ac2:	and    DWORD PTR [edx+edx*1-0x5a9ba3ff],edi
  403ac9:	adc    esp,ecx
  403acb:	popa   
  403acc:	aad    0xd3
  403ace:	push   ebx
  403acf:	rcr    DWORD PTR [edi+eiz*1-0x50632d39],0x67
  403ad7:	mov    bh,0x95
  403ad9:	mov    bh,dl
  403adb:	add    DWORD PTR [edx+0x4a],esp
  403ade:	xlat   BYTE PTR ds:[ebx]
  403adf:	rcl    edx,1
  403ae1:	jo     0x403b37
  403ae3:	daa    
  403ae4:	add    ebp,edi
  403ae6:	enter  0xfa31,0x2b
  403aea:	lods   al,BYTE PTR ds:[esi]
  403aeb:	sahf   
  403aec:	sub    ah,BYTE PTR [esi-0xd2eeac9]
  403af2:	cli    
  403af3:	dec    esp
  403af4:	enter  0x312f,0x9d
  403af8:	retf   0xc109
  403afb:	pop    edx
  403afc:	fsubr  st(2),st
  403afe:	iret   
  403aff:	sub    edi,esp
  403b01:	mov    eax,0xee619122
  403b06:	mov    ebp,ds
  403b08:	xor    DWORD PTR [edi],edi
  403b0a:	push   esp
  403b0b:	xchg   bh,dl
  403b0d:	lea    ebx,[ebx]
  403b0f:	adc    al,0x2b
  403b11:	leave  
  403b12:	rcr    DWORD PTR [eax+eiz*2-0x5f],0x12
  403b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b18:	sbb    eax,0x751dc67
  403b1d:	mov    ecx,0xf89065dc
  403b22:	jge    0x403af6
  403b24:	push   es
  403b25:	rcl    bh,0x18
  403b28:	add    ah,BYTE PTR ds:0x9e0a19a5
  403b2e:	jp     0x403aff
  403b30:	push   es
  403b31:	or     eax,0x2532b25c
  403b36:	pop    esp
  403b37:	pop    edx
  403b38:	cmp    BYTE PTR [ecx],bl
  403b3a:	mov    cl,ah
  403b3c:	xchg   esp,eax
  403b3d:	xchg   BYTE PTR [eax+0x7c],ah
  403b40:	into   
  403b41:	lods   eax,DWORD PTR ds:[esi]
  403b42:	dec    eax
  403b43:	in     al,0x86
  403b45:	jle    0x403bc6
  403b47:	clc    
  403b48:	sahf   
  403b49:	xchg   ebx,ecx
  403b4b:	fild   QWORD PTR [ebx-0x1de6113d]
  403b51:	pop    esi
  403b52:	add    DWORD PTR [edx-0x77],ecx
  403b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b56:	repnz out 0x59,eax
  403b59:	es jne 0x403bd2
  403b5c:	rol    edi,cl
  403b5e:	ss out dx,al
  403b60:	dec    esp
  403b61:	jmp    0x60889757
  403b66:	cld    
  403b67:	inc    eax
  403b68:	ret    0x7ed2
  403b6b:	add    esp,esp
  403b6d:	retf   0x1e26
  403b70:	out    0xad,al
  403b72:	inc    edx
  403b73:	ficom  DWORD PTR [ebp+0x4f5b23e]
  403b79:	pusha  
  403b7a:	sub    BYTE PTR [edx+0x37],ah
  403b7d:	inc    ebp
  403b7e:	mov    edi,DWORD PTR [edi]
  403b80:	mov    ebx,0xe54754f5
  403b85:	lea    edi,[ebx+0x3ec38594]
  403b8b:	xchg   edi,eax
  403b8c:	adc    al,0xa1
  403b8e:	(bad)  
  403b8f:	jmp    0x403bbe
  403b91:	pop    esp
  403b92:	mov    ecx,0x587682b
  403b97:	dec    edx
  403b98:	jl     0x403bb4
  403b9a:	popf   
  403b9b:	sbb    bh,BYTE PTR [ebp+0x54538c4]
  403ba1:	sub    al,0x99
  403ba3:	push   0x47b27e43
  403ba8:	sar    BYTE PTR [ebp-0x7dfb7018],0xf1
  403baf:	dec    esp
  403bb0:	mov    ebx,0xb02b55c3
  403bb5:	fcmovu st,st(4)
  403bb7:	mov    dh,0xe3
  403bb9:	in     al,0xa0
  403bbb:	lock xchg esi,eax
  403bbd:	pushf  
  403bbe:	xchg   ecx,eax
  403bbf:	xor    al,0x56
  403bc1:	cld    
  403bc2:	stos   DWORD PTR es:[edi],eax
  403bc3:	js     0x403c07
  403bc5:	popf   
  403bc6:	xor    edx,ecx
  403bc8:	push   0xf127ae72
  403bcd:	das    
  403bce:	mov    eax,ds:0x4717f0b9
  403bd3:	mov    bh,0x79
  403bd5:	ins    BYTE PTR es:[edi],dx
  403bd6:	inc    esp
  403bd7:	sub    BYTE PTR [edx],cl
  403bd9:	mov    esi,0xb8cd61fd
  403bde:	push   es
  403bdf:	inc    edi
  403be0:	loopne 0x403bb8
  403be2:	test   DWORD PTR [edi],ebx
  403be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403be5:	jge    0x403bb3
  403be7:	mov    bl,0x55
  403be9:	or     eax,DWORD PTR [ebx+0x6b980f1d]
  403bef:	stc    
  403bf0:	daa    
  403bf1:	sar    BYTE PTR ds:0xc97bf0d1,cl
  403bf7:	jecxz  0x403c54
  403bf9:	xor    BYTE PTR [eax],dl
  403bfb:	push   ebx
  403bfc:	out    0xb5,al
  403bfe:	sub    ch,cl
  403c00:	repnz xor BYTE PTR [ecx-0x741158e6],cl
  403c07:	jecxz  0x403c15
  403c09:	dec    ebp
  403c0a:	push   eax
  403c0b:	inc    eax
  403c0c:	push   cs
  403c0d:	test   BYTE PTR ds:0x946004df,cl
  403c13:	ins    DWORD PTR es:[edi],dx
  403c14:	outs   dx,DWORD PTR ds:[esi]
  403c15:	stc    
  403c16:	ins    BYTE PTR es:[edi],dx
  403c17:	xchg   DWORD PTR [edi],edi
  403c19:	xchg   DWORD PTR [edi+0x3cd3248],ecx
  403c1f:	es xchg al,dl
  403c22:	div    DWORD PTR [edi]
  403c24:	in     eax,0x35
  403c26:	sti    
  403c27:	pop    ax
  403c29:	mov    esp,fs
  403c2b:	ds jo  0x403c92
  403c2e:	ret    0x5414
  403c31:	cmc    
  403c32:	mov    dl,0x0
  403c34:	int3   
  403c35:	daa    
  403c36:	mov    bh,0x51
  403c38:	data16 jae 0x403be1
  403c3b:	pushf  
  403c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c3d:	add    DWORD PTR [edi+0x1c96baa7],ecx
  403c43:	fcmovne st,st(5)
  403c45:	pusha  
  403c46:	mov    dl,0x8f
  403c48:	pop    ebx
  403c49:	cmp    DWORD PTR [edx+ebx*2+0x63a1d8ee],esp
  403c50:	jge    0x403c65
  403c52:	loopne 0x403be7
  403c54:	imul   BYTE PTR [ebx]
  403c56:	adc    BYTE PTR [eax+0x2b03dc3d],cl
  403c5c:	ja     0x403cad
  403c5e:	mov    dl,0x96
  403c60:	sti    
  403c61:	repnz xor BYTE PTR [ebp-0x22],dh
  403c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c66:	daa    
  403c67:	sub    BYTE PTR [edx-0x7841e7e7],bl
  403c6d:	mov    WORD PTR [ebp*1+0x6e922250],es
  403c74:	and    ecx,DWORD PTR [ebx+0x55a1bf6c]
  403c7a:	mov    eax,0xc039242f
  403c7f:	pop    ss
  403c80:	sub    al,0xb5
  403c82:	je     0x403d02
  403c84:	mov    eax,ds:0x871aa22a
  403c89:	icebp  
  403c8a:	xchg   esp,eax
  403c8b:	push   eax
  403c8c:	and    eax,0xdacea432
  403c91:	or     BYTE PTR [edx+edx*4+0x73],ch
  403c95:	ja     0x403ce2
  403c97:	sbb    eax,0x473ecd4e
  403c9c:	dec    esi
  403c9d:	cmp    dl,BYTE PTR [ebp-0xb]
  403ca0:	inc    ecx
  403ca1:	pop    esp
  403ca2:	cmp    BYTE PTR [esi-0x37522ec5],bl
  403ca8:	stos   BYTE PTR es:[edi],al
  403ca9:	sbb    eax,0xe77f0fa4
  403cae:	jmp    0x44c5be52
  403cb3:	int3   
  403cb4:	(bad)  
  403cb5:	sub    al,0xb8
  403cb7:	xchg   esi,eax
  403cb8:	fs pop edi
  403cba:	jmp    0x5ea76c
  403cbf:	retf   
  403cc0:	test   DWORD PTR [esi-0x16b794f],esp
  403cc6:	loop   0x403cb9
  403cc8:	add    bh,BYTE PTR [eax+0x69]
  403ccb:	aad    0x76
  403ccd:	push   esp
  403cce:	xor    eax,0xf650a5d8
  403cd3:	ret    
  403cd4:	push   ebp
  403cd5:	jg     0x403cd6
  403cd7:	mov    dl,0xdd
  403cd9:	mov    cl,dh
  403cdb:	rol    BYTE PTR [ebx],cl
  403cdd:	push   esp
  403cde:	adc    cl,BYTE PTR [eax-0x28]
  403ce1:	jo     0x403ca8
  403ce3:	sbb    ebp,edx
  403ce5:	retf   0x1ff4
  403ce8:	push   ds
  403ce9:	clc    
  403cea:	repz icebp 
  403cec:	fistp  WORD PTR [edx-0x18]
  403cef:	dec    ebp
  403cf0:	jp     0x403d1f
  403cf2:	pop    ebp
  403cf3:	xor    dh,dl
  403cf5:	cdq    
  403cf6:	in     al,dx
  403cf7:	mov    cl,0x56
  403cf9:	cmp    eax,0xe5e48cc2
  403cfe:	inc    ecx
  403cff:	stc    
  403d00:	mov    al,0x35
  403d02:	dec    esi
  403d03:	dec    ebp
  403d04:	cld    
  403d05:	ins    DWORD PTR es:[edi],dx
  403d06:	jle    0x403d7a
  403d08:	cdq    
  403d09:	or     eax,0x982be951
  403d0e:	push   0xf88e3ba2
  403d13:	retf   0x8048
  403d16:	ret    0xb2e1
  403d19:	call   DWORD PTR [esp+esi*2-0x1b250bd6]
  403d20:	out    dx,al
  403d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d22:	jg     0x403d45
  403d24:	ja     0x403d1f
  403d26:	sub    DWORD PTR [edi-0x3a],esp
  403d29:	and    al,BYTE PTR ds:0x7be44206
  403d2f:	jg     0x403d1d
  403d31:	mov    ch,0xd0
  403d33:	imul   esp
  403d35:	push   ecx
  403d36:	mov    ebp,eax
  403d38:	mov    edx,0x7c2db87c
  403d3d:	xchg   edx,eax
  403d3e:	rcl    BYTE PTR [edi-0x3d],cl
  403d41:	pop    edi
  403d42:	jp     0x403daa
  403d44:	add    eax,0xebf132ea
  403d49:	add    al,0xd2
  403d4b:	cmp    DWORD PTR [esi-0x1bb3a4f0],edi
  403d51:	in     eax,dx
  403d52:	call   0xdcf81adc
  403d57:	push   ecx
  403d58:	dec    ebx
  403d59:	dec    ebx
  403d5a:	outs   dx,DWORD PTR ds:[esi]
  403d5b:	stos   DWORD PTR es:[edi],eax
  403d5c:	pop    ebx
  403d5d:	out    0x76,al
  403d5f:	loope  0x403d0a
  403d61:	out    0x79,al
  403d63:	pop    ebx
  403d64:	mov    esp,0x1f8ff3f2
  403d69:	mov    esi,0x7ddf95fc
  403d6e:	fdiv   DWORD PTR [ecx-0x1c]
  403d71:	(bad)  
  403d72:	cmc    
  403d73:	fst    QWORD PTR [edx]
  403d75:	sbb    edx,DWORD PTR [esi-0x38]
  403d78:	int3   
  403d79:	add    eax,0x2593e7a6
  403d7e:	xchg   esp,ebx
  403d80:	push   edi
  403d81:	adc    DWORD PTR [edx],esi
  403d83:	xor    esi,DWORD PTR [eax+ecx*4]
  403d86:	js     0x403d36
  403d88:	imul   ecx,ebx,0x19
  403d8b:	out    0x95,eax
  403d8d:	aam    0xfe
  403d8f:	std    
  403d90:	adc    esp,ebp
  403d92:	pop    ebx
  403d93:	stos   DWORD PTR es:[edi],eax
  403d94:	pop    esi
  403d95:	mov    edi,0x394010dc
  403d9a:	push   ebx
  403d9b:	shld   DWORD PTR es:[ecx],eax,cl
  403d9f:	test   al,0x1b
  403da1:	cmp    al,0xf
  403da3:	das    
  403da4:	sbb    DWORD PTR [edi],ecx
  403da6:	mov    WORD PTR [esi+ebp*2-0x28],es
  403daa:	pop    edx
  403dab:	inc    eax
  403dac:	sub    ebx,ebx
  403dae:	mov    eax,0xd4c91062
  403db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403db4:	loope  0x403dca
  403db6:	mov    edi,0xe32069ce
  403dbb:	sub    BYTE PTR [ebx],0x12
  403dbe:	mov    dl,0x43
  403dc0:	neg    dl
  403dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dc3:	mov    ecx,0xb2455073
  403dc8:	inc    ebx
  403dc9:	pusha  
  403dca:	adc    edx,DWORD PTR [ebx-0x6fd5cdb3]
  403dd0:	aam    0x20
  403dd2:	add    eax,0x1969435d
  403dd7:	push   esp
  403dd8:	sub    ebx,DWORD PTR [ebx-0x3a6c5bd6]
  403dde:	stos   BYTE PTR es:[edi],al
  403ddf:	mov    ecx,0x280cebd
  403de4:	sub    al,0xd9
  403de6:	mov    ebx,0x5d26c38d
  403deb:	xor    bh,BYTE PTR [ecx*4-0x33c55822]
  403df2:	ja     0x403e63
  403df4:	cmp    DWORD PTR [ecx-0x62a5ef90],0xffffff91
  403dfb:	sbb    BYTE PTR [ebx+0x3],dh
  403dfe:	push   ebx
  403dff:	fld    DWORD PTR [ebp-0x2bfa572f]
  403e05:	cmp    esp,ecx
  403e07:	jle    0x403e50
  403e09:	dec    eax
  403e0a:	daa    
  403e0b:	mov    dl,0xf6
  403e0d:	out    0xc7,al
  403e0f:	xchg   esp,eax
  403e10:	inc    ecx
  403e11:	mov    BYTE PTR ds:0xf457d244,bl
  403e17:	pop    edi
  403e18:	jmp    0x403de8
  403e1a:	pop    esp
  403e1b:	fdivp  st(1),st
  403e1d:	mov    BYTE PTR [ebp+0x4a73bb6d],dl
  403e23:	popa   
  403e24:	ss repz in eax,0xdf
  403e28:	add    eax,0x9129e28a
  403e2d:	cli    
  403e2e:	daa    
  403e2f:	ret    
  403e30:	sbb    al,BYTE PTR [ebp+0x1e7717e5]
  403e36:	adc    dh,BYTE PTR [edi+0x374e57b0]
  403e3c:	adc    eax,0x16b4978f
  403e41:	div    esp
  403e43:	push   ss
  403e44:	scas   al,BYTE PTR es:[edi]
  403e45:	mov    BYTE PTR [eax],0x9
  403e48:	mov    BYTE PTR [ebx],dh
  403e4a:	pop    esp
  403e4b:	xchg   dh,cl
  403e4d:	or     eax,0x84dcfba5
  403e52:	xor    BYTE PTR [ecx-0x5fc459b6],0x48
  403e59:	aas    
  403e5a:	cmp    ch,BYTE PTR [ecx]
  403e5c:	int3   
  403e5d:	pop    esi
  403e5e:	sar    DWORD PTR [esi],cl
  403e60:	cmp    DWORD PTR [eax+0x2c8dadb9],ebx
  403e66:	pop    esi
  403e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e68:	pop    esp
  403e69:	add    eax,eax
  403e6b:	daa    
  403e6c:	gs sub eax,0x734d77f5
  403e72:	cs stos DWORD PTR es:[edi],eax
  403e74:	out    0xbc,al
  403e76:	cmp    ebp,DWORD PTR [ebx-0x43]
  403e79:	cmp    al,0xe8
  403e7b:	adc    al,0x3e
  403e7d:	sahf   
  403e7e:	stos   BYTE PTR es:[edi],al
  403e7f:	mov    al,ds:0xc39ee5f
  403e84:	mov    ah,0x75
  403e86:	mov    gs,edi
  403e88:	scas   eax,DWORD PTR es:[edi]
  403e89:	int    0x5c
  403e8b:	push   edi
  403e8c:	(bad)  
  403e8d:	pop    ebp
  403e8e:	xchg   edi,eax
  403e8f:	out    dx,eax
  403e90:	in     al,dx
  403e91:	jae    0x403e88
  403e93:	mov    esi,0xe1d21edd
  403e98:	mov    ah,0xfd
  403e9a:	and    BYTE PTR [edx],0x76
  403e9d:	retf   0x9a16
  403ea0:	test   al,ch
  403ea2:	call   0xe15f1090
  403ea7:	sti    
  403ea8:	mov    esi,0xc1185b91
  403ead:	sbb    al,0xdc
  403eaf:	xchg   edi,eax
  403eb0:	ja     0x403f13
  403eb2:	jl     0x403e92
  403eb4:	out    0xd6,al
  403eb6:	aad    0x99
  403eb8:	sahf   
  403eb9:	popa   
  403eba:	xor    BYTE PTR [edx-0x65],ah
  403ebd:	push   edx
  403ebe:	(bad)  
  403ebf:	dec    esi
  403ec0:	add    esi,DWORD PTR [edi-0x6a]
  403ec3:	sbb    eax,0x84b740f
  403ec8:	push   esp
  403ec9:	sti    
  403eca:	cli    
  403ecb:	push   es
  403ecc:	inc    ebp
  403ecd:	sub    bh,BYTE PTR [esi+0x66d19df2]
  403ed3:	aam    0xd6
  403ed5:	push   0xf
  403ed7:	call   0x5802:0xbf52ab85
  403ede:	pop    esp
  403edf:	loop   0x403e8c
  403ee1:	xchg   ecx,eax
  403ee2:	lock sub al,0x6d
  403ee5:	add    bl,dh
  403ee7:	sub    DWORD PTR [esi],ecx
  403ee9:	addr16 cld 
  403eeb:	dec    edx
  403eec:	pop    ss
  403eed:	aad    0xbc
  403eef:	xlat   BYTE PTR ds:[ebx]
  403ef0:	sub    edx,DWORD PTR [eax+0x31c6c130]
  403ef6:	fwait
  403ef7:	js     0x403eff
  403ef9:	jmp    0x426b:0xebd7907f
  403f00:	out    dx,eax
  403f01:	dec    esi
  403f02:	(bad)  
  403f03:	inc    ecx
  403f04:	mov    ds:0x5f56dcc,al
  403f09:	or     cl,BYTE PTR [ebp+0x58a2c76b]
  403f0f:	jecxz  0x403f4d
  403f11:	test   eax,0xb5c6c432
  403f16:	xchg   ebx,eax
  403f17:	inc    ecx
  403f18:	cld    
  403f19:	pop    eax
  403f1a:	pop    ecx
  403f1b:	push   ebp
  403f1c:	repz mov bl,BYTE PTR [ebp+0x695d277]
  403f23:	cmp    BYTE PTR [edi+0x44],0xd0
  403f27:	jno    0x403f2b
  403f29:	and    eax,0x66a0c097
  403f2e:	fmul   st(1),st
  403f30:	mov    esi,0x341d5707
  403f35:	mov    edx,0x63109ba
  403f3a:	pop    es
  403f3b:	(bad)
  403f3f:	sub    al,BYTE PTR [esi-0x67]
  403f42:	stos   DWORD PTR es:[edi],eax
  403f43:	aas    
  403f44:	xchg   esi,eax
  403f45:	push   ebp
  403f46:	arpl   WORD PTR [edi],dx
  403f48:	sahf   
  403f49:	into   
  403f4a:	mov    esp,0x71e8d1b5
  403f4f:	xlat   BYTE PTR ds:[ebx]
  403f50:	scas   eax,DWORD PTR es:[edi]
  403f51:	clc    
  403f52:	pop    esi
  403f53:	fnstsw WORD PTR [ecx+0x49629f4e]
  403f59:	repnz sub edx,DWORD PTR [esi]
  403f5c:	mov    ?,WORD PTR [edx-0x7]
  403f5f:	ins    BYTE PTR es:[edi],dx
  403f60:	dec    esi
  403f61:	jae    0x403eec
  403f63:	lahf   
  403f64:	mov    al,0x64
  403f66:	adc    eax,ecx
  403f68:	fwait
  403f69:	jno    0x403fb3
  403f6b:	les    edx,FWORD PTR [eax-0x7f]
  403f6e:	add    DWORD PTR [ebp-0x46],ecx
  403f71:	test   BYTE PTR [esi-0x6c],al
  403f74:	xchg   ecx,eax
  403f75:	scas   al,BYTE PTR es:[edi]
  403f76:	push   es
  403f77:	push   es
  403f78:	(bad)
  403f7c:	imul   BYTE PTR [esi+0x7bec8066]
  403f82:	pop    eax
  403f83:	add    ah,ch
  403f85:	push   ecx
  403f86:	sub    DWORD PTR [edx+0x67],0x2f81db68
  403f8d:	lahf   
  403f8e:	mov    bl,0x96
  403f90:	dec    DWORD PTR [eax+0x4f]
  403f93:	pop    edx
  403f94:	and    edx,DWORD PTR [ebp+0x365f5444]
  403f9a:	stc    
  403f9b:	mov    ebx,0x3d7ea684
  403fa0:	arpl   WORD PTR [edi],cx
  403fa2:	sub    eax,0x7218458c
  403fa7:	jmp    0x7d60:0x32620f4a
  403fae:	neg    ecx
  403fb0:	retf   
  403fb1:	cmp    cl,bh
  403fb3:	xor    DWORD PTR ds:0xe3e0d27f,0x45429d77
  403fbd:	inc    ecx
  403fbe:	into   
  403fbf:	xchg   ebx,eax
  403fc0:	or     BYTE PTR [ecx+0x184c70a],bh
  403fc6:	outs   dx,BYTE PTR ds:[esi]
  403fc7:	stos   BYTE PTR es:[edi],al
  403fc8:	mov    esp,0x2d82715c
  403fcd:	int3   
  403fce:	scas   eax,DWORD PTR es:[edi]
  403fcf:	js     0x403fee
  403fd1:	lods   eax,DWORD PTR gs:[esi]
  403fd3:	add    ebp,DWORD PTR [eax-0x5a]
  403fd6:	or     BYTE PTR [edx+0x36558f14],bl
  403fdc:	cs in  eax,dx
  403fde:	add    eax,0x8614fcd6
  403fe3:	add    al,0x24
  403fe5:	pop    edi
  403fe6:	cld    
  403fe7:	not    BYTE PTR [edi+eiz*4-0x74492b3a]
  403fee:	or     dl,BYTE PTR [ecx+0x70d99d2]
  403ff4:	out    dx,eax
  403ff5:	jmp    DWORD PTR [edi-0x2ecd4976]
  403ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ffc:	dec    esi
  403ffd:	dec    edx
  403ffe:	xor    eax,DWORD PTR [ecx]
  404000:	sbb    esi,DWORD PTR ds:0xfa69c05a
  404006:	aam    0xa
  404008:	and    DWORD PTR [eax],esi
  40400a:	rcl    BYTE PTR [eax],cl
  40400c:	ins    DWORD PTR es:[edi],dx
  40400d:	ret    0x37c8
  404010:	push   cs
  404011:	sub    dh,BYTE PTR [ecx+0x21]
  404014:	out    0xb2,eax
  404016:	call   0xb6319c72
  40401b:	lahf   
  40401c:	sbb    eax,ebx
  40401e:	leave  
  40401f:	imul   esi,DWORD PTR [ebx],0xffffffb2
  404022:	pusha  
  404023:	jmp    0x403faa
  404025:	sbb    BYTE PTR [ecx+0x79],bl
  404028:	hlt    
  404029:	inc    esp
  40402a:	imul   edx,DWORD PTR [ebx+0x7ee8d11e],0xffffff9e
  404031:	and    cl,BYTE PTR [esp+eax*1+0x220191a7]
  404038:	(bad)  
  404039:	and    al,0x72
  40403b:	push   esi
  40403c:	pop    ss
  40403d:	sub    BYTE PTR [ecx],dl
  40403f:	inc    ebx
  404040:	retf   0xf7f1
  404043:	mov    ds:0xe9a3293,eax
  404048:	je     0x4040ba
  40404a:	call   0x834a:0x418107ec
  404051:	(bad)  
  404052:	mov    ecx,0x637ea199
  404057:	mov    ch,0x7f
  404059:	in     al,0x15
  40405b:	and    edx,DWORD PTR [ebp-0x5334da41]
  404061:	imul   esi,DWORD PTR [ecx-0x36],0x5c
  404065:	rcl    DWORD PTR [ebp-0x7381fbb1],1
  40406b:	mov    eax,0xf6acd150
  404070:	dec    ebx
  404071:	add    esp,DWORD PTR [edx]
  404073:	or     dl,ah
  404075:	sbb    al,0xee
  404077:	jle    0x4040cb
  404079:	inc    edx
  40407a:	xor    eax,0x6ee1c8ea
  40407f:	pop    es
  404080:	inc    esi
  404081:	(bad)  
  404082:	mov    ebx,0x1767753
  404087:	aaa    
  404088:	mov    eax,ds:0x9dceefb5
  40408d:	sub    ebx,DWORD PTR [eax]
  40408f:	int3   
  404090:	fisub  WORD PTR [ebp-0x89a4f80]
  404096:	aam    0x5e
  404098:	inc    eax
  404099:	(bad)  
  40409a:	pop    esi
  40409b:	ins    BYTE PTR es:[edi],dx
  40409c:	sbb    dl,BYTE PTR [edx+0x7f]
  40409f:	xor    edx,ebp
  4040a1:	add    eax,esi
  4040a3:	int    0xea
  4040a5:	in     eax,0xd2
  4040a7:	inc    esp
  4040a8:	cmc    
  4040a9:	mov    edx,0x878ed49c
  4040ae:	mov    DWORD PTR [edx+0x11],0xe33ec71c
  4040b5:	les    ecx,FWORD PTR [ecx+0x66b53190]
  4040bb:	sar    DWORD PTR [edx+0x703ce63],0x3d
  4040c2:	push   es
  4040c3:	and    al,0x24
  4040c5:	(bad)  
  4040c6:	inc    esp
  4040c7:	xchg   BYTE PTR [ebx],al
  4040c9:	shl    BYTE PTR [edx],cl
  4040cb:	neg    BYTE PTR [edi+0x2eccdb1c]
  4040d1:	push   ecx
  4040d2:	jno    0x404147
  4040d4:	test   eax,0x1bb61c1b
  4040d9:	jle    0x404108
  4040db:	rol    DWORD PTR [ebp+eiz*2+0x4d],cl
  4040df:	and    dh,dh
  4040e1:	call   0xfc52:0x324af675
  4040e8:	and    BYTE PTR [esi-0x71154161],bl
  4040ee:	xchg   esp,eax
  4040ef:	push   ecx
  4040f0:	push   edi
  4040f1:	in     eax,dx
  4040f2:	in     eax,dx
  4040f3:	sbb    al,0x8f
  4040f5:	neg    BYTE PTR [ebx-0xd]
  4040f8:	ucomiss xmm4,DWORD PTR [eax]
  4040fb:	pop    edx
  4040fc:	out    dx,eax
  4040fd:	es and al,0x8f
  404100:	in     eax,dx
  404101:	mov    cl,0x5b
  404103:	and    BYTE PTR [esi+ebp*1],dh
  404106:	std    
  404107:	push   esi
  404108:	imul   ebp,DWORD PTR [edi+0x536b18a0],0xa81502ed
  404112:	jo     0x404132
  404114:	mov    DWORD PTR [ecx-0x5a220f53],ebx
  40411a:	inc    ecx
  40411b:	mov    ebp,0xe041841f
  404120:	into   
  404121:	xchg   ebp,eax
  404122:	ss out 0x1a,eax
  404125:	aad    0x8c
  404127:	adc    ecx,esi
  404129:	das    
  40412a:	and    edx,esi
  40412c:	fmul   QWORD PTR [eax+0x6940e74]
  404132:	out    0x5f,eax
  404134:	fmul   st,st(3)
  404136:	mov    dl,0x57
  404138:	xor    eax,0x92e4918e
  40413d:	not    DWORD PTR [eax-0xf]
  404140:	shr    edi,cl
  404142:	out    dx,eax
  404143:	int    0x48
  404145:	sub    BYTE PTR [ebx+0xb0b0a1c],dl
  40414b:	pop    edx
  40414c:	jp     0x40414a
  40414e:	dec    ebp
  40414f:	inc    ecx
  404150:	rcr    BYTE PTR [edi-0x7b],1
  404153:	cdq    
  404154:	xor    DWORD PTR [edi],eax
  404156:	push   eax
  404157:	cli    
  404158:	or     DWORD PTR [edi],edi
  40415a:	dec    eax
  40415b:	addr16 pop ds
  40415d:	fsub   st,st(3)
  40415f:	pop    edx
  404160:	scas   al,BYTE PTR es:[edi]
  404161:	inc    edx
  404162:	mov    eax,edx
  404164:	enter  0x5302,0xb0
  404168:	or     ebx,DWORD PTR [edi]
  40416a:	or     BYTE PTR [ebp+0xe2d8383],ch
  404170:	iret   
  404171:	call   DWORD PTR [esi+0xeeaaf7d]
  404177:	jmp    0x82ca:0xdae5bfcb
  40417e:	and    cl,BYTE PTR [eax+0x52]
  404181:	push   ss
  404182:	test   eax,0x6095a48f
  404187:	push   0xffffffdc
  404189:	(bad)
  40418d:	jns    0x404115
  40418f:	push   edx
  404190:	jne    0x404160
  404192:	out    dx,al
  404193:	and    ebp,DWORD PTR [edi]
  404195:	mov    DWORD PTR [ebx+0x68737242],ebx
  40419b:	test   edi,edi
  40419d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40419e:	pop    edi
  40419f:	xor    ch,0xa1
  4041a2:	jbe    0x40412c
  4041a4:	or     bl,BYTE PTR [edx+0x4]
  4041a7:	jle    0x4041ea
  4041a9:	xchg   ebp,eax
  4041aa:	shr    DWORD PTR [esp+edx*1],1
  4041ad:	mov    al,ds:0xa4110ea0
  4041b2:	enter  0x5961,0x41
  4041b6:	fisubr DWORD PTR [edx+0x2f435a62]
  4041bc:	out    0xc7,eax
  4041be:	or     al,0x63
  4041c0:	mov    edi,0x9d2a5712
  4041c5:	jmp    0xec1025e4
  4041ca:	cld    
  4041cb:	ins    DWORD PTR es:[edi],dx
  4041cc:	imul   edi,DWORD PTR [edx-0x2bea95c5],0xf640d7e5
  4041d6:	cmp    esp,edi
  4041d8:	mov    al,0x95
  4041da:	imul   BYTE PTR [edi+eiz*1+0x7017b6e0]
  4041e1:	mov    esp,0xc7fd86cf
  4041e6:	scas   eax,DWORD PTR es:[edi]
  4041e7:	cmp    DWORD PTR [esi],esi
  4041e9:	data16 sub dl,ch
  4041ec:	js     0x4041b0
  4041ee:	xchg   DWORD PTR [ecx-0x351cb149],ebp
  4041f4:	fisttp WORD PTR [ebx+0x66ee500e]
  4041fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041fb:	dec    edi
  4041fc:	das    
  4041fd:	popa   
  4041fe:	sbb    cl,ch
  404200:	adc    al,BYTE PTR [eax-0x4611f340]
  404206:	inc    edx
  404207:	scas   eax,DWORD PTR es:[edi]
  404208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404209:	int3   
  40420a:	daa    
  40420b:	cli    
  40420c:	pop    ebx
  40420d:	add    DWORD PTR [esi],ecx
  40420f:	cmc    
  404210:	jmp    0xa93f:0x195ba48b
  404217:	stos   DWORD PTR es:[edi],eax
  404218:	sub    al,BYTE PTR [ebp+0x53]
  40421b:	les    edi,FWORD PTR [edx]
  40421d:	sbb    DWORD PTR [edx-0xf],0x50d45d1
  404224:	add    ebx,DWORD PTR [ebx+ebx*2+0x43]
  404228:	inc    ecx
  404229:	or     DWORD PTR [eax-0x2a],edi
  40422c:	add    al,0xc8
  40422e:	fmul   QWORD PTR [ecx+0x50]
  404231:	xchg   ebp,eax
  404232:	std    
  404233:	inc    esi
  404234:	outs   dx,DWORD PTR ds:[esi]
  404235:	cmp    ebp,DWORD PTR [edx-0x3dd23d61]
  40423b:	fidivr DWORD PTR [ebx]
  40423d:	fdiv   QWORD PTR [ebx+0x775caef5]
  404243:	gs pusha 
  404245:	sti    
  404246:	pop    esi
  404247:	ficomp WORD PTR [edx+0x14]
  40424a:	(bad)  
  40424c:	cli    
  40424d:	mov    ebp,esi
  40424f:	adc    edi,DWORD PTR [edi+0x4633d4bc]
  404255:	push   ds
  404256:	xlat   BYTE PTR ds:[ebx]
  404257:	mov    edi,0x4a415e87
  40425c:	ins    DWORD PTR es:[edi],dx
  40425d:	jmp    0x40426f
  40425f:	adc    BYTE PTR [esi-0x4],bh
  404262:	mov    WORD PTR [ebx],ss
  404264:	mov    edi,0x2f590310
  404269:	mov    al,ds:0x7087cfdb
  40426e:	push   ss
  40426f:	hlt    
  404270:	out    dx,al
  404271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404272:	fst    QWORD PTR [ecx+0xc]
  404275:	sbb    al,0xa2
  404277:	xchg   ecx,eax
  404278:	jno    0x404283
  40427a:	mov    gs,esp
  40427c:	push   DWORD PTR [ebx-0x16eb210a]
  404282:	out    dx,eax
  404283:	mov    cl,0xbf
  404285:	enter  0x2d7c,0x6b
  404289:	lahf   
  40428a:	ficomp WORD PTR [edx]
  40428c:	and    ah,BYTE PTR [edi+0x67]
  40428f:	and    eax,0x8bd31c44
  404294:	imul   ch
  404296:	popa   
  404297:	jne    0x404306
  404299:	sbb    edi,edx
  40429b:	mov    esp,0xfc615aac
  4042a0:	xor    DWORD PTR [esi+0x3cb5bfb4],ebx
  4042a6:	cmc    
  4042a7:	mov    ds:0xc39d83bf,al
  4042ac:	ret    
  4042ad:	dec    edx
  4042ae:	jne    0x4042bf
  4042b0:	pop    ecx
  4042b1:	test   DWORD PTR [ecx],ebp
  4042b3:	cmp    eax,0x9fab2624
  4042b8:	jno    0x404262
  4042ba:	and    ah,BYTE PTR [edx]
  4042bc:	sub    esi,0x58
  4042bf:	enter  0xa463,0x84
  4042c3:	mov    eax,0xd8f9bdb2
  4042c8:	fistp  WORD PTR [edi+0x4b151b2d]
  4042ce:	push   ds
  4042cf:	xchg   esp,eax
  4042d0:	push   cs
  4042d1:	push   0xffffff9c
  4042d3:	pop    ecx
  4042d4:	inc    esi
  4042d5:	mov    ?,WORD PTR [ecx-0x7]
  4042d8:	push   es
  4042d9:	outs   dx,DWORD PTR ds:[esi]
  4042da:	addr16 jno 0x404318
  4042dd:	or     edi,DWORD PTR [ebp-0x58]
  4042e0:	lods   eax,DWORD PTR ds:[esi]
  4042e1:	adc    al,0x7c
  4042e3:	add    ecx,ebp
  4042e5:	jge    0x404356
  4042e7:	jp     0x404362
  4042e9:	or     BYTE PTR ds:0xf247846c,bh
  4042ef:	pop    ebp
  4042f0:	dec    eax
  4042f1:	sbb    DWORD PTR [esi+0x6c],eax
  4042f4:	add    BYTE PTR [ebx+0x3be0d641],bh
  4042fa:	push   0xd
  4042fc:	dec    esp
  4042fd:	outs   dx,DWORD PTR ds:[esi]
  4042fe:	in     ax,dx
  404300:	add    BYTE PTR [ecx],dh
  404302:	sub    eax,0xe8ea6dc4
  404307:	jmp    0xc956580f
  40430c:	stc    
  40430d:	mov    esp,0x70d62b57
  404312:	sahf   
  404313:	push   0xb127709c
  404318:	sbb    DWORD PTR [edi+0x2a675c3e],0xf5278d4e
  404322:	jge    0x404329
  404324:	cli    
  404325:	leave  
  404326:	dec    esp
  404327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404328:	pop    DWORD PTR [ecx]
  40432a:	mov    bl,0xc8
  40432c:	mov    al,ds:0x16cf2247
  404331:	mov    ch,0x1e
  404333:	mov    eax,0x60eaeedf
  404338:	mov    ah,0x43
  40433a:	popa   
  40433b:	push   edi
  40433c:	mov    DWORD PTR [ebx+ecx*8-0x581b67ef],ebx
  404343:	push   es
  404344:	call   0x789a4637
  404349:	fbstp  TBYTE PTR [ecx-0x4f6e6cc2]
  40434f:	and    eax,0x9ee46093
  404354:	adc    al,0x5e
  404356:	std    
  404357:	adc    BYTE PTR [edi+0x9b356a2],al
  40435d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40435e:	xchg   di,ax
  404360:	loop   0x40436a
  404362:	push   ebx
  404363:	in     al,dx
  404364:	xchg   edi,eax
  404365:	dec    eax
  404366:	xchg   edx,eax
  404367:	mov    ds:0x456ecd1d,eax
  40436c:	dec    ecx
  40436d:	pop    edx
  40436e:	lea    esi,[edx]
  404370:	das    
  404371:	ret    0x136
  404374:	pop    edx
  404375:	lods   al,BYTE PTR ds:[esi]
  404376:	in     al,0x5d
  404378:	hlt    
  404379:	mov    al,BYTE PTR [edx+ebx*4-0x5e]
  40437d:	xchg   ebp,eax
  40437e:	das    
  40437f:	push   edi
  404380:	lahf   
  404381:	(bad)  
  404382:	fild   WORD PTR [ecx-0x2e]
  404385:	cmp    ah,BYTE PTR [ebx]
  404387:	mov    al,0x2e
  404389:	mov    eax,0x1d693b4d
  40438e:	jno    0x40434e
  404390:	data16 mov al,0x8d
  404393:	fsubr  st(1),st
  404395:	inc    edi
  404396:	xchg   DWORD PTR [esi],ebp
  404398:	rcl    BYTE PTR [edx+0x3a],0x31
  40439c:	push   0x3f
  40439e:	loop   0x40438e
  4043a0:	shl    DWORD PTR [ecx-0x1039f98b],1
  4043a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043a7:	cmp    BYTE PTR [ecx+ecx*1+0x142311f8],bl
  4043ae:	(bad)  
  4043af:	pop    edx
  4043b0:	jb     0x4043b0
  4043b2:	sti    
  4043b3:	xor    BYTE PTR [eax],ch
  4043b5:	cmc    
  4043b6:	mov    WORD PTR [ebp-0x24],ds
  4043b9:	aam    0x2e
  4043bb:	cli    
  4043bc:	push   esi
  4043bd:	popf   
  4043be:	pop    ss
  4043bf:	add    al,0xae
  4043c1:	inc    eax
  4043c2:	ins    DWORD PTR es:[edi],dx
  4043c3:	inc    esp
  4043c4:	call   0xa444:0x9772ad57
  4043cb:	into   
  4043cc:	stc    
  4043cd:	hlt    
  4043ce:	mov    ?,esi
  4043d0:	test   DWORD PTR [esi+0x54],esi
  4043d3:	cmp    cl,BYTE PTR [eax+0x44595406]
  4043d9:	popf   
  4043da:	clc    
  4043db:	shl    DWORD PTR [esi],0x88
  4043de:	stc    
  4043df:	inc    edx
  4043e0:	and    BYTE PTR [ebx+0x25b1e563],dh
  4043e6:	pop    edx
  4043e7:	imul   ebp,DWORD PTR [eax-0xacbbe99],0xaf60fb2f
  4043f1:	mov    ?,WORD PTR [ecx+0x5d6f8e87]
  4043f7:	lahf   
  4043f8:	out    0xfa,eax
  4043fa:	fistp  WORD PTR [ebx]
  4043fc:	and    BYTE PTR [esi],dl
  4043fe:	std    
  4043ff:	rol    dl,0x2
  404402:	dec    ebx
  404403:	xor    al,0x23
  404405:	in     eax,dx
  404406:	int    0xa5
  404408:	jle    0x404402
  40440a:	pop    es
  40440b:	gs jne 0x4043c6
  40440e:	call   DWORD PTR [ebx+0x7ffbe176]
  404414:	inc    edi
  404415:	xchg   ebp,eax
  404416:	sub    ecx,DWORD PTR [ebx+0x3b]
  404419:	leave  
  40441a:	fdivr  QWORD PTR [esi+0x1f]
  40441d:	rcl    DWORD PTR ds:0xf9457618,cl
  404423:	mov    ebx,eax
  404425:	mov    al,dh
  404427:	ins    DWORD PTR es:[edi],dx
  404428:	jne    0x404464
  40442a:	mov    esi,0x1753f979
  40442f:	xor    edx,DWORD PTR [ebx+0x46a2afdf]
  404435:	in     al,0x1
  404437:	cwde   
  404438:	mov    bl,0x8b
  40443a:	mov    DWORD PTR [ecx],ebx
  40443c:	pop    ebx
  40443d:	and    ecx,DWORD PTR [eax+0x1c9684ce]
  404443:	mov    cl,0xfd
  404445:	jl     0x404473
  404447:	icebp  
  404448:	push   0x64b7c9e4
  40444d:	das    
  40444e:	imul   edi,edi,0xffffffb0
  404451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404452:	das    
  404453:	ror    DWORD PTR [edi-0x2daa6fb2],0x7d
  40445a:	mov    DWORD PTR [ebx+0x7b],0x58962124
  404461:	xchg   BYTE PTR [esi+0x7e],ch
  404464:	jae    0x4044a2
  404466:	je     0x4043fb
  404468:	in     al,dx
  404469:	sub    ebx,DWORD PTR [ebp+0x21d05d94]
  40446f:	call   FWORD PTR [ebp+0x2f27370c]
  404475:	sbb    cl,BYTE PTR [ebx]
  404477:	mov    WORD PTR [edx-0x3a],ds
  40447a:	cwde   
  40447b:	pop    esp
  40447c:	cmp    eax,0x87e62ec1
  404481:	jne    0x4044db
  404483:	icebp  
  404484:	jb     0x404460
  404486:	fdiv   QWORD PTR [ebx+0x9ef781e]
  40448c:	fwait
  40448d:	sub    al,BYTE PTR [edi-0x38cc5745]
  404493:	cs add al,0x52
  404496:	dec    esi
  404497:	add    ebp,edi
  404499:	cmc    
  40449a:	add    ebx,DWORD PTR [ebp-0x1e8ae031]
  4044a0:	push   0xff2208bf
  4044a5:	mov    DWORD PTR [ebx-0x3968c920],esp
  4044ab:	pushf  
  4044ac:	xor    DWORD PTR [edx],0xffffffb4
  4044af:	into   
  4044b0:	daa    
  4044b1:	popa   
  4044b2:	lods   eax,DWORD PTR ds:[esi]
  4044b3:	and    esp,eax
  4044b5:	adc    dh,dl
  4044b7:	push   es
  4044b8:	mov    bl,0xe8
  4044ba:	mov    ds:0xe24a3e90,al
  4044bf:	aad    0x61
  4044c1:	fimul  DWORD PTR [eax-0x68]
  4044c4:	and    al,0xf8
  4044c6:	add    BYTE PTR [eax+0x2ad540b1],0x81
  4044cd:	stc    
  4044ce:	(bad)  
  4044cf:	add    ah,BYTE PTR [eax-0x3867553a]
  4044d5:	xchg   BYTE PTR [eax],dh
  4044d7:	repnz in eax,0xe1
  4044da:	pop    ecx
  4044db:	cmp    esi,0xf447c32
  4044e1:	xchg   ebx,eax
  4044e2:	xchg   ebx,eax
  4044e3:	daa    
  4044e4:	fiadd  DWORD PTR [edx+0x26eb312d]
  4044ea:	inc    ebp
  4044eb:	cvtps2pd xmm1,QWORD PTR [edi+0x488158bc]
  4044f2:	ret    0x1cfc
  4044f5:	xchg   esp,eax
  4044f6:	or     bh,BYTE PTR [esi-0x6f]
  4044f9:	(bad)  
  4044fa:	sar    BYTE PTR [esi-0x6d5c236d],1
  404500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404501:	sub    ebp,ebp
  404503:	sahf   
  404504:	repnz rdmsr 
  404507:	jl     0x40456d
  404509:	fs (bad) 
  40450c:	pop    eax
  40450d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40450f:	ins    DWORD PTR es:[edi],dx
  404510:	test   BYTE PTR [ecx+0x25aa254a],dh
  404516:	shl    BYTE PTR [ebp+0x518a2985],cl
  40451c:	gs sbb esi,0x273faf91
  404523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404524:	adc    eax,0x7bc37b59
  404529:	iret   
  40452a:	mov    gs:0xdd9c1a4b,al
  404530:	pop    esp
  404531:	cmp    DWORD PTR [ecx+0x15],edx
  404534:	mov    ds:0xab9610e,eax
  404539:	scas   al,BYTE PTR es:[edi]
  40453a:	push   ebp
  40453b:	add    ebx,DWORD PTR [ebp+0x27]
  40453e:	rcr    DWORD PTR [eax],1
  404540:	cmc    
  404541:	int    0x99
  404543:	dec    ecx
  404544:	push   ecx
  404545:	addr16 sub eax,0x82d01c8
  40454b:	test   eax,0x2bbb5cd4
  404550:	aas    
  404551:	cdq    
  404552:	mov    al,0xab
  404554:	es hlt 
  404556:	adc    ch,BYTE PTR [edi+0x42]
  404559:	dec    edx
  40455a:	icebp  
  40455b:	cli    
  40455c:	adc    edx,DWORD PTR [ebx+0x38b671a2]
  404562:	mov    ds:0x7f047987,al
  404567:	cmp    DWORD PTR [ecx-0x231cb8dc],0x9be02f1c
  404571:	xchg   BYTE PTR [ebx+0x401c5333],ch
  404577:	dec    ebp
  404578:	jno    0x404520
  40457a:	mov    edi,0x6b2686e1
  40457f:	cld    
  404580:	loope  0x404578
  404582:	jmp    0x2305772b
  404587:	xor    esp,DWORD PTR [ebx+0x13]
  40458a:	aas    
  40458b:	imul   eax,DWORD PTR [edx],0x7f
  40458e:	xchg   esp,eax
  40458f:	or     ebx,DWORD PTR [eax+0x33215f63]
  404595:	xchg   ebx,eax
  404596:	int    0xe7
  404598:	mov    dl,0xdf
  40459a:	inc    ebx
  40459b:	ins    BYTE PTR es:[edi],dx
  40459c:	ja     0x4045d9
  40459e:	mov    ecx,0xda2186a7
  4045a3:	cmp    eax,0xfb3d86de
  4045a8:	mov    WORD PTR [ebx+0x33],gs
  4045ab:	std    
  4045ac:	(bad)  
  4045ad:	nop
  4045ae:	sbb    bh,BYTE PTR [eax-0x2fdb2d9a]
  4045b4:	xchg   bp,ax
  4045b6:	arpl   WORD PTR [ebx-0x43e0de70],ax
  4045bc:	rol    BYTE PTR [ebp+eiz*1-0x76cd8fce],cl
  4045c3:	mov    ds:0xb4c64c3d,eax
  4045c8:	in     al,dx
  4045c9:	je     0x404599
  4045cb:	jnp    0x4045b8
  4045cd:	jp     0x4045a7
  4045cf:	out    dx,al
  4045d0:	gs popa 
  4045d2:	sar    DWORD PTR [edx],1
  4045d4:	ret    0xf844
  4045d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045d8:	mov    esi,0x27c1821e
  4045dd:	add    dl,BYTE PTR [edi+0xcbd4b49]
  4045e3:	ins    BYTE PTR es:[edi],dx
  4045e4:	in     al,dx
  4045e5:	push   esp
  4045e6:	pop    edx
  4045e7:	mov    esi,0x61b67a36
  4045ec:	int    0x45
  4045ee:	and    DWORD PTR [edx],0xcd7b68fb
  4045f4:	stos   DWORD PTR es:[edi],eax
  4045f5:	mov    edi,0xc40d3d72
  4045fa:	sub    DWORD PTR [edx],0x2057958
  404600:	lahf   
  404601:	gs dec edx
  404603:	cwde   
  404604:	in     eax,dx
  404605:	lods   eax,DWORD PTR ds:[esi]
  404606:	pop    ebx
  404607:	sahf   
  404608:	inc    eax
  404609:	pushf  
  40460a:	dec    esp
  40460b:	cmc    
  40460c:	aas    
  40460d:	in     eax,dx
  40460e:	mov    esi,0x70003002
  404613:	mov    esp,0xc6f6d1d8
  404618:	jne    0x404695
  40461a:	mov    ds:0xab9e497c,al
  40461f:	inc    ebp
  404620:	pop    ebx
  404621:	jecxz  0x4045c9
  404623:	jp     0x4045e1
  404625:	and    DWORD PTR [eax+eax*2-0xcf5491a],esi
  40462c:	push   edi
  40462d:	inc    ebx
  40462e:	add    ah,BYTE PTR [edx-0x44]
  404631:	aad    0xa9
  404633:	and    BYTE PTR ds:[esp+eax*2+0x2e],0xcd
  404639:	xchg   BYTE PTR [ecx+0x3e],bl
  40463c:	loop   0x404665
  40463e:	cmp    al,0x9b
  404640:	call   0xf84:0xad0d2c2e
  404647:	inc    BYTE PTR [esi+0x604d6308]
  40464d:	ss dec edx
  40464f:	shl    BYTE PTR [ecx+ecx*2+0x5e],cl
  404653:	cmp    BYTE PTR [ebp-0x2a],dh
  404656:	push   eax
  404657:	rcl    dh,1
  404659:	shr    ecx,cl
  40465b:	imul   esp,DWORD PTR [ecx-0x34],0x22e6d8b
  404662:	dec    edx
  404663:	jge    0x404694
  404665:	mov    dh,0x78
  404667:	xor    eax,0xf944d412
  40466c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40466d:	stos   BYTE PTR es:[edi],al
  40466e:	inc    eax
  40466f:	xchg   ecx,eax
  404670:	ins    BYTE PTR es:[edi],dx
  404671:	push   ss
  404672:	sbb    DWORD PTR [esi+edi*1],0x79c6ecb8
  404679:	mov    ds:0x19e4c0db,eax
  40467e:	out    dx,eax
  40467f:	pop    eax
  404680:	(bad)  [edi+0x1e]
  404683:	jmp    0x1f60:0xe81eccfb
  40468a:	xchg   esp,eax
  40468b:	outs   dx,DWORD PTR ds:[esi]
  40468c:	sbb    DWORD PTR [ecx-0x3757a592],eax
  404692:	repnz mov ebx,0x3da30e27
  404698:	cmc    
  404699:	rol    DWORD PTR [ecx],cl
  40469b:	jecxz  0x40462c
  40469d:	pushf  
  40469e:	push   cs
  40469f:	inc    ecx
  4046a0:	call   0xe539:0xae18cfe2
  4046a7:	inc    esp
  4046a8:	xchg   DWORD PTR [edi+ecx*4-0x26094654],ebp
  4046af:	mov    bh,BYTE PTR [eax+0x429fd144]
  4046b5:	pop    ebx
  4046b6:	je     0x404684
  4046b8:	and    eax,0x932545d
  4046bd:	mov    esp,0x22730c98
  4046c2:	mov    eax,ds:0x633f8c32
  4046c7:	sahf   
  4046c8:	loopne 0x404707
  4046ca:	int3   
  4046cb:	fsubrp st(5),st
  4046cd:	sub    cl,0xc4
  4046d0:	jns    0x4046a1
  4046d2:	mov    ds:0x814cc0b8,eax
  4046d7:	adc    eax,0xf1983762
  4046dc:	hlt    
  4046dd:	js     0x40472e
  4046df:	scas   al,BYTE PTR es:[edi]
  4046e0:	mov    eax,0x1d32e36d
  4046e5:	jb     0x4046a3
  4046e7:	adc    eax,0x751894fe
  4046ec:	add    ecx,DWORD PTR [ecx]
  4046ee:	sub    esp,DWORD PTR [esi-0x4f]
  4046f1:	cmp    esp,DWORD PTR [esi+0x62]
  4046f4:	add    al,0x6d
  4046f6:	mov    ch,0xfc
  4046f8:	dec    ebx
  4046f9:	movaps xmm0,XMMWORD PTR [edi]
  4046fc:	mov    al,ds:0x616f9bd7
  404701:	pop    ds
  404702:	inc    ebp
  404703:	int    0x28
  404705:	cli    
  404706:	lods   eax,DWORD PTR ds:[esi]
  404707:	pop    edx
  404708:	rol    ebp,1
  40470a:	shl    BYTE PTR [edi+edx*8-0x6077af8c],1
  404711:	sbb    esp,esp
  404713:	mov    WORD PTR [ebx+edi*4+0xb433e04],?
  40471a:	sahf   
  40471b:	mov    bl,0x38
  40471d:	or     DWORD PTR [ecx],edx
  40471f:	pusha  
  404720:	add    BYTE PTR [esi+0x326e2ba0],bl
  404726:	sbb    DWORD PTR [esi+0x73fde5b4],edx
  40472c:	js     0x4047a2
  40472e:	mov    al,ds:0xc24ead45
  404733:	mov    ah,BYTE PTR [ecx+0x3b084ef1]
  404739:	loope  0x404705
  40473b:	add    eax,0xffa2041e
  404740:	dec    edx
  404741:	and    DWORD PTR [eax],ebx
  404743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404744:	out    dx,al
  404745:	xlat   BYTE PTR ds:[ebx]
  404746:	mov    eax,0xf5730f8
  40474b:	xor    BYTE PTR [ebx],cl
  40474d:	daa    
  40474e:	inc    edx
  40474f:	jmp    DWORD PTR [edx]
  404751:	adc    eax,esp
  404753:	mov    dh,0xa7
  404755:	loop   0x40471f
  404757:	lods   al,BYTE PTR ds:[esi]
  404758:	mov    BYTE PTR [eax+0x42],cl
  40475b:	bnd ja 0x404770
  40475e:	(bad)  [edx]
  404760:	jo     0x4047e1
  404762:	add    al,0x2
  404764:	iret   
  404765:	pop    esp
  404766:	mov    ss,eax
  404768:	add    edi,DWORD PTR [ebx+0x2b7b22c9]
  40476e:	mov    ds:0x13f247af,eax
  404773:	outs   dx,DWORD PTR ds:[esi]
  404774:	mov    WORD PTR [ebp+0x12],fs
  404777:	gs call 0x98d1:0x58aec651
  40477f:	mov    al,ds:0xabb7f522
  404784:	cmp    ch,BYTE PTR ds:0xf95073b8
  40478a:	mov    ebx,0x870982e4
  40478f:	mov    edi,0xb8966a04
  404794:	inc    ebp
  404795:	inc    esi
  404796:	push   ebx
  404797:	es mov al,0x3b
  40479a:	xor    eax,0xfc15bfcc
  40479f:	loopne 0x404753
  4047a1:	test   BYTE PTR [ebx+0x48],ch
  4047a4:	pop    ss
  4047a5:	and    edx,DWORD PTR [eax+ecx*8-0x6a]
  4047a9:	jmp    0x404738
  4047ab:	xor    DWORD PTR [eax-0x13],ecx
  4047ae:	sbb    al,0x7d
  4047b0:	(bad)  [esi-0x50]
  4047b3:	pop    edi
  4047b4:	cmp    dl,dl
  4047b6:	xchg   edx,eax
  4047b7:	mov    bl,0x3e
  4047b9:	out    dx,eax
  4047ba:	cmp    cl,BYTE PTR [eax]
  4047bc:	mov    ds:0x274dbb27,eax
  4047c1:	jecxz  0x40481c
  4047c3:	jl     0x404792
  4047c5:	push   0xffffffc6
  4047c7:	call   0x6105efc1
  4047cc:	shl    BYTE PTR [edi+0x1f],0x27
  4047d0:	(bad)  
  4047d1:	(bad)  
  4047d3:	enter  0x7dcf,0xef
  4047d7:	int3   
  4047d8:	(bad)  
  4047d9:	xchg   esp,eax
  4047da:	pop    es
  4047db:	retf   0x4d0d
  4047de:	int    0x92
  4047e0:	cdq    
  4047e1:	jb     0x404838
  4047e3:	jno    0x404765
  4047e5:	and    ebx,DWORD PTR [ebp-0x40]
  4047e8:	pop    ecx
  4047e9:	sbb    ebx,DWORD PTR [edx-0x7be5624e]
  4047ef:	cmp    eax,0x7831e02c
  4047f4:	mov    al,0xa3
  4047f6:	mov    ds:0x9b0e953,al
  4047fb:	sti    
  4047fc:	ficomp WORD PTR [ecx-0x66d16014]
  404802:	ins    DWORD PTR es:[edi],dx
  404803:	or     eax,DWORD PTR [ebx]
  404805:	outs   dx,DWORD PTR ds:[esi]
  404806:	int3   
  404807:	sub    edi,eax
  404809:	mov    eax,ds:0xa4a72bd5
  40480e:	aas    
  40480f:	scas   al,BYTE PTR es:[edi]
  404810:	(bad)  
  404811:	not    DWORD PTR [esi-0x5b9bd270]
  404817:	clc    
  404818:	les    ecx,FWORD PTR [edx+ebx*4+0x59]
  40481c:	cld    
  40481d:	inc    edx
  40481e:	stos   DWORD PTR es:[edi],eax
  40481f:	jge    0x4047be
  404821:	jb     0x4048a0
  404823:	push   es
  404824:	imul   ebp,DWORD PTR [esi+0x7b],0x729ec74e
  40482b:	stos   BYTE PTR es:[edi],al
  40482c:	scas   al,BYTE PTR es:[edi]
  40482d:	xchg   edx,eax
  40482e:	inc    ebx
  40482f:	mov    WORD PTR [edx],?
  404831:	mov    WORD PTR [ecx-0x18],?
  404834:	xor    DWORD PTR [ebp+0x27f6505e],edx
  40483a:	push   edi
  40483b:	ret    0x1e10
  40483e:	mov    bh,0x4
  404840:	stos   DWORD PTR es:[edi],eax
  404841:	test   BYTE PTR [ecx*1-0x4e0ca792],bh
  404848:	mov    ds:0xc6c172d0,eax
  40484d:	mov    dl,0x39
  40484f:	add    DWORD PTR [edx-0x4c],edx
  404852:	(bad)  
  404853:	pop    ds
  404854:	mov    ?,WORD PTR [eax-0x8]
  404857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404858:	and    edi,DWORD PTR [eax]
  40485a:	or     BYTE PTR [edx-0x43],dl
  40485d:	shr    dl,1
  40485f:	sbb    ecx,DWORD PTR [eax]
  404861:	jl     0x4048e0
  404863:	jb     0x4048e0
  404865:	jbe    0x4047ec
  404867:	retf   
  404868:	call   0x8347:0x35ae7eda
  40486f:	mov    ds:0xec1f04b3,al
  404874:	sbb    al,0x7
  404876:	fisttp DWORD PTR [edi-0x20d3246f]
  40487c:	pop    ebx
  40487d:	xlat   BYTE PTR ds:[ebx]
  40487e:	inc    esi
  40487f:	test   DWORD PTR [ebx+0x33225fd5],eax
  404885:	pop    ebx
  404886:	xor    esp,DWORD PTR [edi]
  404888:	mov    al,BYTE PTR [ebx]
  40488a:	push   ecx
  40488b:	jo     0x404901
  40488d:	ror    DWORD PTR [ebx-0x33],cl
  404890:	iret   
  404891:	pop    esp
  404892:	cli    
  404893:	sub    al,0xb9
  404895:	loope  0x404897
  404897:	out    0xbd,eax
  404899:	adc    edx,DWORD PTR [edx]
  40489b:	lahf   
  40489c:	push   es
  40489d:	or     al,0x23
  40489f:	push   cs
  4048a0:	pop    edi
  4048a1:	retf   
  4048a2:	(bad)
  4048a6:	repz test eax,0x567114e9
  4048ac:	out    0x90,al
  4048ae:	mov    al,0xf6
  4048b0:	mov    ebx,cs
  4048b2:	cld    
  4048b3:	outs   dx,BYTE PTR ds:[esi]
  4048b4:	vhaddpd xmm7,xmm5,XMMWORD PTR [edx-0x1781baa0]
  4048bc:	cmp    BYTE PTR [edi+edx*2-0x62],dh
  4048c0:	xchg   edi,eax
  4048c1:	inc    esi
  4048c2:	mov    ah,0xa7
  4048c4:	adc    al,0xc4
  4048c6:	mov    ebx,0xc96d0e2c
  4048cb:	cmp    ecx,edx
  4048cd:	push   edi
  4048ce:	ficomp WORD PTR [ecx-0x34c9ead3]
  4048d4:	jp     0x40486c
  4048d6:	test   dl,dh
  4048d8:	xchg   ebx,eax
  4048d9:	dec    edi
  4048da:	adc    al,0x41
  4048dc:	xchg   ebp,eax
  4048dd:	add    cl,al
  4048df:	mov    al,0xf5
  4048e1:	jne    0x4048cd
  4048e3:	or     eax,DWORD PTR [ecx+0x47]
  4048e6:	or     ebp,DWORD PTR [ebp+0x617f4f98]
  4048ec:	std    
  4048ed:	test   eax,0x16b2e54
  4048f2:	and    BYTE PTR [edi+0x38cb7ef5],dl
  4048f8:	xchg   DWORD PTR [edi+esi*8-0x3e],eax
  4048fc:	xor    cl,BYTE PTR [ecx+0x17a51234]
  404902:	mov    ds:0x10c4fb03,al
  404907:	jae    0x404891
  404909:	stos   DWORD PTR es:[edi],eax
  40490a:	cld    
  40490b:	mov    dl,0x79
  40490d:	fadd   st(5),st
  40490f:	mov    ebp,0xacec7371
  404914:	jbe    0x404991
  404916:	jno    0x404961
  404918:	add    eax,0xb094795e
  40491d:	or     al,0x2c
  40491f:	mov    ds:0xc09656f6,eax
  404924:	in     al,dx
  404925:	imul   ebp,ebx,0xffffffd4
  404928:	mov    esi,es
  40492a:	mov    esp,0xc223bace
  40492f:	dec    esi
  404930:	or     DWORD PTR [ebx-0x4e32b52e],ebx
  404936:	adc    al,0x57
  404938:	shr    BYTE PTR [esi+0x6f60da1b],cl
  40493e:	cmp    ecx,DWORD PTR [esi+0x27]
  404941:	lods   al,BYTE PTR ds:[esi]
  404942:	pop    gs
  404944:	push   0xfffffff5
  404946:	enter  0x6ff,0x50
  40494a:	sub    DWORD PTR [edx-0x3b],0xc8216da9
  404951:	lods   eax,DWORD PTR ds:[esi]
  404952:	push   esp
  404953:	pop    edx
  404954:	pop    ss
  404955:	add    esi,DWORD PTR [esi-0x4185abd2]
  40495b:	mov    ds:0xf46445fd,al
  404960:	arpl   WORD PTR [esi-0xf5da6df],sp
  404966:	inc    esp
  404967:	inc    edx
  404968:	cdq    
  404969:	inc    ecx
  40496a:	xchg   esi,eax
  40496b:	in     eax,dx
  40496c:	add    DWORD PTR [ebx],eax
  40496e:	sub    edi,eax
  404970:	push   ecx
  404971:	jge    0x4049d3
  404973:	adc    dl,dh
  404975:	outs   dx,BYTE PTR ds:[esi]
  404976:	ss inc eax
  404978:	shl    BYTE PTR [edi-0x526ad179],cl
  40497e:	or     dl,dh
  404980:	pop    edi
  404981:	iret   
  404982:	sar    DWORD PTR [esi+ebx*2-0x1e368b16],1
  404989:	push   ds
  40498a:	mov    edx,0xcb5f1b53
  40498f:	(bad)
  404994:	daa    
  404995:	jo     0x40495b
  404997:	mov    ds,WORD PTR [ebx]
  404999:	lahf   
  40499a:	add    BYTE PTR [esi-0x8],0xef
  40499e:	and    eax,0xeb2bb631
  4049a3:	add    ah,bh
  4049a5:	out    dx,eax
  4049a6:	ja     0x404965
  4049a8:	mov    bh,0x40
  4049aa:	outs   dx,DWORD PTR ds:[esi]
  4049ab:	push   ecx
  4049ac:	aaa    
  4049ad:	fdivr  QWORD PTR [eax-0x11e6454d]
  4049b3:	pop    esp
  4049b4:	and    DWORD PTR [edx-0x4f],eax
  4049b7:	jnp    0x4049b7
  4049b9:	mov    eax,ds:0xfedb10ac
  4049be:	pushf  
  4049bf:	rcr    BYTE PTR [edx+0x6949a565],0x5e
  4049c6:	stos   BYTE PTR es:[edi],al
  4049c7:	xchg   ebx,eax
  4049c8:	ins    BYTE PTR es:[edi],dx
  4049c9:	xchg   edx,eax
  4049ca:	loope  0x4049ba
  4049cc:	xor    ch,al
  4049ce:	ficomp WORD PTR [ebx-0x3812a320]
  4049d4:	cmp    eax,0xf75899ff
  4049d9:	das    
  4049da:	add    edx,ebp
  4049dc:	inc    eax
  4049dd:	clc    
  4049de:	aam    0xed
  4049e0:	push   edx
  4049e1:	popa   
  4049e2:	sub    BYTE PTR [edi-0x1b],bh
  4049e5:	call   FWORD PTR ds:0x31d60781
  4049eb:	jb     0x4049c4
  4049ed:	popf   
  4049ee:	push   cs
  4049ef:	mov    bh,bh
  4049f1:	outs   dx,BYTE PTR ds:[esi]
  4049f2:	cmp    BYTE PTR [edx-0x3c6da6ac],cl
  4049f8:	cmc    
  4049f9:	ror    ah,cl
  4049fb:	shr    edi,0x29
  4049fe:	cld    
  4049ff:	cmp    al,0x74
  404a01:	or     eax,0x98c23b52
  404a06:	(bad)  
  404a07:	mov    esi,0xb3b7f462
  404a0c:	add    ebx,edi
  404a0e:	mov    BYTE PTR [ecx-0x7008cd],cl
  404a14:	xor    al,0x1f
  404a16:	jp     0x404a0a
  404a18:	add    BYTE PTR [esi-0x2b],bh
  404a1b:	daa    
  404a1c:	inc    esi
  404a1d:	pop    esi
  404a1e:	jb     0x404a5c
  404a20:	and    BYTE PTR [ecx+0x515326ab],dl
  404a26:	or     eax,0xc4c7997b
  404a2b:	push   cs
  404a2c:	cmp    al,0x1
  404a2e:	sbb    dl,BYTE PTR [ecx+edx*2-0x1e]
  404a32:	xchg   DWORD PTR [esi+0x2f],esp
  404a35:	mov    al,0x49
  404a37:	mov    esi,0x6cb2649a
  404a3c:	or     esp,DWORD PTR [ecx+ebp*4]
  404a3f:	leave  
  404a40:	add    DWORD PTR [edi+0x71562512],edx
  404a46:	in     eax,dx
  404a47:	mov    ds:0xecfbd6bc,eax
  404a4c:	retf   
  404a4d:	leave  
  404a4e:	add    bl,BYTE PTR [edi+0x77]
  404a51:	add    eax,0x84e06363
  404a56:	js     0x404a84
  404a58:	sbb    DWORD PTR ds:0x2638e032,ebp
  404a5e:	cdq    
  404a5f:	mov    edi,0x72b1044f
  404a64:	jp     0x404a0a
  404a66:	ss pop ss
  404a68:	(bad)  
  404a6a:	std    
  404a6b:	sbb    edi,DWORD PTR [esp+esi*4-0x2bdfe24b]
  404a72:	ja     0x404a6d
  404a74:	lea    ecx,[ebp-0x17]
  404a77:	push   edi
  404a78:	arpl   WORD PTR [edi],sp
  404a7a:	retf   
  404a7b:	neg    BYTE PTR [ebp-0x208e4165]
  404a81:	mov    esp,0x7ad4c190
  404a86:	mul    BYTE PTR [edi-0x2da430a3]
  404a8c:	(bad)  
  404a8d:	cwde   
  404a8e:	in     al,dx
  404a8f:	imul   esi,DWORD PTR [ebx+0x701a7520],0x40
  404a96:	fwait
  404a97:	repz (bad) 
  404a99:	into   
  404a9a:	jb     0x404a30
  404a9c:	sub    DWORD PTR [ecx],esi
  404a9e:	nop
  404a9f:	or     edx,DWORD PTR [edi-0x1f]
  404aa2:	mov    esp,0x9b2367f4
  404aa7:	lds    esi,FWORD PTR [ebx-0x63873740]
  404aad:	fnstenv [edi]
  404aaf:	push   0xca6286e8
  404ab4:	cs popa 
  404ab6:	mov    ecx,0xb19145fa
  404abb:	ds xchg ebx,eax
  404abd:	mov    edx,0x46ae2fd5
  404ac2:	stc    
  404ac3:	jmp    0x76b865a1
  404ac8:	mov    ebx,0x9b9e66b5
  404acd:	(bad)  
  404ace:	mov    al,0x7b
  404ad0:	dec    edx
  404ad1:	arpl   bp,ax
  404ad3:	or     DWORD PTR [eax+ebp*1+0x50e7a4a0],edx
  404ada:	rcl    ebp,1
  404adc:	mov    ds:0xc5ee77da,eax
  404ae1:	add    bl,BYTE PTR [edi]
  404ae3:	sbb    eax,0xa959bfa8
  404ae8:	and    DWORD PTR [ebp-0x1d2b85a7],esi
  404aee:	pop    eax
  404aef:	mov    eax,edx
  404af1:	fst    QWORD PTR [ecx-0x51]
  404af4:	shl    DWORD PTR [eax-0x53],cl
  404af7:	data16 stos BYTE PTR es:[edi],al
  404af9:	inc    esi
  404afa:	xor    BYTE PTR [ebx],0x2e
  404afd:	and    dh,BYTE PTR [eax]
  404aff:	jns    0x404a94
  404b01:	fnstsw WORD PTR [ecx+0x4f]
  404b04:	xchg   esi,eax
  404b05:	xchg   esi,esi
  404b07:	or     BYTE PTR [ebx],bl
  404b09:	or     esp,DWORD PTR [eax+0x2e6b09ec]
  404b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b10:	in     al,0xb0
  404b12:	push   0x6babb0e8
  404b17:	mov    bl,0x2c
  404b19:	adc    dl,al
  404b1b:	dec    ebp
  404b1c:	test   dl,cl
  404b1e:	add    BYTE PTR [edi+0x3c57e58b],bl
  404b24:	test   DWORD PTR [esi+0x37ad4275],eax
  404b2a:	sbb    BYTE PTR [ecx+0x48],ah
  404b2d:	xchg   DWORD PTR [esi+0x38],ecx
  404b30:	mov    ah,0xc2
  404b32:	mov    eax,ds:0x72ca939b
  404b37:	lods   al,BYTE PTR ds:[esi]
  404b38:	cmp    eax,0x97f4cf3e
  404b3d:	jnp    0x404b66
  404b3f:	jge    0x404b93
  404b41:	sub    esi,DWORD PTR [edx]
  404b43:	in     al,0x14
  404b45:	fsub   DWORD PTR [edi-0x29]
  404b48:	xchg   esp,eax
  404b49:	jo     0x404bad
  404b4b:	sar    DWORD PTR [eax],cl
  404b4d:	push   ebx
  404b4e:	dec    ebp
  404b4f:	xchg   esi,eax
  404b50:	push   esp
  404b51:	cld    
  404b52:	dec    esi
  404b53:	out    dx,eax
  404b54:	stos   BYTE PTR es:[edi],al
  404b55:	enter  0x9fdc,0x34
  404b59:	cmp    DWORD PTR [ecx-0x17],0xbbb73f60
  404b60:	add    DWORD PTR [eax+0x45],edx
  404b63:	int3   
  404b64:	aas    
  404b65:	not    ebp
  404b67:	int    0x68
  404b69:	out    dx,eax
  404b6a:	pop    eax
  404b6b:	shl    ch,1
  404b6d:	xchg   esp,eax
  404b6e:	sub    BYTE PTR [esi+0x64060e01],dh
  404b74:	and    BYTE PTR [edi+ebp*4],ch
  404b77:	mov    al,ds:0xccee0df5
  404b7c:	push   edi
  404b7d:	adc    edx,edi
  404b7f:	fld    TBYTE PTR [ebx+0x7e192dd3]
  404b85:	mov    dh,0xe9
  404b87:	aad    0x5
  404b89:	aad    0xe6
  404b8b:	xchg   BYTE PTR [eax],bh
  404b8d:	arpl   WORD PTR [eax],si
  404b8f:	ins    DWORD PTR es:[edi],dx
  404b90:	ja     0x404b3e
  404b92:	popf   
  404b93:	bound  edi,QWORD PTR [edx+0x27eaaa99]
  404b99:	mov    esp,edx
  404b9b:	cwde   
  404b9c:	sbb    DWORD PTR [ebp+0x442c4dee],edi
  404ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ba3:	outs   dx,BYTE PTR ds:[esi]
  404ba4:	push   edx
  404ba5:	sub    al,BYTE PTR [ecx+edi*1]
  404ba8:	inc    eax
  404ba9:	into   
  404baa:	call   0x372:0x24208767
  404bb1:	cmp    al,0x83
  404bb3:	mov    BYTE PTR [ebx],al
  404bb5:	retf   
  404bb6:	int3   
  404bb7:	sahf   
  404bb8:	addr16 inc edi
  404bba:	icebp  
  404bbb:	aas    
  404bbc:	int3   
  404bbd:	add    esi,DWORD PTR [edx-0x66ef56c0]
  404bc3:	out    0xc5,al
  404bc5:	or     al,0x2d
  404bc7:	adc    DWORD PTR [edx],0xffffffb4
  404bca:	aad    0xf3
  404bcc:	js     0x404c07
  404bce:	jl     0x404bbe
  404bd0:	push   edi
  404bd1:	imul   DWORD PTR [edx+0x33]
  404bd4:	pop    ebp
  404bd5:	sub    al,0x55
  404bd7:	mov    dl,0x3b
  404bd9:	clc    
  404bda:	jnp    0x404b92
  404bdc:	mov    ds:0x4bf31fbc,al
  404be1:	dec    edi
  404be2:	pop    ecx
  404be3:	rcl    DWORD PTR [ecx-0x2a],1
  404be6:	jmp    0x15d5:0x2da75b44
  404bed:	shl    DWORD PTR [ebp-0x54c455f0],cl
  404bf3:	mov    ds:0xfa815fd1,eax
  404bf8:	xor    al,0xe6
  404bfa:	mov    esp,0xa00a1bfb
  404bff:	cdq    
  404c00:	sub    BYTE PTR [edx],bh
  404c02:	stc    
  404c03:	fstp   QWORD PTR ds:0x35bb1766
  404c09:	(bad)
  404c0e:	xor    al,0x4d
  404c10:	and    eax,0x94930650
  404c15:	xor    eax,0xe0464bc1
  404c1a:	aad    0x3
  404c1c:	ja     0x404c8d
  404c1e:	xor    DWORD PTR [ebx+0x4],ecx
  404c21:	fimul  WORD PTR [esi-0x4c]
  404c24:	lds    edx,FWORD PTR [edx-0x14]
  404c27:	mov    esi,0xc922ffa0
  404c2c:	js     0x404bbc
  404c2e:	mov    dl,BYTE PTR ds:0xce58722e
  404c34:	les    ecx,FWORD PTR [ecx-0x65b40946]
  404c3a:	adc    esi,DWORD PTR [edi+0x1]
  404c3d:	and    DWORD PTR [ecx+0x21],ebp
  404c40:	xchg   ebx,eax
  404c41:	mov    al,0xf1
  404c43:	sbb    esi,esi
  404c45:	fdivr  st(4),st
  404c47:	pop    ebx
  404c48:	outs   dx,DWORD PTR ds:[esi]
  404c49:	inc    ecx
  404c4a:	arpl   WORD PTR [edx+0x33],di
  404c4d:	xchg   ebp,eax
  404c4e:	leave  
  404c4f:	jns    0x404be2
  404c51:	fimul  DWORD PTR [esi]
  404c53:	pusha  
  404c54:	test   edx,esp
  404c56:	xor    eax,0x581b807f
  404c5b:	xchg   ebx,eax
  404c5c:	out    0x99,al
  404c5e:	and    al,0x59
  404c60:	mov    al,0x6e
  404c62:	(bad)  
  404c63:	aam    0x5c
  404c65:	mov    BYTE PTR [eax],al
  404c67:	sbb    al,BYTE PTR [edi]
  404c69:	sub    dl,bh
  404c6b:	xor    ecx,DWORD PTR [ebp+edi*2+0x30]
  404c6f:	adc    DWORD PTR [edi-0x66],ebx
  404c72:	inc    ecx
  404c73:	daa    
  404c74:	fisttp DWORD PTR [ecx+0x18]
  404c77:	push   esi
  404c78:	mov    dh,0xb0
  404c7a:	lods   eax,DWORD PTR ds:[esi]
  404c7b:	jne    0x404c98
  404c7d:	mov    eax,ds:0x92637c5
  404c82:	xor    ah,BYTE PTR [eax]
  404c84:	pop    ds
  404c85:	fsubr  DWORD PTR [ebx]
  404c87:	scas   al,BYTE PTR es:[edi]
  404c88:	pushf  
  404c89:	mov    ds:0x83623596,eax
  404c8e:	or     ebx,DWORD PTR [ebx-0x67264511]
  404c94:	(bad)  
  404c95:	cmc    
  404c96:	pusha  
  404c97:	dec    ecx
  404c98:	mov    esi,DWORD PTR [edx]
  404c9a:	mov    edi,0xe1f1598b
  404c9f:	jno    0x404cac
  404ca1:	(bad)  
  404ca2:	xchg   edx,eax
  404ca3:	std    
  404ca4:	daa    
  404ca5:	inc    ebx
  404ca6:	ins    BYTE PTR es:[edi],dx
  404ca7:	push   0x92b11764
  404cac:	add    bh,bh
  404cae:	retf   
  404caf:	das    
  404cb0:	icebp  
  404cb1:	cmc    
  404cb2:	sub    al,0xcc
  404cb4:	ds ret 0x6510
  404cb8:	sbb    bl,BYTE PTR [ebp+0x7a]
  404cbb:	mov    ah,0x87
  404cbd:	push   DWORD PTR [edx-0x4ec7d597]
  404cc3:	ds jnp 0x404d35
  404cc6:	les    esp,FWORD PTR [esi]
  404cc8:	mov    edi,edx
  404cca:	lods   eax,DWORD PTR ds:[esi]
  404ccb:	xor    al,0xe6
  404ccd:	sub    BYTE PTR [edi-0x7b],0x1c
  404cd1:	or     eax,0xf09d96a9
  404cd6:	jbe    0x404c95
  404cd8:	stos   DWORD PTR es:[edi],eax
  404cd9:	ret    
  404cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cdb:	lahf   
  404cdc:	or     eax,0x353eaf2a
  404ce1:	mov    ch,0xd
  404ce3:	mov    DWORD PTR [ebx-0x53],esi
  404ce6:	les    ebp,FWORD PTR [ecx+0x564f5120]
  404cec:	dec    ebx
  404ced:	aaa    
  404cee:	retf   0x5533
  404cf1:	popf   
  404cf2:	add    edx,ebx
  404cf4:	jmp    0x444b3bd6
  404cf9:	xor    al,BYTE PTR [ebx-0x789bc534]
  404cff:	popa   
  404d00:	mov    ebx,DWORD PTR [ebx+0x569f2c31]
  404d06:	scas   al,BYTE PTR es:[edi]
  404d07:	hlt    
  404d08:	jecxz  0x404cd5
  404d0a:	jae    0x404d08
  404d0c:	mov    bh,0xe1
  404d0e:	xor    edx,DWORD PTR [ebx]
  404d10:	mov    eax,ds:0x7cd6fb3b
  404d15:	daa    
  404d16:	xchg   ebx,eax
  404d17:	loopne 0x404cfe
  404d19:	jecxz  0x404d78
  404d1b:	dec    esi
  404d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d1d:	cmp    al,0xbe
  404d1f:	pop    edx
  404d20:	pop    esi
  404d21:	jmp    0x404cbf
  404d23:	gs push edx
  404d25:	adc    BYTE PTR [edx+0x18],dh
  404d28:	mov    bh,0x84
  404d2a:	xchg   esi,eax
  404d2b:	push   ebp
  404d2c:	mov    dh,0xa2
  404d2e:	imul   BYTE PTR [eax+ecx*1]
  404d31:	mov    bh,0x97
  404d33:	(bad)  
  404d34:	cs popf 
  404d36:	fld    DWORD PTR [ebp+edx*2+0x1bff4540]
  404d3d:	call   0x6099:0xc590d31a
  404d44:	cdq    
  404d45:	es into 
  404d47:	fcom   QWORD PTR [ebp-0x61127213]
  404d4d:	and    dh,BYTE PTR [eax-0x4a]
  404d50:	mov    al,ds:0x5f7cfe5c
  404d55:	adc    ah,BYTE PTR [ecx+0x27]
  404d58:	test   eax,0xcb8de107
  404d5d:	add    cl,BYTE PTR [ebx]
  404d5f:	in     eax,dx
  404d60:	loope  0x404d1c
  404d62:	add    esp,DWORD PTR [edx-0x1a14c164]
  404d68:	xchg   esp,eax
  404d69:	aas    
  404d6a:	leave  
  404d6b:	pop    es
  404d6c:	(bad)  
  404d6d:	sbb    BYTE PTR [ebp-0x72],dh
  404d70:	int    0x21
  404d72:	and    eax,DWORD PTR [edx-0x51]
  404d75:	cld    
  404d76:	in     al,0x6b
  404d78:	es mov esi,0x5056976
  404d7e:	cli    
  404d7f:	rcl    DWORD PTR [eax-0x18],0x7b
  404d83:	int3   
  404d84:	xchg   edx,eax
  404d85:	push   edi
  404d86:	mov    ss,WORD PTR [edi-0x47]
  404d89:	mov    eax,ds:0x5a14697b
  404d8e:	pop    edx
  404d8f:	inc    eax
  404d90:	xor    ecx,esp
  404d92:	xchg   bl,dh
  404d94:	fist   DWORD PTR [ecx+ebp*8]
  404d97:	rcr    BYTE PTR [esi],cl
  404d99:	sbb    ecx,DWORD PTR [ebx+0x33e01f5c]
  404d9f:	ins    BYTE PTR es:[edi],dx
  404da0:	daa    
  404da1:	cdq    
  404da2:	mov    ecx,0xf02da83e
  404da7:	jmp    0x404db2
  404da9:	in     eax,0xdc
  404dab:	sbb    BYTE PTR [edx],0xc7
  404dae:	out    dx,al
  404daf:	invd   
  404db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404db2:	call   0x4193b109
  404db7:	setp   BYTE PTR [ebp+edi*2+0x5f]
  404dbc:	mov    cl,0xa9
  404dbe:	mov    dh,0x6c
  404dc0:	out    dx,al
  404dc1:	call   0xbbca:0xdfbe5f6a
  404dc8:	pop    ebp
  404dc9:	xchg   edi,eax
  404dca:	and    al,0xd7
  404dcc:	dec    ebx
  404dcd:	mov    ebx,0x472078d
  404dd2:	dec    esi
  404dd3:	ins    BYTE PTR es:[edi],dx
  404dd4:	rol    bl,cl
  404dd6:	stos   DWORD PTR es:[edi],eax
  404dd7:	pusha  
  404dd8:	out    0x69,eax
  404dda:	out    0x8c,al
  404ddc:	stc    
  404ddd:	add    al,0xc7
  404ddf:	shr    DWORD PTR [ecx+0x31],1
  404de2:	cli    
  404de3:	popa   
  404de4:	and    al,0xf3
  404de6:	out    0x26,eax
  404de8:	mov    ds:0x337c15bb,eax
  404ded:	(bad)  
  404dee:	retf   0x631a
  404df1:	mov    edx,DWORD PTR [edi+edx*8-0x238d85fe]
  404df8:	pop    ebx
  404df9:	daa    
  404dfa:	xchg   ebx,eax
  404dfb:	xor    eax,0x7bc40c32
  404e00:	aam    0x49
  404e02:	test   eax,0xfbad9de3
  404e07:	or     BYTE PTR [edi-0x59],dh
  404e0a:	jge    0x404e3c
  404e0c:	jle    0x404dd4
  404e0e:	stos   BYTE PTR es:[edi],al
  404e0f:	push   esi
  404e10:	test   al,0xa
  404e12:	sub    ebx,DWORD PTR [ebx-0x34c070da]
  404e18:	add    BYTE PTR ds:0x4e0445d6,al
  404e1e:	mov    al,ds:0xfb20d842
  404e23:	xor    eax,0xb7462ef3
  404e28:	pop    eax
  404e29:	add    DWORD PTR [edx-0x3bbacc07],esp
  404e2f:	popf   
  404e30:	call   0x33bf1d5
  404e35:	and    ebx,esp
  404e37:	jb     0x404df5
  404e39:	inc    ebx
  404e3a:	pop    esp
  404e3b:	sbb    edi,eax
  404e3d:	cmp    edi,DWORD PTR [esi+0x4c]
  404e40:	cmp    cl,BYTE PTR [eax+0x6b]
  404e43:	push   cs
  404e44:	lea    edi,fs:[edx-0xe6281a9]
  404e4b:	jnp    0x404df7
  404e4d:	iret   
  404e4e:	dec    edx
  404e4f:	dec    edx
  404e50:	jmp    0x1a74:0x3b9e5c2c
  404e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e58:	iret   
  404e59:	in     al,0xf2
  404e5b:	rcr    DWORD PTR [ebp+0x11a8b3b8],0xaa
  404e62:	and    dl,BYTE PTR [ebx+0x63]
  404e65:	pop    ecx
  404e66:	xchg   esi,eax
  404e67:	sub    bl,BYTE PTR [ebp+0x715c2eb8]
  404e6d:	stos   DWORD PTR es:[edi],eax
  404e6e:	in     al,0x2f
  404e70:	imul   ebp,DWORD PTR [ecx+0x39e1d26c],0xa6849a50
  404e7a:	into   
  404e7b:	jmp    0x5678061d
  404e80:	pop    es
  404e81:	pop    ebx
  404e82:	and    eax,0x4e9017f4
  404e87:	loop   0x404e1f
  404e89:	test   eax,0x36864916
  404e8e:	jb     0x404e79
  404e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e91:	pop    esi
  404e92:	mov    esi,0x108ab1a7
  404e97:	pop    ss
  404e98:	out    dx,al
  404e99:	jnp    0x404ee8
  404e9b:	out    dx,eax
  404e9c:	test   ch,0xfb
  404e9f:	shl    BYTE PTR [ecx-0x5dad92b],0x44
  404ea6:	mov    ecx,0xfe3374bd
  404eab:	pop    eax
  404eac:	js     0x404f23
  404eae:	fcomp  QWORD PTR [esi]
  404eb0:	jb     0x404efb
  404eb2:	mov    eax,ecx
  404eb4:	stos   BYTE PTR es:[edi],al
  404eb5:	xchg   esp,eax
  404eb6:	pop    eax
  404eb7:	mov    edx,0xc6af9363
  404ebc:	out    dx,eax
  404ebd:	jne    0x404ea5
  404ebf:	popf   
  404ec0:	fs push es
  404ec2:	lock mov bl,0x85
  404ec5:	fs scas eax,DWORD PTR es:[edi]
  404ec7:	adc    dh,dh
  404ec9:	enter  0x51e2,0x5a
  404ecd:	push   ebp
  404ece:	and    eax,0x100bb435
  404ed3:	add    DWORD PTR [edi],0xffffffac
  404ed6:	scas   eax,DWORD PTR es:[edi]
  404ed7:	fist   DWORD PTR [ebx+0x12]
  404eda:	ins    BYTE PTR es:[edi],dx
  404edb:	adc    esi,DWORD PTR [ecx+ecx*2]
  404ede:	mov    ecx,DWORD PTR [ebx]
  404ee0:	dec    esp
  404ee1:	fbld   TBYTE PTR [ebp+0x10f1c5a2]
  404ee7:	xchg   ebx,eax
  404ee8:	sahf   
  404ee9:	jg     0x404e7b
  404eeb:	sbb    eax,0x5d7eb15f
  404ef0:	rcr    BYTE PTR [esp+eax*4-0x79],cl
  404ef4:	cmp    ebx,eax
  404ef6:	(bad)  
  404ef7:	fsubr  QWORD PTR [ebp-0x7838a3ca]
  404efd:	jae    0x404f26
  404eff:	jge    0x404f52
  404f01:	aas    
  404f02:	les    edx,FWORD PTR [esi+0x2b8b0c7f]
  404f08:	jae    0x404f7e
  404f0a:	test   DWORD PTR [ecx],eax
  404f0c:	push   cs
  404f0d:	dec    edi
  404f0e:	dec    ebx
  404f0f:	mov    cl,0x84
  404f11:	inc    ebx
  404f12:	out    dx,eax
  404f13:	mov    ds:0x1882aa0b,eax
  404f18:	ror    bh,cl
  404f1a:	retf   
  404f1b:	sub    eax,0x729b88f2
  404f20:	or     BYTE PTR [eax+ecx*8+0x7c3d2eb5],ah
  404f27:	pusha  
  404f28:	pop    es
  404f29:	add    ch,BYTE PTR [eax+eiz*1-0x7b]
  404f2d:	push   ecx
  404f2e:	xor    eax,0x9975ef5e
  404f33:	cmp    eax,0x7f348a52
  404f38:	mov    dl,dl
  404f3a:	popa   
  404f3b:	jp     0x404f4d
  404f3d:	jg     0x404f19
  404f3f:	scas   eax,DWORD PTR es:[edi]
  404f40:	or     eax,0xbe9b2e31
  404f45:	cmp    al,0x68
  404f47:	mov    esi,0x7c29e514
  404f4c:	jno    0x404f2b
  404f4e:	cmp    BYTE PTR [edi],al
  404f50:	mov    edx,0x78802a17
  404f55:	dec    eax
  404f56:	jnp    0x404f0d
  404f58:	dec    eax
  404f59:	call   0x61454722
  404f5e:	mov    BYTE PTR [edi+eax*1-0x3],cl
  404f62:	imul   edx,DWORD PTR [eax+0x4bb49ad2],0x28d57d95
  404f6c:	fst    QWORD PTR [edx]
  404f6e:	popa   
  404f6f:	(bad)  
  404f70:	mov    esp,0x955f91e2
  404f75:	xchg   DWORD PTR [ecx+esi*2-0x5da70d1c],eax
  404f7c:	mov    ch,0x3e
  404f7e:	enter  0xdf00,0x72
  404f82:	adc    eax,0xcd6f0084
  404f87:	retf   0x6c3c
  404f8a:	call   FWORD PTR [ecx-0xf]
  404f8d:	add    ebx,0xf13df78f
  404f93:	jmp    0x2250aec4
  404f98:	pop    ecx
  404f99:	push   es
  404f9a:	fisub  DWORD PTR [esi+0x6471b354]
  404fa0:	aad    0xe6
  404fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fa3:	add    al,0x1a
  404fa5:	jmp    DWORD PTR [ebx]
  404fa7:	das    
  404fa8:	sbb    DWORD PTR [edi+ecx*1+0x40],esi
  404fac:	dec    eax
  404fad:	cmp    BYTE PTR [ebx+ebx*4],ah
  404fb0:	adc    al,0x57
  404fb2:	out    0x8a,eax
  404fb4:	push   ebp
  404fb5:	pop    eax
  404fb6:	mov    ds:0xd5f1ce75,al
  404fbb:	sbb    ebx,DWORD PTR [edx-0x45]
  404fbe:	cmp    ch,ah
  404fc0:	cmp    BYTE PTR [edi],cl
  404fc2:	inc    ebx
  404fc3:	dec    eax
  404fc4:	or     eax,0x8d8e764
  404fc9:	mov    al,ds:0xe38827c4
  404fce:	cdq    
  404fcf:	pop    eax
  404fd0:	mov    eax,ds:0x55b67924
  404fd5:	xchg   ebx,eax
  404fd6:	cmp    bl,cl
  404fd8:	retf   0x7116
  404fdb:	xor    BYTE PTR [ecx],0x16
  404fde:	fisub  DWORD PTR [esp+esi*4-0x622628c6]
  404fe5:	out    0x11,eax
  404fe7:	cdq    
  404fe8:	cmp    al,0xae
  404fea:	int    0xa5
  404fec:	sub    al,0x52
  404fee:	mov    ecx,0x7062ddd4
  404ff3:	fisttp DWORD PTR fs:[edi+0x7a4673c7]
  404ffa:	icebp  
  404ffb:	rol    ebp,cl
  404ffd:	xchg   esp,eax
  404ffe:	pop    ebp
  404fff:	cmp    cl,BYTE PTR [edx]
  405001:	cmp    eax,0x3189d43e
  405006:	ds or  eax,eax
  405009:	mov    WORD PTR [ebx],?
  40500b:	xchg   esi,eax
  40500c:	inc    edx
  40500d:	jl     0x404fb3
  40500f:	xchg   ecx,eax
  405010:	inc    esi
  405011:	push   cs
  405012:	in     al,0xeb
  405014:	bnd jnp 0x404fc5
  405017:	call   0x8406:0xf159486a
  40501e:	jecxz  0x404fa6
  405020:	add    eax,0x4cb8c21a
  405025:	cmp    eax,0x8f2a1b7d
  40502a:	xchg   ebp,eax
  40502b:	mov    edi,DWORD PTR [eax-0x66523a49]
  405031:	das    
  405032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405033:	std    
  405034:	addr16 fs loope 0x405047
  405038:	inc    ebp
  405039:	push   edi
  40503a:	fistp  WORD PTR [ecx+esi*1+0x4d]
  40503e:	mov    BYTE PTR [esi],dl
  405040:	ins    DWORD PTR es:[edi],dx
  405041:	in     eax,dx
  405042:	xchg   edx,eax
  405043:	(bad)  
  405044:	in     al,dx
  405045:	or     DWORD PTR [edx+0x7a],esi
  405048:	mov    ebx,0xafe3fc43
  40504d:	aam    0x21
  40504f:	inc    edx
  405050:	retf   
  405051:	mov    eax,cs:0xd7382a55
  405057:	adc    eax,0xd90c1bc8
  40505c:	test   bl,0x8c
  40505f:	mov    DWORD PTR [esi-0x4b],0xaa10cb6
  405066:	inc    ebp
  405067:	mov    bh,0x47
  405069:	cs xchg esp,eax
  40506b:	enter  0xc63e,0xf8
  40506f:	jmp    0xdd76:0x984948e1
  405076:	dec    eax
  405077:	mov    DWORD PTR [ecx+0x3a],ebx
  40507a:	xchg   ecx,eax
  40507b:	and    BYTE PTR [eax],cl
  40507d:	push   cs
  40507e:	ins    BYTE PTR es:[edi],dx
  40507f:	or     cl,al
  405081:	sub    DWORD PTR [ebp+eax*4+0x5a19078a],ebx
  405088:	cmp    edi,DWORD PTR [ecx-0x70b470f8]
  40508e:	(bad)  
  40508f:	xor    ebp,ecx
  405091:	shl    DWORD PTR [esi+0x1],1
  405094:	out    dx,al
  405095:	int3   
  405096:	adc    cl,BYTE PTR [edx]
  405098:	pop    ds
  405099:	stos   DWORD PTR es:[edi],eax
  40509a:	mov    esi,DWORD PTR [edx+0x57570609]
  4050a0:	loopne 0x4050cf
  4050a2:	jb     0x4050dd
  4050a4:	mov    dl,0x80
  4050a6:	arpl   WORD PTR [ebx+0x5d],ax
  4050a9:	cmp    esp,DWORD PTR [ecx+ebx*4+0x377ac736]
  4050b0:	aas    
  4050b1:	(bad)  
  4050b2:	pop    ds
  4050b3:	and    esi,0x36
  4050b6:	xor    eax,0x21c0afe8
  4050bb:	idiv   BYTE PTR [edx]
  4050bd:	fwait
  4050be:	lods   al,BYTE PTR ds:[esi]
  4050bf:	addr16 xor eax,0x5136c19c
  4050c5:	xor    dh,0xd1
  4050c8:	sbb    BYTE PTR [esi+0x3d1f56d1],al
  4050ce:	lea    edx,[edi-0x70]
  4050d1:	xor    esp,DWORD PTR [ecx]
  4050d3:	jge    0x405088
  4050d5:	out    0x72,al
  4050d7:	mov    cl,0x42
  4050d9:	sub    BYTE PTR [esp+edx*8],bl
  4050dc:	push   edx
  4050dd:	sub    BYTE PTR [edi-0x7b],bh
  4050e0:	push   esi
  4050e1:	jp     0x405146
  4050e3:	cld    
  4050e4:	jg     0x405145
  4050e6:	pop    ds
  4050e7:	xlat   BYTE PTR ds:[ebx]
  4050e8:	mov    DWORD PTR [ecx-0x6335d82b],edi
  4050ee:	mov    edi,0x17382414
  4050f3:	pop    eax
  4050f4:	jnp    0x4050cf
  4050f6:	xor    BYTE PTR [edi-0x4b],ah
  4050f9:	sbb    esi,DWORD PTR [ecx+0x5c8450b1]
  4050ff:	ins    BYTE PTR es:[edi],dx
  405100:	fild   DWORD PTR [ebp+0x709043a8]
  405106:	test   eax,0x425cc988
  40510b:	mul    ebp
  40510d:	into   
  40510e:	add    eax,0xa777811e
  405113:	push   esi
  405114:	cld    
  405115:	call   0x73a06a27
  40511a:	xchg   edx,eax
  40511b:	ret    
  40511c:	push   cs
  40511d:	fistp  DWORD PTR [ecx+ebx*8]
  405120:	addr16 (bad) 
  405122:	call   0xe78c5d91
  405127:	test   BYTE PTR [esp+eax*1+0x1f],bl
  40512b:	aas    
  40512c:	pop    ebx
  40512d:	out    0xb8,eax
  40512f:	ss sub eax,0x5bac1f94
  405135:	push   ds
  405136:	or     eax,0xcd6663cb
  40513b:	push   ebx
  40513c:	mov    BYTE PTR [edx],cl
  40513e:	je     0x40513e
  405140:	rcl    DWORD PTR [ebp-0x18],1
  405143:	pop    ss
  405144:	popa   
  405145:	push   ds
  405146:	xor    DWORD PTR [eax+0x4c],ebp
  405149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40514a:	xchg   edi,eax
  40514b:	in     eax,0x15
  40514d:	cwde   
  40514e:	jmp    0x4050f2
  405150:	(bad)  
  405151:	cmp    DWORD PTR [ebp-0x75fdb8a6],ecx
  405157:	repz je 0x405139
  40515a:	mov    ebp,0xc5993893
  40515f:	inc    eax
  405160:	push   ecx
  405161:	mov    eax,ds:0x507c622f
  405166:	mov    cl,0x25
  405168:	or     al,0xe3
  40516a:	xor    ebx,DWORD PTR [ebp+edi*8+0xaaa1a78]
  405171:	pop    es
  405172:	arpl   WORD PTR [esp+eax*2-0x238d05d0],bx
  405179:	leave  
  40517a:	mov    bh,0xac
  40517c:	in     al,dx
  40517d:	pop    ecx
  40517e:	jmp    0x836169d6
  405183:	push   ds
  405184:	cmp    DWORD PTR [ecx+0x65],esp
  405187:	or     eax,0x35f168b2
  40518c:	or     al,0xab
  40518e:	lds    esi,FWORD PTR [ebp-0x4d]
  405191:	loop   0x405141
  405193:	in     eax,dx
  405194:	push   edi
  405195:	dec    edx
  405196:	mov    gs,WORD PTR [edi-0x2b]
  405199:	nop
  40519a:	mov    ah,0x60
  40519c:	ror    BYTE PTR [edi-0x45],cl
  40519f:	sti    
  4051a0:	jmp    0x1831:0x5d8b2488
  4051a7:	jae    0x405166
  4051a9:	jle    0x405139
  4051ab:	cmp    al,0xa5
  4051ad:	sub    al,0x64
  4051b0:	retf   
  4051b1:	enter  0xcffb,0xb0
  4051b5:	and    DWORD PTR [edx-0x544858d2],edi
  4051bb:	xchg   ecx,eax
  4051bc:	dec    ecx
  4051bd:	pop    edx
  4051be:	lea    ebx,[ecx]
  4051c0:	in     al,0x6c
  4051c2:	mov    ch,0xd8
  4051c4:	sub    DWORD PTR [ebp+0x47],edi
  4051c7:	data16 xor BYTE PTR [ecx-0x332342f8],ah
  4051ce:	popa   
  4051cf:	adc    BYTE PTR [edi+0x43630976],ah
  4051d5:	imul   ebx,DWORD PTR [edx-0x16],0x7
  4051d9:	frstor [esp+esi*4]
  4051dc:	jp     0x405250
  4051de:	jmp    0x4051ec
  4051e0:	cli    
  4051e1:	sub    eax,0xbd72992e
  4051e6:	arpl   WORD PTR [edi+0x2a00625c],si
  4051ec:	stc    
  4051ed:	adc    eax,0x82d76dab
  4051f2:	dec    esi
  4051f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f4:	jle    0x405216
  4051f6:	rcpps  xmm5,XMMWORD PTR [esi-0x4906d3a9]
  4051fd:	xchg   edi,eax
  4051fe:	lods   al,BYTE PTR ds:[esi]
  4051ff:	push   cs
  405200:	xchg   esi,eax
  405201:	and    edi,ebx
  405203:	in     eax,0x9c
  405205:	push   ecx
  405206:	jmp    0x4051c2
  405208:	and    eax,0xb047727f
  40520d:	xchg   esp,eax
  40520e:	loope  0x4051ae
  405210:	test   DWORD PTR [eax-0x49],0x692b1a28
  405217:	cmp    bl,al
  405219:	ins    BYTE PTR es:[edi],dx
  40521a:	sbb    DWORD PTR [ebp-0xa],esi
  40521d:	push   ebx
  40521e:	mov    edx,0x33d2ea1e
  405223:	ret    
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0xb9fb94ee
  405804:	or     BYTE PTR [esi-0x20],bh
  405807:	pop    edi
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	stos   BYTE PTR es:[edi],al
  40580f:	sti    
  405810:	pop    ecx
  405811:	add    BYTE PTR [ebp-0x12],ch
  405814:	loop   0x405814
  405816:	dec    edi
  405817:	sbb    bl,ch
  405819:	popf   
  40581a:	ja     0x4057d5
  40581c:	dec    ecx
  40581d:	aad    0x83
  40581f:	jb     0x405887
  405821:	pop    esp
  405822:	hlt    
  405823:	cli    
  405824:	daa    
  405825:	lea    ecx,[edi+0x54]
  405828:	add    dh,al
  40582a:	or     esi,0xfffffff9
  40582d:	or     ah,BYTE PTR [ecx+0x25373b22]
  405833:	lods   eax,DWORD PTR ds:[esi]
  405834:	stos   BYTE PTR es:[edi],al
  405835:	js     0x4057fa
  405837:	mov    dh,0x4c
  405839:	data16 ror BYTE PTR [edx+0x4c0e39d8],0x93
  405841:	mov    ecx,0x415df61d
  405846:	mov    bl,0x1c
  405848:	test   DWORD PTR [esi+0x31c30597],ecx
  40584e:	das    
  40584f:	fisub  DWORD PTR [ebx-0x2]
  405852:	and    cl,BYTE PTR [esi+0x3067e2cf]
  405858:	dec    edi
  405859:	mov    ch,0x10
  40585b:	loope  0x405833
  40585d:	pop    ecx
  40585e:	jb     0x405823
  405860:	inc    ebp
  405861:	pop    edi
  405862:	sub    BYTE PTR [ecx-0x14c2dfd4],bl
  405868:	sub    eax,0x198f136a
  40586d:	aam    0xf3
  40586f:	xlat   BYTE PTR ds:[ebx]
  405870:	fsub   QWORD PTR [esi+0x1b1bafff]
  405876:	pop    ebp
  405877:	ds call 0x16d9d525
  40587d:	cld    
  40587e:	aaa    
  40587f:	inc    bh
  405881:	xor    esp,DWORD PTR [edi]
  405883:	or     esp,DWORD PTR [ebp+0x89035dc]
  405889:	xor    eax,0x3941d58c
  40588e:	xor    ecx,ebx
  405890:	pop    es
  405891:	jle    0x4058e1
  405893:	jp     0x40588a
  405895:	clc    
  405896:	sbb    al,0xd0
  405898:	pop    edi
  405899:	retf   0x9d3b
  40589c:	mov    al,0x67
  40589e:	inc    ebp
  40589f:	out    dx,eax
  4058a0:	repz shr esp,1
  4058a3:	stos   BYTE PTR es:[edi],al
  4058a4:	jle    0x4058d7
  4058a6:	push   ss
  4058a7:	cmp    eax,0x77721e3c
  4058ac:	xchg   eax,edx
  4058ae:	cli    
  4058af:	mov    ds:0x48834f2c,al
  4058b4:	das    
  4058b5:	push   edx
  4058b6:	outs   dx,DWORD PTR ds:[esi]
  4058b7:	xor    edx,esp
  4058b9:	in     al,dx
  4058ba:	(bad)  
  4058bb:	adc    al,0xdb
  4058bd:	dec    eax
  4058be:	and    BYTE PTR [edx],bh
  4058c0:	jge    0x405906
  4058c2:	ins    DWORD PTR es:[edi],dx
  4058c3:	mov    dl,0xcb
  4058c5:	mov    bh,0xf4
  4058c7:	fwait
  4058c8:	aas    
  4058c9:	mov    bl,0x8b
  4058cb:	enter  0x72c,0xcf
  4058cf:	pop    ss
  4058d0:	mov    ecx,0x6b0ad156
  4058d5:	mov    ebp,0x6ec2b625
  4058da:	dec    esi
  4058db:	gs sbb eax,0x31fc8650
  4058e1:	out    0x9d,eax
  4058e3:	jle    0x405888
  4058e5:	xor    eax,0xd068c7be
  4058ea:	int3   
  4058eb:	sub    al,0x71
  4058ed:	daa    
  4058ee:	loopne 0x4058f7
  4058f0:	leave  
  4058f1:	push   edi
  4058f2:	lea    esp,[eax-0x45]
  4058f5:	sub    al,0xa2
  4058f7:	xchg   ebp,eax
  4058f8:	mov    eax,edx
  4058fa:	rol    ebp,cl
  4058fc:	leave  
  4058fd:	fld    QWORD PTR [ecx]
  4058ff:	(bad)  
  405901:	mov    ecx,0x321b66d0
  405906:	jmp    0xd107:0x9ef00743
  40590d:	xlat   BYTE PTR ds:[ebx]
  40590e:	(bad)  
  405910:	mov    ebx,0x1fed623b
  405915:	je     0x4058ee
  405917:	inc    edi
  405918:	call   edx
  40591a:	or     eax,0x994d84ba
  40591f:	cwde   
  405920:	jl     0x4058f6
  405922:	mov    ecx,0x6b7185a0
  405927:	sar    BYTE PTR [ebp+0x5a9af6b2],0x62
  40592e:	outs   dx,BYTE PTR ds:[esi]
  40592f:	sbb    al,0xe2
  405931:	inc    edx
  405932:	mov    esi,0xa05905a6
  405937:	cdq    
  405938:	mov    edi,0xcaeca8d2
  40593d:	xchg   ecx,eax
  40593e:	shl    DWORD PTR [ebp+0x650279f5],0xd8
  405945:	out    dx,eax
  405946:	push   0x75727b75
  40594b:	add    al,0xf1
  40594d:	sub    al,0xd8
  40594f:	mov    BYTE PTR [edi+0x18],al
  405952:	mov    ds:0xe79d025f,eax
  405957:	div    BYTE PTR [edx]
  405959:	dec    ebx
  40595a:	loope  0x40591b
  40595c:	xchg   edx,eax
  40595d:	pop    ss
  40595e:	push   0x51433960
  405963:	jmp    0xcaf79d24
  405968:	sub    BYTE PTR [eax+0x5df6ce2],al
  40596e:	jmp    0xa288:0x1fe98bb6
  405975:	rcr    BYTE PTR [eax+eiz*1-0x5d0e0dc7],cl
  40597c:	inc    esp
  40597d:	cmc    
  40597e:	adc    cl,0x9b
  405981:	sahf   
  405982:	imul   DWORD PTR [esi+0x15]
  405985:	loope  0x4059d4
  405987:	sbb    al,0xa2
  405989:	aaa    
  40598a:	sbb    al,BYTE PTR [ecx]
  40598c:	dec    edx
  40598d:	push   0xf31f5ef5
  405992:	repnz sbb DWORD PTR [ebp+0x0],esi
  405996:	pop    ecx
  405997:	call   0x3ec7:0x674404f7
  40599e:	pop    ss
  40599f:	xchg   edi,eax
  4059a0:	retf   0xc578
  4059a3:	push   es
  4059a4:	mov    dh,0xe4
  4059a6:	lods   al,BYTE PTR ds:[esi]
  4059a7:	(bad)  
  4059a8:	jmp    0x7a3a72c
  4059ad:	sbb    edx,esi
  4059af:	daa    
  4059b0:	clc    
  4059b1:	outs   dx,DWORD PTR ds:[esi]
  4059b2:	mov    dh,ah
  4059b4:	mov    edi,ebp
  4059b6:	leave  
  4059b7:	jo     0x405a13
  4059b9:	xchg   edi,eax
  4059ba:	in     al,0x75
  4059bc:	stc    
  4059bd:	int    0x88
  4059bf:	push   ds
  4059c0:	popa   
  4059c1:	and    BYTE PTR ds:0xdc3f4ae1,cl
  4059c7:	xlat   BYTE PTR ds:[ebx]
  4059c8:	jl     0x4059e7
  4059ca:	in     eax,dx
  4059cb:	jmp    0x405956
  4059cd:	sub    esp,DWORD PTR [edi]
  4059cf:	mov    dl,0x9d
  4059d1:	ja     0x405965
  4059d3:	in     al,0xea
  4059d5:	aas    
  4059d6:	stc    
  4059d7:	mov    al,ds:0x6adb6c81
  4059dc:	jl     0x405a5c
  4059de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059df:	xchg   esp,eax
  4059e0:	das    
  4059e1:	scas   eax,DWORD PTR es:[edi]
  4059e2:	jmp    0x405968
  4059e4:	sbb    dh,cl
  4059e6:	lods   eax,DWORD PTR ds:[esi]
  4059e7:	mov    ebx,DWORD PTR [edx+0x2c]
  4059ea:	sahf   
  4059eb:	lods   eax,DWORD PTR ds:[esi]
  4059ec:	mov    WORD PTR [ebx+0x67],es
  4059ef:	xchg   ebp,eax
  4059f0:	jns    0x4059a2
  4059f2:	push   ss
  4059f3:	clc    
  4059f4:	add    al,0x9e
  4059f6:	jb     0x405a28
  4059f8:	popa   
  4059f9:	dec    esp
  4059fa:	pop    edi
  4059fb:	xchg   esp,eax
  4059fc:	icebp  
  4059fd:	sbb    al,0x86
  4059ff:	pop    ebx
  405a00:	mov    ch,0x57
  405a02:	std    
  405a03:	repnz or ebx,ecx
  405a06:	lods   eax,DWORD PTR fs:[esi]
  405a08:	jbe    0x405a7a
  405a0a:	sbb    al,0x41
  405a0c:	and    eax,ecx
  405a0e:	retf   0xe6b0
  405a11:	nop
  405a12:	mov    eax,ds:0x2b1d4a22
  405a17:	dec    edi
  405a18:	xor    ch,BYTE PTR [ebx+ebp*8]
  405a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a1c:	mov    bl,0x94
  405a1e:	or     BYTE PTR [eax-0xa552d58],ch
  405a24:	xor    cl,BYTE PTR [edi+0x210691]
  405a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2b:	test   eax,0x4e7ea4b3
  405a30:	sti    
  405a31:	jo     0x4059f2
  405a33:	xchg   esp,eax
  405a34:	out    dx,al
  405a35:	in     al,0x6a
  405a37:	sub    eax,0x4832a3ea
  405a3c:	xor    al,bh
  405a3e:	test   eax,edx
  405a40:	test   eax,0x9836b4f
  405a45:	stc    
  405a46:	ret    
  405a47:	mov    esi,0x7b6dcb1b
  405a4c:	cdq    
  405a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a4e:	adc    ecx,DWORD PTR [ebp-0x5]
  405a51:	inc    edi
  405a52:	aaa    
  405a53:	adc    al,BYTE PTR [esi-0xe]
  405a56:	mov    WORD PTR [eax+0x49],gs
  405a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a5a:	mov    al,0xf8
  405a5c:	loope  0x405adc
  405a5e:	xchg   esp,eax
  405a5f:	cmp    esi,eax
  405a61:	stos   DWORD PTR es:[edi],eax
  405a62:	bound  ebx,QWORD PTR [eax+0x1a6a547e]
  405a68:	bound  esi,QWORD PTR [edi+0xe]
  405a6b:	xor    al,0x6b
  405a6d:	cmp    ah,BYTE PTR [ecx+0x415bd32b]
  405a73:	mul    dl
  405a75:	push   ecx
  405a76:	cli    
  405a77:	push   ecx
  405a78:	stc    
  405a79:	mov    dl,0xa9
  405a7b:	xchg   esp,eax
  405a7c:	jle    0x405a5a
  405a7e:	ja     0x405a76
  405a80:	ret    0x793c
  405a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a84:	lds    ecx,FWORD PTR [edx+0x15]
  405a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a88:	and    BYTE PTR [eax],al
  405a8a:	ficom  WORD PTR [ebx-0x3d157e8a]
  405a90:	popa   
  405a91:	adc    DWORD PTR [edi],esi
  405a93:	and    al,0x21
  405a95:	ror    DWORD PTR [esi-0x1fb7dd14],0x5a
  405a9c:	push   ss
  405a9d:	mov    gs,WORD PTR [esi]
  405a9f:	pop    ds
  405aa0:	mov    dh,0x6e
  405aa2:	imul   ebx,ebx,0xffffffa2
  405aa5:	cld    
  405aa6:	in     al,dx
  405aa7:	out    dx,al
  405aa8:	inc    edx
  405aa9:	mov    ecx,0xe275ad5e
  405aae:	and    BYTE PTR [ebx],0x44
  405ab1:	xor    edi,ebp
  405ab3:	add    DWORD PTR [ebx+0x296f12b8],ebx
  405ab9:	shr    BYTE PTR [ebp-0x138144f9],0x74
  405ac0:	ds out 0x99,eax
  405ac3:	mov    cl,0xed
  405ac5:	push   es
  405ac6:	es (bad) 
  405ac8:	cmp    ecx,DWORD PTR ss:[ebp+ebx*4+0x75b04e]
  405ad0:	(bad)  
  405ad1:	jg     0x405b41
  405ad3:	aaa    
  405ad4:	mov    DWORD PTR [eax+0x6a52b2e1],0x5db981b8
  405ade:	add    ch,BYTE PTR [ebp-0x67]
  405ae1:	cmp    ebx,DWORD PTR [esi-0x7e7a81c]
  405ae7:	and    DWORD PTR [ebp+esi*2-0x5ba4b9ed],ebp
  405aee:	(bad)  
  405af0:	mov    ds:0x58c176a9,eax
  405af5:	and    edi,DWORD PTR [edx+0x55]
  405af8:	cmp    DWORD PTR [esi-0x71f525c2],esi
  405afe:	adc    eax,DWORD PTR [edi-0x6a55fd17]
  405b04:	pop    ds
  405b05:	sub    DWORD PTR [ebp-0x69159e72],eax
  405b0b:	and    eax,0x3c0dc0a9
  405b10:	ja     0x405a97
  405b12:	xor    edi,DWORD PTR [ecx-0x1f]
  405b15:	test   BYTE PTR [edx],al
  405b17:	fnstenv [esi-0x5416c882]
  405b1d:	dec    esi
  405b1e:	sbb    al,0xd4
  405b20:	retf   
  405b21:	rcr    cl,0xa3
  405b24:	cmp    ah,BYTE PTR [ebx]
  405b26:	imul   ecx,DWORD PTR [esi+0x17365d9e],0x46
  405b2d:	test   eax,0x58b8c966
  405b32:	xchg   BYTE PTR [eax+edi*4+0x5c],dh
  405b36:	retf   
  405b37:	push   esi
  405b38:	loop   0x405b48
  405b3a:	mov    bl,0xfa
  405b3c:	and    eax,0x612da6cc
  405b41:	push   esi
  405b42:	repnz stos DWORD PTR es:[edi],eax
  405b44:	imul   ebp,DWORD PTR [edx+0x458df324],0x682f8349
  405b4e:	loop   0x405ba7
  405b50:	aad    0x3
  405b52:	cmp    BYTE PTR [edx],0x2e
  405b55:	ins    DWORD PTR es:[edi],dx
  405b56:	pop    esp
  405b57:	inc    ebp
  405b58:	rcl    al,cl
  405b5a:	sub    DWORD PTR [ecx+0x2f],esi
  405b5d:	add    bl,BYTE PTR [ecx+0x3e]
  405b60:	cld    
  405b61:	pop    ebp
  405b62:	scas   eax,DWORD PTR es:[edi]
  405b63:	loopne 0x405b50
  405b65:	aam    0x2c
  405b67:	mov    ds,WORD PTR [ebx+0x5a]
  405b6a:	inc    ecx
  405b6b:	cmc    
  405b6c:	add    BYTE PTR [esi],dh
  405b6e:	pop    ds
  405b6f:	xchg   esp,eax
  405b70:	sub    DWORD PTR [edx-0x3e886b03],eax
  405b76:	call   0xb91e6596
  405b7b:	xor    ch,BYTE PTR cs:[ecx+0x6e]
  405b7f:	imul   BYTE PTR [ecx-0x434f3a85]
  405b85:	gs out 0x14,eax
  405b88:	cmp    al,0xc6
  405b8a:	out    0x4e,al
  405b8c:	pushf  
  405b8d:	js     0x405b43
  405b8f:	mov    bh,0xc8
  405b91:	(bad)  
  405b92:	or     eax,0x1d44f8a8
  405b97:	push   0xfffffff1
  405b99:	cdq    
  405b9a:	cmp    al,0x99
  405b9c:	push   esi
  405b9d:	xor    BYTE PTR ss:[ebx+0x29ae4d90],ah
  405ba4:	jecxz  0x405bea
  405ba6:	(bad)  
  405ba7:	fs add ecx,esp
  405baa:	jmp    0x6e80:0xe38dc27d
  405bb1:	cmp    eax,DWORD PTR [esi]
  405bb3:	out    dx,eax
  405bb4:	and    bl,cl
  405bb6:	ja     0x405b5e
  405bb8:	ret    
  405bb9:	je     0x405b4d
  405bbb:	ja     0x405bd7
  405bbd:	sub    bl,BYTE PTR [edi-0x586c0f8f]
  405bc3:	hlt    
  405bc4:	inc    esi
  405bc5:	ret    
  405bc6:	xchg   edx,eax
  405bc7:	clc    
  405bc8:	jmp    0x99fa:0x933f55c5
  405bcf:	sti    
  405bd0:	push   ecx
  405bd1:	cwde   
  405bd2:	jmp    0xc32e:0x5b7e2cf8
  405bd9:	loop   0x405b8c
  405bdb:	imul   esi,DWORD PTR [edi-0x45],0xffffff9a
  405bdf:	jb     0x405bb3
  405be1:	lds    ebp,FWORD PTR [edi+0x22]
  405be4:	daa    
  405be5:	mov    DWORD PTR [ebp-0x8],ebp
  405be8:	cmp    ch,BYTE PTR [esi-0x20e167a6]
  405bee:	xchg   ebx,eax
  405bef:	mov    ds:0x825c7ad9,eax
  405bf4:	es xchg edx,eax
  405bf6:	ficom  DWORD PTR [edx]
  405bf8:	fdiv   st(5),st
  405bfa:	cmp    bl,ch
  405bfc:	ins    BYTE PTR es:[edi],dx
  405bfd:	fidivr WORD PTR [edx-0x54]
  405c00:	xchg   edi,eax
  405c01:	push   eax
  405c02:	mov    al,0x93
  405c04:	push   ebx
  405c05:	mov    ds:0x112cf3d0,al
  405c0a:	jnp    0x405c2a
  405c0c:	clc    
  405c0d:	xchg   esi,eax
  405c0e:	add    al,BYTE PTR [ecx]
  405c10:	mov    BYTE PTR cs:[edi-0x72e5f58c],bh
  405c17:	or     BYTE PTR [ebp+eiz*4+0x2b],al
  405c1b:	in     al,0x11
  405c1d:	fsqrt  
  405c1f:	xor    esp,DWORD PTR [edi]
  405c21:	lods   eax,DWORD PTR ds:[esi]
  405c22:	fist   DWORD PTR [eax]
  405c24:	sub    BYTE PTR [eax+0x6],ah
  405c27:	pop    esi
  405c28:	in     eax,dx
  405c29:	push   esp
  405c2a:	fstp   DWORD PTR ds:0xfbe41459
  405c30:	call   0x23a3936d
  405c35:	dec    esp
  405c36:	loopne 0x405c79
  405c38:	loope  0x405be7
  405c3a:	jmp    0x5d21:0xb435433
  405c41:	push   bp
  405c43:	or     edi,DWORD PTR [edi+0x2800e923]
  405c49:	es (bad) 
  405c4b:	push   edi
  405c4c:	sub    DWORD PTR [eax],esp
  405c4e:	cmp    al,0xdb
  405c50:	mov    bh,0xc1
  405c52:	stos   BYTE PTR es:[edi],al
  405c53:	jmp    0xa4587f21
  405c58:	mov    ebp,0xe4c4c0b1
  405c5d:	pop    edi
  405c5e:	push   cs
  405c5f:	(bad)  
  405c60:	fldcw  WORD PTR [ecx+0xfe1d99c]
  405c66:	push   ebp
  405c67:	test   edx,ecx
  405c69:	addr16 xchg ecx,eax
  405c6b:	xchg   BYTE PTR [ecx+0x542d0829],dl
  405c71:	dec    ecx
  405c72:	out    0x69,al
  405c74:	fs jbe 0x405cb9
  405c77:	das    
  405c78:	xor    al,0x99
  405c7a:	lahf   
  405c7b:	xor    DWORD PTR [edx],ebp
  405c7d:	and    edi,DWORD PTR [esi+eiz*2-0x1b]
  405c81:	je     0x405c13
  405c83:	and    dl,0x1c
  405c86:	jmp    0xe53dcb1d
  405c8b:	fldenv [ebx-0x33d05e3d]
  405c91:	(bad)  
  405c92:	jbe    0x405c95
  405c94:	jbe    0x405cb7
  405c96:	cmp    bl,bl
  405c98:	test   ebp,ebx
  405c9a:	inc    ecx
  405c9b:	pop    esp
  405c9c:	call   0xa2037b2a
  405ca1:	mov    dl,0x5d
  405ca3:	ds iret 
  405ca5:	mov    edx,0xcce0c869
  405caa:	xchg   esp,eax
  405cab:	jmp    0xb6bc:0x20360666
  405cb2:	cmp    edi,DWORD PTR [eax+0x18]
  405cb5:	pop    esi
  405cb6:	push   ss
  405cb7:	cmp    ah,BYTE PTR [edx]
  405cb9:	cmp    al,0xd4
  405cbb:	les    edi,FWORD PTR [eax-0x35dc78e2]
  405cc1:	cmp    edi,edx
  405cc3:	sar    BYTE PTR [edx+0x70e1d573],1
  405cc9:	jo     0x405d24
  405ccb:	mov    eax,0xe97a0ad
  405cd0:	jns    0x405c87
  405cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd3:	(bad)  
  405cd4:	cmp    bh,bl
  405cd6:	and    esp,edi
  405cd8:	sub    bl,BYTE PTR [edx]
  405cda:	shr    BYTE PTR [ebx+0x6f72189f],cl
  405ce0:	cmp    al,0xc4
  405ce2:	dec    ebx
  405ce3:	jns    0x405c69
  405ce5:	mov    ch,0x6d
  405ce7:	test   eax,0xdad39a0c
  405cec:	push   0x42
  405cee:	push   eax
  405cef:	ja     0x405d34
  405cf1:	cmp    BYTE PTR [eax-0x40988b2c],cl
  405cf7:	lods   eax,DWORD PTR ds:[esi]
  405cf8:	jo     0x405cae
  405cfa:	sbb    al,0xb3
  405cfc:	sub    al,0xd1
  405cfe:	rcr    cl,cl
  405d00:	fcmovne st,st(1)
  405d02:	mov    edx,0xe9bd595a
  405d07:	sahf   
  405d08:	inc    ebx
  405d09:	data16 or cl,BYTE PTR [esp+edx*2]
  405d0d:	pushf  
  405d0e:	add    esi,DWORD PTR [edx-0x5375b619]
  405d14:	pushw  ds
  405d16:	jecxz  0x405cb7
  405d18:	dec    eax
  405d19:	in     eax,dx
  405d1a:	mov    ecx,0x76a4a503
  405d1f:	mov    ah,0x8a
  405d21:	inc    esi
  405d22:	sub    edx,DWORD PTR [eax-0x5a]
  405d25:	or     BYTE PTR [ebx-0x4e],dh
  405d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d29:	arpl   WORD PTR [ebp-0x4a37e0f],dx
  405d2f:	jg     0x405ce9
  405d31:	adc    ah,BYTE PTR [esi]
  405d33:	cli    
  405d34:	test   BYTE PTR [edx+esi*2],ah
  405d37:	das    
  405d38:	inc    ebp
  405d39:	lods   al,BYTE PTR ds:[esi]
  405d3a:	mov    ds:0x34d4a8df,al
  405d3f:	in     eax,0x6d
  405d41:	sbb    ebp,DWORD PTR [edx-0x27]
  405d44:	frstor [edi-0x636915a4]
  405d4a:	mov    esi,0x81c3eb8d
  405d4f:	test   BYTE PTR [ecx],0xe4
  405d52:	push   edx
  405d53:	lahf   
  405d54:	out    dx,eax
  405d55:	out    dx,al
  405d56:	adc    al,BYTE PTR [edx]
  405d58:	dec    edx
  405d59:	aam    0x72
  405d5b:	and    edx,DWORD PTR [eax-0x37]
  405d5e:	icebp  
  405d5f:	adc    BYTE PTR [ebx+0xc9c36e7],ch
  405d65:	int3   
  405d66:	pop    ebp
  405d67:	push   cs
  405d68:	jl     0x405d4b
  405d6a:	mov    dl,0x5d
  405d6c:	stos   DWORD PTR es:[edi],eax
  405d6d:	daa    
  405d6e:	jmp    0x4c21:0x6c064667
  405d75:	pop    esi
  405d76:	call   0xc9fd843d
  405d7b:	call   0x3c24:0x41ec00b8
  405d82:	xchg   ecx,eax
  405d83:	xor    DWORD PTR [ecx+ebx*1+0x11a4b9e5],ebp
  405d8a:	jmp    0x405d89
  405d8c:	popa   
  405d8d:	mov    ch,0x7
  405d8f:	cmp    eax,0x70e0b25f
  405d94:	sbb    esp,eax
  405d96:	std    
  405d97:	repnz inc esp
  405d99:	and    eax,edi
  405d9b:	shl    ecx,0xce
  405d9e:	js     0x405dd1
  405da0:	pop    edx
  405da1:	inc    eax
  405da2:	xchg   BYTE PTR [edx-0x79],dh
  405da5:	push   0x48
  405da7:	mov    esp,0x3e3d40f7
  405dac:	nop
  405dad:	mov    ah,0x6b
  405daf:	loope  0x405dd1
  405db1:	adc    DWORD PTR [eax-0x1b8cd71f],ecx
  405db7:	push   edi
  405db8:	and    BYTE PTR [edi+0x3d19bc43],bh
  405dbe:	mov    cl,0xda
  405dc0:	in     eax,0xdc
  405dc2:	fcomp  DWORD PTR [edx]
  405dc4:	cli    
  405dc5:	push   ss
  405dc6:	jp     0x405d98
  405dc8:	fiadd  DWORD PTR [ecx]
  405dca:	call   0x3bf6:0x295bc90c
  405dd1:	dec    ebx
  405dd2:	aam    0x89
  405dd4:	pop    edi
  405dd5:	outs   dx,DWORD PTR ds:[esi]
  405dd6:	xor    eax,0xfea9c350
  405ddb:	test   eax,0x6a8d7fdf
  405de0:	add    al,0xe7
  405de2:	jne    0x405dd8
  405de4:	and    DWORD PTR [edi+0x466c0c4d],eax
  405dea:	dec    eax
  405deb:	cdq    
  405dec:	out    dx,al
  405ded:	fwait
  405dee:	cmp    al,0x50
  405df0:	fld    st(0)
  405df2:	adc    BYTE PTR [edx],al
  405df4:	mov    ds:0xe6f81eb5,eax
  405df9:	pop    edx
  405dfa:	inc    esi
  405dfb:	sub    eax,0x23e9a3cd
  405e00:	daa    
  405e01:	hlt    
  405e02:	fidivr DWORD PTR [esi]
  405e04:	inc    ebp
  405e05:	icebp  
  405e06:	(bad)  [eax+0x5f763d02]
  405e0c:	in     eax,0x7c
  405e0e:	sar    BYTE PTR [edi+0x5e],0x4e
  405e12:	inc    edx
  405e13:	inc    edx
  405e14:	out    dx,eax
  405e15:	push   ebp
  405e16:	push   ss
  405e17:	fdiv   st,st(3)
  405e19:	push   ss
  405e1a:	loope  0x405e43
  405e1c:	fcomp  DWORD PTR ds:0x9cad140d
  405e22:	cwde   
  405e23:	xchg   BYTE PTR [edi+0x46],dh
  405e26:	frstor [edi]
  405e28:	mov    al,ds:0x3ad1fb0e
  405e2d:	ds (bad) 
  405e2f:	(bad)  
  405e30:	push   ecx
  405e31:	jnp    0x405e77
  405e33:	ss jle 0x405e80
  405e36:	jmp    eax
  405e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e39:	icebp  
  405e3a:	shl    eax,cl
  405e3c:	pop    ebp
  405e3d:	xor    BYTE PTR [ecx+esi*4-0x4a],0xab
  405e42:	out    dx,al
  405e43:	add    edx,DWORD PTR [ebx]
  405e45:	iret   
  405e46:	div    DWORD PTR [ebp+0x2ac3668c]
  405e4c:	pusha  
  405e4d:	ss and eax,0xe995508b
  405e53:	mov    eax,ds:0xd186212f
  405e58:	mov    bh,0xc3
  405e5a:	or     eax,0x6a33c405
  405e5f:	pushf  
  405e60:	fs pop eax
  405e62:	into   
  405e63:	pop    ebx
  405e64:	stos   DWORD PTR es:[edi],eax
  405e65:	adc    BYTE PTR [ebx+ecx*4+0x7],ch
  405e69:	cwde   
  405e6a:	adc    al,0x45
  405e6c:	fst    QWORD PTR [edx]
  405e6e:	mov    esi,0x213fd93b
  405e73:	retf   0xdb89
  405e76:	fst    QWORD PTR [edi+0xe45fab9]
  405e7c:	mov    ds:0x9486db89,eax
  405e81:	push   esi
  405e82:	leave  
  405e83:	out    dx,eax
  405e84:	fnstcw WORD PTR [edx]
  405e86:	sub    ah,0xaa
  405e89:	mov    WORD PTR [eax-0x6],cs
  405e8c:	add    DWORD PTR [edx+eiz*1],eax
  405e8f:	out    dx,al
  405e90:	inc    eax
  405e91:	shr    DWORD PTR [ebx+0x518e0a19],1
  405e97:	adc    DWORD PTR [edx],edi
  405e99:	xor    DWORD PTR [ecx*1+0x400ef71a],0xffffffeb
  405ea1:	adc    DWORD PTR [edi-0xab23ab1],edx
  405ea7:	shl    BYTE PTR [esp+esi*2-0x1439c891],1
  405eae:	lods   eax,DWORD PTR ds:[esi]
  405eaf:	mov    esp,0xafc0e8f8
  405eb4:	repnz push ds
  405eb6:	xor    al,0x38
  405eb8:	pop    edi
  405eb9:	aaa    
  405eba:	sub    eax,0x73015b88
  405ebf:	pop    edi
  405ec0:	(bad)  cs:[ebp-0x1e]
  405ec4:	lds    ebp,FWORD PTR [ecx+eiz*8+0x50]
  405ec8:	jg     0x405e9e
  405eca:	(bad)  
  405ecb:	test   eax,0x7a846f6b
  405ed0:	icebp  
  405ed1:	lock fld1 
  405ed4:	pop    ebx
  405ed5:	ja     0x405f31
  405ed7:	cdq    
  405ed8:	adc    BYTE PTR [edi-0x1ee4e70b],dh
  405ede:	ror    DWORD PTR [edx+0x3baab317],1
  405ee4:	fwait
  405ee5:	jbe    0x405e9a
  405ee7:	shr    BYTE PTR ds:0x63f0acf9,cl
  405eed:	lock inc esp
  405ef0:	inc    ecx
  405ef1:	inc    esp
  405ef2:	popf   
  405ef3:	jnp    0x405f1b
  405ef5:	inc    edx
  405ef6:	cmp    dh,cl
  405ef8:	addr16 je 0x405f51
  405efb:	imul   DWORD PTR [ecx-0x640a0002]
  405f01:	int    0xef
  405f03:	popf   
  405f04:	push   ebp
  405f05:	adc    BYTE PTR [edi+0x3c],dh
  405f08:	clc    
  405f09:	(bad)  
  405f0a:	jg     0x405f5a
  405f0c:	mov    ebx,0xc18713df
  405f11:	dec    esp
  405f12:	sar    ebx,cl
  405f14:	dec    eax
  405f15:	popf   
  405f16:	bound  ebp,QWORD PTR [edx-0x5b]
  405f19:	outs   dx,BYTE PTR ds:[esi]
  405f1a:	mov    esi,cr1
  405f1d:	es sbb al,0x63
  405f20:	sub    dh,BYTE PTR [ecx-0x2f]
  405f23:	int3   
  405f24:	mov    ebp,0x5582de3e
  405f29:	loop   0x405fa0
  405f2b:	in     eax,dx
  405f2c:	out    0x66,eax
  405f2e:	pmaxsw mm2,mm4
  405f31:	mov    ds:0xee70f588,al
  405f36:	sub    al,0x72
  405f38:	jecxz  0x405f44
  405f3a:	aaa    
  405f3b:	push   0x6c
  405f3d:	adc    BYTE PTR [edx],ah
  405f3f:	cld    
  405f40:	ins    DWORD PTR es:[edi],dx
  405f41:	ss retf 0x5532
  405f45:	rcl    BYTE PTR [eax],0x50
  405f48:	scas   al,BYTE PTR es:[edi]
  405f49:	xchg   ecx,eax
  405f4a:	inc    ebx
  405f4b:	mov    ds:0xff3310de,al
  405f50:	sub    DWORD PTR [edi-0x43d1875f],0xffffffff
  405f57:	inc    ecx
  405f58:	jbe    0x405fc5
  405f5a:	pusha  
  405f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f5c:	inc    esp
  405f5d:	jp     0x405f28
  405f5f:	lds    edi,FWORD PTR [ebp-0x75ef8de9]
  405f65:	cmp    ch,BYTE PTR [edx+0x30]
  405f68:	pop    es
  405f69:	sbb    DWORD PTR [ebx],esp
  405f6b:	(bad)  
  405f6d:	pop    esi
  405f6e:	xchg   ebp,eax
  405f6f:	sbb    dh,BYTE PTR ds:0xfe0f5c71
  405f75:	pop    ebx
  405f76:	das    
  405f77:	clc    
  405f78:	push   esi
  405f79:	xor    DWORD PTR [eax],esi
  405f7b:	mov    BYTE PTR [ebx+0x12],al
  405f7e:	fsincos 
  405f80:	fcomp  DWORD PTR ds:0xed485ea0
  405f86:	mov    edi,0xd26db678
  405f8b:	out    0x9c,al
  405f8d:	es pop esi
  405f8f:	push   0xa7b428d3
  405f94:	test   BYTE PTR [eax],bl
  405f96:	in     al,0x7f
  405f98:	or     BYTE PTR [edi-0x37d0f075],ch
  405f9e:	pop    ebx
  405f9f:	fiadd  DWORD PTR ds:0xd377c6d
  405fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa6:	cmp    eax,0x2958fb08
  405fab:	out    0x13,al
  405fad:	xchg   esp,eax
  405fae:	add    DWORD PTR [esi-0xa1a1ceb],ebp
  405fb4:	jmp    0xa402:0x1463dbfe
  405fbb:	sub    al,dl
  405fbd:	fiadd  WORD PTR [ebx-0xf]
  405fc0:	or     eax,0x6c264a87
  405fc5:	je     0x405f4c
  405fc7:	push   edi
  405fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fc9:	pop    ss
  405fca:	fdivr  st(6),st
  405fcc:	xchg   edi,esp
  405fce:	sahf   
  405fcf:	adc    al,BYTE PTR [ebx+0x54426a16]
  405fd5:	test   DWORD PTR [edi+0x2e01eeb6],ecx
  405fdb:	sahf   
  405fdc:	(bad)  
  405fdd:	fild   DWORD PTR [ecx-0x71]
  405fe0:	xchg   edi,eax
  405fe1:	push   edi
  405fe2:	inc    ebp
  405fe3:	shr    BYTE PTR [eax],1
  405fe5:	or     bh,BYTE PTR [eax-0x22]
  405fe8:	and    al,0xee
  405fea:	enter  0xce18,0xfa
  405fee:	mov    BYTE PTR [esi-0x36],ah
  405ff1:	in     al,dx
  405ff2:	repnz imul bh
  405ff5:	fnsetpm(287 only) 
  405ff7:	add    edi,DWORD PTR [ebp+0x25e6bae3]
  405ffd:	and    al,0x86
  405fff:	std    
  406000:	into   
  406001:	and    ah,bh
  406003:	data16 icebp 
  406005:	xor    al,0x5d
  406007:	dec    esi
  406008:	inc    ecx
  406009:	pop    edx
  40600a:	out    dx,al
  40600b:	push   eax
  40600c:	adc    eax,0x138b3b3f
  406011:	test   eax,0x95ab34b8
  406016:	pop    edi
  406017:	sbb    bh,BYTE PTR [edi+0x62]
  40601a:	repz dec ebx
  40601c:	jns    0x405fa6
  40601e:	xor    al,0xef
  406020:	mov    eax,0xd5ea9d28
  406025:	les    ebp,FWORD PTR [eax+0x64]
  406028:	shr    DWORD PTR [ebp+0x586e1682],cl
  40602e:	aas    
  40602f:	int    0x77
  406031:	mov    al,0x8d
  406033:	xor    al,0x4c
  406035:	adc    DWORD PTR [esp-0x219315cb],ecx
  40603c:	pop    eax
  40603d:	fadd   st(1),st
  40603f:	fiadd  WORD PTR [edi+0x56]
  406042:	aas    
  406043:	jno    0x406096
  406045:	pop    ss
  406046:	adc    eax,0xbd368eaa
  40604b:	jnp    0x405fcd
  40604d:	adc    eax,edi
  40604f:	xchg   edi,eax
  406050:	cmp    BYTE PTR [esi-0x67],dl
  406053:	push   ss
  406054:	fist   WORD PTR [edx-0x11136393]
  40605a:	ret    
  40605b:	ins    BYTE PTR es:[edi],dx
  40605c:	rcl    eax,1
  40605e:	in     eax,dx
  40605f:	(bad)  
  406060:	pop    ecx
  406061:	inc    edi
  406062:	sti    
  406063:	ds inc esp
  406065:	imul   esi,ecx,0xedfa9c53
  40606b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40606c:	inc    ebx
  40606d:	outs   dx,DWORD PTR ds:[esi]
  40606e:	iret   
  40606f:	jge    0x4060a7
  406071:	sub    dl,al
  406073:	neg    ah
  406075:	sbb    esi,DWORD PTR [edi+0x38]
  406078:	push   cs
  406079:	nop
  40607a:	(bad)  
  40607c:	fstp   QWORD PTR [edx]
  40607e:	pop    ss
  40607f:	stos   BYTE PTR es:[edi],al
  406080:	sub    al,0x87
  406082:	pusha  
  406083:	push   ecx
  406084:	mov    ebp,0x5799a73a
  406089:	mov    dh,0x2e
  40608b:	pop    eax
  40608c:	in     eax,0xfa
  40608e:	push   ds
  40608f:	shr    DWORD PTR [edx-0xa],cl
  406092:	mov    eax,ds:0xe9cb6180
  406097:	sub    BYTE PTR [ebx+0x67],0x3c
  40609b:	mov    BYTE PTR [ecx-0x354ed0b9],al
  4060a1:	xchg   ecx,eax
  4060a2:	push   ds
  4060a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060a4:	not    BYTE PTR [ebx-0xc76a35d]
  4060aa:	fdivr  DWORD PTR [eax+0x4ca0b5b5]
  4060b0:	pushf  
  4060b1:	cli    
  4060b2:	arpl   WORD PTR [edx],bx
  4060b4:	pop    DWORD PTR [edx+ebp*2+0x22fadb22]
  4060bb:	pop    esi
  4060bc:	sbb    al,0x2
  4060be:	test   al,0xd5
  4060c0:	sti    
  4060c1:	daa    
  4060c2:	inc    ebp
  4060c3:	sahf   
  4060c4:	mov    edi,0x15e3fce
  4060c9:	and    DWORD PTR [eax+esi*2+0x4eb8c55d],esi
  4060d0:	cwde   
  4060d1:	dec    edi
  4060d2:	call   0x1305dd38
  4060d7:	leave  
  4060d8:	fstp   QWORD PTR [edi+0x72]
  4060db:	sub    al,BYTE PTR [eax]
  4060dd:	dec    eax
  4060de:	mov    ebp,0xf33f7a0f
  4060e3:	ds scas al,BYTE PTR es:[edi]
  4060e5:	cmp    al,0xbb
  4060e7:	cwde   
  4060e8:	cmp    al,0x64
  4060ea:	adc    DWORD PTR [edx-0x58b04151],ebx
  4060f0:	jge    0x4060f2
  4060f2:	or     bl,BYTE PTR [ebx+0x5f]
  4060f5:	shl    BYTE PTR [esi-0x5da20957],cl
  4060fb:	mov    cl,0x17
  4060fd:	mov    cl,0x6d
  4060ff:	lea    ebp,[esi-0x3ed8dd29]
  406105:	outs   dx,DWORD PTR ds:[esi]
  406106:	cmovb  esi,DWORD PTR [ebx]
  406109:	dec    esp
  40610a:	xor    al,0xbc
  40610c:	xlat   BYTE PTR ds:[ebx]
  40610d:	daa    
  40610e:	mov    WORD PTR [ecx+0x519017df],ss
  406114:	jae    0x4060f4
  406116:	pop    esp
  406117:	(bad)  
  406118:	aam    0x57
  40611a:	ins    DWORD PTR es:[edi],dx
  40611b:	ins    DWORD PTR es:[edi],dx
  40611c:	(bad)  
  40611e:	pop    ebx
  40611f:	aam    0x5c
  406121:	mov    edx,0x706e6971
  406126:	or     ch,BYTE PTR [eax-0x11c3d554]
  40612c:	inc    edx
  40612d:	ret    0x8c28
  406130:	pusha  
  406131:	imul   ebx,ebp,0x37
  406134:	dec    edx
  406135:	lods   al,BYTE PTR ds:[esi]
  406136:	cmc    
  406137:	inc    esp
  406138:	push   esp
  406139:	mov    eax,ds:0xa1ec67b8
  40613e:	pop    ecx
  40613f:	div    BYTE PTR [edi+esi*2+0x7c]
  406143:	pop    ss
  406144:	cli    
  406145:	ds cmp al,0x59
  406148:	push   cs
  406149:	cli    
  40614a:	pop    edi
  40614b:	sub    BYTE PTR [ecx-0x5746463c],ch
  406151:	test   al,0x76
  406153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406154:	ds mov gs,WORD PTR fs:[esi+0x4694bc88]
  40615c:	add    eax,0x854abe41
  406161:	fistp  DWORD PTR [esi]
  406163:	adc    al,0xe3
  406165:	lds    edx,FWORD PTR [edx]
  406167:	ss leave 
  406169:	and    dh,BYTE PTR [eax]
  40616b:	nop
  40616c:	(bad)
  406170:	fidivr WORD PTR [ecx]
  406172:	push   0x2b
  406174:	fldcw  WORD PTR [edx]
  406176:	stos   BYTE PTR es:[edi],al
  406177:	pop    es
  406178:	sti    
  406179:	int    0x33
  40617b:	lds    esi,FWORD PTR [eax-0x380c0d74]
  406181:	mov    esp,0xda681d08
  406186:	ret    0x4018
  406189:	in     eax,dx
  40618a:	xor    DWORD PTR [edx+0x74beee65],ecx
  406190:	pop    edx
  406191:	inc    esi
  406192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406193:	sbb    esp,ebx
  406195:	nop
  406196:	repz mul eax
  406199:	mov    bl,0x6f
  40619b:	or     ebx,ebx
  40619d:	js     0x40620e
  40619f:	fist   DWORD PTR [ebx-0x7c]
  4061a2:	add    ebx,DWORD PTR [esi+0x421cdc44]
  4061a8:	or     ecx,DWORD PTR [ebx]
  4061aa:	sbb    DWORD PTR [eax-0x62],esi
  4061ad:	inc    eax
  4061ae:	jnp    0x4061a5
  4061b0:	push   ds
  4061b1:	sbb    BYTE PTR [ecx+ebx*1+0x5e54fc71],ah
  4061b8:	ins    BYTE PTR es:[edi],dx
  4061b9:	pop    es
  4061ba:	or     eax,0xf810490f
  4061bf:	jbe    0x4061b0
  4061c1:	repnz xor BYTE PTR [edi-0x303c6794],cl
  4061c8:	call   DWORD PTR [esi+eiz*4]
  4061cb:	and    DWORD PTR [ebx],eax
  4061cd:	mov    cl,0xcc
  4061cf:	sub    al,0x83
  4061d1:	push   ebx
  4061d2:	xchg   edx,eax
  4061d3:	les    ebx,FWORD PTR ds:0x765f2409
  4061d9:	scas   al,BYTE PTR es:[edi]
  4061da:	retf   0x8201
  4061dd:	mov    ds:0x69d35aaa,eax
  4061e2:	jo     0x406196
  4061e4:	div    BYTE PTR ss:[eax-0x584c7e79]
  4061eb:	fwait
  4061ec:	adc    eax,0x500af4eb
  4061f1:	jmp    0x2478:0x6f9386e6
  4061f8:	mov    ds:0xc3a19ef8,al
  4061fd:	into   
  4061fe:	jmp    0xa4c2:0xfa5cbb0e
  406205:	or     al,0xda
  406207:	sub    ah,BYTE PTR [esi-0x42cec8d]
  40620d:	jecxz  0x4061be
  40620f:	stos   BYTE PTR es:[edi],al
  406210:	sar    BYTE PTR [ebp+0x11],cl
  406213:	push   esi
  406214:	in     eax,dx
  406215:	(bad)  
  406216:	mov    ecx,0x28c23c73
  40621b:	in     al,0x18
  40621d:	and    DWORD PTR ds:0xd3f8f2d6,ebx
  406223:	imul   esi,ebx,0x3e
  406226:	push   ss
  406227:	sub    dh,BYTE PTR [esi]
  406229:	inc    eax
  40622a:	pop    ecx
  40622b:	mov    ecx,0xc8e06139
  406230:	mov    ebx,0x64f71c64
  406235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406236:	cmp    al,0x36
  406238:	pop    ebx
  406239:	or     ecx,edx
  40623b:	hlt    
  40623c:	aam    0x80
  40623e:	mov    dh,0x8f
  406240:	xor    eax,0xa5edc5c2
  406245:	xchg   ebx,eax
  406246:	pop    esp
  406247:	fcomi  st,st(5)
  406249:	sti    
  40624a:	mov    al,ds:0xa2864319
  40624f:	pop    ds
  406250:	lods   eax,DWORD PTR ds:[esi]
  406251:	call   0x56b685f
  406256:	mov    ecx,0xdb72ac4e
  40625b:	dec    edi
  40625c:	scas   al,BYTE PTR es:[edi]
  40625d:	inc    edi
  40625e:	call   0x32d57e48
  406263:	mov    ch,0x2f
  406265:	xchg   edx,eax
  406266:	lods   al,BYTE PTR ds:[esi]
  406267:	inc    edi
  406268:	retf   
  406269:	dec    esp
  40626a:	mov    esp,?
  40626c:	ja     0x40625d
  40626e:	fldenv [ebx-0x61]
  406271:	daa    
  406272:	pop    ss
  406273:	push   ecx
  406274:	and    ah,BYTE PTR [eax+eax*4]
  406277:	out    dx,eax
  406278:	xchg   esi,eax
  406279:	push   esi
  40627a:	cmc    
  40627b:	jmp    0x3090:0x6caf9245
  406282:	jbe    0x4062f4
  406284:	add    dl,BYTE PTR [eax+0xafc00d8]
  40628a:	jge    0x40628c
  40628c:	sar    BYTE PTR [ebx+edx*4],0x58
  406290:	and    DWORD PTR [eax],edx
  406292:	xchg   DWORD PTR [esi+0x17],ecx
  406295:	mov    edx,DWORD PTR [edi-0x7]
  406298:	mov    edi,0x147e3fb1
  40629d:	scas   eax,DWORD PTR es:[edi]
  40629e:	inc    eax
  40629f:	punpckhbw mm6,QWORD PTR ds:0xc3795744
  4062a6:	mov    edi,DWORD PTR [edi+0x6296796d]
  4062ac:	cmp    BYTE PTR [edi+0x39],bh
  4062af:	out    dx,eax
  4062b0:	add    dh,BYTE PTR [ebp-0x3b]
  4062b3:	mov    ah,0x7b
  4062b5:	in     eax,0x18
  4062b7:	inc    ebp
  4062b8:	push   ss
  4062b9:	jp     0x40624a
  4062bb:	(bad)  
  4062bc:	aam    0xf1
  4062be:	xor    cl,BYTE PTR [eax+edx*4+0x2cd51ad3]
  4062c5:	sub    ebx,DWORD PTR [ebx+ecx*8-0x7ad4a723]
  4062cc:	pop    edi
  4062cd:	and    BYTE PTR [edi],bl
  4062cf:	jecxz  0x4062b1
  4062d1:	gs rcr bl,0xb
  4062d5:	in     eax,dx
  4062d6:	popf   
  4062d7:	cdq    
  4062d8:	xor    al,0xf1
  4062da:	mul    BYTE PTR [ecx+0x7]
  4062dd:	or     cl,BYTE PTR [ebx]
  4062df:	xchg   ebp,eax
  4062e0:	cmp    eax,0x15d48f87
  4062e5:	dec    esp
  4062e6:	in     al,dx
  4062e7:	xor    eax,0xa1015b44
  4062ec:	lods   eax,DWORD PTR ds:[esi]
  4062ed:	rcr    BYTE PTR [ebp+0x15f34150],cl
  4062f3:	pusha  
  4062f4:	sub    cl,BYTE PTR [esi+edi*2-0x6a928e53]
  4062fb:	popf   
  4062fc:	call   0x806b:0xed0ab9d4
  406303:	cli    
  406304:	and    cl,BYTE PTR [ebx+0x5a]
  406307:	cs loope 0x4062f5
  40630a:	aam    0x9c
  40630c:	and    BYTE PTR [si-0x6f],cl
  406310:	push   es
  406311:	push   edx
  406312:	jmp    0x4062aa
  406314:	imul   ebx,DWORD PTR [edx],0xffffff87
  406317:	mov    dh,0x68
  406319:	std    
  40631a:	pushf  
  40631b:	imul   DWORD PTR [edi+0x30744857]
  406321:	div    DWORD PTR [edx-0x7c5ac319]
  406327:	popa   
  406328:	adc    DWORD PTR [ecx+0xf],ebp
  40632b:	mov    edi,0xa7603753
  406330:	mov    WORD PTR [ecx-0x26],es
  406333:	push   DWORD PTR [ecx]
  406335:	aaa    
  406336:	ds mov dh,0x86
  406339:	nop
  40633a:	lods   al,BYTE PTR ds:[esi]
  40633b:	retf   0x82c3
  40633e:	sub    DWORD PTR [eax+eax*2],esi
  406341:	je     0x406372
  406343:	xchg   esi,edx
  406345:	test   bh,0xfe
  406348:	inc    edi
  406349:	aas    
  40634a:	pop    ecx
  40634b:	cmp    ebp,DWORD PTR [eax-0x5baf8dd5]
  406351:	lea    esp,[esp+eax*8]
  406354:	fs mov ebx,0x774264f
  40635a:	(bad)  
  40635b:	popa   
  40635c:	xor    eax,esi
  40635e:	fsubr  DWORD PTR [edi+edx*8]
  406361:	mov    WORD PTR [edx+0x67],ds
  406364:	sar    BYTE PTR [eax-0x4fa67abf],0xb6
  40636b:	sub    esp,DWORD PTR [edx+0xfc0a553]
  406371:	or     ecx,edx
  406373:	rol    al,0xc3
  406376:	mov    WORD PTR [eax],ss
  406378:	ror    DWORD PTR [ebx],0x70
  40637b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40637c:	cld    
  40637d:	cmp    ch,ah
  40637f:	jns    0x406360
  406381:	xchg   esp,eax
  406382:	push   ebp
  406383:	cld    
  406384:	out    dx,al
  406385:	dec    esp
  406386:	sub    DWORD PTR [ebx],0x298903b8
  40638c:	cmp    bh,BYTE PTR [esi]
  40638e:	data16 mov al,ds:0x270b06f3
  406394:	xchg   ecx,eax
  406395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406396:	pop    ecx
  406397:	pop    edx
  406398:	inc    ebx
  406399:	test   eax,0xe9ed2c43
  40639e:	pop    ds
  40639f:	out    0xc0,eax
  4063a1:	mov    eax,ds:0x9dd7c8d7
  4063a6:	(bad)  
  4063a7:	mov    cl,0xd7
  4063a9:	mov    esp,DWORD PTR [esi+ebp*1+0x3d78f689]
  4063b0:	pop    esp
  4063b1:	jge    0x40640d
  4063b3:	popf   
  4063b4:	push   0x939bf496
  4063b9:	ss mov esp,0x8a82911e
  4063bf:	imul   edx,DWORD PTR [ecx],0xb080c93f
  4063c5:	or     al,0x77
  4063c7:	pop    edx
  4063c8:	inc    eax
  4063c9:	out    dx,eax
  4063ca:	adc    bl,dl
  4063cc:	and    al,0x91
  4063ce:	aaa    
  4063cf:	shl    DWORD PTR [edx+0x68],0x72
  4063d3:	in     eax,0x41
  4063d5:	repnz enter 0x485b,0xc8
  4063da:	jge    0x4063bd
  4063dc:	sub    DWORD PTR [edx],0xfffffff5
  4063df:	cmp    ebx,DWORD PTR [eax]
  4063e1:	jge    0x4063b5
  4063e3:	xor    al,0x61
  4063e5:	in     eax,0xf7
  4063e7:	aaa    
  4063e8:	aas    
  4063e9:	push   eax
  4063ea:	or     eax,0x7b179e6e
  4063ef:	adc    BYTE PTR [ebx],cl
  4063f1:	and    al,0x43
  4063f3:	cmp    bl,BYTE PTR [edi]
  4063f5:	outs   dx,DWORD PTR ds:[esi]
  4063f6:	mov    dl,0xad
  4063f8:	add    eax,0x5a5d755f
  4063fd:	xor    dl,BYTE PTR [ebp-0x37]
  406400:	pop    esi
  406401:	xchg   esp,eax
  406402:	les    eax,FWORD PTR [edx]
  406404:	scas   al,BYTE PTR es:[edi]
  406405:	push   eax
  406406:	pop    esi
  406407:	cdq    
  406408:	push   edi
  406409:	cwde   
  40640a:	ds in  eax,0xfc
  40640d:	daa    
  40640e:	and    dh,ah
  406410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406411:	lods   eax,DWORD PTR ds:[esi]
  406412:	repnz sbb ah,bh
  406415:	sbb    DWORD PTR [esi],eax
  406417:	pop    eax
  406418:	imul   esp,ecx,0xc775ed03
  40641e:	or     al,0xf1
  406420:	outs   dx,BYTE PTR ds:[esi]
  406421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406422:	xchg   BYTE PTR [ecx],dl
  406424:	mov    al,ds:0x62154006
  406429:	(bad)  
  40642a:	mov    ebp,0xa119cab2
  40642f:	cmp    DWORD PTR [eax],edx
  406431:	push   eax
  406432:	xor    DWORD PTR [edx+0x7],ecx
  406435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406436:	mov    DWORD PTR [ecx+0x4cfddfda],eax
  40643c:	push   es
  40643d:	ins    BYTE PTR es:[edi],dx
  40643e:	cli    
  40643f:	dec    ecx
  406440:	dec    esi
  406441:	fdivr  QWORD PTR [esi-0x64]
  406444:	xor    ah,cl
  406446:	jl     0x4063cd
  406448:	addr16 call 0x7a13:0x833fb2c5
  406450:	pop    ss
  406451:	jne    0x40648e
  406453:	cli    
  406454:	push   es
  406455:	addr16 jmp 0x4064d2
  406458:	ja     0x40646f
  40645a:	jnp    0x4063de
  40645c:	fild   WORD PTR [ecx+0x4660c5d]
  406462:	inc    esp
  406463:	lea    edx,[ebx+0x17102da4]
  406469:	sahf   
  40646a:	push   eax
  40646b:	aas    
  40646c:	adc    DWORD PTR [ecx+0x39],0x7cc88d2d
  406473:	shl    BYTE PTR [ebx-0x9b5a9cd],cl
  406479:	inc    esi
  40647a:	mov    ds:0xc6d2aac2,al
  40647f:	jle    0x40642c
  406481:	loope  0x4064c6
  406483:	retf   
  406484:	ja     0x406490
  406486:	js     0x406469
  406488:	sub    dl,bh
  40648a:	xor    dh,BYTE PTR [edi-0x5400c3ea]
  406490:	xor    BYTE PTR [ebx+0x58],bh
  406493:	add    DWORD PTR [ecx-0x53],0x74
  406497:	mov    ebx,0xca6fa3d3
  40649c:	dec    ebx
  40649d:	repnz out 0xcd,eax
  4064a0:	sub    ah,BYTE PTR [edi]
  4064a2:	gs out dx,eax
  4064a4:	push   ecx
  4064a5:	pop    edx
  4064a6:	sub    BYTE PTR [ecx],0x27
  4064a9:	pop    edi
  4064aa:	jnp    0x406510
  4064ac:	sahf   
  4064ad:	add    DWORD PTR [esi-0x65],ecx
  4064b0:	xor    dh,BYTE PTR [ebx+0x167e3640]
  4064b6:	lea    ecx,ds:0xf5d5f228
  4064bc:	xor    bl,BYTE PTR [ebx+0x46]
  4064bf:	mov    esi,DWORD PTR [ecx-0x253e8]
  4064c5:	pop    es
  4064c6:	std    
  4064c7:	inc    edi
  4064c8:	popa   
  4064c9:	dec    esi
  4064ca:	ret    
  4064cb:	ret    
  4064cc:	cld    
  4064cd:	mov    esi,0xbee8621a
  4064d2:	mov    ebx,DWORD PTR [ecx+0xf]
  4064d5:	and    DWORD PTR [ecx+0x1b],ebx
  4064d8:	inc    ecx
  4064d9:	mov    al,BYTE PTR ds:0xdb6db45f
  4064df:	out    0x50,eax
  4064e1:	jns    0x40650b
  4064e3:	pop    esi
  4064e4:	in     eax,dx
  4064e5:	repz out 0x6d,eax
  4064e8:	push   ebp
  4064e9:	push   ebx
  4064ea:	sbb    al,BYTE PTR [edi]
  4064ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ed:	pop    ebx
  4064ee:	call   0x1126:0x64580905
  4064f5:	fisttp WORD PTR [esi-0x127fbe99]
  4064fb:	or     ah,BYTE PTR [edi+eax*8+0x1427eeb9]
  406502:	ret    0x1db2
  406505:	mov    bl,0x97
  406507:	add    esi,0xeb611f3d
  40650d:	push   edx
  40650e:	lock jo 0x406507
  406511:	aas    
  406512:	and    ch,cl
  406514:	and    al,0xa3
  406516:	(bad)  
  406518:	sub    ecx,DWORD PTR [edx-0x1b5c6ed1]
  40651e:	mov    edi,0x7a7a3596
  406523:	stos   BYTE PTR es:[edi],al
  406524:	cli    
  406525:	add    edi,edi
  406527:	mov    al,BYTE PTR [edx-0x25a1926c]
  40652d:	mov    ch,0x32
  40652f:	xchg   esi,eax
  406530:	inc    edi
  406531:	mov    esp,0xba14337f
  406536:	push   ss
  406537:	mov    esp,0x52309842
  40653c:	add    DWORD PTR [edx],edx
  40653e:	lahf   
  40653f:	dec    ebp
  406540:	rcl    DWORD PTR [edi+0x4ac9396],1
  406546:	rcr    DWORD PTR [edx+0xe],0x93
  40654a:	shl    eax,cl
  40654c:	push   ds
  40654d:	mov    ch,0xb1
  40654f:	rcl    DWORD PTR [eax-0x1],cl
  406552:	dec    ebp
  406553:	fstp   TBYTE PTR [edx+0x57864ccf]
  406559:	mov    eax,0xe9157081
  40655e:	cld    
  40655f:	out    0xe3,eax
  406561:	adc    eax,0x752ba5ef
  406566:	fstp   QWORD PTR [ecx+esi*2-0x1b8c3fc1]
  40656d:	lods   eax,DWORD PTR ds:[esi]
  40656e:	sub    esi,DWORD PTR [ecx-0x1e]
  406571:	sub    DWORD PTR [edx+edi*4+0x4a],eax
  406575:	arpl   WORD PTR [ebx+0x1d],cx
  406578:	xor    DWORD PTR [ebx+0x6b],ebx
  40657b:	test   eax,0x997c6992
  406580:	ds dec eax
  406582:	cmp    ch,0xde
  406585:	push   cs
  406586:	es jns 0x4065f2
  406589:	fdivr  DWORD PTR [edi-0x5fe25ff0]
  40658f:	push   ds
  406590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406591:	int3   
  406592:	ret    
  406593:	ror    dh,cl
  406595:	add    DWORD PTR [ebx+0x2a2a547e],ecx
  40659b:	iret   
  40659c:	(bad)  
  40659f:	push   esi
  4065a0:	ret    0x4a8f
  4065a3:	(bad)
  4065a6:	sbb    al,0x68
  4065a8:	mov    gs,WORD PTR [ebx+0x3b]
  4065ab:	(bad)  
  4065ac:	dec    edx
  4065ae:	ret    
  4065af:	scas   al,BYTE PTR es:[edi]
  4065b0:	xor    BYTE PTR [eax-0x5e],ch
  4065b3:	push   cs
  4065b4:	pop    ss
  4065b5:	xchg   ebx,eax
  4065b6:	adc    DWORD PTR [ebx+0x78],ecx
  4065b9:	mov    al,0xc3
  4065bb:	shl    BYTE PTR [ecx],cl
  4065bd:	jmp    0xb0d7:0x7e7782c0
  4065c4:	sub    al,0x2f
  4065c6:	push   edx
  4065c7:	aad    0x1d
  4065c9:	inc    esi
  4065ca:	inc    esp
  4065cb:	out    dx,eax
  4065cc:	sti    
  4065cd:	out    0xea,eax
  4065cf:	daa    
  4065d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d1:	inc    edx
  4065d2:	push   ds
  4065d3:	add    DWORD PTR [ecx-0x6404b94f],0xffffff80
  4065da:	pop    ds
  4065db:	jmp    0x40664f
  4065dd:	xor    eax,0xedfde845
  4065e2:	inc    edx
  4065e3:	sar    DWORD PTR [edx],1
  4065e5:	lea    ecx,[ebp-0x72]
  4065e8:	lods   eax,DWORD PTR ds:[esi]
  4065e9:	lods   eax,DWORD PTR ds:[esi]
  4065ea:	push   0xffffffb3
  4065ec:	mov    ds:0xfb3f651b,eax
  4065f1:	rcl    DWORD PTR [esi+0x2cf3caac],1
  4065f7:	sub    al,0xda
  4065f9:	adc    al,0x3e
  4065fb:	das    
  4065fc:	int    0x3c
  4065fe:	cs pop edi
  406600:	enter  0xdb8c,0x8a
  406604:	test   BYTE PTR [edx-0x44c4bae2],0xe1
  40660b:	dec    ebx
  40660c:	add    al,0xc9
  40660e:	aas    
  40660f:	fsubr  st(5),st
  406611:	mov    DWORD PTR [edx-0x4d],ebp
  406614:	out    dx,eax
  406615:	jb     0x4065fe
  406617:	dec    esi
  406618:	xchg   ebx,eax
  406619:	stos   BYTE PTR es:[edi],al
  40661a:	icebp  
  40661b:	mov    eax,edi
  40661d:	or     ch,0x7f
  406620:	mov    bl,0x22
  406622:	mov    dh,BYTE PTR [esp+eax*8+0x371d5470]
  406629:	xchg   edi,eax
  40662a:	(bad)  
  40662b:	in     al,0x52
  40662d:	mov    eax,ds:0x94715a3f
  406632:	jo     0x40663a
  406634:	ja     0x4065e2
  406636:	(bad)  
  406637:	scas   eax,DWORD PTR es:[edi]
  406638:	mov    esi,0x3de927c2
  40663d:	imul   edx,edi,0xfffffff9
  406640:	lea    ecx,[edx+0x2f]
  406643:	imul   ecx,ebp,0xffffffaf
  406646:	push   ss
  406647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406648:	int3   
  406649:	xchg   ebx,eax
  40664a:	ins    BYTE PTR es:[edi],dx
  40664b:	scas   al,BYTE PTR es:[edi]
  40664c:	push   ebx
  40664d:	jb     0x406668
  40664f:	add    al,0xe5
  406651:	adc    al,0x96
  406653:	mov    dh,BYTE PTR [esi+0x1230d147]
  406659:	out    dx,eax
  40665a:	fdiv   DWORD PTR [esi+0xc]
  40665d:	mov    edx,0x445101c9
  406662:	ret    0x7eab
  406665:	and    al,0x32
  406667:	or     edx,ebx
  406669:	shr    BYTE PTR [esi],1
  40666b:	sti    
  40666c:	sti    
  40666d:	(bad)  
  40666e:	sahf   
  40666f:	jmp    0x406652
  406671:	aaa    
  406672:	int3   
  406673:	jl     0x406652
  406675:	or     dh,dl
  406677:	lock imul eax,esp,0xd17abe65
  40667e:	(bad)  
  40667f:	xchg   esi,eax
  406680:	fcomip st,st(1)
  406682:	popa   
  406683:	add    DWORD PTR [esi+eax*8],edx
  406686:	xchg   ebp,eax
  406687:	cld    
  406688:	inc    ebx
  406689:	cmp    BYTE PTR [ecx+0xe],0xe1
  40668d:	mov    dl,0x63
  40668f:	add    DWORD PTR [edi],edi
  406691:	jg     0x4066dc
  406693:	pop    edi
  406694:	js     0x4066b2
  406696:	pop    ebp
  406697:	in     al,0xde
  406699:	sahf   
  40669a:	mov    ebx,DWORD PTR [eax-0x3]
  40669d:	shl    bl,1
  40669f:	ja     0x406688
  4066a1:	in     eax,0xf7
  4066a3:	mov    edx,0x3fcc9bea
  4066a8:	sbb    edi,DWORD PTR [ecx-0x33c1d6ac]
  4066ae:	icebp  
  4066af:	imul   esi,DWORD PTR [edi+0x1c],0xe2fddeba
  4066b6:	xchg   DWORD PTR [ebp+0x18],esp
  4066b9:	mov    cl,0x31
  4066bb:	push   es
  4066bc:	ins    BYTE PTR es:[edi],dx
  4066bd:	pop    edi
  4066be:	shl    DWORD PTR [ecx-0x5f],0x3a
  4066c2:	in     al,dx
  4066c3:	inc    ebx
  4066c4:	or     DWORD PTR [eax+0x24],edx
  4066c7:	adc    BYTE PTR [edi-0x7d],dh
  4066ca:	add    bh,BYTE PTR [ecx+edi*4]
  4066cd:	cmp    eax,0x4d724073
  4066d2:	mov    dl,0x39
  4066d4:	outs   dx,BYTE PTR ds:[esi]
  4066d5:	xor    BYTE PTR [eax],0x53
  4066d8:	out    dx,eax
  4066d9:	(bad)  
  4066da:	mov    DWORD PTR [ebx-0x2],edi
  4066dd:	data16 das 
  4066df:	mov    ds:0x9cbb0b6e,eax
  4066e4:	ins    DWORD PTR es:[edi],dx
  4066e5:	ins    DWORD PTR es:[edi],dx
  4066e6:	icebp  
  4066e7:	push   cs
  4066e8:	push   di
  4066ea:	cld    
  4066eb:	js     0x406735
  4066ed:	mov    fs,WORD PTR [esi+eax*2]
  4066f0:	fcmovnu st,st(7)
  4066f2:	and    BYTE PTR [edi-0x13],al
  4066f5:	sbb    eax,0x5e3346c8
  4066fa:	and    ecx,DWORD PTR [edi-0x3a5c47c9]
  406700:	mov    ds:0x697d9ab2,eax
  406705:	and    ah,dl
  406707:	repz popa 
  406709:	cld    
  40670a:	xchg   esi,eax
  40670b:	out    0x13,al
  40670d:	enter  0x9b09,0x12
  406711:	into   
  406712:	mov    esi,0x57a7e171
  406717:	xchg   edi,eax
  406718:	jne    0x406781
  40671a:	or     DWORD PTR [eax-0x2a],eax
  40671d:	dec    esi
  40671e:	xchg   esi,eax
  40671f:	or     DWORD PTR [ecx],edx
  406721:	shl    ebx,1
  406723:	mov    edx,0xebe1655
  406728:	and    al,0x99
  40672a:	dec    ebx
  40672b:	or     eax,0x465149fb
  406730:	(bad)  
  406731:	jp     0x4066c2
  406733:	lahf   
  406734:	and    DWORD PTR [edi-0x20],edi
  406737:	xchg   edi,eax
  406738:	xor    eax,0xc08929d7
  40673d:	cmp    BYTE PTR [ecx-0x6a05862],bh
  406743:	cld    
  406744:	cmp    BYTE PTR [eax+0x4b],bl
  406747:	pop    ebx
  406748:	aam    0xa7
  40674a:	jecxz  0x40677d
  40674c:	adc    eax,0x9dac10bb
  406751:	jne    0x406770
  406753:	in     al,dx
  406754:	pop    esp
  406755:	rcr    eax,cl
  406757:	mov    ss,WORD PTR [ecx-0x5d]
  40675a:	fild   QWORD PTR [edi+ebp*8-0x217f58fa]
  406761:	add    DWORD PTR [ebp-0x40],ebx
  406764:	xchg   ecx,eax
  406765:	loope  0x4066f4
  406767:	jp     0x40675b
  406769:	imul   ecx,DWORD PTR [edx-0x30771c89],0xba947257
  406773:	sub    BYTE PTR [edx],al
  406775:	inc    esi
  406776:	fwait
  406777:	xchg   edi,eax
  406778:	adc    DWORD PTR [edi],ebp
  40677a:	mov    edx,0x2398c468
  40677f:	hlt    
  406780:	xor    al,0xd9
  406782:	cmp    eax,0x964ac1a3
  406787:	mov    cl,0x8b
  406789:	loopne 0x4067bb
  40678b:	stos   DWORD PTR es:[edi],eax
  40678c:	jle    0x406803
  40678e:	adc    DWORD PTR [ecx],edx
  406790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406791:	stos   BYTE PTR es:[edi],al
  406792:	mov    ebx,0x7d3e0988
  406797:	inc    ecx
  406798:	add    eax,ecx
  40679a:	cs jnp 0x406811
  40679d:	cld    
  40679e:	push   edi
  40679f:	or     eax,0xc16b95e8
  4067a4:	dec    ebx
  4067a5:	adc    DWORD PTR [eax],esp
  4067a7:	dec    ecx
  4067a8:	cmp    dl,ch
  4067aa:	clc    
  4067ab:	test   DWORD PTR [esi+0x7ac6fa56],esp
  4067b1:	cli    
  4067b2:	xor    al,0x2d
  4067b4:	dec    eax
  4067b5:	hlt    
  4067b6:	aas    
  4067b7:	dec    ebp
  4067b8:	out    dx,eax
  4067b9:	add    eax,0x139d9ccf
  4067be:	mov    esp,0xe3e28963
  4067c3:	push   cs
  4067c4:	push   ebx
  4067c5:	mov    esi,0x662b8b6
  4067ca:	ss popa 
  4067cc:	cmp    eax,0x98075e7b
  4067d1:	add    bl,al
  4067d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067d4:	in     al,dx
  4067d5:	lods   al,BYTE PTR ds:[esi]
  4067d6:	sti    
  4067d7:	mov    al,ds:0x93d3e1b3
  4067dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067dd:	fdiv   QWORD PTR [edi-0x7f]
  4067e0:	shl    cl,1
  4067e2:	push   eax
  4067e3:	scas   al,BYTE PTR es:[edi]
  4067e4:	not    DWORD PTR [edx+0x5db12115]
  4067ea:	xchg   ebx,eax
  4067eb:	sahf   
  4067ec:	xlat   BYTE PTR ds:[ebx]
  4067ee:	jnp    0x406782
  4067f0:	dec    esi
  4067f1:	iret   
  4067f2:	or     al,0x3b
  4067f4:	jno    0x406822
  4067f6:	ins    BYTE PTR es:[edi],dx
  4067f7:	xchg   esi,eax
  4067f8:	mov    esi,0xe4590d82
  4067fe:	dec    ebx
  4067ff:	iret   
  406800:	jnp    0x40687e
  406802:	push   eax
  406803:	sub    esp,DWORD PTR [ecx]
  406805:	mov    al,ds:0x737f1be7
  40680a:	cmp    al,0xc9
  40680c:	out    0x41,al
  40680e:	jge    0x4067b3
  406810:	add    esp,edx
  406812:	jp     0x4067b4
  406814:	das    
  406815:	xor    eax,0x44cffbce
  40681a:	les    esi,FWORD PTR [edi-0x29bf98c8]
  406820:	imul   esp,DWORD PTR [esi+0x2f],0x8ff723f5
  406827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406828:	xchg   esp,eax
  406829:	cmp    ebp,DWORD PTR [eax-0x20]
  40682c:	jmp    0x24cc997b
  406831:	mov    ds,WORD PTR [ecx-0x73f3107d]
  406837:	xor    ch,BYTE PTR [eax+0x1f]
  40683a:	bound  ecx,QWORD PTR [eax+0x1fb49137]
  406840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406841:	arpl   WORD PTR [edx+0x7d],si
  406844:	dec    edi
  406845:	sbb    al,0x4f
  406847:	popa   
  406848:	ret    
  406849:	adc    eax,0xbdf325dc
  40684e:	jns    0x4068cb
  406850:	imul   edx,DWORD PTR [eax-0x77425332],0xffffffe3
  406857:	js     0x406855
  406859:	xor    edi,DWORD PTR [edx]
  40685b:	outs   dx,DWORD PTR ds:[esi]
  40685c:	gs push ebp
  40685e:	or     DWORD PTR [edx-0x67],ebx
  406861:	popa   
  406862:	adc    al,0x2a
  406864:	(bad)  
  406865:	scas   al,BYTE PTR es:[edi]
  406866:	sub    eax,eax
  406868:	or     al,0xbe
  40686a:	imul   BYTE PTR [edi+eiz*8+0x11]
  40686e:	clc    
  40686f:	and    eax,0xf3f928b1
  406874:	or     al,0xb5
  406876:	clc    
  406877:	jle    0x40688f
  406879:	icebp  
  40687a:	dec    esp
  40687b:	test   ebx,eax
  40687d:	inc    edx
  40687e:	push   esp
  40687f:	test   BYTE PTR [ecx],cl
  406881:	xchg   ebp,eax
  406882:	ss loopne 0x40688f
  406885:	gs add bh,ch
  406888:	push   eax
  406889:	int    0xa0
  40688b:	(bad)  
  40688c:	test   eax,0x7ec09e76
  406891:	aam    0x11
  406893:	mov    ebp,0x3c304f70
  406898:	test   BYTE PTR [ecx+0x257d32f0],dl
  40689e:	sbb    al,bl
  4068a0:	inc    edx
  4068a1:	outs   dx,DWORD PTR ds:[esi]
  4068a2:	cmp    esi,ebp
  4068a4:	pushf  
  4068a5:	jg     0x406852
  4068a7:	inc    edx
  4068a8:	sbb    bl,BYTE PTR [esi+eax*2]
  4068ab:	popf   
  4068ac:	call   0xbc3a3d4a
  4068b1:	stc    
  4068b2:	pop    ds
  4068b3:	in     eax,dx
  4068b4:	dec    di
  4068b6:	sub    eax,0x57fac1c1
  4068bb:	push   ecx
  4068bc:	jp     0x4068ae
  4068be:	loop   0x4068d6
  4068c0:	mov    cl,0x20
  4068c2:	or     edx,DWORD PTR ds:0xba7d604c
  4068c8:	das    
  4068c9:	ror    DWORD PTR [ebx+0x5adc937f],0x60
  4068d0:	js     0x4068a4
  4068d2:	fs jo  0x40685d
  4068d5:	jge    0x40689e
  4068d7:	or     esi,ecx
  4068d9:	in     al,dx
  4068da:	scas   eax,DWORD PTR es:[edi]
  4068db:	pop    es
  4068dc:	mov    bh,0x84
  4068de:	cmp    DWORD PTR [si+0x34],0x1cd545b7
  4068e6:	jp     0x406914
  4068e8:	adc    dl,BYTE PTR [ebx]
  4068ea:	mov    edi,0x75612f7d
  4068ef:	sub    BYTE PTR [eax+0x0],ah
  4068f2:	mov    ds:0x6c79a836,al
  4068f7:	sbb    eax,0x313dc1b6
  4068fc:	dec    esi
  4068fd:	sub    DWORD PTR [esi-0x46],0xee735b82
  406904:	fwait
  406905:	js     0x40692c
  406907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406908:	mov    al,ds:0x7edca83a
  40690d:	mov    ds:0x6b5b6337,al
  406912:	mov    ebx,0xface694f
  406917:	mov    edi,0x344c8a4
  40691c:	xchg   ecx,eax
  40691d:	jno    0x406922
  40691f:	mov    bh,0x94
  406921:	bound  eax,QWORD PTR [edi+eax*4+0x77a9852d]
  406928:	dec    esi
  406929:	idiv   BYTE PTR [edx]
  40692b:	loope  0x40692d
  40692d:	xor    al,0xa8
  40692f:	add    dx,dx
  406932:	xor    ch,BYTE PTR [ecx]
  406934:	jecxz  0x406928
  406936:	imul   esp,DWORD PTR [ecx+0x42],0xb57a974b
  40693d:	push   ebx
  40693e:	mov    ebx,DWORD PTR [eax+0x77]
  406941:	nop
  406942:	jmp    0x406970
  406944:	sub    al,0x1c
  406946:	jmp    0x5b8b7810
  40694b:	pop    es
  40694c:	mov    al,ds:0xcda7f8d7
  406951:	mov    ebp,0xf699a312
  406956:	inc    ecx
  406957:	test   al,0x8c
  406959:	cmc    
  40695a:	js     0x4069d2
  40695c:	mov    al,0x7f
  40695e:	jne    0x406979
  406960:	or     al,0xf
  406962:	xor    eax,0xe7e3063e
  406967:	push   ds
  406968:	fcmovnb st,st(5)
  40696a:	sub    ch,BYTE PTR ds:0xa675bec5
  406970:	sub    bh,BYTE PTR [ebp+0x389b3b81]
  406976:	push   es
  406977:	mov    ch,0x7e
  406979:	sbb    bh,ah
  40697b:	push   edx
  40697c:	sub    BYTE PTR [edi-0x39],ah
  40697f:	arpl   WORD PTR [ebx-0x17dc98b2],sp
  406985:	mov    al,bl
  406987:	mov    BYTE PTR ds:0xee99834f,ch
  40698d:	test   eax,0xa940b7d0
  406992:	cdq    
  406993:	inc    esp
  406994:	jns    0x40697d
  406996:	xchg   ebx,eax
  406997:	out    0xb7,eax
  406999:	pop    ecx
  40699a:	jecxz  0x406a19
  40699c:	in     al,dx
  40699d:	f2xm1  
  40699f:	mov    ds:0x5032630f,eax
  4069a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069a5:	inc    ecx
  4069a6:	sbb    al,0x28
  4069a8:	aaa    
  4069a9:	retf   0x9be2
  4069ac:	xchg   ebx,eax
  4069ad:	fsub   DWORD PTR [bx+si-0x4a]
  4069b1:	mov    eax,DWORD PTR [eax-0x42]
  4069b4:	lahf   
  4069b5:	leave  
  4069b6:	sub    al,BYTE PTR [esi-0x61]
  4069b9:	sbb    eax,0xcd9fcf9e
  4069be:	add    al,0xe2
  4069c0:	data16 aas 
  4069c2:	stc    
  4069c3:	fbstp  TBYTE PTR [esi+esi*2+0x4f51d3eb]
  4069ca:	adc    eax,0x5ef41785
  4069cf:	fndisi(8087 only) 
  4069d1:	test   cl,dl
  4069d3:	stc    
  4069d4:	adc    esp,DWORD PTR [eax+0x4c830d71]
  4069da:	xchg   edx,eax
  4069db:	xor    al,0xb3
  4069dd:	call   0x908db7df
  4069e2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069e4:	xchg   ecx,eax
  4069e5:	(bad)  
  4069e6:	repnz in al,dx
  4069e8:	cmp    BYTE PTR [eax],bh
  4069ea:	add    ch,ch
  4069ec:	mov    ebx,0x63838fb4
  4069f1:	sbb    ebp,edx
  4069f3:	or     ebp,DWORD PTR [edx]
  4069f5:	sbb    eax,eax
  4069f7:	sar    DWORD PTR [esi+0x61dc8840],cl
  4069fd:	jo     0x4069e4
  4069ff:	stc    
  406a00:	rcl    DWORD PTR [eax-0x60],1
  406a03:	push   edi
  406a04:	jle    0x4069e8
  406a06:	dec    edi
  406a07:	add    BYTE PTR [edi+ebx*4-0x59a047b7],dh
  406a0e:	push   edi
  406a0f:	ds es or al,0x5c
  406a13:	adc    WORD PTR [edx],dx
  406a16:	in     eax,dx
  406a17:	cmp    al,0xf5
  406a19:	test   eax,0xbeb79b7
  406a1e:	mov    dh,0x19
  406a20:	jae    0x4069dc
  406a22:	out    0xa5,eax
  406a24:	sbb    dh,dl
  406a26:	push   0x75
  406a28:	data16 jecxz 0x4069e0
  406a2b:	clc    
  406a2c:	fild   QWORD PTR [esi+0x4c]
  406a2f:	and    al,0x59
  406a31:	xlat   BYTE PTR ds:[ebx]
  406a32:	lods   al,BYTE PTR ds:[esi]
  406a33:	sbb    edi,DWORD PTR [edx-0x622250ec]
  406a39:	pusha  
  406a3a:	into   
  406a3b:	xlat   BYTE PTR ds:[ebx]
  406a3c:	jl     0x406a4c
  406a3e:	sbb    al,0xce
  406a40:	inc    ebx
  406a41:	lock cmc 
  406a43:	jns    0x406aa9
  406a45:	xor    BYTE PTR ds:0xcc42183f,cl
  406a4b:	pop    ss
  406a4c:	add    DWORD PTR [esi],0x5717e3a3
  406a52:	jne    0x406a62
  406a54:	leave  
  406a55:	push   edx
  406a56:	cmp    DWORD PTR [ebx],ebx
  406a58:	add    eax,0x4c57278b
  406a5d:	nop
  406a5e:	aam    0xf7
  406a60:	imul   eax,esi,0x4
  406a63:	adc    DWORD PTR [ebp-0x7b],ebp
  406a66:	xor    BYTE PTR [eax-0x42bf7d62],bh
  406a6c:	jmp    0x3128:0xe7a10d22
  406a73:	fstp   QWORD PTR [edi+eax*8+0x2d]
  406a77:	xor    edi,0xffffff9f
  406a7a:	stos   DWORD PTR es:[edi],eax
  406a7b:	scas   eax,DWORD PTR es:[edi]
  406a7c:	add    edx,0x20
  406a7f:	mov    ecx,0xbcbf94f1
  406a84:	mov    BYTE PTR [eax+ecx*2-0x3451e856],dl
  406a8b:	test   BYTE PTR [edi-0x2e5c5b9f],bh
  406a91:	int3   
  406a92:	xchg   ebp,eax
  406a93:	sbb    ebp,DWORD PTR [esp+edi*8+0x16]
  406a97:	mov    edx,0x16773bd9
  406a9c:	pop    ds
  406a9d:	mov    dl,0xb5
  406a9f:	xor    al,0x1b
  406aa1:	push   ds
  406aa2:	xor    eax,0xc438dbf0
  406aa7:	or     al,BYTE PTR [edx]
  406aa9:	inc    esp
  406aaa:	jne    0x406abf
  406aac:	cmp    dh,BYTE PTR [edi]
  406aae:	inc    edx
  406aaf:	pop    eax
  406ab0:	push   ecx
  406ab1:	mov    WORD PTR [ebx-0x65aa7a62],?
  406ab7:	push   ebx
  406ab8:	add    esp,DWORD PTR [ecx+0x65]
  406abb:	imul   ecx,DWORD PTR [edx-0x144785fc],0x62
  406ac2:	sti    
  406ac3:	jge    0x406aee
  406ac5:	add    eax,DWORD PTR [ebp-0x75]
  406ac8:	push   esi
  406ac9:	sub    al,0xdc
  406acb:	jge    0x406b11
  406acd:	sahf   
  406ace:	lods   eax,DWORD PTR ds:[esi]
  406acf:	in     eax,dx
  406ad0:	sar    DWORD PTR [ebp+0x6f],1
  406ad3:	shr    DWORD PTR [eax+eax*4],0x53
  406ad7:	mov    cl,0xa
  406ad9:	aas    
  406ada:	sar    BYTE PTR [edi+0x17022d88],0x32
  406ae1:	fsubrp st(4),st
  406ae3:	inc    ebp
  406ae4:	hlt    
  406ae5:	call   0xc45e5a6d
  406aea:	pop    ss
  406aeb:	hlt    
  406aec:	xor    DWORD PTR [ebp-0x3],edx
  406aef:	loop   0x406b4a
  406af1:	or     al,0x3a
  406af3:	icebp  
  406af4:	in     al,0x85
  406af6:	les    esi,FWORD PTR [esi+edi*1-0x11be3e35]
  406afd:	ret    
  406afe:	dec    eax
  406aff:	mov    ds:0xbd96fb57,eax
  406b04:	(bad)  
  406b05:	push   ecx
  406b06:	pop    es
  406b07:	test   eax,0x86323bee
  406b0c:	inc    ebx
  406b0d:	lea    eax,[esi]
  406b0f:	jne    0x406b02
  406b11:	push   eax
  406b12:	aas    
  406b13:	jnp    0x406b29
  406b15:	jno    0x406afb
  406b17:	ins    DWORD PTR es:[edi],dx
  406b18:	cmp    dh,bl
  406b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b1b:	or     BYTE PTR [edi+0x39921480],0xbe
  406b22:	push   ebx
  406b23:	(bad)  
  406b24:	arpl   WORD PTR [ecx],si
  406b26:	push   ebx
  406b27:	out    dx,al
  406b28:	lea    eax,[esi-0x7e]
  406b2b:	(bad)  
  406b2c:	popa   
  406b2d:	push   DWORD PTR [edi+0x3b12fa37]
  406b33:	jb     0x406b2d
  406b35:	pop    ebx
  406b36:	scas   al,BYTE PTR es:[edi]
  406b37:	jmp    0xb4146df9
  406b3c:	add    BYTE PTR [ebx],al
  406b3e:	idiv   BYTE PTR [eax+0x75f45cb2]
  406b44:	jo     0x406b9f
  406b46:	xchg   DWORD PTR gs:[edi+edi*4+0x19],edi
  406b4b:	(bad)  
  406b4c:	dec    esp
  406b4d:	push   eax
  406b4e:	test   BYTE PTR [ebx-0x3ca9b73d],dh
  406b54:	cmp    eax,0x4cdb96a
  406b59:	sub    DWORD PTR [edx],0xbb330139
  406b5f:	daa    
  406b60:	and    BYTE PTR [ebx+0x2a],dh
  406b63:	inc    eax
  406b64:	or     BYTE PTR [ebx+0x35],dl
  406b67:	cmp    eax,DWORD PTR [edi]
  406b69:	push   esp
  406b6a:	push   es
  406b6b:	mov    edi,0xacf19acb
  406b70:	xchg   BYTE PTR [esp+ebx*8+0x5c9321],ch
  406b77:	ds pop ebx
  406b79:	and    dl,BYTE PTR es:[ebx-0x2d]
  406b7d:	jmp    0xb089c9dd
  406b82:	aam    0xa
  406b84:	push   ecx
  406b85:	fisttp QWORD PTR [edi+0x1a4b028d]
  406b8b:	inc    edx
  406b8c:	pop    ecx
  406b8d:	ins    DWORD PTR es:[edi],dx
  406b8e:	es retf 0xec84
  406b92:	mov    esi,0xbbf83f86
  406b97:	mov    ds:0xd40d514e,eax
  406b9c:	lods   eax,DWORD PTR ds:[esi]
  406b9d:	push   esp
  406b9e:	loop   0x406b52
  406ba0:	jno    0x406bd6
  406ba2:	int3   
  406ba3:	xchg   edx,eax
  406ba4:	lds    ebx,FWORD PTR [eiz*2-0x591fb204]
  406bab:	loope  0x406b65
  406bad:	call   0xe74e:0x5ac67424
  406bb4:	test   DWORD PTR [eax+ebx*2+0xbe4de51],0x219e6697
  406bbf:	fwait
  406bc0:	lock dec eax
  406bc2:	mov    ch,0x71
  406bc4:	lahf   
  406bc5:	inc    esp
  406bc6:	fwait
  406bc7:	sub    bl,0x72
  406bca:	je     0x406baf
  406bcc:	das    
  406bcd:	int3   
  406bce:	fyl2x  
  406bd0:	inc    edx
  406bd1:	pop    ebx
  406bd2:	mov    ecx,0x475c6190
  406bd7:	ins    DWORD PTR es:[edi],dx
  406bd8:	mov    dl,0x1
  406bda:	cmp    eax,0x63d96be7
  406bdf:	jne    0x406bd7
  406be1:	cs mov bl,dl
  406be4:	lods   al,BYTE PTR ds:[esi]
  406be5:	or     ebp,DWORD PTR [ecx+0x50084a89]
  406beb:	les    eax,FWORD PTR [eax+0x8]
  406bee:	leave  
  406bef:	stos   BYTE PTR es:[edi],al
  406bf0:	in     al,dx
  406bf1:	jmp    0x98e0:0x91749192
  406bf8:	sub    al,0x5a
  406bfa:	and    ebx,DWORD PTR [ecx-0x32]
  406bfd:	pop    edi
  406bfe:	test   DWORD PTR [ecx+0x4a],edx
  406c01:	std    
  406c02:	xchg   ebx,eax
  406c03:	cmp    bh,BYTE PTR [edi+eax*8-0xbaa4ce7]
  406c0a:	sbb    al,0x1b
  406c0c:	(bad)  
  406c0d:	jmp    0xe71c3560
  406c12:	push   eax
  406c13:	sbb    esi,DWORD PTR [ebx-0x4e32e012]
  406c19:	pop    ss
  406c1a:	jle    0x406bd4
  406c1c:	pop    ds
  406c1d:	test   BYTE PTR [esi+0x5173ec4c],dh
  406c23:	cmp    esp,DWORD PTR [eax+esi*8-0x38781c9b]
  406c2a:	hlt    
  406c2b:	mov    cl,0x3
  406c2d:	xchg   DWORD PTR [edx+0x63d832f1],ebx
  406c33:	xchg   esp,eax
  406c34:	inc    esp
  406c35:	out    0x2c,eax
  406c37:	in     eax,dx
  406c38:	xor    bh,BYTE PTR [edi+0x762f7b81]
  406c3e:	aad    0x23
  406c40:	test   al,0x19
  406c42:	cmc    
  406c43:	push   esp
  406c44:	inc    eax
  406c45:	div    BYTE PTR [edx]
  406c47:	jns    0x406c56
  406c49:	push   edi
  406c4a:	rcr    BYTE PTR [esi-0x6f24d7fe],cl
  406c50:	xor    al,0xf6
  406c52:	mov    ch,0xf1
  406c54:	lahf   
  406c55:	and    ebx,edi
  406c57:	mov    dl,0x86
  406c59:	push   ds
  406c5a:	inc    ecx
  406c5b:	mov    eax,ds:0x53fcbb1
  406c60:	jae    0x406cab
  406c62:	cmp    bl,ch
  406c64:	dec    edx
  406c65:	jo     0x406c3b
  406c67:	mov    bl,BYTE PTR [ebp+ebx*4-0x23f4d979]
  406c6e:	push   ecx
  406c6f:	cdq    
  406c70:	ins    BYTE PTR es:[edi],dx
  406c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c72:	ja     0x406c95
  406c74:	mov    es,WORD PTR [eax+edi*4-0x64]
  406c78:	cdq    
  406c79:	rol    BYTE PTR [ebx+0x4a],cl
  406c7c:	stc    
  406c7d:	sbb    BYTE PTR [eax+0x8],ah
  406c80:	or     BYTE PTR [ebp+0x20],ah
  406c83:	mov    cl,0x15
  406c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c86:	xchg   esi,eax
  406c87:	scas   al,BYTE PTR es:[edi]
  406c88:	xor    al,0x59
  406c8a:	ror    BYTE PTR [esi-0x1cc4a74c],cl
  406c90:	and    BYTE PTR [ebx+0x22d8a6e0],cl
  406c96:	out    dx,eax
  406c97:	adc    eax,0xc0cd4f78
  406c9c:	addr16 mov ds:0x5436,al
  406ca0:	inc    edx
  406ca1:	pop    ebx
  406ca2:	push   es
  406ca3:	adc    dl,BYTE PTR [ebx]
  406ca5:	mov    eax,0xc3971a3c
  406caa:	fcomp  QWORD PTR [edx+0x630e01f3]
  406cb0:	and    ebx,ecx
  406cb2:	mov    ch,BYTE PTR [edx]
  406cb4:	inc    ebp
  406cb5:	mov    eax,ds:0x8b198abf
  406cba:	stos   BYTE PTR es:[edi],al
  406cbb:	sub    ah,BYTE PTR [esi+edx*2]
  406cbe:	imul   ebx,DWORD PTR [edi+0x56],0xffffffc5
  406cc2:	mov    esp,0xdae7c66b
  406cc7:	in     al,dx
  406cc8:	pop    eax
  406cc9:	and    eax,0x8884fb30
  406cce:	into   
  406ccf:	scas   eax,DWORD PTR es:[edi]
  406cd0:	pop    ecx
  406cd1:	add    dh,BYTE PTR [ebp+0x2b433e87]
  406cd7:	ja     0x406ce3
  406cd9:	fucomp st(5)
  406cdb:	mov    edx,0xd343b887
  406ce0:	xor    al,0xdd
  406ce2:	cmp    ch,BYTE PTR [ecx]
  406ce4:	dec    ebx
  406ce5:	jecxz  0x406cb8
  406ce7:	pop    ebp
  406ce8:	adc    edi,esi
  406cea:	mov    bh,BYTE PTR [esi+eax*8-0x1d078ae2]
  406cf1:	out    0x45,eax
  406cf3:	mov    DWORD PTR [ebx-0x22],edx
  406cf6:	daa    
  406cf7:	mov    eax,0x227fe25c
  406cfc:	loop   0x406cc7
  406cfe:	pop    ds
  406cff:	xlat   BYTE PTR ds:[ebx]
  406d00:	aaa    
  406d01:	add    ecx,DWORD PTR [ebx+0x4e]
  406d04:	dec    ebp
  406d05:	adc    edx,ecx
  406d07:	ds push es
  406d09:	pop    esi
  406d0a:	rcl    edi,1
  406d0c:	into   
  406d0d:	ror    DWORD PTR [esi],1
  406d0f:	cmp    eax,0x6a0f61e6
  406d14:	fbld   TBYTE PTR [ecx]
  406d16:	and    al,0x2d
  406d18:	mov    ebx,0x2b6ebbee
  406d1d:	inc    edx
  406d1e:	add    eax,0x260a5be5
  406d23:	mov    dl,0xc2
  406d25:	adc    BYTE PTR [edx],0x41
  406d28:	je     0x406cfb
  406d2a:	inc    ebp
  406d2b:	out    0x36,al
  406d2d:	mov    ds:0x3f78ef46,al
  406d32:	(bad)  
  406d34:	or     al,0xb8
  406d36:	(bad)  
  406d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d38:	jnp    0x406cd0
  406d3a:	adc    BYTE PTR [edx+0x52],ah
  406d3d:	xsaveopt [edx-0x26]
  406d41:	jne    0x406d02
  406d43:	cli    
  406d44:	cmp    bh,0x1f
  406d47:	ret    
  406d48:	sbb    edi,DWORD PTR [ebx]
  406d4a:	mov    eax,eax
  406d4c:	pusha  
  406d4d:	shl    al,1
  406d4f:	aaa    
  406d50:	(bad)  
  406d51:	jo     0x406d08
  406d53:	adc    DWORD PTR [edx],esi
  406d55:	and    al,0xe1
  406d57:	xchg   ebp,eax
  406d58:	mov    esp,0xa6e4364a
  406d5d:	push   esi
  406d5e:	outs   dx,DWORD PTR ds:[esi]
  406d5f:	outs   dx,DWORD PTR ds:[esi]
  406d60:	dec    edi
  406d61:	in     al,dx
  406d62:	mov    eax,0xcb0134f9
  406d67:	xor    ecx,DWORD PTR [ecx-0x1]
  406d6a:	jecxz  0x406da9
  406d6c:	xor    dh,BYTE PTR [edi]
  406d6e:	push   ebx
  406d6f:	mov    ds:0x23988ef9,al
  406d74:	not    DWORD PTR [edi+0x181abdc]
  406d7a:	les    ebx,FWORD PTR [eax+ebp*1-0x9]
  406d7e:	sti    
  406d7f:	jl     0x406dde
  406d81:	or     dl,bh
  406d83:	arpl   WORD PTR [edx-0x3dfe9f14],ax
  406d89:	jbe    0x406d87
  406d8b:	int    0x23
  406d8d:	das    
  406d8e:	nop
  406d8f:	dec    eax
  406d90:	push   ds
  406d91:	or     eax,0x5fa1302a
  406d96:	push   ecx
  406d97:	and    BYTE PTR [esp+ebx*1],0xe
  406d9b:	in     eax,dx
  406d9c:	fbstp  TBYTE PTR [ecx-0x7c0d3275]
  406da2:	fld    TBYTE PTR [eax+0xe3a9080]
  406da8:	jb     0x406d8a
  406daa:	sub    eax,DWORD PTR [ecx-0x3f0143b9]
  406db0:	mov    ch,0xb1
  406db2:	inc    ebp
  406db3:	xchg   esi,eax
  406db4:	xor    cl,BYTE PTR [edi-0xf9e4278]
  406dba:	mov    dh,0x4e
  406dbc:	pop    eax
  406dbd:	repnz dec ecx
  406dbf:	retf   0x1c9c
  406dc2:	into   
  406dc3:	and    eax,0xdc4f4893
  406dc8:	inc    eax
  406dc9:	mov    al,ds:0xbaa386fc
  406dce:	mov    WORD PTR [edi],es
  406dd0:	sti    
  406dd1:	mov    esp,DWORD PTR [edx]
  406dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd4:	or     esi,DWORD PTR [edi]
  406dd6:	(bad)  
  406dd7:	aas    
  406dd8:	mov    bl,0xf
  406dda:	pop    ds
  406ddb:	xchg   DWORD PTR ds:0xdf60874d,ecx
  406de1:	ins    DWORD PTR es:[edi],dx
  406de2:	cwde   
  406de3:	js     0x406e3f
  406de5:	sti    
  406de6:	loopne 0x406d77
  406de8:	int    0x6b
  406dea:	lock jmp 0x4cfb521c
  406df0:	mov    eax,ds:0x1e388847
  406df5:	dec    ebx
  406df6:	stc    
  406df7:	xchg   edi,eax
  406df8:	mov    ds:0x39a3b2a1,eax
  406dfd:	cli    
  406dfe:	loopne 0x406e3e
  406e00:	retf   
  406e01:	test   DWORD PTR [esi+0x2f00aee1],esp
  406e07:	(bad)  
  406e08:	out    dx,eax
  406e09:	mov    esi,0x35de04a6
  406e0e:	sub    al,ah
  406e10:	stos   BYTE PTR es:[edi],al
  406e11:	mov    eax,ds:0x9722f8d9
  406e16:	div    DWORD PTR [edi+ebp*2]
  406e19:	push   esi
  406e1a:	xchg   ebp,eax
  406e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e1c:	in     eax,0x9a
  406e1e:	inc    ecx
  406e1f:	push   0xffffffa5
  406e21:	aaa    
  406e22:	cli    
  406e23:	sti    
  406e24:	lods   al,BYTE PTR ds:[esi]
  406e25:	cmp    DWORD PTR [ecx-0x37],esp
  406e28:	cmp    eax,0x693f3201
  406e2d:	mov    ch,0x5b
  406e2f:	sub    DWORD PTR [ebx+edx*8+0x648c39ae],edx
  406e36:	pop    ecx
  406e37:	fst    DWORD PTR [edx]
  406e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e3a:	out    0xf5,al
  406e3c:	sub    al,0xbe
  406e3e:	xor    eax,0x728e69bd
  406e43:	pop    ecx
  406e44:	xchg   edx,eax
  406e45:	mov    dh,0x10
  406e47:	pop    edx
  406e48:	mov    ebp,0x66597d12
  406e4d:	mov    cl,0x1
  406e4f:	xchg   ebx,eax
  406e50:	aaa    
  406e51:	mov    eax,0x79066d84
  406e56:	xor    esi,DWORD PTR [edi-0x53574e41]
  406e5c:	imul   eax,DWORD PTR [ecx+ebx*2+0x65d130d4],0xdd580472
  406e67:	aaa    
  406e68:	mov    bl,0x46
  406e6a:	mov    dh,0x88
  406e6c:	js     0x406e7b
  406e6e:	jnp    0x406e8d
  406e70:	lahf   
  406e71:	shr    DWORD PTR [bp+si],0xd4
  406e75:	pop    ss
  406e76:	shl    DWORD PTR [ebx-0x22],0xe0
  406e7a:	adc    ecx,DWORD PTR [ebp+0x59]
  406e7d:	dec    edi
  406e7e:	sar    DWORD PTR [ebp-0x62],1
  406e81:	cdq    
  406e82:	add    DWORD PTR [eax+0x600a16d8],ecx
  406e88:	and    DWORD PTR [edx],ebp
  406e8a:	adc    bh,BYTE PTR ds:0x79940f83
  406e90:	ins    BYTE PTR es:[edi],dx
  406e91:	mov    edi,0x4202c815
  406e96:	in     al,dx
  406e97:	imul   esi,DWORD PTR [ebx+0x45c80b46],0xc
  406e9e:	push   edx
  406e9f:	scas   eax,DWORD PTR es:[edi]
  406ea0:	sbb    DWORD PTR [ecx-0x6a082997],esp
  406ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea7:	div    eax
  406ea9:	or     edi,DWORD PTR [eax]
  406eab:	repnz fstp DWORD PTR [esi-0x28]
  406eaf:	outs   dx,DWORD PTR ds:[esi]
  406eb0:	jmp    0x315f:0xa76987d7
  406eb7:	adc    eax,0x16c1b1d3
  406ebc:	popf   
  406ebd:	in     eax,dx
  406ebe:	push   DWORD PTR [eax-0x623804cb]
  406ec4:	adc    eax,0x2f7306e4
  406ec9:	out    0xba,al
  406ecb:	dec    ecx
  406ecc:	and    eax,0x1bdda9a5
  406ed1:	hlt    
  406ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed3:	mov    ah,0xa
  406ed5:	xor    ebp,edi
  406ed7:	add    ebp,DWORD PTR [ebp-0x631c528d]
  406edd:	(bad)  
  406ede:	clc    
  406edf:	jo     0x406f36
  406ee1:	adc    BYTE PTR [edi],0x7c
  406ee4:	inc    eax
  406ee5:	jmp    0x406e7a
  406ee7:	fild   WORD PTR gs:[ebp-0x9]
  406eeb:	shr    BYTE PTR [edi+0x41],cl
  406eee:	jecxz  0x406ef7
  406ef0:	xchg   ebx,eax
  406ef1:	xchg   DWORD PTR [edi*4+0x5c0dc0cc],eax
  406ef8:	jb     0x406f41
  406efa:	imul   ebp,DWORD PTR gs:[edx-0x6d5e8615],0xa2785bee
  406f05:	and    BYTE PTR [edx-0x50],bh
  406f08:	not    DWORD PTR [ebx+0x37]
  406f0b:	lds    ecx,FWORD PTR [ebp+0x51]
  406f0e:	or     al,0x54
  406f10:	jle    0x406efc
  406f12:	(bad)  
  406f13:	out    dx,eax
  406f14:	fistp  QWORD PTR [ebx-0x14]
  406f17:	mov    ebx,0x278163a5
  406f1c:	loop   0x406ed9
  406f1e:	daa    
  406f1f:	pop    es
  406f20:	mov    bh,BYTE PTR [ebx]
  406f22:	add    dh,cl
  406f24:	xchg   esi,eax
  406f25:	mov    al,0x11
  406f27:	xchg   esp,eax
  406f28:	mov    ch,0xe9
  406f2a:	or     BYTE PTR cs:[edx+eiz*8-0x3cafcab8],bh
  406f32:	das    
  406f33:	sbb    BYTE PTR [edx],dl
  406f35:	icebp  
  406f36:	fisub  DWORD PTR [ebx+0x21fce2b1]
  406f3c:	mov    ds:0x75829f1e,al
  406f41:	push   cs
  406f42:	retf   
  406f43:	adc    DWORD PTR [ebx],ebp
  406f45:	dec    esi
  406f46:	sbb    eax,0x93d106ae
  406f4b:	sbb    DWORD PTR [esi+ebp*4+0x5308f865],ecx
  406f52:	push   ebx
  406f53:	pcmpgtd mm1,QWORD PTR [edi-0x4]
  406f57:	icebp  
  406f58:	stos   DWORD PTR es:[edi],eax
  406f59:	push   cs
  406f5a:	js     0x406fa6
  406f5c:	les    esi,FWORD PTR [ecx-0x23]
  406f5f:	ins    DWORD PTR es:[edi],dx
  406f60:	out    0x85,eax
  406f62:	iret   
  406f63:	jg     0x406fc2
  406f65:	(bad)  
  406f66:	pop    ebx
  406f67:	sbb    bl,BYTE PTR [ebx-0x7f]
  406f6a:	push   cs
  406f6b:	retf   
  406f6c:	jae    0x406f89
  406f6e:	out    0xca,eax
  406f70:	lea    ecx,[ebp+0x4ab3c478]
  406f76:	push   esi
  406f77:	cld    
  406f78:	mov    BYTE PTR [edi+0x2bd8325f],ah
  406f7e:	out    dx,eax
  406f7f:	inc    esp
  406f80:	xchg   edx,eax
  406f81:	lods   al,BYTE PTR ds:[esi]
  406f82:	mov    ebx,0x24aa1ebe
  406f87:	sub    al,0x29
  406f89:	bound  ebx,QWORD PTR [ecx]
  406f8b:	(bad)  
  406f8c:	icebp  
  406f8d:	add    DWORD PTR [eax],edi
  406f8f:	mov    esp,0xf3c91770
  406f94:	push   edx
  406f95:	mov    eax,0x8403e37d
  406f9a:	add    DWORD PTR [edx-0x4d],0x326db008
  406fa1:	or     cl,ah
  406fa3:	aas    
  406fa4:	mov    BYTE PTR [edx-0x4822ff54],bh
  406faa:	mov    ebx,0x1d96aea1
  406faf:	sub    DWORD PTR [eax+0x2f09e91a],edx
  406fb5:	js     0x406f9a
  406fb7:	rcr    BYTE PTR [edx-0x5c3556a6],0x48
  406fbe:	mov    bh,0xae
  406fc0:	and    bh,ch
  406fc2:	pop    ebp
  406fc3:	in     al,0x9c
  406fc5:	fcomp  st(4)
  406fc7:	push   esp
  406fc8:	xor    DWORD PTR [edx-0x3a],eax
  406fcb:	(bad)  
  406fcc:	push   cs
  406fcd:	pop    edx
  406fce:	dec    edx
  406fcf:	mov    ecx,0xa1c2930b
  406fd4:	dec    esp
  406fd5:	inc    ebx
  406fd6:	iret   
  406fd7:	xchg   ebp,eax
  406fd8:	add    ah,BYTE PTR [eax]
  406fda:	push   ecx
  406fdb:	xchg   esp,eax
  406fdc:	jp     0x406f66
  406fde:	sub    eax,0xf32d53a5
  406fe3:	inc    esp
  406fe4:	jmp    0xa8955288
  406fe9:	lods   eax,DWORD PTR ds:[esi]
  406fea:	and    BYTE PTR [eax+0x3bb64c50],al
  406ff0:	add    eax,0x1fcf7b50
  406ff5:	or     bh,0x99
  406ff8:	ja     0x406fdb
  406ffa:	jo     0x407011
  406ffc:	in     eax,0x99
  406ffe:	ins    DWORD PTR es:[edi],dx
  406fff:	inc    ecx
  407000:	pop    eax
  407001:	mov    al,0x16
  407003:	jge    0x40705a
  407005:	dec    ebx
  407006:	(bad)  
  407007:	and    esp,DWORD PTR ds:0x28dec2fd
  40700d:	cmp    DWORD PTR [ecx+0x53],ebx
  407010:	rcr    ebx,cl
  407012:	xor    BYTE PTR [eax],0xb0
  407015:	push   ss
  407016:	inc    esi
  407017:	jg     0x40703d
  407019:	push   edi
  40701a:	mov    cl,0xe1
  40701c:	push   esp
  40701d:	mov    ecx,0xdc162a29
  407022:	mov    WORD PTR [ebx+0x2],ds
  407025:	adc    al,0x49
  407027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407028:	push   eax
  407029:	lods   al,BYTE PTR ds:[esi]
  40702a:	mov    eax,ds:0xe79f1f62
  40702f:	sbb    ah,0xb9
  407032:	mov    ebx,0xa1a66d3c
  407037:	xchg   edi,eax
  407038:	retf   
  407039:	xor    BYTE PTR [ecx+0x35dcfa52],al
  40703f:	mov    bl,0x19
  407041:	jae    0x407084
  407043:	pop    ebp
  407044:	add    bh,0x7c
  407047:	push   eax
  407048:	inc    ebx
  407049:	and    bh,al
  40704b:	imul   edi,DWORD PTR [edi],0x418d67d2
  407051:	jp     0x407082
  407053:	in     eax,0x2a
  407055:	inc    esi
  407056:	fldl2e 
  407058:	das    
  407059:	imul   ebp,DWORD PTR [ebx],0x7c
  40705c:	sbb    esp,esp
  40705e:	jge    0x4070ab
  407060:	test   eax,0x10712eb8
  407065:	push   ds
  407066:	je     0x407078
  407068:	mov    ch,0x11
  40706a:	iret   
  40706b:	adc    ebp,esp
  40706d:	add    eax,0xcc04db16
  407072:	imul   edx,DWORD PTR [edi],0xffffffd8
  407075:	xor    ch,BYTE PTR [ebp+ebx*4+0x36c370f]
  40707c:	lods   eax,DWORD PTR ds:[esi]
  40707d:	or     ecx,ebx
  40707f:	dec    edi
  407080:	jne    0x4070d4
  407082:	add    ch,cl
  407084:	push   0xffffffcd
  407086:	in     eax,dx
  407087:	push   0x8edfc778
  40708c:	add    eax,0x6817bfa5
  407091:	loope  0x407067
  407093:	jmp    0x67c5:0xbeb4c8ef
  40709a:	sar    eax,1
  40709c:	xchg   esi,eax
  40709d:	jbe    0x407089
  40709f:	ficomp DWORD PTR [edi+ebp*2+0x10]
  4070a3:	adc    al,0x9c
  4070a5:	les    eax,FWORD PTR [eax-0x41d606fd]
  4070ab:	dec    edi
  4070ac:	jae    0x40708c
  4070ae:	mov    WORD PTR [edx+0x2dc1a626],ds
  4070b4:	into   
  4070b5:	call   0xd082:0xc49517d5
  4070bc:	xchg   ebx,eax
  4070bd:	dec    ebx
  4070be:	ss pop edx
  4070c0:	jl     0x40710a
  4070c2:	jnp    0x4070bc
  4070c4:	call   FWORD PTR [ecx-0x47]
  4070c7:	sub    eax,0x4f0abd2d
  4070cc:	cmp    edi,DWORD PTR [esi+0x1a]
  4070cf:	rcr    BYTE PTR [ebp+eiz*2-0x59f6d8aa],cl
  4070d6:	sub    bl,bl
  4070d8:	mov    esp,0x46d0df5d
  4070dd:	test   edi,esi
  4070df:	lock pop ecx
  4070e1:	jbe    0x40714d
  4070e3:	ins    BYTE PTR es:[edi],dx
  4070e4:	and    BYTE PTR [ecx],0xf6
  4070e7:	outs   dx,BYTE PTR ds:[esi]
  4070e8:	jb     0x407086
  4070ea:	shl    BYTE PTR ds:0xaf5e6fb5,0xfa
  4070f1:	sub    dh,BYTE PTR [esi]
  4070f3:	(bad)  
  4070f4:	out    0x99,eax
  4070f6:	adc    esp,ecx
  4070f8:	adc    DWORD PTR [edi+0x1790c596],edx
  4070fe:	mov    ecx,0xd3c3f16c
  407103:	and    al,0xd9
  407105:	(bad)  
  407107:	dec    eax
  407108:	leave  
  407109:	push   cs
  40710a:	push   cs
  40710b:	(bad)  
  40710d:	push   0x45
  40710f:	or     ch,BYTE PTR [esi+ecx*4]
  407112:	push   ebx
  407113:	ret    0xbbc4
  407116:	sub    ch,ah
  407118:	fstp   DWORD PTR [ecx+0x45]
  40711b:	(bad)  
  40711c:	(bad)  [edx-0x6b]
  40711f:	pop    ebx
  407120:	sbb    edi,DWORD PTR [edx+0x39116a09]
  407126:	dec    ecx
  407127:	adc    dh,dl
  407129:	jg     0x4070b9
  40712b:	sub    eax,0x8f7404b9
  407130:	adc    eax,0x3d81bb89
  407135:	adc    eax,0xac4c91bc
  40713a:	pop    eax
  40713b:	neg    bh
  40713d:	movsx  esi,ax
  407140:	and    al,0x50
  407142:	mov    al,ds:0xa685368a
  407147:	pushf  
  407148:	push   es
  407149:	outs   dx,BYTE PTR ds:[esi]
  40714a:	popa   
  40714b:	mov    esi,0xac60f05b
  407150:	mov    bh,0x78
  407152:	xchg   DWORD PTR [edx],ebp
  407154:	pop    ss
  407155:	jb     0x407189
  407157:	test   BYTE PTR [ebx-0xd],dh
  40715a:	es out 0x0,al
  40715d:	aaa    
  40715e:	lds    eax,FWORD PTR [eax]
  407160:	jnp    0x40714b
  407162:	jg     0x40715c
  407164:	push   es
  407165:	inc    ecx
  407166:	adc    eax,0xcf0c26d
  40716b:	cld    
  40716c:	xor    ax,0x3712
  407170:	ja     0x40713c
  407172:	or     ah,BYTE PTR [esp+ecx*4-0x36c2c647]
  407179:	mov    edx,0x1b3edae2
  40717e:	fwait
  40717f:	iret   
  407180:	pop    ss
  407181:	push   edx
  407182:	fwait
  407183:	xchg   ecx,eax
  407184:	jle    0x40712b
  407186:	mov    edx,0x3387e4cd
  40718b:	inc    edi
  40718c:	ret    
  40718d:	xor    ch,BYTE PTR [edi-0x78]
  407190:	cmp    eax,0x1a36749
  407195:	sub    DWORD PTR [ebx],esp
  407197:	in     eax,0x8e
  407199:	stc    
  40719a:	pop    eax
  40719b:	cmp    eax,0x3a4595dd
  4071a0:	or     ecx,esi
  4071a2:	add    BYTE PTR [edx+0x7],0xc0
  4071a6:	add    eax,0x8a38e0a8
  4071ab:	loopne 0x4071ae
  4071ad:	pop    esi
  4071ae:	loop   0x4071ff
  4071b0:	jg     0x407214
  4071b2:	outs   dx,DWORD PTR ds:[esi]
  4071b3:	pop    ss
  4071b4:	cwde   
  4071b5:	inc    edi
  4071b6:	xchg   edi,eax
  4071b7:	or     eax,0x294a3fdb
  4071bc:	aas    
  4071bd:	push   es
  4071be:	mov    ecx,0xc0260665
  4071c3:	lods   al,BYTE PTR ds:[esi]
  4071c4:	jl     0x4071b2
  4071c6:	inc    edx
  4071c7:	lahf   
  4071c8:	xchg   edx,eax
  4071c9:	push   es
  4071ca:	mov    bh,0x24
  4071cc:	stc    
  4071cd:	inc    edi
  4071ce:	fist   WORD PTR [edi+ebx*8+0x4d]
  4071d2:	sub    edx,eax
  4071d4:	enter  0x4d00,0xd
  4071d8:	iret   
  4071d9:	stc    
  4071da:	push   cs
  4071db:	test   al,0x6b
  4071dd:	add    DWORD PTR [eax-0x5ae7fd35],ebx
  4071e3:	xlat   BYTE PTR ds:[ebx]
  4071e4:	pop    ebx
  4071e5:	or     eax,0x14def8c6
  4071ea:	xchg   ecx,eax
  4071eb:	repz xor al,0x12
  4071ee:	cmp    eax,0xe8b94eb1
  4071f3:	jb     0x4071de
  4071f5:	test   eax,ebp
  4071f7:	cmp    BYTE PTR [ebx],dl
  4071f9:	sbb    eax,0xbed053cb
  4071fe:	nop
  4071ff:	stos   DWORD PTR es:[edi],eax
  407200:	mov    ds:0x79b272be,eax
  407205:	fbstp  TBYTE PTR [ebx]
  407207:	mov    bl,0xae
  407209:	jnp    0x407239
  40720b:	or     BYTE PTR [ecx-0x21],al
  40720e:	xor    ah,BYTE PTR [edi+0x2c295bb8]
  407214:	hlt    
  407215:	or     DWORD PTR [edi+0x1e7d08cd],eax
  40721b:	test   BYTE PTR [eax+0x2e],bh
  40721e:	or     BYTE PTR [ebp-0x10],0x6d
  407222:	or     ecx,ebx
  407224:	dec    edi
  407225:	xchg   BYTE PTR ds:0x317f58f1,bh
  40722b:	push   ebp
  40722c:	dec    esp
  40722d:	jno    0x40725f
  40722f:	int    0xe5
  407231:	mov    ds:0x51bf5c97,al
  407236:	sub    al,0xfb
  407238:	dec    ebx
  407239:	imul   esi,DWORD PTR [esi+0x45684c3d],0xffffff86
  407240:	aad    0x7e
  407242:	or     ebp,0x2c
  407245:	(bad)  
  407246:	aad    0xc2
  407248:	xor    ah,dl
  40724a:	fldenv [ebx]
  40724c:	js     0x407208
  40724e:	adc    BYTE PTR [ebx+0x19],dl
  407251:	leave  
  407252:	or     al,0x7c
  407254:	xchg   ecx,eax
  407255:	aaa    
  407256:	push   edi
  407257:	stos   BYTE PTR es:[edi],al
  407258:	and    eax,0xe6017c
  40725d:	xchg   ecx,ebx
  40725f:	xchg   ecx,eax
  407260:	jb     0x407290
  407262:	sahf   
  407263:	push   es
  407264:	ror    bh,0x43
  407267:	xchg   ecx,eax
  407268:	xor    al,0x7a
  40726a:	loope  0x4072c6
  40726c:	addr16 cwde 
  40726e:	loope  0x4072aa
  407270:	mov    eax,ds:0x17b8b37c
  407275:	pop    edx
  407276:	(bad)  
  407278:	loope  0x407237
  40727a:	mov    al,0xe2
  40727c:	push   cs
  40727d:	fidivr DWORD PTR [ebx+0x8b9e73c]
  407283:	add    eax,0x57dfcb9
  407288:	pop    ds
  407289:	in     al,0xf0
  40728b:	sub    bl,al
  40728d:	adc    al,bh
  40728f:	dec    esi
  407290:	pop    esi
  407291:	mov    ch,0x72
  407293:	leave  
  407294:	call   0x354a:0xd620a82d
  40729b:	jmp    0x4072e7
  40729d:	cdq    
  40729e:	sbb    eax,0xd8b8d2ac
  4072a3:	retf   0xeb54
  4072a6:	adc    ebp,edi
  4072a8:	mov    ebp,0xd918f0dd
  4072ad:	xchg   ecx,eax
  4072ae:	sub    DWORD PTR [edi],ebp
  4072b0:	push   esp
  4072b1:	add    BYTE PTR cs:[eax+0x6a],0xfb
  4072b6:	lea    ecx,[eax]
  4072b8:	data16 es jl 0x4072e6
  4072bc:	jmp    0x254a:0x871ab320
  4072c3:	push   ss
  4072c4:	pop    edi
  4072c5:	fs call 0xe1c2417e
  4072cb:	jl     0x4072db
  4072cd:	jg     0x407332
  4072cf:	mov    ecx,0xe9d4f4f1
  4072d4:	mov    dh,0x97
  4072d6:	lock pop ebx
  4072d8:	fimul  DWORD PTR [eax+0x12a80db2]
  4072de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072e0:	jle    0x4072b5
  4072e2:	loopne 0x4072bf
  4072e4:	fs mov al,0x67
  4072e7:	out    0xec,al
  4072e9:	pop    esp
  4072ea:	adc    eax,0x699120df
  4072ef:	mov    ?,ebp
  4072f1:	mov    dl,0x56
  4072f3:	pushf  
  4072f4:	sub    BYTE PTR [edx+0x76],cl
  4072f7:	inc    ebx
  4072f8:	stos   DWORD PTR es:[edi],eax
  4072f9:	mov    al,ds:0xb0cf52e3
  4072fe:	iret   
  4072ff:	call   0xa456:0x8209e733
  407306:	adc    eax,0x67b5e10d
  40730b:	mov    ch,0x88
  40730d:	mov    ds,esi
  40730f:	and    DWORD PTR [ebx-0x5f3a1306],esi
  407315:	xor    al,0xa3
  407317:	dec    esi
  407318:	xchg   esi,eax
  407319:	sbb    ecx,ebp
  40731b:	call   0xadbb9ce8
  407320:	cmc    
  407321:	xor    al,BYTE PTR [eax+0x3c88cb33]
  407327:	cmp    ch,BYTE PTR [ebx+0x17]
  40732a:	clc    
  40732b:	and    eax,0x51115504
  407330:	arpl   WORD PTR [edi+edx*2-0x497e9c3],cx
  407337:	mov    ecx,0xa264769e
  40733c:	jge    0x407392
  40733e:	stc    
  40733f:	xchg   esi,eax
  407340:	call   FWORD PTR [ecx+ebp*4+0x741aca2b]
  407347:	ds in  al,0x51
  40734a:	xor    BYTE PTR [ecx-0x338e7129],dh
  407350:	sbb    ebx,DWORD PTR [edi+0x714cbc9d]
  407356:	(bad)  
  407357:	fisttp QWORD PTR [ebx+0x7c]
  40735a:	mov    bl,0x71
  40735c:	test   BYTE PTR [edx],0x60
  40735f:	jmp    0x292b:0x36dd2ac1
  407366:	or     edx,DWORD PTR [eax-0x68ae40ba]
  40736c:	fdiv   st(6),st
  40736e:	lds    edx,FWORD PTR [ebx]
  407370:	addr16 dec esi
  407372:	fidiv  WORD PTR [ebp-0x24]
  407375:	push   ss
  407376:	xchg   edi,eax
  407377:	ins    DWORD PTR es:[edi],dx
  407378:	lea    esp,[ebx+0x13]
  40737b:	hlt    
  40737c:	xor    eax,ebp
  40737e:	arpl   dx,bx
  407380:	fs push ss
  407382:	cs popf 
  407384:	in     eax,dx
  407385:	jp     0x4073a9
  407387:	sbb    cl,bh
  407389:	mov    ecx,0x3ceda8f6
  40738e:	inc    edi
  40738f:	retf   0x8da5
  407392:	push   edx
  407393:	dec    ebx
  407394:	jbe    0x407357
  407396:	cmovb  eax,DWORD PTR [bp+si+0x2e]
  40739b:	test   DWORD PTR [ebx-0x5b],edx
  40739e:	mov    ebp,DWORD PTR [esi]
  4073a0:	mov    ds:0x44575072,al
  4073a5:	cs push ebx
  4073a7:	sar    ah,cl
  4073a9:	push   esi
  4073aa:	xchg   esi,eax
  4073ab:	scas   eax,DWORD PTR es:[edi]
  4073ac:	lds    edi,FWORD PTR ds:0xdb9ad3e1
  4073b2:	out    dx,eax
  4073b3:	mov    WORD PTR ds:0x9141aad3,ds
  4073b9:	push   ebx
  4073ba:	push   es
  4073bb:	aad    0xde
  4073bd:	adc    cl,BYTE PTR [ebx]
  4073bf:	jnp    0x40743c
  4073c1:	sbb    DWORD PTR [eax],ebx
  4073c3:	xor    BYTE PTR ds:0xa10180f4,al
  4073c9:	jg     0x4073a9
  4073cb:	add    BYTE PTR [eax-0x1c],0x12
  4073cf:	shl    BYTE PTR [ebx],1
  4073d1:	mov    ecx,0xe55791ff
  4073d6:	add    BYTE PTR [esi+ecx*4],dh
  4073d9:	mov    esp,0x8d1f255f
  4073de:	and    bl,BYTE PTR ds:0xc8c7df5f
  4073e4:	in     eax,0xed
  4073e6:	jns    0x40737d
  4073e8:	rcl    bl,0x22
  4073eb:	call   0x84d4:0xfd275c0d
  4073f2:	pop    esi
  4073f3:	jg     0x407446
  4073f5:	lock jg 0x40746e
  4073f8:	ror    BYTE PTR [edx-0x67],1
  4073fb:	lods   al,BYTE PTR ds:[esi]
  4073fc:	fs fucomp st(7)
  4073ff:	fs add al,0xff
  407402:	jge    0x407395
  407404:	pop    ebp
  407405:	pop    esi
  407406:	mov    ds:0xebe2361,eax
  40740b:	jno    0x4073fb
  40740d:	sbb    eax,0x72125af0
  407412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407413:	sbb    al,0x59
  407415:	mov    ds:0xca747dfe,al
  40741a:	hlt    
  40741b:	pop    ds
  40741c:	stc    
  40741d:	sbb    edx,ebp
  40741f:	mov    eax,DWORD PTR [eax+eiz*1]
  407422:	sub    al,0x88
  407424:	sbb    esp,eax
  407426:	mov    ebp,0x2499aa51
  40742b:	cs inc ebx
  40742d:	jb     0x40747a
  40742f:	mov    dl,0xc9
  407431:	imul   ecx,DWORD PTR [di-0x6215],0xffffff9e
  407437:	mov    al,0x78
  407439:	jl     0x407479
  40743b:	out    0x64,eax
  40743d:	sti    
  40743e:	dec    edx
  40743f:	or     bl,BYTE PTR [ecx]
  407441:	add    BYTE PTR ds:[edx],ah
  407444:	adc    ecx,DWORD PTR [edx+0x400284d5]
  40744a:	sbb    ebp,ebx
  40744c:	cld    
  40744d:	loope  0x4073ec
  40744f:	outs   dx,DWORD PTR ds:[esi]
  407450:	pop    esi
  407451:	push   ecx
  407452:	mov    eax,ds:0x9d87f536
  407457:	jp     0x407415
  407459:	cwde   
  40745a:	leave  
  40745b:	(bad)  
  40745c:	xlat   BYTE PTR ds:[ebx]
  40745d:	mov    eax,ds:0xcb19e20f
  407462:	lea    esp,[ebx-0x4fa6e9e6]
  407468:	pop    eax
  407469:	jbe    0x4074bf
  40746b:	adc    ecx,DWORD PTR [ecx+0x141d70cd]
  407471:	inc    edx
  407472:	and    eax,0xfda84f02
  407477:	mov    bl,0x12
  407479:	(bad)  
  40747a:	in     al,0x35
  40747c:	loopne 0x4074e9
  40747e:	sbb    eax,0x3dc3e44d
  407483:	jmp    0xf51abe6a
  407488:	inc    eax
  407489:	push   0x1d
  40748b:	mov    esi,0x71f95379
  407490:	aas    
  407491:	cmp    ecx,DWORD PTR [esi+ebp*8]
  407494:	out    0x54,al
  407496:	(bad)  [ecx+ebx*8+0x19249c64]
  40749d:	xlat   BYTE PTR ds:[ebx]
  40749e:	dec    ebp
  40749f:	lds    ebp,FWORD PTR ds:0xfa00aab8
  4074a5:	dec    edi
  4074a6:	stos   BYTE PTR es:[edi],al
  4074a7:	call   0x31aac8a0
  4074ac:	leave  
  4074ad:	sbb    DWORD PTR [ebx-0x7eff84d0],esp
  4074b3:	jg     0x40751b
  4074b5:	mov    bl,0xaf
  4074b7:	pop    ecx
  4074b8:	(bad)  
  4074ba:	dec    edi
  4074bb:	add    dh,BYTE PTR [ecx-0x69efeef6]
  4074c1:	fwait
  4074c2:	loopne 0x4074c2
  4074c4:	mov    bl,0x90
  4074c6:	xlat   BYTE PTR ds:[ebx]
  4074c7:	or     DWORD PTR es:[eax-0x40],0x3b76630a
  4074cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074d0:	mov    BYTE PTR [ecx],ah
  4074d2:	frstor ds:0x9fe4a1c8
  4074d8:	push   ss
  4074d9:	sbb    al,0x98
  4074db:	out    dx,eax
  4074dc:	frstor [edi]
  4074de:	not    BYTE PTR ds:0xefdd92ff
  4074e4:	adc    eax,0x52652409
  4074e9:	out    dx,al
  4074ea:	es (bad) 
  4074ec:	adc    bh,BYTE PTR [ebp+0x5c8c0865]
  4074f2:	mov    dl,BYTE PTR cs:[edx-0x24]
  4074f6:	add    DWORD PTR [eiz*4+0xda50b5c],0x2d87a8ef
  407501:	pop    esp
  407502:	fsubr  st,st(5)
  407504:	sbb    dl,ah
  407506:	xchg   ebx,eax
  407507:	and    edi,DWORD PTR [edx-0x1a]
  40750a:	(bad)  
  40750b:	test   al,0x28
  40750d:	jmp    FWORD PTR [esi-0x38]
  407510:	cmp    eax,0xdcd58568
  407515:	ret    
  407516:	sbb    DWORD PTR [ebx],esp
  407518:	pop    es
  407519:	cmp    eax,0xfba8e777
  40751e:	ss nop
  407520:	and    eax,0xa9fcd259
  407525:	add    esp,0xffffffd2
  407528:	frstor [esp+esi*4+0x2f4046b4]
  40752f:	fs scas eax,DWORD PTR es:[edi]
  407531:	jnp    0x4075a7
  407533:	test   al,0x4d
  407535:	pop    es
  407536:	rcr    esp,0x76
  407539:	cld    
  40753a:	mov    al,ds:0xc6f87eb6
  40753f:	mov    eax,0xb1b05f74
  407544:	neg    BYTE PTR ds:0xf742a3f3
  40754a:	or     eax,0xc11cb4c4
  40754f:	add    eax,0xafac3d9a
  407554:	jge    0x40750b
  407556:	mov    DWORD PTR [edx-0x62],edi
  407559:	rcr    ebp,0x85
  40755c:	sahf   
  40755d:	nop
  40755e:	arpl   WORD PTR [ecx],bx
  407560:	or     esi,DWORD PTR ds:0xe2d40008
  407566:	pop    ebx
  407567:	fwait
  407568:	xchg   esi,eax
  407569:	pusha  
  40756a:	ret    
  40756b:	lods   al,BYTE PTR ds:[si]
  40756d:	in     eax,0xba
  40756f:	mov    dl,0xb6
  407571:	iret   
  407572:	mov    eax,0xa7190f42
  407577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407578:	repz dec ecx
  40757a:	imul   ebp,DWORD PTR gs:[edx-0x1331a0be],0xa5936a5f
  407585:	mov    edx,0x3e0d96b8
  40758a:	dec    esi
  40758b:	adc    ebx,ebx
  40758d:	push   0x56
  40758f:	pushf  
  407590:	push   cs
  407591:	add    eax,0x327b6a1b
  407596:	je     0x40759c
  407598:	mov    ebp,0xb1a10b7a
  40759d:	jl     0x407567
  40759f:	bound  esi,QWORD PTR [ebp+0x46e79fe3]
  4075a5:	dec    BYTE PTR ds:0xd3f18f80
  4075ab:	sbb    ah,BYTE PTR [esi]
  4075ad:	push   esp
  4075ae:	jmp    0x8fd0:0x16360754
  4075b5:	iret   
  4075b6:	add    dh,dh
  4075b8:	call   0x63bf09a4
  4075bd:	imul   esi,DWORD PTR [eax-0x12],0x440a41ec
  4075c4:	jp     0x40762d
  4075c6:	lahf   
  4075c7:	add    eax,ebx
  4075c9:	int3   
  4075ca:	push   edx
  4075cb:	arpl   cx,di
  4075cd:	push   ebx
  4075ce:	ja     0x407637
  4075d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075d1:	test   BYTE PTR [ecx],dh
  4075d3:	mov    ch,0x35
  4075d5:	mov    ch,0xaf
  4075d7:	inc    ebp
  4075d8:	(bad)  
  4075d9:	or     DWORD PTR ds:0xb6f1cdc,ebx
  4075df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075e0:	xor    eax,0x6c05551f
  4075e5:	xchg   DWORD PTR [edx-0x463df640],esp
  4075eb:	mov    WORD PTR [ecx-0x76],?
  4075ee:	popf   
  4075ef:	das    
  4075f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075f1:	mov    dl,0x6b
  4075f3:	repnz add DWORD PTR [eax+0x3030e819],ecx
  4075fa:	ret    0xcf5c
  4075fd:	stc    
  4075fe:	mov    ch,0x94
  407600:	push   ebp
  407601:	loopne 0x407615
  407603:	bound  edi,QWORD PTR [ebp+0x204fb07]
  407609:	and    eax,0xd1c38b58
  40760e:	or     al,BYTE PTR [eax+0x33]
  407611:	sar    DWORD PTR ds:0x55dfb899,cl
  407617:	rcl    DWORD PTR [esi],cl
  407619:	stos   BYTE PTR es:[edi],al
  40761a:	imul   eax,ecx,0xffffff96
  40761d:	sub    ch,ch
  40761f:	fs shl dl,0x5
  407623:	xchg   edi,eax
  407624:	retf   
  407625:	mov    al,ds:0x95ac9cde
  40762a:	inc    ecx
  40762b:	into   
  40762c:	and    ebx,DWORD PTR [edx+ebp*2-0x6f]
  407630:	test   DWORD PTR [esi+0x28],edx
  407633:	loope  0x40765d
  407635:	mov    esi,0xf0af6fdc
  40763a:	in     eax,0x68
  40763c:	pop    ss
  40763d:	ret    
  40763e:	repz bound edx,QWORD PTR [ecx]
  407641:	mov    esp,0x312fedc9
  407646:	sub    BYTE PTR [edx+0x2e],dl
  407649:	dec    eax
  40764a:	jb     0x407648
  40764c:	dec    eax
  40764d:	mov    ds,WORD PTR [edi+0x5697f56e]
  407653:	and    BYTE PTR gs:[eax-0x3afaf1cf],bh
  40765a:	repnz lods eax,DWORD PTR ds:[esi]
  40765c:	popa   
  40765d:	imul   ebp,DWORD PTR [edx],0x66
  407660:	mov    dl,0x65
  407662:	pop    eax
  407663:	or     DWORD PTR [ebx-0x4b],edx
  407666:	fcmovnbe st,st(1)
  407668:	shl    edi,cl
  40766a:	cli    
  40766b:	cmp    eax,eax
  40766d:	out    dx,eax
  40766e:	out    dx,al
  40766f:	lahf   
  407670:	mov    ecx,DWORD PTR [edi]
  407672:	in     al,0xc8
  407674:	push   ebp
  407675:	xchg   edi,eax
  407676:	inc    esi
  407677:	push   ds
  407678:	ins    DWORD PTR es:[edi],dx
  407679:	jl     0x407616
  40767b:	fcomp  QWORD PTR [ecx-0x6c]
  40767e:	dec    edx
  40767f:	aaa    
  407680:	sbb    DWORD PTR [ebx],0x78
  407683:	mov    edi,?
  407685:	add    edi,DWORD PTR [ebp+edx*4-0x3cb80ca7]
  40768c:	pop    ecx
  40768d:	movd   mm7,DWORD PTR [edi+0x4d]
  407691:	sub    ecx,ecx
  407693:	or     dh,BYTE PTR [ebx]
  407695:	rcl    edi,0x58
  407698:	rol    DWORD PTR [ecx],cl
  40769a:	sub    BYTE PTR [edi],0xae
  40769d:	dec    ebp
  40769e:	mov    BYTE PTR [esp+esi*2],ch
  4076a1:	cmp    DWORD PTR [bp+di-0x5543],edi
  4076a6:	fidiv  DWORD PTR [eax]
  4076a8:	sbb    eax,0x1009ab87
  4076ad:	push   edx
  4076ae:	sbb    al,0xc3
  4076b0:	fsub   QWORD PTR [ebp+0x1c0dd8d3]
  4076b6:	out    0x73,eax
  4076b8:	(bad)  
  4076b9:	(bad)  
  4076ba:	push   ebp
  4076bb:	xchg   esp,eax
  4076bc:	ret    0x57bc
  4076bf:	ret    0xc573
  4076c2:	jnp    0x4076e4
  4076c4:	sbb    al,0xda
  4076c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c7:	sbb    BYTE PTR [esi+0x14a0eb55],ah
  4076cd:	xor    edi,esp
  4076cf:	sbb    eax,DWORD PTR [ecx-0x313f15c1]
  4076d5:	add    al,0x3f
  4076d7:	cwde   
  4076d8:	jnp    0x4076dd
  4076da:	sub    esp,edx
  4076dc:	dec    esi
  4076dd:	xlat   BYTE PTR ds:[ebx]
  4076de:	cld    
  4076df:	lods   eax,DWORD PTR ds:[esi]
  4076e0:	fst    QWORD PTR [edi-0x740ab71d]
  4076e6:	popf   
  4076e7:	xor    al,0x2d
  4076e9:	dec    edi
  4076ea:	push   eax
  4076eb:	repnz or edi,DWORD PTR [eax+0x66]
  4076ef:	add    al,0x34
  4076f1:	add    eax,edx
  4076f3:	adc    eax,DWORD PTR [ecx-0x5d]
  4076f6:	int3   
  4076f7:	mov    ds:0xccf00633,eax
  4076fc:	add    eax,0xd9a8b119
  407701:	aas    
  407702:	mov    ss,ebx
  407704:	adc    DWORD PTR [esp+ebp*1-0x30],esi
  407708:	mov    bh,0xd5
  40770a:	div    esi
  40770c:	xor    eax,0x3303beed
  407711:	les    esi,FWORD PTR [esi-0x43]
  407714:	pop    edx
  407715:	jno    0x4076e6
  407717:	adc    eax,0x20d90ef2
  40771c:	or     esp,DWORD PTR [ecx-0x64]
  40771f:	jge    0x407763
  407721:	jmp    0xb3962238
  407726:	sbb    edx,DWORD PTR [esi-0x71eca556]
  40772c:	pop    eax
  40772d:	repz jle 0x4077ab
  407730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407731:	jo     0x407711
  407733:	sub    edx,DWORD PTR [edx+0x49]
  407736:	je     0x4076b8
  407738:	in     al,dx
  407739:	push   ss
  40773a:	cmp    edi,esi
  40773c:	push   cs
  40773d:	das    
  40773e:	cmp    DWORD PTR [ecx+0x7a746ffd],edi
  407744:	cld    
  407745:	jmp    0xdea16d9a
  40774a:	or     al,0xf2
  40774c:	test   al,0xcf
  40774e:	push   ebp
  40774f:	fild   DWORD PTR [edi+0x1]
  407752:	sbb    BYTE PTR [ebp+0x7b286b2b],ah
  407758:	sub    eax,0x97b6d30f
  40775d:	scas   eax,DWORD PTR es:[edi]
  40775e:	sub    DWORD PTR [edi+0x13],esi
  407761:	xchg   BYTE PTR fs:[eax+0x23],al
  407765:	mov    esp,0x84dcca64
  40776a:	mov    ebx,fs
  40776c:	pop    ss
  40776d:	sahf   
  40776e:	or     BYTE PTR [eax-0x1b],0xdd
  407772:	test   DWORD PTR [ebp+edi*1-0x1dd5eb44],esi
  407779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40777a:	outs   dx,BYTE PTR ds:[esi]
  40777b:	jecxz  0x4077f7
  40777d:	jbe    0x40773d
  40777f:	jle    0x40778b
  407781:	or     edx,ebp
  407783:	adc    DWORD PTR [edi+0x1e740dd2],edx
  407789:	fidiv  WORD PTR [ecx]
  40778b:	inc    edi
  40778c:	cmp    eax,0xdac41c2a
  407791:	(bad)  
  407792:	xchg   esp,eax
  407793:	jmp    0x40778f
  407795:	dec    edi
  407796:	fwait
  407797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407798:	ret    0x99de
  40779b:	mov    DWORD PTR [ecx-0x13],edi
  40779e:	out    0x30,eax
  4077a0:	mov    DWORD PTR [ecx],eax
  4077a2:	ja     0x407817
  4077a4:	pop    ebx
  4077a5:	mov    ds:0xb995142,al
  4077aa:	out    dx,al
  4077ab:	and    edi,ebx
  4077ad:	retf   0x2821
  4077b0:	mov    bh,0x14
  4077b2:	stc    
  4077b3:	and    eax,0x315be2ad
  4077b8:	xchg   ecx,eax
  4077b9:	mov    ds:0xa7551b0,al
  4077be:	xchg   ebp,eax
  4077bf:	push   ss
  4077c0:	into   
  4077c1:	mov    DWORD PTR [edx+0x2a],ebp
  4077c4:	and    al,0xc0
  4077c6:	sbb    DWORD PTR [ecx-0x227f3810],eax
  4077cc:	mov    bl,0x60
  4077ce:	popa   
  4077cf:	pop    esp
  4077d0:	dec    ecx
  4077d1:	in     eax,0xdd
  4077d3:	lods   eax,DWORD PTR ds:[esi]
  4077d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077d5:	mov    ah,BYTE PTR [edi+0x57]
  4077d8:	xor    bh,dl
  4077da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077db:	push   eax
  4077dc:	mov    cl,0x7d
  4077de:	mov    ebp,0xfcf82bc9
  4077e3:	add    eax,DWORD PTR [ebp-0x5c]
  4077e6:	jne    0x4077e7
  4077e8:	mov    WORD PTR ss:[ecx],gs
  4077eb:	inc    ebp
  4077ec:	hlt    
  4077ed:	adc    al,BYTE PTR [bx-0x22fc]
  4077f2:	ror    DWORD PTR [esp+edx*1],cl
  4077f5:	sbb    ch,BYTE PTR [ebx-0x7d]
  4077f8:	aad    0xd6
  4077fa:	jp     0x40781a
  4077fc:	sub    al,0x16
  4077fe:	jns    0x4077cf
  407800:	cdq    
  407801:	pop    edi
  407802:	push   edi
  407803:	dec    esi
  407804:	shl    esi,0x86
  407807:	mov    ds:0xe34821e6,al
  40780c:	pop    ds
  40780d:	aam    0xf4
  40780f:	mov    eax,ds:0x428ca8a4
  407814:	xchg   esi,eax
  407815:	out    0xe7,al
  407817:	adc    ah,BYTE PTR [edx-0x5230bddf]
  40781d:	inc    edi
  40781e:	mul    DWORD PTR [ebx+0x71]
  407821:	retf   0x6375
  407824:	push   ebp
  407825:	cld    
  407826:	mov    edx,0xa3a47ca2
  40782b:	adc    eax,0xe949aa3d
  407830:	es mov dh,0x6d
  407833:	mov    bl,0x81
  407835:	pop    edx
  407836:	and    dl,BYTE PTR [esi-0x18]
  407839:	in     eax,0x84
  40783b:	jae    0x407891
  40783d:	stc    
  40783e:	outs   dx,BYTE PTR ds:[esi]
  40783f:	sbb    dh,BYTE PTR [esi-0x75dc2f06]
  407845:	dec    ebx
  407846:	arpl   WORD PTR [edi],bp
  407848:	out    dx,eax
  407849:	test   eax,0x47df0920
  40784e:	js     0x40782e
  407850:	arpl   WORD PTR ds:0x663b85c8,bx
  407856:	adc    ebp,esi
  407858:	cld    
  407859:	and    eax,eax
  40785b:	add    eax,DWORD PTR [ecx+0x36187c3d]
  407861:	ss sti 
  407863:	xchg   edx,eax
  407864:	jnp    0x4078bb
  407866:	sbb    edi,DWORD PTR [ecx]
  407868:	inc    edx
  407869:	aad    0xbe
  40786b:	lods   al,BYTE PTR ds:[esi]
  40786c:	dec    edx
  40786d:	test   BYTE PTR ds:0xb2292e9e,cl
  407873:	leave  
  407874:	pop    edi
  407875:	or     BYTE PTR [ebp+edi*2-0x14320ac2],dh
  40787c:	cmp    DWORD PTR [ecx],esi
  40787e:	jbe    0x4078b0
  407880:	cli    
  407881:	push   ebx
  407882:	pusha  
  407883:	loope  0x40780d
  407885:	imul   edx,DWORD PTR [ebp-0x61],0x48
  407889:	cli    
  40788a:	in     eax,dx
  40788b:	test   eax,0xcecf03af
  407890:	fdiv   QWORD PTR [esi-0x61]
  407893:	xchg   esi,eax
  407894:	mov    ch,0xf5
  407896:	test   al,0x18
  407898:	sub    DWORD PTR [edi+0x7a3c4403],eax
  40789e:	adc    bh,al
  4078a0:	retf   
  4078a1:	ins    DWORD PTR es:[edi],dx
  4078a2:	pop    ebp
  4078a3:	pop    eax
  4078a4:	push   ecx
  4078a5:	test   DWORD PTR [edi],ecx
  4078a7:	sub    al,0xfb
  4078a9:	mov    bl,0x89
  4078ab:	mov    edx,0xca871e55
  4078b0:	sub    al,0x90
  4078b2:	out    0x77,al
  4078b4:	imul   ebx,DWORD PTR [esi-0x3984f973],0x72eb665a
  4078be:	add    DWORD PTR [edx+esi*2],esi
  4078c1:	jecxz  0x407913
  4078c3:	jo     0x4078e4
  4078c5:	push   0x2b
  4078c7:	pop    ds
  4078c8:	add    eax,0xc0d18863
  4078cd:	jne    0x407921
  4078cf:	test   eax,0x58aea1e1
  4078d4:	jg     0x40789d
  4078d6:	stos   DWORD PTR es:[edi],eax
  4078d7:	call   0x6ee8:0xea82a32
  4078de:	mov    ebx,0x93be8924
  4078e3:	imul   eax,DWORD PTR [esi],0x21b4c973
  4078e9:	lods   al,BYTE PTR ds:[esi]
  4078ea:	fisttp WORD PTR [eax+0x31]
  4078ed:	xchg   ecx,eax
  4078ee:	popa   
  4078ef:	or     BYTE PTR [esi],bh
  4078f1:	out    0xf9,eax
  4078f3:	push   ds
  4078f4:	xchg   ecx,eax
  4078f5:	mov    ah,0x90
  4078f7:	push   edi
  4078f8:	inc    ebx
  4078f9:	in     al,0x9e
  4078fb:	xor    ebp,DWORD PTR [edx+0x0]
  4078fe:	hlt    
  4078ff:	push   esi
  407900:	loope  0x407952
  407902:	dec    ebp
  407903:	add    dl,BYTE PTR [esi]
  407905:	fld    TBYTE PTR [ebx-0x33]
  407908:	test   DWORD PTR [ebx+0x3d],0x2dfd6c60
  40790f:	xchg   BYTE PTR [edi],bh
  407911:	mov    eax,ds:0xca02669f
  407916:	aad    0x2b
  407918:	rcr    bh,cl
  40791a:	fmul   st,st(7)
  40791c:	dec    esi
  40791d:	or     DWORD PTR [eax+0x4b1c5674],ebp
  407923:	dec    edi
  407924:	add    DWORD PTR [ebx],esp
  407926:	shl    BYTE PTR [ebp+0x68f1f721],0x19
  40792d:	stos   BYTE PTR es:[edi],al
  40792e:	out    dx,eax
  40792f:	pop    ds
  407930:	loop   0x40798b
  407932:	std    
  407933:	(bad)  
  407934:	mov    ds:0x89f18917,eax
  407939:	enter  0x2682,0x69
  40793d:	fsub   QWORD PTR [esi-0x5d7b4b98]
  407943:	xlat   BYTE PTR ds:[ebx]
  407944:	ficom  WORD PTR [edx-0x25daf67f]
  40794a:	mov    eax,ds:0x68fa0446
  40794f:	mov    BYTE PTR [bp+si-0x78],bl
  407953:	int    0xf5
  407955:	push   ebp
  407956:	repnz out 0xe6,eax
  407959:	mov    ebx,ecx
  40795b:	outs   dx,BYTE PTR fs:[esi]
  40795d:	jns    0x407953
  40795f:	sbb    al,0x82
  407961:	and    ch,BYTE PTR [esi+0x5cca945e]
  407967:	xchg   esp,eax
  407968:	popf   
  407969:	fidivr WORD PTR [eax+ebx*4]
  40796c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40796d:	rcl    BYTE PTR [ebx-0xa8aa1d0],cl
  407973:	mov    ecx,0xe7f49630
  407978:	jns    0x407906
  40797a:	mov    ebx,DWORD PTR [edx+0xfac7a4]
  407980:	pop    ebp
  407981:	or     bl,BYTE PTR [esi]
  407983:	(bad)  [edi]
  407985:	push   eax
  407986:	sub    DWORD PTR [eax],ebp
  407988:	aaa    
  407989:	xchg   esi,eax
  40798a:	fs in  al,0x37
  40798d:	mov    esi,DWORD PTR [ecx]
  40798f:	ja     0x40793f
  407991:	test   DWORD PTR [ecx+0x4fff25dd],esp
  407997:	mov    ds:0x714a0c24,eax
  40799c:	push   0x35
  40799e:	lods   eax,DWORD PTR ds:[esi]
  40799f:	add    eax,0x67280f39
  4079a4:	and    ecx,DWORD PTR [ebx-0x77136733]
  4079aa:	stc    
  4079ab:	in     eax,dx
  4079ac:	mov    dl,0x3
  4079ae:	or     DWORD PTR [edx],ebx
  4079b0:	jmp    0x407932
  4079b2:	mov    al,ds:0x9c210c1
  4079b7:	(bad)  
  4079b8:	dec    esi
  4079b9:	sub    eax,0x7ae93a5b
  4079be:	popf   
  4079bf:	cmp    dl,BYTE PTR [edx-0x1c36dbea]
  4079c5:	loope  0x4079cf
  4079c7:	lock imul edx,DWORD PTR [ebp-0x2319e417],0xffffff82
  4079cf:	stos   DWORD PTR es:[edi],eax
  4079d0:	cmp    BYTE PTR [ebx+ebp*1],cl
  4079d3:	push   eax
  4079d4:	mov    eax,ds:0xda6b1407
  4079d9:	or     DWORD PTR [esi+edx*8-0x42],0x19
  4079de:	mov    ch,0xa8
  4079e0:	fcomp  DWORD PTR [esi-0x35ca3770]
  4079e6:	out    dx,eax
  4079e7:	ins    BYTE PTR es:[di],dx
  4079e9:	sub    bl,BYTE PTR [edi-0x787982b2]
  4079ef:	or     al,0xd0
  4079f1:	icebp  
  4079f2:	mov    al,ds:0x3cfe28ca
  4079f7:	xor    eax,0x80ea6b46
  4079fc:	fadd   st,st(7)
  4079fe:	add    DWORD PTR [esi-0x42],edi
  407a01:	jns    0x407a64
  407a03:	cmp    al,cl
  407a05:	jb     0x407a14
  407a07:	test   al,0xf9
  407a09:	(bad)  
  407a0a:	fwait
  407a0b:	mov    esi,0x35630d73
  407a10:	jmp    0x4079b3
  407a12:	test   DWORD PTR [edx+edx*4-0x3cf06bec],ebx
  407a19:	stos   DWORD PTR es:[edi],eax
  407a1a:	lods   al,BYTE PTR ds:[esi]
  407a1b:	push   ds
  407a1c:	xchg   BYTE PTR [edx-0xa7b3bf],bh
  407a22:	in     eax,dx
  407a23:	dec    ebp
  407a24:	mov    ecx,0xbc6efe71
  407a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a2a:	mov    edi,DWORD PTR [ebp-0x80]
  407a2d:	mov    cl,0xc2
  407a2f:	sar    cl,0x66
  407a32:	add    ch,0xed
  407a35:	iret   
  407a36:	mov    bh,0x38
  407a38:	and    DWORD PTR [eax],esi
  407a3a:	repnz sbb bh,BYTE PTR fs:[esp+edx*2-0x13915241]
  407a43:	pop    esp
  407a44:	jae    0x407aaa
  407a46:	in     al,dx
  407a47:	rol    edx,cl
  407a49:	cmc    
  407a4a:	je     0x407a97
  407a4c:	dec    esi
  407a4d:	add    eax,0x748beb26
  407a52:	ss jne 0x407a30
  407a55:	mov    ebx,0xabc9509b
  407a5a:	adc    ch,bh
  407a5c:	popa   
  407a5d:	mov    eax,ds:0x512c11cf
  407a62:	lods   al,BYTE PTR ds:[esi]
  407a63:	add    edi,DWORD PTR [ebp-0x1e]
  407a66:	ins    DWORD PTR es:[edi],dx
  407a67:	aad    0x45
  407a69:	sub    eax,0x91f2a093
  407a6e:	and    BYTE PTR [ebp-0x3e0bcdee],al
  407a74:	(bad)  
  407a75:	push   edi
  407a76:	sub    eax,0xb9ca44d2
  407a7b:	sub    eax,ecx
  407a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7e:	adc    DWORD PTR [ebp+0x49],0x611765b6
  407a85:	adc    esi,ebp
  407a87:	pop    ss
  407a88:	(bad)  
  407a89:	mov    eax,ds:0x56352ec
  407a8e:	sbb    eax,0x4912eede
  407a93:	xlat   BYTE PTR ds:[ebx]
  407a94:	adc    ah,BYTE PTR [ebx]
  407a96:	jp     0x407a4a
  407a98:	add    al,0x68
  407a9a:	in     al,dx
  407a9b:	dec    edx
  407a9c:	loope  0x407a9c
  407a9e:	push   esp
  407a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aa0:	call   0x1d4155df
  407aa5:	mov    bh,0x5e
  407aa7:	adc    BYTE PTR [ebp-0x5e0fdb79],ch
  407aad:	ffreep st(4)
  407aaf:	push   es
  407ab0:	idiv   DWORD PTR [esi-0x4e]
  407ab3:	mov    esi,0xcbe6ed3a
  407ab8:	imul   BYTE PTR [eax-0x5e5d7a5a]
  407abe:	repz repz dec eax
  407ac1:	loopne 0x407a68
  407ac3:	adc    DWORD PTR [ebx-0x59965cb5],ebp
  407ac9:	xchg   edi,eax
  407aca:	pop    bx
  407acc:	xor    ebp,DWORD PTR [edx]
  407ace:	xor    bl,BYTE PTR [ebx+0x37f5b0f8]
  407ad4:	mov    WORD PTR [edi+0x5b4db1cf],ss
  407ada:	inc    edi
  407adb:	iret   
  407adc:	and    DWORD PTR [ebx+0x62],edx
  407adf:	add    BYTE PTR [esp+ecx*4+0x46],bl
  407ae3:	add    ecx,eax
  407ae5:	aad    0xab
  407ae7:	inc    edx
  407ae8:	in     al,0xb
  407aea:	xlat   BYTE PTR ds:[ebx]
  407aeb:	or     BYTE PTR [ecx],ah
  407aed:	lods   eax,DWORD PTR ds:[esi]
  407aee:	stc    
  407aef:	repz lahf 
  407af1:	push   ebp
  407af2:	inc    esp
  407af3:	or     dl,ch
  407af5:	fidivr DWORD PTR [edx]
  407af7:	mov    al,ds:0xe7ec21e6
  407afc:	fdiv   st,st(6)
  407afe:	lea    esi,[esi+0x323c151b]
  407b04:	mov    ah,0x45
  407b06:	ror    edx,cl
  407b08:	xchg   esi,eax
  407b09:	out    0x36,eax
  407b0b:	push   ebx
  407b0c:	lock gs ror al,1
  407b10:	out    0x7d,eax
  407b12:	jp     0x407aca
  407b14:	call   0xd8a6:0xbe3d3176
  407b1b:	mov    bh,BYTE PTR [edi]
  407b1d:	loope  0x407abd
  407b1f:	scas   al,BYTE PTR es:[edi]
  407b20:	add    DWORD PTR [ebx+eiz*8],eax
  407b23:	sar    BYTE PTR [ecx+eax*8+0x2b43a3e6],0x1f
  407b2b:	jns    0x407ad3
  407b2d:	out    dx,al
  407b2e:	test   ah,dl
  407b30:	push   es
  407b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b32:	cmp    al,0xd6
  407b34:	stos   BYTE PTR es:[edi],al
  407b35:	inc    esp
  407b36:	(bad)  
  407b38:	nop
  407b39:	retf   
  407b3a:	stc    
  407b3b:	outs   dx,BYTE PTR ds:[esi]
  407b3c:	jmp    0xc7c27474
  407b41:	(bad)  [edx+0x32]
  407b44:	add    bh,dh
  407b46:	xlat   BYTE PTR ds:[ebx]
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x909d70e0
  407e5b:	mov    ch,0xa2
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	fs sbb dl,BYTE PTR ss:[ebp+esi*2-0x3b]
  407e6b:	aad    0xf9
  407e6d:	pop    ds
  407e6e:	sub    ebx,DWORD PTR [edx]
  407e70:	imul   esi,DWORD PTR [edx+0x7fceaaf],0xc175bea0
  407e7a:	xchg   ebx,eax
  407e7b:	add    cl,BYTE PTR [edi+0x9]
  407e7e:	push   ds
  407e7f:	(bad)  
  407e80:	lds    ecx,FWORD PTR [edx+0x448e3c95]
  407e86:	in     eax,0xb8
  407e88:	aad    0x91
  407e8a:	call   0x8a8b7022
  407e8f:	mov    ds:0x45aa5b09,eax
  407e94:	push   ds
  407e95:	adc    bh,cl
  407e97:	mov    ebp,0xd2cb7218
  407e9c:	adc    BYTE PTR [esi+0x452f13d9],cl
  407ea2:	pop    esp
  407ea3:	ds push 0xffffffe2
  407ea6:	lahf   
  407ea7:	mov    dl,0xed
  407ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eaa:	or     DWORD PTR [eax],ebp
  407eac:	rol    DWORD PTR [edi],cl
  407eae:	jecxz  0x407e7a
  407eb0:	out    dx,al
  407eb1:	and    eax,0x732c1d93
  407eb6:	scas   eax,DWORD PTR es:[edi]
  407eb7:	pusha  
  407eb8:	sbb    eax,0x3b9dfc46
  407ebd:	jnp    0x407ed5
  407ebf:	loopne 0x407ea5
  407ec1:	out    dx,al
  407ec2:	dec    ecx
  407ec3:	aas    
  407ec4:	out    dx,eax
  407ec5:	test   BYTE PTR [ebp+0xd],dl
  407ec8:	pop    eax
  407ec9:	popa   
  407eca:	sbb    ebx,DWORD PTR [ecx]
  407ecc:	fdivrp st(6),st
  407ece:	jmp    0xbff16206
  407ed3:	xchg   ecx,eax
  407ed4:	add    al,0xfa
  407ed6:	inc    edi
  407ed7:	mov    ebp,0xff398d50
  407edc:	xor    dh,al
  407ede:	lock sbb eax,0x70
  407ee2:	mov    bh,0x6e
  407ee4:	in     al,dx
  407ee5:	adc    eax,0x7fbb3cb9
  407eea:	lock je 0x407e7d
  407eed:	xchg   ebx,eax
  407eee:	test   BYTE PTR [esi+0x69fad652],bl
  407ef4:	popf   
  407ef5:	aas    
  407ef6:	lahf   
  407ef7:	jmp    0x90cd:0x430872dc
  407efe:	enter  0xf408,0xa
  407f02:	in     eax,dx
  407f03:	pop    ds
  407f04:	cmp    ecx,edi
  407f06:	and    ah,BYTE PTR [esi-0x2a]
  407f09:	mov    ecx,0xd2bad5c4
  407f0e:	xlat   BYTE PTR ds:[ebx]
  407f0f:	int3   
  407f10:	push   0x43
  407f12:	add    BYTE PTR [edi-0x5b4c9e27],ch
  407f18:	ja     0x407f95
  407f1a:	jo     0x407f23
  407f1c:	or     eax,DWORD PTR [esi+0x7850bb73]
  407f22:	jae    0x407ef8
  407f24:	mov    cl,0x4c
  407f26:	scas   al,BYTE PTR es:[edi]
  407f27:	scas   al,BYTE PTR es:[edi]
  407f28:	sub    DWORD PTR [edi],esp
  407f2a:	jmp    0x3359:0x68174ff3
  407f31:	loope  0x407f78
  407f33:	dec    edx
  407f34:	stc    
  407f35:	add    al,0xc9
  407f37:	loopne 0x407ecd
  407f39:	xor    edi,DWORD PTR gs:[esi-0x6]
  407f3d:	lods   al,BYTE PTR ds:[esi]
  407f3e:	xchg   ebp,eax
  407f3f:	aam    0xf
  407f41:	stos   DWORD PTR es:[edi],eax
  407f42:	and    DWORD PTR [ecx+0x4c],ecx
  407f45:	jmp    0xcaa0:0x8125559b
  407f4c:	pop    eax
  407f4d:	push   ecx
  407f4e:	ins    BYTE PTR es:[edi],dx
  407f4f:	in     eax,dx
  407f50:	loopne 0x407f47
  407f52:	sbb    BYTE PTR gs:[edi],bh
  407f55:	data16 jne 0x407f8b
  407f58:	ret    0x9d04
  407f5b:	inc    ebp
  407f5c:	push   DWORD PTR [eax]
  407f5e:	in     al,0xd9
  407f60:	lods   al,BYTE PTR ds:[esi]
  407f61:	enter  0xf695,0x8b
  407f65:	cdq    
  407f66:	out    dx,eax
  407f67:	(bad)
  407f6b:	and    DWORD PTR [ebx],edi
  407f6d:	stc    
  407f6e:	jo     0x407f84
  407f70:	(bad)  
  407f71:	lods   eax,DWORD PTR ds:[esi]
  407f72:	fs mov cl,0xa8
  407f75:	loop   0x407f66
  407f77:	scas   eax,DWORD PTR es:[edi]
  407f78:	adc    BYTE PTR [edx+0x4d],al
  407f7b:	div    BYTE PTR [ebx+0x359ee212]
  407f81:	lock cld 
  407f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f85:	mov    eax,0x52271d9c
  407f8a:	cmp    eax,DWORD PTR [eax]
  407f8c:	inc    edi
  407f8d:	bound  esp,QWORD PTR [edi-0x2d]
  407f90:	sub    DWORD PTR [esp+ebp*1],esi
  407f93:	push   eax
  407f94:	cmp    al,BYTE PTR [ecx+0x3fc2db36]
  407f9a:	pushf  
  407f9b:	mov    eax,0x17b59938
  407fa0:	imul   esi,DWORD PTR [edi],0xfffffffe
  407fa3:	push   ds
  407fa4:	mov    ds:0xda13d4d2,eax
  407fa9:	lea    ecx,[ebx-0x4d2e17e5]
  407faf:	sbb    ebp,DWORD PTR [edx+0x1bcd207a]
  407fb5:	sar    edx,cl
  407fb7:	sbb    ebx,ebx
  407fb9:	lods   al,BYTE PTR ds:[esi]
  407fba:	loop   0x407fcf
  407fbc:	jmp    0xf4845412
  407fc1:	fcomp  DWORD PTR [eax+esi*8-0xb]
  407fc5:	adc    al,0x5
  407fc7:	mov    ch,0x64
  407fc9:	aad    0x4
  407fcb:	je     0x407fb8
  407fcd:	gs addr16 jb 0x407f7a
  407fd1:	jecxz  0x407f97
  407fd3:	(bad)  
  407fd4:	das    
  407fd5:	mov    ch,0xc4
  407fd7:	rol    dh,1
  407fd9:	(bad)  [eiz*1-0x4a6bf765]
  407fe0:	out    0x88,al
  407fe2:	shr    DWORD PTR [esi-0x60fea184],1
  407fe8:	add    edi,ebp
  407fea:	sbb    bl,dl
  407fec:	push   esi
  407fed:	or     eax,0xd1aeb071
  407ff2:	jle    0x40805d
  407ff4:	in     eax,dx
  407ff5:	(bad)  
  407ff6:	push   edi
  407ff7:	jae    0x407fa1
  407ff9:	jg     0x408022
  407ffb:	not    BYTE PTR [ebx+0x1f]
  407ffe:	mov    ch,0xca
  408000:	sbb    al,BYTE PTR [eax-0x53]
  408003:	sbb    al,0x8f
  408005:	icebp  
  408006:	test   BYTE PTR ds:0x38915ac4,dl
  40800c:	jne    0x408081
  40800e:	push   ds
  40800f:	jmp    0x3958:0xf3c3cfb
  408016:	(bad)  
  408017:	mov    edx,0xec98498b
  40801c:	adc    BYTE PTR [ebx],al
  40801e:	mov    ds:0xd9fe0eaa,al
  408023:	enter  0x282f,0x97
  408027:	lods   al,BYTE PTR ds:[esi]
  408028:	into   
  408029:	jno    0x407fbd
  40802b:	pop    edx
  40802c:	sahf   
  40802d:	(bad)  [ebp+0x5acf14ac]
  408033:	into   
  408034:	mov    bl,0x7d
  408036:	out    0x3b,eax
  408038:	fisubr WORD PTR [ebp+0x4d2731e3]
  40803e:	imul   ebx,esi,0x7f
  408041:	mov    bh,0x3
  408043:	add    bl,0xab
  408046:	fs mov esi,0xad00a2af
  40804c:	fsub   QWORD PTR [esi+0x5c]
  40804f:	arpl   dx,sp
  408051:	push   ds
  408052:	imul   ecx,DWORD PTR [edx],0x532d6f97
  408058:	mov    ebp,0x19f32ea3
  40805d:	aaa    
  40805e:	push   ss
  40805f:	and    bl,al
  408061:	mov    DWORD PTR [edi],esp
  408063:	nop
  408064:	out    dx,eax
  408065:	mov    dh,0x6e
  408067:	aas    
  408068:	or     eax,0xe9163d5b
  40806d:	cli    
  40806e:	ror    ch,1
  408070:	lds    edx,FWORD PTR [eax+eax*1-0x41]
  408074:	jmp    0x57538b85
  408079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40807a:	rol    DWORD PTR [eax+edi*8+0x15f4f280],1
  408081:	mov    edi,0x1bbd194b
  408086:	cmp    eax,0x884dcb22
  40808b:	rcl    BYTE PTR ds:0x49991add,1
  408091:	sbb    al,0x1d
  408093:	push   edx
  408094:	mov    ds:0xf58b2425,al
  408099:	stos   BYTE PTR es:[edi],al
  40809a:	push   cs
  40809b:	jmp    0x40803a
  40809d:	mov    ebp,0x975166dc
  4080a2:	fidivr DWORD PTR [ebp-0x42967fac]
  4080a8:	cmp    al,0xaf
  4080aa:	add    eax,0x9671b1de
  4080af:	shl    DWORD PTR [eax+0x39],1
  4080b2:	aam    0xce
  4080b4:	outs   dx,BYTE PTR ds:[esi]
  4080b5:	stos   DWORD PTR es:[edi],eax
  4080b6:	jle    0x40803b
  4080b8:	fs pop edi
  4080ba:	push   esi
  4080bb:	add    dl,dh
  4080bd:	or     al,0xe8
  4080bf:	shr    BYTE PTR [edx+0x5a],0xf1
  4080c3:	mov    bl,0xca
  4080c5:	int3   
  4080c6:	aaa    
  4080c7:	rol    BYTE PTR [ecx+0x3d],cl
  4080ca:	xor    BYTE PTR [ebx],dh
  4080cc:	(bad)  
  4080cd:	xor    eax,0x6ed40dc2
  4080d2:	or     DWORD PTR [ecx],ebp
  4080d4:	sbb    bh,BYTE PTR [edi]
  4080d6:	xchg   edi,eax
  4080d7:	std    
  4080d8:	stos   DWORD PTR es:[edi],eax
  4080d9:	xchg   esi,eax
  4080da:	ins    BYTE PTR es:[edi],dx
  4080db:	mul    edi
  4080dd:	js     0x4080c6
  4080df:	ds ins DWORD PTR es:[edi],dx
  4080e1:	inc    edx
  4080e2:	jae    0x408163
  4080e4:	jns    0x4080a9
  4080e6:	(bad)  
  4080e7:	dec    esi
  4080e8:	mov    ds:0x33dfa74b,al
  4080ed:	inc    ebp
  4080ee:	jl     0x4080f9
  4080f0:	dec    esi
  4080f1:	fdivr  QWORD PTR [edx+0x7e]
  4080f4:	popa   
  4080f5:	jl     0x408102
  4080f7:	dec    eax
  4080f8:	dec    esi
  4080f9:	jo     0x4080cc
  4080fb:	add    DWORD PTR [esi],eax
  4080fd:	call   0xc0f3:0xcd1c95cf
  408104:	mov    esi,ds
  408106:	and    ebx,DWORD PTR [eax+eiz*1+0x31]
  40810a:	ret    
  40810b:	dec    edx
  40810c:	or     al,0xd3
  40810f:	mov    DWORD PTR ds:0x48f22258,ebx
  408115:	mov    ?,WORD PTR [esi-0x4]
  408118:	(bad)  ds:0xbafad19
  40811e:	sbb    ecx,0x4b
  408121:	jmp    0x7e75:0xa6c9367e
  408128:	ret    
  408129:	(bad)  
  40812a:	cmp    edi,edi
  40812c:	inc    edi
  40812d:	leave  
  40812e:	test   DWORD PTR [ebx+0x26],edx
  408131:	(bad)  
  408132:	adc    esp,DWORD PTR [esi-0x5d0379f2]
  408138:	(bad)  
  408139:	sti    
  40813a:	mov    WORD PTR [edi+0x18],es
  40813d:	push   ss
  40813e:	es sbb eax,0xe1dadae2
  408144:	xchg   edi,eax
  408145:	add    BYTE PTR [edx*1+0x5980b97e],0x26
  40814d:	enter  0xbf46,0xad
  408151:	inc    esi
  408152:	dec    esi
  408153:	(bad)  
  408154:	lock cmp bh,cl
  408157:	sub    al,0xac
  408159:	mov    dh,0x8e
  40815b:	and    eax,0x19756921
  408160:	or     ebx,DWORD PTR [ebp+eax*2-0x65]
  408164:	in     al,0xd0
  408166:	lock call 0xc995ebf7
  40816c:	mov    esp,0x114f99db
  408171:	sbb    dl,ch
  408173:	xor    bh,BYTE PTR [edi-0x27]
  408176:	addr16 nop
  408178:	dec    edx
  408179:	lods   al,BYTE PTR ds:[esi]
  40817a:	dec    esp
  40817b:	cmp    eax,0x87b25f80
  408180:	add    eax,ecx
  408182:	xchg   edi,eax
  408183:	std    
  408184:	and    al,0xbf
  408186:	pop    eax
  408187:	retf   
  408188:	inc    ebx
  408189:	add    eax,0xb6243113
  40818e:	(bad)  
  40818f:	dec    esi
  408190:	cmp    dl,ch
  408192:	fsub   QWORD PTR [ecx-0xa]
  408195:	mov    ch,0x23
  408197:	test   cl,ah
  408199:	jecxz  0x408175
  40819b:	sub    ch,0xe
  40819e:	push   ebx
  40819f:	test   DWORD PTR [ecx+0x28fd9fe3],0xedd94da7
  4081a9:	inc    esi
  4081aa:	or     eax,0x636b5a9
  4081af:	dec    ebp
  4081b0:	out    dx,eax
  4081b1:	pop    ss
  4081b2:	retf   
  4081b3:	addr16 cld 
  4081b5:	jo     0x408209
  4081b7:	xor    BYTE PTR [edx-0x1ba1a155],ah
  4081bd:	nop
  4081be:	and    eax,0xb03a13b3
  4081c3:	mov    edx,0x432f28e7
  4081c8:	push   ecx
  4081c9:	stc    
  4081ca:	mov    ebp,0xa95c1d1a
  4081cf:	shr    BYTE PTR [ebp-0x4c],1
  4081d2:	pop    es
  4081d3:	pop    ss
  4081d4:	sub    eax,0x7e615b85
  4081d9:	nop
  4081da:	inc    ecx
  4081db:	daa    
  4081dc:	pusha  
  4081dd:	jb     0x408193
  4081df:	and    ah,BYTE PTR [esi]
  4081e1:	imul   ebp,ebx,0xb039052d
  4081e7:	push   0x22c01f08
  4081ec:	and    eax,0x9096f18
  4081f1:	xchg   esp,eax
  4081f2:	mov    ecx,0xdead9952
  4081f7:	xchg   ebx,eax
  4081f8:	imul   edx,DWORD PTR [esp+edi*8-0x75cbf91a],0xffffffe5
  408200:	sahf   
  408201:	fistp  DWORD PTR [esi]
  408203:	sbb    BYTE PTR [eax],bh
  408205:	outs   dx,DWORD PTR ds:[esi]
  408206:	in     al,0x25
  408208:	cmc    
  408209:	std    
  40820a:	jecxz  0x408208
  40820c:	cli    
  40820d:	call   0x646e0f4f
  408212:	jbe    0x408222
  408214:	sub    bh,ch
  408216:	jl     0x408251
  408218:	fld    TBYTE PTR [ebp-0x2f038bdd]
  40821e:	xchg   ebp,eax
  40821f:	cmp    BYTE PTR [edx+0x61a27ea0],ch
  408225:	mov    DWORD PTR [eax+0x78],edi
  408228:	rcl    dl,1
  40822a:	fs dec esp
  40822c:	push   ebx
  40822d:	fs jle 0x4081f8
  408230:	aaa    
  408231:	mov    dl,0xe6
  408233:	pop    esp
  408234:	data16 loopne 0x408297
  408237:	sysret 
  408239:	xchg   esp,eax
  40823a:	xchg   DWORD PTR [edx-0xa358028],ebp
  408240:	adc    dh,BYTE PTR [ebx]
  408242:	xchg   edx,eax
  408243:	xchg   esp,eax
  408244:	stos   DWORD PTR es:[edi],eax
  408245:	int    0x15
  408247:	dec    esi
  408248:	add    BYTE PTR [ecx],ah
  40824a:	call   FWORD PTR [ecx-0x4edf0011]
  408250:	rcr    cl,1
  408252:	leave  
  408253:	mov    DWORD PTR [esi-0x76],ebp
  408256:	into   
  408257:	dec    DWORD PTR [eax-0x76d7c662]
  40825d:	fdiv   QWORD PTR [ecx]
  40825f:	(bad)  
  408260:	loop   0x40828f
  408262:	stos   DWORD PTR es:[edi],eax
  408263:	push   ds
  408264:	jmp    0xe7a67019
  408269:	ins    DWORD PTR es:[edi],dx
  40826a:	cli    
  40826b:	adc    edx,DWORD PTR [esi]
  40826d:	sahf   
  40826e:	jp     0x408289
  408270:	(bad)  
  408271:	jo     0x408254
  408273:	jmp    0xe21b6f5
  408278:	jbe    0x408219
  40827a:	lods   eax,DWORD PTR ds:[esi]
  40827b:	cli    
  40827c:	mov    edi,0x79530d6b
  408281:	es cmc 
  408283:	pop    esp
  408284:	mov    ds:0x395d49ce,al
  408289:	out    0x4e,al
  40828b:	cs dec edi
  40828d:	adc    DWORD PTR [ecx-0x17],0x2f
  408291:	pop    esi
  408292:	inc    edi
  408293:	adc    eax,0xe1e936b1
  408298:	mov    al,0x59
  40829a:	and    BYTE PTR [ebp+0x32],ah
  40829d:	xchg   ebx,eax
  40829e:	mov    ebx,0x8a5c3ec6
  4082a3:	pop    ebx
  4082a4:	ret    0xfe28
  4082a7:	lods   eax,DWORD PTR ds:[esi]
  4082a8:	sbb    ebp,ebx
  4082aa:	push   ebp
  4082ab:	sbb    cl,bh
  4082ad:	xchg   edi,eax
  4082ae:	push   es
  4082af:	fisttp WORD PTR [eiz*4+0x59ae9ea3]
  4082b6:	imul   edx,DWORD PTR [eax-0x22531c83],0x60d00311
  4082c0:	jns    0x4082e3
  4082c2:	mov    ebx,ecx
  4082c4:	pop    ecx
  4082c5:	fisttp WORD PTR [eax-0x31]
  4082c8:	rol    edx,1
  4082ca:	pop    eax
  4082cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082cc:	add    DWORD PTR [ecx],ecx
  4082ce:	mov    ds:0xcff749ea,al
  4082d3:	xchg   ebp,eax
  4082d4:	stos   DWORD PTR es:[edi],eax
  4082d5:	jns    0x40829d
  4082d7:	jae    0x408347
  4082d9:	shl    DWORD PTR [edi],cl
  4082db:	ror    DWORD PTR [esi+eax*1+0x5c81b38d],0xa5
  4082e3:	clc    
  4082e4:	iret   
  4082e5:	mov    al,0x1a
  4082e7:	jmp    0x408358
  4082e9:	mov    ebp,0x860478f1
  4082ee:	sahf   
  4082ef:	test   BYTE PTR [esi],bh
  4082f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f2:	add    DWORD PTR [edx+ebp*1-0x49],ebp
  4082f6:	xchg   al,dl
  4082f8:	push   es
  4082f9:	xchg   esi,eax
  4082fa:	fisubr DWORD PTR [ebx+0x68]
  4082fd:	ds mov esp,0xe6c37ce9
  408303:	jl     0x4082ea
  408305:	psadbw mm6,QWORD PTR [esi]
  408308:	nop
  408309:	adc    BYTE PTR [esi+0x79],al
  40830c:	and    DWORD PTR [ebx],eax
  40830e:	mov    bh,0xa7
  408310:	mov    ebx,0xa2250355
  408315:	aas    
  408316:	ja     0x4082b6
  408318:	fcom   DWORD PTR [edx-0x49]
  40831b:	push   0x73
  40831d:	or     al,0xf8
  40831f:	mov    ebx,0xf60987d
  408324:	jmp    0x4082ea
  408326:	aaa    
  408327:	div    BYTE PTR [edx+0x4b]
  40832a:	pop    eax
  40832b:	out    dx,eax
  40832c:	push   ebx
  40832d:	pop    esp
  40832e:	xor    BYTE PTR [edx-0x2],bl
  408331:	pop    esi
  408332:	lods   al,BYTE PTR ds:[esi]
  408333:	xchg   ebx,eax
  408334:	sbb    eax,0x3e16fe5
  408339:	pop    eax
  40833a:	test   eax,0xd54630dc
  40833f:	lds    ecx,FWORD PTR [edx+0x65]
  408342:	and    eax,0x9ef24fed
  408347:	imul   DWORD PTR [ebp+0x725adb52]
  40834d:	xor    eax,0xada1728c
  408352:	ds xchg edi,eax
  408354:	push   0xa2211309
  408359:	add    edi,DWORD PTR [edx+0x620c733e]
  40835f:	mov    edx,0x888ec14c
  408364:	lahf   
  408365:	mov    ebx,0xb59f6f00
  40836a:	sub    BYTE PTR [ebp-0x69],ch
  40836d:	aad    0xca
  40836f:	and    al,0x12
  408371:	pop    ebp
  408372:	enter  0x103c,0x42
  408376:	jp     0x40837c
  408378:	xchg   esp,eax
  408379:	lds    esi,FWORD PTR [edi]
  40837b:	xchg   esi,eax
  40837c:	aad    0xbe
  40837e:	sub    dh,BYTE PTR [edx]
  408380:	and    bl,BYTE PTR [esi-0x52]
  408383:	test   ecx,ebp
  408385:	jbe    0x408342
  408387:	in     eax,0xca
  408389:	enter  0x9ae8,0x7
  40838d:	jmp    0x4083ec
  40838f:	cs call 0x2a2a0077
  408395:	aas    
  408396:	mov    esi,0x6d8c7461
  40839b:	aad    0x48
  40839d:	pop    ebp
  40839e:	push   0xffffffcd
  4083a0:	jo     0x408391
  4083a2:	dec    esi
  4083a3:	xchg   ebp,eax
  4083a4:	stos   DWORD PTR es:[edi],eax
  4083a5:	retf   0x2bc4
  4083a8:	inc    ebp
  4083a9:	popf   
  4083aa:	inc    ebp
  4083ab:	retf   0xe3ac
  4083ae:	ror    BYTE PTR [esp+ebx*4],0x6e
  4083b2:	(bad)
  4083b6:	popa   
  4083b7:	scas   eax,DWORD PTR es:[edi]
  4083b8:	push   0xfffffff4
  4083ba:	mov    dl,0x9f
  4083bc:	arpl   di,dx
  4083be:	mov    edx,0xb89a562
  4083c3:	ret    0x8f6f
  4083c6:	add    al,0xde
  4083c8:	mov    eax,ds:0x66f4f083
  4083cd:	popa   
  4083ce:	leave  
  4083cf:	jl     0x4083e4
  4083d1:	call   0xe22:0x80db9b46
  4083d8:	lahf   
  4083d9:	jp     0x40836e
  4083db:	sbb    DWORD PTR ds:0x72ce17bc,ecx
  4083e1:	dec    ebp
  4083e2:	fistp  DWORD PTR [ebp+0x24]
  4083e5:	xor    al,0x5d
  4083e7:	lds    esp,FWORD PTR [esi-0x32]
  4083ea:	ins    DWORD PTR es:[edi],dx
  4083eb:	cwde   
  4083ec:	imul   ebp,DWORD PTR [esi+0x2978edcc],0xd8e6f4f7
  4083f6:	arpl   WORD PTR [ecx+0x3a574e90],ax
  4083fc:	stos   DWORD PTR es:[edi],eax
  4083fd:	das    
  4083fe:	jecxz  0x4083fa
  408400:	mov    esp,DWORD PTR [edi+0x49b28f8c]
  408406:	outs   dx,DWORD PTR ds:[esi]
  408407:	mov    ds:0x1cd304c0,eax
  40840c:	add    al,0xa7
  40840e:	add    esi,DWORD PTR [edx]
  408410:	ss (bad) 
  408412:	cld    
  408413:	(bad)  
  408415:	mov    bh,0xe7
  408417:	sbb    eax,0xa885a094
  40841c:	dec    eax
  40841d:	fsubr  st(2),st
  40841f:	cmp    al,0x71
  408421:	add    BYTE PTR [esi-0x24],ch
  408424:	mov    ss,WORD PTR [ecx+0x1da0d1f1]
  40842a:	jo     0x408448
  40842c:	xor    DWORD PTR [eax+0x2f],ebx
  40842f:	fld    DWORD PTR [esi]
  408431:	xor    ah,ch
  408433:	fidivr DWORD PTR [ecx+esi*1-0x26ca6cce]
  40843a:	inc    edx
  40843b:	aas    
  40843c:	ins    BYTE PTR es:[edi],dx
  40843d:	(bad)  
  40843e:	out    dx,al
  40843f:	es int 0x11
  408442:	adc    eax,0xa7dfa347
  408447:	inc    ebp
  408448:	in     al,0x7b
  40844a:	pop    edx
  40844b:	ds gs aam 0x13
  40844f:	or     BYTE PTR [esi-0x8],0x56
  408453:	adc    DWORD PTR [eax],esi
  408455:	pop    ss
  408456:	aaa    
  408457:	retf   
  408458:	mov    BYTE PTR fs:[edx+0x2a],al
  40845c:	push   0x46
  40845e:	ret    0xfca
  408461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408462:	or     bl,bh
  408464:	xchg   edx,eax
  408465:	push   edi
  408466:	xchg   eax,ebp
  408468:	or     al,0xb4
  40846a:	mov    cl,0x50
  40846c:	jecxz  0x4083f2
  40846e:	jb     0x4084e4
  408470:	mov    BYTE PTR [edi],dl
  408472:	adc    DWORD PTR [ebx],edx
  408474:	inc    edx
  408475:	mov    eax,0x7091dc37
  40847a:	in     al,dx
  40847b:	out    0x2a,al
  40847d:	mov    edx,0x694cd3a2
  408482:	idiv   DWORD PTR ds:0x52e89eb2
  408488:	push   eax
  408489:	ins    DWORD PTR es:[edi],dx
  40848a:	jae    0x408462
  40848c:	data16 fs jnp 0x408437
  408490:	daa    
  408491:	lock sbb DWORD PTR [ecx+0x7],edx
  408495:	add    ebp,DWORD PTR ss:[ebp+0x6f]
  408499:	sbb    dl,dh
  40849b:	pop    eax
  40849c:	inc    edx
  40849d:	aaa    
  40849e:	pop    es
  40849f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a0:	adc    al,0x72
  4084a2:	inc    esi
  4084a3:	dec    ebx
  4084a4:	adc    DWORD PTR [esi],edi
  4084a6:	inc    bl
  4084a8:	and    ch,BYTE PTR [ebx]
  4084aa:	jne    0x4084fc
  4084ac:	mov    eax,0x132400e9
  4084b1:	aas    
  4084b2:	push   esp
  4084b3:	mov    esp,0x701ca022
  4084b8:	icebp  
  4084b9:	mov    ebx,eax
  4084bb:	jbe    0x4084c0
  4084bd:	mov    cl,0x3a
  4084bf:	ret    
  4084c0:	push   cs
  4084c1:	inc    esi
  4084c2:	pop    esi
  4084c3:	bound  ecx,QWORD PTR [ebp+0xd]
  4084c6:	xor    DWORD PTR [esi+eiz*8],ecx
  4084c9:	fdivr  QWORD PTR [ebp+0x37c70a12]
  4084cf:	mov    dl,0x5f
  4084d1:	in     eax,dx
  4084d2:	inc    eax
  4084d3:	or     eax,0x8d7d7f26
  4084d8:	push   es
  4084d9:	or     DWORD PTR [edi+0x788bcdde],esi
  4084df:	stos   DWORD PTR es:[edi],eax
  4084e0:	xor    eax,0x3a63a648
  4084e5:	in     eax,0xba
  4084e7:	cmp    dl,BYTE PTR [edx]
  4084e9:	add    al,0xe0
  4084eb:	mov    ch,0xc6
  4084ed:	xchg   edx,edi
  4084ef:	pop    edx
  4084f0:	lods   al,BYTE PTR ds:[esi]
  4084f1:	lahf   
  4084f2:	mov    ah,0x44
  4084f4:	test   eax,0x2cffb7df
  4084f9:	xchg   esi,eax
  4084fa:	int3   
  4084fb:	push   ds
  4084fc:	mov    edi,0xff017195
  408501:	call   FWORD PTR [edx+eiz*8]
  408504:	fistp  QWORD PTR [esi+ebp*1-0x38696619]
  40850b:	or     BYTE PTR [edi-0x2c],ah
  40850e:	push   ds
  40850f:	xchg   edx,eax
  408510:	xchg   edx,eax
  408511:	call   0x75f178f6
  408516:	xchg   edi,eax
  408517:	(bad)  
  408518:	call   0xa93b:0x1455c864
  40851f:	lock dec edx
  408521:	cmp    al,0x4
  408523:	aaa    
  408524:	cdq    
  408525:	mov    al,0x26
  408527:	addr16 inc eax
  408529:	je     0x40856d
  40852b:	imul   ebp,ebp,0xfea1127d
  408531:	fs popa 
  408533:	(bad)  
  408535:	adc    edx,DWORD PTR [ebx+0xa]
  408538:	xor    ecx,edi
  40853a:	(bad)  
  40853c:	mov    eax,0x43fb3b71
  408541:	inc    edi
  408542:	xchg   ebp,eax
  408543:	sbb    BYTE PTR [esi+0x47c42e1e],0xaa
  40854a:	mov    edi,0x21817af0
  40854f:	call   0xe6ab:0x547b6e26
  408556:	xchg   BYTE PTR [edx],dl
  408558:	push   esp
  408559:	retf   0x88b5
  40855c:	and    cl,BYTE PTR [ecx-0x6fb9093a]
  408562:	cmp    DWORD PTR [eax],esp
  408564:	mov    bh,0x4f
  408566:	jb     0x408542
  408568:	test   BYTE PTR [ebx],ah
  40856a:	cmp    esi,edi
  40856c:	test   al,0x6
  40856e:	inc    ebx
  40856f:	popf   
  408570:	mov    ecx,0xbfc337b5
  408575:	push   eax
  408576:	jge    0x40854f
  408578:	xchg   esp,eax
  408579:	test   al,0x50
  40857b:	fcomp  DWORD PTR [ebx]
  40857d:	pop    edx
  40857e:	mov    dl,0x93
  408580:	ret    0xe72f
  408583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408584:	mov    dh,0xf9
  408586:	cmp    eax,0x3f7c78ad
  40858b:	push   ds
  40858c:	aaa    
  40858d:	dec    esi
  40858e:	dec    ecx
  40858f:	cmp    eax,0x4e9188c4
  408594:	add    dl,BYTE PTR [edi-0x17]
  408597:	arpl   si,dx
  408599:	push   cs
  40859a:	sub    eax,0x329d2655
  40859f:	scas   eax,DWORD PTR es:[edi]
  4085a0:	retf   
  4085a1:	addr16 mov cl,0x10
  4085a4:	push   es
  4085a5:	inc    esi
  4085a6:	jae    0x408540
  4085a8:	sbb    eax,0x985cb895
  4085ad:	js     0x40854b
  4085af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b0:	sbb    al,0x11
  4085b2:	cmp    BYTE PTR [ecx+0x57],ch
  4085b5:	xchg   DWORD PTR [edi+0x76],edi
  4085b8:	test   eax,0xc590eaf9
  4085bd:	lds    ebp,FWORD PTR [edi-0x55]
  4085c0:	outs   dx,BYTE PTR ds:[esi]
  4085c1:	mov    fs,WORD PTR [esi+esi*1-0x71]
  4085c5:	cld    
  4085c6:	jmp    0x44d8:0x5b0d696f
  4085cd:	push   eax
  4085ce:	cmc    
  4085cf:	stc    
  4085d0:	jae    0x408587
  4085d2:	(bad)  
  4085d4:	and    DWORD PTR [ecx],eax
  4085d6:	(bad)  
  4085d7:	xchg   edi,eax
  4085d8:	das    
  4085d9:	push   edi
  4085da:	(bad)  
  4085db:	mov    esi,0xa351dae
  4085e0:	or     bh,al
  4085e2:	inc    esp
  4085e3:	push   ds
  4085e4:	pop    ecx
  4085e5:	outs   dx,BYTE PTR ds:[esi]
  4085e6:	call   0x30494a94
  4085eb:	pop    edi
  4085ec:	into   
  4085ed:	mov    ebx,0x80172b5b
  4085f2:	push   esi
  4085f3:	(bad)  
  4085f4:	xor    bh,cl
  4085f6:	inc    ecx
  4085f7:	sbb    DWORD PTR [ecx+0x563cc1a9],ebp
  4085fd:	inc    edi
  4085fe:	xor    BYTE PTR [ecx+0x19],al
  408601:	(bad)  
  408603:	test   al,0x89
  408605:	(bad)  
  408606:	(bad)  
  408607:	push   ds
  408608:	dec    esp
  408609:	mov    bh,0x2c
  40860b:	out    0xac,al
  40860d:	add    bl,BYTE PTR [eax]
  40860f:	fidivr WORD PTR [eax+0x7f]
  408612:	ffree  st(7)
  408614:	xchg   esp,eax
  408615:	add    DWORD PTR [ecx+0x54],esp
  408618:	xor    eax,0x57ab55e0
  40861d:	repz jp 0x408645
  408620:	and    eax,0xd57c2e34
  408625:	or     edx,edx
  408627:	add    BYTE PTR [esi],bh
  408629:	imul   ebp,DWORD PTR [esi],0xccf9dfca
  40862f:	je     0x4086a2
  408631:	fistp  DWORD PTR [edx+eax*1+0x36]
  408635:	push   ecx
  408636:	dec    edi
  408637:	inc    esp
  408638:	(bad)  
  408639:	jmp    0x6cf9:0xd8f87f67
  408640:	pop    esi
  408641:	nop
  408642:	jmp    0x4f56:0x5fb400a8
  408649:	lods   eax,DWORD PTR ds:[esi]
  40864a:	repz sub DWORD PTR ds:0x5cabcb0,0xfffffffa
  408652:	int3   
  408653:	and    ecx,DWORD PTR [eax+edi*8+0x7b359fc7]
  40865a:	pop    ecx
  40865b:	mov    esi,0x4d3b70df
  408660:	or     al,0x91
  408662:	fild   QWORD PTR [edi-0x5456c724]
  408668:	popa   
  408669:	ret    
  40866a:	jae    0x408629
  40866c:	cwde   
  40866d:	or     dh,BYTE PTR cs:[edi]
  408670:	inc    eax
  408671:	xor    eax,DWORD PTR [eax+0x61352cea]
  408677:	mov    cl,0x6e
  408679:	dec    esp
  40867a:	fisttp QWORD PTR [ebp-0x1d]
  40867d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40867e:	dec    edi
  40867f:	jp     0x408606
  408681:	adc    eax,0x6870c51f
  408686:	push   ecx
  408687:	or     BYTE PTR ds:0x40a2e74c,al
  40868d:	xor    DWORD PTR [eax+esi*1-0x2990cc62],ebp
  408694:	push   ebp
  408695:	and    DWORD PTR [ebp+0x3b],0x8878842c
  40869c:	pop    edx
  40869d:	or     eax,0x26b071cd
  4086a2:	out    0xa9,eax
  4086a4:	fild   WORD PTR [esi-0x78538a08]
  4086aa:	repnz pushf 
  4086ac:	push   ebp
  4086ad:	stos   BYTE PTR es:[edi],al
  4086ae:	pop    es
  4086af:	test   al,0x95
  4086b1:	out    dx,eax
  4086b2:	mov    ecx,0xef7e10f
  4086b7:	jl     0x4086e4
  4086b9:	mov    fs,WORD PTR [ebp+0x29]
  4086bc:	inc    edx
  4086bd:	std    
  4086be:	mov    edi,0x2a6826a8
  4086c3:	mov    ss,WORD PTR [eax+0x28]
  4086c6:	xor    al,0x8a
  4086c8:	stc    
  4086c9:	lods   al,BYTE PTR ds:[esi]
  4086ca:	xchg   ebx,eax
  4086cb:	push   ss
  4086cc:	fidivr DWORD PTR ss:[edx-0x442e6e01]
  4086d3:	cwde   
  4086d4:	pop    eax
  4086d5:	dec    esi
  4086d6:	outs   dx,BYTE PTR ds:[esi]
  4086d7:	cdq    
  4086d8:	xchg   ecx,ecx
  4086da:	inc    ebp
  4086db:	sub    eax,0x837fa48a
  4086e0:	push   0xdec6c11f
  4086e5:	jb     0x408753
  4086e7:	push   esp
  4086e8:	or     ah,ah
  4086ea:	or     al,0xa1
  4086ec:	pop    eax
  4086ed:	pop    ds
  4086ee:	dec    edx
  4086ef:	cdq    
  4086f0:	push   ebp
  4086f1:	add    DWORD PTR [edi],ecx
  4086f3:	push   edi
  4086f4:	jne    0x40876e
  4086f6:	lock data16 add dl,BYTE PTR [ebp-0x482f686c]
  4086fe:	dec    edx
  4086ff:	les    eax,FWORD PTR [ebp-0x53]
  408702:	loop   0x408720
  408704:	dec    edi
  408705:	or     BYTE PTR [eax],dh
  408707:	int    0x69
  408709:	es mov ch,0xfd
  40870c:	jae    0x4086ab
  40870e:	les    esp,FWORD PTR [ebp+0x5465d2f6]
  408714:	nop
  408715:	sbb    edx,esp
  408717:	jge    0x4086de
  408719:	mov    edx,0xaee909ee
  40871e:	(bad)  
  40871f:	inc    edx
  408720:	fisttp QWORD PTR [ecx]
  408722:	add    eax,0x90634234
  408727:	or     esi,DWORD PTR [edx+0x2a]
  40872a:	add    al,0x8f
  40872c:	stos   BYTE PTR es:[edi],al
  40872d:	xor    eax,DWORD PTR [edx-0x5]
  408730:	inc    ecx
  408731:	jnp    0x408709
  408733:	adc    BYTE PTR [edx+0x2c],bl
  408736:	or     eax,0x9d92c470
  40873b:	cli    
  40873c:	sbb    eax,0x8e01c36c
  408741:	xchg   edx,eax
  408742:	(bad)  [eax+0x20]
  408745:	xlat   BYTE PTR ds:[ebx]
  408746:	je     0x40875a
  408748:	ror    DWORD PTR [ebx-0x70],0xb5
  40874c:	and    edx,esi
  40874e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40874f:	inc    ecx
  408750:	jbe    0x40877f
  408752:	jno    0x4087a1
  408754:	cmp    BYTE PTR [edx],dl
  408756:	pop    ebx
  408757:	mov    ecx,0xf474cc5b
  40875c:	dec    ecx
  40875d:	pop    ecx
  40875e:	pop    ecx
  40875f:	repnz das 
  408761:	inc    edx
  408762:	xchg   edx,eax
  408763:	les    ebp,FWORD PTR [ecx]
  408765:	fisub  WORD PTR [esi]
  408767:	loop   0x4087cd
  408769:	ja     0x4087a2
  40876b:	ins    DWORD PTR es:[edi],dx
  40876c:	cmp    edi,DWORD PTR [ecx-0xaae3099]
  408772:	cmp    al,BYTE PTR [eax-0x2b49dbef]
  408778:	loop   0x408710
  40877a:	std    
  40877b:	ja     0x4087bb
  40877d:	xor    ecx,ebp
  40877f:	cmp    al,0x61
  408781:	mov    al,0xc1
  408783:	jmp    0xfb58:0xf5dd95ab
  40878a:	lods   eax,DWORD PTR ds:[si]
  40878c:	daa    
  40878d:	js     0x408741
  40878f:	(bad)  
  408791:	test   eax,0x8c5220fe
  408796:	sbb    DWORD PTR [edi],esi
  408798:	or     ecx,ebp
  40879a:	cmp    BYTE PTR [eax-0x4b],bl
  40879d:	push   ebp
  40879e:	inc    ebp
  40879f:	lods   eax,DWORD PTR ds:[esi]
  4087a0:	bound  esp,QWORD PTR [edi-0x368def0f]
  4087a6:	xor    BYTE PTR [ebx],dl
  4087a8:	inc    eax
  4087a9:	add    bh,ch
  4087ab:	inc    ebp
  4087ac:	mov    dl,0xf2
  4087ae:	cmp    DWORD PTR ss:[eax],ebp
  4087b1:	shl    DWORD PTR [edi+0x11],0x1c
  4087b5:	xchg   ebx,eax
  4087b6:	adc    eax,0xd7b8b2eb
  4087bb:	pusha  
  4087bc:	mov    dh,0x2
  4087be:	pop    di
  4087c0:	push   ds
  4087c1:	les    ecx,FWORD PTR [edi+0x308f8417]
  4087c7:	retf   0x9dba
  4087ca:	mov    ah,0xff
  4087cc:	push   ss
  4087cd:	stc    
  4087ce:	jp     0x408811
  4087d0:	mov    esi,0xfdf5b988
  4087d5:	out    0xe7,eax
  4087d7:	cwde   
  4087d8:	scas   al,BYTE PTR es:[edi]
  4087d9:	sub    dh,BYTE PTR [ebp+0x35d8a229]
  4087df:	jbe    0x4087f9
  4087e1:	mov    cl,0x37
  4087e3:	or     DWORD PTR [ecx],ebp
  4087e5:	out    dx,al
  4087e6:	mov    ah,0x55
  4087e8:	ds push ds
  4087ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087eb:	add    edi,esi
  4087ed:	pop    ebp
  4087ee:	xor    ah,dh
  4087f0:	pop    es
  4087f1:	mov    dl,0x98
  4087f3:	mov    cl,0x88
  4087f5:	in     al,dx
  4087f6:	mov    ss,WORD PTR [ebx-0x2c28a81e]
  4087fc:	add    DWORD PTR [ebp-0x62ac2622],ebx
  408802:	lods   eax,DWORD PTR ds:[esi]
  408803:	lods   al,BYTE PTR ds:[esi]
  408804:	ret    0xe061
  408807:	jno    0x40878f
  408809:	push   edx
  40880a:	jmp    0x89dd:0xc08b50d6
  408811:	inc    edi
  408812:	cmc    
  408813:	cmp    ebx,esp
  408815:	add    bh,BYTE PTR [ebp-0x4b39b5bc]
  40881b:	xchg   edi,eax
  40881c:	data16 (bad) 
  40881e:	adc    eax,0x6440a005
  408823:	xor    dl,BYTE PTR [esi+0x15367f92]
  408829:	add    al,0x25
  40882b:	push   edx
  40882c:	mov    ah,0x31
  40882e:	aam    0x74
  408830:	(bad)  
  408831:	sahf   
  408832:	pop    esi
  408833:	outs   dx,DWORD PTR ds:[esi]
  408834:	xchg   ebp,eax
  408835:	inc    eax
  408836:	jb     0x4087d1
  408838:	retf   0x698f
  40883b:	stos   BYTE PTR es:[edi],al
  40883c:	inc    esi
  40883d:	fwait
  40883e:	push   0x2c
  408840:	out    dx,eax
  408841:	sbb    eax,0x4c1194d9
  408846:	jae    0x4087d6
  408848:	push   edx
  408849:	rcl    BYTE PTR [ebx-0x16],cl
  40884c:	or     bh,BYTE PTR [edi]
  40884e:	aam    0x1d
  408850:	push   ebp
  408851:	frstor [edi]
  408853:	push   edx
  408854:	or     DWORD PTR [edx],ebx
  408856:	or     ebp,DWORD PTR [ebp+0xe7d1831]
  40885c:	dec    esp
  40885d:	pop    ds
  40885e:	mov    bl,0x1b
  408860:	add    eax,0xdda5a456
  408865:	mov    bh,0xb8
  408867:	dec    ebp
  408868:	inc    ebp
  408869:	xchg   ecx,eax
  40886a:	jecxz  0x40887f
  40886c:	lea    esp,[ebx-0xb]
  40886f:	ja     0x40884d
  408871:	std    
  408872:	in     al,0x28
  408874:	and    eax,0x40da2e9f
  408879:	push   ebp
  40887a:	cdq    
  40887b:	mov    al,0x1b
  40887d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40887e:	add    esi,DWORD PTR [edi-0xd6f512a]
  408884:	test   esi,edi
  408886:	push   esi
  408887:	add    al,0xe5
  408889:	aam    0xb3
  40888b:	lods   al,BYTE PTR ds:[esi]
  40888c:	adc    eax,0xf297c4eb
  408891:	mov    dl,0xde
  408893:	add    al,0x7b
  408895:	and    eax,0x23c71ccf
  40889a:	out    dx,al
  40889b:	sbb    al,0x47
  40889d:	pop    esp
  40889e:	inc    ecx
  40889f:	adc    ah,bl
  4088a1:	in     al,0x1f
  4088a3:	mov    dx,0x759c
  4088a7:	add    cl,BYTE PTR [ebx-0x1f]
  4088aa:	dec    ebx
  4088ab:	leave  
  4088ac:	mov    eax,0x7caa4b27
  4088b1:	outs   dx,DWORD PTR ds:[esi]
  4088b2:	pop    esp
  4088b3:	cmp    al,0x51
  4088b5:	lds    esi,FWORD PTR [edi-0x194754a0]
  4088bb:	out    0x86,eax
  4088bd:	mov    eax,0x246d7637
  4088c2:	jp     0x4088ed
  4088c4:	push   0xf946862a
  4088c9:	dec    esi
  4088ca:	aas    
  4088cb:	sbb    BYTE PTR ds:0x88a92154,bl
  4088d1:	shl    BYTE PTR [eax-0x23],0x80
  4088d5:	cmp    al,0xe5
  4088d7:	xchg   esp,eax
  4088d8:	push   0xfffffff4
  4088da:	popf   
  4088db:	or     BYTE PTR [esi-0x477e424],0x1f
  4088e2:	fnsave [ebx-0x4ef3eca8]
  4088e8:	pop    ebx
  4088e9:	mov    ch,0x40
  4088eb:	ret    0xfe94
  4088ee:	shl    BYTE PTR [ebp-0x30453b45],0xa3
  4088f5:	jnp    0x408932
  4088f7:	scas   al,BYTE PTR es:[edi]
  4088f8:	cdq    
  4088f9:	unpcklps xmm2,XMMWORD PTR [esi+esi*4]
  4088fd:	loope  0x408923
  4088ff:	xor    dl,al
  408901:	pop    ss
  408902:	(bad)  
  408903:	jecxz  0x40892e
  408905:	retf   
  408906:	lds    edi,FWORD PTR [eax+0x2559d0c7]
  40890c:	cmc    
  40890d:	mov    ebp,fs
  40890f:	scas   al,BYTE PTR es:[edi]
  408910:	push   cs
  408911:	inc    edx
  408912:	sub    edi,DWORD PTR [esi]
  408914:	sub    BYTE PTR [esi],ch
  408916:	sub    al,0x8d
  408918:	mov    ds:0x59c38937,eax
  40891d:	fist   DWORD PTR [eax+0x1fa800f0]
  408923:	pop    ecx
  408924:	adc    edx,esp
  408926:	in     eax,0x52
  408928:	mov    esp,0x35337f24
  40892d:	test   esi,0x1794564d
  408933:	stos   DWORD PTR es:[edi],eax
  408934:	inc    edi
  408935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408936:	aaa    
  408937:	(bad)  
  408938:	not    DWORD PTR [ebp+esi*1-0x3c]
  40893c:	ret    
  40893d:	dec    esp
  40893e:	xchg   edx,eax
  40893f:	bsf    edx,DWORD PTR [ebx-0x6a]
  408943:	push   ds
  408944:	fs mov edx,0x12e468eb
  40894a:	or     al,0xc3
  40894c:	add    eax,0x1491d3e5
  408951:	mov    BYTE PTR [ebx+0x3735bde0],ch
  408957:	sar    DWORD PTR [ebx+edx*1+0x13],cl
  40895b:	xor    DWORD PTR [eax],esi
  40895d:	fsub   QWORD PTR [esi+esi*4-0x44]
  408961:	fisubr DWORD PTR [edx+0x5c22c43a]
  408967:	(bad)  
  408968:	jl     0x408943
  40896a:	sbb    ebp,esp
  40896c:	inc    edx
  40896d:	xchg   DWORD PTR [esi+0x726a54f9],edi
  408973:	shl    BYTE PTR [ebx+eiz*1-0x17ebd329],1
  40897a:	gs cmp al,al
  40897d:	(bad)  
  40897e:	cdq    
  40897f:	fs data16 sbb al,0xf5
  408983:	xchg   esp,eax
  408984:	cmp    edi,DWORD PTR fs:[ecx]
  408987:	lods   eax,DWORD PTR ds:[esi]
  408988:	or     BYTE PTR [eax+0x3f2b3ae9],0xbb
  40898f:	inc    edx
  408990:	mov    dl,0xea
  408992:	lock and edi,ebp
  408995:	iret   
  408996:	add    BYTE PTR [ecx-0x4a29dd66],cl
  40899c:	xchg   esp,eax
  40899d:	mov    esi,0x45dcdc2b
  4089a2:	loop   0x408977
  4089a4:	in     al,0x6e
  4089a6:	sbb    DWORD PTR [edx-0x8],ebp
  4089a9:	xor    ebx,DWORD PTR [edx]
  4089ab:	mov    eax,0xe201737d
  4089b0:	cmp    edi,ecx
  4089b2:	adc    al,0x83
  4089b4:	jbe    0x408972
  4089b6:	xor    ch,BYTE PTR [ebp-0x4a95ccf0]
  4089bc:	imul   eax,DWORD PTR [ebp+0x75f61145],0x26
  4089c3:	test   dh,0x9
  4089c6:	in     al,dx
  4089c7:	inc    ecx
  4089c9:	lods   al,BYTE PTR ds:[esi]
  4089ca:	mov    dh,0x12
  4089cc:	(bad)  [eax+0x10]
  4089cf:	daa    
  4089d0:	mov    BYTE PTR [esp-0x688569c3],ah
  4089d7:	sub    BYTE PTR [edx],bl
  4089d9:	push   ebp
  4089da:	ds shl ch,0x6d
  4089de:	inc    ecx
  4089df:	mov    eax,0xa2018e1c
  4089e4:	mov    ds:0xaf5cecdc,eax
  4089e9:	jge    0x4089ad
  4089eb:	dec    esi
  4089ec:	sahf   
  4089ed:	bound  eax,QWORD PTR [esi-0x566390d5]
  4089f3:	cmp    DWORD PTR cs:[eax+0x6a374516],ecx
  4089fa:	xor    edi,DWORD PTR [edi+ecx*2]
  4089fd:	pusha  
  4089fe:	dec    esi
  4089ff:	mov    DWORD PTR [ebp-0x35],esp
  408a02:	sub    esp,DWORD PTR [eax-0x546076e8]
  408a08:	out    0x0,al
  408a0a:	je     0x4089ec
  408a0c:	retf   0x82d1
  408a0f:	nop
  408a10:	mov    ebp,DWORD PTR [eax]
  408a12:	add    al,0x54
  408a14:	in     eax,dx
  408a15:	retf   0x3b3a
  408a18:	sti    
  408a19:	dec    esp
  408a1a:	add    al,0xac
  408a1c:	or     BYTE PTR [edx+edx*8],bh
  408a1f:	add    BYTE PTR [ecx+0x7f],0x84
  408a23:	sahf   
  408a24:	mov    bl,0xfa
  408a26:	sub    cl,bh
  408a28:	inc    edx
  408a29:	std    
  408a2a:	ss inc esp
  408a2c:	xor    eax,DWORD PTR [ebx]
  408a2e:	adc    al,BYTE PTR [ebx-0x16bb241a]
  408a34:	adc    ebx,DWORD PTR [edi+0x5b03eff7]
  408a3a:	sti    
  408a3b:	lahf   
  408a3c:	xchg   edx,eax
  408a3d:	fsub   st(6),st
  408a3f:	pushf  
  408a40:	mov    al,ds:0xf35972dd
  408a45:	jb     0x4089fb
  408a47:	(bad)  
  408a48:	fidiv  DWORD PTR [ecx+edx*1+0x2d]
  408a4c:	scas   al,BYTE PTR es:[edi]
  408a4d:	out    dx,al
  408a4e:	jae    0x4089e0
  408a50:	inc    ecx
  408a51:	int    0xca
  408a53:	pop    ebp
  408a54:	mov    al,0xb0
  408a56:	add    eax,0x1084b31c
  408a5b:	hlt    
  408a5c:	inc    esi
  408a5d:	call   DWORD PTR [edx]
  408a5f:	dec    ecx
  408a60:	packuswb mm2,QWORD PTR [edi]
  408a63:	xchg   ecx,eax
  408a64:	jb     0x408a43
  408a66:	pop    esp
  408a67:	(bad)  [eax+0xd26414a]
  408a6d:	test   BYTE PTR [eax],0xf7
  408a70:	cld    
  408a71:	jnp    0x408a9f
  408a73:	arpl   WORD PTR [esi+0xf],di
  408a76:	ret    
  408a77:	add    edi,edx
  408a79:	mov    ecx,0x1a8adc4e
  408a7e:	or     ah,BYTE PTR [ebp-0x460c44f]
  408a84:	ins    DWORD PTR es:[edi],dx
  408a85:	aaa    
  408a86:	mov    bl,0x9
  408a88:	jge    0x408aec
  408a8a:	fsub   QWORD PTR [ebx-0x7a88d71a]
  408a90:	inc    ebp
  408a91:	or     ecx,DWORD PTR [ebx]
  408a93:	push   0x6f
  408a95:	cmp    al,0xdb
  408a97:	jns    0x408a64
  408a99:	xchg   DWORD PTR [edi-0x6d3853d6],ecx
  408a9f:	je     0x408a47
  408aa1:	mov    ds:0x5f428299,al
  408aa6:	test   bl,ah
  408aa8:	inc    ebx
  408aa9:	pusha  
  408aaa:	aad    0x36
  408aac:	loopne 0x408a94
  408aae:	das    
  408aaf:	mov    ecx,0x683164fb
  408ab4:	aas    
  408ab5:	fmul   DWORD PTR [edx+0x1eb980c6]
  408abb:	pop    ebp
  408abc:	xor    ah,BYTE PTR [ecx]
  408abe:	or     BYTE PTR [ecx+0x48],ah
  408ac1:	jp     0x408b3b
  408ac3:	popf   
  408ac4:	or     BYTE PTR [ebp-0x6f],cl
  408ac7:	scas   eax,DWORD PTR es:[edi]
  408ac8:	repz dec ebp
  408aca:	jle    0x408a92
  408acc:	ins    BYTE PTR es:[edi],dx
  408acd:	add    bh,BYTE PTR [ecx]
  408acf:	and    BYTE PTR [ebp+0x6f8773],0xb9
  408ad6:	shr    BYTE PTR [edi],cl
  408ad8:	pusha  
  408ad9:	inc    ecx
  408ada:	dec    edi
  408adb:	rcl    ch,cl
  408add:	adc    DWORD PTR [edi+0x7f6e5041],0x2fea7bbd
  408ae7:	pop    ebp
  408ae8:	in     al,dx
  408ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aea:	(bad)  
  408aeb:	mov    ecx,0xc5274386
  408af0:	add    BYTE PTR [eax],bh
  408af2:	loope  0x408abf
  408af4:	mov    ebp,0xa3574374
  408af9:	int3   
  408afa:	adc    dh,dh
  408afc:	outs   dx,BYTE PTR ds:[esi]
  408afd:	or     ecx,DWORD PTR [ebx-0x507df006]
  408b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b04:	adc    esi,edi
  408b06:	jne    0x408b6f
  408b08:	fbstp  TBYTE PTR [eax+esi*4]
  408b0b:	dec    edi
  408b0c:	inc    edx
  408b0d:	sahf   
  408b0e:	jecxz  0x408b26
  408b10:	clc    
  408b11:	add    al,0x7f
  408b13:	ss or  al,0x48
  408b16:	clc    
  408b17:	or     al,0x48
  408b19:	jno    0x408b5e
  408b1b:	rcr    BYTE PTR es:[ebx-0x70],0x37
  408b20:	pop    eax
  408b21:	inc    esi
  408b22:	or     bh,BYTE PTR [ecx+ecx*4-0x44]
  408b26:	into   
  408b27:	jno    0x408b72
  408b29:	(bad)  
  408b2a:	cli    
  408b2b:	mov    ecx,0xd0363b62
  408b30:	xor    DWORD PTR [ebp+0x23e03d1],ebx
  408b36:	test   BYTE PTR [edx-0x58],dl
  408b39:	test   BYTE PTR [ebx+edi*2-0x67],dh
  408b3d:	cmc    
  408b3e:	mov    eax,0x446f60d8
  408b43:	gs call 0xe217:0xdab5c2b9
  408b4b:	push   edi
  408b4c:	test   DWORD PTR [ecx+0x2f],0x64b644d8
  408b53:	push   ebp
  408b54:	adc    al,0xc8
  408b56:	scas   eax,DWORD PTR es:[edi]
  408b57:	xlat   BYTE PTR ds:[ebx]
  408b58:	push   ebx
  408b59:	out    dx,al
  408b5a:	shl    al,1
  408b5c:	fsub   st(7),st
  408b5e:	xchg   BYTE PTR [edx+0x1eac716b],bh
  408b64:	and    ebx,ecx
  408b66:	les    eax,FWORD PTR [edi+0x4429fd27]
  408b6c:	jne    0x408b5c
  408b6e:	mov    ds:0xf5545f2c,al
  408b73:	cmp    edi,DWORD PTR [ecx+0x4e]
  408b76:	jne    0x408bc9
  408b78:	int    0x3c
  408b7a:	psubusw mm6,QWORD PTR [esi+edi*1-0x1203218a]
  408b82:	jns    0x408bbc
  408b84:	mov    eax,ds:0x564516ca
  408b89:	jae    0x408b38
  408b8b:	sub    DWORD PTR [esi],ecx
  408b8d:	and    cl,0x68
  408b90:	xor    bh,BYTE PTR [edi]
  408b92:	ss test al,0x27
  408b95:	iret   
  408b96:	mov    esi,0x4147b7
  408b9b:	cmp    dh,BYTE PTR [edi-0x28013fc1]
  408ba1:	repnz adc ebp,DWORD PTR [ebx-0x17]
  408ba5:	mov    al,ds:0xcc2c297
  408baa:	aaa    
  408bab:	adc    BYTE PTR [eax+ecx*4],dh
  408bae:	sbb    DWORD PTR [edx],ebp
  408bb0:	dec    ebp
  408bb1:	dec    eax
  408bb2:	shl    DWORD PTR [edx+0x59],cl
  408bb5:	std    
  408bb6:	jge    0x408b7e
  408bb8:	dec    edi
  408bb9:	test   al,0x48
  408bbb:	cs addr16 in eax,0x41
  408bbf:	les    ebx,FWORD PTR [ebp-0x36]
  408bc2:	iret   
  408bc3:	call   0x3a66febd
  408bc8:	sbb    bh,BYTE PTR [esi]
  408bca:	push   esi
  408bcb:	sub    dl,ah
  408bcd:	sbb    BYTE PTR [edi+0x54080640],bl
  408bd3:	aas    
  408bd4:	nop
  408bd5:	and    BYTE PTR [ebx+ecx*4-0x71011f42],dl
  408bdc:	cdq    
  408bdd:	add    dl,bh
  408bdf:	cmp    bl,cl
  408be1:	add    al,0x3a
  408be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408be4:	loopne 0x408bce
  408be6:	add    DWORD PTR [edx],ebp
  408be8:	inc    edx
  408be9:	sub    BYTE PTR [ebp-0x6c93b11c],bl
  408bef:	jecxz  0x408c29
  408bf1:	lods   eax,DWORD PTR ds:[esi]
  408bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bf3:	pop    es
  408bf4:	push   ecx
  408bf5:	xor    al,0x78
  408bf7:	fmul   st(3),st
  408bf9:	das    
  408bfa:	mov    ds:0xaad4a485,al
  408bff:	loop   0x408c22
  408c01:	mov    dh,0x23
  408c03:	and    DWORD PTR [ebx+ebp*4],edi
  408c06:	xchg   esi,eax
  408c07:	mov    eax,ds:0x4cf72e71
  408c0c:	leave  
  408c0d:	mov    esp,0x5855a06b
  408c12:	mov    ebp,0xea0e8610
  408c17:	push   cs
  408c18:	xchg   ebx,eax
  408c19:	hlt    
  408c1a:	int    0x11
  408c1c:	inc    eax
  408c1d:	pop    edi
  408c1e:	xchg   ebp,eax
  408c1f:	pusha  
  408c20:	adc    eax,0x8804eb74
  408c25:	js     0x408c76
  408c27:	dec    eax
  408c28:	sahf   
  408c29:	mov    al,0x81
  408c2b:	mov    WORD PTR [esp+eax*2-0x570eab92],fs
  408c32:	push   esi
  408c33:	xchg   BYTE PTR [ebx+edx*1+0x6a048b2],cl
  408c3a:	inc    ebx
  408c3b:	mov    eax,ds:0xd42781e9
  408c40:	mov    bh,0xf3
  408c42:	mov    ecx,0x53f3aa5c
  408c47:	xchg   esi,eax
  408c48:	(bad)  
  408c49:	fwait
  408c4a:	stos   DWORD PTR es:[edi],eax
  408c4b:	js     0x408c5c
  408c4d:	mov    ebx,0x584f71dc
  408c52:	xor    eax,0x5f0232c1
  408c57:	je     0x408c0a
  408c59:	daa    
  408c5a:	fisub  WORD PTR [edx+edi*1+0x4cc0fb39]
  408c61:	mov    BYTE PTR [esi+0x5e],al
  408c64:	or     edi,0x1779e86c
  408c6a:	cmp    eax,0x8822822a
  408c6f:	or     ah,BYTE PTR [esi]
  408c71:	sbb    ah,BYTE PTR [esi+0xe01461c]
  408c77:	rol    ecx,0xc4
  408c7a:	stos   DWORD PTR es:[edi],eax
  408c7b:	pop    ds
  408c7c:	mov    DWORD PTR [edi+0x3a],esp
  408c7f:	jecxz  0x408ca1
  408c81:	or     DWORD PTR [eiz*1-0x740e4ddf],eax
  408c88:	icebp  
  408c89:	mov    eax,DWORD PTR [eax]
  408c8b:	inc    ebp
  408c8c:	xor    eax,0x8beb240f
  408c91:	es mov al,0x8e
  408c94:	mov    dl,0xa6
  408c96:	and    DWORD PTR [edi+0x78],esi
  408c99:	xchg   edi,eax
  408c9a:	add    BYTE PTR [esi],0xa5
  408c9d:	iret   
  408c9e:	bound  esi,QWORD PTR [ecx-0x52179864]
  408ca4:	sub    BYTE PTR [edi-0x44],bh
  408ca7:	mov    dl,0x91
  408ca9:	sub    esp,esp
  408cab:	inc    edi
  408cac:	pushf  
  408cad:	shr    ebp,1
  408caf:	ret    0x3995
  408cb2:	ret    
  408cb3:	loope  0x408c7f
  408cb5:	mov    edi,0xad113f4d
  408cba:	xor    ebx,DWORD PTR [eax+0x1032c556]
  408cc0:	mov    ds:0xafe84932,eax
  408cc5:	iret   
  408cc6:	mov    ch,0x71
  408cc9:	nop
  408cca:	mov    eax,ebp
  408ccc:	or     edi,ebp
  408cce:	adc    ah,ah
  408cd0:	jg     0x408cfb
  408cd2:	dec    eax
  408cd3:	mov    bl,0x79
  408cd5:	push   ecx
  408cd6:	lahf   
  408cd7:	adc    eax,0x53cf5746
  408cdc:	push   ebp
  408cdd:	sub    eax,0xc1e20caa
  408ce2:	nop
  408ce3:	fwait
  408ce4:	ret    
  408ce5:	lods   al,BYTE PTR ds:[esi]
  408ce6:	cmp    DWORD PTR [ecx+0x7bfc1e0d],esp
  408cec:	and    eax,0xc07a4a41
  408cf1:	fistp  QWORD PTR [ebp+0x2]
  408cf4:	jle    0x408cc2
  408cf6:	ret    0x7fd8
  408cf9:	or     BYTE PTR [ecx+0x2daca55d],ch
  408cff:	shr    BYTE PTR [ebp-0x55],cl
  408d02:	(bad)  
  408d03:	xchg   esi,eax
  408d04:	mov    ds:0xb35fb03e,al
  408d09:	lock test al,0xb0
  408d0c:	inc    ebx
  408d0d:	mov    edx,0x7e58ac9f
  408d12:	or     al,0xee
  408d14:	lahf   
  408d15:	push   ecx
  408d16:	iret   
  408d17:	mov    ah,BYTE PTR [esi-0x326e1e89]
  408d1d:	test   eax,0x292377d1
  408d22:	shl    BYTE PTR [esi],1
  408d24:	pop    edx
  408d25:	and    al,0x71
  408d27:	scas   eax,DWORD PTR es:[edi]
  408d28:	push   esp
  408d29:	xchg   ebp,eax
  408d2a:	fisub  WORD PTR [esi]
  408d2c:	mov    al,0x1e
  408d2e:	dec    esi
  408d2f:	push   edi
  408d30:	aam    0x12
  408d32:	in     al,0x1f
  408d34:	cdq    
  408d35:	sbb    DWORD PTR [edi],0x43
  408d38:	ins    BYTE PTR es:[edi],dx
  408d39:	pop    ds
  408d3a:	and    cl,BYTE PTR [ecx+0xb]
  408d3d:	jns    0x408cd4
  408d3f:	test   BYTE PTR [esi],ch
  408d41:	pusha  
  408d42:	mov    esp,0x37bdef84
  408d47:	and    bl,BYTE PTR [esi]
  408d49:	push   esi
  408d4a:	jne    0x408d50
  408d4c:	push   ebx
  408d4d:	cmp    eax,0x4e5db1a6
  408d52:	cmp    al,0x60
  408d54:	retf   0x3e62
  408d57:	xor    eax,0xcfffc763
  408d5c:	std    
  408d5d:	inc    edi
  408d5e:	call   0x58d:0x77daadd9
  408d65:	xor    bh,BYTE PTR [ebx]
  408d67:	clc    
  408d68:	push   esp
  408d69:	jmp    0x5c046ee8
  408d6e:	or     ebx,DWORD PTR [edi-0x5]
  408d71:	je     0x408d67
  408d73:	mov    al,ds:0x6baa1fff
  408d78:	jns    0x408ddd
  408d7a:	dec    edx
  408d7b:	fistp  DWORD PTR [di]
  408d7e:	push   0x17bdf0a
  408d83:	dec    edi
  408d84:	ds std 
  408d86:	outs   dx,DWORD PTR ds:[esi]
  408d87:	call   0x6f1e6fa3
  408d8c:	mov    ecx,0x84e5efb4
  408d91:	fisttp WORD PTR [ebp+edi*1+0x2612398]
  408d98:	dec    edi
  408d99:	hlt    
  408d9a:	jl     0x408d29
  408d9c:	push   edi
  408d9d:	sbb    BYTE PTR [ecx-0x50],0x51
  408da1:	dec    edi
  408da2:	push   esp
  408da3:	arpl   WORD PTR [edi+eax*4-0x3b],bp
  408da7:	stc    
  408da8:	sub    eax,0x83a1e147
  408dad:	add    ecx,DWORD PTR gs:[edx+0x6048524e]
  408db4:	sti    
  408db5:	scas   al,BYTE PTR es:[edi]
  408db6:	fisub  WORD PTR [ecx-0x73]
  408db9:	or     ah,BYTE PTR [esp+eiz*8]
  408dbc:	imul   DWORD PTR [ecx+0x398c6a0d]
  408dc2:	daa    
  408dc3:	fisub  WORD PTR [ecx]
  408dc5:	inc    edx
  408dc6:	daa    
  408dc7:	ins    BYTE PTR es:[edi],dx
  408dc8:	fcomi  st,st(6)
  408dca:	imul   edx,esi,0x311a4c52
  408dd0:	jno    0x408d78
  408dd2:	cmp    DWORD PTR [ebp-0x3],ecx
  408dd5:	sbb    cl,ah
  408dd7:	mov    al,0xe0
  408dd9:	xchg   edi,eax
  408dda:	test   al,dl
  408ddc:	pop    esi
  408ddd:	cmp    ax,0xc7fd
  408de1:	or     eax,DWORD PTR [ecx+esi*1-0x2e5454ab]
  408de8:	or     al,0x2b
  408dea:	jmp    0xd5611957
  408def:	ret    
  408df0:	fcmovnu st,st(4)
  408df2:	fsubr  DWORD PTR ds:0xe35204ff
  408df8:	sbb    dl,bl
  408dfa:	jb     0x408da4
  408dfc:	fs sub eax,0x4a7d80f1
  408e02:	cmc    
  408e03:	pop    es
  408e04:	xchg   esp,eax
  408e05:	test   eax,0xeed28a95
  408e0a:	pop    ebp
  408e0b:	push   ebx
  408e0c:	punpcklbw mm6,DWORD PTR [eax]
  408e0f:	popf   
  408e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e11:	inc    esp
  408e12:	mov    al,BYTE PTR [edx+0x19be95b5]
  408e18:	xchg   edi,eax
  408e19:	xor    bh,BYTE PTR [esi-0x29]
  408e1c:	mov    ah,BYTE PTR [edx]
  408e1e:	adc    BYTE PTR [ebx+0x67],dl
  408e21:	push   cs
  408e22:	or     al,0x4f
  408e24:	fwait
  408e25:	and    dl,0x37
  408e28:	cdq    
  408e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e2a:	cmc    
  408e2b:	stos   DWORD PTR es:[edi],eax
  408e2c:	and    dl,bl
  408e2e:	inc    ebx
  408e2f:	popf   
  408e30:	inc    esp
  408e31:	or     ebp,DWORD PTR [ecx-0x3560188c]
  408e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e38:	in     al,0xb7
  408e3a:	sbb    bh,BYTE PTR [edx-0x2de95d22]
  408e40:	aas    
  408e41:	dec    BYTE PTR [ecx+edi*1-0x3448c574]
  408e48:	fist   DWORD PTR [ebp+eax*2-0x6c09c57d]
  408e4f:	popa   
  408e50:	adc    eax,0x40d04751
  408e55:	jnp    0x408df0
  408e57:	sub    dh,dh
  408e59:	icebp  
  408e5a:	jl     0x408df8
  408e5c:	sub    DWORD PTR [edi-0x268b879c],edi
  408e62:	(bad)  
  408e63:	jge    0x408e47
  408e65:	in     eax,0xd2
  408e67:	sub    DWORD PTR [ebx-0x2],esp
  408e6a:	cmp    BYTE PTR [edx-0x7a956d6f],ah
  408e70:	xchg   edi,eax
  408e71:	jns    0x408ec3
  408e73:	adc    al,0xb4
  408e75:	jl     0x408e9a
  408e77:	lods   al,BYTE PTR ds:[esi]
  408e78:	fdiv   DWORD PTR [ecx-0x5b]
  408e7b:	dec    esp
  408e7c:	mov    ebp,0xaff64c2d
  408e81:	outs   dx,DWORD PTR ds:[esi]
  408e82:	scas   al,BYTE PTR es:[edi]
  408e83:	push   0x59
  408e85:	rcr    BYTE PTR [eax+0x6821e0e7],0x58
  408e8c:	inc    eax
  408e8d:	mov    ah,0x67
  408e8f:	push   ss
  408e90:	ins    DWORD PTR es:[edi],dx
  408e91:	pop    esp
  408e92:	inc    esi
  408e93:	shl    ecx,0xb3
  408e96:	or     BYTE PTR [ebx+eiz*4],al
  408e99:	sbb    BYTE PTR [eax-0x28174ae9],bl
  408e9f:	adc    al,0xeb
  408ea1:	fisttp QWORD PTR [eax]
  408ea3:	sub    eax,0xbd739498
  408ea8:	and    eax,0x58890bf3
  408ead:	(bad)  
  408eae:	inc    BYTE PTR [ebx-0x74]
  408eb1:	sahf   
  408eb2:	inc    ecx
  408eb3:	mov    ah,BYTE PTR [esi-0x59958b73]
  408eb9:	fld    TBYTE PTR [ecx]
  408ebb:	fucomi st,st(6)
  408ebd:	imul   ebp,DWORD PTR [ebp+0x564015a0],0xffffff85
  408ec4:	push   eax
  408ec5:	pushf  
  408ec6:	pushf  
  408ec7:	mul    ah
  408ec9:	mov    DWORD PTR [ebx],ecx
  408ecb:	and    ah,BYTE PTR [edi+0x2999a264]
  408ed1:	dec    edx
  408ed2:	jbe    0x408e82
  408ed4:	mov    ebp,0xf2ba2c6
  408ed9:	cmp    dh,BYTE PTR [ebp+0x57]
  408edc:	jb     0x408e9f
  408ede:	stos   BYTE PTR es:[edi],al
  408edf:	jge    0x408eb0
  408ee1:	push   es
  408ee2:	jnp    0x408ef2
  408ee4:	mov    esp,0xa174b5c4
  408ee9:	xor    al,BYTE PTR [edx]
  408eeb:	sti    
  408eec:	add    al,0xff
  408eee:	idiv   DWORD PTR [ecx+0x5f]
  408ef1:	pop    ebp
  408ef2:	ds inc edx
  408ef4:	xchg   edi,eax
  408ef5:	and    BYTE PTR [ebp+0x6db1fef4],cl
  408efb:	mov    eax,0x1dc50add
  408f00:	stc    
  408f01:	xchg   edx,eax
  408f02:	(bad)  
  408f03:	push   ebx
  408f04:	sbb    DWORD PTR [ebx+0x43],esp
  408f07:	dec    esi
  408f08:	sbb    eax,0x80322fd6
  408f0d:	pop    ds
  408f0e:	mov    ah,0x4a
  408f10:	add    esp,edi
  408f12:	sub    ecx,edx
  408f14:	dec    edx
  408f15:	sub    eax,0x87a7b182
  408f1a:	dec    edi
  408f1b:	pop    esp
  408f1c:	rcl    BYTE PTR [edi],cl
  408f1e:	sub    ebx,ecx
  408f20:	mov    dh,0x9d
  408f22:	add    edi,DWORD PTR [ebx]
  408f24:	or     dl,BYTE PTR [ecx]
  408f26:	push   ebx
  408f27:	adc    BYTE PTR [ecx],bh
  408f29:	lahf   
  408f2a:	dec    ecx
  408f2b:	imul   DWORD PTR [edx+0x7]
  408f2e:	and    eax,0x174b025a
  408f33:	mov    esp,0xab1c2f9e
  408f38:	in     eax,0x42
  408f3a:	dec    edx
  408f3b:	les    ebp,FWORD PTR [edi-0x33]
  408f3e:	sahf   
  408f3f:	popa   
  408f40:	ins    BYTE PTR es:[edi],dx
  408f41:	stos   BYTE PTR es:[edi],al
  408f42:	inc    edi
  408f44:	push   edx
  408f45:	pop    eax
  408f46:	mov    esi,0xb67bc882
  408f4b:	xchg   ebx,eax
  408f4c:	addr16 mov ebp,0x38b6944b
  408f52:	mov    al,0xfd
  408f54:	xchg   DWORD PTR [ebp+esi*8+0x7579a14b],edi
  408f5b:	inc    ebp
  408f5c:	pop    ebx
  408f5d:	rcr    BYTE PTR [esi+eiz*4-0x778a4304],1
  408f64:	gs leave 
  408f66:	dec    esp
  408f67:	add    al,0x12
  408f69:	out    dx,eax
  408f6a:	fdivr  st,st(4)
  408f6c:	or     BYTE PTR [edx+0x26],al
  408f6f:	call   0x1383:0x559d2c68
  408f76:	mov    esi,0xd535b8d6
  408f7b:	inc    ecx
  408f7c:	mov    dl,dl
  408f7e:	mov    al,BYTE PTR [ecx+0x41]
  408f81:	daa    
  408f82:	xor    ebp,edi
  408f84:	mov    al,0x1f
  408f86:	sbb    BYTE PTR [ecx],0xd1
  408f89:	in     eax,0x2e
  408f8b:	scas   al,BYTE PTR es:[edi]
  408f8c:	mov    cs,WORD PTR [ecx-0x2d968ed6]
  408f92:	retf   0xd788
  408f95:	test   al,0xa5
  408f97:	scas   al,BYTE PTR es:[edi]
  408f98:	icebp  
  408f99:	inc    eax
  408f9a:	popa   
  408f9b:	test   eax,0x66cdf319
  408fa0:	in     al,dx
  408fa1:	dec    ebp
  408fa2:	rcr    DWORD PTR [edx+0x36],1
  408fa5:	sbb    bl,ah
  408fa7:	das    
  408fa8:	sub    eax,0xcdb692a1
  408fad:	clc    
  408fae:	dec    edi
  408faf:	adc    al,BYTE PTR [ebx+0x39]
  408fb2:	xchg   ebx,eax
  408fb3:	adc    al,BYTE PTR [esi]
  408fb5:	dec    ecx
  408fb6:	aaa    
  408fb7:	or     DWORD PTR ds:0xfee8f6bd,esp
  408fbd:	cli    
  408fbe:	push   0x30
  408fc0:	xchg   ecx,eax
  408fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fc2:	jle    0x408f9c
  408fc4:	fdivr  DWORD PTR [esi+0x1f5708b2]
  408fca:	jmp    0x408f97
  408fcc:	in     al,0xec
  408fce:	loop   0x409049
  408fd0:	or     al,0xf8
  408fd2:	fbstp  TBYTE PTR [edi+edi*2+0x34f8abac]
  408fd9:	and    DWORD PTR [esi+ecx*4],ecx
  408fdc:	and    eax,0x36353c6e
  408fe1:	sub    ebx,esp
  408fe3:	jmp    0x56322c4
  408fe8:	push   ds
  408fe9:	cmp    BYTE PTR [esi-0x10],dl
  408fec:	leave  
  408fed:	mov    gs:0x7f0b0a20,al
  408ff3:	leave  
  408ff4:	mov    edi,0xccce1cf4
  408ff9:	aas    
  408ffa:	ds dec eax
  408ffc:	inc    eax
  408ffd:	mov    ebx,ebp
  408fff:	xchg   BYTE PTR [eax],dl
  409001:	cmp    DWORD PTR [edx],edx
  409003:	lods   eax,DWORD PTR ds:[esi]
  409004:	sub    ch,BYTE PTR [edx-0x79e342ea]
  40900a:	pop    es
  40900b:	cmp    eax,0x48a7f4d3
  409010:	mov    bh,0xba
  409012:	push   edx
  409013:	shl    DWORD PTR [edi-0x31],0xd4
  409017:	and    ebp,DWORD PTR [eax-0x7b2047c3]
  40901d:	cmp    al,0x75
  40901f:	mov    bh,0xf5
  409021:	cmc    
  409022:	pop    ecx
  409023:	gs jge 0x409041
  409026:	add    dh,BYTE PTR [edi-0x3b]
  409029:	test   BYTE PTR [ecx+eiz*8-0x14],ah
  40902d:	sbb    eax,0xca37af6b
  409032:	iret   
  409033:	inc    esi
  409034:	(bad)  
  409035:	pop    ebx
  409036:	jne    0x40909a
  409038:	mov    bh,BYTE PTR [ebp-0x79fb8e25]
  40903e:	jmp    0xbc98:0xc0282cf2
  409045:	addr16 loopne 0x409034
  409048:	retf   
  409049:	add    DWORD PTR ds:0x40ad9f39,ebx
  40904f:	cld    
  409050:	aad    0x65
  409052:	mov    al,BYTE PTR [ebx-0xb]
  409055:	xchg   esp,eax
  409056:	cmp    al,0x10
  409058:	mov    ebx,0xbc8c8ec6
  40905d:	fimul  WORD PTR [ebx+0x4564d88d]
  409063:	imul   ebp,edx,0xffffff96
  409066:	push   cs
  409067:	jns    0x4090d6
  409069:	xchg   BYTE PTR [edi*4-0x7c0f3ab9],al
  409070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409071:	jmp    0x40905a
  409073:	or     eax,0xdbdeab3b
  409078:	sbb    eax,0xae65a77
  40907d:	addr16 je 0x409092
  409080:	lods   al,BYTE PTR ds:[esi]
  409081:	or     al,0x20
  409083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409084:	fcomp  DWORD PTR [esi-0x918edd6]
  40908a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40908b:	iret   
  40908c:	or     ebp,DWORD PTR ds:0xdc02595b
  409092:	inc    esi
  409093:	(bad)  
  409094:	in     eax,dx
  409095:	xchg   DWORD PTR [edx+ebp*4+0x35],esi
  409099:	mov    ds:0xa080fc86,al
  40909e:	ficom  DWORD PTR [ebx+0x67]
  4090a1:	(bad)  
  4090a2:	lods   eax,DWORD PTR ds:[esi]
  4090a3:	out    0xc0,eax
  4090a5:	aas    
  4090a6:	add    DWORD PTR [edx],ebx
  4090a8:	ja     0x4090ca
  4090aa:	xor    ecx,ebx
  4090ac:	mov    cl,0xad
  4090ae:	dec    esp
  4090af:	sahf   
  4090b0:	xchg   ebx,eax
  4090b1:	mov    dl,0xb0
  4090b3:	pop    esi
  4090b4:	std    
  4090b5:	pop    edi
  4090b6:	icebp  
  4090b7:	into   
  4090b8:	enter  0x9edf,0xa3
  4090bc:	dec    esp
  4090bd:	pop    eax
  4090be:	add    cl,cl
  4090c0:	mov    ebx,edi
  4090c2:	inc    edi
  4090c3:	mov    dh,BYTE PTR [edi]
  4090c5:	scas   eax,DWORD PTR es:[edi]
  4090c6:	dec    esp
  4090c7:	lea    eax,[ebp+0x58]
  4090ca:	pop    ebp
  4090cb:	add    eax,DWORD PTR [eax-0x1d]
  4090ce:	in     eax,0x51
  4090d0:	jmp    0x92066cdf
  4090d5:	mov    WORD PTR [edx+0x3b5dfd74],cs
  4090db:	dec    eax
  4090dc:	and    eax,0xacf5061a
  4090e1:	inc    ebp
  4090e2:	mov    DWORD PTR [ebp+0x70],esi
  4090e5:	pop    esi
  4090e6:	mov    ds:0x92a1ba5f,eax
  4090eb:	sub    al,0x46
  4090ed:	ins    BYTE PTR es:[edi],dx
  4090ee:	adc    BYTE PTR [edi],cl
  4090f0:	cmp    al,0xf7
  4090f2:	test   BYTE PTR [edx],dl
  4090f4:	pop    esp
  4090f5:	int    0x70
  4090f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090f8:	cwde   
  4090f9:	jmp    0x4090ff
  4090fb:	jmp    0x9063d73b
  409100:	pop    edi
  409101:	out    dx,eax
  409102:	jmp    0x40913d
  409104:	mov    dl,0x95
  409106:	cmp    eax,DWORD PTR [esp+edx*2]
  409109:	push   0x71
  40910b:	xchg   ecx,eax
  40910c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40910d:	dec    esp
  40910e:	pop    esi
  40910f:	add    eax,0xd0c3a75d
  409114:	rol    DWORD PTR [esi+0x1a609992],cl
  40911a:	or     ebx,DWORD PTR cs:[eax+eiz*4+0x3b932bbc]
  409122:	jae    0x409185
  409124:	cmc    
  409125:	(bad)  
  409126:	repnz pop DWORD PTR ds:0xbeb35fa9
  40912d:	std    
  40912e:	inc    ebp
  40912f:	fwait
  409130:	mov    ebx,0xd60c5bd
  409135:	mov    eax,ds:0xa02e96aa
  40913a:	dec    ebp
  40913b:	jnp    0x409189
  40913d:	fimul  DWORD PTR [esi]
  40913f:	cmp    DWORD PTR [ecx],ecx
  409141:	bnd ret 
  409143:	jecxz  0x409135
  409145:	int3   
  409146:	cmp    al,BYTE PTR [edi]
  409148:	inc    cl
  40914a:	ror    BYTE PTR [edi+0x3e59b6f9],0x7b
  409151:	mov    al,0x4a
  409153:	add    ah,dl
  409155:	jae    0x40913d
  409157:	gs loopne 0x409174
  40915a:	les    ebp,FWORD PTR [edx-0x7f]
  40915d:	xchg   edi,eax
  40915e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40915f:	xchg   ebx,eax
  409160:	xchg   edx,eax
  409161:	inc    ebp
  409162:	cmp    edi,ecx
  409164:	add    DWORD PTR [ebx-0x4b],edx
  409167:	xor    BYTE PTR [eax-0x2b],ah
  40916a:	std    
  40916b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40916c:	imul   bh
  40916e:	push   ebp
  40916f:	test   BYTE PTR [edx-0x3174a9b0],0x9a
  409176:	popf   
  409177:	or     DWORD PTR [eax+edx*4-0x29],0xffffffdf
  40917c:	aad    0x9b
  40917e:	sbb    esp,esi
  409180:	push   esp
  409181:	or     BYTE PTR [edx+eiz*1+0x5837413],0x74
  409189:	jmp    FWORD PTR [eax+0xc]
  40918c:	mov    fs,esi
  40918e:	test   eax,0x61511ffb
  409193:	lods   eax,DWORD PTR ds:[esi]
  409194:	in     eax,0xc2
  409196:	test   DWORD PTR [edi+0x6e],esi
  409199:	sbb    DWORD PTR [eax],edx
  40919b:	push   edi
  40919c:	test   al,0x25
  40919e:	mov    ah,0xac
  4091a0:	or     edi,DWORD PTR [ecx-0x6e]
  4091a3:	lea    ebp,[edx+0x37]
  4091a6:	test   al,bh
  4091a8:	mov    ecx,0x4ea07f2f
  4091ad:	cmp    esi,DWORD PTR [edx+0x23]
  4091b0:	pop    esp
  4091b1:	pop    esp
  4091b2:	rcl    BYTE PTR [ecx-0x3bc2041d],1
  4091b8:	dec    ebp
  4091b9:	sar    BYTE PTR [edi+0x1a],0x91
  4091bd:	push   DWORD PTR [ecx-0x28]
  4091c0:	mov    edi,0x3bbf161a
  4091c5:	pop    edx
  4091c6:	ds xchg ebx,eax
  4091c8:	fsub   DWORD PTR [eax-0x6fe543a7]
  4091ce:	xor    eax,0x4d3821fa
  4091d3:	in     eax,dx
  4091d4:	cdq    
  4091d5:	scas   al,BYTE PTR es:[edi]
  4091d6:	xor    eax,0x1731e9c1
  4091db:	inc    ebx
  4091dc:	cmc    
  4091dd:	mov    esi,0x4b93d1a
  4091e2:	into   
  4091e3:	push   es
  4091e4:	jnp    0x409204
  4091e6:	into   
  4091e7:	cmp    dl,BYTE PTR [edx-0x2dcac097]
  4091ed:	or     ebx,ebx
  4091ef:	jns    0x409266
  4091f1:	and    al,0xd3
  4091f3:	xor    dl,BYTE PTR ds:0xa5091003
  4091f9:	sub    al,0x84
  4091fb:	lods   al,BYTE PTR ds:[esi]
  4091fc:	or     eax,0x6862f436
  409201:	jae    0x40925f
  409203:	jecxz  0x409237
  409205:	mov    bl,0x22
  409207:	sub    BYTE PTR [edi-0x51],dh
  40920a:	imul   esp,DWORD PTR [ecx+edx*1-0x246e8c1a],0x4dcb3b0b
  409215:	shl    BYTE PTR [edi-0x53],cl
  409218:	mov    edx,es
  40921a:	push   ecx
  40921b:	and    al,0xd
  40921d:	or     BYTE PTR [edx-0x17],ch
  409220:	jb     0x40926f
  409222:	xor    esp,DWORD PTR [esi-0x8]
  409225:	xchg   DWORD PTR [eax],ebp
  409227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409228:	fnsave [edx+0x3b]
  40922b:	xchg   ebx,eax
  40922c:	xor    DWORD PTR [eax],edi
  40922e:	mov    BYTE PTR [edx],0x68
  409231:	sbb    eax,DWORD PTR [edx-0x2fe2672c]
  409237:	xor    ecx,DWORD PTR [ecx]
  409239:	cmp    al,0x24
  40923b:	shl    BYTE PTR [ebx+0x24],cl
  40923e:	shl    BYTE PTR [ebx+eax*2-0x3ed56632],0x73
  409246:	rcr    edi,0xf1
  409249:	cmp    DWORD PTR [edi],ebx
  40924b:	push   ecx
  40924c:	inc    ebp
  40924d:	js     0x40925c
  40924f:	fnstsw ax
  409251:	test   BYTE PTR [edi],bl
  409253:	stos   BYTE PTR es:[edi],al
  409254:	xor    al,0x48
  409256:	test   DWORD PTR [ecx-0x12],esp
  409259:	mov    fs,edi
  40925b:	pusha  
  40925c:	sub    BYTE PTR [ecx],dl
  40925e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925f:	mov    ds:0x83171a67,eax
  409264:	rep movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  409267:	dec    esp
  409268:	(bad)  
  409269:	icebp  
  40926a:	and    bl,BYTE PTR [eax]
  40926c:	std    
  40926d:	(bad)  
  40926e:	cli    
  40926f:	xchg   ebx,eax
  409270:	in     al,dx
  409271:	mov    dh,0x2c
  409273:	sub    ch,0x1b
  409276:	adc    ah,bl
  409278:	mov    ebp,0x66e5ebd9
  40927d:	jmp    0xbfc5:0x2af0f191
  409284:	jecxz  0x40929f
  409286:	pop    ss
  409287:	pop    ds
  409288:	push   DWORD PTR [ecx+eiz*1-0x11]
  40928c:	xchg   dh,ch
  40928e:	pop    esi
  40928f:	neg    DWORD PTR [edx]
  409291:	(bad)  
  409293:	and    DWORD PTR [edx-0x2f],edx
  409296:	sbb    al,0x7a
  409298:	push   ds
  409299:	adc    ebx,edx
  40929b:	pop    ebx
  40929c:	shl    edx,1
  40929e:	push   ss
  40929f:	aad    0x6f
  4092a1:	jle    0x40930f
  4092a3:	mov    ecx,0x4b587072
  4092a8:	rol    DWORD PTR [ebx-0x80],1
  4092ab:	fdiv   QWORD PTR [ebx]
  4092ad:	(bad)  
  4092ae:	jns    0x40932f
  4092b0:	adc    DWORD PTR ds:0x486f5fcd,esi
  4092b6:	sahf   
  4092b7:	(bad)  
  4092b8:	mov    esi,0x6310abb4
  4092bd:	pop    ds
  4092be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092bf:	cli    
  4092c0:	(bad)  
  4092c1:	lahf   
  4092c2:	mov    DWORD PTR [edx+esi*4+0x1c08b27a],ecx
  4092c9:	xchg   BYTE PTR [edx+0x42],al
  4092cc:	add    BYTE PTR es:[edi+ecx*2-0x74],bl
  4092d1:	pop    eax
  4092d2:	xchg   ebp,eax
  4092d3:	jns    0x4092b2
  4092d5:	fimul  DWORD PTR [esi+ebp*8-0x56]
  4092d9:	mov    esi,0xb5607f31
  4092de:	lahf   
  4092df:	xor    ah,BYTE PTR [eax-0x73]
  4092e2:	lock push edi
  4092e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e5:	jno    0x40934d
  4092e7:	out    dx,al
  4092e8:	xlat   BYTE PTR ds:[ebx]
  4092e9:	es push edx
  4092eb:	sar    esp,cl
  4092ed:	mov    ebx,0xf017257a
  4092f2:	call   0x6785c5d0
  4092f7:	in     eax,0xdb
  4092f9:	xchg   ebp,eax
  4092fa:	mov    edx,0xd8b916af
  4092ff:	lods   eax,DWORD PTR ds:[esi]
  409300:	jecxz  0x409337
  409302:	jnp    0x40928b
  409304:	adc    BYTE PTR [esi+0x4b],bh
  409307:	pushf  
  409308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409309:	push   es
  40930a:	mov    es,WORD PTR ss:[ebx+0x3d]
  40930e:	data16 loope 0x4092cb
  409311:	test   DWORD PTR [esi-0x3e],0x2414101b
  409318:	adc    al,0x8a
  40931a:	out    dx,al
  40931b:	pop    esi
  40931c:	dec    ebx
  40931d:	sbb    al,0x26
  40931f:	lods   eax,DWORD PTR ds:[esi]
  409320:	iret   
  409321:	add    al,0x9a
  409323:	lods   eax,DWORD PTR ds:[esi]
  409324:	and    al,0xbd
  409326:	mov    ecx,0x1546adbb
  40932b:	xchg   BYTE PTR [esi+0x18],cl
  40932e:	in     al,dx
  40932f:	in     eax,dx
  409330:	push   ds
  409331:	clc    
  409332:	mov    esp,0x4c5d31
  409337:	icebp  
  409338:	mov    al,0x4a
  40933a:	das    
  40933b:	mul    DWORD PTR [ebx+eax*2-0x2698e1fa]
  409342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409343:	xlat   BYTE PTR ds:[ebx]
  409344:	pushf  
  409345:	xor    ebp,esp
  409347:	js     0x4093bb
  409349:	iret   
  40934a:	(bad)  
  40934b:	in     eax,dx
  40934c:	lea    esp,[edx]
  40934e:	shl    DWORD PTR [edi],0x99
  409351:	push   0x8bf86f08
  409356:	dec    eax
  409357:	pop    ds
  409358:	sbb    eax,0x64b9e712
  40935d:	mov    ds:0x198b79c2,eax
  409362:	jmp    0xb30d:0x575aa965
  409369:	stc    
  40936a:	jp     0x40932c
  40936c:	and    DWORD PTR [eax],0xf187cba3
  409372:	mov    edx,0xfe930652
  409377:	add    al,0x5b
  409379:	xchg   DWORD PTR [esi],edi
  40937b:	lods   eax,DWORD PTR ds:[esi]
  40937c:	add    al,0x9a
  40937e:	loop   0x409330
  409380:	push   es
  409381:	loop   0x40935e
  409383:	enter  0xcf4a,0x3f
  409387:	cs inc eax
  409389:	jle    0x40937b
  40938b:	push   ebx
  40938c:	aas    
  40938d:	or     DWORD PTR [edi],ecx
  40938f:	xor    bl,0xe2
  409392:	retf   0x4d9a
  409395:	inc    cx
  409397:	ss pushf 
  409399:	ds jl  0x4093f8
  40939c:	cmp    DWORD PTR [ecx+0x16b77a71],ebx
  4093a2:	out    0x68,eax
  4093a4:	push   cs
  4093a5:	(bad)  
  4093a6:	pextrw edx,(bad),0xc5
  4093a8:	push   edx
  4093a9:	xchg   esi,eax
  4093aa:	repz sub ecx,edx
  4093ad:	mov    ebx,0x3510040d
  4093b2:	adc    DWORD PTR [ebx+0x1],eax
  4093b5:	(bad)  
  4093b6:	mov    eax,0x66091aaf
  4093bb:	nop
  4093bc:	clc    
  4093bd:	inc    ebx
  4093be:	mov    BYTE PTR [esp+ebp*1-0x10],ah
  4093c2:	jmp    0xad54:0xb276f19e
  4093c9:	inc    ecx
  4093ca:	(bad)
  4093cd:	dec    ebx
  4093ce:	and    al,0xcd
  4093d0:	clc    
  4093d1:	(bad)  
  4093d2:	jle    0x409395
  4093d4:	and    eax,0x1b588ac5
  4093d9:	or     esi,ecx
  4093db:	pop    edi
  4093dc:	jno    0x4093b2
  4093de:	add    esi,DWORD PTR [ebx]
  4093e0:	add    dh,cl
  4093e2:	mov    ds:0xa3ecf492,al
  4093e7:	clc    
  4093e8:	aam    0xb5
  4093ea:	adc    eax,0x1c1d1189
  4093ef:	push   edi
  4093f0:	cmp    eax,0xecd6713d
  4093f5:	mov    al,0x1c
  4093f7:	and    esi,DWORD PTR ds:0x14408f53
  4093fd:	jnp    0x4093b4
  4093ff:	pop    ss
  409400:	mov    esp,DWORD PTR [eax-0x23]
  409403:	dec    ebp
  409404:	mov    edx,0xf3b9d7cc
  409409:	test   BYTE PTR [edi-0x28],ch
  40940c:	lods   eax,DWORD PTR ds:[esi]
  40940d:	mov    dl,0x20
  40940f:	mov    al,0xbc
  409411:	dec    edi
  409412:	rol    BYTE PTR [esi+0x2791c712],0xb4
  409419:	fs mov esi,0x468c850b
  40941f:	and    eax,0xf3246ce6
  409424:	(bad)  
  409425:	loope  0x40948c
  409427:	adc    edx,DWORD PTR [edx-0x78]
  40942a:	cli    
  40942b:	sti    
  40942c:	or     ah,BYTE PTR ss:[ebx+ebp*4]
  409430:	repnz lods eax,DWORD PTR ds:[esi]
  409432:	mov    DWORD PTR [edi-0x34],ecx
  409435:	cwde   
  409436:	pop    ebp
  409437:	fldenv [ebx-0x4d]
  40943a:	mov    ds:0x20f67fc3,eax
  40943f:	jae    0x409446
  409441:	or     al,0x28
  409443:	ds data16 or al,0x7f
  409447:	ss out dx,al
  409449:	add    BYTE PTR [ecx+0x59ac8a14],bh
  40944f:	mov    al,0x58
  409451:	mov    bl,0x66
  409453:	pop    ebx
  409454:	ret    0x8975
  409457:	push   ebp
  409458:	pop    edi
  409459:	mov    eax,DWORD PTR es:[edi+0x3bc61865]
  409460:	jmp    0x409471
  409462:	loop   0x40948e
  409464:	adc    DWORD PTR [esi],ecx
  409466:	loopne 0x409458
  409468:	int3   
  409469:	fisubr DWORD PTR [edi+0x43bf2b44]
  40946f:	mov    edi,0xe4812a5a
  409474:	out    0xb9,eax
  409476:	stc    
  409477:	pop    esp
  409478:	ds adc eax,0xa83b9ad7
  40947e:	dec    ebp
  40947f:	popa   
  409480:	lods   eax,DWORD PTR ds:[esi]
  409481:	push   esp
  409482:	inc    esi
  409483:	lock popf 
  409485:	mov    dl,0x62
  409487:	out    dx,eax
  409488:	sbb    eax,0x2a325901
  40948d:	pop    edx
  40948e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40948f:	out    0x3f,al
  409491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409492:	pop    esp
  409493:	(bad)  
  409494:	test   DWORD PTR [ebp-0x9],0x8f46e58d
  40949b:	sbb    esp,ecx
  40949d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40949e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40949f:	mov    bh,0xb
  4094a1:	push   es
  4094a2:	dec    ecx
  4094a3:	or     ch,bh
  4094a5:	or     bl,bl
  4094a7:	adc    esi,DWORD PTR [eax-0x78]
  4094aa:	pop    es
  4094ab:	das    
  4094ac:	jg     0x40945f
  4094ae:	xor    edx,edi
  4094b0:	cwde   
  4094b1:	push   cs
  4094b2:	int3   
  4094b3:	xlat   BYTE PTR ds:[ebx]
  4094b4:	ds sbb eax,0x4668a730
  4094ba:	jmp    0x2912:0xed5bdda8
  4094c1:	inc    ebp
  4094c2:	pushf  
  4094c3:	jmp    0xed80:0xcf7fd23a
  4094ca:	fcomi  st,st(3)
  4094cc:	xchg   edi,eax
  4094cd:	imul   edi,DWORD PTR [esi-0x56],0xa0dea3c3
  4094d4:	pop    ecx
  4094d5:	xor    ebp,0x4c
  4094d8:	jmp    0x40954a
  4094da:	jmp    0x3300:0x3cc597ac
  4094e1:	fs in  al,0x3e
  4094e4:	ret    0xde2
  4094e7:	inc    eax
  4094e8:	cmc    
  4094e9:	sbb    bl,BYTE PTR [ebx+0x3f]
  4094ec:	popf   
  4094ed:	(bad)  
  4094ee:	sub    al,0x8c
  4094f0:	mov    BYTE PTR [eax+edx*8-0x7b],0x6b
  4094f5:	push   eax
  4094f6:	pop    edi
  4094f7:	mov    dh,0x3f
  4094f9:	imul   esi,DWORD PTR [edx],0xffffffee
  4094fc:	xor    DWORD PTR [edi-0x1f],ebx
  4094ff:	pusha  
  409500:	mov    eax,ds:0xb63a51da
  409505:	test   DWORD PTR [esp+eiz*2],ebx
  409508:	lods   al,BYTE PTR ds:[esi]
  409509:	outs   dx,DWORD PTR ds:[esi]
  40950a:	(bad)  
  40950b:	(bad)  
  40950c:	jmp    0x31cc:0xcca7c23e
  409513:	jbe    0x409558
  409515:	cmp    al,0x8
  409517:	jge    0x409544
  409519:	add    eax,0xbc7c1e0d
  40951e:	mov    ds:0x2c2d2b84,al
  409523:	cwde   
  409524:	cmp    eax,0x7866fffc
  409529:	lea    edx,[eax]
  40952b:	or     ch,BYTE PTR [ecx-0x5655648]
  409531:	gs fs mov ah,0x66
  409535:	and    bh,bh
  409537:	mov    ds:0x93142d7f,al
  40953c:	sub    BYTE PTR [edx],ah
  40953e:	push   ds
  40953f:	sbb    DWORD PTR [ecx+0x129a8d2a],eax
  409545:	dec    ebp
  409546:	shl    al,0xd2
  409549:	in     eax,dx
  40954a:	xor    ecx,DWORD PTR [esp+ebp*8-0x18]
  40954e:	jge    0x4095c3
  409550:	es stos BYTE PTR es:[edi],al
  409552:	loope  0x40959d
  409554:	mov    al,0xb
  409556:	enter  0xba0e,0xc4
  40955a:	sti    
  40955b:	mov    al,BYTE PTR [esi+0x31]
  40955e:	mov    fs,WORD PTR [edi-0x78a8f53]
  409564:	or     ch,dh
  409566:	fnstsw ax
  409568:	leave  
  409569:	js     0x409505
  40956b:	(bad)  
  40956c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40956d:	jns    0x409597
  40956f:	in     eax,dx
  409570:	out    dx,eax
  409571:	or     edx,esi
  409573:	cmp    cl,BYTE PTR [esi]
  409575:	lock xor edx,DWORD PTR [edi]
  409578:	add    eax,0x9600ce10
  40957d:	int    0x50
  40957f:	into   
  409580:	lds    ecx,FWORD PTR [ecx-0x2e]
  409583:	into   
  409584:	lock fwait
  409586:	mov    eax,ds:0x66c8b523
  40958b:	push   0x3df55f96
  409590:	inc    eax
  409591:	ja     0x409522
  409593:	push   ebp
  409594:	sub    BYTE PTR [esi+ebx*2-0x6fa9abb],dh
  40959b:	or     edx,edi
  40959d:	clc    
  40959e:	shr    DWORD PTR [ebx],cl
  4095a0:	bound  edi,QWORD PTR [esi-0x5662a634]
  4095a6:	out    dx,eax
  4095a7:	adc    BYTE PTR [si+0x424d],0x41
  4095ad:	call   0xe8ece1b8
  4095b2:	pop    ss
  4095b3:	aad    0x4
  4095b5:	ss jl  0x409570
  4095b8:	jno    0x409630
  4095ba:	call   0x49e0:0x2bd9da73
  4095c1:	adc    ebp,DWORD PTR [edx+0x774bcab5]
  4095c7:	ret    
  4095c8:	test   ah,ch
  4095ca:	(bad)  
  4095cb:	pop    ecx
  4095cc:	(bad)  
  4095cd:	es mov esi,0x846225ba
  4095d3:	jae    0x40963a
  4095d5:	pop    esi
  4095d6:	cmp    al,0x3e
  4095d8:	sub    bl,BYTE PTR [ecx]
  4095da:	xor    BYTE PTR [ebx+0x7405294e],dl
  4095e0:	dec    ebx
  4095e1:	jl     0x4095cd
  4095e3:	inc    esp
  4095e4:	pop    ebp
  4095e5:	or     DWORD PTR [esi+0x6061d933],ecx
  4095eb:	push   ss
  4095ec:	mov    edx,0xccba629
  4095f1:	xlat   BYTE PTR cs:[ebx]
  4095f3:	gs inc esi
  4095f5:	xchg   esi,eax
  4095f6:	inc    esp
  4095f7:	push   eax
  4095f8:	clc    
  4095f9:	cmp    eax,0xa6852840
  4095fe:	ret    0x9b78
  409601:	out    dx,al
  409602:	xchg   edx,eax
  409603:	or     eax,DWORD PTR [ecx-0xc]
  409606:	or     edi,ebx
  409608:	into   
  409609:	pop    ss
  40960a:	push   ebp
  40960b:	daa    
  40960c:	bound  ebp,QWORD PTR [eax+esi*4]
  40960f:	std    
  409610:	setno  BYTE PTR [esi]
  409613:	adc    al,0xed
  409615:	xor    al,BYTE PTR [edi-0x4f74b80a]
  40961b:	dec    edi
  40961c:	(bad)  
  40961d:	hlt    
  40961e:	sub    dl,BYTE PTR [esi+0x52]
  409621:	sub    DWORD PTR [ebp+edi*8+0x48619370],ebp
  409628:	sub    al,0xc7
  40962a:	mov    edi,fs
  40962c:	jle    0x4095f6
  40962e:	adc    edi,esi
  409630:	fimul  WORD PTR [ebp-0x5a7d9d8c]
  409636:	stos   DWORD PTR es:[edi],eax
  409637:	cwde   
  409638:	std    
  409639:	das    
  40963a:	mov    ds,WORD PTR [edi]
  40963c:	add    edx,ecx
  40963e:	je     0x4095f5
  409640:	push   ebx
  409641:	repz loopne 0x4096bc
  409644:	(bad)  
  409646:	mov    WORD PTR [edi],?
  409648:	stc    
  409649:	mov    ds:0xa53da1b9,al
  40964e:	xchg   ecx,eax
  40964f:	and    eax,0x2c7b8b87
  409654:	dec    ecx
  409655:	add    BYTE PTR [eax-0x7395a05d],bl
  40965b:	add    DWORD PTR [eax+ebp*8+0x3],ebx
  40965f:	cli    
  409660:	fwait
  409661:	call   0x1981:0xd397d2ad
  409668:	pusha  
  409669:	stos   BYTE PTR es:[edi],al
  40966a:	in     eax,dx
  40966b:	ins    BYTE PTR es:[edi],dx
  40966c:	jnp    0x40960c
  40966e:	xor    al,BYTE PTR [ebp+0x3b]
  409671:	jl     0x409642
  409673:	loope  0x4096cf
  409675:	ret    
  409676:	mov    al,ds:0xeb81d7f0
  40967b:	sbb    al,0x2
  40967d:	fucomp st(5)
  40967f:	or     eax,0xc7844a8f
  409684:	inc    ecx
  409685:	lahf   
  409686:	jb     0x409615
  409688:	(bad)  
  409689:	shl    dl,1
  40968b:	add    al,0xe0
  40968d:	sub    BYTE PTR [ebx+0x27],dh
  409690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409691:	adc    esi,DWORD PTR [esi-0x25]
  409694:	xchg   esp,eax
  409695:	xor    ecx,esp
  409697:	add    al,0xda
  409699:	mov    al,ch
  40969b:	pop    esi
  40969c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40969d:	sub    BYTE PTR [edi+0x11],al
  4096a0:	push   edx
  4096a1:	add    al,0xe6
  4096a3:	(bad)  ds:0x1468d970
  4096a9:	mov    edi,0x9d2cc8dd
  4096ae:	add    DWORD PTR [edi+0x75],esp
  4096b1:	and    ebp,DWORD PTR [ecx+0x618c2b9c]
  4096b7:	sbb    al,0xc5
  4096b9:	not    BYTE PTR [ecx+edx*1]
  4096bc:	pop    ebp
  4096bd:	fimul  DWORD PTR [eax]
  4096bf:	dec    ebp
  4096c0:	imul   ecx,DWORD PTR ds:[ebx],0x94f71c5c
  4096c7:	stos   DWORD PTR es:[edi],eax
  4096c8:	fwait
  4096c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ca:	mov    cl,0x7e
  4096cc:	cmp    eax,0x24671555
  4096d1:	clc    
  4096d2:	mov    ah,0xd9
  4096d4:	add    al,0xdb
  4096d6:	lods   eax,DWORD PTR ds:[esi]
  4096d7:	cld    
  4096d8:	fcom   DWORD PTR [eax*4+0x3fff1b2f]
  4096df:	add    bh,0x1b
  4096e2:	popf   
  4096e3:	xchg   ecx,eax
  4096e4:	cli    
  4096e5:	mov    bh,0x79
  4096e7:	jne    0x409743
  4096e9:	add    al,0x5d
  4096eb:	mov    bl,0xb5
  4096ed:	out    0x5d,eax
  4096ef:	mov    BYTE PTR ds:0x106342fa,0xd0
  4096f6:	jae    0x4096ce
  4096f8:	xlat   BYTE PTR ds:[ebx]
  4096f9:	fcmove st,st(3)
  4096fb:	je     0x4096a4
  4096fd:	jmp    0x409770
  4096ff:	inc    eax
  409700:	ins    DWORD PTR es:[edi],dx
  409701:	pushf  
  409702:	add    ebx,edx
  409704:	inc    eax
  409705:	jne    0x409747
  409707:	push   es
  409708:	retf   
  409709:	nop
  40970a:	xor    ch,BYTE PTR [ebp-0x17]
  40970d:	inc    ecx
  40970e:	and    ecx,DWORD PTR [eax+0x64dcc10e]
  409714:	test   eax,0xf331dd57
  409719:	js     0x4096a2
  40971b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40971c:	stos   DWORD PTR es:[edi],eax
  40971d:	jle    0x409767
  40971f:	dec    ebp
  409720:	xor    dl,BYTE PTR [ebx+0x57]
  409723:	(bad)  
  409724:	sbb    al,0x87
  409726:	dec    edx
  409727:	xor    DWORD PTR [eax-0x18],eax
  40972a:	mov    ebx,0x2644dbfb
  40972f:	xor    esi,DWORD PTR [ebp-0x3c88f495]
  409735:	mov    edx,0x87c8b11
  40973a:	loop   0x4096fa
  40973c:	pop    ebp
  40973d:	sbb    dh,BYTE PTR [edx-0xc]
  409740:	add    al,0xd8
  409742:	pop    ebx
  409743:	jge    0x4097a3
  409745:	and    ah,dh
  409747:	or     eax,0xa93c6925
  40974c:	jl     0x409792
  40974e:	repz js 0x40970d
  409751:	mul    BYTE PTR [eax-0x6c]
  409754:	icebp  
  409755:	inc    edx
  409756:	fimul  DWORD PTR [esi-0x1adb2a6e]
  40975c:	mov    eax,ds:0x8014162d
  409761:	in     eax,0xe0
  409763:	lea    ebp,[ebx-0x55]
  409766:	loope  0x4097d5
  409768:	shl    esp,1
  40976a:	inc    esi
  40976b:	retf   0xb06b
  40976e:	dec    esp
  40976f:	and    edi,ebp
  409771:	gs and al,0x28
  409774:	ret    
  409775:	sar    DWORD PTR [esi],0x1b
  409778:	mov    cl,0x3d
  40977a:	mov    ecx,0xb9ef07c
  40977f:	mov    edi,0xb2aa8d1e
  409784:	mov    esi,0x5379aa02
  409789:	cmp    bl,BYTE PTR [edx+0x1e]
  40978c:	repz inc ebx
  40978e:	rol    cl,cl
  409790:	sbb    BYTE PTR [edi],al
  409792:	scas   al,BYTE PTR es:[edi]
  409793:	mov    al,0xe3
  409795:	clc    
  409796:	in     eax,dx
  409797:	dec    esi
  409798:	mov    ds:0xa5cb64c7,al
  40979d:	mov    ebx,0x8e14c884
  4097a2:	xchg   esi,eax
  4097a3:	cmc    
  4097a4:	stos   BYTE PTR es:[edi],al
  4097a5:	shr    DWORD PTR [edi],cl
  4097a7:	stos   DWORD PTR es:[edi],eax
  4097a8:	sbb    al,0xf1
  4097aa:	or     eax,0x74879d29
  4097af:	and    al,0x60
  4097b1:	add    esi,edx
  4097b3:	mov    WORD PTR [edi-0x76e64179],es
  4097b9:	int3   
  4097ba:	leave  
  4097bb:	cmp    eax,0xf99e43f4
  4097c0:	xor    DWORD PTR [ebx-0x698c2445],0xffffffe6
  4097c7:	and    al,0xf4
  4097ca:	test   dh,0xef
  4097cd:	and    al,0x8
  4097cf:	mov    al,0x6b
  4097d1:	adc    ch,BYTE PTR [ecx]
  4097d3:	xchg   ecx,eax
  4097d4:	ret    0xdbd6
  4097d7:	jbe    0x40983f
  4097d9:	daa    
  4097da:	mov    ebp,0x514956a9
  4097df:	mov    ebx,0x6401623f
  4097e4:	fcom   DWORD PTR [ecx]
  4097e6:	and    BYTE PTR [ecx+0xc2dacf7],al
  4097ec:	into   
  4097ed:	mov    edi,0xe57daa7f
  4097f2:	xchg   edi,eax
  4097f3:	cdq    
  4097f4:	outs   dx,DWORD PTR ds:[esi]
  4097f5:	out    dx,eax
  4097f6:	cmp    BYTE PTR es:[edi-0x30],bh
  4097fa:	cmp    BYTE PTR [edi+0x5],al
  4097fd:	std    
  4097fe:	adc    esi,edi
  409800:	icebp  
  409801:	popa   
  409802:	jbe    0x40985d
  409804:	mov    dh,0x42
  409806:	mov    eax,ds:0xd37ad083
  40980b:	sbb    al,0xf8
  40980d:	fistp  DWORD PTR [edx+0x72]
  409810:	mov    bh,0x93
  409812:	sub    edi,DWORD PTR [eax+eiz*1-0x570cc931]
  409819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40981a:	push   ebx
  40981b:	iret   
  40981c:	jle    0x4097ca
  40981e:	xor    BYTE PTR [edi-0xc86c730],0xc2
  409825:	and    DWORD PTR [ebp+0x7a],0xe8c88204
  40982c:	in     al,0xd6
  40982e:	(bad)  
  40982f:	imul   esi,DWORD PTR [ebx],0x47
  409832:	sub    eax,0x8936db8f
  409837:	mov    edi,0xf43fc55a
  40983c:	out    dx,al
  40983d:	call   0xbd5ac74f
  409842:	adc    ch,dh
  409844:	pop    esp
  409845:	pop    ss
  409846:	pushf  
  409847:	jmp    0x337b0419
  40984c:	mov    ch,0x1a
  40984e:	push   edi
  40984f:	jno    0x4097e6
  409851:	mov    ds:0x39dc7288,al
  409856:	mov    WORD PTR [edx],?
  409858:	mov    edi,0xa987c6bc
  40985d:	cmp    bl,dh
  40985f:	scas   al,BYTE PTR es:[edi]
  409860:	aas    
  409861:	rol    DWORD PTR [ebp+0xb],cl
  409864:	ficomp DWORD PTR [eax]
  409866:	jae    0x40980a
  409868:	out    dx,al
  409869:	addr16 mov ch,0xc3
  40986c:	xchg   edx,eax
  40986d:	cmc    
  40986e:	cmp    BYTE PTR [edi],ah
  409870:	jge    0x4098e4
  409872:	popa   
  409873:	out    dx,al
  409874:	push   ecx
  409875:	add    esp,DWORD PTR ds:0x56741f8a
  40987b:	outs   dx,BYTE PTR ds:[esi]
  40987c:	clc    
  40987d:	push   ss
  40987e:	sti    
  40987f:	inc    ebx
  409880:	addr16 out dx,al
  409882:	fwait
  409883:	or     bh,BYTE PTR [ebx+0x4aa07f96]
  409889:	cs int3 
  40988b:	loope  0x40984d
  40988d:	xor    BYTE PTR [esi+0x556ff27a],ch
  409893:	or     cl,cl
  409895:	push   ds
  409896:	ret    
  409897:	out    0x1b,al
  409899:	mov    ebp,0x129737ef
  40989e:	pop    ebp
  40989f:	rcr    DWORD PTR [ebx-0xc282eab],0xa3
  4098a6:	xchg   DWORD PTR [eax-0x6b0da33d],ebx
  4098ac:	aad    0xba
  4098ae:	fincstp 
  4098b0:	cmp    BYTE PTR [edx-0x2a],bh
  4098b3:	dec    eax
  4098b4:	pop    ecx
  4098b5:	fst    QWORD PTR [edi-0xb71a90f]
  4098bb:	cmp    ah,BYTE PTR [eax-0x4d]
  4098be:	repz mov ecx,0x2f16f218
  4098c4:	cmp    al,0x51
  4098c6:	jb     0x40993f
  4098c8:	sahf   
  4098c9:	mov    ds:0x23310a79,al
  4098ce:	sub    cl,BYTE PTR [edi]
  4098d0:	jecxz  0x40985e
  4098d2:	cld    
  4098d3:	lods   al,BYTE PTR ds:[esi]
  4098d4:	add    cl,BYTE PTR [ebx+0x62]
  4098d7:	sub    BYTE PTR [eax+0x33],bh
  4098da:	pop    ds
  4098db:	mov    dh,0x9a
  4098dd:	or     BYTE PTR [ebp-0x3e],dl
  4098e0:	in     eax,0x4f
  4098e2:	enter  0xea77,0x87
  4098e6:	fnsave [ebx+0x47]
  4098e9:	repnz push edx
  4098eb:	rol    BYTE PTR [edi+0x3d],cl
  4098ee:	out    0xf5,eax
  4098f0:	sbb    ebx,edx
  4098f2:	int3   
  4098f3:	cmp    al,BYTE PTR [esi]
  4098f5:	cmp    BYTE PTR [si-0x6b04],cl
  4098fa:	pop    ebx
  4098fb:	div    DWORD PTR [ecx+0x5f]
  4098fe:	out    dx,eax
  4098ff:	jecxz  0x4098ef
  409901:	dec    ebp
  409902:	and    eax,0x6647d1ae
  409907:	jnp    0x4098dc
  409909:	ret    0x15b4
  40990c:	test   eax,0xdfbe8d1b
  409911:	clc    
  409912:	jecxz  0x4098dd
  409914:	mov    al,0x16
  409916:	push   ss
  409917:	cmp    al,0x14
  409919:	mov    ch,0x86
  40991b:	test   al,0xb
  40991d:	(bad)  [ecx+0x67ec5d0]
  409923:	jecxz  0x409970
  409925:	dec    edx
  409926:	cmp    ebx,edi
  409928:	push   DWORD PTR [ebx+eax*8]
  40992b:	repz out 0x30,eax
  40992e:	push   eax
  40992f:	sbb    eax,0xc05cfe3c
  409934:	jecxz  0x40991e
  409936:	dec    edx
  409937:	xchg   edx,eax
  409938:	mov    bl,0x5a
  40993a:	mov    dh,0x46
  40993c:	call   FWORD PTR [ebx+0x1e]
  40993f:	mov    al,ds:0x633622a8
  409944:	pop    edi
  409945:	fcomp  st(3)
  409947:	iret   
  409948:	sbb    eax,0x5dfdf00
  40994d:	pushf  
  40994e:	cmovae ecx,DWORD PTR ds:0x3bf22260
  409955:	push   ebp
  409956:	sub    al,0xcc
  409958:	push   ecx
  409959:	out    0x55,eax
  40995b:	mov    edx,db1
  40995e:	imul   dh
  409960:	hlt    
  409961:	xchg   ebx,eax
  409962:	stc    
  409963:	fst    QWORD PTR [edi]
  409965:	test   DWORD PTR [esi],0xfe4a07a8
  40996b:	xlat   BYTE PTR ds:[ebx]
  40996c:	pop    edx
  40996d:	inc    ebx
  40996e:	rcr    DWORD PTR [ecx-0x5a5fedc2],0x3c
  409975:	mov    WORD PTR [ebx],ss
  409977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409978:	idiv   esp
  40997a:	popw   ds
  40997c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40997d:	jmp    0x409927
  40997f:	(bad)  
  409980:	jmp    0x348501bc
  409985:	int    0xba
  409987:	lds    edi,FWORD PTR ds:0x123360fa
  40998d:	into   
  40998e:	bound  esp,QWORD PTR [ecx-0x161fab4f]
  409994:	jb     0x4099f8
  409996:	loopne 0x4099d7
  409998:	lods   eax,DWORD PTR ds:[esi]
  409999:	push   ebp
  40999a:	jb     0x409947
  40999c:	mov    esi,ebx
  40999e:	sub    ebp,DWORD PTR [edx-0x475f3bd4]
  4099a4:	cmc    
  4099a5:	rcr    BYTE PTR [eax-0x43],cl
  4099a8:	jns    0x409999
  4099aa:	xor    bh,BYTE PTR [edi]
  4099ac:	xor    ecx,eax
  4099ae:	fisttp WORD PTR [ebx+ebx*2-0x13]
  4099b2:	jns    0x4099f2
  4099b4:	out    0x4a,eax
  4099b6:	cs jg  0x40999d
  4099b9:	cmc    
  4099ba:	dec    ebx
  4099bb:	ins    DWORD PTR es:[edi],dx
  4099bc:	test   DWORD PTR [ebp+0x3397ef6b],edx
  4099c2:	xchg   ebp,eax
  4099c3:	clc    
  4099c4:	(bad)  
  4099c5:	sub    al,0xdb
  4099c7:	jmp    0x949e:0xfe8227d6
  4099ce:	ficomp DWORD PTR [eax]
  4099d0:	gs (bad) 
  4099d2:	xlat   BYTE PTR ds:[ebx]
  4099d3:	lock jns 0x4099b8
  4099d6:	cmc    
  4099d7:	adc    BYTE PTR [ebx-0x1567d2f3],0x33
  4099de:	fnstenv [edx]
  4099e0:	and    DWORD PTR [ebx-0x13],esi
  4099e3:	scas   eax,DWORD PTR es:[edi]
  4099e4:	mov    edi,0x32c32086
  4099e9:	inc    edi
  4099ea:	mov    cl,BYTE PTR [edx]
  4099ec:	cmp    DWORD PTR ds:0xa5a67dfa,ebx
  4099f2:	jl     0x4099c2
  4099f4:	pop    esp
  4099f5:	xchg   ebx,eax
  4099f6:	jp     0x4099ff
  4099f8:	xchg   edx,eax
  4099f9:	mov    edi,0xe3046820
  4099fe:	jp     0x40998f
  409a00:	add    BYTE PTR [edi-0xb482696],bh
  409a06:	hlt    
  409a07:	(bad)  
  409a08:	mov    ds:0x585c33ae,al
  409a0d:	call   0xdf9:0xe23d59b5
  409a14:	xchg   ecx,eax
  409a15:	mov    ds:0x20553de6,al
  409a1a:	out    dx,al
  409a1b:	daa    
  409a1c:	mov    ds:0x350e9de3,eax
  409a21:	lea    ebx,[edx-0x32736fa9]
  409a27:	jge    0x409a42
  409a29:	pop    edx
  409a2a:	add    eax,0x65345734
  409a2f:	mov    ds:0xb10f7e69,al
  409a34:	sbb    ecx,ecx
  409a36:	xlat   BYTE PTR ds:[ebx]
  409a37:	xchg   esi,eax
  409a38:	add    esp,DWORD PTR [esi+0x6b]
  409a3b:	cld    
  409a3c:	jne    0x409a25
  409a3e:	inc    ecx
  409a3f:	(bad)  
  409a40:	jno    0x409a34
  409a42:	fcom   QWORD PTR [edi+0x3ac2fc]
  409a48:	ins    BYTE PTR es:[edi],dx
  409a49:	inc    ebp
  409a4a:	mov    esi,0x23c70288
  409a4f:	push   0x88ea306c
  409a54:	sbb    DWORD PTR [ebx+0x1d],ebx
  409a57:	in     eax,dx
  409a58:	xor    bl,bl
  409a5a:	mov    ch,BYTE PTR [ebx+0x10]
  409a5d:	add    eax,0x47b60398
  409a62:	pop    esi
  409a63:	jecxz  0x409a96
  409a65:	loopne 0x409a65
  409a67:	pop    ds
  409a68:	imul   BYTE PTR [ecx-0x2c]
  409a6b:	add    dh,bl
  409a6d:	sbb    ebx,ecx
  409a6f:	pop    esp
  409a70:	xlat   BYTE PTR ds:[ebx]
  409a71:	push   esi
  409a72:	adc    al,0xa9
  409a74:	cmp    al,BYTE PTR [esi]
  409a76:	pop    eax
  409a77:	sbb    al,0xc
  409a79:	scas   eax,DWORD PTR es:[edi]
  409a7a:	inc    esi
  409a7b:	arpl   WORD PTR [eax],ax
  409a7d:	cs das 
  409a7f:	shl    DWORD PTR [esi+0x4e6d4028],1
  409a85:	adc    ah,BYTE PTR [ebp*1+0x63ccef62]
  409a8c:	mov    dh,0xe5
  409a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a8f:	sub    DWORD PTR [ebx+0x57c7de0c],0x4afd96af
  409a99:	jmp    0x976aac64
  409a9e:	ins    BYTE PTR es:[edi],dx
  409a9f:	cwde   
  409aa0:	je     0x409a61
  409aa2:	in     al,0xe2
  409aa4:	cmp    bl,BYTE PTR [edx+0x18]
  409aa7:	or     esi,DWORD PTR cs:[ebx+0x38834544]
  409aae:	mov    BYTE PTR [esi-0x1e74c7d2],ah
  409ab4:	or     dl,BYTE PTR [eax+0x9]
  409ab7:	mov    esp,0xafc88780
  409abc:	je     0x409a91
  409abe:	call   0xbf3afbe4
  409ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac4:	push   ecx
  409ac5:	mov    bh,0x5a
  409ac7:	popf   
  409ac8:	mov    eax,0xc5cc99f4
  409acd:	sbb    al,0x11
  409acf:	sub    BYTE PTR [edx-0x7b],cl
  409ad2:	and    edi,ecx
  409ad4:	pop    ebp
  409ad5:	retf   
  409ad6:	mov    ds:0x76da1412,al
  409adb:	lods   eax,DWORD PTR ds:[esi]
  409adc:	xor    dl,BYTE PTR [esi-0x37]
  409adf:	xor    DWORD PTR ds:[ebp+ebp*2-0x39bb4588],eax
  409ae7:	stos   DWORD PTR es:[edi],eax
  409ae8:	or     eax,DWORD PTR [esi+edi*1]
  409aeb:	mov    esp,0x52e06c9c
  409af0:	or     esp,ebx
  409af2:	push   ebp
  409af3:	mov    ds:0xd0d7a6cc,al
  409af8:	loopne 0x409a9b
  409afa:	inc    ecx
  409afb:	test   DWORD PTR [edx-0x5dbd6ed7],eax
  409b01:	pop    ebx
  409b02:	fcomp  st(0)
  409b04:	mov    ah,0xab
  409b06:	int3   
  409b07:	in     al,0xa5
  409b09:	cld    
  409b0a:	les    eax,FWORD PTR [eax-0x31274a58]
  409b10:	loop   0x409adc
  409b12:	mov    eax,0x691322c6
  409b17:	iret   
  409b18:	dec    edi
  409b19:	mov    dl,0xce
  409b1b:	mov    ebx,0xc5278895
  409b20:	inc    ebx
  409b21:	pop    ebp
  409b22:	xor    eax,0x41af052a
  409b27:	fnsave [esi-0x70ad32f0]
  409b2d:	fild   DWORD PTR [ecx]
  409b2f:	pop    esi
  409b30:	mov    bl,0x6e
  409b32:	cmc    
  409b33:	push   edx
  409b34:	(bad)  
  409b35:	repz (bad) 
  409b37:	push   esp
  409b38:	jg     0x409ba4
  409b3a:	jb     0x409b04
  409b3c:	int    0x8e
  409b3e:	ret    0xe858
  409b41:	jnp    0x409b4c
  409b43:	xor    esp,DWORD PTR [ebp+0x20]
  409b46:	mov    ds:0xd074a528,eax
  409b4b:	repnz clc 
  409b4d:	fcomp  QWORD PTR [edx-0x4d]
  409b50:	mov    ds:0x4c11226b,al
  409b55:	inc    edi
  409b56:	jp     0x409bd2
  409b58:	in     al,dx
  409b59:	call   0x9bcb77dd
  409b5e:	push   ecx
  409b5f:	push   ecx
  409b60:	addr16 push eax
  409b62:	mov    eax,0x2c9db8da
  409b67:	nop
  409b68:	xor    BYTE PTR [ecx-0x2],cl
  409b6b:	push   cs
  409b6c:	imul   ebx,DWORD PTR [ecx+0x5685106b],0xffffffcd
  409b73:	inc    edi
  409b74:	or     bl,ch
  409b76:	mov    esp,0xe8409406
  409b7b:	cld    
  409b7c:	shl    BYTE PTR [ebx+ebx*2+0x67],cl
  409b80:	(bad)  
  409b82:	mov    DWORD PTR ds:0xcc9355d8,ecx
  409b88:	je     0x409b61
  409b8a:	das    
  409b8b:	xchg   ebx,eax
  409b8c:	int    0xc5
  409b8e:	mov    ebx,0xa9265277
  409b94:	repnz sbb al,0x61
  409b97:	xor    eax,0xc857495b
  409b9c:	sub    esi,DWORD PTR [edi+0x62]
  409b9f:	jbe    0x409bfe
  409ba1:	aaa    
  409ba2:	pop    esi
  409ba3:	gs push ebp
  409ba5:	sub    eax,0xf8602cbc
  409baa:	cmp    dl,BYTE PTR [ecx-0x33]
  409bad:	jbe    0x409b78
  409baf:	sti    
  409bb0:	pusha  
  409bb1:	sub    BYTE PTR [edx],cl
  409bb3:	iret   
  409bb4:	and    BYTE PTR [edx+0x52],0xf9
  409bb8:	imul   esp,esp,0x4596029b
  409bbe:	xchg   esp,eax
  409bbf:	cmp    edi,DWORD PTR [edi+eiz*2]
  409bc2:	jo     0x409bd3
  409bc4:	or     eax,0xd297bfba
  409bc9:	push   ebp
  409bca:	(bad)  
  409bcb:	ficom  DWORD PTR [ebp+0x12]
  409bce:	jmp    0x4230:0x37284d
  409bd5:	stos   DWORD PTR es:[edi],eax
  409bd6:	int    0x3a
  409bd8:	xor    dl,BYTE PTR [eax-0x5225baf5]
  409bde:	icebp  
  409bdf:	dec    edi
  409be0:	loope  0x409c58
  409be2:	dec    edx
  409be3:	push   ecx
  409be4:	lods   eax,DWORD PTR ds:[esi]
  409be5:	ins    BYTE PTR es:[edi],dx
  409be6:	sub    DWORD PTR [esi-0x45],eax
  409be9:	(bad)  
  409bea:	xchg   ebp,eax
  409beb:	or     bl,0x0
  409bee:	push   es
  409bef:	hlt    
  409bf0:	imul   eax,DWORD PTR [esi-0x499d483b],0x42dc6f4e
  409bfa:	push   edx
  409bfb:	jns    0x409b93
  409bfd:	cdq    
  409bfe:	bound  esp,QWORD PTR [edx-0x7c1ae75c]
  409c04:	sbb    eax,0xde5bbade
  409c09:	in     al,0xe3
  409c0b:	xor    al,0xa
  409c0d:	jae    0x409c22
  409c0f:	lods   al,BYTE PTR ds:[esi]
  409c10:	adc    esi,ecx
  409c12:	and    al,0x74
  409c14:	dec    esp
  409c15:	test   al,0x1
  409c17:	imul   ebp,esp,0xffffffc0
  409c1a:	rol    DWORD PTR [eax+0x12],cl
  409c1d:	mov    ebx,0x782b1eb3
  409c22:	ja     0x409c35
  409c24:	pop    ebx
  409c25:	test   al,0x9d
  409c27:	fsub   QWORD PTR [eax-0x23]
  409c2a:	jo     0x409c36
  409c2c:	pop    esi
  409c2d:	je     0x409c13
  409c2f:	ds inc edx
  409c31:	mov    bh,0xb5
  409c33:	push   es
  409c34:	mov    dl,0x76
  409c36:	int3   
  409c37:	pusha  
  409c38:	mov    ebp,DWORD PTR ds:[esi]
  409c3b:	inc    ebx
  409c3c:	mov    ds:0x447165da,eax
  409c41:	test   eax,0x7869349b
  409c46:	xor    DWORD PTR [ebp+0x37],ebx
  409c49:	inc    ebx
  409c4a:	mov    al,0x73
  409c4c:	xor    eax,0xb9876620
  409c51:	dec    ecx
  409c52:	sub    bh,bl
  409c54:	into   
  409c55:	jmp    0x409c93
  409c57:	inc    edi
  409c58:	inc    eax
  409c59:	retf   0xb01
  409c5c:	(bad)  
  409c5d:	mov    ch,0x1e
  409c5f:	mov    WORD PTR [ecx-0x5df26d66],ss
  409c65:	sbb    BYTE PTR [ebx+0x63ef7c10],al
  409c6b:	mov    bl,0xf8
  409c6d:	jo     0x409c57
  409c6f:	sub    al,0x9
  409c71:	xor    BYTE PTR cs:[edi],dh
  409c74:	jp     0x409c81
  409c76:	loop   0x409c16
  409c78:	fs hlt 
  409c7a:	adc    ecx,DWORD PTR [edi-0x79]
  409c7d:	add    al,0x92
  409c7f:	test   al,0x4a
  409c81:	inc    ecx
  409c82:	fdiv   QWORD PTR [esi-0x61]
  409c85:	adc    eax,0xf8c14103
  409c8a:	das    
  409c8b:	pop    ss
  409c8c:	mov    ebx,0x5c9268b0
  409c91:	int3   
  409c92:	jmp    0x409cab
  409c94:	repnz push edi
  409c96:	mov    ch,0x7a
  409c98:	cld    
  409c99:	loope  0x409c60
  409c9b:	adc    BYTE PTR [esp+eiz*2],dl
  409c9e:	and    DWORD PTR [esi+0x2c],0x29fa7ae9
  409ca5:	jne    0x409c54
  409ca7:	sub    eax,0x5d4f1236
  409cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cad:	inc    ebp
  409cae:	test   BYTE PTR [edx+esi*4],ah
  409cb1:	jp     0x409c37
  409cb3:	ins    DWORD PTR es:[edi],dx
  409cb4:	add    ebx,DWORD PTR [eax]
  409cb6:	dec    esp
  409cb7:	in     al,0x6e
  409cb9:	jnp    0x409d21
  409cbb:	push   ss
  409cbc:	sub    eax,0xea7998f8
  409cc1:	ja     0x409c5a
  409cc3:	xor    al,0x93
  409cc5:	or     DWORD PTR [eax-0x131ccc97],0x12
  409ccc:	mov    al,ds:0x9e56d5b8
  409cd1:	mov    BYTE PTR [edi],dh
  409cd3:	push   es
  409cd4:	out    dx,al
  409cd5:	es es inc esi
  409cd8:	aam    0x76
  409cda:	out    0x76,al
  409cdc:	scas   eax,DWORD PTR es:[edi]
  409cdd:	jmp    0x409d1b
  409cdf:	cmp    eax,DWORD PTR [ebx+0x2e]
  409ce2:	sbb    DWORD PTR [ebp-0x64],ebp
  409ce5:	push   ss
  409ce6:	jecxz  0x409d5d
  409ce8:	mov    cl,0x12
  409cea:	pushf  
  409ceb:	clc    
  409cec:	or     DWORD PTR [ecx],esp
  409cee:	dec    edx
  409cef:	(bad)  
  409cf0:	mov    dh,0xcb
  409cf2:	or     eax,eax
  409cf4:	or     BYTE PTR [ebx+0x502566a],al
  409cfa:	retf   0xf38e
  409cfd:	xor    eax,0xaf6b986d
  409d02:	mov    edx,0x575caf5d
  409d07:	xor    ch,BYTE PTR [edx]
  409d09:	mov    al,ds:0xcf7f22d8
  409d0e:	mov    cl,0xe5
  409d10:	dec    esi
  409d11:	jg     0x409cb4
  409d13:	cwde   
  409d14:	stc    
  409d15:	enter  0xa355,0x76
  409d19:	dec    ecx
  409d1a:	fidivr WORD PTR [esi+0x5b]
  409d1d:	pop    es
  409d1e:	inc    esi
  409d1f:	xchg   ebp,eax
  409d20:	in     al,0xab
  409d22:	ret    
  409d23:	retf   0xb269
  409d26:	or     DWORD PTR [edx-0x158a1037],ebx
  409d2c:	add    BYTE PTR [ecx+0x26],bh
  409d2f:	mov    ebp,0x524adaa
  409d34:	dec    ebx
  409d35:	je     0x409d85
  409d37:	and    BYTE PTR [ecx],dl
  409d39:	cmc    
  409d3a:	xchg   esp,eax
  409d3b:	or     al,0x59
  409d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d3e:	in     al,dx
  409d3f:	(bad)  
  409d40:	cmp    bl,ch
  409d42:	sbb    eax,0xec88fbbd
  409d47:	(bad)  
  409d48:	shl    BYTE PTR [esi+edi*1],1
  409d4b:	into   
  409d4c:	inc    edx
  409d4d:	(bad)  
  409d4e:	sbb    DWORD PTR [ecx-0x4a],ebx
  409d51:	sub    dh,al
  409d53:	add    cl,0x9
  409d56:	into   
  409d57:	dec    ebx
  409d58:	sti    
  409d59:	cmp    al,0xa2
  409d5b:	push   ebx
  409d5c:	dec    ebp
  409d5d:	test   al,0x9a
  409d5f:	push   es
  409d60:	icebp  
  409d61:	cli    
  409d62:	gs push edx
  409d64:	shr    ecx,cl
  409d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d67:	popf   
  409d68:	adc    edx,0x3b
  409d6b:	push   ds
  409d6c:	push   esp
  409d6d:	inc    ebx
  409d6e:	sbb    dh,BYTE PTR [esp+ebp*1]
  409d71:	push   0x17c614fc
  409d76:	pusha  
  409d77:	mov    dh,0xf8
  409d79:	mov    esp,0x7b719faa
  409d7e:	aas    
  409d7f:	aam    0x7
  409d81:	outs   dx,DWORD PTR ds:[esi]
  409d82:	aam    0x93
  409d84:	in     eax,0xde
  409d86:	or     esp,DWORD PTR [ebp-0x72145316]
  409d8c:	ins    DWORD PTR es:[edi],dx
  409d8d:	inc    edi
  409d8e:	jb     0x409d8b
  409d90:	sub    BYTE PTR [edi-0x219a9638],cl
  409d96:	jb     0x409ded
  409d98:	fiadd  DWORD PTR ss:[edx-0x32d86141]
  409d9f:	in     al,0xe3
  409da1:	or     al,0x34
  409da3:	ss jle 0x409e18
  409da6:	jno    0x409dd0
  409da8:	nop
  409da9:	scas   al,BYTE PTR es:[edi]
  409daa:	ret    0x8468
  409dad:	dec    ebx
  409dae:	les    ecx,FWORD PTR [esi+0x43c3b140]
  409db4:	loope  0x409db7
  409db6:	sbb    esp,DWORD PTR [ebx+0x0]
  409db9:	sub    DWORD PTR [edi+0x4fd28037],edx
  409dbf:	push   0x453a655
  409dc4:	sbb    al,bl
  409dc6:	outs   dx,DWORD PTR ds:[esi]
  409dc7:	push   0x1890bc1f
  409dcc:	fisttp WORD PTR [edi]
  409dce:	pop    eax
  409dcf:	push   ecx
  409dd0:	dec    esp
  409dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd2:	jnp    0x409d93
  409dd4:	enter  0xe025,0xf5
  409dd8:	and    ah,bh
  409dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ddb:	xchg   DWORD PTR [eax-0xe305651],ebx
  409de1:	jb     0x409dba
  409de3:	jnp    0x409e47
  409de5:	retf   
  409de6:	mov    ebx,0xedcda25b
  409deb:	pop    ebx
  409dec:	sbb    BYTE PTR [edi],0x1b
  409def:	loop   0x409d9d
  409df1:	les    eax,FWORD PTR ds:0xc99b4f0b
  409df7:	cmp    edi,DWORD PTR [esi]
  409df9:	mov    esp,0x7baef5c9
  409dfe:	test   BYTE PTR [edx],cl
  409e00:	and    DWORD PTR [edx+0x9],ebx
  409e03:	fwait
  409e04:	loope  0x409e09
  409e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e07:	fimul  WORD PTR [esi+ecx*1-0x10c860e9]
  409e0e:	cmp    esi,eax
  409e10:	xchg   DWORD PTR [ebp-0xd3bb9b2],eax
  409e16:	sbb    eax,0xa6fa9848
  409e1b:	mov    ecx,0x5df4a57d
  409e20:	inc    eax
  409e21:	push   es
  409e22:	cwde   
  409e23:	int3   
  409e24:	xor    DWORD PTR [edi+0x4a],ebp
  409e27:	pop    ss
  409e28:	and    eax,0xc19fa499
  409e2d:	cmp    DWORD PTR [esi+0x56667fcf],esp
  409e33:	psraw  mm4,QWORD PTR [eax+0x11879815]
  409e3a:	lea    eax,[edx]
  409e3c:	nop
  409e3d:	mov    dh,0xd6
  409e3f:	les    esi,FWORD PTR [edi-0x58]
  409e42:	sub    eax,0x4e2ce3b7
  409e47:	pop    ebp
  409e48:	scas   al,BYTE PTR es:[edi]
  409e49:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  409e4b:	fwait
  409e4c:	lahf   
  409e4d:	and    al,0xe4
  409e4f:	push   eax
  409e50:	dec    BYTE PTR [bp+si-0x12]
  409e54:	test   ch,0x2
  409e57:	outs   dx,BYTE PTR ds:[esi]
  409e58:	cmp    eax,0x80a7b350
  409e5d:	out    dx,eax
  409e5e:	fisttp WORD PTR [ebx]
  409e60:	aas    
  409e61:	test   cl,0x53
  409e64:	cmc    
  409e65:	call   0xb79839fd
  409e6a:	xor    bl,BYTE PTR [edx+0x417917ae]
  409e70:	jl     0x409eac
  409e72:	and    eax,0xf17b6a20
  409e77:	xchg   esi,eax
  409e78:	jns    0x409e14
  409e7a:	cmp    DWORD PTR [edx+0x14b0a10e],ecx
  409e80:	add    bh,cl
  409e82:	stos   BYTE PTR es:[edi],al
  409e83:	dec    esi
  409e84:	not    DWORD PTR [esi-0x1f]
  409e87:	mov    dh,0xa1
  409e89:	mov    ebp,eax
  409e8b:	dec    ecx
  409e8c:	pop    ebx
  409e8d:	or     eax,0xee3669ab
  409e92:	inc    ebp
  409e93:	iret   
  409e94:	jb     0x409e18
  409e96:	cmp    eax,0x18c7ace8
  409e9b:	mov    ch,bh
  409e9d:	test   DWORD PTR [edi+0x607ec024],edi
  409ea3:	dec    esi
  409ea4:	call   0xe2012016
  409ea9:	popa   
  409eaa:	adc    al,0xd
  409eac:	jb     0x409ea5
  409eae:	push   esp
  409eaf:	jne    0x409eb5
  409eb1:	add    ecx,DWORD PTR [edx-0x53]
  409eb4:	dec    ecx
  409eb5:	xor    DWORD PTR [edi+0x1647801e],esi
  409ebb:	jb     0x409ee5
  409ebd:	lods   eax,DWORD PTR ds:[esi]
  409ebe:	idiv   BYTE PTR [edi-0x5604fb1a]
  409ec4:	pop    edi
  409ec5:	data16 and BYTE PTR [esi+0x2],0x6
  409eca:	leave  
  409ecb:	lahf   
  409ecc:	or     esi,DWORD PTR [edi-0x70]
  409ecf:	jl     0x409e79
  409ed1:	push   esp
  409ed2:	and    esi,DWORD PTR [eax-0x2e654521]
  409ed8:	leave  
  409ed9:	mov    ecx,DWORD PTR [eax+esi*1]
  409edc:	push   esp
  409edd:	jb     0x409ec4
  409edf:	shl    BYTE PTR [ebx-0x60],cl
  409ee2:	fwait
  409ee3:	push   edx
  409ee4:	and    al,0xfc
  409ee6:	fs sbb esp,esp
  409ee9:	pushf  
  409eea:	sbb    cl,BYTE PTR ds:0x3390a07
  409ef0:	pushf  
  409ef1:	pop    esi
  409ef2:	or     dl,BYTE PTR [edi]
  409ef4:	enter  0x12e3,0x18
  409ef8:	jl     0x409e84
  409efa:	(bad)  
  409efb:	mov    ebx,0xd95bce5b
  409f00:	or     BYTE PTR [ebp-0x3dcdc2e4],cl
  409f06:	xchg   ebx,eax
  409f07:	adc    al,0xdb
  409f09:	sbb    eax,0x9a1dae0
  409f0e:	fild   WORD PTR [esi]
  409f10:	sbb    BYTE PTR [edi+0x49ff4a33],0x69
  409f17:	jmp    0xac30:0xfa0bbeac
  409f1e:	sti    
  409f1f:	sbb    DWORD PTR [edx+0x73],edx
  409f22:	loop   0x409f4c
  409f24:	jmp    0xa0625b72
  409f29:	mov    bl,0x2b
  409f2b:	fnstcw WORD PTR [ecx*1+0x897138f]
  409f32:	js     0x409f45
  409f34:	inc    ebp
  409f35:	bound  eax,QWORD PTR [edi-0x7b]
  409f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f39:	dec    edi
  409f3a:	(bad)  
  409f3b:	push   eax
  409f3c:	mov    bl,0x98
  409f3e:	les    edx,FWORD PTR [edi-0x71]
  409f41:	push   ds
  409f42:	scas   al,BYTE PTR es:[edi]
  409f43:	fstp   DWORD PTR cs:[edx-0xf]
  409f47:	ret    
  409f48:	lods   eax,DWORD PTR ds:[esi]
  409f49:	sub    bh,BYTE PTR [esi]
  409f4b:	aas    
  409f4c:	movd   mm2,esi
  409f4f:	ins    BYTE PTR es:[edi],dx
  409f50:	out    0x3f,al
  409f52:	mov    ah,0x5f
  409f54:	mov    bh,0xd4
  409f56:	jge    0x409f33
  409f58:	stos   DWORD PTR es:[edi],eax
  409f59:	cmp    esi,DWORD PTR [eax+0x1de145f8]
  409f5f:	jp     0x409f10
  409f61:	push   cs
  409f62:	mov    edi,0x757c40d3
  409f67:	clc    
  409f68:	leave  
  409f69:	mov    al,BYTE PTR [ecx]
  409f6b:	sub    DWORD PTR [ecx-0x6e],ecx
  409f6e:	push   ds
  409f6f:	test   dl,dh
  409f71:	leave  
  409f72:	fbstp  TBYTE PTR [eax+0x37ddc9cb]
  409f78:	ret    0xeca6
  409f7b:	xchg   edi,eax
  409f7c:	(bad)  
  409f7d:	sbb    bh,ch
  409f7f:	pop    ecx
  409f80:	outs   dx,DWORD PTR ds:[esi]
  409f81:	iret   
  409f82:	imul   esi,DWORD PTR [eax+0x1b112b9b],0x363d267f
  409f8c:	aas    
  409f8d:	cmp    eax,0xf1e5e592
  409f92:	in     eax,0x75
  409f94:	int    0xa9
  409f96:	and    BYTE PTR [ebx-0x225c5707],0xbb
  409f9d:	pop    ebx
  409f9e:	jmp    0x1f52:0x372cb062
  409fa5:	inc    ebx
  409fa6:	cdq    
  409fa7:	xor    al,0xeb
  409faa:	lock jmp 0x409f85
  409fad:	aam    0x92
  409faf:	test   al,0x9e
  409fb2:	dec    esi
  409fb3:	or     BYTE PTR [eax+0x2b4ebdc5],dh
  409fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fba:	pop    edx
  409fbb:	sbb    BYTE PTR [esi+0x6b908466],bh
  409fc1:	mov    BYTE PTR [ebx-0x3f44e7cd],dh
  409fc7:	adc    esp,0x5bc1c8fb
  409fcd:	stos   BYTE PTR es:[edi],al
  409fce:	sbb    edx,DWORD PTR [esp+ecx*2-0x3b5f8127]
  409fd5:	icebp  
  409fd6:	xchg   ecx,eax
  409fd7:	sbb    esp,DWORD PTR [esi+0x6028e3eb]
  409fdd:	div    DWORD PTR [ebx]
  409fdf:	jbe    0x409f84
  409fe1:	push   edi
  409fe2:	dec    edx
  409fe3:	lods   al,BYTE PTR ds:[esi]
  409fe4:	pop    esi
  409fe5:	pop    es
  409fe6:	push   0xffffffbc
  409fe8:	xor    edx,DWORD PTR [eax]
  409fea:	fmul   QWORD PTR [edx-0x6126f45e]
  409ff0:	loop   0x409fce
  409ff2:	stc    
  409ff3:	lds    esp,FWORD PTR [edi-0x37]
  409ff6:	push   ebx
  409ff7:	call   0x3a3e13ae
  409ffc:	pop    ss
  409ffd:	daa    
  409ffe:	xchg   ecx,eax
  409fff:	cmp    bl,BYTE PTR [ebp-0x59]
  40a002:	mov    edi,0xf70c2d2a
  40a007:	dec    esp
  40a008:	jge    0x409fab
  40a00a:	mov    bl,0x9a
  40a00c:	sub    al,0x13
  40a00e:	mov    dl,0xe4
  40a010:	mov    edi,0xc136c99e
  40a015:	int3   
  40a016:	scas   al,BYTE PTR es:[edi]
  40a017:	nop
  40a018:	popa   
  40a019:	lds    esp,FWORD PTR [ebx-0x4ca02349]
  40a01f:	ins    BYTE PTR es:[edi],dx
  40a020:	dec    esp
  40a021:	outs   dx,DWORD PTR ds:[esi]
  40a022:	(bad)  [edi+0x1]
  40a025:	dec    esi
  40a026:	push   eax
  40a027:	fwait
  40a028:	xchg   edx,eax
  40a029:	cld    
  40a02a:	scas   al,BYTE PTR es:[edi]
  40a02b:	add    ebp,0x6525a219
  40a031:	cli    
  40a032:	nop
  40a033:	sti    
  40a034:	(bad)  
  40a035:	mov    esi,0xb8efc1de
  40a03a:	xor    eax,0x8eae5e00
  40a03f:	bound  eax,QWORD PTR ds:0x4038e5d2
  40a045:	and    eax,0xadc329
  40a04a:	shl    DWORD PTR [ecx+0x2f],1
  40a04d:	mov    eax,0xf2d1efd2
  40a052:	xor    edi,ecx
  40a054:	xchg   esi,eax
  40a055:	xchg   edx,eax
  40a056:	push   ss
  40a057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a058:	push   ds
  40a059:	xchg   ecx,eax
  40a05a:	mov    dl,0x1
  40a05c:	pop    edi
  40a05d:	cli    
  40a05e:	mov    eax,0xc2b60037
  40a063:	mov    cr3,esi
  40a066:	test   eax,0xfc2158fa
  40a06b:	mov    ds:0x1ec37394,al
  40a070:	add    BYTE PTR [ebx+0xf70a8a9],dh
  40a076:	inc    ebp
  40a077:	loope  0x40a02e
  40a079:	jns    0x409fff
  40a07b:	in     eax,dx
  40a07c:	mov    edx,0xa0982afc
  40a081:	rol    DWORD PTR [esi-0x3dabbe15],1
  40a087:	hlt    
  40a088:	sar    BYTE PTR [ecx+edi*4+0x64],cl
  40a08c:	fisttp WORD PTR [edx-0x22]
  40a08f:	mov    ecx,0x5506fdcd
  40a094:	call   FWORD PTR [ebp+0x3]
  40a097:	shl    BYTE PTR [edx],0x4d
  40a09a:	cmp    edx,DWORD PTR [ebx]
  40a09c:	sbb    BYTE PTR [eax-0xa0b68c5],0x55
  40a0a3:	jmp    0x50d21027
  40a0a8:	in     eax,0x95
  40a0aa:	jle    0x40a119
  40a0ac:	jmp    0xbb5b667
  40a0b1:	lds    eax,FWORD PTR [edi+0x499dac03]
  40a0b7:	int3   
  40a0b8:	add    al,bh
  40a0ba:	shl    DWORD PTR [edi-0x29],0x24
  40a0be:	imul   ebx,DWORD PTR [edi],0x1baa1ffd
  40a0c4:	jg     0x40a053
  40a0c6:	xchg   edx,eax
  40a0c7:	in     al,dx
  40a0c8:	jg     0x40a13b
  40a0ca:	mov    ds:0xbd15ef8c,eax
  40a0cf:	data16 aas 
  40a0d1:	dec    eax
  40a0d2:	js     0x40a06f
  40a0d4:	jb     0x40a0c1
  40a0d6:	jp     0x40a05a
  40a0d8:	arpl   WORD PTR [eax],bx
  40a0da:	mov    bl,0x6a
  40a0dc:	retf   
  40a0dd:	lock mov ax,ds:0xa759f25e
  40a0e4:	push   0x3e
  40a0e6:	mov    ebx,0xf76d6665
  40a0eb:	adc    al,0xd0
  40a0ed:	outs   dx,DWORD PTR ds:[esi]
  40a0ee:	adc    DWORD PTR [esi-0x56],esi
  40a0f1:	in     al,0x96
  40a0f3:	lock je 0x40a11f
  40a0f6:	jnp    0x40a0ce
  40a0f8:	xchg   BYTE PTR [edi+0x3d572a14],ch
  40a0fe:	mov    esi,0xa4925637
  40a103:	fcmovnu st,st(1)
  40a105:	sbb    DWORD PTR [ecx-0x31],0x79417ec9
  40a10c:	pusha  
  40a10d:	repz sub DWORD PTR [ecx+0x6b074031],0xfffffff9
  40a115:	inc    ecx
  40a116:	cld    
  40a117:	push   ss
  40a118:	mov    bh,BYTE PTR [ebp+eax*4+0x15]
  40a11c:	xor    BYTE PTR [ebx+0x5d],cl
  40a11f:	retf   0x4daa
  40a122:	retf   0xd1c
  40a125:	xlat   BYTE PTR ds:[ebx]
  40a126:	xor    al,0xd4
  40a128:	ins    BYTE PTR es:[edi],dx
  40a129:	and    eax,0x52d79ed9
  40a12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a12f:	pop    edi
  40a130:	jl     0x40a15e
  40a132:	lea    eax,[ecx+ebx*4-0x4c0cdefc]
  40a139:	jae    0x40a0f5
  40a13b:	add    eax,esi
  40a13d:	jae    0x40a145
  40a13f:	sti    
  40a140:	hlt    
  40a141:	xchg   ebp,eax
  40a142:	sbb    BYTE PTR [edi],cl
  40a144:	pop    ecx
  40a145:	hlt    
  40a146:	dec    ecx
  40a147:	add    DWORD PTR [eax+0x58760d32],edi
  40a14d:	jbe    0x40a157
  40a14f:	into   
  40a150:	jae    0x40a12f
  40a152:	pop    ss
  40a153:	add    BYTE PTR [esi+0x47],ah
  40a156:	add    eax,0x88a96a0d
  40a15b:	mov    ah,ah
  40a15d:	inc    ebx
  40a15e:	call   0xf709827d
  40a163:	inc    ebp
  40a164:	pushf  
  40a165:	mov    esp,0xe5a5d4d
  40a16a:	stos   DWORD PTR es:[edi],eax
  40a16b:	fst    DWORD PTR [ecx]
  40a16d:	stos   BYTE PTR es:[edi],al
  40a16e:	call   0xc671:0x839a8ac1
  40a175:	inc    ebx
  40a176:	pop    es
  40a177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a178:	inc    esp
  40a179:	or     eax,0x19393737
  40a17e:	imul   edi,DWORD PTR ds:0x96498aca,0x4f
  40a185:	mov    al,0x2b
  40a187:	test   DWORD PTR [edi],ebp
  40a189:	mov    ecx,0x21738e23
  40a18e:	pop    ebx
  40a18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a190:	test   DWORD PTR [ebx-0x3fe5f5e2],esp
  40a196:	stos   BYTE PTR es:[edi],al
  40a197:	in     al,dx
  40a198:	or     DWORD PTR [edi+0x57],eax
  40a19b:	sub    al,BYTE PTR [esi-0x68]
  40a19e:	and    al,0xf7
  40a1a0:	ret    
  40a1a1:	push   ebp
  40a1a2:	lods   al,BYTE PTR ds:[esi]
  40a1a3:	sahf   
  40a1a4:	daa    
  40a1a5:	dec    edx
  40a1a6:	sbb    BYTE PTR [ebx+0x73],0x1f
  40a1aa:	test   al,0xba
  40a1ac:	cmp    DWORD PTR [edx+eax*1+0x142d1660],eax
  40a1b3:	mov    al,ds:0x9d3b76c0
  40a1b8:	ret    
  40a1b9:	outs   dx,DWORD PTR ds:[esi]
  40a1ba:	into   
  40a1bb:	inc    esi
  40a1bc:	pusha  
  40a1bd:	(bad)  
  40a1be:	add    al,0xf4
  40a1c0:	jge    0x40a22e
  40a1c2:	sub    DWORD PTR [edx-0x20],eax
  40a1c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1c6:	xchg   BYTE PTR ds:0x83924d3,dh
  40a1cc:	or     BYTE PTR [ecx+0x2a422fe6],ah
  40a1d2:	xor    eax,0x6d0db129
  40a1d7:	push   ebx
  40a1d8:	out    dx,al
  40a1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1da:	cmp    cl,BYTE PTR [ebx+0x6be4dd0f]
  40a1e0:	ja     0x40a230
  40a1e2:	repnz popa 
  40a1e4:	ret    0x59f1
  40a1e7:	jne    0x40a20b
  40a1e9:	aam    0x60
  40a1eb:	dec    ebx
  40a1ec:	jns    0x40a255
  40a1ee:	ins    BYTE PTR es:[edi],dx
  40a1ef:	jp     0x40a1df
  40a1f1:	sub    al,0xb6
  40a1f3:	sub    DWORD PTR [edi],edi
  40a1f5:	add    al,0x88
  40a1f7:	rcl    DWORD PTR [eax+ebx*1+0x59],0xf2
  40a1fc:	sub    eax,0x850ff03b
  40a201:	push   ss
  40a202:	add    BYTE PTR [eax],al
  40a204:	add    BYTE PTR [ebx+0x758bfc45],cl
  40a20a:	clc    
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	dec    edi
  40a5e9:	arpl   cx,di
  40a5eb:	shl    BYTE PTR [edi],0x6
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	(bad)  
  40a5f6:	xor    DWORD PTR [esi],edi
  40a5f8:	sub    dl,BYTE PTR ds:0x3a717f8a
  40a5fe:	jecxz  0x40a643
  40a600:	ja     0x40a5ce
  40a602:	mul    BYTE PTR [ecx-0x10]
  40a605:	mov    bh,0x45
  40a607:	xor    DWORD PTR [ebx-0x249dfd8c],ebx
  40a60d:	lods   eax,DWORD PTR ds:[esi]
  40a60e:	add    cl,BYTE PTR [ebx-0x6e9df688]
  40a614:	or     BYTE PTR [ebp+0x67bdf7bf],al
  40a61a:	inc    edx
  40a61b:	lock mov esi,0xecc6450f
  40a621:	jb     0x40a5b7
  40a623:	and    esi,edi
  40a625:	test   dh,dh
  40a627:	ja     0x40a63e
  40a629:	js     0x40a69f
  40a62b:	mov    BYTE PTR [ecx],bl
  40a62d:	fisub  DWORD PTR [esi+0x67]
  40a630:	ret    
  40a631:	adc    al,0x11
  40a633:	(bad)  
  40a634:	cmp    ah,bl
  40a636:	stos   BYTE PTR es:[edi],al
  40a637:	jae    0x40a664
  40a639:	gs jg  0x40a6a5
  40a63c:	je     0x40a5f1
  40a63e:	xchg   ebx,eax
  40a63f:	and    DWORD PTR [ebp-0x80],edi
  40a642:	dec    esi
  40a643:	jmp    0xc7fd:0x54b5e8a4
  40a64a:	inc    esp
  40a64b:	dec    ebx
  40a64c:	cmp    BYTE PTR [esi],al
  40a64e:	(bad)  
  40a64f:	push   esi
  40a650:	jmp    0x5fce:0x90a07e90
  40a657:	add    BYTE PTR cs:[ebp-0x7519523f],cl
  40a65e:	xchg   DWORD PTR [ebx+0x539f08ad],esp
  40a664:	(bad)  
  40a665:	mov    ch,BYTE PTR [esi+0x70]
  40a668:	sub    cl,BYTE PTR [edx]
  40a66a:	ins    BYTE PTR es:[edi],dx
  40a66b:	sub    ebx,esp
  40a66d:	sbb    al,0xab
  40a66f:	or     DWORD PTR ds:0xdba6c306,0x52
  40a676:	xlat   BYTE PTR ds:[ebx]
  40a677:	adc    al,0x4e
  40a679:	xor    edx,ecx
  40a67b:	je     0x40a607
  40a67d:	jnp    0x40a6bc
  40a67f:	sahf   
  40a680:	retf   0xf68e
  40a683:	sbb    esp,ebp
  40a685:	fincstp 
  40a687:	stos   BYTE PTR es:[edi],al
  40a688:	adc    ah,BYTE PTR [edi]
  40a68a:	pop    edx
  40a68b:	push   ebx
  40a68c:	xchg   edi,eax
  40a68d:	sar    DWORD PTR [eax],0x8b
  40a690:	test   BYTE PTR [ebp-0xf],cl
  40a693:	inc    edx
  40a694:	sub    bh,bh
  40a696:	shl    DWORD PTR [esi-0x33],1
  40a699:	mov    ds:0x9d109cc3,al
  40a69e:	mov    eax,0xf3d8b11c
  40a6a3:	or     bh,ch
  40a6a5:	adc    eax,0x1600c33b
  40a6aa:	pop    ds
  40a6ab:	sbb    edi,DWORD PTR [esi+ecx*4]
  40a6ae:	xchg   edi,eax
  40a6af:	cmp    DWORD PTR [edi],edx
  40a6b1:	xchg   esp,ebp
  40a6b3:	rcr    BYTE PTR [ebx],1
  40a6b5:	lahf   
  40a6b6:	xchg   esi,eax
  40a6b7:	or     ebx,eax
  40a6b9:	xchg   ecx,eax
  40a6ba:	ret    
  40a6bb:	push   ss
  40a6bc:	shl    DWORD PTR [ecx-0x5c],cl
  40a6bf:	add    al,0x1d
  40a6c1:	idiv   BYTE PTR ds:0x2b838e3d
  40a6c7:	in     al,dx
  40a6c8:	jne    0x40a684
  40a6ca:	add    bl,BYTE PTR [esi+ebp*8]
  40a6cd:	inc    edx
  40a6ce:	(bad)  
  40a6cf:	leave  
  40a6d0:	shl    BYTE PTR [esi-0x4d],cl
  40a6d3:	retf   
  40a6d4:	sti    
  40a6d5:	xchg   ebp,eax
  40a6d6:	and    al,0xb4
  40a6d8:	push   esi
  40a6d9:	push   esp
  40a6da:	jo     0x40a706
  40a6dc:	lahf   
  40a6dd:	xor    BYTE PTR [ecx-0x489a517b],dl
  40a6e3:	fwait
  40a6e4:	dec    ebx
  40a6e5:	rcl    DWORD PTR [edx+0xccb8b42],1
  40a6eb:	lock (bad) 
  40a6ed:	jg     0x40a71a
  40a6ef:	cmp    eax,0x4e8b4c9
  40a6f4:	daa    
  40a6f5:	rcr    BYTE PTR [eax+0x57],0xd9
  40a6f9:	cmp    cl,al
  40a6fb:	xchg   edi,eax
  40a6fc:	adc    al,0xb4
  40a6fe:	clc    
  40a6ff:	and    eax,0x1db72221
  40a704:	cmp    al,0xe6
  40a706:	das    
  40a707:	or     DWORD PTR [ebx+eiz*1+0x6269f994],ebx
  40a70e:	mov    esi,0xc82c3949
  40a713:	imul   esi,DWORD PTR [ecx-0x75],0xfffffffc
  40a717:	sbb    BYTE PTR [ecx],al
  40a719:	mov    ah,0x2f
  40a71b:	call   0x11ee:0xf11f2d36
  40a722:	jg     0x40a768
  40a724:	cdq    
  40a725:	in     al,dx
  40a726:	add    edi,DWORD PTR [eax-0x29]
  40a729:	call   0x898586f1
  40a72e:	in     al,dx
  40a72f:	aas    
  40a730:	jg     0x40a7a9
  40a732:	pop    edx
  40a733:	push   ds
  40a734:	add    ch,0xdd
  40a737:	(bad)  
  40a738:	ror    DWORD PTR [eax],cl
  40a73a:	loope  0x40a738
  40a73c:	push   edx
  40a73d:	jb     0x40a706
  40a73f:	in     al,0xec
  40a741:	daa    
  40a742:	dec    BYTE PTR [esi+0x38]
  40a745:	xor    al,0x82
  40a747:	or     eax,0x44bddd7b
  40a74c:	inc    ebp
  40a74d:	mov    ch,0x50
  40a74f:	sub    ah,cl
  40a751:	adc    DWORD PTR [edi+ebx*4],esp
  40a754:	jmp    0x38e:0xbb94c9b3
  40a75b:	cli    
  40a75c:	push   esi
  40a75d:	(bad)  
  40a75e:	mov    ch,ah
  40a760:	(bad)  
  40a761:	jno    0x40a758
  40a763:	(bad)  
  40a764:	aam    0x61
  40a766:	xlat   BYTE PTR ds:[ebx]
  40a767:	call   0xbc41e11b
  40a76c:	mov    esi,0x2b4bb2c8
  40a771:	jae    0x40a7f1
  40a773:	xchg   BYTE PTR [ebx-0x4ce67ea2],bh
  40a779:	pop    ebx
  40a77a:	adc    esp,esi
  40a77c:	lods   al,BYTE PTR ds:[esi]
  40a77d:	cmp    BYTE PTR [ecx+0x2df41a66],al
  40a783:	rcl    DWORD PTR [ebx],0xee
  40a786:	(bad)  
  40a788:	sub    eax,0xe5e035df
  40a78d:	and    al,0x1f
  40a78f:	inc    edx
  40a790:	je     0x40a76f
  40a792:	(bad)  
  40a793:	xchg   edx,eax
  40a794:	sub    bl,BYTE PTR [edx]
  40a796:	(bad)  
  40a797:	int    0xd2
  40a799:	pop    ss
  40a79a:	xchg   DWORD PTR [edi],edx
  40a79c:	push   cs
  40a79d:	xchg   ebx,eax
  40a79e:	sbb    edx,DWORD PTR [eax]
  40a7a0:	repnz int3 
  40a7a2:	mov    edx,DWORD PTR [ebx+0x650ad639]
  40a7a8:	push   edx
  40a7a9:	jns    0x40a7bd
  40a7ab:	sbb    edx,0x61
  40a7ae:	adc    DWORD PTR [esi+0x6f],ebx
  40a7b1:	xor    DWORD PTR [eax+0x11cd8c05],edx
  40a7b7:	lock add al,BYTE PTR [edx-0x33147bcd]
  40a7be:	retf   
  40a7bf:	mov    ds:0xac9aea6d,al
  40a7c4:	lods   eax,DWORD PTR ds:[esi]
  40a7c5:	push   ss
  40a7c6:	mov    eax,ds:0x545e53c2
  40a7cb:	pop    ebx
  40a7cc:	loop   0x40a840
  40a7ce:	sbb    eax,DWORD PTR [ecx]
  40a7d0:	pop    esp
  40a7d1:	sbb    BYTE PTR [edi+0x39],0xf7
  40a7d5:	adc    dl,BYTE PTR [eax]
  40a7d7:	es pop ss
  40a7d9:	sahf   
  40a7da:	mov    al,ds:0xf116aa6c
  40a7df:	sbb    eax,0x91565aa9
  40a7e4:	jnp    0x40a842
  40a7e6:	cmp    al,0x6b
  40a7e8:	out    0xb6,al
  40a7ea:	add    BYTE PTR [edi+0x77],bl
  40a7ed:	scas   al,BYTE PTR es:[edi]
  40a7ee:	sub    BYTE PTR [edx-0xc],0x44
  40a7f2:	xchg   ebx,eax
  40a7f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7f4:	sbb    esp,DWORD PTR [edi+0x43]
  40a7f7:	stc    
  40a7f8:	fldenv [eax+eax*4+0x4a231f35]
  40a7ff:	outs   dx,DWORD PTR ds:[esi]
  40a800:	xchg   esp,eax
  40a801:	push   ecx
  40a802:	lock retf 0xce8d
  40a806:	or     al,0x9f
  40a808:	or     DWORD PTR [ecx-0x222e2eb0],edx
  40a80e:	fucomip st,st(1)
  40a810:	push   0xb3a76e67
  40a815:	mov    cl,0x44
  40a817:	xchg   ebx,eax
  40a818:	mov    eax,0x613fe414
  40a81d:	lock leave 
  40a81f:	xchg   edi,eax
  40a820:	add    DWORD PTR [edx-0x19e2332c],esi
  40a826:	in     al,0x6a
  40a828:	xor    eax,0x3a278f7d
  40a82d:	(bad)  
  40a82e:	inc    esp
  40a82f:	xchg   BYTE PTR [ecx-0x740991ad],cl
  40a835:	arpl   WORD PTR [ebx-0x58],di
  40a838:	cld    
  40a839:	mov    WORD PTR [ecx+edx*4-0x3f],cs
  40a83d:	jne    0x40a84d
  40a83f:	imul   ebp,DWORD PTR ds:0xb6502f48,0xffffff9a
  40a846:	mov    dh,0x1a
  40a848:	int3   
  40a849:	data16 jo 0x40a854
  40a84c:	jbe    0x40a89f
  40a84e:	lds    edx,FWORD PTR [ebx+0x23b62dcc]
  40a854:	sub    DWORD PTR [ebp-0x41a92241],ebx
  40a85a:	ins    DWORD PTR es:[edi],dx
  40a85b:	xor    edi,eax
  40a85d:	sub    BYTE PTR [ecx],dl
  40a85f:	sbb    BYTE PTR [eax+0x1d538f34],0xe3
  40a866:	add    DWORD PTR [esi-0x14],ebp
  40a869:	adc    eax,0xccf3d441
  40a86e:	cld    
  40a86f:	dec    ebx
  40a870:	fcom   DWORD PTR [ebx+0x28]
  40a873:	xor    al,0x14
  40a875:	cmp    DWORD PTR [edx-0x5],edi
  40a878:	and    BYTE PTR [ecx+0x1124e196],ch
  40a87e:	adc    eax,0xb4c8af46
  40a883:	sub    dh,ch
  40a885:	sbb    eax,0x9396bbf7
  40a88a:	jae    0x40a825
  40a88c:	add    ah,BYTE PTR [esi+0x260a8c01]
  40a892:	out    dx,eax
  40a893:	sub    BYTE PTR [ebx+0xf32555c],cl
  40a899:	xchg   edi,eax
  40a89a:	repnz xchg edx,eax
  40a89c:	call   0x2153a5dd
  40a8a1:	int    0x45
  40a8a3:	mov    ebx,0x2f32128c
  40a8a8:	pushf  
  40a8a9:	retf   
  40a8aa:	pop    ebx
  40a8ab:	ds mov esi,0x2a7f29fb
  40a8b1:	pop    eax
  40a8b2:	jnp    0x40a90c
  40a8b4:	cmp    al,0xf3
  40a8b6:	(bad)  
  40a8b7:	int    0x43
  40a8b9:	aad    0xa2
  40a8bb:	xchg   edi,eax
  40a8bc:	mov    bl,0x32
  40a8be:	ror    BYTE PTR [eax],cl
  40a8c0:	sbb    bh,BYTE PTR [edi+0x70]
  40a8c3:	pop    ss
  40a8c4:	jno    0x40a8ed
  40a8c6:	loop   0x40a8de
  40a8c8:	fstp   DWORD PTR [ebp+0x17]
  40a8cb:	shr    DWORD PTR [edi-0x57],0x92
  40a8cf:	loopne 0x40a8ab
  40a8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d2:	cmp    eax,0xe832eaa6
  40a8d7:	mov    edx,0x8502b844
  40a8dc:	(bad)  
  40a8dd:	and    esi,esp
  40a8df:	xor    al,0xbb
  40a8e1:	or     eax,0xa61076b8
  40a8e6:	dec    ebp
  40a8e7:	je     0x40a8c9
  40a8e9:	daa    
  40a8ea:	out    0xcc,al
  40a8ec:	adc    dl,dl
  40a8ee:	jo     0x40a915
  40a8f0:	scas   eax,DWORD PTR es:[edi]
  40a8f1:	push   edi
  40a8f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8f3:	or     al,0x82
  40a8f5:	lock nop
  40a8f7:	and    BYTE PTR [ecx],bl
  40a8f9:	mov    eax,0x3e1c8ac5
  40a8fe:	mov    esp,0xc3be12d0
  40a903:	push   esp
  40a904:	jp     0x40a8a8
  40a906:	sub    dl,BYTE PTR [ecx-0x1ec263c1]
  40a90c:	jmp    0x40a8fe
  40a90e:	outs   dx,DWORD PTR ds:[esi]
  40a910:	nop
  40a911:	test   al,0x48
  40a913:	fadd   QWORD PTR [esi]
  40a915:	sub    al,0x84
  40a917:	jno    0x40a94b
  40a919:	mov    dl,0x39
  40a91b:	out    dx,al
  40a91c:	scas   al,BYTE PTR es:[edi]
  40a91d:	fld    QWORD PTR [eax-0x353c5a3]
  40a923:	ins    DWORD PTR es:[edi],dx
  40a924:	inc    ebp
  40a925:	test   eax,edx
  40a927:	inc    esi
  40a928:	xchg   ebx,esi
  40a92a:	outs   dx,BYTE PTR gs:[esi]
  40a92c:	jmp    0x40a9a6
  40a92e:	lahf   
  40a92f:	std    
  40a930:	sar    edx,1
  40a932:	dec    ebx
  40a933:	sbb    bl,ah
  40a935:	jecxz  0x40a917
  40a937:	aad    0x77
  40a939:	jno    0x40a901
  40a93b:	addr16 pop esp
  40a93d:	sub    al,0xf1
  40a93f:	sub    bh,BYTE PTR [ebp-0x39]
  40a942:	sub    BYTE PTR [edx-0x4922ac98],dh
  40a948:	lods   al,BYTE PTR ds:[esi]
  40a94a:	push   ebx
  40a94b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a94c:	adc    al,0x23
  40a94e:	ins    BYTE PTR es:[edi],dx
  40a94f:	push   ebp
  40a950:	sbb    BYTE PTR ss:[edx-0x27],0x7
  40a955:	bound  ecx,QWORD PTR [ebp-0x11]
  40a958:	jne    0x40a904
  40a95a:	mov    DWORD PTR [ebx+0x29783e1d],edi
  40a960:	imul   edx,DWORD PTR ds:0xbde24931,0x5b
  40a967:	call   0xef26b462
  40a96c:	ficomp WORD PTR ds:0xe4e521ad
  40a972:	fs retf 0xcac0
  40a976:	sar    DWORD PTR [ebx-0x4686c588],cl
  40a97c:	inc    esi
  40a97d:	sub    BYTE PTR [ebx+esi*1],al
  40a980:	pop    edx
  40a981:	inc    edx
  40a982:	stc    
  40a983:	mov    ah,0x41
  40a985:	jle    0x40a94e
  40a987:	inc    edi
  40a988:	repz inc esi
  40a98a:	(bad)  
  40a98b:	sub    al,0xd1
  40a98d:	addr16 int 0xdc
  40a990:	pop    ebx
  40a991:	ret    0x37aa
  40a994:	(bad)  
  40a995:	fisttp QWORD PTR [ebx+0x21]
  40a998:	ret    0x2f8
  40a99b:	push   esi
  40a99c:	jg     0x40a9a5
  40a99e:	jge    0x40a96a
  40a9a0:	dec    esp
  40a9a1:	push   0x6c0b731a
  40a9a6:	cmp    eax,0x76f5482a
  40a9ab:	int3   
  40a9ac:	jb     0x40a9b7
  40a9ae:	shl    DWORD PTR [ebx+ecx*4],1
  40a9b1:	addr16 cmp edi,edx
  40a9b4:	stc    
  40a9b5:	test   BYTE PTR [edi],ch
  40a9b7:	stos   BYTE PTR es:[edi],al
  40a9b8:	adc    ebx,DWORD PTR [eax-0x4e1e2b91]
  40a9be:	jnp    0x40a96d
  40a9c0:	cmp    eax,DWORD PTR [ebx-0x420af8a6]
  40a9c6:	jo     0x40a980
  40a9c8:	loopne 0x40aa0b
  40a9ca:	lods   al,BYTE PTR ds:[esi]
  40a9cb:	ins    DWORD PTR es:[edi],dx
  40a9cc:	out    0x18,eax
  40a9ce:	xlat   BYTE PTR ds:[ebx]
  40a9cf:	push   ds
  40a9d0:	ret    
  40a9d1:	dec    edi
  40a9d2:	stos   DWORD PTR es:[edi],eax
  40a9d3:	not    edx
  40a9d5:	fld    DWORD PTR [ebp-0x59]
  40a9d8:	push   ebp
  40a9d9:	dec    ebx
  40a9da:	inc    ebp
  40a9db:	aaa    
  40a9dc:	in     al,0xa2
  40a9de:	mov    bh,0x57
  40a9e0:	(bad)  
  40a9e1:	jmp    0x40a98c
  40a9e3:	mov    bh,BYTE PTR [eax]
  40a9e5:	outs   dx,DWORD PTR ds:[esi]
  40a9e6:	push   ebp
  40a9e7:	(bad)  
  40a9e9:	in     eax,0x32
  40a9eb:	xor    DWORD PTR [esi+esi*1+0x26c7d679],esi
  40a9f2:	das    
  40a9f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f4:	clc    
  40a9f5:	(bad)  
  40a9f6:	fidivr DWORD PTR [edx+ecx*4-0x67]
  40a9fa:	jb     0x40a9e4
  40a9fc:	dec    ebp
  40a9fd:	leave  
  40a9fe:	enter  0xce0f,0xc5
  40aa02:	repz lea ebx,[ebx]
  40aa05:	mov    ebx,0x7c2e83a7
  40aa0a:	test   DWORD PTR [ecx+0x39],ecx
  40aa0d:	lock rcr BYTE PTR ds:0x992b7247,0x1f
  40aa15:	aam    0xae
  40aa17:	cmc    
  40aa18:	mov    esp,0x5e798ccd
  40aa1d:	(bad)  
  40aa1e:	call   0x95de9a1
  40aa23:	nop
  40aa24:	int    0x50
  40aa26:	xchg   esi,eax
  40aa27:	xchg   BYTE PTR [esi],al
  40aa29:	test   BYTE PTR [esp+eax*8],ch
  40aa2c:	cld    
  40aa2d:	icebp  
  40aa2e:	sbb    edx,esp
  40aa30:	(bad)  
  40aa31:	in     al,dx
  40aa32:	stc    
  40aa33:	(bad)  
  40aa34:	int    0x8
  40aa36:	ret    
  40aa37:	mov    bh,0x56
  40aa39:	jp     0x40aa2e
  40aa3b:	xlat   BYTE PTR ds:[ebx]
  40aa3c:	add    edx,DWORD PTR [edi-0x16]
  40aa3f:	mov    es,WORD PTR [ecx+eiz*8]
  40aa42:	xlat   BYTE PTR ds:[ebx]
  40aa43:	xchg   ecx,eax
  40aa44:	iret   
  40aa45:	scas   al,BYTE PTR es:[edi]
  40aa46:	ins    DWORD PTR es:[edi],dx
  40aa47:	jb     0x40aa1d
  40aa49:	mov    edi,DWORD PTR [edx+0x32fa553d]
  40aa4f:	push   0x79e6ee38
  40aa54:	push   0x49
  40aa56:	leave  
  40aa57:	jb     0x40a9f4
  40aa59:	or     DWORD PTR [eax],0x8c09b031
  40aa5f:	dec    esp
  40aa60:	or     ah,0xd0
  40aa63:	nop
  40aa64:	dec    esi
  40aa65:	mov    ch,0x2f
  40aa67:	push   0x47
  40aa69:	lods   eax,DWORD PTR ds:[esi]
  40aa6a:	jp     0x40aae8
  40aa6c:	imul   eax,DWORD PTR [edi-0xbfcc78a],0xc7010cf7
  40aa76:	lahf   
  40aa77:	mov    bh,0x5c
  40aa79:	inc    esp
  40aa7a:	pop    ecx
  40aa7b:	leave  
  40aa7c:	mov    ds:0xafa600d,eax
  40aa81:	jmp    0x1a82:0xbcbbf128
  40aa88:	ror    DWORD PTR [esi],0x92
  40aa8b:	mov    edx,0x6e833ed4
  40aa90:	mov    ebp,0x2f1f1034
  40aa95:	push   esp
  40aa96:	retf   
  40aa97:	sti    
  40aa98:	out    0x6a,eax
  40aa9a:	mov    ebx,0x5893127d
  40aa9f:	jmp    0x40aa2d
  40aaa1:	xchg   ecx,eax
  40aaa2:	in     al,dx
  40aaa3:	ds jmp 0x40aacb
  40aaa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaa7:	xchg   BYTE PTR [edx-0x60],dl
  40aaaa:	cmp    al,0xd7
  40aaac:	xchg   ebp,eax
  40aaad:	shr    BYTE PTR es:[ecx],0xbc
  40aab1:	test   BYTE PTR [ebp+0x1f9f66f8],0xae
  40aab8:	pop    edx
  40aab9:	jle    0x40ab14
  40aabb:	and    DWORD PTR [ecx],esi
  40aabd:	sahf   
  40aabe:	xchg   esp,eax
  40aabf:	sub    eax,0x92ebdf64
  40aac4:	int3   
  40aac5:	sbb    DWORD PTR [ebx],ebp
  40aac7:	or     edx,DWORD PTR [esi+0x323c7f6]
  40aacd:	xlat   BYTE PTR ds:[ebx]
  40aace:	xor    eax,0x124e5e23
  40aad3:	push   ecx
  40aad4:	dec    ebp
  40aad5:	std    
  40aad6:	mov    cl,0x82
  40aad8:	mov    esi,0x62f6b07f
  40aadd:	es jae 0x40aaa2
  40aae0:	sbb    bl,BYTE PTR [eax]
  40aae2:	cld    
  40aae3:	or     edx,esp
  40aae5:	das    
  40aae6:	loop   0x40aa8e
  40aae8:	sti    
  40aae9:	(bad)  
  40aaeb:	enter  0xc03a,0x2
  40aaef:	add    ecx,DWORD PTR [edx+eax*2]
  40aaf2:	pop    ebp
  40aaf3:	ins    BYTE PTR es:[edi],dx
  40aaf4:	push   esi
  40aaf5:	push   ecx
  40aaf6:	(bad)  
  40aaf7:	sbb    dh,BYTE PTR [ebp+0x71122c47]
  40aafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aafe:	(bad)  
  40aaff:	fst    QWORD PTR [ecx+0x765e0894]
  40ab05:	mov    ecx,0x69c9ad2f
  40ab0a:	les    ecx,FWORD PTR [ebp-0x7e8e35d0]
  40ab10:	xchg   edx,eax
  40ab11:	adc    eax,0x7785869a
  40ab16:	hlt    
  40ab17:	sbb    DWORD PTR [ecx-0x7c],edx
  40ab1a:	rcr    BYTE PTR [edx-0x3f],0x96
  40ab1e:	shl    cl,0x9b
  40ab21:	sahf   
  40ab22:	js     0x40aaa6
  40ab24:	fiadd  DWORD PTR [ecx+ecx*2-0x2]
  40ab28:	inc    ebx
  40ab29:	inc    ecx
  40ab2a:	adc    edx,DWORD PTR [edx+0x63]
  40ab2d:	stc    
  40ab2e:	or     BYTE PTR [esp+edx*2+0x53],ah
  40ab32:	into   
  40ab33:	dec    edx
  40ab34:	add    BYTE PTR [edi-0x225404b5],al
  40ab3a:	jg     0x40ab29
  40ab3c:	ret    
  40ab3d:	(bad)
  40ab40:	xlat   BYTE PTR ds:[ebx]
  40ab41:	jmp    0x504b69c0
  40ab46:	(bad)  
  40ab47:	jno    0x40ab8f
  40ab49:	xor    BYTE PTR [edx],ch
  40ab4b:	xor    BYTE PTR [edx+0x62040525],cl
  40ab51:	mov    BYTE PTR [ebp+0x3f43537f],al
  40ab57:	in     al,dx
  40ab58:	sbb    al,0x9d
  40ab5a:	(bad)  
  40ab5b:	loopne 0x40abb2
  40ab5d:	jae    0x40ab3e
  40ab5f:	jb     0x40ab00
  40ab61:	ja     0x40abbd
  40ab63:	xchg   esp,eax
  40ab64:	pushf  
  40ab65:	fld    QWORD PTR [edx]
  40ab67:	push   cs
  40ab68:	jg     0x40ab48
  40ab6a:	xor    dl,bh
  40ab6c:	test   ebx,ebx
  40ab6e:	scas   al,BYTE PTR es:[edi]
  40ab6f:	mov    bl,0x47
  40ab71:	xchg   BYTE PTR [ecx-0x1f],bh
  40ab74:	mov    ebx,0x45e0cf16
  40ab79:	sbb    eax,0xc908c214
  40ab7e:	pop    ss
  40ab7f:	mov    ebp,0xc1ca602d
  40ab84:	mov    dl,0x0
  40ab86:	add    ch,dh
  40ab88:	xchg   ebp,eax
  40ab89:	adc    esi,edx
  40ab8b:	jbe    0x40abfe
  40ab8d:	mov    ds:0x13cb5149,eax
  40ab92:	jae    0x40ac12
  40ab94:	jmp    0x1ba3:0xe5aa9577
  40ab9b:	data16 xor ch,BYTE PTR [ebx-0x5d]
  40ab9f:	fwait
  40aba0:	addr16 inc eax
  40aba2:	dec    ecx
  40aba3:	cmp    al,0xc9
  40aba5:	(bad)  
  40aba6:	shl    bl,cl
  40aba8:	sub    DWORD PTR [edx-0x14],esi
  40abab:	stc    
  40abac:	dec    ecx
  40abad:	xor    BYTE PTR [eax+0x6b],dh
  40abb0:	inc    ecx
  40abb1:	test   al,0xc9
  40abb3:	(bad)
  40abb6:	push   ss
  40abb7:	inc    edx
  40abb8:	es adc al,0x15
  40abbb:	stc    
  40abbc:	fcom   QWORD PTR [edx]
  40abbe:	mov    ah,0x8f
  40abc0:	mov    dl,0xf6
  40abc2:	jp     0x40ac43
  40abc4:	ins    BYTE PTR es:[edi],dx
  40abc5:	ret    0x1e55
  40abc8:	push   ecx
  40abc9:	push   ecx
  40abca:	lds    ebp,FWORD PTR [edi+0x645df272]
  40abd0:	out    0xca,eax
  40abd2:	iret   
  40abd3:	push   ebp
  40abd4:	lods   eax,DWORD PTR ds:[esi]
  40abd5:	int    0x38
  40abd7:	jg     0x40abdb
  40abd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abda:	(bad)  
  40abdc:	cmp    ebp,DWORD PTR [ebx-0x7e98728b]
  40abe2:	test   BYTE PTR [ebp-0x62035396],0x4e
  40abe9:	or     eax,0x2ff623dc
  40abee:	shl    DWORD PTR [esi-0x43],1
  40abf1:	push   0x67cc0cbb
  40abf6:	jmp    0x34da:0x34d3246a
  40abfd:	inc    eax
  40abfe:	mov    BYTE PTR [edi-0x29],bh
  40ac01:	push   ebp
  40ac02:	stc    
  40ac03:	aas    
  40ac04:	push   esi
  40ac05:	sti    
  40ac06:	test   DWORD PTR [ebp-0x73],esi
  40ac09:	pop    es
  40ac0a:	pop    esp
  40ac0b:	aaa    
  40ac0c:	sub    al,0xd2
  40ac0e:	push   esp
  40ac0f:	xor    eax,0x39978420
  40ac14:	test   BYTE PTR [esi],0x33
  40ac17:	and    al,0x1
  40ac19:	push   0x2823e655
  40ac1e:	inc    edi
  40ac1f:	mov    dh,0xb6
  40ac21:	or     DWORD PTR [edi-0x68],0xcbe319c0
  40ac28:	pop    edx
  40ac29:	imul   eax,DWORD PTR [ebx],0xfffffff0
  40ac2c:	xchg   BYTE PTR [edi+ecx*4],dh
  40ac2f:	xchg   BYTE PTR [ecx+0x12ce70d6],bl
  40ac35:	mov    esi,0xdb969ee0
  40ac3a:	add    ebx,0xffffffac
  40ac3d:	or     cl,BYTE PTR es:[eiz*8-0x2dc6dd90]
  40ac45:	imul   edx,esp,0x9aaa1059
  40ac4b:	jmp    0x40aca0
  40ac4d:	add    ebp,DWORD PTR [ebp-0x2e]
  40ac50:	xor    al,0x4a
  40ac52:	xor    eax,0xf697f3d5
  40ac57:	ins    DWORD PTR es:[edi],dx
  40ac58:	and    bl,bl
  40ac5a:	nop
  40ac5b:	retf   0x7eca
  40ac5e:	pop    edi
  40ac5f:	iret   
  40ac60:	inc    edi
  40ac61:	jecxz  0x40ac8e
  40ac63:	gs test bh,0x97
  40ac67:	sbb    edi,DWORD PTR [ebx+eax*1-0x31afc330]
  40ac6e:	inc    esp
  40ac6f:	mov    fs,WORD PTR [ebx-0xc]
  40ac72:	dec    esp
  40ac73:	imul   ecx,DWORD PTR cs:[esi+ebp*8+0x2ea5b307],0xffffff9e
  40ac7c:	cmp    dh,BYTE PTR [edi]
  40ac7e:	repnz mov esi,0xb6ced9c
  40ac84:	xchg   DWORD PTR [edi-0x7f3f0290],esi
  40ac8a:	out    0x73,al
  40ac8c:	dec    eax
  40ac8d:	push   esi
  40ac8e:	xchg   esi,eax
  40ac8f:	xchg   esp,eax
  40ac90:	int3   
  40ac91:	pop    ds
  40ac92:	add    ch,cl
  40ac94:	mov    edx,0xcbcc879c
  40ac99:	mov    dl,0xf0
  40ac9b:	mov    ebx,DWORD PTR [edi+eiz*1+0xe]
  40ac9f:	daa    
  40aca0:	fs stos DWORD PTR es:[edi],eax
  40aca2:	cs mov dh,0x38
  40aca5:	push   ds
  40aca6:	sti    
  40aca7:	sbb    eax,0xa02e3090
  40acac:	dec    ebp
  40acad:	jno    0x40ac8e
  40acaf:	jp     0x40ac7a
  40acb1:	fstp   TBYTE PTR [edx-0x5de1ddfa]
  40acb7:	pop    ds
  40acb8:	cmp    al,0xee
  40acba:	push   edx
  40acbb:	mov    al,ds:0x61706a5
  40acc0:	add    DWORD PTR [esi-0x13],eax
  40acc3:	sub    eax,esi
  40acc5:	aad    0x83
  40acc7:	lods   al,BYTE PTR ds:[esi]
  40acc8:	and    eax,0xcbe4dfda
  40accd:	dec    ecx
  40acce:	(bad)  
  40accf:	push   edx
  40acd0:	pop    ds
  40acd1:	mov    eax,DWORD PTR [ebx-0xf]
  40acd4:	mov    ds:0x7d62045e,eax
  40acd9:	(bad)  
  40acda:	out    0xb8,al
  40acdc:	std    
  40acdd:	leave  
  40acde:	daa    
  40acdf:	ja     0x40ac77
  40ace1:	sub    bh,BYTE PTR [esi+0x41]
  40ace4:	mov    eax,ds:0x3d1c2576
  40ace9:	scas   al,BYTE PTR es:[edi]
  40acea:	push   es
  40aceb:	scas   al,BYTE PTR es:[edi]
  40acec:	cld    
  40aced:	add    DWORD PTR [ecx+edx*2+0x30],eax
  40acf1:	mov    edi,0xc3436b05
  40acf6:	jmp    0x9d51ed3f
  40acfb:	inc    ecx
  40acfc:	cwde   
  40acfd:	jl     0x40ad28
  40acff:	ds mov edi,0xcdeeb268
  40ad05:	xor    eax,DWORD PTR [edx-0x72]
  40ad08:	jg     0x40ad65
  40ad0a:	xchg   ecx,eax
  40ad0b:	cmc    
  40ad0c:	fcomp  DWORD PTR [ebx+0x2a94a823]
  40ad12:	add    al,0xfc
  40ad14:	fldcw  WORD PTR [ebx+0x48]
  40ad17:	les    esi,FWORD PTR [edx]
  40ad19:	stc    
  40ad1a:	adc    al,dh
  40ad1c:	sub    DWORD PTR [edx*4+0x6ce48f6a],esi
  40ad23:	neg    BYTE PTR [ebx+0x38b2ea15]
  40ad29:	jno    0x40acec
  40ad2b:	sub    cl,dl
  40ad2d:	sub    al,0x70
  40ad2f:	sbb    ch,BYTE PTR [edx-0x38]
  40ad32:	add    BYTE PTR ds:0x6b209c32,bh
  40ad38:	add    bl,BYTE PTR [edi]
  40ad3a:	add    BYTE PTR [edi],cl
  40ad3c:	xor    al,0x66
  40ad3e:	xor    BYTE PTR [edx+0x1fc13f7c],al
  40ad44:	outs   dx,BYTE PTR ds:[esi]
  40ad45:	mov    ds:0xaa7e8e71,al
  40ad4a:	idiv   DWORD PTR [esi-0xd]
  40ad4d:	js     0x40acf6
  40ad4f:	stc    
  40ad50:	dec    ebx
  40ad51:	adc    dh,BYTE PTR [edx-0x3b7a7be]
  40ad57:	xor    BYTE PTR [esi-0x77],0x32
  40ad5b:	stos   BYTE PTR es:[edi],al
  40ad5c:	or     ah,BYTE PTR [edi+0x51]
  40ad5f:	cmp    eax,DWORD PTR [edx]
  40ad61:	bound  ebp,QWORD PTR [ecx]
  40ad63:	js     0x40adb4
  40ad65:	fwait
  40ad66:	mov    ?,ebp
  40ad68:	or     BYTE PTR [esi+eiz*1],0x8
  40ad6c:	xor    al,0x82
  40ad6e:	cld    
  40ad6f:	cdq    
  40ad70:	cmovl  edi,ebx
  40ad73:	push   ss
  40ad74:	loop   0x40ad00
  40ad76:	push   0x73
  40ad78:	std    
  40ad79:	sub    eax,0x9cc9b23e
  40ad7e:	retf   
  40ad7f:	repnz pop ds
  40ad81:	sbb    al,0xf2
  40ad83:	inc    esi
  40ad84:	xchg   BYTE PTR [ecx+0x3e],dl
  40ad87:	add    DWORD PTR [ecx],edx
  40ad89:	fcomp  QWORD PTR [ebp+edi*8+0x2b5a41a3]
  40ad90:	add    eax,0x5bbacb40
  40ad95:	jae    0x40ad7b
  40ad97:	adc    al,0xab
  40ad99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad9a:	jbe    0x40ad60
  40ad9c:	(bad)  
  40ad9d:	and    ah,BYTE PTR [esi]
  40ad9f:	inc    ecx
  40ada0:	(bad)  [edi+0x12]
  40ada3:	mov    edi,0x8cc70b24
  40ada8:	pop    eax
  40ada9:	pop    ebp
  40adaa:	lds    ecx,FWORD PTR [ebp+0x48]
  40adad:	imul   ebx,DWORD PTR [ecx-0x13],0xffffffe7
  40adb1:	lock call 0x5a6a:0xd0ac4bd5
  40adb9:	mov    eax,ds:0x9adf334b
  40adbe:	daa    
  40adbf:	push   ecx
  40adc0:	sub    eax,0x790abbca
  40adc5:	out    0xba,al
  40adc7:	cmp    esp,DWORD PTR [eax]
  40adc9:	xchg   esi,eax
  40adca:	dec    edx
  40adcb:	jmp    0x8e6e:0x7e916ee1
  40add2:	arpl   WORD PTR ss:[ebx-0xf],di
  40add6:	out    0x3a,eax
  40add8:	js     0x40ae11
  40adda:	cmp    bl,BYTE PTR [eax-0x60df359c]
  40ade0:	mov    ds:0x6d90d31,eax
  40ade5:	pop    edi
  40ade6:	push   edx
  40ade7:	sub    dl,BYTE PTR [ecx]
  40ade9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adea:	pop    ds
  40adeb:	loope  0x40ae44
  40aded:	pop    edi
  40adee:	mov    es,edx
  40adf0:	(bad)  
  40adf1:	dec    ebp
  40adf2:	jno    0x40ae25
  40adf4:	(bad)  
  40adf5:	fld    DWORD PTR [ebx+0x338f1353]
  40adfb:	stos   BYTE PTR es:[edi],al
  40adfc:	outs   dx,BYTE PTR ds:[esi]
  40adfd:	psubb  mm4,mm4
  40ae00:	jnp    0x40add6
  40ae02:	les    esp,FWORD PTR [ecx+0x2]
  40ae05:	fidiv  DWORD PTR [edx-0x16]
  40ae08:	es leave 
  40ae0a:	test   al,0xf7
  40ae0c:	jb     0x40ae05
  40ae0e:	loop   0x40adcf
  40ae10:	push   edx
  40ae11:	aaa    
  40ae12:	push   edx
  40ae13:	sub    DWORD PTR fs:[eax],ebp
  40ae16:	push   edx
  40ae17:	js     0x40ae1a
  40ae19:	fldenv [esi-0x4d0fe96c]
  40ae1f:	or     BYTE PTR [ebp+0x134ac7fd],al
  40ae25:	adc    al,0x77
  40ae27:	iret   
  40ae28:	and    edi,esp
  40ae2a:	dec    esp
  40ae2b:	scas   eax,DWORD PTR es:[edi]
  40ae2c:	xchg   esp,eax
  40ae2d:	inc    eax
  40ae2e:	imul   ecx,DWORD PTR ds:0x49554e78,0x490df687
  40ae38:	lods   eax,DWORD PTR ds:[esi]
  40ae39:	xor    ch,BYTE PTR [edi-0x3f660fa2]
  40ae3f:	adc    BYTE PTR [ebx],bl
  40ae41:	mov    es,edi
  40ae43:	xchg   esi,eax
  40ae44:	mov    edi,0x3e75f58
  40ae49:	fisubr WORD PTR [edi]
  40ae4b:	jl     0x40add8
  40ae4d:	not    DWORD PTR [edx-0x504b2522]
  40ae53:	jecxz  0x40ae91
  40ae55:	sbb    ebx,DWORD PTR [edi]
  40ae57:	mov    bh,0xe4
  40ae59:	mov    ecx,0x136da429
  40ae5e:	cmc    
  40ae5f:	xor    DWORD PTR [eax-0xea50f5f],ebp
  40ae65:	inc    ebx
  40ae66:	inc    edx
  40ae67:	sbb    al,0x72
  40ae69:	nop
  40ae6a:	mov    ds:0xdbfd2b46,al
  40ae6f:	inc    edi
  40ae70:	and    eax,0xa3c8dcb5
  40ae75:	sbb    dl,BYTE PTR [ebx+0x4f]
  40ae78:	stc    
  40ae79:	neg    DWORD PTR [edx+edx*4]
  40ae7c:	xor    al,0x56
  40ae7e:	add    eax,0x76793829
  40ae83:	ret    0x9ca4
  40ae86:	mov    bl,0xc7
  40ae88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae89:	or     ah,al
  40ae8b:	out    0x37,al
  40ae8d:	mov    BYTE PTR [edx-0x6e],bh
  40ae90:	cld    
  40ae91:	pusha  
  40ae92:	ror    BYTE PTR [ebp-0x63f19c6a],0xbb
  40ae99:	cli    
  40ae9a:	scas   eax,DWORD PTR es:[edi]
  40ae9b:	jecxz  0x40af1b
  40ae9d:	add    al,0x7e
  40ae9f:	add    al,0x56
  40aea1:	in     al,0x30
  40aea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea4:	loop   0x40aeb9
  40aea6:	jo     0x40ae3f
  40aea8:	mov    bl,0x55
  40aeaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeab:	mov    cl,0xcf
  40aead:	pop    edx
  40aeae:	js     0x40aef4
  40aeb0:	sbb    bh,BYTE PTR [ebx+0x7c51c01]
  40aeb6:	jle    0x40ae96
  40aeb8:	shl    BYTE PTR ds:0x92fd4347,1
  40aebe:	push   ds
  40aebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aec0:	mov    al,ds:0xe6813370
  40aec5:	push   ds
  40aec6:	push   ecx
  40aec7:	push   edi
  40aec8:	fldlg2 
  40aeca:	mov    ebx,0xd21aa161
  40aecf:	fsub   QWORD PTR [edi-0x5f29ab32]
  40aed5:	ja     0x40ae78
  40aed7:	xchg   ebp,eax
  40aed8:	and    eax,0xfa3e8e4e
  40aedd:	add    al,0xcf
  40aedf:	push   ebp
  40aee0:	aaa    
  40aee1:	add    al,0xf0
  40aee3:	fiadd  DWORD PTR [ebp-0x4e]
  40aee6:	cwde   
  40aee7:	test   eax,0x358b9bb9
  40aeec:	push   0xea8116c6
  40aef1:	jmp    0x40af15
  40aef3:	mov    esi,0xc2e779ad
  40aef8:	jb     0x40af64
  40aefa:	mov    al,ds:0x74a31d6d
  40aeff:	mov    al,ds:0xd6496fe7
  40af04:	mov    al,0x43
  40af06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af07:	mov    al,fs:0x7008072
  40af0d:	dec    ebx
  40af0e:	gs or  al,0x81
  40af11:	call   0x7138:0x98e33a2f
  40af18:	popa   
  40af19:	push   edi
  40af1a:	pusha  
  40af1b:	idiv   BYTE PTR [ecx]
  40af1d:	sbb    BYTE PTR [ecx-0x1],0x21
  40af21:	inc    edi
  40af22:	pop    ebx
  40af23:	push   eax
  40af24:	mov    WORD PTR [ebx-0x43],ds
  40af27:	mov    edi,DWORD PTR [eax]
  40af29:	shl    esp,0x5
  40af2c:	mov    bh,0xce
  40af2e:	xor    al,0xd4
  40af30:	sbb    eax,0xcfe364f5
  40af35:	xor    eax,0x286b7e84
  40af3a:	cld    
  40af3b:	lods   eax,DWORD PTR ds:[esi]
  40af3c:	sar    DWORD PTR [ebp+0x42],cl
  40af3f:	mov    eax,0xe33c4649
  40af44:	fst    DWORD PTR [edx*1+0x5ee233eb]
  40af4b:	xor    DWORD PTR [edx],eax
  40af4d:	iret   
  40af4e:	pop    esi
  40af4f:	cmp    ch,0xcb
  40af52:	mov    DWORD PTR [edx+ebx*4],ebp
  40af55:	jbe    0x40af70
  40af57:	retf   
  40af58:	inc    esp
  40af59:	push   ds
  40af5a:	(bad)  
  40af5b:	arpl   bx,ax
  40af5d:	fs xor bh,al
  40af60:	bound  esi,QWORD PTR ds:0x162dfbc6
  40af66:	add    DWORD PTR [ecx],eax
  40af68:	cbw    
  40af6a:	cmp    edx,DWORD PTR [edx+0x15]
  40af6d:	pop    edi
  40af6e:	pop    ebp
  40af6f:	jl     0x40af54
  40af71:	jecxz  0x40afe4
  40af73:	pop    ecx
  40af74:	cmp    esp,DWORD PTR [edx+0x1e879d4a]
  40af7a:	js     0x40aff5
  40af7c:	(bad)  
  40af7d:	in     eax,dx
  40af7e:	ror    DWORD PTR [ecx-0x336db49d],cl
  40af84:	out    0xcf,al
  40af86:	out    dx,eax
  40af87:	or     eax,0xf179394f
  40af8c:	mov    esi,DWORD PTR [ebx+0x530f7b7]
  40af92:	lea    eax,[edx]
  40af94:	hlt    
  40af95:	sub    al,0xbe
  40af97:	fcomi  st,st(6)
  40af99:	xor    eax,0x62528f3e
  40af9e:	fdecstp 
  40afa0:	popf   
  40afa1:	mov    dl,0x15
  40afa3:	jnp    0x40aff9
  40afa5:	inc    ebp
  40afa6:	rcl    edx,cl
  40afa8:	out    dx,al
  40afa9:	adc    BYTE PTR [eax-0x1864b112],ah
  40afaf:	repz xor edi,ecx
  40afb2:	mul    bh
  40afb4:	call   0x4e5e595b
  40afb9:	outs   dx,DWORD PTR ds:[esi]
  40afba:	lahf   
  40afbb:	xor    eax,0x7a226056
  40afc0:	mov    ds:0xf7d09baf,al
  40afc5:	in     eax,dx
  40afc6:	loopne 0x40af7a
  40afc8:	inc    esp
  40afc9:	(bad)  
  40afca:	xchg   esp,eax
  40afcb:	enter  0x3ead,0x62
  40afcf:	push   edx
  40afd0:	ins    DWORD PTR es:[edi],dx
  40afd1:	cwde   
  40afd2:	pop    es
  40afd3:	sub    eax,0x3a047668
  40afd8:	test   DWORD PTR [edi-0x3efeab80],esi
  40afde:	cs dec edx
  40afe0:	add    al,BYTE PTR [esi+0x1f69996f]
  40afe6:	cld    
  40afe7:	sbb    BYTE PTR [edx],0x93
  40afea:	and    dl,bl
  40afec:	push   edi
  40afed:	rol    BYTE PTR [ecx],0x2c
  40aff0:	sbb    ch,ah
  40aff2:	repz daa 
  40aff4:	jb     0x40b014
  40aff6:	das    
  40aff7:	jl     0x40b004
  40aff9:	add    al,BYTE PTR [ecx]
  40affb:	mov    cl,BYTE PTR [ebp+ecx*1-0x352ab9bb]
  40b002:	retf   0x61b0
  40b005:	dec    ebp
  40b006:	mov    cl,0x7e
  40b008:	mov    ebp,0x4ae16e69
  40b00d:	sbb    BYTE PTR [eax-0x54],dh
  40b010:	fadd   st,st(2)
  40b012:	rcr    al,0x34
  40b015:	imul   ecx,esi,0x4045c60f
  40b01b:	cmc    
  40b01c:	cdq    
  40b01d:	xor    ecx,esi
  40b01f:	adc    al,0x67
  40b021:	fstp   QWORD PTR [esi]
  40b023:	test   al,0xab
  40b025:	jge    0x40afbc
  40b027:	jb     0x40affe
  40b029:	xor    eax,DWORD PTR [edi+0x64beb2c1]
  40b02f:	pusha  
  40b030:	inc    ebp
  40b031:	adc    BYTE PTR ds:0x75c23570,bh
  40b037:	inc    esp
  40b038:	push   edx
  40b039:	push   esi
  40b03a:	fimul  WORD PTR [edx+0x66ccd5b1]
  40b040:	ror    DWORD PTR [edi-0x7c],1
  40b043:	adc    dl,BYTE PTR [edi-0xc]
  40b046:	pop    ebp
  40b047:	pop    ebx
  40b048:	add    DWORD PTR [edi],eax
  40b04a:	call   0xf6d6:0xafdaeac
  40b051:	fwait
  40b052:	xchg   ebp,eax
  40b053:	inc    ebx
  40b054:	push   es
  40b055:	mov    edx,ebx
  40b057:	adc    eax,0x6e9dd564
  40b05c:	cwde   
  40b05d:	sti    
  40b05e:	enter  0x5862,0xd
  40b062:	pop    esp
  40b063:	jb     0x40b01e
  40b065:	add    DWORD PTR [ebx-0x64718b2e],0x20c4472e
  40b06f:	mov    ss,ebx
  40b071:	test   BYTE PTR [esi+0x349eaf06],al
  40b077:	sbb    BYTE PTR [edx+0x192cf7ab],al
  40b07d:	jbe    0x40b0f1
  40b07f:	dec    edi
  40b080:	and    esp,DWORD PTR [esi]
  40b082:	push   edx
  40b083:	mov    ebx,0x2aae2bdb
  40b088:	arpl   WORD PTR [edx-0x9016c56],ax
  40b08e:	jl     0x40b0d4
  40b090:	enter  0xd7ae,0xcb
  40b094:	lea    edi,[eax]
  40b096:	test   ah,cl
  40b098:	pusha  
  40b099:	mov    eax,ds:0xe2b553e0
  40b09e:	sub    BYTE PTR [ebx+0x7e],bl
  40b0a1:	ret    0xa648
  40b0a4:	dec    eax
  40b0a5:	jo     0x40b05c
  40b0a7:	push   ss
  40b0a8:	mov    ecx,0x8051744c
  40b0ad:	ds xor edi,eax
  40b0b0:	xlat   BYTE PTR ds:[ebx]
  40b0b1:	push   esp
  40b0b2:	dec    esi
  40b0b3:	or     eax,0x762c6a0d
  40b0b8:	stc    
  40b0b9:	fdiv   QWORD PTR [ecx]
  40b0bb:	repz push ebp
  40b0bd:	xor    esi,edi
  40b0bf:	push   esi
  40b0c0:	jl     0x40b0fc
  40b0c2:	popf   
  40b0c3:	out    0xf0,eax
  40b0c5:	adc    ebx,eax
  40b0c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c8:	loope  0x40b0cc
  40b0ca:	inc    ebx
  40b0cb:	push   0xb43055b3
  40b0d0:	inc    esp
  40b0d1:	es pop ebp
  40b0d3:	jb     0x40b0d8
  40b0d5:	push   ss
  40b0d6:	call   0xda0ed742
  40b0db:	jge    0x40b10f
  40b0dd:	xchg   ebx,eax
  40b0de:	add    eax,DWORD PTR [edx-0x2c]
  40b0e1:	das    
  40b0e2:	mov    eax,ds:0x836f75a1
  40b0e7:	xor    BYTE PTR [ecx-0x3f8a868a],dl
  40b0ed:	pop    ecx
  40b0ee:	mov    DWORD PTR [esi-0x6b108fdc],esi
  40b0f4:	bound  ebp,QWORD PTR [edi+0x33]
  40b0f7:	imul   ecx,ebx,0x75
  40b0fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0fb:	push   eax
  40b0fc:	mov    DWORD PTR [ebx],ebx
  40b0fe:	jle    0x40b12d
  40b100:	or     eax,0x6e1b0b57
  40b105:	push   0xffffffa1
  40b107:	cdq    
  40b108:	dec    edx
  40b109:	adc    DWORD PTR [edi+0x3c],ecx
  40b10c:	shr    DWORD PTR [ebx-0x37],0xc9
  40b110:	outs   dx,BYTE PTR ds:[esi]
  40b111:	out    dx,al
  40b112:	aam    0xb0
  40b114:	ins    DWORD PTR es:[edi],dx
  40b115:	mov    ebx,0x2991b60b
  40b11a:	cmp    eax,0xffd1d7db
  40b11f:	popa   
  40b120:	pop    edi
  40b121:	dec    esi
  40b122:	jno    0x40b114
  40b124:	loope  0x40b18a
  40b126:	jg     0x40b101
  40b128:	xchg   edi,eax
  40b129:	cmp    eax,0x5f376a23
  40b12e:	sub    edi,edi
  40b130:	or     ebx,DWORD PTR [eax-0x78b4874f]
  40b136:	sbb    ebp,ebx
  40b138:	dec    BYTE PTR [ecx+0x23a28936]
  40b13e:	lea    esi,[ecx+ebp*2+0x44]
  40b142:	leave  
  40b143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b144:	les    edi,FWORD PTR [ebp+0x72]
  40b147:	mov    ch,0x50
  40b149:	push   cs
  40b14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b14b:	fnstcw WORD PTR [esi]
  40b14d:	adc    eax,0x5e1beea4
  40b152:	mov    esi,0x14f5144a
  40b157:	(bad)  
  40b158:	aam    0xdc
  40b15a:	mov    ecx,0xbe7eb942
  40b15f:	cmp    bh,BYTE PTR [ecx-0x50]
  40b162:	xor    al,0x48
  40b164:	xchg   ebx,eax
  40b165:	out    0xd6,al
  40b167:	daa    
  40b168:	sar    edi,0x5d
  40b16b:	push   0xc64a114e
  40b170:	cdq    
  40b171:	shr    ecx,0xde
  40b174:	mov    ds:0xd24d010d,al
  40b179:	and    DWORD PTR [ecx],esp
  40b17b:	or     eax,DWORD PTR [eax-0x1c9a0839]
  40b181:	xchg   esi,eax
  40b182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b183:	xchg   ebp,eax
  40b184:	sti    
  40b185:	pop    edi
  40b186:	and    eax,0xd92d9c25
  40b18b:	jbe    0x40b1ae
  40b18d:	jg     0x40b1f2
  40b18f:	(bad)  
  40b190:	ja     0x40b1c4
  40b192:	pop    ecx
  40b193:	in     eax,dx
  40b194:	cmp    ebp,DWORD PTR [esi+0x79c83ab8]
  40b19a:	or     eax,0xf2c02200
  40b19f:	push   edx
  40b1a0:	xor    eax,0xc313b8e4
  40b1a5:	lahf   
  40b1a6:	sub    DWORD PTR [edx],esp
  40b1a8:	mov    ds:0x6d636cee,eax
  40b1ad:	adc    al,0xfe
  40b1af:	out    dx,eax
  40b1b0:	lea    edx,[ebx]
  40b1b2:	jmp    0xe3fa:0xf0fe6e10
  40b1b9:	jnp    0x40b1e9
  40b1bb:	fstp   TBYTE PTR [esi+ebx*2-0x7ba6354c]
  40b1c2:	mov    edx,0xa27c8fa5
  40b1c8:	pop    edx
  40b1c9:	and    DWORD PTR [ebx-0x60],0xfffffff8
  40b1cd:	outs   dx,BYTE PTR ds:[esi]
  40b1ce:	cmp    eax,0x6e6d9d5
  40b1d3:	outs   dx,BYTE PTR ds:[esi]
  40b1d4:	ins    DWORD PTR es:[edi],dx
  40b1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d6:	lods   eax,DWORD PTR ds:[esi]
  40b1d7:	mov    DWORD PTR [edx],0xbcfe789c
  40b1dd:	outs   dx,BYTE PTR ds:[esi]
  40b1de:	xchg   BYTE PTR [edx-0x54b61b9b],dl
  40b1e4:	xchg   DWORD PTR [edx-0x73],edi
  40b1e7:	cmp    edx,edi
  40b1e9:	out    dx,al
  40b1ea:	and    al,0x7d
  40b1ec:	pop    esi
  40b1ed:	add    al,0xc1
  40b1ef:	inc    ebx
  40b1f0:	(bad)  
  40b1f1:	mov    esi,esi
  40b1f3:	mov    esp,0x1267a724
  40b1f8:	(bad)  
  40b1f9:	out    0x49,eax
  40b1fb:	mov    esi,0x4dbb1a80
  40b200:	(bad)  
  40b201:	nop
  40b202:	xchg   DWORD PTR [ebx],edx
  40b204:	push   esp
  40b205:	mov    ah,0x83
  40b207:	arpl   WORD PTR [eax],cx
  40b209:	or     DWORD PTR [edi-0x3c297541],esi
  40b20f:	ja     0x40b239
  40b211:	repnz (bad) 
  40b213:	fsubrp st(2),st
  40b215:	mov    edi,DWORD PTR [eax+0x4d]
  40b218:	in     eax,0x86
  40b21a:	xor    dh,BYTE PTR [esi+ebp*2-0x15275832]
  40b221:	or     edx,DWORD PTR [ebx-0x189635dc]
  40b227:	icebp  
  40b228:	ins    BYTE PTR es:[edi],dx
  40b229:	mov    edi,0x847c6aba
  40b22e:	xchg   BYTE PTR fs:[ebp+eiz*8-0xc775d6a],cl
  40b236:	xchg   ebp,eax
  40b237:	cmp    ch,dl
  40b239:	push   0xffffffe3
  40b23b:	adc    ecx,DWORD PTR [edi+0x2710862a]
  40b241:	test   BYTE PTR [edx],0x95
  40b244:	cmp    eax,0xc1a245cc
  40b249:	sub    esp,DWORD PTR [ecx-0x6d6bb08f]
  40b24f:	lahf   
  40b250:	addr16 xor ebp,0xffffffd7
  40b254:	int3   
  40b255:	sar    BYTE PTR [edi],1
  40b257:	shr    BYTE PTR [ecx-0x12c262b6],1
  40b25d:	mov    ah,0xa2
  40b25f:	xor    DWORD PTR [edi+ecx*4],edx
  40b262:	stos   DWORD PTR es:[edi],eax
  40b263:	loopne 0x40b2b5
  40b265:	pop    ecx
  40b266:	imul   esp,DWORD PTR [edx-0x4da9dc87],0x29
  40b26d:	jmp    0x40b29a
  40b26f:	add    DWORD PTR [edx],0xffffffd2
  40b272:	pop    es
  40b273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b274:	dec    ebp
  40b275:	push   eax
  40b276:	push   edx
  40b277:	mov    ch,BYTE PTR [edx+0x3c873e5c]
  40b27d:	adc    DWORD PTR [ecx+ebx*8+0x58],ebx
  40b281:	adc    eax,DWORD PTR [ebx+0xb7be0e6]
  40b287:	loope  0x40b2e9
  40b289:	pop    ebx
  40b28a:	push   cs
  40b28b:	jns    0x40b232
  40b28d:	(bad)  
  40b28e:	sub    eax,0x8ecd3a5
  40b293:	jnp    0x40b310
  40b295:	in     eax,0x54
  40b297:	mov    esi,0x7d090978
  40b29c:	adc    DWORD PTR [edi+0x6f8bc456],edx
  40b2a2:	aas    
  40b2a3:	sub    esi,DWORD PTR [ecx+0x3a]
  40b2a6:	sub    DWORD PTR [ecx],edx
  40b2a8:	cwde   
  40b2a9:	sahf   
  40b2aa:	sub    dh,BYTE PTR [edi]
  40b2ac:	mov    al,ds:0xec4ba277
  40b2b1:	mov    ebp,0x2841e9af
  40b2b6:	and    al,0xbf
  40b2b8:	add    DWORD PTR [ebx+0xbc0ae25],ebx
  40b2be:	jnp    0x40b282
  40b2c0:	sub    BYTE PTR [esi+0x76e87022],dl
  40b2c6:	mov    ebp,DWORD PTR [esi]
  40b2c8:	push   edi
  40b2c9:	lahf   
  40b2ca:	retf   0xd3af
  40b2cd:	lahf   
  40b2ce:	sbb    ebp,esp
  40b2d0:	mov    esp,0x65797fdb
  40b2d5:	int    0xb5
  40b2d7:	mov    edx,esp
  40b2d9:	(bad)  
  40b2da:	pop    es
  40b2db:	inc    eax
  40b2dc:	xchg   BYTE PTR [ebp+0x4a9ec135],dl
  40b2e2:	das    
  40b2e3:	add    dh,BYTE PTR [edi-0x5f]
  40b2e6:	fidiv  DWORD PTR [esi+0x39540766]
  40b2ec:	stc    
  40b2ed:	(bad)  
  40b2ee:	jb     0x40b2cd
  40b2f0:	repz lds esp,FWORD PTR [ecx+ecx*8+0x673a2baa]
  40b2f8:	(bad)  
  40b2f9:	push   ecx
  40b2fa:	js     0x40b280
  40b2fc:	mov    bl,0x18
  40b2fe:	pop    esp
  40b2ff:	xchg   edi,eax
  40b300:	sbb    DWORD PTR [ebp-0x7d],ebp
  40b303:	ror    BYTE PTR [edi+0x67],0x90
  40b307:	rol    DWORD PTR [ecx],cl
  40b309:	cmp    al,0x48
  40b30b:	addr16 jns 0x40b382
  40b30e:	cld    
  40b30f:	test   DWORD PTR [eax+0x40aaa0a4],esp
  40b315:	xor    ebx,DWORD PTR [edx]
  40b317:	icebp  
  40b318:	je     0x40b324
  40b31a:	mov    cs,WORD PTR [ecx]
  40b31c:	jmp    0x40b353
  40b31e:	in     al,dx
  40b31f:	iret   
  40b320:	daa    
  40b321:	ss push 0x218a6fe9
  40b327:	in     al,0x3f
  40b329:	pop    ebx
  40b32a:	les    edx,FWORD PTR [edi+0x5c]
  40b32d:	popa   
  40b32e:	and    esp,eax
  40b330:	mov    cl,0xf9
  40b332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b333:	cmp    dl,al
  40b335:	dec    BYTE PTR [ebp-0x9]
  40b338:	cli    
  40b339:	cdq    
  40b33a:	pop    ecx
  40b33b:	push   ss
  40b33c:	fcomip st,st(7)
  40b33e:	gs dec eax
  40b340:	(bad)  
  40b341:	adc    ecx,DWORD PTR [ecx+0x0]
  40b344:	xor    DWORD PTR [esi-0x4a],edi
  40b347:	sbb    bl,0x4
  40b34a:	daa    
  40b34b:	xor    eax,DWORD PTR [eax+ebx*4-0x480b916f]
  40b352:	mov    BYTE PTR [esi-0x7a9b9f31],bh
  40b358:	xchg   esi,eax
  40b359:	loope  0x40b2f0
  40b35b:	add    edi,DWORD PTR [eax]
  40b35d:	into   
  40b35e:	dec    edx
  40b35f:	dec    esi
  40b360:	lods   eax,DWORD PTR ds:[si]
  40b362:	daa    
  40b363:	xchg   ebp,eax
  40b364:	sti    
  40b365:	(bad)  [edx]
  40b367:	mov    gs,WORD PTR [edx+edi*2+0x297a99b8]
  40b36e:	or     eax,0x5c4e2dc0
  40b373:	adc    BYTE PTR [ebp-0x1d4724a5],dh
  40b379:	scas   al,BYTE PTR es:[edi]
  40b37a:	push   esp
  40b37b:	pop    edx
  40b37c:	dec    ecx
  40b37d:	xchg   edi,eax
  40b37e:	test   BYTE PTR [edx],dh
  40b380:	push   esp
  40b381:	mov    esi,0xd29a6675
  40b386:	or     dh,BYTE PTR [eax+0x67]
  40b389:	shl    BYTE PTR [ebp-0x7d],1
  40b38c:	cli    
  40b38d:	es or  eax,0xaf1ae475
  40b393:	xor    DWORD PTR [edx],edx
  40b395:	mov    edi,0x66dd2a0d
  40b39a:	xor    eax,0x8292056c
  40b39f:	call   0x3245bcb0
  40b3a4:	jl     0x40b3f7
  40b3a6:	pop    ss
  40b3a7:	add    eax,0xc41ebbe4
  40b3ac:	sbb    edx,DWORD PTR [ecx]
  40b3ae:	mov    al,0x11
  40b3b0:	dec    esi
  40b3b1:	(bad)  
  40b3b2:	jbe    0x40b39c
  40b3b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b5:	(bad)  
  40b3b6:	mov    ebp,0xcb876b7a
  40b3bb:	retf   0x7721
  40b3be:	gs into 
  40b3c0:	(bad)  
  40b3c1:	mov    esi,0xa9cc414f
  40b3c6:	retf   
  40b3c7:	cli    
  40b3c8:	lods   eax,DWORD PTR ds:[esi]
  40b3c9:	cmp    dl,BYTE PTR [ebx]
  40b3cb:	mov    bl,0x9b
  40b3cd:	aas    
  40b3ce:	cmp    edx,DWORD PTR [ebx-0x35a5b2ec]
  40b3d4:	push   cs
  40b3d5:	addr16 push edx
  40b3d7:	push   edx
  40b3d8:	push   esi
  40b3d9:	sub    al,0xcf
  40b3db:	push   ecx
  40b3dc:	fwait
  40b3dd:	inc    ecx
  40b3de:	sahf   
  40b3df:	ss sahf 
  40b3e1:	pop    eax
  40b3e2:	inc    edx
  40b3e3:	fidiv  WORD PTR [edi]
  40b3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3e6:	inc    ecx
  40b3e7:	sbb    BYTE PTR [eax-0x7483a9e1],al
  40b3ed:	dec    edx
  40b3ee:	shl    DWORD PTR [edi],cl
  40b3f0:	ins    BYTE PTR es:[edi],dx
  40b3f1:	add    ch,ch
  40b3f3:	daa    
  40b3f4:	aaa    
  40b3f5:	lock stos BYTE PTR es:[edi],al
  40b3f7:	pop    ss
  40b3f8:	sub    ebp,ecx
  40b3fa:	add    eax,0x435564ff
  40b3ff:	push   edx
  40b400:	mov    esp,0x5953248c
  40b405:	arpl   cx,bx
  40b407:	test   eax,0x5deb6a66
  40b40c:	xlat   BYTE PTR ds:[ebx]
  40b40d:	xchg   DWORD PTR [ebx-0x519cb7ff],eax
  40b413:	adc    al,0x45
  40b415:	inc    edx
  40b416:	shl    BYTE PTR es:[edx-0x51],1
  40b41a:	fwait
  40b41b:	and    BYTE PTR [edx+eiz*8-0x68be25d8],dl
  40b422:	push   ebp
  40b423:	and    al,0x3f
  40b425:	sti    
  40b426:	dec    BYTE PTR [ebp-0x4ced7241]
  40b42c:	inc    edx
  40b42d:	add    dh,BYTE PTR [ebx+0x47f44bd4]
  40b433:	mov    edx,0x35177d97
  40b438:	pushf  
  40b439:	rcl    ebx,cl
  40b43b:	inc    ebx
  40b43c:	mov    esp,0x1002a797
  40b441:	retf   0x74a7
  40b444:	jg     0x40b476
  40b446:	or     ecx,DWORD PTR [edi+eax*4+0x3a98be07]
  40b44d:	dec    ebp
  40b44e:	arpl   sp,cx
  40b450:	cmc    
  40b451:	push   ss
  40b452:	cld    
  40b453:	test   dl,al
  40b455:	cmp    DWORD PTR [esi-0x42],ebp
  40b458:	cs sub eax,0x45b78f70
  40b45e:	push   es
  40b45f:	push   edi
  40b460:	or     eax,0x2471d297
  40b465:	xchg   BYTE PTR [esi-0x11],dh
  40b468:	rol    DWORD PTR [ebx],0x1
  40b46b:	call   0x86af1418
  40b470:	mul    esi
  40b472:	sbb    eax,0xd6d6d78
  40b477:	sub    eax,0xc7d01c76
  40b47c:	sub    ch,BYTE PTR [edx+0x7e]
  40b47f:	push   ebp
  40b480:	inc    edx
  40b481:	dec    edi
  40b482:	dec    ebp
  40b483:	xlat   BYTE PTR ds:[ebx]
  40b484:	jecxz  0x40b4cf
  40b486:	jl     0x40b4ff
  40b488:	adc    eax,0x50199c74
  40b48d:	inc    eax
  40b48e:	jg     0x40b452
  40b490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b491:	inc    edx
  40b492:	fisub  DWORD PTR [ebx+0x2d10b579]
  40b498:	out    0x5,eax
  40b49a:	shl    DWORD PTR [ecx-0x3f],1
  40b49d:	test   al,0xb5
  40b49f:	dec    ebx
  40b4a0:	pop    ebx
  40b4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4a2:	nop
  40b4a3:	cwde   
  40b4a4:	add    DWORD PTR [ecx-0x5c],0xffffffcc
  40b4a8:	and    BYTE PTR [ecx+0x4cd01577],dl
  40b4ae:	ret    
  40b4af:	enter  0xe025,0x73
  40b4b3:	mov    ah,0x8e
  40b4b5:	fcomp  DWORD PTR [eax]
  40b4b7:	adc    eax,0xfc10f265
  40b4bc:	jbe    0x40b463
  40b4be:	xor    ah,dh
  40b4c0:	dec    ecx
  40b4c1:	dec    edi
  40b4c2:	fiadd  WORD PTR [edi]
  40b4c4:	push   ss
  40b4c5:	fidivr WORD PTR [ecx+0x7a]
  40b4c8:	in     al,0xe7
  40b4ca:	imul   edi,DWORD PTR [esp+edx*2],0x11
  40b4ce:	mov    edi,0xed19943c
  40b4d3:	jg     0x40b518
  40b4d5:	addr16 aas 
  40b4d7:	xor    DWORD PTR [ebp+0x24a4a845],eax
  40b4dd:	dec    ebp
  40b4de:	jno    0x40b4ee
  40b4e0:	sbb    eax,0x2f
  40b4e3:	mov    BYTE PTR [esi+0x7be10da8],bh
  40b4e9:	add    al,0x79
  40b4eb:	xor    al,0xc0
  40b4ed:	test   bh,0xc7
  40b4f0:	cmp    eax,0x8d6b3788
  40b4f5:	lock rcr BYTE PTR [edx-0x2a],cl
  40b4f9:	icebp  
  40b4fa:	lahf   
  40b4fb:	rcl    BYTE PTR [esi],0x77
  40b4fe:	aam    0xd6
  40b500:	sbb    BYTE PTR [eax-0x1169257b],0x9a
  40b507:	sar    DWORD PTR [edi],0x6f
  40b50a:	icebp  
  40b50b:	xor    BYTE PTR [edx-0x7737a25a],0x3e
  40b512:	cdq    
  40b513:	cmp    al,0xa7
  40b515:	jecxz  0x40b549
  40b517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b518:	xor    DWORD PTR [ebx+esi*1+0x4c987545],esp
  40b51f:	jmp    0x6f93291d
  40b524:	xchg   edx,eax
  40b525:	dec    esp
  40b526:	mov    al,0xe7
  40b528:	cmp    DWORD PTR [esi+ecx*8+0x5a],ebp
  40b52c:	and    BYTE PTR [esi+0x79],cl
  40b52f:	jno    0x40b4e2
  40b531:	(bad)  
  40b533:	or     edi,DWORD PTR [edi]
  40b535:	mov    ds:0x53b5d783,al
  40b53a:	retf   0xa33c
  40b53d:	dec    eax
  40b53e:	mov    ebx,eax
  40b540:	out    dx,eax
  40b541:	inc    ebx
  40b542:	pop    ebx
  40b543:	push   0xffffffce
  40b545:	js     0x40b543
  40b547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b548:	or     dl,BYTE PTR [edx]
  40b54a:	mov    ecx,0xaecdcf0
  40b54f:	adc    bl,BYTE PTR [ebp+eiz*2-0x4b]
  40b553:	cmp    BYTE PTR [esp+ecx*2-0x4699b3ac],0x12
  40b55b:	test   DWORD PTR [ecx],0x7ad458f4
  40b561:	and    al,0xd6
  40b563:	inc    esi
  40b564:	mov    ecx,DWORD PTR [ecx]
  40b566:	sub    bl,BYTE PTR [edi+0x7b3c77d0]
  40b56c:	fwait
  40b56d:	add    ch,bl
  40b56f:	outs   dx,BYTE PTR ds:[esi]
  40b570:	icebp  
  40b571:	mov    esp,0xc4ab48d2
  40b576:	or     DWORD PTR [edi],ebx
  40b578:	xchg   DWORD PTR [eax+0x3d],eax
  40b57b:	outs   dx,BYTE PTR ds:[esi]
  40b57c:	pop    ds
  40b57d:	sbb    BYTE PTR [eax-0x4a],0xc4
  40b581:	add    ebx,DWORD PTR [esi]
  40b583:	mov    ecx,0x80c6cf99
  40b588:	sub    edi,DWORD PTR [esi+0x4d]
  40b58b:	repz dec edx
  40b58d:	arpl   WORD PTR [edi-0x57],ax
  40b590:	mov    al,ds:0xfd77f15c
  40b595:	mov    edi,0xa966d1c3
  40b59a:	jmp    0x40b5fc
  40b59c:	int    0x78
  40b59e:	repnz shr ebp,cl
  40b5a1:	(bad)  
  40b5a2:	sub    edi,DWORD PTR [edx+0x3a00ceae]
  40b5a8:	jbe    0x40b615
  40b5aa:	in     al,dx
  40b5ab:	std    
  40b5ac:	cmp    BYTE PTR [eax],0xdb
  40b5af:	jl     0x40b533
  40b5b1:	dec    edi
  40b5b2:	lds    ebp,FWORD PTR [ebx+0x746f03a2]
  40b5b8:	xor    BYTE PTR [ecx],0x8f
  40b5bb:	fcomp  QWORD PTR [esi]
  40b5bd:	pop    ss
  40b5be:	jae    0x40b5ce
  40b5c0:	xchg   ebp,eax
  40b5c1:	shl    DWORD PTR [edi+eax*4],cl
  40b5c4:	mov    cl,0x46
  40b5c6:	les    ebx,FWORD PTR [edi-0x6d]
  40b5c9:	icebp  
  40b5ca:	int3   
  40b5cb:	mov    ah,0x41
  40b5cd:	ret    
  40b5ce:	lahf   
  40b5cf:	add    DWORD PTR [eax+0x37a1b164],ebp
  40b5d5:	add    BYTE PTR [edx+eiz*8-0x6e],bl
  40b5d9:	xchg   ecx,eax
  40b5da:	jne    0x40b616
  40b5dc:	fidivr DWORD PTR [esi-0x38]
  40b5df:	mov    ds:0x5cbde3f6,al
  40b5e4:	imul   DWORD PTR [edi+0x38de8e77]
  40b5ea:	and    eax,ebp
  40b5ec:	jecxz  0x40b56e
  40b5ee:	imul   ebp,DWORD PTR [ebx],0x76de38e0
  40b5f4:	rol    DWORD PTR [edx-0x31],1
  40b5f7:	cwde   
  40b5f8:	retf   
  40b5f9:	jmp    0x6eb8bb66
  40b5fe:	dec    esi
  40b5ff:	cwde   
  40b600:	pop    ecx
  40b601:	jl     0x40b5ad
  40b603:	pop    es
  40b604:	mov    ?,WORD PTR [edi-0x50]
  40b607:	mov    ah,0xc5
  40b609:	test   eax,0xc6a063c5
  40b60e:	pop    DWORD PTR [esi]
  40b610:	fwait
  40b611:	inc    ebx
  40b612:	push   0x51
  40b614:	xchg   edx,eax
  40b615:	out    dx,eax
  40b616:	outs   dx,BYTE PTR ds:[esi]
  40b617:	lock int 0x7f
  40b61a:	inc    esp
  40b61b:	cli    
  40b61c:	xor    BYTE PTR [edx-0x54],al
  40b61f:	inc    edx
  40b620:	xchg   esi,eax
  40b621:	repnz or ch,BYTE PTR [ebx-0x28fca304]
  40b628:	xchg   esp,eax
  40b629:	mov    ebp,0x7f728e1d
  40b62e:	dec    edx
  40b62f:	sub    ebp,DWORD PTR es:[esi]
  40b632:	push   ds
  40b633:	jl     0x40b5d6
  40b635:	mov    ds:0xf0ca682c,al
  40b63a:	clc    
  40b63b:	enter  0x8bee,0x2f
  40b63f:	sti    
  40b640:	push   edi
  40b641:	in     al,dx
  40b642:	push   cs
  40b643:	push   ebp
  40b644:	shl    DWORD PTR [ebx-0x4f],1
  40b647:	add    BYTE PTR [ebp-0x5adb3e6],ch
  40b64d:	ss inc edx
  40b64f:	popf   
  40b650:	cmp    eax,0xecf11395
  40b655:	mov    dl,0x95
  40b657:	and    DWORD PTR [edx-0x27],edi
  40b65a:	sbb    dl,BYTE PTR [edi+0x635d2f97]
  40b660:	xor    ebx,0x6e
  40b663:	pop    ds
  40b664:	dec    esp
  40b665:	sbb    DWORD PTR ds:0xcc5d12e1,ebx
  40b66b:	stos   BYTE PTR es:[edi],al
  40b66c:	rcr    DWORD PTR [esi+edi*1-0xbd2ff38],0x61
  40b674:	jecxz  0x40b652
  40b676:	(bad)  [ebx]
  40b678:	aam    0x8f
  40b67a:	cdq    
  40b67b:	scas   al,BYTE PTR es:[edi]
  40b67c:	dec    ebx
  40b67d:	outs   dx,BYTE PTR ds:[esi]
  40b67e:	xlat   BYTE PTR ds:[ebx]
  40b67f:	push   eax
  40b680:	fbstp  TBYTE PTR [edi+0x3422da68]
  40b686:	dec    esp
  40b687:	push   cs
  40b688:	mov    al,0x7f
  40b68a:	cmp    eax,0xd32fe2dd
  40b68f:	ret    0x4537
  40b692:	inc    edi
  40b693:	test   al,0x7f
  40b695:	out    dx,al
  40b696:	sbb    eax,0x5c3685e
  40b69b:	push   es
  40b69c:	cmp    edx,DWORD PTR [edx-0x1859341a]
  40b6a2:	xor    edi,esi
  40b6a4:	jge    0x40b67d
  40b6a6:	shl    ebx,cl
  40b6a8:	shl    BYTE PTR [esi],cl
  40b6aa:	adc    al,BYTE PTR [esi]
  40b6ac:	xchg   ebp,ecx
  40b6ae:	call   0xcfd0:0x919a6c21
  40b6b5:	aaa    
  40b6b6:	imul   edx,DWORD PTR [esi+0x11],0xf0a30b69
  40b6bd:	pop    ebx
  40b6be:	aaa    
  40b6bf:	call   0x36bdca3f
  40b6c4:	rcl    dh,cl
  40b6c6:	jnp    0x40b659
  40b6c8:	lods   al,BYTE PTR ds:[esi]
  40b6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ca:	dec    esi
  40b6cb:	inc    esi
  40b6cc:	and    BYTE PTR [edx-0x5bad8514],0xc4
  40b6d3:	scas   al,BYTE PTR es:[edi]
  40b6d4:	sbb    DWORD PTR [edx-0x38],esp
  40b6d7:	jmp    0x499b:0x38dbd46b
  40b6de:	pop    es
  40b6df:	or     al,0xbd
  40b6e1:	fiadd  DWORD PTR [ebx-0x7d]
  40b6e4:	pop    es
  40b6e5:	jae    0x40b73e
  40b6e7:	cdq    
  40b6e8:	inc    esp
  40b6e9:	shr    DWORD PTR [edx],cl
  40b6eb:	(bad)  
  40b6ec:	mov    al,ds:0x2d48c7a7
  40b6f1:	cmp    al,0xba
  40b6f3:	cmp    al,0x1a
  40b6f5:	push   edi
  40b6f6:	cld    
  40b6f7:	xchg   ecx,eax
  40b6f8:	fsubr  DWORD PTR ds:0xb97a3710
  40b6fe:	or     esp,edi
  40b700:	jns    0x40b69c
  40b702:	jg     0x40b769
  40b704:	xchg   ebx,eax
  40b705:	or     eax,0x2437215
  40b70a:	dec    edi
  40b70b:	stos   BYTE PTR es:[edi],al
  40b70c:	cmc    
  40b70d:	std    
  40b70e:	je     0x40b6cd
  40b710:	scas   al,BYTE PTR es:[edi]
  40b711:	and    edx,DWORD PTR [ebx-0x31d4e15d]
  40b717:	(bad)  
  40b718:	pop    es
  40b719:	sbb    eax,0x2d56c0d2
  40b71e:	sub    edx,0xd556914d
  40b724:	adc    edi,DWORD PTR [eax]
  40b726:	gs inc edx
  40b728:	scas   al,BYTE PTR es:[edi]
  40b729:	jecxz  0x40b723
  40b72b:	stc    
  40b72c:	push   ds
  40b72d:	and    al,0x24
  40b72f:	loope  0x40b718
  40b731:	sbb    eax,0xc86d016e
  40b736:	pop    esp
  40b737:	jae    0x40b775
  40b739:	in     eax,0x44
  40b73b:	sbb    eax,0x8be29f71
  40b740:	mov    ebx,0xb843af27
  40b745:	push   edi
  40b746:	push   cs
  40b747:	fcomip st,st(2)
  40b749:	ds jae 0x40b754
  40b74c:	lea    ebx,[edi+0x6e]
  40b74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b750:	scas   al,BYTE PTR es:[edi]
  40b751:	and    ebx,eax
  40b753:	call   0x5cc3:0xef48a433
  40b75a:	int    0xf2
  40b75c:	ins    DWORD PTR es:[edi],dx
  40b75d:	scas   al,BYTE PTR es:[edi]
  40b75e:	stos   BYTE PTR es:[edi],al
  40b75f:	pop    ds
  40b760:	fadd   st(0),st
  40b762:	fs dec edx
  40b764:	popf   
  40b765:	in     eax,dx
  40b766:	jecxz  0x40b70b
  40b768:	push   edi
  40b769:	jl     0x40b7cb
  40b76b:	add    DWORD PTR ds:0xae888163,ebx
  40b771:	pushf  
  40b772:	cmp    al,0x51
  40b774:	xchg   edx,eax
  40b775:	loop   0x40b7cb
  40b777:	dec    esp
  40b778:	aam    0xb9
  40b77a:	test   BYTE PTR [ecx+0x1483771e],al
  40b780:	or     DWORD PTR [edi-0x16],ecx
  40b783:	fisttp WORD PTR [edx]
  40b785:	cmp    al,0x78
  40b787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b788:	and    dl,BYTE PTR [edx]
  40b78a:	xchg   BYTE PTR [esi+0x2943d2ba],bl
  40b790:	out    dx,al
  40b791:	(bad)  
  40b792:	iret   
  40b793:	outs   dx,DWORD PTR ds:[esi]
  40b794:	(bad)  
  40b795:	pop    ecx
  40b796:	or     eax,0x65f3f5a7
  40b79b:	mov    BYTE PTR [ebx+0x4d162735],ah
  40b7a1:	sahf   
  40b7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7a3:	jno    0x40b7e3
  40b7a5:	xchg   ebp,eax
  40b7a6:	repz out dx,eax
  40b7a8:	cmp    eax,0x21801bc
  40b7ad:	in     eax,dx
  40b7ae:	outs   dx,BYTE PTR ds:[esi]
  40b7af:	or     eax,0x44060e59
  40b7b4:	fcomp  DWORD PTR [eax+0x5a02ac9]
  40b7ba:	or     esp,eax
  40b7bc:	outs   dx,DWORD PTR ds:[esi]
  40b7bd:	xor    al,0x2f
  40b7bf:	shl    DWORD PTR [ebp+edi*2+0x50a02cab],cl
  40b7c6:	iret   
  40b7c7:	jle    0x40b7e1
  40b7c9:	fbld   TBYTE PTR [eax-0x1b246e57]
  40b7cf:	dec    ecx
  40b7d0:	call   0x7667:0x9e4dc8c5
  40b7d7:	jmp    0x36aedb07
  40b7dc:	(bad)  
  40b7dd:	adc    edx,eax
  40b7df:	mov    es,WORD PTR [ebp+0x29]
  40b7e2:	rcr    BYTE PTR [eax-0x1cd90029],0xea
  40b7e9:	js     0x40b7e2
  40b7eb:	ss iret 
  40b7ed:	jecxz  0x40b82b
  40b7ef:	std    
  40b7f0:	(bad)  
  40b7f1:	std    
  40b7f2:	out    0x28,al
  40b7f4:	mov    esp,0xc8c7e766
  40b7f9:	or     BYTE PTR [ebx],ah
  40b7fb:	dec    ebx
  40b7fc:	jge    0x40b7f1
  40b7fe:	pop    ebx
  40b7ff:	daa    
  40b800:	mov    esp,0xb453201e
  40b805:	add    BYTE PTR [esi],cl
  40b807:	test   al,0xb7
  40b809:	mov    bl,0x68
  40b80b:	pop    es
  40b80c:	dec    ebp
  40b80d:	mov    cl,BYTE PTR gs:[esi+0x51]
  40b811:	es mov esi,0x9e9edd7c
  40b817:	lds    edi,FWORD PTR [edi]
  40b819:	pop    ds
  40b81a:	mov    al,ds:0x8c90dfc
  40b81f:	and    dl,BYTE PTR [edi+0x4d]
  40b822:	and    esp,0x47
  40b825:	sbb    eax,0x180a1ad5
  40b82a:	push   esi
  40b82b:	or     BYTE PTR ss:[eax-0x7f],ah
  40b82f:	push   ds
  40b830:	mov    edx,0x944f9b7f
  40b835:	xchg   esi,eax
  40b836:	imul   esi
  40b838:	cmp    DWORD PTR [edx+0x24],ebx
  40b83b:	repz enter 0xf4fe,0x42
  40b840:	mov    dl,BYTE PTR [edi]
  40b842:	mov    ds:0xa8e01bb8,eax
  40b847:	sahf   
  40b848:	stc    
  40b849:	mov    ecx,gs
  40b84b:	mov    eax,0x32375941
  40b850:	sub    eax,0x6aeb12a9
  40b855:	in     al,0x42
  40b857:	inc    edi
  40b858:	mov    esi,ss
  40b85a:	dec    esi
  40b85b:	retf   
  40b85c:	mul    cl
  40b85e:	and    DWORD PTR [esi+0x442cf0c1],0x53a635af
  40b868:	mov    ecx,0x8d71208e
  40b86d:	push   edi
  40b86e:	mov    al,ds:0xc38ace9e
  40b873:	icebp  
  40b874:	push   ecx
  40b875:	sub    cl,BYTE PTR [ebx-0x58]
  40b878:	fdivr  DWORD PTR [ebx-0x70f7a664]
  40b87e:	sub    ebp,esp
  40b880:	popa   
  40b881:	xor    al,0xc0
  40b883:	sub    eax,0x70ec6f1a
  40b888:	push   edi
  40b889:	cmp    ebx,DWORD PTR [ecx+0x55bd3b64]
  40b88f:	es cmp bl,al
  40b892:	dec    ebp
  40b893:	mov    ds:0x3194d491,al
  40b898:	rol    DWORD PTR [esi-0x4d3db454],0xf2
  40b89f:	and    al,0xad
  40b8a1:	call   0x23aebf8
  40b8a6:	shl    BYTE PTR [esi],1
  40b8a8:	jmp    0x16d3:0xd4468483
  40b8af:	hlt    
  40b8b0:	pop    es
  40b8b1:	test   eax,0xd58cea6f
  40b8b6:	cmp    bh,bh
  40b8b8:	or     eax,0x4aff8af
  40b8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8be:	inc    ebp
  40b8bf:	inc    esi
  40b8c0:	xor    eax,edx
  40b8c2:	cs dec ebp
  40b8c4:	dec    si
  40b8c6:	in     al,dx
  40b8c7:	fst    DWORD PTR [ebp-0x57]
  40b8ca:	out    0x56,eax
  40b8cc:	jns    0x40b8e8
  40b8ce:	jecxz  0x40b94e
  40b8d0:	ds mov ebx,0x463d082
  40b8d6:	jbe    0x40b8b8
  40b8d8:	aaa    
  40b8d9:	test   BYTE PTR [ebx],0xd8
  40b8dc:	sbb    eax,0x60ce2557
  40b8e1:	push   esi
  40b8e2:	retf   0x982
  40b8e5:	jbe    0x40b896
  40b8e7:	push   edx
  40b8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e9:	je     0x40b904
  40b8eb:	mov    ecx,0xb2317eab
  40b8f0:	ret    
  40b8f1:	fild   WORD PTR [eax-0x73]
  40b8f4:	mov    fs,esp
  40b8f6:	or     DWORD PTR [esi],ecx
  40b8f8:	ret    
  40b8f9:	add    ch,dh
  40b8fb:	add    ecx,0xffffffe1
  40b8fe:	mov    ebx,0xc82856e1
  40b903:	mov    dh,0xf1
  40b905:	mov    al,cl
  40b907:	mov    esp,0xb0f4fd66
  40b90c:	cwde   
  40b90d:	inc    edx
  40b90e:	mov    ch,0xa
  40b910:	in     al,dx
  40b911:	and    BYTE PTR [esi],ch
  40b913:	mov    eax,ds:0xa7839185
  40b918:	inc    edx
  40b919:	mov    cl,0x6a
  40b91b:	aad    0x2b
  40b91d:	adc    BYTE PTR es:[edx-0x4],ch
  40b921:	fisttp QWORD PTR [esi-0x4acfcd0c]
  40b927:	sub    eax,0xb22279ad
  40b92c:	add    edx,edx
  40b92e:	shl    BYTE PTR [ecx],1
  40b930:	xchg   edi,eax
  40b931:	and    DWORD PTR [ebx],0x8446cf2e
  40b937:	adc    edi,eax
  40b939:	mov    al,0xb8
  40b93b:	in     eax,0x87
  40b93d:	std    
  40b93e:	dec    esp
  40b93f:	pop    ss
  40b940:	xchg   edi,eax
  40b941:	mov    ds:0x7a8a3c6a,al
  40b946:	pop    ss
  40b947:	call   0x9c90:0x77b27b47
  40b94e:	pop    ecx
  40b94f:	xor    al,0x10
  40b951:	push   0x10
  40b953:	xchg   BYTE PTR [ecx],cl
  40b955:	lods   al,BYTE PTR ds:[esi]
  40b956:	inc    edx
  40b957:	retf   
  40b958:	mov    ds:0xaae16810,eax
  40b95d:	and    al,0xa8
  40b95f:	mov    ebp,0xeb673639
  40b964:	shr    DWORD PTR [ebx-0x7cf952d1],0xaa
  40b96b:	pop    edi
  40b96c:	fs cdq 
  40b96e:	jg     0x40b93f
  40b970:	push   edi
  40b971:	imul   DWORD PTR [ebx]
  40b973:	enter  0x4134,0xb4
  40b977:	outs   dx,BYTE PTR ds:[esi]
  40b978:	shl    edx,1
  40b97a:	pop    ebp
  40b97b:	and    DWORD PTR [ebp+edx*8+0xe62e018],ebp
  40b982:	call   DWORD PTR [ecx]
  40b984:	out    dx,al
  40b985:	adc    eax,0xc94f56e5
  40b98a:	repnz (bad) 
  40b98c:	jmp    0x40b9c7
  40b98e:	sub    DWORD PTR [edx-0x61ca106b],0xda838120
  40b998:	scas   al,BYTE PTR es:[edi]
  40b999:	push   ds
  40b99a:	mov    ebp,0x3cb7114b
  40b99f:	sbb    dl,bh
  40b9a1:	push   cs
  40b9a2:	sbb    cl,dh
  40b9a4:	and    al,0x9e
  40b9a6:	adc    si,0x69
  40b9aa:	ficomp DWORD PTR [ebp+0x6f]
  40b9ad:	fisub  DWORD PTR [esi+0x67fed078]
  40b9b3:	sbb    DWORD PTR [eax+esi*8],0xffffffc3
  40b9b7:	and    BYTE PTR [esi-0x2e175f6e],cl
  40b9bd:	dec    edx
  40b9be:	out    0xd,eax
  40b9c0:	sub    ah,BYTE PTR [esi+edi*8-0x5e5fce72]
  40b9c7:	dec    esi
  40b9c8:	hlt    
  40b9c9:	jnp    0x40ba2a
  40b9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9cc:	js     0x40b9f8
  40b9ce:	inc    edx
  40b9cf:	lock and al,ch
  40b9d2:	shl    DWORD PTR [edi+0x7b],0x0
  40b9d6:	mov    edi,0x91d3e60a
  40b9db:	sahf   
  40b9dc:	arpl   WORD PTR ds:[esi-0x5b],si
  40b9e0:	mov    ecx,0xac62039d
  40b9e5:	mov    esp,DWORD PTR [eax]
  40b9e7:	mov    ah,0x1b
  40b9e9:	lsl    esi,WORD PTR [ecx]
  40b9ec:	cmp    BYTE PTR [esi+0x30],dl
  40b9ef:	dec    ebx
  40b9f0:	arpl   WORD PTR [esi],cx
  40b9f2:	and    al,0x2f
  40b9f4:	ror    DWORD PTR [ebp-0x59],0xc4
  40b9f8:	or     BYTE PTR [eax+0x15],0x10
  40b9fc:	repnz push ebx
  40b9fe:	mov    edx,0x4cc31d20
  40ba03:	popa   
  40ba04:	mov    ebp,0xff256d4a
  40ba09:	dec    eax
  40ba0a:	xchg   ebp,eax
  40ba0b:	add    ch,bl
  40ba0d:	push   0xfffffff3
  40ba0f:	shl    BYTE PTR [ecx-0xb],cl
  40ba12:	mov    ebp,0x270edb8b
  40ba17:	les    ecx,FWORD PTR [edi]
  40ba19:	sbb    bl,BYTE PTR [eax-0x30cecf75]
  40ba1f:	jmp    0x9fb3:0x6dbfbe6b
  40ba26:	out    dx,eax
  40ba27:	and    edi,DWORD PTR [edx]
  40ba29:	xchg   ecx,eax
  40ba2a:	jmp    0x42b2961d
  40ba2f:	push   cs
  40ba30:	aas    
  40ba31:	scas   al,BYTE PTR es:[edi]
  40ba32:	xor    edx,edx
  40ba34:	adc    esp,ebx
  40ba36:	rcr    BYTE PTR [edx+eax*8],0xca
  40ba3a:	mov    bh,0x6b
  40ba3c:	adc    BYTE PTR [ecx+ebx*1+0x5f6328e],ch
  40ba43:	mov    ebx,0x7a14d63d
  40ba48:	cmp    ch,BYTE PTR [ebx+eax*2]
  40ba4b:	stos   BYTE PTR es:[edi],al
  40ba4c:	pop    ds
  40ba4d:	not    BYTE PTR [edx]
  40ba4f:	mov    ch,0xe4
  40ba51:	xor    DWORD PTR [ebx-0x2d],esi
  40ba54:	push   edi
  40ba55:	jb     0x40ba8f
  40ba57:	sbb    ecx,ebp
  40ba59:	xchg   DWORD PTR [edx-0x4a],edx
  40ba5c:	mov    ecx,0x5e9915ac
  40ba61:	dec    ebp
  40ba62:	dec    esi
  40ba63:	pop    esi
  40ba64:	jp     0x40b9f7
  40ba66:	mov    dl,0xe1
  40ba68:	adc    WORD PTR [ecx-0x4b],si
  40ba6c:	pusha  
  40ba6d:	xor    DWORD PTR [ebx],ebx
  40ba6f:	and    DWORD PTR [edi+0x65cb04ca],esi
  40ba75:	mov    edx,0xf06f9e51
  40ba7a:	cmp    al,0xf
  40ba7c:	inc    ebx
  40ba7d:	pop    ds
  40ba7e:	xor    eax,0x5bca0303
  40ba83:	jecxz  0x40baeb
  40ba85:	adc    al,0x22
  40ba87:	mov    eax,0x14cf91a0
  40ba8c:	mov    ebx,DWORD PTR [esi-0x46c36a27]
  40ba92:	aas    
  40ba93:	push   eax
  40ba94:	test   DWORD PTR [esi+esi*4-0x2b],ecx
  40ba98:	cmp    dh,BYTE PTR [ecx+0x21]
  40ba9b:	sbb    eax,esi
  40ba9d:	idiv   DWORD PTR [ebx]
  40ba9f:	fs mov esp,0x7b9f496d
  40baa5:	xor    edx,esp
  40baa7:	(bad)  
  40baa8:	sti    
  40baa9:	inc    ecx
  40baaa:	cmp    al,0x21
  40baac:	add    DWORD PTR [eax-0x4e5b8796],ebx
  40bab2:	dec    edx
  40bab3:	pop    es
  40bab4:	add    BYTE PTR [edx-0x26],0x4b
  40bab8:	adc    al,0x3f
  40baba:	fs popa 
  40babc:	xchg   ecx,eax
  40babd:	cmp    BYTE PTR [edx+edi*2+0x46897ee9],cl
  40bac4:	outs   dx,DWORD PTR ds:[esi]
  40bac5:	lods   al,BYTE PTR ds:[esi]
  40bac6:	or     eax,DWORD PTR [ebx+eax*8-0x39c6a9ba]
  40bacd:	retf   0x9ea3
  40bad0:	and    DWORD PTR [edi+0x5],esp
  40bad3:	das    
  40bad4:	pusha  
  40bad5:	mov    dh,0xa5
  40bad7:	out    0x1b,al
  40bad9:	int3   
  40bada:	jne    0x40baff
  40badc:	mov    eax,0x655e7b3
  40bae1:	push   0xffffffa9
  40bae3:	push   ebx
  40bae4:	or     ah,BYTE PTR [ebx+0x626ea15f]
  40baea:	pop    ecx
  40baeb:	or     esi,DWORD PTR [edi+eiz*4]
  40baee:	mov    ah,0xf3
  40baf0:	jmp    0xc553:0x595044f5
  40baf7:	dec    edi
  40baf8:	mov    esp,0x5f4a8751
  40bafd:	push   ebx
  40bafe:	pop    esp
  40baff:	outs   dx,BYTE PTR ds:[esi]
  40bb00:	js     0x40bafc
  40bb02:	cmp    eax,0x66fa00bf
  40bb07:	push   ds
  40bb08:	retf   
  40bb09:	mov    ?,WORD PTR [esi]
  40bb0b:	push   ds
  40bb0c:	jb     0x40baed
  40bb0e:	xor    ch,BYTE PTR [ebp+edx*1+0x75]
  40bb12:	cli    
  40bb13:	(bad)  
  40bb14:	jmp    0x6001e3
  40bb19:	push   ss
  40bb1a:	ret    0x93f
  40bb1d:	(bad)  
  40bb1e:	or     eax,0xea9cc2c8
  40bb23:	popa   
  40bb24:	sub    eax,0x4270897c
  40bb29:	jmp    0x23f8c3e2
  40bb2e:	pop    ecx
  40bb2f:	mov    ah,bl
  40bb31:	or     BYTE PTR [ebx-0x9fe2823],dh
  40bb37:	outs   dx,BYTE PTR ds:[esi]
  40bb38:	adc    al,0x61
  40bb3a:	dec    edi
  40bb3b:	repz jns 0x40bb20
  40bb3e:	fisttp WORD PTR [esi]
  40bb40:	inc    edx
  40bb41:	pop    ds
  40bb42:	adc    eax,0x8fdf13e5
  40bb47:	xor    eax,0xe1581c2e
  40bb4c:	addr16 (bad) 
  40bb4e:	mov    bl,0xf5
  40bb50:	lock push edi
  40bb52:	retf   
  40bb53:	arpl   si,sp
  40bb55:	push   eax
  40bb56:	(bad)  
  40bb57:	ss inc edx
  40bb59:	out    0x1b,eax
  40bb5b:	ins    BYTE PTR es:[edi],dx
  40bb5c:	sti    
  40bb5d:	inc    eax
  40bb5e:	mov    dl,0xef
  40bb60:	and    ebp,ebp
  40bb62:	sub    ecx,DWORD PTR [edi+ecx*8]
  40bb65:	add    DWORD PTR ds:0x88fbf95c,edx
  40bb6b:	nop
  40bb6c:	add    al,0xda
  40bb6e:	push   edi
  40bb6f:	push   esp
  40bb70:	in     al,0xc6
  40bb72:	jp     0x40bb74
  40bb74:	cmp    eax,0xbe185802
  40bb79:	mov    bh,0x4e
  40bb7b:	cdq    
  40bb7c:	and    DWORD PTR [eax+0x4f],edx
  40bb7f:	pop    ds
  40bb80:	xor    edi,DWORD PTR [ecx+eax*2+0x3b]
  40bb84:	sbb    DWORD PTR [esi-0x17],esi
  40bb87:	inc    eax
  40bb88:	xor    BYTE PTR [ebx],cl
  40bb8a:	loope  0x40bb42
  40bb8c:	dec    eax
  40bb8d:	inc    ebp
  40bb8e:	fwait
  40bb8f:	xchg   ecx,eax
  40bb90:	cmp    eax,0xf96d77a6
  40bb95:	mov    ah,0x8e
  40bb97:	icebp  
  40bb98:	enter  0xd2fe,0xae
  40bb9c:	arpl   sp,ax
  40bb9e:	fld    TBYTE PTR [ebp+0x3fa65b08]
  40bba4:	push   ds
  40bba5:	ror    DWORD PTR [eax-0x80],cl
  40bba8:	lds    edi,FWORD PTR [eax+0x37]
  40bbab:	xchg   edi,eax
  40bbac:	fucomi st,st(3)
  40bbae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbaf:	pop    eax
  40bbb0:	and    cl,BYTE PTR [esi+0x4e232c9a]
  40bbb6:	xor    eax,0x69a881f
  40bbbb:	daa    
  40bbbc:	ins    DWORD PTR es:[edi],dx
  40bbbd:	retf   
  40bbbe:	pop    esp
  40bbbf:	pop    ebp
  40bbc0:	loope  0x40bbdd
  40bbc2:	rol    DWORD PTR [ecx-0x22],1
  40bbc5:	pop    ebx
  40bbc6:	xchg   esp,eax
  40bbc7:	stc    
  40bbc8:	mov    dh,0x4d
  40bbca:	mov    ch,0xcd
  40bbcc:	or     esi,DWORD PTR [edi+0x51990d5a]
  40bbd2:	cmp    BYTE PTR [ecx],bl
  40bbd4:	sti    
  40bbd5:	mov    dl,0x8a
  40bbd7:	sub    dh,ah
  40bbd9:	mov    ah,0x62
  40bbdb:	add    BYTE PTR [edx+0x5d],dh
  40bbde:	mov    ah,0xf
  40bbe0:	xor    eax,0xaee625a4
  40bbe5:	je     0x40bbee
  40bbe7:	sub    eax,0xf0d39f50
  40bbec:	das    
  40bbed:	push   cs
  40bbee:	and    BYTE PTR [eax-0x6b],bh
  40bbf1:	and    edi,ecx
  40bbf3:	sbb    BYTE PTR [edx-0xd8756af],0x5
  40bbfa:	push   cs
  40bbfb:	sub    eax,0x1a81345d
  40bc00:	inc    edx
  40bc01:	adc    DWORD PTR [esi+0x48bb3bae],eax
  40bc07:	(bad)
  40bc0a:	(bad)  
  40bc0c:	test   eax,0xa2402303
  40bc11:	ja     0x40bc45
  40bc13:	in     eax,0xdf
  40bc15:	sar    BYTE PTR [esi-0x68],0xb6
  40bc19:	neg    BYTE PTR [edi+0x42]
  40bc1c:	mov    dh,0xb8
  40bc1e:	inc    esi
  40bc1f:	(bad)  
  40bc20:	mov    ah,0x85
  40bc22:	in     eax,dx
  40bc23:	mov    ah,0xf9
  40bc25:	daa    
  40bc26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc27:	mov    ds:0xdf37761d,al
  40bc2c:	lock popa 
  40bc2e:	mov    edi,0x6527ebb2
  40bc33:	pop    edx
  40bc34:	in     al,dx
  40bc35:	je     0x40bbc4
  40bc37:	mov    ebx,0x39652833
  40bc3c:	xor    DWORD PTR [ebx+0x57],0xffffff9a
  40bc40:	lods   eax,DWORD PTR ds:[esi]
  40bc41:	std    
  40bc42:	cmp    eax,0xd4ff83a
  40bc47:	stc    
  40bc48:	cli    
  40bc49:	hlt    
  40bc4a:	mov    eax,0x194824c5
  40bc4f:	aad    0x6
  40bc51:	imul   eax,DWORD PTR [edi+0x5116dffe],0xffffffb6
  40bc58:	inc    ecx
  40bc59:	inc    edx
  40bc5a:	test   al,0x6e
  40bc5c:	mov    bh,0x35
  40bc5e:	stos   DWORD PTR es:[edi],eax
  40bc5f:	cmp    cl,ch
  40bc61:	jns    0x40bc8f
  40bc63:	ffree  st(1)
  40bc65:	adc    DWORD PTR [edi+0x63],ebx
  40bc68:	fs push ss
  40bc6a:	rol    DWORD PTR [eax-0x29833a10],cl
  40bc70:	nop
  40bc71:	aad    0xa7
  40bc73:	cwde   
  40bc74:	jne    0x40bc7b
  40bc76:	push   edi
  40bc77:	repz adc BYTE PTR [ebx+0x5b4ffafc],dh
  40bc7e:	stc    
  40bc7f:	cs jmp 0xe2db5431
  40bc85:	and    DWORD PTR [edi+edx*8+0x6b5b5b25],esp
  40bc8c:	adc    BYTE PTR [esi-0x67d577f3],dl
  40bc92:	lods   eax,DWORD PTR ss:[esi]
  40bc94:	inc    edx
  40bc95:	or     ch,BYTE PTR [eax]
  40bc97:	xlat   BYTE PTR ds:[ebx]
  40bc98:	repz inc esp
  40bc9a:	rcl    BYTE PTR ds:0x6de93d07,cl
  40bca0:	push   0xffffffb4
  40bca2:	sub    edi,DWORD PTR [ebx-0x7]
  40bca5:	push   eax
  40bca6:	push   0xffffffd5
  40bca8:	imul   ecx,DWORD PTR [edi-0x3c],0xffffffcf
  40bcac:	sub    ah,BYTE PTR [edi+0x2c]
  40bcaf:	ins    DWORD PTR es:[di],dx
  40bcb1:	(bad)  
  40bcb2:	mov    bh,0x9d
  40bcb4:	fld    TBYTE PTR [ecx-0x6a828c49]
  40bcba:	xor    esp,DWORD PTR [edi]
  40bcbc:	(bad)  
  40bcbd:	cdq    
  40bcbe:	out    dx,al
  40bcbf:	dec    esi
  40bcc0:	cmp    ebp,edi
  40bcc2:	aam    0xea
  40bcc4:	loopne 0x40bc8a
  40bcc6:	mov    ebx,0x448d6357
  40bccb:	xor    DWORD PTR ds:0xf9084c77,esi
  40bcd1:	repz and al,0x8a
  40bcd4:	dec    edi
  40bcd5:	mov    bh,0xbd
  40bcd7:	nop
  40bcd8:	add    al,0x5f
  40bcda:	or     dh,BYTE PTR [edi-0x10]
  40bcdd:	stos   BYTE PTR es:[edi],al
  40bcde:	xlat   BYTE PTR ds:[ebx]
  40bcdf:	in     eax,0xd1
  40bce1:	xor    al,0xb0
  40bce3:	xor    BYTE PTR [ecx],dl
  40bce5:	cdq    
  40bce6:	jne    0x40bcbd
  40bce8:	xchg   esi,eax
  40bce9:	(bad)  
  40bceb:	inc    ebp
  40bcec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bced:	xor    bh,BYTE PTR [eax+0x6fc72396]
  40bcf3:	ja     0x40bd39
  40bcf5:	outs   dx,DWORD PTR ds:[esi]
  40bcf6:	mov    ebx,0x43d97507
  40bcfb:	neg    ebx
  40bcfd:	and    ah,ah
  40bcff:	pop    ss
  40bd00:	inc    ebx
  40bd01:	push   cs
  40bd02:	cmp    dh,BYTE PTR [eax+eiz*4]
  40bd05:	shl    DWORD PTR [eax+0x7e924cae],1
  40bd0b:	jns    0x40bce7
  40bd0d:	xor    al,BYTE PTR [ebp+0x18efcb2b]
  40bd13:	jp     0x40bc9e
  40bd15:	pusha  
  40bd16:	and    eax,0x82d1e10a
  40bd1b:	and    al,0x76
  40bd1d:	out    0x6e,eax
  40bd1f:	sar    DWORD PTR [edi],cl
  40bd21:	mov    esp,0xe7172d8c
  40bd26:	jl     0x40bd15
  40bd28:	sub    edi,DWORD PTR [edx+0x47e3e01a]
  40bd2e:	lahf   
  40bd2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd30:	lods   al,BYTE PTR ds:[esi]
  40bd31:	sub    eax,0x95139417
  40bd36:	(bad)  
  40bd37:	mov    ecx,0xfe26f326
  40bd3c:	daa    
  40bd3d:	sbb    BYTE PTR [esi+ecx*8-0x751f7cab],bl
  40bd44:	loop   0x40bd2a
  40bd46:	pop    ecx
  40bd47:	retf   0x1dce
  40bd4a:	retf   0xc8b7
  40bd4d:	mov    ch,0x4
  40bd4f:	scas   al,BYTE PTR es:[edi]
  40bd50:	mov    al,ds:0x226025d3
  40bd55:	xchg   ebx,eax
  40bd56:	push   edx
  40bd57:	xchg   edi,eax
  40bd58:	xchg   DWORD PTR [ecx+edx*8-0x37065d84],eax
  40bd5f:	test   al,0x16
  40bd61:	push   cs
  40bd62:	lds    esp,FWORD PTR [ebx]
  40bd64:	ss jp  0x40bdd5
  40bd67:	imul   esp,DWORD PTR [edx-0x19],0xffffffe0
  40bd6b:	iret   
  40bd6c:	sysexit 
  40bd6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd6f:	mov    ds:0x72d8750f,al
  40bd74:	xchg   DWORD PTR ds:0xd0243526,edx
  40bd7a:	mov    ds:0xe9f2e191,eax
  40bd7f:	lock sub cl,0x38
  40bd83:	addr16 mov al,0x61
  40bd86:	mov    esp,0xec88ac6f
  40bd8b:	lods   al,BYTE PTR ds:[esi]
  40bd8c:	inc    esp
  40bd8d:	shl    ecx,0x66
  40bd90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd91:	gs (bad) 
  40bd93:	mov    al,0xa2
  40bd95:	aad    0xd3
  40bd97:	fistp  DWORD PTR [eax]
  40bd99:	fnstcw WORD PTR ds:0x5bdf3208
  40bd9f:	sub    ch,0xf4
  40bda2:	inc    edi
  40bda3:	test   BYTE PTR [edx-0x32],0x80
  40bda7:	lods   al,BYTE PTR ds:[esi]
  40bda8:	mov    dh,0xe0
  40bdaa:	cmp    al,BYTE PTR [edi]
  40bdac:	jae    0x40bde8
  40bdae:	lock or cl,BYTE PTR [esi-0x6b2c0921]
  40bdb5:	or     cl,dh
  40bdb7:	or     DWORD PTR [edx-0x1c],edi
  40bdba:	cli    
  40bdbb:	dec    ebx
  40bdbc:	js     0x40bd61
  40bdbe:	fiadd  DWORD PTR ds:0x202072da
  40bdc4:	fcom   QWORD PTR [esi+ebp*4]
  40bdc7:	jl     0x40bd4f
  40bdc9:	push   esi
  40bdca:	sub    eax,0xa042a312
  40bdcf:	fwait
  40bdd0:	cs push edx
  40bdd2:	ror    DWORD PTR [ecx],cl
  40bdd4:	sub    DWORD PTR [edx],ebx
  40bdd6:	xor    DWORD PTR [edi],0x5bf7ad3e
  40bddc:	rol    BYTE PTR [eax],0xae
  40bddf:	sbb    eax,0x1b0c4e98
  40bde4:	in     al,dx
  40bde5:	and    DWORD PTR [ecx+eax*1],esi
  40bde8:	cmc    
  40bde9:	ins    BYTE PTR es:[edi],dx
  40bdea:	cmp    al,0x8e
  40bdec:	jbe    0x40bd79
  40bdee:	adc    DWORD PTR [edi+esi*4+0x3356cd8a],0xffffff8d
  40bdf6:	and    eax,0xb9b91180
  40bdfb:	stos   BYTE PTR es:[edi],al
  40bdfc:	in     al,dx
  40bdfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdfe:	out    dx,eax
  40bdff:	xchg   edx,eax
  40be00:	test   eax,0xbbdb213a
  40be05:	cmp    ebp,edi
  40be07:	fwait
  40be08:	leave  
  40be09:	cdq    
  40be0a:	dec    ecx
  40be0b:	mov    bh,0xd
  40be0d:	xor    DWORD PTR [ebx+ecx*2],edx
  40be10:	xchg   BYTE PTR [edi],cl
  40be12:	inc    esp
  40be13:	je     0x40be86
  40be15:	ret    0x7148
  40be18:	mov    eax,0x67d7e1ca
  40be1d:	xor    edi,DWORD PTR [eax]
  40be1f:	inc    eax
  40be20:	or     dl,BYTE PTR [edi+0x6cb62dc6]
  40be26:	cwde   
  40be27:	stos   DWORD PTR es:[edi],eax
  40be28:	ret    
  40be29:	add    al,BYTE PTR [ebp+0x48ae839d]
  40be2f:	jo     0x40be78
  40be31:	jnp    0x40be1c
  40be33:	mov    dl,0x39
  40be35:	cld    
  40be36:	cli    
  40be37:	cwde   
  40be38:	std    
  40be39:	xchg   ebp,eax
  40be3a:	leave  
  40be3b:	dec    ebp
  40be3c:	inc    edi
  40be3e:	shl    ebx,0x17
  40be41:	mov    edx,0x2250e736
  40be46:	out    0x0,al
  40be48:	das    
  40be49:	in     al,0xb1
  40be4b:	sbb    BYTE PTR [edi],ah
  40be4d:	add    bl,BYTE PTR [eax-0x23]
  40be50:	pop    edx
  40be51:	imul   esp,edi,0x9f36d68d
  40be57:	dec    ebp
  40be58:	mov    esi,ebx
  40be5a:	mov    esi,0x9a16a823
  40be5f:	inc    ebx
  40be60:	adc    esp,DWORD PTR [esi]
  40be62:	xlat   BYTE PTR ds:[ebx]
  40be63:	stc    
  40be64:	pop    ss
  40be65:	aaa    
  40be66:	sti    
  40be67:	leave  
  40be68:	inc    ebp
  40be69:	mov    eax,ds:0x1b7ec94a
  40be6e:	cdq    
  40be6f:	sbb    ebp,esp
  40be71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be72:	mov    eax,0xcc80c7e5
  40be77:	repnz fild WORD PTR [esi]
  40be7a:	sub    DWORD PTR [edi+0xd],esp
  40be7d:	shl    DWORD PTR [ebp+0x75e796c0],cl
  40be83:	outs   dx,BYTE PTR ds:[esi]
  40be84:	scas   al,BYTE PTR es:[edi]
  40be85:	xor    bh,BYTE PTR [edi+edx*4+0x3c]
  40be89:	pop    ecx
  40be8b:	cmp    bl,BYTE PTR [ebx+edi*1-0x5e666114]
  40be92:	xchg   DWORD PTR [ecx],edx
  40be94:	push   0xffffffb1
  40be96:	inc    eax
  40be97:	or     edx,ebx
  40be99:	mov    dh,0xc8
  40be9b:	or     al,0x54
  40be9d:	adc    ebp,DWORD PTR [eax+0x2e]
  40bea0:	push   es
  40bea1:	repz mov ecx,0x7e9057ce
  40bea7:	out    0x3c,eax
  40bea9:	add    bh,BYTE PTR ds:0xedd92fe
  40beaf:	jecxz  0x40bec2
  40beb1:	inc    ecx
  40beb2:	cmp    DWORD PTR [edx+esi*4-0x59],eax
  40beb6:	pop    ebp
  40beb7:	or     al,bh
  40beb9:	sbb    esi,DWORD PTR [edi+0x6c]
  40bebc:	rol    cl,cl
  40bebe:	aam    0x34
  40bec0:	mov    esi,DWORD PTR [ecx-0xe25c5]
  40bec6:	sti    
  40bec7:	mov    ecx,0xdd31f922
  40becc:	cld    
  40becd:	jbe    0x40bf26
  40becf:	scas   al,BYTE PTR es:[edi]
  40bed0:	data16 fistp DWORD PTR [ecx]
  40bed3:	mov    esp,0x91079704
  40bed8:	and    BYTE PTR [ebx-0x5c],dl
  40bedb:	xchg   edi,eax
  40bedc:	les    edx,FWORD PTR [ebx]
  40bede:	adc    ebp,DWORD PTR [ecx-0x6dfbe37b]
  40bee4:	fisttp QWORD PTR [edx+0x22]
  40bee7:	mov    ah,0x6c
  40bee9:	icebp  
  40beea:	mov    al,0xcd
  40beec:	adc    ebp,DWORD PTR [edi-0x3d3cbc0d]
  40bef2:	mov    edi,0x69d12ff6
  40bef7:	adc    eax,0x1f023b4d
  40befc:	stos   DWORD PTR es:[edi],eax
  40befd:	inc    edi
  40befe:	push   eax
  40beff:	fsub   DWORD PTR [edx+0x6d]
  40bf02:	mov    dh,0xa8
  40bf04:	xchg   edi,eax
  40bf05:	mov    dl,0xbc
  40bf07:	rol    DWORD PTR ds:0x5c75beaf,cl
  40bf0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf0e:	or     al,BYTE PTR es:[bx+di-0x2b]
  40bf13:	mov    dl,0x4f
  40bf15:	mov    dl,0x70
  40bf17:	popa   
  40bf18:	push   ebp
  40bf19:	mov    cl,0x42
  40bf1b:	icebp  
  40bf1c:	jne    0x40bea0
  40bf1e:	adc    ah,ch
  40bf20:	stos   DWORD PTR es:[edi],eax
  40bf21:	xchg   esi,eax
  40bf22:	dec    ebp
  40bf23:	iret   
  40bf24:	jae    0x40bf24
  40bf26:	inc    ebp
  40bf27:	mov    ebp,0xf30b27c2
  40bf2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf2d:	xor    al,0xdb
  40bf2f:	out    dx,al
  40bf30:	out    dx,eax
  40bf31:	and    eax,0xb77e2596
  40bf36:	adc    bl,ah
  40bf38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf39:	retf   
  40bf3a:	imul   ebx,DWORD PTR [ecx-0x68],0xffffffed
  40bf3e:	jns    0xb6d7cd80
  40bf44:	aam    0x9
  40bf46:	mov    eax,0xdfbb02cf
  40bf4b:	daa    
  40bf4c:	or     al,0x89
  40bf4e:	or     BYTE PTR [eax],bl
  40bf50:	mov    ah,0x63
  40bf52:	cmp    esp,DWORD PTR [edx+0x43]
  40bf55:	popf   
  40bf56:	fld    QWORD PTR ds:0xb8cf5561
  40bf5c:	add    eax,0x8dd5ca8e
  40bf61:	sub    eax,0x586ab9e5
  40bf66:	adc    DWORD PTR [edx],ebx
  40bf68:	sahf   
  40bf69:	ins    DWORD PTR es:[edi],dx
  40bf6a:	xchg   edi,eax
  40bf6b:	pop    ss
  40bf6c:	scas   eax,DWORD PTR es:[edi]
  40bf6d:	aaa    
  40bf6e:	xchg   ebx,eax
  40bf6f:	(bad)  
  40bf70:	push   esp
  40bf71:	mov    BYTE PTR [ecx+eiz*2-0x3ca54a3e],0x90
  40bf79:	fcomp  QWORD PTR [edi-0x209e452c]
  40bf7f:	scas   al,BYTE PTR es:[edi]
  40bf80:	xchg   BYTE PTR [esi+eiz*4-0x459a652e],bl
  40bf87:	out    0xed,al
  40bf89:	mov    dh,0x5e
  40bf8b:	push   0x29
  40bf8d:	adc    edi,DWORD PTR [ebx-0x41be125e]
  40bf93:	inc    ebp
  40bf94:	cmc    
  40bf95:	add    ebx,DWORD PTR [eax+0x6d]
  40bf98:	outs   dx,BYTE PTR ds:[esi]
  40bf99:	lods   eax,DWORD PTR ds:[esi]
  40bf9a:	mov    ebx,0xd636b92
  40bf9f:	retf   
  40bfa0:	loope  0x40bf46
  40bfa2:	lea    edi,[ebx+0x5c]
  40bfa5:	xchg   edx,eax
  40bfa6:	test   BYTE PTR [edx],ah
  40bfa8:	jg     0x40bfdd
  40bfaa:	cmp    ebx,DWORD PTR [edi+edi*1]
  40bfad:	sbb    edx,DWORD PTR [ecx+0x1509aaa5]
  40bfb3:	(bad)  
  40bfb4:	jo     0x40bf86
  40bfb6:	fild   DWORD PTR [esp+eax*4-0x5a]
  40bfba:	jb     0x40bf53
  40bfbc:	add    al,BYTE PTR [ecx-0xa]
  40bfbf:	sub    al,0xd6
  40bfc2:	add    ah,bl
  40bfc4:	mov    edi,0xca32d72a
  40bfc9:	fdiv   st(4),st
  40bfcb:	cmp    ch,BYTE PTR [ebp+0xa73a742]
  40bfd1:	jp     0x40bf7f
  40bfd3:	or     edx,DWORD PTR [ebp-0x6fa4d681]
  40bfd9:	in     al,0xf9
  40bfdb:	inc    ecx
  40bfdc:	mov    dl,0xf0
  40bfde:	inc    ebp
  40bfdf:	pop    ss
  40bfe0:	jmp    0x40bfd1
  40bfe2:	outs   dx,BYTE PTR ds:[esi]
  40bfe3:	add    ch,BYTE PTR [ebp+0x7ba1af0]
  40bfe9:	dec    esi
  40bfea:	cwde   
  40bfeb:	cmp    BYTE PTR [ebx],0xca
  40bfee:	adc    DWORD PTR [esi],eax
  40bff0:	push   esi
  40bff1:	jnp    0x40c067
  40bff3:	mov    esi,0x322d845e
  40bff8:	arpl   WORD PTR [edx],ax
  40bffa:	xchg   edx,eax
  40bffb:	dec    esi
  40bffc:	in     al,0xb9
  40bffe:	loopne 0x40c073
  40c000:	mov    ebp,0x6d7956f0
  40c005:	mov    ecx,0x79a64ab0
  40c00a:	mov    ss,WORD PTR [eax-0x41]
  40c00d:	ds xchg edx,eax
  40c00f:	pop    ebp
  40c010:	stc    
  40c011:	pop    ebx
  40c012:	clc    
  40c013:	xchg   ebx,eax
  40c014:	xlat   BYTE PTR ds:[ebx]
  40c015:	sbb    eax,DWORD PTR ds:0x9c7a8953
  40c01b:	mov    edi,0xabf54c32
  40c020:	mov    eax,ds:0xc7ecd1df
  40c025:	rcr    DWORD PTR [eax+0x4f],0xbf
  40c029:	sub    dl,cl
  40c02b:	xor    eax,0x32074687
  40c030:	imul   ebx,DWORD PTR [edi-0x1916b94a],0x6f02a2f8
  40c03a:	cmp    ebp,DWORD PTR [edi+0x6a780be]
  40c040:	mov    dh,0x7b
  40c042:	cwde   
  40c043:	xor    eax,0x1cf033a3
  40c048:	or     esp,DWORD PTR [ecx-0x52edd8e6]
  40c04e:	out    0x31,eax
  40c050:	and    edi,DWORD PTR [esp+eax*8-0x2a1c28fe]
  40c057:	ds push 0x5a
  40c05a:	sub    DWORD PTR [ebx+ebx*8-0x78b2c103],esi
  40c061:	mov    ch,0xff
  40c063:	add    dl,bl
  40c065:	xor    esp,DWORD PTR [edi+0x23]
  40c068:	(bad)  
  40c069:	adc    eax,ebp
  40c06b:	jo     0xe6af467d
  40c071:	cld    
  40c072:	dec    edi
  40c073:	imul   BYTE PTR [esi]
  40c075:	mov    dh,0xd
  40c077:	in     al,0xe5
  40c079:	xchg   DWORD PTR [ebp+0x1b],ecx
  40c07c:	jbe    0x40c0b1
  40c07e:	cmp    eax,0xcb0a1fd4
  40c083:	popa   
  40c084:	mov    ch,BYTE PTR [edi-0x2c]
  40c087:	mov    eax,0xf5f9afdd
  40c08c:	add    BYTE PTR [edx+0x52aa906c],bh
  40c092:	push   cs
  40c093:	inc    esp
  40c094:	sub    al,0x91
  40c096:	adc    al,0xa3
  40c098:	push   cs
  40c099:	inc    ebx
  40c09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c09b:	dec    ebp
  40c09c:	pop    edx
  40c09d:	ss std 
  40c09f:	lock repz into 
  40c0a2:	outs   dx,BYTE PTR gs:[esi]
  40c0a4:	mov    dh,0x7e
  40c0a6:	cld    
  40c0a7:	mov    dl,0xba
  40c0a9:	(bad)  
  40c0aa:	jp     0x40c05e
  40c0ac:	push   ebx
  40c0ad:	ss dec esp
  40c0af:	rol    BYTE PTR [ecx],cl
  40c0b1:	inc    ebp
  40c0b2:	mov    eax,ds:0x2a128df4
  40c0b7:	jne    0x40c10c
  40c0b9:	add    eax,0x1f90d368
  40c0be:	cwde   
  40c0bf:	mov    ch,0x57
  40c0c1:	mov    edi,0x72daf95
  40c0c6:	and    cl,cl
  40c0c8:	retf   
  40c0c9:	cmc    
  40c0ca:	jmp    0x4c9a:0x1f00654e
  40c0d1:	pop    esi
  40c0d2:	xchg   ebx,eax
  40c0d3:	cwde   
  40c0d4:	mov    WORD PTR [esi+0x65e31c2d],?
  40c0da:	pop    eax
  40c0db:	cmp    eax,0xfe57e5fc
  40c0e0:	mov    WORD PTR fs:[edx-0x72a1e334],ss
  40c0e7:	inc    eax
  40c0e8:	stos   BYTE PTR es:[edi],al
  40c0e9:	call   0x8c72:0x36e1fba8
  40c0f0:	clc    
  40c0f1:	dec    eax
  40c0f3:	jno    0x40c168
  40c0f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0f6:	or     DWORD PTR [edx],esi
  40c0f8:	(bad)  
  40c0f9:	cmp    dh,BYTE PTR [edi]
  40c0fb:	cld    
  40c0fc:	jae    0x40c127
  40c0fe:	inc    ebp
  40c0ff:	in     al,dx
  40c100:	inc    edi
  40c101:	test   al,0x56
  40c103:	mov    bl,0x63
  40c105:	lahf   
  40c106:	lahf   
  40c107:	lock mov al,0x51
  40c10a:	outs   dx,DWORD PTR ds:[esi]
  40c10b:	pop    ecx
  40c10c:	jg     0x40c16f
  40c10e:	xchg   edx,eax
  40c10f:	jo     0x40c168
  40c111:	lahf   
  40c112:	add    eax,0xf40f5921
  40c117:	push   cs
  40c118:	mov    ah,BYTE PTR [ecx+eax*1+0x60]
  40c11c:	adc    BYTE PTR ds:0xbaaf29f2,ch
  40c122:	pop    es
  40c123:	xor    edi,DWORD PTR [ebx-0x23861bf5]
  40c129:	xor    eax,0xe3801282
  40c12e:	and    ecx,esp
  40c130:	or     al,BYTE PTR ss:[edx+0x1a]
  40c134:	mov    ds:0xdd03daa4,eax
  40c139:	retf   
  40c13a:	in     al,dx
  40c13b:	mov    ds:0x1d6ccec3,eax
  40c140:	mov    al,ds:0x9e909dd6
  40c145:	popa   
  40c146:	mov    esi,DWORD PTR [esi-0x12]
  40c149:	loopne 0x40c10e
  40c14b:	or     DWORD PTR [esi+0x4c9ed74e],edi
  40c151:	jne    0x40c1af
  40c153:	clc    
  40c154:	mov    ds:0x3c4d8abc,al
  40c159:	arpl   si,sp
  40c15b:	adc    cl,ah
  40c15d:	mov    bh,0xd6
  40c15f:	mov    ecx,0x3b1971b1
  40c164:	outs   dx,DWORD PTR ds:[esi]
  40c165:	jne    0x40c1ad
  40c167:	lds    eax,FWORD PTR [ebx+0x23]
  40c16a:	push   esi
  40c16b:	dec    esp
  40c16c:	int3   
  40c16d:	and    esi,DWORD PTR [edx+0x47b96db7]
  40c173:	mov    eax,0xa5d7a391
  40c178:	dec    ebx
  40c179:	dec    ebx
  40c17a:	inc    edi
  40c17b:	push   eax
  40c17c:	mov    ecx,0x84a4aaea
  40c181:	scas   al,BYTE PTR es:[edi]
  40c182:	test   eax,0x728f66d6
  40c187:	xchg   ebp,eax
  40c188:	xor    al,0xd8
  40c18a:	shl    BYTE PTR [ebx-0xda2513],cl
  40c190:	shl    bl,1
  40c192:	xchg   edi,eax
  40c193:	mov    bh,0x67
  40c195:	loop   0x40c178
  40c197:	xlat   BYTE PTR ds:[ebx]
  40c198:	xchg   ebx,eax
  40c199:	push   ss
  40c19a:	xchg   esi,eax
  40c19b:	in     eax,0x92
  40c19d:	inc    ebp
  40c19e:	xor    ecx,DWORD PTR [edx]
  40c1a0:	out    0xa3,eax
  40c1a2:	stos   BYTE PTR es:[edi],al
  40c1a3:	jecxz  0x40c1a3
  40c1a5:	mov    ebx,0x42c6e0d7
  40c1aa:	inc    edi
  40c1ab:	out    dx,al
  40c1ac:	(bad)  
  40c1ad:	push   ebp
  40c1ae:	call   0x593f0a9f
  40c1b3:	in     eax,0x80
  40c1b5:	push   edx
  40c1b6:	inc    ebx
  40c1b7:	(bad)  [esi-0x56]
  40c1ba:	or     ebp,ebp
  40c1bc:	aaa    
  40c1bd:	inc    ecx
  40c1be:	fnsave [ecx+0x34040892]
  40c1c4:	sub    ah,BYTE PTR [ecx-0x7d]
  40c1c7:	lock ror esp,cl
  40c1ca:	mov    al,ds:0xc0c7a1c3
  40c1cf:	ins    DWORD PTR es:[edi],dx
  40c1d0:	and    BYTE PTR [ebx+0x69],0xaa
  40c1d4:	je     0x40c24e
  40c1d6:	aas    
  40c1d7:	sbb    edx,esi
  40c1d9:	iret   
  40c1da:	jbe    0x40c1c9
  40c1dc:	mov    eax,ds:0x691bb493
  40c1e1:	cwde   
  40c1e2:	dec    edx
  40c1e3:	call   0xa86a:0x3a982400
  40c1ea:	inc    eax
  40c1eb:	dec    edx
  40c1ec:	fdivr  st(5),st
  40c1ee:	mov    esp,0xfb91ede5
  40c1f3:	out    dx,al
  40c1f4:	sub    cl,cl
  40c1f6:	xor    DWORD PTR [eax+0x38c41f8b],ecx
  40c1fc:	movntps XMMWORD PTR [eax+eax*1+0x74],xmm6
  40c201:	ins    DWORD PTR es:[edi],dx
  40c202:	adc    bh,BYTE PTR [eax]
  40c204:	xchg   esi,eax
  40c205:	sahf   
  40c206:	shl    DWORD PTR [eax+0x2f652c91],0x51
  40c20d:	add    eax,0xa230723c
  40c212:	pop    edx
  40c213:	inc    edi
  40c214:	xor    eax,0x13812e76
  40c219:	pushf  
  40c21a:	in     eax,0xb5
  40c21c:	inc    edx
  40c21d:	out    dx,al
  40c21e:	xchg   edx,eax
  40c21f:	push   ebp
  40c220:	sbb    al,0x6c
  40c222:	fcomp  QWORD PTR [edi]
  40c224:	sbb    DWORD PTR [esi-0x7],esi
  40c227:	aam    0xc5
  40c229:	dec    esp
  40c22a:	mul    BYTE PTR [edi-0x2cdbaba6]
  40c230:	pop    ecx
  40c231:	sub    BYTE PTR [ebx+0x5107bcea],ch
  40c237:	mov    edx,0x78fa5aa6
  40c23c:	adc    DWORD PTR [edi+0x2b],eax
  40c23f:	mov    edi,0x63b13166
  40c244:	sub    eax,0xd5f16d0e
  40c249:	xchg   ebp,eax
  40c24a:	leave  
  40c24b:	out    dx,al
  40c24c:	stc    
  40c24d:	repnz ffree st(7)
  40c250:	mov    dl,0xef
  40c252:	xchg   edi,eax
  40c253:	mov    edi,0xeaa00ebb
  40c258:	(bad)  
  40c259:	(bad)  
  40c25a:	lock out 0x87,eax
  40c25d:	out    0x33,al
  40c25f:	and    esp,0x985fc4a5
  40c265:	mov    esp,0x22b22603
  40c26a:	xchg   DWORD PTR [esi-0x2d],esp
  40c26d:	pusha  
  40c26e:	add    BYTE PTR [ecx-0x45cc2203],0xe6
  40c275:	sub    DWORD PTR [edi],edx
  40c277:	mov    al,ds:0xbe468bbb
  40c27c:	ins    DWORD PTR es:[edi],dx
  40c27d:	loop   0x40c252
  40c27f:	loope  0x40c208
  40c281:	add    eax,0xb5b595d2
  40c286:	push   0xffffffa9
  40c288:	mov    ebx,0x210d9886
  40c28d:	stos   DWORD PTR es:[edi],eax
  40c28e:	addr16 data16 mov ah,ch
  40c292:	jmp    0x3e0c:0x6c1d3736
  40c299:	popa   
  40c29a:	gs lock clc 
  40c29d:	mov    bh,0xfa
  40c29f:	sub    eax,0x672f07ed
  40c2a4:	adc    DWORD PTR [edi+0x4fe64376],eax
  40c2aa:	jnp    0x40c329
  40c2ac:	ja     0x40c277
  40c2ae:	pop    DWORD PTR [edx+ebx*4]
  40c2b1:	fld    DWORD PTR [ecx+0x70]
  40c2b4:	outs   dx,DWORD PTR ds:[esi]
  40c2b5:	scas   eax,DWORD PTR es:[edi]
  40c2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2b7:	fwait
  40c2b8:	outs   dx,BYTE PTR ds:[esi]
  40c2b9:	adc    al,0x1e
  40c2bb:	dec    ebp
  40c2bc:	sub    DWORD PTR [edi],ebp
  40c2be:	cwde   
  40c2bf:	loop   0x40c317
  40c2c1:	mov    DWORD PTR [eax+0x7f],edx
  40c2c4:	ja     0x40c2b1
  40c2c6:	sbb    DWORD PTR [edx],ecx
  40c2c8:	sbb    eax,0xbad61106
  40c2cd:	push   es
  40c2ce:	(bad)  
  40c2cf:	stc    
  40c2d0:	sti    
  40c2d1:	cld    
  40c2d2:	shl    cl,0xea
  40c2d5:	pop    edx
  40c2d6:	inc    edi
  40c2d7:	sbb    eax,0xd692f18d
  40c2dc:	jmp    0x40c282
  40c2de:	nop
  40c2df:	push   edi
  40c2e0:	cmp    al,0x77
  40c2e2:	fwait
  40c2e3:	pop    ecx
  40c2e4:	add    al,0x55
  40c2e6:	pop    ss
  40c2e7:	js     0x40c29d
  40c2e9:	sbb    dl,BYTE PTR [esp+edi*1+0x2e351ac9]
  40c2f0:	les    eax,FWORD PTR [esi-0x4]
  40c2f3:	mov    bl,0x55
  40c2f5:	sub    ch,cl
  40c2f7:	mov    bh,0x8a
  40c2f9:	push   esi
  40c2fa:	or     bl,BYTE PTR [esi+ecx*4]
  40c2fd:	out    0x8e,eax
  40c2ff:	mov    ss,WORD PTR [esi-0x67e6490f]
  40c305:	sub    DWORD PTR [ecx-0x75],0x70
  40c309:	rcl    DWORD PTR [ebp-0x4],cl
  40c30c:	ds mov ebx,0x2a7ee119
  40c312:	sub    al,0xa0
  40c315:	mov    ch,0x8a
  40c317:	dec    esi
  40c318:	sub    al,0x18
  40c31a:	pop    ebx
  40c31b:	lahf   
  40c31c:	(bad)
  40c31f:	mov    edi,0xe1f97de7
  40c324:	rcr    al,0x59
  40c327:	enter  0xd85b,0xc8
  40c32b:	inc    ebx
  40c32c:	cmp    BYTE PTR [esi+0x20],ah
  40c32f:	aad    0x1c
  40c331:	jne    0x40c2c5
  40c333:	ret    0x5320
  40c336:	(bad)  
  40c337:	dec    edi
  40c338:	lea    ebx,[edx+0x56]
  40c33b:	fnsave [ecx+0x37]
  40c33e:	mov    bh,0x20
  40c340:	sbb    esi,ebx
  40c342:	mov    edx,0xe1ed9b9a
  40c347:	jle    0x40c380
  40c349:	cmp    dl,0x5e
  40c34c:	dec    edi
  40c34d:	pop    esi
  40c34e:	test   eax,0xd2c43de3
  40c353:	cmp    edi,edx
  40c355:	xor    eax,DWORD PTR [esp]
  40c358:	inc    eax
  40c359:	les    ecx,FWORD PTR [eax]
  40c35b:	(bad)  
  40c35c:	hlt    
  40c35d:	mov    es,WORD PTR [edx+edx*2+0x15fa8a1a]
  40c364:	icebp  
  40c365:	jb     0x40c2f7
  40c367:	std    
  40c368:	retf   0xa316
  40c36b:	pushf  
  40c36c:	jp     0x40c330
  40c36e:	xchg   ebp,eax
  40c36f:	sbb    dl,bh
  40c371:	imul   edx,DWORD PTR [ebx-0x413abc30],0xee47a3c9
  40c37b:	retf   0x78ec
  40c37e:	shr    BYTE PTR [ebp+0x6159d9e4],cl
  40c384:	xchg   edx,eax
  40c385:	into   
  40c386:	adc    eax,0x9d801bfc
  40c38b:	xor    cl,BYTE PTR [bp-0x6088]
  40c390:	mov    dl,0x72
  40c392:	cli    
  40c393:	xor    bh,bl
  40c395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c396:	out    0x58,eax
  40c398:	jb     0x40c351
  40c39a:	fs int3 
  40c39c:	jp     0x40c3cc
  40c39e:	inc    ecx
  40c39f:	and    ecx,edi
  40c3a1:	sbb    edi,DWORD PTR [edi+0x20]
  40c3a4:	sbb    BYTE PTR [ecx-0x52],dh
  40c3a7:	push   ecx
  40c3a8:	out    dx,al
  40c3a9:	fs pop edi
  40c3ab:	jmp    0x57f8:0xca206102
  40c3b2:	dec    ebx
  40c3b3:	mov    BYTE PTR [esi-0x24a7210d],bl
  40c3b9:	dec    ebp
  40c3ba:	popf   
  40c3bb:	push   ss
  40c3bc:	inc    esp
  40c3bd:	pop    esi
  40c3be:	retf   0x984f
  40c3c1:	cmp    eax,0xc1d423ae
  40c3c6:	xchg   edx,eax
  40c3c7:	mov    cl,0xdf
  40c3c9:	lods   al,BYTE PTR ds:[esi]
  40c3ca:	mov    al,0x14
  40c3cc:	inc    esp
  40c3cd:	sbb    BYTE PTR [ecx-0x37ec8036],ah
  40c3d3:	sub    DWORD PTR [eax+edx*4+0x77],edx
  40c3d7:	sbb    edi,ebp
  40c3d9:	js     0x40c444
  40c3db:	push   cs
  40c3dc:	fisubr DWORD PTR [edi]
  40c3de:	pop    ebp
  40c3df:	and    DWORD PTR [edx+edx*1+0x78],ecx
  40c3e3:	mov    al,0xe6
  40c3e5:	jl     0x40c3e1
  40c3e7:	mov    BYTE PTR [edi+0x41508c91],bl
  40c3ed:	cmp    al,0xd5
  40c3ef:	popf   
  40c3f0:	mov    ebp,0x7a2798b1
  40c3f5:	jle    0x40c383
  40c3f7:	inc    edx
  40c3f8:	xchg   ebx,eax
  40c3f9:	push   0x1c
  40c3fb:	mov    DWORD PTR [ecx],ebx
  40c3fd:	stc    
  40c3fe:	call   FWORD PTR [edx+0x1f47c6a7]
  40c404:	fldcw  WORD PTR [edx]
  40c406:	push   ss
  40c407:	inc    edi
  40c408:	jmp    0x93d:0xf14c64c8
  40c40f:	jns    0x40c3a5
  40c411:	dec    ecx
  40c412:	push   ebx
  40c413:	xor    cl,ch
  40c415:	shr    DWORD PTR [edx-0x76],0x78
  40c419:	add    ebp,DWORD PTR [ebx]
  40c41b:	div    ebx
  40c41d:	stos   BYTE PTR es:[edi],al
  40c41e:	add    BYTE PTR [ecx+0x6335068a],bl
  40c424:	or     eax,0xd1be5742
  40c429:	add    ch,BYTE PTR [edx+ebx*8+0x3]
  40c42d:	into   
  40c42e:	fsubr  QWORD PTR gs:[eax-0x7fd02936]
  40c435:	dec    ebx
  40c436:	jge    0x40c48b
  40c438:	rcl    DWORD PTR [ecx-0x6504c18d],1
  40c43e:	dec    edi
  40c43f:	jns    0x40c3ce
  40c441:	enter  0x3702,0x75
  40c445:	mov    esp,0xa37a3b3c
  40c44a:	cdq    
  40c44b:	push   eax
  40c44c:	sub    cl,al
  40c44e:	inc    esi
  40c44f:	ret    
  40c450:	stos   DWORD PTR es:[edi],eax
  40c451:	xor    al,0xe8
  40c453:	jns    0x40c3f3
  40c455:	call   0x307c526d
  40c45a:	push   esp
  40c45b:	push   cs
  40c45c:	adc    ebp,ecx
  40c45e:	inc    ecx
  40c45f:	scas   eax,DWORD PTR es:[edi]
  40c460:	jg     0x40c3f1
  40c462:	les    edx,FWORD PTR [edx+0x3384e656]
  40c468:	pop    ecx
  40c469:	mov    al,0xb3
  40c46b:	sbb    al,0xc4
  40c46d:	sti    
  40c46e:	rcl    bl,0x8a
  40c471:	imul   edx,DWORD PTR [eax-0x39],0x6869a17e
  40c478:	xchg   ebx,eax
  40c479:	jle    0x40c481
  40c47b:	xlat   BYTE PTR ds:[ebx]
  40c47c:	cdq    
  40c47d:	cmp    DWORD PTR [eax],0xffffff82
  40c480:	in     al,0xec
  40c482:	sahf   
  40c483:	add    ebp,DWORD PTR [esi-0x7433325c]
  40c489:	push   0xffffff94
  40c48b:	mov    bl,0xe0
  40c48d:	jb     0x40c504
  40c48f:	mov    eax,ds:0x893f915c
  40c494:	(bad)  [ebx-0x64]
  40c497:	test   eax,0xcf649f7d
  40c49c:	aaa    
  40c49d:	ret    0xd8
  40c4a0:	mov    ds:0x443ff1c4,al
  40c4a5:	pop    ds
  40c4a6:	dec    ebx
  40c4a7:	mov    edx,0x7cfb9cdf
  40c4ac:	dec    ebp
  40c4ad:	rcr    esi,1
  40c4af:	(bad)  
  40c4b0:	out    0xa1,al
  40c4b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b3:	test   eax,0xea0039da
  40c4b8:	ret    0x886a
  40c4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4bc:	fsub   DWORD PTR [eax]
  40c4be:	in     eax,dx
  40c4bf:	jns    0x40c526
  40c4c1:	mov    ah,0xe
  40c4c3:	push   esp
  40c4c4:	inc    ecx
  40c4c5:	push   ebx
  40c4c6:	dec    ebx
  40c4c7:	inc    ebx
  40c4c8:	pop    edi
  40c4c9:	dec    esi
  40c4ca:	pxor   mm5,QWORD PTR [ecx]
  40c4cd:	pop    ebp
  40c4ce:	fs inc eax
  40c4d0:	mov    ch,0x9b
  40c4d2:	retf   
  40c4d3:	xchg   ebx,eax
  40c4d4:	lds    esp,FWORD PTR ds:[esi+ebp*4]
  40c4d8:	jnp    0x40c502
  40c4da:	or     eax,0x9ce5ce2a
  40c4df:	test   al,0x2f
  40c4e1:	imul   esi,DWORD PTR [ecx-0x2145f2fc],0xd9675b67
  40c4eb:	call   0x19b92e78
  40c4f0:	or     ch,BYTE PTR [edi-0x29796ae0]
  40c4f6:	jl     0x40c55d
  40c4f8:	sti    
  40c4f9:	xchg   ebp,eax
  40c4fa:	in     eax,0x38
  40c4fc:	add    dh,cl
  40c4fe:	xor    bl,BYTE PTR [ebx]
  40c500:	dec    edx
  40c501:	jmp    0xa8c8:0x3848d479
  40c508:	add    BYTE PTR [ebx+0x5f],ah
  40c50b:	into   
  40c50c:	sub    DWORD PTR [eax+0x26],esp
  40c50f:	adc    bl,0x40
  40c512:	scas   al,BYTE PTR es:[edi]
  40c513:	push   ecx
  40c514:	enter  0x27c,0x47
  40c518:	stos   BYTE PTR es:[edi],al
  40c519:	mov    ds:0x3f277545,eax
  40c51e:	out    dx,eax
  40c51f:	neg    ah
  40c521:	xchg   DWORD PTR [esi],eax
  40c523:	sar    BYTE PTR [edx],0xe8
  40c526:	in     al,dx
  40c527:	in     eax,0x22
  40c529:	int3   
  40c52a:	jbe    0x40c566
  40c52c:	push   ds
  40c52d:	xchg   ebx,eax
  40c52e:	jle    0x40c51a
  40c530:	rep lods al,BYTE PTR ds:[esi]
  40c532:	push   edi
  40c533:	xchg   BYTE PTR [ecx],dh
  40c535:	inc    ecx
  40c536:	mov    al,ds:0x1ca9b813
  40c53b:	sahf   
  40c53c:	mov    eax,0xa4b1a8d2
  40c541:	int3   
  40c542:	aam    0xb9
  40c544:	or     bh,BYTE PTR [eiz*2-0x45b2e8a4]
  40c54b:	ja     0x40c4e4
  40c54d:	add    al,0x70
  40c54f:	dec    esi
  40c550:	das    
  40c551:	pop    ss
  40c552:	loop   0x40c582
  40c554:	jmp    0x40c5ae
  40c556:	arpl   WORD PTR [ebx],cx
  40c558:	mov    ebp,0x4b76ea7d
  40c55d:	inc    ebx
  40c55e:	fdiv   DWORD PTR [ebx]
  40c560:	dec    ch
  40c562:	das    
  40c563:	leave  
  40c564:	adc    DWORD PTR [ebx],ebp
  40c566:	retf   0xeb92
  40c569:	jge    0x40c575
  40c56b:	repz mov al,ds:0xd934adc1
  40c571:	test   eax,0x59810ebf
  40c576:	or     DWORD PTR [ebx-0x1b],esi
  40c579:	add    dl,dl
  40c57b:	rol    BYTE PTR [edx],1
  40c57d:	mov    edx,0x32d320c4
  40c582:	test   ch,dl
  40c584:	xor    BYTE PTR ds:0x540c4f6,0x2a
  40c58b:	inc    eax
  40c58c:	pop    edx
  40c58d:	mov    eax,ds:0x6b02fb0
  40c592:	inc    ebx
  40c593:	fist   DWORD PTR [edi-0x20]
  40c596:	out    0x80,al
  40c598:	jecxz  0x40c5e8
  40c59a:	call   DWORD PTR [ecx-0x60]
  40c59d:	jge    0x40c584
  40c59f:	out    0xa,eax
  40c5a1:	stos   DWORD PTR es:[edi],eax
  40c5a2:	xor    DWORD PTR [ecx],ebx
  40c5a4:	fimul  DWORD PTR ds:0x887be893
  40c5aa:	inc    esp
  40c5ab:	mov    eax,0x16c4046c
  40c5b0:	mov    ch,BYTE PTR ds:0xdda4b436
  40c5b6:	push   edx
  40c5b7:	jg     0x40c5db
  40c5b9:	add    esi,ecx
  40c5bb:	pop    edx
  40c5bc:	sar    BYTE PTR [eax+0x1f77dd9a],0xfd
  40c5c3:	ret    0x604a
  40c5c6:	clc    
  40c5c7:	mov    cl,0x43
  40c5c9:	(bad)  
  40c5ca:	mov    ch,0xc9
  40c5cc:	lods   eax,DWORD PTR ds:[esi]
  40c5cd:	jno    0x40c5b4
  40c5cf:	or     bl,BYTE PTR [eax+eiz*8+0x74]
  40c5d3:	mov    al,gs:0x2114fd29
  40c5d9:	pop    ds
  40c5da:	dec    esp
  40c5db:	aas    
  40c5dc:	xchg   ebp,eax
  40c5dd:	mov    bl,BYTE PTR [eax]
  40c5df:	jmp    0x40c64a
  40c5e1:	inc    esp
  40c5e2:	add    al,0x94
  40c5e4:	cmp    esp,DWORD PTR [ecx+eiz*2]
  40c5e7:	inc    esi
  40c5e8:	rcr    DWORD PTR [ecx+0x67d89b95],0x1e
  40c5ef:	fs and eax,0xffffff8a
  40c5f3:	clc    
  40c5f4:	loope  0x40c66c
  40c5f6:	inc    ebx
  40c5f7:	test   eax,0xbe1ffbe6
  40c5fc:	cmp    BYTE PTR [eax+0x2d2f5ed9],ah
  40c602:	sub    bh,0xd6
  40c605:	jmp    0xfbb4ccb0
  40c60a:	xor    bl,BYTE PTR [edi-0x16]
  40c60d:	in     eax,dx
  40c60e:	loope  0x40c672
  40c610:	sahf   
  40c611:	mov    cl,BYTE PTR [eax]
  40c613:	rcl    DWORD PTR [esi-0x8d445f7],0xec
  40c61a:	push   cs
  40c61b:	imul   edi,DWORD PTR [edx],0xffffffce
  40c61e:	leave  
  40c61f:	xor    al,0x9b
  40c621:	inc    edx
  40c622:	sbb    BYTE PTR [ebx+ebp*2],ch
  40c625:	sub    BYTE PTR [eax],al
  40c627:	ins    DWORD PTR es:[edi],dx
  40c628:	pop    eax
  40c629:	add    eax,0x88d3e211
  40c62e:	std    
  40c62f:	retf   
  40c630:	fsub   DWORD PTR [ebp-0x50]
  40c634:	cmp    al,0xab
  40c636:	mov    al,0xfa
  40c638:	(bad)  
  40c639:	mov    al,ds:0xbfa57d6d
  40c63e:	or     ch,BYTE PTR [esi+0xb]
  40c641:	in     al,dx
  40c642:	add    DWORD PTR [esp+ecx*4],esp
  40c645:	mov    eax,ds:0x173a71f2
  40c64a:	(bad)  
  40c64b:	push   esp
  40c64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c64d:	ja     0x40c627
  40c64f:	(bad)  
  40c651:	mov    bl,0xd
  40c653:	data16 fsub st(1),st
  40c656:	ins    BYTE PTR es:[edi],dx
  40c657:	adc    edx,esi
  40c659:	imul   esi,DWORD PTR [esi+0x4b20dada],0x6dad7113
  40c663:	adc    al,0xf7
  40c665:	stos   BYTE PTR es:[edi],al
  40c666:	or     eax,0x4c75243
  40c66b:	jbe    0x40c63e
  40c66d:	jb     0x40c620
  40c66f:	jge    0x40c629
  40c671:	jo     0x40c6b8
  40c673:	jmp    FWORD PTR [esi-0x8dc5863]
  40c679:	bound  edi,QWORD PTR [eax-0x2f]
  40c67c:	add    BYTE PTR [ebp+0x3e],bl
  40c67f:	jae    0x40c6c5
  40c681:	mov    ds:0x80f05454,al
  40c686:	rcr    dl,cl
  40c688:	or     BYTE PTR cs:[esi-0x68ee87f8],bl
  40c68f:	js     0x40c6fa
  40c691:	das    
  40c692:	push   ds
  40c693:	add    esp,DWORD PTR [ebx+0x25]
  40c696:	mov    DWORD PTR [ecx+0x3fb4eaae],esi
  40c69c:	xchg   ebp,eax
  40c69d:	(bad)  
  40c69e:	and    ebx,DWORD PTR [ebx-0x7f9b5209]
  40c6a4:	sub    eax,0x9d27e3a5
  40c6a9:	pop    ecx
  40c6aa:	rcl    BYTE PTR [ebp+0xf],0x5f
  40c6ae:	icebp  
  40c6af:	int    0x35
  40c6b1:	xchg   BYTE PTR [edi+0x34],al
  40c6b4:	arpl   WORD PTR [eax],bx
  40c6b6:	fmul   DWORD PTR [ebx-0x3c60fb1c]
  40c6bc:	data16 das 
  40c6be:	fisttp WORD PTR [ecx-0x6f]
  40c6c1:	mov    ebx,0x30267187
  40c6c6:	dec    ebp
  40c6c7:	cmp    esp,esp
  40c6c9:	dec    ebx
  40c6ca:	outs   dx,DWORD PTR ds:[esi]
  40c6cb:	sbb    edi,DWORD PTR [eax]
  40c6cd:	icebp  
  40c6ce:	mov    ebp,0x9c2c2440
  40c6d3:	not    esp
  40c6d5:	pop    ebp
  40c6d6:	cmp    al,0xbb
  40c6d8:	mov    al,0x3e
  40c6db:	pop    ebp
  40c6dc:	gs adc eax,eax
  40c6df:	das    
  40c6e0:	and    DWORD PTR [esi],esi
  40c6e2:	lea    edx,[esi-0x4a]
  40c6e5:	repz xlat BYTE PTR ds:[ebx]
  40c6e7:	mov    ecx,0x878e89c9
  40c6ec:	in     al,0x20
  40c6ee:	jp     0x40c6fc
  40c6f0:	fdivrp st(0),st
  40c6f2:	push   eax
  40c6f3:	cwde   
  40c6f4:	dec    esp
  40c6f5:	or     ebp,DWORD PTR [ebp+eax*2-0x17]
  40c6f9:	add    eax,0xb9512c3f
  40c6fe:	jecxz  0x40c69c
  40c700:	sbb    ecx,DWORD PTR [edx-0x476ce4a3]
  40c706:	jmp    0x90ae:0xe459325a
  40c70d:	(bad)  
  40c70e:	and    DWORD PTR [ebp+0x1ea5eefc],ebx
  40c714:	sete   BYTE PTR [edx+0x43e66bb1]
  40c71b:	dec    eax
  40c71c:	cmp    al,0x8f
  40c71e:	add    esp,DWORD PTR [edx]
  40c720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c721:	mov    ecx,0x9da93aa5
  40c726:	mov    WORD PTR [ebx+eax*8-0x5085657e],es
  40c72d:	test   al,0x8
  40c72f:	xchg   edx,eax
  40c730:	inc    esp
  40c731:	mov    edx,0x1d29d306
  40c736:	inc    esi
  40c737:	sub    DWORD PTR [ebp-0x77],edi
  40c73a:	jmp    0xf185:0xe26ac51e
  40c741:	xor    eax,0xf9f9e5b4
  40c746:	jno    0x40c6ed
  40c748:	lea    esp,[eax]
  40c74a:	mov    DWORD PTR [eax-0x737c600],ebp
  40c750:	jnp    0x40c711
  40c752:	outs   dx,BYTE PTR ds:[esi]
  40c753:	ja     0x40c730
  40c755:	xchg   esi,eax
  40c756:	push   0xb134eac
  40c75b:	sar    BYTE PTR [esi+0x39],1
  40c75e:	inc    esp
  40c75f:	and    bh,BYTE PTR [edx+0x7c1790dc]
  40c765:	adc    BYTE PTR [edx-0x73],cl
  40c768:	xchg   ebp,eax
  40c769:	popa   
  40c76a:	hlt    
  40c76b:	jns    0x40c775
  40c76d:	mov    cl,0xc0
  40c76f:	add    edi,esi
  40c771:	ss sar dl,cl
  40c774:	hlt    
  40c775:	xchg   esi,eax
  40c776:	fnstcw WORD PTR [edx+0x6e]
  40c779:	cmp    al,0xa3
  40c77b:	leave  
  40c77c:	or     eax,0x933e0bb
  40c781:	add    al,0x46
  40c783:	sar    al,cl
  40c785:	pushf  
  40c786:	mov    ecx,0x947a4f22
  40c78b:	ftst   
  40c78d:	pop    eax
  40c78e:	push   ss
  40c78f:	fisttp QWORD PTR [edi+0x47c714f2]
  40c795:	xchg   edi,eax
  40c796:	daa    
  40c797:	push   edx
  40c798:	or     ch,BYTE PTR [edx+0x61]
  40c79b:	sar    BYTE PTR [edi+eax*2],1
  40c79e:	cmovne ebx,DWORD PTR [ebx+0xa1840b6]
  40c7a5:	and    edi,esp
  40c7a7:	mov    bl,0xbe
  40c7a9:	cdq    
  40c7aa:	add    ah,BYTE PTR [eax-0x4f]
  40c7ad:	test   BYTE PTR [ebx-0x62],dl
  40c7b0:	or     al,0x6c
  40c7b2:	dec    ebp
  40c7b3:	gs add al,0xdf
  40c7b6:	mov    dl,0x3a
  40c7b8:	pop    ecx
  40c7b9:	fadd   st,st(4)
  40c7bb:	mov    edx,0x99823570
  40c7c0:	and    DWORD PTR [edi],edx
  40c7c2:	inc    edx
  40c7c3:	dec    esp
  40c7c4:	int3   
  40c7c5:	sbb    eax,0x76446547
  40c7ca:	sbb    al,0x5e
  40c7cc:	push   esp
  40c7cd:	add    BYTE PTR [ebp+0x6589f9d4],al
  40c7d3:	das    
  40c7d4:	add    al,0x28
  40c7d6:	or     esp,ebx
  40c7d8:	stos   BYTE PTR es:[edi],al
  40c7d9:	mov    ecx,0x9358bc03
  40c7de:	sub    BYTE PTR [edi+eiz*8+0x10],dh
  40c7e2:	cld    
  40c7e3:	xchg   ebp,eax
  40c7e4:	mov    DWORD PTR [edx+0x4e],ebp
  40c7e7:	mov    ebp,0x58103c88
  40c7ec:	or     BYTE PTR [eax],0x6b
  40c7ef:	pusha  
  40c7f0:	mov    ebp,0x62da3b5b
  40c7f5:	(bad)  
  40c7f7:	mov    cl,0x73
  40c7f9:	sbb    eax,0xb09b63c1
  40c7fe:	aam    0x0
  40c800:	add    ah,BYTE PTR [edi+0x31]
  40c803:	adc    bl,BYTE PTR [edx+0x554ed620]
  40c809:	fidiv  DWORD PTR [ebx]
  40c80b:	sub    eax,0x86f0d661
  40c810:	mov    ebx,0xdce41206
  40c815:	inc    edi
  40c816:	retf   0x2e52
  40c819:	pushf  
  40c81a:	xchg   esi,eax
  40c81b:	data16 mov dl,0x4b
  40c81e:	repz push 0xce06881c
  40c824:	and    al,0xa0
  40c826:	add    eax,0xbf3b31ef
  40c82b:	sahf   
  40c82c:	sub    al,BYTE PTR [eax]
  40c82e:	sbb    DWORD PTR [ecx+0x4334c899],eax
  40c834:	add    al,BYTE PTR [ebx-0x58]
  40c837:	or     BYTE PTR [edx-0x45b43178],ch
  40c83d:	sbb    DWORD PTR [ebx-0x4aa3223d],ebp
  40c843:	pop    ebp
  40c844:	pop    edi
  40c845:	fsub   QWORD PTR [ecx]
  40c847:	cld    
  40c848:	stc    
  40c849:	rcl    DWORD PTR [eax+eax*4],cl
  40c84c:	and    DWORD PTR [ecx-0x1bb49a86],0xffffffb5
  40c853:	neg    BYTE PTR [ebp+0x17f3d92b]
  40c859:	xchg   DWORD PTR [edi+0x16528917],edx
  40c85f:	call   0xab4c:0x16acc4a4
  40c866:	or     BYTE PTR [esi+0x2928258f],0xd8
  40c86d:	push   ecx
  40c86e:	ins    BYTE PTR es:[edi],dx
  40c86f:	loop   0x40c816
  40c871:	sub    bl,al
  40c873:	lock std 
  40c875:	fidiv  DWORD PTR [edx-0x78275572]
  40c87b:	cs and al,0xc0
  40c87e:	cdq    
  40c87f:	push   ss
  40c880:	ja     0x40c88f
  40c882:	mov    BYTE PTR [edx+0x4c],dl
  40c885:	and    al,0xc7
  40c887:	fadd   QWORD PTR [eax]
  40c889:	pop    edi
  40c88a:	xlat   BYTE PTR ds:[ebx]
  40c88b:	add    BYTE PTR [esi-0x2f],cl
  40c88e:	retf   
  40c88f:	jecxz  0x40c816
  40c891:	imul   edx,edi,0xa
  40c894:	les    ebx,FWORD PTR [edx]
  40c896:	push   0xffffff83
  40c898:	jne    0x40c86f
  40c89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c89b:	in     eax,dx
  40c89c:	cs (bad) 
  40c89f:	xchg   edi,ecx
  40c8a1:	scas   al,BYTE PTR es:[edi]
  40c8a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a3:	push   ebx
  40c8a4:	popf   
  40c8a5:	pop    ss
  40c8a6:	adc    cl,cl
  40c8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8a9:	add    eax,0xa47e66fd
  40c8ae:	ret    0xde74
  40c8b1:	adc    bl,BYTE PTR [eax]
  40c8b3:	inc    ebx
  40c8b4:	cmp    DWORD PTR [edx-0xf6a0181],eax
  40c8ba:	jp     0x40c889
  40c8bc:	stos   DWORD PTR es:[edi],eax
  40c8bd:	mov    edx,0xd16d4a29
  40c8c2:	outs   dx,BYTE PTR ds:[esi]
  40c8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8c4:	das    
  40c8c5:	sar    dh,0x10
  40c8c8:	loopne 0x40c92c
  40c8ca:	mov    ds:0xb989a9e5,eax
  40c8cf:	or     eax,0x789d45db
  40c8d4:	jmp    0x4cf602dc
  40c8d9:	sti    
  40c8da:	lods   eax,DWORD PTR ds:[esi]
  40c8db:	cli    
  40c8dc:	pop    ss
  40c8dd:	(bad)  
  40c8de:	call   0x9364:0x3500534b
  40c8e5:	pop    eax
  40c8e6:	push   ss
  40c8e7:	fnstenv [ebp+0x23]
  40c8ea:	(bad)  
  40c8eb:	(bad)  
  40c8ec:	cmp    esi,DWORD PTR [esi+0x20bd7d0]
  40c8f2:	(bad)  
  40c8f3:	dec    ebx
  40c8f4:	cmp    DWORD PTR [eax+0x510d23a],edx
  40c8fa:	mov    ebx,0xad9d6e34
  40c8ff:	lds    ecx,FWORD PTR [ebx-0x2c]
  40c902:	iret   
  40c903:	int    0x94
  40c905:	push   cs
  40c906:	mov    al,0x92
  40c908:	out    0x9f,al
  40c90a:	pop    esi
  40c90b:	or     al,0xce
  40c90d:	aad    0xe5
  40c90f:	sbb    eax,0x7dc3c120
  40c914:	dec    esi
  40c915:	ror    BYTE PTR [edi],1
  40c917:	xchg   edx,eax
  40c918:	jl     0x40c993
  40c91a:	dec    ebx
  40c91b:	dec    eax
  40c91c:	stos   DWORD PTR es:[edi],eax
  40c91d:	push   ds
  40c91e:	out    dx,al
  40c91f:	xchg   ebp,eax
  40c920:	pop    edx
  40c921:	sbb    eax,0xb37b4de2
  40c926:	dec    edi
  40c927:	adc    cl,BYTE PTR [ecx+0x57]
  40c92a:	sub    eax,0xa89107ac
  40c92f:	cmp    esp,esp
  40c931:	ja     0x40c8ce
  40c933:	scas   eax,DWORD PTR es:[edi]
  40c934:	call   0x6a283e1b
  40c939:	outs   dx,DWORD PTR ds:[esi]
  40c93a:	ss jmp 0x40c982
  40c93d:	inc    eax
  40c93e:	mov    bl,BYTE PTR [ebp+edi*8-0x3a812e86]
  40c945:	out    dx,eax
  40c946:	or     al,0x61
  40c948:	es or  ch,ch
  40c94b:	cmp    DWORD PTR [edi+0x3c],esi
  40c94e:	cmp    DWORD PTR [edx],edi
  40c950:	cmp    DWORD PTR [ebx],edx
  40c952:	cli    
  40c953:	dec    ebp
  40c954:	pop    edi
  40c955:	jmp    0x793e:0xe4f58746
  40c95c:	adc    eax,0x45c7cec6
  40c961:	clc    
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0x1c3b605d]
  40d00c:	into   
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	sub    bh,BYTE PTR [esi+0xc1cf0a0]
  40d01b:	adc    esp,esi
  40d01d:	clc    
  40d01e:	xchg   edi,eax
  40d01f:	and    BYTE PTR [edi],al
  40d021:	pop    esi
  40d022:	dec    ebp
  40d023:	inc    esi
  40d024:	arpl   WORD PTR [ecx+0xa],di
  40d027:	jg     0x40d0a5
  40d029:	(bad)  
  40d02a:	push   0xaef05554
  40d02f:	mov    gs,WORD PTR [esi]
  40d031:	popf   
  40d032:	pop    edi
  40d033:	jl     0x40d07a
  40d035:	out    dx,eax
  40d036:	add    eax,0x2a768a1
  40d03b:	fdiv   QWORD PTR [esi]
  40d03d:	xor    ebp,ebx
  40d03f:	dec    ebp
  40d040:	sahf   
  40d041:	cmp    ebp,DWORD PTR [edx]
  40d043:	xchg   DWORD PTR ds:0x5f7cab0f,ebp
  40d049:	push   esp
  40d04a:	popf   
  40d04b:	inc    eax
  40d04c:	mov    DWORD PTR [esi-0x7124bbf2],ebx
  40d052:	cdq    
  40d053:	mov    ecx,0x2edd3fa
  40d058:	add    esi,eax
  40d05a:	out    0x1a,eax
  40d05c:	scas   al,BYTE PTR es:[edi]
  40d05d:	in     eax,dx
  40d05e:	and    bh,BYTE PTR [edi+eax*8+0x44dbe739]
  40d065:	inc    edx
  40d066:	sbb    esi,esp
  40d068:	fiadd  DWORD PTR [edi]
  40d06a:	in     eax,0x14
  40d06c:	icebp  
  40d06d:	sub    eax,0x522d7272
  40d072:	adc    ch,al
  40d074:	fisub  DWORD PTR [edi+0x49ce0a57]
  40d07a:	(bad)  
  40d07b:	push   esp
  40d07c:	les    ecx,FWORD PTR [eax-0x3a2b3c6b]
  40d082:	mov    cl,0x4f
  40d084:	sbb    ch,BYTE PTR [esi-0x6eabdf28]
  40d08a:	inc    eax
  40d08b:	test   ecx,eax
  40d08d:	mov    ecx,0x78762fd
  40d092:	mov    WORD PTR [esi],?
  40d094:	sub    eax,0x66f4fd2
  40d099:	stos   BYTE PTR es:[edi],al
  40d09a:	add    eax,0xa7814679
  40d09f:	dec    edx
  40d0a0:	pop    edi
  40d0a1:	imul   eax,DWORD PTR [ebx-0x37697e8c],0x38
  40d0a8:	sbb    eax,0x62ee7f4
  40d0ad:	sbb    BYTE PTR [eax],bl
  40d0af:	cmp    BYTE PTR [edi-0x6],bh
  40d0b2:	cmp    edx,DWORD PTR [ebp-0x7b]
  40d0b5:	jmp    0xa6af:0x6dca3856
  40d0bc:	and    BYTE PTR [esi+0x64],0x34
  40d0c0:	and    BYTE PTR ds:0x925a6cc9,ch
  40d0c6:	xchg   ecx,eax
  40d0c7:	aam    0x0
  40d0c9:	mov    ebp,0x979ebaff
  40d0ce:	mov    DWORD PTR [ebx-0x56073955],edi
  40d0d4:	push   cs
  40d0d5:	sub    DWORD PTR [ebx-0x67d72bf6],eax
  40d0db:	add    eax,0x4f9a679b
  40d0e0:	in     eax,0xf6
  40d0e2:	dec    esi
  40d0e3:	test   al,0x16
  40d0e5:	pusha  
  40d0e6:	or     eax,0xfa225708
  40d0eb:	xor    BYTE PTR [edi+0x4197dda6],bh
  40d0f1:	push   0xffffff9e
  40d0f3:	and    ecx,DWORD PTR [ecx-0x57]
  40d0f6:	test   BYTE PTR [ebp+0x699b359d],al
  40d0fc:	xchg   edi,eax
  40d0fd:	test   DWORD PTR [esp+ebx*8-0x7a46306d],0x4dcbc3d4
  40d108:	in     eax,0xbc
  40d10a:	aaa    
  40d10b:	or     al,0xac
  40d10d:	loop   0x40d0ac
  40d10f:	cmp    eax,0x9c6d9279
  40d114:	dec    eax
  40d115:	scas   al,BYTE PTR es:[edi]
  40d116:	lea    edx,[edi]
  40d118:	imul   edx,DWORD PTR [edx+0x35f68e94],0x41
  40d11f:	out    dx,eax
  40d120:	adc    ch,BYTE PTR [esi]
  40d122:	sub    al,0x13
  40d124:	inc    edx
  40d125:	cmp    dh,al
  40d127:	outs   dx,BYTE PTR ds:[esi]
  40d128:	int    0x74
  40d12a:	push   cs
  40d12b:	iret   
  40d12c:	addr16 das 
  40d12e:	inc    ecx
  40d12f:	xchg   edi,eax
  40d130:	sbb    ch,ah
  40d132:	pop    ebx
  40d133:	and    eax,DWORD PTR [ebx-0x4f]
  40d136:	dec    esi
  40d137:	sub    eax,0x4543c7dd
  40d13c:	mov    dh,0x94
  40d13e:	mov    cl,0x8d
  40d140:	sub    eax,0x17569f0e
  40d145:	sbb    BYTE PTR [ebx],ch
  40d147:	xchg   BYTE PTR ds:0xeba5a94,bh
  40d14d:	mov    BYTE PTR [eax+0x36],dl
  40d150:	mov    ah,0xd6
  40d152:	jae    0x40d10f
  40d154:	aam    0x8
  40d156:	sbb    BYTE PTR [ecx],0x40
  40d159:	lods   al,BYTE PTR ds:[esi]
  40d15a:	pop    edi
  40d15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d15c:	(bad)  
  40d15d:	push   ds
  40d15e:	push   ebx
  40d15f:	inc    edi
  40d160:	push   ebp
  40d161:	aas    
  40d162:	leave  
  40d163:	xor    al,bh
  40d165:	dec    ecx
  40d166:	cmp    al,0xf2
  40d168:	sub    eax,0x8a78c8bb
  40d16d:	dec    eax
  40d16e:	mov    ch,0xaf
  40d170:	data16 in al,0x4
  40d173:	rcr    DWORD PTR [esi+edi*4+0x7de789b],cl
  40d17a:	adc    dh,bl
  40d17c:	xchg   ebp,eax
  40d17d:	jmp    0x40d1dc
  40d17f:	mov    eax,0x6cabd638
  40d184:	mov    es,ecx
  40d186:	outs   dx,DWORD PTR ds:[esi]
  40d187:	sub    al,0x91
  40d189:	cmc    
  40d18a:	out    dx,eax
  40d18b:	(bad)  
  40d18c:	pop    ecx
  40d18d:	or     BYTE PTR [edi+ebp*1-0x2c052e66],bh
  40d194:	adc    cl,BYTE PTR [esi-0x67]
  40d197:	inc    esp
  40d198:	mov    DWORD PTR [ebx-0x75b5b89e],edi
  40d19e:	xor    DWORD PTR [edx],edx
  40d1a0:	add    ecx,DWORD PTR cs:[ebx]
  40d1a3:	jl     0x40d1df
  40d1a5:	mov    ecx,0xa7cabddf
  40d1aa:	sub    ebx,DWORD PTR [edi]
  40d1ac:	scas   al,BYTE PTR es:[edi]
  40d1ad:	cwde   
  40d1ae:	pusha  
  40d1af:	enter  0xf527,0x12
  40d1b3:	loope  0x40d1bc
  40d1b5:	lods   eax,DWORD PTR ds:[esi]
  40d1b6:	jecxz  0x40d190
  40d1b8:	lahf   
  40d1b9:	test   al,0x14
  40d1bb:	loope  0x40d18e
  40d1bd:	std    
  40d1be:	xor    eax,0x2ad15519
  40d1c3:	or     DWORD PTR [esi],0x4501e513
  40d1c9:	mov    bl,0x50
  40d1cb:	(bad)  
  40d1cc:	add    al,bl
  40d1ce:	push   0xc
  40d1d0:	fwait
  40d1d1:	push   ds
  40d1d2:	mov    bl,0xfb
  40d1d4:	mov    ch,0xd8
  40d1d6:	push   ds
  40d1d7:	jle    0x40d168
  40d1d9:	lods   eax,DWORD PTR ds:[esi]
  40d1da:	inc    esi
  40d1db:	fs sub al,0xca
  40d1de:	cmp    bl,ah
  40d1e0:	jmp    0x40d196
  40d1e2:	into   
  40d1e3:	pusha  
  40d1e4:	push   esp
  40d1e5:	lds    edx,FWORD PTR [edi+0x54]
  40d1e8:	mov    esp,edx
  40d1ea:	sbb    ebp,esp
  40d1ec:	aas    
  40d1ed:	mov    edx,0x6613ad14
  40d1f2:	sahf   
  40d1f3:	in     eax,dx
  40d1f4:	cmp    DWORD PTR [ebp-0x350c4c13],edx
  40d1fa:	and    eax,0xecb1adc0
  40d1ff:	mov    eax,ds:0xfe671093
  40d204:	sbb    eax,0xb88d207c
  40d209:	in     eax,dx
  40d20a:	and    BYTE PTR [edx+0x23da9a83],cl
  40d210:	imul   DWORD PTR [edx-0x7b]
  40d213:	loopne 0x40d204
  40d215:	jno    0x40d23f
  40d217:	cwde   
  40d218:	cmp    eax,ebx
  40d21a:	mov    fs,WORD PTR [ebx+0xf85f0a8]
  40d220:	pusha  
  40d221:	cmp    BYTE PTR [esi],bl
  40d223:	adc    ebp,ebp
  40d225:	in     eax,0xe9
  40d227:	mov    al,ds:0x54f37ee1
  40d22c:	out    dx,eax
  40d22d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d22e:	push   eax
  40d22f:	xchg   ebp,eax
  40d230:	adc    al,0x49
  40d232:	cmc    
  40d233:	mov    fs,WORD PTR [ebx+0x8]
  40d236:	xchg   DWORD PTR [edx+0x58],edi
  40d239:	dec    ecx
  40d23a:	mov    edx,0xcdbc3716
  40d23f:	cld    
  40d240:	mov    dl,0x9d
  40d242:	fist   WORD PTR [esi+eax*2]
  40d245:	add    al,0x31
  40d247:	push   es
  40d248:	out    dx,al
  40d249:	cs cli 
  40d24b:	sbb    al,0x0
  40d24d:	test   eax,0xb154ef47
  40d252:	xchg   edx,eax
  40d253:	jp     0x40d1ff
  40d255:	inc    esi
  40d256:	test   BYTE PTR [eax],cl
  40d258:	and    al,0xf8
  40d25a:	enter  0x37da,0x15
  40d25e:	icebp  
  40d25f:	mov    ah,BYTE PTR [eax-0x2e6dd7dc]
  40d265:	dec    ebp
  40d266:	in     al,dx
  40d267:	cmp    ch,al
  40d269:	cmovae edx,ecx
  40d26c:	pushf  
  40d26d:	lock mov al,0xf9
  40d270:	sub    ecx,DWORD PTR [esi]
  40d272:	inc    ebx
  40d273:	mov    ch,BYTE PTR [ebp-0x42be5ed6]
  40d279:	(bad)  
  40d27a:	push   ds
  40d27b:	sbb    BYTE PTR [ebx+0x6a681913],bh
  40d281:	adc    BYTE PTR [ebx-0x29cb6e1b],cl
  40d287:	dec    ecx
  40d288:	ins    BYTE PTR es:[edi],dx
  40d289:	pop    ecx
  40d28a:	mov    edx,0xb7ec65f8
  40d28f:	loopne 0x40d21f
  40d291:	scas   eax,DWORD PTR es:[edi]
  40d292:	adc    DWORD PTR [edx+0x21058d41],edi
  40d298:	push   0x924bf1fc
  40d29d:	xchg   ebx,eax
  40d29e:	data16 sub BYTE PTR [eax+0x44f7b9ab],bh
  40d2a5:	icebp  
  40d2a6:	pop    ebp
  40d2a7:	gs pop ds
  40d2a9:	lods   eax,DWORD PTR ds:[esi]
  40d2aa:	or     bl,BYTE PTR ds:0xccd38cde
  40d2b0:	cmp    ch,BYTE PTR [edx]
  40d2b2:	loopne 0x40d2f8
  40d2b4:	push   ebp
  40d2b5:	or     ecx,edx
  40d2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b8:	fwait
  40d2b9:	cmp    BYTE PTR [eax-0x6b9e54e1],ch
  40d2bf:	daa    
  40d2c0:	ds xchg esi,eax
  40d2c2:	fiadd  WORD PTR [ecx-0x1]
  40d2c5:	aam    0xe2
  40d2c7:	(bad)  
  40d2c9:	stos   BYTE PTR es:[edi],al
  40d2ca:	xor    eax,0xda8c6973
  40d2cf:	cmp    DWORD PTR [ebp-0x770b8868],0xfbe0f335
  40d2d9:	out    0xaa,eax
  40d2db:	pop    ebx
  40d2dc:	cmp    DWORD PTR [ecx+edi*4],ebp
  40d2df:	mov    al,ds:0xb8cc6e17
  40d2e4:	sahf   
  40d2e5:	or     ebp,DWORD PTR [edx-0x48cd625a]
  40d2eb:	arpl   sp,cx
  40d2ed:	in     al,dx
  40d2ee:	mov    WORD PTR [edi-0x1727fec2],es
  40d2f4:	rol    DWORD PTR [esi-0x4009a6bf],1
  40d2fa:	rol    al,cl
  40d2fc:	ins    BYTE PTR es:[edi],dx
  40d2fd:	popf   
  40d2fe:	into   
  40d2ff:	es add ch,al
  40d302:	push   esi
  40d303:	mov    WORD PTR [ebp-0x11],?
  40d306:	inc    edi
  40d307:	aas    
  40d308:	xchg   dl,ch
  40d30a:	mov    bl,0x44
  40d30c:	xor    ch,BYTE PTR [ebx]
  40d30e:	or     BYTE PTR [edx+ebp*2-0x5034daef],dh
  40d315:	mov    al,0xfe
  40d317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d318:	inc    eax
  40d319:	or     BYTE PTR [ecx+edi*2-0x573bf90c],ah
  40d320:	xchg   ebx,eax
  40d321:	cmp    al,0x20
  40d323:	and    al,0xea
  40d325:	cmp    eax,0x9d161819
  40d32a:	daa    
  40d32b:	(bad)  
  40d32c:	mov    esp,0x96906ea5
  40d331:	enter  0x88b2,0x8d
  40d335:	dec    esp
  40d336:	test   al,0x19
  40d338:	sub    ebp,eax
  40d33a:	lea    ecx,[edi]
  40d33c:	sbb    esp,DWORD PTR [ebp-0x73031c39]
  40d342:	out    dx,al
  40d343:	jnp    0x40d381
  40d345:	mov    al,ah
  40d347:	test   DWORD PTR [ebx+0x1e],eax
  40d34a:	adc    BYTE PTR [ecx],bl
  40d34c:	repz rol DWORD PTR [esp+ecx*1+0x3d],1
  40d351:	adc    dl,al
  40d353:	call   0x563f:0x7f541a77
  40d35a:	add    dl,BYTE PTR [edx+0x72]
  40d35d:	fs xor ebp,ebx
  40d360:	(bad)  
  40d361:	cmp    BYTE PTR [edx+0x38],dh
  40d364:	xor    eax,0x392f8f04
  40d369:	fwait
  40d36a:	test   BYTE PTR [ecx-0x24005887],al
  40d370:	xchg   edx,eax
  40d371:	mov    ecx,0x36a9d85c
  40d376:	push   ecx
  40d377:	fsubp  st(0),st
  40d379:	push   edx
  40d37a:	or     bl,BYTE PTR [eax+0x320182d5]
  40d380:	ss adc ecx,edx
  40d383:	pop    eax
  40d384:	out    dx,eax
  40d385:	xchg   ecx,eax
  40d386:	mov    ds:0xfce80b80,eax
  40d38b:	out    0xb9,al
  40d38d:	jmp    0x40d3a4
  40d38f:	in     eax,0x36
  40d391:	mov    dh,0xe5
  40d393:	ss pusha 
  40d395:	aaa    
  40d396:	pop    ecx
  40d397:	mov    edx,0xa80f0ba7
  40d39c:	cld    
  40d39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d39e:	cmp    ch,BYTE PTR [ebp+0xe]
  40d3a1:	xlat   BYTE PTR ds:[ebx]
  40d3a2:	pop    edx
  40d3a3:	out    0xbd,eax
  40d3a5:	xor    eax,0x5436a6f8
  40d3aa:	dec    esp
  40d3ab:	mov    ecx,0x57fa6354
  40d3b0:	test   eax,0x78a5bb45
  40d3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b6:	or     BYTE PTR [esi+0x70],dh
  40d3b9:	lds    edi,FWORD PTR [eax+eiz*1]
  40d3bc:	cs int 0xd1
  40d3bf:	fidiv  DWORD PTR [esi+edi*1+0x46d2b274]
  40d3c6:	push   ecx
  40d3c7:	push   esp
  40d3c8:	pop    ss
  40d3c9:	out    dx,al
  40d3ca:	cwde   
  40d3cb:	leave  
  40d3cc:	mov    ds:0x14ccb059,al
  40d3d1:	test   DWORD PTR [ebp+0x0],ebx
  40d3d4:	mov    esi,0x8acf8b7d
  40d3d9:	xor    edi,eax
  40d3db:	jl     0x40d436
  40d3dd:	ret    0xfcd2
  40d3e0:	pop    ebx
  40d3e1:	push   edi
  40d3e2:	xchg   ebx,eax
  40d3e3:	fldenv [ebp+0x17]
  40d3e6:	int    0xea
  40d3e8:	iret   
  40d3e9:	int3   
  40d3ea:	es add eax,0x34ae3943
  40d3f0:	cs pop esp
  40d3f2:	std    
  40d3f3:	xlat   BYTE PTR ds:[ebx]
  40d3f4:	leave  
  40d3f5:	mov    bh,0x3b
  40d3f7:	push   edx
  40d3f8:	mov    ah,0x29
  40d3fa:	into   
  40d3fb:	dec    edx
  40d3fc:	mov    ss,ecx
  40d3fe:	add    bh,BYTE PTR ds:[eax]
  40d401:	xor    al,0xa1
  40d403:	fstp   TBYTE PTR [edx]
  40d405:	ss hlt 
  40d407:	dec    esi
  40d408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d409:	lahf   
  40d40a:	dec    ebx
  40d40b:	je     0x40d3fb
  40d40d:	jo     0x40d442
  40d40f:	test   eax,0x73b3f6c2
  40d414:	inc    ecx
  40d415:	fisttp DWORD PTR [ebx+ebx*1]
  40d418:	jmp    0x790412a2
  40d41d:	(bad)  
  40d41e:	pop    esp
  40d41f:	jne    0x40d3b1
  40d421:	pop    ebx
  40d422:	cli    
  40d423:	add    cl,ah
  40d425:	jo     0x40d498
  40d427:	pusha  
  40d428:	push   edx
  40d429:	sbb    al,0x48
  40d42b:	hlt    
  40d42c:	(bad)  [ebx]
  40d42e:	inc    edx
  40d42f:	push   ss
  40d430:	add    al,0xbb
  40d432:	je     0x40d3d9
  40d434:	popa   
  40d435:	mov    ebp,0x5d1f5d9b
  40d43a:	sar    BYTE PTR [edi],0x35
  40d43d:	scas   eax,DWORD PTR es:[edi]
  40d43e:	dec    esi
  40d43f:	inc    esp
  40d440:	outs   dx,DWORD PTR ds:[esi]
  40d441:	sbb    eax,ecx
  40d443:	pop    esi
  40d444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d445:	(bad)  
  40d446:	scas   eax,DWORD PTR es:[edi]
  40d447:	aad    0xff
  40d449:	push   0x3ea246dd
  40d44e:	sub    esi,DWORD PTR [edi]
  40d450:	in     eax,0x69
  40d452:	push   eax
  40d453:	mov    WORD PTR [eax-0x347f6d0e],cs
  40d459:	mov    ds:0x26ee2c9e,eax
  40d45e:	int    0x1e
  40d460:	xor    ecx,ebp
  40d462:	sti    
  40d463:	jnp    0x40d4d5
  40d465:	push   ds
  40d466:	outs   dx,BYTE PTR ds:[esi]
  40d467:	push   ebx
  40d468:	mov    eax,ds:0x39ac4d25
  40d46d:	aam    0x5
  40d46f:	repz or BYTE PTR [edi-0x7f],0x20
  40d474:	mov    es:0xe7a6b060,eax
  40d47a:	xchg   ecx,eax
  40d47b:	jecxz  0x40d4d8
  40d47d:	mov    ds:0x54c5e2f5,al
  40d482:	stc    
  40d483:	xor    DWORD PTR [edi],edi
  40d485:	mov    al,ds:0x15b2c1ae
  40d48a:	(bad)  
  40d48b:	aaa    
  40d48c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d48d:	add    eax,DWORD PTR [ecx+esi*1]
  40d490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d491:	dec    edx
  40d492:	shr    eax,0xf
  40d495:	fistp  QWORD PTR [edx-0x3f]
  40d498:	xstore-rng (bad)
  40d499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d49a:	add    DWORD PTR [esi-0xb],0xdaa8042f
  40d4a1:	mov    ebp,0x3363fac
  40d4a6:	enter  0x3843,0xa2
  40d4aa:	test   BYTE PTR [edx-0x7b],0x8f
  40d4ae:	shr    DWORD PTR [esp+eax*1+0x29344d92],cl
  40d4b5:	adc    DWORD PTR [edi+0x4cb915b1],edx
  40d4bb:	dec    ebx
  40d4bc:	retf   
  40d4bd:	sar    DWORD PTR [ecx-0x7c],cl
  40d4c0:	add    BYTE PTR [esi+0x7a],cl
  40d4c3:	jp     0x40d45d
  40d4c5:	mul    ebx
  40d4c7:	sbb    edx,ebp
  40d4c9:	cmovno ebp,DWORD PTR [ebx-0x29b073cb]
  40d4d0:	rcl    BYTE PTR [esi],0x45
  40d4d3:	arpl   WORD PTR [edi-0x8a1cc9f],bp
  40d4d9:	pop    edx
  40d4da:	push   es
  40d4db:	jl     0x40d527
  40d4dd:	push   eax
  40d4de:	sub    BYTE PTR [eax+0x11],bl
  40d4e1:	jecxz  0x40d4fa
  40d4e3:	pop    esi
  40d4e4:	pop    es
  40d4e5:	bound  eax,QWORD PTR [eax+0x73]
  40d4e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e9:	pusha  
  40d4ea:	je     0x40d53d
  40d4ec:	push   0xa6f6f6
  40d4f1:	ret    
  40d4f2:	mov    ah,0x55
  40d4f4:	fnsave [esi]
  40d4f6:	cmp    al,0x42
  40d4f8:	mov    esi,0xdaad2799
  40d4fd:	sahf   
  40d4fe:	les    ecx,FWORD PTR [edi+0x135bab19]
  40d504:	out    0x4c,eax
  40d506:	dec    DWORD PTR [edi+0x2c]
  40d509:	sub    ebx,DWORD PTR [ebp-0x14cd7e8e]
  40d50f:	sbb    DWORD PTR [esi],ebp
  40d511:	js     0x40d495
  40d513:	test   BYTE PTR [eax+edi*2+0x7606e79e],ch
  40d51a:	clc    
  40d51b:	and    al,BYTE PTR [ebp-0x4d]
  40d51e:	aas    
  40d51f:	enter  0xa06f,0xb8
  40d523:	pop    edx
  40d524:	sub    DWORD PTR [eax+0x21011e47],ebx
  40d52a:	lock push edx
  40d52c:	xchg   ebp,eax
  40d52d:	pop    es
  40d52e:	inc    esi
  40d52f:	pop    esi
  40d530:	sub    ecx,edi
  40d532:	dec    ecx
  40d533:	xchg   DWORD PTR [esi+0x59f31d1f],esi
  40d539:	and    al,al
  40d53b:	stos   DWORD PTR es:[edi],eax
  40d53c:	jmp    0x5fe4:0x3723eff
  40d543:	cs imul esp,esi,0x8b1e463
  40d54a:	in     al,0x37
  40d54c:	std    
  40d54d:	jmp    0x833c:0x21fdeb28
  40d554:	test   WORD PTR [ecx],di
  40d557:	(bad)  
  40d559:	and    eax,0x984c42b3
  40d55e:	xor    ebp,edx
  40d560:	pop    eax
  40d561:	dec    ebp
  40d562:	test   BYTE PTR [esi+0x61],al
  40d565:	dec    bl
  40d567:	out    0x9b,eax
  40d569:	mov    WORD PTR [edx],gs
  40d56b:	jo     0x40d550
  40d56d:	cmp    DWORD PTR [esp+edx*4-0x698f6a85],edx
  40d574:	cmp    BYTE PTR [eax],0x14
  40d577:	out    0xcb,al
  40d579:	out    0x23,eax
  40d57b:	xchg   ecx,eax
  40d57c:	lds    esp,FWORD PTR [edi-0x285a0c5b]
  40d582:	sub    BYTE PTR [edx],al
  40d584:	sahf   
  40d585:	mov    DWORD PTR [edi+0x4d],0x46ab905d
  40d58c:	inc    eax
  40d58d:	(bad)  
  40d58f:	inc    ebp
  40d590:	arpl   WORD PTR [esi+0x44beee1],bx
  40d596:	pop    ds
  40d597:	sub    bh,ch
  40d599:	xor    al,0xc6
  40d59b:	aam    0xdc
  40d59d:	scas   eax,DWORD PTR es:[edi]
  40d59e:	rcr    DWORD PTR [ecx-0xb],1
  40d5a1:	js     0x40d5d4
  40d5a3:	push   edx
  40d5a4:	in     eax,dx
  40d5a5:	xchg   esi,eax
  40d5a6:	je     0x40d532
  40d5a8:	cwde   
  40d5a9:	adc    ch,BYTE PTR [edi+eax*1+0x5b]
  40d5ad:	jns    0x40d575
  40d5af:	add    al,0x31
  40d5b1:	adc    eax,esi
  40d5b3:	adc    DWORD PTR [ecx],0xef0f4957
  40d5b9:	push   ecx
  40d5ba:	lods   al,BYTE PTR ds:[esi]
  40d5bb:	mov    bl,0xc7
  40d5bd:	xchg   edx,eax
  40d5be:	sub    DWORD PTR [esi+0x7b],0x149de542
  40d5c5:	sub    bl,BYTE PTR [ebx+eax*8-0x3895a84e]
  40d5cc:	push   edx
  40d5cd:	pushf  
  40d5ce:	sbb    ah,BYTE PTR [ebx+0x4cc7cca]
  40d5d4:	mov    fs,WORD PTR [ecx]
  40d5d6:	mov    bl,0x4
  40d5d8:	mov    esi,0x8bae8019
  40d5dd:	fistp  DWORD PTR ds:0x638a6fdb
  40d5e3:	es inc edx
  40d5e5:	push   ds
  40d5e6:	stos   DWORD PTR es:[edi],eax
  40d5e7:	sbb    edx,DWORD PTR [ebx-0x1f]
  40d5ea:	aas    
  40d5eb:	adc    ebp,DWORD PTR [eax+esi*4+0x4ea15e4c]
  40d5f2:	call   0xe56e840a
  40d5f7:	sahf   
  40d5f8:	mov    edi,0xbc0dca9
  40d5fd:	push   0xc2f3506
  40d602:	push   ecx
  40d603:	test   eax,0xf1b59036
  40d608:	xor    cl,BYTE PTR [edi]
  40d60a:	mov    DWORD PTR [ebx-0x62bfa743],eax
  40d610:	call   0x99a9:0xf1284285
  40d617:	loope  0x40d634
  40d619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d61a:	pop    ebx
  40d61b:	es sub eax,0x7206ba60
  40d621:	pop    ecx
  40d622:	jp     0x40d64b
  40d624:	xchg   ecx,eax
  40d625:	push   ecx
  40d626:	add    al,0x3
  40d628:	scas   al,BYTE PTR es:[edi]
  40d629:	leave  
  40d62a:	dec    edi
  40d62b:	pop    ebx
  40d62c:	lods   eax,DWORD PTR ds:[esi]
  40d62d:	or     al,0x56
  40d62f:	aam    0xc4
  40d631:	push   edx
  40d632:	(bad)  
  40d633:	mov    ds:0xa60f2da6,eax
  40d638:	dec    esp
  40d639:	out    dx,al
  40d63a:	enter  0x3800,0xe0
  40d63e:	call   0xd6cadc08
  40d643:	xchg   BYTE PTR [eax+eiz*4],dh
  40d646:	jmp    0x3a82:0xb391cf8
  40d64d:	ficomp DWORD PTR [edi]
  40d64f:	mov    bh,0xa4
  40d651:	mov    al,0xe
  40d653:	lock dec ebp
  40d655:	jg     0x40d69d
  40d657:	cmp    ah,BYTE PTR [ebx]
  40d659:	or     DWORD PTR [esi-0x7c],esp
  40d65c:	push   esi
  40d65d:	test   al,0xa3
  40d65f:	push   ss
  40d660:	sbb    BYTE PTR [ebp-0x768c0153],dh
  40d666:	loope  0x40d67a
  40d668:	and    eax,0x13da4e5
  40d66d:	imul   eax,DWORD PTR [ecx+0x6b],0xe
  40d671:	and    al,0xaa
  40d673:	xchg   ebp,eax
  40d674:	repnz add eax,0x47aa8c11
  40d67a:	xchg   BYTE PTR [edi],dl
  40d67c:	cmp    eax,0xe9e6ce06
  40d681:	add    eax,0x6f971bb2
  40d686:	sbb    eax,0x486bd772
  40d68b:	iret   
  40d68c:	dec    ebp
  40d68d:	ins    DWORD PTR es:[edi],dx
  40d68e:	loope  0x40d65b
  40d690:	dec    ecx
  40d691:	and    BYTE PTR ds:0xd6f6d5eb,cl
  40d697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d698:	loopne 0x40d65c
  40d69a:	mov    eax,0x7c37df66
  40d69f:	fs xchg esi,eax
  40d6a1:	push   edi
  40d6a2:	js     0x40d706
  40d6a4:	push   ebp
  40d6a5:	mov    al,ds:0x57c39d29
  40d6aa:	call   0xb68f:0x1062cc02
  40d6b1:	cli    
  40d6b2:	shl    BYTE PTR ds:0xf119afb2,cl
  40d6b8:	mov    esp,0x15a6a164
  40d6bd:	pop    ds
  40d6be:	xor    esp,DWORD PTR [edx]
  40d6c0:	add    al,0x50
  40d6c2:	mov    DWORD PTR [ebx+0x5a678f41],0x44f9d5ee
  40d6cc:	sar    ebp,1
  40d6ce:	jp     0x40d667
  40d6d0:	div    BYTE PTR [ebx+0x4a]
  40d6d3:	inc    ebp
  40d6d4:	push   ebx
  40d6d5:	fcom   QWORD PTR [ebp+0x226eba95]
  40d6db:	adc    DWORD PTR [edx-0x2a3227ad],0x58
  40d6e2:	mov    cl,0x48
  40d6e4:	or     ebx,ebx
  40d6e6:	in     ax,dx
  40d6e8:	mov    eax,ds:0x33c77439
  40d6ed:	and    al,0x1e
  40d6ef:	int3   
  40d6f0:	adc    ch,bh
  40d6f2:	fild   QWORD PTR [ecx]
  40d6f4:	or     eax,0x54ba02b2
  40d6f9:	loopne 0x40d722
  40d6fb:	pushf  
  40d6fc:	retf   0x75c1
  40d6ff:	dec    ebx
  40d700:	out    0x87,al
  40d702:	fucomp st(2)
  40d704:	and    BYTE PTR [edi],bh
  40d706:	test   eax,0x6442408d
  40d70b:	enter  0x6af8,0x2
  40d70f:	pop    ds
  40d710:	sbb    dl,0xbe
  40d713:	sub    eax,0x2c9c8061
  40d718:	pop    ss
  40d719:	test   BYTE PTR [edx+0x482c1175],cl
  40d71f:	xchg   esi,eax
  40d720:	in     eax,0x7b
  40d722:	repz fcomp DWORD PTR [eax-0x6c]
  40d726:	jno    0x40d776
  40d728:	leave  
  40d729:	pop    ebp
  40d72a:	sbb    DWORD PTR fs:[ebp+0x21],0xce07f6a1
  40d732:	stos   DWORD PTR es:[edi],eax
  40d733:	inc    eax
  40d734:	aas    
  40d735:	ins    BYTE PTR es:[edi],dx
  40d736:	ret    0x3a7d
  40d739:	pop    ss
  40d73a:	xchg   edi,eax
  40d73b:	dec    esp
  40d73c:	std    
  40d73d:	(bad)  
  40d73e:	lahf   
  40d73f:	jp     0x40d7b0
  40d741:	dec    esp
  40d742:	sahf   
  40d743:	mov    ch,0xa0
  40d745:	mov    dh,BYTE PTR [ebp+0x32]
  40d748:	mov    ebx,0xdaefd48f
  40d74d:	jmp    0x4601:0xcea04e3f
  40d754:	lock pop ds
  40d756:	pop    ds
  40d757:	dec    esp
  40d758:	call   0x1078:0xa34afce2
  40d75f:	into   
  40d760:	or     al,0xbb
  40d762:	into   
  40d763:	popa   
  40d764:	dec    eax
  40d765:	idiv   DWORD PTR [ebx]
  40d767:	mov    cl,0xc6
  40d769:	push   esi
  40d76a:	stos   DWORD PTR es:[edi],eax
  40d76b:	jo     0x40d7ec
  40d76d:	xchg   ebx,eax
  40d76e:	cmp    edi,esi
  40d770:	cmp    ch,BYTE PTR [edi+0x12]
  40d773:	out    0x81,eax
  40d775:	stos   BYTE PTR es:[edi],al
  40d776:	mov    ebp,0xf645c73d
  40d77b:	cs sbb eax,0xb5e97900
  40d781:	mov    dl,0x1d
  40d783:	ret    
  40d784:	call   0x81c3:0x71b44103
  40d78b:	mov    ecx,0x3a4b70e9
  40d790:	lahf   
  40d791:	cmp    eax,0xb0782e86
  40d796:	es repz pop ds
  40d799:	fisub  DWORD PTR [eax-0x4]
  40d79c:	pop    ss
  40d79d:	pusha  
  40d79e:	mov    edi,0x1e31b949
  40d7a3:	inc    ecx
  40d7a4:	xchg   ebp,eax
  40d7a5:	stos   BYTE PTR es:[edi],al
  40d7a6:	add    al,0x5b
  40d7a8:	mov    bl,0x3a
  40d7aa:	jo     0x40d7b1
  40d7ac:	and    ebx,DWORD PTR [ebp+0x6cb977b1]
  40d7b2:	int3   
  40d7b3:	imul   eax,DWORD PTR [ecx-0x2f58b0ae],0x19
  40d7ba:	icebp  
  40d7bb:	cmp    DWORD PTR [ecx+0x48],esp
  40d7be:	dec    ebx
  40d7bf:	fisub  WORD PTR [ecx+0x68f175b7]
  40d7c5:	in     eax,0x7a
  40d7c7:	nop
  40d7c8:	add    eax,DWORD PTR [edx]
  40d7ca:	cdq    
  40d7cb:	loop   0x40d762
  40d7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ce:	inc    eax
  40d7cf:	lock cmp ebp,DWORD PTR [edi+0x61]
  40d7d3:	test   BYTE PTR [edi],ch
  40d7d5:	pop    ss
  40d7d6:	jmp    0x40d827
  40d7d8:	fs push edx
  40d7da:	sbb    DWORD PTR [edi-0x64],ecx
  40d7dd:	lods   eax,DWORD PTR ds:[esi]
  40d7de:	jnp    0x40d7bc
  40d7e0:	out    dx,eax
  40d7e1:	dec    edi
  40d7e2:	stos   BYTE PTR es:[edi],al
  40d7e3:	leave  
  40d7e4:	pusha  
  40d7e5:	sahf   
  40d7e6:	imul   edx,DWORD PTR [eax-0x66617edd],0xffffffd0
  40d7ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ee:	pop    ds
  40d7ef:	inc    ebp
  40d7f0:	push   eax
  40d7f1:	loop   0x40d859
  40d7f3:	lahf   
  40d7f4:	cmc    
  40d7f5:	and    eax,0x52db0d33
  40d7fa:	jmp    0x5054:0xcc38db5a
  40d801:	fimul  WORD PTR [eax-0x75092142]
  40d807:	in     al,dx
  40d808:	jg     0x40d859
  40d80a:	fild   WORD PTR [edx-0x59]
  40d80d:	loope  0x40d874
  40d80f:	imul   esp,DWORD PTR [ecx+0x6d],0x53
  40d813:	mov    ebp,0x8027833c
  40d818:	push   edi
  40d819:	cdq    
  40d81a:	mov    dh,0xab
  40d81c:	xor    al,0xe2
  40d81e:	push   0xffffffd3
  40d820:	rep outs dx,DWORD PTR ds:[esi]
  40d822:	mov    ebp,0x75252d97
  40d827:	sub    BYTE PTR [eax+0x18],0x2e
  40d82b:	jo     0x40d7ce
  40d82d:	jecxz  0x40d7d1
  40d82f:	clc    
  40d830:	repnz outs dx,BYTE PTR ds:[esi]
  40d832:	rol    BYTE PTR [ebx-0x4c],0x61
  40d836:	loopne 0x40d833
  40d838:	cmp    ebx,DWORD PTR [edx]
  40d83a:	or     eax,0xf791e883
  40d83f:	in     al,0x84
  40d841:	add    dh,ah
  40d843:	xor    eax,0x6569af52
  40d848:	xor    dl,ch
  40d84a:	scas   al,BYTE PTR es:[edi]
  40d84b:	lods   al,BYTE PTR ds:[esi]
  40d84c:	and    BYTE PTR [eax-0x1d],dh
  40d84f:	imul   esi,DWORD PTR [esi+edi*4],0x6ed9c4f8
  40d856:	cmp    eax,0xe547ca0c
  40d85b:	in     al,dx
  40d85c:	add    dl,BYTE PTR [eax+0x30]
  40d85f:	cmp    dh,BYTE PTR [esi]
  40d861:	mov    dh,0x69
  40d863:	xchg   ebp,eax
  40d864:	and    al,0xdd
  40d866:	and    esi,DWORD PTR [edi-0x6efec47f]
  40d86c:	cmp    DWORD PTR [edi+0x2],0xffffffd8
  40d870:	inc    ebx
  40d871:	aad    0x26
  40d873:	and    ecx,DWORD PTR [ecx+0x27]
  40d876:	pop    edi
  40d877:	outs   dx,DWORD PTR ds:[esi]
  40d878:	push   esi
  40d879:	(bad)  
  40d87a:	mov    al,0x39
  40d87c:	adc    al,0xf7
  40d87e:	push   ds
  40d87f:	aas    
  40d880:	call   0xc15a:0x98e45b25
  40d887:	rcr    BYTE PTR [ebx-0x16fdc3d5],1
  40d88d:	in     al,0x16
  40d88f:	dec    esp
  40d890:	inc    ebp
  40d891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d892:	sub    ebx,edx
  40d894:	arpl   WORD PTR [ebx-0xa],sp
  40d897:	pushf  
  40d898:	cmp    eax,0x5e
  40d89b:	xchg   esi,eax
  40d89c:	stc    
  40d89d:	or     DWORD PTR [ecx],edi
  40d89f:	sbb    al,0x7
  40d8a1:	outs   dx,DWORD PTR ds:[esi]
  40d8a2:	dec    edi
  40d8a3:	sub    DWORD PTR [eax-0x4],esi
  40d8a6:	jne    0x40d892
  40d8a8:	inc    edx
  40d8a9:	(bad)  
  40d8aa:	sub    dh,bh
  40d8ac:	xor    dl,BYTE PTR [edx+edi*4+0x67]
  40d8b0:	sub    BYTE PTR [esi-0x24],bl
  40d8b3:	(bad)  
  40d8b4:	push   esi
  40d8b5:	mov    dl,0xaf
  40d8b7:	or     BYTE PTR [edi],cl
  40d8b9:	out    0xd1,al
  40d8bb:	add    al,0x9e
  40d8bd:	adc    ah,BYTE PTR [ecx+0x6d482c1f]
  40d8c3:	and    al,bh
  40d8c5:	or     BYTE PTR [eax+0x4e],ch
  40d8c8:	push   esi
  40d8c9:	stos   BYTE PTR es:[edi],al
  40d8ca:	adc    ch,al
  40d8cc:	mov    dl,0xe8
  40d8ce:	jl     0x40d862
  40d8d0:	add    dl,cl
  40d8d2:	dec    ebp
  40d8d3:	lods   eax,DWORD PTR ds:[esi]
  40d8d4:	and    dh,al
  40d8d6:	push   edx
  40d8d7:	dec    edx
  40d8d8:	pop    ecx
  40d8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8da:	cmc    
  40d8db:	push   es
  40d8dc:	stos   DWORD PTR es:[edi],eax
  40d8dd:	xchg   esp,eax
  40d8de:	mov    ds:0xa388eba9,eax
  40d8e3:	stc    
  40d8e4:	mov    al,ds:0x7f1b4ae9
  40d8e9:	fidiv  DWORD PTR [ebp-0xae31c8c]
  40d8ef:	push   esi
  40d8f0:	fild   DWORD PTR [edx+ebx*8+0x30eeaac9]
  40d8f7:	cli    
  40d8f8:	push   es
  40d8f9:	icebp  
  40d8fa:	rol    BYTE PTR [edi-0x4c30f642],0xf7
  40d901:	leave  
  40d902:	push   ss
  40d903:	(bad)  
  40d904:	mov    cs,WORD PTR [eax+0x27]
  40d907:	pop    ecx
  40d908:	mov    eax,0x632f78f2
  40d90d:	mov    BYTE PTR [ecx-0x4d52d0e1],bl
  40d913:	sub    BYTE PTR [edx+eax*4+0x6289e848],0xde
  40d91b:	mov    bh,0xf7
  40d91d:	inc    esp
  40d91e:	lods   eax,DWORD PTR ds:[esi]
  40d91f:	mov    al,0xcc
  40d921:	rol    DWORD PTR ds:0x1dec707d,0x34
  40d928:	push   0xffffffca
  40d92a:	mov    al,0x49
  40d92c:	jno    0x40d97d
  40d92e:	ret    0x5428
  40d931:	outs   dx,DWORD PTR ds:[esi]
  40d932:	(bad)  
  40d933:	jmp    0x4b29:0x81778625
  40d93a:	mov    ecx,0x3fe53dca
  40d93f:	sub    DWORD PTR [ecx+0x30],ebx
  40d942:	mov    ebx,0xabe95e40
  40d947:	xchg   edi,eax
  40d949:	fs mov cl,0xa4
  40d94c:	pop    esp
  40d94d:	dec    ebp
  40d94e:	fxam   
  40d950:	fxsave [ecx-0x6c]
  40d954:	inc    esp
  40d955:	pop    esp
  40d956:	sbb    DWORD PTR [ebx+edx*1],edx
  40d959:	enter  0x6dad,0x24
  40d95d:	mov    dl,0xc7
  40d95f:	cs xchg esp,eax
  40d961:	mov    eax,0x32d8fe2d
  40d966:	push   eax
  40d967:	call   0x1a12:0xb30f2aa5
  40d96e:	lahf   
  40d96f:	std    
  40d970:	retf   0x277a
  40d973:	mov    dh,0xdd
  40d975:	cmp    bh,BYTE PTR [edi]
  40d977:	sbb    BYTE PTR [edx+ecx*1],al
  40d97a:	push   0x76f645d0
  40d97f:	dec    ebp
  40d980:	mov    ds:0xeb121e7c,eax
  40d985:	pop    ebx
  40d986:	out    dx,al
  40d987:	(bad)  
  40d989:	inc    edx
  40d98a:	mov    ds:0x5de9d84f,al
  40d98f:	mov    eax,ds:0x2c49f230
  40d994:	adc    DWORD PTR [edi-0xb],edx
  40d997:	(bad)
  40d99a:	xor    eax,0xe7d1bf42
  40d99f:	inc    edx
  40d9a0:	cmp    eax,DWORD PTR [ebx-0x19]
  40d9a3:	mov    dh,0x3b
  40d9a5:	cmp    eax,0xd6ebf434
  40d9aa:	dec    esi
  40d9ab:	(bad)  
  40d9ac:	fisttp WORD PTR [esi+0x78491779]
  40d9b2:	jmp    0x40da18
  40d9b4:	lea    eax,[ebp-0xf]
  40d9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9b8:	popa   
  40d9b9:	outs   dx,DWORD PTR ds:[esi]
  40d9ba:	adc    eax,0x80274db0
  40d9bf:	(bad)  
  40d9c0:	pop    ds
  40d9c1:	arpl   si,di
  40d9c3:	inc    esi
  40d9c4:	sti    
  40d9c5:	mov    al,ds:0x8f8fe3ad
  40d9ca:	scas   al,BYTE PTR es:[edi]
  40d9cb:	test   DWORD PTR [edi-0x71],esp
  40d9ce:	mov    cl,0xf0
  40d9d0:	inc    edi
  40d9d1:	lahf   
  40d9d2:	aas    
  40d9d3:	shl    DWORD PTR ds:0x4bc34875,1
  40d9d9:	and    dl,0x7b
  40d9dc:	scas   al,BYTE PTR es:[edi]
  40d9dd:	pushf  
  40d9de:	jmp    0x483a:0x2db75946
  40d9e5:	fst    DWORD PTR [edi-0x53]
  40d9e8:	ss leave 
  40d9ea:	retf   0x3971
  40d9ed:	daa    
  40d9ee:	xchg   eax,esi
  40d9f0:	ins    BYTE PTR es:[edi],dx
  40d9f1:	sbb    bl,cl
  40d9f3:	ret    
  40d9f4:	and    dh,BYTE PTR [edx-0xd]
  40d9f7:	xchg   esp,eax
  40d9f8:	mov    bh,0x66
  40d9fa:	das    
  40d9fb:	inc    esp
  40d9fc:	fs add eax,0xba423236
  40da02:	or     dh,BYTE PTR [edx+esi*1]
  40da05:	add    DWORD PTR [edi-0x73],edi
  40da08:	pop    eax
  40da09:	mov    esi,0xaf635a67
  40da0e:	sbb    BYTE PTR [ecx+0x2a],0x97
  40da12:	jns    0x40da3c
  40da14:	addr16 mov eax,ds:0xc48
  40da18:	xchg   edi,eax
  40da19:	je     0x40d9c1
  40da1b:	scas   eax,DWORD PTR es:[edi]
  40da1c:	mov    WORD PTR [edx],gs
  40da1e:	jne    0x40da0c
  40da20:	push   ecx
  40da21:	outs   dx,DWORD PTR ds:[esi]
  40da22:	rcr    BYTE PTR [edi*2-0x4de49120],cl
  40da29:	xor    eax,0x83e4c6d1
  40da2e:	aam    0x5e
  40da30:	cli    
  40da31:	cmp    edi,0x4
  40da34:	jge    0x40da4d
  40da36:	sbb    esp,esi
  40da38:	xor    DWORD PTR es:[esi+edx*1-0x1e9ee3e6],eax
  40da40:	pop    esp
  40da41:	dec    esi
  40da42:	pop    ds
  40da43:	pop    es
  40da44:	loop   0x40da75
  40da46:	add    al,0xdd
  40da48:	scas   al,BYTE PTR es:[edi]
  40da49:	test   DWORD PTR [ebp+0x558a1012],esp
  40da4f:	jnp    0x40da53
  40da51:	cli    
  40da52:	push   ds
  40da53:	add    DWORD PTR [eax],esp
  40da55:	adc    BYTE PTR [ecx-0x33333581],ah
  40da5b:	mov    al,ds:0xaa06cf61
  40da60:	pusha  
  40da61:	cmc    
  40da62:	mov    eax,ds:0x278b7506
  40da67:	or     dh,bh
  40da69:	and    bl,BYTE PTR [ecx]
  40da6b:	mov    ebp,0xbf5e07e5
  40da70:	repnz mov cl,0xae
  40da73:	sub    eax,0xaed1df85
  40da78:	(bad)  
  40da7a:	adc    BYTE PTR [eax],bl
  40da7c:	fwait
  40da7d:	dec    BYTE PTR [ecx]
  40da7f:	cs iret 
  40da81:	add    edi,DWORD PTR ds:0x6194437
  40da87:	mov    cl,bh
  40da89:	xchg   ebp,eax
  40da8a:	in     eax,dx
  40da8b:	not    BYTE PTR ds:0xcdb8bee9
  40da91:	add    DWORD PTR [ebx+edi*2-0x7de0d220],edi
  40da98:	push   ecx
  40da99:	adc    cl,cl
  40da9b:	jne    0x40dabe
  40da9d:	xlat   BYTE PTR ds:[ebx]
  40da9e:	sbb    DWORD PTR ds:[ebx+0x18ee0621],eax
  40daa5:	rol    DWORD PTR ds:0x578a5d16,1
  40daab:	cmp    dl,dh
  40daad:	aam    0xc
  40daaf:	mov    ch,0x1b
  40dab1:	cmc    
  40dab2:	jg     0x40dab1
  40dab4:	in     eax,dx
  40dab5:	lds    edx,FWORD PTR [eax-0x4b53c91]
  40dabb:	push   ecx
  40dabc:	or     al,ah
  40dabe:	jae    0x40da72
  40dac0:	pop    esp
  40dac1:	push   ss
  40dac2:	leave  
  40dac3:	(bad)  
  40dac5:	mov    cl,0x6c
  40dac7:	and    edi,DWORD PTR [edi]
  40dac9:	adc    ch,cl
  40dacb:	jno    0x40daae
  40dacd:	leave  
  40dace:	aad    0xcc
  40dad0:	push   esi
  40dad1:	jge    0x40db16
  40dad3:	loope  0x40db39
  40dad5:	cli    
  40dad6:	add    BYTE PTR [edi+ebx*8],bl
  40dad9:	je     0x40da77
  40dadb:	shr    BYTE PTR [ebx+ebp*2+0x2f554740],0x91
  40dae3:	imul   edx,edi,0x29335220
  40dae9:	add    esp,0x3b
  40daec:	in     eax,dx
  40daed:	cmp    dl,BYTE PTR [ebx]
  40daef:	(bad)  
  40daf0:	xlat   BYTE PTR ds:[ebx]
  40daf1:	or     dl,BYTE PTR [eax+ecx*4+0x10255528]
  40daf8:	jmp    0x9ca282d8
  40dafd:	mov    edx,DWORD PTR [esi+0x1e]
  40db00:	nop
  40db01:	nop
  40db02:	mov    bl,0x60
  40db04:	out    0xdd,eax
  40db06:	cld    
  40db07:	jno    0x40db41
  40db09:	sbb    eax,ebx
  40db0b:	xchg   edx,eax
  40db0c:	imul   ebp,DWORD PTR [edi],0xffffff88
  40db0f:	in     eax,0xe5
  40db11:	pop    edi
  40db12:	xchg   esp,eax
  40db13:	das    
  40db14:	add    cl,bh
  40db16:	test   eax,0x45502d6d
  40db1b:	aaa    
  40db1c:	inc    esp
  40db1d:	push   0x971187bf
  40db22:	pop    esp
  40db23:	xor    esp,DWORD PTR [eax]
  40db25:	or     eax,0xf42fd620
  40db2a:	mov    ch,0x64
  40db2c:	add    eax,0xe72fa908
  40db31:	or     esp,esp
  40db33:	jmp    0x40db00
  40db35:	xchg   edi,eax
  40db36:	mov    ch,0xef
  40db38:	daa    
  40db39:	rcr    BYTE PTR [edx+0x1740bc7c],cl
  40db3f:	lock or al,0x19
  40db42:	mov    BYTE PTR [esi+0x2728f668],dl
  40db48:	arpl   WORD PTR [ecx],si
  40db4a:	xchg   esp,eax
  40db4b:	fcmovu st,st(1)
  40db4d:	mov    esi,0xc2d43713
  40db52:	(bad)  
  40db53:	cmp    eax,DWORD PTR [eax+0x1e928b29]
  40db59:	mov    esi,0x9841c82c
  40db5e:	lds    edi,FWORD PTR [esi+eax*8+0x71]
  40db62:	nop
  40db63:	cmc    
  40db64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db65:	jg     0x40db83
  40db67:	stc    
  40db68:	jns    0x40db24
  40db6a:	ins    BYTE PTR es:[edi],dx
  40db6b:	inc    edx
  40db6c:	ja     0x40db3a
  40db6e:	scas   eax,DWORD PTR es:[edi]
  40db6f:	shr    DWORD PTR [edx-0x1],cl
  40db72:	xchg   ecx,eax
  40db73:	ins    DWORD PTR es:[edi],dx
  40db74:	and    al,0x8f
  40db76:	pusha  
  40db77:	rol    ecx,1
  40db79:	push   ebp
  40db7a:	fsub   QWORD PTR [esi-0x778b993d]
  40db80:	loop   0x40dbc0
  40db82:	and    dl,dl
  40db84:	jnp    0x40dbfa
  40db86:	mov    bl,0x28
  40db88:	sbb    bl,dh
  40db8a:	test   eax,0x864b54e3
  40db8f:	or     ecx,DWORD PTR [esi]
  40db91:	sar    BYTE PTR [edx+0x2d],1
  40db94:	stos   DWORD PTR es:[edi],eax
  40db95:	xchg   esi,eax
  40db96:	cmp    eax,0x5b4c0502
  40db9b:	ds retf 0x6aa
  40db9f:	mov    edi,0x6813061d
  40dba4:	hlt    
  40dba5:	xor    DWORD PTR [ecx-0x1cf15beb],ecx
  40dbab:	scas   al,BYTE PTR es:[edi]
  40dbac:	xchg   ebp,eax
  40dbad:	jecxz  0x40dba2
  40dbaf:	jne    0x40dbbb
  40dbb1:	outs   dx,DWORD PTR ds:[esi]
  40dbb2:	cwde   
  40dbb3:	mov    ds:0xc524ccef,al
  40dbb8:	jno    0x40dc06
  40dbba:	push   edi
  40dbbb:	lods   eax,DWORD PTR ds:[esi]
  40dbbc:	js     0x40dbfa
  40dbbe:	cmp    esp,DWORD PTR [edi]
  40dbc0:	imul   edx,DWORD PTR [eax-0x54],0xffffffc2
  40dbc4:	sub    bh,dh
  40dbc6:	jb     0x40dbc8
  40dbc8:	cdq    
  40dbc9:	push   edi
  40dbca:	dec    eax
  40dbcb:	push   edx
  40dbcc:	push   ecx
  40dbcd:	in     eax,0xfa
  40dbcf:	and    BYTE PTR [ebx+0x33],bl
  40dbd2:	stc    
  40dbd3:	into   
  40dbd4:	sbb    BYTE PTR [esi-0x28],dl
  40dbd7:	les    ecx,FWORD PTR [eax+0x98898cd]
  40dbdd:	cmp    eax,0x12c3570a
  40dbe2:	and    eax,0x15f687fc
  40dbe7:	(bad)  
  40dbe8:	cmc    
  40dbe9:	mov    ah,0xc1
  40dbeb:	(bad)  
  40dbec:	cmc    
  40dbed:	xor    bh,BYTE PTR [edx]
  40dbef:	(bad)  
  40dbf0:	dec    edx
  40dbf1:	cmp    BYTE PTR [edx-0x695af405],bl
  40dbf7:	adc    cl,BYTE PTR [ebx+0x49b60f63]
  40dbfd:	test   DWORD PTR [esi+ebp*1],esi
  40dc00:	or     al,0x4f
  40dc02:	push   ss
  40dc03:	push   edx
  40dc04:	shl    DWORD PTR [ebx+0x1580cee8],cl
  40dc0a:	cmp    al,0x94
  40dc0c:	inc    ecx
  40dc0d:	xchg   BYTE PTR [edi],al
  40dc0f:	inc    ebp
  40dc10:	adc    al,0xf3
  40dc12:	push   0xffffffed
  40dc14:	dec    esp
  40dc15:	dec    ecx
  40dc16:	push   eax
  40dc17:	in     al,dx
  40dc18:	add    ebx,DWORD PTR [esi*1-0x53aff54d]
  40dc1f:	imul   edi,DWORD PTR [edi-0x1e32d7b0],0x51
  40dc26:	sbb    BYTE PTR [eax-0x30062a89],al
  40dc2c:	rcl    dh,1
  40dc2e:	mov    BYTE PTR [edx-0xd],ah
  40dc31:	mov    ah,0x3f
  40dc33:	cdq    
  40dc34:	into   
  40dc35:	cmp    BYTE PTR [edi+eiz*1-0x7f1b1b2e],cl
  40dc3c:	push   0xffffff82
  40dc3e:	mov    esp,0x96b3987a
  40dc43:	jmp    0x40dc09
  40dc45:	outs   dx,DWORD PTR ds:[esi]
  40dc46:	xlat   BYTE PTR ds:[ebx]
  40dc47:	sahf   
  40dc48:	or     al,bl
  40dc4a:	repnz inc esp
  40dc4c:	ret    0xf787
  40dc4f:	sahf   
  40dc50:	and    al,0x44
  40dc52:	pop    esi
  40dc53:	jle    0x40dc13
  40dc55:	cs xchg edx,eax
  40dc57:	in     eax,0x74
  40dc59:	test   al,0x39
  40dc5b:	(bad)  
  40dc5c:	jae    0x40dcb2
  40dc5e:	mov    edi,0x1b7b3d60
  40dc63:	jmp    0x40dc09
  40dc65:	cmp    BYTE PTR [ecx+0x76],0xe8
  40dc69:	pop    eax
  40dc6a:	sti    
  40dc6b:	std    
  40dc6c:	fcomi  st,st(7)
  40dc6e:	in     al,dx
  40dc6f:	pop    ecx
  40dc70:	adc    ch,ch
  40dc72:	bound  esp,QWORD PTR [esi-0x24]
  40dc75:	mov    ah,0xf2
  40dc77:	aaa    
  40dc78:	std    
  40dc79:	iret   
  40dc7a:	jl     0x40dc9d
  40dc7c:	call   0x4497c821
  40dc81:	test   al,0x34
  40dc83:	and    al,0x91
  40dc85:	hlt    
  40dc86:	lea    esp,[ecx]
  40dc88:	xor    BYTE PTR [ebp+0x6b80599a],dh
  40dc8e:	xchg   ecx,eax
  40dc8f:	xor    DWORD PTR [eax+0x2e1facea],0x99754b67
  40dc99:	pop    DWORD PTR [ebp+0x1b15f240]
  40dc9f:	ret    0x6164
  40dca2:	sbb    DWORD PTR [edi],ecx
  40dca4:	adc    DWORD PTR [edi+0x72],0xffffffa7
  40dca8:	or     DWORD PTR [eax+0x57ec44b5],ebp
  40dcae:	sub    ah,ch
  40dcb0:	shl    DWORD PTR [eax+0x29],cl
  40dcb3:	mov    edx,0x253da8a3
  40dcb8:	sub    BYTE PTR [esi+0x2b],cl
  40dcbb:	ds pop edx
  40dcbd:	fidiv  DWORD PTR [edx]
  40dcbf:	pop    edx
  40dcc0:	fwait
  40dcc1:	sti    
  40dcc2:	pop    ds
  40dcc3:	inc    esi
  40dcc4:	xchg   esp,eax
  40dcc5:	(bad)  
  40dcc7:	cmovae ebx,esp
  40dcca:	mov    ds:0x402aecb7,eax
  40dccf:	fistp  QWORD PTR [edi+0x5a]
  40dcd2:	sub    BYTE PTR [ebp+0x3b2ccf02],ah
  40dcd8:	jnp    0x40dd55
  40dcda:	pop    eax
  40dcdb:	nop
  40dcdc:	je     0x40dd25
  40dcde:	xchg   DWORD PTR [edi*4-0x5d509c24],ebp
  40dce5:	fdivr  DWORD PTR [esi-0x12]
  40dce8:	mov    ch,0xdb
  40dcea:	das    
  40dceb:	lods   eax,DWORD PTR ds:[esi]
  40dcec:	jecxz  0x40dcf9
  40dcee:	fs fwait
  40dcf0:	popf   
  40dcf1:	pushf  
  40dcf2:	scas   al,BYTE PTR es:[edi]
  40dcf3:	repz mov al,0xc4
  40dcf6:	cmp    BYTE PTR [esi+0x15],dl
  40dcf9:	ret    
  40dcfa:	fidiv  WORD PTR ss:[ebx+0x65]
  40dcfe:	outs   dx,BYTE PTR ds:[esi]
  40dcff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd00:	pop    esi
  40dd01:	pop    edi
  40dd02:	mov    esp,0xb6fee8c2
  40dd07:	ror    DWORD PTR [ecx+0x2b],1
  40dd0a:	daa    
  40dd0b:	enter  0xcd1a,0x8f
  40dd0f:	leave  
  40dd10:	jne    0x40dd05
  40dd12:	fwait
  40dd13:	and    ebx,DWORD PTR [eax-0x5dd3c0f5]
  40dd19:	(bad)  
  40dd1a:	and    al,0x33
  40dd1c:	inc    edi
  40dd1d:	jnp    0x40dd54
  40dd1f:	cmp    esi,DWORD PTR [ebp+0x51]
  40dd22:	repnz dec eax
  40dd24:	sahf   
  40dd25:	add    esp,eax
  40dd27:	adc    eax,DWORD PTR [ebp-0x55]
  40dd2a:	xchg   ebp,eax
  40dd2b:	push   cs
  40dd2c:	aam    0x7e
  40dd2e:	jbe    0x40dd30
  40dd30:	inc    ecx
  40dd31:	pop    es
  40dd32:	dec    esp
  40dd33:	and    DWORD PTR [ecx+0x1d28608f],eax
  40dd39:	lods   al,BYTE PTR ds:[esi]
  40dd3a:	xchg   DWORD PTR [ebp-0x25],esi
  40dd3d:	jge    0x40dd49
  40dd3f:	and    al,0xd6
  40dd41:	mov    bl,ah
  40dd43:	sub    bl,BYTE PTR [ebx-0xc]
  40dd46:	(bad)  
  40dd48:	test   eax,0x13d8245b
  40dd4d:	jmp    0xda05:0xa73a970a
  40dd54:	sbb    bh,BYTE PTR [edi-0x73024ff4]
  40dd5a:	popf   
  40dd5b:	ret    0x487f
  40dd5e:	in     eax,dx
  40dd5f:	or     al,0x58
  40dd61:	add    DWORD PTR [edi+0x6f7a1e56],ecx
  40dd67:	ror    BYTE PTR ds:[edx],1
  40dd6a:	fwait
  40dd6b:	test   eax,0x7ff799ef
  40dd70:	sti    
  40dd71:	aas    
  40dd72:	pop    ds
  40dd73:	call   0x9dc4133c
  40dd78:	pop    esi
  40dd79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd7a:	xchg   BYTE PTR [ebx+0x73],dh
  40dd7d:	jne    0x40dd0b
  40dd7f:	ins    DWORD PTR es:[edi],dx
  40dd80:	(bad)  
  40dd81:	cmp    al,BYTE PTR ds:0x45cd8caf
  40dd87:	mov    ecx,0x275c0bcc
  40dd8c:	and    DWORD PTR [esi+0x7fee3015],edi
  40dd92:	loope  0x40de0f
  40dd94:	mov    al,ds:0x8de3685a
  40dd99:	jmp    0xfae3:0x712166db
  40dda0:	mov    edi,0xe944edee
  40dda5:	push   esi
  40dda6:	not    bh
  40dda8:	dec    ebx
  40dda9:	mov    edx,0xbe3575de
  40ddae:	adc    BYTE PTR [ebp-0x60],bh
  40ddb1:	sub    BYTE PTR [edi],dl
  40ddb3:	and    ah,BYTE PTR [ecx]
  40ddb5:	pop    ebp
  40ddb6:	into   
  40ddb7:	(bad)  
  40ddb8:	lahf   
  40ddb9:	stc    
  40ddba:	adc    al,0xf7
  40ddbc:	jmp    0x40dde6
  40ddbe:	(bad)  
  40ddbf:	sub    eax,0x1c29bff9
  40ddc4:	xor    ah,dl
  40ddc6:	pop    ss
  40ddc7:	jnp    0x40ddfe
  40ddc9:	and    al,0x49
  40ddcb:	xchg   edi,eax
  40ddcc:	fistp  DWORD PTR [edx]
  40ddce:	push   cs
  40ddcf:	push   ecx
  40ddd0:	pop    esi
  40ddd1:	sbb    eax,0x9b49739b
  40ddd6:	aad    0xc4
  40ddd8:	int    0x18
  40ddda:	sbb    DWORD PTR ds:0x686e0244,esp
  40dde0:	ins    BYTE PTR es:[edi],dx
  40dde1:	and    eax,0x7170ad6e
  40dde6:	pop    esp
  40dde7:	aas    
  40dde8:	mov    ebx,0x8b132f4e
  40dded:	leave  
  40ddee:	aas    
  40ddef:	fistp  DWORD PTR [ecx]
  40ddf1:	push   es
  40ddf2:	call   0x7ec8eb4c
  40ddf7:	jmp    0xef916094
  40ddfc:	add    ecx,DWORD PTR [ebp-0x6]
  40ddff:	cmp    eax,0x2c7aef16
  40de04:	jl     0x40ddba
  40de06:	shl    BYTE PTR [eax],1
  40de08:	mul    ch
  40de0a:	in     eax,0x85
  40de0c:	inc    ecx
  40de0d:	pop    edi
  40de0e:	lds    esp,FWORD PTR [eax]
  40de10:	and    esp,DWORD PTR [esi]
  40de12:	ret    
  40de13:	or     BYTE PTR [ebx+0x48260de6],ah
  40de19:	sbb    eax,0x355eb0cf
  40de1e:	fwait
  40de1f:	lds    eax,FWORD PTR ds:0xed3cf8ff
  40de25:	or     DWORD PTR [edx-0x13],esi
  40de28:	je     0x40de22
  40de2a:	ss push 0x3cf6218a
  40de30:	sub    DWORD PTR [ecx+0x7c],edi
  40de33:	push   ebx
  40de34:	jp     0x40de06
  40de36:	mov    al,0x69
  40de38:	sub    dh,BYTE PTR [ebx+0x1a1390b6]
  40de3e:	div    DWORD PTR [edi+0x74314037]
  40de44:	push   ss
  40de45:	mov    ds:0x2e0d8594,eax
  40de4a:	cmp    DWORD PTR [ebx+ebx*1+0x7d23ebab],ebp
  40de51:	in     eax,0x7a
  40de53:	sub    ecx,DWORD PTR [ebx]
  40de55:	fwait
  40de56:	data16 add cl,BYTE PTR [edx]
  40de59:	hlt    
  40de5a:	sbb    al,0xca
  40de5c:	(bad)  
  40de5d:	jbe    0x40de98
  40de5f:	lods   al,BYTE PTR fs:[esi]
  40de61:	xchg   esp,eax
  40de62:	ja     0x40ddea
  40de64:	sahf   
  40de65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de66:	mov    al,0x79
  40de68:	pop    edi
  40de69:	mov    esp,0xb739f887
  40de6e:	in     eax,0x81
  40de70:	inc    ebp
  40de71:	dec    edi
  40de72:	mov    bl,0x8a
  40de74:	not    BYTE PTR [ebx]
  40de76:	call   0x69b206e
  40de7b:	and    esi,ebp
  40de7d:	xor    al,0x50
  40de7f:	pop    ss
  40de80:	repz push ss
  40de82:	jl     0x40de40
  40de84:	sub    DWORD PTR [esp+ebp*2+0x12],0xaae85ea2
  40de8c:	dec    ebp
  40de8d:	xchg   edi,eax
  40de8e:	cmp    DWORD PTR [ecx-0x5a],0xbd943555
  40de95:	icebp  
  40de96:	ret    
  40de97:	lds    esi,FWORD PTR [edx]
  40de99:	dec    eax
  40de9a:	aaa    
  40de9b:	mov    ds:0x902333fb,eax
  40dea0:	(bad)  
  40dea1:	pop    edi
  40dea2:	push   es
  40dea3:	jne    0x40de29
  40dea5:	rol    BYTE PTR [esi+0x2c],cl
  40dea8:	pop    ebx
  40dea9:	sub    BYTE PTR [edx+0x7ed927b5],al
  40deaf:	fwait
  40deb0:	jbe    0x40df1f
  40deb2:	loopne 0x40dea5
  40deb4:	rol    DWORD PTR [edx],1
  40deb6:	fnstsw WORD PTR [ecx+0x1c81058b]
  40debc:	push   esp
  40debd:	add    DWORD PTR [esi+0x67f6e67c],0x6c
  40dec4:	adc    bl,BYTE PTR [eax+0x73e59d8c]
  40deca:	add    eax,0xbacb4fb8
  40decf:	pusha  
  40ded0:	(bad)  
  40ded2:	(bad)  
  40ded3:	push   ebx
  40ded4:	push   esi
  40ded5:	or     dl,BYTE PTR [ebp-0x1a]
  40ded8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded9:	cs push 0x6edac067
  40dedf:	xor    eax,edi
  40dee1:	mov    ?,WORD PTR [ecx+0x6a]
  40dee4:	jp     0x40dea4
  40dee6:	mov    esi,0xaf7d6a74
  40deeb:	fdiv   DWORD PTR [esp+edi*8]
  40deee:	xchg   ebx,eax
  40deef:	hlt    
  40def0:	dec    ecx
  40def1:	(bad)  
  40def2:	into   
  40def3:	ret    0xb55f
  40def6:	inc    ecx
  40def7:	ins    DWORD PTR es:[edi],dx
  40def8:	pop    ebp
  40def9:	xor    eax,0xb638edc9
  40defe:	jbe    0x40de82
  40df00:	inc    ecx
  40df01:	ret    0x4ce1
  40df04:	add    DWORD PTR [edx+0x85ad02d],esp
  40df0a:	push   edx
  40df0b:	pop    ds
  40df0c:	out    0xd0,al
  40df0e:	sbb    bl,BYTE PTR [eax-0x4e83017a]
  40df14:	pop    edx
  40df15:	sub    eax,0xb0ccdd5b
  40df1a:	(bad)  
  40df1b:	cdq    
  40df1c:	pop    esp
  40df1d:	(bad)  
  40df1e:	jnp    0x40df44
  40df20:	pop    esp
  40df21:	jmp    DWORD PTR [esi-0x4c5990ff]
  40df27:	mov    dh,0x8f
  40df29:	adc    BYTE PTR [edx],0xad
  40df2c:	mov    ebx,0xb28d7434
  40df31:	push   ds
  40df32:	(bad)  
  40df33:	and    al,0x75
  40df35:	mov    edi,0x44878af4
  40df3a:	outs   dx,DWORD PTR ds:[esi]
  40df3b:	int3   
  40df3c:	into   
  40df3d:	adc    al,dh
  40df3f:	inc    ecx
  40df40:	das    
  40df41:	pop    esi
  40df42:	dec    edi
  40df43:	sbb    DWORD PTR [eax-0x49],esi
  40df46:	ror    DWORD PTR [ecx+edi*2],0x29
  40df4a:	bound  edx,QWORD PTR ds:[edi]
  40df4d:	or     edx,DWORD PTR [ebx+edi*1]
  40df50:	mov    ecx,0xf408116d
  40df55:	mov    ds:0xaf01e5e5,eax
  40df5a:	jmp    0xb75:0x585a090a
  40df61:	int    0xf2
  40df63:	xchg   ebx,eax
  40df64:	xchg   esi,eax
  40df65:	sub    bh,BYTE PTR [edi]
  40df67:	lods   al,BYTE PTR ds:[esi]
  40df68:	dec    edx
  40df69:	mov    ds:0x167ecf82,eax
  40df6e:	stos   DWORD PTR es:[edi],eax
  40df6f:	xchg   ebp,eax
  40df70:	cdq    
  40df71:	add    ch,ah
  40df73:	mov    ecx,0xd8e27191
  40df78:	sbb    BYTE PTR [ecx+0x79c595b9],ah
  40df7e:	lea    edi,[eax+0x74]
  40df81:	sub    BYTE PTR [ecx-0x2e7ca4ae],0x43
  40df88:	add    ebp,ebx
  40df8a:	xor    ah,0xf7
  40df8d:	xchg   edx,eax
  40df8e:	shl    DWORD PTR [esi-0xb0729e2],1
  40df94:	or     al,0xa0
  40df96:	inc    bx
  40df98:	cmp    al,0xc1
  40df9a:	xor    edx,DWORD PTR [eax-0x101f88f7]
  40dfa0:	imul   ecx,ebx,0x2ba14185
  40dfa6:	sub    DWORD PTR ds:[eax-0x7a],eax
  40dfaa:	xchg   ebx,eax
  40dfab:	ja     0x40df6a
  40dfad:	outs   dx,BYTE PTR ds:[esi]
  40dfae:	inc    esp
  40dfaf:	jns    0x40dfc7
  40dfb1:	inc    esi
  40dfb2:	das    
  40dfb3:	xchg   esi,eax
  40dfb4:	sub    al,0x72
  40dfb6:	repz aaa 
  40dfb8:	inc    ebp
  40dfb9:	add    bh,BYTE PTR [ecx]
  40dfbb:	ror    BYTE PTR [edi+0x5e6cb2e9],cl
  40dfc1:	xor    eax,0xd438ca23
  40dfc6:	jb     0x40e040
  40dfc8:	fstp   QWORD PTR [eax-0x204346df]
  40dfce:	or     dh,dl
  40dfd0:	dec    ecx
  40dfd1:	outs   dx,BYTE PTR ds:[esi]
  40dfd2:	out    dx,al
  40dfd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd4:	mul    ch
  40dfd6:	add    DWORD PTR [eax],0xef6164e9
  40dfdc:	mov    ebp,0x85f7be78
  40dfe1:	rcr    DWORD PTR [ebp-0x6fed020f],cl
  40dfe7:	and    eax,0x7c68a5e4
  40dfec:	or     al,0x7e
  40dfee:	and    ecx,DWORD PTR [edx]
  40dff0:	dec    edi
  40dff1:	(bad)  
  40dff2:	aas    
  40dff3:	lahf   
  40dff4:	test   eax,0x2e368459
  40dff9:	jl     0x40e024
  40dffb:	in     al,dx
  40dffc:	jno    0x40e040
  40dffe:	sbb    al,0x4a
  40e000:	(bad)  ds:0xab60d046
  40e006:	out    dx,al
  40e007:	fstp   QWORD PTR [ecx-0x58d560df]
  40e00d:	imul   edi,DWORD PTR [ebx],0x837bf2b8
  40e013:	adc    edx,esp
  40e015:	es inc ebp
  40e017:	je     0x40dff7
  40e019:	dec    esp
  40e01a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40e01c:	out    dx,eax
  40e01d:	clc    
  40e01e:	xchg   esi,eax
  40e01f:	and    eax,0xbc3b6b4
  40e024:	test   al,0xba
  40e026:	in     al,0xa3
  40e028:	jge    0x40e033
  40e02a:	out    0x91,eax
  40e02c:	cmp    bl,BYTE PTR [edi-0x5ef37118]
  40e032:	sbb    bh,BYTE PTR [eax]
  40e034:	mov    ds:0x7c4b5b6b,eax
  40e039:	inc    edi
  40e03a:	adc    ecx,esi
  40e03c:	imul   edi,eax,0x44
  40e03f:	shr    BYTE PTR ds:0x4e064e42,1
  40e045:	xchg   ebx,eax
  40e046:	push   edi
  40e047:	lea    ebx,[edx-0x63]
  40e04a:	clc    
  40e04b:	push   edi
  40e04c:	adc    bh,dh
  40e04e:	adc    BYTE PTR [ecx-0x14],cl
  40e051:	xchg   esi,eax
  40e052:	add    ebx,ebx
  40e054:	jne    0x40e05e
  40e056:	bound  edx,QWORD PTR [edx+0x6b]
  40e059:	sub    DWORD PTR [eax+ebx*4-0x14696aaf],ebx
  40e060:	pushf  
  40e061:	in     al,dx
  40e062:	xor    DWORD PTR [ecx+0x64],ebp
  40e065:	je     0x40e044
  40e067:	cli    
  40e068:	inc    ebx
  40e069:	cmp    bl,0x91
  40e06c:	cmp    DWORD PTR [edi-0x27],edx
  40e06f:	or     DWORD PTR [ebx-0x74],edx
  40e072:	fwait
  40e073:	sbb    ecx,DWORD PTR [ebp-0x5a51f4c3]
  40e079:	xchg   edx,eax
  40e07a:	adc    bh,bl
  40e07c:	cmp    ecx,DWORD PTR [ebp-0x35b88a0b]
  40e082:	sbb    BYTE PTR [ebx+0x61],ah
  40e085:	fs push ebp
  40e087:	pop    edx
  40e088:	adc    DWORD PTR [esi+0x20],0x3d861b26
  40e08f:	inc    edi
  40e090:	int3   
  40e091:	mov    WORD PTR [esi-0x6c40c327],es
  40e097:	sub    BYTE PTR [ebx-0x1d7d1768],bl
  40e09d:	sbb    dl,ah
  40e09f:	pop    ebx
  40e0a0:	(bad)  
  40e0a1:	aad    0x89
  40e0a3:	mov    ch,0xd
  40e0a5:	call   0xf4f85dbb
  40e0aa:	rol    DWORD PTR [esi],1
  40e0ac:	push   0xc8e3b62f
  40e0b1:	cmp    eax,0xcd94aa0
  40e0b6:	repz fwait
  40e0b8:	push   ds
  40e0b9:	xor    bl,bh
  40e0bb:	or     ebx,DWORD PTR [edx-0x3]
  40e0be:	(bad)  
  40e0bf:	jge    0x40e062
  40e0c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0c2:	in     eax,0x6e
  40e0c4:	ds ror cl,cl
  40e0c7:	mov    ds:0xad191f5f,al
  40e0cc:	seta   BYTE PTR [ebx+0x11ad701d]
  40e0d3:	jmp    0x43ec:0x868325a2
  40e0da:	xor    al,0x30
  40e0dc:	adc    eax,0x1c1169eb
  40e0e1:	ror    BYTE PTR cs:[eax-0x19e1b72d],1
  40e0e8:	hlt    
  40e0e9:	xor    BYTE PTR [eax-0x2d],dh
  40e0ec:	std    
  40e0ed:	nop
  40e0ee:	or     BYTE PTR [eax],dl
  40e0f0:	cmp    al,dh
  40e0f2:	loopne 0x40e0f4
  40e0f4:	cmp    BYTE PTR [ebx+0x2824ca82],bh
  40e0fa:	loopne 0x40e09b
  40e0fc:	sbb    dh,dl
  40e0fe:	out    dx,eax
  40e0ff:	bound  ebx,QWORD PTR [edx]
  40e101:	hlt    
  40e102:	in     eax,dx
  40e103:	ins    DWORD PTR es:[edi],dx
  40e104:	es mov ebp,0x837950c9
  40e10a:	imul   edx,DWORD PTR cs:[edx+0x23],0xae5ee508
  40e112:	pop    ebp
  40e113:	sub    al,0xf8
  40e115:	imul   eax,eax,0xffffff8d
  40e118:	jmp    0x40e09e
  40e11a:	add    BYTE PTR [ebp+eax*4+0x3f],0xa9
  40e11f:	js     0x40e0c7
  40e121:	stos   BYTE PTR es:[edi],al
  40e122:	jnp    0x40e0d8
  40e124:	push   edx
  40e125:	adc    al,0xc6
  40e127:	sahf   
  40e128:	xchg   esp,eax
  40e129:	dec    eax
  40e12a:	pushf  
  40e12b:	mov    dl,0xb0
  40e12d:	ja     0x40e18c
  40e12f:	or     ebp,esp
  40e131:	in     al,dx
  40e132:	mov    bh,0x79
  40e134:	iret   
  40e135:	inc    esi
  40e136:	jb     0x40e198
  40e138:	jmp    0x40e0dd
  40e13a:	int3   
  40e13b:	pop    ss
  40e13c:	cmc    
  40e13d:	dec    eax
  40e13e:	idiv   DWORD PTR [edx-0x90a053b]
  40e144:	in     eax,dx
  40e145:	iret   
  40e146:	pop    edx
  40e147:	sbb    BYTE PTR [edx],dh
  40e149:	jne    0x40e1a7
  40e14b:	xchg   ebp,eax
  40e14c:	mov    bh,0xb4
  40e14e:	inc    esp
  40e14f:	lock dec eax
  40e151:	into   
  40e152:	dec    esi
  40e153:	cmp    al,0x5a
  40e155:	xor    BYTE PTR [eax],0x41
  40e158:	lds    ecx,FWORD PTR [ecx-0x33b9d684]
  40e15e:	leave  
  40e15f:	icebp  
  40e160:	adc    eax,0x4e419de4
  40e165:	mov    ebx,0x83112d7b
  40e16a:	cs mov ah,0xd9
  40e16d:	pop    es
  40e16e:	add    ebp,ecx
  40e170:	lods   al,BYTE PTR ds:[esi]
  40e171:	jg     0x40e10b
  40e173:	jae    0x40e187
  40e175:	sbb    ecx,DWORD PTR [edi]
  40e177:	ror    DWORD PTR [ebp+0x75],0xc5
  40e17b:	inc    edi
  40e17c:	pop    ebx
  40e17d:	xlat   BYTE PTR ds:[ebx]
  40e17e:	or     eax,0x44d62cd5
  40e183:	mov    ebx,DWORD PTR [edi]
  40e185:	or     al,0x75
  40e187:	xchg   ecx,eax
  40e188:	test   BYTE PTR [edi+esi*2+0x26a015d0],0x96
  40e190:	loop   0x40e1b4
  40e192:	xor    DWORD PTR [esi],0xffffffe4
  40e195:	sub    DWORD PTR [ebx-0x18],0x61
  40e199:	or     esp,esi
  40e19b:	or     bl,BYTE PTR [eax]
  40e19d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e19e:	or     al,0x32
  40e1a0:	idiv   DWORD PTR [edi]
  40e1a2:	ret    
  40e1a3:	cmp    DWORD PTR [ebx],esi
  40e1a5:	pusha  
  40e1a6:	jbe    0x40e18c
  40e1a8:	mov    ch,0xec
  40e1aa:	mov    cl,0xa8
  40e1ac:	loop   0x40e188
  40e1ae:	jnp    0x40e1ec
  40e1b0:	jmp    0x23f8:0x4002ab73
  40e1b7:	outs   dx,BYTE PTR ds:[esi]
  40e1b8:	data16 daa 
  40e1ba:	dec    esp
  40e1bb:	mov    bh,0xda
  40e1bd:	icebp  
  40e1be:	pop    esi
  40e1bf:	dec    edx
  40e1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1c1:	push   edi
  40e1c2:	aas    
  40e1c3:	bnd jnp 0x40e1f6
  40e1c6:	add    eax,0x8c30608c
  40e1cb:	ja     0x40e204
  40e1cd:	(bad)  
  40e1ce:	pop    ebp
  40e1cf:	jne    0x40e22b
  40e1d1:	add    eax,0xf88eb3e6
  40e1d6:	xor    BYTE PTR [ebx-0x67],ah
  40e1d9:	js     0xca41c039
  40e1df:	xchg   edx,eax
  40e1e0:	loope  0x40e194
  40e1e2:	std    
  40e1e3:	test   eax,0xf1a70ace
  40e1e8:	cmp    BYTE PTR ds:0x73cf3d77,dl
  40e1ee:	xchg   ecx,eax
  40e1ef:	sahf   
  40e1f0:	jno    0x40e1bd
  40e1f2:	ret    
  40e1f3:	xor    DWORD PTR [eax],0xffffffae
  40e1f6:	repz dec esp
  40e1f8:	push   es
  40e1f9:	lahf   
  40e1fa:	addr16 sbb edi,edx
  40e1fd:	int    0xc7
  40e1ff:	jo     0x40e205
  40e201:	nop
  40e202:	adc    eax,0x8b6479b2
  40e207:	loop   0x40e279
  40e209:	jae    0x40e1e0
  40e20b:	xor    eax,DWORD PTR [esi+0x514cfcc3]
  40e211:	mov    esi,0xc517a354
  40e216:	cmp    al,0x1d
  40e218:	pop    ss
  40e219:	lds    esi,FWORD PTR [eax]
  40e21b:	push   ss
  40e21c:	inc    eax
  40e21d:	fadd   QWORD PTR [edi+0x40]
  40e220:	data16 aas 
  40e222:	in     al,0x46
  40e224:	outs   dx,DWORD PTR ds:[esi]
  40e225:	mov    dl,0xb1
  40e227:	adc    al,0x53
  40e229:	pop    esp
  40e22a:	js     0x40e1de
  40e22c:	mov    esp,0xa99995fb
  40e231:	sti    
  40e232:	dec    edx
  40e233:	sbb    eax,0x53c2f4a9
  40e238:	call   0xf4349a89
  40e23d:	repnz pop edx
  40e23f:	cmp    BYTE PTR ss:[ecx+0x5a],ch
  40e243:	js     0x40e226
  40e245:	in     al,dx
  40e246:	mov    ecx,DWORD PTR [esp+edi*1]
  40e249:	mov    edi,0x1963608f
  40e24e:	push   eax
  40e24f:	scas   al,BYTE PTR es:[edi]
  40e250:	sub    BYTE PTR [ebp-0x10],0xf5
  40e254:	mov    ah,0x87
  40e256:	push   esi
  40e257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e258:	xchg   edi,eax
  40e259:	mov    ds:0x4481a8d9,al
  40e25e:	mov    ds:0x843994f6,al
  40e263:	cdq    
  40e264:	int3   
  40e265:	mov    WORD PTR [eax+ecx*4+0x16],?
  40e269:	fcomp  DWORD PTR [ebx-0x265433e]
  40e26f:	lods   al,BYTE PTR ds:[esi]
  40e270:	loop   0x40e265
  40e272:	adc    DWORD PTR [esi+ecx*8-0x42907e94],ebp
  40e279:	dec    ebp
  40e27a:	jb     0x40e252
  40e27c:	and    al,0x21
  40e27e:	repz mov dl,0x3d
  40e281:	mov    bl,0xe7
  40e283:	mov    ah,0xb5
  40e285:	sbb    al,BYTE PTR [esi]
  40e287:	mov    dl,0x6b
  40e289:	addr16 pushf 
  40e28b:	sbb    DWORD PTR [ecx],edi
  40e28d:	or     BYTE PTR [edi-0x3e],0xb5
  40e291:	fidiv  DWORD PTR [ebx+edi*4-0x7c]
  40e295:	mov    bl,0xb1
  40e297:	push   0x72
  40e299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e29a:	js     0x40e283
  40e29c:	push   ds
  40e29d:	cmp    al,0xb1
  40e29f:	mov    esi,0xf14f6895
  40e2a4:	jb     0x40e229
  40e2a6:	aad    0x39
  40e2a8:	push   ss
  40e2a9:	outs   dx,DWORD PTR ds:[esi]
  40e2aa:	std    
  40e2ab:	enter  0x778c,0x89
  40e2af:	hlt    
  40e2b0:	jle    0x40e2f5
  40e2b2:	mov    edx,0xfd4c7a9a
  40e2b7:	mov    ebx,DWORD PTR [eax-0xe]
  40e2ba:	add    eax,esi
  40e2bc:	fs push 0x3df2a870
  40e2c2:	scas   eax,DWORD PTR es:[edi]
  40e2c3:	mov    cs,ebp
  40e2c5:	jg     0x40e30f
  40e2c7:	adc    BYTE PTR [edx-0x26],dl
  40e2ca:	jl     0x40e294
  40e2cc:	arpl   WORD PTR [ebx],cx
  40e2ce:	and    esi,DWORD PTR [ecx+0x45]
  40e2d1:	mov    esi,0x462af7fd
  40e2d6:	shr    DWORD PTR [ebx+0x30],0xd7
  40e2da:	dec    ecx
  40e2db:	stos   DWORD PTR es:[edi],eax
  40e2dc:	jmp    0x8e9f83aa
  40e2e1:	push   edi
  40e2e2:	inc    ecx
  40e2e3:	iret   
  40e2e4:	jle    0x40e2e0
  40e2e6:	jns    0x40e31e
  40e2e8:	fwait
  40e2e9:	outs   dx,DWORD PTR ds:[esi]
  40e2ea:	jne    0x40e2fd
  40e2ec:	loop   0x40e306
  40e2ee:	jb     0x40e36b
  40e2f0:	rcr    DWORD PTR es:[eax],cl
  40e2f3:	js     0x40e2d9
  40e2f5:	mov    DWORD PTR [ebx],0xd7c8e5bd
  40e2fb:	iret   
  40e2fc:	mov    esi,0xb9ebc9c2
  40e301:	sbb    DWORD PTR [edx],ebp
  40e303:	xchg   bl,cl
  40e305:	mov    dl,0xa9
  40e307:	cwde   
  40e308:	push   es
  40e309:	jle    0x40e301
  40e30b:	push   esp
  40e30c:	mov    cl,0xb6
  40e30e:	int3   
  40e30f:	(bad)  
  40e310:	fwait
  40e311:	adc    DWORD PTR [ebx-0x2605bfc0],esp
  40e317:	xchg   bl,dh
  40e319:	iret   
  40e31a:	or     DWORD PTR [ebp+ecx*4+0x6955581a],ebx
  40e321:	mov    WORD PTR [ebp-0x48a3042b],?
  40e327:	std    
  40e328:	sub    al,0xf2
  40e32a:	inc    edi
  40e32b:	pop    edi
  40e32c:	sti    
  40e32d:	loop   0x40e3ad
  40e32f:	cld    
  40e330:	cs xchg ebx,eax
  40e332:	xor    BYTE PTR [ecx+0x40],dl
  40e335:	inc    esp
  40e336:	and    ch,bh
  40e338:	pop    ebp
  40e339:	out    dx,al
  40e33a:	jae    0x40e333
  40e33c:	(bad)  
  40e33d:	mov    dh,0x73
  40e33f:	xchg   esp,eax
  40e340:	fld    TBYTE PTR [eax]
  40e342:	or     ebx,DWORD PTR fs:[esi+0x4a]
  40e346:	mov    edi,DWORD PTR [ebx+0x72]
  40e349:	fsub   st,st(7)
  40e34b:	lds    ebp,FWORD PTR [edx+ebp*2]
  40e34e:	ja     0x40e359
  40e350:	(bad)  
  40e351:	loopne 0x40e34b
  40e353:	mov    esp,0x3fb3b378
  40e358:	arpl   si,ax
  40e35a:	and    eax,0x37acaeea
  40e35f:	sub    eax,0x5a88a2c0
  40e364:	mov    ecx,esp
  40e366:	mov    eax,0x2bf559a2
  40e36b:	jmp    0x665e8ce8
  40e370:	popf   
  40e371:	push   ebx
  40e372:	push   esi
  40e373:	xor    al,0x8f
  40e375:	mov    ah,BYTE PTR [edx]
  40e377:	fcmovu st,st(3)
  40e379:	mov    ebp,0xc43e353
  40e37e:	inc    bp
  40e380:	mov    dl,0x6
  40e382:	sub    esp,DWORD PTR [ebp*1-0x6d98cdfb]
  40e389:	pop    edi
  40e38a:	mov    dh,0x81
  40e38c:	imul   ebp,DWORD PTR [ebp+0x5e],0x808aa43e
  40e393:	xchg   DWORD PTR [esi],edi
  40e395:	out    0x92,al
  40e397:	xchg   bh,cl
  40e399:	jg     0x40e350
  40e39b:	inc    edx
  40e39c:	loop   0x40e389
  40e39e:	cld    
  40e39f:	or     DWORD PTR [edi+0x15],ecx
  40e3a2:	lea    ebx,[ecx+0x15]
  40e3a5:	loop   0x40e3b6
  40e3a7:	popf   
  40e3a8:	push   es
  40e3a9:	mov    esp,0x9b7213aa
  40e3ae:	call   FWORD PTR [edx+0x39]
  40e3b1:	adc    BYTE PTR ds:0x36b79e1c,ch
  40e3b7:	jge    0x40e369
  40e3b9:	aad    0xe6
  40e3bb:	pop    esi
  40e3bc:	push   ebx
  40e3bd:	adc    edx,DWORD PTR [eax+0x42afc829]
  40e3c3:	cmp    al,0xd3
  40e3c5:	xchg   edi,eax
  40e3c6:	xchg   edx,eax
  40e3c7:	inc    ebp
  40e3c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3c9:	dec    edi
  40e3ca:	aam    0x26
  40e3cc:	cmc    
  40e3cd:	data16 fwait
  40e3cf:	pop    edx
  40e3d0:	lods   al,BYTE PTR ds:[esi]
  40e3d1:	in     eax,dx
  40e3d2:	jno    0x40e3d3
  40e3d4:	cmp    cl,ch
  40e3d6:	mov    ebp,0xcc65319f
  40e3db:	cmp    edx,DWORD PTR [ebp+0x54]
  40e3de:	inc    esi
  40e3df:	mov    dl,0x7d
  40e3e1:	int3   
  40e3e2:	inc    esp
  40e3e3:	and    BYTE PTR [ebx-0x57],cl
  40e3e6:	adc    BYTE PTR [ecx+0x34],cl
  40e3e9:	push   edx
  40e3ea:	daa    
  40e3eb:	leave  
  40e3ec:	(bad)  
  40e3ed:	lods   eax,DWORD PTR ds:[esi]
  40e3ee:	fadd   DWORD PTR [ebx-0x70eb759f]
  40e3f4:	cdq    
  40e3f5:	xor    ebp,ebx
  40e3f7:	test   ch,ah
  40e3f9:	cmp    bl,ch
  40e3fb:	or     BYTE PTR [ecx+0x28ebcb74],ah
  40e401:	add    esi,DWORD PTR [ebx+0x57]
  40e404:	nop
  40e405:	push   ecx
  40e406:	(bad)
  40e40b:	mov    ah,0xbc
  40e40d:	sub    BYTE PTR [edx+0xf],al
  40e410:	out    0xd2,eax
  40e412:	mov    eax,?
  40e414:	push   0x76
  40e416:	cli    
  40e417:	pop    esi
  40e418:	bound  eax,QWORD PTR [edi]
  40e41a:	or     BYTE PTR [edi+edi*2+0x33a31d19],0x35
  40e422:	daa    
  40e423:	stos   BYTE PTR es:[edi],al
  40e424:	jmp    0xac39:0xdac95baf
  40e42b:	call   0xdd3c:0xeb0b3139
  40e432:	xor    al,0x8
  40e434:	mov    esi,0x971658f8
  40e439:	xlat   BYTE PTR ds:[ebx]
  40e43a:	jnp    0x40e3d5
  40e43c:	test   al,0xa8
  40e43e:	push   ebx
  40e43f:	popa   
  40e440:	(bad)  
  40e441:	lds    ebp,FWORD PTR [ecx+esi*8+0xa1f4996]
  40e448:	or     ah,BYTE PTR [esi]
  40e44a:	dec    ecx
  40e44b:	push   esi
  40e44c:	jp     0x40e4c4
  40e44e:	dec    ebx
  40e44f:	mov    esp,0x6d8eb0d0
  40e454:	neg    BYTE PTR [eax-0x708464e8]
  40e45a:	push   ecx
  40e45b:	xor    DWORD PTR [edx+esi*4-0x6d],ebx
  40e45f:	retf   
  40e460:	jg     0x40e425
  40e462:	and    eax,0xacca54e4
  40e467:	dec    esp
  40e468:	fbld   TBYTE PTR [ecx]
  40e46a:	dec    esp
  40e46b:	(bad)  
  40e46c:	mov    ah,0xce
  40e46e:	retf   
  40e46f:	sbb    eax,0x86a1c89f
  40e474:	xchg   esp,eax
  40e475:	in     al,dx
  40e476:	dec    esp
  40e477:	mov    ebp,0x84c5ba93
  40e47c:	inc    eax
  40e47d:	outs   dx,BYTE PTR ds:[esi]
  40e47e:	mov    bl,0x88
  40e480:	je     0x40e46e
  40e482:	push   esi
  40e483:	mov    ds:0x940e09eb,al
  40e488:	in     al,dx
  40e489:	call   0xc1ffcff3
  40e48e:	aad    0x58
  40e490:	out    dx,al
  40e491:	mov    eax,ds:0x4812933b
  40e496:	mov    ds:0x2db5de70,eax
  40e49b:	pop    ecx
  40e49c:	(bad)  
  40e49d:	sub    edx,DWORD PTR [eax-0x7f]
  40e4a0:	sahf   
  40e4a1:	sub    ch,BYTE PTR [ebx]
  40e4a3:	mov    ds:0x5b705383,al
  40e4a8:	mov    ecx,esi
  40e4aa:	xor    bh,BYTE PTR [edx+0x2]
  40e4ad:	sti    
  40e4ae:	jge    0x40e459
  40e4b0:	adc    al,0x6a
  40e4b2:	fsub   st,st(7)
  40e4b4:	lock lea ebp,[ebp+0x63]
  40e4b8:	je     0x40e4fa
  40e4ba:	data16 fwait
  40e4bc:	adc    BYTE PTR ds:0x5da4264e,al
  40e4c2:	jbe    0x40e486
  40e4c4:	shr    ecx,cl
  40e4c6:	pop    edx
  40e4c7:	out    0x8f,al
  40e4c9:	test   eax,0x8b87c4d3
  40e4ce:	jnp    0x40e46e
  40e4d0:	jnp    0x40e530
  40e4d2:	inc    esi
  40e4d3:	xchg   edx,eax
  40e4d4:	loop   0x40e518
  40e4d6:	cmp    al,0x1e
  40e4d8:	xchg   ebx,eax
  40e4d9:	(bad)  
  40e4da:	fucomi st,st(6)
  40e4dc:	fild   QWORD PTR [esi]
  40e4de:	mov    ah,0xd1
  40e4e0:	inc    esp
  40e4e1:	push   es
  40e4e2:	lods   eax,DWORD PTR ds:[esi]
  40e4e3:	jle    0x40e4c0
  40e4e5:	pop    esi
  40e4e6:	cwde   
  40e4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4e8:	mov    ds:0x30f1da80,eax
  40e4ed:	je     0x40e532
  40e4ef:	fiadd  WORD PTR [edi+eiz*1-0x6e]
  40e4f3:	and    ecx,eax
  40e4f5:	jle    0x40e4f3
  40e4f7:	cmp    ebp,DWORD PTR [esi]
  40e4f9:	jecxz  0x40e529
  40e4fb:	mov    esi,0x57f48cf7
  40e500:	cmp    al,0x30
  40e502:	cmp    BYTE PTR [ebx+0x2c],al
  40e505:	retf   0x6b3
  40e508:	jmp    0xba7dc839
  40e50d:	pushf  
  40e50e:	sub    edx,DWORD PTR [ecx]
  40e510:	add    esp,0xffffffb1
  40e513:	inc    esi
  40e514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e515:	test   al,0x6d
  40e517:	and    al,0x45
  40e519:	dec    eax
  40e51a:	out    0x3c,al
  40e51c:	ins    BYTE PTR es:[edi],dx
  40e51d:	into   
  40e51e:	or     ecx,DWORD PTR [edx+0x2ebb43a4]
  40e524:	test   eax,0x11279648
  40e529:	retf   
  40e52a:	inc    edx
  40e52b:	or     edi,DWORD PTR [eax-0x26]
  40e52e:	ja     0x40e54f
  40e530:	sbb    al,0x2
  40e532:	outs   dx,DWORD PTR ds:[esi]
  40e533:	out    0xd7,eax
  40e535:	mov    edx,0x8db7b3d2
  40e53a:	mov    ch,0x25
  40e53c:	fadd   QWORD PTR [edi]
  40e53e:	enter  0xc170,0xb
  40e542:	pop    ecx
  40e543:	ins    DWORD PTR es:[edi],dx
  40e544:	out    dx,eax
  40e545:	stc    
  40e546:	pop    edi
  40e547:	inc    eax
  40e548:	and    edx,DWORD PTR [edi]
  40e54a:	cmp    al,0x7f
  40e54c:	xchg   ebp,eax
  40e54d:	sub    BYTE PTR [ebp+0x1a8b2319],dl
  40e553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e554:	push   esp
  40e555:	jmp    0x7779:0xced0f77
  40e55c:	xchg   ebx,eax
  40e55d:	pop    ebp
  40e55e:	and    DWORD PTR [ecx+edx*1+0x502f3f3a],eax
  40e565:	add    al,0xd7
  40e567:	les    edx,FWORD PTR [ebx+0x625eb272]
  40e56d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e56e:	retf   0x15ef
  40e571:	jmp    0x16075ca1
  40e576:	bound  eax,QWORD PTR [esi+edi*8+0x5d]
  40e57a:	push   ebx
  40e57b:	mov    bh,0x43
  40e57d:	sbb    ecx,esi
  40e57f:	fwait
  40e580:	in     eax,0x5f
  40e582:	adc    ecx,DWORD PTR [edx+0x36]
  40e585:	das    
  40e586:	repz ret 0x6fe1
  40e58a:	mov    eax,0x7e2e757f
  40e58f:	(bad)  
  40e590:	xchg   ebp,eax
  40e591:	adc    BYTE PTR [edi+0x7d558a91],bh
  40e597:	xor    ecx,DWORD PTR [ecx+0x61]
  40e59a:	xchg   ebp,eax
  40e59b:	nop
  40e59c:	push   ebp
  40e59d:	lock enter 0x3361,0x70
  40e5a2:	adc    dh,0x9f
  40e5a5:	cmp    al,0x8
  40e5a7:	arpl   WORD PTR [ecx-0x3b8ea4d3],dx
  40e5ad:	or     al,0x2d
  40e5af:	jg     0x40e5fc
  40e5b1:	stos   DWORD PTR es:[edi],eax
  40e5b2:	je     0x40e5c8
  40e5b4:	sar    BYTE PTR [eax+0x6f79491e],cl
  40e5ba:	mov    cl,BYTE PTR [ebp+0x5fdc31a4]
  40e5c0:	repz mov al,BYTE PTR [esi+eiz*1+0x2d]
  40e5c5:	push   ecx
  40e5c6:	sbb    DWORD PTR [edx+0x59],ebp
  40e5c9:	jl     0x40e572
  40e5cb:	sbb    al,0x5a
  40e5cd:	push   esp
  40e5ce:	ret    0x8486
  40e5d1:	adc    al,0x3c
  40e5d3:	stc    
  40e5d4:	loope  0x40e62e
  40e5d6:	xor    DWORD PTR [ebp+0x1b],ecx
  40e5d9:	ja     0x40e58e
  40e5db:	xchg   BYTE PTR [ecx],cl
  40e5dd:	aas    
  40e5de:	mov    WORD PTR [ecx+0x1dabffdc],ss
  40e5e4:	dec    ecx
  40e5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5e6:	xor    edi,DWORD PTR [ecx+0x7a81b213]
  40e5ec:	repnz or ebp,DWORD PTR [eax+0x1c]
  40e5f0:	jno    0x40e612
  40e5f2:	pop    eax
  40e5f3:	xchg   BYTE PTR [ecx-0x33215003],ah
  40e5f9:	test   eax,0x58f1fb3d
  40e5fe:	leave  
  40e5ff:	lods   al,BYTE PTR ds:[esi]
  40e600:	adc    DWORD PTR [eax+eax*1+0x1ea9ca09],eax
  40e607:	pop    ds
  40e608:	div    edx
  40e60a:	pop    es
  40e60b:	mov    cl,0xef
  40e60d:	(bad)  [esi+0x75]
  40e610:	out    0x46,eax
  40e612:	fst    QWORD PTR [eax]
  40e614:	jb     0x40e634
  40e616:	mov    dh,0x2d
  40e618:	dec    eax
  40e619:	inc    ebx
  40e61a:	dec    ebp
  40e61b:	je     0x40e5d3
  40e61d:	lea    esp,[edi-0x387b2bdd]
  40e623:	adc    al,0x1d
  40e625:	jne    0x40e5d6
  40e627:	mov    edx,0x50b7b9be
  40e62c:	ror    BYTE PTR [ebp+0x2e],0x1e
  40e630:	sbb    eax,0xa33a29f
  40e635:	pop    ds
  40e636:	mov    edi,0x55fc2e3
  40e63b:	ret    
  40e63c:	es loop 0x40e671
  40e63f:	sub    BYTE PTR [eax+0x65],cl
  40e642:	loopne 0x40e627
  40e644:	push   es
  40e645:	test   BYTE PTR [eax],dh
  40e647:	xchg   edi,eax
  40e648:	aas    
  40e649:	shr    BYTE PTR [edi-0x24569365],1
  40e64f:	pop    ecx
  40e650:	mov    ah,0xbd
  40e652:	imul   edi,DWORD PTR [edx+0x7f],0x2131f637
  40e659:	mov    dl,0xa
  40e65b:	and    edx,DWORD PTR [ebp-0x76ecbd1c]
  40e661:	cmp    eax,esp
  40e663:	les    ecx,FWORD PTR gs:[edi+edi*8]
  40e667:	inc    eax
  40e668:	iret   
  40e669:	mov    ds,esi
  40e66b:	mov    al,0xf9
  40e66d:	(bad)  [eax+0x17]
  40e670:	enter  0x843a,0xea
  40e674:	fistp  QWORD PTR [edx]
  40e676:	in     eax,0xdf
  40e678:	inc    ebx
  40e679:	push   edi
  40e67a:	and    dh,0xaf
  40e67d:	imul   esi,esp,0x8d0a569b
  40e683:	cwde   
  40e684:	ds push ecx
  40e686:	or     DWORD PTR [ebx+0x15],esi
  40e689:	jmp    0x951a85fe
  40e68e:	out    dx,al
  40e68f:	fsubr  DWORD PTR [esi+0x47ebbc6f]
  40e695:	ds pop ss
  40e697:	ret    
  40e698:	dec    esp
  40e699:	xchg   DWORD PTR [eax],edx
  40e69b:	call   esp
  40e69d:	inc    edi
  40e69e:	pop    esp
  40e69f:	aam    0xd7
  40e6a1:	imul   edx,DWORD PTR [ebx],0xffffffe0
  40e6a4:	(bad)  
  40e6a6:	sbb    BYTE PTR [eax+esi*2-0x37],bh
  40e6aa:	outs   dx,BYTE PTR ds:[esi]
  40e6ab:	dec    edi
  40e6ac:	inc    ebp
  40e6ad:	(bad)  
  40e6ae:	cli    
  40e6af:	imul   edx,DWORD PTR [esi],0x7e
  40e6b2:	mov    ds:0x3209cce0,eax
  40e6b7:	adc    ch,BYTE PTR [ebp-0xe]
  40e6ba:	or     esi,esp
  40e6bc:	enter  0x9b1c,0xbf
  40e6c0:	test   DWORD PTR [ecx+0x73],edx
  40e6c3:	xchg   edi,eax
  40e6c4:	imul   edi,eax,0x76
  40e6c7:	sub    DWORD PTR [ebp+0x77],esp
  40e6ca:	popa   
  40e6cb:	jg     0x40e749
  40e6cd:	cmp    ebx,DWORD PTR [eax+0x586b9bcc]
  40e6d3:	pop    eax
  40e6d4:	ss jne 0x40e6a8
  40e6d7:	sub    bl,BYTE PTR [esi]
  40e6d9:	test   eax,0xb5da0683
  40e6de:	aad    0xb3
  40e6e0:	mov    ds:0x4f24879f,al
  40e6e5:	cmp    WORD PTR [edi],bp
  40e6e8:	fnsave [edx+0x16]
  40e6eb:	fild   WORD PTR [edx+0x51d5d8f2]
  40e6f1:	lea    ecx,[ecx-0x40c2d56]
  40e6f7:	test   DWORD PTR [esi],ebx
  40e6f9:	xor    dh,BYTE PTR [ecx+0x37]
  40e6fc:	mov    al,ds:0x46283049
  40e701:	jg     0x40e6bb
  40e703:	(bad)  
  40e704:	xchg   ecx,eax
  40e705:	xchg   esi,eax
  40e706:	mov    ds:0x1d246e05,eax
  40e70b:	mov    ds:0x6c325fad,al
  40e710:	jg     0x40e78e
  40e712:	fld    DWORD PTR [edx]
  40e714:	fucomp st(7)
  40e716:	out    dx,eax
  40e717:	call   0x81669398
  40e71c:	(bad)  
  40e71d:	ss aaa 
  40e71f:	mov    eax,0x7fab1142
  40e724:	inc    ebx
  40e725:	adc    bh,BYTE PTR [ecx+0x171388bc]
  40e72b:	push   0xffffffc2
  40e72d:	outs   dx,BYTE PTR ds:[esi]
  40e72e:	into   
  40e72f:	stos   BYTE PTR es:[edi],al
  40e730:	test   eax,0x4f520a6f
  40e735:	(bad)  
  40e736:	cld    
  40e737:	aam    0xf8
  40e739:	or     dl,BYTE PTR [ebx-0x68]
  40e73c:	cmp    DWORD PTR [ecx-0x1e8edc3a],edx
  40e742:	and    eax,ebx
  40e744:	(bad)  
  40e745:	push   esi
  40e746:	(bad)
  40e74a:	popf   
  40e74b:	dec    edi
  40e74c:	push   edi
  40e74d:	int3   
  40e74e:	fimul  WORD PTR [ebx+0x6a]
  40e751:	loopne 0x40e7ac
  40e753:	sbb    edx,edi
  40e755:	mov    eax,ds:0x5fcfb84
  40e75a:	or     al,0xc8
  40e75c:	ins    DWORD PTR es:[edi],dx
  40e75d:	aas    
  40e75e:	dec    esp
  40e75f:	and    al,0x65
  40e761:	cmc    
  40e762:	stos   DWORD PTR es:[edi],eax
  40e763:	loop   0x40e78a
  40e765:	js     0x40e7ae
  40e767:	cmp    DWORD PTR [edx],edx
  40e769:	loope  0x40e75b
  40e76b:	mov    edx,0xe534ab58
  40e770:	jb     0x40e7bb
  40e772:	pop    esp
  40e773:	imul   edx,edi,0x18
  40e776:	outs   dx,BYTE PTR ds:[esi]
  40e777:	pop    ds
  40e778:	mov    ebx,0xb0faa19e
  40e77d:	aas    
  40e77e:	adc    esp,DWORD PTR [esi+ebx*2]
  40e781:	mov    ebp,0xc9bb98fa
  40e786:	pop    esp
  40e787:	pop    ebp
  40e788:	cld    
  40e789:	retf   0x73c
  40e78c:	mov    al,ds:0xecb81df8
  40e791:	pop    es
  40e792:	sbb    eax,0xd5cad652
  40e797:	mov    ch,0x64
  40e799:	pop    ecx
  40e79a:	call   0x4ea3:0xeae9e97d
  40e7a1:	aam    0x7b
  40e7a3:	int    0xf5
  40e7a5:	ins    DWORD PTR es:[edi],dx
  40e7a6:	inc    edi
  40e7a7:	call   0x3e3a:0x262b7a53
  40e7ae:	jecxz  0x40e7de
  40e7b0:	push   esp
  40e7b1:	adc    eax,0xcdefa8d6
  40e7b6:	inc    ebp
  40e7b7:	popa   
  40e7b8:	inc    ebx
  40e7b9:	dec    eax
  40e7ba:	mov    edi,0x86ab467c
  40e7bf:	inc    edi
  40e7c0:	ins    DWORD PTR es:[edi],dx
  40e7c1:	pop    edx
  40e7c2:	jmp    0xe0dd609e
  40e7c7:	iret   
  40e7c8:	and    DWORD PTR [ebx-0x48544e1],esp
  40e7ce:	ror    DWORD PTR [eax],0x78
  40e7d1:	mov    al,bl
  40e7d3:	xor    eax,edi
  40e7d5:	mov    dl,0x1
  40e7d7:	iret   
  40e7d8:	cmc    
  40e7d9:	push   edi
  40e7da:	stos   DWORD PTR es:[edi],eax
  40e7db:	aam    0x6f
  40e7dd:	jne    0x40e819
  40e7df:	clc    
  40e7e0:	cli    
  40e7e1:	dec    edx
  40e7e2:	mov    bl,0x17
  40e7e4:	loope  0x40e7d6
  40e7e6:	fld    st(2)
  40e7e8:	mov    eax,0x2d45dfb6
  40e7ed:	xchg   BYTE PTR [ebp-0x4b],dl
  40e7f0:	sbb    eax,0xcbd0357b
  40e7f5:	mov    dh,0xc2
  40e7f7:	fist   WORD PTR [ecx]
  40e7f9:	mov    ch,0xb4
  40e7fb:	cmp    BYTE PTR [esi-0x685b2987],dl
  40e801:	inc    esi
  40e802:	adc    ecx,DWORD PTR [eax-0x78244532]
  40e808:	fldcw  WORD PTR [edx+0x5d9f6781]
  40e80e:	xchg   ebx,eax
  40e80f:	jae    0x40e800
  40e811:	add    eax,0xf7b27185
  40e816:	mov    edi,0x95a8c546
  40e81b:	sbb    al,0x36
  40e81d:	mov    dh,al
  40e81f:	sbb    bh,bh
  40e821:	sub    BYTE PTR [eax-0x41],ah
  40e824:	dec    edx
  40e825:	in     eax,0x89
  40e827:	xchg   edx,eax
  40e828:	jnp    0x40e82f
  40e82a:	bswap  edx
  40e82c:	inc    esp
  40e82d:	adc    BYTE PTR [ebx],al
  40e82f:	std    
  40e830:	and    bl,BYTE PTR [ecx-0x38f928fb]
  40e836:	xor    eax,0x65c9d750
  40e83b:	es daa 
  40e83d:	fnstsw WORD PTR [eax-0x2b]
  40e840:	in     eax,0xb0
  40e842:	cld    
  40e843:	(bad)  
  40e844:	popa   
  40e845:	xchg   edx,eax
  40e846:	cmc    
  40e847:	mov    esp,0x80eed27f
  40e84c:	lahf   
  40e84d:	in     eax,dx
  40e84e:	fs retf 
  40e850:	aam    0xa9
  40e852:	mov    dl,0x76
  40e854:	(bad)  
  40e855:	or     al,0x83
  40e857:	jl     0x40e8b9
  40e859:	or     eax,0x870e302a
  40e85e:	arpl   WORD PTR [eax-0x24],dx
  40e861:	pop    ebp
  40e862:	mov    ebx,0x55c657b
  40e867:	cmp    ch,BYTE PTR [edx+0x53]
  40e86a:	push   edi
  40e86b:	mov    WORD PTR [ecx-0x4f295dc3],gs
  40e871:	fld    DWORD PTR [edi-0x1fba68ec]
  40e877:	enter  0xb80f,0x61
  40e87b:	int3   
  40e87c:	cmc    
  40e87d:	sbb    al,0x47
  40e87f:	hlt    
  40e880:	fnsave [edx+0x4f2caf4d]
  40e886:	test   DWORD PTR [esi-0x50],0x88f9cca
  40e88d:	call   0xf183:0x6914e831
  40e894:	int3   
  40e895:	int    0x36
  40e897:	jno    0x40e82a
  40e899:	xchg   esp,eax
  40e89a:	daa    
  40e89b:	xor    ecx,edx
  40e89d:	jle    0x40e83c
  40e89f:	popa   
  40e8a0:	mov    cl,0x59
  40e8a2:	iret   
  40e8a3:	leave  
  40e8a4:	adc    dl,BYTE PTR [edi]
  40e8a6:	inc    ebp
  40e8a7:	inc    ebp
  40e8a8:	repz jbe 0x40e907
  40e8ab:	add    al,0xd1
  40e8ad:	jle    0x40e8a8
  40e8af:	adc    DWORD PTR [ebx+esi*8],esi
  40e8b2:	mov    bh,BYTE PTR [ecx-0x49]
  40e8b5:	fs out 0x87,al
  40e8b8:	sub    BYTE PTR [ebx],dh
  40e8ba:	push   esp
  40e8bb:	xchg   edx,eax
  40e8bc:	sub    eax,0x1c2c2db
  40e8c1:	lds    edx,FWORD PTR [ecx]
  40e8c3:	int3   
  40e8c4:	int3   
  40e8c5:	cmp    eax,0x64590c89
  40e8ca:	or     DWORD PTR [esi-0x2de354cb],ecx
  40e8d0:	rol    DWORD PTR [ecx+0x7ad9fd68],cl
  40e8d6:	mov    ss:0x1666d10e,eax
  40e8dc:	retf   
  40e8dd:	mul    dl
  40e8df:	mov    ch,BYTE PTR [ecx]
  40e8e1:	jp     0x40e953
  40e8e3:	inc    esp
  40e8e4:	std    
  40e8e5:	test   DWORD PTR [eax-0x53],esi
  40e8e8:	or     BYTE PTR [edx+0x7b],bh
  40e8eb:	pusha  
  40e8ec:	pop    edi
  40e8ed:	das    
  40e8ee:	sub    al,0xb0
  40e8f0:	pop    esp
  40e8f1:	scas   al,BYTE PTR es:[edi]
  40e8f2:	inc    ebx
  40e8f3:	clc    
  40e8f4:	in     eax,dx
  40e8f5:	and    ch,BYTE PTR [esi-0xe]
  40e8f8:	ror    esp,1
  40e8fa:	dec    edx
  40e8fb:	sub    eax,0xb6c12893
  40e900:	fwait
  40e901:	xor    al,0x36
  40e903:	push   eax
  40e904:	int3   
  40e905:	fwait
  40e906:	outs   dx,BYTE PTR ds:[esi]
  40e907:	imul   edi,DWORD PTR [edx+edx*4+0x2e],0xffffffce
  40e90c:	fimul  DWORD PTR [ebp+ecx*2+0x2f]
  40e910:	inc    ebx
  40e911:	bswap  edi
  40e913:	ret    
  40e914:	loop   0x40e8fa
  40e916:	push   edi
  40e917:	imul   edi,DWORD PTR ds:0xf5a6def9,0xffffff94
  40e91e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e91f:	loopne 0x40e8a2
  40e921:	pop    edx
  40e922:	lods   eax,DWORD PTR ds:[esi]
  40e923:	pushf  
  40e924:	cld    
  40e925:	or     DWORD PTR [ecx-0x1c],0xfffffffe
  40e929:	add    al,0xce
  40e92b:	div    DWORD PTR [ecx+0x5c]
  40e92e:	in     eax,0x57
  40e930:	adc    DWORD PTR [esi+0x31],esp
  40e933:	nop
  40e934:	ret    0x8671
  40e937:	loope  0x40e92f
  40e939:	lods   al,BYTE PTR ds:[esi]
  40e93a:	bound  edi,QWORD PTR [edi]
  40e93c:	add    DWORD PTR [esi+0x43],eax
  40e93f:	ds mov edi,0x6d3c763c
  40e945:	test   eax,0xa2b8baf7
  40e94a:	pop    esp
  40e94b:	cli    
  40e94c:	rol    BYTE PTR [eax+0x60d9676c],0x6e
  40e953:	(bad)  
  40e954:	dec    si
  40e956:	stos   BYTE PTR es:[edi],al
  40e957:	inc    ebp
  40e958:	xor    eax,0x1243081e
  40e95d:	adc    esp,DWORD PTR [ebx-0x49973590]
  40e963:	xor    eax,0x52978b9b
  40e968:	mov    dl,0xce
  40e96a:	ja     0x40e9d1
  40e96c:	fwait
  40e96d:	daa    
  40e96e:	(bad)  
  40e96f:	ret    0x2be6
  40e972:	and    BYTE PTR [ecx+ebx*1-0x4d24465d],ah
  40e979:	inc    esi
  40e97a:	jns    0x40e923
  40e97c:	jne    0x40e935
  40e97e:	mov    esp,0xd08b27a5
  40e983:	xchg   ecx,eax
  40e984:	adc    BYTE PTR [ebp-0x64],ch
  40e987:	xlat   BYTE PTR ds:[ebx]
  40e988:	out    0x53,eax
  40e98a:	mov    cl,0x9d
  40e98c:	add    esp,0xc3b5d7b8
  40e992:	dec    edi
  40e993:	fld    QWORD PTR [edx-0x5ba249a]
  40e999:	sar    BYTE PTR [eax-0x62],0x40
  40e99d:	inc    ecx
  40e99e:	or     eax,ebx
  40e9a0:	xchg   ebp,edx
  40e9a2:	cmp    BYTE PTR [ecx-0x1],0xb0
  40e9a6:	ficom  DWORD PTR [esi-0x67]
  40e9a9:	leave  
  40e9aa:	push   es
  40e9ab:	push   eax
  40e9ac:	stos   BYTE PTR es:[edi],al
  40e9ad:	inc    ebp
  40e9ae:	dec    esp
  40e9af:	js     0x40ea28
  40e9b1:	fisub  WORD PTR [edx-0x5e]
  40e9b4:	or     al,0x98
  40e9b6:	clc    
  40e9b7:	xor    BYTE PTR [esi+0x40b09c9],ch
  40e9bd:	mov    ebp,DWORD PTR [eax-0x3b]
  40e9c0:	pop    eax
  40e9c1:	(bad)  [edi]
  40e9c3:	in     al,dx
  40e9c4:	jne    0x40e94a
  40e9c6:	dec    esp
  40e9c7:	cli    
  40e9c8:	xchg   ecx,eax
  40e9c9:	fucom  st(5)
  40e9cb:	in     al,0xd5
  40e9cd:	cmp    ah,BYTE PTR [edi]
  40e9cf:	mov    edx,0xcefbbfbc
  40e9d4:	shr    BYTE PTR [ebp+0x5a78348f],0x9d
  40e9db:	ds out dx,al
  40e9dd:	or     BYTE PTR [edi+0x51],0x7a
  40e9e1:	jle    0x40e9d6
  40e9e3:	fistp  QWORD PTR [edi-0x21]
  40e9e6:	dec    eax
  40e9e7:	xchg   edx,eax
  40e9e8:	aas    
  40e9e9:	inc    edx
  40e9ea:	add    al,0xf5
  40e9ec:	jp     0x40ea50
  40e9ee:	add    BYTE PTR [edx-0x690d99bf],bh
  40e9f4:	clc    
  40e9f5:	(bad)  [ebx-0x69]
  40e9f8:	ret    0xd420
  40e9fb:	jne    0x40e9cf
  40e9fd:	clc    
  40e9fe:	lahf   
  40e9ff:	out    dx,al
  40ea00:	jecxz  0x40e993
  40ea02:	pop    ebp
  40ea03:	pop    ss
  40ea04:	mov    ebp,DWORD PTR [esi*2-0x55be91bc]
  40ea0b:	out    dx,al
  40ea0c:	and    BYTE PTR [ebp-0x28],0x82
  40ea10:	retf   0x38be
  40ea13:	or     esi,DWORD PTR [ebp+ebx*4+0x39]
  40ea17:	add    bl,dl
  40ea19:	fwait
  40ea1a:	ror    DWORD PTR [eax+0x48],0xcb
  40ea1e:	sub    edi,eax
  40ea20:	dec    edi
  40ea21:	pop    esp
  40ea22:	in     al,0x3
  40ea24:	add    esi,DWORD PTR [edx-0x6f]
  40ea27:	cmp    eax,0xe2589444
  40ea2c:	sti    
  40ea2d:	out    dx,eax
  40ea2e:	adc    BYTE PTR [eax-0x4e],cl
  40ea31:	jge    0x40ea50
  40ea33:	repz jae 0x40e9dd
  40ea36:	sub    al,0x76
  40ea38:	pop    ss
  40ea39:	nop
  40ea3a:	mov    bl,BYTE PTR [eax]
  40ea3c:	and    al,bh
  40ea3e:	fiadd  DWORD PTR [ecx]
  40ea40:	adc    BYTE PTR [edx+0x35],bl
  40ea43:	cwde   
  40ea44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea45:	jbe    0x40ea54
  40ea47:	in     eax,0x5e
  40ea49:	cmp    ch,dh
  40ea4b:	mov    bh,0x90
  40ea4d:	push   ds
  40ea4e:	(bad)  
  40ea4f:	retf   
  40ea50:	(bad)  
  40ea51:	daa    
  40ea52:	sub    bh,al
  40ea54:	lods   al,BYTE PTR ds:[esi]
  40ea55:	in     eax,0x7e
  40ea57:	outs   dx,BYTE PTR ds:[esi]
  40ea58:	pop    esi
  40ea59:	test   al,dh
  40ea5b:	outs   dx,BYTE PTR fs:[esi]
  40ea5d:	mov    eax,0x4723cc8f
  40ea62:	pop    ds
  40ea63:	jno    0x40e9f6
  40ea65:	ficomp WORD PTR [ebx-0x625c6999]
  40ea6b:	jbe    0x40e9fe
  40ea6d:	clc    
  40ea6e:	inc    DWORD PTR [ecx+0x15dac763]
  40ea74:	in     al,0x29
  40ea76:	add    dh,BYTE PTR [ebx+0x55befda3]
  40ea7c:	sbb    ebx,DWORD PTR [ebx]
  40ea7e:	add    BYTE PTR [ebp+ebx*4+0xf],dh
  40ea82:	sbb    esi,ebx
  40ea84:	lahf   
  40ea85:	popa   
  40ea86:	push   esp
  40ea87:	inc    edx
  40ea88:	inc    esp
  40ea89:	sub    cl,BYTE PTR [eax+0xb99e70b]
  40ea8f:	inc    ebp
  40ea90:	leave  
  40ea91:	lods   eax,DWORD PTR ds:[esi]
  40ea92:	pusha  
  40ea93:	jmp    0xf739:0x1c20ef9
  40ea9a:	out    dx,eax
  40ea9b:	sahf   
  40ea9c:	mov    al,0x12
  40ea9e:	sbb    eax,0xc20e7b77
  40eaa3:	fucomp st(6)
  40eaa5:	mov    cl,0xc5
  40eaa7:	mov    esp,0x9ece1da1
  40eaac:	mov    eax,0x19c17127
  40eab1:	xchg   esi,eax
  40eab2:	test   BYTE PTR [ebp+0x5],cl
  40eab5:	call   0x2ee4b6c
  40eaba:	sbb    dl,BYTE PTR [esi+0x57]
  40eabd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eabe:	(bad)  
  40eabf:	scas   al,BYTE PTR es:[edi]
  40eac0:	ret    
  40eac1:	inc    ecx
  40eac2:	fadd   QWORD PTR [edx+esi*4+0x69]
  40eac6:	push   esp
  40eac7:	inc    esi
  40eac8:	or     dl,BYTE PTR ss:0xd2ff3c29
  40eacf:	cmp    BYTE PTR [ebx+0x2f],0xfa
  40ead3:	mov    ds:0x542ba867,eax
  40ead8:	pop    ebp
  40ead9:	jmp    0x40ea79
  40eadb:	push   ebx
  40eadc:	add    al,0x58
  40eade:	dec    edx
  40eadf:	adc    al,BYTE PTR [edi+edx*2+0x2b52840e]
  40eae6:	pop    ss
  40eae7:	xchg   esi,eax
  40eae8:	add    al,0xfb
  40eaea:	inc    edi
  40eaeb:	pop    ecx
  40eaec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaed:	mov    al,0x81
  40eaef:	xchg   esi,eax
  40eaf0:	mov    esi,0x8ef0253d
  40eaf5:	repz mov esi,0x94c82af9
  40eafb:	or     BYTE PTR [edx-0x6ff771f5],bl
  40eb01:	pop    edx
  40eb02:	call   0x7f69c903
  40eb07:	pop    ebp
  40eb08:	int    0x8d
  40eb0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb0b:	push   edi
  40eb0c:	push   esi
  40eb0d:	jne    0x40ea94
  40eb0f:	sub    DWORD PTR [ebx-0x19],ebp
  40eb12:	and    al,BYTE PTR [ebp-0x32]
  40eb15:	leave  
  40eb16:	ins    BYTE PTR es:[edi],dx
  40eb17:	xor    eax,0x1e796119
  40eb1c:	not    edi
  40eb1e:	iret   
  40eb1f:	jmp    0x72d9e0dd
  40eb24:	cmp    eax,0xc8935e17
  40eb29:	data16 cmp BYTE PTR [eax],dl
  40eb2c:	jmp    0x35e03f4d
  40eb31:	cld    
  40eb32:	push   ebx
  40eb33:	jne    0x40eb1c
  40eb35:	jo     0x40eb79
  40eb37:	dec    edi
  40eb38:	xchg   BYTE PTR [ecx],ah
  40eb3a:	jmp    0x13df40f8
  40eb3f:	pop    ecx
  40eb40:	sbb    al,0xc6
  40eb42:	aas    
  40eb43:	stc    
  40eb44:	stos   BYTE PTR es:[edi],al
  40eb45:	mov    esp,0x271c3123
  40eb4a:	pushf  
  40eb4b:	fwait
  40eb4c:	mov    ds:0x91271482,al
  40eb51:	inc    DWORD PTR [edx+0x79fde45b]
  40eb57:	sub    BYTE PTR [ecx],ah
  40eb59:	les    esp,FWORD PTR [ecx]
  40eb5b:	inc    ebp
  40eb5c:	pop    edi
  40eb5d:	rol    ecx,cl
  40eb5f:	cdq    
  40eb60:	jne    0x40eb56
  40eb62:	jmp    0x40ebb9
  40eb64:	mov    al,ds:0x37bee108
  40eb69:	(bad)  
  40eb6a:	mov    esp,0x8734ac18
  40eb6f:	mov    cl,0x82
  40eb71:	and    ebx,DWORD PTR [edx+0x76d48e61]
  40eb77:	shr    BYTE PTR [edi],0x52
  40eb7a:	or     ebp,esi
  40eb7c:	jg     0x40eb25
  40eb7e:	mov    esi,0x5904571c
  40eb83:	stos   BYTE PTR es:[edi],al
  40eb84:	xchg   edi,eax
  40eb85:	gs add eax,0x26e4ab95
  40eb8b:	dec    ebp
  40eb8c:	clc    
  40eb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb8e:	arpl   di,si
  40eb90:	pop    ebx
  40eb91:	cli    
  40eb92:	pop    ecx
  40eb93:	mov    cl,0x8a
  40eb95:	pop    ebx
  40eb96:	je     0x40eb80
  40eb98:	fisttp DWORD PTR [ebx-0x531b21fd]
  40eb9e:	push   ss
  40eb9f:	(bad)  
  40eba1:	jmp    0x3c50:0x42d66440
  40eba8:	sub    DWORD PTR [esi-0x2],ebp
  40ebab:	stos   BYTE PTR es:[edi],al
  40ebac:	inc    esp
  40ebad:	fld    DWORD PTR [edi+0x56]
  40ebb0:	fidiv  DWORD PTR [ecx]
  40ebb2:	mov    ah,0xdf
  40ebb4:	(bad)  
  40ebb5:	pop    ebp
  40ebb6:	pop    esi
  40ebb7:	pop    ebx
  40ebb8:	fs mov bh,0xea
  40ebbb:	dec    ecx
  40ebbc:	jmp    0x360bd901
  40ebc1:	fidivr DWORD PTR [esi+0x2e049853]
  40ebc7:	or     al,0x40
  40ebc9:	leave  
  40ebca:	retf   0xb7d6
  40ebcd:	jnp    0x40ebdd
  40ebcf:	pop    esi
  40ebd0:	gs dec edi
  40ebd2:	inc    eax
  40ebd3:	pop    es
  40ebd4:	cmp    DWORD PTR [ecx],eax
  40ebd6:	cdq    
  40ebd7:	cwde   
  40ebd8:	add    dl,BYTE PTR [edx]
  40ebda:	(bad)  
  40ebdb:	aas    
  40ebdc:	arpl   WORD PTR [ebx+ebp*1],di
  40ebdf:	jns    0x40eba9
  40ebe1:	pop    esp
  40ebe2:	dec    eax
  40ebe3:	jecxz  0x40ec1b
  40ebe5:	sub    BYTE PTR [ebx+0x2d30afc2],bl
  40ebeb:	out    0x5e,al
  40ebed:	push   ecx
  40ebee:	pop    esi
  40ebef:	mov    BYTE PTR [edi-0x6781b10d],bh
  40ebf5:	sti    
  40ebf6:	sbb    eax,0x449137c5
  40ebfb:	inc    ebp
  40ebfc:	popa   
  40ebfd:	ss jb  0x40ebfb
  40ec00:	cmp    esp,edx
  40ec02:	out    dx,eax
  40ec03:	icebp  
  40ec04:	add    BYTE PTR [edi+edi*4-0x66d29fd8],0x14
  40ec0c:	mov    dh,0xa1
  40ec0e:	mov    eax,ds:0xc5e47533
  40ec13:	mov    ds:0x84f2d049,eax
  40ec18:	lds    edx,FWORD PTR [edx-0x35]
  40ec1b:	push   ebx
  40ec1c:	fnsave [ecx]
  40ec1e:	dec    ecx
  40ec1f:	jmp    0x40ec1d
  40ec21:	arpl   WORD PTR ds:[edx+ebp*8+0x22],cx
  40ec26:	lea    esp,[esi+0xe3c112a]
  40ec2c:	enter  0x65a3,0xf1
  40ec30:	push   esp
  40ec31:	lods   eax,DWORD PTR ds:[esi]
  40ec32:	jae    0x40ec28
  40ec34:	add    esp,edi
  40ec36:	pushf  
  40ec37:	sbb    eax,0xfbf160f2
  40ec3c:	sub    al,bh
  40ec3e:	je     0x40ecb6
  40ec40:	fs push edx
  40ec42:	jp     0x40ec15
  40ec44:	mov    ecx,?
  40ec46:	push   es
  40ec47:	and    edi,esp
  40ec49:	pop    ebx
  40ec4a:	inc    esi
  40ec4b:	jp     0x40ec1c
  40ec4d:	(bad)  
  40ec4e:	out    0x7f,eax
  40ec50:	sub    eax,DWORD PTR [esi]
  40ec52:	or     eax,0xead25c03
  40ec57:	push   0x60773e8e
  40ec5c:	(bad)  
  40ec5d:	jno    0x40ec5a
  40ec5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec60:	mov    dh,0x30
  40ec62:	test   BYTE PTR [ebx-0x476893bf],0x75
  40ec69:	xor    BYTE PTR [edi-0x4e1207b4],ah
  40ec6f:	ins    DWORD PTR es:[edi],dx
  40ec70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec71:	leave  
  40ec72:	inc    esi
  40ec73:	push   0xffffff97
  40ec75:	adc    cl,BYTE PTR [edx+0xa88bd3f]
  40ec7b:	cmp    eax,0x447c1d60
  40ec80:	retf   0x238
  40ec83:	sub    DWORD PTR [esi+eax*4+0x21],0x21
  40ec88:	dec    eax
  40ec89:	repnz (bad) 
  40ec8b:	xor    esi,DWORD PTR [ebp-0x38]
  40ec8e:	aam    0x75
  40ec90:	ret    0xeb1c
  40ec93:	into   
  40ec94:	pop    ds
  40ec95:	aaa    
  40ec96:	add    BYTE PTR [esi-0x2d918b46],dh
  40ec9c:	adc    DWORD PTR [ebx-0xb],0x4f9ff156
  40eca3:	test   al,0xd
  40eca5:	repz imul esp,DWORD PTR [edi+0x7e],0xffffffe4
  40ecaa:	call   0xc6b0:0x6d5afafc
  40ecb1:	scas   al,BYTE PTR es:[edi]
  40ecb2:	int3   
  40ecb3:	inc    edx
  40ecb4:	imul   esp,DWORD PTR [edx],0xbcef30b1
  40ecba:	push   ebp
  40ecbb:	sbb    DWORD PTR [edx-0x6a033f2c],0xffffffb5
  40ecc2:	sbb    BYTE PTR [ebp+0x3699d7fd],ch
  40ecc8:	(bad)  [esi-0x49]
  40eccb:	(bad)  
  40eccc:	shl    al,0xc4
  40eccf:	xlat   BYTE PTR es:[ebx]
  40ecd1:	jns    0x40ece5
  40ecd3:	dec    esi
  40ecd4:	xchg   esp,eax
  40ecd5:	das    
  40ecd6:	xor    al,0x67
  40ecd8:	mov    DWORD PTR [ebx],ebx
  40ecda:	xor    eax,0xeb6dd20a
  40ecdf:	dec    edx
  40ece0:	loop   0x40ed1c
  40ece2:	sub    ebp,DWORD PTR [ebp+ebx*1+0x69721092]
  40ece9:	jne    0x40ec71
  40eceb:	jmp    0x3744:0x97ea505e
  40ecf2:	jmp    0x34d9eb2a
  40ecf7:	mov    esp,ss
  40ecf9:	sub    edi,DWORD PTR [edx-0x30f2b625]
  40ecff:	outs   dx,DWORD PTR ds:[esi]
  40ed00:	add    dl,BYTE PTR [eax]
  40ed02:	sub    ecx,ebp
  40ed04:	push   ss
  40ed05:	xor    ch,BYTE PTR [ecx]
  40ed07:	mov    al,0x8
  40ed09:	mov    al,0x67
  40ed0b:	xor    edi,ebp
  40ed0d:	sbb    DWORD PTR [edi-0x63],ecx
  40ed10:	call   0xea05:0xef98c610
  40ed17:	(bad)  
  40ed18:	push   edx
  40ed19:	(bad)  
  40ed1a:	sbb    ebp,ecx
  40ed1c:	fs mov eax,ds:0x2a5c1e93
  40ed23:	jnp    0x40eced
  40ed25:	int    0x94
  40ed27:	mov    ds:0x5d42ee,eax
  40ed2c:	ja     0x40ece5
  40ed2e:	cld    
  40ed2f:	push   edi
  40ed30:	adc    DWORD PTR [ebp+0x7e],eax
  40ed33:	je     0x40ed92
  40ed35:	sbb    BYTE PTR [ecx-0x63c2e4d9],0x63
  40ed3c:	sbb    eax,0xb243243
  40ed41:	sub    eax,0x1d391a4
  40ed46:	lahf   
  40ed47:	test   eax,eax
  40ed49:	dec    ecx
  40ed4a:	mov    al,BYTE PTR [esp+edx*2]
  40ed4d:	lds    ebp,FWORD PTR [ecx-0x3e]
  40ed50:	cmc    
  40ed51:	jbe    0x40ed82
  40ed53:	xchg   esp,eax
  40ed54:	adc    DWORD PTR [esi+0x74],0xffffffd0
  40ed58:	inc    esi
  40ed59:	mov    edx,DWORD PTR [ebx]
  40ed5b:	mov    DWORD PTR [ebx-0x1a],eax
  40ed5e:	lods   al,BYTE PTR ds:[esi]
  40ed5f:	sbb    dh,BYTE PTR [esi]
  40ed61:	inc    eax
  40ed62:	pop    si
  40ed64:	bound  esi,QWORD PTR gs:[eax]
  40ed67:	pop    ebp
  40ed68:	cmc    
  40ed69:	push   eax
  40ed6a:	in     eax,dx
  40ed6b:	sub    DWORD PTR [edi],ebp
  40ed6d:	ror    DWORD PTR [eax-0x6903d566],cl
  40ed73:	jg     0x40eddc
  40ed75:	xlat   BYTE PTR ds:[ebx]
  40ed76:	mov    dh,0x25
  40ed78:	loope  0x40ed77
  40ed7a:	ds mov ecx,0xef3bb297
  40ed80:	pop    ss
  40ed81:	call   0x2ec1:0x8f4d9683
  40ed88:	mov    ebx,0x2ed7e1ab
  40ed8d:	in     al,0x51
  40ed8f:	push   0xc939a2b4
  40ed94:	retf   0xea07
  40ed97:	jae    0x40edc5
  40ed99:	scas   eax,DWORD PTR es:[edi]
  40ed9a:	mov    ah,0x38
  40ed9c:	les    esi,FWORD PTR [ecx]
  40ed9e:	cmp    BYTE PTR [ecx+0x68],bh
  40eda1:	pop    edx
  40eda2:	push   es
  40eda3:	repnz clc 
  40eda5:	xlat   BYTE PTR ds:[ebx]
  40eda6:	pop    es
  40eda7:	pop    ss
  40eda8:	xor    dh,al
  40edaa:	mov    dh,0x99
  40edac:	jnp    0x40ee12
  40edae:	xchg   esp,eax
  40edaf:	or     ebx,DWORD PTR [edx+eiz*1+0x2e]
  40edb3:	xchg   ecx,eax
  40edb4:	pop    ds
  40edb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edb6:	adc    ch,0xc7
  40edb9:	and    al,0x96
  40edbb:	fsubr  st(2),st
  40edbd:	retf   0x2a0f
  40edc0:	mov    al,ds:0x8b34e242
  40edc5:	into   
  40edc6:	push   0xe6a3bc7a
  40edcb:	inc    DWORD PTR [edi]
  40edcd:	int3   
  40edce:	inc    ecx
  40edcf:	xlat   BYTE PTR ds:[ebx]
  40edd0:	add    DWORD PTR [ecx+0x593e6246],esp
  40edd6:	adc    ecx,DWORD PTR [ebp+0x38]
  40edd9:	pop    ebx
  40edda:	push   ss
  40eddb:	pop    edi
  40eddc:	mov    dl,0x17
  40edde:	popf   
  40eddf:	fptan  
  40ede1:	mov    ah,0x1f
  40ede3:	ins    BYTE PTR es:[edi],dx
  40ede4:	aad    0x6b
  40ede6:	jo     0x40edcd
  40ede8:	(bad)  
  40ede9:	retf   0x832b
  40edec:	ror    DWORD PTR [eax],cl
  40edee:	pop    edi
  40edef:	mov    al,ds:0x16f6bab
  40edf4:	test   BYTE PTR [ebx+0x0],dh
  40edf7:	xchg   DWORD PTR [edx-0x2e23047f],eax
  40edfd:	xlat   BYTE PTR ds:[ebx]
  40edfe:	or     esp,0x848dd757
  40ee04:	test   al,0xdf
  40ee06:	retf   0x63cc
  40ee09:	mov    edx,0xd08b5da9
  40ee0e:	cmp    esp,ebp
  40ee10:	push   edx
  40ee11:	cmp    esi,DWORD PTR [eax]
  40ee13:	mov    bl,dl
  40ee15:	icebp  
  40ee16:	outs   dx,DWORD PTR ds:[esi]
  40ee17:	cmp    dl,BYTE PTR [edi-0x2dbceb1]
  40ee1d:	into   
  40ee1e:	lahf   
  40ee1f:	scas   eax,DWORD PTR es:[edi]
  40ee20:	adc    BYTE PTR [eax+0x5ece117a],al
  40ee26:	popa   
  40ee27:	scas   eax,DWORD PTR es:[edi]
  40ee28:	and    ch,ch
  40ee2a:	mov    eax,ds:0xc0f86844
  40ee2f:	(bad)  
  40ee30:	aas    
  40ee31:	mov    ebp,0xdf48ddd4
  40ee36:	sti    
  40ee37:	adc    BYTE PTR [esi+0x3b],bl
  40ee3a:	jp     0x40eeb8
  40ee3c:	ror    DWORD PTR [edi+ecx*4],0xdb
  40ee40:	jne    0x40edca
  40ee42:	dec    edi
  40ee43:	sbb    al,0xe4
  40ee45:	sbb    DWORD PTR es:[ebx+0x1b],ecx
  40ee49:	ret    0xc650
  40ee4c:	cmp    al,0xb0
  40ee4e:	arpl   dx,cx
  40ee50:	call   0x343b:0x8d265ef2
  40ee57:	xlat   BYTE PTR ds:[ebx]
  40ee58:	sbb    al,ch
  40ee5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee5b:	add    al,BYTE PTR [ebp+ebp*2-0x753dbb55]
  40ee62:	mov    al,ds:0x69572c5
  40ee67:	in     eax,0x6b
  40ee69:	out    0x69,eax
  40ee6b:	lods   al,BYTE PTR ds:[esi]
  40ee6c:	pusha  
  40ee6d:	push   esp
  40ee6e:	xchg   ecx,eax
  40ee6f:	sbb    al,0x1c
  40ee71:	jns    0x40ee5f
  40ee73:	add    DWORD PTR ss:[edx],ebp
  40ee76:	dec    ebp
  40ee77:	mov    ds:0x3e4ba323,eax
  40ee7c:	xchg   ecx,eax
  40ee7d:	mov    ds:0x82259eb0,al
  40ee82:	xor    eax,0xc21302f4
  40ee87:	scas   al,BYTE PTR es:[edi]
  40ee88:	lds    ecx,FWORD PTR [eax+0x228c5011]
  40ee8e:	sub    DWORD PTR [edi+0x53d8ad79],edi
  40ee94:	jae    0x40eec7
  40ee96:	jno    0x40eeb2
  40ee98:	outs   dx,DWORD PTR ds:[esi]
  40ee99:	stos   DWORD PTR es:[edi],eax
  40ee9a:	xchg   DWORD PTR [edx+0x38e4ecd3],edi
  40eea0:	mov    bl,0x8f
  40eea2:	cmp    DWORD PTR [ecx+0x49],0x65
  40eea6:	rcr    DWORD PTR [esi+esi*1+0x1a01b8d2],1
  40eead:	xor    al,0xbf
  40eeaf:	dec    ebp
  40eeb0:	(bad)  
  40eeb1:	stc    
  40eeb2:	inc    esp
  40eeb3:	test   DWORD PTR [edx-0x78],esi
  40eeb6:	fistp  QWORD PTR [ebp-0x79]
  40eeb9:	pop    eax
  40eeba:	pop    ebx
  40eebb:	repz and ah,bl
  40eebe:	es or  al,0xc7
  40eec1:	das    
  40eec2:	push   es
  40eec3:	push   cs
  40eec4:	adc    DWORD PTR [ebp-0x4c8b8fa0],ecx
  40eeca:	cmp    cl,BYTE PTR [ebp-0x6c2f549f]
  40eed0:	fs aaa 
  40eed2:	je     0x40eeed
  40eed4:	pop    ecx
  40eed5:	inc    ebx
  40eed6:	fld    DWORD PTR [esp+ebp*2-0x78]
  40eeda:	sub    al,0xf8
  40eedc:	add    BYTE PTR [ecx-0xd],ah
  40eedf:	int3   
  40eee0:	(bad)  
  40eee1:	mov    eax,0x4d8a8dc1
  40eee6:	cmp    al,0xc0
  40eee8:	cmp    eax,0xc9891bb2
  40eeed:	cwde   
  40eeee:	xchg   edi,eax
  40eeef:	lea    ebp,[edx-0x5f86c0cb]
  40eef5:	dec    ebx
  40eef6:	mov    dh,0xd8
  40eef8:	ss retf 
  40eefa:	push   ecx
  40eefb:	xchg   esi,eax
  40eefc:	mov    esp,0xb1097caf
  40ef01:	push   ebx
  40ef02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef03:	aas    
  40ef04:	jno    0x40eeb7
  40ef06:	pop    edx
  40ef07:	sub    BYTE PTR [ebx+0x3b],al
  40ef0a:	jl     0x40eed5
  40ef0c:	lods   al,BYTE PTR ds:[esi]
  40ef0d:	add    eax,0x86975c33
  40ef12:	fs fs ja 0x40eeb7
  40ef16:	mov    ds:0x6133b77b,eax
  40ef1b:	shl    BYTE PTR [esi+0x2e],1
  40ef1e:	add    DWORD PTR [ebp+0x282143ab],esi
  40ef24:	cmp    eax,0x3815cd5
  40ef29:	test   eax,0xb240c0a0
  40ef2e:	jmp    0x5ad46171
  40ef33:	xchg   ebx,eax
  40ef34:	test   cl,ch
  40ef36:	ins    BYTE PTR es:[edi],dx
  40ef37:	add    ah,BYTE PTR ds:0xbec7b838
  40ef3d:	and    dh,BYTE PTR [ebx+0x1b9e1d44]
  40ef43:	js     0x40ef2b
  40ef45:	mov    BYTE PTR [eax+0x11dd698e],cl
  40ef4b:	inc    edi
  40ef4c:	add    al,BYTE PTR [edi+0x7d70ca98]
  40ef52:	inc    ebx
  40ef53:	shr    DWORD PTR [edx-0x5a],cl
  40ef56:	or     BYTE PTR [eax+eiz*8-0x6494d3d7],ah
  40ef5d:	adc    DWORD PTR [esi+0x7c],0xb87b8097
  40ef64:	iret   
  40ef65:	repnz sbb eax,0x6c59fa9a
  40ef6b:	ins    BYTE PTR es:[edi],dx
  40ef6c:	mov    DWORD PTR [eax+ecx*2+0x76bb8497],eax
  40ef73:	push   0x3f
  40ef75:	(bad)  
  40ef76:	fcomp  st(0)
  40ef78:	cmp    al,0x95
  40ef7a:	push   ss
  40ef7b:	dec    ebp
  40ef7c:	ss pop eax
  40ef7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef7f:	sbb    eax,0xec673e26
  40ef84:	nop
  40ef85:	jp     0x40ef70
  40ef87:	add    eax,0xcfe04ac0
  40ef8c:	inc    edx
  40ef8d:	test   ebp,ebp
  40ef8f:	pop    ecx
  40ef90:	add    dl,dl
  40ef92:	aam    0x21
  40ef94:	daa    
  40ef95:	adc    BYTE PTR [ecx-0x5b3b5edb],bh
  40ef9b:	ret    0xcb16
  40ef9e:	aam    0xc1
  40efa0:	cdq    
  40efa1:	jl     0x40ef88
  40efa3:	dec    ecx
  40efa4:	sti    
  40efa5:	enter  0xf103,0x5a
  40efa9:	out    dx,eax
  40efaa:	push   cs
  40efab:	pushf  
  40efac:	(bad)  
  40efad:	lahf   
  40efae:	mov    eax,0xc557eb7e
  40efb3:	dec    esp
  40efb4:	in     al,dx
  40efb5:	cmp    esi,0xb2f393d3
  40efbb:	pop    esi
  40efbc:	sub    cl,bh
  40efbe:	pop    ds
  40efbf:	sbb    eax,0x6920cee0
  40efc4:	push   edx
  40efc5:	jecxz  0x40efc7
  40efc7:	jge    0x40f012
  40efc9:	icebp  
  40efca:	test   al,0xdd
  40efcc:	in     eax,0x64
  40efce:	mov    bl,BYTE PTR [eiz*8+0x569d6a62]
  40efd5:	loop   0x40efb6
  40efd7:	arpl   WORD PTR [ebx-0x66],cx
  40efda:	leave  
  40efdb:	hlt    
  40efdc:	aad    0xf7
  40efde:	je     0x40f05a
  40efe0:	mov    eax,0xd1491d15
  40efe5:	add    eax,0x5df0843c
  40efea:	ror    BYTE PTR [ecx],cl
  40efec:	xchg   ebp,eax
  40efed:	xchg   ecx,eax
  40efee:	or     edi,DWORD PTR [ebp+0x46774bbf]
  40eff4:	sub    DWORD PTR [esi+0x77],eax
  40eff7:	mov    ds:0xe4e04d63,eax
  40effc:	adc    DWORD PTR [edx+edx*8+0x1781e4c9],0xa1425ec4
  40f007:	(bad)
  40f00a:	pop    edx
  40f00b:	add    esp,ebp
  40f00d:	(bad)  
  40f00e:	(bad)  
  40f00f:	mov    ch,0x4e
  40f011:	fmul   QWORD PTR [edx]
  40f013:	mov    ebx,0x215a8974
  40f018:	rol    ebp,0xcc
  40f01b:	repz test al,0x95
  40f01e:	pop    edi
  40f01f:	jns    0x40efcd
  40f021:	jnp    0x40f073
  40f023:	test   BYTE PTR [edx],cl
  40f025:	push   edx
  40f026:	mov    WORD PTR [edx],ds
  40f028:	or     BYTE PTR [ebx-0x54],0xb6
  40f02c:	aaa    
  40f02d:	jge    0x40efd0
  40f02f:	lahf   
  40f030:	dec    esi
  40f031:	pop    eax
  40f032:	mov    esp,0x4d6d4136
  40f037:	imul   edi,DWORD PTR [edx+0x2a],0xb382ea34
  40f03e:	lock rcr DWORD PTR [ecx-0x46],cl
  40f042:	pop    eax
  40f043:	push   ebp
  40f044:	repz jno 0x40f02e
  40f047:	xlat   BYTE PTR ds:[ebx]
  40f048:	sahf   
  40f049:	ds icebp 
  40f04b:	xchg   ebx,eax
  40f04c:	push   cs
  40f04d:	inc    esp
  40f04e:	cmp    ah,bh
  40f050:	jge    0x40f098
  40f052:	mov    ds:0x917cc610,eax
  40f057:	jo     0x40f0ac
  40f059:	jnp    0x40f008
  40f05b:	jnp    0x40f0c8
  40f05d:	lock xor BYTE PTR [ecx+0x31],al
  40f061:	mov    dh,0x8b
  40f063:	xchg   ebp,eax
  40f064:	mov    esi,0x4eb32d2b
  40f069:	mov    al,ds:0x149938b6
  40f06e:	rol    BYTE PTR [edx-0x259e1ce3],0x64
  40f075:	jmp    0xaa98:0x7ebf52fc
  40f07c:	rcl    dl,0x30
  40f07f:	mov    esp,DWORD PTR [esi+0x3f]
  40f082:	hlt    
  40f083:	in     al,dx
  40f084:	xlat   BYTE PTR ds:[ebx]
  40f085:	sub    esi,edi
  40f087:	out    dx,eax
  40f088:	clc    
  40f089:	jmp    0xfbb86ccb
  40f08e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f08f:	sub    cl,BYTE PTR [ecx-0x6de68ddb]
  40f095:	les    ecx,FWORD PTR [ebp-0x6ebf665d]
  40f09b:	sbb    ebx,DWORD PTR [esi]
  40f09d:	xchg   esi,eax
  40f09e:	aaa    
  40f09f:	rcr    DWORD PTR [esi+ebp*4+0x43],1
  40f0a3:	dec    edi
  40f0a4:	rcl    DWORD PTR [eax+0xf],1
  40f0a7:	xchg   ebx,eax
  40f0a8:	jmp    FWORD PTR [ebx+0x29]
  40f0ab:	mov    edx,0xe0ccd410
  40f0b0:	pop    ebp
  40f0b1:	sti    
  40f0b2:	add    bl,BYTE PTR [edi+edx*8]
  40f0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0b6:	sbb    BYTE PTR [ebx-0x5d],0x27
  40f0ba:	mov    gs,edx
  40f0bc:	lea    esp,[ebx+eax*1]
  40f0bf:	jb     0x40f12f
  40f0c1:	and    esp,DWORD PTR [ecx]
  40f0c3:	rcr    bh,cl
  40f0c5:	dec    ebx
  40f0c6:	add    eax,DWORD PTR [ecx-0x6a]
  40f0c9:	and    DWORD PTR [edi+0x68efec0f],edi
  40f0cf:	std    
  40f0d0:	add    BYTE PTR [edx+eax*4+0x4e],dl
  40f0d4:	or     dh,bl
  40f0d6:	int    0xc
  40f0d8:	xlat   BYTE PTR ds:[ebx]
  40f0d9:	fstp   TBYTE PTR [ebx-0x76]
  40f0dc:	(bad)  
  40f0dd:	add    ah,BYTE PTR [edi]
  40f0df:	cmp    al,ch
  40f0e1:	jb     0x40f0b7
  40f0e3:	dec    ebx
  40f0e4:	in     eax,0x7b
  40f0e6:	fidivr WORD PTR [edx+0x345663bb]
  40f0ec:	sbb    eax,0x6f8d54cf
  40f0f1:	outs   dx,DWORD PTR ds:[esi]
  40f0f2:	dec    eax
  40f0f3:	dec    ebp
  40f0f4:	jmp    0x585566bf
  40f0f9:	dec    eax
  40f0fa:	pusha  
  40f0fb:	mov    ds:0x5a1c4f89,eax
  40f100:	dec    ebx
  40f101:	inc    sp
  40f103:	int    0xeb
  40f105:	fdivr  DWORD PTR [eax]
  40f107:	lock xchg edi,eax
  40f109:	push   edx
  40f10a:	(bad)  
  40f10b:	fst    DWORD PTR [esi]
  40f10d:	sub    ch,BYTE PTR [edx]
  40f10f:	push   ecx
  40f110:	jns    0x40f178
  40f112:	imul   edx,DWORD PTR [edx-0x75],0xffffffa2
  40f116:	add    cl,BYTE PTR [eax+0x5]
  40f119:	out    0x61,eax
  40f11b:	aaa    
  40f11c:	jecxz  0x40f0eb
  40f11e:	and    ah,BYTE PTR [edx]
  40f120:	dec    ebp
  40f121:	imul   ebx,DWORD PTR [edx],0x147b619a
  40f127:	aad    0xb4
  40f129:	mov    gs,edx
  40f12b:	ja     0x40f0fa
  40f12d:	push   edx
  40f12e:	jno    0x40f178
  40f130:	cmp    edx,DWORD PTR ds:0xadf0b974
  40f136:	cld    
  40f137:	push   0xc1e95505
  40f13c:	mov    eax,edi
  40f13e:	pop    esp
  40f13f:	into   
  40f140:	cmc    
  40f141:	xchg   esi,eax
  40f142:	shl    bh,1
  40f144:	mov    ch,BYTE PTR [edi]
  40f146:	cmp    eax,0x5cf7f453
  40f14b:	mov    bh,bl
  40f14d:	mov    BYTE PTR [esi+0xb98f02c],ah
  40f153:	sbb    ah,0xfa
  40f156:	dec    eax
  40f157:	and    eax,0x1cb413a9
  40f15c:	ret    
  40f15d:	das    
  40f15e:	lods   al,BYTE PTR ds:[esi]
  40f15f:	pop    eax
  40f160:	xchg   esp,eax
  40f161:	push   esp
  40f162:	xor    ecx,esp
  40f164:	adc    DWORD PTR [ebp-0x2b],ebp
  40f167:	mov    ds:0xd5b76a52,al
  40f16c:	out    0xff,al
  40f16e:	ins    DWORD PTR es:[edi],dx
  40f16f:	je     0x40f0fe
  40f171:	pop    ebx
  40f172:	lds    ebx,FWORD PTR [edx]
  40f174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f175:	cdq    
  40f176:	ds mov dh,0x17
  40f179:	mov    esp,0x987c2d71
  40f17e:	imul   DWORD PTR [edx+esi*8]
  40f181:	mov    BYTE PTR [esi+0x3bb35367],cl
  40f187:	pop    eax
  40f188:	jnp    0x40f1fa
  40f18a:	push   esp
  40f18b:	sbb    DWORD PTR [edx],ebp
  40f18d:	add    BYTE PTR [edx+0x2f132656],ch
  40f193:	adc    eax,DWORD PTR [ebp+0x606c5f37]
  40f199:	(bad)  
  40f19a:	out    dx,eax
  40f19b:	jb     0x40f1de
  40f19d:	inc    edi
  40f19e:	push   0x76614f2c
  40f1a3:	mov    cl,BYTE PTR [ebx+0x7a7edd2b]
  40f1a9:	outs   dx,BYTE PTR ds:[esi]
  40f1aa:	cmp    BYTE PTR [ebp+0x79b10c5e],0xc0
  40f1b1:	xor    al,0x28
  40f1b3:	mov    WORD PTR [edi+0x4d],es
  40f1b6:	in     al,0xe9
  40f1b8:	mov    ebp,0x94b5f1a3
  40f1bd:	(bad)  
  40f1bf:	(bad)  
  40f1c0:	imul   ebx,DWORD PTR [edx],0x70
  40f1c3:	cmp    ah,ch
  40f1c5:	mov    ebx,0x3a99d965
  40f1ca:	iret   
  40f1cb:	scas   eax,DWORD PTR es:[edi]
  40f1cc:	jmp    0x2d24f4a9
  40f1d1:	mov    DWORD PTR [ecx-0x74820648],esp
  40f1d7:	cmp    DWORD PTR [edx+0x17],esp
  40f1da:	mov    DWORD PTR [ebp-0x66ae58de],eax
  40f1e0:	jnp    0x40f243
  40f1e2:	pop    ebp
  40f1e3:	cmp    al,0xd5
  40f1e5:	jl     0x40f222
  40f1e7:	jg     0x40f182
  40f1e9:	push   ecx
  40f1ea:	inc    esp
  40f1eb:	lock jnp 0x40f257
  40f1ee:	mov    DWORD PTR [ecx+0x1d68b898],edx
  40f1f4:	(bad)  
  40f1f5:	adc    ecx,DWORD PTR [ecx+0xa]
  40f1f8:	ret    0x9f6
  40f1fb:	mov    ah,0xe4
  40f1fd:	or     dl,BYTE PTR [edx+0x51c76661]
  40f203:	adc    al,0x92
  40f205:	cmc    
  40f206:	jl     0x40f195
  40f208:	jge    0x40f203
  40f20a:	call   0x7da47da5
  40f20f:	ret    0xca90
  40f212:	inc    edx
  40f213:	lahf   
  40f214:	in     al,dx
  40f215:	outs   dx,BYTE PTR ds:[esi]
  40f216:	in     eax,0xb2
  40f218:	js     0x40f20d
  40f21a:	pop    ds
  40f21b:	and    al,0x4e
  40f21d:	arpl   WORD PTR [edi-0x1d],dx
  40f220:	mov    ecx,0x1278a8a6
  40f225:	add    al,0x3f
  40f227:	mov    cl,0x62
  40f229:	bswap  ebx
  40f22b:	cmp    dh,BYTE PTR [edi]
  40f22d:	sub    ebp,DWORD PTR [edx+ebp*1+0x3729eec7]
  40f234:	pop    ss
  40f235:	(bad)  
  40f236:	xchg   esp,eax
  40f237:	(bad)  
  40f238:	sub    al,0x7c
  40f23a:	or     ch,BYTE PTR [ecx+eiz*1+0x70]
  40f23e:	sub    eax,DWORD PTR [edi+0x160c7de7]
  40f244:	(bad)  
  40f245:	scas   al,BYTE PTR es:[edi]
  40f246:	test   eax,0x9d6245e1
  40f24b:	xchg   edx,eax
  40f24c:	push   ebx
  40f24d:	jle    0x40f259
  40f24f:	sbb    bh,dl
  40f251:	cli    
  40f252:	fisttp QWORD PTR [eax-0x6648f495]
  40f258:	jo     0x40f228
  40f25a:	push   0x5c54baba
  40f25f:	mov    WORD PTR [ebx+0x170724be],gs
  40f265:	clc    
  40f266:	out    0xbc,eax
  40f268:	mov    ds:0x5a26b218,al
  40f26d:	mov    edi,0x1af3deed
  40f272:	call   0xd88b083
  40f277:	push   ebx
  40f278:	jle    0x40f27b
  40f27a:	pushf  
  40f27b:	out    dx,al
  40f27c:	push   esi
  40f27d:	adc    esp,DWORD PTR [ebp+0x75252ea6]
  40f283:	sub    bh,bh
  40f285:	xor    ebp,edi
  40f287:	sbb    eax,0xbb01cb6d
  40f28c:	mov    ds:0x4a895739,eax
  40f291:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f293:	jb     0x40f229
  40f295:	retf   
  40f296:	or     BYTE PTR [ebx+0x50],bl
  40f299:	mov    eax,0x59ee919
  40f29e:	aad    0xd5
  40f2a0:	ret    0x8659
  40f2a3:	sub    ecx,DWORD PTR [eax]
  40f2a5:	mov    ds:0xb61a308f,eax
  40f2aa:	pop    eax
  40f2ab:	mov    dh,0x37
  40f2ad:	shr    BYTE PTR [eax],cl
  40f2af:	data16 jg 0x40f287
  40f2b2:	fwait
  40f2b3:	xchg   ebx,ebx
  40f2b5:	in     eax,0x37
  40f2b7:	repnz and al,0x63
  40f2ba:	in     eax,0xad
  40f2bc:	icebp  
  40f2bd:	xchg   esi,eax
  40f2be:	lods   al,BYTE PTR ds:[esi]
  40f2bf:	iret   
  40f2c0:	and    DWORD PTR [edi-0x36a6cb67],ebp
  40f2c6:	fmul   DWORD PTR [edi+0x3c1a8800]
  40f2cc:	xor    dl,BYTE PTR [esi+ebp*1-0x1d4d84ba]
  40f2d3:	and    BYTE PTR [eax-0x2023b8e4],0x6a
  40f2da:	mov    BYTE PTR [edx-0x291248b5],ah
  40f2e0:	stos   BYTE PTR es:[edi],al
  40f2e1:	xor    ah,0x47
  40f2e4:	push   esp
  40f2e5:	or     al,0x68
  40f2e7:	xchg   BYTE PTR [esi],cl
  40f2e9:	xlat   BYTE PTR ds:[ebx]
  40f2ea:	std    
  40f2eb:	nop
  40f2ec:	mov    eax,ds:0x355cafe8
  40f2f1:	and    eax,0x2ccd73e7
  40f2f6:	mov    cl,0xef
  40f2f8:	mov    al,0x79
  40f2fa:	jge    0x40f319
  40f2fc:	ficom  DWORD PTR [eax-0x41]
  40f2ff:	shr    BYTE PTR [esi+0x55],0x86
  40f303:	pop    esp
  40f304:	mov    DWORD PTR [edi-0x34],esi
  40f307:	sbb    BYTE PTR [edi-0x6c],dh
  40f30a:	cmp    eax,0xa92c1cc6
  40f30f:	mov    dh,BYTE PTR [esi+0x5307806e]
  40f315:	pop    ebx
  40f316:	xchg   esi,eax
  40f317:	or     DWORD PTR [ebx],esi
  40f319:	mov    ah,0x62
  40f31b:	loope  0x40f2ed
  40f31d:	bound  esp,QWORD PTR fs:[eax-0x6b]
  40f321:	pop    eax
  40f322:	pop    esi
  40f323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f324:	add    al,0x52
  40f326:	lea    ecx,[edx-0x1d]
  40f329:	pusha  
  40f32a:	pop    edx
  40f32b:	jle    0x40f356
  40f32d:	jnp    0x40f2e7
  40f32f:	in     eax,dx
  40f330:	(bad)  
  40f331:	fcom   DWORD PTR [esi+0x2f]
  40f334:	mov    ecx,0xe37b985a
  40f339:	fdivr  DWORD PTR [eax-0x6a43238f]
  40f33f:	xchg   ecx,eax
  40f340:	(bad)  [esi-0x1e]
  40f343:	push   ecx
  40f344:	jae    0x40f3aa
  40f346:	adc    al,0x20
  40f348:	loopne 0x40f389
  40f34a:	ins    DWORD PTR es:[edi],dx
  40f34b:	mov    al,ds:0x9a4b25b2
  40f350:	popa   
  40f351:	retf   0x3268
  40f354:	aad    0xbf
  40f356:	fbstp  TBYTE PTR [esi]
  40f358:	hlt    
  40f359:	rcl    DWORD PTR [ebx],0x68
  40f35c:	enter  0x236c,0xf
  40f360:	adc    DWORD PTR [edx-0x79d75b47],esi
  40f366:	out    0x2d,eax
  40f368:	not    DWORD PTR [ecx]
  40f36a:	scas   al,BYTE PTR es:[edi]
  40f36b:	push   ds
  40f36c:	retf   
  40f36d:	mul    BYTE PTR [ebp-0x61d0af46]
  40f373:	dec    edi
  40f374:	dec    ebx
  40f375:	adc    edi,DWORD PTR [edi-0x2a]
  40f378:	sub    bl,BYTE PTR [esp+eax*1]
  40f37b:	sub    eax,0x532b5e1
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x3b6c973d,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	xchg   edx,eax
  40f484:	push   ebx
  40f485:	je     0x40f461
  40f487:	popa   
  40f488:	xchg   esp,eax
  40f489:	popa   
  40f48a:	mov    cl,0xcf
  40f48c:	das    
  40f48d:	and    ah,al
  40f48f:	add    cl,BYTE PTR [eax]
  40f491:	sahf   
  40f492:	addr16 jl 0x40f470
  40f495:	jge    0x40f432
  40f497:	call   0x97cc3fa0
  40f49c:	jmp    0x8a7c:0x798f697f
  40f4a3:	ja     0x40f48f
  40f4a5:	push   ebx
  40f4a6:	(bad)  
  40f4a7:	mov    ch,0xfe
  40f4a9:	or     eax,0x95610557
  40f4ae:	cmp    DWORD PTR [edx+0x3e],edx
  40f4b1:	cdq    
  40f4b2:	mov    ds:0xc02818d8,al
  40f4b7:	shr    DWORD PTR [edx+0x45],1
  40f4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4bb:	add    ecx,DWORD PTR [esi-0x7e]
  40f4be:	cmp    DWORD PTR [edi+0x34],edx
  40f4c1:	inc    esi
  40f4c2:	xor    esi,DWORD PTR es:[esi+0xc]
  40f4c6:	sar    ch,0xc1
  40f4c9:	inc    ebp
  40f4ca:	lock shl BYTE PTR [edi+eiz*8+0xa58554b],cl
  40f4d2:	xor    esi,DWORD PTR [edi+0x4288464b]
  40f4d8:	or     eax,0x51e360a2
  40f4dd:	lods   al,BYTE PTR ds:[esi]
  40f4de:	pushf  
  40f4df:	cmp    eax,ebx
  40f4e1:	sub    eax,0x1f67773
  40f4e6:	xor    al,0x83
  40f4e8:	lods   eax,DWORD PTR ds:[esi]
  40f4e9:	cdq    
  40f4ea:	sub    bh,BYTE PTR [eax-0x6f6ef00b]
  40f4f0:	and    BYTE PTR [ebx-0x6f161b7a],dl
  40f4f6:	shr    edi,1
  40f4f8:	out    0x39,al
  40f4fa:	aaa    
  40f4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4fc:	dec    esi
  40f4fd:	je     0x40f4d4
  40f4ff:	imul   edx,ebx,0xffffffd6
  40f502:	jbe    0x40f57c
  40f504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f505:	je     0x40f503
  40f507:	mov    ebx,0x9a4d7d0c
  40f50c:	inc    ebx
  40f50d:	pop    edi
  40f50e:	mov    WORD PTR [eax],ds
  40f510:	jecxz  0x40f49a
  40f512:	das    
  40f513:	les    eax,FWORD PTR [edx]
  40f515:	(bad)  [eax-0x359c3bf2]
  40f51b:	in     eax,0x4b
  40f51d:	inc    edi
  40f51e:	lods   al,BYTE PTR ds:[esi]
  40f51f:	mov    DWORD PTR [esp+ecx*2-0x43],ebp
  40f523:	xchg   edx,eax
  40f524:	jmp    0xf2ddf492
  40f529:	outs   dx,BYTE PTR ds:[esi]
  40f52a:	je     0x40f4f3
  40f52c:	ret    0xcf45
  40f52f:	push   0x78
  40f531:	mov    dl,ch
  40f533:	push   0xbe1c498f
  40f538:	addr16 pop es
  40f53a:	cdq    
  40f53b:	adc    BYTE PTR [ebx-0x4a2f7400],cl
  40f541:	aad    0x6e
  40f543:	sbb    al,0x28
  40f545:	pop    edx
  40f546:	cmp    BYTE PTR [esi-0x30f57f01],0x4c
  40f54d:	(bad)  
  40f54e:	inc    ebx
  40f54f:	test   al,0xb2
  40f551:	pop    edx
  40f552:	daa    
  40f553:	inc    edi
  40f554:	loope  0x40f522
  40f556:	imul   edi,DWORD PTR [ebx+0x58],0x6e
  40f55a:	and    ecx,DWORD PTR [ebx]
  40f55c:	cld    
  40f55d:	ret    0x639b
  40f560:	call   DWORD PTR [esi+edx*2]
  40f563:	lahf   
  40f564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f565:	ins    BYTE PTR es:[edi],dx
  40f566:	mov    edi,0x2585c21a
  40f56b:	xor    al,0x70
  40f56d:	fistp  WORD PTR [eax-0x61667dc5]
  40f573:	xor    eax,0x3094e596
  40f578:	xchg   edi,eax
  40f579:	xchg   esi,eax
  40f57a:	and    BYTE PTR [ecx-0x6b],0x5a
  40f57e:	mov    dl,0xe9
  40f580:	sub    bh,BYTE PTR ds:0xb60bd8e3
  40f586:	inc    edx
  40f587:	rcr    DWORD PTR [ebx],0xae
  40f58a:	gs fninit 
  40f58d:	push   eax
  40f58e:	mov    ebp,0x58b988d8
  40f593:	outs   dx,BYTE PTR ds:[esi]
  40f594:	stc    
  40f595:	daa    
  40f596:	add    esi,DWORD PTR [esi]
  40f598:	das    
  40f599:	and    BYTE PTR [ebx],al
  40f59b:	and    al,0x43
  40f59d:	xchg   BYTE PTR ds:0xb80ded4d,bh
  40f5a3:	ja     0x40f60c
  40f5a5:	nop
  40f5a6:	dec    ebp
  40f5a7:	fcmovbe st,st(4)
  40f5a9:	jo     0x40f551
  40f5ab:	or     cl,bl
  40f5ad:	push   cs
  40f5ae:	mov    eax,ds:0x2ebec490
  40f5b3:	xchg   esi,eax
  40f5b4:	xlat   BYTE PTR ds:[ebx]
  40f5b5:	retf   0x3c13
  40f5b8:	push   ebp
  40f5b9:	retf   
  40f5ba:	jmp    0x40f5c3
  40f5bc:	shr    BYTE PTR [edi],0x4d
  40f5bf:	dec    edx
  40f5c0:	jo     0x40f592
  40f5c2:	push   ebp
  40f5c3:	jae    0x40f5e9
  40f5c5:	jmp    0x1bd2c0b7
  40f5ca:	xor    eax,0xd35ca230
  40f5cf:	idiv   DWORD PTR [ecx]
  40f5d1:	inc    edx
  40f5d2:	sbb    eax,0x441d711a
  40f5d7:	in     eax,dx
  40f5d8:	xchg   ebx,eax
  40f5d9:	scas   al,BYTE PTR es:[edi]
  40f5da:	xchg   esp,eax
  40f5db:	jae    0x40f5a6
  40f5dd:	arpl   bx,cx
  40f5df:	or     DWORD PTR [edx+ecx*1-0x39e5e6e],esp
  40f5e6:	mov    bl,0x9c
  40f5e8:	cmc    
  40f5e9:	test   eax,0xc33fb3c2
  40f5ee:	(bad)  
  40f5ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5f0:	mov    dh,0xb6
  40f5f2:	rol    al,1
  40f5f4:	test   al,0x82
  40f5f6:	imul   esp,DWORD PTR [esi+0x34],0xbb308b9a
  40f5fd:	add    BYTE PTR [esi-0x4],dl
  40f600:	jno    0x40f643
  40f602:	cmp    DWORD PTR [ebx],ebp
  40f604:	out    0x90,al
  40f606:	mov    al,ds:0xd9eff725
  40f60b:	rol    DWORD PTR [ebp+ebx*4-0x63],cl
  40f60f:	fild   DWORD PTR ds:0x418e700f
  40f615:	pop    ds
  40f616:	pop    ss
  40f617:	popf   
  40f618:	cs lahf 
  40f61a:	sbb    cl,BYTE PTR [ebp-0x25]
  40f61d:	add    ecx,ebx
  40f61f:	(bad)  
  40f620:	loopne 0x40f674
  40f622:	mov    dl,0x81
  40f624:	mov    dh,0x3a
  40f626:	lods   eax,DWORD PTR ds:[esi]
  40f627:	jg     0x40f5cf
  40f629:	dec    edi
  40f62a:	es sub edx,esp
  40f62d:	aaa    
  40f62e:	sbb    DWORD PTR [eax+0x3c02688],esp
  40f634:	sbb    ch,BYTE PTR [ecx-0x797b6967]
  40f63a:	jno    0x40f5f1
  40f63c:	dec    ebx
  40f63d:	stos   DWORD PTR es:[edi],eax
  40f63e:	lahf   
  40f63f:	mov    al,ds:0xee641910
  40f644:	pavgw  mm2,QWORD PTR [eax]
  40f647:	xchg   BYTE PTR [ebx+0x3a6544fd],bh
  40f64d:	inc    edx
  40f64e:	retf   
  40f64f:	in     eax,dx
  40f650:	or     eax,0xc4addaf0
  40f655:	jns    0x40f60f
  40f657:	out    0xe7,al
  40f659:	fisttp WORD PTR [ebp-0x85ae371]
  40f65f:	mov    ds:0xc36ca765,eax
  40f664:	sub    eax,DWORD PTR [eax]
  40f666:	pop    ebx
  40f667:	pop    edi
  40f668:	pop    es
  40f669:	xchg   DWORD PTR [ecx+0x4513c47c],esp
  40f66f:	add    eax,DWORD PTR [edx+0x4f6b571c]
  40f675:	mov    esp,0xf0bace87
  40f67a:	jge    0x40f6b3
  40f67c:	add    al,BYTE PTR [ecx]
  40f67e:	call   0xc0f79e29
  40f683:	lock cmc 
  40f685:	adc    edi,esi
  40f687:	aaa    
  40f688:	ins    BYTE PTR es:[edi],dx
  40f689:	or     eax,0x715c8cf6
  40f68e:	and    ebp,DWORD PTR [ebx+0x2c58e172]
  40f694:	in     al,dx
  40f695:	sbb    BYTE PTR [edx+0x7b],0x11
  40f699:	popf   
  40f69a:	pop    edi
  40f69b:	add    al,0x54
  40f69d:	cmp    eax,DWORD PTR [edx]
  40f69f:	dec    ecx
  40f6a0:	mov    al,0xda
  40f6a2:	cmp    cl,BYTE PTR [eax-0x2e]
  40f6a5:	ja     0x40f65a
  40f6a7:	ds xchg edx,eax
  40f6a9:	fsub   DWORD PTR ds:0x42b9a806
  40f6af:	das    
  40f6b0:	lods   al,BYTE PTR ds:[esi]
  40f6b1:	pushf  
  40f6b2:	lods   eax,DWORD PTR ds:[esi]
  40f6b3:	adc    ebp,0x9755bc2e
  40f6b9:	mov    edi,0x53e5619c
  40f6be:	or     BYTE PTR [eax-0x18ac9aac],bl
  40f6c4:	dec    edi
  40f6c5:	adc    BYTE PTR [ecx],al
  40f6c7:	fdiv   DWORD PTR [ecx+ebx*4]
  40f6ca:	or     al,0x7c
  40f6cc:	inc    esi
  40f6cd:	aad    0x3e
  40f6cf:	xchg   BYTE PTR [ecx+0x67],dh
  40f6d2:	scas   eax,DWORD PTR es:[edi]
  40f6d3:	inc    ecx
  40f6d4:	retf   0xc428
  40f6d7:	cmp    esp,DWORD PTR [ebp-0x6d]
  40f6da:	xor    BYTE PTR [edi],dh
  40f6dc:	add    esi,DWORD PTR [ebx]
  40f6de:	inc    BYTE PTR [ecx+0x3e]
  40f6e1:	es jmp 0x40f666
  40f6e4:	les    esp,FWORD PTR [ebp-0x55]
  40f6e7:	ficom  DWORD PTR [ebx-0x6725b014]
  40f6ed:	adc    DWORD PTR [edi+0x43a2496d],eax
  40f6f3:	mov    edi,0x60c70ad8
  40f6f8:	sbb    DWORD PTR [ebx-0x1328d5f0],ebp
  40f6fe:	ja     0x40f6da
  40f700:	xor    eax,0x30bb4af5
  40f705:	int    0x33
  40f707:	or     al,0x3f
  40f709:	call   0x608a4036
  40f70e:	fnstsw WORD PTR [ebp-0x46888c24]
  40f714:	in     eax,dx
  40f715:	mov    esi,0x6e19fca
  40f71a:	fwait
  40f71b:	jb     0x40f77b
  40f71d:	nop
  40f71e:	or     edi,DWORD PTR [eax]
  40f720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f721:	add    ebx,DWORD PTR [bp+si-0x235f]
  40f726:	lods   eax,DWORD PTR ds:[esi]
  40f727:	jmp    0x6633:0xc69a1357
  40f72e:	jne    0x40f6f1
  40f730:	push   cs
  40f731:	push   0xcc9289f8
  40f736:	mov    edi,0x4c209e39
  40f73b:	ds gs sahf 
  40f73e:	aad    0xe
  40f740:	jo     0x40f6e6
  40f742:	test   DWORD PTR [eax],edi
  40f744:	xor    BYTE PTR [eax+ebp*2-0x1d],dh
  40f748:	mov    WORD PTR [ecx-0x6e],fs
  40f74b:	dec    ebx
  40f74c:	ret    0xf293
  40f74f:	int3   
  40f750:	jnp    0x40f70f
  40f752:	adc    al,0x0
  40f754:	cld    
  40f755:	iret   
  40f756:	scas   al,BYTE PTR es:[edi]
  40f757:	les    edi,FWORD PTR [ebx-0x47f67bfd]
  40f75d:	dec    edx
  40f75e:	jnp    0x40f7ac
  40f760:	cmp    BYTE PTR [ebp+edi*8+0x5e9cfa2a],dl
  40f767:	jmp    0x40f7e8
  40f769:	add    al,0x3d
  40f76b:	and    edi,esi
  40f76d:	icebp  
  40f76e:	lods   eax,DWORD PTR ds:[esi]
  40f76f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f770:	js     0x40f7ed
  40f772:	dec    ecx
  40f773:	pop    ebp
  40f774:	scas   al,BYTE PTR es:[edi]
  40f775:	leave  
  40f776:	cmp    BYTE PTR [eax],0xd
  40f779:	aaa    
  40f77a:	mov    ebp,0x4d5d987e
  40f77f:	mov    ds:0x37e7ed79,eax
  40f784:	mov    ds:0x4775cc81,al
  40f789:	ds pop ebp
  40f78b:	or     al,0xc1
  40f78d:	jmp    0xd793dcc5
  40f792:	xor    BYTE PTR [edi],dl
  40f794:	das    
  40f795:	lods   al,BYTE PTR ds:[esi]
  40f796:	jp     0x40f815
  40f798:	mov    bl,0x4c
  40f79a:	ror    BYTE PTR [ebp+0xb],cl
  40f79d:	pop    ss
  40f79e:	gs mov bh,0xe9
  40f7a1:	push   0xcc6a9234
  40f7a6:	ror    dl,0xba
  40f7a9:	inc    edx
  40f7aa:	xor    BYTE PTR [edi+0x2de7c998],0xed
  40f7b1:	scas   eax,DWORD PTR es:[edi]
  40f7b2:	(bad)  
  40f7b4:	pop    edx
  40f7b5:	adc    bl,al
  40f7b7:	ret    0x285e
  40f7ba:	int3   
  40f7bb:	inc    esp
  40f7bc:	arpl   WORD PTR [ebx-0x74],cx
  40f7bf:	aaa    
  40f7c0:	adc    bl,ah
  40f7c2:	mul    BYTE PTR [eax+ebx*8-0x6c834ffc]
  40f7c9:	pop    ebx
  40f7ca:	mov    al,0xaa
  40f7cc:	mov    WORD PTR [ebx-0x6ee5f3b6],?
  40f7d2:	push   ecx
  40f7d3:	inc    ecx
  40f7d4:	lahf   
  40f7d5:	int    0xe9
  40f7d7:	nop
  40f7d8:	push   DWORD PTR [edi+edi*8-0x78]
  40f7dc:	ret    
  40f7dd:	mov    ds:0xb6bd309,eax
  40f7e2:	sbb    DWORD PTR [ebx+0x79],esp
  40f7e5:	jb     0x40f81e
  40f7e7:	les    ebx,FWORD PTR [ebp-0x489b9813]
  40f7ed:	mov    ds:0x5bf16755,eax
  40f7f2:	dec    ebp
  40f7f3:	fild   DWORD PTR [ecx+0x52]
  40f7f6:	fisub  DWORD PTR [esi+ecx*2-0x1956a515]
  40f7fd:	fild   WORD PTR [ebp-0x719c9a3f]
  40f803:	dec    eax
  40f804:	push   esp
  40f805:	test   eax,0x7dbccba3
  40f80a:	jmp    0x700f03be
  40f80f:	ds pop ds
  40f811:	stos   DWORD PTR es:[edi],eax
  40f812:	sbb    ebx,DWORD PTR [esi]
  40f814:	or     DWORD PTR [edi],ecx
  40f816:	fnstsw WORD PTR [ebx]
  40f818:	mov    al,ds:0xbcd416ea
  40f81d:	adc    al,0xe7
  40f81f:	mov    ebx,0xb755ddec
  40f824:	mov    edx,0x34ac47af
  40f829:	aam    0xbd
  40f82b:	fild   WORD PTR [eax-0x6abc2378]
  40f831:	repz test bh,al
  40f834:	shl    DWORD PTR [ebp+ecx*8-0x7036d6d2],1
  40f83b:	sub    eax,0xfc36a304
  40f840:	pop    ebx
  40f841:	pop    ebx
  40f842:	aas    
  40f843:	ins    BYTE PTR es:[edi],dx
  40f844:	push   0xffffff82
  40f846:	jno    0x40f865
  40f848:	mov    edi,0xedd0d9a3
  40f84d:	into   
  40f84e:	clc    
  40f84f:	stc    
  40f850:	fdivrp st(2),st
  40f852:	out    dx,al
  40f853:	xor    al,0x72
  40f855:	xor    al,0xbe
  40f857:	(bad)  
  40f858:	adc    al,0xb4
  40f85a:	jge    0x40f7f1
  40f85c:	retf   
  40f85d:	imul   esi,esp,0xd4e5243c
  40f863:	dec    esp
  40f864:	xor    DWORD PTR [esi+0x1b],ecx
  40f867:	int3   
  40f868:	mov    al,0xf1
  40f86a:	mov    ebp,0x962e1398
  40f86f:	mov    WORD PTR [esi+0x3dc69f5],gs
  40f875:	inc    edx
  40f876:	inc    edx
  40f877:	mov    ds:0x3d56870e,al
  40f87c:	mov    dl,0xa0
  40f87e:	or     DWORD PTR [edx-0x26],esi
  40f881:	mov    DWORD PTR [edi],0xe6e75213
  40f887:	pop    ecx
  40f888:	shl    BYTE PTR [ebx],cl
  40f88a:	pop    esp
  40f88b:	shl    dl,cl
  40f88d:	popa   
  40f88e:	iret   
  40f88f:	stc    
  40f890:	dec    ebp
  40f891:	jmp    DWORD PTR [ecx+0x2a70572d]
  40f897:	pop    edi
  40f898:	data16 jnp 0x40f880
  40f89b:	pop    ebp
  40f89c:	add    DWORD PTR [ebp+0x56],ebx
  40f89f:	mov    ch,0x92
  40f8a1:	mov    esp,0x31754bb4
  40f8a6:	jae    0x40f88b
  40f8a8:	test   cl,dh
  40f8aa:	dec    bl
  40f8ac:	fild   WORD PTR [edx-0x6c]
  40f8af:	sbb    eax,0xb6dad976
  40f8b4:	retf   
  40f8b5:	inc    ebp
  40f8b6:	ret    0x149e
  40f8b9:	push   edi
  40f8ba:	xor    ah,BYTE PTR [esi]
  40f8bc:	jno    0x40f8f5
  40f8be:	push   edx
  40f8bf:	test   BYTE PTR [edx+0x3],bh
  40f8c2:	add    eax,0x9319c701
  40f8c7:	pop    edx
  40f8c8:	js     0x40f8fb
  40f8ca:	in     eax,dx
  40f8cb:	shr    BYTE PTR [eax+0x73],cl
  40f8ce:	or     eax,DWORD PTR [ebp+0xb]
  40f8d1:	mov    ah,0x70
  40f8d3:	sti    
  40f8d4:	outs   dx,DWORD PTR ds:[esi]
  40f8d5:	(bad)  
  40f8d6:	fsub   DWORD PTR [ebx-0x265b32ab]
  40f8dc:	ja     0x40f8c2
  40f8de:	mov    ah,0x35
  40f8e0:	mov    bh,0x33
  40f8e2:	imul   ebx,DWORD PTR [esi],0x4d
  40f8e5:	imul   ebp,DWORD PTR ds:0x2c6d125e,0xf462b5e5
  40f8ef:	or     al,0xd6
  40f8f1:	stc    
  40f8f2:	ror    edx,1
  40f8f4:	fwait
  40f8f5:	call   0xc780:0x46ef81b2
  40f8fc:	push   0xffffffba
  40f8fe:	sub    bl,dl
  40f900:	not    BYTE PTR [ecx-0x431fbd2a]
  40f906:	xor    al,0x3a
  40f908:	retf   
  40f909:	pop    es
  40f90a:	addr16 add al,0xfb
  40f90d:	mov    ebx,ss
  40f90f:	(bad)  [edi]
  40f911:	pop    ebp
  40f912:	mov    edx,0x2aad2c76
  40f917:	sub    al,cl
  40f919:	(bad)  
  40f91a:	cmp    ebp,DWORD PTR [eax-0x48]
  40f91d:	cmp    cl,dl
  40f91f:	mov    cl,0x7a
  40f921:	out    0xea,eax
  40f923:	inc    esi
  40f924:	cwde   
  40f925:	jmp    0xe209:0x948e743a
  40f92c:	mov    edx,0x98cb4d32
  40f931:	inc    eax
  40f932:	cs inc ebx
  40f934:	hlt    
  40f935:	jae    0x40f95e
  40f937:	es xor ebp,eax
  40f93a:	fidivr DWORD PTR [esi+0x3e]
  40f93d:	sbb    eax,0xb816369d
  40f942:	sub    al,BYTE PTR [ebp+0x8f76dd]
  40f948:	in     al,dx
  40f949:	mov    esp,0xb2072c9d
  40f94e:	mov    dh,0x7d
  40f950:	outs   dx,BYTE PTR ds:[esi]
  40f951:	lock xchg esi,eax
  40f953:	pop    ss
  40f954:	xlat   BYTE PTR ds:[ebx]
  40f955:	cwde   
  40f956:	and    cl,BYTE PTR [edi+0x74ec9e64]
  40f95c:	xchg   esp,eax
  40f95d:	mov    al,ds:0x83a3cdf7
  40f962:	xchg   ecx,eax
  40f963:	dec    ebx
  40f964:	sbb    al,0xc7
  40f966:	mov    DWORD PTR [edx*8+0x79e4f5c8],edi
  40f96d:	jle    0x40f8fd
  40f96f:	leave  
  40f970:	mov    dl,0x95
  40f972:	iret   
  40f973:	popf   
  40f974:	adc    al,0x17
  40f976:	iret   
  40f977:	iret   
  40f978:	(bad)  
  40f979:	repz jecxz 0x40f9eb
  40f97c:	pop    ebp
  40f97d:	fimul  WORD PTR [ecx+0xe652a2b]
  40f983:	aas    
  40f984:	cli    
  40f985:	mov    ebp,DWORD PTR ds:0xa80dfb4b
  40f98b:	inc    ecx
  40f98c:	and    eax,0xdf2947be
  40f991:	jp     0x40fa06
  40f993:	and    esi,DWORD PTR [esp+eax*4-0x4a1817c7]
  40f99a:	fidivr DWORD PTR [eax]
  40f99c:	addr16 int 0xd9
  40f99f:	mov    al,dl
  40f9a1:	bnd jle 0x40fa02
  40f9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9a5:	ja     0x40f942
  40f9a7:	(bad)  
  40f9a8:	fidiv  DWORD PTR [ebp-0x3c]
  40f9ab:	xor    eax,0xb948dd2a
  40f9b0:	pop    eax
  40f9b1:	jmp    0x2cbd:0x8e559481
  40f9b8:	or     DWORD PTR [ebx+eiz*2+0x4a],ebx
  40f9bc:	popa   
  40f9bd:	pop    ebp
  40f9be:	in     al,dx
  40f9bf:	xchg   edx,eax
  40f9c0:	sub    ecx,DWORD PTR [eax+0x6891a6b9]
  40f9c6:	ret    0xabec
  40f9c9:	or     esp,esp
  40f9cb:	inc    esi
  40f9cc:	sub    al,0xe7
  40f9ce:	add    al,0xd9
  40f9d0:	or     BYTE PTR [ecx+0x2ad74a8f],cl
  40f9d6:	and    cl,BYTE PTR [ebx-0x747bc545]
  40f9dc:	jb     0x40fa2d
  40f9de:	adc    eax,DWORD PTR ds:0xe80e6c0
  40f9e4:	pop    es
  40f9e5:	ds pop eax
  40f9e7:	rcl    BYTE PTR [ebp-0x42cd732c],0x50
  40f9ee:	data16 imul BYTE PTR [edx+0x7c639192]
  40f9f5:	shl    bl,cl
  40f9f7:	sub    DWORD PTR [edx+0x28],ebx
  40f9fa:	clc    
  40f9fb:	jae    0x40fa25
  40f9fd:	xchg   edi,eax
  40f9fe:	retf   0xb815
  40fa01:	pop    ds
  40fa02:	ret    0x11d2
  40fa05:	mov    ds:0x46e6693f,al
  40fa0a:	das    
  40fa0b:	lods   eax,DWORD PTR ds:[esi]
  40fa0c:	scas   al,BYTE PTR es:[edi]
  40fa0d:	rcl    DWORD PTR [eax],0x23
  40fa10:	dec    edx
  40fa11:	xor    ebx,0xd8a8fa86
  40fa17:	jle    0x40f9e7
  40fa19:	pop    ebp
  40fa1a:	inc    ecx
  40fa1b:	fwait
  40fa1c:	mov    ds:0x8d270a0a,eax
  40fa21:	sub    eax,0xc37025c4
  40fa26:	or     edx,DWORD PTR ds:0x205ec0e2
  40fa2c:	out    0x55,eax
  40fa2e:	fs pop ebx
  40fa30:	jge    0x40fa1f
  40fa32:	pop    edx
  40fa33:	ins    DWORD PTR es:[edi],dx
  40fa34:	ins    BYTE PTR es:[edi],dx
  40fa35:	push   esi
  40fa36:	cmp    BYTE PTR [ebp-0xd],ch
  40fa39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa3a:	fstp   DWORD PTR [edx]
  40fa3c:	pop    ss
  40fa3d:	std    
  40fa3e:	mov    edx,0xaeba9e64
  40fa43:	jb     0x40f9dc
  40fa45:	jnp    0x40faa3
  40fa47:	jno    0x40faa7
  40fa49:	ss inc ebx
  40fa4b:	sub    al,0xe6
  40fa4d:	fdivr  QWORD PTR [ebx]
  40fa4f:	pop    es
  40fa50:	and    ah,dh
  40fa52:	pop    ebp
  40fa53:	icebp  
  40fa54:	sub    eax,0xe203d4f4
  40fa59:	retf   
  40fa5a:	sbb    BYTE PTR [ebx+ecx*4],bh
  40fa5d:	shl    DWORD PTR [edi],1
  40fa5f:	jge    0x40faa0
  40fa61:	mov    al,BYTE PTR [edx+0x13]
  40fa64:	adc    eax,0x1ceb4196
  40fa69:	mov    edx,0x83113caa
  40fa6e:	sub    BYTE PTR [edi-0x44],dl
  40fa71:	adc    BYTE PTR [edi-0x34],bl
  40fa74:	or     al,BYTE PTR [eax]
  40fa76:	mov    edx,0xd7d0bdf7
  40fa7b:	retf   0xf9e8
  40fa7e:	repnz stos BYTE PTR es:[edi],al
  40fa80:	nop
  40fa81:	popf   
  40fa82:	pusha  
  40fa83:	loopne 0x40faa6
  40fa85:	lods   eax,DWORD PTR ds:[esi]
  40fa86:	cmp    al,0x8d
  40fa88:	adc    al,BYTE PTR ds:0xa3e8413b
  40fa8e:	fsub   QWORD PTR [eax+0x72874c36]
  40fa94:	mov    ds:0xe6bce79,eax
  40fa99:	sub    al,0x37
  40fa9b:	dec    al
  40fa9d:	(bad)  
  40fa9e:	xchg   edx,eax
  40fa9f:	add    al,0x7c
  40faa1:	mov    ch,0xa7
  40faa3:	bound  edi,QWORD PTR [edx+0x136b3eeb]
  40faa9:	cwde   
  40faaa:	jnp    0x40fb1b
  40faac:	inc    edi
  40faad:	push   es
  40faae:	lds    edi,FWORD PTR [esi+0x60f6e359]
  40fab4:	scas   eax,DWORD PTR es:[edi]
  40fab5:	push   ebx
  40fab6:	ins    BYTE PTR es:[edi],dx
  40fab7:	pop    edx
  40fab8:	inc    ebx
  40fab9:	test   DWORD PTR [edx-0x4c],esp
  40fabc:	(bad)
  40fabf:	add    eax,0x529fb91d
  40fac4:	sub    al,0xa
  40fac6:	jmp    0xef48:0x458e718c
  40facd:	dec    edi
  40face:	inc    DWORD PTR [ebx-0x3f]
  40fad1:	pop    ebp
  40fad2:	sti    
  40fad3:	xor    al,BYTE PTR [esi+eiz*1]
  40fad6:	popa   
  40fad7:	xor    eax,0x890e4ef5
  40fadc:	pop    ebp
  40fadd:	and    BYTE PTR [ebp-0x43],bl
  40fae0:	js     0x40fa77
  40fae2:	mov    BYTE PTR [ecx+0x6f71663d],ch
  40fae8:	dec    edi
  40fae9:	xor    dh,BYTE PTR [ecx+ebx*2+0x57]
  40faed:	adc    BYTE PTR [ebx+0x7b],bh
  40faf0:	mov    ds,esi
  40faf2:	dec    ebx
  40faf3:	and    BYTE PTR [edi],dh
  40faf5:	popa   
  40faf6:	jnp    0x40faa5
  40faf8:	idiv   DWORD PTR [esi+esi*8]
  40fafb:	pop    esp
  40fafc:	ficom  WORD PTR ds:0x7b125384
  40fb02:	or     DWORD PTR [esp+ebx*4],ebx
  40fb05:	mov    eax,cs:0xb32b4740
  40fb0b:	(bad)  
  40fb0c:	push   cs
  40fb0d:	push   ecx
  40fb0e:	dec    ecx
  40fb0f:	rol    BYTE PTR [ebx],cl
  40fb11:	mov    ebp,0x5c9146d
  40fb16:	sbb    eax,0x36d56198
  40fb1b:	jno    0x40fad1
  40fb1d:	xchg   dh,bh
  40fb1f:	aad    0xa8
  40fb21:	and    DWORD PTR ds:0xb9067f5f,0xffffffe6
  40fb28:	xchg   ebx,eax
  40fb29:	fisttp DWORD PTR [edx]
  40fb2b:	(bad)  
  40fb2c:	mov    edx,0xb26a2452
  40fb31:	nop
  40fb32:	xor    BYTE PTR [ebx-0x19],0x4
  40fb36:	xchg   ecx,eax
  40fb37:	fstp   DWORD PTR [edx-0x62a02c58]
  40fb3d:	jnp    0x40fb44
  40fb3f:	sub    eax,0x8839b24f
  40fb44:	out    dx,al
  40fb45:	mov    edi,0xcec50322
  40fb4a:	or     al,0xa3
  40fb4c:	add    edi,DWORD PTR [edi-0x506fef60]
  40fb52:	je     0x40fb39
  40fb54:	push   0x85e4f397
  40fb59:	aad    0xc5
  40fb5b:	jmp    FWORD PTR [ebx+ebx*2+0x1af9cc39]
  40fb62:	repz jns 0x40fbda
  40fb65:	xchg   ebp,eax
  40fb66:	jmp    0x40fb2e
  40fb68:	inc    ebp
  40fb69:	(bad)
  40fb6c:	sub    ecx,ebp
  40fb6e:	arpl   WORD PTR [edi-0x584f426e],bp
  40fb74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb75:	xor    eax,0x48080c6f
  40fb7a:	fcmovb st,st(1)
  40fb7c:	mov    BYTE PTR [esi-0x1cdbe7dc],bl
  40fb82:	dec    eax
  40fb83:	repz in al,0x7
  40fb86:	lods   al,BYTE PTR ds:[esi]
  40fb87:	cmp    al,0x79
  40fb89:	jmp    0x40fb35
  40fb8b:	nop
  40fb8c:	cwde   
  40fb8d:	push   es
  40fb8e:	or     al,0xda
  40fb90:	outs   dx,BYTE PTR ds:[esi]
  40fb91:	pop    ecx
  40fb92:	push   ds
  40fb93:	loop   0x40fb9f
  40fb95:	stos   DWORD PTR es:[edi],eax
  40fb96:	or     esi,eax
  40fb98:	int3   
  40fb99:	cmp    al,0xfd
  40fb9b:	jge    0x40fbd1
  40fb9d:	adc    bl,BYTE PTR [ecx+0x529309e0]
  40fba3:	pop    eax
  40fba4:	sbb    eax,0xa1898fcc
  40fba9:	das    
  40fbaa:	lock inc ecx
  40fbac:	push   esi
  40fbad:	fwait
  40fbae:	or     bl,BYTE PTR [eax-0x42aac6c2]
  40fbb4:	dec    esi
  40fbb5:	leave  
  40fbb6:	sbb    BYTE PTR [ebx],cl
  40fbb8:	jl     0x40fb40
  40fbba:	dec    esi
  40fbbb:	cdq    
  40fbbc:	outs   dx,BYTE PTR ds:[esi]
  40fbbd:	dec    eax
  40fbbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbbf:	popa   
  40fbc0:	dec    esi
  40fbc1:	cdq    
  40fbc2:	rol    BYTE PTR [esi],0xdb
  40fbc5:	xchg   ecx,eax
  40fbc6:	outs   dx,BYTE PTR ds:[esi]
  40fbc7:	jle    0x40fb56
  40fbc9:	icebp  
  40fbca:	call   0x93aa:0xb915e2e6
  40fbd1:	scas   al,BYTE PTR es:[edi]
  40fbd2:	shl    BYTE PTR [ebx+0x3056055b],1
  40fbd8:	rcl    BYTE PTR ds:0xca99392b,cl
  40fbde:	xchg   BYTE PTR [ebp-0x7359863],bl
  40fbe4:	cmp    al,0x3
  40fbe6:	fidiv  WORD PTR [edx]
  40fbe8:	and    eax,0x89937e74
  40fbed:	or     ecx,DWORD PTR [edi]
  40fbef:	aam    0xf3
  40fbf1:	bnd ja 0x40fc57
  40fbf4:	shl    BYTE PTR [edi+ecx*2-0x2072a6e9],1
  40fbfb:	or     cl,bh
  40fbfd:	lods   eax,DWORD PTR ds:[esi]
  40fbfe:	pop    ds
  40fbff:	in     eax,dx
  40fc00:	inc    ebx
  40fc01:	sbb    eax,0x23fe000d
  40fc06:	leave  
  40fc07:	and    eax,0x3ef98aef
  40fc0c:	dec    ebx
  40fc0d:	shl    esi,1
  40fc0f:	push   cs
  40fc10:	xor    DWORD PTR [esi+0x3d5fdd01],edi
  40fc16:	mov    bl,0x81
  40fc18:	push   ds
  40fc19:	(bad)  
  40fc1a:	sahf   
  40fc1b:	mov    ch,0x9d
  40fc1d:	dec    ecx
  40fc1e:	sub    bl,cl
  40fc20:	sti    
  40fc21:	lahf   
  40fc22:	ja     0x40fc0d
  40fc24:	rcl    cl,cl
  40fc26:	and    DWORD PTR [eax],esi
  40fc28:	stos   DWORD PTR es:[edi],eax
  40fc29:	fisttp WORD PTR [ebp-0x1f]
  40fc2c:	xchg   ecx,eax
  40fc2d:	xor    dh,0xcf
  40fc30:	stos   BYTE PTR es:[edi],al
  40fc31:	dec    esi
  40fc32:	jmp    0x8fe6:0xb977df61
  40fc39:	sub    BYTE PTR [esp+eax*8-0x40],dh
  40fc3d:	js     0x40fc9d
  40fc3f:	nop
  40fc40:	out    0x82,al
  40fc42:	cli    
  40fc43:	enter  0x20da,0x65
  40fc47:	push   es
  40fc48:	icebp  
  40fc49:	in     eax,dx
  40fc4a:	inc    esp
  40fc4b:	mov    ds:0xcb4bdf5e,al
  40fc50:	mov    DWORD PTR [edx-0x6938e628],eax
  40fc56:	jl     0x40fc59
  40fc58:	(bad)  
  40fc59:	pop    edi
  40fc5a:	mov    edi,0xc31709e0
  40fc5f:	rol    al,1
  40fc61:	jg     0x40fc64
  40fc63:	(bad)  
  40fc64:	push   0x919a33fe
  40fc69:	pop    esp
  40fc6a:	sti    
  40fc6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc6c:	adc    eax,0x3e275f1
  40fc71:	lods   eax,DWORD PTR ds:[esi]
  40fc72:	fwait
  40fc73:	lea    ebp,[ecx+0x4c]
  40fc76:	add    BYTE PTR [esi-0x70],0x85
  40fc7a:	xlat   BYTE PTR ds:[ebx]
  40fc7b:	aad    0x7e
  40fc7d:	addr16 es xchg ebx,eax
  40fc80:	fucomp st(1)
  40fc82:	ficomp WORD PTR [edx-0x48bbf314]
  40fc88:	mov    ah,0xd8
  40fc8a:	mov    DWORD PTR [edi+0xa37f448],0xfa438803
  40fc94:	xor    al,0x16
  40fc96:	sub    esi,esi
  40fc98:	rcr    DWORD PTR [eax+0x2c],1
  40fc9b:	xor    esi,DWORD PTR [eax+0x30b9acdb]
  40fca1:	ss in  al,dx
  40fca3:	mov    esi,?
  40fca5:	dec    eax
  40fca6:	add    al,0xdb
  40fca8:	push   0xffffff89
  40fcaa:	(bad)  
  40fcab:	pop    esp
  40fcac:	cs mov edx,0xdcff5b63
  40fcb2:	mov    bl,0x4
  40fcb4:	loop   0x40fca5
  40fcb6:	jecxz  0x40fcb3
  40fcb8:	jno    0x40fd0e
  40fcba:	inc    esp
  40fcbb:	lock in eax,dx
  40fcbd:	mov    WORD PTR [edx+0x8],cs
  40fcc0:	xor    DWORD PTR [esi+edx*4+0x59],ebp
  40fcc4:	arpl   WORD PTR [edi],dx
  40fcc6:	adc    esi,eax
  40fcc8:	push   cs
  40fcc9:	dec    edx
  40fcca:	in     al,0x72
  40fccc:	add    BYTE PTR [ecx-0x4ae48686],bh
  40fcd2:	into   
  40fcd3:	inc    esp
  40fcd4:	in     al,0xe3
  40fcd6:	test   eax,0x2f906ca3
  40fcdb:	punpckhbw mm1,QWORD PTR [edi+ebx*8+0x65]
  40fce0:	mov    BYTE PTR [ecx+esi*1+0x16],0x76
  40fce5:	xchg   DWORD PTR [edx-0x13fbef70],esi
  40fceb:	daa    
  40fcec:	inc    eax
  40fced:	(bad)  
  40fcee:	jno    0x40fcee
  40fcf0:	jge    0x40fc7c
  40fcf2:	pop    edi
  40fcf3:	es jno 0x40fc9c
  40fcf6:	call   0x4b5b:0x1bcca44d
  40fcfd:	jmp    0x40fd4c
  40fcff:	dec    ecx
  40fd00:	fisttp WORD PTR [esi+edi*1]
  40fd03:	repnz mov cl,0xed
  40fd06:	in     al,0x34
  40fd08:	sbb    BYTE PTR [eax+0xeef78fb],dl
  40fd0e:	dec    ebx
  40fd0f:	iret   
  40fd10:	fimul  DWORD PTR [ecx+esi*2]
  40fd13:	push   ebp
  40fd14:	inc    eax
  40fd15:	ss sub ebp,DWORD PTR cs:[edi+ebx*4]
  40fd1a:	push   cs
  40fd1b:	inc    edi
  40fd1c:	jns    0x40fd70
  40fd1e:	fldcw  WORD PTR [eax]
  40fd20:	nop
  40fd21:	inc    ebx
  40fd22:	cmp    cl,BYTE PTR ds:0xce63dd5f
  40fd28:	push   ecx
  40fd29:	cdq    
  40fd2a:	adc    eax,0x61ef8d74
  40fd2f:	sbb    cl,bl
  40fd31:	adc    al,0x29
  40fd33:	dec    eax
  40fd34:	outs   dx,BYTE PTR ds:[esi]
  40fd35:	in     eax,dx
  40fd36:	fwait
  40fd37:	adc    BYTE PTR [esi+0x42],dh
  40fd3a:	and    DWORD PTR [esi-0x38],edx
  40fd3d:	jae    0x40fd75
  40fd3f:	fisub  WORD PTR [esi*1+0x406b7784]
  40fd46:	sbb    eax,0xdc6208eb
  40fd4b:	and    DWORD PTR [eax+0x13],0xc89072b7
  40fd52:	sub    DWORD PTR [esi],ecx
  40fd54:	pop    ebx
  40fd55:	xor    al,0xa
  40fd57:	dec    ecx
  40fd58:	dec    ecx
  40fd59:	sub    eax,0x2439cf46
  40fd5e:	jno    0x40fdd1
  40fd60:	sub    al,BYTE PTR [eax-0x4d325e07]
  40fd66:	pop    ebp
  40fd67:	call   0xdace2173
  40fd6c:	into   
  40fd6d:	test   BYTE PTR [edx],cl
  40fd6f:	icebp  
  40fd70:	pop    ss
  40fd71:	test   DWORD PTR [eax-0x30],eax
  40fd74:	lods   eax,DWORD PTR es:[esi]
  40fd76:	out    dx,al
  40fd77:	retf   0xba38
  40fd7a:	mov    ah,0x25
  40fd7c:	ror    BYTE PTR [ebp+0x77],1
  40fd7f:	jmp    0x7fbd:0xf400cfe
  40fd86:	(bad)  
  40fd87:	mov    ecx,0x1d7b6258
  40fd8c:	fisubr WORD PTR [eax]
  40fd8e:	mov    al,bh
  40fd90:	inc    esi
  40fd91:	out    0x87,eax
  40fd93:	push   eax
  40fd94:	mov    edi,0x72193b13
  40fd99:	retf   0xb863
  40fd9c:	sahf   
  40fd9d:	test   al,0x18
  40fd9f:	mov    es,edx
  40fda1:	pop    ss
  40fda2:	inc    edx
  40fda3:	dec    edi
  40fda4:	cmp    bh,cl
  40fda6:	jmp    0xf38c1ca9
  40fdab:	and    eax,0x27e68f6
  40fdb0:	jnp    0x40fd34
  40fdb2:	loopne 0x40fda5
  40fdb4:	adc    eax,0x68b64588
  40fdb9:	std    
  40fdba:	in     al,0x7d
  40fdbc:	and    BYTE PTR fs:[ebx+0x6a3ed7e3],0x66
  40fdc4:	lahf   
  40fdc5:	mov    ds:0x9f47845f,eax
  40fdca:	retf   0x76dd
  40fdcd:	push   ebp
  40fdce:	inc    ebx
  40fdcf:	xchg   ebp,eax
  40fdd0:	push   es
  40fdd1:	sub    ebx,0x6f
  40fdd4:	cmp    DWORD PTR [edx],ebp
  40fdd6:	aas    
  40fdd7:	fwait
  40fdd8:	inc    esi
  40fdd9:	iret   
  40fdda:	cmp    BYTE PTR [ebp+0x7d],ah
  40fddd:	in     al,0x1
  40fddf:	adc    eax,0x1ed3500f
  40fde4:	cmp    eax,0xa2890db7
  40fde9:	leave  
  40fdea:	das    
  40fdeb:	call   0x7bcc:0xaa8a80ac
  40fdf2:	mov    eax,0x69269339
  40fdf7:	push   edx
  40fdf8:	jae    0x40fdc6
  40fdfa:	push   esp
  40fdfb:	or     al,0xe9
  40fdfe:	cmp    ebx,esp
  40fe00:	inc    ecx
  40fe01:	xchg   esp,eax
  40fe02:	dec    eax
  40fe03:	inc    edx
  40fe04:	push   esi
  40fe05:	push   es
  40fe06:	aad    0x52
  40fe08:	shl    ebx,1
  40fe0a:	test   al,0xd9
  40fe0c:	pop    edx
  40fe0d:	add    eax,DWORD PTR [eax]
  40fe0f:	cmp    DWORD PTR gs:[ebx-0x1bff3924],esp
  40fe16:	push   0x70
  40fe18:	(bad)  
  40fe19:	fild   QWORD PTR [ebx+0x31]
  40fe1c:	inc    ebx
  40fe1d:	jecxz  0x40fe11
  40fe1f:	sbb    al,0x4e
  40fe21:	ss push ebp
  40fe23:	ins    BYTE PTR es:[edi],dx
  40fe24:	jmp    0x40fe20
  40fe26:	into   
  40fe27:	out    0xa3,eax
  40fe29:	call   0xd0a7:0x637a6793
  40fe30:	jmp    0xdefb:0x502545e3
  40fe37:	mov    edx,DWORD PTR [esi+0x22f37be1]
  40fe3d:	or     bh,0x83
  40fe40:	mov    WORD PTR [eax+0x14cd967e],ss
  40fe46:	scas   eax,DWORD PTR es:[edi]
  40fe47:	aaa    
  40fe48:	cmp    eax,0x646434d3
  40fe4d:	mov    ebp,0xff6be76b
  40fe52:	shr    DWORD PTR [ecx+0x67a5ed73],1
  40fe58:	inc    ebx
  40fe59:	jb     0x40fe73
  40fe5b:	fiadd  WORD PTR [edi-0x5f]
  40fe5e:	mov    BYTE PTR [edi+0x33],bl
  40fe61:	mov    ah,BYTE PTR [ebx-0x79]
  40fe64:	cmp    ch,al
  40fe66:	or     BYTE PTR [edx],bh
  40fe68:	nop
  40fe69:	(bad)  
  40fe6a:	aam    0x5c
  40fe6c:	(bad)  
  40fe6d:	ss into 
  40fe6f:	and    ecx,DWORD PTR [esi]
  40fe71:	in     al,0xc6
  40fe73:	retf   
  40fe74:	ja     0x40fdf8
  40fe76:	mov    al,BYTE PTR [esi-0x6b]
  40fe79:	inc    ebx
  40fe7a:	cli    
  40fe7b:	fcomp  DWORD PTR [edx-0x2a65bfb2]
  40fe81:	jge    0x40feeb
  40fe83:	pusha  
  40fe84:	push   esp
  40fe85:	mov    esp,0x1a8fca45
  40fe8a:	cwde   
  40fe8b:	cmc    
  40fe8c:	pop    ss
  40fe8d:	scas   eax,DWORD PTR es:[edi]
  40fe8e:	push   0xffffffe1
  40fe90:	sub    esp,DWORD PTR [ebx+edi*8-0x2ad43f54]
  40fe97:	inc    edi
  40fe98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe99:	jb     0x40fe7e
  40fe9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe9c:	fiadd  DWORD PTR [esi]
  40fe9e:	jmp    0x2717:0x5001874c
  40fea5:	in     al,0x77
  40fea7:	das    
  40fea8:	adc    DWORD PTR [eax-0x78403341],0xfffffff2
  40feaf:	data16 fsub DWORD PTR [edx+0x17d43bf1]
  40feb6:	ja     0x40fe92
  40feb8:	ins    DWORD PTR es:[edi],dx
  40feb9:	mov    ds:0xc9ad7f88,al
  40febe:	jp     0x40fe4d
  40fec0:	test   BYTE PTR [eax-0x5f37b646],al
  40fec6:	add    ah,0xac
  40fec9:	add    al,ch
  40fecb:	dec    esp
  40fecc:	xchg   esp,eax
  40fecd:	mov    edi,0x2731a879
  40fed2:	fsub   QWORD PTR [ebp-0x4ea29a69]
  40fed8:	mov    cl,0x3
  40feda:	sbb    eax,DWORD PTR [ebp+0x75]
  40fedd:	mov    edx,0xc0ff677e
  40fee2:	ficom  DWORD PTR [eax+0x63bad0de]
  40fee8:	xor    edx,DWORD PTR [eax-0x18]
  40feeb:	dec    ebx
  40feec:	inc    ecx
  40feed:	je     0x40ff2f
  40feef:	sbb    al,0x72
  40fef1:	and    cl,0x68
  40fef4:	push   ss
  40fef5:	ffreep st(7)
  40fef7:	xchg   DWORD PTR [ecx],ebx
  40fef9:	popa   
  40fefa:	aam    0x9
  40fefc:	out    dx,al
  40fefd:	ja     0x40ff16
  40feff:	pushf  
  40ff00:	sub    ebx,edx
  40ff02:	pop    DWORD PTR [ebp+edi*1-0x50d9547d]
  40ff09:	cmp    eax,0xb9c82214
  40ff0e:	and    BYTE PTR es:[ecx+0x413298a4],bh
  40ff15:	xchg   ecx,eax
  40ff16:	cmp    al,0xc6
  40ff18:	std    
  40ff19:	add    ebp,DWORD PTR [edi+ebx*4]
  40ff1c:	addr16 and esp,ebx
  40ff1f:	jg     0x40ff2c
  40ff21:	inc    esp
  40ff22:	repz pop eax
  40ff24:	push   0x3c4c3f56
  40ff29:	sbb    ecx,DWORD PTR [ebx+0x1f01188]
  40ff2f:	add    BYTE PTR [edi+0x1b],0x1c
  40ff33:	(bad)  
  40ff34:	xlat   BYTE PTR ds:[ebx]
  40ff35:	(bad)  
  40ff36:	or     DWORD PTR ds:0xb257fed3,ebx
  40ff3c:	pop    esi
  40ff3d:	jno    0x40fed6
  40ff3f:	hlt    
  40ff40:	inc    eax
  40ff41:	mov    cl,0x61
  40ff43:	push   ebx
  40ff44:	mov    eax,ds:0x7f816802
  40ff49:	popf   
  40ff4a:	jbe    0x40fee1
  40ff4c:	scas   eax,DWORD PTR es:[edi]
  40ff4d:	or     dh,BYTE PTR [ecx+esi*8-0x44439823]
  40ff54:	mov    al,0x44
  40ff56:	dec    ebx
  40ff57:	mov    DWORD PTR [eax+0x6a],ebp
  40ff5a:	jno    0x40ffd5
  40ff5c:	loope  0x40ff17
  40ff5e:	xor    BYTE PTR [esi+0x3f05d584],dh
  40ff64:	test   eax,0xba789f03
  40ff69:	adc    eax,0xf47d2f26
  40ff6e:	pop    esi
  40ff6f:	ins    BYTE PTR es:[edi],dx
  40ff70:	into   
  40ff71:	cwde   
  40ff72:	popa   
  40ff73:	dec    ecx
  40ff74:	mov    ebx,0x98ca640
  40ff79:	add    eax,DWORD PTR [ebx]
  40ff7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff7c:	clc    
  40ff7d:	push   eax
  40ff7e:	mov    bh,0x59
  40ff80:	call   0x484c:0xb1559cc7
  40ff87:	shl    DWORD PTR [esi+edi*4-0x2c],0x47
  40ff8c:	clc    
  40ff8d:	das    
  40ff8e:	add    al,0xed
  40ff90:	or     bh,0xbc
  40ff93:	and    BYTE PTR [edx],dl
  40ff95:	and    al,0xf6
  40ff97:	pusha  
  40ff98:	sub    eax,0xe68c1351
  40ff9d:	lods   al,BYTE PTR ds:[esi]
  40ff9e:	jmp    0x5dcd4f8a
  40ffa3:	in     eax,dx
  40ffa4:	rcl    bl,1
  40ffa6:	mov    esp,0xddfd1ddd
  40ffab:	popa   
  40ffac:	cmp    DWORD PTR [edi-0x467e58a6],esi
  40ffb2:	shl    DWORD PTR [ebp-0x3f139924],0xdf
  40ffb9:	enter  0x61f,0x7f
  40ffbd:	ins    DWORD PTR es:[edi],dx
  40ffbe:	push   cs
  40ffbf:	sub    DWORD PTR [ebx],esi
  40ffc1:	sbb    edx,DWORD PTR [esi+ecx*8]
  40ffc4:	fs xor esp,eax
  40ffc7:	cmp    al,0x21
  40ffc9:	mov    eax,ds:0x429adda8
  40ffce:	pushf  
  40ffcf:	maxps  xmm2,XMMWORD PTR [ecx]
  40ffd2:	ja     0x410051
  40ffd4:	sub    ebp,DWORD PTR [edx]
  40ffd6:	ss test dl,bl
  40ffd9:	push   ds
  40ffda:	xchg   ebp,eax
  40ffdb:	fsub   DWORD PTR [ebx]
  40ffdd:	xor    bl,BYTE PTR [ecx+0x96ac687]
  40ffe3:	sbb    ebp,DWORD PTR [eax+0x58]
  40ffe6:	adc    DWORD PTR [edx+0x265d4c4d],eax
  40ffec:	adc    al,0xb7
  40ffee:	cmp    ebp,esp
  40fff0:	(bad)
  40fff3:	jo     0x410056
  40fff5:	jbe    0x40ffb3
  40fff7:	push   esp
  40fff8:	ja     0x410014
  40fffa:	loopne 0x40ff9a
  40fffc:	setl   BYTE PTR [ebp-0x58a07bf]
  410003:	sub    DWORD PTR [eax-0x78],edx
  410006:	jmp    0x45b5bc92
  41000b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41000c:	push   eax
  41000d:	push   0xffffffc5
  41000f:	adc    ecx,edx
  410011:	xor    al,0xc4
  410013:	lahf   
  410014:	in     eax,dx
  410015:	(bad)  [ebx]
  410017:	pusha  
  410018:	retf   
  410019:	dec    esi
  41001a:	jae    0x40fffe
  41001c:	test   al,0xed
  41001e:	add    WORD PTR [ebp+0x695dbf2f],si
  410025:	add    dh,BYTE PTR [esi-0x4a]
  410028:	fbstp  TBYTE PTR [edx-0xe]
  41002b:	icebp  
  41002c:	cmp    ebx,ebx
  41002e:	ret    0xc5f2
  410031:	(bad)  
  410032:	mov    edx,0x17afe297
  410037:	repz pop ebp
  410039:	clc    
  41003a:	fmul   QWORD PTR [ebx-0x59]
  41003d:	or     eax,0xafad39aa
  410042:	push   esi
  410043:	mov    edi,0x9ddbb53d
  410048:	leave  
  410049:	bound  ebp,QWORD PTR [edx+0x2b]
  41004c:	sbb    edx,0xf56e067e
  410052:	stc    
  410053:	xchg   DWORD PTR [esi-0x1998b62a],ecx
  410059:	jb     0x410057
  41005b:	adc    BYTE PTR [ebx],ah
  41005d:	and    DWORD PTR [esi],esi
  41005f:	addr16 mov dh,0xf8
  410062:	mov    ebp,ds
  410064:	push   ebx
  410065:	cld    
  410066:	jl     0x41004e
  410068:	sbb    al,0x4b
  41006a:	pop    edx
  41006b:	in     al,0x3
  41006d:	outs   dx,DWORD PTR ds:[esi]
  41006e:	fs dec ebx
  410070:	and    al,0x1c
  410072:	xlat   BYTE PTR ds:[ebx]
  410073:	cld    
  410074:	add    ecx,DWORD PTR [ebp+esi*2+0x19]
  410078:	aad    0x55
  41007a:	xor    BYTE PTR [ebx-0x7f28a956],0xcb
  410081:	jg     0x410008
  410083:	bound  ebx,QWORD PTR ds:0x52f26868
  410089:	pop    ebx
  41008a:	mov    edx,0xcc17fc58
  41008f:	mov    ds:0xcacb0c3f,eax
  410094:	mov    bl,bl
  410096:	(bad)
  410099:	pop    eax
  41009a:	pop    ebx
  41009b:	push   esp
  41009c:	leave  
  41009d:	aas    
  41009e:	jmp    0x8e88:0x1a1e9aa3
  4100a5:	addr16 nop
  4100a7:	inc    ebp
  4100a8:	test   al,0x30
  4100aa:	into   
  4100ab:	push   ds
  4100ac:	es in  eax,0x3
  4100af:	aaa    
  4100b0:	mov    edi,0xc2bd367f
  4100b5:	mov    ecx,0xb951b47e
  4100ba:	add    bl,BYTE PTR [ebx]
  4100bc:	push   edx
  4100bd:	fstp   QWORD PTR [eax-0x5c]
  4100c0:	loopne 0x410120
  4100c2:	out    dx,al
  4100c3:	inc    edi
  4100c4:	mov    esi,0x7e63acc4
  4100c9:	mov    ds:0x99c37dda,al
  4100ce:	(bad)  
  4100cf:	mov    bl,0xa9
  4100d1:	or     edx,ecx
  4100d3:	loope  0x410140
  4100d5:	xor    bh,0xbb
  4100d8:	sub    ah,BYTE PTR [ebx+0x77733b46]
  4100de:	or     al,0xcf
  4100e0:	mov    bh,0x6
  4100e2:	or     eax,0xbcfe8b07
  4100e7:	ins    DWORD PTR es:[edi],dx
  4100e8:	pop    esi
  4100e9:	add    ah,BYTE PTR [ebx]
  4100eb:	cmp    BYTE PTR [ecx],al
  4100ed:	(bad)  
  4100ee:	mov    ds:0xf521c48d,eax
  4100f3:	mov    eax,DWORD PTR [edx-0x76]
  4100f6:	scas   al,BYTE PTR es:[edi]
  4100f7:	jmp    0x980c:0x7a5dd1a5
  4100fe:	cmp    al,0x15
  410100:	push   es
  410101:	xor    eax,0x75f12e34
  410106:	and    eax,DWORD PTR [ebx]
  410108:	jl     0x410179
  41010a:	inc    ebp
  41010b:	pop    eax
  41010c:	jmp    0xcdc8:0x6e9f19bd
  410113:	pop    esp
  410114:	jo     0x41018d
  410116:	test   eax,0xafacb41a
  41011b:	or     eax,esi
  41011d:	and    eax,0xfbb04fa6
  410122:	pop    ecx
  410123:	outs   dx,DWORD PTR ds:[esi]
  410124:	add    DWORD PTR [esi],esp
  410126:	jp     0x41017e
  410128:	add    DWORD PTR [ecx],ebp
  41012a:	pop    edx
  41012b:	shl    DWORD PTR [ecx+0x2dcfa748],1
  410131:	pop    esi
  410132:	shl    DWORD PTR [eax+0x2b0483ea],0xaa
  410139:	adc    ebx,esp
  41013b:	outs   dx,DWORD PTR ds:[esi]
  41013c:	rcr    DWORD PTR [ebx+edx*4+0x2f6f76ff],1
  410143:	scas   eax,DWORD PTR es:[edi]
  410144:	scas   eax,DWORD PTR es:[edi]
  410145:	loop   0x4101b8
  410147:	pop    esp
  410148:	adc    al,0xfb
  41014a:	sbb    DWORD PTR [eax+0xbc22e62],ecx
  410150:	out    0xd3,eax
  410152:	fwait
  410153:	push   0xffffff91
  410155:	jmp    0x41011e
  410157:	mov    WORD PTR [edx],ds
  410159:	push   edx
  41015a:	test   eax,0x2c617ce4
  41015f:	xlat   BYTE PTR ds:[ebx]
  410160:	jmp    0x1f48:0xe55fcfd0
  410167:	mov    esi,0xea916c8e
  41016c:	call   DWORD PTR [ecx-0x5e]
  41016f:	push   esi
  410170:	sahf   
  410171:	bound  ebx,QWORD PTR [ebp-0x3deaf5b9]
  410177:	mov    eax,ds:0x8fb1611
  41017c:	je     0x410153
  41017e:	(bad)  
  41017f:	inc    ebx
  410180:	or     cl,0x9e
  410183:	sub    DWORD PTR [ecx-0x7f],eax
  410186:	push   ebx
  410187:	cli    
  410188:	jns    0x4101e6
  41018a:	sub    eax,0x9a8114f9
  41018f:	sar    BYTE PTR [ebx-0x63a95c69],0xe9
  410196:	jno    0x4101a7
  410198:	push   esp
  410199:	and    al,0xae
  41019b:	xchg   esp,eax
  41019c:	dec    ebp
  41019d:	or     ah,BYTE PTR [esi]
  41019f:	push   edx
  4101a0:	neg    DWORD PTR [esi-0x4f]
  4101a3:	rcr    BYTE PTR [ecx-0x6e],cl
  4101a6:	mov    dh,0x9f
  4101a8:	shl    DWORD PTR [ebx],0x42
  4101ab:	dec    edi
  4101ac:	loop   0x41012e
  4101ae:	adc    ch,BYTE PTR [ecx+edi*1]
  4101b1:	ret    
  4101b2:	mov    edx,DWORD PTR [ebx+0x1a]
  4101b5:	xor    eax,0xcae0abe4
  4101ba:	stos   DWORD PTR es:[edi],eax
  4101bb:	pop    edi
  4101bc:	pop    es
  4101bd:	push   0xc5595514
  4101c2:	lds    esi,FWORD PTR [ebp+0x38]
  4101c5:	repnz and BYTE PTR [bx+si+0x4b],dl
  4101ca:	pop    esp
  4101cb:	lods   al,BYTE PTR ds:[esi]
  4101cc:	es xchg ebp,eax
  4101ce:	out    0xe1,al
  4101d0:	jns    0x4101f3
  4101d2:	repz or DWORD PTR [edi-0x6f],edi
  4101d6:	(bad)  
  4101d8:	mov    esi,0x1ce1bd0
  4101dd:	aad    0x1
  4101df:	inc    ebp
  4101e0:	adc    BYTE PTR [edx],cl
  4101e2:	mov    ebx,0x603abf1e
  4101e7:	imul   ebp,DWORD PTR [esi-0x39],0xac0f048
  4101ee:	cwde   
  4101ef:	in     al,0x48
  4101f1:	fadd   DWORD PTR [esi]
  4101f3:	ins    BYTE PTR es:[edi],dx
  4101f4:	sub    al,0x48
  4101f6:	pushf  
  4101f7:	into   
  4101f8:	cmp    DWORD PTR [eax-0x4b1b1550],edx
  4101fe:	pop    ds
  4101ff:	adc    DWORD PTR [ebp+ecx*1-0x30d630d9],ebp
  410206:	cmp    DWORD PTR [ebp+0x7ffd401e],edx
  41020c:	ret    
  41020d:	add    ebx,ebx
  41020f:	scas   eax,DWORD PTR es:[edi]
  410210:	cdq    
  410211:	push   edi
  410212:	pop    esp
  410213:	pop    esi
  410214:	das    
  410215:	mov    DWORD PTR [eax-0x76f0df21],eax
  41021b:	jl     0x4101f1
  41021d:	add    edi,0x30b7a688
  410223:	push   ss
  410224:	xor    cl,BYTE PTR [eax]
  410226:	lahf   
  410227:	push   0xffffff82
  410229:	xor    bh,BYTE PTR [esi]
  41022b:	mov    dl,0x22
  41022d:	jge    0x4101fe
  41022f:	adc    ch,BYTE PTR [edi]
  410231:	mov    ah,0xf6
  410233:	mov    eax,0x8d550fdd
  410238:	packsswb mm0,QWORD PTR [ebp-0xb70db5b]
  41023f:	(bad)
  410242:	lahf   
  410243:	or     al,0xd
  410245:	out    0xc1,al
  410247:	and    eax,0x4935723e
  41024c:	iret   
  41024d:	imul   ebp,DWORD PTR [ebx],0x896d29e2
  410253:	mov    BYTE PTR [edx-0x7931d077],bl
  410259:	mov    dl,0xa0
  41025b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41025c:	out    0x26,al
  41025e:	out    0xf6,al
  410260:	mov    ebp,0x840997a
  410265:	outs   dx,BYTE PTR ds:[esi]
  410266:	mov    ds:0xbc3cb324,eax
  41026b:	rcr    BYTE PTR [edi+0x6da78266],1
  410271:	add    bh,BYTE PTR [ebx]
  410273:	adc    eax,0x38b02f1b
  410278:	jmp    0x8c74:0xe243f450
  41027f:	push   ds
  410280:	or     eax,0xd7e45b19
  410285:	sub    BYTE PTR [ebx],ch
  410287:	sbb    dl,dl
  410289:	lea    ebp,ds:0x8c3fdf38
  41028f:	cwde   
  410290:	or     DWORD PTR [esp+ecx*4],0x67d69410
  410297:	and    al,0x92
  410299:	inc    esp
  41029a:	std    
  41029b:	pop    ss
  41029c:	test   DWORD PTR [ebx-0x2b5b2532],edx
  4102a2:	imul   eax,DWORD PTR [edi],0xfffffff8
  4102a5:	xchg   ebx,eax
  4102a6:	jle    0x410294
  4102a8:	mov    ebp,0xe32af3c7
  4102ad:	jae    0x41028e
  4102af:	stos   BYTE PTR es:[edi],al
  4102b0:	inc    edx
  4102b1:	mov    eax,ds:0x5ca17e5c
  4102b6:	in     al,dx
  4102b7:	xor    eax,0x9100bf78
  4102bc:	xor    dh,BYTE PTR [eax-0x65c5d9dd]
  4102c2:	and    ecx,DWORD PTR [edx]
  4102c4:	icebp  
  4102c5:	mov    BYTE PTR [eax+0xcfb83a9],cl
  4102cb:	xchg   ebx,eax
  4102cc:	retf   0x90bb
  4102cf:	adc    DWORD PTR [eax+0x4c455775],ecx
  4102d5:	mov    bl,BYTE PTR [eax+0x4804694c]
  4102db:	cmp    al,0x2d
  4102dd:	or     esp,eax
  4102df:	jp     0x41035b
  4102e1:	fld    DWORD PTR [edx]
  4102e3:	fild   QWORD PTR [eax+0x7d]
  4102e6:	(bad)  
  4102e8:	test   bl,bh
  4102ea:	fiadd  DWORD PTR [ecx+0x71d74143]
  4102f0:	sbb    al,BYTE PTR ss:[eax+0x33]
  4102f4:	pop    edi
  4102f5:	inc    esi
  4102f6:	cmp    al,0xfc
  4102f8:	aad    0x3e
  4102fa:	lds    ebp,FWORD PTR [esi]
  4102fc:	mov    ecx,DWORD PTR [eax+0x45b64dfd]
  410302:	inc    ebp
  410303:	adc    esi,DWORD PTR [ecx+0x61]
  410306:	fisubr WORD PTR [ecx]
  410308:	sbb    DWORD PTR [ebx+ebx*8],ecx
  41030b:	lock xchg ebx,eax
  41030d:	in     eax,dx
  41030e:	push   esi
  41030f:	mov    eax,DWORD PTR [ecx+0x2c2d7e08]
  410315:	test   eax,0xba00d645
  41031a:	xchg   BYTE PTR [ebp+0x62],ch
  41031d:	and    al,0x73
  41031f:	scas   al,BYTE PTR es:[edi]
  410320:	mov    ah,0x69
  410322:	dec    eax
  410323:	or     edx,DWORD PTR [esi-0x16]
  410326:	mov    ebp,?
  410328:	jb     0x410355
  41032a:	arpl   WORD PTR [edi+0x4c],di
  41032d:	push   ecx
  41032e:	imul   ecx,esi,0x1e348a36
  410334:	mov    cl,0xcd
  410336:	repz scas eax,DWORD PTR es:[edi]
  410338:	pop    ecx
  410339:	pop    ss
  41033a:	and    al,0x97
  41033c:	cmp    ch,BYTE PTR [ebx]
  41033e:	fld    QWORD PTR [edx+0x6013d20e]
  410344:	cli    
  410345:	cli    
  410346:	pusha  
  410347:	add    ch,BYTE PTR [edx]
  410349:	inc    ebp
  41034a:	mov    edi,0x6f2643dc
  41034f:	stc    
  410350:	out    dx,eax
  410351:	or     al,0x81
  410353:	mov    es,WORD PTR [edx+0x2a]
  410356:	mov    ebx,0xc8f69831
  41035b:	xor    DWORD PTR [eax-0x1a],esi
  41035e:	mov    esp,0x34863156
  410363:	mov    eax,0x451480c9
  410368:	mov    bl,0x72
  41036a:	iret   
  41036b:	ret    
  41036c:	mov    BYTE PTR [ecx+0x53],0xe3
  410370:	sbb    DWORD PTR [ecx+0x6151e7e9],0x55
  410377:	imul   ebx,ecx,0x5c87166f
  41037d:	es mov ebx,0xfa391d2e
  410383:	stos   BYTE PTR es:[edi],al
  410384:	mov    al,ds:0x8edb6f4d
  410389:	xchg   cl,dh
  41038b:	or     eax,0xde981557
  410390:	pop    eax
  410391:	xchg   ebp,eax
  410392:	test   DWORD PTR [edx-0x3ce74b44],ebx
  410398:	icebp  
  410399:	add    dl,BYTE PTR [edi-0x2e]
  41039c:	jae    0x410381
  41039e:	sbb    DWORD PTR [ebx],0x2ddf94b3
  4103a4:	fnstcw WORD PTR [edi-0x48914475]
  4103aa:	push   ss
  4103ab:	xor    bl,BYTE PTR [esi-0x6c3d542c]
  4103b1:	cmp    al,BYTE PTR [ebx+0x3f]
  4103b4:	jns    0x410337
  4103b6:	cwde   
  4103b7:	jp     0x41034f
  4103b9:	sub    eax,0xa7244e4a
  4103be:	sub    edx,DWORD PTR [ecx-0x57aeac64]
  4103c4:	in     eax,0x21
  4103c6:	jns    0x41040f
  4103c8:	cmc    
  4103c9:	js     0x41043e
  4103cb:	adc    cl,bl
  4103cd:	jge    0x41039d
  4103cf:	and    ebx,0x399f9223
  4103d5:	(bad)  
  4103d6:	adc    esp,DWORD PTR [edi+0x71c01a98]
  4103dc:	dec    edi
  4103dd:	in     al,0x71
  4103df:	push   ds
  4103e0:	leave  
  4103e1:	xchg   edx,eax
  4103e2:	inc    esp
  4103e3:	cmp    edx,DWORD PTR [edx-0x1a]
  4103e6:	mov    al,ds:0x2f5bc926
  4103eb:	jbe    0x410397
  4103ed:	jl     0x4103ca
  4103ef:	sub    eax,0xde4cbd63
  4103f4:	ds (bad) 
  4103f6:	mov    ah,0x7e
  4103f8:	xor    DWORD PTR [eax+0x15be3390],0x663a1e0a
  410402:	pusha  
  410403:	int3   
  410404:	or     esi,0x3ce43ebc
  41040a:	in     al,dx
  41040b:	add    BYTE PTR [ecx-0x49b50ee7],ch
  410411:	mov    al,ds:0x5adf02b7
  410416:	adc    ch,BYTE PTR [ebx-0x3f]
  410419:	mov    ebx,0xdac45b35
  41041e:	fneni(8087 only) 
  410420:	ds ss vpmacssdd xmm9,xmm6,xmm7,xmm4
  410428:	jne    0x410426
  41042a:	mov    ds:0x44a0046f,eax
  41042f:	(bad)  
  410430:	cli    
  410431:	xlat   BYTE PTR ds:[ebx]
  410432:	addr16 inc esi
  410434:	mov    dl,ch
  410436:	fs push 0x7aeba54e
  41043c:	mov    cl,0x52
  41043e:	fcom   DWORD PTR [edx-0x32]
  410441:	and    dh,BYTE PTR [edi-0x26038425]
  410447:	pop    es
  410448:	and    bl,BYTE PTR [ecx+0x7e3b9f97]
  41044e:	fnstsw WORD PTR [eax+ecx*8+0x6a48dd4d]
  410455:	cmp    al,0x6a
  410457:	repnz sbb DWORD PTR [edx-0x1],esp
  41045b:	dec    esi
  41045c:	cmc    
  41045d:	push   eax
  41045e:	(bad)  
  41045f:	add    cl,BYTE PTR [eax+0x5f]
  410462:	nop
  410463:	test   DWORD PTR [edi],esp
  410465:	xchg   cl,bh
  410467:	cwde   
  410468:	push   es
  410469:	aad    0xf8
  41046b:	iret   
  41046c:	pop    edx
  41046d:	out    0xe3,al
  41046f:	js     0x41041d
  410471:	xchg   ecx,eax
  410472:	xor    eax,DWORD PTR [edx+0x79924407]
  410478:	rol    dh,cl
  41047a:	leave  
  41047b:	pushf  
  41047c:	mov    eax,0x4797a438
  410481:	mov    dh,0x43
  410483:	push   0x24
  410485:	push   cs
  410486:	ror    DWORD PTR [ecx+0x3ae4be92],0x4
  41048d:	jmp    0x41041d
  41048f:	jmp    0x57f46fb0
  410494:	cld    
  410495:	xchg   esi,eax
  410496:	dec    ebx
  410497:	loopne 0x4104d0
  410499:	call   0xa8342b64
  41049e:	loop   0x410454
  4104a0:	jmp    0xc4428cd5
  4104a5:	dec    edx
  4104a6:	inc    esp
  4104a7:	dec    edx
  4104a8:	(bad)  
  4104a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104aa:	scas   eax,DWORD PTR es:[edi]
  4104ab:	add    al,0xc5
  4104ad:	jl     0x41050e
  4104af:	mov    eax,ds:0x316e4177
  4104b4:	std    
  4104b5:	out    dx,eax
  4104b6:	inc    esp
  4104b7:	fsub   QWORD PTR [edi-0x52]
  4104ba:	sbb    DWORD PTR [edi+0x26247d0c],esp
  4104c0:	add    BYTE PTR [eax+0x4f3a3df5],bl
  4104c6:	cmp    cl,BYTE PTR [edi+0x36]
  4104c9:	or     al,0x68
  4104cb:	scas   al,BYTE PTR es:[edi]
  4104cc:	fnstenv [ebx*8+0x2734ebf7]
  4104d3:	mov    dh,0x19
  4104d5:	mov    bh,0xc2
  4104d7:	outs   dx,BYTE PTR ds:[esi]
  4104d8:	cli    
  4104d9:	mov    eax,ds:0x68251567
  4104de:	pop    esp
  4104df:	mov    al,0x68
  4104e1:	pop    ebp
  4104e2:	nop
  4104e3:	btr    ebp,ebx
  4104e6:	inc    eax
  4104e7:	jmp    0xea06359
  4104ec:	pushf  
  4104ed:	xchg   ebp,eax
  4104ee:	cwde   
  4104ef:	test   al,0x75
  4104f1:	(bad)  
  4104f2:	cmp    eax,0x92d90ef4
  4104f7:	sub    al,0x9e
  4104f9:	stc    
  4104fa:	jmp    0x8e168f12
  4104ff:	(bad)  
  410500:	lock sbb esp,DWORD PTR [ebp-0x400b8c1]
  410507:	call   0xf670:0x6641cc14
  41050e:	mov    dl,0xb8
  410510:	js     0x41053a
  410512:	scas   eax,DWORD PTR es:[edi]
  410513:	mov    edx,0x5f6a4e38
  410518:	in     eax,dx
  410519:	or     al,0xf1
  41051b:	add    eax,0x502a79ce
  410520:	xchg   ecx,eax
  410521:	cs add bh,ch
  410524:	in     eax,0xb3
  410526:	inc    eax
  410527:	mov    al,ds:0x6986be95
  41052c:	push   edi
  41052d:	sbb    al,0x10
  41052f:	in     eax,dx
  410530:	inc    ebp
  410531:	aaa    
  410532:	sbb    ch,dh
  410534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410535:	lds    ebx,FWORD PTR [edx+0x53]
  410538:	inc    edi
  410539:	popf   
  41053a:	hlt    
  41053b:	test   eax,0x4567aed4
  410540:	out    0x66,eax
  410542:	jbe    0x4105c3
  410544:	add    BYTE PTR [ebp+0x53],dl
  410547:	(bad)  
  410548:	ret    0xd1aa
  41054b:	sahf   
  41054c:	cmp    al,0xdc
  41054e:	and    ch,al
  410550:	loop   0x4104fb
  410552:	ja     0x4105a6
  410554:	jecxz  0x4105a6
  410556:	mov    edx,0x8f109487
  41055b:	cmp    DWORD PTR [edi-0x40],0x365ee047
  410562:	bound  edi,QWORD PTR [esp+edx*1]
  410565:	fist   WORD PTR [eax+0x9600b36]
  41056b:	adc    ecx,DWORD PTR [esp+eax*1-0xb5dd0d6]
  410572:	out    0xa7,eax
  410574:	pop    ebx
  410575:	pop    es
  410576:	push   eax
  410577:	push   cs
  410578:	(bad)  
  410579:	loope  0x41051a
  41057b:	add    DWORD PTR [ebx+0x6f],edx
  41057e:	and    BYTE PTR [edi+0x6362ca0e],bl
  410584:	mov    al,0xdf
  410586:	imul   al
  410588:	dec    ebx
  410589:	mov    ds,WORD PTR [ecx]
  41058b:	scas   al,BYTE PTR es:[edi]
  41058c:	ja     0x410597
  41058e:	stc    
  41058f:	mov    al,0xc0
  410591:	pop    ecx
  410592:	(bad)  
  410594:	xchg   ecx,eax
  410595:	jecxz  0x4105fd
  410597:	out    dx,al
  410598:	fwait
  410599:	popa   
  41059a:	or     dl,BYTE PTR [ecx+esi*4]
  41059d:	out    0x6a,al
  41059f:	adc    BYTE PTR [esi-0x2d],ah
  4105a2:	jl     0x4105d3
  4105a4:	or     DWORD PTR [edx+0x48],esi
  4105a7:	inc    ecx
  4105a8:	in     eax,dx
  4105a9:	lock movd mm4,edi
  4105ad:	fiadd  DWORD PTR [esp+ecx*8]
  4105b0:	push   esi
  4105b1:	fimul  DWORD PTR [ecx+0xfde5bee]
  4105b7:	sahf   
  4105b8:	adc    al,BYTE PTR [ecx]
  4105ba:	imul   edx,DWORD PTR ds:0x94b9252e,0xef66cb39
  4105c4:	mov    esi,0x2aaad096
  4105c9:	ror    BYTE PTR [esi],cl
  4105cb:	mov    eax,0x3ff88375
  4105d0:	jp     0x410573
  4105d2:	xor    al,0xbe
  4105d4:	ja     0x41056a
  4105d6:	ja     0x41062a
  4105d8:	xor    esp,DWORD PTR [ecx-0xb]
  4105db:	and    DWORD PTR [esi+edi*2-0x48294bd0],esp
  4105e2:	div    BYTE PTR [esi-0x58]
  4105e5:	outs   dx,DWORD PTR ds:[esi]
  4105e6:	jp     0x410569
  4105e8:	test   DWORD PTR [edi],ebx
  4105ea:	in     eax,dx
  4105eb:	xchg   ebp,eax
  4105ec:	fwait
  4105ed:	jp     0x4105ef
  4105ef:	stc    
  4105f0:	add    al,BYTE PTR [esi+0x5b]
  4105f3:	sub    al,0xfb
  4105f5:	mov    bl,0xfb
  4105f7:	jg     0x4105cf
  4105f9:	jmp    0x41063e
  4105fb:	pop    esi
  4105fc:	popf   
  4105fd:	dec    ecx
  4105fe:	popa   
  4105ff:	test   eax,0x826e6717
  410604:	mov    al,0xfc
  410606:	loopne 0x4105da
  410608:	dec    esp
  410609:	dec    edi
  41060a:	test   BYTE PTR [ebp-0x48],al
  41060d:	outs   dx,BYTE PTR ds:[esi]
  41060e:	or     al,BYTE PTR [ecx]
  410610:	mov    al,ds:0x683b84c1
  410615:	jle    0x41062b
  410617:	lods   al,BYTE PTR ds:[esi]
  410618:	ja     0x410654
  41061a:	dec    ebp
  41061b:	hlt    
  41061c:	outs   dx,BYTE PTR ds:[esi]
  41061d:	dec    ebx
  41061e:	push   ebx
  41061f:	jne    0x41062b
  410621:	jmp    DWORD PTR [edx]
  410623:	out    dx,eax
  410624:	ret    
  410625:	sub    bl,cl
  410627:	cdq    
  410628:	add    eax,0x68755993
  41062d:	cmc    
  41062e:	and    dl,ah
  410630:	pop    esi
  410631:	adc    BYTE PTR [edi+0x20cac562],al
  410637:	repnz lea esp,cs:[edi]
  41063b:	sti    
  41063c:	stos   BYTE PTR es:[edi],al
  41063d:	pop    ecx
  41063e:	and    esi,DWORD PTR [edx-0x9670d13]
  410644:	arpl   WORD PTR [esi+esi*4],cx
  410647:	int3   
  410648:	test   DWORD PTR [edx+esi*1+0xd],edi
  41064c:	xor    dl,cl
  41064e:	add    eax,0xa4ecfa57
  410653:	mov    DWORD PTR [ecx+eiz*8+0xc4e39f9],ebp
  41065a:	jle    0x410612
  41065c:	xor    DWORD PTR [edx+edx*4],ebx
  41065f:	jecxz  0x4106c6
  410661:	or     DWORD PTR [edx],ebx
  410663:	mov    dl,bl
  410665:	pushf  
  410666:	stc    
  410667:	mov    esp,DWORD PTR [edx+0x30]
  41066a:	adc    DWORD PTR [ebp-0x5ea95be2],0xffffffcf
  410671:	pushf  
  410672:	push   ss
  410673:	aad    0x5d
  410675:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  410678:	dec    al
  41067a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41067b:	loop   0x4106b9
  41067d:	outs   dx,DWORD PTR ds:[esi]
  41067e:	scas   eax,DWORD PTR es:[edi]
  41067f:	ss inc ebx
  410681:	and    eax,0x163fbdfa
  410686:	popf   
  410687:	aad    0x2b
  410689:	add    esp,esi
  41068b:	mov    edi,0x5a5475df
  410690:	push   esp
  410691:	adc    dl,bh
  410693:	loope  0x4106e6
  410695:	rol    BYTE PTR [edi+0x4b4af017],1
  41069b:	cli    
  41069c:	adc    ebp,DWORD PTR [edi+0x9e5a064]
  4106a2:	cmp    dh,dl
  4106a4:	js     0x41063c
  4106a6:	shr    DWORD PTR [eax+eiz*4-0x61],1
  4106aa:	sub    DWORD PTR [ecx-0x2b],ebx
  4106ad:	test   al,0x96
  4106af:	xchg   esp,eax
  4106b0:	jns    0x4106de
  4106b2:	mov    eax,0x4da00af2
  4106b7:	out    0x7c,al
  4106b9:	enter  0xcbaa,0x11
  4106bd:	sub    eax,0x2015465f
  4106c2:	into   
  4106c3:	cmp    esi,DWORD PTR [eax]
  4106c5:	(bad)  
  4106c6:	mov    edi,0xd212c0b4
  4106cb:	xchg   ebp,eax
  4106cc:	dec    edx
  4106cd:	jle    0x41065d
  4106cf:	ror    BYTE PTR [eax],0xe0
  4106d2:	or     BYTE PTR [edx],dh
  4106d4:	push   eax
  4106d5:	xor    ebx,ebp
  4106d7:	mov    esi,0xbab9c51a
  4106dc:	mov    bl,0x3d
  4106de:	stc    
  4106df:	imul   edi,edx,0xffffffe1
  4106e2:	add    BYTE PTR [eax+edx*8+0xf3fb56a],0x7e
  4106ea:	bound  eax,QWORD PTR [esi+0x2b]
  4106ed:	sub    esp,esi
  4106ef:	fidiv  DWORD PTR [esi-0xb]
  4106f2:	scas   eax,DWORD PTR es:[edi]
  4106f3:	jle    0x41076d
  4106f5:	(bad)  
  4106f6:	mov    ebp,0xea116cb2
  4106fb:	out    0x7,al
  4106fd:	and    DWORD PTR [ecx+0x3179cb9d],ebx
  410703:	in     al,0x5d
  410705:	push   edx
  410706:	shr    DWORD PTR [ebx+0x73],0xc9
  41070a:	push   0x54
  41070c:	ins    DWORD PTR es:[edi],dx
  41070d:	je     0x41069f
  41070f:	add    eax,0x9d6310be
  410714:	popw   ds
  410716:	aam    0x7e
  410718:	dec    edx
  410719:	rep outs dx,DWORD PTR ds:[esi]
  41071b:	nop
  41071c:	push   0xfffffff7
  41071e:	inc    ebp
  41071f:	xor    eax,0x72db118b
  410724:	in     al,0xab
  410726:	inc    esi
  410727:	jbe    0x410783
  410729:	push   ebp
  41072a:	test   eax,0xda52f805
  41072f:	rol    BYTE PTR [eax+ebx*4],0xbe
  410733:	mov    eax,0x110b8584
  410738:	out    dx,eax
  410739:	fisttp WORD PTR [eax-0x5c76725a]
  41073f:	pop    eax
  410740:	shr    DWORD PTR [edi+0x39],1
  410743:	cmp    bl,BYTE PTR [ecx+0x15]
  410746:	pop    edi
  410747:	cmc    
  410748:	mov    al,ds:0x87eaf089
  41074d:	out    dx,al
  41074e:	mov    esp,0x99bd5d83
  410753:	cmp    al,0x2
  410755:	(bad)  
  410756:	aaa    
  410757:	fdivr  st(3),st
  410759:	(bad)  
  41075a:	adc    eax,0x5703ddc1
  41075f:	clc    
  410760:	iret   
  410761:	add    BYTE PTR [eax],0xa2
  410764:	lds    ecx,FWORD PTR [edx-0x69a40bf7]
  41076a:	sbb    esi,esp
  41076c:	add    al,0xe7
  41076e:	daa    
  41076f:	mov    ecx,0x614d6aa5
  410774:	and    ebx,DWORD PTR [edi]
  410776:	imul   ebx,DWORD PTR [esi],0xffffffe6
  410779:	adc    BYTE PTR [edi-0x79],bl
  41077c:	jo     0x4107aa
  41077e:	or     bh,BYTE PTR [ebx-0xb279036]
  410784:	test   BYTE PTR [ebx+0x5e],0x26
  410788:	in     al,dx
  410789:	add    DWORD PTR [edi+0x72],edi
  41078c:	inc    ebp
  41078d:	jne    0x410797
  41078f:	pusha  
  410790:	in     al,dx
  410791:	pop    edx
  410792:	mov    ebp,0xddebeb87
  410797:	xor    ch,BYTE PTR [edi]
  410799:	stc    
  41079a:	cwde   
  41079b:	repnz nop
  41079d:	adc    eax,0x181d4255
  4107a2:	push   ecx
  4107a3:	(bad)  
  4107a4:	not    DWORD PTR [ecx+0x56]
  4107a7:	push   0x23
  4107a9:	jp     0x41074e
  4107ab:	xchg   esp,eax
  4107ac:	cmp    dl,BYTE PTR ds:0xcf490f0b
  4107b2:	data16 jl 0x4107b2
  4107b5:	lods   al,BYTE PTR ds:[esi]
  4107b6:	out    dx,al
  4107b7:	sub    eax,0x61a860ae
  4107bc:	dec    edi
  4107bd:	mov    cl,0x32
  4107bf:	das    
  4107c0:	test   eax,0x2b16fea
  4107c5:	inc    ecx
  4107c6:	das    
  4107c7:	imul   eax,DWORD PTR [edx+edx*4-0x329d7b12],0x6d
  4107cf:	mov    ds:0x1ea46e80,eax
  4107d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107d5:	dec    edi
  4107d6:	dec    ebx
  4107d7:	test   BYTE PTR [bx+di],dl
  4107da:	adc    ecx,DWORD PTR [ebx*4+0x44f32bd2]
  4107e1:	push   ecx
  4107e2:	mov    cl,0x8b
  4107e4:	data16 jns 0x410786
  4107e7:	cld    
  4107e8:	idiv   BYTE PTR ds:0x9ff2dd8
  4107ee:	icebp  
  4107ef:	sub    dh,cl
  4107f1:	pop    edx
  4107f2:	jl     0x4107ab
  4107f4:	sub    al,0xe7
  4107f6:	inc    ebp
  4107f7:	(bad)  
  4107f8:	jmp    0x4107b6
  4107fa:	aam    0x1e
  4107fc:	xor    eax,0xd833f961
  410801:	xor    BYTE PTR [ecx-0x22b4aa84],dh
  410807:	mov    DWORD PTR [edi+0x4f],ebx
  41080a:	loope  0x410882
  41080c:	pop    edx
  41080d:	pop    es
  41080e:	push   esi
  41080f:	jecxz  0x41081b
  410811:	sti    
  410812:	sar    ah,1
  410814:	(bad)  
  410815:	fisttp QWORD PTR [ebp-0x1]
  410818:	shr    DWORD PTR [eax],cl
  41081a:	mov    BYTE PTR [edx+0x66],cl
  41081d:	arpl   WORD PTR [edx],bp
  41081f:	lock out 0x33,eax
  410822:	jmp    0x410863
  410824:	ja     0x4107b1
  410826:	loope  0x410855
  410828:	loope  0x4108a1
  41082a:	jl     0x4107c5
  41082c:	mov    al,0x8
  41082e:	sbb    ebx,ebx
  410830:	jl     0x410849
  410832:	add    DWORD PTR [edi+edx*4],0xbac74640
  410839:	(bad)  
  41083a:	mov    BYTE PTR [edx*4+0x49094a2f],ch
  410841:	push   esi
  410842:	jnp    0x4108ac
  410844:	in     eax,dx
  410845:	test   eax,0xffaa614b
  41084a:	mov    al,0xe8
  41084c:	hlt    
  41084d:	enter  0x7f38,0xa8
  410851:	xchg   BYTE PTR [bp+di+0x2f61],ah
  410856:	mov    ebx,0x3ca14231
  41085b:	jmp    0x313c:0x1a266dff
  410862:	mov    eax,ds:0xe56965a0
  410867:	sbb    esi,DWORD PTR [ecx]
  410869:	leave  
  41086a:	loopne 0x410846
  41086c:	adc    BYTE PTR [edx],0xd7
  41086f:	out    0x68,al
  410871:	stc    
  410872:	cmp    BYTE PTR [ecx],bl
  410874:	cwde   
  410875:	imul   eax,DWORD PTR [esi+esi*4-0x70],0x3614fae4
  41087d:	rol    DWORD PTR [ebx],0x11
  410880:	fdiv   DWORD PTR [eax+0xf3bb988]
  410886:	sbb    edx,DWORD PTR [edi-0x7c]
  410889:	int    0x18
  41088b:	pop    ebx
  41088c:	xchg   ecx,eax
  41088d:	xchg   ah,bh
  41088f:	mov    bh,0x1f
  410891:	std    
  410892:	pop    edi
  410893:	les    ebx,FWORD PTR [ebp-0x63229c02]
  410899:	stc    
  41089a:	outs   dx,BYTE PTR ds:[esi]
  41089b:	and    bh,BYTE PTR [esi-0x526c2c8f]
  4108a1:	pop    es
  4108a2:	je     0x410875
  4108a4:	sub    edx,esi
  4108a6:	mov    ds:0x565cf6c8,eax
  4108ab:	lods   eax,DWORD PTR ds:[esi]
  4108ac:	xor    BYTE PTR [ebp-0x22],0x8
  4108b0:	ins    DWORD PTR es:[edi],dx
  4108b1:	adc    DWORD PTR [ebx+edx*2-0x9],esp
  4108b5:	pop    ecx
  4108b6:	fs out 0x68,eax
  4108b9:	sahf   
  4108ba:	test   DWORD PTR gs:[edi+0x2c7e52a2],edi
  4108c1:	in     al,0x84
  4108c3:	lahf   
  4108c4:	and    al,0xa1
  4108c6:	(bad)  
  4108c7:	in     al,0x3f
  4108c9:	in     al,0xa9
  4108cb:	rol    BYTE PTR [ebx+0x545d7948],0x1b
  4108d2:	mov    BYTE PTR [edi+0x31],bh
  4108d5:	std    
  4108d6:	das    
  4108d7:	and    al,BYTE PTR [ebx]
  4108d9:	jns    0x410880
  4108db:	adc    edx,DWORD PTR [ebx]
  4108dd:	xchg   edi,eax
  4108de:	xchg   eax,esi
  4108e0:	popa   
  4108e1:	sub    dh,BYTE PTR [esi]
  4108e3:	cmp    eax,0x63d16af6
  4108e8:	cwde   
  4108e9:	outs   dx,DWORD PTR ds:[esi]
  4108ea:	outs   dx,DWORD PTR ds:[esi]
  4108eb:	dec    ebx
  4108ec:	dec    ecx
  4108ed:	addr16 mov bh,0x4d
  4108f0:	out    dx,al
  4108f1:	lock xor al,0x9a
  4108f4:	xchg   ecx,eax
  4108f5:	xchg   edi,eax
  4108f6:	test   eax,0xafab9d81
  4108fb:	pusha  
  4108fc:	sbb    BYTE PTR [edi+edi*4+0xa],0x1c
  410901:	inc    esi
  410902:	clc    
  410903:	ins    DWORD PTR es:[edi],dx
  410904:	push   edx
  410905:	sbb    eax,0x83fa2ab0
  41090a:	mov    WORD PTR [ebx],es
  41090c:	dec    ebp
  41090d:	inc    esi
  41090e:	mov    esi,0x92b5dd71
  410913:	(bad)  
  410915:	ss sub al,0x16
  410918:	mov    bh,ch
  41091a:	stos   BYTE PTR es:[edi],al
  41091b:	jno    0x4108f0
  41091d:	mov    dh,BYTE PTR [ebp+0x35f643ca]
  410923:	pop    edi
  410924:	inc    ecx
  410925:	bound  edx,QWORD PTR [ecx-0x2f]
  410928:	lock daa 
  41092a:	inc    ebx
  41092b:	add    eax,0x7e701ce8
  410930:	fmul   st(2),st
  410932:	mov    esi,es
  410934:	fsub   st,st(2)
  410936:	cs push ebx
  410938:	push   0x13
  41093a:	test   eax,0xbc8a7844
  41093f:	cdq    
  410940:	sbb    BYTE PTR [edx+0x25b8ed3d],dl
  410946:	adc    eax,0xfeb946ff
  41094b:	ds scas eax,DWORD PTR es:[edi]
  41094d:	push   esi
  41094e:	sbb    edx,DWORD PTR [edx-0x3c7d642f]
  410954:	sahf   
  410955:	jne    0x4108e2
  410957:	ss (bad) 
  410959:	shr    cl,cl
  41095b:	mov    edx,0x593003d6
  410960:	stos   BYTE PTR es:[edi],al
  410961:	mov    eax,ds:0xf65d24c5
  410966:	jae    0x4109c1
  410968:	jbe    0x41096c
  41096a:	inc    edx
  41096b:	jmp    0x1a20:0xbfb96cbe
  410972:	leave  
  410973:	inc    eax
  410974:	clc    
  410975:	in     al,dx
  410976:	dec    edi
  410977:	push   cs
  410978:	fsubr  DWORD PTR [ecx]
  41097a:	pop    ebp
  41097b:	clc    
  41097c:	mov    DWORD PTR [ecx-0x1b],ebp
  41097f:	dec    ecx
  410980:	cs aaa 
  410982:	fwait
  410983:	sbb    eax,DWORD PTR [ebx-0x57f380c5]
  410989:	in     al,dx
  41098a:	mov    ecx,0x2aec67dd
  41098f:	repz jne 0x4109be
  410992:	push   0x3153aa6a
  410997:	sbb    eax,0xc5079cd8
  41099c:	adc    DWORD PTR [ecx],esp
  41099e:	inc    ebp
  41099f:	imul   ebx,DWORD PTR [ecx+0x68],0xffffffc5
  4109a3:	sub    DWORD PTR [edx],edi
  4109a5:	into   
  4109a6:	cs (bad) 
  4109a8:	dec    esi
  4109a9:	xchg   ebx,eax
  4109aa:	mov    eax,0x72feff5f
  4109af:	mov    ebp,0x645cdede
  4109b4:	(bad)  
  4109b5:	adc    DWORD PTR [ecx+ecx*2],edx
  4109b8:	xchg   esp,eax
  4109b9:	dec    ebx
  4109ba:	popf   
  4109bb:	adc    eax,0x3720daa9
  4109c0:	sbb    ebp,DWORD PTR [esi+0x7f]
  4109c3:	sbb    DWORD PTR [ebx+0x6965fbd9],edi
  4109c9:	pop    ss
  4109ca:	(bad)  
  4109cb:	popa   
  4109cc:	xor    al,0x43
  4109ce:	xchg   edx,eax
  4109cf:	aas    
  4109d0:	dec    edi
  4109d1:	xchg   ecx,eax
  4109d2:	pop    es
  4109d3:	or     DWORD PTR [esi+0x1],ebp
  4109d6:	cmp    cl,cl
  4109d8:	rol    BYTE PTR [edi+0x25],cl
  4109db:	xchg   DWORD PTR [esi],edx
  4109dd:	call   0xb564:0x8a4c7e9a
  4109e4:	and    DWORD PTR [ecx],0xe9c6d0b6
  4109ea:	iret   
  4109eb:	pop    ebx
  4109ec:	dec    edx
  4109ed:	mov    ds:0xa02d6721,al
  4109f2:	mov    DWORD PTR [edx+eiz*2-0x77abf373],ebp
  4109f9:	(bad)  
  4109fa:	(bad)  
  4109fb:	mov    ebp,DWORD PTR [edi+0x5c]
  4109fe:	lea    ebp,[edx+0x4686a27a]
  410a04:	mov    ch,0x17
  410a06:	cli    
  410a07:	stos   WORD PTR es:[edi],ax
  410a09:	je     0x4109cc
  410a0b:	jnp    0x4109ab
  410a0d:	in     al,dx
  410a0e:	jno    0x410a25
  410a10:	addr16 test al,0x42
  410a13:	xchg   edi,eax
  410a14:	les    ecx,FWORD PTR [edi]
  410a16:	mov    cl,0xd2
  410a18:	popf   
  410a19:	sbb    ecx,edi
  410a1b:	cmp    cl,BYTE PTR [esi-0x574edd1a]
  410a21:	arpl   WORD PTR [ebx+0x2c],bx
  410a24:	or     BYTE PTR [ecx],bl
  410a26:	fisubr WORD PTR [ecx+0x29]
  410a29:	cdq    
  410a2a:	pop    ebp
  410a2b:	push   ebx
  410a2c:	pop    edx
  410a2d:	cwde   
  410a2e:	xchg   edi,eax
  410a2f:	jl     0x410a74
  410a31:	pop    ss
  410a32:	mov    bh,0x41
  410a34:	pop    esi
  410a35:	add    al,0x1e
  410a37:	pop    es
  410a38:	xor    DWORD PTR [eax+0x657ee929],edi
  410a3e:	or     DWORD PTR [ecx],ebp
  410a40:	jno    0x410a7f
  410a42:	and    al,bh
  410a44:	test   eax,0xed1f064
  410a49:	shl    DWORD PTR [eax-0x78],1
  410a4c:	lods   al,BYTE PTR ds:[esi]
  410a4d:	ins    BYTE PTR es:[edi],dx
  410a4e:	or     DWORD PTR [eax],0xffffffb3
  410a51:	fwait
  410a52:	jecxz  0x410a18
  410a54:	imul   ebp,edx,0xc80130fb
  410a5a:	jmp    0x410a83
  410a5c:	adc    ebp,ebp
  410a5e:	xchg   ecx,eax
  410a5f:	push   ss
  410a60:	mov    BYTE PTR gs:[esi],0x44
  410a64:	and    eax,0xc2d5be48
  410a69:	dec    ebp
  410a6a:	call   0x97f4:0x1776e71c
  410a71:	inc    ebx
  410a72:	ss and al,0x27
  410a75:	cld    
  410a76:	adc    ebx,DWORD PTR [ebp-0x70]
  410a79:	add    eax,DWORD PTR [edx]
  410a7b:	inc    edi
  410a7c:	aad    0xf4
  410a7e:	repz je 0x410a7b
  410a81:	call   0x5b58541d
  410a86:	mov    bh,0x68
  410a88:	leave  
  410a89:	cmp    eax,esi
  410a8b:	pop    ecx
  410a8c:	fwait
  410a8d:	test   DWORD PTR [eax],0xd3fc1ef8
  410a93:	loope  0x410aa2
  410a95:	loop   0x410ae2
  410a97:	jae    0x410ac2
  410a99:	and    ecx,DWORD PTR [eax]
  410a9b:	dec    ecx
  410a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a9d:	das    
  410a9e:	dec    ebp
  410a9f:	mov    ebp,0x3c37c76b
  410aa4:	mov    bl,0x81
  410aa6:	out    0x92,al
  410aa8:	pop    ds
  410aa9:	fwait
  410aaa:	int3   
  410aab:	jns    0x410acd
  410aad:	aaa    
  410aae:	(bad)  
  410aaf:	fistp  WORD PTR [ebp+0x2]
  410ab2:	sahf   
  410ab3:	dec    eax
  410ab4:	ins    BYTE PTR es:[edi],dx
  410ab5:	or     al,0x30
  410ab7:	add    edx,DWORD PTR [ebp+0x343d19f]
  410abd:	retf   0x578e
  410ac0:	leave  
  410ac1:	loope  0x410a5f
  410ac3:	mov    cl,0xf0
  410ac5:	call   0x35234b25
  410aca:	dec    ebp
  410acb:	jge    0x410aad
  410acd:	call   0xeced:0x520dc32e
  410ad4:	pushf  
  410ad5:	pusha  
  410ad6:	shl    DWORD PTR [edx+0x5a9e37bb],0x85
  410add:	add    DWORD PTR [edi-0x53f285db],esp
  410ae3:	xor    dl,cl
  410ae5:	add    eax,0x7b7fb395
  410aea:	mov    dl,0x43
  410aec:	mov    dh,0x60
  410aee:	pop    edx
  410aef:	pop    esp
  410af0:	jmp    0x7f92090e
  410af5:	popa   
  410af6:	xor    DWORD PTR [eax+0xc],0xffffff91
  410afa:	fbld   TBYTE PTR [eax+0x57272118]
  410b00:	or     al,0x70
  410b02:	jecxz  0x410b0f
  410b04:	jo     0x410aa1
  410b06:	xchg   ebp,eax
  410b07:	stc    
  410b08:	jmp    0x410ad7
  410b0a:	popa   
  410b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b0c:	or     ebx,DWORD PTR [eax-0x29c60a62]
  410b12:	sbb    al,0x85
  410b14:	(bad)  
  410b15:	int    0x93
  410b17:	push   0x130655d8
  410b1c:	loopne 0x410ae2
  410b1e:	lahf   
  410b1f:	cmp    bl,BYTE PTR [ebx+0x4]
  410b22:	repnz (bad) 
  410b24:	out    dx,eax
  410b25:	jo     0x410b98
  410b27:	popa   
  410b28:	sbb    eax,0xca2dea33
  410b2d:	sub    BYTE PTR [edx+0x5c17cc35],bl
  410b33:	push   0x6f0b977f
  410b38:	fisttp QWORD PTR [esi]
  410b3a:	mov    eax,ds:0x430566f2
  410b3f:	outs   dx,DWORD PTR ds:[esi]
  410b40:	sbb    BYTE PTR [edx],0x4a
  410b43:	aaa    
  410b44:	call   0xccbb:0xda59b3b6
  410b4b:	fst    QWORD PTR [ecx-0x30fa2e3d]
  410b51:	jb     0x410b1f
  410b53:	mov    ebx,0x994a4d98
  410b58:	mul    dh
  410b5a:	adc    BYTE PTR [edx],0xc5
  410b5d:	fld    TBYTE PTR [edx+0x6b]
  410b60:	js     0x410ae8
  410b62:	leave  
  410b63:	outs   dx,DWORD PTR ds:[esi]
  410b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b65:	inc    edx
  410b66:	dec    esi
  410b67:	scas   al,BYTE PTR es:[edi]
  410b68:	lea    ecx,[ecx]
  410b6a:	add    eax,0x66f9624b
  410b6f:	loope  0x410bad
  410b71:	iret   
  410b72:	loop   0x410b2a
  410b74:	loope  0x410b5b
  410b76:	outs   dx,DWORD PTR ds:[esi]
  410b77:	retf   
  410b78:	stos   BYTE PTR es:[edi],al
  410b79:	xchg   ebx,eax
  410b7a:	test   DWORD PTR [edx],0xf60a8683
  410b80:	add    DWORD PTR [ecx-0x58afe039],0xfce94d42
  410b8a:	sbb    esp,DWORD PTR [edx-0x2b0a4750]
  410b90:	(bad)  
  410b91:	xchg   edi,eax
  410b92:	pop    edi
  410b93:	inc    esi
  410b94:	stos   BYTE PTR es:[edi],al
  410b95:	inc    esp
  410b96:	lods   eax,DWORD PTR ds:[esi]
  410b97:	lods   eax,DWORD PTR ds:[esi]
  410b98:	mov    edi,0x8352579d
  410b9d:	les    edx,FWORD PTR [ebx+edx*1]
  410ba0:	xchg   ebx,eax
  410ba1:	or     ah,BYTE PTR [edx-0x39]
  410ba4:	sub    BYTE PTR [esi+0x265f7561],ch
  410baa:	cmp    BYTE PTR [edi],al
  410bac:	out    0xac,al
  410bae:	dec    esi
  410baf:	in     eax,0xf6
  410bb1:	loope  0x410bf6
  410bb3:	cwde   
  410bb4:	sbb    al,dh
  410bb6:	inc    eax
  410bb7:	retf   
  410bb8:	mov    cl,0xcd
  410bba:	lods   al,BYTE PTR ds:[esi]
  410bbb:	sbb    al,0x67
  410bbd:	jae    0x410c1d
  410bbf:	adc    BYTE PTR [edx-0x3a],dl
  410bc2:	jbe    0x410ba9
  410bc4:	push   ebp
  410bc5:	add    DWORD PTR [ebx-0x571fc110],eax
  410bcb:	xchg   edi,eax
  410bcc:	xchg   ebx,eax
  410bcd:	test   al,0x91
  410bcf:	rol    DWORD PTR [esi+0x70],0xdf
  410bd3:	push   ss
  410bd4:	dec    esp
  410bd5:	mov    ds:0xf73e815e,eax
  410bda:	sub    esi,DWORD PTR [ebx-0x71]
  410bdd:	push   ebp
  410bde:	xor    DWORD PTR [ecx-0x2fd17eca],0xffffffb6
  410be5:	cdq    
  410be6:	jg     0x410c46
  410be8:	aaa    
  410be9:	out    dx,al
  410bea:	add    eax,0xce1aae56
  410bef:	jae    0x410b9a
  410bf1:	aas    
  410bf2:	int3   
  410bf3:	jmp    0xbe00d1d9
  410bf8:	pop    ds
  410bf9:	call   0x2f66:0x166d5535
  410c00:	idiv   al
  410c02:	push   0x4a620c7e
  410c07:	loop   0x410bb7
  410c09:	cs xchg esp,eax
  410c0b:	mov    cl,0x5
  410c0d:	scas   eax,DWORD PTR es:[edi]
  410c0e:	out    dx,eax
  410c0f:	jno    0x410c3a
  410c11:	sahf   
  410c12:	js     0x410c8f
  410c14:	mov    ds:0xbf4bad7a,al
  410c19:	pop    esi
  410c1a:	xor    DWORD PTR [esi+0x5c2d2f37],edi
  410c20:	push   edi
  410c21:	scas   al,BYTE PTR es:[edi]
  410c22:	mov    cl,0xd9
  410c24:	inc    ebp
  410c25:	mov    ds:0xc84519a8,al
  410c2a:	int3   
  410c2b:	mov    ah,0xab
  410c2d:	pop    ebp
  410c2e:	mov    al,ds:0xd65e6d31
  410c33:	test   eax,0x753c404
  410c38:	ret    0x7786
  410c3b:	add    eax,0x53d3567e
  410c40:	in     al,dx
  410c41:	out    dx,eax
  410c42:	into   
  410c43:	mov    DWORD PTR [edi+0x6a42e9d8],eax
  410c49:	inc    eax
  410c4a:	test   al,0x26
  410c4c:	test   cl,ch
  410c4e:	xlat   BYTE PTR ds:[ebx]
  410c4f:	push   es
  410c50:	add    DWORD PTR [eax-0x24eef5ae],ebx
  410c56:	sahf   
  410c57:	leave  
  410c58:	xor    edx,ebp
  410c5a:	(bad)  
  410c5b:	xor    al,0x4f
  410c5d:	in     eax,0x59
  410c5f:	mov    esi,ss
  410c61:	fcmovne st,st(5)
  410c63:	aam    0xec
  410c65:	inc    eax
  410c66:	pop    edx
  410c67:	push   ecx
  410c68:	push   ss
  410c69:	xor    eax,0x517982fc
  410c6e:	mov    ds:0x8980f6bf,al
  410c73:	sub    eax,0xd4646bf0
  410c78:	pusha  
  410c79:	jle    0x410ca5
  410c7b:	std    
  410c7c:	stos   DWORD PTR es:[edi],eax
  410c7d:	jb     0x410c90
  410c7f:	in     eax,dx
  410c80:	mov    ds:0xb598ca61,eax
  410c85:	mov    edi,0x4e323b75
  410c8a:	push   ebp
  410c8b:	popa   
  410c8c:	int    0xfe
  410c8e:	adc    al,0xf6
  410c90:	repnz xlat BYTE PTR ds:[ebx]
  410c92:	push   0x1f825288
  410c97:	xor    al,0xba
  410c99:	mov    al,0x65
  410c9b:	xchg   edi,eax
  410c9c:	mov    esi,0x4719597a
  410ca1:	mov    ecx,0xbcb68ae
  410ca6:	push   eax
  410ca7:	or     al,0xb4
  410ca9:	push   esi
  410caa:	shl    ch,1
  410cac:	aam    0x3c
  410cae:	cli    
  410caf:	imul   ebp,esi,0x3b3345e8
  410cb5:	adc    eax,0x13fcea87
  410cba:	loope  0x410c49
  410cbc:	mov    bh,0xd2
  410cbe:	push   edx
  410cbf:	call   0xa2c191c2
  410cc4:	jl     0x410d3d
  410cc6:	mov    al,ds:0x2780d943
  410ccb:	leave  
  410ccc:	xchg   DWORD PTR [eax+edi*8-0x6e],ecx
  410cd0:	je     0x410cd1
  410cd2:	mov    eax,0x2993ab5d
  410cd7:	or     BYTE PTR [edi],0x3a
  410cda:	or     cl,BYTE PTR [esi-0x275f21d6]
  410ce0:	lock lock add DWORD PTR [ecx+eiz*4+0x436dbfa0],edx
  410ce9:	mov    dh,BYTE PTR [eax+0x7b72cb01]
  410cef:	xor    al,0x6e
  410cf1:	mov    al,0x43
  410cf3:	mov    esi,0x25be5f74
  410cf8:	inc    esi
  410cf9:	ror    DWORD PTR [ebx+0x57],0xbc
  410cfd:	add    edi,ebp
  410cff:	mov    ecx,0x3668a870
  410d04:	jns    0x410d7e
  410d06:	inc    esi
  410d07:	mov    cl,0x8a
  410d09:	dec    esi
  410d0a:	jle    0x410d26
  410d0c:	xor    ah,bl
  410d0e:	lock sbb eax,0x3f54607a
  410d14:	repz jbe 0x410d94
  410d17:	mov    ebp,0x2966b90c
  410d1c:	dec    ebx
  410d1d:	inc    eax
  410d1e:	inc    esp
  410d1f:	test   BYTE PTR [ebx+edi*2],ah
  410d22:	aas    
  410d23:	or     cl,BYTE PTR [edi+edi*1]
  410d26:	les    esi,FWORD PTR [edi+ebp*8-0xc]
  410d2a:	shl    DWORD PTR [ebx-0x40fc9534],1
  410d30:	js     0x410d3e
  410d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d33:	inc    esi
  410d34:	mov    es,WORD PTR [edi-0x40]
  410d37:	ror    ch,0xcc
  410d3a:	mov    al,ds:0x9868afa4
  410d3f:	in     al,0xba
  410d41:	or     DWORD PTR [ecx+0x716520a4],ecx
  410d47:	jo     0x410dc3
  410d49:	ja     0x410d8b
  410d4b:	push   edi
  410d4c:	ins    DWORD PTR es:[edi],dx
  410d4d:	inc    edi
  410d4e:	mov    ah,0x9a
  410d50:	sar    BYTE PTR [esi],0xe9
  410d53:	mov    eax,ds:0xf38ac841
  410d58:	in     al,0x86
  410d5a:	or     esp,DWORD PTR [esi+0x5ce5e1e]
  410d60:	xchg   ecx,eax
  410d61:	imul   edx,DWORD PTR [edx+0x18],0x5
  410d65:	add    ch,BYTE PTR [esi-0x22]
  410d68:	mul    DWORD PTR [eax-0x3ec58633]
  410d6e:	mov    edi,es
  410d70:	call   0xc6e6:0x5bb9df1
  410d77:	test   DWORD PTR [ebx-0x60],ecx
  410d7a:	xlat   BYTE PTR ds:[ebx]
  410d7b:	out    0x3c,al
  410d7d:	jmp    0x410dec
  410d7f:	adc    DWORD PTR [esi+0x482798ec],eax
  410d85:	sub    al,0xed
  410d87:	pop    esp
  410d88:	mov    ch,0x7
  410d8a:	arpl   cx,bp
  410d8c:	sti    
  410d8d:	int    0x19
  410d8f:	sbb    al,0xc3
  410d91:	sub    DWORD PTR [edx],ebx
  410d93:	leave  
  410d94:	sbb    eax,0x37f92485
  410d99:	inc    edx
  410d9a:	(bad)  
  410d9c:	lock test ecx,esp
  410d9f:	sti    
  410da0:	push   edi
  410da1:	xchg   ecx,eax
  410da2:	jae    0x410d50
  410da4:	daa    
  410da5:	sbb    ebx,DWORD PTR [ebx-0x2d3db548]
  410dab:	xor    BYTE PTR [edi-0x56771d21],dh
  410db1:	shl    BYTE PTR ds:0x7dfabb6b,1
  410db7:	xor    DWORD PTR [eax],ecx
  410db9:	pop    eax
  410dba:	outs   dx,BYTE PTR ds:[esi]
  410dbb:	imul   ebp,DWORD PTR [ecx+0x46fe6970],0xffffffaa
  410dc2:	pop    edx
  410dc3:	jns    0x410dc1
  410dc5:	fiadd  DWORD PTR [edi+0xa]
  410dc8:	data16 add ah,BYTE PTR [ecx-0xb8de006]
  410dcf:	in     al,dx
  410dd0:	fcomi  st,st(2)
  410dd2:	addr16 sbb edx,ebx
  410dd5:	pop    edi
  410dd6:	sbb    BYTE PTR [ebp+0x5e],bh
  410dd9:	xchg   BYTE PTR [edi-0x79],al
  410ddc:	scas   eax,DWORD PTR es:[edi]
  410ddd:	std    
  410dde:	pop    esp
  410ddf:	pop    esi
  410de0:	ret    
  410de1:	or     BYTE PTR [edx+0x3c],bl
  410de4:	mov    al,0xe7
  410de6:	mov    dh,0x5
  410de8:	test   DWORD PTR [edi+0x37f46d0],0xb354287e
  410df2:	xor    DWORD PTR [edx-0x4b4fded0],0xaf901ae8
  410dfc:	shr    DWORD PTR [edx+edi*2-0x32],1
  410e00:	jo     0x410e67
  410e02:	adc    al,0xd2
  410e04:	ret    
  410e05:	leave  
  410e06:	jmp    0xa2a1ecb3
  410e0b:	icebp  
  410e0c:	xchg   ecx,eax
  410e0d:	xchg   ebp,eax
  410e0e:	in     al,0x3d
  410e10:	sub    ecx,DWORD PTR [edi-0x2860fbd0]
  410e16:	sbb    ch,BYTE PTR [edx]
  410e18:	or     bl,ah
  410e1a:	pop    ss
  410e1b:	stos   DWORD PTR es:[edi],eax
  410e1c:	xor    edi,edi
  410e1e:	(bad)  
  410e1f:	pusha  
  410e20:	and    eax,0x989209aa
  410e25:	pop    ebp
  410e26:	es pop esi
  410e28:	mov    edx,DWORD PTR cs:[edx-0x3a]
  410e2c:	sub    BYTE PTR [edi+esi*4+0x0],al
  410e30:	retf   0x3a2f
  410e33:	xlat   BYTE PTR ds:[ebx]
  410e34:	into   
  410e35:	pop    es
  410e36:	xchg   edx,eax
  410e37:	cmp    BYTE PTR [ebx],bl
  410e39:	iret   
  410e3a:	and    BYTE PTR [edi],ah
  410e3c:	mov    ch,0x39
  410e3e:	pop    es
  410e3f:	fdiv   DWORD PTR [esi]
  410e41:	leave  
  410e42:	in     al,dx
  410e43:	pop    ebp
  410e44:	mov    ebx,DWORD PTR [edx]
  410e46:	jmp    0x410ea8
  410e48:	add    DWORD PTR [ebx+esi*2+0x132b2cbc],ebx
  410e4f:	or     DWORD PTR [esi+ebp*2],edi
  410e52:	adc    ecx,DWORD PTR [edi]
  410e54:	aaa    
  410e55:	sub    dl,BYTE PTR [edi+0x1e]
  410e58:	fwait
  410e59:	mov    eax,0x7f4786f4
  410e5e:	mov    esi,0x73e6c803
  410e63:	xchg   edi,eax
  410e64:	dec    edx
  410e65:	sbb    ecx,edx
  410e67:	call   0x862247e8
  410e6c:	pop    es
  410e6d:	gs ins DWORD PTR es:[edi],dx
  410e6f:	xchg   esi,eax
  410e70:	xchg   BYTE PTR [ecx],dh
  410e72:	(bad)
  410e75:	stc    
  410e76:	popf   
  410e77:	pop    ebx
  410e78:	out    dx,al
  410e79:	not    esi
  410e7b:	add    dl,ah
  410e7d:	shl    BYTE PTR [esi+0x17b3b43],1
  410e83:	jbe    0x4e929ade
  410e89:	push   0x2f122f43
  410e8e:	aam    0xbc
  410e90:	or     esi,DWORD PTR [ecx]
  410e92:	nop
  410e93:	adc    al,0x41
  410e95:	jecxz  0x410ed5
  410e97:	stos   DWORD PTR es:[edi],eax
  410e98:	adc    edx,0xfffffff2
  410e9b:	mov    edx,0xe7c9ff4e
  410ea0:	in     al,0x4d
  410ea2:	in     eax,dx
  410ea3:	int3   
  410ea4:	fisub  DWORD PTR [ebx]
  410ea6:	mov    ebx,0xbc465d2a
  410eab:	fdivr  st,st(7)
  410ead:	stos   DWORD PTR es:[edi],eax
  410eae:	xchg   ecx,eax
  410eaf:	sahf   
  410eb0:	cdq    
  410eb1:	cmc    
  410eb2:	push   edi
  410eb3:	jae    0x410f20
  410eb5:	add    bl,BYTE PTR [eax+edx*2+0x61]
  410eb9:	rcl    DWORD PTR [eax-0x7a],0xae
  410ebd:	cwde   
  410ebe:	push   ds
  410ebf:	and    ecx,eax
  410ec1:	sbb    ebp,0xffffff8f
  410ec4:	sbb    al,0x86
  410ec6:	inc    ecx
  410ec7:	push   esp
  410ec8:	mov    esp,0x783f9eee
  410ecd:	std    
  410ece:	jecxz  0x410eca
  410ed0:	mov    ?,WORD PTR [ebp-0x6c]
  410ed3:	dec    esi
  410ed4:	pop    edx
  410ed5:	mov    ecx,0xdc1e94bb
  410eda:	repnz xor ebx,eax
  410edd:	out    dx,eax
  410ede:	mov    cl,0x91
  410ee0:	fcmovnu st,st(0)
  410ee2:	leave  
  410ee3:	xor    DWORD PTR [edi-0x4b],0xf330b460
  410eea:	bnd jne 0x410f6a
  410eed:	xchg   esp,eax
  410eee:	add    BYTE PTR [esi+0x74fab99a],ah
  410ef4:	das    
  410ef5:	aaa    
  410ef6:	aaa    
  410ef7:	or     DWORD PTR [edi+ebx*8+0x52394fcf],0x40402b18
  410f02:	fsub   st(2),st
  410f04:	ds add edx,eax
  410f07:	js     0x410eb8
  410f09:	je     0x410f56
  410f0b:	jae    0x410f81
  410f0d:	cmp    eax,0xe7432e7c
  410f12:	mov    edx,0x29c7b783
  410f17:	idiv   DWORD PTR [edi]
  410f19:	aam    0x51
  410f1b:	and    dh,BYTE PTR [esi+0x52ff0a1b]
  410f21:	arpl   WORD PTR [ebp-0xe],di
  410f24:	retf   0xa074
  410f27:	ret    0xb760
  410f2a:	jl     0x410f89
  410f2c:	out    dx,al
  410f2d:	ret    0x3544
  410f30:	bound  esp,QWORD PTR [eax+0x31]
  410f33:	push   0x11
  410f35:	jnp    0x410f12
  410f37:	scas   al,BYTE PTR es:[edi]
  410f38:	lods   al,BYTE PTR ds:[esi]
  410f39:	into   
  410f3a:	cmp    DWORD PTR [esi+0x1003cd27],ebx
  410f40:	fld    DWORD PTR [ebx+0x4983da63]
  410f46:	fsubr  QWORD PTR [esi+0x34]
  410f49:	mov    dh,0xe5
  410f4b:	jmp    0x410ee0
  410f4d:	and    al,BYTE PTR [eax-0x6b]
  410f50:	out    0x9b,al
  410f52:	gs jge 0x410f56
  410f55:	mov    al,ds:0xb9123c93
  410f5a:	adc    edi,DWORD PTR [ecx]
  410f5c:	shr    dh,cl
  410f5e:	and    DWORD PTR [esi-0x61ddbbf4],0x6
  410f65:	xchg   bh,dh
  410f67:	mov    cl,0xd
  410f69:	push   ecx
  410f6a:	out    dx,al
  410f6b:	ror    DWORD PTR [edx],0x59
  410f6e:	mov    ch,0xe3
  410f70:	sbb    ah,BYTE PTR [esi+0x14]
  410f73:	dec    eax
  410f74:	loop   0x410f27
  410f76:	mov    bh,0x62
  410f78:	push   ss
  410f79:	xor    BYTE PTR [edx],ch
  410f7b:	jnp    0x410f38
  410f7d:	mov    ch,0x18
  410f7f:	cwde   
  410f80:	and    eax,0xeec3cd47
  410f85:	push   es
  410f86:	lods   eax,DWORD PTR ds:[esi]
  410f87:	cmp    al,0x84
  410f89:	into   
  410f8a:	sbb    edx,ebx
  410f8c:	gs call 0x425d27f
  410f92:	cdq    
  410f93:	jmp    0xd391:0x835f24f8
  410f9a:	sbb    ch,BYTE PTR [edx+0xbca2d73]
  410fa0:	pop    ebp
  410fa1:	pop    eax
  410fa2:	push   ecx
  410fa3:	pushf  
  410fa4:	idiv   DWORD PTR [esi]
  410fa6:	call   0xd7e3:0xda6a6765
  410fad:	iret   
  410fae:	(bad)  
  410faf:	rol    DWORD PTR [edi],1
  410fb1:	(bad)  
  410fb2:	mov    edi,0x1e9f0d43
  410fb7:	jmp    0x410f40
  410fb9:	imul   edx,DWORD PTR [ebp+ecx*2-0x73],0x4c
  410fbe:	push   esp
  410fbf:	add    DWORD PTR [esi+0x6113b7b4],esi
  410fc5:	jbe    0x41101b
  410fc7:	pop    ecx
  410fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fc9:	lahf   
  410fca:	mov    eax,ds:0xf93300d4
  410fcf:	cmc    
  410fd0:	xor    DWORD PTR [edi],ebp
  410fd2:	ret    
  410fd3:	das    
  410fd4:	mov    edi,0xce8ab0dc
  410fd9:	dec    eax
  410fda:	add    DWORD PTR [ebx+0x5b3031a2],ebp
  410fe0:	stos   BYTE PTR es:[edi],al
  410fe1:	xchg   DWORD PTR [edi+0x45],eax
  410fe4:	aaa    
  410fe5:	mov    es,WORD PTR [ebx+0x3f]
  410fe8:	jle    0x411044
  410fea:	sub    BYTE PTR [edx+ecx*2],al
  410fed:	sti    
  410fee:	test   BYTE PTR [ebx-0x58],dh
  410ff1:	loopne 0x410f76
  410ff3:	sub    DWORD PTR [ecx+0x5dd508f2],0xffffff93
  410ffa:	scas   eax,DWORD PTR es:[edi]
  410ffb:	mov    ch,BYTE PTR [esi-0x29c7ff49]
  411001:	cmc    
  411002:	mov    DWORD PTR [edx+0x629948f2],ebp
  411008:	out    dx,al
  411009:	fldcw  WORD PTR [eax+ecx*4]
  41100c:	or     ebp,DWORD PTR ds:0xda588116
  411012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411013:	push   0x5d0443fe
  411018:	ss mov edx,0xf160b77f
  41101e:	stos   BYTE PTR es:[edi],al
  41101f:	enter  0x5572,0xd7
  411023:	jmp    0x41103b
  411025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411026:	push   ecx
  411027:	pop    ss
  411028:	ret    0x7e70
  41102b:	fdiv   DWORD PTR [esi-0x29]
  41102e:	xchg   edi,eax
  41102f:	cmp    esp,DWORD PTR ds:0xb938ed27
  411035:	(bad)
  411038:	arpl   WORD PTR [ecx],cx
  41103a:	xchg   ecx,eax
  41103b:	jecxz  0x41109b
  41103d:	jecxz  0x411016
  41103f:	rcl    BYTE PTR [edi-0x60],cl
  411042:	or     BYTE PTR [ebp+ebp*1+0x54],al
  411046:	pop    ecx
  411047:	xchg   edx,eax
  411048:	pop    es
  411049:	cld    
  41104a:	cmpxchg DWORD PTR [edx+ebx*2],ecx
  41104e:	cld    
  41104f:	sub    ecx,eax
  411051:	sahf   
  411052:	xlat   BYTE PTR ds:[ebx]
  411053:	push   ss
  411054:	int    0x64
  411056:	jmp    0x411054
  411058:	mov    dl,0x35
  41105a:	xchg   ebp,eax
  41105b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41105c:	cmp    eax,0x9c2b932c
  411061:	jno    0x411077
  411063:	pop    ebx
  411064:	jle    0x411030
  411066:	daa    
  411067:	dec    ebx
  411068:	outs   dx,DWORD PTR gs:[esi]
  41106a:	test   al,0x8c
  41106c:	dec    ecx
  41106d:	sbb    DWORD PTR [eax-0x36],0x6785b85a
  411074:	adc    al,0xe8
  411076:	fstp   TBYTE PTR [ebp+0x39c49969]
  41107c:	cmp    al,0xef
  41107e:	cdq    
  41107f:	scas   eax,DWORD PTR es:[edi]
  411080:	jg     0x411097
  411082:	xor    al,0xfa
  411084:	pop    esi
  411085:	cmp    al,0x57
  411087:	dec    edx
  411088:	test   al,0x73
  41108a:	iret   
  41108b:	cmp    al,0xf6
  41108d:	lods   eax,DWORD PTR ds:[esi]
  41108e:	sub    al,BYTE PTR [ebx]
  411090:	mov    ds:0x5dcf2c44,eax
  411095:	xchg   ebp,eax
  411096:	je     0x4110e4
  411098:	out    dx,eax
  411099:	inc    ecx
  41109a:	sti    
  41109b:	jo     0x411034
  41109d:	fidivr DWORD PTR [ebp-0x75]
  4110a0:	or     BYTE PTR [eax],bl
  4110a2:	icebp  
  4110a3:	push   ebp
  4110a4:	icebp  
  4110a5:	aad    0x7a
  4110a7:	mov    edi,0x63348002
  4110ac:	sbb    esp,edi
  4110ae:	push   0x2092d84a
  4110b3:	jnp    0x4110d3
  4110b5:	push   edx
  4110b6:	push   ds
  4110b7:	iret   
  4110b8:	add    DWORD PTR [ebx+edx*8+0x18339424],edi
  4110bf:	ret    
  4110c0:	sbb    eax,0x624534fe
  4110c5:	ret    
  4110c6:	and    eax,0xb4ca1fd3
  4110cb:	mov    dh,0x5f
  4110cd:	addr16 mov ds:0x7f5a,eax
  4110d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d2:	cmp    al,0x29
  4110d4:	add    ah,BYTE PTR [bp+si-0x3e]
  4110d8:	leave  
  4110d9:	shl    BYTE PTR [eax+0x4726fe57],0x40
  4110e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110e1:	imul   ebp,ecx,0xffffffa4
  4110e4:	mov    eax,edx
  4110e6:	das    
  4110e7:	in     eax,dx
  4110e8:	sbb    eax,0x27a7039e
  4110ed:	retf   
  4110ee:	ror    eax,0x7
  4110f1:	fwait
  4110f2:	push   ss
  4110f3:	int    0x68
  4110f5:	out    dx,eax
  4110f6:	pop    esp
  4110f7:	push   0xffffffad
  4110f9:	xor    ecx,DWORD PTR [ebx+0x10464d48]
  4110ff:	jecxz  0x4110b5
  411101:	xchg   esi,eax
  411102:	imul   edx,DWORD PTR [ebp+0xb],0xffffff83
  411106:	sar    BYTE PTR [ecx+0x3b23a792],cl
  41110c:	int    0xaa
  41110e:	add    BYTE PTR [ecx+0x7a27687a],dl
  411114:	jge    0x4110f2
  411116:	ja     0x4110f2
  411118:	fstp   DWORD PTR [esp+edi*4-0xfa1cf7d]
  41111f:	mov    ecx,edi
  411121:	lds    esi,FWORD PTR [edi-0x80]
  411124:	into   
  411125:	add    bh,BYTE PTR [ebp-0x747ce4d5]
  41112b:	inc    ebp
  41112c:	arpl   WORD PTR ds:0xb1d26275,si
  411132:	mov    WORD PTR [ebx+0x34],?
  411135:	inc    ebp
  411136:	pop    esi
  411137:	or     cl,dl
  411139:	jbe    0x41115b
  41113b:	sub    eax,0xdc779e9c
  411140:	inc    esi
  411141:	sar    BYTE PTR [eax+0x7d500e63],0xfe
  411148:	push   ds
  411149:	rcr    dh,0x25
  41114c:	hlt    
  41114d:	dec    ebx
  41114e:	add    cl,BYTE PTR [edx+eax*8-0x3c]
  411152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411153:	cmp    bh,dh
  411155:	sub    BYTE PTR [eax-0xb55a766],bh
  41115b:	adc    BYTE PTR [ebx+0x7],ah
  41115e:	mov    ds,WORD PTR ds:0xa8ac3c9f
  411164:	pop    ss
  411165:	sti    
  411166:	sub    edx,edi
  411168:	out    dx,al
  411169:	ja     0x41111d
  41116b:	fcom   DWORD PTR [edi+0x5d825173]
  411171:	cmp    al,BYTE PTR ds:0x48e7fb82
  411177:	and    BYTE PTR [ebp-0x3975498b],0x1
  41117e:	sbb    al,0x7d
  411180:	(bad)  
  411181:	ret    
  411182:	jge    0x4111b3
  411184:	mov    esi,0x2c887c56
  411189:	cdq    
  41118a:	xchg   ecx,eax
  41118b:	mov    cl,0xa1
  41118d:	stos   BYTE PTR es:[edi],al
  41118e:	push   ss
  41118f:	jno    0x411152
  411191:	iret   
  411192:	fucomip st,st(2)
  411194:	adc    al,0x12
  411196:	jno    0x4111b0
  411198:	call   0xbb362de0
  41119d:	dec    esp
  41119e:	pushf  
  41119f:	dec    eax
  4111a0:	add    al,0x2e
  4111a2:	sub    DWORD PTR [esi+ebx*1-0x61486c10],esp
  4111a9:	adc    BYTE PTR [ecx+edx*4-0x1a],ch
  4111ad:	mov    ecx,0xc00b4222
  4111b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111b3:	bound  ebx,QWORD PTR [ecx-0x54e698f5]
  4111b9:	push   ecx
  4111ba:	add    eax,0xb8d0ddc4
  4111bf:	adc    eax,0x29694c0d
  4111c4:	cs inc edi
  4111c6:	mov    al,ds:0xe6a66b25
  4111cb:	in     al,0x9d
  4111cd:	pop    edx
  4111ce:	lahf   
  4111cf:	or     BYTE PTR [ebx-0x628003bd],cl
  4111d5:	jp     0x41123d
  4111d7:	and    bh,ch
  4111d9:	or     DWORD PTR [esi-0x1c],esp
  4111dc:	push   eax
  4111dd:	outs   dx,BYTE PTR ds:[esi]
  4111de:	mov    esi,DWORD PTR [ecx]
  4111e0:	shr    BYTE PTR [edx-0x70],0x83
  4111e4:	into   
  4111e5:	inc    ebp
  4111e6:	mov    DWORD PTR ds:[edi+ebx*1+0x5a],edx
  4111eb:	hlt    
  4111ec:	dec    edi
  4111ed:	push   ebp
  4111ee:	add    edi,DWORD PTR [eax-0x813123f]
  4111f4:	xor    al,dh
  4111f6:	push   eax
  4111f7:	xchg   ebp,eax
  4111f8:	jbe    0x4111ec
  4111fa:	adc    al,0xa0
  4111fc:	lods   al,BYTE PTR ds:[esi]
  4111fd:	pop    ds
  4111fe:	pop    es
  4111ff:	shr    BYTE PTR [edi*8+0x1552e3c4],0xe7
  411207:	imul   edx,ecx,0x2eb13f87
  41120d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41120e:	sbb    bl,ch
  411210:	popa   
  411211:	fwait
  411212:	(bad)  
  411213:	in     al,0x14
  411215:	push   ss
  411216:	mov    ebx,0x1398e008
  41121b:	cmp    ch,bl
  41121d:	enter  0x1f5c,0xd5
  411221:	bound  ebx,QWORD PTR [edi]
  411223:	or     DWORD PTR [edi+0x61],edx
  411226:	jno    0x41126f
  411228:	xor    DWORD PTR [edi-0x1e],0xd8a36851
  41122f:	dec    ecx
  411230:	fs or  ch,dh
  411233:	aaa    
  411234:	and    eax,0xc53ea093
  411239:	sbb    eax,0xafa37f18
  41123e:	call   0x2efc:0xc616e364
  411245:	loop   0x411237
  411247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411248:	mov    ecx,0xfea239c8
  41124d:	idiv   DWORD PTR [edx+0x5d]
  411250:	jle    0x41121e
  411252:	cmp    ebx,DWORD PTR [edi]
  411254:	test   al,0xd1
  411256:	fs cmp al,0x10
  411259:	fist   WORD PTR [edx+0x6d]
  41125c:	push   ss
  41125d:	xor    al,0xea
  41125f:	fsub   st,st(0)
  411261:	int    0x5f
  411263:	(bad)  
  411264:	into   
  411265:	mov    edx,0x8ff0c5
  41126a:	bound  ebx,QWORD PTR [eax+0x5b85804]
  411270:	cli    
  411271:	aas    
  411272:	add    dl,BYTE PTR [edi*1-0x175f1426]
  411279:	mov    eax,0x68ac25c1
  41127e:	pop    ebp
  41127f:	dec    ecx
  411280:	test   DWORD PTR [edx-0x78],esi
  411283:	ins    DWORD PTR es:[edi],dx
  411284:	je     0x4112ca
  411286:	adc    eax,0x6271ae87
  41128b:	mov    edi,0x5d3f513b
  411290:	jmp    0xacff:0x752ebacc
  411297:	or     dl,ch
  411299:	out    dx,eax
  41129a:	aad    0x50
  41129c:	fidivr DWORD PTR [esi-0x6e4ab7b3]
  4112a2:	mov    dh,0x80
  4112a4:	push   ss
  4112a5:	ins    DWORD PTR es:[edi],dx
  4112a6:	(bad)  
  4112a7:	and    BYTE PTR [ecx],al
  4112a9:	xor    DWORD PTR [ecx+0x5b0353e0],esp
  4112af:	fs add al,0xd6
  4112b2:	jge    0x4112fd
  4112b4:	std    
  4112b5:	stos   DWORD PTR es:[edi],eax
  4112b6:	mov    ds:0x137af8d8,al
  4112bb:	push   0x11
  4112bd:	idiv   DWORD PTR [ecx-0x6ce54d92]
  4112c3:	inc    ecx
  4112c4:	shl    DWORD PTR [edx+0x3d],0xf5
  4112c8:	or     al,0xc9
  4112ca:	dec    edi
  4112cb:	xor    eax,0xc8823c4d
  4112d0:	jb     0x411346
  4112d2:	popf   
  4112d3:	jmp    0x411270
  4112d5:	daa    
  4112d6:	push   es
  4112d7:	dec    ebp
  4112d8:	push   esp
  4112d9:	imul   edx,DWORD PTR [esi-0x2bffcd67],0xde1d600d
  4112e3:	(bad)  
  4112e7:	push   eax
  4112e8:	adc    DWORD PTR [edx-0x507a6b9],eax
  4112ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112ef:	jbe    0x4112b2
  4112f1:	cmp    ebx,edi
  4112f3:	pop    ss
  4112f4:	ja     0x411335
  4112f6:	or     bl,BYTE PTR [eax]
  4112f8:	xchg   BYTE PTR [edi],al
  4112fa:	add    al,0x5
  4112fc:	xchg   esi,eax
  4112fd:	or     BYTE PTR [edi-0x2f],0x82
  411301:	sub    eax,0x5fa8cea6
  411306:	sub    eax,0x6f4f6c02
  41130b:	aam    0x5f
  41130d:	mov    edi,DWORD PTR ds:0xe2f3817d
  411313:	js     0x411314
  411315:	push   0xffffffeb
  411317:	daa    
  411318:	xchg   ebx,eax
  411319:	data16 mov bh,0x5f
  41131c:	and    ebx,DWORD PTR ds:0xb018003a
  411322:	jle    0x4112d3
  411324:	rol    BYTE PTR [edx-0x37e8597a],1
  41132a:	nop
  41132b:	adc    eax,0xca73218d
  411330:	lods   eax,DWORD PTR ds:[esi]
  411331:	xadd   BYTE PTR [ecx],bl
  411334:	push   edx
  411335:	in     eax,dx
  411336:	mov    ds:0x75aad272,eax
  41133b:	aas    
  41133c:	std    
  41133d:	mov    BYTE PTR ds:0x1008139e,0x60
  411344:	retf   0x6bc9
  411347:	push   0x45
  411349:	add    al,0x5e
  41134b:	push   edi
  41134c:	adc    ecx,DWORD PTR [edx+esi*2-0x32894528]
  411353:	lods   eax,DWORD PTR ds:[esi]
  411354:	and    al,BYTE PTR [ebx+0x59]
  411357:	mov    esi,0x85611889
  41135c:	xchg   edx,eax
  41135d:	inc    edx
  41135e:	pop    esp
  41135f:	mov    DWORD PTR [edi],eax
  411361:	popa   
  411362:	fdivr  DWORD PTR [edx-0x30]
  411365:	jl     0x41132c
  411367:	ins    BYTE PTR es:[edi],dx
  411368:	push   ebp
  411369:	push   0xdf6ce1ab
  41136e:	hlt    
  41136f:	jmp    0x41133b
  411371:	stos   BYTE PTR es:[edi],al
  411372:	cli    
  411373:	leave  
  411374:	fwait
  411375:	pop    ss
  411376:	int    0x46
  411378:	jmp    0x1840bb18
  41137d:	sub    esi,DWORD PTR [esi-0x1a]
  411380:	fiadd  DWORD PTR [edx+0x10]
  411383:	popf   
  411384:	xchg   DWORD PTR [ecx+0x47],esi
  411387:	mov    ebx,esp
  411389:	call   0x479e:0x2c4c4383
  411390:	aaa    
  411391:	mov    ch,0x15
  411393:	fst    DWORD PTR [esi-0x18c20b6f]
  411399:	ret    
  41139a:	out    dx,eax
  41139b:	jbe    0x41140f
  41139d:	adc    al,0x82
  41139f:	aaa    
  4113a0:	jmp    0x8f8bccf6
  4113a5:	inc    ebx
  4113a6:	aam    0x97
  4113a8:	jbe    0x41136c
  4113aa:	adc    dh,BYTE PTR [edx+0x67a691f5]
  4113b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113b1:	inc    eax
  4113b2:	inc    edx
  4113b3:	and    BYTE PTR [edi+0x2],bh
  4113b6:	or     eax,0xca102bc5
  4113bb:	lea    esi,[edi+0x7f72e615]
  4113c1:	les    edi,FWORD PTR [edi+edx*8-0x219fa6ad]
  4113c8:	(bad)  
  4113c9:	add    DWORD PTR [esi+0x39],edx
  4113cc:	iret   
  4113cd:	les    esp,FWORD PTR [ebx-0x7c190ce7]
  4113d3:	out    dx,al
  4113d4:	cmc    
  4113d5:	mov    DWORD PTR [esi+eax*4-0x7c],esi
  4113d9:	xor    esi,DWORD PTR [ecx-0xc]
  4113dc:	in     eax,0x51
  4113de:	inc    esp
  4113df:	(bad)  
  4113e0:	mov    BYTE PTR [eax],dh
  4113e2:	cld    
  4113e3:	jnp    0x411388
  4113e5:	pop    esp
  4113e6:	inc    ecx
  4113e7:	out    dx,eax
  4113e8:	or     eax,DWORD PTR [edx+0x57097fb2]
  4113ee:	xchg   ecx,eax
  4113ef:	pop    ss
  4113f0:	dec    esi
  4113f1:	sbb    eax,0x5b2801bc
  4113f6:	leave  
  4113f7:	jbe    0x4113c5
  4113f9:	cmp    bh,0x4f
  4113fc:	cmc    
  4113fd:	push   edi
  4113fe:	int    0xb7
  411400:	dec    edi
  411401:	and    ah,BYTE PTR [ecx]
  411403:	(bad)  
  411404:	je     0x41138d
  411406:	cwde   
  411407:	pop    ss
  411408:	mov    gs,WORD PTR ds:0x2a81efee
  41140e:	in     eax,dx
  41140f:	xor    BYTE PTR [esi-0x2b34b3aa],0xd
  411416:	mov    dh,0x92
  411418:	out    0x24,al
  41141a:	adc    edx,eax
  41141c:	sbb    eax,0x87f7c85e
  411421:	and    DWORD PTR [edx-0x5c75e8c7],ebx
  411427:	push   ss
  411428:	imul   esp,DWORD PTR [eax-0x15],0x338dafb5
  41142f:	push   0x1
  411431:	test   al,0xaf
  411433:	leave  
  411434:	popf   
  411435:	icebp  
  411436:	mov    al,ds:0xe603dc4
  41143b:	adc    BYTE PTR [ebx],cl
  41143d:	or     ch,0x1e
  411440:	stos   DWORD PTR es:[edi],eax
  411441:	cmp    al,BYTE PTR [ebx+0x7ae554c8]
  411447:	sahf   
  411448:	or     ebx,esi
  41144a:	test   eax,0xd7fd50ec
  41144f:	mov    edx,?
  411451:	pop    edi
  411452:	sbb    ebp,DWORD PTR [edx+0x6d]
  411455:	mov    esi,0xdb5423a9
  41145a:	add    sp,cx
  41145d:	xor    eax,0xd0295905
  411462:	xor    BYTE PTR [ebx+ebx*1+0x1d],0x41
  411467:	scas   al,BYTE PTR es:[edi]
  411468:	ret    
  411469:	iret   
  41146a:	adc    al,0xcf
  41146c:	dec    edx
  41146d:	call   0x9d24:0x9ea65999
  411474:	mov    al,ds:0xd700006e
  411479:	std    
  41147a:	(bad)  
  41147b:	ss xchg esp,eax
  41147d:	pusha  
  41147e:	(bad)
  411481:	xor    al,0x3a
  411483:	mov    al,ds:0xb6a4c506
  411488:	rol    BYTE PTR [eax+edx*8],1
  41148b:	cwde   
  41148c:	inc    esp
  41148d:	push   esp
  41148e:	out    dx,eax
  41148f:	pop    esi
  411490:	push   cs
  411491:	cmp    esi,DWORD PTR ds:0xa7af8d71
  411497:	xor    BYTE PTR [ebx+0x6ce4e138],ah
  41149d:	dec    ebx
  41149e:	jge    0x4114b8
  4114a0:	xchg   ebp,eax
  4114a1:	adc    BYTE PTR [eax-0x2fc2abb1],ah
  4114a7:	dec    ebx
  4114a8:	rcl    DWORD PTR [edi-0x798f6037],cl
  4114ae:	and    dh,bh
  4114b0:	cwde   
  4114b1:	cmp    edx,ecx
  4114b3:	jno    0x411521
  4114b5:	sahf   
  4114b6:	adc    al,0xb8
  4114b8:	pop    ss
  4114b9:	ins    DWORD PTR es:[edi],dx
  4114ba:	int3   
  4114bb:	mov    ebp,0xe5fcdbeb
  4114c0:	cld    
  4114c1:	(bad)  
  4114c2:	cli    
  4114c3:	cmp    eax,0x924a4052
  4114c8:	shr    DWORD PTR [esi],cl
  4114ca:	stos   BYTE PTR es:[edi],al
  4114cb:	data16 xor al,0x58
  4114ce:	add    esi,DWORD PTR [ebx]
  4114d0:	mov    ebp,0xb4d5b359
  4114d5:	inc    ecx
  4114d6:	dec    ecx
  4114d7:	and    esp,DWORD PTR [ecx]
  4114d9:	shl    BYTE PTR [ebx],1
  4114db:	out    0x6b,eax
  4114dd:	aam    0x4b
  4114df:	test   eax,0x22f793cb
  4114e4:	add    ebx,ecx
  4114e6:	or     eax,0x5cc407c3
  4114eb:	jecxz  0x4114b2
  4114ed:	es data16 loope 0x411476
  4114f1:	mov    bl,0x9d
  4114f3:	add    bl,BYTE PTR [ebx+ebx*8]
  4114f6:	pop    ebp
  4114f7:	xchg   ecx,eax
  4114f8:	mov    es,WORD PTR [ebx+0x16]
  4114fb:	mov    dl,0x46
  4114fd:	jmp    0x35da:0x510798db
  411504:	(bad)  
  411505:	je     0x41154c
  411507:	lock iret 
  411509:	push   esp
  41150a:	inc    esp
  41150b:	in     al,0x82
  41150d:	add    al,0x32
  41150f:	jle    0x4abbd8b5
  411515:	xchg   esp,eax
  411516:	cmp    bl,BYTE PTR [ebx-0x5cd5bb04]
  41151c:	dec    edx
  41151d:	push   ebp
  41151e:	sbb    BYTE PTR [edi+0x402166a4],al
  411524:	mov    al,ds:0x833c3e17
  411529:	fcomp  DWORD PTR [ebp+0x3a9fd432]
  41152f:	sub    eax,0x9c065bc9
  411534:	ficomp WORD PTR [edi-0x76]
  411537:	rcr    DWORD PTR [edi+ebp*1],1
  41153a:	jle    0x411531
  41153c:	(bad)  
  41153d:	popa   
  41153e:	mov    al,0x2c
  411540:	pop    ds
  411541:	ja     0x4114c8
  411543:	jp     0x411561
  411545:	pop    ebx
  411546:	xor    ebp,DWORD PTR [eax+0x4d]
  411549:	xlat   BYTE PTR ds:[ebx]
  41154a:	jg     0x411578
  41154c:	push   edx
  41154e:	pushf  
  41154f:	xlat   BYTE PTR ds:[ebx]
  411550:	retf   
  411551:	mov    WORD PTR [esi-0x2b],ds
  411554:	or     eax,DWORD PTR [ebx-0x6e]
  411557:	ja     0x4114ed
  411559:	xchg   esi,eax
  41155a:	ss aad 0xa6
  41155d:	mov    dl,0x10
  41155f:	add    al,BYTE PTR [edi]
  411561:	pop    es
  411562:	mov    ah,al
  411564:	and    eax,eax
  411566:	int3   
  411567:	fiadd  WORD PTR [ecx+0x2]
  41156a:	push   es
  41156b:	mov    DWORD PTR [ebp+esi*2+0x4b77c9a4],ecx
  411572:	mov    bl,0xcb
  411574:	in     al,0xc5
  411576:	xchg   DWORD PTR ds:0x68001f5,esi
  41157c:	xchg   edi,eax
  41157d:	rcr    BYTE PTR [edi],1
  41157f:	xchg   ebx,eax
  411580:	repz mov esp,edx
  411583:	fucomip st,st(0)
  411585:	pushf  
  411586:	dec    edi
  411587:	cmp    eax,0x8c6a2708
  41158c:	adc    al,0x53
  41158e:	mov    cl,0x81
  411590:	sbb    edx,ecx
  411592:	mov    BYTE PTR ds:0x84b53550,bl
  411598:	dec    esi
  411599:	in     eax,0x5c
  41159b:	cli    
  41159c:	fidivr WORD PTR [eax+0x462853ec]
  4115a2:	fs out 0xa2,al
  4115a5:	repz adc eax,0x8a98d6d3
  4115ab:	adc    ebx,DWORD PTR [edx-0x217923ca]
  4115b1:	and    esp,DWORD PTR [ebx-0x41]
  4115b4:	daa    
  4115b5:	pop    ss
  4115b6:	scas   al,BYTE PTR es:[edi]
  4115b7:	mov    edx,0x87c39c77
  4115bc:	das    
  4115bd:	popa   
  4115be:	sub    eax,0xb6521a0f
  4115c3:	aas    
  4115c4:	je     0x41160e
  4115c6:	dec    ecx
  4115c7:	push   eax
  4115c8:	enter  0x1621,0x4d
  4115cc:	lods   al,BYTE PTR ds:[esi]
  4115cd:	dec    esi
  4115ce:	xor    BYTE PTR [edi],bh
  4115d0:	jge    0x411559
  4115d2:	and    esp,ecx
  4115d4:	test   DWORD PTR [ecx-0x2e],eax
  4115d7:	aad    0xe0
  4115d9:	push   ss
  4115da:	push   edi
  4115db:	addr16 pop ds
  4115dd:	inc    ecx
  4115de:	inc    esi
  4115df:	mov    ebx,0x13d706c
  4115e4:	sahf   
  4115e5:	mov    ?,WORD PTR [edi]
  4115e7:	ss mov esp,0x9d2dec0b
  4115ed:	or     DWORD PTR [ecx-0x5d],edx
  4115f0:	pop    esi
  4115f1:	and    edi,DWORD PTR [ecx]
  4115f3:	cmp    cl,BYTE PTR [ebx-0x5d]
  4115f6:	lods   al,BYTE PTR ds:[esi]
  4115f7:	pop    es
  4115f8:	sub    DWORD PTR [ebp-0x6a],ebp
  4115fb:	pusha  
  4115fc:	xchg   esp,eax
  4115fd:	lahf   
  4115fe:	rcr    BYTE PTR [ecx-0x7],1
  411601:	mov    eax,0xe3f0c94a
  411606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411607:	dec    ebx
  411608:	or     ah,BYTE PTR [ecx-0x1cede0bc]
  41160e:	jmp    0xf27c969a
  411613:	xor    BYTE PTR [eax],0xe5
  411616:	adc    bh,BYTE PTR [edx+0x821b287]
  41161c:	fmul   st(3),st
  41161e:	arpl   WORD PTR [edx+edi*4-0x56],dx
  411622:	idiv   esi
  411624:	lahf   
  411625:	add    BYTE PTR [ecx+0x1dd14bc4],bl
  41162b:	mov    esi,DWORD PTR [ecx]
  41162d:	lea    eax,[esi]
  41162f:	test   al,0xba
  411631:	sub    BYTE PTR [edi],dl
  411633:	(bad)  
  411634:	pop    eax
  411635:	rcl    ecx,0xe3
  411638:	lods   al,BYTE PTR fs:[esi]
  41163a:	lea    esp,[esi+0x45]
  41163d:	test   BYTE PTR [ecx],0xcd
  411640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411641:	ds ja  0x411689
  411644:	pop    edx
  411645:	jnp    0x4115de
  411647:	outs   dx,BYTE PTR ds:[esi]
  411648:	aaa    
  411649:	enter  0x414d,0xf8
  41164d:	or     al,0x47
  41164f:	stos   DWORD PTR es:[edi],eax
  411650:	in     al,0xd8
  411652:	push   ss
  411653:	adc    al,0x54
  411655:	call   esp
  411657:	jnp    0x4116ce
  411659:	sbb    al,BYTE PTR cs:[edx]
  41165c:	ins    DWORD PTR es:[edi],dx
  41165d:	inc    edi
  41165e:	fisub  DWORD PTR [ecx-0xc]
  411661:	jge    0x4116c1
  411663:	xor    al,0xf4
  411665:	push   ebx
  411666:	pop    eax
  411667:	retf   
  411668:	or     ebx,ebx
  41166a:	enter  0x8be2,0x77
  41166e:	xchg   ebp,eax
  41166f:	shr    ebx,1
  411671:	sbb    DWORD PTR [eax+0x4ad7fb9d],esi
  411677:	imul   eax,DWORD PTR [eax+0x1b],0x5f
  41167b:	cmovns edx,DWORD PTR [esi-0xaa57314]
  411682:	or     ebp,DWORD PTR [esi-0x254f12a0]
  411688:	mov    BYTE PTR [eax+0x41350e88],0x4d
  41168f:	pop    ss
  411690:	in     al,dx
  411691:	es push esp
  411693:	pop    esi
  411694:	jecxz  0x4116b8
  411696:	dec    edx
  411697:	aas    
  411698:	cdq    
  411699:	or     eax,0x16fe52a0
  41169e:	and    eax,0x82845f21
  4116a3:	xor    al,0x2b
  4116a5:	lock push ss
  4116a7:	repz jg 0x41166f
  4116aa:	sahf   
  4116ab:	and    edx,ebp
  4116ad:	add    bh,ch
  4116af:	jle    0x4116bf
  4116b1:	mov    ebp,0xd4630ea4
  4116b6:	mov    ebp,0xbdeeb0ee
  4116bb:	rcr    BYTE PTR [ebx-0x20],0x29
  4116bf:	or     esp,DWORD PTR [ecx]
  4116c1:	push   esi
  4116c2:	or     BYTE PTR [ecx-0x5889ef49],dh
  4116c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c9:	nop
  4116ca:	out    dx,al
  4116cb:	mov    ds:0xc2d99206,al
  4116d0:	ins    DWORD PTR es:[edi],dx
  4116d1:	push   0x6a792d19
  4116d6:	repz add DWORD PTR [edi],0x7ad2353f
  4116dd:	mov    esi,DWORD PTR [esi]
  4116df:	sub    BYTE PTR [eax+0x45],dl
  4116e2:	xchg   esp,eax
  4116e3:	pop    ss
  4116e4:	(bad)  
  4116e6:	xchg   ecx,eax
  4116e7:	popa   
  4116e8:	repnz arpl WORD PTR [ecx+0xbab4b8f],di
  4116ef:	xor    eax,0x786e104e
  4116f4:	mov    ds:0x31c89503,eax
  4116f9:	mov    ebx,0x7abc696e
  4116fe:	in     eax,0x19
  411700:	fdiv   QWORD PTR [edi]
  411702:	pop    edi
  411703:	lock je 0x41170c
  411706:	repz aaa 
  411708:	inc    edx
  411709:	(bad)  
  41170a:	push   ebp
  41170b:	push   eax
  41170c:	pusha  
  41170d:	inc    ebx
  41170e:	pop    ds
  41170f:	jbe    0x41174a
  411711:	pop    ds
  411712:	out    dx,al
  411713:	xor    edx,DWORD PTR [esi+0x4d589de6]
  411719:	(bad)  ds:0x9e310e1a
  41171f:	jl     0x41178e
  411721:	xchg   ecx,eax
  411722:	dec    edi
  411723:	push   0x60a61bbc
  411728:	popf   
  411729:	jno    0x411710
  41172b:	add    al,0xd1
  41172d:	mov    dh,0x65
  41172f:	cmpxchg DWORD PTR [ecx-0x4dbd07f6],esp
  411736:	and    BYTE PTR [edx+0x66],0x5b
  41173a:	(bad)  
  41173b:	sub    cl,BYTE PTR [eax-0x58]
  41173e:	push   ds
  41173f:	cld    
  411740:	mov    ebp,0x3dccc53d
  411745:	xchg   esp,eax
  411746:	je     0x96b4fccc
  41174c:	sub    al,0x73
  41174e:	stos   DWORD PTR es:[edi],eax
  41174f:	loop   0x4117a8
  411751:	scas   eax,DWORD PTR es:[edi]
  411752:	xchg   edi,eax
  411753:	leave  
  411754:	xchg   ah,bh
  411756:	lods   al,BYTE PTR ds:[esi]
  411757:	sub    BYTE PTR [ebx+0x32],al
  41175a:	xor    al,0x1c
  41175c:	ret    
  41175d:	aad    0x72
  41175f:	shl    DWORD PTR [esi-0x3],cl
  411762:	ins    BYTE PTR es:[edi],dx
  411763:	push   ss
  411764:	jns    0x4117a1
  411766:	sahf   
  411767:	mov    cl,0x45
  411769:	dec    edi
  41176a:	into   
  41176b:	out    dx,al
  41176c:	imul   ecx,ecx,0x74
  41176f:	fs (bad) 
  411771:	and    eax,0x4372ad9f
  411776:	or     eax,DWORD PTR [edx+0x3c234e80]
  41177c:	mov    bl,0x4
  41177e:	push   ss
  41177f:	je     0x411712
  411781:	popf   
  411782:	lds    eax,FWORD PTR [ebx+eiz*4-0x4280b256]
  411789:	mov    bl,0x11
  41178b:	mov    edx,0xb19075c7
  411790:	inc    ebx
  411791:	ret    
  411792:	inc    ebp
  411793:	mov    DWORD PTR [ebp+0x3a],0x1e990e79
  41179a:	add    dl,dh
  41179c:	call   0xb227ba05
  4117a1:	sub    al,0xcc
  4117a3:	pushf  
  4117a4:	dec    edi
  4117a5:	sti    
  4117a6:	sub    esi,ecx
  4117a8:	jns    0x411730
  4117aa:	push   es
  4117ab:	(bad)  
  4117ac:	cmp    bl,ah
  4117ae:	inc    ebp
  4117af:	jbe    0x4117d8
  4117b1:	jmp    0x4117b1
  4117b3:	push   esp
  4117b4:	(bad)  
  4117b6:	ja     0x41182d
  4117b8:	out    0xd6,al
  4117ba:	xor    eax,0xda6fcf60
  4117bf:	pushf  
  4117c0:	jmp    0x4117e1
  4117c2:	xchg   edi,eax
  4117c3:	cwde   
  4117c4:	inc    ecx
  4117c5:	mov    edi,0x4f01edc6
  4117ca:	and    esi,DWORD PTR [ebx-0x218a8fa8]
  4117d0:	aaa    
  4117d1:	outs   dx,BYTE PTR ds:[esi]
  4117d2:	mov    ch,0x35
  4117d4:	cmp    edx,DWORD PTR [esi-0x1f937a0]
  4117da:	or     BYTE PTR [edi],bl
  4117dc:	fbld   TBYTE PTR [ebp-0x78]
  4117df:	gs idiv cl
  4117e2:	icebp  
  4117e3:	inc    ecx
  4117e4:	or     ecx,DWORD PTR [esi]
  4117e6:	fimul  DWORD PTR [ebx-0x1f]
  4117e9:	in     al,0x73
  4117eb:	sub    DWORD PTR [edx],esp
  4117ed:	nop
  4117ee:	sub    ecx,esi
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	jecxz  0x41181e
  41186e:	pop    esi
  41186f:	scas   al,BYTE PTR es:[edi]
  411870:	call   0x7bd9505
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	xchg   edi,eax
  411879:	std    
  41187a:	cdq    
  41187b:	lods   eax,DWORD PTR ds:[esi]
  41187c:	cmp    eax,0x77f43e2f
  411881:	xchg   ecx,eax
  411882:	xchg   esp,eax
  411883:	arpl   WORD PTR [edi+eiz*1+0x632f6851],sp
  41188a:	pop    ds
  41188b:	call   0x718a:0xfa39a389
  411892:	jle    0x411821
  411894:	gs repnz pop ecx
  411897:	pushf  
  411898:	xchg   ebp,eax
  411899:	xchg   ebp,eax
  41189a:	add    eax,0xd6449cb7
  41189f:	adc    edi,0x3e
  4118a2:	add    al,0x44
  4118a4:	xchg   edi,eax
  4118a5:	push   ss
  4118a6:	mov    esi,0x4500ecbd
  4118ab:	jle    0x4118ff
  4118ad:	fld    DWORD PTR [esi]
  4118af:	scas   al,BYTE PTR es:[edi]
  4118b0:	xchg   edx,eax
  4118b1:	and    DWORD PTR [ebp+0x30ae95a6],edx
  4118b7:	mov    edx,0xf0ca34d3
  4118bc:	cld    
  4118bd:	ret    0x51c0
  4118c0:	xchg   esi,eax
  4118c1:	dec    ecx
  4118c2:	xor    BYTE PTR [edi],dl
  4118c4:	cmp    eax,0x3afd0e57
  4118c9:	add    eax,0x2c4db5b
  4118ce:	retf   0xb29
  4118d1:	sub    edi,DWORD PTR [ecx+0x5069b709]
  4118d7:	and    BYTE PTR [esi],bh
  4118d9:	jp     0x411919
  4118db:	sbb    bh,ah
  4118dd:	pusha  
  4118de:	add    BYTE PTR [ebp-0x65],cl
  4118e1:	dec    eax
  4118e2:	ins    BYTE PTR es:[edi],dx
  4118e3:	mov    ecx,0xfabe6dfd
  4118e8:	cld    
  4118e9:	js     0x4118cb
  4118eb:	mov    ebp,0xdf0c491c
  4118f0:	adc    eax,0x212390d7
  4118f5:	into   
  4118f6:	push   esi
  4118f7:	add    al,0xa
  4118f9:	ror    BYTE PTR [ecx-0x3f],0xd1
  4118fd:	out    dx,eax
  4118fe:	add    eax,0x4faa5a98
  411903:	loope  0x411929
  411905:	and    ecx,esp
  411907:	(bad)  
  411908:	popa   
  411909:	inc    ecx
  41190a:	dec    edx
  41190b:	add    eax,0x373db2cd
  411910:	add    DWORD PTR fs:[ebx+0x34f22ab2],ebx
  411917:	inc    ebx
  411918:	lea    ecx,[edx+0x3453ef27]
  41191e:	aad    0x8e
  411920:	cdq    
  411921:	and    al,0xfe
  411923:	inc    esp
  411924:	mul    DWORD PTR [ecx-0x532f8fe7]
  41192a:	shr    BYTE PTR [ebp+0x3d],0x1b
  41192e:	mov    edx,0x86b02bab
  411933:	push   edx
  411934:	fistp  QWORD PTR [esi-0x59]
  411937:	xor    BYTE PTR [esi],dh
  411939:	int3   
  41193a:	jp     0x41190a
  41193c:	out    0xf1,eax
  41193e:	inc    eax
  41193f:	ficom  DWORD PTR [edi+edi*8]
  411942:	ret    
  411943:	push   esp
  411944:	xchg   ebx,eax
  411945:	add    al,0x45
  411947:	mov    edi,DWORD PTR ds:0xe27f2e24
  41194d:	loop   0x411981
  41194f:	pop    esp
  411950:	popa   
  411951:	xor    al,0x62
  411953:	aaa    
  411954:	imul   eax,DWORD PTR [ecx],0x1d67cad3
  41195a:	jg     0x411965
  41195c:	sbb    BYTE PTR [eax],bh
  41195e:	cmc    
  41195f:	xor    al,0xaa
  411961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411962:	sbb    esp,0x386ce3c1
  411968:	push   edi
  411969:	jns    0x4119b4
  41196b:	popf   
  41196c:	fnstsw WORD PTR [esi*8-0x3c6d105d]
  411973:	jle    0x4119bb
  411975:	push   es
  411976:	inc    ebx
  411977:	out    0x7c,al
  411979:	out    0x2e,eax
  41197b:	sbb    eax,0x6cb0ea55
  411980:	nop
  411981:	mov    ch,0xf1
  411983:	mov    eax,0x6e3aa760
  411988:	(bad)  
  411989:	jl     0x41192c
  41198b:	in     eax,dx
  41198c:	repnz cmp eax,DWORD PTR [edi]
  41198f:	ror    esi,cl
  411991:	rol    DWORD PTR [edi-0x5ff8095d],0xa2
  411998:	push   0xeb04c600
  41199d:	retf   
  41199e:	dec    esi
  41199f:	or     BYTE PTR [ebx],dl
  4119a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a2:	and    DWORD PTR [esi],esp
  4119a4:	jmp    0x5d28:0x37c45252
  4119ab:	push   ebp
  4119ac:	jne    0x411994
  4119ae:	and    dh,al
  4119b0:	cmp    dh,dl
  4119b2:	xchg   esi,eax
  4119b3:	(bad)  
  4119b4:	jmp    0x8d00:0xd03ba2f8
  4119bb:	fsub   DWORD PTR [eax-0x275549d5]
  4119c1:	clc    
  4119c2:	dec    ebp
  4119c3:	hlt    
  4119c4:	jae    0x411a01
  4119c6:	leave  
  4119c7:	je     0x4119ff
  4119c9:	and    BYTE PTR [ebp-0x53],dl
  4119cc:	push   ebp
  4119cd:	mov    cl,0x6c
  4119cf:	jmp    0x5b7e6721
  4119d4:	push   0xfeded162
  4119d9:	or     BYTE PTR [esi],al
  4119db:	and    eax,0xae8f7833
  4119e0:	fnstsw WORD PTR [ecx-0x14]
  4119e3:	inc    ebp
  4119e4:	add    BYTE PTR [esi],bh
  4119e6:	fimul  DWORD PTR [edx]
  4119e8:	or     BYTE PTR [ecx-0x63],ah
  4119eb:	push   ds
  4119ec:	fcomi  st,st(7)
  4119ee:	outs   dx,DWORD PTR ds:[esi]
  4119ef:	mov    BYTE PTR [ebx+eiz*1-0x1b],ah
  4119f3:	adc    bh,BYTE PTR [eax]
  4119f5:	or     dh,ah
  4119f7:	mov    ah,0xb9
  4119f9:	std    
  4119fa:	fmul   DWORD PTR [ecx]
  4119fc:	stos   BYTE PTR es:[edi],al
  4119fd:	xchg   ecx,eax
  4119fe:	int3   
  4119ff:	stos   DWORD PTR es:[edi],eax
  411a00:	fsub   QWORD PTR [eax-0x63]
  411a03:	je     0x411a64
  411a05:	add    dl,ah
  411a07:	sub    al,0x66
  411a09:	jecxz  0x4119d5
  411a0b:	push   eax
  411a0c:	and    BYTE PTR [edi],bl
  411a0e:	lods   al,BYTE PTR ds:[esi]
  411a0f:	neg    BYTE PTR [edx]
  411a11:	jb     0x411a63
  411a13:	pop    esi
  411a14:	pop    es
  411a15:	cwde   
  411a16:	cmp    al,0x17
  411a18:	into   
  411a19:	jp     0x411a03
  411a1b:	push   edx
  411a1c:	repz int 0x6
  411a1f:	pushf  
  411a20:	adc    eax,0xa20b4895
  411a25:	div    edi
  411a27:	test   al,0x46
  411a29:	xor    BYTE PTR [esi],0xd2
  411a2c:	push   eax
  411a2d:	hlt    
  411a2e:	clc    
  411a2f:	je     0x411a5d
  411a31:	or     BYTE PTR [ebp+edx*4-0x47],0x24
  411a36:	lods   eax,DWORD PTR ds:[esi]
  411a37:	add    BYTE PTR [ecx+0x5ff9e697],dl
  411a3d:	outs   dx,DWORD PTR ds:[esi]
  411a3e:	xchg   DWORD PTR [edi],ebp
  411a40:	outs   dx,BYTE PTR ds:[esi]
  411a41:	mov    ebx,0x5c311964
  411a46:	xchg   edx,eax
  411a47:	(bad)  
  411a49:	xchg   ebx,eax
  411a4a:	aam    0xea
  411a4c:	adc    BYTE PTR [ebx-0x3],bl
  411a4f:	push   esp
  411a50:	cmp    eax,0x5aa9fc99
  411a55:	pop    edi
  411a56:	(bad)  
  411a57:	push   eax
  411a58:	test   DWORD PTR [ecx],0xbdd7a680
  411a5e:	adc    DWORD PTR [esi+ecx*2],ebx
  411a61:	add    al,0x81
  411a63:	jnp    0x411a3b
  411a65:	pop    esi
  411a66:	cs push ecx
  411a68:	stc    
  411a69:	arpl   WORD PTR [ebp-0x1a],dx
  411a6c:	ja     0x411a5f
  411a6e:	bound  ecx,QWORD PTR [ebx+ebp*1-0x30]
  411a72:	data16 test al,0xfb
  411a75:	enter  0xbb31,0xd7
  411a79:	jmp    0x358c:0x20f782eb
  411a80:	sbb    DWORD PTR [eax],0x3dc7f5f4
  411a86:	sbb    al,0x8f
  411a88:	adc    DWORD PTR ds:0xdb7510ca,0x802ac183
  411a92:	xor    al,0x31
  411a94:	or     dh,BYTE PTR [edx-0x51]
  411a97:	mov    eax,0x39abf08d
  411a9c:	jns    0x411ac5
  411a9e:	push   ds
  411a9f:	or     eax,0x4d4fbe3
  411aa4:	mov    ebp,0x44a30576
  411aa9:	pop    ebx
  411aaa:	mov    dh,0x36
  411aac:	or     eax,0x226361fa
  411ab1:	arpl   WORD PTR [edx+0x481279c2],sp
  411ab7:	inc    BYTE PTR [ebx-0x12]
  411aba:	or     BYTE PTR [eax],0x89
  411abd:	mov    ds:0xd286b746,al
  411ac2:	xor    ah,ah
  411ac4:	cmp    al,0x55
  411ac6:	bnd jg 0x411b01
  411ac9:	test   al,0x2
  411acb:	xor    DWORD PTR [ecx+eax*4],ecx
  411ace:	ret    
  411acf:	nop
  411ad0:	jnp    0x411b2d
  411ad2:	jns    0x411a55
  411ad4:	inc    ebp
  411ad5:	mov    DWORD PTR [ebx-0x24ab88e1],0xbbbe1057
  411adf:	xor    al,0xfa
  411ae1:	fld    QWORD PTR [eax]
  411ae3:	mov    esi,0x59f1ee01
  411ae8:	jae    0x411b60
  411aea:	lods   eax,DWORD PTR ds:[esi]
  411aeb:	or     al,BYTE PTR [ebp-0x1b5fa9b]
  411af1:	adc    DWORD PTR ds:0x78b379e7,0xde8ba12c
  411afb:	jb     0x411ae4
  411afd:	mov    BYTE PTR [eax-0x493941ac],bl
  411b03:	sub    bl,BYTE PTR [edx+0x5e17c546]
  411b09:	ins    BYTE PTR es:[edi],dx
  411b0a:	pop    ecx
  411b0b:	rcr    DWORD PTR cs:[ebx+0x547a88b6],cl
  411b12:	xchg   edx,eax
  411b13:	out    0x12,al
  411b15:	pop    ecx
  411b16:	hlt    
  411b17:	adc    dl,BYTE PTR [esi+0x45]
  411b1a:	sub    al,0xca
  411b1c:	lods   eax,DWORD PTR ds:[esi]
  411b1d:	adc    DWORD PTR [ebp-0x4c],edi
  411b20:	lods   eax,DWORD PTR ds:[esi]
  411b21:	lods   eax,DWORD PTR ds:[esi]
  411b22:	cdq    
  411b23:	jecxz  0x411ab4
  411b25:	mov    DWORD PTR [ecx+0x60],0x480a8cef
  411b2c:	lahf   
  411b2d:	push   esi
  411b2e:	mov    edx,0x3e8e8e7
  411b33:	mov    esp,DWORD PTR [esi+ecx*8+0xc]
  411b37:	cwde   
  411b38:	and    esp,DWORD PTR [ebp+0x489fff46]
  411b3e:	pop    ds
  411b3f:	pop    edi
  411b40:	mov    ecx,0xf3d685b9
  411b45:	xor    edi,ebx
  411b47:	inc    eax
  411b48:	jl     0x411b64
  411b4a:	into   
  411b4b:	fiadd  WORD PTR [edx]
  411b4d:	enter  0x7f1e,0xd6
  411b51:	mov    ebp,0xbf719fbd
  411b56:	or     DWORD PTR [esi-0x29ab0e9e],ebp
  411b5c:	adc    ch,dl
  411b5e:	mov    ah,0x69
  411b60:	js     0x411b25
  411b62:	sti    
  411b63:	mov    ebp,0xa6b9f4e0
  411b68:	ins    DWORD PTR es:[edi],dx
  411b69:	sar    DWORD PTR [ebp+0x5a60bba8],cl
  411b6f:	imul   edx,DWORD PTR [eax-0x44ce7b4c],0xffffff8f
  411b76:	jne    0x411ba4
  411b78:	push   0xfffffffd
  411b7a:	aaa    
  411b7b:	sbb    DWORD PTR [ebx],esi
  411b7d:	jmp    0x80b4:0xab437be6
  411b84:	mov    al,0xbe
  411b86:	and    esp,DWORD PTR [edi-0x3e]
  411b89:	add    BYTE PTR [ebp+edx*4-0x53],cl
  411b8d:	mov    ecx,0xf953f56a
  411b92:	lea    edi,[esi+ecx*1]
  411b95:	mov    edx,0x5415d51f
  411b9a:	add    DWORD PTR [ecx],ecx
  411b9c:	call   0x7d8ecd3c
  411ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba2:	xor    eax,0x247d0d9b
  411ba7:	pop    esp
  411ba8:	sbb    esi,ebx
  411baa:	pop    es
  411bab:	shr    ebx,cl
  411bad:	jne    0x411b95
  411baf:	imul   edx,DWORD PTR [ebx+0x618c1382],0x789a3c20
  411bb9:	push   cs
  411bba:	mov    bh,0xa
  411bbc:	inc    DWORD PTR [eax]
  411bbe:	sub    bl,ah
  411bc0:	pop    esp
  411bc1:	dec    esi
  411bc2:	in     al,0xcb
  411bc4:	inc    ecx
  411bc5:	fldcw  WORD PTR [edi-0x5cfb7ff4]
  411bcb:	mov    al,ds:0x87b93457
  411bd0:	xchg   edi,eax
  411bd1:	cmp    ebp,edi
  411bd3:	pop    ecx
  411bd4:	mov    edi,0x932f9f15
  411bd9:	dec    ebp
  411bda:	jo     0x411c12
  411bdc:	fiadd  DWORD PTR cs:[edi+0x4c]
  411be0:	bound  edi,QWORD PTR [edi-0x10dfcd26]
  411be6:	mov    eax,0x443699cb
  411beb:	loop   0x411bef
  411bed:	fcmovnb st,st(6)
  411bef:	inc    esp
  411bf0:	push   ecx
  411bf1:	stos   BYTE PTR es:[edi],al
  411bf2:	sahf   
  411bf3:	pop    ecx
  411bf4:	or     eax,0xcdfd509b
  411bf9:	scas   eax,DWORD PTR es:[edi]
  411bfa:	pop    ebx
  411bfb:	or     BYTE PTR [esp+esi*4],bl
  411bfe:	adc    ebx,DWORD PTR [ebx]
  411c00:	ret    
  411c01:	mov    eax,0xca40b2d4
  411c06:	daa    
  411c07:	mov    esi,DWORD PTR [edi-0x27d8b263]
  411c0d:	ds ins DWORD PTR es:[edi],dx
  411c0f:	mov    eax,0x2f99e294
  411c14:	fistp  DWORD PTR [edi+eax*8]
  411c17:	jmp    0xd0831ef2
  411c1c:	psubw  mm7,mm6
  411c1f:	rcl    BYTE PTR [edx],0x94
  411c22:	test   al,0xff
  411c24:	jnp    0x411c87
  411c26:	mov    ds:0xc61b9105,eax
  411c2b:	mov    WORD PTR [ebp+0x1098e26e],?
  411c31:	retf   
  411c32:	xchg   ebp,eax
  411c33:	mov    ds:0x39b7edfd,al
  411c38:	fiadd  DWORD PTR [esi+0x70]
  411c3b:	inc    edx
  411c3c:	push   ebx
  411c3d:	xor    DWORD PTR [edi],0xffffffeb
  411c40:	mov    BYTE PTR [esi],dh
  411c42:	inc    ebp
  411c43:	int    0x71
  411c45:	hlt    
  411c46:	arpl   WORD PTR [ebx+eax*4+0x20],sp
  411c4a:	pop    ebp
  411c4b:	mov    ah,0x52
  411c4d:	bnd jns 0x411c1c
  411c50:	ds inc eax
  411c52:	mov    BYTE PTR [esi-0x6d],ch
  411c55:	sbb    eax,0x637e1b85
  411c5a:	xchg   ebp,eax
  411c5b:	aaa    
  411c5c:	jge    0x411cdc
  411c5e:	fwait
  411c5f:	dec    esp
  411c60:	dec    edx
  411c61:	adc    BYTE PTR [esi],bl
  411c63:	mov    ds:0xa24ae0e7,eax
  411c68:	and    dh,al
  411c6a:	sbb    DWORD PTR [ecx-0x382e700d],esi
  411c70:	mov    ch,0xc3
  411c72:	xchg   esi,eax
  411c73:	out    dx,al
  411c74:	inc    esp
  411c75:	jmp    0xab7a:0x1d7ee8f9
  411c7c:	or     esi,DWORD PTR [edx+edi*2-0x15]
  411c80:	(bad)  
  411c81:	jl     0x411c23
  411c83:	and    BYTE PTR [ecx-0x1034e136],dh
  411c89:	jne    0x411ca6
  411c8b:	cs pusha 
  411c8d:	cli    
  411c8e:	test   al,0xd
  411c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c91:	inc    ebp
  411c92:	xchg   BYTE PTR [ebp-0x34],bh
  411c95:	inc    edx
  411c96:	ins    DWORD PTR es:[edi],dx
  411c97:	arpl   ax,si
  411c99:	cmp    ebp,DWORD PTR [ecx]
  411c9b:	vpor   xmm3,xmm6,xmm5
  411c9f:	jecxz  0x411c56
  411ca1:	aad    0x95
  411ca3:	inc    edi
  411ca4:	adc    al,0x6b
  411ca6:	int    0x2e
  411ca8:	shl    DWORD PTR [ebx],1
  411caa:	sbb    eax,0x2f5e9105
  411caf:	or     edi,DWORD PTR ds:[edx+ebp*1]
  411cb3:	jo     0x411c9c
  411cb5:	out    0x63,al
  411cb7:	mov    edi,ebp
  411cb9:	inc    esi
  411cba:	call   0xbf3e395a
  411cbf:	sbb    DWORD PTR ds:0x167d125d,edx
  411cc5:	push   cs
  411cc6:	in     al,dx
  411cc7:	cmp    al,0xa5
  411cc9:	arpl   WORD PTR [edx+0x74],bx
  411ccc:	cmp    eax,0xf4f8c433
  411cd1:	cmp    esp,DWORD PTR [esi+edi*2-0x2f]
  411cd5:	out    dx,eax
  411cd6:	imul   ebx,DWORD PTR [ebx],0x2cd32858
  411cdc:	daa    
  411cdd:	icebp  
  411cde:	add    BYTE PTR cs:[edx+ebx*4-0x13aa3929],bh
  411ce6:	cmp    bl,ch
  411ce8:	leave  
  411ce9:	lea    ecx,[eax]
  411ceb:	push   cs
  411cec:	jo     0x411c88
  411cee:	icebp  
  411cef:	jb     0x411d51
  411cf1:	ins    BYTE PTR es:[edi],dx
  411cf2:	jmp    0x411cbf
  411cf4:	sbb    edx,DWORD PTR [ebx]
  411cf6:	sbb    al,0x3e
  411cf8:	lock ds fwait
  411cfb:	stos   BYTE PTR es:[edi],al
  411cfc:	push   eax
  411cfd:	push   ebx
  411cfe:	hlt    
  411cff:	add    al,0x0
  411d01:	xchg   ebx,eax
  411d02:	ror    BYTE PTR es:[ebp-0x59f54f31],cl
  411d09:	ret    
  411d0a:	daa    
  411d0b:	test   ebx,ebp
  411d0d:	jb     0x411ce1
  411d0f:	jp     0x411ce4
  411d11:	das    
  411d12:	repz jmp 0x4ba6:0x2f5b51b8
  411d1a:	out    0xc,al
  411d1c:	sbb    ch,bl
  411d1e:	dec    ebx
  411d1f:	or     ch,BYTE PTR [edi+0x27b08adb]
  411d25:	loopne 0x411cab
  411d27:	mov    bh,0xe9
  411d29:	ret    0x27dd
  411d2c:	xlat   BYTE PTR ds:[ebx]
  411d2d:	jne    0x411cec
  411d2f:	add    BYTE PTR [ecx+0x40b2b67f],bl
  411d35:	pop    ecx
  411d36:	push   esp
  411d37:	mov    edi,0xea15833e
  411d3c:	fcmovbe st,st(2)
  411d3e:	jl     0x411d33
  411d40:	ror    DWORD PTR [eax-0x368da317],1
  411d46:	jle    0x411d02
  411d48:	add    al,0x6
  411d4a:	push   edx
  411d4b:	adc    al,0xd4
  411d4d:	xlat   BYTE PTR ds:[ebx]
  411d4e:	sahf   
  411d4f:	rcr    BYTE PTR [ecx+edi*8],cl
  411d52:	pop    es
  411d53:	out    dx,eax
  411d54:	int    0x6c
  411d56:	mov    al,0x7
  411d58:	js     0x411db5
  411d5a:	loope  0x411d99
  411d5c:	stos   DWORD PTR es:[edi],eax
  411d5d:	push   esi
  411d5e:	rcr    BYTE PTR [ebx+0x18],0xe8
  411d62:	xor    DWORD PTR [edx],0xc2569c9
  411d68:	or     DWORD PTR [eax+0x47],ebp
  411d6b:	fst    DWORD PTR [ebp-0x63]
  411d6e:	jg     0x411d14
  411d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d71:	dec    esi
  411d72:	aas    
  411d73:	ja     0x411dd9
  411d75:	add    dh,bl
  411d77:	adc    DWORD PTR [esi+0x26c6fd85],ebp
  411d7d:	jno    0x411d54
  411d7f:	aaa    
  411d80:	sbb    esp,DWORD PTR [ebx+0x3243a4da]
  411d86:	iret   
  411d87:	pop    ds
  411d88:	leave  
  411d89:	pusha  
  411d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8b:	pinsrw mm3,ebx,0x24
  411d8f:	popa   
  411d90:	cld    
  411d91:	sbb    dh,BYTE PTR [eax-0x10]
  411d94:	dec    esi
  411d95:	mov    dh,BYTE PTR [ecx-0x1c97a2c7]
  411d9b:	fld    TBYTE PTR [ebx-0x3ad7f09]
  411da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411da2:	cld    
  411da3:	xchg   ebp,eax
  411da4:	mov    bh,0xcf
  411da6:	dec    esi
  411da7:	sbb    edi,DWORD PTR [eax]
  411da9:	pusha  
  411daa:	or     ebp,ecx
  411dac:	das    
  411dad:	adc    al,0xfc
  411daf:	cmp    BYTE PTR [edx],0x8c
  411db2:	add    bh,BYTE PTR [esi+0xef4a8d1]
  411db8:	cs pop edi
  411dba:	and    bl,al
  411dbc:	xlat   BYTE PTR ds:[ebx]
  411dbd:	and    al,0x4
  411dbf:	mov    gs,WORD PTR [ecx]
  411dc1:	mov    ds:0x40429407,eax
  411dc6:	mov    BYTE PTR [ebx+0x4c63c12b],ah
  411dcc:	cmp    eax,0xfc5b5a73
  411dd1:	pop    esi
  411dd2:	(bad)  
  411dd3:	(bad)  [ecx-0x1cbd6eff]
  411dd9:	fistp  WORD PTR [ebx]
  411ddb:	leave  
  411ddc:	push   cs
  411ddd:	lahf   
  411dde:	pop    ss
  411ddf:	and    al,0xeb
  411de1:	retf   0xf198
  411de4:	cmp    ebp,DWORD PTR [ecx]
  411de6:	or     BYTE PTR [esi+edi*8-0x4c],ah
  411dea:	sub    esp,DWORD PTR [edx+0x5bf95b6a]
  411df0:	sub    BYTE PTR [ecx+edx*2-0x4e],0xca
  411df5:	dec    ebx
  411df6:	adc    BYTE PTR [esi+0x5ed33d7c],bl
  411dfc:	pusha  
  411dfd:	inc    ebx
  411dfe:	loop   0x411e1a
  411e00:	daa    
  411e01:	nop
  411e02:	gs js  0x411e3b
  411e05:	mov    dl,0x4c
  411e07:	sti    
  411e08:	mov    BYTE PTR [edi-0x217c4254],al
  411e0e:	pop    ss
  411e0f:	cmp    bl,BYTE PTR [edx-0x12]
  411e12:	fadd   st,st(6)
  411e14:	pop    ds
  411e15:	loope  0x411e6c
  411e17:	jecxz  0x411dc2
  411e19:	sub    DWORD PTR [eax-0x1a73e804],eax
  411e1f:	fisttp QWORD PTR [edx-0x175b9144]
  411e25:	mov    ds:0x88f64faf,eax
  411e2a:	or     eax,0xd969acd7
  411e2f:	cmp    dh,bh
  411e31:	adc    BYTE PTR [eax],ah
  411e33:	repnz push 0x7b58f22a
  411e39:	push   ss
  411e3a:	cs and al,0x5c
  411e3d:	loop   0x411e12
  411e3f:	inc    esi
  411e40:	jecxz  0x411e21
  411e42:	xor    BYTE PTR [edx-0x2161d4c9],0x5f
  411e49:	push   ebx
  411e4a:	mov    ebx,0xac2b6fb0
  411e4f:	cmc    
  411e50:	lock xlat BYTE PTR ds:[ebx]
  411e52:	mov    cl,0xf4
  411e54:	arpl   WORD PTR [ebp+0x4a61f4f8],sp
  411e5a:	js     0x411eb0
  411e5c:	xchg   edx,eax
  411e5d:	or     al,0xac
  411e5f:	cdq    
  411e60:	mov    ds:0x7c44a1e3,al
  411e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e66:	inc    ebp
  411e67:	pusha  
  411e68:	mov    esp,0xd76064a
  411e6d:	xchg   ebx,eax
  411e6e:	add    dl,0x6c
  411e71:	enter  0x29ed,0xa1
  411e75:	inc    esi
  411e76:	pop    edi
  411e77:	jno    0x411ea0
  411e79:	test   DWORD PTR [eax-0x37d2eb90],0x59fb43a5
  411e83:	cwde   
  411e84:	inc    esi
  411e85:	jp     0x411ed0
  411e87:	sbb    BYTE PTR [ecx+0x5557864e],0x56
  411e8e:	ds stos DWORD PTR es:[edi],eax
  411e90:	and    bl,ah
  411e92:	xlat   BYTE PTR ds:[ebx]
  411e93:	pop    ecx
  411e94:	not    BYTE PTR [ebp-0x44]
  411e97:	loopne 0x411ea9
  411e99:	jge    0x411ef7
  411e9b:	in     al,dx
  411e9c:	xor    DWORD PTR [ecx+0x91097f3],ecx
  411ea2:	inc    ebp
  411ea3:	jmp    0xc0ac:0x8a176db8
  411eaa:	lods   eax,DWORD PTR ds:[esi]
  411eab:	push   cs
  411eac:	iret   
  411ead:	inc    ebp
  411eae:	cmp    eax,0x7905e53b
  411eb3:	jl     0x411e3f
  411eb5:	stos   BYTE PTR es:[edi],al
  411eb6:	test   DWORD PTR [edi],eax
  411eb8:	jmp    0x411f2d
  411eba:	mov    ds:0x14a32890,al
  411ebf:	mov    ecx,DWORD PTR [edx+0x2d3ad207]
  411ec5:	pop    ebx
  411ec6:	lods   eax,DWORD PTR ds:[esi]
  411ec7:	adc    BYTE PTR [edi+0x570f5e4],ah
  411ecd:	dec    edi
  411ece:	mov    al,0x67
  411ed0:	retf   
  411ed1:	dec    esp
  411ed2:	push   edi
  411ed3:	dec    ecx
  411ed4:	call   0x7dd:0xdc3e596d
  411edb:	andps  xmm2,xmm3
  411ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411edf:	pop    ebx
  411ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ee1:	or     edx,edx
  411ee3:	dec    edx
  411ee4:	fnsave [edi+eax*2+0x5bab0fdc]
  411eeb:	hlt    
  411eec:	mov    dh,0xc0
  411eee:	aam    0x6c
  411ef0:	loopne 0x411ed2
  411ef2:	iret   
  411ef3:	mov    eax,ds:0xb23c3b28
  411ef8:	adc    eax,0x2c471bf3
  411efd:	dec    esi
  411efe:	pusha  
  411eff:	mov    cs,WORD PTR [ecx+ebp*8-0x4cbc09f3]
  411f06:	mov    ds:0xcaa1c70b,eax
  411f0b:	ret    0xf1d0
  411f0e:	iret   
  411f0f:	or     DWORD PTR [edi+ecx*1],esp
  411f12:	mov    esp,0xa027014a
  411f17:	sbb    BYTE PTR [esp+edx*4],cl
  411f1a:	xlat   BYTE PTR ds:[ebx]
  411f1b:	jo     0x411ed7
  411f1d:	adc    eax,0x88766c26
  411f22:	push   edi
  411f23:	fidiv  DWORD PTR ds:0xab6637df
  411f29:	mov    sp,0xe784
  411f2d:	dec    esp
  411f2e:	lods   al,BYTE PTR ds:[esi]
  411f2f:	and    al,0xfc
  411f31:	frstor [ebx-0x4a621ba3]
  411f37:	das    
  411f38:	jle    0x411f80
  411f3a:	daa    
  411f3b:	cmp    eax,0x6f80017f
  411f40:	leave  
  411f41:	in     al,dx
  411f42:	imul   ebx,DWORD PTR [ecx+0x51],0xe8600e74
  411f49:	sbb    ch,BYTE PTR [ebp+eax*1-0x4]
  411f4d:	add    eax,0x82406ba1
  411f52:	mov    esi,0xbb59fbe5
  411f57:	inc    ebx
  411f58:	mov    cl,0x4a
  411f5a:	add    cl,BYTE PTR [edx]
  411f5c:	jle    0x411fab
  411f5e:	ror    DWORD PTR [edx+0x4e],1
  411f61:	inc    ecx
  411f62:	add    ecx,DWORD PTR [ebx-0x60]
  411f65:	jb     0x411f20
  411f67:	push   eax
  411f68:	cmp    cl,BYTE PTR [eax]
  411f6a:	int    0xac
  411f6c:	int    0xc8
  411f6e:	retf   0x8e72
  411f71:	and    BYTE PTR [eax+0x6a],bl
  411f74:	mov    ch,0xf6
  411f76:	lea    esi,[edx]
  411f78:	mov    DWORD PTR [edx],ecx
  411f7a:	xor    eax,0x9f431c7e
  411f7f:	(bad)  
  411f80:	retf   
  411f81:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411f83:	repz or dh,BYTE PTR [eax]
  411f86:	fisttp DWORD PTR [esi]
  411f88:	push   0xffffff9f
  411f8a:	out    dx,eax
  411f8b:	push   ecx
  411f8c:	lock mov ah,0x86
  411f8f:	mov    edx,DWORD PTR [esi+ebx*8]
  411f92:	cmp    DWORD PTR [eax+esi*1],ecx
  411f95:	push   ebx
  411f96:	push   ds
  411f97:	push   cs
  411f98:	mov    al,ds:0x796b14be
  411f9d:	push   es
  411f9e:	loopne 0x411fb0
  411fa0:	cmp    BYTE PTR [eax-0x6f922d56],bl
  411fa6:	push   eax
  411fa7:	retf   0xb856
  411faa:	add    dh,ah
  411fac:	jns    0x411fd0
  411fae:	or     ch,BYTE PTR [ebx+0x52]
  411fb1:	sub    eax,0xb4c4a5a5
  411fb6:	pop    eax
  411fb7:	rol    DWORD PTR [edi+0x11],cl
  411fba:	mov    al,ds:0xbb937c37
  411fbf:	jne    0x412000
  411fc1:	sub    al,0x95
  411fc3:	push   edx
  411fc4:	cmp    eax,DWORD PTR [eax-0x71]
  411fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc8:	pop    ss
  411fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fca:	xor    edx,DWORD PTR ds:0xdf68b02f
  411fd0:	push   ebp
  411fd1:	sbb    DWORD PTR [ecx-0x4dcfc3da],esi
  411fd7:	xor    BYTE PTR [ecx],0x9
  411fda:	ficomp WORD PTR ds:0x9cc91004
  411fe0:	push   0xbaed5aa1
  411fe5:	adc    DWORD PTR [esi+0x15],ebp
  411fe8:	mov    ebx,0x86042b05
  411fed:	push   ds
  411fee:	enter  0x9c26,0x8e
  411ff2:	(bad)
  411ff5:	shl    ah,cl
  411ff7:	addr16 std 
  411ff9:	and    BYTE PTR ds:0xafd863d8,cl
  411fff:	int    0x9d
  412001:	push   0x15
  412003:	outs   dx,BYTE PTR ds:[esi]
  412004:	loope  0x411ffb
  412006:	outs   dx,DWORD PTR ds:[esi]
  412007:	cmp    eax,0xa5eba71a
  41200c:	mov    esp,DWORD PTR [ebx]
  41200e:	(bad)  
  41200f:	outs   dx,BYTE PTR ds:[esi]
  412010:	sub    DWORD PTR [ecx-0x67b1fa85],edx
  412016:	cld    
  412017:	adc    al,0x4c
  412019:	add    DWORD PTR [ecx+ecx*4],esp
  41201c:	push   esp
  41201d:	rcl    BYTE PTR [edx],0xa0
  412020:	add    al,0x62
  412022:	xor    BYTE PTR [eax+ebp*2],ch
  412025:	popa   
  412026:	or     ah,BYTE PTR [edx+0x1d]
  412029:	inc    edx
  41202a:	pop    ebp
  41202b:	jb     0x412014
  41202d:	stos   DWORD PTR es:[edi],eax
  41202e:	adc    al,0x47
  412030:	(bad)  
  412032:	push   esp
  412033:	mov    ecx,DWORD PTR [edx-0x58d94937]
  412039:	clc    
  41203a:	or     DWORD PTR [eax],edi
  41203c:	add    al,0xab
  41203e:	xchg   ch,dh
  412040:	ret    0xd99f
  412043:	jno    0x412060
  412045:	inc    ebx
  412046:	cmp    al,0x41
  412048:	ins    BYTE PTR es:[edi],dx
  412049:	nop
  41204a:	mov    ?,WORD PTR [ecx+ebp*4-0x56]
  41204e:	int3   
  41204f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412050:	pop    ebp
  412051:	(bad)  
  412052:	(bad)
  412056:	test   eax,0x606b262
  41205b:	mov    esp,0x436c46a4
  412060:	gs dec edi
  412062:	(bad)  
  412064:	mov    eax,0xf33e001a
  412069:	repnz push cs
  41206b:	push   0x38738afd
  412070:	iret   
  412071:	call   FWORD PTR [ebp-0x1e]
  412074:	or     ah,ch
  412076:	sti    
  412077:	mov    eax,0xf0b9a0a3
  41207c:	jne    0x412086
  41207e:	icebp  
  41207f:	fucomi st,st(0)
  412081:	mov    dh,0x5f
  412083:	sahf   
  412084:	mov    ebp,0xd0d79fe9
  412089:	arpl   WORD PTR [edx-0x95dd23e],di
  41208f:	in     al,dx
  412090:	fdiv   QWORD PTR [edx-0x520c6f10]
  412096:	adc    BYTE PTR [ebp+0x7f],dh
  412099:	or     bl,ch
  41209b:	pop    ds
  41209c:	sub    esi,edx
  41209e:	in     eax,dx
  41209f:	pop    esp
  4120a0:	popa   
  4120a1:	imul   ebx,DWORD PTR [ebp-0x2c],0x8
  4120a5:	jae    0x4120dc
  4120a7:	xchg   esp,eax
  4120a8:	or     bl,BYTE PTR [ebp+ecx*4-0x69]
  4120ac:	xchg   edx,eax
  4120ad:	js     0x412105
  4120af:	fistp  WORD PTR [ebx+edi*8-0x71b3e6e2]
  4120b6:	(bad)  
  4120b7:	scas   al,BYTE PTR es:[edi]
  4120b8:	mov    ds:0x11726e82,eax
  4120bd:	aas    
  4120be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120bf:	sbb    al,0x3c
  4120c1:	mov    eax,ds:0xc0e1ac56
  4120c6:	aam    0xa3
  4120c8:	xchg   esi,eax
  4120c9:	arpl   WORD PTR [esi],bx
  4120cb:	ror    ah,cl
  4120cd:	pop    eax
  4120ce:	(bad)  
  4120d2:	sub    cl,BYTE PTR [eax+eax*2+0x6ffa9362]
  4120d9:	xor    eax,0x9361e260
  4120de:	mov    eax,0xf7dbf38
  4120e3:	sub    BYTE PTR [esi+ebx*4+0x8],0x71
  4120e8:	mov    edx,0x5f759544
  4120ed:	das    
  4120ee:	loope  0x4120d3
  4120f0:	jne    0x4120fd
  4120f2:	aam    0x8d
  4120f4:	outs   dx,DWORD PTR ds:[esi]
  4120f5:	xor    eax,0xf1448a59
  4120fa:	outs   dx,DWORD PTR ds:[esi]
  4120fb:	inc    esi
  4120fc:	clc    
  4120fd:	pop    ebp
  4120fe:	mov    DWORD PTR ds:0x22fefc26,edx
  412104:	mov    ebp,0x779514ed
  412109:	in     al,0x3c
  41210b:	loope  0x4120f1
  41210d:	mov    eax,0xec6f4b13
  412112:	mov    BYTE PTR [edx+0x66ce6886],0x86
  412119:	jo     0x4120a6
  41211b:	dec    edx
  41211c:	push   esi
  41211d:	ja     0x412183
  41211f:	sub    DWORD PTR [ebp+0x15],eax
  412122:	cmp    al,0xd2
  412124:	push   edi
  412125:	(bad)  
  412127:	jge    0x41210d
  412129:	add    al,0x48
  41212b:	ds fwait
  41212d:	inc    edx
  41212e:	add    eax,0x25b13487
  412133:	cmp    bh,BYTE PTR [ebx]
  412135:	or     ecx,eax
  412137:	push   esi
  412138:	push   ss
  412139:	and    DWORD PTR [esi+0x7a7bd269],0x64
  412140:	rcl    BYTE PTR [ecx+0x2e3d8fe7],1
  412146:	cs inc esi
  412148:	lds    ebp,FWORD PTR [edi+ebx*4-0x641c6f0f]
  41214f:	retf   0x318d
  412152:	and    bl,ah
  412154:	bound  ebp,QWORD PTR [ecx-0x20bdf538]
  41215a:	or     ebp,DWORD PTR [ecx-0x5e]
  41215d:	fs mov ecx,0xf4262fc8
  412163:	fstp   QWORD PTR [edx]
  412165:	sahf   
  412166:	sahf   
  412167:	jmp    0x412167
  412169:	xor    eax,ebp
  41216b:	sub    cl,bh
  41216d:	push   ebx
  41216e:	imul   esp,DWORD PTR ds:0x1232ea8,0x9db48884
  412178:	cs add eax,0x51674237
  41217e:	mul    BYTE PTR [edx+0x2f1b85e5]
  412184:	pop    es
  412185:	mov    eax,ds:0x22ccce4f
  41218a:	push   esi
  41218b:	dec    esp
  41218c:	or     al,0xd0
  41218e:	dec    edi
  41218f:	loopne 0x412124
  412191:	or     DWORD PTR [ecx],ecx
  412193:	cmp    bh,BYTE PTR [ebx+0x58]
  412196:	arpl   WORD PTR [esi-0x29],bx
  412199:	les    ebp,FWORD PTR [ecx-0x43958415]
  41219f:	xor    ah,BYTE PTR [ebx]
  4121a1:	(bad)  
  4121a2:	pop    ecx
  4121a3:	dec    esp
  4121a4:	jns    0x4121ea
  4121a6:	pop    esi
  4121a7:	cs aam 0xc0
  4121aa:	pop    eax
  4121ab:	imul   ebp,ebx,0x3
  4121ae:	neg    DWORD PTR [esi]
  4121b0:	mov    ch,0x6f
  4121b2:	fmul   st(1),st
  4121b4:	jne    0x412191
  4121b6:	xor    esp,DWORD PTR [edi-0x7ee97c95]
  4121bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121bd:	shl    DWORD PTR [ebp-0x6f],0x49
  4121c1:	mov    al,0xbf
  4121c3:	fld    TBYTE PTR [ecx]
  4121c5:	push   ebx
  4121c6:	xchg   edi,eax
  4121c7:	xor    BYTE PTR [esi+0x488d7f85],0x34
  4121ce:	mov    bl,0xc4
  4121d0:	fwait
  4121d1:	xchg   esp,eax
  4121d2:	push   eax
  4121d3:	and    al,0x83
  4121d5:	xor    ebx,ebx
  4121d7:	retf   0x386d
  4121da:	es clc 
  4121dc:	add    DWORD PTR ds:0xcac4beda,0x4ca21aea
  4121e6:	jns    0x4121c8
  4121e8:	shl    DWORD PTR [ebx],cl
  4121ea:	imul   esp,DWORD PTR [ebp+0x25b6a218],0xffffffff
  4121f1:	jl     0x4121fd
  4121f3:	mov    ch,0xba
  4121f5:	dec    edx
  4121f6:	jo     0x41221f
  4121f8:	and    dh,ah
  4121fa:	cs jp  0x412218
  4121fd:	push   ebp
  4121fe:	or     esp,DWORD PTR ds:[ebx+ecx*1]
  412202:	jge    0x412206
  412204:	shl    BYTE PTR [edx-0x34b84cb7],0x65
  41220b:	pop    esp
  41220c:	xlat   BYTE PTR ds:[ebx]
  41220d:	hlt    
  41220e:	jle    0x4121d6
  412210:	push   ecx
  412211:	fisttp DWORD PTR fs:[edi+edx*1-0x3e]
  412216:	jb     0x412245
  412218:	or     ebx,esp
  41221a:	aaa    
  41221b:	aad    0x30
  41221d:	hlt    
  41221e:	icebp  
  41221f:	adc    DWORD PTR [eax-0x2c0f4480],eax
  412225:	jecxz  0x41223e
  412227:	push   esi
  412228:	loop   0x4122a7
  41222a:	jns    0x4122a4
  41222c:	xchg   esi,eax
  41222d:	daa    
  41222e:	pop    eax
  41222f:	or     al,0x85
  412231:	inc    eax
  412232:	add    eax,0x8c515be9
  412237:	sar    BYTE PTR [edi+0x19],0x75
  41223b:	fwait
  41223c:	iret   
  41223d:	dec    esp
  41223e:	popf   
  41223f:	cmp    eax,ebx
  412241:	jle    0x41221f
  412243:	mov    dh,0x57
  412245:	mov    BYTE PTR [ebx+0x4a],dh
  412248:	test   ebp,edi
  41224a:	dec    ecx
  41224b:	imul   edi,edi,0x17
  41224e:	mov    ebx,0x6844f7e2
  412253:	rcr    DWORD PTR ds:0x1456d33b,1
  412259:	sahf   
  41225a:	xchg   BYTE PTR [ebx+ecx*8-0x40],ah
  41225e:	mov    eax,0x3b146201
  412263:	dec    ecx
  412264:	into   
  412265:	std    
  412266:	adc    ecx,DWORD PTR [ebx-0x60]
  412269:	and    DWORD PTR [ecx+0x7b],edx
  41226c:	leave  
  41226d:	into   
  41226e:	jnp    0x412286
  412270:	inc    ebx
  412271:	icebp  
  412272:	mul    BYTE PTR [ecx+0x1f275b31]
  412278:	add    eax,0x5d7b1ecb
  41227d:	inc    edx
  41227e:	mov    edx,0x36da2b15
  412283:	pop    ecx
  412284:	jne    0x412293
  412286:	popf   
  412287:	outs   dx,DWORD PTR ds:[esi]
  412288:	sub    eax,0xfb85826
  41228d:	cli    
  41228e:	push   esi
  41228f:	gs popa 
  412291:	imul   ebp,DWORD PTR [edi+0x9],0xf82ee46
  412298:	es push ss
  41229a:	shr    BYTE PTR [edi-0x3],cl
  41229d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41229e:	arpl   WORD PTR [edi+0x3328fd46],si
  4122a4:	push   es
  4122a5:	ins    BYTE PTR es:[edi],dx
  4122a6:	jg     0x41228c
  4122a8:	lds    esp,FWORD PTR [edi-0x5bdcf45f]
  4122ae:	addr16 dec ebp
  4122b0:	(bad)  
  4122b1:	push   ebx
  4122b2:	sub    eax,0x34a24692
  4122b7:	fisub  WORD PTR [esi]
  4122b9:	add    edi,eax
  4122bb:	lods   al,BYTE PTR ds:[esi]
  4122bc:	xchg   ebx,eax
  4122bd:	xor    BYTE PTR [ebx-0x567ce308],0xe2
  4122c4:	inc    edi
  4122c5:	mov    ah,ah
  4122c7:	xor    ebx,DWORD PTR [edi+0x1f7599a1]
  4122cd:	iret   
  4122ce:	dec    eax
  4122cf:	cwde   
  4122d0:	jp     0x4122ea
  4122d2:	add    eax,DWORD PTR [ecx-0x22]
  4122d5:	add    BYTE PTR es:[ecx+0x7],ah
  4122d9:	inc    ecx
  4122da:	xor    al,0xf0
  4122dc:	jmp    0x9c979a44
  4122e1:	loop   0x41233c
  4122e3:	ficom  WORD PTR [edi+edi*1+0x49]
  4122e7:	mov    al,al
  4122e9:	adc    al,0x8f
  4122eb:	adc    edx,0xfffffffa
  4122ee:	imul   edi,DWORD PTR [ebp+0xc1482eb],0xec481dc7
  4122f8:	or     ch,BYTE PTR [esp+ebp*8+0x7392af6a]
  4122ff:	add    ebp,DWORD PTR [ebx-0x4913ad6c]
  412305:	fwait
  412306:	cmp    dl,BYTE PTR [ebx]
  412308:	dec    esp
  412309:	jo     0x412305
  41230b:	pop    edx
  41230c:	push   ebp
  41230d:	add    eax,0x858fa749
  412312:	popa   
  412313:	shr    BYTE PTR [eax],cl
  412315:	into   
  412316:	ins    BYTE PTR es:[edi],dx
  412317:	adc    DWORD PTR [ebx+0x263d74a],esp
  41231d:	xor    al,0x4e
  41231f:	sub    ah,0xe7
  412322:	int    0xfc
  412324:	into   
  412325:	inc    ebx
  412326:	dec    ebp
  412327:	(bad)  
  412328:	xchg   ebx,eax
  412329:	dec    edx
  41232a:	shl    cl,1
  41232c:	jle    0x41230c
  41232e:	out    dx,al
  41232f:	jnp    0x4122db
  412331:	scas   al,BYTE PTR es:[edi]
  412332:	dec    ebp
  412333:	jmp    0x412353
  412335:	repz pop ecx
  412337:	adc    eax,0xaad5f1e0
  41233c:	loope  0x4122dc
  41233e:	inc    ebx
  41233f:	jae    0x4122c4
  412341:	aam    0x62
  412343:	fdivr  DWORD PTR [ebx-0x62c821e]
  412349:	leave  
  41234a:	pmullw mm6,QWORD PTR [esi-0x53]
  41234e:	shl    dl,0xaf
  412351:	mul    DWORD PTR [edx+0x54]
  412354:	inc    esp
  412355:	jp     0x412385
  412357:	mov    BYTE PTR [eax-0x353a565],cl
  41235d:	pop    esi
  41235e:	imul   edi,esi,0xffffffe8
  412361:	loope  0x41231e
  412363:	stos   DWORD PTR es:[edi],eax
  412364:	cld    
  412365:	stos   BYTE PTR es:[edi],al
  412366:	shr    edx,0x14
  412369:	(bad)  [edi]
  41236b:	(bad)  
  41236c:	add    ah,BYTE PTR [esi-0x1f8f28ca]
  412372:	pop    edi
  412373:	aas    
  412374:	mov    ds:0xe10b4e59,al
  412379:	jl     0x412313
  41237b:	jno    0x4123f7
  41237d:	xchg   esp,eax
  41237e:	jo     0x412313
  412380:	andps  xmm3,xmm6
  412383:	or     eax,0x7331c043
  412388:	or     DWORD PTR [ebx],0xf7e4c39c
  41238e:	mov    al,0x31
  412390:	out    dx,al
  412391:	(bad)  
  412392:	mov    ch,0x38
  412394:	mov    eax,ds:0xbb88f488
  412399:	mov    ebx,0x14bb2b7a
  41239e:	sub    eax,DWORD PTR [ebp-0x71]
  4123a1:	jp     0x412421
  4123a3:	inc    ecx
  4123a4:	call   0x9213:0x7132567c
  4123ab:	inc    edx
  4123ac:	inc    edi
  4123ad:	jge    0x412387
  4123af:	pop    ss
  4123b0:	add    al,0x2e
  4123b2:	or     eax,0xa13ffbc
  4123b7:	xor    edx,DWORD PTR [ecx-0x15]
  4123ba:	mov    al,ds:0x97795772
  4123bf:	rcl    dl,cl
  4123c1:	push   ebp
  4123c2:	pop    ecx
  4123c3:	jmp    0x3b1400ad
  4123c8:	mov    ebp,0x9d03ae65
  4123cd:	and    esp,DWORD PTR [edi-0xa]
  4123d0:	dec    ebx
  4123d1:	mov    ebp,0x2f5075ff
  4123d6:	mov    ebx,0xf1bb2532
  4123db:	mov    ebx,0xe952bb00
  4123e0:	xchg   ecx,eax
  4123e1:	mov    ebx,0x762bd429
  4123e6:	ror    ch,0x1b
  4123e9:	dec    DWORD PTR [edi+0x52b852e0]
  4123ef:	pop    ecx
  4123f0:	adc    BYTE PTR [ebp-0x65],ah
  4123f3:	outs   dx,DWORD PTR ds:[esi]
  4123f4:	dec    esp
  4123f5:	dec    eax
  4123f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f7:	xor    BYTE PTR ds:0x8eee611b,ch
  4123fd:	into   
  4123fe:	mov    eax,0x97286491
  412403:	pusha  
  412404:	out    dx,al
  412405:	pop    ebx
  412406:	fmul   QWORD PTR [ebx+0x55432c8f]
  41240c:	push   0x5115d5eb
  412411:	sbb    eax,0xa68dcf5c
  412416:	repz inc eax
  412418:	les    eax,FWORD PTR [ebx-0x4e]
  41241b:	mov    ch,0x8b
  41241d:	push   ecx
  41241e:	jmp    0x412405
  412420:	xor    eax,0xf046ed76
  412425:	lea    ebx,[ecx]
  412427:	or     BYTE PTR [eiz*1+0x6a1cbab2],0x96
  41242f:	mov    edi,DWORD PTR [ebp-0x69]
  412432:	mov    edi,eax
  412434:	lods   eax,DWORD PTR ds:[esi]
  412435:	addr16 pop ebp
  412437:	mov    eax,ds:0x8965d73f
  41243c:	nop
  41243d:	jmp    0x6efc:0x1b1055c2
  412444:	aam    0x97
  412446:	mov    ds:0xe01c2fde,al
  41244b:	shl    DWORD PTR [ebx-0xc],1
  41244e:	sub    bl,BYTE PTR [esi]
  412450:	je     0x41241e
  412452:	in     eax,0xd0
  412454:	dec    esp
  412455:	add    DWORD PTR [ebx-0x30],esp
  412458:	push   cs
  412459:	pop    esp
  41245a:	dec    edi
  41245b:	js     0x412424
  41245d:	nop
  41245e:	loopne 0x412480
  412460:	add    DWORD PTR [ecx+0x6],ecx
  412463:	cmp    esp,ecx
  412465:	sub    eax,0x5d6cbf64
  41246a:	sbb    al,0x38
  41246c:	push   0x26960b36
  412471:	mov    dh,0x4
  412473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412474:	outs   dx,BYTE PTR ds:[esi]
  412475:	ins    BYTE PTR es:[edi],dx
  412476:	mov    bh,0x8e
  412478:	and    al,0xf4
  41247a:	lock xchg ebp,eax
  41247c:	lock inc esi
  41247e:	adc    bl,al
  412480:	les    ecx,FWORD PTR [eax-0x3595be10]
  412486:	add    al,0x2f
  412488:	xchg   BYTE PTR [ecx],dl
  41248a:	cmp    bh,bl
  41248c:	les    eax,FWORD PTR [eax+0x30]
  41248f:	xchg   ebx,eax
  412490:	push   eax
  412491:	xor    cl,BYTE PTR [eax+0x3d00b8b7]
  412497:	(bad)  
  412498:	and    eax,0x1c035cde
  41249d:	push   ebx
  41249e:	icebp  
  41249f:	(bad)
  4124a4:	fild   DWORD PTR [eax-0x38809e65]
  4124aa:	push   edx
  4124ab:	xor    DWORD PTR [ecx],0x0
  4124ae:	dec    esi
  4124af:	xor    DWORD PTR [eax-0x4a],0xfedeac77
  4124b6:	(bad)  
  4124b7:	in     eax,dx
  4124b8:	cmp    al,0x50
  4124ba:	test   eax,0x6a05df42
  4124bf:	sub    eax,0xd62b0c2d
  4124c4:	loope  0x4124db
  4124c6:	pushf  
  4124c7:	jge    0x412516
  4124c9:	loopne 0x41248a
  4124cb:	fidivr DWORD PTR [ebp+0x66]
  4124ce:	mov    ds:0x4841a7c,eax
  4124d3:	aad    0x49
  4124d5:	fadd   st,st(0)
  4124d7:	shr    BYTE PTR [ecx+0x71],cl
  4124da:	aad    0x92
  4124dc:	(bad)  
  4124de:	loope  0x41247f
  4124e0:	mov    ebp,0xafca6a04
  4124e5:	pusha  
  4124e6:	aam    0xf6
  4124e8:	and    dl,BYTE PTR [eax+0x5084effe]
  4124ee:	lock das 
  4124f0:	xlat   BYTE PTR ds:[ebx]
  4124f1:	enter  0x2118,0xce
  4124f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124f6:	mov    bl,0x2e
  4124f8:	loope  0x412525
  4124fa:	aad    0x73
  4124fc:	dec    edx
  4124fd:	in     eax,0x1b
  4124ff:	es pop ds
  412501:	or     DWORD PTR cs:[eax-0x79],ecx
  412505:	adc    al,0xc9
  412507:	pop    esp
  412508:	pop    ss
  412509:	mov    ds:0x639f551,eax
  41250e:	retf   
  41250f:	not    BYTE PTR [ebx-0x574318f4]
  412515:	xor    al,0x2d
  412517:	mov    esi,0x2d9da64e
  41251c:	sbb    eax,0xbc871839
  412521:	xlat   BYTE PTR ds:[ebx]
  412522:	push   edx
  412523:	mov    eax,ds:0x26bfe5de
  412528:	retf   0x31bf
  41252b:	mov    bh,0x13
  41252d:	out    dx,eax
  41252e:	arpl   bx,sp
  412530:	xlat   BYTE PTR ds:[ebx]
  412531:	sub    DWORD PTR [esi+0x50fd779e],edx
  412537:	pop    ebx
  412538:	stc    
  412539:	pop    ss
  41253a:	out    0x1a,al
  41253c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41253d:	loopne 0x4124cb
  41253f:	test   eax,0xdd5139ae
  412544:	inc    eax
  412545:	pop    eax
  412546:	xor    esi,ebx
  412548:	jmp    0x4124eb
  41254a:	pop    esi
  41254b:	sbb    dl,BYTE PTR fs:[ebx+0x6]
  41254f:	data16 loopne 0x412575
  412552:	or     eax,0x7811055b
  412557:	int3   
  412558:	lods   al,BYTE PTR ds:[esi]
  412559:	fwait
  41255a:	adc    ebx,DWORD PTR [ecx+0x24f87e53]
  412560:	mov    WORD PTR [ebx-0x7a],?
  412563:	bound  ebx,QWORD PTR [ebx+eiz*2+0x65e53b3a]
  41256a:	js     0x4125a1
  41256c:	jnp    0x412575
  41256e:	sub    BYTE PTR [edx],bh
  412570:	int3   
  412571:	and    eax,0xcdff581d
  412576:	xchg   BYTE PTR [eax],bl
  412578:	push   edx
  412579:	mov    dl,0x44
  41257b:	rcr    ch,1
  41257d:	sbb    ebp,eax
  41257f:	sbb    ecx,DWORD PTR [ecx+0x54]
  412582:	cmp    ch,bl
  412584:	or     eax,0x892e456f
  412589:	sub    esi,esp
  41258b:	bound  edi,QWORD PTR [eax+0x16a7a8ad]
  412591:	or     eax,0xbac87265
  412596:	int3   
  412597:	or     al,0x70
  412599:	mov    dh,BYTE PTR [esi+0x5]
  41259c:	imul   esi,edx,0xf9c9108e
  4125a2:	add    eax,0x3d940535
  4125a7:	pop    esi
  4125a8:	cdq    
  4125a9:	mov    eax,0xc5ed9236
  4125ae:	outs   dx,DWORD PTR ds:[esi]
  4125af:	cmp    eax,0x71f9985
  4125b4:	jne    0x4125c1
  4125b6:	sbb    DWORD PTR [eax+0x5160a813],esp
  4125bc:	icebp  
  4125bd:	sub    DWORD PTR [edi+0x53],ecx
  4125c0:	scas   al,BYTE PTR es:[edi]
  4125c1:	ss out 0x61,eax
  4125c4:	cmp    esp,eax
  4125c6:	adc    eax,0x7856ec08
  4125cb:	cmp    DWORD PTR [ebx-0x2fcc1ea8],0x5a126c01
  4125d5:	ret    
  4125d6:	test   BYTE PTR ds:0xc7213acd,ah
  4125dc:	add    ebx,ebp
  4125de:	pop    eax
  4125df:	aas    
  4125e0:	xor    eax,0x8050655a
  4125e5:	push   es
  4125e6:	adc    cl,dl
  4125e8:	cmp    bl,BYTE PTR [esi]
  4125ea:	jg     0x4125bb
  4125ec:	lahf   
  4125ed:	inc    ebp
  4125ee:	lahf   
  4125ef:	xchg   DWORD PTR [esi+0x7],eax
  4125f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125f3:	or     bl,BYTE PTR [edi]
  4125f5:	dec    BYTE PTR [edi-0x57]
  4125f8:	cli    
  4125f9:	push   edi
  4125fa:	les    ebx,FWORD PTR [eax-0x49]
  4125fd:	neg    DWORD PTR [edi]
  4125ff:	jb     0x41263e
  412601:	mov    WORD PTR [esi+eax*8+0x65abeb72],gs
  412608:	dec    ebx
  412609:	sub    al,0x7f
  41260b:	mov    ebx,DWORD PTR [eax+0x7b010fd4]
  412611:	frstor [esi]
  412613:	lahf   
  412614:	es test eax,0x4fd12855
  41261a:	jg     0x412647
  41261c:	mov    gs,WORD PTR [ecx-0x228b987b]
  412622:	fs cmp al,0x76
  412625:	sub    eax,0xa4e79b43
  41262a:	fst    DWORD PTR [ebx+0x36]
  41262d:	adc    DWORD PTR [esi],0xe39ab4d9
  412633:	stos   DWORD PTR es:[edi],eax
  412634:	loopne 0x412695
  412636:	out    dx,eax
  412637:	sub    bh,0x36
  41263a:	mov    ebp,0x177d226a
  41263f:	inc    eax
  412640:	push   edi
  412641:	fist   WORD PTR [ebx-0x33a3cc41]
  412647:	push   edx
  412648:	shr    BYTE PTR [esi+0x5188a1ac],0x79
  41264f:	addr16 push esi
  412651:	js     0x412631
  412653:	or     bh,BYTE PTR [esi+0x1d]
  412656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412657:	pop    ecx
  412658:	xlat   BYTE PTR ds:[ebx]
  412659:	push   0xee9609fd
  41265e:	dec    ecx
  41265f:	pop    ds
  412660:	ficomp DWORD PTR [ebx]
  412662:	xor    esi,ecx
  412664:	es (bad) 
  412666:	xor    DWORD PTR [ebx-0x3c7ce363],ebp
  41266c:	retf   
  41266d:	fst    DWORD PTR [edi+ebx*4]
  412670:	das    
  412671:	xchg   esp,eax
  412672:	mov    al,ds:0xb95af786
  412677:	xchg   ebp,eax
  412678:	pop    ds
  412679:	mov    al,0x82
  41267b:	out    dx,eax
  41267c:	and    ebx,DWORD PTR [ecx]
  41267e:	cmp    al,0x41
  412680:	push   edi
  412681:	dec    esi
  412682:	leave  
  412683:	fsubr  DWORD PTR [eax+edx*2+0x53fc1233]
  41268a:	sbb    ebp,eax
  41268c:	mov    ebx,?
  41268e:	loope  0x4126ef
  412690:	pusha  
  412691:	or     BYTE PTR [ecx],al
  412693:	cld    
  412694:	sub    BYTE PTR [ecx+eiz*4+0x6d094afe],0x4e
  41269c:	pop    esi
  41269d:	int3   
  41269e:	adc    BYTE PTR [edx-0x47],ch
  4126a1:	cdq    
  4126a2:	test   eax,0x3f45dc5d
  4126a7:	xchg   DWORD PTR [eax+0x77e90c95],ebp
  4126ad:	fidiv  WORD PTR [esi-0x12]
  4126b0:	add    BYTE PTR [ecx+0x16],al
  4126b3:	mov    ebp,0xb0e4059b
  4126b8:	mov    dh,0xe2
  4126ba:	push   edx
  4126bb:	cmp    BYTE PTR [ebp-0x21eafb4c],bl
  4126c1:	adc    eax,0x656363cb
  4126c6:	enter  0xda31,0x8c
  4126ca:	pop    ecx
  4126cb:	and    al,0x48
  4126cd:	pop    es
  4126ce:	mov    ebx,DWORD PTR [edx-0x17]
  4126d1:	dec    esp
  4126d2:	jo     0x412725
  4126d4:	jecxz  0x41271e
  4126d6:	adc    eax,0x48759467
  4126db:	add    BYTE PTR [ebp-0x11],0xea
  4126df:	icebp  
  4126e0:	jp     0x412736
  4126e2:	int    0x83
  4126e4:	adc    BYTE PTR [ecx],cl
  4126e6:	xor    DWORD PTR [ebx],ebx
  4126e8:	jmp    0x468709f4
  4126ed:	sub    eax,0x34342789
  4126f2:	js     0x412769
  4126f4:	lods   al,BYTE PTR ds:[esi]
  4126f5:	pusha  
  4126f6:	inc    ecx
  4126f7:	dec    ebp
  4126f8:	mov    dh,0x75
  4126fa:	pop    esp
  4126fb:	cmp    bl,BYTE PTR [esp+esi*2]
  4126fe:	adc    al,0x58
  412700:	jmp    0x41275e
  412702:	pop    esi
  412703:	popf   
  412704:	inc    ebx
  412705:	pop    eax
  412706:	jle    0x412766
  412708:	(bad)  
  412709:	fdiv   DWORD PTR [ebp-0x3228f6c]
  41270f:	or     BYTE PTR [eax],bl
  412711:	xchg   edx,eax
  412712:	scas   al,BYTE PTR es:[edi]
  412713:	or     ebx,DWORD PTR [edx+ebp*1]
  412716:	or     cl,ch
  412718:	dec    ebp
  412719:	test   eax,0x549b20d9
  41271e:	out    dx,eax
  41271f:	xor    DWORD PTR ds:0xfd72d716,ebx
  412725:	imul   ecx,DWORD PTR [esi-0x1cb8fbd5],0xffffffd2
  41272c:	jb     0x4126e4
  41272e:	mov    DWORD PTR [ebp-0x58],edi
  412731:	or     DWORD PTR [ebp-0x66],edx
  412734:	mov    ds:0xe7b9badd,al
  412739:	shl    DWORD PTR [edi-0x7dc10bb5],0xec
  412740:	dec    esp
  412741:	scas   eax,DWORD PTR es:[edi]
  412742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412743:	push   ss
  412744:	mov    ch,0xf1
  412746:	jnp    0x412715
  412748:	adc    esp,DWORD PTR [ecx+0x74ade8ba]
  41274e:	ds loop 0x412730
  412751:	pop    eax
  412752:	out    dx,al
  412753:	adc    al,0x5a
  412755:	lods   al,BYTE PTR ds:[esi]
  412756:	sub    eax,0x35d140dd
  41275b:	add    eax,0x51f453c1
  412760:	cmp    esp,DWORD PTR [eax+0x5e]
  412763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412764:	or     al,BYTE PTR [esi]
  412766:	repz xchg ecx,eax
  412768:	cdq    
  412769:	jmp    0xd452:0xe7a53593
  412770:	pop    edi
  412771:	xchg   DWORD PTR [edx],ebp
  412773:	hlt    
  412774:	sbb    esp,eax
  412776:	aam    0xb1
  412778:	jb     0x41279b
  41277a:	lods   eax,DWORD PTR ds:[esi]
  41277b:	xor    eax,0xba4dc36
  412780:	mov    ebp,0x16852fd6
  412785:	popf   
  412786:	sub    ebp,DWORD PTR fs:0xcf99537b
  41278d:	out    dx,al
  41278e:	push   ds
  41278f:	jae    0x412741
  412791:	ja     0x4127a8
  412793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412794:	or     DWORD PTR [ecx-0x2a3bba60],esi
  41279a:	or     al,0xb2
  41279c:	push   edx
  41279d:	push   ecx
  41279e:	jmp    FWORD PTR [edx]
  4127a0:	or     eax,0x273a84c4
  4127a5:	add    eax,0xc3067d2b
  4127aa:	xchg   edx,eax
  4127ab:	cdq    
  4127ac:	push   es
  4127ad:	pop    esi
  4127ae:	mov    bh,0xdf
  4127b0:	adc    BYTE PTR [edi],cl
  4127b2:	ror    ebp,0xe0
  4127b5:	add    eax,0xbd8d927b
  4127ba:	ret    
  4127bb:	mov    ds:0xa58c79bf,al
  4127c0:	and    BYTE PTR [edi+0xb],0x74
  4127c4:	jae    0x6702e4a
  4127ca:	sar    BYTE PTR [edx+ebp*4-0x1dbb693e],0x4a
  4127d2:	aaa    
  4127d3:	sbb    DWORD PTR [edi],ebp
  4127d5:	jmp    0xa018:0x8796ff8
  4127dc:	dec    esi
  4127dd:	lds    edx,FWORD PTR [edx]
  4127df:	dec    esi
  4127e0:	sbb    eax,DWORD PTR [ebx+0x2e]
  4127e3:	mov    ah,0xa9
  4127e5:	sbb    BYTE PTR [eax+eiz*1-0x49eace70],cl
  4127ec:	jp     0x4127ec
  4127ee:	cmc    
  4127ef:	ja     0x41283e
  4127f1:	dec    eax
  4127f2:	clc    
  4127f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127f4:	pusha  
  4127f5:	mov    ah,0x1c
  4127f7:	int3   
  4127f8:	sub    BYTE PTR [eax+0x327f2b5e],cl
  4127fe:	sub    bl,al
  412800:	mov    bh,bl
  412802:	in     al,dx
  412803:	cs dec edx
  412805:	ja     0x4127dc
  412807:	dec    edx
  412808:	std    
  412809:	in     eax,0xe9
  41280b:	mov    esi,0xe66e7a52
  412810:	(bad)  
  412811:	xchg   edi,eax
  412812:	inc    ebp
  412813:	stc    
  412814:	push   esp
  412816:	xlat   BYTE PTR ds:[ebx]
  412817:	adc    eax,0xf2f17bb7
  41281c:	pop    ss
  41281d:	sub    BYTE PTR [edi],ch
  41281f:	retf   
  412820:	or     dh,bl
  412822:	mov    ds:0xfab00574,al
  412827:	pushf  
  412828:	lahf   
  412829:	xchg   ecx,eax
  41282a:	or     ebp,DWORD PTR [ecx+0x2a]
  41282d:	jg     0x4127c2
  41282f:	fisubr WORD PTR [edi+0x6b]
  412832:	(bad)  
  412833:	pop    esp
  412834:	sti    
  412835:	aad    0xeb
  412837:	cmp    eax,0xf6c8ad61
  41283c:	mov    bl,BYTE PTR [edx-0x2b]
  41283f:	lods   eax,DWORD PTR ds:[esi]
  412840:	mov    ecx,0xb8aca357
  412845:	es stos DWORD PTR es:[edi],eax
  412847:	mov    ch,0x1
  412849:	push   ebp
  41284a:	xor    eax,0xf28aaa69
  41284f:	cmc    
  412850:	sbb    DWORD PTR [ecx+0x11],ebp
  412853:	ss jb  0x412889
  412856:	push   ds
  412857:	push   esp
  412858:	int    0xac
  41285a:	enter  0x5887,0xf0
  41285e:	dec    esi
  41285f:	nop
  412860:	ins    DWORD PTR es:[edi],dx
  412861:	pop    ss
  412862:	mov    bh,0xdc
  412864:	iret   
  412865:	mov    ecx,0x342b732d
  41286a:	push   edi
  41286b:	sub    DWORD PTR [edx-0x769c4874],ebx
  412871:	mov    ebx,0xc9e68413
  412876:	cdq    
  412877:	push   ss
  412878:	pusha  
  412879:	ja     0x4128b4
  41287b:	ficom  WORD PTR [edi-0x42bec9db]
  412881:	ins    BYTE PTR es:[edi],dx
  412882:	adc    eax,0xcbd1e1e9
  412887:	data16 or dh,BYTE PTR [edi+0x1bde81ba]
  41288e:	dec    ebp
  41288f:	jge    0x41285c
  412891:	lds    ecx,FWORD PTR [edx+0x1]
  412894:	loop   0x4128e2
  412896:	mov    edi,0xf8e53c85
  41289b:	mov    al,0x14
  41289d:	pop    esi
  41289e:	fld    QWORD PTR [eax]
  4128a0:	inc    esp
  4128a1:	js     0x412838
  4128a3:	or     eax,0x4dd630a
  4128a8:	cmp    eax,0x50f3dfc
  4128ad:	inc    ebx
  4128ae:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4128b0:	jmp    0x4128e8
  4128b2:	xor    bh,BYTE PTR [edx+0x53]
  4128b5:	cmp    esi,DWORD PTR [ebp-0x5610ff18]
  4128bb:	sbb    BYTE PTR ds:0xcfcbc397,ah
  4128c1:	push   0xe8c14d30
  4128c6:	scas   eax,DWORD PTR es:[edi]
  4128c7:	loop   0x412905
  4128c9:	fild   DWORD PTR ds:0x5026f707
  4128cf:	aam    0x52
  4128d1:	inc    ebp
  4128d2:	out    dx,al
  4128d3:	jmp    0x41286d
  4128d5:	stos   BYTE PTR es:[edi],al
  4128d6:	pop    ecx
  4128d7:	jle    0x4128fa
  4128d9:	inc    ecx
  4128da:	sbb    ebx,0xffffff8b
  4128dd:	xchg   edi,eax
  4128de:	(bad)  
  4128df:	jp     0x412893
  4128e1:	repz fwait
  4128e3:	mov    esp,0x552efc03
  4128e8:	mov    bh,0xfe
  4128ea:	addr16 pop ds
  4128ec:	call   0x7933eb31
  4128f1:	push   esi
  4128f2:	jb     0x412944
  4128f4:	cwde   
  4128f5:	in     eax,dx
  4128f6:	sub    al,0xdc
  4128f8:	adc    ebp,DWORD PTR [ebx]
  4128fa:	sub    ebp,DWORD PTR [ecx]
  4128fc:	scas   al,BYTE PTR es:[edi]
  4128fd:	jbe    0x412906
  4128ff:	(bad)  
  412900:	pop    edx
  412901:	inc    ebp
  412902:	dec    esp
  412903:	nop
  412904:	int    0xfc
  412906:	xor    eax,0x6c6813fc
  41290b:	push   ecx
  41290c:	pop    edx
  41290d:	push   ss
  41290e:	ins    DWORD PTR es:[edi],dx
  41290f:	gs shl BYTE PTR es:[ebp+0x1685fd57],cl
  412917:	mov    ecx,?
  412919:	dec    eax
  41291a:	sbb    DWORD PTR [ecx-0x65],edx
  41291d:	jo     0x4128bf
  41291f:	push   esi
  412920:	arpl   bx,dx
  412922:	mov    edx,DWORD PTR [ecx-0x4e]
  412925:	push   ss
  412926:	cld    
  412927:	das    
  412928:	std    
  412929:	lea    eax,[ecx+0x4b]
  41292c:	lods   al,BYTE PTR ds:[esi]
  41292d:	and    bh,0xd5
  412930:	xchg   esi,eax
  412932:	mul    BYTE PTR [edi+ebx*1-0x7c147c67]
  412939:	str    WORD PTR [eax-0x69b7190]
  412940:	xor    BYTE PTR [esp+ecx*1],al
  412943:	aad    0xb8
  412945:	retf   0xc160
  412948:	test   eax,0xdeb44855
  41294d:	shl    DWORD PTR [edi+ebp*1],cl
  412950:	sub    al,0x92
  412952:	daa    
  412953:	loop   0x4128e0
  412955:	cmc    
  412956:	aad    0x76
  412958:	mov    dh,0xd4
  41295a:	mov    edx,0x9e14c9a0
  41295f:	push   ebp
  412960:	sub    BYTE PTR [eax-0x23cc1f26],bh
  412966:	and    DWORD PTR [edx],ebx
  412968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412969:	adc    ebx,eax
  41296b:	pushf  
  41296c:	and    eax,DWORD PTR [eax+ebx*8+0x1b]
  412970:	pop    ebx
  412971:	sbb    al,0xeb
  412973:	sbb    eax,0x30cff15
  412978:	ds (bad) 
  41297a:	(bad)  
  41297b:	out    0xe8,eax
  41297d:	push   edi
  41297e:	and    al,0xe3
  412980:	out    0x7b,eax
  412982:	xchg   esp,eax
  412983:	dec    ebx
  412984:	cmp    BYTE PTR [esi-0x70d90f1a],0x9b
  41298b:	fucomip st,st(2)
  41298d:	add    BYTE PTR [ebp+0x25],bl
  412990:	add    al,0x89
  412992:	inc    ebx
  412993:	or     al,0x9d
  412995:	pusha  
  412996:	je     0x412967
  412998:	mov    ebx,0x3050a7d9
  41299d:	xor    al,0xff
  41299f:	and    DWORD PTR [ecx],esi
  4129a1:	jo     0x4129e9
  4129a3:	out    dx,al
  4129a4:	loope  0x4129c6
  4129a6:	setno  BYTE PTR [esi+0x18]
  4129aa:	xchg   esi,eax
  4129ab:	jmp    0xdeb37a7e
  4129b0:	fsub   st(5),st
  4129b2:	add    al,0xed
  4129b4:	cmc    
  4129b5:	push   ebx
  4129b6:	scas   eax,DWORD PTR es:[edi]
  4129b7:	adc    DWORD PTR [ebp-0x6d47e0ba],ebp
  4129bd:	cmp    ebx,DWORD PTR [esi-0x7ae7be9a]
  4129c3:	cmp    al,0xec
  4129c5:	mov    bh,0x35
  4129c7:	rcl    BYTE PTR gs:[esi+0x2ba68459],0x93
  4129cf:	cmp    eax,0xe4fbc5e4
  4129d4:	sbb    ecx,0xb92447f4
  4129da:	ret    
  4129db:	push   eax
  4129dc:	cli    
  4129dd:	inc    ebp
  4129de:	inc    BYTE PTR [eax-0x72]
  4129e1:	xor    eax,0xe082c196
  4129e6:	(bad)  
  4129e7:	jle    0x412971
  4129e9:	jb     0x412977
  4129eb:	imul   ebp,esp,0xa52d11b7
  4129f1:	add    ch,ch
  4129f3:	jo     0x4129cc
  4129f5:	ins    BYTE PTR es:[edi],dx
  4129f6:	adc    DWORD PTR [edx+0x49],eax
  4129f9:	add    BYTE PTR [edx+0x9],dl
  4129fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129fd:	mov    esi,0xb10b865f
  412a02:	(bad)  
  412a03:	xlat   BYTE PTR gs:[bx]
  412a06:	dec    esp
  412a07:	retf   0x924d
  412a0a:	test   BYTE PTR [ebx-0x76],0x17
  412a0e:	lahf   
  412a0f:	sbb    BYTE PTR [eax-0x4feeedc0],0xc9
  412a16:	test   al,0xba
  412a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a19:	adc    al,0x82
  412a1b:	sub    al,BYTE PTR [eax+edx*8+0x581678c6]
  412a22:	jp     0x412a33
  412a24:	arpl   sp,bp
  412a26:	push   ebx
  412a27:	div    DWORD PTR [edx]
  412a29:	pop    ebx
  412a2a:	push   eax
  412a2b:	push   edx
  412a2c:	xchg   DWORD PTR [ebx],ebp
  412a2e:	mov    eax,0xb92651b4
  412a33:	mov    bh,0x22
  412a35:	ins    BYTE PTR es:[edi],dx
  412a36:	mov    ch,0xc9
  412a38:	mov    eax,0x4abddfb9
  412a3d:	and    eax,0x37159c4f
  412a42:	sub    edx,edx
  412a44:	pop    esi
  412a45:	imul   esi,DWORD PTR [esi+0x22],0x2f55a625
  412a4c:	push   esi
  412a4d:	inc    edi
  412a4e:	xor    DWORD PTR [edx-0x4b],ebp
  412a51:	sti    
  412a52:	shl    dl,cl
  412a54:	(bad)  [ecx]
  412a56:	mov    esp,0xad412e71
  412a5b:	sub    eax,0x35a03ad
  412a60:	add    esp,ebp
  412a62:	dec    ebx
  412a63:	(bad)  
  412a64:	jmp    0x412ae5
  412a66:	lock (bad) 
  412a68:	(bad)  
  412a69:	pop    edx
  412a6a:	in     eax,dx
  412a6b:	and    esi,ebp
  412a6d:	adc    BYTE PTR [esi],bl
  412a6f:	dec    esp
  412a70:	inc    edx
  412a71:	mov    bh,0xa0
  412a73:	iret   
  412a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a75:	push   esp
  412a76:	push   ss
  412a77:	inc    ecx
  412a78:	and    al,0xcf
  412a7a:	scas   eax,DWORD PTR es:[edi]
  412a7b:	jnp    0x412ab8
  412a7d:	fdivr  QWORD PTR [ecx]
  412a7f:	scas   eax,DWORD PTR es:[edi]
  412a80:	mov    dh,0x59
  412a82:	push   esi
  412a83:	push   ebx
  412a84:	xchg   edi,eax
  412a85:	shl    BYTE PTR [edx+0x4f89bb41],1
  412a8b:	mov    DWORD PTR [edi],ebx
  412a8d:	mov    eax,0x76645320
  412a92:	xchg   ebp,eax
  412a93:	pop    esi
  412a94:	aad    0xa9
  412a96:	xchg   edi,eax
  412a97:	gs jae 0x412a27
  412a9a:	dec    esi
  412a9b:	dec    edx
  412a9c:	inc    esi
  412a9d:	cmp    bh,BYTE PTR [edi]
  412a9f:	cmp    bl,BYTE PTR [eax-0x4d2a3cce]
  412aa5:	adc    DWORD PTR [esi-0x43],edx
  412aa8:	mov    ebx,0xc69efee8
  412aad:	lods   al,BYTE PTR ds:[esi]
  412aae:	cmp    cl,BYTE PTR [edx+0x12]
  412ab1:	aas    
  412ab2:	fs fdivr st,st(3)
  412ab5:	es ja  0x412aff
  412ab8:	shl    DWORD PTR ds:0xff40c4b9,0xce
  412abf:	adc    ebx,DWORD PTR [ebx-0x6fff8f7f]
  412ac5:	es sub eax,eax
  412ac8:	loopne 0x412afb
  412aca:	dec    ebp
  412acb:	push   ds
  412acc:	jbe    0x412ad0
  412ace:	pop    esi
  412acf:	repnz dec ecx
  412ad1:	or     eax,0xf6fea41
  412ad6:	into   
  412ad7:	add    al,BYTE PTR [ebx+edx*1-0x48]
  412adb:	jecxz  0x412a69
  412add:	inc    ebp
  412ade:	dec    ecx
  412adf:	dec    ecx
  412ae0:	adc    eax,0xe93e1a59
  412ae5:	dec    edx
  412ae6:	call   0x7b43:0x69254a7d
  412aed:	adc    bh,BYTE PTR [ecx+0x76]
  412af0:	das    
  412af1:	sub    al,0xd9
  412af3:	(bad)  
  412af4:	and    al,0xa8
  412af6:	cmp    DWORD PTR [ebp-0x59],ebp
  412af9:	stc    
  412afa:	dec    ebx
  412afb:	inc    esi
  412afc:	and    ch,ch
  412afe:	jb     0x412aa3
  412b00:	repz popf 
  412b02:	inc    ebp
  412b03:	push   ds
  412b04:	pushf  
  412b05:	pop    ds
  412b06:	mov    dh,BYTE PTR [esi]
  412b08:	sar    DWORD PTR [esi-0xf5af523],cl
  412b0e:	add    ebx,edx
  412b10:	cmp    edx,DWORD PTR [ecx]
  412b12:	adc    BYTE PTR [eax+ecx*8-0x57bf6dc7],0xfc
  412b1a:	test   eax,0xeba4b9a2
  412b1f:	sti    
  412b20:	je     0x412b26
  412b22:	inc    eax
  412b23:	inc    edi
  412b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b25:	xchg   ebp,eax
  412b26:	mov    ebx,0x2427f332
  412b2b:	and    BYTE PTR [esi+0x69],cl
  412b2e:	xor    eax,0x5688f291
  412b33:	mov    edx,0xe1cbdd53
  412b38:	mov    ch,0xd3
  412b3a:	cdq    
  412b3b:	rcr    eax,cl
  412b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b3e:	jmp    0x581ad8fb
  412b43:	pushw  ds
  412b45:	push   ecx
  412b46:	cmp    bh,BYTE PTR [edx-0x68c4c6b5]
  412b4c:	push   ds
  412b4d:	in     eax,0x5c
  412b4f:	jg     0x412b46
  412b51:	loopne 0x412af3
  412b53:	loope  0x412ba0
  412b55:	push   esi
  412b56:	int    0xec
  412b58:	popa   
  412b59:	test   dl,dh
  412b5b:	xchg   ebp,eax
  412b5c:	xor    DWORD PTR [ebp+0x4f7f0432],esp
  412b62:	mov    al,0x5d
  412b64:	(bad)  
  412b65:	mov    al,0xb1
  412b67:	retf   
  412b68:	fisttp QWORD PTR [esi-0x51]
  412b6b:	mov    ebx,0xa1642d59
  412b70:	dec    eax
  412b71:	pop    DWORD PTR [ebp+0x1042117b]
  412b77:	add    DWORD PTR [ebx],edx
  412b79:	pop    ss
  412b7a:	(bad)  
  412b7b:	adc    ebx,esp
  412b7d:	pop    ss
  412b7e:	test   edx,ebp
  412b80:	ins    BYTE PTR es:[edi],dx
  412b81:	mov    bh,0xfe
  412b83:	push   ebx
  412b84:	mov    esp,0x61445d04
  412b89:	push   es
  412b8a:	pop    ebx
  412b8b:	jge    0x412bfd
  412b8d:	inc    edx
  412b8e:	test   al,0xf3
  412b90:	jb     0x412b28
  412b92:	push   ecx
  412b93:	fnsave [ebx+ebx*2+0x5a9a93b0]
  412b9a:	out    dx,eax
  412b9b:	xor    ah,BYTE PTR [ecx+0x15]
  412b9e:	ins    BYTE PTR es:[edi],dx
  412b9f:	mov    edi,0xbbd17bfd
  412ba4:	(bad)  
  412ba5:	adc    eax,0x25f2519c
  412baa:	mov    ecx,ecx
  412bac:	bnd ret 
  412bae:	xlat   BYTE PTR ds:[ebx]
  412baf:	pop    esp
  412bb0:	jae    0x412b65
  412bb2:	inc    esp
  412bb3:	std    
  412bb4:	mov    WORD PTR [ecx+0x5a],ss
  412bb7:	loopne 0x412c36
  412bb9:	repnz sbb ebp,DWORD PTR [esp+ebp*8]
  412bbd:	mov    cx,0x6448
  412bc1:	pop    edx
  412bc2:	(bad)  
  412bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bc4:	adc    al,0xe4
  412bc6:	xchg   ebp,eax
  412bc7:	ins    DWORD PTR es:[edi],dx
  412bc8:	in     al,dx
  412bc9:	sbb    esi,DWORD PTR [esi-0x33]
  412bcc:	sbb    dl,BYTE PTR [ebx-0x2c]
  412bcf:	mov    al,ds:0x46a593cf
  412bd4:	stos   BYTE PTR es:[edi],al
  412bd5:	jmp    0x2440:0xc52f7f04
  412bdc:	mov    BYTE PTR [ebx-0x75],ah
  412bdf:	push   es
  412be0:	inc    BYTE PTR [edi+edx*8]
  412be3:	xor    ah,BYTE PTR [edx+0x57]
  412be6:	dec    esi
  412be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412be8:	cmp    al,0x4c
  412bea:	lods   eax,DWORD PTR ds:[esi]
  412beb:	inc    eax
  412bec:	xlat   BYTE PTR ds:[ebx]
  412bed:	sub    cl,BYTE PTR [ecx]
  412bef:	xchg   edi,eax
  412bf0:	ja     0x412bc7
  412bf2:	in     eax,0x62
  412bf4:	aas    
  412bf5:	mov    edi,?
  412bf7:	sub    edi,edx
  412bf9:	in     eax,dx
  412bfa:	int    0x31
  412bfc:	pop    edi
  412bfd:	jns    0x412c23
  412bff:	jmp    0x412b9f
  412c01:	cmp    cl,cl
  412c03:	jbe    0x412c16
  412c05:	cwde   
  412c06:	bound  esp,QWORD PTR [eax-0x60]
  412c09:	push   esp
  412c0a:	or     al,0xd1
  412c0c:	and    al,0x25
  412c0f:	in     eax,0x29
  412c11:	jmp    DWORD PTR ds:0xfb3715d4
  412c17:	test   al,0x67
  412c19:	aaa    
  412c1a:	push   es
  412c1b:	ret    0x587e
  412c1e:	xchg   ebx,eax
  412c1f:	out    dx,eax
  412c20:	xchg   esp,eax
  412c21:	lds    eax,FWORD PTR [ebx+eiz*2+0x6012624b]
  412c28:	inc    edx
  412c29:	or     BYTE PTR [edi+0x74618988],dl
  412c2f:	imul   ebp,DWORD PTR [eax],0xfffffff8
  412c32:	jp     0x412bd1
  412c34:	dec    BYTE PTR [esi+0x402b1250]
  412c3a:	mov    ebx,0xf27d6db4
  412c3f:	cs (bad) 
  412c41:	test   BYTE PTR ds:[edi+ecx*1],al
  412c45:	repnz ror eax,1
  412c48:	test   al,0xf9
  412c4a:	xor    ebx,DWORD PTR [edx]
  412c4c:	shl    BYTE PTR [ecx],0xd4
  412c4f:	mov    ds:0xf45bcfbe,eax
  412c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c55:	xchg   edi,eax
  412c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c57:	call   0xbc703fd4
  412c5c:	add    al,0x36
  412c5e:	push   esp
  412c5f:	scas   eax,DWORD PTR es:[edi]
  412c60:	or     ah,al
  412c62:	scas   eax,DWORD PTR es:[edi]
  412c63:	std    
  412c64:	aam    0x89
  412c66:	inc    ebx
  412c67:	popf   
  412c68:	or     eax,0x372108f7
  412c6d:	or     DWORD PTR [ecx],edx
  412c6f:	mov    ch,0xfc
  412c71:	rol    BYTE PTR [ebp-0x17],0xdc
  412c75:	dec    edi
  412c76:	loop   0x412c66
  412c78:	dec    eax
  412c79:	imul   edi,esp,0x4e7e1076
  412c7f:	fwait
  412c80:	xchg   ecx,eax
  412c81:	ret    0xc630
  412c84:	cli    
  412c85:	jnp    0x412cc9
  412c87:	sbb    al,0x13
  412c89:	pop    ecx
  412c8a:	mov    al,0xce
  412c8c:	pushf  
  412c8d:	sub    ch,BYTE PTR [ecx+0x23]
  412c90:	bound  edx,QWORD PTR [ecx]
  412c92:	test   DWORD PTR [edi+0xff03350],0x8811843c
  412c9c:	int    0x0
  412c9e:	sub    cl,BYTE PTR [edx-0x324d143e]
  412ca4:	test   al,0x2f
  412ca6:	mov    ecx,0xb67e326a
  412cab:	js     0x412c86
  412cad:	and    esp,DWORD PTR [edx+0x3d]
  412cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cb1:	pop    esp
  412cb2:	dec    eax
  412cb3:	lods   al,BYTE PTR ds:[esi]
  412cb4:	mov    dl,0x7
  412cb6:	pop    esp
  412cb7:	jecxz  0x412cbb
  412cb9:	and    eax,0x656be50b
  412cbe:	retf   
  412cbf:	mov    al,0x3a
  412cc1:	stos   DWORD PTR es:[edi],eax
  412cc2:	jmp    0x412c4d
  412cc4:	mov    edx,0x1fb6497b
  412cc9:	ret    
  412cca:	dec    eax
  412ccb:	sahf   
  412ccc:	imul   ecx,DWORD PTR [ebx],0xffffffae
  412ccf:	mov    edi,0x7c5a92bd
  412cd4:	sti    
  412cd5:	xchg   esp,eax
  412cd6:	pop    ebp
  412cd7:	enter  0xf4e6,0x60
  412cdb:	sbb    DWORD PTR ds:0xa1c31a2,eax
  412ce1:	mov    DWORD PTR [esi-0x19],ebp
  412ce4:	and    DWORD PTR [esi-0x3a],ebx
  412ce7:	or     al,0x61
  412ce9:	xchg   esi,eax
  412cea:	or     DWORD PTR [esi-0x19],ebp
  412ced:	mov    ch,0xc6
  412cef:	or     BYTE PTR [edi],0x7d
  412cf2:	mov    ebx,0x6ac59d19
  412cf7:	scas   al,BYTE PTR es:[edi]
  412cf8:	sub    DWORD PTR [ecx-0x74],eax
  412cfb:	mov    gs,WORD PTR [eax+0x16f840f0]
  412d01:	enter  0x41d0,0x4a
  412d05:	sbb    al,0xe7
  412d07:	call   0x42af:0x8f6d57a8
  412d0e:	daa    
  412d0f:	jge    0x412d3a
  412d11:	and    DWORD PTR [edi],edi
  412d13:	pop    esi
  412d14:	push   ebp
  412d15:	fisubr WORD PTR [edx+0x21be1716]
  412d1b:	out    0x5,al
  412d1d:	jmp    0x412d11
  412d1f:	jae    0x412d4c
  412d21:	or     al,0xc
  412d23:	cmp    dl,BYTE PTR [ecx-0x78f2e2b4]
  412d29:	addr16 dec ecx
  412d2b:	cld    
  412d2c:	imul   esp,DWORD PTR [eax-0x1ac47bb],0xffffffbf
  412d33:	sti    
  412d34:	(bad)  
  412d35:	in     al,dx
  412d36:	mov    bh,BYTE PTR [ecx+0x1c63c229]
  412d3c:	lahf   
  412d3d:	out    dx,eax
  412d3e:	inc    ebp
  412d3f:	sub    eax,0xf36b8f4
  412d44:	test   eax,0x54f8b852
  412d49:	lock push edi
  412d4b:	sbb    eax,ebx
  412d4d:	fnstsw WORD PTR [edx+ebp*1-0x7]
  412d51:	call   0x99bb:0xdea483f7
  412d58:	scas   eax,DWORD PTR es:[edi]
  412d59:	mov    edi,edx
  412d5b:	cli    
  412d5c:	add    eax,0x28a735ed
  412d61:	cwde   
  412d62:	xchg   edx,eax
  412d63:	inc    ebx
  412d64:	push   edx
  412d65:	imul   ebx,DWORD PTR [esi],0x9beb7d6
  412d6b:	jne    0x412d6a
  412d6d:	lds    edi,FWORD PTR [esi-0x111e2c26]
  412d73:	(bad)  
  412d75:	and    DWORD PTR ds:0xfe4bb1c8,edi
  412d7b:	stos   DWORD PTR es:[edi],eax
  412d7c:	ss jns 0x412d4d
  412d7f:	loopne 0x412d29
  412d81:	hlt    
  412d82:	ins    BYTE PTR es:[edi],dx
  412d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d84:	int3   
  412d85:	and    al,0xf6
  412d87:	jno    0x412de7
  412d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d8a:	call   0xfa337fdb
  412d8f:	add    DWORD PTR [eax-0x22],ebp
  412d92:	jg     0x412d90
  412d94:	hlt    
  412d95:	jmp    0xfaa25263
  412d9a:	jmp    0x120c1268
  412d9f:	sub    DWORD PTR [esi-0xa1da423],0x4f
  412da6:	mov    cl,0x40
  412da8:	test   DWORD PTR [esi-0x12],edx
  412dab:	mov    ebx,0x59838d57
  412db0:	sub    al,0xcf
  412db2:	clc    
  412db3:	xor    ah,bh
  412db5:	mov    ebx,0x6a955d00
  412dba:	adc    ecx,DWORD PTR [edx]
  412dbc:	push   edi
  412dbd:	hlt    
  412dbe:	sub    BYTE PTR [ecx],ch
  412dc0:	mov    edx,0x475baab1
  412dc5:	mov    ebp,0xc20ac996
  412dca:	popf   
  412dcb:	inc    eax
  412dcc:	ins    DWORD PTR es:[edi],dx
  412dcd:	(bad)  
  412dce:	mov    cl,0x6a
  412dd0:	adc    DWORD PTR [ebp+0x0],ebx
  412dd3:	pop    edi
  412dd4:	je     0x412e53
  412dd6:	push   ds
  412dd7:	rcl    DWORD PTR [ebx-0x50],cl
  412dda:	lahf   
  412ddb:	mov    al,0x9d
  412ddd:	push   ebp
  412dde:	mov    ds,WORD PTR [ebx]
  412de0:	mov    bh,0xd1
  412de2:	dec    edx
  412de3:	sub    eax,DWORD PTR [ebp+0x3c1812b]
  412de9:	sub    ah,BYTE PTR [esi+0x871799a]
  412def:	repnz pop ebp
  412df1:	sbb    BYTE PTR [ecx+esi*2],dl
  412df4:	jge    0x412e42
  412df6:	sbb    DWORD PTR [ecx-0x22774cb2],eax
  412dfc:	xchg   DWORD PTR [eax+0x430c8020],esp
  412e02:	pop    esi
  412e03:	popa   
  412e04:	push   edx
  412e05:	xchg   ecx,eax
  412e06:	sub    ch,BYTE PTR [ecx-0x7f972d60]
  412e0c:	fdivr  DWORD PTR [ecx+0x26045dc6]
  412e12:	inc    esi
  412e13:	in     al,dx
  412e14:	dec    ebp
  412e15:	pop    edx
  412e16:	xchg   esi,eax
  412e17:	jns    0x412e2b
  412e19:	mov    esp,0xa6823b53
  412e1e:	(bad)  
  412e1f:	jmp    0x4d85:0x7d96eb0e
  412e26:	shl    DWORD PTR [ebx+0x25],0x1
  412e2a:	and    BYTE PTR [ebx-0x4c],al
  412e2d:	in     eax,0x7c
  412e2f:	aaa    
  412e30:	jbe    0x412dbf
  412e32:	fcom   DWORD PTR [ebx+0x7a03c096]
  412e38:	mov    bl,0x21
  412e3a:	mov    al,ds:0x832f2c3e
  412e3f:	push   ebp
  412e40:	mov    ecx,0xc5cdd33b
  412e45:	fiadd  DWORD PTR [edi-0x56]
  412e48:	jae    0x412e3f
  412e4a:	enter  0xa2a3,0x86
  412e4e:	sbb    bh,ch
  412e50:	mov    bh,0x51
  412e52:	pushf  
  412e53:	cmp    ecx,esp
  412e55:	out    0xbf,al
  412e57:	bnd jmp 0xbd2d4727
  412e5d:	rol    BYTE PTR [eax+esi*1+0x50ae952b],cl
  412e64:	sub    esi,DWORD PTR [ebx+ebx*4]
  412e67:	aaa    
  412e68:	push   ss
  412e69:	sub    ebx,ecx
  412e6b:	ror    BYTE PTR [eax],0xc
  412e6e:	aaa    
  412e6f:	dec    esp
  412e70:	in     eax,0xbb
  412e72:	imul   BYTE PTR [edx+eax*1-0x43b62b57]
  412e79:	ffreep st(2)
  412e7b:	jge    0x412e2e
  412e7d:	repnz cmp ebp,edi
  412e80:	gs xchg edi,eax
  412e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e83:	stos   BYTE PTR es:[edi],al
  412e84:	adc    al,0x1d
  412e87:	xchg   esp,eax
  412e88:	sub    BYTE PTR [ebx-0x30],0xb9
  412e8c:	(bad)  
  412e8e:	imul   ecx,DWORD PTR [esi+0x7a036e81]
  412e95:	mov    al,ds:0x1152d3de
  412e9a:	cmp    al,0xf5
  412e9c:	push   esp
  412e9d:	ins    DWORD PTR es:[edi],dx
  412e9e:	loopne 0x412e42
  412ea0:	mov    ch,0xc
  412ea2:	add    DWORD PTR [edx-0x3b330717],eax
  412ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea9:	loopne 0x412e58
  412eab:	out    dx,al
  412eac:	les    ebx,FWORD PTR [eax-0x2a]
  412eaf:	dec    esi
  412eb0:	and    DWORD PTR [edx+0x388d8217],0xfffffffb
  412eb7:	mov    dh,0xe5
  412eb9:	and    dh,BYTE PTR [edx+0x19]
  412ebc:	ficomp WORD PTR [edx]
  412ebe:	cmp    BYTE PTR [esi-0x1ece1a98],bh
  412ec4:	lods   eax,DWORD PTR ds:[esi]
  412ec5:	sahf   
  412ec6:	mov    bl,0x8
  412ec8:	(bad)  
  412ec9:	pushf  
  412eca:	sti    
  412ecb:	add    al,0x6c
  412ecd:	jb     0x412efc
  412ecf:	aaa    
  412ed0:	sbb    al,0x31
  412ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ed3:	shl    esi,cl
  412ed5:	ret    0x9b37
  412ed8:	sbb    eax,0xb13ca058
  412edd:	mov    ds:0xc98190d6,al
  412ee2:	sti    
  412ee3:	je     0x412f0a
  412ee5:	sahf   
  412ee6:	xor    dl,BYTE PTR [esi+0x1ffae4b2]
  412eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eed:	rcr    esi,0x2f
  412ef0:	outs   dx,DWORD PTR ds:[esi]
  412ef1:	cmp    eax,0x65be00ad
  412ef6:	pop    edi
  412ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ef8:	ret    
  412ef9:	xor    al,0xad
  412efb:	add    ah,BYTE PTR ss:[ebx+0x2e14656f]
  412f02:	mov    ecx,0xd84632c1
  412f07:	or     BYTE PTR [ebp-0x6],ah
  412f0a:	sbb    al,0x47
  412f0c:	test   DWORD PTR [edx-0x69ca6043],ebp
  412f12:	and    DWORD PTR [edi+0x1be261a],ebp
  412f18:	fsub   st(7),st
  412f1a:	mov    DWORD PTR [edx],edx
  412f1c:	loope  0x412f2c
  412f1e:	adc    ah,dl
  412f20:	bound  esp,QWORD PTR [ebp-0x1013b4c9]
  412f26:	cmp    eax,0xb5160ff1
  412f2b:	jmp    0xc3fe3eab
  412f30:	jge    0x412f44
  412f32:	gs push ecx
  412f34:	push   0xe5d4e32a
  412f39:	sbb    ecx,DWORD PTR [edx]
  412f3b:	mov    edx,0x6d103bdf
  412f40:	inc    edx
  412f41:	sti    
  412f42:	enter  0x4b4d,0x47
  412f46:	add    eax,0x87bde59
  412f4b:	xchg   edi,eax
  412f4c:	iret   
  412f4d:	stos   DWORD PTR es:[edi],eax
  412f4e:	pop    esp
  412f4f:	adc    eax,0xb445fe94
  412f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f55:	enter  0xb0d0,0x7f
  412f59:	and    BYTE PTR [edi+0x54],dh
  412f5c:	xor    edi,DWORD PTR ss:[eax+0x53]
  412f60:	stc    
  412f61:	add    eax,0x64b3e11f
  412f66:	fisubr DWORD PTR [edx]
  412f68:	or     eax,DWORD PTR [edi]
  412f6a:	fst    DWORD PTR [edx]
  412f6c:	int    0x50
  412f6e:	addr16 out dx,eax
  412f70:	push   es
  412f71:	arpl   bp,sp
  412f73:	mov    ebx,0xad1a0c19
  412f78:	stos   DWORD PTR es:[edi],eax
  412f79:	sbb    bl,BYTE PTR [ecx]
  412f7b:	xlat   BYTE PTR ds:[ebx]
  412f7c:	test   eax,0x4949daff
  412f81:	(bad)  
  412f82:	pushf  
  412f83:	bound  eax,QWORD PTR [ecx-0x66e457e7]
  412f89:	and    eax,0xa797423f
  412f8e:	cdq    
  412f8f:	and    al,0xe9
  412f91:	in     al,dx
  412f92:	or     BYTE PTR [edi],ah
  412f94:	cmp    edx,DWORD PTR [esi-0x507bf583]
  412f9a:	unpckhps xmm2,XMMWORD PTR [esi+0x4fe29163]
  412fa1:	stos   BYTE PTR es:[edi],al
  412fa2:	(bad)  
  412fa3:	int3   
  412fa4:	aam    0x83
  412fa6:	mov    al,0x38
  412fa8:	pop    esp
  412fa9:	retf   0xae67
  412fac:	mov    al,ds:0x185bc61b
  412fb2:	or     dl,BYTE PTR [edx-0x3c]
  412fb5:	out    dx,al
  412fb6:	dec    edi
  412fb7:	cmp    BYTE PTR [edx-0x6c],ch
  412fba:	and    DWORD PTR [eax-0x79d1b3cc],edi
  412fc0:	test   eax,0xfe332b5a
  412fc5:	pop    ds
  412fc6:	xor    ebp,ecx
  412fc8:	mov    bl,0x6f
  412fca:	dec    DWORD PTR gs:[eax-0x48]
  412fce:	jecxz  0x412f61
  412fd0:	cdq    
  412fd1:	outs   dx,BYTE PTR ds:[esi]
  412fd2:	adc    ebp,DWORD PTR [eax+0x76]
  412fd5:	xor    bl,dl
  412fd7:	lock repnz dec esi
  412fda:	pop    ecx
  412fdb:	leave  
  412fdc:	or     DWORD PTR [ebx],ebp
  412fde:	cdq    
  412fdf:	into   
  412fe0:	das    
  412fe1:	icebp  
  412fe2:	xlat   BYTE PTR ds:[ebx]
  412fe3:	bound  ebp,QWORD PTR [ebp+0x13]
  412fe6:	aam    0x6c
  412fe8:	sahf   
  412fe9:	xor    eax,0x98d348e
  412fee:	pop    ds
  412fef:	fs or  esp,ebx
  412ff2:	jg     0x413030
  412ff4:	mov    bh,0xb4
  412ff6:	adc    eax,0x287280e4
  412ffb:	mov    ebp,0x247bc286
  413000:	jns    0x413021
  413002:	push   cs
  413003:	push   edi
  413004:	dec    ebx
  413005:	iret   
  413006:	push   esi
  413007:	mov    ebp,0xb425e262
  41300c:	fsubr  DWORD PTR [ebp-0x60622d66]
  413012:	fs cdq 
  413014:	ds and eax,0x370a7097
  41301a:	lods   eax,DWORD PTR ds:[esi]
  41301b:	popa   
  41301c:	sub    BYTE PTR [ebp+0x49],ah
  41301f:	xor    DWORD PTR [edi],ebp
  413021:	out    dx,eax
  413022:	int    0x54
  413024:	les    ecx,FWORD PTR [ebx+0x295afef5]
  41302a:	outs   dx,BYTE PTR ds:[esi]
  41302b:	shl    edi,0x66
  41302e:	mov    ebx,0x1b9a7893
  413033:	(bad)  
  413034:	imul   ebx,DWORD PTR ds:0x51ab1a43,0x18149ab5
  41303e:	ins    BYTE PTR es:[edi],dx
  41303f:	mov    esi,0x2ff63314
  413044:	jle    0x412fe9
  413046:	lods   al,BYTE PTR ds:[esi]
  413047:	mov    al,BYTE PTR [ebx+0x419d6707]
  41304d:	xor    eax,0xe255e069
  413052:	int    0xf9
  413054:	push   eax
  413055:	or     eax,DWORD PTR ds:0x9297ad66
  41305b:	pop    ds
  41305c:	xor    esi,eax
  41305e:	adc    eax,0xe3e62c09
  413063:	mov    ds:0xb0fd0662,al
  413068:	std    
  413069:	mov    ah,0xc9
  41306b:	retf   
  41306c:	xchg   esp,eax
  41306d:	mov    eax,ds:0x7b0a572e
  413072:	push   ss
  413073:	cmp    al,0x71
  413075:	jecxz  0x413068
  413077:	mov    ebp,ds
  413079:	xchg   edx,eax
  41307a:	mov    ecx,0x2574bd69
  41307f:	pop    si
  413081:	or     DWORD PTR [ecx+0x2b],0xffffffcb
  413085:	gs mov ch,0x98
  413088:	fcom   st(6)
  41308a:	mul    DWORD PTR [ecx+0xd]
  41308d:	fidivr WORD PTR [esi-0x62]
  413090:	adc    eax,0x6670c02c
  413095:	sbb    ebx,DWORD PTR [ebx]
  413097:	push   ds
  413098:	and    eax,0xed81685e
  41309d:	pop    ebx
  41309e:	imul   edi,edi,0xd256923
  4130a4:	push   ecx
  4130a5:	inc    eax
  4130a6:	lods   eax,DWORD PTR ds:[esi]
  4130a7:	mov    DWORD PTR [ebp+0xf],edx
  4130aa:	sbb    eax,DWORD PTR [ebx-0x75]
  4130ad:	mov    edi,0x9c57bd7c
  4130b2:	mov    al,ds:0x9a671ca4
  4130b7:	call   0xc4d2:0xb4d01ff1
  4130be:	add    al,0xad
  4130c0:	add    BYTE PTR [esi-0x11b53370],dh
  4130c6:	add    dh,al
  4130c8:	push   cs
  4130c9:	push   cs
  4130ca:	outs   dx,BYTE PTR ds:[esi]
  4130cb:	test   al,0x69
  4130cd:	aad    0x97
  4130cf:	fstp   st(1)
  4130d1:	add    al,0x5d
  4130d3:	mov    eax,ds:0x1b6818f1
  4130d8:	in     eax,0x46
  4130da:	jae    0x413145
  4130dc:	js     0x4130dd
  4130de:	call   0x97d8caf3
  4130e3:	dec    eax
  4130e4:	retf   0xa94e
  4130e7:	lods   eax,DWORD PTR ds:[esi]
  4130e8:	loope  0x41306f
  4130ea:	sbb    eax,0xbe4c9af9
  4130ef:	add    al,0x13
  4130f1:	inc    edi
  4130f2:	test   eax,0x7770c401
  4130f7:	jecxz  0x4130a4
  4130f9:	sub    BYTE PTR [eax],bh
  4130fb:	cmp    edx,edx
  4130fd:	sbb    BYTE PTR [ebx+0x12661d70],dl
  413103:	inc    edi
  413104:	inc    eax
  413105:	cmova  ebp,DWORD PTR [eax+0x57c19998]
  41310c:	scas   al,BYTE PTR es:[edi]
  41310d:	(bad)  
  41310e:	jp     0x41310b
  413110:	arpl   bp,di
  413112:	pop    edi
  413113:	call   0xafb91cd8
  413118:	mov    ecx,0x47dc03fe
  41311d:	adc    ah,bh
  41311f:	sbb    eax,0xa1e5bd7d
  413124:	push   cs
  413125:	push   cs
  413126:	out    dx,eax
  413127:	pusha  
  413128:	call   0x2120:0x83c422f9
  41312f:	jmp    0x7347:0xb78f045e
  413136:	frstor [edx-0x6d]
  413139:	sbb    BYTE PTR [ebx],ch
  41313b:	shl    DWORD PTR [edx-0x2d],cl
  41313e:	lahf   
  41313f:	cmp    esi,ebx
  413141:	fdiv   st(0),st
  413143:	int    0x75
  413145:	push   esi
  413146:	and    ch,bl
  413148:	cmc    
  413149:	mov    esi,0xa8880022
  41314e:	lods   al,BYTE PTR ds:[esi]
  41314f:	mov    ds:0x4bd618c8,al
  413154:	jb     0x413138
  413156:	inc    edx
  413157:	into   
  413158:	jo     0x4130f9
  41315a:	cs aas 
  41315c:	fst    st(3)
  41315e:	inc    edx
  41315f:	int3   
  413160:	imul   ecx,DWORD PTR [eax],0xfffffffc
  413163:	inc    ebx
  413164:	xlat   BYTE PTR ds:[ebx]
  413165:	cmp    BYTE PTR [edi+ebx*4],0x13
  413169:	or     ax,bp
  41316c:	int    0xa8
  41316e:	mov    ebx,0x8c4480f7
  413173:	fwait
  413174:	int3   
  413175:	jbe    0x41316d
  413177:	aaa    
  413178:	sqrtps xmm3,xmm1
  41317b:	(bad)  
  41317c:	into   
  41317d:	pop    ss
  41317e:	mov    cl,0xd6
  413180:	out    0x46,al
  413182:	adc    edi,DWORD PTR [ebx+0x185a0160]
  413188:	mov    dh,0x74
  41318a:	push   esi
  41318b:	inc    edx
  41318c:	sub    BYTE PTR [ebx-0x60],cl
  41318f:	pop    es
  413190:	enter  0x3b42,0x64
  413194:	mov    eax,ds:0x30af5d3a
  413199:	mov    ah,0xaa
  41319b:	fnsave [edi+0x3956d9e0]
  4131a1:	add    al,0xe7
  4131a3:	inc    ebp
  4131a4:	hlt    
  4131a5:	inc    BYTE PTR [ebx]
  4131a7:	aad    0xd1
  4131a9:	jmp    0x39f3eb01
  4131ae:	and    ch,BYTE PTR [esi+eiz*8+0x71]
  4131b2:	jne    0x4131dd
  4131b4:	cmp    eax,0xb4e20db2
  4131b9:	jecxz  0x4131ba
  4131bb:	imul   ebp,eax,0xffffffae
  4131be:	sbb    DWORD PTR [ebp+0x33c04eef],edi
  4131c4:	xor    eax,DWORD PTR [ecx+0x537090bb]
  4131ca:	mov    esi,0x1a55fcd1
  4131cf:	jp     0x41321a
  4131d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131d2:	inc    edx
  4131d3:	fld    TBYTE PTR [ebx+0x6f]
  4131d6:	mov    dh,0x49
  4131d8:	push   esi
  4131d9:	dec    esi
  4131da:	retf   0xfaa8
  4131dd:	dec    ebx
  4131de:	xchg   edx,eax
  4131df:	ja     0x413214
  4131e1:	xchg   edi,eax
  4131e2:	or     DWORD PTR cs:[edi],ebp
  4131e5:	or     eax,DWORD PTR [esp+edx*8]
  4131e8:	fistp  QWORD PTR [ebx+0x1ecc226f]
  4131ee:	out    0x9e,al
  4131f0:	icebp  
  4131f1:	xchg   DWORD PTR ds:0xd899505e,esi
  4131f7:	adc    BYTE PTR [eax+0x1f1664a4],ah
  4131fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131fe:	jge    0x4131cd
  413200:	leave  
  413201:	in     eax,0xe8
  413203:	xlat   BYTE PTR ds:[ebx]
  413204:	sub    eax,0xa75375b1
  413209:	sbb    dl,BYTE PTR [ebx]
  41320b:	jmp    0xa59e:0xb1291a4c
  413212:	gs je  0x4131a1
  413215:	and    ebp,edx
  413217:	pop    esi
  413218:	enter  0xd503,0x9e
  41321c:	or     dh,BYTE PTR [edx]
  41321e:	cli    
  41321f:	or     esi,DWORD PTR [edx+0x46]
  413222:	cmp    edx,esp
  413224:	je     0x4131c0
  413226:	xor    eax,0xcd259fee
  41322b:	ss in  eax,0xb7
  41322e:	jbe    0x41321a
  413230:	jb     0x41327e
  413232:	lods   eax,DWORD PTR ds:[esi]
  413233:	in     eax,dx
  413234:	aaa    
  413235:	jne    0x4131ed
  413237:	pop    eax
  413238:	mov    ebp,0x839e0feb
  41323d:	mov    edi,0x34e3cc1c
  413242:	mov    BYTE PTR [ecx+0x608c5f64],ch
  413248:	and    BYTE PTR [edx+0xc],bh
  41324b:	ins    BYTE PTR es:[edi],dx
  41324c:	lods   eax,DWORD PTR gs:[esi]
  41324e:	mov    WORD PTR [ecx],ss
  413250:	xchg   esp,eax
  413251:	jle    0x41328f
  413253:	shrd   DWORD PTR [eax],ecx,0x76
  413257:	adc    al,0x68
  413259:	inc    eax
  41325a:	int    0xe7
  41325c:	ds cmc 
  41325e:	popf   
  41325f:	and    edx,DWORD PTR [eax+0x13ce151d]
  413265:	cs repnz in eax,dx
  413268:	sbb    edx,edi
  41326a:	sar    DWORD PTR [edi+0x4ce53bfc],1
  413270:	mov    edi,0x4cf06316
  413275:	push   cs
  413276:	call   0x85aa:0x38aed3e1
  41327d:	enter  0x79ab,0x4b
  413281:	mov    bh,0x15
  413283:	in     eax,0xf8
  413285:	test   BYTE PTR [eax+0x4e],dl
  413288:	mov    edi,DWORD PTR [ebp-0x2a29e1f4]
  41328e:	sbb    al,0x37
  413290:	(bad)  
  413291:	aad    0xdd
  413293:	fwait
  413294:	mov    ch,0x95
  413296:	lods   al,BYTE PTR ds:[esi]
  413297:	mov    edx,0xb4a7728
  41329c:	mov    dh,0x68
  41329e:	lock pop esp
  4132a0:	dec    DWORD PTR [edx-0x5]
  4132a3:	mov    edi,0x452aad4a
  4132a8:	lea    edx,[ecx+0x3e]
  4132ab:	mov    bl,0xd7
  4132ad:	sub    al,0xd1
  4132af:	fsub   st,st(0)
  4132b1:	popf   
  4132b2:	cmp    al,0x98
  4132b4:	or     eax,0x644d9721
  4132b9:	es adc al,0x46
  4132bc:	pop    ds
  4132bd:	mov    WORD PTR [ebx+0x61],fs
  4132c0:	dec    ecx
  4132c1:	sub    BYTE PTR [ecx-0x79779f0e],ah
  4132c7:	xchg   cl,bl
  4132c9:	cmp    DWORD PTR [edx+ecx*4+0x19e6ebd6],ebx
  4132d0:	cwde   
  4132d1:	inc    eax
  4132d2:	cmp    dl,dl
  4132d4:	dec    ecx
  4132d5:	xor    BYTE PTR [edi],dh
  4132d7:	or     ebx,DWORD PTR [ebx+0x36463b51]
  4132dd:	mov    esi,0x69dd4c81
  4132e2:	test   eax,0x45462e6a
  4132e7:	push   0xc105cb91
  4132ec:	sar    DWORD PTR [ebx+edx*8-0x75],1
  4132f0:	aad    0xd3
  4132f2:	(bad)  
  4132f4:	xor    al,0xfa
  4132f6:	mov    ?,WORD PTR [ebx+0x60]
  4132f9:	inc    eax
  4132fa:	or     esp,eax
  4132fc:	in     eax,dx
  4132fd:	pop    esi
  4132fe:	add    eax,0x4d13dfa4
  413303:	retf   0xd9d9
  413306:	push   0x5f
  413308:	mov    dl,0x49
  41330a:	pop    esp
  41330b:	aad    0xad
  41330d:	jmp    edi
  41330f:	bound  ebp,QWORD PTR [esi+edi*4+0x68b144aa]
  413316:	mov    al,0xba
  413318:	frstor [ecx]
  41331a:	push   esi
  41331b:	cdq    
  41331c:	les    esi,FWORD PTR [ecx-0x32]
  41331f:	stos   DWORD PTR es:[edi],eax
  413320:	push   esp
  413321:	aas    
  413322:	(bad)  
  413323:	push   esp
  413324:	inc    esp
  413325:	jp     0x41331e
  413327:	push   ds
  413328:	adc    cl,BYTE PTR [ecx+0x10]
  41332b:	mov    cl,0xfd
  41332d:	or     bl,BYTE PTR [esi-0x54]
  413330:	lock pop edi
  413332:	cmp    bl,ah
  413334:	jae    0x41335b
  413336:	jl     0x413340
  413338:	jae    0x4132fc
  41333a:	pop    eax
  41333b:	test   al,0x9e
  41333d:	out    dx,al
  41333e:	imul   ebx,ecx,0x4f
  413341:	mov    edi,0x107b6687
  413346:	xor    ebx,DWORD PTR [esi]
  413348:	jp     0x413372
  41334a:	or     DWORD PTR [edi],esp
  41334c:	icebp  
  41334d:	and    ebp,ecx
  41334f:	mov    ?,WORD PTR [eax-0x76]
  413352:	iret   
  413353:	leave  
  413354:	jnp    0x4133a3
  413356:	ds fucom st(0)
  413359:	dec    ecx
  41335a:	ins    DWORD PTR es:[edi],dx
  41335b:	or     BYTE PTR [esi-0x1f],ch
  41335e:	cli    
  41335f:	jmp    0xb6876fe6
  413364:	adc    dh,BYTE PTR [esi]
  413366:	cmp    esp,edx
  413368:	mov    es,edi
  41336a:	popa   
  41336b:	fwait
  41336c:	fwait
  41336d:	lock cmc 
  41336f:	inc    esi
  413370:	pop    es
  413371:	call   0x4fb6:0x271a1215
  413378:	into   
  413379:	adc    ebx,DWORD PTR [ecx]
  41337b:	jne    0x41335d
  41337d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41337e:	sti    
  41337f:	inc    edx
  413380:	(bad)  
  413381:	mov    eax,0x1d6773e4
  413386:	pusha  
  413387:	aas    
  413388:	xchg   DWORD PTR [ecx+ecx*2-0x11],esp
  41338c:	push   ecx
  41338d:	dec    ecx
  41338e:	dec    eax
  41338f:	ret    
  413390:	js     0x413326
  413392:	inc    ebp
  413393:	or     dh,bh
  413395:	(bad)  
  413397:	jmp    0x210c92e7
  41339c:	jbe    0x4133f3
  41339e:	jmp    0x42bf:0x188a28c0
  4133a5:	das    
  4133a6:	lods   al,BYTE PTR ds:[esi]
  4133a7:	xchg   DWORD PTR [edx+0x4b],eax
  4133aa:	pop    ecx
  4133ab:	sahf   
  4133ac:	xchg   esi,eax
  4133ad:	jmp    0xd3765c0f
  4133b2:	mul    DWORD PTR [edi]
  4133b4:	jmp    0x4089:0xbd4f1556
  4133bb:	lea    ebx,[ebx]
  4133bd:	mov    eax,0x7e736b5d
  4133c2:	in     al,0x9
  4133c4:	jne    0x4133e6
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	jp     0x413380
  4133c9:	ins    BYTE PTR es:[di],dx
  4133cb:	aad    0x11
  4133cd:	int    0xd
  4133cf:	xchg   esp,eax
  4133d0:	xchg   DWORD PTR [edi+eiz*1-0x77ccde86],ebp
  4133d7:	push   eax
  4133d8:	inc    ebx
  4133d9:	in     eax,dx
  4133da:	sbb    al,0xc9
  4133dc:	test   BYTE PTR [ebp+0x15],dh
  4133df:	test   al,0xe5
  4133e1:	mov    cl,0xfd
  4133e3:	retf   0x214c
  4133e6:	xor    dh,BYTE PTR [edi-0x657e59f4]
  4133ec:	out    dx,al
  4133ed:	ja     0x413448
  4133ef:	cmp    DWORD PTR [edx+0x368990b0],ebp
  4133f5:	xor    al,0x94
  4133f7:	jmp    0x5e4a663f
  4133fc:	adc    al,0x2d
  4133fe:	mov    eax,0xe1239c3c
  413403:	xor    BYTE PTR [ecx+0x8],0xda
  413407:	popf   
  413408:	ja     0x4133ef
  41340a:	pushf  
  41340b:	aaa    
  41340c:	push   0x6bb3348f
  413411:	clc    
  413412:	jns    0x4133f9
  413414:	loopne 0x4133ad
  413416:	out    0x1a,eax
  413418:	and    DWORD PTR [esi+0x7e9d492a],esp
  41341e:	test   esi,ecx
  413420:	xor    dl,BYTE PTR [eax+0x35]
  413423:	in     eax,0xe
  413425:	pop    edx
  413426:	push   DWORD PTR [ecx]
  413428:	add    BYTE PTR [ebx],dl
  41342a:	xchg   esp,eax
  41342b:	adc    BYTE PTR [esi+esi*4+0x656ca146],0x4a
  413433:	mov    dl,0xa7
  413435:	in     eax,dx
  413436:	xchg   ebp,eax
  413437:	fdivr  QWORD PTR [edi+0x34]
  41343a:	sbb    al,0xc4
  41343c:	enter  0x2204,0x26
  413440:	nop
  413441:	cmp    dl,dh
  413443:	xchg   ebp,eax
  413444:	into   
  413445:	inc    eax
  413446:	aad    0x95
  413448:	inc    ebx
  413449:	es in  al,dx
  41344b:	in     al,0x9
  41344d:	sub    BYTE PTR [ebp+0x2f],0x42
  413451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413452:	pushf  
  413453:	push   edx
  413454:	sbb    al,0x99
  413456:	shr    BYTE PTR [ecx+0x5d],1
  413459:	push   eax
  41345a:	int    0x62
  41345c:	add    edx,DWORD PTR [ebp-0x2f65bb08]
  413462:	popa   
  413463:	sbb    BYTE PTR [esi],dl
  413465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413466:	jae    0x4134b5
  413468:	lods   al,BYTE PTR ds:[esi]
  413469:	mov    edi,0x22e6657b
  41346e:	call   DWORD PTR [ecx+0x25]
  413471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413472:	mov    ebp,0x4a3342e0
  413477:	push   ebp
  413478:	xchg   esi,eax
  413479:	mov    ds:0x18b4a27d,eax
  41347e:	call   0x124139bd
  413483:	pop    edi
  413484:	jae    0x41344e
  413486:	and    al,0xa5
  413488:	call   0x21c2:0xe00a7108
  41348f:	imul   esp,DWORD PTR [edx-0x6],0x56520831
  413496:	ds leave 
  413498:	arpl   WORD PTR [eax-0x1c],si
  41349b:	scas   al,BYTE PTR es:[edi]
  41349c:	aam    0x8d
  41349e:	push   0xffffffb4
  4134a0:	mov    al,ds:0x1e720954
  4134a5:	addr16 xchg ecx,eax
  4134a7:	inc    edi
  4134a8:	cld    
  4134a9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4134ab:	jne    0x4134a3
  4134ad:	out    0xfb,al
  4134af:	in     eax,0x39
  4134b1:	mov    ah,0x47
  4134b3:	mov    ah,BYTE PTR [ebx+0x7f]
  4134b6:	cmc    
  4134b7:	sbb    DWORD PTR [esi-0x6923258],ebp
  4134bd:	mov    cs,WORD PTR cs:0x444234e8
  4134c4:	retf   
  4134c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134c6:	xor    BYTE PTR [eax],0xfd
  4134c9:	cmc    
  4134ca:	stc    
  4134cb:	int    0x77
  4134cd:	push   eax
  4134ce:	(bad)  
  4134cf:	aaa    
  4134d0:	fwait
  4134d1:	out    0x5a,eax
  4134d3:	adc    BYTE PTR [ecx],cl
  4134d5:	mov    edx,?
  4134d7:	jo     0x4134b6
  4134d9:	pop    esi
  4134da:	add    ebp,DWORD PTR [edx-0x70]
  4134dd:	ret    0x351b
  4134e0:	add    al,0xdc
  4134e2:	push   ss
  4134e3:	or     ecx,DWORD PTR [edi+0x58]
  4134e6:	mov    ?,ebp
  4134e8:	sbb    ecx,DWORD PTR [ebp+0x9]
  4134eb:	xbegin 0x1ceaad33
  4134f1:	mov    ch,BYTE PTR [edx+0x4a6d0985]
  4134f7:	add    dl,BYTE PTR [edi]
  4134f9:	fisub  WORD PTR [ecx+0x1f83da63]
  4134ff:	(bad)  
  413501:	ins    BYTE PTR es:[edi],dx
  413502:	inc    ebp
  413503:	imul   esp,DWORD PTR [eax],0xffffffb3
  413506:	push   esp
  413507:	dec    esi
  413508:	and    al,0xfe
  41350a:	pushf  
  41350b:	in     eax,dx
  41350c:	push   0xfe5fce25
  413511:	xor    ebx,DWORD PTR [ebp+0x62]
  413514:	and    al,0x3c
  413516:	mov    al,0xfb
  413518:	cmp    BYTE PTR [esi],ah
  41351a:	aam    0x59
  41351c:	and    al,0x58
  41351e:	xchg   ebx,eax
  41351f:	mov    WORD PTR [edx+0x2],cs
  413522:	cli    
  413523:	xchg   ecx,eax
  413524:	call   0x3083877c
  413529:	and    BYTE PTR [ebx],cl
  41352b:	mov    edi,0xc2265df4
  413530:	icebp  
  413531:	stos   BYTE PTR es:[edi],al
  413532:	mov    gs:0xed1b24e,eax
  413538:	(bad)  
  413539:	fisub  WORD PTR [ebp-0x4c]
  41353c:	and    edi,ebp
  41353e:	pop    ecx
  41353f:	imul   ecx,eax,0xffffffe8
  413542:	cwde   
  413543:	sbb    eax,0x1ab6262c
  413548:	addr16 xchg ebp,eax
  41354a:	pop    ds
  41354b:	ins    DWORD PTR es:[edi],dx
  41354c:	add    ah,BYTE PTR [ecx-0x4a]
  41354f:	dec    esi
  413550:	dec    ebp
  413551:	xor    BYTE PTR [edi+0x57],bl
  413554:	jl     0x413500
  413556:	in     al,0x42
  413558:	inc    ebp
  413559:	push   es
  41355a:	test   eax,0xbb2e8498
  41355f:	std    
  413560:	rcl    DWORD PTR [esi+ebp*4+0x11],cl
  413564:	je     0x4135b5
  413566:	sbb    al,0xb8
  413568:	shl    BYTE PTR [edi-0x5c],0xaa
  41356c:	leave  
  41356d:	in     al,dx
  41356e:	retf   0xe8ae
  413571:	out    dx,al
  413572:	mov    ds:0xb650b116,eax
  413577:	stc    
  413578:	dec    ebx
  413579:	mov    BYTE PTR [ecx+ecx*2],0x1c
  41357d:	push   eax
  41357e:	dec    edi
  41357f:	je     0x413519
  413581:	test   BYTE PTR ds:0x4add70fc,dh
  413587:	jl     0x413548
  413589:	add    al,0x85
  41358b:	fdiv   st(1),st
  41358d:	and    al,0x37
  41358f:	sti    
  413590:	add    ebp,DWORD PTR [ebp+0x5c]
  413593:	push   esp
  413594:	sub    ecx,DWORD PTR [ecx]
  413596:	hlt    
  413597:	add    BYTE PTR [eax-0x3b],ch
  41359a:	sbb    BYTE PTR [ebx+0x6f],bh
  41359d:	fidiv  WORD PTR [edi-0x71]
  4135a0:	push   esi
  4135a1:	bound  edi,QWORD PTR [ebx+0x400777eb]
  4135a7:	adc    ch,BYTE PTR [esi-0x18]
  4135aa:	adc    al,al
  4135ac:	jmp    0xab054b43
  4135b1:	inc    ebx
  4135b2:	mov    ch,0x86
  4135b4:	shr    BYTE PTR [esp+eax*2-0xdc18e18],cl
  4135bb:	add    ebp,DWORD PTR [ecx-0x2f6b16fd]
  4135c1:	bound  edx,QWORD PTR [esi-0x3e61d0be]
  4135c7:	add    ebp,DWORD PTR [ebx+0x2146ec63]
  4135cd:	cmp    DWORD PTR [eax-0x26fcebfd],ebx
  4135d3:	adc    esp,ecx
  4135d5:	xlat   BYTE PTR ds:[ebx]
  4135d6:	adc    BYTE PTR [ecx+eax*8-0x65],dh
  4135da:	inc    edx
  4135db:	sub    BYTE PTR [edx-0x7d],0xb1
  4135df:	fdivr  DWORD PTR [esi]
  4135e1:	shl    BYTE PTR [ecx+0x1c80e33f],1
  4135e7:	fcomp  DWORD PTR [edi-0x72]
  4135ea:	ja     0x4135bc
  4135ec:	fild   DWORD PTR [esi-0x2]
  4135ef:	dec    edx
  4135f0:	dec    eax
  4135f1:	js     0x4135ce
  4135f3:	loope  0x413610
  4135f5:	shl    DWORD PTR [ebp-0x1cedf1e2],1
  4135fb:	(bad)  [eax+edx*4]
  4135fe:	jnp    0x41365e
  413600:	popa   
  413601:	cmp    BYTE PTR [edx+0x74],bl
  413604:	xor    BYTE PTR [ebp-0xf2d3181],al
  41360a:	push   ebx
  41360b:	jl     0x41366f
  41360d:	sbb    al,0xf0
  41360f:	fldcw  WORD PTR [edi-0x35]
  413612:	jl     0x413599
  413614:	push   cs
  413615:	sbb    ah,ch
  413617:	ja     0x4135d3
  413619:	ja     0x4135f7
  41361b:	test   eax,0x5959ba2e
  413620:	retf   0x3a14
  413623:	clc    
  413624:	jle    0x413607
  413626:	dec    edx
  413627:	cmp    edi,DWORD PTR [ebx-0x748ca74e]
  41362d:	fs mov ebp,0xd5250b07
  413633:	and    edi,DWORD PTR [esi+0x20c8c5f4]
  413639:	xor    edi,ebp
  41363b:	nop
  41363c:	add    al,0x6b
  41363e:	es and eax,0xfa738398
  413644:	test   al,0xcf
  413646:	fisubr DWORD PTR [ecx+0x3d45c5e2]
  41364c:	adc    eax,0xd172e314
  413651:	jge    0x4135ee
  413653:	sbb    cl,BYTE PTR [ecx+eax*2-0x1359a00d]
  41365a:	out    dx,al
  41365b:	adc    dl,ah
  41365d:	pop    ss
  41365e:	pusha  
  41365f:	(bad)  [ebp-0x75ef5645]
  413665:	loopne 0x413658
  413667:	cli    
  413668:	and    ch,BYTE PTR [esi]
  41366a:	kunpckwd k5,k1,k5
  41366e:	lods   eax,DWORD PTR ds:[esi]
  41366f:	ss inc edi
  413671:	pop    eax
  413672:	dec    ebx
  413673:	call   0xc379301c
  413678:	inc    eax
  413679:	gs or  eax,0x8e81a6d7
  41367f:	cmp    dh,al
  413681:	inc    eax
  413682:	xor    bh,BYTE PTR [edi+0xe]
  413685:	mov    ebx,0xacb1da52
  41368a:	shl    DWORD PTR [edi],0x8a
  41368d:	sub    al,bh
  41368f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413690:	ja     0x4136d4
  413692:	mov    ch,0xc9
  413694:	jp     0x413625
  413696:	mov    bl,0xbc
  413698:	das    
  413699:	mov    eax,0x5ed257bd
  41369e:	lea    ecx,[edx]
  4136a0:	sbb    edx,ebp
  4136a2:	(bad)  
  4136a3:	rcr    BYTE PTR fs:[eax],1
  4136a6:	scas   al,BYTE PTR es:[edi]
  4136a7:	cmp    DWORD PTR [esp+ecx*8-0x5b76e659],ebx
  4136ae:	mov    al,ds:0xd42b4ede
  4136b3:	push   ebp
  4136b4:	out    0x5f,al
  4136b6:	add    BYTE PTR [esi-0x3d266b5a],dh
  4136bc:	leave  
  4136bd:	mov    ch,0x88
  4136bf:	add    esi,DWORD PTR [esi+0x42]
  4136c2:	mov    ebx,0x32d18901
  4136c7:	loop   0x4136fa
  4136c9:	mov    esi,0x7bf19824
  4136ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136cf:	sub    dl,dl
  4136d1:	fwait
  4136d2:	add    al,0x74
  4136d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136d5:	mov    fs,WORD PTR [eax-0x1e2ea414]
  4136db:	push   edx
  4136dc:	sub    edi,DWORD PTR [edi]
  4136de:	push   edi
  4136df:	les    ecx,FWORD PTR [ecx+0x4273503b]
  4136e5:	mov    ebx,0x96588d27
  4136ea:	xchg   esi,eax
  4136eb:	cmp    al,0x65
  4136ed:	or     bh,BYTE PTR [eax+0x5c]
  4136f0:	sbb    DWORD PTR [ebp-0x51],edx
  4136f3:	pop    edx
  4136f4:	jae    0x41370e
  4136f6:	lods   al,BYTE PTR ds:[esi]
  4136f7:	adc    al,0x70
  4136f9:	dec    esi
  4136fa:	pop    ss
  4136fb:	ins    BYTE PTR es:[edi],dx
  4136fc:	(bad)  
  4136fd:	popf   
  4136fe:	loopne 0x4136fb
  413700:	and    al,0xf7
  413702:	mov    dh,0x61
  413704:	mov    bh,0xb2
  413706:	fwait
  413707:	sti    
  413708:	rcr    al,cl
  41370a:	pushf  
  41370b:	pusha  
  41370c:	das    
  41370d:	fiadd  WORD PTR [edi]
  41370f:	out    dx,al
  413710:	jne    0x413781
  413712:	mov    eax,ds:0xafd45fba
  413717:	mov    esp,0xb22d98c4
  41371c:	es ins BYTE PTR es:[edi],dx
  41371e:	xor    al,0x70
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	jmp    0xb2e8:0x483de117
  413728:	push   0xffffffa5
  41372a:	inc    esp
  41372b:	test   DWORD PTR [eax+0x2f],esp
  41372e:	jmp    0x413755
  413730:	add    DWORD PTR [ebp-0x4f4c7393],eax
  413736:	mov    ebp,0xda7a7d45
  41373b:	imul   esi,DWORD PTR [ecx],0x6f
  41373e:	outs   dx,DWORD PTR ds:[esi]
  41373f:	jmp    0xab223632
  413744:	cmp    BYTE PTR [ecx-0x3ad6b5b2],0x3e
  41374b:	xor    al,0x2d
  41374d:	inc    DWORD PTR [edx-0x22]
  413750:	push   edx
  413751:	stos   DWORD PTR es:[edi],eax
  413752:	push   ebp
  413753:	pop    esi
  413754:	sar    BYTE PTR [ebx-0x2e],1
  413757:	xor    dh,dl
  413759:	sub    eax,0x4e801c2f
  41375e:	addr16 (bad) 
  413760:	xor    dh,BYTE PTR [edx]
  413762:	pop    esi
  413763:	int3   
  413764:	xchg   ecx,eax
  413765:	cmp    ebx,edi
  413767:	das    
  413768:	das    
  413769:	shl    ebp,cl
  41376b:	sub    DWORD PTR [edx+0x42b109eb],0x13225f7c
  413775:	rcl    DWORD PTR [edi],1
  413777:	fistp  QWORD PTR [ebx]
  413779:	jg     0x41375e
  41377b:	leave  
  41377c:	test   eax,0x3f31742c
  413781:	jo     0x41376a
  413783:	cmovbe ebx,DWORD PTR [esi]
  413786:	lods   eax,DWORD PTR ds:[esi]
  413787:	std    
  413788:	mov    DWORD PTR [eax+esi*2+0x1ca31ce5],esi
  41378f:	xchg   BYTE PTR [ebp+0x66],dl
  413792:	and    eax,0x80fd2660
  413797:	dec    edx
  413798:	jg     0x4137b5
  41379a:	aaa    
  41379b:	aas    
  41379c:	loope  0x413787
  41379e:	jns    0x41374f
  4137a0:	test   DWORD PTR [edi],eax
  4137a2:	jle    0x41378f
  4137a4:	aas    
  4137a5:	fcomp  QWORD PTR [ebp+0x7e]
  4137a8:	push   cs
  4137a9:	mov    edx,0x499a0f05
  4137ae:	add    bl,BYTE PTR [ecx-0x23afbd8]
  4137b4:	mov    eax,ds:0xe9a4832c
  4137b9:	pop    edi
  4137ba:	xchg   esi,eax
  4137bb:	push   0xffffff91
  4137bd:	and    cl,BYTE PTR [esi-0x60d4dda2]
  4137c3:	pop    ecx
  4137c4:	mov    ebp,0x16ef0bdf
  4137c9:	pop    edx
  4137ca:	adc    esi,DWORD PTR [edx+0x7c824d19]
  4137d0:	mov    ds:0x63fa2579,al
  4137d5:	scas   al,BYTE PTR es:[edi]
  4137d6:	shl    BYTE PTR [esi+0x2c2bb0a3],0xe7
  4137dd:	jge    0x4137f0
  4137df:	and    BYTE PTR [edx-0x312574f1],cl
  4137e5:	fs call 0xbde0b4bb
  4137eb:	lahf   
  4137ec:	sub    ebx,DWORD PTR [eax]
  4137ee:	fs iret 
  4137f0:	fdivr  DWORD PTR [edx-0x64]
  4137f3:	stc    
  4137f4:	and    eax,0x7edca561
  4137f9:	ja     0x413845
  4137fb:	dec    esp
  4137fc:	xchg   esp,eax
  4137fd:	les    esp,FWORD PTR [eax-0x2816dee8]
  413803:	inc    ecx
  413804:	and    BYTE PTR [edi+0x4de9b1ee],ch
  41380a:	pop    ss
  41380b:	test   ah,dl
  41380d:	mov    ss,WORD PTR [edx-0x3c834a85]
  413813:	js     0x4137ad
  413815:	out    dx,al
  413816:	or     al,0x9f
  413819:	cmc    
  41381a:	ds scas eax,DWORD PTR es:[edi]
  41381c:	inc    eax
  41381d:	enter  0x69a8,0x58
  413821:	iret   
  413822:	xor    eax,0x3203ab50
  413827:	or     eax,0xbf20c572
  41382c:	dec    esp
  41382d:	and    al,0x6e
  41382f:	stos   BYTE PTR es:[edi],al
  413830:	bound  edi,QWORD PTR [di+0x59af]
  413835:	icebp  
  413836:	dec    DWORD PTR [edx+0x27292934]
  41383c:	mov    eax,0xfe722ddd
  413841:	lahf   
  413842:	xchg   ecx,eax
  413843:	mov    ecx,0xbe87c45
  413848:	mov    dh,BYTE PTR [ebp+0x5]
  41384b:	xor    ebx,0xee80c5e3
  413851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413852:	sub    al,BYTE PTR [ebx-0x4b]
  413855:	jne    0x4137ec
  413857:	mov    esp,0x8eb83a9e
  41385c:	mov    ah,0x99
  41385e:	push   ds
  41385f:	cld    
  413860:	jmp    0x41385a
  413862:	lods   al,BYTE PTR ds:[esi]
  413863:	ret    
  413864:	mov    edx,0x7324a512
  413869:	inc    esp
  41386a:	xchg   esi,eax
  41386b:	pop    eax
  41386c:	ficomp WORD PTR [eax]
  41386e:	jge    0x4138df
  413870:	in     al,0x34
  413872:	in     eax,0x28
  413874:	pop    esp
  413875:	pop    ecx
  413876:	(bad)  
  413877:	jno    0x413838
  413879:	jmp    0x7ee2:0xe0fe7829
  413880:	push   ds
  413881:	sub    al,0x11
  413883:	lock sbb BYTE PTR [ecx],bl
  413886:	jns    0x4138b5
  413888:	loop   0x413902
  41388a:	push   ss
  41388b:	jbe    0x4138bd
  41388d:	das    
  41388e:	adc    BYTE PTR [esi+0x70],0x24
  413892:	add    al,0xb
  413894:	add    eax,0xdfc6e4da
  413899:	push   eax
  41389a:	pop    esp
  41389b:	pop    esi
  41389c:	adc    ecx,edx
  41389e:	sub    cl,BYTE PTR [eax]
  4138a0:	xchg   esp,eax
  4138a1:	cmp    eax,0x455a2a2d
  4138a6:	es mov bl,0x53
  4138a9:	retf   
  4138aa:	popa   
  4138ab:	out    0x18,eax
  4138ad:	(bad)  
  4138ae:	mov    eax,0xfa9d763f
  4138b3:	cmp    dl,dl
  4138b5:	out    dx,eax
  4138b6:	sub    BYTE PTR [esi-0x14],ch
  4138b9:	cwde   
  4138ba:	lock repnz fild QWORD PTR [ebp-0x5e2b3e2a]
  4138c2:	mov    esp,0xeb01d3d8
  4138c7:	xchg   esp,eax
  4138c8:	fidiv  WORD PTR [edi]
  4138ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138cb:	push   es
  4138cc:	int    0x7a
  4138ce:	lea    ecx,[eax+edi*4+0x7d]
  4138d2:	mov    dl,0x3e
  4138d4:	sub    BYTE PTR [edx],bl
  4138d6:	jb     0x4138a4
  4138d8:	gs pop esp
  4138da:	dec    edi
  4138db:	sbb    al,0x7d
  4138dd:	ja     0x4138d8
  4138df:	xchg   ebp,eax
  4138e0:	sti    
  4138e1:	mov    cl,0x59
  4138e3:	mov    BYTE PTR [esi+eiz*1],dl
  4138e6:	cmp    cl,0x8a
  4138e9:	pushf  
  4138ea:	pop    ecx
  4138eb:	lahf   
  4138ec:	(bad)  
  4138ed:	ins    BYTE PTR es:[edi],dx
  4138ee:	rcl    DWORD PTR [ecx-0x54c90ef],0x1d
  4138f5:	ficom  DWORD PTR [esi-0x57828cdc]
  4138fb:	cmp    DWORD PTR [ebp-0x7b3422c5],edx
  413901:	sbb    esi,ebx
  413903:	loop   0x413984
  413905:	jmp    DWORD PTR [ebx-0x40]
  413908:	sbb    BYTE PTR [ebx+ecx*4+0x5c],0x9b
  41390d:	fcmovbe st,st(4)
  41390f:	xchg   edx,eax
  413910:	retf   0xf2ad
  413913:	jmp    0x74aa6a16
  413918:	dec    eax
  413919:	lock pop ebx
  41391b:	sbb    BYTE PTR [eax+0x1113b2c3],al
  413921:	push   ds
  413922:	sbb    eax,0x88befb16
  413927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413928:	mov    ch,0x71
  41392a:	into   
  41392b:	fwait
  41392c:	mov    dl,0x9e
  41392e:	ins    BYTE PTR es:[edi],dx
  41392f:	int3   
  413930:	clc    
  413931:	icebp  
  413932:	out    0xf,eax
  413934:	clc    
  413935:	repz call 0xa003:0xa1ccf2b5
  41393d:	xor    edi,DWORD PTR [ecx+eiz*1+0x33]
  413941:	dec    edx
  413942:	fcmovbe st,st(1)
  413944:	or     DWORD PTR [ebp+0x4e],esp
  413947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413948:	adc    dl,BYTE PTR [ebx]
  41394a:	sbb    DWORD PTR [ecx+ebx*8+0x4b],esi
  41394e:	mov    ds:0x2e2c6661,eax
  413953:	push   eax
  413954:	cdq    
  413955:	add    BYTE PTR [edx+0x4f],cl
  413958:	mov    esp,0x97431b95
  41395d:	imul   eax,esp,0xee338450
  413963:	ins    DWORD PTR es:[edi],dx
  413964:	pop    esp
  413966:	and    edx,DWORD PTR [ebx]
  413968:	or     DWORD PTR [edx+0x6b5dad3f],esp
  41396e:	lds    edi,FWORD PTR [eax]
  413970:	mov    ecx,0xcda8a4d7
  413975:	and    cl,BYTE PTR [eax-0x6f1ece57]
  41397b:	mov    BYTE PTR [ebp+0x187f36fa],bl
  413981:	scas   al,BYTE PTR es:[edi]
  413982:	ss int 0x68
  413985:	push   ss
  413986:	push   ebx
  413987:	ret    
  413988:	int3   
  413989:	inc    esp
  41398a:	fisttp QWORD PTR [ebp-0x35]
  41398d:	xor    ch,BYTE PTR [ebx-0x57abb8e2]
  413993:	mov    ds:0x8fdef880,al
  413998:	dec    ebp
  413999:	je     0x4139fb
  41399b:	(bad)  
  41399c:	fmul   st(1),st
  41399e:	call   0xd5f6:0x76d43074
  4139a5:	mov    esp,0xfea22c5c
  4139aa:	repnz mov ah,0xbb
  4139ad:	jno    0x413933
  4139af:	push   esi
  4139b0:	(bad)  
  4139b2:	scas   al,BYTE PTR es:[edi]
  4139b3:	data16 fsubr QWORD PTR [edx+0x66]
  4139b7:	add    al,0x5d
  4139b9:	jp     0x41399e
  4139bb:	(bad)  
  4139bc:	push   0x57
  4139be:	pop    edx
  4139bf:	scas   al,BYTE PTR es:[edi]
  4139c0:	cmp    esi,esp
  4139c2:	and    eax,0xba05e3e1
  4139c7:	mov    al,0x2b
  4139c9:	push   esi
  4139ca:	ss clc 
  4139cc:	xor    eax,0x4972269
  4139d1:	inc    esp
  4139d2:	cmp    BYTE PTR [edi+0x50fd8f94],0x4f
  4139d9:	lods   eax,DWORD PTR ds:[esi]
  4139da:	std    
  4139db:	and    al,0xf
  4139dd:	sub    BYTE PTR [ebx+edx*8],ah
  4139e0:	and    ch,BYTE PTR [ebx-0x1dcb5ce7]
  4139e6:	loopne 0x4139bc
  4139e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139e9:	lods   al,BYTE PTR ds:[esi]
  4139ea:	xor    al,0x45
  4139ec:	dec    edi
  4139ed:	outs   dx,BYTE PTR ds:[esi]
  4139ee:	mov    edi,0xac77f602
  4139f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139f4:	dec    ecx
  4139f5:	(bad)  
  4139f6:	xchg   edx,eax
  4139f7:	pop    esp
  4139f8:	outs   dx,BYTE PTR ds:[esi]
  4139f9:	jns    0x4139d5
  4139fb:	pop    ss
  4139fc:	or     eax,DWORD PTR [esi+0x1b6fed5f]
  413a02:	ja     0x4139ed
  413a04:	push   ebx
  413a05:	xchg   edi,eax
  413a06:	(bad)  
  413a07:	fisub  DWORD PTR [ebx]
  413a09:	push   ecx
  413a0a:	add    esi,DWORD PTR [edi-0x347e0c21]
  413a10:	stc    
  413a11:	or     edx,esi
  413a13:	jmp    0x413a56
  413a15:	pop    es
  413a16:	sbb    esi,DWORD PTR [edx+ebp*4+0x18a2fc45]
  413a1d:	outs   dx,BYTE PTR ds:[esi]
  413a1e:	loopne 0x4139ca
  413a20:	jae    0x413a39
  413a22:	mov    eax,0x47629040
  413a27:	ins    BYTE PTR es:[edi],dx
  413a28:	outs   dx,DWORD PTR ds:[esi]
  413a29:	loopne 0x413aa8
  413a2b:	loop   0x413a06
  413a2d:	xor    eax,DWORD PTR [edi]
  413a2f:	cmp    eax,0xca5f621c
  413a34:	das    
  413a35:	addr16 out 0x33,eax
  413a38:	mov    al,ds:0xe2db44a9
  413a3d:	popa   
  413a3e:	cmp    dl,BYTE PTR [esi]
  413a40:	and    al,0xcc
  413a42:	or     eax,0xb1ca9022
  413a47:	scas   al,BYTE PTR es:[edi]
  413a48:	cmp    ecx,ebp
  413a4a:	call   0x8fe8:0x1f6b61d6
  413a51:	pusha  
  413a52:	push   ecx
  413a53:	jb     0x413a29
  413a55:	xor    BYTE PTR [edx+0x66f21efc],0x65
  413a5c:	das    
  413a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a5e:	dec    ecx
  413a5f:	je     0x413a6d
  413a61:	or     cl,dl
  413a63:	icebp  
  413a64:	and    dh,BYTE PTR [esp+eax*2+0x1e]
  413a68:	mov    ?,WORD PTR [eax-0x53739df6]
  413a6e:	stos   BYTE PTR es:[edi],al
  413a6f:	(bad)  
  413a71:	xor    ah,BYTE PTR [edx+0x7528d1c2]
  413a77:	in     al,dx
  413a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a79:	lea    ebx,[edx+0x30]
  413a7c:	jl     0x413ae2
  413a7e:	push   cs
  413a7f:	add    dl,BYTE PTR [ebx]
  413a81:	rol    BYTE PTR [ebx],cl
  413a83:	cmp    eax,0xa8a77a1c
  413a88:	and    edx,DWORD PTR [ebx+0x527299b8]
  413a8e:	rcr    DWORD PTR [eax+ebp*1-0x20ab3c64],0xa
  413a96:	inc    edx
  413a97:	iret   
  413a98:	stos   DWORD PTR es:[edi],eax
  413a99:	dec    edx
  413a9a:	aam    0xc5
  413a9c:	mov    bh,0xe9
  413a9e:	data16 test BYTE PTR [edx],ch
  413aa1:	or     eax,0xebd5fca5
  413aa6:	xchg   ebp,ecx
  413aa8:	pop    ds
  413aa9:	popf   
  413aaa:	loop   0x413b07
  413aac:	imul   edi,ebx,0x29
  413aaf:	sti    
  413ab0:	ins    BYTE PTR es:[edi],dx
  413ab1:	in     al,dx
  413ab2:	cdq    
  413ab3:	mov    edx,0xcdd0c526
  413ab8:	ret    
  413ab9:	repz jg 0x413a7e
  413abc:	jns    0x413b39
  413abe:	push   ss
  413abf:	push   ecx
  413ac0:	adc    ebx,DWORD PTR [esi+0x7a]
  413ac3:	jae    0x413aa6
  413ac5:	mov    esp,0x9cdd51a6
  413aca:	jno    0x413adb
  413acc:	rcl    dl,cl
  413ace:	lea    ebp,[ecx]
  413ad0:	inc    esi
  413ad1:	add    DWORD PTR [ebx+eiz*4-0x6f],ecx
  413ad5:	dec    ebp
  413ad6:	ins    DWORD PTR es:[edi],dx
  413ad7:	dec    ebx
  413ad8:	lahf   
  413ad9:	mov    esp,0xe9a2e89b
  413ade:	ret    
  413adf:	xchg   DWORD PTR [ebx],edx
  413ae1:	leave  
  413ae2:	out    0x2b,eax
  413ae4:	bound  edx,QWORD PTR [esi+0x26]
  413ae7:	cmc    
  413ae8:	ret    
  413ae9:	xor    BYTE PTR [edi],0x5c
  413aec:	fcomp  QWORD PTR [edi]
  413aee:	jmp    0x413ac3
  413af0:	mov    ?,esp
  413af2:	pusha  
  413af3:	lods   eax,DWORD PTR ds:[esi]
  413af4:	add    BYTE PTR [esi],0xdf
  413af7:	xor    ebp,DWORD PTR [ecx+0x19]
  413afa:	pop    edi
  413afb:	fist   DWORD PTR [ecx+0x378ab8fe]
  413b01:	retf   0xad9b
  413b04:	ins    DWORD PTR es:[edi],dx
  413b05:	shl    BYTE PTR [ecx+ebx*4+0x3b4e74c9],0xe9
  413b0d:	sbb    ebp,DWORD PTR [ecx-0x7fdd12d1]
  413b13:	xor    eax,0xe3d8b42a
  413b18:	and    DWORD PTR [edx+eiz*4],0xffffffaf
  413b1c:	mov    cl,0x14
  413b1e:	jo     0x413b80
  413b20:	mov    ecx,0xc6215d6c
  413b25:	sar    DWORD PTR [ebx-0x46],1
  413b28:	loopne 0x413b53
  413b2a:	xchg   ecx,eax
  413b2b:	xchg   ebx,eax
  413b2c:	cwde   
  413b2d:	retf   0xa3b7
  413b30:	mov    edi,0x292d7ab6
  413b35:	sti    
  413b36:	dec    esp
  413b37:	xchg   esi,eax
  413b38:	jp     0x413acd
  413b3a:	inc    ebp
  413b3b:	jmp    0x769dfd7b
  413b40:	pop    esp
  413b41:	fisubr WORD PTR [esi+0x674d8467]
  413b47:	(bad)  
  413b48:	cli    
  413b49:	inc    ebx
  413b4a:	inc    ebp
  413b4b:	add    bl,ah
  413b4d:	sahf   
  413b4e:	mov    WORD PTR [edi-0xa],?
  413b51:	fdivr  st,st(7)
  413b53:	lea    ebx,[ebx]
  413b55:	clc    
  413b56:	adc    al,BYTE PTR [edx-0x54]
  413b59:	and    ah,BYTE PTR [ecx-0x2d]
  413b5c:	jbe    0x413b8a
  413b5e:	mov    ebp,0x48f3f0c4
  413b63:	pop    ecx
  413b64:	dec    esp
  413b65:	sub    edx,ebx
  413b67:	inc    ebx
  413b68:	jp     0x413bd8
  413b6a:	inc    eax
  413b6b:	xlat   BYTE PTR ds:[ebx]
  413b6c:	je     0x413b8c
  413b6e:	dec    ebx
  413b6f:	in     al,0x54
  413b71:	data16 cmp al,0xcb
  413b74:	je     0x413b79
  413b76:	std    
  413b77:	es aad 0x54
  413b7a:	xchg   BYTE PTR [esi+0x32],al
  413b7d:	push   es
  413b7e:	repnz out dx,al
  413b80:	and    ebx,DWORD PTR [esi+edx*4]
  413b83:	repz sbb al,0x91
  413b86:	jp     0x413b10
  413b88:	jnp    0x413b5e
  413b8a:	xchg   ecx,eax
  413b8b:	mov    esp,ebx
  413b8d:	bound  esp,QWORD PTR [esi]
  413b8f:	jmp    0x413b2b
  413b91:	retf   
  413b92:	cdq    
  413b93:	xchg   esp,eax
  413b94:	add    ebp,esi
  413b96:	add    eax,0x794602fb
  413b9b:	inc    ebx
  413b9c:	sbb    DWORD PTR [ebx],0x70
  413b9f:	jge    0x413c13
  413ba1:	enter  0x1cb4,0x99
  413ba5:	and    edi,DWORD PTR [ecx+0x6]
  413ba8:	in     eax,dx
  413ba9:	and    ecx,DWORD PTR [ebp+ecx*2+0x39]
  413bad:	pop    edi
  413bae:	xor    al,0xec
  413bb0:	into   
  413bb1:	mov    cl,0x7b
  413bb3:	pop    es
  413bb4:	adc    bl,ah
  413bb6:	push   eax
  413bb7:	icebp  
  413bb8:	stos   BYTE PTR es:[edi],al
  413bb9:	add    DWORD PTR [eax+0xba215d9],eax
  413bbf:	jg     0x413b7f
  413bc1:	adc    ebx,0xffffffe0
  413bc4:	int    0xc8
  413bc6:	sbb    BYTE PTR gs:[esi+ebx*4+0x20],cl
  413bcb:	pop    es
  413bcc:	xchg   ch,dl
  413bce:	(bad)  
  413bcf:	pop    edx
  413bd0:	cmp    ecx,DWORD PTR [edx-0x309478b0]
  413bd6:	mov    WORD PTR [ebp+0x5f],cs
  413bd9:	shr    edi,0x11
  413bdc:	popf   
  413bdd:	and    cl,al
  413bdf:	cmp    al,BYTE PTR [ebx]
  413be1:	out    0x41,al
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	cs mov ebx,0xab218d2d
  413d4a:	sbb    eax,0xfea18a44
  413d4f:	sub    al,BYTE PTR [edx-0x6c]
  413d52:	push   ecx
  413d53:	call   0x413d59
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
