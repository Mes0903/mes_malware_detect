
bcfe5433b3a526d91d822ef09fc341a3efffe5b6054e26837e2f44f86017dde9.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	fwait
  411001:	aad    0xe
  411003:	or     al,0x7b
  411005:	test   al,0x7d
  411007:	cwde   
  411008:	pop    ecx
  411009:	ret    0x256a
  41100c:	mov    edx,0x3350ad1b
  411011:	(bad)  
  411012:	out    dx,eax
  411013:	aam    0xc2
  411015:	imul   edx,DWORD PTR [eax+0x6c899c3b],0xffffffed
  41101c:	push   ds
  41101d:	cli    
  41101e:	adc    ebx,DWORD PTR [ebp+0x32]
  411021:	mov    ?,WORD PTR [edx+0x2ac893c]
  411027:	and    eax,0xa2774e2f
  41102c:	cmp    edx,DWORD PTR [ebp-0x41]
  41102f:	jge    0x411096
  411031:	test   bl,bl
  411033:	dec    esi
  411034:	xchg   esi,eax
  411035:	aam    0x26
  411037:	test   eax,0x33e4494b
  41103c:	and    BYTE PTR [ebx+ebp*1-0x475a880a],dl
  411043:	cmp    ch,BYTE PTR [esi-0x46]
  411046:	aad    0xcc
  411048:	popa   
  411049:	cwde   
  41104a:	sbb    al,0xf1
  41104c:	add    ch,BYTE PTR [edi]
  41104e:	inc    edx
  41104f:	and    al,0xd3
  411051:	mov    al,ds:0x7aaf30b3
  411056:	or     eax,0x4019a0d6
  41105b:	push   0x833ad9d7
  411060:	add    al,dh
  411062:	adc    ebp,DWORD PTR [edi-0xe]
  411065:	cs cwde 
  411067:	lods   eax,DWORD PTR ds:[esi]
  411068:	loope  0x411048
  41106a:	push   esp
  41106b:	xor    edx,ebp
  41106d:	pop    edi
  41106e:	cmp    DWORD PTR [edx-0x6434af08],ebp
  411074:	dec    edx
  411075:	js     0x411002
  411077:	xchg   DWORD PTR [edi+0x8],esi
  41107a:	jo     0x411025
  41107c:	shl    DWORD PTR [eax-0x41c60ee4],1
  411082:	mov    bh,0x7a
  411084:	jmp    0x41109f
  411086:	mov    ebx,0x10cc8e76
  41108b:	mov    esp,0xaeebd6f9
  411090:	mov    ds:0x2fd4682a,eax
  411095:	ins    DWORD PTR es:[edi],dx
  411096:	rcr    BYTE PTR [eax+0x14d6b540],cl
  41109c:	int    0x5f
  41109e:	xchg   DWORD PTR [ebx+0x361a818],ebp
  4110a4:	mov    ds,WORD PTR [eax+eax*8-0x39]
  4110a8:	(bad)  
  4110aa:	adc    dh,BYTE PTR [eax]
  4110ac:	sub    ah,BYTE PTR [edx-0xaa1f215]
  4110b2:	push   es
  4110b3:	dec    esp
  4110b4:	mov    WORD PTR [ecx+0x77aaf547],cs
  4110ba:	mov    eax,ds:0xe9360467
  4110bf:	mov    al,ds:0x97473d9
  4110c4:	sbb    al,0xe0
  4110c6:	aam    0xff
  4110c8:	ret    0x6d6e
  4110cb:	lods   eax,DWORD PTR ds:[esi]
  4110cc:	push   di
  4110ce:	rcr    DWORD PTR [edi],1
  4110d0:	mov    ds:0x3c0e22ef,al
  4110d5:	sbb    bl,ch
  4110d7:	fxch   st(1)
  4110d9:	scas   eax,DWORD PTR es:[edi]
  4110da:	addr16 and eax,0x9e6ff42a
  4110e0:	add    ah,bh
  4110e2:	push   ecx
  4110e3:	inc    esp
  4110e4:	dec    edi
  4110e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110e6:	dec    esi
  4110e7:	ret    
  4110e8:	stos   DWORD PTR es:[edi],eax
  4110e9:	dec    ebp
  4110ea:	dec    ebx
  4110eb:	dec    esi
  4110ec:	sbb    BYTE PTR [eax+0x5e],ah
  4110ef:	mov    ecx,0x79559101
  4110f4:	(bad)  
  4110f5:	loope  0x411143
  4110f7:	imul   eax,DWORD PTR [edx],0xffffffa1
  4110fa:	push   ss
  4110fb:	or     BYTE PTR [ebx],al
  4110fd:	sbb    ch,bh
  4110ff:	nop
  411100:	sti    
  411101:	xor    BYTE PTR [ebp+0x54],al
  411104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411105:	mov    al,ds:0xee12e7b8
  41110a:	jns    0x411162
  41110c:	test   DWORD PTR [esi-0x48],edx
  41110f:	and    bl,ah
  411111:	lahf   
  411112:	dec    ebp
  411113:	push   0xf2cef144
  411118:	(bad)  
  411119:	sar    BYTE PTR [ecx],0xcd
  41111c:	pop    edi
  41111d:	sub    al,0xca
  41111f:	rcr    BYTE PTR [eax-0x7b2ec4e],cl
  411125:	dec    edi
  411126:	add    eax,0x32d54b82
  41112b:	stos   DWORD PTR es:[edi],eax
  41112c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41112d:	test   DWORD PTR [ecx+0x779d0d80],edi
  411133:	call   0x541a:0x84ff8ae5
  41113a:	jmp    0x804e:0x5b94aa62
  411141:	push   ebx
  411142:	test   eax,0xc9a0974d
  411147:	cmp    bh,BYTE PTR ss:[edx-0x4b13cb56]
  41114e:	cmp    bl,BYTE PTR [esi]
  411150:	arpl   WORD PTR [eax+0x45],cx
  411153:	outs   dx,DWORD PTR ds:[esi]
  411154:	mov    eax,ds:0xe18ce299
  411159:	add    BYTE PTR [esp+eax*8-0x5d],ch
  41115d:	shl    DWORD PTR [esi-0x2],cl
  411160:	mov    ds:0x9826d4d6,al
  411165:	ss add al,0xae
  411168:	inc    ebx
  411169:	call   0x929b:0xab6e8d8e
  411170:	in     eax,0x4f
  411172:	jae    0x41112f
  411174:	cmp    cl,ch
  411176:	adc    al,0x2d
  411178:	mov    al,0xc7
  41117a:	add    cl,BYTE PTR [eax]
  41117c:	and    eax,0xafc856c
  411181:	lods   eax,DWORD PTR ds:[esi]
  411182:	test   BYTE PTR [eax],ah
  411184:	out    dx,eax
  411185:	aas    
  411186:	cdq    
  411187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411188:	jp     0x4111b4
  41118a:	test   eax,0xe62f7b4e
  41118f:	sub    al,0x87
  411191:	arpl   WORD PTR [ebx],di
  411193:	mov    ecx,0xb393d2b2
  411198:	enter  0xf772,0x18
  41119c:	jo     0x4111e2
  41119e:	xchg   ecx,eax
  41119f:	dec    ebx
  4111a0:	cmc    
  4111a1:	adc    eax,0x65335f3b
  4111a6:	jo     0x411225
  4111a8:	out    0x2,al
  4111aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111ab:	sub    ch,BYTE PTR [esp+edi*4+0x45]
  4111af:	and    al,0x9f
  4111b1:	add    bl,BYTE PTR [edi+edx*1-0x2154b8cb]
  4111b8:	(bad)  
  4111b9:	fnstsw WORD PTR [ecx+0x39]
  4111bc:	or     al,0xe0
  4111be:	inc    ebx
  4111bf:	jbe    0x411234
  4111c1:	push   edx
  4111c2:	jp     0x411202
  4111c4:	cmp    eax,0x2dc7f984
  4111c9:	inc    ebx
  4111ca:	xchg   DWORD PTR [esi],edi
  4111cc:	dec    ebx
  4111cd:	hlt    
  4111ce:	ret    0xbe6e
  4111d1:	stos   BYTE PTR es:[edi],al
  4111d2:	adc    eax,0xde99cb6
  4111d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111d8:	arpl   WORD PTR [edx-0x70],ax
  4111db:	gs aad 0x50
  4111de:	xchg   esi,eax
  4111df:	cmp    al,0x7d
  4111e1:	imul   esp,ebx,0xffffff86
  4111e4:	call   0x2e1a1678
  4111e9:	icebp  
  4111ea:	mov    cl,0x58
  4111ec:	pop    esi
  4111ed:	pop    ebp
  4111ee:	push   ebx
  4111ef:	aas    
  4111f0:	ror    DWORD PTR [ebx],0xb8
  4111f3:	int3   
  4111f4:	mov    ds:0x9118aa54,eax
  4111f9:	mov    cl,0xc4
  4111fb:	sub    al,0xd9
  4111fd:	rcl    DWORD PTR [ecx],1
  4111ff:	mov    bl,0x28
  411201:	sbb    BYTE PTR [edi+0x7e],bl
  411204:	stc    
  411205:	es sbb al,0x7c
  411208:	inc    ebx
  411209:	mov    edx,0xbe5b5404
  41120e:	inc    ecx
  41120f:	(bad)
  411212:	dec    ebp
  411213:	jb     0x41119e
  411215:	pop    DWORD PTR [esi]
  411217:	mov    ds:0x51aff6f5,eax
  41121c:	xor    bl,BYTE PTR [ebp-0x55c23903]
  411222:	mov    BYTE PTR [edx-0x5],bh
  411225:	or     al,0x2b
  411227:	jmp    0x5f1b510d
  41122c:	sar    dh,1
  41122e:	mov    eax,ds:0x6a673b33
  411233:	pusha  
  411234:	cld    
  411235:	stc    
  411236:	jns    0x41121c
  411238:	jmp    0x6360:0xf03a49aa
  41123f:	jo     0x411253
  411241:	(bad)  
  411242:	mov    ebx,0xdf8f9da0
  411247:	sub    esp,DWORD PTR [esi+0x44]
  41124a:	jge    0x41120c
  41124c:	lds    ebp,FWORD PTR [eax+0x60]
  41124f:	mov    DWORD PTR [ebx],esi
  411251:	push   ss
  411252:	fsubr  DWORD PTR [esi-0x37]
  411255:	or     BYTE PTR [ebp+ecx*2+0x2a],0x64
  41125a:	or     dl,bh
  41125c:	push   ds
  41125d:	call   0xd418:0xbbdc7c1c
  411264:	repnz add al,0xf5
  411267:	and    edi,DWORD PTR ds:0xbd596c97
  41126d:	adc    DWORD PTR [eax-0x37801906],esi
  411273:	pop    ecx
  411274:	es leave 
  411276:	(bad)  
  411277:	add    bh,BYTE PTR ds:0x1b1be2bd
  41127d:	and    al,bl
  41127f:	xor    eax,0x77845ed3
  411284:	(bad)  
  411285:	not    BYTE PTR [ebp-0xf4e7967]
  41128b:	cmc    
  41128c:	int    0x48
  41128e:	bound  esp,QWORD PTR [edi]
  411290:	aad    0x38
  411292:	test   DWORD PTR [ecx-0x3b],eax
  411295:	and    al,0x26
  411297:	mov    eax,ds:0xd01586f
  41129c:	and    DWORD PTR [eax-0x3a],esp
  41129f:	and    dh,BYTE PTR [edx]
  4112a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a2:	hlt    
  4112a3:	mov    ebx,0x2ab08359
  4112a8:	pushf  
  4112a9:	pop    esi
  4112aa:	aam    0xd9
  4112ac:	xchg   DWORD PTR [edx],ecx
  4112ae:	shr    BYTE PTR [ebx-0x5],cl
  4112b1:	mov    ecx,0xdbd26bbf
  4112b6:	xchg   DWORD PTR [ecx],ebp
  4112b8:	scas   eax,DWORD PTR es:[edi]
  4112b9:	mov    dl,ah
  4112bb:	pop    ebp
  4112bc:	rcl    BYTE PTR [eax],cl
  4112be:	call   0xab5b:0xfa4f2478
  4112c5:	test   eax,0x4cfbaa44
  4112ca:	push   ebx
  4112cb:	lods   eax,DWORD PTR ds:[esi]
  4112cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112cd:	xchg   edi,eax
  4112ce:	or     DWORD PTR [ecx],0xffffffd3
  4112d1:	push   esi
  4112d2:	push   0xffffffa5
  4112d4:	xchg   edi,eax
  4112d5:	test   eax,0x974843b0
  4112da:	sbb    bl,bh
  4112dc:	xor    dl,bh
  4112de:	pop    edx
  4112df:	cs ins DWORD PTR es:[edi],dx
  4112e1:	gs cmp bh,dl
  4112e4:	aad    0x9f
  4112e6:	(bad)  
  4112e7:	psraw  mm1,QWORD PTR [ebx+0x51]
  4112eb:	mov    al,ds:0xdb6f2fca
  4112f0:	adc    ebp,DWORD PTR [ecx]
  4112f2:	lea    edi,[ebx+ecx*2-0x64]
  4112f6:	adc    eax,0x92e90c47
  4112fb:	outs   dx,DWORD PTR ds:[esi]
  4112fc:	pusha  
  4112fd:	push   ecx
  4112fe:	and    esi,ebp
  411300:	push   ds
  411301:	aam    0xf1
  411303:	inc    ebx
  411304:	loop   0x41137f
  411306:	dec    ebp
  411307:	sbb    al,0xf3
  411309:	lods   al,BYTE PTR ds:[esi]
  41130a:	sti    
  41130b:	mov    edx,0x7e00cc80
  411310:	pop    ss
  411311:	add    bh,BYTE PTR [ebp-0x47beca8]
  411317:	mov    cl,0x86
  411319:	aam    0xa6
  41131b:	lods   eax,DWORD PTR ds:[esi]
  41131c:	dec    edx
  41131d:	outs   dx,BYTE PTR ds:[esi]
  41131e:	adc    BYTE PTR [ecx+edi*8],0x86
  411322:	out    dx,al
  411323:	inc    esi
  411324:	cmp    eax,0x62659989
  411329:	fldenv [ebx+0x3b]
  41132c:	arpl   WORD PTR [edx],ax
  41132e:	jno    0x41130a
  411330:	sbb    DWORD PTR ds:[edi+0x38],esi
  411334:	push   edx
  411335:	lds    esi,FWORD PTR [esi+0x765c0798]
  41133b:	dec    ecx
  41133c:	add    al,0x84
  41133e:	icebp  
  41133f:	push   ecx
  411340:	add    ecx,esi
  411342:	enter  0xf37a,0x92
  411346:	(bad)  [edi]
  411348:	(bad)  
  411349:	stc    
  41134a:	pop    esp
  41134b:	iret   
  41134c:	mov    edx,0xac910d75
  411351:	in     al,0x22
  411353:	mov    ebp,0x2271330d
  411358:	std    
  411359:	test   al,0x4d
  41135b:	xchg   edi,eax
  41135c:	mov    ecx,ebp
  41135e:	adc    cl,BYTE PTR [esi+0x9]
  411361:	cwde   
  411362:	xchg   esi,eax
  411363:	push   esp
  411364:	mov    es,WORD PTR [edx]
  411366:	in     eax,dx
  411367:	jo     0x411308
  411369:	shl    BYTE PTR [edi],0x8e
  41136c:	popf   
  41136d:	mov    bh,0xf5
  41136f:	fisubr DWORD PTR [edi-0x4e]
  411372:	mov    edx,0xad3a8c8
  411377:	push   0xd53d6e64
  41137c:	xor    BYTE PTR [esp+ebx*4+0x12a8103c],dl
  411383:	nop
  411384:	test   DWORD PTR [eax-0x7d],ebp
  411387:	sub    ah,BYTE PTR [ebp-0x68]
  41138a:	and    esp,DWORD PTR [ebp-0x78eed078]
  411390:	es push esi
  411392:	call   0x6ee5:0x624dad8d
  411399:	xchg   esp,eax
  41139a:	adc    al,0xce
  41139c:	add    BYTE PTR [edx],ch
  41139e:	or     al,0x45
  4113a0:	pushw  ss
  4113a2:	push   edx
  4113a3:	ret    0xda2b
  4113a6:	mov    dl,ah
  4113a8:	fisttp QWORD PTR [edx]
  4113aa:	ror    DWORD PTR [edi-0x650ba7a3],1
  4113b0:	sbb    eax,0x32bcb1dd
  4113b5:	adc    DWORD PTR [edi],ebx
  4113b7:	cdq    
  4113b8:	cs int 0x33
  4113bb:	mov    ecx,es
  4113bd:	mov    ah,0x3d
  4113bf:	mov    dh,0x5
  4113c1:	lods   al,BYTE PTR ds:[esi]
  4113c2:	adc    bl,ch
  4113c4:	cmp    ecx,DWORD PTR [eax+0x483a32ea]
  4113ca:	imul   eax,DWORD PTR [ebx+0x3f4c4fb5],0x7f0a05fb
  4113d4:	push   esi
  4113d5:	cmp    eax,0x5551c35b
  4113da:	ret    0xfbb3
  4113dd:	xchg   ebx,eax
  4113de:	cmp    al,0x5c
  4113e0:	jle    0x41136a
  4113e2:	sti    
  4113e3:	jmp    0xf1f00b57
  4113e8:	push   ebx
  4113e9:	sar    edi,cl
  4113eb:	iret   
  4113ec:	inc    edx
  4113ed:	fnstenv [ecx-0x2e8a0d54]
  4113f3:	jo     0x4113d1
  4113f5:	mov    es,WORD PTR [edx]
  4113f7:	cmp    bh,BYTE PTR [ebp+0x42abdbc9]
  4113fd:	xchg   ebp,eax
  4113fe:	dec    edi
  4113ff:	clc    
  411400:	in     al,dx
  411401:	call   0xd909:0xa2250b4c
  411408:	jecxz  0x4113e9
  41140a:	jb     0x4113c2
  41140c:	sub    al,0xb0
  41140e:	arpl   cx,ax
  411410:	mov    dh,0xd0
  411412:	jecxz  0x4113e1
  411414:	inc    esp
  411415:	arpl   WORD PTR [ecx],dx
  411417:	push   cs
  411418:	push   0x2d
  41141a:	adc    DWORD PTR [edx-0x5],0x6699fdf3
  411421:	push   cs
  411422:	ret    
  411423:	popf   
  411424:	retf   
  411425:	inc    esp
  411426:	adc    esp,eax
  411428:	dec    edi
  411429:	adc    eax,0xf9b1358b
  41142e:	iret   
  41142f:	pop    DWORD PTR [edi-0x637ea593]
  411435:	fwait
  411436:	inc    eax
  411437:	mov    dl,0x4
  411439:	mov    edx,0xbcce970c
  41143e:	pop    ebx
  41143f:	mov    edi,0x5a24b5
  411444:	sar    edi,1
  411446:	in     al,0xc0
  411448:	xchg   esi,edx
  41144a:	in     eax,0x5b
  41144c:	mov    dh,0xc2
  41144e:	adc    ebx,DWORD PTR [edi+0xc]
  411451:	push   ss
  411452:	and    edx,ecx
  411454:	adc    eax,0xa63d7775
  411459:	mov    ds:0xc2bb4bc0,eax
  41145e:	cmp    bh,ch
  411460:	cs mov eax,0xbe83c7ca
  411466:	jle    0x411490
  411468:	add    ebx,DWORD PTR [ebx]
  41146a:	sub    DWORD PTR [ecx],edx
  41146c:	push   ebx
  41146d:	mov    edi,0x424c7ed2
  411472:	cli    
  411473:	cmp    al,0x7a
  411475:	test   DWORD PTR ds:0x92ad5e7e,edi
  41147b:	xchg   ecx,eax
  41147c:	cs out dx,al
  41147e:	mov    al,ds:0xd730bf72
  411483:	xor    eax,0x850f19be
  411488:	enter  0xabbc,0x5f
  41148c:	inc    edx
  41148d:	xchg   edi,eax
  41148e:	stc    
  41148f:	xor    eax,0x66cb7453
  411494:	adc    eax,0x1990da96
  411499:	push   eax
  41149a:	addr16 in eax,dx
  41149c:	adc    al,0x34
  41149e:	cmc    
  41149f:	loope  0x4114d2
  4114a1:	lds    esi,FWORD PTR [ebp-0x5d12f569]
  4114a7:	mov    al,ds:0xecd53559
  4114ac:	dec    ecx
  4114ad:	cmp    al,0x2a
  4114af:	adc    ch,bh
  4114b1:	in     al,0x65
  4114b3:	cdq    
  4114b4:	mov    ebp,0x82d177c0
  4114b9:	adc    BYTE PTR ds:0x9dd76504,ch
  4114bf:	iret   
  4114c0:	ror    DWORD PTR [ebx-0x49],0xfb
  4114c4:	daa    
  4114c5:	(bad)  
  4114c6:	xchg   esi,eax
  4114c7:	sub    BYTE PTR [edi],ah
  4114c9:	nop
  4114ca:	aad    0x4e
  4114cc:	adc    DWORD PTR [edx-0x28],edx
  4114cf:	push   ebp
  4114d0:	test   BYTE PTR [eax],dh
  4114d2:	js     0x4114a3
  4114d4:	sub    BYTE PTR [ebx],cl
  4114d6:	sub    ebp,esp
  4114d8:	sbb    eax,0x1812db52
  4114dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114de:	dec    ebx
  4114df:	ins    DWORD PTR es:[edi],dx
  4114e0:	xchg   edx,eax
  4114e1:	in     eax,dx
  4114e2:	jmp    0x73d:0x4d81c00f
  4114e9:	cdq    
  4114ea:	inc    ecx
  4114eb:	repz mov ds:0xb1c4a56b,eax
  4114f1:	add    BYTE PTR [esi-0x26246073],al
  4114f7:	pop    ds
  4114f8:	jo     0x411530
  4114fa:	std    
  4114fb:	cmp    al,0xb5
  4114fd:	enter  0xb2ef,0x4c
  411501:	mov    al,0xbb
  411503:	push   ds
  411504:	jle    0x41148e
  411506:	test   BYTE PTR [eax-0x48bbc5f9],dl
  41150c:	(bad)  
  41150d:	pop    eax
  41150e:	add    BYTE PTR [edi+0x7a],dh
  411511:	pop    eax
  411512:	push   eax
  411513:	lock mov edx,0x52bda9c0
  411519:	fucomip st,st(3)
  41151b:	mov    cl,ch
  41151d:	shr    DWORD PTR [ecx],cl
  41151f:	enter  0x3fd4,0x5
  411523:	jg     0x41155e
  411525:	sub    dl,cl
  411527:	int    0x3d
  411529:	push   cs
  41152a:	sbb    edx,esi
  41152c:	ins    DWORD PTR es:[edi],dx
  41152d:	jns    0x411550
  41152f:	adc    dl,ch
  411531:	lock sbb al,0x7d
  411534:	in     al,0xb5
  411536:	push   ebx
  411537:	jo     0x411582
  411539:	jle    0x41155f
  41153b:	sub    eax,0xc7d1b1b
  411540:	imul   ebp,DWORD PTR es:[esi+0x23],0xffffffbe
  411545:	rcl    BYTE PTR [edx+0x12],1
  411548:	fstp   TBYTE PTR [edi-0x27]
  41154b:	ret    
  41154c:	pop    ecx
  41154d:	mov    dl,0x74
  41154f:	adc    BYTE PTR [eax+eax*2-0x11],cl
  411553:	mov    bh,0x6a
  411555:	(bad)  
  411556:	cmp    esi,ecx
  411558:	jns    0x41157d
  41155a:	sub    al,0x4
  41155c:	(bad)  
  41155d:	fcomp  DWORD PTR [edi]
  41155f:	add    al,0x79
  411561:	fidiv  DWORD PTR [ecx]
  411563:	mov    dh,BYTE PTR [ebp+0x4cff8b4d]
  411569:	cmc    
  41156a:	sub    DWORD PTR [edx],esp
  41156c:	mov    DWORD PTR ds:0x182929dc,esp
  411572:	push   ebp
  411573:	and    BYTE PTR [ebx],bh
  411575:	test   al,ch
  411577:	clc    
  411578:	push   ds
  411579:	jns    0x4115ae
  41157b:	pop    esp
  41157c:	push   0xffffff8a
  41157e:	mov    ebx,edx
  411580:	push   esp
  411581:	dec    ebx
  411582:	mov    ebp,0x69592a6a
  411587:	outs   dx,DWORD PTR ds:[esi]
  411588:	jg     0x4115a2
  41158a:	jbe    0x4115e7
  41158c:	dec    esp
  41158d:	cmp    eax,0x6e242e6
  411592:	fstp   TBYTE PTR [esi-0x6f77bc0a]
  411598:	jne    0x411592
  41159a:	cmp    al,0x76
  41159c:	xlat   BYTE PTR ds:[ebx]
  41159d:	sub    BYTE PTR [eax],ch
  41159f:	(bad)  
  4115a0:	adc    al,BYTE PTR [edx+eax*1]
  4115a3:	loope  0x4115cf
  4115a5:	iret   
  4115a6:	stos   DWORD PTR es:[edi],eax
  4115a7:	and    dh,BYTE PTR [ebp-0x51a1360c]
  4115ad:	mov    ebp,0x3a363227
  4115b2:	adc    DWORD PTR [eax],ebp
  4115b4:	dec    esi
  4115b5:	cmp    dl,BYTE PTR [esi]
  4115b7:	mov    eax,0xbbe79913
  4115bc:	es jp  0x411556
  4115bf:	xor    eax,0xc0950c8e
  4115c4:	iret   
  4115c5:	push   ss
  4115c6:	scas   al,BYTE PTR es:[edi]
  4115c7:	pop    esp
  4115c8:	or     ebp,DWORD PTR [edi]
  4115ca:	mov    ?,WORD PTR [esi]
  4115cc:	sbb    DWORD PTR [esi-0x22],esp
  4115cf:	push   ds
  4115d0:	cmp    esi,DWORD PTR [edi-0x329c5e12]
  4115d6:	ret    0xb03
  4115d9:	mov    ecx,DWORD PTR [ecx+eiz*2]
  4115dc:	add    DWORD PTR [edx+esi*4+0x192a998],edi
  4115e3:	or     ebx,DWORD PTR [ebx]
  4115e5:	and    BYTE PTR [ebx],cl
  4115e7:	call   0x79dc299b
  4115ec:	bound  ebp,QWORD PTR [eax-0x5b2e809a]
  4115f2:	xor    dh,al
  4115f4:	sub    BYTE PTR [bx+0x7e],cl
  4115f8:	rol    DWORD PTR [edi+ebp*2],cl
  4115fb:	(bad)  
  4115fc:	repnz aas 
  4115fe:	enter  0x1c77,0x2b
  411602:	outs   dx,BYTE PTR ds:[esi]
  411604:	pop    ds
  411605:	je     0x411648
  411607:	inc    edi
  411608:	ret    0xf07b
  41160b:	xchg   BYTE PTR [edi],cl
  41160d:	push   ds
  41160e:	into   
  41160f:	xchg   ebp,eax
  411610:	stos   DWORD PTR es:[edi],eax
  411611:	fdiv   QWORD PTR [edx]
  411613:	mov    edi,eax
  411615:	xor    DWORD PTR [ebx],edx
  411617:	nop
  411618:	xchg   esp,eax
  411619:	lods   eax,DWORD PTR ds:[esi]
  41161a:	ror    bl,cl
  41161c:	test   eax,0x6349e510
  411621:	mov    esi,0xe76a7f37
  411626:	jle    0x41166c
  411628:	ffreep st(2)
  41162a:	sbb    bl,BYTE PTR [eax]
  41162c:	out    0x2f,al
  41162e:	ins    BYTE PTR es:[edi],dx
  41162f:	fwait
  411630:	rol    DWORD PTR [ecx],0xaf
  411633:	cmp    DWORD PTR [ecx+0x5df2aac],edi
  411639:	ret    0xffaa
  41163c:	xchg   ebp,eax
  41163d:	mov    fs,WORD PTR [eax-0x22]
  411640:	sbb    eax,0x9f2a630f
  411645:	xchg   ecx,eax
  411646:	mov    cl,0xaa
  411648:	pop    esi
  411649:	or     ecx,DWORD PTR [ecx-0x64]
  41164c:	xchg   edx,eax
  41164d:	add    esi,DWORD PTR [eax-0x35]
  411650:	inc    eax
  411651:	lahf   
  411652:	or     eax,0x6bbdb99c
  411657:	pushf  
  411658:	outs   dx,BYTE PTR ds:[esi]
  411659:	xchg   ecx,eax
  41165a:	cmp    eax,0xcf8e4dd8
  41165f:	mov    bl,0x4e
  411661:	sub    eax,DWORD PTR ds:0x87db91ee
  411667:	sar    edx,1
  411669:	in     eax,0x52
  41166b:	retf   0x7f36
  41166e:	sub    eax,esi
  411670:	pop    ds
  411671:	push   esi
  411672:	je     0x4116c1
  411674:	or     bl,BYTE PTR [edi-0x70]
  411677:	and    dl,cl
  411679:	popa   
  41167a:	out    0x88,eax
  41167c:	in     eax,dx
  41167d:	cs sti 
  41167f:	lods   eax,DWORD PTR ds:[esi]
  411680:	cmp    al,0x48
  411682:	pop    ss
  411683:	push   ebp
  411684:	mov    DWORD PTR [eax+0xd2e9c37],ebp
  41168a:	retf   0x64a1
  41168d:	(bad)
  411692:	jg     0x411617
  411694:	neg    DWORD PTR [edx+0xf9be973]
  41169a:	and    al,0x2f
  41169c:	ds mov bl,0x6b
  41169f:	cs push ebx
  4116a1:	out    0x8d,al
  4116a3:	test   eax,0x3fa99808
  4116a8:	push   ebp
  4116a9:	xchg   ecx,eax
  4116aa:	les    edi,FWORD PTR [edi]
  4116ac:	ret    
  4116ad:	mov    dh,0x23
  4116af:	setae  BYTE PTR [eax]
  4116b2:	jmp    0x11b5:0x5760a280
  4116b9:	out    dx,eax
  4116ba:	into   
  4116bb:	shl    BYTE PTR [ebx-0x7b],1
  4116be:	test   dl,ch
  4116c0:	add    BYTE PTR [esi+0x3b],dh
  4116c3:	mov    ch,0xf0
  4116c5:	rcr    BYTE PTR [edi],1
  4116c7:	add    dh,BYTE PTR ds:0xa1488bde
  4116cd:	adc    al,al
  4116cf:	dec    eax
  4116d0:	xor    DWORD PTR cs:[edi],ebx
  4116d3:	push   eax
  4116d4:	and    DWORD PTR [edx-0x2ba455c9],eax
  4116da:	mov    bl,0xb2
  4116dc:	jns    0x411729
  4116de:	pusha  
  4116df:	sub    DWORD PTR [ecx],0xffffffd1
  4116e2:	mov    ah,0xf6
  4116e4:	dec    ebx
  4116e5:	out    dx,eax
  4116e6:	retf   
  4116e7:	mov    ds:0x855b3f62,eax
  4116ec:	pusha  
  4116ed:	jno    0x4116ff
  4116ef:	data16 xor bl,BYTE PTR [edx-0x31]
  4116f3:	mov    ebp,0x531d2ed1
  4116f8:	hlt    
  4116f9:	std    
  4116fa:	cmp    al,0xd4
  4116fc:	cmp    al,0xa1
  4116fe:	inc    ebp
  4116ff:	ins    DWORD PTR es:[edi],dx
  411700:	test   al,0xa7
  411702:	stos   BYTE PTR es:[edi],al
  411703:	mov    edi,ebp
  411705:	jne    0x411721
  411707:	outs   dx,BYTE PTR ds:[esi]
  411708:	jecxz  0x4116bb
  41170a:	pop    es
  41170b:	and    al,cl
  41170d:	(bad)  
  41170e:	(bad)  
  41170f:	adc    DWORD PTR [edx-0x8f30f65],esi
  411715:	pusha  
  411716:	js     0x4116f4
  411718:	pop    esp
  411719:	hlt    
  41171a:	sbb    al,0x53
  41171c:	jecxz  0x411776
  41171e:	stos   DWORD PTR es:[edi],eax
  41171f:	pop    ds
  411720:	sub    BYTE PTR [eax+edi*4-0x420a52bc],cl
  411727:	ficomp WORD PTR ds:[bp+di]
  41172b:	adc    al,0xe9
  41172d:	inc    ebp
  41172e:	imul   ebp,DWORD PTR [esi+0x33ae6569],0xce907f0
  411738:	inc    eax
  411739:	mov    ebx,0xf15a01e2
  41173e:	clc    
  41173f:	loope  0x411739
  411741:	in     eax,dx
  411742:	sbb    edi,DWORD PTR [edx-0x4b3c7e42]
  411748:	jmp    0x411705
  41174a:	test   al,0x94
  41174c:	add    bl,BYTE PTR [edx+0x44]
  41174f:	jmp    0x4117be
  411751:	add    DWORD PTR ds:0x6457dde1,edi
  411757:	sub    esi,DWORD PTR [ecx-0x53c7e574]
  41175d:	add    DWORD PTR [edi+0x9],0xffffffda
  411761:	shr    BYTE PTR [ecx-0x17],cl
  411764:	into   
  411765:	inc    esp
  411766:	pop    esp
  411767:	int    0xc9
  411769:	cmp    DWORD PTR [ecx],eax
  41176b:	shl    DWORD PTR [eax],cl
  41176d:	pop    esi
  41176e:	imul   edi,DWORD PTR [esi],0xffffffb6
  411771:	out    dx,al
  411772:	loop   0x4117e2
  411774:	jecxz  0x411731
  411776:	pop    ebp
  411777:	jnp    0x4117ea
  411779:	retf   
  41177a:	mov    ch,al
  41177c:	xchg   BYTE PTR ds:0x699dac15,ah
  411782:	outs   dx,BYTE PTR ds:[esi]
  411783:	fst    st(2)
  411785:	push   edi
  411786:	mov    bh,0xe9
  411788:	mov    ?,WORD PTR [ebp-0x78]
  41178b:	mov    esp,0x7c0a2314
  411790:	retf   0x7aba
  411793:	adc    eax,0x462bba7e
  411798:	into   
  411799:	sub    eax,0x6d55f99
  41179e:	push   esi
  41179f:	mov    BYTE PTR [ecx-0x59],cl
  4117a2:	mov    ds:0x25e99b67,al
  4117a7:	sar    BYTE PTR [edi-0x47],0x27
  4117ab:	inc    ebp
  4117ac:	or     DWORD PTR [ebx+ecx*2],ebp
  4117af:	pop    ecx
  4117b0:	pop    si
  4117b2:	aam    0xc0
  4117b4:	int    0x20
  4117b6:	out    0xa3,eax
  4117b8:	and    ah,BYTE PTR [ebx+0x4e]
  4117bb:	cmc    
  4117bc:	jne    0x411803
  4117be:	xchg   ecx,eax
  4117bf:	push   eax
  4117c0:	hlt    
  4117c1:	int3   
  4117c2:	mov    eax,0x9416cb7b
  4117c7:	adc    cl,bh
  4117c9:	xchg   ebp,eax
  4117cb:	js     0x4117e1
  4117cd:	pop    ebx
  4117ce:	ret    
  4117cf:	out    dx,eax
  4117d0:	in     eax,dx
  4117d1:	into   
  4117d2:	and    al,0xc2
  4117d4:	sub    DWORD PTR [eax],esi
  4117d6:	ffreep st(5)
  4117d8:	jbe    0x41183e
  4117da:	stc    
  4117db:	inc    ecx
  4117dc:	scas   eax,DWORD PTR es:[edi]
  4117dd:	rcr    DWORD PTR [esi],1
  4117df:	gs jo  0x41176e
  4117e2:	xchg   ecx,eax
  4117e3:	fnstsw WORD PTR [ecx+eiz*2]
  4117e6:	pop    eax
  4117e7:	lods   al,BYTE PTR ds:[esi]
  4117e8:	ret    0x4621
  4117eb:	retf   0x7a7c
  4117ee:	out    dx,al
  4117ef:	mov    al,ds:0xb3526ff0
  4117f4:	dec    edi
  4117f5:	dec    edi
  4117f6:	mov    dh,0xee
  4117f8:	pop    ds
  4117f9:	or     eax,0x8d3833e1
  4117fe:	fldenv [ebp-0x29fcd267]
  411804:	scas   al,BYTE PTR es:[edi]
  411805:	mov    WORD PTR [eax+0x28c882e0],es
  41180b:	push   0x22465312
  411810:	rcl    BYTE PTR [edi],1
  411812:	push   edx
  411813:	jne    0x411838
  411815:	pop    esp
  411816:	sub    dh,bl
  411818:	mov    esi,0xa767dcd0
  41181d:	mov    esi,0x830ada8d
  411822:	mov    esp,0x7eb9a8a4
  411827:	dec    si
  411829:	fmul   DWORD PTR [ebp-0x54]
  41182c:	xchg   al,cl
  41182e:	mov    ?,edx
  411830:	xor    eax,0x2a96ebc
  411835:	cmp    al,0x13
  411837:	retf   0x37c9
  41183a:	(bad)  
  41183b:	xlat   BYTE PTR ds:[ebx]
  41183c:	dec    ebx
  41183d:	in     al,0x37
  41183f:	(bad)  
  411841:	addr16 mov esp,0x43991299
  411847:	jnp    0x41188a
  411849:	jmp    DWORD PTR [ebx]
  41184b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41184c:	sub    eax,0x67901dbb
  411851:	dec    esi
  411852:	push   esp
  411853:	std    
  411854:	call   FWORD PTR [edx+0x19]
  411857:	mov    esp,0xa0c76e72
  41185c:	inc    edi
  41185d:	push   ecx
  41185e:	or     edi,DWORD PTR [ecx-0x49683e47]
  411864:	fdivrp st(7),st
  411866:	push   esp
  411867:	sar    BYTE PTR [ebp+0x66999610],cl
  41186d:	xchg   ebx,eax
  41186e:	imul   DWORD PTR [ecx-0x142e5062]
  411874:	inc    esi
  411875:	adc    al,0xd7
  411877:	aam    0xec
  411879:	or     al,0x57
  41187b:	xor    ch,ch
  41187d:	push   esp
  41187e:	hlt    
  41187f:	imul   eax,DWORD PTR [edi+0x44],0x34
  411883:	fwait
  411884:	test   DWORD PTR [edi+0xc],esp
  411887:	xchg   ebx,eax
  411888:	iret   
  411889:	shl    DWORD PTR [eax],0x2f
  41188c:	push   ebx
  41188d:	scas   al,BYTE PTR es:[edi]
  41188e:	dec    bl
  411890:	mov    ecx,?
  411892:	cmp    ebp,eax
  411894:	shl    BYTE PTR [ecx+0x5949708c],cl
  41189a:	pop    ss
  41189b:	add    al,0x2
  41189d:	test   cl,0xb0
  4118a0:	cli    
  4118a1:	cmc    
  4118a2:	sbb    eax,0x9bba2cf8
  4118a7:	jb     0x4118ff
  4118a9:	xor    edi,DWORD PTR [ebx]
  4118ab:	jl     0x4118ce
  4118ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ae:	jecxz  0x411843
  4118b0:	xchg   dl,bh
  4118b2:	loop   0x41190b
  4118b4:	sbb    DWORD PTR [ebx-0x21d0270e],esp
  4118ba:	push   eax
  4118bb:	outs   dx,DWORD PTR ds:[esi]
  4118bc:	mov    al,ds:0x6ea3ab2c
  4118c1:	mov    al,0xdc
  4118c3:	cmp    eax,0xe7ef6740
  4118c8:	push   ebx
  4118c9:	mov    cl,0xcd
  4118cb:	sar    DWORD PTR [ebx+0x52],cl
  4118ce:	mov    al,ds:0x583dfb2f
  4118d3:	(bad)  
  4118d4:	jmp    DWORD PTR [ecx]
  4118d6:	out    dx,eax
  4118d7:	mov    edi,0x596d4f9c
  4118dc:	cli    
  4118dd:	lods   al,BYTE PTR ds:[esi]
  4118de:	mov    dl,0x88
  4118e0:	call   0x93201d8f
  4118e5:	imul   ebp,DWORD PTR [edx+0x4a],0xb68a3f5a
  4118ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ed:	sub    ecx,ebp
  4118ef:	aad    0xb6
  4118f1:	push   ds
  4118f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f3:	adc    ch,dh
  4118f5:	outs   dx,BYTE PTR ds:[esi]
  4118f6:	out    dx,al
  4118f7:	inc    edx
  4118f8:	(bad)  
  4118f9:	loopne 0x411949
  4118fb:	xor    esp,esi
  4118fd:	and    esi,eax
  4118ff:	(bad)  
  411900:	xor    DWORD PTR [edx+0x4df1f1f9],ecx
  411906:	mov    bh,0xd0
  411908:	mov    ebx,0x80ebc124
  41190d:	and    dl,ch
  41190f:	(bad)  
  411910:	cdq    
  411911:	mov    edi,?
  411913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411914:	lds    esi,FWORD PTR [eax+0x16f70708]
  41191a:	shr    al,1
  41191c:	shl    DWORD PTR [esi+0x78],0xb6
  411920:	jo     0x411997
  411922:	push   eax
  411923:	xchg   edx,eax
  411924:	daa    
  411925:	fimul  WORD PTR fs:[edi]
  411928:	sar    BYTE PTR [ebx],cl
  41192a:	mov    al,ds:0x609ef461
  41192f:	cmp    eax,DWORD PTR [ebp+0x16]
  411932:	or     DWORD PTR [edx-0x337a2020],esp
  411938:	push   edx
  411939:	jmp    0x41196a
  41193b:	ds pop esp
  41193d:	cdq    
  41193e:	stos   DWORD PTR es:[edi],eax
  41193f:	call   0xf5d1a631
  411944:	bound  edi,QWORD PTR [esi+0x2c]
  411947:	test   eax,0x9602806b
  41194c:	fist   DWORD PTR [ebx-0x14]
  41194f:	shr    bh,cl
  411951:	xchg   ebp,eax
  411952:	call   0x997c1618
  411957:	out    dx,eax
  411958:	pop    edi
  411959:	xor    eax,0x4268d1b5
  41195e:	adc    al,0x5b
  411960:	rcr    BYTE PTR [esi-0x537ab8d5],cl
  411966:	jecxz  0x41193c
  411968:	icebp  
  411969:	pop    es
  41196a:	jg     0x411963
  41196c:	inc    eax
  41196d:	mov    cl,0x10
  41196f:	mov    al,ds:0x182da940
  411974:	push   edx
  411975:	xor    edx,DWORD PTR [ebp+0x6c]
  411978:	fwait
  411979:	xchg   ebx,eax
  41197a:	fstp   TBYTE PTR [ecx+ecx*1]
  41197d:	shl    BYTE PTR [esp+esi*4-0x52],1
  411981:	hlt    
  411982:	inc    eax
  411983:	mov    BYTE PTR [esi],ah
  411985:	fcomp  DWORD PTR [ebp+0x5a]
  411988:	mov    edi,0x8270c4e3
  41198d:	push   ss
  41198e:	test   al,0x70
  411990:	cld    
  411991:	pop    es
  411992:	in     al,0xad
  411994:	inc    edx
  411995:	imul   edi,DWORD PTR [esi-0x60cb2306],0xffffffe8
  41199c:	cmp    ebp,edi
  41199e:	ss clc 
  4119a0:	je     0x411922
  4119a2:	adc    al,cl
  4119a4:	mov    bh,0x7d
  4119a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a7:	test   al,0xb8
  4119a9:	icebp  
  4119aa:	sbb    BYTE PTR [ebx-0x36],dh
  4119ad:	xlat   BYTE PTR ds:[ebx]
  4119ae:	mov    edx,DWORD PTR [esi-0x4fcfa76f]
  4119b4:	cmp    edi,DWORD PTR [eax+edx*4-0x3df2ae7a]
  4119bb:	inc    ebx
  4119bc:	les    esp,FWORD PTR [ebx]
  4119be:	ins    BYTE PTR es:[edi],dx
  4119bf:	inc    edi
  4119c0:	out    dx,al
  4119c1:	cli    
  4119c2:	push   ds
  4119c3:	hlt    
  4119c4:	rcl    DWORD PTR [ebx+0x706b9f2c],1
  4119ca:	pop    edx
  4119cb:	sub    DWORD PTR [edx],ecx
  4119cd:	add    eax,0x48ef5877
  4119d2:	xchg   edx,eax
  4119d3:	mov    BYTE PTR [edx+0xb],ch
  4119d6:	and    BYTE PTR [ebp-0x37],dh
  4119d9:	jp     0x411a53
  4119db:	or     edi,ecx
  4119dd:	xchg   BYTE PTR [edi],bh
  4119df:	mov    cl,0x63
  4119e1:	dec    ebx
  4119e2:	repz bt DWORD PTR [ebp*8+0x71ae46b2],ebx
  4119eb:	mov    eax,0x43569039
  4119f0:	and    WORD PTR [edi+esi*2+0x706b8e38],bx
  4119f8:	dec    esi
  4119f9:	mov    es,WORD PTR [edx]
  4119fb:	int    0x78
  4119fd:	pop    ebp
  4119fe:	push   cs
  4119ff:	mov    al,ds:0xad5cdb4f
  411a04:	sub    esi,DWORD PTR [eax+0x6270d3e1]
  411a0a:	mov    ecx,0xa0ba9e8e
  411a0f:	pop    esi
  411a10:	pop    ecx
  411a11:	clc    
  411a12:	inc    edi
  411a13:	pop    edx
  411a14:	cmp    esi,DWORD PTR ds:0x5520fefc
  411a1a:	in     eax,dx
  411a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1c:	mov    bh,bl
  411a1e:	cmc    
  411a1f:	dec    esp
  411a20:	jne    0x411a57
  411a22:	sti    
  411a23:	jmp    0x411a8e
  411a25:	scas   al,BYTE PTR es:[edi]
  411a26:	cld    
  411a27:	sbb    DWORD PTR [edi+0xb],ebp
  411a2a:	inc    esi
  411a2b:	or     bh,dh
  411a2d:	lock ss test eax,0x6df5b844
  411a34:	shl    DWORD PTR [edx+0x940f30],1
  411a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a3b:	rcl    BYTE PTR [edi-0x42],cl
  411a3e:	inc    eax
  411a3f:	jle    0x4119ed
  411a41:	jl     0x411a8f
  411a43:	mov    ax,0x68c2
  411a47:	addr16 jb 0x411a54
  411a4a:	shl    DWORD PTR [edx-0x24a88235],cl
  411a50:	sahf   
  411a51:	bound  ecx,QWORD PTR [ecx+0x75]
  411a54:	cmp    DWORD PTR [ecx],esp
  411a56:	stos   DWORD PTR es:[edi],eax
  411a57:	into   
  411a58:	push   DWORD PTR [ebx+0x9]
  411a5b:	adc    al,0x15
  411a5d:	pop    edx
  411a5e:	mov    ecx,0x5da90424
  411a63:	inc    ecx
  411a64:	and    eax,0x48d0a372
  411a69:	dec    eax
  411a6a:	jmp    0x9d3c:0x3d8b01a7
  411a71:	mov    dl,0xd1
  411a73:	ds mov dl,0xf6
  411a76:	lea    edi,[eax+0x1d]
  411a79:	xchg   edx,eax
  411a7a:	fxch   st(3)
  411a7c:	aad    0xd2
  411a7e:	sahf   
  411a7f:	pop    es
  411a80:	xchg   BYTE PTR ds:0xd460fba3,ch
  411a86:	fbstp  TBYTE PTR [ebx]
  411a88:	faddp  st(4),st
  411a8a:	adc    ah,BYTE PTR ds:0xdbb20646
  411a90:	les    esi,FWORD PTR [eax+0x16]
  411a93:	lds    edx,FWORD PTR [edi]
  411a95:	mov    ch,0xd2
  411a97:	xor    DWORD PTR [eax],0x2082fc5f
  411a9d:	bound  esi,QWORD PTR ss:[edi+0x7b205d8]
  411aa4:	and    eax,0xff46b0c4
  411aa9:	cmp    DWORD PTR [ebx],0xffffffa0
  411aac:	outs   dx,BYTE PTR ds:[esi]
  411aad:	push   esi
  411aae:	push   es
  411aaf:	sbb    bh,BYTE PTR [edi]
  411ab1:	in     eax,dx
  411ab2:	mov    DWORD PTR [edi+eax*2+0x37],esp
  411ab6:	(bad)  
  411ab7:	mov    edx,0x1779b483
  411abd:	xchg   ebx,eax
  411abe:	imul   DWORD PTR [esi+0x5736ab97]
  411ac4:	aaa    
  411ac5:	out    dx,al
  411ac6:	adc    BYTE PTR [ebx],ch
  411ac8:	mov    ?,WORD PTR [edi+ebp*1+0x5d]
  411acc:	cmp    bh,BYTE PTR [esi-0x13]
  411acf:	cmp    BYTE PTR [ebx-0x227aeacf],ch
  411ad5:	retf   
  411ad6:	sub    al,0xe1
  411ad8:	stos   BYTE PTR es:[edi],al
  411ad9:	loope  0x411af8
  411adb:	pop    edx
  411adc:	xor    al,0xe0
  411ade:	sbb    al,0xaa
  411ae0:	push   ecx
  411ae1:	outs   dx,BYTE PTR ds:[esi]
  411ae2:	xor    DWORD PTR [ebp+ebp*1+0x5645c741],esi
  411ae9:	xchg   esp,eax
  411aea:	fsub   QWORD PTR [ecx]
  411aec:	mov    ds:0x7dbf98dc,eax
  411af1:	xchg   BYTE PTR [edx+0x7230db8],ch
  411af7:	add    dx,si
  411afa:	mov    edx,0xd73d2226
  411aff:	adc    DWORD PTR [edi],ecx
  411b01:	sub    ecx,ebp
  411b03:	shl    edx,cl
  411b05:	in     eax,0x72
  411b07:	stc    
  411b08:	pop    edx
  411b09:	je     0x411ace
  411b0b:	ret    
  411b0c:	iret   
  411b0d:	inc    ebx
  411b0e:	cmp    edi,ebx
  411b10:	mov    bh,0xce
  411b12:	jecxz  0x411b75
  411b14:	ds scas eax,DWORD PTR es:[edi]
  411b16:	cmc    
  411b17:	xchg   edx,eax
  411b18:	ret    
  411b19:	mov    DWORD PTR [esi-0x54],eax
  411b1c:	(bad)
  411b1f:	push   esi
  411b20:	daa    
  411b21:	lods   al,BYTE PTR ds:[esi]
  411b22:	cli    
  411b23:	xor    BYTE PTR [ecx+esi*2-0x5d],ah
  411b27:	mov    ds:0x9e909f2d,al
  411b2c:	adc    al,0x8a
  411b2e:	mov    ah,BYTE PTR [edx+0x51]
  411b31:	xor    cl,dl
  411b33:	sbb    al,0x64
  411b35:	or     ecx,DWORD PTR [ecx+0x38]
  411b38:	pop    ecx
  411b39:	in     al,dx
  411b3a:	gs ss xchg BYTE PTR es:[eax],al
  411b3f:	mov    fs,esi
  411b41:	xchg   edi,eax
  411b42:	stc    
  411b43:	sub    edx,DWORD PTR [ebp-0x65aff067]
  411b49:	lea    esp,[ebp+0x77a2cea1]
  411b4f:	ficomp DWORD PTR [eax]
  411b51:	adc    BYTE PTR [ecx-0x19],dh
  411b54:	jmp    0xaf6f5201
  411b59:	test   BYTE PTR [edx-0x36],cl
  411b5c:	(bad)  
  411b5d:	cwde   
  411b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b5f:	jno    0x411b95
  411b61:	adc    dl,BYTE PTR [ebx]
  411b63:	fcomp  st(7)
  411b65:	cld    
  411b66:	dec    ebx
  411b67:	mov    DWORD PTR [ecx-0x51ddeca8],esi
  411b6d:	je     0x411b4f
  411b6f:	arpl   WORD PTR [ebp+0x48],di
  411b72:	cs xor edi,eax
  411b75:	pushf  
  411b76:	inc    esi
  411b77:	cmp    BYTE PTR [ebx+eiz*2+0x31f05f84],0xf4
  411b7f:	(bad)  [edx]
  411b81:	adc    al,0xd5
  411b83:	scas   eax,DWORD PTR es:[edi]
  411b84:	(bad)  
  411b85:	into   
  411b86:	jb     0x411b9b
  411b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b89:	pop    esp
  411b8a:	mov    ebp,0xe9de2030
  411b8f:	xchg   BYTE PTR [ebx-0x32],bh
  411b92:	push   edx
  411b93:	mov    ebx,0x3bc59d07
  411b98:	lock mov ebx,0xd3c06e59
  411b9e:	pushf  
  411b9f:	aam    0x6c
  411ba1:	mov    ds:0x60fe8b98,eax
  411ba6:	outs   dx,BYTE PTR ds:[esi]
  411ba7:	ficomp WORD PTR [edi+ebx*1-0xfca70c8]
  411bae:	and    al,BYTE PTR [eax-0x3b]
  411bb1:	cs call 0xbaa02649
  411bb7:	out    0x97,al
  411bb9:	fiadd  WORD PTR [ecx+0x38]
  411bbc:	cmp    BYTE PTR [ecx+0x52],cl
  411bbf:	test   al,0x8c
  411bc1:	leave  
  411bc2:	lock fimul WORD PTR [esi]
  411bc5:	push   ds
  411bc6:	data16 aas 
  411bc8:	adc    al,0xf9
  411bca:	or     eax,DWORD PTR [esi]
  411bcc:	add    eax,0x83d276ce
  411bd1:	mov    ds:0x85ddc695,al
  411bd6:	pop    edx
  411bd7:	sbb    bh,BYTE PTR [ebx-0x7f]
  411bda:	push   ds
  411bdb:	je     0x411b62
  411bdd:	mov    dl,0xc4
  411bdf:	iret   
  411be0:	push   edx
  411be1:	dec    edx
  411be2:	mov    ds:0x6fed358b,eax
  411be7:	test   edx,ebp
  411be9:	ret    0xf315
  411bec:	sub    ebp,esi
  411bee:	sub    DWORD PTR [ebp-0x42],ebp
  411bf1:	test   BYTE PTR [ecx-0x12],0x4b
  411bf5:	pop    ss
  411bf6:	ror    BYTE PTR [edi+0x47],0xf4
  411bfa:	adc    eax,0xb6889ec2
  411bff:	and    ah,BYTE PTR [edi+0x19979a9c]
  411c05:	adc    DWORD PTR [ecx-0x6837e00],ebx
  411c0b:	test   BYTE PTR [edi],ah
  411c0d:	(bad)  
  411c0e:	mov    cl,0xee
  411c10:	stos   DWORD PTR es:[edi],eax
  411c11:	pop    ebx
  411c12:	cmp    ebp,esp
  411c14:	jp     0x411c0a
  411c16:	mov    al,ds:0xeba59b40
  411c1b:	cdq    
  411c1c:	and    BYTE PTR [ebp+0x2a],bl
  411c1f:	mov    edi,0x421c225f
  411c24:	jo     0x411c59
  411c26:	enter  0xf4e1,0xfb
  411c2a:	scas   eax,DWORD PTR es:[edi]
  411c2b:	ror    BYTE PTR [edx],0xdb
  411c2e:	data16 jbe 0x411c0f
  411c31:	into   
  411c32:	fadd   QWORD PTR [ebp+0x9161b29]
  411c38:	mov    esp,DWORD PTR [edx+ecx*8+0x6a]
  411c3c:	push   esi
  411c3d:	fst    DWORD PTR [eax+esi*8+0x6007bbb4]
  411c44:	mov    edx,edx
  411c46:	push   ecx
  411c47:	sub    bl,BYTE PTR [esi-0xb]
  411c4a:	push   0x650be56e
  411c4f:	pop    edx
  411c50:	mov    cs,WORD PTR [ecx+ebx*1+0x58]
  411c54:	jecxz  0x411cd2
  411c56:	mov    WORD PTR [edi+ecx*8+0x43c8dbbf],?
  411c5d:	jbe    0x411c17
  411c5f:	pusha  
  411c60:	xor    DWORD PTR [esi+0x77],edx
  411c63:	je     0x411c61
  411c65:	in     eax,dx
  411c66:	je     0x411cc6
  411c68:	mov    bl,0x84
  411c6a:	push   cs
  411c6b:	arpl   WORD PTR [edx-0x1513794f],dx
  411c71:	(bad)  
  411c72:	nop
  411c73:	gs inc ebx
  411c75:	inc    ebx
  411c76:	jo     0x411c5d
  411c78:	addr16 cmc 
  411c7a:	push   edx
  411c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c7c:	setae  BYTE PTR [ebx]
  411c7f:	shr    DWORD PTR [edx],cl
  411c81:	mov    dl,0x69
  411c83:	repnz cmp BYTE PTR [esi],0x17
  411c87:	sub    BYTE PTR [edx-0xa],al
  411c8a:	cmp    eax,0xe125a121
  411c8f:	push   ebp
  411c90:	sti    
  411c91:	outs   dx,BYTE PTR ds:[esi]
  411c92:	loope  0x411d00
  411c94:	test   al,0x80
  411c96:	fwait
  411c97:	mov    edx,0x36338d41
  411c9c:	pushf  
  411c9d:	inc    ecx
  411c9e:	popf   
  411c9f:	xchg   ecx,eax
  411ca0:	inc    edi
  411ca1:	xchg   BYTE PTR [ebp-0x7127ef12],ch
  411ca7:	mov    al,0xdf
  411ca9:	data16 (bad) 
  411cab:	jge    0x411d17
  411cad:	push   es
  411cae:	inc    edx
  411caf:	and    BYTE PTR [edi+0x2c],bl
  411cb2:	and    esi,edi
  411cb4:	mov    ah,0x59
  411cb6:	pop    esp
  411cb7:	jecxz  0x411cd8
  411cb9:	push   ds
  411cba:	xchg   ebx,eax
  411cbb:	cmp    BYTE PTR [edi+edx*8],cl
  411cbe:	ja     0x411c60
  411cc0:	retf   
  411cc1:	push   eax
  411cc2:	scas   eax,DWORD PTR es:[edi]
  411cc3:	sbb    ah,BYTE PTR [ebx]
  411cc5:	or     eax,DWORD PTR [ebp-0x40]
  411cc8:	or     ecx,eax
  411cca:	test   BYTE PTR [edi-0x4e],bh
  411ccd:	cmc    
  411cce:	inc    esi
  411ccf:	jnp    0x411d28
  411cd1:	pop    edi
  411cd2:	adc    bl,BYTE PTR [edi+eiz*4]
  411cd5:	mov    edx,0x2573528
  411cda:	adc    eax,0x187932bf
  411cdf:	dec    ebp
  411ce0:	jb     0x411cc9
  411ce2:	pop    ebx
  411ce3:	in     al,dx
  411ce4:	mov    esp,0xa78b3c25
  411ce9:	gs xor al,0xf
  411cec:	lods   eax,DWORD PTR ds:[esi]
  411ced:	add    BYTE PTR [ebp+ebx*2-0x64],0x4c
  411cf2:	sbb    al,0x5c
  411cf4:	sbb    ecx,DWORD PTR [ebx-0x9]
  411cf7:	mov    ch,0x37
  411cf9:	sbb    DWORD PTR [edi],esi
  411cfb:	mov    edx,edx
  411cfd:	add    DWORD PTR [ebp+0x3a],esp
  411d00:	ret    
  411d01:	push   cs
  411d02:	and    BYTE PTR [esi+esi*8+0x5c],0x75
  411d07:	pushf  
  411d08:	js     0x411d61
  411d0a:	sub    eax,0xffffffa4
  411d0d:	mov    ebx,0x63305125
  411d12:	ins    DWORD PTR es:[edi],dx
  411d13:	pop    es
  411d14:	sub    edi,DWORD PTR [ebp-0x66]
  411d17:	dec    esi
  411d18:	mov    eax,ds:0x8ee76c7e
  411d1d:	add    ch,BYTE PTR [edx]
  411d1f:	fldcw  WORD PTR [ebx-0x5d]
  411d22:	loope  0x411ceb
  411d24:	fistp  DWORD PTR [esi+eax*1]
  411d27:	inc    ebx
  411d28:	pause  
  411d2a:	inc    edx
  411d2b:	(bad)  
  411d2c:	and    ch,BYTE PTR [edx-0x33]
  411d2f:	rol    DWORD PTR [edx-0x7bb85740],0x5
  411d36:	cdq    
  411d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d38:	add    ebp,edi
  411d3a:	(bad)  
  411d3c:	push   ds
  411d3d:	xchg   ebx,eax
  411d3e:	jmp    0x7ddb:0x4b665385
  411d45:	int    0xc2
  411d47:	mov    al,0x18
  411d49:	pop    ebp
  411d4a:	push   edx
  411d4b:	cmc    
  411d4c:	jp     0x411d7d
  411d4e:	inc    edi
  411d4f:	fs je  0x411dce
  411d52:	out    dx,eax
  411d53:	push   esi
  411d54:	mov    BYTE PTR [edx],dh
  411d56:	icebp  
  411d57:	xchg   cl,bh
  411d59:	lods   eax,DWORD PTR ds:[esi]
  411d5a:	fsub   QWORD PTR [edi]
  411d5c:	push   eax
  411d5d:	dec    esi
  411d5e:	mov    WORD PTR es:[esp+edx*2],ds
  411d62:	xchg   esi,eax
  411d63:	sbb    BYTE PTR [esi+0x594dbd39],0xd9
  411d6a:	es mov dh,0x21
  411d6d:	or     dh,ah
  411d6f:	jg     0x411d37
  411d71:	inc    edi
  411d72:	mov    ebp,0xae8ab578
  411d77:	ror    DWORD PTR [esi],cl
  411d79:	adc    BYTE PTR [ebp-0x31330b6],dl
  411d7f:	sub    dl,BYTE PTR [edx-0x11674209]
  411d85:	nop
  411d86:	loop   0x411d12
  411d88:	cmp    ah,BYTE PTR [eax]
  411d8a:	or     al,0xcb
  411d8c:	ror    BYTE PTR [ebx+ebp*2+0x50cd0b73],cl
  411d93:	cmc    
  411d94:	pcmpgtb mm5,mm5
  411d97:	mov    dl,0x4f
  411d99:	sub    BYTE PTR [edi+0xb41c6a8],cl
  411d9f:	inc    ebp
  411da0:	push   edi
  411da1:	push   cs
  411da2:	das    
  411da3:	fbstp  TBYTE PTR [bp+si]
  411da6:	mov    ebp,DWORD PTR [ecx]
  411da8:	sbb    ebx,DWORD PTR [ecx]
  411daa:	mov    cl,0xcf
  411dac:	call   0xd4f7271f
  411db1:	pop    esp
  411db2:	outs   dx,DWORD PTR ds:[esi]
  411db3:	jmp    0x546c:0xa7f6c112
  411dba:	xchg   DWORD PTR [ebp+0x49],edi
  411dbd:	(bad)  
  411dbe:	mov    ds:0x1db10114,al
  411dc3:	ins    BYTE PTR es:[edi],dx
  411dc4:	nop
  411dc5:	out    0xd,al
  411dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dc8:	pop    ebp
  411dc9:	sub    BYTE PTR [edi-0x26],bl
  411dcc:	and    DWORD PTR [eax+0x45],0xffffffb9
  411dd0:	hlt    
  411dd1:	mov    bl,0xd4
  411dd3:	add    BYTE PTR [ebp-0x2d],bh
  411dd6:	sar    cl,0x8c
  411dd9:	fwait
  411dda:	ss int3 
  411ddc:	pop    es
  411ddd:	mov    ecx,0xb3566db7
  411de2:	cld    
  411de3:	popa   
  411de4:	neg    DWORD PTR [esi]
  411de6:	das    
  411de7:	gs in  al,0x1c
  411dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411deb:	sbb    al,BYTE PTR [edi+0x54ec9add]
  411df1:	fmul   QWORD PTR [ebp+0xbce7125]
  411df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411df8:	mov    ds:0x2cce73d6,al
  411dfd:	jl     0x411dae
  411dff:	or     esi,ebp
  411e01:	(bad)  
  411e02:	sub    DWORD PTR [esi],edx
  411e04:	ins    BYTE PTR es:[edi],dx
  411e05:	ja     0x411dd0
  411e07:	repnz inc esi
  411e09:	adc    ch,BYTE PTR [ebx+0x154b828b]
  411e0f:	push   esp
  411e10:	add    DWORD PTR [ebx+0x5d],0xffffff98
  411e14:	out    0xef,al
  411e16:	push   cs
  411e17:	fld    DWORD PTR [edx+0x36]
  411e1a:	xchg   ecx,eax
  411e1b:	cmp    DWORD PTR [edi-0x22],esi
  411e1e:	jbe    0x411dd4
  411e20:	pop    edx
  411e21:	hlt    
  411e22:	outs   dx,BYTE PTR ds:[esi]
  411e23:	jmp    0x342:0x758580a2
  411e2a:	mov    ch,0x17
  411e2c:	cmp    DWORD PTR [edi],eax
  411e2e:	mov    al,ds:0xbabb6f03
  411e33:	sbb    eax,0xe227beaf
  411e38:	sub    al,0xcd
  411e3a:	fdivr  DWORD PTR [eax]
  411e3c:	push   0xffffffd8
  411e3e:	mov    bh,0x8f
  411e40:	ins    BYTE PTR es:[edi],dx
  411e41:	fnsave [edi-0x62]
  411e44:	mov    ebx,0x75f1c516
  411e49:	mov    al,ds:0x4428f2b5
  411e4e:	push   esp
  411e4f:	test   al,0xf6
  411e51:	sbb    BYTE PTR [eax-0x147f0e4d],al
  411e57:	cdq    
  411e58:	inc    eax
  411e59:	mov    ah,0xad
  411e5b:	dec    ebx
  411e5c:	xlat   BYTE PTR ds:[ebx]
  411e5d:	dec    eax
  411e5e:	addr16 loop 0x411eb8
  411e61:	scas   eax,DWORD PTR es:[edi]
  411e62:	sub    DWORD PTR [esi+0x37],ecx
  411e65:	lds    ebx,FWORD PTR [ecx]
  411e67:	mov    dh,0xd2
  411e69:	fld    DWORD PTR [eax-0x18d36044]
  411e6f:	retf   0xd6cd
  411e72:	xor    al,0x47
  411e74:	fucomip st,st(1)
  411e76:	jl     0x411e94
  411e78:	scas   eax,DWORD PTR es:[edi]
  411e79:	ror    DWORD PTR [ebp-0x6cb8107d],0xde
  411e80:	push   0x2437f1e8
  411e85:	inc    ebp
  411e86:	into   
  411e87:	aam    0xab
  411e89:	push   0xfffffff1
  411e8b:	js     0x411ed7
  411e8d:	pop    edi
  411e8e:	sub    esp,eax
  411e90:	aaa    
  411e91:	sbb    al,0x95
  411e93:	inc    ebx
  411e94:	clc    
  411e95:	loope  0x411e83
  411e97:	call   0xc41f:0xddc1a33a
  411e9e:	ret    
  411e9f:	pop    ss
  411ea0:	push   cs
  411ea1:	pop    ecx
  411ea2:	dec    edi
  411ea3:	fild   WORD PTR [edi+ebp*1]
  411ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea7:	aad    0x66
  411ea9:	and    BYTE PTR [edx+edi*8+0x75],bl
  411ead:	add    esi,DWORD PTR [edi+0x4be0a2fc]
  411eb3:	std    
  411eb4:	dec    ebp
  411eb5:	rol    DWORD PTR [eax-0x3a],cl
  411eb8:	push   ss
  411eb9:	je     0x411ee6
  411ebb:	xor    eax,0xcf455ef5
  411ec0:	js     0x411eba
  411ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec3:	push   edx
  411ec4:	xchg   edx,eax
  411ec5:	in     eax,0x4d
  411ec7:	shr    DWORD PTR [ebx],cl
  411ec9:	dec    esp
  411eca:	xchg   edx,eax
  411ecb:	sti    
  411ecc:	mov    edx,0xa67a5035
  411ed1:	jmp    FWORD PTR [eax-0x69796b9d]
  411ed7:	sbb    eax,0x20d24677
  411edc:	mov    dl,0x7a
  411ede:	pop    esi
  411edf:	xor    ecx,DWORD PTR [edx-0x5c]
  411ee2:	push   0xffffff92
  411ee4:	push   ss
  411ee5:	shl    BYTE PTR [eax+0x5132c802],1
  411eeb:	inc    ebx
  411eec:	pop    edi
  411eed:	cmp    eax,DWORD PTR [edx]
  411eef:	cmc    
  411ef0:	repz push edi
  411ef2:	aam    0xdd
  411ef4:	xchg   DWORD PTR [ebx+0x71],edi
  411ef7:	dec    edx
  411ef8:	sbb    dl,BYTE PTR [ebx]
  411efa:	dec    eax
  411efb:	push   ebx
  411efc:	popf   
  411efd:	sahf   
  411efe:	mov    dl,0xe5
  411f00:	push   edx
  411f01:	pop    eax
  411f02:	scas   eax,DWORD PTR es:[edi]
  411f03:	dec    ebp
  411f04:	push   ecx
  411f05:	or     DWORD PTR [ebx],0x3b
  411f08:	out    0x51,ax
  411f0b:	adc    bh,dh
  411f0d:	jmp    0x411f15
  411f0f:	(bad)  
  411f10:	fadd   st,st(7)
  411f12:	pop    esp
  411f13:	sub    ah,BYTE PTR [edx-0x26]
  411f16:	push   ebp
  411f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f18:	loope  0x411f92
  411f1a:	and    ebp,DWORD PTR [ecx]
  411f1c:	and    al,0x1a
  411f1e:	pop    es
  411f1f:	sbb    ebx,DWORD PTR [ecx-0x1f88d498]
  411f25:	and    ch,BYTE PTR es:[edi-0x6c]
  411f29:	push   edi
  411f2a:	sahf   
  411f2b:	xchg   esp,eax
  411f2c:	adc    eax,0x4fc3bb85
  411f31:	mov    cl,0xc0
  411f33:	(bad)  
  411f34:	loopne 0x411ee5
  411f36:	adc    al,dl
  411f38:	mov    cl,0x9b
  411f3a:	jne    0x411f16
  411f3c:	sub    DWORD PTR [esi+edi*4],0x26e4fcc2
  411f43:	ror    BYTE PTR es:0xf31f20a9,0x8f
  411f4b:	or     cl,bl
  411f4d:	fadd   QWORD PTR [esi+0xf]
  411f50:	xchg   ah,ah
  411f52:	cmp    al,0xf8
  411f54:	cmp    ecx,DWORD PTR cs:[edx+0x32909da]
  411f5b:	idiv   BYTE PTR [edx-0x6d26b332]
  411f61:	xchg   esi,eax
  411f62:	add    ebx,ebp
  411f64:	add    eax,0x63d999cb
  411f69:	adc    ebp,DWORD PTR [esi-0x37]
  411f6c:	scas   eax,DWORD PTR es:[edi]
  411f6d:	inc    ebp
  411f6e:	in     eax,dx
  411f6f:	ins    BYTE PTR es:[edi],dx
  411f70:	and    eax,0x822b645c
  411f75:	add    BYTE PTR [ebp+0x7f04fb6f],bl
  411f7b:	mov    cl,0x92
  411f7d:	inc    eax
  411f7e:	jne    0x411f67
  411f80:	inc    edx
  411f81:	or     BYTE PTR [edx+0x6b672190],ch
  411f87:	arpl   WORD PTR [edi-0x3e7ca007],si
  411f8d:	mov    eax,ds:0xbb52b251
  411f92:	aad    0xb5
  411f94:	pop    ebx
  411f96:	iret   
  411f97:	mov    edi,0x53afd8af
  411f9c:	dec    eax
  411f9d:	jmp    0x411f8f
  411f9f:	sbb    al,0x9c
  411fa1:	cdq    
  411fa2:	pop    esi
  411fa3:	loopne 0x411f5a
  411fa5:	xbegin 0xb535555e
  411fab:	push   ebp
  411fac:	retf   0xef77
  411faf:	push   es
  411fb0:	repnz imul esi,edx,0x469726bc
  411fb7:	adc    bh,BYTE PTR fs:[bx+si-0x2a]
  411fbc:	out    0xd7,eax
  411fbe:	xor    esp,DWORD PTR [edi+0x42f40fd7]
  411fc4:	push   ebx
  411fc5:	sti    
  411fc6:	jge    0x412009
  411fc8:	sar    bh,1
  411fca:	ins    BYTE PTR es:[edi],dx
  411fcb:	xor    ebp,DWORD PTR [edx+ecx*2-0x9]
  411fcf:	add    DWORD PTR [ebx+edx*2],0xbb248031
  411fd6:	rol    BYTE PTR [ebx+0x3073f56b],cl
  411fdc:	popa   
  411fdd:	pop    ds
  411fde:	loope  0x412025
  411fe0:	adc    bl,BYTE PTR [esi]
  411fe2:	mov    bl,0x9e
  411fe4:	jns    0x411fe1
  411fe6:	shl    DWORD PTR ds:0xe8adfa5f,1
  411fec:	pop    ecx
  411fed:	add    bl,BYTE PTR [edi]
  411fef:	jno    0x412055
  411ff1:	push   ebx
  411ff2:	je     0x411fea
  411ff4:	or     dl,ch
  411ff6:	adc    al,0xfe
  411ff8:	cld    
  411ff9:	(bad)
  411ffc:	sbb    eax,0xdc208eec
  412001:	sbb    bl,BYTE PTR [ecx]
  412003:	dec    ecx
  412004:	mov    WORD PTR [esi+0x6c],?
  412007:	imul   edi,DWORD PTR ds:0xfc4d2f61,0x2a
  41200e:	xor    al,0xb6
  412010:	(bad)  
  412011:	push   cs
  412012:	push   esp
  412013:	out    0xb8,eax
  412015:	in     eax,0xc4
  412017:	pop    edx
  412018:	push   edx
  412019:	cwde   
  41201a:	loop   0x412091
  41201c:	dec    edi
  41201d:	ins    DWORD PTR es:[edi],dx
  41201e:	fidiv  DWORD PTR [edx]
  412020:	call   0xe7830183
  412025:	test   al,0x58
  412027:	mov    ds:0x3fdfcaec,eax
  41202c:	pop    ebx
  41202d:	test   eax,0x36fc9ab1
  412032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412033:	jmp    0x9d9d:0xc2feb244
  41203a:	in     eax,0x9
  41203c:	xchg   ecx,eax
  41203d:	push   edi
  41203e:	shl    DWORD PTR [eax-0x72],cl
  412041:	fmul   DWORD PTR ds:0x797115aa
  412047:	clc    
  412048:	xchg   ebp,eax
  412049:	pop    esp
  41204a:	sbb    ecx,DWORD PTR [ecx]
  41204c:	push   ds
  41204d:	ins    DWORD PTR es:[edi],dx
  41204e:	out    0xa0,eax
  412050:	enter  0x804f,0x87
  412054:	pop    esi
  412055:	loope  0x411fea
  412057:	jmp    0xa255:0xac3cc46a
  41205e:	fcom   DWORD PTR [ebp+0x6bee8359]
  412064:	mov    edi,0xb88f0588
  412069:	push   ss
  41206a:	xor    eax,0x909d15b2
  41206f:	add    al,BYTE PTR [esi+0x59]
  412072:	dec    ebx
  412073:	push   ebx
  412074:	loopne 0x412048
  412076:	adc    eax,0xd936c7f6
  41207b:	(bad)  
  41207c:	into   
  41207d:	scas   al,BYTE PTR es:[edi]
  41207e:	sub    bh,BYTE PTR [edi-0x5eb8c537]
  412084:	mul    BYTE PTR [edi+eax*4-0x65a6e73e]
  41208b:	add    BYTE PTR [edi+0x70],dl
  41208e:	(bad)  
  41208f:	(bad)  
  412090:	fsubr  st(1),st
  412092:	loop   0x4120d3
  412094:	(bad)  
  412095:	fadd   st(6),st
  412097:	cmp    eax,0x27e74012
  41209c:	ss fcomip st,st(5)
  41209f:	rol    BYTE PTR [ecx+0x27],0x2c
  4120a3:	out    dx,al
  4120a4:	rol    ebx,0xd7
  4120a7:	(bad)  [edi]
  4120a9:	mov    eax,0xb22b002b
  4120ae:	sbb    dl,BYTE PTR [ecx+0x7af676e0]
  4120b4:	mov    ds:0xe026ba75,al
  4120b9:	popa   
  4120ba:	fnstcw WORD PTR [ebx]
  4120bc:	cdq    
  4120bd:	scas   al,BYTE PTR es:[edi]
  4120be:	mov    ds,WORD PTR [ebx+ebx*2+0x4d]
  4120c2:	jns    0x41205f
  4120c4:	in     al,0xff
  4120c6:	mov    ecx,0x4850ff41
  4120cb:	cmp    DWORD PTR [edx+0x2d],edx
  4120ce:	xor    ecx,0xffffffab
  4120d1:	popf   
  4120d2:	dec    esp
  4120d3:	pop    ebp
  4120d4:	push   eax
  4120d5:	dec    ebx
  4120d6:	push   eax
  4120d7:	popa   
  4120d8:	dec    ebx
  4120d9:	push   edi
  4120da:	pop    edi
  4120db:	fdivp  st(2),st
  4120dd:	pop    edx
  4120de:	jo     0x412126
  4120e0:	std    
  4120e1:	jnp    0x4120b0
  4120e3:	push   esi
  4120e4:	pop    ecx
  4120e5:	or     DWORD PTR [ecx-0x33],eax
  4120e8:	(bad)  
  4120e9:	mov    ds:0x12fcc29f,eax
  4120ee:	sti    
  4120ef:	and    DWORD PTR [esp+ecx*8-0x3c31fd69],0x82116eb8
  4120fa:	sbb    dl,cl
  4120fc:	and    BYTE PTR [ecx],bl
  4120fe:	cdq    
  4120ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412100:	sar    BYTE PTR [edx],1
  412102:	div    BYTE PTR [ebp+edx*1+0x43]
  412106:	fnstcw WORD PTR [esp+ebx*8-0x6a]
  41210a:	int3   
  41210b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41210d:	arpl   WORD PTR [esi+0x327aa62e],cx
  412113:	mov    ah,0x2c
  412115:	xchg   edx,eax
  412116:	sub    bl,BYTE PTR [esi+0x540fa861]
  41211c:	or     eax,0x1fd37f26
  412121:	bound  edi,QWORD PTR [eax]
  412123:	xchg   esp,eax
  412124:	jnp    0x412157
  412126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412127:	out    0x84,al
  412129:	(bad)  [edi+0x4efbffab]
  41212f:	int3   
  412130:	mov    edx,es
  412132:	mov    dh,0x72
  412134:	dec    ecx
  412135:	pop    edx
  412136:	cmp    edi,ebx
  412138:	push   edx
  412139:	mov    al,ds:0x73916d2d
  41213e:	hlt    
  41213f:	rcr    cl,0xe2
  412142:	out    dx,eax
  412143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412144:	xchg   ebp,eax
  412145:	sbb    ebp,DWORD PTR [ebx+0x5d683440]
  41214b:	jle    0x412140
  41214d:	mov    bl,0xcd
  41214f:	sub    dh,BYTE PTR [ebx+0x60]
  412152:	shl    DWORD PTR [ebx+0x4e],1
  412155:	fidiv  WORD PTR [edx+0x199f51aa]
  41215b:	xchg   esi,eax
  41215c:	mov    al,ds:0x8a849fe1
  412161:	sub    eax,0x400c0891
  412166:	shl    ch,0x21
  412169:	aad    0x27
  41216b:	pop    edx
  41216c:	mov    ds:0x1f902d72,al
  412171:	scas   eax,DWORD PTR es:[edi]
  412172:	in     eax,dx
  412173:	xlat   BYTE PTR ds:[ebx]
  412174:	dec    ecx
  412175:	test   eax,0x891d377a
  41217a:	enter  0xafa3,0x3e
  41217e:	cmp    eax,0x113eb832
  412183:	adc    bh,BYTE PTR [edi+0x2a]
  412186:	cmp    eax,0x672f69ed
  41218b:	add    ebp,DWORD PTR fs:[esi-0x50]
  41218f:	sub    ecx,ecx
  412191:	out    dx,al
  412192:	jbe    0x41217f
  412194:	jmp    0x4121ed
  412196:	add    eax,0xdc5e5811
  41219b:	mov    ch,0xc8
  41219d:	mov    BYTE PTR [ecx*8+0x2dad5cc8],dl
  4121a4:	and    ch,BYTE PTR [edi-0x1f]
  4121a7:	or     al,0xe3
  4121a9:	jecxz  0x4121e2
  4121ab:	fisubr DWORD PTR [edx+0x42]
  4121ae:	mov    DWORD PTR [esi+0x71],ebp
  4121b1:	in     al,0xa7
  4121b3:	jmp    0x412150
  4121b5:	fcomp  QWORD PTR ds:0xe5b2606f
  4121bb:	dec    esp
  4121bc:	inc    esp
  4121bd:	xchg   DWORD PTR [esi-0x30b3bb56],eax
  4121c3:	retf   0x4ce6
  4121c6:	inc    eax
  4121c7:	cmp    al,BYTE PTR [ebx-0x136abac3]
  4121cd:	(bad)  
  4121ce:	in     eax,0x23
  4121d0:	fst    st(5)
  4121d2:	fidiv  WORD PTR [edi]
  4121d4:	sbb    bh,dh
  4121d6:	into   
  4121d7:	jg     0x41217e
  4121d9:	add    BYTE PTR [ebp+0x3fdc526b],ah
  4121df:	jns    0x412198
  4121e1:	fnsave [ebp-0xf9ea9ae]
  4121e7:	cmp    eax,0x7e0d2ad6
  4121ec:	mov    ds:0x939f4dae,al
  4121f1:	fisttp DWORD PTR [esi]
  4121f3:	cmp    eax,0xfb5b2d7b
  4121f8:	inc    esi
  4121f9:	popf   
  4121fa:	inc    edi
  4121fb:	sub    DWORD PTR [eax-0x2e],eax
  4121fe:	and    al,bl
  412200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412201:	push   0x5b1ab873
  412206:	lods   al,BYTE PTR ds:[esi]
  412207:	retf   0x6512
  41220a:	lock sub ebp,DWORD PTR [ebx-0x1ca2bd28]
  412211:	and    eax,0x38f8a117
  412216:	pop    dx
  412218:	(bad)  
  412219:	push   esp
  41221a:	repnz push ebx
  41221c:	mov    DWORD PTR [eax],esi
  41221e:	outs   dx,DWORD PTR ds:[esi]
  41221f:	cli    
  412220:	sbb    dh,BYTE PTR [ecx]
  412222:	inc    esi
  412223:	and    dl,ch
  412225:	jns    0x412223
  412227:	sub    dh,bl
  412229:	mov    ah,0x41
  41222b:	jne    0x4121fb
  41222d:	push   ebp
  41222e:	retf   
  41222f:	mov    edx,0x98504f24
  412234:	adc    ax,0x1300
  412238:	aam    0x47
  41223a:	jbe    0x412289
  41223c:	inc    edx
  41223d:	xchg   edi,eax
  41223e:	cmp    eax,0x187d25e7
  412243:	stos   DWORD PTR es:[edi],eax
  412244:	sti    
  412245:	leave  
  412246:	ins    BYTE PTR es:[edi],dx
  412247:	inc    esi
  412248:	push   0xffffffdb
  41224a:	push   cs
  41224b:	cmc    
  41224c:	rcl    DWORD PTR [edx+0x5a],1
  41224f:	mov    ecx,0x37cbee1d
  412254:	sbb    edx,ebp
  412256:	int    0x3e
  412258:	sub    al,0xc8
  41225a:	gs push ds
  41225c:	(bad)  
  41225d:	(bad)  
  41225e:	imul   esi,DWORD PTR [edi+0x2b],0x77
  412262:	ds std 
  412264:	dec    ecx
  412265:	jno    0x41228f
  412267:	sub    BYTE PTR [edi],cl
  412269:	hlt    
  41226a:	or     dh,BYTE PTR [ebp-0x17664077]
  412270:	scas   eax,DWORD PTR es:[edi]
  412271:	or     DWORD PTR [edi],ebx
  412273:	push   0x4d
  412275:	or     ebp,DWORD PTR [ebx+ebx*2+0x4e]
  412279:	outs   dx,DWORD PTR ds:[esi]
  41227a:	icebp  
  41227b:	mov    ch,0x58
  41227d:	sub    eax,0xc62a1f09
  412282:	pop    eax
  412283:	dec    ecx
  412284:	cmp    al,0x70
  412286:	add    eax,0x31d760cb
  41228b:	adc    eax,0x94fd03be
  412290:	xchg   edx,eax
  412291:	jne    0x412246
  412293:	cmp    ch,BYTE PTR [edi-0x57]
  412296:	add    dh,ch
  412298:	rcl    DWORD PTR [ebx+0x4c],cl
  41229b:	test   ebp,edx
  41229d:	mov    ch,0x55
  41229f:	jns    0x4122fb
  4122a1:	(bad)  
  4122a2:	ss cs popa 
  4122a5:	lds    esi,FWORD PTR [ecx]
  4122a7:	dec    ebx
  4122a8:	sti    
  4122a9:	bound  esp,QWORD PTR [ebp+0x4]
  4122ac:	add    bh,cl
  4122ae:	inc    ecx
  4122af:	jno    0x4122f6
  4122b1:	shr    DWORD PTR [esi+0x4f84bd88],1
  4122b7:	pop    ebp
  4122b8:	cmp    al,0xc3
  4122ba:	dec    esi
  4122bb:	sahf   
  4122bc:	imul   esi,DWORD PTR [edi-0x7c85dea9],0xffffffeb
  4122c3:	jp     0x412322
  4122c5:	retf   0x4a0f
  4122c8:	mov    dh,0x4e
  4122ca:	and    BYTE PTR [eax-0x6f6ce375],bl
  4122d0:	test   DWORD PTR [ecx+ebp*1-0x4],ecx
  4122d4:	push   edx
  4122d5:	mov    cl,0xb1
  4122d7:	fdiv   DWORD PTR [ebp+eax*4-0x3c]
  4122db:	neg    DWORD PTR [edi-0x7b]
  4122de:	clc    
  4122df:	outs   dx,DWORD PTR ds:[esi]
  4122e0:	iret   
  4122e1:	(bad)  
  4122e2:	cmp    eax,0x304a8088
  4122e7:	es (bad) 
  4122e9:	(bad)  
  4122ea:	repnz lahf 
  4122ec:	xchg   ecx,eax
  4122ed:	scas   eax,DWORD PTR es:[edi]
  4122ee:	mov    ch,0xb
  4122f0:	iret   
  4122f1:	sub    BYTE PTR [ebx],dl
  4122f3:	pop    ecx
  4122f4:	dec    esp
  4122f5:	mov    ebx,0x5cc4506d
  4122fa:	sbb    eax,0x2dad9136
  4122ff:	arpl   WORD PTR [eax-0x5a],si
  412302:	cwde   
  412303:	stc    
  412304:	dec    eax
  412305:	ret    
  412306:	adc    eax,0x7455986c
  41230b:	sar    BYTE PTR [edx],0x2f
  41230e:	cwde   
  41230f:	(bad)  
  412310:	out    0x45,eax
  412312:	mov    ah,0x90
  412314:	cmp    dl,BYTE PTR [edi]
  412316:	push   cs
  412317:	test   DWORD PTR [esi+eax*2],ecx
  41231a:	jo     0x412365
  41231c:	mov    cl,0xfe
  41231e:	sbb    eax,0x7fe5bbd8
  412323:	icebp  
  412324:	in     al,0x64
  412326:	int    0x6c
  412328:	jl     0x4122bf
  41232a:	sbb    al,0x55
  41232c:	jo     0x4122eb
  41232e:	ret    0xb663
  412331:	out    0x63,eax
  412333:	mov    ah,0xc4
  412335:	data16 ficom DWORD PTR [ecx]
  412338:	dec    ebp
  412339:	test   eax,0x2ea624aa
  41233e:	(bad)  
  41233f:	mov    DWORD PTR [eax+0x4f],eax
  412342:	in     al,0xeb
  412344:	ja     0x4122e6
  412346:	mov    BYTE PTR [ebp-0x7f],dl
  412349:	push   ebp
  41234a:	add    esp,DWORD PTR [edx+0x347985ce]
  412350:	add    DWORD PTR [edi+0x53521a31],esp
  412356:	inc    ecx
  412357:	loope  0x412360
  412359:	sub    ebx,esp
  41235b:	test   BYTE PTR [edi-0x8],ch
  41235e:	shr    DWORD PTR [edi],0x42
  412361:	pop    edi
  412362:	inc    ecx
  412363:	sbb    al,0x9
  412365:	int    0xd3
  412367:	les    ebp,FWORD PTR [ecx]
  412369:	mov    ecx,0xd2c46cd4
  41236e:	mov    dl,0x72
  412370:	loopne 0x4123d5
  412372:	and    DWORD PTR [edx],esp
  412374:	mov    dl,0x4f
  412376:	mov    dh,0x33
  412378:	fdivr  QWORD PTR [edi+0x2b2566de]
  41237e:	lds    edx,FWORD PTR [ecx]
  412380:	dec    edx
  412381:	hlt    
  412382:	cmp    BYTE PTR [edx],bh
  412384:	retf   
  412385:	add    eax,0xf33a0dee
  41238a:	pushf  
  41238b:	fiadd  WORD PTR [esi+0x73]
  41238e:	mov    edi,0xa8bec9d7
  412393:	rol    DWORD PTR [ebp-0x48b5dc36],0x87
  41239a:	stos   DWORD PTR es:[edi],eax
  41239b:	(bad)
  41239e:	gs jo  0x412348
  4123a1:	sar    DWORD PTR [eax-0x7efe06cf],1
  4123a7:	mov    BYTE PTR [edx],ch
  4123a9:	push   ss
  4123aa:	hlt    
  4123ab:	aaa    
  4123ac:	stos   BYTE PTR es:[edi],al
  4123ad:	or     ecx,DWORD PTR [ecx]
  4123af:	xchg   edx,eax
  4123b0:	lds    ecx,FWORD PTR ds:0xb48ada5f
  4123b6:	gs ja  0x412427
  4123b9:	jmp    0x412351
  4123bb:	rol    ecx,1
  4123bd:	xor    BYTE PTR [ebp+0x17],al
  4123c0:	xor    eax,0x4406ff67
  4123c5:	mov    DWORD PTR [edi],ecx
  4123c7:	mov    WORD PTR [ecx],ds
  4123c9:	adc    dl,BYTE PTR [edx-0x7b]
  4123cc:	imul   ebp,DWORD PTR [ecx+0x3ac3e2d5],0x638537e3
  4123d6:	je     0x412381
  4123d8:	in     eax,dx
  4123d9:	icebp  
  4123da:	adc    DWORD PTR [ecx],ecx
  4123dc:	cs xor eax,esp
  4123df:	pop    eax
  4123e0:	adc    BYTE PTR [ebx+0x35],dl
  4123e3:	rcl    BYTE PTR [edx+eax*4+0x1],cl
  4123e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123e8:	popf   
  4123e9:	clc    
  4123ea:	out    dx,eax
  4123eb:	clc    
  4123ec:	xor    ecx,esi
  4123ee:	mov    ds:0x2bdf7aa9,al
  4123f3:	sub    eax,0x1d58e02a
  4123f8:	xor    eax,ecx
  4123fa:	xlat   BYTE PTR ds:[ebx]
  4123fb:	jb     0x41245e
  4123fd:	lea    ebp,[eax+eiz*2+0x4]
  412401:	pop    edi
  412402:	pop    ebx
  412403:	repnz lahf 
  412405:	std    
  412406:	sbb    DWORD PTR [ebp-0x5a],0xcd736dd3
  41240d:	sub    eax,0xf06daa62
  412412:	test   DWORD PTR [ebx+0x5c],0xa4242e83
  412419:	mov    DWORD PTR [ebx-0x2bda4138],ebp
  41241f:	imul   ecx,edi,0xffffff9c
  412422:	add    dl,BYTE PTR [ebx]
  412424:	sti    
  412425:	shl    BYTE PTR [edi-0x2d],0xe
  412429:	out    0xc5,al
  41242b:	lods   al,BYTE PTR ds:[esi]
  41242c:	sub    eax,DWORD PTR [ecx+0x6a]
  41242f:	mov    edi,0xaa923c53
  412434:	inc    DWORD PTR [ebp+ebx*4+0x1b]
  412438:	loope  0x412453
  41243a:	ret    0x4e31
  41243d:	push   ds
  41243e:	hlt    
  41243f:	addr16 xchg edi,eax
  412441:	adc    al,0xba
  412443:	push   ebp
  412444:	sahf   
  412445:	push   edi
  412446:	cwde   
  412447:	pop    es
  412448:	jne    0x4123dd
  41244a:	cli    
  41244b:	pop    eax
  41244c:	or     ecx,DWORD PTR cs:[edi-0x3d6740f4]
  412453:	push   0xffffffe2
  412455:	push   eax
  412456:	or     BYTE PTR [edi+0x76],cl
  412459:	push   ss
  41245a:	fst    QWORD PTR [ebx-0x21491188]
  412460:	ret    
  412461:	xchg   DWORD PTR [ebx+0x493600dd],edi
  412467:	jmp    0x5f49a474
  41246c:	fstp   DWORD PTR ds:0xa884fae5
  412472:	stos   DWORD PTR es:[edi],eax
  412473:	stos   BYTE PTR es:[edi],al
  412474:	push   0xe8d92a62
  412479:	mov    bh,0x82
  41247b:	push   cs
  41247c:	pop    ss
  41247d:	outs   dx,BYTE PTR ds:[esi]
  41247e:	mov    al,ds:0x9fb9db8e
  412483:	ss call 0x5ec:0x785b2786
  41248b:	ds add al,0x4
  41248e:	adc    al,0x70
  412490:	arpl   WORD PTR [esi+0x8993e94],sp
  412496:	int3   
  412497:	test   eax,0x7859a3dd
  41249c:	int3   
  41249d:	inc    edx
  41249e:	cmp    BYTE PTR [esi+0xee846ef],ch
  4124a4:	outs   dx,BYTE PTR ds:[esi]
  4124a5:	jnp    0x412477
  4124a7:	int3   
  4124a8:	call   0x30a3203d
  4124ad:	xor    ecx,ebp
  4124af:	ficom  DWORD PTR [ebx+ebp*1]
  4124b2:	shl    DWORD PTR [eax+ecx*2-0x6139d05b],1
  4124b9:	pop    ss
  4124ba:	pop    eax
  4124bb:	cmp    al,0x2c
  4124bd:	add    BYTE PTR [edx+0x5af264a9],al
  4124c3:	sub    al,0x1e
  4124c5:	in     eax,dx
  4124c6:	ret    0xd006
  4124c9:	in     al,0x58
  4124cb:	leave  
  4124cc:	add    ebp,DWORD PTR [ecx+0x6]
  4124cf:	add    edx,DWORD PTR [edi]
  4124d1:	out    0xae,eax
  4124d3:	jne    0x41245c
  4124d5:	mov    esi,0xe865d796
  4124da:	or     edi,DWORD PTR [eax-0x7e]
  4124dd:	out    0x8,al
  4124df:	sbb    ecx,edi
  4124e1:	mov    ecx,0x65a09e38
  4124e6:	mov    DWORD PTR [ebx+0x22b129bd],ebp
  4124ec:	cmp    eax,0x74d16dde
  4124f1:	jno    0x41247b
  4124f3:	mov    al,ds:0x1d7317d4
  4124f8:	push   esp
  4124f9:	mov    esi,0xeb805bfe
  4124fe:	pop    ecx
  4124ff:	jns    0x412503
  412501:	dec    esi
  412502:	or     al,0xf0
  412504:	cld    
  412505:	jl     0x412529
  412507:	int3   
  412508:	mov    ds:0x10cff869,eax
  41250d:	shr    DWORD PTR [edx+0x2fde82a4],cl
  412513:	or     bh,BYTE PTR [eax]
  412515:	stos   BYTE PTR es:[edi],al
  412516:	retf   0x8724
  412519:	loope  0x41256a
  41251b:	add    al,dl
  41251d:	add    al,0xda
  41251f:	ja     0x41255e
  412521:	aad    0xe6
  412523:	stc    
  412524:	ins    BYTE PTR es:[edi],dx
  412525:	dec    eax
  412526:	xchg   esi,eax
  412527:	lea    edx,[edx-0x5]
  41252a:	xor    ecx,DWORD PTR [eiz*4+0x4db6c913]
  412531:	dec    eax
  412532:	mov    ebx,0xd71ef30f
  412537:	jnp    0x4124e9
  412539:	mov    ds:0x2331970d,al
  41253e:	cli    
  41253f:	push   0xfffffff8
  412541:	sbb    cl,BYTE PTR [ecx+0x19]
  412544:	sbb    al,0x3d
  412546:	fsubr  QWORD PTR [ebx-0x5438178]
  41254c:	jecxz  0x4125ad
  41254e:	sbb    ah,BYTE PTR [ecx]
  412550:	xor    ebx,DWORD PTR [ebp+ebp*2+0x49]
  412554:	jp     0x4124fc
  412556:	add    BYTE PTR [edi+0x4b799643],ah
  41255c:	push   ebp
  41255d:	shl    DWORD PTR [eax-0x7af3c2e9],0x10
  412564:	mov    al,ds:0x5e02267c
  412569:	imul   esp,DWORD PTR [edi-0x28],0x3d
  41256d:	test   DWORD PTR [ebx],ecx
  41256f:	cmc    
  412570:	stc    
  412571:	add    bl,bh
  412573:	adc    esp,ebx
  412575:	clc    
  412576:	push   es
  412577:	pop    ebp
  412578:	and    BYTE PTR [esi],al
  41257a:	(bad)  
  41257c:	lods   al,BYTE PTR ds:[esi]
  41257d:	jns    0x412565
  41257f:	data16 lahf 
  412581:	jecxz  0x4125ae
  412583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412584:	in     eax,dx
  412585:	gs jo  0x412593
  412588:	mov    DWORD PTR [edx-0x1c],esi
  41258b:	out    0x83,eax
  41258d:	jbe    0x41257f
  41258f:	ja     0x412577
  412591:	cmc    
  412592:	sbb    BYTE PTR [edx],ch
  412594:	cmp    DWORD PTR [edx-0x5a],eax
  412597:	sti    
  412598:	(bad)  
  412599:	sub    edx,eax
  41259b:	or     ch,al
  41259d:	xlat   BYTE PTR ds:[ebx]
  41259e:	xchg   al,bl
  4125a0:	sar    BYTE PTR [ecx],1
  4125a2:	mov    ds:0x77140535,al
  4125a7:	outs   dx,BYTE PTR ds:[esi]
  4125a8:	xchg   ebx,eax
  4125a9:	mov    ch,0xd8
  4125ab:	jmp    0x335c6c84
  4125b0:	repnz xchg edx,eax
  4125b2:	push   ebx
  4125b3:	mov    esi,0xd023705c
  4125b8:	ds mov esp,0xe9e4b24f
  4125be:	dec    esp
  4125bf:	(bad)  
  4125c0:	test   DWORD PTR [ecx-0x68],0xc6b3b1b2
  4125c7:	fcomp  DWORD PTR ss:[edx+0x956a05]
  4125ce:	aas    
  4125cf:	mov    dl,0xc
  4125d1:	xor    DWORD PTR [esi+0x645adee3],0x1f
  4125d8:	shl    bh,cl
  4125da:	test   DWORD PTR [edi],0xdd57a701
  4125e0:	hlt    
  4125e1:	xchg   edx,eax
  4125e2:	jo     0x412624
  4125e4:	push   cs
  4125e5:	add    ebx,DWORD PTR [ecx+0x66]
  4125e8:	fwait
  4125e9:	in     al,dx
  4125ea:	adc    DWORD PTR [ebx],eax
  4125ec:	adc    al,ah
  4125ee:	loop   0x4125ef
  4125f0:	ret    
  4125f1:	mov    ebx,0xc43d0bad
  4125f6:	stc    
  4125f7:	das    
  4125f8:	stos   DWORD PTR es:[edi],eax
  4125f9:	bound  esi,QWORD PTR [eax+0x40573a01]
  4125ff:	pop    edi
  412600:	arpl   WORD PTR [ebx],si
  412602:	ficomp WORD PTR [ebx-0x132c6a97]
  412608:	rcr    DWORD PTR [edx+ebx*1-0x32],0xc7
  41260d:	aam    0x25
  41260f:	and    bh,cl
  412611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412612:	lock inc eax
  412614:	push   0xffffffa3
  412616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412617:	in     al,dx
  412618:	rol    DWORD PTR [esi+0xe03d678],cl
  41261e:	imul   DWORD PTR [ecx+0x2635a968]
  412624:	push   ecx
  412625:	adc    DWORD PTR [edi],eax
  412627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412628:	mov    edx,0x3fb49c6a
  41262d:	dec    edx
  41262e:	mov    dl,0xc8
  412630:	fs dec edx
  412632:	(bad)  
  412633:	int3   
  412634:	add    ebp,ebx
  412636:	xlat   BYTE PTR ds:[ebx]
  412637:	mov    bl,0xc9
  412639:	add    al,0xa4
  41263b:	imul   esp,DWORD PTR [esi-0xec83104],0xd00b055b
  412645:	jbe    0x4125fc
  412647:	xchg   esi,eax
  412648:	imul   edx,DWORD PTR [esi-0x47a47245],0xffffffdc
  41264f:	mov    esi,0xd60f373a
  412654:	push   ebx
  412655:	cwde   
  412656:	xor    dl,bh
  412658:	mov    BYTE PTR [edx],dh
  41265a:	add    al,cl
  41265c:	mov    edi,0xae4cbc75
  412661:	cmp    BYTE PTR [ebp+0x34b4fa49],bh
  412667:	pop    edx
  412668:	and    bh,ah
  41266a:	jl     0x412613
  41266c:	add    DWORD PTR [esi-0x79b73eb7],edi
  412672:	fmul   st(4),st
  412674:	cmc    
  412675:	loopne 0x4126ce
  412677:	mov    al,0x15
  412679:	fidivr DWORD PTR [esi]
  41267b:	loop   0x4126f3
  41267d:	ret    
  41267e:	xlat   BYTE PTR ds:[ebx]
  41267f:	mov    cl,0x95
  412681:	inc    ebp
  412682:	int3   
  412683:	xchg   edx,eax
  412684:	inc    ebp
  412685:	(bad)  
  412686:	cli    
  412687:	mov    ebx,0x74a7bceb
  41268c:	jecxz  0x412667
  41268e:	or     al,0xb3
  412690:	das    
  412691:	std    
  412692:	imul   eax,DWORD PTR [esi-0x27d91890],0xffffffdd
  412699:	mov    DWORD PTR [ebp+0x610bbaae],edx
  41269f:	fs jo  0x412684
  4126a2:	and    ah,BYTE PTR [ebx+ebp*2]
  4126a5:	push   esi
  4126a6:	mov    dl,0x8b
  4126a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126a9:	mov    al,ds:0x20c3add5
  4126ae:	xchg   ebx,eax
  4126af:	(bad)  
  4126b0:	sub    eax,0xae364167
  4126b5:	push   ss
  4126b6:	nop
  4126b7:	fcom   DWORD PTR [ecx+0x69460ffa]
  4126bd:	test   eax,0xb2322518
  4126c2:	adc    bh,cl
  4126c4:	xlat   BYTE PTR ds:[ebx]
  4126c5:	push   es
  4126c6:	stos   BYTE PTR es:[edi],al
  4126c7:	std    
  4126c8:	xor    bh,dl
  4126ca:	shl    cl,0xd8
  4126cd:	shl    BYTE PTR [ecx],1
  4126cf:	icebp  
  4126d0:	(bad)  
  4126d1:	push   edi
  4126d2:	mov    es,WORD PTR [esi+ecx*2]
  4126d5:	jp     0x4126a9
  4126d7:	add    DWORD PTR [ecx],esp
  4126d9:	loop   0x412736
  4126db:	push   ebp
  4126dc:	test   DWORD PTR [ebp+0x6299f110],ecx
  4126e2:	mov    ds:0xc914bb7b,al
  4126e7:	loope  0x412758
  4126e9:	and    cl,BYTE PTR [esi-0x5a]
  4126ec:	push   eax
  4126ed:	mov    edx,0x28811782
  4126f2:	lea    eax,[ebp+0x54b5a420]
  4126f8:	inc    ecx
  4126f9:	rol    BYTE PTR [ebp-0x19],1
  4126fc:	(bad)  
  4126fd:	je     0x412731
  4126ff:	rcl    BYTE PTR [edi+edi*1],cl
  412702:	adc    al,0x0
  412704:	sub    BYTE PTR [eax],ch
  412706:	add    DWORD PTR [edi],esi
  412708:	rol    BYTE PTR [ecx+0x1a],cl
  41270b:	mul    DWORD PTR [ebp-0x47]
  41270e:	and    DWORD PTR [ebp+0x7daeb299],edx
  412714:	pop    es
  412715:	pop    ecx
  412716:	idiv   DWORD PTR [edi+0x50]
  412719:	push   ecx
  41271a:	rcr    BYTE PTR [ecx-0x4d],cl
  41271d:	push   cs
  41271e:	pop    ds
  41271f:	inc    edi
  412720:	out    dx,eax
  412721:	ins    DWORD PTR es:[edi],dx
  412722:	xchg   ebp,eax
  412723:	shl    DWORD PTR [edi],0x6d
  412726:	shl    BYTE PTR [ebx],cl
  412728:	mov    esp,0x80d37978
  41272d:	pushf  
  41272e:	mov    WORD PTR [edx-0x14228d71],gs
  412734:	sub    BYTE PTR [edx+0x472be285],0x77
  41273b:	call   0x87c9:0xc6de0dbe
  412742:	call   0x6ae4:0xdeeee2f4
  412749:	in     al,0xb2
  41274b:	jo     0x412793
  41274d:	mov    ecx,0x17a21aed
  412752:	psrlq  mm0,QWORD PTR [ebp+0x116f2186]
  412759:	arpl   WORD PTR [esi-0x4f20ac30],bx
  41275f:	lods   eax,DWORD PTR ds:[esi]
  412760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412761:	mov    eax,0xac13bd9c
  412766:	daa    
  412767:	sti    
  412768:	push   ebx
  412769:	inc    ecx
  41276a:	pop    esp
  41276b:	scas   al,BYTE PTR es:[edi]
  41276c:	rol    BYTE PTR [ebx+0x17],1
  41276f:	loop   0x4127ee
  412771:	pop    esp
  412772:	(bad)  [esi-0x1f]
  412775:	sbb    al,dl
  412777:	stos   DWORD PTR es:[edi],eax
  412778:	xor    ch,BYTE PTR [ecx+0x46]
  41277b:	sbb    esi,eax
  41277d:	inc    ebp
  41277e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41277f:	mov    ss,WORD PTR [eax]
  412781:	and    ebx,eax
  412783:	(bad)
  412787:	mov    ds:0x99eb7d94,al
  41278c:	pop    ecx
  41278d:	or     ah,bl
  41278f:	hlt    
  412790:	mov    bh,0xb4
  412792:	add    esi,DWORD PTR [edx-0x2b]
  412795:	inc    ebx
  412796:	push   edx
  412797:	dec    edi
  412798:	scas   al,BYTE PTR es:[edi]
  412799:	ja     0x41272d
  41279b:	dec    esp
  41279c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41279d:	xor    DWORD PTR [esi-0x6eb1d94],esp
  4127a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a4:	cmp    BYTE PTR [esi+0x21],0x6f
  4127a8:	add    DWORD PTR [esi+ebp*4+0x41],0x2ea924ca
  4127b0:	add    BYTE PTR [ebx+0x240e5d4],ch
  4127b6:	pop    ss
  4127b7:	(bad)  
  4127b8:	xchg   edx,eax
  4127b9:	fild   WORD PTR [esi-0x67567ed]
  4127bf:	xchg   esi,eax
  4127c0:	aad    0xb6
  4127c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c3:	or     eax,0xcbd7037a
  4127c8:	sub    DWORD PTR [eax+0x6f],0x98270fc2
  4127cf:	or     al,0x63
  4127d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d2:	out    dx,al
  4127d3:	push   edx
  4127d4:	faddp  st(4),st
  4127d6:	and    DWORD PTR gs:[esi-0x64e92b13],esi
  4127dd:	adc    BYTE PTR [eax+0x1fd3043d],0xc6
  4127e4:	std    
  4127e5:	aas    
  4127e6:	xor    DWORD PTR [ebx],ebx
  4127e8:	push   eax
  4127e9:	ds push esp
  4127eb:	and    al,0x1d
  4127ed:	push   0xdaba12a4
  4127f2:	mov    al,fs:0xad83e838
  4127f8:	test   BYTE PTR [eax+0x25],al
  4127fb:	stc    
  4127fc:	test   DWORD PTR [eax],edi
  4127fe:	cmp    eax,0xbf56cd0e
  412803:	mov    ebp,0x4a16b679
  412808:	mov    gs,WORD PTR [ebx+0x61e51b55]
  41280e:	jmp    DWORD PTR [esi]
  412810:	(bad)  
  412811:	loop   0x41286e
  412813:	add    BYTE PTR [ebx],dl
  412815:	shl    DWORD PTR [esi],1
  412817:	pusha  
  412818:	add    dl,ch
  41281a:	repnz scas eax,DWORD PTR es:[edi]
  41281c:	jno    0x4127a0
  41281e:	imul   ebx,DWORD PTR [ebx],0x7494dfe5
  412824:	and    DWORD PTR [edx-0x64b6439a],eax
  41282a:	xchg   ebx,eax
  41282b:	in     al,0x1
  41282d:	(bad)  
  41282e:	sbb    esi,DWORD PTR [ebx]
  412830:	adc    DWORD PTR [ecx+0x18],edx
  412833:	jecxz  0x4128b1
  412835:	stos   DWORD PTR es:[edi],eax
  412836:	(bad)  
  412837:	jle    0x41285a
  412839:	dec    edi
  41283a:	and    eax,DWORD PTR [ecx+0x31ad8b21]
  412840:	(bad)  
  412841:	cli    
  412842:	(bad)  
  412843:	xchg   ebp,eax
  412844:	scas   eax,DWORD PTR es:[edi]
  412845:	cdq    
  412846:	pusha  
  412847:	ss enter 0xec34,0xf9
  41284c:	cwde   
  41284d:	add    al,0xc2
  41284f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412850:	aad    0x9c
  412852:	or     al,BYTE PTR [ebx+0x5a]
  412855:	cmp    edi,0x544b8773
  41285b:	xchg   edx,eax
  41285c:	cld    
  41285d:	jle    0x41287d
  41285f:	loopne 0x4128bd
  412861:	shl    DWORD PTR cs:[edi+eiz*1-0x408072b9],1
  412869:	cmp    eax,0xa16c343
  41286e:	xor    cl,0xd2
  412871:	sbb    bh,dl
  412873:	mov    eax,0x7a0ec5b1
  412878:	int    0x51
  41287a:	cmp    al,0xca
  41287c:	pop    ds
  41287d:	fstp   st(6)
  41287f:	add    eax,0x264fc5c5
  412884:	push   0x28
  412886:	cli    
  412887:	pop    eax
  412888:	cmp    BYTE PTR [ebp-0x2a55b9ab],cl
  41288e:	add    edi,DWORD PTR [ecx-0x76]
  412891:	push   ebp
  412892:	adc    DWORD PTR [ecx+0x20d09c3e],esi
  412898:	jns    0x412834
  41289a:	dec    eax
  41289b:	push   ecx
  41289c:	loop   0x4128cf
  41289e:	pop    ebx
  41289f:	jae    0x41282e
  4128a1:	shl    DWORD PTR [edi],cl
  4128a3:	retf   
  4128a4:	cmp    al,0xdb
  4128a6:	mov    al,0x65
  4128a8:	je     0x4128f8
  4128aa:	sub    DWORD PTR [edi+0x2b191d3f],edi
  4128b0:	mov    ah,BYTE PTR [ecx-0x52]
  4128b3:	mov    edi,0xc7e835e3
  4128b8:	and    BYTE PTR [ebp+0x2f],ah
  4128bb:	inc    ebp
  4128bc:	sub    DWORD PTR [ecx+0x3db0eac4],ebp
  4128c2:	pop    ebx
  4128c3:	cld    
  4128c4:	dec    esp
  4128c5:	test   al,0x46
  4128c7:	in     al,0xd8
  4128c9:	cmc    
  4128ca:	aaa    
  4128cb:	mov    ds:0x59602bcb,eax
  4128d0:	mov    edx,0x7370bae8
  4128d5:	aaa    
  4128d6:	mov    edx,0x54b8e7ed
  4128db:	xchg   ebx,eax
  4128dc:	xchg   DWORD PTR [ebp-0x62],ecx
  4128df:	or     DWORD PTR [edi],0x2
  4128e2:	iret   
  4128e3:	inc    ebp
  4128e4:	add    cl,BYTE PTR [ebx-0x64]
  4128e7:	push   0x5a702d85
  4128ec:	in     al,dx
  4128ed:	scas   al,BYTE PTR es:[edi]
  4128ee:	cmp    BYTE PTR [edi],bl
  4128f0:	out    dx,eax
  4128f1:	add    eax,ebp
  4128f3:	push   eax
  4128f4:	xchg   ebp,eax
  4128f5:	adc    BYTE PTR [eax+esi*4-0x6d],dh
  4128f9:	les    esp,FWORD PTR [ebx-0x3042cdb2]
  4128ff:	inc    esp
  412900:	test   eax,0x9012da0
  412905:	jb     0x4128a3
  412907:	jae    0x412983
  412909:	out    0xf1,eax
  41290b:	shr    BYTE PTR [esi+0x7584773d],1
  412911:	mov    bh,al
  412913:	cmp    BYTE PTR [edi+0x203e47e0],0xf
  41291a:	pop    es
  41291b:	xchg   ecx,eax
  41291c:	test   al,0x2
  41291e:	sbb    BYTE PTR [ebp+0x65],al
  412921:	dec    edi
  412922:	push   0xd2e50494
  412927:	daa    
  412928:	pop    eax
  412929:	out    dx,al
  41292a:	aas    
  41292b:	je     0x412915
  41292d:	xor    BYTE PTR [ebx+eiz*1],bh
  412930:	sbb    eax,0x39cd1e16
  412935:	pop    ds
  412936:	popf   
  412937:	mov    ecx,0xab9b3d7f
  41293c:	pop    ss
  41293d:	xor    edi,eax
  41293f:	in     eax,0x94
  412941:	inc    eax
  412942:	sbb    al,0xac
  412944:	push   es
  412945:	(bad)  
  412946:	push   ecx
  412947:	enter  0xcfb9,0xc4
  41294b:	jmp    0x76c5a017
  412950:	push   0x22af78a3
  412955:	and    BYTE PTR [edi-0x53],dl
  412958:	add    eax,0x2b33bd6a
  41295d:	xchg   DWORD PTR [eax+0xa],ecx
  412960:	inc    esp
  412961:	es (bad) 
  412963:	dec    ebx
  412964:	popa   
  412965:	mov    ds:0x370a28d6,al
  41296a:	xchg   edi,eax
  41296b:	mov    ch,0xa0
  41296d:	lahf   
  41296e:	inc    ebx
  41296f:	or     DWORD PTR [ecx+0x30],edx
  412972:	lods   al,BYTE PTR ds:[esi]
  412973:	lods   eax,DWORD PTR ds:[esi]
  412974:	adc    BYTE PTR [esi-0x33],ch
  412977:	les    ebx,FWORD PTR [ecx+0x65]
  41297a:	ja     0x4129b5
  41297c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41297d:	fst    QWORD PTR [esi+0x66]
  412980:	fcomp  DWORD PTR [bx+si]
  412983:	or     DWORD PTR [ebp+0x74],0x3f
  412987:	jecxz  0x4129a9
  412989:	test   DWORD PTR [ebx+0x37],edi
  41298c:	out    0x99,eax
  41298e:	mov    esi,esi
  412990:	inc    esp
  412991:	out    dx,eax
  412992:	ror    BYTE PTR [ebp*8-0x305405e1],1
  412999:	ss ss sbb cl,bh
  41299d:	sub    esi,esi
  41299f:	test   eax,0xe40e7359
  4129a4:	imul   edi,DWORD PTR [ebx-0x4b],0xffffffd3
  4129a8:	or     al,0xee
  4129aa:	pop    es
  4129ab:	mov    edi,0x82ba4374
  4129b0:	xor    eax,DWORD PTR [ebp-0x1a5745a2]
  4129b6:	or     ebp,ecx
  4129b8:	add    BYTE PTR [esi-0x2c00cc16],bl
  4129be:	(bad)  
  4129bf:	enter  0x2e95,0x27
  4129c3:	out    dx,al
  4129c4:	scas   al,BYTE PTR es:[edi]
  4129c5:	test   al,0x6c
  4129c7:	fst    QWORD PTR [eax-0x52179c42]
  4129cd:	ror    DWORD PTR [eax],1
  4129cf:	je     0x4129ce
  4129d1:	ss mov ebx,0x7101c9c1
  4129d7:	and    DWORD PTR [edx+0x20],ebp
  4129da:	adc    DWORD PTR [ecx],ecx
  4129dc:	test   BYTE PTR [ecx-0x6599ef95],dh
  4129e2:	lahf   
  4129e3:	sbb    eax,0xbe6483d4
  4129e8:	dec    edi
  4129e9:	jbe    0x412a51
  4129eb:	es cmp eax,0x638600a1
  4129f1:	adc    DWORD PTR [edi],ecx
  4129f3:	sahf   
  4129f4:	iret   
  4129f5:	add    eax,0xd7a33b98
  4129fa:	push   ebp
  4129fb:	cmp    eax,0x29e93a3d
  412a00:	imul   edi,DWORD PTR [ebx],0xfffffff3
  412a03:	das    
  412a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a05:	inc    ecx
  412a06:	cmp    eax,0x94c3f254
  412a0b:	push   es
  412a0c:	iret   
  412a0d:	lods   al,BYTE PTR ds:[esi]
  412a0e:	ror    BYTE PTR [eax],1
  412a10:	popa   
  412a11:	dec    edx
  412a12:	imul   esp,DWORD PTR [edx+esi*2+0x45],0x22de4923
  412a1a:	sub    BYTE PTR [eax],dh
  412a1c:	(bad)  
  412a1e:	adc    BYTE PTR [edx+0x78],al
  412a21:	dec    ecx
  412a22:	and    ecx,ebp
  412a24:	pop    edi
  412a25:	push   esi
  412a26:	mov    al,ds:0xa5aa1674
  412a2b:	lea    esi,[edx-0x7e8f987a]
  412a31:	out    dx,eax
  412a32:	or     bh,ah
  412a34:	and    DWORD PTR [eax],ebx
  412a36:	mov    al,0x35
  412a38:	mov    esi,0xab3b197
  412a3d:	or     edi,DWORD PTR ds:0x60ec4f51
  412a43:	rcl    BYTE PTR [eax+eiz*1-0x274ddfb0],cl
  412a4a:	sahf   
  412a4b:	bound  esp,QWORD PTR [ebx+edi*2+0x71]
  412a4f:	iret   
  412a50:	(bad)  
  412a51:	jp     0x412a8d
  412a53:	pop    ecx
  412a54:	jg     0x412a76
  412a56:	(bad)  
  412a57:	xchg   edi,eax
  412a58:	sub    edi,DWORD PTR [edx]
  412a5a:	jno    0x412a1e
  412a5c:	xor    BYTE PTR [edi-0x2c],0x80
  412a60:	icebp  
  412a61:	inc    esp
  412a62:	jb     0x412a44
  412a64:	push   edi
  412a65:	scas   eax,DWORD PTR es:[edi]
  412a66:	sub    eax,edi
  412a68:	std    
  412a69:	rcr    DWORD PTR [edx],1
  412a6b:	rcl    BYTE PTR [edi+ebp*4+0xa4f72c3],1
  412a72:	pop    esi
  412a73:	test   esp,ebp
  412a75:	dec    ebx
  412a76:	pop    ss
  412a77:	test   eax,0xf31bbbcc
  412a7c:	jp     0x412a1d
  412a7e:	cmp    ah,BYTE PTR [eax]
  412a80:	dec    esp
  412a81:	add    al,0xdd
  412a83:	call   0x65bf745
  412a88:	and    cl,BYTE PTR [ebp+0x38]
  412a8b:	xor    DWORD PTR [ebx],0x9057f1bc
  412a91:	mov    eax,0xcb83a2e6
  412a96:	pushw  ds
  412a98:	shr    DWORD PTR [edx-0x5e],cl
  412a9b:	mov    cl,0x55
  412a9d:	sub    ah,ah
  412a9f:	jo     0x412a5f
  412aa1:	add    ch,BYTE PTR [edx]
  412aa3:	imul   ebp,edi,0xffffffc3
  412aa6:	xchg   edx,eax
  412aa7:	pop    edi
  412aa8:	jbe    0x412aba
  412aaa:	call   0xcdbb:0x5b04f595
  412ab1:	imul   esi,DWORD PTR [edi-0x24],0xffffffa9
  412ab5:	scas   al,BYTE PTR es:[edi]
  412ab6:	mov    ebx,0x3a911760
  412abb:	sbb    eax,0x15c76667
  412ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ac1:	push   edi
  412ac2:	inc    edx
  412ac3:	stc    
  412ac4:	jge    0x412ac8
  412ac6:	cmc    
  412ac7:	lock inc esi
  412ac9:	ds cwde 
  412acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412acc:	sub    al,0xa8
  412ace:	das    
  412acf:	jmp    0x4cd3b4c1
  412ad4:	mov    DWORD PTR [eax-0x69],ebp
  412ad7:	(bad)  
  412ad9:	xchg   edi,eax
  412ada:	adc    ecx,DWORD PTR ds:0x113d114c
  412ae0:	aas    
  412ae1:	cwde   
  412ae2:	call   0x1124:0xcfaa461c
  412ae9:	xor    DWORD PTR ds:0x8900e183,eax
  412aef:	and    edx,esi
  412af1:	in     eax,0x73
  412af3:	mov    bl,0x1e
  412af5:	jo     0x412b46
  412af7:	loope  0x412b1e
  412af9:	adc    ecx,0x6fe8d312
  412aff:	dec    esi
  412b00:	adc    ebx,ebx
  412b02:	jmp    0x412b62
  412b04:	and    eax,edx
  412b06:	mov    BYTE PTR [edi+eax*2-0x56],bl
  412b0a:	data16 jo 0x412b04
  412b0d:	or     eax,0xe7cd6ed6
  412b12:	mov    eax,0x40503042
  412b17:	addr16 nop
  412b19:	dec    edx
  412b1a:	scas   eax,DWORD PTR es:[edi]
  412b1b:	pop    esi
  412b1c:	xor    dl,dh
  412b1e:	or     DWORD PTR [edi+ebp*4],edi
  412b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b22:	mov    ecx,0xc7a720d6
  412b27:	cmc    
  412b28:	sti    
  412b29:	(bad)  [ecx-0x25284ae1]
  412b2f:	mov    esp,0x26d16ca6
  412b34:	pop    eax
  412b35:	adc    bl,cl
  412b37:	and    bh,dh
  412b39:	out    0x1e,eax
  412b3b:	mov    al,ds:0x753351d3
  412b40:	jo     0x412af9
  412b42:	ins    BYTE PTR es:[edi],dx
  412b43:	adc    BYTE PTR [edi+0x386fbf9d],0x82
  412b4a:	adc    cl,bl
  412b4c:	add    ch,BYTE PTR [ecx-0x7ddaeea7]
  412b52:	cwde   
  412b53:	jmp    0x412bcc
  412b55:	(bad)  
  412b56:	lods   eax,DWORD PTR ds:[esi]
  412b57:	sub    dh,BYTE PTR [edi]
  412b59:	jnp    0x412bbf
  412b5b:	pop    eax
  412b5c:	aam    0xf0
  412b5e:	push   edx
  412b5f:	jp     0x412b1e
  412b61:	mov    ds:0xb649ec0c,al
  412b66:	shr    DWORD PTR [ebp-0x63],cl
  412b69:	cmp    DWORD PTR [edx],edx
  412b6b:	mov    eax,ds:0x10c6da29
  412b70:	mov    ds:0xe2649736,al
  412b75:	in     eax,dx
  412b76:	inc    ecx
  412b77:	cwde   
  412b78:	mov    cl,0x65
  412b7a:	xor    dh,dh
  412b7c:	xor    ebx,DWORD PTR [ebx+0x76a0cd78]
  412b82:	pop    eax
  412b83:	repz aaa 
  412b85:	out    dx,al
  412b86:	je     0x412bb5
  412b88:	in     al,0xe1
  412b8a:	add    eax,0xd48b37bf
  412b8f:	jecxz  0x412b12
  412b91:	mov    edx,0x4cf61492
  412b96:	sbb    al,0x6d
  412b98:	scas   al,BYTE PTR es:[edi]
  412b99:	mov    fs:0xc6e0707,al
  412b9f:	sub    DWORD PTR [ebp+0x60e77a9b],ebp
  412ba5:	lods   al,BYTE PTR ds:[esi]
  412ba6:	push   eax
  412ba7:	nop
  412ba8:	fcmovbe st,st(6)
  412baa:	adc    dl,bh
  412bac:	push   0xfa59f054
  412bb1:	clc    
  412bb2:	lahf   
  412bb3:	in     al,0x44
  412bb5:	dec    esp
  412bb6:	jecxz  0x412be6
  412bb8:	(bad)  
  412bb9:	test   al,bl
  412bbb:	cdq    
  412bbc:	int    0x92
  412bbe:	jp     0x412c0d
  412bc0:	xchg   ebp,eax
  412bc1:	add    BYTE PTR [ebx],ah
  412bc3:	and    dl,BYTE PTR [edi]
  412bc5:	int3   
  412bc6:	aas    
  412bc7:	push   es
  412bc8:	int3   
  412bc9:	sub    esi,DWORD PTR [esi+0x69]
  412bcc:	xchg   edx,eax
  412bcd:	stos   DWORD PTR es:[edi],eax
  412bce:	lahf   
  412bcf:	jb     0x412c0e
  412bd1:	in     eax,0x2f
  412bd3:	cmp    al,0x9b
  412bd5:	inc    ebx
  412bd6:	icebp  
  412bd7:	or     dl,0x61
  412bda:	std    
  412bdb:	sub    ah,BYTE PTR [esp+eax*1]
  412bde:	nop
  412bdf:	stos   BYTE PTR es:[edi],al
  412be0:	xchg   DWORD PTR [eax-0x5b45367c],edx
  412be6:	pop    ebx
  412be7:	outs   dx,BYTE PTR ds:[esi]
  412be8:	push   ds
  412be9:	lods   al,BYTE PTR ds:[esi]
  412bea:	add    edi,ecx
  412bec:	inc    esp
  412bed:	pop    ss
  412bee:	pop    edi
  412bef:	mov    dh,0x4
  412bf1:	addr16 popf 
  412bf3:	stc    
  412bf4:	out    0x19,eax
  412bf6:	or     esi,esp
  412bf8:	xchg   BYTE PTR [eax+0x4],bh
  412bfb:	jne    0x412c52
  412bfd:	adc    al,BYTE PTR [edi-0x58]
  412c00:	mov    edi,?
  412c02:	and    al,0x2e
  412c04:	jmp    DWORD PTR [edx+0x21]
  412c07:	sbb    ecx,ecx
  412c09:	jbe    0x412c55
  412c0b:	sub    eax,0x4f996121
  412c10:	imul   edx,DWORD PTR [ecx+edx*1],0xffffff80
  412c14:	call   0x8bf1a269
  412c19:	sti    
  412c1a:	mov    esi,0x51a81861
  412c1f:	pop    ebp
  412c20:	ins    DWORD PTR es:[edi],dx
  412c21:	xchg   edi,eax
  412c22:	push   edi
  412c23:	mov    esp,DWORD PTR [ebp+0x55b17efd]
  412c29:	jge    0x412bcf
  412c2b:	arpl   WORD PTR [ecx+0x4d835a8e],cx
  412c31:	mov    ch,0xa8
  412c33:	inc    edx
  412c34:	ja     0x412bd8
  412c36:	(bad)  
  412c37:	cli    
  412c38:	adc    al,0x4b
  412c3a:	push   0xffffff94
  412c3c:	out    0x8,eax
  412c3e:	sti    
  412c3f:	add    ch,bh
  412c41:	daa    
  412c42:	push   esi
  412c43:	add    al,0xdc
  412c45:	int3   
  412c46:	imul   esi,DWORD PTR [ecx-0x56292b1e],0xa5e5cc89
  412c50:	pop    eax
  412c51:	pop    ecx
  412c52:	(bad)  
  412c54:	mov    bl,0xe6
  412c56:	retf   
  412c57:	retf   
  412c58:	mov    eax,ds:0x4ba4d5a6
  412c5d:	and    al,0x64
  412c5f:	imul   eax,DWORD PTR [edi],0x754c2b01
  412c65:	adc    eax,0x2bc4ca2b
  412c6a:	mov    ds:0x4a24aea6,al
  412c6f:	adc    dl,BYTE PTR [eax+ebx*4+0x35f3abd4]
  412c76:	mov    edx,0x51eacae6
  412c7b:	dec    edx
  412c7d:	sub    eax,0x5677cd79
  412c82:	pop    edi
  412c83:	and    al,dl
  412c85:	test   BYTE PTR [ebx],0x66
  412c88:	xor    ah,BYTE PTR [esi-0x7]
  412c8b:	cmp    esi,DWORD PTR [eax-0xbe2fe77]
  412c91:	add    BYTE PTR [edx-0x79d218f0],bl
  412c97:	mov    ds:0xc39b89ee,eax
  412c9c:	cmc    
  412c9d:	jecxz  0x412cc2
  412c9f:	pop    ebp
  412ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca1:	in     al,dx
  412ca2:	test   eax,0xb931760e
  412ca7:	rcl    DWORD PTR [ebx-0x70],cl
  412caa:	jae    0x412cbf
  412cac:	xor    cl,BYTE PTR [esi-0x726743ac]
  412cb2:	call   0x55a02e05
  412cb7:	pop    es
  412cb8:	out    dx,eax
  412cb9:	cmp    ecx,DWORD PTR [esi-0x7f]
  412cbc:	inc    edx
  412cbd:	push   0x2d0fc86b
  412cc2:	inc    ecx
  412cc3:	mov    ebp,0x9e107719
  412cc8:	sahf   
  412cc9:	fsubr  st(6),st
  412ccb:	mov    ebp,0x139f5d4c
  412cd0:	mul    BYTE PTR [esi]
  412cd2:	call   0x40d632e7
  412cd7:	test   eax,0xc9cb4207
  412cdc:	push   ecx
  412cdd:	inc    edi
  412cde:	fisubr DWORD PTR [ecx-0x9b3e1d7]
  412ce4:	jg     0x412c94
  412ce6:	mov    bh,0xbb
  412ce8:	jle    0x412cd1
  412cea:	in     al,0x21
  412cec:	mov    esp,0x82888e08
  412cf1:	jg     0x412d65
  412cf3:	mov    eax,0x57461ef3
  412cf8:	sub    eax,ebp
  412cfa:	(bad)  
  412cfb:	mov    bh,0x4c
  412cfd:	in     eax,0x3d
  412cff:	fwait
  412d00:	jbe    0x412d72
  412d02:	dec    esp
  412d03:	inc    eax
  412d04:	outs   dx,DWORD PTR ds:[esi]
  412d05:	loopne 0x412d85
  412d07:	pop    ecx
  412d08:	cmc    
  412d09:	fimul  DWORD PTR [eax-0x61]
  412d0c:	repz je 0x412d53
  412d0f:	inc    esi
  412d10:	cwde   
  412d11:	mov    ah,0x48
  412d13:	or     DWORD PTR [edi],esp
  412d15:	inc    ebx
  412d16:	aad    0xb5
  412d18:	test   BYTE PTR [edx],dh
  412d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d1b:	sbb    eax,0x561f894e
  412d20:	fild   QWORD PTR [ebx-0x42]
  412d23:	jmp    0xdb64d7d0
  412d28:	pop    ss
  412d29:	or     al,0xd4
  412d2b:	push   es
  412d2c:	sbb    DWORD PTR [eax-0x422cbf6e],esi
  412d32:	and    ebx,DWORD PTR [esp+eiz*8]
  412d35:	adc    dh,BYTE PTR [edx]
  412d37:	pop    esp
  412d38:	lock and DWORD PTR [ebp+0x26],esp
  412d3c:	fwait
  412d3d:	repz dec edx
  412d3f:	ja     0x412d3b
  412d41:	mov    edi,0xb990eec
  412d46:	jne    0x412ce2
  412d48:	loopne 0x412d56
  412d4a:	jns    0x412cde
  412d4c:	xor    eax,0xcd0ed23
  412d51:	js     0x412d00
  412d53:	mov    al,0x5e
  412d55:	push   eax
  412d56:	mov    ah,BYTE PTR [ebp+0x27]
  412d59:	shl    BYTE PTR [ebp+edx*1-0x4eebe582],cl
  412d60:	sbb    bh,dh
  412d62:	in     eax,dx
  412d63:	fist   DWORD PTR [edx+0x73]
  412d66:	pop    edi
  412d67:	das    
  412d68:	pop    ss
  412d69:	retf   0x8ccb
  412d6c:	mov    ds:0x80bd3ac5,al
  412d71:	outs   dx,DWORD PTR ds:[esi]
  412d72:	dec    esp
  412d73:	jg     0x412d69
  412d75:	cmp    BYTE PTR [ecx+0x48d191ec],bh
  412d7b:	xchg   DWORD PTR [edx-0x3b037329],eax
  412d81:	mov    ds:0x5caeb239,eax
  412d86:	xchg   ebx,eax
  412d87:	inc    esi
  412d88:	test   edi,ebp
  412d8a:	mov    ch,0xfd
  412d8c:	mov    bh,al
  412d8e:	push   0x36
  412d90:	cmp    BYTE PTR [esi],dl
  412d92:	jmp    0x412dd8
  412d94:	push   cs
  412d95:	out    0xd2,al
  412d97:	lods   al,BYTE PTR ds:[esi]
  412d98:	inc    edi
  412d99:	push   esp
  412d9a:	in     al,0x37
  412d9c:	lods   al,BYTE PTR ds:[esi]
  412d9d:	ins    DWORD PTR es:[edi],dx
  412d9e:	mov    ecx,0x1f8a3aa5
  412da3:	hlt    
  412da4:	std    
  412da5:	(bad)  
  412da6:	(bad)  
  412da7:	mov    esi,0x4ac8dd82
  412dac:	add    al,0x6f
  412dae:	test   eax,0x541aca5a
  412db3:	mov    WORD PTR [esi-0x1e70d1b0],?
  412db9:	mov    esp,0x5477b969
  412dbe:	aam    0x5
  412dc0:	sub    ebx,ebp
  412dc2:	jg     0x412d4a
  412dc4:	das    
  412dc5:	lods   eax,DWORD PTR ds:[esi]
  412dc6:	mov    fs,WORD PTR [ecx+0x6f]
  412dc9:	and    ch,BYTE PTR [esp+ebp*1+0x6f0f6ba1]
  412dd0:	neg    BYTE PTR [ebx+0x30]
  412dd3:	fidiv  DWORD PTR [ecx+0x1b235b3a]
  412dd9:	out    dx,al
  412dda:	das    
  412ddb:	loope  0x412dc9
  412ddd:	daa    
  412dde:	add    DWORD PTR [esi-0x35ca7d7e],esi
  412de4:	and    al,0x3a
  412de6:	rcr    DWORD PTR [ebp-0xc0ef0f1],cl
  412dec:	(bad)  
  412ded:	fidiv  DWORD PTR [ecx-0x211e1566]
  412df3:	sbb    eax,0x86ce8e41
  412df8:	adc    DWORD PTR [ecx+edx*2+0x449bcf8],0x6a
  412e00:	jo     0x412dee
  412e02:	and    al,0xb1
  412e04:	aad    0x3f
  412e06:	mul    DWORD PTR [ecx-0x59]
  412e09:	pop    edi
  412e0a:	or     bh,dh
  412e0c:	jne    0x412daf
  412e0e:	hlt    
  412e0f:	clc    
  412e10:	imul   ebp,ebx,0xbd27749b
  412e16:	scas   eax,DWORD PTR es:[edi]
  412e17:	ror    ebp,1
  412e19:	xor    al,0xdd
  412e1b:	retf   
  412e1c:	out    0x79,al
  412e1e:	lea    ecx,[esi]
  412e20:	inc    ebp
  412e21:	mov    ecx,0x92848c23
  412e26:	push   eax
  412e27:	shl    DWORD PTR [ecx+0x6b],1
  412e2a:	test   BYTE PTR [edx-0x1d6792d3],dl
  412e30:	inc    ebx
  412e31:	xor    ebp,0x1b872a14
  412e37:	ret    
  412e38:	mul    BYTE PTR [edi]
  412e3a:	jae    0x412e4d
  412e3c:	sahf   
  412e3d:	clc    
  412e3e:	ins    DWORD PTR es:[edi],dx
  412e3f:	jo     0x412ea9
  412e41:	and    al,0xe3
  412e43:	int3   
  412e44:	sbb    esi,ebx
  412e46:	add    ebp,DWORD PTR [edx]
  412e48:	sbb    al,0xe9
  412e4a:	pop    ds
  412e4b:	scas   eax,DWORD PTR es:[edi]
  412e4c:	and    BYTE PTR [eax+ecx*2+0x7a6641df],cl
  412e53:	loope  0x412e20
  412e55:	es stc 
  412e57:	rol    ebx,1
  412e59:	mov    bh,0xa9
  412e5b:	ins    DWORD PTR es:[edi],dx
  412e5c:	push   ebx
  412e5d:	jle    0x412e35
  412e5f:	add    dh,al
  412e61:	jle    0x412e03
  412e63:	out    0x44,al
  412e65:	shl    DWORD PTR ds:0x5873caa8,1
  412e6b:	mov    fs,esi
  412e6d:	retf   
  412e6e:	(bad)  
  412e6f:	fisub  DWORD PTR [eax]
  412e71:	(bad)  
  412e73:	inc    ebx
  412e74:	xlat   BYTE PTR ds:[ebx]
  412e75:	add    al,0xa2
  412e77:	dec    esi
  412e78:	lds    eax,FWORD PTR [eax]
  412e7a:	dec    esi
  412e7b:	dec    ebp
  412e7c:	imul   esp,DWORD PTR [esi-0x632e75b7],0xd7cdae28
  412e86:	add    BYTE PTR [ebx+ebp*4+0x54],al
  412e8a:	adc    DWORD PTR [edi-0x46],edx
  412e8d:	mov    ds:0x2e5dc897,eax
  412e92:	cwde   
  412e93:	add    cl,BYTE PTR [ebx]
  412e95:	cmp    BYTE PTR [ebx-0x40],cl
  412e98:	sub    eax,0xbf188bbe
  412e9d:	sbb    ebx,esi
  412e9f:	mov    BYTE PTR [eax],bh
  412ea1:	dec    edi
  412ea2:	inc    esp
  412ea3:	(bad)  
  412ea4:	in     al,dx
  412ea5:	enter  0x7029,0xec
  412ea9:	adc    al,0xc1
  412eab:	mov    dl,0xa1
  412ead:	(bad)  
  412eae:	pusha  
  412eaf:	lock pop ebx
  412eb1:	rcl    DWORD PTR [ebx-0x175f9997],1
  412eb7:	lahf   
  412eb8:	adc    al,0xd2
  412eba:	and    al,0x9f
  412ebc:	xchg   DWORD PTR [esi-0x4f423a91],esp
  412ec2:	xor    DWORD PTR [esi],0x2c
  412ec5:	xlat   BYTE PTR ds:[ebx]
  412ec6:	repnz push eax
  412ec8:	cmp    ah,ah
  412eca:	push   es
  412ecb:	cmp    al,0xb6
  412ecd:	shr    esp,cl
  412ecf:	aaa    
  412ed0:	add    eax,eax
  412ed2:	ja     0x412ed4
  412ed4:	add    DWORD PTR [esi],0xbd663dbf
  412eda:	les    esp,FWORD PTR [esi]
  412edc:	out    0x78,eax
  412ede:	(bad)  
  412edf:	and    DWORD PTR [ecx-0x70b02da0],edx
  412ee5:	cwde   
  412ee6:	xchg   ebp,eax
  412ee7:	test   BYTE PTR [ebx],dh
  412ee9:	ja     0x412ee3
  412eeb:	retf   0x3c15
  412eee:	icebp  
  412eef:	jle    0x412f4f
  412ef1:	addr16 mov dl,cl
  412ef4:	sub    DWORD PTR [eax],ebp
  412ef6:	(bad)  
  412ef7:	jmp    0x291f:0xe129639
  412efe:	add    al,0xa2
  412f00:	int3   
  412f01:	push   eax
  412f02:	fisttp DWORD PTR [ebx+0x3950eba5]
  412f08:	bound  edx,QWORD PTR [ecx]
  412f0a:	push   esp
  412f0b:	stc    
  412f0c:	sbb    eax,0x8b1051c5
  412f11:	sub    cl,BYTE PTR [eax+0x38]
  412f14:	or     BYTE PTR [ebp-0x40af1f3e],0xd7
  412f1b:	scas   al,BYTE PTR es:[edi]
  412f1c:	sub    DWORD PTR [ebx+0x74],esi
  412f1f:	add    dh,dh
  412f21:	push   ebx
  412f22:	sbb    eax,0x71083dc6
  412f27:	mov    eax,ds:0xe83f7b47
  412f2c:	sub    WORD PTR [ebx],0xffe8
  412f30:	pop    es
  412f31:	inc    eax
  412f32:	sub    eax,0x7f7f10ff
  412f37:	dec    edi
  412f38:	js     0x412f77
  412f3a:	outs   dx,BYTE PTR ds:[esi]
  412f3b:	test   BYTE PTR [eax+0x1334d98],ch
  412f41:	pop    ds
  412f42:	inc    eax
  412f43:	clc    
  412f44:	test   al,0x85
  412f46:	pop    ebp
  412f47:	push   ebp
  412f48:	push   ebx
  412f49:	psubsb mm5,QWORD PTR [ebp+0x24]
  412f4d:	cmp    ah,0x64
  412f50:	jle    0x412fb8
  412f52:	mov    esp,0xb1276d36
  412f57:	jg     0x412eef
  412f59:	je     0x412f6c
  412f5b:	push   cs
  412f5c:	or     al,0x25
  412f5e:	loopne 0x412fb8
  412f60:	maskmovq mm7,(bad)
  412f61:	idiv   DWORD PTR [ecx-0x625150c8]
  412f67:	iret   
  412f68:	aaa    
  412f69:	je     0x412f8c
  412f6b:	mov    ss,edx
  412f6d:	ins    BYTE PTR es:[edi],dx
  412f6e:	mov    al,ds:0x2b369a07
  412f73:	jae    0x412fa4
  412f75:	aas    
  412f76:	push   es
  412f77:	pop    edi
  412f78:	sbb    edx,ebx
  412f7a:	daa    
  412f7b:	mov    edx,fs
  412f7d:	jae    0x412fb4
  412f7f:	fnstsw WORD PTR ds:0x8f9cbfa7
  412f85:	outs   dx,DWORD PTR ds:[esi]
  412f86:	ror    BYTE PTR [edx-0x49],cl
  412f89:	in     eax,0x67
  412f8b:	pop    esi
  412f8c:	loopne 0x412f6e
  412f8e:	mov    esi,0x18bf82a4
  412f93:	xor    ebx,DWORD PTR [eax-0x7f27b7a9]
  412f99:	lods   eax,DWORD PTR cs:[esi]
  412f9b:	mov    al,0xc7
  412f9d:	push   edi
  412f9e:	mov    ds:0x1d921374,eax
  412fa3:	inc    esp
  412fa4:	mov    eax,DWORD PTR cs:[eax]
  412fa7:	mov    edi,eax
  412fa9:	sbb    BYTE PTR [edi],dh
  412fab:	and    cl,BYTE PTR [ebp-0x4d]
  412fae:	jge    0x412fe1
  412fb0:	jmp    0x924:0x99a5bc38
  412fb7:	jae    0x412f65
  412fb9:	jnp    0x412fb7
  412fbb:	mov    al,ds:0x3b07c153
  412fc0:	jge    0x413007
  412fc2:	sub    eax,0xcd2e6e70
  412fc7:	mov    WORD PTR [esi],ds
  412fc9:	les    ebx,FWORD PTR [eax+ebx*4+0x2c]
  412fcd:	mov    ds:0x93e271a1,eax
  412fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fd3:	rcr    DWORD PTR [edi+0x21b60514],1
  412fd9:	popf   
  412fda:	push   cs
  412fdb:	jnp    0x412ff6
  412fdd:	add    al,0xb
  412fdf:	sbb    al,0x5e
  412fe1:	in     al,0x31
  412fe3:	ins    DWORD PTR es:[edi],dx
  412fe4:	adc    BYTE PTR [eax+0x79],ah
  412fe7:	out    0x84,al
  412fe9:	add    BYTE PTR [ecx-0x6a],0x90
  412fed:	push   0x5e
  412fef:	sub    dh,bh
  412ff1:	dec    eax
  412ff2:	(bad)  [eax]
  412ff4:	(bad)  
  412ff5:	pop    ss
  412ff6:	cli    
  412ff7:	cwde   
  412ff8:	jle    0x412f80
  412ffa:	sbb    edx,DWORD PTR [ebx+ebp*4+0x68]
  412ffe:	ins    DWORD PTR es:[edi],dx
  412fff:	cmp    al,0xdd
  413001:	ret    
  413002:	sbb    BYTE PTR [esp+ebx*1+0x33],ah
  413006:	(bad)  [edx+eax*4-0x257cd577]
  41300d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41300e:	and    BYTE PTR [ebx-0xe1b3618],0x60
  413015:	and    ebx,DWORD PTR [ebx]
  413017:	mov    bh,0xc9
  413019:	cs mov ax,0x1c94
  41301e:	cmp    DWORD PTR [edi-0x4e],0x5a6e1a5b
  413025:	in     eax,0x6e
  413027:	ds das 
  413029:	and    eax,0x744de48b
  41302e:	not    BYTE PTR [ebp+0x77f8ecf6]
  413034:	xchg   ecx,eax
  413035:	out    dx,eax
  413036:	je     0x412fce
  413038:	dec    esi
  413039:	cmp    dl,BYTE PTR [ecx-0x5115e612]
  41303f:	push   ecx
  413040:	adc    ebx,ebx
  413042:	pop    edx
  413043:	pop    esi
  413044:	pop    ss
  413045:	add    al,0x95
  413047:	jmp    0xe6544054
  41304c:	cmp    eax,0xc393a0f5
  413051:	in     eax,0x2e
  413053:	scas   eax,DWORD PTR es:[edi]
  413054:	jecxz  0x413071
  413056:	je     0x4130ba
  413058:	popf   
  413059:	cmp    ecx,DWORD PTR [ebx+ebp*4+0x4f]
  41305d:	stos   DWORD PTR es:[edi],eax
  41305e:	faddp  st(0),st
  413060:	pop    es
  413061:	aad    0x1a
  413063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413064:	cmp    bh,cl
  413066:	popa   
  413067:	ds or  dh,ah
  41306a:	jmp    0xcae33cd6
  41306f:	adc    DWORD PTR [ecx-0x6dfa6168],esp
  413075:	ror    al,cl
  413077:	lea    eax,[ebx-0x10]
  41307a:	retf   
  41307b:	dec    ecx
  41307c:	test   al,0x7d
  41307e:	inc    ecx
  41307f:	mov    BYTE PTR [ebp+0x4d127c0c],dl
  413085:	sbb    al,0x6b
  413087:	xor    DWORD PTR [ecx],ebx
  413089:	jg     0x413083
  41308b:	leave  
  41308c:	inc    ebp
  41308d:	pop    ebx
  41308e:	and    al,0x52
  413090:	mov    ebp,0xb592c497
  413095:	jmp    0xb147a58c
  41309a:	(bad)  
  41309b:	loopne 0x413093
  41309d:	inc    edi
  41309e:	mov    eax,0x3356282c
  4130a3:	pop    eax
  4130a4:	cmp    DWORD PTR [ebx],edi
  4130a6:	pop    ebp
  4130a7:	imul   edi,edi,0xa
  4130aa:	retf   
  4130ab:	ficomp WORD PTR [esp+edx*1+0x1f4f4d6c]
  4130b2:	and    eax,0xa4bc4274
  4130b7:	sbb    edx,DWORD PTR [ebx+0x4c]
  4130ba:	lock jecxz 0x4130a4
  4130bd:	inc    eax
  4130be:	in     eax,dx
  4130bf:	push   eax
  4130c0:	add    ch,ch
  4130c2:	sub    esi,ecx
  4130c4:	(bad)  
  4130c5:	pusha  
  4130c6:	adc    bh,ah
  4130c8:	push   0x2305c3a5
  4130cd:	jns    0x4130ea
  4130cf:	loope  0x4130fd
  4130d1:	and    BYTE PTR ds:0xa0078737,ch
  4130d7:	(bad)  [ecx-0x76]
  4130da:	pop    esi
  4130db:	jae    0x4130db
  4130dd:	dec    eax
  4130de:	xchg   ecx,eax
  4130df:	push   esi
  4130e0:	cwde   
  4130e1:	sbb    bh,al
  4130e3:	pop    ds
  4130e4:	mov    DWORD PTR [esp+ecx*1-0x208ba779],0x15bb0ea9
  4130ef:	mov    ds:0x2ac7774b,eax
  4130f4:	mov    edx,0x6eb0ca97
  4130f9:	daa    
  4130fa:	xchg   esp,eax
  4130fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130fc:	std    
  4130fd:	loop   0x413100
  4130ff:	ins    DWORD PTR es:[edi],dx
  413100:	or     BYTE PTR [ecx],dl
  413102:	idiv   DWORD PTR [ebp-0x5f]
  413105:	stos   BYTE PTR es:[edi],al
  413106:	(bad)  
  413107:	out    0x19,eax
  413109:	pop    edi
  41310a:	mov    ds:0xb0ed0a07,eax
  41310f:	jmp    0x41312c
  413111:	adc    al,0x6f
  413113:	mov    ds:0x90b45827,eax
  413118:	sbb    edi,ecx
  41311a:	push   edi
  41311b:	je     0x413195
  41311d:	mov    ah,0xb9
  41311f:	jmp    0x5cc8:0x7a01194
  413126:	aad    0xab
  413128:	jecxz  0x413120
  41312a:	retf   
  41312b:	xchg   esi,eax
  41312c:	stos   DWORD PTR es:[di],eax
  41312e:	ss inc eax
  413130:	scas   eax,DWORD PTR es:[edi]
  413131:	nop
  413132:	rol    DWORD PTR [ebp+0x72],0x38
  413136:	dec    edx
  413137:	ds into 
  413139:	sub    eax,esi
  41313b:	jg     0x413114
  41313d:	xor    al,0xda
  41313f:	scas   eax,DWORD PTR es:[edi]
  413140:	mov    eax,0x41f9c840
  413145:	push   cs
  413146:	xchg   ebx,eax
  413147:	sub    dl,BYTE PTR [edi+0x2a]
  41314a:	push   edx
  41314b:	inc    edx
  41314c:	mov    edi,0xa6222809
  413151:	fwait
  413152:	xlat   BYTE PTR ds:[ebx]
  413153:	clc    
  413154:	sbb    bh,BYTE PTR [eax]
  413156:	clc    
  413157:	jbe    0x4130f3
  413159:	int    0x9
  41315b:	fidivr WORD PTR [ebx+0x58]
  41315e:	test   DWORD PTR [edx+0x76],0x52f32bf8
  413165:	(bad)  
  413167:	pop    esp
  413168:	enter  0x29d7,0x90
  41316c:	add    ebx,DWORD PTR es:[edi+0x24cf6937]
  413173:	call   0x10836842
  413178:	call   0xf634fdc6
  41317d:	lock jl 0x413148
  413180:	(bad)  cs:[ecx-0x2178bef6]
  413187:	leave  
  413188:	pop    es
  413189:	inc    eax
  41318a:	popf   
  41318b:	or     cl,ah
  41318d:	adc    eax,0x9bd81256
  413192:	inc    esi
  413193:	push   edx
  413194:	out    0x16,al
  413196:	bound  ebx,QWORD PTR [esi+0x635ec409]
  41319c:	xchg   esp,eax
  41319d:	xor    al,0x8f
  41319f:	fstp   TBYTE PTR [ecx+0x14dac587]
  4131a5:	pop    esp
  4131a6:	adc    al,0x37
  4131a8:	pop    edx
  4131a9:	mov    ebx,cs
  4131ab:	loopne 0x413131
  4131ad:	and    BYTE PTR [edx-0x7b],ah
  4131b0:	stos   BYTE PTR es:[edi],al
  4131b1:	or     ch,dh
  4131b3:	loope  0x413191
  4131b5:	mov    DWORD PTR [ebp+eiz*8-0x7e],0xc050daac
  4131bd:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4131bf:	arpl   WORD PTR [esi+ebx*4-0x64007e3c],sp
  4131c6:	or     dh,ch
  4131c8:	inc    ebx
  4131c9:	or     edi,DWORD PTR [edi-0x432f25d5]
  4131cf:	bound  ebp,QWORD PTR [ebp+0x4f]
  4131d2:	mov    edi,0xb0152560
  4131d7:	ins    BYTE PTR es:[edi],dx
  4131d8:	push   ss
  4131d9:	loopne 0x4131b1
  4131db:	loopne 0x413240
  4131dd:	pop    es
  4131de:	test   al,0x69
  4131e0:	mov    al,ds:0xe01e57ce
  4131e5:	xchg   ebp,eax
  4131e6:	and    eax,0xd1e268b9
  4131eb:	jl     0x4131c8
  4131ed:	mov    WORD PTR [esi],es
  4131ef:	push   ecx
  4131f0:	adc    edx,esp
  4131f2:	mov    bl,0xc6
  4131f4:	arpl   WORD PTR [ebp-0x3],di
  4131f7:	adc    BYTE PTR [eax+0x450256c4],ah
  4131fd:	cmc    
  4131fe:	pop    esi
  4131ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413200:	pop    ss
  413201:	fidiv  DWORD PTR [edx]
  413203:	xchg   edi,eax
  413204:	and    al,0xec
  413206:	retf   0xe783
  413209:	pop    ebx
  41320a:	or     esp,DWORD PTR [esi+0x52dd089b]
  413210:	jl     0x4131be
  413212:	inc    esi
  413213:	add    ecx,DWORD PTR [edi+0x3611fe08]
  413219:	lods   al,BYTE PTR ds:[esi]
  41321a:	cmp    ah,cl
  41321c:	jle    0x4131c7
  41321e:	mov    ebx,0x88214dc
  413223:	hlt    
  413224:	or     BYTE PTR [esi-0x16],dh
  413227:	sti    
  413228:	lods   al,BYTE PTR ds:[esi]
  413229:	cmp    BYTE PTR [edi+0x150ccca2],cl
  41322f:	mov    edi,0x871d68c3
  413234:	mov    edx,edx
  413236:	(bad)
  413239:	pop    ecx
  41323a:	icebp  
  41323b:	in     al,0xad
  41323d:	adc    DWORD PTR [ecx-0x3ffdcedb],edi
  413243:	imul   edx,DWORD PTR [ecx],0xa0230ea5
  413249:	in     al,dx
  41324a:	(bad)
  41324d:	call   0x9edcbe2
  413252:	ins    DWORD PTR es:[edi],dx
  413253:	inc    esi
  413254:	(bad)  
  413255:	pop    esi
  413256:	repz sub BYTE PTR [eax-0x1891d249],cl
  41325d:	mul    DWORD PTR [esi]
  41325f:	repnz mov bh,0x78
  413262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413263:	in     eax,0x7c
  413265:	test   DWORD PTR [ebp+0x242390de],esi
  41326b:	fs dec ebp
  41326d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41326e:	xchg   DWORD PTR ds:0x173fb84d,ebx
  413274:	and    cl,al
  413276:	xchg   BYTE PTR ds:0xa954234e,dh
  41327c:	pusha  
  41327d:	dec    eax
  41327e:	int3   
  41327f:	add    eax,0xc8067467
  413284:	sub    edi,ecx
  413286:	pop    ebp
  413287:	mov    edi,0x183fe4eb
  41328c:	mov    ecx,0xb057fd8c
  413291:	mov    bh,0xa1
  413293:	mov    edx,0x38bf0a61
  413298:	aas    
  413299:	pop    esp
  41329a:	aam    0xf3
  41329c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41329d:	mov    eax,ds:0x1918e247
  4132a2:	dec    ecx
  4132a3:	mov    al,0xc7
  4132a5:	push   edx
  4132a6:	ror    BYTE PTR [eax],cl
  4132a8:	retf   0x55fa
  4132ab:	loope  0x41325d
  4132ad:	out    0x94,eax
  4132af:	mov    bl,0x5f
  4132b1:	fadd   DWORD PTR [esi]
  4132b3:	jno    0x413262
  4132b5:	sub    al,bh
  4132b7:	das    
  4132b8:	inc    edi
  4132b9:	add    DWORD PTR [ebx],ecx
  4132bb:	cmp    BYTE PTR [ecx+0x40821262],cl
  4132c1:	lock pop esi
  4132c3:	sbb    eax,0x28bfa53e
  4132c8:	mov    edx,0x4bbe588f
  4132cd:	outs   dx,BYTE PTR ds:[esi]
  4132ce:	mul    DWORD PTR [edi]
  4132d0:	mov    al,0x91
  4132d2:	jmp    0xbb14:0xd630b444
  4132d9:	push   ebx
  4132da:	out    0xdb,al
  4132dc:	aad    0xf5
  4132de:	ror    bl,1
  4132e0:	test   BYTE PTR [ebp+eax*4+0x73],ch
  4132e4:	outs   dx,BYTE PTR ds:[esi]
  4132e5:	nop
  4132e6:	inc    DWORD PTR [ebp-0x6d]
  4132e9:	sbb    al,0x6a
  4132eb:	adc    eax,0x668650cb
  4132f0:	enter  0xfbc9,0xeb
  4132f4:	or     al,0xae
  4132f6:	mov    al,ds:0xb50000e3
  4132fb:	test   eax,0x7e2eba1a
  413300:	dec    esp
  413301:	test   eax,0x88ae8147
  413306:	push   ds
  413307:	pop    esp
  413308:	xchg   edi,ebx
  41330a:	and    esi,DWORD PTR [ebp+esi*1-0x38]
  41330e:	push   eax
  41330f:	push   0x63
  413311:	pusha  
  413312:	inc    eax
  413313:	ja     0x4132bd
  413315:	xor    bl,BYTE PTR [ecx+0x4ae020f2]
  41331b:	fidivr WORD PTR [ebp-0x21c341e9]
  413321:	or     DWORD PTR [eax+0x721dff25],edx
  413327:	cwde   
  413328:	scas   al,BYTE PTR es:[edi]
  413329:	bound  ebx,QWORD PTR ds:0xe47847fa
  41332f:	jbe    0x413377
  413331:	arpl   WORD PTR [edi],sp
  413333:	addr16 inc esi
  413335:	jbe    0x4133b6
  413337:	xor    cl,al
  413339:	push   cs
  41333a:	ret    0xa17d
  41333d:	push   ebx
  41333e:	mov    bh,0xa5
  413340:	popf   
  413341:	mov    esp,0x89bb25c2
  413346:	scas   al,BYTE PTR es:[edi]
  413347:	popa   
  413348:	xchg   BYTE PTR [ebp-0x37],ch
  41334b:	arpl   WORD PTR [ebx],si
  41334d:	bound  eax,QWORD PTR ds:0x23d6a540
  413353:	cwde   
  413354:	cmp    al,0xc3
  413356:	lods   eax,DWORD PTR ds:[esi]
  413357:	push   0x40
  413359:	out    dx,eax
  41335a:	lea    ecx,[edx-0x1f2332a0]
  413360:	inc    edi
  413361:	sbb    al,0x98
  413363:	xor    al,0xb6
  413365:	into   
  413366:	cmc    
  413367:	jmp    0x4133d2
  413369:	push   edx
  41336a:	inc    eax
  41336b:	in     eax,dx
  41336c:	ret    0xaae6
  41336f:	cmp    BYTE PTR [esi],ah
  413371:	int3   
  413372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413373:	cs xchg esi,eax
  413375:	jl     0x41337c
  413377:	dec    edi
  413378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413379:	mov    bl,0xb
  41337b:	js     0x413380
  41337d:	sub    eax,0xcf574d66
  413382:	leave  
  413383:	fcmovnbe st,st(6)
  413385:	sbb    BYTE PTR [ebp+0x4a7f33c1],cl
  41338b:	mov    ecx,0x1a1976e
  413390:	clc    
  413391:	mov    eax,ds:0x675f626d
  413396:	and    eax,0x56ef2f97
  41339b:	xchg   esi,eax
  41339c:	sub    cl,ah
  41339e:	add    DWORD PTR [edx-0x73e0d981],0xce5fd05f
  4133a8:	fist   WORD PTR [ebx-0x78]
  4133ab:	dec    eax
  4133ac:	and    bh,BYTE PTR [eax-0x2d]
  4133af:	lock or al,0x2e
  4133b2:	jns    0x413421
  4133b4:	cmp    al,0xb8
  4133b6:	stos   BYTE PTR es:[edi],al
  4133b7:	or     ebx,DWORD PTR [edi]
  4133b9:	sbb    BYTE PTR [edx],dl
  4133bb:	jo     0x413425
  4133bd:	mov    al,ds:0x28541285
  4133c2:	mov    bl,0xba
  4133c4:	push   ss
  4133c5:	pop    ds
  4133c6:	inc    edx
  4133c7:	push   edx
  4133c8:	or     DWORD PTR [esi+0x14cab8d8],ecx
  4133ce:	add    ecx,DWORD PTR [eax+esi*8]
  4133d1:	pusha  
  4133d2:	jne    0x413376
  4133d4:	cwde   
  4133d5:	pusha  
  4133d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133d7:	inc    edx
  4133d8:	outs   dx,DWORD PTR ds:[esi]
  4133d9:	out    0xaf,al
  4133db:	dec    edi
  4133dc:	lods   eax,DWORD PTR ds:[esi]
  4133dd:	sbb    DWORD PTR [edi],edx
  4133df:	ins    BYTE PTR es:[edi],dx
  4133e0:	mov    esi,0xd2370d96
  4133e5:	mov    dl,BYTE PTR [esi]
  4133e7:	cdq    
  4133e8:	xchg   esi,eax
  4133e9:	dec    eax
  4133ea:	js     0x4133cf
  4133ec:	std    
  4133ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ee:	adc    esp,DWORD PTR [ebx]
  4133f0:	xchg   edi,eax
  4133f1:	adc    al,0x4b
  4133f3:	xchg   ecx,eax
  4133f4:	call   0xdd9d7d0
  4133f9:	(bad)  
  4133fa:	aam    0x86
  4133fc:	and    esp,ebx
  4133fe:	or     DWORD PTR [ecx-0xb],ebx
  413401:	stc    
  413402:	pshufw mm4,QWORD PTR [edi+0x5f],0xc0
  413407:	jge    0x41340a
  413409:	fnstenv [edx+0x26]
  41340c:	clc    
  41340d:	sub    eax,0x488a986d
  413412:	xchg   ebx,eax
  413413:	add    dh,BYTE PTR ds:0xa1e8d318
  413419:	jne    0x41344f
  41341b:	ds sahf 
  41341d:	push   ebx
  41341e:	push   esp
  41341f:	ficomp DWORD PTR [esi-0x388315c8]
  413425:	test   DWORD PTR ds:0xb44502c5,edx
  41342b:	pop    esp
  41342c:	sub    eax,DWORD PTR [edx]
  41342e:	jo     0x4133dc
  413430:	jp     0x413447
  413432:	mov    DWORD PTR [ebx],ebp
  413434:	xor    bl,BYTE PTR [edi+0x7310df60]
  41343a:	fst    st(1)
  41343c:	mov    edi,0xce97465
  413441:	dec    esp
  413442:	xchg   ebp,eax
  413443:	cld    
  413444:	mov    cl,0x43
  413446:	aaa    
  413447:	in     al,0xab
  413449:	push   esp
  41344a:	ss inc esi
  41344c:	mov    edx,0x687fef33
  413451:	dec    ebx
  413452:	mov    ds:0x4e4cb02a,eax
  413457:	mul    DWORD PTR [ecx-0x73]
  41345a:	push   ecx
  41345b:	outs   dx,BYTE PTR ds:[si]
  41345d:	jmp    DWORD PTR [edi+0x774ff5c]
  413463:	or     eax,DWORD PTR [edi+edx*4]
  413466:	pop    esi
  413467:	in     eax,dx
  413468:	mov    eax,0xe8fd316e
  41346d:	jmp    0xcd9:0xebab1454
  413474:	pop    es
  413475:	hlt    
  413476:	mov    dh,0x99
  413478:	sub    ecx,esp
  41347a:	push   ss
  41347b:	cmc    
  41347c:	or     DWORD PTR [ebp+0x74],esi
  41347f:	jns    0x413480
  413481:	push   edi
  413482:	loope  0x413418
  413484:	push   cs
  413485:	icebp  
  413486:	stos   DWORD PTR es:[edi],eax
  413487:	jno    0x413418
  413489:	pushf  
  41348a:	retf   
  41348b:	scas   al,BYTE PTR es:[edi]
  41348c:	xor    dh,ah
  41348e:	jl     0x413445
  413490:	mov    dh,0xe0
  413492:	test   DWORD PTR [ebp+0x928a8de],0x8a545e56
  41349c:	pop    edi
  41349d:	and    ebp,DWORD PTR ss:[eax]
  4134a0:	scas   eax,DWORD PTR es:[edi]
  4134a1:	sbb    al,BYTE PTR [edx-0x7b505be6]
  4134a7:	aam    0xea
  4134a9:	call   0x22631b32
  4134ae:	or     al,0x4f
  4134b0:	and    al,0xa7
  4134b2:	mov    dh,0xc
  4134b4:	jo     0x413515
  4134b6:	mov    ecx,0x51e752fa
  4134bb:	lea    edi,[ebp+0x15]
  4134be:	test   eax,0xd4587e89
  4134c3:	lea    edi,[eax-0xd]
  4134c6:	scas   al,BYTE PTR es:[edi]
  4134c7:	xor    BYTE PTR [eax+0x70],bh
  4134ca:	aad    0x4
  4134cc:	mov    bh,0xf4
  4134ce:	adc    bh,0x6e
  4134d1:	push   ss
  4134d2:	stos   BYTE PTR es:[edi],al
  4134d3:	call   0xc183:0xdf976b7b
  4134da:	ror    al,cl
  4134dc:	xchg   ebp,eax
  4134dd:	xor    al,0x6e
  4134df:	leave  
  4134e0:	ret    
  4134e1:	xor    DWORD PTR [edx+0x6b],ecx
  4134e4:	icebp  
  4134e5:	addr16 sahf 
  4134e7:	sbb    al,0x10
  4134e9:	retf   
  4134ea:	shl    DWORD PTR [esi],0x44
  4134ed:	ror    BYTE PTR [edi+0x1b4df021],1
  4134f3:	add    DWORD PTR [eax],edx
  4134f5:	mov    DWORD PTR [ebx+0x22],0x439fdf4b
  4134fc:	(bad)  
  4134fd:	pop    esp
  4134fe:	dec    esi
  4134ff:	test   DWORD PTR [edx],edx
  413501:	das    
  413502:	push   edi
  413503:	je     0x413544
  413505:	(bad)  
  413506:	adc    eax,0xfbf6adb3
  41350b:	sub    ah,BYTE PTR [edi]
  41350d:	into   
  41350e:	xchg   ebp,eax
  41350f:	call   0xf395:0x22a313eb
  413516:	je     0x4134d8
  413518:	add    DWORD PTR [edi-0x7326373a],0xf788f832
  413522:	or     ch,BYTE PTR [ebx+0x2041be3b]
  413528:	imul   ecx,DWORD PTR ds:0xd43f9d2,0xcb015712
  413532:	scas   al,BYTE PTR es:[edi]
  413533:	(bad)  [edx]
  413535:	shr    edx,0xe5
  413538:	mov    BYTE PTR [ebp+0x4f],ch
  41353b:	mov    ebp,0xa2b31cd1
  413540:	jmp    0x30bd:0x29f61a4f
  413547:	or     eax,0x7a98bff9
  41354c:	loopne 0x4134dc
  41354e:	mov    eax,ecx
  413550:	cmp    bh,BYTE PTR [edi+0x33]
  413553:	shl    cl,0x2e
  413556:	fldl2t 
  413558:	das    
  413559:	popa   
  41355a:	cdq    
  41355b:	mov    cl,0x39
  41355d:	adc    al,0xb
  41355f:	cmp    edx,ecx
  413561:	gs clc 
  413563:	test   DWORD PTR [ecx+0x5],edi
  413566:	cmp    ecx,0x6b
  413569:	popa   
  41356a:	enter  0xfb15,0x5b
  41356e:	jb     0x4135a8
  413570:	data16 aam 0x66
  413573:	int3   
  413574:	(bad)  
  413575:	je     0x4135e2
  413577:	pop    edx
  413578:	scas   eax,DWORD PTR es:[edi]
  413579:	push   esi
  41357a:	adc    cl,dl
  41357c:	add    DWORD PTR [eax-0x201d88d3],ebx
  413582:	rol    BYTE PTR [edi+0x4a],0xb5
  413586:	leave  
  413587:	neg    DWORD PTR [edx]
  413589:	add    DWORD PTR [ecx-0x3f],ebp
  41358c:	scas   eax,DWORD PTR es:[edi]
  41358d:	pop    ds
  41358e:	dec    ecx
  41358f:	ins    BYTE PTR es:[edi],dx
  413590:	and    ecx,esp
  413592:	shl    DWORD PTR [esp+eax*4],0xe8
  413596:	inc    eax
  413597:	outs   dx,DWORD PTR ds:[esi]
  413598:	lods   al,BYTE PTR ds:[esi]
  413599:	imul   edx,ebx,0x2dd04a04
  41359f:	cmp    edi,DWORD PTR [ebp-0x1]
  4135a2:	rcl    DWORD PTR [edi+0x55],1
  4135a5:	and    al,0xfe
  4135a7:	ins    DWORD PTR es:[edi],dx
  4135a8:	imul   BYTE PTR [ebp+0x77]
  4135ab:	lods   al,BYTE PTR ds:[esi]
  4135ac:	and    eax,0x42ecd7a7
  4135b1:	sub    eax,0x4575fe91
  4135b6:	jae    0x4135dc
  4135b8:	int3   
  4135b9:	loopne 0x413571
  4135bb:	and    BYTE PTR [ebp+0x1e],al
  4135be:	push   ebp
  4135bf:	int    0xce
  4135c1:	(bad)  [edi+0x2e]
  4135c4:	adc    eax,0xd4272333
  4135c9:	and    eax,DWORD PTR [ebp+0x73]
  4135cc:	push   cs
  4135cd:	push   ss
  4135ce:	sub    al,0xa3
  4135d0:	pop    ecx
  4135d1:	push   esi
  4135d2:	push   esp
  4135d3:	test   BYTE PTR [edi+0x15],bh
  4135d6:	jecxz  0x4135de
  4135d8:	sahf   
  4135d9:	fwait
  4135da:	(bad)  
  4135db:	pop    edx
  4135dc:	scas   eax,DWORD PTR es:[edi]
  4135dd:	jno    0x41364a
  4135df:	out    dx,al
  4135e0:	mov    bl,0x60
  4135e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135e3:	loop   0x413566
  4135e5:	shl    esi,0xc0
  4135e8:	sbb    al,0xf8
  4135ea:	pop    esp
  4135eb:	jbe    0x4135c9
  4135ed:	add    DWORD PTR [ecx],ebx
  4135ef:	out    0x76,eax
  4135f1:	scas   eax,DWORD PTR es:[edi]
  4135f2:	repz dec eax
  4135f4:	out    dx,eax
  4135f5:	jge    0x413670
  4135f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f8:	mov    ebp,edx
  4135fa:	shl    BYTE PTR [esi-0x33],1
  4135fd:	push   ds
  4135fe:	pushf  
  4135ff:	imul   ebx,DWORD PTR [ebx+0xa],0xea7b57ac
  413606:	out    dx,eax
  413607:	jnp    0x413652
  413609:	xchg   edi,eax
  41360a:	cmp    DWORD PTR ds:0x78c6f44c,0x12
  413611:	cli    
  413612:	cli    
  413613:	idiv   BYTE PTR [edi]
  413615:	sbb    al,BYTE PTR [ecx+0x12]
  413618:	push   esi
  413619:	inc    edi
  41361b:	ins    DWORD PTR es:[edi],dx
  41361c:	jbe    0x4135c4
  41361e:	jp     0x41366a
  413620:	xchg   edx,eax
  413621:	inc    ecx
  413622:	inc    esp
  413623:	adc    DWORD PTR [ebx-0x49b0b601],esi
  413629:	jg     0x41361b
  41362b:	test   al,0xf3
  41362d:	sub    ah,BYTE PTR [ebx-0x3b]
  413630:	cmp    BYTE PTR [edx],cl
  413632:	pusha  
  413633:	dec    edi
  413634:	cmp    BYTE PTR [ebx+0x55],bl
  413637:	and    DWORD PTR [eax],0x87eedee3
  41363d:	rol    BYTE PTR [ecx],1
  41363f:	retf   0xcc97
  413642:	in     al,dx
  413643:	xchg   esi,eax
  413644:	out    0x49,eax
  413646:	pop    esi
  413647:	(bad)  
  413648:	call   FWORD PTR [edi-0x77]
  41364b:	je     0x413677
  41364d:	pushf  
  41364e:	pushf  
  41364f:	pop    ebp
  413650:	pop    edx
  413651:	aaa    
  413652:	rcr    DWORD PTR [ebx-0x69],1
  413655:	test   eax,0x8ccf6087
  41365a:	xchg   esp,eax
  41365b:	add    ch,BYTE PTR [ecx+eax*1]
  41365e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365f:	pop    ecx
  413660:	(bad)  
  413661:	xchg   ebx,eax
  413662:	dec    ebx
  413663:	jecxz  0x413691
  413665:	loope  0x413607
  413667:	push   0xd125d8b9
  41366c:	faddp  st(3),st
  41366e:	popa   
  41366f:	ror    DWORD PTR [esi-0x10f3ee0f],cl
  413675:	fimul  WORD PTR [eax]
  413677:	imul   esi,DWORD PTR [esi-0x268a55a5],0x3c
  41367e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41367f:	ret    0xc4c2
  413682:	rol    DWORD PTR [edi+0x70],0xc4
  413686:	xchg   edx,eax
  413687:	fidiv  DWORD PTR [edx-0x57]
  41368a:	in     eax,dx
  41368b:	push   ebx
  41368c:	pushf  
  41368d:	mov    eax,DWORD PTR [edi+0xf7404ba]
  413693:	dec    edx
  413694:	pop    esp
  413695:	in     al,0x6e
  413697:	dec    ebx
  413698:	pop    esi
  413699:	mov    cl,0xfa
  41369b:	jnp    0x4136c7
  41369d:	sahf   
  41369e:	(bad)  
  41369f:	aam    0x90
  4136a1:	mov    BYTE PTR [ebx-0x2d],dl
  4136a4:	call   0xe143c476
  4136a9:	jno    0x413704
  4136ab:	push   ss
  4136ac:	or     bl,dl
  4136ae:	stos   DWORD PTR es:[edi],eax
  4136af:	inc    ebx
  4136b0:	dec    DWORD PTR [eax]
  4136b2:	shr    DWORD PTR [ebx-0x8ad35e8],cl
  4136b8:	sub    eax,0x101cb8e3
  4136bd:	inc    esi
  4136be:	mov    edx,0xee4f5d6
  4136c3:	int    0x3f
  4136c5:	stc    
  4136c6:	je     0x4136f7
  4136c8:	lock jae 0x41367c
  4136cb:	cmp    eax,0xb18a90ff
  4136d0:	xchg   edi,eax
  4136d1:	sbb    ebp,DWORD PTR [edx]
  4136d3:	mov    WORD PTR [eax-0x49],?
  4136d6:	add    cl,bh
  4136d8:	sbb    edi,DWORD PTR [edx+0x465666f2]
  4136de:	add    al,0xf0
  4136e0:	dec    edi
  4136e1:	test   eax,0x77561160
  4136e6:	call   DWORD PTR [esi+0x39249953]
  4136ec:	sub    dh,BYTE PTR [eax]
  4136ee:	mov    dl,BYTE PTR [edx-0x15]
  4136f1:	mov    ah,BYTE PTR [ebp+0x4add2e8a]
  4136f7:	mov    dl,0x4
  4136f9:	push   esp
  4136fa:	or     BYTE PTR [edx+esi*1+0x57],cl
  4136fe:	dec    esi
  4136ff:	outs   dx,DWORD PTR ds:[esi]
  413700:	pop    esi
  413701:	pop    eax
  413702:	vmwrite edx,esi
  413705:	rol    DWORD PTR [ebx-0x51],0xc7
  413709:	outs   dx,BYTE PTR ds:[esi]
  41370a:	enter  0x6d8f,0x78
  41370e:	jp     0x41377c
  413710:	jp     0x41375f
  413712:	ins    DWORD PTR es:[edi],dx
  413713:	or     esp,DWORD PTR [eax+0x4393f482]
  413719:	aad    0xb9
  41371b:	nop
  41371c:	jno    0x4136c2
  41371e:	ficom  DWORD PTR [ecx+0x3d]
  413721:	aas    
  413722:	xlat   BYTE PTR ds:[ebx]
  413723:	jl     0x413741
  413725:	push   esp
  413726:	cmp    eax,0xba345d1f
  41372b:	inc    ebx
  41372c:	mov    al,ds:0xb161218c
  413731:	das    
  413732:	fcmovbe st,st(6)
  413734:	mov    DWORD PTR [ebp-0x1],ebp
  413737:	scas   al,BYTE PTR es:[edi]
  413738:	arpl   WORD PTR [ecx-0x5b25d0e3],bx
  41373e:	and    DWORD PTR [ebp+eiz*8+0xa08735f],edx
  413745:	sbb    DWORD PTR [ebx],esp
  413747:	jb     0x4136f0
  413749:	push   ds
  41374a:	iret   
  41374b:	sbb    ebx,DWORD PTR [edi]
  41374d:	daa    
  41374e:	add    DWORD PTR [esi+eiz*8],ebp
  413751:	push   ebx
  413752:	mov    WORD PTR [edx-0x39112e39],es
  413758:	ds add al,0xe4
  41375b:	jbe    0x413742
  41375d:	ror    BYTE PTR [edi+esi*4+0x8],cl
  413761:	mov    cl,0xdf
  413763:	mov    edx,0xf7465620
  413768:	iret   
  413769:	out    0xcc,eax
  41376b:	mov    esp,0xd193e25
  413770:	cmp    al,0x36
  413772:	popf   
  413773:	imul   esp,DWORD PTR [eax+0xd],0x50
  413777:	dec    ecx
  413778:	and    dl,ch
  41377a:	ja     0x4137aa
  41377c:	xor    edx,ebx
  41377e:	arpl   sp,ax
  413780:	sub    al,0x64
  413782:	cmc    
  413783:	ja     0x4137cf
  413785:	(bad)  
  413786:	imul   edx,DWORD PTR [esi+0x7a7c31dc],0xffffffa9
  41378d:	fidivr DWORD PTR [eax+0x31]
  413790:	sahf   
  413791:	push   cs
  413792:	sbb    dh,0x76
  413795:	popa   
  413796:	fmul   DWORD PTR [edi+edx*1-0x35306d55]
  41379d:	cmp    DWORD PTR [ecx-0xf31840e],0xffffffcb
  4137a4:	mov    ebp,edx
  4137a6:	add    eax,0xf0b876a3
  4137ab:	frstor [edx]
  4137ad:	(bad)  
  4137ae:	pop    edx
  4137af:	pop    eax
  4137b0:	mov    ch,0x9f
  4137b2:	push   ebx
  4137b3:	mov    edi,0x340a3322
  4137b8:	das    
  4137b9:	js     0x4137fe
  4137bb:	mov    dh,0x37
  4137bd:	sbb    BYTE PTR [edi+0x56],bl
  4137c0:	retf   0xf86f
  4137c3:	cmp    BYTE PTR [edx+esi*4-0x68228868],ah
  4137ca:	xchg   esi,eax
  4137cb:	sbb    BYTE PTR [edi+esi*4],bh
  4137ce:	adc    BYTE PTR [ebx],0x6b
  4137d1:	icebp  
  4137d2:	pop    ebp
  4137d3:	lods   al,BYTE PTR ds:[esi]
  4137d4:	test   DWORD PTR [edx+0x24],ebx
  4137d7:	dec    ecx
  4137d8:	jp     0x4137ae
  4137da:	adc    DWORD PTR [ebx-0x64],esp
  4137dd:	xor    dl,BYTE PTR [eax]
  4137df:	ror    DWORD PTR [ecx+0x6a],1
  4137e2:	xlat   BYTE PTR ds:[ebx]
  4137e3:	jp     0x4137b1
  4137e5:	jae    0x41380a
  4137e7:	sbb    dl,al
  4137e9:	push   0x10
  4137eb:	lahf   
  4137ec:	mov    edi,0xff6c8d6e
  4137f1:	int    0x63
  4137f3:	mov    eax,ds:0xd813d9a8
  4137f8:	mov    ds:0xdcfc02ab,eax
  4137fd:	or     edi,DWORD PTR [eax-0x46]
  413800:	cmp    al,0x82
  413802:	push   ebp
  413803:	bound  edi,QWORD PTR [edx+ecx*2-0x34]
  413807:	cdq    
  413808:	in     al,dx
  413809:	sub    al,0x85
  41380b:	jo     0x4137d9
  41380d:	fld    TBYTE PTR [edx-0x24]
  413810:	pop    esi
  413811:	or     DWORD PTR [ecx],esp
  413813:	inc    ebx
  413814:	adc    dh,al
  413816:	(bad)  
  413819:	xor    ch,BYTE PTR [edi-0x2ca676b2]
  41381f:	out    0x90,eax
  413821:	sbb    eax,DWORD PTR [ebx]
  413823:	ins    BYTE PTR es:[edi],dx
  413824:	pusha  
  413825:	je     0x4137dd
  413827:	jne    0x413833
  413829:	push   ebp
  41382a:	jo     0x4137bc
  41382c:	and    ch,BYTE PTR [edx-0x58b89dba]
  413832:	fistp  WORD PTR [edi+eax*2-0x29]
  413836:	mov    ebx,0x5b317e7a
  41383b:	mov    ebp,0x69bfe6fa
  413840:	push   esp
  413841:	std    
  413842:	pop    ecx
  413843:	movaps xmm2,xmm4
  413846:	lock popf 
  413848:	mov    bh,0x6b
  41384a:	cmp    al,al
  41384c:	in     al,0x11
  41384e:	dec    ebx
  41384f:	retf   
  413850:	adc    ecx,DWORD PTR [ecx+0xd]
  413853:	call   0x5a820ed0
  413858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413859:	jle    0x413815
  41385b:	lods   al,BYTE PTR ds:[esi]
  41385c:	sub    ecx,DWORD PTR [ebx]
  41385e:	icebp  
  41385f:	sbb    BYTE PTR [ecx-0x52],0x21
  413863:	dec    edx
  413864:	fld    QWORD PTR [esi-0x20fd1642]
  41386a:	(bad)
  41386e:	aas    
  41386f:	pop    ebp
  413870:	mov    al,ds:0x2298853c
  413875:	rol    DWORD PTR [esi],0x80
  413878:	push   0x8af48c63
  41387d:	jg     0x413855
  41387f:	mov    dl,0x75
  413881:	sbb    DWORD PTR [ebp-0x68],ebp
  413884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413885:	push   ebp
  413886:	dec    esi
  413887:	jecxz  0x4138c5
  413889:	push   ds
  41388a:	out    dx,al
  41388b:	push   ss
  41388c:	or     esi,ecx
  41388e:	ins    DWORD PTR es:[edi],dx
  41388f:	or     esi,DWORD PTR [edx]
  413891:	cli    
  413892:	adc    BYTE PTR [edx],al
  413894:	sub    BYTE PTR [edx-0x14],bl
  413897:	ret    0xd3b7
  41389a:	ins    BYTE PTR es:[edi],dx
  41389b:	cmc    
  41389c:	dec    esi
  41389d:	jmp    0xfdcef946
  4138a2:	mov    al,ds:0xec1c870a
  4138a7:	iret   
  4138a8:	aas    
  4138a9:	mov    esi,0x1470b5f2
  4138ae:	stos   DWORD PTR es:[edi],eax
  4138af:	bnd jl 0x413836
  4138b2:	popf   
  4138b3:	adc    al,BYTE PTR [ebp+0x1f]
  4138b6:	in     eax,0x1b
  4138b8:	enter  0x1f51,0x98
  4138bc:	fdivr  DWORD PTR [eax+0x5531f3c0]
  4138c2:	inc    esp
  4138c3:	dec    eax
  4138c4:	rcl    ah,0x54
  4138c7:	pop    ebx
  4138c8:	idiv   BYTE PTR [esi+ebp*1-0x7612a8e0]
  4138cf:	rcr    DWORD PTR [ebx-0x25399a45],0x6f
  4138d6:	into   
  4138d7:	test   al,0xd
  4138d9:	aaa    
  4138da:	jmp    0xa393:0x5dc59d10
  4138e1:	(bad)  
  4138e2:	push   cs
  4138e3:	mov    ds:0xded3aae5,al
  4138e8:	and    DWORD PTR [esi+ebp*2],0xcdb8c737
  4138ef:	mov    esi,0x988d1940
  4138f4:	into   
  4138f5:	adc    al,0xd8
  4138f7:	jle    0x4138fa
  4138f9:	or     esi,eax
  4138fb:	sahf   
  4138fc:	call   0x53394493
  413901:	daa    
  413902:	sbb    ch,dl
  413904:	add    BYTE PTR [ebx],ah
  413906:	jo     0x4138ba
  413908:	mov    edi,0xe448b0eb
  41390d:	scas   al,BYTE PTR es:[edi]
  41390e:	not    BYTE PTR [edx-0x6025b722]
  413914:	dec    ebx
  413915:	xchg   ecx,eax
  413916:	add    esp,DWORD PTR [ecx]
  413918:	loopne 0x413989
  41391a:	xlat   BYTE PTR ds:[ebx]
  41391b:	fs mov bl,0x72
  41391e:	mov    ss,WORD PTR [edx-0x45b15cfd]
  413924:	je     0x4138e1
  413926:	div    ebx
  413928:	pop    ss
  413929:	or     ebx,DWORD PTR [eax-0x6c8df12e]
  41392f:	loope  0x413968
  413931:	ret    0x872e
  413934:	xor    eax,0x9926f779
  413939:	xor    BYTE PTR [ebx+eax*2-0x6eecfab4],bh
  413940:	or     eax,0x3a147566
  413945:	xchg   edi,eax
  413946:	ret    
  413947:	stos   DWORD PTR es:[di],eax
  413949:	jl     0x41390a
  41394b:	push   ebp
  41394c:	aam    0x37
  41394e:	xor    al,0x78
  413950:	xchg   ebx,eax
  413951:	jbe    0x4139c9
  413953:	out    0xe,eax
  413955:	mov    ebp,0x4ee82e55
  41395a:	push   edi
  41395b:	pop    es
  41395c:	add    al,0x28
  41395e:	clc    
  41395f:	lea    esi,[edx]
  413961:	int3   
  413962:	cmp    eax,0xbcec5c12
  413967:	(bad)  
  413968:	dec    ebx
  413969:	lods   eax,DWORD PTR ds:[esi]
  41396a:	pop    ss
  41396b:	div    eax
  41396d:	out    0x6c,al
  41396f:	lock (bad) 
  413971:	int    0xee
  413973:	jne    0x41391f
  413975:	ficom  DWORD PTR [ebp+0x31]
  413978:	mov    dh,0xb3
  41397a:	pop    esp
  41397b:	mov    ebx,0x18ce15c
  413980:	xchg   edi,eax
  413981:	and    al,0xb0
  413983:	mov    dh,0x88
  413985:	mov    ds:0xfdfcf0b3,al
  41398a:	pop    es
  41398b:	sbb    esi,ebx
  41398d:	ins    DWORD PTR es:[edi],dx
  41398e:	sbb    eax,0x145d6452
  413993:	adc    eax,0xa8b7a501
  413998:	bound  edx,QWORD PTR [ebp-0x3f]
  41399b:	enter  0x6dd9,0x58
  41399f:	idiv   ch
  4139a1:	fucomi st,st(4)
  4139a3:	sub    al,0x91
  4139a5:	sub    al,0x72
  4139a7:	loop   0x413a24
  4139a9:	fmul   QWORD PTR [ebp-0x2c]
  4139ac:	cmp    DWORD PTR [eax-0x60acd4f4],0x3b
  4139b3:	sub    eax,0x96c1ab58
  4139b8:	sahf   
  4139b9:	dec    eax
  4139ba:	lods   eax,DWORD PTR ds:[esi]
  4139bb:	clc    
  4139bc:	mov    fs,WORD PTR [eax]
  4139be:	(bad)  
  4139bf:	inc    ebx
  4139c0:	sahf   
  4139c1:	loop   0x413a0f
  4139c3:	push   esi
  4139c4:	lods   al,BYTE PTR ds:[esi]
  4139c5:	inc    ebp
  4139c6:	scas   eax,DWORD PTR es:[edi]
  4139c7:	enter  0xb627,0x57
  4139cb:	cmp    dh,BYTE PTR [edx]
  4139cd:	jl     0x41396a
  4139cf:	repnz cmp bh,BYTE PTR [esi-0x37]
  4139d3:	push   edi
  4139d4:	sbb    BYTE PTR [eax],al
  4139d6:	cmp    ebp,DWORD PTR [ebx+edi*1-0x54]
  4139da:	push   0xa9aea630
  4139df:	xor    cl,cl
  4139e1:	dec    eax
  4139e2:	in     al,0xa5
  4139e4:	jmp    0xe4c51d1e
  4139e9:	jne    0x4139a9
  4139eb:	cmp    esp,esp
  4139ed:	mov    ch,BYTE PTR [ecx+0x33]
  4139f0:	mov    edx,0x1b7fc3e1
  4139f5:	inc    esi
  4139f6:	adc    al,0x75
  4139f8:	nop
  4139f9:	add    al,0x57
  4139fb:	mov    esp,0xc17355eb
  413a00:	sub    ch,dl
  413a02:	mov    ecx,0x400bc0fd
  413a07:	jo     0x413a16
  413a09:	repnz add BYTE PTR [edx+0x34099bff],cl
  413a10:	jae    0x413a08
  413a12:	and    eax,DWORD PTR [ebx-0x24]
  413a15:	push   esi
  413a16:	jae    0x4139b1
  413a18:	inc    esi
  413a19:	test   ebx,esi
  413a1b:	test   al,0x6f
  413a1d:	or     al,0x59
  413a1f:	sahf   
  413a20:	jl     0x413a8a
  413a22:	nop
  413a23:	nop
  413a24:	jg     0x413a4c
  413a26:	jmp    0xbaf1:0x121d95d0
  413a2d:	cdq    
  413a2e:	mov    ds:0x183ee4a1,al
  413a33:	jne    0x413a2f
  413a35:	(bad)  
  413a36:	jb     0x413a23
  413a38:	fs leave 
  413a3a:	xor    BYTE PTR [ecx+0x3a],ch
  413a3d:	add    esp,0xad95aa8f
  413a43:	mov    bh,0xba
  413a45:	div    DWORD PTR cs:[edx]
  413a48:	fild   WORD PTR [ebx-0x1886faee]
  413a4e:	retf   
  413a4f:	fadd   DWORD PTR [ecx-0x4a]
  413a52:	bndldx bnd3,ds:0x56bfa13f
  413a59:	push   ss
  413a5a:	adc    ebx,DWORD PTR [edi+0x75]
  413a5d:	and    edx,DWORD PTR [edi-0x38bfc738]
  413a63:	jmp    0x413a39
  413a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a66:	xchg   ecx,eax
  413a67:	or     DWORD PTR [edi+0x6],0x4
  413a6b:	and    ebp,ebp
  413a6d:	sti    
  413a6e:	or     bl,0x7c
  413a71:	out    0x2d,al
  413a73:	adc    edi,DWORD PTR [edx+ecx*4]
  413a76:	adc    al,dl
  413a78:	pop    esp
  413a79:	mov    ah,0x2
  413a7b:	fstp   TBYTE PTR [ebp-0x5872d319]
  413a81:	repnz popa 
  413a83:	hlt    
  413a84:	sub    esi,edi
  413a86:	add    ebx,DWORD PTR [ebx]
  413a88:	mov    edx,0x9c017d72
  413a8d:	mov    dh,0x34
  413a8f:	xchg   DWORD PTR [ebp+0x3f],ebp
  413a92:	mov    ecx,ds
  413a94:	add    bh,BYTE PTR [edx+0x3d]
  413a97:	in     al,dx
  413a98:	mov    es,WORD PTR [ecx]
  413a9a:	test   DWORD PTR ds:0x2612128c,0x40b6c4fd
  413aa4:	mov    esi,0x97d3859d
  413aa9:	dec    ecx
  413aaa:	out    0x23,al
  413aac:	scas   eax,DWORD PTR es:[edi]
  413aad:	add    eax,0xe7d49d08
  413ab2:	sbb    dl,BYTE PTR [edx+0x1a22c0ae]
  413ab8:	mov    edi,0x640f9cd9
  413abd:	adc    ecx,edi
  413abf:	sub    edi,DWORD PTR [edi]
  413ac1:	sbb    al,0x91
  413ac3:	scas   al,BYTE PTR es:[edi]
  413ac4:	(bad)  
  413ac6:	push   es
  413ac7:	jmp    0x413af7
  413ac9:	xor    al,0x12
  413acb:	mov    bl,0x9
  413acd:	mov    dl,0x11
  413acf:	std    
  413ad0:	fs lahf 
  413ad2:	jp     0x413a6a
  413ad4:	cdq    
  413ad5:	dec    edx
  413ad6:	pop    ebx
  413ad7:	inc    eax
  413ad8:	retf   
  413ad9:	jg     0x413a62
  413adb:	jns    0x413afc
  413add:	daa    
  413ade:	xchg   edx,eax
  413adf:	fmul   st,st(7)
  413ae1:	jnp    0x413b26
  413ae3:	xchg   esp,eax
  413ae4:	int    0xc8
  413ae6:	out    dx,eax
  413ae7:	idiv   DWORD PTR [edi]
  413ae9:	bound  ecx,QWORD PTR [ecx]
  413aeb:	clc    
  413aec:	xchg   esp,eax
  413aed:	inc    ebx
  413aee:	dec    ebp
  413aef:	or     BYTE PTR [edi+0x7b],bh
  413af2:	arpl   WORD PTR [ecx],bx
  413af4:	gs push ebp
  413af6:	int3   
  413af7:	data16 scas al,BYTE PTR es:[edi]
  413af9:	pop    edi
  413afa:	fwait
  413afb:	(bad)  
  413afc:	ins    BYTE PTR es:[edi],dx
  413afd:	retf   0x7637
  413b00:	mov    eax,0x230b888e
  413b05:	dec    ebp
  413b06:	xchg   BYTE PTR [eax-0x60a9cf09],dh
  413b0c:	push   eax
  413b0d:	jne    0x413b61
  413b0f:	fild   DWORD PTR [ecx-0x49]
  413b12:	cli    
  413b13:	popf   
  413b14:	leave  
  413b15:	push   esp
  413b16:	and    bl,bl
  413b18:	adc    eax,0xeb30becd
  413b1d:	mov    ah,0x27
  413b1f:	mov    edi,DWORD PTR [edx+0x13244d82]
  413b25:	or     dl,BYTE PTR [edx-0x33]
  413b28:	inc    ecx
  413b29:	out    dx,eax
  413b2a:	inc    ebx
  413b2b:	seta   BYTE PTR [ecx-0x2f]
  413b2f:	inc    ebp
  413b30:	outs   dx,DWORD PTR ds:[esi]
  413b31:	loop   0x413ba5
  413b33:	mov    ch,BYTE PTR fs:[eax]
  413b36:	ficomp WORD PTR [esi]
  413b38:	repnz and dh,bl
  413b3b:	(bad)  [eax-0x517417cf]
  413b41:	shl    DWORD PTR [ecx+0x8],cl
  413b44:	mov    edi,0x4ca3c1c2
  413b49:	push   ds
  413b4a:	fs xchg esi,eax
  413b4c:	cli    
  413b4d:	imul   ebp,DWORD PTR [ebp-0x43],0x38cf5e58
  413b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b55:	push   ebp
  413b56:	retf   
  413b57:	repz cmp eax,0x17c74a8b
  413b5d:	push   0x66cd9cf7
  413b62:	and    BYTE PTR [esi+0x3d],bh
  413b65:	stos   DWORD PTR es:[edi],eax
  413b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b67:	rol    DWORD PTR [edi],cl
  413b69:	add    esi,DWORD PTR [ebx-0xb]
  413b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b6d:	pop    DWORD PTR [ebp-0x656766a8]
  413b73:	inc    edx
  413b74:	idiv   esi
  413b76:	lods   eax,DWORD PTR ds:[esi]
  413b77:	mov    dh,0x46
  413b79:	xor    edi,DWORD PTR [eax+0x15]
  413b7c:	jecxz  0x413bd0
  413b7e:	ds sub eax,0x6712712a
  413b84:	push   ss
  413b85:	mov    al,BYTE PTR [eax-0x10]
  413b88:	std    
  413b89:	xor    eax,0x64899122
  413b8e:	cdq    
  413b8f:	cdq    
  413b90:	daa    
  413b91:	add    eax,DWORD PTR [ebx]
  413b93:	sub    DWORD PTR [ebx+0x8],ecx
  413b96:	mov    dl,0xcd
  413b98:	push   cs
  413b99:	push   ebp
  413b9a:	jmp    0x413b4e
  413b9c:	push   ecx
  413b9d:	jmp    0x413b87
  413b9f:	pop    ds
  413ba0:	dec    edi
  413ba1:	sub    BYTE PTR [ecx+0x6e8d7d13],al
  413ba7:	scas   eax,DWORD PTR es:[edi]
  413ba8:	xor    dl,BYTE PTR ds:0x5ca14c33
  413bae:	jp     0x413bdb
  413bb0:	jne    0x413c2c
  413bb2:	mov    ecx,0x4cbbf3f7
  413bb7:	jo     0x413b66
  413bb9:	inc    esi
  413bba:	sbb    al,0x9a
  413bbc:	mov    ah,0x36
  413bbe:	jl     0x413c2e
  413bc0:	sbb    DWORD PTR [ebp-0x2c],ebp
  413bc3:	(bad)  [esi+0x1f]
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	jb     0x413c1e
  413bc9:	test   DWORD PTR [eax-0x1263de41],ecx
  413bcf:	es inc edi
  413bd1:	add    al,0x9c
  413bd3:	or     DWORD PTR [ebx-0x39],edi
  413bd6:	aad    0x5d
  413bd8:	fbstp  TBYTE PTR [eax]
  413bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bdb:	addr16 mov ds:0x12b2,eax
  413bdf:	xchg   edx,eax
  413be0:	loopne 0x413bdf
  413be2:	mov    eax,0x7bef21b6
  413be7:	repz jns 0x413c2b
  413bea:	sbb    DWORD PTR [edi],ecx
  413bec:	and    BYTE PTR [edi+0x68],dh
  413bef:	inc    edi
  413bf0:	push   es
  413bf1:	xchg   BYTE PTR [esi],cl
  413bf3:	aam    0xf3
  413bf5:	adc    eax,0xd440368d
  413bfa:	retf   
  413bfb:	sub    BYTE PTR [edx+0x5a],bl
  413bfe:	jb     0x413c24
  413c00:	(bad)  
  413c02:	sbb    DWORD PTR [ebx+0x7b1d47fc],ecx
  413c08:	inc    ebx
  413c09:	cdq    
  413c0a:	jb     0x413bd3
  413c0c:	jecxz  0x413c22
  413c0e:	or     DWORD PTR [esi+0x3e563902],0x68d019a7
  413c18:	arpl   WORD PTR [esi-0x5c],dx
  413c1b:	fwait
  413c1c:	xchg   esp,eax
  413c1d:	dec    eax
  413c1e:	inc    esi
  413c1f:	mov    es,WORD PTR [ebx-0x5]
  413c22:	jb     0x413c79
  413c24:	inc    ecx
  413c25:	cmc    
  413c26:	(bad)
  413c2a:	outs   dx,DWORD PTR ds:[esi]
  413c2b:	push   ebx
  413c2c:	xchg   esp,eax
  413c2d:	bound  esi,QWORD PTR [bp+si+0x66]
  413c31:	(bad)  
  413c32:	fdiv   DWORD PTR [ecx-0x5]
  413c35:	lods   al,BYTE PTR ds:[esi]
  413c36:	push   edi
  413c37:	fmulp  st(0),st
  413c39:	(bad)  
  413c3a:	xchg   edx,eax
  413c3b:	cmp    al,BYTE PTR [eax]
  413c3d:	add    ah,dh
  413c3f:	outs   dx,BYTE PTR ds:[esi]
  413c40:	sbb    esi,DWORD PTR [eax-0x64]
  413c43:	dec    edx
  413c44:	cmp    ch,0x65
  413c47:	stc    
  413c48:	loope  0x413bfd
  413c4a:	enter  0xa84b,0xe8
  413c4e:	sahf   
  413c4f:	in     al,dx
  413c50:	jmp    0xe125:0xbc3f77a5
  413c57:	pop    ebp
  413c58:	push   es
  413c59:	inc    ebp
  413c5a:	leave  
  413c5b:	(bad)  
  413c5c:	mov    ds:0xe56d739c,al
  413c61:	icebp  
  413c62:	xchg   esp,eax
  413c63:	(bad)  
  413c64:	jae    0x413c04
  413c66:	fldenv [ebx+0x48]
  413c69:	inc    ebp
  413c6a:	mov    ecx,0x5cd06657
  413c6f:	mov    esp,0xaf1fe533
  413c74:	das    
  413c75:	mov    edi,0x34b51d9c
  413c7a:	test   al,0x5b
  413c7c:	dec    ebp
  413c7d:	adc    ecx,DWORD PTR [ebx]
  413c7f:	jo     0x413c6d
  413c81:	fst    DWORD PTR [esi-0x2a]
  413c84:	push   0x34
  413c86:	jmp    0x413d00
  413c88:	mov    al,0x9a
  413c8a:	adc    bl,BYTE PTR [eax*1-0x69a64184]
  413c91:	sbb    dh,BYTE PTR [ecx+0x71f1a2c4]
  413c97:	imul   ecx,DWORD PTR ss:[ebp+0x189eac27],0xfffffff7
  413c9f:	dec    edx
  413ca0:	mov    ds:0x371fdac4,eax
  413ca5:	sub    dl,BYTE PTR [edx-0x67b2f234]
  413cab:	lods   al,BYTE PTR ds:[esi]
  413cac:	out    dx,eax
  413cad:	mov    ah,0xb9
  413caf:	jg     0x413ca7
  413cb1:	neg    WORD PTR [eax]
  413cb4:	dec    esp
  413cb6:	out    dx,eax
  413cb7:	popa   
  413cb8:	mov    edi,0xc0417a07
  413cbd:	cmp    al,0x9a
  413cbf:	rol    BYTE PTR [ebp-0x2e],0x96
  413cc3:	cmp    ch,BYTE PTR [esi-0x22]
  413cc6:	ret    
  413cc7:	gs push esi
  413cc9:	enter  0xc3d9,0x1
  413ccd:	jmp    0x413cd3
  413ccf:	dec    esp
  413cd0:	sahf   
  413cd1:	xor    esi,DWORD PTR [eax-0x7a55d46e]
  413cd7:	in     eax,0x55
  413cd9:	pop    eax
  413cda:	mov    bh,0xe8
  413cdc:	inc    esi
  413cdd:	mov    ds:0x67bb29bb,al
  413ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ce3:	cmp    eax,DWORD PTR [eax+edx*8-0x756b193a]
  413cea:	dec    ecx
  413ceb:	jmp    DWORD PTR [ecx+0x61]
  413cee:	mov    al,0xa9
  413cf0:	pushw  ss
  413cf2:	leave  
  413cf3:	push   edi
  413cf4:	add    ecx,esi
  413cf6:	cmp    al,0x10
  413cf8:	add    bl,ch
  413cfa:	jb     0x413c8a
  413cfc:	mov    ebx,0xf81bdda7
  413d01:	jle    0x413cf6
  413d03:	aaa    
  413d04:	call   0x78cb:0x30edf215
  413d0b:	sbb    edx,DWORD PTR [ecx]
  413d0d:	pop    ds
  413d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d0f:	jmp    0xd73a:0x5c36c11b
  413d16:	mov    ebp,0xf82ece8a
  413d1b:	out    0xe0,eax
  413d1d:	adc    BYTE PTR [ecx-0x6f],bl
  413d20:	loopne 0x413d25
  413d22:	test   DWORD PTR [edx-0x74d39dce],esi
  413d28:	scas   al,BYTE PTR es:[edi]
  413d29:	(bad)  
  413d2a:	loope  0x413d12
  413d2c:	lods   al,BYTE PTR ds:[esi]
  413d2d:	sti    
  413d2e:	sahf   
  413d2f:	mov    bh,0xfb
  413d31:	repnz (bad) 
  413d33:	outs   dx,BYTE PTR ds:[esi]
  413d34:	shr    BYTE PTR [ebp+ebp*8+0x6a608d90],1
  413d3b:	push   0xfffffff2
  413d3d:	mov    cl,0x30
  413d3f:	pop    esp
  413d40:	inc    ebp
  413d41:	test   eax,0xe1e76852
  413d46:	mov    ecx,0xd547be75
  413d4b:	xor    eax,0xd201b98
  413d50:	js     0x413d58
  413d52:	(bad)
  413d57:	cmp    eax,0x69e369f1
  413d5c:	cld    
  413d5d:	cwde   
  413d5e:	out    dx,eax
  413d5f:	pop    edx
  413d60:	push   edx
  413d61:	call   0x169d2ac5
  413d66:	or     DWORD PTR [ebp-0x58],ebx
  413d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d6a:	xor    al,0xfc
  413d6c:	sbb    ebx,0x34156991
  413d72:	in     al,0x9a
  413d74:	dec    ecx
  413d75:	clc    
  413d76:	pop    ecx
  413d77:	pop    esi
  413d78:	clc    
  413d79:	fmul   DWORD PTR fs:[eax+0x36546298]
  413d80:	pushf  
  413d81:	popa   
  413d82:	push   edx
  413d83:	jne    0x413d2d
  413d85:	into   
  413d86:	push   edx
  413d87:	imul   ebx,ecx,0x73
  413d8a:	stos   BYTE PTR es:[edi],al
  413d8b:	jb     0x413d1d
  413d8d:	aas    
  413d8e:	cwde   
  413d8f:	fsubr  st,st(1)
  413d91:	clc    
  413d92:	mul    DWORD PTR [esi+0x16e672ac]
  413d98:	push   edx
  413d99:	outs   dx,BYTE PTR ds:[esi]
  413d9a:	sub    al,0x63
  413d9c:	cmp    eax,0x502c7ac0
  413da1:	in     eax,0x30
  413da3:	add    edi,DWORD PTR [ecx+0x58]
  413da6:	loopne 0x413d84
  413da8:	xchg   BYTE PTR [esi],dl
  413daa:	cmp    al,BYTE PTR [eax]
  413dac:	push   ecx
  413dad:	retf   0xae0c
  413db0:	dec    ebp
  413db1:	(bad)  
  413db3:	jge    0x413e2b
  413db5:	retf   0xf05b
  413db8:	rcl    DWORD PTR [ebx-0x4207a8df],0x6c
  413dbf:	pop    es
  413dc0:	data16 sub al,0x60
  413dc3:	test   DWORD PTR [esi-0x6ce4d5ad],ebx
  413dc9:	mov    al,0xbf
  413dcb:	ins    DWORD PTR es:[edi],dx
  413dcc:	aas    
  413dcd:	xchg   esi,eax
  413dce:	xor    BYTE PTR [esi+0x58bf5fd2],cl
  413dd4:	sahf   
  413dd5:	or     al,BYTE PTR [esi]
  413dd7:	jno    0x413dca
  413dd9:	aaa    
  413dda:	sub    al,0x4
  413ddc:	cmp    al,0x33
  413dde:	jl     0x413e5a
  413de0:	call   0x5ef4ffae
  413de5:	dec    esi
  413de6:	dec    esp
  413de7:	rcl    BYTE PTR [ebp+0x61],0x81
  413deb:	pop    DWORD PTR [edx-0x319fcbc2]
  413df1:	sbb    eax,0xf6fa407
  413df6:	sbb    BYTE PTR [ebx-0x1975cbb1],bh
  413dfc:	fisubr DWORD PTR [esi-0x6]
  413dff:	push   esp
  413e00:	mov    BYTE PTR [esi],bh
  413e02:	sbb    BYTE PTR [edx],ah
  413e04:	fcmove st,st(3)
  413e06:	dec    eax
  413e07:	or     eax,0x683b9c1a
  413e0c:	in     al,dx
  413e0d:	mov    ebx,0x7115bcae
  413e12:	fucomip st,st(2)
  413e14:	xchg   ecx,eax
  413e15:	xor    al,0x62
  413e17:	dec    ebp
  413e18:	into   
  413e19:	and    eax,0xe0f9271f
  413e1e:	inc    ebx
  413e1f:	int3   
  413e20:	jmp    0x95c1:0x5653fadc
  413e27:	fild   DWORD PTR [ecx+0x2e]
  413e2a:	cld    
  413e2b:	mov    ebp,0x582936a4
  413e30:	mov    edi,edx
  413e32:	popf   
  413e33:	inc    ebp
  413e34:	aam    0x57
  413e36:	rcl    DWORD PTR [edi],cl
  413e38:	rcr    BYTE PTR [esi+eiz*1+0x26dae0dc],cl
  413e3f:	xor    al,0x55
  413e41:	or     eax,0xe9579a34
  413e46:	ja     0x413e85
  413e48:	push   es
  413e49:	mov    ds:0xfc9bd61c,al
  413e4e:	data16 and al,0xe4
  413e51:	add    eax,0x51371aab
  413e56:	pop    ebp
  413e57:	jb     0x413e5d
  413e59:	and    edi,ecx
  413e5b:	dec    eax
  413e5c:	adc    eax,0x2c2531da
  413e61:	dec    edx
  413e62:	jno    0x413df9
  413e64:	lods   eax,DWORD PTR ds:[esi]
  413e65:	sahf   
  413e66:	test   BYTE PTR [ebx+0xa],ah
  413e69:	aas    
  413e6a:	(bad)  
  413e6b:	shr    esi,cl
  413e6d:	inc    ebx
  413e6e:	(bad)  
  413e70:	mov    esp,0xfd18db8e
  413e75:	mov    eax,ds:0xe590b6fa
  413e7a:	jns    0x413e75
  413e7c:	mov    edx,0x13513acd
  413e81:	dec    esi
  413e82:	popf   
  413e83:	and    ebp,eax
  413e85:	add    eax,0x15b9164
  413e8a:	test   eax,0xc2931c76
  413e8f:	cmp    bl,BYTE PTR [edi-0x7b]
  413e92:	inc    ebp
  413e93:	rol    DWORD PTR [ecx],1
  413e95:	xchg   esi,eax
  413e96:	leave  
  413e97:	fiadd  DWORD PTR [esi-0x717d4e26]
  413e9d:	sub    DWORD PTR [esi+0x18],ebx
  413ea0:	addr16 icebp 
  413ea2:	xor    al,0xa2
  413ea4:	jl     0x413ec4
  413ea6:	nop
  413ea7:	dec    esp
  413ea8:	mov    cs,WORD PTR [esi+0x7]
  413eab:	jbe    0x413f24
  413ead:	and    edx,ebp
  413eaf:	(bad)  
  413eb0:	fist   DWORD PTR [edi+0xd]
  413eb3:	xor    edi,DWORD PTR [ebp-0x67a609ac]
  413eb9:	jo     0x413e86
  413ebb:	or     eax,0x8b5e524c
  413ec0:	mov    al,ds:0x2c544cee
  413ec5:	mov    ebx,0x2c60d01
  413eca:	test   eax,0x3bb86f70
  413ecf:	xchg   DWORD PTR [ebp+0x517625d3],edx
  413ed5:	std    
  413ed6:	jns    0x413efa
  413ed8:	loopne 0x413f36
  413eda:	test   eax,0x80961a6e
  413edf:	je     0x413e94
  413ee1:	pop    esp
  413ee2:	cmp    ah,BYTE PTR [eax]
  413ee4:	cmp    bh,bh
  413ee6:	sub    eax,0x2c5fff3b
  413eeb:	push   ss
  413eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eed:	mov    ebx,0xfc5641a1
  413ef2:	out    0x7b,al
  413ef4:	cmp    eax,0xcebae974
  413ef9:	and    cl,BYTE PTR [edx-0xafed51]
  413eff:	aas    
  413f00:	or     ebx,esp
  413f02:	add    cl,bh
  413f04:	in     eax,dx
  413f05:	or     al,0x8a
  413f07:	mov    ds:0x2b5ffcab,al
  413f0c:	pop    ebx
  413f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f0e:	sar    BYTE PTR [ebp+0x59f5d07c],0xd3
  413f15:	push   es
  413f16:	and    al,dh
  413f18:	mov    dl,0xd1
  413f1a:	dec    edi
  413f1b:	test   eax,0x4d147a9c
  413f20:	vmovlhps xmm7,xmm5,xmm5
  413f24:	add    edx,edx
  413f26:	sbb    al,0x29
  413f28:	mov    ch,0x5c
  413f2a:	mov    al,0xa8
  413f2c:	cmp    DWORD PTR [esi-0x2b3574b0],esi
  413f32:	neg    DWORD PTR [ebx+edx*2-0x4c4dfd87]
  413f39:	xchg   ebx,eax
  413f3a:	shl    bl,cl
  413f3c:	shl    BYTE PTR [ebx-0x5f722471],1
  413f42:	jo     0x413f6b
  413f44:	imul   BYTE PTR [edi]
  413f46:	push   edi
  413f47:	jp     0x413f26
  413f49:	loopne 0x413f95
  413f4b:	xor    ch,dl
  413f4d:	inc    edx
  413f4e:	sbb    DWORD PTR [edx],esp
  413f50:	lods   al,BYTE PTR ds:[esi]
  413f51:	xor    DWORD PTR [eax-0x43],ebx
  413f54:	into   
  413f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f56:	jnp    0x413fc1
  413f58:	add    BYTE PTR [ebx-0xf],ch
  413f5b:	or     bl,bh
  413f5d:	sbb    al,0xb6
  413f5f:	xchg   eax,ecx
  413f61:	mov    fs,WORD PTR [ecx-0x4a]
  413f64:	jl     0x413faa
  413f66:	cmp    dl,BYTE PTR [ebx+ebp*2]
  413f69:	jmp    0x5170:0x1d055891
  413f70:	sub    DWORD PTR [ebx+ebp*8],0x56
  413f74:	add    edi,edi
  413f76:	iret   
  413f77:	pusha  
  413f78:	shl    edi,0xfd
  413f7b:	xor    edx,eax
  413f7d:	leave  
  413f7e:	inc    esp
  413f7f:	mov    dh,0x53
  413f81:	xor    esi,esp
  413f83:	leave  
  413f84:	pop    ecx
  413f85:	push   edi
  413f86:	xor    eax,0xd557472f
  413f8b:	aad    0xa3
  413f8d:	stos   DWORD PTR es:[edi],eax
  413f8e:	mov    eax,edx
  413f90:	mov    ecx,ecx
  413f92:	js     0x413ff7
  413f94:	xor    dh,BYTE PTR [ecx+ebp*1+0x5f4da83e]
  413f9b:	xchg   esp,eax
  413f9c:	ja     0x413f34
  413f9e:	scas   eax,DWORD PTR es:[edi]
  413f9f:	jp     0x413fae
  413fa1:	shl    BYTE PTR [eax+ebx*8+0x7213f665],0x4
  413fa9:	jo     0x413fd2
  413fab:	fs nop
  413fad:	mov    esi,0x909ed710
  413fb2:	cwde   
  413fb3:	and    al,0x6c
  413fb5:	fistp  QWORD PTR [ecx]
  413fb7:	add    al,0x5b
  413fb9:	mov    dl,0xe5
  413fbb:	(bad)  
  413fbc:	aam    0x30
  413fbe:	or     ch,BYTE PTR [ebx]
  413fc0:	(bad)  
  413fc1:	out    0xd1,al
  413fc3:	and    al,0x3d
  413fc5:	ror    esi,cl
  413fc7:	mov    esp,0x4cffdac2
  413fcc:	fwait
  413fcd:	mov    esp,0xfd364b7f
  413fd2:	jnp    0x41401c
  413fd4:	jno    0x41403f
  413fd6:	dec    esp
  413fd7:	mov    al,ds:0xb744237c
  413fdc:	lods   eax,DWORD PTR ds:[esi]
  413fdd:	sti    
  413fde:	mov    ah,0x9c
  413fe0:	mov    edi,0x269a0f43
  413fe5:	push   cs
  413fe6:	ins    BYTE PTR es:[edi],dx
  413fe7:	push   eax
  413fe8:	gs out dx,eax
  413fea:	and    ch,BYTE PTR [edi+0x5639cdee]
  413ff0:	test   DWORD PTR [ebx+ecx*8],edx
  413ff3:	pop    edx
  413ff4:	mov    eax,ds:0x523c6eb0
  413ff9:	cld    
  413ffa:	mov    WORD PTR [eax+ecx*8+0x62571679],ds
  414001:	or     BYTE PTR [edi+eax*8+0x2a],cl
  414005:	adc    al,0x90
  414007:	xor    DWORD PTR [ebx],edx
  414009:	xchg   ch,ah
  41400b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41400c:	lahf   
  41400d:	mov    esp,0xb4645b41
  414012:	sbb    DWORD PTR [edx+0x7cb046c1],ebx
  414018:	(bad)  
  414019:	xchg   edi,eax
  41401a:	add    al,0xe1
  41401c:	mov    ch,0xf5
  41401e:	mov    ecx,0x27e140e5
  414023:	push   ecx
  414024:	(bad)  
  414025:	cmc    
  414026:	cmp    BYTE PTR [ebp+0x287cac77],bh
  41402c:	jnp    0x41403d
  41402e:	addr16 pop sp
  414031:	cmc    
  414032:	call   0xf6d11a27
  414037:	test   BYTE PTR [ebx-0x1a52646c],0x5b
  41403e:	adc    BYTE PTR [ebx+ebp*2],cl
  414041:	mov    BYTE PTR [esi],dl
  414043:	inc    ebp
  414044:	inc    ebx
  414045:	xchg   edx,eax
  414046:	fsubr  QWORD PTR [ecx+0x48a6c71f]
  41404c:	xlat   BYTE PTR ds:[ebx]
  41404d:	push   0xffffffe5
  41404f:	out    dx,al
  414050:	cmc    
  414051:	out    dx,al
  414052:	sub    DWORD PTR [edi-0x6],esi
  414055:	neg    BYTE PTR [eax]
  414057:	ins    BYTE PTR es:[edi],dx
  414058:	and    eax,0xac50503d
  41405d:	or     DWORD PTR [eax],0x32f4450c
  414063:	pop    edx
  414064:	add    BYTE PTR [eax-0x2685cca],0xda
  41406b:	pushf  
  41406c:	fnstenv [ebp+0x7680fad1]
  414072:	pop    eax
  414073:	setg   BYTE PTR [eax+0x7e]
  414077:	jecxz  0x4140d6
  414079:	pop    eax
  41407a:	mov    bh,0x26
  41407c:	or     DWORD PTR [edx+0x40],edi
  41407f:	adc    DWORD PTR [edi+0xabe441b],edi
  414085:	lahf   
  414086:	inc    ebx
  414087:	cdq    
  414088:	inc    ebp
  414089:	fld    DWORD PTR [ecx-0x2e]
  41408c:	jae    0x4140f0
  41408e:	sub    al,0xf9
  414090:	sub    DWORD PTR [ecx],eax
  414092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414093:	stc    
  414094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414095:	out    0x95,al
  414097:	mov    ebx,0xc273e0f0
  41409c:	and    dh,BYTE PTR [eax-0x52]
  41409f:	repnz fucomi st,st(3)
  4140a2:	jo     0x414062
  4140a4:	jecxz  0x414057
  4140a6:	sub    dh,dl
  4140a8:	and    ebx,DWORD PTR [eax-0x626a4fd4]
  4140ae:	pop    edi
  4140af:	xchg   ebp,eax
  4140b0:	(bad)
  4140b5:	mov    ds:0xe77ffc3d,eax
  4140ba:	fimul  DWORD PTR ds:0x1def52cb
  4140c0:	loopne 0x414049
  4140c2:	pop    esp
  4140c3:	les    edx,FWORD PTR [ebp+0x34c9e6fd]
  4140c9:	cmp    al,0xe
  4140cb:	and    eax,edi
  4140cd:	cmp    dh,BYTE PTR [esi]
  4140cf:	fcomp  QWORD PTR [ebp+ebx*8-0x2312f984]
  4140d6:	dec    edi
  4140d7:	cld    
  4140d8:	les    esp,FWORD PTR [edx]
  4140da:	sbb    eax,0x50f24d26
  4140df:	inc    edi
  4140e0:	mov    ebp,0xe026e5d2
  4140e5:	lea    ebx,[ecx+0x38738585]
  4140eb:	not    BYTE PTR [edi+0x63]
  4140ee:	into   
  4140ef:	mov    bh,0x5d
  4140f1:	inc    ecx
  4140f2:	lahf   
  4140f3:	pushf  
  4140f4:	sub    cl,ah
  4140f6:	sbb    BYTE PTR [ecx+0x1c13b65d],dh
  4140fc:	cmc    
  4140fd:	ins    BYTE PTR es:[edi],dx
  4140fe:	imul   esp,ecx,0xe6028f07
  414104:	jmp    0xbe22ed98
  414109:	and    al,0xb9
  41410b:	lods   al,BYTE PTR ds:[esi]
  41410c:	int    0x9c
  41410e:	sub    DWORD PTR [eax],ecx
  414110:	cmp    BYTE PTR [edx-0x4d81f047],0x99
  414117:	fbld   TBYTE PTR [edi]
  414119:	push   eax
  41411a:	hlt    
  41411b:	mov    cl,ch
  41411d:	cwde   
  41411e:	mov    ah,0x51
  414120:	lods   al,BYTE PTR ds:[esi]
  414121:	in     al,dx
  414122:	jbe    0x41410e
  414124:	xor    al,0xc5
  414126:	jmp    0x7a7ac6fa
  41412b:	mov    dh,0x9c
  41412d:	call   0x71dc:0xfbdb9ad
  414134:	pop    esp
  414135:	add    eax,0xfab2206d
  41413a:	test   DWORD PTR [edx-0x30],eax
  41413d:	sbb    eax,0xa16dc103
  414142:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  414144:	out    dx,eax
  414145:	mov    esi,0xd2100f1c
  41414a:	stc    
  41414b:	aaa    
  41414c:	iret   
  41414d:	rcr    DWORD PTR [ebx-0x69],1
  414150:	xchg   ebx,eax
  414151:	enter  0xda28,0xf7
  414155:	jmp    0x4141c5
  414157:	fs pop ss
  414159:	inc    DWORD PTR [ebx+0x54]
  41415c:	fidiv  DWORD PTR ds:0xfa730f70
  414162:	outs   dx,BYTE PTR ds:[esi]
  414163:	mov    ds:0xca14906d,al
  414168:	sbb    DWORD PTR [ecx],ebx
  41416a:	sbb    eax,0xd59a9539
  41416f:	mov    dh,0x1b
  414171:	mov    al,ds:0x36cfc539
  414176:	fadd   st,st(7)
  414178:	outs   dx,BYTE PTR ds:[esi]
  414179:	sbb    eax,0xa034b5fa
  41417e:	inc    edi
  41417f:	cmp    eax,0x64d7b8d
  414184:	(bad)  
  414186:	test   BYTE PTR [esi-0x53a4d6c8],cl
  41418c:	inc    esi
  41418d:	sub    ch,dh
  41418f:	add    BYTE PTR ds:0xf103c27b,ah
  414195:	pop    ebx
  414196:	xchg   ebx,eax
  414197:	int    0x1a
  414199:	or     DWORD PTR [esi-0x2f],ebp
  41419c:	idiv   BYTE PTR [edi-0x3f]
  41419f:	mov    dh,0xc1
  4141a1:	xchg   esi,eax
  4141a2:	xor    eax,0xba5f89ef
  4141a7:	add    DWORD PTR ds:0x5039d59f,0xb9ab30ba
  4141b1:	cmp    al,0x64
  4141b3:	jmp    0xe8a6:0x9ace26aa
  4141ba:	sub    DWORD PTR [ebp+0x37],eax
  4141bd:	pop    edi
  4141be:	add    al,0x8d
  4141c0:	inc    edx
  4141c1:	sbb    al,0xd3
  4141c3:	jno    0x4141a7
  4141c5:	(bad)  
  4141c6:	adc    al,0xd1
  4141c8:	mov    WORD PTR [esi],gs
  4141ca:	fbstp  TBYTE PTR fs:[ebx+0xc526897]
  4141d1:	pusha  
  4141d2:	sub    al,0x24
  4141d4:	sub    bl,BYTE PTR [edi+ebp*2]
  4141d7:	mov    dh,0x13
  4141d9:	scas   al,BYTE PTR es:[edi]
  4141da:	shr    BYTE PTR [ecx+0x1e87469],cl
  4141e0:	dec    esp
  4141e1:	loopne 0x414256
  4141e3:	sub    ch,ah
  4141e5:	mov    al,0x23
  4141e7:	in     al,dx
  4141e8:	mov    al,ds:0x48da9f9a
  4141ed:	js     0x414208
  4141ef:	pushf  
  4141f0:	or     al,0xe7
  4141f2:	cmc    
  4141f3:	call   0xdf74a3a3
  4141f8:	mov    al,0xe5
  4141fa:	sbb    eax,0xb803b72b
  4141ff:	clc    
  414200:	xchg   esp,eax
  414201:	adc    cl,BYTE PTR fs:[edx-0xa]
  414205:	mov    eax,0x33453df0
  41420a:	push   ebp
  41420b:	shl    BYTE PTR [edx+0x75fed4ca],1
  414211:	xor    eax,0xaf8db809
  414216:	int    0x5c
  414218:	mov    ch,0x88
  41421a:	xchg   eax,esp
  41421c:	xchg   ecx,eax
  41421d:	xor    eax,ebp
  41421f:	hlt    
  414220:	xchg   esp,eax
  414221:	inc    esi
  414222:	or     ch,al
  414224:	sub    ah,bh
  414226:	repz (bad) 
  414228:	fld    st(4)
  41422a:	jne    0x414247
  41422c:	test   eax,0xf8a7871c
  414231:	adc    eax,0x48094c86
  414236:	mov    al,0xb5
  414238:	xor    esp,0x25
  41423b:	pop    eax
  41423c:	in     al,dx
  41423d:	push   ss
  41423e:	inc    esp
  41423f:	fistp  QWORD PTR [ebp+0x6d]
  414242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414243:	mov    ecx,0x7f21159f
  414248:	test   BYTE PTR [ecx+ebp*8-0x6],al
  41424c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41424d:	sub    al,0x1a
  41424f:	pop    ds
  414250:	adc    ebp,DWORD PTR ds:0xd8115f29
  414256:	fdiv   st,st(6)
  414258:	(bad)  
  414259:	addr16 sahf 
  41425b:	das    
  41425c:	loopne 0x41424c
  41425e:	aaa    
  41425f:	stos   BYTE PTR es:[edi],al
  414260:	mov    ds:0xfabbc101,al
  414265:	jle    0x4142c0
  414267:	mov    ds:0x53c7d27e,eax
  41426c:	jnp    0x4142df
  41426e:	mov    edx,0xe118f0f3
  414273:	xchg   ebp,eax
  414274:	shr    DWORD PTR [ebp+ebp*8-0x1b60a00],1
  41427b:	mov    ebx,fs
  41427d:	inc    eax
  41427e:	shl    BYTE PTR [edx-0x7d0a0fa3],0x12
  414285:	(bad)  
  414286:	xor    eax,eax
  414288:	shl    BYTE PTR [edx],1
  41428a:	jnp    0x414263
  41428c:	fist   WORD PTR [eax*1+0x7abe2e39]
  414293:	fcom   QWORD PTR ds:0xbf680c27
  414299:	sub    al,0x5d
  41429b:	icebp  
  41429c:	lahf   
  41429d:	jle    0x41425d
  41429f:	mov    esi,0xb38ee4b5
  4142a4:	mov    ch,0xa8
  4142a6:	test   eax,0x2d77fc0d
  4142ab:	sbb    ebx,DWORD PTR [ecx]
  4142ad:	mov    al,ds:0xd7a03d63
  4142b2:	aaa    
  4142b3:	sub    eax,0x6e54fbdd
  4142b8:	scas   al,BYTE PTR es:[edi]
  4142b9:	sub    al,0xc3
  4142bb:	cmp    al,0x13
  4142bd:	or     al,0x3
  4142bf:	stos   DWORD PTR es:[edi],eax
  4142c0:	sub    al,0x4b
  4142c2:	cwde   
  4142c3:	adc    eax,0xed00a282
  4142c8:	(bad)  
  4142c9:	cmp    dh,BYTE PTR ds:0xd44b49e3
  4142cf:	daa    
  4142d0:	cld    
  4142d1:	leave  
  4142d2:	push   esi
  4142d3:	and    dh,BYTE PTR [ebx-0x49]
  4142d6:	in     al,0x7c
  4142d8:	outs   dx,BYTE PTR ds:[esi]
  4142d9:	jno    0x41430c
  4142db:	outs   dx,DWORD PTR ds:[esi]
  4142dc:	int3   
  4142dd:	icebp  
  4142de:	or     DWORD PTR [ebx],edi
  4142e0:	sti    
  4142e1:	out    0x3c,al
  4142e3:	hlt    
  4142e4:	in     eax,0x14
  4142e6:	imul   ebp,eax,0xc814845d
  4142ec:	es inc edi
  4142ee:	dec    edi
  4142ef:	test   al,0x80
  4142f1:	mov    esi,0xfc80f971
  4142f6:	mov    ch,0xaf
  4142f8:	pop    eax
  4142f9:	inc    edi
  4142fa:	sar    DWORD PTR [eax-0x1d445317],1
  414300:	ret    0x59c2
  414303:	xor    al,0xe9
  414305:	jno    0x41435a
  414307:	aaa    
  414308:	aam    0x15
  41430a:	mov    DWORD PTR [esp+esi*8-0x70],edi
  41430e:	ror    DWORD PTR [edi],0xb8
  414311:	push   0x4dc0ad34
  414316:	fs mov ebp,0xc08c33d2
  41431c:	mov    al,0xf3
  41431e:	sbb    eax,0x406478ba
  414323:	retf   
  414324:	sbb    eax,DWORD PTR [di]
  414327:	cld    
  414328:	repz lahf 
  41432a:	mov    ah,BYTE PTR [edx]
  41432c:	xchg   edi,eax
  41432d:	jg     0x4142fa
  41432f:	adc    BYTE PTR [ecx-0x5b46c335],bl
  414335:	dec    esp
  414336:	popa   
  414337:	mov    edx,0xae040f11
  41433c:	xor    BYTE PTR [esi],ah
  41433e:	inc    esp
  41433f:	lahf   
  414340:	test   eax,0x8b6bd7de
  414345:	js     0x414390
  414347:	jl     0x414312
  414349:	sub    al,0x6e
  41434b:	mov    ebx,ebx
  41434d:	in     al,0x37
  41434f:	xchg   esi,eax
  414350:	inc    edx
  414351:	jnp    0x41438d
  414353:	jecxz  0x4142f3
  414355:	into   
  414356:	jl     0x41434a
  414358:	pusha  
  414359:	mov    al,ds:0x3c277f1b
  41435e:	cmp    BYTE PTR [eax+0x67],dl
  414361:	shr    BYTE PTR [edx-0x11c8c45d],1
  414367:	pop    eax
  414368:	xor    edi,DWORD PTR [eax-0x8]
  41436b:	leave  
  41436c:	inc    esp
  41436d:	clc    
  41436e:	sahf   
  41436f:	fldcw  WORD PTR ds:0xce2939e4
  414375:	jb     0x414359
  414377:	jnp    0x414397
  414379:	in     al,dx
  41437a:	xor    edx,DWORD PTR [ebx]
  41437c:	add    al,0xe
  41437e:	in     al,dx
  41437f:	pop    edi
  414380:	jl     0x41433d
  414382:	mov    cs,WORD PTR [edx]
  414384:	repnz das 
  414386:	mov    ah,0x70
  414388:	sbb    DWORD PTR [ebx-0x16],edi
  41438b:	inc    esi
  41438c:	adc    esp,0xffffff8e
  41438f:	dec    eax
  414390:	(bad)  
  414391:	(bad)  
  414392:	and    DWORD PTR [eax+0x44],ebp
  414395:	push   ss
  414396:	jmp    0x414319
  414398:	ins    BYTE PTR es:[edi],dx
  414399:	sub    eax,0xd5f2a0da
  41439e:	mov    eax,0x784e0958
  4143a3:	mov    ecx,0x16760535
  4143a8:	mov    eax,0x9d6a4
  4143ad:	sub    eax,0x7c497c75
  4143b2:	and    al,0xf5
  4143b4:	ror    BYTE PTR [edx-0x7fd8609],1
  4143ba:	pop    ss
  4143bb:	enter  0x5629,0x87
  4143bf:	inc    ecx
  4143c0:	mov    ebx,0xb037a50d
  4143c5:	scas   al,BYTE PTR es:[edi]
  4143c6:	scas   eax,DWORD PTR es:[edi]
  4143c7:	mov    esi,cs
  4143c9:	pop    ss
  4143ca:	aaa    
  4143cb:	xor    BYTE PTR [esi],0x54
  4143ce:	xchg   ebx,eax
  4143cf:	shl    dh,cl
  4143d1:	xchg   esi,eax
  4143d2:	loopne 0x41440b
  4143d4:	jmp    0x414358
  4143d6:	and    al,BYTE PTR [esi+ebp*8-0x32]
  4143da:	mov    cl,0x13
  4143dc:	cmp    ecx,DWORD PTR [esi+0x21]
  4143df:	inc    esi
  4143e0:	scas   eax,DWORD PTR es:[edi]
  4143e1:	xor    al,0x3d
  4143e3:	sbb    dh,BYTE PTR [ebx-0x79]
  4143e6:	test   eax,0x4e6752f3
  4143eb:	dec    eax
  4143ec:	(bad)  
  4143ed:	cli    
  4143ee:	fwait
  4143ef:	sbb    al,0xb8
  4143f1:	aaa    
  4143f2:	dec    esp
  4143f3:	stos   DWORD PTR es:[edi],eax
  4143f4:	pop    edx
  4143f5:	push   ds
  4143f6:	mov    ch,0xec
  4143f8:	adc    ebx,0x2bb2b08c
  4143fe:	or     al,0xf5
  414400:	iret   
  414401:	xor    al,0xdf
  414403:	lahf   
  414404:	xor    edx,ebp
  414406:	loop   0x4143c6
  414408:	jo     0x414468
  41440a:	pop    edx
  41440b:	pop    ds
  41440c:	xor    ebp,DWORD PTR [ebx]
  41440e:	or     al,0x3d
  414410:	add    al,0x6b
  414412:	mov    dh,0xef
  414414:	sar    DWORD PTR [edi],1
  414416:	and    ch,dl
  414418:	sbb    cl,BYTE PTR [esi-0x71]
  41441b:	fcomp  QWORD PTR ds:0x88f6ca2b
  414421:	sbb    al,0x26
  414423:	ds into 
  414425:	mov    cl,BYTE PTR ds:0xc036828a
  41442b:	push   esp
  41442c:	xchg   sp,ax
  41442e:	or     al,0x73
  414430:	and    eax,0x5032f005
  414435:	pop    ebp
  414436:	xchg   edx,eax
  414437:	sub    eax,0xbefa3b13
  41443c:	dec    esi
  41443d:	sbb    eax,0xb1e54756
  414442:	mov    ds:0xd55eafa0,eax
  414447:	scas   al,BYTE PTR es:[edi]
  414448:	adc    eax,DWORD PTR [ebp-0xb]
  41444b:	std    
  41444c:	loopne 0x4143da
  41444e:	aas    
  41444f:	fdiv   QWORD PTR [esi+0x61]
  414452:	xor    esi,DWORD PTR [edi+edi*1-0xa1a42d5]
  414459:	pop    ebx
  41445a:	icebp  
  41445b:	inc    ebp
  41445c:	mov    esp,0xdbf92133
  414461:	test   DWORD PTR [ebx-0x14e7832b],edx
  414467:	es out 0x40,al
  41446a:	sti    
  41446b:	or     al,0x20
  41446d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41446f:	int3   
  414470:	fwait
  414471:	bound  edi,QWORD PTR [ebx+edi*8]
  414474:	mov    ah,0xe8
  414476:	push   0x32
  414478:	stc    
  414479:	je     0x4144ba
  41447b:	ds add ah,0xe5
  41447f:	pop    edi
  414480:	mov    eax,0x9d2a3540
  414485:	add    eax,DWORD PTR [edx]
  414487:	and    DWORD PTR [ecx-0x51],0xbb9f8a49
  41448e:	add    al,0xbc
  414490:	outs   dx,DWORD PTR ds:[esi]
  414491:	rcl    DWORD PTR [ecx-0x13],0x1e
  414495:	outs   dx,DWORD PTR ds:[esi]
  414496:	jnp    0x414474
  414498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414499:	mov    al,0x74
  41449b:	pop    ds
  41449c:	jo     0x414458
  41449e:	dec    ebp
  41449f:	xchg   ecx,eax
  4144a0:	nop
  4144a1:	rcl    DWORD PTR [eax-0x70],1
  4144a4:	clc    
  4144a5:	stos   BYTE PTR es:[edi],al
  4144a6:	imul   edx,DWORD PTR [esi+eax*2],0x13
  4144aa:	sbb    DWORD PTR [edx-0x44],edi
  4144ad:	fucom  st(7)
  4144af:	dec    esp
  4144b0:	sti    
  4144b1:	jbe    0x414439
  4144b3:	ret    0x9825
  4144b6:	xchg   edx,eax
  4144b7:	jns    0x4144ae
  4144b9:	sahf   
  4144ba:	inc    ebx
  4144bb:	mov    edx,0x82080d05
  4144c0:	loopne 0x414490
  4144c2:	xchg   esp,eax
  4144c3:	das    
  4144c4:	sub    ecx,0xae9d7db2
  4144ca:	mov    ch,0xb3
  4144cc:	fs out 0x91,eax
  4144cf:	pop    esp
  4144d0:	adc    eax,0x349ef697
  4144d5:	xchg   esi,eax
  4144d6:	loopne 0x414493
  4144d8:	mov    al,0xff
  4144da:	push   edi
  4144db:	leave  
  4144dc:	test   DWORD PTR [eax+0x2b577a3a],ebx
  4144e2:	sub    eax,0xa3c160d9
  4144e7:	test   BYTE PTR [esi],bl
  4144e9:	ds dec eax
  4144eb:	pop    ebp
  4144ec:	add    edi,esi
  4144ee:	out    0x96,eax
  4144f0:	adc    ebx,ebx
  4144f2:	jbe    0x4144e2
  4144f4:	mov    ch,0xe
  4144f6:	(bad)  
  4144f7:	xor    eax,0xd8123d78
  4144fc:	es inc edi
  4144fe:	into   
  4144ff:	adc    eax,0x79dc87a9
  414504:	jne    0x414527
  414506:	add    edi,esp
  414508:	mov    ds:0xa53e076c,eax
  41450d:	dec    ecx
  41450e:	pushf  
  41450f:	stos   DWORD PTR es:[edi],eax
  414510:	in     eax,0x7a
  414512:	jno    0x4144ac
  414514:	xchg   edi,eax
  414515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414517:	jp     0x41457b
  414519:	lahf   
  41451a:	xchg   BYTE PTR [edi],ch
  41451c:	data16 lods al,BYTE PTR ds:[esi]
  41451f:	test   DWORD PTR [esi],ebp
  414521:	outs   dx,BYTE PTR ds:[esi]
  414522:	aam    0x74
  414524:	dec    esi
  414525:	push   cs
  414526:	add    DWORD PTR [eax-0x1e],edx
  414529:	lahf   
  41452a:	jmp    0x414585
  41452c:	inc    ebp
  41452d:	cdq    
  41452e:	ret    0x1392
  414531:	inc    edx
  414532:	retf   
  414533:	imul   esp,DWORD PTR [edx+0x3fb626c8],0xffffff88
  41453a:	enter  0x1e16,0x53
  41453e:	(bad)  
  41453f:	cmp    bl,ah
  414541:	daa    
  414542:	int    0x97
  414544:	pusha  
  414545:	mov    bh,0x3e
  414547:	pop    ds
  414548:	push   eax
  414549:	lock xchg edi,eax
  41454b:	out    0xe0,al
  41454d:	adc    eax,0x85957d16
  414552:	pop    ecx
  414553:	rcl    BYTE PTR [eax],cl
  414555:	stos   DWORD PTR es:[edi],eax
  414556:	cmp    cl,dl
  414558:	(bad)  
  414559:	dec    ebp
  41455a:	xor    DWORD PTR [eax],ecx
  41455c:	mov    cs,WORD PTR [ebp+0x56]
  41455f:	les    ebx,FWORD PTR [esi+eax*2]
  414562:	ss mov ecx,0x8673fa1b
  414568:	rcl    dh,0x90
  41456b:	sbb    DWORD PTR [edx],edx
  41456d:	xchg   DWORD PTR [edx-0xb],ebx
  414570:	xor    DWORD PTR [esi-0x68],eax
  414573:	cmp    BYTE PTR [ecx],bh
  414575:	dec    edx
  414576:	fsubr  QWORD PTR [ebp-0x7054e921]
  41457c:	mov    eax,0xba7719c7
  414581:	jmp    0x4145c2
  414583:	rcr    DWORD PTR [edi],1
  414585:	pop    edi
  414586:	or     eax,0x38cc61f5
  41458b:	or     edx,DWORD PTR [edx+ebp*4+0x745135cf]
  414592:	je     0x41459c
  414594:	mov    ebx,0x6e2850a2
  414599:	mov    cl,0x25
  41459b:	xor    eax,0xa600b0c7
  4145a0:	push   cs
  4145a1:	push   eax
  4145a2:	es scas eax,DWORD PTR es:[edi]
  4145a4:	sar    al,0x6c
  4145a7:	sbb    eax,0xc0d86b51
  4145ac:	imul   edx,DWORD PTR [edx-0x60],0xfc87ac80
  4145b3:	mov    dh,0x52
  4145b5:	call   0xe353c7ad
  4145ba:	scas   eax,DWORD PTR es:[edi]
  4145bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145bc:	sbb    BYTE PTR [edx+0x55dce36c],cl
  4145c2:	(bad)  
  4145c4:	ret    
  4145c5:	xor    BYTE PTR [edi-0x5d],dl
  4145c8:	mov    esi,0x451862cd
  4145cd:	xor    esi,edx
  4145cf:	fimul  DWORD PTR [eax+0x1ef28c5d]
  4145d5:	sbb    cl,BYTE PTR [ebp+0x7d]
  4145d8:	jge    0x4145ca
  4145da:	cmp    BYTE PTR [esi+0x30a0f374],bh
  4145e0:	ficomp DWORD PTR [ebp-0x5f]
  4145e3:	mov    ebx,0x30d8a09d
  4145e8:	mov    al,ds:0x610377d3
  4145ed:	xor    al,0xef
  4145ef:	je     0x414626
  4145f1:	(bad)  
  4145f2:	fnsave [edx-0x46]
  4145f5:	loop   0x414666
  4145f7:	pop    ss
  4145f8:	es jne 0x4145a2
  4145fb:	loopne 0x41466b
  4145fd:	adc    al,0x53
  4145ff:	fdiv   QWORD PTR [ebp+0x53dbf98d]
  414605:	scas   al,BYTE PTR es:[edi]
  414606:	fucomp st(2)
  414608:	ds ins DWORD PTR es:[edi],dx
  41460a:	stos   DWORD PTR es:[edi],eax
  41460b:	dec    edx
  41460c:	sbb    BYTE PTR [ecx],0x98
  41460f:	xor    BYTE PTR [ebx+0x61],bh
  414612:	xor    al,dl
  414614:	and    al,0x2b
  414616:	les    edi,FWORD PTR [eax-0x31a6d595]
  41461c:	dec    edi
  41461d:	xchg   ebx,eax
  41461e:	leave  
  41461f:	outs   dx,BYTE PTR ds:[esi]
  414620:	(bad)  [esi+0x21a61726]
  414626:	fistp  DWORD PTR [ebx-0xb5a878f]
  41462c:	popa   
  41462d:	test   DWORD PTR [esi+0x62],ebp
  414630:	aam    0x34
  414632:	nop
  414633:	mov    ds:0x6bd74a42,eax
  414638:	mov    ecx,0xd6283426
  41463d:	mov    ebp,0x3848b5d1
  414642:	pop    ebp
  414643:	fwait
  414644:	arpl   WORD PTR [edi+0x19],si
  414647:	das    
  414648:	push   edi
  414649:	les    ebp,FWORD PTR [eax]
  41464b:	or     ebx,DWORD PTR [esi+0x2db1f31a]
  414651:	sub    al,0x3a
  414653:	repnz test al,0x4a
  414656:	sbb    al,0xe4
  414658:	lds    eax,FWORD PTR [ebp+0x337678a]
  41465e:	fsub   DWORD PTR [edi]
  414660:	jbe    0x4146a9
  414662:	and    al,ah
  414664:	retf   0xeeb1
  414667:	mov    dh,0x59
  414669:	int3   
  41466a:	mov    ds:0x1e72b637,al
  41466f:	addr16 jl 0x4146ed
  414672:	mov    edi,0x27349307
  414677:	xor    al,0xe8
  414679:	mov    edi,0x2c7eb8bf
  41467e:	int    0xab
  414680:	cmp    ecx,ebx
  414682:	fwait
  414683:	sub    al,0x46
  414685:	jnp    0x4146da
  414687:	aas    
  414688:	(bad)  
  414689:	out    dx,al
  41468a:	sbb    al,0xa5
  41468c:	inc    esp
  41468d:	sbb    eax,0x4b2f2d10
  414692:	sbb    ecx,DWORD PTR [ecx+ebx*1+0x359a63eb]
  414699:	ins    DWORD PTR es:[edi],dx
  41469a:	inc    edx
  41469b:	xchg   esi,eax
  41469c:	cdq    
  41469d:	inc    edx
  41469e:	fadd   QWORD PTR [edi-0x80]
  4146a1:	jnp    0x41468c
  4146a3:	ins    DWORD PTR es:[edi],dx
  4146a4:	xchg   edi,eax
  4146a5:	scas   al,BYTE PTR es:[edi]
  4146a6:	sar    ch,cl
  4146a8:	shr    DWORD PTR [edi+ebp*4+0x1a],0x8f
  4146ad:	jle    0x414709
  4146af:	outs   dx,DWORD PTR ds:[esi]
  4146b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146b1:	inc    edi
  4146b2:	cwde   
  4146b3:	sbb    dh,al
  4146b5:	xor    al,0x69
  4146b7:	test   BYTE PTR [esi+0x13],0x2b
  4146bb:	pop    eax
  4146bc:	adc    DWORD PTR [ebx],edi
  4146be:	ret    0x3087
  4146c1:	mov    dh,0x6e
  4146c3:	pop    ebp
  4146c4:	mov    tr1,ecx
  4146c7:	ins    BYTE PTR es:[edi],dx
  4146c8:	mov    bl,0x74
  4146ca:	ins    BYTE PTR es:[edi],dx
  4146cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146cc:	mov    WORD PTR [ecx],cs
  4146ce:	iret   
  4146cf:	leave  
  4146d0:	pop    ebp
  4146d1:	leave  
  4146d2:	lods   al,BYTE PTR ds:[esi]
  4146d3:	mov    ah,0x73
  4146d5:	jecxz  0x41470e
  4146d7:	xor    ah,BYTE PTR [ebx-0x217497af]
  4146dd:	sbb    eax,0xac4821d0
  4146e2:	adc    BYTE PTR [edx],bh
  4146e4:	in     eax,dx
  4146e5:	or     DWORD PTR fs:[eax+ebp*2+0x3d],esi
  4146ea:	push   DWORD PTR [edi-0x74abe439]
  4146f0:	out    0x18,al
  4146f2:	add    eax,0x93f114ad
  4146f7:	adc    eax,0x46d83831
  4146fc:	imul   ecx,DWORD PTR [ecx+0x525a50e6],0x4e107440
  414706:	and    DWORD PTR [ecx+0x3d],ebp
  414709:	test   eax,0x166ba4c6
  41470e:	sbb    DWORD PTR [esi],0x55
  414711:	push   edx
  414712:	sub    BYTE PTR [esi],al
  414714:	inc    esi
  414715:	call   0x3488:0x542ce88a
  41471c:	int3   
  41471d:	dec    esi
  41471e:	cmp    al,0xcb
  414720:	sar    BYTE PTR [edx-0x42],1
  414723:	sti    
  414724:	scas   al,BYTE PTR es:[edi]
  414725:	sbb    DWORD PTR [edi+0x7bea685b],0xffffff87
  41472c:	mov    esp,0xee973e01
  414731:	test   eax,edi
  414733:	cmp    BYTE PTR [eax+0x6],ah
  414736:	add    DWORD PTR [edi+edx*1-0x41],0x489726b6
  41473e:	stos   BYTE PTR es:[edi],al
  41473f:	or     eax,0x6dc89426
  414744:	xchg   esi,eax
  414745:	sti    
  414746:	lods   eax,DWORD PTR ds:[esi]
  414747:	jmp    0x9a49:0x65e3c5da
  41474e:	xchg   edi,eax
  41474f:	xchg   ebx,eax
  414750:	jmp    0xd05:0x3a7a67c9
  414757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414758:	dec    ebx
  414759:	mov    ch,0x38
  41475b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41475c:	inc    esi
  41475d:	xchg   DWORD PTR [eax+0x18d60d25],edx
  414763:	pop    edx
  414764:	jecxz  0x414796
  414766:	outs   dx,BYTE PTR ds:[esi]
  414767:	mov    bh,0x8d
  414769:	into   
  41476a:	push   eax
  41476b:	stos   DWORD PTR es:[edi],eax
  41476c:	adc    dl,0xb7
  41476f:	scas   al,BYTE PTR es:[edi]
  414770:	and    al,0x8d
  414772:	fsub   st(1),st
  414774:	mov    ah,0xc8
  414776:	xor    edi,esp
  414778:	fidiv  WORD PTR [ebp-0x3f]
  41477b:	ror    DWORD PTR [edi-0xc],0x33
  41477f:	pop    esp
  414780:	sub    eax,0xa46fb76e
  414785:	outs   dx,BYTE PTR ds:[esi]
  414786:	mov    bh,0x66
  414788:	sub    al,0x8a
  41478a:	cmp    BYTE PTR [ebx+esi*1+0x27],bh
  41478e:	push   cs
  41478f:	and    eax,0x7b6a2545
  414794:	leave  
  414795:	fstp   QWORD PTR [ecx+ebx*4]
  414798:	xchg   ecx,eax
  414799:	adc    BYTE PTR [ecx+esi*8],cl
  41479c:	mov    esp,ebx
  41479e:	xor    al,0x90
  4147a0:	mov    esi,0x197f210f
  4147a5:	dec    esp
  4147a6:	cdq    
  4147a7:	in     al,dx
  4147a8:	dec    edx
  4147a9:	pop    eax
  4147aa:	sub    DWORD PTR [ebx+eax*1+0x18],edi
  4147ae:	pop    edi
  4147af:	in     al,dx
  4147b0:	jmp    0x2ce1:0xec140256
  4147b7:	xchg   DWORD PTR [ebx-0x58],edx
  4147ba:	cdq    
  4147bb:	call   0x97959ee3
  4147c0:	cmp    al,0x79
  4147c2:	stc    
  4147c3:	mov    cl,0x4e
  4147c5:	or     DWORD PTR [ebx-0x3629125c],esi
  4147cb:	sub    DWORD PTR gs:[ecx-0x740cbd90],0xffffff9e
  4147d3:	sahf   
  4147d4:	add    ebp,ecx
  4147d6:	xchg   edx,eax
  4147d7:	add    bl,BYTE PTR [eax+0x9731e]
  4147dd:	add    DWORD PTR [ecx],esi
  4147df:	push   esp
  4147e0:	add    BYTE PTR [esi+0x17],dl
  4147e3:	or     esi,DWORD PTR [eax+0x16967f38]
  4147e9:	(bad)  
  4147ea:	out    0x2a,al
  4147ec:	(bad)  
  4147ed:	mov    edx,0x55872f0d
  4147f2:	sub    esp,esp
  4147f4:	int    0xf5
  4147f6:	or     BYTE PTR [ecx],ch
  4147f8:	(bad)  
  4147fa:	inc    ecx
  4147fb:	push   eax
  4147fc:	jl     0x414874
  4147fe:	jns    0x4147a7
  414800:	lods   eax,DWORD PTR ds:[esi]
  414801:	(bad)  
  414802:	(bad)  
  414803:	mov    ah,0x1c
  414805:	add    DWORD PTR [esi],esi
  414807:	ss in  eax,0xaa
  41480a:	xchg   esi,eax
  41480b:	xor    al,0xba
  41480d:	pop    ds
  41480e:	jle    0x4147b1
  414810:	xor    BYTE PTR [ecx],cl
  414812:	in     eax,0x1b
  414814:	outs   dx,BYTE PTR ds:[esi]
  414815:	(bad)  
  414816:	jmp    0xed9e:0xc68c231d
  41481d:	call   0x97e0336
  414822:	repnz das 
  414824:	ror    DWORD PTR [esi+0x45],cl
  414827:	enter  0x1b2f,0xd1
  41482b:	call   0x58c0:0x316c4c75
  414832:	jge    0x4148ac
  414834:	imul   ebp,ecx,0x594f081c
  41483a:	dec    ebp
  41483b:	mov    dl,0x50
  41483d:	jmp    ebx
  41483f:	fild   QWORD PTR [eax+0x3a]
  414842:	pop    esi
  414843:	push   ecx
  414844:	sti    
  414845:	(bad)  
  414846:	aad    0xdc
  414848:	nop
  414849:	xchg   edi,eax
  41484a:	(bad)  
  41484b:	dec    esp
  41484c:	loope  0x4148a7
  41484e:	xor    ah,dh
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	iret   
  414852:	push   edi
  414853:	int    0x76
  414855:	fcomp  QWORD PTR [esi+0xa]
  414858:	pop    ebp
  414859:	dec    esp
  41485a:	xchg   ebp,eax
  41485b:	sbb    eax,0x1b598357
  414860:	sbb    DWORD PTR [edi+ecx*1-0x464208cc],ecx
  414867:	lods   al,BYTE PTR ds:[esi]
  414868:	aaa    
  414869:	inc    edi
  41486a:	push   0xd14be4f3
  41486f:	sub    al,al
  414871:	dec    edx
  414872:	rcr    dh,1
  414874:	xchg   esp,eax
  414875:	or     eax,0x993ac04e
  41487a:	std    
  41487b:	out    0x2b,eax
  41487d:	nop
  41487e:	add    al,0x6a
  414881:	inc    ecx
  414882:	nop
  414883:	aam    0x57
  414885:	inc    eax
  414886:	sub    eax,DWORD PTR [esi-0xa0e9d67]
  41488c:	jl     0x41483a
  41488e:	sahf   
  41488f:	ss enter 0x4bf4,0x72
  414894:	test   eax,0x921d9226
  414899:	adc    BYTE PTR [ebx],dl
  41489b:	mov    edi,?
  41489d:	jo     0x414857
  41489f:	dec    esp
  4148a0:	rcr    dh,cl
  4148a2:	jne    0x414887
  4148a4:	fcomip st,st(3)
  4148a6:	mov    bh,0x64
  4148a8:	shl    DWORD PTR [ecx-0x1a918dee],cl
  4148ae:	test   DWORD PTR [edx-0x21],0xd14cbf40
  4148b5:	pop    eax
  4148b6:	sbb    al,0xfe
  4148b8:	mov    ds:0x8a7aee47,al
  4148bd:	loop   0x414859
  4148bf:	mov    esp,0x64b66c7b
  4148c4:	out    dx,eax
  4148c5:	dec    edx
  4148c6:	ss ret 
  4148c8:	and    al,0xe
  4148ca:	loopne 0x4148a5
  4148cc:	xor    ebp,DWORD PTR [edx-0x80]
  4148cf:	call   0x15467493
  4148d4:	xor    dh,BYTE PTR [edx+ecx*2-0x28]
  4148d8:	xor    dl,BYTE PTR [eax+0x13043276]
  4148de:	sub    al,0x64
  4148e0:	mov    eax,0xfb305bfc
  4148e5:	sti    
  4148e6:	and    esi,ecx
  4148e8:	test   BYTE PTR [ebx],cl
  4148ea:	mov    bh,0x27
  4148ec:	pop    ss
  4148ed:	cs test eax,0xc30fee7b
  4148f3:	in     al,dx
  4148f4:	push   esp
  4148f5:	aad    0x94
  4148f7:	mov    gs,WORD PTR [edi+0x2c]
  4148fa:	pop    edi
  4148fb:	adc    al,0x61
  4148fd:	mov    eax,0xd94f857
  414902:	dec    ecx
  414903:	push   esp
  414904:	push   0xffffffcd
  414906:	dec    ebp
  414907:	cmp    BYTE PTR [ebx-0x70],cl
  41490a:	xchg   esi,eax
  41490b:	jmp    0xb38eb8ec
  414910:	nop
  414911:	push   es
  414912:	sahf   
  414913:	adc    DWORD PTR [eax+edx*8-0x1bf9d0],ebx
  41491a:	push   edx
  41491b:	pusha  
  41491c:	in     al,0x90
  41491e:	scas   eax,DWORD PTR es:[edi]
  41491f:	or     bl,bl
  414921:	call   0x84e9:0xdd034eaf
  414928:	js     0x41492e
  41492a:	and    eax,ecx
  41492c:	jmp    0xe15ccd9e
  414931:	pop    ds
  414932:	imul   edx,DWORD PTR [esi-0x51],0xffffffd4
  414936:	in     al,0xdb
  414938:	mov    bl,0x28
  41493a:	xlat   BYTE PTR ds:[ebx]
  41493b:	ss dec esi
  41493d:	and    al,0x99
  41493f:	and    al,0xa7
  414941:	dec    ecx
  414942:	pop    ecx
  414943:	pop    esp
  414944:	jo     0x41491e
  414946:	and    edx,edi
  414948:	mov    es,WORD PTR [eax+0x48]
  41494b:	and    ch,BYTE PTR [ecx-0x49]
  41494e:	cs mov ch,0x9
  414951:	pop    eax
  414952:	cmp    al,0xb2
  414954:	xchg   esi,eax
  414955:	push   edx
  414956:	and    bh,BYTE PTR [edi-0x10]
  414959:	mov    ss,WORD PTR [ecx]
  41495b:	xchg   ebp,eax
  41495c:	scas   eax,DWORD PTR es:[edi]
  41495d:	jp     0x41496c
  41495f:	scas   eax,DWORD PTR es:[edi]
  414960:	fmulp  st(5),st
  414962:	mov    bh,0xe1
  414964:	pop    ebp
  414965:	cmp    edx,DWORD PTR [edx+esi*1-0x37]
  414969:	cmp    al,0x84
  41496b:	fcomp  QWORD PTR [ebp-0xc2fecdb]
  414971:	or     al,0x98
  414973:	or     DWORD PTR [eax+ebx*1],0x9829b60a
  41497a:	das    
  41497b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41497c:	addr16 js 0x414977
  41497f:	add    al,BYTE PTR [ebp-0x5f]
  414982:	in     al,0xb0
  414984:	push   eax
  414985:	mov    ?,WORD PTR [ecx+0x12]
  414988:	jl     0x4149b0
  41498a:	jecxz  0x41494c
  41498c:	jmp    0x41499d
  41498e:	outs   dx,DWORD PTR ds:[esi]
  41498f:	dec    ecx
  414990:	hlt    
  414991:	scas   al,BYTE PTR es:[edi]
  414992:	add    eax,0xb90163b6
  414997:	out    dx,al
  414998:	xchg   ebp,eax
  414999:	aaa    
  41499a:	retf   
  41499b:	sbb    al,0xc2
  41499d:	shr    BYTE PTR [eax-0x623f8497],cl
  4149a3:	mov    edi,0x29cb66fe
  4149a8:	fst    QWORD PTR [ecx+0xd8ed53e]
  4149ae:	jae    0x414a01
  4149b0:	ret    
  4149b1:	cmc    
  4149b2:	lods   al,BYTE PTR ds:[esi]
  4149b3:	jmp    0x6639:0x68f7acce
  4149ba:	fild   WORD PTR ds:0x63cfd840
  4149c0:	inc    esi
  4149c1:	adc    BYTE PTR [ebx-0x1a282834],cl
  4149c7:	add    DWORD PTR [ebx+eiz*1],ecx
  4149ca:	add    al,0x55
  4149cc:	adc    al,0x20
  4149ce:	push   0x46
  4149d0:	pop    edx
  4149d1:	mov    ah,0xdd
  4149d3:	in     al,dx
  4149d4:	cmp    cl,BYTE PTR [ebp-0x74]
  4149d7:	in     al,0x65
  4149d9:	pop    eax
  4149da:	pop    ebx
  4149db:	fiadd  DWORD PTR [edx+esi*1]
  4149de:	sub    eax,0x6eb2081e
  4149e3:	repz int3 
  4149e5:	mov    cl,0x79
  4149e7:	mov    ch,0x8
  4149e9:	fidiv  DWORD PTR [eax-0x218b64fb]
  4149ef:	pop    edi
  4149f0:	inc    esi
  4149f1:	adc    BYTE PTR [ebp+0x12bdea62],cl
  4149f7:	(bad)  
  4149f8:	adc    cl,dl
  4149fa:	fnstcw WORD PTR ds:0x3082d66e
  414a00:	xchg   esp,eax
  414a01:	cmp    edx,esi
  414a03:	push   ebp
  414a04:	mov    ecx,0x6ef4ddf7
  414a09:	pop    edx
  414a0a:	sbb    al,0x3c
  414a0c:	aam    0x7e
  414a0e:	mov    dh,0xd2
  414a10:	test   BYTE PTR ds:0x37fb4167,cl
  414a16:	ins    BYTE PTR es:[edi],dx
  414a17:	xchg   edx,eax
  414a18:	cli    
  414a19:	int    0x8a
  414a1b:	cwde   
  414a1c:	and    ebp,DWORD PTR [eax]
  414a1e:	mov    edx,0x5832b909
  414a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a24:	sar    BYTE PTR [edx],1
  414a26:	add    al,BYTE PTR [ebp+0x2344ad80]
  414a2c:	test   BYTE PTR [edx-0x76],ch
  414a2f:	test   BYTE PTR [ebx+0x3b],0x46
  414a33:	repz adc BYTE PTR [ecx+0x52],cl
  414a37:	or     eax,0xb002743d
  414a3c:	cmp    al,0xaf
  414a3e:	inc    ebp
  414a3f:	mov    bh,0x91
  414a41:	jl     0x4149f5
  414a43:	out    0xe8,al
  414a45:	shl    DWORD PTR [ecx+ebx*8+0x5a],0x6b
  414a4a:	div    DWORD PTR [ebx+0x20]
  414a4d:	call   0xd9604781
  414a52:	or     DWORD PTR [ebp-0x20],ebp
  414a55:	jno    0x414a50
  414a57:	das    
  414a58:	mov    edx,0x7dcfcc7a
  414a5d:	test   DWORD PTR [esi-0x11],edi
  414a60:	call   0x4141:0xa11af776
  414a67:	daa    
  414a68:	jne    0x414a38
  414a6a:	mov    ebx,0xff7bbc2b
  414a6f:	cli    
  414a70:	dec    esp
  414a71:	dec    ecx
  414a72:	xor    al,0xf3
  414a74:	xchg   DWORD PTR [edi],ecx
  414a76:	pop    ebx
  414a77:	mov    bh,0x98
  414a79:	inc    ebx
  414a7a:	push   0xffffffc8
  414a7c:	cmp    eax,0x84aabc27
  414a81:	and    al,0xfc
  414a83:	xchg   ecx,eax
  414a84:	jle    0x414a84
  414a86:	ja     0x414a8c
  414a88:	enter  0x75e2,0xce
  414a8c:	xchg   esp,eax
  414a8d:	(bad)  
  414a8f:	xchg   BYTE PTR [esi-0x549ab2aa],bh
  414a95:	sbb    al,0x9b
  414a97:	mov    al,0xce
  414a99:	(bad)  
  414a9a:	dec    edi
  414a9b:	adc    esi,DWORD PTR [edx+0x76]
  414a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a9f:	jl     0x414b11
  414aa1:	and    ch,ah
  414aa3:	out    dx,eax
  414aa4:	lods   eax,DWORD PTR ds:[esi]
  414aa5:	xchg   ebp,eax
  414aa6:	mov    esp,0x8695f12d
  414aab:	inc    ecx
  414aac:	jmp    0x9a15:0xa3d70f45
  414ab3:	js     0x414a55
  414ab5:	dec    ecx
  414ab6:	dec    ecx
  414ab7:	out    0x1b,eax
  414ab9:	add    BYTE PTR [edi-0x1a],dl
  414abc:	mov    esp,ebp
  414abe:	jecxz  0x414a68
  414ac0:	pop    ss
  414ac1:	dec    esp
  414ac2:	cld    
  414ac3:	or     ecx,edx
  414ac5:	dec    eax
  414ac6:	pop    ds
  414ac7:	outs   dx,BYTE PTR ds:[esi]
  414ac8:	mov    ebp,0x95b40a0d
  414acd:	shr    DWORD PTR [edx+ebx*2-0x7f],0xb0
  414ad2:	(bad)  
  414ad3:	mov    ss,WORD PTR [edx+0x30248403]
  414ad9:	je     0x414ac7
  414adb:	jecxz  0x414a8a
  414add:	in     eax,dx
  414ade:	sbb    al,0x78
  414ae0:	push   ss
  414ae1:	into   
  414ae2:	mov    ebp,0x49509a5
  414ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ae8:	pop    ds
  414ae9:	push   ebp
  414aea:	(bad)  
  414aeb:	pop    ss
  414aec:	add    DWORD PTR [eax+0x24],edx
  414aef:	sar    DWORD PTR [ecx+0x3d],1
  414af2:	mov    eax,ds:0x43d7ffaa
  414af7:	pop    esi
  414af8:	and    ch,cl
  414afa:	or     DWORD PTR [esi+0x28d623a2],ebx
  414b00:	arpl   WORD PTR [ebp*2+0x496ef864],dx
  414b07:	(bad)  
  414b08:	sub    esp,DWORD PTR ds:0x8ad1edd1
  414b0e:	push   edx
  414b0f:	sbb    BYTE PTR [edx+0x38],dl
  414b12:	imul   BYTE PTR [edx+0x5d7470ca]
  414b18:	xchg   esi,eax
  414b19:	sub    dh,bh
  414b1b:	les    ebp,FWORD PTR [eax+0x4c]
  414b1e:	test   ebx,esi
  414b20:	in     eax,dx
  414b21:	push   ebx
  414b22:	xchg   edi,eax
  414b23:	dec    esi
  414b24:	xchg   DWORD PTR [esi+0x2d3bd32b],ebx
  414b2a:	xchg   esi,eax
  414b2b:	mov    DWORD PTR [ebx],edi
  414b2d:	sbb    al,0x93
  414b2f:	arpl   WORD PTR [edi-0x24b88bda],di
  414b35:	enter  0xbca1,0x9e
  414b39:	in     eax,0x2a
  414b3b:	mov    ebp,0xf46a5daa
  414b40:	mov    esp,0x3124a5fa
  414b45:	add    ebp,eax
  414b47:	push   edi
  414b48:	scas   al,BYTE PTR es:[edi]
  414b49:	aas    
  414b4a:	fmul   st(1),st
  414b4c:	mov    ch,0x1e
  414b4e:	test   ebx,edi
  414b50:	inc    esi
  414b51:	or     DWORD PTR [edx-0x7179cd3a],edx
  414b57:	imul   DWORD PTR [ecx-0x53]
  414b5a:	and    al,0x8b
  414b5c:	cmp    BYTE PTR [eax+0x70348e3a],al
  414b62:	jp     0x414b5d
  414b64:	leave  
  414b65:	inc    ebx
  414b66:	add    BYTE PTR ds:0x652f285e,0xcd
  414b6d:	or     eax,0x408458e1
  414b72:	test   BYTE PTR [edi-0x50a228fa],cl
  414b78:	add    ebx,DWORD PTR [ecx]
  414b7a:	popf   
  414b7b:	neg    DWORD PTR [ebx+eiz*8]
  414b7e:	fisttp WORD PTR [edi+ebx*8]
  414b81:	outs   dx,DWORD PTR ds:[esi]
  414b82:	es cli 
  414b84:	dec    ecx
  414b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b86:	aad    0x26
  414b88:	mov    al,ds:0xab1502e4
  414b8d:	(bad)  
  414b8e:	into   
  414b8f:	aad    0x84
  414b91:	mov    edi,0xf017b060
  414b96:	adc    esp,ebp
  414b98:	jae    0x414b21
  414b9a:	cld    
  414b9b:	add    dh,BYTE PTR [esi+0x40]
  414b9e:	or     esp,ebp
  414ba0:	lods   al,BYTE PTR ds:[esi]
  414ba1:	dec    edx
  414ba2:	(bad)  
  414ba3:	fstp   TBYTE PTR [eax-0x28]
  414ba6:	rol    DWORD PTR [edi-0x7b],0x6
  414baa:	sti    
  414bab:	enter  0x12e9,0x5a
  414baf:	xor    eax,0xc03425c1
  414bb4:	retf   0xd0d1
  414bb7:	(bad)  
  414bb8:	pop    esp
  414bb9:	jne    0x414b78
  414bbb:	or     bl,bh
  414bbd:	ret    0xcda7
  414bc0:	pop    ecx
  414bc1:	pop    ecx
  414bc2:	xor    bl,ah
  414bc4:	test   DWORD PTR [esi+esi*1],edx
  414bc7:	mov    bh,0x37
  414bc9:	into   
  414bca:	and    DWORD PTR [eax+ebx*2+0x1d557b8f],esi
  414bd1:	in     eax,0xb5
  414bd3:	mov    al,ah
  414bd5:	dec    edi
  414bd6:	jns    0x414c37
  414bd8:	imul   ecx,esi,0xa6bc6fe4
  414bde:	jmp    0xe610:0x934f8ace
  414be5:	cli    
  414be6:	(bad)  
  414be7:	lods   al,BYTE PTR ds:[esi]
  414be8:	pop    ebx
  414be9:	inc    esi
  414bea:	stos   BYTE PTR es:[edi],al
  414beb:	imul   edx,DWORD PTR es:[edi-0x27],0xffffffc2
  414bf0:	push   ebp
  414bf1:	scas   eax,DWORD PTR es:[edi]
  414bf2:	mov    edx,DWORD PTR [ebx-0x13]
  414bf5:	dec    ebx
  414bf6:	aaa    
  414bf7:	je     0x414baa
  414bf9:	call   0x5ac0da35
  414bfe:	clc    
  414bff:	mov    al,0x41
  414c01:	call   0xe1f8a717
  414c06:	daa    
  414c07:	(bad)  
  414c09:	adc    DWORD PTR [edx],edx
  414c0b:	sbb    ecx,DWORD PTR [edi]
  414c0d:	mov    dl,0x3b
  414c0f:	xor    ah,0x98
  414c12:	in     eax,0x2c
  414c14:	retf   0xba6e
  414c17:	sbb    DWORD PTR [edx],ebp
  414c19:	mov    ebx,0x2899a5e6
  414c1e:	stos   DWORD PTR es:[edi],eax
  414c1f:	xor    esi,ecx
  414c21:	and    ebp,DWORD PTR [eax-0x1d]
  414c24:	scas   al,BYTE PTR es:[edi]
  414c25:	jecxz  0x414c6c
  414c27:	dec    esi
  414c28:	and    DWORD PTR [eax-0x3a77ab62],ebx
  414c2e:	jnp    0x414c9a
  414c30:	and    bl,cl
  414c32:	pop    eax
  414c33:	and    dh,bh
  414c35:	mov    edi,0x13c0e1fd
  414c3a:	pslld  mm2,mm0
  414c3d:	adc    DWORD PTR [ecx],edx
  414c3f:	retf   0x8846
  414c42:	scas   eax,DWORD PTR es:[edi]
  414c43:	loope  0x414c76
  414c45:	pop    edx
  414c46:	and    BYTE PTR [ebp+edx*1+0x26],0x18
  414c4b:	jmp    0xf4a5da19
  414c50:	mov    al,ds:0x57e6c60d
  414c55:	stos   BYTE PTR es:[edi],al
  414c56:	push   0xd5da5ac1
  414c5b:	mov    ah,0xba
  414c5d:	adc    ecx,edx
  414c5f:	std    
  414c60:	inc    eax
  414c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c62:	mov    BYTE PTR [ebx-0x7f],dl
  414c65:	jo     0x414bed
  414c67:	mov    DWORD PTR [edx-0x1af7dfb5],esi
  414c6d:	outs   dx,DWORD PTR ds:[esi]
  414c6e:	add    esp,ebp
  414c70:	(bad)  
  414c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c72:	scas   al,BYTE PTR es:[edi]
  414c73:	and    al,0xb0
  414c75:	push   cs
  414c76:	mov    ah,BYTE PTR [esi+0x1c]
  414c79:	mov    ebp,edi
  414c7b:	cmp    bl,BYTE PTR [ecx]
  414c7d:	fdivr  QWORD PTR ds:0x45ed790
  414c83:	shr    DWORD PTR [ebp-0x4da1f192],cl
  414c89:	inc    ebx
  414c8a:	ret    0x8a65
  414c8d:	lock add BYTE PTR [esi-0x36],al
  414c91:	push   eax
  414c92:	xor    al,0xd2
  414c94:	cs stos DWORD PTR es:[edi],eax
  414c96:	dec    ebp
  414c97:	and    ebp,DWORD PTR [edi]
  414c99:	imul   ebx,DWORD PTR [edx-0x3],0x3dcb6699
  414ca0:	cdq    
  414ca1:	data16 in al,dx
  414ca3:	scas   eax,DWORD PTR es:[edi]
  414ca4:	outs   dx,BYTE PTR ds:[esi]
  414ca5:	adc    al,0x14
  414ca7:	push   cs
  414ca8:	mov    dh,BYTE PTR [ebp+0xfdfe683]
  414cae:	fistp  DWORD PTR [esi-0x671106ed]
  414cb4:	inc    edi
  414cb5:	addr16 lahf 
  414cb7:	pause  
  414cb9:	mov    esp,DWORD PTR [eax-0x1ba2705]
  414cbf:	loopne 0x414d3b
  414cc1:	not    eax
  414cc3:	scas   al,BYTE PTR es:[edi]
  414cc4:	popf   
  414cc5:	fst    st(2)
  414cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc8:	mov    bh,0x7b
  414cca:	pop    ds
  414ccb:	(bad)  
  414ccc:	shl    BYTE PTR [esi+ebp*8-0x5c1ac331],cl
  414cd3:	mov    eax,0x41df5154
  414cd8:	loopne 0x414d0d
  414cda:	sbb    dh,BYTE PTR [ebx]
  414cdc:	and    bl,BYTE PTR [ecx+esi*1+0x16]
  414ce0:	dec    ebp
  414ce1:	dec    ebp
  414ce2:	jns    0x414d14
  414ce4:	ficomp WORD PTR [esi+ebx*8-0x4a164ad7]
  414ceb:	shl    BYTE PTR [ecx],cl
  414ced:	xchg   ebx,eax
  414cee:	jl     0x414d1f
  414cf0:	xchg   edi,eax
  414cf1:	pop    edi
  414cf2:	and    BYTE PTR [ebx],dl
  414cf4:	jne    0x414c81
  414cf6:	(bad)  
  414cf7:	popf   
  414cf8:	test   ebp,eax
  414cfa:	jmp    0x43c7:0x34433aa
  414d01:	rep lods al,BYTE PTR ds:[esi]
  414d03:	push   es
  414d04:	jnp    0x414cc8
  414d06:	cs jbe 0x414cc2
  414d09:	xor    BYTE PTR ds:0x331d8156,ch
  414d0f:	scas   eax,DWORD PTR es:[edi]
  414d10:	pop    es
  414d11:	and    al,0x68
  414d13:	dec    esi
  414d14:	outs   dx,BYTE PTR ds:[esi]
  414d15:	add    eax,0xf5ecf5f1
  414d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d1b:	pop    ebx
  414d1c:	into   
  414d1d:	sbb    DWORD PTR [ebx+ecx*8+0x47573b29],eax
  414d24:	and    eax,0xffd79a73
  414d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d2a:	in     eax,0x8e
  414d2c:	cs (bad) 
  414d2e:	int3   
  414d2f:	sub    al,0x37
  414d31:	fmul   DWORD PTR [ebx+edi*1+0x3bd8cab2]
  414d38:	and    DWORD PTR [edi-0x372831d3],0x55
  414d3f:	(bad)  
  414d40:	adc    DWORD PTR ds:0x62ce4864,esp
  414d46:	and    DWORD PTR [edx+0x58],eax
  414d49:	cmp    BYTE PTR [ecx+0x3d],al
  414d4c:	or     edx,DWORD PTR [ebx]
  414d4e:	es hlt 
  414d50:	sbb    ch,BYTE PTR [edi]
  414d52:	xor    esp,edx
  414d54:	call   0x562c:0xd462540
  414d5b:	jp     0x414d75
  414d5d:	aad    0xc4
  414d5f:	arpl   dx,bp
  414d61:	push   ecx
  414d62:	call   0xe949:0xb09dbfb8
  414d69:	lods   al,BYTE PTR ds:[esi]
  414d6a:	call   0x60c909cd
  414d6f:	xchg   DWORD PTR [ecx+ebp*4+0x3c0ce99c],ebx
  414d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d77:	fprem1 
  414d79:	pusha  
  414d7a:	out    0xda,eax
  414d7c:	inc    esp
  414d7d:	stos   DWORD PTR es:[edi],eax
  414d7e:	inc    ebx
  414d7f:	sbb    eax,DWORD PTR [ecx+esi*4+0x65fb62fd]
  414d86:	aam    0x6b
  414d88:	imul   DWORD PTR [edi]
  414d8a:	mov    ebp,0xbd0ce6a
  414d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d90:	xor    DWORD PTR [edi],ecx
  414d92:	xchg   ecx,eax
  414d93:	pop    edi
  414d94:	xchg   ebx,eax
  414d95:	in     al,0x3
  414d97:	jnp    0x414df5
  414d99:	sar    DWORD PTR [esi-0x799c3c15],cl
  414d9f:	or     eax,0x58fbe370
  414da4:	mov    al,ds:0xc29addce
  414da9:	push   esp
  414daa:	mov    esi,0xbee01c51
  414daf:	dec    eax
  414db0:	xor    ah,bl
  414db2:	in     eax,0xd1
  414db4:	repz fs dec esp
  414db7:	jge    0x414d67
  414db9:	pusha  
  414dba:	sub    dl,BYTE PTR es:[edx+0x5e70ff24]
  414dc1:	or     al,0x77
  414dc3:	ror    BYTE PTR [ebp-0xfa6c9fe],1
  414dc9:	dec    eax
  414dca:	sbb    al,0x98
  414dcc:	test   eax,0x39014abe
  414dd1:	xor    BYTE PTR [ecx+0x41],dh
  414dd4:	xor    ecx,DWORD PTR [ebp+0x7967f104]
  414dda:	pop    eax
  414ddb:	pop    ss
  414ddc:	adc    cl,dh
  414dde:	sub    DWORD PTR [edx],eax
  414de0:	in     eax,0x7d
  414de2:	cmp    eax,0xb717e8d9
  414de7:	pop    eax
  414de8:	or     eax,0x5fb27032
  414ded:	adc    BYTE PTR es:[eax-0x77eb6c4a],ah
  414df4:	inc    esi
  414df5:	pop    ecx
  414df6:	or     DWORD PTR cs:[edx+0x42],edx
  414dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dfb:	loopne 0x414e54
  414dfd:	mov    ah,0xa5
  414dff:	pop    ecx
  414e00:	mov    bh,0x1c
  414e02:	test   eax,0x87af7503
  414e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e08:	mov    esp,0x86374893
  414e0d:	sti    
  414e0e:	mov    ds:0x77fee2f2,al
  414e13:	pop    ecx
  414e14:	xor    al,0xda
  414e16:	scas   eax,DWORD PTR es:[edi]
  414e17:	out    dx,al
  414e18:	(bad)  
  414e19:	cs int3 
  414e1b:	pop    edx
  414e1d:	dec    ecx
  414e1e:	mov    eax,ds:0xe52ebbe2
  414e23:	sub    edx,DWORD PTR [esi-0x3]
  414e26:	icebp  
  414e27:	and    bl,BYTE PTR [edi-0x704f4065]
  414e2d:	sbb    edx,DWORD PTR [esi+eiz*4+0x1f]
  414e31:	int    0xf7
  414e33:	adc    eax,0x4aa55117
  414e38:	mov    al,BYTE PTR [edx-0x5a]
  414e3b:	imul   edx,DWORD PTR [edi+edi*2+0x3e],0xffffffd2
  414e40:	xchg   esp,eax
  414e41:	pop    ecx
  414e42:	data16 cmp al,0xb0
  414e45:	xchg   DWORD PTR [edi+0x3a4055f7],ecx
  414e4b:	or     al,0xbd
  414e4d:	les    ebp,FWORD PTR [ecx+0x2c2fc1e0]
  414e53:	mov    ebx,0xc1a01513
  414e58:	add    al,0xd5
  414e5a:	jb     0x414e4d
  414e5c:	rol    BYTE PTR [edi],0x9a
  414e5f:	cmp    DWORD PTR [ecx-0x14],edx
  414e62:	mov    edi,ebx
  414e64:	sbb    bl,bl
  414e66:	push   0x9ade9e10
  414e6b:	gs mov ebp,0xde83d035
  414e71:	mov    al,ds:0x85a14904
  414e76:	fdivr  QWORD PTR [esi]
  414e78:	out    0x7b,eax
  414e7a:	loope  0x414ea9
  414e7c:	xor    BYTE PTR [ecx-0x6276bc1e],bl
  414e82:	ja     0x414e64
  414e84:	push   cs
  414e85:	mov    ecx,0x1ff4f47c
  414e8a:	adc    DWORD PTR [ecx+0xdfc8ee5],0xbff2d627
  414e94:	ds mov ah,0x5e
  414e97:	xchg   edi,eax
  414e98:	fst    DWORD PTR [edx+0xd701b4e]
  414e9e:	push   es
  414e9f:	out    dx,al
  414ea0:	and    al,0x84
  414ea2:	stos   BYTE PTR es:[edi],al
  414ea3:	out    0x8d,al
  414ea5:	aam    0x53
  414ea7:	ja     0x414e70
  414ea9:	xchg   BYTE PTR [eax],bh
  414eab:	(bad)  [esi-0x1d]
  414eae:	xchg   ecx,eax
  414eaf:	shl    DWORD PTR [eax+0x50b4e105],1
  414eb5:	div    BYTE PTR [edx+edi*2+0x12]
  414eb9:	add    al,0x37
  414ebb:	cdq    
  414ebc:	pop    edx
  414ebd:	sbb    BYTE PTR [eax+0x4],dh
  414ec0:	out    0x94,al
  414ec2:	clc    
  414ec3:	(bad)  
  414ec4:	cmc    
  414ec5:	les    ecx,FWORD PTR [ebx+0x51]
  414ec8:	das    
  414ec9:	cmp    DWORD PTR [esi],edx
  414ecb:	out    0xc1,eax
  414ecd:	jle    0x414f2a
  414ecf:	enter  0x85a5,0x8e
  414ed3:	mov    ecx,0xec43f0e3
  414ed8:	in     eax,dx
  414ed9:	or     DWORD PTR [esi-0x64],esp
  414edc:	or     ah,BYTE PTR [edi-0x2f723db4]
  414ee2:	leave  
  414ee3:	adc    edi,DWORD PTR [esi-0x7acf8c16]
  414ee9:	jbe    0x414f20
  414eeb:	dec    edx
  414eec:	xchg   edi,eax
  414eed:	mov    ds:0x5b99c9c4,al
  414ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef3:	jo     0x414ee9
  414ef5:	xsaveopt [eax-0x9e50d42]
  414efc:	xchg   DWORD PTR [edi],eax
  414efe:	in     eax,dx
  414eff:	push   es
  414f00:	popf   
  414f01:	psrlw  mm1,QWORD PTR [ecx+0x316a2528]
  414f08:	sub    cl,ch
  414f0a:	daa    
  414f0b:	fwait
  414f0c:	out    dx,al
  414f0d:	xor    al,BYTE PTR [eax+0x19f66e40]
  414f13:	cmp    dl,BYTE PTR [edx]
  414f15:	push   ecx
  414f16:	jmp    0xd6fe:0x5da75584
  414f1d:	popf   
  414f1e:	pop    edi
  414f1f:	retf   
  414f20:	bound  eax,QWORD PTR [eax-0x6f07b20e]
  414f26:	pop    eax
  414f27:	xor    ebx,DWORD PTR [edi+0x63]
  414f2a:	add    ebp,eax
  414f2c:	fwait
  414f2d:	xor    BYTE PTR ds:0xfa3acbe4,bh
  414f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f34:	jnp    0x414f2c
  414f36:	(bad)  
  414f37:	and    BYTE PTR [eax],ch
  414f39:	icebp  
  414f3a:	mov    BYTE PTR [ebp-0x5a],al
  414f3d:	je     0x414fbb
  414f3f:	cmp    BYTE PTR [eax-0x4f],dl
  414f42:	int    0xf8
  414f44:	call   0x8a88:0x89b9e779
  414f4b:	call   0xb8dd:0x36c77eb
  414f52:	lds    esp,FWORD PTR [eax+0x25]
  414f55:	in     al,0xfc
  414f57:	ins    DWORD PTR es:[edi],dx
  414f58:	add    eax,DWORD PTR [edx-0x4c]
  414f5b:	xor    bh,dh
  414f5d:	stos   BYTE PTR es:[edi],al
  414f5e:	and    eax,0xd4d845a2
  414f63:	pop    eax
  414f64:	xor    ah,BYTE PTR [edx+0x42158752]
  414f6a:	fs addr16 test al,0xa4
  414f6e:	sbb    al,0x48
  414f70:	ins    BYTE PTR es:[edi],dx
  414f71:	test   edi,0x96001cae
  414f77:	mov    gs,eax
  414f79:	push   eax
  414f7a:	adc    esp,ebp
  414f7c:	jne    0x414f2e
  414f7e:	je     0xccf4fb92
  414f84:	cli    
  414f85:	mov    ds:0x509c5aa9,al
  414f8a:	retf   
  414f8b:	idiv   esi
  414f8d:	and    DWORD PTR [ebx+0x6f],eax
  414f90:	out    dx,eax
  414f91:	fidivr DWORD PTR [eax+edi*8+0x3a]
  414f95:	rcl    esi,cl
  414f97:	jl     0x414f28
  414f99:	or     DWORD PTR [eax-0x34375041],esi
  414f9f:	sub    bl,cl
  414fa1:	fldcw  WORD PTR ds:0xc4c05fe5
  414fa7:	sti    
  414fa8:	or     al,0xa5
  414faa:	xor    eax,0x94a87cab
  414faf:	push   esi
  414fb0:	push   edx
  414fb1:	shr    DWORD PTR [ecx-0x7f],cl
  414fb4:	push   ss
  414fb5:	in     eax,dx
  414fb6:	sub    eax,0x1fbf1b83
  414fbb:	mov    edi,0x29b10544
  414fc0:	push   ds
  414fc1:	xor    eax,0x61320219
  414fc6:	jnp    0x415001
  414fc8:	repnz lods al,BYTE PTR ds:[esi]
  414fca:	xchg   esi,eax
  414fcb:	mov    ds:0x6ee5fce5,eax
  414fd0:	lock sbb BYTE PTR [edi-0x59],bh
  414fd4:	ds jecxz 0x41501c
  414fd7:	mov    ebx,0x3f7bfe9d
  414fdc:	ret    
  414fdd:	aam    0x2a
  414fdf:	cli    
  414fe0:	add    edx,ebx
  414fe2:	std    
  414fe3:	test   al,0x2a
  414fe5:	aas    
  414fe6:	sti    
  414fe7:	push   cs
  414fe8:	pop    eax
  414fe9:	mov    ah,0x84
  414feb:	aam    0x65
  414fed:	cmp    eax,0x4e5804f9
  414ff2:	xor    al,0xe3
  414ff4:	(bad)  
  414ff5:	push   ebx
  414ff6:	push   edx
  414ff7:	push   ecx
  414ff8:	xchg   edx,eax
  414ff9:	mov    ebp,0x6dac45d0
  414ffe:	mov    bl,BYTE PTR [edx]
  415000:	mov    al,0x43
  415002:	out    0x29,al
  415004:	dec    edi
  415005:	and    al,0x6f
  415007:	pop    edx
  415008:	push   es
  415009:	sbb    eax,0xdbe0f3ae
  41500e:	xor    DWORD PTR [edi+0x5a],ebp
  415011:	cmp    dl,BYTE PTR [ebp-0x9]
  415014:	adc    eax,0x7d517433
  415019:	popf   
  41501a:	inc    eax
  41501b:	inc    esi
  41501c:	push   0x954dd33b
  415021:	mov    dh,0x6e
  415023:	add    eax,0x30d0766
  415028:	lods   eax,DWORD PTR ds:[esi]
  415029:	sub    al,BYTE PTR [ebx-0x33]
  41502c:	sub    dl,ah
  41502e:	cmc    
  41502f:	push   edx
  415030:	push   ss
  415031:	mov    eax,0x19396699
  415036:	mov    esp,0x8ab7cdf2
  41503b:	adc    eax,0x4a
  41503e:	fbstp  TBYTE PTR [ebp-0x78654f54]
  415044:	cmp    al,0x54
  415046:	push   ebx
  415047:	sub    al,0x7b
  415049:	lahf   
  41504a:	jo     0x414fdc
  41504c:	dec    edi
  41504d:	out    dx,al
  41504e:	push   ebp
  41504f:	hlt    
  415050:	outs   dx,DWORD PTR ds:[esi]
  415051:	fbld   TBYTE PTR [edi]
  415053:	sbb    al,ch
  415055:	push   edx
  415056:	jne    0x414fea
  415058:	stos   BYTE PTR es:[edi],al
  415059:	imul   eax,DWORD PTR [ebx],0xb2b680e3
  41505f:	jg     0x4150b1
  415061:	mov    ds:0xf80ea27,al
  415066:	cld    
  415067:	xchg   BYTE PTR [ebx-0x25c7a526],dl
  41506d:	repz xlat BYTE PTR ds:[ebx]
  41506f:	and    edi,DWORD PTR [ebx]
  415071:	iret   
  415072:	xor    DWORD PTR [esi],edi
  415074:	not    BYTE PTR [eax-0x6a]
  415077:	mov    esi,0xba1ca27d
  41507c:	jmp    0xad99:0xade72c5e
  415083:	jae    0x41501f
  415085:	mov    ebp,0x24c99018
  41508a:	sub    al,0x64
  41508c:	xchg   esi,eax
  41508d:	cmp    edx,DWORD PTR [ebx+0x1c0aa3e6]
  415093:	mov    eax,ds:0x820d300a
  415098:	xchg   edx,eax
  415099:	sbb    bl,BYTE PTR [esi*1-0xfe45c39]
  4150a0:	mov    bh,0xbf
  4150a2:	mov    WORD PTR gs:[eax+0x60aaf1f3],gs
  4150a9:	and    ah,ah
  4150ab:	xor    eax,0x68c2213a
  4150b0:	rcl    BYTE PTR [esi],0x3
  4150b3:	(bad)  
  4150b4:	shl    DWORD PTR [ebp-0x73],1
  4150b7:	std    
  4150b8:	out    0x17,al
  4150ba:	es xchg esp,eax
  4150bc:	mov    ch,0x7e
  4150be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150bf:	add    ecx,DWORD PTR [eax-0x4]
  4150c2:	scas   al,BYTE PTR es:[edi]
  4150c3:	mov    eax,ds:0xbfd9b48
  4150c8:	push   eax
  4150c9:	in     al,dx
  4150ca:	mov    al,ds:0xa6428ab6
  4150cf:	xlat   BYTE PTR ds:[ebx]
  4150d0:	call   0xfd827ceb
  4150d5:	add    eax,0xf6113125
  4150da:	(bad)  
  4150db:	mov    bh,cl
  4150dd:	mov    ebx,0x482a347c
  4150e2:	retf   0x50ec
  4150e5:	sbb    al,0xd0
  4150e7:	add    edx,edi
  4150e9:	push   0xfffffffe
  4150eb:	or     DWORD PTR [edi],edi
  4150ed:	ins    BYTE PTR es:[edi],dx
  4150ee:	inc    esp
  4150ef:	cmp    ch,bl
  4150f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f2:	fwait
  4150f3:	cmc    
  4150f4:	rcl    BYTE PTR [edx-0x6a8f4c2a],1
  4150fa:	stc    
  4150fb:	iret   
  4150fc:	(bad)  
  4150fe:	push   ebx
  4150ff:	clc    
  415100:	sbb    DWORD PTR [ecx],ecx
  415102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415103:	lds    esi,FWORD PTR [edx+0x73c07794]
  415109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41510a:	push   eax
  41510b:	outs   dx,BYTE PTR ds:[esi]
  41510c:	icebp  
  41510d:	js     0x415135
  41510f:	clc    
  415110:	push   es
  415111:	or     ah,dh
  415113:	pop    eax
  415114:	daa    
  415115:	push   edi
  415116:	sar    cl,cl
  415118:	aaa    
  415119:	sti    
  41511a:	cmp    BYTE PTR [edx+eiz*4+0x10e47c49],0x2e
  415122:	cwde   
  415123:	cdq    
  415124:	xor    ch,dl
  415126:	inc    ebx
  415127:	scas   eax,DWORD PTR es:[edi]
  415128:	mov    bl,0x75
  41512a:	mov    ecx,0xbab5e74
  41512f:	std    
  415130:	xchg   edi,eax
  415131:	std    
  415132:	repnz bound ebx,QWORD PTR [eax-0x7b]
  415136:	dec    edi
  415137:	cmp    al,0x40
  415139:	dec    ebp
  41513a:	mov    cl,0xeb
  41513c:	push   ss
  41513d:	mov    ebx,0xc3d9097d
  415142:	or     ah,ah
  415144:	out    dx,eax
  415145:	dec    ecx
  415146:	fistp  WORD PTR ds:0x3da8dc21
  41514c:	xor    BYTE PTR [ebx+0xf],ah
  41514f:	lahf   
  415150:	adc    al,0x25
  415152:	fdiv   QWORD PTR [ebx+0x519c8d93]
  415158:	dec    edi
  415159:	fld    QWORD PTR [ebp+edx*8+0x5cec2e0d]
  415160:	iret   
  415161:	push   es
  415162:	xchg   dl,al
  415164:	cs sub eax,0x16d5e926
  41516a:	jl     0x415153
  41516c:	push   esp
  41516d:	mov    BYTE PTR [edx],ch
  41516f:	ror    DWORD PTR [esi+0x41],cl
  415172:	push   ecx
  415173:	clc    
  415174:	mov    bh,0x61
  415176:	mov    al,0x61
  415178:	mov    edx,DWORD PTR [edi-0x14]
  41517b:	jb     0x41511e
  41517d:	shl    BYTE PTR [edx+0xa],0x5b
  415181:	and    al,0x61
  415183:	dec    eax
  415184:	std    
  415185:	jbe    0x41516c
  415187:	push   ebp
  415188:	repz scas al,BYTE PTR es:[edi]
  41518a:	inc    ecx
  41518b:	sbb    edi,DWORD PTR [ebx-0x40c66278]
  415191:	(bad)  
  415192:	outs   dx,BYTE PTR ds:[esi]
  415193:	inc    edi
  415194:	ret    0x8fa3
  415197:	in     al,dx
  415198:	jle    0x415177
  41519a:	mov    ds:0x8c26ade0,eax
  41519f:	stos   BYTE PTR es:[edi],al
  4151a0:	mov    al,ds:0x212d343d
  4151a5:	inc    ecx
  4151a6:	adc    al,BYTE PTR [esi-0x7a]
  4151a9:	adc    al,0x2
  4151ab:	jmp    0x41514e
  4151ad:	shr    BYTE PTR [ecx+0x69],cl
  4151b0:	int    0x95
  4151b2:	dec    edx
  4151b3:	cmp    eax,0xb406a8c
  4151b8:	loopne 0x4151d4
  4151ba:	leave  
  4151bb:	enter  0x2e30,0x93
  4151bf:	xor    ecx,ebx
  4151c1:	lahf   
  4151c2:	daa    
  4151c3:	popa   
  4151c4:	mov    WORD PTR [edx],ds
  4151c6:	loopne 0x4151be
  4151c8:	push   ecx
  4151c9:	cld    
  4151ca:	inc    edi
  4151cb:	mov    ch,0xa5
  4151cd:	sti    
  4151ce:	sbb    BYTE PTR [ebx+0x1fefd44b],bh
  4151d4:	jp     0x4151f7
  4151d6:	sar    DWORD PTR [ecx+0x5a2a892b],1
  4151dc:	sub    DWORD PTR [edx-0x4c],edx
  4151df:	popf   
  4151e0:	sub    eax,0x75525258
  4151e5:	dec    ecx
  4151e6:	and    eax,0xf31123ea
  4151eb:	dec    ebp
  4151ec:	retf   
  4151ed:	inc    edi
  4151ee:	repz push 0x784810a1
  4151f4:	and    ebp,DWORD PTR [edx+0x64439c49]
  4151fa:	jmp    0x4151b8
  4151fc:	xchg   esi,eax
  4151fd:	(bad)  
  4151fe:	neg    DWORD PTR [esi+0x2c]
  415201:	jo     0x415237
  415203:	cmp    eax,0xb77ce304
  415208:	jecxz  0x41527e
  41520a:	jmp    0xdd93:0xfc18aa3e
  415211:	inc    eax
  415212:	push   ss
  415213:	jle    0x415283
  415215:	mov    esp,0x3a5cf7d3
  41521a:	mov    ebx,DWORD PTR [edi+edi*1+0x75f25262]
  415221:	std    
  415222:	dec    ebx
  415223:	sub    al,0x63
  415225:	mov    ds:0x2a1f5a20,al
  41522a:	xor    BYTE PTR [esi+0x79fe4527],0x63
  415231:	(bad)  
  415232:	dec    ecx
  415233:	jge    0x4151c3
  415235:	and    ah,BYTE PTR [eax+eiz*4+0x34]
  415239:	jg     0x4152a9
  41523b:	jnp    0x4152b1
  41523d:	scas   al,BYTE PTR es:[edi]
  41523e:	pop    ebx
  41523f:	cmp    BYTE PTR ds:0x916cdf27,cl
  415245:	xchg   edi,eax
  415246:	pop    ss
  415247:	mov    eax,DWORD PTR [ecx+0x332f6e0e]
  41524d:	sbb    DWORD PTR [edx-0x2e],ebx
  415250:	dec    edx
  415251:	jmp    0x21fc8da0
  415256:	stos   DWORD PTR es:[edi],eax
  415257:	fwait
  415258:	bndldx (bad),[esi+0x40]
  41525c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41525d:	jo     0x415249
  41525f:	enter  0x3b85,0xb3
  415263:	dec    ecx
  415264:	(bad)  
  415265:	mov    ebp,0xdc9c062b
  41526a:	push   ds
  41526b:	mov    esi,0xcc4846ee
  415270:	das    
  415271:	push   edx
  415272:	imul   ecx,DWORD PTR ds:0xe8f33098,0x28b0acc4
  41527c:	sub    BYTE PTR [edx+0x45],0xb8
  415280:	xor    edi,DWORD PTR [edi-0x37fdbe92]
  415286:	imul   eax,DWORD PTR [ecx-0x23],0xffffff80
  41528a:	lahf   
  41528b:	add    DWORD PTR [edx-0x77],0xffffffd6
  41528f:	mov    eax,0xfaa44392
  415294:	enter  0x12fd,0x9f
  415298:	inc    esi
  415299:	pop    ebp
  41529a:	pop    esi
  41529b:	loope  0x415293
  41529d:	and    al,BYTE PTR [ebp-0x1b]
  4152a0:	and    al,0xe4
  4152a2:	mov    esp,esp
  4152a4:	sub    cl,BYTE PTR [eax-0x17]
  4152a7:	scas   al,BYTE PTR es:[edi]
  4152a8:	shl    ah,1
  4152aa:	mov    DWORD PTR [esi-0x1ca37d8b],edi
  4152b0:	sub    edi,DWORD PTR [edx-0x25]
  4152b3:	aam    0xbb
  4152b5:	test   BYTE PTR [ebp+0x59],dl
  4152b8:	sub    DWORD PTR [esi],ebx
  4152ba:	in     eax,dx
  4152bb:	push   eax
  4152bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152be:	das    
  4152bf:	imul   ecx,DWORD PTR [edx],0x35310bb0
  4152c5:	add    eax,0xe47d7293
  4152ca:	fisub  WORD PTR [esi]
  4152cc:	mov    BYTE PTR [ecx-0x4d],bl
  4152cf:	sbb    eax,0x269c374c
  4152d4:	in     eax,0x8e
  4152d6:	cld    
  4152d7:	test   eax,0x51779e3d
  4152dc:	ins    DWORD PTR es:[edi],dx
  4152dd:	fsub   st,st(6)
  4152df:	minps  xmm7,XMMWORD PTR [eax+0x7f32781f]
  4152e6:	hlt    
  4152e7:	int    0xdd
  4152e9:	imul   ebx,eax,0x508da6ca
  4152ef:	test   BYTE PTR [eax],0x3f
  4152f2:	xchg   DWORD PTR [edx],esp
  4152f4:	jno    0x415284
  4152f6:	in     eax,dx
  4152f7:	ja     0x415306
  4152f9:	jo     0x4152fc
  4152fb:	xor    DWORD PTR [edi],eax
  4152fd:	ins    BYTE PTR es:[edi],dx
  4152fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ff:	and    BYTE PTR [ebx],bh
  415301:	std    
  415302:	xor    eax,0x12fe74fa
  415307:	call   0xd92a:0xb9d3823f
  41530e:	sub    al,0x33
  415310:	push   es
  415311:	in     al,0xc1
  415313:	and    ah,ah
  415315:	mov    WORD PTR [ecx],ds
  415317:	push   0x1f
  415319:	lods   al,BYTE PTR ds:[esi]
  41531a:	data16 jecxz 0x41535b
  41531d:	sti    
  41531e:	js     0x415318
  415320:	inc    ecx
  415321:	ret    0xb0d5
  415324:	jp     0x4152d4
  415326:	in     eax,dx
  415327:	test   al,0x22
  415329:	mov    esp,0x3b1cafdd
  41532e:	push   ss
  41532f:	jmp    0x4152ba
  415331:	ror    BYTE PTR [ecx],cl
  415333:	pushf  
  415334:	ret    
  415335:	nop
  415336:	mov    ah,0x55
  415338:	mov    ebp,0xe74b951d
  41533d:	and    bl,BYTE PTR [ebx-0x5c]
  415340:	hlt    
  415341:	jg     0x4153ab
  415343:	fcomp  st(2)
  415345:	xor    DWORD PTR [esi-0x6e],0x8ab60ae8
  41534c:	adc    ch,cl
  41534e:	mov    eax,0x589eaeff
  415353:	pop    ds
  415354:	call   0x119d0f2c
  415359:	mul    DWORD PTR [edi+0x12182108]
  41535f:	dec    ebp
  415360:	pop    ss
  415361:	mov    cl,0x4a
  415363:	int    0xf4
  415365:	push   ss
  415366:	fcom   QWORD PTR [edi]
  415368:	mov    dh,0x30
  41536a:	cdq    
  41536b:	fidivr DWORD PTR [ebp+0x69]
  41536e:	pop    es
  41536f:	cs cli 
  415371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415372:	jle    0x4153b1
  415374:	mov    es,WORD PTR [eax+0x6049bc85]
  41537a:	int    0xec
  41537c:	xor    eax,0x5f4ca481
  415381:	inc    ecx
  415382:	test   al,bh
  415384:	(bad)  
  415385:	aam    0x59
  415387:	push   0x6695df5b
  41538c:	xor    BYTE PTR [eax],ch
  41538e:	js     0x4153fb
  415390:	add    eax,0xd2f85326
  415395:	loop   0x4153ca
  415397:	xchg   esp,eax
  415398:	and    BYTE PTR [ecx],dl
  41539a:	out    0xc8,al
  41539c:	push   es
  41539d:	pop    ds
  41539e:	inc    edi
  41539f:	xchg   edx,eax
  4153a0:	into   
  4153a1:	dec    esp
  4153a2:	fist   DWORD PTR [ecx-0x4d]
  4153a5:	push   eax
  4153a6:	add    cl,BYTE PTR [edi-0x34b92d2f]
  4153ac:	pop    es
  4153ad:	cmp    DWORD PTR [edi-0x6],ebp
  4153b0:	(bad)  [ebx+0x8]
  4153b3:	xchg   edi,eax
  4153b4:	jp     0x415380
  4153b6:	inc    edi
  4153b7:	lea    esi,[eax+0x700776a0]
  4153bd:	inc    esp
  4153be:	xchg   edi,eax
  4153bf:	sub    DWORD PTR [ecx],ecx
  4153c1:	(bad)  
  4153c3:	faddp  st(2),st
  4153c5:	pop    ds
  4153c6:	popf   
  4153c7:	nop
  4153c8:	cdq    
  4153c9:	pushf  
  4153ca:	pop    edx
  4153cb:	jns    0x415438
  4153cd:	imul   DWORD PTR [edx+0x2a]
  4153d0:	jg     0x41543a
  4153d2:	jl     0x4153cb
  4153d4:	mov    ebx,0x9220a1ed
  4153d9:	sub    DWORD PTR ds:0x201b8d98,eax
  4153df:	add    ebp,DWORD PTR [ebx-0x6c586c12]
  4153e5:	scas   eax,DWORD PTR es:[edi]
  4153e6:	xchg   bh,dh
  4153e8:	aam    0xaf
  4153ea:	jecxz  0x4153fd
  4153ec:	test   BYTE PTR [ebx+0x2c],0x77
  4153f0:	retf   0xda5f
  4153f3:	xchg   ecx,eax
  4153f4:	push   ecx
  4153f5:	repz mov ds:0x7d2c19a2,eax
  4153fb:	and    cl,cl
  4153fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153fe:	mov    bh,0xe6
  415400:	fwait
  415401:	stos   DWORD PTR es:[edi],eax
  415402:	in     eax,0xfb
  415404:	xor    ch,BYTE PTR [ecx]
  415406:	(bad)  
  415407:	into   
  415408:	push   es
  415409:	mov    dl,0x89
  41540b:	sar    al,0xb
  41540e:	pop    eax
  41540f:	ss js  0x4153a7
  415412:	push   edx
  415413:	adc    DWORD PTR [esi],0xffffffd8
  415416:	ficom  DWORD PTR ss:0xc25b23e6
  41541d:	adc    esp,DWORD PTR [ebx+0x406a6942]
  415423:	popa   
  415424:	and    BYTE PTR cs:[edi-0x1e67f56a],al
  41542b:	mov    ds:0x63627446,al
  415430:	ss repnz mov edi,0xb7e1a260
  415437:	push   0x54
  415439:	push   ecx
  41543a:	fld    QWORD PTR [edx-0x6ee484ed]
  415440:	xchg   esi,eax
  415441:	push   ebp
  415442:	push   0x75
  415444:	aaa    
  415445:	sbb    ch,al
  415447:	sub    dl,BYTE PTR [edi-0x48]
  41544a:	popa   
  41544b:	mov    ds:0x7391f7d7,eax
  415450:	push   cs
  415451:	pop    esi
  415452:	test   al,0xd3
  415454:	call   0x796a:0xb2d406ea
  41545b:	sbb    esi,esi
  41545d:	sbb    DWORD PTR [ecx+0x17],esi
  415460:	sti    
  415461:	xchg   edx,eax
  415462:	dec    edx
  415463:	or     BYTE PTR [ebx],0x73
  415466:	push   cs
  415467:	mov    ds:0x887001a9,al
  41546c:	inc    edx
  41546d:	repz retf 
  41546f:	ins    BYTE PTR es:[edi],dx
  415470:	(bad)  
  415471:	not    DWORD PTR [edi+0x28]
  415474:	xor    al,0x9
  415476:	jge    0x4154dd
  415478:	push   0xdd8f25d0
  41547d:	aam    0xb0
  41547f:	push   ecx
  415480:	mov    cl,0xd3
  415482:	daa    
  415483:	outs   dx,DWORD PTR ds:[esi]
  415484:	or     eax,0xc5d05010
  415489:	sbb    ecx,edi
  41548b:	fdecstp 
  41548d:	push   edx
  41548e:	jecxz  0x41542b
  415490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415491:	idiv   BYTE PTR [ebx+eax*2-0x29452cdc]
  415498:	xor    al,0x60
  41549a:	retf   
  41549b:	and    BYTE PTR [esi-0x77],dh
  41549e:	(bad)  
  41549f:	js     0x4154ea
  4154a1:	mov    bh,bh
  4154a3:	sub    ebp,DWORD PTR [edi]
  4154a5:	mov    ch,0x24
  4154a7:	xchg   edx,eax
  4154a8:	mov    ebp,0xca28ad47
  4154ad:	mov    ecx,0x31da1fae
  4154b2:	mov    WORD PTR [esi+0x19],?
  4154b5:	inc    ebp
  4154b6:	jge    0x4154e9
  4154b8:	imul   ebp,eax,0x4d
  4154bb:	xchg   ebp,eax
  4154bc:	xchg   DWORD PTR [ebx+edi*2-0x485e2bc9],edi
  4154c3:	add    edx,ebx
  4154c5:	ficom  DWORD PTR [ecx-0x44]
  4154c8:	loop   0x4154ca
  4154ca:	into   
  4154cb:	inc    ebp
  4154cc:	jnp    0x415459
  4154ce:	jae    0x4154aa
  4154d0:	jmp    0x5aca9d0d
  4154d5:	rcl    BYTE PTR ds:0x1d2e5a54,1
  4154db:	xchg   DWORD PTR [ebp-0x2585ba18],ebx
  4154e1:	sub    cl,BYTE PTR [edx]
  4154e3:	pusha  
  4154e4:	push   cs
  4154e5:	jb     0x4154da
  4154e7:	shl    BYTE PTR [ecx+esi*8+0x869ca11],1
  4154ee:	mov    eax,ds:0xd21adf7c
  4154f3:	push   es
  4154f4:	sbb    DWORD PTR [edi-0x3217f7cf],0x43abfe42
  4154fe:	out    dx,al
  4154ff:	int    0x8
  415501:	clc    
  415502:	sahf   
  415503:	sbb    BYTE PTR [ebx],0x7d
  415506:	dec    edx
  415507:	xchg   ebx,eax
  415508:	shl    DWORD PTR [eax+0x1f],0xf6
  41550c:	adc    ebp,DWORD PTR [ebx+0x0]
  41550f:	dec    ecx
  415510:	mov    ah,0xab
  415512:	pop    ebp
  415513:	stos   DWORD PTR es:[edi],eax
  415514:	cmp    al,0xa1
  415516:	mov    al,0x72
  415518:	sbb    ch,BYTE PTR [eax-0x45d9e455]
  41551e:	pop    edi
  41551f:	or     eax,0xa8c42631
  415524:	inc    edi
  415525:	ins    BYTE PTR es:[edi],dx
  415526:	xlat   BYTE PTR ds:[ebx]
  415527:	push   edi
  415528:	xchg   esp,eax
  415529:	es or  ebx,eax
  41552c:	and    al,0x8a
  41552e:	retf   
  41552f:	inc    ecx
  415530:	sti    
  415531:	arpl   si,di
  415533:	fidivr DWORD PTR [ebx-0x41ca4e49]
  415539:	push   0xffffffa7
  41553b:	inc    edx
  41553c:	stc    
  41553d:	in     eax,0x39
  41553f:	sub    DWORD PTR [esi+edx*2-0x37],0x2ed3358c
  415547:	scas   eax,DWORD PTR es:[edi]
  415548:	out    0xab,al
  41554a:	or     eax,0x928c9f74
  41554f:	(bad)  [edi+0x71689e20]
  415555:	imul   ecx,DWORD PTR [ebx+0x1b],0x6b142d1b
  41555c:	imul   eax,edi,0xffffff96
  41555f:	pop    edx
  415560:	scas   al,BYTE PTR es:[edi]
  415561:	das    
  415562:	jb     0x415556
  415564:	inc    ebx
  415565:	lods   al,BYTE PTR ds:[esi]
  415566:	xchg   ebx,eax
  415567:	(bad)  [edi-0x22]
  41556a:	mov    bl,0x9e
  41556c:	iret   
  41556d:	call   0x67dd1ac8
  415572:	jbe    0x41554a
  415574:	sahf   
  415575:	pop    eax
  415576:	dec    ecx
  415577:	call   0x3417:0xdfbed7e7
  41557e:	arpl   WORD PTR [eax+0x1bc2174c],di
  415584:	mov    ah,0x3c
  415586:	adc    eax,0x238ebce9
  41558b:	mov    DWORD PTR [eax+0x5f],0xb8f76376
  415592:	pop    esi
  415593:	pop    eax
  415594:	int3   
  415595:	shl    ebx,cl
  415597:	adc    BYTE PTR [eax+esi*4],dl
  41559a:	(bad)  
  41559b:	aad    0x3e
  41559d:	fisttp QWORD PTR [ecx]
  41559f:	mov    esi,0x1caef332
  4155a4:	and    ecx,DWORD PTR [ecx+0x41e7e035]
  4155aa:	js     0x4155a3
  4155ac:	mov    cl,0x40
  4155ae:	fsub   DWORD PTR [edi-0x6c0d4543]
  4155b4:	mov    ah,0x95
  4155b6:	and    DWORD PTR [ebp-0x7c],eax
  4155b9:	pop    esp
  4155ba:	dec    ebp
  4155bb:	(bad)  
  4155bc:	mov    ch,0x2e
  4155be:	fdiv   QWORD PTR [edx]
  4155c0:	pop    edx
  4155c1:	sub    esi,DWORD PTR fs:[ebp+0x2db348a5]
  4155c8:	mov    esi,0xced84867
  4155cd:	out    0x2a,eax
  4155cf:	mov    bl,0x4b
  4155d1:	fmulp  st(2),st
  4155d3:	aam    0x57
  4155d5:	sbb    DWORD PTR [ebx],edi
  4155d7:	arpl   WORD PTR [eax+0x1a0373ae],di
  4155dd:	call   FWORD PTR [edi-0x45164263]
  4155e3:	mov    bl,0x8d
  4155e5:	and    eax,0x75dc2630
  4155ea:	or     BYTE PTR [edx+ebp*2+0x32],bl
  4155ee:	pusha  
  4155ef:	mov    dh,0xed
  4155f1:	cs push es
  4155f3:	popf   
  4155f4:	xor    DWORD PTR [edi-0x5e],edi
  4155f7:	mov    cl,0x52
  4155fa:	and    ecx,edi
  4155fc:	pop    es
  4155fd:	add    ecx,DWORD PTR [esi]
  4155ff:	call   0xbf38bdcb
  415604:	cdq    
  415605:	scas   al,BYTE PTR es:[edi]
  415606:	sub    ebx,DWORD PTR [eax-0x39]
  415609:	shl    BYTE PTR [esi+0x6e321eba],cl
  41560f:	sub    ah,BYTE PTR [ecx-0x2b]
  415612:	mov    ecx,0xc74c017
  415617:	dec    esp
  415618:	xchg   ecx,ebx
  41561a:	push   eax
  41561b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41561d:	stos   DWORD PTR es:[edi],eax
  41561e:	xchg   esp,eax
  41561f:	into   
  415620:	inc    ebp
  415621:	int3   
  415622:	(bad)  
  415623:	mov    eax,0x53ef57b1
  415628:	xchg   ecx,eax
  415629:	rol    BYTE PTR [ecx+0x264d3d6],1
  41562f:	ins    DWORD PTR es:[edi],dx
  415630:	jbe    0x4155da
  415632:	and    BYTE PTR [ebx],ah
  415634:	xchg   dh,dl
  415636:	repnz mov esi,0x34f2eeba
  41563c:	sar    BYTE PTR [esi],0xec
  41563f:	cli    
  415640:	in     eax,0xc0
  415642:	mov    ebx,0xa380fb36
  415647:	fs into 
  415649:	mov    edi,0x1115ced2
  41564e:	nop
  41564f:	and    al,0x3a
  415651:	out    0x11,eax
  415653:	jo     0x4155d8
  415655:	mov    es,WORD PTR [ecx-0x14]
  415658:	ja     0x415638
  41565a:	stos   BYTE PTR es:[edi],al
  41565b:	push   edx
  41565c:	stc    
  41565d:	inc    ecx
  41565e:	dec    ebp
  41565f:	cli    
  415660:	pop    esp
  415661:	inc    ebx
  415662:	xchg   esp,eax
  415663:	dec    edi
  415664:	das    
  415665:	mov    ?,WORD PTR [esi-0x60bb5d15]
  41566b:	xchg   esp,eax
  41566c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41566d:	fwait
  41566e:	outs   dx,BYTE PTR cs:[esi]
  415670:	push   ss
  415671:	and    eax,0x192a0bce
  415676:	sbb    ah,BYTE PTR [eax+eiz*4+0x479ee67]
  41567d:	push   cs
  41567e:	gs mov al,0x47
  415681:	mov    eax,ds:0x4140f877
  415686:	push   edi
  415687:	add    al,BYTE PTR [edi+esi*1-0x23]
  41568b:	push   ebp
  41568c:	jns    0x415626
  41568e:	xchg   edi,eax
  41568f:	xlat   BYTE PTR ds:[ebx]
  415690:	xor    bh,BYTE PTR [esp+edx*8+0x72b47a88]
  415697:	loop   0x41562f
  415699:	cmc    
  41569a:	dec    esi
  41569b:	xor    BYTE PTR [edx-0x3a83143],dh
  4156a1:	pop    eax
  4156a2:	dec    ebx
  4156a3:	imul   esp,DWORD PTR [ebp-0x76],0xffffffa8
  4156a7:	mov    ebp,0x1982047
  4156ac:	int    0xb2
  4156ae:	dec    ecx
  4156af:	inc    esp
  4156b0:	sahf   
  4156b1:	and    BYTE PTR [edx+0x30],al
  4156b4:	inc    esp
  4156b5:	popf   
  4156b6:	mov    al,0xb
  4156b8:	jae    0x4156c4
  4156ba:	xchg   edi,eax
  4156bb:	cmp    eax,0x6cd693c2
  4156c0:	pop    edi
  4156c1:	nop
  4156c2:	(bad)  
  4156c3:	rol    BYTE PTR [esi],1
  4156c5:	ins    BYTE PTR es:[edi],dx
  4156c6:	(bad)  
  4156c7:	mov    bh,0x22
  4156c9:	inc    edi
  4156ca:	daa    
  4156cb:	pop    ebx
  4156cc:	pop    es
  4156cd:	push   ebx
  4156ce:	mov    eax,0x194af736
  4156d3:	leave  
  4156d4:	imul   edi,DWORD PTR [edi-0x4d],0xffffffa3
  4156d8:	push   es
  4156d9:	cdq    
  4156da:	fidiv  WORD PTR [edx+0x42f3b305]
  4156e0:	test   eax,edx
  4156e2:	push   es
  4156e3:	dec    ebx
  4156e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e5:	sbb    dh,BYTE PTR [esi+0x7b3b1657]
  4156eb:	(bad)  
  4156ec:	sub    ebp,DWORD PTR [edi-0x21]
  4156ef:	push   0x83719295
  4156f4:	jo     0x415744
  4156f6:	pop    eax
  4156f7:	sub    ebp,DWORD PTR [eax+0x77]
  4156fa:	fmul   st,st(1)
  4156fc:	loope  0x415755
  4156fe:	dec    esp
  4156ff:	sti    
  415700:	sar    DWORD PTR fs:[ecx+0x2c720650],1
  415707:	pop    es
  415708:	fimul  WORD PTR [eax+esi*1+0x5e]
  41570c:	dec    esp
  41570d:	test   BYTE PTR [esp+esi*8-0x16f56303],dl
  415714:	cmp    DWORD PTR [di-0x75b0],ecx
  415719:	adc    edx,0x4364aa94
  41571f:	mov    bh,0xce
  415721:	(bad)  
  415722:	push   edi
  415723:	mov    al,0xc2
  415725:	jne    0x415706
  415727:	pop    esi
  415728:	adc    ebx,ebx
  41572a:	sub    ch,BYTE PTR [esi]
  41572c:	in     al,dx
  41572d:	mov    ch,0x30
  41572f:	jmp    0x415701
  415731:	mov    eax,DWORD PTR [ecx+eax*2]
  415734:	inc    BYTE PTR [esi]
  415736:	push   ds
  415737:	push   es
  415738:	dec    esi
  415739:	dec    esi
  41573a:	es xor eax,0x29a04bf4
  415740:	ret    
  415741:	add    al,0x83
  415743:	adc    bl,al
  415745:	enter  0x87d9,0xf4
  415749:	aam    0x83
  41574b:	sub    dl,dl
  41574d:	cs sbb al,0x32
  415750:	das    
  415751:	mov    ah,0xb8
  415753:	sar    ecx,1
  415755:	jb     0x415754
  415757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415758:	ins    BYTE PTR es:[edi],dx
  415759:	dec    edi
  41575a:	hlt    
  41575b:	shr    ch,cl
  41575d:	scas   eax,DWORD PTR es:[edi]
  41575e:	inc    ecx
  41575f:	xor    edx,DWORD PTR [ebp+0x4e65e4f8]
  415765:	es xchg esi,eax
  415767:	or     ch,BYTE PTR [ebx-0xa49b211]
  41576d:	and    BYTE PTR [ecx],dh
  41576f:	retf   
  415770:	das    
  415771:	add    bl,BYTE PTR [eax+ebx*1-0x2b]
  415775:	mov    edx,0x5398b8e7
  41577a:	inc    ecx
  41577b:	mov    es,WORD PTR [esi+0x500ae941]
  415781:	mov    edx,0xdd60b2b8
  415786:	or     al,0x21
  415788:	cmp    ebp,ebp
  41578a:	ins    BYTE PTR es:[edi],dx
  41578b:	cmp    DWORD PTR [edi],eax
  41578d:	outs   dx,BYTE PTR ds:[esi]
  41578e:	xor    edx,DWORD PTR [eax-0x1f]
  415791:	imul   esp,DWORD PTR [ebp+0x64],0x14
  415795:	cs cdq 
  415797:	rcl    BYTE PTR [edi-0x55c5573f],cl
  41579d:	sub    DWORD PTR [ecx],edi
  41579f:	retf   0x1646
  4157a2:	pop    esp
  4157a3:	scas   al,BYTE PTR es:[edi]
  4157a4:	pop    ebp
  4157a5:	add    DWORD PTR [ecx-0x57],ebx
  4157a8:	xchg   edi,eax
  4157a9:	sbb    edx,DWORD PTR [edx+edx*2-0x2]
  4157ad:	ret    0x696b
  4157b0:	jge    0x4157ae
  4157b2:	in     al,0x66
  4157b4:	sub    eax,0xfa0a0f27
  4157b9:	scas   al,BYTE PTR es:[edi]
  4157ba:	test   DWORD PTR [edx],0xebffaf2
  4157c0:	jo     0x4157c6
  4157c2:	inc    ecx
  4157c3:	fcmovnb st,st(7)
  4157c5:	fistp  WORD PTR [ecx+0x3985a656]
  4157cb:	ror    BYTE PTR [edi+0x1d4fde9],0x82
  4157d2:	sbb    DWORD PTR [edi+0x19],ecx
  4157d5:	mov    ds:0x28fd7cbf,al
  4157da:	mov    ah,0x4d
  4157dc:	or     BYTE PTR [esi-0x36cbe277],al
  4157e2:	push   es
  4157e3:	loopne 0x41581d
  4157e5:	stos   BYTE PTR es:[edi],al
  4157e6:	adc    DWORD PTR [eax],0x73
  4157e9:	dec    edx
  4157ea:	mov    WORD PTR [edi+0x1242d856],es
  4157f0:	(bad)  
  4157f1:	clc    
  4157f2:	sbb    al,0xfb
  4157f4:	xor    bl,BYTE PTR [ebx-0x3c]
  4157f7:	jne    0x415866
  4157f9:	mov    dh,0x1f
  4157fb:	xor    ecx,ecx
  4157fd:	int    0xf1
  4157ff:	xchg   ebp,eax
  415800:	pop    ebp
  415801:	test   DWORD PTR [edx-0x40],ebp
  415804:	bound  esi,QWORD PTR [esi]
  415806:	pop    ebx
  415807:	or     ebx,DWORD PTR [ecx-0x14]
  41580a:	cdq    
  41580b:	mov    cl,0xd8
  41580d:	aam    0x28
  41580f:	fdiv   DWORD PTR [edi-0x66]
  415812:	les    eax,FWORD PTR [edi+0xf]
  415815:	cmp    eax,0x50342b20
  41581a:	inc    edx
  41581b:	dec    ebp
  41581c:	sub    al,0x53
  41581e:	stc    
  41581f:	mov    DWORD PTR [eax+ecx*8-0x67bfd983],0x34ddf3ab
  41582a:	aad    0x3e
  41582c:	inc    edx
  41582d:	xor    esi,edx
  41582f:	pop    ecx
  415830:	les    esp,FWORD PTR [edx+0x1e]
  415833:	xor    BYTE PTR [edx],bh
  415835:	mov    ds:0x27995089,eax
  41583a:	jmp    0xd69d:0x1d8ca3c3
  415841:	push   edi
  415842:	and    BYTE PTR [esi],bh
  415844:	(bad)  
  415845:	loope  0x415877
  415847:	jp     0x415830
  415849:	cmp    edx,ebx
  41584b:	cmp    eax,0x6ffee9b1
  415850:	inc    ecx
  415851:	push   es
  415852:	ja     0x415851
  415854:	pop    esp
  415855:	loopne 0x415843
  415857:	adc    al,dh
  415859:	mov    dl,0xe1
  41585b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41585c:	cld    
  41585d:	and    DWORD PTR [esi-0x6816f19c],esp
  415863:	icebp  
  415864:	xchg   DWORD PTR [esi+0x72df6752],edx
  41586a:	(bad)  
  41586b:	jbe    0x4157f4
  41586d:	cmp    bl,cl
  41586f:	jbe    0x415866
  415871:	mov    ecx,0x39951223
  415876:	mov    al,0xb7
  415878:	sub    eax,0xddab47ca
  41587d:	adc    DWORD PTR [esp+ecx*2],ecx
  415880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415881:	push   ebx
  415882:	(bad)  
  415883:	mov    esp,0xad030e1d
  415888:	bound  edx,QWORD PTR [ecx+edx*8]
  41588b:	add    bl,0x2
  41588e:	sahf   
  41588f:	leave  
  415890:	fwait
  415891:	push   ebp
  415892:	pop    ebx
  415893:	xchg   ecx,eax
  415894:	stos   BYTE PTR es:[edi],al
  415895:	nop
  415896:	call   0x945bdf60
  41589b:	mov    esp,0xaaed9180
  4158a0:	pop    edx
  4158a1:	jmp    0xd5a5:0x124913a5
  4158a8:	out    dx,al
  4158a9:	cmp    BYTE PTR ds:0x6eb28b24,ch
  4158af:	mov    ebx,0x661e7b02
  4158b4:	sbb    BYTE PTR [edx+0x78fb9fc4],dh
  4158ba:	mov    bh,0x6f
  4158bc:	push   0x4f
  4158be:	jns    0x41584f
  4158c0:	adc    dh,al
  4158c2:	dec    eax
  4158c3:	jno    0x41590f
  4158c5:	stos   BYTE PTR es:[edi],al
  4158c6:	xchg   ebp,eax
  4158c7:	jb     0x4158fa
  4158c9:	adc    ecx,esi
  4158cb:	or     DWORD PTR [ebx],esp
  4158cd:	dec    ecx
  4158ce:	push   esi
  4158cf:	sub    BYTE PTR [edi+0x78],0x93
  4158d3:	pop    edi
  4158d4:	and    esp,0xffffff8d
  4158d7:	dec    ecx
  4158d8:	pop    ebp
  4158d9:	mov    cl,0x5c
  4158db:	lods   ax,WORD PTR ds:[esi]
  4158dd:	dec    edx
  4158de:	xchg   esi,eax
  4158df:	cdq    
  4158e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158e1:	mov    dl,0x5c
  4158e3:	pop    es
  4158e4:	add    BYTE PTR [ebp+0x11],bh
  4158e7:	dec    esi
  4158e8:	jns    0x415962
  4158ea:	aas    
  4158eb:	xlat   BYTE PTR ds:[ebx]
  4158ec:	mov    al,0x2c
  4158ee:	or     al,0xe1
  4158f0:	mov    al,ds:0xf14b618b
  4158f5:	shl    dl,0xd2
  4158f8:	xor    DWORD PTR [ebp-0x3f],eax
  4158fb:	mov    al,0x70
  4158fd:	rep outs dx,DWORD PTR ds:[esi]
  4158ff:	loopne 0x4158f5
  415901:	ror    bh,1
  415903:	fadd   DWORD PTR [edx]
  415905:	push   cs
  415906:	loopne 0x415944
  415908:	call   0xb063:0xe8d9cef
  41590f:	int3   
  415910:	dec    edi
  415911:	mov    bl,0x8f
  415913:	pop    edx
  415914:	jno    0x415986
  415916:	push   eax
  415917:	stc    
  415918:	fmul   DWORD PTR [esi+0x458f6a33]
  41591e:	out    dx,al
  41591f:	sub    ch,ah
  415921:	ret    0x9006
  415924:	xchg   esp,eax
  415925:	sbb    al,0x5d
  415927:	inc    eax
  415928:	or     eax,0xb4e27e7d
  41592d:	repz aam 0x5b
  415930:	jp     0x415958
  415932:	adc    al,BYTE PTR [edx]
  415934:	cmp    al,0x8
  415936:	clc    
  415937:	cli    
  415938:	xor    BYTE PTR [eax],bh
  41593a:	jns    0x415959
  41593c:	and    esi,edx
  41593e:	fsubr  DWORD PTR ds:0x9d6827f4
  415944:	dec    esp
  415945:	cmp    bh,bl
  415947:	sbb    DWORD PTR [edi],ecx
  415949:	je     0x415902
  41594b:	and    DWORD PTR [edx],ebx
  41594d:	js     0x4159c9
  41594f:	ja     0x41593f
  415951:	scas   al,BYTE PTR es:[edi]
  415952:	lds    ebp,FWORD PTR [edx]
  415954:	(bad)  
  415955:	stos   BYTE PTR es:[edi],al
  415956:	cs enter 0x8b1a,0xee
  41595b:	aam    0xb2
  41595d:	cwde   
  41595e:	push   ebp
  41595f:	mov    BYTE PTR [ebp+eiz*8+0x32],ah
  415963:	add    BYTE PTR [ecx+0x54],al
  415966:	cmp    ecx,DWORD PTR [esi-0x34]
  415969:	(bad)  
  41596a:	cmp    DWORD PTR [ebx],esp
  41596c:	adc    eax,0x56c76a20
  415971:	inc    esi
  415972:	inc    eax
  415973:	sbb    BYTE PTR [esi-0x54],al
  415976:	fcomp  QWORD PTR [edx-0x684ab41]
  41597c:	repnz sbb DWORD PTR [ecx+0x5e],edx
  415980:	sahf   
  415981:	fisub  WORD PTR [ebp-0x4b]
  415984:	cs add eax,0xfd84c35a
  41598a:	bnd jno 0x4159a4
  41598d:	mov    ebx,0x933eeb9b
  415992:	mov    bh,0x73
  415994:	fisub  WORD PTR [eax-0x6]
  415997:	mov    eax,ds:0x15f5792
  41599c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41599d:	into   
  41599e:	popf   
  41599f:	call   0x945a406d
  4159a4:	in     al,0x47
  4159a6:	lods   eax,DWORD PTR ds:[esi]
  4159a7:	jne    0x41593d
  4159a9:	adc    al,0x6f
  4159ab:	sub    ecx,DWORD PTR [ecx]
  4159ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ae:	daa    
  4159af:	repz add DWORD PTR gs:[eax+0x6d],edx
  4159b4:	pushf  
  4159b5:	xor    BYTE PTR [eax-0x31],bl
  4159b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159b9:	cmp    BYTE PTR [ecx+0x68bdb2f2],ch
  4159bf:	sbb    bl,dh
  4159c1:	push   eax
  4159c2:	sbb    ecx,DWORD PTR [ebx-0x61d66121]
  4159c8:	push   ebx
  4159c9:	pushf  
  4159ca:	je     0x41597d
  4159cc:	stos   BYTE PTR es:[edi],al
  4159cd:	jp     0x41599a
  4159cf:	bound  esi,QWORD PTR [ecx-0x286691e0]
  4159d5:	js     0x4159e1
  4159d7:	rcr    DWORD PTR [ebp+eiz*8+0x7],0xd4
  4159dc:	mov    bh,0x79
  4159de:	and    BYTE PTR [edi+edx*8+0x5],al
  4159e2:	xchg   edx,eax
  4159e3:	jmp    0xbcd93c26
  4159e8:	sub    eax,DWORD PTR [ebp+0x3]
  4159eb:	ds (bad) 
  4159ed:	(bad)  
  4159ee:	ds mov al,0x43
  4159f1:	mov    esp,0x98572b2c
  4159f6:	hlt    
  4159f7:	pop    edi
  4159f8:	pop    ss
  4159f9:	add    esp,esp
  4159fb:	sub    eax,0xfaeaf546
  415a00:	push   ss
  415a01:	xor    BYTE PTR [edx+ecx*8-0x22dc67e5],ch
  415a08:	push   0x817920fa
  415a0d:	mov    edx,0x8d3c5091
  415a12:	xchg   ebx,eax
  415a13:	test   DWORD PTR [edx+0x1495cf3e],eax
  415a19:	dec    eax
  415a1a:	hlt    
  415a1b:	add    edx,DWORD PTR [ebx+0x15fe2fc1]
  415a21:	test   eax,0x3e1600a1
  415a26:	pop    eax
  415a27:	ret    0x3c1d
  415a2a:	shl    DWORD PTR [esi-0x626426e0],0x12
  415a31:	test   BYTE PTR [esi-0x46],0xb5
  415a35:	mov    ebp,0x307142ae
  415a3a:	sbb    esp,DWORD PTR [eax+0x6a]
  415a3d:	or     edi,DWORD PTR [edx+0x29]
  415a40:	mov    edi,0x8f7f0d03
  415a45:	jo     0x415ac4
  415a47:	adc    edi,DWORD PTR [eax]
  415a49:	sahf   
  415a4a:	adc    dl,BYTE PTR [ebx]
  415a4c:	cdq    
  415a4d:	in     al,dx
  415a4e:	dec    ebp
  415a4f:	test   DWORD PTR [ecx+0x173f3d23],ebx
  415a55:	inc    esi
  415a56:	jp     0x415a92
  415a58:	cmc    
  415a59:	std    
  415a5a:	mov    edx,DWORD PTR [esi+0x40]
  415a5d:	dec    ebp
  415a5e:	xor    bl,BYTE PTR [esi]
  415a60:	cs loope 0x415a3e
  415a63:	add    al,0xb9
  415a65:	test   eax,0x5e8890b1
  415a6a:	xchg   ebx,eax
  415a6b:	pop    ecx
  415a6c:	dec    esp
  415a6d:	fimul  DWORD PTR [edi+0x6b]
  415a70:	ins    BYTE PTR es:[edi],dx
  415a71:	xchg   edi,eax
  415a72:	in     al,0x6d
  415a74:	bound  edi,QWORD PTR [ebx]
  415a76:	xchg   esp,eax
  415a77:	inc    ecx
  415a78:	ss out 0x18,eax
  415a7b:	jmp    0x415a59
  415a7d:	push   0x780943b
  415a82:	dec    esp
  415a83:	mov    esi,0xab286e58
  415a88:	jmp    0x415ac6
  415a8a:	sbb    DWORD PTR [edx+eiz*2+0x28bbb8dd],edx
  415a91:	shr    DWORD PTR [ecx],0x3b
  415a94:	je     0x415a1a
  415a96:	and    DWORD PTR [ebx-0x58fe1653],edi
  415a9c:	sbb    DWORD PTR [esi],esi
  415a9e:	jb     0x415a8a
  415aa0:	xchg   esi,eax
  415aa1:	adc    DWORD PTR [esi+eax*8+0x44d3c95a],ecx
  415aa8:	mov    BYTE PTR [ebx-0x29f5e7da],bh
  415aae:	retf   
  415aaf:	or     esp,DWORD PTR [esi+0x60]
  415ab2:	cmp    eax,0x68ba07e9
  415ab7:	add    ah,BYTE PTR [ecx-0x751f4305]
  415abd:	sub    DWORD PTR ds:0x798fe050,ebx
  415ac3:	cld    
  415ac4:	sbb    al,0x2a
  415ac6:	inc    ebx
  415ac7:	das    
  415ac8:	sahf   
  415ac9:	stc    
  415aca:	lds    eax,FWORD PTR [edx]
  415acc:	fmulp  st(5),st
  415ace:	mov    dl,0xd0
  415ad0:	pop    ebp
  415ad1:	into   
  415ad2:	mov    ecx,edi
  415ad4:	test   al,0xf4
  415ad6:	sub    eax,0x3a3dae91
  415adb:	lock inc ecx
  415add:	in     eax,0x82
  415adf:	sbb    dh,BYTE PTR [ebx-0x6825c9e3]
  415ae5:	sub    edi,DWORD PTR [ebp-0x285854af]
  415aeb:	dec    edx
  415aec:	mov    ecx,0x414195f1
  415af1:	xor    eax,0xd61d5227
  415af6:	je     0x415ad2
  415af8:	xchg   esp,eax
  415af9:	push   ecx
  415afa:	sar    BYTE PTR [ebp-0x8],1
  415afd:	outs   dx,BYTE PTR ds:[esi]
  415afe:	aad    0x37
  415b00:	push   esp
  415b01:	fwait
  415b02:	cs (bad) 
  415b04:	sub    esi,ebp
  415b06:	leave  
  415b07:	inc    eax
  415b08:	mov    al,ds:0x2b4095c5
  415b0d:	sbb    dh,BYTE PTR [edi-0x1954dd49]
  415b13:	std    
  415b14:	neg    BYTE PTR [edx+0x73bc2dcf]
  415b1a:	mov    bl,0x6
  415b1c:	and    BYTE PTR [edx-0x3a47008b],dh
  415b22:	retf   0x12f6
  415b25:	mov    eax,0x92b4a8ac
  415b2a:	ret    0xf359
  415b2d:	sub    cl,bh
  415b2f:	fidivr WORD PTR [ecx+ecx*8]
  415b32:	imul   BYTE PTR [edx]
  415b34:	adc    DWORD PTR [edx],ecx
  415b36:	(bad)  
  415b37:	gs jno 0x415ac3
  415b3a:	fstp   DWORD PTR [esi+ebp*4]
  415b3d:	out    0xc0,al
  415b3f:	out    0xb2,eax
  415b41:	xchg   esp,eax
  415b42:	sar    BYTE PTR [ebp-0x267b7d35],cl
  415b48:	dec    ecx
  415b49:	(bad)  
  415b4a:	cmp    al,0x5a
  415b4c:	push   eax
  415b4d:	sti    
  415b4e:	imul   eax,esp
  415b51:	sub    al,0xd4
  415b53:	adc    al,BYTE PTR [edi-0x29]
  415b56:	add    DWORD PTR [esi+eax*2+0x48],esi
  415b5a:	xor    al,0x3a
  415b5c:	cmc    
  415b5d:	fdivr  st,st(3)
  415b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b60:	arpl   ax,cx
  415b62:	and    DWORD PTR [ebp-0x6c],esp
  415b65:	(bad)  
  415b67:	and    ebx,DWORD PTR [ecx]
  415b69:	out    dx,eax
  415b6a:	fisttp QWORD PTR [ecx+0x46]
  415b6d:	imul   esp,DWORD PTR [ebx-0x456d44a1],0xffffffc5
  415b74:	scas   eax,DWORD PTR es:[edi]
  415b75:	jns    0x415bbc
  415b77:	ror    BYTE PTR [ebx+0x2a],cl
  415b7a:	jge    0x415b3e
  415b7c:	test   BYTE PTR [ecx],bl
  415b7e:	sbb    ebx,eax
  415b80:	dec    eax
  415b81:	addr16 or ah,ch
  415b84:	mov    esi,0xef02c16a
  415b89:	inc    ecx
  415b8a:	push   esp
  415b8b:	inc    ebx
  415b8c:	mov    edi,0x578b6985
  415b91:	test   DWORD PTR [esp+edi*1+0x43],eax
  415b95:	test   ch,dl
  415b97:	xor    BYTE PTR ds:0x78bf19df,bh
  415b9d:	lds    edx,FWORD PTR [ebx+0x76]
  415ba0:	mov    edi,0x41f5835d
  415ba5:	scas   al,BYTE PTR es:[edi]
  415ba6:	push   0xffffffbc
  415ba8:	enter  0xf28d,0xd6
  415bac:	arpl   cx,sp
  415bae:	mov    ecx,0x57ad5bb3
  415bb3:	stos   DWORD PTR es:[edi],eax
  415bb4:	out    dx,eax
  415bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb6:	jl     0x415bf6
  415bb8:	cmc    
  415bb9:	rcl    DWORD PTR [eax],cl
  415bbb:	int    0x2c
  415bbd:	jl     0x415bd7
  415bbf:	scas   al,BYTE PTR es:[edi]
  415bc0:	mov    esp,0x7001ecc7
  415bc5:	and    DWORD PTR [eax+edi*4+0x67],ecx
  415bc9:	push   ds
  415bca:	bound  ecx,QWORD PTR [edi+0x79]
  415bcd:	add    al,BYTE PTR [ecx-0x72eca301]
  415bd3:	lods   eax,DWORD PTR ds:[esi]
  415bd4:	int    0x22
  415bd6:	mov    al,0xe8
  415bd8:	mov    BYTE PTR [edx+0x7a],ah
  415bdb:	adc    ecx,ecx
  415bdd:	xlat   BYTE PTR ds:[ebx]
  415bde:	fisttp WORD PTR [ecx-0x78d9cbce]
  415be4:	iret   
  415be5:	loopne 0x415c46
  415be7:	fs mov bh,0x46
  415bea:	mov    cl,0x61
  415bec:	ss push 0x74dc2cea
  415bf2:	xor    eax,0xdd004a1c
  415bf7:	push   ecx
  415bf8:	or     al,0xe6
  415bfa:	mov    dh,0xb3
  415bfc:	push   eax
  415bfd:	fnstcw WORD PTR [esi]
  415bff:	mov    BYTE PTR [edx-0x19],ch
  415c02:	sub    esp,ebx
  415c04:	jne    0x415c43
  415c06:	sbb    DWORD PTR [eax+eax*4-0x6247d6ad],eax
  415c0d:	das    
  415c0e:	out    0xf0,al
  415c10:	dec    eax
  415c11:	rcr    DWORD PTR [eax-0xb94a36b],0xe1
  415c18:	jle    0x415be6
  415c1a:	(bad)  
  415c1b:	out    0xa1,eax
  415c1d:	adc    al,cl
  415c1f:	je     0x415c6b
  415c21:	div    BYTE PTR [edx-0x3]
  415c24:	loop   0x415c80
  415c26:	in     eax,dx
  415c27:	inc    edx
  415c28:	lods   al,BYTE PTR ds:[esi]
  415c29:	pop    es
  415c2a:	into   
  415c2b:	cld    
  415c2c:	lea    ebx,[ecx]
  415c2e:	xchg   esp,eax
  415c2f:	inc    ebx
  415c30:	fwait
  415c31:	push   cs
  415c32:	mov    ch,0x63
  415c34:	lahf   
  415c35:	gs pusha 
  415c37:	repnz retf 
  415c39:	lahf   
  415c3a:	arpl   di,dx
  415c3c:	retf   0x2ce0
  415c3f:	ds mov edx,0xd02c711b
  415c45:	push   ebx
  415c46:	mov    bl,0x54
  415c48:	sti    
  415c49:	or     BYTE PTR [ebx+0x42],ah
  415c4c:	or     dl,ch
  415c4e:	jp     0x415c85
  415c50:	adc    edi,DWORD PTR [esi]
  415c52:	repz lahf 
  415c54:	add    eax,0xcd75de21
  415c59:	xor    eax,0x6e8aacfd
  415c5e:	scas   al,BYTE PTR es:[di]
  415c60:	jge    0x415c38
  415c62:	sti    
  415c63:	stc    
  415c64:	data16 and al,0x52
  415c67:	add    BYTE PTR [eax+ebp*8-0x6bf5ecef],ch
  415c6e:	cmp    eax,0x11a19579
  415c73:	xchg   BYTE PTR [ebp-0x1f29c49b],cl
  415c79:	push   ds
  415c7a:	inc    esp
  415c7b:	cmp    bl,BYTE PTR [eax]
  415c7d:	fisub  WORD PTR [eax]
  415c7f:	popf   
  415c80:	xchg   esp,eax
  415c81:	xchg   BYTE PTR ds:[ecx-0xa57e966],ch
  415c88:	cmp    al,0x12
  415c8a:	and    BYTE PTR [ebx],dl
  415c8c:	fwait
  415c8d:	cwde   
  415c8e:	jb     0x415cd5
  415c90:	lods   eax,DWORD PTR ds:[esi]
  415c91:	or     esi,DWORD PTR [ebx+0x45]
  415c94:	sysret 
  415c96:	call   0xc900d5a6
  415c9b:	sub    DWORD PTR es:[esi+ebp*2-0x35ad0fd8],ebp
  415ca3:	mov    al,0xe5
  415ca5:	cmp    al,0xb
  415ca7:	sar    DWORD PTR [eax+0x3d],0x60
  415cab:	repnz jecxz 0x415c63
  415cae:	data16 repnz fdivr st,st(5)
  415cb3:	dec    edx
  415cb4:	outs   dx,BYTE PTR ds:[esi]
  415cb5:	out    0xb5,al
  415cb7:	shr    bl,0x3c
  415cba:	dec    ebp
  415cbb:	lea    esp,[esi+0x256a376c]
  415cc1:	sti    
  415cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc3:	and    al,0x0
  415cc5:	jl     0x415cd2
  415cc7:	and    cl,bl
  415cc9:	and    cl,bh
  415ccb:	push   eax
  415ccc:	js     0x415cb2
  415cce:	test   al,0x63
  415cd0:	retf   0x919b
  415cd3:	xor    cl,BYTE PTR [ecx+0x3f6046b3]
  415cd9:	loope  0x415d36
  415cdb:	jmp    0xe51f:0xbdb39e56
  415ce2:	lea    edx,[esi+0x3cf0de1e]
  415ce8:	and    dl,BYTE PTR [ebx]
  415cea:	sbb    cl,BYTE PTR [edi]
  415cec:	hlt    
  415ced:	enter  0xfc23,0xe
  415cf1:	addr16 out 0x6c,eax
  415cf4:	mov    WORD PTR [eax+0x5586afda],ds
  415cfa:	retf   0xcbd9
  415cfd:	test   BYTE PTR [esi-0x5246b33],al
  415d03:	jle    0x415d19
  415d05:	add    eax,0xb06e8eda
  415d0a:	rol    BYTE PTR [ecx],1
  415d0c:	cmp    al,0xac
  415d0e:	ja     0x415d43
  415d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d11:	or     esi,DWORD PTR [ecx]
  415d13:	jae    0x415d77
  415d15:	mov    ecx,ebp
  415d17:	(bad)  
  415d18:	(bad)
  415d1b:	jecxz  0x415ce3
  415d1d:	leave  
  415d1e:	out    dx,al
  415d1f:	mov    ds:0xb6d645ac,eax
  415d24:	sub    al,0xf8
  415d26:	jmp    0x2f766ba4
  415d2b:	test   al,0xcb
  415d2d:	addr16 pop ds
  415d2f:	sbb    ebp,edi
  415d31:	xchg   edi,eax
  415d32:	inc    ebx
  415d33:	fnsave [esi-0x2529a92a]
  415d39:	sar    BYTE PTR [esi+0x74bac58],cl
  415d3f:	out    dx,al
  415d40:	fstp   TBYTE PTR [ebx+0x4ccf5f9c]
  415d46:	mov    dh,0x99
  415d48:	fisub  WORD PTR [edi+0x11]
  415d4b:	push   edi
  415d4c:	xchg   ecx,eax
  415d4d:	pop    ecx
  415d4e:	mov    bl,0x9a
  415d50:	cmp    DWORD PTR ds:0xf3a4c2f8,ebx
  415d56:	les    esi,FWORD PTR [ebx-0x4766688]
  415d5c:	sub    bh,BYTE PTR [edx-0x9]
  415d5f:	call   0x9066:0xe03cbba
  415d66:	sub    DWORD PTR [edx+esi*2-0x1e],ebx
  415d6a:	std    
  415d6b:	enter  0x51d4,0x59
  415d6f:	neg    DWORD PTR [edx-0x7f3fdf16]
  415d75:	js     0x415d7e
  415d77:	add    DWORD PTR [edx-0x6a],ecx
  415d7a:	gs ins BYTE PTR es:[edi],dx
  415d7c:	jp     0x415dd5
  415d7e:	and    DWORD PTR [esi-0x7e],eax
  415d81:	stos   BYTE PTR es:[edi],al
  415d82:	lahf   
  415d83:	and    al,ah
  415d85:	sahf   
  415d86:	xlat   BYTE PTR ds:[ebx]
  415d87:	arpl   si,si
  415d89:	int    0x37
  415d8b:	pop    ds
  415d8c:	inc    edx
  415d8d:	ins    DWORD PTR es:[edi],dx
  415d8e:	rcr    DWORD PTR [ebx-0x21],0xb9
  415d92:	call   0x9f8d:0xfa76b387
  415d99:	dec    ecx
  415d9a:	add    al,0x15
  415d9c:	aas    
  415d9d:	fisubr DWORD PTR [edx]
  415d9f:	mov    ebp,0xb3f554f3
  415da4:	sahf   
  415da5:	push   edi
  415da6:	mov    esi,0x89b64f74
  415dab:	xchg   esi,eax
  415dac:	add    al,0x5
  415dae:	fidivr DWORD PTR [ecx+0x3043b321]
  415db4:	outs   dx,BYTE PTR ds:[esi]
  415db5:	mov    al,ds:0x96aafeb0
  415dba:	leave  
  415dbb:	or     eax,0x6724dbee
  415dc0:	or     ch,BYTE PTR [esp+ecx*1]
  415dc3:	shr    DWORD PTR [esi-0x58316808],1
  415dc9:	jg     0x415da3
  415dcb:	mov    ebx,0x12dc5651
  415dd0:	sahf   
  415dd1:	push   es
  415dd2:	or     DWORD PTR [esi],esi
  415dd4:	inc    ecx
  415dd5:	inc    eax
  415dd6:	mov    ah,0xba
  415dd8:	lds    ebx,FWORD PTR [ebx]
  415dda:	cmp    BYTE PTR [ebp+0x17eb990d],0x55
  415de1:	mov    gs,edx
  415de3:	push   ss
  415de4:	xchg   ebp,eax
  415de5:	push   ecx
  415de6:	les    eax,FWORD PTR [edi-0x22831084]
  415dec:	or     eax,0x4b5deea
  415df1:	mov    eax,0xee4c55a0
  415df6:	mov    bl,0x85
  415df8:	push   0xb542ef12
  415dfd:	loopne 0x415e11
  415dff:	xchg   esi,eax
  415e00:	cmp    bl,BYTE PTR [ecx-0x6b]
  415e03:	mov    al,ds:0xd9739ee3
  415e08:	push   ecx
  415e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e0a:	inc    ebp
  415e0b:	mov    edx,0x5aeaeb2a
  415e10:	push   0xa073c5a7
  415e15:	in     eax,0x3a
  415e17:	and    ecx,ecx
  415e19:	data16 je 0x415e0c
  415e1c:	push   esp
  415e1d:	pop    ss
  415e1e:	in     al,dx
  415e1f:	xchg   ch,ch
  415e21:	jg     0x415e86
  415e23:	pop    edx
  415e24:	fbld   TBYTE PTR es:[ebp-0x710c4dfb]
  415e2b:	(bad)  
  415e2c:	ins    BYTE PTR es:[edi],dx
  415e2d:	mov    esp,ebp
  415e2f:	aam    0x78
  415e31:	lahf   
  415e32:	cmp    BYTE PTR [esi+0x2b],0x51
  415e36:	gs lock inc edi
  415e39:	add    eax,0x9f5074b1
  415e3e:	adc    esi,esp
  415e40:	sbb    ch,BYTE PTR [esi-0x391e256d]
  415e46:	inc    esp
  415e47:	dec    eax
  415e48:	pop    ecx
  415e49:	pmaxsw mm1,QWORD PTR [edx+0x5e]
  415e4d:	int    0x89
  415e4f:	mov    ds:0x54c0170f,al
  415e54:	mov    dl,BYTE PTR fs:[ecx+0x74]
  415e58:	or     esi,esi
  415e5a:	mov    gs,WORD PTR [ecx-0x21]
  415e5d:	pop    ebp
  415e5e:	inc    esi
  415e5f:	mov    al,ds:0xf7a085a6
  415e64:	push   es
  415e65:	xchg   esi,eax
  415e66:	pop    esi
  415e67:	pop    esi
  415e68:	loop   0x415e3c
  415e6a:	stc    
  415e6b:	add    cl,dh
  415e6d:	mov    DWORD PTR [esi+ecx*8-0x9],edx
  415e71:	sbb    dh,BYTE PTR [ebx]
  415e73:	std    
  415e74:	jle    0x415e3b
  415e76:	xor    esp,DWORD PTR [esi]
  415e78:	sub    eax,0x1064edd7
  415e7d:	aaa    
  415e7e:	enter  0xb7ea,0x8
  415e82:	jae    0x415eb3
  415e84:	push   ecx
  415e85:	push   cs
  415e86:	sub    ah,0xae
  415e89:	sub    eax,0xc5280b67
  415e8e:	push   eax
  415e8f:	sbb    ecx,ecx
  415e91:	xchg   edx,eax
  415e92:	dec    esi
  415e93:	hlt    
  415e94:	xchg   DWORD PTR [ebx+ebp*4+0x1f78ef69],esp
  415e9b:	adc    bl,BYTE PTR [ecx]
  415e9d:	cmp    al,al
  415e9f:	jl     0x415efa
  415ea1:	cdq    
  415ea2:	sub    BYTE PTR [ebx],dh
  415ea4:	xchg   ebx,eax
  415ea5:	mov    ah,0x28
  415ea7:	(bad)  
  415ea8:	jg     0x415ee2
  415eaa:	xor    al,0x58
  415eac:	cli    
  415ead:	add    al,bl
  415eaf:	mov    cl,0x49
  415eb1:	dec    esi
  415eb2:	pop    ecx
  415eb3:	jnp    0x415eb3
  415eb5:	jl     0x415f01
  415eb7:	sub    ebp,DWORD PTR [edx-0x1a907bce]
  415ebd:	mov    edx,0xa888595a
  415ec2:	inc    esi
  415ec3:	adc    ebp,DWORD PTR [edx]
  415ec5:	xor    eax,0x5c0a8a57
  415eca:	inc    edx
  415ecb:	push   es
  415ecc:	sti    
  415ecd:	nop
  415ece:	ins    DWORD PTR es:[edi],dx
  415ecf:	lock dec ecx
  415ed1:	aad    0xcd
  415ed3:	inc    esp
  415ed4:	mov    al,0x8a
  415ed6:	add    ecx,ecx
  415ed8:	sar    DWORD PTR ds:0x8fe83747,0xc8
  415edf:	loop   0x415e8e
  415ee1:	push   edi
  415ee2:	push   es
  415ee3:	jne    0x415f3b
  415ee5:	ja     0x415f09
  415ee7:	test   eax,0xab5c7ea3
  415eec:	sbb    ebx,DWORD PTR ds:0x853fe643
  415ef2:	aas    
  415ef3:	outs   dx,BYTE PTR ds:[esi]
  415ef4:	fstp   st(4)
  415ef6:	xchg   ecx,eax
  415ef7:	xchg   BYTE PTR [edx-0x159d33bd],dh
  415efd:	lods   al,BYTE PTR ds:[esi]
  415efe:	xor    edi,DWORD PTR [ebx]
  415f00:	mov    cl,0x0
  415f02:	data16 and al,dh
  415f05:	int    0x6c
  415f07:	jg     0x415e9f
  415f09:	ss dec ecx
  415f0b:	retf   0x6bcc
  415f0e:	jmp    0x415eec
  415f10:	lods   al,BYTE PTR ds:[esi]
  415f11:	adc    eax,0x2028f2df
  415f16:	aam    0x53
  415f18:	xor    al,BYTE PTR [esp+esi*8+0x78]
  415f1c:	daa    
  415f1d:	cwde   
  415f1e:	dec    ecx
  415f1f:	mov    ah,0xaa
  415f21:	lds    esi,FWORD PTR [eax+0x70]
  415f24:	retf   
  415f25:	mov    ecx,0x7715aec7
  415f2a:	jae    0x415f56
  415f2c:	xchg   ebx,eax
  415f2d:	xor    bl,BYTE PTR [edi]
  415f2f:	mov    gs,WORD PTR [esi]
  415f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f32:	fisttp DWORD PTR [edi+0x7f91be21]
  415f38:	imul   edx,edi,0xfa481222
  415f3e:	or     al,0x89
  415f40:	mov    edi,0xd052dee3
  415f45:	test   al,0x83
  415f47:	ins    BYTE PTR es:[edi],dx
  415f48:	jmp    0xb405e39c
  415f4d:	pop    esp
  415f4e:	jo     0x415f33
  415f50:	iret   
  415f51:	lea    ecx,[edi-0x67]
  415f54:	pop    eax
  415f55:	jo     0x415f52
  415f57:	leave  
  415f58:	out    0x66,al
  415f5a:	or     al,0x49
  415f5c:	jae    0x415fad
  415f5e:	daa    
  415f5f:	mov    eax,ds:0x88891d0a
  415f64:	fimul  DWORD PTR [esi+0x62079521]
  415f6a:	xchg   esp,eax
  415f6b:	jge    0x415f41
  415f6d:	pop    ebx
  415f6e:	pushf  
  415f6f:	aam    0x90
  415f71:	xchg   BYTE PTR [ecx*1+0x6e233689],ch
  415f78:	sbb    edx,DWORD PTR [ecx-0x4c]
  415f7b:	add    bh,BYTE PTR [eax]
  415f7d:	push   0xfe5a31f7
  415f82:	and    ah,BYTE PTR [eax]
  415f84:	mov    eax,ds:0xa41f204e
  415f89:	lds    ebx,FWORD PTR [eax]
  415f8b:	cmp    al,BYTE PTR [ecx]
  415f8d:	push   esp
  415f8e:	push   eax
  415f8f:	daa    
  415f90:	jo     0x415f62
  415f92:	mov    al,0xdc
  415f94:	mov    dl,0x5
  415f96:	pop    ebx
  415f97:	in     eax,dx
  415f98:	cmp    al,0xc9
  415f9a:	sahf   
  415f9b:	leave  
  415f9c:	ins    BYTE PTR es:[edi],dx
  415f9d:	mov    ebp,0x352055b
  415fa2:	shr    BYTE PTR [esi],0x8
  415fa5:	sub    eax,0x76f98cae
  415faa:	dec    ebp
  415fab:	adc    al,0xdc
  415fad:	mov    edi,0x124e2c63
  415fb2:	or     edi,DWORD PTR [ebx*2-0xba17ec]
  415fb9:	rol    DWORD PTR [edi+edi*8+0xc283279],0x30
  415fc1:	and    eax,0x93f785a7
  415fc6:	mov    dl,0x1
  415fc8:	ror    BYTE PTR [ecx+0x8],cl
  415fcb:	imul   ebp,edx,0x921c1fcc
  415fd1:	xor    al,0x6c
  415fd3:	les    eax,FWORD PTR [ecx]
  415fd5:	jl     0x41602f
  415fd7:	loope  0x415ff9
  415fd9:	inc    ecx
  415fda:	mov    bl,0xa8
  415fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fdd:	cmp    al,0xbf
  415fdf:	adc    DWORD PTR [esp+edx*1+0x38c9347],esi
  415fe6:	add    BYTE PTR [eax+edx*8+0x74bc0dbb],al
  415fed:	jne    0x416060
  415fef:	data16 das 
  415ff1:	fisttp DWORD PTR ds:0x299228ac
  415ff7:	sub    DWORD PTR [eax+0x6a],ebp
  415ffa:	inc    ebx
  415ffb:	mov    al,0x7f
  415ffd:	jl     0x415fc3
  415fff:	das    
  416000:	pop    edx
  416001:	addr16 mov ds:0x7117,eax
  416005:	or     al,0xf6
  416007:	mov    bl,0x13
  416009:	iret   
  41600a:	and    esp,DWORD PTR [edi]
  41600c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41600d:	fs push ds
  41600f:	mov    ebx,0xc6e73589
  416014:	pop    esp
  416015:	mov    al,ds:0xd613119
  41601a:	jl     0x415fbb
  41601c:	mov    al,ds:0xa008b067
  416021:	neg    DWORD PTR [edi-0x61dd7fc6]
  416027:	mov    ?,WORD PTR [edx+0x4a]
  41602a:	mov    esi,0x61965d38
  41602f:	mov    dl,BYTE PTR [ecx+0x7331bd8e]
  416035:	ins    BYTE PTR es:[edi],dx
  416036:	mov    ah,0xe
  416038:	(bad)  
  416039:	imul   edx,DWORD PTR [esi],0x9b796047
  41603f:	loop   0x416045
  416041:	push   edx
  416042:	add    bl,BYTE PTR [esi+0x60e9516a]
  416048:	jnp    0x416021
  41604a:	fcos   
  41604c:	jg     0x41603a
  41604e:	push   edx
  41604f:	mov    ?,WORD PTR [ebx+0x2954d786]
  416055:	ror    BYTE PTR [ebx],cl
  416057:	outs   dx,BYTE PTR ds:[esi]
  416058:	fwait
  416059:	iret   
  41605a:	xor    esi,0xac24c499
  416060:	push   ebp
  416061:	std    
  416062:	retf   
  416063:	inc    ecx
  416064:	mov    ch,0xfa
  416066:	test   BYTE PTR [esi-0x33],0x2b
  41606a:	push   ss
  41606b:	mov    esp,0x56affd49
  416070:	jp     0x41609e
  416072:	dec    ecx
  416073:	adc    esi,DWORD PTR [esi+0x7afabbe9]
  416079:	rcr    al,1
  41607b:	sbb    al,0x52
  41607e:	xchg   esi,eax
  41607f:	out    0xa5,eax
  416081:	loopne 0x4160f7
  416083:	mov    WORD PTR [eax-0x2e],gs
  416086:	and    edx,DWORD PTR [ecx+0x7c]
  416089:	or     eax,edx
  41608b:	inc    esi
  41608c:	sub    eax,0xba468ccd
  416091:	mov    ecx,0xbb515d27
  416096:	jnp    0x416047
  416098:	jne    0x41605d
  41609a:	and    edx,0x41
  41609d:	mov    esi,0x5f0b4bee
  4160a2:	mov    eax,0x5442f506
  4160a7:	xchg   edx,eax
  4160a8:	mov    ah,0xda
  4160aa:	lahf   
  4160ab:	lea    ecx,[esi+0x51]
  4160ae:	scas   eax,DWORD PTR es:[edi]
  4160af:	mov    esp,0xb5363343
  4160b4:	shl    DWORD PTR [ecx+ebx*8-0x2b],0x8
  4160b9:	and    BYTE PTR [esi+0x43],0x8e
  4160bd:	jb     0x41613e
  4160bf:	mov    WORD PTR [edi-0x6858c11a],ds
  4160c5:	pushf  
  4160c6:	mov    ch,0x2d
  4160c8:	jg     0x41604e
  4160ca:	push   esi
  4160cb:	inc    edx
  4160cc:	out    dx,al
  4160cd:	mov    al,ds:0x60d87ae2
  4160d2:	mov    ch,0x41
  4160d4:	iret   
  4160d5:	push   ds
  4160d6:	adc    DWORD PTR [esi],edi
  4160d8:	inc    edi
  4160d9:	inc    ebx
  4160da:	inc    edx
  4160db:	into   
  4160dc:	lea    ebp,[ebx+edi*1]
  4160df:	mov    ebx,0x23a89f11
  4160e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e5:	dec    esi
  4160e6:	push   esi
  4160e7:	stos   DWORD PTR es:[edi],eax
  4160e8:	xchg   esp,eax
  4160e9:	(bad)  
  4160ea:	repz icebp 
  4160ec:	cmp    eax,0x5b08e4bd
  4160f1:	sahf   
  4160f2:	cli    
  4160f3:	adc    al,0xd1
  4160f5:	in     al,0xb3
  4160f7:	(bad)  
  4160f9:	out    0x2,al
  4160fb:	adc    edx,DWORD PTR [ebx-0x3a]
  4160fe:	or     al,0xa6
  416100:	imul   ebx,DWORD PTR [ecx+0x31e6ab],0x9b4c080d
  41610a:	mov    esp,0xcb545314
  41610f:	aam    0x3c
  416111:	inc    edx
  416112:	xor    DWORD PTR [ecx+0x34f7e309],0xffffffdb
  416119:	idiv   BYTE PTR [edi]
  41611b:	icebp  
  41611c:	cmc    
  41611d:	dec    esp
  41611e:	js     0x4160a4
  416120:	sti    
  416121:	mov    edx,0x893a3bc7
  416126:	mov    eax,0x10519135
  41612b:	(bad)  
  41612c:	cli    
  41612d:	push   0xf6e8d2e
  416132:	in     al,0xa7
  416134:	aas    
  416135:	sub    cl,ah
  416137:	xor    eax,0xb63c5f24
  41613c:	fimul  DWORD PTR [edx]
  41613e:	std    
  41613f:	or     DWORD PTR [edx],edx
  416141:	sbb    DWORD PTR [eax+0x6b4ca106],ebp
  416147:	stos   BYTE PTR es:[edi],al
  416148:	dec    esi
  416149:	dec    esi
  41614a:	jecxz  0x4161b5
  41614c:	and    BYTE PTR [esi-0x37],0xc1
  416150:	lods   eax,DWORD PTR ds:[esi]
  416151:	xchg   ecx,eax
  416152:	push   DWORD PTR [ebx+esi*1]
  416155:	sbb    dl,dl
  416157:	sbb    ebp,esi
  416159:	pop    eax
  41615a:	xchg   ebx,eax
  41615b:	aad    0x71
  41615d:	mov    edi,0x808eeefc
  416162:	dec    eax
  416163:	pushf  
  416164:	(bad)  
  416165:	in     eax,0x15
  416167:	add    edi,DWORD PTR [ecx+0x5dc46986]
  41616d:	lahf   
  41616e:	cmc    
  41616f:	jmp    0x416105
  416171:	xchg   esi,eax
  416172:	ret    
  416173:	and    BYTE PTR [ecx-0xa],ch
  416176:	into   
  416177:	fcom   DWORD PTR [edx+0x6b]
  41617a:	mov    cl,0x53
  41617c:	inc    eax
  41617d:	test   al,0x91
  41617f:	jne    0x4161a2
  416181:	sbb    bh,bh
  416183:	push   ebp
  416184:	outs   dx,BYTE PTR ds:[esi]
  416185:	cmp    DWORD PTR [eax-0x1431bed6],ebp
  41618b:	pop    ss
  41618c:	jns    0x4161e6
  41618e:	jae    0x416153
  416190:	xor    ebp,edi
  416192:	(bad)  
  416193:	repnz dec eax
  416195:	jnp    0x4161e7
  416197:	arpl   WORD PTR [eiz*4+0x3701c711],ax
  41619e:	lds    ebp,FWORD PTR [ebx+edx*2]
  4161a1:	mov    ds:0x5a258133,eax
  4161a6:	sbb    ecx,eax
  4161a8:	jp     0x416189
  4161aa:	call   0xeb2e:0x655c6146
  4161b1:	or     eax,0x529d21e9
  4161b6:	(bad)  
  4161b7:	pop    esi
  4161b8:	fstp   DWORD PTR [eax-0x55]
  4161bb:	shl    DWORD PTR [ebx+0x730e10],cl
  4161c1:	adc    al,0xef
  4161c3:	sbb    edx,eax
  4161c5:	push   esi
  4161c6:	fbstp  TBYTE PTR [ebx]
  4161c8:	adc    ch,BYTE PTR [ebp+0x6fa93c25]
  4161ce:	push   ds
  4161cf:	pop    esp
  4161d0:	xlat   BYTE PTR ds:[ebx]
  4161d1:	inc    eax
  4161d2:	rcr    ch,0x69
  4161d5:	in     al,0x6d
  4161d7:	adc    edi,DWORD PTR [eax]
  4161d9:	test   al,0x65
  4161db:	retf   0xfe9
  4161de:	ud1    esi,edi
  4161e1:	dec    edx
  4161e2:	data16 stos BYTE PTR es:[edi],al
  4161e4:	mov    ebp,0xae569f89
  4161e9:	dec    esp
  4161ea:	push   ecx
  4161eb:	in     eax,0x3a
  4161ed:	mov    ds:0xa61d95fb,al
  4161f2:	cs pop edx
  4161f4:	xor    al,0xa4
  4161f6:	mov    ds:0x72593f17,eax
  4161fb:	or     edx,DWORD PTR [ebx-0x32852d5e]
  416201:	aaa    
  416202:	lods   al,BYTE PTR ds:[esi]
  416203:	xor    DWORD PTR [edx+0x66],ecx
  416206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416207:	sub    esp,DWORD PTR [ebx-0x8]
  41620a:	int    0x52
  41620c:	es and bh,0x37
  416210:	sub    al,0x8d
  416212:	fwait
  416213:	std    
  416214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416215:	add    DWORD PTR [ecx],ebx
  416217:	je     0x41624e
  416219:	cmp    BYTE PTR ds:0xb47cc28e,0x6a
  416220:	lds    ebp,FWORD PTR [ebp+0x21cb389a]
  416226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416227:	mov    ah,0xe3
  416229:	fiadd  WORD PTR [ebx+esi*1-0x7f]
  41622d:	inc    ebx
  41622e:	adc    esi,DWORD PTR [ecx+edi*2-0x7c]
  416232:	xchg   ebp,eax
  416233:	mov    esp,DWORD PTR [ecx-0x15027e04]
  416239:	dec    esi
  41623a:	rcr    DWORD PTR [edx],cl
  41623c:	or     DWORD PTR [ebp+edx*1-0x46727267],esp
  416243:	sbb    bh,BYTE PTR [ebx-0x682b604f]
  416249:	test   BYTE PTR [ebp-0x11],dl
  41624c:	pop    eax
  41624d:	push   edi
  41624e:	jle    0x416204
  416250:	cmp    esp,DWORD PTR [ebp+0x1febfe16]
  416256:	cdq    
  416257:	jge    0x4161e4
  416259:	push   cs
  41625a:	sahf   
  41625b:	mov    DWORD PTR [ebp-0x57d05efa],esp
  416261:	and    BYTE PTR [ecx+0x7d7ebe76],ch
  416267:	ror    BYTE PTR [ebx+0x32727758],1
  41626d:	push   esi
  41626e:	loop   0x41622a
  416270:	jecxz  0x41622f
  416272:	and    al,BYTE PTR [ebx]
  416274:	outs   dx,DWORD PTR ds:[esi]
  416275:	ins    DWORD PTR es:[edi],dx
  416276:	loop   0x416202
  416278:	inc    BYTE PTR [ebx]
  41627a:	retf   
  41627b:	jae    0x4162d9
  41627d:	xor    eax,0xfd85e0c
  416282:	push   ss
  416283:	fcomp  QWORD PTR [esi]
  416285:	sub    ch,BYTE PTR [edx]
  416287:	inc    ebp
  416288:	push   es
  416289:	shl    BYTE PTR [edi],cl
  41628b:	pop    ebx
  41628c:	adc    bl,dh
  41628e:	cwde   
  41628f:	(bad)  
  416290:	jmp    0xaea7:0x96442ca2
  416297:	add    DWORD PTR [edx],0xa6620c92
  41629d:	or     BYTE PTR [eax-0x18],ch
  4162a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162a1:	add    ebp,DWORD PTR [ebx-0x7b]
  4162a4:	icebp  
  4162a5:	hlt    
  4162a6:	sar    BYTE PTR [esp+ecx*1],cl
  4162a9:	cmc    
  4162aa:	jo     0x416304
  4162ac:	jo     0x416268
  4162ae:	pop    ecx
  4162af:	mov    bl,0x95
  4162b1:	gs out 0xdb,eax
  4162b4:	aam    0xce
  4162b6:	pop    ebx
  4162b7:	hlt    
  4162b8:	push   ds
  4162b9:	outs   dx,DWORD PTR ds:[esi]
  4162ba:	and    DWORD PTR [eax-0x67],0x77452fa7
  4162c1:	push   ebx
  4162c2:	adc    esp,ecx
  4162c4:	push   esi
  4162c5:	lea    ebx,[eax+0x4a]
  4162c8:	ror    DWORD PTR [ebx],1
  4162ca:	(bad)  
  4162cb:	dec    ebp
  4162cc:	jne    0x416287
  4162ce:	loopne 0x416329
  4162d0:	add    DWORD PTR [edi+0xaebb78d],0xffffff90
  4162d7:	adc    esi,DWORD PTR [edi-0x4b17f15d]
  4162dd:	xchg   DWORD PTR [edi+0x5b280fdd],eax
  4162e3:	jbe    0x4162f9
  4162e5:	cdq    
  4162e6:	test   BYTE PTR [ebp-0x12],bh
  4162e9:	dec    edi
  4162ea:	arpl   WORD PTR [esi+0x66a6df61],di
  4162f0:	stos   DWORD PTR es:[edi],eax
  4162f1:	fsub   DWORD PTR [ebp+0x1299e46e]
  4162f7:	daa    
  4162f8:	mov    ebx,0xd734193d
  4162fd:	jmp    0x3a7b3d24
  416302:	fdiv   DWORD PTR ds:0xc13d9c7f
  416308:	xchg   eax,edi
  41630a:	sub    DWORD PTR [edi+ecx*2-0x2],edi
  41630e:	sub    BYTE PTR [ebp-0xc83cd64],al
  416314:	(bad)  
  416315:	aam    0x6f
  416317:	xchg   ecx,eax
  416318:	pop    eax
  416319:	jecxz  0x4162d0
  41631b:	mov    edx,0x2cd1da88
  416320:	xchg   ebp,eax
  416321:	jp     0x4162cf
  416323:	hlt    
  416324:	(bad)  
  416325:	pop    ebx
  416326:	es jl  0x41639e
  416329:	fnstsw WORD PTR [bx+di-0x49]
  41632d:	jge    0x41638d
  41632f:	or     eax,0x2d683349
  416334:	and    dl,dl
  416336:	psubsw mm3,QWORD PTR [edi]
  416339:	push   ebp
  41633a:	inc    eax
  41633b:	out    0x54,al
  41633d:	test   DWORD PTR [edx+0x6da03ed8],0x50b51e0d
  416347:	mov    bl,0x1c
  416349:	sbb    DWORD PTR [edx+0x1d8f1b2d],ebx
  41634f:	retf   
  416350:	pop    es
  416351:	outs   dx,BYTE PTR ds:[esi]
  416352:	mov    esi,esp
  416354:	out    dx,al
  416355:	cli    
  416356:	mov    ebp,0x633e51b0
  41635b:	rol    BYTE PTR [ebx],0xd2
  41635e:	xchg   esi,eax
  41635f:	cdq    
  416360:	pusha  
  416361:	pop    ecx
  416362:	cld    
  416363:	icebp  
  416364:	fist   WORD PTR [edx-0x22a39272]
  41636a:	clc    
  41636b:	mov    dl,0x33
  41636d:	rcl    DWORD PTR [esi],cl
  41636f:	pop    ebp
  416370:	lock not DWORD PTR [eax+ebx*8]
  416374:	(bad)  
  416375:	je     0x416353
  416377:	aaa    
  416378:	sbb    cl,BYTE PTR [ebx+0x67]
  41637b:	xor    DWORD PTR [ebp-0x30],ebp
  41637e:	ret    
  41637f:	in     al,dx
  416380:	mov    edi,DWORD PTR [eax+0x71]
  416383:	scas   eax,DWORD PTR es:[edi]
  416384:	adc    DWORD PTR [esi+0x27],ecx
  416387:	xchg   ebp,eax
  416388:	das    
  416389:	add    BYTE PTR [ebp+edi*1-0x5b3f1c53],ch
  416390:	fstp   st(4)
  416392:	jae    0x416408
  416394:	enter  0xdc00,0xb7
  416398:	outs   dx,DWORD PTR ds:[esi]
  416399:	mov    edi,0xa8136d48
  41639e:	pusha  
  41639f:	adc    al,0xe5
  4163a1:	mov    ebp,0x30671197
  4163a6:	add    eax,0x2eb7424f
  4163ab:	and    DWORD PTR [ecx],0xe592b17a
  4163b1:	shr    DWORD PTR [edi],1
  4163b3:	mov    ecx,0x6ab54681
  4163b8:	fs mov cl,0x7a
  4163bb:	les    ecx,FWORD PTR [edx]
  4163bd:	mov    edi,0x972bdfed
  4163c2:	pop    ss
  4163c3:	arpl   WORD PTR ds:0xf090b17d,bx
  4163c9:	pop    ss
  4163ca:	lods   eax,DWORD PTR ds:[esi]
  4163cb:	mov    edi,0x66608390
  4163d0:	(bad)  
  4163d2:	arpl   WORD PTR [edi-0xd],si
  4163d5:	jg     0x41639a
  4163d7:	jl     0x416427
  4163d9:	lods   al,BYTE PTR ds:[esi]
  4163da:	mov    edi,0x9a142834
  4163df:	or     al,0x3
  4163e1:	cwde   
  4163e2:	fbstp  TBYTE PTR [edx]
  4163e4:	add    eax,0x9299172e
  4163e9:	mov    ebx,0xd6abccb7
  4163ee:	or     BYTE PTR [esi],al
  4163f0:	enter  0x915d,0xb8
  4163f4:	loope  0x416407
  4163f6:	sbb    edx,DWORD PTR [ecx-0x450054b4]
  4163fc:	pop    esi
  4163fd:	imul   edx,ebx,0xffffff81
  416400:	sbb    BYTE PTR [edi+0x38],bh
  416403:	xchg   edx,eax
  416404:	mov    ebp,0x3ecd39
  416409:	dec    edx
  41640a:	cs jecxz 0x416406
  41640d:	in     eax,dx
  41640e:	jns    0x416439
  416410:	push   eax
  416411:	mov    ah,0x2
  416413:	mov    edx,0xf31e93a0
  416418:	xchg   esp,eax
  416419:	test   eax,0x2700a5f8
  41641f:	std    
  416420:	mov    edi,0xe437c490
  416425:	jp     0x4163fe
  416427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416428:	cmp    BYTE PTR [ecx+0x7ef1ece6],dh
  41642e:	loope  0x416418
  416430:	mov    DWORD PTR [eax+0x40],ebp
  416433:	sub    BYTE PTR [edx-0x5b275b55],ch
  416439:	sub    ah,dl
  41643b:	fdiv   QWORD PTR [ecx+0x1ed2224a]
  416441:	retf   
  416442:	dec    esi
  416443:	jl     0x416447
  416445:	xchg   ebx,eax
  416446:	add    eax,0x8bab41bc
  41644b:	mov    edx,0xa6279f5a
  416450:	aad    0xe1
  416452:	mov    ds:0xef9f30b1,eax
  416457:	xor    dh,BYTE PTR [edi]
  416459:	pop    ecx
  41645a:	mov    esp,0x99939a11
  41645f:	push   ss
  416460:	or     bh,bl
  416462:	xchg   ecx,eax
  416463:	sbb    eax,0xf73704df
  416468:	mov    al,0x74
  41646a:	sub    al,0xac
  41646c:	call   0x85c30bc4
  416471:	mov    al,0x5
  416473:	fstp   st(5)
  416475:	xor    BYTE PTR [ebp+0x5fe124fb],bl
  41647b:	and    DWORD PTR [ebx-0x12],0x0
  41647f:	xchg   edi,eax
  416480:	aam    0x2
  416482:	xchg   edi,eax
  416483:	shr    DWORD PTR [eax+esi*4+0x49623ac6],1
  41648a:	jge    0x4164c1
  41648c:	jne    0x4164bf
  41648e:	adc    edi,DWORD PTR [ecx+0x52]
  416491:	in     al,0x96
  416493:	loopne 0x4164b9
  416495:	imul   ebx,DWORD PTR [ebp-0x1503a064],0x69
  41649c:	les    ecx,FWORD PTR [ecx+0x3c]
  41649f:	fucom  st(4)
  4164a1:	mov    eax,0x6da5d436
  4164a6:	arpl   WORD PTR [esi-0x77],dx
  4164a9:	je     0x41652a
  4164ab:	xor    bl,BYTE PTR [eax+0x5112ad5a]
  4164b1:	ss (bad) 
  4164b3:	out    0x1e,al
  4164b5:	jmp    0x416453
  4164b7:	pop    ds
  4164b8:	ins    BYTE PTR es:[edi],dx
  4164b9:	push   eax
  4164ba:	or     al,BYTE PTR [edi-0x1d8e0859]
  4164c0:	shl    ebx,0xef
  4164c3:	mov    ah,0xb2
  4164c5:	xchg   ecx,eax
  4164c6:	jae    0x41644c
  4164c8:	dec    edi
  4164c9:	cmp    edx,DWORD PTR [edi+0x1c]
  4164cc:	pop    edx
  4164cd:	mov    dh,0xa2
  4164cf:	mov    ah,0xbd
  4164d1:	mov    al,0x17
  4164d3:	xchg   esp,eax
  4164d4:	pop    edx
  4164d5:	cmp    BYTE PTR [edi],bh
  4164d7:	dec    edi
  4164d8:	stos   DWORD PTR es:[edi],eax
  4164d9:	and    esi,DWORD PTR [ebx-0x70]
  4164dc:	push   ebp
  4164dd:	aaa    
  4164de:	mov    ds:0xa9387f98,eax
  4164e3:	inc    esi
  4164e4:	arpl   WORD PTR [edi+0x16635eeb],si
  4164ea:	jb     0x416528
  4164ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ed:	sub    eax,0x183ade4
  4164f2:	cmp    esp,DWORD PTR [ecx+0x474f659]
  4164f8:	xor    dh,bl
  4164fa:	in     al,dx
  4164fb:	test   al,0xb1
  4164fd:	xchg   ebx,eax
  4164fe:	sti    
  4164ff:	lahf   
  416500:	xor    DWORD PTR [ecx+0xa],esp
  416503:	pop    ds
  416504:	not    BYTE PTR [ebx-0x51]
  416507:	(bad)  
  416508:	and    ebx,edx
  41650a:	(bad)  
  41650b:	loope  0x416578
  41650d:	(bad)  
  41650e:	jbe    0x416536
  416510:	inc    ebp
  416511:	test   eax,0x920a5f4f
  416516:	xor    ch,BYTE PTR [esi-0x68]
  416519:	scas   eax,DWORD PTR es:[edi]
  41651a:	ret    0x1c9a
  41651d:	push   esi
  41651e:	in     al,dx
  41651f:	mov    edx,0x85187ed6
  416524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416525:	cmp    al,0xd1
  416527:	inc    edi
  416528:	(bad)  
  416529:	sbb    eax,0xcc0bba87
  41652e:	mov    ch,0x48
  416530:	jb     0x4164c0
  416532:	jg     0x41654f
  416534:	(bad)  
  416535:	cmp    eax,0xba4f60bb
  41653a:	sbb    al,0xe8
  41653c:	xor    edi,DWORD PTR [eax]
  41653e:	jnp    0x416526
  416540:	xor    edx,DWORD PTR [eax-0xf]
  416543:	popa   
  416544:	(bad)  
  416545:	std    
  416546:	inc    eax
  416547:	std    
  416548:	dec    esi
  416549:	jmp    0xa545:0xc1242777
  416550:	sub    DWORD PTR [esi-0x6e17407c],edx
  416556:	and    al,0x28
  416558:	dec    edi
  416559:	(bad)  
  41655a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41655b:	mov    ah,0xa0
  41655d:	adc    ch,BYTE PTR [ecx-0x54]
  416560:	fyl2x  
  416562:	add    ebp,DWORD PTR [ebp+0x4f1dee2d]
  416568:	xchg   esp,eax
  416569:	test   al,0x81
  41656b:	sub    dh,bh
  41656d:	je     0x41653d
  41656f:	sar    bh,0x32
  416572:	repnz mov dl,0x67
  416575:	retf   
  416576:	(bad)  [ebx-0x62357d2e]
  41657c:	inc    ebx
  41657d:	outs   dx,DWORD PTR ds:[esi]
  41657e:	imul   ebx,DWORD PTR [ecx],0xffffffa2
  416581:	mov    ds:0x1fc48cb3,al
  416586:	shl    BYTE PTR [ebx],0xf3
  416589:	push   es
  41658a:	enter  0x7c3c,0x80
  41658e:	mov    ?,edx
  416590:	mov    ch,0xd3
  416592:	ret    
  416593:	mov    cl,0x2d
  416595:	push   esi
  416596:	in     eax,0xe
  416598:	dec    ebx
  416599:	pop    esi
  41659a:	xchg   edx,eax
  41659b:	push   ecx
  41659c:	sub    dl,BYTE PTR [edi-0x39a8b6f2]
  4165a2:	mov    ecx,0x71d9589
  4165a7:	test   BYTE PTR [edx+0x2b549bfb],dl
  4165ad:	bswap  ebp
  4165af:	aad    0xe2
  4165b1:	push   es
  4165b2:	adc    BYTE PTR ds:0x764a2a18,0xfb
  4165b9:	xchg   edx,eax
  4165ba:	fcmove st,st(0)
  4165bc:	xor    DWORD PTR [esi+esi*4],esi
  4165bf:	cmp    eax,0xa92658e6
  4165c4:	in     eax,0x16
  4165c6:	out    dx,eax
  4165c7:	scas   eax,DWORD PTR es:[edi]
  4165c8:	mov    ?,WORD PTR [eax]
  4165ca:	xchg   esi,eax
  4165cb:	push   ecx
  4165cc:	lahf   
  4165cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165ce:	sti    
  4165cf:	icebp  
  4165d0:	mov    ch,0x36
  4165d2:	adc    dh,BYTE PTR [ebp+0x7cefc4a7]
  4165d8:	push   0xbefb59c4
  4165dd:	scas   al,BYTE PTR es:[edi]
  4165de:	jnp    0x416561
  4165e0:	mov    eax,ds:0xd66ea279
  4165e5:	cmp    edi,ecx
  4165e7:	rol    dl,1
  4165e9:	aas    
  4165ea:	fstp   st(0)
  4165ec:	sub    eax,0xa9110864
  4165f1:	out    0x2a,eax
  4165f3:	dec    ecx
  4165f4:	test   al,0xa3
  4165f6:	push   ebp
  4165f7:	pop    eax
  4165f8:	inc    ebx
  4165f9:	fndisi(8087 only) 
  4165fb:	ins    BYTE PTR es:[edi],dx
  4165fc:	add    DWORD PTR [esi],edi
  4165fe:	xchg   ch,bh
  416600:	and    cl,BYTE PTR [edi]
  416602:	imul   eax,DWORD PTR [edx],0xffffffd1
  416605:	sub    eax,0x572a3d32
  41660a:	je     0x416592
  41660c:	pushf  
  41660d:	xchg   DWORD PTR [ebp-0x59],edx
  416610:	add    eax,esi
  416612:	dec    edx
  416613:	pop    esi
  416614:	daa    
  416615:	sub    ebx,ebx
  416617:	jnp    0x4165b7
  416619:	dec    eax
  41661a:	push   ds
  41661b:	inc    ebp
  41661c:	pop    es
  41661d:	shl    DWORD PTR ds:0xc8b4d89e,1
  416623:	jmp    0x9de6:0x68eb403d
  41662a:	inc    edi
  41662b:	ja     0x416623
  41662d:	jns    0x416614
  41662f:	(bad)  
  416630:	shr    cl,1
  416632:	sub    al,0x10
  416634:	mov    al,ds:0x6fc8793a
  416639:	dec    ebx
  41663a:	test   al,0x44
  41663c:	in     al,dx
  41663d:	nop
  41663e:	scas   eax,DWORD PTR es:[edi]
  41663f:	cmp    edi,DWORD PTR [ebx]
  416641:	loope  0x416641
  416643:	daa    
  416644:	lods   al,BYTE PTR ds:[esi]
  416645:	pop    ebx
  416646:	cdq    
  416647:	sub    BYTE PTR [edi+0x475d704b],0xa1
  41664e:	mov    edx,0x2b8113e
  416653:	add    bh,BYTE PTR [ebp+0x580e5498]
  416659:	mov    esi,DWORD PTR [ebp-0x6d]
  41665c:	xchg   edx,eax
  41665d:	mov    WORD PTR [ebp-0x2e],cx
  416661:	aad    0x47
  416663:	shl    BYTE PTR [edx-0xc],1
  416666:	nop
  416667:	pop    ss
  416668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416669:	inc    ecx
  41666a:	(bad)  
  41666b:	stc    
  41666c:	pop    eax
  41666d:	iret   
  41666e:	bound  ecx,QWORD PTR [esi-0x76]
  416671:	jmp    0x41666c
  416673:	xor    dl,BYTE PTR [eax-0x24]
  416676:	cld    
  416677:	mov    edi,0x29cd60a1
  41667c:	mov    dl,0x3b
  41667e:	leave  
  41667f:	pusha  
  416680:	mov    ?,ecx
  416682:	ss popa 
  416684:	mov    al,0xf8
  416686:	jecxz  0x4166bd
  416688:	jns    0x4166fe
  41668a:	sub    eax,DWORD PTR [esi+0x4b4a8e46]
  416690:	push   edx
  416691:	inc    ecx
  416692:	adc    cl,bl
  416694:	xor    esp,0x220b8121
  41669a:	dec    ebx
  41669b:	push   eax
  41669c:	xor    eax,0x46576ab7
  4166a1:	or     al,0x83
  4166a3:	mov    eax,ds:0xbf94441e
  4166a8:	and    eax,0x28d4dce2
  4166ad:	mov    cl,0xa2
  4166af:	pop    es
  4166b0:	push   ss
  4166b1:	(bad)  
  4166b2:	cmp    esp,ecx
  4166b4:	jmp    0x416731
  4166b6:	sahf   
  4166b7:	pop    edi
  4166b8:	mov    WORD PTR [eax],ss
  4166ba:	(bad)  
  4166bc:	jl     0x4166df
  4166be:	scas   al,BYTE PTR es:[edi]
  4166bf:	sti    
  4166c0:	mov    ch,bh
  4166c2:	add    ah,BYTE PTR [ebp-0x2e]
  4166c5:	add    BYTE PTR [edi-0xe83ebd8],ch
  4166cb:	ins    DWORD PTR es:[edi],dx
  4166cc:	in     eax,0xba
  4166ce:	ret    
  4166cf:	imul   bh
  4166d1:	in     al,0xf9
  4166d3:	mov    ebx,DWORD PTR [ebx-0x2a]
  4166d6:	call   0xa454654f
  4166db:	sbb    DWORD PTR [ecx-0x20],esp
  4166de:	xor    al,0x8
  4166e0:	mov    ebp,0x8a7d6199
  4166e5:	push   edx
  4166e6:	inc    eax
  4166e7:	push   ebp
  4166e8:	sbb    eax,0x27eb03b0
  4166ed:	sahf   
  4166ee:	cmp    ch,BYTE PTR [ebx-0x10]
  4166f1:	ret    0x40ea
  4166f4:	clc    
  4166f5:	lods   eax,DWORD PTR ds:[esi]
  4166f6:	xchg   BYTE PTR [ebp+0x11],dh
  4166f9:	pop    ds
  4166fa:	push   ss
  4166fb:	push   ebx
  4166fc:	bound  esi,QWORD PTR [ebx]
  4166fe:	push   ds
  4166ff:	test   al,0x4c
  416701:	sub    al,0xaf
  416703:	mov    edx,0xae15f6bc
  416708:	mov    al,ds:0xbe5ed1bb
  41670d:	mov    bh,0x7e
  41670f:	int3   
  416710:	sub    al,0x83
  416712:	cwde   
  416713:	jmp    0xbd53f35e
  416718:	sub    BYTE PTR [ecx],ch
  41671a:	fiadd  DWORD PTR [eax+0x2d]
  41671d:	push   cs
  41671e:	xchg   DWORD PTR [ebx],edi
  416720:	jo     0x4166fa
  416722:	jp     0x4167a3
  416724:	loope  0x4166bb
  416726:	add    eax,DWORD PTR [edi]
  416728:	and    DWORD PTR [edx+0x42],esp
  41672b:	pop    ebx
  41672c:	test   al,0xcc
  41672e:	pop    eax
  41672f:	xlat   BYTE PTR ds:[ebx]
  416730:	cld    
  416731:	aam    0x4c
  416733:	loop   0x4166d6
  416735:	mov    al,0x9d
  416737:	hlt    
  416738:	mov    bh,0x82
  41673a:	fdivr  QWORD PTR [eax-0x40]
  41673d:	gs cwde 
  41673f:	and    esi,edi
  416741:	mov    WORD PTR [ecx],?
  416743:	ret    
  416744:	adc    ah,BYTE PTR [edi-0x76]
  416747:	clc    
  416748:	jne    0x4167ba
  41674a:	neg    DWORD PTR [esi]
  41674c:	vpmacssdqh ymm9,ymm6,YMMWORD PTR [edi],ymm2
  416752:	pop    ss
  416753:	clc    
  416754:	pushw  es
  416756:	or     bl,BYTE PTR [edi-0x1b2f70a3]
  41675c:	in     al,dx
  41675d:	enter  0xf621,0x8b
  416761:	xor    ebx,edi
  416763:	sub    BYTE PTR [esi],cl
  416765:	jecxz  0x4167be
  416767:	sbb    edi,esi
  416769:	push   0x1f8fe6ef
  41676e:	jae    0x41679b
  416770:	icebp  
  416771:	arpl   WORD PTR [edi+0x1c699a5c],sp
  416777:	repnz nop
  416779:	sbb    BYTE PTR [esi+0x34bba2e],ah
  41677f:	mov    ah,0x6f
  416781:	jmp    0x8c19:0xfd3ff405
  416788:	mov    BYTE PTR [ebp-0x56],cl
  41678b:	sbb    DWORD PTR [ecx+0x1a],ebx
  41678e:	push   esi
  41678f:	rcl    DWORD PTR [esi-0x309d4dc],cl
  416795:	cmp    BYTE PTR [edi],al
  416797:	in     al,dx
  416798:	jle    0x4167ba
  41679a:	mov    bh,cl
  41679c:	mov    ss,WORD PTR ds:0xab544fed
  4167a2:	pusha  
  4167a3:	jmp    0xc62488d0
  4167a8:	jnp    0x41673d
  4167aa:	loope  0x41681d
  4167ac:	aaa    
  4167ad:	jmp    0xcb49:0xd3a7f37b
  4167b4:	push   esp
  4167b5:	fisub  WORD PTR [edi+0x39bbf6c3]
  4167bb:	add    ch,al
  4167bd:	in     al,0xb1
  4167bf:	aam    0xce
  4167c1:	pop    esi
  4167c2:	pop    esi
  4167c3:	jmp    0x85b4:0xe8f85d6a
  4167ca:	xor    esi,edi
  4167cc:	push   DWORD PTR [ebx-0x2c39e435]
  4167d2:	mov    cl,0xa4
  4167d4:	not    DWORD PTR [esi+0x7a]
  4167d7:	mov    ss,WORD PTR [eax]
  4167d9:	xchg   esi,eax
  4167da:	sub    edx,DWORD PTR [edx]
  4167dc:	or     al,0xe8
  4167de:	xor    al,0xc0
  4167e0:	aaa    
  4167e1:	fiadd  DWORD PTR [edi]
  4167e3:	(bad)  
  4167e4:	mov    ah,0xc1
  4167e6:	inc    ecx
  4167e7:	cmp    edx,eax
  4167e9:	xor    eax,0x893d3708
  4167ee:	sbb    DWORD PTR [eax],ebp
  4167f0:	arpl   WORD PTR [eax],bp
  4167f2:	fisubr WORD PTR [eax+0x6795b7e7]
  4167f8:	ins    DWORD PTR es:[edi],dx
  4167f9:	nop
  4167fa:	hlt    
  4167fb:	add    eax,0xadae92d3
  416800:	nop
  416801:	push   esp
  416802:	jge    0x416814
  416804:	sar    DWORD PTR [esi+0x822fd8f],cl
  41680a:	ret    
  41680b:	(bad)  
  41680c:	retf   0x9040
  41680f:	sbb    edx,DWORD PTR [edi]
  416811:	js     0x416891
  416813:	hlt    
  416814:	sbb    bh,dh
  416816:	std    
  416817:	or     eax,0xfc225a12
  41681c:	or     dl,al
  41681e:	push   eax
  41681f:	adc    DWORD PTR [ecx+0x28],ebx
  416822:	jo     0x41686f
  416824:	inc    edx
  416825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416826:	sub    BYTE PTR [ebx+0x11],ah
  416829:	adc    al,0x3a
  41682b:	imul   esi,DWORD PTR [esi],0xffffff80
  41682e:	fcom   st(2)
  416830:	sbb    al,0xb7
  416832:	ins    DWORD PTR es:[edi],dx
  416833:	xor    ebx,edx
  416835:	push   ecx
  416836:	nop
  416837:	pop    edx
  416838:	sbb    DWORD PTR [edi],0x8798e68d
  41683e:	dec    ebp
  41683f:	sbb    eax,0xca5c282d
  416844:	pop    ebp
  416845:	stos   BYTE PTR es:[edi],al
  416846:	or     BYTE PTR [ecx+edi*8],ch
  416849:	or     BYTE PTR [ecx+ecx*4],bh
  41684c:	(bad)  
  41684e:	dec    edi
  41684f:	mov    esp,0x26fbe225
  416854:	mov    bl,0x14
  416856:	enter  0x5d1d,0x33
  41685a:	sub    al,0x4b
  41685c:	and    BYTE PTR [edx+0x26],ch
  41685f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416860:	dec    edx
  416861:	mov    DWORD PTR [edx-0x1],edx
  416864:	(bad)  [eax+0x48bc0e0b]
  41686a:	jnp    0x4168b5
  41686c:	js     0x416822
  41686e:	call   0xd9d0:0x20e06cb3
  416875:	push   eax
  416876:	aad    0x69
  416878:	xor    esi,DWORD PTR [edi]
  41687a:	sbb    dl,al
  41687c:	push   ecx
  41687d:	add    BYTE PTR [ebx+ebx*8],bl
  416880:	jecxz  0x4168ab
  416882:	mov    bl,0xc
  416884:	xor    ebp,DWORD PTR [esi-0x16]
  416887:	xor    dl,BYTE PTR [ecx-0x64]
  41688a:	jecxz  0x416881
  41688c:	sahf   
  41688d:	pushf  
  41688e:	paddsb mm0,QWORD PTR [edi+0x7d]
  416892:	inc    edx
  416893:	and    BYTE PTR [edx+0x2cd21721],dl
  416899:	mov    eax,0x271a7444
  41689e:	into   
  41689f:	scas   al,BYTE PTR es:[edi]
  4168a0:	sti    
  4168a1:	dec    ebx
  4168a2:	shl    ebx,cl
  4168a4:	call   0x3db5:0xcd918f5c
  4168ab:	or     al,0x95
  4168ad:	adc    ecx,DWORD PTR [ecx]
  4168af:	pop    esp
  4168b0:	push   0xad617e07
  4168b5:	xchg   edi,eax
  4168b6:	jo     0x4168f1
  4168b8:	lock cmp dl,bh
  4168bb:	xchg   esi,eax
  4168bc:	sahf   
  4168bd:	cmp    al,BYTE PTR [ecx]
  4168bf:	je     0x4168da
  4168c1:	(bad)
  4168c5:	add    al,0x1e
  4168c7:	sbb    edi,DWORD PTR [edx+0x1c2a6b9c]
  4168cd:	dec    edx
  4168ce:	outs   dx,DWORD PTR ds:[esi]
  4168cf:	bound  edi,QWORD PTR [ebx+0x7b]
  4168d2:	sar    BYTE PTR [esi-0x2e],cl
  4168d5:	lods   eax,DWORD PTR ds:[esi]
  4168d6:	push   edx
  4168d7:	push   es
  4168d8:	xor    BYTE PTR [ecx],bh
  4168da:	xor    DWORD PTR [ebp+0x3805223],edx
  4168e0:	hlt    
  4168e1:	pop    ebx
  4168e2:	sub    cl,BYTE PTR [edx-0x6cbc235f]
  4168e8:	in     eax,0x17
  4168ea:	cmc    
  4168eb:	mov    ebp,0x99c6366e
  4168f0:	jmp    0x4168ea
  4168f2:	mov    edi,0x95270271
  4168f7:	dec    eax
  4168f8:	dec    edx
  4168f9:	jge    0x41692e
  4168fb:	daa    
  4168fc:	popa   
  4168fd:	adc    al,0xaa
  4168ff:	pop    esp
  416900:	or     DWORD PTR [ebx+0x47b28811],ebx
  416906:	xchg   edx,eax
  416907:	pminub mm4,QWORD PTR [ebx]
  41690a:	mov    dh,0x7e
  41690c:	mov    esp,0xee56d003
  416911:	arpl   WORD PTR [edi-0x5b10c166],di
  416917:	pop    ebx
  416918:	pop    ecx
  416919:	cmp    ah,0xd
  41691c:	lods   eax,DWORD PTR ds:[esi]
  41691d:	cmp    BYTE PTR [edx],0x39
  416920:	js     0x416959
  416922:	les    esi,FWORD PTR [edx]
  416924:	arpl   WORD PTR [ebx+ecx*2-0x1b5d98ef],cx
  41692b:	ins    BYTE PTR es:[edi],dx
  41692c:	aaa    
  41692d:	sahf   
  41692e:	mov    ecx,0x9b4c8280
  416933:	xchg   esi,eax
  416934:	add    ah,dh
  416936:	add    eax,0x3fddd3ac
  41693b:	mov    bl,0x34
  41693d:	sbb    ecx,DWORD PTR [ebx]
  41693f:	pushf  
  416940:	mov    edi,0x2f47aa24
  416945:	mov    edx,0xa2794936
  41694a:	cmp    al,0xc4
  41694c:	dec    ebx
  41694d:	rcl    BYTE PTR [esi],cl
  41694f:	fwait
  416950:	aad    0x38
  416952:	fwait
  416953:	mov    bl,0x49
  416955:	jl     0x416987
  416957:	aam    0xde
  416959:	cmp    eax,0xbb21e5de
  41695e:	(bad)  
  41695f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416960:	push   ecx
  416961:	aad    0xb2
  416963:	and    dh,0x98
  416966:	test   eax,0xce7a97e7
  41696b:	mov    ds:0xce8a81b8,eax
  416970:	jmp    0xc2ae4e9
  416975:	mov    al,ds:0x76532aba
  41697a:	mov    ebx,0xd6e48816
  41697f:	test   eax,0xffa854d5
  416984:	in     eax,dx
  416985:	adc    BYTE PTR [eax+esi*2-0x1fcb776d],dl
  41698c:	sti    
  41698d:	pusha  
  41698e:	sahf   
  41698f:	mov    bh,0x30
  416991:	ret    0xd1a3
  416994:	(bad)  
  416995:	mov    esi,0x3aa70f16
  41699a:	jg     0x41695b
  41699c:	ret    0x246a
  41699f:	jmp    0x416986
  4169a1:	pop    edx
  4169a2:	mov    ah,0x47
  4169a4:	test   BYTE PTR [ecx-0x18],bh
  4169a7:	in     al,0x22
  4169a9:	ds aam 0x6f
  4169ac:	dec    edi
  4169ad:	sbb    ecx,DWORD PTR [eax-0x3946f904]
  4169b3:	sbb    bl,dh
  4169b5:	shl    DWORD PTR [ecx],0xbd
  4169b8:	aam    0xda
  4169ba:	mov    cs,WORD PTR [ecx]
  4169bc:	imul   esi,edx,0x63
  4169bf:	(bad)  
  4169c0:	cmp    eax,0xfaf2c0b9
  4169c5:	mov    ebp,0xf7323c38
  4169ca:	add    bh,BYTE PTR [ebx-0x59]
  4169cd:	xor    bh,BYTE PTR [ebx-0x76da282e]
  4169d3:	xor    eax,0xd4551c95
  4169d8:	lds    ebx,FWORD PTR [eax-0xf]
  4169db:	push   edx
  4169dc:	xor    BYTE PTR [edx],0x3a
  4169df:	(bad)  
  4169e0:	jge    0x416a45
  4169e2:	push   es
  4169e3:	pop    eax
  4169e4:	retf   
  4169e5:	out    dx,eax
  4169e6:	inc    edi
  4169e7:	imul   ecx,DWORD PTR [eax+0x526089f2],0x6379bf14
  4169f1:	pop    edx
  4169f2:	dec    ecx
  4169f3:	xchg   bh,dl
  4169f5:	lahf   
  4169f6:	gs push ecx
  4169f8:	dec    esp
  4169f9:	mov    ebx,ebp
  4169fb:	cmp    bl,ah
  4169fd:	clc    
  4169fe:	cmp    DWORD PTR [edx+0x7a],0xe8089295
  416a05:	and    BYTE PTR [esi+0x33ec965f],al
  416a0b:	push   esi
  416a0c:	in     eax,dx
  416a0d:	daa    
  416a0e:	pusha  
  416a0f:	outs   dx,BYTE PTR ds:[esi]
  416a10:	mov    eax,ds:0x39f94f4c
  416a15:	inc    edi
  416a16:	push   esi
  416a17:	xor    ebp,DWORD PTR [ebp+0x2ba8ab0b]
  416a1d:	pop    edi
  416a1e:	push   ss
  416a1f:	ins    BYTE PTR es:[edi],dx
  416a20:	ss pop ecx
  416a22:	inc    ecx
  416a23:	out    0xd3,al
  416a25:	int    0x43
  416a27:	sub    DWORD PTR [esi],esp
  416a29:	sbb    ebx,ebx
  416a2b:	or     bh,dl
  416a2d:	outs   dx,DWORD PTR ds:[esi]
  416a2e:	inc    ebx
  416a2f:	ror    al,0xb5
  416a32:	aad    0x90
  416a34:	out    0xcd,al
  416a36:	and    eax,0x70676a2f
  416a3b:	and    BYTE PTR ds:0xed8898d8,ah
  416a41:	ror    DWORD PTR [edi-0x3fd6d2f9],0x8f
  416a48:	in     eax,0x10
  416a4a:	mov    ebp,0x8b3c9a2
  416a4f:	loop   0x4169f1
  416a51:	(bad)  
  416a53:	sub    eax,eax
  416a55:	call   0x70b6ab7c
  416a5a:	mov    ebx,0xe836cbf9
  416a5f:	in     al,0x84
  416a61:	dec    esi
  416a62:	mov    al,0xad
  416a64:	or     BYTE PTR [eax-0x2d],bh
  416a67:	adc    DWORD PTR [edi],0xa5dc4141
  416a6d:	pop    ecx
  416a6e:	out    0xee,eax
  416a70:	jbe    0x4169fd
  416a72:	jno    0x416adc
  416a74:	mov    ecx,0x6cf814a
  416a7a:	ds in  eax,0x87
  416a7d:	fisubr DWORD PTR [ebp+0x50]
  416a80:	iret   
  416a81:	mov    dl,0x78
  416a83:	enter  0x59ae,0x5b
  416a87:	push   0x351c9226
  416a8c:	dec    ebx
  416a8d:	cmp    BYTE PTR [ebp-0x1c06a6a9],bh
  416a93:	dec    ebp
  416a94:	and    dl,ch
  416a96:	repnz in al,dx
  416a98:	xchg   ebx,eax
  416a99:	stc    
  416a9a:	in     al,dx
  416a9b:	jmp    0x2265:0x628f2c53
  416aa2:	pop    eax
  416aa3:	neg    BYTE PTR [esi-0x2b6f3fa5]
  416aa9:	fcom   QWORD PTR [edx+ebp*8+0x4ff4e21d]
  416ab0:	jl     0x416b0d
  416ab2:	cmp    edx,DWORD PTR es:[eax+0x55cb6186]
  416ab9:	rol    eax,1
  416abb:	mov    ecx,0xebcdcdac
  416ac0:	mul    BYTE PTR [esi-0x32c33d7c]
  416ac6:	fmul   st,st(4)
  416ac8:	jmp    0x416b37
  416aca:	pop    ebp
  416acb:	cwde   
  416acc:	(bad)  
  416acd:	mov    al,cs:0x98e128d9
  416ad3:	fiadd  WORD PTR [eax]
  416ad5:	mov    bl,0xca
  416ad7:	mov    ss,WORD PTR [esp+edi*4+0x41]
  416adb:	cmp    ch,BYTE PTR [edi+0x2e]
  416ade:	add    DWORD PTR [edx-0x33f4adc2],edi
  416ae4:	ja     0x416b1b
  416ae6:	sar    edi,1
  416ae8:	daa    
  416ae9:	inc    esi
  416aea:	sub    bh,BYTE PTR [ebp-0x41]
  416aed:	out    0x33,al
  416aef:	xor    dh,dl
  416af1:	stc    
  416af2:	test   DWORD PTR [ecx+edi*2+0x34],0x451e47f4
  416afa:	mov    al,ds:0x51f024bf
  416aff:	cmp    BYTE PTR es:[ebp+0x7a1bc729],ah
  416b06:	rcl    DWORD PTR [eax],0xfb
  416b09:	or     cl,BYTE PTR [esi]
  416b0b:	add    al,0xa0
  416b0d:	out    dx,eax
  416b0e:	daa    
  416b0f:	cmp    eax,0x9695b27f
  416b14:	outs   dx,BYTE PTR ds:[esi]
  416b15:	sahf   
  416b16:	ret    0x7407
  416b19:	lea    ecx,[edx]
  416b1b:	jle    0x416aea
  416b1d:	mov    ecx,0xea77148b
  416b22:	fcomp  DWORD PTR [ecx+0x6d67b33b]
  416b28:	mov    ds:0x37e0a272,al
  416b2d:	xor    bl,cl
  416b2f:	stc    
  416b30:	mov    ds:0x68a8b782,al
  416b35:	cld    
  416b36:	and    DWORD PTR [esi-0x3a],edx
  416b39:	jae    0x416b1d
  416b3b:	iret   
  416b3c:	test   DWORD PTR [esi],ecx
  416b3e:	inc    edx
  416b3f:	ret    0x11d3
  416b42:	test   al,0xf4
  416b44:	add    cl,bl
  416b46:	dec    ecx
  416b47:	cmp    eax,0x4b341951
  416b4c:	es xchg edi,eax
  416b4e:	xor    eax,0x5468bbcc
  416b53:	mov    edi,0x36a0f495
  416b58:	inc    ebp
  416b59:	cmp    BYTE PTR [ebx-0x31cbf883],dh
  416b5f:	pop    ds
  416b60:	or     al,0xe4
  416b62:	or     eax,0x200d0b86
  416b67:	sbb    edi,edi
  416b69:	outs   dx,BYTE PTR ds:[esi]
  416b6a:	xlat   BYTE PTR ds:[ebx]
  416b6b:	mov    ah,0x8e
  416b6d:	adc    al,0xa0
  416b6f:	clc    
  416b70:	adc    bl,BYTE PTR [edx+0x73ecf236]
  416b76:	xchg   esp,eax
  416b77:	lea    esp,[edi+0x1f87c504]
  416b7d:	cs test al,0xc
  416b80:	xchg   ebp,eax
  416b81:	cmp    DWORD PTR [edi],0x2fc9a48a
  416b87:	mov    di,0x8d4c
  416b8b:	(bad)  [edx+0x4d]
  416b8e:	xchg   ebx,eax
  416b8f:	jecxz  0x416b63
  416b91:	and    DWORD PTR ds:0x324049f9,esi
  416b97:	mov    al,ds:0x305e491
  416b9c:	push   esp
  416b9d:	data16 mov ds:0x8f7f4793,al
  416ba3:	pop    esp
  416ba4:	inc    edi
  416ba5:	adc    ebx,DWORD PTR [ebx-0x628f40c9]
  416bab:	pop    edi
  416bac:	add    ebp,DWORD PTR [ecx]
  416bae:	ret    0x11d2
  416bb1:	sub    eax,0xc3a39169
  416bb6:	in     eax,0xc9
  416bb8:	fs sahf 
  416bba:	and    BYTE PTR [edx],bh
  416bbc:	fs test eax,0x36d7db96
  416bc2:	mov    BYTE PTR es:[eax-0x2],bl
  416bc6:	add    BYTE PTR [ebp+0x26],dh
  416bc9:	(bad)  
  416bca:	mov    WORD PTR [ecx+0x3268f2c5],fs
  416bd0:	cld    
  416bd1:	gs int 0xc1
  416bd4:	sbb    BYTE PTR [eax],cl
  416bd6:	xchg   esi,eax
  416bd7:	cmp    ch,BYTE PTR [ebx+0x4f]
  416bda:	shrd   ecx,ebp,0xab
  416bde:	idiv   BYTE PTR [ebx+0x5509261f]
  416be4:	cld    
  416be5:	inc    ecx
  416be6:	pop    eax
  416be7:	push   ebp
  416be8:	ret    0x2767
  416beb:	cmp    eax,0xf31d589b
  416bf0:	and    ch,BYTE PTR [edx-0x23]
  416bf3:	or     edi,DWORD PTR [edi]
  416bf5:	and    edx,DWORD PTR ds:0xf64ffad5
  416bfb:	cli    
  416bfc:	test   ah,ah
  416bfe:	dec    eax
  416bff:	daa    
  416c00:	setne  BYTE PTR ss:[bx+si+0x45]
  416c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c07:	ins    BYTE PTR es:[edi],dx
  416c08:	and    al,0x3e
  416c0a:	fmul   DWORD PTR [ebx]
  416c0c:	mov    ah,0x63
  416c0e:	and    eax,0x9a5c96f0
  416c13:	cmp    eax,0x385a10ee
  416c18:	adc    cl,ah
  416c1a:	cdq    
  416c1b:	js     0x416bce
  416c1d:	outs   dx,BYTE PTR ds:[esi]
  416c1e:	adc    DWORD PTR [ebp+0x574b84bc],0x6
  416c25:	or     esi,DWORD PTR [edx-0x39]
  416c28:	call   0xc4ce:0x4225cd31
  416c2f:	mov    al,dl
  416c31:	pop    eax
  416c32:	xor    ah,bh
  416c34:	aaa    
  416c35:	jmp    0x416c8b
  416c37:	inc    edx
  416c38:	es es out dx,al
  416c3b:	pop    es
  416c3c:	sbb    dh,bh
  416c3e:	push   0x4fe5d1de
  416c43:	lea    ebx,[edi+esi*4+0x7c]
  416c47:	add    ecx,DWORD PTR ds:0x33f85852
  416c4d:	jg     0x416c3b
  416c4f:	retf   
  416c50:	cmp    al,0x3c
  416c52:	stos   DWORD PTR es:[edi],eax
  416c53:	nop
  416c54:	xchg   BYTE PTR [ebp-0x4f76e216],bl
  416c5a:	(bad)  
  416c5b:	cwde   
  416c5c:	jecxz  0x416c3d
  416c5e:	clc    
  416c5f:	(bad)  
  416c60:	jmp    0x5cc5:0xb379bf8c
  416c67:	out    0xda,eax
  416c69:	push   ebx
  416c6a:	ret    
  416c6b:	push   esp
  416c6c:	inc    esi
  416c6d:	pop    ebx
  416c6e:	dec    ebp
  416c6f:	xor    BYTE PTR [esi+0x10906bbd],bl
  416c75:	scas   eax,DWORD PTR es:[edi]
  416c76:	or     bl,bh
  416c78:	adc    dl,bl
  416c7a:	stos   DWORD PTR es:[edi],eax
  416c7b:	test   esi,ebx
  416c7d:	push   edi
  416c7e:	push   0x7cbe8111
  416c83:	jp     0x416c07
  416c85:	call   0x8e32a79c
  416c8a:	ret    
  416c8b:	jo     0x416c80
  416c8d:	jmp    0x3d06:0x530d9a46
  416c94:	out    dx,eax
  416c95:	sbb    ch,BYTE PTR [ebp+0x52e2b188]
  416c9b:	fcom   QWORD PTR [eax]
  416c9d:	scas   eax,DWORD PTR es:[edi]
  416c9e:	stos   BYTE PTR es:[edi],al
  416c9f:	into   
  416ca0:	cmp    BYTE PTR [di],al
  416ca3:	and    BYTE PTR [ecx+ebx*4+0x4b],ch
  416ca7:	mov    cl,BYTE PTR [ecx-0x44]
  416caa:	gs mov dh,0x7f
  416cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cae:	sbb    DWORD PTR ds:0xef53d47e,ecx
  416cb4:	jnp    0x416cc6
  416cb6:	adc    BYTE PTR [esi+0x0],bl
  416cb9:	mov    ds:0x847714ca,al
  416cbe:	popa   
  416cbf:	pop    ebp
  416cc0:	fisttp WORD PTR [ecx+0x3651b902]
  416cc6:	xchg   esp,eax
  416cc7:	sbb    BYTE PTR [esi],0xa5
  416cca:	mov    eax,0x82e844f1
  416ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cd0:	fs cwde 
  416cd2:	inc    eax
  416cd3:	das    
  416cd4:	ret    
  416cd5:	call   0x8e33:0xf283f7f4
  416cdc:	pop    esp
  416cdd:	sbb    ebp,DWORD PTR [edx]
  416cdf:	push   ds
  416ce0:	dec    eax
  416ce1:	sub    al,0xbb
  416ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce4:	pop    eax
  416ce5:	cmp    BYTE PTR [eax],dl
  416ce7:	push   esi
  416ce8:	hlt    
  416ce9:	xchg   DWORD PTR [ebx],ebp
  416ceb:	sub    DWORD PTR [edx-0x5e],edx
  416cee:	add    al,0xb3
  416cf0:	ins    BYTE PTR es:[edi],dx
  416cf1:	add    al,BYTE PTR [edi-0x1f]
  416cf4:	out    dx,al
  416cf5:	icebp  
  416cf6:	out    0x9f,al
  416cf8:	in     eax,0x19
  416cfa:	gs cdq 
  416cfc:	sti    
  416cfd:	outs   dx,DWORD PTR ds:[esi]
  416cfe:	mov    dh,0x49
  416d00:	cwde   
  416d01:	xchg   ebp,eax
  416d02:	cmp    BYTE PTR [edx],al
  416d04:	mov    ebx,gs
  416d06:	test   eax,0xad7b440e
  416d0b:	cli    
  416d0c:	cli    
  416d0d:	pop    esp
  416d0e:	ret    0x5b90
  416d11:	and    ch,BYTE PTR [esi+0x14e6d44c]
  416d17:	dec    ebx
  416d18:	dec    ecx
  416d19:	cmp    al,0xb6
  416d1b:	out    0x95,al
  416d1d:	sub    esp,DWORD PTR [edx]
  416d1f:	arpl   WORD PTR [edx-0x60],di
  416d22:	je     0x416d36
  416d24:	or     bh,BYTE PTR [esi+edx*4]
  416d27:	outs   dx,DWORD PTR ds:[esi]
  416d28:	push   ss
  416d29:	jg     0x416d85
  416d2b:	xchg   ecx,eax
  416d2c:	cmc    
  416d2d:	push   eax
  416d2e:	neg    DWORD PTR [eax-0x14]
  416d31:	call   0xd5d:0xc5186c95
  416d38:	adc    BYTE PTR [edx+0x35],cl
  416d3b:	dec    eax
  416d3c:	stos   BYTE PTR es:[edi],al
  416d3d:	stos   BYTE PTR es:[edi],al
  416d3e:	es jmp 0x416cc1
  416d41:	cld    
  416d42:	sub    esi,DWORD PTR [eax+0x775da4cd]
  416d48:	fwait
  416d49:	pop    ebp
  416d4a:	push   es
  416d4b:	in     eax,dx
  416d4c:	es xor eax,0x86395899
  416d52:	in     eax,dx
  416d53:	dec    ebx
  416d54:	adc    eax,0x612e19db
  416d59:	xchg   esp,eax
  416d5a:	push   0x6c205e56
  416d5f:	mov    esi,0x741222d3
  416d64:	das    
  416d65:	push   esp
  416d66:	ret    
  416d67:	stos   DWORD PTR es:[edi],eax
  416d68:	mov    ah,0x68
  416d6a:	sbb    eax,edx
  416d6c:	sti    
  416d6d:	loope  0x416d57
  416d6f:	popa   
  416d70:	dec    eax
  416d71:	je     0x416d99
  416d73:	test   DWORD PTR [ebx-0x11265b53],edi
  416d79:	sub    al,0xcc
  416d7b:	pop    es
  416d7c:	(bad)  
  416d7d:	aam    0x72
  416d7f:	mov    edx,0x537350f8
  416d84:	enter  0xe704,0x99
  416d88:	jle    0x416d1e
  416d8a:	repnz dec eax
  416d8c:	fs adc eax,0xbbdc8ec
  416d92:	xor    BYTE PTR [esi+0x5a],cl
  416d95:	out    dx,al
  416d96:	int3   
  416d97:	(bad)  
  416d98:	(bad)  
  416d9a:	pop    es
  416d9b:	enter  0x8198,0x8e
  416d9f:	ja     0x416d57
  416da1:	daa    
  416da2:	push   ds
  416da3:	mov    esi,0x130ca422
  416da8:	lods   al,BYTE PTR ds:[esi]
  416da9:	retf   
  416daa:	sub    ch,BYTE PTR [ecx-0x1b4fe1fb]
  416db0:	stos   BYTE PTR es:[edi],al
  416db1:	outs   dx,BYTE PTR ds:[esi]
  416db2:	and    cl,cl
  416db4:	call   0xe957:0x110dc9a2
  416dbb:	jmp    0x240c22ae
  416dc0:	and    BYTE PTR [edx],al
  416dc2:	jbe    0x416e09
  416dc4:	outs   dx,DWORD PTR ds:[esi]
  416dc5:	sti    
  416dc6:	sub    bh,dh
  416dc8:	cwde   
  416dc9:	mov    ecx,0x2b67a275
  416dce:	mov    dh,0xcf
  416dd0:	mov    eax,ds:0x1ae9a0d7
  416dd5:	aam    0x95
  416dd7:	jmp    0xfd3c8263
  416ddc:	mov    edx,0xf54d9bf4
  416de1:	into   
  416de2:	pop    ss
  416de3:	jp     0x416db2
  416de5:	ins    BYTE PTR es:[edi],dx
  416de6:	jmp    0x8229:0x89814711
  416ded:	jne    0x416e68
  416def:	cmp    al,0x43
  416df1:	dec    ebx
  416df2:	push   esp
  416df3:	jg     0x416d9a
  416df5:	adc    eax,0xfbabc80b
  416dfa:	ss push ebx
  416dfc:	inc    ebp
  416dfd:	loopne 0x416e2d
  416dff:	cmp    edi,eax
  416e01:	jmp    0xd6a7:0x56a579a4
  416e08:	sbb    DWORD PTR [esi-0xb3a6531],eax
  416e0e:	daa    
  416e0f:	(bad)  
  416e10:	ss xchg ebx,eax
  416e12:	sbb    al,0x8c
  416e14:	mov    ebp,0xda209d44
  416e19:	loopne 0x416e5c
  416e1b:	push   ds
  416e1c:	add    eax,0xe66fc5f7
  416e21:	push   ebx
  416e22:	xor    esi,DWORD PTR [eax]
  416e24:	in     al,0xac
  416e26:	mov    edi,0xab576141
  416e2b:	push   0x1c8d420f
  416e30:	fnsave [esi-0x6f]
  416e33:	add    BYTE PTR [edx],0x98
  416e36:	cmp    ebx,DWORD PTR [edi]
  416e38:	xchg   ecx,eax
  416e39:	div    BYTE PTR [ecx]
  416e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e3c:	arpl   bp,sp
  416e3e:	(bad)  
  416e3f:	push   ebp
  416e40:	inc    edx
  416e41:	lds    edx,FWORD PTR [ebx-0x40719818]
  416e47:	or     DWORD PTR [ebp+0x38],ebp
  416e4a:	scas   al,BYTE PTR es:[edi]
  416e4b:	hlt    
  416e4c:	pop    ebx
  416e4d:	fnstsw WORD PTR [esp+ebx*4]
  416e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e51:	mov    bl,al
  416e53:	pop    esp
  416e54:	icebp  
  416e55:	cmp    al,0x54
  416e57:	popf   
  416e58:	xor    BYTE PTR [eax-0x20],al
  416e5b:	push   edi
  416e5c:	xor    dh,ch
  416e5e:	xchg   ebx,eax
  416e5f:	jle    0x416e3a
  416e61:	out    dx,al
  416e62:	sub    eax,0x9c4906bd
  416e67:	imul   ecx,DWORD PTR [edx],0x21
  416e6a:	adc    DWORD PTR [ebx-0x6f865f5d],0x70b80774
  416e74:	mov    esi,0x39948e68
  416e79:	retf   
  416e7a:	xchg   ebp,ebx
  416e7c:	add    al,0x2c
  416e7e:	repz jmp 0x7d23:0x16c54c08
  416e86:	and    BYTE PTR [eax-0x65d263e0],bh
  416e8c:	inc    eax
  416e8d:	cmp    esi,DWORD PTR [edi+0x136e9ebb]
  416e93:	jp     0x416edb
  416e95:	dec    esi
  416e96:	aam    0x80
  416e98:	or     esp,DWORD PTR [eax]
  416e9a:	adc    al,al
  416e9c:	mov    DWORD PTR [ebx-0x4de172c5],eax
  416ea2:	mov    ah,0xfe
  416ea4:	sub    dh,bh
  416ea6:	out    dx,eax
  416ea7:	mov    cl,0xbe
  416ea9:	out    0xb9,al
  416eab:	or     al,0xf7
  416ead:	push   esi
  416eae:	cwde   
  416eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb1:	jp     0x416ef3
  416eb3:	shl    DWORD PTR [edi+0xa2161f0],0x6f
  416eba:	ret    
  416ebb:	pusha  
  416ebc:	fs (bad) 
  416ebe:	(bad)  
  416ebf:	out    0x43,eax
  416ec1:	mov    BYTE PTR fs:[ebp-0x5e2f0af3],0xc1
  416ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eca:	shl    DWORD PTR [ebp+0x5c1f7c96],cl
  416ed0:	pop    eax
  416ed1:	mov    ebp,0x56983bff
  416ed6:	xor    eax,0x5f884f84
  416edb:	jb     0x416e78
  416edd:	pop    ebx
  416ede:	mov    gs,WORD PTR [ebx]
  416ee0:	aaa    
  416ee1:	mov    bh,0x2d
  416ee3:	test   BYTE PTR [edi],bh
  416ee5:	or     BYTE PTR [ebp+0x59],bh
  416ee8:	xchg   edi,eax
  416ee9:	push   ebx
  416eea:	jmp    0xbef3:0xf404e6e4
  416ef1:	leave  
  416ef2:	mov    al,0xc5
  416ef4:	mov    WORD PTR [edi-0x5be61fdd],ss
  416efa:	(bad)  [ebp-0x7a357b82]
  416f00:	mov    esi,0xb92c3a1c
  416f05:	in     al,dx
  416f06:	(bad)  
  416f07:	jmp    0xb23ec76d
  416f0c:	xchg   edi,eax
  416f0d:	mov    ebx,0x79c132be
  416f12:	xchg   BYTE PTR [esi+0x4],bl
  416f15:	push   ds
  416f16:	pop    ecx
  416f17:	int    0xaf
  416f19:	sti    
  416f1a:	and    DWORD PTR [eax-0x4b],0xd1768ac7
  416f21:	or     eax,0x3548f007
  416f26:	shl    DWORD PTR [ebx-0x464827a5],0x89
  416f2d:	(bad)  
  416f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f2f:	ds mov esp,0x1759ac71
  416f35:	mov    esi,0x545b3e52
  416f3a:	push   edx
  416f3b:	xlat   BYTE PTR ds:[ebx]
  416f3c:	das    
  416f3d:	bswap  ebx
  416f3f:	repnz pop esp
  416f41:	das    
  416f42:	mov    ah,0xc3
  416f44:	add    al,0xd3
  416f46:	(bad)  [ebx-0x6f]
  416f49:	(bad)  
  416f4a:	mov    bh,0x80
  416f4c:	or     BYTE PTR [edx],0x14
  416f4f:	loope  0x416f54
  416f51:	xchg   ebx,eax
  416f52:	mov    edi,0x21efeab8
  416f57:	lock inc ebp
  416f59:	pop    ss
  416f5a:	ret    
  416f5b:	mov    ch,0x25
  416f5d:	(bad)  
  416f5e:	and    eax,0x18c05332
  416f63:	(bad)  
  416f64:	aam    0x24
  416f66:	sahf   
  416f67:	jbe    0x416fb3
  416f69:	jno    0x416fda
  416f6b:	pop    ss
  416f6c:	fwait
  416f6d:	inc    ecx
  416f6e:	mov    esi,0x2ff4590a
  416f73:	xor    dh,BYTE PTR [ebp-0x8]
  416f76:	jb     0x416f49
  416f78:	sahf   
  416f79:	push   ds
  416f7a:	mov    edi,0x5430f190
  416f7f:	retf   
  416f80:	sub    al,0x29
  416f82:	retf   
  416f83:	lods   eax,DWORD PTR ds:[esi]
  416f84:	jo     0x416f8b
  416f86:	aam    0xca
  416f88:	fcmovnb st,st(2)
  416f8a:	xchg   ebx,eax
  416f8b:	xor    BYTE PTR [esi-0x21],cl
  416f8e:	fwait
  416f8f:	(bad)
  416f92:	push   esp
  416f93:	push   ebx
  416f94:	dec    edi
  416f95:	je     0x416faa
  416f97:	stos   DWORD PTR es:[edi],eax
  416f98:	cmp    DWORD PTR [edx+0x3f276dd],0x9
  416f9f:	shr    bh,1
  416fa1:	cmp    al,0x46
  416fa3:	gs cld 
  416fa5:	mov    ds:0xff3f9731,eax
  416faa:	sub    esp,DWORD PTR ss:[ebx]
  416fad:	push   esp
  416fae:	cmp    dl,cl
  416fb0:	and    BYTE PTR [esp+ebx*2-0x65],ah
  416fb4:	add    BYTE PTR [ebx+ebx*4],ah
  416fb7:	cld    
  416fb8:	pop    DWORD PTR [ecx+0x15b55943]
  416fbe:	ret    
  416fbf:	ins    DWORD PTR es:[edi],dx
  416fc0:	pusha  
  416fc1:	sar    DWORD PTR [esi-0x18],cl
  416fc4:	mov    ebx,ds
  416fc6:	test   al,0x7f
  416fc8:	xor    edi,DWORD PTR [edx]
  416fca:	sbb    dl,bl
  416fcc:	mov    ecx,0x316dea92
  416fd1:	xor    DWORD PTR [eax+0x21b59aaf],edi
  416fd7:	shl    BYTE PTR [esi-0x20916198],cl
  416fdd:	mov    ds:0x8f4ca7ef,al
  416fe2:	add    al,0xe8
  416fe4:	push   ds
  416fe5:	jnp    0x416f9c
  416fe7:	or     al,0xa8
  416fe9:	ror    BYTE PTR [eax],0x4b
  416fec:	xor    eax,0x36df120
  416ff1:	les    esp,FWORD PTR cs:[ebx-0x53ace47a]
  416ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ff9:	cmp    edi,DWORD PTR [edi]
  416ffb:	out    dx,eax
  416ffc:	(bad)  
  416ffe:	test   ebx,edx
  417000:	jb     0x416ffd
  417002:	(bad)  [ebp+0x20]
  417005:	mov    eax,ds:0xb31455e9
  41700a:	mov    cl,0xe8
  41700c:	fdivr  QWORD PTR [edx]
  41700e:	jne    0x417084
  417010:	push   ebx
  417011:	xchg   BYTE PTR [ecx+edx*1+0x71952ab7],bh
  417018:	dec    ebx
  417019:	dec    edi
  41701a:	mov    ebx,0x176bb673
  41701f:	es das 
  417021:	jge    0x416fe5
  417023:	xchg   DWORD PTR [edi+edx*8+0x64],ebp
  417027:	lods   al,BYTE PTR ds:[esi]
  417028:	mov    esp,0x5b6dd441
  41702d:	and    al,dl
  41702f:	das    
  417030:	lahf   
  417031:	pop    edx
  417032:	test   esi,ebx
  417034:	jno    0x41702c
  417036:	pop    ss
  417037:	cmp    DWORD PTR [edx-0x6d],esp
  41703a:	fdiv   st(6),st
  41703c:	js     0x41700a
  41703e:	jp     0x41700b
  417040:	aam    0x74
  417042:	fisttp QWORD PTR [ebx+edx*4]
  417045:	es sub eax,0x733ed1a3
  41704b:	or     al,0xae
  41704d:	mov    WORD PTR [ecx],es
  41704f:	mov    esp,0x944fb312
  417054:	xor    BYTE PTR [esi+0x18],dh
  417057:	dec    edx
  417058:	sti    
  417059:	push   0x6e449ef0
  41705e:	lds    esi,FWORD PTR [edx+edi*1+0x5599878d]
  417065:	mov    esp,0xbee76929
  41706a:	cld    
  41706b:	adc    al,BYTE PTR [ecx+0x68]
  41706e:	mov    al,0x77
  417070:	sub    eax,0x71d15a68
  417075:	pop    ss
  417076:	push   esi
  417077:	sar    DWORD PTR [ecx+0x60],0xc4
  41707b:	add    al,0x13
  41707d:	lods   al,BYTE PTR ds:[esi]
  41707e:	push   esp
  41707f:	retf   0x6a86
  417082:	add    al,0x8a
  417084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417085:	cdq    
  417086:	and    eax,0x2505212c
  41708b:	hlt    
  41708c:	jo     0x41704c
  41708e:	data16 out 0x8f,al
  417091:	xlat   BYTE PTR ds:[ebx]
  417092:	mov    DWORD PTR [edx-0x25],esi
  417095:	fld    TBYTE PTR [ecx]
  417097:	or     edx,DWORD PTR [eax+0x53]
  41709a:	jb     0x4170f3
  41709c:	adc    ebp,edi
  41709e:	jne    0x417048
  4170a0:	das    
  4170a1:	ins    BYTE PTR es:[edi],dx
  4170a2:	in     al,0x88
  4170a4:	xchg   ebp,eax
  4170a5:	jmp    0x4170b6
  4170a7:	es enter 0x324d,0x28
  4170ac:	ret    0x5a17
  4170af:	and    BYTE PTR [esi+0x509e8e08],ch
  4170b5:	inc    ebp
  4170b6:	fnstcw WORD PTR [eax-0x7]
  4170b9:	pop    ss
  4170ba:	test   eax,0x68ddeb9b
  4170bf:	arpl   WORD PTR ds:0xa0cb8130,dx
  4170c5:	dec    esp
  4170c6:	bound  ebp,QWORD PTR [edi+0x113741f4]
  4170cc:	adc    esi,DWORD PTR [ebp+eax*8+0x2b]
  4170d0:	mov    ch,0xae
  4170d2:	mov    ah,0x3a
  4170d4:	mov    ds:0xa05d8900,eax
  4170d9:	jb     0x417084
  4170db:	int    0x88
  4170dd:	in     eax,dx
  4170de:	dec    ecx
  4170df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170e1:	push   es
  4170e2:	cmp    ebp,DWORD PTR [ebx+0x7d]
  4170e5:	mov    ebp,0xacd733f2
  4170ea:	jmp    0x3043:0x713d2a3
  4170f1:	adc    BYTE PTR [edi+0x7f2218bd],bh
  4170f7:	bnd jbe 0x4170ff
  4170fa:	push   es
  4170fb:	mov    al,0xf
  4170fd:	xor    al,0x70
  4170ff:	retf   
  417100:	sub    BYTE PTR [esp+eiz*4],al
  417103:	pop    ss
  417104:	mov    ebp,0x4e1e9a1f
  417109:	ds jno 0x41717a
  41710c:	mov    ah,0xbe
  41710e:	mov    ebx,0x84b4abf0
  417113:	jbe    0x417153
  417115:	pop    edx
  417116:	in     al,dx
  417117:	pushf  
  417118:	adc    eax,0x64004fc5
  41711d:	sub    eax,0xa1090896
  417122:	pop    eax
  417123:	daa    
  417124:	xlat   BYTE PTR ds:[ebx]
  417125:	out    0xb,al
  417127:	test   al,0xff
  417129:	in     eax,dx
  41712a:	push   edx
  41712b:	mov    bl,0xf9
  41712d:	inc    esi
  41712e:	test   DWORD PTR [ecx+0x5b],ecx
  417131:	sub    eax,eax
  417133:	leave  
  417134:	xchg   esi,eax
  417135:	repz inc ebp
  417137:	test   eax,0x8f4d243a
  41713c:	lahf   
  41713d:	retf   
  41713e:	sub    dl,ch
  417140:	inc    ebx
  417141:	jbe    0x4170fc
  417143:	mov    ebx,0x144f9e0e
  417148:	jae    0x417137
  41714a:	pop    ds
  41714b:	cmp    eax,0xca0e6911
  417150:	pop    esp
  417151:	std    
  417152:	pop    DWORD PTR [edx]
  417154:	mov    dh,0xd4
  417156:	ret    0xbf29
  417159:	in     eax,0x55
  41715b:	mov    ds:0xa5552eda,eax
  417160:	int3   
  417161:	or     eax,0x2bba29a1
  417166:	ins    DWORD PTR es:[edi],dx
  417167:	in     al,dx
  417168:	ret    0x4e19
  41716b:	stos   BYTE PTR es:[edi],al
  41716c:	mov    ch,0x9a
  41716e:	inc    esi
  41716f:	cmp    al,0xce
  417171:	inc    edi
  417172:	push   ebx
  417173:	addr16 (bad) 
  417175:	div    DWORD PTR [esi+0x4e372deb]
  41717b:	mov    ebp,0xa6be603d
  417180:	fstp   QWORD PTR [ebp+0x60bc1dd5]
  417186:	xchg   ebp,eax
  417187:	sbb    eax,0xfc4a028a
  41718c:	aaa    
  41718d:	inc    eax
  41718e:	mov    ds:0x145edb08,al
  417193:	jo     0x41717d
  417195:	out    0xcb,al
  417197:	inc    eax
  417198:	dec    esp
  417199:	sbb    BYTE PTR [edx],0xed
  41719c:	ret    0x2ea4
  41719f:	cdq    
  4171a0:	dec    ecx
  4171a1:	ss add eax,0xd4339b3e
  4171a7:	and    ch,ch
  4171a9:	sbb    eax,0xb7794e2c
  4171ae:	test   DWORD PTR [esi],edx
  4171b0:	out    0x5b,al
  4171b2:	in     eax,dx
  4171b3:	stos   BYTE PTR es:[edi],al
  4171b4:	mov    ecx,0x5b4211b
  4171b9:	out    0xd8,eax
  4171bb:	pusha  
  4171bc:	or     bh,BYTE PTR [esi+0x76]
  4171bf:	loope  0x41718f
  4171c1:	addr16 mov bh,0x55
  4171c4:	or     DWORD PTR [ebp+0x2],esi
  4171c7:	pusha  
  4171c8:	push   esp
  4171c9:	sbb    al,0xad
  4171cb:	mov    esi,0x5cd98f4c
  4171d0:	jno    0x41717b
  4171d2:	push   ecx
  4171d3:	popa   
  4171d4:	cmp    DWORD PTR [esi-0x61d964bd],eax
  4171da:	mov    ?,WORD PTR [ecx+esi*4+0x55]
  4171de:	mov    ds:0x1605415e,al
  4171e3:	push   ecx
  4171e4:	mov    ebx,0xabe53432
  4171e9:	jge    0x41722e
  4171eb:	mov    edi,0xdc51f0d7
  4171f0:	sahf   
  4171f1:	dec    ecx
  4171f2:	jl     0x4171ff
  4171f4:	mov    ebp,0xbe4ca0b7
  4171f9:	lea    edx,[edx+edi*2]
  4171fc:	mov    ds:0x32c2e352,al
  417201:	xor    BYTE PTR [eax-0x7ea52e1e],0x6
  417208:	sbb    BYTE PTR [ecx],ch
  41720a:	inc    esi
  41720b:	pop    ds
  41720c:	and    dh,BYTE PTR [ebx+0x47]
  41720f:	jnp    0x417266
  417211:	loopne 0x417250
  417213:	int    0x3f
  417215:	adc    ebx,DWORD PTR [edi]
  417217:	pop    edx
  417218:	sub    BYTE PTR [edi+0x7f],ch
  41721b:	test   al,0x69
  41721d:	adc    DWORD PTR [esi],edx
  41721f:	or     DWORD PTR [edi+ebx*8-0x23c667a6],esi
  417226:	dec    ecx
  417227:	push   ebp
  417228:	pop    edi
  417229:	mov    ?,WORD PTR [esi]
  41722b:	or     eax,0x7886df5d
  417230:	xchg   ebx,eax
  417231:	mov    dh,BYTE PTR [edx-0x44fe749b]
  417237:	dec    ebp
  417238:	sub    ebp,0x75
  41723b:	ficom  WORD PTR [ecx]
  41723d:	and    eax,0x78569c47
  417242:	sbb    eax,0x3a20232c
  417247:	push   ss
  417248:	imul   esp,DWORD PTR [edx+0x18],0x279df762
  41724f:	pop    esi
  417250:	adc    DWORD PTR [ecx+edi*2-0x43],ebx
  417254:	cld    
  417255:	cmp    BYTE PTR [eax],al
  417257:	mov    ah,0xf8
  417259:	jl     0x41720f
  41725b:	sub    eax,0xccd288da
  417260:	sbb    DWORD PTR [ebp-0x8],ecx
  417263:	push   esp
  417264:	out    dx,eax
  417265:	(bad)  
  417266:	sbb    al,0x21
  417268:	ret    
  417269:	dec    ebx
  41726a:	push   ebp
  41726b:	ja     0x417272
  41726d:	in     al,0x75
  41726f:	shl    BYTE PTR [esi+0x26],cl
  417272:	sub    dl,ch
  417274:	xchg   esp,eax
  417275:	out    0xa0,al
  417277:	cs xchg dx,ax
  41727a:	add    ch,BYTE PTR [ebx+0x36470f5a]
  417280:	mov    esi,0xbf476693
  417285:	sbb    DWORD PTR [ebp+0x76],esi
  417288:	inc    ecx
  417289:	add    eax,eax
  41728b:	pop    ss
  41728c:	mov    bh,0xfb
  41728e:	push   0xffffffc8
  417290:	ins    BYTE PTR es:[edi],dx
  417291:	cmp    al,0x69
  417293:	xchg   ebx,eax
  417294:	into   
  417295:	mov    edx,0xe43e7728
  41729a:	ins    BYTE PTR es:[edi],dx
  41729b:	push   ds
  41729c:	jb     0x417230
  41729e:	adc    BYTE PTR [ebp+0x642c6ac5],bh
  4172a4:	mov    cl,0xa0
  4172a6:	push   esp
  4172a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a8:	cmp    ah,BYTE PTR [edi+0x37]
  4172ab:	inc    ecx
  4172ac:	lods   al,BYTE PTR ds:[esi]
  4172ad:	mov    eax,0x333ee387
  4172b2:	push   eax
  4172b3:	dec    edi
  4172b4:	mov    esi,0x2fbb4d8b
  4172b9:	adc    dl,BYTE PTR [esi+0x75255721]
  4172bf:	pop    edi
  4172c0:	dec    eax
  4172c1:	mov    ebp,0x5d6b90fa
  4172c6:	xor    edx,DWORD PTR [eax-0x41]
  4172c9:	push   ebx
  4172ca:	xor    esp,ebx
  4172cc:	fistp  DWORD PTR [esi+edi*4+0x1a739302]
  4172d3:	add    BYTE PTR [esi+0x13],al
  4172d6:	sub    al,0x2c
  4172d8:	retf   0x9ed5
  4172db:	dec    ebx
  4172dc:	mov    cl,0xe6
  4172de:	lahf   
  4172df:	pop    esi
  4172e0:	jl     0x417337
  4172e2:	mov    edx,0x14cb9ace
  4172e7:	pop    edx
  4172e8:	cmp    al,0x62
  4172ea:	jge    0x417294
  4172ec:	jl     0x41731c
  4172ee:	inc    edx
  4172ef:	or     edx,DWORD PTR [esi+eax*1-0x22588545]
  4172f6:	add    eax,0xc881604b
  4172fb:	in     al,dx
  4172fc:	xor    al,0xfc
  4172fe:	jne    0x41732b
  417300:	sbb    eax,0x69af8d77
  417305:	scas   al,BYTE PTR es:[edi]
  417306:	add    al,0xa
  417308:	cmp    ecx,DWORD PTR [ecx-0x658d2b65]
  41730e:	popf   
  41730f:	jb     0x41733e
  417311:	or     bh,bl
  417313:	push   edx
  417314:	retf   0x3d07
  417317:	cmp    eax,0x20cce940
  41731c:	or     edx,ebp
  41731e:	jmp    0x1b079014
  417323:	add    eax,0xcb25dd44
  417328:	je     0x4172aa
  41732a:	sub    BYTE PTR [edx],ch
  41732c:	in     eax,dx
  41732d:	mov    WORD PTR [esi+0x0],?
  417330:	sub    eax,0xf83c7e1e
  417335:	ins    DWORD PTR es:[edi],dx
  417336:	push   ebp
  417337:	or     BYTE PTR es:[eax+0x6b],ch
  41733b:	and    ebp,DWORD PTR [ebp+0x3c]
  41733e:	cli    
  41733f:	mov    eax,DWORD PTR [edx+0x75]
  417342:	data16 sub al,0xc8
  417345:	retf   
  417346:	out    0x2,eax
  417348:	fdiv   QWORD PTR [ebp+ebp*4+0x1ecb7d16]
  41734f:	shl    BYTE PTR [edi+0x2],cl
  417352:	jmp    0x40b47be9
  417357:	dec    esi
  417358:	dec    edi
  417359:	(bad)  
  41735a:	adc    eax,0x64b84e83
  41735f:	inc    edi
  417360:	jmp    0x417334
  417362:	sar    BYTE PTR [edx],0xb0
  417365:	out    0x5f,eax
  417367:	jns    0x417350
  417369:	mov    ds:0x73fc0e60,eax
  41736e:	jle    0x41735c
  417370:	sub    eax,0x2bccf164
  417375:	xchg   BYTE PTR [eax+0x5194fa42],ch
  41737b:	jmp    0xe5d17c23
  417380:	inc    ebp
  417381:	xor    BYTE PTR [esi],dh
  417383:	ins    BYTE PTR es:[edi],dx
  417384:	in     al,dx
  417385:	mov    edi,0x6b914b87
  41738a:	(bad)  
  41738b:	push   0xaa93d342
  417390:	cli    
  417391:	jae    0x41733e
  417393:	lahf   
  417394:	out    dx,eax
  417395:	xchg   ecx,eax
  417396:	jns    0x417325
  417398:	and    eax,eax
  41739a:	ds jle 0x4173e8
  41739d:	je     0x4173ab
  41739f:	aaa    
  4173a0:	cmp    al,0x20
  4173a2:	xor    esi,DWORD PTR [eax-0x7aa2e5bc]
  4173a8:	inc    eax
  4173a9:	dec    edi
  4173aa:	mov    bl,0x25
  4173ac:	mov    ch,0xe7
  4173ae:	retf   
  4173af:	cmp    DWORD PTR [ecx+0x1a450090],ebp
  4173b5:	dec    ebx
  4173b6:	scas   al,BYTE PTR es:[edi]
  4173b7:	inc    edi
  4173b8:	nop
  4173b9:	hlt    
  4173ba:	xchg   ebp,eax
  4173bb:	sub    BYTE PTR [eax+0x3ccc9720],0x7d
  4173c2:	or     DWORD PTR [esi],eax
  4173c4:	sbb    ah,BYTE PTR [ebx]
  4173c6:	in     eax,0xd9
  4173c8:	mov    ecx,0x77352752
  4173cd:	dec    bp
  4173cf:	fcomp  QWORD PTR [edi-0xc]
  4173d2:	or     DWORD PTR [ecx-0x592a737b],esp
  4173d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d9:	test   BYTE PTR [ecx+0x3be5603b],ah
  4173df:	push   edx
  4173e0:	idiv   DWORD PTR [edi]
  4173e2:	lock mov esp,0x96f6d83
  4173e8:	xor    eax,0xc10a9698
  4173ed:	or     edi,DWORD PTR gs:[ebp-0x2b]
  4173f1:	fiadd  DWORD PTR [ecx]
  4173f3:	in     eax,dx
  4173f4:	ret    
  4173f5:	push   eax
  4173f6:	sub    DWORD PTR [ecx+0x67],esi
  4173f9:	hlt    
  4173fa:	neg    esp
  4173fc:	jg     0x417469
  4173fe:	sub    al,0x5c
  417400:	or     ch,BYTE PTR [ecx]
  417402:	mov    ?,WORD PTR [ebx+eax*8]
  417405:	xor    edi,esp
  417407:	push   eax
  417408:	pop    es
  417409:	ror    bl,cl
  41740b:	js     0x417396
  41740d:	or     DWORD PTR [edi],esi
  41740f:	or     edi,ebx
  417411:	inc    esp
  417412:	add    ah,BYTE PTR [ecx]
  417414:	or     dl,BYTE PTR [eax]
  417416:	mov    WORD PTR [ebx+0x28],gs
  417419:	shl    edi,1
  41741b:	(bad)  
  41741c:	ficom  WORD PTR [ebp+0x28344672]
  417422:	icebp  
  417423:	inc    ecx
  417424:	and    dl,BYTE PTR [edx+eax*2-0x78]
  417428:	inc    ebx
  417429:	inc    edx
  41742a:	jmp    0x9a41:0xe9108a42
  417431:	jmp    0x3444:0x6a7954db
  417438:	xor    al,0xe7
  41743a:	(bad)  
  41743b:	lods   eax,DWORD PTR ds:[si]
  41743d:	lods   al,BYTE PTR ds:[esi]
  41743e:	cli    
  41743f:	pushf  
  417440:	int3   
  417441:	dec    esp
  417442:	mov    eax,0xd2a6a19e
  417447:	adc    DWORD PTR [esi+ebp*4+0x67c4ccfb],esi
  41744e:	ss inc ebx
  417450:	xchg   ebx,eax
  417451:	mov    cl,0xdd
  417453:	aaa    
  417454:	sbb    eax,0xa7205078
  417459:	(bad)
  41745c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41745e:	xchg   ebp,eax
  41745f:	inc    eax
  417460:	push   cs
  417461:	xor    ebp,DWORD PTR [edx-0x63]
  417464:	xchg   ecx,eax
  417465:	cmp    al,0x16
  417467:	test   DWORD PTR [eax+ebx*2-0x70],ebp
  41746b:	xor    al,0x40
  41746d:	lds    ecx,FWORD PTR [ecx]
  41746f:	(bad)  
  417470:	imul   DWORD PTR [edi+eax*8+0x69]
  417474:	es hlt 
  417476:	mov    ds:0x31b9c461,eax
  41747b:	push   ds
  41747c:	jge    0x41744d
  41747e:	not    ch
  417480:	shl    DWORD PTR [esi+0x43],cl
  417483:	sbb    esi,edx
  417485:	pop    esi
  417486:	push   esp
  417487:	lods   al,BYTE PTR ds:[esi]
  417488:	outs   dx,BYTE PTR ds:[esi]
  417489:	fcmovnb st,st(7)
  41748b:	push   ecx
  41748c:	cmp    al,0x9f
  41748e:	xchg   esp,eax
  41748f:	outs   dx,DWORD PTR ds:[esi]
  417490:	mov    eax,ds:0x1a2ffbf9
  417495:	nop
  417496:	push   ds
  417497:	repnz (bad) 
  417499:	ds inc edi
  41749b:	outs   dx,DWORD PTR ds:[esi]
  41749c:	jae    0x41743c
  41749e:	xor    dh,BYTE PTR [eax]
  4174a0:	pop    edi
  4174a1:	mov    ebx,0xec7740c3
  4174a6:	mov    edx,0x35a62b08
  4174ab:	pop    ebp
  4174ac:	and    DWORD PTR [ebx+edi*4-0x74],ebp
  4174b0:	add    al,0xf4
  4174b2:	mov    fs,WORD PTR [ecx]
  4174b4:	in     eax,dx
  4174b5:	push   0x65
  4174b7:	mov    al,0x66
  4174b9:	loop   0x4174c0
  4174bb:	cmp    dh,ch
  4174bd:	call   FWORD PTR [ecx+0x70]
  4174c0:	mov    BYTE PTR [edx+0x48b01abe],ah
  4174c6:	mov    bh,BYTE PTR [ebx-0x1d]
  4174c9:	outs   dx,DWORD PTR ds:[esi]
  4174ca:	pop    es
  4174cb:	fdiv   QWORD PTR [eax-0x393c5f3]
  4174d1:	sbb    BYTE PTR [edx-0x74],dh
  4174d4:	in     al,dx
  4174d5:	or     al,0x1f
  4174d7:	inc    ebp
  4174d8:	push   esi
  4174d9:	xchg   DWORD PTR ds:0xd368300e,eax
  4174df:	jmp    0x417470
  4174e1:	(bad)  
  4174e3:	es loop 0x417513
  4174e6:	cmp    bl,BYTE PTR [esi]
  4174e8:	push   ebx
  4174e9:	or     DWORD PTR [ebx+0x32],esi
  4174ec:	fsub   DWORD PTR [esi-0x15e46d4c]
  4174f2:	push   eax
  4174f3:	xchg   BYTE PTR [ebp-0x2b2924e9],bl
  4174f9:	xor    esp,DWORD PTR [ebp-0x1e]
  4174fc:	aam    0x84
  4174fe:	xor    BYTE PTR [esi],0xb9
  417501:	push   eax
  417502:	sub    eax,0xc0a97bf4
  417507:	pop    ebp
  417508:	je     0x41752a
  41750a:	repz or al,0xe1
  41750d:	sub    eax,0x4d2ce2
  417512:	sahf   
  417513:	cmp    al,0xf3
  417515:	mov    bh,0xf3
  417517:	enter  0xc93c,0x8c
  41751b:	dec    ebx
  41751c:	jge    0x4174ee
  41751e:	mov    ch,0x7e
  417520:	or     al,0xcf
  417522:	push   eax
  417523:	dec    esp
  417524:	(bad)  
  417526:	mov    BYTE PTR [edi+0x39],bl
  417529:	retf   
  41752a:	and    DWORD PTR [eax-0x7a],0x26
  41752e:	retf   0x271d
  417531:	xchg   DWORD PTR [eax+eax*1],edi
  417534:	and    eax,DWORD PTR [ebp-0x68068966]
  41753a:	or     al,0x7d
  41753c:	scas   eax,DWORD PTR es:[edi]
  41753d:	jno    0x4174e5
  41753f:	imul   ecx,DWORD PTR [edx+0x4f],0xba912f1f
  417546:	inc    esi
  417547:	(bad)  
  417548:	push   ebp
  417549:	data16 sahf 
  41754b:	mov    ebp,0x64e42782
  417550:	imul   ecx,DWORD PTR [ebp+0x4e],0x1c63c86b
  417557:	dec    esp
  417558:	jmp    0xcc45:0xb427e862
  41755f:	stos   BYTE PTR es:[edi],al
  417560:	lock imul esi,DWORD PTR [esi+0x58],0x52
  417565:	leave  
  417566:	pusha  
  417567:	or     ch,ah
  417569:	sub    edi,esi
  41756b:	sbb    al,0x66
  41756d:	(bad)  
  41756f:	mov    ds:0x81de7577,eax
  417574:	inc    ebp
  417575:	int3   
  417576:	cmp    esp,0xffffffe9
  417579:	popa   
  41757a:	sahf   
  41757b:	and    eax,0x3f953f5f
  417580:	aaa    
  417581:	add    esi,eax
  417583:	sub    DWORD PTR [edi-0x4e],edx
  417586:	mov    al,ds:0xc85a2dde
  41758b:	and    DWORD PTR [ebp+0x705b08b3],eax
  417591:	mov    es,WORD PTR [ecx+0x1c422da7]
  417597:	not    ebp
  417599:	call   0x2e7245b2
  41759e:	add    al,0xdc
  4175a0:	sbb    BYTE PTR [ecx+0x64b01077],dh
  4175a6:	push   0x3e
  4175a8:	dec    ebp
  4175a9:	push   ds
  4175aa:	push   ecx
  4175ab:	fnsave [eax-0x1d]
  4175ae:	je     0x4175b8
  4175b0:	out    0xe4,eax
  4175b2:	ds inc edx
  4175b4:	or     eax,0xd611bdb9
  4175b9:	jns    0x4175eb
  4175bb:	sar    BYTE PTR [esi-0x23],0xa5
  4175bf:	cmp    bh,cl
  4175c1:	les    edi,FWORD PTR [eax+edx*4+0x1590b0cc]
  4175c8:	jo     0x4175bb
  4175ca:	gs in  eax,dx
  4175cc:	mov    dh,0xda
  4175ce:	cdq    
  4175cf:	add    eax,0x248ae29f
  4175d4:	add    BYTE PTR ds:0x11c55195,al
  4175da:	jno    0x417625
  4175dc:	or     al,bl
  4175de:	sbb    BYTE PTR [edi],dh
  4175e0:	idiv   BYTE PTR [edx+0x6fac2c41]
  4175e6:	repnz adc DWORD PTR fs:[edx],0x381fc531
  4175ee:	jbe    0x4175d1
  4175f0:	ds cli 
  4175f2:	out    0x1b,al
  4175f4:	lods   al,BYTE PTR ds:[esi]
  4175f5:	adc    eax,0xc0343540
  4175fa:	pop    ss
  4175fb:	fisubr DWORD PTR [ecx+0x34]
  4175fe:	mov    WORD PTR [edi-0x4302ad41],?
  417604:	and    edi,DWORD PTR [esi+edi*2+0x5f]
  417608:	sbb    eax,0xc4fb21e3
  41760d:	adc    ecx,DWORD PTR [ebx-0x15b7264c]
  417613:	xchg   DWORD PTR [eax],esp
  417615:	call   DWORD PTR [edi+ebx*4]
  417618:	arpl   WORD PTR [esp+eax*4+0x34],dx
  41761c:	xor    edi,DWORD PTR [edx-0x471cee4a]
  417622:	iret   
  417623:	shl    BYTE PTR [eax+0x4c32b0a9],0xbb
  41762a:	(bad)  
  41762b:	sbb    eax,0x939c690
  417630:	push   es
  417631:	sbb    eax,0xb28d71cc
  417636:	inc    ebx
  417637:	pop    es
  417638:	dec    esp
  417639:	mov    ebx,0x752b2543
  41763e:	ret    
  41763f:	aad    0x5f
  417641:	mov    ah,0xb3
  417643:	(bad)  
  417644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417645:	and    BYTE PTR [ebx-0x46],bl
  417648:	or     bh,BYTE PTR [eax]
  41764a:	rol    al,0xd1
  41764d:	mov    al,0x70
  41764f:	les    esp,FWORD PTR [si]
  417652:	jl     0x41766a
  417654:	es fld DWORD PTR ds:[ebx]
  417658:	dec    ecx
  417659:	cdq    
  41765a:	or     ch,bh
  41765c:	push   edx
  41765d:	inc    ebx
  41765e:	hlt    
  41765f:	arpl   di,cx
  417661:	lds    esp,FWORD PTR [ebx]
  417663:	rcl    BYTE PTR [esi-0x38],cl
  417666:	add    BYTE PTR [eax-0x60f7061c],ah
  41766c:	mov    al,ds:0xc4105f4f
  417671:	jne    0x4176b1
  417673:	in     eax,0x90
  417675:	mov    edx,DWORD PTR [eax]
  417677:	jmp    0xd287:0x2e097318
  41767e:	mov    bh,BYTE PTR [ebx-0x4a]
  417681:	aam    0xfc
  417683:	std    
  417684:	cmc    
  417685:	mov    edi,0xb0702662
  41768a:	mov    ds:0x92913cbb,al
  41768f:	ins    BYTE PTR es:[edi],dx
  417690:	sti    
  417691:	(bad)  
  417692:	fld    QWORD PTR [edi+0x3604ddf7]
  417698:	mov    dh,0x9e
  41769a:	shl    BYTE PTR [edi+0x7fb8d9c7],cl
  4176a0:	xchg   edi,eax
  4176a1:	imul   esi,DWORD PTR [esi-0x3578fb03],0x4e613775
  4176ab:	cmc    
  4176ac:	add    ebx,ebp
  4176ae:	jg     0x41767f
  4176b0:	ror    DWORD PTR [esi+0x552bf714],0x8
  4176b7:	cmp    ch,BYTE PTR [edx+0x58f09307]
  4176bd:	rcl    BYTE PTR [ebx-0x11],cl
  4176c0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4176c2:	inc    ebx
  4176c3:	mov    edi,0x11978704
  4176c8:	pop    ebp
  4176c9:	inc    edi
  4176ca:	cmp    eax,DWORD PTR [eax]
  4176cc:	fwait
  4176cd:	xchg   ebp,eax
  4176ce:	mov    al,ds:0x34379755
  4176d3:	sbb    cl,BYTE PTR ds:0xa84f6de3
  4176d9:	inc    ecx
  4176da:	cmc    
  4176db:	inc    edx
  4176dc:	pop    ebx
  4176dd:	xor    BYTE PTR [eax+edi*4-0x5c],bl
  4176e1:	pop    eax
  4176e2:	mov    dh,0x3
  4176e4:	call   DWORD PTR [esi+0x5e2fe798]
  4176ea:	adc    eax,0x5ea88911
  4176ef:	inc    esi
  4176f0:	pop    eax
  4176f1:	xchg   edi,eax
  4176f2:	cmp    ch,BYTE PTR [esi]
  4176f4:	add    BYTE PTR [ecx+0x5c847a99],bh
  4176fa:	enter  0x2197,0x34
  4176fe:	out    0x2a,eax
  417700:	arpl   WORD PTR [edx+0x42e0cd72],sp
  417706:	loope  0x41769a
  417708:	sbb    eax,0x8667b532
  41770d:	and    ecx,DWORD PTR [ecx-0x39]
  417710:	test   DWORD PTR [ecx-0x4f7d7e5a],esp
  417716:	xchg   esp,eax
  417717:	cli    
  417718:	push   eax
  417719:	mov    WORD PTR [eax+0x6efaa22c],cs
  41771f:	sbb    BYTE PTR [edi-0x24],dl
  417722:	lds    edi,FWORD PTR [edx+0x445c4ef7]
  417728:	mov    dl,0xdb
  41772a:	lahf   
  41772b:	or     eax,0x779a2d81
  417730:	mov    dl,0x20
  417732:	jecxz  0x4176e1
  417734:	lock dec ecx
  417736:	push   ss
  417737:	lahf   
  417738:	pop    ss
  417739:	xor    DWORD PTR [eax-0x20247631],eax
  41773f:	mov    edi,0xba5f5dcf
  417744:	mov    ds:0xbeb451cc,eax
  417749:	push   ss
  41774a:	gs loope 0x4176df
  41774d:	cli    
  41774e:	hlt    
  41774f:	lds    edi,FWORD PTR [ebp+0x4ad3b273]
  417755:	idiv   DWORD PTR [edx+0x40]
  417758:	stos   BYTE PTR es:[edi],al
  417759:	(bad)  
  41775a:	ds loop 0x417736
  41775d:	mov    dl,0xae
  41775f:	sbb    dh,ch
  417761:	xor    edx,DWORD PTR [eax+0x3a]
  417764:	sbb    eax,0xfbc7fbb5
  417769:	sbb    eax,0x8fd0d8f
  41776e:	or     ah,bh
  417770:	mov    ds:0x67ec957c,al
  417775:	jbe    0x417781
  417777:	xor    eax,0x8bb9965e
  41777c:	sbb    BYTE PTR [edx+ecx*1-0xb],dl
  417780:	pop    es
  417781:	aam    0xef
  417783:	jmp    0x29934f64
  417788:	xchg   ebx,eax
  417789:	rcr    BYTE PTR [eax+0x7843058b],cl
  41778f:	and    dl,BYTE PTR [edx+0x53]
  417792:	loop   0x417773
  417794:	cwde   
  417795:	rcl    DWORD PTR [ecx-0x6bc9390b],0x8d
  41779c:	arpl   WORD PTR [edx+0x32],bp
  41779f:	ds cli 
  4177a1:	rol    DWORD PTR [ecx+0x63],0x4e
  4177a5:	cmp    eax,0xb9477f85
  4177aa:	mov    dh,0x9f
  4177ac:	outs   dx,BYTE PTR ds:[esi]
  4177ad:	dec    esi
  4177ae:	rcl    BYTE PTR [edx+edx*4+0x69b5a0d],0x9
  4177b6:	xor    BYTE PTR [esp+eiz*8-0x62bb46d9],bl
  4177bd:	sti    
  4177be:	add    ebx,DWORD PTR [ebp+0x46]
  4177c1:	fwait
  4177c2:	dec    esi
  4177c3:	ret    
  4177c4:	adc    eax,0xa06ac4bc
  4177c9:	cmpps  xmm2,XMMWORD PTR [edi-0x1b772103],0xcd
  4177d1:	iret   
  4177d2:	sahf   
  4177d3:	jns    0x4177d7
  4177d5:	add    dh,BYTE PTR [ecx-0x4123f43c]
  4177db:	leave  
  4177dc:	xor    al,0x34
  4177de:	jle    0x417816
  4177e0:	adc    DWORD PTR [ebp-0x62],0x7bb5f8d2
  4177e7:	scas   al,BYTE PTR es:[di]
  4177e9:	test   DWORD PTR [ebx],ebp
  4177eb:	push   edi
  4177ec:	or     BYTE PTR [edx-0x27c14928],dl
  4177f2:	sbb    BYTE PTR ds:0x77f31cfb,0x46
  4177f9:	jns    0x417804
  4177fb:	scas   al,BYTE PTR es:[edi]
  4177fc:	mov    ch,0x3f
  4177fe:	(bad)  
  4177ff:	fld    st(0)
  417801:	int3   
  417802:	xor    al,0xee
  417804:	stos   DWORD PTR es:[edi],eax
  417805:	mov    eax,ds:0x63f1bc69
  41780a:	call   0x1b66b6ba
  41780f:	lods   al,BYTE PTR ds:[esi]
  417810:	xchg   DWORD PTR [ebp+0x8],esi
  417813:	add    al,0xec
  417815:	mov    DWORD PTR [edx],0xca4b7493
  41781b:	popa   
  41781c:	cwde   
  41781d:	add    cl,BYTE PTR [edi+0x26cf0d5]
  417823:	sbb    al,0xc3
  417825:	jle    0x4177f1
  417827:	push   edx
  417828:	lahf   
  417829:	fisttp QWORD PTR [esi]
  41782b:	add    al,0xc1
  41782d:	outs   dx,BYTE PTR ds:[esi]
  41782e:	inc    ebp
  41782f:	jne    0x4177bd
  417831:	ins    DWORD PTR es:[edi],dx
  417832:	cmp    edi,DWORD PTR [esi]
  417834:	hlt    
  417835:	pusha  
  417836:	inc    eax
  417837:	lea    edi,gs:[edx]
  41783a:	mov    al,0x83
  41783c:	cmp    DWORD PTR [eax+0x6a88b441],ebp
  417842:	xchg   BYTE PTR [edx],cl
  417844:	and    al,0xc3
  417846:	imul   edi,DWORD PTR [ebp+eiz*8+0x56],0x592d72d2
  41784e:	fmul   DWORD PTR [esi+0x2e9ae771]
  417854:	cmp    al,0xdf
  417856:	push   ebx
  417857:	cwde   
  417858:	fmul   st,st(0)
  41785a:	ds pop ebx
  41785c:	fstp   TBYTE PTR [esi]
  41785e:	loope  0x417805
  417860:	fwait
  417861:	mov    eax,ds:0x567728ed
  417866:	pop    eax
  417867:	mov    dl,0x4e
  417869:	mov    ecx,0xbbf33190
  41786e:	repnz scas eax,DWORD PTR es:[edi]
  417870:	mov    dh,0x2
  417872:	icebp  
  417873:	ret    
  417874:	xor    eax,0x7d187316
  417879:	and    eax,0x1e5b1576
  41787e:	and    edx,ebx
  417880:	mov    ds:0xafcdcb7f,eax
  417885:	mov    dh,0xe7
  417887:	or     eax,0x46e3556f
  41788c:	adc    BYTE PTR [ebp+esi*4-0x6428889e],dl
  417893:	xor    DWORD PTR [edi],esp
  417895:	fnsetpm(287 only) 
  417897:	shl    ebp,cl
  417899:	push   edx
  41789a:	jmp    0xf0259153
  41789f:	aad    0xca
  4178a1:	int3   
  4178a2:	xchg   ebp,eax
  4178a3:	and    esp,esp
  4178a5:	xchg   ebp,eax
  4178a6:	outs   dx,DWORD PTR ds:[esi]
  4178a7:	aad    0x74
  4178a9:	call   0xe93f7f93
  4178ae:	xchg   esp,eax
  4178af:	xor    DWORD PTR [edi-0x75c25166],edi
  4178b5:	push   esp
  4178b6:	pop    es
  4178b7:	jecxz  0x4178f4
  4178b9:	pop    es
  4178ba:	dec    esi
  4178bb:	add    DWORD PTR [esi+0x226a7b47],esi
  4178c1:	cmc    
  4178c2:	xor    ebx,edi
  4178c4:	xor    esp,edx
  4178c6:	sahf   
  4178c7:	xchg   BYTE PTR [ebx+eiz*2],cl
  4178ca:	push   ecx
  4178cb:	sub    ebp,DWORD PTR [esi]
  4178cd:	push   si
  4178cf:	push   edx
  4178d0:	std    
  4178d1:	inc    ecx
  4178d2:	sbb    esp,0x15b50370
  4178d8:	sub    al,0x8a
  4178da:	jg     0x417959
  4178dc:	xchg   ebx,eax
  4178dd:	pop    ecx
  4178de:	stos   DWORD PTR es:[edi],eax
  4178df:	sbb    al,bh
  4178e1:	mov    ds:0x109d3c79,al
  4178e6:	mov    ebx,0xd89dd447
  4178eb:	cmp    BYTE PTR [edi],ah
  4178ed:	pop    edx
  4178ee:	pop    eax
  4178ef:	shl    eax,0x1
  4178f2:	out    0x77,eax
  4178f4:	outs   dx,DWORD PTR ds:[esi]
  4178f5:	adc    DWORD PTR [edx+0x25b413ee],ebx
  4178fb:	push   edx
  4178fc:	ret    
  4178fd:	and    eax,0xae57a20e
  417902:	je     0x41793b
  417904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417905:	call   0x2de6:0x40f40267
  41790c:	and    BYTE PTR [edx-0x70d2d8d8],dh
  417912:	lods   eax,DWORD PTR ds:[esi]
  417913:	cmp    al,0x4d
  417915:	cmp    BYTE PTR [edx-0x6c46e29c],bl
  41791b:	or     dl,BYTE PTR [esp+ebp*1]
  41791e:	ins    DWORD PTR es:[edi],dx
  41791f:	mov    eax,0x86d5beb6
  417924:	xchg   ebx,eax
  417925:	outs   dx,DWORD PTR ds:[esi]
  417926:	jne    0x41797e
  417928:	scas   al,BYTE PTR es:[edi]
  417929:	lods   eax,DWORD PTR ds:[esi]
  41792a:	adc    DWORD PTR [esi],eax
  41792c:	inc    esi
  41792d:	jecxz  0x41799c
  41792f:	xchg   ebp,edx
  417931:	pop    esp
  417932:	pop    ds
  417933:	push   esi
  417934:	rcr    DWORD PTR [ecx+0x1a56ce4b],cl
  41793a:	rol    DWORD PTR [eax],cl
  41793c:	pop    ss
  41793d:	data16 lock jne 0x417920
  417941:	inc    eax
  417942:	mov    ds:0x5c0869fc,al
  417947:	test   al,0xeb
  417949:	scas   al,BYTE PTR es:[edi]
  41794a:	adc    BYTE PTR [edx+eiz*8],0xd3
  41794e:	nop
  41794f:	data16 sti 
  417951:	push   ebx
  417952:	and    DWORD PTR [ecx],ebx
  417954:	gs pop ds
  417956:	(bad)  
  417957:	mov    edx,0x5f041d00
  41795c:	jmp    DWORD PTR [ebx+0x3a]
  41795f:	loope  0x417999
  417961:	mov    cl,0xf
  417963:	xchg   DWORD PTR [edi+0x2a21964f],ebx
  417969:	jbe    0x417967
  41796b:	out    dx,al
  41796c:	adc    BYTE PTR cs:[ebx],dh
  41796f:	int3   
  417970:	clc    
  417971:	or     al,BYTE PTR cs:[ebx+edx*2]
  417975:	call   0x780d971d
  41797a:	mov    ecx,0x816ba498
  41797f:	mov    eax,0xf0daee99
  417984:	rdpmc  
  417986:	mov    ds:0xf32ea73,al
  41798b:	fbstp  TBYTE PTR [ecx+0x29]
  41798e:	nop
  41798f:	sub    ch,bh
  417991:	cli    
  417992:	les    esp,FWORD PTR [ecx+0x41]
  417995:	jmp    0x7b6f:0x5d64c5ea
  41799c:	imul   dl
  41799e:	push   cs
  41799f:	jg     0x4179b7
  4179a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179a3:	jno    0x4179f5
  4179a5:	es dec edi
  4179a7:	sub    ah,BYTE PTR [edx+esi*4-0x6f7d254]
  4179ae:	jmp    0x4179cb
  4179b0:	sub    BYTE PTR cs:[esi],cl
  4179b3:	test   al,0xd8
  4179b5:	and    DWORD PTR [ebp+0x298e0c2f],ebp
  4179bb:	or     BYTE PTR [ecx-0x6aef2b34],bh
  4179c1:	xlat   BYTE PTR ds:[ebx]
  4179c2:	mov    ds:0xdc77fbe8,al
  4179c7:	(bad)  
  4179c8:	mov    ss,WORD PTR [edx-0x4f]
  4179cb:	mov    edi,0x8f38bcf0
  4179d0:	repz or eax,0x5ba5f390
  4179d6:	xchg   edx,eax
  4179d7:	dec    ebp
  4179d8:	or     DWORD PTR [edi],0x11
  4179db:	and    DWORD PTR [edi+ecx*2-0x6],0xb7db966
  4179e3:	jb     0x417a1f
  4179e5:	call   0x3b9:0xe14de4bf
  4179ec:	es jae 0x417a03
  4179ef:	adc    dl,al
  4179f1:	lea    esp,[ebx]
  4179f3:	(bad)  
  4179f4:	push   cs
  4179f5:	mov    ds:0x7188ce0,eax
  4179fa:	outs   dx,DWORD PTR ds:[esi]
  4179fb:	xchg   ecx,eax
  4179fc:	xor    DWORD PTR [edx+0x24],esi
  4179ff:	push   esi
  417a00:	jle    0x4179ba
  417a02:	xchg   edi,eax
  417a03:	(bad)  
  417a04:	and    al,0x64
  417a06:	pop    ebp
  417a07:	xchg   ebx,esp
  417a09:	into   
  417a0a:	jae    0x417a3f
  417a0c:	cmp    BYTE PTR [esi+0x61b70fc6],dh
  417a12:	lahf   
  417a13:	and    esi,eax
  417a15:	fld    TBYTE PTR [ebp-0x19]
  417a18:	jne    0x4179bc
  417a1a:	(bad)  
  417a1b:	out    dx,al
  417a1c:	sub    ch,ch
  417a1e:	pop    ds
  417a1f:	mov    BYTE PTR [eax],dl
  417a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a22:	stos   DWORD PTR es:[edi],eax
  417a23:	xlat   BYTE PTR ds:[ebx]
  417a24:	xlat   BYTE PTR ds:[ebx]
  417a25:	cmp    eax,0x67556af9
  417a2a:	or     cl,cl
  417a2c:	or     ecx,DWORD PTR [esi]
  417a2e:	mov    eax,ds:0x1866f64b
  417a33:	fcomp  DWORD PTR [eax-0x74]
  417a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a37:	sub    eax,0x36b263e
  417a3c:	(bad)  
  417a3e:	sub    al,0x29
  417a40:	push   ss
  417a41:	in     al,0xbd
  417a43:	xchg   esi,eax
  417a44:	fimul  DWORD PTR [eax]
  417a46:	(bad)  
  417a47:	mov    dl,0xcb
  417a49:	scas   eax,DWORD PTR es:[edi]
  417a4a:	das    
  417a4b:	adc    al,0x92
  417a4d:	cmp    BYTE PTR [ebx+ebx*8],dl
  417a50:	add    cl,BYTE PTR [edx-0x49]
  417a53:	mov    BYTE PTR [ebx-0x239ade6d],bh
  417a59:	push   eax
  417a5a:	icebp  
  417a5b:	popa   
  417a5c:	popa   
  417a5d:	(bad)  
  417a5e:	mov    ecx,0x8f05d173
  417a63:	hlt    
  417a64:	cmp    DWORD PTR [edi+esi*8-0x15],eax
  417a68:	adc    esi,DWORD PTR ds:0xa5a7b134
  417a6e:	ja     0x417a81
  417a70:	mov    ecx,0xf53a8471
  417a75:	out    dx,al
  417a76:	pop    edi
  417a77:	jb     0x417a58
  417a79:	js     0x417aea
  417a7b:	iret   
  417a7c:	pop    edi
  417a7d:	inc    esi
  417a7e:	mov    bl,0x6b
  417a80:	cli    
  417a81:	xchg   ebx,eax
  417a82:	jmp    0xb23db8ef
  417a87:	hlt    
  417a88:	push   ss
  417a89:	cwde   
  417a8a:	push   0xb1b34e1e
  417a8f:	pop    ebx
  417a90:	cmp    BYTE PTR [edi],al
  417a92:	inc    esi
  417a93:	inc    esi
  417a94:	dec    eax
  417a95:	add    DWORD PTR [ecx],ecx
  417a97:	(bad)  
  417a98:	and    al,0xcd
  417a9a:	fisttp DWORD PTR [esi+0x12152dba]
  417aa0:	clc    
  417aa1:	dec    eax
  417aa2:	stc    
  417aa3:	xor    dl,dh
  417aa5:	retf   0xbb48
  417aa8:	inc    ecx
  417aa9:	shl    DWORD PTR [eax+0x4a0bebef],cl
  417aaf:	and    BYTE PTR [esi+0xd65c509],ah
  417ab5:	(bad)  
  417ab6:	int    0xd
  417ab8:	adc    eax,0xf5245817
  417abd:	or     BYTE PTR [edi-0x76f80eae],al
  417ac3:	mov    eax,ds:0x983f154e
  417ac8:	leave  
  417ac9:	test   DWORD PTR ds:0x1ea0525e,0xf7ee50f1
  417ad3:	mov    eax,0x47f479e1
  417ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ad9:	ror    DWORD PTR [esi-0x7e],0x4c
  417add:	popf   
  417ade:	popf   
  417adf:	call   0x9f88:0x1b6bf70d
  417ae6:	mov    cl,0xdf
  417ae8:	cli    
  417ae9:	jno    0x417b1e
  417aeb:	shr    DWORD PTR ds:[ebx+ebx*4-0x38],1
  417af0:	daa    
  417af1:	clc    
  417af2:	(bad)  
  417af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417af4:	xchg   dh,dl
  417af6:	lds    edx,FWORD PTR [esi+ecx*1+0x2ece600e]
  417afd:	aam    0x98
  417aff:	loop   0x417b4d
  417b01:	xor    al,0xe
  417b03:	inc    esp
  417b04:	outs   dx,BYTE PTR ds:[esi]
  417b05:	xchg   esp,eax
  417b06:	xchg   ebx,eax
  417b07:	test   al,0x12
  417b09:	pop    ecx
  417b0a:	fisubr WORD PTR [edx+0xfff481c]
  417b10:	(bad)  
  417b11:	retf   
  417b12:	lock push esi
  417b14:	test   dl,bl
  417b16:	in     al,dx
  417b17:	and    BYTE PTR [ebx+0x830193b],cl
  417b1d:	push   cs
  417b1e:	js     0x417b13
  417b20:	cmp    al,0x9b
  417b22:	mov    ecx,0x9169e524
  417b27:	jno    0x417b5d
  417b29:	mov    al,0xc0
  417b2b:	or     eax,0x27342568
  417b30:	enter  0x902b,0x1d
  417b34:	cmp    al,0xd2
  417b36:	retf   0xe25d
  417b39:	imul   BYTE PTR [esi-0x78d9ce77]
  417b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b40:	xor    al,0xd2
  417b42:	in     eax,dx
  417b43:	outs   dx,BYTE PTR ds:[esi]
  417b44:	pop    ecx
  417b45:	fcomp  QWORD PTR [eax+0x439a3eab]
  417b4b:	nop
  417b4c:	push   eax
  417b4d:	ins    DWORD PTR es:[edi],dx
  417b4e:	sbb    ch,BYTE PTR [ebx-0x7c]
  417b51:	not    BYTE PTR [edi]
  417b53:	adc    dl,BYTE PTR [esp+eiz*2]
  417b56:	(bad)  
  417b57:	dec    eax
  417b58:	sub    DWORD PTR [ebx+0x5ef51783],ebp
  417b5e:	mov    ebp,DWORD PTR [edx-0xb]
  417b61:	lea    esi,[ebx]
  417b63:	jmp    0x5d56:0x36e39d15
  417b6a:	xchg   esp,eax
  417b6b:	jne    0x417b58
  417b6d:	out    0x92,al
  417b6f:	mov    cl,BYTE PTR [ebx+eiz*2]
  417b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b73:	in     eax,0xab
  417b75:	push   ebp
  417b76:	cld    
  417b77:	lods   al,BYTE PTR ds:[esi]
  417b78:	enter  0xdf9c,0xde
  417b7c:	in     al,0xf3
  417b7e:	adc    BYTE PTR ds:0xd439ba15,bl
  417b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b85:	pop    ds
  417b86:	xchg   edi,eax
  417b87:	sbb    al,0x8f
  417b89:	pop    esp
  417b8a:	(bad)  
  417b8b:	fsub   QWORD PTR [eax+0xa0f8c75]
  417b91:	cdq    
  417b92:	adc    al,0x55
  417b94:	stos   DWORD PTR es:[edi],eax
  417b95:	jecxz  0x417b41
  417b97:	adc    al,0x3c
  417b99:	stos   DWORD PTR es:[edi],eax
  417b9a:	inc    esi
  417b9b:	in     al,dx
  417b9c:	or     ebx,DWORD PTR [eax+edi*4]
  417b9f:	cs in  eax,dx
  417ba1:	inc    ebx
  417ba2:	fwait
  417ba3:	jle    0x417b6b
  417ba5:	mov    dh,0x33
  417ba7:	jns    0x417bb0
  417ba9:	stos   DWORD PTR es:[edi],eax
  417baa:	push   esi
  417bab:	xchg   edx,eax
  417bac:	aam    0xf3
  417bae:	adc    BYTE PTR [edx-0x4515ceca],ch
  417bb4:	arpl   WORD PTR [esi+0x51],di
  417bb7:	pushf  
  417bb8:	data16 add al,0x2e
  417bbb:	and    al,0xdd
  417bbd:	hlt    
  417bbe:	xchg   BYTE PTR [edi+ecx*1-0x556d5b25],al
  417bc5:	adc    DWORD PTR [edi-0x423d0ba],esp
  417bcb:	inc    ebp
  417bcc:	adc    eax,0xc0cb187e
  417bd1:	int3   
  417bd2:	pop    ebp
  417bd3:	ror    BYTE PTR [edx-0x6ae671b8],0xbf
  417bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bdb:	and    DWORD PTR [esi+0x1a],0x258715d3
  417be2:	stc    
  417be3:	jecxz  0x417b93
  417be5:	add    DWORD PTR [ebx+0x602c64b7],ebp
  417beb:	test   al,0x87
  417bed:	mov    dl,0x69
  417bef:	das    
  417bf0:	int3   
  417bf1:	iret   
  417bf2:	int    0x36
  417bf4:	stos   BYTE PTR es:[edi],al
  417bf5:	clc    
  417bf6:	sbb    ebx,eax
  417bf8:	pop    ds
  417bf9:	scas   eax,DWORD PTR es:[edi]
  417bfa:	fsubr  QWORD PTR [edx+0x2b3db7c0]
  417c00:	cs gs jb 0x417c2a
  417c04:	sbb    eax,0x36662fc2
  417c09:	or     al,0x7e
  417c0b:	fidiv  WORD PTR [edx-0x697ce112]
  417c11:	out    dx,al
  417c12:	mov    ch,0xad
  417c14:	in     eax,0x2d
  417c16:	sbb    dh,al
  417c18:	and    eax,DWORD PTR ds:[edx]
  417c1b:	mov    bh,BYTE PTR ds:[esi-0xcf7e5b1]
  417c22:	ret    
  417c23:	cwde   
  417c24:	xor    dl,BYTE PTR [ecx+ebx*2]
  417c27:	mov    ecx,0xa1f9bca6
  417c2c:	fwait
  417c2d:	cwde   
  417c2e:	in     al,dx
  417c2f:	push   0x1b
  417c31:	scas   al,BYTE PTR es:[edi]
  417c32:	push   eax
  417c33:	dec    esi
  417c34:	mov    WORD PTR [eax+0x4],fs
  417c37:	jge    0x417c9e
  417c39:	sub    edi,DWORD PTR [ecx+0x1698f9fd]
  417c3f:	mov    esp,0x7979abb6
  417c44:	push   0x38
  417c46:	rol    dl,1
  417c48:	popf   
  417c49:	add    DWORD PTR [ecx],esp
  417c4b:	fs jae 0x417c1f
  417c4e:	les    edx,FWORD PTR [edi]
  417c50:	dec    ecx
  417c51:	inc    eax
  417c52:	xchg   ebp,eax
  417c53:	icebp  
  417c54:	sbb    eax,0x1c54de33
  417c59:	add    DWORD PTR [ebp-0x43430242],0x4a283a29
  417c63:	fucomp st(5)
  417c65:	cmp    al,0x22
  417c67:	mov    ecx,0x1f9203ad
  417c6c:	fnstcw WORD PTR [ebx-0x33]
  417c6f:	pop    edi
  417c70:	jmp    0x417c8f
  417c72:	xchg   edx,eax
  417c73:	sbb    ch,bh
  417c75:	adc    ah,BYTE PTR [edi+0x6f3305a7]
  417c7b:	jp     0x417c14
  417c7d:	pop    ebx
  417c7e:	sub    eax,0x1c9ef24a
  417c83:	inc    ebx
  417c84:	adc    eax,0x80ca0857
  417c89:	cs or  eax,0x3b5a86fe
  417c8f:	test   DWORD PTR [esi+0x3b],eax
  417c92:	jmp    0x417c76
  417c94:	in     al,0xbe
  417c96:	pop    edx
  417c97:	cmp    edx,DWORD PTR ds:0xf736df96
  417c9d:	dec    eax
  417c9e:	jmp    0xd5db:0xbfe186d6
  417ca5:	cmc    
  417ca6:	mov    bh,0x60
  417ca8:	loope  0x417c9f
  417caa:	scas   al,BYTE PTR es:[edi]
  417cab:	inc    edi
  417cac:	(bad)  
  417cae:	push   edi
  417caf:	jle    0x417ce8
  417cb1:	mov    bh,0x4d
  417cb3:	jge    0x417d16
  417cb5:	inc    esi
  417cb6:	xor    BYTE PTR [ebp-0x6d],ch
  417cb9:	xchg   ebx,eax
  417cba:	mov    dh,0x17
  417cbc:	mov    ebx,0x596839e3
  417cc1:	add    ebx,ecx
  417cc3:	int3   
  417cc4:	enter  0xb5c1,0xdd
  417cc8:	mov    ds:0x670d0e99,eax
  417ccd:	outs   dx,BYTE PTR ds:[esi]
  417cce:	mov    esi,0xe344bba0
  417cd3:	jecxz  0x417c9c
  417cd5:	push   eax
  417cd6:	repnz repnz push cs
  417cd9:	push   edx
  417cda:	or     ecx,DWORD PTR [ebx+esi*8+0xe72023a]
  417ce1:	push   ecx
  417ce2:	nop
  417ce3:	in     eax,0xee
  417ce5:	push   cs
  417ce6:	fisttp WORD PTR [ecx+eiz*8]
  417ce9:	mov    WORD PTR [edi-0x1bf14ab9],es
  417cef:	jmp    0x8f25:0x4568205e
  417cf6:	pushf  
  417cf7:	cmp    eax,0x763122a2
  417cfc:	loop   0x417cd2
  417cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cff:	xor    DWORD PTR [ebp-0x6b],0xffffff91
  417d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d04:	pop    ebx
  417d05:	repnz loope 0x417d5a
  417d08:	cld    
  417d09:	pusha  
  417d0a:	mov    bp,0xaffe
  417d0e:	inc    edx
  417d0f:	pop    ss
  417d10:	push   0x69
  417d12:	dec    ebx
  417d13:	push   eax
  417d14:	cli    
  417d15:	mov    ds:0x5b60dca2,al
  417d1a:	fst    QWORD PTR [ebx+0x7125502d]
  417d20:	xor    BYTE PTR ds:0xb7c58478,ch
  417d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d27:	addr16 push ds
  417d29:	and    al,0xbe
  417d2b:	cmp    BYTE PTR [ecx-0xeac158],bl
  417d31:	mov    al,BYTE PTR [eax]
  417d33:	push   cs
  417d34:	adc    bh,BYTE PTR [edi-0x7d8eb436]
  417d3a:	jne    0x417d43
  417d3c:	sbb    ebp,eax
  417d3e:	mov    ebx,0x223d59a2
  417d43:	cs xchg ebx,eax
  417d45:	jae    0x417d07
  417d47:	lods   eax,DWORD PTR ds:[esi]
  417d48:	pop    eax
  417d49:	mov    BYTE PTR [edi],bl
  417d4b:	loope  0x417d57
  417d4d:	into   
  417d4e:	shr    ebx,cl
  417d50:	cwde   
  417d51:	xor    al,0xa6
  417d53:	push   ebx
  417d54:	mov    edx,0x9826951a
  417d59:	and    al,0xe7
  417d5b:	cmp    ecx,DWORD PTR [ebp+edx*2+0x1113c78f]
  417d62:	repnz and BYTE PTR [eax-0x56],0x49
  417d67:	fiadd  WORD PTR [esi-0x69f1e372]
  417d6d:	ret    
  417d6e:	hlt    
  417d6f:	mov    ecx,0xd7e53585
  417d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d75:	xor    DWORD PTR ds:0x6aa6cf46,edx
  417d7b:	sbb    ch,ah
  417d7d:	daa    
  417d7e:	lods   eax,DWORD PTR ds:[esi]
  417d7f:	(bad)  
  417d80:	xor    al,BYTE PTR [ecx]
  417d82:	scas   eax,DWORD PTR es:[edi]
  417d83:	in     al,0xb7
  417d85:	cli    
  417d86:	js     0x417dee
  417d88:	loop   0x417dbf
  417d8a:	cli    
  417d8b:	mov    esp,DWORD PTR [ecx]
  417d8d:	push   esi
  417d8e:	xchg   esp,eax
  417d8f:	lahf   
  417d90:	lock mov bh,BYTE PTR [ecx+0x23]
  417d94:	dec    ecx
  417d95:	mov    edx,0xa5f247a8
  417d9a:	scas   eax,DWORD PTR es:[edi]
  417d9b:	ss (bad) 
  417d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d9e:	(bad)  
  417d9f:	sbb    esi,DWORD PTR [ebx+0x13]
  417da2:	mov    dh,0x31
  417da4:	pushf  
  417da5:	out    dx,al
  417da6:	pop    edx
  417da7:	inc    esp
  417da8:	iret   
  417da9:	sub    eax,0xa9ec3a44
  417dae:	ins    DWORD PTR es:[edi],dx
  417daf:	or     al,0xcc
  417db1:	aaa    
  417db2:	cwde   
  417db3:	fld    TBYTE PTR ds:0x49264f02
  417db9:	pop    ebx
  417dba:	ins    DWORD PTR es:[edi],dx
  417dbb:	in     al,dx
  417dbc:	inc    ecx
  417dbd:	retf   
  417dbe:	imul   esi,DWORD PTR [edi],0x408b01cb
  417dc4:	mov    ds:0x5911b507,eax
  417dc9:	gs stos DWORD PTR es:[edi],eax
  417dcb:	sbb    eax,0x967c5f19
  417dd0:	out    dx,eax
  417dd1:	je     0x417dc1
  417dd3:	popf   
  417dd4:	out    dx,eax
  417dd5:	test   DWORD PTR [ecx+edi*1],ebp
  417dd8:	mov    edi,DWORD PTR [ebx+eax*8]
  417ddb:	mov    ebx,0x787af891
  417de0:	fldlg2 
  417de2:	xor    eax,0x96913d29
  417de7:	add    al,0x81
  417de9:	test   DWORD PTR [ebx+0x7f],0xb09a34fe
  417df0:	iret   
  417df1:	xor    al,0x23
  417df3:	lods   al,BYTE PTR ds:[esi]
  417df4:	(bad)  
  417df5:	imul   ebx,DWORD PTR [edi+ecx*4-0x3bd73608],0xdb8b1963
  417e00:	loope  0x417dcf
  417e02:	in     al,0x65
  417e04:	fwait
  417e05:	xlat   BYTE PTR ds:[ebx]
  417e06:	mov    bh,0x79
  417e08:	adc    dl,ch
  417e0a:	and    BYTE PTR [eax],ch
  417e0c:	xchg   ebp,eax
  417e0d:	cmp    al,0xac
  417e0f:	mov    esp,0x1c222911
  417e14:	fnstcw WORD PTR [ecx]
  417e16:	mov    ecx,0x8212318d
  417e1b:	ins    DWORD PTR es:[edi],dx
  417e1c:	repz in al,dx
  417e1e:	adc    ah,al
  417e20:	dec    ebp
  417e21:	ins    BYTE PTR es:[edi],dx
  417e22:	and    BYTE PTR [eax-0x9],0x0
  417e26:	(bad)  
  417e27:	pop    esp
  417e28:	xor    edx,ebp
  417e2a:	popa   
  417e2b:	mov    bh,0x40
  417e2d:	xchg   ecx,eax
  417e2e:	call   0xbac1b3ce
  417e33:	mov    esp,DWORD PTR gs:[eax+0x1e]
  417e37:	jl     0x417e8a
  417e39:	xchg   BYTE PTR [edx-0x513e2751],ch
  417e3f:	inc    edi
  417e40:	dec    ebp
  417e41:	cmp    eax,0xd9630ff9
  417e46:	jne    0x417ec6
  417e48:	mov    DWORD PTR ds:0x6c6af09a,esi
  417e4e:	daa    
  417e4f:	shr    dh,cl
  417e51:	mov    fs,WORD PTR [eax+0x22]
  417e54:	mov    ds:0x939649bf,al
  417e59:	retf   0x7d19
  417e5c:	adc    al,0xa1
  417e5e:	add    al,0xe1
  417e60:	adc    eax,0xde596a90
  417e65:	inc    esp
  417e66:	popa   
  417e67:	jmp    DWORD PTR [edx]
  417e69:	mov    al,ds:0xb7dd792b
  417e6e:	aad    0x44
  417e70:	neg    bh
  417e72:	mov    dl,0x53
  417e74:	inc    ebx
  417e75:	sub    eax,DWORD PTR [ebx+0x13d5eb88]
  417e7b:	in     eax,dx
  417e7c:	shl    DWORD PTR [eax+0xdb95c91],0x27
  417e83:	and    al,0x9
  417e85:	gs pop eax
  417e87:	add    DWORD PTR [ebp-0x3d],ebx
  417e8a:	into   
  417e8b:	loop   0x417e8f
  417e8d:	cmp    DWORD PTR [esi],ebx
  417e8f:	test   eax,0x403b65ec
  417e94:	and    eax,0x5157694
  417e99:	retf   
  417e9a:	ins    BYTE PTR es:[edi],dx
  417e9b:	jb     0x417f03
  417e9d:	inc    eax
  417e9e:	xchg   esp,eax
  417e9f:	leave  
  417ea0:	push   esi
  417ea1:	bound  ecx,QWORD PTR [ecx+0xfc80862]
  417ea7:	sub    DWORD PTR [edx+0x9b90bbd],0x4b
  417eae:	push   ss
  417eaf:	pop    esi
  417eb0:	fnstsw WORD PTR [eax+ebp*8+0x6c98888]
  417eb7:	data16 mov dl,0xbe
  417eba:	jp     0x417e52
  417ebc:	jne    0x417e4f
  417ebe:	and    DWORD PTR [eax],0xffffffb0
  417ec1:	aas    
  417ec2:	sbb    eax,0xd111808a
  417ec7:	dec    ecx
  417ec8:	add    bl,dl
  417eca:	imul   ebx,edi,0xffffff8c
  417ecd:	xor    ah,BYTE PTR [ebp-0x7b]
  417ed0:	adc    al,0x57
  417ed2:	jmp    FWORD PTR [ecx]
  417ed4:	mov    ds:0xc1a0e58b,al
  417ed9:	repnz xchg esi,eax
  417edb:	aas    
  417edc:	call   0xa158cff0
  417ee1:	sbb    esp,esp
  417ee3:	and    eax,0x7fa2237d
  417ee8:	add    al,BYTE PTR [edi]
  417eea:	imul   esp,edi,0x3f81f457
  417ef0:	jmp    0x417f19
  417ef2:	out    0xe0,eax
  417ef4:	shl    DWORD PTR ds:0x6145aaae,0xd3
  417efb:	sbb    DWORD PTR [ecx-0x1b74b8fd],ebp
  417f01:	fcom   DWORD PTR [ecx-0x57]
  417f04:	sbb    eax,0x12977787
  417f09:	(bad)  
  417f0a:	int3   
  417f0b:	jmp    0x6efc1592
  417f10:	inc    esi
  417f11:	retf   
  417f12:	std    
  417f13:	push   0xfb0a0afa
  417f18:	xor    al,0x44
  417f1a:	mov    ebx,0x5448635f
  417f1f:	js     0x417f93
  417f21:	mov    ebx,0xd8bc221e
  417f26:	mov    edx,0x28e0c980
  417f2b:	in     al,0x2
  417f2d:	sbb    eax,0x17794443
  417f32:	fimul  DWORD PTR [ecx]
  417f34:	inc    edx
  417f35:	xor    DWORD PTR [ebx],ebp
  417f37:	cmp    BYTE PTR cs:[ebp+eax*1+0x79e9464a],0x2c
  417f40:	push   0x29
  417f42:	sub    edx,edi
  417f44:	cmp    al,0xe9
  417f46:	xchg   ebx,eax
  417f47:	mov    ds:0xaee59a2a,ax
  417f4d:	dec    ebx
  417f4e:	scas   al,BYTE PTR es:[edi]
  417f4f:	imul   edi,DWORD PTR [ecx+0x19],0x58
  417f53:	adc    dl,cl
  417f55:	push   ds
  417f56:	int    0xa8
  417f58:	das    
  417f59:	sub    ebp,DWORD PTR [eax]
  417f5b:	mov    ecx,0x6120d1f8
  417f60:	add    ebx,DWORD PTR [edi-0x59]
  417f63:	sar    BYTE PTR [ecx-0x65],1
  417f66:	bound  ecx,QWORD PTR [ebp+0x721ef283]
  417f6c:	ins    BYTE PTR es:[edi],dx
  417f6d:	and    DWORD PTR [edi+edi*1-0x54],esp
  417f71:	cmp    al,0x96
  417f73:	adc    DWORD PTR [eax-0x1ff17450],esp
  417f79:	jp     0x417f17
  417f7b:	sbb    dl,0xc4
  417f7e:	das    
  417f7f:	sub    al,0xa7
  417f81:	jae    0x417f69
  417f83:	arpl   WORD PTR [ebx+0x76b0fae2],di
  417f89:	lock int3 
  417f8b:	jge    0x417fb5
  417f8d:	mov    ds:0xafef439f,al
  417f92:	fwait
  417f93:	ss cmp al,0x76
  417f96:	sub    BYTE PTR [ecx+0x3fa34974],bl
  417f9c:	or     al,0x58
  417f9e:	jp     0x417f5a
  417fa0:	xchg   esp,esp
  417fa2:	jbe    0x417fd9
  417fa4:	les    ebp,FWORD PTR [edx+edx*8+0x7b]
  417fa8:	sub    al,0x5d
  417faa:	xor    cl,BYTE PTR [esi]
  417fac:	fst    st(6)
  417fae:	jmp    0x417f72
  417fb0:	mov    ebp,ebp
  417fb2:	push   ebx
  417fb3:	push   ecx
  417fb4:	in     eax,dx
  417fb5:	add    esp,esp
  417fb7:	dec    ecx
  417fb8:	fdivr  DWORD PTR [ebx+0x19]
  417fbb:	(bad)  
  417fbc:	cmp    DWORD PTR [eax],esi
  417fbe:	sar    esi,cl
  417fc0:	dec    edx
  417fc1:	pop    ss
  417fc2:	retf   0x58f9
  417fc5:	cld    
  417fc6:	popa   
  417fc7:	dec    edi
  417fc8:	jmp    0x5274b6c
  417fcd:	ins    DWORD PTR es:[edi],dx
  417fce:	sbb    BYTE PTR [eax+0x1a2ee25],bh
  417fd4:	jp     0x418003
  417fd6:	pushf  
  417fd7:	shl    bl,cl
  417fd9:	inc    ecx
  417fda:	lock cmp eax,DWORD PTR [esi+0x126a1885]
  417fe1:	arpl   WORD PTR [edx-0x5c73aed0],ax
  417fe7:	test   dl,ah
  417fe9:	jo     0x417fe1
  417feb:	sub    BYTE PTR [ecx-0x643ae0a9],ch
  417ff1:	pop    es
  417ff2:	hlt    
  417ff3:	or     BYTE PTR [ecx-0x72308584],0x56
  417ffa:	add    al,0xd2
  417ffc:	add    al,0x29
  417ffe:	xchg   DWORD PTR [edx+0x70],esp
  418001:	and    al,0x54
  418003:	and    BYTE PTR [bx+di-0x2288],0x6
  418009:	loop   0x418015
  41800b:	mov    eax,0xd47a1798
  418010:	xor    edi,DWORD PTR [ecx]
  418012:	push   0x210baa68
  418017:	ret    0x14af
  41801a:	pop    esp
  41801b:	stc    
  41801c:	dec    edi
  41801d:	mov    ch,0xe7
  41801f:	test   al,0x7e
  418021:	sbb    ah,dh
  418023:	sbb    al,0xc9
  418025:	out    0xdb,eax
  418027:	push   ds
  418028:	gs mov edi,0xbdc68b2
  41802e:	lds    esi,FWORD PTR [eax]
  418030:	lds    ecx,FWORD PTR [esi]
  418032:	sbb    esp,eax
  418034:	fiadd  DWORD PTR [ecx+0x31]
  418037:	pop    esp
  418038:	sar    edx,cl
  41803a:	adc    BYTE PTR [esi],ch
  41803c:	mov    ds:0x95a2625d,eax
  418041:	sub    dl,BYTE PTR ss:[ebx+edx*8+0x3c]
  418046:	stc    
  418047:	mov    ds:0xfce82a20,eax
  41804c:	loope  0x417fd3
  41804e:	add    ch,BYTE PTR [ebx+0x48]
  418051:	inc    ebp
  418052:	inc    edi
  418053:	or     ecx,edi
  418055:	cmp    al,0x9b
  418057:	ja     0x41807a
  418059:	scas   eax,DWORD PTR es:[edi]
  41805a:	outs   dx,DWORD PTR ds:[esi]
  41805b:	dec    DWORD PTR [ebp+ebp*1-0x18]
  41805f:	push   edi
  418060:	pop    ss
  418061:	jecxz  0x41802e
  418063:	cmp    eax,0x83f57c27
  418068:	jmp    0xddeec8a1
  41806d:	pop    ss
  41806e:	inc    esi
  41806f:	sub    al,0xd9
  418071:	mov    ds:0xb8ec5867,al
  418076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418077:	es and ebx,ebx
  41807a:	inc    ebx
  41807b:	inc    edx
  41807c:	adc    ebp,eax
  41807e:	out    dx,eax
  41807f:	sub    ebx,DWORD PTR [esi-0x6fd33cf8]
  418085:	mov    esi,0x48779964
  41808a:	push   edx
  41808b:	ficom  DWORD PTR [esi-0x294879b5]
  418091:	nop
  418092:	popf   
  418093:	inc    edi
  418094:	sbb    BYTE PTR [edx-0x47],bl
  418097:	mov    eax,0xa1b6bcfd
  41809c:	outs   dx,DWORD PTR ds:[esi]
  41809d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809e:	sub    BYTE PTR [ebx],dl
  4180a0:	in     eax,dx
  4180a1:	and    esi,esp
  4180a3:	stos   DWORD PTR es:[edi],eax
  4180a4:	mov    dh,0x7f
  4180a6:	std    
  4180a7:	fsub   QWORD PTR gs:[ebp-0x26]
  4180ab:	inc    ebp
  4180ac:	fdecstp 
  4180ae:	lods   al,BYTE PTR ds:[esi]
  4180af:	and    edi,DWORD PTR [eax+0x492e01f0]
  4180b5:	jmp    0xf02046de
  4180ba:	push   DWORD PTR ds:0xb66f4a32
  4180c0:	mov    esp,DWORD PTR [ebp+0x6e95d49a]
  4180c6:	xchg   esp,eax
  4180c7:	mov    al,BYTE PTR [edx]
  4180c9:	inc    esp
  4180ca:	loope  0x4180ef
  4180cc:	mov    es,WORD PTR [eax+ecx*1+0x4c]
  4180d0:	or     eax,0x45e31006
  4180d5:	ins    DWORD PTR es:[edi],dx
  4180d6:	jmp    0x418063
  4180d8:	pushf  
  4180d9:	mov    dl,0xe9
  4180db:	lods   al,BYTE PTR ds:[esi]
  4180dc:	jmp    0x3c481da0
  4180e1:	lea    esi,[esi-0x17f9f827]
  4180e7:	push   0x18247807
  4180ec:	sub    al,0xfe
  4180ee:	dec    esi
  4180ef:	jno    0x4180ba
  4180f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f2:	adc    eax,0xa8c27e30
  4180f7:	js     0x418094
  4180f9:	mov    ebp,0xd3862561
  4180fe:	loop   0x41811a
  418100:	push   esi
  418101:	dec    edx
  418102:	sbb    eax,DWORD PTR [ecx-0x5e45df4f]
  418108:	jecxz  0x4180e8
  41810a:	dec    edx
  41810b:	pop    ebp
  41810c:	dec    eax
  41810d:	or     BYTE PTR [edx],cl
  41810f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418110:	test   eax,0x3c88628
  418115:	dec    eax
  418116:	popa   
  418117:	or     DWORD PTR [esi-0x27420098],ebp
  41811d:	aad    0xb1
  41811f:	xchg   DWORD PTR [edi+0x1cd59ca7],eax
  418125:	or     DWORD PTR [ebp+0x255b1b05],0xffffffaf
  41812c:	dec    ebx
  41812d:	xor    bh,dl
  41812f:	mov    dh,0xde
  418131:	and    dl,BYTE PTR [ebx]
  418133:	dec    esp
  418134:	cli    
  418135:	sahf   
  418136:	jo     0x4180cc
  418138:	push   esp
  418139:	xchg   edx,eax
  41813a:	into   
  41813b:	inc    esp
  41813c:	sbb    bl,dl
  41813e:	or     edx,DWORD PTR [eax-0xc]
  418141:	xor    eax,0x706e5f43
  418146:	pop    ds
  418147:	push   ebp
  418148:	adc    al,0x40
  41814a:	mov    eax,ds:0x134b2c1e
  41814f:	cmp    al,0x15
  418151:	xchg   ebp,eax
  418152:	ds scas eax,DWORD PTR es:[edi]
  418154:	mov    bh,0x25
  418156:	push   ebx
  418157:	xor    dl,BYTE PTR [ecx]
  418159:	fs (bad) 
  41815b:	push   esp
  41815c:	mov    eax,DWORD PTR [ebx]
  41815e:	xchg   ecx,eax
  41815f:	xchg   esi,eax
  418160:	inc    edx
  418161:	loope  0x418130
  418163:	fsub   QWORD PTR [ebp*1-0x7fb143df]
  41816a:	je     0x418124
  41816c:	pop    ss
  41816d:	jge    0x41814f
  41816f:	sub    edi,esp
  418171:	cmp    DWORD PTR [ecx-0x2dd64186],ebx
  418177:	mov    edx,0xaac59876
  41817c:	sub    ah,BYTE PTR [ecx]
  41817e:	in     al,dx
  41817f:	fcmovnbe st,st(0)
  418181:	out    dx,eax
  418182:	jge    0x4181ee
  418184:	or     al,0xc0
  418186:	and    BYTE PTR [edx],0x90
  418189:	xor    eax,0xcbea3592
  41818e:	arpl   bp,di
  418190:	and    eax,0x5015fb0a
  418195:	test   eax,0xef295cff
  41819a:	or     BYTE PTR [ebx+0x5],ah
  41819d:	and    cl,BYTE PTR [esi+esi*8+0x39]
  4181a1:	repnz test bh,0x74
  4181a5:	int    0x23
  4181a7:	stos   BYTE PTR es:[edi],al
  4181a8:	punpckhbw mm5,QWORD PTR ds:0x4f1d8bb5
  4181af:	jmp    0xcecf:0xe687648b
  4181b6:	or     ch,bl
  4181b8:	popf   
  4181b9:	stos   BYTE PTR es:[edi],al
  4181ba:	and    eax,0xfa4c5168
  4181bf:	dec    esi
  4181c0:	xor    al,0xf
  4181c2:	sub    BYTE PTR [edx+0x7a],0x8f
  4181c6:	and    BYTE PTR [ecx-0x7b],dl
  4181c9:	fadd   st,st(4)
  4181cb:	js     0x418234
  4181cd:	retf   
  4181ce:	lahf   
  4181cf:	out    0x2d,eax
  4181d1:	add    ebp,DWORD PTR ds:0xf21ce6ce
  4181d7:	add    eax,0x52dd1b2d
  4181dc:	or     al,0x5d
  4181de:	neg    DWORD PTR [ebp+0x2018216]
  4181e4:	call   0x4e52:0x710cce9b
  4181eb:	fnsave [eax+0x47]
  4181ee:	sbb    al,0x9c
  4181f0:	pop    ss
  4181f1:	fld1   
  4181f3:	or     al,0x70
  4181f5:	xor    bh,ch
  4181f7:	jae    0x418204
  4181f9:	out    0xfc,eax
  4181fb:	mov    edx,0x2c7f68cb
  418201:	sub    al,0x65
  418203:	jmp    edi
  418205:	jns    0x418259
  418207:	mov    esi,0x2f1969ef
  41820c:	and    al,0x1c
  41820e:	add    DWORD PTR [eax-0x46b0ac87],0x251c0710
  418218:	ins    BYTE PTR es:[edi],dx
  418219:	shl    BYTE PTR [edi],0x3d
  41821c:	pop    edx
  41821d:	and    al,0x94
  41821f:	adc    DWORD PTR [edx+0x4e1baead],0xd8c8da8e
  418229:	shl    DWORD PTR [eax+0x6],1
  41822c:	cmp    DWORD PTR [eax-0x6a],esp
  41822f:	sub    al,0xaf
  418231:	pop    ebx
  418232:	mov    ebp,0x9ad15957
  418237:	ja     0x4181dd
  418239:	fcomp  DWORD PTR [edx+edi*8+0x4860cf54]
  418240:	leave  
  418241:	pop    edx
  418242:	jecxz  0x41821b
  418244:	ds inc edx
  418246:	(bad)  
  418247:	pushf  
  418248:	call   0xc9d0ab07
  41824d:	mov    ds:0xc1553ef0,eax
  418252:	lea    ebx,[edi]
  418254:	test   al,0x7d
  418256:	add    al,0xeb
  418258:	pop    edx
  418259:	add    al,0x26
  41825b:	mov    bl,0xb2
  41825d:	cmp    ebx,DWORD PTR [ebx-0x22]
  418260:	scas   al,BYTE PTR es:[edi]
  418261:	xchg   ecx,eax
  418262:	xchg   esi,eax
  418263:	adc    DWORD PTR [eax*8+0x7f9e0bb7],ecx
  41826a:	xchg   esi,eax
  41826b:	jge    0x418288
  41826d:	jmp    0xaf3559c7
  418272:	or     cl,BYTE PTR [edx-0x5d]
  418275:	retf   0xcc20
  418278:	and    ebx,DWORD PTR [ecx]
  41827a:	pop    esi
  41827b:	jo     0x4182d8
  41827d:	in     eax,0xea
  41827f:	xor    DWORD PTR [ebx],ecx
  418281:	repz rcr esi,1
  418284:	clc    
  418285:	div    DWORD PTR [ecx-0x23]
  418288:	scas   al,BYTE PTR es:[edi]
  418289:	call   0xd061:0x8c17ff10
  418290:	shl    DWORD PTR [esi+0x14],0x1b
  418294:	jp     0x4182b1
  418296:	pop    ds
  418297:	jns    0x4182dc
  418299:	mov    ds,WORD PTR [eax-0x4e8293d0]
  41829f:	sub    BYTE PTR [ebp+0x68],0xfa
  4182a3:	sbb    al,0xf9
  4182a5:	scas   eax,DWORD PTR es:[edi]
  4182a6:	or     ah,BYTE PTR [ecx+0x535dc817]
  4182ac:	add    al,0xa1
  4182ae:	push   es
  4182af:	call   0x37f4:0x982e2ace
  4182b6:	into   
  4182b7:	fwait
  4182b8:	xchg   edi,eax
  4182b9:	loopne 0x418330
  4182bb:	sub    eax,0x45
  4182be:	mov    WORD PTR [esi+0x56dcb9dc],gs
  4182c4:	gs gs test eax,0x532cf779
  4182cb:	xchg   ebp,eax
  4182cc:	mov    bh,0xee
  4182ce:	sti    
  4182cf:	(bad)  
  4182d0:	jo     0x418265
  4182d2:	push   ebx
  4182d3:	int    0x7d
  4182d5:	push   0xbbfe0b67
  4182da:	ret    
  4182db:	hlt    
  4182dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182dd:	ins    BYTE PTR es:[edi],dx
  4182de:	adc    DWORD PTR [ecx],0xd2b317f5
  4182e4:	cmc    
  4182e5:	mov    ah,BYTE PTR [eax-0xc4831ec]
  4182eb:	icebp  
  4182ec:	xchg   esi,eax
  4182ed:	mov    edi,0x2ac34b8b
  4182f2:	jge    0x418323
  4182f4:	fcomp  QWORD PTR [esi+0x2e]
  4182f7:	inc    esi
  4182f8:	xor    dh,dh
  4182fa:	jb     0x4182fc
  4182fc:	fbstp  TBYTE PTR [esi]
  4182fe:	mov    al,0x72
  418300:	rcl    DWORD PTR [eax+0x43],0x9b
  418304:	adc    al,0x65
  418307:	push   0xffffffcd
  418309:	(bad)  
  41830a:	sbb    al,0x83
  41830c:	repnz add dl,BYTE PTR [ecx-0x2593c493]
  418313:	jg     0x418299
  418315:	and    ebp,DWORD PTR [edi]
  418317:	sbb    DWORD PTR ds:0x3fdb5bb1,0x675e01dc
  418321:	xchg   ebp,edi
  418323:	xchg   esi,eax
  418324:	mov    eax,0x6c0aeb0
  418329:	adc    al,0xd8
  41832b:	cwde   
  41832c:	repz pushf 
  41832e:	ja     0x4182b9
  418330:	aaa    
  418331:	pop    ebx
  418332:	xchg   ecx,eax
  418333:	cmc    
  418334:	dec    edi
  418335:	cmp    BYTE PTR [esi],0x65
  418338:	shr    BYTE PTR [eax+0x221a98a4],0xfd
  41833f:	gs or  edx,esi
  418342:	jo     0x4183b3
  418344:	lahf   
  418345:	sbb    ch,cl
  418347:	push   ecx
  418348:	stos   BYTE PTR es:[edi],al
  418349:	mov    ch,0x1
  41834b:	cmp    ebx,DWORD PTR ds:0x5512f871
  418351:	push   eax
  418352:	rol    BYTE PTR [edx-0x203f300],1
  418358:	in     eax,0xa9
  41835a:	stc    
  41835b:	aaa    
  41835c:	mov    dl,0x59
  41835e:	mov    esp,0xcd0ca318
  418363:	cmp    BYTE PTR [ebx],0xdc
  418366:	sub    BYTE PTR [ebp-0x47c0a7cf],ah
  41836c:	ret    0x6c06
  41836f:	std    
  418370:	mov    eax,ds:0x49d92be5
  418375:	aas    
  418376:	gs ret 0xd9ea
  41837a:	add    edx,DWORD PTR [esi]
  41837c:	or     eax,esi
  41837e:	lea    ecx,[edx-0x2d]
  418381:	lock mov ecx,0xb651f4a4
  418387:	(bad)  
  418388:	mov    edx,0x59b9fe1a
  41838d:	test   al,0x39
  41838f:	es push ss
  418391:	out    dx,eax
  418392:	cmp    edx,DWORD PTR [eax+0x2]
  418395:	jno    0x4183d4
  418397:	adc    al,0x71
  418399:	fstp   st(7)
  41839b:	sub    cl,al
  41839d:	ins    DWORD PTR es:[edi],dx
  41839e:	arpl   bx,dx
  4183a0:	mov    DWORD PTR [esi-0x41c6f4ba],edi
  4183a6:	ins    DWORD PTR es:[edi],dx
  4183a7:	sub    al,ah
  4183a9:	xchg   esi,eax
  4183aa:	outs   dx,DWORD PTR ds:[esi]
  4183ab:	pushf  
  4183ac:	push   es
  4183ad:	push   ds
  4183ae:	je     0x418417
  4183b0:	cmp    ecx,edi
  4183b2:	das    
  4183b3:	dec    edx
  4183b4:	xor    DWORD PTR [edi+edi*4+0x48],0x4273a04a
  4183bc:	xchg   esi,eax
  4183bd:	sbb    edx,esp
  4183bf:	pop    ecx
  4183c0:	dec    esp
  4183c1:	je     0x418415
  4183c3:	push   cs
  4183c4:	inc    edx
  4183c5:	jnp    0x41841a
  4183c7:	jg     0x41835a
  4183c9:	or     ah,bh
  4183cb:	cld    
  4183cc:	adc    BYTE PTR [esi],cl
  4183ce:	shl    DWORD PTR [edi+0x21],1
  4183d1:	addr16 sahf 
  4183d3:	mov    dh,0x93
  4183d5:	fmul   DWORD PTR [eax+edx*1]
  4183d8:	or     ah,dh
  4183da:	fisubr WORD PTR [ebx]
  4183dc:	jecxz  0x41839d
  4183de:	jge    0x41837a
  4183e0:	(bad)  
  4183e1:	lahf   
  4183e2:	addr16 aam 0x7d
  4183e5:	xor    ch,al
  4183e7:	lods   eax,DWORD PTR ds:[esi]
  4183e8:	pop    es
  4183e9:	cmp    eax,0xc4e1e7df
  4183ee:	xor    esi,ecx
  4183f0:	ret    0x697e
  4183f3:	fwait
  4183f4:	and    ecx,DWORD PTR [ecx+ebp*8+0x1b194488]
  4183fb:	pop    esi
  4183fc:	pop    edi
  4183fd:	mov    edx,0xe78b064f
  418402:	push   edi
  418403:	repnz or ecx,DWORD PTR ds:0x25a936c4
  41840a:	mov    DWORD PTR es:[esi],ebp
  41840d:	jg     0x4183e3
  41840f:	jge    0x418449
  418411:	cdq    
  418412:	sub    DWORD PTR [edx-0xa2a571e],0xffffff97
  418419:	mov    BYTE PTR [edi+0x7],dl
  41841c:	mov    bh,0xb2
  41841e:	mov    ecx,ecx
  418420:	iret   
  418421:	push   edx
  418422:	daa    
  418423:	stc    
  418424:	(bad)  
  418425:	pop    ss
  418426:	xor    dl,cl
  418428:	pop    esp
  418429:	jmp    0x41849b
  41842b:	sbb    BYTE PTR [ecx+0x6c],ah
  41842e:	jp     0x4183cd
  418430:	pop    ds
  418431:	cdq    
  418432:	xchg   edx,eax
  418433:	push   edi
  418434:	dec    edi
  418435:	mov    ebx,0x33dbef06
  41843a:	push   0x93342add
  41843f:	sbb    eax,0xa62241e1
  418444:	xor    esp,esp
  418446:	out    dx,eax
  418447:	or     DWORD PTR [edi+0xbb945da],0x7a
  41844e:	jmp    0xcbd1:0xbd8ee08a
  418455:	loopne 0x4184b7
  418457:	mov    esp,0xb5549c7b
  41845c:	(bad)  [ebx]
  41845e:	ja     0x4183ee
  418460:	xchg   ebp,eax
  418461:	pop    bp
  418463:	push   0xffffffbd
  418465:	fcom   st(3)
  418467:	js     0x41841b
  418469:	mov    ?,WORD PTR [edx]
  41846b:	sub    DWORD PTR ds:0xc75c6101,ecx
  418471:	cld    
  418472:	or     al,0x50
  418474:	adc    ah,al
  418476:	scas   eax,DWORD PTR es:[edi]
  418477:	neg    esp
  418479:	push   ss
  41847a:	je     0x41844a
  41847c:	cmp    al,0xd0
  41847e:	scas   al,BYTE PTR es:[edi]
  41847f:	repz inc BYTE PTR [edx]
  418482:	addr16 retf 
  418484:	pop    edx
  418485:	stos   BYTE PTR es:[edi],al
  418486:	shl    BYTE PTR [edx+0x7d7c2b1e],cl
  41848c:	push   ebp
  41848d:	lods   eax,DWORD PTR ds:[esi]
  41848e:	stos   BYTE PTR es:[edi],al
  41848f:	repz mov dh,0x8a
  418492:	or     ch,BYTE PTR [ebx+0x528ce1d9]
  418498:	inc    esi
  418499:	lahf   
  41849a:	jmp    0xcf42:0x68714bd5
  4184a1:	sbb    eax,0x23f20663
  4184a6:	mov    ds:0x5060b045,al
  4184ab:	xor    bh,ch
  4184ad:	jg     0x418443
  4184af:	xchg   BYTE PTR [edi+0xe184f1a],cl
  4184b5:	dec    esi
  4184b6:	mov    bl,0x68
  4184b8:	dec    ebx
  4184b9:	push   0x90931d2e
  4184be:	fld    QWORD PTR [ebp-0x5a14118e]
  4184c4:	lock iret 
  4184c6:	cld    
  4184c7:	mov    ebp,0xc7c2f31b
  4184cc:	fstp   TBYTE PTR [ebx+ebp*4]
  4184cf:	scas   eax,DWORD PTR es:[edi]
  4184d0:	sbb    al,0xe3
  4184d2:	sahf   
  4184d3:	dec    edi
  4184d4:	mov    esi,0x344f5460
  4184d9:	mov    WORD PTR [esi],cs
  4184db:	jo     0x4184f9
  4184dd:	cs pushf 
  4184df:	test   al,0x15
  4184e1:	adc    DWORD PTR [esi],esi
  4184e3:	push   edx
  4184e4:	loope  0x4184fc
  4184e6:	enter  0x4add,0x48
  4184ea:	adc    edx,DWORD PTR [ecx-0x67]
  4184ed:	scas   al,BYTE PTR es:[edi]
  4184ee:	sti    
  4184ef:	cmp    eax,0x3b62761b
  4184f4:	push   edi
  4184f5:	inc    edx
  4184f6:	dec    eax
  4184f7:	or     dl,BYTE PTR [ebx+0x6f4bbb5d]
  4184fd:	sub    al,0xd0
  4184ff:	xchg   ecx,eax
  418500:	cmc    
  418501:	add    BYTE PTR [ebp+0x39c6780b],al
  418507:	cmp    al,0xdb
  418509:	aaa    
  41850a:	xchg   bh,al
  41850c:	sbb    DWORD PTR [eax+edi*8+0x4c],0xffffffd5
  418511:	pop    esi
  418512:	or     edx,DWORD PTR [esi+0x46]
  418515:	outs   dx,DWORD PTR ds:[esi]
  418516:	xor    dl,BYTE PTR [eax+0x55]
  418519:	test   eax,0x185634e1
  41851e:	outs   dx,BYTE PTR ds:[esi]
  41851f:	xchg   esp,eax
  418520:	xor    al,0xe3
  418522:	pop    ds
  418523:	dec    esi
  418524:	aas    
  418525:	mov    ch,0x71
  418527:	pushf  
  418528:	jo     0x418558
  41852a:	jp     0x4184ea
  41852c:	ror    dh,cl
  41852e:	pop    eax
  41852f:	shr    edx,1
  418531:	pop    ebp
  418532:	jp     0x4184eb
  418534:	push   ss
  418535:	jo     0x4185af
  418537:	push   es
  418538:	jle    0x418587
  41853a:	pusha  
  41853b:	and    edi,eax
  41853d:	call   0xf497fd4e
  418542:	mov    ebp,0x57309
  418547:	mov    al,0x1f
  418549:	ins    DWORD PTR es:[edi],dx
  41854a:	inc    edx
  41854b:	sub    eax,0x4c060c0d
  418550:	sbb    ebx,ecx
  418552:	cmp    dl,BYTE PTR [eax+0x6ea3f6be]
  418558:	pop    eax
  418559:	fsub   DWORD PTR [eax-0x5]
  41855c:	ds jmp 0xfb950de1
  418562:	fisub  WORD PTR [edx-0x45e4a650]
  418568:	adc    DWORD PTR [edx+0x7312e1b5],0xe4ca8bf3
  418572:	fild   DWORD PTR [esi+0x411de6b9]
  418578:	cmp    ch,al
  41857a:	mov    DWORD PTR [edx],edi
  41857c:	sahf   
  41857d:	push   esp
  41857e:	in     al,dx
  41857f:	lock mov eax,0x8fb5f4e2
  418585:	cli    
  418586:	cmp    dh,ch
  418588:	pusha  
  418589:	inc    ebx
  41858a:	push   ecx
  41858b:	mov    DWORD PTR ds:0x81f64938,ecx
  418591:	or     DWORD PTR [edx-0x241d90a],0x16fec095
  41859b:	inc    esp
  41859c:	dec    edi
  41859d:	cdq    
  41859e:	fwait
  41859f:	ins    DWORD PTR es:[edi],dx
  4185a0:	dec    eax
  4185a1:	xchg   ebx,esi
  4185a3:	mov    al,ds:0x43bd6adf
  4185a8:	dec    ebx
  4185a9:	dec    ebx
  4185aa:	sub    edi,DWORD PTR [esi]
  4185ac:	repz sbb bl,ch
  4185af:	data16 lahf 
  4185b1:	scas   al,BYTE PTR es:[edi]
  4185b2:	(bad)  
  4185b3:	fiadd  DWORD PTR [esi]
  4185b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185b6:	loope  0x41856c
  4185b8:	adc    esp,DWORD PTR [ebx-0x64]
  4185bb:	out    0xbe,al
  4185bd:	lds    ebx,FWORD PTR [esi+0x5032d1e4]
  4185c3:	repnz fsubrp st(5),st
  4185c6:	xor    ah,BYTE PTR [eax-0x5dbcabff]
  4185cc:	cmp    al,0x38
  4185ce:	stos   DWORD PTR es:[edi],eax
  4185cf:	sub    eax,0x85c44068
  4185d4:	add    eax,0x6cbf1ef0
  4185d9:	imul   esp,DWORD PTR [ecx+0x39],0xd4f564ad
  4185e0:	sub    DWORD PTR [edi-0x5d],0x75ac74ad
  4185e7:	shl    DWORD PTR [esp+esi*2+0x25fc2f50],0x16
  4185ef:	mov    eax,ds:0x78be23cf
  4185f4:	dec    eax
  4185f5:	inc    edi
  4185f6:	push   es
  4185f7:	jecxz  0x418599
  4185f9:	iret   
  4185fa:	outs   dx,BYTE PTR ds:[esi]
  4185fb:	mov    edx,0x91d04b3a
  418600:	int    0xaf
  418602:	dec    ebx
  418603:	push   esi
  418604:	out    dx,eax
  418605:	push   esp
  418606:	scas   eax,DWORD PTR es:[edi]
  418607:	fstp   DWORD PTR [edi-0x3c]
  41860a:	scas   al,BYTE PTR es:[edi]
  41860b:	stos   DWORD PTR es:[edi],eax
  41860c:	imul   eax,ebx,0xff423e4a
  418612:	and    al,0xee
  418614:	mov    ds:0xc03b7b0,eax
  418619:	dec    edx
  41861a:	mov    DWORD PTR [ebx+0x2f],ebp
  41861d:	popf   
  41861e:	inc    esp
  41861f:	mov    ds,WORD PTR [edx]
  418621:	ss cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  418624:	loopne 0x418605
  418626:	cmp    ah,BYTE PTR [ebp+0x4bb9fc55]
  41862c:	inc    eax
  41862d:	outs   dx,DWORD PTR ds:[esi]
  41862e:	fsub   QWORD PTR [ebp+0x77]
  418631:	scas   eax,DWORD PTR es:[edi]
  418632:	cwde   
  418633:	pusha  
  418634:	fistp  QWORD PTR [ebx-0x696ab980]
  41863a:	out    dx,eax
  41863b:	dec    ecx
  41863c:	or     eax,0xc2010f42
  418641:	sbb    eax,0xc54fe2dd
  418646:	mov    ebp,0x581f3d51
  41864b:	pop    ecx
  41864c:	cmp    BYTE PTR [ebp-0x6b1e1ef],bl
  418652:	mov    al,0x2c
  418654:	mov    bh,0xc1
  418656:	stos   BYTE PTR es:[edi],al
  418657:	dec    ebx
  418658:	aaa    
  418659:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41865b:	loopne 0x4186ab
  41865d:	push   ds
  41865e:	fs push edx
  418660:	sbb    dl,ch
  418662:	pop    edx
  418663:	cmc    
  418664:	pop    esi
  418665:	es js  0x4186b4
  418668:	add    eax,0x55b46782
  41866d:	ins    BYTE PTR es:[edi],dx
  41866e:	xor    BYTE PTR [edx-0x31],al
  418671:	sbb    al,0x21
  418673:	lds    esi,FWORD PTR [eax+ebp*2]
  418676:	jle    0x4186bf
  418678:	mov    bl,0x33
  41867a:	adc    DWORD PTR [edx-0x6b],ebx
  41867d:	jg     0x418698
  41867f:	dec    edx
  418680:	(bad)  
  418682:	lock arpl WORD PTR [ebp+0x7a],sp
  418686:	(bad)  
  418687:	mov    esi,0xc26367f4
  41868c:	in     al,0x7e
  41868e:	call   0x9d19:0x44c84cc3
  418695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418696:	and    ebp,DWORD PTR [edx]
  418698:	out    dx,al
  418699:	stos   BYTE PTR es:[edi],al
  41869a:	mov    al,ds:0x61ed831
  41869f:	add    DWORD PTR [edi+0x50],ebx
  4186a2:	xor    al,0xb9
  4186a4:	add    al,0xf8
  4186a6:	jne    0x41865c
  4186a8:	sti    
  4186a9:	adc    eax,0x40e06d1d
  4186ae:	das    
  4186af:	(bad)  
  4186b1:	jns    0x418645
  4186b3:	push   eax
  4186b4:	inc    esi
  4186b5:	push   esp
  4186b6:	loopne 0x418735
  4186b8:	mov    eax,ds:0xbd4e795c
  4186bd:	test   DWORD PTR [eax],0xd1c3b6fd
  4186c3:	loopne 0x4186e7
  4186c5:	sbb    ebx,DWORD PTR [edi]
  4186c7:	mov    esi,DWORD PTR [edi+0xe]
  4186ca:	test   ch,0x88
  4186cd:	jmp    0x4186fa
  4186cf:	mov    esi,0xda734e79
  4186d4:	(bad)  
  4186d6:	mov    dl,0xda
  4186d8:	(bad)  
  4186d9:	xor    DWORD PTR [eax+eax*1+0xc],ebp
  4186dd:	sub    DWORD PTR [eax],0x654f8a83
  4186e3:	and    DWORD PTR [ecx-0x78759d20],ebx
  4186e9:	adc    edi,DWORD PTR [ebx+0x2a]
  4186ec:	and    bh,al
  4186ee:	and    cl,BYTE PTR [edi+ecx*2]
  4186f1:	into   
  4186f2:	sar    DWORD PTR ds:0xb489dab7,cl
  4186f8:	jl     0x41875d
  4186fa:	dec    esp
  4186fb:	imul   ebx,esi,0x5592c10d
  418701:	popf   
  418702:	xchg   ch,dl
  418704:	(bad)  
  418705:	std    
  418706:	test   eax,0x5215ebb2
  41870b:	(bad)  
  41870c:	aaa    
  41870d:	xor    eax,0x45dbbf5c
  418712:	in     eax,0x9d
  418714:	mov    eax,0xc2a508c7
  418719:	cmp    eax,0xb0fe6fd
  41871e:	push   esp
  41871f:	sti    
  418720:	mov    eax,ds:0x9ff9417
  418725:	into   
  418726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418727:	repz call DWORD PTR [edi-0x7ba97846]
  41872e:	lock push ebp
  418730:	or     al,0xfe
  418732:	ins    BYTE PTR es:[edi],dx
  418733:	loope  0x418749
  418735:	aaa    
  418736:	daa    
  418737:	jecxz  0x41874b
  418739:	aas    
  41873a:	jmp    0xbaa9:0xe278ec45
  418741:	mov    ah,0xf
  418743:	pop    edx
  418744:	pushf  
  418745:	mov    ds:0x4b535c77,eax
  41874a:	test   BYTE PTR [edx-0x68a8871e],bh
  418750:	mov    ebx,0x56cc4ae
  418755:	jg     0x418775
  418757:	adc    eax,DWORD PTR [esi+ecx*2-0x5cff3cf]
  41875e:	add    ch,ah
  418760:	repnz cmc 
  418762:	bound  ebp,QWORD PTR cs:[ebp-0x616f3635]
  418769:	or     al,0x60
  41876b:	mov    al,ds:0x68fa522a
  418770:	inc    eax
  418771:	int    0x7a
  418773:	sbb    al,0xe9
  418775:	ins    DWORD PTR es:[edi],dx
  418776:	mov    ds:0x3fc61ddb,al
  41877b:	test   BYTE PTR [edx+ebp*2-0x40],al
  41877f:	mov    eax,0x11ae221d
  418784:	add    DWORD PTR [eax-0x1dec8e8e],edx
  41878a:	or     eax,0x222da87c
  41878f:	fidiv  WORD PTR [edx+0x3d5a74e4]
  418795:	in     eax,dx
  418796:	push   ebx
  418797:	bound  ecx,QWORD PTR [ebx+0x28fd0f14]
  41879d:	loopne 0x418805
  41879f:	add    ch,ah
  4187a1:	test   BYTE PTR [edx+0x45],cl
  4187a4:	js     0x4187c2
  4187a6:	shl    DWORD PTR [esi+0x26],cl
  4187a9:	dec    esi
  4187aa:	fild   WORD PTR [ebx-0x71]
  4187ad:	fsub   st(0),st
  4187af:	sbb    edx,esi
  4187b1:	jl     0x4187ff
  4187b3:	push   0x19
  4187b5:	arpl   WORD PTR [ebp-0x3a64e1fe],ax
  4187bb:	dec    ebp
  4187bc:	fbld   TBYTE PTR [ebx]
  4187be:	sub    DWORD PTR [eax-0x38898e7d],0x325ee335
  4187c8:	push   ebp
  4187c9:	rol    bh,0xc5
  4187cc:	inc    ecx
  4187cd:	push   ds
  4187ce:	test   BYTE PTR ds:0x91b5f721,ah
  4187d4:	dec    esi
  4187d5:	repnz inc ecx
  4187d7:	adc    eax,0x6d66e1ff
  4187dc:	or     dh,ah
  4187de:	add    BYTE PTR [edx+0x65],0x20
  4187e2:	xchg   ebp,eax
  4187e3:	xchg   ebx,eax
  4187e4:	xchg   esp,eax
  4187e5:	fimul  WORD PTR [ecx]
  4187e7:	fst    DWORD PTR [edx-0x7dac82a4]
  4187ed:	mov    bh,0xd4
  4187ef:	adc    al,0xc6
  4187f1:	xchg   DWORD PTR [esi+edi*2],edi
  4187f4:	pop    ss
  4187f5:	out    0xf5,al
  4187f7:	push   0x38
  4187f9:	scas   al,BYTE PTR es:[edi]
  4187fa:	fdiv   QWORD PTR [esp+ebp*2+0x41]
  4187fe:	push   ss
  4187ff:	xor    BYTE PTR [eax],ch
  418801:	mov    WORD PTR [ecx+ebp*1+0x552b93b2],gs
  418808:	push   cs
  418809:	mov    bl,0xfb
  41880b:	add    al,0x75
  41880d:	pop    ebx
  41880e:	popf   
  41880f:	cmp    BYTE PTR [edi-0x33],bh
  418812:	xchg   esi,eax
  418813:	lds    esp,FWORD PTR [edx+0x2a0ff276]
  418819:	cmc    
  41881a:	push   ebx
  41881b:	test   eax,0xd9a942b
  418820:	mov    edi,DWORD PTR [edx]
  418822:	imul   edx,edx,0xe881e5fc
  418828:	add    BYTE PTR [ecx-0x40e1f105],al
  41882e:	in     eax,0xf
  418830:	ins    BYTE PTR es:[edi],dx
  418831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418832:	aad    0x2f
  418834:	(bad)  
  418835:	in     eax,dx
  418836:	mov    esp,0xc02d5de9
  41883b:	xchg   edx,eax
  41883c:	int3   
  41883d:	xchg   esi,eax
  41883e:	fbld   TBYTE PTR ss:[edi+0x31cd34d4]
  418845:	mov    ebp,0x14fb89eb
  41884a:	daa    
  41884b:	xchg   ecx,eax
  41884c:	xor    BYTE PTR [edi],bh
  41884e:	ret    
  41884f:	retf   0x4386
  418852:	xor    eax,0xe4d89c2e
  418857:	je     0x41888b
  418859:	push   es
  41885a:	xchg   ebx,eax
  41885b:	or     DWORD PTR [ebx+0xf],0x23d4b6d0
  418862:	retf   0xc33
  418865:	adc    dl,BYTE PTR [ebp+0x53c71e82]
  41886b:	fadd   st(1),st
  41886d:	and    al,0x7d
  41886f:	or     bh,BYTE PTR [ebp-0xa]
  418872:	adc    cl,BYTE PTR ds:0x6ce9bf9
  418878:	ret    
  418879:	mov    esi,0xf01585da
  41887e:	sub    eax,0xe49d3eb3
  418883:	pop    edi
  418884:	ja     0x4188a5
  418886:	mov    esi,0xef5265d7
  41888b:	loopne 0x41887a
  41888d:	bound  esp,QWORD PTR [ecx+ebx*8+0x42c5d60a]
  418894:	push   ebx
  418895:	sub    esi,edx
  418897:	xchg   DWORD PTR [edi],edx
  418899:	mov    BYTE PTR [ebx],dh
  41889b:	mov    ah,0xef
  41889d:	pop    ecx
  41889e:	and    eax,0x2ca3d9df
  4188a3:	inc    esp
  4188a4:	jmp    0x4248bbb7
  4188a9:	mov    esp,0x916942a0
  4188ae:	call   0xeae96ebb
  4188b3:	dec    ecx
  4188b4:	dec    ebp
  4188b5:	add    al,0x74
  4188b7:	push   ebx
  4188b8:	and    ebp,DWORD PTR [ebp+edi*1+0x68ba9702]
  4188bf:	jmp    edi
  4188c1:	and    al,0x43
  4188c3:	xchg   ecx,eax
  4188c4:	mov    ?,si
  4188c7:	shr    ecx,cl
  4188c9:	fld    DWORD PTR [ecx+0x109da3e8]
  4188cf:	pop    ebp
  4188d0:	cmc    
  4188d1:	cmp    BYTE PTR [ebx],dh
  4188d3:	repnz sub eax,0x42fa3c78
  4188d9:	repnz cld 
  4188db:	gs push ds
  4188dd:	cmp    al,0x17
  4188df:	lea    edi,[edi+0x2f]
  4188e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e3:	or     ebx,eax
  4188e5:	jl     0x418881
  4188e7:	out    0x63,eax
  4188e9:	je     0x418940
  4188eb:	cmp    dh,ch
  4188ed:	les    esi,FWORD PTR [esi]
  4188ef:	dec    eax
  4188f0:	fwait
  4188f1:	int    0x73
  4188f3:	(bad)  
  4188f4:	cmp    ebx,DWORD PTR [eax+0x34e2755e]
  4188fa:	mov    ch,0xaf
  4188fc:	call   0x1a63fb18
  418901:	sbb    dh,BYTE PTR [ebp+0x3a]
  418904:	jno    0x418900
  418906:	or     esi,DWORD PTR [edx+0x75]
  418909:	rol    edi,0x9f
  41890c:	(bad)  
  41890d:	xchg   esi,eax
  41890e:	ja     0x418980
  418910:	jo     0x41889c
  418912:	cmp    DWORD PTR [ecx],ecx
  418914:	mov    ecx,eax
  418916:	not    ah
  418918:	out    dx,eax
  418919:	fisub  DWORD PTR ds:0x7b2da27
  41891f:	push   esp
  418920:	ret    
  418921:	pop    eax
  418922:	or     ecx,DWORD PTR [esp+edi*4+0x3a6a3489]
  418929:	jle    0x41894b
  41892b:	cmc    
  41892c:	and    BYTE PTR [edi],ah
  41892e:	test   DWORD PTR [ebx-0x1aaa8cdb],ebp
  418934:	jecxz  0x4189aa
  418936:	and    BYTE PTR [edx],dl
  418938:	mov    ss,edi
  41893a:	mov    eax,ds:0xcebe3349
  41893f:	adc    BYTE PTR [ebx-0x13],ch
  418942:	mov    al,0x33
  418944:	jno    0x4188d0
  418946:	ins    DWORD PTR es:[edi],dx
  418947:	das    
  418948:	inc    esi
  418949:	(bad)
  41894c:	push   edx
  41894d:	mov    DWORD PTR [ebx-0x7b7ecc9a],ebx
  418953:	sub    bl,ah
  418955:	xor    al,0x52
  418957:	sbb    eax,0x2a3c427b
  41895c:	inc    edx
  41895d:	nop
  41895e:	add    esi,DWORD PTR [esi+esi*8]
  418961:	out    0x85,eax
  418963:	mov    esi,0x10f630e5
  418968:	or     eax,DWORD PTR [edx]
  41896a:	and    al,0xb8
  41896c:	jnp    0x4189e3
  41896e:	(bad)  
  418970:	lods   al,BYTE PTR ds:[esi]
  418971:	sub    DWORD PTR [ecx-0x34],ecx
  418974:	mov    cl,0x2f
  418976:	cmp    BYTE PTR [ebx],ch
  418978:	lds    eax,FWORD PTR [edx+0x1431f78f]
  41897e:	pop    ebx
  41897f:	push   ss
  418980:	cmp    DWORD PTR [ebx],esi
  418982:	out    dx,al
  418983:	(bad)  
  418984:	not    DWORD PTR [edx]
  418986:	lods   al,BYTE PTR ds:[esi]
  418987:	lods   al,BYTE PTR ds:[esi]
  418988:	mov    cx,0x71e
  41898c:	dec    edx
  41898d:	dec    ecx
  41898e:	stc    
  41898f:	adc    edi,DWORD PTR [esp+edi*2+0x53]
  418993:	inc    ebx
  418994:	stos   BYTE PTR es:[edi],al
  418995:	enter  0x4525,0xf9
  418999:	dec    BYTE PTR [ecx]
  41899b:	add    eax,0x4600fd94
  4189a0:	ret    
  4189a1:	sti    
  4189a2:	xchg   edx,eax
  4189a3:	pmaxsw mm1,QWORD PTR [edx]
  4189a6:	dec    ebp
  4189a7:	ss rcr dh,1
  4189aa:	aas    
  4189ab:	out    dx,al
  4189ac:	ret    
  4189ad:	sub    eax,0xf1bb8c
  4189b2:	pop    ds
  4189b3:	das    
  4189b4:	and    al,BYTE PTR [ebx+0x2f1ae8db]
  4189ba:	cdq    
  4189bb:	shl    BYTE PTR [ebp+0x25f5352d],0x77
  4189c2:	jno    0x418a20
  4189c4:	xor    al,0x29
  4189c6:	mov    esi,0xcf2b7748
  4189cb:	mov    dh,0xa
  4189cd:	jmp    DWORD PTR [ebp-0x69]
  4189d0:	dec    esp
  4189d1:	mov    al,0x3a
  4189d3:	mov    edi,0x90e5e249
  4189d8:	pop    ds
  4189d9:	scas   al,BYTE PTR es:[edi]
  4189da:	mov    bh,0x69
  4189dc:	out    0x82,eax
  4189de:	lods   al,BYTE PTR ds:[esi]
  4189df:	add    ebx,DWORD PTR [ebx-0x35]
  4189e2:	xor    cl,0x6a
  4189e5:	fnstsw WORD PTR ds:0x7dfa398c
  4189eb:	mov    ah,dh
  4189ed:	xchg   ebp,eax
  4189ee:	cli    
  4189ef:	dec    esi
  4189f0:	leave  
  4189f1:	js     0x41897d
  4189f3:	inc    esp
  4189f4:	(bad)  
  4189f6:	int    0x6c
  4189f8:	aaa    
  4189f9:	fistp  WORD PTR [ebx]
  4189fb:	neg    DWORD PTR [esi+ebx*4]
  4189fe:	stos   BYTE PTR es:[edi],al
  4189ff:	ret    0x93d5
  418a02:	push   esp
  418a03:	and    eax,0xbea400a7
  418a08:	xor    al,cl
  418a0a:	cmp    BYTE PTR [ebx],0x17
  418a0d:	pop    esi
  418a0e:	loopne 0x418a3a
  418a10:	test   BYTE PTR [edx+0x68],dh
  418a13:	pusha  
  418a14:	adc    al,dl
  418a16:	popf   
  418a17:	sbb    DWORD PTR ds:0xdf9f7b48,0xb7e3f504
  418a21:	mov    WORD PTR [eax],ds
  418a23:	mov    esi,0xd25efae0
  418a28:	mov    bl,0xd5
  418a2a:	leave  
  418a2b:	jge    0x418a3b
  418a2d:	or     eax,0x5a6df298
  418a32:	cmp    eax,0x4032b235
  418a37:	int3   
  418a38:	in     eax,0xb5
  418a3a:	xor    ebx,esp
  418a3c:	in     al,dx
  418a3d:	ror    cl,0xce
  418a40:	dec    edx
  418a41:	ror    BYTE PTR [edi],0x46
  418a44:	xchg   esi,eax
  418a45:	mov    eax,0x128879d9
  418a4a:	jmp    0x2d8a2295
  418a4f:	pop    esi
  418a50:	adc    bh,ch
  418a52:	fs dec ecx
  418a54:	xor    ebp,ecx
  418a56:	push   esp
  418a57:	aam    0x6f
  418a59:	lea    edx,[ebp-0x5d]
  418a5c:	push   esp
  418a5d:	mov    ebp,0x1c4fdba3
  418a62:	add    edx,DWORD PTR [esi+ebp*1+0x347e6dea]
  418a69:	ds sahf 
  418a6b:	cmc    
  418a6c:	dec    edi
  418a6d:	aam    0x2f
  418a6f:	cli    
  418a70:	fwait
  418a71:	call   0x82fb5117
  418a76:	pushf  
  418a77:	pop    ecx
  418a78:	in     eax,0x6d
  418a7a:	push   ds
  418a7b:	std    
  418a7c:	sub    edi,edx
  418a7e:	arpl   WORD PTR [ebx-0x3f],di
  418a81:	ins    BYTE PTR es:[edi],dx
  418a82:	mov    edi,0xd448b6ab
  418a87:	sbb    bh,BYTE PTR [ebx-0x4842e9c8]
  418a8d:	ret    0x8
  418a90:	inc    esi
  418a91:	push   0xffffffe5
  418a93:	adc    al,0xb6
  418a95:	call   0xabba:0xd67e0d25
  418a9c:	loopne 0x418a83
  418a9e:	xchg   ebx,eax
  418a9f:	inc    esp
  418aa0:	loop   0x418a63
  418aa2:	pop    ebx
  418aa3:	imul   eax,DWORD PTR [ebp+0x11],0xb87f3ff4
  418aaa:	fstp   DWORD PTR [ecx+0x64]
  418aad:	pop    es
  418aae:	stos   BYTE PTR es:[edi],al
  418aaf:	jl     0x418a38
  418ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab2:	add    DWORD PTR [ebx+0x1],ebx
  418ab5:	push   cs
  418ab6:	adc    al,0x9c
  418ab8:	daa    
  418ab9:	push   ecx
  418aba:	pop    ecx
  418abb:	cmp    DWORD PTR [esi-0x5d351108],edx
  418ac1:	mov    eax,0xcfa97668
  418ac6:	mov    al,ch
  418ac8:	imul   ebp,DWORD PTR [eax],0xdb9cb118
  418ace:	jge    0x418a56
  418ad0:	int    0x3f
  418ad2:	fsubr  QWORD PTR [esi]
  418ad4:	test   eax,esp
  418ad6:	sbb    esi,DWORD PTR [edi-0x6]
  418ad9:	in     al,0x1a
  418adb:	and    BYTE PTR [ebx+0x5df83747],bl
  418ae1:	sar    BYTE PTR [edx+0x1a495a99],0xaa
  418ae8:	stc    
  418ae9:	cld    
  418aea:	fimul  DWORD PTR [edi-0xc]
  418aed:	sbb    cl,dl
  418aef:	mov    eax,0x4d7082f1
  418af4:	out    dx,al
  418af5:	outs   dx,DWORD PTR ds:[esi]
  418af6:	popf   
  418af7:	inc    esp
  418af8:	cmp    al,0xd7
  418afa:	sub    esi,DWORD PTR [ebx]
  418afc:	int3   
  418afd:	mov    BYTE PTR [ebx+0x25],ah
  418b00:	sbb    esi,DWORD PTR [edi+0x53e86deb]
  418b06:	lods   eax,DWORD PTR ds:[esi]
  418b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b08:	arpl   WORD PTR [esi+0x585240e9],si
  418b0e:	adc    DWORD PTR [edx+0x1b],0x26484144
  418b15:	ret    
  418b16:	mov    al,ds:0x4c5e173b
  418b1b:	push   ecx
  418b1c:	pusha  
  418b1d:	dec    edi
  418b1e:	cmp    eax,0x219913a3
  418b23:	pushf  
  418b24:	dec    ebp
  418b25:	pop    es
  418b26:	push   esi
  418b27:	and    DWORD PTR [ecx-0x60],esp
  418b2a:	mov    ebp,0x6a885957
  418b2f:	repz inc edi
  418b31:	mov    dh,0xbd
  418b33:	std    
  418b34:	cdq    
  418b35:	add    DWORD PTR [edi+ebp*4+0x77eed1a6],ecx
  418b3c:	gs ins BYTE PTR es:[edi],dx
  418b3e:	or     al,0xb1
  418b40:	cmp    al,cl
  418b42:	mov    cl,0xe9
  418b44:	pushf  
  418b45:	dec    esp
  418b46:	mov    gs,WORD PTR [edx+0x2e9a3497]
  418b4c:	sub    eax,0x9ca77cf8
  418b51:	pop    ss
  418b52:	ins    DWORD PTR es:[edi],dx
  418b53:	add    BYTE PTR [ecx],ch
  418b55:	ss mov dh,0x5e
  418b58:	in     eax,0x84
  418b5a:	inc    eax
  418b5b:	mov    eax,ds:0xcabc572b
  418b60:	cmp    al,al
  418b62:	inc    edx
  418b63:	jno    0x418ba1
  418b65:	mov    esi,0x279ff294
  418b6a:	and    eax,0x90d13ccb
  418b6f:	cld    
  418b70:	aas    
  418b71:	outs   dx,DWORD PTR ds:[esi]
  418b72:	pop    es
  418b73:	sbb    eax,0x46dcd504
  418b78:	leave  
  418b79:	lock and DWORD PTR [ecx+0x6e],ebp
  418b7d:	lods   al,BYTE PTR ds:[esi]
  418b7e:	loope  0x418baf
  418b80:	loop   0x418b9e
  418b82:	enter  0x5013,0x37
  418b86:	mov    edx,0xa10a9711
  418b8b:	mov    WORD PTR [esi],bp
  418b8e:	sub    eax,DWORD PTR [eax]
  418b90:	dec    edx
  418b91:	mov    ebx,0xd628063c
  418b96:	xchg   ebx,eax
  418b97:	dec    edx
  418b98:	and    ah,BYTE PTR [eax+0x2]
  418b9b:	xchg   esp,eax
  418b9c:	add    DWORD PTR [edx],edi
  418b9e:	popa   
  418b9f:	sahf   
  418ba0:	mov    ebp,0x8526fa32
  418ba5:	jecxz  0x418b64
  418ba7:	pop    eax
  418ba8:	jnp    0x418b43
  418baa:	icebp  
  418bab:	(bad)  
  418bac:	sti    
  418bad:	push   ebx
  418bae:	daa    
  418baf:	data16 jnp 0x418c30
  418bb2:	cld    
  418bb3:	rcr    BYTE PTR [edx],1
  418bb5:	xchg   esp,eax
  418bb6:	or     bh,dh
  418bb8:	repnz push cs
  418bba:	call   0xc000f79
  418bbf:	jle    0x418b80
  418bc1:	xchg   BYTE PTR [edx-0x3bbb9a19],al
  418bc7:	cmp    al,0x81
  418bc9:	clc    
  418bca:	jns    0x418c36
  418bcc:	xchg   edi,eax
  418bcd:	jecxz  0x418b6c
  418bcf:	or     ax,0xb0c
  418bd3:	clc    
  418bd4:	pop    edi
  418bd5:	das    
  418bd6:	cmp    BYTE PTR [edi+eiz*1-0x7ac30aae],bh
  418bdd:	xor    BYTE PTR [ebx-0x76],cl
  418be0:	and    BYTE PTR [edx-0x5989f8a0],ah
  418be6:	mov    eax,0x214cad7a
  418beb:	imul   ecx,DWORD PTR [ebx+0x447551bd],0xffffffa3
  418bf2:	cmc    
  418bf3:	ins    DWORD PTR es:[edi],dx
  418bf4:	mov    esi,0xace453be
  418bf9:	sub    eax,0x8fb2e643
  418bfe:	(bad)  
  418bff:	cmp    ah,BYTE PTR ds:0xa6d173c3
  418c05:	add    esi,esi
  418c07:	daa    
  418c08:	dec    esp
  418c09:	retf   0xdd0c
  418c0c:	jnp    0x418c73
  418c0e:	cdq    
  418c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c10:	test   DWORD PTR [edi],ecx
  418c12:	hlt    
  418c13:	out    0x4,eax
  418c15:	nop
  418c16:	in     al,0x6
  418c18:	sbb    ch,0xf
  418c1b:	addr16 inc edx
  418c1d:	push   esp
  418c1e:	xor    al,0x81
  418c20:	mov    esp,0xec681c36
  418c25:	pop    ds
  418c26:	lahf   
  418c27:	dec    ecx
  418c28:	mov    dh,0x89
  418c2a:	or     DWORD PTR [eax-0x20bb9687],edx
  418c30:	push   0x47
  418c32:	ins    DWORD PTR es:[edi],dx
  418c33:	sub    DWORD PTR [ebp-0x17fb391e],edi
  418c39:	popf   
  418c3a:	daa    
  418c3b:	jbe    0x418cb1
  418c3d:	xor    al,0xfe
  418c3f:	xchg   edx,eax
  418c40:	and    eax,0xf4692ee
  418c45:	sub    eax,0x8f7afc6d
  418c4a:	popf   
  418c4b:	ret    
  418c4c:	fiadd  DWORD PTR [esi+0x45]
  418c4f:	mov    ebx,DWORD PTR [ecx+0x5eff7b6a]
  418c55:	fsubrp st(0),st
  418c57:	test   eax,0x2bfb1abc
  418c5c:	outs   dx,BYTE PTR ds:[esi]
  418c5d:	add    BYTE PTR [eax],cl
  418c5f:	retf   0x1f7
  418c62:	adc    eax,0x4e503756
  418c67:	xor    DWORD PTR [ecx+0x79],esi
  418c6a:	pop    eax
  418c6b:	xchg   ebx,eax
  418c6c:	scas   al,BYTE PTR es:[edi]
  418c6d:	(bad)  
  418c6e:	hlt    
  418c6f:	and    BYTE PTR ds:0x82816802,ch
  418c75:	pop    ebx
  418c76:	sub    DWORD PTR [ecx],esi
  418c78:	xchg   edi,eax
  418c79:	loopne 0x418cb1
  418c7b:	cmp    ch,ah
  418c7d:	dec    ebx
  418c7e:	nop
  418c7f:	cdq    
  418c80:	mov    bl,0xe9
  418c82:	pop    ebp
  418c83:	fwait
  418c84:	mov    ebx,0xd114f0f3
  418c89:	addr16 jp 0x418ce3
  418c8c:	inc    ebp
  418c8d:	jl     0x418c65
  418c8f:	adc    BYTE PTR [edi+ebp*4+0x73],0xc0
  418c94:	push   0x65
  418c96:	lods   al,BYTE PTR ds:[esi]
  418c97:	clc    
  418c98:	xchg   BYTE PTR [esi-0x7c382bc5],bl
  418c9e:	into   
  418c9f:	and    BYTE PTR [ebx],dh
  418ca1:	sti    
  418ca2:	daa    
  418ca3:	ins    BYTE PTR es:[edi],dx
  418ca4:	inc    esi
  418ca5:	add    eax,0xa23edf2c
  418caa:	imul   edi,DWORD PTR [eax+ecx*2-0x3cdc3974],0x49fc49df
  418cb5:	dec    ebx
  418cb6:	imul   edx,DWORD PTR [edx],0x1289b493
  418cbc:	jae    0x418d0b
  418cbe:	inc    eax
  418cbf:	dec    eax
  418cc0:	sbb    al,0xac
  418cc2:	mov    eax,0xc4b4788c
  418cc7:	inc    ebx
  418cc8:	cmp    BYTE PTR [esi],0xd4
  418ccb:	ret    0x562c
  418cce:	dec    ecx
  418ccf:	fs dec edx
  418cd1:	jp     0x418c67
  418cd3:	pop    edx
  418cd4:	mov    bl,0x65
  418cd6:	out    0x8,eax
  418cd8:	dec    esp
  418cd9:	outs   dx,BYTE PTR ds:[esi]
  418cda:	dec    edi
  418cdb:	push   cs
  418cdc:	fwait
  418cdd:	cmp    al,0x9f
  418cdf:	fst    QWORD PTR [edi+0x50]
  418ce2:	loopne 0x418d21
  418ce4:	stos   DWORD PTR es:[edi],eax
  418ce5:	sbb    al,ah
  418ce7:	inc    ecx
  418ce8:	mov    dl,BYTE PTR [ebx-0x5b4dbde4]
  418cee:	cld    
  418cef:	or     eax,0x36c10c9d
  418cf4:	data16 jnp 0x418d02
  418cf7:	out    dx,eax
  418cf8:	mov    ch,0x13
  418cfa:	hlt    
  418cfb:	gs mov bl,0x58
  418cfe:	loopne 0x418d0a
  418d00:	out    0x23,eax
  418d02:	scas   eax,DWORD PTR es:[edi]
  418d03:	mov    edx,0xbe13dddb
  418d08:	dec    ebp
  418d09:	mov    ch,0xd5
  418d0b:	or     al,BYTE PTR [ecx]
  418d0d:	int3   
  418d0e:	fimul  WORD PTR [edx+0x2d]
  418d11:	push   ds
  418d12:	push   edi
  418d13:	js     0x418d6c
  418d15:	shl    BYTE PTR [eax-0x29],1
  418d18:	imul   esp,DWORD PTR [ebx+0x4b],0x2262cb6b
  418d1f:	add    edx,esp
  418d21:	dec    edi
  418d22:	xchg   ebx,eax
  418d23:	jecxz  0x418d3d
  418d25:	or     eax,DWORD PTR [eax]
  418d27:	pop    esi
  418d28:	js     0x418cc4
  418d2a:	daa    
  418d2b:	retf   0xb002
  418d2e:	pop    esi
  418d2f:	pop    edi
  418d30:	mov    ecx,0x7ba4cd33
  418d35:	mov    edi,0x4c087867
  418d3a:	pop    ebx
  418d3b:	inc    ecx
  418d3c:	int3   
  418d3d:	mov    ds:0xd448417a,eax
  418d42:	push   ss
  418d43:	or     eax,0x7a5ddc55
  418d48:	aaa    
  418d49:	sbb    edi,0xffffffa5
  418d4c:	arpl   WORD PTR [edi-0x5b325153],ax
  418d52:	sub    BYTE PTR [edi-0x68],al
  418d55:	in     al,0xfc
  418d57:	arpl   dx,dx
  418d59:	cmc    
  418d5a:	(bad)  
  418d5b:	jg     0x418d19
  418d5d:	(bad)  
  418d5e:	sti    
  418d5f:	pop    esp
  418d60:	in     al,dx
  418d61:	ror    DWORD PTR [esi],cl
  418d63:	sub    BYTE PTR [ecx+0x2a431f4c],cl
  418d69:	in     al,dx
  418d6a:	or     eax,0x844814f3
  418d6f:	or     dl,BYTE PTR [edx]
  418d71:	fucom  st(3)
  418d73:	xchg   esp,eax
  418d74:	(bad)  
  418d75:	mov    bl,0xab
  418d77:	sbb    ebp,0xffffffcf
  418d7a:	cmc    
  418d7b:	jg     0x418d0a
  418d7d:	sbb    DWORD PTR [edi],edi
  418d7f:	jmp    0x418d09
  418d81:	push   es
  418d82:	mov    edi,0xa35e5c99
  418d87:	mov    esp,0x72b8f50b
  418d8c:	out    dx,eax
  418d8d:	test   DWORD PTR [esi-0xb],ebx
  418d90:	mov    ds:0xacd08242,eax
  418d95:	test   eax,0x4e0096e5
  418d9a:	cmp    eax,0x3272e28e
  418d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418da0:	adc    cl,BYTE PTR [esi+0x33]
  418da3:	mov    ebp,0x24e193c9
  418da8:	push   ss
  418da9:	mov    DWORD PTR [ebx],esi
  418dab:	jl     0x418e15
  418dad:	dec    ebp
  418dae:	lods   al,BYTE PTR ds:[esi]
  418daf:	jo     0x418d8c
  418db1:	push   ss
  418db2:	popa   
  418db3:	out    dx,eax
  418db4:	ins    BYTE PTR es:[edi],dx
  418db5:	mov    dh,0x28
  418db7:	pop    ebx
  418db8:	pop    edx
  418db9:	adc    al,0x64
  418dbb:	fsub   QWORD PTR [ecx]
  418dbd:	mov    ebp,0x4c87885d
  418dc2:	mov    ds,WORD PTR [ebx+0x1a]
  418dc5:	aaa    
  418dc6:	imul   esi,DWORD PTR ds:0x6aa55b1a,0x5f0fd100
  418dd0:	sar    BYTE PTR [ebx],cl
  418dd2:	sar    DWORD PTR [esi-0x7730dce],0x9c
  418dd9:	inc    esp
  418dda:	clc    
  418ddb:	push   es
  418ddc:	mov    ecx,0xe748a291
  418de1:	ret    0x7b54
  418de4:	mov    DWORD PTR [ebx+0x4656e089],eax
  418dea:	outs   dx,DWORD PTR ds:[esi]
  418deb:	call   0x4b033152
  418df0:	add    ah,BYTE PTR [edx-0x15]
  418df3:	push   0xffffffe4
  418df5:	push   ss
  418df6:	sub    BYTE PTR [eax],0x9f
  418df9:	in     al,dx
  418dfa:	sbb    ch,ah
  418dfc:	cwde   
  418dfd:	inc    BYTE PTR [edx]
  418dff:	sub    bh,BYTE PTR [eax]
  418e01:	jecxz  0x418e4b
  418e03:	dec    edi
  418e04:	xor    esp,DWORD PTR [edi-0x68]
  418e07:	imul   edi,DWORD PTR [edx],0xffffffb7
  418e0a:	test   BYTE PTR [eax+0x43],bh
  418e0d:	div    BYTE PTR [bx+si+0x14]
  418e11:	jge    0x418d98
  418e13:	dec    edx
  418e14:	pop    ss
  418e15:	popa   
  418e16:	cmp    eax,edx
  418e18:	mov    eax,0x8493bd90
  418e1d:	pop    ds
  418e1e:	imul   esi,DWORD PTR [ebx],0x34a4d2d5
  418e24:	ins    DWORD PTR es:[edi],dx
  418e25:	or     eax,0x169aecf9
  418e2a:	dec    ebx
  418e2b:	clc    
  418e2c:	test   eax,0xa9b0a28
  418e31:	jae    0x418e6e
  418e33:	mov    ebp,0xb0bc2a8a
  418e38:	dec    ecx
  418e39:	mov    ebp,0x8f0f54a1
  418e3e:	dec    ebp
  418e3f:	pop    ecx
  418e40:	stos   BYTE PTR es:[edi],al
  418e41:	cmp    al,0x33
  418e43:	mov    ch,0xfc
  418e45:	xchg   ebx,eax
  418e46:	lahf   
  418e47:	adc    esp,esp
  418e49:	test   DWORD PTR [edx+0x53],edi
  418e4c:	mov    cl,0x39
  418e4e:	inc    ebp
  418e4f:	setne  bl
  418e52:	ds in  eax,0xae
  418e55:	sub    BYTE PTR [edx],0xc9
  418e58:	call   0xc22c4f46
  418e5d:	fistp  DWORD PTR [edi]
  418e5f:	xchg   edi,eax
  418e60:	popa   
  418e61:	and    esi,ebp
  418e63:	es mov ebx,0x11f81ce5
  418e69:	jecxz  0x418e4a
  418e6b:	stos   DWORD PTR es:[edi],eax
  418e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e6d:	jmp    0x578bad2a
  418e72:	cs (bad) 
  418e75:	lock jle 0x418e04
  418e78:	popf   
  418e79:	ret    
  418e7a:	xor    edi,DWORD PTR [eax+eax*8-0x1e]
  418e7e:	sub    eax,0x64862f69
  418e83:	add    ebp,ecx
  418e85:	cld    
  418e86:	sbb    eax,0xf3b95446
  418e8b:	and    DWORD PTR [ebx],0xad4b9c22
  418e91:	jge    0x418e5d
  418e93:	jp     0x418e8a
  418e95:	aas    
  418e96:	add    eax,0x9eddc5de
  418e9b:	push   eax
  418e9c:	pop    esi
  418e9d:	hlt    
  418e9e:	adc    ch,dh
  418ea0:	pop    esi
  418ea1:	pop    ebx
  418ea2:	imul   edi,DWORD PTR [esi+0x76cb3124],0x81f2a040
  418eac:	cmp    DWORD PTR [edi+0x4764c642],esi
  418eb2:	jle    0x418eef
  418eb4:	jge    0x418ed6
  418eb6:	pop    esp
  418eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eb9:	sub    ah,BYTE PTR ss:[ebx]
  418ebc:	mov    al,ds:0x8c14f5fd
  418ec1:	jo     0x418e66
  418ec3:	mov    ds:0xaedac2d1,eax
  418ec8:	pop    ss
  418ec9:	cmp    al,0x65
  418ecb:	inc    esi
  418ecc:	lods   eax,DWORD PTR ds:[esi]
  418ecd:	rcr    DWORD PTR [ebx],1
  418ecf:	ss test eax,0x44184a04
  418ed5:	dec    ebp
  418ed6:	dec    ebp
  418ed7:	fdiv   QWORD PTR [edx+0x5fece5bb]
  418edd:	dec    esp
  418ede:	sub    BYTE PTR [ecx],al
  418ee0:	aaa    
  418ee1:	adc    al,0xc2
  418ee3:	dec    ebp
  418ee4:	in     eax,dx
  418ee5:	lahf   
  418ee6:	cld    
  418ee7:	push   eax
  418ee8:	std    
  418ee9:	inc    edi
  418eea:	cs jle 0x418f0d
  418eed:	data16 fsubr DWORD PTR [ecx-0x635dedb2]
  418ef4:	xchg   ebp,eax
  418ef5:	popa   
  418ef6:	ret    
  418ef7:	and    BYTE PTR [ecx-0x47d1e012],dl
  418efd:	sub    BYTE PTR [ebp+0xf],al
  418f00:	dec    ebx
  418f01:	push   eax
  418f02:	jmp    0x418ed3
  418f04:	loop   0x418e8b
  418f06:	inc    ch
  418f08:	imul   esp,DWORD PTR [esi-0x60],0x9c8d7ac5
  418f0f:	cmp    bl,BYTE PTR ds:0x8e36e41c
  418f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f16:	or     BYTE PTR [edx+0x491bb53e],0xac
  418f1d:	pop    ds
  418f1e:	stc    
  418f1f:	jo     0x418ee8
  418f21:	pop    eax
  418f22:	pop    esi
  418f23:	repz xor eax,0x614d7481
  418f29:	cli    
  418f2a:	and    al,BYTE PTR [edx-0x5b81607]
  418f30:	lea    ebp,[eax+esi*2+0x15]
  418f34:	in     al,dx
  418f35:	inc    edi
  418f36:	cmc    
  418f37:	sbb    esp,DWORD PTR [ecx-0x7e10a16c]
  418f3d:	stos   BYTE PTR es:[edi],al
  418f3e:	ret    
  418f3f:	sub    DWORD PTR [ebx-0x20],ebp
  418f42:	inc    DWORD PTR [ecx]
  418f44:	dec    esp
  418f45:	adc    BYTE PTR [edi-0x14],ch
  418f48:	adc    ebx,ebp
  418f4a:	pusha  
  418f4b:	sbb    dl,BYTE PTR [ebx+0x12]
  418f4e:	call   0xa719:0x1b0fee5d
  418f55:	jne    0x418edb
  418f57:	mov    al,ds:0xd23549da
  418f5c:	das    
  418f5d:	je     0x418f0d
  418f5f:	jno    0x418f98
  418f61:	push   ebx
  418f62:	jbe    0x418f8e
  418f64:	inc    ah
  418f66:	add    eax,0x154a4323
  418f6b:	iret   
  418f6c:	inc    ecx
  418f6d:	rol    BYTE PTR [ecx+esi*2],0x1a
  418f71:	mov    ecx,0xc549acca
  418f76:	mov    al,ds:0x75107adb
  418f7b:	test   DWORD PTR [esi-0x512ab14a],ecx
  418f81:	pop    ds
  418f82:	clc    
  418f83:	test   eax,0xc34e3a9
  418f88:	imul   ebp,DWORD PTR [eax-0x56cec7c0],0x56
  418f8f:	lods   al,BYTE PTR ds:[esi]
  418f90:	pop    es
  418f91:	mov    esp,DWORD PTR [edi]
  418f93:	push   ebp
  418f94:	jg     0x418f26
  418f96:	sub    dl,cl
  418f98:	aaa    
  418f99:	mov    esp,0x8997b672
  418f9e:	jo     0x418fbd
  418fa0:	push   eax
  418fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa2:	(bad)  
  418fa3:	call   0xac57634c
  418fa8:	cdq    
  418fa9:	sar    esp,1
  418fab:	xchg   ebx,eax
  418fac:	push   0xffffffac
  418fae:	jno    0x419001
  418fb0:	(bad)  
  418fb1:	int    0x68
  418fb3:	cmp    al,0x2a
  418fb5:	mov    ch,0xc3
  418fb7:	into   
  418fb8:	ret    
  418fb9:	dec    edi
  418fba:	loope  0x419005
  418fbc:	jns    0x418fe2
  418fbe:	adc    al,0x7
  418fc0:	cmp    al,0x17
  418fc2:	int3   
  418fc3:	shr    DWORD PTR [esi-0xb],1
  418fc6:	sub    BYTE PTR [ebx-0xe2d0300],dh
  418fcc:	push   ecx
  418fcd:	sti    
  418fce:	loop   0x418fe1
  418fd0:	cmp    al,0x3c
  418fd2:	fwait
  418fd3:	jl     0x418f65
  418fd5:	mov    eax,0x15e7d6a5
  418fda:	shr    BYTE PTR [ebx-0x7b],1
  418fdd:	loop   0x418fa7
  418fdf:	push   esp
  418fe0:	xor    DWORD PTR [esi],ebx
  418fe2:	cmp    eax,0xefaa78cd
  418fe7:	or     DWORD PTR ds:0x21821780,edi
  418fed:	pop    esi
  418fee:	mov    esp,0x4dee22fc
  418ff3:	inc    ebp
  418ff4:	push   es
  418ff5:	mov    ds:0x4b5c77fe,eax
  418ffa:	into   
  418ffb:	push   ebx
  418ffc:	clc    
  418ffd:	xor    BYTE PTR [edx+0x53],0x48
  419001:	lods   al,BYTE PTR ds:[esi]
  419002:	inc    ebx
  419003:	inc    esp
  419004:	xchg   esp,eax
  419005:	test   ebx,esp
  419007:	cli    
  419008:	xor    DWORD PTR [edi+0x41],ebp
  41900b:	clc    
  41900c:	xor    ebx,DWORD PTR ds:0xe2efd6c6
  419012:	loopne 0x418fa4
  419014:	jmp    0x38ae:0xd50311fe
  41901b:	fnstsw WORD PTR [ecx+0x547ce5c9]
  419021:	into   
  419022:	(bad)  
  419024:	in     eax,dx
  419025:	rcl    DWORD PTR [esi+0x285dbf68],cl
  41902b:	inc    esp
  41902c:	sar    BYTE PTR [edx+0x17],0x26
  419030:	gs inc edx
  419032:	cdq    
  419033:	pop    eax
  419034:	jne    0x418fb6
  419036:	ja     0x418fe8
  419038:	fnstcw WORD PTR [eax+0x4f]
  41903b:	dec    esi
  41903d:	sbb    bl,BYTE PTR [esi+ebx*4+0x702b7f4d]
  419044:	into   
  419045:	cs stos DWORD PTR es:[edi],eax
  419047:	loopne 0x418fed
  419049:	mov    ebp,0x93116bed
  41904e:	mov    cl,0xe9
  419050:	jno    0x419053
  419052:	ja     0x41906a
  419054:	inc    esi
  419055:	ins    BYTE PTR es:[edi],dx
  419056:	add    DWORD PTR [edx],edx
  419058:	sbb    eax,0xbd8d4cf8
  41905d:	ds inc esp
  41905f:	inc    esp
  419060:	scas   al,BYTE PTR es:[edi]
  419061:	sbb    eax,0x4c6f5265
  419066:	sub    DWORD PTR [esi-0x9dbb727],0x28
  41906d:	lds    edi,FWORD PTR [ebx-0x22]
  419070:	cwde   
  419071:	enter  0x9bc5,0x39
  419075:	xchg   ebp,eax
  419076:	dec    eax
  419077:	cwde   
  419078:	shr    DWORD PTR [eax],1
  41907a:	(bad)  
  41907b:	aam    0x74
  41907d:	popf   
  41907e:	stos   DWORD PTR es:[edi],eax
  41907f:	(bad)  
  419080:	push   ss
  419081:	into   
  419082:	and    edi,eax
  419084:	xchg   esp,eax
  419085:	push   ds
  419086:	jbe    0x419084
  419088:	push   eax
  419089:	sub    eax,0xc1de7dd0
  41908e:	cli    
  41908f:	xor    bl,dl
  419091:	fwait
  419092:	imul   edx,DWORD PTR [edx],0xa67521d7
  419098:	rcr    ecx,cl
  41909a:	call   0x3e6ebbcb
  41909f:	frstor [eax]
  4190a1:	jmp    0xdb0767de
  4190a6:	inc    ebp
  4190a7:	iret   
  4190a8:	or     DWORD PTR [eax+0x79],edi
  4190ab:	outs   dx,DWORD PTR ds:[esi]
  4190ac:	aas    
  4190ad:	pushf  
  4190ae:	loope  0x4190d0
  4190b0:	mov    ebp,0xe0242ce
  4190b5:	pop    esi
  4190b6:	jle    0x419130
  4190b8:	shr    DWORD PTR [ebx+0x6a],1
  4190bb:	test   BYTE PTR [edx-0x7b],ah
  4190be:	test   eax,0xd2980319
  4190c3:	xchg   esi,eax
  4190c4:	aaa    
  4190c5:	pop    ebx
  4190c6:	xlat   BYTE PTR ds:[ebx]
  4190c7:	mov    al,ds:0x4258b346
  4190cc:	int3   
  4190cd:	xchg   BYTE PTR [esi+edx*1-0x632313ec],dh
  4190d4:	scas   al,BYTE PTR es:[edi]
  4190d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190d6:	and    al,0x11
  4190d8:	sbb    cl,BYTE PTR [ebx+ebx*1]
  4190db:	rcr    DWORD PTR [esi-0x68],cl
  4190de:	stc    
  4190df:	jl     0x4190c5
  4190e1:	cmp    DWORD PTR [edx-0x5e],eax
  4190e4:	shl    BYTE PTR [edi],0x3c
  4190e7:	jmp    0x4190e1
  4190e9:	push   ss
  4190ea:	sub    edx,ebx
  4190ec:	mov    edx,0x6c3cb6d1
  4190f1:	(bad)  
  4190f2:	ja     0x4190f3
  4190f4:	mov    bl,cl
  4190f6:	pop    es
  4190f7:	lds    edi,FWORD PTR [eax+eiz*1-0x79655cb7]
  4190fe:	xlat   BYTE PTR ds:[ebx]
  4190ff:	sti    
  419100:	cmp    BYTE PTR [edi-0x28],ch
  419103:	out    dx,al
  419104:	mov    eax,ds:0xd1916f64
  419109:	adc    DWORD PTR [eax+0x2e428c69],0xffffffd6
  419110:	jp     0x4190ce
  419112:	jbe    0x41915b
  419114:	(bad)  
  419116:	repnz sub al,0x30
  419119:	out    dx,eax
  41911a:	loop   0x4190d2
  41911c:	fsub   DWORD PTR [eax-0x24]
  41911f:	fwait
  419120:	es je  0x4190af
  419123:	(bad)  
  419124:	out    dx,eax
  419125:	bound  ebx,QWORD PTR [bx+di]
  419128:	imul   edx,ebx,0x2b
  41912b:	clc    
  41912c:	outs   dx,DWORD PTR ds:[esi]
  41912d:	add    eax,0xb2167c86
  419132:	in     al,0x85
  419134:	xor    DWORD PTR [edx-0x394451bd],edi
  41913a:	cmc    
  41913b:	(bad)  
  41913c:	jg     0x41914a
  41913e:	aad    0xf8
  419140:	and    al,0xc3
  419142:	mov    al,ds:0xb05a7902
  419147:	or     BYTE PTR [edx],0x77
  41914a:	adc    edx,DWORD PTR [ecx-0x57]
  41914d:	sbb    ch,cl
  41914f:	lea    ecx,[edi-0x35]
  419152:	adc    al,BYTE PTR ds:0x366f3c33
  419158:	arpl   WORD PTR [edi+0x617a6be9],di
  41915e:	pusha  
  41915f:	mov    DWORD PTR [esi-0x2e],esp
  419162:	jb     0x419161
  419164:	pop    es
  419165:	es or  esp,0x9c581173
  41916c:	xchg   esp,eax
  41916d:	dec    esi
  41916e:	and    dl,cl
  419170:	mov    cl,0xa4
  419172:	punpcklwd mm6,DWORD PTR ds:0x217b33ee
  419179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41917a:	add    al,0x19
  41917c:	jg     0x419139
  41917e:	mov    dl,0x9c
  419180:	(bad)  
  419182:	bound  esi,QWORD PTR [ebp-0x6a57cd0c]
  419188:	mov    ds:0xa5d4e04d,al
  41918d:	cmp    BYTE PTR [eax+0x6a],dh
  419190:	int    0x37
  419192:	gs gs mov edx,cs
  419196:	inc    ebp
  419197:	ret    0x9a4f
  41919a:	addr16 sbb al,0xbc
  41919d:	add    al,BYTE PTR ds:0xf969b2eb
  4191a3:	outs   dx,BYTE PTR ds:[esi]
  4191a4:	adc    al,0x60
  4191a6:	sub    eax,0x2ca7d7ae
  4191ac:	push   0x9eca526b
  4191b1:	sbb    ebx,DWORD PTR [eax+edi*2-0x76]
  4191b5:	aaa    
  4191b6:	and    eax,0x2d2be18c
  4191bb:	mov    bh,0x18
  4191bd:	push   ebx
  4191be:	dec    edi
  4191bf:	adc    BYTE PTR [eax-0x6b],ch
  4191c2:	adc    DWORD PTR [edi-0x7dead1f4],0xffffffb2
  4191c9:	sar    BYTE PTR [ebx+0x2c267814],0x4e
  4191d0:	gs popf 
  4191d2:	adc    BYTE PTR [ebp+edx*1-0x46],ch
  4191d6:	cmc    
  4191d7:	adc    BYTE PTR [ebp-0x5ca3191a],0x88
  4191de:	pop    esi
  4191df:	xchg   ecx,eax
  4191e0:	xor    eax,0x352f0440
  4191e5:	push   edx
  4191e6:	mov    eax,ds:0x2b923142
  4191eb:	xor    dh,dl
  4191ed:	fcomp  QWORD PTR [eax-0x5b]
  4191f0:	shr    DWORD PTR [ecx],cl
  4191f2:	test   al,0xf0
  4191f4:	leave  
  4191f5:	sub    al,0x66
  4191f7:	mov    eax,0xfc4304e
  4191fc:	xor    esi,DWORD PTR [ecx+eax*4]
  4191ff:	xor    BYTE PTR [esi],al
  419201:	jmp    0x3863c6be
  419206:	fstp   st(3)
  419208:	mov    eax,ds:0xf9e7ec14
  41920d:	adc    al,0x6a
  41920f:	or     DWORD PTR [esi-0x49],edx
  419212:	in     eax,dx
  419213:	mov    esi,0xd552fd1c
  419218:	xor    BYTE PTR [ecx+edi*1],al
  41921b:	int3   
  41921c:	loop   0x419236
  41921e:	shr    dl,0x47
  419221:	push   ebp
  419222:	pop    esp
  419223:	mov    edi,0xbcb1e4d1
  419228:	mov    ch,0x26
  41922a:	mov    ch,0xf1
  41922c:	int    0x41
  41922e:	inc    ecx
  41922f:	cdq    
  419230:	in     al,0x59
  419232:	fcmovnu st,st(7)
  419234:	rcl    BYTE PTR [ecx],1
  419236:	call   0xba89bc25
  41923b:	call   0x3836639d
  419240:	test   DWORD PTR [eax-0x7dfb17bc],ebp
  419246:	enter  0x8033,0x6c
  41924a:	ret    0x64f
  41924d:	xchg   ebp,eax
  41924e:	ret    
  41924f:	mov    eax,ds:0xb08c0e89
  419254:	dec    ebx
  419255:	into   
  419256:	or     al,0x15
  419258:	fwait
  419259:	adc    eax,0x8a642b89
  41925e:	test   al,0x5c
  419260:	jmp    0x88e846a7
  419265:	xor    al,0x85
  419267:	mov    eax,cs:0xb7ab2f6
  41926d:	pop    ds
  41926e:	inc    esp
  41926f:	arpl   WORD PTR [esi-0x11b8c423],di
  419275:	mov    dl,BYTE PTR [esi]
  419277:	cld    
  419278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419279:	fcmovbe st,st(1)
  41927b:	adc    esi,DWORD PTR [ebx]
  41927d:	jbe    0x4192c7
  41927f:	mov    esi,0xfdc88e44
  419284:	cs stos DWORD PTR es:[edi],eax
  419286:	dec    ebx
  419287:	mov    dh,0x7a
  419289:	repz imul edx,ebp,0xffffffba
  41928d:	je     0x4192a0
  41928f:	imul   ebx,DWORD PTR [eax+0x2c497218],0x2dfc2281
  419299:	shl    BYTE PTR [edi-0x37],0x2d
  41929d:	ja     0x41923e
  41929f:	(bad)  
  4192a0:	dec    DWORD PTR [edx]
  4192a2:	xor    dl,BYTE PTR [ebx]
  4192a4:	idiv   DWORD PTR [edi-0x45]
  4192a7:	(bad)  
  4192a9:	iret   
  4192aa:	add    ah,BYTE PTR [eax]
  4192ac:	aad    0x37
  4192ae:	das    
  4192af:	and    ah,BYTE PTR [eax]
  4192b1:	sbb    BYTE PTR [eax+0x1b],0xbf
  4192b5:	cld    
  4192b6:	pop    edx
  4192b7:	sub    DWORD PTR [eax-0x62],esp
  4192ba:	hlt    
  4192bb:	test   al,0x84
  4192bd:	cli    
  4192be:	adc    ecx,DWORD PTR [ebx+0xb59bd70]
  4192c4:	in     al,dx
  4192c5:	shl    bh,cl
  4192c7:	mov    esp,0x34552fcf
  4192cc:	out    dx,al
  4192cd:	mov    dh,0x5c
  4192cf:	pushf  
  4192d0:	jb     0x4192b9
  4192d2:	inc    edx
  4192d3:	push   ecx
  4192d4:	popf   
  4192d5:	out    dx,eax
  4192d6:	test   eax,0xd10df5a
  4192db:	jnp    0x4192c9
  4192dd:	lods   eax,DWORD PTR ds:[esi]
  4192de:	jbe    0x4192c7
  4192e0:	lock int 0xda
  4192e3:	push   ss
  4192e4:	dec    edx
  4192e5:	test   al,0xbd
  4192e7:	in     al,dx
  4192e8:	cmc    
  4192e9:	jnp    0x4192e6
  4192eb:	clc    
  4192ec:	jmp    0x4192c9
  4192ee:	cwde   
  4192ef:	hlt    
  4192f0:	add    al,0x70
  4192f2:	jecxz  0x41934f
  4192f4:	fs xchg edx,eax
  4192f6:	cmp    al,0xcc
  4192f8:	mov    ebx,0xfcb9919f
  4192fd:	jns    0x41931b
  4192ff:	es sbb bh,dh
  419302:	lods   eax,DWORD PTR ds:[esi]
  419303:	cmc    
  419304:	cli    
  419305:	mov    al,0x9d
  419307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419308:	push   edx
  419309:	leave  
  41930a:	aas    
  41930b:	sbb    dh,al
  41930d:	stos   DWORD PTR es:[edi],eax
  41930e:	hlt    
  41930f:	pushf  
  419310:	sti    
  419311:	cmp    al,0xc8
  419313:	cmp    esi,edx
  419315:	mov    al,ds:0xeff1831d
  41931a:	xlat   BYTE PTR ds:[ebx]
  41931b:	xchg   edi,eax
  41931c:	add    esp,DWORD PTR [edi]
  41931e:	xchg   esi,eax
  41931f:	call   FWORD PTR [edx+0x45]
  419322:	mov    BYTE PTR [ecx-0x45],ch
  419325:	test   DWORD PTR [ebp+0x5c],ebp
  419328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419329:	std    
  41932a:	shr    DWORD PTR [esp+ecx*4+0x4e37dba7],1
  419331:	push   ecx
  419332:	xchg   DWORD PTR [eax+0x3f],esp
  419335:	cmc    
  419336:	add    al,0x7f
  419338:	pop    eax
  419339:	jecxz  0x419386
  41933b:	dec    ebx
  41933c:	jge    0x4192db
  41933e:	xchg   edx,eax
  41933f:	mov    DWORD PTR [edx-0x341f6483],edx
  419345:	cmp    dh,ch
  419347:	outs   dx,DWORD PTR ds:[esi]
  419348:	xor    al,0x1
  41934a:	jns    0x41931e
  41934c:	fld    st(1)
  41934e:	in     al,0xd2
  419350:	push   0x39c75f31
  419355:	pop    esi
  419356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419357:	ror    DWORD PTR [edx+0x31],cl
  41935a:	jnp    0x41937f
  41935c:	inc    edi
  41935d:	nop
  41935e:	sub    BYTE PTR es:[esi],ah
  419361:	mov    WORD PTR [esi+0x7cabc303],gs
  419367:	mov    eax,es
  419369:	inc    esi
  41936a:	jae    0x4193e1
  41936c:	addr16 hlt 
  41936e:	jl     0x419383
  419370:	jg     0x4193ca
  419372:	mov    dh,0x0
  419374:	inc    ebx
  419375:	retf   0x2a9c
  419378:	pop    ecx
  419379:	push   0xf
  41937b:	cmp    DWORD PTR [esi+0x3a6dc160],eax
  419381:	rcr    DWORD PTR [edi+0x6a],0xd9
  419385:	push   edx
  419386:	push   eax
  419387:	gs ret 
  419389:	in     eax,dx
  41938a:	dec    edx
  41938b:	xchg   edi,eax
  41938c:	mov    ss,WORD PTR [ebp-0x7fbb65ae]
  419392:	leave  
  419393:	mov    BYTE PTR [ebx+edx*1-0x8d207d9],dh
  41939a:	adc    cl,BYTE PTR [edx-0x14]
  41939d:	or     al,0x2f
  41939f:	scas   eax,DWORD PTR es:[edi]
  4193a0:	aad    0x5e
  4193a2:	inc    ebp
  4193a3:	scas   eax,DWORD PTR es:[edi]
  4193a4:	add    DWORD PTR gs:[edx-0x34794460],esp
  4193ab:	sbb    ah,BYTE PTR [eax]
  4193ad:	xor    bl,BYTE PTR [ebp+0x1b49cb13]
  4193b3:	fs aas 
  4193b5:	xchg   esp,eax
  4193b6:	push   es
  4193b7:	jl     0x41938d
  4193b9:	mov    al,0xc1
  4193bb:	popa   
  4193bc:	js     0x4193c1
  4193be:	aad    0xf3
  4193c0:	xchg   esp,eax
  4193c1:	or     ebp,DWORD PTR [ebx-0x21ae90b]
  4193c7:	lods   al,BYTE PTR ds:[esi]
  4193c8:	lock adc eax,ecx
  4193cb:	cmp    edi,edx
  4193cd:	das    
  4193ce:	into   
  4193cf:	xor    al,0xa9
  4193d1:	mov    ah,0x87
  4193d3:	xor    BYTE PTR [edx-0x3d],0x76
  4193d7:	jb     0x4193b8
  4193d9:	aas    
  4193da:	cmp    DWORD PTR [ecx+0x58],edx
  4193dd:	rol    DWORD PTR [edx-0x37],0xcd
  4193e1:	scas   eax,DWORD PTR es:[edi]
  4193e2:	iret   
  4193e3:	adc    eax,DWORD PTR [esi+0x3449b516]
  4193e9:	push   esp
  4193ea:	cmp    eax,0x6b53249f
  4193ef:	inc    ebx
  4193f0:	ss inc edi
  4193f2:	jmp    0xa8c9ad84
  4193f7:	and    eax,0xfd656ab8
  4193fc:	test   ch,bh
  4193fe:	cmp    ebx,DWORD PTR [esi+edi*1]
  419401:	imul   ebp,edx,0x24
  419404:	out    0x93,al
  419406:	retf   
  419407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419408:	mov    ch,0x89
  41940a:	mov    bl,0x76
  41940c:	(bad)  
  41940d:	fwait
  41940e:	xor    eax,esp
  419410:	aam    0xf2
  419412:	test   DWORD PTR [esi],esp
  419414:	int    0xf0
  419416:	cmc    
  419417:	mov    edx,0x82e1bf68
  41941c:	sub    BYTE PTR ds:0x9c4d6746,0xec
  419423:	in     al,0x87
  419425:	pop    edi
  419426:	push   ds
  419427:	ret    0xd97
  41942a:	ins    DWORD PTR es:[edi],dx
  41942b:	shr    BYTE PTR [eax],0x90
  41942e:	jbe    0x419463
  419430:	(bad)  
  419432:	not    DWORD PTR [edx+0x23a295d]
  419438:	sub    DWORD PTR [ecx],esp
  41943a:	sub    BYTE PTR [esi+0x14],0x4c
  41943e:	or     DWORD PTR [esi-0x2751312f],esi
  419444:	loop   0x41947d
  419446:	fmul   DWORD PTR [ebx]
  419448:	aaa    
  419449:	and    ecx,DWORD PTR [eax]
  41944b:	adc    al,0x1b
  41944d:	mov    ebx,0xcfe09782
  419452:	mov    ds:0x9b4ef06b,eax
  419457:	sbb    eax,0x38edee8a
  41945c:	jnp    0x4194a2
  41945e:	div    BYTE PTR [edi]
  419460:	mov    ds:0xfdca3eb6,eax
  419465:	and    BYTE PTR [ebx-0x1323df3c],al
  41946b:	cmp    ch,BYTE PTR [edx]
  41946d:	push   0x4c7048a8
  419472:	or     dh,BYTE PTR [esi-0x597f3673]
  419478:	aas    
  419479:	mov    ebp,0x2291208e
  41947e:	or     al,0x8b
  419480:	repnz and BYTE PTR [ebp+0x28],0x33
  419485:	push   esp
  419486:	cmp    dh,0x8d
  419489:	adc    esi,DWORD PTR [edi+0x2f5d2bbb]
  41948f:	pop    ss
  419490:	repnz xchg esi,eax
  419492:	jnp    0x4194fb
  419494:	retf   0x480a
  419497:	(bad)  
  419498:	stc    
  419499:	fisub  DWORD PTR [ecx]
  41949b:	in     eax,dx
  41949c:	sbb    cl,BYTE PTR [esi-0x394e6b86]
  4194a2:	out    dx,al
  4194a3:	push   0xffffffdc
  4194a5:	or     eax,ebx
  4194a7:	jns    0x41944c
  4194a9:	fwait
  4194aa:	push   ds
  4194ab:	sbb    BYTE PTR [edx-0x786093b7],bh
  4194b1:	add    bl,BYTE PTR [esi+ebx*1+0x22bb98d7]
  4194b8:	push   ecx
  4194b9:	jg     0x419513
  4194bb:	out    0x50,eax
  4194bd:	ret    
  4194be:	das    
  4194bf:	ds cmp eax,0xcaf66494
  4194c5:	fwait
  4194c6:	clc    
  4194c7:	xchg   edi,eax
  4194c8:	ins    BYTE PTR es:[edi],dx
  4194c9:	pop    es
  4194ca:	jbe    0x419459
  4194cc:	push   0xe9bf9167
  4194d1:	in     al,dx
  4194d2:	dec    esp
  4194d3:	std    
  4194d4:	sti    
  4194d5:	push   edi
  4194d6:	push   edi
  4194d7:	push   esp
  4194d8:	xchg   ebx,eax
  4194d9:	test   dh,0xb3
  4194dc:	not    ch
  4194de:	(bad)  
  4194df:	push   ebp
  4194e0:	and    cl,cl
  4194e2:	pop    esi
  4194e3:	xchg   edx,eax
  4194e4:	test   BYTE PTR ds:0x39633df6,al
  4194ea:	call   0x6a59:0xd2541b55
  4194f1:	enter  0xf17a,0x48
  4194f5:	dec    eax
  4194f6:	cmp    DWORD PTR [ecx],edx
  4194f8:	out    0x2b,eax
  4194fa:	push   edx
  4194fb:	icebp  
  4194fc:	sbb    ch,BYTE PTR [ecx+0x61]
  4194ff:	das    
  419500:	jmp    0xdbf74785
  419505:	inc    esp
  419506:	test   DWORD PTR [edi+eax*2-0x52],esi
  41950a:	mov    dh,0x17
  41950c:	ins    BYTE PTR es:[edi],dx
  41950d:	adc    DWORD PTR [ebp-0x572fbcac],ecx
  419513:	sub    ecx,0x240f8bd1
  419519:	aam    0x6a
  41951b:	pop    esi
  41951c:	clc    
  41951d:	retf   
  41951e:	adc    al,0x14
  419520:	stos   BYTE PTR es:[edi],al
  419521:	and    ah,BYTE PTR [eax+0x63]
  419524:	cdq    
  419525:	(bad)  
  419526:	pop    eax
  419527:	cli    
  419528:	cmp    DWORD PTR [ebp-0x2f],esi
  41952b:	adc    ebp,edi
  41952d:	loope  0x419578
  41952f:	xor    eax,0x4ffa5073
  419534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419535:	push   0x43
  419537:	xchg   ebp,eax
  419538:	shl    ah,cl
  41953a:	fdiv   QWORD PTR [ecx-0xb0dd8fd]
  419540:	lds    eax,FWORD PTR [eax+0x4c]
  419543:	dec    sp
  419545:	and    bh,BYTE PTR [esi+eiz*8]
  419548:	test   BYTE PTR [eax],bl
  41954a:	inc    ecx
  41954b:	call   0x204fb796
  419550:	mov    WORD PTR [ecx-0x65],cs
  419553:	into   
  419554:	arpl   dx,bp
  419556:	adc    esi,DWORD PTR es:[edi]
  419559:	icebp  
  41955a:	mov    DWORD PTR [ebp+0x5a],ebp
  41955d:	add    eax,0x5c286624
  419562:	(bad)  
  419563:	aad    0x52
  419565:	sub    eax,0x1ca9f699
  41956a:	sahf   
  41956b:	ficomp WORD PTR [ecx+ecx*8]
  41956e:	shl    BYTE PTR [edx+0x3a],1
  419571:	dec    BYTE PTR [edi+0x56d15292]
  419577:	pop    edi
  419578:	mov    ss,WORD PTR [ebp+0x695b4171]
  41957e:	and    bh,0xd8
  419581:	retf   
  419582:	adc    BYTE PTR [edi-0x3b],bh
  419585:	test   eax,0x6eb62c4d
  41958a:	retf   0x3f73
  41958d:	ins    DWORD PTR es:[edi],dx
  41958e:	mov    ebx,0x2bcfc210
  419593:	lock add DWORD PTR [esp+eax*2+0x67],esp
  419598:	sub    esi,esi
  41959a:	mov    ebx,0xd909c0a2
  41959f:	vpsubd ymm1,ymm7,YMMWORD PTR [edi+ebp*2-0x72e6d940]
  4195a8:	dec    edx
  4195a9:	inc    ecx
  4195aa:	mov    esp,0xc1433d8f
  4195af:	ins    DWORD PTR es:[edi],dx
  4195b0:	popf   
  4195b1:	int    0xf9
  4195b3:	xchg   esp,eax
  4195b4:	inc    ecx
  4195b5:	push   ebp
  4195b6:	mov    eax,ds:0x5eaec243
  4195bb:	enter  0xa74f,0x44
  4195bf:	lock or al,0xc1
  4195c2:	leave  
  4195c3:	mov    ds:0x2110ffb7,eax
  4195c8:	ja     0x419620
  4195ca:	ds push dx
  4195cd:	retf   0x3cfc
  4195d0:	lods   al,BYTE PTR ds:[esi]
  4195d1:	inc    edx
  4195d2:	(bad)  
  4195d4:	cmp    al,0x5c
  4195d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195d7:	xchg   ebx,eax
  4195d8:	outs   dx,DWORD PTR ds:[esi]
  4195d9:	(bad)  
  4195da:	adc    DWORD PTR ds:0xa5ced689,0x4d
  4195e1:	inc    ebx
  4195e2:	pop    ss
  4195e3:	cmp    esi,edi
  4195e5:	stos   BYTE PTR es:[edi],al
  4195e6:	rol    ah,1
  4195e8:	shl    DWORD PTR [edx+0x50],0x72
  4195ec:	xchg   ebx,eax
  4195ed:	mov    DWORD PTR [ebx+eax*2-0x52e9c8f],ebx
  4195f4:	shr    BYTE PTR [eax],cl
  4195f6:	gs pop ds
  4195f8:	fcomi  st,st(3)
  4195fa:	mov    ah,0x63
  4195fc:	jle    0x4195e8
  4195fe:	mov    WORD PTR [edi+ebp*1+0x6a],gs
  419602:	cmp    DWORD PTR [ebx+0x348240de],ecx
  419608:	jbe    0x41967a
  41960a:	call   0xecb66cbb
  41960f:	es popf 
  419611:	add    al,0x14
  419613:	fist   DWORD PTR ds:0x69fc8ceb
  419619:	(bad)  
  41961a:	bound  eax,QWORD PTR [esi+0x5d473ae1]
  419620:	ficomp WORD PTR [ebp+0x62]
  419623:	push   esi
  419624:	add    BYTE PTR [edi-0x7d60c56a],dh
  41962a:	pop    es
  41962b:	and    ah,BYTE PTR [ecx+eiz*8-0x772ea983]
  419632:	sbb    ch,0x7f
  419635:	cmp    al,0xed
  419637:	jnp    0x41960b
  419639:	cmp    al,0x42
  41963b:	xor    ebp,DWORD PTR [edi-0x6c071794]
  419641:	push   ebx
  419642:	mov    esi,0xda6a3e1e
  419647:	aam    0x88
  419649:	add    DWORD PTR [edi+edi*4-0x38],ecx
  41964d:	push   ecx
  41964e:	call   DWORD PTR [ebx-0xd9c3794]
  419654:	aaa    
  419655:	in     al,dx
  419656:	cmp    BYTE PTR [edx+0x25],dl
  419659:	pop    ebp
  41965a:	mov    al,0x51
  41965c:	mov    eax,ds:0xbfc93698
  419661:	inc    ebp
  419662:	fwait
  419663:	(bad)  
  419664:	xchg   ecx,eax
  419665:	mov    esi,0xe7f9d257
  41966a:	lods   al,BYTE PTR ds:[esi]
  41966b:	aaa    
  41966c:	xchg   ebp,eax
  41966d:	scas   eax,DWORD PTR es:[edi]
  41966e:	sar    edi,1
  419670:	mov    ebx,0x37c9d5b3
  419675:	mov    ebx,0xfa58477d
  41967a:	aaa    
  41967b:	dec    ecx
  41967c:	adc    DWORD PTR [edi-0x33cdcc9d],ebp
  419682:	test   DWORD PTR [esi-0x6cc16318],ebx
  419688:	pushf  
  419689:	push   es
  41968a:	lea    edx,[edx]
  41968c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41968d:	(bad)  
  41968e:	jecxz  0x41970f
  419690:	inc    ebp
  419691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419692:	sbb    al,0xae
  419694:	mov    bh,0xf1
  419696:	mov    al,ds:0x6baba87d
  41969b:	idiv   DWORD PTR [ecx+0x540f2bc5]
  4196a1:	scas   al,BYTE PTR es:[edi]
  4196a2:	and    DWORD PTR [eax+0x6a],ecx
  4196a5:	mov    eax,ds:0x5a02c631
  4196aa:	popf   
  4196ab:	xor    eax,ecx
  4196ad:	retf   0xf5be
  4196b0:	(bad)  
  4196b2:	in     al,dx
  4196b3:	push   esp
  4196b4:	jl     0x41967d
  4196b6:	dec    eax
  4196b7:	mov    BYTE PTR [eax],al
  4196b9:	fwait
  4196ba:	pusha  
  4196bb:	out    dx,al
  4196bc:	lahf   
  4196bd:	mov    WORD PTR ds:0xb0fd1e2c,fs
  4196c3:	pop    ecx
  4196c4:	jecxz  0x41972b
  4196c6:	mov    eax,0x33ad015e
  4196cb:	push   cs
  4196cc:	inc    ebx
  4196cd:	pop    esp
  4196ce:	adc    eax,0x642e976a
  4196d3:	push   edx
  4196d4:	(bad)  
  4196d5:	pop    eax
  4196d6:	dec    esi
  4196d7:	mov    ah,0xad
  4196d9:	mov    ds:0x1e9313be,eax
  4196de:	xor    DWORD PTR [eax+0x2f],ebp
  4196e1:	fmul   QWORD PTR [edx+0x51]
  4196e4:	outs   dx,DWORD PTR ds:[esi]
  4196e5:	mov    esi,0xcd65f5eb
  4196ea:	dec    ebx
  4196eb:	dec    ebp
  4196ec:	lahf   
  4196ed:	stc    
  4196ee:	pushf  
  4196ef:	fiadd  DWORD PTR [ecx+ebx*2+0x32d3599b]
  4196f6:	inc    ebx
  4196f7:	jnp    0x41976c
  4196f9:	xor    DWORD PTR fs:[ebp+0x79],0x18
  4196fe:	icebp  
  4196ff:	add    ecx,esp
  419701:	xchg   esi,eax
  419702:	jo     0x419691
  419704:	adc    DWORD PTR [ebx+0x1f],ebx
  419707:	mov    ebp,0xe43269f9
  41970c:	jp     0x419723
  41970e:	mov    ecx,0xbcbf5c6f
  419713:	mov    ebx,0xb292fd3b
  419718:	add    ch,al
  41971a:	or     eax,0xc4684c5d
  41971f:	and    BYTE PTR ds:0x247e57f7,cl
  419725:	in     eax,0xe7
  419727:	sbb    eax,0x380c7a2
  41972c:	or     eax,0x4615be8a
  419731:	and    BYTE PTR [ecx-0x42],dh
  419734:	add    bl,BYTE PTR [esp+edx*4+0x3a]
  419738:	sbb    eax,DWORD PTR [esi]
  41973a:	mov    db6,ecx
  41973d:	mov    esi,DWORD PTR [eax+0x52]
  419740:	std    
  419741:	enter  0x29ec,0xdb
  419745:	icebp  
  419746:	ror    WORD PTR [esi],1
  419749:	lea    esp,[ebx]
  41974b:	and    dh,dh
  41974d:	sbb    DWORD PTR [edx-0x3cacf9f3],esi
  419753:	divps  xmm0,XMMWORD PTR [ebp-0x50a1d445]
  41975a:	stc    
  41975b:	push   ebx
  41975c:	inc    eax
  41975d:	in     al,0x8e
  41975f:	into   
  419760:	in     eax,0x41
  419762:	inc    edi
  419763:	dec    edx
  419764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419766:	mov    esp,0x9ff38fb0
  41976b:	jno    0x419723
  41976d:	in     eax,dx
  41976e:	in     al,0xbb
  419770:	mov    edi,0x5aef014e
  419775:	adc    cl,0xf4
  419778:	mov    ah,0xb9
  41977a:	out    0x8,eax
  41977c:	(bad)  
  41977d:	xchg   ebp,eax
  41977e:	or     cl,BYTE PTR [edi]
  419780:	std    
  419781:	mov    ss,WORD PTR [eax+0x28]
  419784:	shl    DWORD PTR [ebx-0x4b0cafae],1
  41978a:	sub    al,0x7b
  41978c:	inc    ebx
  41978d:	and    DWORD PTR [edx+ecx*2-0x61],edx
  419791:	cmp    al,0xfa
  419793:	add    al,0xa7
  419795:	push   ss
  419796:	imul   esp,DWORD PTR ds:0x752cfb1d,0xe6b0b5af
  4197a0:	push   ss
  4197a1:	sub    edi,esp
  4197a3:	call   0xa355ac7a
  4197a8:	or     BYTE PTR [ebp-0x641e5148],dh
  4197ae:	add    eax,0xdb2a6ce3
  4197b3:	mov    dl,0x51
  4197b5:	dec    ebx
  4197b6:	repnz and DWORD PTR [edx],edi
  4197b9:	mov    eax,ds:0x39ab2496
  4197be:	dec    BYTE PTR [ebx+0xa4d4cf3]
  4197c4:	lods   eax,DWORD PTR ds:[esi]
  4197c5:	into   
  4197c6:	xchg   edx,eax
  4197c7:	lods   al,BYTE PTR ds:[esi]
  4197c8:	je     0x419759
  4197ca:	or     DWORD PTR [edi+0x17],edi
  4197cd:	jnp    0x419781
  4197cf:	sbb    al,0x1f
  4197d1:	add    DWORD PTR [ebp+eax*4+0x5a280968],ecx
  4197d8:	stos   BYTE PTR es:[edi],al
  4197d9:	push   ecx
  4197da:	mov    ah,0x6f
  4197dc:	mov    edi,0xed1383ba
  4197e1:	outs   dx,BYTE PTR ds:[esi]
  4197e2:	sti    
  4197e3:	stos   DWORD PTR es:[edi],eax
  4197e4:	and    edi,DWORD PTR [ebp+ecx*2+0x4f]
  4197e8:	cmp    eax,0x2efc5c51
  4197ed:	mov    DWORD PTR [ecx+0x164d0776],edi
  4197f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f4:	adc    BYTE PTR [edi-0xbf9e231],al
  4197fa:	in     al,dx
  4197fb:	out    0xbe,eax
  4197fd:	add    esp,DWORD PTR [ebx-0x74]
  419800:	out    dx,eax
  419801:	(bad)  
  419802:	sub    BYTE PTR [edi+0x14],dl
  419805:	pop    ebx
  419806:	je     0x4197fe
  419808:	retf   
  419809:	hlt    
  41980a:	pop    ds
  41980b:	ja     0x419807
  41980d:	scas   al,BYTE PTR es:[edi]
  41980e:	and    eax,0x5245a75b
  419813:	aaa    
  419814:	pushf  
  419815:	dec    ebp
  419816:	pusha  
  419817:	imul   DWORD PTR [ebp-0x29]
  41981a:	out    dx,al
  41981b:	mov    ?,WORD PTR [edx+0x21]
  41981e:	jbe    0x4197d3
  419820:	dec    eax
  419821:	cld    
  419822:	xlat   BYTE PTR ds:[ebx]
  419823:	or     al,0xb4
  419825:	xchg   edx,eax
  419826:	add    al,0x2c
  419828:	mov    dl,0x5e
  41982a:	jnp    0x41984b
  41982c:	pop    eax
  41982d:	nop
  41982e:	pop    edx
  41982f:	outs   dx,DWORD PTR ds:[esi]
  419830:	xor    eax,0x52f3fc10
  419835:	cmp    al,0xdf
  419837:	inc    eax
  419838:	mov    BYTE PTR [edi-0x45],dh
  41983b:	(bad)  
  41983c:	pushf  
  41983d:	iret   
  41983e:	jne    0x4198aa
  419840:	dec    esi
  419841:	jns    0x41986b
  419843:	test   BYTE PTR [ecx-0xf],dh
  419846:	shl    DWORD PTR [ebp+0x5b],1
  419849:	xchg   esp,eax
  41984a:	mov    ch,0x51
  41984c:	ins    BYTE PTR es:[edi],dx
  41984d:	dec    esp
  41984e:	(bad)  
  419850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419851:	mov    al,0x65
  419853:	popf   
  419854:	xor    DWORD PTR [eax+0x1466ea84],ebp
  41985a:	adc    eax,0x307be1d4
  41985f:	bound  edi,QWORD PTR [esi+0x666f94b4]
  419865:	xchg   BYTE PTR [eax],al
  419867:	pop    ebp
  419868:	ds or  eax,0x36a5bb38
  41986e:	jae    0x4198cb
  419870:	leave  
  419871:	adc    al,0x61
  419873:	push   0xffffff8f
  419875:	ss jo  0x41986e
  419878:	inc    ebx
  419879:	bound  ebx,QWORD PTR [ebp-0x6031409]
  41987f:	arpl   WORD PTR [edi],si
  419881:	sbb    ebp,ebx
  419883:	mov    ebx,0x837b6aa6
  419888:	pop    esi
  419889:	lods   al,BYTE PTR ds:[esi]
  41988a:	popa   
  41988b:	xor    eax,0xdeb47fe
  419890:	add    BYTE PTR [eax],ch
  419892:	push   ebp
  419893:	out    dx,al
  419894:	and    eax,0xe1987081
  419899:	jle    0x419879
  41989b:	data16 cmp dh,bh
  41989e:	dec    ebx
  41989f:	or     BYTE PTR [edi-0x3c],bh
  4198a2:	ds pop eax
  4198a4:	or     ebp,ecx
  4198a6:	(bad)  
  4198a7:	ins    BYTE PTR es:[edi],dx
  4198a8:	fwait
  4198a9:	enter  0x25ee,0x4b
  4198ad:	outs   dx,BYTE PTR ds:[esi]
  4198ae:	or     al,0x2d
  4198b0:	js     0x419847
  4198b2:	retf   0x2a72
  4198b5:	dec    edi
  4198b6:	push   es
  4198b7:	repz sub DWORD PTR [ecx+0x2e],0xffffffad
  4198bc:	sbb    al,BYTE PTR [esp+edi*2]
  4198bf:	addr16 sbb bl,bh
  4198c2:	mov    al,ch
  4198c4:	popf   
  4198c5:	lds    ebp,FWORD PTR [ebx]
  4198c7:	(bad)  
  4198c8:	outs   dx,BYTE PTR ds:[esi]
  4198c9:	out    0xb9,al
  4198cb:	xchg   DWORD PTR [ebx+0x56],ecx
  4198ce:	cmp    DWORD PTR [ecx+0x74],ebp
  4198d1:	cmp    ebx,DWORD PTR [ebx]
  4198d3:	jmp    0x86edd506
  4198d8:	pusha  
  4198d9:	call   0xb9657329
  4198de:	pop    ss
  4198df:	and    al,0x5d
  4198e1:	aaa    
  4198e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198e3:	add    eax,0x7747c4d4
  4198e8:	(bad)  
  4198e9:	mov    ebp,0xd5e0224d
  4198ee:	out    dx,eax
  4198ef:	xlat   BYTE PTR ds:[ebx]
  4198f0:	or     BYTE PTR [ebx-0x71a865f3],al
  4198f6:	or     DWORD PTR [eax+0x3b],esp
  4198f9:	xor    DWORD PTR [ecx+0x78cca670],0xffffffa7
  419900:	ror    DWORD PTR [ecx+0x52d0de5b],1
  419906:	in     al,dx
  419907:	xchg   esp,eax
  419908:	adc    dh,BYTE PTR [edx+edx*1]
  41990b:	inc    edx
  41990c:	fstp   DWORD PTR [edi]
  41990e:	mov    WORD PTR [edi+0x25],?
  419911:	adc    BYTE PTR [edx],dl
  419913:	adc    DWORD PTR [edi+0x24dfc7ff],esi
  419919:	mov    esp,0x9ed3c44b
  41991e:	inc    ecx
  41991f:	inc    ebp
  419920:	es ss mov bl,0x21
  419924:	sar    DWORD PTR [ebx-0xa],0x4b
  419928:	cmp    BYTE PTR [esi-0x33a63eb2],dl
  41992e:	rcl    DWORD PTR [edi+0x4e],0x48
  419932:	pop    ecx
  419933:	cmp    eax,0xdcbbf574
  419938:	imul   esp,DWORD PTR [ecx],0xffffffa4
  41993b:	xor    eax,0x18c5dc10
  419940:	es push ebp
  419942:	xchg   edi,eax
  419943:	xchg   bh,bh
  419945:	cwde   
  419946:	xlat   BYTE PTR ds:[ebx]
  419947:	test   al,0xa4
  419949:	xchg   DWORD PTR [ecx+0x4c],esi
  41994c:	mov    edx,0x3b67cae0
  419951:	mov    esi,0x51ef239a
  419956:	fdivr  QWORD PTR [esi-0x5]
  419959:	inc    edx
  41995a:	aaa    
  41995b:	call   0x34bc:0x94a4e0da
  419962:	ins    DWORD PTR es:[edi],dx
  419963:	loope  0x41995e
  419965:	ja     0x4199c9
  419967:	fild   WORD PTR [eax]
  419969:	arpl   di,bx
  41996b:	xchg   edi,eax
  41996c:	hlt    
  41996d:	inc    esp
  41996e:	repz xor al,0x49
  419971:	adc    cl,BYTE PTR fs:[ebp+0x23]
  419975:	pusha  
  419976:	sar    DWORD PTR ds:0x7610de4e,1
  41997c:	pop    ecx
  41997d:	loope  0x419938
  41997f:	daa    
  419980:	jle    0x419918
  419982:	push   0x50
  419984:	dec    esp
  419985:	shr    BYTE PTR [ecx+0x4d],1
  419988:	retf   0x20fc
  41998b:	xor    al,0xd1
  41998d:	mov    ?,WORD PTR [eax+0x484b0907]
  419993:	repnz bound ebp,QWORD PTR [esi+0x75]
  419997:	cmp    DWORD PTR ds:0xc4e209da,edi
  41999d:	mov    al,ds:0x5992dd48
  4199a2:	mov    ecx,0xa5fc2e3
  4199a7:	(bad)
  4199aa:	jo     0x41996a
  4199ac:	ror    edx,0x59
  4199af:	inc    ecx
  4199b0:	pop    edi
  4199b1:	adc    al,0xe9
  4199b3:	push   ebp
  4199b4:	xchg   ecx,ebp
  4199b6:	stos   DWORD PTR es:[edi],eax
  4199b7:	test   BYTE PTR [esi-0x5],dh
  4199ba:	test   BYTE PTR [ebp-0x51],al
  4199bd:	jno    0x41997a
  4199bf:	xor    ebx,0xd3d0542a
  4199c5:	and    DWORD PTR [eax+0x2d4a41ec],esp
  4199cb:	mov    ebp,0x1d7a4e5d
  4199d0:	mov    al,ds:0xd0925cdc
  4199d5:	pop    ebx
  4199d6:	mov    db2,ebx
  4199d9:	xor    DWORD PTR [ecx+0x3198903c],0x4d9f3d1a
  4199e3:	ret    
  4199e4:	stos   DWORD PTR es:[edi],eax
  4199e5:	int    0x92
  4199e7:	dec    edx
  4199e8:	mov    WORD PTR ss:[eax+ebx*2],cs
  4199ec:	aaa    
  4199ed:	std    
  4199ee:	fmul   DWORD PTR [edx+0x2b]
  4199f1:	push   0x402b5a
  4199f6:	push   es
  4199f7:	hlt    
  4199f8:	lods   eax,DWORD PTR ds:[esi]
  4199f9:	dec    ebx
  4199fa:	(bad)  
  4199fb:	push   esp
  4199fc:	mov    ebp,0x2ce7d3a1
  419a01:	addr16 lock mov cl,0xca
  419a05:	and    BYTE PTR [edi+0x14],ch
  419a08:	jecxz  0x419a82
  419a0a:	mov    eax,0x7e4e21d6
  419a0f:	mov    gs,esp
  419a11:	push   edi
  419a12:	mov    edx,0x34935033
  419a17:	dec    esi
  419a18:	xchg   edi,eax
  419a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a1a:	lea    esi,ds:0x92abe171
  419a20:	sbb    ecx,DWORD PTR [edi+0x25]
  419a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a24:	test   bl,dl
  419a26:	xchg   ecx,eax
  419a27:	xlat   BYTE PTR ds:[ebx]
  419a28:	outs   dx,DWORD PTR ds:[esi]
  419a29:	retf   
  419a2a:	add    eax,0x2e07d0a3
  419a2f:	push   esi
  419a30:	std    
  419a31:	pushf  
  419a32:	push   cs
  419a33:	cmc    
  419a34:	stos   BYTE PTR es:[edi],al
  419a35:	rcr    DWORD PTR [ebp+0x8],cl
  419a38:	loopne 0x4199ec
  419a3a:	cmp    ecx,DWORD PTR [ecx-0x7a]
  419a3d:	popf   
  419a3e:	test   ebx,esi
  419a40:	into   
  419a41:	mov    ds:0xcff3fea6,al
  419a46:	push   ebx
  419a47:	pop    edi
  419a48:	rcr    DWORD PTR [esi+edi*4],0x5c
  419a4c:	mov    cl,0x5
  419a4e:	xor    esi,eax
  419a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a51:	sub    esp,0x7c
  419a54:	fnstsw WORD PTR [edi-0x155dd1a1]
  419a5a:	mov    eax,ds:0x5485d728
  419a5f:	jl     0x419a3c
  419a61:	pop    es
  419a62:	xchg   edi,eax
  419a63:	add    esp,DWORD PTR [esi+ecx*1]
  419a66:	xchg   DWORD PTR [edx-0x40],edx
  419a69:	adc    eax,0x476f619b
  419a6e:	push   edx
  419a6f:	xchg   edx,eax
  419a70:	dec    ecx
  419a71:	sub    DWORD PTR fs:[edx-0x13203158],ecx
  419a78:	cmp    ah,bl
  419a7a:	adc    edx,DWORD PTR [ebp+0x258a3486]
  419a80:	inc    ebp
  419a81:	stos   DWORD PTR es:[edi],eax
  419a82:	sbb    BYTE PTR [ecx-0x21],dl
  419a85:	(bad)  [esi-0x73]
  419a88:	pop    edx
  419a89:	aad    0x28
  419a8b:	fldz   
  419a8d:	push   ecx
  419a8e:	fscale 
  419a90:	inc    esi
  419a91:	jbe    0x419a50
  419a93:	imul   ecx,DWORD PTR [eax],0x50f54e18
  419a99:	xor    bl,BYTE PTR [edx-0x41]
  419a9c:	loopne 0x419ae1
  419a9e:	push   esp
  419a9f:	aad    0x10
  419aa1:	xchg   edi,eax
  419aa2:	mov    dl,0xcc
  419aa4:	jmp    0x875e:0x270093de
  419aab:	sbb    edx,DWORD PTR [ebx+0x6e31796b]
  419ab1:	test   al,0x25
  419ab3:	aaa    
  419ab4:	cwde   
  419ab5:	outs   dx,DWORD PTR ds:[esi]
  419ab6:	sbb    ecx,esp
  419ab8:	push   ss
  419ab9:	add    DWORD PTR [edi-0x122e3689],eax
  419abf:	cwde   
  419ac0:	std    
  419ac1:	sbb    ebx,DWORD PTR [ecx-0x358a01d9]
  419ac7:	popa   
  419ac8:	test   eax,0x90afe0b
  419acd:	push   0x87c31a3b
  419ad2:	sub    DWORD PTR [ebx+0x4c],0xdc93b9fe
  419ad9:	sub    BYTE PTR [ecx+0x15],0x31
  419add:	cmp    eax,0xdb3eb619
  419ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ae3:	in     al,dx
  419ae4:	sbb    al,0xba
  419ae6:	sub    bh,cl
  419ae8:	(bad)  [eax-0x52]
  419aec:	das    
  419aed:	test   eax,0xbc4640c8
  419af2:	leave  
  419af3:	pop    edx
  419af4:	pushf  
  419af5:	pop    ebp
  419af6:	fwait
  419af7:	gs xchg edx,eax
  419af9:	rol    BYTE PTR [edx],0xbb
  419afc:	mov    ebp,0xd1c47079
  419b01:	dec    BYTE PTR [edi+0x1c354cb7]
  419b07:	neg    BYTE PTR [ecx]
  419b09:	test   ch,0x4e
  419b0c:	pusha  
  419b0d:	lds    ecx,FWORD PTR [si-0xea6]
  419b12:	popa   
  419b13:	pushf  
  419b14:	xchg   esp,eax
  419b15:	or     al,BYTE PTR [ebp-0x72]
  419b18:	ja     0x419b62
  419b1a:	pop    edx
  419b1b:	or     al,0x1a
  419b1d:	pop    ss
  419b1e:	cmp    edx,DWORD PTR [edx-0x116421bf]
  419b24:	dec    ecx
  419b25:	inc    ebp
  419b26:	in     eax,dx
  419b27:	loopne 0x419ba0
  419b29:	psrad  mm4,QWORD PTR [esi+0x7]
  419b2d:	add    al,0x47
  419b2f:	fwait
  419b30:	adc    al,bl
  419b32:	mov    ebx,edx
  419b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b35:	popa   
  419b36:	aam    0x2a
  419b38:	mov    cl,0x34
  419b3a:	jnp    0x419b91
  419b3c:	mov    cl,BYTE PTR [ebx]
  419b3e:	ret    
  419b3f:	cld    
  419b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b41:	mov    esi,0x590a04fa
  419b46:	pop    ebp
  419b47:	adc    eax,0xe5db5169
  419b4c:	jecxz  0x419b4c
  419b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4f:	ins    DWORD PTR es:[edi],dx
  419b50:	popa   
  419b51:	pop    esi
  419b52:	out    0x4d,al
  419b54:	gs or  al,0xba
  419b57:	xchg   ebp,eax
  419b58:	cmp    al,0x3d
  419b5a:	stc    
  419b5b:	mov    edx,0xfcaf49fe
  419b60:	mov    ah,0xd4
  419b62:	ret    
  419b63:	mov    ch,0x8e
  419b65:	pop    ss
  419b66:	adc    al,0xc6
  419b68:	ja     0x419be1
  419b6a:	ret    0xa88e
  419b6d:	repnz lahf 
  419b6f:	cmp    BYTE PTR [ebx+0x6bcd1e40],cl
  419b75:	sbb    BYTE PTR [esi],dl
  419b77:	jge    0x419b41
  419b79:	and    al,0xd9
  419b7b:	ja     0x419b78
  419b7d:	pop    eax
  419b7e:	popf   
  419b7f:	cli    
  419b80:	ret    0xd7e3
  419b83:	inc    edx
  419b84:	in     al,dx
  419b85:	fs std 
  419b87:	pusha  
  419b88:	sbb    DWORD PTR ds:0x986822be,esi
  419b8e:	pop    ss
  419b8f:	jae    0x419b26
  419b91:	dec    edi
  419b92:	addr16 dec esp
  419b94:	mov    DWORD PTR [edi+0x68],esi
  419b97:	aam    0x17
  419b99:	out    0x5a,eax
  419b9b:	adc    al,0x0
  419b9d:	ins    BYTE PTR es:[edi],dx
  419b9e:	stos   DWORD PTR es:[edi],eax
  419b9f:	add    eax,0xc9f9f82c
  419ba4:	adc    DWORD PTR [ecx-0x6625b358],edi
  419baa:	xor    al,0x14
  419bad:	inc    BYTE PTR [ebp+eax*1+0x11]
  419bb1:	pop    ecx
  419bb2:	imul   esi,ebx,0xbc6e807
  419bb8:	addr16 and eax,0x8c6ca866
  419bbe:	dec    edi
  419bbf:	push   esi
  419bc0:	loopne 0x419c40
  419bc2:	call   DWORD PTR [esi+edx*4+0x70f0156c]
  419bc9:	cmp    bl,BYTE PTR [esi-0x7b]
  419bcc:	(bad)  
  419bcd:	loope  0x419bf3
  419bcf:	sub    bh,dh
  419bd1:	int3   
  419bd2:	mov    al,0xa9
  419bd4:	inc    ecx
  419bd5:	jnp    0x419b9a
  419bd7:	adc    al,0x22
  419bd9:	push   ss
  419bda:	das    
  419bdb:	add    ecx,DWORD PTR [bp+di-0x29]
  419bdf:	jmp    0x21d6478e
  419be4:	cmp    al,0xdf
  419be6:	cli    
  419be7:	lock loop 0x419b8a
  419bea:	les    ebp,FWORD PTR [edi]
  419bec:	pop    esi
  419bed:	dec    edx
  419bee:	popa   
  419bef:	add    ax,0xe514
  419bf3:	and    DWORD PTR [edi],edi
  419bf5:	sbb    cl,BYTE PTR [ecx+edx*4-0x5a07045e]
  419bfc:	fs inc esp
  419bfe:	imul   eax,DWORD PTR [eax],0xffffffd3
  419c01:	aaa    
  419c02:	fs ins DWORD PTR es:[edi],dx
  419c04:	pop    esp
  419c05:	jb     0x419be2
  419c07:	stos   DWORD PTR es:[edi],eax
  419c08:	ret    0xb59a
  419c0b:	lds    esp,FWORD PTR [eax]
  419c0d:	mov    eax,0x7c65b06a
  419c12:	ins    BYTE PTR es:[edi],dx
  419c13:	ins    BYTE PTR es:[edi],dx
  419c14:	iret   
  419c15:	(bad)  
  419c16:	and    al,0x3b
  419c18:	outs   dx,BYTE PTR ds:[esi]
  419c19:	adc    esi,esi
  419c1b:	jle    0x419bb7
  419c1d:	pop    sp
  419c1f:	sub    ch,BYTE PTR [ebx-0x7ad487b2]
  419c25:	ss xchg esp,eax
  419c27:	fwait
  419c28:	dec    DWORD PTR [ebx+0x4e]
  419c2b:	call   DWORD PTR [eax-0x4262eb0f]
  419c31:	dec    edi
  419c32:	add    eax,0xe51faa1a
  419c37:	mov    bh,0x31
  419c39:	xchg   ebx,eax
  419c3a:	in     al,0xe6
  419c3c:	in     eax,dx
  419c3d:	lock mov bh,0xbf
  419c40:	push   esp
  419c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c42:	jns    0x419c68
  419c44:	rol    BYTE PTR ds:0x3fa572f3,1
  419c4a:	mov    ebp,0xfbffcb16
  419c4f:	dec    edx
  419c50:	je     0x419c7f
  419c52:	js     0x419bf6
  419c54:	cmp    edi,DWORD PTR [edx-0x5a]
  419c57:	out    0x4,eax
  419c59:	(bad)  
  419c5a:	mov    esi,0x734f7043
  419c5f:	xor    DWORD PTR [ebx],eax
  419c61:	dec    edi
  419c62:	sub    eax,0xcb558ca1
  419c67:	add    eax,0x931e5c32
  419c6c:	int    0xa7
  419c6e:	mov    edx,0x33242f7
  419c73:	push   esp
  419c74:	xchg   DWORD PTR [edi-0x520eb53d],ebp
  419c7a:	pop    ss
  419c7b:	adc    DWORD PTR [esi-0x2e],ecx
  419c7e:	dec    ebp
  419c7f:	push   eax
  419c80:	ins    DWORD PTR es:[edi],dx
  419c81:	and    BYTE PTR [ebx+0x2bad1cc8],dl
  419c87:	dec    esi
  419c88:	inc    ebx
  419c89:	mov    bl,0xe2
  419c8b:	popf   
  419c8c:	adc    bl,BYTE PTR [edi-0x44]
  419c8f:	mov    ds:0x13d2ca87,eax
  419c94:	mov    esi,DWORD PTR [ebx]
  419c96:	mov    al,0x50
  419c98:	pop    esi
  419c99:	pop    edi
  419c9a:	shl    BYTE PTR [edi+eax*8],0xcc
  419c9e:	aad    0x41
  419ca0:	in     al,dx
  419ca1:	std    
  419ca2:	repnz sbb BYTE PTR [eax],0x26
  419ca6:	push   ecx
  419ca7:	pop    ss
  419ca8:	jae    0x419c7a
  419caa:	ds mov edi,0x440e046d
  419cb0:	bound  edi,QWORD PTR [edx-0x4f]
  419cb3:	sub    al,0x8f
  419cb5:	pop    esi
  419cb6:	std    
  419cb7:	retf   0xcfc1
  419cba:	push   cs
  419cbb:	cmp    BYTE PTR [ebx+0x15d04c4d],al
  419cc1:	xchg   esi,eax
  419cc2:	shl    ch,1
  419cc4:	mov    bh,0xf8
  419cc6:	lahf   
  419cc7:	push   edx
  419cc8:	pop    ecx
  419cc9:	mov    bl,0xe1
  419ccb:	outs   dx,DWORD PTR ds:[esi]
  419ccc:	std    
  419ccd:	stos   BYTE PTR es:[edi],al
  419cce:	hlt    
  419ccf:	adc    esp,DWORD PTR [edi+0x66]
  419cd2:	sbb    esp,DWORD PTR [eax-0x68c649fe]
  419cd8:	mov    edx,0xebc510da
  419cdd:	leave  
  419cde:	int    0xb6
  419ce0:	xlat   BYTE PTR ds:[ebx]
  419ce1:	jo     0x419d3a
  419ce3:	repnz sub eax,DWORD PTR gs:[ecx+ebp*4]
  419ce8:	out    dx,eax
  419ce9:	sahf   
  419cea:	pop    esp
  419ceb:	dec    ebp
  419cec:	add    edx,edi
  419cee:	sbb    DWORD PTR [esi+ebx*4+0x71a7f455],eax
  419cf5:	je     0x419cd4
  419cf7:	lods   eax,DWORD PTR ds:[esi]
  419cf8:	add    DWORD PTR ds:0x715fd2b4,edi
  419cfe:	ds xchg edx,eax
  419d00:	(bad)  
  419d02:	inc    DWORD PTR [ebp+edi*1+0x71]
  419d06:	mov    ebp,0x4c5b7aa8
  419d0b:	in     eax,dx
  419d0c:	xor    eax,0xccdb44eb
  419d11:	out    0x5,al
  419d13:	bound  eax,QWORD PTR [ecx]
  419d15:	call   0xbb61f86f
  419d1a:	shl    DWORD PTR [ecx+0x69],cl
  419d1d:	in     al,dx
  419d1e:	sahf   
  419d1f:	int3   
  419d20:	adc    al,0x3b
  419d22:	(bad)  
  419d23:	push   0x42ba4c99
  419d28:	xor    BYTE PTR [edi+eax*4],dl
  419d2b:	dec    esp
  419d2c:	lds    edi,FWORD PTR [edx]
  419d2e:	test   BYTE PTR [edx+ebx*1-0x64],bh
  419d32:	sbb    al,0x77
  419d34:	inc    ebx
  419d35:	pop    ebx
  419d36:	jb     0x419d40
  419d38:	push   0xaa3eaf8b
  419d3d:	dec    esi
  419d3e:	add    edi,DWORD PTR [ebx+eax*8]
  419d41:	sbb    al,0xf2
  419d43:	jne    0x419d2a
  419d45:	jle    0x419d17
  419d47:	inc    esi
  419d48:	int    0xb5
  419d4a:	stos   BYTE PTR es:[edi],al
  419d4b:	(bad)  
  419d4c:	sub    DWORD PTR ss:[ebx+0x78],ecx
  419d50:	mov    esp,0xd2daf492
  419d55:	jge    0x419d5e
  419d57:	lea    edx,[edx+esi*4]
  419d5a:	ins    BYTE PTR es:[edi],dx
  419d5b:	sub    esp,DWORD PTR [ebp+0x3]
  419d5e:	pop    eax
  419d5f:	sbb    edi,DWORD PTR [edx]
  419d61:	imul   eax,DWORD PTR [ebp+0x14],0xde2e5d4
  419d68:	xor    eax,0x46c8f8ef
  419d6d:	sub    ebp,DWORD PTR [ecx]
  419d6f:	inc    ecx
  419d70:	outs   dx,DWORD PTR ds:[esi]
  419d71:	adc    ah,BYTE PTR [ecx+0x40dca107]
  419d77:	rol    BYTE PTR [ecx+ebp*2],cl
  419d7a:	fisub  DWORD PTR [eax+ecx*2]
  419d7d:	mov    ebp,0x6171c5af
  419d82:	mov    dh,0x20
  419d84:	sti    
  419d85:	cld    
  419d86:	cs jbe 0x419d21
  419d89:	pop    eax
  419d8a:	outs   dx,BYTE PTR ds:[esi]
  419d8b:	mov    cl,ah
  419d8d:	add    DWORD PTR [ebx-0x30],ecx
  419d90:	add    BYTE PTR [edi+0x42360f69],ch
  419d96:	mov    edi,DWORD PTR [eax+0x2e]
  419d99:	arpl   WORD PTR [ebx],si
  419d9b:	cmc    
  419d9c:	adc    bh,BYTE PTR [ebp+0x3e]
  419d9f:	leave  
  419da0:	mov    cl,0xa9
  419da2:	int    0x9
  419da4:	enter  0x6c07,0xbd
  419da8:	sbb    al,0x53
  419daa:	sub    bl,bh
  419dac:	in     eax,dx
  419dad:	mov    eax,ds:0xaf122d30
  419db2:	jo     0x419d98
  419db4:	mov    eax,ds:0x37f0a505
  419db9:	sbb    dl,dh
  419dbb:	xchg   edi,eax
  419dbc:	fisttp DWORD PTR [ecx-0x5c]
  419dbf:	clc    
  419dc0:	xor    BYTE PTR [ebx+0x241dc690],ch
  419dc6:	dec    bp
  419dc8:	fist   WORD PTR [edx-0x58bcf7b4]
  419dce:	out    dx,al
  419dcf:	pop    edx
  419dd0:	retf   
  419dd1:	dec    ecx
  419dd2:	pop    edx
  419dd3:	std    
  419dd4:	cdq    
  419dd5:	mov    edi,0x8a444ddd
  419dda:	sub    ah,BYTE PTR [eax-0x56]
  419ddd:	pop    ss
  419dde:	nop
  419ddf:	xor    cl,bh
  419de1:	shl    cl,1
  419de3:	pusha  
  419de4:	xchg   BYTE PTR [ebp-0x10],ch
  419de7:	adc    DWORD PTR [ebp-0x41cb7922],edi
  419ded:	mov    eax,ds:0x52cb9189
  419df2:	mov    ah,0xe8
  419df4:	mov    esi,0xd9e66ff9
  419df9:	fdiv   DWORD PTR [eax-0x78]
  419dfc:	jns    0x419dd6
  419dfe:	jnp    0x419e30
  419e00:	jne    0x419dc6
  419e02:	sbb    DWORD PTR [ebp+0x199dcf71],esi
  419e08:	ret    0xd603
  419e0b:	lds    esi,FWORD PTR ds:0xa3913354
  419e11:	sbb    al,0x18
  419e13:	xchg   DWORD PTR [esi],esp
  419e15:	in     eax,dx
  419e16:	or     dh,BYTE PTR [esi]
  419e18:	push   esp
  419e19:	stos   DWORD PTR es:[edi],eax
  419e1a:	inc    edi
  419e1b:	in     eax,0x8c
  419e1d:	xor    cl,ah
  419e1f:	cmp    eax,DWORD PTR [eax+ecx*8]
  419e22:	pop    ebx
  419e23:	shrd   DWORD PTR [eax-0x5e502ef9],esi,cl
  419e2a:	loop   0x419e7b
  419e2c:	adc    BYTE PTR [ebx-0x1fa478f1],dh
  419e32:	jmp    0x419e3a
  419e34:	nop
  419e35:	in     eax,dx
  419e36:	pop    esi
  419e37:	fistp  DWORD PTR [ecx-0x4664097d]
  419e3d:	lahf   
  419e3e:	test   BYTE PTR [ecx],0x6c
  419e41:	stos   BYTE PTR es:[di],al
  419e43:	fist   WORD PTR [esi]
  419e45:	jae    0x419de5
  419e47:	dec    ebp
  419e48:	and    ah,bl
  419e4a:	xchg   esi,eax
  419e4b:	pop    ds
  419e4c:	sub    ah,bh
  419e4e:	add    DWORD PTR [ecx+0x74ab1e7c],0xda1c51b9
  419e58:	cld    
  419e59:	mov    esi,0xfc7f7f15
  419e5e:	xor    al,0xc5
  419e61:	lds    edx,FWORD PTR [edx-0x19]
  419e64:	dec    esi
  419e65:	xor    DWORD PTR [esi+edx*1+0x0],edx
  419e69:	popf   
  419e6a:	out    0x13,al
  419e6c:	xor    al,0xf3
  419e6e:	jge    0x419e9c
  419e70:	(bad)  
  419e71:	jmp    0x419e84
  419e73:	or     eax,0x4250961
  419e78:	mov    eax,DWORD PTR [edx-0x6d]
  419e7b:	push   DWORD PTR [edi-0x1b6f44e3]
  419e81:	aam    0x54
  419e83:	into   
  419e84:	test   eax,0x6b94c434
  419e89:	fadd   DWORD PTR [edx-0x3b]
  419e8c:	cmp    esp,eax
  419e8e:	out    dx,eax
  419e8f:	pop    ebx
  419e90:	mov    edi,0xc6b3f592
  419e95:	mov    BYTE PTR [edx],bl
  419e97:	div    BYTE PTR [ebx-0x781fe094]
  419e9d:	xchg   BYTE PTR [edx+0x161c21d3],bh
  419ea3:	retf   0x711c
  419ea6:	(bad)  
  419ea7:	imul   ebp,esi,0xffffffc6
  419eaa:	push   ecx
  419eab:	out    0x3e,al
  419ead:	cmp    ch,dh
  419eaf:	loop   0x419e78
  419eb1:	dec    ebp
  419eb2:	aam    0x88
  419eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eb5:	dec    esp
  419eb6:	push   0xffffffa8
  419eb8:	lods   al,BYTE PTR ds:[esi]
  419eb9:	das    
  419eba:	mov    BYTE PTR [edi+edi*1-0x49],dh
  419ebe:	sbb    DWORD PTR [ecx],ebx
  419ec0:	repnz pop ss
  419ec2:	pop    esi
  419ec3:	pop    ecx
  419ec4:	adc    al,0x43
  419ec6:	daa    
  419ec7:	jle    0x419ec2
  419ec9:	sbb    DWORD PTR [ebx+0x7589a64b],0xe4b3bae2
  419ed3:	adc    bh,BYTE PTR ds:0x53f9a6d2
  419ed9:	inc    ecx
  419eda:	or     BYTE PTR [eax],ch
  419edc:	shl    DWORD PTR [eax],cl
  419ede:	mov    al,0x35
  419ee0:	mov    bh,BYTE PTR [edx]
  419ee2:	jbe    0x419f48
  419ee4:	sbb    BYTE PTR [eax-0x66d9cf1d],ah
  419eea:	mov    ah,0x39
  419eec:	adc    DWORD PTR [ebx+0x19aa5646],0xffffffbb
  419ef3:	or     al,0x26
  419ef5:	in     al,0x7c
  419ef7:	mov    DWORD PTR [esi-0x17],edi
  419efa:	adc    eax,0x869b54dd
  419eff:	dec    eax
  419f00:	cs xchg ecx,eax
  419f02:	or     ch,BYTE PTR [eax+0x1b]
  419f05:	mov    ebx,0xf8102b69
  419f0a:	xchg   al,bh
  419f0c:	mov    al,ds:0x2e5aef07
  419f11:	mov    cl,0xf9
  419f13:	mov    ds:0xee7ca44e,al
  419f18:	rol    BYTE PTR ds:0x274ace9c,cl
  419f1e:	add    esi,eax
  419f20:	xchg   esi,eax
  419f21:	mov    ds:0xe5503a33,eax
  419f26:	cs sti 
  419f28:	dec    edi
  419f29:	push   ecx
  419f2a:	test   DWORD PTR [edi-0x423e5614],edx
  419f30:	loope  0x419ecd
  419f32:	xchg   ebx,eax
  419f33:	stos   BYTE PTR es:[edi],al
  419f34:	sbb    eax,0x8bd3f5a8
  419f39:	ret    0x4348
  419f3c:	inc    esp
  419f3d:	pop    es
  419f3e:	pop    es
  419f3f:	mov    bl,0x23
  419f41:	pusha  
  419f42:	xor    BYTE PTR [edx+0x4f173036],dh
  419f48:	or     DWORD PTR [esi+0x56c24d31],edx
  419f4e:	push   ecx
  419f4f:	sub    BYTE PTR [ebp-0x108d43a8],al
  419f55:	dec    esp
  419f56:	push   ss
  419f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f58:	mov    BYTE PTR [edx],dl
  419f5a:	add    edi,DWORD PTR [ebp+0x25]
  419f5d:	jp     0x419ef5
  419f5f:	gs xchg ecx,eax
  419f61:	out    0x8e,eax
  419f63:	dec    edx
  419f64:	in     eax,dx
  419f65:	cli    
  419f66:	push   0x16fd501e
  419f6b:	mov    ebp,DWORD PTR [eax]
  419f6d:	ss jns 0x419ef1
  419f70:	jbe    0x419efb
  419f72:	sbb    cl,bh
  419f74:	push   ebx
  419f75:	into   
  419f76:	sti    
  419f77:	shl    BYTE PTR [esp+ecx*1],0xe5
  419f7b:	sbb    DWORD PTR [eax+0x25],edx
  419f7e:	ret    0x5e62
  419f81:	pusha  
  419f82:	sahf   
  419f83:	jmp    0xc4ef65cf
  419f88:	jge    0x419f84
  419f8a:	dec    BYTE PTR [edi-0x54]
  419f8d:	mov    esp,0xfbb19d46
  419f92:	iret   
  419f93:	leave  
  419f94:	je     0x419f72
  419f96:	mov    dl,0x6
  419f98:	add    al,0xf0
  419f9a:	loope  0x41a003
  419f9c:	in     al,dx
  419f9d:	jne    0x419fba
  419f9f:	mov    BYTE PTR [ecx+0x40d79221],cl
  419fa5:	iret   
  419fa6:	or     eax,0xc9502319
  419fab:	frstor [ecx-0x20]
  419fae:	xchg   ebp,eax
  419faf:	push   eax
  419fb0:	cli    
  419fb1:	ror    DWORD PTR [ecx+0xf],1
  419fb4:	dec    ebx
  419fb5:	lock or eax,0x44cf1879
  419fbb:	mov    eax,ebx
  419fbd:	sar    ecx,cl
  419fbf:	mov    eax,0x3aea5378
  419fc4:	mov    bl,0x3d
  419fc6:	mov    DWORD PTR [ecx],edi
  419fc8:	adc    dh,cl
  419fca:	stos   BYTE PTR es:[edi],al
  419fcb:	mov    ah,0xf4
  419fcd:	and    eax,0xb04696cf
  419fd2:	mov    esi,0xf0f402ab
  419fd7:	repnz lods eax,DWORD PTR ds:[esi]
  419fd9:	enter  0x756a,0xcc
  419fdd:	mov    ebp,0x3d907958
  419fe2:	jno    0x419f66
  419fe4:	adc    eax,0x13a1168d
  419fe9:	outs   dx,DWORD PTR ds:[esi]
  419fea:	shl    DWORD PTR [eax+0x50],1
  419fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fee:	dec    esi
  419fef:	mov    DWORD PTR ds:0x5c5f98d5,ecx
  419ff5:	cmp    edx,DWORD PTR [esi+0x3d]
  419ff8:	jb     0x419ff9
  419ffa:	outs   dx,DWORD PTR ds:[esi]
  419ffb:	xlat   BYTE PTR ds:[ebx]
  419ffc:	jno    0x419ff3
  419ffe:	pushf  
  419fff:	cmp    eax,ebp
  41a001:	daa    
  41a002:	retf   0x3bf5
  41a005:	push   esp
  41a006:	mov    esp,0x562817c3
  41a00b:	iret   
  41a00c:	imul   ebp,DWORD PTR [edx-0x21],0x61
  41a010:	or     dl,BYTE PTR [edx]
  41a012:	xchg   ecx,eax
  41a013:	push   edx
  41a014:	shr    bh,0x8f
  41a017:	mov    dl,bl
  41a019:	cmp    DWORD PTR [edx+0x164a3313],esp
  41a01f:	clc    
  41a020:	jecxz  0x41a04d
  41a022:	jecxz  0x41a013
  41a024:	arpl   WORD PTR [ebx],si
  41a026:	ss push esi
  41a028:	jl     0x419fb7
  41a02a:	mov    ?,ebx
  41a02c:	jnp    0x41a051
  41a02e:	mov    esp,0x54d43c6c
  41a033:	(bad)  
  41a034:	std    
  41a035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a036:	pop    ebx
  41a037:	sub    eax,0x345d33e9
  41a03c:	dec    ecx
  41a03d:	shl    esp,1
  41a03f:	push   0xa6375a0b
  41a044:	pushf  
  41a045:	xchg   DWORD PTR [esp+ecx*1-0x59],ebx
  41a049:	pop    ss
  41a04a:	fldcw  WORD PTR [eax-0x24]
  41a04d:	xchg   esp,eax
  41a04e:	push   edx
  41a04f:	xor    BYTE PTR [ebx+0x5b],ah
  41a052:	(bad)  
  41a053:	and    al,0xd4
  41a055:	push   esp
  41a056:	xchg   ebp,eax
  41a057:	js     0x41a06e
  41a059:	xor    DWORD PTR [ebx-0x7a],edx
  41a05c:	dec    eax
  41a05d:	and    edx,edx
  41a05f:	test   eax,0xe8c20223
  41a064:	xor    al,BYTE PTR [ebp+ecx*1+0xe1a89f1]
  41a06b:	sahf   
  41a06c:	xor    al,0x89
  41a06e:	ss leave 
  41a070:	push   ds
  41a071:	inc    ebp
  41a072:	mov    ebx,0x9d4e7eea
  41a077:	xor    ebx,DWORD PTR [ebx]
  41a079:	cmp    al,0x2b
  41a07b:	aas    
  41a07c:	mov    al,ds:0xc1434378
  41a081:	sub    DWORD PTR [ebx+0x72],ebp
  41a084:	ret    
  41a085:	lea    ebp,[eax]
  41a087:	les    esp,FWORD PTR [ecx+edx*4-0x29]
  41a08b:	rcl    ch,cl
  41a08d:	mov    dh,0xa1
  41a08f:	femms  
  41a091:	leave  
  41a092:	call   0x7db9556e
  41a097:	jo     0x41a0e3
  41a099:	cs inc esp
  41a09b:	arpl   WORD PTR [esi-0x3d],ax
  41a09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a09f:	jno    0x41a0f1
  41a0a1:	and    bl,bl
  41a0a3:	fsub   QWORD PTR [ebp-0x1e]
  41a0a6:	cmp    BYTE PTR [edi],ch
  41a0a8:	test   bh,al
  41a0aa:	add    eax,0x8ba0bc2c
  41a0af:	cld    
  41a0b0:	jge    0x41a0c3
  41a0b2:	outs   dx,BYTE PTR ds:[esi]
  41a0b3:	mov    ah,0x5a
  41a0b5:	mov    ah,bl
  41a0b7:	bound  esp,QWORD PTR [ecx+0x43d2a5d2]
  41a0bd:	in     eax,0xca
  41a0bf:	sbb    edx,edx
  41a0c1:	psrlq  mm2,QWORD PTR [edx+ecx*8]
  41a0c5:	jmp    0x41a082
  41a0c7:	leave  
  41a0c8:	je     0x41a114
  41a0ca:	jnp    0x41a099
  41a0cc:	jecxz  0x41a09e
  41a0ce:	pop    es
  41a0cf:	xchg   edi,edx
  41a0d1:	ds popa 
  41a0d3:	mov    ah,BYTE PTR [ecx+0x11]
  41a0d6:	ss nop
  41a0d8:	aaa    
  41a0d9:	clc    
  41a0da:	sub    DWORD PTR [ebx+0x60],eax
  41a0dd:	mov    dl,0xcc
  41a0df:	ficom  WORD PTR [esi]
  41a0e1:	dec    ecx
  41a0e2:	in     al,0x21
  41a0e4:	cmc    
  41a0e5:	jmp    0xfa98ad9e
  41a0ea:	ss bound edx,QWORD PTR gs:[ecx-0x1e]
  41a0ef:	cmp    eax,0xabc29dab
  41a0f4:	lds    esi,FWORD PTR [ebx]
  41a0f6:	aas    
  41a0f7:	loopne 0x41a096
  41a0f9:	popa   
  41a0fa:	psllw  mm5,QWORD PTR [ecx]
  41a0fd:	leave  
  41a0fe:	or     al,0xb5
  41a100:	inc    ebp
  41a101:	nop
  41a102:	mov    esp,0x23e56a0c
  41a107:	sbb    al,0x4d
  41a109:	add    eax,0x6b685716
  41a10e:	or     BYTE PTR [edx-0x2ed71224],bh
  41a114:	leave  
  41a115:	pop    ecx
  41a116:	xor    DWORD PTR [edx],ebp
  41a118:	push   ss
  41a119:	scas   eax,DWORD PTR es:[edi]
  41a11a:	gs int3 
  41a11c:	jne    0x41a144
  41a11e:	and    eax,0xeea8690a
  41a123:	stc    
  41a124:	lods   eax,DWORD PTR ds:[esi]
  41a125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a126:	sub    cl,BYTE PTR [esi+0x55]
  41a129:	cli    
  41a12a:	and    al,dl
  41a12c:	ss stos DWORD PTR es:[edi],eax
  41a12e:	sub    ebp,DWORD PTR [edx-0x155adca7]
  41a134:	cwde   
  41a135:	xor    eax,DWORD PTR [eax-0x324d5f4b]
  41a13b:	push   ss
  41a13c:	mov    bl,0x75
  41a13e:	jg     0x41a175
  41a140:	test   al,0x72
  41a142:	scas   eax,DWORD PTR es:[edi]
  41a143:	mov    ch,0x55
  41a145:	pop    ecx
  41a146:	add    eax,0xd6b558f5
  41a14b:	ret    0xf820
  41a14e:	xchg   ebp,eax
  41a14f:	or     eax,DWORD PTR [edi+0x58]
  41a152:	pop    ss
  41a153:	call   0xa8f1b60e
  41a158:	sbb    ch,ah
  41a15a:	(bad)  
  41a15b:	jbe    0x41a197
  41a15d:	imul   ecx,DWORD PTR [esi-0x49],0xffffffc3
  41a161:	stos   DWORD PTR es:[edi],eax
  41a162:	fisub  DWORD PTR [edi]
  41a164:	push   esi
  41a165:	ficom  DWORD PTR [ebx]
  41a167:	sar    ch,1
  41a169:	jmp    0xfebb13eb
  41a16e:	pop    ebp
  41a16f:	sti    
  41a170:	adc    al,0x86
  41a172:	mov    ebx,0x43d72283
  41a177:	loop   0x41a1f0
  41a179:	rcl    BYTE PTR [edx+0x249c901],1
  41a17f:	retf   
  41a180:	xchg   ch,bl
  41a182:	inc    eax
  41a183:	mov    DWORD PTR ds:0x2acb54e6,ebx
  41a189:	call   0x9012:0x25164d38
  41a190:	int3   
  41a191:	jb     0x41a1d0
  41a193:	inc    edx
  41a194:	fwait
  41a195:	out    0x39,eax
  41a197:	aam    0xff
  41a199:	sub    al,0xb1
  41a19b:	inc    ecx
  41a19c:	mov    edi,0xe72fb2af
  41a1a1:	outs   dx,BYTE PTR ds:[esi]
  41a1a2:	iret   
  41a1a3:	add    al,0x7f
  41a1a5:	inc    esp
  41a1a6:	aaa    
  41a1a7:	arpl   WORD PTR [edx],sp
  41a1a9:	ds jae 0x41a1bc
  41a1ac:	add    BYTE PTR [edi],0x6
  41a1af:	into   
  41a1b0:	jns    0x41a20c
  41a1b2:	mov    esi,0xc9774d41
  41a1b7:	popa   
  41a1b8:	dec    edx
  41a1b9:	sub    DWORD PTR [esi],esi
  41a1bb:	ret    
  41a1bc:	pushf  
  41a1bd:	cli    
  41a1be:	fstp   TBYTE PTR [ebx+0x10]
  41a1c1:	or     edi,edx
  41a1c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c4:	ss and ch,cl
  41a1c7:	inc    eax
  41a1c8:	xchg   ecx,edi
  41a1ca:	mov    DWORD PTR [ebp-0xd],edx
  41a1cd:	ror    bl,0x29
  41a1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1d1:	push   esi
  41a1d2:	or     ecx,DWORD PTR [esi]
  41a1d4:	in     eax,dx
  41a1d5:	or     esi,ecx
  41a1d7:	jg     0x41a218
  41a1d9:	cmp    BYTE PTR [ebp+0x26],bl
  41a1dc:	jno    0x41a1cc
  41a1de:	cs inc eax
  41a1e0:	cwde   
  41a1e1:	fs mov esi,0x42659eb8
  41a1e7:	mov    ebx,esp
  41a1e9:	or     ah,BYTE PTR [edx+ebx*1-0x798b4809]
  41a1f0:	test   eax,0x758e5b64
  41a1f5:	inc    eax
  41a1f6:	aad    0x29
  41a1f8:	or     DWORD PTR [ecx+0x6f],ebx
  41a1fb:	inc    esi
  41a1fc:	and    al,0xce
  41a1fe:	inc    esp
  41a1ff:	or     eax,0x1529c563
  41a205:	nop
  41a206:	outs   dx,DWORD PTR ss:[esi]
  41a208:	inc    esi
  41a209:	repz test DWORD PTR [ecx],edx
  41a20c:	test   al,0xd
  41a20e:	movlps xmm6,QWORD PTR [edi+0x36]
  41a212:	cli    
  41a213:	inc    eax
  41a214:	je     0x41a1a7
  41a216:	in     al,dx
  41a217:	xchg   ebp,eax
  41a218:	jmp    0xb9e0:0x30eba9b2
  41a21f:	or     dh,bh
  41a221:	in     al,0x37
  41a223:	mov    eax,0x2093e5b0
  41a228:	cwde   
  41a229:	and    BYTE PTR [ecx],ah
  41a22b:	(bad)  
  41a22c:	xor    BYTE PTR [edi],dl
  41a22e:	popa   
  41a22f:	or     ebp,DWORD PTR [eax]
  41a231:	cmp    esp,DWORD PTR [esi-0x46de9a7e]
  41a237:	out    0x4c,eax
  41a239:	(bad)  
  41a23a:	xchg   ebp,eax
  41a23b:	push   es
  41a23c:	fcmovbe st,st(6)
  41a23e:	cwde   
  41a23f:	(bad)  
  41a240:	fst    DWORD PTR [edi+0x19]
  41a243:	xchg   ebp,eax
  41a244:	clc    
  41a245:	div    BYTE PTR [ecx-0x45]
  41a248:	xor    eax,0x8c0f47c5
  41a24d:	cdq    
  41a24e:	inc    ah
  41a250:	mov    ch,0xa5
  41a252:	jp     0x41a219
  41a254:	out    dx,eax
  41a255:	lahf   
  41a256:	shl    DWORD PTR [eax+0x6f],1
  41a259:	mov    ebx,0x6a954b72
  41a25e:	xor    dl,0x8c
  41a261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a262:	in     eax,0x6d
  41a264:	cmp    al,0xb4
  41a266:	popf   
  41a267:	out    dx,eax
  41a268:	(bad)  
  41a269:	mov    db3,ebx
  41a26c:	mov    eax,0x9afbfb3b
  41a271:	jmp    0x6c6:0xd91e7cfc
  41a278:	mov    edi,0x37db72e3
  41a27d:	and    al,0x2c
  41a27f:	addr16 out dx,al
  41a281:	addr16 clc 
  41a283:	mov    al,0x30
  41a285:	fcomp  st(2)
  41a287:	idiv   DWORD PTR [ebp+0x7]
  41a28a:	inc    edx
  41a28b:	jmp    0x41a218
  41a28d:	cmp    al,0xc3
  41a28f:	pop    ss
  41a290:	out    0x72,al
  41a292:	ret    
  41a293:	xor    dh,al
  41a295:	aas    
  41a296:	bnd ret 0x23e7
  41a29a:	pop    ss
  41a29b:	repnz fcmove st,st(6)
  41a29e:	adc    edx,DWORD PTR [esi+ecx*4-0x2f]
  41a2a2:	imul   BYTE PTR [ebx-0x6974f1a1]
  41a2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a9:	test   BYTE PTR ds:0x816f585c,cl
  41a2af:	dec    edi
  41a2b0:	cli    
  41a2b1:	call   0xa34c:0x87383b9a
  41a2b8:	mov    ebx,0xa4cb5154
  41a2bd:	add    ch,BYTE PTR [ebx]
  41a2bf:	sbb    BYTE PTR [edx-0x41],bh
  41a2c2:	xchg   ecx,eax
  41a2c3:	pusha  
  41a2c4:	xor    ch,al
  41a2c6:	and    dh,BYTE PTR [edx]
  41a2c8:	pop    esp
  41a2c9:	mov    ebp,0x9a1e2f5f
  41a2ce:	jmp    0xfe7d17fc
  41a2d3:	outs   dx,DWORD PTR ds:[esi]
  41a2d4:	test   al,0x88
  41a2d6:	jl     0x41a2c4
  41a2d8:	mov    esi,0x2d9e338e
  41a2dd:	jmp    0x9f100574
  41a2e2:	daa    
  41a2e3:	jnp    0x41a2e8
  41a2e5:	nop
  41a2e6:	ss push esi
  41a2e8:	jno    0x41a28e
  41a2ea:	cmp    al,0x69
  41a2ec:	jmp    0x41a271
  41a2ee:	mul    BYTE PTR [ebp-0x50]
  41a2f1:	shl    DWORD PTR [esi+ebx*1],0x7c
  41a2f5:	jne    0x41a290
  41a2f7:	dec    edx
  41a2f8:	lods   eax,DWORD PTR ds:[esi]
  41a2f9:	and    BYTE PTR [eax+ebx*4+0x10],0xeb
  41a2fe:	xchg   DWORD PTR [edi+ebp*2],ecx
  41a301:	xchg   edi,eax
  41a302:	pop    ss
  41a303:	sbb    al,0x2c
  41a305:	mov    ch,0xb3
  41a307:	push   es
  41a308:	mov    esi,0x27bf8602
  41a30d:	sub    DWORD PTR [esi-0x56],eax
  41a310:	jno    0x41a2d4
  41a312:	fnsave [ebx]
  41a314:	or     DWORD PTR [ecx],esi
  41a316:	ror    ah,cl
  41a318:	neg    ebp
  41a31a:	add    BYTE PTR [eax],cl
  41a31c:	imul   edx,DWORD PTR [edi-0x5f024c07],0xffffffbc
  41a323:	shr    DWORD PTR [edi-0x2c01b966],1
  41a329:	mov    ch,dh
  41a32b:	push   esp
  41a32c:	sub    DWORD PTR [ebx],ebp
  41a32e:	jbe    0x41a363
  41a330:	fistp  WORD PTR [edx+0x61]
  41a333:	stos   DWORD PTR es:[edi],eax
  41a334:	inc    ebp
  41a335:	and    BYTE PTR [eax+0x5f0137c6],0x56
  41a33c:	jl     0x41a354
  41a33e:	xchg   ecx,eax
  41a33f:	shl    BYTE PTR ds:0x10b9f2a4,cl
  41a345:	cmc    
  41a346:	mov    esi,0xdc023226
  41a34b:	dec    edx
  41a34c:	out    0x4a,eax
  41a34e:	dec    esi
  41a34f:	xchg   DWORD PTR [esi+0x7a7dbbda],esi
  41a355:	icebp  
  41a356:	aas    
  41a357:	xchg   DWORD PTR [edx-0x457fae69],esi
  41a35d:	inc    edi
  41a35e:	daa    
  41a35f:	in     eax,0x39
  41a361:	fisub  WORD PTR ds:[eax-0x755723e8]
  41a368:	in     al,dx
  41a369:	dec    edx
  41a36a:	and    esi,eax
  41a36c:	and    eax,DWORD PTR [esi+0x78c1cdc2]
  41a372:	dec    ecx
  41a373:	push   eax
  41a374:	pop    esi
  41a375:	sub    bl,BYTE PTR [ebp+0x6ff2562f]
  41a37b:	jae    0x41a381
  41a37d:	dec    edi
  41a37e:	or     DWORD PTR ds:0x5dbb128e,0x3f
  41a385:	imul   eax,ebp,0xc490fceb
  41a38b:	push   esp
  41a38c:	out    0x74,al
  41a38e:	retf   
  41a38f:	pop    ecx
  41a390:	sbb    DWORD PTR [esi+ecx*8],0xffffffd1
  41a394:	scas   eax,DWORD PTR es:[edi]
  41a395:	mov    eax,0x3b27944b
  41a39a:	inc    ecx
  41a39b:	xchg   ebp,eax
  41a39c:	push   edi
  41a39d:	rcr    BYTE PTR [ecx+edx*1],1
  41a3a0:	cld    
  41a3a1:	and    ah,cl
  41a3a3:	pop    edx
  41a3a4:	push   eax
  41a3a5:	sub    eax,0x1e07de6a
  41a3aa:	mov    esi,0xe764c59a
  41a3af:	mov    DWORD PTR [ecx],eax
  41a3b1:	rcr    ch,1
  41a3b3:	ret    
  41a3b4:	aas    
  41a3b5:	jge    0x41a404
  41a3b7:	rol    dh,0x32
  41a3ba:	xchg   ebp,eax
  41a3bb:	retf   0x87a5
  41a3be:	cmp    BYTE PTR [edx+0x3c],al
  41a3c1:	or     al,0x5f
  41a3c3:	js     0x41a388
  41a3c5:	jl     0x41a359
  41a3c7:	loope  0x41a3d7
  41a3c9:	adc    edi,ebp
  41a3cb:	fs jbe 0x41a3a9
  41a3ce:	mov    edx,ebp
  41a3d0:	sbb    dl,BYTE PTR [eax+0x24]
  41a3d3:	stos   DWORD PTR es:[edi],eax
  41a3d4:	jg     0x41a384
  41a3d6:	xor    eax,0xdfb64670
  41a3db:	push   esp
  41a3dc:	inc    eax
  41a3dd:	retf   0x38e4
  41a3e0:	imul   esp,ecx,0x6d
  41a3e3:	fidivr WORD PTR [esi+esi*1-0x4d]
  41a3e7:	jecxz  0x41a443
  41a3e9:	add    eax,0x4e4df721
  41a3ee:	lock xchg DWORD PTR [eax],ecx
  41a3f1:	inc    edi
  41a3f2:	xor    al,0x5
  41a3f4:	hlt    
  41a3f5:	lahf   
  41a3f6:	inc    edi
  41a3f7:	clc    
  41a3f8:	das    
  41a3f9:	xor    eax,0x753b96ab
  41a3fe:	cmp    ebp,ecx
  41a400:	push   es
  41a401:	dec    edx
  41a402:	in     al,0xc9
  41a404:	jae    0x41a451
  41a406:	in     eax,dx
  41a407:	ja     0x41a40d
  41a409:	pop    ss
  41a40a:	lds    eax,FWORD PTR [edi]
  41a40c:	xor    DWORD PTR [eax],esi
  41a40e:	sbb    ah,BYTE PTR [eax]
  41a410:	mov    ds:0x51f92188,eax
  41a415:	hlt    
  41a416:	cmp    eax,0xd9847be5
  41a41b:	sub    cl,ah
  41a41d:	inc    ecx
  41a41e:	jg     0x41a476
  41a420:	sub    dl,dl
  41a422:	inc    ecx
  41a423:	nop
  41a424:	jl     0x41a3b7
  41a426:	in     eax,0x88
  41a428:	icebp  
  41a429:	push   es
  41a42a:	loope  0x41a3bc
  41a42c:	test   BYTE PTR [ecx+0x156965f7],0x90
  41a433:	add    bh,BYTE PTR [edi-0x1e]
  41a436:	(bad)  
  41a437:	lds    ebx,FWORD PTR [ecx+0x70]
  41a43a:	cmp    edx,DWORD PTR [edx]
  41a43c:	and    ah,BYTE PTR [ebx]
  41a43e:	and    eax,DWORD PTR [edi+0x65c3aaf9]
  41a444:	xor    DWORD PTR [eax-0x29a30692],edi
  41a44a:	call   FWORD PTR [eax+0x5f]
  41a44d:	jo     0x41a3d8
  41a44f:	push   ds
  41a450:	or     eax,0x74378ee9
  41a455:	push   0xa96be9ff
  41a45a:	xor    eax,0x25e6fd7b
  41a45f:	xchg   edi,eax
  41a460:	and    eax,0x9eb34e46
  41a465:	ds mov cl,0xfb
  41a468:	pop    ds
  41a469:	or     eax,0x367e8067
  41a46e:	clc    
  41a46f:	lea    eax,[ecx+0xe]
  41a472:	cdq    
  41a473:	ret    0x1f35
  41a476:	outs   dx,BYTE PTR ds:[esi]
  41a477:	imul   DWORD PTR [ebx+0xf9aa50b]
  41a47d:	xor    BYTE PTR [esi],0x3a
  41a480:	cmp    ebp,ebp
  41a482:	cmp    ah,BYTE PTR [ebp-0x3c]
  41a485:	sub    eax,0x3db005eb
  41a48a:	stos   DWORD PTR es:[edi],eax
  41a48b:	fimul  DWORD PTR [ebx-0x112b795c]
  41a491:	hlt    
  41a492:	adc    al,0x1c
  41a494:	scas   eax,DWORD PTR es:[edi]
  41a495:	mov    bl,0x4e
  41a497:	or     eax,0xa6142105
  41a49c:	es push ebx
  41a49e:	imul   DWORD PTR [ecx]
  41a4a0:	or     BYTE PTR [esi],dl
  41a4a2:	inc    eax
  41a4a3:	lds    ebp,FWORD PTR [esi-0x7d]
  41a4a6:	mov    gs,WORD PTR [ecx+edx*1+0x18]
  41a4aa:	add    al,0x1e
  41a4ac:	aas    
  41a4ad:	push   ecx
  41a4ae:	fdivr  QWORD PTR [ebx+0x52]
  41a4b1:	lahf   
  41a4b2:	inc    ecx
  41a4b3:	mov    bh,ah
  41a4b5:	leave  
  41a4b6:	sub    eax,0x70a91cdb
  41a4bb:	fcomp  QWORD PTR [esi-0x38]
  41a4be:	xor    al,0x25
  41a4c0:	and    eax,0x233f6da4
  41a4c5:	stos   BYTE PTR es:[edi],al
  41a4c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4c7:	sbb    BYTE PTR [ebx-0xd],dl
  41a4ca:	into   
  41a4cb:	jae    0x41a4d1
  41a4cd:	xchg   edi,eax
  41a4ce:	int3   
  41a4cf:	jg     0x41a4e1
  41a4d1:	mov    ebx,0x1baefb1c
  41a4d6:	add    BYTE PTR [eax+0x149c1373],bl
  41a4dc:	mov    BYTE PTR [ebx+0x4c9db24e],0xbf
  41a4e3:	pop    ds
  41a4e4:	mov    cs,WORD PTR [ebx]
  41a4e6:	pop    es
  41a4e7:	out    dx,eax
  41a4e8:	daa    
  41a4e9:	adc    al,0xca
  41a4eb:	lods   al,BYTE PTR ds:[esi]
  41a4ec:	fist   DWORD PTR [ebx+eiz*8-0x72]
  41a4f0:	xlat   BYTE PTR es:[ebx]
  41a4f2:	dec    esi
  41a4f3:	adc    eax,0xec9e3449
  41a4f8:	imul   edi,DWORD PTR ds:0x3fc3f285,0x4b25ef3d
  41a502:	mov    ecx,0xa11a85a6
  41a507:	sbb    dh,BYTE PTR [esi-0x284c7ac1]
  41a50d:	sub    bl,BYTE PTR [ecx+0x280992e7]
  41a513:	cmp    ebx,edx
  41a515:	(bad)  
  41a517:	fisttp QWORD PTR [eax+0x1fd139dd]
  41a51d:	sbb    DWORD PTR [bx+si+0x7926],0xb0344c2
  41a526:	fs (bad) 
  41a528:	popf   
  41a529:	enter  0x1c74,0xe1
  41a52d:	xchg   edx,eax
  41a52e:	popa   
  41a52f:	pop    esi
  41a530:	pop    edx
  41a531:	dec    esp
  41a532:	adc    al,BYTE PTR [ecx+0x6a]
  41a535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a536:	jbe    0x41a4dc
  41a538:	inc    ebp
  41a539:	xchg   DWORD PTR [ebp-0x30],edi
  41a53c:	sbb    esi,DWORD PTR [eax+0x7151ba44]
  41a542:	sahf   
  41a543:	or     al,0x56
  41a545:	add    bl,BYTE PTR [edi]
  41a547:	imul   esp,DWORD PTR cs:[edx-0x38],0xffffffea
  41a54c:	cmp    esi,DWORD PTR [ebx]
  41a54e:	inc    esp
  41a54f:	sbb    al,BYTE PTR [edi-0x1872be55]
  41a555:	pop    ss
  41a556:	test   DWORD PTR [edi-0x3eb6312],0xd6b89e8
  41a560:	pop    ecx
  41a561:	and    edi,esi
  41a563:	mov    BYTE PTR [esi-0x51dc79a3],bh
  41a569:	retf   0x1601
  41a56c:	dec    ecx
  41a56d:	dec    eax
  41a56e:	xchg   edx,eax
  41a56f:	and    ecx,DWORD PTR [edi-0x21ca210b]
  41a575:	add    BYTE PTR [ebx-0x22],0x5f
  41a579:	pusha  
  41a57a:	dec    esp
  41a57b:	sub    eax,0x931a848a
  41a580:	xor    al,0x1d
  41a582:	jnp    0x41a5ac
  41a584:	rol    BYTE PTR [edi],cl
  41a586:	add    BYTE PTR [edi-0x3dcc7b1a],ah
  41a58c:	or     BYTE PTR [eax-0x2a],dh
  41a58f:	call   0x4314:0x4bdc818a
  41a596:	das    
  41a597:	pop    edx
  41a598:	xor    BYTE PTR [ebp+edi*8+0x2d],0xc
  41a59d:	loope  0x41a563
  41a59f:	inc    ebx
  41a5a0:	leave  
  41a5a1:	ins    BYTE PTR es:[edi],dx
  41a5a2:	mov    ebp,DWORD PTR [ecx]
  41a5a4:	add    DWORD PTR [ebp-0x6d9a6382],edx
  41a5aa:	les    esp,FWORD PTR [ebp-0x41d18940]
  41a5b0:	add    al,0x4f
  41a5b2:	out    0x5a,al
  41a5b4:	ins    DWORD PTR es:[edi],dx
  41a5b5:	pushf  
  41a5b6:	jnp    0x41a5d8
  41a5b8:	jmp    0xffb8791f
  41a5bd:	and    eax,0x1a082ac4
  41a5c2:	xchg   esp,eax
  41a5c3:	push   eax
  41a5c4:	mov    BYTE PTR [eax+0x4e19a0a8],al
  41a5ca:	mov    eax,0xb57b0daf
  41a5cf:	push   cs
  41a5d0:	scas   eax,DWORD PTR es:[edi]
  41a5d1:	pop    ds
  41a5d2:	clc    
  41a5d3:	inc    esp
  41a5d4:	dec    ebx
  41a5d5:	adc    BYTE PTR [ecx],0x53
  41a5d8:	cmp    eax,0xe4d6361a
  41a5dd:	ja     0x41a582
  41a5df:	mov    DWORD PTR [edx*4-0x481b6ee1],edx
  41a5e6:	in     eax,0x21
  41a5e8:	add    eax,0xd49d314a
  41a5ed:	outs   dx,BYTE PTR ds:[esi]
  41a5ee:	push   eax
  41a5ef:	mov    dl,0x9b
  41a5f1:	dec    ecx
  41a5f2:	clc    
  41a5f3:	out    dx,al
  41a5f4:	stos   BYTE PTR es:[edi],al
  41a5f5:	scas   eax,DWORD PTR es:[edi]
  41a5f6:	xchg   BYTE PTR [edx+0x4525a499],bh
  41a5fc:	xchg   edx,eax
  41a5fd:	jmp    DWORD PTR [esi+0xa]
  41a600:	or     bl,BYTE PTR [ebp+esi*2-0x6349337a]
  41a607:	add    al,BYTE PTR [ebx+eiz*8+0x79]
  41a60b:	mov    eax,ds:0x9a1e82b3
  41a610:	popa   
  41a611:	push   0x4b1ce49f
  41a616:	jb     0x41a599
  41a618:	outs   dx,DWORD PTR ds:[esi]
  41a619:	inc    ecx
  41a61a:	loop   0x41a656
  41a61c:	lods   eax,DWORD PTR ds:[esi]
  41a61d:	scas   eax,DWORD PTR es:[edi]
  41a61e:	sbb    bl,bl
  41a620:	fs inc eax
  41a622:	pop    ebx
  41a623:	loopne 0x41a634
  41a625:	test   ch,0x6
  41a628:	outs   dx,DWORD PTR ds:[esi]
  41a629:	pusha  
  41a62a:	mov    DWORD PTR [edx],0x60c31672
  41a630:	jge    0x41a68f
  41a632:	pusha  
  41a633:	les    ebp,FWORD PTR [esi+eiz*8+0x24eca63b]
  41a63a:	sbb    al,0x2e
  41a63c:	loopne 0x41a67b
  41a63e:	sar    DWORD PTR [eax+0x35],0xb4
  41a642:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a644:	mov    ebx,0xfb1ae95d
  41a649:	sub    eax,0xb4bd0f44
  41a64e:	iret   
  41a64f:	pop    ss
  41a650:	cdq    
  41a651:	and    DWORD PTR [edi],0xffffffb4
  41a654:	or     BYTE PTR [eax+0x3514ad03],bl
  41a65a:	inc    edi
  41a65b:	out    0x53,eax
  41a65d:	das    
  41a65e:	dec    ecx
  41a65f:	adc    ebx,DWORD PTR [eax+eax*1]
  41a662:	mov    ds:0xc6adb915,al
  41a667:	or     eax,0x50b72556
  41a66c:	ins    DWORD PTR es:[edi],dx
  41a66d:	mov    eax,0x80668583
  41a672:	xchg   esi,eax
  41a674:	loopne 0x41a621
  41a676:	jns    0x41a60b
  41a678:	xlat   BYTE PTR ds:[ebx]
  41a679:	jl     0x41a6a5
  41a67b:	inc    ebp
  41a67c:	retf   0x777
  41a67f:	jnp    0x41a6c4
  41a681:	mov    al,0xec
  41a683:	sub    eax,edx
  41a685:	out    0x75,eax
  41a687:	out    0x63,eax
  41a689:	lea    ebx,[eax]
  41a68b:	mov    eax,ds:0x67ddda3e
  41a690:	cmp    al,bh
  41a692:	fsubr  st(6),st
  41a694:	xchg   esp,eax
  41a695:	nop
  41a696:	mov    ebx,0x4da210e0
  41a69b:	mov    edi,0xd7c31012
  41a6a0:	mul    BYTE PTR [edi-0x6a]
  41a6a3:	push   DWORD PTR ds:[edx+0x3f]
  41a6a7:	dec    esp
  41a6a8:	gs mov esi,0xcaeba4e6
  41a6ae:	xchg   edi,eax
  41a6af:	xchg   ebx,eax
  41a6b0:	jle    0x41a6de
  41a6b2:	cmp    BYTE PTR [ebx+0x552b020c],cl
  41a6b8:	push   0x59d6de45
  41a6bd:	mov    ebp,0x4bcd67a3
  41a6c2:	cmp    DWORD PTR [ecx-0x15],0x78
  41a6c6:	stc    
  41a6c7:	stc    
  41a6c8:	fcmovbe st,st(6)
  41a6ca:	add    ebx,eax
  41a6cc:	test   eax,0x7365e13b
  41a6d1:	imul   DWORD PTR [ecx-0x6f]
  41a6d4:	inc    DWORD PTR [ebp-0x7115d358]
  41a6da:	std    
  41a6db:	fbstp  TBYTE PTR [ebp-0x11232e07]
  41a6e1:	jg     0x41a6af
  41a6e3:	loopne 0x41a6aa
  41a6e5:	dec    ecx
  41a6e6:	pop    eax
  41a6e7:	stc    
  41a6e8:	aas    
  41a6e9:	xor    al,0xcc
  41a6eb:	cdq    
  41a6ec:	gs cmp esp,ecx
  41a6ef:	repnz cmp esi,esi
  41a6f2:	loopne 0x41a6da
  41a6f4:	dec    ebp
  41a6f5:	cmp    BYTE PTR [ebx-0x2f67831d],dl
  41a6fb:	or     eax,0x769cb76e
  41a700:	pop    ds
  41a701:	adc    ecx,DWORD PTR [ecx]
  41a703:	add    DWORD PTR [ebx+0x43124a69],esp
  41a709:	fadd   st,st(7)
  41a70b:	outs   dx,BYTE PTR ds:[esi]
  41a70c:	aaa    
  41a70d:	inc    edi
  41a70e:	outs   dx,DWORD PTR ds:[esi]
  41a70f:	dec    ecx
  41a710:	mov    DWORD PTR [esp+ebp*8-0x6825b98],edi
  41a717:	dec    eax
  41a718:	and    bl,bh
  41a71a:	xchg   ebx,eax
  41a71b:	js     0x41a6cc
  41a71d:	inc    esi
  41a71e:	and    BYTE PTR [esi+ebx*8+0x3b],bl
  41a722:	cmp    dh,BYTE PTR [ecx]
  41a724:	lds    esp,FWORD PTR [ebp+0xbd1ce0f]
  41a72a:	and    bh,ah
  41a72c:	mov    ebx,0xdbdba2c0
  41a731:	mov    ecx,0x4c8fb826
  41a736:	sar    BYTE PTR [ebp-0x5d7b3905],cl
  41a73c:	lds    ebx,FWORD PTR [esi]
  41a73e:	fwait
  41a73f:	xchg   DWORD PTR [ecx-0x3a],ebp
  41a742:	(bad)  
  41a743:	fnsave [ecx]
  41a745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a746:	(bad)  
  41a748:	or     al,0xcd
  41a74a:	out    dx,eax
  41a74b:	not    DWORD PTR [edx]
  41a74d:	add    al,ah
  41a74f:	les    ebp,FWORD PTR [ecx+0x56d681a8]
  41a755:	frstor [ebx+0x7d]
  41a758:	cdq    
  41a759:	ffreep st(7)
  41a75b:	and    al,0xdf
  41a75d:	jns    0x41a7d9
  41a75f:	test   DWORD PTR [esi-0x11],0x8440f17b
  41a766:	dec    ebp
  41a767:	daa    
  41a768:	xchg   edx,eax
  41a769:	pop    edi
  41a76a:	das    
  41a76b:	push   0xffffff84
  41a76d:	cmp    ebx,esp
  41a76f:	cld    
  41a770:	jne    0x41a776
  41a772:	fucomp st(2)
  41a774:	(bad)  
  41a775:	xchg   esp,eax
  41a776:	loope  0x41a78b
  41a778:	xor    BYTE PTR [ebp-0x69],bl
  41a77b:	inc    eax
  41a77c:	jo     0x41a7c7
  41a77e:	pop    edi
  41a77f:	jmp    0x3542814c
  41a784:	nop
  41a785:	dec    eax
  41a786:	mov    eax,0xc9cb8d3
  41a78b:	mov    edx,0x8c0303d5
  41a790:	add    al,0xdd
  41a792:	jb     0x41a732
  41a794:	xchg   DWORD PTR [eax+eiz*2-0x6a8197b5],ebp
  41a79b:	or     ebx,DWORD PTR [edi-0xbc5edf0]
  41a7a1:	pop    ds
  41a7a2:	call   0x5747814e
  41a7a7:	pop    ss
  41a7a8:	add    DWORD PTR [eax+0x62],edx
  41a7ab:	jge    0x41a7bc
  41a7ad:	test   bl,cl
  41a7af:	push   esi
  41a7b0:	sub    ecx,edx
  41a7b2:	fcom   DWORD PTR [ebp-0x5d26ad7e]
  41a7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7b9:	mov    dl,0x78
  41a7bb:	jb     0x41a7ef
  41a7bd:	in     al,dx
  41a7be:	inc    edi
  41a7bf:	mov    al,BYTE PTR [edi-0x1a9eb224]
  41a7c5:	mov    esi,0xae28d2dc
  41a7ca:	ror    BYTE PTR [esi+0x3ccaef82],cl
  41a7d0:	lea    esp,[ebx+0x56150959]
  41a7d6:	pop    ebp
  41a7d7:	test   eax,0x34329d4b
  41a7dc:	ja     0x41a7a9
  41a7de:	(bad)  
  41a7e0:	dec    edi
  41a7e1:	mov    eax,ds:0xa4cf0fac
  41a7e6:	std    
  41a7e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7e8:	jecxz  0x41a7a9
  41a7ea:	inc    ebp
  41a7eb:	or     esi,DWORD PTR [edx+0x619b840f]
  41a7f1:	mov    edx,0xc7b9ca3
  41a7f6:	sti    
  41a7f7:	scas   al,BYTE PTR es:[edi]
  41a7f8:	xor    DWORD PTR [ecx],ecx
  41a7fa:	xchg   DWORD PTR [esi+0x5ee896c4],ecx
  41a800:	fdiv   QWORD PTR [edx+0x37]
  41a803:	jno    0x41a797
  41a805:	adc    eax,0x51f0af1d
  41a80a:	xchg   BYTE PTR [ebx-0x619d594d],dl
  41a810:	sahf   
  41a811:	add    BYTE PTR [ebx-0x265f8cbc],0x84
  41a818:	int    0x73
  41a81a:	pop    ecx
  41a81b:	cmp    eax,esi
  41a81d:	push   es
  41a81e:	cld    
  41a81f:	jne    0x41a877
  41a821:	fyl2xp1 
  41a823:	cmc    
  41a824:	jmp    0x2653:0x5a9d2ee2
  41a82b:	or     al,0x87
  41a82d:	mov    WORD PTR [ebp-0x29],ss
  41a830:	add    BYTE PTR [eax-0x1fee349b],dh
  41a836:	fsubp  st(3),st
  41a838:	push   edi
  41a839:	or     BYTE PTR [edx-0x34fdf55],ch
  41a83f:	mov    dh,0xf7
  41a841:	in     al,dx
  41a842:	aas    
  41a843:	mov    esi,0x4f7795df
  41a848:	jne    0x41a8bd
  41a84a:	mov    ecx,0x52368227
  41a84f:	addr16 out 0xcd,eax
  41a852:	inc    esi
  41a853:	inc    DWORD PTR [ebx+ebp*2+0x3d587988]
  41a85a:	(bad)  
  41a85b:	push   edi
  41a85c:	mov    edx,DWORD PTR [edx-0x723cf49]
  41a862:	sbb    eax,DWORD PTR [edi+0x6b700d48]
  41a868:	(bad)
  41a86c:	call   0xe4366918
  41a871:	inc    edx
  41a872:	sub    esp,DWORD PTR [edx+0x27e5b559]
  41a878:	fcom   QWORD PTR [ecx]
  41a87a:	jecxz  0x41a837
  41a87c:	icebp  
  41a87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a87e:	shr    DWORD PTR [eax+eax*1],1
  41a881:	ja     0x41a8b1
  41a883:	es icebp 
  41a885:	mov    ds:0x3e2456e4,al
  41a88a:	adc    cl,BYTE PTR [esi+0x11]
  41a88d:	xchg   esi,eax
  41a88e:	fiadd  DWORD PTR [ebx]
  41a890:	mov    edi,DWORD PTR [eax-0x39986fba]
  41a896:	cmp    al,0xa0
  41a898:	adc    dh,BYTE PTR [ebp+0x46316cb4]
  41a89e:	pop    ebx
  41a89f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8a0:	and    DWORD PTR [esi+0x4e],ebp
  41a8a3:	adc    al,0x97
  41a8a5:	xchg   esp,eax
  41a8a6:	rcl    BYTE PTR [ebp-0x49a3a2e1],0x2e
  41a8ad:	or     al,bl
  41a8af:	and    ebx,ebp
  41a8b1:	inc    edx
  41a8b2:	jb     0x41a8bb
  41a8b4:	add    bh,al
  41a8b6:	imul   edi,DWORD PTR [ebp+ebx*4+0x2f],0xc8af76cc
  41a8be:	cmp    DWORD PTR [esi],ebp
  41a8c0:	inc    ebp
  41a8c1:	xor    ah,ah
  41a8c3:	or     DWORD PTR ds:0x7e59d006,0x7b
  41a8ca:	xchg   ebx,eax
  41a8cb:	(bad)  
  41a8cc:	dec    edi
  41a8cd:	jnp    0x41a940
  41a8cf:	jae    0x41a947
  41a8d1:	shr    DWORD PTR [ebp-0x14],cl
  41a8d4:	sbb    ecx,DWORD PTR [ebx-0x5b265908]
  41a8da:	fisubr WORD PTR [esi+0x39]
  41a8dd:	sub    BYTE PTR ds:0x1be56860,al
  41a8e3:	das    
  41a8e4:	icebp  
  41a8e5:	or     eax,0x742b670
  41a8ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8eb:	nop
  41a8ec:	dec    ebp
  41a8ed:	out    dx,al
  41a8ee:	or     edx,DWORD PTR [ebx]
  41a8f0:	push   ss
  41a8f1:	adc    ecx,edx
  41a8f3:	push   edx
  41a8f4:	pcmpeqd mm2,QWORD PTR [edx+0x2058bdbf]
  41a8fb:	mov    ?,WORD PTR [esi]
  41a8fd:	mov    bl,BYTE PTR [esi-0x4e70c53f]
  41a903:	es sub edx,eax
  41a906:	jo     0x41a948
  41a908:	dec    ecx
  41a909:	or     edi,DWORD PTR [ecx+0x25145cc]
  41a90f:	les    eax,FWORD PTR [esi+0x43]
  41a912:	xchg   edx,eax
  41a913:	xadd   BYTE PTR [edx-0x1b],dl
  41a917:	out    0x84,al
  41a919:	jg     0x41a95d
  41a91b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a91d:	in     eax,0xdd
  41a91f:	imul   esp,DWORD PTR [esi-0x62],0x53c7a3e
  41a926:	dec    ebx
  41a927:	(bad)  
  41a928:	dec    eax
  41a929:	dec    esi
  41a92a:	sub    BYTE PTR [edi-0x1b8aa23c],dl
  41a930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a931:	pop    ebp
  41a932:	loopne 0x41a8f0
  41a934:	or     DWORD PTR [ebx-0x7b],0xf0f8008a
  41a93b:	test   DWORD PTR [ebx-0x795988d5],0x78e04d2a
  41a945:	jnp    0x41a963
  41a947:	and    ch,0x61
  41a94a:	in     eax,dx
  41a94b:	mov    bh,BYTE PTR [ecx-0x5b]
  41a94e:	mov    WORD PTR [esi-0x29],fs
  41a951:	push   0xfffffff2
  41a953:	call   0x96c13a54
  41a958:	sahf   
  41a959:	popf   
  41a95a:	or     esi,ecx
  41a95c:	pusha  
  41a95d:	jecxz  0x41a945
  41a95f:	cdq    
  41a960:	in     al,dx
  41a961:	lahf   
  41a962:	xor    al,0x1b
  41a964:	cld    
  41a965:	mov    dh,0xfc
  41a967:	das    
  41a968:	pop    edi
  41a969:	push   esp
  41a96a:	pop    edi
  41a96b:	sbb    DWORD PTR [ecx-0x480050ca],0xd98c11ea
  41a975:	jle    0x41a970
  41a977:	push   ebx
  41a978:	xchg   esi,eax
  41a979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a97a:	pop    ecx
  41a97b:	das    
  41a97c:	inc    edx
  41a97d:	mov    bh,0x2c
  41a97f:	inc    ebp
  41a980:	out    0x5c,al
  41a982:	shr    DWORD PTR [edx+0x4184ead5],1
  41a988:	mov    eax,gs
  41a98a:	push   edx
  41a98b:	mov    cl,0xae
  41a98d:	pop    ecx
  41a98e:	ret    
  41a98f:	or     eax,0x3a939183
  41a994:	pop    es
  41a995:	mov    ds:0x13afa89,al
  41a99a:	repz hlt 
  41a99c:	mov    al,ds:0xe25ba341
  41a9a1:	out    0x86,eax
  41a9a3:	adc    ecx,DWORD PTR [eax]
  41a9a5:	dec    edx
  41a9a6:	sbb    esi,ebp
  41a9a8:	jnp    0x41a96e
  41a9aa:	iret   
  41a9ab:	(bad)  
  41a9ac:	cld    
  41a9ad:	mov    esp,0x717d91c6
  41a9b2:	stc    
  41a9b3:	cmp    eax,DWORD PTR [esi-0x22]
  41a9b6:	sub    eax,0xa9c4cd89
  41a9bb:	aam    0xf8
  41a9bd:	add    esp,DWORD PTR [ebp-0x8462425]
  41a9c3:	sbb    DWORD PTR [ecx+0x69],esp
  41a9c6:	cmp    edx,DWORD PTR [eax-0x45]
  41a9c9:	xchg   ebx,eax
  41a9ca:	ds inc esi
  41a9cc:	jle    0x41aa37
  41a9ce:	cdq    
  41a9cf:	mov    BYTE PTR [edx-0x695fa853],dh
  41a9d5:	sub    BYTE PTR [edi-0x55],0x52
  41a9d9:	mov    al,0xf1
  41a9db:	inc    esi
  41a9dc:	js     0x41a9d8
  41a9de:	je     0x41aa0c
  41a9e0:	leave  
  41a9e1:	fsubr  DWORD PTR [ecx+0x2f971920]
  41a9e7:	inc    edi
  41a9e8:	pop    ecx
  41a9e9:	gs jae 0x41a9e8
  41a9ec:	cwde   
  41a9ed:	ror    DWORD PTR [ebp+0x38],0xd3
  41a9f1:	stos   DWORD PTR es:[edi],eax
  41a9f2:	out    dx,eax
  41a9f3:	outs   dx,BYTE PTR ds:[esi]
  41a9f4:	adc    eax,0xb350a57a
  41a9f9:	mov    esi,0xc4a590a9
  41a9fe:	sbb    esi,edi
  41aa00:	jle    0x41a9b3
  41aa02:	inc    ebx
  41aa03:	adc    ebp,ebx
  41aa05:	(bad)  
  41aa06:	mov    ch,0x6b
  41aa08:	fs mov ch,0x3b
  41aa0b:	out    0x95,al
  41aa0d:	sub    BYTE PTR [ebx-0x241c7da],cl
  41aa13:	xchg   BYTE PTR [edx+0x76106637],bh
  41aa19:	mul    DWORD PTR [ecx+0x3c9440a0]
  41aa1f:	aas    
  41aa20:	lds    esp,FWORD PTR [edx]
  41aa22:	jo     0x41a9bc
  41aa24:	icebp  
  41aa25:	pop    edi
  41aa26:	adc    al,BYTE PTR [esi]
  41aa28:	nop
  41aa29:	cdq    
  41aa2a:	ins    DWORD PTR es:[edi],dx
  41aa2b:	arpl   WORD PTR [eax+0x5570dddc],sp
  41aa31:	test   al,0xde
  41aa33:	xor    BYTE PTR [eax+0x2],cl
  41aa36:	popa   
  41aa37:	stos   BYTE PTR es:[edi],al
  41aa38:	lods   eax,DWORD PTR ds:[esi]
  41aa39:	pop    ebx
  41aa3a:	es push esp
  41aa3c:	inc    ecx
  41aa3d:	sub    dh,0xa7
  41aa40:	mov    bh,0xd9
  41aa42:	and    al,0xfd
  41aa45:	cs inc ebx
  41aa47:	pop    es
  41aa48:	test   DWORD PTR [ecx-0x39],esp
  41aa4b:	or     al,0x28
  41aa4d:	imul   edi,DWORD PTR [ebx+eiz*2-0x5cb12018],0xfffffff5
  41aa55:	(bad)  
  41aa56:	cmp    eax,0xda517c24
  41aa5b:	dec    esi
  41aa5c:	lea    edi,[eax+edx*4]
  41aa5f:	dec    esp
  41aa60:	mov    ch,0x34
  41aa62:	and    eax,0xd4625d57
  41aa67:	out    dx,eax
  41aa68:	cmp    DWORD PTR [edi-0x2],0x2be5c9de
  41aa6f:	sahf   
  41aa70:	sub    BYTE PTR [esi+0x65eff756],al
  41aa76:	imul   esp,DWORD PTR [esp+ecx*1+0x3d9ac9ec],0x13
  41aa7e:	mov    es,WORD PTR [eax+0x7c]
  41aa81:	add    ebp,DWORD PTR [ebx]
  41aa83:	push   edx
  41aa84:	sbb    BYTE PTR [esi+edx*1],bh
  41aa87:	jo     0x41aabf
  41aa89:	inc    edi
  41aa8a:	fwait
  41aa8b:	pop    ebx
  41aa8c:	das    
  41aa8d:	xor    al,BYTE PTR [esi]
  41aa8f:	in     eax,dx
  41aa90:	out    dx,eax
  41aa91:	repnz xchg edi,eax
  41aa93:	adc    al,0x20
  41aa95:	and    eax,0x286deaa3
  41aa9a:	cmp    al,0xae
  41aa9c:	jno    0x41aa87
  41aa9e:	mov    gs,eax
  41aaa0:	rol    BYTE PTR [eax],0xdf
  41aaa3:	fild   DWORD PTR [ebx-0x65]
  41aaa6:	adc    eax,0xdac2c89a
  41aaab:	das    
  41aaac:	retf   0x654c
  41aaaf:	mov    eax,ds:0x9bba6eca
  41aab4:	loope  0x41aa3a
  41aab6:	clc    
  41aab7:	aam    0x4b
  41aab9:	mov    bh,0xa5
  41aabb:	cs xchg bl,dh
  41aabe:	pop    es
  41aabf:	aam    0x8b
  41aac1:	mov    ch,0x91
  41aac3:	arpl   WORD PTR [ebx+0x56d34479],si
  41aac9:	jle    0x41ab49
  41aacb:	mov    ecx,0xcc0c2d7
  41aad0:	jle    0x41ab44
  41aad2:	std    
  41aad3:	cmp    eax,0xce7a35be
  41aad8:	frstor [esi-0x64b32c70]
  41aade:	data16 (bad) 
  41aae0:	mov    bh,0x93
  41aae2:	cdq    
  41aae3:	sub    BYTE PTR [ebx+0x5bc07fa8],ch
  41aae9:	(bad)  
  41aaea:	imul   DWORD PTR [edx+0x41]
  41aaed:	stos   BYTE PTR es:[edi],al
  41aaee:	add    edi,DWORD PTR [edi]
  41aaf0:	push   ecx
  41aaf1:	cmp    BYTE PTR ds:0xa8fc5065,ah
  41aaf7:	les    esp,FWORD PTR ds:0x453d3285
  41aafd:	jbe    0x41ab0f
  41aaff:	dec    ebx
  41ab00:	(bad)  
  41ab02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab03:	cmp    edx,DWORD PTR [ecx]
  41ab05:	ret    0x9b26
  41ab08:	xor    dh,BYTE PTR [ebp+0x2d]
  41ab0b:	dec    eax
  41ab0c:	and    bh,BYTE PTR [esi]
  41ab0e:	jns    0x41ab81
  41ab10:	call   0x9976778a
  41ab15:	dec    ebp
  41ab16:	pop    ebx
  41ab17:	stos   DWORD PTR es:[edi],eax
  41ab18:	mov    ebp,0x2f102874
  41ab1d:	fldcw  WORD PTR [eax]
  41ab1f:	add    al,0x97
  41ab21:	(bad)  
  41ab22:	js     0x41ab2c
  41ab24:	scas   eax,DWORD PTR es:[edi]
  41ab25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab26:	cmp    edx,DWORD PTR [edi+0xb]
  41ab29:	out    0x9a,eax
  41ab2b:	out    dx,eax
  41ab2c:	lahf   
  41ab2d:	ins    BYTE PTR es:[edi],dx
  41ab2e:	popa   
  41ab2f:	sub    al,0x8a
  41ab31:	push   ds
  41ab32:	pop    eax
  41ab33:	push   ecx
  41ab34:	inc    BYTE PTR [edi]
  41ab36:	add    al,0x57
  41ab38:	cs sti 
  41ab3a:	push   edx
  41ab3b:	bnd jmp 0x41aaf0
  41ab3e:	dec    edi
  41ab3f:	or     esp,DWORD PTR [edx-0x37]
  41ab42:	inc    eax
  41ab43:	pop    esp
  41ab44:	push   0x6c6bd258
  41ab49:	jp     0x41ab74
  41ab4b:	dec    ebx
  41ab4c:	outs   dx,BYTE PTR ds:[esi]
  41ab4d:	jns    0x41ab5a
  41ab4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab50:	sbb    BYTE PTR [ebx+0x1e],al
  41ab53:	adc    BYTE PTR ds:0x7a1b7102,bl
  41ab59:	adc    al,BYTE PTR [ebp+0x5c]
  41ab5c:	cwde   
  41ab5d:	xor    esp,DWORD PTR [ebx]
  41ab5f:	sub    al,0x12
  41ab61:	repz mov bh,0x54
  41ab64:	in     al,dx
  41ab65:	lock les ecx,FWORD PTR [eax+0xe13cb14]
  41ab6c:	inc    edx
  41ab6d:	sahf   
  41ab6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab6f:	scas   eax,DWORD PTR es:[edi]
  41ab70:	push   ss
  41ab71:	or     BYTE PTR [edx+0x52cf9f6],cl
  41ab77:	adc    BYTE PTR [edi-0x571faf28],al
  41ab7d:	aaa    
  41ab7e:	and    al,BYTE PTR [ebp-0xa]
  41ab81:	(bad)  [edx+esi*2+0x2e00031a]
  41ab88:	rdtsc  
  41ab8a:	(bad)  
  41ab8b:	loope  0x41ab22
  41ab8d:	xlat   BYTE PTR ds:[ebx]
  41ab8e:	(bad)  
  41ab8f:	cmp    esi,esp
  41ab91:	mov    al,ds:0xfb1a2239
  41ab96:	cli    
  41ab97:	idiv   BYTE PTR [edx]
  41ab99:	xchg   esi,eax
  41ab9a:	pop    ds
  41ab9b:	loopne 0x41abed
  41ab9d:	loop   0x41abc0
  41ab9f:	iret   
  41aba0:	fadd   DWORD PTR [ecx-0x7dd72481]
  41aba6:	adc    DWORD PTR [edx],ebx
  41aba8:	mov    ebp,0x86be5bc2
  41abad:	lea    esp,[ebp+0x6a]
  41abb0:	sbb    DWORD PTR [ebx-0x4686791c],ebx
  41abb6:	(bad)  
  41abb7:	mov    dl,0x20
  41abb9:	xchg   ecx,eax
  41abba:	push   ds
  41abbb:	or     al,0x96
  41abbd:	shl    BYTE PTR [ebp-0x45],1
  41abc0:	dec    ebx
  41abc1:	xor    dl,BYTE PTR [ebx]
  41abc3:	xor    eax,0x410c77f9
  41abc8:	lahf   
  41abc9:	and    DWORD PTR [ecx+eax*1+0x2d],eax
  41abcd:	mul    DWORD PTR [ebp+eiz*2-0x5ad79dcd]
  41abd4:	dec    ebp
  41abd5:	mov    al,0xcc
  41abd7:	ficomp WORD PTR [ebp+0x79038607]
  41abdd:	mov    al,ds:0x45ae3ea0
  41abe2:	push   0xc4c8a3e8
  41abe7:	cmp    al,cl
  41abe9:	aad    0x10
  41abeb:	outs   dx,BYTE PTR ds:[esi]
  41abec:	inc    ebp
  41abed:	data16 mov ds:0x569ae845,al
  41abf3:	bound  ebx,QWORD PTR [eax]
  41abf5:	jmp    0x1333701d
  41abfa:	call   0x9371fee3
  41abff:	add    eax,0xd1aaa52b
  41ac04:	ret    0xff69
  41ac07:	pusha  
  41ac08:	out    dx,eax
  41ac09:	cmp    BYTE PTR [ecx+0x60ef9f36],dl
  41ac0f:	inc    ebx
  41ac10:	loope  0x41abdc
  41ac12:	das    
  41ac13:	retf   
  41ac14:	push   sp
  41ac16:	lods   al,BYTE PTR ds:[esi]
  41ac17:	je     0x41abcb
  41ac19:	shr    BYTE PTR [ecx-0x6fbf57c4],cl
  41ac1f:	adc    BYTE PTR ds:0xb0f438,ch
  41ac25:	or     ah,BYTE PTR [ebp-0x43]
  41ac28:	push   esp
  41ac29:	ja     0x41ac8d
  41ac2b:	mov    ebx,0x76e9452f
  41ac30:	cwd    
  41ac32:	ins    DWORD PTR es:[edi],dx
  41ac33:	rol    BYTE PTR [ebx],0xe5
  41ac36:	jae    0x41abbe
  41ac38:	lock mov edx,DWORD PTR [eax+ebx*8+0x40]
  41ac3d:	or     eax,0x5d8d2815
  41ac42:	sbb    esp,DWORD PTR [edi+0x2088ef62]
  41ac48:	sbb    al,BYTE PTR ss:0x3c9591b
  41ac4f:	ret    
  41ac50:	jmp    0x41acca
  41ac52:	cmp    BYTE PTR [esi+0x13],bh
  41ac55:	in     eax,0x65
  41ac57:	mov    WORD PTR [ebx+0x8],?
  41ac5a:	ret    0x4178
  41ac5d:	sar    BYTE PTR [esi+0x17a4b2bd],1
  41ac63:	pop    ebx
  41ac64:	inc    edi
  41ac65:	xchg   edi,eax
  41ac66:	mov    al,0x78
  41ac68:	ret    
  41ac69:	add    ebx,edi
  41ac6b:	adc    ch,al
  41ac6d:	out    dx,eax
  41ac6e:	lods   al,BYTE PTR ds:[esi]
  41ac6f:	test   al,0x5a
  41ac71:	mov    esp,0x827201aa
  41ac76:	call   DWORD PTR [ebp-0xb8972e]
  41ac7c:	gs mov dh,0x9e
  41ac7f:	jg     0x41acde
  41ac81:	dec    eax
  41ac82:	sub    ecx,ebx
  41ac84:	test   al,0xa6
  41ac86:	mov    al,ds:0x1aab0744
  41ac8b:	xor    DWORD PTR [ecx+0x17],ebp
  41ac8e:	inc    esp
  41ac8f:	ja     0x41acbe
  41ac91:	xor    DWORD PTR [eax+esi*8-0x39],0x336ea997
  41ac99:	mov    al,0x10
  41ac9b:	cmovns ebp,esi
  41ac9e:	test   BYTE PTR [ebp-0x6102c6c2],dh
  41aca4:	push   es
  41aca5:	jbe    0x41ac8e
  41aca7:	stc    
  41aca8:	hlt    
  41aca9:	cmp    DWORD PTR [edi-0x1a3c4ec1],ebp
  41acaf:	xchg   ebp,eax
  41acb0:	retf   0xe86f
  41acb3:	ffreep st(4)
  41acb5:	mov    al,0xcf
  41acb7:	(bad)  
  41acb8:	cld    
  41acb9:	sbb    al,0x4d
  41acbb:	pop    edi
  41acbc:	aam    0xd1
  41acbe:	jge    0x41aca7
  41acc0:	cli    
  41acc1:	sti    
  41acc2:	dec    ebx
  41acc3:	push   ds
  41acc4:	nop
  41acc5:	mov    ah,0x31
  41acc7:	clc    
  41acc8:	(bad)  
  41acc9:	mov    edx,0xa6843f78
  41acce:	jg     0x41ad22
  41acd0:	pop    ss
  41acd1:	std    
  41acd2:	jo     0x41ad07
  41acd4:	sbb    bh,dl
  41acd6:	sbb    BYTE PTR ds:0x3bb3cae3,ah
  41acdc:	push   edx
  41acdd:	mov    dl,0x46
  41acdf:	mov    edx,0xe8f9ef94
  41ace4:	popf   
  41ace5:	xchg   ebp,eax
  41ace6:	xor    DWORD PTR [eax],edx
  41ace8:	xchg   ecx,eax
  41ace9:	jle    0x41ad2e
  41aceb:	sbb    BYTE PTR [eax+0x68767d19],cl
  41acf1:	pop    esp
  41acf2:	push   esp
  41acf3:	mov    edi,0x504a7948
  41acf8:	sub    DWORD PTR [esi-0x2b4b7407],edi
  41acfe:	inc    ecx
  41acff:	loopne 0x41ad0d
  41ad01:	es mov cl,0x30
  41ad04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad05:	push   ebp
  41ad06:	inc    eax
  41ad07:	fdiv   QWORD PTR [ebp+0x6f]
  41ad0a:	out    0x59,al
  41ad0c:	dec    edx
  41ad0d:	dec    esi
  41ad0e:	mov    bh,BYTE PTR [eax+0x7f]
  41ad11:	pop    es
  41ad12:	xchg   ebx,eax
  41ad13:	aaa    
  41ad14:	pop    eax
  41ad15:	jb     0x41ad44
  41ad17:	add    eax,0x3fca970f
  41ad1c:	jno    0x41aca3
  41ad1e:	loop   0x41ad24
  41ad20:	stos   DWORD PTR es:[edi],eax
  41ad21:	push   edx
  41ad22:	sti    
  41ad23:	imul   BYTE PTR [esi-0x7d9cd4fe]
  41ad29:	mov    eax,ds:0x793caf42
  41ad2e:	sbb    edi,DWORD PTR [edi-0x373a3847]
  41ad34:	test   eax,0x758f7bf
  41ad39:	outs   dx,BYTE PTR ds:[esi]
  41ad3a:	rcr    BYTE PTR [edx],cl
  41ad3c:	mov    eax,ds:0x72dbd593
  41ad41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad42:	or     BYTE PTR [edi],ah
  41ad44:	mov    dh,0xec
  41ad46:	add    ecx,edi
  41ad48:	fild   QWORD PTR [ebx+0x6b30ba13]
  41ad4e:	out    0x1,eax
  41ad50:	mov    al,ds:0xee08d731
  41ad55:	adc    ecx,esp
  41ad57:	retf   
  41ad58:	retf   0xda5f
  41ad5b:	pop    edi
  41ad5c:	push   es
  41ad5d:	pop    ecx
  41ad5e:	cli    
  41ad5f:	sub    al,0xa4
  41ad61:	sbb    BYTE PTR [ecx-0x5],dh
  41ad64:	fadd   st(1),st
  41ad66:	push   0xffffffce
  41ad68:	dec    ebp
  41ad69:	jp     0x41add7
  41ad6b:	jae    0x41ad6b
  41ad6d:	(bad)  
  41ad6e:	dec    esi
  41ad6f:	ror    DWORD PTR [edi-0x10],0xe1
  41ad73:	retf   0x66d
  41ad76:	xor    al,0x3e
  41ad78:	and    eax,0x631d9f2
  41ad7d:	mov    eax,0xd356f1b3
  41ad82:	mov    gs,ebx
  41ad84:	or     DWORD PTR [eax],ebp
  41ad86:	push   ebp
  41ad87:	inc    edi
  41ad88:	je     0x41adfd
  41ad8a:	add    al,0xaf
  41ad8d:	xlat   BYTE PTR ds:[ebx]
  41ad8e:	xchg   ecx,eax
  41ad8f:	pop    ds
  41ad90:	push   edx
  41ad91:	stos   BYTE PTR es:[edi],al
  41ad92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad93:	sbb    bl,BYTE PTR [edx+0x76]
  41ad96:	and    BYTE PTR [edi-0x2db73ba],cl
  41ad9c:	(bad)  
  41ad9d:	dec    eax
  41ad9e:	sub    dl,dh
  41ada0:	sub    BYTE PTR cs:[edx],ch
  41ada3:	jmp    0x93cbd0df
  41ada8:	or     al,0x21
  41adaa:	inc    edx
  41adab:	popa   
  41adac:	or     DWORD PTR [edi+0x566a4ef9],esi
  41adb2:	(bad)  
  41adb3:	(bad)  
  41adb5:	mov    ds:0xcf6ee2d9,eax
  41adba:	add    BYTE PTR [ecx+0xf],ch
  41adbd:	je     0x41ad98
  41adbf:	add    esp,DWORD PTR [edx-0x593acb69]
  41adc5:	cmp    dh,BYTE PTR [ecx-0x3bdd731a]
  41adcb:	mov    ?,eax
  41adcd:	adc    al,0xa9
  41adcf:	sbb    eax,0x639ee3ab
  41add4:	aas    
  41add5:	pcmpeqw mm7,mm4
  41add8:	mov    esi,0xffe6c328
  41addd:	add    DWORD PTR [eax-0xb],0x406acc1f
  41ade4:	adc    BYTE PTR [esi],ah
  41ade6:	test   DWORD PTR [edx],esp
  41ade8:	bswap  esi
  41adea:	xor    bl,BYTE PTR [edx+0x8]
  41aded:	popa   
  41adee:	mov    edi,DWORD PTR [ecx]
  41adf0:	out    0x29,eax
  41adf2:	fadd   QWORD PTR [esi]
  41adf4:	mov    al,0x7
  41adf6:	mov    esi,0xf070b127
  41adfb:	sbb    DWORD PTR [esi+0x6b],esi
  41adfe:	test   BYTE PTR [ebp+0x48a41292],0x11
  41ae05:	outs   dx,BYTE PTR ds:[esi]
  41ae06:	add    al,0x8a
  41ae08:	mov    ebp,0xdc828f7f
  41ae0d:	sbb    BYTE PTR [ebp+0x71],0x4c
  41ae11:	ins    BYTE PTR es:[edi],dx
  41ae12:	mov    ds:0xfea8703d,eax
  41ae17:	enter  0xb172,0xc6
  41ae1b:	dec    esp
  41ae1c:	dec    esp
  41ae1d:	retf   0x601f
  41ae20:	xchg   ecx,eax
  41ae21:	mov    al,0xf9
  41ae23:	lea    esi,[ebx]
  41ae25:	data16 and BYTE PTR [esi-0x5c558108],bl
  41ae2c:	add    ebx,esp
  41ae2e:	repnz into 
  41ae30:	pop    ebx
  41ae31:	inc    ecx
  41ae32:	imul   ecx,DWORD PTR [ebx-0x9d4dfb4],0x402544f1
  41ae3c:	in     al,0x3b
  41ae3e:	cmp    BYTE PTR [edi],ah
  41ae40:	mov    esi,0x8ae7083a
  41ae45:	jno    0x41adfe
  41ae47:	dec    ecx
  41ae48:	iret   
  41ae49:	aad    0x7a
  41ae4b:	xchg   edx,eax
  41ae4c:	scas   eax,DWORD PTR es:[edi]
  41ae4d:	fistp  QWORD PTR [edi]
  41ae4f:	hlt    
  41ae50:	cmp    BYTE PTR [esi+0x24],al
  41ae53:	jecxz  0x41ae6a
  41ae55:	into   
  41ae56:	and    ecx,DWORD PTR [edi]
  41ae58:	cmp    edx,DWORD PTR [edx+0x486bd927]
  41ae5e:	scas   eax,DWORD PTR es:[edi]
  41ae5f:	jmp    0x8265:0x9b6b705e
  41ae66:	mov    esp,0x44c242ce
  41ae6b:	pop    ss
  41ae6c:	les    esi,FWORD PTR [eax+0x3214b145]
  41ae72:	inc    edx
  41ae73:	jg     0x41ae36
  41ae75:	sar    BYTE PTR ds:0x397f448b,0x97
  41ae7c:	push   ds
  41ae7d:	jle    0x41ae7e
  41ae7f:	xchg   edi,eax
  41ae80:	mov    ecx,0x35dd139f
  41ae85:	mov    ah,0x69
  41ae87:	stos   DWORD PTR es:[edi],eax
  41ae88:	stc    
  41ae89:	pusha  
  41ae8a:	ds inc ebx
  41ae8c:	pop    edx
  41ae8d:	mov    al,ds:0xce94ad9
  41ae92:	push   ebp
  41ae93:	sbb    al,0xd1
  41ae95:	xchg   ebx,eax
  41ae96:	sub    eax,0xef5e391d
  41ae9b:	or     BYTE PTR [ecx-0x7494049],al
  41aea1:	fcomi  st,st(3)
  41aea3:	out    dx,eax
  41aea4:	sahf   
  41aea5:	cmp    ebp,DWORD PTR [ecx-0x46015cc9]
  41aeab:	dec    esi
  41aeac:	xor    cl,bh
  41aeae:	xchg   ebp,eax
  41aeaf:	ret    
  41aeb0:	inc    edx
  41aeb1:	mov    edx,DWORD PTR [edx-0x55]
  41aeb4:	xor    eax,0x628e46de
  41aeb9:	or     BYTE PTR [eax-0x54a916b1],0xa3
  41aec0:	mov    ds:0xa339758f,al
  41aec5:	mov    ah,BYTE PTR [esi+0x5]
  41aec8:	fmulp  st(7),st
  41aeca:	mov    esp,DWORD PTR ds:0x73bb5afd
  41aed0:	and    al,0x60
  41aed2:	gs call 0x7a0c:0xb43c3c3b
  41aeda:	xor    dl,BYTE PTR [ebx-0x35abd581]
  41aee0:	lock jnp 0x41af1b
  41aee3:	cmp    bl,BYTE PTR [ecx+0x36]
  41aee6:	add    ecx,DWORD PTR [edi-0x260ed6c3]
  41aeec:	in     eax,0x2e
  41aeee:	sahf   
  41aeef:	fadd   DWORD PTR [edx-0x5223621d]
  41aef5:	mov    ds:0x2949ba12,eax
  41aefa:	or     ebp,ecx
  41aefc:	fld    DWORD PTR [ebx]
  41aefe:	ficomp DWORD PTR [ebp+0x4d]
  41af01:	cmc    
  41af02:	xlat   BYTE PTR ds:[ebx]
  41af03:	pusha  
  41af04:	cmp    eax,0xc47f720a
  41af09:	div    DWORD PTR [esi]
  41af0b:	cmp    DWORD PTR [esi],edi
  41af0d:	(bad)  
  41af0e:	pop    ebp
  41af0f:	sbb    BYTE PTR ds:0x36f2c4d4,dh
  41af15:	dec    eax
  41af16:	shl    DWORD PTR [edx-0x64],1
  41af19:	add    DWORD PTR [edi+0x50],edx
  41af1c:	das    
  41af1d:	fcmovu st,st(5)
  41af1f:	out    dx,eax
  41af20:	out    0x63,eax
  41af22:	(bad)  
  41af23:	mov    bl,0x57
  41af25:	push   cs
  41af26:	inc    ebx
  41af27:	clc    
  41af28:	lahf   
  41af29:	stos   BYTE PTR es:[edi],al
  41af2a:	loope  0x41af5a
  41af2c:	scas   al,BYTE PTR es:[edi]
  41af2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af2e:	iret   
  41af2f:	fsub   QWORD PTR [ecx+esi*1+0x61]
  41af34:	sub    al,0x74
  41af36:	push   es
  41af37:	xor    BYTE PTR [ebp-0x5c99740e],al
  41af3d:	ja     0x41afbc
  41af3f:	jl     0x41af49
  41af41:	in     al,dx
  41af42:	lahf   
  41af43:	js     0x41af08
  41af45:	adc    al,0xd2
  41af47:	adc    BYTE PTR [esi+0x764e1c5c],dl
  41af4d:	stc    
  41af4e:	(bad)  
  41af4f:	xchg   ecx,eax
  41af50:	xchg   ebp,eax
  41af51:	fucom  st(0)
  41af53:	xchg   esp,eax
  41af54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af55:	sti    
  41af56:	xchg   ebx,eax
  41af57:	js     0x41af5f
  41af59:	pop    edi
  41af5a:	push   esi
  41af5b:	adc    DWORD PTR [edx+edi*8],eax
  41af5e:	ins    DWORD PTR es:[edi],dx
  41af5f:	jbe    0x9cb25401
  41af65:	cmp    ch,BYTE PTR [ebx]
  41af67:	call   0xf60a:0x80e279af
  41af6e:	dec    edx
  41af6f:	adc    al,0x40
  41af71:	jmp    0xecaf16e0
  41af76:	aas    
  41af77:	imul   esp,DWORD PTR cs:[ecx-0x1f],0xffffffc6
  41af7c:	cmp    eax,0x8d90ab5e
  41af81:	aam    0xe9
  41af83:	jle    0x41afcd
  41af85:	mov    ebx,0xf0a28525
  41af8a:	xchg   ebp,eax
  41af8b:	push   eax
  41af8c:	test   al,0x6c
  41af8e:	xchg   ebx,eax
  41af8f:	aam    0x10
  41af91:	test   DWORD PTR [ebx+edi*4+0x76f5456f],edx
  41af98:	xchg   esp,eax
  41af99:	adc    ah,bl
  41af9b:	fisubr WORD PTR [edi+0x4b]
  41af9e:	mov    WORD PTR [edx+0x2a1adb26],es
  41afa4:	sbb    esi,ecx
  41afa6:	shl    DWORD PTR [esp+edi*2],1
  41afa9:	xlat   BYTE PTR ds:[ebx]
  41afaa:	pop    esi
  41afab:	xor    al,0xe7
  41afad:	js     0x41b01f
  41afaf:	retf   0xbf3
  41afb2:	imul   ebp,DWORD PTR [esi],0xffffff91
  41afb5:	call   0x1c9f:0x1e1874e8
  41afbc:	mov    eax,ds:0xf95d7363
  41afc1:	std    
  41afc2:	xlat   BYTE PTR ds:[ebx]
  41afc3:	pop    ebx
  41afc4:	pusha  
  41afc5:	sbb    bh,dh
  41afc7:	xchg   ebp,eax
  41afc8:	(bad)  
  41afc9:	xlat   BYTE PTR ds:[ebx]
  41afca:	call   0xa50a097f
  41afcf:	fwait
  41afd0:	push   0x2eee2df0
  41afd5:	loop   0x41b015
  41afd7:	pop    ecx
  41afd8:	cli    
  41afd9:	xor    al,0x61
  41afdb:	fs cli 
  41afdd:	ret    0x4af6
  41afe0:	cmc    
  41afe1:	scas   eax,DWORD PTR es:[edi]
  41afe2:	daa    
  41afe3:	int3   
  41afe4:	jmp    0xdd717827
  41afe9:	xor    al,0xdf
  41afeb:	push   edi
  41afec:	ficomp WORD PTR ds:0xfdc32ec0
  41aff2:	loop   0x41b071
  41aff4:	inc    ebx
  41aff5:	nop
  41aff6:	xor    al,0x8f
  41aff8:	xor    edx,DWORD PTR [edx]
  41affa:	call   0xb8d4d648
  41afff:	lds    ebx,FWORD PTR [ebx-0x13aa1ff5]
  41b005:	inc    edi
  41b006:	adc    ebp,DWORD PTR [eax]
  41b008:	and    al,0x2
  41b00a:	push   cs
  41b00b:	mov    ds:0x3dcac336,eax
  41b010:	push   cs
  41b011:	xchg   DWORD PTR gs:[eax],esi
  41b014:	es push 0xffffffee
  41b017:	fdivr  QWORD PTR [ecx+0x406da00c]
  41b01d:	mov    gs,edx
  41b01f:	inc    edx
  41b020:	lods   eax,DWORD PTR ds:[esi]
  41b021:	xchg   esp,eax
  41b022:	stc    
  41b023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b024:	inc    eax
  41b025:	test   DWORD PTR [ecx],edx
  41b027:	add    BYTE PTR [ebx+esi*1-0x4f],ch
  41b02b:	jecxz  0x41b020
  41b02d:	in     eax,0x62
  41b02f:	push   ss
  41b030:	pop    ebx
  41b031:	jb     0x41b08c
  41b033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b034:	int    0x69
  41b036:	imul   eax,ebx,0xb373881f
  41b03c:	shr    DWORD PTR [esi],cl
  41b03e:	add    al,0xd0
  41b040:	in     eax,dx
  41b041:	shr    ecx,cl
  41b043:	or     cl,bl
  41b045:	scas   eax,DWORD PTR es:[edi]
  41b046:	sbb    BYTE PTR [ebx+0x51],cl
  41b049:	add    ebp,edx
  41b04b:	sub    esp,esp
  41b04d:	jp     0x41b075
  41b04f:	rcl    DWORD PTR [ebx+ecx*2-0x5d9e402c],0x4d
  41b057:	pop    es
  41b058:	fcmovb st,st(1)
  41b05a:	or     ch,BYTE PTR [ecx+0x6667f330]
  41b060:	inc    ecx
  41b061:	inc    ebp
  41b062:	outs   dx,DWORD PTR ds:[esi]
  41b063:	pop    edx
  41b064:	cmp    cl,BYTE PTR [ecx-0x37b7a7e9]
  41b06a:	fisubr WORD PTR [edx-0x5a0ecc66]
  41b070:	(bad)  
  41b071:	retf   0xf7ae
  41b074:	pop    esp
  41b075:	xor    BYTE PTR [ecx-0x1c],bh
  41b078:	xor    DWORD PTR [eax+eiz*1],ebp
  41b07b:	mov    ebx,DWORD PTR [esi]
  41b07d:	and    DWORD PTR [ecx+0x59],edx
  41b080:	mov    ebp,0x911df563
  41b085:	push   es
  41b086:	sbb    bh,al
  41b088:	sub    ch,ch
  41b08a:	xchg   ebx,eax
  41b08b:	pushf  
  41b08c:	mov    ds:0xb89b445d,al
  41b091:	push   ebp
  41b092:	(bad)  
  41b093:	inc    ebx
  41b094:	ins    DWORD PTR es:[edi],dx
  41b095:	dec    ebx
  41b096:	cmc    
  41b097:	jae    0x41b067
  41b099:	and    al,0xca
  41b09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b09c:	stos   BYTE PTR es:[edi],al
  41b09d:	(bad)
  41b0a0:	retf   
  41b0a1:	int3   
  41b0a2:	sti    
  41b0a3:	rcl    DWORD PTR [ebx+0x65],cl
  41b0a6:	fisub  DWORD PTR [edx-0xf9a2996]
  41b0ac:	inc    ebp
  41b0ad:	push   ds
  41b0ae:	lock xor al,0x48
  41b0b1:	xlat   BYTE PTR es:[ebx]
  41b0b3:	mov    BYTE PTR [edx],ah
  41b0b5:	pop    esp
  41b0b6:	rol    ecx,1
  41b0b8:	mov    ah,0xa4
  41b0ba:	nop
  41b0bb:	enter  0xa9c6,0xe9
  41b0bf:	nop
  41b0c0:	mov    dl,0x37
  41b0c2:	push   ecx
  41b0c3:	mov    ds:0x3e0c934e,eax
  41b0c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c9:	ja     0x41b093
  41b0cb:	arpl   WORD PTR [ecx],sp
  41b0cd:	retf   0xa1bb
  41b0d0:	xchg   ecx,eax
  41b0d1:	jb     0x41b0ea
  41b0d3:	push   esi
  41b0d4:	adc    al,0xc
  41b0d6:	sbb    bh,BYTE PTR [eax+ebp*8+0x4b]
  41b0da:	fild   DWORD PTR ds:0xe68ae236
  41b0e0:	sbb    BYTE PTR [edi],cl
  41b0e2:	and    al,bl
  41b0e4:	jbe    0x41b0c0
  41b0e6:	pop    ss
  41b0e7:	push   edi
  41b0e8:	sbb    cl,BYTE PTR [ecx-0x7]
  41b0eb:	cmp    dh,al
  41b0ed:	jmp    0x41b098
  41b0ef:	jl     0x41b0bd
  41b0f1:	inc    edx
  41b0f2:	jle    0x41b0af
  41b0f4:	stos   BYTE PTR es:[edi],al
  41b0f5:	xor    ebp,DWORD PTR [edx+0x68]
  41b0f8:	imul   ecx,DWORD PTR [edi-0x7350d662],0xffffffdf
  41b0ff:	xchg   edi,eax
  41b100:	pop    ds
  41b101:	in     eax,0xee
  41b103:	hlt    
  41b104:	div    BYTE PTR [eax-0x26003cc8]
  41b10a:	xor    al,0xad
  41b10c:	mov    dl,BYTE PTR [esi]
  41b10e:	lock dec ebp
  41b110:	or     DWORD PTR [eax+0x203b1165],0xffffffad
  41b117:	add    BYTE PTR [ebp-0x3d],dh
  41b11a:	(bad)  
  41b11b:	mov    dh,0x9e
  41b11d:	fist   WORD PTR [edx]
  41b11f:	add    DWORD PTR [ebp+ebp*1+0x4e1776b8],esp
  41b126:	aaa    
  41b127:	jmp    0x41b19b
  41b129:	add    al,0x4
  41b12b:	and    ch,BYTE PTR [edx-0x5dce747d]
  41b131:	aas    
  41b132:	jo     0x41b100
  41b134:	push   ebp
  41b135:	sub    dl,BYTE PTR [esi+0x406d2a40]
  41b13b:	fisubr WORD PTR [ecx]
  41b13d:	inc    eax
  41b13e:	mov    esp,0xec669edb
  41b143:	jecxz  0x41b1bb
  41b145:	loopne 0x41b134
  41b147:	add    eax,0xf30a9732
  41b14c:	jp     0x41b108
  41b14e:	les    edi,FWORD PTR [esi+0x77]
  41b151:	inc    ecx
  41b152:	mov    ebp,0xd7ee8f4a
  41b157:	cmp    al,0x23
  41b159:	mov    cl,0x22
  41b15b:	in     al,0xbc
  41b15d:	not    BYTE PTR [esi]
  41b15f:	call   0x687d1834
  41b164:	push   ss
  41b165:	mov    al,ds:0x15758652
  41b16a:	adc    DWORD PTR [edx+0x5455c43c],eax
  41b170:	push   ecx
  41b171:	test   eax,0x4504ff40
  41b176:	pop    ecx
  41b177:	stos   BYTE PTR es:[edi],al
  41b178:	pop    edx
  41b179:	hlt    
  41b17a:	xchg   edx,eax
  41b17b:	inc    ebx
  41b17c:	enter  0x8b7d,0xfb
  41b180:	mov    ds:0xe4cac006,eax
  41b185:	sbb    eax,0xe1eb1dbc
  41b18a:	xor    dl,0x5c
  41b18d:	cmp    cl,dl
  41b18f:	div    BYTE PTR [ebp-0x1a]
  41b192:	xchg   edi,eax
  41b193:	call   0x5915:0x7e0f7a52
  41b19a:	push   es
  41b19b:	mov    esp,ds
  41b19d:	dec    eax
  41b19e:	mov    dh,BYTE PTR [edx+0xa]
  41b1a1:	sbb    eax,0x7ca3d148
  41b1a6:	xchg   ebp,eax
  41b1a7:	and    al,0xac
  41b1a9:	inc    ecx
  41b1aa:	add    eax,0xc66877a7
  41b1af:	out    0xc5,eax
  41b1b1:	daa    
  41b1b2:	fxch   st(2)
  41b1b4:	fistp  QWORD PTR [edx*4-0x6c3b9774]
  41b1bb:	and    eax,0x4b7db8b6
  41b1c0:	push   ds
  41b1c1:	add    DWORD PTR [ebp+0x6a34aa08],0x1a05df09
  41b1cb:	sub    cl,BYTE PTR [esp+edx*4+0x74]
  41b1cf:	outs   dx,DWORD PTR ds:[esi]
  41b1d0:	ins    BYTE PTR es:[edi],dx
  41b1d1:	aam    0xeb
  41b1d3:	sbb    al,0x8d
  41b1d5:	sub    DWORD PTR [edx],0xffffff8b
  41b1d8:	inc    edx
  41b1d9:	adc    BYTE PTR [esi+0x43],ah
  41b1dc:	jbe    0x41b1f0
  41b1de:	add    dh,dl
  41b1e0:	jmp    0x41b17e
  41b1e2:	(bad)  
  41b1e3:	sbb    al,0x54
  41b1e5:	fst    DWORD PTR ds:0x3156feb3
  41b1eb:	add    BYTE PTR [ebp+0x79],ah
  41b1ee:	rcl    bl,cl
  41b1f0:	jo     0x41b1d1
  41b1f2:	shl    BYTE PTR [ebx+0x66],1
  41b1f5:	dec    edx
  41b1f6:	mov    ecx,0x7d3c01a6
  41b1fb:	and    dl,BYTE PTR [esi-0x37f72d19]
  41b201:	ret    
  41b202:	stos   DWORD PTR es:[edi],eax
  41b203:	sti    
  41b204:	(bad)  [esi]
  41b206:	leave  
  41b207:	aad    0xa6
  41b209:	cli    
  41b20a:	repnz add al,0xa
  41b20d:	push   0xfffffff9
  41b20f:	ins    DWORD PTR es:[edi],dx
  41b210:	int    0x34
  41b212:	outs   dx,DWORD PTR ds:[esi]
  41b213:	mov    ecx,DWORD PTR [ebx-0x1efa610f]
  41b219:	je     0x41b277
  41b21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b21c:	aad    0xbc
  41b21e:	pop    eax
  41b21f:	sub    DWORD PTR [edx+0x4a],ebp
  41b222:	rep stos WORD PTR es:[edi],ax
  41b225:	jmp    DWORD PTR ds:0xd342766f
  41b22b:	jecxz  0x41b250
  41b22d:	cmc    
  41b22e:	icebp  
  41b22f:	ds jmp 0x41b2ae
  41b232:	xchg   DWORD PTR [edx],edi
  41b234:	inc    esi
  41b235:	test   esi,ebp
  41b237:	push   ebx
  41b238:	or     ebp,ecx
  41b23a:	cdq    
  41b23b:	ret    
  41b23c:	mov    ebp,ecx
  41b23e:	into   
  41b23f:	add    al,0xa8
  41b241:	cdq    
  41b242:	scas   al,BYTE PTR es:[edi]
  41b243:	dec    BYTE PTR cs:[ecx-0x28]
  41b247:	hlt    
  41b248:	jle    0x41b29d
  41b24a:	xchg   ebp,eax
  41b24b:	(bad)  
  41b24c:	pop    ds
  41b24d:	push   esi
  41b24e:	(bad)  
  41b24f:	aam    0xca
  41b251:	add    BYTE PTR [ebp-0x7edae2ae],ah
  41b257:	pop    ebx
  41b258:	xchg   edx,eax
  41b259:	call   0xfee5:0xc0702821
  41b260:	inc    ecx
  41b261:	cmp    BYTE PTR [ecx],bl
  41b263:	mov    ecx,DWORD PTR ds:0xbbdaca55
  41b269:	popa   
  41b26a:	test   eax,0xc68a523e
  41b26f:	pop    ebp
  41b270:	aaa    
  41b271:	(bad)  
  41b272:	sar    ch,0x32
  41b275:	les    ebp,FWORD PTR [esi+0x46217525]
  41b27b:	adc    DWORD PTR [edx-0x75],ecx
  41b27e:	ret    0xc57
  41b281:	mov    WORD PTR ds:0xa4f54e1f,cs
  41b287:	cmp    eax,0xe5eae731
  41b28c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b28d:	std    
  41b28e:	jl     0x41b2ab
  41b290:	fs push eax
  41b292:	jmp    0x41b2c4
  41b294:	ret    
  41b295:	adc    BYTE PTR [ebp-0x63],ch
  41b298:	popf   
  41b299:	sub    DWORD PTR [ebx-0x4b],edi
  41b29c:	xor    bl,BYTE PTR [edx-0x2ff8fff3]
  41b2a2:	mov    ds:0xe2976d8b,al
  41b2a7:	aam    0xca
  41b2a9:	adc    ah,BYTE PTR [ebx+0x36]
  41b2ac:	and    bh,bl
  41b2ae:	ds scas eax,DWORD PTR es:[edi]
  41b2b0:	cmp    al,0x4c
  41b2b2:	push   ebp
  41b2b3:	add    edx,DWORD PTR [ecx+0x1f80df6]
  41b2b9:	or     BYTE PTR [edi-0x55b83a0c],dh
  41b2bf:	push   esp
  41b2c0:	fistp  DWORD PTR [edi-0x6fb8bcce]
  41b2c6:	xchg   esi,eax
  41b2c7:	adc    al,0xad
  41b2c9:	mov    cl,BYTE PTR [eax]
  41b2cb:	mov    bl,0xcc
  41b2cd:	push   ds
  41b2ce:	outs   dx,DWORD PTR ds:[esi]
  41b2cf:	fist   WORD PTR [ebp-0x6653211b]
  41b2d5:	mov    dl,0xf0
  41b2d7:	sbb    ah,BYTE PTR [ecx+0x6a]
  41b2da:	shl    BYTE PTR ds:0x81e4a7b5,cl
  41b2e0:	ror    BYTE PTR [eax],0xe5
  41b2e3:	mov    dl,BYTE PTR [esi+0x75ee381]
  41b2e9:	std    
  41b2ea:	sub    dh,BYTE PTR fs:[eax-0xf]
  41b2ee:	jae    0x41b36d
  41b2f0:	call   0x93af:0xff57ec5f
  41b2f7:	pop    ss
  41b2f8:	inc    ebp
  41b2f9:	fwait
  41b2fa:	cdq    
  41b2fb:	push   0x54fccf6c
  41b300:	js     0x41b2e9
  41b302:	(bad)  
  41b303:	sub    al,0xc5
  41b305:	jo     0x41b34c
  41b307:	cli    
  41b308:	idiv   BYTE PTR [esi+0x63]
  41b30b:	add    DWORD PTR [ebx+eax*4],esi
  41b30e:	dec    esp
  41b30f:	sub    BYTE PTR [edx+0x55],ch
  41b312:	mov    esi,0xf0c95d5c
  41b317:	ins    BYTE PTR es:[edi],dx
  41b318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b319:	and    eax,0x24c928db
  41b31e:	mov    ?,WORD PTR [ebx-0x8655566]
  41b324:	sbb    BYTE PTR [ebp-0x36],bl
  41b327:	pop    esp
  41b328:	mov    bh,0xa3
  41b32a:	fwait
  41b32b:	add    ebp,edi
  41b32d:	add    BYTE PTR [ebp+ecx*4+0x6436ed86],al
  41b334:	xacquire xchg DWORD PTR [ebx+0x10d27a40],ecx
  41b33b:	cdq    
  41b33c:	popf   
  41b33d:	push   esp
  41b33e:	callw  0x7a31
  41b342:	lock ja 0x41b39d
  41b345:	mov    dl,0xfb
  41b347:	stos   DWORD PTR es:[edi],eax
  41b348:	jl     0x41b32b
  41b34a:	mov    ds:0xd7be062b,eax
  41b34f:	std    
  41b350:	push   ds
  41b351:	add    eax,0xda468464
  41b356:	sub    eax,0x3bf483d0
  41b35b:	sub    BYTE PTR [ebx-0x26b71a82],0xc7
  41b362:	ins    BYTE PTR es:[edi],dx
  41b363:	sbb    BYTE PTR [edx-0x21],0xf2
  41b367:	mov    ds:0xfbb85327,eax
  41b36c:	sub    ecx,DWORD PTR [edi+0x1e3ea7c]
  41b372:	dec    ecx
  41b373:	(bad)  
  41b374:	fstp   DWORD PTR [ecx+0xe141c19]
  41b37a:	mov    eax,ds:0x28d7770c
  41b37f:	mov    bh,0x88
  41b381:	scas   al,BYTE PTR es:[edi]
  41b382:	mov    BYTE PTR [edi+0x7594115a],al
  41b388:	jle    0x41b37c
  41b38a:	cwde   
  41b38b:	jle    0x41b381
  41b38d:	div    DWORD PTR [edx+0x1af7c8c]
  41b393:	add    BYTE PTR [ecx],cl
  41b395:	jmp    0xe3ec3284
  41b39a:	add    esp,DWORD PTR [ecx+0x17ecd6a2]
  41b3a0:	adc    al,0x53
  41b3a2:	inc    eax
  41b3a3:	shl    BYTE PTR [ebx-0x2d],cl
  41b3a6:	(bad)  
  41b3a7:	sbb    edi,DWORD PTR [esi+0x705a93be]
  41b3ad:	jae    0x41b352
  41b3af:	pop    eax
  41b3b0:	outs   dx,BYTE PTR ds:[esi]
  41b3b1:	adc    al,0x5a
  41b3b3:	inc    ecx
  41b3b4:	xor    BYTE PTR [ecx+0x79216098],bh
  41b3ba:	inc    esp
  41b3bb:	sub    DWORD PTR [ecx],ecx
  41b3bd:	jae    0x41b3a2
  41b3bf:	scas   al,BYTE PTR es:[edi]
  41b3c0:	out    0x59,eax
  41b3c2:	pop    ds
  41b3c3:	push   es
  41b3c4:	je     0x41b3d6
  41b3c6:	add    al,0xc0
  41b3c8:	cs xchg BYTE PTR ds:[esi+0x1a6a0a],al
  41b3d0:	mul    DWORD PTR [edx+0x2]
  41b3d3:	rol    BYTE PTR [esi],cl
  41b3d5:	int3   
  41b3d6:	rcr    DWORD PTR [ecx+eiz*4+0x5fdd14ff],0x34
  41b3de:	push   esi
  41b3df:	pop    ebp
  41b3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e1:	repnz adc al,0x9e
  41b3e4:	iret   
  41b3e5:	dec    esp
  41b3e6:	add    esi,DWORD PTR [edi]
  41b3e8:	and    BYTE PTR [ebp-0x41],ah
  41b3eb:	dec    BYTE PTR [ebx-0x4bac875]
  41b3f1:	rcr    DWORD PTR [eax+0x45],0x7b
  41b3f5:	lods   al,BYTE PTR ds:[esi]
  41b3f6:	sbb    dl,BYTE PTR [ecx-0x7768a17]
  41b3fc:	fnstcw WORD PTR [ebx-0x362ceb37]
  41b402:	and    DWORD PTR [ebx],ebx
  41b404:	test   al,0x23
  41b406:	adc    BYTE PTR [eax],dh
  41b408:	arpl   bx,ax
  41b40a:	stos   BYTE PTR es:[edi],al
  41b40b:	push   es
  41b40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b40d:	sub    eax,DWORD PTR [ebp+0x3851a840]
  41b413:	in     eax,0xc
  41b415:	icebp  
  41b416:	mov    ch,0x48
  41b418:	xchg   DWORD PTR [ecx+eiz*1+0xa487d71],ecx
  41b41f:	clc    
  41b420:	cli    
  41b421:	loop   0x41b3ac
  41b423:	and    BYTE PTR [ecx-0x5a],bh
  41b426:	adc    eax,0xd891ffdf
  41b42b:	mov    ds:0xd7b7f78,al
  41b430:	ss stc 
  41b432:	fxch   st(6)
  41b434:	sti    
  41b435:	mov    esi,DWORD PTR [edi+0x720d6f57]
  41b43b:	push   eax
  41b43c:	push   cs
  41b43d:	adc    dh,BYTE PTR [esi-0x304a9804]
  41b443:	sahf   
  41b444:	pop    es
  41b445:	lods   eax,DWORD PTR ds:[esi]
  41b446:	retf   0xfc6f
  41b449:	jo     0x41b48d
  41b44b:	bound  esp,QWORD PTR [ebx-0x76]
  41b44e:	mov    ch,0xa8
  41b450:	jl     0x41b3f8
  41b452:	inc    edx
  41b453:	cmp    BYTE PTR [esi],ch
  41b455:	scas   eax,DWORD PTR es:[edi]
  41b456:	and    eax,0x256f0f9e
  41b45b:	and    DWORD PTR [esp+ebp*2-0x6d],esp
  41b45f:	inc    edx
  41b460:	cmp    al,0xfd
  41b462:	aas    
  41b463:	mov    eax,ds:0xb7c720fc
  41b468:	stos   DWORD PTR es:[edi],eax
  41b469:	fwait
  41b46a:	addr16 (bad) 
  41b46c:	rol    BYTE PTR [ecx+0x6b],0x1e
  41b470:	mov    WORD PTR [edi],ss
  41b472:	cmp    ah,ah
  41b474:	(bad)  
  41b475:	out    dx,eax
  41b476:	mov    eax,0x3f46c13b
  41b47b:	(bad)  
  41b47c:	cmp    al,BYTE PTR [edx+0x732403db]
  41b482:	ror    ecx,cl
  41b484:	test   cl,dh
  41b486:	sahf   
  41b487:	mov    ebx,0x68828554
  41b48c:	out    dx,eax
  41b48d:	push   edx
  41b48e:	pop    cx
  41b490:	xchg   esi,eax
  41b491:	out    0x9d,eax
  41b493:	mov    esp,0x4b483156
  41b498:	bound  ecx,QWORD PTR [edi]
  41b49a:	imul   esp,DWORD PTR [ecx+0x56],0x15
  41b49e:	jle    0x41b491
  41b4a0:	and    al,0x85
  41b4a2:	fist   DWORD PTR [eax-0x51d20f04]
  41b4a8:	push   ebp
  41b4a9:	sub    BYTE PTR [ebx+0x55233b19],bh
  41b4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4b0:	fiadd  WORD PTR [ecx+edx*2+0x26]
  41b4b4:	ins    DWORD PTR es:[edi],dx
  41b4b5:	xchg   edx,eax
  41b4b6:	mov    edi,?
  41b4b8:	call   0x6e28:0x41af477b
  41b4bf:	jp     0x41b4ff
  41b4c1:	fbstp  TBYTE PTR [edx+eiz*8-0x4d]
  41b4c5:	add    eax,0x7ed74409
  41b4ca:	xchg   esi,eax
  41b4cb:	cmp    eax,0xffffffc1
  41b4ce:	add    al,0x3e
  41b4d0:	pop    edi
  41b4d1:	push   ecx
  41b4d2:	sub    eax,0x38701a08
  41b4d7:	aas    
  41b4d8:	cli    
  41b4d9:	push   ds
  41b4da:	frstor [eax]
  41b4dc:	pop    ebp
  41b4dd:	out    dx,eax
  41b4de:	inc    esp
  41b4df:	mov    ch,BYTE PTR [ebx]
  41b4e1:	and    al,BYTE PTR [ecx]
  41b4e3:	(bad)  
  41b4e4:	cld    
  41b4e5:	and    DWORD PTR [edx],esp
  41b4e7:	in     al,dx
  41b4e8:	sahf   
  41b4e9:	mov    WORD PTR [edx-0x204065f8],fs
  41b4ef:	ins    DWORD PTR es:[edi],dx
  41b4f0:	aaa    
  41b4f1:	adc    edx,eax
  41b4f3:	jbe    0x41b48d
  41b4f5:	pop    ebp
  41b4f6:	mov    edx,0x1fbec46
  41b4fb:	leave  
  41b4fc:	lods   al,BYTE PTR ds:[esi]
  41b4fd:	mov    cl,0xb0
  41b4ff:	sub    al,0xfa
  41b501:	clc    
  41b502:	pop    ebx
  41b503:	push   esp
  41b504:	sbb    BYTE PTR [ebp-0x2eb19c9],bh
  41b50a:	addr16 (bad) 
  41b50d:	jbe    0x41b54d
  41b50f:	ss out dx,eax
  41b511:	mov    edx,0x43e77fff
  41b516:	push   es
  41b517:	sbb    edx,DWORD PTR [ebp-0x26f2c73d]
  41b51d:	xor    bh,dh
  41b51f:	out    dx,eax
  41b520:	pop    ss
  41b521:	unpckhps xmm5,xmm3
  41b524:	shl    bl,1
  41b526:	loop   0x41b503
  41b528:	es push ebx
  41b52a:	fistp  DWORD PTR [ecx+0x34baeb09]
  41b530:	repnz cmc 
  41b532:	xchg   edx,eax
  41b533:	fwait
  41b534:	mov    edi,0x7e51b414
  41b539:	and    al,0x7c
  41b53b:	pop    edi
  41b53c:	lock cdq 
  41b53e:	dec    edx
  41b53f:	sbb    dl,BYTE PTR [edi+0x34]
  41b542:	mov    eax,ds:0xfcf89190
  41b547:	movq   QWORD PTR [ecx],mm7
  41b54a:	mov    ah,0xad
  41b54c:	pop    ebp
  41b54d:	push   esp
  41b54e:	xor    al,0xdf
  41b550:	xor    cl,dl
  41b552:	lods   al,BYTE PTR ds:[esi]
  41b553:	xchg   edi,eax
  41b554:	dec    edx
  41b555:	push   ss
  41b556:	getsec 
  41b558:	add    bl,bh
  41b55a:	fldcw  WORD PTR [edx-0xc]
  41b55d:	test   eax,0x28a2064d
  41b562:	or     al,0x9f
  41b564:	data16 repnz fcmovu st,st(4)
  41b568:	int    0x39
  41b56a:	push   0xfffffff6
  41b56c:	add    edx,ebx
  41b56e:	enter  0xc667,0x1f
  41b572:	in     eax,dx
  41b573:	in     al,dx
  41b574:	pop    ss
  41b575:	jbe    0x41b559
  41b577:	aas    
  41b578:	repnz sbb dh,ch
  41b57b:	mov    al,0x1c
  41b57d:	in     eax,0x22
  41b57f:	dec    ecx
  41b580:	push   ds
  41b581:	int3   
  41b582:	mov    BYTE PTR [esi+ebp*4],ah
  41b585:	push   DWORD PTR [eax-0x1d061387]
  41b58b:	lods   al,BYTE PTR ds:[esi]
  41b58c:	aaa    
  41b58d:	repz call 0x891fe152
  41b593:	jl     0x41b5cb
  41b595:	shl    DWORD PTR [ebx-0x42936169],0x8b
  41b59c:	jae    0x41b539
  41b59e:	or     al,0xfa
  41b5a0:	frstor [esp+esi*4+0x4a]
  41b5a4:	cld    
  41b5a5:	or     bh,BYTE PTR [ecx+0x75fc66bc]
  41b5ab:	out    0x74,eax
  41b5ad:	xchg   ebp,eax
  41b5ae:	div    BYTE PTR [edi+0x47dc6b4]
  41b5b4:	and    eax,0x71d2173d
  41b5b9:	clc    
  41b5ba:	std    
  41b5bb:	daa    
  41b5bc:	call   0x46410f59
  41b5c1:	and    bl,ch
  41b5c3:	(bad)  
  41b5c4:	cmp    al,0xce
  41b5c6:	fistp  DWORD PTR [edx-0x2a75724]
  41b5cc:	jmp    0x17cd7905
  41b5d1:	pop    esi
  41b5d2:	or     BYTE PTR [ecx+0x48],ah
  41b5d5:	mov    ebp,0xd0d547e5
  41b5da:	xchg   edx,eax
  41b5db:	push   0xe76b3b5d
  41b5e0:	pop    edx
  41b5e1:	mov    ds:0x6632c99c,al
  41b5e6:	jo     0x41b577
  41b5e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5e9:	pop    edi
  41b5ea:	aaa    
  41b5eb:	mov    WORD PTR ds:0xf1fc0f56,ds
  41b5f1:	add    dl,BYTE PTR ds:0xbd2eb79e
  41b5f7:	push   edx
  41b5f8:	mov    ch,0xfa
  41b5fa:	jmp    0x241a1a3e
  41b5ff:	jg     0x41b5d8
  41b601:	repnz push ebp
  41b603:	cmp    eax,0x7f227d96
  41b608:	jb     0x41b682
  41b60a:	lds    edx,FWORD PTR [ebx]
  41b60c:	jp     0x41b638
  41b60e:	jge    0x41b659
  41b610:	sbb    eax,0xb0323a1b
  41b615:	aas    
  41b616:	test   BYTE PTR [ecx-0xa843b6e],bl
  41b61c:	and    BYTE PTR [edx],dh
  41b61e:	mov    ecx,0xee08d563
  41b623:	push   ebp
  41b624:	pushw  0x2c
  41b627:	call   0xd364:0xd4cafbfb
  41b62e:	add    DWORD PTR [ebx+0x13],0x75e43799
  41b635:	xor    edx,DWORD PTR [ebp-0x1d6e7293]
  41b63b:	push   ebp
  41b63c:	push   edx
  41b63d:	inc    edi
  41b63e:	xchg   ebp,eax
  41b63f:	jecxz  0x41b65f
  41b641:	xor    DWORD PTR [esi-0x54],eax
  41b644:	inc    ecx
  41b645:	xlat   BYTE PTR ds:[ebx]
  41b646:	and    DWORD PTR [ecx],esi
  41b648:	xor    DWORD PTR [edi+0x1d],0xfffffffe
  41b64c:	xor    BYTE PTR [edx+ebx*4+0x7a],0x6e
  41b651:	jbe    0x41b6cd
  41b653:	lods   al,BYTE PTR ds:[si]
  41b655:	xor    BYTE PTR [edx+edi*2],ch
  41b658:	xchg   ebp,eax
  41b659:	pop    es
  41b65a:	mov    esp,0xe6fff2e0
  41b65f:	push   eax
  41b660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b661:	pop    DWORD PTR [edi-0x2c]
  41b664:	or     ch,BYTE PTR [edi-0xa3ff7b2]
  41b66a:	inc    DWORD PTR [ecx+0x39fb36fc]
  41b670:	ins    BYTE PTR es:[edi],dx
  41b671:	mov    BYTE PTR [edi],0x91
  41b674:	loop   0x41b66f
  41b676:	or     bl,al
  41b678:	aam    0x2f
  41b67a:	adc    bl,dh
  41b67c:	fucomp st(0)
  41b67e:	add    edi,DWORD PTR [esi]
  41b680:	fwait
  41b681:	mov    bh,BYTE PTR [ecx-0x2ec73c53]
  41b687:	in     eax,0x99
  41b689:	cmc    
  41b68a:	jl     0x41b6e8
  41b68c:	pop    esp
  41b68d:	sti    
  41b68e:	jne    0x41b68c
  41b690:	adc    DWORD PTR [ecx+0x2a],0x831d1756
  41b697:	cmp    DWORD PTR [ecx+edx*1+0x79],esi
  41b69b:	inc    esp
  41b69c:	pop    ebp
  41b69d:	jmp    0x645b1728
  41b6a2:	les    esp,FWORD PTR [edx-0x2e]
  41b6a5:	hlt    
  41b6a6:	icebp  
  41b6a7:	jmp    0xdd8:0x36f231b5
  41b6ae:	ret    
  41b6af:	sahf   
  41b6b0:	and    dl,BYTE PTR [ebp+0x22]
  41b6b3:	sbb    DWORD PTR [edx+0x2bc8f2ba],eax
  41b6b9:	cli    
  41b6ba:	xchg   eax,edi
  41b6bc:	cmp    edx,edi
  41b6be:	outs   dx,DWORD PTR ds:[esi]
  41b6bf:	and    al,0x95
  41b6c1:	mov    eax,0x72e46000
  41b6c6:	sti    
  41b6c7:	ret    
  41b6c8:	xchg   BYTE PTR [edx-0x23],dl
  41b6cb:	xlat   BYTE PTR ds:[ebx]
  41b6cc:	(bad)  
  41b6cd:	out    dx,eax
  41b6ce:	cwde   
  41b6cf:	mov    bh,BYTE PTR [esi+0x6a8a4fda]
  41b6d5:	(bad)  [ebx-0x6]
  41b6d8:	pop    ebx
  41b6d9:	add    BYTE PTR [edi+0x7dfe7445],dl
  41b6df:	daa    
  41b6e0:	and    al,0x99
  41b6e2:	cmp    BYTE PTR [edx],al
  41b6e4:	daa    
  41b6e5:	jae    0x41b6bf
  41b6e7:	ins    DWORD PTR es:[edi],dx
  41b6e8:	sub    edi,DWORD PTR [ecx]
  41b6ea:	push   ebx
  41b6eb:	lods   eax,DWORD PTR ds:[esi]
  41b6ec:	test   BYTE PTR [ebp-0x3f20737d],cl
  41b6f2:	xchg   esp,eax
  41b6f3:	mov    ecx,0xab612f3
  41b6f8:	sub    esp,ecx
  41b6fa:	mul    BYTE PTR [esi]
  41b6fc:	push   ebx
  41b6fd:	mov    bl,0x26
  41b6ff:	pop    esi
  41b700:	sbb    eax,0x8cacf3b7
  41b705:	es pop ebx
  41b707:	jl     0x41b778
  41b709:	stos   DWORD PTR es:[edi],eax
  41b70a:	cdq    
  41b70b:	jle    0x41b740
  41b70d:	pop    ecx
  41b70e:	icebp  
  41b70f:	sbb    eax,0x79d9b463
  41b714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b715:	and    al,0x5b
  41b717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b718:	dec    ebx
  41b719:	and    dh,BYTE PTR [esi-0x43]
  41b71c:	out    0x49,eax
  41b71e:	lds    esi,FWORD PTR [edi-0x26]
  41b721:	shl    BYTE PTR [ebx-0x7c1179a1],1
  41b727:	xor    eax,0x11c02d7a
  41b72c:	adc    dl,ch
  41b72e:	int3   
  41b72f:	mov    BYTE PTR [ecx+edx*2-0x73c0495c],ch
  41b736:	lea    ecx,[edx+0x22]
  41b739:	jae    0x41b6d9
  41b73b:	dec    ecx
  41b73c:	jmp    0xfcdf6142
  41b741:	jae    0x41b733
  41b743:	and    al,0x9e
  41b745:	and    eax,0xa0c80fa3
  41b74a:	jg     0x41b767
  41b74c:	add    DWORD PTR [eax-0x352c8815],0xffffffdd
  41b753:	scas   eax,DWORD PTR es:[edi]
  41b754:	mov    eax,ds:0x65ca0cce
  41b759:	sub    esi,esp
  41b75b:	cdq    
  41b75c:	rcr    DWORD PTR [edi],cl
  41b75e:	ja     0x41b6f6
  41b760:	xchg   dl,dl
  41b762:	mov    ch,0xc1
  41b764:	jbe    0x41b7c3
  41b766:	test   al,0x77
  41b768:	mov    BYTE PTR [esi],cl
  41b76a:	mov    al,ds:0xefe96d5f
  41b76f:	push   ds
  41b770:	ss call 0xd219:0x39a9759f
  41b778:	or     al,0x69
  41b77a:	and    BYTE PTR [ebp+0x20],bl
  41b77d:	call   0x36de:0xaeb8e45a
  41b784:	push   eax
  41b785:	inc    ecx
  41b786:	lock mov cs,WORD PTR [esi]
  41b789:	sub    al,0x7a
  41b78b:	les    eax,FWORD PTR [esi]
  41b78d:	and    eax,0x7e0f7371
  41b792:	rcl    bl,cl
  41b794:	je     0x41b7de
  41b796:	add    dl,BYTE PTR [edx+0x2a]
  41b799:	mov    cl,0xe4
  41b79b:	pop    ebp
  41b79c:	shr    BYTE PTR [ecx+edx*2+0x42],cl
  41b7a0:	xor    BYTE PTR [eax+0x27817c6a],0xb7
  41b7a7:	test   al,0xce
  41b7a9:	adc    edx,ecx
  41b7ab:	mov    ebx,0x2cbb8e0c
  41b7b0:	cmp    DWORD PTR [esi+0x28],ebx
  41b7b3:	pop    edx
  41b7b4:	sub    eax,0xe0b4f296
  41b7b9:	dec    edx
  41b7ba:	mov    dl,0x5
  41b7bc:	cld    
  41b7bd:	pop    ebp
  41b7be:	pop    es
  41b7bf:	popf   
  41b7c0:	add    al,0x41
  41b7c2:	(bad)  
  41b7c3:	or     dh,dh
  41b7c5:	jae    0x41b7ce
  41b7c7:	call   0xcadd7ee8
  41b7cc:	shl    DWORD PTR [esi-0x44],0x1b
  41b7d0:	dec    eax
  41b7d1:	sbb    DWORD PTR [eax+ebx*8],0xfffffff2
  41b7d5:	mov    dh,0x9d
  41b7d7:	ins    DWORD PTR es:[edi],dx
  41b7d8:	nop
  41b7d9:	cwde   
  41b7da:	imul   eax,edi,0x49
  41b7dd:	inc    ebp
  41b7de:	out    dx,al
  41b7df:	imul   edi,edi,0x82a5fc36
  41b7e5:	push   esp
  41b7e6:	adc    al,BYTE PTR [esi]
  41b7e8:	push   ds
  41b7e9:	js     0x41b7d0
  41b7eb:	push   cs
  41b7ec:	jge    0x41b7bf
  41b7ee:	sub    DWORD PTR [ecx-0x4a746f2f],0x26
  41b7f5:	mov    ch,0x30
  41b7f7:	fiadd  WORD PTR [esp+ebp*1]
  41b7fa:	(bad)  
  41b7fb:	mov    ch,0x8e
  41b7fd:	in     al,0x31
  41b7ff:	xor    DWORD PTR [esi],esi
  41b801:	jle    0x41b846
  41b803:	mov    DWORD PTR [ebp+0x31],ebp
  41b806:	xchg   esi,eax
  41b807:	gs push ds
  41b809:	dec    esp
  41b80a:	adc    BYTE PTR [ebp+0x76],bl
  41b80d:	icebp  
  41b80e:	or     cl,dl
  41b810:	pop    es
  41b811:	push   0xffffff82
  41b813:	rcr    DWORD PTR [edi],1
  41b815:	cmp    DWORD PTR [ebx],eax
  41b817:	mov    cl,0x83
  41b819:	es or  eax,0xbc3aed9b
  41b81f:	in     al,dx
  41b820:	in     eax,0xec
  41b822:	sub    BYTE PTR [edx-0xf],bl
  41b825:	std    
  41b826:	js     0x41b8a0
  41b828:	fwait
  41b829:	out    0x89,eax
  41b82b:	arpl   WORD PTR [eax+0x7a74dbeb],di
  41b831:	outs   dx,BYTE PTR ds:[esi]
  41b832:	dec    edx
  41b833:	lods   al,BYTE PTR ds:[esi]
  41b834:	retf   0x3d1b
  41b837:	xor    dl,al
  41b839:	jmp    0x2113:0x596509dc
  41b840:	mov    ds:0xe756c8d5,al
  41b845:	jmp    0x24d1:0x59b1db62
  41b84c:	fs ds hlt 
  41b84f:	pop    edx
  41b850:	adc    al,0x3a
  41b852:	mov    ebx,0x27c34948
  41b857:	inc    esp
  41b858:	pop    es
  41b859:	xchg   edx,eax
  41b85a:	aaa    
  41b85b:	sbb    cl,BYTE PTR [ebx+0x56]
  41b85e:	jbe    0x41b82c
  41b860:	pop    ds
  41b861:	dec    ebp
  41b862:	lds    esi,FWORD PTR [ebp-0x64]
  41b865:	gs inc esp
  41b867:	push   edx
  41b868:	lea    esi,[eax+0x4ed4edcf]
  41b86e:	push   ebp
  41b86f:	pop    edx
  41b870:	sub    DWORD PTR [eax+0x30],esp
  41b873:	pop    ebx
  41b874:	std    
  41b875:	aaa    
  41b876:	sbb    eax,0x3de0c85e
  41b87b:	sub    BYTE PTR [ecx-0x7f],dh
  41b87e:	daa    
  41b87f:	mov    ebx,0xbb7255f1
  41b884:	jno    0x41b858
  41b886:	mov    edi,0x1e755bdd
  41b88c:	xchg   ebp,eax
  41b88d:	aam    0xcc
  41b88f:	daa    
  41b890:	and    edi,esi
  41b892:	jecxz  0x41b8be
  41b894:	xchg   edi,eax
  41b895:	mov    ds:0x42fe3bda,al
  41b89a:	pop    ebx
  41b89b:	cmp    edi,DWORD PTR [edi+0x65]
  41b89e:	mov    ds:0x483222aa,al
  41b8a3:	sub    edi,eax
  41b8a5:	adc    eax,0x36a756f6
  41b8aa:	adc    DWORD PTR [eax+0x2be2a856],0x12e8996c
  41b8b4:	cwde   
  41b8b5:	or     eax,0x6b7a1a5a
  41b8ba:	mov    cl,0x8
  41b8bc:	xlat   BYTE PTR ds:[ebx]
  41b8bd:	and    edi,DWORD PTR ss:[ebp-0x5]
  41b8c1:	dec    esp
  41b8c2:	jbe    0x41b85e
  41b8c4:	ret    
  41b8c5:	je     0x41b8d2
  41b8c7:	sahf   
  41b8c8:	les    ecx,FWORD PTR [ebx]
  41b8ca:	jge    0x41b855
  41b8cc:	xchg   esp,eax
  41b8cd:	mov    ebx,0x969ba98
  41b8d2:	int    0x78
  41b8d4:	into   
  41b8d5:	cdq    
  41b8d6:	pop    es
  41b8d7:	and    ecx,DWORD PTR [esi-0x62370ae0]
  41b8dd:	lods   eax,DWORD PTR ds:[esi]
  41b8de:	mov    ebp,0x621d4a9
  41b8e3:	es int 0xbd
  41b8e6:	xor    eax,0x9b140eaf
  41b8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8ec:	sti    
  41b8ed:	adc    BYTE PTR [eax-0x28e3b5a2],al
  41b8f3:	xor    al,0xc2
  41b8f5:	sbb    dl,bh
  41b8f7:	sbb    dh,bh
  41b8f9:	adc    al,0x7a
  41b8fb:	pop    eax
  41b8fc:	(bad)  
  41b8fd:	in     eax,0xe
  41b8ff:	sbb    ebp,ebp
  41b901:	and    DWORD PTR [eax+ebx*2-0x56ec2a3a],0x75
  41b909:	aam    0x4e
  41b90b:	xchg   esp,eax
  41b90c:	in     eax,0xb3
  41b90e:	push   eax
  41b90f:	jb     0x41b949
  41b911:	mov    edx,0xc6815631
  41b916:	cmp    eax,0xd3355ac6
  41b91b:	mov    ch,0xd3
  41b91d:	mov    dl,0xc0
  41b91f:	and    al,0xf1
  41b921:	outs   dx,BYTE PTR ds:[esi]
  41b922:	mov    bl,0xba
  41b924:	mov    ecx,0x7aaf91e8
  41b929:	call   0x6705:0x70964269
  41b930:	jo     0x41b9ac
  41b932:	mov    ebx,0x917db16e
  41b937:	mov    bh,0x53
  41b939:	cmp    edi,DWORD PTR [eax-0x22]
  41b93c:	into   
  41b93d:	loop   0x41b950
  41b93f:	jl     0x41b946
  41b941:	and    ebp,DWORD PTR [edx]
  41b943:	mov    DWORD PTR [edi+ebx*8-0x74],esi
  41b947:	and    BYTE PTR [ebx-0x2a8a264],bl
  41b94d:	or     ebp,esi
  41b94f:	cmp    edx,DWORD PTR [ebx+0x26]
  41b952:	aam    0x4b
  41b954:	mov    ds:0x36ced3a1,al
  41b959:	add    al,0xce
  41b95c:	addr16 aaa 
  41b95e:	mov    ch,0xc1
  41b960:	ror    ah,cl
  41b962:	pop    edi
  41b963:	les    edi,FWORD PTR [esi]
  41b965:	aam    0xdd
  41b967:	mov    bh,0xdb
  41b969:	mov    es,WORD PTR [ebx+0x3150340]
  41b96f:	mov    esi,0x901ae343
  41b974:	push   cs
  41b975:	push   eax
  41b976:	dec    esp
  41b977:	pop    ss
  41b978:	nop
  41b979:	ret    
  41b97a:	pop    ss
  41b97b:	sbb    cl,bh
  41b97d:	xor    BYTE PTR ss:[ebp-0x70],cl
  41b981:	and    dh,BYTE PTR [eax]
  41b983:	xor    ecx,esp
  41b985:	lds    esi,FWORD PTR [ebp+0x427d6c27]
  41b98b:	add    al,0x9
  41b98d:	and    edi,DWORD PTR [ebp+0x3d]
  41b990:	jae    0x41ba09
  41b992:	xor    BYTE PTR [ebp-0x30],dl
  41b995:	inc    ebx
  41b996:	(bad)  
  41b997:	mov    bh,0xe4
  41b999:	xchg   ebx,eax
  41b99a:	sti    
  41b99b:	dec    esp
  41b99c:	(bad)  
  41b99d:	out    0xae,eax
  41b99f:	loopne 0x41b9ef
  41b9a1:	stc    
  41b9a2:	stos   BYTE PTR es:[edi],al
  41b9a3:	add    BYTE PTR [edi*1-0x299f3392],bl
  41b9aa:	jp     0x41b969
  41b9ac:	xchg   ch,bh
  41b9ae:	adc    al,0x81
  41b9b0:	in     al,0x5b
  41b9b2:	fst    QWORD PTR [esi+edx*1-0x23a12818]
  41b9b9:	fld    QWORD PTR [ebx]
  41b9bb:	pop    esi
  41b9bc:	into   
  41b9bd:	and    DWORD PTR [ebx+0x5f27b8c8],esp
  41b9c3:	push   esp
  41b9c4:	repz ja 0x41b9d5
  41b9c7:	imul   edx,esp,0xffffffa1
  41b9ca:	dec    ebx
  41b9cb:	mov    eax,0x487f9026
  41b9d0:	add    ebp,DWORD PTR [edx-0x10]
  41b9d3:	cmc    
  41b9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9d5:	int3   
  41b9d6:	xor    BYTE PTR [ebp+0x53939c24],bl
  41b9dc:	aam    0x7c
  41b9de:	mov    ?,WORD PTR [ecx+0x2ee5c6ae]
  41b9e4:	cmp    BYTE PTR [ebx+0x14c3fa11],0x28
  41b9eb:	int3   
  41b9ec:	adc    eax,0xdc90a2d8
  41b9f1:	lds    eax,FWORD PTR ds:0x53eebf3f
  41b9f7:	in     eax,0x77
  41b9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9fa:	sti    
  41b9fb:	add    al,0x2f
  41b9fd:	fcmovnu st,st(0)
  41b9ff:	ror    DWORD PTR [ecx-0xca9dcc8],0x3c
  41ba06:	cld    
  41ba07:	sub    al,0x3c
  41ba09:	sahf   
  41ba0a:	push   ebx
  41ba0b:	jecxz  0x41ba6d
  41ba0d:	ss popf 
  41ba0f:	js     0x41ba1a
  41ba11:	dec    eax
  41ba12:	rol    bl,1
  41ba14:	xchg   ebx,eax
  41ba15:	(bad)  
  41ba17:	add    al,0x3f
  41ba19:	pop    ecx
  41ba1a:	into   
  41ba1b:	push   ss
  41ba1c:	cmp    dh,BYTE PTR [edi+0x1d]
  41ba1f:	dec    esp
  41ba20:	lds    esi,FWORD PTR [esi-0x71]
  41ba23:	jmp    0x9c08:0x6cfe11cd
  41ba2a:	mov    bl,0x84
  41ba2c:	mul    BYTE PTR [ecx+0x2e]
  41ba2f:	inc    ebx
  41ba30:	add    al,0x96
  41ba32:	je     0x41b9ea
  41ba34:	pop    ebp
  41ba35:	fild   QWORD PTR [ecx+0x3e70fc3e]
  41ba3b:	or     BYTE PTR [esi],cl
  41ba3d:	fidiv  WORD PTR [esi-0x33]
  41ba40:	mov    edx,0xf1361f27
  41ba45:	lods   al,BYTE PTR ds:[esi]
  41ba46:	push   ebp
  41ba47:	or     BYTE PTR [ebp-0x5c],ch
  41ba4a:	(bad)  
  41ba4b:	fsubr  QWORD PTR [edx+0x70]
  41ba4e:	repz rol BYTE PTR [edx-0x5a],1
  41ba52:	leave  
  41ba53:	scas   eax,DWORD PTR es:[edi]
  41ba54:	idiv   BYTE PTR [esi+ebx*1+0x3e]
  41ba58:	cli    
  41ba59:	test   al,0x3d
  41ba5b:	fld    TBYTE PTR [ebx+ebp*8]
  41ba5e:	mov    bh,0xcf
  41ba60:	bound  edx,QWORD PTR [edx-0x7e]
  41ba63:	sbb    eax,0x97f9548
  41ba68:	mov    eax,ds:0xb91035a4
  41ba6d:	xor    al,0x62
  41ba6f:	or     eax,0x7fcc0277
  41ba74:	push   ss
  41ba75:	push   cs
  41ba76:	call   0xc20452a4
  41ba7b:	adc    al,0x96
  41ba7d:	ds call 0xcb2e:0xeab17946
  41ba85:	ja     0x41ba88
  41ba87:	jo     0x41baa8
  41ba89:	dec    esp
  41ba8a:	mov    DWORD PTR [ebx+0x6d],ebx
  41ba8d:	inc    edi
  41ba8e:	rol    DWORD PTR [ebx+ebp*2+0x9],0xbb
  41ba93:	xor    eax,0x85b6a8f9
  41ba98:	and    al,0x13
  41ba9a:	and    al,0x3e
  41ba9c:	pop    ss
  41ba9d:	pop    ds
  41ba9e:	stos   BYTE PTR es:[edi],al
  41ba9f:	test   eax,0x808a697d
  41baa4:	jmp    0xe78ea6af
  41baa9:	push   edx
  41baaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baab:	scas   eax,DWORD PTR es:[edi]
  41baac:	retf   
  41baad:	xchg   ebx,eax
  41baae:	(bad)  
  41baaf:	xor    esp,ecx
  41bab1:	test   bl,bh
  41bab3:	push   es
  41bab4:	push   edi
  41bab5:	mov    edx,edi
  41bab7:	sbb    al,0x7b
  41bab9:	lds    ebp,FWORD PTR [ebx]
  41babb:	dec    esi
  41babc:	mov    al,0xae
  41babe:	mov    cl,BYTE PTR [edx+edx*8]
  41bac1:	pop    ebp
  41bac2:	push   ebp
  41bac3:	mov    edx,0x9f812d4a
  41bac8:	push   edx
  41bac9:	adc    ah,dh
  41bacb:	pop    esp
  41bacc:	sub    DWORD PTR [edx+ecx*8+0x36a36e66],edi
  41bad3:	sub    eax,0x70be81db
  41bad8:	out    0x15,eax
  41bada:	mov    cs,eax
  41badc:	imul   ecx,edx,0x62
  41badf:	push   es
  41bae0:	pop    ebx
  41bae1:	and    DWORD PTR [edx],ebx
  41bae3:	repz push edi
  41bae5:	add    BYTE PTR [ecx-0x22],bh
  41bae8:	dec    esi
  41bae9:	rcr    dl,0xe9
  41baec:	dec    ebx
  41baed:	adc    DWORD PTR [ebx+0x7692bf35],esp
  41baf3:	push   ecx
  41baf4:	adc    eax,0x454b73e6
  41baf9:	mov    bl,BYTE PTR [ebx]
  41bafb:	jg     0x41baf2
  41bafd:	out    0x18,eax
  41baff:	fld    QWORD PTR [edi-0x45]
  41bb02:	sbb    ch,cl
  41bb04:	inc    esi
  41bb05:	iret   
  41bb06:	or     BYTE PTR [edi-0x12573f7d],0x38
  41bb0d:	adc    eax,ebp
  41bb0f:	inc    ecx
  41bb10:	hlt    
  41bb11:	inc    edi
  41bb12:	sub    bh,BYTE PTR [ebp+0x2b4c6124]
  41bb18:	xor    ebx,DWORD PTR [edx+0x27e146a2]
  41bb1e:	push   0x5c
  41bb20:	bound  edx,QWORD PTR [edi]
  41bb22:	add    esp,DWORD PTR [ebp+0x5f02482a]
  41bb28:	pushf  
  41bb29:	or     DWORD PTR [ebp-0x689d7e04],eax
  41bb2f:	mov    eax,ds:0xcfdac68d
  41bb34:	xchg   edx,eax
  41bb35:	imul   esi,ebx,0xc1a85b5e
  41bb3b:	mov    ds:0x1138d0d5,al
  41bb40:	imul   DWORD PTR [esi-0x5faf4a00]
  41bb46:	pop    ss
  41bb47:	mov    DWORD PTR [edx],esi
  41bb49:	lea    edx,[esi]
  41bb4b:	mov    cl,0x25
  41bb4d:	idiv   BYTE PTR [esi-0x49ca935]
  41bb53:	sbb    dh,BYTE PTR [ebx-0x7041adf4]
  41bb59:	dec    edx
  41bb5a:	repz cmp al,0xbd
  41bb5d:	sub    BYTE PTR [ebp+0x45],bl
  41bb60:	shr    DWORD PTR [edx+ebx*8],0x40
  41bb64:	cs jecxz 0x41bb91
  41bb67:	mov    ds:0x8e7da888,al
  41bb6c:	fsubr  DWORD PTR [edi-0x5d]
  41bb6f:	jb     0x41bbd0
  41bb71:	adc    ecx,DWORD PTR [ebx]
  41bb73:	mov    al,ds:0xdd313855
  41bb78:	psadbw mm3,QWORD PTR [edi]
  41bb7b:	xor    ecx,DWORD PTR [ebp+0x9133977]
  41bb81:	sub    al,0xdf
  41bb83:	or     edx,DWORD PTR [edx+0x19]
  41bb86:	je     0x41bbd5
  41bb88:	pop    ebx
  41bb89:	stos   BYTE PTR es:[edi],al
  41bb8a:	push   cs
  41bb8b:	das    
  41bb8c:	pop    ebx
  41bb8d:	sub    DWORD PTR [ecx],0x6438c311
  41bb93:	mov    ds:0x13cfd12,al
  41bb98:	dec    ecx
  41bb99:	popa   
  41bb9a:	mov    ah,0x64
  41bb9c:	xchg   ecx,eax
  41bb9d:	bound  esp,QWORD PTR [ecx-0x13]
  41bba0:	clc    
  41bba1:	ret    
  41bba2:	nop
  41bba3:	ror    DWORD PTR [ebx+esi*1-0x67],0x78
  41bba8:	inc    ebp
  41bba9:	clc    
  41bbaa:	stos   DWORD PTR es:[edi],eax
  41bbab:	test   eax,0x27f312c8
  41bbb0:	push   ebx
  41bbb1:	fcom   st(1)
  41bbb3:	popf   
  41bbb4:	call   0x9:0xbcf91ffe
  41bbbb:	push   ebx
  41bbbc:	popa   
  41bbbd:	push   ds
  41bbbe:	call   0x96c9afdb
  41bbc3:	add    BYTE PTR [ebx+ecx*4-0x50],dl
  41bbc7:	repnz stc 
  41bbc9:	xchg   edx,eax
  41bbca:	dec    ecx
  41bbcb:	nop
  41bbcc:	dec    ebp
  41bbcd:	mov    esi,0xafebda34
  41bbd2:	xchg   esp,eax
  41bbd3:	inc    esi
  41bbd4:	sbb    cl,BYTE PTR [ecx+0x14]
  41bbd7:	and    ebx,edi
  41bbd9:	fld    TBYTE PTR [esi]
  41bbdb:	mov    edx,0x8780bee0
  41bbe0:	std    
  41bbe1:	sbb    DWORD PTR [esi-0x5508f41],0x4902d994
  41bbeb:	push   0xdeabb264
  41bbf0:	or     BYTE PTR [edi],ah
  41bbf2:	cwde   
  41bbf3:	push   edx
  41bbf4:	sbb    BYTE PTR [edi-0x655295d2],bl
  41bbfa:	inc    ebx
  41bbfb:	add    edx,DWORD PTR [eax]
  41bbfd:	out    dx,eax
  41bbfe:	inc    ecx
  41bbff:	stos   BYTE PTR es:[edi],al
  41bc00:	mov    edi,?
  41bc02:	xor    dl,BYTE PTR [ecx]
  41bc04:	mov    DWORD PTR [esi+0x60],esi
  41bc07:	in     eax,dx
  41bc08:	dec    ecx
  41bc09:	mov    eax,ds:0xc5fe6d50
  41bc0e:	aam    0xac
  41bc10:	fadd   DWORD PTR [ebx+0x1da2d98d]
  41bc16:	out    0x9c,al
  41bc18:	xchg   esp,eax
  41bc19:	jae    0x41bc55
  41bc1b:	cmp    BYTE PTR [edx-0x49bf80c1],dh
  41bc21:	pop    edi
  41bc22:	je     0x41bc62
  41bc24:	push   eax
  41bc25:	fld    DWORD PTR [eax-0xb]
  41bc28:	rcr    BYTE PTR [edx+ebp*8+0x3ae01928],cl
  41bc2f:	add    eax,0x2398b9c4
  41bc34:	sub    eax,0xfc63fb2f
  41bc39:	jecxz  0x41bc64
  41bc3b:	adc    dl,bl
  41bc3d:	sub    dh,BYTE PTR [ecx-0x46]
  41bc40:	pusha  
  41bc41:	lea    esp,[edi+0x63]
  41bc44:	xchg   esi,eax
  41bc45:	cli    
  41bc46:	ss mov ecx,?
  41bc49:	pop    ebp
  41bc4a:	xor    DWORD PTR [edx-0x3864ed2c],esp
  41bc50:	xor    al,0x8c
  41bc52:	pop    esi
  41bc53:	js     0x41bc98
  41bc55:	aam    0xc1
  41bc57:	push   0x40a71de1
  41bc5c:	jmp    0x754d:0xdb84cb03
  41bc63:	push   es
  41bc64:	jg     0x41bc81
  41bc66:	push   ecx
  41bc67:	xor    al,0xec
  41bc69:	cmp    eax,0x420e6d76
  41bc6e:	nop
  41bc6f:	mov    bh,0xc3
  41bc71:	imul   ebx,edx,0xf19406f
  41bc77:	popf   
  41bc78:	dec    eax
  41bc79:	and    bl,0x15
  41bc7c:	or     eax,0xaed1543e
  41bc81:	pop    ebx
  41bc82:	mov    ds:0x13ad4ba7,eax
  41bc87:	leave  
  41bc88:	or     edx,edx
  41bc8a:	dec    esp
  41bc8b:	data16 test BYTE PTR [esi],bh
  41bc8e:	and    DWORD PTR [ecx+0x6c],eax
  41bc91:	(bad)  
  41bc92:	xor    al,0x76
  41bc94:	or     eax,0x4b346bce
  41bc99:	xor    al,0x8e
  41bc9b:	out    dx,al
  41bc9c:	dec    edi
  41bc9d:	shl    BYTE PTR [esi],cl
  41bc9f:	add    al,0x24
  41bca1:	sub    BYTE PTR [edx+eax*1+0x6f],ah
  41bca5:	aas    
  41bca6:	ds inc ebx
  41bca8:	out    0x6b,eax
  41bcaa:	arpl   cx,cx
  41bcac:	xlat   BYTE PTR ds:[ebx]
  41bcad:	push   ds
  41bcae:	icebp  
  41bcaf:	jmp    0x41bc73
  41bcb1:	je     0x41bcb4
  41bcb3:	jo     0x41bc86
  41bcb5:	(bad)  
  41bcb6:	adc    eax,0x6e697478
  41bcbb:	pop    esi
  41bcbc:	ins    DWORD PTR es:[edi],dx
  41bcbd:	xchg   edi,eax
  41bcbe:	aaa    
  41bcbf:	(bad)  
  41bcc0:	xor    al,0xe8
  41bcc2:	jb     0x41bc74
  41bcc4:	pop    ecx
  41bcc5:	jmp    0x41bc78
  41bcc7:	mov    al,0xa0
  41bcc9:	fwait
  41bcca:	cmp    edi,edi
  41bccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bccd:	adc    ebx,DWORD PTR [esp+edx*1]
  41bcd0:	dec    eax
  41bcd1:	sbb    DWORD PTR [edi+eiz*1-0x6d],ecx
  41bcd5:	inc    edx
  41bcd6:	dec    eax
  41bcd7:	xchg   esi,eax
  41bcd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcd9:	add    DWORD PTR [ecx-0x784ce68a],0xffdb2dea
  41bce3:	aam    0x3a
  41bce5:	(bad)  
  41bce6:	jae    0x41bd49
  41bce8:	push   esp
  41bce9:	sbb    cl,cl
  41bceb:	ins    DWORD PTR es:[edi],dx
  41bcec:	scas   eax,DWORD PTR es:[edi]
  41bced:	test   eax,0x14e68893
  41bcf2:	jg     0x41bd61
  41bcf4:	fisubr DWORD PTR ds:0x64bb6fdd
  41bcfa:	rcl    esp,0x45
  41bcfd:	and    esi,DWORD PTR [edi]
  41bcff:	stc    
  41bd00:	mov    esp,0x45cd5721
  41bd05:	cmc    
  41bd06:	aam    0xce
  41bd08:	xor    esi,DWORD PTR [ebx]
  41bd0a:	xor    BYTE PTR [ebp-0x26eb7b0c],bl
  41bd10:	call   0x1a2f:0x4a57d9fb
  41bd17:	fdivr  DWORD PTR [edx+0x42]
  41bd1a:	icebp  
  41bd1b:	push   0x18
  41bd1d:	jnp    0x41bd0e
  41bd1f:	ins    DWORD PTR es:[edi],dx
  41bd20:	into   
  41bd21:	cmp    DWORD PTR [ebx-0xbd4cd04],ebp
  41bd27:	sbb    BYTE PTR [esi-0x645670e5],ch
  41bd2d:	enter  0x5924,0xb1
  41bd31:	mov    ah,BYTE PTR [edi-0xbfe83a5]
  41bd37:	std    
  41bd38:	sti    
  41bd39:	mov    BYTE PTR [edi+0x43],ah
  41bd3c:	xor    al,0x72
  41bd3e:	adc    eax,0x997e2cf1
  41bd43:	sub    eax,0x8d101005
  41bd48:	test   BYTE PTR [edi],dh
  41bd4a:	mov    esp,0x9b808a5e
  41bd4f:	or     ecx,DWORD PTR [ecx-0x1828b1ac]
  41bd55:	push   ebx
  41bd56:	mov    eax,ds:0x383c502
  41bd5b:	inc    ebp
  41bd5c:	loope  0x41bdc6
  41bd5e:	scas   eax,DWORD PTR es:[edi]
  41bd5f:	int3   
  41bd60:	iret   
  41bd61:	or     DWORD PTR [edx],esp
  41bd63:	test   dl,bl
  41bd65:	leave  
  41bd66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd67:	pop    es
  41bd68:	cmp    esi,ebx
  41bd6a:	mov    ds:0xa1e30ff4,eax
  41bd6f:	sub    al,0x97
  41bd71:	dec    ecx
  41bd72:	and    al,0x93
  41bd74:	xor    al,0xe6
  41bd76:	mov    dl,ch
  41bd78:	push   esi
  41bd79:	cmp    dh,BYTE PTR [edx+0x7b]
  41bd7c:	add    al,0xb
  41bd7e:	sbb    DWORD PTR [edx+eiz*8+0x16],0x7b677ee9
  41bd86:	fst    QWORD PTR [esi+0x543e5b1e]
  41bd8c:	out    0x8a,al
  41bd8e:	(bad)  
  41bd8f:	iret   
  41bd90:	and    dl,al
  41bd92:	mov    edx,0xce53721b
  41bd97:	ins    BYTE PTR es:[edi],dx
  41bd98:	inc    esi
  41bd99:	jl     0x41bdd0
  41bd9b:	cmp    ebp,edi
  41bd9d:	mov    bh,0x23
  41bd9f:	push   0xd9bde9c6
  41bda4:	mov    BYTE PTR ds:0xa6b0bdc1,bl
  41bdaa:	fild   WORD PTR [esi+0x6a]
  41bdad:	fwait
  41bdae:	cmp    bl,ah
  41bdb0:	retf   0xb29c
  41bdb3:	stos   DWORD PTR es:[edi],eax
  41bdb4:	out    dx,al
  41bdb5:	xor    al,0xa1
  41bdb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdb8:	xchg   esp,eax
  41bdb9:	imul   esp,DWORD PTR [esi+0x4a],0xfffffff9
  41bdbd:	imul   ebx,DWORD PTR [ebx],0xffffff92
  41bdc0:	pop    ebx
  41bdc1:	jae    0x41be1a
  41bdc3:	fstp   QWORD PTR [edx+ecx*8-0x1a]
  41bdc7:	xchg   esi,eax
  41bdc8:	int    0xd2
  41bdca:	loope  0x41bdb0
  41bdcc:	pop    ecx
  41bdcd:	out    dx,eax
  41bdce:	pop    esi
  41bdcf:	and    ecx,DWORD PTR [edi]
  41bdd1:	xchg   DWORD PTR [edx-0x7c],edx
  41bdd4:	push   ebx
  41bdd5:	shl    DWORD PTR [ebx+eax*4-0x561c24b6],0x6d
  41bddd:	inc    ebx
  41bdde:	out    dx,eax
  41bddf:	sbb    al,0x30
  41bde1:	inc    edi
  41bde2:	mov    edx,0xd609647c
  41bde7:	lods   eax,DWORD PTR ds:[esi]
  41bde8:	icebp  
  41bde9:	jnp    0x41be4a
  41bdeb:	mov    ah,0xe2
  41bded:	retf   
  41bdee:	push   es
  41bdef:	add    ecx,DWORD PTR [edi-0x6494e251]
  41bdf5:	dec    esi
  41bdf6:	(bad)  
  41bdf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdf8:	mov    ecx,0x5029026d
  41bdfd:	or     al,BYTE PTR ds:0xc337b07d
  41be03:	push   cs
  41be04:	add    DWORD PTR [ebx+0x476f48],esp
  41be0a:	int3   
  41be0b:	jg     0x41be1e
  41be0d:	es jae 0x41bda9
  41be10:	inc    eax
  41be11:	cmc    
  41be12:	test   DWORD PTR [edi-0x4fcc72ae],esp
  41be18:	mov    ds:0xfb5febe7,al
  41be1d:	inc    eax
  41be1e:	dec    edi
  41be1f:	fwait
  41be20:	sar    BYTE PTR [esi-0x2855f419],1
  41be26:	sub    al,0x4e
  41be28:	aad    0x10
  41be2a:	add    al,0xc1
  41be2c:	iret   
  41be2d:	mov    ch,0xc9
  41be2f:	mov    edi,0xd1932960
  41be34:	fisttp WORD PTR [ebp+0x55]
  41be37:	fs inc ecx
  41be39:	or     BYTE PTR [edx],ch
  41be3b:	ss mov dl,0x4d
  41be3e:	and    al,0x2b
  41be40:	mov    edx,DWORD PTR [ebp+0x69]
  41be43:	mov    ds:0xebb15edb,eax
  41be48:	dec    edx
  41be49:	test   DWORD PTR [esi+esi*4-0x6d],eax
  41be4d:	mov    DWORD PTR [eax+0xa1563c],ebx
  41be53:	sub    ch,BYTE PTR [edx]
  41be55:	xor    ecx,DWORD PTR [esi+0x67c3a2cc]
  41be5b:	and    eax,0x784c1cd4
  41be60:	mov    ecx,0x23c41f2f
  41be65:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41be67:	dec    edx
  41be68:	or     edi,ecx
  41be6a:	fisubr DWORD PTR ds:0xfaf0e6b6
  41be70:	mul    BYTE PTR [edx+0x3b]
  41be73:	fld    DWORD PTR [edi-0x6899cd96]
  41be79:	sub    al,0xdc
  41be7b:	mov    bl,0xbe
  41be7d:	rol    esi,1
  41be7f:	hlt    
  41be80:	pop    es
  41be81:	stos   BYTE PTR es:[edi],al
  41be82:	cmp    esp,DWORD PTR [eax+esi*4-0x3717a66c]
  41be89:	lods   eax,DWORD PTR ds:[esi]
  41be8a:	xchg   ebx,eax
  41be8b:	inc    ebx
  41be8c:	mov    al,0xe4
  41be8e:	aam    0x67
  41be90:	mov    WORD PTR ds:0xa95d83b,ss
  41be96:	and    BYTE PTR [edx+eax*2-0xe],dl
  41be9a:	or     dl,BYTE PTR [esi-0x32e085e2]
  41bea0:	aad    0x7c
  41bea2:	arpl   WORD PTR [eax+ecx*8],sp
  41bea5:	lea    esp,[ecx-0x2ea3f36b]
  41beab:	repnz add BYTE PTR [ebx+0x43],ah
  41beaf:	push   es
  41beb0:	mov    cl,0x12
  41beb2:	loop   0x41be34
  41beb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beb5:	out    dx,al
  41beb6:	in     eax,dx
  41beb7:	into   
  41beb8:	fwait
  41beb9:	rol    ch,1
  41bebb:	and    DWORD PTR [esi+ebp*8-0x29],esi
  41bebf:	jae    0x41befb
  41bec1:	ds int3 
  41bec3:	gs jno 0x41be7d
  41bec6:	aas    
  41bec7:	xchg   ebx,eax
  41bec8:	inc    edx
  41bec9:	push   edx
  41beca:	int3   
  41becb:	cmp    ah,dh
  41becd:	xor    DWORD PTR ds:0x378d7170,edx
  41bed3:	cmp    bh,BYTE PTR [ebx+0x37a9e650]
  41bed9:	pusha  
  41beda:	test   eax,0x49484cc3
  41bedf:	stos   DWORD PTR es:[edi],eax
  41bee0:	pop    edi
  41bee1:	cmp    esi,DWORD PTR [ebx]
  41bee3:	cmp    al,0x11
  41bee5:	(bad)  
  41bee6:	or     BYTE PTR [esi+0x486c487b],bh
  41beec:	inc    ecx
  41beed:	sahf   
  41beee:	or     DWORD PTR [esi+0x24],esp
  41bef1:	push   ecx
  41bef2:	mov    eax,ds:0xc3eb81a
  41bef7:	mov    ah,0xb4
  41bef9:	ror    esi,cl
  41befb:	pop    ebp
  41befc:	push   esi
  41befd:	in     al,0xb2
  41beff:	xchg   ecx,eax
  41bf00:	sub    esi,ecx
  41bf02:	clc    
  41bf03:	cmp    dl,BYTE PTR [esi+0x57]
  41bf06:	sbb    DWORD PTR [eax],ebp
  41bf08:	xor    BYTE PTR ds:[edx-0xc],0xf0
  41bf0d:	pop    ss
  41bf0e:	ja     0x41bf2e
  41bf10:	cs dec ecx
  41bf12:	out    dx,eax
  41bf13:	jge    0x41bf34
  41bf15:	pop    ds
  41bf16:	fstp   TBYTE PTR [esi-0x69]
  41bf19:	add    BYTE PTR [ecx],bl
  41bf1b:	mov    ebx,0xb0a74b18
  41bf20:	inc    ecx
  41bf21:	int3   
  41bf22:	pop    es
  41bf23:	dec    esp
  41bf24:	ds in  al,0xbf
  41bf27:	or     BYTE PTR [edx],ah
  41bf29:	jmp    0xe8765636
  41bf2e:	mov    edi,DWORD PTR [ebx+0x717a97f2]
  41bf34:	dec    ebp
  41bf35:	xchg   esi,eax
  41bf36:	mov    bl,0xe1
  41bf38:	ss inc ebx
  41bf3a:	xor    al,0x99
  41bf3c:	or     ah,bh
  41bf3e:	mov    esp,0x5db8d178
  41bf43:	xor    esi,ecx
  41bf45:	call   0xc4c50825
  41bf4a:	and    BYTE PTR [edi+0x37c12334],0x7
  41bf51:	data16 fadd DWORD PTR [eax-0xb]
  41bf55:	push   ebp
  41bf56:	das    
  41bf57:	sub    eax,0x51804931
  41bf5c:	jmp    0x1432c0f3
  41bf61:	lahf   
  41bf62:	idiv   BYTE PTR [ebx-0x26]
  41bf65:	les    esi,FWORD PTR [eax+0x6441f4ec]
  41bf6b:	aaa    
  41bf6c:	xchg   edi,eax
  41bf6d:	xor    BYTE PTR [esi],bh
  41bf6f:	xor    BYTE PTR [eax+ebx*2-0x6f],cl
  41bf73:	gs xchg ebx,eax
  41bf75:	jae    0x41bf99
  41bf77:	(bad)  
  41bf78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf79:	inc    ebx
  41bf7a:	data16 mov ch,0xf1
  41bf7d:	fdivr  DWORD PTR [ecx-0x37]
  41bf80:	adc    BYTE PTR [ecx],cl
  41bf82:	or     BYTE PTR [ecx+0x4149721a],ch
  41bf88:	push   es
  41bf89:	cmp    DWORD PTR [ecx*4+0x44c42b93],ebx
  41bf90:	dec    edi
  41bf91:	(bad)  
  41bf92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf93:	(bad)  
  41bf94:	mov    ebx,0xaa4a58aa
  41bf99:	mov    edi,?
  41bf9b:	cmp    bh,BYTE PTR [edi-0x5cdbf505]
  41bfa1:	sbb    ebx,DWORD PTR [edi]
  41bfa3:	jno    0x41c01e
  41bfa5:	loop   0x41c00c
  41bfa7:	inc    eax
  41bfa8:	and    edx,edi
  41bfaa:	fistp  DWORD PTR [ecx+ecx*1+0x28]
  41bfae:	mov    esp,0xb54907d0
  41bfb3:	test   DWORD PTR [edx],ecx
  41bfb5:	leave  
  41bfb6:	into   
  41bfb7:	dec    eax
  41bfb8:	pop    es
  41bfb9:	push   esp
  41bfba:	daa    
  41bfbb:	jbe    0x41bf59
  41bfbd:	push   0xc3da0ace
  41bfc2:	call   eax
  41bfc4:	xchg   ecx,eax
  41bfc5:	jl     0x41bfc0
  41bfc7:	sbb    eax,0x2cab7904
  41bfcc:	popf   
  41bfcd:	jg     0x41bfe9
  41bfcf:	and    eax,0x6c9e7442
  41bfd4:	sbb    DWORD PTR fs:[eax+0x2802af90],eax
  41bfdb:	and    eax,0xb044c4ed
  41bfe0:	jl     0x41bff4
  41bfe2:	or     al,BYTE PTR [eax+edx*1]
  41bfe5:	inc    eax
  41bfe6:	push   esi
  41bfe7:	nop
  41bfe8:	shr    BYTE PTR ds:0xe81f2072,0xaf
  41bfef:	call   0xc684:0x9f94852d
  41bff6:	jle    0x41c004
  41bff8:	(bad)  
  41bff9:	push   edx
  41bffa:	mov    cl,BYTE PTR [edx-0x7928f6ea]
  41c000:	ror    eax,0xbd
  41c003:	push   edi
  41c004:	test   al,0x66
  41c006:	lea    esi,[edx-0x6a]
  41c009:	in     al,dx
  41c00a:	ss repnz add al,0x81
  41c00e:	je     0x41c009
  41c010:	sub    ecx,DWORD PTR [ebp+0x3bb9bf37]
  41c016:	sbb    eax,0x9238c042
  41c01b:	jg     0x41bfa5
  41c01d:	fild   QWORD PTR [eax+0x61b0e225]
  41c023:	shl    bh,cl
  41c025:	repz shr esp,0xa1
  41c029:	pop    ds
  41c02a:	dec    ebx
  41c02b:	shl    BYTE PTR [esi+ecx*8-0x7ac8153a],0x85
  41c033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c034:	outs   dx,DWORD PTR ds:[esi]
  41c035:	cmp    ecx,DWORD PTR [edi-0x331a7dbf]
  41c03b:	hlt    
  41c03c:	inc    ecx
  41c03d:	add    bh,dh
  41c03f:	mov    ch,0xfd
  41c041:	fisubr WORD PTR [esi+0x22]
  41c044:	shl    dl,cl
  41c046:	jno    0x41bff4
  41c048:	sub    eax,0xb1b29bd2
  41c04d:	pushf  
  41c04e:	fbstp  TBYTE PTR [ecx+0xb]
  41c051:	push   edi
  41c052:	jmp    0x40572aa7
  41c057:	dec    ebp
  41c058:	sbb    ch,BYTE PTR [ecx]
  41c05a:	sub    eax,0x3cb8a251
  41c05f:	or     cl,BYTE PTR ds:0x291bcb6f
  41c065:	inc    eax
  41c066:	ret    
  41c067:	push   ecx
  41c068:	in     eax,dx
  41c069:	adc    BYTE PTR [eax+0x48],0xdd
  41c06d:	push   bp
  41c06f:	dec    esi
  41c070:	push   esi
  41c071:	call   0x3c4a:0xcfbc1b63
  41c078:	pushf  
  41c079:	in     eax,0xb
  41c07b:	push   ebp
  41c07c:	adc    DWORD PTR [esi-0x1b269150],edi
  41c082:	outs   dx,DWORD PTR ds:[esi]
  41c083:	stc    
  41c084:	aam    0xc9
  41c086:	adc    DWORD PTR [ecx],eax
  41c088:	in     al,0x3a
  41c08a:	xchg   DWORD PTR [ecx],edi
  41c08c:	mov    eax,fs
  41c08e:	hlt    
  41c08f:	ins    BYTE PTR es:[edi],dx
  41c090:	ret    0xbd12
  41c093:	push   es
  41c094:	mov    bh,bh
  41c096:	jnp    0x41c04f
  41c098:	sbb    eax,0x407b8905
  41c09d:	cs push ds
  41c09f:	sub    dl,al
  41c0a1:	xchg   BYTE PTR [ecx+0x6],dl
  41c0a4:	nop
  41c0a5:	jns    0x41c118
  41c0a7:	xor    BYTE PTR [esi],dh
  41c0a9:	mov    ds:0x59a641ad,al
  41c0ae:	push   esp
  41c0af:	adc    eax,0x2191e94a
  41c0b4:	daa    
  41c0b5:	mov    ebx,0x1eb0e1a
  41c0ba:	(bad)  
  41c0bb:	cmp    bh,cl
  41c0bd:	adc    eax,0x7d5ace3d
  41c0c2:	nop
  41c0c3:	int3   
  41c0c4:	call   0xe8ff:0x2f27a17d
  41c0cb:	mov    bl,0xd9
  41c0cd:	mov    dl,0x8a
  41c0cf:	sbb    eax,0x6eb0cf9f
  41c0d4:	sbb    eax,0xcb021cda
  41c0d9:	push   eax
  41c0da:	add    eax,0xffffff97
  41c0dd:	xor    eax,0x2ef36db1
  41c0e2:	dec    ebp
  41c0e3:	inc    edi
  41c0e4:	test   eax,0x96cfea59
  41c0e9:	jb     0x41c095
  41c0eb:	ds mov edi,eax
  41c0ee:	cs add al,0x23
  41c0f1:	add    DWORD PTR [esi-0x43],0xffffffe4
  41c0f5:	mov    cl,0x71
  41c0f7:	pop    ecx
  41c0f8:	sub    eax,0xeab88d68
  41c0fd:	(bad)  
  41c0fe:	pop    ebx
  41c0ff:	aam    0x31
  41c101:	adc    eax,0x13da9d1b
  41c106:	mov    esp,0x8f9750ee
  41c10b:	cmc    
  41c10c:	pushw  0xd13a
  41c110:	mov    cl,0x9c
  41c112:	xlat   BYTE PTR ds:[ebx]
  41c113:	lods   al,BYTE PTR ds:[esi]
  41c114:	sub    DWORD PTR ds:0xed7edb8f,edi
  41c11a:	out    0x9a,eax
  41c11c:	cmp    al,0x3
  41c11e:	outs   dx,BYTE PTR ds:[esi]
  41c11f:	add    al,0xa
  41c121:	icebp  
  41c122:	paddd  mm6,QWORD PTR [ebx+0x3d7757c9]
  41c129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c12a:	outs   dx,BYTE PTR ds:[esi]
  41c12b:	je     0x41c0b6
  41c12d:	in     al,0x70
  41c12f:	dec    edi
  41c130:	les    edx,FWORD PTR [esi]
  41c132:	stos   DWORD PTR es:[edi],eax
  41c133:	or     ebx,DWORD PTR [ebx-0x20f988f1]
  41c139:	mov    al,0x3f
  41c13b:	xchg   ebp,eax
  41c13c:	inc    edx
  41c13d:	outs   dx,DWORD PTR ds:[esi]
  41c13e:	mov    ah,ah
  41c140:	bound  esp,QWORD PTR [eax-0x7831f218]
  41c146:	adc    ecx,DWORD PTR [ebx+eax*8-0x65850586]
  41c14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c14e:	xor    esp,DWORD PTR [ebp+0x58aec4b3]
  41c154:	retf   
  41c155:	jbe    0x41c0fa
  41c157:	es imul edi,edx,0x3f0477d0
  41c15e:	int    0x71
  41c160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c161:	(bad)  
  41c162:	mov    ch,0xd2
  41c164:	pop    ds
  41c165:	adc    dl,cl
  41c167:	add    eax,0xf377b34
  41c16c:	mov    esi,0x917fc8dd
  41c171:	mov    edi,0xe2d6e321
  41c176:	fwait
  41c177:	xlat   BYTE PTR ds:[ebx]
  41c178:	imul   edi,DWORD PTR [eax+0x1c],0x546683f4
  41c17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c180:	sahf   
  41c181:	add    eax,0x15fe45c5
  41c186:	pop    edi
  41c187:	adc    al,0x59
  41c189:	fcomp  QWORD PTR [edx]
  41c18b:	into   
  41c18c:	rcl    BYTE PTR [eax-0x14961b7e],cl
  41c192:	in     al,0x6e
  41c194:	jo     0x41c1df
  41c196:	imul   ebp,DWORD PTR [edx],0x18
  41c199:	outs   dx,DWORD PTR ds:[esi]
  41c19a:	rcl    BYTE PTR [ecx],cl
  41c19c:	and    eax,0x6d1e9b94
  41c1a1:	aas    
  41c1a2:	mov    esp,0x64dfb53c
  41c1a7:	mov    eax,ds:0x6541334c
  41c1ac:	inc    esp
  41c1ad:	sti    
  41c1ae:	ret    0x340a
  41c1b1:	push   es
  41c1b2:	mov    edx,0xf8930e75
  41c1b7:	add    eax,0x4fbdaaa2
  41c1bc:	mov    edx,DWORD PTR [edx-0x2d]
  41c1bf:	push   0xb74f9eb4
  41c1c4:	fcom   DWORD PTR [eax-0x7dd3dbd]
  41c1ca:	inc    eax
  41c1cb:	jge    0x41c225
  41c1cd:	pop    ss
  41c1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1cf:	(bad)  
  41c1d0:	fild   QWORD PTR [esp+eax*8+0x1f]
  41c1d4:	xchg   dl,cl
  41c1d6:	xchg   ebx,eax
  41c1d7:	fisub  DWORD PTR [esi]
  41c1d9:	push   cs
  41c1da:	xor    edx,DWORD PTR [esi+0x7b6ca2fd]
  41c1e0:	adc    al,BYTE PTR [eax]
  41c1e2:	pop    ds
  41c1e3:	jle    0x41c1db
  41c1e5:	icebp  
  41c1e6:	pop    ebx
  41c1e7:	dec    edx
  41c1e8:	das    
  41c1e9:	pop    es
  41c1ea:	sbb    DWORD PTR es:[esi],ecx
  41c1ed:	in     eax,dx
  41c1ee:	loopne 0x41c260
  41c1f0:	gs dec eax
  41c1f2:	mov    eax,ds:0x62c9213c
  41c1f7:	retf   0xe004
  41c1fa:	cmp    eax,0x7fa25e5c
  41c1ff:	push   ebp
  41c200:	xor    al,0xd
  41c202:	icebp  
  41c203:	sub    ebp,DWORD PTR [eax-0x6e]
  41c206:	jne    0x41c263
  41c208:	lds    esi,FWORD PTR [ebx+eiz*1+0x45fbe4ec]
  41c20f:	fld    DWORD PTR [ebx]
  41c211:	and    DWORD PTR [edx+0x42bd904],0xffffffc1
  41c218:	cmp    DWORD PTR [ecx+0x0],edi
  41c21b:	inc    ebx
  41c21c:	xchg   edx,eax
  41c21d:	shl    DWORD PTR [ebx+0x6b18adf4],cl
  41c223:	sti    
  41c224:	inc    ecx
  41c225:	pop    ebx
  41c226:	jb     0x41c229
  41c228:	rcr    edi,0x4a
  41c22b:	jmp    0xd642:0xe55f3ffd
  41c232:	pop    esp
  41c233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c234:	mov    ebx,0x68bdad4a
  41c239:	jno    0x41c22e
  41c23b:	xchg   DWORD PTR [ebx+edi*1-0x68],ebx
  41c23f:	scas   eax,DWORD PTR es:[edi]
  41c240:	sbb    DWORD PTR [ebx+0x48e1c34f],esp
  41c246:	sub    al,0x14
  41c248:	retf   
  41c249:	ins    BYTE PTR es:[edi],dx
  41c24a:	push   ebp
  41c24b:	cmp    al,0xe4
  41c24d:	mov    cs,WORD PTR [eax]
  41c24f:	jae    0x41c1e0
  41c251:	add    BYTE PTR [edx+0x79],bl
  41c254:	push   ds
  41c255:	pop    ds
  41c256:	icebp  
  41c257:	sub    edx,DWORD PTR [edi-0x7386f56c]
  41c25d:	mov    edi,0x236040fb
  41c262:	lea    edx,[ebx-0x48]
  41c265:	into   
  41c266:	xor    esi,DWORD PTR [esi+0x20]
  41c269:	sub    dh,bh
  41c26b:	adc    DWORD PTR [esp+ebp*4-0x50ddd775],0x5c
  41c273:	sub    DWORD PTR [ebp+0x7fe8ff4b],esp
  41c279:	push   edi
  41c27a:	rcl    esp,cl
  41c27c:	pop    esi
  41c27d:	mov    cl,0x6b
  41c27f:	cmc    
  41c280:	xchg   esi,eax
  41c281:	into   
  41c282:	mov    ds:0xeac06925,al
  41c287:	(bad)  
  41c288:	js     0x41c226
  41c28a:	call   0xd76e5fc0
  41c28f:	loope  0x41c2af
  41c291:	dec    eax
  41c292:	sbb    cl,dl
  41c294:	in     eax,dx
  41c295:	ds retf 
  41c297:	cmp    eax,ecx
  41c299:	or     eax,0x9196f308
  41c29e:	push   esp
  41c29f:	les    esi,FWORD PTR [ebp+0x2e621432]
  41c2a5:	idiv   BYTE PTR [ecx-0x2aafc871]
  41c2ab:	or     edi,edi
  41c2ad:	popa   
  41c2ae:	(bad)  
  41c2af:	out    dx,al
  41c2b0:	and    DWORD PTR [edi-0x163bbf4c],esi
  41c2b6:	lahf   
  41c2b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2b8:	in     al,0xf1
  41c2ba:	add    DWORD PTR [ebp+0x3603ad24],edi
  41c2c0:	mov    ebp,0xcc3b3614
  41c2c5:	mov    bl,bh
  41c2c7:	inc    ebp
  41c2c8:	jmp    0x41c2bb
  41c2ca:	push   cs
  41c2cb:	jno    0x41c2ce
  41c2cd:	fsubr  DWORD PTR [esp+eiz*8-0x63e6161f]
  41c2d4:	aaa    
  41c2d5:	xchg   ecx,eax
  41c2d6:	mov    ebx,0x4e5e4771
  41c2db:	or     ebx,edx
  41c2dd:	pop    ds
  41c2de:	adc    dl,cl
  41c2e0:	xor    al,0x5d
  41c2e2:	pop    ecx
  41c2e3:	popa   
  41c2e4:	push   ebx
  41c2e5:	push   ebp
  41c2e6:	xor    al,0xa7
  41c2e8:	sar    dh,cl
  41c2ea:	arpl   WORD PTR [ebp-0x1d],sp
  41c2ed:	mov    esp,0x400e74e1
  41c2f2:	(bad)  
  41c2f4:	mov    al,0x5c
  41c2f6:	pop    ebp
  41c2f7:	sub    al,0xd7
  41c2f9:	stos   DWORD PTR es:[edi],eax
  41c2fa:	in     eax,dx
  41c2fb:	jno    0x41c2cb
  41c2fd:	fidivr DWORD PTR [edx+eiz*1]
  41c300:	inc    eax
  41c301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c302:	xor    esi,edi
  41c304:	aas    
  41c305:	mov    fs,eax
  41c307:	mov    ecx,0x1e1243d8
  41c30c:	sahf   
  41c30d:	jecxz  0x41c317
  41c30f:	les    eax,FWORD PTR [ebp+0x3b]
  41c312:	pop    ecx
  41c313:	add    al,0x88
  41c315:	xchg   edx,eax
  41c316:	icebp  
  41c317:	push   eax
  41c318:	mov    esi,0x4fac85c0
  41c31d:	inc    edi
  41c31e:	repz test eax,0xb5391a8
  41c324:	out    dx,al
  41c325:	retf   0xe2ea
  41c328:	add    DWORD PTR [ebp+0x54efe208],edi
  41c32e:	out    dx,eax
  41c32f:	stc    
  41c330:	jl     0x41c33f
  41c332:	iret   
  41c333:	and    DWORD PTR [esi],esp
  41c335:	sbb    al,0xbd
  41c337:	mov    ds:0xa1b4854c,eax
  41c33c:	push   esp
  41c33d:	inc    ecx
  41c33e:	and    al,BYTE PTR [ebx+0x53]
  41c341:	jo     0x41c399
  41c343:	jmp    0x858d053c
  41c348:	test   al,0xd8
  41c34a:	jle    0x41c325
  41c34c:	and    dl,BYTE PTR [edx+0x1639590d]
  41c352:	sbb    al,0xa7
  41c354:	fisub  DWORD PTR [esi]
  41c356:	push   esi
  41c357:	xchg   ecx,eax
  41c358:	scas   al,BYTE PTR es:[edi]
  41c359:	arpl   ax,ax
  41c35b:	ins    DWORD PTR es:[edi],dx
  41c35c:	sbb    eax,0x1aa1aa27
  41c361:	dec    ebp
  41c362:	xor    eax,0x20cd987b
  41c367:	es sbb bl,ah
  41c36a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c36b:	popa   
  41c36c:	xor    dh,0x6b
  41c36f:	xchg   edi,eax
  41c370:	push   ds
  41c371:	or     DWORD PTR [ebp-0xd],edi
  41c374:	xlat   BYTE PTR ds:[ebx]
  41c375:	xchg   DWORD PTR [edi+0x50],edx
  41c378:	call   0xad18fe03
  41c37d:	sub    ecx,DWORD PTR ds:0xc0fc50b1
  41c383:	dec    ecx
  41c384:	das    
  41c385:	and    BYTE PTR [esp+edx*1],dl
  41c388:	das    
  41c389:	pop    esi
  41c38a:	fld    TBYTE PTR [eax+0x6d317a50]
  41c390:	xchg   DWORD PTR [edx+ebp*4],esi
  41c393:	lea    edx,[edx]
  41c395:	ret    0x4bfb
  41c398:	push   esi
  41c399:	int3   
  41c39a:	cmp    BYTE PTR [eax+esi*1+0x5a8f2347],ah
  41c3a1:	adc    BYTE PTR [edi+ecx*2-0x7eaeed38],al
  41c3a8:	pop    edx
  41c3a9:	xchg   DWORD PTR [edi-0x71],esi
  41c3ac:	inc    ebx
  41c3ad:	inc    edx
  41c3ae:	push   ds
  41c3af:	mov    esp,0xeb133e3f
  41c3b4:	into   
  41c3b5:	mov    bl,0xf1
  41c3b7:	mov    ss,WORD PTR [eax-0xdcbfe3a]
  41c3bd:	xor    al,0x59
  41c3bf:	(bad)  
  41c3c0:	nop
  41c3c1:	or     eax,DWORD PTR [ecx]
  41c3c3:	sub    bl,al
  41c3c5:	dec    edx
  41c3c6:	lods   al,BYTE PTR ds:[esi]
  41c3c7:	pop    esp
  41c3c8:	mov    ds,WORD PTR [ecx+0x5c]
  41c3cb:	pop    eax
  41c3cc:	int    0xda
  41c3ce:	cmp    eax,0x3c5f8d55
  41c3d3:	sbb    DWORD PTR [eax],0x49bfe6e4
  41c3d9:	int    0x7c
  41c3db:	mov    ch,0xb4
  41c3dd:	das    
  41c3de:	aas    
  41c3df:	call   0x7fda:0xd0da2fce
  41c3e6:	iret   
  41c3e7:	adc    eax,0xb8d72d9f
  41c3ec:	outs   dx,DWORD PTR ds:[esi]
  41c3ed:	sub    eax,DWORD PTR [edx]
  41c3ef:	adc    ch,BYTE PTR [ebx]
  41c3f1:	pop    edi
  41c3f2:	sub    eax,0xa4b482f8
  41c3f7:	adc    al,0xee
  41c3f9:	dec    edi
  41c3fa:	lods   al,BYTE PTR ds:[esi]
  41c3fb:	xchg   BYTE PTR [esi+0x1d4a966c],ch
  41c401:	sub    DWORD PTR [ecx+edi*8-0x491caa52],0xb02aeb4f
  41c40c:	mov    edi,0x7364cf53
  41c411:	jle    0x41c3b8
  41c413:	cmp    BYTE PTR [ebx],ch
  41c415:	pop    esp
  41c416:	fistp  DWORD PTR [esp+esi*8-0x5369c416]
  41c41d:	push   ecx
  41c41e:	test   bh,dl
  41c420:	dec    ebx
  41c421:	fwait
  41c422:	cmp    dh,BYTE PTR [edx+0x70]
  41c425:	cmp    al,0x7d
  41c427:	std    
  41c428:	nop
  41c429:	mov    cl,BYTE PTR [eax-0x44e6c30c]
  41c42f:	rcl    BYTE PTR [eax],1
  41c431:	dec    esi
  41c432:	push   ebx
  41c433:	mov    edx,0x8ec00890
  41c438:	or     eax,0x36d6cf6
  41c43d:	sub    eax,0x33a7f563
  41c442:	push   ecx
  41c443:	push   edi
  41c444:	mov    ch,0xb5
  41c446:	sar    DWORD PTR [ecx],0x54
  41c449:	sbb    bl,BYTE PTR [eax]
  41c44b:	imul   edi,DWORD PTR ds:0x1f6722e4,0x33adc205
  41c455:	inc    edi
  41c456:	xchg   ebx,eax
  41c457:	lahf   
  41c458:	pop    ss
  41c459:	ret    
  41c45a:	mov    esp,0x6ccf2c09
  41c45f:	scas   eax,DWORD PTR es:[edi]
  41c460:	sbb    eax,0xeea3e4e9
  41c465:	in     eax,0x8a
  41c467:	(bad)  
  41c468:	jmp    0x41c480
  41c46a:	push   edi
  41c46b:	je     0x41c417
  41c46d:	(bad)  
  41c46e:	stos   DWORD PTR es:[edi],eax
  41c46f:	adc    eax,0x282c2176
  41c474:	data16 aas 
  41c476:	paddusw mm1,QWORD PTR [ecx*8+0x459f9738]
  41c47e:	add    DWORD PTR [ecx-0x78],edx
  41c481:	jp     0x41c4d9
  41c483:	mov    ebx,0x9449343b
  41c488:	xchg   BYTE PTR [eax-0x33],bl
  41c48b:	inc    esp
  41c48c:	or     BYTE PTR [ecx],al
  41c48e:	enter  0x13ae,0x50
  41c492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c493:	loopne 0x41c47e
  41c495:	aaa    
  41c496:	dec    edx
  41c497:	xor    bl,BYTE PTR [edx+0xea6a91]
  41c49d:	daa    
  41c49e:	(bad)  
  41c49f:	fild   DWORD PTR [ecx+0x9ec8a7a]
  41c4a5:	mov    ebx,0xa6af18d1
  41c4aa:	lods   al,BYTE PTR ds:[esi]
  41c4ab:	cmp    dl,BYTE PTR [edx-0x4bec4d63]
  41c4b1:	pushaw 
  41c4b3:	aaa    
  41c4b4:	fisub  DWORD PTR [esi-0x4f4fc4a]
  41c4ba:	loope  0x41c539
  41c4bc:	clc    
  41c4bd:	jecxz  0x41c46c
  41c4bf:	pop    edi
  41c4c0:	inc    ebx
  41c4c1:	sahf   
  41c4c2:	cmp    ebp,DWORD PTR [edi]
  41c4c4:	imul   ecx,DWORD PTR [edx],0x8bf81296
  41c4ca:	mov    bh,0xe9
  41c4cc:	jecxz  0x41c4b4
  41c4ce:	push   0x4c
  41c4d0:	or     eax,0x802ae96
  41c4d5:	mov    ecx,0xdefc65bc
  41c4da:	dec    eax
  41c4db:	xchg   BYTE PTR [ecx-0x632c2f42],dh
  41c4e1:	inc    ebx
  41c4e2:	xchg   edi,eax
  41c4e3:	push   edi
  41c4e4:	mov    ah,BYTE PTR [eax-0x1b]
  41c4e7:	cmp    esp,DWORD PTR [ecx+0x28]
  41c4ea:	rcl    BYTE PTR [ebx+0x6d],0x61
  41c4ee:	lock (bad) 
  41c4f0:	mov    ebp,0xbc03385d
  41c4f5:	or     ah,BYTE PTR [esi+edx*4+0x1160a5f9]
  41c4fc:	cdq    
  41c4fd:	mov    esi,0x36859a90
  41c502:	ficom  WORD PTR [ecx+esi*2+0x48]
  41c506:	dec    ecx
  41c507:	xchg   ebx,eax
  41c508:	pop    esp
  41c509:	and    eax,0x44c953a3
  41c50e:	in     al,0xcc
  41c510:	aad    0xbf
  41c512:	mov    ebp,0xc6e8eb90
  41c517:	fmulp  st(7),st
  41c519:	inc    edi
  41c51a:	lahf   
  41c51b:	adc    BYTE PTR [ebx],cl
  41c51d:	(bad)  
  41c51e:	jmp    0xc15d:0x985310a2
  41c525:	test   WORD PTR [edx],si
  41c528:	lahf   
  41c529:	cmp    al,0x2e
  41c52b:	sub    ebx,DWORD PTR [eax]
  41c52d:	add    ch,ch
  41c52f:	ror    BYTE PTR [esi+0x14],1
  41c532:	sbb    al,ch
  41c534:	fst    QWORD PTR [ebp-0x4]
  41c537:	and    BYTE PTR ds:0x51cd18fe,0x7c
  41c53e:	mov    ch,0x4b
  41c540:	jl     0x41c4fa
  41c542:	add    BYTE PTR [ecx+0x7c53a322],0xa3
  41c549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c54a:	mov    BYTE PTR fs:[bp+si+0x7d],ah
  41c54f:	xor    ecx,esp
  41c551:	adc    dh,cl
  41c553:	outs   dx,BYTE PTR ds:[esi]
  41c554:	inc    edx
  41c555:	rcl    DWORD PTR [ebp+0x59df50e6],0x20
  41c55c:	inc    esp
  41c55d:	out    dx,al
  41c55e:	stos   BYTE PTR es:[edi],al
  41c55f:	cmp    BYTE PTR [eax],bl
  41c561:	bound  edx,QWORD PTR [esp+ebp*1+0x3f]
  41c565:	mov    ?,ecx
  41c567:	icebp  
  41c568:	push   ebx
  41c569:	add    DWORD PTR fs:[ebx-0x3f],0x3c
  41c56e:	ret    0xd4f5
  41c571:	fwait
  41c572:	and    DWORD PTR [ebx-0x1019eacb],ebx
  41c578:	jecxz  0x41c544
  41c57a:	ins    DWORD PTR es:[edi],dx
  41c57b:	(bad)  [edx-0x2dee58d8]
  41c581:	xchg   edx,eax
  41c582:	sahf   
  41c583:	pushf  
  41c584:	cs mov esp,0xd578abdc
  41c58a:	or     cl,BYTE PTR [esi+0x6c9e2df5]
  41c590:	adc    al,BYTE PTR [edx-0x6c8b787f]
  41c596:	add    bh,bh
  41c598:	jne    0x41c608
  41c59a:	dec    edi
  41c59b:	pop    ebp
  41c59c:	jl     0x41c594
  41c59e:	push   es
  41c59f:	ss stc 
  41c5a1:	fmul   DWORD PTR [esi]
  41c5a3:	jecxz  0x41c60c
  41c5a5:	jg     0x41c56b
  41c5a7:	add    esp,edi
  41c5a9:	or     ah,al
  41c5ab:	out    dx,eax
  41c5ac:	test   eax,0x8b8ef384
  41c5b1:	div    DWORD PTR [esi-0x8a84751]
  41c5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5b8:	stos   BYTE PTR es:[edi],al
  41c5b9:	xor    al,BYTE PTR [ebx-0x14499172]
  41c5bf:	mov    ah,0x70
  41c5c1:	mov    ebx,0x2b7ec30c
  41c5c6:	lahf   
  41c5c7:	pop    ds
  41c5c8:	sub    BYTE PTR [eax-0x13],0xdd
  41c5cc:	jbe    0x41c626
  41c5ce:	shl    BYTE PTR [edx],0x7f
  41c5d1:	les    esp,FWORD PTR [esi]
  41c5d3:	cli    
  41c5d4:	sbb    eax,0xeef0c2ef
  41c5d9:	mov    bh,0x7f
  41c5db:	or     edx,DWORD PTR [edi]
  41c5dd:	pop    ecx
  41c5de:	adc    al,0xd1
  41c5e0:	mov    ds:0x125102a7,eax
  41c5e5:	ds jmp 0x41c570
  41c5e8:	add    DWORD PTR ds:0x168bd391,esp
  41c5ee:	cli    
  41c5ef:	pop    eax
  41c5f0:	xor    eax,0x85ce9209
  41c5f5:	stc    
  41c5f6:	imul   DWORD PTR [ecx-0x113cb7f2]
  41c5fc:	push   esi
  41c5fd:	ins    DWORD PTR es:[edi],dx
  41c5fe:	mov    esi,0xb37f97b4
  41c603:	popa   
  41c604:	ja     0x41c613
  41c606:	fs test al,0x53
  41c609:	pusha  
  41c60a:	adc    esi,DWORD PTR [esi]
  41c60c:	xor    edx,edi
  41c60e:	cmp    edx,DWORD PTR [edx-0x38896c3]
  41c614:	std    
  41c615:	rcr    DWORD PTR [esi+0x1b],1
  41c618:	dec    ebp
  41c619:	lods   eax,DWORD PTR ds:[esi]
  41c61a:	(bad)  
  41c61b:	sbb    dh,dh
  41c61d:	inc    edx
  41c61e:	push   edi
  41c61f:	rcr    DWORD PTR [ebx-0x25],1
  41c622:	xchg   ebx,eax
  41c623:	sub    BYTE PTR [ebp-0x2e],dh
  41c626:	push   edx
  41c627:	cli    
  41c628:	addr16 jne 0x41c666
  41c62b:	(bad)  
  41c62c:	inc    edx
  41c62d:	add    BYTE PTR [edi+0x2e82bfd9],dl
  41c633:	add    ebp,DWORD PTR [edx+0x57]
  41c636:	add    eax,0x8c3185fb
  41c63b:	push   ss
  41c63c:	add    BYTE PTR [edi],0x93
  41c63f:	push   eax
  41c640:	inc    edx
  41c641:	(bad)  
  41c642:	pop    edi
  41c643:	sub    bl,ch
  41c645:	hlt    
  41c646:	out    0xda,eax
  41c648:	fmul   DWORD PTR [edx+0xb1751d2]
  41c64e:	stos   DWORD PTR es:[edi],eax
  41c64f:	das    
  41c650:	in     al,dx
  41c651:	addr16 std 
  41c653:	dec    edi
  41c654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c655:	pop    esp
  41c656:	icebp  
  41c657:	and    al,0x10
  41c659:	mov    edx,0x3dbe0e03
  41c65e:	hlt    
  41c65f:	jg     0x41c64a
  41c661:	popf   
  41c662:	shl    DWORD PTR [ebx],1
  41c664:	data16 (bad) 
  41c666:	mov    al,ds:0x393a961
  41c66b:	out    0x89,al
  41c66d:	sub    eax,0x8511151
  41c672:	mov    dh,0x5e
  41c674:	add    BYTE PTR [ecx],bh
  41c676:	sub    DWORD PTR [eax-0x41],ecx
  41c679:	xlat   BYTE PTR ds:[ebx]
  41c67a:	call   0xfd92:0xde962e7a
  41c681:	xor    dh,al
  41c683:	lods   al,BYTE PTR ds:[esi]
  41c684:	push   eax
  41c685:	stc    
  41c686:	test   BYTE PTR [ebx+0x36],dl
  41c689:	out    dx,eax
  41c68a:	sbb    cl,BYTE PTR [edx+0x4]
  41c68d:	es stos BYTE PTR es:[edi],al
  41c68f:	nop
  41c690:	dec    ecx
  41c691:	int3   
  41c692:	inc    edx
  41c693:	gs push ds
  41c695:	daa    
  41c696:	(bad)  
  41c697:	scas   eax,DWORD PTR es:[edi]
  41c698:	mul    ah
  41c69a:	pmulhw mm4,QWORD PTR [ebp+0x6f]
  41c69e:	sahf   
  41c69f:	mov    ds:0xfb2feddf,al
  41c6a4:	mov    BYTE PTR [ecx-0x22485503],cl
  41c6aa:	ds pusha 
  41c6ac:	and    BYTE PTR [edi+0x1],bh
  41c6af:	ret    0x616
  41c6b2:	sub    cl,BYTE PTR [ecx-0x6243d009]
  41c6b8:	nop
  41c6b9:	in     eax,dx
  41c6ba:	mov    eax,0xbb22c22b
  41c6bf:	clc    
  41c6c0:	jo     0x41c709
  41c6c2:	in     eax,dx
  41c6c3:	mov    edi,0x16914259
  41c6c8:	in     al,0x8
  41c6ca:	pop    ebp
  41c6cb:	add    eax,0x490806ee
  41c6d0:	xor    eax,0xd7d4082d
  41c6d5:	pop    ss
  41c6d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6d7:	lods   al,BYTE PTR ds:[esi]
  41c6d8:	or     al,0x95
  41c6da:	push   cs
  41c6db:	pop    ebx
  41c6dc:	or     DWORD PTR [edx+eax*1],eax
  41c6df:	pushf  
  41c6e0:	jmp    0xd3a4:0x9bb19969
  41c6e7:	dec    edi
  41c6e8:	inc    ecx
  41c6e9:	daa    
  41c6ea:	and    esi,DWORD PTR [ebx+0x36]
  41c6ed:	push   ss
  41c6ee:	pop    ebp
  41c6ef:	mov    al,cl
  41c6f1:	ds int 0x92
  41c6f4:	aaa    
  41c6f5:	pop    edi
  41c6f6:	add    BYTE PTR [esi+0x4ba927fb],dh
  41c6fc:	jnp    0x41c6d5
  41c6fe:	std    
  41c6ff:	push   edx
  41c700:	(bad)  
  41c701:	sbb    eax,0x20457e42
  41c706:	daa    
  41c707:	ins    DWORD PTR es:[edi],dx
  41c708:	adc    eax,edx
  41c70a:	(bad)  
  41c70b:	jmp    0xb7be:0x256c3225
  41c712:	mov    bl,0x1c
  41c714:	aad    0xf4
  41c716:	add    DWORD PTR [ecx],ebp
  41c718:	inc    edi
  41c719:	hlt    
  41c71a:	mov    edi,0x58604df7
  41c71f:	rcl    BYTE PTR [ebx-0xa],cl
  41c722:	pop    ebx
  41c723:	sbb    eax,0x9ce3a198
  41c728:	in     al,dx
  41c729:	mov    ah,0xf8
  41c72b:	sub    DWORD PTR fs:[eax-0x3d835de1],edi
  41c732:	aaa    
  41c733:	cmp    BYTE PTR [edi-0x52],al
  41c736:	push   ds
  41c737:	les    edx,FWORD PTR [eax-0x262d91bf]
  41c73d:	sub    eax,0xc681f2
  41c742:	data16 mov al,ds:0x6acac7fe
  41c748:	mov    BYTE PTR [eax+edi*2+0x42f194fb],0x60
  41c750:	aam    0xf1
  41c752:	cmp    edi,0xffffffae
  41c755:	jns    0x41c74b
  41c757:	aaa    
  41c758:	adc    eax,0x4ec4f32a
  41c75d:	sub    al,0x19
  41c75f:	jns    0x41c702
  41c761:	inc    ebx
  41c762:	sub    al,BYTE PTR [ecx-0x6650c83e]
  41c768:	popf   
  41c769:	mov    ah,0xa0
  41c76b:	xor    DWORD PTR ds:0x4fcfc2dc,ebp
  41c771:	or     DWORD PTR [edi+0x69359764],eax
  41c777:	xchg   ecx,eax
  41c778:	into   
  41c779:	push   ebx
  41c77a:	mov    ds:0x4242367d,eax
  41c77f:	jns    0x41c7ac
  41c781:	add    ebx,DWORD PTR [esi-0x17]
  41c784:	gs lock mov bl,0x52
  41c788:	test   DWORD PTR [edx-0xb],eax
  41c78b:	sti    
  41c78c:	dec    ebp
  41c78d:	das    
  41c78e:	enter  0xe345,0xac
  41c792:	arpl   WORD PTR [esi+ecx*4-0x1],cx
  41c796:	dec    ebx
  41c797:	xor    al,BYTE PTR [edx+0x11]
  41c79a:	push   ebp
  41c79b:	out    dx,al
  41c79c:	retf   0xa7dc
  41c79f:	mov    BYTE PTR [esp+eiz*4],0x59
  41c7a3:	mov    al,0xe8
  41c7a5:	test   al,0x53
  41c7a7:	inc    eax
  41c7a8:	popf   
  41c7a9:	or     ah,cl
  41c7ab:	adc    DWORD PTR [ebp+0x50],esi
  41c7ae:	outs   dx,DWORD PTR ds:[esi]
  41c7af:	jg     0x41c7a0
  41c7b1:	mov    cl,0xdf
  41c7b3:	scas   eax,DWORD PTR es:[edi]
  41c7b4:	ins    DWORD PTR es:[edi],dx
  41c7b5:	les    esi,FWORD PTR [edi+edi*2+0x77796854]
  41c7bc:	pop    esi
  41c7bd:	add    eax,eax
  41c7bf:	sti    
  41c7c0:	xchg   esi,eax
  41c7c1:	aas    
  41c7c2:	imul   edx,DWORD PTR [esi-0x5f],0x1f
  41c7c6:	nop
  41c7c7:	mov    esp,0x22c6ed3c
  41c7cc:	rcl    BYTE PTR [ebx-0x638c0387],1
  41c7d2:	push   0x4c
  41c7d4:	mov    eax,0xfe475b4a
  41c7d9:	mul    BYTE PTR [ebp-0x42]
  41c7dc:	jno    0x41c831
  41c7de:	mov    BYTE PTR [edx-0x21c988f8],0x54
  41c7e5:	jmp    0x85bb4a15
  41c7ea:	push   ebx
  41c7eb:	fwait
  41c7ec:	ret    
  41c7ed:	ja     0x350d06b5
  41c7f3:	daa    
  41c7f4:	jg     0x41c7e2
  41c7f6:	sar    BYTE PTR [ecx+0x7329a0c1],0xf9
  41c7fd:	imul   edx,ebx,0x72
  41c800:	aad    0x56
  41c802:	ins    BYTE PTR es:[edi],dx
  41c803:	inc    ecx
  41c804:	ss jmp 0x40abdc54
  41c80a:	retf   0x313c
  41c80d:	adc    ebx,DWORD PTR [edx]
  41c80f:	or     esi,0x26556ea2
  41c815:	enter  0xc460,0x7b
  41c819:	pop    edx
  41c81a:	stos   BYTE PTR es:[edi],al
  41c81b:	pop    esi
  41c81c:	inc    ecx
  41c81d:	mov    ah,0xf6
  41c81f:	add    ebx,DWORD PTR [ebx]
  41c821:	jae    0x41c885
  41c823:	adc    BYTE PTR cs:[eax],ch
  41c826:	(bad)  
  41c827:	repz sub ecx,DWORD PTR [edx+esi*8]
  41c82b:	dec    ebx
  41c82c:	adc    BYTE PTR [edi-0x2c3e340],ch
  41c832:	adc    BYTE PTR [edi-0x66e05ad6],dl
  41c838:	nop
  41c839:	xchg   BYTE PTR [edx],dh
  41c83b:	test   eax,0x5729e406
  41c840:	data16 jle 0x41c877
  41c843:	push   edi
  41c844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c845:	rcl    esp,0x14
  41c848:	and    bh,BYTE PTR [esi+ecx*2+0x68adbc1b]
  41c84f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c850:	and    eax,0x37c98e99
  41c855:	mov    ebp,0x3fc18658
  41c85a:	jnp    0x41c821
  41c85c:	cmp    al,0x23
  41c85e:	add    eax,0x792ac19b
  41c863:	add    DWORD PTR [ebx-0x6d92e5a2],ebp
  41c869:	dec    edx
  41c86a:	pusha  
  41c86b:	mov    bh,0xbe
  41c86d:	cmp    eax,0xf8d1ba14
  41c872:	mov    bl,0x6
  41c874:	idiv   DWORD PTR [ebp+0x53]
  41c877:	push   edx
  41c878:	or     ch,al
  41c87a:	pop    esp
  41c87b:	push   esi
  41c87c:	mov    ebp,0x402ac8f5
  41c881:	je     0x41c869
  41c883:	push   eax
  41c884:	dec    ebx
  41c885:	xor    BYTE PTR [edx-0x6c96871b],0x96
  41c88c:	cmp    BYTE PTR ds:0x3535ba1b,bl
  41c892:	push   edi
  41c893:	ret    0x2fd2
  41c896:	addr16 emms 
  41c899:	ret    0x1177
  41c89c:	cli    
  41c89d:	(bad)  
  41c89f:	jns    0x41c911
  41c8a1:	xor    eax,0xbc19498d
  41c8a6:	jg     0x41c828
  41c8a8:	sar    DWORD PTR [edx],cl
  41c8aa:	pushf  
  41c8ab:	pop    es
  41c8ac:	cmp    dh,BYTE PTR [eax]
  41c8ae:	je     0x41c8aa
  41c8b0:	mov    ecx,DWORD PTR [ebx+edx*1+0x7a]
  41c8b4:	mov    dl,0x39
  41c8b6:	enter  0x6d9,0x16
  41c8ba:	das    
  41c8bb:	mov    ebp,0x59bd1676
  41c8c0:	ds stos DWORD PTR es:[edi],eax
  41c8c2:	(bad)  
  41c8c3:	in     al,dx
  41c8c4:	pop    edx
  41c8c5:	ss jo  0x41c87f
  41c8c8:	dec    edi
  41c8c9:	jbe    0x41c8b7
  41c8cb:	fdivr  DWORD PTR [ecx+0x6582030f]
  41c8d1:	(bad)  
  41c8d2:	sbb    DWORD PTR [ebp+0x4],edi
  41c8d5:	in     al,dx
  41c8d6:	aam    0xad
  41c8d8:	or     bh,BYTE PTR [esi+0x3a]
  41c8db:	addr16 std 
  41c8dd:	push   ds
  41c8de:	adc    al,0x4b
  41c8e0:	mov    bl,0x21
  41c8e2:	add    esi,DWORD PTR [esp+ebp*1+0x6d]
  41c8e6:	cmp    dl,cl
  41c8e8:	ins    BYTE PTR es:[edi],dx
  41c8e9:	sar    edi,0x13
  41c8ec:	test   ecx,0xf4886c8d
  41c8f2:	inc    esi
  41c8f3:	gs sub eax,0xa7ba69ef
  41c8f9:	dec    esp
  41c8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8fb:	mov    bl,bl
  41c8fd:	gs inc edi
  41c8ff:	gs mov cl,0x2a
  41c902:	ja     0x41c88b
  41c904:	scas   eax,DWORD PTR es:[edi]
  41c905:	jno    0x41c96d
  41c907:	sahf   
  41c908:	rol    DWORD PTR [ecx+0x20a45027],0x34
  41c90f:	into   
  41c910:	add    eax,0x8fe5c840
  41c915:	clc    
  41c916:	iret   
  41c917:	ins    BYTE PTR es:[edi],dx
  41c918:	shl    DWORD PTR [ecx],0x1a
  41c91b:	stc    
  41c91c:	adc    esi,DWORD PTR [eax-0x3]
  41c91f:	lods   eax,DWORD PTR cs:[esi]
  41c921:	stc    
  41c922:	inc    ebp
  41c923:	aaa    
  41c924:	stc    
  41c925:	in     eax,0x28
  41c927:	popf   
  41c928:	xchg   ecx,eax
  41c929:	xchg   ecx,eax
  41c92a:	call   FWORD PTR ds:0x6fee65e8
  41c930:	mov    bh,0x8f
  41c932:	mov    cl,ch
  41c934:	adc    bl,bl
  41c936:	add    dl,dh
  41c938:	pop    esp
  41c939:	(bad)  
  41c93a:	fistp  DWORD PTR [ebx-0x1f]
  41c93d:	xor    esi,eax
  41c93f:	(bad)  
  41c940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c941:	in     al,dx
  41c942:	pop    edx
  41c943:	jmp    0x6dd7:0x3a38af5
  41c94a:	in     ax,0xe7
  41c94d:	pop    esi
  41c94e:	js     0x41c901
  41c950:	pop    edi
  41c951:	mov    edx,0xfbb3a4d4
  41c956:	jmp    0x437e:0x588ac626
  41c95d:	sbb    bl,ah
  41c95f:	mov    WORD PTR [edx-0x6581ef34],fs
  41c965:	mov    ds:0x93ce31c,eax
  41c96a:	and    DWORD PTR [edi],0xc771109d
  41c970:	add    al,0x85
  41c972:	adc    al,dl
  41c974:	add    eax,0x878ae541
  41c979:	ja     0x41c924
  41c97b:	and    DWORD PTR [ebx],edx
  41c97d:	scas   al,BYTE PTR es:[edi]
  41c97e:	jmp    0xa27b:0x19c2ed4f
  41c985:	xchg   BYTE PTR [esi+0x393797c],ah
  41c98b:	adc    cl,ch
  41c98d:	adc    al,0xf6
  41c98f:	add    al,0x7c
  41c991:	mov    bh,0xe3
  41c993:	xchg   BYTE PTR [esi+0x63],dl
  41c996:	ss dec ebp
  41c998:	and    cl,BYTE PTR [edx+0x24d6b8dc]
  41c99e:	lock lods eax,DWORD PTR es:[esi]
  41c9a1:	and    al,0xe2
  41c9a3:	hlt    
  41c9a4:	pop    ds
  41c9a5:	pop    es
  41c9a6:	mov    edi,DWORD PTR es:[edx-0x43]
  41c9aa:	dec    ecx
  41c9ab:	xchg   DWORD PTR [esi-0x6c537996],eax
  41c9b1:	sbb    eax,0x2722abfe
  41c9b6:	lahf   
  41c9b7:	aad    0x2e
  41c9b9:	mov    DWORD PTR [edx+0x61],ebx
  41c9bc:	fcmove st,st(4)
  41c9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9bf:	lds    ecx,FWORD PTR [eax-0x2f]
  41c9c2:	sub    esp,ecx
  41c9c4:	mov    ebx,ecx
  41c9c6:	repz int3 
  41c9c8:	jns    0x41c9bd
  41c9ca:	and    BYTE PTR [edx],bl
  41c9cc:	ins    BYTE PTR es:[edi],dx
  41c9cd:	jmp    0x34f9:0x8b7a8f90
  41c9d4:	cmp    ebp,esp
  41c9d6:	scas   eax,DWORD PTR es:[edi]
  41c9d7:	fnstcw WORD PTR [eax-0x5ab2932]
  41c9dd:	loopne 0x41c973
  41c9df:	inc    eax
  41c9e0:	dec    edx
  41c9e1:	repz mov ecx,0x9f523a7f
  41c9e7:	retf   0x544
  41c9ea:	in     al,0xd6
  41c9ec:	dec    edx
  41c9ed:	or     eax,0x5aa93cc7
  41c9f2:	jmp    0x41c9f1
  41c9f4:	jns    0x41c99d
  41c9f6:	loopne 0x41c986
  41c9f8:	retf   
  41c9f9:	test   al,0x4a
  41c9fb:	test   BYTE PTR [ecx-0x5b],0xc4
  41c9ff:	test   DWORD PTR [ebx+0x5409e260],esi
  41ca05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca06:	es clc 
  41ca08:	sub    ebx,DWORD PTR [edi]
  41ca0a:	clc    
  41ca0b:	inc    edi
  41ca0c:	add    BYTE PTR [ebp-0x67],bh
  41ca0f:	cmp    ah,BYTE PTR [ebp+0x13bbf00e]
  41ca15:	dec    esp
  41ca16:	jl     0xb78bd54b
  41ca1c:	adc    eax,0xe1c3015e
  41ca22:	xchg   edx,eax
  41ca23:	cmp    al,0x9b
  41ca25:	dec    edi
  41ca26:	jne    0x41ca74
  41ca28:	push   ds
  41ca29:	rcl    BYTE PTR es:[esi+eax*4-0x418a2894],1
  41ca31:	cli    
  41ca32:	fdivp  st(4),st
  41ca34:	mov    dl,0xc9
  41ca36:	push   ss
  41ca37:	(bad)  
  41ca38:	push   ecx
  41ca39:	add    dh,ch
  41ca3b:	js     0x41ca2f
  41ca3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca3f:	retf   0xe395
  41ca42:	dec    edx
  41ca43:	pop    edx
  41ca44:	xchg   edi,eax
  41ca45:	push   eax
  41ca46:	daa    
  41ca47:	pushf  
  41ca48:	int    0x1d
  41ca4a:	dec    eax
  41ca4b:	cmp    al,0x70
  41ca4d:	jl     0x41cabf
  41ca4f:	sbb    al,0xce
  41ca51:	mov    ecx,0x9390246d
  41ca56:	xchg   edx,eax
  41ca57:	sub    DWORD PTR [ebx-0xe045dd3],0x4d
  41ca5e:	xchg   BYTE PTR [ebp+edi*8+0x13],bl
  41ca62:	and    cl,BYTE PTR [ebp+0x7cc9423e]
  41ca68:	lock (bad) 
  41ca6b:	dec    esi
  41ca6c:	xor    BYTE PTR [edx-0x2f],ch
  41ca6f:	adc    al,bh
  41ca71:	and    al,0x67
  41ca73:	and    esi,edi
  41ca75:	pop    es
  41ca76:	and    eax,eax
  41ca78:	fcomp  st(6)
  41ca7a:	push   0xc6a4592d
  41ca7f:	cmp    BYTE PTR [ebp-0x54],bh
  41ca82:	rcl    BYTE PTR [ecx+0x3ba65a37],1
  41ca88:	lea    esi,[edx]
  41ca8a:	or     ebp,DWORD PTR [ebx+ebp*8-0x55]
  41ca8e:	xor    BYTE PTR [ebp-0x80],dl
  41ca91:	xchg   esp,eax
  41ca92:	pop    ss
  41ca93:	push   esp
  41ca94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca95:	loope  0x41cb01
  41ca97:	gs and al,0x90
  41ca9a:	jb     0x41cada
  41ca9c:	push   ebx
  41ca9d:	and    eax,0x7d75c6d0
  41caa2:	or     eax,0x89e281ea
  41caa8:	call   0x74101a1f
  41caad:	cdq    
  41caae:	sbb    al,0x85
  41cab0:	cli    
  41cab1:	arpl   WORD PTR [ecx+esi*8+0x664b30f2],bx
  41cab8:	lea    edi,[edx]
  41caba:	mov    ebx,0x16886f32
  41cabf:	mov    ebp,DWORD PTR [ebx]
  41cac1:	sbb    ebp,DWORD PTR [edx+0x6a]
  41cac4:	xchg   edi,eax
  41cac5:	test   DWORD PTR [edx-0x3e9715fa],0x872106af
  41cacf:	inc    ebp
  41cad0:	das    
  41cad1:	dec    ebp
  41cad2:	inc    eax
  41cad3:	jl     0x41caac
  41cad5:	dec    eax
  41cad6:	lock jle 0x41ca60
  41cad9:	adc    eax,0xfd1f408c
  41cade:	or     DWORD PTR [edx],edi
  41cae0:	or     ebp,ecx
  41cae2:	ins    BYTE PTR es:[edi],dx
  41cae3:	bound  edx,QWORD PTR [edx+edi*2-0x4e]
  41cae7:	xchg   ebx,eax
  41cae8:	cmp    eax,0x7a968fc3
  41caed:	mov    ds:0xc600e93e,al
  41caf2:	adc    edi,DWORD PTR [esp+edi*1-0x26]
  41caf6:	pop    ebx
  41caf7:	mov    ah,0x1c
  41caf9:	std    
  41cafa:	push   ebx
  41cafb:	xchg   edx,eax
  41cafc:	lahf   
  41cafd:	sbb    esp,DWORD PTR gs:[esi-0x1d101b35]
  41cb04:	mov    ch,0x41
  41cb06:	mov    bl,0x2d
  41cb08:	push   edi
  41cb09:	cwde   
  41cb0a:	push   edx
  41cb0b:	loope  0x41cab4
  41cb0d:	xor    eax,0x78b0af03
  41cb12:	jno    0x41cadd
  41cb14:	cmp    edx,ebx
  41cb16:	xchg   ebx,eax
  41cb17:	mov    eax,0xdb7d4aa
  41cb1c:	push   edi
  41cb1d:	and    ah,BYTE PTR [ecx+0xd]
  41cb20:	in     al,dx
  41cb21:	xor    al,0x9f
  41cb23:	rcr    cl,cl
  41cb25:	mov    esp,0x5843519d
  41cb2a:	push   ebp
  41cb2b:	xchg   dl,dh
  41cb2d:	stc    
  41cb2e:	stc    
  41cb2f:	fld    DWORD PTR [eax+0x3d]
  41cb32:	dec    esi
  41cb33:	je     0x41cabe
  41cb35:	mov    fs,WORD PTR [esi+0x4068600b]
  41cb3b:	dec    ebp
  41cb3c:	mov    esi,0x473e5b73
  41cb41:	int    0xf0
  41cb43:	push   eax
  41cb44:	iret   
  41cb45:	inc    eax
  41cb46:	pop    ss
  41cb47:	into   
  41cb48:	inc    esi
  41cb49:	ss in  eax,0x66
  41cb4c:	lods   al,BYTE PTR ds:[esi]
  41cb4d:	enter  0x8e66,0xd7
  41cb51:	lahf   
  41cb52:	lds    ebp,FWORD PTR [edx-0x10]
  41cb55:	sub    BYTE PTR [eax+0x634ef638],cl
  41cb5b:	xor    al,0x62
  41cb5d:	std    
  41cb5e:	jno    0x41cafd
  41cb60:	mov    ah,0x28
  41cb62:	adc    eax,0xe7d54b5d
  41cb67:	pop    ecx
  41cb68:	mov    ebx,DWORD PTR [ebp-0x7a22037b]
  41cb6e:	fbstp  TBYTE PTR [eax]
  41cb70:	addr16 dec bx
  41cb73:	inc    ecx
  41cb74:	mov    dl,0x77
  41cb76:	push   esi
  41cb77:	iret   
  41cb78:	mov    ah,0x4d
  41cb7a:	aaa    
  41cb7b:	(bad)  
  41cb7c:	stc    
  41cb7d:	pusha  
  41cb7e:	ficom  WORD PTR [ebx+0x72]
  41cb81:	sub    edi,DWORD PTR [ebx-0xeda2a7]
  41cb87:	clc    
  41cb88:	rcr    DWORD PTR [edi],1
  41cb8a:	hlt    
  41cb8b:	cwde   
  41cb8c:	sbb    ch,BYTE PTR [edi-0x4e6dba11]
  41cb92:	xchg   ch,ch
  41cb94:	xor    BYTE PTR [ecx],dl
  41cb96:	test   BYTE PTR cs:[edi],0x8f
  41cb9a:	sub    BYTE PTR [ebp+0x2d5e329],ch
  41cba0:	and    ebx,DWORD PTR [ebx+0x1a]
  41cba3:	addr16 jo 0x41cb69
  41cba6:	aaa    
  41cba7:	inc    esi
  41cba8:	loop   0x41cb67
  41cbaa:	add    edx,DWORD PTR [ecx+0x51]
  41cbad:	aaa    
  41cbae:	in     al,dx
  41cbaf:	mov    eax,0x59d036ca
  41cbb4:	xor    al,0x9b
  41cbb6:	pop    es
  41cbb7:	sbb    eax,0xc0007710
  41cbbc:	test   ah,0xbd
  41cbbf:	and    DWORD PTR [ecx],eax
  41cbc1:	xor    al,0xcc
  41cbc3:	jmp    0x9bc42aa4
  41cbc8:	test   al,0xd8
  41cbca:	or     ebx,esp
  41cbcc:	arpl   ax,bx
  41cbce:	fidivr DWORD PTR [ebp-0x69122f1f]
  41cbd4:	inc    esi
  41cbd5:	inc    esi
  41cbd6:	pop    edi
  41cbd7:	pop    es
  41cbd8:	scas   eax,DWORD PTR es:[edi]
  41cbd9:	inc    eax
  41cbda:	loop   0x41cc1f
  41cbdc:	mov    ds:0x3998e8b9,al
  41cbe1:	bound  edx,QWORD PTR [esi+0xe]
  41cbe4:	fnsave ds:0x8f04a3b4
  41cbea:	jb     0x41cb8f
  41cbec:	mov    ebp,?
  41cbee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbef:	pop    eax
  41cbf0:	mov    ch,0x16
  41cbf2:	jns    0x41cbf3
  41cbf4:	(bad)  
  41cbf5:	mov    esp,0xbca421d3
  41cbfa:	add    BYTE PTR [ecx+0x5a071fde],ah
  41cc00:	ins    DWORD PTR es:[edi],dx
  41cc01:	sub    ebp,DWORD PTR [ecx]
  41cc03:	jecxz  0x41cb99
  41cc05:	push   ss
  41cc06:	jnp    0x41cc60
  41cc08:	das    
  41cc09:	ret    
  41cc0a:	repz stc 
  41cc0c:	les    ecx,FWORD PTR [edi+ebx*4+0x5051feb5]
  41cc13:	mov    DWORD PTR [ecx+0x185e48d4],0x8abeee34
  41cc1d:	jmp    0x73161b62
  41cc22:	stc    
  41cc23:	or     bx,0xfff9
  41cc27:	icebp  
  41cc28:	cld    
  41cc29:	jno    0x41cc8e
  41cc2b:	inc    ebp
  41cc2c:	mov    esp,0xf2a7d7f
  41cc31:	add    al,0x20
  41cc33:	xchg   ebp,eax
  41cc34:	pop    es
  41cc35:	inc    edx
  41cc36:	xor    eax,0x5dfde69c
  41cc3b:	xor    al,0x9e
  41cc3d:	push   0xffffffca
  41cc3f:	das    
  41cc40:	inc    eax
  41cc41:	in     al,0xdf
  41cc43:	sub    ecx,edx
  41cc45:	mov    ch,0x6
  41cc47:	lds    edi,FWORD PTR cs:[esi+0x15]
  41cc4b:	popa   
  41cc4c:	in     al,dx
  41cc4d:	cmp    edi,DWORD PTR [esi-0x18c00111]
  41cc53:	outs   dx,DWORD PTR ds:[esi]
  41cc54:	pop    ds
  41cc55:	outs   dx,BYTE PTR ds:[esi]
  41cc56:	retfw  0xea98
  41cc5a:	or     BYTE PTR [ebx],ah
  41cc5c:	fld1   
  41cc5e:	fyl2x  
  41cc60:	scas   al,BYTE PTR es:[edi]
  41cc61:	push   ecx
  41cc62:	ins    BYTE PTR es:[edi],dx
  41cc63:	pop    edi
  41cc64:	in     al,dx
  41cc65:	and    bl,dl
  41cc67:	jecxz  0x41ccd8
  41cc69:	or     esi,DWORD PTR [ebx-0x3bc928a6]
  41cc6f:	mov    gs,WORD PTR [edi]
  41cc71:	xor    eax,0xda4de38a
  41cc76:	mov    al,ds:0x442a998f
  41cc7b:	mov    ds:0x3defd639,al
  41cc80:	dec    ecx
  41cc81:	inc    ebx
  41cc82:	mov    dh,0x65
  41cc84:	imul   edx,eax,0x15d773b7
  41cc8a:	mov    ebp,0xfbd248ca
  41cc8f:	push   eax
  41cc90:	arpl   WORD PTR [edx-0x44c9e708],sp
  41cc96:	mov    bh,0x41
  41cc98:	and    cl,BYTE PTR [edx+0x35763a87]
  41cc9e:	lahf   
  41cc9f:	xor    ecx,DWORD PTR [ecx+ebx*2+0x1]
  41cca3:	inc    edi
  41cca4:	dec    eax
  41cca5:	jne    0x41cc6d
  41cca7:	(bad)  
  41cca8:	cmp    bl,al
  41ccaa:	fmulp  st(7),st
  41ccac:	and    ebx,DWORD PTR [eax+0x59]
  41ccaf:	jecxz  0x41cc8f
  41ccb1:	xsaves [edi-0x3fc25317]
  41ccb8:	dec    esi
  41ccb9:	jmp    0x41cd19
  41ccbb:	mov    edx,0x48ef7150
  41ccc0:	mov    ds:0xe9b7ed54,eax
  41ccc5:	sbb    bh,BYTE PTR [edi+esi*2-0x6]
  41ccc9:	cmp    DWORD PTR cs:[ebx],edi
  41cccc:	sahf   
  41cccd:	hlt    
  41ccce:	mov    al,0x0
  41ccd0:	das    
  41ccd1:	mov    ds:0x1799119d,eax
  41ccd6:	lods   al,BYTE PTR ds:[esi]
  41ccd7:	mov    ecx,0x8af2684a
  41ccdc:	push   cs
  41ccdd:	rcl    ah,0xd5
  41cce0:	int3   
  41cce1:	mov    esi,0xbf998d85
  41cce6:	pushf  
  41cce7:	mov    al,ds:0x4cb47d7d
  41ccec:	dec    ebx
  41cced:	xor    eax,DWORD PTR [esi]
  41ccef:	add    esp,DWORD PTR [ecx+0x4f]
  41ccf2:	inc    BYTE PTR [edi-0x6acee49f]
  41ccf8:	mov    ecx,0xc6cffb42
  41ccfd:	cmp    eax,0x4292b22c
  41cd02:	hlt    
  41cd03:	xlat   BYTE PTR ds:[ebx]
  41cd04:	fisub  DWORD PTR [esi-0x9]
  41cd07:	test   eax,0xb1a3a0b
  41cd0c:	loop   0x41ccba
  41cd0e:	loope  0x41ccb5
  41cd10:	popf   
  41cd11:	sbb    eax,0x2bcdf82a
  41cd16:	jno    0x41cd18
  41cd18:	mov    ebp,0x12e512e1
  41cd1d:	push   cs
  41cd1e:	int3   
  41cd1f:	cmp    BYTE PTR [edx-0x12],dl
  41cd22:	mov    DWORD PTR [edi+0x64],eax
  41cd25:	add    DWORD PTR [esi],ecx
  41cd27:	pushf  
  41cd28:	cli    
  41cd29:	in     eax,dx
  41cd2a:	scas   eax,DWORD PTR es:[edi]
  41cd2b:	jne    0x41cd70
  41cd2d:	pusha  
  41cd2e:	pop    esp
  41cd2f:	sbb    eax,0x325a56aa
  41cd34:	push   eax
  41cd35:	sbb    DWORD PTR [ebx-0x11],esp
  41cd38:	pop    ebp
  41cd39:	arpl   WORD PTR [ecx+0x3f],di
  41cd3c:	fwait
  41cd3d:	fwait
  41cd3e:	push   0x23c51190
  41cd43:	pop    ebp
  41cd44:	ss inc edx
  41cd46:	jnp    0x41ccce
  41cd48:	(bad)  
  41cd49:	or     al,0x4b
  41cd4b:	cmc    
  41cd4c:	gs (bad) 
  41cd4e:	push   ecx
  41cd4f:	push   es
  41cd50:	or     DWORD PTR [edi+0x5f],edx
  41cd53:	inc    edx
  41cd54:	mov    bh,0xed
  41cd56:	stos   DWORD PTR es:[edi],eax
  41cd57:	inc    ecx
  41cd58:	and    al,0x73
  41cd5a:	(bad)  
  41cd5b:	jmp    0x701e9de3
  41cd60:	adc    ecx,DWORD PTR [edx+ebp*4+0x24eccd16]
  41cd67:	push   eax
  41cd68:	(bad)  
  41cd69:	ds loop 0x41cd1f
  41cd6c:	cdq    
  41cd6d:	or     DWORD PTR [eax-0x44b03b86],ecx
  41cd73:	push   0x8081ceff
  41cd78:	loop   0x41cd3e
  41cd7a:	xlat   BYTE PTR ds:[ebx]
  41cd7b:	jns    0x41cd27
  41cd7d:	pop    ebx
  41cd7e:	or     ch,BYTE PTR [ebp-0x27]
  41cd81:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41cd83:	mov    ds:0x2578787c,eax
  41cd88:	pop    ebp
  41cd89:	pop    esp
  41cd8a:	jg     0x41cd89
  41cd8c:	sub    al,0x7a
  41cd8e:	add    eax,0x2993c229
  41cd93:	pop    ecx
  41cd94:	ret    
  41cd95:	push   edx
  41cd96:	sbb    eax,0xc0c3d9a9
  41cd9b:	lds    esi,FWORD PTR [eax]
  41cd9d:	dec    ecx
  41cd9e:	(bad)  
  41cd9f:	sub    al,0xf5
  41cda1:	call   0x9366:0x5795b28
  41cda8:	push   ebx
  41cda9:	pop    edx
  41cdaa:	das    
  41cdab:	into   
  41cdac:	and    DWORD PTR [eax+0x58e37662],edi
  41cdb2:	cmp    ch,BYTE PTR gs:[edx+esi*4+0x310e27a7]
  41cdba:	mov    al,ds:0x76ae8d92
  41cdbf:	popf   
  41cdc0:	xlat   BYTE PTR ds:[ebx]
  41cdc1:	das    
  41cdc2:	or     esi,eax
  41cdc4:	push   eax
  41cdc5:	fild   DWORD PTR [ebx-0x56019ec6]
  41cdcb:	pop    ss
  41cdcc:	sub    DWORD PTR [esi],esp
  41cdce:	push   ds
  41cdcf:	jmp    0x41cd56
  41cdd1:	jo     0x41cdee
  41cdd3:	push   ebx
  41cdd4:	sbb    al,0xa7
  41cdd6:	sbb    al,BYTE PTR es:[ecx-0x5]
  41cdda:	and    al,0xb0
  41cddc:	not    ch
  41cdde:	sub    ecx,DWORD PTR [esi+eiz*4+0x51]
  41cde2:	sub    cl,dh
  41cde4:	dec    ebx
  41cde5:	ja     0x41cdb9
  41cde7:	fsubr  QWORD PTR [ecx+0x4]
  41cdea:	sbb    DWORD PTR [esi],esi
  41cdec:	nop
  41cded:	inc    esp
  41cdee:	pushf  
  41cdef:	sahf   
  41cdf0:	jl     0x41cde7
  41cdf2:	push   ecx
  41cdf3:	dec    ebp
  41cdf4:	fdivr  DWORD PTR [eax+ebx*8-0x593c77e9]
  41cdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdfc:	mov    al,ds:0x3432035b
  41ce01:	cmovge edx,DWORD PTR [edx-0x1a]
  41ce05:	inc    eax
  41ce06:	in     al,dx
  41ce07:	popf   
  41ce08:	cmp    DWORD PTR [ebx-0x69],edx
  41ce0b:	stc    
  41ce0c:	and    DWORD PTR [eax+0xe],0x31da0c21
  41ce13:	jne    0x41cd9e
  41ce15:	daa    
  41ce16:	pop    edi
  41ce17:	dec    esi
  41ce18:	inc    eax
  41ce19:	xor    dh,BYTE PTR ds:0x57bf6238
  41ce1f:	lock sbb bl,ah
  41ce22:	test   al,0x5e
  41ce24:	jo     0x41cdd9
  41ce26:	inc    ebx
  41ce27:	aad    0xb
  41ce29:	add    BYTE PTR [ebx+esi*2+0x7d468e41],bh
  41ce30:	mov    ebx,0xbf064c73
  41ce35:	adc    edi,edx
  41ce37:	cmp    al,0xaf
  41ce39:	push   ss
  41ce3a:	jae    0x41ce51
  41ce3c:	adc    al,BYTE PTR [edi]
  41ce3e:	mov    ah,0x1a
  41ce40:	or     DWORD PTR [ecx],0xc2c2492d
  41ce46:	jne    0x41ce2c
  41ce48:	pop    ds
  41ce49:	add    BYTE PTR [ebp+0x4d],ch
  41ce4c:	ins    BYTE PTR es:[edi],dx
  41ce4d:	imul   ebp,DWORD PTR [ebp-0x63b3746],0xc8ba31c4
  41ce57:	cmp    al,0x7f
  41ce59:	fistp  QWORD PTR [edi+0xec92070]
  41ce5f:	in     al,0xf8
  41ce61:	popf   
  41ce62:	(bad)  
  41ce63:	out    0x79,eax
  41ce65:	push   0xffffffe4
  41ce67:	cmp    esi,DWORD PTR [esi-0x21a0b01d]
  41ce6d:	cwde   
  41ce6e:	add    DWORD PTR [eax+0x24],edi
  41ce71:	jns    0x41ce53
  41ce73:	cmp    DWORD PTR [edi-0x14],0xffffffab
  41ce77:	cwde   
  41ce78:	in     eax,0x4c
  41ce7a:	inc    edx
  41ce7b:	(bad)  
  41ce7c:	push   esi
  41ce7d:	scas   eax,DWORD PTR es:[edi]
  41ce7e:	inc    esi
  41ce7f:	mov    DWORD PTR [edx-0x3b62cc8d],eax
  41ce85:	xor    eax,0x444ea94a
  41ce8b:	mov    eax,0xde7ddcc1
  41ce90:	mov    esp,0x94587270
  41ce95:	sahf   
  41ce96:	lods   eax,DWORD PTR ds:[esi]
  41ce97:	xchg   DWORD PTR [ebp+0x50a45a5e],esp
  41ce9d:	dec    ebp
  41ce9e:	div    BYTE PTR [esi]
  41cea0:	call   0x1312a90
  41cea5:	mov    eax,ds:0xba2181de
  41ceaa:	cmp    esi,ecx
  41ceac:	mov    ecx,0x30f1222
  41ceb1:	push   ebx
  41ceb2:	cmp    DWORD PTR [eax-0x1a89e253],edi
  41ceb8:	das    
  41ceb9:	lods   eax,DWORD PTR ds:[esi]
  41ceba:	mov    ds:0xd8524a0f,al
  41cebf:	sbb    edx,DWORD PTR [eax-0x71]
  41cec2:	ss pop ss
  41cec4:	int    0xf5
  41cec6:	jle    0x41cf3e
  41cec8:	fld    QWORD PTR [edi]
  41ceca:	and    ch,BYTE PTR [esi+0x3bbe723d]
  41ced0:	imul   ebp,DWORD PTR [bp-0x4f],0xafa793e
  41ced8:	and    DWORD PTR [eax+0x1e5fa0a0],ecx
  41cede:	lock sub ecx,0x611e1037
  41cee5:	stc    
  41cee6:	sar    DWORD PTR [eax-0x1eaf1834],0xf
  41ceed:	je     0x41ce99
  41ceef:	repnz out 0x60,eax
  41cef2:	js     0x41cf43
  41cef4:	sub    al,BYTE PTR [ebx+ecx*2]
  41cef7:	mov    ch,bh
  41cef9:	imul   edi,DWORD PTR [ecx+0x6d51bfaa],0xffffffd3
  41cf00:	cli    
  41cf01:	push   edx
  41cf02:	and    edx,edi
  41cf04:	jge    0x41cec0
  41cf06:	jb     0x41cf7c
  41cf08:	jg     0x41cec1
  41cf0a:	and    ch,BYTE PTR ds:0xb9d9a969
  41cf10:	retf   0x907e
  41cf13:	mov    BYTE PTR [edx],0x3b
  41cf16:	xlat   BYTE PTR ds:[ebx]
  41cf17:	xchg   esi,eax
  41cf18:	retf   
  41cf19:	(bad)  
  41cf1a:	aam    0x94
  41cf1c:	fimul  WORD PTR [esi-0x30]
  41cf1f:	into   
  41cf20:	idiv   BYTE PTR [ecx]
  41cf22:	sbb    esi,DWORD PTR [esp+eiz*2-0x53]
  41cf26:	xor    DWORD PTR [eax],0x609e9ca4
  41cf2c:	in     al,dx
  41cf2d:	inc    ecx
  41cf2e:	push   esi
  41cf2f:	pop    edx
  41cf30:	icebp  
  41cf31:	push   edi
  41cf32:	dec    esi
  41cf33:	or     al,0x12
  41cf35:	inc    ebp
  41cf36:	mov    bh,0xec
  41cf38:	xchg   ecx,eax
  41cf39:	adc    eax,DWORD PTR [esi]
  41cf3b:	cmp    al,0xd0
  41cf3d:	xor    BYTE PTR [esi+0x6c225c32],dl
  41cf43:	cmp    esp,DWORD PTR [ecx]
  41cf45:	bound  edi,QWORD PTR [ecx+0x4610cd9d]
  41cf4b:	stos   DWORD PTR es:[edi],eax
  41cf4c:	mov    cl,0xf1
  41cf4e:	cmp    ebx,edi
  41cf50:	mov    WORD PTR [esi],?
  41cf52:	outs   dx,DWORD PTR ds:[esi]
  41cf53:	leave  
  41cf54:	adc    DWORD PTR [edi],esp
  41cf56:	fidivr WORD PTR [ecx+edx*8+0xd]
  41cf5a:	nop
  41cf5b:	leave  
  41cf5c:	sub    DWORD PTR ds:0xf8ed5967,0xc
  41cf63:	test   al,0x7c
  41cf65:	mov    BYTE PTR [eax],dl
  41cf67:	sub    edx,DWORD PTR [edx+eax*2]
  41cf6a:	ficomp DWORD PTR [ebx+edi*4+0x37c7ae49]
  41cf71:	(bad)  cs:[esi+ecx*4+0x43438c5b]
  41cf79:	imul   ebx,eax,0x26ec8877
  41cf7f:	in     al,dx
  41cf80:	push   0x430691aa
  41cf85:	(bad)  
  41cf86:	push   eax
  41cf87:	jmp    0xa3d53802
  41cf8c:	mov    ebp,0xd984e01d
  41cf91:	sbb    al,0x8a
  41cf93:	mov    bh,0x26
  41cf95:	ss mov ecx,0x56d30cd
  41cf9b:	sbb    DWORD PTR ds:0x744b1da8,eax
  41cfa1:	clc    
  41cfa2:	inc    edx
  41cfa3:	jne    0x41d014
  41cfa5:	push   ebp
  41cfa6:	sub    BYTE PTR [ebx+ecx*2+0x698f0e9f],cl
  41cfad:	cmp    BYTE PTR [edi+0x3],dh
  41cfb0:	mov    edx,esp
  41cfb2:	jp     0x41cfe7
  41cfb4:	sub    BYTE PTR [ecx],dl
  41cfb6:	mov    bl,0x7e
  41cfb8:	add    eax,0x61689181
  41cfbd:	push   ds
  41cfbe:	(bad)  
  41cfbf:	mov    dh,0x4c
  41cfc1:	cmp    eax,ebx
  41cfc3:	pop    esp
  41cfc4:	adc    ebp,DWORD PTR [edi]
  41cfc6:	xor    edx,DWORD PTR [esi+0x63be2879]
  41cfcc:	ds pop es
  41cfce:	ficomp WORD PTR [ebx-0x20]
  41cfd1:	mov    eax,0x9003bc0
  41cfd6:	inc    eax
  41cfd7:	ret    0xf484
  41cfda:	mov    cl,0xbf
  41cfdc:	push   cs
  41cfdd:	sbb    ebp,DWORD PTR [eax+0x30]
  41cfe0:	inc    eax
  41cfe1:	repnz into 
  41cfe3:	jmp    0x2a05742d
  41cfe8:	aam    0x87
  41cfea:	cli    
  41cfeb:	mov    ds:0x5438a9e2,eax
  41cff0:	outs   dx,DWORD PTR ds:[esi]
  41cff1:	cli    
  41cff2:	leave  
  41cff3:	cmp    DWORD PTR [ebp-0x62ee1807],ecx
  41cff9:	cmp    BYTE PTR [eax-0x69],0x24
  41cffd:	mov    BYTE PTR [ecx-0x1c8f1b39],bh
  41d003:	jns    0x41d041
  41d005:	xor    eax,0xdf766f7
  41d00a:	daa    
  41d00b:	and    DWORD PTR [ebx+0x3e16b22d],edx
  41d011:	jecxz  0x41d015
  41d013:	lahf   
  41d014:	int3   
  41d015:	add    bl,BYTE PTR ds:0x469f1bba
  41d01b:	scas   al,BYTE PTR es:[edi]
  41d01c:	loopne 0x41d07a
  41d01e:	lds    esi,FWORD PTR [ebx]
  41d020:	jo     0x41d098
  41d022:	int3   
  41d023:	dec    edx
  41d024:	jp     0x63c5f605
  41d02a:	xor    al,0x6a
  41d02c:	push   ds
  41d02d:	inc    ebx
  41d02e:	pop    edi
  41d02f:	ret    
  41d030:	(bad)  
  41d031:	ret    
  41d032:	out    0x19,al
  41d034:	lea    edx,ds:0xd9beb5c9
  41d03a:	nop
  41d03b:	xchg   esp,eax
  41d03c:	das    
  41d03d:	mov    ecx,0x80bc2a65
  41d042:	cmp    DWORD PTR [edx+eax*1],ebp
  41d045:	xchg   ebp,eax
  41d046:	call   0xeb1dfd36
  41d04b:	jo     0x41d054
  41d04d:	lea    esp,[ebp+0x41]
  41d050:	push   ebp
  41d051:	sahf   
  41d052:	loopne 0x41d050
  41d054:	or     al,0x72
  41d056:	inc    esp
  41d057:	stos   DWORD PTR es:[edi],eax
  41d058:	inc    esi
  41d059:	mov    ecx,0x77dfbf33
  41d05e:	mov    eax,0xdeb10ff4
  41d063:	xchg   BYTE PTR [eax+0x1b348aa5],dl
  41d069:	dec    edx
  41d06a:	lahf   
  41d06b:	fstp   DWORD PTR [edi-0x41]
  41d06e:	inc    edi
  41d06f:	push   ebp
  41d070:	mov    al,0xcf
  41d072:	scas   eax,DWORD PTR es:[edi]
  41d073:	dec    esi
  41d074:	or     esi,0x36
  41d077:	xor    ch,BYTE PTR [edx+0x7581f9ab]
  41d07d:	xor    BYTE PTR [edi-0x62],dh
  41d080:	add    ebp,DWORD PTR [eax+0x35163551]
  41d086:	add    al,0xfd
  41d088:	(bad)  
  41d089:	lea    ebp,[esi-0x7f0e3b50]
  41d08f:	xor    DWORD PTR [ecx-0x23f1daa2],edx
  41d095:	fs cmp bh,cl
  41d098:	cmp    DWORD PTR [esi+0x4a],ebp
  41d09b:	mov    eax,ds:0xbaeeaf29
  41d0a0:	loop   0x41d06b
  41d0a2:	jnp    0x41d103
  41d0a4:	daa    
  41d0a5:	adc    eax,0x4d0b320b
  41d0aa:	pop    eax
  41d0ab:	xchg   ecx,eax
  41d0ac:	repnz sub dh,BYTE PTR [esp-0x37]
  41d0b1:	adc    dh,al
  41d0b3:	adc    edi,DWORD PTR [eax+0xd]
  41d0b6:	leave  
  41d0b7:	loopne 0x41d059
  41d0b9:	div    BYTE PTR [esi]
  41d0bb:	jl     0x41d06c
  41d0bd:	inc    esi
  41d0be:	mov    DWORD PTR [ebp-0x3f],eax
  41d0c1:	(bad)  
  41d0c2:	aaa    
  41d0c3:	out    0xda,al
  41d0c5:	and    DWORD PTR [edi+0x56cc954c],esi
  41d0cb:	pop    ds
  41d0cc:	mov    dh,0x3e
  41d0ce:	dec    ebx
  41d0cf:	mov    edi,ecx
  41d0d1:	jp     0x41d0e3
  41d0d3:	rcl    DWORD PTR [edx+ebp*8+0x2b70fcf1],cl
  41d0da:	in     eax,0xd7
  41d0dc:	ret    
  41d0dd:	outs   dx,BYTE PTR ds:[esi]
  41d0de:	push   edi
  41d0df:	cld    
  41d0e0:	lock xchg ebp,eax
  41d0e2:	cs jbe 0x41d0ff
  41d0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0e6:	out    dx,al
  41d0e7:	imul   esi,DWORD PTR [eax-0x333680db],0x6
  41d0ee:	lds    esp,FWORD PTR [ebx]
  41d0f0:	or     BYTE PTR [ebx+0x6d],0xd4
  41d0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0f5:	dec    edx
  41d0f6:	mov    ah,0x49
  41d0f8:	gs dec edx
  41d0fa:	les    edi,FWORD PTR [ebp-0x17d377ac]
  41d100:	mov    edi,0x1b7ad662
  41d105:	mov    ebx,0x85a7faf
  41d10a:	in     eax,dx
  41d10b:	cmp    DWORD PTR [edx],ecx
  41d10d:	or     eax,0xa63eece0
  41d112:	jnp    0x41d0b7
  41d114:	sub    DWORD PTR ds:0xde35420a,ebp
  41d11a:	push   es
  41d11b:	adc    dh,BYTE PTR [edi]
  41d11d:	mov    eax,0x63bcd585
  41d122:	jae    0x41d194
  41d124:	xchg   DWORD PTR [edx+0x51],ebx
  41d127:	mov    ebx,gs
  41d129:	leave  
  41d12a:	leave  
  41d12b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d12c:	data16 xlat BYTE PTR ds:[ebx]
  41d12e:	add    DWORD PTR [ecx+0x22],esi
  41d131:	push   ebp
  41d132:	jle    0x41d12d
  41d134:	and    ch,ah
  41d136:	and    eax,0x51a78d1c
  41d13b:	iret   
  41d13c:	sbb    bl,ch
  41d13e:	jo     0x41d19d
  41d140:	icebp  
  41d141:	fwait
  41d142:	sahf   
  41d143:	out    0x2f,al
  41d145:	dec    ecx
  41d146:	push   esp
  41d147:	and    eax,0x5d1ba3e4
  41d14c:	xchg   edx,eax
  41d14d:	xor    BYTE PTR [ecx+eiz*4-0x7],bl
  41d151:	jecxz  0x41d1ab
  41d153:	cmp    esi,DWORD PTR [ebx-0x6d]
  41d156:	aas    
  41d157:	jbe    0x41d19a
  41d159:	fisttp WORD PTR ds:0x2c68de07
  41d15f:	(bad)  
  41d160:	lahf   
  41d161:	clc    
  41d162:	arpl   WORD PTR [ecx+0x7885f6f3],sp
  41d168:	sti    
  41d169:	iret   
  41d16a:	jnp    0x41d133
  41d16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d16d:	neg    DWORD PTR [eax]
  41d16f:	cld    
  41d170:	hlt    
  41d171:	ins    DWORD PTR es:[edi],dx
  41d172:	out    dx,eax
  41d173:	clc    
  41d174:	push   ebp
  41d175:	adc    al,0xe8
  41d177:	in     eax,0x7b
  41d179:	jne    0x41d12e
  41d17b:	dec    edi
  41d17c:	mov    bh,BYTE PTR [bx+di+0x1965]
  41d181:	ja     0x41d159
  41d183:	mov    esp,0xbbac4578
  41d188:	sbb    BYTE PTR [edi-0x15fd9ad8],ch
  41d18e:	and    dl,BYTE PTR [ebx-0x64]
  41d191:	(bad)  
  41d192:	mov    ch,0x8d
  41d194:	sahf   
  41d195:	push   eax
  41d196:	out    dx,eax
  41d197:	fwait
  41d198:	xchg   BYTE PTR [esi+0x1c],bh
  41d19b:	cmp    eax,0x1fd62f60
  41d1a0:	sub    BYTE PTR [ebp-0x5a],dl
  41d1a3:	inc    ebp
  41d1a4:	retf   0x5e51
  41d1a7:	cli    
  41d1a8:	shl    DWORD PTR [esi-0x69bf2c56],0x52
  41d1af:	loope  0x41d1de
  41d1b1:	and    bl,BYTE PTR ds:0x3adf25dc
  41d1b7:	icebp  
  41d1b8:	xchg   esi,eax
  41d1b9:	mov    dh,0xba
  41d1bb:	pop    edi
  41d1bc:	les    edi,FWORD PTR [edx]
  41d1be:	sbb    edx,eax
  41d1c0:	jg     0x41d197
  41d1c2:	dec    ecx
  41d1c3:	sub    DWORD PTR [ebx+0x3d252500],0x44d2ff87
  41d1cd:	add    BYTE PTR [ecx-0x49],ch
  41d1d0:	ja     0x41d1d4
  41d1d2:	fcmovb st,st(7)
  41d1d4:	rcr    BYTE PTR [esi],cl
  41d1d6:	arpl   WORD PTR [eax-0x2f],si
  41d1d9:	push   0xf377f2ab
  41d1de:	in     al,0x79
  41d1e0:	pop    es
  41d1e1:	es stc 
  41d1e3:	adc    ah,BYTE PTR fs:[esi]
  41d1e6:	loope  0x41d23e
  41d1e8:	mov    cl,0x77
  41d1ea:	jmp    0x41d262
  41d1ec:	inc    edx
  41d1ed:	imul   ecx,DWORD PTR [eax+0x7c],0x25
  41d1f1:	mov    WORD PTR [edx-0x72c6b7d7],?
  41d1f7:	dec    esp
  41d1f8:	sbb    eax,edx
  41d1fa:	(bad)  
  41d1fb:	mov    dl,0x77
  41d1fd:	mov    edx,0x9a6ee632
  41d202:	sub    cl,BYTE PTR [edi+ebp*4-0x17]
  41d206:	mov    ah,0x73
  41d208:	gs xor eax,0x7f529c09
  41d20e:	scas   eax,DWORD PTR es:[edi]
  41d20f:	dec    edi
  41d210:	fdiv   QWORD PTR [ecx-0x7d]
  41d213:	loopne 0x41d25c
  41d215:	xchg   ebx,eax
  41d216:	cmc    
  41d217:	xchg   ebx,eax
  41d218:	gs pop ebx
  41d21a:	(bad)  [esp+esi*8+0x3aa36ca8]
  41d221:	xchg   ebx,eax
  41d222:	xchg   ecx,eax
  41d223:	(bad)  
  41d224:	gs sub al,0xd8
  41d227:	jmp    0x41d26e
  41d229:	test   al,0xa
  41d22b:	dec    ebx
  41d22c:	addr16 push ecx
  41d22e:	xor    al,0x48
  41d230:	sbb    dh,BYTE PTR [esi+0x41]
  41d233:	and    al,0xf7
  41d235:	test   BYTE PTR ds:0x76646453,al
  41d23b:	sti    
  41d23c:	imul   ebp,DWORD PTR [edi],0xffffffe3
  41d23f:	mov    esi,0x66ecf021
  41d244:	add    eax,0x44665c39
  41d249:	add    esi,DWORD PTR [ebx+0xd59df38]
  41d24f:	xor    esi,DWORD PTR [edi-0x63]
  41d252:	push   edx
  41d253:	scas   eax,DWORD PTR es:[edi]
  41d254:	pop    es
  41d255:	jecxz  0x41d236
  41d257:	(bad)  
  41d258:	cmp    bl,BYTE PTR fs:[ebp-0x2620773a]
  41d25f:	mov    ds:0xa9a369b3,al
  41d264:	xchg   esp,eax
  41d265:	mov    ebp,0x74719f93
  41d26a:	sub    ebp,DWORD PTR [edi]
  41d26c:	xor    DWORD PTR [edi-0x32],0x3c
  41d270:	loope  0x41d2b8
  41d272:	shr    edx,0x79
  41d275:	les    ebp,FWORD PTR [ecx]
  41d277:	add    esp,esp
  41d279:	fcomp  DWORD PTR [edx+0xa9701e7]
  41d27f:	mov    esp,0xcd7021c7
  41d284:	cmp    al,0xae
  41d286:	xchg   BYTE PTR [ebx-0x61312212],dh
  41d28c:	(bad)  
  41d28d:	mov    ds:0x8b6cc64c,eax
  41d292:	popf   
  41d293:	sar    DWORD PTR [ebp+0x25],cl
  41d296:	nop
  41d297:	and    DWORD PTR [ebx-0x24],edi
  41d29a:	xchg   ebp,eax
  41d29b:	pop    DWORD PTR [eax]
  41d29d:	stos   BYTE PTR es:[edi],al
  41d29e:	arpl   di,cx
  41d2a0:	sbb    esp,DWORD PTR [esi]
  41d2a2:	dec    ebp
  41d2a3:	push   esp
  41d2a4:	xchg   DWORD PTR [ebp+0x22d3c4f4],eax
  41d2aa:	pop    edx
  41d2ab:	mov    al,0x68
  41d2ad:	inc    eax
  41d2ae:	(bad)  [eax+0x6d4d9519]
  41d2b4:	fidivr DWORD PTR [ebx]
  41d2b6:	sbb    edx,esp
  41d2b8:	into   
  41d2b9:	xchg   edx,eax
  41d2ba:	push   eax
  41d2bb:	rcl    esp,0x34
  41d2be:	ins    BYTE PTR es:[edi],dx
  41d2bf:	(bad)
  41d2c3:	mov    cl,0x3e
  41d2c5:	xor    ecx,DWORD PTR [edx-0x7e84c6da]
  41d2cb:	add    al,0xcc
  41d2cd:	inc    ebp
  41d2ce:	in     eax,0x67
  41d2d0:	test   eax,0x36120233
  41d2d5:	pop    esi
  41d2d6:	mov    ebp,0x9a01244
  41d2db:	sub    eax,0x7dbc89a5
  41d2e0:	int    0x30
  41d2e2:	push   cs
  41d2e3:	mov    bh,0x47
  41d2e5:	outs   dx,DWORD PTR ds:[esi]
  41d2e6:	mov    ds,WORD PTR [eax-0x46]
  41d2e9:	lods   al,BYTE PTR ds:[esi]
  41d2ea:	or     BYTE PTR [ecx-0x6c0501b6],ch
  41d2f0:	sub    al,0x51
  41d2f2:	jnp    0x41d307
  41d2f4:	adc    eax,0xd044feec
  41d2f9:	fwait
  41d2fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2fb:	out    dx,al
  41d2fc:	cld    
  41d2fd:	or     al,0xf7
  41d2ff:	adc    al,0x56
  41d301:	scas   al,BYTE PTR es:[edi]
  41d302:	leave  
  41d303:	fnstcw WORD PTR [esi]
  41d305:	mov    edx,0x2f5c33cf
  41d30a:	fst    DWORD PTR [edx+edx*8+0x1c633a4a]
  41d311:	out    0x1e,al
  41d313:	push   edx
  41d314:	psubb  mm0,QWORD PTR [edx]
  41d317:	popf   
  41d318:	call   0x922e:0x2434f297
  41d31f:	pushf  
  41d320:	jg     0x41d2c6
  41d322:	fsub   DWORD PTR [edi-0xd581428]
  41d328:	jo     0x41d381
  41d32a:	xor    eax,0x165408a
  41d32f:	adc    dh,BYTE PTR [edi+0x33]
  41d332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d333:	stos   DWORD PTR es:[edi],eax
  41d334:	fcom   DWORD PTR [eax-0x51]
  41d337:	mov    ebp,0x904c3324
  41d33c:	aam    0xcd
  41d33e:	jg     0x41d3a0
  41d340:	pop    ebp
  41d341:	xchg   di,ax
  41d343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d344:	push   esi
  41d345:	stc    
  41d346:	call   0x5589f36
  41d34b:	icebp  
  41d34c:	dec    ecx
  41d34d:	xchg   edi,eax
  41d34e:	cmp    eax,0xa1dbb586
  41d353:	sub    edx,DWORD PTR [edx]
  41d355:	jmp    0x228b6100
  41d35a:	mov    dh,0xdb
  41d35c:	jne    0x41d3db
  41d35e:	mov    BYTE PTR ds:0x3bca53eb,ah
  41d364:	inc    ecx
  41d365:	adc    BYTE PTR [ecx],ch
  41d367:	pop    esi
  41d368:	cs jl  0x41d3dd
  41d36b:	push   es
  41d36c:	mov    al,BYTE PTR [ecx]
  41d36e:	test   eax,0x28c6b78c
  41d373:	mov    ebx,0x4684b061
  41d378:	mov    al,0x85
  41d37a:	ja     0x41d3fa
  41d37c:	cwde   
  41d37d:	mov    edi,0xf4bf94ff
  41d382:	sub    DWORD PTR [eax+0x79d94689],eax
  41d388:	fsub   QWORD PTR [edi+0x49fa391d]
  41d38e:	std    
  41d38f:	jbe    0x41d3f8
  41d391:	cmp    esp,DWORD PTR [eax-0x701f3d50]
  41d397:	pop    ebx
  41d398:	sti    
  41d399:	jo     0x41d38f
  41d39b:	lods   al,BYTE PTR ds:[esi]
  41d39c:	aam    0x3d
  41d39e:	sub    ah,bh
  41d3a0:	sbb    BYTE PTR [edi],cl
  41d3a2:	pop    esi
  41d3a3:	jge    0x41d394
  41d3a5:	add    ecx,ebx
  41d3a7:	sub    al,0x8
  41d3a9:	lods   al,BYTE PTR ds:[esi]
  41d3aa:	(bad)  
  41d3ac:	mov    esi,0x86b6dc2b
  41d3b1:	mov    cl,0x60
  41d3b3:	aas    
  41d3b4:	das    
  41d3b5:	in     al,dx
  41d3b6:	pop    ecx
  41d3b7:	or     DWORD PTR [edx+0x246a816f],ebp
  41d3bd:	retf   0x85a8
  41d3c0:	dec    ebp
  41d3c1:	push   ebp
  41d3c2:	push   cs
  41d3c3:	das    
  41d3c4:	scas   al,BYTE PTR es:[edi]
  41d3c5:	jnp    0x41d374
  41d3c7:	lea    ebp,[esi]
  41d3c9:	add    BYTE PTR [ebx+0x61852f66],dl
  41d3cf:	and    al,0x8c
  41d3d1:	cdq    
  41d3d2:	mov    esp,0xb1eb0a3c
  41d3d7:	iret   
  41d3d8:	enter  0xf662,0x62
  41d3dc:	aam    0x66
  41d3de:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3e0:	lock rcl DWORD PTR [edi-0x73],1
  41d3e4:	clc    
  41d3e5:	sahf   
  41d3e6:	int    0xae
  41d3e8:	ret    
  41d3e9:	inc    esi
  41d3ea:	mov    esi,0xca93449
  41d3ef:	shr    BYTE PTR [edi-0x7c],1
  41d3f2:	call   0x152a026d
  41d3f7:	inc    eax
  41d3f8:	pushf  
  41d3f9:	fst    DWORD PTR [ecx-0xab57d24]
  41d3ff:	mov    edx,0xbd4aa827
  41d404:	cmp    al,0x9f
  41d406:	xlat   BYTE PTR ds:[ebx]
  41d407:	inc    edx
  41d408:	pop    es
  41d409:	retf   0x8dc9
  41d40c:	aas    
  41d40d:	dec    edx
  41d40e:	xchg   edx,eax
  41d40f:	bound  edi,QWORD PTR [ebp-0xa]
  41d412:	push   esi
  41d413:	shl    DWORD PTR [eax-0x233cf440],cl
  41d419:	(bad)  
  41d41b:	into   
  41d41c:	(bad)
  41d41f:	add    dh,BYTE PTR [edx-0x66]
  41d422:	add    ch,dl
  41d424:	test   al,0xa0
  41d426:	sub    ah,dl
  41d428:	pop    ss
  41d429:	xchg   esi,eax
  41d42a:	popf   
  41d42b:	mov    cl,0x17
  41d42d:	mov    al,0x61
  41d42f:	push   cs
  41d430:	xlat   BYTE PTR ds:[ebx]
  41d431:	test   BYTE PTR [esi-0x4a],cl
  41d434:	retf   0xfdf0
  41d437:	mov    edi,0x74984097
  41d43c:	or     eax,0x3aeb9f83
  41d441:	imul   ecx,DWORD PTR [edx-0x6a43189b],0xc34f98ba
  41d44b:	std    
  41d44c:	cs daa 
  41d44e:	pop    es
  41d44f:	popa   
  41d450:	mov    ds:0x57053347,al
  41d455:	int    0xcf
  41d457:	and    al,0xa1
  41d459:	clc    
  41d45a:	and    al,0x9b
  41d45c:	ret    
  41d45d:	mov    BYTE PTR [edi+0x3c6753d2],bl
  41d463:	pop    ecx
  41d464:	xor    al,0x71
  41d466:	fwait
  41d467:	and    eax,DWORD PTR [ebx-0x1f]
  41d46a:	sbb    DWORD PTR [edx+0x31c9d21f],esi
  41d470:	sub    dl,BYTE PTR [ebx-0x65]
  41d473:	ins    BYTE PTR es:[edi],dx
  41d474:	push   ss
  41d475:	loop   0x41d4c1
  41d477:	into   
  41d478:	fwait
  41d479:	nop
  41d47a:	and    esi,ecx
  41d47c:	pusha  
  41d47d:	repz int3 
  41d47f:	loopne 0x41d40f
  41d481:	pusha  
  41d482:	cmc    
  41d483:	stos   DWORD PTR es:[edi],eax
  41d484:	jmp    0x1e4f:0xd99136eb
  41d48b:	in     eax,dx
  41d48c:	push   es
  41d48d:	cmp    ecx,esp
  41d48f:	dec    esi
  41d490:	cmp    ebx,esi
  41d492:	out    dx,al
  41d493:	call   0xc095:0x1d76d9ee
  41d49a:	imul   ecx,DWORD PTR [edi],0xffffffdc
  41d49d:	add    ebx,DWORD PTR [ecx]
  41d49f:	bound  edx,QWORD PTR [esp+eax*1+0x704b3441]
  41d4a6:	push   eax
  41d4a7:	loop   0x41d4bb
  41d4a9:	ins    DWORD PTR es:[edi],dx
  41d4aa:	lods   eax,DWORD PTR ds:[esi]
  41d4ab:	dec    BYTE PTR [edx]
  41d4ad:	adc    esp,ebp
  41d4af:	fdivrp st(7),st
  41d4b1:	stos   BYTE PTR es:[edi],al
  41d4b2:	sbb    DWORD PTR [ebx+0x6fc4f4a3],ebx
  41d4b8:	and    BYTE PTR [edi-0x305c5e0],ch
  41d4be:	std    
  41d4bf:	inc    ebx
  41d4c0:	xor    eax,0xbf484224
  41d4c5:	or     bl,ch
  41d4c7:	test   DWORD PTR [esi],edi
  41d4c9:	outs   dx,DWORD PTR ds:[esi]
  41d4ca:	push   cs
  41d4cb:	lods   eax,DWORD PTR ds:[esi]
  41d4cc:	repz repz call DWORD PTR [ecx]
  41d4d0:	dec    ebx
  41d4d1:	push   esp
  41d4d2:	lods   al,BYTE PTR ds:[esi]
  41d4d3:	in     eax,0xa3
  41d4d5:	lods   al,BYTE PTR ds:[esi]
  41d4d6:	xor    BYTE PTR [ebx+edx*2+0x54dcc710],al
  41d4dd:	jg     0x41d4c2
  41d4df:	jne    0x41d4be
  41d4e1:	cld    
  41d4e2:	mov    bh,0x7a
  41d4e4:	sti    
  41d4e5:	sub    DWORD PTR [edx],0x523d11b0
  41d4eb:	push   ecx
  41d4ec:	in     al,0x32
  41d4ee:	pop    eax
  41d4ef:	js     0x41d515
  41d4f1:	shl    ebx,1
  41d4f3:	js     0x41d4d5
  41d4f5:	mov    ebp,0x151f3520
  41d4fa:	cmp    dh,BYTE PTR [ecx*1+0x460cd879]
  41d501:	js     0x41d4fb
  41d503:	push   esi
  41d504:	sub    ecx,ecx
  41d506:	jmp    0x7120ae3
  41d50b:	mov    edx,0xe5580563
  41d510:	xchg   DWORD PTR [edi-0x51],ecx
  41d513:	or     al,0x1d
  41d515:	repz sti 
  41d517:	and    BYTE PTR [ebx],dl
  41d519:	mov    esi,0x2c4766
  41d51e:	add    ah,BYTE PTR [eax+0x13]
  41d521:	cmp    al,BYTE PTR [eax+esi*1+0x3f]
  41d525:	inc    edi
  41d526:	add    BYTE PTR [edi-0x2c],0xb6
  41d52a:	out    0x84,al
  41d52c:	cmp    al,ah
  41d52e:	cdq    
  41d52f:	mov    ah,0x7e
  41d531:	adc    al,BYTE PTR [edx+0x4d]
  41d534:	aam    0x37
  41d536:	(bad)  
  41d538:	push   eax
  41d539:	cmp    al,0x8f
  41d53b:	pop    ebp
  41d53c:	out    0x12,al
  41d53e:	nop
  41d53f:	lds    si,DWORD PTR [ecx+0x21]
  41d543:	hlt    
  41d544:	jno    0x41d58e
  41d546:	and    ch,BYTE PTR [edi+ecx*4+0x75]
  41d54a:	pop    ds
  41d54b:	xchg   DWORD PTR [edi],ecx
  41d54d:	dec    edi
  41d54e:	lahf   
  41d54f:	xbegin 0x8cd8ec89
  41d555:	(bad)  
  41d556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d557:	bound  ebx,QWORD PTR [edx-0x70]
  41d55a:	push   es
  41d55b:	enter  0x6d6d,0xf9
  41d55f:	pop    edx
  41d560:	pop    ebx
  41d561:	ins    DWORD PTR es:[edi],dx
  41d562:	pushf  
  41d563:	outs   dx,DWORD PTR ds:[esi]
  41d564:	pop    ebp
  41d565:	lds    eax,FWORD PTR [esi]
  41d567:	neg    BYTE PTR [ecx]
  41d569:	ins    DWORD PTR es:[edi],dx
  41d56a:	sub    al,0x35
  41d56c:	addr16 or ch,dl
  41d56f:	fxtract 
  41d571:	mov    eax,0xd3b20bc4
  41d576:	pop    esp
  41d577:	mov    bl,0x95
  41d579:	add    esi,esp
  41d57b:	loop   0x41d522
  41d57d:	rcr    BYTE PTR [edi+0x11],0x3f
  41d581:	push   edx
  41d582:	and    cl,BYTE PTR [eax+eiz*8+0x267d7d0b]
  41d589:	subps  xmm5,XMMWORD PTR [ebp+0x6fd69f18]
  41d590:	(bad)  
  41d591:	lock idiv DWORD PTR [ebp+0x67b36734]
  41d598:	ja     0x41d570
  41d59a:	adc    ch,0x53
  41d59d:	data16 add BYTE PTR [ecx-0xcda2ed7],al
  41d5a4:	lds    edi,FWORD PTR [edi-0xffcd3f4]
  41d5aa:	and    esi,DWORD PTR [ecx]
  41d5ac:	retf   
  41d5ad:	or     ah,BYTE PTR [esi-0x2a]
  41d5b0:	out    0xba,al
  41d5b2:	ret    
  41d5b3:	mov    ch,0x7c
  41d5b5:	repz pusha 
  41d5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b8:	and    ebp,DWORD PTR [edx+0x6]
  41d5bb:	adc    BYTE PTR [edi],0x30
  41d5be:	loopne 0x41d604
  41d5c0:	mov    al,0x80
  41d5c2:	pop    eax
  41d5c3:	mov    esi,0xeb422867
  41d5c8:	cmpxchg8b QWORD PTR [ebp-0x24]
  41d5cc:	jo     0x41d5ff
  41d5ce:	adc    eax,0x48f67f1d
  41d5d3:	data16 ins BYTE PTR es:[edi],dx
  41d5d5:	mov    ebp,0x9f006bf0
  41d5da:	push   ebp
  41d5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5dc:	fcom   QWORD PTR [ecx+0x2cbcf003]
  41d5e2:	ins    DWORD PTR es:[edi],dx
  41d5e3:	test   al,0xc1
  41d5e5:	lds    esi,FWORD PTR [esi+0x1]
  41d5e8:	test   eax,0x8fca5836
  41d5ed:	pop    ss
  41d5ee:	cmp    dl,ch
  41d5f0:	and    BYTE PTR [ebp-0x7cbd261],0xc3
  41d5f7:	push   0xffffffce
  41d5f9:	stos   BYTE PTR es:[edi],al
  41d5fa:	sbb    BYTE PTR [ebx+0x32],dh
  41d5fd:	test   eax,0x2461081b
  41d602:	xchg   ebx,eax
  41d603:	test   al,0xa7
  41d605:	retf   0x7fcf
  41d608:	into   
  41d609:	std    
  41d60a:	add    eax,0x137670c2
  41d60f:	lea    ebp,[ebx-0x2b]
  41d612:	xchg   DWORD PTR [edx-0xe6dff48],edx
  41d618:	xchg   ebx,eax
  41d619:	bound  ecx,QWORD PTR [eax+ebx*4-0x7fc920f7]
  41d620:	xchg   esp,eax
  41d621:	cs xchg ebp,eax
  41d623:	(bad)  
  41d624:	enter  0xf9b2,0xcb
  41d628:	or     eax,0xd09a6f2c
  41d62d:	mov    ch,0x77
  41d62f:	imul   eax,DWORD PTR [ebp+0x48],0x1d98630c
  41d636:	push   ebp
  41d637:	(bad)  
  41d638:	inc    ebx
  41d639:	pop    ss
  41d63a:	int3   
  41d63b:	es pop ecx
  41d63d:	mov    ds:0xc4aa0010,ax
  41d643:	es pop esi
  41d645:	pop    ebx
  41d646:	mov    dl,0xfd
  41d648:	pop    ebx
  41d649:	mov    ds:0xaa5d7773,eax
  41d64e:	leave  
  41d64f:	or     al,BYTE PTR [esi-0x6bc3c75b]
  41d655:	sub    edi,edx
  41d657:	dec    eax
  41d658:	icebp  
  41d659:	aaa    
  41d65a:	dec    ecx
  41d65b:	or     bl,BYTE PTR [ebx+esi*8+0x772f85ba]
  41d662:	ret    
  41d663:	enter  0x28b3,0x90
  41d667:	and    DWORD PTR [edx+0x7d],ecx
  41d66a:	retf   
  41d66b:	test   DWORD PTR [edi+0x2f],edx
  41d66e:	mov    ebp,0xccb9883
  41d673:	jge    0x41d636
  41d675:	xor    BYTE PTR [eax],dh
  41d677:	jle    0x41d618
  41d679:	pop    edx
  41d67a:	icebp  
  41d67b:	sar    DWORD PTR [ebx],cl
  41d67d:	in     al,dx
  41d67e:	or     al,0xe7
  41d680:	push   esi
  41d681:	inc    ebx
  41d682:	not    DWORD PTR [ebx]
  41d684:	popa   
  41d685:	imul   ecx,DWORD PTR [ecx-0x64],0x48
  41d689:	je     0x41d610
  41d68b:	leave  
  41d68c:	cmc    
  41d68d:	mov    ds:0xbb5a9b08,eax
  41d692:	retf   0x22af
  41d695:	jo     0x41d6fa
  41d697:	int    0xd9
  41d699:	xchg   esi,eax
  41d69a:	sub    ah,BYTE PTR [eax+0x4305dc02]
  41d6a0:	test   DWORD PTR [ebx],eax
  41d6a2:	mov    dl,0x6b
  41d6a4:	test   BYTE PTR [eax],ah
  41d6a6:	adc    DWORD PTR [edi+0x53],ebp
  41d6a9:	jge    0x41d65f
  41d6ab:	mov    ds:0x48deb07,eax
  41d6b0:	push   ecx
  41d6b1:	xor    al,0x6d
  41d6b3:	(bad)  
  41d6b4:	push   eax
  41d6b5:	test   eax,0xbd1de096
  41d6ba:	adc    bh,cl
  41d6bc:	fld    QWORD PTR [esi]
  41d6be:	push   esp
  41d6bf:	retf   
  41d6c0:	popa   
  41d6c1:	in     al,dx
  41d6c2:	adc    ecx,DWORD PTR [ecx+0x6e455330]
  41d6c8:	je     0x41d668
  41d6ca:	cld    
  41d6cb:	das    
  41d6cc:	adc    eax,DWORD PTR [ebx]
  41d6ce:	sub    DWORD PTR [eax+0x1b],0xca4d14d3
  41d6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d6:	mov    eax,ds:0xbfe10c88
  41d6db:	jae    0x41d6d6
  41d6dd:	pushf  
  41d6de:	stos   BYTE PTR es:[edi],al
  41d6df:	cs xor eax,0x8aba8704
  41d6e5:	fsubr  DWORD PTR [esi]
  41d6e7:	mov    eax,0x8ac63ba2
  41d6ec:	test   eax,0x8fb1a2d7
  41d6f1:	mov    esi,0x67b7e6b
  41d6f6:	mov    BYTE PTR ds:0x448c13c5,bh
  41d6fc:	xchg   edi,eax
  41d6fd:	mov    ecx,0xf66e2f9d
  41d702:	in     eax,dx
  41d703:	adc    bh,BYTE PTR [ecx-0x1]
  41d706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d707:	mov    eax,edi
  41d709:	cmp    dh,ah
  41d70b:	pop    ss
  41d70c:	mov    esi,0x974066fb
  41d711:	cdq    
  41d712:	sub    eax,DWORD PTR [edx]
  41d714:	mov    bl,BYTE PTR [ecx]
  41d716:	in     eax,0x26
  41d718:	inc    esp
  41d719:	sar    BYTE PTR [ebp+0x2103cacc],cl
  41d71f:	(bad)  
  41d720:	test   DWORD PTR [esi+ebp*1],0x99df064c
  41d727:	xor    esp,ebx
  41d729:	loop   0x41d79e
  41d72b:	in     eax,dx
  41d72c:	retf   0x3518
  41d72f:	or     DWORD PTR [edx],0x39f0a06
  41d735:	enter  0xbb03,0x3
  41d739:	cmc    
  41d73a:	inc    edx
  41d73b:	rol    ch,0xc3
  41d73e:	iret   
  41d73f:	ror    BYTE PTR [edi-0x2e],cl
  41d742:	out    dx,al
  41d743:	pop    edi
  41d744:	pop    ss
  41d745:	in     eax,0x67
  41d747:	xchg   esp,eax
  41d748:	mov    eax,ds:0x612121ff
  41d74d:	jl     0x41d75c
  41d74f:	pop    edi
  41d750:	hlt    
  41d751:	mov    ds:0x1f88db9d,al
  41d756:	inc    edx
  41d757:	loop   0x41d7aa
  41d759:	in     al,dx
  41d75a:	stc    
  41d75b:	xchg   ebx,eax
  41d75c:	xor    bh,ch
  41d75e:	xor    eax,0xa17eb611
  41d763:	loope  0x41d769
  41d765:	les    esi,FWORD PTR [eax]
  41d767:	mov    al,ds:0xa99fbecc
  41d76c:	mov    ah,0xd4
  41d76e:	aas    
  41d76f:	cli    
  41d770:	xchg   ebx,eax
  41d771:	xchg   BYTE PTR [esi],dl
  41d773:	sub    DWORD PTR cs:[eax-0xf],0xffffff90
  41d778:	inc    esi
  41d779:	arpl   ax,dx
  41d77b:	aam    0x9e
  41d77d:	jmp    0x98990da4
  41d782:	sub    eax,0x701cf103
  41d787:	jge    0x41d779
  41d789:	xchg   ebp,eax
  41d78a:	in     al,0x5a
  41d78c:	loop   0x41d7b1
  41d78e:	mov    edx,ds
  41d790:	jb     0x41d80a
  41d792:	stos   BYTE PTR es:[edi],al
  41d793:	jbe    0x41d754
  41d795:	push   0x2c
  41d797:	scas   eax,DWORD PTR es:[edi]
  41d798:	jp     0x41d740
  41d79a:	jnp    0x41d767
  41d79c:	cdq    
  41d79d:	jp     0x41d749
  41d79f:	ret    0x54ee
  41d7a2:	into   
  41d7a3:	add    BYTE PTR [edx-0x4b9c6a26],dh
  41d7a9:	mov    dh,0x88
  41d7ab:	jmp    0xf7b6c723
  41d7b0:	push   ds
  41d7b1:	jmp    0x41d783
  41d7b3:	add    DWORD PTR [edx-0x554d6b6c],esi
  41d7b9:	xor    eax,0xa33dfbbe
  41d7be:	fstp   st(3)
  41d7c0:	cmp    dl,BYTE PTR [ecx]
  41d7c2:	mov    WORD PTR ds:0xa81897ae,gs
  41d7c8:	dec    edx
  41d7c9:	add    cl,dh
  41d7cb:	sub    DWORD PTR [edx],esi
  41d7cd:	fwait
  41d7ce:	add    eax,0x3555602c
  41d7d3:	cmp    DWORD PTR [edi],ecx
  41d7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d6:	loop   0x41d7a1
  41d7d8:	stc    
  41d7d9:	inc    eax
  41d7da:	jnp    0x41d7ec
  41d7dc:	mov    al,ds:0xfe3640bb
  41d7e1:	sbb    bh,ah
  41d7e3:	xchg   esp,eax
  41d7e4:	mov    ecx,0x66608008
  41d7e9:	jge    0x41d867
  41d7eb:	sub    cl,BYTE PTR [edi-0x61cfa2f6]
  41d7f1:	mov    ebx,0xae674708
  41d7f6:	mov    dl,BYTE PTR [edx]
  41d7f8:	xchg   esp,eax
  41d7f9:	shl    edi,cl
  41d7fb:	xchg   esp,eax
  41d7fc:	sahf   
  41d7fd:	fsub   DWORD PTR [edx+0x37]
  41d800:	bound  ecx,QWORD PTR [esi+0x49c5340f]
  41d806:	jge    0x41d846
  41d808:	ror    bl,cl
  41d80a:	cdq    
  41d80b:	and    DWORD PTR [ecx],esi
  41d80d:	inc    ecx
  41d80e:	int    0x11
  41d810:	fdivr  QWORD PTR [edx]
  41d812:	cmp    bl,bh
  41d814:	jl     0x41d86a
  41d816:	fidivr DWORD PTR [ecx-0x42]
  41d819:	push   eax
  41d81a:	sbb    edx,esp
  41d81c:	cld    
  41d81d:	addr16 cmc 
  41d81f:	clc    
  41d820:	imul   ebp,DWORD PTR [eax-0x285d85cf],0xffffff91
  41d827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d828:	sti    
  41d829:	cmp    DWORD PTR [edi-0x65],edi
  41d82c:	xchg   BYTE PTR [esi-0x2f40e6b7],dl
  41d832:	mov    eax,ds:0x7093dc9e
  41d837:	inc    ebx
  41d838:	jnp    0x41d8a9
  41d83a:	dec    edx
  41d83b:	sbb    al,0x12
  41d83d:	in     eax,dx
  41d83e:	adc    al,0x4b
  41d840:	jne    0x23b68fc5
  41d846:	cmp    edi,esp
  41d848:	or     eax,DWORD PTR [esi-0x40]
  41d84b:	push   ebp
  41d84c:	mov    edi,0xbba7ae66
  41d851:	and    bl,BYTE PTR [ebx+0x29ef164d]
  41d857:	sbb    DWORD PTR [eax-0x3c],esi
  41d85a:	mov    eax,0xbdbf0081
  41d85f:	cmp    BYTE PTR [edi+0x49a8e25c],cl
  41d865:	sbb    dl,BYTE PTR [edi+eiz*1-0x260c5fc9]
  41d86c:	imul   edx,DWORD PTR [ebx+esi*8-0x1b],0xca74feec
  41d874:	outs   dx,DWORD PTR ds:[esi]
  41d875:	inc    ecx
  41d876:	je     0x41d8a2
  41d878:	push   eax
  41d879:	mov    ah,0x64
  41d87b:	pusha  
  41d87c:	dec    esp
  41d87d:	ss out dx,eax
  41d87f:	popa   
  41d880:	into   
  41d881:	pop    ebp
  41d882:	sub    edx,esp
  41d884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d885:	or     DWORD PTR [edx+esi*8+0x10],ebp
  41d889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d88a:	dec    ebp
  41d88b:	xor    eax,0xc864e85a
  41d890:	cdq    
  41d891:	push   eax
  41d892:	pop    esp
  41d893:	dec    esi
  41d894:	retf   0xaefa
  41d897:	in     eax,dx
  41d898:	sub    BYTE PTR [edx-0x11ae5a4],al
  41d89e:	adc    eax,0x5aa9d6de
  41d8a3:	fs inc ebx
  41d8a5:	mov    bl,0x65
  41d8a7:	imul   ecx,edx,0xffffffe1
  41d8aa:	js     0x41d8b3
  41d8ac:	lock data16 mov bl,0x3e
  41d8b0:	ret    0x7734
  41d8b3:	outs   dx,BYTE PTR es:[esi]
  41d8b5:	cmp    eax,0x81983f44
  41d8ba:	popa   
  41d8bb:	rcl    DWORD PTR [edx-0x7cbdc75f],cl
  41d8c1:	leave  
  41d8c2:	lods   eax,DWORD PTR ds:[esi]
  41d8c3:	push   esp
  41d8c4:	in     eax,dx
  41d8c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8c6:	test   edi,ecx
  41d8c8:	jle    0x41d8ce
  41d8ca:	jmp    0x41d903
  41d8cc:	or     al,0xed
  41d8ce:	mov    edx,0xed631928
  41d8d3:	or     dl,bl
  41d8d5:	pop    ebx
  41d8d6:	shr    DWORD PTR [bx+si],cl
  41d8d9:	(bad)  
  41d8da:	stc    
  41d8db:	fsub   DWORD PTR [edx+eiz*2]
  41d8de:	leave  
  41d8df:	adc    DWORD PTR [ebx-0x4f],ebx
  41d8e2:	push   eax
  41d8e3:	mov    bh,0xdd
  41d8e5:	aam    0xa3
  41d8e7:	fmul   DWORD PTR [edx+0x79dd48de]
  41d8ed:	push   0x7c
  41d8ef:	adc    bl,BYTE PTR [ecx+0x5d860680]
  41d8f5:	mov    DWORD PTR [edx-0x1c88ea67],edi
  41d8fb:	xor    cl,cl
  41d8fd:	ja     0x41d8e9
  41d8ff:	sbb    dl,BYTE PTR [eax]
  41d901:	das    
  41d902:	cli    
  41d903:	(bad)  [edx-0x7012f4ad]
  41d909:	rcr    BYTE PTR [ebx-0x1c3cdb4c],cl
  41d90f:	into   
  41d910:	in     al,dx
  41d911:	inc    eax
  41d912:	pop    esp
  41d913:	pop    edi
  41d914:	lock fs dec esi
  41d917:	dec    edi
  41d918:	mov    ecx,gs
  41d91a:	sbb    al,0x8
  41d91c:	dec    esp
  41d91d:	inc    edi
  41d91e:	cli    
  41d91f:	dec    edi
  41d920:	(bad)  
  41d922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d923:	cwde   
  41d924:	test   BYTE PTR [esp+edx*8+0x1905b941],bl
  41d92b:	dec    edx
  41d92c:	mov    ebx,0x770b44ec
  41d931:	or     eax,0xe129cee9
  41d936:	pop    es
  41d937:	div    BYTE PTR [edx+0x152fab63]
  41d93d:	repz pop edi
  41d93f:	or     ch,ah
  41d941:	(bad)  
  41d942:	retf   0x3476
  41d945:	sti    
  41d946:	ret    
  41d947:	mov    cl,0x92
  41d949:	(bad)  
  41d94a:	adc    edi,DWORD PTR [edi+0x2ee605cc]
  41d950:	jbe    0x41d9a0
  41d952:	adc    ch,al
  41d954:	pop    DWORD PTR [eax+ecx*2]
  41d957:	lahf   
  41d958:	xchg   BYTE PTR [eax],ch
  41d95a:	fisttp QWORD PTR [ebx]
  41d95c:	fdivr  QWORD PTR [edi]
  41d95e:	jmp    0x520690d6
  41d963:	or     BYTE PTR [esi],0x56
  41d966:	pcmpeqw mm2,mm0
  41d969:	bound  ecx,QWORD PTR [edi]
  41d96b:	xlat   BYTE PTR ds:[ebx]
  41d96c:	xchg   ebx,eax
  41d96d:	jp     0x41d9c2
  41d96f:	mov    ds:0xb30a89f3,al
  41d974:	sti    
  41d975:	jp     0x41d947
  41d977:	sub    BYTE PTR [ecx],al
  41d979:	cmp    BYTE PTR [ebp-0x6d2cef10],0xac
  41d980:	cmp    ebx,DWORD PTR [ecx+ebx*1+0x3b7579b3]
  41d987:	(bad)  
  41d988:	pop    ebx
  41d989:	test   BYTE PTR [edx],bl
  41d98b:	dec    eax
  41d98c:	test   DWORD PTR [ebp+ebp*2+0x3a823ddd],0xbe24e58f
  41d997:	fidiv  WORD PTR [ecx]
  41d999:	aam    0x6a
  41d99b:	mov    cl,0x2
  41d99d:	icebp  
  41d99e:	jecxz  0x41d936
  41d9a0:	inc    ebx
  41d9a1:	ficom  WORD PTR [ebx]
  41d9a3:	adc    dl,BYTE PTR [ebx]
  41d9a5:	stos   BYTE PTR es:[edi],al
  41d9a6:	pop    ebx
  41d9a7:	inc    ecx
  41d9a8:	or     bh,ah
  41d9aa:	cmp    eax,0x4aa6f422
  41d9af:	and    eax,0xceb3b966
  41d9b4:	inc    edx
  41d9b5:	fucomp st(0)
  41d9b7:	gs pusha 
  41d9b9:	inc    ebp
  41d9ba:	push   edi
  41d9bb:	std    
  41d9bc:	ins    DWORD PTR es:[edi],dx
  41d9bd:	loope  0x41da2d
  41d9bf:	(bad)  
  41d9c0:	cmp    edx,ecx
  41d9c2:	aad    0xfd
  41d9c4:	and    BYTE PTR [esi+edx*4+0x71],dh
  41d9c8:	(bad)  
  41d9c9:	sbb    eax,0xa185ba54
  41d9ce:	cmp    al,0x1a
  41d9d0:	pop    ebx
  41d9d1:	adc    al,0x36
  41d9d3:	fwait
  41d9d4:	pop    es
  41d9d5:	scas   al,BYTE PTR es:[edi]
  41d9d6:	outs   dx,BYTE PTR ds:[esi]
  41d9d7:	or     eax,0xecbb15ed
  41d9dc:	pop    ds
  41d9dd:	rcl    DWORD PTR [ebx+eax*8+0x3f],cl
  41d9e1:	xor    al,BYTE PTR [edx-0x43]
  41d9e4:	jp     0x41da17
  41d9e6:	dec    ecx
  41d9e7:	repnz mov WORD PTR [eax+0x5de79970],?
  41d9ee:	pop    edi
  41d9ef:	mov    ch,0x4b
  41d9f1:	push   es
  41d9f2:	jb     0x41d9af
  41d9f4:	jg     0x41da74
  41d9f6:	jae    0x41d9fd
  41d9f8:	in     al,dx
  41d9f9:	sub    DWORD PTR [ecx-0x75fe9d16],0xffffffe4
  41da00:	xor    al,0x78
  41da02:	pop    eax
  41da03:	and    eax,0x420a51c
  41da08:	jecxz  0x41d99f
  41da0a:	frstorw [eax]
  41da0d:	and    BYTE PTR [esi+0x2d8c1b81],al
  41da13:	xchg   ebx,eax
  41da14:	daa    
  41da15:	fcmovu st,st(3)
  41da17:	mov    WORD PTR [ebx+ebp*2],fs
  41da1a:	mov    dh,0x7
  41da1c:	imul   esp,DWORD PTR gs:[ecx-0x4320cd8f],0xfa521643
  41da27:	sub    al,0x4
  41da29:	fsub   QWORD PTR [ecx]
  41da2b:	mov    cl,0x7d
  41da2d:	and    eax,0x347e9fd8
  41da32:	out    0xd,eax
  41da34:	push   ebx
  41da35:	add    BYTE PTR [esi+0x1c],dl
  41da38:	mov    edi,0x7f38dd27
  41da3d:	pop    edi
  41da3f:	loopne 0x41da7c
  41da41:	ret    0x9320
  41da44:	push   edx
  41da45:	(bad)  
  41da46:	jg     0x41d9d7
  41da48:	mov    bh,0xb9
  41da4a:	out    0xc1,eax
  41da4c:	pop    edi
  41da4d:	lods   eax,DWORD PTR ds:[esi]
  41da4e:	in     al,dx
  41da4f:	sub    al,0x78
  41da51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da52:	jecxz  0x41da5a
  41da54:	mov    eax,ds:0xefaaff0b
  41da59:	inc    eax
  41da5a:	aaa    
  41da5b:	cmp    al,ch
  41da5d:	push   cs
  41da5e:	fistp  QWORD PTR [ebp-0x26]
  41da61:	ret    0x9074
  41da64:	push   edx
  41da65:	dec    edx
  41da66:	sbb    edx,esi
  41da68:	cmp    al,0x14
  41da6a:	add    al,0x1
  41da6c:	inc    ebp
  41da6d:	fcom   DWORD PTR gs:[eax-0x3468c5a0]
  41da74:	push   edx
  41da75:	jns    0x41da79
  41da77:	call   0x80cd:0x4fe92367
  41da7e:	lods   al,BYTE PTR cs:[esi]
  41da80:	inc    ebp
  41da81:	sub    al,BYTE PTR [ecx]
  41da83:	inc    ecx
  41da84:	mov    ecx,0x9a8959d4
  41da89:	call   0x8ebf:0xca6db80d
  41da90:	out    dx,al
  41da91:	sub    cl,BYTE PTR [edi]
  41da93:	sti    
  41da94:	pushf  
  41da95:	outs   dx,BYTE PTR ds:[esi]
  41da96:	add    DWORD PTR [eax],esi
  41da98:	aad    0x33
  41da9a:	cs (bad) 
  41da9c:	mov    ebp,0xdb2915fb
  41daa1:	push   ds
  41daa2:	(bad)  
  41daa3:	mov    dl,0xd1
  41daa5:	mov    bl,0xe3
  41daa7:	imul   esi,ebp,0x45
  41daaa:	mov    esi,0x7cfcee3f
  41daaf:	dec    esi
  41dab0:	in     eax,0xf3
  41dab2:	inc    esi
  41dab3:	pushf  
  41dab4:	test   DWORD PTR [ebx],0x8432c0aa
  41daba:	push   0x9
  41dabc:	pop    ebx
  41dabd:	xor    ah,dh
  41dabf:	dec    ebx
  41dac0:	mov    dh,0xfd
  41dac2:	sub    eax,0xb14b298b
  41dac7:	clc    
  41dac8:	fadd   DWORD PTR [ebp-0x58]
  41dacb:	mov    ecx,0x5cf59aed
  41dad0:	int3   
  41dad1:	inc    ebp
  41dad2:	add    al,0x34
  41dad4:	adc    ebp,esp
  41dad6:	cmc    
  41dad7:	and    edi,DWORD PTR [esi+0x73]
  41dada:	aas    
  41dadb:	fild   WORD PTR [eax+ebp*1]
  41dade:	xchg   edx,eax
  41dadf:	sub    DWORD PTR [edi-0x4ec9daa1],esp
  41dae5:	test   al,bl
  41dae7:	mov    cl,0xe7
  41dae9:	push   cs
  41daea:	pushf  
  41daeb:	ret    0x7a86
  41daee:	cmp    bh,BYTE PTR [esi+0x2077fe54]
  41daf4:	or     DWORD PTR [edi],ebx
  41daf6:	cli    
  41daf7:	mov    ah,0x91
  41daf9:	xchg   esi,eax
  41dafa:	(bad)  
  41dafb:	push   0xd08b844d
  41db00:	add    al,BYTE PTR [ecx-0x1587ac60]
  41db06:	xchg   edi,eax
  41db07:	stos   BYTE PTR es:[edi],al
  41db08:	jg     0x41db07
  41db0a:	and    esp,ebp
  41db0c:	or     BYTE PTR [edx-0x1a838179],dl
  41db12:	and    eax,0x8304b88d
  41db17:	xorps  xmm2,XMMWORD PTR [edx]
  41db1a:	dec    esi
  41db1b:	loop   0x41db4a
  41db1d:	mov    ebx,0xeb0addf7
  41db22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db23:	ss mov dh,0x53
  41db26:	dec    ebp
  41db27:	sub    dh,BYTE PTR [edi]
  41db29:	fsubr  QWORD PTR [esi-0xf143809]
  41db2f:	adc    edi,0x3e019f9f
  41db35:	dec    ebx
  41db36:	ret    0xb9d6
  41db39:	mov    edi,0x92d01653
  41db3e:	fisubr WORD PTR [ebp-0x46201690]
  41db44:	jae    0x41db37
  41db46:	cmp    ch,ch
  41db48:	jl     0x41db46
  41db4a:	mov    dh,0x1e
  41db4c:	jne    0x41dafb
  41db4e:	sub    dh,0x2b
  41db51:	jbe    0x41db3b
  41db53:	mov    ds:0x550ab8c6,eax
  41db58:	xor    edi,DWORD PTR fs:[ebp+edx*4-0x68]
  41db5d:	push   esi
  41db5e:	outs   dx,BYTE PTR ds:[esi]
  41db5f:	mov    es,ebp
  41db61:	sub    al,0x97
  41db63:	mov    bl,0x5e
  41db65:	mov    bl,0x79
  41db67:	mov    ecx,0x22afa3e
  41db6c:	pop    ds
  41db6d:	mov    esi,0x1ec58319
  41db72:	(bad)  
  41db74:	xor    eax,0x490cd2d7
  41db79:	push   esp
  41db7a:	lods   eax,DWORD PTR ds:[esi]
  41db7b:	cmp    eax,0xd702b338
  41db80:	rcr    DWORD PTR [edi-0x3e],1
  41db83:	push   es
  41db84:	mov    bh,0x55
  41db86:	mov    eax,0x1f4468ff
  41db8b:	mov    dl,0x2d
  41db8d:	mov    ecx,0x378a3a09
  41db92:	pusha  
  41db93:	loopne 0x41db56
  41db95:	rol    BYTE PTR [edx],1
  41db97:	fadd   DWORD PTR [ebx+0x36d0cdb4]
  41db9d:	test   DWORD PTR [ebp-0x7ab4a495],eax
  41dba3:	cs cmp al,0x21
  41dba6:	pusha  
  41dba7:	dec    ebp
  41dba8:	inc    ecx
  41dba9:	inc    edx
  41dbaa:	das    
  41dbab:	and    BYTE PTR [ecx+edi*4],bh
  41dbae:	dec    eax
  41dbaf:	push   0xc46525d8
  41dbb4:	lds    esi,FWORD PTR [edx+0x1e]
  41dbb7:	pop    edi
  41dbb8:	and    eax,0xc430872c
  41dbbd:	retf   0x240c
  41dbc0:	mov    esp,0x96ba1d2c
  41dbc5:	loop   0x41dbe8
  41dbc7:	ins    BYTE PTR es:[edi],dx
  41dbc8:	xchg   ebx,eax
  41dbc9:	pop    ds
  41dbca:	jns    0x41dc3c
  41dbcc:	dec    edx
  41dbcd:	data16 (bad) 
  41dbcf:	(bad)  
  41dbd0:	ret    0xfc30
  41dbd3:	es dec ecx
  41dbd5:	(bad)
  41dbd9:	dec    edx
  41dbda:	dec    ecx
  41dbdb:	jne    0x41db87
  41dbdd:	xor    ch,BYTE PTR [edx]
  41dbdf:	int3   
  41dbe0:	ret    
  41dbe1:	stos   BYTE PTR es:[edi],al
  41dbe2:	inc    edx
  41dbe3:	push   ss
  41dbe4:	inc    edi
  41dbe5:	or     eax,0x7ac04d22
  41dbea:	push   edi
  41dbeb:	out    dx,eax
  41dbec:	aam    0x49
  41dbee:	faddp  st(5),st
  41dbf0:	int    0xda
  41dbf2:	cmp    DWORD PTR [esp],esi
  41dbf5:	and    BYTE PTR [esi],ah
  41dbf7:	sbb    eax,0x30b2601e
  41dbfc:	fbstp  TBYTE PTR [esi]
  41dbfe:	push   esi
  41dbff:	add    ebx,ebx
  41dc01:	mov    eax,0xc7daea73
  41dc06:	sbb    BYTE PTR [ecx-0x5bb4c597],cl
  41dc0c:	in     eax,dx
  41dc0d:	fnsave [ebp+0x51584d61]
  41dc13:	and    al,0x38
  41dc15:	mov    al,0x7e
  41dc17:	push   0x4f
  41dc19:	(bad)  
  41dc1a:	cmp    DWORD PTR ds:0xc7fdc5b0,ecx
  41dc20:	jmp    0x41dc0e
  41dc22:	rcr    BYTE PTR [ebx+eiz*2+0x25],cl
  41dc26:	loop   0x41dc3d
  41dc28:	and    ebx,DWORD PTR [eax+edx*8]
  41dc2b:	jmp    0x41dc66
  41dc2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc2e:	mov    ecx,0xac0a03d8
  41dc33:	stos   BYTE PTR es:[edi],al
  41dc34:	ret    
  41dc35:	mov    ds,WORD PTR [esi]
  41dc37:	and    bh,BYTE PTR [eax+0x5a]
  41dc3a:	xor    dl,BYTE PTR [eax-0x6fc95219]
  41dc40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc41:	pusha  
  41dc42:	popf   
  41dc43:	shl    DWORD PTR [ecx-0x74],0xf6
  41dc47:	nop
  41dc48:	cli    
  41dc49:	sub    cl,BYTE PTR [edi]
  41dc4b:	in     eax,0xd1
  41dc4d:	repz jno 0x41dc5f
  41dc50:	mov    gs,eax
  41dc52:	fs aam 0xf8
  41dc55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc56:	outs   dx,BYTE PTR ds:[esi]
  41dc57:	inc    esp
  41dc58:	shl    edi,0xad
  41dc5b:	test   DWORD PTR gs:[edi+0x1a305513],esp
  41dc62:	out    0xba,al
  41dc64:	jge    0x41dca2
  41dc66:	ret    
  41dc67:	out    0x5f,eax
  41dc69:	add    bl,BYTE PTR [ecx]
  41dc6b:	mov    al,0x21
  41dc6d:	add    al,0x4a
  41dc6f:	arpl   WORD PTR [edx],si
  41dc71:	mov    al,0x3a
  41dc73:	lods   al,BYTE PTR ds:[esi]
  41dc74:	xchg   DWORD PTR [edx+eax*2+0x2237b2ea],ebx
  41dc7b:	add    bl,dl
  41dc7d:	cdq    
  41dc7e:	test   eax,0x8c004f11
  41dc83:	(bad)
  41dc88:	idiv   DWORD PTR [edi]
  41dc8a:	fst    DWORD PTR [esi+0x9]
  41dc8d:	mov    esi,0x16222572
  41dc92:	in     eax,0x18
  41dc94:	mov    ecx,0x679760d8
  41dc99:	aad    0xce
  41dc9b:	xor    al,ch
  41dc9d:	inc    esi
  41dc9e:	jmp    0x2571dda1
  41dca3:	jnp    0x41dd1d
  41dca5:	in     al,dx
  41dca6:	xchg   edx,eax
  41dca7:	call   DWORD PTR [edi]
  41dca9:	mov    eax,ds:0x792252e1
  41dcae:	mov    esp,cs
  41dcb0:	rcr    BYTE PTR [edi-0x69],1
  41dcb3:	adc    eax,0x5d1102c6
  41dcb8:	rcl    BYTE PTR [ebp-0x79508235],1
  41dcbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcbf:	into   
  41dcc0:	xor    ah,bh
  41dcc2:	ins    DWORD PTR es:[edi],dx
  41dcc3:	xor    ebp,edx
  41dcc5:	scas   al,BYTE PTR es:[edi]
  41dcc6:	jge    0x41dd22
  41dcc8:	dec    edx
  41dcc9:	jns    0x41dc55
  41dccb:	jg     0x41dc78
  41dccd:	xlat   BYTE PTR ds:[ebx]
  41dcce:	adc    eax,0x32f47948
  41dcd3:	push   0xa8c9d5ce
  41dcd8:	mov    ebp,0xf30c8d70
  41dcdd:	dec    ebx
  41dcde:	scas   al,BYTE PTR es:[edi]
  41dcdf:	jmp    DWORD PTR [eax+0x4e]
  41dce2:	mov    al,ds:0xe65562c
  41dce7:	lods   eax,DWORD PTR ds:[esi]
  41dce8:	fcom   st(2)
  41dcea:	sbb    eax,0xe144aaad
  41dcef:	sar    DWORD PTR [edi+0x51],1
  41dcf2:	shr    BYTE PTR [esi+0x5f2d7b56],cl
  41dcf8:	sti    
  41dcf9:	adc    BYTE PTR [edx],ah
  41dcfb:	gs sar cl,1
  41dcfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcff:	dec    esi
  41dd00:	jge    0x41dd2e
  41dd02:	add    ah,BYTE PTR [eax]
  41dd04:	in     al,0xc8
  41dd06:	mov    eax,ds:0x9d80dfaf
  41dd0b:	call   0xde02:0xac766eca
  41dd12:	add    edi,DWORD PTR [ebx]
  41dd14:	clc    
  41dd15:	dec    ebx
  41dd16:	mov    esi,0xb3703bc1
  41dd1b:	inc    edx
  41dd1c:	test   eax,0xc2ab07d4
  41dd21:	cmp    edx,ebp
  41dd23:	lahf   
  41dd24:	inc    DWORD PTR [ecx]
  41dd26:	jbe    0x41dd1a
  41dd28:	sbb    edx,ecx
  41dd2a:	enter  0x97cc,0xda
  41dd2e:	leave  
  41dd2f:	daa    
  41dd30:	inc    ecx
  41dd31:	pop    edi
  41dd32:	add    eax,0x1d24ef97
  41dd37:	mov    eax,0xe1015d22
  41dd3c:	cmp    al,0xd6
  41dd3e:	(bad)  [ebp+eiz*2-0x26]
  41dd42:	lods   eax,DWORD PTR ds:[esi]
  41dd43:	pop    ecx
  41dd44:	xchg   edx,eax
  41dd45:	arpl   WORD PTR [esi],ax
  41dd47:	mov    esi,0x9975a009
  41dd4c:	nop
  41dd4d:	fs sahf 
  41dd4f:	retf   
  41dd50:	imul   edx,eax,0x5d72ea39
  41dd56:	push   edi
  41dd57:	jle    0x41dd5f
  41dd59:	sub    bh,BYTE PTR [ebp-0x6b]
  41dd5c:	ins    BYTE PTR es:[edi],dx
  41dd5d:	ficomp WORD PTR [ebx-0x2e01b37d]
  41dd63:	push   cs
  41dd64:	(bad)  
  41dd65:	repz pop ss
  41dd67:	push   edi
  41dd68:	test   DWORD PTR [ebx],ebp
  41dd6a:	dec    edx
  41dd6b:	xor    cl,bl
  41dd6d:	push   esp
  41dd6e:	out    dx,al
  41dd6f:	fwait
  41dd70:	fs inc ecx
  41dd72:	idiv   DWORD PTR [esi+0x245486f7]
  41dd78:	mov    eax,0xa4676f0f
  41dd7d:	repnz mov al,0x47
  41dd80:	pop    ss
  41dd81:	sub    edx,DWORD PTR [esi-0x7636ab0]
  41dd87:	cmp    ecx,edi
  41dd89:	inc    edi
  41dd8a:	xor    ch,dl
  41dd8c:	cmp    eax,0x8d6d3aa7
  41dd91:	mov    bl,0x1c
  41dd93:	out    dx,al
  41dd94:	ss dec eax
  41dd96:	cmp    esp,DWORD PTR [ebx]
  41dd98:	iret   
  41dd99:	lock lods al,BYTE PTR ds:[esi]
  41dd9b:	popf   
  41dd9c:	adc    DWORD PTR [edx-0x47a4ada],0x752a98fb
  41dda6:	sbb    DWORD PTR [edi-0x3e],esp
  41dda9:	jmp    0x4d0dfb50
  41ddae:	dec    esp
  41ddaf:	femms  
  41ddb1:	mov    al,0x3d
  41ddb3:	ret    
  41ddb4:	mov    al,ds:0xfd9df5e
  41ddba:	outs   dx,DWORD PTR ds:[esi]
  41ddbb:	in     al,0xe9
  41ddbd:	xor    al,0x34
  41ddbf:	ins    BYTE PTR es:[edi],dx
  41ddc0:	repz mov ds:0x87c645da,eax
  41ddc6:	push   edx
  41ddc7:	(bad)  
  41ddc8:	fild   WORD PTR [esi+0x78d7488]
  41ddce:	mov    cl,0xd5
  41ddd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd1:	fs aaa 
  41ddd3:	imul   eax,DWORD PTR [esi+0x31],0xffffffce
  41ddd7:	push   ebp
  41ddd8:	loop   0x41ddd6
  41ddda:	mov    al,0xf8
  41dddc:	fnsave [eax-0x5d]
  41dddf:	sub    dl,BYTE PTR [esi+edi*1+0x5a]
  41dde3:	popf   
  41dde4:	add    ecx,DWORD PTR [esi+ebx*8]
  41dde7:	mov    bh,0xd8
  41dde9:	int3   
  41ddea:	gs enter 0x440,0xc5
  41ddef:	shl    DWORD PTR [esi],cl
  41ddf1:	es mov ebp,0xca40f554
  41ddf7:	fistp  WORD PTR [edx+0x59]
  41ddfa:	mov    ebx,0x1af4533d
  41ddff:	sti    
  41de00:	xor    DWORD PTR [ebp-0x80],eax
  41de03:	icebp  
  41de04:	xchg   ecx,eax
  41de05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de06:	mov    edx,DWORD PTR [edx+0x17d94248]
  41de0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de0d:	sbb    dl,BYTE PTR [eax]
  41de0f:	fiadd  WORD PTR [eax+eiz*2]
  41de12:	or     BYTE PTR [ebx+0x7393bef3],bh
  41de18:	cmp    DWORD PTR [edi+edx*1+0x1c4fc90f],esp
  41de1f:	or     DWORD PTR [edi+0x7b5bfd70],ecx
  41de25:	call   0xfe09204a
  41de2a:	test   DWORD PTR [ebx-0x40252ad8],eax
  41de30:	jecxz  0x41de2d
  41de32:	pop    ss
  41de33:	jge    0x41de95
  41de35:	xor    BYTE PTR [edi+0x2540bf2d],dh
  41de3b:	adc    eax,0xf04a6eb0
  41de40:	dec    ebx
  41de41:	jnp    0x41de52
  41de43:	pop    es
  41de44:	dec    edx
  41de45:	mov    ah,BYTE PTR [eax-0xc]
  41de48:	daa    
  41de49:	push   es
  41de4a:	add    dl,BYTE PTR [ecx]
  41de4c:	(bad)  
  41de4d:	dec    esp
  41de4e:	(bad)  [edx]
  41de50:	dec    ebx
  41de51:	fldcw  WORD PTR [edi-0x45]
  41de54:	mov    ecx,0x368e7f97
  41de59:	dec    edx
  41de5a:	jecxz  0x41dde6
  41de5c:	pop    ebp
  41de5d:	jnp    0x41dde2
  41de5f:	sbb    eax,0x78fa761d
  41de64:	sbb    esp,ecx
  41de66:	dec    esi
  41de67:	cmp    BYTE PTR [ebx],cl
  41de69:	push   esp
  41de6a:	fmul   st,st(0)
  41de6c:	xor    eax,0x2c7ae804
  41de71:	ins    BYTE PTR es:[edi],dx
  41de72:	clc    
  41de73:	dec    eax
  41de74:	jno    0x41de70
  41de76:	dec    ebp
  41de77:	push   cs
  41de78:	loop   0x41dec4
  41de7a:	push   edx
  41de7b:	hlt    
  41de7c:	inc    ebx
  41de7d:	ret    
  41de7e:	mov    ecx,0x7e0c7396
  41de83:	xlat   BYTE PTR ds:[ebx]
  41de84:	push   edi
  41de85:	call   0x643832df
  41de8a:	dec    ebx
  41de8b:	dec    esi
  41de8c:	enter  0xc00e,0x8
  41de90:	sub    DWORD PTR [esi],edx
  41de92:	xor    ebp,DWORD PTR [edx+0x27]
  41de95:	and    BYTE PTR [eax+0x5e238600],ah
  41de9b:	adc    ch,bl
  41de9d:	int3   
  41de9e:	pop    es
  41de9f:	les    eax,FWORD PTR [ecx-0x5b]
  41dea2:	sbb    ah,al
  41dea4:	dec    ecx
  41dea5:	pop    eax
  41dea6:	test   BYTE PTR [ebx+esi*4+0x847a2cf],cl
  41dead:	leave  
  41deae:	xchg   BYTE PTR ds:0x3a0cd980,bh
  41deb4:	js     0x41ded0
  41deb6:	xchg   edx,eax
  41deb7:	xor    eax,0x60c5d2e1
  41debc:	xor    BYTE PTR [esi],ch
  41debe:	fbld   TBYTE PTR fs:[eax+0x23e661d4]
  41dec5:	call   0xc16c:0x3155e08c
  41decc:	pop    edi
  41decd:	scas   al,BYTE PTR es:[edi]
  41dece:	ret    0xc99f
  41ded1:	xchg   ebx,eax
  41ded2:	jge    0x41de5d
  41ded4:	in     eax,dx
  41ded5:	inc    ebp
  41ded6:	inc    ebx
  41ded7:	inc    esp
  41ded8:	inc    esp
  41ded9:	icebp  
  41deda:	adc    eax,DWORD PTR [eax+0x6c]
  41dedd:	xchg   edi,eax
  41dede:	into   
  41dedf:	lods   al,BYTE PTR ds:[esi]
  41dee0:	iret   
  41dee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee2:	adc    ebp,DWORD PTR [edi-0x76d4b00]
  41dee8:	push   cs
  41dee9:	js     0x41def3
  41deeb:	aad    0xb6
  41deed:	push   es
  41deee:	pop    esp
  41deef:	hlt    
  41def0:	jle    0x41df10
  41def2:	dec    ebx
  41def3:	mov    bh,0x9b
  41def5:	xchg   ebx,eax
  41def6:	test   al,0x86
  41def8:	mov    dh,0xfd
  41defa:	nop
  41defb:	fs ds mov edx,0xfef060fa
  41df02:	adc    BYTE PTR [eax],ah
  41df04:	ins    BYTE PTR es:[edi],dx
  41df05:	jno    0x41de91
  41df07:	mov    ch,0xe7
  41df09:	sbb    BYTE PTR [esi+0x68],cl
  41df0c:	xor    al,0x9a
  41df0e:	dec    esi
  41df0f:	pop    esi
  41df10:	ins    DWORD PTR es:[edi],dx
  41df11:	icebp  
  41df12:	push   cs
  41df13:	jns    0x41df71
  41df15:	out    0x54,al
  41df17:	push   DWORD PTR [esi-0x5f999c31]
  41df1d:	loopne 0x41df71
  41df1f:	push   edi
  41df20:	mov    edi,0x39cd9ff6
  41df25:	(bad)  
  41df26:	das    
  41df27:	sbb    BYTE PTR [edi+0x752c9f96],cl
  41df2d:	enter  0x794,0x4e
  41df31:	push   ecx
  41df32:	jg     0x41df42
  41df34:	xchg   esp,eax
  41df35:	cmp    BYTE PTR [edx-0x6a],bl
  41df38:	mov    ebp,DWORD PTR [ebx-0x1b]
  41df3b:	cmp    al,0xb2
  41df3d:	clc    
  41df3e:	je     0x41df76
  41df40:	test   dl,cl
  41df42:	cld    
  41df43:	cmp    edx,DWORD PTR [ebp+0x3]
  41df46:	(bad)  
  41df47:	repnz and BYTE PTR ds:0x36463d46,bl
  41df4e:	(bad)  
  41df4f:	ss je  0x41ded3
  41df52:	in     al,0x37
  41df54:	adc    al,0x6d
  41df56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df57:	ds sub al,0x2e
  41df5a:	cmp    cl,bl
  41df5c:	fcomi  st,st(6)
  41df5e:	repnz mov edx,0x8dc68995
  41df64:	(bad)  
  41df65:	sti    
  41df66:	adc    DWORD PTR [ecx+0xd],esp
  41df69:	in     al,dx
  41df6a:	pop    ds
  41df6b:	add    eax,0xf44e25d1
  41df70:	loop   0x41dfc4
  41df72:	stos   DWORD PTR es:[edi],eax
  41df73:	test   BYTE PTR [eax],bh
  41df75:	inc    ebx
  41df76:	stc    
  41df77:	mov    bl,0xb0
  41df79:	inc    edi
  41df7a:	jae    0x41df95
  41df7c:	pop    esi
  41df7d:	inc    ecx
  41df7e:	dec    ebx
  41df7f:	add    DWORD PTR [edx+ecx*1],ebp
  41df82:	loop   0x41df4b
  41df84:	aas    
  41df85:	leave  
  41df86:	(bad)  
  41df88:	repz ret 
  41df8a:	jle    0x41dfd2
  41df8c:	mov    DWORD PTR [ebx+0xc],edi
  41df8f:	sbb    cl,BYTE PTR [ebx]
  41df91:	mov    bh,0xa7
  41df93:	imul   edx,DWORD PTR [edi+0x65],0xffffffb7
  41df97:	stos   BYTE PTR es:[edi],al
  41df98:	or     eax,0x96215ea4
  41df9d:	cld    
  41df9e:	xchg   DWORD PTR [esi+eiz*1],ebx
  41dfa1:	or     ch,BYTE PTR [eax+0x3166e34e]
  41dfa7:	rcr    DWORD PTR [ebx-0x4b],1
  41dfaa:	inc    esi
  41dfab:	in     al,dx
  41dfac:	lods   al,BYTE PTR ds:[esi]
  41dfad:	mov    esp,0x12d48777
  41dfb2:	cmp    dl,BYTE PTR [edi]
  41dfb4:	xor    dl,BYTE PTR [esi+0x4b]
  41dfb7:	clc    
  41dfb8:	es push 0x437945a0
  41dfbe:	and    al,0xf7
  41dfc0:	lods   al,BYTE PTR ds:[esi]
  41dfc1:	ins    BYTE PTR es:[edi],dx
  41dfc2:	mov    DWORD PTR [edx+0x41a488e1],eax
  41dfc8:	out    0xd8,eax
  41dfca:	xchg   BYTE PTR [ecx],dh
  41dfcc:	shl    cl,cl
  41dfce:	cmp    ecx,DWORD PTR [edi]
  41dfd0:	imul   ebp,DWORD PTR [ebp+0x14d92b20],0x46f16f7e
  41dfda:	imul   ebp,DWORD PTR [edi],0x3d
  41dfdd:	scas   eax,DWORD PTR es:[edi]
  41dfde:	xchg   esi,eax
  41dfdf:	add    DWORD PTR [edi+0x76],ecx
  41dfe2:	add    cl,dl
  41dfe4:	mov    BYTE PTR [edx],0x4c
  41dfe7:	in     eax,0x2f
  41dfe9:	mov    al,ds:0x3083766c
  41dfee:	lods   al,BYTE PTR ds:[esi]
  41dfef:	push   ebp
  41dff0:	jmp    0x4605:0x2dd0d20e
  41dff7:	hlt    
  41dff8:	cmp    ch,BYTE PTR [ebp-0x60d9e6c5]
  41dffe:	out    0x81,al
  41e000:	(bad)
  41e003:	stos   BYTE PTR es:[edi],al
  41e004:	sahf   
  41e005:	or     ebx,DWORD PTR [ebx]
  41e007:	adc    al,0x1e
  41e009:	jl     0x41dfff
  41e00b:	leave  
  41e00c:	mov    ah,al
  41e00e:	cmp    eax,0x411ba3f9
  41e013:	call   0x318fc8e4
  41e018:	xor    BYTE PTR [edx-0x5f],dl
  41e01b:	call   0x58d3:0x3d0df272
  41e022:	xchg   ah,bh
  41e024:	stc    
  41e025:	inc    eax
  41e026:	adc    DWORD PTR [edx-0x11],eax
  41e029:	ins    BYTE PTR es:[edi],dx
  41e02a:	mov    ecx,0xa6e7f9cb
  41e02f:	dec    BYTE PTR [ebx]
  41e031:	dec    esp
  41e032:	jmp    0x41e0a6
  41e034:	mov    ecx,0xcdba3b71
  41e039:	fmul   DWORD PTR [edx+0x740cdddf]
  41e03f:	adc    dh,BYTE PTR [ebx]
  41e041:	sub    bh,BYTE PTR [ecx]
  41e043:	xor    al,0x83
  41e045:	jmp    0xfeb8:0x554d776f
  41e04c:	sar    BYTE PTR [ebp+0x71130e5d],0x78
  41e053:	mov    al,0xee
  41e055:	inc    esp
  41e056:	fmul   QWORD PTR [ecx+0x35]
  41e059:	gs mov eax,0x8a22da38
  41e05f:	xchg   esi,eax
  41e060:	cmp    edi,DWORD PTR [edi-0x608ca515]
  41e066:	in     eax,dx
  41e067:	sub    eax,DWORD PTR [ebp-0x58]
  41e06a:	sbb    eax,0x5b387099
  41e06f:	ins    DWORD PTR es:[edi],dx
  41e070:	inc    ebp
  41e071:	add    edx,ecx
  41e073:	test   eax,0x54ef76d0
  41e078:	lods   eax,DWORD PTR ds:[esi]
  41e079:	sub    eax,0x543a0ccf
  41e07e:	(bad)  
  41e07f:	(bad)  
  41e080:	aaa    
  41e081:	inc    eax
  41e082:	ret    
  41e083:	dec    esi
  41e084:	adc    bh,BYTE PTR [edx-0x5a]
  41e087:	fisttp DWORD PTR [ebx]
  41e08a:	icebp  
  41e08b:	adc    eax,0x48ce82f
  41e090:	out    0xf6,al
  41e092:	push   esi
  41e093:	cld    
  41e094:	fimul  DWORD PTR [ecx*4+0x2ede37e]
  41e09b:	mov    al,ds:0x5fe6ed
  41e0a0:	push   edi
  41e0a1:	inc    esi
  41e0a2:	jp     0x41e0e0
  41e0a4:	add    DWORD PTR [ebx+0x27],edi
  41e0a7:	xchg   edx,eax
  41e0a8:	dec    ebx
  41e0a9:	in     al,dx
  41e0aa:	cdq    
  41e0ab:	jecxz  0x41e128
  41e0ad:	and    al,0xa5
  41e0af:	pop    edx
  41e0b0:	xchg   edi,eax
  41e0b1:	pop    esp
  41e0b2:	jnp    0x41e0fd
  41e0b4:	mov    al,0x21
  41e0b6:	std    
  41e0b7:	inc    esi
  41e0b8:	pop    esp
  41e0b9:	xchg   esp,eax
  41e0ba:	enter  0x5104,0xd4
  41e0be:	cli    
  41e0bf:	cmp    eax,0x12fdb9cd
  41e0c4:	push   0xd0f264f
  41e0c9:	inc    ebp
  41e0ca:	mov    edx,0xf02ecc65
  41e0cf:	adc    DWORD PTR [ebx+0x730e818b],0xa7067918
  41e0d9:	inc    edi
  41e0da:	or     eax,0x589491c4
  41e0df:	adc    DWORD PTR [eax],edx
  41e0e1:	mov    ch,0xee
  41e0e3:	pop    ebx
  41e0e4:	pop    edx
  41e0e5:	inc    esi
  41e0e6:	arpl   WORD PTR ds:0x62cfe4bb,bp
  41e0ec:	outs   dx,DWORD PTR ds:[esi]
  41e0ed:	and    al,0x24
  41e0ef:	in     al,0x4a
  41e0f1:	loope  0x41e075
  41e0f3:	xchg   ebp,ecx
  41e0f5:	inc    edi
  41e0f6:	push   cs
  41e0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f8:	cmp    DWORD PTR [ecx+0x202772f8],esp
  41e0fe:	dec    ebx
  41e0ff:	retf   0xf0ea
  41e102:	repnz sahf 
  41e104:	sub    BYTE PTR [ebx-0x2b],dh
  41e107:	cld    
  41e108:	xchg   edi,ecx
  41e10a:	imul   esp,DWORD PTR [eax],0xba3a1010
  41e110:	clc    
  41e111:	shl    DWORD PTR [edi+0x2f57d14e],1
  41e117:	enter  0x9eb7,0xb7
  41e11b:	pop    gs
  41e11d:	mov    bl,0x80
  41e11f:	mov    eax,0x665438ac
  41e124:	jnp    0x41e0eb
  41e126:	cld    
  41e127:	mov    ecx,DWORD PTR [ecx]
  41e129:	and    eax,0x66245b00
  41e12e:	push   ebp
  41e12f:	cmp    DWORD PTR [eax],ebx
  41e131:	jne    0x41e0da
  41e133:	imul   ebp,DWORD PTR [ecx+0x7e7e10f9],0x17
  41e13a:	fs sub eax,0x76b07138
  41e140:	push   ds
  41e141:	loope  0x41e13f
  41e143:	cmp    al,0x9b
  41e145:	mov    eax,DWORD PTR [esi+0x4b876849]
  41e14b:	pushf  
  41e14c:	cmp    DWORD PTR [ebx+edx*4],edi
  41e14f:	mov    dh,BYTE PTR [ecx-0x5d]
  41e152:	pop    esp
  41e153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e154:	sub    esi,DWORD PTR [edx]
  41e156:	add    DWORD PTR [ecx],ebp
  41e158:	and    cl,BYTE PTR [eax+0x45]
  41e15b:	push   esi
  41e15c:	(bad)  
  41e15e:	push   ss
  41e15f:	sub    eax,0x8aa830ab
  41e164:	adc    ch,BYTE PTR [esi+edi*8+0x1b6cd4a6]
  41e16b:	xchg   DWORD PTR fs:0xa52f56d3,esp
  41e172:	fdivp  st(1),st
  41e174:	adc    ecx,DWORD PTR [ecx-0x30]
  41e177:	push   es
  41e178:	lods   eax,DWORD PTR gs:[esi]
  41e17a:	popa   
  41e17b:	xchg   ebx,eax
  41e17c:	hlt    
  41e17d:	adc    al,0xa3
  41e17f:	repnz xchg edi,eax
  41e181:	nop
  41e182:	jmp    0xa678:0x97a7a5a5
  41e189:	gs pop ebx
  41e18b:	sbb    dh,BYTE PTR [esp+ebp*8-0x3f0988b9]
  41e192:	add    edi,esi
  41e194:	mov    ecx,0x8caed8f3
  41e199:	test   BYTE PTR [eax],dh
  41e19b:	out    0x62,eax
  41e19d:	xchg   esi,eax
  41e19e:	inc    ecx
  41e19f:	jge    0x41e203
  41e1a1:	cs pop edi
  41e1a3:	imul   esi,DWORD PTR [ebp+0x6a],0xffffff88
  41e1a7:	and    esp,ebx
  41e1a9:	imul   ebx,DWORD PTR [edi],0xcfe85ca1
  41e1af:	push   ecx
  41e1b0:	mov    cl,dh
  41e1b2:	rcr    DWORD PTR [ebp+0x3bfac15a],1
  41e1b8:	or     eax,0x9eb4f040
  41e1bd:	pop    es
  41e1be:	push   edx
  41e1bf:	into   
  41e1c0:	(bad)  
  41e1c1:	outs   dx,BYTE PTR ds:[esi]
  41e1c2:	dec    esp
  41e1c3:	test   eax,0x98744b7b
  41e1c8:	mov    ds,eax
  41e1ca:	hlt    
  41e1cb:	xchg   DWORD PTR [ecx-0xdb61165],ecx
  41e1d1:	push   edi
  41e1d2:	sahf   
  41e1d3:	retf   0x6fd8
  41e1d6:	outs   dx,BYTE PTR ds:[esi]
  41e1d7:	mov    eax,ds:0x8c2df787
  41e1dc:	and    DWORD PTR [esi+eax*4+0x15],esi
  41e1e0:	sti    
  41e1e1:	cs push cs
  41e1e3:	outs   dx,DWORD PTR ds:[esi]
  41e1e4:	outs   dx,DWORD PTR ds:[esi]
  41e1e5:	or     al,0x70
  41e1e7:	push   esi
  41e1e8:	sub    dl,BYTE PTR [ebx]
  41e1ea:	enter  0xf690,0x22
  41e1ee:	pushf  
  41e1ef:	idiv   BYTE PTR [esi-0x63]
  41e1f2:	outs   dx,BYTE PTR ds:[esi]
  41e1f3:	mov    ah,0xf2
  41e1f5:	xor    al,0x4f
  41e1f7:	push   ds
  41e1f8:	cwde   
  41e1f9:	js     0x41e1bf
  41e1fb:	mov    ecx,DWORD PTR [eax-0x6f]
  41e1fe:	outs   dx,DWORD PTR ds:[esi]
  41e1ff:	sub    al,0x8a
  41e201:	int3   
  41e202:	(bad)  
  41e203:	pop    ebp
  41e204:	push   0x74
  41e206:	mov    cl,0xd5
  41e208:	jle    0x41e1fd
  41e20a:	scas   eax,DWORD PTR es:[edi]
  41e20b:	lods   al,BYTE PTR ds:[esi]
  41e20c:	test   eax,0x13740e93
  41e211:	fadd   QWORD PTR [esp+eiz*8+0x4a]
  41e215:	sbb    dl,ah
  41e217:	leave  
  41e218:	fld    DWORD PTR [edi+ebp*8]
  41e21b:	mov    al,0xed
  41e21d:	cmp    DWORD PTR [edx-0x182b8c6e],0x24
  41e224:	add    BYTE PTR [esi-0x7c32e95b],al
  41e22a:	jns    0x41e27c
  41e22c:	aaa    
  41e22d:	out    dx,al
  41e22e:	shl    bh,cl
  41e230:	mov    bl,bl
  41e232:	jns    0x41e1de
  41e234:	sti    
  41e235:	fild   QWORD PTR [esi-0x7b]
  41e238:	lods   al,BYTE PTR ds:[esi]
  41e239:	jmp    0xb290ad62
  41e23e:	(bad)  
  41e23f:	outs   dx,DWORD PTR ds:[esi]
  41e240:	not    DWORD PTR [edi+eiz*4+0x6d0ce8]
  41e247:	scas   eax,DWORD PTR es:[edi]
  41e248:	push   ebp
  41e249:	sbb    DWORD PTR [ebx+0x268419fc],ecx
  41e24f:	test   BYTE PTR [ecx],0xfc
  41e252:	xor    eax,0x631cb3e0
  41e257:	sbb    eax,0x2b6d2abf
  41e25c:	ret    
  41e25d:	ss cs mov esp,0x3bdc47c0
  41e264:	fcom   DWORD PTR [ebx+0x47]
  41e267:	retf   0x9fdb
  41e26a:	lahf   
  41e26b:	jnp    0xe69036eb
  41e271:	icebp  
  41e272:	mov    ch,0xac
  41e274:	push   eax
  41e275:	ins    BYTE PTR es:[edi],dx
  41e276:	and    BYTE PTR [edx+0x12],0x7e
  41e27a:	push   edi
  41e27b:	and    esp,DWORD PTR [ecx]
  41e27d:	fs aam 0xf7
  41e280:	call   0x5fca0e1e
  41e285:	fstp   TBYTE PTR [edi+esi*1]
  41e288:	xchg   edi,eax
  41e289:	outs   dx,DWORD PTR ds:[esi]
  41e28a:	cmp    dl,BYTE PTR [edx+0x548202b]
  41e290:	mov    ah,0xa9
  41e292:	adc    eax,esp
  41e294:	sbb    DWORD PTR [ecx-0x5c00dbce],ecx
  41e29a:	adc    eax,0xb21b9d89
  41e29f:	mov    DWORD PTR [ebx-0x49524361],edx
  41e2a5:	sub    eax,0x722ab2b9
  41e2aa:	bound  ecx,QWORD PTR [edx]
  41e2ac:	mov    bl,0xb
  41e2ae:	int    0xf8
  41e2b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2b1:	mov    ecx,0xb06a1395
  41e2b6:	les    esp,FWORD PTR [ecx+0x604cc946]
  41e2bc:	jmp    0x41e24e
  41e2be:	test   eax,0xdf12796a
  41e2c3:	xor    ecx,DWORD PTR [eax]
  41e2c5:	sbb    dl,bl
  41e2c7:	mov    ecx,eax
  41e2c9:	lods   al,BYTE PTR ds:[esi]
  41e2ca:	(bad)
  41e2cd:	mov    bl,0xc2
  41e2cf:	xchg   ebx,eax
  41e2d0:	xor    al,al
  41e2d2:	(bad)  
  41e2d3:	arpl   WORD PTR [esi],si
  41e2d5:	or     edi,eax
  41e2d7:	stos   BYTE PTR es:[edi],al
  41e2d8:	aas    
  41e2d9:	test   al,0xbf
  41e2db:	retf   0xa9ff
  41e2de:	xrelease xchg DWORD PTR [edx],esi
  41e2e1:	jp     0x41e35b
  41e2e3:	in     eax,0x20
  41e2e5:	sbb    al,0x64
  41e2e7:	jb     0x41e35c
  41e2e9:	in     eax,0x1a
  41e2eb:	sub    cl,cl
  41e2ed:	(bad)  
  41e2ee:	enter  0x7932,0x6a
  41e2f2:	aas    
  41e2f3:	scas   al,BYTE PTR es:[edi]
  41e2f4:	add    DWORD PTR [eax-0x54],eax
  41e2f7:	retf   0x26b8
  41e2fa:	out    dx,eax
  41e2fb:	fdivr  DWORD PTR [ebx]
  41e2fd:	out    0x13,al
  41e2ff:	inc    ebx
  41e300:	push   0xd2fecc4b
  41e305:	and    DWORD PTR [ecx],ecx
  41e307:	in     eax,0x47
  41e309:	es into 
  41e30b:	mov    al,0x19
  41e30d:	jns    0x41e297
  41e30f:	ror    eax,1
  41e311:	sahf   
  41e312:	inc    ecx
  41e313:	inc    esp
  41e314:	and    BYTE PTR [ecx-0x68],dl
  41e317:	jecxz  0x41e2be
  41e319:	out    0xeb,eax
  41e31b:	das    
  41e31c:	sbb    eax,edx
  41e31e:	fistp  QWORD PTR [eax+ebp*1-0x7a]
  41e322:	ins    BYTE PTR es:[edi],dx
  41e323:	add    BYTE PTR [ebx],0x9f
  41e326:	push   esi
  41e327:	inc    eax
  41e328:	fdiv   DWORD PTR [edi+0x2f]
  41e32b:	sbb    eax,0x2befb068
  41e330:	ins    BYTE PTR es:[edi],dx
  41e331:	aad    0x5d
  41e333:	pop    ecx
  41e334:	dec    ecx
  41e335:	mov    ebp,0xf1f0a8d
  41e33a:	xor    cl,0x6e
  41e33d:	arpl   WORD PTR [eax],bp
  41e33f:	push   ebx
  41e340:	sbb    edi,DWORD PTR [ebx+0x3dedbdf5]
  41e346:	fidiv  DWORD PTR [esi+0x6e32c36f]
  41e34c:	std    
  41e34d:	inc    esi
  41e34e:	cmp    BYTE PTR [esp+ebx*8-0x4522cf67],ah
  41e355:	mov    bh,0x5f
  41e357:	sub    eax,0x65f2c37a
  41e35c:	xor    edx,edi
  41e35e:	jns    0x41e369
  41e360:	adc    dl,ah
  41e362:	inc    edx
  41e363:	or     edi,DWORD PTR [edi+0x4cf8800c]
  41e369:	imul   ebp,DWORD PTR [eax+esi*2+0x5668e16c],0x7e
  41e371:	ds test edx,edi
  41e374:	inc    esp
  41e375:	pop    ss
  41e376:	sub    BYTE PTR [edi],ah
  41e378:	ja     0x41e3c2
  41e37a:	jle    0x41e3a5
  41e37c:	icebp  
  41e37d:	mov    ah,0x8f
  41e37f:	add    ch,BYTE PTR [ecx]
  41e381:	scas   al,BYTE PTR es:[edi]
  41e382:	pop    ecx
  41e383:	xchg   ebx,eax
  41e384:	or     BYTE PTR [eax+0x45],0xf
  41e388:	aam    0xd2
  41e38a:	fst    DWORD PTR [edi-0x43a05a13]
  41e390:	ins    DWORD PTR es:[edi],dx
  41e391:	or     BYTE PTR [edi+esi*2+0x6fd31801],ch
  41e398:	mov    esp,cs
  41e39a:	pop    edi
  41e39b:	out    dx,al
  41e39c:	sub    al,0x38
  41e39e:	jp     0x41e3a5
  41e3a0:	stc    
  41e3a1:	adc    eax,0xc3cdf7ee
  41e3a6:	inc    eax
  41e3a7:	jl     0x41e393
  41e3a9:	sti    
  41e3aa:	fcomp  DWORD PTR [edi+0x212a3911]
  41e3b0:	dec    eax
  41e3b1:	pop    ecx
  41e3b2:	in     al,0xdd
  41e3b4:	imul   esi,edx,0xffffffac
  41e3b7:	cmp    edx,DWORD PTR [edi]
  41e3b9:	fs pop eax
  41e3bb:	mov    WORD PTR [ecx],?
  41e3bd:	fistp  DWORD PTR [edx+0x5e37cdcc]
  41e3c3:	mov    eax,DWORD PTR ds:[edx+0x7f404734]
  41e3ca:	pop    ds
  41e3cb:	mov    dl,0x9
  41e3cd:	repz leave 
  41e3cf:	ret    0x41bf
  41e3d2:	clc    
  41e3d3:	sub    dh,BYTE PTR [edi]
  41e3d5:	cdq    
  41e3d6:	pop    eax
  41e3d7:	stos   DWORD PTR es:[edi],eax
  41e3d8:	mov    esp,0x2ebaf4
  41e3dd:	test   BYTE PTR [ebp-0x45ecb08b],dh
  41e3e3:	rcr    DWORD PTR [ebp-0x5f2e1c32],cl
  41e3e9:	stos   DWORD PTR es:[edi],eax
  41e3ea:	imul   esi,esp,0x3
  41e3ed:	or     edi,DWORD PTR [eax+ecx*4+0x65]
  41e3f1:	xor    ecx,0x9b97fabc
  41e3f7:	xor    eax,0xa271b46f
  41e3fc:	jle    0x41e416
  41e3fe:	sar    BYTE PTR [edi-0x68],cl
  41e401:	mov    WORD PTR [ecx+0x7b13277f],fs
  41e407:	mov    ch,0x85
  41e409:	imul   ebp,DWORD PTR [esi],0x1927e3e3
  41e40f:	call   FWORD PTR [eax+0x2c]
  41e412:	inc    edi
  41e413:	jge    0x41e404
  41e415:	pop    esi
  41e416:	call   0xcf28:0x96ec0949
  41e41d:	push   es
  41e41e:	out    dx,al
  41e41f:	stos   DWORD PTR es:[edi],eax
  41e420:	jmp    0x41e474
  41e422:	sbb    DWORD PTR [ebx+0x51b19386],ebx
  41e428:	ins    BYTE PTR es:[edi],dx
  41e429:	xchg   esi,eax
  41e42a:	lahf   
  41e42b:	aad    0x16
  41e42d:	jp     0x41e48b
  41e42f:	lds    ebp,FWORD PTR [eax]
  41e431:	pop    es
  41e432:	out    dx,eax
  41e433:	push   ds
  41e434:	inc    eax
  41e435:	jge    0x41e427
  41e437:	dec    esp
  41e438:	icebp  
  41e439:	sub    bh,ah
  41e43b:	jmp    0x41e456
  41e43d:	out    0x39,eax
  41e43f:	lahf   
  41e440:	aaa    
  41e441:	dec    esi
  41e442:	sbb    BYTE PTR [eax],0x94
  41e445:	jmp    0xe7200254
  41e44a:	mov    eax,ds:0xaeced02c
  41e44f:	out    dx,eax
  41e450:	addr16 sti 
  41e452:	cmp    al,0x92
  41e454:	repnz in eax,dx
  41e456:	stc    
  41e457:	call   0x8724e927
  41e45c:	fisttp DWORD PTR [eax-0x50]
  41e45f:	je     0x41e402
  41e461:	xchg   esi,eax
  41e462:	call   DWORD PTR [ecx-0x714bf799]
  41e468:	scas   eax,DWORD PTR es:[edi]
  41e469:	aad    0xa7
  41e46b:	sub    eax,0x909d8e1c
  41e470:	ss push 0xe8ff6065
  41e476:	std    
  41e477:	dec    edx
  41e478:	pop    ebp
  41e479:	scas   al,BYTE PTR es:[edi]
  41e47a:	repnz shl BYTE PTR [ebp+0x146df4af],1
  41e481:	in     al,0xc5
  41e483:	ficomp DWORD PTR [ecx+0x7e9246f1]
  41e489:	lods   eax,DWORD PTR ds:[esi]
  41e48a:	and    bh,bh
  41e48c:	push   ds
  41e48d:	(bad)  
  41e48e:	or     edx,DWORD PTR [edx-0x21]
  41e491:	jbe    0x41e4bf
  41e493:	(bad)  
  41e494:	in     eax,0x8b
  41e496:	ds dec edx
  41e498:	imul   eax,DWORD PTR [edx+0x45],0xfffffff5
  41e49c:	xor    edx,esi
  41e49e:	out    0x12,al
  41e4a0:	sbb    al,0x8d
  41e4a2:	jnp    0x41e4d5
  41e4a4:	(bad)  
  41e4a5:	fdivr  st,st(0)
  41e4a7:	add    edx,esi
  41e4a9:	imul   ebp,DWORD PTR [edx+ebp*8+0x36],0x11edd25e
  41e4b1:	and    cl,0xa
  41e4b4:	ins    DWORD PTR es:[edi],dx
  41e4b5:	inc    ecx
  41e4b6:	aaa    
  41e4b7:	shr    DWORD PTR [ebp+0x331e5f71],1
  41e4bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4be:	aaa    
  41e4bf:	inc    edi
  41e4c0:	inc    eax
  41e4c1:	nop
  41e4c2:	push   0xae2aac38
  41e4c7:	jle    0x41e474
  41e4c9:	leave  
  41e4ca:	sbb    BYTE PTR [ecx+eiz*1],bl
  41e4cd:	xor    dl,BYTE PTR [ecx-0x6a]
  41e4d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4d1:	fdiv   QWORD PTR [edx]
  41e4d3:	out    dx,al
  41e4d4:	in     al,dx
  41e4d5:	push   ss
  41e4d6:	ins    DWORD PTR es:[edi],dx
  41e4d7:	(bad)  
  41e4d8:	sti    
  41e4d9:	adc    edi,DWORD PTR [edi+0x3ba4d23c]
  41e4df:	pop    eax
  41e4e0:	jb     0x41e4f4
  41e4e2:	jbe    0x41e493
  41e4e4:	dec    edi
  41e4e5:	cli    
  41e4e6:	push   edi
  41e4e7:	mov    esp,0x2f37e72d
  41e4ec:	popf   
  41e4ed:	and    al,0x1b
  41e4ef:	adc    ecx,DWORD PTR [edx-0x80]
  41e4f2:	rcr    DWORD PTR [ebx],cl
  41e4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4f5:	fdiv   QWORD PTR [ebp-0x57]
  41e4f8:	adc    edi,DWORD PTR [esi-0x2]
  41e4fb:	je     0x41e4d7
  41e4fd:	dec    edi
  41e4fe:	dec    esi
  41e4ff:	jmp    DWORD PTR [eax+0x32]
  41e502:	cmc    
  41e503:	cmp    DWORD PTR [ecx-0x24],0x602ec9e6
  41e50a:	cli    
  41e50b:	hlt    
  41e50c:	bound  eax,QWORD PTR [ecx+0x4f]
  41e50f:	and    eax,DWORD PTR [edi+edi*2+0xa]
  41e513:	shl    bh,cl
  41e515:	sub    al,0xb8
  41e517:	jp     0x41e4f2
  41e519:	jle    0x41e550
  41e51b:	mov    edi,0xdf860320
  41e520:	pushf  
  41e521:	mov    ds:0x88ef629b,eax
  41e526:	cdq    
  41e527:	stos   BYTE PTR es:[edi],al
  41e528:	sub    dl,BYTE PTR [ebp+ebp*8-0x15f86f3]
  41e52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e530:	sbb    eax,0xae9012d5
  41e535:	mov    dl,0xfa
  41e537:	sub    edx,DWORD PTR [edi+0x48215644]
  41e53d:	fdiv   st(4),st
  41e53f:	stos   BYTE PTR es:[edi],al
  41e540:	mov    eax,ds:0xf850cff3
  41e545:	test   eax,0xc98c0196
  41e54a:	or     eax,0xaba4be95
  41e54f:	jle    0x41e503
  41e551:	in     al,0xe3
  41e553:	mov    ds:0x5020c904,al
  41e558:	scas   al,BYTE PTR es:[edi]
  41e559:	pop    ebp
  41e55a:	test   eax,0x4f9f630e
  41e55f:	enter  0x97a8,0x16
  41e563:	push   cs
  41e564:	ror    BYTE PTR [edx-0x6d3599c3],1
  41e56a:	ret    0xa180
  41e56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e56e:	xchg   esp,eax
  41e56f:	push   ecx
  41e570:	xchg   edi,eax
  41e571:	cmc    
  41e572:	push   es
  41e573:	xchg   ebp,eax
  41e574:	lock dec ebx
  41e576:	fdivp  st(5),st
  41e578:	or     eax,0xccf78043
  41e57d:	add    al,0x6f
  41e57f:	pop    ebp
  41e580:	out    dx,al
  41e581:	mov    dh,0xf8
  41e583:	test   al,0x5f
  41e585:	fldenv [ecx]
  41e587:	pop    eax
  41e588:	das    
  41e589:	scas   al,BYTE PTR es:[edi]
  41e58a:	mov    ah,0x75
  41e58c:	inc    ecx
  41e58d:	cli    
  41e58e:	xchg   ebx,eax
  41e58f:	push   ebx
  41e590:	aam    0xa5
  41e592:	loope  0x41e5f1
  41e594:	icebp  
  41e595:	push   cs
  41e596:	or     DWORD PTR [esi+eax*2-0x46],eax
  41e59a:	inc    edx
  41e59b:	jl     0x41e5c2
  41e59d:	gs jmp 0xb415:0x28aab4ea
  41e5a5:	cli    
  41e5a6:	push   es
  41e5a7:	ret    
  41e5a8:	retf   0xdb88
  41e5ab:	rcl    BYTE PTR [edx+0x61f8fe9d],0xc8
  41e5b2:	sbb    bl,BYTE PTR [esi]
  41e5b4:	inc    edx
  41e5b5:	push   esi
  41e5b6:	jne    0x41e608
  41e5b8:	push   esi
  41e5b9:	retf   0xb8c2
  41e5bc:	sahf   
  41e5bd:	mov    DWORD PTR [ebp-0x79ab4c12],ebx
  41e5c3:	mov    ds:0xf56d4532,al
  41e5c8:	cwde   
  41e5c9:	xchg   ebp,eax
  41e5ca:	arpl   di,si
  41e5cc:	aas    
  41e5cd:	add    edi,DWORD PTR [edx-0x10]
  41e5d0:	adc    esp,esp
  41e5d2:	cmp    al,BYTE PTR [edx-0x5a]
  41e5d5:	mov    esi,0xdddd506b
  41e5da:	nop
  41e5db:	xchg   BYTE PTR [edi],cl
  41e5dd:	lods   eax,DWORD PTR ds:[esi]
  41e5de:	sbb    BYTE PTR [edx],cl
  41e5e0:	dec    esp
  41e5e1:	out    dx,eax
  41e5e2:	pusha  
  41e5e3:	and    DWORD PTR [eax+0x63],eax
  41e5e6:	loop   0x41e661
  41e5e8:	add    al,0x81
  41e5ea:	sub    al,BYTE PTR [edx+0x54f9a61]
  41e5f0:	nop
  41e5f1:	dec    eax
  41e5f2:	fdiv   QWORD PTR [edx]
  41e5f4:	or     eax,0xe5400c44
  41e5f9:	push   edi
  41e5fa:	(bad)  
  41e5fb:	fcom   QWORD PTR [ebx-0x7f]
  41e5fe:	lock (bad) 
  41e600:	(bad)  
  41e601:	lock sahf 
  41e603:	bound  esp,QWORD PTR [ebx]
  41e605:	cmp    ch,BYTE PTR [ebp-0x24b56a7f]
  41e60b:	pop    ss
  41e60c:	dec    edx
  41e60d:	imul   ebx,DWORD PTR [ebp+0x6a],0x9d09351b
  41e614:	mov    esi,0x20fe7d18
  41e619:	push   edx
  41e61a:	sahf   
  41e61b:	int3   
  41e61c:	mov    dl,bh
  41e61e:	mov    al,0xaf
  41e620:	sub    ecx,DWORD PTR [ecx+ebp*4+0x551ff3e4]
  41e627:	mov    DWORD PTR [esi],edx
  41e629:	dec    esp
  41e62a:	cmp    ebx,DWORD PTR [esi+0x2]
  41e62d:	shl    DWORD PTR [ebp+0xba1312],cl
  41e633:	pop    edx
  41e634:	dec    edi
  41e635:	mov    ebx,0xb9d07151
  41e63a:	inc    edi
  41e63b:	shl    BYTE PTR gs:[ebp+eiz*1+0x6209d1dc],0x9c
  41e644:	es retf 0x8bf7
  41e648:	fs out dx,al
  41e64a:	icebp  
  41e64b:	jo     0x41e6a9
  41e64d:	push   ss
  41e64e:	jge    0x41e6b6
  41e650:	cmc    
  41e651:	fmul   st(5),st
  41e653:	and    al,0x7f
  41e655:	push   0xffffffd9
  41e657:	clc    
  41e658:	fiadd  WORD PTR ds:0xec10834e
  41e65e:	imul   BYTE PTR [ebx]
  41e660:	xlat   BYTE PTR ds:[ebx]
  41e661:	sbb    bl,dh
  41e663:	icebp  
  41e664:	imul   esp,DWORD PTR [edi+0x1a],0x1cd57c90
  41e66b:	push   ecx
  41e66c:	xchg   ebx,eax
  41e66d:	fimul  WORD PTR [ebp-0x18e397e3]
  41e673:	pop    ss
  41e674:	lock outs dx,DWORD PTR ds:[esi]
  41e676:	xor    al,0x47
  41e678:	adc    DWORD PTR [edx-0xb97c40c],edx
  41e67e:	mov    edx,0x293e7df3
  41e683:	push   ecx
  41e684:	ds pop es
  41e686:	add    ch,0xaf
  41e689:	mov    eax,ds:0x694b7a25
  41e68e:	gs jae 0x41e68b
  41e691:	xchg   ebx,eax
  41e692:	repnz mov bh,dh
  41e695:	xchg   DWORD PTR [eax-0x3f],edi
  41e698:	cld    
  41e699:	inc    ebp
  41e69a:	push   0x10
  41e69c:	mov    dh,0xe6
  41e69e:	fnstcw WORD PTR [ebx+0x6c]
  41e6a1:	mov    ds:0xb28439ac,al
  41e6a6:	fdiv   st(6),st
  41e6a8:	jbe    0x41e719
  41e6aa:	push   ebx
  41e6ab:	test   DWORD PTR [ebx+ebp*4+0x58],edx
  41e6af:	test   ah,0xe7
  41e6b2:	push   ss
  41e6b3:	and    esi,ebx
  41e6b5:	xor    al,0x15
  41e6b7:	inc    ebx
  41e6b8:	std    
  41e6b9:	shr    BYTE PTR [edx-0x7be11557],1
  41e6bf:	lods   eax,DWORD PTR ds:[esi]
  41e6c1:	(bad)  
  41e6c2:	sar    DWORD PTR [bx+0x29c4],0x91
  41e6c8:	sub    DWORD PTR [ebp+edx*4+0x72],ecx
  41e6cc:	pushf  
  41e6cd:	popa   
  41e6ce:	push   ebx
  41e6cf:	pop    ebx
  41e6d0:	mov    ebx,DWORD PTR [eax]
  41e6d2:	mov    ds:0xfa3d75f7,eax
  41e6d7:	cld    
  41e6d8:	je     0x41e6e0
  41e6da:	cmp    ebx,ebp
  41e6dc:	push   ebx
  41e6dd:	dec    ecx
  41e6de:	call   0x7f4f5ad1
  41e6e3:	scas   eax,DWORD PTR es:[edi]
  41e6e4:	das    
  41e6e5:	adc    bh,BYTE PTR [ebx+edi*4-0x76]
  41e6e9:	push   0x4d896133
  41e6ee:	mov    al,0x1f
  41e6f0:	sbb    BYTE PTR [ecx],dl
  41e6f2:	cmc    
  41e6f3:	pop    ebx
  41e6f4:	xchg   esp,eax
  41e6f5:	hlt    
  41e6f6:	in     eax,dx
  41e6f7:	(bad)  
  41e6f8:	mov    ebx,0x69b8c1dd
  41e6fd:	daa    
  41e6fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ff:	pop    ebx
  41e700:	mov    dh,0x1d
  41e702:	addr16 jmp 0x41e6a8
  41e705:	jmp    0xb7fd:0xef47eee7
  41e70c:	jle    0x41e788
  41e70e:	inc    esp
  41e70f:	sti    
  41e710:	xor    al,0x21
  41e712:	dec    ecx
  41e713:	mov    al,ds:0x3f1b0759
  41e718:	iret   
  41e719:	mov    esp,DWORD PTR [ecx]
  41e71b:	xlat   BYTE PTR ds:[ebx]
  41e71c:	aad    0xc2
  41e71e:	sub    DWORD PTR [edx-0x62],edi
  41e721:	inc    esp
  41e722:	mov    esi,0x8f150181
  41e727:	fild   DWORD PTR [ebx+0x78]
  41e72a:	mov    esi,0x572cb86f
  41e72f:	add    DWORD PTR [ecx+0x70c5e25a],ecx
  41e735:	jmp    0x7901:0x4421878c
  41e73c:	cmp    cl,al
  41e73e:	aas    
  41e73f:	(bad)  
  41e740:	cmp    DWORD PTR [eax+0x78fcb4b1],ecx
  41e746:	push   ebp
  41e747:	xchg   ebp,eax
  41e748:	sbb    DWORD PTR [eax],ecx
  41e74a:	xchg   ebx,eax
  41e74b:	xor    DWORD PTR ds:[ecx],eax
  41e74e:	cmp    eax,0x1a4b65f8
  41e753:	inc    edi
  41e754:	sbb    DWORD PTR [edx*1+0x7ca668bb],0xffffffea
  41e75c:	jae    0x41e7ac
  41e75e:	push   ss
  41e75f:	push   ebp
  41e760:	and    eax,0x3f60eec2
  41e765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e766:	aad    0x7f
  41e768:	(bad)  
  41e769:	and    DWORD PTR [ebx],esp
  41e76b:	daa    
  41e76c:	sub    esp,DWORD PTR ds:0xe3b1a092
  41e772:	retf   
  41e773:	outs   dx,BYTE PTR ds:[esi]
  41e774:	test   dh,0x9e
  41e777:	adc    BYTE PTR [edx-0x7c],bh
  41e77a:	cli    
  41e77b:	pop    esp
  41e77c:	ds xor ebp,edx
  41e77f:	jecxz  0x41e76c
  41e781:	pop    ebx
  41e782:	fwait
  41e783:	adc    eax,0x8df3c28f
  41e788:	jns    0x41e798
  41e78a:	jae    0x41e728
  41e78c:	cmp    bh,BYTE PTR [edi+0x4a]
  41e78f:	retf   
  41e790:	push   ds
  41e791:	cmp    al,0x5d
  41e793:	sub    bh,bh
  41e795:	sbb    al,0xf5
  41e797:	(bad)  
  41e798:	das    
  41e799:	push   es
  41e79a:	lods   al,BYTE PTR ds:[esi]
  41e79b:	enter  0xfb1d,0x8a
  41e79f:	or     cl,BYTE PTR [edx-0x37]
  41e7a2:	mov    esp,0x5749c2b5
  41e7a7:	jbe    0x41e78c
  41e7a9:	add    edi,0xb5968c3b
  41e7af:	test   eax,0x3a35b17f
  41e7b4:	hlt    
  41e7b5:	push   ebp
  41e7b6:	push   0xd873c0f4
  41e7bb:	icebp  
  41e7bc:	cmp    DWORD PTR ds:0x6528689,eax
  41e7c2:	nop
  41e7c3:	rcl    BYTE PTR [esp+eax*2+0x4cc318d5],0xab
  41e7cb:	loop   0x41e7a3
  41e7cd:	mov    cl,0x6c
  41e7cf:	(bad)  
  41e7d0:	not    DWORD PTR [ebp-0x27]
  41e7d3:	xchg   DWORD PTR [edi-0x9],ebx
  41e7d6:	and    BYTE PTR [esp+ecx*4-0x3],ah
  41e7da:	xchg   ecx,eax
  41e7db:	mov    bl,0x38
  41e7dd:	sub    edx,ecx
  41e7df:	inc    ecx
  41e7e0:	xor    dl,dl
  41e7e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7e3:	into   
  41e7e4:	fcmovbe st,st(0)
  41e7e6:	xor    BYTE PTR [ebp-0x36],cl
  41e7e9:	xchg   ebp,eax
  41e7ea:	jg     0x41e85c
  41e7ec:	mov    ebp,0x679fa69
  41e7f1:	sub    BYTE PTR [eax-0x66262a79],dl
  41e7f7:	mov    esp,0xeff84d2e
  41e7fc:	and    esp,esi
  41e7fe:	xchg   edi,eax
  41e7ff:	aad    0x86
  41e801:	lods   eax,DWORD PTR ds:[esi]
  41e802:	jno    0x41e798
  41e804:	xchg   DWORD PTR [edx+ebx*2+0x1c],esi
  41e808:	ja     0x41e866
  41e80a:	test   al,0x75
  41e80c:	pop    ebx
  41e80d:	xchg   BYTE PTR [esi],al
  41e80f:	mov    cl,0xa6
  41e811:	mov    al,ds:0x1683b88e
  41e816:	test   eax,0xeaf9ba24
  41e81b:	ret    
  41e81c:	xlat   BYTE PTR ds:[ebx]
  41e81d:	mov    esi,0x1ecef34c
  41e822:	retf   
  41e823:	pusha  
  41e824:	out    dx,al
  41e825:	dec    ebx
  41e826:	mov    ch,dh
  41e828:	imul   dl
  41e82a:	arpl   WORD PTR [ebx+0x47],cx
  41e82d:	push   0x28d1079a
  41e832:	retf   
  41e833:	mov    bl,0x57
  41e835:	add    esi,0xffffffe8
  41e838:	js     0x41e87a
  41e83a:	cwde   
  41e83b:	jnp    0x41e7ff
  41e83d:	adc    eax,DWORD PTR [ebp-0x25]
  41e840:	fnstsw WORD PTR [ecx-0x27]
  41e843:	repnz pop eax
  41e845:	in     eax,dx
  41e846:	outs   dx,BYTE PTR ds:[esi]
  41e847:	pop    ecx
  41e848:	adc    eax,0xf6af3905
  41e84d:	sub    ah,BYTE PTR [ebp+0x20]
  41e850:	and    al,0x9
  41e852:	pop    esi
  41e853:	idiv   DWORD PTR [edx+0x2]
  41e856:	lods   eax,DWORD PTR ds:[esi]
  41e857:	fnstenv [esp+eax*4+0x1d39b180]
  41e85e:	jmp    0x7dd7abba
  41e863:	xor    eax,0x3ab39de5
  41e868:	in     eax,0xc2
  41e86a:	outs   dx,BYTE PTR ds:[esi]
  41e86b:	fild   DWORD PTR [ecx]
  41e86d:	popf   
  41e86e:	sbb    al,0xf4
  41e870:	or     DWORD PTR [ecx-0x1c],eax
  41e873:	stos   DWORD PTR es:[edi],eax
  41e874:	mov    dh,0x7e
  41e876:	mov    esi,ecx
  41e878:	aad    0x98
  41e87a:	stos   BYTE PTR es:[edi],al
  41e87b:	sbb    ah,al
  41e87d:	addr16 ja 0x41e88c
  41e880:	push   ss
  41e881:	cmp    edi,esp
  41e883:	jmp    0x2d482884
  41e888:	xchg   ecx,eax
  41e889:	aam    0x9
  41e88b:	sbb    esp,DWORD PTR [ebx-0x2a]
  41e88e:	add    al,BYTE PTR [ebx-0x6654344e]
  41e894:	repnz daa 
  41e896:	iret   
  41e897:	pop    edi
  41e898:	in     al,dx
  41e899:	inc    esi
  41e89a:	jecxz  0x41e8cc
  41e89c:	retf   0x9715
  41e89f:	arpl   sp,sp
  41e8a1:	inc    eax
  41e8a2:	pop    ebx
  41e8a3:	add    dh,0x9a
  41e8a6:	ret    
  41e8a7:	add    DWORD PTR [edi+0x763c2bb5],edx
  41e8ad:	arpl   WORD PTR [edi+0x64],di
  41e8b0:	in     eax,dx
  41e8b1:	cmp    al,0x10
  41e8b3:	addr16 je 0x41e896
  41e8b6:	ds mov dh,0x60
  41e8b9:	mov    ecx,0xfd8093e7
  41e8be:	(bad)  
  41e8bf:	xchg   ebx,eax
  41e8c0:	push   eax
  41e8c1:	adc    BYTE PTR [edi+0xc],bl
  41e8c4:	mov    ds:0xaf50aee8,al
  41e8c9:	mov    ebp,0xa4889db9
  41e8ce:	xchg   DWORD PTR [ecx],edi
  41e8d0:	add    ch,BYTE PTR [eax+0x2decbf64]
  41e8d6:	addr16 test eax,0x98deeb0f
  41e8dc:	mov    ds:0x90044c51,eax
  41e8e1:	or     eax,0x38b7d581
  41e8e6:	mov    esp,0x3b8f928f
  41e8eb:	rol    DWORD PTR [esi+0x45ef8bec],0x13
  41e8f2:	mov    esi,0x2ed53682
  41e8f7:	or     DWORD PTR [esi-0x41],0xffffffed
  41e8fb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41e8fd:	iret   
  41e8fe:	inc    esp
  41e8ff:	sub    BYTE PTR [ecx+0x1380daf6],bl
  41e905:	out    0x1b,al
  41e907:	icebp  
  41e908:	push   eax
  41e909:	int    0x19
  41e90b:	icebp  
  41e90c:	aam    0x97
  41e90e:	sbb    eax,0xbf88f725
  41e913:	nop
  41e914:	retf   
  41e915:	jne    0x41e926
  41e917:	shr    DWORD PTR [ebx+0x6a],1
  41e91a:	push   ss
  41e91b:	js     0x41e8b9
  41e91d:	cmp    ebp,DWORD PTR [ebp+0x3c]
  41e920:	push   ebp
  41e921:	dec    eax
  41e922:	inc    ecx
  41e923:	adc    ebx,DWORD PTR [ecx+0x56]
  41e926:	not    BYTE PTR [eax-0x6e785fab]
  41e92c:	pop    ds
  41e92d:	daa    
  41e92e:	test   BYTE PTR [esi],bl
  41e930:	add    al,0x47
  41e932:	push   0xe7e16937
  41e937:	loopne 0x41e932
  41e939:	fwait
  41e93a:	push   ds
  41e93b:	jae    0x41e90f
  41e93d:	pop    ecx
  41e93e:	mov    ebp,0x8bdbd3f6
  41e943:	shl    DWORD PTR [ebp+0x48dbc94],1
  41e949:	sbb    BYTE PTR [ecx+0x55],ch
  41e94c:	dec    edx
  41e94d:	jl     0x41e9a7
  41e94f:	ret    0x464b
  41e952:	je     0x41e8d6
  41e954:	lahf   
  41e955:	cmp    DWORD PTR [ecx-0x6434886],edx
  41e95b:	fsub   QWORD PTR [esi-0x35]
  41e95e:	lahf   
  41e95f:	fiadd  DWORD PTR [eax+esi*8+0x58]
  41e963:	ins    BYTE PTR es:[edi],dx
  41e964:	mov    esi,DWORD PTR [eax]
  41e966:	mov    BYTE PTR [edi+0x43],bh
  41e969:	adc    DWORD PTR [edi+0x6c],eax
  41e96c:	jno    0x41e8f0
  41e96e:	retf   
  41e96f:	das    
  41e970:	add    DWORD PTR [edx+0x48183734],ebp
  41e976:	(bad)  
  41e977:	xor    DWORD PTR [ebp+0x41],edx
  41e97a:	pop    ds
  41e97b:	jbe    0x41e99d
  41e97d:	ds (bad) 
  41e97f:	aad    0xd4
  41e981:	sub    DWORD PTR [edx],eax
  41e983:	retf   
  41e984:	mov    esp,0x86167e40
  41e989:	dec    edi
  41e98a:	dec    edi
  41e98b:	test   al,0xd8
  41e98d:	enter  0xebb3,0xbb
  41e991:	int    0x41
  41e993:	mov    dl,0xd3
  41e995:	cmovp  ecx,DWORD PTR [esi]
  41e998:	or     esi,DWORD PTR [esi]
  41e99a:	je     0x41e9fe
  41e99c:	std    
  41e99d:	das    
  41e99e:	leave  
  41e99f:	pop    es
  41e9a0:	or     ebp,DWORD PTR [edx+0x6c6ae21d]
  41e9a6:	outs   dx,DWORD PTR ds:[esi]
  41e9a7:	in     eax,dx
  41e9a8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41e9aa:	jge    0x41e96a
  41e9ac:	retf   
  41e9ad:	loope  0x41ea2e
  41e9af:	cwde   
  41e9b0:	ds add bl,dl
  41e9b3:	mov    ch,0xc9
  41e9b5:	inc    edx
  41e9b6:	add    dh,cl
  41e9b8:	mov    ds:0x3e500290,eax
  41e9bd:	xchg   BYTE PTR ds:[esi-0xa656df5],dl
  41e9c4:	mov    cl,0xda
  41e9c6:	jnp    0x41e952
  41e9c8:	out    dx,eax
  41e9c9:	addr16 mov edx,0xa2fd91ca
  41e9cf:	rcl    ebp,1
  41e9d1:	scas   eax,DWORD PTR es:[edi]
  41e9d2:	xor    al,ch
  41e9d4:	shr    ebx,cl
  41e9d6:	mov    bl,0xa
  41e9d8:	jecxz  0x41e98d
  41e9da:	xor    bh,BYTE PTR [eax]
  41e9dc:	call   0x19bb9691
  41e9e1:	test   BYTE PTR [eax],bl
  41e9e3:	and    esi,esp
  41e9e5:	popa   
  41e9e6:	mov    dh,0x48
  41e9e8:	xchg   ebx,eax
  41e9e9:	dec    esp
  41e9ea:	jb     0x41ea30
  41e9ec:	inc    edi
  41e9ed:	and    BYTE PTR [ebp-0x19],bl
  41e9f0:	fisttp DWORD PTR [ebx-0x7e]
  41e9f3:	hlt    
  41e9f4:	ins    BYTE PTR es:[edi],dx
  41e9f5:	fadd   QWORD PTR [eax-0x43e588c]
  41e9fb:	pop    edi
  41e9fc:	mov    esi,0x3d2db74a
  41ea01:	adc    DWORD PTR [ebx],ebx
  41ea03:	call   0x9966:0x6f665b32
  41ea0a:	lods   eax,DWORD PTR ds:[esi]
  41ea0b:	fimul  WORD PTR [esi-0x68]
  41ea0e:	cmc    
  41ea0f:	sub    edx,ecx
  41ea11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea12:	fsubr  st(4),st
  41ea14:	cld    
  41ea15:	imul   edx,DWORD PTR [edx],0xfffffff7
  41ea18:	ja     0x41ea59
  41ea1a:	popf   
  41ea1b:	sahf   
  41ea1c:	imul   edx,DWORD PTR [ebp*8-0x68a4e28c],0x1a
  41ea24:	push   ds
  41ea25:	fimul  DWORD PTR [eax]
  41ea27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea28:	mov    esp,edi
  41ea2a:	retf   0xe0e4
  41ea2d:	out    dx,eax
  41ea2e:	clc    
  41ea2f:	push   0xffffffb1
  41ea31:	jno    0x41ea8c
  41ea33:	xchg   BYTE PTR [ebp-0x18],dh
  41ea36:	sar    DWORD PTR [esi],cl
  41ea38:	jno    0x41ea95
  41ea3a:	xor    al,0x94
  41ea3c:	stos   DWORD PTR es:[edi],eax
  41ea3d:	out    0x6a,al
  41ea3f:	pop    esp
  41ea40:	add    ebp,esi
  41ea42:	jno    0x41e9d9
  41ea44:	push   0xffffff99
  41ea46:	xchg   DWORD PTR [esi-0x566b6b8b],ecx
  41ea4c:	ss mov dl,0xe
  41ea4f:	jne    0x41ea8e
  41ea51:	lds    eax,FWORD PTR [ecx]
  41ea53:	call   0x7a13:0x7116fb3c
  41ea5a:	sub    BYTE PTR [edi],bl
  41ea5c:	xchg   edi,eax
  41ea5d:	pop    edi
  41ea5e:	inc    eax
  41ea5f:	out    0x9,eax
  41ea61:	ja     0x41e9fd
  41ea63:	xchg   DWORD PTR [edx+0x23],edx
  41ea66:	mov    BYTE PTR [ebx-0x23],bh
  41ea69:	jo     0x41ead2
  41ea6b:	add    bh,0x67
  41ea6e:	dec    esp
  41ea6f:	pop    ebp
  41ea70:	pop    ebx
  41ea71:	mov    dl,0x78
  41ea73:	sub    dh,BYTE PTR [ecx+0x3771b8b2]
  41ea79:	pop    esp
  41ea7a:	sahf   
  41ea7b:	xchg   edx,eax
  41ea7c:	and    eax,0xaa2e30f7
  41ea81:	inc    esi
  41ea82:	mov    ch,0xf8
  41ea84:	iret   
  41ea85:	adc    al,0xb9
  41ea87:	mov    ebx,0x9c223985
  41ea8c:	or     DWORD PTR [eax],esp
  41ea8e:	int    0xf1
  41ea90:	inc    esi
  41ea91:	or     al,0xc5
  41ea93:	and    BYTE PTR [ecx-0x10a588b6],bl
  41ea99:	retf   
  41ea9a:	and    al,0x5e
  41ea9c:	mov    dh,0x9a
  41ea9e:	adc    BYTE PTR [esi],dh
  41eaa0:	and    al,0x83
  41eaa2:	push   edi
  41eaa3:	push   ecx
  41eaa4:	cmc    
  41eaa5:	push   es
  41eaa6:	xor    cl,BYTE PTR ds:0x6a8c05d
  41eaac:	or     DWORD PTR [edi+ebx*2+0xf73265],ebx
  41eab3:	inc    esi
  41eab4:	sub    BYTE PTR [edi+edx*1],ch
  41eab7:	push   esp
  41eab8:	rcr    BYTE PTR [ebx],cl
  41eaba:	jge    0x41ea90
  41eabc:	imul   esp,ebp,0xacf14dd7
  41eac2:	mov    esp,0x3873c39e
  41eac7:	xchg   esp,eax
  41eac8:	jae    0x41eafa
  41eaca:	fisub  WORD PTR [ebx-0x3]
  41eacd:	xchg   ebx,eax
  41eace:	lods   al,BYTE PTR ds:[esi]
  41eacf:	je     0x41eb3b
  41ead1:	inc    edx
  41ead2:	loop   0x41ea5f
  41ead4:	sbb    BYTE PTR [eax],0x40
  41ead7:	stos   DWORD PTR es:[edi],eax
  41ead8:	imul   edx,esp,0x28e43c98
  41eade:	jmp    0x7365:0x4396b086
  41eae5:	cwde   
  41eae6:	xor    al,cl
  41eae8:	mov    edi,0x2947a1b6
  41eaed:	or     ch,BYTE PTR [ecx-0x45]
  41eaf0:	(bad)  
  41eaf1:	mov    edx,0xc1e5bb0f
  41eaf6:	(bad)  
  41eaf7:	jns    0x41eaf2
  41eaf9:	enter  0x53fe,0x9a
  41eafd:	sbb    DWORD PTR [ecx+edx*2],0x4f218c3f
  41eb04:	jge    0x41eadd
  41eb06:	jne    0x41ea9f
  41eb08:	loope  0x41eb2a
  41eb0a:	dec    edx
  41eb0b:	or     BYTE PTR [edx-0x36],dh
  41eb0e:	int    0x4
  41eb10:	ins    BYTE PTR es:[edi],dx
  41eb11:	bound  ecx,QWORD PTR [ecx+0x4d]
  41eb14:	out    dx,al
  41eb15:	pushf  
  41eb16:	dec    edx
  41eb17:	(bad)  
  41eb18:	popa   
  41eb19:	inc    eax
  41eb1a:	in     eax,dx
  41eb1b:	cwde   
  41eb1c:	adc    cl,BYTE PTR [ebx+0x3b]
  41eb1f:	retf   0x6e98
  41eb22:	cdq    
  41eb23:	sub    ebp,ebp
  41eb25:	out    0xb7,eax
  41eb27:	out    0xfe,al
  41eb29:	retf   0x99b1
  41eb2c:	or     ebx,DWORD PTR [ecx-0x33]
  41eb2f:	fs inc edi
  41eb31:	mov    bl,0x32
  41eb33:	dec    esp
  41eb34:	cmp    bl,BYTE PTR [edx]
  41eb36:	int3   
  41eb37:	fcomp  QWORD PTR [esi+ebp*8-0x1e]
  41eb3b:	jp     0x41eb82
  41eb3d:	mov    esi,0x239506c2
  41eb42:	shl    DWORD PTR [ebx],0xf1
  41eb45:	mov    ds:0x9e61fe3d,al
  41eb4a:	rcr    BYTE PTR [edi+0x45ab1c37],0xec
  41eb51:	push   edx
  41eb52:	cdq    
  41eb53:	mov    ?,WORD PTR [edx+edx*8]
  41eb56:	cld    
  41eb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb58:	dec    esp
  41eb59:	inc    esp
  41eb5a:	(bad)  
  41eb5b:	pop    ecx
  41eb5c:	mov    dl,0xd8
  41eb5e:	or     cl,BYTE PTR [ebp+0x20]
  41eb61:	pop    es
  41eb62:	xchg   BYTE PTR [ecx],dl
  41eb64:	and    DWORD PTR [eax],0x7b
  41eb67:	dec    esp
  41eb68:	xchg   ecx,eax
  41eb69:	or     DWORD PTR [esp+ebx*8+0xc],edx
  41eb6d:	add    DWORD PTR [edi+0x4fe6402d],0xcc6cbc77
  41eb77:	ins    DWORD PTR es:[edi],dx
  41eb78:	clc    
  41eb79:	test   BYTE PTR [ecx-0x78],0x78
  41eb7d:	jns    0x41eb71
  41eb7f:	cs fs clc 
  41eb82:	sbb    cl,BYTE PTR [esi-0x3f]
  41eb85:	xor    ebx,ebx
  41eb87:	pop    ss
  41eb88:	mul    BYTE PTR [ebx]
  41eb8a:	jl     0x41eb50
  41eb8c:	inc    edx
  41eb8d:	test   DWORD PTR [ebx+0x8],eax
  41eb90:	mov    esi,0x624f0c73
  41eb95:	aaa    
  41eb96:	nop
  41eb97:	int    0x96
  41eb99:	or     esp,DWORD PTR [ebp-0x43e2994]
  41eb9f:	(bad)  
  41eba0:	ror    DWORD PTR [ecx-0x32],1
  41eba3:	mov    cl,0x47
  41eba5:	dec    ecx
  41eba6:	dec    ebp
  41eba7:	jns    0x41ebec
  41eba9:	jge    0x41eb55
  41ebab:	push   ecx
  41ebac:	mov    eax,0x1fce7ecc
  41ebb1:	lods   eax,DWORD PTR ds:[esi]
  41ebb2:	mov    edi,0xa8a1000f
  41ebb7:	sahf   
  41ebb8:	jbe    0x41ebff
  41ebba:	in     eax,dx
  41ebbb:	in     eax,dx
  41ebbc:	pop    ebx
  41ebbd:	das    
  41ebbe:	fstp   TBYTE PTR [esi+0x4b]
  41ebc1:	fst    DWORD PTR [ebx-0x3d]
  41ebc4:	mov    cl,0x9a
  41ebc6:	out    0x9e,eax
  41ebc8:	mov    eax,0x39d4df32
  41ebcd:	mov    eax,0x4815cc60
  41ebd2:	pop    ds
  41ebd3:	dec    esi
  41ebd4:	mov    esi,0x5e51f235
  41ebd9:	xchg   DWORD PTR [edi-0x43],ecx
  41ebdc:	mov    ecx,ebx
  41ebde:	xor    eax,0xb9a3fec0
  41ebe3:	adc    ecx,DWORD PTR [edi+0xd]
  41ebe6:	xor    BYTE PTR [eax],dl
  41ebe8:	jae    0x41ec16
  41ebea:	mov    dh,0xea
  41ebec:	mov    dh,0x74
  41ebee:	imul   edi,ebx,0x7e
  41ebf1:	mov    edi,gs
  41ebf3:	mov    ch,0xbb
  41ebf5:	lods   eax,DWORD PTR ds:[esi]
  41ebf6:	rcr    DWORD PTR [edx+0x18],1
  41ebf9:	push   ecx
  41ebfa:	retf   
  41ebfb:	jns    0x41ebd5
  41ebfd:	int    0x46
  41ebff:	xor    DWORD PTR [ebx-0x78e64e02],eax
  41ec05:	cvtdq2ps xmm6,XMMWORD PTR [edx]
  41ec08:	mov    edx,0xdb9eabd7
  41ec0d:	sahf   
  41ec0e:	dec    esi
  41ec0f:	xor    BYTE PTR [ebp+0x5a],dh
  41ec12:	les    ebx,FWORD PTR [esi+ebp*8+0x12]
  41ec16:	test   DWORD PTR [ecx],esp
  41ec18:	pop    esp
  41ec19:	hlt    
  41ec1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1b:	mov    DWORD PTR [ebx+edi*4-0x73],ebp
  41ec1f:	mov    ecx,0xb047dc3e
  41ec24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec25:	mov    ch,0x3d
  41ec27:	repnz sbb ecx,edi
  41ec2a:	push   eax
  41ec2b:	fidiv  WORD PTR [edx+0x47]
  41ec2e:	or     edi,DWORD PTR [edi+0x3ee473da]
  41ec34:	jp     0x41ec21
  41ec36:	jns    0x41ec93
  41ec38:	push   edi
  41ec39:	stos   BYTE PTR es:[edi],al
  41ec3a:	mov    ds,WORD PTR [edx]
  41ec3c:	mov    edx,0x38f9506c
  41ec41:	sti    
  41ec42:	mov    edx,0x4b14d9a3
  41ec47:	lods   eax,DWORD PTR ds:[esi]
  41ec48:	(bad)  
  41ec49:	nop
  41ec4a:	cmp    esi,DWORD PTR [ebx+0x7ab3f3dd]
  41ec50:	sub    al,0xb2
  41ec52:	jb     0x41ecb6
  41ec54:	push   0x57ac69c6
  41ec59:	fsubr  st,st(7)
  41ec5b:	cli    
  41ec5c:	(bad)  
  41ec5d:	fcom   DWORD PTR [edx+0x19]
  41ec60:	xchg   ebp,eax
  41ec61:	mov    dh,0xe3
  41ec63:	mov    al,0x41
  41ec65:	dec    edi
  41ec66:	(bad)  
  41ec67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec68:	jnp    0x41ec7a
  41ec6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec6b:	ss stos DWORD PTR es:[edi],eax
  41ec6d:	daa    
  41ec6e:	(bad)  
  41ec70:	(bad)  
  41ec71:	pop    edx
  41ec72:	cld    
  41ec73:	div    ebx
  41ec75:	sbb    ch,BYTE PTR [ebp-0x7a]
  41ec78:	and    al,BYTE PTR [ebx]
  41ec7a:	cmp    ah,BYTE PTR [ebp+0x30]
  41ec7d:	xor    DWORD PTR [ecx+0x77],edi
  41ec80:	mov    edi,0xe288719f
  41ec85:	xchg   ebx,eax
  41ec86:	call   0xa17be1c6
  41ec8b:	xchg   ecx,eax
  41ec8c:	adc    BYTE PTR [eax],dh
  41ec8e:	xchg   ecx,eax
  41ec8f:	(bad)  
  41ec90:	idiv   BYTE PTR [ebx]
  41ec92:	inc    edi
  41ec93:	xchg   ebx,eax
  41ec94:	mov    ecx,ds
  41ec96:	jo     0x41ec70
  41ec98:	fadd   st,st(3)
  41ec9a:	jnp    0x41ec91
  41ec9c:	and    eax,0xa568c680
  41eca1:	push   0xc00bb346
  41eca6:	or     ecx,ebp
  41eca8:	add    eax,0xd85647b1
  41ecad:	mov    bl,BYTE PTR [esi-0x2c]
  41ecb0:	add    al,0x52
  41ecb2:	cmp    dh,al
  41ecb4:	in     eax,dx
  41ecb5:	cli    
  41ecb6:	int    0x7
  41ecb8:	add    edi,0xffffffb2
  41ecbb:	sub    DWORD PTR [ebx],edx
  41ecbd:	retf   
  41ecbe:	inc    ebp
  41ecbf:	push   ds
  41ecc0:	and    eax,0x6d263c9b
  41ecc5:	clc    
  41ecc6:	or     DWORD PTR [ecx-0x770b2ad7],0xf920a199
  41ecd0:	call   0x9044edbf
  41ecd5:	xchg   esp,eax
  41ecd6:	push   eax
  41ecd7:	or     eax,0x51bc69cb
  41ecdc:	lahf   
  41ecdd:	adc    DWORD PTR [esi-0x4d],edx
  41ece0:	(bad)  
  41ece1:	jne    0x41ecee
  41ece3:	jnp    0x41ed59
  41ece5:	xor    BYTE PTR [edi+0xaa6f929],ch
  41eceb:	xchg   ebp,eax
  41ecec:	out    dx,eax
  41eced:	xchg   esi,eax
  41ecee:	in     eax,dx
  41ecef:	sub    ecx,DWORD PTR [ecx]
  41ecf1:	cmp    BYTE PTR [edx],ah
  41ecf3:	mov    edx,0x8e86fe23
  41ecf8:	or     eax,0xde9d925a
  41ecfd:	hlt    
  41ecfe:	mov    ds:0x6a42d7d8,eax
  41ed03:	je     0x41ecaf
  41ed05:	mov    al,ds:0xea334dd6
  41ed0a:	inc    ebx
  41ed0b:	aam    0xd7
  41ed0d:	sahf   
  41ed0e:	sbb    ecx,DWORD PTR [eax+0x1a]
  41ed11:	mov    al,ds:0xf0bdaf77
  41ed16:	outs   dx,BYTE PTR ds:[esi]
  41ed17:	int    0xea
  41ed19:	(bad)  
  41ed1a:	ins    BYTE PTR es:[edi],dx
  41ed1b:	add    esp,ecx
  41ed1d:	or     BYTE PTR [esi+edi*8+0x36],al
  41ed21:	jge    0x41ecdd
  41ed23:	sub    esi,0x43c6a037
  41ed29:	in     al,0xe8
  41ed2b:	jbe    0x41ed29
  41ed2d:	stos   BYTE PTR es:[edi],al
  41ed2e:	jge    0x41ed6a
  41ed30:	popf   
  41ed31:	adc    cl,ch
  41ed33:	add    dl,bh
  41ed35:	jmp    0x953e:0x33da8072
  41ed3c:	dec    edi
  41ed3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed3e:	push   eax
  41ed3f:	mov    ds:0x1c5f9700,al
  41ed44:	mov    ch,0xb6
  41ed46:	(bad)  
  41ed47:	cmp    esp,DWORD PTR [ecx-0x7f]
  41ed4a:	mov    edx,0x42adaa36
  41ed4f:	into   
  41ed50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed51:	(bad)  
  41ed52:	inc    ebp
  41ed53:	ret    0xb442
  41ed56:	sbb    DWORD PTR [edi+0x39],esi
  41ed59:	inc    ecx
  41ed5a:	lahf   
  41ed5b:	retf   
  41ed5c:	test   eax,ebp
  41ed5e:	popf   
  41ed5f:	aas    
  41ed60:	mov    dh,0xbd
  41ed62:	sub    eax,0xf7a98847
  41ed67:	add    eax,0x77db2283
  41ed6c:	add    al,0x57
  41ed6e:	das    
  41ed6f:	or     eax,0x50f01bbf
  41ed74:	xor    eax,0xd3c3a045
  41ed79:	lds    edi,FWORD PTR [ebx-0x501d97e]
  41ed7f:	xchg   edx,eax
  41ed80:	jb     0x41ed28
  41ed82:	(bad)  
  41ed83:	jmp    0x41ed13
  41ed85:	pop    ds
  41ed86:	dec    ecx
  41ed87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed88:	xor    eax,0x30bb7ac6
  41ed8d:	push   edi
  41ed8e:	pop    ebx
  41ed8f:	adc    ecx,DWORD PTR [edi-0x6c6ff904]
  41ed95:	pop    es
  41ed96:	loope  0x41edb8
  41ed98:	jl     0x41ed34
  41ed9a:	xor    BYTE PTR [eax+0x5a],0xcc
  41ed9e:	(bad)  
  41ed9f:	cld    
  41eda0:	pop    edx
  41eda1:	fld    QWORD PTR [ecx-0x1d]
  41eda4:	ret    
  41eda5:	dec    ecx
  41eda6:	mov    ebx,DWORD PTR [ebx+0x6a]
  41eda9:	int3   
  41edaa:	dec    BYTE PTR [edx+edi*8+0x29cd535b]
  41edb1:	sub    BYTE PTR [eax],al
  41edb3:	cmp    BYTE PTR [ecx+esi*4+0x70],al
  41edb7:	jnp    0x41ee02
  41edb9:	mov    ebp,?
  41edbb:	adc    BYTE PTR [edx+0x5e],cl
  41edbe:	xchg   esp,eax
  41edbf:	add    ch,BYTE PTR [ecx]
  41edc1:	push   ecx
  41edc2:	push   ebx
  41edc3:	popf   
  41edc4:	mov    cl,BYTE PTR [ecx]
  41edc6:	test   BYTE PTR [ebp-0x5b22aad8],bh
  41edcc:	ins    BYTE PTR es:[edi],dx
  41edcd:	test   BYTE PTR [ecx],0xb0
  41edd0:	fxtract 
  41edd2:	sbb    BYTE PTR [edi],ch
  41edd4:	data16 jne 0x41ed8e
  41edd7:	xchg   ebp,eax
  41edd8:	shl    BYTE PTR ds:0x8f88c4b8,1
  41edde:	pop    ecx
  41eddf:	sub    ebp,DWORD PTR [ecx+0x2d]
  41ede2:	and    eax,0x515dfada
  41ede7:	pop    esp
  41ede8:	or     BYTE PTR ds:0x41788083,bl
  41edee:	mov    edi,0x3bd28d1d
  41edf3:	mov    al,0x79
  41edf5:	retf   0x92df
  41edf8:	imul   edx,ebx,0x41
  41edfb:	nop
  41edfc:	mov    al,0xcf
  41edfe:	(bad)  
  41edff:	jb     0x41edf2
  41ee01:	jne    0x41ee63
  41ee03:	retf   0xfcd9
  41ee06:	mov    gs,WORD PTR [ebx-0x5d8481c2]
  41ee0c:	imul   ebp,DWORD PTR [ebx],0x7e2cfba2
  41ee12:	mov    ah,0xa8
  41ee14:	(bad)  
  41ee16:	icebp  
  41ee17:	and    al,0x11
  41ee19:	inc    eax
  41ee1a:	ss dec esp
  41ee1c:	in     al,0x45
  41ee1e:	cmp    DWORD PTR [ebx-0x28],0xffffffb2
  41ee22:	mov    edx,0x187f9459
  41ee27:	sbb    DWORD PTR [ecx],ebp
  41ee29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee2a:	aam    0x68
  41ee2c:	repz out 0x80,eax
  41ee2f:	nop
  41ee30:	es xchg edi,eax
  41ee32:	int3   
  41ee33:	dec    ebp
  41ee34:	jbe    0x41edda
  41ee36:	das    
  41ee37:	(bad)  
  41ee38:	loop   0x41edfd
  41ee3a:	mov    bh,0x7d
  41ee3c:	jg     0x41ee69
  41ee3e:	and    ecx,DWORD PTR [ebx-0x6238ccb4]
  41ee44:	jns    0x41eddc
  41ee46:	fistp  QWORD PTR [edi]
  41ee48:	pop    ds
  41ee49:	ds mov al,0x7d
  41ee4c:	in     eax,dx
  41ee4d:	in     eax,0xbd
  41ee4f:	lock mov bl,0x7e
  41ee52:	aam    0x6
  41ee54:	es xor esi,0xc03c487d
  41ee5b:	cld    
  41ee5c:	loopne 0x41edee
  41ee5e:	addr16 sub ebp,ebx
  41ee61:	push   eax
  41ee62:	add    edi,DWORD PTR ds:0xb06499f1
  41ee68:	inc    edx
  41ee69:	call   0x82bf:0x733342a6
  41ee70:	adc    bl,BYTE PTR [edi+esi*4+0x103443e2]
  41ee77:	push   ds
  41ee78:	ins    BYTE PTR es:[edi],dx
  41ee79:	mov    eax,ds:0x9984f613
  41ee7e:	xchg   esp,eax
  41ee7f:	fmulp  st(6),st
  41ee81:	mov    edi,0xcfa37068
  41ee86:	call   FWORD PTR [ebp-0x4a7b84e0]
  41ee8c:	mov    ah,0x96
  41ee8e:	test   al,0xa9
  41ee90:	cmp    DWORD PTR [edi+0x35],ebx
  41ee93:	mov    cl,0x9
  41ee95:	push   es
  41ee96:	int3   
  41ee97:	dec    edi
  41ee98:	loope  0x41ee40
  41ee9a:	inc    ecx
  41ee9b:	ret    0xd396
  41ee9e:	popa   
  41ee9f:	xchg   esp,eax
  41eea0:	sbb    ah,BYTE PTR [ebx+0x5]
  41eea3:	sbb    eax,DWORD PTR [edi+0x10289372]
  41eea9:	and    al,0x3e
  41eeab:	sub    eax,0xc8940b5d
  41eeb0:	jle    0x41ee76
  41eeb2:	fisttp QWORD PTR [edx+edi*2-0x30]
  41eeb6:	das    
  41eeb7:	pusha  
  41eeb8:	sbb    eax,0x89ba1c22
  41eebd:	scas   al,BYTE PTR es:[edi]
  41eebe:	stos   BYTE PTR es:[edi],al
  41eebf:	(bad)  
  41eec1:	loope  0x41ee96
  41eec3:	push   edi
  41eec4:	and    ebx,ecx
  41eec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eec7:	mov    dl,0x5b
  41eec9:	or     BYTE PTR [edx-0x18],dl
  41eecc:	loop   0x41ee69
  41eece:	jbe    0x41ef25
  41eed0:	aas    
  41eed1:	mov    ecx,0xfca431a7
  41eed6:	inc    eax
  41eed7:	add    ebx,esi
  41eed9:	jno    0x41eef5
  41eedb:	and    al,0x44
  41eedd:	enter  0xe214,0x1c
  41eee1:	mov    edx,esi
  41eee3:	test   al,0x31
  41eee5:	sbb    eax,0xc56d0b6d
  41eeea:	ja     0x41ef2c
  41eeec:	inc    esi
  41eeed:	in     eax,dx
  41eeee:	mov    eax,ds:0xc8676d7c
  41eef3:	or     edi,DWORD PTR [ecx]
  41eef5:	repnz inc esi
  41eef7:	cdq    
  41eef8:	add    dh,bl
  41eefa:	out    0xd0,eax
  41eefc:	arpl   WORD PTR [edi+edi*1],si
  41eeff:	loopne 0x41eed7
  41ef01:	out    0x46,al
  41ef03:	inc    esp
  41ef04:	icebp  
  41ef05:	enter  0xabed,0x66
  41ef09:	popa   
  41ef0a:	sub    eax,0x6e6b7b2
  41ef0f:	imul   esi,DWORD PTR [edi],0x10
  41ef12:	(bad)  
  41ef13:	pop    ebp
  41ef14:	dec    ebx
  41ef15:	scas   eax,DWORD PTR es:[edi]
  41ef16:	in     eax,dx
  41ef17:	lds    esi,FWORD PTR es:[ebx-0x5622bde1]
  41ef1e:	xchg   esi,eax
  41ef1f:	xor    ch,0x67
  41ef22:	mov    eax,0xe7ea0377
  41ef27:	test   eax,0x7b076ab7
  41ef2c:	sar    esp,cl
  41ef2e:	jecxz  0x41ef79
  41ef30:	and    al,0x3a
  41ef32:	jp     0x41eeea
  41ef34:	jo     0x41ef9b
  41ef36:	push   ebp
  41ef37:	call   0x50198d92
  41ef3c:	inc    ebp
  41ef3d:	dec    ebx
  41ef3e:	xor    eax,0x1ed8445f
  41ef43:	(bad)  
  41ef44:	popa   
  41ef45:	xor    al,0x58
  41ef47:	mov    bh,0xc7
  41ef49:	jne    0x41ef54
  41ef4b:	push   ebp
  41ef4c:	mov    dl,0x39
  41ef4e:	cwde   
  41ef4f:	add    al,0x81
  41ef51:	test   al,0x25
  41ef53:	push   esp
  41ef54:	loop   0x41ef1b
  41ef56:	dec    edx
  41ef57:	jecxz  0x41ef0c
  41ef59:	push   ebx
  41ef5a:	adc    esi,DWORD PTR [ecx+0x54]
  41ef5d:	mov    dh,0x96
  41ef5f:	push   ecx
  41ef60:	(bad)  [esi]
  41ef62:	pmaxsw mm0,QWORD PTR es:[edx]
  41ef66:	int3   
  41ef67:	int3   
  41ef68:	and    dl,cl
  41ef6a:	scas   al,BYTE PTR es:[edi]
  41ef6b:	push   ebp
  41ef6c:	popa   
  41ef6d:	mov    cl,0x12
  41ef6f:	jo     0x41ef54
  41ef71:	pushf  
  41ef72:	or     BYTE PTR [esi-0x78952c3a],cl
  41ef78:	in     eax,dx
  41ef79:	xchg   ebx,eax
  41ef7a:	rcr    DWORD PTR [edx+0x422b6efb],1
  41ef80:	in     al,dx
  41ef81:	data16 in al,dx
  41ef83:	mov    BYTE PTR [ebx+0x28],cl
  41ef86:	inc    eax
  41ef87:	pop    ss
  41ef88:	mov    cl,0xb9
  41ef8a:	test   BYTE PTR [ebx+0x448755f8],bl
  41ef90:	cmp    DWORD PTR [ebx+0x3ce81505],edx
  41ef96:	lods   al,BYTE PTR ds:[esi]
  41ef97:	jecxz  0x41efad
  41ef99:	repz call 0x161c:0x25e25784
  41efa1:	dec    ecx
  41efa2:	rcl    eax,cl
  41efa4:	icebp  
  41efa5:	(bad)  
  41efa6:	hlt    
  41efa7:	call   0xb8c1cbcb
  41efac:	retf   0x5847
  41efaf:	inc    ebx
  41efb0:	call   0xd4bf:0x3b86a153
  41efb7:	lock adc eax,0xbf67edd9
  41efbd:	mov    ebp,0x56bc924f
  41efc2:	sar    ecx,cl
  41efc4:	cmp    ah,ch
  41efc6:	enter  0xecd3,0x44
  41efca:	push   ebx
  41efcb:	pusha  
  41efcc:	or     ch,dl
  41efce:	std    
  41efcf:	sub    al,0x4c
  41efd1:	or     eax,0x314ae3ff
  41efd6:	dec    ecx
  41efd7:	jecxz  0x41ef7b
  41efd9:	bnd jge 0x41f032
  41efdc:	ror    BYTE PTR [edi+0x29d021dc],1
  41efe2:	nop
  41efe3:	popf   
  41efe4:	sbb    ecx,DWORD PTR [ecx]
  41efe6:	xchg   ecx,eax
  41efe7:	dec    esi
  41efe8:	dec    ecx
  41efe9:	inc    ebx
  41efea:	cdq    
  41efeb:	sub    BYTE PTR [edx-0x4d],bl
  41efee:	leave  
  41efef:	mov    esi,0xfd501ca1
  41eff4:	jp     0x41efcf
  41eff6:	xor    eax,0xc12fee3
  41effb:	pop    edx
  41effc:	ret    
  41effd:	and    DWORD PTR [ebx-0x8],ebp
  41f000:	xchg   DWORD PTR [edi-0x233705d7],edx
  41f006:	cmp    al,0xdc
  41f008:	fnstsw WORD PTR [eax-0x63]
  41f00b:	test   BYTE PTR [esi-0x229be575],bl
  41f011:	jmp    0xb825:0xdfef6338
  41f018:	mov    fs,ebx
  41f01a:	dec    ebx
  41f01b:	scas   eax,DWORD PTR es:[edi]
  41f01c:	and    edx,DWORD PTR [eax]
  41f01e:	sbb    edi,DWORD PTR [ecx+esi*4]
  41f021:	jb     0x41f085
  41f023:	adc    eax,0xa13fab6f
  41f028:	(bad)  
  41f029:	imul   ecx,DWORD PTR [edi-0xa],0xffffff99
  41f02d:	and    ecx,DWORD PTR [edx+0x4a]
  41f030:	imul   ecx,esi,0x7a
  41f033:	xchg   ebx,eax
  41f034:	shl    BYTE PTR [edx+0x2b],0x84
  41f038:	adc    edx,DWORD PTR [ebp-0x6a]
  41f03b:	xor    bh,dh
  41f03d:	mov    cl,BYTE PTR [ecx+0x5f]
  41f040:	mov    bl,0x9f
  41f042:	ret    0x1657
  41f045:	adc    ebx,DWORD PTR [edx+edi*8-0x7]
  41f049:	inc    eax
  41f04a:	push   0xffffffc1
  41f04c:	jg     0x41f00d
  41f04e:	inc    eax
  41f04f:	sbb    al,0x1
  41f051:	adc    BYTE PTR [edi+0x12],ch
  41f054:	xchg   BYTE PTR [ecx-0x163c5d7c],dl
  41f05a:	or     eax,0x78d31369
  41f05f:	das    
  41f060:	xor    al,0x56
  41f062:	push   es
  41f063:	add    eax,0xdeb54f87
  41f068:	arpl   cx,cx
  41f06a:	in     al,0x34
  41f06c:	in     al,0x8b
  41f06e:	push   esi
  41f06f:	int3   
  41f070:	xchg   ebp,eax
  41f071:	outs   dx,DWORD PTR ds:[esi]
  41f072:	sub    al,0x47
  41f074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f075:	repnz sub al,0xc3
  41f078:	lods   eax,DWORD PTR ds:[esi]
  41f079:	js     0x41f068
  41f07b:	repnz mov dh,0x80
  41f07e:	add    DWORD PTR [edi],ebp
  41f080:	mov    gs,WORD PTR [ebx-0xc]
  41f083:	lahf   
  41f084:	cld    
  41f085:	jecxz  0x41f0d6
  41f087:	je     0x41f0b1
  41f089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f08a:	in     al,dx
  41f08b:	dec    esp
  41f08c:	xor    al,0x14
  41f08e:	fisub  DWORD PTR [esi+edx*8+0x1db7492a]
  41f095:	mov    cl,0x52
  41f097:	mov    esi,DWORD PTR [ebx+edx*4-0x57]
  41f09b:	fsubr  QWORD PTR [ecx]
  41f09d:	repnz cmp eax,0x7911a04e
  41f0a3:	iret   
  41f0a4:	pop    ecx
  41f0a5:	(bad)  
  41f0a6:	cld    
  41f0a7:	cmp    ecx,DWORD PTR [ebx-0x32]
  41f0aa:	pop    ss
  41f0ab:	jmp    0x21fe2d25
  41f0b0:	xor    BYTE PTR [edx],ch
  41f0b2:	ja     0x41f10c
  41f0b4:	xchg   edx,eax
  41f0b5:	mov    edi,0xf50d0f6b
  41f0ba:	pop    esp
  41f0bb:	pop    ecx
  41f0bc:	outs   dx,DWORD PTR ds:[esi]
  41f0bd:	and    edi,DWORD PTR [eax+0x3c]
  41f0c0:	mov    WORD PTR [edx+0x36],es
  41f0c3:	mov    eax,0x85837467
  41f0c8:	pop    edi
  41f0c9:	cmp    BYTE PTR [eax+0x9],ah
  41f0cc:	outs   dx,DWORD PTR ds:[esi]
  41f0cd:	pushf  
  41f0ce:	pop    ds
  41f0cf:	and    al,0x1a
  41f0d1:	ror    BYTE PTR [ecx-0x17198aa1],1
  41f0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0d8:	popa   
  41f0d9:	or     eax,0x1e7307e3
  41f0de:	call   0xd275ef0
  41f0e3:	pusha  
  41f0e4:	jge    0x41f132
  41f0e6:	sub    al,0xdf
  41f0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ea:	jmp    0x5234:0x7126098
  41f0f1:	adc    edx,esi
  41f0f3:	cmp    BYTE PTR [ecx],bh
  41f0f5:	xchg   ecx,eax
  41f0f6:	enter  0x1f54,0x31
  41f0fa:	imul   esi,DWORD PTR [ecx],0xebd95b25
  41f100:	pop    ebx
  41f101:	out    0x51,eax
  41f103:	xlat   BYTE PTR ds:[ebx]
  41f105:	ret    
  41f106:	mov    WORD PTR [eax-0x31031455],fs
  41f10c:	data16 jo 0x41f0da
  41f10f:	inc    eax
  41f110:	sub    DWORD PTR [ecx-0x45c93c97],esi
  41f116:	loopne 0x41f179
  41f118:	xchg   ecx,eax
  41f119:	popf   
  41f11a:	inc    eax
  41f11b:	or     esp,DWORD PTR [ecx+0x36]
  41f11e:	xor    BYTE PTR [eax-0x5a4ab96f],bl
  41f124:	(bad)  
  41f125:	pop    ds
  41f126:	or     al,0xb
  41f128:	jg     0x41f174
  41f12a:	js     0x41f13f
  41f12c:	dec    ebp
  41f12d:	fwait
  41f12e:	das    
  41f12f:	aad    0xd0
  41f131:	cdq    
  41f132:	mov    eax,0xdeb0bfae
  41f137:	rol    ecx,cl
  41f139:	jmp    DWORD PTR [ebx+0x73]
  41f13c:	cmp    al,0xef
  41f13e:	daa    
  41f13f:	inc    eax
  41f140:	dec    edi
  41f141:	cli    
  41f142:	add    DWORD PTR [edi],0xffffffc1
  41f145:	jp     0x41f0d8
  41f147:	call   0x1405:0x489b80b8
  41f14e:	repz adc al,0x6f
  41f151:	out    dx,eax
  41f152:	and    al,0xd1
  41f154:	mov    bh,0xfb
  41f156:	mov    edi,0x273e86db
  41f15b:	(bad)  
  41f15c:	out    dx,eax
  41f15d:	data16 jno 0x41f1a3
  41f160:	clc    
  41f161:	(bad)  
  41f163:	mov    esi,0xa5fa19
  41f168:	or     DWORD PTR [edi],ebx
  41f16a:	mov    WORD PTR [esi-0x24],cs
  41f16d:	push   ebp
  41f16e:	xchg   ebx,eax
  41f16f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f170:	jge    0x41f18f
  41f172:	arpl   si,bp
  41f174:	inc    ebp
  41f175:	test   eax,0x43e9e6ba
  41f17a:	popf   
  41f17b:	jmp    0x41f15f
  41f17d:	shr    DWORD PTR [edx],0x59
  41f180:	cmp    edx,DWORD PTR [eax]
  41f182:	repnz dec esp
  41f184:	sbb    bl,BYTE PTR [ebx]
  41f186:	jg     0x41f1fe
  41f188:	push   ss
  41f189:	int    0x40
  41f18b:	fnstcw WORD PTR [eax-0x171532ab]
  41f191:	sbb    ah,BYTE PTR [ecx+0x15d25df0]
  41f197:	aas    
  41f198:	repz add al,dh
  41f19b:	jnp    0x41f1e6
  41f19d:	(bad)  
  41f19e:	mov    ch,0x53
  41f1a0:	xchg   ebx,eax
  41f1a1:	jae    0x41f203
  41f1a3:	icebp  
  41f1a4:	or     dh,al
  41f1a6:	sub    BYTE PTR [eax-0x142e448e],cl
  41f1ac:	sub    eax,0xc33e0362
  41f1b1:	add    edi,ebp
  41f1b3:	rcr    BYTE PTR [ebp+0x3f],1
  41f1b6:	(bad)  
  41f1b7:	jmp    0x9936a4a8
  41f1bc:	je     0x41f236
  41f1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1bf:	xchg   edx,eax
  41f1c0:	cld    
  41f1c1:	pusha  
  41f1c2:	jno    0x41f209
  41f1c4:	mov    ebx,0x1309dc3e
  41f1c9:	push   ebp
  41f1ca:	hlt    
  41f1cb:	int    0xbd
  41f1cd:	aas    
  41f1ce:	sti    
  41f1cf:	mov    eax,0x99715be2
  41f1d4:	mov    esi,edx
  41f1d6:	push   es
  41f1d7:	daa    
  41f1d8:	in     eax,0x6c
  41f1da:	stc    
  41f1db:	dec    esp
  41f1dc:	ins    BYTE PTR es:[edi],dx
  41f1dd:	jp     0x41f1db
  41f1df:	scas   al,BYTE PTR es:[edi]
  41f1e0:	sti    
  41f1e1:	out    0xb2,eax
  41f1e3:	repnz sbb cl,BYTE PTR [edi+edx*2]
  41f1e7:	or     dh,bl
  41f1e9:	dec    eax
  41f1ea:	aad    0xfa
  41f1ec:	inc    ecx
  41f1ed:	mov    ebp,0x1a3914aa
  41f1f2:	pop    eax
  41f1f3:	lods   al,BYTE PTR ds:[esi]
  41f1f4:	inc    esi
  41f1f5:	(bad)  
  41f1f7:	das    
  41f1f8:	sbb    bh,BYTE PTR [ecx+0xcb08596]
  41f1fe:	adc    eax,0x33252e2a
  41f203:	ss je  0x41f1e5
  41f206:	push   ebp
  41f207:	sub    BYTE PTR ds:0x93f5c1dd,0xdd
  41f20e:	outs   dx,BYTE PTR ds:[esi]
  41f210:	push   ds
  41f211:	or     ebx,ebx
  41f213:	ins    BYTE PTR es:[edi],dx
  41f214:	cs stos BYTE PTR es:[edi],al
  41f216:	cli    
  41f217:	xor    al,0x85
  41f219:	(bad)  
  41f21a:	and    BYTE PTR [eax+0x5420ab16],dh
  41f220:	dec    ebx
  41f221:	sti    
  41f222:	push   0x1d
  41f224:	fcmovnu st,st(6)
  41f226:	sbb    DWORD PTR [ecx-0x32a153b3],esi
  41f22c:	fnstcw WORD PTR [edi]
  41f22e:	invd   
  41f230:	push   ebp
  41f231:	ja     0x41f22e
  41f233:	xor    DWORD PTR [ebp+0x63],esi
  41f236:	cmp    bl,BYTE PTR [ecx+eiz*8-0x36]
  41f23a:	xor    al,0x3e
  41f23c:	pop    ebx
  41f23d:	add    al,ah
  41f23f:	nop
  41f240:	les    ebp,FWORD PTR [eax+0x0]
  41f243:	sets   BYTE PTR [ecx+0x51]
  41f247:	push   edi
  41f248:	nop
  41f249:	xchg   ebx,eax
  41f24a:	push   esp
  41f24b:	into   
  41f24c:	(bad)  
  41f24d:	retf   
  41f24e:	inc    edi
  41f24f:	lods   eax,DWORD PTR ds:[esi]
  41f250:	adc    dh,bh
  41f252:	call   0x7746:0x6bd3a1fb
  41f259:	fs ja  0x41f2d5
  41f25c:	mov    esi,0x4591787
  41f261:	push   edx
  41f262:	(bad)  
  41f263:	or     esp,esi
  41f265:	adc    al,0x45
  41f267:	stos   DWORD PTR es:[edi],eax
  41f268:	int    0x6c
  41f26a:	or     al,0x8e
  41f26c:	aas    
  41f26d:	and    BYTE PTR [eax-0x11e76e27],ch
  41f273:	mov    edi,0x41201261
  41f278:	mov    al,BYTE PTR [ebx-0x30b42212]
  41f27e:	es jnp 0x41f2ef
  41f281:	xchg   ecx,eax
  41f282:	in     al,0xb5
  41f284:	stos   BYTE PTR es:[edi],al
  41f285:	mov    DWORD PTR [eax-0x7c27b3e6],esp
  41f28b:	mul    BYTE PTR [edi-0xd822149]
  41f291:	imul   eax,DWORD PTR [ebx+0x4bc986d7],0x11
  41f298:	jmp    0xd3a5:0x58eeeb6a
  41f29f:	push   esp
  41f2a0:	sub    al,BYTE PTR [esi-0x7d4d19e]
  41f2a6:	inc    ebp
  41f2a7:	sbb    eax,0x609fba4a
  41f2ac:	into   
  41f2ad:	push   ebp
  41f2ae:	pop    esi
  41f2af:	mov    al,ds:0x973a9365
  41f2b4:	jne    0x41f31a
  41f2b6:	jmp    0x103c:0x52161582
  41f2bd:	icebp  
  41f2be:	cmp    eax,0xda95699a
  41f2c3:	sar    BYTE PTR [ecx+0x70],0x74
  41f2c7:	mov    esi,0x92a5f6a3
  41f2cc:	stos   BYTE PTR es:[edi],al
  41f2cd:	xor    dl,BYTE PTR [ecx]
  41f2cf:	arpl   ax,dx
  41f2d1:	mov    ds:0x4943582a,eax
  41f2d6:	push   eax
  41f2d7:	stos   DWORD PTR es:[edi],eax
  41f2d8:	test   ch,dl
  41f2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2db:	iret   
  41f2dc:	and    bh,bh
  41f2de:	repz je 0x41f291
  41f2e1:	sub    BYTE PTR [edi-0x8],cl
  41f2e4:	dec    esp
  41f2e5:	aam    0x4a
  41f2e7:	loop   0x41f2e0
  41f2e9:	test   BYTE PTR [eax+0x74],dl
  41f2ec:	mov    dh,0x8f
  41f2ee:	inc    edx
  41f2ef:	and    eax,0x81b61eae
  41f2f4:	mov    ch,0x6
  41f2f6:	mov    ds:0x125b64c5,eax
  41f2fb:	stos   DWORD PTR es:[edi],eax
  41f2fc:	jmp    0x41f34a
  41f2fe:	inc    ebx
  41f2ff:	es loope 0x41f367
  41f302:	int    0x9
  41f304:	or     bh,BYTE PTR [eax+0x1f]
  41f307:	shl    ebx,cl
  41f309:	cs add al,0x14
  41f30c:	daa    
  41f30d:	adc    dl,BYTE PTR [esi+0x69]
  41f310:	fimul  WORD PTR [ecx+0x422a32b2]
  41f316:	fdiv   QWORD PTR [edx+0x5d]
  41f319:	sbb    BYTE PTR [ebx-0x6a69a95c],bh
  41f31f:	shr    bh,0x87
  41f322:	fsubr  QWORD PTR [edi-0x286a33e8]
  41f328:	adc    DWORD PTR [ebp+esi*1-0x55ff1a1e],0x5940a6da
  41f333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f334:	enter  0x1a45,0xc5
  41f338:	cld    
  41f339:	out    dx,al
  41f33a:	sbb    al,0x5d
  41f33c:	xchg   DWORD PTR [eax-0x29],ecx
  41f33f:	mov    eax,ds:0x4cc40fc9
  41f344:	push   ebx
  41f345:	ja     0x41f2d0
  41f347:	sbb    DWORD PTR [edi+eax*8+0x1803ff65],edi
  41f34e:	sub    ah,BYTE PTR [edx+0x38]
  41f351:	jno    0x41f2dd
  41f353:	mov    dh,0x81
  41f355:	idiv   DWORD PTR [edx+0x15c5977]
  41f35b:	sti    
  41f35c:	sub    dh,BYTE PTR [ecx+eiz*8+0x2d164600]
  41f363:	xor    eax,0xe6ec29bc
  41f368:	mov    edi,edx
  41f36a:	mov    eax,0xf3f4e17d
  41f36f:	call   FWORD PTR [edx-0x179ac856]
  41f375:	mov    ebp,0xc164621f
  41f37a:	jmp    DWORD PTR [ecx]
  41f37c:	adc    ebx,DWORD PTR [edi]
  41f37e:	xchg   ebx,eax
  41f37f:	retf   0x3f3b
  41f382:	adc    BYTE PTR [ecx],bl
  41f384:	and    BYTE PTR [eax-0x30],0x1f
  41f388:	dec    ebx
  41f389:	fs xchg edx,eax
  41f38b:	sbb    bh,bl
  41f38d:	lods   eax,DWORD PTR ds:[esi]
  41f38e:	cli    
  41f38f:	imul   ebp,DWORD PTR [ebx],0x50
  41f392:	lahf   
  41f393:	fwait
  41f394:	sbb    ah,bl
  41f396:	(bad)  
  41f397:	aad    0x68
  41f399:	fst    QWORD PTR [esi]
  41f39b:	scas   al,BYTE PTR es:[edi]
  41f39c:	daa    
  41f39d:	mov    eax,eax
  41f39f:	and    DWORD PTR [esi-0x55f4d268],eax
  41f3a5:	push   0xa182a2be
  41f3aa:	cwde   
  41f3ab:	(bad)  [edi-0x7e]
  41f3ae:	stos   DWORD PTR es:[edi],eax
  41f3af:	jne    0x41f3d8
  41f3b1:	jo     0x41f3d1
  41f3b3:	mov    edx,0x61b00a48
  41f3b8:	add    eax,esp
  41f3ba:	mov    esp,0xd1639dfe
  41f3bf:	sbb    ch,ah
  41f3c1:	pop    es
  41f3c2:	dec    eax
  41f3c3:	xor    BYTE PTR [edx-0x3cbbbf11],cl
  41f3c9:	aam    0x5f
  41f3cb:	fcompp 
  41f3cd:	fstp   TBYTE PTR gs:[edx-0x521dc8d0]
  41f3d4:	(bad)  
  41f3d5:	mov    edx,0xb0874744
  41f3da:	or     ebp,DWORD PTR [esi-0x63]
  41f3dd:	ret    0xba99
  41f3e0:	mov    dh,0x2
  41f3e2:	test   edi,0xa03b4290
  41f3e8:	mov    ebx,DWORD PTR [ebx+0x4607dafa]
  41f3ee:	adc    eax,0x8cce239f
  41f3f3:	jmp    0x41f379
  41f3f5:	test   eax,0xee1223a3
  41f3fa:	jl     0x41f3b4
  41f3fc:	ret    
  41f3fd:	mov    eax,0xbf338eb3
  41f402:	shr    DWORD PTR [edx],cl
  41f404:	xchg   ecx,eax
  41f405:	dec    edi
  41f406:	(bad)  [esi-0x77]
  41f409:	outs   dx,BYTE PTR ds:[esi]
  41f40a:	fist   WORD PTR [esi]
  41f40c:	dec    ecx
  41f40d:	xor    edi,DWORD PTR [ebp+ebx*1-0x44007c58]
  41f414:	stc    
  41f415:	xchg   ecx,eax
  41f416:	pop    esp
  41f417:	push   esi
  41f418:	js     0x41f470
  41f41a:	adc    dh,ah
  41f41c:	fcom   DWORD PTR [edi+esi*2+0x670c003d]
  41f423:	sbb    al,0x3c
  41f425:	(bad)  
  41f426:	xor    cl,BYTE PTR [ebx]
  41f428:	xchg   BYTE PTR [eax+ebp*8+0x30e14ea0],ch
  41f42f:	mov    WORD PTR [ecx],?
  41f431:	aad    0x3b
  41f433:	pop    ss
  41f434:	or     DWORD PTR [eax-0x13],eax
  41f437:	sbb    ecx,DWORD PTR [ecx+0x13]
  41f43a:	push   ss
  41f43b:	cmc    
  41f43c:	not    BYTE PTR [edi]
  41f43e:	xor    DWORD PTR [ecx+eax*1-0x7eed8db9],ebp
  41f445:	pop    ebp
  41f446:	cmp    al,0xad
  41f448:	aas    
  41f449:	ss cmp al,0x2a
  41f44c:	dec    ebx
  41f44d:	mov    dl,0xec
  41f44f:	mov    DWORD PTR ss:[edx],eax
  41f452:	mov    dh,0x61
  41f454:	jmp    0xf639deec
  41f459:	add    DWORD PTR [edx-0x3a8cbed],esi
  41f45f:	aad    0x69
  41f461:	push   ebp
  41f462:	jmp    edx
  41f464:	xchg   ebx,eax
  41f465:	jmp    0x41f408
  41f467:	jnp    0x41f4bf
  41f469:	xor    eax,0xf1b13baa
  41f46e:	loop   0x41f4b3
  41f470:	dec    ebx
  41f471:	xchg   edx,esi
  41f473:	in     eax,0x96
  41f475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f476:	pop    ebp
  41f477:	sub    dh,BYTE PTR [ebp+esi*4-0x4b5806f9]
  41f47e:	mov    eax,0x9b6188a4
  41f483:	fst    QWORD PTR [bx+si]
  41f486:	dec    ebx
  41f487:	mov    ch,0xe5
  41f489:	shr    edx,0xfe
  41f48c:	push   es
  41f48d:	xchg   edx,eax
  41f48e:	mov    ecx,0xe910b22f
  41f493:	mov    ebp,0xf08f16b4
  41f498:	std    
  41f499:	and    bh,BYTE PTR [ecx+ebp*1+0x6ccdeb5]
  41f4a0:	adc    bl,cl
  41f4a2:	test   eax,0xf50861fe
  41f4a7:	pusha  
  41f4a8:	adc    cl,dl
  41f4aa:	(bad)  
  41f4ab:	xor    esi,DWORD PTR [ebx+0x53d494df]
  41f4b1:	sub    eax,0xa588dfde
  41f4b6:	push   0x79
  41f4b8:	in     al,0x7a
  41f4ba:	inc    esi
  41f4bb:	(bad)  
  41f4bc:	jle    0x41f474
  41f4be:	dec    ecx
  41f4bf:	push   es
  41f4c0:	add    DWORD PTR [edi],0xf91904d7
  41f4c6:	in     al,dx
  41f4c7:	fidivr DWORD PTR [ebp+ebp*1-0x73f7752a]
  41f4ce:	dec    edx
  41f4cf:	lock fcmovnu st,st(4)
  41f4d2:	js     0x41f4f0
  41f4d4:	out    0x96,al
  41f4d6:	jmp    0x41f521
  41f4d8:	add    dh,bl
  41f4da:	dec    ebp
  41f4db:	mov    ds:0xa4b5fcdd,al
  41f4e0:	cli    
  41f4e1:	xor    eax,DWORD PTR [ecx]
  41f4e3:	and    al,dh
  41f4e5:	jmp    0x41f4c2
  41f4e7:	ret    
  41f4e8:	imul   ebp,edi,0x40
  41f4eb:	loopne 0x41f4f2
  41f4ed:	xor    cl,BYTE PTR [eax]
  41f4ef:	jno    0x41f54a
  41f4f1:	and    ecx,DWORD PTR [ebp-0x34]
  41f4f4:	lds    dx,DWORD PTR [ebx-0x4e]
  41f4f8:	inc    ebx
  41f4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4fa:	lock jns 0x41f4c8
  41f4fd:	inc    esi
  41f4fe:	jp     0x41f51e
  41f500:	sub    eax,0x5bb93b98
  41f505:	dec    ebx
  41f506:	rcr    DWORD PTR [eax+0x292bc963],0xdf
  41f50d:	sub    DWORD PTR [eiz*2+0x7ff44416],0x5d
  41f515:	std    
  41f516:	sub    al,BYTE PTR [esi]
  41f518:	inc    edi
  41f519:	rcr    BYTE PTR [ecx+edx*8],cl
  41f51c:	retf   
  41f51d:	imul   eax,DWORD PTR [ecx+0x50da6b0e],0xffffffd8
  41f524:	loop   0x41f5a4
  41f526:	fwait
  41f527:	and    al,0x73
  41f529:	rcl    edi,cl
  41f52b:	pop    esi
  41f52c:	repz inc eax
  41f52e:	loop   0x41f57f
  41f530:	jge    0x41f512
  41f532:	ja     0x41f57d
  41f534:	jne    0x41f57c
  41f536:	sbb    eax,0x797b3064
  41f53b:	cmp    DWORD PTR [edx],esp
  41f53d:	popf   
  41f53e:	or     cl,al
  41f540:	sar    BYTE PTR [edx+0x6a],1
  41f543:	push   esi
  41f544:	mov    bl,0xe7
  41f546:	push   ds
  41f547:	sbb    eax,0xec47213a
  41f54c:	ja     0x41f518
  41f54e:	lods   eax,DWORD PTR ds:[esi]
  41f54f:	arpl   bx,di
  41f551:	ret    0x11c8
  41f554:	xor    BYTE PTR [eax-0x30c3b41],dl
  41f55a:	push   0x86d4c169
  41f55f:	xchg   ebp,eax
  41f560:	mov    dh,0xe9
  41f562:	or     bl,ch
  41f564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f565:	ins    DWORD PTR es:[edi],dx
  41f566:	mov    eax,ds:0x115d8293
  41f56b:	mov    edx,0x92adf289
  41f570:	lock hlt 
  41f572:	xor    DWORD PTR [ebx+0x79afc8e5],ebp
  41f578:	sub    bh,BYTE PTR [ecx+0x37]
  41f57b:	daa    
  41f57c:	stos   BYTE PTR es:[edi],al
  41f57d:	dec    esp
  41f57e:	ins    BYTE PTR es:[edi],dx
  41f57f:	das    
  41f580:	cmp    eax,0x3ffa647
  41f585:	push   eax
  41f586:	fwait
  41f587:	outs   dx,BYTE PTR ds:[esi]
  41f588:	and    eax,0xebbc1662
  41f58d:	fist   WORD PTR [esi+ebx*8-0x4654852d]
  41f594:	shl    edx,0xa3
  41f597:	stos   DWORD PTR es:[edi],eax
  41f598:	fisttp QWORD PTR [edx]
  41f59a:	sub    DWORD PTR [edx-0x41672d5a],ebx
  41f5a0:	and    al,0xf9
  41f5a2:	js     0x41f613
  41f5a4:	sbb    al,0xa2
  41f5a6:	outs   dx,BYTE PTR ds:[esi]
  41f5a7:	pop    eax
  41f5a8:	jno    0x41f58e
  41f5aa:	mov    eax,ds:0xfef14c39
  41f5af:	sbb    DWORD PTR [ebx-0x1d1d2fec],0xffffff88
  41f5b6:	xlat   BYTE PTR ds:[ebx]
  41f5b7:	pop    ss
  41f5b8:	fcmovu st,st(1)
  41f5ba:	pop    esp
  41f5bb:	aad    0xf6
  41f5bd:	jmp    0x828ffd80
  41f5c2:	out    dx,eax
  41f5c3:	retf   
  41f5c4:	add    BYTE PTR [ecx+0x45],ah
  41f5c7:	or     DWORD PTR [ebx],eax
  41f5c9:	sahf   
  41f5ca:	mov    al,0x6a
  41f5cc:	data16 stc 
  41f5ce:	shl    BYTE PTR [ebp+0x6b5a9cbc],1
  41f5d4:	leave  
  41f5d5:	(bad)  
  41f5d6:	xor    eax,0x72073c7
  41f5db:	aam    0xce
  41f5dd:	inc    edi
  41f5de:	mov    ah,0x2a
  41f5e0:	shr    DWORD PTR [edi],cl
  41f5e2:	pushf  
  41f5e3:	push   eax
  41f5e4:	stos   DWORD PTR es:[edi],eax
  41f5e5:	add    eax,DWORD PTR [edi+0x63]
  41f5e8:	ja     0x41f5f6
  41f5ea:	pop    ebp
  41f5eb:	add    ch,cl
  41f5ed:	aad    0x7e
  41f5ef:	mov    ebx,0xf31afcf0
  41f5f4:	pop    es
  41f5f5:	inc    eax
  41f5f6:	adc    DWORD PTR [ecx-0x7],edx
  41f5f9:	cld    
  41f5fa:	sub    eax,0x289d3164
  41f5ff:	xchg   ebp,esp
  41f601:	inc    ebx
  41f602:	and    eax,0x1dad80dd
  41f607:	pop    eax
  41f608:	mov    edx,0xe925a639
  41f60d:	arpl   WORD PTR [ecx-0xf],di
  41f610:	mov    edi,ecx
  41f612:	sahf   
  41f613:	mov    eax,0x183dd2c9
  41f618:	mov    BYTE PTR [ecx],0xda
  41f61b:	jecxz  0x41f59e
  41f61d:	jmp    0x9517:0x28977ca1
  41f624:	mov    dl,BYTE PTR [ebx-0x59]
  41f627:	je     0x41f6a5
  41f629:	sbb    eax,0x5908f8fb
  41f62e:	dec    ebx
  41f62f:	iret   
  41f630:	(bad)  
  41f631:	adc    BYTE PTR [eax-0x3890cb9e],ch
  41f637:	adc    BYTE PTR [eax+0x2753202d],bh
  41f63d:	shl    BYTE PTR [edx+eax*2+0x261dd51b],cl
  41f644:	mov    edx,0x91458a2f
  41f649:	dec    esi
  41f64a:	sub    bh,BYTE PTR [esi+edx*8+0x74c43f5c]
  41f651:	mov    edx,0x1bb99766
  41f656:	mov    eax,0x2df049e1
  41f65b:	fninit 
  41f65d:	adc    eax,0xe18256dd
  41f662:	add    ebx,DWORD PTR [ebp+0x9]
  41f665:	lahf   
  41f666:	(bad)  
  41f667:	es pop ebp
  41f669:	xchg   ebp,eax
  41f66a:	cli    
  41f66b:	mov    ds:0xfb4b21a,eax
  41f670:	push   edx
  41f671:	add    dl,BYTE PTR [esi+0x1fc7762f]
  41f677:	imul   cl
  41f679:	mov    al,0x6f
  41f67b:	mov    al,ds:0x7ae0f9b5
  41f680:	ins    DWORD PTR es:[edi],dx
  41f681:	loope  0x41f6ab
  41f683:	mov    dh,0xa4
  41f685:	pop    ecx
  41f686:	shr    DWORD PTR [edi+0x1b],1
  41f689:	inc    ebx
  41f68a:	imul   esp,DWORD PTR [edx+0x51],0x932929f3
  41f691:	sbb    BYTE PTR [ecx+0x7554eb40],0x9
  41f698:	lods   al,BYTE PTR ds:[esi]
  41f699:	inc    eax
  41f69a:	add    al,0xf9
  41f69c:	fisubr DWORD PTR [ecx-0x599e22da]
  41f6a2:	sub    DWORD PTR [ecx],0x9774384a
  41f6a8:	cmp    ecx,esi
  41f6aa:	cmp    BYTE PTR [ebp+0x64],bh
  41f6ad:	(bad)  
  41f6ae:	push   edx
  41f6af:	jl     0x41f721
  41f6b1:	jecxz  0x41f6db
  41f6b3:	cmp    eax,0x42094b5d
  41f6b8:	inc    ebp
  41f6b9:	outs   dx,BYTE PTR ds:[esi]
  41f6ba:	sbb    al,0xc8
  41f6bc:	popa   
  41f6bd:	(bad)  
  41f6be:	cmp    al,BYTE PTR [eax]
  41f6c0:	scas   al,BYTE PTR es:[edi]
  41f6c1:	retf   0xcfec
  41f6c4:	cmp    al,0x9f
  41f6c6:	push   ecx
  41f6c7:	iret   
  41f6c8:	cwde   
  41f6c9:	fs mov ebx,0xa55e71aa
  41f6cf:	dec    edi
  41f6d0:	sar    ecx,cl
  41f6d2:	out    0x8d,eax
  41f6d4:	mov    ecx,edx
  41f6d6:	inc    ebx
  41f6d7:	fbstp  TBYTE PTR [ebx*4-0x6082e2cc]
  41f6de:	push   eax
  41f6df:	sub    ebx,DWORD PTR [edx]
  41f6e1:	mov    ch,0xa4
  41f6e3:	sbb    DWORD PTR [ebx+0x5104d805],edx
  41f6e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6ea:	aam    0xcf
  41f6ec:	out    dx,al
  41f6ed:	cdq    
  41f6ee:	gs xchg esp,eax
  41f6f0:	pop    ss
  41f6f1:	cmc    
  41f6f2:	stos   BYTE PTR es:[edi],al
  41f6f3:	(bad)  
  41f6f4:	dec    ebp
  41f6f5:	sbb    DWORD PTR [ecx+0x54c81e79],eax
  41f6fb:	test   BYTE PTR [esi+0x71f504e],cl
  41f701:	mov    ebx,0xd6ecbb7a
  41f706:	and    DWORD PTR [edx-0x1d720e83],ebx
  41f70c:	mov    ds:0xa427d56c,al
  41f711:	jno    0x41f776
  41f713:	jnp    0x41f78f
  41f715:	out    0x29,eax
  41f717:	dec    ebp
  41f718:	sbb    bl,BYTE PTR [esi-0x7ef2db70]
  41f71e:	jmp    0x46e0fe94
  41f723:	stos   DWORD PTR es:[edi],eax
  41f724:	or     BYTE PTR ds:0x29b0e72e,dh
  41f72a:	push   ss
  41f72b:	xchg   ecx,eax
  41f72c:	jnp    0x41f79e
  41f72e:	test   BYTE PTR [ecx+edi*8],bl
  41f731:	push   esi
  41f732:	jae    0x41f6dd
  41f734:	cmp    ch,al
  41f736:	push   ebp
  41f737:	aas    
  41f738:	sub    al,0xfa
  41f73a:	cmc    
  41f73b:	daa    
  41f73c:	loope  0x41f741
  41f73e:	sub    BYTE PTR [eax],ch
  41f740:	int3   
  41f741:	ret    0xe56d
  41f744:	or     al,bl
  41f746:	jo     0x41f769
  41f748:	(bad)  
  41f749:	es popf 
  41f74b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f74c:	mov    eax,0x803aba21
  41f751:	addr16 arpl di,cx
  41f754:	fnstcw WORD PTR [edi+edi*8]
  41f757:	jg     0x41f7be
  41f759:	das    
  41f75a:	push   ebp
  41f75b:	mov    al,ds:0xd6fdb883
  41f760:	jg     0x41f723
  41f762:	cld    
  41f763:	pusha  
  41f764:	popf   
  41f765:	jns    0x41f726
  41f767:	int    0x59
  41f769:	inc    ebx
  41f76a:	repz lea ebp,[ecx]
  41f76d:	rcr    BYTE PTR [esi],1
  41f76f:	jmp    FWORD PTR [edi+ecx*1+0xe01f3a2]
  41f776:	mov    eax,0x6ec54a4b
  41f77b:	or     ebx,DWORD PTR [eax+0x325c3eca]
  41f781:	push   eax
  41f782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f783:	std    
  41f784:	daa    
  41f785:	shl    dl,0x62
  41f788:	int3   
  41f789:	pop    esi
  41f78a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f78b:	call   DWORD PTR [esi]
  41f78d:	aad    0x60
  41f78f:	add    edi,esp
  41f791:	lock fnsave [ebx+0x783de19f]
  41f798:	rol    bl,cl
  41f79a:	jns    0x41f7a9
  41f79c:	mov    edx,0xa3786c08
  41f7a1:	adc    eax,0xa414e06e
  41f7a6:	test   ebp,edi
  41f7a8:	mov    al,0x6f
  41f7aa:	sbb    eax,0xebd3dcef
  41f7af:	cld    
  41f7b0:	addr16 mov ds:0x9b3e,eax
  41f7b4:	pop    esp
  41f7b5:	xchg   esp,eax
  41f7b6:	in     al,dx
  41f7b7:	les    edi,FWORD PTR [esi+0x36c793f0]
  41f7bd:	push   ebp
  41f7be:	mov    ?,esi
  41f7c0:	sbb    BYTE PTR [edi-0x37],ah
  41f7c3:	add    eax,0x2b75a77
  41f7c8:	jp     0x41f7fd
  41f7ca:	jb     0x41f7fc
  41f7cc:	xchg   esi,eax
  41f7cd:	mov    ebx,0xda55fdf3
  41f7d2:	mov    dl,0xb1
  41f7d4:	xchg   ebp,eax
  41f7d5:	cdq    
  41f7d6:	lahf   
  41f7d7:	out    0x61,eax
  41f7d9:	icebp  
  41f7da:	adc    esp,ecx
  41f7dc:	bound  esp,QWORD PTR [edi+0xf0ab4a2]
  41f7e2:	fbld   TBYTE PTR [ebp-0x7b]
  41f7e5:	add    ecx,0x37
  41f7e8:	add    BYTE PTR [ecx+0x4efb9c28],0x14
  41f7ef:	push   esp
  41f7f0:	jnp    0x41f78d
  41f7f2:	fwait
  41f7f3:	rcl    DWORD PTR [edx],1
  41f7f5:	and    DWORD PTR [edi+ebp*1+0x54],esi
  41f7f9:	ret    0xdc3
  41f7fc:	psubd  mm6,mm2
  41f7ff:	(bad)  
  41f800:	repnz mov ch,0xde
  41f803:	inc    ebx
  41f804:	(bad)  
  41f807:	or     DWORD PTR [eax-0x10],esi
  41f80a:	and    bh,BYTE PTR [ebx-0x34185906]
  41f810:	mov    ebp,0x16a8e0da
  41f815:	dec    eax
  41f816:	popa   
  41f817:	(bad)  
  41f818:	(bad)  
  41f819:	mov    dl,0xc4
  41f81b:	or     dh,BYTE PTR [ecx-0x3d]
  41f81e:	imul   ebx,DWORD PTR [esi],0x899aee13
  41f824:	outs   dx,BYTE PTR ds:[esi]
  41f825:	pop    esi
  41f826:	dec    ebx
  41f827:	in     eax,dx
  41f828:	jne    0x41f865
  41f82a:	ja     0x41f7d8
  41f82c:	cmc    
  41f82d:	inc    ebp
  41f82e:	push   esi
  41f82f:	lea    edi,[ecx+0x72]
  41f832:	push   ebp
  41f833:	mov    esp,0xc7da0bf2
  41f838:	sub    al,0x28
  41f83a:	pop    edi
  41f83b:	je     0x41f7f3
  41f83d:	scas   eax,DWORD PTR es:[edi]
  41f83e:	xor    BYTE PTR ds:0x36223a1c,ah
  41f844:	xor    DWORD PTR [ebx+ebx*2],edx
  41f847:	jmp    0xf39d:0xa06a290b
  41f84e:	inc    edx
  41f84f:	sub    esp,ebp
  41f851:	mov    dl,0x26
  41f853:	xchg   DWORD PTR [esi+ecx*1-0xb],ebp
  41f857:	ja     0x41f7da
  41f859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f85a:	out    0xa3,al
  41f85c:	inc    edx
  41f85d:	push   eax
  41f85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f85f:	jecxz  0x41f8b3
  41f861:	add    BYTE PTR [ebp-0x2a],cl
  41f864:	data16 in al,0x11
  41f867:	add    al,0xa9
  41f869:	in     al,dx
  41f86a:	(bad)  
  41f86c:	fcom   DWORD PTR [edi-0x3a]
  41f86f:	mov    dh,cl
  41f871:	call   0x1d1:0x84616e0d
  41f878:	and    BYTE PTR [edi-0x7a],ah
  41f87b:	mov    ebx,0xc2305b64
  41f880:	or     DWORD PTR [ecx],esi
  41f882:	dec    ecx
  41f883:	dec    edx
  41f884:	js     0x41f847
  41f886:	shr    dh,0x5e
  41f889:	fbstp  TBYTE PTR [edi+0x1f]
  41f88c:	sbb    eax,0xf5363214
  41f891:	sbb    dl,dh
  41f893:	clc    
  41f894:	retf   0x77c2
  41f897:	jl     0x41f8db
  41f899:	lods   eax,DWORD PTR ds:[esi]
  41f89a:	pop    es
  41f89b:	shl    DWORD PTR [esi-0x28795ba5],cl
  41f8a1:	jno    0x41f906
  41f8a3:	fistp  WORD PTR [esi+ebx*1-0x59b33f45]
  41f8aa:	mov    ecx,0x997f4c49
  41f8af:	mov    dl,0x37
  41f8b1:	inc    esp
  41f8b2:	pop    es
  41f8b3:	mov    dh,0xb0
  41f8b5:	pop    ebx
  41f8b6:	xor    cl,BYTE PTR [esi+0x25371729]
  41f8bc:	add    ah,BYTE PTR [ecx-0x72]
  41f8bf:	cli    
  41f8c0:	jle    0x41f92f
  41f8c2:	fld    TBYTE PTR [eax+0x2e067318]
  41f8c8:	(bad)  
  41f8c9:	jno    0x41f885
  41f8cb:	push   cs
  41f8cc:	enter  0xe2b6,0x72
  41f8d0:	shl    BYTE PTR [esi+0x589a81e3],0xcb
  41f8d7:	loopne 0x41f940
  41f8d9:	mov    dh,0xb9
  41f8db:	sar    esp,1
  41f8dd:	(bad)  
  41f8de:	mov    esp,0xc37b8c7c
  41f8e3:	or     ah,BYTE PTR [edi]
  41f8e5:	jmp    FWORD PTR [edx-0x61]
  41f8e8:	mov    esi,0xfdeb4110
  41f8ed:	fimul  WORD PTR ds:0xf0f1bdee
  41f8f3:	fmul   QWORD PTR [edi]
  41f8f5:	push   0x66
  41f8f7:	jno    0x41f95e
  41f8f9:	scas   al,BYTE PTR es:[edi]
  41f8fa:	test   eax,0x3cad0a0
  41f8ff:	push   es
  41f900:	dec    edi
  41f901:	jb     0x41f8ea
  41f903:	add    BYTE PTR [ecx+edi*8+0x73],0xb5
  41f908:	sbb    dl,bl
  41f90a:	inc    ebp
  41f90b:	icebp  
  41f90c:	mov    ch,0xf3
  41f90e:	or     eax,0xcbb0342e
  41f913:	xchg   ebx,eax
  41f914:	or     al,BYTE PTR [ebx+esi*1-0x6caee193]
  41f91b:	clc    
  41f91c:	push   ebx
  41f91d:	xchg   ebx,eax
  41f91e:	mov    dh,0x86
  41f920:	add    ebp,DWORD PTR [ecx-0x4]
  41f923:	lahf   
  41f924:	inc    eax
  41f925:	mov    edi,0x7e4210f5
  41f92a:	pop    edi
  41f92b:	push   ebp
  41f92c:	mov    esi,edi
  41f92e:	adc    al,0x29
  41f930:	rol    al,0xf5
  41f933:	add    DWORD PTR [edi],0x7c8be896
  41f939:	dec    esp
  41f93a:	ins    DWORD PTR es:[edi],dx
  41f93b:	adc    al,0x89
  41f93d:	dec    eax
  41f93e:	add    ebx,DWORD PTR [eax]
  41f940:	dec    ebp
  41f941:	loope  0x41f98c
  41f943:	mov    dh,0xb9
  41f945:	loop   0x41f9a6
  41f947:	or     dl,BYTE PTR [ebp-0x22f03f6d]
  41f94d:	call   0x47bd9429
  41f952:	xchg   edx,eax
  41f953:	sti    
  41f954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f955:	fist   DWORD PTR [ebp-0x12]
  41f958:	bound  ecx,QWORD PTR [ebx+eiz*2-0x5c]
  41f95c:	jnp    0x41f8de
  41f95e:	minps  xmm7,XMMWORD PTR [ecx-0x57]
  41f962:	jmp    0x41f9c7
  41f964:	imul   eax,DWORD PTR [eax-0x4d],0xffffffc3
  41f968:	jl     0x41f9bc
  41f96a:	xchg   ebx,eax
  41f96b:	fs test ch,ch
  41f96e:	pop    ebp
  41f96f:	in     al,dx
  41f970:	or     dl,ch
  41f972:	fsubr  DWORD PTR [esi+0x21]
  41f975:	outs   dx,DWORD PTR ds:[esi]
  41f976:	pop    eax
  41f977:	arpl   WORD PTR [esp+eax*8-0x1f4318c8],bp
  41f97e:	test   eax,0xcc54836
  41f983:	iret   
  41f984:	scas   eax,DWORD PTR es:[edi]
  41f985:	pusha  
  41f986:	stos   DWORD PTR es:[edi],eax
  41f987:	arpl   WORD PTR [esi+0x1d5715dd],dx
  41f98d:	test   BYTE PTR ds:0x3775e12e,bl
  41f993:	or     ebp,edx
  41f995:	lahf   
  41f996:	fst    DWORD PTR [ebp+0x29]
  41f999:	adc    edx,eax
  41f99b:	xchg   esi,eax
  41f99c:	lahf   
  41f99d:	mov    ds:0x4b4b0b94,al
  41f9a2:	loopne 0x41f9a2
  41f9a4:	and    eax,0x3144a37
  41f9a9:	adc    BYTE PTR ds:0x775028f3,cl
  41f9af:	cli    
  41f9b0:	mov    ebx,0x650cb807
  41f9b5:	ins    DWORD PTR es:[edi],dx
  41f9b6:	aad    0x13
  41f9b8:	inc    esp
  41f9b9:	cli    
  41f9ba:	mov    dh,0x1b
  41f9bc:	call   0xbddd04e1
  41f9c1:	push   ds
  41f9c2:	xor    bh,BYTE PTR [ecx-0x47]
  41f9c5:	ins    DWORD PTR es:[edi],dx
  41f9c6:	sub    ebx,DWORD PTR ds:0x38dfd280
  41f9cc:	imul   esp,DWORD PTR [ecx+0x316b2868],0x50
  41f9d3:	popf   
  41f9d4:	rcr    BYTE PTR [ebx],1
  41f9d6:	cwde   
  41f9d7:	fs mov ah,0x2e
  41f9da:	adc    bl,BYTE PTR [ecx+esi*8+0x27cb16c4]
  41f9e1:	das    
  41f9e2:	retf   0x2cef
  41f9e5:	mov    cl,0xe4
  41f9e7:	addr16 std 
  41f9e9:	pop    es
  41f9ea:	cmp    bh,BYTE PTR [ebp+0x11]
  41f9ed:	sets   BYTE PTR [ebp-0x2a]
  41f9f1:	jecxz  0x41fa51
  41f9f3:	inc    esp
  41f9f4:	(bad)  
  41f9f5:	and    dh,BYTE PTR [edx-0x3b8a1e3c]
  41f9fb:	dec    edx
  41f9fc:	stos   BYTE PTR es:[edi],al
  41f9fd:	jg     0x41fa29
  41f9ff:	pop    es
  41fa00:	popa   
  41fa01:	pusha  
  41fa02:	ds pop edi
  41fa04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa05:	in     al,dx
  41fa06:	pop    ecx
  41fa07:	cmp    DWORD PTR [ecx+edx*2+0x6ec674de],0x54
  41fa0f:	push   ss
  41fa10:	leave  
  41fa11:	xor    ah,ch
  41fa13:	push   ebx
  41fa14:	adc    al,BYTE PTR [eax-0x71]
  41fa17:	and    al,0xb
  41fa19:	or     eax,0xc09d4937
  41fa1e:	sub    eax,0xd679c663
  41fa23:	jo     0x41f9df
  41fa25:	cld    
  41fa26:	fnstcw WORD PTR [eax+0x18f4897]
  41fa2c:	pop    esp
  41fa2d:	test   al,0xd6
  41fa2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa30:	jno    0x41f9e9
  41fa32:	je     0x41fa80
  41fa34:	jmp    0xaf930034
  41fa39:	aas    
  41fa3a:	xor    edx,ebx
  41fa3c:	xchg   edx,eax
  41fa3d:	mov    ebp,0x8e8beada
  41fa42:	inc    ecx
  41fa43:	inc    esi
  41fa44:	or     dh,ah
  41fa46:	or     BYTE PTR [ecx],ch
  41fa48:	je     0x41fa07
  41fa4a:	or     ebp,edi
  41fa4c:	mov    BYTE PTR [edx],al
  41fa4e:	inc    esi
  41fa4f:	(bad)  
  41fa50:	mov    eax,ds:0xdc23f6a7
  41fa55:	push   ebp
  41fa56:	adc    dh,BYTE PTR [ebp+0x2b]
  41fa59:	ret    0xf72d
  41fa5c:	js     0x41fa0f
  41fa5e:	xchg   edx,eax
  41fa5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa60:	dec    eax
  41fa61:	mov    ebp,0xedd2dae9
  41fa66:	inc    edx
  41fa67:	pop    ebp
  41fa68:	lahf   
  41fa69:	popa   
  41fa6a:	in     eax,dx
  41fa6b:	xchg   edi,eax
  41fa6c:	dec    ecx
  41fa6d:	sbb    al,0x11
  41fa6f:	std    
  41fa70:	push   ss
  41fa71:	add    DWORD PTR [edx],0xce7808bd
  41fa77:	dec    edi
  41fa78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa79:	sbb    eax,0x77960289
  41fa7e:	fwait
  41fa7f:	lea    ecx,[ecx-0x4d]
  41fa82:	(bad)
  41fa85:	out    0x5d,eax
  41fa87:	mov    WORD PTR [edx+ebx*8],cs
  41fa8a:	test   eax,0xe780e910
  41fa8f:	xchg   ebp,eax
  41fa90:	jecxz  0x41fa80
  41fa92:	add    BYTE PTR [ecx+ebp*2],cl
  41fa95:	xor    eax,0xcf3eb515
  41fa9b:	or     al,dl
  41fa9d:	scas   al,BYTE PTR es:[edi]
  41fa9e:	inc    eax
  41fa9f:	daa    
  41faa0:	test   BYTE PTR [edi],0xd8
  41faa3:	(bad)  
  41faa5:	int    0x3f
  41faa7:	shr    BYTE PTR [ecx+0x5e3f3647],1
  41faad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faae:	repz jl 0x41fb2b
  41fab1:	call   0x30d44b88
  41fab6:	fcmovbe st,st(1)
  41fab8:	or     ch,bh
  41faba:	repz (bad)
  41fabd:	call   0x7de5:0xce390775
  41fac4:	pop    esp
  41fac6:	or     BYTE PTR [edx+edi*8-0x2874d32a],dl
  41facd:	fimul  DWORD PTR [eax+ebp*1-0x75]
  41fad1:	das    
  41fad2:	test   edx,eax
  41fad4:	push   edi
  41fad5:	add    dl,bh
  41fad7:	cld    
  41fad8:	xchg   ecx,eax
  41fad9:	sub    BYTE PTR [edx+0x3a8d91ee],ah
  41fadf:	push   ds
  41fae0:	inc    edi
  41fae1:	and    dl,BYTE PTR [edx+ebp*8-0x4f]
  41fae5:	cwde   
  41fae6:	adc    eax,0x2877a0b5
  41faeb:	pop    ebp
  41faec:	xchg   edi,eax
  41faed:	test   al,0xf3
  41faef:	pop    DWORD PTR [eax+eax*2-0x40255985]
  41faf6:	pusha  
  41faf7:	lmsw   WORD PTR [ebx+0x68]
  41fafb:	mov    al,0xdf
  41fafd:	ds stc 
  41faff:	push   cs
  41fb00:	push   0x1656449e
  41fb05:	sbb    DWORD PTR [edi+0x37],edx
  41fb08:	leave  
  41fb09:	sub    dl,BYTE PTR [esi-0x2c]
  41fb0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb0d:	call   0xd97488ba
  41fb12:	inc    BYTE PTR [ecx+0x40382578]
  41fb18:	lods   al,BYTE PTR ds:[esi]
  41fb19:	pop    es
  41fb1a:	repnz and eax,0x770b8090
  41fb20:	test   al,0xe6
  41fb22:	int3   
  41fb23:	imul   ebx,DWORD PTR [eax],0x2c
  41fb26:	popa   
  41fb27:	and    ebx,DWORD PTR [ebx+0x1f]
  41fb2a:	xor    ebp,DWORD PTR [ebx]
  41fb2c:	jbe    0x41fb97
  41fb2e:	jmp    0x150d6816
  41fb33:	aad    0xf5
  41fb35:	jl     0x41fb92
  41fb37:	push   esi
  41fb38:	jne    0x41fb47
  41fb3a:	jp     0x41fb2a
  41fb3c:	pop    eax
  41fb3d:	imul   edi,ecx,0x3c
  41fb40:	dec    edx
  41fb41:	mov    esp,0x6d69cafd
  41fb46:	sbb    ebp,DWORD PTR [edi+0x13]
  41fb49:	cmp    BYTE PTR [eax+0x31],dl
  41fb4c:	add    BYTE PTR [edi+0x4d67a18f],bl
  41fb52:	mov    bl,0x41
  41fb54:	jmp    0xf2919811
  41fb59:	jo     0x41fb07
  41fb5b:	xlat   BYTE PTR ds:[ebx]
  41fb5c:	and    BYTE PTR [esi+0x61f9f66b],0xe7
  41fb63:	andps  xmm1,XMMWORD PTR [ebp+0x27cb611f]
  41fb6a:	imul   esi,DWORD PTR [esi],0x27f93a2d
  41fb70:	jmp    0xb342:0xaa5bf2c
  41fb77:	add    BYTE PTR [edi+0x71],bh
  41fb7a:	es popa 
  41fb7c:	and    al,0xc3
  41fb7e:	lods   al,BYTE PTR ds:[esi]
  41fb7f:	xchg   esi,eax
  41fb80:	cmp    DWORD PTR [edx+ebp*1-0x1066a769],edi
  41fb87:	popa   
  41fb88:	aam    0x3
  41fb8a:	jnp    0x41fbbb
  41fb8c:	jns    0x41fb12
  41fb8e:	pop    esp
  41fb8f:	push   ebx
  41fb90:	(bad)  
  41fb91:	jne    0x41fb35
  41fb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb94:	push   cs
  41fb95:	mov    ebp,0x8b86deb
  41fb9a:	push   edx
  41fb9b:	rcr    BYTE PTR [eax+0x2b479e79],1
  41fba1:	jge    0x41fc1b
  41fba3:	fidivr WORD PTR [eax]
  41fba5:	clc    
  41fba6:	inc    esi
  41fba7:	fdivrp st(0),st
  41fba9:	ss adc ebx,edx
  41fbac:	sbb    al,0x5e
  41fbae:	add    DWORD PTR [esi],eax
  41fbb0:	scas   al,BYTE PTR es:[edi]
  41fbb1:	ins    DWORD PTR es:[edi],dx
  41fbb2:	mov    ch,0xd6
  41fbb4:	jp     0x41fbe5
  41fbb6:	xor    eax,0xbe1e24b
  41fbbb:	shr    BYTE PTR [ecx+0xdbec5fe],cl
  41fbc1:	mov    ah,0xba
  41fbc3:	xchg   esi,eax
  41fbc4:	sub    bh,BYTE PTR [ebx+0x313c551c]
  41fbca:	fs jg  0x41fbd2
  41fbcd:	adc    dh,al
  41fbcf:	enter  0x8b80,0x98
  41fbd3:	stos   BYTE PTR es:[edi],al
  41fbd4:	dec    esp
  41fbd5:	aad    0x21
  41fbd7:	mov    esp,DWORD PTR [ebp-0x2305c994]
  41fbdd:	dec    ebp
  41fbde:	mov    eax,0xf352c2c2
  41fbe3:	aas    
  41fbe4:	jmp    0xa9a9:0x3863e46f
  41fbeb:	jl     0x41fb77
  41fbed:	imul   edi,DWORD PTR [edi],0xffffffd3
  41fbf0:	adc    al,0x50
  41fbf2:	int    0x86
  41fbf4:	fistp  QWORD PTR [esi]
  41fbf6:	fld    DWORD PTR [eax+0x2b]
  41fbf9:	daa    
  41fbfa:	test   al,0x82
  41fbfc:	dec    ebp
  41fbfd:	mov    ebp,0x63a2deda
  41fc02:	and    DWORD PTR [edx+0x7d],esp
  41fc05:	cmp    eax,0x74b1a659
  41fc0a:	pop    edx
  41fc0b:	jg     0x41fbfa
  41fc0d:	pop    esi
  41fc0e:	mov    edi,0x6a63d01
  41fc13:	popa   
  41fc14:	lds    ebp,FWORD PTR [ecx-0x19c1dd6c]
  41fc1a:	pop    gs
  41fc1c:	or     bl,bl
  41fc1e:	mov    esp,0x6a0a85a6
  41fc23:	out    0xd6,al
  41fc25:	or     eax,0x7b42b705
  41fc2a:	xchg   DWORD PTR [ebp-0x83c3197],esp
  41fc30:	retf   
  41fc31:	inc    esi
  41fc32:	push   0x75025dd4
  41fc37:	mov    ah,0x6a
  41fc39:	bound  esp,QWORD PTR [esi+ebx*8]
  41fc3c:	sub    ah,ch
  41fc3e:	cmp    eax,0xec49b45e
  41fc43:	inc    edi
  41fc44:	lea    ecx,[eax+edx*1-0x3cc24ea3]
  41fc4b:	test   DWORD PTR [edx-0x60],ecx
  41fc4e:	cmp    BYTE PTR [bp-0x7886],cl
  41fc53:	add    al,0xc6
  41fc55:	stc    
  41fc56:	or     al,0x5c
  41fc58:	cs dec edx
  41fc5a:	hlt    
  41fc5b:	mov    ebp,0xa7278638
  41fc60:	cmp    al,0xc0
  41fc62:	cmc    
  41fc63:	adc    eax,0x48d26260
  41fc68:	push   cs
  41fc69:	(bad)  
  41fc6a:	in     eax,0x38
  41fc6c:	mov    edx,0x63d18b49
  41fc71:	dec    ecx
  41fc72:	inc    ecx
  41fc73:	sub    al,0x70
  41fc75:	fcmovu st,st(0)
  41fc77:	push   ss
  41fc78:	(bad)  
  41fc79:	push   ebx
  41fc7a:	arpl   WORD PTR [edx-0x23dfd507],si
  41fc80:	mov    al,ds:0xc5e53087
  41fc85:	mov    esp,0x8c5b1f34
  41fc8a:	icebp  
  41fc8b:	fst    DWORD PTR [ecx-0x50]
  41fc8e:	nop
  41fc8f:	mov    ah,0x75
  41fc91:	xor    eax,edx
  41fc93:	push   ebp
  41fc94:	xor    bl,BYTE PTR [eax+ecx*2-0x78]
  41fc98:	jecxz  0x41fcb8
  41fc9a:	fiadd  WORD PTR [edi]
  41fc9c:	scas   al,BYTE PTR es:[edi]
  41fc9d:	ds ss xchg ebp,eax
  41fca0:	cmp    eax,0x37fe13d2
  41fca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fca6:	inc    ebx
  41fca7:	push   edi
  41fca8:	cwde   
  41fca9:	cmp    al,0x3b
  41fcab:	(bad)  
  41fcad:	jb     0x41fcba
  41fcaf:	aam    0x4
  41fcb1:	pop    ecx
  41fcb2:	and    eax,0xe8b30f08
  41fcb7:	jge    0x41fc44
  41fcb9:	push   0xffffffc2
  41fcbb:	mov    bh,BYTE PTR [esi]
  41fcbd:	add    eax,0xd85ce7fa
  41fcc2:	xchg   ecx,eax
  41fcc3:	mov    eax,0x62f77f70
  41fcc8:	popa   
  41fcc9:	popf   
  41fcca:	mov    al,0x0
  41fccc:	int3   
  41fccd:	mov    ch,0x17
  41fccf:	push   eax
  41fcd0:	jp     0x41fcb2
  41fcd2:	setbe  BYTE PTR [edi-0x505b82a]
  41fcd9:	repz scas eax,DWORD PTR es:[edi]
  41fcdb:	cmp    eax,0xb275a504
  41fce0:	fiadd  DWORD PTR [eax+0x46e175c3]
  41fce6:	pop    edi
  41fce7:	sbb    eax,0x87b3f68f
  41fcec:	adc    edx,esp
  41fcee:	cmp    eax,0xd87c0526
  41fcf3:	jmp    0x41fc87
  41fcf5:	imul   esp,DWORD PTR [ecx+0x2b],0xc
  41fcf9:	push   0xffffffac
  41fcfb:	add    DWORD PTR [esi+0x6c],esi
  41fcfe:	adc    esp,DWORD PTR [edx]
  41fd00:	jne    0x41fd54
  41fd02:	or     DWORD PTR [eax+0x62],0x2f
  41fd06:	pushf  
  41fd07:	xor    BYTE PTR [esi],ah
  41fd09:	test   al,0x9a
  41fd0b:	scas   eax,DWORD PTR es:[edi]
  41fd0c:	and    bl,BYTE PTR [edx+0x40]
  41fd0f:	hlt    
  41fd10:	push   ecx
  41fd11:	mov    dh,0xe3
  41fd13:	sar    bl,1
  41fd15:	add    ebx,esp
  41fd17:	arpl   ax,cx
  41fd19:	std    
  41fd1a:	pop    esi
  41fd1b:	es out 0x9f,eax
  41fd1e:	mov    al,ds:0x64f87053
  41fd23:	aad    0x40
  41fd25:	shl    edi,1
  41fd27:	ret    
  41fd28:	pop    ecx
  41fd29:	xor    dl,dl
  41fd2b:	xor    BYTE PTR [eax+0x6c],dl
  41fd2e:	pusha  
  41fd2f:	xor    BYTE PTR [ebx+0x34],ch
  41fd32:	dec    ebx
  41fd33:	addr16 mov edi,0x20bf50c0
  41fd39:	push   es
  41fd3a:	aam    0x32
  41fd3c:	jge    0x41fd57
  41fd3e:	(bad)
  41fd41:	retf   
  41fd42:	mov    esp,0xccbb5f18
  41fd47:	popa   
  41fd48:	outs   dx,BYTE PTR ds:[esi]
  41fd49:	lds    ecx,FWORD PTR [esi]
  41fd4b:	imul   ebx,DWORD PTR [ebp-0x9],0x66
  41fd4f:	pop    esi
  41fd50:	loop   0x41fd46
  41fd52:	icebp  
  41fd53:	adc    dh,cl
  41fd55:	int    0xcb
  41fd57:	cmp    ebp,ebp
  41fd59:	stc    
  41fd5a:	dec    eax
  41fd5b:	ficom  DWORD PTR [esi]
  41fd5d:	icebp  
  41fd5e:	jge    0x41fd0b
  41fd60:	push   edx
  41fd61:	pop    ds
  41fd62:	sahf   
  41fd63:	add    DWORD PTR [edx],0x12469690
  41fd69:	pushf  
  41fd6a:	cmp    edi,DWORD PTR [esi]
  41fd6c:	ret    0x5706
  41fd6f:	in     eax,0xa6
  41fd71:	sbb    ebp,esi
  41fd73:	test   BYTE PTR [edx+0x26],cl
  41fd76:	and    al,0x3c
  41fd78:	fist   DWORD PTR [edx]
  41fd7a:	add    DWORD PTR cs:[ecx-0x7941d59e],eax
  41fd81:	stos   BYTE PTR es:[edi],al
  41fd82:	xchg   esi,eax
  41fd83:	jg     0x41fde1
  41fd85:	cs mov edx,0xef0af747
  41fd8b:	repz jne 0x41fd82
  41fd8e:	sahf   
  41fd8f:	and    esp,DWORD PTR [edx+ecx*2]
  41fd92:	int3   
  41fd93:	(bad)  
  41fd96:	mov    edi,cs
  41fd98:	test   esp,ecx
  41fd9a:	lds    esp,FWORD PTR [ebx+edx*2-0x188e71b3]
  41fda1:	fidiv  DWORD PTR [edx]
  41fda3:	test   al,0xe2
  41fda5:	adc    eax,0xdde714ff
  41fdaa:	sub    al,0xff
  41fdac:	and    edi,esi
  41fdae:	or     DWORD PTR [esi+0x7fa1c408],edi
  41fdb4:	out    dx,eax
  41fdb5:	xor    al,0xbc
  41fdb7:	test   DWORD PTR [ecx+0x65e3b6b8],eax
  41fdbd:	cli    
  41fdbe:	dec    esp
  41fdbf:	sub    BYTE PTR [ebp+edx*4-0x7c],dl
  41fdc3:	test   eax,0x2ecc68db
  41fdc8:	iret   
  41fdc9:	jle    0x41fe3e
  41fdcb:	push   ss
  41fdcc:	pop    ecx
  41fdcd:	xchg   esp,eax
  41fdce:	pop    edi
  41fdcf:	mov    ecx,0xd228dc67
  41fdd4:	mov    ebp,0x144110a4
  41fdd9:	ins    BYTE PTR es:[edi],dx
  41fdda:	sbb    al,bh
  41fddc:	gs (bad) 
  41fddf:	stos   BYTE PTR es:[edi],al
  41fde0:	push   ebx
  41fde1:	or     DWORD PTR [esi+0x5],edi
  41fde4:	or     dl,BYTE PTR [ebp+0x23]
  41fde7:	pop    ds
  41fde8:	mov    ebp,0xe7c789ee
  41fded:	mov    es,ecx
  41fdef:	or     al,0xea
  41fdf1:	jno    0x41fe4c
  41fdf3:	cmp    esi,DWORD PTR [edx]
  41fdf5:	dec    esi
  41fdf6:	xchg   edx,eax
  41fdf7:	push   esi
  41fdf8:	dec    edi
  41fdf9:	pop    ecx
  41fdfa:	pushf  
  41fdfb:	popf   
  41fdfc:	sub    ecx,edi
  41fdfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdff:	or     al,0x46
  41fe01:	fmul   QWORD PTR [ecx+0x3c]
  41fe04:	icebp  
  41fe05:	or     eax,0x4dc6096a
  41fe0a:	xor    BYTE PTR [ebx],ch
  41fe0c:	cmp    al,0x51
  41fe0e:	sbb    ebp,DWORD PTR [eax+0x42]
  41fe11:	ss jnp 0x41fdf4
  41fe14:	cmp    eax,0x5912ace4
  41fe19:	out    dx,eax
  41fe1a:	dec    edx
  41fe1b:	jnp    0x41fe97
  41fe1d:	int3   
  41fe1e:	hlt    
  41fe1f:	test   al,0xd6
  41fe21:	rcr    BYTE PTR [ecx+0x55],cl
  41fe24:	mov    ebx,0x65528af1
  41fe29:	dec    esi
  41fe2a:	loopne 0x41fe5b
  41fe2c:	inc    esi
  41fe2d:	call   0xf224:0x9538bf16
  41fe34:	and    bl,dl
  41fe36:	into   
  41fe37:	pop    ds
  41fe38:	adc    BYTE PTR [ebx],dl
  41fe3a:	arpl   si,di
  41fe3c:	rcr    BYTE PTR [ebx-0x3b06faeb],1
  41fe42:	lds    ebp,FWORD PTR [eax+0x30ff9af8]
  41fe48:	dec    edi
  41fe49:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe4b:	gs (bad) 
  41fe4e:	jmp    0x41fdf5
  41fe50:	and    BYTE PTR [ecx*4+0x7113d819],dl
  41fe57:	outs   dx,BYTE PTR ds:[esi]
  41fe58:	mov    ebp,0xea81e467
  41fe5d:	out    dx,al
  41fe5e:	and    edx,DWORD PTR [ebp-0x7f]
  41fe61:	push   esi
  41fe62:	loopne 0x41fe38
  41fe64:	mov    esp,ecx
  41fe66:	sub    al,BYTE PTR [eax]
  41fe68:	mov    bl,0x7d
  41fe6a:	or     al,0xe2
  41fe6c:	add    BYTE PTR ss:[edx],al
  41fe6f:	neg    DWORD PTR [edi+edi*8-0x2199beb8]
  41fe76:	dec    ebp
  41fe77:	cmp    eax,0xdea2be4e
  41fe7c:	loop   0x41fe6b
  41fe7e:	jmp    0xa4b4:0x5ad0e188
  41fe85:	in     eax,dx
  41fe86:	out    0xe0,al
  41fe88:	ret    0x2c8
  41fe8b:	in     al,dx
  41fe8c:	dec    esp
  41fe8d:	mov    ds:0x8a722e21,al
  41fe92:	(bad)  
  41fe94:	cmp    eax,edi
  41fe96:	adc    dl,0x88
  41fe99:	aad    0xf2
  41fe9b:	sub    eax,0x23ccc7ce
  41fea0:	adc    al,0xd2
  41fea2:	les    edi,FWORD PTR [ecx-0x66ba79e8]
  41fea8:	dec    ecx
  41fea9:	loopne 0x41fe61
  41feab:	add    eax,0x3e1f9ed4
  41feb0:	mov    eax,0xc154f90b
  41feb5:	mov    ebp,0xf93f3c80
  41feba:	push   ss
  41febb:	xchg   ecx,eax
  41febc:	js     0x41ff2d
  41febe:	mov    dh,ah
  41fec0:	(bad)  
  41fec1:	imul   eax,ebx,0x55
  41fec4:	retf   
  41fec5:	mov    eax,0x39a7193c
  41feca:	dec    ebx
  41fecb:	push   edi
  41fecc:	jmp    0x41febe
  41fece:	jg     0x41ff00
  41fed0:	jp     0x41ff11
  41fed2:	inc    ecx
  41fed3:	int    0x59
  41fed5:	sbb    ebx,DWORD PTR [edi]
  41fed7:	inc    esp
  41fed8:	icebp  
  41fed9:	jo     0x41ff3c
  41fedb:	in     al,0x42
  41fedd:	pop    edx
  41fede:	mov    dh,0xb8
  41fee0:	mov    esp,0x2bff5031
  41fee5:	and    al,0x65
  41fee7:	jecxz  0x41fe81
  41fee9:	push   es
  41feea:	icebp  
  41feeb:	call   0xeb16:0xb3f660c4
  41fef2:	fld    DWORD PTR [edx+eiz*4]
  41fef5:	pop    ss
  41fef6:	je     0x41fe79
  41fef8:	call   0x1043:0x1df56610
  41feff:	fsub   QWORD PTR [edi]
  41ff01:	jno    0x41ff6b
  41ff03:	sti    
  41ff04:	jo     0x41fec7
  41ff06:	loop   0x41ff28
  41ff08:	iret   
  41ff09:	mov    ds:0x91d1cf71,al
  41ff0e:	lods   al,BYTE PTR ds:[esi]
  41ff0f:	xchg   edx,eax
  41ff10:	repz xchg ebp,eax
  41ff12:	out    dx,eax
  41ff13:	jns    0x41ff18
  41ff15:	and    bl,ch
  41ff17:	loop   0x41ff25
  41ff19:	xchg   ebx,eax
  41ff1a:	sbb    DWORD PTR [ecx-0x3b],edi
  41ff1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff1e:	add    DWORD PTR [edx-0x18be897e],ecx
  41ff24:	fimul  WORD PTR [esi+0x6d]
  41ff27:	adc    eax,0x125e127b
  41ff2c:	sub    esp,ebp
  41ff2e:	xor    bl,BYTE PTR [esi-0x7b]
  41ff31:	cmp    DWORD PTR [edi-0x2a],esp
  41ff34:	pop    esi
  41ff35:	imul   eax,DWORD PTR [edi+edx*1-0x694c0a7f],0x21d0587
  41ff40:	xor    eax,0xd69d5680
  41ff45:	mov    edx,DWORD PTR [esi]
  41ff47:	mov    edx,0xbfcaf6ba
  41ff4c:	pushfw 
  41ff4e:	das    
  41ff4f:	or     BYTE PTR [ebx-0x1e],0xdd
  41ff53:	sub    cl,cl
  41ff55:	xchg   esi,eax
  41ff56:	stos   DWORD PTR es:[edi],eax
  41ff57:	jmp    0x41ff65
  41ff59:	imul   DWORD PTR [eax+0x52]
  41ff5c:	push   esp
  41ff5d:	test   eax,edi
  41ff5f:	sub    bl,BYTE PTR [edi-0x7a]
  41ff62:	mov    al,0x57
  41ff64:	sbb    dh,BYTE PTR [ebp-0x14]
  41ff67:	bound  esp,QWORD PTR ds:[edx+0x70]
  41ff6b:	push   esp
  41ff6c:	xor    al,0x53
  41ff6e:	loope  0x41ff05
  41ff70:	sub    eax,DWORD PTR ds:[edi-0x7f9f63a9]
  41ff77:	je     0x41ffed
  41ff79:	mov    eax,ds:0xfddb43aa
  41ff7e:	jle    0x41ff63
  41ff80:	arpl   dx,dx
  41ff82:	popa   
  41ff83:	xchg   BYTE PTR [ecx],cl
  41ff85:	or     cl,BYTE PTR [ecx]
  41ff87:	aas    
  41ff88:	xchg   BYTE PTR [esi],bh
  41ff8a:	ret    
  41ff8b:	jo     0x41ffe5
  41ff8d:	inc    BYTE PTR [ebp-0x5f1769a9]
  41ff93:	xchg   ecx,eax
  41ff94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff95:	loope  0x41ffad
  41ff97:	xor    ebx,edi
  41ff99:	enter  0x48d7,0x15
  41ff9d:	jg     0x41ff6c
  41ff9f:	les    edx,FWORD PTR [edx]
  41ffa1:	call   0x75d3706c
  41ffa6:	ins    DWORD PTR es:[edi],dx
  41ffa7:	jae    0x41ff43
  41ffa9:	pusha  
  41ffaa:	adc    cl,dh
  41ffac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffad:	div    ecx
  41ffaf:	ins    BYTE PTR es:[edi],dx
  41ffb0:	jmp    0x41ffb6
  41ffb2:	lea    ecx,[ebx-0x15ad6b8f]
  41ffb8:	arpl   WORD PTR [ebp+0x2b],bx
  41ffbb:	lods   eax,DWORD PTR ds:[esi]
  41ffbc:	dec    esp
  41ffbd:	adc    esp,DWORD PTR [ebx+0x40]
  41ffc0:	out    dx,eax
  41ffc1:	stos   BYTE PTR es:[edi],al
  41ffc2:	(bad)  
  41ffc3:	or     edi,ebp
  41ffc5:	into   
  41ffc6:	jnp    0x41ffa7
  41ffc8:	popa   
  41ffc9:	mov    eax,ds:0x5bd6c1c0
  41ffce:	pop    edi
  41ffcf:	dec    esi
  41ffd0:	mov    bh,BYTE PTR ss:[eax+edx*1-0x14]
  41ffd5:	and    al,0x66
  41ffd7:	shl    BYTE PTR [edx],1
  41ffd9:	adc    BYTE PTR [edx-0x69],cl
  41ffdc:	adc    DWORD PTR [ebp+esi*4-0x4],ebx
  41ffe0:	push   ds
  41ffe1:	mov    ds:0x75405ba3,eax
  41ffe6:	jge    0x420025
  41ffe8:	inc    esp
  41ffe9:	(bad)  
  41ffeb:	sub    al,0x1
  41ffed:	jmp    0x420032
  41ffef:	cwde   
  41fff0:	pop    eax
  41fff1:	lods   al,BYTE PTR ds:[esi]
  41fff2:	push   edx
  41fff3:	push   ebx
  41fff4:	shl    BYTE PTR [ecx+edx*1+0x6861165],1
  41fffb:	shl    BYTE PTR [esp+ebx*1-0x77be6de0],cl
  420002:	inc    BYTE PTR [edi-0x5d]
  420005:	push   eax
  420006:	into   
  420007:	or     edx,esi
  420009:	fwait
  42000a:	adc    al,0xa8
  42000c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42000d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42000e:	mov    dl,0x64
  420010:	ja     0x41ffa7
  420012:	loop   0x420034
  420014:	mov    dl,0xaa
  420016:	cmp    cl,BYTE PTR [edx+0x24]
  420019:	outs   dx,DWORD PTR ds:[esi]
  42001a:	mov    cr7,edx
  42001d:	cmp    edx,DWORD PTR [ebx]
  42001f:	pop    ebp
  420020:	fild   WORD PTR [ebx+0x23]
  420023:	call   0x9b6a9419
  420028:	test   bl,bh
  42002a:	je     0x42000c
  42002c:	fbstp  TBYTE PTR [ebp-0x41]
  42002f:	shl    BYTE PTR [edx-0x10ddc080],cl
  420035:	sub    eax,edi
  420037:	cmp    eax,0x8059958b
  42003c:	dec    eax
  42003d:	ret    0xd74c
  420040:	or     cl,BYTE PTR [edx]
  420042:	push   es
  420043:	ret    
  420044:	push   ss
  420045:	aaa    
  420046:	xchg   esi,eax
  420047:	rol    ebp,cl
  420049:	adc    al,0xa4
  42004b:	jg     0x420084
  42004d:	jmp    0xb923cee0
  420052:	call   0x341e:0x2da2107f
  420059:	xor    eax,0x76650ba
  42005e:	mov    ebp,0x7cd5ce32
  420063:	lea    esp,[eax]
  420065:	mov    al,0x48
  420067:	pop    esi
  420068:	add    DWORD PTR ds:0x5892cb59,eax
  42006e:	stos   BYTE PTR es:[edi],al
  42006f:	jg     0x41fff3
  420071:	or     ebp,DWORD PTR [esi]
  420073:	inc    edx
  420074:	xor    al,0xc8
  420076:	add    al,0x15
  420078:	jle    0x420080
  42007a:	adc    eax,0x40338256
  42007f:	push   edx
  420080:	lock into 
  420082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420083:	pop    edx
  420084:	pop    edi
  420085:	les    esi,FWORD PTR [eax]
  420087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420088:	mov    eax,0x6c12cb88
  42008d:	pop    es
  42008e:	jmp    0x420014
  420090:	xor    DWORD PTR [ebp+0x69],0x61362755
  420097:	in     eax,dx
  420098:	sub    eax,0xd3db6419
  42009d:	inc    ebp
  42009e:	pop    ds
  42009f:	das    
  4200a0:	out    dx,al
  4200a1:	fstp   DWORD PTR [eax+esi*4]
  4200a4:	ja     0x420072
  4200a6:	inc    edx
  4200a7:	mov    cl,0x85
  4200a9:	arpl   WORD PTR [ebx+0x7e],dx
  4200ac:	push   cs
  4200ad:	cmp    ch,al
  4200af:	loope  0x420077
  4200b1:	xchg   ebp,eax
  4200b2:	test   BYTE PTR [esi+0x6e],ah
  4200b5:	cmp    al,0x6b
  4200b7:	add    DWORD PTR [edx],0xf503dad9
  4200bd:	mov    WORD PTR [edx-0x51],cs
  4200c0:	popa   
  4200c1:	cmc    
  4200c2:	inc    ebx
  4200c3:	les    esp,FWORD PTR [edx]
  4200c5:	sub    cl,bh
  4200c7:	retf   0x39e1
  4200ca:	(bad)  [edi]
  4200cc:	sti    
  4200cd:	cmp    eax,0xe0354094
  4200d2:	aam    0x2e
  4200d4:	(bad)  
  4200d5:	jmp    0x420069
  4200d7:	call   0xcd70:0xa7d00d7e
  4200de:	add    ebx,esp
  4200e0:	dec    eax
  4200e1:	outs   dx,BYTE PTR ds:[esi]
  4200e2:	mov    al,ds:0x22c2d4e3
  4200e7:	mov    ebp,0xbd6f2535
  4200ec:	pop    eax
  4200ed:	jl     0x42008f
  4200ef:	in     al,0xf1
  4200f1:	jle    0x4200b3
  4200f3:	ret    
  4200f4:	jne    0x42014a
  4200f6:	imul   eax,edx,0x40
  4200f9:	test   BYTE PTR [ecx+0x4f5a88d5],al
  4200ff:	dec    ecx
  420100:	inc    eax
  420101:	test   ebp,ebx
  420103:	mov    cl,BYTE PTR [edx]
  420105:	mov    ?,WORD PTR [ebx+0x9f1f98d]
  42010b:	mov    ?,edx
  42010d:	ds cmp ah,ch
  420110:	out    0x92,eax
  420112:	iret   
  420113:	mov    ch,0x0
  420115:	sub    esi,DWORD PTR [edi+0x5c]
  420118:	inc    ebp
  420119:	sub    BYTE PTR [ebx+0x68],bl
  42011c:	push   0x2775206b
  420121:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420123:	sub    eax,0x330675f9
  420128:	mov    edx,0xe9a9eefa
  42012d:	call   0x954:0x183639a8
  420134:	inc    esi
  420135:	sub    al,dl
  420137:	inc    ecx
  420138:	inc    edi
  420139:	pushf  
  42013a:	sub    bl,ah
  42013c:	inc    ebp
  42013d:	xchg   ebp,eax
  42013e:	out    0x92,eax
  420140:	outs   dx,DWORD PTR ds:[esi]
  420141:	push   ecx
  420142:	(bad)  
  420143:	cmp    DWORD PTR [edi+edx*4],ebx
  420146:	push   eax
  420147:	mov    BYTE PTR [ecx-0x16f49710],al
  42014d:	in     eax,dx
  42014e:	aas    
  42014f:	mov    ?,esi
  420151:	pop    edi
  420152:	rcl    al,1
  420154:	xchg   edx,eax
  420155:	cmp    BYTE PTR gs:[ebx-0xe496b2c],cl
  42015c:	shl    ebx,0xb
  42015f:	push   cs
  420160:	stos   DWORD PTR es:[edi],eax
  420161:	and    al,0x44
  420163:	pop    es
  420164:	out    0x1b,al
  420166:	jae    0x420196
  420168:	fidivr DWORD PTR [ebx]
  42016a:	fadd   DWORD PTR [ebx]
  42016c:	in     al,dx
  42016d:	test   dh,cl
  42016f:	pushw  cs
  420171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420172:	adc    al,0xef
  420174:	scas   al,BYTE PTR es:[edi]
  420175:	out    0x61,al
  420177:	mov    dl,0x13
  420179:	inc    edx
  42017a:	mov    eax,ds:0xc7e48960
  42017f:	sub    eax,0x9209be66
  420184:	xchg   edi,eax
  420185:	and    edi,DWORD PTR [eax+0x4359b23b]
  42018b:	inc    edx
  42018c:	mov    eax,DWORD PTR [esp+eiz*4]
  42018f:	and    BYTE PTR [eax+0x32b086fc],dl
  420195:	xchg   edi,eax
  420196:	test   BYTE PTR [ecx+0x74],ah
  420199:	jl     0x4201be
  42019b:	out    dx,eax
  42019c:	cwde   
  42019d:	es out 0x2e,eax
  4201a0:	add    DWORD PTR [ebx+0x583a5b2b],esi
  4201a6:	not    DWORD PTR [eax+edx*8-0x4b]
  4201aa:	xor    DWORD PTR [ebp+0x2f3e8056],0xf52b4af3
  4201b4:	dec    eax
  4201b5:	into   
  4201b6:	retf   0x7e39
  4201b9:	push   ebx
  4201ba:	inc    esi
  4201bb:	icebp  
  4201bc:	push   esp
  4201bd:	in     al,0x30
  4201bf:	sub    eax,0xa8b6bb2
  4201c4:	push   edx
  4201c5:	rcr    ebp,1
  4201c7:	jns    0x420201
  4201c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ca:	enter  0x7553,0x1a
  4201ce:	dec    ebp
  4201cf:	scas   al,BYTE PTR es:[edi]
  4201d0:	test   al,0x32
  4201d2:	out    dx,al
  4201d3:	rol    DWORD PTR [edi-0x622b3b2e],cl
  4201d9:	sub    esi,DWORD PTR [edx]
  4201db:	cwde   
  4201dc:	sub    al,0xd
  4201de:	in     al,0x91
  4201e0:	ret    
  4201e1:	aam    0xf5
  4201e3:	pop    eax
  4201e4:	loopne 0x4201cf
  4201e6:	leave  
  4201e7:	repz cmc 
  4201e9:	or     eax,0xc77f0113
  4201ee:	fsub   st(7),st
  4201f0:	lea    eax,[edi+0x77821b49]
  4201f6:	lods   eax,DWORD PTR ds:[esi]
  4201f7:	jl     0x420196
  4201f9:	(bad)  
  4201fa:	pushf  
  4201fb:	daa    
  4201fc:	fdecstp 
  4201fe:	(bad)  
  4201ff:	outs   dx,BYTE PTR ds:[esi]
  420200:	or     BYTE PTR [edx+0x7e],0x49
  420204:	pop    edi
  420205:	stc    
  420206:	sub    eax,0x549c2f69
  42020b:	mov    dl,0x5d
  42020d:	jl     0x4201bf
  42020f:	or     esi,edx
  420211:	push   cs
  420212:	mov    dl,0xd9
  420214:	mov    ah,cl
  420216:	add    dl,BYTE PTR [esi-0x57]
  420219:	ins    BYTE PTR es:[edi],dx
  42021a:	push   es
  42021b:	push   cs
  42021c:	and    eax,0x469d935
  420221:	lock jge 0x420262
  420224:	ins    DWORD PTR es:[edi],dx
  420225:	rcr    DWORD PTR [edi+0x43],1
  420228:	sub    DWORD PTR [edx+0xf4b1e2b],ebx
  42022e:	xchg   edi,eax
  42022f:	or     edi,DWORD PTR [esi-0x517c351d]
  420235:	cdq    
  420236:	xlat   BYTE PTR ds:[ebx]
  420237:	test   eax,0xd1b20da5
  42023c:	mov    eax,0x25b776e6
  420241:	jg     0x42023d
  420243:	dec    esp
  420244:	pushf  
  420245:	push   edx
  420246:	shl    DWORD PTR [ebp-0xa065051],1
  42024c:	mov    ebp,0x31d48b6b
  420251:	div    BYTE PTR [ecx+0x7fbd8847]
  420257:	jae    0x420200
  420259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42025a:	xchg   esp,eax
  42025b:	(bad)
  420260:	fs enter 0xc236,0xf2
  420265:	xor    ebp,ebp
  420267:	aaa    
  420268:	inc    ecx
  420269:	(bad)  
  42026a:	cmc    
  42026b:	push   eax
  42026c:	call   0xc426:0xaca9d2c4
  420273:	pop    fs
  420275:	adc    al,0x69
  420277:	sbb    BYTE PTR [ebp+0x747bb99d],0xfc
  42027e:	(bad)  
  42027f:	cmp    eax,0x34428e1d
  420284:	mov    edi,0xa0a789c4
  420289:	ficom  WORD PTR [esi]
  42028b:	xor    eax,DWORD PTR [ebx]
  42028d:	mov    cl,0x31
  42028f:	or     eax,0x196aa187
  420294:	pushf  
  420295:	das    
  420296:	xor    al,0xd5
  420298:	and    ch,bl
  42029a:	cmc    
  42029b:	ss ret 0x81fb
  42029f:	rcr    BYTE PTR [ebp-0x12],0x54
  4202a3:	mov    ah,0x65
  4202a5:	push   esp
  4202a6:	loope  0x42031e
  4202a8:	add    bl,al
  4202aa:	std    
  4202ab:	inc    BYTE PTR [edx]
  4202ad:	push   cs
  4202ae:	fdiv   QWORD PTR [ebp-0x6a0c1618]
  4202b4:	mov    dl,0xa2
  4202b6:	xchg   ebp,eax
  4202b7:	mov    ds:0x5c1823ae,eax
  4202bc:	pop    ss
  4202bd:	xchg   edx,eax
  4202be:	ret    0xdfb8
  4202c1:	jmp    0x42027b
  4202c3:	push   edi
  4202c4:	jo     0x4202c8
  4202c6:	jl     0x420259
  4202c8:	shl    DWORD PTR ds:0x91a53a82,0x86
  4202cf:	outs   dx,DWORD PTR ds:[esi]
  4202d0:	pop    edx
  4202d1:	dec    esp
  4202d2:	xor    ch,BYTE PTR [esi-0x291843c5]
  4202d8:	or     esi,ebx
  4202da:	sub    DWORD PTR ds:0x7d0d19f7,eax
  4202e0:	mov    esp,0x75e5e650
  4202e5:	fwait
  4202e6:	and    ebp,DWORD PTR [ebx-0x3254be06]
  4202ec:	stos   DWORD PTR es:[edi],eax
  4202ed:	or     ch,BYTE PTR [edi+eiz*8-0x52]
  4202f1:	shl    esp,cl
  4202f3:	cmp    al,0x7
  4202f5:	loop   0x4202da
  4202f7:	nop
  4202f8:	(bad)  
  4202f9:	arpl   ax,bx
  4202fb:	or     ecx,DWORD PTR [ebp+ebp*8-0x3d]
  4202ff:	pop    esp
  420300:	adc    BYTE PTR [ecx],0x25
  420303:	out    0xc9,al
  420305:	adc    al,0xc6
  420307:	push   ecx
  420308:	pop    ebp
  420309:	daa    
  42030a:	(bad)  [eax+0x455cc57f]
  420310:	pop    ecx
  420311:	nop
  420312:	fneni(8087 only) 
  420314:	rep lods eax,DWORD PTR ds:[esi]
  420316:	jmp    0x890deb3a
  42031b:	shr    BYTE PTR [eax-0x53d55f53],0xde
  420322:	dec    eax
  420323:	out    0x4f,eax
  420325:	neg    DWORD PTR [edi+0x34]
  420328:	cs push 0x56
  42032b:	push   es
  42032c:	sbb    eax,0x67e8afc3
  420331:	(bad)  
  420332:	inc    ebp
  420333:	cdq    
  420334:	std    
  420335:	fsubr  DWORD PTR [edi-0x43490333]
  42033b:	push   ebx
  42033c:	mov    ebx,0x9d68e9ef
  420341:	push   edi
  420342:	(bad)  [ecx-0x4c69426f]
  420348:	dec    esp
  420349:	sti    
  42034a:	je     0x42031f
  42034c:	lock mov gs,WORD PTR [esi+0x37]
  420350:	xor    al,0x80
  420352:	(bad)  
  420353:	(bad)  
  420354:	imul   eax,DWORD PTR [esp+esi*8-0x2e],0x7e
  420359:	inc    esp
  42035a:	stos   BYTE PTR es:[edi],al
  42035b:	fs (bad) 
  42035e:	or     cl,0x37
  420361:	cmc    
  420362:	xchg   esp,eax
  420363:	test   eax,0x47dd4317
  420368:	mov    dl,0x29
  42036a:	xchg   ebx,eax
  42036b:	pop    ebx
  42036c:	sbb    eax,DWORD PTR [esi+0xb50aee1]
  420372:	or     al,0x89
  420374:	dec    ebx
  420375:	fidivr DWORD PTR [eax-0x6e]
  420378:	leave  
  420379:	cmp    DWORD PTR [ebp+0x228ca58b],0xa55101b8
  420383:	or     esi,DWORD PTR [ebp-0x7d]
  420386:	xor    BYTE PTR [esi-0x53b98876],dl
  42038c:	push   ebp
  42038d:	adc    dh,dh
  42038f:	arpl   WORD PTR [esi+ebx*8],ax
  420392:	into   
  420393:	push   0xffffffb4
  420395:	retf   
  420396:	aas    
  420397:	dec    esi
  420398:	mov    ecx,0x4f12fdfa
  42039d:	out    dx,eax
  42039e:	repnz test eax,0xb310a797
  4203a4:	ins    BYTE PTR es:[edi],dx
  4203a5:	je     0x4203f7
  4203a7:	push   edx
  4203a8:	xchg   ebx,ebp
  4203aa:	test   BYTE PTR [ebp-0x33cf4006],cl
  4203b0:	outs   dx,BYTE PTR ds:[esi]
  4203b1:	cmp    al,0x2c
  4203b3:	ins    BYTE PTR es:[edi],dx
  4203b4:	pushf  
  4203b5:	cmp    al,0xe5
  4203b7:	pop    ds
  4203b8:	cs pop ebp
  4203ba:	mov    al,BYTE PTR [edx]
  4203bc:	push   eax
  4203bd:	pop    esp
  4203be:	call   0x4d8cffd8
  4203c3:	jecxz  0x4203fc
  4203c5:	and    bl,BYTE PTR [esi]
  4203c7:	imul   edi,DWORD PTR [edx-0x4a],0x1018b19b
  4203ce:	mov    edi,0x4a66dbad
  4203d3:	repnz mov ah,0x8a
  4203d6:	mov    es:0xe9db5eba,eax
  4203dc:	inc    esp
  4203dd:	fild   QWORD PTR ds:[ecx-0x4619c2cf]
  4203e4:	stos   DWORD PTR es:[edi],eax
  4203e5:	add    esp,ecx
  4203e7:	ds call 0x26108ca8
  4203ed:	inc    ebp
  4203ee:	call   0xdac54a5f
  4203f3:	shl    eax,0x9
  4203f6:	xchg   ecx,eax
  4203f7:	cmp    esi,DWORD PTR [ebp-0x3f]
  4203fa:	mov    edi,0x586a7b00
  4203ff:	xchg   BYTE PTR [ebp-0x4c],dh
  420402:	hlt    
  420403:	inc    eax
  420404:	iret   
  420405:	daa    
  420406:	ror    BYTE PTR [edx+ebp*4-0x65],1
  42040a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42040b:	mov    bl,0x63
  42040d:	mov    ebx,0x7bdc7d06
  420412:	(bad)  
  420413:	sbb    dh,BYTE PTR [edi+0x3]
  420416:	call   0x7d16:0x14312d3c
  42041d:	mov    al,ds:0x33109f28
  420422:	aas    
  420423:	sub    BYTE PTR [edx-0x3f],0x35
  420427:	cmc    
  420428:	push   esi
  420429:	ins    DWORD PTR es:[edi],dx
  42042a:	retf   0x3ad6
  42042d:	sbb    al,0xbf
  42042f:	jno    0x420479
  420431:	cmp    DWORD PTR [ecx],ecx
  420433:	push   ds
  420434:	sub    edi,DWORD PTR [edi]
  420436:	fcomp  st(2)
  420438:	xor    al,0x24
  42043a:	nop
  42043b:	cmp    DWORD PTR [edx+0x1c92f862],ebx
  420441:	push   edi
  420442:	jb     0x420405
  420444:	call   0xa3fb:0xdeec6791
  42044b:	call   0xa7a8:0x9a9ae2b9
  420452:	sbb    ecx,DWORD PTR [ecx-0x1b8f5f32]
  420458:	popa   
  420459:	or     ah,dh
  42045b:	les    esi,FWORD PTR [eax-0x62]
  42045e:	and    al,dh
  420460:	rcr    DWORD PTR [esi+0x318f9d6a],1
  420466:	cmp    dl,BYTE PTR [ebx]
  420468:	jns    0x420447
  42046a:	test   eax,0xed4763d6
  42046f:	pop    es
  420470:	std    
  420471:	(bad)  
  420472:	fpatan 
  420474:	pop    esp
  420475:	adc    al,0xec
  420477:	xor    al,0xca
  420479:	ffree  st(1)
  42047b:	lods   eax,DWORD PTR ds:[esi]
  42047c:	xchg   edx,eax
  42047d:	inc    ecx
  42047e:	xor    edx,DWORD PTR [esi+0x3c]
  420481:	pop    ebp
  420482:	xchg   ecx,eax
  420483:	repnz add BYTE PTR [eax],cl
  420486:	(bad)  
  420487:	std    
  420488:	xor    al,0x50
  42048a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42048b:	fidiv  DWORD PTR [eax-0xa]
  42048e:	out    0xc0,eax
  420490:	in     eax,dx
  420491:	retf   
  420492:	(bad)  
  420493:	loopne 0x4204f3
  420495:	out    dx,eax
  420496:	enter  0xae82,0x12
  42049a:	sub    ebx,edx
  42049c:	iret   
  42049d:	retf   
  42049e:	jle    0x420439
  4204a0:	fadd   DWORD PTR [eax+edi*2-0x5d]
  4204a4:	or     ah,cl
  4204a6:	cmp    DWORD PTR [ebp-0x1b],edx
  4204a9:	add    BYTE PTR [eax-0x727bca13],bh
  4204af:	clc    
  4204b0:	adc    al,0x5f
  4204b2:	or     al,0x51
  4204b4:	fbld   TBYTE PTR [ebp-0x19759b2]
  4204ba:	jne    0x42048d
  4204bc:	xor    eax,edi
  4204be:	cmp    eax,0x97773a94
  4204c3:	jae    0x4204d2
  4204c5:	push   eax
  4204c6:	out    dx,al
  4204c7:	xchg   esp,eax
  4204c8:	repz inc di
  4204cb:	in     al,0x6c
  4204cd:	xchg   ecx,ebx
  4204cf:	jle    0x420454
  4204d1:	cs jne 0x42050c
  4204d4:	cmp    al,BYTE PTR [ecx+0x45]
  4204d7:	and    DWORD PTR [eax],ebp
  4204d9:	and    DWORD PTR [ecx+0x2099c1d9],0x6fe8e3af
  4204e3:	or     dl,BYTE PTR [edi-0x6f7b916c]
  4204e9:	not    DWORD PTR [esi+eax*8]
  4204ec:	stos   DWORD PTR es:[edi],eax
  4204ed:	enter  0x5c90,0x80
  4204f1:	shl    BYTE PTR [esi-0x3bb99004],1
  4204f7:	sti    
  4204f8:	pop    es
  4204f9:	sahf   
  4204fa:	outs   dx,DWORD PTR ds:[esi]
  4204fb:	lods   al,BYTE PTR ds:[esi]
  4204fc:	add    al,0xc8
  4204fe:	mov    bh,0x38
  420500:	push   ds
  420501:	jge    0x420582
  420503:	push   esi
  420504:	mov    al,0x5e
  420506:	sbb    DWORD PTR [edx],0x5b
  420509:	das    
  42050a:	lods   eax,DWORD PTR ds:[esi]
  42050b:	push   ecx
  42050c:	shl    esi,cl
  42050e:	pop    ecx
  42050f:	outs   dx,DWORD PTR ds:[esi]
  420510:	pop    edi
  420511:	mov    ebx,0x44ed52dc
  420516:	stos   BYTE PTR es:[edi],al
  420517:	sub    al,0xae
  420519:	sub    BYTE PTR [ebp+0x1e],cl
  42051c:	adc    BYTE PTR [ecx+0x62],cl
  42051f:	stos   DWORD PTR es:[edi],eax
  420520:	scas   eax,DWORD PTR es:[edi]
  420521:	test   eax,0x42697872
  420526:	popa   
  420527:	mov    eax,0xd39774f1
  42052c:	call   0x707b:0xa6344c02
  420533:	xchg   esp,eax
  420534:	add    cl,BYTE PTR [edx-0x36]
  420537:	or     cl,BYTE PTR [ecx+0x21]
  42053a:	sar    BYTE PTR [esp+ebx*1-0x4d],1
  42053e:	shr    BYTE PTR [ebx],1
  420540:	dec    edx
  420541:	sbb    esp,esi
  420543:	comiss xmm4,DWORD PTR [ecx]
  420546:	inc    edx
  420547:	or     DWORD PTR [edi],0xcb7a5a75
  42054d:	arpl   di,sp
  42054f:	inc    ebp
  420550:	cmp    eax,0xa758a39b
  420555:	mov    DWORD PTR [eax-0x61],ebx
  420558:	mov    ss,ebp
  42055a:	test   DWORD PTR [ebp-0x2433c1a6],ebp
  420560:	test   DWORD PTR [edi],ebx
  420562:	ret    0xc75b
  420565:	jo     0x4205c9
  420567:	sbb    al,0x22
  420569:	sub    BYTE PTR [ebx+0x2ea30cc8],ah
  42056f:	in     al,0x39
  420571:	aam    0x89
  420573:	ds jnp 0x420530
  420576:	inc    esp
  420577:	push   esi
  420578:	sar    dh,0x1d
  42057b:	bnd ret 
  42057d:	mov    DWORD PTR [eax+0x49],ebx
  420580:	jo     0x420511
  420582:	mov    dh,0x46
  420584:	or     esi,DWORD PTR [eax-0xa]
  420587:	mov    ebx,0xeaac4773
  42058c:	int3   
  42058d:	retf   
  42058e:	pop    ebp
  42058f:	jb     0x420582
  420591:	add    ecx,ebx
  420593:	sub    esp,edi
  420595:	xor    dl,bh
  420597:	hlt    
  420598:	les    ebp,FWORD PTR ds:0xda199cbb
  42059e:	pop    es
  42059f:	fistp  DWORD PTR [ebp+0x71]
  4205a2:	push   esp
  4205a3:	ss inc DWORD PTR cs:[ebx]
  4205a7:	outs   dx,BYTE PTR ds:[esi]
  4205a8:	fadd   st,st(4)
  4205aa:	das    
  4205ab:	aaa    
  4205ac:	adc    al,0x9d
  4205ae:	hlt    
  4205af:	inc    edx
  4205b0:	bsf    esp,DWORD PTR [eax-0x13]
  4205b4:	mov    ebx,0x2475c60a
  4205b9:	jl     0x4205c4
  4205bb:	(bad)  
  4205bd:	jbe    0x420583
  4205bf:	push   edx
  4205c0:	cmp    eax,DWORD PTR [eax+ebx*8-0x32]
  4205c4:	sti    
  4205c5:	loopne 0x4205e4
  4205c7:	ins    BYTE PTR es:[edi],dx
  4205c8:	(bad)  
  4205ca:	stos   BYTE PTR es:[edi],al
  4205cb:	out    0x11,al
  4205cd:	pop    esp
  4205ce:	add    al,0x71
  4205d0:	inc    esp
  4205d1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4205d3:	enter  0x753f,0x3c
  4205d7:	popf   
  4205d8:	ins    BYTE PTR es:[edi],dx
  4205d9:	lds    esi,FWORD PTR [esi+0x6fc65a47]
  4205df:	pop    esi
  4205e0:	stos   BYTE PTR es:[edi],al
  4205e1:	push   ebx
  4205e2:	mov    ds:0xd390c9db,al
  4205e7:	imul   ecx,DWORD PTR [ebp-0x36773f7a],0x35a215c2
  4205f1:	adc    bh,BYTE PTR [esi]
  4205f3:	sar    DWORD PTR [edi+0x3e841718],0x89
  4205fa:	std    
  4205fb:	lahf   
  4205fc:	or     al,0xc4
  4205fe:	xor    eax,DWORD PTR [edx-0x6]
  420601:	inc    esp
  420602:	retf   
  420603:	not    DWORD PTR [ebp+ecx*8+0x50ba6222]
  42060a:	mov    esp,0x21a6e0a6
  42060f:	jecxz  0x4205a1
  420611:	and    BYTE PTR [ebp-0x780a4714],ch
  420617:	sbb    ch,BYTE PTR [edx-0x3e7f4eaf]
  42061d:	mov    cl,0xf9
  42061f:	cmc    
  420620:	inc    edx
  420621:	(bad)  
  420622:	jl     0x420610
  420624:	push   esp
  420625:	shl    dh,cl
  420627:	mov    DWORD PTR [ebp+edx*2-0x24],ebx
  42062b:	in     eax,0x6c
  42062d:	xchg   cl,cl
  42062f:	push   0x81d0bcff
  420634:	pop    ss
  420635:	mov    WORD PTR ds:0x28507e73,ss
  42063b:	fisub  WORD PTR [edx-0x77d40258]
  420641:	sub    dl,BYTE PTR [edx+0x63]
  420644:	lea    edi,[ebx]
  420646:	mov    eax,ds:0x528f1061
  42064b:	adc    bh,BYTE PTR [edi+0x4d4ef87f]
  420651:	sar    BYTE PTR [eax-0xdcfa4b2],1
  420657:	pop    ebx
  420658:	and    BYTE PTR [ebp+eax*8-0x3b],bl
  42065c:	jmp    0xe5860a79
  420661:	push   ebx
  420662:	mov    al,ds:0xf2cdf4da
  420667:	cmc    
  420668:	jmp    0x420683
  42066a:	mov    ecx,0x6fb5df88
  42066f:	popa   
  420670:	mov    ecx,es
  420672:	mov    cs,WORD PTR [edx-0x46]
  420675:	and    bh,cl
  420677:	into   
  420678:	sub    eax,0x60b6234c
  42067d:	cmp    DWORD PTR [ebp+0x72eb3654],edx
  420683:	popa   
  420684:	dec    ebx
  420685:	daa    
  420686:	leave  
  420687:	lods   eax,DWORD PTR ds:[esi]
  420688:	dec    eax
  420689:	test   BYTE PTR [edi-0x43f37821],bh
  42068f:	xchg   ecx,eax
  420690:	pop    ds
  420691:	xlat   BYTE PTR ds:[ebx]
  420692:	(bad)  
  420693:	in     al,0x24
  420695:	sub    bl,BYTE PTR [ebp+ebp*8-0x28666bb3]
  42069c:	in     eax,dx
  42069d:	xor    eax,0xe32a41c4
  4206a2:	inc    BYTE PTR [ecx+0x77]
  4206a5:	sub    eax,0x939f7553
  4206aa:	loopne 0x42067a
  4206ac:	sub    eax,0xf2b8344f
  4206b1:	aam    0xd8
  4206b3:	jle    0x4206d2
  4206b5:	fldenv ds:0xeace3e50
  4206bb:	mov    ah,0xb
  4206bd:	push   cs
  4206be:	sub    DWORD PTR [edx-0x41],ebx
  4206c1:	xor    dh,al
  4206c3:	ins    DWORD PTR es:[edi],dx
  4206c4:	xor    ch,bl
  4206c6:	aaa    
  4206c7:	mov    ds:0x28157eb4,al
  4206cc:	jmp    DWORD PTR ds:0x22767742
  4206d2:	mov    dl,0xa8
  4206d4:	dec    eax
  4206d5:	pushf  
  4206d6:	jp     0x4206e5
  4206d8:	mov    bl,0xe4
  4206da:	inc    edx
  4206db:	stc    
  4206dc:	push   ebp
  4206dd:	jae    0x4206ae
  4206df:	adc    eax,0xa6c51d22
  4206e4:	popf   
  4206e5:	gs jle 0x4206a8
  4206e8:	add    al,dh
  4206ea:	mov    eax,ds:0xa3ffd451
  4206ef:	cmp    DWORD PTR [esi+edx*8+0x3339780b],0x8ddc59e0
  4206fa:	cmp    DWORD PTR [esi+eax*4+0x6f5718a7],0x8d993464
  420705:	popa   
  420706:	xor    DWORD PTR [eax],esp
  420708:	jbe    0x420714
  42070a:	out    0x4,eax
  42070c:	mov    al,0x50
  42070e:	into   
  42070f:	ja     0x420743
  420711:	outs   dx,BYTE PTR ds:[esi]
  420712:	sbb    eax,0x55db1bdf
  420717:	jl     0x420759
  420719:	jnp    0x420781
  42071b:	cs xchg bh,al
  42071e:	iret   
  42071f:	inc    ebp
  420720:	xchg   BYTE PTR [edx-0x69],ah
  420723:	cmovp  ecx,edi
  420726:	pop    ebp
  420727:	xor    DWORD PTR [ebp+esi*2-0x7dd32085],ecx
  42072e:	cmp    DWORD PTR [edx],esp
  420730:	fidivr WORD PTR [edi-0x65]
  420733:	or     bh,BYTE PTR [ebp-0x25b3e528]
  420739:	out    0xa5,eax
  42073b:	mov    bh,0x2d
  42073d:	jecxz  0x4207a6
  42073f:	adc    ecx,esp
  420741:	cli    
  420742:	dec    ebp
  420743:	cmp    dh,BYTE PTR cs:[ecx+eax*8-0xd]
  420748:	jno    0x42077b
  42074a:	adc    al,0xd
  42074c:	shr    DWORD PTR [edx+eax*2],0x62
  420750:	inc    ebp
  420751:	out    0xe3,al
  420753:	fwait
  420754:	lods   al,BYTE PTR ds:[esi]
  420755:	sub    eax,0x1e717a22
  42075a:	icebp  
  42075b:	inc    edi
  42075c:	out    dx,eax
  42075d:	inc    eax
  42075e:	fistp  QWORD PTR [eax-0x38]
  420761:	arpl   WORD PTR [ebx-0x25683285],dx
  420767:	jb     0x4206fa
  420769:	add    eax,0x2a7e215
  42076e:	sub    BYTE PTR [ebx+0x73fc5f0f],bh
  420774:	cmp    ebp,DWORD PTR [ecx+0x38]
  420777:	mov    bl,0x7b
  420779:	neg    BYTE PTR [eax+0x70984976]
  42077f:	mov    eax,ebp
  420781:	fs aaa 
  420783:	jmp    0xd738:0x1a7bb403
  42078a:	ror    BYTE PTR [ecx+esi*8+0x72],1
  42078e:	inc    edx
  42078f:	inc    eax
  420790:	mov    dl,0xd
  420792:	hlt    
  420793:	ret    
  420794:	pop    edx
  420795:	add    al,0xe9
  420797:	xchg   DWORD PTR [eax-0x4187f7d4],eax
  42079d:	jne    0x4207de
  42079f:	add    eax,0x4608ae39
  4207a4:	in     eax,dx
  4207a5:	rcl    BYTE PTR [esi],0x4f
  4207a8:	lds    edx,FWORD PTR [eax]
  4207aa:	popa   
  4207ab:	push   ds
  4207ac:	push   0xda7d46bc
  4207b1:	add    al,0xb1
  4207b3:	jo     0x420789
  4207b5:	cmp    BYTE PTR [esi+0x52],0x5f
  4207b9:	jge    0x4207a0
  4207bb:	xchg   edi,eax
  4207bc:	imul   eax,DWORD PTR [ebp+0x9],0x3
  4207c0:	mov    ecx,0xadf71ec4
  4207c5:	and    esi,ebx
  4207c7:	cs mov esi,0xebf0c449
  4207cd:	push   cs
  4207ce:	mov    bl,0x2b
  4207d0:	retf   
  4207d1:	in     eax,dx
  4207d2:	xor    al,BYTE PTR [eax]
  4207d4:	push   edx
  4207d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d6:	or     esp,DWORD PTR [eax+0x315770ae]
  4207dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207dd:	out    0x3d,al
  4207df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207e0:	sub    DWORD PTR [esi+0x28869125],ecx
  4207e6:	jmp    0xd788:0xc56311b1
  4207ed:	pop    esi
  4207ee:	mov    dh,0x46
  4207f0:	fs loopne 0x4207f7
  4207f3:	mov    ch,0x9e
  4207f5:	pop    ebp
  4207f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207f7:	repnz xchg bh,bl
  4207fa:	fbld   TBYTE PTR [ebp+0x5b0b96ad]
  420800:	test   DWORD PTR [ebp-0x4],edx
  420803:	pop    es
  420804:	push   0x2
  420806:	sbb    ebp,ebp
  420808:	dec    edi
  420809:	dec    esp
  42080a:	sti    
  42080b:	or     BYTE PTR [ecx],al
  42080d:	or     BYTE PTR [ebp+0x78],0x2b
  420811:	pushf  
  420812:	inc    edx
  420813:	(bad)  
  420814:	hlt    
  420815:	aaa    
  420816:	arpl   WORD PTR [edi+0x37],bp
  420819:	pop    eax
  42081a:	mov    ebx,0x19d890e6
  42081f:	and    eax,0x304d7f41
  420824:	mov    dh,al
  420826:	ud1    ebp,DWORD PTR [ecx-0x51fbfda0]
  42082d:	inc    eax
  42082e:	(bad)  
  420830:	jo     0x42085b
  420832:	add    cl,BYTE PTR [ebx-0x7c38dee1]
  420838:	dec    esp
  420839:	scas   al,BYTE PTR es:[edi]
  42083a:	in     al,0x4d
  42083c:	aam    0xc9
  42083e:	xchg   edi,eax
  42083f:	retf   
  420840:	pop    ss
  420841:	sbb    eax,0x610eea68
  420846:	call   0x9983cdc5
  42084b:	add    DWORD PTR [edx+0x34],ecx
  42084e:	pop    ds
  42084f:	sahf   
  420850:	adc    BYTE PTR [edi+0x4d],bh
  420853:	dec    edx
  420854:	ret    
  420855:	out    0x11,eax
  420857:	int3   
  420858:	add    eax,0x2a4f03b3
  42085d:	inc    ebx
  42085e:	shl    BYTE PTR [edx-0x30684350],cl
  420864:	push   0xf9173d7d
  420869:	sahf   
  42086a:	lea    esp,[edi+0x38]
  42086d:	jo     0x42088e
  42086f:	xchg   BYTE PTR [eax-0x2686fea6],cl
  420875:	loop   0x420823
  420877:	call   0xcf17:0xf1b3b736
  42087e:	xor    esp,ebp
  420880:	jp     0x42089f
  420882:	jl     0x4208c2
  420884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420885:	push   0xcb4b9634
  42088a:	cmp    eax,DWORD PTR [ebp-0x4a1af7f4]
  420890:	jbe    0x42089d
  420892:	sub    bh,ah
  420894:	int3   
  420895:	es aas 
  420897:	test   dl,ah
  420899:	fnstsw WORD PTR [ecx+ebx*4-0x5ab275eb]
  4208a0:	ret    0x4912
  4208a3:	fisttp DWORD PTR [esp+ebx*2+0x6a]
  4208a7:	sub    BYTE PTR [ecx+0x7f],cl
  4208aa:	push   ebx
  4208ab:	jmp    0x7520:0x773a2f51
  4208b2:	cmp    BYTE PTR [eax],dh
  4208b4:	xchg   esi,edi
  4208b6:	loop   0x420917
  4208b8:	out    dx,al
  4208b9:	push   es
  4208ba:	pop    eax
  4208bb:	aas    
  4208bc:	or     DWORD PTR [edx],0xc6509827
  4208c2:	add    edx,0xdc627b6f
  4208c8:	mov    edx,0x4d14be7b
  4208cd:	xchg   ebx,eax
  4208ce:	shl    BYTE PTR [ebp+0x5d2cb9f8],cl
  4208d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208d5:	ss pop ebp
  4208d7:	jae    0x420916
  4208d9:	mov    edi,0x78acb425
  4208de:	inc    ebp
  4208df:	push   edx
  4208e0:	jecxz  0x420874
  4208e2:	dec    eax
  4208e3:	lods   al,BYTE PTR ds:[esi]
  4208e4:	jl     0x420936
  4208e6:	xchg   ebp,eax
  4208e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208e8:	dec    eax
  4208e9:	or     DWORD PTR [edi-0x13],edi
  4208ec:	jo     0x42089a
  4208ee:	lock mov ebx,0x33af7283
  4208f4:	clc    
  4208f5:	xchg   edx,eax
  4208f6:	xchg   ebp,eax
  4208f7:	into   
  4208f8:	data16 std 
  4208fa:	outs   dx,BYTE PTR ds:[esi]
  4208fb:	push   cs
  4208fc:	shr    DWORD PTR [eax+0x0],1
  4208ff:	pop    ebp
  420900:	pushf  
  420901:	cmp    eax,0xfc51a383
  420906:	imul   eax,ebp,0x19
  420909:	adc    DWORD PTR [ecx],0x13
  42090c:	mov    ch,0x3a
  42090e:	inc    BYTE PTR [edx+0x2d39efed]
  420914:	jmp    0x8a92:0x3f642888
  42091b:	aaa    
  42091c:	imul   esp,DWORD PTR [esi],0xffffff89
  42091f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420920:	out    0xd6,al
  420922:	popa   
  420923:	pop    esi
  420924:	push   0xef54be20
  420929:	inc    eax
  42092a:	pusha  
  42092b:	ret    
  42092c:	cwde   
  42092d:	iret   
  42092e:	ret    
  42092f:	repnz push es
  420931:	mov    ebp,0x6081abcb
  420936:	leave  
  420937:	stos   BYTE PTR es:[edi],al
  420938:	dec    esp
  420939:	jge    0x420911
  42093b:	mov    al,0xdc
  42093d:	ss push esp
  42093f:	sbb    bh,cl
  420941:	mov    edi,0x334eda73
  420946:	leave  
  420947:	sbb    edi,ecx
  420949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42094a:	mov    ebx,0x3bbb6a2b
  42094f:	ret    
  420950:	std    
  420951:	(bad)  
  420953:	dec    eax
  420954:	xor    al,0xcc
  420956:	fsub   DWORD PTR [ecx]
  420958:	or     cl,BYTE PTR [ebp-0x35]
  42095b:	or     al,0x28
  42095d:	inc    esp
  42095e:	mov    bl,0x2a
  420960:	sahf   
  420961:	adc    ebx,edi
  420963:	fwait
  420964:	imul   esi,edx,0x7a
  420967:	sbb    bl,BYTE PTR [edi]
  420969:	or     eax,0xfe6e1285
  42096e:	or     al,0x18
  420970:	dec    eax
  420971:	mov    bh,0x7c
  420973:	add    eax,0xcb7e4904
  420978:	fmulp  st(1),st
  42097a:	adc    esp,edi
  42097c:	cld    
  42097d:	not    DWORD PTR [esp+edi*1]
  420980:	xchg   BYTE PTR [edx-0x45e005e0],cl
  420986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420987:	mov    cl,0xd5
  420989:	cmp    BYTE PTR [ecx+edi*4+0x71],ah
  42098d:	test   BYTE PTR [edx+0x15],cl
  420990:	or     bl,BYTE PTR [ebp+0x36533e3]
  420996:	fisubr DWORD PTR [esi-0x1]
  420999:	or     eax,0x432511f
  42099e:	retf   0x9f86
  4209a1:	sub    dl,BYTE PTR [ebx+0x40]
  4209a4:	push   ebp
  4209a5:	aaa    
  4209a6:	lock mov ebx,0x43253159
  4209ac:	xor    dh,BYTE PTR [edi-0x4c]
  4209af:	jge    0x420a06
  4209b1:	iret   
  4209b2:	pop    es
  4209b3:	sbb    bl,BYTE PTR [ecx-0x6c]
  4209b6:	sub    dl,BYTE PTR [edx+0x7c3627cb]
  4209bc:	test   BYTE PTR [ecx],dl
  4209be:	outs   dx,BYTE PTR ds:[esi]
  4209bf:	mov    esi,0x8926dcea
  4209c4:	dec    edi
  4209c5:	xor    ebx,DWORD PTR [ebp-0x31128859]
  4209cb:	test   bh,0x82
  4209ce:	push   es
  4209cf:	pushf  
  4209d0:	cmc    
  4209d1:	push   esp
  4209d2:	sahf   
  4209d3:	jecxz  0x4209e8
  4209d5:	add    al,0xe3
  4209d7:	test   BYTE PTR [edx+0x7f],0xae
  4209db:	push   ds
  4209dc:	retf   
  4209dd:	adc    esp,edi
  4209df:	test   eax,0x7793fc24
  4209e4:	jae    0x420a5d
  4209e6:	fidivr WORD PTR ds:0x5bb91cfa
  4209ec:	adc    bl,dh
  4209ee:	xchg   BYTE PTR [esi-0x5d85217e],bh
  4209f4:	jl     0x4209af
  4209f6:	mov    cl,0x34
  4209f8:	xor    BYTE PTR [edx+esi*4],cl
  4209fb:	xor    al,0x98
  4209fd:	test   eax,0x1e20fc68
  420a02:	push   ds
  420a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a04:	inc    ebx
  420a05:	xchg   esi,eax
  420a06:	xor    BYTE PTR [eax-0x29],ch
  420a09:	mov    eax,ds:0xd783baf6
  420a0e:	jge    0x420a52
  420a10:	lods   al,BYTE PTR ds:[esi]
  420a11:	adc    cl,BYTE PTR [edx]
  420a13:	ins    DWORD PTR es:[edi],dx
  420a14:	js     0x420a8a
  420a16:	xchg   esp,eax
  420a17:	out    0xfb,eax
  420a19:	pop    edx
  420a1a:	xchg   esi,eax
  420a1b:	ja     0x420a00
  420a1d:	mov    ecx,0x192c305a
  420a22:	jge    0x4209a9
  420a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a25:	add    esp,DWORD PTR [ecx]
  420a27:	cmp    eax,0xfcf9e15c
  420a2c:	into   
  420a2d:	scas   al,BYTE PTR es:[edi]
  420a2e:	jp     0x4209b5
  420a30:	fbld   TBYTE PTR [edx+eax*4]
  420a33:	call   0x62c1:0x87463f43
  420a3a:	dec    edx
  420a3b:	js     0x4209e0
  420a3d:	rep stos DWORD PTR es:[edi],eax
  420a3f:	rol    DWORD PTR [esi],1
  420a41:	lahf   
  420a42:	(bad)  
  420a43:	and    eax,0xfd3d33dd
  420a48:	and    DWORD PTR [edx],0xffffffa0
  420a4b:	adc    dl,cl
  420a4d:	repz leave 
  420a4f:	xchg   DWORD PTR [ebx-0x77],esi
  420a52:	sbb    eax,0x4bad25fd
  420a57:	and    eax,0xc06510dd
  420a5c:	jns    0x420ad0
  420a5e:	ret    
  420a5f:	out    0x92,al
  420a61:	jno    0x420a98
  420a63:	inc    ebx
  420a64:	(bad)  
  420a65:	mov    ebp,0x64f4d33b
  420a6a:	mov    edi,0x440e24bd
  420a6f:	and    al,0x11
  420a71:	pop    ss
  420a72:	and    al,0x13
  420a74:	jae    0x420adc
  420a76:	lods   eax,DWORD PTR ds:[esi]
  420a77:	ror    DWORD PTR [edx+ebp*8-0x41],0x1d
  420a7c:	test   eax,0x389053b4
  420a81:	dec    ebp
  420a82:	enter  0xb827,0x8a
  420a86:	add    ebp,DWORD PTR [eax+0x25574557]
  420a8c:	scas   eax,DWORD PTR es:[edi]
  420a8d:	mov    dl,0x6c
  420a8f:	mov    ebx,0x7f3a5cd0
  420a94:	sub    dh,BYTE PTR [esi]
  420a96:	pop    ebx
  420a97:	pop    eax
  420a98:	test   BYTE PTR [ebp+0x4f5e43ed],ch
  420a9e:	pop    ebx
  420a9f:	gs push es
  420aa1:	jno    0x420aa6
  420aa3:	fwait
  420aa4:	and    al,0x29
  420aa6:	out    dx,eax
  420aa7:	adc    BYTE PTR [ebp-0x716f5f4e],0xbb
  420aae:	sbb    al,0x35
  420ab0:	inc    eax
  420ab1:	mov    ?,WORD PTR [ebx]
  420ab3:	mov    ebp,es
  420ab5:	mov    edi,0x3ae0f51f
  420aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420abb:	jbe    0x420b35
  420abd:	nop
  420abe:	inc    esp
  420abf:	sti    
  420ac0:	fst    DWORD PTR [edi]
  420ac2:	arpl   sp,dx
  420ac4:	(bad)  
  420ac5:	outs   dx,DWORD PTR ds:[esi]
  420ac6:	jo     0x420a8a
  420ac8:	push   ebx
  420ac9:	stos   BYTE PTR es:[edi],al
  420aca:	in     eax,dx
  420acb:	cmp    eax,0xdff5f5bc
  420ad0:	pop    edx
  420ad1:	add    ebp,esi
  420ad3:	bound  eax,QWORD PTR [esi-0x408a5fe1]
  420ad9:	repnz and edi,ecx
  420adc:	js     0x420b0b
  420ade:	jbe    0x420b27
  420ae0:	jns    0x420b11
  420ae2:	sub    BYTE PTR [ecx+0x15b61c72],0x4f
  420ae9:	(bad)  
  420aea:	and    eax,0xdd2ff07a
  420aef:	cmp    al,0xaa
  420af1:	sbb    dh,BYTE PTR [eax-0x60]
  420af4:	in     al,dx
  420af5:	inc    edi
  420af6:	mov    esi,0x3a7921b5
  420afb:	jg     0x420b6f
  420afd:	ins    DWORD PTR es:[edi],dx
  420afe:	popa   
  420aff:	lds    esi,FWORD PTR [edi]
  420b01:	jo     0x420ac0
  420b03:	test   BYTE PTR [eax-0x54],dh
  420b06:	dec    ebx
  420b07:	jno    0x420af7
  420b09:	js     0x420ae7
  420b0b:	mov    ebx,esi
  420b0d:	jmp    0xbb2f857
  420b12:	cmp    dh,BYTE PTR [esi+ebx*1+0x3f9c2812]
  420b19:	push   0x61
  420b1b:	sub    BYTE PTR [edi-0x13],bh
  420b1e:	in     al,dx
  420b1f:	mov    al,0x41
  420b21:	xchg   edx,eax
  420b22:	sub    dh,BYTE PTR [ebx-0x2a]
  420b25:	fst    DWORD PTR [ecx+ebx*8+0x2f]
  420b29:	jbe    0x420b89
  420b2b:	xor    BYTE PTR [eax-0x6e],cl
  420b2e:	fistp  QWORD PTR [edx+0x418224c5]
  420b34:	ss sbb eax,ebp
  420b37:	in     al,dx
  420b38:	xchg   esp,eax
  420b39:	adc    al,0xf
  420b3b:	xor    BYTE PTR cs:[eax+0x65],bl
  420b3f:	dec    ebx
  420b40:	nop
  420b41:	push   ebx
  420b42:	pop    ebx
  420b43:	stc    
  420b44:	ins    DWORD PTR es:[edi],dx
  420b45:	mov    ebx,0xafce042b
  420b4a:	jecxz  0x420b70
  420b4c:	mov    eax,ds:0x62c8ee08
  420b51:	pop    esi
  420b52:	and    ebx,DWORD PTR [edx]
  420b54:	sbb    eax,0xcb4f3c6f
  420b59:	sbb    DWORD PTR [edi+0x3c26c6e3],ebx
  420b5f:	jle    0x420af5
  420b61:	(bad)  
  420b62:	jg     0x420b61
  420b64:	mov    cl,0x84
  420b66:	or     DWORD PTR [edi-0x55],eax
  420b69:	xchg   BYTE PTR [eax-0x6981afa0],bl
  420b6f:	fwait
  420b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b71:	push   esp
  420b72:	out    0x4a,al
  420b74:	and    BYTE PTR [edi-0x55f9c50e],dh
  420b7a:	test   esi,edi
  420b7c:	icebp  
  420b7d:	xor    DWORD PTR [ecx],esp
  420b7f:	js     0x420b43
  420b81:	sbb    al,0x57
  420b83:	not    BYTE PTR [edx+0x77]
  420b86:	ins    BYTE PTR es:[edi],dx
  420b87:	(bad)  
  420b88:	(bad)  
  420b8a:	xor    eax,0xc71e5974
  420b8f:	jo     0x420ba8
  420b91:	add    eax,0x533f257a
  420b96:	mov    bh,BYTE PTR [edi]
  420b98:	loope  0x420b8e
  420b9a:	jae    0x420b45
  420b9c:	adc    al,0x36
  420b9e:	add    al,0xe7
  420ba0:	jb     0x420b95
  420ba2:	out    dx,eax
  420ba3:	stc    
  420ba4:	inc    esp
  420ba5:	xchg   ebp,eax
  420ba6:	sahf   
  420ba7:	popa   
  420ba8:	in     al,0xdc
  420baa:	pop    edx
  420bab:	and    esi,ebp
  420bad:	cdq    
  420bae:	sbb    DWORD PTR [ebx],0xd25f61fe
  420bb4:	xchg   esi,eax
  420bb5:	rcr    BYTE PTR [edi+0x30],1
  420bb8:	add    eax,0xbf3c48cd
  420bbd:	sub    ebp,DWORD PTR [ecx]
  420bbf:	test   eax,0x96387724
  420bc4:	sbb    DWORD PTR [edx],ebx
  420bc6:	(bad)  
  420bc7:	jne    0x420c43
  420bc9:	test   al,0xe5
  420bcb:	or     BYTE PTR ds:0xdec7001d,ch
  420bd1:	loope  0x420bce
  420bd3:	mov    BYTE PTR [ebx],bh
  420bd5:	bound  esp,QWORD PTR [ebp-0x62]
  420bd8:	and    al,0x86
  420bda:	jo     0x420c49
  420bdc:	sti    
  420bdd:	mov    bl,0x5a
  420bdf:	je     0x420b8d
  420be1:	js     0x420b96
  420be3:	push   ebx
  420be4:	je     0x420beb
  420be6:	or     eax,0x5566f6
  420beb:	mov    al,0xab
  420bed:	fwait
  420bee:	aaa    
  420bef:	sbb    esp,edi
  420bf1:	ja     0x420c2f
  420bf3:	out    0x42,eax
  420bf5:	adc    esi,eax
  420bf7:	(bad)  
  420bf8:	loope  0x420bfc
  420bfa:	mov    esp,DWORD PTR [ebx+0x46]
  420bfd:	cld    
  420bfe:	xchg   edi,eax
  420bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c00:	mov    dh,0x6b
  420c02:	cmp    DWORD PTR [eax-0xf034f5b],esi
  420c08:	inc    edi
  420c09:	xchg   DWORD PTR [ecx+0x431fa49c],edi
  420c0f:	mov    cl,0x8b
  420c11:	fstp   DWORD PTR [ecx+ebp*2]
  420c14:	mov    bl,0xf4
  420c16:	fisubr DWORD PTR ds:0xf974e344
  420c1c:	mov    al,ds:0xcc77e196
  420c21:	ds sub eax,0xbb8bfcdc
  420c27:	aas    
  420c28:	sub    BYTE PTR [ebx+0x4eb28530],ch
  420c2e:	push   ss
  420c2f:	jle    0x420c02
  420c31:	div    DWORD PTR [edi]
  420c33:	aas    
  420c34:	daa    
  420c35:	xor    DWORD PTR [ebp-0x4cb609ae],edx
  420c3b:	ins    BYTE PTR es:[edi],dx
  420c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c3d:	popf   
  420c3e:	adc    eax,0xae38d303
  420c43:	test   eax,0xc274d37a
  420c48:	mov    WORD PTR [eax+0x58c1cb0d],ss
  420c4e:	push   ss
  420c4f:	imul   ecx,DWORD PTR [edx-0x6b],0x83154722
  420c56:	cld    
  420c57:	pop    esp
  420c58:	pushf  
  420c59:	sti    
  420c5a:	popa   
  420c5b:	jp     0x420c5b
  420c5d:	out    0xe7,eax
  420c5f:	jnp    0x420ccc
  420c61:	fidiv  WORD PTR [eax]
  420c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c64:	xchg   DWORD PTR [eax+0x0],edx
  420c67:	xchg   eax,ebp
  420c69:	jnp    0x420c45
  420c6b:	fld    st(6)
  420c6d:	fcom   st(5)
  420c6f:	mov    bl,0x39
  420c71:	cmp    bl,BYTE PTR [ebx+0x13]
  420c74:	add    ecx,DWORD PTR [ecx]
  420c76:	sub    ah,BYTE PTR [edx]
  420c78:	mov    ah,0x30
  420c7a:	int    0x3
  420c7c:	add    DWORD PTR [edx+0x208d027d],0x5ca0e08e
  420c86:	push   ss
  420c87:	cmp    ch,BYTE PTR [eax+0x70]
  420c8a:	adc    ebp,DWORD PTR [eax+eax*8-0x77]
  420c8e:	sub    BYTE PTR [ecx-0x21],0x5f
  420c92:	hlt    
  420c93:	(bad)  
  420c94:	pop    edi
  420c95:	and    BYTE PTR gs:[ebx-0x7b0cf8e7],cl
  420c9c:	mov    edx,0xfce02ff3
  420ca1:	xor    ecx,DWORD PTR ds:0x155419f9
  420ca7:	or     BYTE PTR [esi],dl
  420ca9:	(bad)  
  420caa:	js     0x420c2d
  420cac:	jo     0x420c4d
  420cae:	push   ecx
  420caf:	dec    eax
  420cb0:	xor    ah,bh
  420cb2:	in     eax,dx
  420cb3:	call   FWORD PTR [ecx+0x757c8cf1]
  420cb9:	mov    ah,0x92
  420cbb:	mov    ds:0xa07fc9ce,al
  420cc0:	rol    edi,cl
  420cc2:	leave  
  420cc3:	out    dx,eax
  420cc4:	jb     0x420caa
  420cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cc7:	sub    eax,0xfad90f18
  420ccc:	mov    edx,0x644d6c10
  420cd2:	xchg   BYTE PTR [esi-0x42257033],bl
  420cd8:	(bad)  
  420cd9:	pop    ecx
  420cda:	nop
  420cdb:	push   ecx
  420cdc:	sti    
  420cdd:	cmp    dl,bl
  420cdf:	jl     0x420d35
  420ce1:	mov    ebx,0x37473ff3
  420ce6:	fild   DWORD PTR [eax+0x55c20ab3]
  420cec:	lods   eax,DWORD PTR ds:[esi]
  420ced:	xchg   ebp,eax
  420cee:	pop    es
  420cef:	test   esi,edx
  420cf1:	fucomip st,st(0)
  420cf3:	and    eax,0xa5c3103d
  420cf8:	pop    edx
  420cf9:	clac   
  420cfc:	popf   
  420cfd:	idiv   BYTE PTR [edx+0x7eafae8f]
  420d03:	sub    ch,BYTE PTR [edx+0x762d456]
  420d09:	hlt    
  420d0a:	repnz xchg ecx,eax
  420d0c:	int3   
  420d0d:	imul   ecx,DWORD PTR [edi+edx*8-0x22395b3a],0xda508d2b
  420d18:	xor    esi,eax
  420d1a:	lods   al,BYTE PTR ss:[esi]
  420d1c:	add    ebp,DWORD PTR [ebx]
  420d1e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420d20:	test   al,0x71
  420d22:	xor    al,0x7f
  420d24:	in     al,dx
  420d25:	pop    es
  420d26:	neg    BYTE PTR [ebx]
  420d28:	dec    esi
  420d29:	adc    BYTE PTR gs:[edx-0x2ad328d0],0x10
  420d31:	cli    
  420d32:	mov    BYTE PTR [eax-0x5],bl
  420d35:	adc    BYTE PTR [ecx-0x74],ch
  420d38:	push   es
  420d39:	ja     0x420d56
  420d3b:	inc    esi
  420d3c:	ins    DWORD PTR es:[edi],dx
  420d3d:	div    BYTE PTR [ecx-0x5b5b7ae6]
  420d43:	push   eax
  420d44:	mov    esi,esp
  420d46:	jmp    0x420d77
  420d48:	js     0x420dbc
  420d4a:	jmp    0xe705:0xead8b972
  420d51:	add    esi,esp
  420d53:	stos   DWORD PTR es:[edi],eax
  420d54:	jecxz  0x420dad
  420d56:	xchg   edx,eax
  420d57:	outs   dx,DWORD PTR ds:[esi]
  420d58:	mov    dl,0x71
  420d5a:	push   eax
  420d5b:	inc    edx
  420d5c:	div    BYTE PTR [edi]
  420d5e:	cmc    
  420d5f:	(bad)  
  420d60:	shl    BYTE PTR [ebx+edi*4+0x52de0879],1
  420d67:	das    
  420d68:	mov    dl,0x57
  420d6a:	test   bl,bl
  420d6c:	mov    ss,WORD PTR [edx+0x5d9cba0c]
  420d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d73:	jp     0x420dc5
  420d75:	in     eax,dx
  420d76:	sub    DWORD PTR [ecx],0x7a
  420d79:	inc    ecx
  420d7a:	xor    BYTE PTR [esi],bh
  420d7c:	bound  edi,QWORD PTR [ebx]
  420d7e:	fild   DWORD PTR [ebx+0x1c2113b7]
  420d84:	jge    0x420db6
  420d86:	sbb    BYTE PTR [eax-0x7678fedc],0xc1
  420d8d:	mov    dh,0xcb
  420d8f:	pushf  
  420d90:	fwait
  420d91:	mov    al,0xa9
  420d93:	ins    BYTE PTR es:[edi],dx
  420d94:	pop    ebx
  420d95:	fist   WORD PTR [ebp+edx*4+0x1d0b615a]
  420d9c:	push   es
  420d9d:	sub    DWORD PTR [esi-0x48],0x7e52999b
  420da4:	loope  0x420de2
  420da6:	push   eax
  420da7:	or     cl,BYTE PTR [ecx+0x57]
  420daa:	in     al,0x7e
  420dac:	and    cl,bl
  420dae:	lods   eax,DWORD PTR ds:[esi]
  420daf:	gs popa 
  420db1:	jne    0x420dd9
  420db3:	sar    esp,1
  420db5:	test   DWORD PTR [ebx],0x8212b1a6
  420dbb:	and    eax,0xcdf04bf6
  420dc0:	jb     0x420db2
  420dc2:	sbb    al,0xb0
  420dc4:	or     eax,0x58160033
  420dc9:	ss inc edx
  420dcb:	dec    ebx
  420dcc:	ret    0x88b5
  420dcf:	in     al,dx
  420dd0:	inc    edi
  420dd1:	or     ah,ch
  420dd3:	mov    ds:0xe66c1f76,al
  420dd8:	rcl    BYTE PTR [edi-0x2f],0xbc
  420ddc:	or     al,0x66
  420dde:	out    0x6e,al
  420de0:	ja     0x420d8d
  420de2:	je     0x420dcf
  420de4:	popa   
  420de5:	test   edx,edx
  420de7:	data16 cmp BYTE PTR [ebx-0x4752e94e],bh
  420dee:	mov    edx,DWORD PTR [eax-0x38]
  420df1:	sub    DWORD PTR [eax-0x34],esi
  420df4:	push   edi
  420df5:	and    al,0xfa
  420df7:	jbe    0x420e71
  420df9:	icebp  
  420dfa:	out    dx,eax
  420dfb:	ror    al,0xa
  420dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dff:	cmp    edi,esp
  420e01:	imul   edx,DWORD PTR [ecx],0x61
  420e04:	rcr    DWORD PTR ds:0xb36b9b68,0x58
  420e0b:	cdq    
  420e0c:	jmp    0xd5eb:0x2a4652f3
  420e13:	(bad)  
  420e14:	aad    0x8a
  420e16:	dec    esi
  420e17:	not    DWORD PTR [ecx]
  420e19:	fucomi st,st(4)
  420e1b:	mov    bl,0xea
  420e1d:	xchg   esi,eax
  420e1e:	xor    eax,0x9d235f60
  420e23:	push   cs
  420e24:	addr16 xchg edi,eax
  420e26:	mov    ds:0x646f5245,eax
  420e2b:	jmp    0x16dd6cc
  420e30:	jecxz  0x420db3
  420e32:	ins    BYTE PTR es:[edi],dx
  420e33:	leave  
  420e34:	leave  
  420e35:	and    DWORD PTR [edx+0x585d6d87],ebp
  420e3b:	xchg   ebp,eax
  420e3c:	or     esi,DWORD PTR [esi+0x3b555b58]
  420e42:	out    dx,eax
  420e43:	xlat   BYTE PTR ds:[bx]
  420e45:	add    ecx,edx
  420e47:	dec    esp
  420e48:	nop
  420e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e4a:	push   esi
  420e4b:	inc    esi
  420e4c:	out    0xdf,eax
  420e4e:	(bad)  
  420e50:	pop    ebx
  420e51:	inc    ebx
  420e52:	sbb    esp,DWORD PTR [edi]
  420e54:	sub    ebx,0xe9ed5003
  420e5a:	jbe    0x420e4e
  420e5c:	mov    ds:0x700716a7,eax
  420e61:	fsubr  st(3),st
  420e63:	jge    0x420e56
  420e65:	std    
  420e66:	or     BYTE PTR [ecx*8-0x65d3715b],0xa0
  420e6e:	hlt    
  420e6f:	mov    ds:0x6733f65c,al
  420e74:	and    BYTE PTR [edi],ah
  420e76:	daa    
  420e77:	in     eax,0xc0
  420e79:	dec    esp
  420e7a:	out    dx,eax
  420e7b:	out    dx,al
  420e7c:	outs   dx,BYTE PTR ds:[esi]
  420e7d:	cmp    edx,0x140965f1
  420e83:	in     al,0xd1
  420e85:	jl     0x420eaf
  420e87:	xchg   edx,eax
  420e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e89:	inc    edi
  420e8a:	neg    bl
  420e8c:	fs test eax,0xa8994da3
  420e93:	(bad)  
  420e94:	shr    edx,cl
  420e96:	mov    bh,0xf9
  420e98:	or     eax,0xe4e564ca
  420e9d:	mov    esi,DWORD PTR [ebx+0x1e]
  420ea0:	aam    0xb4
  420ea2:	add    eax,DWORD PTR [ebx-0x5487e710]
  420ea8:	cld    
  420ea9:	cmp    ecx,DWORD PTR [esi-0x27]
  420eac:	xor    ebx,esi
  420eae:	xor    BYTE PTR [esi-0x71bafd88],bl
  420eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb5:	mov    ah,0x39
  420eb7:	(bad)  
  420eb9:	cli    
  420eba:	add    al,0x67
  420ebc:	mov    eax,DWORD PTR [eax+0x6fc71492]
  420ec2:	sub    eax,0x748590fb
  420ec7:	lods   eax,DWORD PTR ds:[esi]
  420ec8:	xor    eax,0xd59e3f2a
  420ecd:	inc    ebx
  420ece:	mov    ds:0x8ade3179,ax
  420ed4:	inc    eax
  420ed5:	and    DWORD PTR [eax],0x57
  420ed8:	mov    esp,0x2f74d739
  420edd:	jg     0x420e9d
  420edf:	push   ds
  420ee0:	jle    0x420ed0
  420ee2:	jge    0x420f4e
  420ee4:	xor    DWORD PTR [eax-0xa],eax
  420ee7:	not    BYTE PTR [edx+0xa]
  420eea:	fsub   QWORD PTR [eax+0x11]
  420eed:	mov    cl,0x98
  420eef:	pop    esp
  420ef0:	xchg   edi,eax
  420ef1:	dec    esp
  420ef2:	or     BYTE PTR [esi-0x2c],al
  420ef5:	aas    
  420ef6:	das    
  420ef7:	pop    edx
  420ef8:	fild   QWORD PTR [ebx-0x2c811e60]
  420efe:	pop    ecx
  420eff:	push   0x286af666
  420f04:	xchg   BYTE PTR [edx+0x21],dl
  420f07:	add    DWORD PTR [ecx],esp
  420f09:	(bad)  
  420f0a:	fadd   DWORD PTR [eax]
  420f0c:	jg     0x420f03
  420f0e:	repz mov ebx,0x5a1817d7
  420f14:	and    al,0xc7
  420f16:	adc    BYTE PTR [ecx+ebp*8],dl
  420f19:	wbinvd 
  420f1b:	fisubr WORD PTR [ebx]
  420f1d:	ficomp WORD PTR [ebx+0x2b0c18c9]
  420f23:	pushf  
  420f24:	shl    BYTE PTR [eax],cl
  420f26:	(bad)  
  420f27:	pop    ds
  420f28:	out    dx,eax
  420f29:	rcr    BYTE PTR [esi+0x360f68ab],cl
  420f2f:	inc    esp
  420f30:	cs sub edx,0xffffffda
  420f34:	xchg   BYTE PTR [eax-0x1e],bl
  420f37:	aam    0x37
  420f39:	mov    eax,ds:0x75c27616
  420f3e:	repz adc eax,edx
  420f41:	inc    ecx
  420f42:	mov    edx,DWORD PTR [ebx-0x15d77c48]
  420f48:	popf   
  420f49:	into   
  420f4a:	ret    
  420f4b:	inc    ecx
  420f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f4d:	ds push 0x37
  420f50:	bnd data16 ja 0x420f37
  420f54:	mov    ds:0x88ba648f,al
  420f59:	fidivr WORD PTR [edi+0x4e]
  420f5c:	mov    edi,0x52d80cd8
  420f61:	mov    esp,0xa6720f3a
  420f66:	inc    ebp
  420f67:	jmp    0x26b7:0x345b5b3e
  420f6e:	pop    edi
  420f6f:	outs   dx,BYTE PTR ds:[esi]
  420f70:	test   BYTE PTR [ecx+edx*2+0x396dd058],bh
  420f77:	jae    0x420f60
  420f79:	mov    BYTE PTR [ecx-0x3f],dl
  420f7c:	and    al,0xc9
  420f7e:	or     eax,0x404bdf8f
  420f83:	xchg   edi,ebp
  420f85:	push   esp
  420f86:	jecxz  0x420f64
  420f88:	dec    ecx
  420f89:	fadd   st(3),st
  420f8b:	sub    bl,dh
  420f8d:	nop
  420f8e:	ins    BYTE PTR es:[edi],dx
  420f8f:	mov    WORD PTR [ebp-0x4e326217],fs
  420f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f96:	or     bl,BYTE PTR [eax-0x37f090ce]
  420f9c:	daa    
  420f9d:	aad    0xc6
  420f9f:	xchg   edx,eax
  420fa0:	cmp    al,ch
  420fa2:	or     ebx,0x17
  420fa5:	pop    ss
  420fa6:	lahf   
  420fa7:	loopne 0x420f8f
  420fa9:	inc    edx
  420faa:	sbb    esi,esp
  420fac:	addr16 or dl,bh
  420faf:	rcr    BYTE PTR [ebp+ecx*2+0x79],1
  420fb3:	mov    ah,0xef
  420fb5:	xor    DWORD PTR [edx-0x613e2634],ebx
  420fbb:	mov    eax,ds:0xf3a7ebbe
  420fc0:	jge    0x420ffc
  420fc2:	add    al,0x90
  420fc4:	out    0xe1,eax
  420fc6:	lds    ebx,FWORD PTR [eax-0x26eb9b08]
  420fcc:	mov    ah,0xb1
  420fce:	in     eax,dx
  420fcf:	pushf  
  420fd0:	inc    edi
  420fd1:	adc    DWORD PTR [edi+eax*8+0x25c88df0],0x27
  420fd9:	add    edx,DWORD PTR [ecx-0x75bf26ed]
  420fdf:	enter  0x2ff6,0x7b
  420fe3:	mov    edi,0x87924e35
  420fe8:	jp     0x420f8f
  420fea:	inc    eax
  420feb:	imul   ecx,DWORD PTR [esi*4-0x63500226],0x5f
  420ff3:	xor    cl,BYTE PTR ds:0xf2088f60
  420ff9:	scas   al,BYTE PTR es:[edi]
  420ffa:	xchg   ecx,ebp
  420ffc:	push   ebp
  420ffd:	dec    edx
  420ffe:	cmp    DWORD PTR [eax],edi
  421000:	add    eax,0x5e862587
  421005:	out    0x86,al
  421007:	push   cs
  421008:	cmp    eax,0x81c8a592
  42100d:	inc    eax
  42100e:	repz imul edx,DWORD PTR [edi+0x5032d8c4],0x33
  421016:	aaa    
  421017:	aaa    
  421018:	repz out 0xea,al
  42101b:	push   ds
  42101c:	pop    ebp
  42101d:	add    BYTE PTR [edx],0x83
  421020:	dec    eax
  421021:	dec    ebp
  421022:	push   ecx
  421023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421024:	push   ss
  421025:	sbb    DWORD PTR [ebx+0x652c3754],0x6f0e79f6
  42102f:	clc    
  421030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421031:	and    DWORD PTR [edx+0x5d9d7c47],ebx
  421037:	dec    edi
  421038:	sub    DWORD PTR [eax+0x1f005eab],edi
  42103e:	test   eax,0xef13a5c0
  421043:	out    dx,al
  421044:	imul   esp,DWORD PTR [ecx],0x6b
  421047:	jo     0x42103a
  421049:	stc    
  42104a:	neg    BYTE PTR [eax-0x2afdd059]
  421050:	mov    edx,0x12fc153d
  421055:	ins    DWORD PTR es:[edi],dx
  421056:	ins    DWORD PTR es:[edi],dx
  421057:	pop    ss
  421058:	and    cl,BYTE PTR [eax]
  42105a:	push   esi
  42105b:	out    0xa8,eax
  42105d:	das    
  42105e:	pop    edx
  42105f:	push   es
  421060:	jmp    0x1e3d:0xbc0f9abc
  421067:	scas   al,BYTE PTR es:[edi]
  421068:	aaa    
  421069:	xor    eax,esp
  42106b:	xchg   esp,eax
  42106c:	dec    esp
  42106d:	int    0xcd
  42106f:	lods   eax,DWORD PTR ds:[esi]
  421070:	inc    edx
  421071:	out    0xdb,al
  421073:	cwde   
  421074:	pop    ebp
  421075:	hlt    
  421076:	adc    DWORD PTR [ebx],edi
  421078:	mov    ecx,0xee7ffb0b
  42107d:	jb     0x4210d0
  42107f:	cmp    dh,al
  421081:	mov    dl,0x10
  421083:	sub    DWORD PTR [edi-0x6d],eax
  421086:	dec    eax
  421087:	(bad)  [ebx+0x6e]
  42108a:	xchg   edi,eax
  42108b:	(bad)  
  42108c:	in     eax,dx
  42108d:	aas    
  42108e:	mov    esp,0x277c7e67
  421093:	jo     0x4210c8
  421095:	inc    esi
  421096:	lds    ebx,FWORD PTR [ebx+0x6d]
  421099:	fsub   DWORD PTR [edi+0x79f1559a]
  42109f:	dec    esp
  4210a0:	cwde   
  4210a1:	mov    bl,0x25
  4210a3:	in     al,0xa0
  4210a5:	fsubr  DWORD PTR [edi]
  4210a7:	cmp    DWORD PTR [edi-0xefe3527],ecx
  4210ad:	mov    WORD PTR [eax+0x668d6246],cs
  4210b3:	fiadd  DWORD PTR [ecx]
  4210b5:	dec    ebp
  4210b6:	retf   0xfbe7
  4210b9:	cmp    eax,0xe8661c38
  4210be:	rcr    DWORD PTR [edi-0x46d0ab1f],cl
  4210c4:	mov    dl,0x5c
  4210c6:	cdq    
  4210c7:	inc    ebx
  4210c8:	pop    eax
  4210c9:	adc    esp,ecx
  4210cb:	sub    BYTE PTR [esi+0x51],cl
  4210ce:	jmp    0xb664:0x50690b3a
  4210d5:	cdq    
  4210d6:	test   al,0x32
  4210d8:	adc    BYTE PTR [esi+0x47],0xad
  4210dc:	retf   0xace6
  4210df:	cmc    
  4210e0:	xchg   BYTE PTR [ebp+0x4bcd60df],al
  4210e6:	in     eax,dx
  4210e7:	mov    ecx,0xf700b0d
  4210ec:	xchg   ebx,eax
  4210ed:	mov    ah,0x5b
  4210ef:	shl    ecx,1
  4210f1:	sbb    DWORD PTR [eax+0x7971ab0],edi
  4210f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210f8:	(bad)  
  4210f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210fa:	lods   al,BYTE PTR ds:[esi]
  4210fb:	or     eax,0xe415c986
  421100:	adc    cl,al
  421102:	cwde   
  421103:	xor    BYTE PTR [esi+0x6369ef0a],cl
  421109:	jmp    0xedd32325
  42110e:	sub    al,0x3d
  421110:	sub    BYTE PTR [ebx-0x33e8b16b],dl
  421116:	xor    al,0x92
  421118:	mov    ebx,0x95eb62b4
  42111d:	fcmovb st,st(2)
  42111f:	cs adc al,0x34
  421122:	leave  
  421123:	cs mov edi,0x72196b8f
  421129:	dec    ebp
  42112a:	out    dx,eax
  42112b:	or     DWORD PTR [ecx],0x4a
  42112e:	fst    DWORD PTR [ebp+0x72]
  421131:	push   es
  421132:	jno    0x421132
  421134:	dec    dx
  421136:	xor    BYTE PTR [ebp+0x51],ch
  421139:	xor    eax,DWORD PTR [eax-0x73]
  42113c:	ins    DWORD PTR es:[edi],dx
  42113d:	sbb    edi,DWORD PTR [eax+0x27]
  421140:	(bad)  
  421141:	fisubr DWORD PTR [ecx+0x52c2530f]
  421147:	jae    0x42115c
  421149:	pop    edx
  42114a:	mov    edi,0xd4e7dee4
  42114f:	inc    esp
  421150:	das    
  421151:	dec    esp
  421152:	test   eax,0x2e666fbf
  421157:	aas    
  421158:	sub    eax,0xf0097876
  42115d:	push   edx
  42115e:	xchg   ebx,eax
  42115f:	and    eax,0x7f9bb1a5
  421164:	fmulp  st(3),st
  421166:	mov    edx,0x5770e808
  42116b:	sbb    dl,BYTE PTR [edx+0x3a9ba40e]
  421171:	sub    DWORD PTR [ebp+0x36],0x6b
  421175:	loop   0x4211d8
  421177:	pop    edi
  421178:	dec    esi
  421179:	sub    BYTE PTR [edi+0x3931e511],al
  42117f:	push   0x12775e52
  421184:	push   esp
  421185:	jb     0x4211fe
  421187:	push   ds
  421188:	jo     0x4211aa
  42118a:	cmp    eax,DWORD PTR [ebx-0x3815953]
  421190:	and    DWORD PTR [ebp-0x7e],eax
  421193:	push   0xffffffaa
  421195:	aas    
  421196:	test   al,0x12
  421198:	xchg   edx,eax
  421199:	mov    eax,ds:0x12a5e566
  42119e:	dec    eax
  42119f:	push   0xffffff84
  4211a1:	pop    es
  4211a2:	sbb    ecx,DWORD PTR [edx+0x42006d8f]
  4211a8:	or     eax,0xe1c0508c
  4211ad:	dec    edx
  4211ae:	or     al,0x5b
  4211b0:	jnp    0x421135
  4211b2:	sahf   
  4211b3:	fldenv [esi-0x44a8391c]
  4211b9:	mov    eax,ds:0x6532620a
  4211be:	xchg   esp,eax
  4211bf:	icebp  
  4211c0:	repnz std 
  4211c2:	js     0x4211ee
  4211c4:	dec    esi
  4211c5:	cmp    al,0x2b
  4211c7:	rol    DWORD PTR [ecx-0x65],cl
  4211ca:	inc    DWORD PTR [edx-0x450dce95]
  4211d0:	adc    BYTE PTR [ebx-0x7c375e32],ch
  4211d6:	mov    ebx,0x69740330
  4211db:	enter  0x2176,0x44
  4211df:	mov    ah,BYTE PTR [ebp+edi*1+0x506a2545]
  4211e6:	mov    di,0xdd29
  4211ea:	xchg   esi,eax
  4211eb:	imul   esp,esp,0xffffffc6
  4211ee:	fisttp WORD PTR [edx-0x80]
  4211f1:	inc    ebx
  4211f2:	mov    DWORD PTR [edx-0xd],edx
  4211f5:	(bad)  
  4211f7:	mov    dl,0x9d
  4211f9:	mov    eax,ds:0x5d34ed7f
  4211fe:	ja     0x4211c3
  421200:	mov    dl,0xfe
  421202:	jecxz  0x421206
  421204:	xchg   BYTE PTR [eax+0x45],ch
  421207:	int    0x6a
  421209:	sub    ch,bl
  42120b:	cmp    al,0x96
  42120d:	sub    edx,DWORD PTR [bp+si-0x16db]
  421212:	dec    ecx
  421213:	daa    
  421214:	cs int 0x8c
  421217:	push   eax
  421218:	pop    ss
  421219:	(bad)  
  42121a:	fcmovbe st,st(2)
  42121c:	lods   al,BYTE PTR ds:[esi]
  42121d:	mov    ebp,0xf35c1cf8
  421222:	les    esp,FWORD PTR [esp-0x3bf35562]
  421229:	sub    al,0x92
  42122b:	fidiv  DWORD PTR [eax+0x26]
  42122e:	das    
  42122f:	push   0xc0666733
  421234:	cdq    
  421235:	push   0x6981710f
  42123a:	mov    al,0x92
  42123c:	ret    0x34e
  42123f:	sbb    edx,DWORD PTR [edx+0x4e7b9689]
  421245:	ret    0xd2f7
  421248:	cs mov edx,0xe0385407
  42124e:	in     al,0x89
  421250:	lods   al,BYTE PTR ss:[esi]
  421252:	push   edi
  421253:	push   ecx
  421254:	pop    edx
  421255:	rol    DWORD PTR [ebp-0xda1fe08],1
  42125b:	pop    esi
  42125c:	add    al,0x47
  42125e:	out    dx,eax
  42125f:	ins    DWORD PTR es:[edi],dx
  421260:	scas   al,BYTE PTR es:[edi]
  421261:	mov    esp,0x5b0ace45
  421266:	push   ds
  421267:	add    eax,0xbd4a85f4
  42126c:	int    0x43
  42126e:	xor    eax,0x5c73eb32
  421273:	and    dl,bh
  421275:	xor    al,0xa
  421277:	sub    ebx,ecx
  421279:	ret    
  42127a:	div    DWORD PTR [ebx-0x430b10b1]
  421280:	stc    
  421281:	push   esi
  421282:	stos   BYTE PTR es:[edi],al
  421283:	mov    edx,0x43dc75ed
  421288:	push   ds
  421289:	sub    DWORD PTR [edi-0x18061676],0x3baaabd7
  421293:	scas   eax,DWORD PTR es:[edi]
  421294:	adc    esp,DWORD PTR [ecx]
  421296:	imul   esi,DWORD PTR [ebx+0x34],0x38342f35
  42129d:	mov    dl,0xd0
  42129f:	adc    eax,0x3243159b
  4212a4:	push   ds
  4212a5:	mov    ds:0x97089a51,al
  4212aa:	fisubr WORD PTR [ebp+0x164f2310]
  4212b0:	and    edi,DWORD PTR [eax+ecx*4-0x37ad0d70]
  4212b7:	into   
  4212b8:	push   edx
  4212b9:	pop    esi
  4212ba:	jl     0x42125d
  4212bc:	fistp  WORD PTR [ecx-0x4358c222]
  4212c2:	jo     0x42125f
  4212c4:	add    DWORD PTR [edi+0x494f7292],edx
  4212ca:	cld    
  4212cb:	scas   al,BYTE PTR es:[edi]
  4212cc:	push   cs
  4212cd:	xor    BYTE PTR [edi],dl
  4212cf:	jle    0x4212af
  4212d1:	adc    edx,edx
  4212d3:	and    BYTE PTR [ebp-0x4ff2eee1],ch
  4212d9:	out    0x70,al
  4212db:	lock popf 
  4212dd:	stos   BYTE PTR es:[edi],al
  4212de:	mov    al,ds:0xd2aa225c
  4212e3:	adc    DWORD PTR ss:[ecx],esp
  4212e6:	push   cs
  4212e7:	lea    edx,[edi]
  4212e9:	jnp    0x4212a2
  4212eb:	sbb    eax,0x21a059a
  4212f0:	push   eax
  4212f1:	in     eax,0xe4
  4212f3:	push   0xa45d65e4
  4212f8:	adc    eax,edx
  4212fa:	std    
  4212fb:	push   cs
  4212fc:	inc    esp
  4212fd:	mov    ch,0x92
  4212ff:	cs inc esp
  421301:	and    ebp,ebp
  421303:	inc    ebp
  421304:	std    
  421305:	test   al,0xdc
  421307:	adc    ch,BYTE PTR [edx+0x3f5a656f]
  42130d:	xchg   esi,eax
  42130e:	push   ss
  42130f:	cmp    ecx,edx
  421311:	bnd jge 0x42136a
  421314:	pop    edi
  421315:	mov    DWORD PTR ds:0x2717ab12,edi
  42131b:	xor    eax,0x73bf561f
  421320:	dec    esi
  421321:	mov    dl,BYTE PTR [bx+di+0x70]
  421325:	xchg   ecx,eax
  421326:	dec    esp
  421327:	xchg   esp,eax
  421328:	push   0x3a
  42132a:	adc    eax,0x15da6970
  42132f:	push   ecx
  421330:	jmp    0xfcdc31f5
  421335:	jp     0x42133a
  421337:	mov    eax,ds:0xc9362e7f
  42133c:	call   0x80da6c7c
  421341:	hlt    
  421342:	and    eax,0x5b49fa87
  421347:	aaa    
  421348:	arpl   WORD PTR [esi],sp
  42134a:	test   al,0x31
  42134c:	add    BYTE PTR [ecx+0x14],dh
  42134f:	push   edx
  421350:	iret   
  421351:	daa    
  421352:	lea    edi,[edx+0x41]
  421355:	dec    ecx
  421356:	jne    0x421325
  421358:	in     al,dx
  421359:	dec    esi
  42135a:	test   BYTE PTR ds:0x358294b8,cl
  421360:	sbb    BYTE PTR [edx],bl
  421362:	mov    cl,0x8c
  421364:	js     0x421376
  421366:	xlat   BYTE PTR ds:[ebx]
  421367:	and    dh,bl
  421369:	jg     0x4213bd
  42136b:	stos   BYTE PTR es:[edi],al
  42136c:	enter  0xedbb,0x9d
  421370:	(bad)  
  421371:	cdq    
  421372:	adc    BYTE PTR [ebx+0x28d10608],dh
  421378:	push   ebp
  421379:	dec    BYTE PTR ds:0xb803f974
  42137f:	mov    bl,0xa4
  421381:	shl    BYTE PTR [esi],cl
  421383:	jns    0x42139e
  421385:	popf   
  421386:	sahf   
  421387:	inc    BYTE PTR [ecx-0x4f]
  42138a:	jns    0x4213b0
  42138c:	in     eax,dx
  42138d:	mov    ds:0x6b0d1011,eax
  421392:	outs   dx,DWORD PTR ds:[esi]
  421393:	mov    bh,0xe8
  421395:	cmp    eax,DWORD PTR [ebp+0x39aeaf0b]
  42139b:	std    
  42139c:	sti    
  42139d:	push   ebp
  42139e:	cmp    dl,bl
  4213a0:	aas    
  4213a1:	jmp    0x421371
  4213a3:	adc    dh,BYTE PTR [eax]
  4213a5:	pop    ebx
  4213a6:	push   cs
  4213a7:	ins    DWORD PTR es:[edi],dx
  4213a8:	idiv   BYTE PTR [ecx]
  4213aa:	out    0x7,al
  4213ac:	ss dec esp
  4213ae:	push   esp
  4213af:	call   0x3751:0x12eec868
  4213b6:	add    eax,0x543918de
  4213bb:	leave  
  4213bc:	ret    
  4213bd:	lods   al,BYTE PTR ds:[esi]
  4213be:	jb     0x42138f
  4213c0:	sub    al,0x91
  4213c2:	pop    ecx
  4213c3:	rdpmc  
  4213c5:	jne    0x42141a
  4213c7:	ret    0x80a6
  4213ca:	pop    ebp
  4213cb:	add    BYTE PTR [ebp+0x13],al
  4213ce:	push   ebp
  4213cf:	push   esi
  4213d0:	hlt    
  4213d1:	pop    ss
  4213d2:	xor    eax,edx
  4213d4:	je     0x421422
  4213d6:	je     0x4213ae
  4213d8:	pop    eax
  4213d9:	mov    bh,0x3
  4213db:	jno    0x42144b
  4213dd:	jmp    0xfa87:0x6a2d6888
  4213e4:	cmc    
  4213e5:	xor    al,0x15
  4213e7:	cli    
  4213e8:	inc    ebp
  4213e9:	test   ch,ch
  4213eb:	das    
  4213ec:	cmp    dl,BYTE PTR [esi+0x28]
  4213ef:	push   ds
  4213f0:	add    DWORD PTR [edi-0x3f29e574],edi
  4213f6:	xor    DWORD PTR [eax+0xb],ecx
  4213f9:	xchg   BYTE PTR [ebx-0x76],dh
  4213fc:	mov    eax,ss
  4213fe:	clc    
  4213ff:	test   eax,0xb985d002
  421404:	ins    DWORD PTR es:[edi],dx
  421405:	pop    es
  421406:	cmp    eax,0x74288277
  42140b:	jb     0x4213c5
  42140d:	jo     0x421469
  42140f:	and    esp,esp
  421411:	xchg   edx,eax
  421412:	mov    cl,0x10
  421414:	xor    eax,0x9fce19d7
  421419:	loopne 0x421462
  42141b:	mov    ecx,0xdedaecd7
  421420:	push   ss
  421421:	mov    ah,0x96
  421423:	xor    BYTE PTR gs:[edi-0x46bf0dcc],ch
  42142a:	pop    es
  42142b:	adc    bh,dl
  42142d:	sub    al,0xe0
  42142f:	push   cs
  421430:	fwait
  421431:	call   0xdf70:0x8dd278db
  421438:	rcl    BYTE PTR [ecx+0x23],1
  42143b:	popa   
  42143c:	shl    DWORD PTR [edx-0x974ddfe],1
  421442:	adc    al,0x4b
  421444:	adc    BYTE PTR [ebx],ch
  421446:	inc    ebp
  421447:	repnz ror DWORD PTR [esi+0x63],cl
  42144b:	xor    al,dh
  42144d:	xor    eax,0x7ac8f88b
  421452:	clc    
  421453:	and    bl,dh
  421455:	pop    ecx
  421456:	outs   dx,DWORD PTR ds:[esi]
  421457:	jp     0x421438
  421459:	repnz pop es
  42145b:	loope  0x421488
  42145d:	or     al,0x93
  42145f:	and    edi,esi
  421461:	retf   0xcfd4
  421464:	pop    es
  421465:	inc    edx
  421466:	sbb    BYTE PTR [esi-0x56b1cc06],0x1c
  42146d:	(bad)  
  42146e:	hlt    
  42146f:	mov    esp,0xb797982c
  421474:	push   ss
  421475:	xchg   esi,eax
  421476:	ror    BYTE PTR [edi],1
  421478:	sbb    al,0x41
  42147a:	repz fdivr DWORD PTR [ebp+0x65c0e683]
  421481:	in     eax,0x89
  421483:	imul   ecx,DWORD PTR [ecx+0x7fb6ac7f],0xffffffef
  42148a:	in     al,dx
  42148b:	dec    edi
  42148c:	mov    dl,0x59
  42148e:	ss in  al,dx
  421490:	popa   
  421491:	int3   
  421492:	rcl    al,1
  421494:	dec    ebp
  421495:	adc    al,0xd1
  421498:	push   eax
  421499:	mov    ecx,0xe6d148f0
  42149e:	push   ds
  42149f:	jo     0x421520
  4214a1:	add    al,0x4d
  4214a3:	dec    eax
  4214a4:	dec    edi
  4214a5:	push   ebx
  4214a6:	test   DWORD PTR [esi-0x76],ebp
  4214a9:	pop    ds
  4214aa:	sub    eax,DWORD PTR [esp+ebp*1+0x2a]
  4214ae:	pusha  
  4214af:	mov    esi,0xe8b5812d
  4214b4:	adc    eax,0xd5998ca
  4214b9:	push   ebx
  4214ba:	cmp    esi,eax
  4214bc:	jmp    0xde4a:0x57854895
  4214c3:	xchg   ebp,eax
  4214c4:	sar    DWORD PTR [esi+0x45],cl
  4214c7:	loopne 0x42150e
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x634b375f
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xe72d62ea
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	jmp    FWORD PTR [ebx]
  4217ea:	retf   0x8fa4
  4217ed:	xor    BYTE PTR [ecx],ah
  4217ef:	sub    al,al
  4217f1:	sub    al,bl
  4217f3:	std    
  4217f4:	xchg   BYTE PTR [ebx],cl
  4217f6:	cdq    
  4217f7:	nop
  4217f8:	xor    al,0x37
  4217fa:	xor    esp,DWORD PTR [ecx]
  4217fc:	sub    al,al
  4217fe:	cs ret 
  421800:	std    
  421801:	(bad)  
  421802:	hlt    
  421803:	xchg   ax,ax
  421805:	xor    al,0x8f
  421807:	xor    esp,DWORD PTR [ecx]
  421809:	sub    al,al
  42180b:	cs ret 
  42180d:	std    
  42180e:	xchg   ah,dh
  421810:	xchg   ax,ax
  421812:	xor    al,0x8f
  421814:	xor    esp,DWORD PTR [ecx]
  421816:	sub    al,al
  421818:	cs ret 
  42181a:	std    
  42181b:	xchg   ah,dh
  42181d:	xchg   ax,ax
  42181f:	xor    al,0x8f
  421821:	xor    esp,DWORD PTR [ecx]
  421823:	sub    al,al
  421825:	(bad)  
  421826:	ret    
  421827:	std    
  421828:	xchg   dl,bh
  42182a:	jns    0x421856
  42182c:	cmp    cl,BYTE PTR [edi-0x1e1ad779]
  421832:	xchg   esi,eax
  421833:	ret    0x4bb1
  421836:	aad    0x32
  421838:	clc    
  421839:	pop    ebp
  42183a:	cld    
  42183b:	adc    edx,DWORD PTR [ecx+0x5a]
  42183e:	scas   eax,DWORD PTR es:[edi]
  42183f:	dec    ecx
  421840:	mov    cl,0x9c
  421842:	jmp    0x421818
  421844:	add    eax,0x5ce15af1
  421849:	push   ebp
  42184a:	or     BYTE PTR [edx-0xc701cb5],ah
  421850:	call   0x6e77:0xaf5af946
  421857:	jnp    0x421839
  421859:	inc    ebx
  42185a:	lods   al,BYTE PTR ds:[esi]
  42185b:	cdq    
  42185c:	jecxz  0x421838
  42185e:	imul   ebx,DWORD PTR [ebp+0x2133ab3e],0x28
  421865:	shr    BYTE PTR [esi],0xc3
  421868:	std    
  421869:	sub    DWORD PTR [ebp-0x66],0xa17777c9
  421870:	sub    ebp,DWORD PTR [ebx+0x38]
  421873:	mov    esp,0x667ebec9
  421878:	ins    BYTE PTR es:[edi],dx
  421879:	enter  0x8351,0x39
  42187d:	jle    0x42184f
  42187f:	push   edx
  421880:	and    al,0x9b
  421882:	cwde   
  421883:	mov    esi,0xa668a4fe
  421888:	test   DWORD PTR [ebx+0x44],ebp
  42188b:	adc    edx,ecx
  42188d:	inc    esi
  42188e:	cmp    ebp,DWORD PTR [edi-0x74]
  421891:	fsubr  st,st(0)
  421893:	test   eax,0xb3cbc93e
  421898:	and    cl,BYTE PTR [edx-0x33082d52]
  42189e:	or     al,0xf4
  4218a0:	call   0x3870:0x2b320f7e
  4218a7:	mov    esp,0x677ebec9
  4218ac:	ins    BYTE PTR es:[edi],dx
  4218ad:	mov    eax,0x9e391dcd
  4218b2:	lock inc eax
  4218b4:	and    al,0x8e
  4218b6:	add    eax,0xf53efe14
  4218bb:	or     DWORD PTR [ebp-0x354526c5],eax
  4218c1:	jbe    0x421869
  4218c3:	cmc    
  4218c4:	mov    WORD PTR [esi-0x28c1fd62],?
  4218ca:	push   esi
  4218cb:	and    al,BYTE PTR cs:[edx-0x2b08ae2a]
  4218d2:	popf   
  4218d3:	add    eax,0xa17777f8
  4218d8:	sub    ebp,DWORD PTR [eax]
  4218da:	shr    BYTE PTR [esi],0xc3
  4218dd:	std    
  4218de:	xchg   ah,dh
  4218e0:	data16 shl BYTE PTR [ecx-0x71],0x33
  4218e5:	ins    DWORD PTR es:[edi],dx
  4218e6:	sub    edx,eax
  4218e8:	arpl   WORD PTR cs:0x9066bbed,bp
  4218ef:	xor    al,0x8f
  4218f1:	xor    esp,DWORD PTR [ecx]
  4218f3:	sub    al,al
  4218f5:	into   
  4218f6:	ret    
  4218f7:	inc    BYTE PTR [edi+0x349a67ff]
  4218fd:	(bad)  
  4218fe:	frstor ds:0xc592c028
  421904:	std    
  421905:	xchg   ah,dh
  421907:	xchg   ax,ax
  421909:	and    eax,0x28213332
  42190e:	shr    BYTE PTR [esi],1
  421910:	ret    
  421911:	std    
  421912:	xchg   cl,dh
  421914:	xchg   ax,ax
  421916:	xor    al,0xce
  421918:	xor    esp,DWORD PTR [ecx]
  42191a:	cmp    al,al
  42191c:	cs ret 
  42191e:	inc    DWORD PTR [esi+0x359063f4]
  421924:	(bad)  
  421925:	xor    esp,DWORD PTR [ecx]
  421927:	sub    al,al
  421929:	sub    eax,ebx
  42192b:	cld    
  42192c:	xchg   ah,dh
  42192e:	xchg   ax,ax
  421930:	xor    al,0x8f
  421932:	arpl   WORD PTR ds:0xc32ac028,bp
  421938:	std    
  421939:	xchg   DWORD PTR [eax],edx
  42193b:	arpl   WORD PTR [eax-0x5ecc70ca],dx
  421941:	sub    al,al
  421943:	ds ret 
  421945:	std    
  421946:	xchg   esi,eax
  421947:	hlt    
  421948:	xchg   ax,ax
  42194a:	xor    al,0x9f
  42194c:	xor    esp,DWORD PTR [ecx]
  42194e:	cmp    al,al
  421950:	cs ret 
  421952:	std    
  421953:	xchg   ah,dh
  421955:	jbe    0x4218e7
  421957:	xor    al,0x8f
  421959:	xor    esp,DWORD PTR [ecx]
  42195b:	sub    al,al
  42195d:	cs ret 
  42195f:	std    
  421960:	xchg   BYTE PTR [eax],al
  421962:	pop    edi
  421963:	pushf  
  421964:	xor    al,0xe6
  421966:	xor    BYTE PTR [ecx],ah
  421968:	sub    al,al
  42196a:	fmulp  st(0),st
  42196c:	std    
  42196d:	leave  
  42196e:	mov    ebp,0x8f349066
  421973:	xor    esp,DWORD PTR [ecx]
  421975:	sub    al,al
  421977:	cs ret 
  421979:	std    
  42197a:	xchg   ah,dh
  42197c:	xchg   ax,ax
  42197e:	xor    al,0x8f
  421980:	xor    esp,DWORD PTR [ecx]
  421982:	sub    al,al
  421984:	cs ret 
  421986:	std    
  421987:	xchg   ah,dh
  421989:	xchg   ax,ax
  42198b:	xor    al,0x8f
  42198d:	xor    esp,DWORD PTR [ecx]
  42198f:	sub    al,al
  421991:	cs ret 
  421993:	std    
  421994:	xchg   ah,dh
  421996:	xchg   ax,ax
  421998:	xor    al,0x8f
  42199a:	xor    esp,DWORD PTR [ecx]
  42199c:	sub    al,al
  42199e:	cs ret 
  4219a0:	std    
  4219a1:	xchg   ah,dh
  4219a3:	xchg   ax,ax
  4219a5:	xor    al,0x8f
  4219a7:	xor    esp,DWORD PTR [ecx]
  4219a9:	sub    al,al
  4219ab:	cs ret 
  4219ad:	std    
  4219ae:	xchg   ah,dh
  4219b0:	xchg   ax,ax
  4219b2:	xor    al,0x8f
  4219b4:	xor    esp,DWORD PTR [ecx]
  4219b6:	sub    al,al
  4219b8:	cs ret 
  4219ba:	std    
  4219bb:	xchg   ah,dh
  4219bd:	xchg   ax,ax
  4219bf:	xor    al,0x8f
  4219c1:	xor    esp,DWORD PTR [ecx]
  4219c3:	sub    al,al
  4219c5:	cs ret 
  4219c7:	std    
  4219c8:	xchg   ah,dh
  4219ca:	xchg   ax,ax
  4219cc:	xor    al,0x8f
  4219ce:	xor    esp,DWORD PTR [ecx]
  4219d0:	sub    al,al
  4219d2:	cs ret 
  4219d4:	std    
  4219d5:	xchg   ah,dh
  4219d7:	xchg   ax,ax
  4219d9:	sbb    bh,bl
  4219db:	push   esi
  4219dc:	pop    ecx
  4219dd:	pop    esp
  4219de:	shr    BYTE PTR [esi],0xc3
  4219e1:	std    
  4219e2:	jmp    WORD PTR [esi-0x70]
  4219e6:	and    al,0x8f
  4219e8:	xor    esp,DWORD PTR [ecx]
  4219ea:	cld    
  4219eb:	les    ebp,FWORD PTR [esi]
  4219ed:	ret    
  4219ee:	stc    
  4219ef:	xchg   ah,dh
  4219f1:	ss aad 0x77
  4219f4:	mov    ebp,0xc0286e67
  4219f9:	cs ret 
  4219fb:	std    
  4219fc:	xchg   ah,dl
  4219fe:	xchg   ax,ax
  421a00:	aam    0xa1
  421a02:	inc    ecx
  421a03:	push   edx
  421a04:	pop    edx
  421a05:	mov    ds:0x86fdc32e,eax
  421a0a:	xchg   esp,eax
  421a0b:	xchg   ax,ax
  421a0d:	xor    al,0x7f
  421a0f:	cmp    BYTE PTR [ecx],ah
  421a11:	sub    BYTE PTR [edx+0x5efdc32e],bl
  421a17:	lock xchg ax,ax
  421a1a:	xor    al,0x8f
  421a1c:	xor    esp,DWORD PTR [ecx]
  421a1e:	sub    al,al
  421a20:	cs ret 
  421a22:	std    
  421a23:	xchg   ah,dh
  421a25:	inc    esi
  421a26:	nop
  421a27:	xor    al,0x6f
  421a29:	xor    esp,DWORD PTR [ecx]
  421a2b:	sub    al,al
  421a2d:	cs ret 
  421a2f:	std    
  421a30:	xchg   ah,dh
  421a32:	xchg   ax,ax
  421a34:	xor    al,0x8f
  421a36:	xor    esp,DWORD PTR [ecx]
  421a38:	sub    al,al
  421a3a:	cs ret 
  421a3c:	std    
  421a3d:	xchg   ah,dh
  421a3f:	xchg   ax,ax
  421a41:	xor    al,0x8f
  421a43:	xor    esp,DWORD PTR [ecx]
  421a45:	sub    al,al
  421a47:	cs ret 
  421a49:	std    
  421a4a:	xchg   ah,dh
  421a4c:	xchg   ax,ax
  421a4e:	xor    al,0x8f
  421a50:	xor    esp,DWORD PTR [ecx]
  421a52:	sub    al,al
  421a54:	cs ret 
  421a56:	std    
  421a57:	xchg   ah,dh
  421a59:	xchg   ax,ax
  421a5b:	xor    al,0x8f
  421a5d:	xor    esp,DWORD PTR [ecx]
  421a5f:	sub    al,al
  421a61:	cs ret 
  421a63:	std    
  421a64:	xchg   ah,dh
  421a66:	xchg   ax,ax
  421a68:	xor    al,0x8f
  421a6a:	xor    esp,DWORD PTR [ecx]
  421a6c:	sub    al,al
  421a6e:	cs ret 
  421a70:	std    
  421a71:	xchg   ah,dh
  421a73:	xchg   ax,ax
  421a75:	xor    al,0x8f
  421a77:	xor    esp,DWORD PTR [ecx]
  421a79:	sub    al,al
  421a7b:	cs ret 
  421a7d:	std    
  421a7e:	xchg   ah,dh
  421a80:	xchg   ax,ax
  421a82:	xor    al,0x8f
  421a84:	xor    esp,DWORD PTR [ecx]
  421a86:	sub    al,al
  421a88:	cs ret 
  421a8a:	std    
  421a8b:	xchg   ah,dh
  421a8d:	xchg   ax,ax
  421a8f:	xor    al,0x8f
  421a91:	xor    esp,DWORD PTR [ecx]
  421a93:	sub    al,al
  421a95:	cs ret 
  421a97:	std    
  421a98:	xchg   ah,dh
  421a9a:	xchg   ax,ax
  421a9c:	xor    al,0x8f
  421a9e:	xor    esp,DWORD PTR [ecx]
  421aa0:	sub    al,al
  421aa2:	cs ret 
  421aa4:	std    
  421aa5:	xchg   ah,dh
  421aa7:	xchg   ax,ax
  421aa9:	xor    al,0x8f
  421aab:	xor    esp,DWORD PTR [ecx]
  421aad:	sub    al,al
  421aaf:	cs ret 
  421ab1:	std    
  421ab2:	xchg   ah,dh
  421ab4:	xchg   ax,ax
  421ab6:	xor    al,0x8f
  421ab8:	xor    esp,DWORD PTR [ecx]
  421aba:	sub    al,al
  421abc:	cs ret 
  421abe:	std    
  421abf:	xchg   ah,dh
  421ac1:	xchg   ax,ax
  421ac3:	xor    al,0x8f
  421ac5:	xor    esp,DWORD PTR [ecx]
  421ac7:	sub    al,al
  421ac9:	cs ret 
  421acb:	std    
  421acc:	xchg   ah,dh
  421ace:	xchg   ax,ax
  421ad0:	xor    al,0x8f
  421ad2:	xor    esp,DWORD PTR [ecx]
  421ad4:	sub    al,al
  421ad6:	cs ret 
  421ad8:	std    
  421ad9:	xchg   ah,dh
  421adb:	xchg   ax,ax
  421add:	xor    al,0x8f
  421adf:	xor    esp,DWORD PTR [ecx]
  421ae1:	sub    al,al
  421ae3:	cs ret 
  421ae5:	std    
  421ae6:	xchg   ah,dh
  421ae8:	xchg   ax,ax
  421aea:	xor    al,0x8f
  421aec:	xor    esp,DWORD PTR [ecx]
  421aee:	sub    al,al
  421af0:	cs ret 
  421af2:	std    
  421af3:	xchg   ah,dh
  421af5:	xchg   ax,ax
  421af7:	xor    al,0x8f
  421af9:	xor    esp,DWORD PTR [ecx]
  421afb:	sub    al,al
  421afd:	cs ret 
  421aff:	std    
  421b00:	xchg   ah,dh
  421b02:	xchg   ax,ax
  421b04:	xor    al,0x8f
  421b06:	xor    esp,DWORD PTR [ecx]
  421b08:	sub    al,al
  421b0a:	cs ret 
  421b0c:	std    
  421b0d:	xchg   ah,dh
  421b0f:	xchg   ax,ax
  421b11:	xor    al,0x8f
  421b13:	xor    esp,DWORD PTR [ecx]
  421b15:	sub    al,al
  421b17:	cs ret 
  421b19:	std    
  421b1a:	xchg   ah,dh
  421b1c:	xchg   ax,ax
  421b1e:	xor    al,0x8f
  421b20:	xor    esp,DWORD PTR [ecx]
  421b22:	sub    al,al
  421b24:	cs ret 
  421b26:	std    
  421b27:	xchg   ah,dh
  421b29:	xchg   ax,ax
  421b2b:	xor    al,0x8f
  421b2d:	xor    esp,DWORD PTR [ecx]
  421b2f:	sub    al,al
  421b31:	cs ret 
  421b33:	std    
  421b34:	xchg   ah,dh
  421b36:	xchg   ax,ax
  421b38:	xor    al,0x8f
  421b3a:	xor    esp,DWORD PTR [ecx]
  421b3c:	sub    al,al
  421b3e:	cs ret 
  421b40:	std    
  421b41:	xchg   ah,dh
  421b43:	xchg   ax,ax
  421b45:	xor    al,0x8f
  421b47:	xor    esp,DWORD PTR [ecx]
  421b49:	sub    al,al
  421b4b:	cs ret 
  421b4d:	std    
  421b4e:	xchg   ah,dh
  421b50:	xchg   ax,ax
  421b52:	xor    al,0x8f
  421b54:	xor    esp,DWORD PTR [ecx]
  421b56:	sub    al,al
  421b58:	cs ret 
  421b5a:	std    
  421b5b:	xchg   ah,dh
  421b5d:	xchg   ax,ax
  421b5f:	xor    al,0x8f
  421b61:	xor    esp,DWORD PTR [ecx]
  421b63:	sub    al,al
  421b65:	cs ret 
  421b67:	std    
  421b68:	xchg   ah,dh
  421b6a:	xchg   ax,ax
  421b6c:	xor    al,0x8f
  421b6e:	xor    esp,DWORD PTR [ecx]
  421b70:	sub    al,al
  421b72:	cs ret 
  421b74:	std    
  421b75:	xchg   ah,dh
  421b77:	xchg   ax,ax
  421b79:	xor    al,0x8f
  421b7b:	xor    esp,DWORD PTR [ecx]
  421b7d:	sub    al,al
  421b7f:	cs ret 
  421b81:	std    
  421b82:	xchg   ah,dh
  421b84:	xchg   ax,ax
  421b86:	xor    al,0x8f
  421b88:	xor    esp,DWORD PTR [ecx]
  421b8a:	sub    al,al
  421b8c:	cs ret 
  421b8e:	std    
  421b8f:	xchg   ah,dh
  421b91:	xchg   ax,ax
  421b93:	xor    al,0x8f
  421b95:	xor    esp,DWORD PTR [ecx]
  421b97:	sub    al,al
  421b99:	cs ret 
  421b9b:	std    
  421b9c:	xchg   ah,dh
  421b9e:	xchg   ax,ax
  421ba0:	xor    al,0x8f
  421ba2:	xor    esp,DWORD PTR [ecx]
  421ba4:	sub    al,al
  421ba6:	cs ret 
  421ba8:	std    
  421ba9:	xchg   ah,dh
  421bab:	xchg   ax,ax
  421bad:	xor    al,0x8f
  421baf:	xor    esp,DWORD PTR [ecx]
  421bb1:	sub    al,al
  421bb3:	cs ret 
  421bb5:	std    
  421bb6:	xchg   ah,dh
  421bb8:	xchg   ax,ax
  421bba:	xor    al,0x8f
  421bbc:	xor    esp,DWORD PTR [ecx]
  421bbe:	sub    al,al
  421bc0:	cs ret 
  421bc2:	std    
  421bc3:	xchg   ah,dh
  421bc5:	xchg   ax,ax
  421bc7:	xor    al,0x8f
  421bc9:	xor    esp,DWORD PTR [ecx]
  421bcb:	sub    al,al
  421bcd:	cs ret 
  421bcf:	std    
  421bd0:	xchg   ah,dh
  421bd2:	xchg   ax,ax
  421bd4:	xor    al,0x8f
  421bd6:	xor    esp,DWORD PTR [ecx]
  421bd8:	sub    al,al
  421bda:	cs ret 
  421bdc:	std    
  421bdd:	xchg   ah,dh
  421bdf:	xchg   ax,ax
  421be1:	xor    al,0x8f
  421be3:	xor    esp,DWORD PTR [ecx]
  421be5:	sub    al,al
  421be7:	cs ret 
  421be9:	xchg   edx,eax
  421bea:	jmp    DWORD PTR cs:[esi-0x41]
  421bee:	xor    al,0x8f
  421bf0:	and    esp,DWORD PTR [ecx]
  421bf2:	sub    dl,ch
  421bf4:	mov    WORD PTR [ecx],ds
  421bf6:	mov    eax,fs
  421bf8:	or     ecx,DWORD PTR [ebx+0xe]
  421bfb:	mov    bl,0xdf
  421bfd:	ficom  WORD PTR [edi]
  421bff:	rcl    bl,0x9a
  421c02:	push   esi
  421c03:	fwait
  421c04:	div    DWORD PTR [eax+0x3c]
  421c07:	add    DWORD PTR [ebp-0x33b3dac8],0x4a
  421c0e:	scas   eax,DWORD PTR es:[edi]
  421c0f:	add    eax,0x5964e4d3
  421c14:	test   eax,0x3682c007
  421c19:	or     al,al
  421c1b:	or     DWORD PTR [ebp+esi*2-0x2d],esp
  421c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c20:	or     edi,DWORD PTR [ecx]
  421c22:	push   es
  421c23:	mov    dl,0xee
  421c25:	xor    eax,0x1d21a099
  421c2a:	fnstcw WORD PTR ds:0x1b55b5b8
  421c30:	ja     0x421bdf
  421c32:	sub    eax,edi
  421c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c35:	push   cs
  421c36:	pusha  
  421c37:	bnd ja 0x421c98
  421c3a:	dec    ebx
  421c3b:	aad    0x4c
  421c3d:	leave  
  421c3e:	bound  esp,QWORD PTR [edx-0x1a]
  421c41:	jno    0x421cab
  421c43:	jmp    0x3372:0x3c751b80
  421c4a:	cmp    esi,DWORD PTR [ecx+0xf244312]
  421c50:	xor    ebx,DWORD PTR [ebp+ecx*1+0x1884c094]
  421c57:	push   0x27630998
  421c5c:	adc    DWORD PTR [ebx-0x1a],esp
  421c5f:	fld    DWORD PTR [esi-0x24]
  421c62:	(bad)  
  421c63:	mov    ah,dh
  421c65:	sbb    ah,BYTE PTR [ebx+0x6]
  421c68:	aas    
  421c69:	pop    ds
  421c6a:	repnz xor DWORD PTR [ecx],esi
  421c6d:	sti    
  421c6e:	or     BYTE PTR [edx],dh
  421c70:	push   0x32
  421c72:	push   ds
  421c73:	sub    ebp,DWORD PTR [ebp+0x4]
  421c76:	mov    ebx,0x90b5728a
  421c7b:	jne    0x421c61
  421c7d:	mov    bl,0xa7
  421c7f:	jno    0x421cfe
  421c81:	scas   al,BYTE PTR es:[edi]
  421c82:	jge    0x421c87
  421c84:	xor    edi,esi
  421c86:	or     ah,BYTE PTR [ebp+0x2032237e]
  421c8c:	jns    0x421c5f
  421c8e:	xor    cl,BYTE PTR [ecx+0x6e]
  421c91:	mov    ebp,fs
  421c93:	stos   BYTE PTR es:[edi],al
  421c94:	inc    edx
  421c95:	mov    WORD PTR [eax],gs
  421c97:	dec    esi
  421c98:	mov    ds:0xaaa7d0a5,eax
  421c9d:	push   ds
  421c9e:	(bad)  
  421c9f:	xlat   BYTE PTR ds:[ebx]
  421ca0:	add    DWORD PTR [ecx-0x4e7b9df3],0x3ce3e2a1
  421caa:	daa    
  421cab:	fnstsw WORD PTR [edi+0x44]
  421cae:	sub    edx,edx
  421cb0:	mov    bl,0xdb
  421cb2:	and    ah,ch
  421cb4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb6:	call   0x12632a33
  421cbb:	jecxz  0x421cd9
  421cbd:	lods   eax,DWORD PTR ds:[esi]
  421cbe:	ret    0x7481
  421cc1:	aad    0x88
  421cc3:	shl    DWORD PTR [ebp+0x7c11406e],cl
  421cc9:	gs int 0xdc
  421ccc:	js     0x421d19
  421cce:	xor    esp,DWORD PTR [edx+edx*8-0x38]
  421cd2:	cmp    eax,0xee04d612
  421cd7:	loope  0x421cb8
  421cd9:	sahf   
  421cda:	(bad)  
  421cdb:	std    
  421cdc:	leave  
  421cdd:	loopne 0x421d2b
  421cdf:	pop    ds
  421ce0:	in     al,0xa2
  421ce2:	mov    DWORD PTR [ecx+edi*2],ebp
  421ce5:	or     BYTE PTR [ebx+ebp*8],cl
  421ce8:	sbb    bl,BYTE PTR [ebx]
  421cea:	xchg   ebx,eax
  421ceb:	test   al,0xaf
  421ced:	sub    dh,BYTE PTR [ecx+0x50]
  421cf0:	rcl    BYTE PTR [esi],cl
  421cf2:	sahf   
  421cf3:	xchg   ecx,eax
  421cf4:	js     0x421cde
  421cf6:	mov    dh,0x81
  421cf8:	out    dx,al
  421cf9:	in     eax,0x33
  421cfb:	and    DWORD PTR [ebp-0x3b],eax
  421cfe:	out    dx,al
  421cff:	nop
  421d00:	aad    0xa3
  421d02:	frstor [edi]
  421d04:	fcomp  QWORD PTR [ebp-0x77e03e40]
  421d0a:	sub    esp,DWORD PTR [ebp+0x20e78fad]
  421d10:	inc    ecx
  421d11:	fwait
  421d12:	stc    
  421d13:	xor    ch,BYTE PTR [edx-0x77]
  421d16:	jno    0x421d34
  421d18:	push   esp
  421d19:	cmc    
  421d1a:	mov    esi,0x45eeabc8
  421d1f:	outs   dx,DWORD PTR ds:[esi]
  421d20:	mov    dl,0x1a
  421d22:	test   al,0x2e
  421d24:	and    DWORD PTR [ecx-0x7b],esp
  421d27:	jbe    0x421cbb
  421d29:	xor    dh,ah
  421d2b:	lds    edx,FWORD PTR [edi+esi*1+0x5238c888]
  421d32:	inc    ebp
  421d33:	arpl   WORD PTR [edi+0x4d],bx
  421d36:	aad    0x64
  421d38:	push   0x1f
  421d3a:	dec    edi
  421d3b:	xchg   esp,eax
  421d3c:	je     0x421d0a
  421d3e:	dec    ecx
  421d3f:	in     eax,dx
  421d40:	xchg   ebx,eax
  421d41:	adc    al,0x3d
  421d43:	nop/reserved BYTE PTR [eax+0x45]
  421d47:	push   ds
  421d48:	loop   0x421cdc
  421d4a:	xor    BYTE PTR [edx],ch
  421d4c:	mov    ah,0xd1
  421d4e:	push   esp
  421d4f:	pop    ebx
  421d50:	cs ja  0x421da5
  421d53:	imul   ebx,edx,0xeaf2d305
  421d59:	push   ebx
  421d5a:	sbb    eax,0x99565e49
  421d5f:	mov    ds:0x575f91,eax
  421d64:	xor    BYTE PTR [ebx],ch
  421d66:	fisttp DWORD PTR [edx]
  421d68:	stc    
  421d69:	xchg   edx,eax
  421d6a:	in     eax,0x56
  421d6c:	xchg   ebp,eax
  421d6d:	or     dl,BYTE PTR [ecx+ebp*4+0x30effaab]
  421d74:	test   eax,0x21f099d3
  421d79:	mov    BYTE PTR [eax],0xb0
  421d7c:	inc    edx
  421d7d:	js     0x421d03
  421d7f:	cs out dx,eax
  421d81:	sbb    BYTE PTR [esi],0x7d
  421d84:	jne    0x421d25
  421d86:	enter  0xb15e,0x3a
  421d8a:	shl    al,0x44
  421d8d:	jmp    0x3892cb31
  421d92:	add    bh,ch
  421d94:	shl    DWORD PTR ds:0xe49d3f83,0x9b
  421d9b:	jno    0x421d86
  421d9d:	inc    edx
  421d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d9f:	mov    edx,0x8762473f
  421da4:	push   0x22
  421da6:	inc    esp
  421da7:	fisttp DWORD PTR [ecx+0x1d]
  421daa:	push   edx
  421dab:	ds ins DWORD PTR es:[edi],dx
  421dad:	into   
  421dae:	ror    dh,cl
  421db0:	push   ebp
  421db1:	sbb    BYTE PTR [esi+0x64],bh
  421db4:	aad    0xa4
  421db6:	div    DWORD PTR [ebx]
  421db8:	je     0x421dfb
  421dba:	inc    edi
  421dbb:	jmp    0x97eb:0x2f18dc15
  421dc2:	mov    ds:0x78378455,al
  421dc7:	pop    ebx
  421dc8:	xchg   ecx,eax
  421dc9:	adc    eax,0xe9a8260
  421dce:	sub    bl,BYTE PTR [esi+0x67]
  421dd1:	imul   ebx,DWORD PTR [ebp-0x10],0x7c366b9a
  421dd8:	sbb    DWORD PTR [edi+0x24856955],esp
  421dde:	jg     0x421d8d
  421de0:	std    
  421de1:	minps  xmm0,XMMWORD PTR [ecx]
  421de4:	test   BYTE PTR [esi-0x568294ea],ch
  421dea:	add    edi,ebp
  421dec:	lock push ebx
  421dee:	mov    dl,0xa6
  421df0:	mov    ebx,0x5f0f4a75
  421df5:	pop    ecx
  421df6:	mov    ah,0x6a
  421df8:	xor    BYTE PTR [ebx-0x24],cl
  421dfb:	mov    ebx,fs
  421dfd:	fmul   st(6),st
  421dff:	inc    eax
  421e00:	int    0x7f
  421e02:	cmp    ch,BYTE PTR [eax]
  421e04:	dec    esp
  421e05:	mov    ch,0xeb
  421e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e08:	jl     0x421e2f
  421e0a:	out    dx,eax
  421e0b:	out    dx,eax
  421e0c:	xchg   edi,eax
  421e0d:	pop    ebx
  421e0e:	sub    ch,dl
  421e10:	lods   al,BYTE PTR ds:[esi]
  421e11:	mov    eax,ds:0xf465fc67
  421e16:	pop    ebp
  421e17:	fstp   QWORD PTR [eax*8+0x28703df8]
  421e1e:	cmp    DWORD PTR [ecx],edx
  421e20:	push   es
  421e21:	adc    dh,bl
  421e23:	mov    eax,ds:0x80e54382
  421e28:	jnp    0x421e43
  421e2a:	add    BYTE PTR [ecx-0x5c],bl
  421e2d:	(bad)  
  421e2e:	ja     0x421e03
  421e30:	cmp    al,0x85
  421e32:	sub    ebx,DWORD PTR [ebx-0x223e5ddb]
  421e38:	cs jbe 0x421e54
  421e3b:	cs iret 
  421e3d:	push   ebp
  421e3e:	push   0xbf80a0bd
  421e43:	enter  0x9497,0x71
  421e47:	and    BYTE PTR [esi+0x1c],bh
  421e4a:	and    bl,BYTE PTR [esp+ebp*2-0x72fca14a]
  421e51:	or     esp,ecx
  421e53:	retf   
  421e54:	fbld   TBYTE PTR [ebx]
  421e56:	div    BYTE PTR ds:0xd61c2a0
  421e5c:	lds    esp,FWORD PTR [ebx+ecx*2-0x66]
  421e60:	dec    edx
  421e61:	fistp  QWORD PTR [eax-0x39]
  421e64:	mov    dh,0xc
  421e66:	mov    ch,0x29
  421e68:	das    
  421e69:	mov    esp,?
  421e6b:	dec    eax
  421e6c:	jae    0x421dfd
  421e6e:	popa   
  421e6f:	mov    ecx,0x47c81414
  421e74:	xchg   edx,eax
  421e75:	push   esi
  421e76:	sbb    eax,0x473b525c
  421e7b:	retf   
  421e7c:	mov    eax,0xb71365bf
  421e81:	dec    BYTE PTR [edx+eiz*8+0x63]
  421e85:	fsub   st,st(5)
  421e87:	sub    al,0xa6
  421e89:	fs inc esi
  421e8b:	popa   
  421e8c:	fcomp  QWORD PTR [edx]
  421e8e:	xlat   BYTE PTR ds:[ebx]
  421e8f:	pop    ecx
  421e90:	outs   dx,BYTE PTR ds:[esi]
  421e91:	push   es
  421e92:	xor    al,0x32
  421e94:	stos   BYTE PTR es:[edi],al
  421e95:	mov    ebx,DWORD PTR [edi+0x4a]
  421e98:	xor    al,0x4b
  421e9a:	dec    DWORD PTR [edi-0x345714b]
  421ea0:	jnp    0x421f12
  421ea2:	push   0x6f7a9393
  421ea7:	int    0x2d
  421ea9:	out    dx,eax
  421eaa:	push   ss
  421eab:	jne    0x421ed0
  421ead:	not    BYTE PTR [esi-0x11]
  421eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421eb1:	lods   eax,DWORD PTR ds:[esi]
  421eb2:	cmp    BYTE PTR [esi-0x4ae0fecd],cl
  421eb8:	enter  0xd827,0x57
  421ebc:	and    edi,DWORD PTR [ecx]
  421ebe:	js     0x421f15
  421ec0:	inc    edx
  421ec1:	jbe    0x421ee5
  421ec3:	push   cs
  421ec4:	jno    0x421e76
  421ec6:	scas   al,BYTE PTR es:[edi]
  421ec7:	dec    edx
  421ec8:	sbb    edi,ecx
  421eca:	lods   al,BYTE PTR ds:[esi]
  421ecb:	mov    edx,0x299dd4d9
  421ed0:	div    ebp
  421ed2:	rcl    BYTE PTR [ecx-0x64],0x34
  421ed6:	leave  
  421ed7:	xlat   BYTE PTR ds:[ebx]
  421ed8:	and    al,0xf4
  421eda:	les    eax,FWORD PTR [ebx-0x1a8b6ddc]
  421ee0:	inc    eax
  421ee1:	xor    BYTE PTR [ebp-0x3b],ch
  421ee4:	jg     0x421f28
  421ee6:	mov    dh,0x29
  421ee8:	es mov al,0x55
  421eeb:	mov    ?,WORD PTR [eax+0x2a]
  421eee:	out    0xb3,eax
  421ef0:	cmp    al,0x37
  421ef2:	mov    bh,0x4d
  421ef4:	sub    esi,ebp
  421ef6:	mov    eax,ds:0x854e9064
  421efb:	pop    es
  421efc:	dec    edi
  421efd:	mov    ds:0x1807e26b,al
  421f02:	dec    ecx
  421f03:	mov    dl,al
  421f05:	jl     0x421f21
  421f07:	and    bl,BYTE PTR [edx-0x175218df]
  421f0d:	in     eax,dx
  421f0e:	or     eax,0x4b906965
  421f13:	xchg   esi,eax
  421f14:	fsubr  st,st(2)
  421f16:	ret    
  421f17:	pop    esi
  421f18:	mov    al,ds:0x9a687d1d
  421f1d:	mov    esi,0xe8bd083e
  421f22:	test   eax,0x87f4e83d
  421f27:	mov    bl,0x44
  421f29:	mov    edi,0xd62a295a
  421f2e:	arpl   WORD PTR [edi-0x5d],bp
  421f31:	jecxz  0x421f1c
  421f33:	aaa    
  421f34:	xchg   ebx,eax
  421f35:	int    0x45
  421f37:	ret    0x94ed
  421f3a:	dec    edi
  421f3b:	test   al,0x34
  421f3d:	cld    
  421f3e:	or     al,0x8f
  421f40:	mov    dl,0x6e
  421f42:	pop    edi
  421f43:	aad    0x51
  421f45:	fsubr  st,st(0)
  421f47:	hlt    
  421f48:	enter  0xcc22,0x39
  421f4c:	out    dx,al
  421f4d:	sub    BYTE PTR [edi+0x630f2cb],cl
  421f53:	push   0x85543cea
  421f58:	test   al,0x95
  421f5a:	sub    DWORD PTR [eax-0x412db23c],ebx
  421f60:	ds out dx,eax
  421f62:	fdivp  st(0),st
  421f64:	cmp    BYTE PTR [esi],cl
  421f66:	cdq    
  421f67:	(bad)  
  421f68:	sbb    BYTE PTR [edx],dl
  421f6a:	mov    ebp,DWORD PTR ss:[eax+0x50d91236]
  421f71:	mov    BYTE PTR [esp+ecx*8+0x63],ch
  421f75:	inc    edx
  421f76:	and    al,0x76
  421f78:	adc    DWORD PTR [ecx+0x70],edi
  421f7b:	popa   
  421f7c:	in     al,0xf
  421f7e:	and    BYTE PTR [ebx+0x72],ch
  421f81:	sbb    eax,0xdb9c9128
  421f86:	pop    ss
  421f87:	cmp    DWORD PTR [ecx],esi
  421f89:	mov    ds:0x935cda61,al
  421f8e:	lea    ebx,[eax+0x50]
  421f91:	ja     0x421f7e
  421f93:	push   esp
  421f94:	pop    ebp
  421f95:	(bad)  
  421f96:	fistp  WORD PTR [ecx+0x53c442e8]
  421f9c:	pop    eax
  421f9d:	es and eax,0xe3772757
  421fa3:	ret    0x2077
  421fa6:	repnz mov ds:0xa5497615,al
  421fac:	mov    cs,WORD PTR [esi+0x1]
  421faf:	push   0x9b887560
  421fb4:	ftst   
  421fb6:	jo     0x422002
  421fb8:	mov    DWORD PTR [edx],edx
  421fba:	ret    0x8d66
  421fbd:	int3   
  421fbe:	std    
  421fbf:	les    esi,FWORD PTR [edx+esi*8]
  421fc2:	push   ss
  421fc3:	in     eax,0x82
  421fc5:	shl    DWORD PTR [esi],cl
  421fc7:	sbb    al,cl
  421fc9:	mov    es,eax
  421fcb:	les    ecx,FWORD PTR ds:0xffa91206
  421fd1:	scas   al,BYTE PTR es:[edi]
  421fd2:	out    dx,al
  421fd3:	xor    eax,0x9b02df2d
  421fd8:	pop    es
  421fd9:	mov    ds:0xf8b9d2ce,al
  421fde:	mov    ch,0xf7
  421fe0:	not    DWORD PTR [edi]
  421fe2:	mov    eax,0xac97abb9
  421fe7:	out    0x6f,al
  421fe9:	fidivr DWORD PTR [ecx]
  421feb:	fcmovu st,st(2)
  421fed:	fnstcw WORD PTR [edx]
  421fef:	sbb    BYTE PTR [eax-0x50c129f2],ah
  421ff5:	jo     0x421f8e
  421ff7:	aaa    
  421ff8:	add    dl,BYTE PTR [edi+0x6d8922f4]
  421ffe:	xchg   DWORD PTR [edx+ebp*1],edx
  422001:	retf   
  422002:	rol    DWORD PTR [edi+0x2099e579],cl
  422008:	add    BYTE PTR [eax+0xa],ah
  42200b:	jmp    0xbd5:0xf274cc4e
  422012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422013:	callw  0x9390
  422017:	jns    0x421ffd
  422019:	push   edi
  42201a:	es pop ss
  42201c:	(bad)  [ecx-0x22a85f3d]
  422022:	jns    0x421fef
  422024:	cmp    DWORD PTR [edi],ecx
  422026:	adc    BYTE PTR [ebx],al
  422028:	mov    dl,0xaa
  42202a:	mov    fs,WORD PTR [edi]
  42202c:	push   ebp
  42202d:	arpl   WORD PTR [edx+0x6f8a614c],si
  422033:	mov    ebp,DWORD PTR [ecx+ecx*4]
  422036:	retf   0x9e9a
  422039:	xchg   esp,eax
  42203a:	xchg   edi,eax
  42203b:	xchg   edx,eax
  42203c:	mov    gs,WORD PTR [edi-0x7a]
  42203f:	mov    edx,0xa711ff63
  422044:	cli    
  422045:	stc    
  422046:	xchg   edi,eax
  422047:	out    0xdc,eax
  422049:	fisttp DWORD PTR [edx+0x63]
  42204c:	mov    ch,0x49
  42204e:	retf   0x688
  422051:	imul   edi,DWORD PTR [ebp-0x607395e1],0xffffffb1
  422058:	cli    
  422059:	retf   0x9ce7
  42205c:	cmp    ch,BYTE PTR [ebx]
  42205e:	xchg   esp,eax
  42205f:	mov    esp,0xdaeaa1d0
  422064:	ficomp WORD PTR [ebp+0x7f]
  422067:	fsub   QWORD PTR [edi]
  422069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42206a:	fld    QWORD PTR [ebx+0x57532d95]
  422070:	jg     0x4220d1
  422072:	loopne 0x422083
  422074:	data16 cs (bad) 
  422077:	pop    eax
  422078:	imul   ebp,ebp,0xfffffff6
  42207b:	daa    
  42207c:	and    DWORD PTR [ebp+0x4dab8220],eax
  422082:	push   esi
  422083:	inc    edx
  422084:	and    al,0x4d
  422086:	mov    fs,WORD PTR [edi+0x19]
  422089:	push   edx
  42208a:	jmp    0xf1d7012c
  42208f:	mov    ax,0x5308
  422093:	and    DWORD PTR [edi],ebp
  422095:	pop    es
  422096:	stc    
  422097:	adc    ch,BYTE PTR [eax-0x7d5cbe89]
  42209d:	sub    al,ah
  42209f:	mov    dh,0xc2
  4220a1:	out    dx,eax
  4220a2:	jmp    0xf9b7170
  4220a7:	ret    0x4fee
  4220aa:	sub    bh,al
  4220ac:	js     0x4220bf
  4220ae:	or     eax,0x5fe9e079
  4220b3:	inc    esp
  4220b4:	aaa    
  4220b5:	xchg   edi,eax
  4220b6:	out    dx,al
  4220b7:	mov    cl,0x16
  4220b9:	sub    DWORD PTR ds:0x820bc962,edi
  4220bf:	push   esp
  4220c0:	xchg   BYTE PTR [edi+0x3d4c6386],dl
  4220c6:	loop   0x422050
  4220c8:	outs   dx,DWORD PTR ds:[esi]
  4220c9:	push   eax
  4220ca:	pushf  
  4220cb:	retf   0x9e
  4220ce:	mov    bh,0x75
  4220d0:	out    0xdd,eax
  4220d2:	dec    ebx
  4220d3:	jne    0x422100
  4220d5:	fdiv   DWORD PTR [ecx-0x72]
  4220d8:	inc    esi
  4220d9:	push   edx
  4220da:	cdq    
  4220db:	inc    esp
  4220dc:	cli    
  4220dd:	jne    0x422156
  4220df:	fistp  QWORD PTR [ecx]
  4220e1:	cs loop 0x42215b
  4220e4:	pop    ss
  4220e5:	popf   
  4220e6:	mov    bh,0xbd
  4220e8:	(bad)  
  4220e9:	and    edi,DWORD PTR [esi-0x70]
  4220ec:	cs loop 0x4220b9
  4220ef:	dec    esi
  4220f0:	cmp    bl,cl
  4220f2:	repnz push esi
  4220f4:	lea    edi,[ebp-0x24]
  4220f7:	mov    bh,0x45
  4220f9:	cmp    eax,0x58d6b736
  4220fe:	mov    dl,0x74
  422100:	cmp    DWORD PTR [edi+0x2cc53797],ebx
  422106:	ret    0xe99f
  422109:	xlat   BYTE PTR ds:[ebx]
  42210a:	xor    al,0xd0
  42210c:	cs pop ebp
  42210e:	cmp    eax,0x2270c2a5
  422113:	add    eax,0x5474efcd
  422118:	jg     0x42212d
  42211a:	neg    DWORD PTR [ecx+edi*2+0x21297efd]
  422121:	inc    edx
  422122:	push   DWORD PTR [esi+0x73]
  422125:	ss cmc 
  422127:	fimul  DWORD PTR gs:[ecx-0x70]
  42212b:	dec    esp
  42212c:	xchg   esp,eax
  42212d:	daa    
  42212e:	popf   
  42212f:	fnstcw WORD PTR [esi]
  422131:	add    edi,DWORD PTR [ecx]
  422133:	cmp    BYTE PTR [esi+0x55],cl
  422136:	push   esi
  422137:	in     eax,0xa5
  422139:	bnd jge 0x4221b4
  42213c:	mov    edx,0x87365286
  422141:	(bad)  
  422142:	std    
  422143:	add    eax,0x93448e79
  422148:	sbb    cl,BYTE PTR [ebx+0x36]
  42214b:	retf   0x1f77
  42214e:	pop    es
  42214f:	ins    DWORD PTR es:[edi],dx
  422150:	ret    
  422151:	(bad)  
  422152:	ds xchg edx,eax
  422154:	push   eax
  422155:	jnp    0x422112
  422157:	cli    
  422158:	xchg   BYTE PTR [edi+esi*4-0x52165d00],dl
  42215f:	sub    BYTE PTR [esi],ch
  422161:	inc    ebx
  422162:	test   al,0xca
  422164:	adc    ebx,DWORD PTR [ecx-0x6bdf66e6]
  42216a:	cmp    al,0xa2
  42216c:	aad    0xf8
  42216e:	stos   DWORD PTR es:[edi],eax
  42216f:	push   esp
  422170:	cmp    eax,0xe1cf2d63
  422175:	fisubr WORD PTR [ebx+0x54]
  422178:	sbb    esi,0xffffffc2
  42217b:	sub    eax,0xd3ef526d
  422180:	xor    DWORD PTR [edx],ebp
  422182:	jmp    0x95aa:0xb559f786
  422189:	pushf  
  42218a:	shl    BYTE PTR [edi],cl
  42218c:	out    dx,eax
  42218d:	mov    esp,0xd2f10114
  422192:	sahf   
  422193:	das    
  422194:	pop    ebx
  422195:	cwde   
  422196:	inc    eax
  422197:	lods   eax,DWORD PTR ds:[esi]
  422198:	lahf   
  422199:	arpl   bx,di
  42219b:	mov    edi,0xf1eb90b4
  4221a0:	add    DWORD PTR [esi+0x51],ebp
  4221a3:	xor    BYTE PTR [esi-0x726d9d91],al
  4221a9:	popf   
  4221aa:	xchg   esp,edx
  4221ac:	dec    edx
  4221ad:	shl    cl,0x5b
  4221b0:	cmp    BYTE PTR [edi],bl
  4221b2:	xor    BYTE PTR [eax+eax*4+0x159b19f6],0x51
  4221ba:	push   ebp
  4221bb:	xchg   esi,ecx
  4221bd:	pushf  
  4221be:	mov    al,0x73
  4221c0:	jmp    0x1869:0xbfa992b4
  4221c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221c8:	loop   0x422156
  4221ca:	cmp    ebp,ebx
  4221cc:	rcl    BYTE PTR [edi],1
  4221ce:	adc    ebp,eax
  4221d0:	lahf   
  4221d1:	pop    edx
  4221d2:	scas   eax,DWORD PTR es:[edi]
  4221d3:	aas    
  4221d4:	pop    edi
  4221d5:	push   0x5542b57d
  4221da:	call   DWORD PTR [ebp-0x73]
  4221dd:	xchg   esi,eax
  4221de:	cmp    al,0x4d
  4221e0:	mov    al,0x80
  4221e2:	sahf   
  4221e3:	xchg   ecx,eax
  4221e4:	mov    ah,0xe0
  4221e6:	(bad)  
  4221e7:	pop    eax
  4221e8:	jne    0x42224f
  4221ea:	push   esp
  4221eb:	push   0xa9fdb2c0
  4221f0:	ds xchg esi,eax
  4221f2:	ret    
  4221f3:	popf   
  4221f4:	push   eax
  4221f5:	loop   0x422227
  4221f7:	pop    ss
  4221f8:	pop    ebx
  4221f9:	dec    eax
  4221fa:	mov    BYTE PTR [ecx],dh
  4221fc:	lea    eax,[edi]
  4221fe:	imul   eax,ebp,0x528adf4c
  422204:	and    al,0xc1
  422206:	xor    eax,DWORD PTR [edx]
  422208:	or     DWORD PTR [ecx],0xffffffd3
  42220b:	inc    esp
  42220c:	xchg   ebp,eax
  42220d:	pop    ebp
  42220e:	cli    
  42220f:	jl     0x42223a
  422211:	(bad)  
  422212:	scas   al,BYTE PTR es:[edi]
  422213:	mov    ch,0x52
  422215:	es scas al,BYTE PTR es:[edi]
  422217:	push   ebp
  422218:	sub    dh,bl
  42221a:	out    dx,eax
  42221b:	add    BYTE PTR [edx-0x221fa657],ch
  422221:	sub    ebp,DWORD PTR [ecx]
  422223:	mov    ch,0xcc
  422225:	cdq    
  422226:	push   ds
  422227:	cs retf 
  422229:	jne    0x4221e1
  42222b:	xor    DWORD PTR [esi],esi
  42222d:	dec    esi
  42222e:	mov    esp,0xb2f5792e
  422233:	xchg   esi,eax
  422234:	add    dl,BYTE PTR [ebp-0x1a]
  422237:	pop    ebp
  422238:	sub    ah,dl
  42223a:	inc    edi
  42223b:	das    
  42223c:	adc    al,0x40
  42223e:	cmp    cl,BYTE PTR [ebx-0x4ca6a556]
  422244:	ins    BYTE PTR es:[edi],dx
  422245:	sub    al,0x9b
  422247:	pop    ss
  422248:	iret   
  422249:	sub    al,0x97
  42224b:	aam    0x94
  42224d:	mov    DWORD PTR [esi],esi
  42224f:	mov    eax,ds:0x697e7a73
  422254:	fnstsw WORD PTR ds:0x14c0ab3a
  42225a:	xor    BYTE PTR [esi+eiz*4],0x40
  42225e:	ins    BYTE PTR es:[edi],dx
  42225f:	push   ebx
  422260:	icebp  
  422261:	add    al,0x93
  422263:	or     eax,0xdf121e9
  422268:	(bad)  
  422269:	test   al,0x6b
  42226b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42226c:	push   ss
  42226d:	les    edx,FWORD PTR [esi]
  42226f:	push   edx
  422270:	nop
  422271:	pop    ss
  422272:	sub    al,0xe
  422274:	sub    al,0x27
  422276:	stc    
  422277:	fld    QWORD PTR [ebx+0x1]
  42227a:	xlat   BYTE PTR ds:[ebx]
  42227b:	in     al,dx
  42227c:	sub    ah,BYTE PTR [ebp+0x69]
  42227f:	(bad)  
  422280:	cmp    esp,DWORD PTR ds:[eax+esi*2]
  422284:	popa   
  422285:	adc    al,0xd8
  422287:	or     ebx,DWORD PTR [eax]
  422289:	fcom   QWORD PTR [edx]
  42228b:	stos   BYTE PTR es:[edi],al
  42228c:	cmc    
  42228d:	dec    esp
  42228e:	push   0xffffffb3
  422290:	or     DWORD PTR [esp+ebx*8],ebx
  422293:	nop
  422294:	hlt    
  422295:	(bad)  
  422296:	in     al,dx
  422297:	mov    bl,0x4a
  422299:	loope  0x422235
  42229b:	icebp  
  42229c:	int    0xec
  42229e:	dec    ecx
  42229f:	outs   dx,DWORD PTR ds:[esi]
  4222a0:	popf   
  4222a1:	ds mov ?,esi
  4222a4:	ins    DWORD PTR es:[edi],dx
  4222a5:	fstp   TBYTE PTR [edi+ebp*1-0x3d84b808]
  4222ac:	call   0x806b9e1
  4222b1:	in     al,dx
  4222b2:	mov    eax,0x6d11cd2d
  4222b7:	bound  esi,QWORD PTR [eax-0xe]
  4222ba:	cmp    BYTE PTR ds:[ecx-0x5e],dh
  4222be:	and    BYTE PTR [edi],bl
  4222c0:	xchg   edi,eax
  4222c1:	ret    0xe638
  4222c4:	or     ebp,0x28
  4222c7:	out    0x1c,eax
  4222c9:	or     al,0x8b
  4222cb:	pop    es
  4222cc:	mov    esi,0x139257e2
  4222d1:	jecxz  0x42229b
  4222d3:	xor    ch,BYTE PTR [esi+ebx*4+0xe]
  4222d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222d8:	mov    eax,ds:0xdf9fbb35
  4222dd:	rol    dh,cl
  4222df:	jb     0x422314
  4222e1:	add    BYTE PTR [ebp*2-0x5ef35b24],cl
  4222e8:	push   ecx
  4222e9:	loope  0x4222c3
  4222eb:	bound  esi,QWORD PTR [edi]
  4222ed:	push   edi
  4222ee:	out    dx,al
  4222ef:	test   BYTE PTR [ebx+0x5c6a5926],al
  4222f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222f6:	dec    eax
  4222f7:	cdq    
  4222f8:	jmp    0x1f26:0xb3541e9e
  4222ff:	adc    DWORD PTR [eax+0x5c943915],ebp
  422305:	test   DWORD PTR ss:[eax+ecx*1],ebx
  422309:	outs   dx,DWORD PTR ds:[esi]
  42230a:	xor    DWORD PTR [edx+0x5e10270d],edi
  422310:	jle    0x4222ed
  422312:	xchg   ebp,eax
  422313:	adc    al,0x36
  422315:	scas   al,BYTE PTR es:[edi]
  422316:	rcl    BYTE PTR [ecx],1
  422318:	dec    cl
  42231a:	inc    ebp
  42231b:	jge    0x422316
  42231d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42231e:	pop    es
  42231f:	ret    0x7988
  422322:	bound  ebp,QWORD PTR [esi]
  422324:	ins    DWORD PTR es:[edi],dx
  422325:	pushf  
  422326:	out    0x42,eax
  422328:	fldenv [edx]
  42232a:	inc    edx
  42232b:	and    DWORD PTR [ebx],esi
  42232d:	in     al,dx
  42232e:	sbb    ebp,DWORD PTR ds:0xb1b38f4c
  422334:	jge    0x4222bb
  422336:	test   eax,0x3ca0bd87
  42233b:	lea    esi,[ebx-0x54b06b6b]
  422341:	icebp  
  422342:	fyl2x  
  422344:	popf   
  422345:	lock aad 0x20
  422348:	mov    bl,0xbb
  42234a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42234b:	fwait
  42234c:	pop    esi
  42234d:	fst    st(2)
  42234f:	mov    al,ds:0xfd2f8383
  422354:	jne    0x4222e8
  422356:	loope  0x42230e
  422358:	cwde   
  422359:	inc    esi
  42235a:	ins    DWORD PTR es:[edi],dx
  42235b:	test   DWORD PTR [edx-0x25fcd4],esp
  422361:	xchg   ebx,eax
  422362:	and    edi,DWORD PTR [ebp+0x2f]
  422365:	sub    al,0x36
  422367:	push   edx
  422368:	sub    DWORD PTR [edi-0x11],eax
  42236b:	imul   ebp,ebp,0xa9616ae9
  422371:	mov    dh,BYTE PTR [eax]
  422373:	or     edi,0x125e4d55
  422379:	mov    BYTE PTR [eax+0x206bd54c],ch
  42237f:	(bad)  
  422380:	dec    esi
  422381:	cli    
  422382:	sbb    DWORD PTR [ebp-0x4b36fa26],edx
  422388:	xlat   BYTE PTR fs:[ebx]
  42238a:	test   DWORD PTR [edx+edx*8+0x59],0x479df578
  422392:	jg     0x422377
  422394:	es sub al,0xe
  422397:	jle    0x42239f
  422399:	out    0x46,al
  42239b:	shl    BYTE PTR [ebx+0x2171b995],1
  4223a1:	cmp    al,0xba
  4223a3:	xor    ebx,0x12
  4223a6:	enter  0x5f92,0x86
  4223aa:	pop    eax
  4223ab:	jle    0x422403
  4223ad:	or     esi,DWORD PTR [ecx-0x6a962e8a]
  4223b3:	or     esi,esp
  4223b5:	ret    0x775f
  4223b8:	mov    ds:0x177e02bb,eax
  4223bd:	lahf   
  4223be:	mov    al,ds:0xb275c3ef
  4223c3:	(bad)  
  4223c4:	outs   dx,BYTE PTR ds:[esi]
  4223c5:	and    BYTE PTR [ebp+0x56],cl
  4223c8:	clc    
  4223c9:	enterw 0x1ac,0x4d
  4223ce:	adc    esp,eax
  4223d0:	nop
  4223d1:	or     ch,BYTE PTR [edi+ebx*8-0x1df57c5]
  4223d8:	adc    DWORD PTR ds:0xe39926c3,ebx
  4223de:	bound  ecx,QWORD PTR [eax-0x37]
  4223e1:	mov    ebp,0x100a0e62
  4223e6:	xlat   BYTE PTR ds:[ebx]
  4223e7:	jns    0x42236b
  4223e9:	add    al,0xab
  4223eb:	sub    al,BYTE PTR [esi+0x14]
  4223ee:	xor    eax,0x6c
  4223f1:	lahf   
  4223f2:	pop    es
  4223f3:	aam    0x9c
  4223f5:	imul   esi,DWORD PTR [ebx-0x32618bc],0x6b19baf3
  4223ff:	push   ebp
  422400:	fistp  DWORD PTR [esp+edx*2]
  422403:	das    
  422404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422405:	mov    al,0x61
  422407:	jne    0x4223b5
  422409:	pop    ds
  42240a:	jg     0x422414
  42240c:	mov    edi,ebx
  42240e:	stos   BYTE PTR es:[edi],al
  42240f:	mov    bl,0xcc
  422411:	test   al,0x14
  422413:	mov    dh,0xd0
  422415:	(bad)  
  422417:	mov    WORD PTR [ecx],fs
  422419:	outs   dx,DWORD PTR ds:[esi]
  42241a:	sar    BYTE PTR [edi+0x17638b15],1
  422420:	(bad)  
  422421:	push   ebx
  422422:	mov    al,ds:0xa9af6262
  422427:	mov    ebp,0xea73a346
  42242c:	sahf   
  42242d:	dec    edi
  42242e:	and    eax,0xb3335e95
  422433:	inc    ebx
  422434:	and    eax,0xfc7dcfec
  422439:	ret    
  42243a:	cmp    bh,BYTE PTR [ebp-0x2fe05a29]
  422440:	dec    ecx
  422441:	add    ebx,eax
  422443:	les    ecx,FWORD PTR ss:[eax]
  422446:	xor    BYTE PTR [ebx-0x36],ah
  422449:	or     BYTE PTR [edx+0x3fb2d673],bh
  42244f:	mov    ds:0xfdde5e1b,eax
  422454:	add    DWORD PTR [esi],ebx
  422456:	mov    bl,0xf1
  422458:	loope  0x4224cd
  42245a:	push   cs
  42245b:	push   edx
  42245c:	icebp  
  42245d:	inc    ebp
  42245e:	repz pop ecx
  422460:	enter  0x30e4,0xdb
  422464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422465:	lahf   
  422466:	add    DWORD PTR [edi-0x32],ecx
  422469:	adc    DWORD PTR [edi+0x8],esi
  42246c:	hlt    
  42246d:	hlt    
  42246e:	fbld   TBYTE PTR [edi+0x5835803a]
  422474:	cmp    DWORD PTR [edi-0x3ab117af],ecx
  42247a:	test   DWORD PTR ds:0x2253c96e,ecx
  422480:	adc    eax,0x15d64776
  422485:	mov    eax,0x5ce3c939
  42248a:	bound  edx,QWORD PTR ds:0x1bca539f
  422490:	dec    edi
  422491:	loop   0x42248c
  422493:	int    0x7c
  422495:	and    DWORD PTR [ebp-0x3c],edx
  422498:	(bad)  
  42249a:	and    BYTE PTR [edi],al
  42249c:	jg     0x4224a9
  42249e:	dec    edx
  42249f:	mov    eax,ds:0x67d9dabc
  4224a4:	in     al,0x40
  4224a6:	push   ecx
  4224a7:	cmp    BYTE PTR [esi-0x2d1838ce],cl
  4224ad:	mov    ds,WORD PTR [edx+0x11]
  4224b0:	xor    bh,BYTE PTR [eax-0x5c096840]
  4224b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224b7:	sti    
  4224b8:	add    eax,0x15bba202
  4224bd:	add    BYTE PTR [esi+0x65f162ee],al
  4224c3:	leave  
  4224c4:	sti    
  4224c5:	stc    
  4224c6:	or     al,0x62
  4224c8:	pop    es
  4224c9:	fbstp  TBYTE PTR [edi+0x5d25fc32]
  4224cf:	loope  0x422521
  4224d1:	or     BYTE PTR [eax+0x44],ah
  4224d4:	xchg   edx,eax
  4224d5:	test   BYTE PTR [esp+edi*4],ah
  4224d8:	xor    ch,BYTE PTR ds:0xbe3208bf
  4224de:	pop    es
  4224df:	cmp    al,0x87
  4224e1:	pop    edi
  4224e2:	pop    ebp
  4224e3:	out    0xd0,eax
  4224e5:	into   
  4224e6:	adc    BYTE PTR [esi+0xf],0x58
  4224ea:	pop    esp
  4224eb:	fcomp  QWORD PTR [edi]
  4224ed:	dec    edi
  4224ee:	shr    BYTE PTR [edx],1
  4224f0:	adc    eax,DWORD PTR [edi-0x433886a0]
  4224f6:	fmulp  st(2),st
  4224f8:	std    
  4224f9:	repz mov cl,0xd7
  4224fc:	push   ss
  4224fd:	stos   DWORD PTR es:[edi],eax
  4224fe:	mov    ah,0xde
  422500:	mov    ds:0x47654ec0,eax
  422505:	push   es
  422506:	sbb    DWORD PTR [eax+0x454af0e5],ecx
  42250c:	xor    al,0x4e
  42250e:	adc    DWORD PTR [ebp-0x6f1e728f],0x55abfa9b
  422518:	sub    al,0x88
  42251a:	sub    BYTE PTR [ebp+0x78],bh
  42251d:	mov    al,0x1a
  42251f:	xchg   esp,eax
  422520:	enter  0xf18,0x50
  422524:	mov    edx,0x818358eb
  422529:	xchg   ebp,eax
  42252a:	inc    edi
  42252b:	jl     0x422545
  42252d:	sub    bh,BYTE PTR [ebx+edx*4]
  422530:	add    eax,0xaeaf7e4b
  422535:	imul   esi,DWORD PTR [ebx],0x6585f4f9
  42253b:	lds    edi,FWORD PTR [eax-0x73]
  42253e:	cmp    al,0x58
  422540:	leave  
  422541:	test   BYTE PTR [edx+0x7b3e83f1],al
  422547:	sbb    al,0x8c
  422549:	jle    0x422567
  42254b:	xchg   edi,eax
  42254c:	adc    ebx,esi
  42254e:	jg     0x4224d4
  422550:	sbb    BYTE PTR [ebp+0x40],al
  422553:	mov    edx,0xc29ad31a
  422558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422559:	xor    DWORD PTR [ecx+0x3f28e911],esp
  42255f:	fisttp QWORD PTR [ebx]
  422561:	or     BYTE PTR [eax],0xf2
  422564:	mov    dh,BYTE PTR [ebx-0x4c5dd4ca]
  42256a:	add    al,0x8f
  42256c:	xchg   ebx,eax
  42256d:	mov    ch,BYTE PTR [edx+0x75e56c6d]
  422573:	xchg   edx,eax
  422574:	fisttp DWORD PTR [edi-0x4654b0a]
  42257a:	sbb    ebx,DWORD PTR [esi+0x45]
  42257d:	mov    ebp,0xaf623bd7
  422582:	in     eax,0x15
  422584:	inc    esi
  422585:	scas   al,BYTE PTR es:[edi]
  422586:	repz add BYTE PTR [eax],ah
  422589:	call   0xa566cd20
  42258e:	push   ecx
  42258f:	or     cl,BYTE PTR [esp+eiz*8-0x30]
  422593:	xor    ebp,esi
  422595:	or     bh,al
  422597:	cli    
  422598:	mov    bl,0x54
  42259a:	aad    0x59
  42259c:	in     eax,dx
  42259d:	mov    bh,0x46
  42259f:	mov    esi,gs
  4225a1:	xor    eax,0x28c1fad5
  4225a6:	dec    esp
  4225a7:	(bad)  
  4225a8:	out    dx,al
  4225a9:	xchg   ebx,eax
  4225aa:	repz retf 0x72bb
  4225ae:	add    al,0x7c
  4225b0:	mov    ds:0xf9e3173e,al
  4225b5:	mov    bl,0x4a
  4225b7:	loop   0x422585
  4225b9:	xchg   DWORD PTR [ecx+0x1],edi
  4225bc:	fnstenv [ebx]
  4225be:	mov    bl,0x72
  4225c0:	gs inc esi
  4225c2:	ins    DWORD PTR es:[edi],dx
  4225c3:	push   cs
  4225c4:	dec    eax
  4225c5:	cmp    edx,DWORD PTR [edi+0x71]
  4225c8:	fisttp WORD PTR [edx+0x78]
  4225cb:	pop    ss
  4225cc:	mov    ds:0x6d5fb69,al
  4225d1:	rol    DWORD PTR [ebx],1
  4225d3:	shl    DWORD PTR [edx-0x77],1
  4225d6:	inc    esp
  4225d7:	mov    edx,0x8a4dd9f2
  4225dc:	jae    0x42260b
  4225de:	and    bh,BYTE PTR [ebx+0x32ec3827]
  4225e4:	test   BYTE PTR [eax+edi*8],cl
  4225e7:	push   eax
  4225e8:	mov    al,ds:0x781ce3d7
  4225ed:	scas   al,BYTE PTR es:[edi]
  4225ee:	pop    esi
  4225ef:	add    ah,BYTE PTR [ebx]
  4225f1:	hlt    
  4225f2:	aad    0x96
  4225f4:	clc    
  4225f5:	jg     0x4225b5
  4225f7:	sub    BYTE PTR [edx],bl
  4225f9:	push   0xc8cd68f8
  4225fe:	dec    ebx
  4225ff:	pop    es
  422600:	mov    edx,0x77ab048
  422605:	js     0x4225a4
  422607:	and    al,0x5d
  422609:	mov    edx,0x775b9ce4
  42260e:	xchg   esp,eax
  42260f:	in     al,dx
  422610:	(bad)  
  422611:	push   ebx
  422612:	lock pop edx
  422614:	adc    dh,BYTE PTR [ecx-0x798a55f2]
  42261a:	jae    0x4225fe
  42261c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42261d:	cmc    
  42261e:	mov    ebp,0xc74cebd4
  422623:	ds fsqrt 
  422626:	sbb    al,0xf7
  422628:	dec    eax
  422629:	adc    DWORD PTR [ecx],esp
  42262b:	inc    esi
  42262c:	dec    esi
  42262d:	cld    
  42262e:	xchg   dl,al
  422630:	mov    esi,ebx
  422632:	out    dx,al
  422633:	popf   
  422634:	neg    DWORD PTR ds:0xa36ff9d8
  42263a:	pop    es
  42263b:	mov    ecx,0x7ebb2f97
  422640:	test   al,0x6c
  422642:	ds push ds
  422644:	inc    ebx
  422645:	out    0xd0,eax
  422647:	ror    DWORD PTR [ecx+0x5b713c05],0x43
  42264e:	iret   
  42264f:	push   cs
  422650:	xchg   ebp,eax
  422651:	cmp    DWORD PTR [edi],esp
  422653:	aad    0xce
  422655:	outs   dx,BYTE PTR ds:[esi]
  422656:	mov    dl,0x15
  422658:	mov    ah,0x32
  42265a:	pop    eax
  42265b:	jne    0x422618
  42265d:	xchg   ebx,eax
  42265e:	mov    ds,edi
  422660:	mov    esi,0x305f183b
  422665:	sub    dh,BYTE PTR [edx-0x47a746fa]
  42266b:	loopne 0x42263b
  42266d:	mov    ds:0xf3c4a8b2,al
  422672:	inc    ebp
  422673:	mov    ecx,0x72ede70e
  422678:	addr16 pop ebx
  42267a:	ds push ecx
  42267c:	mov    WORD PTR [ebx],si
  42267f:	mov    ebp,0x50786a24
  422684:	dec    esp
  422685:	cmp    DWORD PTR [esi+eax*1],edi
  422688:	xchg   dh,bh
  42268a:	push   ebp
  42268b:	fiadd  WORD PTR [ebx]
  42268d:	data16 jb 0x4226d9
  422690:	cld    
  422691:	push   ss
  422692:	call   0xc2f7:0x2c704578
  422699:	jle    0x42266b
  42269b:	call   0xc03144c3
  4226a0:	ds and bh,ah
  4226a3:	mov    eax,0x3564ef31
  4226a8:	(bad)  
  4226aa:	sbb    eax,0x724506d5
  4226af:	ret    
  4226b0:	mov    dh,0x14
  4226b2:	fistp  QWORD PTR [ebp+0x46]
  4226b5:	ret    0x3c3f
  4226b8:	jl     0x422665
  4226ba:	xor    al,BYTE PTR [ecx-0x70]
  4226bd:	enter  0x12b2,0x22
  4226c1:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4226c3:	aad    0xda
  4226c5:	mov    dh,0xaa
  4226c7:	push   edi
  4226c8:	ja     0x4226ca
  4226ca:	sub    DWORD PTR [eax-0x4aaa4977],0xea1e3cab
  4226d4:	out    0x6a,eax
  4226d6:	frstor [ebp+0x73]
  4226d9:	call   0x65415de9
  4226de:	outs   dx,BYTE PTR ds:[esi]
  4226df:	push   ss
  4226e0:	cmp    DWORD PTR [esi+0x23dda690],edx
  4226e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226e7:	mov    al,ds:0x21914a3a
  4226ec:	(bad)  
  4226ee:	ja     0x422711
  4226f0:	xchg   esp,eax
  4226f1:	push   es
  4226f2:	out    dx,al
  4226f3:	adc    eax,DWORD PTR [edx]
  4226f5:	nop
  4226f6:	ror    DWORD PTR [edx-0x36393984],0x1f
  4226fd:	mov    eax,DWORD PTR [ecx+0x50526ca]
  422703:	mov    edi,0xbcb45934
  422708:	add    esi,ecx
  42270a:	push   ecx
  42270b:	out    0x46,eax
  42270d:	data16 jbe 0x422693
  422710:	retf   0xab48
  422713:	js     0x42273b
  422715:	sbb    DWORD PTR gs:[edi-0x23],eax
  422719:	cmp    edx,DWORD PTR ds:0x3a23bd64
  42271f:	mov    eax,ds:0x95e6d87f
  422724:	fadd   QWORD PTR [ebx]
  422726:	(bad)  
  422727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422728:	mov    eax,eax
  42272a:	clc    
  42272b:	aad    0x44
  42272d:	mov    esi,ss
  42272f:	jb     0x4226c2
  422731:	fmul   DWORD PTR [edx+0x1b]
  422734:	mov    bl,0x7
  422736:	sbb    DWORD PTR [edi],eax
  422738:	jmp    0x9b60fc5f
  42273d:	jae    0x42279b
  42273f:	dec    ebx
  422740:	push   ebp
  422741:	adc    DWORD PTR [esi-0x4d9dd85],ebp
  422747:	xchg   esi,eax
  422748:	clc    
  422749:	push   ebx
  42274a:	ret    
  42274b:	ficomp WORD PTR [esi+eiz*4+0x56]
  42274f:	out    0x17,eax
  422751:	out    dx,al
  422752:	adc    BYTE PTR [eax-0x2282b99d],0x1
  422759:	and    bh,BYTE PTR [ebx]
  42275b:	push   0x6eb59d6f
  422760:	jg     0x4226f8
  422762:	xchg   DWORD PTR [eax-0x6476c732],eax
  422768:	push   esi
  422769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42276a:	pushf  
  42276b:	jno    0x4227aa
  42276d:	clc    
  42276e:	inc    ecx
  42276f:	pop    ebx
  422770:	sbb    DWORD PTR [ebx+0x28],ecx
  422773:	push   edx
  422774:	fucomi st,st(0)
  422776:	out    0x2d,al
  422778:	push   cs
  422779:	mov    bh,BYTE PTR [ebx+0x73]
  42277c:	leave  
  42277d:	add    eax,0x6dc75101
  422782:	call   0x87576f32
  422787:	mov    bh,0xe3
  422789:	and    al,0x19
  42278b:	add    DWORD PTR [edx],edi
  42278d:	add    DWORD PTR [ecx-0x4ca27fae],edx
  422793:	retf   0xbafd
  422796:	dec    esi
  422797:	and    dl,ch
  422799:	push   edi
  42279a:	cmc    
  42279b:	add    DWORD PTR [edi-0x47],0x3b40e7a4
  4227a2:	pop    edi
  4227a3:	jl     0x42281e
  4227a5:	xchg   esp,eax
  4227a6:	cmp    BYTE PTR [ebx+0x6da17c04],0xaa
  4227ad:	sbb    al,0x2d
  4227af:	cmp    cl,BYTE PTR [ebx+esi*8]
  4227b2:	ret    
  4227b3:	imul   eax,DWORD PTR [edx+0x68927764],0x58a22ea6
  4227bd:	icebp  
  4227be:	aas    
  4227bf:	ss scas al,BYTE PTR es:[edi]
  4227c1:	out    0x4b,eax
  4227c3:	in     al,dx
  4227c4:	ret    0xc30b
  4227c7:	test   DWORD PTR [edi+0x1f],eax
  4227ca:	inc    edx
  4227cb:	stc    
  4227cc:	loopne 0x4227b1
  4227ce:	push   cs
  4227cf:	mov    edx,0xb6d4f952
  4227d4:	iret   
  4227d5:	push   ebp
  4227d6:	push   esp
  4227d7:	dec    eax
  4227d8:	push   0xa2d050ca
  4227dd:	pop    eax
  4227de:	sub    al,0x87
  4227e0:	enter  0x786,0x82
  4227e4:	aad    0xca
  4227e6:	jae    0x422844
  4227e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227e9:	xchg   ebx,eax
  4227ea:	mov    al,ds:0x3d0ae676
  4227ef:	inc    eax
  4227f0:	popa   
  4227f1:	cmp    BYTE PTR [esi],bh
  4227f3:	pusha  
  4227f4:	lock and edx,0x24
  4227f8:	mov    DWORD PTR [ebx+0x4d],esi
  4227fb:	jmp    0xa64a:0x7991f4d9
  422802:	adc    BYTE PTR [esi],0x60
  422805:	lock cwde 
  422807:	mov    edi,0xd180c8d7
  42280c:	mov    bl,0x8c
  42280e:	mov    dl,BYTE PTR [edx]
  422810:	cmp    al,0xe8
  422812:	jl     0x42285c
  422814:	push   esi
  422815:	add    eax,0x418062bf
  42281a:	pop    edi
  42281b:	mov    eax,ds:0x4de11319
  422820:	sar    BYTE PTR [esi-0x742b9480],0x7e
  422827:	lahf   
  422828:	stos   BYTE PTR es:[edi],al
  422829:	pop    ss
  42282a:	cmp    esi,esp
  42282c:	mov    cs,WORD PTR [eax+edi*2+0x23f30f17]
  422833:	add    al,0xf4
  422835:	add    DWORD PTR [ecx+0x4a79e06],edx
  42283b:	push   esi
  42283c:	in     eax,0xf3
  42283e:	push   ecx
  42283f:	popa   
  422840:	fs jnp 0x422834
  422843:	jb     0x422869
  422845:	cmp    eax,0x4484b344
  42284a:	mov    al,ds:0x183881c3
  42284f:	add    al,cl
  422851:	xchg   edx,eax
  422852:	out    dx,eax
  422853:	jecxz  0x422894
  422855:	bound  esi,QWORD PTR [ebp+0x4a]
  422858:	test   DWORD PTR [edi+0x69],edx
  42285b:	jb     0x42284a
  42285d:	push   esi
  42285e:	nop    ebx
  422861:	fist   DWORD PTR [ebp-0x3e]
  422864:	fst    DWORD PTR [eax-0x53]
  422867:	push   esi
  422868:	pop    edx
  422869:	pusha  
  42286a:	sub    BYTE PTR [ebx+0x10],ah
  42286d:	mov    edi,0x59cf8fea
  422872:	dec    eax
  422873:	mov    ebx,0x18cd6b02
  422878:	sub    al,0x38
  42287a:	or     edi,DWORD PTR [ebp+ebp*2-0x4394a683]
  422881:	stos   BYTE PTR es:[edi],al
  422882:	mov    ds:0x99312323,al
  422887:	xchg   DWORD PTR ds:0x97b697f2,edi
  42288d:	and    eax,0x28ddad3e
  422892:	pop    esp
  422893:	inc    edi
  422894:	inc    ebx
  422895:	mov    eax,0xe8d4f526
  42289a:	mov    edi,0xcfdc84b8
  42289f:	and    eax,DWORD PTR [edi+0x2aea7603]
  4228a5:	push   es
  4228a6:	jecxz  0x4228ab
  4228a8:	ss push ecx
  4228aa:	mov    esi,0xaa682ad2
  4228af:	jle    0x422917
  4228b1:	cmp    ebp,DWORD PTR [edx-0x10]
  4228b4:	pop    esp
  4228b5:	sub    al,0xd5
  4228b7:	repz dec ecx
  4228b9:	mov    BYTE PTR [esi-0x44],cl
  4228bc:	mov    ds:0xcd3bc835,al
  4228c1:	jmp    0x1b14ab6c
  4228c6:	or     BYTE PTR [edx+0x1fc556d3],cl
  4228cc:	loop   0x422920
  4228ce:	cmp    DWORD PTR ds:0x869aaac7,esi
  4228d4:	cmpps  xmm2,XMMWORD PTR ds:0x549ed64d,0x2a
  4228dc:	jbe    0x422884
  4228de:	std    
  4228df:	or     eax,0xd51671fa
  4228e4:	lods   al,BYTE PTR ds:[esi]
  4228e5:	mov    ebp,0xae3ac490
  4228ea:	lock shr eax,cl
  4228ed:	mov    ecx,0x37c64dd5
  4228f2:	mov    al,0x9d
  4228f4:	out    0x1b,eax
  4228f6:	mov    esp,esp
  4228f8:	mov    ss,eax
  4228fa:	pushf  
  4228fb:	(bad)  
  4228fc:	push   esp
  4228fd:	push   ss
  4228fe:	scas   eax,DWORD PTR es:[edi]
  4228ff:	mov    al,0x6
  422901:	mov    al,0x7f
  422903:	push   ds
  422904:	or     eax,0x71
  422907:	aad    0x3a
  422909:	add    eax,0x8273f90d
  42290e:	push   gs
  422910:	sbb    esp,ebx
  422912:	inc    ebx
  422913:	loopne 0x422923
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
