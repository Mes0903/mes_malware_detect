
f8ab2dbcff82e1de475ba1721335b900ed9c4d659a165546997f00150438562d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xdc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x402be5
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x402be4
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x402be3
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x30]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x30],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x412170
  401e66:	mov    esi,DWORD PTR ds:0x4120a7
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x3c]
  401ed5:	mov    DWORD PTR [ebp-0x38],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x40]
  401eed:	mov    DWORD PTR [ebp-0x18],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x18]
  401f14:	mov    esi,0x7510897
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272de
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x7c],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x18],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x1c]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272de]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x18]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e6]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x402bee
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272de]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x97589a]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x1c],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	and    DWORD PTR ds:0x42d01c,0x0
  4023db:	jmp    0x4023eb
  4023e0:	mov    eax,ds:0x42d01c
  4023e5:	inc    eax
  4023e6:	mov    ds:0x42d01c,eax
  4023eb:	cmp    DWORD PTR ds:0x42d01c,0x15
  4023f2:	jae    0x402430
  4023f8:	cmp    DWORD PTR ds:0x42d01c,0x17
  4023ff:	jne    0x402425
  402405:	push   0x25d9
  40240a:	push   0x42a014
  40240f:	push   0x7d1e
  402414:	push   0x42e035
  402419:	push   DWORD PTR [ebp-0x14]
  40241c:	push   DWORD PTR [ebp-0xc]
  40241f:	call   DWORD PTR ds:0x42ed6d
  402425:	jmp    0x4023e0
  40242a:	sbb    ecx,DWORD PTR ds:0x429018
  402430:	mov    eax,DWORD PTR [ebp+0xc]
  402433:	mov    DWORD PTR ds:0x42c010,0x1b
  40243d:	cmp    DWORD PTR ds:0x42c010,0x0
  402444:	je     0x402489
  40244a:	cmp    DWORD PTR ds:0x42c010,0xe
  402451:	jne    0x40245d
  402457:	call   DWORD PTR ds:0x42ed71
  40245d:	cmp    DWORD PTR ds:0x42c010,0xf
  402464:	jne    0x402477
  40246a:	mov    ecx,DWORD PTR ds:0x42c010
  402470:	dec    ecx
  402471:	mov    DWORD PTR ds:0x42c010,ecx
  402477:	mov    ecx,DWORD PTR ds:0x42c010
  40247d:	dec    ecx
  40247e:	mov    DWORD PTR ds:0x42c010,ecx
  402484:	jmp    0x40243d
  402489:	mov    ds:0x42e2b9,eax
  40248e:	and    DWORD PTR ds:0x429010,ecx
  402494:	mov    eax,DWORD PTR [ebp+0x10]
  402497:	movzx  ecx,BYTE PTR ds:0x42d010
  40249e:	sub    DWORD PTR ds:0x429010,ecx
  4024a4:	mov    ds:0x42e50d,eax
  4024a9:	mov    eax,ds:0x42e2b9
  4024ae:	and    DWORD PTR ds:0x429018,0xd59
  4024b8:	mov    ecx,DWORD PTR [ebp-0x38]
  4024bb:	sub    DWORD PTR ds:0x42d004,0x41ed
  4024c5:	sub    eax,edi
  4024c7:	xor    eax,esi
  4024c9:	mov    DWORD PTR [ecx],eax
  4024cb:	mov    DWORD PTR ds:0x42b000,0x41dd
  4024d5:	mov    eax,DWORD PTR [ebp-0x30]
  4024d8:	cmp    eax,0xf89c85b5
  4024dd:	jne    0x402633
  4024e3:	mov    DWORD PTR ds:0x42b008,0x94c
  4024ed:	lea    eax,[ebp-0x48]
  4024f0:	adc    DWORD PTR ds:0x429000,0x77c7
  4024fa:	mov    DWORD PTR [ebp-0x80],eax
  4024fd:	adc    DWORD PTR ds:0x42c010,0x2852
  402507:	lea    eax,[ebp+0x4]
  40250a:	sbb    DWORD PTR ds:0x42b00c,0x6aac
  402514:	mov    DWORD PTR [ebp-0x48],eax
  402517:	and    DWORD PTR ds:0x42d008,0x0
  402521:	mov    eax,ds:0x42d008
  402526:	inc    eax
  402527:	mov    ds:0x42d008,eax
  40252c:	cmp    DWORD PTR ds:0x42d008,0x6
  402533:	jne    0x402544
  402539:	push   0x42c008
  40253e:	call   DWORD PTR ds:0x42ed75
  402544:	cmp    DWORD PTR ds:0x42d008,0x5
  40254b:	jne    0x40255c
  402551:	mov    eax,ds:0x42d008
  402556:	inc    eax
  402557:	mov    ds:0x42d008,eax
  40255c:	cmp    DWORD PTR ds:0x42d008,0x1b
  402563:	jb     0x402521
  402569:	mov    eax,DWORD PTR [ebp-0x48]
  40256c:	test   eax,eax
  40256e:	je     0x402bc8
  402574:	mov    eax,DWORD PTR [ebp-0x20]
  402577:	mov    eax,DWORD PTR [ebp-0xc]
  40257a:	mov    eax,DWORD PTR [ebp-0x8]
  40257d:	mov    DWORD PTR [ebp+0xc],eax
  402580:	mov    eax,eax
  402582:	mov    eax,ds:0x42e435
  402587:	mov    eax,DWORD PTR [eax+0x1c8]
  40258d:	mov    eax,DWORD PTR [eax]
  40258f:	cdq    
  402590:	mov    ebx,eax
  402592:	mov    eax,0xfabdbeeb
  402597:	add    ebx,eax
  402599:	adc    edx,0xffffffff
  40259c:	and    DWORD PTR [ebp-0x10],0x0
  4025a0:	xor    edx,0x0
  4025a3:	mov    DWORD PTR [ebp-0x68],edx
  4025a6:	mov    edx,DWORD PTR [ebp+0xc]
  4025a9:	mov    DWORD PTR [ebp-0x14],edx
  4025ac:	mov    ecx,0x8a29a129
  4025b1:	xor    ebx,ecx
  4025b3:	add    DWORD PTR [ebp-0x14],eax
  4025b6:	mov    edx,DWORD PTR [ebp-0x14]
  4025b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025bd:	xor    edx,ecx
  4025bf:	mov    DWORD PTR [ebp-0x58],edx
  4025c2:	mov    edx,DWORD PTR [ebp-0x10]
  4025c5:	xor    edx,0x0
  4025c8:	mov    DWORD PTR [ebp-0x54],edx
  4025cb:	cmp    DWORD PTR [ebp-0x58],ebx
  4025ce:	jne    0x4025e0
  4025d4:	mov    edx,DWORD PTR [ebp-0x68]
  4025d7:	cmp    DWORD PTR [ebp-0x54],edx
  4025da:	je     0x40260f
  4025e0:	mov    edx,DWORD PTR ds:0x42e435
  4025e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4025ec:	mov    edx,DWORD PTR [edx]
  4025ee:	xor    ebx,ebx
  4025f0:	add    edx,eax
  4025f2:	adc    ebx,0xffffffff
  4025f5:	xor    edx,ecx
  4025f7:	xor    ebx,0x0
  4025fa:	cmp    edx,0x70941fc5
  402600:	jne    0x402bc8
  402606:	cmp    ebx,0xffffffff
  402609:	jne    0x402bc8
  40260f:	mov    edx,DWORD PTR ds:0x42e4b1
  402615:	mov    ebx,DWORD PTR ds:0x42e4b9
  40261b:	xor    edx,ebx
  40261d:	mov    DWORD PTR ds:0x42e4b1,edx
  402623:	mov    ebx,DWORD PTR ds:0x42e4b1
  402629:	mov    edx,DWORD PTR [ebp-0x48]
  40262c:	add    DWORD PTR [edx],ebx
  40262e:	jmp    0x402b89
  402633:	mov    eax,DWORD PTR [ebp-0x3c]
  402636:	cmp    eax,0xf89c85b4
  40263b:	je     0x402698
  402641:	mov    eax,DWORD PTR [ebp-0x8]
  402644:	mov    ecx,DWORD PTR [ebp-0x40]
  402647:	xor    eax,esi
  402649:	add    eax,edi
  40264b:	cmp    eax,ecx
  40264d:	je     0x402698
  402653:	mov    eax,ds:0x42e435
  402658:	mov    eax,DWORD PTR [eax+0x194]
  40265e:	mov    ecx,DWORD PTR [eax]
  402660:	mov    eax,DWORD PTR [ecx+0x3c]
  402663:	push   DWORD PTR ds:0x42e50d
  402669:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40266d:	push   DWORD PTR ds:0x42e2b9
  402673:	add    eax,ecx
  402675:	mov    ecx,DWORD PTR ds:0x42e435
  40267b:	mov    ecx,DWORD PTR [ecx+0x194]
  402681:	push   DWORD PTR [ecx]
  402683:	call   eax
  402685:	mov    ecx,DWORD PTR ds:0x42e435
  40268b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402691:	mov    DWORD PTR [ecx],eax
  402693:	jmp    0x402bc8
  402698:	mov    eax,DWORD PTR [ebp-0x8]
  40269b:	mov    ecx,DWORD PTR [ebp-0x7c]
  40269e:	xor    eax,esi
  4026a0:	add    eax,edi
  4026a2:	cmp    eax,ecx
  4026a4:	jne    0x402a83
  4026aa:	mov    eax,DWORD PTR [ebp-0x8]
  4026ad:	mov    ecx,DWORD PTR ds:0x42e435
  4026b3:	mov    ecx,DWORD PTR [ecx+0x198]
  4026b9:	xor    eax,esi
  4026bb:	add    eax,edi
  4026bd:	cmp    eax,DWORD PTR [ecx]
  4026bf:	jne    0x4026de
  4026c5:	mov    eax,DWORD PTR [ebp-0x8]
  4026c8:	push   0xf89c85b5
  4026cd:	xor    eax,esi
  4026cf:	add    eax,edi
  4026d1:	push   eax
  4026d2:	push   ebx
  4026d3:	push   DWORD PTR [ebp-0xc]
  4026d6:	push   DWORD PTR [ebp-0x8]
  4026d9:	call   0x40816b
  4026de:	mov    eax,DWORD PTR [ebp-0xc]
  4026e1:	mov    DWORD PTR [ebp-0x44],eax
  4026e4:	mov    eax,DWORD PTR [ebp-0x8]
  4026e7:	mov    DWORD PTR [ebp-0x1c],eax
  4026ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4026ed:	xor    eax,esi
  4026ef:	add    eax,edi
  4026f1:	mov    DWORD PTR [ebp+0x10],eax
  4026f4:	mov    eax,ds:0x42e2b5
  4026f9:	mov    eax,DWORD PTR [eax]
  4026fb:	mov    DWORD PTR [ebp+0x10],eax
  4026fe:	mov    eax,ds:0x42e4bd
  402703:	mov    eax,DWORD PTR [eax]
  402705:	mov    DWORD PTR [ebp-0x18],eax
  402708:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  40270f:	mov    eax,DWORD PTR [ebp+0xc]
  402712:	xor    eax,esi
  402714:	add    eax,edi
  402716:	mov    DWORD PTR [ebp+0xc],eax
  402719:	mov    eax,ds:0x42e435
  40271e:	mov    DWORD PTR [ebp+0xc],eax
  402721:	mov    eax,DWORD PTR [ebp+0x10]
  402724:	mov    DWORD PTR [ebp+0xc],eax
  402727:	mov    eax,DWORD PTR [ebp+0xc]
  40272a:	push   0x4
  40272c:	pop    ecx
  40272d:	sub    ecx,eax
  40272f:	add    ecx,DWORD PTR [ebp-0x18]
  402732:	mov    DWORD PTR [ebp-0x38],0xf89c85f5
  402739:	mov    DWORD PTR [ebp+0x10],ecx
  40273c:	mov    DWORD PTR [ebp-0xdc],ebx
  402742:	mov    eax,DWORD PTR [ebp+0xc]
  402745:	mov    DWORD PTR [ebp-0xd8],eax
  40274b:	mov    eax,DWORD PTR [ebp+0x10]
  40274e:	mov    DWORD PTR [ebp-0xd4],eax
  402754:	mov    eax,DWORD PTR [ebp-0x38]
  402757:	xor    eax,esi
  402759:	add    eax,edi
  40275b:	mov    DWORD PTR [ebp-0xd0],eax
  402761:	lea    eax,[ebp-0x88]
  402767:	mov    DWORD PTR [ebp-0xcc],eax
  40276d:	mov    eax,DWORD PTR [ebp-0xdc]
  402773:	xor    eax,esi
  402775:	add    eax,edi
  402777:	mov    DWORD PTR [ebp-0xdc],eax
  40277d:	lea    eax,[ebp-0xdc]
  402783:	push   eax
  402784:	mov    eax,DWORD PTR [ebp-0x44]
  402787:	xor    eax,esi
  402789:	add    eax,edi
  40278b:	push   eax
  40278c:	mov    eax,ds:0x42e455
  402791:	push   0x42e3ab
  402796:	push   DWORD PTR [eax]
  402798:	call   0x405235
  40279d:	mov    eax,DWORD PTR [ebp+0xc]
  4027a0:	mov    ecx,DWORD PTR [ebp+0x10]
  4027a3:	mov    DWORD PTR [ebp-0x78],ecx
  4027a6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4027a9:	xor    ecx,esi
  4027ab:	mov    DWORD PTR [ebp-0x18],eax
  4027ae:	add    ecx,edi
  4027b0:	jmp    0x402a24
  4027b5:	lea    edx,[ecx+eax*1]
  4027b8:	mov    DWORD PTR [ebp+0x10],edx
  4027bb:	mov    edx,DWORD PTR [ebp-0x78]
  4027be:	sub    edx,ecx
  4027c0:	mov    DWORD PTR [ebp+0xc],edx
  4027c3:	mov    edx,DWORD PTR [ebp+0xc]
  4027c6:	mov    DWORD PTR [ebp-0x50],edx
  4027c9:	mov    edx,DWORD PTR [ebp+0x10]
  4027cc:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  4027d3:	mov    DWORD PTR [ebp-0x68],edx
  4027d6:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  4027dd:	mov    edx,DWORD PTR [ebp-0x4c]
  4027e0:	xor    edx,esi
  4027e2:	add    edx,edi
  4027e4:	mov    DWORD PTR [ebp+0x10],edx
  4027e7:	mov    edx,DWORD PTR [ebp-0x4c]
  4027ea:	xor    edx,esi
  4027ec:	add    edx,edi
  4027ee:	mov    DWORD PTR [ebp+0xc],edx
  4027f1:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  4027f8:	mov    DWORD PTR [ebp-0x60],0xf89c85be
  4027ff:	mov    edx,DWORD PTR [ebp-0x4c]
  402802:	mov    ebx,DWORD PTR [ebp-0x50]
  402805:	xor    edx,esi
  402807:	add    edx,edi
  402809:	cmp    ebx,edx
  40280b:	je     0x402a18
  402811:	mov    eax,DWORD PTR [ebp-0x24]
  402814:	xor    eax,esi
  402816:	mov    edx,0xffcd8d22
  40281b:	sub    edx,eax
  40281d:	add    edx,DWORD PTR [ebp-0x50]
  402820:	mov    eax,DWORD PTR [ebp-0x24]
  402823:	mov    ebx,DWORD PTR [ebp+0x10]
  402826:	xor    eax,esi
  402828:	add    eax,edi
  40282a:	imul   eax,ebx
  40282d:	cmp    eax,edx
  40282f:	ja     0x402a15
  402835:	mov    edx,DWORD PTR [ebp+0x10]
  402838:	mov    eax,DWORD PTR [ebp-0x50]
  40283b:	mov    ebx,DWORD PTR [ebp-0x64]
  40283e:	sub    eax,edx
  402840:	xor    ebx,esi
  402842:	xor    edx,edx
  402844:	add    ebx,edi
  402846:	div    ebx
  402848:	mov    DWORD PTR [ebp+0xc],eax
  40284b:	mov    eax,DWORD PTR [ebp-0x60]
  40284e:	mov    edx,DWORD PTR [ebp+0xc]
  402851:	xor    eax,esi
  402853:	add    eax,edi
  402855:	cmp    edx,eax
  402857:	jbe    0x402867
  40285d:	mov    eax,DWORD PTR [ebp-0x60]
  402860:	xor    eax,esi
  402862:	add    eax,edi
  402864:	mov    DWORD PTR [ebp+0xc],eax
  402867:	mov    eax,DWORD PTR [ebp-0x64]
  40286a:	mov    edx,DWORD PTR [ebp+0xc]
  40286d:	xor    eax,esi
  40286f:	add    eax,edi
  402871:	imul   eax,edx
  402874:	mov    DWORD PTR [ebp+0xc],eax
  402877:	mov    eax,DWORD PTR [ebp-0x4c]
  40287a:	mov    edx,DWORD PTR [ebp+0xc]
  40287d:	xor    eax,esi
  40287f:	add    eax,edi
  402881:	cmp    edx,eax
  402883:	je     0x4029fe
  402889:	mov    eax,DWORD PTR [ebp+0xc]
  40288c:	mov    DWORD PTR [ebp-0x30],eax
  40288f:	mov    eax,DWORD PTR [ebp+0x10]
  402892:	add    eax,DWORD PTR [ebp-0x68]
  402895:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  40289c:	mov    DWORD PTR [ebp-0x2c],eax
  40289f:	mov    eax,0xf89c85b4
  4028a4:	mov    DWORD PTR [ebp-0x5c],eax
  4028a7:	mov    DWORD PTR [ebp-0x54],0xf89c85b3
  4028ae:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  4028b5:	mov    DWORD PTR [ebp-0x28],eax
  4028b8:	mov    eax,DWORD PTR [ebp-0x38]
  4028bb:	xor    eax,esi
  4028bd:	add    eax,edi
  4028bf:	jmp    0x4029ba
  4028c4:	mov    eax,DWORD PTR [ebp-0x28]
  4028c7:	mov    edx,DWORD PTR [ebp+0xc]
  4028ca:	xor    eax,esi
  4028cc:	add    eax,edi
  4028ce:	imul   eax,edx
  4028d1:	mov    edx,DWORD PTR [ebp-0x2c]
  4028d4:	mov    BYTE PTR [eax+edx*1],0x0
  4028d8:	mov    DWORD PTR [ebp-0x70],0xf89c85bb
  4028df:	mov    DWORD PTR [ebp-0x74],0xf89c85a1
  4028e6:	mov    eax,DWORD PTR [ebp-0x28]
  4028e9:	mov    edx,DWORD PTR [ebp+0xc]
  4028ec:	xor    eax,esi
  4028ee:	add    eax,edi
  4028f0:	imul   eax,edx
  4028f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4028f6:	mov    al,BYTE PTR [eax+edx*1]
  4028f9:	mov    BYTE PTR [ebp-0x1],al
  4028fc:	mov    eax,DWORD PTR [ebp-0x28]
  4028ff:	mov    edx,DWORD PTR [ebp+0xc]
  402902:	xor    eax,esi
  402904:	add    eax,edi
  402906:	imul   eax,edx
  402909:	mov    edx,DWORD PTR [ebp-0x54]
  40290c:	xor    edx,esi
  40290e:	add    eax,edx
  402910:	mov    edx,DWORD PTR [ebp-0x2c]
  402913:	movzx  eax,BYTE PTR [eax+edx*1+0x3272de]
  40291b:	mov    edx,DWORD PTR [ebp-0x70]
  40291e:	xor    edx,esi
  402920:	lea    eax,[edx+eax*1+0x3272de]
  402927:	movzx  edx,BYTE PTR [ebp-0x1]
  40292b:	xor    edx,eax
  40292d:	mov    BYTE PTR [ebp-0x1],dl
  402930:	mov    al,BYTE PTR [ebp-0x1]
  402933:	mov    edx,DWORD PTR [ebp-0x28]
  402936:	mov    ebx,DWORD PTR [ebp+0xc]
  402939:	xor    edx,esi
  40293b:	add    edx,edi
  40293d:	imul   edx,ebx
  402940:	mov    ebx,DWORD PTR [ebp-0x2c]
  402943:	mov    BYTE PTR [edx+ebx*1],al
  402946:	mov    eax,DWORD PTR [ebp-0x28]
  402949:	mov    edx,DWORD PTR [ebp+0xc]
  40294c:	xor    eax,esi
  40294e:	add    eax,edi
  402950:	imul   eax,edx
  402953:	mov    edx,DWORD PTR [ebp-0x2c]
  402956:	mov    al,BYTE PTR [eax+edx*1]
  402959:	mov    BYTE PTR [ebp-0x1],al
  40295c:	mov    eax,DWORD PTR [ebp-0x28]
  40295f:	mov    edx,DWORD PTR [ebp+0xc]
  402962:	xor    eax,esi
  402964:	add    eax,edi
  402966:	imul   eax,edx
  402969:	mov    edx,DWORD PTR [ebp-0x5c]
  40296c:	xor    edx,esi
  40296e:	add    eax,edx
  402970:	mov    edx,DWORD PTR [ebp-0x2c]
  402973:	movzx  eax,BYTE PTR [eax+edx*1+0x3272de]
  40297b:	mov    edx,DWORD PTR [ebp-0x74]
  40297e:	xor    edx,esi
  402980:	lea    eax,[edx+eax*1+0x3272de]
  402987:	movzx  edx,BYTE PTR [ebp-0x1]
  40298b:	xor    edx,eax
  40298d:	mov    BYTE PTR [ebp-0x1],dl
  402990:	mov    al,BYTE PTR [ebp-0x1]
  402993:	mov    edx,DWORD PTR [ebp-0x28]
  402996:	mov    ebx,DWORD PTR [ebp+0xc]
  402999:	xor    edx,esi
  40299b:	add    edx,edi
  40299d:	imul   edx,ebx
  4029a0:	mov    ebx,DWORD PTR [ebp-0x2c]
  4029a3:	mov    BYTE PTR [edx+ebx*1],al
  4029a6:	mov    eax,DWORD PTR [ebp-0x10]
  4029a9:	mov    edx,DWORD PTR [ebp-0x5c]
  4029ac:	xor    eax,esi
  4029ae:	xor    edx,esi
  4029b0:	add    eax,edi
  4029b2:	add    edx,edi
  4029b4:	imul   eax,edx
  4029b7:	add    eax,DWORD PTR [ebp+0xc]
  4029ba:	mov    DWORD PTR [ebp+0xc],eax
  4029bd:	mov    eax,DWORD PTR [ebp+0xc]
  4029c0:	mov    edx,DWORD PTR [ebp-0x30]
  4029c3:	cmp    edx,eax
  4029c5:	jb     0x4028c4
  4029cb:	mov    eax,DWORD PTR [ebp-0x5c]
  4029ce:	mov    edx,DWORD PTR [ebp-0x30]
  4029d1:	xor    eax,esi
  4029d3:	add    eax,edi
  4029d5:	imul   eax,edx
  4029d8:	mov    edx,DWORD PTR [ebp-0x38]
  4029db:	xor    edx,esi
  4029dd:	add    edx,edi
  4029df:	or     eax,edx
  4029e1:	mov    edx,DWORD PTR [ebp-0x24]
  4029e4:	xor    edx,esi
  4029e6:	add    eax,edx
  4029e8:	mov    edx,DWORD PTR [ebp-0x24]
  4029eb:	xor    edx,esi
  4029ed:	add    eax,edx
  4029ef:	mov    edx,DWORD PTR [ebp+0x10]
  4029f2:	lea    eax,[eax+edx*1+0x64e5bc]
  4029f9:	jmp    0x402a0d
  4029fe:	mov    eax,DWORD PTR [ebp-0x24]
  402a01:	mov    edx,DWORD PTR [ebp+0x10]
  402a04:	xor    eax,esi
  402a06:	lea    eax,[eax+edx*1+0x3272de]
  402a0d:	mov    DWORD PTR [ebp+0x10],eax
  402a10:	jmp    0x402811
  402a15:	mov    eax,DWORD PTR [ebp-0x18]
  402a18:	mov    edx,DWORD PTR [ebp-0x44]
  402a1b:	xor    edx,esi
  402a1d:	lea    ecx,[ecx+edx*1+0x3272de]
  402a24:	lea    edx,[ecx-0x3272de]
  402a2a:	xor    edx,esi
  402a2c:	cmp    edx,0xf89c95b5
  402a32:	jne    0x4027b5
  402a38:	mov    ecx,DWORD PTR [ebp-0x1c]
  402a3b:	mov    edx,DWORD PTR [ebp-0x44]
  402a3e:	mov    ebx,DWORD PTR [ebp-0x1c]
  402a41:	xor    edx,esi
  402a43:	mov    dl,BYTE PTR [edx+eax*1+0x3272de]
  402a4a:	xor    ecx,esi
  402a4c:	mov    cl,BYTE PTR [ecx+eax*1+0x3272de]
  402a53:	xor    ebx,esi
  402a55:	mov    BYTE PTR [ebx+eax*1+0x3272de],dl
  402a5c:	mov    edx,DWORD PTR [ebp-0x44]
  402a5f:	xor    edx,esi
  402a61:	mov    BYTE PTR [edx+eax*1+0x3272de],cl
  402a68:	mov    eax,DWORD PTR [ebp-0x44]
  402a6b:	mov    eax,DWORD PTR [ebp-0x8]
  402a6e:	xor    eax,esi
  402a70:	add    eax,edi
  402a72:	mov    ds:0x42e4b9,eax
  402a77:	mov    eax,DWORD PTR [ebp-0x8]
  402a7a:	xor    eax,esi
  402a7c:	add    eax,edi
  402a7e:	mov    ds:0x42e4b1,eax
  402a83:	lea    eax,[ebp-0x34]
  402a86:	mov    DWORD PTR [ebp-0x98],eax
  402a8c:	lea    eax,[ebp+0x4]
  402a8f:	mov    DWORD PTR [ebp-0x34],eax
  402a92:	mov    eax,DWORD PTR [ebp-0x34]
  402a95:	test   eax,eax
  402a97:	je     0x402bc8
  402a9d:	mov    DWORD PTR [ebp-0x90],0xf152c3c
  402aa7:	mov    DWORD PTR [ebp-0x84],0x712ed0f
  402ab1:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402abb:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  402ac5:	call   0x405a40
  402aca:	mov    eax,DWORD PTR [ebp-0x20]
  402acd:	mov    eax,DWORD PTR [ebp-0xc]
  402ad0:	mov    eax,DWORD PTR [ebp-0x8]
  402ad3:	mov    DWORD PTR [ebp+0xc],eax
  402ad6:	mov    eax,eax
  402ad8:	mov    eax,ds:0x42e435
  402add:	mov    eax,DWORD PTR [eax+0x1c8]
  402ae3:	mov    eax,DWORD PTR [eax]
  402ae5:	cdq    
  402ae6:	mov    ebx,eax
  402ae8:	mov    eax,0xfabdbeeb
  402aed:	add    ebx,eax
  402aef:	adc    edx,0xffffffff
  402af2:	and    DWORD PTR [ebp-0x10],0x0
  402af6:	xor    edx,0x0
  402af9:	mov    DWORD PTR [ebp-0x68],edx
  402afc:	mov    edx,DWORD PTR [ebp+0xc]
  402aff:	mov    DWORD PTR [ebp-0x14],edx
  402b02:	mov    ecx,0x8a29a129
  402b07:	xor    ebx,ecx
  402b09:	add    DWORD PTR [ebp-0x14],eax
  402b0c:	mov    edx,DWORD PTR [ebp-0x14]
  402b0f:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402b13:	xor    edx,ecx
  402b15:	mov    DWORD PTR [ebp-0x58],edx
  402b18:	mov    edx,DWORD PTR [ebp-0x10]
  402b1b:	xor    edx,0x0
  402b1e:	mov    DWORD PTR [ebp-0x54],edx
  402b21:	cmp    DWORD PTR [ebp-0x58],ebx
  402b24:	jne    0x402b36
  402b2a:	mov    edx,DWORD PTR [ebp-0x68]
  402b2d:	cmp    DWORD PTR [ebp-0x54],edx
  402b30:	je     0x402b65
  402b36:	mov    edx,DWORD PTR ds:0x42e435
  402b3c:	mov    edx,DWORD PTR [edx+0x1c0]
  402b42:	mov    edx,DWORD PTR [edx]
  402b44:	xor    ebx,ebx
  402b46:	add    edx,eax
  402b48:	adc    ebx,0xffffffff
  402b4b:	xor    edx,ecx
  402b4d:	xor    ebx,0x0
  402b50:	cmp    edx,0x70941fc5
  402b56:	jne    0x402bc8
  402b5c:	cmp    ebx,0xffffffff
  402b5f:	jne    0x402bc8
  402b65:	mov    edx,DWORD PTR ds:0x42e4b1
  402b6b:	mov    ebx,DWORD PTR ds:0x42e4b9
  402b71:	xor    edx,ebx
  402b73:	mov    DWORD PTR ds:0x42e4b1,edx
  402b79:	mov    edx,DWORD PTR [ebp-0x34]
  402b7c:	mov    ebx,DWORD PTR ds:0x42e4b1
  402b82:	add    ebx,DWORD PTR [edx]
  402b84:	mov    edx,DWORD PTR [ebp-0x34]
  402b87:	mov    DWORD PTR [edx],ebx
  402b89:	mov    edx,DWORD PTR [ebp+0xc]
  402b8c:	xor    esi,edx
  402b8e:	mov    edx,DWORD PTR ds:0x42e4b1
  402b94:	add    esi,edi
  402b96:	xor    ebx,ebx
  402b98:	add    esi,eax
  402b9a:	adc    ebx,0xffffffff
  402b9d:	xor    edi,edi
  402b9f:	xor    esi,ecx
  402ba1:	xor    ebx,0x0
  402ba4:	add    edx,eax
  402ba6:	adc    edi,0xffffffff
  402ba9:	xor    edx,ecx
  402bab:	xor    edi,0x0
  402bae:	cmp    edx,esi
  402bb0:	jne    0x402bc8
  402bb6:	cmp    edi,ebx
  402bb8:	jne    0x402bc8
  402bbe:	mov    eax,ds:0x42e4b1
  402bc3:	mov    ds:0x42e4b9,eax
  402bc8:	mov    eax,ds:0x42e435
  402bcd:	push   0x4
  402bcf:	add    eax,0x1cc
  402bd4:	push   eax
  402bd5:	lea    eax,[ebp-0x20]
  402bd8:	push   eax
  402bd9:	call   0x402bee
  402bde:	mov    eax,DWORD PTR [ebp-0x20]
  402be1:	mov    eax,DWORD PTR [eax]
  402be3:	pop    ebx
  402be4:	pop    edi
  402be5:	pop    esi
  402be6:	leave  
  402be7:	ret    0xc
  402bea:	xor    eax,eax
  402bec:	inc    eax
  402bed:	ret    
  402bee:	push   ebp
  402bef:	mov    ebp,esp
  402bf1:	sub    esp,0x10
  402bf4:	jmp    0x404f42
  402bf9:	push   cs
  402bfa:	xlat   BYTE PTR ds:[ebx]
  402bfb:	xchg   ecx,eax
  402bfc:	loopne 0x402c6f
  402bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bff:	emms   
  402c01:	adc    al,ah
  402c03:	sub    DWORD PTR [ecx+ecx*4-0x18],0x78781c0d
  402c0b:	js     0x402c85
  402c0d:	dec    ecx
  402c0e:	pop    edi
  402c0f:	js     0x402c89
  402c11:	adc    DWORD PTR [esi],ebp
  402c13:	pop    ss
  402c14:	cmp    eax,0x2f1b2115
  402c19:	popa   
  402c1a:	ds gs fs into 
  402c1e:	fs push 0xc1306968
  402c24:	fdivp  st(5),st
  402c26:	push   edx
  402c27:	dec    edx
  402c28:	imul   edi,DWORD PTR [ebp+0x5b],0xffffff92
  402c2c:	bound  ebp,QWORD PTR [ecx+0x55]
  402c2f:	iret   
  402c30:	pop    ecx
  402c31:	dec    eax
  402c32:	and    cl,BYTE PTR [esi+0x577487f8]
  402c38:	dec    ecx
  402c39:	jg     0x402c72
  402c3b:	jb     0x402be1
  402c3d:	jg     0x402be1
  402c3f:	mov    al,ds:0x64ff2e3b
  402c44:	fdivp  st(0),st
  402c46:	push   ebx
  402c47:	jg     0x402c65
  402c49:	jmp    0xe9f8f583
  402c4e:	xchg   DWORD PTR [ebx],edx
  402c50:	fmul   QWORD PTR [ebx-0x54aaf0db]
  402c56:	mov    dh,al
  402c58:	imul   DWORD PTR [ecx-0x27]
  402c5b:	push   es
  402c5c:	(bad)  
  402c5d:	or     al,0xf8
  402c5f:	and    al,0x1a
  402c61:	dec    edx
  402c62:	push   cs
  402c63:	and    al,0x6b
  402c65:	push   0xffffffb5
  402c67:	scas   eax,DWORD PTR es:[edi]
  402c68:	adc    ebx,DWORD PTR [ebp+0x1]
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	jmp    ebp
  402c6e:	inc    ebp
  402c6f:	sub    esi,DWORD PTR [esi+0x30]
  402c72:	retf   0xf55b
  402c75:	sbb    al,bh
  402c77:	jp     0x402c36
  402c79:	arpl   cx,bx
  402c7b:	call   0x8016:0x7bd8b5f
  402c82:	dec    ebp
  402c83:	repz pushf 
  402c85:	ds jo  0x402cfb
  402c88:	or     ebx,eax
  402c8a:	sub    DWORD PTR [eax-0x77],edx
  402c8d:	xor    edx,DWORD PTR ss:[esi-0x1d]
  402c91:	iret   
  402c92:	mov    BYTE PTR ds:0xceb7b285,ah
  402c98:	mov    ch,BYTE PTR [ebp-0x1a]
  402c9b:	inc    ecx
  402c9c:	push   eax
  402c9d:	dec    esi
  402c9e:	push   cs
  402c9f:	cmp    al,0xf3
  402ca1:	xor    al,0x3
  402ca3:	test   eax,0x32a7c84b
  402ca8:	ret    0x5406
  402cab:	stc    
  402cac:	push   eax
  402cad:	push   esp
  402cae:	mov    eax,ds:0xfabf6af5
  402cb3:	inc    eax
  402cb4:	push   es
  402cb5:	inc    esi
  402cb6:	into   
  402cb7:	fadd   st(1),st
  402cb9:	popf   
  402cba:	or     eax,0x22ff383d
  402cbf:	fnstenv [ebp-0xc]
  402cc2:	sub    edx,edx
  402cc4:	daa    
  402cc5:	inc    ebp
  402cc6:	aas    
  402cc7:	dec    eax
  402cc8:	cli    
  402cc9:	sub    DWORD PTR [eax],edi
  402ccb:	das    
  402ccc:	sub    edi,DWORD PTR [ebp+0x10]
  402ccf:	outs   dx,BYTE PTR ds:[esi]
  402cd0:	cmp    eax,0x90770a24
  402cd5:	in     eax,dx
  402cd6:	push   cs
  402cd7:	push   ebx
  402cd8:	dec    esp
  402cd9:	xor    bl,dh
  402cdb:	lods   al,BYTE PTR ds:[esi]
  402cdc:	sub    BYTE PTR [edx+0x1c760c68],ah
  402ce2:	into   
  402ce3:	(bad)  
  402ce4:	cmp    eax,0xd53f6ab0
  402ce9:	hlt    
  402cea:	in     eax,dx
  402ceb:	mov    al,BYTE PTR [ebx]
  402ced:	(bad)  
  402cee:	pop    edi
  402cef:	mov    esi,0x72eb0674
  402cf4:	test   eax,0x5efc4fd4
  402cf9:	call   0xac0a:0xd002ef05
  402d00:	das    
  402d01:	ror    BYTE PTR [ebp-0x75039560],cl
  402d07:	or     ah,ah
  402d09:	mov    dh,0x46
  402d0b:	pop    edx
  402d0c:	or     edi,DWORD PTR cs:[eax+0x44]
  402d10:	mov    al,0x3e
  402d12:	push   ds
  402d13:	mov    ds:0xf0f4f1d9,al
  402d18:	call   0x37f99ca5
  402d1d:	push   esp
  402d1e:	add    al,0x30
  402d20:	(bad)  
  402d21:	fwait
  402d22:	add    BYTE PTR [ebp-0x4755321b],0x47
  402d29:	jmp    0x610405a7
  402d2e:	xor    DWORD PTR [edi-0x58],0xffffffbb
  402d32:	jge    0x402d63
  402d34:	mov    BYTE PTR [ebx+0x1bad3d5],dl
  402d3a:	add    BYTE PTR [eax+eiz*8+0x6],cl
  402d3e:	test   BYTE PTR [esi],ch
  402d40:	push   esp
  402d41:	jle    0x402d7c
  402d43:	mov    al,ds:0xfe65feff
  402d48:	xlat   BYTE PTR ds:[ebx]
  402d49:	mov    esp,0xb19b37c0
  402d4e:	lods   eax,DWORD PTR ds:[esi]
  402d4f:	shl    DWORD PTR [esi],cl
  402d51:	adc    dh,dh
  402d53:	jb     0x402d12
  402d55:	mov    cl,0xe2
  402d57:	xor    al,0x53
  402d59:	mov    al,0x20
  402d5b:	lods   eax,DWORD PTR ds:[esi]
  402d5c:	mov    ds:0xbc193678,al
  402d61:	mov    dl,0x9a
  402d63:	stos   DWORD PTR es:[edi],eax
  402d64:	cmp    al,0xd3
  402d66:	aas    
  402d67:	loop   0x402d9a
  402d69:	mov    ds:0xe3c0ff09,eax
  402d6e:	jmp    0xb751e892
  402d73:	(bad)  
  402d74:	sahf   
  402d75:	lods   eax,DWORD PTR ds:[esi]
  402d76:	mov    bl,bh
  402d78:	pop    esi
  402d79:	daa    
  402d7a:	stos   BYTE PTR es:[edi],al
  402d7b:	scas   eax,DWORD PTR es:[edi]
  402d7c:	inc    eax
  402d7d:	clc    
  402d7e:	daa    
  402d7f:	int3   
  402d80:	inc    esi
  402d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d82:	sbb    BYTE PTR [edi-0x27],bh
  402d85:	jb     0x402db3
  402d87:	sub    BYTE PTR [edx+0x72f1f60d],dh
  402d8d:	sbb    bl,dl
  402d8f:	loope  0x402d11
  402d91:	mov    edx,esi
  402d93:	and    DWORD PTR [edx+eax*8-0x4b],esp
  402d97:	pop    eax
  402d98:	test   DWORD PTR [ebp-0x45],esp
  402d9b:	inc    ebx
  402d9c:	sub    al,0x21
  402d9e:	pop    esp
  402d9f:	ins    BYTE PTR es:[edi],dx
  402da0:	inc    eax
  402da1:	pop    ss
  402da2:	(bad)
  402da5:	mov    eax,ds:0x733a497f
  402daa:	push   ds
  402dab:	mov    cs,WORD PTR [ebx-0x21]
  402dae:	and    BYTE PTR [edx+0x28],dl
  402db1:	imul   BYTE PTR [ebp+0x49600e55]
  402db7:	pop    esp
  402db8:	xor    eax,0xcf8b0004
  402dbd:	dec    ebx
  402dbe:	push   ebx
  402dbf:	jnp    0x402d76
  402dc1:	adc    eax,0x368481d2
  402dc6:	adc    BYTE PTR [eax+edx*8],dh
  402dc9:	mov    esi,0x1abc3a63
  402dce:	cld    
  402dcf:	jns    0x402d54
  402dd1:	jl     0x402dd9
  402dd3:	push   cs
  402dd4:	adc    ecx,DWORD PTR ds:0x81aca360
  402dda:	mov    bh,0xc8
  402ddc:	xchg   esp,eax
  402ddd:	jg     0x402d8f
  402ddf:	clc    
  402de0:	xchg   edi,eax
  402de1:	mov    eax,ds:0x806c7276
  402de6:	mov    dh,0x14
  402de8:	dec    esp
  402de9:	mov    ds:0x5831b4cf,al
  402dee:	cld    
  402def:	cmp    cl,ch
  402df1:	sbb    al,BYTE PTR [edi]
  402df3:	mov    esp,0xf2070bf1
  402df8:	push   edi
  402df9:	inc    edx
  402dfa:	popf   
  402dfb:	pop    edx
  402dfc:	sbb    BYTE PTR [ecx+0x51d08cda],cl
  402e02:	ja     0x402dbd
  402e04:	sub    BYTE PTR [eax-0x79],cl
  402e07:	pop    esp
  402e08:	les    ebx,FWORD PTR [edi+0x6b]
  402e0b:	jb     0x402dac
  402e0d:	xchg   DWORD PTR [ecx],ecx
  402e0f:	adc    eax,0xa65f6f6e
  402e14:	in     al,0xe
  402e16:	push   ebx
  402e17:	adc    ebp,DWORD PTR [esi+0x7a4a4d8d]
  402e1d:	push   esi
  402e1e:	jmp    0xf930:0xd14270ca
  402e25:	fild   WORD PTR [edi+0x19]
  402e28:	dec    ebp
  402e29:	dec    ebp
  402e2a:	lods   al,BYTE PTR ds:[esi]
  402e2b:	sub    cl,BYTE PTR [edi-0x43]
  402e2e:	inc    edi
  402e2f:	aas    
  402e30:	fs push edx
  402e32:	fwait
  402e33:	out    0x45,eax
  402e35:	dec    ebx
  402e36:	data16 sub ah,BYTE PTR [esi]
  402e39:	adc    dh,dh
  402e3b:	dec    esi
  402e3c:	repnz push edi
  402e3e:	push   cs
  402e3f:	ss add al,0x78
  402e42:	push   edi
  402e43:	sub    ah,BYTE PTR [edx]
  402e45:	lea    ebx,ds:[eax+ebx*1+0x68528870]
  402e4d:	pusha  
  402e4e:	sub    DWORD PTR [esi-0x4c7934],ebx
  402e54:	(bad)  
  402e56:	fistp  DWORD PTR [ebp+0x64cdf99c]
  402e5c:	imul   esp,DWORD PTR [edi-0x4b],0x69
  402e60:	push   0xd527402d
  402e65:	push   ebp
  402e66:	push   es
  402e67:	hlt    
  402e68:	mov    BYTE PTR [esi],0x7e
  402e6b:	adc    DWORD PTR ds:0xa69823d2,esp
  402e71:	test   al,0x92
  402e73:	add    dh,BYTE PTR [ebp+0x323384d7]
  402e79:	mov    eax,ds:0x73dd2216
  402e7e:	ins    BYTE PTR es:[edi],dx
  402e7f:	jmp    0x38f1:0x3b11852d
  402e86:	jp     0x402e45
  402e88:	push   ds
  402e89:	xor    DWORD PTR [edi-0x3],ebx
  402e8c:	mov    cs,WORD PTR ds:0x42c0964e
  402e92:	cs test ah,0x2f
  402e96:	out    0x82,eax
  402e98:	jo     0x402e9b
  402e9a:	addr16 cs jl 0x402e50
  402e9e:	cld    
  402e9f:	mov    DWORD PTR [ebx+0x6],edi
  402ea2:	xor    DWORD PTR [edx+0x495d6e1e],ebx
  402ea8:	rol    DWORD PTR [edi-0x1b0249c8],0xce
  402eaf:	in     al,0x2
  402eb1:	retf   
  402eb2:	cdq    
  402eb3:	nop
  402eb4:	psrlw  mm1,QWORD PTR ss:0x69b3dede
  402ebc:	mov    BYTE PTR [ebp+0x4928b76f],0xbc
  402ec3:	sbb    eax,0x1479522d
  402ec8:	cmp    edx,edx
  402eca:	scas   al,BYTE PTR es:[edi]
  402ecb:	or     DWORD PTR [eax],edx
  402ecd:	inc    esp
  402ece:	mov    al,ds:0x1a1fb2e6
  402ed3:	sti    
  402ed4:	aas    
  402ed5:	add    eax,0xb3c5a691
  402eda:	leave  
  402edb:	stos   DWORD PTR es:[edi],eax
  402edc:	retf   
  402edd:	push   eax
  402ede:	aaa    
  402edf:	mov    esi,0x67dc31a
  402ee4:	push   0x1c16a202
  402ee9:	or     esi,DWORD PTR [ebp+0x9a788f4]
  402eef:	xchg   ecx,eax
  402ef0:	inc    edx
  402ef1:	adc    esp,ebx
  402ef3:	out    0xbc,eax
  402ef5:	or     dl,BYTE PTR [edx+0x21dba5f1]
  402efb:	push   ecx
  402efc:	mov    ebp,0x61c0725a
  402f01:	fistp  QWORD PTR [ecx-0x3ecf5642]
  402f07:	sub    al,0xfb
  402f09:	jbe    0x402ea3
  402f0b:	cmp    ebp,DWORD PTR [edx]
  402f0d:	add    DWORD PTR [esi-0x6d],0xffffff86
  402f11:	add    eax,0x60b13fff
  402f16:	xor    BYTE PTR [esi],dh
  402f18:	xor    eax,DWORD PTR [esi+0x4b1b54da]
  402f1e:	adc    BYTE PTR [ebx+edx*8],0x34
  402f22:	adc    DWORD PTR [esi-0x32b5a36b],edi
  402f28:	and    edx,ebx
  402f2a:	iret   
  402f2b:	pop    esi
  402f2c:	mov    al,ds:0x5acaa8db
  402f31:	int    0xd
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	adc    al,0x98
  402f36:	jp     0x402f3a
  402f38:	out    dx,eax
  402f39:	and    DWORD PTR [ebp+0x2e],eax
  402f3c:	or     eax,ecx
  402f3e:	dec    eax
  402f3f:	mov    esp,0xa9041c86
  402f44:	or     al,al
  402f46:	sar    dh,cl
  402f48:	test   bh,ch
  402f4a:	rol    BYTE PTR [edx],cl
  402f4c:	ja     0x402f83
  402f4e:	mov    ah,0x58
  402f50:	inc    edi
  402f51:	das    
  402f52:	retf   0xdc34
  402f55:	inc    esp
  402f56:	mov    WORD PTR ds:0x39f17084,es
  402f5c:	popa   
  402f5d:	and    edi,DWORD PTR [esp+esi*1+0x57]
  402f61:	(bad)  
  402f63:	dec    ecx
  402f64:	(bad)  
  402f65:	jmp    0x402f43
  402f67:	retf   0x503b
  402f6a:	lea    esp,[edi-0x11]
  402f6d:	inc    esi
  402f6e:	(bad)  
  402f6f:	mov    esi,0x42768745
  402f74:	adc    eax,0x8ac21baa
  402f79:	scas   eax,DWORD PTR es:[edi]
  402f7a:	mov    bl,0x83
  402f7c:	jmp    0x547ea2d
  402f81:	call   0xabf9:0xd6e421c
  402f88:	stos   DWORD PTR es:[edi],eax
  402f89:	ret    0x6961
  402f8c:	enter  0xac90,0xd6
  402f90:	int    0x9f
  402f92:	mov    bh,0x96
  402f94:	out    dx,al
  402f95:	jbe    0x403002
  402f97:	rcl    BYTE PTR [eax+eiz*8+0x37],cl
  402f9b:	cmp    dh,al
  402f9d:	inc    esp
  402f9e:	mov    bh,BYTE PTR [ecx-0x53be8d32]
  402fa4:	dec    eax
  402fa5:	cmc    
  402fa6:	inc    esi
  402fa7:	sbb    bh,BYTE PTR [eax]
  402fa9:	int3   
  402faa:	inc    esp
  402fab:	es mov ebx,0xd0bc0370
  402fb1:	xor    esi,DWORD PTR [eax]
  402fb3:	call   0x88242a89
  402fb8:	out    0xfb,eax
  402fba:	mov    esp,0xf1f7bf53
  402fbf:	push   eax
  402fc0:	aam    0xe9
  402fc2:	sar    dl,1
  402fc4:	and    edx,ebp
  402fc6:	cmp    eax,esi
  402fc8:	ja     0x403046
  402fca:	stos   DWORD PTR es:[edi],eax
  402fcb:	sahf   
  402fcc:	fiadd  DWORD PTR [edx-0x59]
  402fcf:	stos   BYTE PTR es:[edi],al
  402fd0:	je     0x40302b
  402fd2:	sbb    DWORD PTR [esi],esi
  402fd4:	pop    esp
  402fd5:	sahf   
  402fd6:	xchg   esi,eax
  402fd7:	imul   edx,DWORD PTR [esi-0xac92c7f],0x20
  402fde:	imul   ebp,ebp,0xffffff9c
  402fe1:	shr    DWORD PTR [esi-0x6dba6a6a],0x79
  402fe8:	mov    al,ds:0x1469b68b
  402fed:	sti    
  402fee:	adc    ch,BYTE PTR [edi]
  402ff0:	mov    edx,0xd4b6182
  402ff5:	mov    esp,0xf9f8b3a1
  402ffa:	jg     0x403047
  402ffc:	lahf   
  402ffd:	(bad)  
  402ffe:	sbb    eax,0x3b72e394
  403003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403004:	js     0x403069
  403006:	cmp    eax,0x8ba351bd
  40300b:	jo     0x402f98
  40300d:	in     al,dx
  40300e:	dec    ebp
  40300f:	dec    edi
  403010:	mov    ebp,0x3f01b9a7
  403015:	ins    DWORD PTR es:[edi],dx
  403016:	push   ss
  403017:	push   eax
  403018:	(bad)  
  403019:	push   0xffffffd7
  40301b:	les    edi,FWORD PTR [edx+0x1035dd54]
  403021:	sbb    bl,BYTE PTR [esi+0x2bfb341f]
  403027:	pushf  
  403028:	leave  
  403029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302a:	shr    DWORD PTR [ebx+0x1524bd3b],cl
  403030:	shl    cl,0xd7
  403033:	and    eax,0x7c6cf551
  403038:	pop    esi
  403039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40303a:	push   cs
  40303b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40303c:	nop
  40303d:	jne    0x40309f
  40303f:	sub    eax,0xb17b0bf4
  403044:	pushf  
  403045:	xlat   BYTE PTR ds:[ebx]
  403046:	stos   BYTE PTR es:[edi],al
  403047:	mov    al,ds:0x8e6d1d50
  40304c:	push   ebp
  40304d:	adc    eax,0x2f5fc4d8
  403052:	xor    ecx,DWORD PTR [edi-0x2eb5fea3]
  403058:	jae    0x40305b
  40305a:	test   eax,0xb0514fee
  40305f:	retf   0x334c
  403062:	push   ss
  403063:	cld    
  403064:	or     edi,DWORD PTR [ecx+ebp*2+0xf8bb1d1]
  40306b:	icebp  
  40306c:	cmp    eax,0x618d7cf1
  403071:	or     edx,DWORD PTR [esi]
  403073:	mov    DWORD PTR fs:[esi-0xc587414],edx
  40307a:	add    bl,BYTE PTR [esi]
  40307c:	popf   
  40307d:	retf   
  40307e:	cmp    BYTE PTR [ebx-0xbd91c75],dh
  403084:	(bad)  
  403085:	sahf   
  403086:	clc    
  403087:	popf   
  403088:	and    eax,0x64deeae3
  40308d:	inc    ebx
  40308e:	adc    DWORD PTR [ecx-0x7cc1ebb0],esi
  403094:	scas   eax,DWORD PTR es:[edi]
  403095:	lods   al,BYTE PTR ds:[esi]
  403096:	clc    
  403097:	idiv   BYTE PTR [edi]
  403099:	sub    bh,BYTE PTR [ebx+0xb7b91ab]
  40309f:	jne    0x4030dd
  4030a1:	retf   
  4030a2:	mov    bh,dh
  4030a4:	xchg   esp,eax
  4030a5:	cmp    eax,0x978e0214
  4030aa:	sbb    al,BYTE PTR [esi]
  4030ac:	shr    DWORD PTR [ebp+esi*8+0x18],0xba
  4030b1:	(bad)  
  4030b2:	push   edx
  4030b3:	stc    
  4030b4:	lahf   
  4030b5:	mov    ch,BYTE PTR [ecx]
  4030b7:	xor    eax,0x6c9891a6
  4030bc:	xchg   DWORD PTR [ecx],eax
  4030be:	inc    edi
  4030bf:	xchg   edx,eax
  4030c0:	jmp    0xe093:0xc83ac213
  4030c7:	add    al,0x74
  4030c9:	es cwde 
  4030cb:	sub    eax,0xf6b8779c
  4030d0:	test   BYTE PTR [edi],dl
  4030d2:	fcmovbe st,st(2)
  4030d4:	or     esp,DWORD PTR [edi+0x34]
  4030d7:	int    0x1f
  4030d9:	inc    esi
  4030da:	pop    edi
  4030db:	dec    edi
  4030dc:	outs   dx,DWORD PTR ds:[esi]
  4030dd:	push   ebx
  4030de:	mov    bl,0x17
  4030e0:	loope  0x40308f
  4030e2:	and    BYTE PTR [edx+eax*2-0x3ba09f2a],0xb9
  4030ea:	ror    DWORD PTR ds:0x47d4642e,0xcd
  4030f1:	out    dx,eax
  4030f2:	sbb    BYTE PTR [ecx+0x15a522b4],bl
  4030f8:	sub    al,0x92
  4030fa:	rcl    BYTE PTR [edi+0x42],0xa
  4030fe:	or     al,0x65
  403100:	or     BYTE PTR [ebp-0x5ef94445],dl
  403106:	lds    ebp,FWORD PTR [ebp+0x6f]
  403109:	adc    bp,WORD PTR [edi]
  40310c:	pop    ds
  40310d:	or     DWORD PTR ds:0x26e9538b,eax
  403113:	bound  edi,QWORD PTR [ebx-0x2fa6e367]
  403119:	mov    ds:0x5fc8f4a8,eax
  40311e:	leave  
  40311f:	test   al,0x70
  403121:	cdq    
  403122:	sub    eax,0xfccd6ace
  403127:	arpl   ax,sp
  403129:	in     eax,dx
  40312a:	test   ebx,ebx
  40312c:	mov    DWORD PTR [edi-0x31],eax
  40312f:	xor    eax,0x68186e8d
  403134:	mov    cl,0x3a
  403136:	addr16 push ebp
  403138:	add    dl,0x45
  40313b:	lods   eax,DWORD PTR ds:[esi]
  40313c:	xlat   BYTE PTR ds:[ebx]
  40313d:	int    0x26
  40313f:	adc    bl,0x4d
  403142:	mov    ecx,DWORD PTR [esi-0x39]
  403145:	test   al,0xe7
  403147:	dec    esp
  403148:	and    eax,0xa2b1161a
  40314d:	imul   ecx,eax,0xfffffff3
  403150:	mov    dl,0x81
  403152:	aaa    
  403153:	adc    BYTE PTR [ecx],0x86
  403156:	out    0xe1,al
  403158:	sub    ch,bl
  40315a:	mov    ds:0x918fe629,al
  40315f:	sub    cl,BYTE PTR ds:0x6dcef4
  403165:	out    dx,eax
  403166:	mov    ds:0xfea55810,al
  40316b:	xchg   BYTE PTR [eax],cl
  40316d:	adc    ah,ah
  40316f:	mov    cl,0x7a
  403171:	inc    esp
  403172:	stc    
  403173:	ror    dh,0xeb
  403176:	mov    edx,ebx
  403178:	sub    DWORD PTR [ecx-0x29],esp
  40317b:	mov    eax,0xf2224b7
  403180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403181:	ds push cs
  403183:	cmc    
  403184:	into   
  403185:	mov    esp,0xccc8310d
  40318a:	ret    
  40318b:	mov    ds:0x83d25068,eax
  403190:	daa    
  403191:	sar    DWORD PTR [eax+ebx*8-0x2a],0x9f
  403196:	sbb    ebx,DWORD PTR [eax-0x7c]
  403199:	lods   eax,DWORD PTR ds:[esi]
  40319a:	or     DWORD PTR [ebp+esi*1-0x57],ebx
  40319e:	or     eax,0x60fe186
  4031a3:	push   esi
  4031a4:	lahf   
  4031a5:	mov    eax,ds:0x3a849edc
  4031aa:	or     cl,ah
  4031ac:	scas   al,BYTE PTR es:[edi]
  4031ad:	mov    dh,0xff
  4031af:	sti    
  4031b0:	add    al,0xb
  4031b2:	mov    ecx,0x88d9ae27
  4031b7:	lods   eax,DWORD PTR ds:[esi]
  4031b8:	(bad)  
  4031b9:	and    cl,BYTE PTR [ecx+0x4615b8af]
  4031bf:	in     eax,dx
  4031c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031c1:	push   edi
  4031c2:	dec    ecx
  4031c3:	xchg   edi,eax
  4031c4:	adc    al,0x3c
  4031c6:	push   edi
  4031c7:	call   0xc451:0x8efed0ee
  4031ce:	cdq    
  4031cf:	test   DWORD PTR [ecx+0x50],esp
  4031d2:	xor    dh,BYTE PTR [edi+0x50]
  4031d5:	(bad)  
  4031d6:	(bad)  
  4031d8:	and    al,0x29
  4031da:	pop    esp
  4031db:	ins    DWORD PTR es:[edi],dx
  4031dc:	sub    eax,0x7c0fc97f
  4031e1:	dec    esi
  4031e2:	aam    0x92
  4031e4:	jo     0x403256
  4031e6:	fs dec ebx
  4031e8:	clc    
  4031e9:	fwait
  4031ea:	xchg   edx,eax
  4031eb:	ret    
  4031ec:	adc    al,0xfd
  4031ee:	xchg   ebp,eax
  4031ef:	mov    ah,0x5a
  4031f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031f2:	sbb    esp,DWORD PTR [ebp+eax*1-0xd]
  4031f6:	push   edi
  4031f7:	dec    esp
  4031f8:	je     0x40320b
  4031fa:	xor    ebp,edi
  4031fc:	in     al,0x61
  4031fe:	cdq    
  4031ff:	test   ebp,edi
  403201:	je     0x40327e
  403203:	fs popf 
  403205:	sbb    eax,0xff5710a2
  40320a:	ja     0x40321b
  40320c:	adc    al,0x94
  40320e:	js     0x4031fa
  403210:	mov    DWORD PTR [eax+0x2c65dda0],ebp
  403216:	mov    DWORD PTR [esi-0x25ca6c6c],esi
  40321c:	dec    esp
  40321d:	and    bh,BYTE PTR [edx]
  40321f:	mov    ecx,0x219afc3c
  403224:	pusha  
  403225:	jg     0x4031fb
  403227:	lods   al,BYTE PTR ds:[esi]
  403228:	test   DWORD PTR [eax+0x420c03b],ecx
  40322e:	xlat   BYTE PTR ds:[ebx]
  40322f:	pop    ebx
  403230:	sub    ch,dh
  403232:	push   edi
  403233:	jp     0x403214
  403235:	mov    bl,BYTE PTR es:[edi]
  403238:	loope  0x403261
  40323a:	scas   al,BYTE PTR es:[edi]
  40323b:	adc    al,0x12
  40323d:	adc    ebx,ebx
  40323f:	mov    edi,0x847a7e37
  403244:	shr    BYTE PTR [edi+edx*8],cl
  403247:	adc    BYTE PTR [ebp-0x5c00ca22],cl
  40324d:	out    0xd2,al
  40324f:	je     0x403286
  403251:	nop
  403252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403253:	cs push ecx
  403255:	xchg   BYTE PTR [ecx+0x28],dh
  403258:	xchg   al,ah
  40325a:	jmp    0x4032aa
  40325c:	test   al,al
  40325e:	pop    esp
  40325f:	adc    BYTE PTR [eax+0x227f04e0],dh
  403265:	outs   dx,DWORD PTR ds:[esi]
  403266:	jbe    0x40328f
  403268:	mov    bh,0xa1
  40326a:	dec    eax
  40326b:	bound  esp,QWORD PTR [ebx+0x22254320]
  403271:	gs mov dl,0xac
  403274:	pop    eax
  403275:	imul   esp,DWORD PTR [ebp+0x751d568d],0xa
  40327c:	sar    ecx,1
  40327e:	jmp    0xc45f:0xb5de4436
  403285:	shr    DWORD PTR [ecx],cl
  403287:	inc    esp
  403288:	pop    edx
  403289:	jnp    0x403259
  40328b:	pavgb  mm6,QWORD PTR ds:0xc261d388
  403292:	mov    eax,ds:0x29285561
  403297:	int3   
  403298:	je     0x4032fd
  40329a:	push   ds
  40329b:	out    0x5,eax
  40329d:	in     al,dx
  40329e:	sahf   
  40329f:	sahf   
  4032a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032a1:	mov    edi,0x98dde8c6
  4032a6:	adc    al,0xe3
  4032a8:	out    dx,al
  4032a9:	nop
  4032aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032ab:	pop    ebp
  4032ac:	mov    ah,0x88
  4032ae:	ror    BYTE PTR [ecx],cl
  4032b0:	jmp    0x4032a7
  4032b2:	pop    ecx
  4032b3:	fistp  QWORD PTR [esi-0x207edd38]
  4032b9:	and    al,0xdf
  4032bb:	fnstenv ds:0x8c572d42
  4032c1:	(bad)  
  4032c2:	jmp    0x933:0x11f361b1
  4032c9:	sbb    BYTE PTR [edx-0x7e570a7],0xbd
  4032d0:	jmp    0x403286
  4032d2:	add    BYTE PTR [ecx],dh
  4032d4:	mov    esp,0x1b5279e6
  4032d9:	cmp    BYTE PTR [eax-0xa],al
  4032dc:	cmp    edi,eax
  4032de:	aas    
  4032df:	mov    ds:0xcff0678b,al
  4032e4:	ret    0x37db
  4032e7:	xor    DWORD PTR [esp+esi*4],esp
  4032ea:	imul   DWORD PTR [esi+0x451642e8]
  4032f0:	xchg   esp,eax
  4032f1:	aaa    
  4032f2:	ins    BYTE PTR es:[edi],dx
  4032f3:	adc    eax,0xe87047fe
  4032f8:	add    ch,bh
  4032fa:	xor    eax,0x49dab5e9
  4032ff:	push   edi
  403300:	jmp    0xf88a:0xc1c639a9
  403307:	loop   0x403356
  403309:	fstp   DWORD PTR [esi+0x13880bb0]
  40330f:	jo     0x4032ef
  403311:	pushf  
  403312:	inc    edi
  403313:	mov    eax,ds:0x9f42536c
  403318:	mov    fs,WORD PTR [edx-0x5863b2b4]
  40331e:	outs   dx,DWORD PTR ds:[esi]
  40331f:	ret    
  403320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403321:	xor    BYTE PTR [ebx],bl
  403323:	aam    0x7c
  403325:	jge    0x40335a
  403327:	mov    edx,0x439c9768
  40332c:	sub    al,0xe
  40332e:	loopne 0x4032d6
  403330:	mov    cl,0x9
  403332:	sbb    al,BYTE PTR [esi+edi*4-0x5]
  403336:	dec    esp
  403337:	popa   
  403338:	sahf   
  403339:	add    ecx,DWORD PTR [edx+edi*2-0x10b2a7b2]
  403340:	sbb    ah,BYTE PTR [eax]
  403342:	jp     0x4032d4
  403344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403345:	jp     0x403325
  403347:	sti    
  403348:	adc    DWORD PTR [ebx-0x50e8e90c],edx
  40334e:	lods   al,BYTE PTR ds:[esi]
  40334f:	icebp  
  403350:	inc    esp
  403351:	push   ecx
  403352:	nop
  403353:	push   esp
  403354:	mov    cl,0xc9
  403356:	cli    
  403357:	mov    eax,0xa026c796
  40335c:	call   0x63db2743
  403361:	and    ecx,esi
  403363:	or     bl,BYTE PTR [esi+0x4]
  403366:	les    ebp,FWORD PTR [ebp+edi*8-0x634e79c2]
  40336d:	test   DWORD PTR [eax+ebx*2-0x2a],0x49458755
  403375:	outs   dx,DWORD PTR cs:[esi]
  403377:	bndstx [esi+edx*4],(bad)
  40337b:	arpl   WORD PTR [ecx-0x4f],si
  40337e:	js     0x403319
  403380:	cmp    DWORD PTR [ecx],edi
  403382:	outs   dx,BYTE PTR ds:[esi]
  403383:	xor    eax,0xdf761726
  403388:	test   DWORD PTR [ecx+0x43],ebp
  40338b:	cmc    
  40338c:	pusha  
  40338d:	dec    ebx
  40338e:	pop    esp
  40338f:	mov    DWORD PTR [ebp-0x1f],0xe753f052
  403396:	and    ecx,DWORD PTR [eax+0x578c15f0]
  40339c:	ds in  al,dx
  40339e:	pop    edi
  40339f:	mov    bl,0x78
  4033a1:	add    ch,BYTE PTR [ecx+0x46f5cb1b]
  4033a7:	(bad)  
  4033a8:	shl    DWORD PTR [edx-0x7f251998],cl
  4033ae:	hlt    
  4033af:	ds int3 
  4033b1:	mov    ebp,0xc42336ab
  4033b6:	das    
  4033b7:	push   ds
  4033b8:	std    
  4033b9:	mov    edi,0xd9c2bb40
  4033be:	scas   al,BYTE PTR es:[edi]
  4033bf:	sub    dl,ch
  4033c1:	pop    eax
  4033c2:	call   0x8d56b6d7
  4033c7:	fistp  WORD PTR [edx-0x71a9e768]
  4033cd:	push   0x8b6205a2
  4033d2:	and    eax,0xdc00ca96
  4033d7:	and    DWORD PTR [esi-0x65e782a9],eax
  4033dd:	add    eax,0x7c82e151
  4033e2:	retf   0x2660
  4033e5:	das    
  4033e6:	subps  xmm2,xmm0
  4033e9:	je     0x4033bc
  4033eb:	test   eax,0x264edab3
  4033f0:	mov    cl,BYTE PTR [edx-0x3c3c5046]
  4033f6:	adc    al,0xfd
  4033f8:	jmp    0xfcfe1633
  4033fd:	arpl   WORD PTR [eax+0x5a],bp
  403400:	lea    esi,[ebx+0x3f]
  403403:	xchg   edi,eax
  403404:	or     ebx,0x564729b9
  40340a:	xor    al,0x74
  40340c:	dec    BYTE PTR ss:[edx]
  40340f:	jle    0x403487
  403411:	xor    DWORD PTR [edi+0x76],edi
  403414:	inc    ebp
  403415:	push   ebx
  403416:	jmp    0x40347e
  403418:	dec    esi
  403419:	fnsave [edi-0x2d]
  40341c:	pop    ss
  40341d:	cmp    dh,BYTE PTR [ebp+0x76e1cfae]
  403423:	and    BYTE PTR [ecx+0x20],0x87
  403427:	mov    edi,0x2d63d08a
  40342c:	xor    DWORD PTR [ebp-0x15],0x843e0f17
  403433:	pop    ds
  403434:	and    DWORD PTR [ebx-0x46],eax
  403437:	inc    ebx
  403438:	loope  0x4034ac
  40343a:	sahf   
  40343b:	js     0x403449
  40343d:	or     DWORD PTR [eax+ebp*1],edx
  403440:	push   es
  403441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403442:	jge    0x4033e3
  403444:	mov    al,0x8d
  403446:	sub    BYTE PTR [edi],0xf3
  403449:	mov    BYTE PTR [edi+edx*1-0x6ccab33],0xa8
  403451:	and    esp,DWORD PTR [eax]
  403453:	call   0x1386:0xf4e68ea6
  40345a:	inc    esp
  40345b:	pushf  
  40345c:	mov    WORD PTR [ebp+0x4a],?
  40345f:	mov    edx,0x95856a42
  403464:	les    edi,FWORD PTR [ebx+0x67]
  403467:	daa    
  403468:	jmp    0x403486
  40346a:	into   
  40346b:	pop    ecx
  40346c:	jbe    0x40345c
  40346e:	mov    fs,esi
  403470:	xor    edx,0x5
  403473:	sub    eax,0xfde64d50
  403478:	jle    0x4033fe
  40347a:	fistp  WORD PTR [edx+ebx*2+0x6a]
  40347e:	fstp   QWORD PTR [edx+0x5c]
  403481:	repnz retf 
  403483:	repz scas eax,DWORD PTR es:[edi]
  403485:	mov    dl,0xb9
  403487:	repnz pop ds
  403489:	lods   eax,DWORD PTR ds:[esi]
  40348a:	pop    esi
  40348b:	cmp    cl,BYTE PTR [edi-0x74]
  40348e:	sub    al,0xb2
  403490:	xchg   ecx,eax
  403491:	xor    cl,ah
  403493:	mov    ah,BYTE PTR [edx-0x47]
  403496:	ins    BYTE PTR es:[edi],dx
  403497:	pop    edx
  403498:	jl     0x4034ab
  40349a:	jle    0x403434
  40349c:	push   esp
  40349d:	xchg   ecx,eax
  40349e:	pop    edi
  40349f:	mov    eax,0xecf65f
  4034a4:	lahf   
  4034a5:	das    
  4034a6:	add    al,0x24
  4034a8:	data16 adc bh,BYTE PTR [edi+0x14]
  4034ac:	sbb    al,0xc8
  4034ae:	add    BYTE PTR [ecx+0x7894d02],bl
  4034b4:	retf   0x1ebd
  4034b7:	add    al,0x2d
  4034b9:	push   edx
  4034ba:	sbb    dl,BYTE PTR [ebp-0x23]
  4034bd:	or     ebx,DWORD PTR ds:0xa8a5c57
  4034c3:	mov    bl,0x77
  4034c5:	repz pusha 
  4034c7:	mov    bl,0x71
  4034c9:	jle    0x403545
  4034cb:	lods   al,BYTE PTR ds:[esi]
  4034cc:	lea    ecx,[eax-0x5c]
  4034cf:	cdq    
  4034d0:	psubusw mm2,QWORD PTR [edx-0x37cff133]
  4034d7:	out    dx,eax
  4034d8:	xor    DWORD PTR [ebx-0x5baf302f],edi
  4034de:	ss in  al,dx
  4034e0:	sbb    al,0x1a
  4034e2:	jo     0x4034fe
  4034e4:	fistp  DWORD PTR [esi+0x5]
  4034e7:	jns    0x122df7cb
  4034ed:	repz push edi
  4034ef:	mov    ch,0x3f
  4034f1:	btc    DWORD PTR [ebx+0x50361adf],esp
  4034f8:	daa    
  4034f9:	imul   DWORD PTR [esi+0x58]
  4034fc:	daa    
  4034fd:	or     DWORD PTR [edx+0x4d],esp
  403500:	mov    al,ds:0x51da2805
  403505:	ja     0x40351b
  403507:	xchg   ebp,eax
  403508:	stc    
  403509:	jl     0x4034c2
  40350b:	aad    0x37
  40350d:	mov    eax,0xcea2b130
  403512:	xor    BYTE PTR [edi-0x32],bh
  403515:	icebp  
  403516:	push   edi
  403517:	mov    dl,0x1b
  403519:	sbb    eax,eax
  40351b:	test   eax,0x8596eca9
  403520:	xchg   ebp,eax
  403521:	jle    0x40352b
  403523:	sbb    BYTE PTR [edi],dl
  403525:	push   0x4e
  403527:	dec    esi
  403528:	lea    ebx,[edx]
  40352a:	lahf   
  40352b:	cwde   
  40352c:	xchg   edi,eax
  40352d:	add    eax,0x584ba697
  403532:	mov    eax,0x8cc26f91
  403537:	xor    al,BYTE PTR [edi+0x78]
  40353a:	daa    
  40353b:	int3   
  40353c:	mov    cl,ah
  40353e:	mov    edx,0x505e477b
  403543:	gs pop edx
  403545:	imul   edx,DWORD PTR [bx-0x2c],0x13585ed1
  40354d:	popa   
  40354e:	pop    ebp
  40354f:	jmp    0x403556
  403551:	mul    BYTE PTR [ecx]
  403553:	inc    ebp
  403554:	outs   dx,DWORD PTR ds:[esi]
  403555:	arpl   WORD PTR [edi],bp
  403557:	mov    edx,DWORD PTR [esi+eax*1-0x25]
  40355b:	inc    edx
  40355c:	jl     0x403508
  40355e:	arpl   WORD PTR [ecx-0x34203344],sp
  403564:	adc    ebx,ecx
  403566:	les    esp,FWORD PTR [edi]
  403568:	out    0x74,eax
  40356a:	addr16 mov dh,0xb4
  40356d:	push   cs
  40356e:	into   
  40356f:	in     al,dx
  403570:	jl     0x403552
  403572:	or     al,0x65
  403574:	iret   
  403575:	ins    DWORD PTR es:[edi],dx
  403576:	adc    dh,al
  403578:	outs   dx,DWORD PTR ds:[esi]
  403579:	(bad)  
  40357a:	dec    esi
  40357b:	inc    edx
  40357c:	or     eax,0x4b27282b
  403581:	je     0x40355e
  403583:	std    
  403584:	fs (bad) 
  403586:	push   ds
  403587:	bound  edi,QWORD PTR [ecx]
  403589:	lods   eax,DWORD PTR ds:[esi]
  40358a:	push   ecx
  40358b:	test   al,0x9f
  40358d:	mov    esp,0xba880164
  403592:	xchg   esi,eax
  403593:	xchg   esp,eax
  403594:	sahf   
  403595:	pop    eax
  403596:	shl    BYTE PTR [esp+ebp*1],1
  403599:	push   0x8b773c6
  40359e:	mov    edi,0x4372e0d2
  4035a3:	mov    cs,WORD PTR [esi+eax*1]
  4035a6:	pop    edi
  4035a7:	xchg   esi,eax
  4035a8:	push   0x80302402
  4035ad:	or     eax,0x1bd2ead2
  4035b2:	out    0xb0,eax
  4035b4:	lods   eax,DWORD PTR ds:[esi]
  4035b5:	test   BYTE PTR [esi-0x1f8dec8e],cl
  4035bb:	sbb    ebp,ebp
  4035bd:	fadd   QWORD PTR [eax+0xc]
  4035c0:	out    0xc7,eax
  4035c2:	mov    ch,0x2
  4035c4:	dec    edx
  4035c5:	xchg   edx,eax
  4035c6:	mov    esi,0x4e38b892
  4035cb:	mov    bh,BYTE PTR [esi+0x32]
  4035ce:	or     dh,cl
  4035d0:	aaa    
  4035d1:	adc    cl,BYTE PTR [ecx]
  4035d3:	push   ebx
  4035d4:	jg     0x403565
  4035d6:	repz jl 0x40363c
  4035d9:	or     ch,bl
  4035db:	pop    edi
  4035dc:	imul   BYTE PTR [ecx]
  4035de:	test   eax,0xf55e9403
  4035e3:	popa   
  4035e4:	sbb    eax,edx
  4035e6:	dec    edx
  4035e7:	xchg   BYTE PTR [eax+0x62eb7f6d],bl
  4035ed:	(bad)  
  4035ef:	xor    BYTE PTR [ebp-0x7655f7bd],ah
  4035f5:	pop    edx
  4035f6:	inc    edx
  4035f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035f8:	sub    eax,0x153c942e
  4035fd:	fbld   TBYTE PTR [ecx]
  4035ff:	xor    al,0x91
  403601:	jnp    0x4035f9
  403603:	js     0x4035d8
  403605:	imul   esi,DWORD PTR ss:[eax+0x79b19eb],0xffffffb8
  40360d:	or     bl,BYTE PTR [ebx+0x5f7b377]
  403613:	imul   ebx,esp,0x53
  403616:	push   edx
  403617:	ss mov bl,0x12
  40361a:	bound  edi,QWORD PTR [ecx-0x4c]
  40361d:	inc    edx
  40361e:	jmp    0x947a070e
  403623:	lods   eax,DWORD PTR ds:[esi]
  403624:	xchg   ecx,eax
  403625:	aad    0x60
  403627:	leave  
  403628:	addr16 jns 0x4035f6
  40362b:	mov    ds,WORD PTR [eax+ebx*1-0x249730df]
  403632:	cmp    eax,ecx
  403634:	ds pop es
  403636:	jmp    0xd267:0x69c72e32
  40363d:	shr    BYTE PTR [esi],1
  40363f:	or     al,0xdb
  403641:	sbb    eax,0x55e9d34c
  403646:	mov    ch,0x73
  403648:	test   eax,0x1eeb1402
  40364d:	sbb    BYTE PTR [ebx-0x75],0x5a
  403651:	mov    eax,0xf8bdb05c
  403656:	mov    ds:0xd29fb2f0,eax
  40365b:	dec    eax
  40365c:	fmul   DWORD PTR [ebx+edx*2+0x6c]
  403660:	push   eax
  403661:	iret   
  403662:	pusha  
  403663:	in     al,dx
  403664:	ret    
  403665:	dec    edx
  403666:	lea    esp,[edx]
  403668:	test   ah,dh
  40366a:	mov    esi,0x4fb71b91
  40366f:	pop    eax
  403670:	addr16 fs int3 
  403673:	out    0x1a,eax
  403675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403676:	xor    dl,al
  403678:	and    esp,DWORD PTR [edx+0x30]
  40367b:	jbe    0x40362c
  40367d:	add    esi,edi
  40367f:	mov    esp,0x30f1cef8
  403684:	fstp   QWORD PTR [ecx]
  403686:	ja     0x403667
  403688:	stos   DWORD PTR es:[edi],eax
  403689:	or     eax,0xce1f3260
  40368e:	nop
  40368f:	xor    DWORD PTR ds:0x2ab71c83,esp
  403695:	pusha  
  403696:	scas   al,BYTE PTR es:[edi]
  403697:	jecxz  0x4036c9
  403699:	dec    esp
  40369a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40369b:	lock in al,dx
  40369d:	in     eax,dx
  40369e:	arpl   si,di
  4036a0:	test   DWORD PTR [ebx+0x710d4615],edx
  4036a6:	leave  
  4036a7:	push   ds
  4036a8:	loope  0x4036c1
  4036aa:	out    dx,al
  4036ab:	int3   
  4036ac:	sar    BYTE PTR [ebp+0x34650c47],1
  4036b2:	jbe    0x40369c
  4036b4:	jecxz  0x403712
  4036b6:	aad    0x6b
  4036b8:	jno    0x403651
  4036ba:	scas   eax,DWORD PTR es:[edi]
  4036bb:	fcomp  QWORD PTR [edx-0x1aadad2d]
  4036c1:	adc    bl,BYTE PTR [eax-0x5fdf8b55]
  4036c7:	mov    dh,0x1f
  4036c9:	loope  0x4036a3
  4036cb:	xchg   cl,dl
  4036cd:	jmp    0x39c5:0x18907f70
  4036d4:	sbb    DWORD PTR [ebp+0x70316f6],ebp
  4036da:	lods   al,BYTE PTR ds:[esi]
  4036db:	sbb    DWORD PTR [eax+0x46],ebx
  4036de:	int3   
  4036df:	jne    0x4036f3
  4036e1:	sbb    BYTE PTR [ebp+0x68],0x56
  4036e5:	cmp    DWORD PTR [edx+edi*4],eax
  4036e8:	mov    ebp,0xce7a01f
  4036ed:	inc    eax
  4036ee:	pop    es
  4036ef:	pop    ebp
  4036f0:	mov    DWORD PTR [ebx-0x142a2ec7],ebp
  4036f6:	push   edi
  4036f7:	mov    ebx,0xcd5441bf
  4036fc:	mov    ebp,0xaa565c20
  403701:	push   eax
  403702:	jns    0x4036c8
  403704:	and    ebx,DWORD PTR [ebx-0x4fbf0edb]
  40370a:	sbb    DWORD PTR [ebx-0x332f45d7],esi
  403710:	xor    eax,0x815861f3
  403715:	(bad)  
  403716:	adc    BYTE PTR ds:[ebp+0x3190baa2],cl
  40371d:	jb     0x403734
  40371f:	repz sub BYTE PTR [esi+0x3490b0a5],bl
  403726:	push   ebp
  403727:	push   es
  403728:	add    al,BYTE PTR [ecx-0x2cf306c4]
  40372e:	aad    0xb2
  403730:	add    ebx,esi
  403732:	sbb    ah,BYTE PTR [eax-0x27b86e9d]
  403738:	daa    
  403739:	setge  dh
  40373c:	push   0x49
  40373e:	vdivps xmm1,xmm1,XMMWORD PTR [edx]
  403742:	sahf   
  403743:	dec    ebp
  403744:	add    DWORD PTR [eax+0xe64252a],ebx
  40374a:	popf   
  40374b:	pop    edx
  40374c:	xchg   esp,eax
  40374d:	popf   
  40374e:	pop    edx
  40374f:	fcom   DWORD PTR [ebx]
  403751:	adc    al,0x64
  403753:	imul   ebp,DWORD PTR [ecx+ecx*1+0x6d],0xfffffff1
  403758:	sbb    bl,BYTE PTR [ebp+0x48f05029]
  40375e:	mov    esp,0xeb2de4b6
  403763:	rol    DWORD PTR [edx],1
  403765:	mov    ds:0xf3bc693d,ax
  40376b:	fdivp  st(6),st
  40376d:	mov    esp,0xf401d2f3
  403772:	mov    ch,0xf2
  403774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403775:	out    0x40,al
  403777:	xchg   esi,eax
  403778:	imul   edi,DWORD PTR [ecx-0xb],0xfffffff7
  40377c:	push   ecx
  40377d:	mov    ebp,0x3b5cc595
  403782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403783:	and    DWORD PTR [edi],ebx
  403785:	out    0xa5,eax
  403787:	gs je  0x4037d9
  40378a:	jae    0x4037aa
  40378c:	sar    DWORD PTR [ecx+0x57],1
  40378f:	jecxz  0x403761
  403791:	cld    
  403792:	in     al,dx
  403793:	fbstp  TBYTE PTR [ebx+ebx*4]
  403797:	push   0xffffffaa
  403799:	push   ebx
  40379a:	dec    eax
  40379b:	mov    ebp,0xc9437f45
  4037a0:	pop    ecx
  4037a1:	push   ebp
  4037a2:	jno    0x40379e
  4037a4:	in     eax,dx
  4037a5:	outs   dx,BYTE PTR ds:[esi]
  4037a6:	mov    ch,0x1d
  4037a8:	fwait
  4037a9:	sar    al,cl
  4037ab:	add    ebp,DWORD PTR [ecx+edi*1]
  4037ae:	nop
  4037af:	(bad)  
  4037b3:	ss add eax,0x1920e622
  4037b9:	aad    0xfd
  4037bb:	adc    ecx,eax
  4037bd:	inc    ebx
  4037be:	mov    esi,edi
  4037c0:	and    eax,0x6c769261
  4037c5:	jne    0x403809
  4037c7:	rol    BYTE PTR [edi+0x4b260cb8],0x0
  4037ce:	add    esp,DWORD PTR [edx+0x70012e8d]
  4037d4:	cmp    cl,dl
  4037d6:	add    DWORD PTR [ebp+0x57],0xcdb10b89
  4037dd:	adc    esp,ebx
  4037df:	jmp    0xbb4f3f37
  4037e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037e5:	pop    ds
  4037e6:	jg     0x403853
  4037e8:	fwait
  4037e9:	xchg   ecx,eax
  4037ea:	call   DWORD PTR [eax+0x63]
  4037ed:	jg     0x4037f9
  4037ef:	dec    eax
  4037f0:	repz daa 
  4037f2:	(bad)  
  4037f3:	lods   eax,DWORD PTR ds:[esi]
  4037f4:	xor    BYTE PTR [ebp+0x3acc014c],ch
  4037fa:	inc    eax
  4037fb:	or     BYTE PTR [esi-0x33b01876],ah
  403801:	aam    0xce
  403803:	push   esp
  403804:	stos   BYTE PTR es:[edi],al
  403805:	aas    
  403806:	test   DWORD PTR [edx-0x6c436d32],esi
  40380c:	mov    ebp,ebx
  40380e:	and    BYTE PTR ds:[ebp-0x5887dc0e],0xf
  403816:	sar    BYTE PTR [ecx+0x34],0x6c
  40381a:	fs push es
  40381c:	pop    es
  40381d:	lea    esp,[eax+0x4c]
  403820:	mov    ah,0x7f
  403822:	sahf   
  403823:	mov    al,ds:0xb9257338
  403828:	cld    
  403829:	or     al,0x8e
  40382b:	rol    BYTE PTR [ecx+eiz*1-0x36],1
  40382f:	sub    BYTE PTR ds:0xaa7635c9,ah
  403835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403836:	push   es
  403837:	fldenv [ecx]
  403839:	adc    ecx,eax
  40383b:	fdivr  QWORD PTR [ebp+0x77d7832d]
  403841:	into   
  403842:	sar    DWORD PTR [ecx],cl
  403844:	pop    ss
  403845:	popa   
  403846:	jne    0x4037dc
  403848:	jp     0x403832
  40384a:	sbb    BYTE PTR [edx+esi*2+0x24],ah
  40384e:	xchg   ebp,eax
  40384f:	das    
  403850:	jmp    FWORD PTR [edx+0x6c]
  403853:	or     DWORD PTR [ecx-0x13e248b9],ecx
  403859:	mov    esp,DWORD PTR [esi+edx*4]
  40385c:	icebp  
  40385d:	pop    esi
  40385e:	jae    0x403879
  403860:	mov    ds:0xcbe7f82b,al
  403866:	es ret 0x4bbb
  40386a:	ret    
  40386b:	(bad)  
  40386c:	sub    al,0x56
  40386e:	xor    BYTE PTR [eax+0x4a],ch
  403871:	ja     0x403876
  403873:	mov    cl,0xf4
  403875:	xchg   esp,eax
  403876:	repnz push es
  403878:	test   ebp,eax
  40387a:	mov    eax,0x183c1340
  40387f:	sbb    al,0xf0
  403881:	popf   
  403882:	push   0xf3a2d1bb
  403887:	xor    al,0x25
  403889:	aad    0xf0
  40388b:	xchg   DWORD PTR [esi-0x77],ebx
  40388e:	ret    0xa87a
  403891:	mov    eax,0xe4079bbc
  403896:	and    al,0x6b
  403898:	add    ebp,DWORD PTR [ebx+eax*4]
  40389b:	out    0xcc,eax
  40389d:	cmp    dl,BYTE PTR [ebx+0x52]
  4038a0:	ror    BYTE PTR [ebx-0x48c499e8],1
  4038a6:	and    DWORD PTR [ebx-0x784a4aba],ebp
  4038ac:	xor    al,0x1a
  4038ae:	pop    ebx
  4038af:	data16 fucomp st(7)
  4038b2:	rol    BYTE PTR [esi],1
  4038b4:	jmp    0x2e526e78
  4038b9:	repz es scas al,BYTE PTR es:[edi]
  4038bc:	(bad)  
  4038bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038be:	int    0x79
  4038c0:	pop    ebx
  4038c1:	xlat   BYTE PTR ds:[ebx]
  4038c2:	dec    ebx
  4038c3:	add    edx,0x46ade630
  4038c9:	gs mul edi
  4038cc:	inc    ecx
  4038cd:	inc    edi
  4038ce:	push   ebp
  4038cf:	jp     0x403866
  4038d1:	inc    edi
  4038d2:	gs hlt 
  4038d4:	sub    al,0xbb
  4038d6:	mov    ah,0x35
  4038d8:	xor    eax,0x941ceab6
  4038dd:	pop    ss
  4038de:	mov    ebp,0x45d9e0e1
  4038e3:	fld    TBYTE PTR [edx]
  4038e5:	jo     0x40392b
  4038e7:	and    al,0xbe
  4038e9:	push   esi
  4038ea:	std    
  4038eb:	xchg   edi,eax
  4038ec:	sub    edx,DWORD PTR [ebx+0x11a81c33]
  4038f2:	pushf  
  4038f3:	aas    
  4038f4:	cmp    edx,ebp
  4038f6:	pop    esp
  4038f7:	repz ds xchg edi,eax
  4038fa:	xlat   BYTE PTR ds:[ebx]
  4038fb:	sub    BYTE PTR [edx-0x45],ah
  4038fe:	push   esp
  4038ff:	(bad)
  403904:	jmp    0x403889
  403906:	mov    al,BYTE PTR fs:[eax-0x4a]
  40390a:	push   esi
  40390b:	adc    ah,dl
  40390d:	inc    eax
  40390e:	and    ebx,DWORD PTR [ebx-0x1d]
  403911:	mov    gs,WORD PTR [ebp+esi*2-0xd1a7d75]
  403918:	je     0x403952
  40391a:	xchg   edx,eax
  40391b:	out    0xdf,ax
  40391e:	popa   
  40391f:	int    0x67
  403921:	ror    DWORD PTR [edx+0x35d115dd],1
  403927:	lea    ecx,[ebx]
  403929:	jbe    0x4038ca
  40392b:	pop    es
  40392c:	clc    
  40392d:	push   edx
  40392e:	inc    esi
  40392f:	(bad)
  403933:	in     al,dx
  403934:	dec    ecx
  403935:	adc    BYTE PTR [eax],ah
  403937:	out    dx,al
  403938:	fdivr  DWORD PTR [edi+0x1e]
  40393b:	sahf   
  40393c:	add    cl,0xf7
  40393f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403940:	dec    edx
  403941:	pop    es
  403942:	lods   al,BYTE PTR ds:[esi]
  403943:	push   ebx
  403944:	xchg   ebx,eax
  403945:	push   ebp
  403946:	imul   ebp,DWORD PTR [eax],0xffffffbd
  403949:	adc    al,0x21
  40394b:	pop    ss
  40394c:	ficom  DWORD PTR [ecx+0x46b559b0]
  403952:	arpl   dx,di
  403954:	pop    edx
  403955:	fdivr  DWORD PTR [edx-0x4a]
  403958:	stos   DWORD PTR es:[edi],eax
  403959:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40395b:	mov    al,ds:0xd7a15481
  403960:	ret    0x3532
  403963:	rol    ecx,cl
  403965:	daa    
  403966:	sbb    ebp,DWORD PTR [edi+ecx*2]
  403969:	lods   eax,DWORD PTR ds:[esi]
  40396a:	jnp    0x403961
  40396c:	xchg   ebx,eax
  40396d:	jo     0x403925
  40396f:	jmp    0xb8b4562e
  403974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403975:	les    esi,FWORD PTR [ebp-0x6b555bdf]
  40397b:	sbb    esp,esi
  40397d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40397e:	mov    esi,0x44fbd2c2
  403983:	hlt    
  403984:	adc    edx,DWORD PTR [esi+0x4e]
  403987:	and    esi,DWORD PTR [esi-0x2bdaa54]
  40398d:	xor    eax,0x6d9996bf
  403992:	fcmovnu st,st(3)
  403994:	cmp    eax,0x4d516118
  403999:	mov    WORD PTR [edx],ss
  40399b:	sub    al,0x60
  40399d:	jg     0x4039d3
  40399f:	inc    ebp
  4039a0:	fcmovnb st,st(7)
  4039a2:	sub    al,0x32
  4039a4:	xchg   ebp,eax
  4039a5:	cmp    BYTE PTR [eax-0x5e42293d],0x6e
  4039ac:	lahf   
  4039ad:	mov    edx,0x223f6f5b
  4039b2:	outs   dx,DWORD PTR ds:[esi]
  4039b3:	cld    
  4039b4:	or     BYTE PTR [ebx+0x34],0x4e
  4039b8:	push   ss
  4039b9:	mov    ebx,0xcea334ee
  4039be:	sub    BYTE PTR [esi],cl
  4039c0:	push   ecx
  4039c1:	lods   eax,DWORD PTR ds:[esi]
  4039c2:	dec    ebx
  4039c3:	mov    ebp,0x531bf9e0
  4039c8:	xor    cl,al
  4039ca:	inc    ebx
  4039cb:	sbb    bl,ah
  4039cd:	add    ecx,ebx
  4039cf:	les    ecx,FWORD PTR [edx+edx*8+0x6c8a91f7]
  4039d6:	cmc    
  4039d7:	adc    al,0x86
  4039d9:	xor    DWORD PTR [ecx],esi
  4039db:	jns    0x4039ca
  4039dd:	xor    DWORD PTR [ebp+0x287c6b99],edx
  4039e3:	mov    edx,0xe026fb50
  4039e8:	hlt    
  4039e9:	add    al,0x17
  4039eb:	xchg   BYTE PTR [edi],cl
  4039ed:	or     dh,BYTE PTR [ebx-0x351407da]
  4039f3:	inc    edx
  4039f4:	mov    ecx,DWORD PTR [esi]
  4039f6:	ror    BYTE PTR [eax+0x2f],1
  4039f9:	test   BYTE PTR [ebx],bh
  4039fb:	sbb    al,0x57
  4039fd:	inc    esp
  4039fe:	and    DWORD PTR [edi+0x373cdc24],ebp
  403a04:	cmp    DWORD PTR [ecx+esi*8+0x28],esi
  403a08:	(bad)  
  403a09:	jae    0x4039c7
  403a0b:	fisubr DWORD PTR [edx+edx*1-0x19f8b1b5]
  403a12:	ret    
  403a13:	jmp    0xd455:0xc68aedd1
  403a1a:	mov    esi,0xf698af85
  403a1f:	out    0x4d,al
  403a21:	sub    al,BYTE PTR [eax+0xc]
  403a24:	xchg   BYTE PTR ds:0xbdaf31fb,ch
  403a2a:	mov    edx,ebx
  403a2c:	mov    ebx,0x7b867d7f
  403a31:	jo     0x403a44
  403a33:	mov    esp,0x908e949
  403a38:	js     0x403a51
  403a3a:	adc    ebp,DWORD PTR [esi+0x51]
  403a3d:	jbe    0x403a14
  403a3f:	sub    DWORD PTR [ecx+0x6f],0x13e426de
  403a46:	cli    
  403a47:	and    BYTE PTR ds:0x11e3dd52,cl
  403a4d:	retf   0x5c6a
  403a50:	ss jno 0x403a73
  403a53:	xor    DWORD PTR [ebp+ebx*2+0x7a],eax
  403a57:	mov    dh,0xae
  403a59:	out    0x50,eax
  403a5b:	sbb    ebx,eax
  403a5d:	pop    ss
  403a5e:	sar    BYTE PTR es:[edi+ebp*2],cl
  403a62:	test   BYTE PTR [edx],cl
  403a64:	add    ch,BYTE PTR [esi]
  403a66:	popa   
  403a67:	inc    ebx
  403a68:	push   eax
  403a69:	mov    cl,0x3
  403a6b:	mov    eax,0x59e04d97
  403a70:	dec    eax
  403a71:	stc    
  403a72:	pop    eax
  403a73:	ja     0x403af4
  403a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a76:	sahf   
  403a77:	or     cl,BYTE PTR [esi+0x66]
  403a7a:	fwait
  403a7b:	stc    
  403a7c:	cwde   
  403a7d:	loop   0x403a36
  403a7f:	push   0xffffffc3
  403a81:	mov    dl,0x79
  403a83:	mov    edi,0x16f4db34
  403a88:	sbb    DWORD PTR [ebx+eax*8-0x8067f29],ebp
  403a8f:	icebp  
  403a90:	push   ecx
  403a91:	stos   BYTE PTR es:[edi],al
  403a92:	scas   eax,DWORD PTR es:[edi]
  403a93:	sbb    esp,DWORD PTR [ebp+0x1028bcb7]
  403a99:	and    eax,0xd9ad452f
  403a9e:	not    BYTE PTR [esi+edi*2]
  403aa1:	xchg   edi,eax
  403aa2:	test   al,0xeb
  403aa4:	adc    edx,DWORD PTR [ebp+0x6f]
  403aa7:	or     eax,DWORD PTR [edi]
  403aa9:	sub    esi,DWORD PTR [edx]
  403aab:	add    BYTE PTR ds:0x8ae5b19b,0x5
  403ab2:	mov    ecx,0x94019d3f
  403ab7:	lea    ebp,ds:0x4faca074
  403abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403abe:	pop    esi
  403abf:	jg     0x403a4d
  403ac1:	xor    ebx,DWORD PTR [ebp+0x51]
  403ac4:	out    0x64,eax
  403ac6:	xchg   ebp,eax
  403ac7:	xchg   esp,eax
  403ac8:	push   esi
  403ac9:	mov    ecx,0x56a83a2e
  403ace:	add    DWORD PTR [eax],edi
  403ad0:	mov    DWORD PTR [ecx+0x2c],edi
  403ad3:	sub    dl,BYTE PTR [ebp+0x9]
  403ad6:	push   ebx
  403ad7:	enter  0xbed2,0xd7
  403adb:	jp     0x403abb
  403add:	fisttp WORD PTR [ebp+0x557a6ea]
  403ae3:	mov    ds:0x63505793,eax
  403ae8:	retf   0xcd1a
  403aeb:	in     al,0x9b
  403aed:	out    0x25,eax
  403aef:	adc    eax,0x3d6b7616
  403af4:	mov    esp,0xf8918b01
  403af9:	retf   0xdafe
  403afc:	jmp    0x9963:0x2b43c3e9
  403b03:	mov    bl,0xad
  403b05:	add    DWORD PTR [ecx-0x27],eax
  403b08:	lock arpl WORD PTR [edx],sp
  403b0b:	dec    ebx
  403b0c:	and    edi,ebp
  403b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b0f:	pop    es
  403b10:	mov    cl,0x46
  403b12:	and    cl,al
  403b14:	dec    esp
  403b15:	sub    BYTE PTR [edx+0x552717b2],ah
  403b1b:	jp     0x403b7d
  403b1d:	adc    cl,ah
  403b1f:	(bad)  
  403b20:	(bad)  [ecx+0x35]
  403b23:	test   al,dl
  403b25:	cli    
  403b26:	clc    
  403b27:	es xchg ebp,eax
  403b29:	cmp    BYTE PTR [ebx],0x88
  403b2c:	push   edx
  403b2d:	daa    
  403b2e:	addr16 mov eax,0xb975c001
  403b34:	mov    ebp,0xda5bbb74
  403b39:	or     BYTE PTR [ebp+0x60],ch
  403b3c:	add    eax,0xcd60f987
  403b41:	dec    esi
  403b42:	jmp    0xbfed78bb
  403b47:	pop    edi
  403b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b49:	test   BYTE PTR [ebx-0x28],al
  403b4c:	das    
  403b4d:	dec    edi
  403b4e:	jl     0x403b48
  403b50:	and    BYTE PTR [ebp+0x2e],cl
  403b53:	xor    BYTE PTR [edx-0x38],al
  403b56:	lds    esi,FWORD PTR [edx]
  403b58:	stos   BYTE PTR es:[edi],al
  403b59:	fstp   TBYTE PTR [eax-0x3331a43a]
  403b5f:	lea    eax,[ecx]
  403b61:	adc    eax,0x6f4ca63b
  403b66:	pop    es
  403b67:	xor    BYTE PTR [eax+0xa98fb2f],al
  403b6d:	rcl    BYTE PTR [ebp+0xf39d200],1
  403b73:	inc    eax
  403b74:	pop    ecx
  403b75:	mov    ds:0xb0e26e24,al
  403b7a:	xchg   edi,eax
  403b7b:	mov    ecx,0xa85e491f
  403b80:	test   al,0x10
  403b82:	xor    BYTE PTR [edx+0x22a73f37],ch
  403b88:	pop    edx
  403b89:	sub    bl,BYTE PTR [edx]
  403b8b:	dec    esp
  403b8c:	(bad)  
  403b8e:	mov    ecx,0x5561bd7c
  403b93:	retf   0x1c4f
  403b96:	xadd   DWORD PTR [eax+eax*8+0x1f2691bd],esi
  403b9e:	movq   QWORD PTR [ecx-0x2471f61e],mm1
  403ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ba6:	fwait
  403ba7:	cli    
  403ba8:	pop    edx
  403ba9:	pushf  
  403baa:	mov    dh,0xd2
  403bac:	in     al,0x7a
  403bae:	stos   BYTE PTR es:[edi],al
  403baf:	(bad)  
  403bb0:	out    0x9e,eax
  403bb2:	pop    ss
  403bb3:	call   0x9f68e475
  403bb8:	ret    0xb22f
  403bbb:	adc    dh,BYTE PTR [esi+0x78bb1697]
  403bc1:	mov    ch,0x98
  403bc3:	mov    eax,ds:0x96805051
  403bc8:	rcr    DWORD PTR ds:0x5905ea89,cl
  403bce:	mov    dl,ah
  403bd0:	mov    ebx,0x47052727
  403bd5:	adc    eax,0xcc44a3f0
  403bda:	aad    0x73
  403bdc:	mov    BYTE PTR [ebp+ebp*8-0x7a9f69b0],ch
  403be3:	jno    0x403c39
  403be5:	mov    dl,0xb1
  403be7:	mov    ch,0x79
  403be9:	cmp    eax,0x5019c876
  403bee:	ret    
  403bef:	into   
  403bf0:	or     BYTE PTR [ebx+0x3f6b14e1],0x99
  403bf7:	push   0x5ff67bc4
  403bfc:	mov    WORD PTR [eax-0x64],cs
  403bff:	data16 xor cl,BYTE PTR [edi]
  403c02:	out    0x34,eax
  403c04:	jp     0x403bfd
  403c06:	retf   
  403c07:	int    0x5
  403c09:	jp     0x403b94
  403c0b:	adc    BYTE PTR [ecx*2-0x39c1772d],ah
  403c12:	mov    edi,0x9cc924de
  403c17:	cdq    
  403c18:	pushaw 
  403c1a:	out    0x15,eax
  403c1c:	sbb    eax,0x79167dc2
  403c21:	sbb    edi,DWORD PTR [edx+esi*2+0x2632952c]
  403c28:	or     BYTE PTR [ecx-0x4908e9dc],ch
  403c2e:	push   eax
  403c2f:	push   eax
  403c30:	inc    ecx
  403c31:	jle    0x403c8f
  403c33:	dec    ecx
  403c34:	or     esi,DWORD PTR [ebp-0x17]
  403c37:	repnz mov edx,0xf9a7e936
  403c3d:	leave  
  403c3e:	mov    eax,ds:0x3c91960d
  403c43:	pop    edi
  403c44:	rcl    BYTE PTR [edi],0x9d
  403c47:	mov    bl,0x89
  403c49:	and    dl,0xd5
  403c4c:	pop    eax
  403c4d:	sti    
  403c4e:	std    
  403c4f:	push   cs
  403c50:	jno    0x403bf3
  403c52:	jl     0x403c81
  403c54:	xchg   ebp,eax
  403c55:	in     eax,dx
  403c56:	and    BYTE PTR [edx],0xba
  403c59:	ins    DWORD PTR es:[edi],dx
  403c5a:	xchg   ebx,eax
  403c5b:	(bad)  
  403c5c:	icebp  
  403c5d:	mov    al,0xbf
  403c5f:	lds    esp,FWORD PTR [edi+ebx*1-0x5c]
  403c63:	mov    ecx,0xefde29e8
  403c68:	lock sub al,0x91
  403c6b:	sub    al,0xb4
  403c6d:	push   ds
  403c6e:	mov    ecx,0xadafaff6
  403c73:	push   ebx
  403c74:	jmp    0x25a2:0x9bbcb4b
  403c7b:	mov    edx,0xe3d11345
  403c80:	push   0xffffff8e
  403c82:	rcl    DWORD PTR [ecx],0x29
  403c85:	mov    ecx,0xdc936c4a
  403c8a:	or     BYTE PTR ds:0x26dcf28,cl
  403c90:	jge    0x403cbb
  403c92:	repnz adc eax,0x2be2adb0
  403c98:	jno    0x403cab
  403c9a:	retf   0xd66a
  403c9d:	cmp    al,0xa6
  403c9f:	mov    ch,0xce
  403ca1:	loop   0x403c3a
  403ca3:	adc    DWORD PTR [ebp+0x6],ecx
  403ca6:	and    DWORD PTR [edi-0x419b4e5c],0xffffffb5
  403cad:	adc    al,0x6b
  403caf:	cs cld 
  403cb1:	push   ss
  403cb2:	sub    eax,0x56e657cc
  403cb7:	mov    dl,0x47
  403cb9:	push   ebp
  403cba:	loop   0x403c72
  403cbc:	retf   0x3b0
  403cbf:	je     0x403d00
  403cc1:	and    BYTE PTR [esp+edi*1+0x7491cf14],0xaa
  403cc9:	inc    esi
  403cca:	add    DWORD PTR [edi-0x534eb19d],ebp
  403cd0:	mov    ah,BYTE PTR ds:0xb18b3c46
  403cd6:	cmp    BYTE PTR [edx-0x7ff1074b],dl
  403cdc:	outs   dx,BYTE PTR ds:[esi]
  403cdd:	repz lahf 
  403cdf:	pop    ecx
  403ce0:	int    0x0
  403ce2:	sub    al,0x9a
  403ce4:	cmp    DWORD PTR [eax+0x4b],ebp
  403ce7:	or     eax,0x229c6456
  403cec:	iret   
  403ced:	pop    ecx
  403cee:	arpl   WORD PTR [ebx+0x16],dx
  403cf1:	sub    eax,0xb49ee008
  403cf6:	cmp    DWORD PTR [ecx],esi
  403cf8:	pusha  
  403cf9:	push   es
  403cfa:	je     0x403cff
  403cfc:	dec    ebx
  403cfd:	xchg   ebx,eax
  403cfe:	jp     0x403d53
  403d00:	add    eax,0xcba5dcc0
  403d05:	jle    0x403d3e
  403d07:	mov    al,es:0xe34c5d28
  403d0d:	scas   eax,DWORD PTR es:[edi]
  403d0e:	sub    bh,bl
  403d10:	fwait
  403d11:	xor    DWORD PTR [esi-0x5],ecx
  403d14:	sub    BYTE PTR [ebp+0x7a78ca5],dh
  403d1a:	add    DWORD PTR [edx+ecx*1-0x45882900],esi
  403d21:	jbe    0x403d17
  403d23:	or     al,BYTE PTR [edx-0x15]
  403d26:	jne    0x403d1a
  403d28:	cmp    DWORD PTR [esi+0x3e1dd81d],esi
  403d2e:	and    BYTE PTR [ebp+0x1f],al
  403d31:	xor    dl,cl
  403d33:	xor    DWORD PTR [ecx+ecx*1],esi
  403d36:	scas   eax,DWORD PTR es:[edi]
  403d37:	sbb    BYTE PTR [edi+0x7d585496],ch
  403d3d:	mov    DWORD PTR [ebx-0x56],esp
  403d40:	inc    edi
  403d41:	add    DWORD PTR [ecx+0x2c],ebp
  403d44:	les    ebx,FWORD PTR [eax-0x40980d65]
  403d4a:	test   DWORD PTR [edi+0x51],esi
  403d4d:	and    eax,0x3fab600a
  403d52:	cwde   
  403d53:	jmp    0xfe22e8c5
  403d58:	popa   
  403d59:	mov    ecx,0x952cd0e8
  403d5e:	daa    
  403d5f:	pop    edi
  403d60:	cld    
  403d61:	jge    0x403cf8
  403d63:	popf   
  403d64:	xchg   edx,eax
  403d65:	push   edi
  403d66:	lods   al,BYTE PTR ds:[esi]
  403d67:	cmp    DWORD PTR [esi],edx
  403d69:	xor    DWORD PTR [eax+edi*4-0x3a],ebx
  403d6d:	loop   0x403d6b
  403d6f:	pop    eax
  403d70:	xlat   BYTE PTR ds:[ebx]
  403d71:	bound  edi,QWORD PTR [eax+0x353d2867]
  403d77:	xchg   edi,eax
  403d78:	rcr    BYTE PTR [eax+ecx*2-0x465c8a27],1
  403d7f:	stos   BYTE PTR es:[edi],al
  403d80:	addr16 mov bh,0x4b
  403d83:	arpl   bx,sp
  403d85:	xor    ebp,esp
  403d87:	jmp    FWORD PTR [di]
  403d8a:	lahf   
  403d8b:	adc    BYTE PTR [ebx],bh
  403d8d:	sub    eax,0x84565dc1
  403d92:	mov    esp,0xe08174e3
  403d97:	and    DWORD PTR [edi-0x14a0d2a4],ebp
  403d9d:	mov    ebp,0x315f3866
  403da2:	addr16 dec edx
  403da4:	push   edx
  403da5:	jno    0x403d7f
  403da7:	cmp    eax,DWORD PTR [edx+0x3e16084a]
  403dad:	ins    BYTE PTR es:[edi],dx
  403dae:	cld    
  403daf:	cmc    
  403db0:	pop    esi
  403db1:	mov    edx,0x77a65213
  403db6:	add    BYTE PTR [ebp-0x17],cl
  403db9:	mov    al,ds:0x5a1856cd
  403dbe:	loope  0x403d9d
  403dc0:	shl    BYTE PTR [ebp-0x676f777d],cl
  403dc6:	enter  0x7009,0x1c
  403dca:	(bad)  
  403dcb:	lods   al,BYTE PTR ds:[esi]
  403dcc:	xchg   ecx,eax
  403dcd:	inc    ecx
  403dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dcf:	inc    esp
  403dd0:	inc    edi
  403dd1:	mov    ah,0xe2
  403dd3:	out    dx,al
  403dd4:	dec    esp
  403dd5:	nop
  403dd6:	mov    ds:0x24aa27e6,al
  403ddb:	sbb    DWORD PTR [ebp+0x1a52f4fb],ecx
  403de1:	and    esp,esp
  403de3:	call   FWORD PTR [ebp-0x4fef6cdd]
  403de9:	out    dx,al
  403dea:	hlt    
  403deb:	pop    ss
  403dec:	cdq    
  403ded:	js     0x403dc9
  403def:	call   0x5ceaf68b
  403df4:	jb     0x403e21
  403df6:	ret    0xef11
  403df9:	lock or al,0xf7
  403dfc:	jle    0x403d86
  403dfe:	sub    eax,0x21433129
  403e03:	sub    bh,bl
  403e05:	jge    0x403e46
  403e07:	mov    al,ds:0x611330c8
  403e0c:	adc    esp,ebp
  403e0e:	mov    esi,0x365eaf8b
  403e13:	cmp    al,0xa2
  403e15:	cwde   
  403e16:	ret    
  403e17:	push   edi
  403e18:	mov    ds:0x5bc21594,eax
  403e1d:	pop    ds
  403e1e:	scas   al,BYTE PTR es:[edi]
  403e1f:	dec    ebp
  403e20:	sbb    BYTE PTR [eax-0x55],0x69
  403e24:	out    dx,al
  403e25:	cli    
  403e26:	pop    ds
  403e27:	in     eax,0x60
  403e29:	outs   dx,DWORD PTR ds:[esi]
  403e2a:	xor    al,0x2c
  403e2c:	and    cl,BYTE PTR [eax]
  403e2e:	scas   eax,DWORD PTR es:[edi]
  403e2f:	xchg   DWORD PTR [eax+0x1f4791e5],eax
  403e35:	lods   eax,DWORD PTR ds:[esi]
  403e36:	inc    ebx
  403e37:	addr16 dec esi
  403e39:	std    
  403e3a:	jnp    0x403dbc
  403e3c:	int3   
  403e3d:	mov    ss,WORD PTR [ebx+0x2d]
  403e40:	(bad)  
  403e41:	dec    esi
  403e42:	outs   dx,BYTE PTR ds:[esi]
  403e43:	and    DWORD PTR [edx+0xd4bd71d],0x46ccb3f4
  403e4d:	(bad)  
  403e4e:	xor    eax,0x7c444f27
  403e53:	jmp    0xf5e8:0xc461010b
  403e5a:	icebp  
  403e5b:	pop    ss
  403e5c:	mov    bl,0x88
  403e5e:	pop    es
  403e5f:	fstp   QWORD PTR ds:0x479290b5
  403e65:	mov    ds:0x32adc095,eax
  403e6a:	adc    cl,bh
  403e6c:	mov    ecx,DWORD PTR [esp+eiz*2-0x2]
  403e70:	add    eax,0xad7cf6d8
  403e75:	(bad)  
  403e76:	sbb    bh,BYTE PTR [ebp-0x7c]
  403e79:	arpl   WORD PTR [edi],si
  403e7b:	cmp    al,BYTE PTR [edx]
  403e7d:	mov    ch,0xab
  403e7f:	sub    al,0x64
  403e81:	mov    bl,BYTE PTR [esi]
  403e83:	cld    
  403e84:	mov    bh,dl
  403e86:	nop
  403e87:	mov    ah,0xf2
  403e89:	xchg   esp,eax
  403e8a:	add    ch,BYTE PTR [edx]
  403e8c:	mov    al,ds:0x239ecdac
  403e91:	mov    eax,ds:0x67e3f7ae
  403e96:	std    
  403e97:	sbb    al,0x94
  403e99:	fwait
  403e9a:	mov    al,ds:0xd9d3f42
  403e9f:	clc    
  403ea0:	mov    bl,0xbb
  403ea2:	(bad)  
  403ea3:	repnz test BYTE PTR [ecx-0x16],0x46
  403ea8:	jmp    0x27ca23e7
  403ead:	jns    0x403eaa
  403eaf:	ss mov esp,0xf93cf14e
  403eb5:	and    DWORD PTR [edx-0x2d],ebx
  403eb8:	outs   dx,DWORD PTR ds:[esi]
  403eb9:	jle    0x403f25
  403ebb:	pop    esi
  403ebc:	lods   eax,DWORD PTR ds:[esi]
  403ebd:	fmul   DWORD PTR [ebp-0x2]
  403ec0:	sbb    al,0x19
  403ec2:	dec    esi
  403ec3:	inc    edx
  403ec4:	outs   dx,DWORD PTR ds:[esi]
  403ec5:	sbb    esi,ecx
  403ec7:	mov    cl,0x56
  403ec9:	out    dx,al
  403eca:	jno    0x403f27
  403ecc:	(bad)  
  403ecd:	push   esp
  403ece:	xchg   esp,eax
  403ed0:	or     ebp,DWORD PTR [ebx-0x586930cf]
  403ed6:	nop
  403ed7:	sub    DWORD PTR [ebx],esp
  403ed9:	rol    DWORD PTR [ecx+0x72c60ff9],cl
  403edf:	lods   al,BYTE PTR ds:[esi]
  403ee0:	adc    edx,DWORD PTR [edi-0x21]
  403ee3:	cmp    ch,BYTE PTR [esi-0x4b79ff4c]
  403ee9:	cmp    bh,BYTE PTR [ebp+0x62]
  403eec:	inc    ecx
  403eed:	mov    bh,0x1
  403eef:	je     0x403f34
  403ef1:	clc    
  403ef2:	mov    esp,0x4a6313ed
  403ef7:	std    
  403ef8:	push   0x45
  403efa:	mov    eax,ds:0x8953bdac
  403eff:	nop
  403f00:	pop    edx
  403f01:	shr    ecx,cl
  403f03:	pop    edx
  403f04:	ss aaa 
  403f06:	loop   0x403f3f
  403f08:	cli    
  403f09:	sbb    dh,dl
  403f0b:	popf   
  403f0c:	jne    0x403ecd
  403f0e:	loopne 0x403f7e
  403f10:	dec    eax
  403f11:	fcmovne st,st(5)
  403f13:	outs   dx,BYTE PTR ds:[esi]
  403f14:	inc    edx
  403f15:	daa    
  403f16:	mov    al,ds:0x7a83c1b
  403f1b:	lahf   
  403f1c:	sub    eax,0x73978c54
  403f21:	mov    eax,0x131752eb
  403f26:	fs out dx,eax
  403f28:	xor    al,dl
  403f2a:	dec    esp
  403f2b:	add    esp,esi
  403f2d:	rcr    BYTE PTR ds:0x65bb3995,0x98
  403f34:	inc    edi
  403f35:	xor    BYTE PTR [ecx+ecx*1],0xb1
  403f39:	or     edx,0xd0350895
  403f3f:	xchg   esp,eax
  403f40:	out    0x8,al
  403f42:	shr    BYTE PTR ds:0xd2c6c69f,1
  403f48:	pop    esp
  403f49:	popf   
  403f4a:	enter  0xacf6,0x61
  403f4e:	add    esp,esi
  403f50:	mov    ds:0xc6bcf59c,eax
  403f55:	pop    ss
  403f56:	ds push ecx
  403f58:	pushf  
  403f59:	popf   
  403f5a:	in     al,dx
  403f5b:	ficom  DWORD PTR [edx+0x56]
  403f5e:	lods   al,BYTE PTR ds:[esi]
  403f5f:	js     0x403f92
  403f61:	xchg   ebp,eax
  403f62:	adc    dh,bh
  403f64:	pop    ecx
  403f65:	scas   al,BYTE PTR es:[edi]
  403f66:	fwait
  403f67:	outs   dx,BYTE PTR ds:[esi]
  403f68:	out    dx,eax
  403f69:	cmp    bl,bl
  403f6b:	cwde   
  403f6c:	push   esi
  403f6d:	daa    
  403f6e:	adc    eax,0x11842fd6
  403f73:	test   eax,0x86192039
  403f78:	adc    ebx,DWORD PTR [esi+0x774bf602]
  403f7e:	add    BYTE PTR [ebp-0x5a],bl
  403f81:	lock mov ah,bl
  403f84:	jne    0x403f24
  403f86:	ds mov edi,0x3d044f10
  403f8c:	fstp   TBYTE PTR [ecx+0x6e9a2e50]
  403f92:	jmp    0x7a57:0x4388a9ee
  403f99:	imul   eax,eax,0xdeea7fcd
  403f9f:	and    DWORD PTR [edx-0xe],ecx
  403fa2:	jp     0x403f5e
  403fa4:	xchg   edi,eax
  403fa5:	data16 icebp 
  403fa7:	mov    edi,0x9cd83c39
  403fac:	loopne 0x404004
  403fae:	out    dx,eax
  403faf:	pop    edi
  403fb0:	cmp    BYTE PTR [edi+ebx*2+0x54],dh
  403fb4:	xor    edx,DWORD PTR [esi-0x59]
  403fb7:	xchg   esp,eax
  403fb8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  403fba:	pop    ebp
  403fbb:	fwait
  403fbc:	out    0x11,eax
  403fbe:	data16 not BYTE PTR [edi-0xf683988]
  403fc5:	and    cl,dh
  403fc7:	dec    eax
  403fc8:	xchg   esp,eax
  403fc9:	mov    ebp,0x18e3bdfe
  403fce:	sub    cl,ch
  403fd0:	fisubr WORD PTR [esi]
  403fd2:	int    0x5b
  403fd4:	retf   0x704
  403fd7:	loope  0x403fe1
  403fd9:	mov    ebx,0x9385b192
  403fde:	in     eax,0x4c
  403fe0:	sbb    eax,0x4c6725db
  403fe5:	or     al,0xd5
  403fe7:	dec    esi
  403fe8:	push   cs
  403fe9:	cmp    BYTE PTR [eax+0x2cdc8a26],bl
  403fef:	jmp    0xa0ec:0xc51cc97c
  403ff6:	sbb    DWORD PTR [ebx-0x622007cd],esp
  403ffc:	cli    
  403ffd:	call   0xb3affd
  404002:	es push ebp
  404004:	test   eax,0xd677f7b6
  404009:	mov    esi,0xcb4eaaab
  40400e:	call   0x3e18:0x6845d9b1
  404015:	fmul   st(3),st
  404017:	xchg   ebp,eax
  404018:	mov    ?,WORD PTR [ebp+0x2c2327e1]
  40401e:	ds push 0x7be9d488
  404024:	mov    dl,BYTE PTR [edi-0x40d8f0ef]
  40402a:	adc    esp,DWORD PTR gs:[eax+0x64]
  40402e:	mov    ecx,0xc68e9746
  404033:	xchg   edi,eax
  404034:	pushf  
  404035:	inc    eax
  404036:	hlt    
  404037:	ins    DWORD PTR es:[edi],dx
  404038:	lods   eax,DWORD PTR ds:[esi]
  404039:	xor    esp,esi
  40403b:	dec    ecx
  40403c:	sbb    al,0xa7
  40403e:	sub    BYTE PTR [ebp-0x2fef78d4],cl
  404044:	ds push esi
  404046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404047:	inc    esp
  404048:	stc    
  404049:	dec    edi
  40404a:	push   edx
  40404b:	mov    esi,0x11682492
  404050:	push   0xffffffa5
  404052:	fisttp QWORD PTR [ebx+0x7f09fba5]
  404058:	add    BYTE PTR [esi-0x73c155b7],ah
  40405e:	push   edx
  40405f:	hlt    
  404060:	mov    ds:0xd15e8226,al
  404065:	xchg   BYTE PTR [edi],cl
  404067:	(bad)  
  404068:	leave  
  404069:	push   ebx
  40406a:	loope  0x404048
  40406c:	je     0x4040bc
  40406e:	adc    al,0xae
  404070:	in     al,0x6b
  404072:	adc    BYTE PTR [edi-0x6d],bl
  404075:	dec    edx
  404076:	in     al,0x8
  404078:	xchg   esi,eax
  404079:	out    0x5a,al
  40407b:	dec    esi
  40407c:	mov    ecx,0xced9b4dc
  404081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404082:	fcmovu st,st(1)
  404084:	fwait
  404085:	add    edi,ebp
  404087:	jmp    0x40407e
  404089:	push   0x7
  40408b:	test   DWORD PTR [eax],ecx
  40408d:	push   ss
  40408e:	out    dx,eax
  40408f:	jnp    0x4040c5
  404091:	sub    eax,0xe6faf6a9
  404096:	inc    edx
  404097:	(bad)  
  404098:	jecxz  0x4040cd
  40409a:	les    edi,FWORD PTR [eax+0x74]
  40409d:	pop    ebp
  40409e:	ins    BYTE PTR es:[edi],dx
  40409f:	pop    ebx
  4040a0:	inc    edi
  4040a1:	mov    al,0x36
  4040a3:	xor    al,0x56
  4040a5:	ror    BYTE PTR [eax-0xd],cl
  4040a8:	mov    esi,0x3608a7f7
  4040ad:	xor    eax,0x7588fa57
  4040b2:	call   0xf8068033
  4040b7:	arpl   si,si
  4040b9:	push   edi
  4040bb:	mov    ch,0x78
  4040bd:	jmp    0xa558:0xb8fd072
  4040c4:	pop    edx
  4040c5:	stc    
  4040c6:	retf   0xc1f0
  4040c9:	ins    DWORD PTR es:[edi],dx
  4040ca:	shl    ecx,cl
  4040cc:	mov    eax,0x7d03fb5e
  4040d1:	dec    eax
  4040d2:	fmul   DWORD PTR [edi-0x5757aea6]
  4040d8:	jmp    0x32fa:0x855ffe8b
  4040df:	xchg   BYTE PTR [eax-0x7b1fe9dd],bl
  4040e5:	xchg   ecx,eax
  4040e6:	icebp  
  4040e7:	mov    ah,bl
  4040e9:	mov    eax,0x6f8edb13
  4040ee:	jge    0x404156
  4040f0:	outs   dx,BYTE PTR ds:[esi]
  4040f1:	cdq    
  4040f2:	add    al,0x7
  4040f4:	and    al,0xee
  4040f6:	ret    
  4040f7:	pop    ebp
  4040f8:	add    eax,0x82340756
  4040fd:	in     al,dx
  4040fe:	test   al,0x7a
  404100:	(bad)  
  404101:	(bad)  [edi-0x6498f24d]
  404107:	iret   
  404108:	je     0x4040e3
  40410a:	pop    ds
  40410b:	cwde   
  40410c:	icebp  
  40410d:	and    dl,BYTE PTR [ecx-0x3769d054]
  404113:	fadd   QWORD PTR [edi+0x3076a7a3]
  404119:	jge    0x404128
  40411b:	mov    ebx,0xf7422786
  404120:	push   cs
  404121:	jge    0x40413e
  404123:	(bad)  
  404126:	leave  
  404127:	std    
  404128:	xchg   ebx,eax
  404129:	ds xchg edi,eax
  40412b:	xor    ebx,DWORD PTR [esi-0x6c]
  40412e:	mov    cs,WORD PTR [ebx]
  404130:	aam    0xc1
  404132:	jne    0x4040d0
  404134:	(bad)  
  404136:	mov    bh,0x94
  404138:	push   cs
  404139:	fld    QWORD PTR [esi+0x663cc59b]
  40413f:	aas    
  404140:	idiv   BYTE PTR [edx+0x7b]
  404143:	pop    edx
  404144:	xchg   esp,eax
  404145:	inc    edx
  404146:	dec    ebp
  404147:	push   ss
  404148:	rcr    DWORD PTR ds:0x46346d7a,cl
  40414e:	xlat   BYTE PTR ds:[ebx]
  40414f:	and    BYTE PTR [edi-0xabd685],0xa5
  404156:	or     BYTE PTR [esi],bl
  404158:	dec    esi
  404159:	or     bl,BYTE PTR [ebx+edx*1+0x3e]
  40415d:	sti    
  40415e:	xlat   BYTE PTR ds:[ebx]
  40415f:	cmp    al,0x7
  404161:	or     al,0x1d
  404163:	fst    st(5)
  404165:	mov    cl,0x52
  404167:	sahf   
  404168:	and    DWORD PTR [esi-0x3c],edi
  40416b:	stc    
  40416c:	or     esi,DWORD PTR [eax]
  40416e:	icebp  
  40416f:	inc    esi
  404170:	inc    edx
  404171:	push   cs
  404172:	pop    edx
  404173:	fstp   TBYTE PTR [ecx-0x2d]
  404176:	sub    ch,BYTE PTR [ecx+0x53]
  404179:	(bad)  
  40417a:	stos   BYTE PTR es:[edi],al
  40417b:	add    ebp,DWORD PTR [ecx]
  40417d:	lea    eax,[ebx]
  40417f:	xchg   BYTE PTR [eax-0x6c],ah
  404182:	hlt    
  404183:	push   0xe9cdfbca
  404188:	pusha  
  404189:	pop    ebx
  40418a:	rol    al,1
  40418c:	jle    0x4041a1
  40418e:	(bad)  
  40418f:	jle    0x404117
  404191:	xor    BYTE PTR [edi+edx*8],cl
  404194:	ja     0x404173
  404196:	shl    BYTE PTR [esi-0x7a75d7d1],cl
  40419c:	xchg   ecx,eax
  40419d:	add    eax,0x33e9fa1f
  4041a2:	fnsave [edx-0x65b0ef08]
  4041a8:	lds    edi,FWORD PTR [ebx]
  4041aa:	inc    edx
  4041ab:	hlt    
  4041ac:	icebp  
  4041ad:	rcl    BYTE PTR [ecx+0x34536d5],cl
  4041b3:	dec    BYTE PTR [esi+0x52]
  4041b6:	mov    esp,0x1da31a35
  4041bb:	popf   
  4041bc:	fldcw  WORD PTR [edx+0x24cbd67f]
  4041c2:	popa   
  4041c3:	popf   
  4041c4:	shl    BYTE PTR [edx+0x6],1
  4041c7:	shr    BYTE PTR [ebp-0x27],1
  4041ca:	dec    ebp
  4041cb:	or     ebp,ebx
  4041cd:	ins    BYTE PTR es:[edi],dx
  4041ce:	push   eax
  4041cf:	dec    ebp
  4041d0:	sahf   
  4041d1:	xlat   BYTE PTR ds:[ebx]
  4041d2:	daa    
  4041d3:	sbb    DWORD PTR [eax],0x70
  4041d6:	int    0x6
  4041d8:	push   ds
  4041d9:	push   esp
  4041da:	cs test eax,0x1141c756
  4041e0:	jbe    0x4041d6
  4041e2:	jg     0x40416f
  4041e4:	jno    0x404178
  4041e6:	inc    esi
  4041e7:	ret    
  4041e8:	pop    edi
  4041e9:	cld    
  4041ea:	rcl    edx,cl
  4041ec:	pop    es
  4041ed:	fmulp  st(0),st
  4041ef:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041f1:	or     al,0x8d
  4041f3:	inc    esp
  4041f4:	and    eax,0xff45a925
  4041f9:	dec    edi
  4041fa:	dec    ebx
  4041fb:	xchg   edi,eax
  4041fc:	push   ecx
  4041fd:	inc    edx
  4041fe:	fnsave [ecx+esi*8]
  404201:	adc    eax,0x5f563e0c
  404206:	(bad)  
  404207:	repz dec edi
  404209:	ins    DWORD PTR es:[edi],dx
  40420a:	ins    BYTE PTR es:[edi],dx
  40420b:	jmp    0x404282
  40420d:	popf   
  40420e:	add    cl,cl
  404210:	stos   DWORD PTR es:[edi],eax
  404211:	or     BYTE PTR [ebx+0x6cb51e8],ah
  404217:	sub    al,0xf7
  404219:	fisubr DWORD PTR [edi]
  40421b:	cdq    
  40421c:	push   0x1befff94
  404221:	inc    ecx
  404222:	ins    BYTE PTR es:[edi],dx
  404223:	neg    BYTE PTR [edi]
  404225:	dec    eax
  404226:	(bad)
  40422a:	jns    0x40423a
  40422c:	pmuludq mm4,mm7
  40422f:	leave  
  404230:	xor    eax,0xb4cb05ad
  404235:	loop   0x4041e0
  404237:	or     edx,0x8f7f14de
  40423d:	or     esi,edi
  40423f:	xchg   BYTE PTR [eax-0x42],ah
  404242:	sub    ch,BYTE PTR [eax-0x6db3a74a]
  404248:	dec    eax
  404249:	jnp    0x40429c
  40424b:	push   0x27
  40424d:	int    0xa0
  40424f:	or     eax,0x84d36490
  404254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404255:	add    BYTE PTR [esi-0x60],dh
  404258:	xchg   ebp,eax
  40425a:	scas   al,BYTE PTR es:[edi]
  40425b:	add    al,0xdc
  40425d:	fisubr DWORD PTR [ebx]
  40425f:	xlat   BYTE PTR ds:[ebx]
  404260:	and    BYTE PTR [ecx-0x67],bh
  404263:	mov    DWORD PTR [ebx+ecx*1],eax
  404266:	cmp    ebx,DWORD PTR [edx-0x6e]
  404269:	sti    
  40426a:	add    bh,BYTE PTR [esi+ecx*8+0x4d]
  40426e:	mov    ebx,0xaeb7448a
  404273:	fdivrp st(5),st
  404275:	leave  
  404276:	sub    ecx,eax
  404278:	sti    
  404279:	addr16 or ch,ch
  40427c:	dec    ecx
  40427d:	out    dx,al
  40427e:	adc    esp,0x186ad816
  404284:	into   
  404285:	sub    al,0xf9
  404287:	in     al,0x60
  404289:	icebp  
  40428a:	arpl   cx,di
  40428c:	push   cs
  40428d:	rcr    DWORD PTR [ecx+0x3b],0xf8
  404291:	test   al,0x6c
  404293:	into   
  404294:	and    eax,0x81692c02
  404299:	pop    edx
  40429a:	push   ecx
  40429b:	ja     0x4042b6
  40429d:	ss cmp eax,0x5e1e9202
  4042a3:	or     al,0x1d
  4042a5:	inc    ebp
  4042a6:	adc    esi,ecx
  4042a8:	sbb    eax,0xaa39f57c
  4042ad:	and    DWORD PTR [edx-0x3bc4d3d5],edi
  4042b3:	nop
  4042b4:	dec    ecx
  4042b5:	jb     0x40432a
  4042b7:	in     al,0x5d
  4042b9:	fiadd  WORD PTR [eax-0x6]
  4042bc:	jle    0x4042b6
  4042be:	dec    esp
  4042bf:	(bad)
  4042c2:	mov    eax,0x94f6c2ea
  4042c7:	popa   
  4042c8:	jle    0x404313
  4042ca:	out    dx,eax
  4042cb:	fidiv  DWORD PTR [eax+0x1f034a8b]
  4042d1:	scas   eax,DWORD PTR es:[edi]
  4042d2:	xchg   ebx,eax
  4042d3:	outs   dx,DWORD PTR ds:[esi]
  4042d4:	jmp    0x404343
  4042d6:	and    BYTE PTR [ecx+edx*8+0xc],ch
  4042da:	call   0x1440b452
  4042df:	adc    dl,BYTE PTR [edi]
  4042e1:	test   al,0x62
  4042e3:	nop
  4042e4:	cli    
  4042e5:	and    dl,0x7f
  4042e8:	jmp    0x63bf376
  4042ed:	loope  0x4042b6
  4042ef:	cmp    bh,BYTE PTR [ebp+edi*8-0x24]
  4042f3:	cmp    BYTE PTR [ebx-0x219ac07],ah
  4042f9:	ret    0x440f
  4042fc:	fld1   
  4042fe:	out    0xe3,eax
  404300:	mov    WORD PTR [esi-0x2afc2c13],?
  404306:	mov    ds:0xf6d4a9a7,eax
  40430b:	mov    gs,WORD PTR [eax-0x69]
  40430e:	retf   
  40430f:	and    dl,dl
  404311:	mov    ebp,0x76d9020b
  404316:	mov    ds:0xda9ccdc0,eax
  40431b:	and    edi,DWORD PTR [ecx+ecx*2-0x60]
  40431f:	vmwrite ecx,DWORD PTR ds:0x386c8d1d
  404326:	push   ss
  404327:	imul   ebp,DWORD PTR [edx+eiz*2],0xffffffa7
  40432b:	xlat   BYTE PTR ds:[ebx]
  40432c:	ret    0xc6dd
  40432f:	ja     0x40438f
  404331:	ins    BYTE PTR es:[edi],dx
  404332:	push   eax
  404333:	(bad)  
  404334:	clc    
  404335:	and    al,0xf0
  404337:	es dec edi
  404339:	sbb    ah,BYTE PTR [ebp-0x4f]
  40433c:	sub    DWORD PTR [ebx-0x33ee6e25],esi
  404342:	lahf   
  404343:	add    BYTE PTR [ecx-0x32],al
  404346:	cli    
  404347:	pop    ebx
  404348:	fwait
  404349:	cmp    DWORD PTR [ebp-0x6ebd18b8],eax
  40434f:	fwait
  404350:	in     eax,0x9e
  404352:	jno    0x4042f1
  404354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404355:	and    bl,BYTE PTR [edi+esi*8+0x5c]
  404359:	data16 lods al,BYTE PTR ds:[esi]
  40435b:	mov    WORD PTR [edi],ds
  40435d:	mov    edx,0x3e5dcc59
  404362:	rcl    BYTE PTR [eax+0xa],1
  404365:	scas   eax,DWORD PTR es:[edi]
  404366:	and    eax,0x2c047b92
  40436b:	es nop
  40436d:	jbe    0x404311
  40436f:	add    al,BYTE PTR [edi+0x54]
  404372:	stc    
  404373:	fdivp  st(7),st
  404375:	neg    BYTE PTR [esi]
  404377:	adc    eax,0x35e2d400
  40437c:	(bad)  
  40437d:	push   ebx
  40437e:	pop    eax
  40437f:	adc    DWORD PTR [eax],esp
  404381:	mov    ds:0x56f4e02f,al
  404386:	mov    ecx,0x342c44fc
  40438b:	fs and cl,dh
  40438e:	fistp  DWORD PTR [esi]
  404390:	push   ds
  404391:	mov    al,0xe2
  404393:	ds aam 0x8e
  404396:	clc    
  404397:	and    edi,DWORD PTR [ebp-0x43af30f]
  40439d:	pop    ds
  40439e:	xchg   ecx,eax
  40439f:	push   ds
  4043a0:	sub    BYTE PTR [ebx+ebp*1],dh
  4043a3:	popa   
  4043a4:	inc    esp
  4043a5:	pop    ebx
  4043a6:	mov    ds,WORD PTR [edx-0x6e]
  4043a9:	lods   eax,DWORD PTR ds:[esi]
  4043aa:	retf   
  4043ab:	lock adc bh,bl
  4043ae:	ins    DWORD PTR es:[edi],dx
  4043af:	inc    esp
  4043b0:	sbb    BYTE PTR [eax],0xcd
  4043b3:	sub    dh,BYTE PTR [ecx]
  4043b5:	or     dl,BYTE PTR [esp+0x4594a265]
  4043bc:	adc    esp,esp
  4043be:	bnd jmp DWORD PTR [edi-0x60994bc9]
  4043c5:	push   esi
  4043c6:	cdq    
  4043c7:	in     al,0xc0
  4043c9:	push   esp
  4043ca:	fdivp  st(4),st
  4043cc:	es or  cl,ch
  4043cf:	popf   
  4043d0:	xor    ecx,DWORD PTR [eax+ecx*8]
  4043d3:	mov    eax,ds:0xd7b3b287
  4043d8:	jne    0x404434
  4043da:	call   0x439:0x4cd7c140
  4043e1:	and    al,0xcf
  4043e3:	test   dh,bl
  4043e5:	pop    es
  4043e6:	sbb    eax,0x3436c53e
  4043eb:	scas   eax,DWORD PTR es:[edi]
  4043ec:	imul   BYTE PTR [ebp+0x2b1d60b0]
  4043f2:	xor    DWORD PTR [edx-0x469d9fec],esp
  4043f8:	arpl   WORD PTR [ecx],si
  4043fa:	in     eax,0xa6
  4043fc:	ja     0x404420
  4043fe:	xchg   BYTE PTR [eax-0x71],cl
  404401:	int    0x80
  404403:	sub    edi,ebp
  404405:	mov    bh,0x8a
  404407:	lds    ebp,FWORD PTR ds:[ecx+0x24]
  40440b:	push   edx
  40440c:	push   eax
  40440d:	lds    edx,FWORD PTR [ecx]
  40440f:	repz jg 0x4043a8
  404412:	loopne 0x404461
  404414:	cld    
  404415:	adc    DWORD PTR [ebp+eax*8+0x1eb34f3],edx
  40441c:	ins    BYTE PTR es:[edi],dx
  40441d:	ins    BYTE PTR es:[edi],dx
  40441e:	sbb    BYTE PTR [ebx+0x3c59b856],al
  404424:	and    ecx,DWORD PTR [eax]
  404426:	pop    esi
  404427:	mov    esp,DWORD PTR [eax+0x47]
  40442a:	mov    ebp,0xffd64497
  40442f:	adc    dh,cl
  404431:	xor    esi,DWORD PTR [esi+edx*8+0x59e2eefd]
  404438:	xor    al,0x4b
  40443a:	aam    0x57
  40443c:	sub    eax,0xc6cf51c
  404441:	out    dx,al
  404442:	lods   eax,DWORD PTR ds:[esi]
  404443:	inc    esi
  404444:	jmp    0xfdfb:0x15fd9a85
  40444b:	int    0xf
  40444d:	xchg   ebx,eax
  40444e:	int3   
  40444f:	sbb    ch,BYTE PTR [ecx]
  404451:	je     0x40445b
  404453:	sar    ebx,1
  404455:	aas    
  404456:	(bad)  
  404458:	std    
  404459:	xchg   esi,eax
  40445a:	cmp    al,BYTE PTR [ebx+0x4f6d91c3]
  404460:	std    
  404461:	aas    
  404462:	int    0x29
  404464:	std    
  404465:	and    BYTE PTR [eax-0x6077f579],bl
  40446b:	pop    es
  40446c:	push   ebp
  40446e:	cmp    edi,ecx
  404470:	gs pmullw mm1,mm3
  404474:	and    dl,BYTE PTR [edi+ebp*1-0x5dec7c7e]
  40447b:	ins    DWORD PTR es:[edi],dx
  40447c:	mov    eax,ds:0x788997e7
  404481:	push   es
  404482:	dec    ebp
  404483:	ins    BYTE PTR es:[edi],dx
  404484:	inc    esi
  404485:	or     DWORD PTR [ecx-0x3f],eax
  404488:	or     ecx,eax
  40448a:	push   ecx
  40448b:	test   DWORD PTR [esi],esi
  40448d:	sar    DWORD PTR [edi+0x1dadd65f],0x8a
  404494:	(bad)  
  404495:	adc    esp,DWORD PTR [eax-0x22]
  404498:	shr    BYTE PTR [ebx+0x24],0x4e
  40449c:	es (bad) 
  40449e:	js     0x4044f6
  4044a0:	iret   
  4044a1:	mov    DWORD PTR [eax],eax
  4044a3:	sub    ebx,edi
  4044a5:	in     eax,0x6f
  4044a7:	jo     0x40449e
  4044a9:	ja     0x4044d5
  4044ab:	inc    esi
  4044ac:	sti    
  4044ad:	or     cl,0x20
  4044b0:	stos   BYTE PTR es:[di],al
  4044b2:	adc    dh,dh
  4044b4:	xor    bl,BYTE PTR [ebp-0x2d]
  4044b7:	inc    esp
  4044b8:	pusha  
  4044b9:	dec    esi
  4044ba:	push   esi
  4044bb:	ja     0x4044aa
  4044bd:	jmp    0x83662c22
  4044c2:	data16 jae 0x4044b8
  4044c5:	lea    edi,[ebx-0x76935000]
  4044cb:	rol    BYTE PTR [esp+edi*4+0x7ca74022],0x57
  4044d3:	daa    
  4044d4:	arpl   WORD PTR [ecx-0x74d4dfa1],dx
  4044da:	push   ebp
  4044db:	mov    ch,0xc2
  4044dd:	xchg   esi,eax
  4044de:	loope  0x404470
  4044e0:	es and eax,DWORD PTR fs:[ebp-0xd]
  4044e5:	xchg   ebp,eax
  4044e6:	dec    esi
  4044e7:	dec    ebp
  4044e8:	xor    bl,bh
  4044ea:	dec    esi
  4044eb:	ins    DWORD PTR es:[edi],dx
  4044ec:	in     eax,0x11
  4044ee:	hlt    
  4044ef:	pop    ds
  4044f0:	mov    edi,0x478b10f1
  4044f5:	jmp    0x2fbd32a3
  4044fa:	cmp    DWORD PTR [ebx+0x53e9b935],0x852c842b
  404504:	or     DWORD PTR [eax-0x1cab518c],edi
  40450a:	mov    ebp,0x90fc0d8d
  40450f:	iret   
  404510:	or     al,0x29
  404512:	pop    es
  404513:	xlat   BYTE PTR ds:[ebx]
  404514:	push   0x421737fc
  404519:	and    ecx,DWORD PTR [edx+0x35]
  40451c:	sti    
  40451d:	aas    
  40451e:	gs push esi
  404520:	sahf   
  404521:	fimul  WORD PTR [edx+eax*4+0x77318656]
  404528:	dec    eax
  404529:	sbb    dh,ch
  40452b:	add    BYTE PTR [edi],ah
  40452d:	fadd   DWORD PTR [ebx+0xe]
  404530:	out    dx,al
  404531:	mov    DWORD PTR [ebx],ebp
  404533:	aas    
  404534:	retf   0xfb8f
  404537:	shr    DWORD PTR [ebx+0x6a],1
  40453a:	jecxz  0x4044d5
  40453c:	cwde   
  40453d:	leave  
  40453e:	sbb    al,0x50
  404540:	fs in  eax,0xa5
  404543:	cmp    dh,BYTE PTR ds:0x1032c434
  404549:	jl     0x4044d2
  40454b:	sub    eax,esp
  40454d:	inc    ecx
  40454e:	fldenv [edi]
  404550:	fwait
  404551:	je     0x404500
  404553:	in     eax,0xd0
  404555:	jmp    0x4044f0
  404557:	or     eax,0xa893bfa0
  40455c:	fbld   TBYTE PTR [eax]
  40455e:	jbe    0x404576
  404560:	xor    BYTE PTR [ebp-0x529813e2],ch
  404566:	mov    dh,0x55
  404568:	xor    eax,0x3d38b5d7
  40456d:	pusha  
  40456e:	(bad)  
  404570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404571:	mov    al,BYTE PTR [edi+ecx*8-0x6730db78]
  404578:	mov    bl,0x82
  40457a:	rcl    BYTE PTR [edx],1
  40457c:	fs push es
  40457e:	or     DWORD PTR [ebx],0xffffffa7
  404581:	out    dx,eax
  404582:	sbb    BYTE PTR [ecx],bl
  404584:	push   edi
  404585:	enter  0xf721,0xc6
  404589:	dec    esp
  40458a:	jbe    0x404520
  40458c:	jp     0x404530
  40458e:	mov    dl,0x95
  404590:	ret    
  404591:	push   ds
  404592:	and    DWORD PTR [ecx+0x630de935],0x52
  404599:	mov    bh,0xa8
  40459b:	add    eax,0x89f345da
  4045a0:	xchg   esi,eax
  4045a1:	(bad)  
  4045a2:	ficomp DWORD PTR [edi+0x25fc8b92]
  4045a8:	inc    eax
  4045a9:	push   eax
  4045aa:	mov    edi,DWORD PTR [ecx]
  4045ac:	or     ebp,edi
  4045ae:	push   ecx
  4045af:	dec    esp
  4045b0:	adc    ebp,DWORD PTR [ecx+0x25]
  4045b3:	sbb    ah,dl
  4045b5:	mov    edi,DWORD PTR [ebx-0x70]
  4045b8:	xchg   BYTE PTR [ebx-0x277104d],bl
  4045be:	adc    DWORD PTR [esi-0x78],esp
  4045c1:	cdq    
  4045c2:	test   DWORD PTR [esi+0x25],ecx
  4045c5:	push   esi
  4045c6:	mov    edi,0x3d08fd18
  4045cb:	out    0x24,al
  4045cd:	dec    edi
  4045ce:	add    al,BYTE PTR ds:0x831a58f6
  4045d4:	xchg   edi,eax
  4045d6:	mov    eax,0x6513a0ff
  4045db:	fst    DWORD PTR [ebp+0x1c]
  4045de:	sub    BYTE PTR [ebx+eiz*1-0x1170b49],bl
  4045e5:	push   ebx
  4045e6:	sub    eax,0x15fec713
  4045eb:	add    DWORD PTR [eax+0x7bf3ac0f],0x2e1b51a9
  4045f5:	iret   
  4045f6:	repnz ins DWORD PTR es:[edi],dx
  4045f8:	stos   DWORD PTR es:[edi],eax
  4045f9:	(bad)  
  4045fa:	mov    edx,0x6de2595
  4045ff:	outs   dx,BYTE PTR ds:[esi]
  404600:	in     eax,dx
  404601:	daa    
  404602:	mov    al,0x6a
  404604:	cmovne esi,DWORD PTR [edi+0xdca21d2]
  40460b:	jo     0x404617
  40460d:	scas   al,BYTE PTR es:[edi]
  40460e:	mov    DWORD PTR ds:[edx],0x44227866
  404615:	jmp    0xd2e5:0xfaf51c83
  40461c:	add    eax,edi
  40461e:	push   0x7a
  404620:	mov    edx,0x19177525
  404625:	jb     0x404671
  404627:	out    dx,eax
  404628:	ror    eax,1
  40462a:	mov    ah,0x2f
  40462c:	out    0xd4,al
  40462e:	dec    edx
  40462f:	or     ah,BYTE PTR [ebp+ebx*2-0x6b]
  404633:	clc    
  404634:	mov    ds:0x2649c969,al
  404639:	ds dec edx
  40463b:	sbb    dl,BYTE PTR [ecx+edx*1]
  40463e:	out    0x53,eax
  404640:	cs xor bl,cl
  404643:	jge    0x4045e2
  404645:	cdq    
  404646:	add    ebx,eax
  404648:	push   edi
  404649:	es (bad) 
  40464b:	xchg   ecx,eax
  40464c:	mov    bl,al
  40464e:	cdq    
  40464f:	cmp    eax,0x2d0f167d
  404654:	enter  0x52ce,0x99
  404658:	fwait
  404659:	pop    esp
  40465a:	mov    ebp,0x93031585
  40465f:	and    cl,BYTE PTR [edi-0x4b]
  404662:	and    DWORD PTR [esi-0x7cd02085],edx
  404668:	cmp    DWORD PTR [ecx],ecx
  40466a:	fisubr DWORD PTR [edx+edi*2]
  40466d:	mov    ebp,ebx
  40466f:	mov    eax,ds:0xe6e1e5cf
  404674:	mov    eax,0x2ccf4c4c
  404679:	push   ebx
  40467a:	jne    0x40465e
  40467c:	ja     0x404602
  40467e:	aaa    
  40467f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404680:	into   
  404681:	jo     0x40465f
  404683:	sahf   
  404684:	stc    
  404685:	add    eax,0xa2f2618
  40468a:	inc    edx
  40468b:	mov    dl,BYTE PTR ds:0xd0d2525a
  404691:	scas   al,BYTE PTR es:[edi]
  404692:	or     DWORD PTR [ebp-0x73],0x32
  404696:	enter  0xb9af,0xe9
  40469a:	sti    
  40469b:	inc    esp
  40469c:	inc    ebx
  40469d:	sahf   
  40469e:	mov    ds:0xc075781c,eax
  4046a3:	cwde   
  4046a4:	mov    eax,ds:0x8981626
  4046a9:	in     al,dx
  4046aa:	stos   BYTE PTR es:[edi],al
  4046ab:	add    al,0x14
  4046ad:	pop    ds
  4046ae:	loope  0x4046fc
  4046b0:	fistp  WORD PTR [ebx-0x6b]
  4046b3:	(bad)  [ebp+0x78]
  4046b6:	into   
  4046b7:	inc    ecx
  4046b8:	jmp    0x26bbadf7
  4046bd:	fdivr  st(2),st
  4046bf:	test   BYTE PTR [edx],ah
  4046c1:	xchg   DWORD PTR [esi+ecx*2],esp
  4046c4:	scas   al,BYTE PTR es:[edi]
  4046c5:	test   BYTE PTR [edx-0x48],0x86
  4046c9:	xchg   edx,eax
  4046ca:	(bad)  ss:[edi-0x22]
  4046ce:	jo     0x404704
  4046d0:	sub    al,0x38
  4046d2:	push   esi
  4046d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d4:	push   ebx
  4046d5:	add    ebx,DWORD PTR [ebp-0x6f0d4e98]
  4046db:	dec    ecx
  4046dc:	push   edi
  4046dd:	mov    ss,WORD PTR [eax*2+0x8b137c6]
  4046e4:	dec    esi
  4046e5:	aaa    
  4046e6:	push   es
  4046e7:	test   BYTE PTR [ebp+0x27a388aa],ch
  4046ed:	iret   
  4046ee:	inc    ebp
  4046ef:	and    al,0xd5
  4046f1:	jae    0x4046bf
  4046f3:	mov    edi,0xc12718ba
  4046f8:	mov    ah,0xac
  4046fa:	jge    0x404738
  4046fc:	mov    ds:0x829c8de3,eax
  404701:	jmp    0x4046b3
  404703:	aas    
  404704:	cld    
  404705:	sub    BYTE PTR [edx-0x3e],bl
  404708:	xor    al,BYTE PTR [eax-0x64]
  40470b:	cmp    al,0x33
  40470d:	sbb    BYTE PTR es:[eax],dh
  404710:	or     DWORD PTR [ebx-0x4],ecx
  404713:	pop    es
  404714:	xor    ch,bl
  404716:	xor    edi,DWORD PTR es:[edx]
  404719:	mov    esi,0xf4497f52
  40471e:	jbe    0x4046d4
  404720:	inc    ecx
  404721:	fucom  st(0)
  404723:	sbb    eax,0xa7b069e6
  404728:	dec    ebp
  404729:	les    ecx,FWORD PTR ds:0x791b0d3b
  40472f:	cmp    cl,BYTE PTR [ebx+0x20]
  404732:	sbb    BYTE PTR [ebx+0x25],0x43
  404736:	sub    cl,BYTE PTR [edx-0x7dccbc51]
  40473c:	xchg   edi,eax
  40473d:	ret    0xf21c
  404740:	xchg   edi,eax
  404741:	int3   
  404742:	nop
  404743:	push   ss
  404744:	add    eax,0xe9c46292
  404749:	dec    edx
  40474a:	xchg   edx,eax
  40474b:	jne    0x4047a1
  40474d:	sti    
  40474e:	push   0x4a
  404750:	jmp    0x5b02:0xbdc7a51f
  404757:	jmp    0x663b:0xf8f4ce81
  40475e:	xchg   ecx,eax
  40475f:	aad    0x44
  404761:	inc    edi
  404762:	sub    esp,DWORD PTR [edx+0x263333ab]
  404768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404769:	mov    esp,0xfda34eb3
  40476e:	fidiv  DWORD PTR [edx]
  404770:	div    DWORD PTR [ecx+0x2985c878]
  404776:	push   esp
  404777:	pop    esi
  404778:	jmp    0xb0b0:0xdeb9efad
  40477f:	inc    esi
  404780:	mov    eax,0x186bc672
  404785:	cmp    cl,0xa5
  404788:	cld    
  404789:	mov    ebx,0xa944dadf
  40478e:	dec    edi
  40478f:	adc    bh,BYTE PTR [ecx-0xa2e4f4b]
  404795:	cmp    dh,BYTE PTR [esi-0x23fa0302]
  40479b:	adc    dh,BYTE PTR [edi+0x61]
  40479e:	cmp    BYTE PTR [ecx-0x56],0x9c
  4047a2:	int    0x19
  4047a4:	aaa    
  4047a5:	and    edx,ebx
  4047a7:	add    al,0x64
  4047a9:	jno    0x404769
  4047ab:	mov    es,WORD PTR [edx-0x71]
  4047ae:	mov    dl,0xb7
  4047b0:	in     eax,0x92
  4047b2:	call   0xfb52:0x70ed0aa9
  4047b9:	sub    eax,0x22a05022
  4047be:	fisub  WORD PTR ds:0x4dbc7fa
  4047c4:	mov    ecx,0xfcddd1f6
  4047c9:	inc    ebx
  4047ca:	fwait
  4047cb:	mov    cl,0x5a
  4047cd:	or     ax,0x64b0
  4047d1:	(bad)  
  4047d2:	dec    esp
  4047d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047d4:	cli    
  4047d5:	arpl   WORD PTR [edx],ax
  4047d7:	adc    al,0x9f
  4047d9:	in     al,dx
  4047da:	jnp    0x404810
  4047dc:	ret    0xd1db
  4047df:	jbe    0x404822
  4047e1:	daa    
  4047e2:	lods   al,BYTE PTR ds:[esi]
  4047e3:	mov    cl,0xfc
  4047e5:	cmp    eax,0x770a9e08
  4047ea:	test   BYTE PTR [edi],dl
  4047ec:	ds sti 
  4047ee:	arpl   cx,bx
  4047f0:	push   edx
  4047f1:	push   ss
  4047f2:	in     eax,dx
  4047f3:	mov    al,0xb7
  4047f5:	inc    ecx
  4047f6:	lods   eax,DWORD PTR ds:[esi]
  4047f7:	ins    BYTE PTR es:[edi],dx
  4047f8:	mov    bl,0xd8
  4047fa:	jle    0x404826
  4047fc:	xchg   BYTE PTR [ebx],bh
  4047fe:	mov    al,ds:0x810e25aa
  404803:	ror    BYTE PTR [ebx+0x53d687c3],cl
  404809:	outs   dx,BYTE PTR ds:[esi]
  40480a:	push   edx
  40480b:	and    BYTE PTR [edi+edi*4+0x28556d7],ah
  404812:	fimul  DWORD PTR [edi]
  404814:	cmp    bh,BYTE PTR [ebp+0xb20fdc]
  40481a:	jo     0x4047ef
  40481c:	iret   
  40481d:	push   edi
  40481e:	pushf  
  40481f:	sbb    esi,edx
  404821:	mov    esi,0x905bf894
  404826:	adc    BYTE PTR [edi+0x1ad52372],bh
  40482c:	gs ja  0x404852
  40482f:	pop    esp
  404830:	push   ecx
  404831:	sbb    al,0x77
  404833:	push   edi
  404834:	loopne 0x404889
  404836:	lods   eax,DWORD PTR ds:[esi]
  404837:	(bad)  
  404838:	or     DWORD PTR [ebp-0x5321b2bc],0x52d1c903
  404842:	repz sub al,0x16
  404845:	add    BYTE PTR [edx-0x376b78df],0x69
  40484c:	cmp    BYTE PTR [ecx-0x42],0xc2
  404850:	add    al,0xcd
  404852:	into   
  404853:	sbb    ah,BYTE PTR [eax]
  404855:	call   0x9ed8a45f
  40485a:	addr16 clc 
  40485c:	pop    ds
  40485d:	in     eax,dx
  40485e:	mov    cl,0x96
  404860:	mov    cl,0x4d
  404862:	push   edx
  404863:	sub    bh,0xa0
  404866:	enter  0x33c5,0x25
  40486a:	jb     0x40482c
  40486c:	lgs    edx,FWORD PTR [esi-0x3236d0ff]
  404873:	add    DWORD PTR [eax],esi
  404875:	daa    
  404876:	(bad)  
  404878:	in     al,0x69
  40487a:	mov    dh,BYTE PTR [ebx+ebx*4-0x48ea7329]
  404881:	int    0x4e
  404883:	retf   0x6977
  404886:	inc    ecx
  404887:	or     BYTE PTR [ebx-0x633e6e64],dl
  40488d:	adc    esp,DWORD PTR [edx-0x34]
  404890:	mov    edi,0x83c4bc3f
  404895:	(bad)  [edi]
  404897:	xchg   ebx,eax
  404898:	sbb    al,0x5d
  40489a:	jo     0x404869
  40489c:	mov    ah,BYTE PTR gs:[edx-0x4faf1d4d]
  4048a3:	retf   
  4048a4:	cmp    DWORD PTR [edx],ecx
  4048a6:	or     DWORD PTR [eax-0x3aa0a909],0xbd7949d0
  4048b0:	push   ebp
  4048b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b2:	mov    ds:0x1acaad81,al
  4048b7:	pop    ebp
  4048b8:	or     al,0x57
  4048ba:	ficomp DWORD PTR [esp+ebp*4]
  4048bd:	arpl   WORD PTR [eax+eax*2+0x31],bx
  4048c1:	out    dx,eax
  4048c2:	cwde   
  4048c3:	xor    DWORD PTR [edi],eax
  4048c5:	cmp    BYTE PTR [edi],al
  4048c7:	mov    ds:0x635b9e04,eax
  4048cc:	mov    eax,ds:0x7f330192
  4048d1:	fs sbb al,0xb
  4048d4:	sub    DWORD PTR [edx+esi*8],0x5b
  4048d8:	xor    esi,DWORD PTR [esi]
  4048da:	mov    al,0x2b
  4048dc:	sub    DWORD PTR [ebx],ebx
  4048de:	rcr    DWORD PTR [eax],cl
  4048e0:	push   ebp
  4048e1:	test   eax,0xde626808
  4048e6:	pop    esi
  4048e7:	sbb    BYTE PTR [edx+0x181d3d47],ch
  4048ed:	sbb    eax,0xdc8192d5
  4048f2:	inc    eax
  4048f3:	popf   
  4048f4:	adc    DWORD PTR [ecx],0x650ec6fc
  4048fa:	mov    esi,0x74d06113
  4048ff:	adc    DWORD PTR [esi-0x19c62ffa],esp
  404905:	stos   DWORD PTR es:[edi],eax
  404906:	dec    eax
  404907:	out    dx,eax
  404908:	cmp    BYTE PTR [edx+0x2337f72d],0x40
  40490f:	jo     0x404901
  404911:	mov    ecx,ebx
  404913:	xchg   esp,eax
  404914:	push   esi
  404915:	mov    al,ds:0x66ca8e0f
  40491a:	ficomp WORD PTR [ecx+0x5a545293]
  404920:	inc    edi
  404921:	(bad)  
  404922:	fs sbb eax,0x47e1448d
  404929:	sub    bh,BYTE PTR [ebp-0x6c]
  40492c:	enter  0xd21,0xd2
  404930:	xchg   edx,eax
  404931:	je     0x40490c
  404933:	sub    DWORD PTR [ecx+ecx*1+0x4b],0x228a02a3
  40493b:	in     al,dx
  40493c:	rol    bl,0x6a
  40493f:	push   ds
  404940:	mov    eax,0xd23a2458
  404945:	cmp    al,BYTE PTR [ecx]
  404947:	(bad)  
  404948:	cmp    al,0x46
  40494a:	sbb    ah,BYTE PTR [ebp-0x647273ff]
  404950:	jne    0x40496a
  404952:	aam    0x96
  404954:	push   esp
  404955:	pop    esp
  404956:	out    0xee,eax
  404958:	cwde   
  404959:	imul   DWORD PTR [esi]
  40495b:	shl    BYTE PTR [edx],1
  40495d:	sti    
  40495e:	push   esi
  40495f:	xor    ch,bl
  404961:	popf   
  404962:	mov    al,ds:0x5428fbb
  404967:	xchg   DWORD PTR [ebx],eax
  404969:	xor    cl,BYTE PTR [eax-0x2581ed80]
  40496f:	cdq    
  404970:	or     esi,DWORD PTR [ebp+0x16]
  404973:	hlt    
  404974:	push   ecx
  404975:	leave  
  404976:	sub    esp,DWORD PTR [ebp+0x32]
  404979:	mov    edx,0xa1e9bc97
  40497e:	das    
  40497f:	push   es
  404980:	xchg   edi,eax
  404981:	cmc    
  404982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404983:	dec    ebx
  404984:	rol    DWORD PTR [eax],1
  404986:	lock aaa 
  404988:	(bad)  
  404989:	jno    0x404944
  40498b:	inc    esi
  40498c:	gs call 0xc7c66076
  404992:	sub    ebx,esi
  404994:	push   ss
  404995:	out    dx,al
  404996:	(bad)  
  404997:	cld    
  404998:	push   ecx
  404999:	xor    al,0xb4
  40499b:	sub    ecx,DWORD PTR [esi]
  40499d:	or     ch,BYTE PTR [ecx]
  40499f:	jp     0x404932
  4049a1:	ss or  al,0x1f
  4049a4:	push   eax
  4049a5:	add    ecx,DWORD PTR [edx-0x3c0e689b]
  4049ab:	int3   
  4049ac:	pop    ecx
  4049ad:	xchg   edx,eax
  4049ae:	jbe    0x4049ad
  4049b0:	cmp    ch,BYTE PTR [esi+0x33]
  4049b3:	call   0x4ffa:0x5f120715
  4049ba:	push   0xffffffb3
  4049bc:	mov    al,ds:0x8aa2b2b3
  4049c1:	sub    al,0x2e
  4049c3:	inc    edi
  4049c4:	fstp   st(0)
  4049c6:	rol    DWORD PTR [eax+0x4f],0xa7
  4049ca:	repnz ror DWORD PTR [esi+0x4f0516eb],0x67
  4049d2:	scas   al,BYTE PTR es:[edi]
  4049d3:	push   es
  4049d4:	rcr    DWORD PTR [ebp+0x4a],0x3a
  4049d8:	jbe    0x4049f2
  4049da:	enter  0x400c,0x76
  4049de:	out    0x60,eax
  4049e0:	jecxz  0x404964
  4049e2:	shl    DWORD PTR [esi+0x40978741],1
  4049e8:	pop    esp
  4049e9:	pop    esp
  4049ea:	(bad)  
  4049eb:	sub    ebx,ebp
  4049ed:	fwait
  4049ee:	pop    edi
  4049ef:	loopne 0x4049e8
  4049f1:	fwait
  4049f2:	idiv   DWORD PTR [ebx-0x15e759d0]
  4049f8:	fstp   DWORD PTR [edx+0x6c]
  4049fb:	mov    al,ds:0xdf969cbb
  404a00:	es xor al,0xad
  404a03:	or     BYTE PTR ss:[ebx],bh
  404a06:	push   ss
  404a07:	in     eax,0x57
  404a09:	and    eax,0xecdc8416
  404a0e:	and    al,0xad
  404a10:	stos   BYTE PTR es:[edi],al
  404a11:	adc    al,0x1b
  404a13:	ja     0x4049ce
  404a15:	retf   
  404a16:	sbb    BYTE PTR ds:0x31082d38,dh
  404a1c:	mov    bh,0xdd
  404a1e:	popf   
  404a1f:	push   ebx
  404a20:	sbb    al,0xde
  404a22:	jge    0x404a2d
  404a24:	cli    
  404a25:	mov    ebp,0xb9f6e282
  404a2a:	ret    0x43af
  404a2d:	stos   BYTE PTR es:[edi],al
  404a2e:	mov    eax,ds:0x3e054873
  404a33:	movsx  eax,sp
  404a36:	adc    DWORD PTR [eax-0x69],ecx
  404a39:	add    ebx,ebx
  404a3b:	shl    bl,0xec
  404a3e:	cmp    eax,esp
  404a40:	repnz mov cl,bh
  404a43:	shl    BYTE PTR [ebx],0x7c
  404a46:	inc    esp
  404a47:	cmp    al,0x30
  404a49:	xchg   edx,eax
  404a4a:	mov    BYTE PTR [edx],0xbd
  404a4d:	jno    0x404a32
  404a4f:	pop    esi
  404a50:	sub    BYTE PTR [ecx-0x1f5eeb2f],bl
  404a56:	outs   dx,DWORD PTR ds:[esi]
  404a57:	addr16 (bad) 
  404a5a:	mov    edi,0x9c9a79d7
  404a5f:	jmp    0x5b3bf8a0
  404a64:	in     al,dx
  404a65:	push   ss
  404a66:	push   ebp
  404a67:	push   es
  404a68:	push   es
  404a69:	xor    eax,ebp
  404a6b:	shr    DWORD PTR [ebx-0x6cd94fad],1
  404a71:	mov    ebp,0x6633046
  404a76:	mov    ds:0x8d2c6958,eax
  404a7b:	out    0x51,al
  404a7d:	mov    eax,ds:0x8e4c83b6
  404a82:	mov    dl,0xbc
  404a84:	jae    0x404acc
  404a86:	mov    BYTE PTR [eax+ebx*2],dh
  404a89:	jl     0x404a87
  404a8b:	xlat   BYTE PTR ds:[ebx]
  404a8c:	cwde   
  404a8d:	(bad)  
  404a8e:	out    dx,eax
  404a8f:	sbb    BYTE PTR [edx],ch
  404a91:	or     BYTE PTR [eax+0x25],al
  404a94:	xchg   edi,eax
  404a95:	mov    ebp,0x2a405690
  404a9a:	daa    
  404a9b:	jmp    0xb0331743
  404aa0:	adc    al,0x5a
  404aa2:	xchg   esi,eax
  404aa3:	sbb    eax,0x84b45ef3
  404aa8:	mov    DWORD PTR [ecx-0x1a],ebp
  404aab:	shl    DWORD PTR [edi-0x24bde23a],1
  404ab1:	int3   
  404ab2:	add    BYTE PTR [ecx-0x27ac697f],cl
  404ab8:	lds    eax,FWORD PTR [eax-0x2]
  404abb:	ins    BYTE PTR es:[edi],dx
  404abc:	xchg   ecx,eax
  404abd:	mov    ebp,0x39ae15cb
  404ac2:	icebp  
  404ac3:	cld    
  404ac4:	or     dl,ch
  404ac6:	sub    ch,BYTE PTR [edx]
  404ac8:	cmp    al,0x93
  404aca:	fst    QWORD PTR [esi]
  404acc:	dec    esi
  404acd:	dec    ebx
  404ace:	pop    edx
  404acf:	imul   cl
  404ad1:	and    DWORD PTR [eax-0x7a],esp
  404ad4:	pop    eax
  404ad5:	shl    DWORD PTR [edx+0x42],1
  404ad8:	ret    0xe01e
  404adb:	mov    ch,0x3d
  404add:	xor    eax,0x67abc535
  404ae2:	sbb    al,0x7
  404ae4:	mov    eax,ds:0xa499cf25
  404ae9:	fcom   QWORD PTR ds:0xeee101bd
  404aef:	adc    al,0xda
  404af1:	(bad)  
  404af2:	aad    0xeb
  404af4:	das    
  404af5:	inc    ebp
  404af6:	lods   al,BYTE PTR ds:[esi]
  404af7:	and    bl,ah
  404af9:	mov    ebp,0xaadeec41
  404afe:	dec    eax
  404aff:	push   cs
  404b00:	test   DWORD PTR [ebx+0x45],esi
  404b03:	arpl   WORD PTR [ecx],sp
  404b05:	add    cl,BYTE PTR [edi+ebx*8-0x28]
  404b09:	mov    bh,ah
  404b0b:	jl     0x404ad8
  404b0d:	inc    sp
  404b0f:	dec    edi
  404b10:	dec    ecx
  404b11:	sbb    DWORD PTR [edx+0x2da18e60],esp
  404b17:	and    eax,esp
  404b19:	test   ebx,0x98a12ab9
  404b1f:	lods   eax,DWORD PTR ds:[esi]
  404b20:	outs   dx,DWORD PTR ds:[si]
  404b22:	jl     0x404b72
  404b24:	fld    TBYTE PTR [ebx-0x28fc0743]
  404b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b2b:	jns    0x404b5b
  404b2d:	scas   al,BYTE PTR es:[edi]
  404b2e:	jb     0x404b8e
  404b30:	adc    esp,esi
  404b32:	out    dx,al
  404b33:	mov    dl,0xad
  404b35:	mov    eax,0xe2dfa549
  404b3a:	mov    ebx,0x44ea18c8
  404b3f:	lock test DWORD PTR [eax],0x51428acc
  404b46:	into   
  404b47:	push   esi
  404b48:	push   0xc217931d
  404b4d:	dec    esp
  404b4e:	shl    BYTE PTR [esi-0x66b95e53],0x1a
  404b55:	adc    eax,0xdfe5c53d
  404b5a:	imul   ebx,DWORD PTR [ecx+0x38ab4103],0x27bfe846
  404b64:	sar    ebx,1
  404b66:	(bad)
  404b69:	jnp    0x404b66
  404b6b:	dec    ebx
  404b6c:	fwait
  404b6d:	out    0x35,al
  404b6f:	jnp    0x404b37
  404b71:	shl    ebx,0x9f
  404b74:	popf   
  404b75:	xchg   ebp,eax
  404b76:	aam    0x91
  404b78:	cwde   
  404b79:	jg     0x404b6b
  404b7b:	loopne 0x404baf
  404b7d:	jbe    0x404bd0
  404b7f:	scas   al,BYTE PTR es:[edi]
  404b80:	and    eax,0xefedd940
  404b85:	xchg   edx,eax
  404b86:	les    esi,FWORD PTR [eax+0x3e2de17c]
  404b8c:	int3   
  404b8d:	fs fs fwait
  404b90:	cwde   
  404b91:	seto   BYTE PTR [ebx-0x669d8dcc]
  404b98:	adc    eax,0x7a23e39b
  404b9d:	in     al,0xa
  404b9f:	in     eax,dx
  404ba0:	into   
  404ba1:	xor    edi,DWORD PTR [edi-0x7030e10c]
  404ba7:	ds dec esp
  404ba9:	out    0x93,eax
  404bab:	pop    eax
  404bac:	mov    ds:0x21a3cdd5,al
  404bb1:	dec    esp
  404bb2:	test   al,0xa0
  404bb4:	cmp    eax,0x718c9385
  404bb9:	jae    0x404b8b
  404bbb:	and    BYTE PTR [ebp+0x4ecafd5d],bl
  404bc1:	in     eax,0x70
  404bc3:	cmp    ecx,DWORD PTR [eax]
  404bc5:	jo     0x404bf3
  404bc7:	push   ebp
  404bc8:	fist   DWORD PTR [ebx+0x7a931bc3]
  404bce:	xchg   al,dl
  404bd0:	pop    ebx
  404bd1:	and    DWORD PTR [ebx],esp
  404bd3:	mov    edx,0xaade9f5f
  404bd8:	ins    BYTE PTR es:[edi],dx
  404bd9:	adc    eax,DWORD PTR [eax]
  404bdb:	push   esi
  404bdc:	stos   BYTE PTR es:[edi],al
  404bdd:	das    
  404bde:	out    0x5d,eax
  404be0:	out    0x22,al
  404be2:	out    dx,al
  404be3:	sbb    BYTE PTR [edx+0x3c],0x81
  404be7:	(bad)  
  404be9:	and    eax,0x5bca4896
  404bee:	push   0x8970222f
  404bf3:	sbb    BYTE PTR [bp+si+0x41],0xf2
  404bf8:	mov    ecx,0xd8608f53
  404bfd:	push   0xbb37a421
  404c02:	pop    edx
  404c03:	inc    edx
  404c04:	stos   DWORD PTR es:[edi],eax
  404c05:	push   es
  404c06:	scas   eax,DWORD PTR es:[edi]
  404c07:	imul   edx,DWORD PTR [eax],0x1d67a3b2
  404c0d:	aam    0x5d
  404c0f:	mov    gs,esp
  404c11:	jmp    0x834e:0x1ee3018f
  404c18:	pop    ds
  404c19:	outs   dx,DWORD PTR ds:[esi]
  404c1a:	cmp    DWORD PTR [ecx],ebx
  404c1c:	(bad)  
  404c1d:	ins    DWORD PTR es:[edi],dx
  404c1e:	fmulp  st(2),st
  404c20:	nop
  404c21:	std    
  404c22:	push   esi
  404c23:	fs mov ebx,0x45a24887
  404c29:	int3   
  404c2a:	ja     0x404bc1
  404c2c:	inc    ebx
  404c2d:	xchg   edx,eax
  404c2e:	push   edi
  404c2f:	xchg   esi,eax
  404c30:	add    ebx,esi
  404c32:	xor    al,bl
  404c34:	loopne 0x404c71
  404c36:	sub    al,0xb
  404c38:	sbb    bh,BYTE PTR ds:0xbe7b836
  404c3e:	cmc    
  404c3f:	mov    bh,0xf
  404c41:	nop
  404c42:	sbb    al,0x8
  404c44:	cmp    esp,DWORD PTR [ebx+0x792a97af]
  404c4a:	xchg   esi,eax
  404c4b:	pop    esi
  404c4c:	add    BYTE PTR [ebx+0x21],bh
  404c4f:	mov    al,0x74
  404c51:	pop    esi
  404c52:	mov    bh,0xae
  404c54:	mov    dl,BYTE PTR [ecx]
  404c56:	and    DWORD PTR [eax+0x5aa32626],0x48ee1252
  404c60:	xor    DWORD PTR [edi],edx
  404c62:	out    dx,al
  404c63:	in     eax,dx
  404c64:	cmp    DWORD PTR [ecx],ecx
  404c66:	imul   edi,DWORD PTR [eax+0x7d],0x26
  404c6a:	in     eax,dx
  404c6b:	cmp    eax,0x604ac7da
  404c70:	push   cs
  404c71:	dec    esi
  404c72:	xor    ah,BYTE PTR [edi+0x56]
  404c75:	cmp    eax,0xa7f1287c
  404c7a:	and    DWORD PTR [edx+0x23],ecx
  404c7d:	pop    eax
  404c7e:	adc    BYTE PTR [eax],dl
  404c80:	pop    ecx
  404c81:	or     ebp,DWORD PTR [edx+edx*8+0x6ee324ad]
  404c88:	js     0x404c99
  404c8a:	nop
  404c8b:	shr    DWORD PTR [ebx+0x30],0x1e
  404c8f:	jp     0x404cf3
  404c91:	sahf   
  404c92:	test   al,0x6a
  404c94:	stos   DWORD PTR es:[edi],eax
  404c95:	push   cs
  404c96:	push   ebx
  404c97:	add    eax,0xc7fe3533
  404c9c:	stos   DWORD PTR es:[edi],eax
  404c9d:	loop   0x404c5d
  404c9f:	test   DWORD PTR [edx],edi
  404ca1:	xchg   ebx,eax
  404ca2:	mov    dh,0xf3
  404ca4:	fmul   DWORD PTR [eax-0x7a]
  404ca7:	push   cs
  404ca8:	call   FWORD PTR [edi-0x161d89ab]
  404cae:	xlat   BYTE PTR ds:[ebx]
  404caf:	or     eax,0xc2cede7f
  404cb4:	sbb    dh,al
  404cb6:	dec    esp
  404cb7:	inc    ebp
  404cb8:	mov    esp,0xe204621a
  404cbd:	push   ebp
  404cbe:	jbe    0x404cc0
  404cc0:	retf   0x5ae8
  404cc3:	stos   DWORD PTR es:[edi],eax
  404cc4:	aam    0xf0
  404cc6:	cmp    edx,ebx
  404cc8:	int3   
  404cc9:	neg    DWORD PTR [ecx+eiz*4+0x3425567a]
  404cd0:	pop    edi
  404cd1:	out    0xbc,al
  404cd3:	retf   
  404cd4:	add    BYTE PTR [esi],cl
  404cd6:	mov    ecx,0xa541013e
  404cdb:	mov    es,ebx
  404cdd:	mov    DWORD PTR [edx-0x2],ebp
  404ce0:	pop    edx
  404ce1:	xchg   esp,eax
  404ce2:	mov    esi,0xf991565f
  404ce7:	and    esi,esp
  404ce9:	push   ebp
  404cea:	ins    DWORD PTR es:[edi],dx
  404ceb:	lods   eax,DWORD PTR ds:[esi]
  404cec:	sub    al,0xb3
  404cee:	lea    edi,[edx]
  404cf0:	stc    
  404cf1:	lock mov ds:0xecec40a1,al
  404cf7:	stc    
  404cf8:	add    cl,BYTE PTR [eax-0x2f]
  404cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cfc:	cmp    BYTE PTR [edx-0x7ba70905],0xe8
  404d03:	mov    eax,ds:0xf8390923
  404d08:	in     eax,dx
  404d09:	mov    ah,0x97
  404d0b:	mov    edx,ecx
  404d0d:	fild   DWORD PTR [edx+0x3754a1d0]
  404d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d14:	shl    DWORD PTR [ecx+0x2ad5dcee],0xe4
  404d1b:	mov    ds:0x86fcb6ba,eax
  404d20:	pop    ecx
  404d21:	dec    edx
  404d22:	or     DWORD PTR [edx+0x6d],esi
  404d25:	std    
  404d26:	mov    ah,0x1d
  404d28:	inc    ecx
  404d29:	inc    esp
  404d2a:	arpl   WORD PTR [ebx],ax
  404d2c:	in     al,0x8c
  404d2e:	sbb    eax,0xd4b199cb
  404d33:	add    eax,0xb4ccf41b
  404d38:	int3   
  404d39:	sahf   
  404d3a:	add    DWORD PTR [eax],ebx
  404d3c:	cmp    edx,0x8c2a7fa4
  404d42:	push   edx
  404d43:	inc    eax
  404d44:	call   0xde3f:0xa3d0add5
  404d4b:	mov    eax,0x24e2d02
  404d50:	loopne 0x404d01
  404d52:	fucom  st(7)
  404d54:	loopne 0x404da6
  404d56:	repz imul ebp,DWORD PTR [bp+si],0xffffffb1
  404d5b:	mov    dh,0x2e
  404d5d:	pop    esp
  404d5e:	xor    esi,DWORD PTR [eax-0x60]
  404d61:	or     eax,0xc6464c19
  404d66:	fdiv   st(2),st
  404d68:	lock icebp 
  404d6a:	pop    ss
  404d6b:	daa    
  404d6c:	outs   dx,BYTE PTR ds:[esi]
  404d6d:	jp     0x404d4b
  404d6f:	repz sub bh,cl
  404d72:	xor    edi,ebp
  404d74:	test   eax,0xa39efe04
  404d79:	sbb    BYTE PTR [ebx+0x49],bh
  404d7c:	inc    eax
  404d7d:	inc    esp
  404d7e:	nop
  404d7f:	cmp    ecx,DWORD PTR ds:0x6fe02afb
  404d85:	loopne 0x404d8b
  404d87:	ins    BYTE PTR es:[edi],dx
  404d88:	xor    DWORD PTR [edx+0x4],0xffffffac
  404d8c:	cld    
  404d8d:	cmp    BYTE PTR [esi],dh
  404d8f:	in     al,dx
  404d90:	(bad)  
  404d91:	xor    BYTE PTR [ecx+0x24d6a627],al
  404d97:	mov    BYTE PTR [ecx],al
  404d99:	fdivr  DWORD PTR [eax+0x1133bffd]
  404d9f:	call   0x6cc9:0xee10d873
  404da6:	call   0xddeba86b
  404dab:	fidivr DWORD PTR [bx+di+0x2abc]
  404db0:	pop    ebp
  404db1:	cdq    
  404db2:	lea    ebx,[ecx+0x59832a14]
  404db8:	(bad)  
  404db9:	leave  
  404dba:	(bad)  
  404dbb:	adc    BYTE PTR [esi+0x1aa75043],bh
  404dc1:	xchg   ecx,eax
  404dc2:	mov    dl,0xc9
  404dc4:	sbb    eax,0x5b0fb366
  404dc9:	fidiv  DWORD PTR es:[edx]
  404dcc:	mov    bl,0x92
  404dce:	or     eax,0x99c61b98
  404dd3:	xchg   BYTE PTR [ecx+ebp*2],dl
  404dd6:	std    
  404dd7:	imul   eax,DWORD PTR [edx-0x50e9590b],0x14
  404dde:	fsubr  st,st(2)
  404de0:	pop    edi
  404de1:	add    BYTE PTR [esi+0x4a],0xed
  404de5:	add    cl,dl
  404de7:	jmp    0xc88bb29e
  404dec:	sub    edx,DWORD PTR [edx-0x2a]
  404def:	sar    al,1
  404df1:	aad    0xa1
  404df3:	adc    BYTE PTR [eax+0x25f2c7ab],bl
  404df9:	jl     0x404de1
  404dfb:	stos   BYTE PTR es:[edi],al
  404dfc:	xlat   BYTE PTR ds:[ebx]
  404dfd:	adc    BYTE PTR [ebp-0x48],ah
  404e00:	stos   BYTE PTR es:[edi],al
  404e01:	js     0x404e71
  404e03:	or     al,0xd0
  404e05:	test   al,0x2e
  404e07:	mov    cl,bh
  404e09:	sub    ebx,esi
  404e0b:	push   edx
  404e0c:	cmp    DWORD PTR [edx-0x5cdc4493],edx
  404e12:	jge    0x404e56
  404e14:	and    eax,0xd25b4b1b
  404e19:	and    cl,BYTE PTR [ebx+0x6e173dd7]
  404e1f:	aam    0xc8
  404e21:	mov    cl,0xbe
  404e23:	scas   al,BYTE PTR es:[edi]
  404e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e25:	inc    ebp
  404e26:	hlt    
  404e27:	inc    eax
  404e28:	cli    
  404e29:	jae    0x404df5
  404e2b:	jge    0x404e6c
  404e2d:	(bad)  
  404e2e:	lds    eax,FWORD PTR [ecx+0x7a8abfa0]
  404e34:	rcr    BYTE PTR [edx],1
  404e36:	xor    ebx,esp
  404e38:	mov    bh,0xd3
  404e3a:	cs xchg ebx,eax
  404e3c:	jnp    0x404dd8
  404e3e:	pop    esp
  404e3f:	pop    ss
  404e40:	loop   0x404e51
  404e42:	hlt    
  404e43:	je     0x404e4b
  404e45:	call   0xad3f2ae4
  404e4a:	gs ins DWORD PTR es:[edi],dx
  404e4c:	pop    esi
  404e4d:	cdq    
  404e4e:	or     DWORD PTR [ecx],esp
  404e50:	push   ecx
  404e51:	jecxz  0x404e97
  404e53:	sbb    ebp,esi
  404e55:	stc    
  404e56:	ficomp WORD PTR [ebx+0x33029215]
  404e5c:	int3   
  404e5d:	add    DWORD PTR [edx+0x77341f],esi
  404e63:	imul   ebx,DWORD PTR [edx],0xffffffde
  404e66:	retf   0x681c
  404e69:	mov    eax,DWORD PTR [edi+0x29]
  404e6c:	jecxz  0x404e0d
  404e6e:	jmp    FWORD PTR [edi]
  404e70:	mov    ds:0x38715f21,eax
  404e75:	cdq    
  404e76:	ror    DWORD PTR [eax+0x38],1
  404e79:	cli    
  404e7a:	and    ebx,DWORD PTR [esi+0x29]
  404e7d:	shr    ch,0x18
  404e80:	pop    ebp
  404e81:	cs (bad) 
  404e86:	pcmpeqd mm5,QWORD PTR [ebx+0x4b]
  404e8a:	xor    ebp,DWORD PTR ds:0xaeb76091
  404e90:	fiadd  WORD PTR [edx+0x1c88e20]
  404e96:	mov    ebx,0xe863053a
  404e9b:	pop    ebx
  404e9c:	mov    ds:0xd5e8a25c,eax
  404ea1:	jmp    0x67fec7d5
  404ea6:	ds jp  0x404ee5
  404ea9:	hlt    
  404eaa:	jmp    0x404e83
  404eac:	loop   0x404ef9
  404eae:	xor    al,0x1b
  404eb0:	pop    esi
  404eb1:	mov    BYTE PTR [eax-0x39],dl
  404eb4:	out    dx,eax
  404eb5:	test   al,0x9a
  404eb7:	enter  0x9952,0xc5
  404ebb:	sub    al,0x2c
  404ebd:	cwde   
  404ebe:	mov    eax,ds:0x561e939d
  404ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ec4:	in     al,dx
  404ec5:	adc    cl,BYTE PTR [ebx+0x2564f73b]
  404ecb:	mov    esp,0x1edab6eb
  404ed0:	sbb    al,0xb8
  404ed2:	stc    
  404ed3:	(bad)  
  404ed4:	pop    ds
  404ed5:	imul   edx,DWORD PTR ds:0x7f00aabc,0x4caac734
  404edf:	call   0x7b84a845
  404ee4:	add    DWORD PTR [edx+eax*1],eax
  404ee7:	popw   ds
  404ee9:	jg     0x404ef0
  404eeb:	ret    0xa57c
  404eee:	push   ebx
  404eef:	neg    BYTE PTR [edi-0xb]
  404ef2:	fdiv   QWORD PTR [ebx-0x1099ee14]
  404ef8:	push   edi
  404ef9:	scas   al,BYTE PTR es:[edi]
  404efa:	push   ecx
  404efb:	inc    eax
  404efc:	lahf   
  404efd:	test   DWORD PTR [ebp-0x31df1fb1],ebp
  404f03:	out    dx,eax
  404f04:	leave  
  404f05:	aas    
  404f06:	outs   dx,DWORD PTR ds:[esi]
  404f07:	icebp  
  404f08:	dec    edx
  404f09:	xor    al,0xe7
  404f0b:	xlat   BYTE PTR ds:[ebx]
  404f0c:	add    eax,0xe49859
  404f11:	xchg   esi,eax
  404f12:	imul   BYTE PTR [ebp-0x388d7a27]
  404f18:	cmc    
  404f19:	jae    0x404f83
  404f1b:	mov    edx,0x7063413d
  404f20:	pop    ebx
  404f21:	add    BYTE PTR [edi],cl
  404f23:	sahf   
  404f24:	or     eax,0x116d437f
  404f29:	mov    edx,0x503ceb58
  404f2e:	adc    BYTE PTR [eax],ch
  404f30:	adc    eax,0x81a4a1e7
  404f35:	pop    ss
  404f36:	daa    
  404f37:	jmp    FWORD PTR [edx-0x9]
  404f3a:	retf   
  404f3b:	jge    0x404f3f
  404f3d:	stc    
  404f3e:	sub    DWORD PTR [ebx-0x75],eax
  404f41:	xchg   edx,eax
  404f42:	mov    eax,0xf89c85b5
  404f47:	and    DWORD PTR ds:0x42a010,edi
  404f4d:	mov    DWORD PTR [ebp-0x4],eax
  404f50:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  404f57:	mov    ecx,DWORD PTR [ebp-0x4]
  404f5a:	mov    DWORD PTR ds:0x42a000,0x12
  404f64:	cmp    DWORD PTR ds:0x42a000,0x0
  404f6b:	je     0x404fb8
  404f71:	cmp    DWORD PTR ds:0x42a000,0x9
  404f78:	jne    0x404f8c
  404f7e:	push   DWORD PTR [ebp-0x24]
  404f81:	push   0x5fe9
  404f86:	call   DWORD PTR ds:0x42ed35
  404f8c:	cmp    DWORD PTR ds:0x42a000,0xa
  404f93:	jne    0x404fa6
  404f99:	mov    edx,DWORD PTR ds:0x42a000
  404f9f:	dec    edx
  404fa0:	mov    DWORD PTR ds:0x42a000,edx
  404fa6:	mov    edx,DWORD PTR ds:0x42a000
  404fac:	dec    edx
  404fad:	mov    DWORD PTR ds:0x42a000,edx
  404fb3:	jmp    0x404f64
  404fb8:	push   esi
  404fb9:	mov    edx,0x7510897
  404fbe:	adc    esi,DWORD PTR ds:0x42d018
  404fc4:	xor    ecx,edx
  404fc6:	or     esi,0x58d6
  404fcc:	mov    esi,0x3272de
  404fd1:	push   edi
  404fd2:	add    edi,DWORD PTR ds:0x42c010
  404fd8:	mov    edi,DWORD PTR [ebp+0x10]
  404fdb:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fe5:	add    ecx,esi
  404fe7:	mov    DWORD PTR ds:0x42b00c,0x2918
  404ff1:	cmp    ecx,edi
  404ff3:	je     0x405132
  404ff9:	sbb    ecx,0x5a47
  404fff:	mov    ecx,DWORD PTR [ebp-0x4]
  405002:	mov    edi,DWORD PTR [ebp+0x10]
  405005:	xor    eax,eax
  405007:	xor    ecx,edx
  405009:	xor    DWORD PTR ds:0x42a000,0x42d004
  405013:	add    ecx,esi
  405015:	add    edi,0xfabdbeeb
  40501b:	mov    DWORD PTR ds:0x42901c,0x2ab
  405025:	adc    eax,0xffffffff
  405028:	xor    DWORD PTR ds:0x429000,0x42c018
  405032:	xor    eax,0x0
  405035:	mov    DWORD PTR [ebp-0xc],eax
  405038:	mov    DWORD PTR ds:0x429010,0x21c3
  405042:	push   ebx
  405043:	mov    eax,ds:0x42c000
  405048:	adc    DWORD PTR ds:0x429024,eax
  40504e:	xor    ebx,ebx
  405050:	and    DWORD PTR ds:0x429028,0x2bdb
  40505a:	xor    edi,0x8a29a129
  405060:	sub    eax,0x2af1
  405065:	mov    eax,ecx
  405067:	sub    DWORD PTR ds:0x429008,0x42c018
  405071:	add    eax,0xfabdbeeb
  405076:	mov    DWORD PTR ds:0x42d008,0x23e2
  405080:	adc    ebx,0xffffffff
  405083:	xor    eax,0x8a29a129
  405088:	xor    DWORD PTR ds:0x42a01c,0x5bfd
  405092:	xor    ebx,0x0
  405095:	cmp    eax,edi
  405097:	jne    0x4050c4
  40509d:	mov    DWORD PTR ds:0x42d014,0x5593
  4050a7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4050aa:	mov    DWORD PTR ds:0x42c000,0x5fb3
  4050b4:	je     0x40512c
  4050ba:	jmp    0x4050c4
  4050bf:	mov    esi,0x3272de
  4050c4:	mov    eax,DWORD PTR [ebp-0x4]
  4050c7:	mov    edi,DWORD PTR [ebp-0x8]
  4050ca:	xor    edi,edx
  4050cc:	add    edi,esi
  4050ce:	mov    esi,DWORD PTR [ebp+0x8]
  4050d1:	imul   edi,ecx
  4050d4:	mov    ebx,DWORD PTR [ebp+0xc]
  4050d7:	xor    eax,edx
  4050d9:	add    eax,ecx
  4050db:	mov    al,BYTE PTR [ebx+eax*1+0x3272de]
  4050e2:	mov    BYTE PTR [edi+esi*1],al
  4050e5:	mov    eax,DWORD PTR [ebp-0x8]
  4050e8:	mov    esi,DWORD PTR [ebp+0x10]
  4050eb:	xor    eax,edx
  4050ed:	xor    ebx,ebx
  4050ef:	add    esi,0xfabdbeeb
  4050f5:	adc    ebx,0xffffffff
  4050f8:	lea    ecx,[ecx+eax*1+0x3272de]
  4050ff:	xor    edi,edi
  405101:	xor    esi,0x8a29a129
  405107:	xor    ebx,0x0
  40510a:	mov    eax,ecx
  40510c:	add    eax,0xfabdbeeb
  405111:	adc    edi,0xffffffff
  405114:	xor    eax,0x8a29a129
  405119:	xor    edi,0x0
  40511c:	cmp    eax,esi
  40511e:	jne    0x4050bf
  405124:	cmp    edi,ebx
  405126:	jne    0x4050bf
  40512c:	mov    eax,0xf89c85b4
  405131:	pop    ebx
  405132:	pop    edi
  405133:	pop    esi
  405134:	leave  
  405135:	ret    0xc
  405138:	push   ebp
  405139:	mov    ebp,esp
  40513b:	push   ecx
  40513c:	adc    DWORD PTR ds:0x42d00c,ebx
  405142:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  405149:	mov    eax,DWORD PTR [ebp+0x8]
  40514c:	sub    DWORD PTR ds:0x42a01c,0x42d008
  405156:	mov    al,BYTE PTR [eax]
  405158:	xor    DWORD PTR ds:0x42b000,0x3196
  405162:	add    al,0xa
  405164:	xor    al,0x72
  405166:	mov    DWORD PTR ds:0x42a00c,0x42a3
  405170:	cmp    al,0x25
  405172:	jne    0x405224
  405178:	mov    eax,DWORD PTR [ebp+0x8]
  40517b:	mov    ecx,DWORD PTR ds:0x42d018
  405181:	adc    ecx,DWORD PTR ds:0x42b01c
  405187:	mov    DWORD PTR ds:0x42d018,ecx
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	add    ecx,DWORD PTR [eax+0x3c]
  405193:	mov    edx,0x7510897
  405198:	movzx  eax,BYTE PTR ds:0x42d01c
  40519f:	xor    DWORD PTR ds:0x429008,eax
  4051a5:	mov    DWORD PTR [ebp+0x8],ecx
  4051a8:	and    DWORD PTR ds:0x42d010,0x0
  4051b2:	jmp    0x4051c2
  4051b7:	mov    eax,ds:0x42d010
  4051bc:	inc    eax
  4051bd:	mov    ds:0x42d010,eax
  4051c2:	cmp    DWORD PTR ds:0x42d010,0x10
  4051c9:	jae    0x4051f6
  4051cf:	cmp    DWORD PTR ds:0x42d010,0x18
  4051d6:	jne    0x4051f1
  4051dc:	push   0x1f60
  4051e1:	push   0x42b008
  4051e6:	push   0x63e2
  4051eb:	call   DWORD PTR ds:0x42ed39
  4051f1:	jmp    0x4051b7
  4051f6:	mov    eax,DWORD PTR [ebp-0x4]
  4051f9:	xor    eax,edx
  4051fb:	push   esi
  4051fc:	mov    esi,DWORD PTR [ebp+0x8]
  4051ff:	mov    ecx,0x3272de
  405204:	add    eax,ecx
  405206:	cmp    DWORD PTR [esi+0x54],eax
  405209:	pop    esi
  40520a:	je     0x405218
  405210:	mov    eax,DWORD PTR [ebp+0x8]
  405213:	jmp    0x405231
  405218:	mov    eax,DWORD PTR [ebp-0x4]
  40521b:	xor    eax,edx
  40521d:	add    eax,ecx
  40521f:	jmp    0x405231
  405224:	mov    eax,DWORD PTR [ebp-0x4]
  405227:	xor    eax,0x7510897
  40522c:	add    eax,0x3272de
  405231:	leave  
  405232:	ret    0x4
  405235:	push   ebp
  405236:	mov    ebp,esp
  405238:	sub    esp,0x78
  40523b:	push   ebx
  40523c:	push   esi
  40523d:	not    DWORD PTR ds:0x42c004
  405243:	push   edi
  405244:	and    DWORD PTR ds:0x42a010,0x4b6f
  40524e:	push   0x1f
  405250:	and    DWORD PTR ds:0x42b01c,0x5e1c
  40525a:	lea    eax,[ebp-0x78]
  40525d:	push   eax
  40525e:	xor    DWORD PTR ds:0x429008,0x42d018
  405268:	push   0x0
  40526a:	sbb    DWORD PTR ds:0x429008,0x42c01c
  405274:	call   DWORD PTR ds:0x42ed69
  40527a:	and    DWORD PTR ds:0x42a004,0x5ecf
  405284:	push   0x97898797
  405289:	and    DWORD PTR ds:0x42b014,0x429004
  405293:	call   DWORD PTR ds:0x42ed2d
  405299:	and    ebx,eax
  40529b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4052a2:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4052a9:	mov    ecx,DWORD PTR [ebp-0x4]
  4052ac:	and    DWORD PTR ds:0x42b008,0x0
  4052b6:	jmp    0x4052c6
  4052bb:	mov    eax,ds:0x42b008
  4052c0:	inc    eax
  4052c1:	mov    ds:0x42b008,eax
  4052c6:	cmp    DWORD PTR ds:0x42b008,0x1f
  4052cd:	jae    0x40535c
  4052d3:	cmp    DWORD PTR ds:0x42b008,0x7
  4052da:	jne    0x4052f0
  4052e0:	push   0x42e0e4
  4052e5:	push   0x42e083
  4052ea:	call   DWORD PTR ds:0x42ed3d
  4052f0:	cmp    DWORD PTR ds:0x42b008,0x6
  4052f7:	jne    0x405308
  4052fd:	mov    eax,ds:0x42b008
  405302:	inc    eax
  405303:	mov    ds:0x42b008,eax
  405308:	jmp    0x4052bb
  40530d:	mov    DWORD PTR ds:0x429004,0x1d
  405317:	cmp    DWORD PTR ds:0x429004,0x0
  40531e:	je     0x40535c
  405324:	cmp    DWORD PTR ds:0x429004,0x1f
  40532b:	jne    0x405340
  405331:	push   DWORD PTR [ebp-0x28]
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0xc]
  40533a:	call   DWORD PTR ds:0x42ed41
  405340:	mov    ebx,DWORD PTR ds:0x429004
  405346:	dec    ebx
  405347:	mov    DWORD PTR ds:0x429004,ebx
  40534d:	jmp    0x405317
  405352:	and    DWORD PTR ds:0x42a010,0x5936
  40535c:	mov    ebx,0x7510897
  405361:	xor    ecx,ebx
  405363:	sbb    DWORD PTR ds:0x42a000,edx
  405369:	mov    eax,0x3272de
  40536e:	or     DWORD PTR ds:0x42d018,0x42c010
  405378:	add    ecx,eax
  40537a:	and    DWORD PTR ds:0x429014,0x42b004
  405384:	mov    DWORD PTR [ebp-0x1c],ecx
  405387:	xor    DWORD PTR ds:0x429010,edx
  40538d:	mov    ecx,DWORD PTR [ebp+0x14]
  405390:	and    DWORD PTR ds:0x42b004,0x273e
  40539a:	test   ecx,ecx
  40539c:	mov    DWORD PTR ds:0x42c004,0x295e
  4053a6:	je     0x4053b6
  4053ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4053af:	or     esi,esi
  4053b1:	mov    ecx,DWORD PTR [ecx]
  4053b3:	mov    DWORD PTR [ebp-0x1c],ecx
  4053b6:	and    DWORD PTR ds:0x42b018,0x0
  4053c0:	jmp    0x4053d2
  4053c5:	mov    edi,DWORD PTR ds:0x42b018
  4053cb:	inc    edi
  4053cc:	mov    DWORD PTR ds:0x42b018,edi
  4053d2:	cmp    DWORD PTR ds:0x42b018,0x18
  4053d9:	jae    0x405402
  4053df:	cmp    DWORD PTR ds:0x42b018,0x24
  4053e6:	jne    0x4053fd
  4053ec:	push   DWORD PTR [ebp-0x14]
  4053ef:	push   0x42d004
  4053f4:	push   DWORD PTR [ebp-0x14]
  4053f7:	call   DWORD PTR ds:0x42ed45
  4053fd:	jmp    0x4053c5
  405402:	mov    ecx,0x7665
  405407:	and    DWORD PTR ds:0x42a014,0x0
  405411:	jmp    0x405423
  405416:	mov    esi,DWORD PTR ds:0x42a014
  40541c:	inc    esi
  40541d:	mov    DWORD PTR ds:0x42a014,esi
  405423:	cmp    DWORD PTR ds:0x42a014,0x15
  40542a:	jae    0x405448
  405430:	cmp    DWORD PTR ds:0x42a014,0x19
  405437:	jne    0x405443
  40543d:	call   DWORD PTR ds:0x42ed51
  405443:	jmp    0x405416
  405448:	imul   edx,eax
  40544b:	mov    esi,0x76532
  405450:	and    DWORD PTR ds:0x42c014,0x0
  40545a:	jmp    0x40546c
  40545f:	mov    edi,DWORD PTR ds:0x42c014
  405465:	inc    edi
  405466:	mov    DWORD PTR ds:0x42c014,edi
  40546c:	cmp    DWORD PTR ds:0x42c014,0x16
  405473:	jae    0x40549e
  405479:	cmp    DWORD PTR ds:0x42c014,0x22
  405480:	jne    0x40548c
  405486:	call   DWORD PTR ds:0x42ed55
  40548c:	jmp    0x40545f
  405491:	movzx  edi,WORD PTR ds:0x429024
  405498:	xor    DWORD PTR ds:0x42c008,edi
  40549e:	add    edx,ecx
  4054a0:	xchg   esi,ecx
  4054a2:	mov    edi,0x54354
  4054a7:	and    DWORD PTR ds:0x429028,0x0
  4054b1:	jmp    0x4054c3
  4054b6:	mov    ecx,DWORD PTR ds:0x429028
  4054bc:	inc    ecx
  4054bd:	mov    DWORD PTR ds:0x429028,ecx
  4054c3:	cmp    DWORD PTR ds:0x429028,0x1c
  4054ca:	jae    0x40550b
  4054d0:	cmp    DWORD PTR ds:0x429028,0x21
  4054d7:	jne    0x405500
  4054dd:	push   0x8575
  4054e2:	push   0x65be
  4054e7:	push   0x42d000
  4054ec:	push   DWORD PTR [ebp-0x24]
  4054ef:	push   DWORD PTR [ebp-0x14]
  4054f2:	push   DWORD PTR [ebp-0x18]
  4054f5:	push   0x5d3f
  4054fa:	call   DWORD PTR ds:0x42ed59
  405500:	jmp    0x4054b6
  405505:	inc    DWORD PTR ds:0x429020
  40550b:	sub    edx,edi
  40550d:	xor    ecx,DWORD PTR ds:0x42c014
  405513:	mov    ecx,DWORD PTR [ebp-0x4]
  405516:	sbb    DWORD PTR ds:0x42a008,ecx
  40551c:	xor    ecx,ebx
  40551e:	inc    esi
  40551f:	add    ecx,eax
  405521:	mov    DWORD PTR [ebp-0x8],ecx
  405524:	and    esi,ecx
  405526:	mov    ecx,DWORD PTR [ebp-0x14]
  405529:	xor    ecx,ebx
  40552b:	add    ecx,eax
  40552d:	mov    DWORD PTR ds:0x429004,0x1b
  405537:	cmp    DWORD PTR ds:0x429004,0x0
  40553e:	je     0x405599
  405544:	cmp    DWORD PTR ds:0x429004,0x9
  40554b:	jne    0x405561
  405551:	push   0x27da
  405556:	push   0x42e0f3
  40555b:	call   DWORD PTR ds:0x42ed5d
  405561:	cmp    DWORD PTR ds:0x429004,0xa
  405568:	jne    0x40557d
  40556e:	xor    esi,esi
  405570:	or     esi,DWORD PTR ds:0x429004
  405576:	dec    esi
  405577:	mov    DWORD PTR ds:0x429004,esi
  40557d:	mov    esi,DWORD PTR ds:0x429004
  405583:	dec    esi
  405584:	mov    DWORD PTR ds:0x429004,esi
  40558a:	jmp    0x405537
  40558f:	adc    DWORD PTR ds:0x42d008,0x2b5d
  405599:	mov    DWORD PTR [ebp-0x24],ecx
  40559c:	mov    ecx,DWORD PTR [ebp-0x4]
  40559f:	or     DWORD PTR ds:0x42d014,ebx
  4055a5:	xor    ecx,ebx
  4055a7:	add    ecx,eax
  4055a9:	sub    esi,0x14b0
  4055af:	mov    DWORD PTR [ebp-0x30],ecx
  4055b2:	or     DWORD PTR ds:0x42a000,edi
  4055b8:	mov    esi,DWORD PTR [ebp-0x4]
  4055bb:	xor    esi,ebx
  4055bd:	and    DWORD PTR ds:0x42d018,0x0
  4055c7:	jmp    0x4055d9
  4055cc:	mov    ecx,DWORD PTR ds:0x42d018
  4055d2:	inc    ecx
  4055d3:	mov    DWORD PTR ds:0x42d018,ecx
  4055d9:	cmp    DWORD PTR ds:0x42d018,0x10
  4055e0:	jae    0x405636
  4055e6:	cmp    DWORD PTR ds:0x42d018,0x9
  4055ed:	jne    0x405608
  4055f3:	push   0x42e14e
  4055f8:	push   DWORD PTR [ebp-0x10]
  4055fb:	push   0x1
  4055fd:	push   0x8e12
  405602:	call   DWORD PTR ds:0x42ed61
  405608:	cmp    DWORD PTR ds:0x42d018,0x8
  40560f:	jne    0x405624
  405615:	xor    ecx,ecx
  405617:	xor    ecx,DWORD PTR ds:0x42d018
  40561d:	inc    ecx
  40561e:	mov    DWORD PTR ds:0x42d018,ecx
  405624:	jmp    0x4055cc
  405629:	movzx  ecx,BYTE PTR ds:0x42d010
  405630:	and    DWORD PTR ds:0x429014,ecx
  405636:	add    esi,eax
  405638:	xor    ecx,0x7f80
  40563e:	mov    ecx,DWORD PTR [ebp-0x24]
  405641:	sub    ecx,eax
  405643:	sub    DWORD PTR ds:0x42b010,0x42d018
  40564d:	lea    edx,[esi-0x3272de]
  405653:	adc    DWORD PTR ds:0x42c010,0x429018
  40565d:	xor    ecx,ebx
  40565f:	xor    edx,ebx
  405661:	cmp    edx,ecx
  405663:	mov    DWORD PTR ds:0x42a01c,0x644e
  40566d:	je     0x40584a
  405673:	mov    ecx,DWORD PTR [ebp-0x4]
  405676:	or     DWORD PTR ds:0x429004,0x58dd
  405680:	xor    ecx,ebx
  405682:	add    ecx,eax
  405684:	mov    DWORD PTR ds:0x42a014,0x2056
  40568e:	cmp    esi,ecx
  405690:	mov    DWORD PTR ds:0x42d01c,0x3298
  40569a:	jne    0x405827
  4056a0:	push   DWORD PTR [ebp+0x8]
  4056a3:	call   0x405138
  4056a8:	mov    DWORD PTR ds:0x42901c,0x1db4
  4056b2:	mov    DWORD PTR [ebp-0x18],eax
  4056b5:	xor    edi,edi
  4056b7:	xor    edi,DWORD PTR ds:0x42a004
  4056bd:	and    DWORD PTR ds:0x42d018,edi
  4056c3:	mov    eax,DWORD PTR [ebp-0x4]
  4056c6:	sbb    DWORD PTR ds:0x42a018,0x66a3
  4056d0:	mov    ecx,DWORD PTR [ebp-0x18]
  4056d3:	adc    DWORD PTR ds:0x42b010,ecx
  4056d9:	xor    eax,ebx
  4056db:	mov    edi,0x3272de
  4056e0:	sub    DWORD PTR ds:0x42d01c,0x42d010
  4056ea:	add    eax,edi
  4056ec:	mov    DWORD PTR ds:0x429014,0x47bf
  4056f6:	cmp    ecx,eax
  4056f8:	mov    DWORD PTR ds:0x42d008,0x237d
  405702:	je     0x4058ba
  405708:	add    DWORD PTR ds:0x42a018,0x42c000
  405712:	push   DWORD PTR [ebp-0x18]
  405715:	push   DWORD PTR [ebp+0x8]
  405718:	call   0x40aa37
  40571d:	adc    ecx,DWORD PTR ds:0x42c010
  405723:	mov    DWORD PTR [ebp-0x18],eax
  405726:	mov    eax,DWORD PTR [ebp-0x4]
  405729:	mov    ecx,DWORD PTR [ebp-0x18]
  40572c:	xor    eax,ebx
  40572e:	xor    DWORD PTR ds:0x429014,0x42d00c
  405738:	add    eax,edi
  40573a:	cmp    ecx,eax
  40573c:	je     0x4058ba
  405742:	sbb    ecx,DWORD PTR ds:0x429024
  405748:	mov    eax,DWORD PTR [ebp-0x18]
  40574b:	and    DWORD PTR ds:0x42b000,0x0
  405755:	mov    ecx,DWORD PTR ds:0x42b000
  40575b:	inc    ecx
  40575c:	mov    DWORD PTR ds:0x42b000,ecx
  405762:	cmp    DWORD PTR ds:0x42b000,0x25
  405769:	jne    0x40577f
  40576f:	push   0x42c010
  405774:	push   0x70cc
  405779:	call   DWORD PTR ds:0x42ed65
  40577f:	cmp    DWORD PTR ds:0x42b000,0x1f
  405786:	jb     0x405755
  40578c:	and    DWORD PTR ds:0x42c008,0x0
  405796:	xor    ecx,ecx
  405798:	or     ecx,DWORD PTR ds:0x42c008
  40579e:	inc    ecx
  40579f:	mov    DWORD PTR ds:0x42c008,ecx
  4057a5:	cmp    DWORD PTR ds:0x42c008,0x1d
  4057ac:	jne    0x4057d0
  4057b2:	push   DWORD PTR [ebp-0x1c]
  4057b5:	push   0x42a01c
  4057ba:	push   DWORD PTR [ebp-0x14]
  4057bd:	push   0x42e143
  4057c2:	push   DWORD PTR [ebp-0xc]
  4057c5:	push   0x6f44
  4057ca:	call   DWORD PTR ds:0x42ed6d
  4057d0:	cmp    DWORD PTR ds:0x42c008,0x1a
  4057d7:	jb     0x405796
  4057dd:	mov    eax,DWORD PTR [eax+0x18]
  4057e0:	xor    ecx,ecx
  4057e2:	add    ecx,DWORD PTR ds:0x42c010
  4057e8:	and    ecx,DWORD PTR ds:0x429024
  4057ee:	mov    DWORD PTR ds:0x42c010,ecx
  4057f4:	mov    DWORD PTR [ebp-0x24],eax
  4057f7:	mov    eax,DWORD PTR [ebp-0x18]
  4057fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4057fd:	add    ecx,DWORD PTR [eax+0x20]
  405800:	adc    eax,0x666b
  405805:	mov    DWORD PTR [ebp-0x2c],ecx
  405808:	mov    eax,DWORD PTR [ebp-0x18]
  40580b:	mov    ecx,DWORD PTR [ebp+0x8]
  40580e:	add    ecx,DWORD PTR [eax+0x24]
  405811:	mov    DWORD PTR [ebp-0x34],ecx
  405814:	mov    eax,DWORD PTR [ebp-0x18]
  405817:	mov    ecx,DWORD PTR [ebp+0x8]
  40581a:	add    ecx,DWORD PTR [eax+0x1c]
  40581d:	mov    eax,edi
  40581f:	mov    DWORD PTR [ebp-0x18],ecx
  405822:	jmp    0x405882
  405827:	mov    ecx,DWORD PTR [ebp-0x2c]
  40582a:	mov    edx,DWORD PTR [ebp+0x8]
  40582d:	add    edx,DWORD PTR [ecx+esi*4]
  405830:	mov    DWORD PTR [ebp-0x28],edx
  405833:	mov    ecx,DWORD PTR [ebp-0x4]
  405836:	mov    edx,DWORD PTR [ebp-0x28]
  405839:	xor    ecx,ebx
  40583b:	add    ecx,eax
  40583d:	cmp    edx,ecx
  40583f:	je     0x405882
  405845:	jmp    0x40586e
  40584a:	mov    ecx,DWORD PTR [ebp-0x4]
  40584d:	mov    edx,DWORD PTR [ebp-0x8]
  405850:	xor    ecx,ebx
  405852:	add    ecx,eax
  405854:	cmp    edx,ecx
  405856:	je     0x4058c6
  40585c:	mov    ecx,DWORD PTR [ebp-0x4]
  40585f:	mov    edx,DWORD PTR [ebp-0x30]
  405862:	xor    ecx,ebx
  405864:	add    ecx,eax
  405866:	cmp    edx,ecx
  405868:	je     0x4058d5
  40586e:	lea    eax,[ebp-0x8]
  405871:	push   eax
  405872:	push   DWORD PTR [ebp-0x28]
  405875:	push   DWORD PTR [ebp+0xc]
  405878:	call   0x40ac7b
  40587d:	mov    eax,0x3272de
  405882:	mov    ecx,DWORD PTR [ebp-0x4]
  405885:	mov    edx,DWORD PTR [ebp-0x8]
  405888:	xor    ecx,ebx
  40588a:	add    ecx,eax
  40588c:	cmp    edx,ecx
  40588e:	je     0x4058a9
  405894:	mov    ecx,DWORD PTR [ebp-0x34]
  405897:	movzx  ecx,WORD PTR [ecx+esi*2]
  40589b:	mov    edx,DWORD PTR [ebp-0x18]
  40589e:	mov    ecx,DWORD PTR [edx+ecx*4]
  4058a1:	mov    DWORD PTR [ebp-0x38],ecx
  4058a4:	jmp    0x40584a
  4058a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4058ac:	xor    ecx,ebx
  4058ae:	lea    esi,[esi+ecx*1+0x3272de]
  4058b5:	jmp    0x405638
  4058ba:	mov    eax,DWORD PTR [ebp-0x4]
  4058bd:	xor    eax,ebx
  4058bf:	add    eax,edi
  4058c1:	jmp    0x405a39
  4058c6:	mov    eax,DWORD PTR [ebp-0x4]
  4058c9:	xor    eax,ebx
  4058cb:	add    eax,0x3272de
  4058d0:	jmp    0x405a39
  4058d5:	mov    ecx,DWORD PTR [ebp-0x38]
  4058d8:	add    ecx,DWORD PTR [ebp+0x8]
  4058db:	mov    DWORD PTR [ebp-0x10],ecx
  4058de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4058e1:	test   ecx,ecx
  4058e3:	je     0x4059c4
  4058e9:	mov    DWORD PTR [ebp-0x20],0x0
  4058f0:	push   0x3
  4058f2:	xor    edx,edx
  4058f4:	pop    edx
  4058f5:	add    edx,0x8
  4058f8:	push   edx
  4058f9:	pop    ecx
  4058fa:	push   0x6
  4058fc:	dec    ecx
  4058fd:	pop    ebx
  4058fe:	dec    ebx
  4058ff:	xchg   ebx,ecx
  405901:	sub    ebx,ecx
  405903:	xchg   ebx,ecx
  405905:	dec    ecx
  405906:	mov    eax,DWORD PTR [ebp-0x1c]
  405909:	imul   eax,ecx
  40590c:	sub    esp,eax
  40590e:	mov    DWORD PTR [ebp-0x20],esp
  405911:	mov    eax,DWORD PTR [ebp-0x4]
  405914:	mov    ecx,0x7510897
  405919:	xor    eax,ecx
  40591b:	mov    edx,0x3272de
  405920:	add    eax,edx
  405922:	mov    DWORD PTR [ebp+0x8],eax
  405925:	mov    eax,DWORD PTR [ebp-0x14]
  405928:	xor    eax,ecx
  40592a:	add    eax,edx
  40592c:	mov    edx,DWORD PTR [ebp+0x14]
  40592f:	imul   eax,DWORD PTR [edx]
  405932:	mov    edx,DWORD PTR [ebp-0x4]
  405935:	xor    edx,ecx
  405937:	mov    ecx,DWORD PTR [ebp+0x8]
  40593a:	lea    ecx,[edx+ecx*1+0x3272de]
  405941:	cmp    ecx,eax
  405943:	je     0x4059ba
  405949:	mov    edi,DWORD PTR [ebp-0x14]
  40594c:	mov    eax,DWORD PTR [ebp+0x8]
  40594f:	mov    edx,DWORD PTR [ebp+0x14]
  405952:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405956:	mov    ecx,0x7510897
  40595b:	xor    edx,edx
  40595d:	xor    edi,ecx
  40595f:	mov    esi,0x3272de
  405964:	add    edi,esi
  405966:	div    edi
  405968:	mov    edx,DWORD PTR [ebp-0x4]
  40596b:	xor    edx,ecx
  40596d:	lea    eax,[edx+eax*1+0x3272de]
  405974:	mov    edx,DWORD PTR [ebp+0x8]
  405977:	mov    edi,DWORD PTR [ebp-0x20]
  40597a:	mov    DWORD PTR [edi+edx*4],eax
  40597d:	mov    eax,DWORD PTR [ebp-0x14]
  405980:	mov    edx,DWORD PTR [ebp+0x8]
  405983:	xor    eax,ecx
  405985:	lea    eax,[eax+edx*1+0x3272de]
  40598c:	mov    DWORD PTR [ebp+0x8],eax
  40598f:	mov    eax,DWORD PTR [ebp-0x14]
  405992:	mov    edx,DWORD PTR [ebp+0x14]
  405995:	xor    eax,ecx
  405997:	add    eax,esi
  405999:	imul   eax,DWORD PTR [edx]
  40599c:	mov    edx,DWORD PTR [ebp-0x4]
  40599f:	xor    edx,ecx
  4059a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4059a4:	lea    ecx,[edx+ecx*1+0x3272de]
  4059ab:	cmp    ecx,eax
  4059ad:	jne    0x405949
  4059b3:	mov    eax,esi
  4059b5:	jmp    0x4059bf
  4059ba:	mov    eax,0x3272de
  4059bf:	mov    ebx,0x7510897
  4059c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4059c7:	xor    ecx,ebx
  4059c9:	add    ecx,eax
  4059cb:	mov    DWORD PTR [ebp-0xc],ecx
  4059ce:	mov    ebx,0x65655
  4059d3:	add    ebx,0x3234
  4059d9:	xchg   ebx,esi
  4059db:	xor    ebx,ebx
  4059dd:	push   esi
  4059de:	mov    esi,ebx
  4059e0:	pop    ebx
  4059e1:	mov    edx,esi
  4059e3:	add    ebx,0x1002
  4059e9:	lea    eax,[ebp-0x10]
  4059ec:	add    edx,eax
  4059ee:	add    edx,0x5
  4059f1:	push   edx
  4059f2:	inc    esi
  4059f3:	pop    ecx
  4059f4:	dec    ecx
  4059f5:	xchg   ecx,eax
  4059f6:	dec    eax
  4059f7:	xchg   ecx,eax
  4059f8:	dec    ecx
  4059f9:	xchg   ecx,edx
  4059fb:	dec    edx
  4059fc:	push   edx
  4059fd:	mov    edx,ebx
  4059ff:	pop    ebx
  405a00:	dec    ebx
  405a01:	call   DWORD PTR [ebx]
  405a03:	cmp    DWORD PTR [ebp+0x10],esi
  405a06:	je     0x405a25
  405a0c:	xchg   edx,eax
  405a0d:	push   0xb
  405a0f:	pop    ecx
  405a10:	push   0x4
  405a12:	pop    ebx
  405a13:	inc    ebx
  405a14:	xchg   ebx,ecx
  405a16:	sub    ebx,ecx
  405a18:	xchg   ebx,ecx
  405a1a:	dec    ecx
  405a1b:	dec    ecx
  405a1c:	mov    eax,DWORD PTR [ebp-0x1c]
  405a1f:	imul   eax,ecx
  405a22:	add    esp,eax
  405a24:	xchg   edx,eax
  405a25:	push   eax
  405a26:	xor    ebx,ebx
  405a28:	mov    edx,esp
  405a2a:	dec    edx
  405a2b:	inc    ebx
  405a2c:	add    ebx,DWORD PTR [edx+ebx*1]
  405a2f:	dec    ebx
  405a30:	xor    edx,edx
  405a32:	add    DWORD PTR [ebp-0xc],ebx
  405a35:	pop    ebx
  405a36:	mov    eax,DWORD PTR [ebp-0xc]
  405a39:	pop    edi
  405a3a:	pop    esi
  405a3b:	pop    ebx
  405a3c:	leave  
  405a3d:	ret    0x10
  405a40:	push   ebp
  405a41:	mov    ebp,esp
  405a43:	sub    esp,0x7c
  405a46:	mov    DWORD PTR ds:0x42c018,0x1a
  405a50:	cmp    DWORD PTR ds:0x42c018,0x0
  405a57:	je     0x405a9c
  405a5d:	cmp    DWORD PTR ds:0x42c018,0xd
  405a64:	jne    0x405a70
  405a6a:	call   DWORD PTR ds:0x42ed71
  405a70:	cmp    DWORD PTR ds:0x42c018,0xe
  405a77:	jne    0x405a8a
  405a7d:	mov    ecx,DWORD PTR ds:0x42c018
  405a83:	dec    ecx
  405a84:	mov    DWORD PTR ds:0x42c018,ecx
  405a8a:	mov    ecx,DWORD PTR ds:0x42c018
  405a90:	dec    ecx
  405a91:	mov    DWORD PTR ds:0x42c018,ecx
  405a97:	jmp    0x405a50
  405a9c:	push   esi
  405a9d:	and    DWORD PTR ds:0x42901c,0x0
  405aa7:	mov    eax,ds:0x42901c
  405aac:	inc    eax
  405aad:	mov    ds:0x42901c,eax
  405ab2:	cmp    DWORD PTR ds:0x42901c,0x13
  405ab9:	jne    0x405aca
  405abf:	push   0x42b018
  405ac4:	call   DWORD PTR ds:0x42ed75
  405aca:	cmp    DWORD PTR ds:0x42901c,0x10
  405ad1:	jb     0x405aa7
  405ad7:	push   edi
  405ad8:	and    DWORD PTR ds:0x42d004,0x0
  405ae2:	mov    esi,DWORD PTR ds:0x42d004
  405ae8:	inc    esi
  405ae9:	mov    DWORD PTR ds:0x42d004,esi
  405aef:	cmp    DWORD PTR ds:0x42d004,0xc
  405af6:	jne    0x405b0c
  405afc:	push   0x476e
  405b01:	push   0x899a
  405b06:	call   DWORD PTR ds:0x42ed35
  405b0c:	cmp    DWORD PTR ds:0x42d004,0xb
  405b13:	jne    0x405b26
  405b19:	mov    esi,DWORD PTR ds:0x42d004
  405b1f:	inc    esi
  405b20:	mov    DWORD PTR ds:0x42d004,esi
  405b26:	cmp    DWORD PTR ds:0x42d004,0x14
  405b2d:	jb     0x405ae2
  405b33:	and    esi,0x6b28
  405b39:	mov    eax,ds:0x42e435
  405b3e:	mov    DWORD PTR [ebp-0x24],eax
  405b41:	sbb    DWORD PTR ds:0x42a01c,ecx
  405b47:	mov    eax,ds:0x42e541
  405b4c:	mov    DWORD PTR [ebp-0x34],eax
  405b4f:	and    DWORD PTR [ebp-0x30],0x0
  405b53:	xor    eax,0x7905
  405b58:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  405b5f:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  405b66:	dec    esi
  405b67:	mov    eax,DWORD PTR [ebp-0x10]
  405b6a:	mov    ecx,DWORD PTR [ebp-0x10]
  405b6d:	and    DWORD PTR ds:0x42b010,0x0
  405b77:	jmp    0x405b89
  405b7c:	mov    esi,DWORD PTR ds:0x42b010
  405b82:	inc    esi
  405b83:	mov    DWORD PTR ds:0x42b010,esi
  405b89:	cmp    DWORD PTR ds:0x42b010,0x11
  405b90:	jae    0x405bbb
  405b96:	cmp    DWORD PTR ds:0x42b010,0x1a
  405b9d:	jne    0x405bb4
  405ba3:	push   DWORD PTR [ebp-0x24]
  405ba6:	push   0x42901c
  405bab:	push   DWORD PTR [ebp-0x1c]
  405bae:	call   DWORD PTR ds:0x42ed39
  405bb4:	jmp    0x405b7c
  405bb9:	add    edi,esi
  405bbb:	sub    eax,ecx
  405bbd:	mov    DWORD PTR [ebp-0x10],eax
  405bc0:	xor    ecx,ecx
  405bc2:	or     ecx,DWORD PTR ds:0x429008
  405bc8:	sub    DWORD PTR ds:0x429028,ecx
  405bce:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  405bd5:	xor    ecx,edi
  405bd7:	mov    eax,DWORD PTR [ebp-0x18]
  405bda:	mov    DWORD PTR ds:0x42d00c,0x18
  405be4:	cmp    DWORD PTR ds:0x42d00c,0x0
  405beb:	je     0x405c20
  405bf1:	cmp    DWORD PTR ds:0x42d00c,0x19
  405bf8:	jne    0x405c0e
  405bfe:	push   0x42e044
  405c03:	push   0x42e143
  405c08:	call   DWORD PTR ds:0x42ed3d
  405c0e:	mov    ecx,DWORD PTR ds:0x42d00c
  405c14:	dec    ecx
  405c15:	mov    DWORD PTR ds:0x42d00c,ecx
  405c1b:	jmp    0x405be4
  405c20:	mov    ecx,DWORD PTR [ebp-0x18]
  405c23:	sub    eax,ecx
  405c25:	sbb    DWORD PTR ds:0x429014,ebx
  405c2b:	mov    DWORD PTR [ebp-0x18],eax
  405c2e:	mov    DWORD PTR ds:0x42900c,0x1b
  405c38:	cmp    DWORD PTR ds:0x42900c,0x0
  405c3f:	je     0x405c8d
  405c45:	cmp    DWORD PTR ds:0x42900c,0x6
  405c4c:	jne    0x405c61
  405c52:	push   DWORD PTR [ebp-0x14]
  405c55:	push   DWORD PTR [ebp-0x18]
  405c58:	push   DWORD PTR [ebp-0x18]
  405c5b:	call   DWORD PTR ds:0x42ed41
  405c61:	cmp    DWORD PTR ds:0x42900c,0x7
  405c68:	jne    0x405c7b
  405c6e:	mov    ecx,DWORD PTR ds:0x42900c
  405c74:	dec    ecx
  405c75:	mov    DWORD PTR ds:0x42900c,ecx
  405c7b:	mov    ecx,DWORD PTR ds:0x42900c
  405c81:	dec    ecx
  405c82:	mov    DWORD PTR ds:0x42900c,ecx
  405c88:	jmp    0x405c38
  405c8d:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  405c94:	and    DWORD PTR ds:0x42a010,0x0
  405c9e:	jmp    0x405cb2
  405ca3:	xor    ecx,ecx
  405ca5:	or     ecx,DWORD PTR ds:0x42a010
  405cab:	inc    ecx
  405cac:	mov    DWORD PTR ds:0x42a010,ecx
  405cb2:	cmp    DWORD PTR ds:0x42a010,0x1c
  405cb9:	jae    0x405ce4
  405cbf:	cmp    DWORD PTR ds:0x42a010,0x24
  405cc6:	jne    0x405cdf
  405ccc:	push   DWORD PTR [ebp-0xc]
  405ccf:	push   0x429020
  405cd4:	push   0x5eed
  405cd9:	call   DWORD PTR ds:0x42ed45
  405cdf:	jmp    0x405ca3
  405ce4:	mov    eax,DWORD PTR [ebp-0xc]
  405ce7:	mov    ecx,DWORD PTR [ebp-0xc]
  405cea:	sub    eax,ecx
  405cec:	mov    DWORD PTR [ebp-0xc],eax
  405cef:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  405cf6:	jmp    0x40804a
  405cfb:	pop    ebp
  405cfc:	sbb    dl,0x8b
  405cff:	fwait
  405d00:	jnp    0x405d0f
  405d02:	mov    al,BYTE PTR [edx+0x49]
  405d05:	scas   al,BYTE PTR es:[edi]
  405d06:	xor    eax,0xdba04718
  405d0b:	dec    ecx
  405d0c:	pop    edi
  405d0d:	js     0x405d87
  405d0f:	xor    ebx,DWORD PTR [edi+0x78]
  405d12:	js     0x405d84
  405d14:	or     DWORD PTR [edi-0xa],ebp
  405d17:	stos   DWORD PTR es:[edi],eax
  405d18:	mov    ch,0x5b
  405d1a:	mov    DWORD PTR [ecx+0x1d],ecx
  405d1d:	sar    DWORD PTR [ebx+ebp*2-0x60a00782],1
  405d24:	xchg   ebp,eax
  405d25:	and    bh,0x21
  405d28:	pop    ebp
  405d29:	jmp    0xd1aa:0x81f391f8
  405d30:	adc    al,0x81
  405d32:	mov    dl,BYTE PTR [eax+0x43]
  405d35:	sbb    al,0xe5
  405d37:	xor    DWORD PTR [edx+0x59],edx
  405d3a:	push   ecx
  405d3b:	push   ds
  405d3c:	mov    edx,0xc1f19d5a
  405d41:	in     eax,0x83
  405d43:	jne    0x405d55
  405d45:	push   edx
  405d46:	(bad)  
  405d47:	xor    DWORD PTR [ecx-0x4b],edx
  405d4a:	xchg   esi,ecx
  405d4c:	sub    BYTE PTR [esp+edx*8],ch
  405d4f:	mov    ah,0xf6
  405d51:	ins    DWORD PTR es:[edi],dx
  405d52:	and    BYTE PTR [esi-0x39],cl
  405d55:	xor    cl,BYTE PTR [edx+0x47]
  405d58:	mov    eax,ds:0x7f9560ac
  405d5d:	clc    
  405d5e:	jle    0x405d60
  405d60:	add    BYTE PTR [ecx],bh
  405d62:	mov    ecx,DWORD PTR [edi+0x7d]
  405d65:	repz ja 0x405ddc
  405d68:	ds repz or eax,0x55b6d28d
  405d6f:	adc    BYTE PTR [esi],ah
  405d71:	jecxz  0x405dba
  405d73:	sub    DWORD PTR [edi],edi
  405d75:	fidiv  DWORD PTR [eax]
  405d77:	xor    edx,DWORD PTR [edi+0x74]
  405d7a:	stos   DWORD PTR es:[edi],eax
  405d7b:	sub    dh,bl
  405d7d:	movhps xmm6,QWORD PTR [edx+0x6bf18bf3]
  405d84:	xor    BYTE PTR [edx+0x67440bde],0x6b
  405d8b:	daa    
  405d8c:	dec    esi
  405d8d:	cmp    BYTE PTR [edi+0x33],bl
  405d90:	retf   
  405d91:	(bad)  
  405d93:	push   ebx
  405d94:	xchg   edi,eax
  405d95:	jmp    0x9f10:0xcfe45b38
  405d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d9d:	sub    BYTE PTR [esp-0x39096902],dh
  405da4:	cwde   
  405da5:	int3   
  405da6:	mov    esp,0x59397b21
  405dab:	mov    edx,0x8cb5f0a8
  405db0:	jno    0x405d3d
  405db2:	xchg   esp,eax
  405db3:	mov    edi,0x28be0e2e
  405db8:	jg     0x405d3b
  405dba:	std    
  405dbb:	adc    ch,dh
  405dbd:	xor    ebp,esi
  405dbf:	xchg   esp,eax
  405dc0:	(bad)  
  405dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dc2:	mov    edx,0x661dc738
  405dc7:	add    DWORD PTR [ecx-0x59],edi
  405dca:	pop    es
  405dcb:	add    ecx,DWORD PTR [ebx]
  405dcd:	popa   
  405dce:	loop   0x405e30
  405dd0:	add    ah,BYTE PTR [ebp+0x4c]
  405dd3:	(bad)  [ecx+0x3624f378]
  405dd9:	sub    DWORD PTR [ebx],0x5d
  405ddc:	sbb    al,0xda
  405dde:	aam    0xd1
  405de0:	jge    0x405d62
  405de2:	ins    DWORD PTR es:[edi],dx
  405de3:	mov    eax,ds:0xe7b3f3c3
  405de8:	xor    al,0xf2
  405dea:	inc    esi
  405deb:	outs   dx,BYTE PTR ds:[esi]
  405dec:	mov    cl,0xa
  405dee:	cmp    al,0x37
  405df0:	sub    al,0xa0
  405df2:	dec    edi
  405df3:	pop    edx
  405df4:	(bad)  
  405df5:	loop   0x405dfa
  405df7:	mov    cl,BYTE PTR [bx+di-0x4f41]
  405dfc:	pop    ebp
  405dfd:	ret    
  405dfe:	call   0x45eb:0x46483a5d
  405e05:	icebp  
  405e06:	mov    ch,0xe6
  405e08:	jns    0x405e1c
  405e0a:	ins    BYTE PTR es:[edi],dx
  405e0b:	jle    0x405e54
  405e0d:	faddp  st(5),st
  405e0f:	nop
  405e10:	pop    edi
  405e11:	mov    esi,0x654733b3
  405e16:	dec    ebx
  405e17:	inc    edx
  405e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e19:	(bad)  
  405e1a:	sbb    al,0x2c
  405e1c:	ret    
  405e1d:	int    0x89
  405e1f:	sub    BYTE PTR [ecx],ch
  405e21:	(bad)  
  405e23:	sbb    bl,0x3e
  405e26:	sub    edx,ecx
  405e28:	xchg   edi,eax
  405e29:	adc    DWORD PTR [ebx+0x3b3126cd],esp
  405e2f:	dec    ebx
  405e30:	cmp    al,BYTE PTR [edi-0x5947a62c]
  405e36:	pusha  
  405e37:	jbe    0x405e05
  405e39:	pop    ds
  405e3a:	mov    dl,0xf3
  405e3c:	in     eax,dx
  405e3d:	mov    al,0x88
  405e3f:	sub    al,bh
  405e41:	mov    eax,ds:0xa600993c
  405e46:	int3   
  405e47:	add    cl,BYTE PTR [ecx-0x60]
  405e4a:	or     al,0x6b
  405e4c:	push   0x607c0443
  405e51:	pop    eax
  405e52:	push   ebx
  405e53:	cmp    bl,BYTE PTR [eax+0x6b]
  405e56:	mov    ch,dl
  405e58:	mov    edi,0x88bc94df
  405e5d:	call   0xe7fd:0xe4632376
  405e64:	pop    es
  405e65:	sub    al,0x51
  405e67:	fbld   TBYTE PTR [ebx+0x3de85d7]
  405e6d:	jmp    0xd0b:0x761f44d3
  405e74:	and    eax,0x871b8c6a
  405e79:	mov    eax,ds:0x1c70aa2d
  405e7e:	fnstsw WORD PTR [eax]
  405e80:	inc    esp
  405e81:	and    BYTE PTR [ebp-0x4d],dl
  405e84:	frstor [esi]
  405e86:	jmp    0xe68:0x6db1827e
  405e8d:	xor    esi,eax
  405e8f:	cdq    
  405e90:	inc    esp
  405e91:	adc    DWORD PTR [esi-0x7c06ca7f],ebx
  405e97:	pusha  
  405e98:	outs   dx,BYTE PTR ds:[esi]
  405e99:	mov    ebx,0x9cb0e6db
  405e9e:	bound  ebp,QWORD PTR [ebx]
  405ea0:	test   BYTE PTR [edx-0x3035aa0c],dl
  405ea6:	sbb    al,0xad
  405ea8:	inc    ebp
  405ea9:	scas   eax,DWORD PTR es:[edi]
  405eaa:	mov    DWORD PTR [ebx-0x1e72c644],ebp
  405eb0:	pop    edx
  405eb1:	add    eax,DWORD PTR [edx]
  405eb3:	ja     0x405ebb
  405eb5:	mov    ss,edx
  405eb7:	cmp    eax,0x7988b3c0
  405ebc:	add    al,0xba
  405ebe:	lods   eax,DWORD PTR ds:[esi]
  405ebf:	mov    al,0xed
  405ec1:	or     al,ch
  405ec3:	mov    al,0x29
  405ec5:	test   eax,0x5558985a
  405eca:	rcr    DWORD PTR [ebx+0x3e],1
  405ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ece:	leave  
  405ecf:	jp     0x405f09
  405ed1:	add    bl,BYTE PTR [esi-0x73]
  405ed4:	add    eax,0x3ee9d7b2
  405ed9:	push   cs
  405eda:	ds aas 
  405edc:	(bad)  
  405edd:	jecxz  0x405eba
  405edf:	mov    ds,ecx
  405ee1:	ss push eax
  405ee3:	shr    BYTE PTR [edx-0x7be9e6],0xb7
  405eea:	ss int3 
  405eec:	les    ebx,FWORD PTR [eax+edx*8-0x70962f6a]
  405ef3:	push   edx
  405ef4:	in     eax,dx
  405ef5:	jb     0x405eb6
  405ef7:	jno    0x405f05
  405ef9:	inc    esp
  405efa:	push   ecx
  405efb:	ss inc ecx
  405efd:	jno    0x405eef
  405eff:	mov    eax,ds:0x4b22fb66
  405f04:	sub    si,WORD PTR [ebx-0x18]
  405f08:	int3   
  405f09:	mov    esi,0x740ceb80
  405f0e:	jmp    0x67173acd
  405f13:	push   cs
  405f14:	push   eax
  405f15:	cmp    cl,bh
  405f17:	retf   0xd919
  405f1a:	push   eax
  405f1b:	mov    al,0xd9
  405f1d:	lods   al,BYTE PTR ds:[esi]
  405f1e:	jo     0x405eb2
  405f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f21:	aad    0x37
  405f23:	adc    eax,edx
  405f25:	stos   DWORD PTR es:[edi],eax
  405f26:	mov    ebp,0x305051bc
  405f2b:	jnp    0x405f1c
  405f2d:	mov    ebp,0xe286bd9f
  405f32:	aad    0x75
  405f34:	mov    eax,ds:0x3f94b08b
  405f39:	je     0x405efd
  405f3b:	inc    edi
  405f3c:	and    BYTE PTR [ecx-0x34],bl
  405f3f:	add    BYTE PTR [ebx+0x4f4625ea],bl
  405f45:	xlat   BYTE PTR ds:[ebx]
  405f46:	cmp    ah,BYTE PTR [edi+0x1ea8ccf0]
  405f4c:	xchg   edi,eax
  405f4d:	push   cs
  405f4e:	cld    
  405f4f:	ss popf 
  405f51:	ins    DWORD PTR es:[edi],dx
  405f52:	adc    edx,esi
  405f54:	mov    eax,ds:0xb215189e
  405f59:	jmp    0x67314f5a
  405f5e:	dec    esp
  405f5f:	add    DWORD PTR [edi+ebp*1+0xe],ebp
  405f63:	aam    0x73
  405f65:	mov    cl,0x6b
  405f67:	sbb    DWORD PTR [ebx+0x72ce7a73],edi
  405f6d:	outs   dx,DWORD PTR ds:[esi]
  405f6e:	sub    al,0xc4
  405f70:	ds push cs
  405f72:	push   edx
  405f73:	adc    DWORD PTR [edx-0x12],ebp
  405f76:	lock mov eax,ds:0xfe42086c
  405f7c:	ret    
  405f7d:	std    
  405f7e:	pop    ebx
  405f7f:	dec    esp
  405f80:	adc    BYTE PTR [edx],al
  405f82:	test   DWORD PTR [ecx],ebp
  405f84:	nop
  405f85:	and    cl,dh
  405f87:	inc    eax
  405f88:	cli    
  405f89:	jge    0x405fac
  405f8b:	addr16 inc eax
  405f8d:	aam    0x6e
  405f8f:	jo     0x405f53
  405f91:	iret   
  405f92:	add    eax,DWORD PTR [edi-0x4fa3754]
  405f98:	ret    
  405f99:	mov    dh,BYTE PTR [edx+0x1b]
  405f9c:	cmp    DWORD PTR [edx+eiz*1-0x26ce11da],ecx
  405fa3:	ja     0x405f3e
  405fa5:	mov    es,WORD PTR [eax+edi*1]
  405fa8:	add    ah,0xe6
  405fab:	xchg   ebx,eax
  405fac:	pop    bx
  405fae:	ror    esp,cl
  405fb0:	mov    ebp,DWORD PTR [edx+0x48]
  405fb3:	punpckhwd mm5,mm3
  405fb6:	mov    al,0xb9
  405fb8:	xchg   DWORD PTR [edi+edx*2],edi
  405fbb:	mov    dh,0x96
  405fbd:	arpl   WORD PTR [esi+0x3d],si
  405fc0:	xchg   BYTE PTR ds:0x1a22a583,cl
  405fc6:	xchg   edx,esi
  405fc8:	scas   al,BYTE PTR es:[edi]
  405fc9:	xor    eax,0x829355ff
  405fce:	push   0x8
  405fd0:	dec    ebp
  405fd1:	mov    edi,DWORD PTR [esi-0xe]
  405fd4:	and    bl,BYTE PTR [esi-0x58c984a3]
  405fda:	xchg   BYTE PTR [eax+0x4],bh
  405fdd:	add    eax,0xb1e02472
  405fe2:	adc    al,0x1
  405fe4:	lods   eax,DWORD PTR ds:[esi]
  405fe5:	fcom   DWORD PTR [ecx-0x7ad9271b]
  405feb:	das    
  405fec:	mov    edi,esi
  405fee:	pop    edi
  405fef:	push   edi
  405ff0:	xlat   BYTE PTR ds:[ebx]
  405ff1:	mov    ebp,0x5f105fc2
  405ff6:	sbb    al,0x13
  405ff8:	mov    cl,0xc3
  405ffa:	lods   al,BYTE PTR ds:[esi]
  405ffc:	shl    DWORD PTR [ebx+edx*2],0x4b
  406000:	clc    
  406001:	cmp    al,0xad
  406003:	sbb    BYTE PTR [eax],ch
  406005:	leave  
  406006:	jg     0x405fbe
  406008:	fidiv  DWORD PTR [esi+0x53]
  40600b:	in     al,dx
  40600c:	sti    
  40600d:	add    al,0x56
  40600f:	and    esp,esi
  406011:	lds    ebp,FWORD PTR [esp+ebx*1+0x8fd8d5c]
  406018:	scas   eax,DWORD PTR es:[edi]
  406019:	out    0x7c,eax
  40601b:	or     BYTE PTR [ecx+0x6fd7812b],al
  406021:	inc    esi
  406022:	nop
  406023:	push   ss
  406024:	mov    al,0x3a
  406026:	iret   
  406027:	jno    0x4060a4
  406029:	push   esp
  40602a:	xor    eax,0x9f1f97e5
  40602f:	int    0xbc
  406031:	mov    edx,0xa8b58e4b
  406036:	in     al,dx
  406037:	jo     0x4060af
  406039:	(bad)  
  40603a:	dec    ebp
  40603b:	mov    esp,0x44f330f6
  406040:	and    esi,esi
  406042:	fstp   DWORD PTR ds:0x36a326c1
  406048:	dec    ebx
  406049:	in     eax,0x83
  40604b:	xchg   ecx,eax
  40604c:	xchg   edx,eax
  40604d:	lods   al,BYTE PTR ds:[esi]
  40604e:	push   ss
  40604f:	pusha  
  406050:	ins    BYTE PTR es:[edi],dx
  406051:	je     0x40603a
  406053:	cmc    
  406054:	jecxz  0x406021
  406056:	(bad)  
  406057:	mov    DWORD PTR [esi+eiz*8-0x17cf486c],0xd28582c9
  406062:	cmp    esp,esi
  406064:	cmp    eax,0xb937fc12
  40606a:	cmp    eax,DWORD PTR [ecx-0x32]
  40606d:	scas   al,BYTE PTR es:[edi]
  40606e:	in     eax,dx
  40606f:	pop    edi
  406070:	mov    ch,0x91
  406072:	dec    eax
  406073:	xor    DWORD PTR [esi],esp
  406075:	inc    edi
  406076:	mov    bl,0xfb
  406078:	inc    edx
  406079:	xchg   ecx,eax
  40607a:	push   esi
  40607b:	and    al,BYTE PTR [edx+0x351de036]
  406081:	jg     0x406016
  406083:	and    ebp,DWORD PTR [eax+0x18]
  406086:	aaa    
  406087:	(bad)  
  406088:	push   cs
  406089:	pop    ecx
  40608a:	pop    ebp
  40608b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40608c:	pop    esp
  40608d:	in     al,0x31
  40608f:	aam    0x70
  406091:	inc    esp
  406092:	dec    ecx
  406093:	push   eax
  406094:	clc    
  406095:	jae    0x406023
  406097:	jmp    0x4060a2
  406099:	jmp    0x4d0ca37
  40609e:	push   ds
  40609f:	scas   al,BYTE PTR es:[edi]
  4060a0:	dec    eax
  4060a1:	and    al,0x70
  4060a3:	out    dx,eax
  4060a4:	xor    bh,BYTE PTR [edi]
  4060a6:	pop    ss
  4060a7:	int    0x7
  4060a9:	sbb    al,0x89
  4060ab:	aas    
  4060ac:	sbb    al,0x1f
  4060ae:	mov    ebp,0xf117a377
  4060b3:	cmp    cl,BYTE PTR [esp+0x7]
  4060b7:	sbb    al,0x36
  4060b9:	push   0xffffffae
  4060bb:	jge    0x406111
  4060bd:	pop    edi
  4060be:	mov    esp,0xf4728f6e
  4060c3:	xor    BYTE PTR [edx],0xd8
  4060c6:	ror    DWORD PTR [ebp-0x57],0x31
  4060ca:	pushf  
  4060cb:	pop    DWORD PTR [eax-0x13]
  4060ce:	dec    esp
  4060cf:	add    DWORD PTR [esi],ecx
  4060d1:	dec    esi
  4060d2:	mov    esi,DWORD PTR [ecx]
  4060d4:	call   0xa623683f
  4060d9:	in     eax,dx
  4060da:	sub    dl,BYTE PTR [edi+esi*2-0x68d00ac7]
  4060e1:	mov    BYTE PTR ds:[ecx+0x7d],dh
  4060e5:	loop   0x406111
  4060e7:	retf   0x9670
  4060ea:	aam    0xc7
  4060ec:	das    
  4060ed:	imul   ebx,DWORD PTR [eax],0xf
  4060f0:	scas   eax,DWORD PTR es:[edi]
  4060f1:	jl     0x406166
  4060f3:	mov    ah,0xbf
  4060f5:	add    DWORD PTR [edx+0x67852907],ebx
  4060fb:	and    DWORD PTR [ecx-0x4a219a24],eax
  406101:	jmp    0x8fd3:0x483cff16
  406108:	add    ecx,DWORD PTR [eax-0x382c9459]
  40610e:	in     al,dx
  40610f:	or     dl,BYTE PTR [ebx-0x204d6e0]
  406115:	dec    edi
  406116:	and    esi,DWORD PTR [eax]
  406118:	push   ebx
  406119:	out    0x20,al
  40611b:	pop    ss
  40611c:	iret   
  40611d:	stc    
  40611e:	inc    eax
  40611f:	inc    edi
  406120:	mov    ch,0x63
  406122:	outs   dx,BYTE PTR ds:[esi]
  406123:	lds    ebx,FWORD PTR [eax-0x15dd0105]
  406129:	std    
  40612a:	push   ebx
  40612b:	and    eax,0xef424c03
  406130:	fistp  QWORD PTR [eax+0x5e]
  406133:	inc    ebp
  406134:	jmp    0x40617e
  406136:	mov    esi,0x2940c4e0
  40613b:	fucomip st,st(3)
  40613d:	std    
  40613e:	clc    
  40613f:	(bad)
  406142:	adc    ch,cl
  406144:	dec    esi
  406145:	add    al,0xfa
  406147:	and    ah,BYTE PTR [esi]
  406149:	sub    al,0xb8
  40614b:	sbb    BYTE PTR [edi-0x3f],al
  40614e:	fbstp  TBYTE PTR ds:0x4d124d9a
  406154:	push   esi
  406155:	imul   edx,DWORD PTR [esi+0x4161a32f],0x768e16d8
  40615f:	jnp    0x4061a5
  406161:	mov    WORD PTR cs:[ebx+0x6c],fs
  406165:	out    dx,al
  406166:	leave  
  406167:	out    dx,al
  406168:	retf   0xda54
  40616b:	std    
  40616c:	xchg   esi,eax
  40616d:	jo     0x406170
  40616f:	data16 icebp 
  406171:	xchg   DWORD PTR [esi-0x1e91285a],esi
  406177:	dec    esp
  406178:	push   ds
  406179:	jb     0x4061c1
  40617b:	xor    al,0x56
  40617d:	adc    al,BYTE PTR [edx+0x3552cd1a]
  406183:	loop   0x4061ec
  406185:	cld    
  406186:	int3   
  406187:	dec    edi
  406188:	xor    ebp,DWORD PTR [eax]
  40618a:	xchg   ebp,eax
  40618b:	out    dx,eax
  40618c:	fwait
  40618d:	mov    bh,0xce
  40618f:	adc    BYTE PTR [eax-0x2b03ee7f],0x5
  406196:	push   ecx
  406197:	test   ebx,edx
  406199:	mov    DWORD PTR [ecx-0x121a63fc],edi
  40619f:	add    ah,bh
  4061a1:	pop    edi
  4061a2:	mov    BYTE PTR [ebp+eiz*2+0x54],cl
  4061a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061a7:	jne    0x4061ad
  4061a9:	mov    bh,bh
  4061ab:	sbb    eax,0x960eaf8e
  4061b0:	or     DWORD PTR [ecx],eax
  4061b2:	jae    0x40619f
  4061b4:	push   ss
  4061b5:	or     DWORD PTR [esi],ebx
  4061b7:	addr16 das 
  4061b9:	adc    edi,DWORD PTR [ebp-0x5f]
  4061bc:	jno    0x4061eb
  4061be:	inc    esp
  4061bf:	mov    ds:0x762029db,eax
  4061c4:	push   edx
  4061c5:	sbb    BYTE PTR es:[edx-0x4ac09f4e],dh
  4061cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061cd:	pminsw mm1,QWORD PTR [esi]
  4061d0:	out    dx,eax
  4061d1:	mov    bl,0xe6
  4061d3:	shl    BYTE PTR [esp+eiz*4-0x6f3dbd2a],0xad
  4061db:	aas    
  4061dc:	mov    DWORD PTR [edi+ecx*8+0x2a],ebp
  4061e0:	sbb    bl,BYTE PTR [eax+ecx*1+0x3e65c06c]
  4061e7:	jle    0x406192
  4061e9:	add    cl,BYTE PTR [edi]
  4061eb:	jns    0x406264
  4061ed:	nop
  4061ee:	sbb    DWORD PTR [ebp-0x5eeed8d0],ecx
  4061f4:	mov    gs:0xb0137cb8,al
  4061fa:	shl    BYTE PTR [edx-0x16021ac3],1
  406200:	(bad)  
  406201:	jmp    0x4061aa
  406203:	add    eax,0x3848dba8
  406208:	xor    ebp,edi
  40620a:	sbb    eax,0xfe07c5a3
  40620f:	push   0xffffff9f
  406211:	aaa    
  406212:	mov    DWORD PTR [esi],ebx
  406214:	dec    esi
  406215:	popf   
  406216:	and    bl,ch
  406218:	call   DWORD PTR [ecx+edx*2-0x42ce6a3c]
  40621f:	push   0xffffff8b
  406221:	sub    BYTE PTR [edx],0x92
  406224:	and    ch,BYTE PTR [edi+0x774f57c8]
  40622a:	xchg   ecx,eax
  40622b:	enter  0x2190,0x53
  40622f:	mov    eax,ds:0x9ddbcd44
  406234:	imul   esi,DWORD PTR [edi+edi*8-0x1f],0x1fe81cc6
  40623c:	add    BYTE PTR [ebp-0x134f2f7f],ah
  406242:	and    al,0x45
  406244:	out    dx,al
  406245:	fadd   st(1),st
  406247:	je     0x4061da
  406249:	jge    0x406225
  40624b:	cmp    DWORD PTR [edx],eax
  40624d:	jnp    0x4061e2
  40624f:	pop    ebp
  406250:	add    cl,BYTE PTR [edx-0x4d]
  406253:	inc    ecx
  406254:	inc    ebp
  406255:	jae    0x40621d
  406257:	rcl    dl,0xc0
  40625a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40625b:	fisttp DWORD PTR ds:0xdf8b7420
  406261:	mov    WORD PTR [eax],ss
  406263:	shl    DWORD PTR [ebp-0xb],cl
  406266:	add    dh,BYTE PTR [ecx-0xef5bed8]
  40626c:	lock push ebp
  40626e:	adc    dh,0xcf
  406271:	cwde   
  406272:	mov    esp,0xc12b88ea
  406277:	(bad)  
  406278:	mov    ds:0x3c1ec163,al
  40627d:	fmul   QWORD PTR [eax+esi*2+0x5a]
  406281:	fsubr  st,st(5)
  406283:	pop    ebp
  406284:	pop    ecx
  406285:	xchg   edi,eax
  406286:	mov    al,0x3b
  406288:	rcl    BYTE PTR [edi-0x5f],0x2
  40628c:	into   
  40628d:	jp     0x40630b
  40628f:	outs   dx,DWORD PTR ds:[esi]
  406290:	int3   
  406291:	(bad)  
  406292:	clc    
  406293:	in     eax,dx
  406294:	(bad)  
  406295:	fdivr  DWORD PTR [edi+eax*4-0x3ce7e9c1]
  40629c:	jmp    0xf67afd31
  4062a1:	aaa    
  4062a2:	mov    bl,0x67
  4062a4:	cdq    
  4062a5:	int    0xa4
  4062a7:	popa   
  4062a8:	sub    DWORD PTR [eax+0x5cc38e99],esi
  4062ae:	mov    ebx,0x61a93b55
  4062b3:	push   cs
  4062b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062b5:	je     0x4062f7
  4062b7:	and    al,0xa6
  4062b9:	adc    dl,BYTE PTR [edx-0x10ae8ccd]
  4062bf:	pop    ds
  4062c0:	push   ds
  4062c1:	jecxz  0x4062b4
  4062c3:	mov    ds:0x97dff9a1,al
  4062c8:	push   eax
  4062c9:	xchg   esp,eax
  4062ca:	inc    edi
  4062cb:	fdivp  st(0),st
  4062cd:	fwait
  4062ce:	not    BYTE PTR [ebp-0x5b]
  4062d1:	mov    esp,0x350fc457
  4062d6:	sub    DWORD PTR [esi-0x34],esp
  4062d9:	cmp    BYTE PTR [esi+ebx*8+0x37],cl
  4062dd:	adc    ecx,ebp
  4062df:	xchg   ebx,eax
  4062e0:	add    eax,0x761f2842
  4062e5:	pop    ds
  4062e6:	push   es
  4062e7:	jns    0x406327
  4062e9:	adc    eax,0x133c6d5b
  4062ee:	push   ebx
  4062ef:	sub    al,0xd3
  4062f1:	scas   eax,DWORD PTR es:[edi]
  4062f2:	pop    edi
  4062f3:	daa    
  4062f4:	ret    
  4062f5:	int3   
  4062f6:	out    0x7b,eax
  4062f8:	jl     0x40633e
  4062fa:	jle    0x40634a
  4062fc:	fmul   QWORD PTR [ecx]
  4062fe:	(bad)  
  406300:	cmp    eax,0x4f3d5c00
  406305:	dec    esp
  406306:	cmp    DWORD PTR [eax-0x76],eax
  406309:	je     0x4062b6
  40630b:	sbb    esi,ebx
  40630d:	in     al,0xb3
  40630f:	(bad)  
  406312:	mov    cl,0x7c
  406314:	adc    dh,ch
  406316:	mov    ds:0xbc4a0280,eax
  40631b:	test   eax,0xe07a0622
  406320:	cmp    BYTE PTR [edx],ah
  406322:	sar    DWORD PTR [ecx+0x34],0xf
  406326:	adc    eax,0xb5185650
  40632b:	mov    ah,0x74
  40632d:	mov    ch,0x58
  40632f:	mov    al,ds:0xdcba2d70
  406334:	(bad)  [esi]
  406336:	call   0xa3d3:0x2fae4f97
  40633d:	bound  ebp,QWORD PTR [ebx]
  40633f:	mov    ebp,0x5084c52e
  406344:	leave  
  406345:	repz lahf 
  406347:	push   0xff46dc2c
  40634c:	adc    esi,DWORD PTR [esi]
  40634e:	jbe    0x4063cb
  406350:	ins    BYTE PTR es:[edi],dx
  406351:	add    cl,BYTE PTR [ebx+ebx*4]
  406354:	lea    eax,[eax-0x7479d14a]
  40635a:	xchg   esi,eax
  40635b:	inc    esp
  40635c:	arpl   WORD PTR [edx-0xbb40c90],si
  406362:	(bad)  [esi]
  406364:	scas   eax,DWORD PTR es:[edi]
  406365:	stc    
  406366:	jnp    0x4063c4
  406368:	pusha  
  406369:	fst    DWORD PTR [esi+0x2b]
  40636c:	fs xchg ecx,eax
  40636e:	aam    0xde
  406370:	cmp    BYTE PTR [eax+edx*4+0x5e],ch
  406374:	dec    ebx
  406375:	daa    
  406376:	mov    al,ds:0x714bff60
  40637b:	mov    cl,0x40
  40637d:	pop    esi
  40637e:	int    0x29
  406380:	inc    esp
  406381:	test   al,0xc0
  406383:	jne    0x4063c6
  406385:	and    DWORD PTR [ebp-0x6d8e6f5a],edi
  40638b:	cdq    
  40638c:	push   edi
  40638d:	(bad)  
  40638e:	loopne 0x406363
  406390:	and    ch,bl
  406392:	xchg   ecx,eax
  406393:	push   0xedc4a0ea
  406398:	cdq    
  406399:	fld    TBYTE PTR [ebp-0x5d]
  40639c:	mov    ch,0x48
  40639e:	pop    esi
  40639f:	stos   DWORD PTR es:[edi],eax
  4063a0:	pop    esi
  4063a1:	pop    ds
  4063a2:	addr16 out 0xa2,al
  4063a5:	mov    bh,0x3b
  4063a7:	shr    BYTE PTR [eax+edx*4+0x3eb65d0a],0xb2
  4063af:	or     bl,al
  4063b1:	and    al,0xe8
  4063b3:	ficomp WORD PTR [eax+0x3adb2a0f]
  4063b9:	dec    ecx
  4063ba:	jae    0x40642b
  4063bc:	jmp    0xb6cb:0xa02c2462
  4063c3:	push   ecx
  4063c4:	ja     0x406411
  4063c6:	mov    bh,0x5b
  4063c8:	push   cs
  4063c9:	in     al,0xd8
  4063cb:	pop    esp
  4063cc:	pop    eax
  4063cd:	les    ecx,FWORD PTR [ecx+0x29]
  4063d0:	xor    esp,ecx
  4063d2:	mov    eax,0x99634236
  4063d7:	push   ebx
  4063d8:	arpl   WORD PTR [ecx-0x27da8add],cx
  4063de:	dec    esi
  4063df:	cdq    
  4063e0:	sbb    eax,0x1ad7863c
  4063e5:	out    dx,al
  4063e6:	lahf   
  4063e7:	cmp    DWORD PTR [eax-0x7b35e61a],esp
  4063ed:	or     cl,ah
  4063ef:	push   esi
  4063f0:	cdq    
  4063f1:	icebp  
  4063f2:	inc    eax
  4063f3:	mov    cs,WORD PTR [ecx]
  4063f5:	push   esp
  4063f6:	pushf  
  4063f7:	lahf   
  4063f8:	or     ch,dh
  4063fa:	dec    ebp
  4063fb:	sbb    esi,DWORD PTR [ebp+0x3c143f2f]
  406401:	lods   al,BYTE PTR ds:[esi]
  406402:	cdq    
  406403:	lea    edi,[edx+0x59]
  406406:	leave  
  406407:	mov    ah,0x97
  406409:	push   ds
  40640a:	adc    al,0x79
  40640c:	or     ch,dh
  40640e:	mov    ds,WORD PTR [eax+0x7c]
  406411:	pop    ebx
  406412:	pop    ss
  406413:	mov    ecx,0x539d9e2f
  406418:	cmc    
  406419:	xor    ebp,DWORD PTR ds:0xd9ed1edb
  40641f:	xchg   edi,eax
  406420:	push   ds
  406421:	aaa    
  406422:	int3   
  406423:	in     eax,0x4b
  406425:	or     BYTE PTR [ebx+0x2],ch
  406428:	(bad)  
  406429:	cmp    al,0xb8
  40642b:	jl     0x49f935e1
  406431:	add    eax,0x599cfc2e
  406436:	sbb    eax,0x67a620cc
  40643b:	stos   DWORD PTR es:[edi],eax
  40643c:	adc    eax,0x688fd83c
  406441:	sbb    eax,0xcd71d0a2
  406446:	dec    ebp
  406447:	es jno 0x4063cb
  40644a:	ins    DWORD PTR es:[edi],dx
  40644b:	or     al,cl
  40644d:	ja     0x4064a9
  40644f:	sub    DWORD PTR [ebx-0x26548ecb],eax
  406455:	and    al,0x33
  406457:	dec    esp
  406458:	mov    al,ds:0xe01c2b65
  40645d:	(bad)  
  40645e:	neg    BYTE PTR [ebx-0x2c]
  406461:	aas    
  406462:	js     0x4064c8
  406464:	lds    esp,FWORD PTR [edi+ebx*4-0x23]
  406468:	sbb    BYTE PTR [edi+0x34],al
  40646b:	cmp    BYTE PTR [eax],ch
  40646d:	rol    BYTE PTR [edx-0x6d89d701],0xaf
  406474:	mov    ebx,0x82f36108
  406479:	xor    eax,0x18b876ea
  40647e:	inc    esi
  40647f:	imul   esi,edx,0xfffffff8
  406482:	mov    edi,0xfc67bbef
  406487:	xor    eax,0xe694adf3
  40648c:	call   0x6e0cf78
  406491:	iret   
  406492:	mov    edx,0x2e915847
  406497:	mov    bh,dl
  406499:	sub    eax,0x79155f60
  40649e:	rol    BYTE PTR [eax+0x31],cl
  4064a1:	cs scas al,BYTE PTR es:[edi]
  4064a3:	mov    bh,0x1f
  4064a5:	push   edi
  4064a6:	lods   eax,DWORD PTR ds:[esi]
  4064a7:	jno    0x40643c
  4064a9:	inc    eax
  4064aa:	in     al,dx
  4064ab:	cmc    
  4064ac:	sbb    DWORD PTR [edx],edi
  4064ae:	mov    dh,0x16
  4064b0:	cmc    
  4064b1:	ins    DWORD PTR es:[edi],dx
  4064b2:	imul   ecx,DWORD PTR [ebx-0x663b85b5],0x43c91bb1
  4064bc:	jo     0x4064a7
  4064be:	fst    QWORD PTR [edi+0x10496d3c]
  4064c4:	mov    edx,0xef06b539
  4064c9:	jge    0x40647a
  4064cb:	cwde   
  4064cc:	stc    
  4064cd:	xor    DWORD PTR [esi-0x76d5a63c],0x44
  4064d4:	mov    eax,ds:0x73100b4a
  4064d9:	dec    edi
  4064da:	jecxz  0x406464
  4064dc:	jmp    0x406540
  4064de:	retf   0xf9ee
  4064e1:	pop    esp
  4064e2:	xchg   dl,bl
  4064e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e5:	out    0xca,eax
  4064e7:	xchg   DWORD PTR [edi-0x2e5761db],edi
  4064ed:	mov    al,ds:0xf9c398e3
  4064f2:	mov    BYTE PTR [ecx-0x4561a9d9],dl
  4064f8:	bound  ebx,QWORD PTR [ebp+0x1d31f12c]
  4064fe:	and    ebx,DWORD PTR es:[ebp+0x5b5dee92]
  406505:	cmp    eax,0xde5c0ae0
  40650a:	jo     0x4064d1
  40650c:	pop    esi
  40650d:	test   BYTE PTR [edx-0x3a],ah
  406510:	in     eax,dx
  406511:	cmp    ebx,DWORD PTR [ecx-0x76]
  406514:	loopne 0x406524
  406516:	(bad)  
  406517:	lea    edx,[edx+0x6caa25fe]
  40651d:	dec    eax
  40651e:	aam    0xc7
  406520:	jb     0x406555
  406522:	shr    BYTE PTR [eax+ecx*8-0x49a69d66],0xab
  40652a:	and    al,0xc6
  40652c:	and    DWORD PTR [esi+ebp*2+0x110f277f],esi
  406533:	and    ah,ch
  406535:	mov    al,ds:0x609e9068
  40653a:	int3   
  40653b:	dec    eax
  40653c:	out    dx,al
  40653d:	leave  
  40653e:	sub    eax,0x364f46f4
  406543:	dec    ebp
  406544:	out    dx,al
  406545:	or     al,BYTE PTR ds:0xa4841a37
  40654b:	xchg   esp,eax
  40654c:	repnz mov esp,0x6c799126
  406552:	jp     0x4064de
  406554:	xor    dl,ah
  406556:	xlat   BYTE PTR ds:[ebx]
  406557:	pop    ebx
  406558:	mov    cl,0x1
  40655a:	mov    fs,WORD PTR ds:0x73fd05d9
  406560:	and    al,0x77
  406562:	pushf  
  406563:	pop    ss
  406564:	fdivp  st(4),st
  406566:	fsub   QWORD PTR [esi*8-0x3adaeee]
  40656d:	aas    
  40656e:	mov    edx,DWORD PTR [edi-0x24]
  406571:	ret    
  406572:	pop    ebx
  406573:	dec    eax
  406574:	dec    edi
  406575:	ds pop esp
  406577:	sbb    eax,0x58811a2b
  40657c:	loop   0x406563
  40657e:	mov    db6,eax
  406581:	(bad)  
  406582:	inc    edi
  406583:	push   edx
  406584:	jl     0x406509
  406586:	fcmovbe st,st(5)
  406588:	xchg   esp,eax
  406589:	and    DWORD PTR [ecx-0x1c],ebx
  40658c:	loop   0x40659b
  40658e:	int3   
  40658f:	nop
  406590:	sbb    BYTE PTR [eax+0x5e],ah
  406593:	(bad)  
  406594:	mov    eax,0xddb904d7
  406599:	jnp    0x4065c8
  40659b:	inc    eax
  40659c:	iret   
  40659d:	iret   
  40659e:	push   es
  40659f:	adc    edi,DWORD PTR [ecx-0x2e977b91]
  4065a5:	lods   eax,DWORD PTR ds:[esi]
  4065a6:	dec    esp
  4065a7:	sahf   
  4065a8:	xchg   esi,eax
  4065a9:	std    
  4065aa:	dec    ecx
  4065ab:	rol    BYTE PTR [eax+0x14],1
  4065ae:	xor    edi,DWORD PTR [edx+0xf7a36d1]
  4065b4:	add    DWORD PTR [esi],esi
  4065b6:	dec    esi
  4065b7:	imul   esi,DWORD PTR [ecx+0x4a9cb9d9],0xf3788b5
  4065c1:	add    cl,BYTE PTR [edx-0x1]
  4065c4:	lods   eax,DWORD PTR ds:[esi]
  4065c5:	int3   
  4065c6:	imul   edi,DWORD PTR [edx+0x14],0xb2b1c738
  4065cd:	xor    BYTE PTR [eax-0x3c2ae8fe],al
  4065d3:	test   al,0xd1
  4065d5:	fcomp  st(7)
  4065d7:	jno    0x4065a7
  4065d9:	fsubp  st(5),st
  4065db:	dec    ebp
  4065dc:	dec    edx
  4065dd:	lock push edx
  4065df:	adc    dh,al
  4065e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065e2:	pop    esi
  4065e3:	or     eax,0x56fd7eb3
  4065e8:	sub    BYTE PTR [esi-0x1cbd4ebe],cl
  4065ee:	fwait
  4065ef:	loopne 0x406615
  4065f1:	dec    esi
  4065f2:	xor    esp,DWORD PTR [esi+0x6]
  4065f5:	stos   DWORD PTR es:[edi],eax
  4065f6:	or     DWORD PTR [ebx+ebx*8],0x88c69408
  4065fd:	jnp    0x4065b4
  4065ff:	sahf   
  406600:	aas    
  406601:	push   es
  406602:	push   ecx
  406603:	and    eax,0x961a2324
  406608:	add    esp,DWORD PTR [edx]
  40660a:	sti    
  40660b:	lods   al,BYTE PTR ds:[esi]
  40660c:	das    
  40660d:	mov    esp,0x5e5472ba
  406612:	xor    ah,al
  406614:	popa   
  406615:	sub    eax,DWORD PTR [eax-0x5f739e79]
  40661b:	xchg   edi,eax
  40661c:	pop    ds
  40661d:	nop
  40661e:	cld    
  40661f:	in     al,0x55
  406621:	or     DWORD PTR [esi],0xc438cfa6
  406627:	dec    ebx
  406628:	jl     0x4065cb
  40662a:	inc    edx
  40662b:	or     BYTE PTR [edi],bl
  40662d:	xor    BYTE PTR [edx+0x70],bh
  406630:	retf   
  406631:	pop    ebx
  406632:	add    al,0xda
  406634:	aas    
  406635:	inc    ebp
  406636:	icebp  
  406637:	mov    WORD PTR [edi],es
  406639:	or     BYTE PTR [eax],cl
  40663b:	hlt    
  40663c:	loopne 0x40666a
  40663e:	cwde   
  40663f:	jmp    0x406696
  406641:	xchg   DWORD PTR [ecx],ecx
  406643:	retf   
  406644:	cmc    
  406645:	and    al,0xe3
  406647:	retf   
  406648:	mov    esi,0xb4407752
  40664d:	test   eax,0x22bd66f8
  406652:	out    0x4d,eax
  406654:	adc    eax,0xe8d25ff1
  406659:	cdq    
  40665a:	ds mov esp,0x695b2dde
  406660:	xor    al,0xd9
  406662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406663:	push   ebp
  406664:	inc    ebx
  406665:	in     al,0xf2
  406667:	lods   al,BYTE PTR ds:[esi]
  406668:	daa    
  406669:	jbe    0x406672
  40666b:	test   DWORD PTR [ebx+0x7e],0x57a5b056
  406672:	mov    BYTE PTR [ebx+0x1],0x1f
  406676:	add    ah,BYTE PTR [esi-0x50b60827]
  40667c:	imul   eax,DWORD PTR ds:0x83b7c76f,0xec3ba696
  406686:	add    al,0x8b
  406688:	push   edx
  406689:	shl    BYTE PTR [esi+0x8faf07f],0xc4
  406690:	rol    DWORD PTR [ecx+0x2d581d21],0xe5
  406697:	dec    ecx
  406698:	pop    esp
  406699:	(bad)  
  40669b:	xchg   ecx,eax
  40669c:	push   ss
  40669d:	mov    edx,0x169bb82d
  4066a2:	arpl   WORD PTR [edx],dx
  4066a4:	add    ch,BYTE PTR [esi-0x2fec43b3]
  4066aa:	in     al,dx
  4066ab:	repnz daa 
  4066ad:	aam    0x5b
  4066af:	sbb    eax,0x75376e1b
  4066b4:	push   0x8884a18d
  4066b9:	aad    0x25
  4066bb:	loop   0x406674
  4066bd:	sbb    BYTE PTR [eax*2-0x6bd669e9],bh
  4066c4:	mov    bl,bl
  4066c6:	add    edi,DWORD PTR [eax-0x253abf89]
  4066cc:	lods   eax,DWORD PTR ds:[esi]
  4066cd:	sub    ah,BYTE PTR [ebp+0x597f9477]
  4066d3:	sahf   
  4066d4:	push   edi
  4066d5:	sub    esp,DWORD PTR [edx+0x4c]
  4066d8:	jo     0x406661
  4066da:	add    edx,DWORD PTR [ecx-0x3d]
  4066dd:	rol    BYTE PTR [edx-0x7652b471],1
  4066e3:	jge    0x40675e
  4066e5:	ret    0xf796
  4066e8:	or     esp,DWORD PTR [edx+0x74]
  4066eb:	ret    0x9899
  4066ee:	shl    BYTE PTR [edi+0x5f],1
  4066f1:	je     0x4066e2
  4066f3:	invlpg BYTE PTR [eax-0x76]
  4066f7:	les    edi,FWORD PTR [ecx]
  4066f9:	sub    eax,0xe1e55382
  4066fe:	mov    dl,0xdd
  406700:	pop    edi
  406701:	repz sbb bh,BYTE PTR [ecx-0x71]
  406705:	mov    WORD PTR [edi+ebp*8-0x5acc271c],?
  40670c:	xor    DWORD PTR [ecx+0x2d5b7189],ebx
  406712:	dec    ecx
  406713:	daa    
  406714:	adc    al,0xac
  406716:	xor    DWORD PTR [edx+0xf],edx
  406719:	mov    dl,0xdc
  40671b:	cli    
  40671c:	js     0x406724
  40671e:	sub    al,0xc8
  406720:	fld    QWORD PTR [ecx-0x36a532dc]
  406726:	inc    eax
  406727:	mov    edx,edi
  406729:	loop   0x406701
  40672b:	sbb    esp,DWORD PTR [ebx]
  40672d:	jmp    0x63d9a1a3
  406732:	daa    
  406733:	test   DWORD PTR [edx+0x7bdd862b],eax
  406739:	adc    eax,0x58e3d48b
  40673e:	pop    esi
  40673f:	(bad)  
  406740:	push   edi
  406741:	ror    cl,1
  406743:	(bad)  
  406744:	fincstp 
  406746:	jo     0x40670a
  406748:	inc    eax
  406749:	(bad)  
  40674a:	(bad)  
  40674b:	stos   BYTE PTR es:[edi],al
  40674c:	imul   esp,DWORD PTR [ebp-0x66],0x1cf7369d
  406753:	add    al,0x4e
  406755:	leave  
  406756:	ret    0x5b1
  406759:	push   esi
  40675a:	xor    al,0x89
  40675c:	(bad)  
  40675d:	cld    
  40675e:	xor    edi,0xed070347
  406764:	mov    esp,0x8596b65a
  406769:	mov    dh,0x6c
  40676b:	cmp    BYTE PTR [edx-0x7],cl
  40676e:	out    dx,eax
  40676f:	xor    eax,0xd82b5d6d
  406774:	or     al,0x1c
  406776:	push   eax
  406777:	sub    DWORD PTR [edi+0x43],edx
  40677a:	test   eax,0xd8ea6eb2
  40677f:	leave  
  406780:	pushf  
  406781:	mov    BYTE PTR [edx-0x67],al
  406784:	loopne 0x406802
  406786:	and    al,0xaf
  406788:	add    edx,ebp
  40678a:	sbb    cl,al
  40678c:	mov    dl,BYTE PTR [eax+ebx*2-0x48ea0f15]
  406793:	dec    edx
  406794:	pop    eax
  406795:	or     al,ch
  406797:	iret   
  406798:	rcr    cl,0xa5
  40679b:	mov    eax,0x35127026
  4067a0:	test   ecx,ebp
  4067a2:	arpl   WORD PTR [edx+0x75],cx
  4067a5:	int    0xc1
  4067a7:	pop    ecx
  4067a8:	ins    DWORD PTR es:[edi],dx
  4067a9:	sbb    esp,DWORD PTR [edx]
  4067ab:	shl    BYTE PTR [eax-0x33],1
  4067ae:	dec    ebx
  4067af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067b0:	mov    ds:0xe1f323b0,eax
  4067b5:	stos   BYTE PTR es:[edi],al
  4067b6:	and    al,0x16
  4067b8:	repnz sub esp,DWORD PTR ds:0xef74eb7b
  4067bf:	cmc    
  4067c0:	sub    eax,0x16d74d45
  4067c5:	cs or  al,0x92
  4067c8:	xchg   DWORD PTR [esi],esp
  4067ca:	adc    al,BYTE PTR [edx+0x56]
  4067cd:	or     DWORD PTR [ebx],ecx
  4067cf:	dec    ecx
  4067d0:	mov    bh,0x38
  4067d2:	pop    esp
  4067d3:	dec    ecx
  4067d4:	loop   0x40680b
  4067d6:	mov    ds:0xe5271a25,eax
  4067db:	or     DWORD PTR [eax+edx*2],ebp
  4067de:	add    al,0xdf
  4067e0:	cli    
  4067e1:	push   eax
  4067e2:	pop    gs
  4067e4:	sbb    eax,0x1510fc42
  4067e9:	xor    ecx,DWORD PTR [ebx+ebp*8]
  4067ec:	rol    DWORD PTR ds:0x1b703263,1
  4067f2:	mov    ah,0x59
  4067f4:	pop    ebp
  4067f5:	ja     0x40681d
  4067f7:	mov    ds:0x4a4ad8c8,al
  4067fc:	inc    ebx
  4067fd:	xchg   esi,eax
  4067fe:	cs jmp 0xc37cd8a
  406804:	mov    ch,0x16
  406806:	gs mov al,0x78
  406809:	dec    ecx
  40680a:	jg     0x406830
  40680c:	mov    fs,WORD PTR [ecx-0x39]
  40680f:	jg     0x4067c4
  406811:	fild   DWORD PTR [ebp+0x5d8206c7]
  406817:	jg     0x4067e2
  406819:	lea    ecx,[edi]
  40681b:	je     0x406848
  40681d:	xchg   esi,eax
  40681e:	fnstcw WORD PTR [edi+0x21]
  406821:	mov    ch,0xb3
  406823:	inc    eax
  406824:	inc    edi
  406825:	sub    dl,al
  406827:	icebp  
  406828:	mov    ecx,0x1d145bae
  40682d:	mov    ecx,0x3353f796
  406832:	std    
  406833:	test   eax,0x4321442
  406838:	sbb    eax,0x7e3dd86b
  40683d:	repz mov dl,0xdd
  406840:	sub    ebp,DWORD PTR [ebx-0x6dcff796]
  406846:	test   eax,0xacf6e55e
  40684b:	add    DWORD PTR [edi-0x6],eax
  40684e:	xchg   ebx,eax
  40684f:	into   
  406850:	add    edx,esi
  406852:	leave  
  406853:	shr    ebx,0xa2
  406856:	or     DWORD PTR [ecx],eax
  406858:	pop    eax
  406859:	sub    al,dh
  40685b:	add    bl,BYTE PTR [esi+0x12507157]
  406861:	mov    ebx,0x7c34e562
  406866:	mov    bh,0x1b
  406868:	and    al,0xf
  40686a:	test   eax,0xbb08ce04
  40686f:	push   es
  406870:	out    0x2,eax
  406872:	mov    esi,0xe0827aa5
  406877:	jle    0x4067fe
  406879:	sbb    eax,0xfb5e1b10
  40687e:	pusha  
  40687f:	pop    es
  406880:	loopne 0x40686a
  406882:	into   
  406883:	dec    ecx
  406884:	adc    DWORD PTR [ecx+0x15],esi
  406887:	or     cl,BYTE PTR [edi]
  406889:	mov    edi,0xeb7a2679
  40688e:	int3   
  40688f:	sub    al,BYTE PTR [edx+0x2e71fcad]
  406895:	mov    ebx,0xda8ef1d8
  40689a:	cld    
  40689b:	mov    edx,ds
  40689d:	nop
  40689e:	cmc    
  40689f:	mov    edi,0xbeb092de
  4068a4:	and    BYTE PTR [edi-0x5],0xd5
  4068a8:	sbb    al,0x8d
  4068aa:	sub    BYTE PTR [ecx],bh
  4068ac:	xchg   ebp,eax
  4068ad:	outs   dx,DWORD PTR ds:[esi]
  4068ae:	xlat   BYTE PTR ds:[ebx]
  4068af:	mov    dh,0x55
  4068b1:	sbb    al,BYTE PTR [ebp-0x54]
  4068b4:	pop    esp
  4068b5:	mov    bl,0xf6
  4068b7:	mov    ecx,0xaa7bf54
  4068bc:	add    DWORD PTR [esi-0x9],ecx
  4068bf:	icebp  
  4068c0:	xor    BYTE PTR [esi+ecx*4+0x40532a22],cl
  4068c7:	popf   
  4068c8:	pushf  
  4068c9:	pop    ds
  4068ca:	adc    dh,BYTE PTR [eax]
  4068cc:	jge    0x406899
  4068ce:	push   edx
  4068cf:	in     eax,dx
  4068d0:	ret    
  4068d1:	rol    ebp,1
  4068d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068d4:	inc    esp
  4068d5:	dec    edi
  4068d6:	jbe    0x4068da
  4068d8:	sbb    al,0x4b
  4068da:	jl     0x40692d
  4068dc:	inc    esi
  4068dd:	scas   eax,DWORD PTR es:[edi]
  4068de:	nop
  4068df:	rsm    
  4068e1:	inc    ecx
  4068e2:	cwde   
  4068e3:	cs inc edx
  4068e5:	xor    dh,dh
  4068e7:	mov    ah,0xf9
  4068e9:	mov    ebx,DWORD PTR [esi]
  4068eb:	sbb    dl,dh
  4068ed:	daa    
  4068ee:	sub    dl,al
  4068f0:	xlat   BYTE PTR ds:[ebx]
  4068f1:	add    dl,BYTE PTR [ecx+0x6ba4e6b3]
  4068f7:	ror    DWORD PTR [ebp+0x58289d85],0xdf
  4068fe:	jb     0x4068f2
  406900:	lds    edx,FWORD PTR [ecx]
  406902:	cmp    BYTE PTR [edx],cl
  406904:	sar    DWORD PTR [ecx+0x2136cbe5],0x6a
  40690b:	mov    bh,0x24
  40690d:	fld    QWORD PTR [ecx-0x14e08d17]
  406913:	repz repnz sbb DWORD PTR [edx+ebx*2],0xd2fcf5be
  40691c:	dec    edx
  40691d:	pop    ecx
  40691e:	test   BYTE PTR [ebx+eax*4-0x7d204b5e],bh
  406925:	jns    0x4068bc
  406927:	shl    BYTE PTR [eax],0x2b
  40692a:	jle    0x4069a6
  40692c:	jmp    0x2191:0x27bc65b3
  406933:	adc    BYTE PTR [edx+esi*1+0x905be1e],ah
  40693a:	pop    ds
  40693b:	mov    ds:0xfaec5fbd,eax
  406940:	and    bh,BYTE PTR [ebx-0x7b]
  406943:	shr    BYTE PTR [edx-0x2fbf3ad3],cl
  406949:	add    edx,DWORD PTR ds:[ecx+0x0]
  40694d:	cmp    eax,0x55912be
  406952:	dec    ebp
  406953:	test   BYTE PTR [edx],bl
  406955:	cwde   
  406956:	inc    ebx
  406957:	cmp    DWORD PTR [edi-0x2c366c05],ebp
  40695d:	fdiv   st(4),st
  40695f:	imul   DWORD PTR [edx-0x66]
  406962:	or     al,0x3a
  406964:	push   0x26
  406966:	ss ds mov ah,0xc8
  40696a:	and    eax,0xa7ae0898
  40696f:	out    dx,al
  406970:	xchg   edx,eax
  406971:	mov    ch,0xd0
  406973:	(bad)  
  406974:	cld    
  406975:	cdq    
  406976:	fadd   QWORD PTR [edx+0x22c204d4]
  40697c:	jns    0x4069b1
  40697e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  406980:	jb     0x4069d1
  406982:	pop    ss
  406983:	(bad)  
  406984:	into   
  406985:	mov    ds:0x4d1fa22e,eax
  40698a:	das    
  40698b:	retf   
  40698c:	mov    WORD PTR [ebx],fs
  40698e:	loope  0x406963
  406990:	sub    BYTE PTR [ecx-0x29],bh
  406993:	stos   BYTE PTR es:[edi],al
  406994:	xchg   BYTE PTR [esi+0x18],cl
  406997:	xor    eax,0x6917376
  40699c:	xor    DWORD PTR [edi-0x73],ebp
  40699f:	sbb    eax,DWORD PTR [edx+0x697fc198]
  4069a5:	xchg   esp,eax
  4069a6:	je     0x40693f
  4069a8:	xchg   edi,eax
  4069a9:	push   ebx
  4069aa:	and    eax,eax
  4069ac:	or     bh,al
  4069ae:	data16 ror BYTE PTR [edx],0xfc
  4069b2:	jnp    0x40694b
  4069b4:	ins    DWORD PTR es:[edi],dx
  4069b5:	loop   0x406966
  4069b7:	mov    al,0x49
  4069b9:	add    edx,ecx
  4069bb:	mov    dl,0xa6
  4069bd:	popf   
  4069be:	retf   0xeb71
  4069c1:	std    
  4069c2:	cld    
  4069c3:	adc    BYTE PTR [edx-0x48],bh
  4069c6:	mov    ch,0x1e
  4069c8:	into   
  4069c9:	arpl   WORD PTR [esi-0x1c],ax
  4069cc:	popf   
  4069cd:	neg    DWORD PTR [eax-0x16]
  4069d0:	mov    esp,0xb63f568e
  4069d5:	and    esp,esp
  4069d7:	inc    edi
  4069d8:	xchg   DWORD PTR [ebx-0x7c6955e9],edi
  4069de:	inc    ebx
  4069df:	addr16 dec ebx
  4069e1:	sub    dh,BYTE PTR [ecx+0x5e]
  4069e4:	jg     0x406a22
  4069e6:	test   BYTE PTR [edi+0x2decf1e3],dh
  4069ec:	mov    eax,ds:0x134082d6
  4069f1:	scas   eax,DWORD PTR es:[edi]
  4069f2:	fucomip st,st(0)
  4069f4:	ret    0x3551
  4069f7:	push   ebx
  4069f8:	mov    cl,0xe
  4069fa:	and    al,bh
  4069fc:	arpl   dx,sp
  4069fe:	push   ebp
  4069ff:	fnsetpm(287 only) 
  406a01:	aaa    
  406a02:	adc    al,0xc2
  406a04:	cmc    
  406a05:	and    DWORD PTR [ecx+0x3],esp
  406a08:	xchg   edx,eax
  406a09:	mov    ecx,0xdff1b304
  406a0e:	pop    ebx
  406a0f:	idiv   BYTE PTR [ecx-0x65]
  406a12:	pusha  
  406a13:	div    BYTE PTR [ebp+ebx*2+0x7d]
  406a17:	out    dx,eax
  406a18:	and    al,BYTE PTR [eax-0x3b]
  406a1b:	adc    al,0x6a
  406a1d:	jg     0x4069c5
  406a1f:	(bad)  
  406a20:	cmp    bh,BYTE PTR [edx-0x767f876d]
  406a26:	cmc    
  406a27:	(bad)  
  406a28:	adc    edi,DWORD PTR [ecx]
  406a2a:	mov    dh,dh
  406a2c:	cpuid  
  406a2e:	loopne 0x4069fe
  406a30:	sbb    eax,0xfae99490
  406a35:	in     eax,0x3b
  406a37:	cmp    ecx,edi
  406a39:	mov    ch,0x4c
  406a3b:	fisttp WORD PTR [edi]
  406a3d:	jg     0x406a81
  406a3f:	inc    ebp
  406a40:	sub    al,al
  406a42:	xor    ecx,DWORD PTR [edx+0x66b9b969]
  406a48:	cmp    ah,bl
  406a4a:	or     al,0x32
  406a4c:	push   edx
  406a4d:	mov    edx,0x848d759
  406a52:	icebp  
  406a53:	dec    eax
  406a54:	sbb    al,0xd2
  406a56:	aam    0x40
  406a58:	jmp    0x38fd7e2c
  406a5d:	(bad)  
  406a5f:	outs   dx,DWORD PTR ds:[esi]
  406a60:	dec    ecx
  406a61:	aaa    
  406a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a63:	ret    0x6078
  406a66:	int3   
  406a67:	in     eax,0xcf
  406a69:	sub    edi,edx
  406a6b:	jbe    0x406aaf
  406a6d:	into   
  406a6e:	jge    0x406a8b
  406a70:	sub    ah,BYTE PTR [eax]
  406a72:	or     eax,DWORD PTR [esi+0x209c4019]
  406a78:	jmp    0x406aaa
  406a7a:	shl    ebx,cl
  406a7c:	jle    0x406a42
  406a7e:	mov    ecx,0x920001b8
  406a83:	pop    ecx
  406a84:	pushf  
  406a85:	cmp    eax,0x2510f027
  406a8a:	and    edx,DWORD PTR [ecx+0x37]
  406a8d:	mov    eax,0x1ffe6372
  406a92:	in     eax,dx
  406a93:	stos   DWORD PTR es:[edi],eax
  406a94:	into   
  406a95:	test   BYTE PTR [esi+0x55],0x4e
  406a99:	sub    DWORD PTR [ebp+0x5c43a1b6],ebx
  406a9f:	jl     0x406a67
  406aa1:	lds    esp,FWORD PTR [ecx+0x326a9188]
  406aa7:	outs   dx,DWORD PTR ds:[esi]
  406aa8:	xor    ah,BYTE PTR gs:[ecx]
  406aab:	rcr    BYTE PTR [esi-0x15],1
  406aae:	jnp    0x406aa0
  406ab0:	and    BYTE PTR [edi],0x6f
  406ab3:	and    ebx,DWORD PTR ds:0xb0e09f8
  406ab9:	push   cs
  406aba:	pop    ss
  406abb:	xor    BYTE PTR [edx+eax*4+0x6289be2b],al
  406ac2:	xor    BYTE PTR [ecx+0x2e54d303],bl
  406ac8:	mov    esp,0x3423f0ed
  406acd:	add    al,0xd8
  406acf:	dec    ebp
  406ad0:	out    0xa1,al
  406ad2:	retf   
  406ad3:	sbb    ebx,DWORD PTR [edi-0x35]
  406ad6:	dec    ebp
  406ad7:	ins    DWORD PTR es:[edi],dx
  406ad8:	sahf   
  406ad9:	push   esi
  406ada:	add    DWORD PTR [ebp-0x80],ebx
  406add:	fimul  DWORD PTR [esi]
  406adf:	add    dh,BYTE PTR [esi]
  406ae1:	xchg   edx,eax
  406ae2:	jecxz  0x406aec
  406ae4:	dec    ebx
  406ae5:	int3   
  406ae6:	enter  0xc1ae,0xa7
  406aea:	ins    BYTE PTR es:[edi],dx
  406aeb:	jp     0x406acf
  406aed:	arpl   WORD PTR ds:0xa460835d,bx
  406af3:	sbb    ch,BYTE PTR [ecx+0x70]
  406af6:	sub    BYTE PTR [ebp+eiz*1-0x3acdb0ca],ah
  406afd:	sbb    BYTE PTR [esp+esi*1],cl
  406b00:	mov    dh,0xe1
  406b02:	jp     0x406b51
  406b04:	frstor [edx+0x539891dc]
  406b0a:	aam    0x2c
  406b0c:	jno    0x406ade
  406b0e:	mov    ss,WORD PTR [eax-0x41107f2d]
  406b14:	in     al,0x10
  406b16:	imul   ecx,DWORD PTR [ebx],0xffffffb3
  406b19:	loope  0x406ab8
  406b1b:	(bad)  
  406b1c:	test   al,0x7f
  406b1e:	lods   al,BYTE PTR ds:[esi]
  406b1f:	add    esi,DWORD PTR [ebp+esi*8-0x25e728f0]
  406b26:	fld1   
  406b28:	sbb    BYTE PTR [ecx+0x60],al
  406b2b:	lahf   
  406b2c:	or     esi,ecx
  406b2e:	push   eax
  406b2f:	mov    edi,0xb9b7c06c
  406b34:	inc    eax
  406b35:	sbb    al,0x83
  406b37:	outs   dx,BYTE PTR ds:[esi]
  406b38:	iret   
  406b39:	mov    edi,0x94092556
  406b3e:	ror    DWORD PTR [edx],cl
  406b40:	iret   
  406b41:	adc    cl,BYTE PTR [edx-0x51]
  406b44:	xchg   ebp,eax
  406b45:	test   eax,0x93ccb1f6
  406b4a:	inc    esp
  406b4b:	jl     0x406b2f
  406b4d:	imul   eax,DWORD PTR [eax],0xffffff87
  406b50:	inc    eax
  406b51:	jl     0x406b9f
  406b53:	xor    eax,0x5c170788
  406b58:	sti    
  406b59:	xor    BYTE PTR [edi+eax*4+0x10f792d1],bl
  406b60:	test   eax,0xf4f978ef
  406b65:	imul   esi,DWORD PTR [esi],0x4274efc9
  406b6b:	jmp    0x30d833e6
  406b70:	scas   al,BYTE PTR es:[edi]
  406b71:	inc    ebx
  406b72:	dec    edi
  406b73:	dec    edi
  406b74:	retf   
  406b75:	jo     0x406be0
  406b77:	sub    eax,0x380d7067
  406b7c:	(bad)  
  406b7d:	mov    ecx,0xc50ee40a
  406b82:	cmp    esi,DWORD PTR [esi-0x64ca1c1e]
  406b88:	push   0xffffffd5
  406b8a:	call   0x77011c57
  406b8f:	mov    ds:0x7227a48b,al
  406b94:	mov    esp,0xa458b50
  406b99:	inc    ebp
  406b9a:	popa   
  406b9b:	in     eax,0x5e
  406b9d:	(bad)  
  406b9f:	into   
  406ba0:	scas   eax,DWORD PTR es:[edi]
  406ba1:	je     0x406b7d
  406ba3:	xchg   ecx,eax
  406ba4:	aas    
  406ba5:	sub    dh,bh
  406ba7:	mov    WORD PTR [eax-0x68b457b8],es
  406bad:	mov    ds:0x7932da7a,eax
  406bb2:	mov    al,0xb1
  406bb4:	sub    edx,DWORD PTR [esi]
  406bb6:	test   al,0xae
  406bb8:	push   esi
  406bb9:	enter  0x810e,0x2d
  406bbd:	rcl    ah,0xbd
  406bc0:	call   0x1f61ec48
  406bc5:	jb     0x406bb8
  406bc7:	mov    bl,0x27
  406bc9:	aaa    
  406bca:	lods   al,BYTE PTR ds:[esi]
  406bcb:	ins    DWORD PTR es:[edi],dx
  406bcc:	call   0xa411c93f
  406bd1:	mov    ch,0x4e
  406bd3:	out    dx,eax
  406bd4:	addr16 pop ebx
  406bd6:	rol    bh,cl
  406bd8:	jo     0x406b78
  406bda:	ins    BYTE PTR es:[edi],dx
  406bdb:	inc    edi
  406bdc:	lods   eax,DWORD PTR ds:[esi]
  406bdd:	push   edx
  406bde:	mov    ss,esp
  406be0:	aam    0xd5
  406be2:	xlat   BYTE PTR ds:[ebx]
  406be3:	dec    esp
  406be4:	mov    ah,0xf8
  406be6:	cwde   
  406be7:	or     DWORD PTR [edi],ebx
  406be9:	jmp    0x82:0x54f8650c
  406bf0:	push   es
  406bf1:	popf   
  406bf2:	sub    ah,BYTE PTR ds:0xc9294476
  406bf8:	shr    DWORD PTR [ebx+edx*4+0x4a],0xbd
  406bfd:	sti    
  406bfe:	outs   dx,BYTE PTR ds:[esi]
  406bff:	pop    es
  406c00:	sbb    bl,ch
  406c02:	fist   DWORD PTR [edi]
  406c04:	mov    ch,0x1
  406c06:	and    ebx,DWORD PTR [ecx+0x39]
  406c09:	test   DWORD PTR [esi+0x7d],esp
  406c0c:	fimul  DWORD PTR [edi+ecx*8+0x5b9df7b6]
  406c13:	cmp    DWORD PTR [edx],ebp
  406c15:	(bad)  
  406c16:	xor    eax,0xea264da2
  406c1b:	out    0x82,eax
  406c1d:	push   ds
  406c1e:	ficom  WORD PTR [ebp-0x42]
  406c21:	jbe    0x406bbe
  406c23:	sbb    esi,DWORD PTR [ebx-0x54011996]
  406c29:	test   DWORD PTR [ecx-0x24464e36],edx
  406c2f:	add    ch,BYTE PTR [ecx+0x468a18ab]
  406c35:	sbb    al,0xa3
  406c37:	sub    eax,0x89fbfb09
  406c3c:	xor    cl,BYTE PTR [ebx+0x1d09083d]
  406c42:	inc    ebp
  406c43:	stos   DWORD PTR es:[edi],eax
  406c44:	iret   
  406c45:	popa   
  406c46:	push   ebp
  406c47:	dec    ecx
  406c48:	rcr    DWORD PTR ds:0x7aaa25d5,cl
  406c4e:	scas   eax,DWORD PTR es:[edi]
  406c4f:	fild   QWORD PTR [esi-0x3c1a802d]
  406c55:	or     eax,0xbd61b918
  406c5a:	data16 je 0x406c0a
  406c5d:	jo     0x406c33
  406c5f:	mov    ebx,0x2e8b3fc2
  406c64:	sar    dh,0x9e
  406c67:	sub    BYTE PTR [edx-0x2187571c],al
  406c6d:	or     al,al
  406c6f:	dec    edx
  406c70:	scas   eax,DWORD PTR es:[edi]
  406c71:	cdq    
  406c72:	aas    
  406c73:	nop
  406c74:	jle    0x406c5d
  406c76:	or     edi,DWORD PTR [edx+0x7673eb3b]
  406c7c:	inc    esi
  406c7d:	ins    DWORD PTR es:[edi],dx
  406c7e:	cs dec ecx
  406c80:	add    al,0x5b
  406c82:	and    BYTE PTR ds:0x987a9127,ch
  406c88:	lea    esi,[ebx]
  406c8a:	cld    
  406c8b:	dec    ebp
  406c8c:	or     eax,DWORD PTR [esi]
  406c8e:	push   0x4b
  406c90:	ret    0x7774
  406c93:	int3   
  406c94:	mov    bl,0x7a
  406c96:	mov    ds:0x23a935fd,eax
  406c9b:	xor    eax,0x1791caf6
  406ca0:	(bad)  
  406ca1:	pop    eax
  406ca2:	arpl   bx,si
  406ca4:	xchg   bl,bh
  406ca6:	out    0x1f,eax
  406ca8:	jo     0x406d1a
  406caa:	fldenv [ecx-0x79]
  406cad:	out    0xe1,al
  406caf:	gs (bad) 
  406cb2:	idiv   DWORD PTR [edx-0x4d48fbc0]
  406cb8:	or     BYTE PTR [eax+0x1c99c78a],al
  406cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cbf:	xchg   ebp,eax
  406cc0:	xor    cl,BYTE PTR [ecx]
  406cc2:	loop   0x406c64
  406cc4:	ja     0x406d3c
  406cc6:	xchg   ecx,eax
  406cc7:	imul   ecx,DWORD PTR [edx-0x51],0xa27b831f
  406cce:	xor    BYTE PTR [ebx+ecx*4-0x291b7036],0xa0
  406cd6:	cmp    al,0xe3
  406cd8:	jle    0x406cd6
  406cda:	mov    ebp,0xcc2470e6
  406cdf:	inc    esp
  406ce0:	push   esi
  406ce1:	mov    fs:0x496e7ae8,al
  406ce7:	xor    BYTE PTR [edi],bh
  406ce9:	mov    WORD PTR [esi],es
  406ceb:	mov    edi,0x8b59d88a
  406cf0:	fwait
  406cf1:	mov    esp,0x39be7817
  406cf6:	lea    eax,[esi-0x24]
  406cf9:	dec    eax
  406cfa:	ret    0x8d9c
  406cfd:	fild   QWORD PTR [edi-0x534620fe]
  406d03:	adc    eax,0x3f5268c5
  406d08:	inc    ebp
  406d09:	push   cs
  406d0a:	push   0x15b05e78
  406d0f:	jle    0x406cdd
  406d11:	xchg   ebx,edi
  406d13:	repnz adc ebp,ecx
  406d16:	cmp    cl,BYTE PTR [ebx-0xadf35e]
  406d1c:	test   edx,esp
  406d1e:	rol    BYTE PTR [ebx],1
  406d20:	jne    0x406d2d
  406d22:	inc    esi
  406d23:	jb     0x406d37
  406d25:	cmp    al,0x10
  406d27:	or     al,0x79
  406d29:	xor    eax,0x798502ad
  406d2e:	xchg   esp,eax
  406d2f:	hlt    
  406d30:	inc    edi
  406d31:	popf   
  406d32:	pop    ebx
  406d33:	pop    edx
  406d34:	mov    bl,0x49
  406d36:	xchg   edi,eax
  406d37:	imul   esp,DWORD PTR [ebx+0x1f],0x5463a3f7
  406d3e:	push   ebp
  406d3f:	(bad)  
  406d40:	jecxz  0x406d49
  406d42:	dec    ebx
  406d43:	push   ss
  406d44:	jle    0x406d3b
  406d46:	in     eax,0x29
  406d48:	les    esp,FWORD PTR [ebx-0x72]
  406d4b:	push   es
  406d4c:	mul    eax
  406d4e:	sbb    DWORD PTR [esi-0x5],esp
  406d51:	scas   eax,DWORD PTR es:[edi]
  406d52:	push   ecx
  406d53:	sub    BYTE PTR [ecx],0x30
  406d56:	jmp    0x406d60
  406d58:	mov    bh,0x22
  406d5a:	sbb    eax,0xbf5301e2
  406d5f:	mov    bh,ah
  406d61:	gs pop es
  406d63:	xlat   BYTE PTR ds:[ebx]
  406d64:	into   
  406d65:	xchg   bl,dl
  406d67:	cmp    esi,edx
  406d69:	addr16 cmp esi,esi
  406d6c:	xchg   DWORD PTR [eax-0x3],ebx
  406d6f:	jp     0x406d6a
  406d71:	fdiv   QWORD PTR [edx-0xd018d19]
  406d77:	xor    DWORD PTR [ebp-0xa],edi
  406d7a:	and    eax,0x9795c1bd
  406d7f:	test   cl,ah
  406d81:	mov    cl,0x9
  406d83:	push   edi
  406d84:	dec    ebx
  406d85:	pop    esp
  406d86:	jae    0x406d55
  406d88:	pushf  
  406d89:	inc    ebp
  406d8a:	mov    ds:0x9fb38f0a,al
  406d8f:	and    eax,DWORD PTR [esi-0x7b]
  406d92:	iret   
  406d93:	ror    esi,cl
  406d95:	pushf  
  406d96:	or     al,0xc9
  406d98:	jl     0x406d71
  406d9a:	or     eax,0x4f18d1eb
  406d9f:	mov    eax,ds:0xbc71e1d1
  406da4:	mov    ebx,0x94cc7326
  406da9:	je     0x406d7d
  406dab:	pop    ecx
  406dac:	mov    al,ds:0x63f6f37b
  406db1:	mov    al,ds:0xca6542c2
  406db6:	fdivr  QWORD PTR [ecx]
  406db8:	sub    DWORD PTR [eax],edx
  406dba:	mov    dh,0xec
  406dbc:	dec    ebp
  406dbd:	sbb    al,0xd
  406dbf:	fs (bad) 
  406dc1:	cmp    eax,0xbdfebe75
  406dc6:	icebp  
  406dc7:	(bad)  
  406dc8:	lock pop ecx
  406dca:	(bad)  
  406dcb:	ror    BYTE PTR [esp+edx*1-0x53],0x84
  406dd0:	push   eax
  406dd1:	in     eax,dx
  406dd2:	imul   DWORD PTR [edx+ebx*8-0x5c]
  406dd6:	rol    BYTE PTR [esi],cl
  406dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dd9:	xchg   esi,eax
  406dda:	dec    edx
  406ddb:	sbb    DWORD PTR [eax+0x3c927b84],0x35
  406de2:	add    eax,0xf9c86489
  406de7:	jmp    DWORD PTR [edx]
  406de9:	cmp    ecx,eax
  406deb:	sar    DWORD PTR [esi-0x7],cl
  406dee:	and    al,ah
  406df0:	dec    ebx
  406df1:	rol    BYTE PTR [ebp+0x2f],1
  406df4:	xchg   DWORD PTR [ecx+0x41],esi
  406df7:	idiv   DWORD PTR [ebx-0x62]
  406dfa:	out    0xd3,al
  406dfc:	test   eax,0xdb4d3e03
  406e01:	int    0xe5
  406e03:	js     0x406e3e
  406e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e06:	stos   BYTE PTR es:[edi],al
  406e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e08:	gs jmp 0xa056:0xf6d916aa
  406e10:	jmp    0x7019:0xe11fa36d
  406e17:	pop    esp
  406e18:	jge    0x406dae
  406e1a:	int3   
  406e1b:	inc    edx
  406e1c:	jle    0x406e8a
  406e1e:	test   BYTE PTR [esi],0x49
  406e21:	jno    0x406da7
  406e23:	push   0xdd39c58
  406e28:	(bad)  
  406e2a:	int    0x97
  406e2c:	jbe    0x406e87
  406e2e:	arpl   ax,dx
  406e30:	lods   ax,WORD PTR ds:[esi]
  406e32:	sub    BYTE PTR [eax-0x2927d07],0xb
  406e39:	out    dx,al
  406e3a:	repz jecxz 0x406e68
  406e3d:	in     ax,dx
  406e3f:	rcr    DWORD PTR [edx],cl
  406e41:	stos   BYTE PTR es:[edi],al
  406e42:	jns    0x406e71
  406e44:	jmp    0x7400:0xbea5b36c
  406e4b:	int    0xe
  406e4d:	pop    ecx
  406e4e:	rep lods eax,DWORD PTR ds:[esi]
  406e50:	lods   eax,DWORD PTR fs:[esi]
  406e52:	adc    esi,0x2d68fa1e
  406e58:	sub    eax,0xdde509a
  406e5d:	scas   al,BYTE PTR es:[edi]
  406e5e:	bound  edi,QWORD PTR [ebx+0x5f]
  406e61:	pop    ss
  406e62:	push   0x6646fc7b
  406e67:	jge    0x406e4a
  406e69:	adc    dh,ch
  406e6b:	iret   
  406e6c:	adc    al,0x7c
  406e6e:	push   0xffffffd0
  406e70:	int    0xe2
  406e72:	int    0xab
  406e74:	ret    
  406e75:	mov    ah,0x66
  406e77:	mov    bl,0xda
  406e79:	arpl   WORD PTR [edx+0x6a088e07],sp
  406e7f:	pop    esp
  406e80:	xor    DWORD PTR [ebx-0x52a93ca0],esi
  406e86:	push   ebp
  406e87:	ins    DWORD PTR es:[edi],dx
  406e88:	push   ecx
  406e89:	int3   
  406e8a:	xor    ebp,DWORD PTR [esi-0x7737ddf0]
  406e90:	sar    DWORD PTR [esi],0x40
  406e93:	mov    edx,0xb3b66cd2
  406e98:	pop    ebx
  406e99:	aas    
  406e9a:	or     DWORD PTR [esi-0x31aedf5],eax
  406ea0:	pop    ebx
  406ea1:	and    dl,dl
  406ea3:	test   al,0xed
  406ea5:	lahf   
  406ea6:	pop    edx
  406ea7:	lods   al,BYTE PTR ds:[esi]
  406ea8:	cmp    al,0x57
  406eaa:	pop    esi
  406eab:	(bad)  
  406eac:	aas    
  406ead:	repnz fwait
  406eaf:	mov    dh,ah
  406eb1:	cs push esp
  406eb3:	sbb    BYTE PTR [ebp+ecx*8-0x12b07da6],bl
  406eba:	mov    dl,0x21
  406ebc:	mov    eax,ds:0x90dc4225
  406ec1:	jecxz  0x406e4d
  406ec3:	xor    eax,0x88b466bf
  406ec8:	mov    esi,0x3719db52
  406ecd:	add    ah,bh
  406ecf:	pop    ss
  406ed0:	sub    ebx,0xffffffff
  406ed3:	jo     0x406f36
  406ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed6:	mov    eax,esi
  406ed8:	push   0x95215246
  406edd:	inc    eax
  406ede:	push   edx
  406edf:	in     al,dx
  406ee0:	js     0x406e8f
  406ee2:	retf   
  406ee3:	or     al,0x26
  406ee5:	cmp    ebp,DWORD PTR [ecx-0x31]
  406ee8:	pop    edi
  406ee9:	push   edx
  406eea:	pop    es
  406eeb:	or     eax,0x2984ead1
  406ef0:	popf   
  406ef1:	dec    edx
  406ef2:	sbb    edi,DWORD PTR [ebx-0x3e162d65]
  406ef8:	dec    ecx
  406ef9:	sub    cl,BYTE PTR [eax+0x65ccf1c3]
  406eff:	jae    0x406f6a
  406f01:	jae    0x406f26
  406f03:	dec    edi
  406f04:	daa    
  406f05:	std    
  406f06:	or     al,0x8e
  406f08:	pop    ds
  406f09:	mov    ds:0xc47ca4b8,eax
  406f0e:	popa   
  406f0f:	lds    eax,FWORD PTR [eax-0x7abd6f1a]
  406f15:	cwde   
  406f16:	mov    esp,0x8c927d1f
  406f1b:	jmp    0x61bddc6e
  406f20:	mov    ch,0x63
  406f22:	sbb    ch,BYTE PTR [edx+0x7c4a0c4c]
  406f28:	push   ebp
  406f29:	pop    edx
  406f2a:	dec    eax
  406f2b:	lods   al,BYTE PTR ds:[esi]
  406f2c:	inc    esp
  406f2d:	add    al,0x3c
  406f2f:	sub    al,0xa0
  406f31:	repz not BYTE PTR [eax-0x6675ef4e]
  406f38:	sbb    bl,BYTE PTR [edi]
  406f3a:	adc    al,0x0
  406f3c:	hlt    
  406f3d:	mov    dl,0xdc
  406f3f:	lods   eax,DWORD PTR ds:[esi]
  406f40:	pop    ebx
  406f41:	xor    al,0xb
  406f43:	(bad)  [ebp-0x38e15002]
  406f49:	ja     0x406ef0
  406f4b:	jmp    0x5bb8:0x5e7bcc85
  406f52:	xchg   esi,ebx
  406f54:	sbb    BYTE PTR [ebx],al
  406f56:	int3   
  406f57:	sbb    eax,0x805b7941
  406f5c:	xor    dh,bh
  406f5e:	or     al,0xc5
  406f60:	sbb    esi,DWORD PTR [eax]
  406f62:	out    dx,al
  406f63:	adc    esp,DWORD PTR [edx-0x35]
  406f66:	in     eax,dx
  406f67:	pop    ds
  406f68:	sbb    al,0x2
  406f6a:	popf   
  406f6b:	push   eax
  406f6c:	lds    eax,FWORD PTR [edi]
  406f6e:	pop    es
  406f6f:	cs pop ds
  406f71:	mov    ebx,0x38b600ad
  406f76:	aas    
  406f77:	mov    edx,0xa8841732
  406f7c:	ins    BYTE PTR es:[edi],dx
  406f7d:	jne    0x406f9f
  406f7f:	leave  
  406f80:	mov    eax,DWORD PTR [esi]
  406f82:	dec    edx
  406f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f84:	push   ss
  406f85:	add    eax,0x3be32522
  406f8a:	imul   ebp,eax,0x76
  406f8d:	sub    al,0x24
  406f8f:	jmp    0x406f47
  406f91:	rcr    al,cl
  406f93:	adc    DWORD PTR [ebx],edi
  406f95:	pop    esp
  406f96:	jo     0x407011
  406f98:	pop    edx
  406f99:	xlat   BYTE PTR ds:[ebx]
  406f9a:	dec    ecx
  406f9b:	gs cmp ah,BYTE PTR es:[ecx-0x55]
  406fa0:	std    
  406fa1:	inc    DWORD PTR [edi-0xbd35a83]
  406fa7:	iret   
  406fa8:	gs pop esp
  406faa:	(bad)  
  406fab:	bound  esp,QWORD PTR [ebx+0x5bb079b1]
  406fb1:	adc    BYTE PTR [ecx],dl
  406fb3:	push   ecx
  406fb4:	std    
  406fb5:	jne    0x406ffc
  406fb7:	add    DWORD PTR [edx+0x5ed03f4a],esp
  406fbd:	enter  0x1af4,0xbc
  406fc1:	jmp    0x406fdd
  406fc3:	scas   eax,DWORD PTR es:[edi]
  406fc4:	loope  0x406ff9
  406fc6:	or     esp,0xced3dbe3
  406fcc:	xor    dh,cl
  406fce:	push   ecx
  406fcf:	ss (bad) 
  406fd1:	ficom  DWORD PTR [ecx+0x365b767f]
  406fd7:	xchg   esp,eax
  406fd8:	retf   
  406fd9:	jg     0x406f6a
  406fdb:	(bad)  
  406fdc:	popaw  
  406fde:	addps  xmm2,XMMWORD PTR [edx+0x25]
  406fe2:	gs jns 0x407019
  406fe5:	sub    al,0x3
  406fe7:	xor    eax,0x47a59589
  406fec:	or     dh,BYTE PTR [esp+edx*1+0x17]
  406ff0:	call   0x1620a68a
  406ff5:	mov    WORD PTR [ebp-0x25569bc1],ss
  406ffb:	push   ss
  406ffc:	out    0x91,al
  406ffe:	cmp    ch,al
  407000:	mov    bl,ah
  407002:	add    ah,bl
  407004:	mov    ecx,0x99936b12
  407009:	bound  eax,QWORD PTR [eax]
  40700b:	xchg   DWORD PTR [ebx+edi*8-0x5eff5ae5],eax
  407012:	sub    DWORD PTR [ebx+0x28],0x8f31f150
  407019:	xchg   edx,eax
  40701a:	adc    BYTE PTR [edi],dl
  40701c:	cmc    
  40701d:	fld    DWORD PTR [ecx-0x5cb2ee98]
  407023:	push   esp
  407024:	jl     0x407029
  407026:	dec    ebx
  407027:	cld    
  407028:	and    dl,BYTE PTR [edi+0x8386d7b]
  40702e:	(bad)  
  407030:	xlat   BYTE PTR ds:[ebx]
  407031:	adc    ebx,edx
  407033:	jae    0x406fe1
  407035:	aam    0x3c
  407037:	aam    0xf4
  407039:	int3   
  40703a:	push   es
  40703b:	(bad)
  40703e:	mov    ds:0xf7f3aa3b,al
  407043:	inc    esi
  407044:	inc    ebx
  407045:	das    
  407046:	or     ebp,DWORD PTR [edx+0x19]
  407049:	xor    DWORD PTR [edi-0x2344a822],edx
  40704f:	retf   
  407050:	outs   dx,DWORD PTR ds:[esi]
  407051:	or     ecx,ecx
  407053:	cmp    DWORD PTR [edx+0x37],ebx
  407056:	ds (bad) 
  407058:	in     eax,0x82
  40705a:	jmp    0x40702c
  40705c:	lods   eax,DWORD PTR ds:[esi]
  40705d:	bound  esp,QWORD PTR [eax+0x2cd84c61]
  407063:	imul   eax,esp,0xffffffbf
  407066:	daa    
  407067:	push   0x74e9cd38
  40706c:	push   ecx
  40706d:	mov    ecx,ebx
  40706f:	shr    BYTE PTR [ebx-0x78],0xf7
  407073:	imul   ecx,DWORD PTR ds:0xd21fd8d2,0xffffffaa
  40707a:	sbb    eax,0x1c13d392
  40707f:	xchg   esp,eax
  407080:	and    eax,0x3dd388b4
  407085:	sub    BYTE PTR [edx],cl
  407087:	xchg   esi,eax
  407088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407089:	cmp    al,0x82
  40708b:	daa    
  40708c:	into   
  40708d:	rcr    BYTE PTR [edi-0x70],0x61
  407091:	push   esi
  407092:	dec    edx
  407093:	imul   esi,DWORD PTR ds:0xd633c5bc,0x6fbfbe1a
  40709d:	mov    ebx,0xb013c7a5
  4070a2:	xchg   ebp,eax
  4070a3:	ins    DWORD PTR es:[edi],dx
  4070a4:	pusha  
  4070a5:	xchg   esp,eax
  4070a6:	add    DWORD PTR [edx+0x6320c7e7],edx
  4070ac:	add    eax,0x50a66e0e
  4070b1:	cmc    
  4070b2:	int3   
  4070b3:	js     0x407043
  4070b5:	into   
  4070b6:	dec    ecx
  4070b7:	mov    cl,0x9e
  4070b9:	ss pop ebx
  4070bb:	inc    esp
  4070bc:	push   0x46
  4070be:	arpl   ax,bx
  4070c0:	in     al,dx
  4070c1:	sbb    ch,BYTE PTR [ebp-0x6f]
  4070c4:	jne    0x407059
  4070c6:	clc    
  4070c7:	ds add eax,0x8e3d6b2f
  4070cd:	push   esi
  4070ce:	shr    DWORD PTR [ecx-0x10],cl
  4070d1:	loope  0x40706e
  4070d3:	int3   
  4070d4:	jmp    0x407084
  4070d6:	test   edx,edi
  4070d8:	sbb    dh,al
  4070da:	imul   edx,DWORD PTR [ebx+0x34c3ac85],0xf411c1de
  4070e4:	mov    ch,0xa3
  4070e6:	ins    DWORD PTR es:[edi],dx
  4070e7:	inc    esi
  4070e8:	sysret 
  4070ea:	pusha  
  4070eb:	sbb    eax,0xbe0c7a1d
  4070f0:	push   edi
  4070f1:	adc    al,0x7f
  4070f3:	lahf   
  4070f4:	inc    esi
  4070f5:	push   0xbe3ca0e0
  4070fa:	in     eax,dx
  4070fb:	fs push ebx
  4070fd:	nop
  4070fe:	adc    eax,0x34274be6
  407103:	and    al,0xc9
  407105:	hlt    
  407106:	adc    DWORD PTR [edi+0x78e94e8d],ebx
  40710c:	or     edx,DWORD PTR ds:0x7d2a8ace
  407112:	sbb    edi,DWORD PTR [eax-0x52]
  407115:	mov    cl,0x91
  407117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407118:	out    dx,al
  407119:	sbb    eax,0x506dd06c
  40711e:	or     BYTE PTR es:[eax-0x30],dh
  407122:	icebp  
  407123:	es loopne 0x407176
  407126:	hlt    
  407127:	mov    al,0xa5
  407129:	jno    0x407163
  40712b:	imul   ebp,esp,0x57
  40712e:	mov    al,0xe6
  407130:	shl    DWORD PTR [ebx+0x56ff5518],0x5a
  407137:	jb     0x40710b
  407139:	cmc    
  40713a:	cdq    
  40713b:	daa    
  40713c:	xor    eax,edi
  40713e:	pusha  
  40713f:	fcomp  DWORD PTR [edi]
  407141:	fist   DWORD PTR [esi+0x4cb1a5a5]
  407147:	stos   DWORD PTR es:[edi],eax
  407148:	push   ebp
  407149:	outs   dx,DWORD PTR ds:[esi]
  40714a:	xor    BYTE PTR [eiz*1-0x2a66ab4c],cl
  407151:	push   ds
  407152:	mov    bl,0xf9
  407154:	cmp    esp,DWORD PTR [ebx+0x5e]
  407157:	push   ebp
  407158:	nop
  407159:	cwde   
  40715a:	lahf   
  40715b:	icebp  
  40715c:	adc    bh,BYTE PTR [edx-0x9ebbb0d]
  407162:	add    DWORD PTR [edx],edi
  407164:	bound  edx,QWORD PTR [ecx-0x4a8cf828]
  40716a:	sbb    DWORD PTR [edx-0x37],edi
  40716d:	ret    
  40716e:	repnz adc BYTE PTR fs:[esi],bl
  407172:	sbb    ch,ch
  407174:	stc    
  407175:	in     eax,0x9a
  407177:	ret    
  407178:	xchg   DWORD PTR [eax+edi*8-0x2c2ebb10],edx
  40717f:	cmp    DWORD PTR [edx],0x6a
  407182:	cli    
  407183:	popa   
  407184:	cs mov ecx,0xb7c6cc37
  40718a:	xchg   esi,eax
  40718b:	xchg   edx,eax
  40718c:	mov    edx,0x63c32c8b
  407191:	and    DWORD PTR [ebp+0x6580221],0x1903f139
  40719b:	fisttp QWORD PTR [ecx-0x5be1ce88]
  4071a1:	sub    ah,BYTE PTR [ebx+0x60]
  4071a4:	mov    dh,0x5a
  4071a6:	mov    esi,0xd081a680
  4071ab:	call   0x4b09:0xf0aba195
  4071b2:	stos   BYTE PTR es:[edi],al
  4071b3:	cmp    eax,0x146fdf64
  4071b8:	xchg   ebx,eax
  4071b9:	mov    al,0xf2
  4071bb:	pop    ss
  4071bc:	pushw  cs
  4071be:	dec    ebx
  4071bf:	imul   edx,ebp,0x73d51944
  4071c5:	jmp    0x4071db
  4071c7:	mov    DWORD PTR [ebx],ecx
  4071c9:	stos   DWORD PTR es:[edi],eax
  4071ca:	xor    dl,BYTE PTR cs:[edx]
  4071cd:	arpl   WORD PTR [ebx],bp
  4071cf:	jns    0x4071d1
  4071d1:	lods   eax,DWORD PTR ds:[esi]
  4071d2:	lds    eax,FWORD PTR [edi+0x78]
  4071d5:	ffree  st(3)
  4071d7:	pop    edi
  4071d8:	pop    ebp
  4071d9:	int    0x3d
  4071db:	ins    DWORD PTR es:[edi],dx
  4071dc:	cwde   
  4071dd:	ror    ah,1
  4071df:	ud2    
  4071e1:	sbb    eax,0x7e4730df
  4071e6:	mov    BYTE PTR [ebp-0xb],ah
  4071e9:	push   ebx
  4071ea:	(bad)  
  4071eb:	out    dx,eax
  4071ec:	or     eax,DWORD PTR [esi]
  4071ee:	cmp    al,0x6b
  4071f0:	xchg   BYTE PTR [edx+0x20e7cc53],dl
  4071f6:	xor    DWORD PTR [ecx+0x53],esi
  4071f9:	call   0x372b003d
  4071fe:	push   0xffffffa5
  407200:	pop    ecx
  407201:	jg     0x4071cf
  407203:	jecxz  0x4071ae
  407205:	pop    ss
  407206:	rcl    DWORD PTR [ecx+edi*1],1
  407209:	fist   WORD PTR [edi]
  40720b:	jmp    0x136e41c2
  407210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407211:	icebp  
  407212:	mov    DWORD PTR [ebp+0x5dcd04af],esp
  407218:	xchg   ebp,eax
  407219:	fadd   QWORD PTR ds:[edi]
  40721c:	fld    DWORD PTR [ecx-0x31]
  40721f:	pop    ebx
  407220:	ret    
  407221:	jnp    0x40728c
  407223:	mov    al,ds:0x4a247cf8
  407228:	xchg   ebx,eax
  407229:	loop   0x40720f
  40722b:	inc    edx
  40722c:	mov    ds:0x3fce37bc,eax
  407231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407232:	sbb    eax,0x42ac4a06
  407237:	jl     0x83485d15
  40723d:	lea    esp,[ecx-0x2a]
  407240:	div    BYTE PTR [esi-0xe74cd59]
  407246:	add    eax,DWORD PTR [esi]
  407248:	push   cs
  407249:	push   esp
  40724a:	jno    0x407260
  40724c:	mov    WORD PTR [ebx+0x478e29e],ds
  407252:	xchg   ebx,eax
  407253:	add    al,0xb
  407255:	hlt    
  407256:	popa   
  407257:	iret   
  407258:	sub    ebp,DWORD PTR [esi-0x17b8831]
  40725e:	inc    ebx
  40725f:	add    edx,esi
  407261:	and    dh,bh
  407263:	rcl    DWORD PTR [edi],1
  407265:	aad    0x4c
  407267:	test   eax,0x42a360ee
  40726c:	push   ss
  40726d:	in     al,dx
  40726e:	cs call 0xcd54f878
  407274:	and    eax,0x6209f3dd
  407279:	push   0xfffffff3
  40727b:	sub    BYTE PTR [eax+0x1dcc8315],ah
  407281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407282:	mov    bh,0x74
  407284:	cmc    
  407285:	sbb    al,0x4c
  407287:	cwde   
  407288:	add    al,0x6
  40728a:	or     cl,cl
  40728c:	sub    BYTE PTR [eax+0x62e5ae3b],dl
  407292:	enter  0x75fe,0xe4
  407296:	jns    0x407265
  407298:	cli    
  407299:	fld    QWORD PTR [edx+0x4d7c4ebc]
  40729f:	jb     0x407242
  4072a1:	dec    esi
  4072a2:	in     eax,dx
  4072a3:	aaa    
  4072a4:	pop    ebp
  4072a5:	aad    0x57
  4072a7:	inc    eax
  4072a8:	jnp    0x4072cf
  4072aa:	test   al,0x2c
  4072ac:	lods   eax,DWORD PTR ds:[esi]
  4072ad:	mov    ds:0x98993f6e,al
  4072b2:	(bad)
  4072b5:	mov    ch,bl
  4072b7:	sub    BYTE PTR [esi+0xf],dl
  4072ba:	cmp    al,0x75
  4072bc:	int    0xf5
  4072be:	mov    esi,0xd4101550
  4072c3:	xchg   ebx,eax
  4072c4:	ret    0xb444
  4072c7:	ror    BYTE PTR [eax],1
  4072c9:	and    al,0x17
  4072cb:	in     eax,dx
  4072cc:	imul   ecx,DWORD PTR [edx-0x7bea1ca5],0x3f
  4072d3:	imul   BYTE PTR [ecx]
  4072d5:	fbstp  TBYTE PTR [esi]
  4072d7:	xchg   DWORD PTR [ebx+eiz*2],edx
  4072da:	out    0xa7,al
  4072dc:	rol    dl,cl
  4072de:	mov    DWORD PTR [edx],ebp
  4072e0:	in     al,0xd7
  4072e2:	jo     0x40733b
  4072e4:	sbb    eax,0xc7fac351
  4072e9:	out    0x2a,al
  4072eb:	pop    es
  4072ec:	push   DWORD PTR [edx+ecx*4]
  4072ef:	add    cl,BYTE PTR ds:0x724ad46f
  4072f5:	scas   al,BYTE PTR es:[edi]
  4072f6:	cmp    eax,0x935587b4
  4072fb:	or     esp,DWORD PTR [edx+0x55555b0b]
  407301:	lock xchg esp,eax
  407303:	test   eax,0xdf4425a9
  407308:	daa    
  407309:	jge    0x40736d
  40730b:	stc    
  40730c:	cmp    DWORD PTR [edi+edi*2],esi
  40730f:	dec    ebp
  407310:	popf   
  407311:	add    eax,0x8e146a72
  407316:	aas    
  407317:	fsubr  DWORD PTR [ecx+0x6b]
  40731a:	sbb    BYTE PTR [esi+0x67a115ea],cl
  407320:	push   0xddab5cfc
  407325:	sub    al,0x22
  407327:	sub    eax,DWORD PTR [esi]
  407329:	pop    ebp
  40732a:	add    ecx,ecx
  40732c:	pop    ecx
  40732d:	mov    ds:0xda722293,eax
  407332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407333:	ds imul edi,edx,0x7611cb6d
  40733a:	xchg   edi,eax
  40733b:	les    esp,FWORD PTR [ebx+ebp*1]
  40733e:	stos   DWORD PTR es:[edi],eax
  40733f:	xor    DWORD PTR [edi-0x46],ecx
  407342:	fcomp  st(5)
  407344:	inc    ebx
  407345:	xchg   DWORD PTR [edi+ecx*8-0x33fdac37],esp
  40734c:	pop    ss
  40734d:	(bad)  
  40734f:	stos   BYTE PTR es:[edi],al
  407350:	ror    DWORD PTR [edx+eiz*4],0xa2
  407354:	mov    ds:0xe600cd00,al
  407359:	sub    DWORD PTR [edi+0x6ecdb3ac],edx
  40735f:	ret    
  407360:	arpl   WORD PTR [ebx],ax
  407362:	and    DWORD PTR [ebp+0x4f9a9f60],esp
  407368:	xchg   ebx,eax
  407369:	push   edi
  40736a:	xlat   BYTE PTR ds:[ebx]
  40736b:	adc    DWORD PTR [ecx],ecx
  40736d:	pop    esi
  40736e:	adc    edi,esi
  407370:	xchg   edi,eax
  407371:	ja     0x40734a
  407373:	jecxz  0x40737f
  407375:	std    
  407376:	popf   
  407377:	data16 adc bh,BYTE PTR ds:0x3e17d1e6
  40737e:	lds    ebx,FWORD PTR [ebx]
  407380:	ret    0x3995
  407383:	jns    0x407325
  407385:	fadd   st(2),st
  407387:	xchg   BYTE PTR [edx],ch
  407389:	outs   dx,BYTE PTR ds:[esi]
  40738a:	pop    eax
  40738b:	pusha  
  40738c:	xchg   edi,eax
  40738d:	mov    dl,0xfa
  40738f:	int3   
  407390:	jae    0x407403
  407392:	push   edi
  407393:	xchg   edx,eax
  407394:	jmp    0xcd4ce03f
  407399:	mov    bh,0xfd
  40739b:	idiv   ebx
  40739d:	or     DWORD PTR ds:0xab6f,0x80fbbcd6
  4073a6:	(bad)  
  4073a7:	fimul  DWORD PTR [ecx]
  4073a9:	xchg   ecx,edx
  4073ab:	test   DWORD PTR [ecx-0x19],edi
  4073ae:	add    DWORD PTR [esi+0x6a],0x15
  4073b2:	fbstp  TBYTE PTR [esi-0x100c06a9]
  4073b8:	fld    TBYTE PTR [edi]
  4073ba:	outs   dx,DWORD PTR ds:[esi]
  4073bb:	lods   eax,DWORD PTR ds:[esi]
  4073bc:	ror    BYTE PTR [esi+esi*1],cl
  4073bf:	mov    BYTE PTR [eax],dl
  4073c1:	sbb    DWORD PTR [ebp+0x45],edi
  4073c4:	cld    
  4073c5:	xchg   esp,eax
  4073c6:	(bad)  
  4073c7:	mov    edx,0x4faed8a
  4073cc:	shr    DWORD PTR [edx-0x77],1
  4073cf:	mov    ?,WORD PTR [edx]
  4073d1:	rcl    BYTE PTR [edi-0x48f3ce0],cl
  4073d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073d8:	fidiv  WORD PTR [ecx]
  4073da:	push   esi
  4073db:	sbb    al,0xd
  4073dd:	pop    ecx
  4073de:	xlat   BYTE PTR ds:[ebx]
  4073df:	mov    dh,0x9b
  4073e1:	and    cl,BYTE PTR [edi-0x51]
  4073e4:	push   ss
  4073e5:	in     eax,dx
  4073e6:	fs sahf 
  4073e8:	test   eax,0x825a86de
  4073ed:	and    DWORD PTR [edi],ebx
  4073ef:	xchg   ebx,edx
  4073f1:	popa   
  4073f2:	jo     0x4073a7
  4073f4:	push   eax
  4073f5:	pop    esi
  4073f6:	sub    DWORD PTR [eax+0x357717bf],esi
  4073fc:	dec    eax
  4073fd:	xchg   ebx,eax
  4073fe:	aas    
  4073ff:	jge    0x4073d7
  407401:	loop   0x4073ef
  407403:	retf   0xab26
  407406:	or     BYTE PTR [ecx+0x37160d0],dl
  40740c:	and    DWORD PTR [ebp+ecx*2-0x4a5afc40],ecx
  407413:	sbb    eax,0xdf11cfaa
  407418:	add    BYTE PTR [ebp+0x502ae6aa],dl
  40741e:	sbb    al,0xcc
  407420:	les    edx,FWORD PTR [esi]
  407422:	cmp    al,BYTE PTR [esi]
  407424:	call   0x6825:0x6ac900be
  40742b:	fdivr  st,st(4)
  40742d:	add    al,BYTE PTR [ebx-0x40b3e9d2]
  407433:	rep ins DWORD PTR es:[edi],dx
  407435:	jno    0x407413
  407437:	cld    
  407438:	je     0x40745d
  40743a:	adc    esi,DWORD PTR [eax-0xd]
  40743d:	xlat   BYTE PTR ds:[ebx]
  40743e:	retf   
  40743f:	retf   0x598e
  407442:	or     DWORD PTR [edi+0x1f],eax
  407445:	push   ds
  407446:	inc    ebx
  407447:	push   cs
  407448:	jecxz  0x407440
  40744a:	popa   
  40744b:	xor    eax,0x50c672d
  407450:	scas   eax,DWORD PTR es:[edi]
  407451:	cmc    
  407452:	(bad)  
  407453:	int    0x4
  407455:	inc    BYTE PTR [esp+ebp*4-0x5c]
  407459:	push   0xc87b9de5
  40745e:	nop
  40745f:	data16 rol BYTE PTR [edx-0x4],0x5e
  407464:	ds inc edi
  407466:	dec    esp
  407467:	jno    0x4074ba
  407469:	test   al,bl
  40746b:	lahf   
  40746c:	data16 jnp 0x40746f
  40746f:	pop    ecx
  407470:	mov    dh,0xf6
  407472:	pop    esi
  407473:	pushf  
  407474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407475:	or     bh,al
  407477:	dec    edx
  407478:	push   sp
  40747a:	and    DWORD PTR [eax*8+0x45a87cd9],0xc60b1358
  407485:	sub    bh,BYTE PTR [eax+0x3f]
  407488:	adc    DWORD PTR ds:0x48775a2e,eax
  40748e:	jae    0x4074df
  407490:	mov    WORD PTR [ebx+0x4],fs
  407493:	sub    eax,0x73df2b2e
  407498:	xor    ecx,edi
  40749a:	inc    ecx
  40749b:	jmp    0x4074e2
  40749d:	push   0x4ab6ed4c
  4074a2:	shr    DWORD PTR [ecx-0x63],0x5f
  4074a6:	push   ss
  4074a7:	fwait
  4074a8:	pop    ebx
  4074a9:	inc    edi
  4074aa:	(bad)  
  4074ab:	jmp    0xc0ad:0x9c66f8c2
  4074b2:	cmp    DWORD PTR ds:0x33d972,ebp
  4074b8:	jecxz  0x4074a7
  4074ba:	xchg   ebx,eax
  4074bb:	xchg   dl,bh
  4074bd:	int3   
  4074be:	arpl   WORD PTR [eax-0x13b02bab],cx
  4074c4:	dec    esi
  4074c5:	sub    BYTE PTR ds:0xbb2a7a86,0xb3
  4074cc:	popa   
  4074cd:	ja     0x407527
  4074cf:	or     dh,bh
  4074d1:	mov    eax,ds:0xe86cf038
  4074d6:	xchg   ebp,eax
  4074d7:	sbb    al,0x51
  4074d9:	sub    ah,BYTE PTR ds:0x8d384529
  4074df:	or     al,0xe3
  4074e1:	lods   al,BYTE PTR ds:[esi]
  4074e2:	inc    eax
  4074e3:	dec    edi
  4074e4:	and    DWORD PTR [ebp-0x4c],0x7ec2da89
  4074eb:	jbe    0x40752a
  4074ed:	daa    
  4074ee:	xchg   edx,eax
  4074ef:	jne    0x407564
  4074f1:	pop    ebx
  4074f2:	push   ebx
  4074f3:	daa    
  4074f4:	call   0xc615:0xb949bdcb
  4074fb:	(bad)  
  4074fc:	out    0x3e,eax
  4074fe:	sar    edx,0xed
  407501:	and    ah,BYTE PTR [eax+0x9]
  407504:	mov    esp,0x5b1a4688
  407509:	add    eax,0x8559581d
  40750e:	jo     0x4074be
  407510:	frstpm(287 only) 
  407512:	jo     0x40751b
  407514:	lods   al,BYTE PTR ds:[esi]
  407515:	jecxz  0x407497
  407517:	es mov bh,0x43
  40751a:	xlat   BYTE PTR ds:[ebx]
  40751b:	cmp    bh,ah
  40751d:	dec    edi
  40751e:	xor    al,BYTE PTR [edx]
  407520:	inc    dx
  407522:	nop
  407523:	xor    bh,cl
  407525:	pop    ds
  407526:	ficomp WORD PTR [edi]
  407528:	loopne 0x407541
  40752a:	fnsave [eax+eax*1]
  40752d:	rcl    BYTE PTR [edx-0x22],cl
  407530:	test   ah,0x97
  407533:	jbe    0x40751b
  407535:	out    dx,eax
  407536:	neg    DWORD PTR [esi-0x5e]
  407539:	xor    edi,esp
  40753b:	(bad)  
  40753c:	int    0xba
  40753e:	jne    0x40757b
  407540:	and    ecx,DWORD PTR [edi-0x1d]
  407543:	jle    0x4075b6
  407545:	aaa    
  407546:	mov    esi,0xaf7a36b1
  40754b:	add    al,0x75
  40754d:	dec    esp
  40754e:	mov    ah,0x4b
  407550:	sub    BYTE PTR [edi],dh
  407552:	shl    DWORD PTR [ebx+ebx*8+0x7572853d],1
  407559:	lea    edi,ds:[edx+0x3b]
  40755d:	rol    BYTE PTR [bx+si-0x53],0x91
  407562:	add    al,0x7b
  407564:	mov    ah,0x95
  407566:	mov    ebp,DWORD PTR cs:[esi+esi*2-0x36]
  40756b:	fsubr  DWORD PTR [edx-0xed8e1d1]
  407571:	xchg   BYTE PTR [edx+0x561d08fc],bl
  407577:	mov    ds:0x3abd9f9e,al
  40757c:	pop    ds
  40757d:	jmp    0x875d:0xf91149fa
  407584:	pop    ds
  407585:	and    DWORD PTR [eax+ecx*4+0x65],ebx
  407589:	jbe    0x40752d
  40758b:	sub    BYTE PTR [esi+esi*1-0x10],0xb3
  407590:	enter  0x9c50,0x2d
  407594:	dec    ebx
  407595:	pop    ds
  407596:	xor    DWORD PTR [esi-0x45],edx
  407599:	jb     0x407530
  40759b:	(bad)  
  40759c:	jmp    0xde4a4441
  4075a1:	lahf   
  4075a2:	cmp    esi,esi
  4075a4:	mov    dl,0xd3
  4075a6:	and    cl,BYTE PTR [edx]
  4075a8:	aas    
  4075a9:	inc    edx
  4075aa:	fs pushf 
  4075ac:	cmc    
  4075ad:	xor    bh,BYTE PTR [edi+0x70cc1284]
  4075b3:	mov    bl,0x82
  4075b5:	mov    WORD PTR [ebp-0x42],fs
  4075b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075b9:	jecxz  0x407588
  4075bb:	mov    ds:0x572178c5,eax
  4075c0:	mov    al,ds:0xf91e3919
  4075c5:	mov    ebp,0x75f9c916
  4075ca:	or     DWORD PTR [ecx-0x7a9b9328],ebp
  4075d0:	outs   dx,BYTE PTR ds:[esi]
  4075d1:	dec    ebp
  4075d2:	sub    al,0x5a
  4075d4:	cdq    
  4075d5:	sbb    eax,DWORD PTR ds:0x966806ff
  4075db:	dec    ebp
  4075dc:	pop    esp
  4075dd:	cs dec ebp
  4075df:	ds add al,0x98
  4075e2:	stc    
  4075e3:	hlt    
  4075e4:	push   ebp
  4075e5:	(bad)  [esi]
  4075e7:	push   DWORD PTR [edi]
  4075e9:	cmp    BYTE PTR [edi+0x5d],cl
  4075ec:	mov    ecx,0x8e3b5947
  4075f1:	push   ecx
  4075f2:	outs   dx,BYTE PTR ds:[esi]
  4075f3:	cdq    
  4075f4:	bound  esp,QWORD PTR [eax-0x39]
  4075f7:	fsubr  QWORD PTR [edi]
  4075f9:	push   edi
  4075fa:	popa   
  4075fb:	inc    esp
  4075fc:	cdq    
  4075fd:	rcl    BYTE PTR [edx],cl
  4075ff:	ins    BYTE PTR es:[edi],dx
  407600:	std    
  407601:	pop    ss
  407602:	mov    al,0xa8
  407604:	clc    
  407605:	xor    edx,DWORD PTR [eax+ebx*1+0x4b2f23af]
  40760c:	imul   edi,DWORD PTR [edx+0x8],0x13c9d05c
  407613:	(bad)  
  407614:	xlat   BYTE PTR ds:[ebx]
  407615:	test   BYTE PTR [ebp-0x4b],cl
  407618:	mov    al,0x41
  40761a:	stc    
  40761b:	push   0x498f4d00
  407620:	xchg   edi,eax
  407621:	lds    eax,FWORD PTR [edi-0x66]
  407624:	mov    ah,0xf2
  407626:	arpl   WORD PTR [eax],sp
  407628:	bound  eax,QWORD PTR [edx+0x73]
  40762b:	sbb    ch,BYTE PTR [ebp-0x2c6b40d4]
  407631:	xor    ch,BYTE PTR [esi-0x290b172]
  407637:	aaa    
  407638:	cli    
  407639:	lahf   
  40763a:	pop    ds
  40763b:	int    0xb
  40763d:	retf   
  40763e:	mov    ds:0x8687942f,eax
  407643:	mov    ebp,esp
  407645:	fwait
  407646:	sbb    eax,0x6eeec6f7
  40764b:	or     BYTE PTR [ebp-0x2c12b408],dh
  407651:	mov    cl,BYTE PTR [edx+eax*4]
  407654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407655:	nop
  407656:	pushf  
  407657:	adc    esp,edi
  407659:	adc    cl,0x8b
  40765c:	cmc    
  40765d:	(bad)  
  40765e:	shl    BYTE PTR [esi],cl
  407660:	(bad)  
  407661:	xchg   ebx,eax
  407662:	fs hlt 
  407664:	dec    edi
  407665:	and    eax,0xddd19258
  40766a:	mov    ebx,0xf21bced0
  40766f:	mov    ds:0xc03ab9ae,eax
  407674:	shl    DWORD PTR [esi-0x118ee35c],cl
  40767a:	aaa    
  40767b:	aam    0x5f
  40767d:	push   0x2346f9e7
  407682:	popa   
  407683:	cmp    dh,BYTE PTR [esi+ebx*1-0x3200ee2]
  40768a:	jne    0x40766e
  40768c:	lods   eax,DWORD PTR ds:[esi]
  40768d:	aam    0x1c
  40768f:	je     0x407701
  407691:	cmp    bl,al
  407693:	fist   WORD PTR [eax]
  407695:	add    esp,edx
  407697:	loope  0x407621
  407699:	ret    0xf9c0
  40769c:	daa    
  40769d:	pushf  
  40769e:	enter  0xe39f,0xe7
  4076a2:	sbb    dh,dl
  4076a4:	cdq    
  4076a5:	int    0x3
  4076a7:	jno    0x407704
  4076a9:	add    al,0xdf
  4076ab:	rcl    al,0xa0
  4076ae:	test   edx,0x694cfa94
  4076b4:	aaa    
  4076b5:	pop    edx
  4076b6:	push   eax
  4076b7:	cmp    ch,al
  4076b9:	dec    esp
  4076ba:	dec    eax
  4076bb:	sub    eax,0x9d90a13f
  4076c0:	xor    cl,BYTE PTR [edi-0x21e3a859]
  4076c6:	inc    edx
  4076c7:	jecxz  0x4076cb
  4076c9:	out    0x46,eax
  4076cb:	adc    BYTE PTR [eax+0x73701620],bl
  4076d1:	mov    cl,0x86
  4076d3:	not    BYTE PTR [eax-0x12]
  4076d6:	xchg   edi,eax
  4076d7:	add    BYTE PTR [ebx],al
  4076d9:	sbb    al,BYTE PTR [ecx-0x19]
  4076dc:	sbb    eax,0x760b46a4
  4076e1:	jecxz  0x407689
  4076e3:	fstp   TBYTE PTR [edi-0x4f706f6f]
  4076e9:	push   ss
  4076ea:	sub    al,0x77
  4076ed:	and    al,0x75
  4076ef:	(bad)  
  4076f0:	test   eax,0x5bbc4a4b
  4076f5:	out    dx,al
  4076f6:	aaa    
  4076f7:	push   0x37
  4076f9:	out    dx,al
  4076fa:	int3   
  4076fb:	add    DWORD PTR [ecx-0x15a89d3f],edx
  407701:	sub    eax,DWORD PTR [ebx+0x548ac67c]
  407707:	cs cs pushf 
  40770a:	pusha  
  40770b:	mov    cs,ebx
  40770d:	xchg   esi,eax
  40770e:	es push ebp
  407710:	cmp    bl,BYTE PTR [ecx]
  407712:	(bad)  [ebx-0x6cc05a07]
  407718:	and    BYTE PTR [esi],0x13
  40771b:	sbb    al,0xbd
  40771d:	sub    al,0xad
  40771f:	stos   DWORD PTR es:[edi],eax
  407720:	ret    0xf450
  407723:	sbb    DWORD PTR [edi-0x57],edi
  407726:	xor    esi,DWORD PTR [eax+0x3739d1e1]
  40772c:	addr16 cmc 
  40772e:	das    
  40772f:	aad    0x65
  407731:	mov    bl,0x1c
  407733:	pop    edi
  407734:	popf   
  407735:	int    0x83
  407737:	add    eax,DWORD PTR [eax]
  407739:	or     eax,0xd1cd34fb
  40773e:	nop
  40773f:	or     dh,BYTE PTR [ebp+0x2e]
  407742:	fcomp  DWORD PTR [edi+ecx*8]
  407745:	xchg   DWORD PTR [ecx],esi
  407747:	sub    al,0xa8
  407749:	pop    ebx
  40774a:	loopne 0x407709
  40774c:	test   DWORD PTR [eax+0x33ccc0a5],ebx
  407752:	or     DWORD PTR [ebx-0x3e13fdc1],ecx
  407758:	and    DWORD PTR [eax+0x7c01e636],edx
  40775e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40775f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407760:	adc    ch,BYTE PTR [ebx+0x52]
  407763:	jle    0x4076ff
  407765:	popa   
  407766:	(bad)  
  407767:	cmp    esp,DWORD PTR [edi]
  407769:	clc    
  40776a:	mov    eax,ds:0xdf38b69f
  40776f:	in     eax,dx
  407770:	jmp    0x8f8ef9b5
  407775:	cmp    BYTE PTR [ebx],dh
  407777:	inc    ebp
  407778:	jb     0x4077a7
  40777a:	test   al,0x64
  40777c:	cdq    
  40777d:	test   BYTE PTR [ebx-0x6e],dh
  407780:	outs   dx,BYTE PTR ds:[esi]
  407781:	dec    esp
  407782:	sub    bl,BYTE PTR [edx+0x6a]
  407785:	test   eax,0x603e5a00
  40778a:	jmp    0x8667a6cb
  40778f:	int    0xe7
  407791:	ds jmp 0xf78c:0x9d18708
  407799:	jno    0x407809
  40779b:	cmp    al,0x24
  40779d:	mov    eax,ds:0xeb9249a2
  4077a2:	add    eax,0xd1c7ac16
  4077a7:	sub    BYTE PTR [edx],0x80
  4077aa:	jbe    0x4077f1
  4077ac:	inc    ebx
  4077ad:	inc    esp
  4077ae:	adc    esp,DWORD PTR [edi+eiz*2-0x6d6b19f9]
  4077b5:	mov    eax,0x8995a64d
  4077ba:	ret    0x9aa9
  4077bd:	cmp    esi,DWORD PTR [ecx-0x62]
  4077c0:	cmp    DWORD PTR [edx+0x13],edi
  4077c3:	mov    eax,ds:0xe30c7f48
  4077c8:	stos   BYTE PTR es:[edi],al
  4077c9:	mov    dh,0xd3
  4077cb:	neg    DWORD PTR [eax+0x6e]
  4077ce:	mov    dl,0x30
  4077d0:	push   ecx
  4077d1:	(bad)  
  4077d2:	fadd   DWORD PTR [ecx]
  4077d4:	popa   
  4077d5:	lods   eax,DWORD PTR ds:[esi]
  4077d6:	adc    BYTE PTR [edi+0x65b6bb05],0x37
  4077dd:	cmp    eax,0xad30dde5
  4077e2:	int3   
  4077e3:	jge    0x4077dd
  4077e5:	imul   edx,DWORD PTR [ecx],0xa4820c98
  4077eb:	sub    dh,0x5d
  4077ee:	scas   al,BYTE PTR es:[edi]
  4077ef:	es retf 
  4077f1:	or     al,0x16
  4077f3:	pusha  
  4077f4:	dec    eax
  4077f5:	adc    BYTE PTR [esi+0x234a7204],al
  4077fb:	pop    eax
  4077fc:	std    
  4077fd:	dec    ebp
  4077fe:	in     eax,dx
  4077ff:	lahf   
  407800:	mov    dl,0x97
  407802:	bound  edx,QWORD PTR [edi-0x31]
  407805:	sbb    BYTE PTR [ebx],ah
  407807:	sub    eax,0x8834238b
  40780c:	cmp    ebp,DWORD PTR [edx+0x5a]
  40780f:	xchg   ebp,eax
  407810:	loope  0x40784e
  407812:	xlat   BYTE PTR ds:[ebx]
  407813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407814:	sub    edx,DWORD PTR [eax-0x74]
  407817:	jmp    0xc1b7:0xf7940fe9
  40781e:	fistp  WORD PTR [edi+0x5]
  407821:	outs   dx,BYTE PTR fs:[esi]
  407823:	or     DWORD PTR [edx+ebx*8-0x70],ebp
  407827:	iret   
  407828:	add    BYTE PTR [ecx],bl
  40782a:	neg    BYTE PTR [ebp+0x5a71b95a]
  407830:	in     eax,0x22
  407832:	mov    esi,0xa027ba1
  407837:	mov    al,0xe0
  407839:	sbb    bh,dh
  40783b:	xchg   edi,eax
  40783c:	or     eax,0xc851d9fe
  407841:	jne    0x407884
  407843:	cmp    BYTE PTR ds:0xa223e20d,dl
  407849:	out    dx,al
  40784a:	adc    edi,esi
  40784c:	pop    eax
  40784d:	dec    esp
  40784e:	jecxz  0x4078b2
  407850:	fmul   QWORD PTR [edx]
  407852:	aam    0xf5
  407854:	fimul  WORD PTR [ecx+ecx*8+0x689094f8]
  40785b:	pusha  
  40785c:	dec    edx
  40785d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40785e:	gs mov eax,0x1671daac
  407864:	sub    DWORD PTR [edi-0x2084b4d2],ebp
  40786a:	(bad)  
  40786b:	jge    0x407868
  40786d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40786e:	xchg   BYTE PTR [esi-0x4c],dl
  407871:	xor    BYTE PTR [ecx+esi*2],ch
  407874:	lock in al,dx
  407876:	sbb    dl,BYTE PTR es:[edx+0x7d516538]
  40787d:	dec    ecx
  40787e:	aad    0x35
  407880:	mov    dh,0xb9
  407882:	js     0x4078db
  407884:	popf   
  407885:	sti    
  407886:	add    DWORD PTR [ecx+0x66],0xffffffdc
  40788a:	aaa    
  40788b:	rcl    edi,0x7b
  40788e:	scas   eax,DWORD PTR es:[edi]
  40788f:	adc    eax,0xb6b1bd18
  407894:	pop    ss
  407895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407896:	sbb    DWORD PTR [ebx],ecx
  407898:	cmp    DWORD PTR [ecx],ecx
  40789a:	inc    eax
  40789b:	out    dx,eax
  40789c:	repz (bad) 
  40789f:	pop    eax
  4078a0:	mov    WORD PTR [esi],es
  4078a2:	fidivr WORD PTR [ebx+0x46e92bda]
  4078a8:	mov    al,ds:0x82521b6f
  4078ad:	jae    0x407876
  4078af:	lahf   
  4078b0:	xor    ebp,DWORD PTR [esi-0x5be7cae3]
  4078b6:	popw   ds
  4078b8:	xchg   esi,eax
  4078b9:	or     esp,ebp
  4078bb:	sbb    ecx,DWORD PTR [esi+0xa]
  4078be:	inc    ecx
  4078bf:	mov    ah,0x4
  4078c1:	ss jg  0x407883
  4078c4:	popf   
  4078c5:	jne    0x407855
  4078c7:	sub    DWORD PTR [edi+0x78],eax
  4078ca:	dec    edi
  4078cb:	cmp    edi,DWORD PTR [esi]
  4078cd:	or     BYTE PTR [ecx+0x4fb5547a],0x55
  4078d4:	cmp    al,0xa7
  4078d6:	jmp    0x3e81:0xc8a7d2fd
  4078dd:	inc    ecx
  4078de:	stos   DWORD PTR es:[edi],eax
  4078df:	outs   dx,BYTE PTR ds:[esi]
  4078e0:	push   ss
  4078e1:	mov    ebx,0x25ff6b18
  4078e6:	out    0x75,eax
  4078e8:	hlt    
  4078e9:	push   es
  4078ea:	cmp    bl,0x80
  4078ed:	push   cs
  4078ee:	ret    
  4078ef:	pop    edi
  4078f0:	adc    ah,dl
  4078f2:	sub    DWORD PTR [edx],0x3
  4078f5:	inc    ebx
  4078f6:	cwde   
  4078f7:	loop   0x40792b
  4078f9:	aaa    
  4078fa:	jne    0x407922
  4078fc:	jb     0x40795e
  4078fe:	lods   al,BYTE PTR ds:[esi]
  4078ff:	dec    ecx
  407900:	jmp    0x4078a1
  407902:	xor    ebx,edi
  407904:	pop    esp
  407905:	adc    BYTE PTR [edx-0x125c5500],al
  40790b:	(bad)  
  40790c:	sbb    eax,0x471874a4
  407911:	out    dx,al
  407912:	xor    DWORD PTR [eax+0x341952b9],ebx
  407918:	cmp    bh,BYTE PTR ds:0xaecd4656
  40791e:	push   ds
  40791f:	(bad)  
  407920:	aad    0xde
  407922:	jb     0x4078cc
  407924:	(bad)  
  407925:	jno    0x407910
  407927:	es (bad) 
  407929:	leave  
  40792a:	adc    al,0x2c
  40792c:	mov    ebx,0x738b3c54
  407931:	cmp    eax,0x3dae6460
  407936:	xor    bh,BYTE PTR [ebx+0x7637f9b]
  40793c:	mov    edi,0x4b5d6908
  407941:	(bad)  
  407942:	stc    
  407943:	imul   eax,DWORD PTR [ecx-0x7a],0x314f4af3
  40794a:	mov    BYTE PTR [eax+0x75],al
  40794d:	mov    dh,0x67
  40794f:	out    0x6b,al
  407951:	xlat   BYTE PTR ds:[ebx]
  407952:	inc    ebp
  407953:	sti    
  407954:	shr    bh,1
  407956:	jmp    0x5ecf095c
  40795b:	mov    ebp,0x9da1ab0
  407960:	popf   
  407961:	xor    al,0x6a
  407963:	xchg   esi,eax
  407964:	(bad)  
  407966:	fimul  WORD PTR [esi+0x5e]
  407969:	xchg   ebx,eax
  40796a:	cld    
  40796b:	mov    edi,0x12ddc952
  407970:	jecxz  0x40798c
  407972:	inc    edi
  407973:	jns    0x407994
  407975:	mov    BYTE PTR [ebp-0x5d],bh
  407978:	aas    
  407979:	mov    eax,0x7a372766
  40797e:	enter  0x1f01,0xbf
  407982:	hlt    
  407983:	iret   
  407984:	inc    ebp
  407985:	cmp    esi,ecx
  407987:	cmp    esp,DWORD PTR [edi]
  407989:	mov    edx,0x7ac6e193
  40798e:	or     ch,dh
  407990:	iret   
  407991:	jge    0x407940
  407993:	rcl    BYTE PTR [ebx-0x289c7653],1
  407999:	les    edx,FWORD PTR [ecx]
  40799b:	xor    al,0x66
  40799d:	repnz arpl cx,ax
  4079a0:	loope  0x407947
  4079a2:	mov    ch,0xe4
  4079a4:	mov    ebp,0x7a7c0fe7
  4079a9:	int3   
  4079aa:	nop
  4079ab:	adc    cl,cl
  4079ad:	rol    BYTE PTR [edx+eiz*8],0xac
  4079b1:	sub    ah,BYTE PTR [ebx-0x6c56c759]
  4079b7:	mov    ecx,0xe767e66a
  4079bc:	xchg   ecx,eax
  4079bd:	mov    esi,0xc7b0e334
  4079c2:	inc    edi
  4079c3:	adc    DWORD PTR [ebp+0x46],esi
  4079c6:	dec    eax
  4079c7:	addr16 push 0xffffffe8
  4079ca:	jmp    0x88277e63
  4079cf:	in     al,0xd5
  4079d1:	add    esp,DWORD PTR [edi]
  4079d3:	(bad)  
  4079d4:	jo     0x407992
  4079d6:	mov    eax,0x4ef69da1
  4079db:	sub    BYTE PTR [edi],al
  4079dd:	ins    DWORD PTR es:[edi],dx
  4079de:	in     eax,0xac
  4079e0:	test   BYTE PTR [edx-0x51],ch
  4079e3:	sbb    eax,0xb9b82f43
  4079e8:	ss je  0x407a20
  4079eb:	icebp  
  4079ec:	inc    esp
  4079ed:	lock call 0x1dc3:0x15ad56ef
  4079f5:	mov    ebp,0x8f14067d
  4079fa:	imul   ebx,DWORD PTR [ebx-0x79],0xe354c5e
  407a01:	lock sub eax,DWORD PTR [edi-0x75]
  407a05:	gs aas 
  407a07:	jns    0x407a0b
  407a09:	mov    bl,BYTE PTR [edi+0x11bba2d0]
  407a0f:	mov    ah,0xd8
  407a11:	cmp    eax,0x2288734f
  407a16:	iret   
  407a17:	sti    
  407a18:	(bad)  
  407a19:	ficomp DWORD PTR [esi+0x23]
  407a1c:	and    BYTE PTR [ecx+0x7d],cl
  407a1f:	aad    0xf7
  407a21:	push   esi
  407a22:	fldcw  WORD PTR [edi+0x7930c576]
  407a28:	push   ebx
  407a29:	mov    bl,0x24
  407a2b:	mov    ah,0xdf
  407a2d:	push   esp
  407a2e:	mov    esp,DWORD PTR [edi+ebp*1-0x7e]
  407a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a33:	bound  ebp,QWORD PTR [ecx+0x70]
  407a36:	icebp  
  407a37:	out    dx,eax
  407a38:	push   es
  407a39:	lods   al,BYTE PTR ds:[esi]
  407a3a:	shl    ah,0xe3
  407a3d:	scas   al,BYTE PTR es:[edi]
  407a3e:	mov    DWORD PTR ds:0x49b9f43c,eax
  407a44:	jns    0x4079da
  407a46:	jg     0x407a9e
  407a48:	outs   dx,BYTE PTR ds:[esi]
  407a49:	push   ebx
  407a4a:	(bad)  
  407a4b:	fstp   TBYTE PTR [ecx]
  407a4d:	dec    edx
  407a4e:	push   DWORD PTR [esp+ecx*2+0x27]
  407a52:	jae    0x407a04
  407a54:	popa   
  407a55:	or     DWORD PTR [eax+0x7d],0xffffffea
  407a59:	das    
  407a5a:	lods   al,BYTE PTR ds:[esi]
  407a5b:	in     eax,dx
  407a5c:	pop    edi
  407a5d:	pusha  
  407a5e:	imul   eax,DWORD PTR [edx],0xbab5166c
  407a64:	xchg   ebp,eax
  407a65:	rcl    BYTE PTR [ebp-0x13],0xb7
  407a69:	cmp    bh,BYTE PTR [edi+0x7c]
  407a6c:	cli    
  407a6d:	inc    ebx
  407a6e:	rcr    BYTE PTR [eiz*1+0x4426fcc1],cl
  407a75:	add    cl,ch
  407a77:	or     DWORD PTR [ebp-0x105e4ae9],0xd3fbb312
  407a81:	inc    edx
  407a82:	cmp    eax,0x23a9ba1
  407a87:	imul   eax,DWORD PTR [edi+0x72],0x4e55fc63
  407a8e:	jne    0x407a6b
  407a90:	cwde   
  407a91:	pushw  cs
  407a93:	lds    ecx,FWORD PTR [ecx+0x2c26365e]
  407a99:	in     eax,dx
  407a9a:	test   al,0x47
  407a9c:	cmp    ch,BYTE PTR [ebx]
  407a9e:	addr16 cmc 
  407aa0:	mov    al,ds:0x70888694
  407aa5:	fistp  DWORD PTR ds:0x75a1029f
  407aab:	cwde   
  407aac:	outs   dx,BYTE PTR ds:[esi]
  407aad:	sbb    bh,BYTE PTR [edx-0x13]
  407ab0:	daa    
  407ab1:	xchg   edx,eax
  407ab2:	frstor [edi-0x64]
  407ab5:	loop   0x407af1
  407ab7:	pop    eax
  407ab8:	jns    0x407b37
  407aba:	ret    0xf5eb
  407abd:	sbb    DWORD PTR [edx+0x5e],esi
  407ac0:	xchg   ecx,eax
  407ac1:	adc    cl,BYTE PTR [ecx+0x6d]
  407ac4:	in     al,dx
  407ac5:	jnp    0x407a72
  407ac7:	mov    esi,0xb491122c
  407acc:	ins    DWORD PTR es:[edi],dx
  407acd:	lock cmp esi,DWORD PTR [ebx+0x6]
  407ad1:	dec    esi
  407ad2:	pop    ecx
  407ad3:	pop    ebp
  407ad4:	pop    edi
  407ad5:	dec    esi
  407ad6:	push   edx
  407ad7:	mov    BYTE PTR [ebx],ch
  407ad9:	out    0x96,eax
  407adb:	retf   
  407adc:	dec    ebp
  407add:	mov    cl,0x92
  407adf:	sub    al,BYTE PTR [eax]
  407ae1:	mov    al,ds:0xef3503d6
  407ae6:	pop    ebp
  407ae7:	sub    eax,0x5bea50b8
  407aec:	imul   ebx,DWORD PTR [esi],0xfc9da833
  407af2:	dec    esp
  407af3:	jnp    0x407b1b
  407af5:	lods   eax,DWORD PTR ds:[esi]
  407af6:	xchg   esi,eax
  407af7:	jg     0x407b64
  407af9:	dec    eax
  407afa:	xor    eax,0xc928d5e7
  407aff:	cmp    ebx,DWORD PTR [ebx]
  407b01:	dec    esp
  407b02:	shl    BYTE PTR [ebp+0x27],cl
  407b05:	sub    eax,0x9dc1ce06
  407b0a:	aam    0x42
  407b0c:	xchg   ebx,eax
  407b0d:	mov    cl,BYTE PTR [edi+0x5d13fcb8]
  407b13:	cmp    ch,ch
  407b15:	cdq    
  407b16:	jb     0x407b04
  407b18:	dec    eax
  407b19:	fucom  st(5)
  407b1b:	(bad)  
  407b1c:	jnp    0x407a9e
  407b1e:	jb     0x407aaf
  407b20:	sub    ch,dl
  407b22:	mov    eax,0xc7cc1b8
  407b27:	xchg   esp,eax
  407b28:	xor    al,0x28
  407b2a:	cmp    DWORD PTR [ebx+0x4b],ebx
  407b2d:	ret    
  407b2e:	nop
  407b2f:	inc    ebx
  407b30:	or     BYTE PTR [ecx],0xc9
  407b33:	ret    0xc0b5
  407b36:	icebp  
  407b37:	dec    esp
  407b38:	sti    
  407b39:	and    esp,eax
  407b3b:	mov    edi,?
  407b3d:	push   es
  407b3e:	mov    al,0xa2
  407b40:	jb     0x407ae4
  407b42:	aaa    
  407b43:	in     eax,dx
  407b44:	sub    DWORD PTR [ecx+ebx*4],esi
  407b47:	xchg   edx,eax
  407b48:	dec    esp
  407b49:	adc    al,0xb1
  407b4b:	ja     0x407bb4
  407b4d:	ret    
  407b4e:	pop    edi
  407b4f:	xor    DWORD PTR ds:0x7dae2ad3,eax
  407b55:	mov    esp,0x16b74e14
  407b5a:	xlat   BYTE PTR ds:[ebx]
  407b5b:	mov    ds:0x5a2e671d,eax
  407b60:	mov    ebx,0xf3449dfa
  407b65:	aas    
  407b66:	dec    ecx
  407b67:	mov    ch,0x42
  407b69:	mov    dh,0x18
  407b6b:	jo     0x407b62
  407b6d:	rcr    edx,1
  407b6f:	pusha  
  407b70:	sub    eax,0xf969db79
  407b75:	and    dl,BYTE PTR [esi+ecx*4+0xabb3f8f]
  407b7c:	mov    ch,bl
  407b7e:	jmp    0x200d4698
  407b83:	add    esi,DWORD PTR [ecx]
  407b85:	mov    ah,0x6c
  407b87:	mov    ebp,0xf86d4bc9
  407b8c:	das    
  407b8d:	in     eax,0xe0
  407b8f:	bound  ebx,QWORD PTR [ebp-0x3]
  407b92:	cld    
  407b93:	test   DWORD PTR [ecx+0x3c75804b],0x23c43bea
  407b9d:	dec    edi
  407b9e:	mov    bh,0x61
  407ba0:	sub    dh,BYTE PTR [edi+0x6c]
  407ba3:	mov    al,ds:0x5a4d22d5
  407ba8:	(bad)  
  407ba9:	or     esi,DWORD PTR [edi]
  407bab:	xchg   ebx,eax
  407bac:	jne    0x407be2
  407bae:	mov    ds:0xd75c2cc2,eax
  407bb3:	cmp    bl,BYTE PTR [edi]
  407bb5:	pop    esi
  407bb6:	shl    DWORD PTR [ebp+0x1],0x38
  407bba:	fsub   DWORD PTR [esi-0x4a]
  407bbd:	xchg   edx,eax
  407bbe:	pop    es
  407bbf:	data16 jno 0x407ba8
  407bc2:	mov    ecx,0xaf8fb8eb
  407bc7:	sub    BYTE PTR [esi+0x65],bl
  407bca:	ds pop esi
  407bcc:	or     DWORD PTR [ebx],0x5b7a3980
  407bd2:	mov    esi,0x71af284a
  407bd7:	push   ebx
  407bd8:	fsubrp st(3),st
  407bda:	fwait
  407bdb:	mov    eax,ds:0xd6d482b9
  407be0:	inc    ecx
  407be1:	pop    es
  407be2:	xchg   edi,eax
  407be3:	test   BYTE PTR [esi-0x7ec4038c],al
  407be9:	jl     0x407bd3
  407beb:	or     ebx,ebx
  407bed:	gs pop ecx
  407bef:	sti    
  407bf0:	push   ebp
  407bf1:	xchg   esi,eax
  407bf2:	ret    
  407bf3:	loop   0x407c40
  407bf5:	mov    ch,0xcc
  407bf7:	sub    ah,BYTE PTR [edi*4-0x66257e7]
  407bfe:	push   0x2f
  407c00:	xchg   BYTE PTR ds:0xcc51511e,cl
  407c06:	pop    eax
  407c07:	mov    eax,ds:0xb955c082
  407c0c:	inc    ecx
  407c0d:	or     DWORD PTR [esi+0x41],eax
  407c10:	jg     0x407bf1
  407c12:	inc    edx
  407c13:	mov    edx,0x85fede27
  407c18:	repnz or eax,0x38ca0b3d
  407c1e:	leave  
  407c1f:	arpl   WORD PTR [ecx+0x616b94db],bp
  407c25:	ins    DWORD PTR es:[edi],dx
  407c26:	(bad)  
  407c27:	xor    ecx,esp
  407c29:	push   edx
  407c2a:	pop    es
  407c2b:	mov    DWORD PTR [esi-0x65],ebp
  407c2e:	(bad)  
  407c2f:	loopne 0x407bc2
  407c31:	jmp    0xac41:0x1e5618a4
  407c38:	mov    ecx,0x85137599
  407c3d:	mov    eax,0x7b3048d3
  407c42:	jbe    0x407c33
  407c44:	mov    al,0x6b
  407c46:	xor    eax,0xfac49545
  407c4b:	xchg   edx,eax
  407c4c:	mov    ecx,edi
  407c4e:	cs loop 0x407c0a
  407c51:	scas   eax,DWORD PTR es:[edi]
  407c52:	mov    esp,0x8e6995c
  407c57:	jno    0x407c39
  407c59:	mov    dh,0x60
  407c5b:	jns    0x407c70
  407c5d:	clc    
  407c5e:	imul   BYTE PTR [edi+0x46e5e5ae]
  407c64:	cmp    al,0xd0
  407c66:	les    edi,FWORD PTR [edi+0x7f]
  407c69:	jne    0x407c29
  407c6b:	imul   edx,DWORD PTR [ebp+0x6783da6b],0x3f177c0f
  407c75:	pop    es
  407c76:	lahf   
  407c77:	popf   
  407c78:	sub    eax,0x92e6a6c1
  407c7d:	pop    eax
  407c7e:	xor    eax,0x7f742bf2
  407c83:	sbb    edx,DWORD PTR ds:0x2530a66f
  407c89:	sbb    BYTE PTR [ebx-0x2adbd002],cl
  407c8f:	jecxz  0x407c47
  407c91:	xchg   edi,eax
  407c92:	cmp    al,0xea
  407c94:	cdq    
  407c95:	cld    
  407c96:	dec    ebx
  407c97:	bound  edi,QWORD PTR [esi]
  407c99:	out    0xc4,al
  407c9b:	nop
  407c9c:	ficom  DWORD PTR [edi]
  407c9e:	retf   
  407c9f:	and    esi,ebp
  407ca1:	arpl   WORD PTR fs:0xeb202afb,dx
  407ca8:	or     dl,BYTE PTR [ecx+0x26a178d7]
  407cae:	cli    
  407caf:	arpl   WORD PTR [edx],sp
  407cb1:	mov    bh,0x53
  407cb3:	sbb    DWORD PTR [edi],0xffffffc1
  407cb6:	mov    dl,0xb7
  407cb8:	jmp    0x5787d345
  407cbd:	out    0xe6,eax
  407cbf:	xor    BYTE PTR [ecx-0x6b],ah
  407cc2:	or     eax,0x12cdbb89
  407cc7:	pop    es
  407cc8:	pop    edx
  407cc9:	cld    
  407cca:	fst    QWORD PTR [esi+0x38cb9de7]
  407cd0:	adc    esp,DWORD PTR [ecx+0x32a6ab3f]
  407cd6:	imul   eax,DWORD PTR [esi+0x5480271d],0xffffffed
  407cdd:	and    dl,bl
  407cdf:	fistp  QWORD PTR [edi+0x6b]
  407ce2:	jp     0x407c75
  407ce4:	cmp    dh,BYTE PTR [esi*8+0x32532503]
  407ceb:	sub    esp,esp
  407ced:	jp     0x407c95
  407cef:	clc    
  407cf0:	inc    ecx
  407cf1:	sub    esi,DWORD PTR [ebx+0x3e23754c]
  407cf7:	imul   DWORD PTR [ebx-0x5b45b7dd]
  407cfd:	xor    bh,0xb7
  407d00:	inc    dx
  407d02:	adc    al,0xb
  407d04:	pop    edx
  407d05:	(bad)  
  407d06:	mov    al,ds:0x642774b7
  407d0b:	inc    edi
  407d0c:	aas    
  407d0d:	xlat   BYTE PTR ds:[ebx]
  407d0e:	mov    BYTE PTR [edi-0x496d495c],cl
  407d14:	mov    cl,0x2b
  407d16:	fstp   DWORD PTR [bp-0x45d1]
  407d1b:	test   al,0xf9
  407d1d:	mov    dh,BYTE PTR [edi]
  407d1f:	ds jp  0x407cfc
  407d22:	out    0x9f,al
  407d24:	ins    BYTE PTR es:[edi],dx
  407d25:	dec    ebp
  407d26:	sbb    DWORD PTR [eax-0x51fae225],esp
  407d2c:	push   cs
  407d2d:	pxor   mm4,QWORD PTR [esi]
  407d30:	retf   
  407d31:	leave  
  407d32:	lahf   
  407d33:	shl    DWORD PTR [bx+0x29],0xd5
  407d38:	ror    DWORD PTR [esi+0x22c82c9a],1
  407d3e:	mov    bl,0x62
  407d40:	cmovs  edi,DWORD PTR [edi]
  407d43:	(bad)  
  407d45:	push   edi
  407d46:	inc    esp
  407d47:	pusha  
  407d48:	enter  0x78cc,0xb9
  407d4c:	int    0x5a
  407d4e:	enter  0xb588,0x28
  407d52:	imul   esp,esp,0xffffffd0
  407d55:	and    esi,DWORD PTR [edx-0x61e02f93]
  407d5b:	sub    ah,bl
  407d5d:	mov    ch,0xf3
  407d5f:	adc    DWORD PTR [ebp+0x4e],0x793ea2e0
  407d66:	mov    bh,0xb8
  407d68:	test   bl,0x24
  407d6b:	sbb    esp,DWORD PTR [edx+0x2f]
  407d6e:	retw   0xbfc0
  407d72:	adc    dh,BYTE PTR [edi-0x48]
  407d75:	pop    ebx
  407d76:	retf   
  407d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d78:	std    
  407d79:	push   ds
  407d7a:	retf   0xf8b8
  407d7d:	fstp   DWORD PTR [ecx-0x16c4c5d]
  407d83:	in     al,0x33
  407d85:	xor    DWORD PTR [ebp+0x48e02e],eax
  407d8b:	mov    bh,BYTE PTR ds:0x9eda05e6
  407d91:	mov    bh,0xe0
  407d93:	xor    esp,ebx
  407d95:	iret   
  407d96:	add    al,0xbf
  407d98:	fld    TBYTE PTR [edx+0x6a]
  407d9b:	dec    ebp
  407d9c:	xlat   BYTE PTR ds:[ebx]
  407d9d:	inc    ecx
  407d9e:	cs ja  0x407d27
  407da1:	sbb    ecx,ecx
  407da3:	out    dx,al
  407da4:	into   
  407da5:	lahf   
  407da6:	pop    ebp
  407da7:	or     eax,0x6a8e2248
  407dac:	xor    DWORD PTR [ebp+0x7a],ebp
  407daf:	fadd   QWORD PTR [edi]
  407db1:	mov    cl,0xda
  407db3:	iret   
  407db4:	nop
  407db5:	cmp    bl,BYTE PTR [ebx]
  407db7:	lods   ax,WORD PTR ds:[esi]
  407db9:	cmp    DWORD PTR [esi],ebx
  407dbb:	mov    eax,0x29527ce1
  407dc0:	cld    
  407dc1:	enter  0xf494,0x4e
  407dc5:	push   cs
  407dc6:	in     eax,0xbc
  407dc8:	(bad)  
  407dca:	outs   dx,BYTE PTR ds:[esi]
  407dcb:	and    DWORD PTR [edx-0x7d02ec65],0xf6849e2a
  407dd5:	addr16 xchg esi,eax
  407dd7:	call   0x9c0c:0x422c523b
  407dde:	jnp    0x407d64
  407de0:	int    0x8e
  407de2:	dec    edi
  407de3:	ficomp DWORD PTR [edx+0x909d449]
  407de9:	adc    dl,BYTE PTR [bx+si+0x183c]
  407dee:	lds    esi,FWORD PTR [edi*4-0x4afd92b0]
  407df5:	pushf  
  407df6:	mov    eax,0x22d64804
  407dfb:	or     al,0x8d
  407dfd:	(bad)  
  407dff:	pop    ebp
  407e00:	fist   WORD PTR [esp+eiz*4-0x60d695c8]
  407e07:	scas   al,BYTE PTR es:[edi]
  407e08:	push   es
  407e09:	mov    ah,0x12
  407e0b:	xor    al,0x99
  407e0d:	cmp    eax,DWORD PTR [eax+ecx*2+0x77b5644d]
  407e14:	xor    dh,BYTE PTR [ecx+0x4a]
  407e17:	dec    esi
  407e18:	jp     0x407e47
  407e1a:	xor    esi,edi
  407e1c:	xchg   esi,eax
  407e1d:	xchg   ebx,eax
  407e1e:	ror    DWORD PTR [ebp-0x3185a69b],1
  407e24:	adc    eax,0x4ce6923b
  407e29:	retf   
  407e2a:	out    0x22,al
  407e2c:	mov    fs,WORD PTR [ebp+0x33]
  407e2f:	ret    
  407e30:	inc    esi
  407e31:	jo     0x407e78
  407e33:	sbb    DWORD PTR [ebx],eax
  407e35:	stc    
  407e36:	mov    ds:0xf5649f82,eax
  407e3b:	mov    DWORD PTR gs:[edx+0x115e8eea],ecx
  407e42:	jle    0x407e30
  407e44:	add    edi,DWORD PTR [esi+0xcb700c7]
  407e4a:	adc    al,0x81
  407e4c:	dec    ebp
  407e4d:	fbld   TBYTE PTR [eax+0x3aa1cdc1]
  407e53:	ja     0x407de0
  407e55:	repnz mov bh,0x38
  407e58:	fbstp  TBYTE PTR [edi-0x6c]
  407e5b:	inc    ebp
  407e5c:	dec    eax
  407e5d:	pusha  
  407e5e:	cmp    al,0xed
  407e60:	aaa    
  407e61:	lea    ebx,[eax+eiz*4+0x70a00d34]
  407e68:	fisubr DWORD PTR [ebp-0x30b499ec]
  407e6e:	hlt    
  407e6f:	sub    al,0xd4
  407e71:	fdiv   DWORD PTR [esi+0x118bb59a]
  407e77:	jns    0x407ea3
  407e79:	ins    DWORD PTR es:[edi],dx
  407e7a:	and    eax,edx
  407e7c:	enter  0x4f4e,0x8d
  407e80:	push   ecx
  407e81:	inc    ebx
  407e82:	fisttp DWORD PTR [ebp-0x21]
  407e85:	lods   al,BYTE PTR ds:[esi]
  407e86:	mov    DWORD PTR [edx+0x251732d5],eax
  407e8c:	push   cs
  407e8d:	fcmovnbe st,st(1)
  407e8f:	bound  edi,QWORD PTR [edi-0x25]
  407e92:	dec    BYTE PTR [eax-0x531f2b60]
  407e98:	adc    DWORD PTR [esi-0x2a7df153],edx
  407e9e:	or     al,0x39
  407ea0:	dec    ebx
  407ea1:	adc    esi,eax
  407ea3:	inc    edx
  407ea4:	lahf   
  407ea5:	pop    ebx
  407ea6:	and    DWORD PTR [edi],ebp
  407ea8:	enter  0x61c7,0xe6
  407eac:	mov    ebx,DWORD PTR [eax-0x4]
  407eaf:	push   cs
  407eb0:	ins    BYTE PTR es:[edi],dx
  407eb1:	xor    BYTE PTR [ebp-0x2f4e1e94],ch
  407eb7:	(bad)  [edi+0x19]
  407eba:	push   ss
  407ebb:	pop    esi
  407ebc:	shl    DWORD PTR [ecx+esi*2+0x4],cl
  407ec0:	mov    ecx,0x55b02680
  407ec5:	sbb    bh,BYTE PTR [eax]
  407ec7:	dec    esi
  407ec8:	ret    
  407ec9:	dec    esi
  407eca:	rcr    DWORD PTR [eax+0x2079afdf],0x31
  407ed1:	aad    0xa4
  407ed3:	cld    
  407ed4:	cs aas 
  407ed6:	dec    esp
  407ed7:	mov    dl,0xb9
  407ed9:	mov    dh,0x64
  407edb:	inc    ecx
  407edc:	std    
  407edd:	shl    DWORD PTR [eax-0x53],0x4a
  407ee1:	call   0xa3aefc97
  407ee6:	int3   
  407ee7:	cwde   
  407ee8:	mov    cl,0x2f
  407eea:	js     0x407f60
  407eec:	adc    bh,BYTE PTR [esi+0x1e8820bb]
  407ef2:	lock push es
  407ef4:	mov    bh,0xf4
  407ef6:	lds    esp,FWORD PTR [ebx+0x48]
  407ef9:	dec    eax
  407efa:	repz sub DWORD PTR [esi+0x569a8985],ebx
  407f01:	pop    ss
  407f02:	pop    eax
  407f03:	pause  
  407f05:	add    bh,cl
  407f07:	xchg   edi,eax
  407f08:	test   al,0xdb
  407f0a:	loope  0x407ec1
  407f0c:	aaa    
  407f0d:	sbb    esi,DWORD PTR [ecx]
  407f0f:	mov    ds:0x7dac8018,eax
  407f14:	ret    0x215f
  407f17:	mov    ebp,DWORD PTR [edx+esi*8]
  407f1a:	call   0xb63bd57c
  407f1f:	dec    eax
  407f20:	call   0x6af63824
  407f25:	inc    edi
  407f26:	ret    
  407f27:	xchg   edi,eax
  407f28:	addr16 cwde 
  407f2a:	pop    edx
  407f2b:	int3   
  407f2c:	add    al,0xf7
  407f2e:	les    edx,FWORD PTR [ebx]
  407f30:	mov    esp,0x98d66c0b
  407f35:	jae    0x407f76
  407f37:	int3   
  407f38:	mul    BYTE PTR [eax+0x11c92ab1]
  407f3e:	cmp    ebp,ebx
  407f40:	sub    edx,edi
  407f42:	mov    eax,ds:0xcb64890c
  407f47:	jbe    0x407eff
  407f49:	rol    BYTE PTR [edx],cl
  407f4b:	leave  
  407f4c:	das    
  407f4d:	adc    BYTE PTR [edx+0x37e0cf01],dh
  407f53:	cld    
  407f54:	ret    0x8e6d
  407f57:	imul   edi,DWORD PTR [ebx-0x2e9b9f24],0x49c0668d
  407f61:	loop   0x407f42
  407f63:	or     BYTE PTR [ebx],dl
  407f65:	ror    BYTE PTR [edx-0x7e],0x1a
  407f69:	es push edi
  407f6b:	xor    al,0x55
  407f6d:	adc    dh,0x38
  407f70:	shl    al,1
  407f72:	bnd js 0x407f35
  407f75:	outs   dx,DWORD PTR ds:[esi]
  407f76:	cdq    
  407f77:	jno    0x407f8e
  407f79:	xlat   BYTE PTR ds:[ebx]
  407f7a:	push   esp
  407f7b:	(bad)
  407f80:	mov    ch,0x3a
  407f82:	pop    ss
  407f83:	mov    eax,0x2a08d0ed
  407f88:	outs   dx,BYTE PTR ds:[esi]
  407f89:	fld    QWORD PTR ds:0xf887c1ff
  407f8f:	test   DWORD PTR [edx+0x6a91a27d],esi
  407f95:	push   ss
  407f96:	xor    BYTE PTR [edi+eiz*8+0x29],0x2c
  407f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f9c:	cs xchg ecx,eax
  407f9e:	mov    ?,WORD PTR [ebp+eiz*8-0x26]
  407fa2:	not    BYTE PTR [esi+0x6]
  407fa5:	push   ds
  407fa6:	jmp    0x4a4a:0x4e989442
  407fad:	in     eax,dx
  407fae:	jmp    0x2853f7a2
  407fb3:	out    0x1d,al
  407fb5:	ja     0x407fe1
  407fb7:	ins    BYTE PTR es:[edi],dx
  407fb8:	mov    ecx,DWORD PTR [ecx-0x52f81b81]
  407fbe:	cmp    esp,DWORD PTR [ebx+0x1f]
  407fc1:	ins    BYTE PTR es:[edi],dx
  407fc2:	mov    esi,0x403a4d2
  407fc7:	dec    edx
  407fc8:	adc    ecx,DWORD PTR [eax+0x75]
  407fcb:	mov    ds:0xe83243f1,al
  407fd0:	addr16 inc eax
  407fd2:	jl     0x407f8b
  407fd4:	cmp    BYTE PTR [edi],ah
  407fd6:	sbb    ecx,ebp
  407fd8:	jae    0x407ff7
  407fda:	fild   DWORD PTR [ecx+0x0]
  407fdd:	cs std 
  407fdf:	cmp    al,0xe2
  407fe1:	in     al,dx
  407fe2:	leave  
  407fe3:	mov    bh,BYTE PTR [eax+edx*4-0x175c53fa]
  407fea:	sub    BYTE PTR [edx+0x30],ah
  407fed:	ret    0x4f46
  407ff0:	mov    esp,0x98805e9a
  407ff5:	ins    BYTE PTR es:[edi],dx
  407ff6:	leave  
  407ff7:	lahf   
  407ff8:	or     al,cl
  407ffa:	arpl   WORD PTR [esi],cx
  407ffc:	push   ebx
  407ffd:	sbb    al,0xf
  407fff:	imul   esi,ecx,0xffffffaa
  408002:	in     eax,0xed
  408004:	rol    DWORD PTR [edx+0x4dbe3e05],1
  40800a:	lock jge 0x407fd1
  40800d:	jp     0x408085
  40800f:	into   
  408010:	cmp    DWORD PTR [ebx],ebp
  408012:	icebp  
  408013:	push   esi
  408014:	push   edi
  408015:	push   ecx
  408016:	es (bad) 
  408018:	xchg   ecx,eax
  408019:	push   edi
  40801a:	aad    0x9
  40801c:	add    al,0xde
  40801e:	jecxz  0x408082
  408020:	in     al,dx
  408021:	out    dx,al
  408022:	fidiv  WORD PTR [eax+0x1e]
  408025:	out    dx,al
  408026:	cmp    eax,0xdcc8a2c9
  40802b:	mov    fs,WORD PTR [eax+edx*8+0x1]
  40802f:	iret   
  408030:	inc    edi
  408031:	xchg   ecx,eax
  408032:	rcr    BYTE PTR [ebp+0x3a7fbc5d],0x71
  408039:	cli    
  40803a:	fist   DWORD PTR [ecx+0xd]
  40803d:	stc    
  40803e:	bound  ecx,QWORD PTR [edx+0x24f518f3]
  408044:	or     ebx,DWORD PTR [edi+0x260b2c3e]
  40804a:	mov    eax,DWORD PTR [ebp-0x1c]
  40804d:	mov    ecx,DWORD PTR [ebp-0x1c]
  408050:	sub    eax,ecx
  408052:	mov    DWORD PTR [ebp-0x1c],eax
  408055:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40805c:	mov    eax,DWORD PTR [ebp-0x20]
  40805f:	mov    ecx,DWORD PTR [ebp-0x20]
  408062:	sub    eax,ecx
  408064:	mov    DWORD PTR [ebp-0x20],eax
  408067:	mov    eax,DWORD PTR [ebp-0x2c]
  40806a:	mov    ecx,DWORD PTR [ebp-0x20]
  40806d:	mov    esi,0x7510897
  408072:	xor    eax,esi
  408074:	mov    edi,0x3272de
  408079:	add    eax,edi
  40807b:	or     eax,ecx
  40807d:	mov    DWORD PTR [ebp-0x20],eax
  408080:	mov    eax,DWORD PTR [ebp-0x4]
  408083:	mov    ecx,DWORD PTR [ebp-0x4]
  408086:	sub    eax,ecx
  408088:	mov    DWORD PTR [ebp-0x4],eax
  40808b:	or     DWORD PTR [ebp-0x4],0xf89c85b0
  408092:	mov    eax,DWORD PTR [ebp-0xc]
  408095:	xor    eax,esi
  408097:	add    eax,edi
  408099:	push   eax
  40809a:	mov    eax,DWORD PTR [ebp-0x10]
  40809d:	xor    eax,esi
  40809f:	add    eax,edi
  4080a1:	push   eax
  4080a2:	mov    eax,DWORD PTR [ebp-0x4]
  4080a5:	xor    eax,esi
  4080a7:	add    eax,edi
  4080a9:	push   eax
  4080aa:	lea    eax,[ebp-0x7c]
  4080ad:	push   eax
  4080ae:	push   DWORD PTR [ebp-0x2c]
  4080b1:	push   DWORD PTR [ebp-0x28]
  4080b4:	call   0x40ab86
  4080b9:	test   eax,eax
  4080bb:	je     0x4080e9
  4080c1:	lea    eax,[ebp-0x7c]
  4080c4:	push   eax
  4080c5:	mov    eax,DWORD PTR [ebp-0x28]
  4080c8:	xor    eax,esi
  4080ca:	add    eax,edi
  4080cc:	push   eax
  4080cd:	mov    eax,DWORD PTR [ebp-0x24]
  4080d0:	add    eax,0xaa
  4080d5:	push   eax
  4080d6:	mov    eax,DWORD PTR [ebp-0x24]
  4080d9:	mov    eax,DWORD PTR [eax+0x198]
  4080df:	push   DWORD PTR [eax]
  4080e1:	call   0x405235
  4080e6:	mov    DWORD PTR [ebp-0x14],eax
  4080e9:	lea    eax,[ebp+0x4]
  4080ec:	mov    DWORD PTR [ebp-0x30],eax
  4080ef:	mov    eax,DWORD PTR [ebp-0x14]
  4080f2:	test   eax,eax
  4080f4:	je     0x40815c
  4080fa:	lea    eax,[ebp-0x8]
  4080fd:	mov    DWORD PTR [ebp-0x38],eax
  408100:	mov    eax,DWORD PTR [ebp-0x34]
  408103:	mov    DWORD PTR [ebp-0x8],eax
  408106:	mov    eax,DWORD PTR [ebp-0x8]
  408109:	mov    ecx,DWORD PTR [ebp-0x14]
  40810c:	sub    eax,ecx
  40810e:	mov    DWORD PTR [ebp-0x8],eax
  408111:	mov    ecx,DWORD PTR [ebp-0x4]
  408114:	xor    ecx,esi
  408116:	mov    eax,0xffcd8d22
  40811b:	sub    eax,ecx
  40811d:	add    DWORD PTR [ebp-0x8],eax
  408120:	mov    eax,DWORD PTR [ebp-0x8]
  408123:	mov    ecx,DWORD PTR [ebp-0x14]
  408126:	mov    DWORD PTR [ecx+0x1],eax
  408129:	mov    eax,DWORD PTR [ebp-0x14]
  40812c:	push   DWORD PTR [ebp-0x24]
  40812f:	mov    BYTE PTR [eax],0xe9
  408132:	mov    eax,ds:0x42e2b1
  408137:	push   DWORD PTR [eax]
  408139:	push   DWORD PTR ds:0x42e50d
  40813f:	push   DWORD PTR ds:0x42e2b9
  408145:	push   DWORD PTR ds:0x42e4ed
  40814b:	push   DWORD PTR ds:0x42eafd
  408151:	push   DWORD PTR [ebp-0x28]
  408154:	push   DWORD PTR [ebp-0x2c]
  408157:	mov    eax,DWORD PTR [ebp-0x14]
  40815a:	call   eax
  40815c:	mov    eax,DWORD PTR [ebp-0x30]
  40815f:	mov    ecx,DWORD PTR ds:0x42e4b1
  408165:	add    DWORD PTR [eax],ecx
  408167:	pop    edi
  408168:	pop    esi
  408169:	leave  
  40816a:	ret    
  40816b:	push   ebp
  40816c:	mov    ebp,esp
  40816e:	sub    esp,0x18
  408171:	sub    edx,DWORD PTR ds:0x42c004
  408177:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40817e:	add    ecx,edx
  408180:	lea    eax,[ebp+0x14]
  408183:	mov    edx,DWORD PTR ds:0x42b008
  408189:	xor    DWORD PTR ds:0x42b01c,edx
  40818f:	mov    DWORD PTR [ebp-0x4],eax
  408192:	push   esi
  408193:	and    DWORD PTR ds:0x42b000,0x0
  40819d:	xor    ecx,ecx
  40819f:	or     ecx,DWORD PTR ds:0x42b000
  4081a5:	inc    ecx
  4081a6:	mov    DWORD PTR ds:0x42b000,ecx
  4081ac:	cmp    DWORD PTR ds:0x42b000,0x24
  4081b3:	jne    0x4081bf
  4081b9:	call   DWORD PTR ds:0x42ed51
  4081bf:	cmp    DWORD PTR ds:0x42b000,0x19
  4081c6:	jb     0x40819d
  4081cc:	mov    esi,0xf89c85b5
  4081d1:	mov    DWORD PTR ds:0x42a004,0x1a
  4081db:	cmp    DWORD PTR ds:0x42a004,0x0
  4081e2:	je     0x40827f
  4081e8:	cmp    DWORD PTR ds:0x42a004,0x25
  4081ef:	jne    0x4081fb
  4081f5:	call   DWORD PTR ds:0x42ed55
  4081fb:	mov    ecx,DWORD PTR ds:0x42a004
  408201:	dec    ecx
  408202:	mov    DWORD PTR ds:0x42a004,ecx
  408208:	jmp    0x4081db
  40820d:	and    DWORD PTR ds:0x42c014,0x0
  408217:	mov    ecx,DWORD PTR ds:0x42c014
  40821d:	inc    ecx
  40821e:	mov    DWORD PTR ds:0x42c014,ecx
  408224:	cmp    DWORD PTR ds:0x42c014,0xa
  40822b:	jne    0x408258
  408231:	push   0x4b5d
  408236:	push   0x662f
  40823b:	push   0x429024
  408240:	push   0x2027
  408245:	push   DWORD PTR [ebp-0x14]
  408248:	push   0x6d51
  40824d:	push   0x3a33
  408252:	call   DWORD PTR ds:0x42ed59
  408258:	cmp    DWORD PTR ds:0x42c014,0x9
  40825f:	jne    0x408272
  408265:	mov    ecx,DWORD PTR ds:0x42c014
  40826b:	inc    ecx
  40826c:	mov    DWORD PTR ds:0x42c014,ecx
  408272:	cmp    DWORD PTR ds:0x42c014,0x13
  408279:	jb     0x408217
  40827f:	mov    DWORD PTR [ebp-0xc],esi
  408282:	lea    eax,[ebp-0xc]
  408285:	mov    DWORD PTR ds:0x429008,0x7000
  40828f:	mov    DWORD PTR [ebp-0x14],eax
  408292:	mov    eax,DWORD PTR [ebp-0xc]
  408295:	adc    ecx,ecx
  408297:	mov    edx,DWORD PTR [ebp-0x14]
  40829a:	mov    ecx,0x7510897
  40829f:	xor    eax,ecx
  4082a1:	and    DWORD PTR ds:0x42a00c,0x546c
  4082ab:	add    eax,0x3272de
  4082b0:	xor    DWORD PTR ds:0x42900c,0x42b014
  4082ba:	mov    DWORD PTR [edx],eax
  4082bc:	xor    eax,DWORD PTR ds:0x42900c
  4082c2:	mov    eax,ds:0x42e2ad
  4082c7:	movzx  edx,BYTE PTR ds:0x42d00c
  4082ce:	add    edx,DWORD PTR ds:0x42d014
  4082d4:	mov    DWORD PTR ds:0x42d00c,edx
  4082da:	mov    edx,DWORD PTR [ebp-0x4]
  4082dd:	add    DWORD PTR ds:0x42d014,0x42c01c
  4082e7:	mov    eax,DWORD PTR [eax]
  4082e9:	add    eax,DWORD PTR [edx]
  4082eb:	dec    edx
  4082ec:	push   edi
  4082ed:	or     edi,DWORD PTR ds:0x429020
  4082f3:	mov    DWORD PTR [ebp-0x8],eax
  4082f6:	sbb    DWORD PTR ds:0x42b000,0x50b8
  408300:	mov    edi,DWORD PTR [ebp+0x8]
  408303:	or     edx,DWORD PTR ds:0x42c000
  408309:	mov    eax,ds:0x42e435
  40830e:	add    DWORD PTR ds:0x42a008,edi
  408314:	mov    eax,DWORD PTR [eax+0x198]
  40831a:	mov    edx,DWORD PTR ds:0x429020
  408320:	xor    DWORD PTR ds:0x42d000,edx
  408326:	xor    edi,ecx
  408328:	add    edx,DWORD PTR ds:0x42d010
  40832e:	mov    edx,0x3272de
  408333:	add    edi,edx
  408335:	cmp    DWORD PTR [eax],edi
  408337:	mov    DWORD PTR ds:0x42b000,0x2ab9
  408341:	je     0x408362
  408347:	mov    DWORD PTR ds:0x42b01c,0x7253
  408351:	mov    eax,DWORD PTR [eax]
  408353:	mov    DWORD PTR ds:0x429010,0x649d
  40835d:	jmp    0x40aa31
  408362:	mov    eax,DWORD PTR [ebp+0x18]
  408365:	mov    DWORD PTR ds:0x42c014,0x271
  40836f:	cmp    eax,esi
  408371:	mov    DWORD PTR ds:0x42c004,0x124b
  40837b:	jne    0x408395
  408381:	push   0xf89c85b4
  408386:	mov    DWORD PTR ds:0x42c000,0x7723
  408390:	jmp    0x40aa20
  408395:	mov    DWORD PTR ds:0x42d014,0x3adf
  40839f:	mov    esi,DWORD PTR [ebp+0x18]
  4083a2:	mov    DWORD PTR ds:0x42901c,ebx
  4083a8:	mov    eax,0xf89c85b3
  4083ad:	mov    DWORD PTR ds:0x42d014,0x7a94
  4083b7:	cmp    esi,eax
  4083b9:	jne    0x40aa10
  4083bf:	mov    eax,DWORD PTR [ebp+0x10]
  4083c2:	sbb    DWORD PTR ds:0x42d01c,0x4fef
  4083cc:	xor    eax,ecx
  4083ce:	neg    esi
  4083d0:	add    eax,edx
  4083d2:	mov    DWORD PTR [ebp-0x18],eax
  4083d5:	and    DWORD PTR ds:0x42c008,0x0
  4083df:	jmp    0x4083f1
  4083e4:	mov    esi,DWORD PTR ds:0x42c008
  4083ea:	inc    esi
  4083eb:	mov    DWORD PTR ds:0x42c008,esi
  4083f1:	cmp    DWORD PTR ds:0x42c008,0x1b
  4083f8:	jae    0x40841f
  4083fe:	cmp    DWORD PTR ds:0x42c008,0x21
  408405:	jne    0x408419
  40840b:	push   DWORD PTR [ebp-0xc]
  40840e:	push   0x42e04f
  408413:	call   DWORD PTR ds:0x42ed5d
  408419:	jmp    0x4083e4
  40841e:	inc    esi
  40841f:	mov    eax,DWORD PTR [ebp+0xc]
  408422:	adc    esi,0x4c2a
  408428:	mov    esi,DWORD PTR [ebp-0x8]
  40842b:	xor    eax,ecx
  40842d:	and    DWORD PTR ds:0x42c00c,0x5a7b
  408437:	add    eax,edx
  408439:	add    DWORD PTR ds:0x429028,0x559b
  408443:	imul   eax,DWORD PTR [esi]
  408446:	mov    esi,DWORD PTR [ebp+0x8]
  408449:	and    DWORD PTR ds:0x42c014,0x42b014
  408453:	xor    esi,ecx
  408455:	add    esi,edx
  408457:	mov    DWORD PTR ds:0x42b00c,0x7e3f
  408461:	cmp    esi,eax
  408463:	mov    DWORD PTR ds:0x429028,0x3893
  40846d:	mov    eax,DWORD PTR [ebp-0x4]
  408470:	jmp    0x40a7d3
  408475:	push   esp
  408476:	pop    ss
  408477:	rcl    DWORD PTR [ebx-0x6d],cl
  40847a:	fwait
  40847b:	aam    0x17
  40847d:	adc    BYTE PTR [eax+0x38],bl
  408480:	push   cs
  408481:	out    0x7b,al
  408483:	xchg   edx,eax
  408484:	xor    eax,0x78782200
  408489:	and    bl,BYTE PTR [edi+0x78]
  40848c:	js     0x40846a
  40848e:	js     0x408435
  408490:	imul   edx,ecx,0xffffff92
  408493:	jecxz  0x40844f
  408495:	push   eax
  408496:	mov    bl,0x53
  408498:	pop    edx
  408499:	inc    esi
  40849a:	or     BYTE PTR [eax+0x6a],0x13
  40849e:	jno    0x40850a
  4084a0:	jb     0x4084a5
  4084a2:	stos   BYTE PTR es:[edi],al
  4084a3:	xacquire xchg DWORD PTR [edx],esi
  4084a6:	xchg   BYTE PTR [ebp+0x620b5233],dh
  4084ac:	jmp    0xf14f:0x7b0602dd
  4084b3:	inc    eax
  4084b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084b5:	xchg   esi,eax
  4084b6:	repnz icebp 
  4084b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084b9:	sbb    eax,0x8ef0dd0f
  4084be:	or     ebx,DWORD PTR [edx]
  4084c0:	jbe    0x408520
  4084c2:	pop    es
  4084c3:	mov    al,0x57
  4084c5:	push   ebp
  4084c6:	nop    DWORD PTR [edi-0x1ce44003]
  4084cd:	sub    bh,BYTE PTR [ebp+0x5d]
  4084d0:	int    0x14
  4084d2:	imul   al
  4084d4:	push   ecx
  4084d5:	mov    WORD PTR [edx-0x4581fd4c],fs
  4084db:	ret    
  4084dc:	push   ds
  4084dd:	pop    ds
  4084de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084df:	and    eax,0x8fc3a0e
  4084e4:	dec    edx
  4084e5:	push   es
  4084e6:	cmp    dh,BYTE PTR [esi+ecx*2+0x2f]
  4084ea:	mov    bh,0x36
  4084ec:	and    bl,dl
  4084ee:	adc    eax,0x1747154e
  4084f3:	sar    bh,0x26
  4084f6:	std    
  4084f7:	mov    ds:0xf6ff3f10,al
  4084fc:	mov    ds:0xe046e9ce,al
  408501:	sbb    ebp,DWORD PTR [esi+ebp*8]
  408504:	daa    
  408505:	jne    0x40848c
  408507:	xor    ah,BYTE PTR [eax-0x23]
  40850a:	stc    
  40850b:	loope  0x4084b8
  40850d:	enter  0xe4e2,0x4
  408511:	inc    edx
  408512:	add    ch,BYTE PTR [ecx+edi*8-0x45]
  408516:	sbb    bl,BYTE PTR [edi]
  408518:	lahf   
  408519:	pop    edx
  40851a:	enter  0x5e63,0x18
  40851e:	adc    DWORD PTR [ecx-0x41],ecx
  408521:	inc    eax
  408522:	in     al,dx
  408523:	call   0xd83:0x5de40f8a
  40852a:	stc    
  40852b:	iret   
  40852c:	loope  0x408511
  40852e:	dec    edx
  40852f:	mov    ds,edx
  408531:	mov    esp,0xdf7fd525
  408536:	sub    esp,ebp
  408538:	lock loop 0x4084e9
  40853b:	sub    al,BYTE PTR [ecx]
  40853d:	jl     0x408590
  40853f:	test   BYTE PTR [ecx],ch
  408541:	xchg   edx,edx
  408543:	jge    0x408553
  408545:	mov    edx,0x26553430
  40854a:	and    ecx,DWORD PTR [ebx-0x2e4083fd]
  408550:	xor    dl,al
  408552:	ret    0x2885
  408555:	mov    ebp,0xbf7d9d6f
  40855a:	sub    al,0xba
  40855c:	jno    0x40853f
  40855e:	sub    al,0xb0
  408560:	sub    al,0x5b
  408562:	push   esp
  408563:	add    eax,0x22ab0040
  408568:	das    
  408569:	xor    eax,0xfb2d6b56
  40856e:	and    DWORD PTR ds:0x2de0,eax
  408573:	daa    
  408574:	aad    0x95
  408576:	sub    BYTE PTR [eax+0x4c],0xd4
  40857a:	jl     0x4085f1
  40857c:	pop    edi
  40857d:	imul   BYTE PTR [esi]
  40857f:	sysret 
  408581:	sub    ebp,DWORD PTR [esi+0x79fa289e]
  408587:	ret    
  408588:	and    DWORD PTR [ebx],edx
  40858a:	xor    esi,DWORD PTR [edi+edi*4+0xd9cdfd5]
  408591:	xchg   edi,ebx
  408593:	stos   BYTE PTR es:[edi],al
  408594:	stos   DWORD PTR es:[edi],eax
  408595:	scas   eax,DWORD PTR es:[edi]
  408596:	nop
  408597:	pushf  
  408598:	jbe    0x408543
  40859a:	push   esi
  40859b:	hlt    
  40859c:	stos   BYTE PTR es:[edi],al
  40859d:	sbb    edx,DWORD PTR [ebx-0x1a]
  4085a0:	pop    ebp
  4085a1:	(bad)  
  4085a2:	sbb    eax,0x9f28d05e
  4085a7:	cdq    
  4085a8:	mov    eax,0x9d95f3bd
  4085ad:	not    BYTE PTR [eax]
  4085af:	adc    eax,0x14b72a9d
  4085b4:	mov    ds:0xac87b7ff,al
  4085b9:	mov    edx,0x7ca631f1
  4085be:	fisubr WORD PTR [ebp-0xe]
  4085c1:	inc    ebx
  4085c2:	dec    esp
  4085c3:	ret    
  4085c4:	adc    cl,BYTE PTR [ebp-0x51]
  4085c7:	int3   
  4085c8:	std    
  4085c9:	xor    edx,ebp
  4085cb:	mov    dl,BYTE PTR [edx-0x4503ccc8]
  4085d1:	pushf  
  4085d2:	cli    
  4085d3:	or     bh,BYTE PTR [edx]
  4085d5:	xchg   esi,eax
  4085d6:	mov    eax,ds:0xa4dba549
  4085db:	push   edi
  4085dc:	jle    0x40857e
  4085de:	rcl    DWORD PTR [edx+0xeefb2ee],0x12
  4085e5:	dec    ecx
  4085e6:	test   DWORD PTR [esi-0x1d],esp
  4085e9:	sbb    eax,0x184ae524
  4085ee:	xor    cl,0x24
  4085f1:	sbb    dl,BYTE PTR [esi+0x1]
  4085f4:	adc    esp,DWORD PTR [ecx-0x38001f41]
  4085fa:	push   ss
  4085fb:	pop    ss
  4085fc:	jmp    0x30a7940b
  408601:	mov    ebp,0x11778639
  408606:	jb     0x4085ed
  408608:	sub    DWORD PTR [eax],0xc6ee1c3b
  40860e:	push   0x2f
  408610:	push   esi
  408611:	jae    0x4085cd
  408613:	pop    es
  408614:	pop    eax
  408615:	ss jl  0x408598
  408618:	pop    edx
  408619:	xchg   edi,eax
  40861a:	lods   eax,DWORD PTR ds:[esi]
  40861b:	retf   0x9190
  40861e:	dec    ebx
  40861f:	je     0x4085df
  408621:	outs   dx,BYTE PTR ds:[esi]
  408622:	add    BYTE PTR [ebx+0x728717],al
  408628:	or     DWORD PTR [edi+0x42],ebp
  40862b:	mov    edx,DWORD PTR [ebx+0x501091da]
  408631:	lahf   
  408632:	jmp    0x4ff27fc6
  408637:	lea    eax,[ecx-0x33]
  40863a:	ds or  DWORD PTR gs:[edx],edx
  40863e:	push   edx
  40863f:	call   esp
  408641:	mov    esi,0x48ed301f
  408646:	stos   DWORD PTR es:[edi],eax
  408647:	ds ins BYTE PTR es:[edi],dx
  408649:	ds loop 0x4086be
  40864c:	dec    eax
  40864d:	inc    edx
  40864e:	cmp    al,0x38
  408650:	loop   0x4086ab
  408652:	out    dx,eax
  408653:	mov    cl,0xb8
  408656:	test   BYTE PTR [edi+0x42],dl
  408659:	ret    0x4d84
  40865c:	mov    eax,0xc52ad03d
  408661:	adc    ebp,eax
  408663:	fcomp  QWORD PTR [eax*4+0x5166c05b]
  40866a:	stos   DWORD PTR es:[edi],eax
  40866b:	pop    esp
  40866c:	out    0x88,al
  40866e:	push   edx
  40866f:	or     edx,DWORD PTR [edx-0x61e9140e]
  408675:	pop    ss
  408676:	loopne 0x408626
  408678:	add    edi,ebp
  40867a:	js     0x40869f
  40867c:	jmp    0x961694db
  408681:	ins    DWORD PTR es:[edi],dx
  408682:	mov    ds:0x3510a749,al
  408687:	mov    edi,0x2fd547b7
  40868c:	test   BYTE PTR [edi+0x543cbc66],ah
  408692:	inc    ebx
  408693:	or     eax,0x532a4e4c
  408698:	les    eax,FWORD PTR [ebp+0x30]
  40869b:	addr16 pop ebp
  40869d:	add    DWORD PTR [ecx-0x6a15f6b1],0xffffffb7
  4086a4:	dec    edx
  4086a5:	push   ebx
  4086a6:	mov    dl,0x22
  4086a8:	fcmovu st,st(6)
  4086aa:	out    dx,al
  4086ab:	shr    BYTE PTR [edx],0x6c
  4086ae:	(bad)  
  4086af:	mov    WORD PTR [eax+0x6e732e55],ss
  4086b5:	sub    ch,dl
  4086b7:	popa   
  4086b8:	fdiv   QWORD PTR [edx+0x55e01baf]
  4086be:	or     bl,bl
  4086c0:	pop    ss
  4086c1:	mov    edi,0x244c585a
  4086c6:	jge    0x408730
  4086c8:	adc    DWORD PTR [esi+0x4a],ecx
  4086cb:	inc    ecx
  4086cc:	inc    edi
  4086cd:	into   
  4086ce:	cmp    edi,eax
  4086d0:	pop    ss
  4086d1:	add    eax,0xb77a32a
  4086d6:	ficom  DWORD PTR [edx+0x5d0a784a]
  4086dc:	sub    al,0x3b
  4086de:	into   
  4086df:	sbb    ebx,DWORD PTR [ecx-0x3d]
  4086e2:	adc    DWORD PTR [edi-0x18],ebx
  4086e5:	dec    esi
  4086e6:	mov    al,0xdc
  4086e8:	arpl   WORD PTR [ecx-0x5f],bx
  4086eb:	sti    
  4086ec:	jnp    0x408739
  4086ee:	jns    0x40872c
  4086f0:	and    BYTE PTR [edi-0x5e],dh
  4086f3:	or     DWORD PTR [esi-0x588cbd7c],ebp
  4086f9:	ds nop
  4086fb:	cmp    BYTE PTR [esp+ebp*4],0x2f
  4086ff:	adc    dh,ah
  408701:	pushf  
  408702:	add    dh,dl
  408704:	fwait
  408705:	aaa    
  408706:	outs   dx,DWORD PTR ds:[esi]
  408707:	pop    esi
  408708:	pop    ss
  408709:	outs   dx,DWORD PTR ds:[esi]
  40870a:	js     0x40874b
  40870c:	inc    cx
  40870e:	in     al,0x8d
  408710:	add    DWORD PTR [ebx],esi
  408712:	(bad)  
  408713:	or     eax,0x8e121272
  408718:	cld    
  408719:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40871b:	pop    ds
  40871c:	pushf  
  40871d:	mov    esi,0xb0080ca3
  408722:	sbb    DWORD PTR [ecx-0x3f],0x7
  408726:	jg     0x4087a0
  408728:	cmc    
  408729:	mov    ebp,0x438c86b1
  40872e:	pop    es
  40872f:	test   BYTE PTR [ecx-0x61],dh
  408732:	cmp    al,0xdf
  408734:	add    BYTE PTR [esi+ecx*1],al
  408737:	inc    ebx
  408738:	sbb    eax,0x9a61ed5b
  40873d:	ret    0x7e17
  408740:	push   0xffffffd4
  408742:	les    edx,FWORD PTR [esi+ecx*1]
  408745:	and    dl,BYTE PTR [edi+0xc]
  408748:	mov    eax,ds:0xc9691f72
  40874d:	and    eax,DWORD PTR fs:[ebx]
  408750:	into   
  408751:	pop    es
  408752:	dec    edx
  408753:	icebp  
  408754:	fs aaa 
  408756:	cmp    DWORD PTR [ecx],ebx
  408758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408759:	jb     0x408722
  40875b:	cmp    DWORD PTR ds:0x7ab492f,esp
  408761:	mov    esp,0xd36ff4e2
  408766:	jne    0x4087dc
  408768:	(bad)  
  40876a:	ret    0x29c7
  40876d:	dec    edx
  40876e:	lock hlt 
  408770:	inc    esi
  408771:	sub    DWORD PTR [edi+ecx*4-0x7b],0x7f
  408776:	ins    BYTE PTR es:[edi],dx
  408777:	xchg   esi,eax
  408778:	(bad)  
  408779:	mov    DWORD PTR [edx+0x68bd59e5],edi
  40877f:	shl    BYTE PTR [ebx-0x2a18f78d],cl
  408785:	test   DWORD PTR [edx],eax
  408787:	inc    eax
  408788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408789:	xchg   eax,esi
  40878b:	sbb    DWORD PTR [esi],esi
  40878d:	or     ah,BYTE PTR [ecx]
  40878f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408790:	popa   
  408791:	call   0x1d75:0x6e62bb42
  408798:	nop
  408799:	or     BYTE PTR [eax+0x27],dl
  40879c:	or     al,0x40
  40879e:	arpl   WORD PTR [esi-0x5d23fc7],si
  4087a4:	sub    al,0x92
  4087a6:	mov    edx,?
  4087a8:	push   ds
  4087a9:	lahf   
  4087aa:	fbstp  TBYTE PTR ds:0x79b4f093
  4087b0:	mov    esp,0x1b9242de
  4087b5:	lods   al,BYTE PTR ds:[esi]
  4087b6:	or     DWORD PTR [eax+0x35afa9fd],edi
  4087bc:	jl     0x4087ef
  4087be:	(bad)  
  4087bf:	push   ecx
  4087c0:	cmp    ecx,DWORD PTR [edx-0x41]
  4087c3:	mov    ecx,esp
  4087c5:	xor    ebp,DWORD PTR [ecx+eiz*8+0x536a38c3]
  4087cc:	jmp    0x408752
  4087ce:	push   ebx
  4087cf:	push   eax
  4087d0:	fwait
  4087d1:	jno    0x4087f8
  4087d3:	ror    DWORD PTR [ebp-0x4949bf7b],cl
  4087d9:	cdq    
  4087da:	add    BYTE PTR [ebp+0x74],dh
  4087dd:	fsubp  st(3),st
  4087df:	stc    
  4087e0:	pop    ebp
  4087e1:	lods   al,BYTE PTR ds:[esi]
  4087e2:	imul   ecx,ebx,0x2311292c
  4087e8:	mov    ds:0x6406140f,eax
  4087ed:	int    0xe5
  4087ef:	in     eax,0x3f
  4087f1:	mov    al,ds:0xe8c66021
  4087f6:	das    
  4087f7:	rcl    DWORD PTR [esp+ecx*4-0xe],1
  4087fb:	not    BYTE PTR [ebp-0x37cc4310]
  408801:	xor    al,0x4
  408803:	and    BYTE PTR [ebp-0x79],dl
  408806:	stos   BYTE PTR es:[edi],al
  408807:	jo     0x40879c
  408809:	fst    st(5)
  40880b:	push   ebp
  40880c:	xchg   esi,eax
  40880d:	fdivr  st(1),st
  40880f:	pop    eax
  408810:	call   0x5490:0x2d478648
  408817:	inc    esi
  408818:	push   esp
  408819:	push   edx
  40881a:	mov    dl,0x73
  40881c:	mov    eax,ds:0x18feac12
  408821:	mov    bh,0x79
  408823:	or     DWORD PTR [esi-0x7d],ebx
  408826:	jo     0x4087c4
  408828:	es push es
  40882a:	pop    edi
  40882b:	add    al,BYTE PTR [eax+0x2dc8bb11]
  408831:	dec    esp
  408832:	or     DWORD PTR [esi+esi*2+0x69],eax
  408836:	jb     0x40888d
  408838:	push   ebx
  408839:	dec    DWORD PTR [ecx-0x45]
  40883c:	mov    dh,0x61
  40883e:	outs   dx,DWORD PTR ds:[esi]
  40883f:	retf   
  408840:	in     al,0x3f
  408842:	jl     0x408833
  408844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408845:	mov    ecx,DWORD PTR [eax-0x5f]
  408848:	aas    
  408849:	out    dx,al
  40884a:	jb     0x408843
  40884c:	add    BYTE PTR [ebp+0x2c],0xd7
  408850:	or     al,0x8b
  408852:	inc    esi
  408853:	xchg   sp,ax
  408855:	enter  0xc830,0xf1
  408859:	push   eax
  40885a:	xchg   esp,eax
  40885b:	push   ss
  40885c:	xor    edi,ebp
  40885e:	dec    esi
  40885f:	inc    esi
  408860:	jle    0x408822
  408862:	cmp    BYTE PTR [ecx+0x5e],bh
  408865:	rcr    DWORD PTR [ecx+0x57adb2d4],1
  40886b:	cmp    DWORD PTR [esi],0xefba1fcd
  408871:	inc    esp
  408872:	shl    BYTE PTR ds:[ebp-0x35f7765d],0x6f
  40887a:	inc    ebx
  40887b:	(bad)  
  40887c:	into   
  40887d:	ins    BYTE PTR es:[edi],dx
  40887e:	inc    DWORD PTR [eax+0x6917f363]
  408884:	aad    0xe8
  408886:	(bad)  
  408887:	dec    edx
  408888:	cmp    BYTE PTR [edi],dl
  40888a:	cmp    eax,0x87805937
  40888f:	(bad)  
  408890:	ins    DWORD PTR es:[edi],dx
  408891:	add    ebx,DWORD PTR [ecx+esi*2]
  408894:	addr16 out 0x5e,al
  408897:	aam    0x44
  408899:	retf   
  40889a:	or     BYTE PTR [esi+0x66],bh
  40889d:	jp     0x408902
  40889f:	loop   0x4088ee
  4088a1:	mov    WORD PTR [edx+edx*2+0x34],ss
  4088a5:	inc    edi
  4088a6:	mov    ch,0xff
  4088a8:	xchg   ecx,eax
  4088a9:	shr    DWORD PTR [edx],1
  4088ab:	test   DWORD PTR [ebx+0x69ac397a],ebx
  4088b1:	jecxz  0x408835
  4088b3:	adc    eax,0x95b06fd4
  4088b8:	js     0x408843
  4088ba:	push   ds
  4088bb:	push   esp
  4088bc:	loope  0x408918
  4088be:	and    al,0x21
  4088c0:	pop    ebx
  4088c1:	xor    ebp,DWORD PTR [edx+0x4bbf07e7]
  4088c7:	lods   al,BYTE PTR ds:[esi]
  4088c8:	retf   
  4088c9:	loop   0x408880
  4088cb:	jecxz  0x408881
  4088cd:	cmp    eax,0xd3131c79
  4088d2:	lods   al,BYTE PTR ds:[esi]
  4088d3:	leave  
  4088d4:	lea    esi,[ebp-0x64ba5330]
  4088da:	pop    esi
  4088db:	jb     0x408936
  4088dd:	xchg   ecx,eax
  4088de:	cmp    bh,bl
  4088e0:	out    0xfa,eax
  4088e2:	not    BYTE PTR ds:0x6eb56658
  4088e8:	jecxz  0x40886b
  4088ea:	outs   dx,DWORD PTR ds:[esi]
  4088eb:	cdq    
  4088ec:	dec    edx
  4088ed:	adc    DWORD PTR [edi],0x26
  4088f0:	fnstcw WORD PTR [edx-0x10]
  4088f3:	xchg   BYTE PTR [edi+0x75],dh
  4088f6:	xchg   ebp,eax
  4088f7:	inc    esp
  4088f8:	lea    ecx,[ebx]
  4088fa:	mov    eax,0x5c91e648
  4088ff:	push   esp
  408900:	cmp    bh,BYTE PTR [esi]
  408902:	call   0x80e6:0xd0c55187
  408909:	popf   
  40890a:	shl    BYTE PTR [ebx],cl
  40890c:	jno    0x408905
  40890e:	lea    ecx,[ecx+0x550ce735]
  408914:	and    al,0xa8
  408916:	jmp    DWORD PTR [esi+ecx*2]
  408919:	aas    
  40891a:	clc    
  40891b:	in     al,dx
  40891c:	icebp  
  40891d:	jl     0x408931
  40891f:	pop    ebx
  408920:	call   0x9072:0x2c30436e
  408927:	pop    edx
  408928:	test   esp,edx
  40892a:	pop    ss
  40892b:	addr16 jne 0x4088db
  40892e:	shl    BYTE PTR [edi+0x757425d7],cl
  408934:	adc    ecx,DWORD PTR [esi-0xe]
  408937:	imul   edx,esp,0x6
  40893a:	mov    ebp,0xdb1872e7
  40893f:	jl     0x408908
  408941:	xchg   edi,eax
  408942:	in     al,0xd0
  408944:	or     BYTE PTR ds:0xf023e418,0xa6
  40894b:	dec    ecx
  40894c:	xchg   esp,eax
  40894d:	fwait
  40894e:	das    
  40894f:	rcl    DWORD PTR ds:0xd8eb4f97,0xe
  408956:	fmulp  st(2),st
  408958:	pop    esi
  408959:	js     0x408983
  40895b:	enter  0x71d6,0x45
  40895f:	or     DWORD PTR [eax+0x14],ebp
  408962:	xchg   ebp,eax
  408963:	ins    BYTE PTR es:[edi],dx
  408964:	mov    dh,0x62
  408966:	and    al,0xc4
  408968:	jno    0x4088fa
  40896a:	mov    ebx,0xb911be9
  40896f:	in     al,0x9e
  408971:	and    eax,0xa3dbc5cb
  408976:	call   0x101cfaa1
  40897b:	imul   ecx,DWORD PTR [edx-0x40],0xffffff82
  40897f:	ja     0x40892a
  408981:	shl    edx,cl
  408983:	js     0x4089ad
  408985:	fsubr  DWORD PTR [ebx*2+0x3b870ad6]
  40898c:	(bad)  
  40898d:	push   ebx
  40898e:	ret    
  40898f:	in     eax,0xce
  408991:	pushf  
  408992:	or     al,0xc9
  408994:	xchg   DWORD PTR [edi],esi
  408996:	mov    dh,0xf8
  408998:	fist   DWORD PTR [ebx-0x60]
  40899b:	sahf   
  40899c:	cmp    eax,0xe29eba19
  4089a1:	jmp    0x27ee44f1
  4089a6:	lock mov cl,0x16
  4089a9:	popf   
  4089aa:	mov    cl,0xa4
  4089ac:	fsub   QWORD PTR [esi+0x44]
  4089af:	cdq    
  4089b0:	sysenter 
  4089b2:	ror    DWORD PTR [eax+0x5ab7b940],1
  4089b8:	or     DWORD PTR [ecx+ecx*2],0x7a408ce5
  4089bf:	pop    edx
  4089c0:	pop    ss
  4089c1:	jle    0x40896f
  4089c3:	fisttp WORD PTR [ebx-0x28]
  4089c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c7:	je     0x408979
  4089c9:	loopne 0x40899f
  4089cb:	(bad)  
  4089cc:	dec    eax
  4089cd:	mov    eax,0xfa182b86
  4089d2:	push   ebp
  4089d3:	sub    DWORD PTR [edi],0x71994526
  4089d9:	mov    dh,0xa
  4089db:	imul   edi,DWORD PTR [ebx],0x5d
  4089de:	ficomp WORD PTR [esi+eax*2]
  4089e1:	mov    DWORD PTR [edi-0x70],ebp
  4089e4:	push   edi
  4089e5:	fs out 0xd9,al
  4089e8:	xchg   esp,eax
  4089e9:	arpl   WORD PTR [edx+0x2b],bx
  4089ec:	push   ecx
  4089ed:	pop    eax
  4089ee:	ins    DWORD PTR es:[edi],dx
  4089ef:	daa    
  4089f0:	cmp    eax,DWORD PTR [ebx+0x6de3543c]
  4089f6:	stos   DWORD PTR es:[edi],eax
  4089f7:	scas   eax,DWORD PTR es:[edi]
  4089f8:	into   
  4089f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089fa:	jbe    0x4089a9
  4089fc:	stos   BYTE PTR es:[edi],al
  4089fd:	and    eax,0xb34814d9
  408a02:	pop    ecx
  408a03:	lahf   
  408a04:	test   al,0x20
  408a06:	ror    DWORD PTR [ecx-0xa],1
  408a09:	sbb    DWORD PTR [esi+0x7a],edx
  408a0c:	pop    ebx
  408a0d:	adc    ecx,DWORD PTR [ecx]
  408a0f:	adc    BYTE PTR [esi+0x30],al
  408a12:	add    esi,ebx
  408a14:	add    al,0xb0
  408a16:	je     0x408998
  408a18:	clc    
  408a19:	jae    0x408a10
  408a1b:	mov    dh,0x40
  408a1d:	jmp    0x408a01
  408a1f:	dec    edi
  408a20:	adc    DWORD PTR [ebp+0x42],esp
  408a23:	sub    dh,dh
  408a25:	xchg   esp,eax
  408a26:	pusha  
  408a27:	mov    ebp,eax
  408a29:	push   eax
  408a2a:	adc    eax,0xe0407956
  408a2f:	xor    bl,ch
  408a31:	sub    bl,BYTE PTR [eax-0x5a002c6d]
  408a37:	lock sbb eax,ecx
  408a3a:	add    BYTE PTR [edx+eax*2-0x6d],dh
  408a3e:	dec    edi
  408a3f:	mov    cl,0xb7
  408a41:	push   esi
  408a42:	jb     0x4089f2
  408a44:	push   DWORD PTR [edi-0x4cbf5e24]
  408a4a:	or     ebx,ebp
  408a4c:	and    cl,BYTE PTR [edx+0x5b64922f]
  408a52:	jne    0x408a55
  408a54:	mov    ebx,0x41269484
  408a59:	popa   
  408a5a:	imul   esp,DWORD PTR [eax+0x3a],0xffffffe2
  408a5e:	int    0x7c
  408a60:	jb     0x408a1a
  408a62:	xchg   edx,eax
  408a63:	mov    dh,0xcc
  408a65:	dec    edx
  408a66:	sub    edx,edx
  408a68:	ins    DWORD PTR es:[edi],dx
  408a69:	ins    DWORD PTR es:[edi],dx
  408a6a:	outs   dx,DWORD PTR ds:[esi]
  408a6b:	cwde   
  408a6c:	dec    ebx
  408a6d:	push   edx
  408a6e:	cmp    eax,0x554dc47c
  408a73:	xchg   esp,eax
  408a74:	xchg   dh,dh
  408a76:	int    0x5e
  408a78:	push   0x3da4303a
  408a7d:	jbe    0x408a9c
  408a7f:	outs   dx,DWORD PTR ds:[esi]
  408a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a81:	cmp    DWORD PTR [edx+0x7546dc92],edx
  408a87:	cmp    DWORD PTR [edx],0xbcb0a717
  408a8d:	mov    eax,0x5ac55552
  408a92:	loope  0x408b05
  408a94:	jge    0x408ae6
  408a96:	xor    al,BYTE PTR [ebx-0x517d1cda]
  408a9c:	test   DWORD PTR [ebp+0x101dea84],esi
  408aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aa3:	hlt    
  408aa4:	sbb    ecx,ebp
  408aa6:	outs   dx,DWORD PTR ds:[esi]
  408aa7:	or     DWORD PTR [edx+0x12],esp
  408aaa:	cmp    esi,DWORD PTR [edx+eax*2-0x76]
  408aae:	(bad)  
  408aaf:	pop    esi
  408ab0:	nop
  408ab1:	sbb    bl,dl
  408ab3:	add    eax,0xb3649cc0
  408ab8:	test   eax,0xd9e01958
  408abd:	xor    eax,0x8532d41e
  408ac2:	cmp    BYTE PTR [esi],ah
  408ac4:	mov    edx,0x315d74d2
  408ac9:	jno    0x408add
  408acb:	xchg   esi,eax
  408acc:	stos   DWORD PTR es:[edi],eax
  408acd:	call   0xdaaa8cf2
  408ad2:	sub    BYTE PTR [edi-0x42d35ee5],cl
  408ad8:	sub    BYTE PTR [esi-0x77b71059],0x1b
  408adf:	dec    edx
  408ae0:	scas   eax,DWORD PTR es:[edi]
  408ae1:	or     DWORD PTR [edi+0x29],eax
  408ae4:	xchg   edx,eax
  408ae5:	leave  
  408ae6:	int    0xd6
  408ae8:	iret   
  408ae9:	cmovl  ebp,DWORD PTR [eax]
  408aec:	loopne 0x408b40
  408aee:	sahf   
  408aef:	stc    
  408af0:	clc    
  408af1:	leave  
  408af2:	das    
  408af3:	mov    ds:0x15fafe51,al
  408af8:	cli    
  408af9:	sbb    bl,BYTE PTR es:[edx-0x2f]
  408afd:	jge    0x408b36
  408aff:	pop    eax
  408b00:	pop    eax
  408b01:	mov    bh,0x91
  408b03:	ja     0x408a99
  408b05:	push   ebp
  408b06:	jmp    0x7205cbe9
  408b0b:	xor    al,0xd4
  408b0d:	shl    BYTE PTR [ecx+ebp*1],0x68
  408b11:	xor    BYTE PTR [eax+0x3ad940c0],bl
  408b17:	mov    ebp,0x116a72d3
  408b1c:	std    
  408b1d:	and    cl,cl
  408b1f:	pop    es
  408b20:	add    BYTE PTR [esp-0x563253ed],bl
  408b27:	rcl    DWORD PTR [edi+esi*4],cl
  408b2a:	jae    0x408ba9
  408b2c:	mov    bl,0xb9
  408b2e:	fld    DWORD PTR [edx-0xb]
  408b31:	mov    WORD PTR [eax-0x78],ds
  408b34:	cmp    al,0xb4
  408b36:	sbb    BYTE PTR [edx],ch
  408b38:	lock (bad) 
  408b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b3b:	cmp    BYTE PTR [ebx-0x21],ch
  408b3e:	les    ebx,FWORD PTR [eax+0x1598926e]
  408b44:	xor    ch,BYTE PTR [esi+ecx*4-0x145c3544]
  408b4b:	loop   0x408b16
  408b4d:	nop
  408b4e:	(bad)  
  408b4f:	pushf  
  408b50:	dec    edx
  408b51:	cmp    eax,0xb8adb429
  408b56:	(bad)  
  408b57:	adc    eax,0x460ee70
  408b5c:	cld    
  408b5d:	jo     0x408afc
  408b5f:	mov    dh,0x85
  408b61:	or     DWORD PTR [esp+edi*8],esi
  408b64:	mov    eax,ds:0xd11b48c6
  408b69:	pop    ebx
  408b6a:	lods   eax,DWORD PTR ds:[esi]
  408b6b:	mov    ecx,0x9aa19168
  408b70:	jae    0x408be5
  408b72:	out    0xc7,al
  408b74:	mov    eax,ds:0x799db39a
  408b79:	add    al,BYTE PTR [ecx+edx*1]
  408b7c:	pop    ecx
  408b7d:	in     eax,dx
  408b7e:	and    eax,0x44cc3d9a
  408b83:	mov    bl,0x8c
  408b85:	add    BYTE PTR [ebp-0x51],bl
  408b88:	test   BYTE PTR [edx+0x659f6b55],dl
  408b8e:	cmp    esp,esp
  408b90:	sar    DWORD PTR [edi+0x57],0x35
  408b94:	xchg   esi,eax
  408b95:	stc    
  408b96:	hlt    
  408b97:	push   edi
  408b98:	xor    bh,al
  408b9a:	shl    BYTE PTR [ebx-0x3e],cl
  408b9d:	cld    
  408b9e:	fnstenv [eax]
  408ba0:	int    0x6e
  408ba2:	mov    al,0x1d
  408ba4:	xchg   esi,eax
  408ba5:	in     al,dx
  408ba6:	test   BYTE PTR [edi+0x7135e40d],dh
  408bac:	cmp    dh,ah
  408bae:	arpl   WORD PTR [edx-0x33f5838],di
  408bb4:	pop    ebp
  408bb5:	cmp    ax,0xac6a
  408bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bba:	add    cl,BYTE PTR [edi+0x70e9ae83]
  408bc0:	add    dh,cl
  408bc2:	imul   edx,DWORD PTR [edx-0x66640e52],0x770807fd
  408bcc:	push   0xffffffc1
  408bce:	mov    al,ds:0x633f0c6b
  408bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd4:	pop    ds
  408bd5:	fs push esp
  408bd7:	cmp    DWORD PTR [ecx+ebp*2+0x53654549],edi
  408bde:	xlat   BYTE PTR ds:[ebx]
  408bdf:	mov    gs,WORD PTR [esi]
  408be1:	stc    
  408be2:	and    BYTE PTR [eax-0x13],dh
  408be5:	std    
  408be6:	mov    bl,0xdc
  408be8:	cmp    eax,0x5d382441
  408bed:	dec    ebp
  408bee:	add    eax,0x257baebe
  408bf3:	scas   al,BYTE PTR es:[edi]
  408bf4:	xchg   ebp,eax
  408bf5:	int3   
  408bf6:	mov    ah,0xe9
  408bf8:	nop
  408bf9:	scas   eax,DWORD PTR es:[edi]
  408bfa:	mov    dl,0xdc
  408bfc:	lods   eax,DWORD PTR ds:[esi]
  408bfd:	mov    ebp,0x658b1880
  408c02:	test   BYTE PTR [eax-0x7861a4b],ah
  408c08:	out    dx,eax
  408c09:	retf   
  408c0a:	xchg   ebx,eax
  408c0b:	or     ebp,DWORD PTR [edi-0xbf669bf]
  408c11:	scas   eax,DWORD PTR es:[edi]
  408c12:	xchg   DWORD PTR [edi-0x24],eax
  408c15:	es std 
  408c17:	push   ss
  408c18:	clc    
  408c19:	mov    ds:0xe481d2de,al
  408c1e:	and    eax,0xf8858ab5
  408c23:	cmc    
  408c24:	fs sub eax,0x6023ad91
  408c2a:	in     eax,dx
  408c2b:	xchg   BYTE PTR [ecx+esi*4-0x4a],bl
  408c2f:	mov    esp,0x54190644
  408c34:	aad    0x3
  408c36:	mov    al,0x28
  408c38:	sar    BYTE PTR [esi-0x19],cl
  408c3b:	xchg   ecx,eax
  408c3c:	inc    ebp
  408c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c3e:	mov    ebp,0xe6bae0b1
  408c43:	jb     0x408bf4
  408c45:	push   ebx
  408c46:	out    0x97,al
  408c48:	fsubr  DWORD PTR [edx+0xae944ec]
  408c4e:	push   eax
  408c4f:	mov    ch,0x22
  408c51:	cmp    BYTE PTR [ebp+0x2a756ef1],ch
  408c57:	mov    eax,0x423d7ae1
  408c5c:	push   es
  408c5d:	test   eax,0x1b9bcce1
  408c62:	jne    0x408bea
  408c64:	xor    ch,BYTE PTR [edi-0x7e]
  408c67:	pop    esp
  408c68:	popf   
  408c69:	or     DWORD PTR [ecx-0x26],esp
  408c6c:	lock ror BYTE PTR [eiz*4-0x214abb49],0x89
  408c75:	mov    bh,0x2
  408c77:	sbb    esi,DWORD PTR [ecx+0x30]
  408c7a:	daa    
  408c7b:	mov    dx,0xba71
  408c7f:	pop    ebp
  408c80:	jle    0x408c0a
  408c82:	out    dx,eax
  408c83:	xor    BYTE PTR es:[ebx+0x32b9d82f],bl
  408c8a:	ror    dh,cl
  408c8c:	jnp    0x408d01
  408c8e:	cmp    al,0x59
  408c90:	xor    BYTE PTR [eax],al
  408c92:	(bad)  
  408c93:	out    0x53,al
  408c95:	loope  0x408d0b
  408c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c98:	and    al,BYTE PTR [ebp+0x57791f9c]
  408c9e:	pop    esi
  408c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca0:	add    edx,DWORD PTR [eax+0x43444979]
  408ca6:	std    
  408ca7:	sub    cl,BYTE PTR [edi]
  408ca9:	shl    BYTE PTR [esi+0x312b6597],1
  408caf:	scas   al,BYTE PTR es:[edi]
  408cb0:	cmp    esi,DWORD PTR es:[edx]
  408cb3:	data16 jo 0x408cd0
  408cb6:	mov    eax,ss
  408cb8:	icebp  
  408cb9:	in     eax,0xe
  408cbb:	das    
  408cbc:	cli    
  408cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cbe:	stc    
  408cbf:	mov    ecx,0x1e5aac39
  408cc4:	xchg   edi,eax
  408cc5:	ja     0x408c73
  408cc7:	std    
  408cc8:	sub    BYTE PTR [ebx],ah
  408cca:	pop    esi
  408ccb:	and    eax,0xc285f73e
  408cd0:	or     BYTE PTR [edx+0x501f6c9d],0x81
  408cd7:	mov    dl,0xca
  408cd9:	cmp    bl,BYTE PTR [ebp-0x2b]
  408cdc:	mov    edi,0x3eefea42
  408ce1:	das    
  408ce2:	mov    ch,0x7d
  408ce4:	cmp    eax,0xdb8089ea
  408ce9:	ficomp DWORD PTR [edi]
  408ceb:	xchg   ebx,eax
  408cec:	cmp    esp,DWORD PTR [eax-0x6f]
  408cef:	push   eax
  408cf0:	mov    esp,0x9a180eac
  408cf5:	or     eax,edx
  408cf7:	in     al,dx
  408cf8:	into   
  408cf9:	cmp    cl,BYTE PTR [edx-0x5e33ba55]
  408cff:	dec    cl
  408d01:	imul   ebp,DWORD PTR ds:0xb9721fd7,0xfffffff7
  408d08:	fsubr  DWORD PTR [ebx-0x2c]
  408d0b:	sbb    edi,DWORD PTR [ecx]
  408d0d:	jnp    0x408c9f
  408d0f:	mov    WORD PTR [ebx],cs
  408d11:	cmp    DWORD PTR [edi],esi
  408d13:	pop    ss
  408d14:	mov    esp,0xf7e3d589
  408d19:	push   ebx
  408d1a:	adc    DWORD PTR [edi],esi
  408d1c:	inc    eax
  408d1d:	add    BYTE PTR [ecx+0x4b298daf],ah
  408d23:	adc    BYTE PTR ds:0x62e5ecd9,ch
  408d29:	xchg   esp,eax
  408d2a:	sbb    ah,BYTE PTR [esp+eax*8]
  408d2d:	mov    al,ds:0x34006046
  408d32:	outs   dx,DWORD PTR ds:[esi]
  408d33:	xchg   BYTE PTR [ecx+0x400bd9fa],cl
  408d39:	ss call 0xe099a628
  408d3f:	push   esp
  408d40:	mov    ecx,0xda01aea9
  408d45:	outs   dx,BYTE PTR ds:[esi]
  408d46:	ds adc eax,0xa98eb1b6
  408d4c:	adc    BYTE PTR [esi-0x63207801],al
  408d52:	sar    eax,1
  408d54:	retf   0x50a6
  408d57:	and    eax,0x5a81e3ed
  408d5c:	imul   edx,edi,0xadc6fb66
  408d62:	aad    0x5e
  408d64:	sar    BYTE PTR [edi+0x48470d3],1
  408d6a:	mov    ax,ds:0x891490aa
  408d70:	aaa    
  408d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d72:	pop    ebx
  408d73:	push   ebp
  408d74:	xlat   BYTE PTR ds:[ebx]
  408d75:	sub    dh,BYTE PTR [edx]
  408d77:	pop    es
  408d78:	stos   BYTE PTR es:[edi],al
  408d79:	inc    eax
  408d7a:	imul   esi,ecx,0xa466e54e
  408d80:	test   al,0xd1
  408d82:	xor    esi,DWORD PTR [ebp+ebp*1+0x7d]
  408d86:	stos   DWORD PTR es:[edi],eax
  408d87:	mov    dh,0x57
  408d89:	(bad)  
  408d8b:	xchg   esp,eax
  408d8c:	push   ss
  408d8d:	je     0x408dc1
  408d8f:	retf   
  408d90:	mov    ah,0x58
  408d92:	cld    
  408d93:	scas   eax,DWORD PTR es:[edi]
  408d94:	imul   edx,DWORD PTR [ebx-0xa],0xffffffe8
  408d98:	adc    BYTE PTR [ebx+0x672d23],0xb0
  408d9f:	xchg   esp,eax
  408da0:	or     dl,BYTE PTR [eax]
  408da2:	jne    0x408d9f
  408da4:	adc    dh,al
  408da6:	jp     0x408d99
  408da8:	mov    al,ah
  408daa:	in     al,0x6
  408dac:	mov    edx,0xce125c9d
  408db1:	inc    eax
  408db2:	mov    ebp,0x809595c
  408db7:	and    ch,BYTE PTR [edx+0x694b5d45]
  408dbd:	fst    QWORD PTR [esi-0x63f86d4]
  408dc3:	jmp    0x408e40
  408dc5:	div    BYTE PTR ds:0x705542e6
  408dcb:	inc    ebp
  408dcc:	or     al,0xb9
  408dce:	(bad)  
  408dcf:	loope  0x408dbd
  408dd1:	je     0x408e26
  408dd3:	mov    ebx,0xa85b3d6
  408dd8:	pushf  
  408dd9:	cmp    eax,0x595f14e0
  408dde:	outs   dx,BYTE PTR ds:[esi]
  408ddf:	sbb    eax,0x75a21407
  408de4:	xlat   BYTE PTR ds:[ebx]
  408de5:	scas   al,BYTE PTR es:[edi]
  408de6:	mov    eax,ds:0x1e388c16
  408deb:	sub    ebx,edx
  408ded:	mov    ecx,0xb0db1296
  408df2:	jmp    0x408de3
  408df4:	mov    BYTE PTR ds:0xdef6f50e,cl
  408dfa:	dec    ebp
  408dfb:	jp     0x408dbb
  408dfd:	mov    cl,0x5b
  408dff:	cli    
  408e00:	cmc    
  408e01:	mov    dl,0x12
  408e03:	push   ss
  408e04:	in     al,0xbe
  408e06:	int3   
  408e07:	sbb    esp,DWORD PTR [esi-0x60]
  408e0a:	cmp    BYTE PTR [ebx+0x248396dc],dh
  408e10:	pop    es
  408e11:	test   al,0x7e
  408e13:	leave  
  408e14:	adc    BYTE PTR [eax+0xa979704],al
  408e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e1b:	mov    esi,DWORD PTR [edx]
  408e1d:	out    0x4d,eax
  408e1f:	adc    ecx,DWORD PTR [ebx+0xe]
  408e22:	(bad)  [ebp+0x7e]
  408e25:	pop    ss
  408e26:	hlt    
  408e27:	aad    0x86
  408e29:	out    0x2f,al
  408e2b:	xor    BYTE PTR [edx-0x3ddb38d],0x8a
  408e32:	mov    bl,0x93
  408e34:	and    edx,DWORD PTR ds:0x652b9335
  408e3a:	cwde   
  408e3b:	fild   DWORD PTR [eax+0x12]
  408e3e:	pop    ds
  408e3f:	pop    ebx
  408e40:	cmc    
  408e41:	jae    0x408e0d
  408e43:	push   edx
  408e44:	stc    
  408e45:	and    eax,0x7d63adbc
  408e4a:	std    
  408e4b:	test   DWORD PTR [eax-0x1b],esp
  408e4e:	pop    esp
  408e4f:	repnz sub al,0xc4
  408e52:	sub    cl,BYTE PTR [eax]
  408e54:	mov    esi,0x47f9a3ab
  408e59:	add    DWORD PTR [ebx-0x2c],ebx
  408e5c:	add    DWORD PTR [ecx+eiz*4],0xf6c48929
  408e63:	adc    DWORD PTR [eax-0xe6b29e7],eax
  408e69:	and    BYTE PTR [eax+0xd5c195b],ch
  408e6f:	ret    
  408e70:	ja     0x408e9b
  408e72:	ror    DWORD PTR [ebx+ebx*2+0x5f],0x11
  408e77:	cs popf 
  408e79:	and    BYTE PTR [esi+0x53],0x51
  408e7d:	and    esp,DWORD PTR [ebp-0x2bd216f6]
  408e83:	jecxz  0x408eae
  408e85:	neg    DWORD PTR [edi]
  408e87:	pop    edi
  408e88:	call   0x9bfc:0xd920c7ab
  408e8f:	sub    BYTE PTR [esi-0x57400054],bh
  408e95:	pop    ebp
  408e96:	fwait
  408e97:	sbb    edi,edi
  408e99:	popf   
  408e9a:	scas   eax,DWORD PTR es:[edi]
  408e9b:	scas   al,BYTE PTR es:[edi]
  408e9c:	mov    eax,0x1d3169c4
  408ea1:	mov    bh,0x3e
  408ea3:	add    al,0x17
  408ea5:	xor    al,0x7
  408ea7:	loopne 0x408edc
  408ea9:	mov    ecx,0xd011b0ed
  408eae:	imul   eax,esp,0xffffffcd
  408eb1:	das    
  408eb2:	and    DWORD PTR [edi+0x51],0x7a
  408eb6:	add    al,0xde
  408eb8:	mov    ds,eax
  408eba:	outs   dx,BYTE PTR ds:[esi]
  408ebb:	add    cl,BYTE PTR [edx+0x56e1552d]
  408ec1:	ds push ss
  408ec3:	cwde   
  408ec4:	sbb    bl,cl
  408ec6:	push   0x2f
  408ec8:	outs   dx,DWORD PTR ds:[esi]
  408ec9:	retf   0x22ba
  408ecc:	inc    edi
  408ecd:	dec    edi
  408ece:	fsub   DWORD PTR [esi+0x44edaa45]
  408ed4:	cmp    edi,DWORD PTR [esi]
  408ed6:	dec    edi
  408ed7:	jmp    0x73f73841
  408edc:	clc    
  408edd:	cwde   
  408ede:	out    dx,eax
  408edf:	add    BYTE PTR ds:0xd4fea1d9,dh
  408ee5:	add    eax,0xb838705f
  408eea:	dec    esp
  408eeb:	mov    ds:0x9273d147,al
  408ef0:	dec    esp
  408ef1:	jmp    0x49215be1
  408ef6:	sbb    al,BYTE PTR [edx-0x50]
  408ef9:	push   edx
  408efa:	fs dec edi
  408efc:	adc    edi,DWORD PTR [ecx+0x18]
  408eff:	sub    eax,0x433095d1
  408f04:	and    BYTE PTR [ecx],0x83
  408f07:	imul   ebx,DWORD PTR [ebx],0x9eba6f9b
  408f0d:	repz dec edi
  408f0f:	mov    ?,WORD PTR [eax+edi*2-0x9]
  408f13:	cmp    DWORD PTR [eax+ebx*8+0x6e],0x90fb13c
  408f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f1c:	or     BYTE PTR [ebp-0x13],ah
  408f1f:	data16 fwait
  408f21:	cwde   
  408f22:	xor    DWORD PTR [edx+ecx*4-0x7d4ec27c],ebp
  408f29:	push   esp
  408f2a:	ss push 0x31
  408f2d:	pop    edx
  408f2e:	imul   edx,ebp,0xffffffee
  408f31:	dec    edi
  408f32:	je     0x408eba
  408f34:	mov    bl,0xdf
  408f36:	xchg   BYTE PTR [ecx+0xaeb3d14],cl
  408f3c:	das    
  408f3d:	lods   eax,DWORD PTR ds:[esi]
  408f3e:	mov    ebp,0x18d7c619
  408f43:	popa   
  408f44:	nop
  408f45:	mov    dh,bl
  408f47:	retf   0x72ff
  408f4a:	rcl    BYTE PTR [ecx-0x50],1
  408f4d:	or     al,0x2a
  408f4f:	dec    esi
  408f50:	popf   
  408f51:	dec    edx
  408f52:	std    
  408f53:	sbb    bl,BYTE PTR [esi]
  408f55:	cdq    
  408f56:	push   eax
  408f57:	loopne 0x408f73
  408f59:	retf   
  408f5a:	ins    BYTE PTR es:[edi],dx
  408f5b:	cmp    esi,DWORD PTR [esp+ecx*8-0x2d]
  408f5f:	sub    BYTE PTR [edx+ebx*4],al
  408f62:	or     eax,0x5e9932cd
  408f67:	jns    0x408f70
  408f69:	jae    0x408f62
  408f6b:	ja     0x408efc
  408f6d:	mov    bh,0xb1
  408f6f:	adc    al,0x57
  408f71:	in     al,dx
  408f72:	mov    edi,0xde198687
  408f77:	int    0x50
  408f79:	fldcw  WORD PTR [ecx+esi*1-0x68fa961d]
  408f80:	push   ecx
  408f81:	outs   dx,BYTE PTR ds:[esi]
  408f82:	ins    BYTE PTR es:[edi],dx
  408f83:	mov    eax,0x5b342dc3
  408f88:	(bad)  
  408f89:	scas   eax,DWORD PTR es:[edi]
  408f8a:	mov    BYTE PTR [eax],0x52
  408f8d:	push   es
  408f8e:	test   eax,0x4c3abeb9
  408f93:	lods   eax,DWORD PTR ds:[esi]
  408f94:	call   0xa987f288
  408f99:	enter  0xbb6f,0xe8
  408f9d:	adc    ecx,DWORD PTR [esi+esi*4+0x1f]
  408fa1:	popf   
  408fa2:	jge    0x408fc3
  408fa4:	xchg   ecx,eax
  408fa5:	and    ebx,DWORD PTR [eax]
  408fa7:	sub    eax,0xd3bb59c9
  408fac:	call   0x91086acb
  408fb1:	pop    ss
  408fb2:	jp     0x409017
  408fb4:	push   0x6c
  408fb6:	jbe    0x408f8e
  408fb8:	mov    eax,ds:0xf22e82a9
  408fbd:	mov    WORD PTR ds:0x4cf64144,ds
  408fc3:	xor    DWORD PTR [eax+eax*1+0x7bbe8426],esi
  408fca:	push   ecx
  408fcb:	inc    ebp
  408fcc:	xchg   ebp,eax
  408fcd:	jp     0x408fd1
  408fcf:	jecxz  0x409036
  408fd1:	sbb    BYTE PTR [ebp+0x78],dh
  408fd4:	xor    al,0xcc
  408fd6:	or     ecx,DWORD PTR [ebp+0x71c1d1fa]
  408fdc:	cli    
  408fdd:	dec    ecx
  408fde:	sbb    ecx,ebp
  408fe0:	scas   eax,DWORD PTR es:[edi]
  408fe1:	sti    
  408fe2:	dec    ebp
  408fe3:	mov    ds:0x8c2aad44,al
  408fe8:	pop    ds
  408fe9:	(bad)  
  408fea:	and    BYTE PTR [esi],ch
  408fec:	or     eax,0x43b00ffc
  408ff1:	adc    al,0x61
  408ff3:	loope  0x409021
  408ff5:	arpl   WORD PTR [ebp-0x74037954],bp
  408ffb:	xor    al,0x40
  408ffd:	bound  edi,QWORD PTR [edx+0x3bd1baf0]
  409003:	test   al,0xa1
  409005:	(bad)  
  409006:	and    ebp,ebp
  409008:	xor    ch,ah
  40900a:	loopne 0x408ff8
  40900c:	repz xchg esi,eax
  40900e:	fbld   TBYTE PTR [ebx-0x12]
  409011:	dec    ebx
  409012:	pop    eax
  409013:	clc    
  409014:	xchg   esi,eax
  409015:	rcr    DWORD PTR [ebp+0x41e8efcd],1
  40901b:	and    dh,BYTE PTR [esi-0x2f]
  40901e:	fimul  DWORD PTR [eax]
  409020:	xchg   edi,eax
  409021:	push   esi
  409022:	sbb    eax,0xdc0f8839
  409027:	push   edi
  409028:	cmovns edx,DWORD PTR [edx-0x13c6f8de]
  40902f:	dec    ebp
  409030:	fwait
  409031:	leave  
  409032:	xor    DWORD PTR [esi-0x61],ebx
  409035:	xchg   esp,eax
  409036:	mov    ebp,0xd352bfab
  40903b:	into   
  40903c:	sahf   
  40903d:	push   ebx
  40903e:	inc    eax
  40903f:	mov    ecx,0xa966f5c1
  409044:	(bad)  [edx-0x69]
  409047:	or     esp,ebp
  409049:	dec    ebx
  40904a:	jne    0x40900f
  40904c:	inc    edi
  40904d:	add    DWORD PTR [ecx-0xd],0x44977844
  409054:	push   0xd8f9a017
  409059:	jae    0x5abc2667
  40905f:	mov    al,ds:0x5c8e7b6b
  409064:	outs   dx,BYTE PTR ds:[esi]
  409065:	fs fs aad 0xc4
  409069:	xor    ebp,esi
  40906b:	pop    esp
  40906c:	retf   
  40906d:	inc    edi
  40906e:	add    BYTE PTR [edi],cl
  409070:	or     DWORD PTR [edx+0x1f],eax
  409073:	and    ch,BYTE PTR [edi]
  409075:	xor    bl,BYTE PTR [ecx+0x6]
  409078:	xchg   edx,eax
  409079:	mov    al,ds:0xace9d0a9
  40907e:	pop    ecx
  40907f:	cmp    DWORD PTR [esi-0x10],ebx
  409082:	xchg   edx,eax
  409083:	test   DWORD PTR [edi-0x7e8e8b45],ecx
  409089:	jge    0x4090d7
  40908b:	(bad)  
  40908c:	pop    ecx
  40908d:	mov    BYTE PTR [edi+0x779fbe43],al
  409093:	test   eax,0x3d0f1499
  409098:	xchg   ebx,eax
  409099:	inc    ebx
  40909a:	out    0xa8,eax
  40909c:	ret    
  40909d:	(bad)  
  40909e:	and    dh,BYTE PTR [ecx+0x6b]
  4090a1:	jo     0x4090d0
  4090a3:	add    esp,DWORD PTR [ebx+edx*1]
  4090a6:	fs dec edi
  4090a8:	xor    DWORD PTR [esi+eiz*1+0x72452bc1],edi
  4090af:	lods   eax,DWORD PTR ds:[esi]
  4090b0:	std    
  4090b1:	mov    bl,0xd0
  4090b3:	mov    ebx,0x8b2cd08e
  4090b8:	(bad)  
  4090b9:	adc    eax,esp
  4090bb:	test   eax,0xf0f7056a
  4090c0:	and    cl,BYTE PTR [ecx-0x21d7b134]
  4090c6:	pop    edx
  4090c7:	fs aad 0xc0
  4090ca:	pop    esi
  4090cb:	std    
  4090cc:	xchg   ebp,eax
  4090cd:	pop    edx
  4090ce:	push   ebp
  4090cf:	add    al,0x49
  4090d1:	(bad)  
  4090d2:	js     0x4090dc
  4090d4:	nop
  4090d5:	test   al,0x7d
  4090d7:	addr16 pop ds
  4090d9:	cmp    edx,DWORD PTR [esi-0x7001512b]
  4090df:	xchg   ebx,eax
  4090e0:	jns    0x40915d
  4090e2:	in     eax,0x33
  4090e4:	pop    eax
  4090e5:	retf   
  4090e6:	push   cs
  4090e7:	dec    edx
  4090e8:	out    0x7e,eax
  4090ea:	pop    esi
  4090eb:	cmp    ecx,DWORD PTR [edi-0x77e8a4d9]
  4090f1:	jo     0x409101
  4090f3:	fbstp  TBYTE PTR [edi-0x53bd3ba7]
  4090f9:	and    al,0x1f
  4090fb:	add    BYTE PTR [ebx+0x67581405],0x31
  409102:	cwde   
  409103:	sbb    al,0x54
  409105:	daa    
  409106:	das    
  409107:	xor    ebx,DWORD PTR [eax+0x18fe2668]
  40910d:	and    cl,ah
  40910f:	add    edx,DWORD PTR [edx+0x159bdc3a]
  409115:	pop    esp
  409116:	push   ss
  409117:	ret    
  409118:	xor    ecx,ecx
  40911a:	aas    
  40911b:	(bad)  
  40911c:	dec    esi
  40911d:	jg     0x409181
  40911f:	(bad)  
  409120:	jb     0x409107
  409122:	mov    ah,0x9a
  409124:	pop    ebx
  409125:	ret    
  409126:	fadd   DWORD PTR [edi-0x1b70e481]
  40912c:	rcr    eax,1
  40912e:	imul   eax,DWORD PTR [edi-0xe],0x6f
  409132:	adc    DWORD PTR [edi],esp
  409134:	mov    ecx,0x83e344af
  409139:	cld    
  40913a:	(bad)  
  40913b:	pop    esi
  40913c:	aam    0x72
  40913e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40913f:	xchg   ecx,eax
  409140:	push   ds
  409141:	mov    edx,0x15606ac1
  409146:	in     al,0x48
  409148:	inc    ebp
  409149:	dec    eax
  40914a:	sub    ecx,0x5
  40914d:	cmp    eax,0x522416c
  409152:	push   ebp
  409153:	push   0x28334fb7
  409158:	push   edx
  409159:	(bad)  
  40915a:	xor    al,0x1
  40915c:	mov    edx,0x6d817e5a
  409161:	cdq    
  409162:	mov    edi,0x5265e1aa
  409167:	fs out 0xaf,al
  40916a:	pop    esp
  40916b:	and    BYTE PTR [esi-0x63],bh
  40916e:	data16 (bad) 
  409171:	pop    DWORD PTR [esi-0x18]
  409174:	scas   eax,DWORD PTR es:[edi]
  409175:	inc    edi
  409176:	sbb    DWORD PTR [ebx+0x421427f],ecx
  40917c:	push   DWORD PTR [ecx-0x395331d9]
  409182:	push   edx
  409183:	cmc    
  409184:	add    DWORD PTR [ebp+0x3],esp
  409187:	jnp    0x409154
  409189:	mov    bh,0xfe
  40918b:	into   
  40918c:	test   BYTE PTR [esi],dl
  40918e:	jge    0x40914a
  409190:	ror    bl,0x7a
  409193:	mov    al,0x4d
  409195:	mov    ch,0x18
  409197:	es mov bh,0x73
  40919a:	inc    ebx
  40919b:	mov    esp,0x835ba3c7
  4091a0:	and    dl,BYTE PTR [ebp+ecx*1+0xe]
  4091a4:	inc    eax
  4091a5:	rol    DWORD PTR [edi-0x1970e438],0xe6
  4091ac:	call   0xcd11:0xe710f584
  4091b3:	pop    ds
  4091b4:	retf   0xa779
  4091b7:	(bad)  
  4091b8:	lds    ecx,FWORD PTR [ebx-0x1e]
  4091bb:	xor    al,0x2
  4091bd:	inc    ecx
  4091be:	lds    esi,FWORD PTR [esi-0x5ed625e5]
  4091c4:	mov    ebp,0xe0a1b7a2
  4091c9:	add    BYTE PTR [edx],0xab
  4091cc:	outs   dx,BYTE PTR ds:[esi]
  4091cd:	in     eax,0xb1
  4091cf:	cmp    al,0x75
  4091d1:	push   ebx
  4091d2:	out    0xea,al
  4091d4:	stos   BYTE PTR es:[edi],al
  4091d5:	icebp  
  4091d6:	retf   0x6a34
  4091d9:	or     DWORD PTR [ecx-0x325e36b7],ebx
  4091df:	scas   eax,DWORD PTR es:[edi]
  4091e0:	ror    BYTE PTR [edi+ebx*1],1
  4091e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e4:	push   es
  4091e5:	adc    dl,dh
  4091e7:	add    eax,0xf9b2149f
  4091ec:	push   ebp
  4091ed:	jbe    0x409253
  4091ef:	(bad)  
  4091f0:	arpl   WORD PTR ds:0xbd76956e,ax
  4091f6:	aaa    
  4091f7:	add    esi,DWORD PTR [ecx]
  4091f9:	ficomp DWORD PTR [ecx+0x54]
  4091fc:	idiv   BYTE PTR [eax]
  4091fe:	pusha  
  4091ff:	push   ss
  409200:	and    dh,BYTE PTR [ecx]
  409202:	(bad)  
  409203:	jl     0x40919d
  409205:	sbb    DWORD PTR [edi-0x42],esi
  409208:	popa   
  409209:	inc    edi
  40920a:	add    WORD PTR ss:[eax-0x476570e0],ax
  409212:	inc    ebp
  409213:	gs pushf 
  409215:	ss loopne 0x4091a7
  409218:	sbb    al,0xfe
  40921a:	mov    ecx,0xfbeb7506
  40921f:	and    al,0xe7
  409221:	adc    esp,ecx
  409223:	fs ds imul esi,edx,0x4e28c9d2
  40922b:	sub    BYTE PTR [ebx+0x6b7f1177],ah
  409231:	or     BYTE PTR [ecx+ecx*8+0x39ba11ea],dl
  409238:	sar    BYTE PTR [esi],1
  40923a:	inc    ebp
  40923b:	icebp  
  40923c:	add    DWORD PTR [edx],edi
  40923e:	pop    eax
  40923f:	jnp    0x4092bd
  409241:	lods   al,BYTE PTR ds:[esi]
  409242:	jmp    0x409201
  409244:	xchg   ecx,eax
  409245:	adc    DWORD PTR [ebx-0x790f995b],eax
  40924b:	rcr    BYTE PTR [edi+0x2a8f2ad1],cl
  409251:	adc    al,0x9
  409253:	jge    0x4092b7
  409255:	sbb    BYTE PTR [edx+edx*2-0x37],dl
  409259:	jns    0x4092b3
  40925b:	mov    ds:0x60da5c0c,al
  409260:	push   cs
  409261:	cdq    
  409262:	imul   DWORD PTR [ebp+0x5b]
  409265:	pop    edx
  409266:	mov    al,0xb8
  409268:	mov    WORD PTR [ecx+0x67],gs
  40926b:	imul   ecx,DWORD PTR [di-0x57a6],0xffffff99
  409271:	ja     0x4092ba
  409273:	nop
  409274:	pop    ss
  409275:	scas   eax,DWORD PTR es:[edi]
  409276:	inc    ecx
  409277:	test   eax,0x3c531297
  40927c:	and    bh,dl
  40927e:	xchg   esi,eax
  40927f:	add    bh,cl
  409281:	push   ds
  409282:	retf   0xb91e
  409285:	and    cl,BYTE PTR [ecx+edx*8+0x42d3eab7]
  40928c:	in     eax,dx
  40928d:	scas   al,BYTE PTR es:[edi]
  40928e:	xchg   esp,eax
  40928f:	loope  0x4092dc
  409291:	sbb    eax,0x69f46751
  409296:	mov    ds:0x991b3403,al
  40929b:	dec    ebp
  40929c:	leave  
  40929d:	popa   
  40929e:	xchg   al,al
  4092a0:	pusha  
  4092a1:	sub    al,0x93
  4092a3:	cmp    DWORD PTR [edx],edx
  4092a5:	add    DWORD PTR ds:0x75e75faa,esp
  4092ab:	cli    
  4092ac:	mov    ebx,0x4471c858
  4092b1:	xchg   esi,eax
  4092b2:	cmp    al,al
  4092b4:	je     0x409300
  4092b6:	fidiv  WORD PTR [esi-0x2c]
  4092b9:	and    ebx,edi
  4092bb:	mov    edi,0x8bb3ad54
  4092c0:	daa    
  4092c1:	sbb    bh,cl
  4092c3:	add    eax,0x8a1d3ed6
  4092c8:	ins    BYTE PTR es:[edi],dx
  4092c9:	adc    BYTE PTR [eax],cl
  4092cb:	popf   
  4092cc:	(bad)
  4092d0:	loope  0x409350
  4092d2:	mov    ebx,0xbe8d7c95
  4092d7:	in     al,dx
  4092d8:	aaa    
  4092d9:	pop    esp
  4092da:	adc    dh,dl
  4092dc:	mov    al,0x16
  4092de:	jo     0x4092b4
  4092e0:	mov    es,WORD PTR [ebp+0x75]
  4092e3:	rcr    BYTE PTR [edi+0x79],1
  4092e6:	test   BYTE PTR [ebp-0x7f],dh
  4092e9:	(bad)  
  4092ea:	shl    esp,1
  4092ec:	push   cs
  4092ed:	xor    eax,0xebb4ba35
  4092f2:	out    dx,eax
  4092f3:	mov    ah,0x3f
  4092f5:	int3   
  4092f6:	mov    bh,ah
  4092f8:	mov    ds:0x5141f261,eax
  4092fd:	nop
  4092fe:	ror    DWORD PTR [ebx-0x4b85b79e],cl
  409304:	int3   
  409305:	fdivr  QWORD PTR [edx-0x5bd12edd]
  40930b:	push   eax
  40930c:	fstp   QWORD PTR [esi-0x73]
  40930f:	cdq    
  409310:	cdq    
  409311:	out    dx,eax
  409312:	or     DWORD PTR [esi-0x54850a3e],0xe3fb66d8
  40931c:	pop    ebp
  40931d:	shr    BYTE PTR [ecx+esi*4+0x60],1
  409321:	lods   eax,DWORD PTR ds:[esi]
  409322:	pushf  
  409323:	leave  
  409324:	stos   DWORD PTR es:[edi],eax
  409325:	xor    dl,BYTE PTR [ecx]
  409327:	arpl   WORD PTR [ecx+0x33],bx
  40932a:	mov    DWORD PTR [ecx-0x1487126b],edi
  409330:	lahf   
  409331:	cmp    dl,BYTE PTR [edx-0x6ca413f5]
  409337:	sub    al,0x20
  409339:	(bad)  [ebp+ebx*1+0x1f]
  40933d:	or     bh,BYTE PTR [ebx-0x764d7e46]
  409343:	xchg   ebx,eax
  409344:	xor    eax,0x162df2c6
  409349:	pop    es
  40934a:	xor    bh,BYTE PTR [edi-0x32]
  40934d:	sbb    DWORD PTR [esi+0x7f160346],eax
  409353:	aam    0xfc
  409355:	xchg   edx,eax
  409356:	ret    0x60e9
  409359:	cdq    
  40935a:	(bad)  
  40935b:	das    
  40935c:	mov    dh,0x2
  40935e:	scas   eax,DWORD PTR es:[edi]
  40935f:	pop    edx
  409360:	sbb    eax,0xd13b3230
  409365:	stc    
  409366:	pop    ss
  409367:	push   esp
  409368:	(bad)  
  409369:	mov    edx,0x1071730
  40936e:	inc    ebp
  40936f:	jo     0x409352
  409371:	sar    eax,cl
  409373:	jnp    0x4093de
  409375:	mov    edi,0x23713be6
  40937a:	pop    ds
  40937b:	mov    esi,0x2f4ab698
  409380:	and    edi,DWORD PTR [edi+0x5337a0db]
  409386:	push   esi
  409387:	mov    dl,0xce
  409389:	retf   
  40938a:	cmp    dh,BYTE PTR [edx]
  40938c:	and    BYTE PTR [ebx-0x4f],ah
  40938f:	xchg   edx,eax
  409390:	(bad)  
  409391:	pop    edi
  409392:	(bad)  
  409393:	dec    edi
  409394:	adc    BYTE PTR [ebp+0x49],al
  409397:	(bad)  
  409398:	xchg   esp,eax
  409399:	adc    ebp,DWORD PTR [esi]
  40939b:	lods   al,BYTE PTR ds:[esi]
  40939c:	xchg   edi,eax
  40939d:	add    eax,0xe81faf9a
  4093a2:	inc    eax
  4093a3:	pop    ecx
  4093a4:	mov    ds:0x4cf93fa8,eax
  4093a9:	out    0x5c,eax
  4093ab:	das    
  4093ac:	sub    eax,0x8be8f951
  4093b1:	dec    esi
  4093b2:	ja     0x409337
  4093b4:	lock mov ebx,0xfe7d7976
  4093ba:	out    dx,eax
  4093bb:	nop
  4093bc:	jg     0x40933e
  4093be:	loop   0x409438
  4093c0:	test   eax,0xa69aad1
  4093c5:	enter  0x7810,0xaf
  4093c9:	sbb    bl,BYTE PTR [ecx]
  4093cb:	mov    ecx,0xca257475
  4093d0:	cli    
  4093d1:	jg     0x40944a
  4093d3:	imul   eax,DWORD PTR [ebx],0x13
  4093d6:	cdq    
  4093d7:	add    dh,BYTE PTR [ecx-0x66]
  4093da:	int3   
  4093db:	in     eax,dx
  4093dc:	jmp    0x40936a
  4093de:	xchg   esp,eax
  4093df:	dec    ecx
  4093e0:	add    DWORD PTR [esi+0x12e751aa],ebx
  4093e6:	jge    0x40945a
  4093e8:	mov    WORD PTR [edi+0x1e],?
  4093eb:	cmp    al,0x61
  4093ed:	jle    0x40945d
  4093ef:	add    cl,BYTE PTR [esi]
  4093f1:	add    DWORD PTR [edx],esi
  4093f3:	rcr    BYTE PTR [ecx-0x9],0x92
  4093f7:	clc    
  4093f8:	popa   
  4093f9:	inc    edi
  4093fa:	dec    ebx
  4093fb:	(bad)  
  4093fc:	lods   al,BYTE PTR ds:[esi]
  4093fd:	lods   eax,DWORD PTR ds:[esi]
  4093fe:	mov    WORD PTR [eax],ss
  409400:	add    BYTE PTR [edi+0x7955100e],ah
  409406:	sub    edx,ebp
  409408:	shl    BYTE PTR [esi],0x78
  40940b:	scas   eax,DWORD PTR es:[edi]
  40940c:	mov    esi,0x3b76c55e
  409411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409412:	add    ecx,DWORD PTR [eax]
  409414:	leave  
  409415:	mov    cl,bl
  409417:	sar    DWORD PTR [edx+0x7431f910],0xcc
  40941e:	push   ebx
  40941f:	jne    0x40940a
  409421:	add    BYTE PTR [ebp+0x76],0x60
  409425:	pop    edx
  409426:	push   edi
  409427:	ss stos DWORD PTR es:[edi],eax
  409429:	sub    al,0x7d
  40942b:	(bad)  
  40942e:	pop    ebp
  40942f:	test   BYTE PTR [eax+0x22],bl
  409432:	xchg   DWORD PTR [eax],edx
  409434:	sub    eax,0x75d54880
  40943a:	jge    0x40948b
  40943c:	mov    eax,es
  40943e:	add    al,0x52
  409440:	mov    bl,0x8a
  409442:	mov    es,WORD PTR [esi+0x3acb4ce0]
  409448:	loop   0x409468
  40944a:	inc    esp
  40944b:	das    
  40944c:	sbb    eax,esp
  40944e:	shl    BYTE PTR [ecx-0x3397c577],0xb7
  409455:	jge    0x4094ca
  409457:	xor    al,0x22
  409459:	cmp    eax,0xdfe045ae
  40945e:	jp     0x409493
  409460:	cmp    esi,DWORD PTR [edi+0x371f9b6a]
  409466:	out    0xf4,eax
  409468:	sub    DWORD PTR [ebx],esp
  40946a:	push   edx
  40946b:	es jns 0x4094d2
  40946e:	arpl   WORD PTR [esi-0x73],di
  409471:	leave  
  409472:	mov    dh,0x21
  409474:	test   cl,al
  409476:	xchg   esi,eax
  409477:	add    dl,0x12
  40947a:	call   0xe74970cb
  40947f:	mov    ebx,0x6d28f380
  409484:	cs mov eax,0x1346d7ba
  40948a:	das    
  40948b:	lods   al,BYTE PTR ds:[esi]
  40948c:	repz push cs
  40948e:	(bad)  
  40948f:	lea    edx,[edx+eiz*1+0x76]
  409493:	push   ss
  409494:	mov    al,0xdc
  409496:	add    eax,0xf4f89383
  40949b:	inc    edi
  40949c:	shl    DWORD PTR [ebp-0x6d83f3f3],1
  4094a2:	sbb    bl,BYTE PTR [ebp+0x4a]
  4094a5:	cmp    cl,BYTE PTR [edi-0x60320e0e]
  4094ab:	jns    0x409466
  4094ad:	arpl   bx,bx
  4094af:	sub    BYTE PTR [eax],0xce
  4094b2:	stc    
  4094b3:	and    dh,BYTE PTR [edi+0x26]
  4094b6:	lods   al,BYTE PTR ds:[esi]
  4094b7:	mov    eax,0xa4ed234d
  4094bc:	aas    
  4094bd:	inc    esp
  4094be:	or     al,0xa2
  4094c0:	inc    edi
  4094c1:	xor    bl,ah
  4094c3:	std    
  4094c4:	mov    BYTE PTR [ebx-0x63],bl
  4094c7:	pop    eax
  4094c8:	cs out 0x75,al
  4094cb:	js     0x40947c
  4094cd:	inc    esi
  4094ce:	rol    BYTE PTR [ecx+0x4e0e04ec],1
  4094d4:	pop    ss
  4094d5:	les    ebx,FWORD PTR [esi+0x69]
  4094d8:	pop    eax
  4094d9:	pop    esi
  4094da:	dec    ebp
  4094db:	xor    esp,0xe38d8fcb
  4094e1:	fsubr  QWORD PTR [esi]
  4094e3:	add    al,0xd9
  4094e5:	scas   al,BYTE PTR es:[edi]
  4094e6:	int3   
  4094e7:	jns    0x40949d
  4094e9:	jo     0x409515
  4094eb:	xor    BYTE PTR [eax+0x3384bdce],ch
  4094f1:	xchg   BYTE PTR [ecx+ebp*8],bh
  4094f4:	push   eax
  4094f5:	xlat   BYTE PTR ds:[ebx]
  4094f6:	cdq    
  4094f7:	sbb    BYTE PTR [edi+0x74],dl
  4094fa:	ds fcom st(3)
  4094fd:	inc    esp
  4094fe:	or     DWORD PTR [eax],esi
  409500:	xor    eax,0x8b83fe3f
  409505:	loope  0x409527
  409507:	jae    0x40954c
  409509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40950a:	cmp    esp,0x35
  40950d:	inc    ecx
  40950e:	cld    
  40950f:	pop    es
  409510:	and    al,0x63
  409512:	cmp    DWORD PTR [esi+eax*2-0x495d7e2a],esi
  409519:	push   edi
  40951a:	mov    ds:0xa5d5b8d3,eax
  40951f:	xchg   DWORD PTR [edx-0x2],ebp
  409522:	push   cs
  409523:	outs   dx,DWORD PTR ds:[esi]
  409524:	add    ah,BYTE PTR [esi]
  409526:	or     ecx,DWORD PTR [eax-0x35]
  409529:	(bad)  
  40952b:	loope  0x4094ad
  40952d:	loope  0x4094dd
  40952f:	jmp    0xaf303509
  409534:	xchg   esp,eax
  409535:	test   BYTE PTR [ebp-0x7dcc64cb],bh
  40953b:	jb     0x409574
  40953d:	dec    edi
  40953e:	and    DWORD PTR [esi],ebx
  409540:	pop    eax
  409541:	push   cs
  409542:	cmp    BYTE PTR [esp+0x2c896e81],ch
  409549:	gs popf 
  40954b:	in     al,dx
  40954c:	jmp    0xe86da9ba
  409551:	or     al,0x7b
  409553:	retf   
  409554:	push   ecx
  409555:	arpl   WORD PTR [esi+0x3e],bp
  409558:	and    eax,0x356fc87b
  40955d:	inc    esp
  40955e:	adc    DWORD PTR [edx+0x69f34468],esp
  409564:	enter  0x28ce,0xdc
  409568:	sti    
  409569:	ja     0x4095d5
  40956b:	scas   eax,DWORD PTR es:[edi]
  40956c:	daa    
  40956d:	call   0xf00739c5
  409572:	or     BYTE PTR [eax+0x1824f8a1],ah
  409578:	fldcw  WORD PTR [ebp+0x36e6ed33]
  40957e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40957f:	hlt    
  409580:	imul   edx,DWORD PTR [ecx+0x6477b60],0x41
  409587:	or     DWORD PTR [edi-0x29],ebp
  40958a:	addr16 call 0x7314e1fe
  409590:	sub    edx,edx
  409592:	fisttp QWORD PTR [edi-0x13908da3]
  409598:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40959a:	stos   DWORD PTR es:[edi],eax
  40959b:	pushf  
  40959c:	xchg   esi,eax
  40959d:	or     eax,0x877e2d9b
  4095a2:	pop    ds
  4095a3:	adc    BYTE PTR [edx],ch
  4095a5:	and    DWORD PTR [edx+0x7f],edx
  4095a8:	cmp    al,0xa7
  4095aa:	aas    
  4095ab:	bound  ecx,QWORD PTR [edx+0x60]
  4095ae:	mov    edi,0xef64f69d
  4095b3:	mov    ds:0xb21ebed2,eax
  4095b8:	stc    
  4095b9:	call   0xd4543cb8
  4095be:	call   0xfb87:0x35976ec6
  4095c5:	bnd jns 0x409602
  4095c8:	sbb    ebp,esp
  4095ca:	add    eax,0xb087a1b0
  4095cf:	inc    eax
  4095d0:	loop   0x4095f3
  4095d2:	xchg   ecx,eax
  4095d3:	and    ebp,DWORD PTR [eax+0x63]
  4095d6:	scas   eax,DWORD PTR es:[edi]
  4095d7:	dec    esi
  4095d8:	jge    0x4095b7
  4095da:	(bad)  
  4095db:	fidivr WORD PTR [esi+0x6a0a5059]
  4095e1:	sub    al,0x5f
  4095e3:	in     eax,dx
  4095e4:	mov    esp,0xcee3802e
  4095e9:	aas    
  4095ea:	mov    bl,0x1a
  4095ec:	dec    eax
  4095ed:	xchg   esi,eax
  4095ee:	push   esi
  4095ef:	cmp    BYTE PTR [esi+eax*2],bh
  4095f2:	cs pop ecx
  4095f4:	fadd   QWORD PTR [edi+0x2363afd9]
  4095fa:	pop    ss
  4095fb:	inc    ebp
  4095fc:	fs retf 0x7c7f
  409600:	adc    eax,DWORD PTR [edx+0x7c]
  409603:	sub    al,0xbf
  409605:	stos   DWORD PTR es:[edi],eax
  409606:	mov    dl,0x30
  409608:	mov    ds:0x21c36157,eax
  40960d:	xlat   BYTE PTR ds:[ebx]
  40960e:	adc    DWORD PTR [edx],ebp
  409610:	adc    al,0x5a
  409612:	pop    esi
  409613:	hlt    
  409614:	inc    ebx
  409615:	cmc    
  409616:	in     eax,dx
  409617:	add    BYTE PTR [ecx+ebx*2+0x7acd326e],dh
  40961e:	mov    ecx,0x6af4898e
  409623:	lds    ebp,FWORD PTR [edx+edx*2-0x4f]
  409627:	fst    st(0)
  409629:	xor    esp,ecx
  40962b:	sub    ah,ch
  40962d:	test   al,0x9b
  40962f:	call   esp
  409631:	icebp  
  409632:	test   DWORD PTR [ebx-0x6a4dad92],edi
  409638:	dec    eax
  409639:	and    eax,0xde9b2124
  40963e:	mov    edi,0xdca30e23
  409643:	ss ins DWORD PTR es:[edi],dx
  409645:	pop    edi
  409646:	out    dx,eax
  409647:	cmp    ebx,edi
  409649:	cwde   
  40964a:	push   edi
  40964b:	ja     0x4095f8
  40964d:	push   ebx
  40964e:	das    
  40964f:	retf   0x5047
  409652:	addr16 inc ebx
  409654:	cmp    ch,BYTE PTR [edi+0x6a6a8ec1]
  40965a:	jge    0x409605
  40965c:	mov    ah,0xf7
  40965e:	in     eax,0x96
  409660:	sbb    ah,BYTE PTR [ecx]
  409662:	and    ecx,DWORD PTR [ecx-0x13249799]
  409668:	push   eax
  409669:	shl    esi,cl
  40966b:	ja     0x4096b1
  40966d:	ins    BYTE PTR es:[edi],dx
  40966e:	sbb    al,0x8d
  409670:	cmp    bh,dl
  409672:	div    BYTE PTR [ebp-0x2c]
  409675:	jge    0x40963c
  409677:	cmp    eax,0x5e8c241
  40967c:	ins    BYTE PTR es:[edi],dx
  40967d:	add    eax,0xaf4af3bd
  409682:	adc    dh,BYTE PTR [esi-0x393eed19]
  409688:	mov    cl,0x16
  40968a:	iret   
  40968b:	push   esp
  40968c:	add    DWORD PTR [edx-0x60d55aa1],edi
  409692:	mov    cl,0x13
  409694:	mul    DWORD PTR [ecx]
  409696:	loop   0x40969b
  409698:	sbb    BYTE PTR [esp+ebp*2-0x6d0c1416],cl
  40969f:	stos   BYTE PTR es:[edi],al
  4096a0:	sub    dl,al
  4096a2:	fdivr  DWORD PTR ds:0x1cdba29a
  4096a8:	sar    ah,0x85
  4096ab:	or     al,0x50
  4096ad:	fdiv   DWORD PTR [esi+eiz*4+0x13]
  4096b1:	imul   BYTE PTR [esi]
  4096b3:	loopne 0x4096f9
  4096b5:	mov    esi,0x99f798c3
  4096ba:	enter  0x8347,0x2f
  4096be:	out    0x8d,al
  4096c0:	mov    al,0xe8
  4096c2:	adc    eax,0x8a639f88
  4096c7:	fdivrp st(3),st
  4096c9:	(bad)  
  4096cb:	push   edi
  4096cc:	nop
  4096cd:	cmp    al,0xf8
  4096cf:	jae    0x4096e6
  4096d1:	jne    0x40974b
  4096d3:	or     al,0x11
  4096d5:	inc    edi
  4096d6:	(bad)  [ebx]
  4096d8:	ja     0x409753
  4096da:	inc    ecx
  4096db:	fwait
  4096dc:	mov    cl,dl
  4096de:	mov    esp,0xb36033cc
  4096e3:	fld    QWORD PTR [edi-0x556d58a2]
  4096e9:	call   0x17b7c3b5
  4096ee:	in     al,dx
  4096ef:	jo     0x4096ca
  4096f1:	int    0x95
  4096f3:	sbb    al,0x19
  4096f5:	iret   
  4096f6:	pop    ds
  4096f7:	push   ecx
  4096f8:	adc    al,0x5
  4096fa:	in     al,dx
  4096fb:	inc    eax
  4096fc:	in     eax,dx
  4096fd:	jmp    0x7d84fdc7
  409702:	repz sub BYTE PTR [ebx+0x6],cl
  409706:	xchg   ecx,esi
  409708:	mov    edi,0x7c44919c
  40970d:	leave  
  40970e:	or     al,0x84
  409710:	push   0x5facfbcb
  409715:	add    BYTE PTR [esi],0xf8
  409718:	pushf  
  409719:	(bad)  
  40971a:	mov    edi,DWORD PTR [esi]
  40971c:	ins    BYTE PTR es:[edi],dx
  40971d:	jae    0x409796
  40971f:	sub    al,0x53
  409721:	ror    DWORD PTR [ebx+ebx*1-0x7a02b19f],1
  409728:	clc    
  409729:	dec    ebp
  40972a:	jp     0x4096b8
  40972c:	sub    al,0xfd
  40972e:	dec    edx
  40972f:	dec    DWORD PTR [esi-0x23eeb4a]
  409735:	push   es
  409736:	adc    eax,DWORD PTR [ecx]
  409738:	mov    al,ds:0xc9479e9b
  40973d:	mov    WORD PTR [esi-0x5e],?
  409740:	adc    BYTE PTR [esi*2+0x62579d4a],ah
  409747:	test   al,0xa8
  409749:	cmp    dh,BYTE PTR [ebx+0x67]
  40974c:	(bad)  
  40974d:	arpl   WORD PTR [eax+0x5f],dx
  409750:	xor    bh,BYTE PTR [ebp+0x62]
  409753:	mov    esp,0xfdc7d534
  409758:	in     al,0x4d
  40975a:	fld    QWORD PTR [esi-0x4b]
  40975d:	push   esp
  40975e:	das    
  40975f:	and    BYTE PTR [ecx-0x465cebf],0x92
  409766:	jb     0x40975c
  409768:	adc    ah,dh
  40976a:	xchg   edi,eax
  40976b:	mov    ah,0x35
  40976d:	push   esp
  40976e:	dec    esp
  40976f:	or     ebx,DWORD PTR [ebx+0x58a02cab]
  409775:	out    0x61,al
  409777:	and    ebp,DWORD PTR [edx+0x192e94fc]
  40977d:	mov    es,esi
  40977f:	dec    ecx
  409780:	push   ebx
  409781:	sti    
  409782:	dec    esi
  409783:	add    edi,DWORD PTR [edi+0x7d8958cf]
  409789:	loop   0x409794
  40978b:	(bad)  
  40978c:	xor    DWORD PTR [eax-0x17c3978d],esi
  409792:	jnp    0x409749
  409794:	adc    DWORD PTR [esi-0x1991ecf5],0x74
  40979b:	sbb    esp,DWORD PTR [ecx+0x38]
  40979e:	cs stos DWORD PTR es:[edi],eax
  4097a0:	stos   DWORD PTR es:[edi],eax
  4097a1:	sbb    DWORD PTR [edx-0x45354acc],ebp
  4097a7:	and    ch,cl
  4097a9:	pop    ebx
  4097aa:	lahf   
  4097ab:	mov    esi,0x635bf665
  4097b0:	add    eax,0x64293ed3
  4097b5:	adc    dh,ch
  4097b7:	push   edi
  4097b8:	cmp    eax,DWORD PTR [ebx-0x12]
  4097bb:	cs (bad) 
  4097be:	pushf  
  4097bf:	test   eax,0xb7992a59
  4097c4:	in     eax,dx
  4097c5:	cmp    al,0xdc
  4097c7:	xor    al,0xa8
  4097c9:	push   cs
  4097ca:	in     eax,dx
  4097cb:	sbb    dl,0x5d
  4097ce:	push   edi
  4097cf:	test   BYTE PTR [ebx+eax*2-0x7f53e3f3],cl
  4097d6:	cdq    
  4097d7:	inc    eax
  4097d8:	xor    BYTE PTR [ecx],0x11
  4097db:	inc    ecx
  4097dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097dd:	cld    
  4097de:	jbe    0x4097f0
  4097e0:	adc    BYTE PTR [edx],0x49
  4097e3:	or     DWORD PTR [ebx],edi
  4097e5:	in     eax,0x7c
  4097e7:	lds    esi,FWORD PTR [edi+0x41]
  4097ea:	test   al,0xa6
  4097ec:	mov    eax,ds:0xbb475920
  4097f1:	mov    cs,WORD PTR [ebx+0x31462f2a]
  4097f7:	xor    al,0xf
  4097f9:	mov    cl,0x1c
  4097fb:	bound  esi,QWORD PTR [ecx-0x45]
  4097fe:	pop    esi
  4097ff:	fucomi st,st(6)
  409801:	mov    bh,0x9f
  409803:	dec    edi
  409804:	shr    BYTE PTR [ebp-0x15],0x47
  409808:	and    dl,BYTE PTR ds:0xa68771d5
  40980e:	pushf  
  40980f:	mov    dl,bl
  409811:	rcl    ch,1
  409813:	(bad)  
  409815:	pop    ebx
  409816:	call   0xfda6bcec
  40981b:	rol    BYTE PTR [esi-0xb],1
  40981e:	jno    0x4097f7
  409820:	jp     0x4097de
  409822:	xchg   DWORD PTR [edx],ebp
  409824:	mov    ds:0x67cc7231,eax
  409829:	(bad)  
  40982b:	adc    edi,DWORD PTR [edi-0x7a]
  40982e:	mov    al,0xc2
  409830:	mov    DWORD PTR [ebp-0x486b3ffb],ebp
  409836:	std    
  409837:	outs   dx,BYTE PTR ds:[esi]
  409838:	stos   DWORD PTR es:[edi],eax
  409839:	or     eax,0xffffff9b
  40983c:	sub    ah,BYTE PTR [ecx]
  40983e:	dec    ebp
  40983f:	inc    esi
  409840:	inc    ebp
  409841:	jnp    0x4097fe
  409843:	xchg   DWORD PTR [esi],edi
  409845:	adc    cl,dl
  409847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409848:	outs   dx,DWORD PTR ds:[esi]
  409849:	jns    0x409836
  40984b:	mov    ds:0xe35a6b80,eax
  409850:	out    dx,eax
  409851:	mov    bl,0xb6
  409853:	sbb    al,0x4
  409855:	fmul   st(0),st
  409857:	loope  0x4097da
  409859:	xchg   edi,eax
  40985a:	or     al,0xa5
  40985c:	dec    esi
  40985d:	je     0x409826
  40985f:	stos   BYTE PTR es:[edi],al
  409860:	shl    DWORD PTR [esi+0x6c],0x5c
  409864:	out    dx,al
  409865:	fimul  WORD PTR [ebx]
  409867:	push   ds
  409868:	and    DWORD PTR [esi],esi
  40986a:	push   edx
  40986b:	(bad)  
  40986c:	and    ch,BYTE PTR [edx]
  40986e:	shr    DWORD PTR [esi-0x54883992],1
  409874:	pop    ecx
  409875:	stos   BYTE PTR es:[edi],al
  409876:	loope  0x4098e2
  409878:	sub    cl,bl
  40987a:	and    eax,0x2701d0b1
  40987f:	push   esp
  409880:	xchg   ecx,eax
  409881:	mov    ds:0x5f4fff75,al
  409886:	add    BYTE PTR [ebx],ah
  409888:	cld    
  409889:	rol    BYTE PTR [ecx+0x724367ab],0x3e
  409890:	and    BYTE PTR [ecx],0xe4
  409893:	ret    0xe73c
  409896:	gs mov ecx,esi
  409899:	jnp    0x409903
  40989b:	je     0x409876
  40989d:	imul   esi,DWORD PTR ds:[esi+0x58],0x19e03c37
  4098a5:	and    al,BYTE PTR [ecx]
  4098a7:	mov    ebx,0xe22291e6
  4098ac:	dec    esp
  4098ad:	ins    DWORD PTR es:[edi],dx
  4098ae:	mov    edx,0x451347cf
  4098b3:	(bad)  
  4098b4:	cmp    BYTE PTR [edi+0x1c091706],ch
  4098ba:	cdq    
  4098bb:	adc    al,0xff
  4098bd:	fidiv  WORD PTR [ebp-0x3c38e05e]
  4098c3:	sub    dl,bh
  4098c5:	xchg   edx,eax
  4098c6:	sbb    bl,cl
  4098c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098c9:	pop    eax
  4098ca:	mov    edx,0x2b0b377e
  4098cf:	cmp    ebp,esi
  4098d1:	push   es
  4098d2:	ret    
  4098d3:	ret    
  4098d4:	loopne 0x409933
  4098d6:	sbb    BYTE PTR [ebp-0x21],bl
  4098d9:	inc    edi
  4098da:	enter  0xb7c8,0xaa
  4098de:	div    BYTE PTR [ebp+0x55343f63]
  4098e4:	ins    DWORD PTR es:[edi],dx
  4098e5:	sar    BYTE PTR [eax-0x24e2b2ea],1
  4098eb:	fld    st(7)
  4098ed:	adc    ch,BYTE PTR [ebx]
  4098ef:	pushf  
  4098f0:	sbb    ah,BYTE PTR [ebx-0x547e6696]
  4098f6:	xor    BYTE PTR [eax],ah
  4098f8:	xchg   BYTE PTR [edi-0x2b99c31],dh
  4098fe:	icebp  
  4098ff:	jbe    0x409968
  409901:	xchg   ebp,eax
  409902:	dec    esp
  409903:	in     eax,0x6f
  409905:	mov    ds:0xddbc72ae,eax
  40990a:	mov    ebx,0x95a514fd
  40990f:	mov    edi,0x92e472c1
  409914:	int    0xe0
  409916:	cli    
  409917:	push   cs
  409918:	inc    edx
  409919:	in     eax,dx
  40991a:	push   esi
  40991b:	or     edx,esi
  40991d:	std    
  40991e:	pop    es
  40991f:	das    
  409920:	fimul  WORD PTR [ebx+0x5]
  409923:	push   eax
  409924:	fs inc ecx
  409926:	push   ebx
  409927:	fcomi  st,st(1)
  409929:	rol    ch,1
  40992b:	jne    0x409933
  40992d:	arpl   WORD PTR [edi],bp
  40992f:	les    ecx,FWORD PTR [ecx+edi*8-0x2ea5f63a]
  409936:	ror    DWORD PTR [edi-0x3c6646d0],cl
  40993c:	daa    
  40993d:	add    BYTE PTR [ebx-0x1de2f300],al
  409943:	xchg   ebx,eax
  409944:	mov    edi,ebp
  409946:	xchg   BYTE PTR [edi-0x21c89ec5],ah
  40994c:	idiv   DWORD PTR [ebx]
  40994e:	xor    ebx,ebp
  409950:	cmp    eax,0x9b16bc37
  409955:	xchg   edx,eax
  409956:	inc    ebx
  409957:	mov    esp,?
  409959:	arpl   si,si
  40995b:	loope  0x4098fe
  40995d:	mov    eax,cs:0xc0daa424
  409963:	or     DWORD PTR [edi+0x10],ebx
  409966:	inc    eax
  409967:	jb     0x40998a
  409969:	aas    
  40996a:	lds    esi,FWORD PTR [edi*1+0x197ada43]
  409971:	fist   DWORD PTR [esi-0x301262a6]
  409977:	add    BYTE PTR [esi+0x5706b313],al
  40997d:	pushf  
  40997e:	inc    ebx
  40997f:	mov    ds:0x8353aade,al
  409984:	jne    0x4099cd
  409986:	xchg   BYTE PTR [edx+0x3b6de677],ch
  40998c:	(bad)  
  40998d:	lock and DWORD PTR [edx+esi*4],0x342cd55c
  409995:	adc    al,0x8b
  409997:	mov    cl,0xb1
  409999:	xchg   DWORD PTR [ebx-0x1f],eax
  40999c:	ss push edx
  40999e:	imul   ebx,ebx,0xe
  4099a1:	fsubp  st(3),st
  4099a3:	inc    eax
  4099a4:	jmp    0xd8c362df
  4099a9:	div    edi
  4099ab:	loop   0x409993
  4099ad:	mov    ch,0x14
  4099af:	jl     0x4099bf
  4099b1:	daa    
  4099b2:	pop    ebp
  4099b3:	fbld   TBYTE PTR [esi+0x62]
  4099b6:	mov    ebp,DWORD PTR [ebx]
  4099b8:	lock jge 0x409a2d
  4099bb:	popf   
  4099bc:	pop    ss
  4099bd:	rcr    bl,cl
  4099bf:	ins    DWORD PTR es:[edi],dx
  4099c0:	test   BYTE PTR [eax-0x41c51454],bl
  4099c6:	ins    DWORD PTR es:[edi],dx
  4099c7:	push   ss
  4099c8:	mov    eax,0xb67ae2e1
  4099cd:	test   BYTE PTR [ecx-0x5a],0xf6
  4099d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099d2:	add    DWORD PTR [ebp-0x7bccc935],ecx
  4099d8:	mov    gs,WORD PTR [esi]
  4099da:	mov    al,0xa6
  4099dc:	hlt    
  4099dd:	inc    esp
  4099de:	sbb    al,0x39
  4099e0:	dec    ecx
  4099e1:	bound  esp,QWORD PTR [edi]
  4099e3:	jo     0x4099de
  4099e5:	sub    DWORD PTR [esi+0x14],eax
  4099e8:	rcr    DWORD PTR [ebx-0x7ee112b],cl
  4099ee:	in     al,0x5b
  4099f0:	sbb    dh,BYTE PTR [ecx+0x485104e3]
  4099f6:	push   ebx
  4099f7:	sub    al,0x3e
  4099f9:	test   BYTE PTR [eax+0x1d],bh
  4099fc:	inc    ecx
  4099fd:	ins    DWORD PTR es:[edi],dx
  4099fe:	push   ebp
  4099ff:	sbb    ch,BYTE PTR [ebp-0x4f]
  409a02:	fld    st(0)
  409a04:	xchg   ecx,eax
  409a05:	(bad)  
  409a06:	mov    bl,0xe5
  409a08:	dec    edx
  409a09:	jg     0x409a1f
  409a0b:	mov    ah,0xc3
  409a0d:	push   edx
  409a0e:	pop    ebx
  409a0f:	and    eax,DWORD PTR [eax]
  409a11:	outs   dx,BYTE PTR ds:[esi]
  409a12:	out    0x77,eax
  409a14:	sub    eax,0x6943d84e
  409a19:	cs jne 0x4099d3
  409a1c:	jmp    0x7f0:0xea01e460
  409a23:	sbb    bl,BYTE PTR [edx-0x78e4a3f5]
  409a29:	stos   DWORD PTR es:[edi],eax
  409a2a:	mov    ebp,0x2d7e1c3a
  409a2f:	mov    ebp,0x40c49f8
  409a34:	inc    ebx
  409a35:	or     bh,BYTE PTR [ecx+0x6336735]
  409a3b:	icebp  
  409a3c:	xor    bh,dl
  409a3e:	jle    0x409a4e
  409a40:	add    DWORD PTR [eax-0x2d36e36b],eax
  409a46:	mov    ecx,0x9659a56a
  409a4b:	sub    DWORD PTR [esi+0x58260536],eax
  409a51:	pop    es
  409a52:	adc    dh,al
  409a54:	sub    DWORD PTR [esi+0x74],eax
  409a57:	jp     0x409a45
  409a59:	rol    BYTE PTR [edi],0xb9
  409a5c:	out    dx,eax
  409a5d:	les    esp,FWORD PTR [ecx-0x1c19f60e]
  409a63:	in     eax,0x8c
  409a65:	xchg   esp,eax
  409a66:	and    BYTE PTR [esi-0x3c],al
  409a69:	sub    ah,bh
  409a6b:	cmp    al,0x4d
  409a6d:	add    esp,DWORD PTR [eax+0x704f11ad]
  409a73:	cld    
  409a74:	and    ecx,ecx
  409a76:	jl     0x409a25
  409a78:	rcr    WORD PTR [eax-0x553099f6],1
  409a7f:	adc    al,0x1e
  409a81:	(bad)  
  409a82:	sbb    bl,ch
  409a84:	dec    esi
  409a85:	inc    ebx
  409a86:	in     al,dx
  409a87:	adc    eax,0x77a357b8
  409a8c:	xor    BYTE PTR [eax+0x3ab5d6de],bl
  409a92:	or     eax,0x671981f9
  409a97:	pusha  
  409a98:	sti    
  409a99:	sbb    eax,edi
  409a9b:	mov    WORD PTR [ebx+0x7d],?
  409a9e:	les    ecx,FWORD PTR [edx-0x19]
  409aa1:	(bad)  
  409aa2:	push   ebp
  409aa3:	xlat   BYTE PTR cs:[ebx]
  409aa5:	imul   ecx,DWORD PTR es:[ebx],0xd257f02a
  409aac:	push   eax
  409aad:	(bad)  
  409aae:	inc    eax
  409aaf:	mov    edx,DWORD PTR [esi+0x3e]
  409ab2:	aas    
  409ab3:	ret    0xe245
  409ab6:	mov    WORD PTR [edi],?
  409ab8:	mov    esp,0x647003c4
  409abd:	jns    0x409a45
  409abf:	xor    dl,BYTE PTR [ebx+esi*1+0x50]
  409ac3:	jb     0x409ac8
  409ac5:	xor    bl,BYTE PTR [edi+0x77]
  409ac8:	fcomip st,st(1)
  409aca:	and    DWORD PTR [ebx+0x2a04e71e],edx
  409ad0:	xchg   edx,eax
  409ad1:	repz sbb eax,0x24a992eb
  409ad7:	hlt    
  409ad8:	imul   eax,edx,0x8
  409adb:	push   ebx
  409adc:	dec    edx
  409add:	jnp    0x409b1b
  409adf:	pop    esp
  409ae0:	push   ss
  409ae1:	mov    dh,0xbc
  409ae3:	and    BYTE PTR [ebp+0x2f],bl
  409ae6:	test   BYTE PTR [edx],0xcd
  409ae9:	je     0x409a84
  409aeb:	cmc    
  409aec:	lahf   
  409aed:	sbb    eax,0xacfb27bb
  409af2:	push   esi
  409af3:	or     BYTE PTR [edi],ch
  409af5:	mov    eax,0x3a666195
  409afa:	(bad)  
  409afb:	iret   
  409afc:	loopne 0x409b4a
  409afe:	and    al,ah
  409b00:	addr16 sub edi,esp
  409b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b04:	lock jmp 0x5df9c0db
  409b0a:	cvtpi2ps xmm0,QWORD PTR [edx-0x1f6ae315]
  409b11:	cmp    ebp,DWORD PTR [eax]
  409b13:	jmp    0x8d4083e8
  409b18:	jns    0x409b02
  409b1a:	add    esp,DWORD PTR [esi]
  409b1c:	mov    edx,0xa506bfe1
  409b21:	mov    fs,WORD PTR ds:0xf49a29ac
  409b27:	daa    
  409b28:	xchg   ebp,eax
  409b29:	adc    BYTE PTR [eax],0xb
  409b2c:	call   0xd9d160e1
  409b31:	mov    es,WORD PTR ds:0xa8d194d4
  409b37:	inc    eax
  409b38:	jge    0x409b5b
  409b3a:	jno    0x409ba8
  409b3c:	les    esi,FWORD PTR es:[ecx]
  409b3f:	hlt    
  409b40:	dec    edx
  409b41:	ret    
  409b42:	les    edi,FWORD PTR [ebx-0x22]
  409b45:	out    dx,eax
  409b46:	mov    ds:0xe0b47443,eax
  409b4b:	cld    
  409b4c:	sub    eax,0xae54f7e2
  409b51:	xor    eax,0x9308c3a4
  409b56:	clc    
  409b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b58:	push   ds
  409b59:	xchg   ebx,eax
  409b5a:	sub    DWORD PTR [edi-0x6d],edi
  409b5d:	out    dx,eax
  409b5e:	pop    ebp
  409b5f:	add    BYTE PTR [edx+0x74d773ac],0x96
  409b66:	mov    BYTE PTR [edx],bh
  409b68:	push   ebp
  409b69:	mov    ebx,0x202e6a60
  409b6e:	int    0x3
  409b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b71:	lods   eax,DWORD PTR ds:[esi]
  409b72:	out    dx,al
  409b73:	call   DWORD PTR [eax+0x10]
  409b76:	cmp    al,0x72
  409b78:	inc    ebp
  409b79:	repnz mov bl,BYTE PTR [ebp-0x6c4e912d]
  409b80:	and    al,0xbe
  409b82:	je     0x409be4
  409b84:	lock aam 0x1d
  409b87:	mov    al,ds:0x3d3edec5
  409b8c:	pop    edi
  409b8d:	adc    BYTE PTR [eax-0x5ebd3fc3],dl
  409b93:	iret   
  409b94:	pop    DWORD PTR [edi-0x4f]
  409b97:	push   edx
  409b98:	lods   eax,DWORD PTR ds:[esi]
  409b99:	push   0x1f
  409b9b:	xor    DWORD PTR [ebx],ebx
  409b9d:	das    
  409b9e:	(bad)  
  409b9f:	stc    
  409ba0:	in     eax,dx
  409ba1:	popf   
  409ba2:	dec    edx
  409ba3:	add    eax,0x6f0bd206
  409ba8:	cmp    al,0x27
  409baa:	push   0x89fd125
  409baf:	sub    dl,BYTE PTR fs:[ecx+0x7a9aa390]
  409bb6:	icebp  
  409bb7:	xor    al,0xde
  409bb9:	jb     0x409bb2
  409bbb:	mov    esp,0xda52244b
  409bc0:	xor    dl,al
  409bc2:	add    BYTE PTR [edx],bh
  409bc4:	push   ss
  409bc5:	rcr    bh,cl
  409bc7:	mov    WORD PTR [eax+0x44f3999d],ss
  409bcd:	dec    edx
  409bce:	sbb    ebp,DWORD PTR [edx]
  409bd0:	xchg   ebp,eax
  409bd1:	pop    edi
  409bd2:	test   eax,0xff1b3af2
  409bd7:	sbb    BYTE PTR [edi],cl
  409bd9:	leave  
  409bda:	(bad)
  409bdd:	pushf  
  409bde:	in     eax,0xe9
  409be0:	pop    esp
  409be1:	dec    edi
  409be2:	daa    
  409be3:	cmp    al,0xd3
  409be5:	mov    dl,0x1f
  409be7:	cmp    BYTE PTR [edi+0x59f42b60],al
  409bed:	add    al,0x9f
  409bef:	cmp    DWORD PTR [esi],edx
  409bf1:	lahf   
  409bf2:	std    
  409bf3:	cmc    
  409bf4:	or     DWORD PTR [ebx],esp
  409bf6:	push   cs
  409bf7:	lods   al,BYTE PTR ds:[esi]
  409bf8:	ins    DWORD PTR es:[edi],dx
  409bf9:	pop    esp
  409bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfb:	nop
  409bfc:	mov    ebp,0xfed3cb8e
  409c01:	mov    bh,0xb5
  409c03:	sub    eax,DWORD PTR [esi+0x5d]
  409c06:	scas   al,BYTE PTR es:[edi]
  409c07:	call   0xec9a0866
  409c0c:	push   0xfffffffb
  409c0e:	or     BYTE PTR [bp+si],al
  409c11:	jmp    0x409c48
  409c13:	icebp  
  409c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c15:	sub    DWORD PTR [esi],ebp
  409c17:	in     al,0x3b
  409c19:	retf   
  409c1a:	xchg   ecx,eax
  409c1b:	not    DWORD PTR [eax+0x63]
  409c1e:	or     bl,al
  409c20:	pop    es
  409c21:	enter  0x7d1f,0x5c
  409c25:	inc    eax
  409c26:	mov    edx,0xe01e3cf0
  409c2b:	leave  
  409c2c:	fsubrp st(0),st
  409c2e:	mov    esp,0xa144383a
  409c33:	mov    eax,ds:0x4fab113
  409c38:	or     ch,cl
  409c3a:	sub    dh,BYTE PTR [ebx]
  409c3c:	inc    ecx
  409c3d:	sbb    al,0x28
  409c3f:	dec    ebp
  409c40:	push   esp
  409c41:	dec    BYTE PTR [ecx+ecx*4-0x6de3fd53]
  409c48:	inc    esp
  409c49:	sub    eax,0x6ae8925d
  409c4e:	gs pop ecx
  409c50:	into   
  409c51:	(bad)  
  409c52:	pop    ss
  409c53:	jp     0x409bd9
  409c55:	cmp    BYTE PTR [ebx+0x44],bh
  409c58:	mov    bl,0xa5
  409c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c5b:	pushf  
  409c5c:	in     eax,0xa8
  409c5e:	enter  0xffce,0xc6
  409c62:	rcr    BYTE PTR [edx+0x4e2ec7b9],0x5b
  409c69:	in     eax,dx
  409c6a:	and    ah,BYTE PTR [edx+0x2bc592bf]
  409c70:	aaa    
  409c71:	push   ds
  409c72:	pop    ss
  409c73:	neg    DWORD PTR [eax+0x12]
  409c76:	xchg   esp,eax
  409c77:	jecxz  0x409c7d
  409c79:	iret   
  409c7a:	pop    esp
  409c7b:	xchg   ecx,eax
  409c7c:	fsqrt  
  409c7e:	fcom   DWORD PTR [ebx+esi*8]
  409c81:	xchg   esi,eax
  409c82:	sub    BYTE PTR [esi+eax*4],bl
  409c85:	outs   dx,DWORD PTR ds:[esi]
  409c86:	cmp    DWORD PTR [ebx+0x5a],esp
  409c89:	retf   0x1a6c
  409c8c:	cli    
  409c8d:	mov    edx,0x3a566edf
  409c92:	xchg   esp,eax
  409c93:	arpl   WORD PTR [ecx+esi*1-0x69],sp
  409c97:	pop    ss
  409c98:	shl    DWORD PTR [ecx],0xac
  409c9b:	mov    DWORD PTR [edx+0x56eec6f7],edx
  409ca1:	retf   
  409ca2:	cwde   
  409ca3:	mov    ds:0x801a6e82,eax
  409ca8:	das    
  409ca9:	sub    DWORD PTR [ebx+0x2a],ebp
  409cac:	xchg   edi,eax
  409cad:	push   0x1804371c
  409cb2:	xlat   BYTE PTR ds:[ebx]
  409cb3:	pop    ebx
  409cb4:	addr16 mov dh,0xda
  409cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb9:	mov    edx,0x3053cecc
  409cbe:	fiadd  DWORD PTR ds:0x1e69926b
  409cc4:	jnp    0x409d34
  409cc6:	rcr    DWORD PTR ds:0x89369550,cl
  409ccc:	test   ah,cl
  409cce:	push   edx
  409ccf:	lods   eax,DWORD PTR ds:[esi]
  409cd0:	or     dl,BYTE PTR [ecx+0x5f8f3aba]
  409cd6:	jmp    0xec70:0x5800b36
  409cdd:	imul   edx,edx,0x73
  409ce0:	or     ecx,DWORD PTR [ecx+0x67]
  409ce3:	jae    0x409c69
  409ce5:	cmc    
  409ce6:	ret    
  409ce7:	push   edi
  409ce8:	jle    0x409c6f
  409cea:	xchg   edx,eax
  409ceb:	arpl   WORD PTR [eax+0x7],bx
  409cee:	jo     0x409d0a
  409cf0:	and    bh,0x6f
  409cf3:	lahf   
  409cf4:	jo     0x409d55
  409cf6:	jle    0x409cc7
  409cf8:	dec    ecx
  409cf9:	loope  0x409cc9
  409cfb:	mov    ch,0xdf
  409cfd:	stos   DWORD PTR es:[edi],eax
  409cfe:	inc    esp
  409cff:	ror    DWORD PTR [ebp-0x229320ca],1
  409d05:	jmp    0x212cb95a
  409d0a:	cdq    
  409d0b:	add    ah,ch
  409d0d:	push   ebx
  409d0e:	sub    al,0x9a
  409d10:	sbb    al,0x1f
  409d12:	adc    ecx,DWORD PTR [ebp+eiz*8-0x55]
  409d16:	pop    ecx
  409d17:	ror    BYTE PTR [edi-0x28cb4fc6],1
  409d1d:	cmp    DWORD PTR [edx+0x61],ecx
  409d20:	jmp    0xb80c937d
  409d25:	lods   al,BYTE PTR ds:[esi]
  409d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d27:	inc    edi
  409d28:	(bad)  [ecx+0x41]
  409d2b:	fnsave [ebx*4+0x43727146]
  409d32:	inc    ebp
  409d33:	xor    eax,0xd3268f81
  409d38:	add    BYTE PTR [edi],al
  409d3a:	mov    ch,0x5a
  409d3c:	mov    esp,0x24f45dce
  409d41:	stc    
  409d42:	push   es
  409d43:	mov    ds:0x49f8cda7,eax
  409d48:	aam    0x83
  409d4a:	dec    ecx
  409d4b:	xlat   BYTE PTR ds:[ebx]
  409d4c:	in     eax,0x3c
  409d4e:	pop    es
  409d4f:	sahf   
  409d50:	mov    dh,0x95
  409d52:	pop    ebp
  409d53:	das    
  409d54:	xchg   ebx,eax
  409d55:	test   DWORD PTR [edi-0x28760064],ebx
  409d5b:	rol    BYTE PTR [edx*2-0x4a3e47f6],1
  409d62:	rol    ecx,cl
  409d64:	add    al,0x33
  409d66:	rol    esp,1
  409d68:	(bad)  
  409d6b:	pusha  
  409d6c:	std    
  409d6d:	push   esi
  409d6e:	push   esi
  409d6f:	cwde   
  409d70:	adc    al,0x4e
  409d72:	jge    0x409d92
  409d74:	stos   BYTE PTR es:[edi],al
  409d75:	mov    al,ds:0x5ad44c99
  409d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7b:	mov    dl,0x3b
  409d7d:	jmp    0x409d00
  409d7f:	imul   ebp,ecx,0x1e
  409d82:	xchg   esi,eax
  409d83:	add    eax,0x7249cc21
  409d88:	mov    ebp,DWORD PTR [esi-0x62]
  409d8b:	mov    al,0x2
  409d8d:	data16 js 0x409dd8
  409d90:	rcr    DWORD PTR [eax+0x14a945ec],0x27
  409d97:	(bad)  
  409d98:	push   ecx
  409d99:	out    0x8e,al
  409d9b:	or     al,0x94
  409d9d:	mov    ebx,0x5b9e2f81
  409da2:	clc    
  409da3:	lock inc ecx
  409da5:	icebp  
  409da6:	mov    edx,0xd9c4d53b
  409dab:	mov    DWORD PTR [ebp-0x289dbd81],edi
  409db1:	inc    edi
  409db2:	gs add edi,ebx
  409db5:	shr    DWORD PTR [edi+esi*1+0x6a],1
  409db9:	std    
  409dba:	push   0xffffffb1
  409dbc:	psubusb mm3,QWORD PTR [esi-0x2f]
  409dc0:	mov    esp,0x194b375
  409dc5:	add    cl,BYTE PTR [ebx]
  409dc7:	push   edx
  409dc8:	add    BYTE PTR [ebx-0x6edcccbf],dh
  409dce:	dec    edx
  409dcf:	adc    bh,bh
  409dd1:	push   ebp
  409dd2:	xor    DWORD PTR [eax+0x350463e2],ebp
  409dd8:	inc    esp
  409dd9:	and    al,0x9e
  409ddb:	fidiv  WORD PTR [ecx]
  409ddd:	push   0x584e2ee6
  409de2:	mov    dl,0x3
  409de4:	mov    edx,0xe267fd70
  409de9:	or     bl,dh
  409deb:	in     al,0xec
  409ded:	addr16 and al,0x56
  409df0:	cmp    eax,0xbfc87c92
  409df5:	sahf   
  409df6:	jbe    0x409e04
  409df8:	xchg   ecx,eax
  409df9:	daa    
  409dfa:	(bad)  
  409dfc:	scas   al,BYTE PTR es:[edi]
  409dfd:	xor    BYTE PTR [eax-0x20],ch
  409e00:	int    0x6e
  409e02:	sub    ecx,DWORD PTR [eax+0x24]
  409e05:	cmp    dh,BYTE PTR [ecx+0x5de295af]
  409e0b:	add    eax,0x74719436
  409e10:	mov    bh,0xd4
  409e12:	into   
  409e13:	or     al,0x49
  409e15:	cmp    al,0x61
  409e17:	leave  
  409e18:	and    BYTE PTR [esi+ecx*1+0x4c],dh
  409e1c:	jmp    0x409da0
  409e1e:	mov    ah,0xd1
  409e20:	test   al,0xbe
  409e22:	push   ebp
  409e23:	mov    bh,0x87
  409e25:	retf   
  409e26:	aam    0xde
  409e28:	imul   ebx,edx,0xffffffb9
  409e2b:	mov    edi,0x32159d4d
  409e30:	mov    ecx,0x89aef846
  409e35:	sbb    DWORD PTR [edx-0x7bf4cff9],eax
  409e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e3c:	jp     0x409e7e
  409e3e:	push   ebx
  409e3f:	add    BYTE PTR [edx-0x7b],cl
  409e42:	int3   
  409e43:	cwde   
  409e44:	xchg   esi,eax
  409e45:	mov    al,0x8c
  409e47:	xchg   esp,eax
  409e48:	push   cs
  409e49:	xchg   BYTE PTR [edx],bh
  409e4b:	sub    al,0xbd
  409e4d:	inc    ebx
  409e4e:	mov    eax,0x7b08b0bf
  409e53:	xchg   DWORD PTR [edx+edi*1-0x4e79d0ec],eax
  409e5a:	arpl   WORD PTR fs:[ebp-0x25160be0],sp
  409e61:	cmp    al,BYTE PTR [esi-0x5cc33934]
  409e67:	aad    0x67
  409e69:	imul   esi,esi,0x44c86a4b
  409e6f:	add    eax,0x74a8dde0
  409e74:	jmp    0x99da:0xede8a570
  409e7b:	sub    bl,BYTE PTR es:[edi-0x251a94ec]
  409e82:	or     ah,BYTE PTR [ebx+eax*4]
  409e85:	jns    0x409e50
  409e87:	jmp    0x9ee84400
  409e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e8d:	xchg   esp,eax
  409e8e:	inc    edi
  409e8f:	dec    ebx
  409e90:	pop    esi
  409e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e92:	mov    edx,0xd67f90dc
  409e97:	std    
  409e98:	shl    BYTE PTR [eax],0x96
  409e9b:	stc    
  409e9c:	loopne 0x409ec0
  409e9e:	popf   
  409e9f:	fldenv [ebp-0x4]
  409ea2:	int    0x71
  409ea4:	lock lods al,BYTE PTR ds:[esi]
  409ea6:	repnz repz popa 
  409ea9:	xchg   ecx,eax
  409eaa:	ja     0x409f19
  409eac:	push   es
  409ead:	push   ebp
  409eae:	(bad)  
  409eaf:	jmp    0x409e61
  409eb1:	mov    al,BYTE PTR [ebx+0x43]
  409eb4:	cmp    BYTE PTR [edx+0x5475ba30],bl
  409eba:	mov    ebx,0xc12a8066
  409ebf:	push   ecx
  409ec1:	inc    edx
  409ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ec3:	lock push cs
  409ec5:	mov    al,ds:0xd6c13523
  409eca:	shl    dh,0xa2
  409ecd:	jmp    0x61d6:0x7f15f47
  409ed4:	(bad)  [edi+0x57eb7436]
  409eda:	push   cs
  409edb:	jno    0x409ee4
  409edd:	pop    es
  409ede:	sahf   
  409edf:	enter  0xc11e,0x2d
  409ee3:	jecxz  0x409edc
  409ee5:	je     0x409ec1
  409ee7:	add    BYTE PTR [esi+eiz*1-0xb778843],cl
  409eee:	bound  edx,QWORD PTR [edx+0x4c]
  409ef1:	add    BYTE PTR [edi+edi*4-0x7bb1cca9],cl
  409ef8:	fs nop
  409efa:	out    0xc7,al
  409efc:	jbe    0x409f21
  409efe:	fadd   QWORD PTR [edi+esi*1+0x55]
  409f02:	cdq    
  409f03:	push   ds
  409f04:	adc    eax,0x6b30142d
  409f09:	es test eax,0x9604c239
  409f0f:	outs   dx,DWORD PTR ds:[esi]
  409f10:	add    dl,BYTE PTR [ebx-0x41]
  409f13:	mov    WORD PTR [eax+eax*8+0x326084bd],fs
  409f1a:	cmp    ah,bh
  409f1c:	fstp   TBYTE PTR [edx-0x23]
  409f1f:	jns    0x409ebd
  409f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f22:	aaa    
  409f23:	jo     0x409f78
  409f25:	pop    ecx
  409f26:	sbb    BYTE PTR [edx+ebp*4-0x8],dl
  409f2a:	outs   dx,BYTE PTR ds:[esi]
  409f2b:	(bad)  
  409f2c:	pop    ss
  409f2d:	mov    BYTE PTR [ecx+edi*2+0x7],bl
  409f31:	data16 das 
  409f33:	or     esi,DWORD PTR [ebx-0x32]
  409f36:	mov    al,BYTE PTR [ecx+0x2ee5f783]
  409f3c:	hlt    
  409f3d:	fwait
  409f3e:	sub    al,BYTE PTR [esi-0x18]
  409f41:	pop    ds
  409f42:	cdq    
  409f43:	add    cl,BYTE PTR [esi+0x18]
  409f46:	mov    ecx,0xe50cab5f
  409f4b:	mov    DWORD PTR [edi],ebp
  409f4d:	loop   0x409fc4
  409f4f:	sbb    esi,DWORD PTR [edx-0xa]
  409f52:	pop    ss
  409f53:	ds int3 
  409f55:	mov    WORD PTR [edi-0x27],ss
  409f58:	je     0x409eef
  409f5a:	cmp    eax,0xcb54352a
  409f5f:	sbb    eax,0xc08f02c6
  409f64:	daa    
  409f65:	mov    BYTE PTR [edx],cl
  409f67:	push   eax
  409f68:	shl    DWORD PTR fs:[ecx],cl
  409f6b:	ins    DWORD PTR es:[edi],dx
  409f6c:	xchg   DWORD PTR [edi+0x444ff6df],esi
  409f72:	xor    bh,BYTE PTR [esi-0x45]
  409f75:	out    0x23,eax
  409f77:	sahf   
  409f78:	inc    esp
  409f79:	call   FWORD PTR [ebx+0x44]
  409f7c:	dec    edi
  409f7d:	jns    0x409f36
  409f7f:	cld    
  409f80:	(bad)  
  409f81:	jns    0x409f51
  409f83:	mov    DWORD PTR [eax+0x62],esi
  409f86:	jne    0x409f54
  409f88:	adc    bh,BYTE PTR [edi-0x37d987d7]
  409f8e:	xchg   ecx,eax
  409f8f:	jbe    0x409fc0
  409f91:	aas    
  409f92:	into   
  409f93:	(bad)  
  409f94:	(bad)  
  409f95:	jmp    0x409f7e
  409f97:	add    esp,DWORD PTR [ebp+eiz*1-0x5c0e68c0]
  409f9e:	popa   
  409f9f:	cmp    DWORD PTR [eax],esi
  409fa1:	mov    al,ds:0x7b68448c
  409fa6:	and    DWORD PTR gs:[esi-0x16],ebp
  409faa:	lods   eax,DWORD PTR ds:[esi]
  409fab:	add    bh,BYTE PTR [edi-0x36]
  409fae:	ss pushf 
  409fb0:	in     al,0x2b
  409fb2:	inc    DWORD PTR [esi-0x1d]
  409fb5:	popf   
  409fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fb8:	cmp    DWORD PTR [ebp+0x3e8f4425],edi
  409fbe:	(bad)  
  409fbf:	cmp    ebp,ecx
  409fc1:	sbb    eax,0x3b827136
  409fc6:	push   edi
  409fc7:	outs   dx,DWORD PTR ds:[esi]
  409fc8:	inc    ebx
  409fc9:	lods   al,BYTE PTR ds:[esi]
  409fca:	call   0xb903:0xa2dfc7bf
  409fd1:	stos   DWORD PTR es:[edi],eax
  409fd2:	les    eax,FWORD PTR [ebx-0x27]
  409fd5:	cmp    BYTE PTR [edi],bh
  409fd7:	repz mov al,ds:0x37ce5761
  409fdd:	(bad)  
  409fde:	scas   al,BYTE PTR es:[edi]
  409fdf:	int    0xec
  409fe1:	mov    BYTE PTR ds:0x23524ce3,dl
  409fe7:	jb     0x409f99
  409fe9:	jnp    0x40a01d
  409feb:	popa   
  409fec:	sbb    al,0x7f
  409fee:	jno    0x40a002
  409ff0:	jl     0x40a05a
  409ff2:	adc    edi,DWORD PTR [ecx-0x489dc445]
  409ff8:	fist   DWORD PTR [eax]
  409ffa:	(bad)  
  409ffc:	xchg   edx,eax
  409ffd:	jecxz  0x40a06f
  409fff:	(bad)  [edi+0x61]
  40a002:	test   al,0x35
  40a004:	push   ecx
  40a005:	repz loope 0x409f9a
  40a008:	rcr    DWORD PTR [ecx+edi*1],1
  40a00b:	hlt    
  40a00c:	mov    ebp,0xe7dee7ad
  40a011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a012:	js     0x409fa7
  40a014:	adc    BYTE PTR [ecx-0x6a09cfe1],0x1d
  40a01b:	loop   0x40a011
  40a01d:	gs push 0x315d6f16
  40a023:	pop    es
  40a024:	mov    eax,ds:0x5216a855
  40a029:	out    dx,al
  40a02a:	jb     0x40a031
  40a02c:	xchg   edi,eax
  40a02d:	inc    edx
  40a02e:	jle    0x40a08d
  40a030:	push   ds
  40a031:	std    
  40a032:	and    ch,BYTE PTR [edi+0x4c]
  40a035:	out    dx,eax
  40a036:	cmp    BYTE PTR [ebx],0x8d
  40a039:	push   esi
  40a03a:	arpl   WORD PTR [ebx],sp
  40a03c:	pop    esp
  40a03d:	fnstcw WORD PTR [esi+0x6e26df50]
  40a043:	imul   esp,DWORD PTR [edi-0x2e],0x3
  40a047:	mov    edi,0xe41ce076
  40a04c:	imul   eax,DWORD PTR [edi-0x482461b9],0x547fb90
  40a056:	mov    dl,dl
  40a058:	xchg   esi,eax
  40a059:	nop
  40a05a:	lock inc esi
  40a05c:	(bad)  
  40a05d:	stc    
  40a05e:	fidivr DWORD PTR [ecx]
  40a060:	pop    esp
  40a061:	push   0xebe0f9b8
  40a066:	xchg   edx,eax
  40a067:	aaa    
  40a068:	gs mov eax,0x4eb85f69
  40a06e:	jmp    0xb2fe332b
  40a073:	pop    esi
  40a074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a075:	adc    eax,0x450477b8
  40a07a:	add    BYTE PTR [edi*8-0x2d53d98e],dh
  40a081:	add    edx,DWORD PTR [edx-0x5c45ba71]
  40a087:	mov    ss,WORD PTR ss:[ecx+0x695254ef]
  40a08e:	out    0x53,al
  40a090:	adc    esp,DWORD PTR [eax]
  40a092:	dec    edi
  40a093:	nop
  40a094:	sbb    eax,0xafbb720e
  40a099:	jo     0x40a076
  40a09b:	in     eax,0xac
  40a09d:	lods   al,BYTE PTR ds:[esi]
  40a09e:	inc    ebp
  40a09f:	daa    
  40a0a0:	mov    ah,0x52
  40a0a2:	inc    ebx
  40a0a3:	mov    al,ds:0xf58ba800
  40a0a8:	xchg   esi,eax
  40a0a9:	arpl   WORD PTR ds:0xf2421a3f,bx
  40a0af:	jge    0x40a056
  40a0b1:	sahf   
  40a0b2:	jns    0x40a0e5
  40a0b4:	xor    al,0x2a
  40a0b6:	loope  0x40a099
  40a0b8:	mov    bh,0x53
  40a0ba:	rol    BYTE PTR [ecx-0x6b],1
  40a0bd:	loopne 0x40a0c1
  40a0bf:	mov    cl,0x1c
  40a0c1:	pop    esi
  40a0c2:	(bad)  
  40a0c3:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40a0c5:	or     eax,0xd8f47ef2
  40a0ca:	sti    
  40a0cb:	(bad)  
  40a0cc:	jge    0x40a0a8
  40a0ce:	lock adc ecx,eax
  40a0d1:	int3   
  40a0d2:	out    0xa5,eax
  40a0d4:	into   
  40a0d5:	retf   
  40a0d6:	addr16 cli 
  40a0d8:	ja     0x40a0b1
  40a0da:	daa    
  40a0db:	in     al,0x21
  40a0dd:	ins    BYTE PTR es:[edi],dx
  40a0de:	add    esi,esp
  40a0e0:	adc    ah,BYTE PTR [eax]
  40a0e2:	or     bl,BYTE PTR [ebx-0x5d0c5300]
  40a0e8:	bound  esi,QWORD PTR [eax+0x66]
  40a0eb:	mov    ch,0xd7
  40a0ed:	out    dx,al
  40a0ee:	mov    ds:0x742f63db,eax
  40a0f3:	inc    esi
  40a0f4:	jl     0x40a164
  40a0f6:	hlt    
  40a0f7:	push   ebp
  40a0f8:	imul   esi,DWORD PTR [ebp-0x484dc1bf],0x94f0edb0
  40a102:	mov    BYTE PTR [edi+0x5056400f],ah
  40a108:	out    0x38,eax
  40a10a:	pop    esi
  40a10b:	dec    ebx
  40a10c:	es inc ecx
  40a10e:	in     al,dx
  40a10f:	stos   DWORD PTR es:[edi],eax
  40a110:	jb     0x40a18c
  40a112:	mov    esp,0x7e87eef5
  40a117:	cmp    eax,0x1d1b0767
  40a11c:	(bad)  
  40a11e:	out    0xfe,al
  40a120:	pop    es
  40a121:	xor    eax,0x94e24d7
  40a126:	test   BYTE PTR [ebp-0x30],dl
  40a129:	adc    DWORD PTR [edi+0x5f],0x18
  40a12d:	adc    eax,0x316117d8
  40a132:	(bad)  
  40a133:	mov    cl,0x46
  40a135:	sar    DWORD PTR [edi],1
  40a137:	inc    edi
  40a138:	vmovq  xmm3,xmm2
  40a13c:	lods   al,BYTE PTR ds:[esi]
  40a13d:	mov    ecx,0xafc069a4
  40a142:	icebp  
  40a143:	(bad)  
  40a144:	sbb    edx,DWORD PTR [edi-0x400f6448]
  40a14a:	orps   xmm3,XMMWORD PTR [ebp-0x62]
  40a14e:	iret   
  40a14f:	rcr    BYTE PTR [ecx-0x37c12966],1
  40a155:	or     BYTE PTR [esp+edx*2-0x7155beed],0x9e
  40a15d:	shr    bl,cl
  40a15f:	push   si
  40a161:	out    0x7,al
  40a163:	jge    0x40a12e
  40a165:	mov    al,ds:0x18184f9f
  40a16a:	pop    ss
  40a16b:	stc    
  40a16c:	and    esi,0xcaace270
  40a172:	sbb    esp,DWORD PTR [esi+ebx*2]
  40a175:	pop    ebp
  40a176:	mov    ecx,0x990acb23
  40a17b:	and    BYTE PTR [edi+0x61587db5],dh
  40a181:	inc    edi
  40a182:	icebp  
  40a183:	jle    0x40a174
  40a185:	sbb    ebx,0x3666abe5
  40a18b:	dec    ebp
  40a18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a18d:	cmp    al,0x45
  40a18f:	jo     0x40a123
  40a191:	sbb    al,0x6a
  40a193:	mov    ebp,0xb0b631c0
  40a198:	(bad)  
  40a199:	mov    esi,0xb7116f31
  40a19e:	in     eax,0x5
  40a1a0:	gs inc eax
  40a1a2:	push   ebp
  40a1a3:	popf   
  40a1a4:	push   ebx
  40a1a5:	xlat   BYTE PTR ds:[ebx]
  40a1a6:	mov    cl,0x25
  40a1a8:	mov    ebp,0xd739677
  40a1ad:	loop   0x40a165
  40a1af:	ins    BYTE PTR es:[edi],dx
  40a1b0:	jno    0x40a14d
  40a1b2:	mov    ebp,0x9f5ef78b
  40a1b7:	(bad)  
  40a1b8:	fmul   QWORD PTR [ebp-0x4d103492]
  40a1be:	push   edi
  40a1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1c0:	js     0x40a152
  40a1c2:	into   
  40a1c3:	mov    edx,0x9ce48f55
  40a1c8:	int    0xc1
  40a1ca:	push   ecx
  40a1cb:	add    al,BYTE PTR [ebx]
  40a1cd:	fldenv [ebx+0x6d]
  40a1d0:	add    DWORD PTR [edi+0x2d],esi
  40a1d3:	je     0x40a1e2
  40a1d5:	cwde   
  40a1d6:	cld    
  40a1d7:	cmp    eax,0x537fc40
  40a1dc:	mov    edi,DWORD PTR [ebp+0x22304fd0]
  40a1e2:	mov    edx,0xfda5319f
  40a1e7:	sbb    edx,DWORD PTR [edi-0x3d]
  40a1ea:	or     al,0xc0
  40a1ec:	dec    ecx
  40a1ed:	mov    ebp,0x454dfb6f
  40a1f2:	add    ch,BYTE PTR ds:0xaa4b9927
  40a1f8:	bound  eax,QWORD PTR [edx+ebp*4]
  40a1fb:	xchg   ecx,eax
  40a1fc:	in     al,dx
  40a1fd:	mov    esi,0x1fcec2db
  40a202:	mov    cl,0x91
  40a204:	push   ebp
  40a205:	mov    dh,0x16
  40a207:	std    
  40a208:	lahf   
  40a209:	inc    BYTE PTR [esi]
  40a20b:	xor    eax,0x2debb73a
  40a210:	mov    WORD PTR [ecx+0x27dbae41],gs
  40a216:	cmp    eax,0xa9b611a7
  40a21b:	lods   eax,DWORD PTR ds:[esi]
  40a21c:	jp     0x40a205
  40a21e:	adc    bl,bl
  40a220:	aad    0x39
  40a222:	push   edx
  40a223:	test   BYTE PTR [edx+0x68],0x54
  40a227:	scas   al,BYTE PTR es:[edi]
  40a228:	(bad)  
  40a229:	cdq    
  40a22a:	mov    edx,0xed3da322
  40a22f:	push   0x4d
  40a231:	mov    edx,0x837e03bc
  40a236:	mov    esp,0x2db02523
  40a23b:	iret   
  40a23c:	pause  
  40a23e:	dec    edx
  40a23f:	add    ebp,ebx
  40a241:	loope  0x40a1f5
  40a243:	or     al,0x16
  40a245:	pop    ebx
  40a246:	xor    dl,dh
  40a248:	cdq    
  40a249:	sub    ch,BYTE PTR [eax-0x2e61c795]
  40a24f:	js     0x40a2b1
  40a251:	ficomp WORD PTR [edi+0x74]
  40a254:	nop
  40a255:	push   eax
  40a256:	dec    edi
  40a257:	mov    dl,0x38
  40a259:	and    ah,dl
  40a25b:	in     al,dx
  40a25c:	enter  0xe5d7,0xbc
  40a260:	jb     0x40a2aa
  40a262:	stc    
  40a263:	fist   WORD PTR [ecx+0x4299e141]
  40a269:	adc    al,0x8e
  40a26b:	mov    gs,WORD PTR [ebx-0x20f657a9]
  40a271:	aad    0x1a
  40a273:	data16 mov ds:0x6ed7ede4,al
  40a279:	loope  0x40a2f3
  40a27b:	mov    dl,0x5c
  40a27d:	jae    0x40a2c3
  40a27f:	arpl   WORD PTR [esi+0x6bf3240b],di
  40a285:	aad    0xfe
  40a287:	push   cs
  40a288:	and    eax,0xd79bdc84
  40a28d:	sub    ch,bl
  40a28f:	sti    
  40a290:	test   BYTE PTR [ecx],al
  40a292:	jns    0x40a302
  40a294:	lds    edx,FWORD PTR [edx+0x2a0ee2bf]
  40a29a:	loop   0x40a21d
  40a29c:	or     edx,DWORD PTR [edi+eax*4]
  40a29f:	push   ebp
  40a2a0:	inc    ebp
  40a2a1:	mov    ds:0x3d57ab39,eax
  40a2a6:	gs stos DWORD PTR es:[edi],eax
  40a2a8:	adc    ebp,DWORD PTR [ebx+0x5b]
  40a2ab:	push   eax
  40a2ac:	add    BYTE PTR [ebp+0x49],0x85
  40a2b0:	xor    al,0x97
  40a2b2:	mov    ss,WORD PTR [ecx]
  40a2b4:	pop    es
  40a2b5:	shr    BYTE PTR ds:0x3ade91e8,0x5a
  40a2bc:	jae    0x40a312
  40a2be:	arpl   WORD PTR [edi+eax*8+0xd],dx
  40a2c2:	mov    ds:0xe3f7acb8,eax
  40a2c7:	arpl   WORD PTR [edx-0x1b3dae50],cx
  40a2cd:	icebp  
  40a2ce:	inc    eax
  40a2cf:	push   esi
  40a2d0:	sbb    bh,bl
  40a2d2:	retf   0xcfa5
  40a2d5:	mov    ah,0x3e
  40a2d7:	dec    esi
  40a2d8:	out    0xa5,al
  40a2da:	lods   eax,DWORD PTR ds:[esi]
  40a2db:	pop    edi
  40a2dc:	add    ebp,edx
  40a2de:	ret    
  40a2df:	jl     0x40a278
  40a2e1:	loopne 0x40a285
  40a2e3:	jp     0x40a30d
  40a2e5:	adc    edx,DWORD PTR [esi+0x357be848]
  40a2eb:	mov    ds:0x89631962,eax
  40a2f0:	enter  0xf1b0,0x57
  40a2f4:	or     edi,DWORD PTR [esi-0xb561e38]
  40a2fa:	jge    0x40a2e4
  40a2fc:	sbb    BYTE PTR [ecx],bl
  40a2fe:	pop    ss
  40a2ff:	push   esp
  40a300:	ror    DWORD PTR [edi],cl
  40a302:	pop    ecx
  40a303:	mov    ebp,0x812e9609
  40a308:	jge    0x40a381
  40a30a:	pop    edi
  40a30b:	jnp    0x40a376
  40a30d:	push   ss
  40a30e:	cmp    DWORD PTR [esi+eax*4+0x7],ecx
  40a312:	pop    edx
  40a313:	or     DWORD PTR [ecx+0x67],esp
  40a316:	mov    edx,0x1a06611d
  40a31b:	cdq    
  40a31c:	cld    
  40a31d:	mov    dh,0x8e
  40a31f:	cs push ebx
  40a321:	clc    
  40a322:	mov    ebp,0xd12f7fa9
  40a327:	lahf   
  40a328:	xlat   BYTE PTR ds:[ebx]
  40a329:	jle    0x40a328
  40a32b:	jp     0x40a36a
  40a32d:	ja     0x40a2d3
  40a32f:	pop    esi
  40a330:	hlt    
  40a331:	lock iret 
  40a333:	and    cl,BYTE PTR [ebx]
  40a335:	jae    0x40a366
  40a337:	push   ds
  40a338:	jmp    0x40a2e9
  40a33a:	xchg   ebp,eax
  40a33b:	mov    dh,0x9f
  40a33d:	jge    0x40a349
  40a33f:	int3   
  40a340:	ret    
  40a341:	inc    esi
  40a342:	inc    esp
  40a343:	in     eax,0xe2
  40a345:	cmp    BYTE PTR [ecx+0x77],ah
  40a348:	fwait
  40a349:	cmp    eax,0x592d049c
  40a34e:	ins    DWORD PTR es:[edi],dx
  40a34f:	dec    eax
  40a350:	cdq    
  40a351:	mov    ecx,0xbc6c3ace
  40a356:	xchg   DWORD PTR [esp+edx*1-0x2ba0407f],ebp
  40a35d:	mov    ds:0x17381199,al
  40a362:	sar    DWORD PTR [eax],cl
  40a364:	pop    ebp
  40a365:	and    eax,0xac152aa
  40a36a:	fs pop ss
  40a36c:	lea    esi,[ecx]
  40a36e:	dec    esi
  40a36f:	dec    esi
  40a370:	mov    ecx,0x2c0e2c89
  40a375:	int    0xba
  40a377:	add    eax,0xd568baa1
  40a37c:	mov    edi,0x24e2fe02
  40a381:	fisttp WORD PTR [ebx-0x60]
  40a384:	jnp    0x40a3d7
  40a386:	in     eax,0x24
  40a388:	pop    esp
  40a389:	pop    esp
  40a38a:	cmp    BYTE PTR [eax],ch
  40a38c:	cli    
  40a38d:	popf   
  40a38e:	popf   
  40a38f:	mov    dh,BYTE PTR [ebx+0x4b]
  40a392:	aad    0x7d
  40a394:	mov    cl,0xb2
  40a396:	push   ecx
  40a397:	lods   eax,DWORD PTR es:[esi]
  40a399:	retf   
  40a39a:	mov    ebx,0x6c2a3892
  40a39f:	jmp    0x38c2:0x315f580a
  40a3a6:	add    eax,0xe598ff4b
  40a3ab:	call   0x753fc784
  40a3b0:	adc    ecx,0x9d6896ca
  40a3b6:	cmp    DWORD PTR [ecx],0x2d
  40a3b9:	add    eax,0x56edcc4
  40a3be:	(bad)  
  40a3bf:	cld    
  40a3c0:	xchg   ebp,eax
  40a3c1:	int3   
  40a3c2:	lods   eax,DWORD PTR ds:[esi]
  40a3c3:	push   DWORD PTR [ebx-0x12]
  40a3c6:	mov    ch,0x6f
  40a3c8:	push   cs
  40a3c9:	(bad)  
  40a3ca:	fidivr DWORD PTR [edx+eiz*1-0x74f1e61c]
  40a3d1:	rcl    DWORD PTR [esp+ecx*8],0xf6
  40a3d5:	jnp    0x40a366
  40a3d7:	int    0xe3
  40a3d9:	outs   dx,BYTE PTR ds:[esi]
  40a3da:	add    eax,0xbf36663b
  40a3df:	sub    eax,0xccd9c90d
  40a3e4:	shl    BYTE PTR [esi+0x5456b6a8],0x41
  40a3eb:	frstor [edi+0x41c16c54]
  40a3f1:	and    BYTE PTR [edx+0x6f],bl
  40a3f4:	test   BYTE PTR ss:[esp+ecx*4],0xcd
  40a3f9:	dec    ebx
  40a3fa:	bound  edi,QWORD PTR [ecx+0xf]
  40a3fd:	xor    dl,ch
  40a3ff:	repz xor BYTE PTR [ebx+0x47a708fd],bh
  40a406:	jns    0x40a462
  40a408:	push   cs
  40a409:	jecxz  0x40a3f7
  40a40b:	or     ch,bh
  40a40d:	pop    es
  40a40e:	(bad)  
  40a40f:	lahf   
  40a410:	and    eax,0xd6f5aff
  40a415:	mov    ecx,DWORD PTR [ecx]
  40a417:	call   0xd05b054f
  40a41c:	popf   
  40a41d:	inc    esi
  40a41e:	mov    ebp,0x4370419e
  40a423:	clc    
  40a424:	adc    al,0x2a
  40a426:	cs jne 0x40a43c
  40a429:	and    eax,0x75796abe
  40a42e:	push   0x4d
  40a430:	xchg   ebx,eax
  40a431:	jge    0x40a3ce
  40a433:	jns    0x40a406
  40a435:	leave  
  40a436:	shl    BYTE PTR [ebx-0x41210a56],0xd
  40a43d:	jne    0x40a3c0
  40a43f:	xchg   DWORD PTR [esi+0x4aee0380],edx
  40a445:	fsub   QWORD PTR [ecx-0x1ba7e3e7]
  40a44b:	cdq    
  40a44c:	cli    
  40a44d:	push   edx
  40a44e:	(bad)  
  40a44f:	pushf  
  40a450:	adc    eax,0xfaa9bc26
  40a455:	adc    ch,BYTE PTR [edi+0x36afe5c2]
  40a45b:	out    dx,al
  40a45c:	pop    ss
  40a45d:	lahf   
  40a45e:	std    
  40a45f:	pop    es
  40a460:	mov    ds:0xdfa92997,eax
  40a465:	adc    eax,0xc0039b00
  40a46a:	enter  0xe9be,0xab
  40a46e:	jmp    0x40a430
  40a470:	rcl    BYTE PTR [edi+0x68460334],0x1
  40a477:	ret    0x8931
  40a47a:	mov    cl,0x20
  40a47d:	or     edi,DWORD PTR [eax-0x1b]
  40a480:	into   
  40a481:	ficom  WORD PTR [ebx-0x37f4c2d9]
  40a487:	adc    ebp,DWORD PTR [esp+ebp*8+0x196b463a]
  40a48e:	stc    
  40a48f:	mov    bl,0x55
  40a491:	imul   edx,DWORD PTR [ebp-0x33],0xffffffd6
  40a495:	loop   0x40a463
  40a497:	pusha  
  40a498:	adc    dh,bh
  40a49a:	scas   eax,DWORD PTR es:[edi]
  40a49b:	fmul   QWORD PTR cs:[edx]
  40a49f:	sahf   
  40a4a0:	imul   eax,DWORD PTR [esi+0x20],0x1d1640e0
  40a4a7:	in     al,dx
  40a4a8:	adc    cl,BYTE PTR [ebp+0x1bc9cacc]
  40a4ae:	xlat   BYTE PTR ds:[ebx]
  40a4af:	hlt    
  40a4b0:	cmp    esp,DWORD PTR [ecx+ecx*1-0x5a]
  40a4b4:	cwde   
  40a4b5:	rcl    BYTE PTR ds:0x3a04bf5f,0xea
  40a4bc:	fnstcw WORD PTR [ebp+0xce163e0]
  40a4c2:	jmp    0x40a48d
  40a4c4:	and    BYTE PTR [edi+0x6a],al
  40a4c7:	sub    dl,BYTE PTR [ebx+0x6cf0a7f4]
  40a4cd:	popa   
  40a4ce:	stos   BYTE PTR es:[edi],al
  40a4cf:	(bad)  
  40a4d0:	mov    esp,0x1cc4c49e
  40a4d5:	lea    eax,[edx+0x7d]
  40a4d8:	lahf   
  40a4d9:	push   0xffffff9a
  40a4db:	dec    eax
  40a4dc:	(bad)  
  40a4dd:	push   ecx
  40a4de:	dec    edx
  40a4df:	add    DWORD PTR [ebx-0x1],eax
  40a4e2:	dec    ebx
  40a4e3:	call   FWORD PTR ds:0xd40faeee
  40a4e9:	pop    es
  40a4ea:	fdivr  QWORD PTR [esi-0x72]
  40a4ed:	mov    al,ds:0x4f8e5fcb
  40a4f2:	cmp    al,0x1d
  40a4f4:	sbb    DWORD PTR [esi-0x5f],ebx
  40a4f7:	dec    eax
  40a4f8:	mov    dh,0x42
  40a4fa:	push   ecx
  40a4fb:	les    ebp,FWORD PTR [ecx+edx*1+0x7d]
  40a4ff:	xor    eax,DWORD PTR [ecx+0x75]
  40a502:	jmp    0x40a4e4
  40a504:	mov    bh,0xe4
  40a506:	(bad)  
  40a507:	into   
  40a508:	cmp    dh,BYTE PTR [ecx-0x7ce1ac4b]
  40a50e:	retf   
  40a50f:	mov    dh,0x82
  40a511:	pop    ebx
  40a512:	(bad)  
  40a513:	cs nop
  40a515:	jo     0x40a522
  40a517:	sub    DWORD PTR [edx-0x16],eax
  40a51a:	mov    eax,ds:0xef19fd5d
  40a51f:	inc    edi
  40a520:	inc    ebp
  40a521:	stc    
  40a522:	cmp    edx,edi
  40a524:	gs push es
  40a526:	pop    esp
  40a527:	(bad)  ds:[esi+0x10eec6d8]
  40a52e:	pop    esp
  40a52f:	je     0x40a549
  40a531:	and    eax,0xad3aedfc
  40a536:	adc    esi,edx
  40a538:	mov    fs,WORD PTR [ebp+0x1]
  40a53b:	les    ebp,FWORD PTR [ebx+0xd7fe50b]
  40a541:	jnp    0x40a56f
  40a543:	sbb    al,0x40
  40a545:	es aas 
  40a547:	inc    ebx
  40a548:	inc    eax
  40a549:	dec    eax
  40a54a:	jne    0x40a59d
  40a54c:	xor    DWORD PTR [ebx],esp
  40a54e:	mov    edx,0x3675870a
  40a553:	cli    
  40a554:	and    edi,DWORD PTR [eax+0x3c29c8d]
  40a55a:	mov    ebp,0x2d3df32
  40a55f:	in     al,dx
  40a560:	addr16 mov ecx,0x52dcd2cd
  40a566:	mov    BYTE PTR [edi],ch
  40a568:	mov    eax,ds:0xe31f1d8b
  40a56d:	loop   0x40a53e
  40a56f:	cs ret 0xd40a
  40a573:	mov    edx,0xeebead8d
  40a578:	out    dx,al
  40a579:	loope  0x40a580
  40a57b:	not    DWORD PTR [edx]
  40a57d:	xor    dl,ah
  40a57f:	cmp    BYTE PTR [eax-0x72faa3ed],ah
  40a585:	xchg   edi,eax
  40a586:	mov    dh,0xfe
  40a588:	loopne 0x40a5a7
  40a58a:	scas   eax,DWORD PTR es:[edi]
  40a58b:	fidivr DWORD PTR [esi]
  40a58d:	mov    ebp,0xf4e17b84
  40a592:	jg     0x40a59b
  40a594:	test   eax,0xde107c11
  40a599:	nop
  40a59a:	cmp    cl,dl
  40a59c:	mov    edx,DWORD PTR [eax+0x13]
  40a59f:	mov    ebp,DWORD PTR [ebx]
  40a5a1:	push   esi
  40a5a2:	push   edx
  40a5a3:	or     eax,DWORD PTR ss:[ebx-0x913fcb6]
  40a5aa:	inc    edx
  40a5ab:	xchg   ebp,eax
  40a5ac:	push   0x37
  40a5ae:	and    eax,0xb3841399
  40a5b3:	and    BYTE PTR [eax+0x3f2d9e8b],al
  40a5b9:	mov    BYTE PTR [edx],cl
  40a5bb:	aam    0x4f
  40a5bd:	popf   
  40a5be:	mov    BYTE PTR [ebx-0x4d],0x97
  40a5c2:	or     edi,DWORD PTR [esi]
  40a5c4:	retf   
  40a5c5:	test   al,0x97
  40a5c7:	push   ebx
  40a5c8:	sar    ch,0xb4
  40a5cb:	mov    bl,0x95
  40a5cd:	push   cs
  40a5ce:	push   es
  40a5cf:	popa   
  40a5d0:	mov    WORD PTR [edi+0x1],cs
  40a5d3:	mov    cl,0xe5
  40a5d5:	pop    ecx
  40a5d6:	pop    ebp
  40a5d7:	cli    
  40a5d8:	hlt    
  40a5d9:	lahf   
  40a5da:	enter  0x67ff,0xf1
  40a5de:	pop    ss
  40a5df:	sub    dl,BYTE PTR [edx+0x6b]
  40a5e2:	xchg   ecx,eax
  40a5e3:	enter  0x27d9,0x11
  40a5e7:	in     al,dx
  40a5e8:	scas   al,BYTE PTR es:[edi]
  40a5e9:	cmp    al,0xa3
  40a5eb:	sub    BYTE PTR [esi-0x6f],0xc3
  40a5ef:	dec    esp
  40a5f0:	inc    ebp
  40a5f1:	dec    esi
  40a5f2:	sbb    ecx,DWORD PTR gs:[eax+0x2c]
  40a5f6:	sub    al,0x12
  40a5f8:	outs   dx,BYTE PTR ds:[esi]
  40a5f9:	scas   eax,DWORD PTR es:[edi]
  40a5fa:	std    
  40a5fb:	adc    eax,edi
  40a5fd:	adc    eax,0x38778be6
  40a602:	or     edx,DWORD PTR [ecx]
  40a604:	neg    BYTE PTR [ebx]
  40a606:	out    dx,al
  40a607:	or     bl,BYTE PTR [edi+0x58a2f50]
  40a60d:	mov    al,ds:0xe0bb3009
  40a612:	in     eax,0x9c
  40a614:	dec    eax
  40a615:	xchg   edi,eax
  40a616:	push   ecx
  40a617:	enter  0xbe7f,0x61
  40a61b:	lds    esi,FWORD PTR [eax]
  40a61d:	push   edi
  40a61e:	sti    
  40a61f:	ja     0x40a5f6
  40a621:	mov    ch,0x96
  40a623:	add    DWORD PTR [edx],esi
  40a625:	aaa    
  40a626:	jmp    0x40a634
  40a628:	xchg   esi,eax
  40a62a:	lahf   
  40a62b:	xchg   edi,eax
  40a62c:	adc    DWORD PTR [ebp+0xf0bfa9f],ebp
  40a632:	ret    0xb85a
  40a635:	pusha  
  40a636:	mov    edx,0xcb0a8b3d
  40a63b:	in     al,dx
  40a63c:	mov    esi,0xf78c71d2
  40a641:	pop    eax
  40a642:	add    al,0x7c
  40a644:	jbe    0x40a5cd
  40a646:	xor    cl,ch
  40a648:	rcr    BYTE PTR [ecx-0x67],0xe2
  40a64c:	aad    0xbc
  40a64e:	aam    0xed
  40a650:	cmp    al,0xea
  40a652:	ret    0xfeec
  40a655:	lahf   
  40a656:	outs   dx,BYTE PTR ds:[esi]
  40a657:	mov    ds:0xca74ca4a,al
  40a65c:	nop
  40a65d:	mov    cl,0x22
  40a65f:	add    DWORD PTR [ebx+0x4180ce8],ebx
  40a665:	xor    dh,bh
  40a667:	sub    BYTE PTR [esi-0x7c],0xe4
  40a66b:	jg     0x40a6be
  40a66d:	or     dl,dh
  40a66f:	jle    0x40a651
  40a671:	ss nop
  40a673:	cmc    
  40a674:	push   esi
  40a675:	mov    al,0xd
  40a677:	push   edi
  40a678:	and    al,0x53
  40a67a:	sub    ch,BYTE PTR [ecx-0x80]
  40a67d:	pop    esp
  40a67e:	push   es
  40a67f:	adc    dh,bl
  40a681:	jg     0x40a6c4
  40a683:	mov    ch,0xac
  40a685:	leave  
  40a686:	das    
  40a687:	je     0x40a632
  40a689:	fisub  WORD PTR [eax+esi*8+0x3]
  40a68d:	(bad)  [edx]
  40a68f:	rcl    BYTE PTR [eax+0x2b],cl
  40a692:	out    0xce,al
  40a694:	push   edi
  40a695:	sub    al,0xb7
  40a697:	mov    edi,0xc32d205f
  40a69c:	dec    esi
  40a69d:	dec    ebx
  40a69e:	jp     0x40a6c4
  40a6a0:	xchg   DWORD PTR [edx+esi*1-0x60],esp
  40a6a4:	rcr    BYTE PTR ds:0x4154a41f,1
  40a6aa:	ins    BYTE PTR es:[edi],dx
  40a6ab:	cli    
  40a6ac:	ja     0x40a712
  40a6ae:	xchg   ebp,eax
  40a6af:	push   cs
  40a6b0:	push   ds
  40a6b1:	mov    eax,0x315a15e3
  40a6b6:	dec    eax
  40a6b7:	xor    dh,BYTE PTR [edx]
  40a6b9:	popa   
  40a6ba:	test   BYTE PTR [eax+0xf],cl
  40a6bd:	into   
  40a6be:	imul   ebp,DWORD PTR [edi-0x274893c0],0x53e0256a
  40a6c8:	dec    ecx
  40a6c9:	(bad)
  40a6cd:	leave  
  40a6ce:	add    dl,BYTE PTR [ecx]
  40a6d0:	inc    ebx
  40a6d1:	mov    DWORD PTR [esi+0x4873511f],ebp
  40a6d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d8:	shl    DWORD PTR [edi+0x65a2ad67],1
  40a6de:	add    BYTE PTR [edi],bh
  40a6e0:	ss pop edi
  40a6e2:	hlt    
  40a6e3:	push   edx
  40a6e4:	pop    eax
  40a6e5:	jmp    0x40a723
  40a6e7:	and    DWORD PTR [edx-0xdacd590],ebx
  40a6ed:	retw   
  40a6ef:	loop   0x40a718
  40a6f1:	cdq    
  40a6f2:	loopne 0x40a71d
  40a6f4:	fbstp  TBYTE PTR ds:0x2541c87e
  40a6fa:	call   0xc52c:0xb2e5e8f3
  40a701:	fnstcw WORD PTR [ecx-0x7b]
  40a704:	cmp    BYTE PTR [edx-0x47b1a826],al
  40a70a:	dec    ebp
  40a70b:	push   cs
  40a70c:	cmp    cl,BYTE PTR [edi]
  40a70e:	repz add eax,0x58fa163
  40a714:	mov    BYTE PTR ds:0xe1d0092a,dh
  40a71a:	and    BYTE PTR [eax+0x30f18448],0x5a
  40a721:	call   0xd3e4:0x5bbd1fd6
  40a728:	out    dx,eax
  40a729:	push   edx
  40a72a:	ret    0x39d3
  40a72d:	inc    ebx
  40a72e:	sbb    BYTE PTR [ecx+0x78fe23fd],ah
  40a734:	cdq    
  40a735:	xor    eax,0x2f9096b9
  40a73a:	push   es
  40a73b:	mov    ah,0x88
  40a73d:	(bad)  
  40a73e:	dec    edx
  40a73f:	or     eax,0xe5adae0f
  40a744:	or     al,ah
  40a746:	pop    eax
  40a747:	mov    dh,0x24
  40a749:	int    0xc4
  40a74b:	test   edi,edx
  40a74d:	sbb    cl,ch
  40a74f:	pop    edi
  40a750:	test   eax,0x56a00cb7
  40a755:	adc    esi,DWORD PTR [ebp-0xc]
  40a758:	cs fwait
  40a75a:	cld    
  40a75b:	sub    ecx,DWORD PTR [ecx]
  40a75d:	call   0xdc74:0x2e9655e6
  40a764:	retf   
  40a765:	(bad)  
  40a766:	mov    al,ds:0x55a866c9
  40a76b:	mov    al,ds:0xf23b89b
  40a770:	out    0xea,al
  40a772:	sbb    dh,BYTE PTR [ebx]
  40a774:	sti    
  40a775:	lds    ebp,FWORD PTR [edx]
  40a777:	iret   
  40a778:	fs jmp 0xc277:0x84134a9c
  40a780:	lea    edi,[edx]
  40a782:	mov    bh,0xe0
  40a784:	mov    bl,0x63
  40a786:	inc    eax
  40a787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a788:	pop    esp
  40a789:	xchg   esp,eax
  40a78a:	inc    edi
  40a78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a78c:	jns    0x40a752
  40a78e:	inc    edx
  40a78f:	xchg   ebp,eax
  40a790:	cli    
  40a791:	js     0x40a754
  40a793:	shl    DWORD PTR [ecx-0x72af8ab5],0xfc
  40a79a:	xor    al,0x20
  40a79c:	add    cl,BYTE PTR [ebp-0x752a89a1]
  40a7a2:	or     esi,eax
  40a7a4:	mov    ecx,0x439e022b
  40a7a9:	lahf   
  40a7aa:	ins    BYTE PTR es:[edi],dx
  40a7ab:	push   0xf15587e2
  40a7b0:	add    dh,dl
  40a7b2:	ds int3 
  40a7b4:	aam    0x9a
  40a7b6:	mov    BYTE PTR [ebx-0x64],cl
  40a7b9:	push   esi
  40a7ba:	jae    0x40a82e
  40a7bc:	adc    al,0x25
  40a7be:	adc    DWORD PTR [esi],ebx
  40a7c0:	pop    eax
  40a7c1:	mov    BYTE PTR [eax-0x59],ah
  40a7c4:	test   eax,0x15aed068
  40a7c9:	stc    
  40a7ca:	sahf   
  40a7cb:	xchg   ebx,eax
  40a7cc:	xchg   esp,eax
  40a7cd:	push   0xa3227af9
  40a7d2:	pop    ebx
  40a7d3:	push   ebx
  40a7d4:	mov    DWORD PTR ds:0x42c004,0x7145
  40a7de:	je     0x40a831
  40a7e4:	and    esi,0x2f20
  40a7ea:	mov    esi,DWORD PTR [ebp-0x18]
  40a7ed:	add    DWORD PTR [eax],esi
  40a7ef:	mov    eax,DWORD PTR [ebp-0x4]
  40a7f2:	adc    esi,0x3e3c
  40a7f8:	mov    esi,DWORD PTR [ebp+0xc]
  40a7fb:	sbb    DWORD PTR ds:0x42d010,0x429008
  40a805:	xor    esi,ecx
  40a807:	adc    DWORD PTR ds:0x42b014,0x7980
  40a811:	add    esi,edx
  40a813:	xor    DWORD PTR ds:0x42d004,0x42b000
  40a81d:	imul   esi,DWORD PTR [eax]
  40a820:	mov    DWORD PTR [eax],esi
  40a822:	mov    DWORD PTR ds:0x42a008,0x3759
  40a82c:	jmp    0x40a849
  40a831:	movzx  esi,BYTE PTR ds:0x42a00c
  40a838:	sub    DWORD PTR ds:0x42a018,esi
  40a83e:	mov    esi,DWORD PTR [ebp+0x14]
  40a841:	and    ebx,DWORD PTR ds:0x42a010
  40a847:	xor    DWORD PTR [eax],esi
  40a849:	and    edi,0x6d78
  40a84f:	mov    eax,DWORD PTR [ebp-0x4]
  40a852:	mov    edi,DWORD PTR [ebp+0x10]
  40a855:	mov    DWORD PTR ds:0x42c014,0x1d
  40a85f:	cmp    DWORD PTR ds:0x42c014,0x0
  40a866:	je     0x40a8bc
  40a86c:	cmp    DWORD PTR ds:0x42c014,0xd
  40a873:	jne    0x40a88e
  40a879:	push   0x42e1c8
  40a87e:	push   DWORD PTR [ebp-0x14]
  40a881:	push   0x1
  40a883:	push   0x66db
  40a888:	call   DWORD PTR ds:0x42ed61
  40a88e:	cmp    DWORD PTR ds:0x42c014,0xe
  40a895:	jne    0x40a8aa
  40a89b:	xor    esi,esi
  40a89d:	or     esi,DWORD PTR ds:0x42c014
  40a8a3:	dec    esi
  40a8a4:	mov    DWORD PTR ds:0x42c014,esi
  40a8aa:	mov    esi,DWORD PTR ds:0x42c014
  40a8b0:	dec    esi
  40a8b1:	mov    DWORD PTR ds:0x42c014,esi
  40a8b7:	jmp    0x40a85f
  40a8bc:	xor    edi,ecx
  40a8be:	mov    esi,0xffcd8d22
  40a8c3:	mov    ebx,esi
  40a8c5:	sub    ebx,edi
  40a8c7:	add    DWORD PTR [eax],ebx
  40a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  40a8cc:	mov    edi,DWORD PTR [ebp-0x8]
  40a8cf:	add    edi,DWORD PTR [eax]
  40a8d1:	mov    DWORD PTR [ebp-0x8],edi
  40a8d4:	mov    eax,DWORD PTR [ebp+0xc]
  40a8d7:	mov    edi,DWORD PTR [ebp+0xc]
  40a8da:	xor    edi,ecx
  40a8dc:	xor    eax,ecx
  40a8de:	lea    eax,[eax+edi*1+0x64e5bc]
  40a8e5:	mov    edi,DWORD PTR [ebp+0xc]
  40a8e8:	xor    edi,ecx
  40a8ea:	add    edi,edx
  40a8ec:	imul   eax,edi
  40a8ef:	mov    edi,DWORD PTR [ebp+0xc]
  40a8f2:	xor    edi,ecx
  40a8f4:	sub    edi,eax
  40a8f6:	mov    eax,DWORD PTR [ebp-0x4]
  40a8f9:	add    edi,edx
  40a8fb:	cmp    DWORD PTR [eax],edi
  40a8fd:	mov    eax,DWORD PTR [ebp-0x4]
  40a900:	mov    edi,DWORD PTR [ebp+0x10]
  40a903:	jg     0x40a916
  40a909:	xor    edi,ecx
  40a90b:	mov    ebx,esi
  40a90d:	sub    ebx,edi
  40a90f:	add    DWORD PTR [eax],ebx
  40a911:	jmp    0x40a91c
  40a916:	xor    edi,ecx
  40a918:	add    edi,edx
  40a91a:	add    DWORD PTR [eax],edi
  40a91c:	mov    eax,DWORD PTR [ebp-0x8]
  40a91f:	mov    edi,DWORD PTR [ebp-0x10]
  40a922:	mov    eax,DWORD PTR [eax]
  40a924:	xor    edi,ecx
  40a926:	add    edi,0x3272dd
  40a92c:	not    edi
  40a92e:	and    eax,edi
  40a930:	movsx  di,BYTE PTR [eax+0x1]
  40a935:	mov    ebx,0x3b4e
  40a93a:	sub    di,bx
  40a93d:	mov    ebx,0x8a8b
  40a942:	xor    di,bx
  40a945:	mov    ebx,0x4f87
  40a94a:	cmp    di,bx
  40a94d:	jne    0x40a975
  40a953:	movsx  di,BYTE PTR [eax]
  40a957:	mov    ebx,0x3b4e
  40a95c:	sub    di,bx
  40a95f:	mov    ebx,0x8a8b
  40a964:	xor    di,bx
  40a967:	mov    ebx,0x4e74
  40a96c:	cmp    di,bx
  40a96f:	je     0x40a985
  40a975:	mov    edi,DWORD PTR [ebp-0x10]
  40a978:	xor    edi,ecx
  40a97a:	mov    ebx,esi
  40a97c:	sub    ebx,edi
  40a97e:	add    eax,ebx
  40a980:	jmp    0x40a930
  40a985:	mov    esi,DWORD PTR [ebp-0x14]
  40a988:	mov    esi,DWORD PTR [esi]
  40a98a:	mov    edi,DWORD PTR [eax+0x3c]
  40a98d:	lea    esi,[edi+esi*8+0x78]
  40a991:	mov    esi,DWORD PTR [esi+eax*1]
  40a994:	mov    DWORD PTR [ebp-0x8],esi
  40a997:	mov    esi,DWORD PTR [ebp+0x8]
  40a99a:	xor    esi,ecx
  40a99c:	add    esi,edx
  40a99e:	mov    DWORD PTR [ebp-0x14],esi
  40a9a1:	mov    esi,DWORD PTR [ebp+0x8]
  40a9a4:	mov    edi,DWORD PTR [ebp-0x8]
  40a9a7:	xor    esi,ecx
  40a9a9:	add    esi,edx
  40a9ab:	pop    ebx
  40a9ac:	cmp    edi,esi
  40a9ae:	jne    0x40a9cc
  40a9b4:	mov    eax,DWORD PTR [ebp+0xc]
  40a9b7:	xor    eax,ecx
  40a9b9:	mov    ecx,DWORD PTR [ebp-0x8]
  40a9bc:	add    eax,edx
  40a9be:	imul   eax,ecx
  40a9c1:	mov    DWORD PTR [ebp-0x8],eax
  40a9c4:	push   DWORD PTR [ebp+0x18]
  40a9c7:	jmp    0x40aa20
  40a9cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a9cf:	add    ecx,eax
  40a9d1:	mov    DWORD PTR [ebp-0x14],ecx
  40a9d4:	mov    ecx,DWORD PTR [ebp-0x14]
  40a9d7:	mov    ecx,DWORD PTR [ecx+0xc]
  40a9da:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a9df:	mov    edx,0x3b4e
  40a9e4:	sub    cx,dx
  40a9e7:	mov    edx,0x8a8b
  40a9ec:	xor    cx,dx
  40a9ef:	mov    edx,0x4e76
  40a9f4:	cmp    cx,dx
  40a9f7:	jne    0x40a9c4
  40a9fd:	mov    ecx,DWORD PTR ds:0x42e435
  40aa03:	mov    ecx,DWORD PTR [ecx+0x198]
  40aa09:	mov    DWORD PTR [ecx],eax
  40aa0b:	jmp    0x40aa31
  40aa10:	mov    ecx,DWORD PTR [ebp+0x18]
  40aa13:	cmp    ecx,0xf89c85b4
  40aa19:	jne    0x40aa31
  40aa1f:	push   eax
  40aa20:	push   DWORD PTR [ebp+0x14]
  40aa23:	push   DWORD PTR [ebp+0x10]
  40aa26:	push   DWORD PTR [ebp+0xc]
  40aa29:	push   DWORD PTR [ebp+0x8]
  40aa2c:	call   0x40816b
  40aa31:	pop    edi
  40aa32:	pop    esi
  40aa33:	leave  
  40aa34:	ret    0x14
  40aa37:	push   ebp
  40aa38:	mov    ebp,esp
  40aa3a:	push   ecx
  40aa3b:	xor    DWORD PTR ds:0x42b01c,edi
  40aa41:	push   ecx
  40aa42:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40aa49:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  40aa50:	and    DWORD PTR ds:0x429014,0x0
  40aa5a:	jmp    0x40aa6c
  40aa5f:	mov    ecx,DWORD PTR ds:0x429014
  40aa65:	inc    ecx
  40aa66:	mov    DWORD PTR ds:0x429014,ecx
  40aa6c:	cmp    DWORD PTR ds:0x429014,0x11
  40aa73:	jae    0x40aa9e
  40aa79:	cmp    DWORD PTR ds:0x429014,0x15
  40aa80:	jne    0x40aa94
  40aa86:	push   0x42c004
  40aa8b:	push   DWORD PTR [ebp-0x1c]
  40aa8e:	call   DWORD PTR ds:0x42ed65
  40aa94:	jmp    0x40aa5f
  40aa99:	xor    eax,0x3b7b
  40aa9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aaa1:	push   esi
  40aaa2:	sub    DWORD PTR ds:0x429020,0x421f
  40aaac:	mov    esi,DWORD PTR [ebp-0x8]
  40aaaf:	mov    edx,0x7510897
  40aab4:	and    DWORD PTR ds:0x42d00c,0x0
  40aabe:	mov    ecx,DWORD PTR ds:0x42d00c
  40aac4:	inc    ecx
  40aac5:	mov    DWORD PTR ds:0x42d00c,ecx
  40aacb:	cmp    DWORD PTR ds:0x42d00c,0x21
  40aad2:	jne    0x40aaf8
  40aad8:	push   0x2769
  40aadd:	push   0x42b014
  40aae2:	push   0x77ff
  40aae7:	push   0x42e074
  40aaec:	push   DWORD PTR [ebp-0x1c]
  40aaef:	push   DWORD PTR [ebp-0x14]
  40aaf2:	call   DWORD PTR ds:0x42ed6d
  40aaf8:	cmp    DWORD PTR ds:0x42d00c,0x11
  40aaff:	jb     0x40aabe
  40ab05:	xor    eax,edx
  40ab07:	neg    DWORD PTR ds:0x42c018
  40ab0d:	xor    esi,edx
  40ab0f:	mov    ecx,0x3272de
  40ab14:	add    esi,ecx
  40ab16:	add    eax,ecx
  40ab18:	imul   eax,esi
  40ab1b:	mov    esi,DWORD PTR [ebp+0xc]
  40ab1e:	mov    DWORD PTR ds:0x429008,0x69f6
  40ab28:	cmp    esi,eax
  40ab2a:	jne    0x40ab46
  40ab30:	mov    eax,DWORD PTR [ebp-0x4]
  40ab33:	mov    esi,DWORD PTR [ebp-0x8]
  40ab36:	xor    eax,edx
  40ab38:	xor    esi,edx
  40ab3a:	add    eax,ecx
  40ab3c:	add    esi,ecx
  40ab3e:	imul   eax,esi
  40ab41:	jmp    0x40ab81
  40ab46:	mov    eax,DWORD PTR [ebp+0xc]
  40ab49:	mov    eax,DWORD PTR [eax+0x78]
  40ab4c:	mov    DWORD PTR [ebp+0xc],eax
  40ab4f:	mov    eax,DWORD PTR [ebp-0x4]
  40ab52:	mov    esi,DWORD PTR [ebp-0x8]
  40ab55:	xor    eax,edx
  40ab57:	xor    esi,edx
  40ab59:	add    eax,ecx
  40ab5b:	add    esi,ecx
  40ab5d:	imul   eax,esi
  40ab60:	mov    esi,DWORD PTR [ebp+0xc]
  40ab63:	cmp    esi,eax
  40ab65:	mov    eax,DWORD PTR [ebp-0x4]
  40ab68:	je     0x40ab33
  40ab6e:	xor    eax,edx
  40ab70:	add    eax,ecx
  40ab72:	mov    ecx,DWORD PTR [ebp+0xc]
  40ab75:	imul   eax,ecx
  40ab78:	add    eax,DWORD PTR [ebp+0x8]
  40ab7b:	mov    DWORD PTR [ebp+0xc],eax
  40ab7e:	mov    eax,DWORD PTR [ebp+0xc]
  40ab81:	pop    esi
  40ab82:	leave  
  40ab83:	ret    0x8
  40ab86:	push   ebp
  40ab87:	mov    ebp,esp
  40ab89:	push   ecx
  40ab8a:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40ab91:	and    DWORD PTR ds:0x42b014,0x0
  40ab9b:	jmp    0x40abae
  40aba0:	xor    eax,eax
  40aba2:	or     eax,DWORD PTR ds:0x42b014
  40aba8:	inc    eax
  40aba9:	mov    ds:0x42b014,eax
  40abae:	cmp    DWORD PTR ds:0x42b014,0x19
  40abb5:	jae    0x40ac2d
  40abbb:	cmp    DWORD PTR ds:0x42b014,0x7
  40abc2:	jne    0x40abce
  40abc8:	call   DWORD PTR ds:0x42ed71
  40abce:	cmp    DWORD PTR ds:0x42b014,0x6
  40abd5:	jne    0x40abe6
  40abdb:	mov    eax,ds:0x42b014
  40abe0:	inc    eax
  40abe1:	mov    ds:0x42b014,eax
  40abe6:	jmp    0x40aba0
  40abeb:	and    DWORD PTR ds:0x42900c,0x0
  40abf5:	mov    edx,DWORD PTR ds:0x42900c
  40abfb:	inc    edx
  40abfc:	mov    DWORD PTR ds:0x42900c,edx
  40ac02:	cmp    DWORD PTR ds:0x42900c,0x1f
  40ac09:	jne    0x40ac1a
  40ac0f:	push   0x42c00c
  40ac14:	call   DWORD PTR ds:0x42ed75
  40ac1a:	cmp    DWORD PTR ds:0x42900c,0x1c
  40ac21:	jb     0x40abf5
  40ac27:	sub    DWORD PTR ds:0x42d010,edx
  40ac2d:	mov    eax,DWORD PTR [ebp-0x4]
  40ac30:	mov    edx,DWORD PTR [ebp+0x10]
  40ac33:	mov    ecx,0x7510897
  40ac38:	xor    eax,ecx
  40ac3a:	add    eax,0x3272de
  40ac3f:	mov    DWORD PTR [edx],eax
  40ac41:	mov    eax,DWORD PTR [ebp+0xc]
  40ac44:	xor    eax,ecx
  40ac46:	push   esi
  40ac47:	mov    esi,DWORD PTR [ebp+0x10]
  40ac4a:	mov    edx,0x3272de
  40ac4f:	add    eax,edx
  40ac51:	mov    DWORD PTR [esi+0x4],eax
  40ac54:	mov    eax,DWORD PTR [ebp+0x14]
  40ac57:	mov    esi,DWORD PTR [ebp+0x10]
  40ac5a:	mov    DWORD PTR [esi+0x8],eax
  40ac5d:	mov    eax,DWORD PTR [ebp+0x18]
  40ac60:	mov    esi,DWORD PTR [ebp+0x10]
  40ac63:	mov    DWORD PTR [esi+0xc],eax
  40ac66:	mov    eax,DWORD PTR [ebp+0x1c]
  40ac69:	mov    esi,DWORD PTR [ebp+0x10]
  40ac6c:	mov    DWORD PTR [esi+0x10],eax
  40ac6f:	mov    eax,DWORD PTR [ebp+0x8]
  40ac72:	xor    eax,ecx
  40ac74:	add    eax,edx
  40ac76:	pop    esi
  40ac77:	leave  
  40ac78:	ret    0x18
  40ac7b:	push   ebp
  40ac7c:	mov    ebp,esp
  40ac7e:	sub    esp,0xa4
  40ac84:	mov    ecx,DWORD PTR [ebp+0x8]
  40ac87:	inc    eax
  40ac88:	mov    eax,0x8a8b
  40ac8d:	xor    ax,WORD PTR [ecx+0x20]
  40ac91:	mov    ecx,0x3b4e
  40ac96:	and    DWORD PTR ds:0x42901c,0xd95
  40aca0:	add    ax,cx
  40aca3:	xor    ecx,ecx
  40aca5:	or     ecx,DWORD PTR ds:0x42d01c
  40acab:	adc    DWORD PTR ds:0x42901c,ecx
  40acb1:	movzx  eax,ax
  40acb4:	mov    DWORD PTR [ebp-0x18],eax
  40acb7:	and    DWORD PTR ds:0x42a008,0x3531
  40acc1:	mov    BYTE PTR [ebp-0x1],0x79
  40acc5:	or     ecx,0x4f02
  40accb:	lea    eax,[ebp-0x1]
  40acce:	movzx  ecx,WORD PTR ds:0x42900c
  40acd5:	add    DWORD PTR ds:0x42b004,ecx
  40acdb:	mov    DWORD PTR [ebp-0x10],eax
  40acde:	and    DWORD PTR ds:0x42a010,0x0
  40ace8:	jmp    0x40acfa
  40aced:	mov    ecx,DWORD PTR ds:0x42a010
  40acf3:	inc    ecx
  40acf4:	mov    DWORD PTR ds:0x42a010,ecx
  40acfa:	cmp    DWORD PTR ds:0x42a010,0x16
  40ad01:	jae    0x40adb2
  40ad07:	cmp    DWORD PTR ds:0x42a010,0x25
  40ad0e:	jne    0x40ad20
  40ad14:	push   DWORD PTR [ebp-0x10]
  40ad17:	push   DWORD PTR [ebp-0x14]
  40ad1a:	call   DWORD PTR ds:0x42ed35
  40ad20:	jmp    0x40aced
  40ad25:	and    DWORD PTR ds:0x42b000,0x0
  40ad2f:	xor    ecx,ecx
  40ad31:	or     ecx,DWORD PTR ds:0x42b000
  40ad37:	inc    ecx
  40ad38:	mov    DWORD PTR ds:0x42b000,ecx
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x17
  40ad45:	jne    0x40ad5e
  40ad4b:	push   DWORD PTR [ebp-0x28]
  40ad4e:	push   0x429018
  40ad53:	push   0x2079
  40ad58:	call   DWORD PTR ds:0x42ed39
  40ad5e:	cmp    DWORD PTR ds:0x42b000,0x13
  40ad65:	jb     0x40ad2f
  40ad6b:	and    DWORD PTR ds:0x429000,0x0
  40ad75:	mov    ecx,DWORD PTR ds:0x429000
  40ad7b:	inc    ecx
  40ad7c:	mov    DWORD PTR ds:0x429000,ecx
  40ad82:	cmp    DWORD PTR ds:0x429000,0x26
  40ad89:	jne    0x40ad9f
  40ad8f:	push   0x42e06a
  40ad94:	push   0x42e11d
  40ad99:	call   DWORD PTR ds:0x42ed3d
  40ad9f:	cmp    DWORD PTR ds:0x429000,0x16
  40ada6:	jb     0x40ad75
  40adac:	or     DWORD PTR ds:0x42c01c,ebx
  40adb2:	mov    al,BYTE PTR [ebp-0x1]
  40adb5:	mov    ecx,DWORD PTR [ebp-0x10]
  40adb8:	adc    DWORD PTR ds:0x42b004,0x42c01c
  40adc2:	xor    al,0x72
  40adc4:	sub    al,0xa
  40adc6:	mov    DWORD PTR ds:0x42b018,0x196a
  40add0:	mov    BYTE PTR [ecx],al
  40add2:	xor    ecx,DWORD PTR ds:0x42d01c
  40add8:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40addf:	sub    eax,0x1bc
  40ade4:	push   ebx
  40ade5:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  40adec:	mov    ecx,DWORD PTR [ebp-0x14]
  40adef:	sub    eax,DWORD PTR ds:0x42d018
  40adf5:	push   esi
  40adf6:	mov    eax,0x7510897
  40adfb:	and    DWORD PTR ds:0x42b004,0x42d008
  40ae05:	xor    ecx,eax
  40ae07:	sbb    DWORD PTR ds:0x42c010,0x42c018
  40ae11:	mov    esi,0x3272de
  40ae16:	push   edi
  40ae17:	add    ecx,esi
  40ae19:	jmp    0x40ae3d
  40ae1e:	mov    dl,BYTE PTR [ebp-0x1]
  40ae21:	mov    DWORD PTR ds:0x429010,0xa66
  40ae2b:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40ae32:	mov    DWORD PTR ds:0x429020,0x7b55
  40ae3c:	inc    ecx
  40ae3d:	cmp    ecx,0x40
  40ae40:	jb     0x40ae1e
  40ae46:	mov    edx,DWORD PTR [ebp-0x14]
  40ae49:	adc    DWORD PTR ds:0x429008,0x429014
  40ae53:	xor    edx,eax
  40ae55:	mov    DWORD PTR ds:0x429028,0x35c1
  40ae5f:	add    edx,esi
  40ae61:	mov    DWORD PTR ds:0x42a000,0x76a6
  40ae6b:	jmp    0x40af3e
  40ae70:	mov    edi,DWORD PTR [ebp+0x8]
  40ae73:	mov    DWORD PTR ds:0x42a01c,0x1a
  40ae7d:	cmp    DWORD PTR ds:0x42a01c,0x0
  40ae84:	je     0x40aede
  40ae8a:	cmp    DWORD PTR ds:0x42a01c,0xc
  40ae91:	jne    0x40aeaa
  40ae97:	push   DWORD PTR [ebp-0x24]
  40ae9a:	push   0x67b8
  40ae9f:	push   0x110d
  40aea4:	call   DWORD PTR ds:0x42ed41
  40aeaa:	cmp    DWORD PTR ds:0x42a01c,0xd
  40aeb1:	jne    0x40aec6
  40aeb7:	xor    ecx,ecx
  40aeb9:	xor    ecx,DWORD PTR ds:0x42a01c
  40aebf:	dec    ecx
  40aec0:	mov    DWORD PTR ds:0x42a01c,ecx
  40aec6:	mov    ecx,DWORD PTR ds:0x42a01c
  40aecc:	dec    ecx
  40aecd:	mov    DWORD PTR ds:0x42a01c,ecx
  40aed3:	jmp    0x40ae7d
  40aed8:	xor    DWORD PTR ds:0x42d008,edx
  40aede:	mov    ecx,0x8a8b
  40aee3:	xor    DWORD PTR ds:0x429004,0x35f6
  40aeed:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40aef2:	mov    edi,0x3b4e
  40aef7:	add    cx,di
  40aefa:	add    DWORD PTR ds:0x42a018,0x42a008
  40af04:	movzx  ecx,cx
  40af07:	adc    DWORD PTR ds:0x42d000,0x42a018
  40af11:	mov    DWORD PTR [ebp-0x10],ecx
  40af14:	mov    ecx,DWORD PTR [ebp+0x8]
  40af17:	movzx  ecx,WORD PTR [ecx+edx*4]
  40af1b:	xor    ecx,0x8a8b
  40af21:	add    ecx,edi
  40af23:	mov    DWORD PTR ds:0x429018,0x7e83
  40af2d:	mov    edi,DWORD PTR [ebp-0x10]
  40af30:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40af37:	mov    DWORD PTR ds:0x42a014,ebx
  40af3d:	inc    edx
  40af3e:	mov    ecx,0x1044
  40af43:	mov    ecx,DWORD PTR [ebp-0x18]
  40af46:	cmp    edx,ecx
  40af48:	mov    DWORD PTR ds:0x42a018,0x1347
  40af52:	jne    0x40ae70
  40af58:	sbb    DWORD PTR ds:0x429008,ebx
  40af5e:	mov    ecx,DWORD PTR [ebp-0x14]
  40af61:	not    edx
  40af63:	mov    edx,DWORD PTR [ebp+0x10]
  40af66:	xor    ecx,eax
  40af68:	adc    DWORD PTR ds:0x42c01c,0x129
  40af72:	add    ecx,esi
  40af74:	or     DWORD PTR ds:0x429010,0x70a0
  40af7e:	mov    DWORD PTR [edx],ecx
  40af80:	and    DWORD PTR ds:0x429024,0x0
  40af8a:	xor    ecx,ecx
  40af8c:	add    ecx,DWORD PTR ds:0x429024
  40af92:	inc    ecx
  40af93:	mov    DWORD PTR ds:0x429024,ecx
  40af99:	cmp    DWORD PTR ds:0x429024,0x20
  40afa0:	jne    0x40afb7
  40afa6:	push   DWORD PTR [ebp-0x14]
  40afa9:	push   0x42a008
  40afae:	push   DWORD PTR [ebp-0x18]
  40afb1:	call   DWORD PTR ds:0x42ed45
  40afb7:	cmp    DWORD PTR ds:0x429024,0x13
  40afbe:	jb     0x40af8a
  40afc4:	add    DWORD PTR ds:0x429010,0xba4
  40afce:	mov    ecx,DWORD PTR [ebp-0x14]
  40afd1:	xor    ecx,eax
  40afd3:	add    ecx,esi
  40afd5:	mov    DWORD PTR [ebp-0x20],ecx
  40afd8:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40afdf:	mov    ecx,0x4eac
  40afe4:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40afeb:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40aff2:	mov    ecx,DWORD PTR [ebp-0xc]
  40aff5:	mov    DWORD PTR [ebp+0x8],ecx
  40aff8:	mov    DWORD PTR ds:0x42d008,0x744
  40b002:	jmp    0x40d54d
  40b007:	and    DWORD PTR ds:0x42a00c,0x64d1
  40b011:	mov    ecx,DWORD PTR [ebp+0x8]
  40b014:	jmp    0x40d3d6
  40b019:	add    BYTE PTR [ecx],al
  40b01b:	shl    BYTE PTR [ebx-0x74048c2f],1
  40b021:	mov    esi,0xf7c1dc7e
  40b026:	mov    al,ds:0x1caa6ed
  40b02b:	js     0x40b0a5
  40b02d:	fstp   QWORD PTR [edi+0x78]
  40b030:	js     0x40b091
  40b032:	iret   
  40b033:	inc    esi
  40b034:	test   BYTE PTR [edx-0x5a8117aa],ah
  40b03a:	or     eax,0x3d689179
  40b03f:	stc    
  40b040:	lods   al,BYTE PTR ds:[esi]
  40b041:	rcr    DWORD PTR [ebx+0x652e08a6],1
  40b047:	push   ss
  40b048:	sbb    BYTE PTR [edx-0x20c28c30],ch
  40b04e:	jnp    0x40b051
  40b050:	ror    bh,cl
  40b052:	aaa    
  40b053:	ret    
  40b054:	sub    ebp,DWORD PTR [edi+eax*2]
  40b057:	jle    0x40b0b6
  40b059:	mov    edi,0x8b5140b6
  40b05e:	mov    ecx,0x38b9e044
  40b063:	adc    al,0x2b
  40b065:	xor    bh,BYTE PTR [ebp-0x6cc5f5e2]
  40b06b:	das    
  40b06c:	adc    ah,dh
  40b06e:	aas    
  40b06f:	mov    dh,0x35
  40b071:	jbe    0x40b027
  40b073:	aam    0xee
  40b075:	add    ch,ch
  40b077:	pop    es
  40b078:	pop    esi
  40b079:	pop    esi
  40b07a:	push   eax
  40b07b:	les    ebp,FWORD PTR [ebx]
  40b07d:	mov    DWORD PTR [ebx],edx
  40b07f:	push   ebp
  40b080:	or     eax,0x5784f905
  40b085:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b087:	stos   BYTE PTR es:[edi],al
  40b088:	xor    dh,BYTE PTR [edx+esi*4]
  40b08b:	dec    eax
  40b08c:	pop    esp
  40b08d:	adc    DWORD PTR [esi-0x23cbfe46],0x4d
  40b094:	fistp  WORD PTR [bp+di]
  40b097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b098:	ret    0xb3cd
  40b09b:	stos   DWORD PTR es:[edi],eax
  40b09c:	das    
  40b09d:	bound  ebx,QWORD PTR [ecx]
  40b09f:	mov    DWORD PTR [edi+0xc2d9195],ebp
  40b0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a6:	or     ecx,ebx
  40b0a8:	push   eax
  40b0a9:	test   DWORD PTR [ecx-0x14],esi
  40b0ac:	jmp    0xfffd:0xbda6fbfb
  40b0b3:	out    dx,al
  40b0b4:	addr16 jo 0x40b099
  40b0b7:	mov    ebx,0x489b9ffe
  40b0bc:	add    esp,edx
  40b0be:	mov    ecx,ds
  40b0c0:	jge    0x40b0a6
  40b0c2:	out    0x73,eax
  40b0c4:	mov    ds:0x45a5fa2b,eax
  40b0c9:	and    edx,DWORD PTR [esi+0x3b]
  40b0cc:	mov    dh,0xea
  40b0ce:	fisubr WORD PTR [edi-0x73]
  40b0d1:	rcl    DWORD PTR [ecx-0x7082348e],1
  40b0d7:	sti    
  40b0d8:	xchg   DWORD PTR [edi-0x7ef39e25],eax
  40b0de:	(bad)  
  40b0e0:	xlat   BYTE PTR ds:[ebx]
  40b0e1:	es jo  0x40b0d1
  40b0e4:	(bad)  
  40b0e5:	fnstsw WORD PTR [edi+0x8c68d02]
  40b0eb:	add    eax,0xe7152e39
  40b0f0:	and    al,0x1f
  40b0f2:	pop    ss
  40b0f3:	xchg   edx,eax
  40b0f4:	push   ecx
  40b0f5:	ds push edx
  40b0f7:	push   esp
  40b0f8:	int    0xd9
  40b0fa:	scas   eax,DWORD PTR es:[edi]
  40b0fb:	or     ch,dh
  40b0fd:	xchg   ebp,eax
  40b0fe:	and    dl,BYTE PTR [edx]
  40b100:	inc    edx
  40b101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b102:	mov    esp,0xc4a0084
  40b107:	or     al,0xd1
  40b109:	jbe    0x40b123
  40b10b:	xor    cl,dl
  40b10d:	xor    eax,0x304436dc
  40b112:	inc    eax
  40b113:	clc    
  40b114:	(bad)  
  40b115:	jg     0x40b18c
  40b117:	jecxz  0x40b12a
  40b119:	fadd   st(5),st
  40b11b:	ret    0x3f24
  40b11e:	cmp    BYTE PTR [ebx],ah
  40b120:	xchg   esi,eax
  40b121:	push   edx
  40b122:	or     BYTE PTR [edi-0x316ce169],ch
  40b128:	xor    DWORD PTR [ebx-0x3c],0x18
  40b12c:	push   cs
  40b12d:	adc    BYTE PTR [ebp-0x7311d7e8],dl
  40b133:	fnstcw WORD PTR [ebp-0x37f5c428]
  40b139:	mov    cl,0xde
  40b13c:	mov    ebp,esp
  40b13e:	push   ss
  40b13f:	fiadd  DWORD PTR [ebp-0x20841327]
  40b145:	push   edx
  40b146:	jmp    0x5be8884a
  40b14b:	push   0x79
  40b14d:	cmp    bl,BYTE PTR [ecx+0x3d7f4267]
  40b153:	xor    dl,BYTE PTR [ecx-0x35]
  40b156:	ins    BYTE PTR es:[edi],dx
  40b157:	(bad)  
  40b158:	popf   
  40b159:	out    0x54,eax
  40b15b:	or     DWORD PTR [edi],ecx
  40b15d:	es and ebp,eax
  40b160:	stos   DWORD PTR es:[edi],eax
  40b161:	outs   dx,DWORD PTR ds:[esi]
  40b162:	jecxz  0x40b178
  40b164:	sbb    cl,dh
  40b166:	cs inc ebx
  40b168:	jg     0x40b111
  40b16a:	test   BYTE PTR [ebx],bl
  40b16c:	stos   BYTE PTR es:[edi],al
  40b16d:	and    al,0xaa
  40b16f:	stos   BYTE PTR es:[edi],al
  40b170:	sub    eax,0x884fc06b
  40b175:	pop    ss
  40b176:	dec    ecx
  40b177:	dec    edx
  40b178:	dec    esi
  40b179:	aas    
  40b17a:	rcl    DWORD PTR [eax-0x6511792d],cl
  40b180:	jmp    0x40b145
  40b182:	ins    DWORD PTR es:[edi],dx
  40b183:	jecxz  0x40b15f
  40b185:	in     al,0x73
  40b187:	clc    
  40b188:	mov    BYTE PTR [edi+0x79],dl
  40b18b:	not    BYTE PTR [edx+0x6a]
  40b18e:	and    DWORD PTR [edi-0x4a1c79de],edi
  40b194:	mov    esi,0x9cb0dd61
  40b199:	push   edi
  40b19a:	js     0x40b165
  40b19c:	cdq    
  40b19d:	daa    
  40b19e:	dec    ebx
  40b19f:	or     eax,0xc86a966d
  40b1a4:	push   ds
  40b1a5:	add    ebp,ebp
  40b1a7:	(bad)  
  40b1a8:	popf   
  40b1a9:	lods   eax,DWORD PTR ds:[esi]
  40b1aa:	pop    ebp
  40b1ab:	and    DWORD PTR [esi-0x44c634ce],ebx
  40b1b1:	gs (bad) 
  40b1b3:	sub    DWORD PTR [eax-0x7f],edi
  40b1b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1b7:	call   DWORD PTR [edi]
  40b1b9:	lods   al,BYTE PTR ds:[esi]
  40b1ba:	mov    edx,0x578fc121
  40b1bf:	cmc    
  40b1c0:	test   al,0x88
  40b1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1c3:	mov    eax,ds:0x1e024480
  40b1c8:	pop    edx
  40b1c9:	stos   DWORD PTR es:[edi],eax
  40b1ca:	retf   0x8693
  40b1cd:	adc    DWORD PTR [esi+ebp*2-0x14],0xffffff97
  40b1d2:	jbe    0x40b216
  40b1d4:	stos   BYTE PTR es:[edi],al
  40b1d5:	jl     0x40b18f
  40b1d7:	inc    esp
  40b1d8:	(bad)  
  40b1d9:	jmp    0xa175e237
  40b1de:	jmp    0x5ed9c801
  40b1e3:	cmp    eax,0xb1523503
  40b1e8:	sbb    eax,0x1969376d
  40b1ed:	mov    esi,0xeab40cbf
  40b1f2:	sub    al,0x0
  40b1f4:	jl     0x40b19d
  40b1f6:	ror    edi,0x23
  40b1f9:	(bad)  
  40b1fa:	jl     0x40b279
  40b1fc:	mov    ebx,0xc319f3c2
  40b201:	add    esp,DWORD PTR [ecx+ebp*8+0x7e37a7bb]
  40b208:	or     BYTE PTR [eax+0x43bb27d2],0x8c
  40b20f:	pop    ss
  40b210:	push   esp
  40b211:	adc    eax,0x5edaedb5
  40b216:	gs test eax,0xb598dde4
  40b21c:	fwait
  40b21d:	loope  0x40b1bf
  40b21f:	inc    ebx
  40b220:	ins    DWORD PTR es:[edi],dx
  40b221:	and    eax,edx
  40b223:	push   esp
  40b224:	(bad)
  40b227:	xchg   ecx,eax
  40b228:	fnsave [eax-0x3b]
  40b22b:	int3   
  40b22c:	call   0x95961277
  40b231:	jne    0x40b219
  40b233:	fistp  DWORD PTR [edi-0x24]
  40b236:	ja     0x40b20d
  40b238:	test   ebx,esp
  40b23a:	imul   edi,DWORD PTR [esi+ecx*2],0x2c9d94d6
  40b241:	fld    DWORD PTR [ebp+0x3507084]
  40b247:	and    al,dl
  40b249:	pop    ds
  40b24a:	cs es jg 0x40b269
  40b24e:	adc    DWORD PTR [ecx+esi*2],esi
  40b251:	dec    esi
  40b252:	test   BYTE PTR [ecx+eax*8-0x3d],bl
  40b256:	inc    edx
  40b257:	sar    DWORD PTR [esi+edi*4+0x439aae9a],cl
  40b25e:	sub    al,0xf1
  40b260:	out    0xd7,al
  40b262:	or     BYTE PTR [eax-0x329cd674],ch
  40b268:	dec    eax
  40b269:	leave  
  40b26a:	dec    esp
  40b26b:	es popf 
  40b26d:	and    al,0xee
  40b26f:	jne    0x40b1f5
  40b271:	pusha  
  40b272:	dec    ebx
  40b273:	xor    edx,ecx
  40b275:	push   ecx
  40b276:	lahf   
  40b277:	idiv   ecx
  40b279:	or     edx,DWORD PTR [edx-0x73903a2b]
  40b27f:	push   ss
  40b280:	repz mov ds,WORD PTR [eax-0x40]
  40b284:	fwait
  40b285:	mov    eax,0xe2c8ce62
  40b28a:	das    
  40b28b:	xchg   edi,eax
  40b28c:	mov    ecx,0xf66700c2
  40b291:	icebp  
  40b292:	pop    edx
  40b293:	dec    eax
  40b294:	xor    BYTE PTR [edi+0x53b25afd],dl
  40b29a:	(bad)  
  40b29b:	lock pop ss
  40b29d:	mov    bh,0x71
  40b29f:	xor    eax,0x43b48f7a
  40b2a4:	cmp    al,0xf6
  40b2a6:	in     eax,dx
  40b2a7:	addr16 das 
  40b2a9:	test   dh,cl
  40b2ab:	xchg   ebp,eax
  40b2ac:	mov    BYTE PTR [ecx+eax*4+0x31bdaffe],bh
  40b2b3:	sub    ah,BYTE PTR [ebx-0x5cafd211]
  40b2b9:	fdiv   DWORD PTR [eax-0x6a7fa070]
  40b2bf:	repnz lods eax,DWORD PTR ds:[esi]
  40b2c1:	dec    edx
  40b2c2:	mov    esi,0x77de0b64
  40b2c7:	sbb    BYTE PTR [edx+esi*1+0x2fd570f2],cl
  40b2ce:	add    cl,BYTE PTR [edx+esi*2+0x4b]
  40b2d2:	add    al,0x8
  40b2d4:	les    edx,FWORD PTR [edx]
  40b2d6:	das    
  40b2d7:	xor    ebx,DWORD PTR [ecx+0x7]
  40b2da:	lods   al,BYTE PTR ds:[esi]
  40b2db:	lds    ebx,FWORD PTR es:[ebp-0x25ae5e18]
  40b2e2:	mov    WORD PTR [ebx+esi*1],cs
  40b2e5:	pop    ss
  40b2e6:	pop    ebp
  40b2e7:	popa   
  40b2e8:	xchg   BYTE PTR ds:0xf4b03ba0,dh
  40b2ee:	test   BYTE PTR [ebx+0x2e],cl
  40b2f1:	ss out dx,al
  40b2f3:	cmp    dl,BYTE PTR [eax]
  40b2f5:	pop    eax
  40b2f6:	retf   0x8b0a
  40b2f9:	adc    BYTE PTR gs:[edx-0x366d30de],al
  40b300:	cdq    
  40b301:	sar    DWORD PTR [eax-0x7a4196f9],cl
  40b307:	jp     0x40b387
  40b309:	cli    
  40b30a:	imul   ebp,edi,0x41
  40b30d:	xchg   esi,eax
  40b30e:	iret   
  40b30f:	lea    ebx,[esp+ecx*8-0x7b66eb26]
  40b316:	clc    
  40b317:	mov    eax,ds:0x527d7975
  40b31c:	xor    eax,0xa191e7da
  40b321:	jge    0x40b302
  40b323:	xchg   esi,eax
  40b324:	mov    bh,0x97
  40b326:	mov    ch,BYTE PTR [edx-0x4d918fa2]
  40b32c:	pop    esp
  40b32d:	addr16 into 
  40b32f:	es (bad) 
  40b331:	push   0xffffffd6
  40b333:	cdq    
  40b334:	jge    0x40b394
  40b336:	popa   
  40b337:	mov    BYTE PTR [ebx+ebp*8],cl
  40b33a:	push   0x164fcef1
  40b33f:	push   esp
  40b340:	mov    eax,ds:0x8245a820
  40b345:	dec    ebx
  40b346:	add    DWORD PTR [edx],0xffffffeb
  40b349:	push   cs
  40b34a:	xor    BYTE PTR [edx-0x385980c8],dl
  40b350:	jmp    0xe327:0xecd6d580
  40b357:	outs   dx,BYTE PTR ds:[esi]
  40b358:	mov    bh,0xb1
  40b35a:	cdq    
  40b35b:	jns    0x40b306
  40b35d:	push   ecx
  40b35e:	inc    eax
  40b35f:	rcr    ebp,0x2
  40b362:	sub    edi,0xfffffff5
  40b365:	jmp    0x40b336
  40b367:	cld    
  40b368:	cdq    
  40b369:	aad    0xef
  40b36b:	or     BYTE PTR [eax+0x2f],dl
  40b36e:	(bad)  
  40b36f:	mov    ds:0x16bafbdc,eax
  40b374:	pop    eax
  40b375:	and    al,0xa
  40b377:	outs   dx,DWORD PTR ds:[esi]
  40b378:	push   edi
  40b379:	std    
  40b37a:	mov    esi,0xf1559638
  40b37f:	aam    0x37
  40b381:	jnp    0x40b303
  40b383:	add    BYTE PTR [ebx+0x2],ah
  40b386:	(bad)  
  40b387:	cdq    
  40b388:	pop    eax
  40b389:	ins    BYTE PTR es:[edi],dx
  40b38a:	daa    
  40b38b:	add    al,0xf6
  40b38d:	mov    al,0x32
  40b38f:	push   esp
  40b390:	pop    ebp
  40b391:	jnp    0x40b404
  40b393:	mov    ah,0x20
  40b395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b396:	mov    BYTE PTR [ebx],al
  40b398:	mov    ch,0x28
  40b39a:	aaa    
  40b39b:	fisttp DWORD PTR [edx+0x74]
  40b39e:	test   al,0xc7
  40b3a0:	sub    DWORD PTR [ebx],ebp
  40b3a2:	int    0xf2
  40b3a4:	pop    edx
  40b3a5:	add    BYTE PTR ss:[ebp-0x24771b1e],dl
  40b3ac:	fist   WORD PTR [ebp-0x2e]
  40b3af:	lahf   
  40b3b0:	neg    bl
  40b3b2:	aaa    
  40b3b3:	test   BYTE PTR [ebp+0x0],bh
  40b3b6:	aaa    
  40b3b7:	ds push cs
  40b3b9:	enter  0xc545,0x37
  40b3bd:	ins    DWORD PTR es:[edi],dx
  40b3be:	xchg   ebx,eax
  40b3bf:	repz inc ebp
  40b3c1:	push   ebx
  40b3c2:	adc    DWORD PTR [ebp-0x6d],ebx
  40b3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c6:	call   0x67e0:0x7590969e
  40b3cd:	xor    al,0xa4
  40b3cf:	jle    0x40b392
  40b3d1:	jmp    0x40b3af
  40b3d3:	dec    ebx
  40b3d4:	inc    esi
  40b3d5:	pusha  
  40b3d6:	shr    esp,cl
  40b3d8:	cmp    al,0xda
  40b3da:	aaa    
  40b3db:	(bad)  
  40b3dd:	pop    esi
  40b3de:	or     eax,0x8ee49ac7
  40b3e3:	cs inc ecx
  40b3e5:	in     al,dx
  40b3e6:	fimul  DWORD PTR [edi+0x7fa1cd08]
  40b3ec:	test   al,0x9a
  40b3ee:	fwait
  40b3ef:	push   ecx
  40b3f0:	stos   BYTE PTR es:[edi],al
  40b3f1:	fisttp WORD PTR [edi+0x46]
  40b3f4:	xchg   BYTE PTR cs:[eax-0x36],ah
  40b3f8:	jno    0x40b43c
  40b3fa:	mul    BYTE PTR [edx+0x68]
  40b3fd:	ror    DWORD PTR [ebp-0x62],1
  40b400:	daa    
  40b401:	fcmove st,st(2)
  40b403:	int    0xa3
  40b405:	jns    0x40b3c5
  40b407:	(bad)  
  40b409:	lahf   
  40b40a:	pop    ecx
  40b40b:	mov    bh,0x7a
  40b40d:	test   BYTE PTR [ecx],0xca
  40b410:	add    eax,0x49b0882c
  40b415:	outs   dx,BYTE PTR ds:[esi]
  40b416:	inc    ebx
  40b417:	adc    DWORD PTR [ecx+0x11ccefa6],eax
  40b41d:	jno    0x40b46d
  40b41f:	fsubr  QWORD PTR [ecx]
  40b421:	fidivr DWORD PTR [eax+edi*1+0x1e9ce9a0]
  40b428:	add    eax,0xad4f69c9
  40b42d:	jecxz  0x40b42d
  40b42f:	(bad)  
  40b430:	adc    eax,0x32df0aba
  40b435:	xor    al,0x1
  40b437:	xor    BYTE PTR [esi-0xd],bl
  40b43a:	das    
  40b43b:	cli    
  40b43c:	sub    eax,0x4328743f
  40b441:	(bad)  
  40b442:	test   eax,0x62fd4082
  40b447:	inc    ebp
  40b448:	je     0x40b4b3
  40b44a:	jp     0x40b42a
  40b44c:	sub    BYTE PTR [edx-0x31],cl
  40b44f:	test   ah,bh
  40b451:	fcom   st(2)
  40b453:	xlat   BYTE PTR ds:[ebx]
  40b454:	add    eax,0xb86f001c
  40b459:	out    dx,al
  40b45a:	or     cl,BYTE PTR [ebp-0x14]
  40b45d:	add    al,0x99
  40b45f:	repnz leave 
  40b461:	sub    DWORD PTR [esi-0x5b],ecx
  40b464:	cmp    BYTE PTR [eax],0x6a
  40b467:	fld    TBYTE PTR [ebp+eax*4-0x45]
  40b46b:	pop    ss
  40b46c:	pop    ss
  40b46d:	loopne 0x40b48f
  40b46f:	fucomip st,st(5)
  40b471:	fst    st(0)
  40b473:	push   0x40
  40b475:	xchg   esp,eax
  40b476:	adc    al,0xab
  40b478:	jns    0x40b4aa
  40b47a:	mov    edi,0x9da1559a
  40b47f:	pushf  
  40b480:	jge    0x40b4ec
  40b482:	sbb    bl,BYTE PTR [edi]
  40b484:	mov    BYTE PTR [edx],bl
  40b486:	test   eax,0x2dc79397
  40b48b:	rcl    BYTE PTR [ebx-0x2bd31226],cl
  40b491:	(bad)  
  40b492:	in     al,dx
  40b493:	fild   WORD PTR [eax-0x67]
  40b496:	inc    edx
  40b497:	in     eax,0x57
  40b499:	xor    ch,ah
  40b49b:	pop    ebp
  40b49c:	mov    BYTE PTR [ebx-0x75],bl
  40b49f:	sti    
  40b4a0:	lods   eax,DWORD PTR ds:[esi]
  40b4a1:	mov    esi,0x396d66ad
  40b4a6:	out    0xf8,al
  40b4a8:	fwait
  40b4a9:	mov    edx,0x51d1116
  40b4ae:	add    ah,BYTE PTR [ebp+0x773bd170]
  40b4b4:	and    eax,0xe2f5e95
  40b4b9:	ss out 0xe5,eax
  40b4bc:	jbe    0x40b474
  40b4be:	xchg   esi,eax
  40b4bf:	push   DWORD PTR [ebx]
  40b4c1:	mov    cs,WORD PTR [edx+0x262b2273]
  40b4c7:	imul   BYTE PTR [ebx+0x689dc128]
  40b4cd:	jo     0x40b4dc
  40b4cf:	inc    edi
  40b4d0:	lea    ebx,[ecx+0x73]
  40b4d3:	xor    al,0xd8
  40b4d5:	in     al,0xb1
  40b4d7:	jns    0x40b54c
  40b4d9:	les    eax,FWORD PTR [esi+0x4ecb9ea]
  40b4df:	(bad)  
  40b4e0:	and    BYTE PTR [eax-0x7df48014],ah
  40b4e6:	shl    BYTE PTR [eax-0x7af0fbf],0x6d
  40b4ed:	adc    DWORD PTR [ebx+eiz*4+0x21c211a5],eax
  40b4f4:	fiadd  WORD PTR [esp+edi*4-0x50]
  40b4f8:	inc    esi
  40b4f9:	ds inc ebp
  40b4fb:	out    dx,eax
  40b4fc:	push   ds
  40b4fd:	cs xchg ebx,eax
  40b4ff:	repnz xor al,0x4e
  40b502:	ss sbb al,0x1f
  40b505:	les    edi,FWORD PTR [esi-0x50]
  40b508:	xchg   edi,eax
  40b509:	add    ecx,edx
  40b50b:	ins    DWORD PTR es:[edi],dx
  40b50c:	int    0x81
  40b50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b50f:	push   DWORD PTR [eax+eiz*4-0x31]
  40b513:	sbb    al,0xa7
  40b515:	sub    dh,al
  40b517:	dec    eax
  40b518:	out    0xa4,eax
  40b51a:	hlt    
  40b51b:	fist   DWORD PTR [edi]
  40b51d:	xor    esi,DWORD PTR [eax+0x24]
  40b520:	dec    esi
  40b521:	bound  edi,QWORD PTR [edx+0x28]
  40b524:	inc    ebx
  40b525:	or     DWORD PTR [ebp-0x70],0xfffffff7
  40b529:	sub    ah,BYTE PTR [ebx+esi*4]
  40b52c:	add    BYTE PTR [edi],al
  40b52e:	pop    esi
  40b52f:	jmp    0x7e34dec1
  40b534:	lahf   
  40b535:	or     eax,0x4cd1b07e
  40b53a:	das    
  40b53b:	mov    al,ds:0xbf79f6c1
  40b540:	mov    al,BYTE PTR [eax+edx*8+0x567b8410]
  40b547:	adc    ch,BYTE PTR [esi+0x15]
  40b54a:	push   es
  40b54b:	push   ds
  40b54c:	(bad)  
  40b54d:	(bad)  
  40b54e:	pop    edi
  40b54f:	jnp    0x40b52d
  40b551:	sbb    DWORD PTR [eax],0x41f15273
  40b557:	(bad)  
  40b558:	jns    0x40b550
  40b55a:	imul   edx,DWORD PTR [edx],0x5215f2c5
  40b560:	addr16 push edx
  40b562:	les    eax,FWORD PTR [esi+0x5e]
  40b565:	std    
  40b566:	mov    ecx,0xea1eea1b
  40b56b:	std    
  40b56c:	dec    ecx
  40b56d:	cmc    
  40b56e:	test   eax,0x1f4c814
  40b573:	mov    cl,0x64
  40b575:	mov    ecx,0xe38bf3bc
  40b57a:	inc    DWORD PTR [eax+0x1936bcba]
  40b580:	(bad)  
  40b581:	or     ebp,ebx
  40b583:	mov    bl,al
  40b585:	xor    BYTE PTR [edi+0x4e8c3478],al
  40b58b:	aam    0x30
  40b58d:	out    0x62,eax
  40b58f:	test   al,cl
  40b591:	mov    ds:0xbd3d23a9,eax
  40b596:	jge    0x40b5b8
  40b598:	sub    dl,bl
  40b59a:	jmp    0xfa272be3
  40b59f:	adc    al,0xa
  40b5a1:	nop
  40b5a2:	shl    DWORD PTR [eax-0x5caac7f0],0xe9
  40b5a9:	jmp    DWORD PTR [bx+0x1]
  40b5ad:	out    dx,eax
  40b5ae:	sub    BYTE PTR [edi+0x34],ah
  40b5b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5b2:	rol    BYTE PTR [ebp+ecx*1-0x5bc7a33e],cl
  40b5b9:	pushf  
  40b5ba:	mov    esp,0x74100e9d
  40b5bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5c0:	sbb    ch,bl
  40b5c2:	jno    0x40b546
  40b5c4:	jno    0x40b589
  40b5c6:	pop    eax
  40b5c7:	push   es
  40b5c8:	dec    ecx
  40b5c9:	in     al,dx
  40b5ca:	pop    ds
  40b5cb:	in     eax,0x15
  40b5cd:	shr    BYTE PTR [eax-0x78b062bf],1
  40b5d3:	(bad)  
  40b5d4:	xchg   esp,eax
  40b5d5:	jecxz  0x40b646
  40b5d7:	or     eax,0x1a0bd377
  40b5dc:	dec    ecx
  40b5dd:	jge    0x40b5cc
  40b5df:	xchg   esi,eax
  40b5e0:	dec    ebp
  40b5e1:	mov    edx,edx
  40b5e3:	jae    0x40b5ee
  40b5e5:	and    eax,0xa1a85910
  40b5ea:	adc    ah,BYTE PTR [eax-0x4b57da9c]
  40b5f0:	xchg   BYTE PTR [esi-0x77],dh
  40b5f3:	in     al,0xa6
  40b5f5:	dec    esi
  40b5f6:	fisttp DWORD PTR [esi*1-0x5b97c9ec]
  40b5fd:	mov    edi,0x432aa5c0
  40b602:	sti    
  40b603:	pop    ebx
  40b604:	pop    ds
  40b605:	js     0x40b5b6
  40b607:	lea    edx,[esi-0x59de1823]
  40b60d:	mov    esp,0x7ea7657c
  40b612:	push   es
  40b613:	add    al,0xca
  40b615:	pop    es
  40b616:	xlat   BYTE PTR ds:[ebx]
  40b617:	push   0xe0373325
  40b61c:	xchg   BYTE PTR [ebp+ecx*8+0x2e],ah
  40b620:	jmp    0x4534:0x2ae73e9b
  40b627:	mov    edx,0xa6ae1ae2
  40b62c:	pushf  
  40b62d:	and    eax,DWORD PTR [esi-0x3e]
  40b630:	inc    edx
  40b631:	adc    esi,DWORD PTR [edx-0xe]
  40b634:	lods   al,BYTE PTR ds:[esi]
  40b635:	das    
  40b636:	mov    WORD PTR [ecx],cs
  40b638:	dec    ecx
  40b639:	push   esi
  40b63a:	test   eax,0x67628d8e
  40b63f:	or     al,0x42
  40b641:	or     al,0x3e
  40b643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b644:	pop    edx
  40b645:	fsubr  DWORD PTR [esi-0x71]
  40b648:	test   eax,0x6309b9df
  40b64d:	jg     0x40b690
  40b64f:	sub    ebx,DWORD PTR [edx+edi*8+0xd4a3a7e]
  40b656:	xor    eax,0x4b3613cb
  40b65b:	pop    es
  40b65c:	xor    BYTE PTR [edi-0x5b],0x24
  40b660:	inc    ebx
  40b661:	dec    ecx
  40b662:	xor    esp,DWORD PTR [edi]
  40b664:	mov    ebx,0xa78118ef
  40b669:	fisub  WORD PTR [edx-0x785ae799]
  40b66f:	inc    edx
  40b670:	jecxz  0x40b61d
  40b672:	mov    edx,0x33bd1ce7
  40b677:	add    ebp,0x6f
  40b67a:	or     al,0xe5
  40b67c:	int    0xf
  40b67e:	fld    st(4)
  40b680:	imul   ecx,DWORD PTR [ebp+0x75787a92],0x3c
  40b687:	in     al,dx
  40b688:	push   ds
  40b689:	pop    ecx
  40b68a:	xchg   edx,eax
  40b68b:	dec    esp
  40b68c:	inc    ecx
  40b68d:	jle    0x40b65c
  40b68f:	adc    DWORD PTR [ebx+ecx*8+0x7a],edx
  40b693:	mov    esi,0x415eb902
  40b698:	retf   
  40b699:	jbe    0x40b64f
  40b69b:	call   FWORD PTR [ecx]
  40b69d:	rcl    DWORD PTR [eax+ecx*2],1
  40b6a0:	je     0x40b6c5
  40b6a2:	pop    edx
  40b6a3:	push   ds
  40b6a4:	ret    
  40b6a5:	bound  esi,QWORD PTR ds:0xab41b5c9
  40b6ab:	push   cs
  40b6ac:	push   esi
  40b6ad:	dec    ecx
  40b6ae:	test   bh,dh
  40b6b0:	xchg   ebp,eax
  40b6b1:	pop    ecx
  40b6b2:	jne    0x40b72f
  40b6b4:	sbb    ebx,DWORD PTR [ecx-0x1572d38a]
  40b6ba:	mov    eax,ds:0xf6ffb221
  40b6bf:	pop    ss
  40b6c0:	cwde   
  40b6c1:	(bad)
  40b6c4:	mov    al,ds:0xeba2cd5
  40b6c9:	fdivr  DWORD PTR [ebp+0x18]
  40b6cc:	push   ebx
  40b6cd:	mov    bl,cl
  40b6cf:	pop    ss
  40b6d0:	cs pop ss
  40b6d2:	lods   eax,DWORD PTR ds:[esi]
  40b6d3:	inc    edx
  40b6d4:	inc    ecx
  40b6d5:	jno    0x40b685
  40b6d7:	ret    0x29e4
  40b6da:	xchg   ebx,eax
  40b6db:	call   0xd61644d1
  40b6e0:	(bad)  
  40b6e1:	fisttp QWORD PTR [edi+0x6f]
  40b6e4:	popf   
  40b6e5:	repnz div DWORD PTR [edi]
  40b6e8:	ins    BYTE PTR es:[edi],dx
  40b6e9:	cmp    BYTE PTR [esi+0x1f],ah
  40b6ec:	out    0xc6,eax
  40b6ee:	mov    ah,0x43
  40b6f0:	sub    al,BYTE PTR [eax+ecx*2]
  40b6f3:	pop    esi
  40b6f4:	mov    ss,ebp
  40b6f6:	das    
  40b6f7:	imul   ecx,DWORD PTR [bp+di-0x2b6a],0xffffffda
  40b6fd:	mov    BYTE PTR ds:0x3dfbd723,ch
  40b703:	mov    ebx,0x17e880c3
  40b708:	stos   BYTE PTR es:[edi],al
  40b709:	(bad)  
  40b70a:	mov    cl,0xab
  40b70c:	or     DWORD PTR [esi-0x7ade4164],esi
  40b712:	adc    esi,0x8e8cb39a
  40b718:	mov    esi,0x6d9dfeb8
  40b71d:	adc    BYTE PTR [esi-0x79],dh
  40b720:	lock mov ch,0x79
  40b723:	push   0xdf9d0432
  40b728:	out    dx,eax
  40b729:	jnp    0x40b726
  40b72b:	les    esi,FWORD PTR [edx]
  40b72d:	dec    eax
  40b72e:	xlat   BYTE PTR ds:[ebx]
  40b72f:	shl    BYTE PTR [esi],1
  40b731:	sbb    bh,BYTE PTR es:[esi+edx*1+0x4a]
  40b736:	int    0x4b
  40b738:	sub    ch,BYTE PTR [ebx-0x32]
  40b73b:	(bad)  
  40b73c:	aam    0xe5
  40b73e:	mov    ecx,0xea13aa15
  40b743:	cmp    edx,ecx
  40b745:	in     al,dx
  40b746:	mov    ah,0x47
  40b748:	and    DWORD PTR [edi+0x7e],esi
  40b74b:	jg     0x40b71c
  40b74d:	sub    DWORD PTR ds:0x38678170,0xfffffffd
  40b754:	push   edi
  40b755:	mov    edi,0xe8004260
  40b75a:	(bad)  [esi-0x67]
  40b75d:	mov    esp,DWORD PTR [ebp-0x640797c4]
  40b763:	sbb    cl,BYTE PTR ds:0xbb6be945
  40b769:	int    0xed
  40b76b:	psrlw  mm1,QWORD PTR [edx-0x4a070ef8]
  40b772:	mov    ds,edi
  40b774:	and    al,0x62
  40b776:	int3   
  40b777:	jl     0x40b7d5
  40b779:	sbb    DWORD PTR [edi],esp
  40b77b:	jo     0x40b703
  40b77d:	push   es
  40b77e:	push   esp
  40b77f:	(bad)  
  40b780:	push   ss
  40b781:	scas   eax,DWORD PTR es:[edi]
  40b782:	dec    esi
  40b783:	cmp    eax,0x7a8e7a9a
  40b788:	cmc    
  40b789:	ret    0x1591
  40b78c:	not    BYTE PTR [esi-0x2e1f8eb7]
  40b792:	rol    DWORD PTR [esi+0x32],cl
  40b795:	js     0x40b7c8
  40b797:	push   es
  40b798:	push   ecx
  40b799:	inc    edi
  40b79a:	or     al,0x15
  40b79c:	inc    ebp
  40b79d:	jbe    0x40b737
  40b79f:	push   edi
  40b7a0:	adc    eax,0xd85c3fe
  40b7a5:	in     eax,dx
  40b7a6:	je     0x40b760
  40b7a8:	ins    BYTE PTR es:[edi],dx
  40b7a9:	push   ss
  40b7aa:	adc    al,0x5d
  40b7ac:	cmp    BYTE PTR [edx-0x7cd8ef04],dl
  40b7b2:	addr16 retf 
  40b7b4:	mov    ebx,0xe37a667f
  40b7b9:	cmp    al,0xa5
  40b7bb:	pop    esp
  40b7bc:	jle    0x40b812
  40b7be:	jo     0x40b79d
  40b7c0:	je     0x40b7f7
  40b7c2:	push   ecx
  40b7c3:	cwde   
  40b7c4:	outs   dx,DWORD PTR fs:[esi]
  40b7c6:	push   esp
  40b7c7:	enter  0x25dd,0xc0
  40b7cb:	rep lods eax,DWORD PTR ds:[esi]
  40b7cd:	popf   
  40b7ce:	xchg   esp,eax
  40b7cf:	pop    ds
  40b7d0:	int3   
  40b7d1:	aas    
  40b7d2:	push   ebx
  40b7d3:	sbb    bl,ah
  40b7d5:	push   esp
  40b7d6:	mov    dl,0x3e
  40b7d8:	jmp    0x82d63b52
  40b7dd:	mov    dh,0x5e
  40b7df:	dec    ecx
  40b7e0:	pause  
  40b7e2:	xchg   ebp,eax
  40b7e3:	loop   0x40b7dc
  40b7e5:	cs dec esp
  40b7e7:	sbb    BYTE PTR [edx-0x60601457],0xb4
  40b7ee:	mov    al,ds:0x396686f2
  40b7f3:	arpl   WORD PTR [eax+esi*1-0xc],si
  40b7f7:	jnp    0x40b781
  40b7f9:	push   0x73
  40b7fb:	xor    al,ch
  40b7fd:	pop    ebp
  40b7fe:	scas   al,BYTE PTR es:[edi]
  40b7ff:	mov    ?,WORD PTR [ebp+0x8]
  40b802:	fild   QWORD PTR [edi-0x3e6d29ae]
  40b808:	adc    al,0xf8
  40b80a:	pop    ecx
  40b80b:	sbb    dh,al
  40b80d:	add    esi,DWORD PTR es:[eax]
  40b810:	and    bl,BYTE PTR [edx+0x10]
  40b813:	std    
  40b814:	test   ch,ah
  40b816:	sub    dh,bl
  40b818:	mov    eax,0xb8a652f1
  40b81d:	mov    esi,0xf37a8c18
  40b822:	repz dec esi
  40b824:	jl     0x40b7b8
  40b826:	sub    ecx,DWORD PTR [eax*2-0x6be78ada]
  40b82d:	cmc    
  40b82e:	daa    
  40b82f:	imul   BYTE PTR [ecx-0x62]
  40b832:	xor    DWORD PTR [edx+0xe],0xffffff95
  40b836:	test   esi,ecx
  40b838:	inc    esi
  40b839:	ret    0x3f02
  40b83c:	inc    edx
  40b83d:	leave  
  40b83e:	loop   0x40b7f1
  40b840:	jmp    0x601b:0x7b04e3a
  40b847:	in     eax,0xab
  40b849:	in     al,0x43
  40b84b:	jl     0x40b834
  40b84d:	ror    DWORD PTR [edx],0x83
  40b850:	xchg   ecx,eax
  40b851:	add    bl,bh
  40b853:	test   eax,0x78d22c6e
  40b858:	mov    ds:0x41a712e3,eax
  40b85d:	shr    BYTE PTR [edx-0x400b351],0xa5
  40b864:	retf   0xc164
  40b867:	adc    eax,0xfa94c432
  40b86c:	mov    DWORD PTR [eax+0x4e438b19],edx
  40b872:	aaa    
  40b873:	out    0xe,al
  40b875:	in     al,dx
  40b876:	xor    bl,BYTE PTR [eax-0x26b107ed]
  40b87c:	inc    edi
  40b87d:	adc    al,0xf6
  40b87f:	adc    DWORD PTR [eax-0x1b],eax
  40b882:	cmp    ah,BYTE PTR [eax-0x60]
  40b885:	push   edi
  40b886:	jmp    0x3177ecf8
  40b88b:	cmp    al,0xa1
  40b88d:	ins    BYTE PTR es:[edi],dx
  40b88e:	cs add BYTE PTR gs:[ecx-0x66],dh
  40b893:	xchg   ecx,eax
  40b894:	aad    0x95
  40b896:	push   0x6219621e
  40b89b:	and    DWORD PTR [edi-0xe],esi
  40b89e:	jae    0x40b8af
  40b8a0:	and    DWORD PTR [ecx],ecx
  40b8a2:	pushf  
  40b8a3:	add    al,0x9
  40b8a5:	(bad)  
  40b8a6:	jp     0x40b8ff
  40b8a8:	adc    al,0x71
  40b8aa:	mov    esp,es
  40b8ac:	enter  0xa96e,0xc1
  40b8b0:	shl    DWORD PTR [edi*2-0x23943e32],0xc8
  40b8b8:	ins    BYTE PTR es:[edi],dx
  40b8b9:	mov    esp,DWORD PTR [ebp+0x5f4973d8]
  40b8bf:	mov    cl,0x88
  40b8c1:	icebp  
  40b8c2:	ins    BYTE PTR es:[edi],dx
  40b8c3:	adc    al,0x9
  40b8c5:	retf   0x645f
  40b8c8:	pop    ds
  40b8c9:	inc    ebp
  40b8ca:	mov    cl,0xa7
  40b8cc:	psubsb mm5,mm5
  40b8cf:	dec    ebp
  40b8d0:	mov    ds:0x83fcf751,al
  40b8d5:	mov    WORD PTR [ecx-0x2c45f9a1],es
  40b8db:	sub    ch,ah
  40b8dd:	ins    DWORD PTR es:[edi],dx
  40b8de:	push   esi
  40b8df:	cmp    BYTE PTR [esi],dl
  40b8e1:	das    
  40b8e2:	loope  0x40b8ea
  40b8e4:	xchg   edi,eax
  40b8e5:	inc    eax
  40b8e6:	or     BYTE PTR [esp+ebx*4],ch
  40b8e9:	xchg   BYTE PTR [eax-0x4a4e71b1],ch
  40b8ef:	cdq    
  40b8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f1:	out    dx,eax
  40b8f2:	jp     0x40b8a4
  40b8f4:	mov    edi,0xd4d6000f
  40b8f9:	cld    
  40b8fa:	mov    esp,0xdea0e521
  40b8ff:	mov    edx,0x996d9277
  40b904:	mov    WORD PTR [eax-0x66f913ab],?
  40b90a:	inc    ebx
  40b90b:	test   al,0x6f
  40b90d:	call   0x39ca2882
  40b912:	dec    ecx
  40b913:	pop    esi
  40b914:	or     ah,BYTE PTR [esi]
  40b916:	out    dx,al
  40b917:	push   0x54
  40b919:	mov    BYTE PTR [ebx-0x49],dl
  40b91c:	cwde   
  40b91d:	psubb  mm3,QWORD PTR [ebx+0x1b]
  40b921:	mov    esi,0x182b7d13
  40b926:	sub    DWORD PTR [ebx],0x43
  40b929:	add    al,0xd8
  40b92b:	cld    
  40b92c:	ins    BYTE PTR es:[edi],dx
  40b92d:	sbb    eax,0x91e08b1a
  40b932:	mov    ds:0xd0f6d1c6,al
  40b937:	sub    edx,DWORD PTR [esi+ebx*8-0x2e67e65a]
  40b93e:	call   0x42233e1f
  40b943:	mov    esi,0x9042c4d0
  40b948:	jnp    0x40b984
  40b94a:	pextrw eax,mm1,0x3d
  40b94e:	add    al,0xa0
  40b950:	mov    ebp,0x18cb588c
  40b955:	and    esi,DWORD PTR [ecx]
  40b957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b958:	or     BYTE PTR [edx],cl
  40b95a:	jnp    0x40b954
  40b95c:	(bad)
  40b95f:	sbb    DWORD PTR [ebx-0x25f537a3],ebp
  40b965:	repnz out dx,eax
  40b967:	in     eax,0x6f
  40b969:	xchg   edx,eax
  40b96a:	stc    
  40b96b:	arpl   WORD PTR [eax-0x28bdeab2],si
  40b971:	xchg   esp,eax
  40b972:	dec    eax
  40b973:	ffreep st(3)
  40b975:	rcr    DWORD PTR cs:0x68fa5198,1
  40b97c:	dec    edi
  40b97d:	dec    eax
  40b97e:	push   eax
  40b97f:	ret    0x3d0e
  40b982:	nop
  40b983:	imul   BYTE PTR [edx+0x55f15f58]
  40b989:	shl    BYTE PTR [edi+0x3fc678a6],1
  40b98f:	push   eax
  40b990:	iret   
  40b991:	(bad)  
  40b992:	push   eax
  40b993:	imul   esp,DWORD PTR ds:0xe84e74fd,0xffffffdb
  40b99a:	in     eax,0xbe
  40b99c:	leave  
  40b99d:	es jmp 0xdc18:0x15032f79
  40b9a5:	push   ebp
  40b9a6:	(bad)  
  40b9a7:	sub    DWORD PTR [ebx],ebx
  40b9a9:	fst    QWORD PTR [esi]
  40b9ab:	retf   0x126e
  40b9ae:	dec    esp
  40b9af:	shl    DWORD PTR [edx+0x6b],0xe9
  40b9b3:	pop    esi
  40b9b4:	ja     0x40b94d
  40b9b6:	inc    ebp
  40b9b7:	shl    ah,0x25
  40b9ba:	lods   eax,DWORD PTR ds:[esi]
  40b9bb:	pop    edx
  40b9bc:	xor    eax,0x37c264d8
  40b9c1:	loopne 0x40b9ee
  40b9c3:	pop    ebp
  40b9c4:	scas   al,BYTE PTR es:[edi]
  40b9c5:	pop    es
  40b9c6:	add    bl,BYTE PTR [ebp+0x1]
  40b9c9:	xchg   ebp,eax
  40b9ca:	sbb    DWORD PTR [ebp+ebx*8+0x29],ecx
  40b9ce:	call   0x8e79d858
  40b9d3:	sti    
  40b9d4:	jecxz  0x40b9ba
  40b9d6:	xchg   ebx,eax
  40b9d7:	scas   al,BYTE PTR es:[edi]
  40b9d8:	dec    eax
  40b9d9:	mov    ch,0x99
  40b9db:	dec    esi
  40b9dc:	nop
  40b9dd:	jne    0x40b9f5
  40b9df:	cmp    ah,ch
  40b9e1:	cmp    DWORD PTR [edi],edx
  40b9e3:	sbb    ebx,ebp
  40b9e5:	call   0xeaa2:0xfa872241
  40b9ec:	add    ebx,DWORD PTR [eax+0x7e]
  40b9ef:	int    0x25
  40b9f1:	lock or esp,DWORD PTR [esi+eax*1]
  40b9f5:	ret    
  40b9f6:	not    DWORD PTR [ebp-0x7f]
  40b9f9:	(bad)  
  40b9fa:	jbe    0x40ba55
  40b9fc:	add    esp,DWORD PTR [esi+0x18f14ee9]
  40ba02:	cld    
  40ba03:	loopne 0x40b9fc
  40ba05:	call   0xe309:0xab666430
  40ba0c:	test   esp,esp
  40ba0e:	mov    fs,WORD PTR [ebp+ebp*8+0x36]
  40ba12:	ret    
  40ba13:	fsubr  DWORD PTR [eax+edx*8]
  40ba16:	mov    al,0xd0
  40ba18:	arpl   WORD PTR [eax],bp
  40ba1a:	out    dx,eax
  40ba1b:	cli    
  40ba1c:	std    
  40ba1d:	cmp    eax,0x66ffbf86
  40ba22:	jle    0x40ba77
  40ba24:	mov    ah,0xe3
  40ba26:	fcom   QWORD PTR [edx-0x79347379]
  40ba2c:	xchg   ecx,eax
  40ba2d:	inc    esi
  40ba2e:	inc    edx
  40ba2f:	rcr    DWORD PTR [esi-0x7abb2087],1
  40ba35:	test   BYTE PTR [esi+esi*2-0x13d38360],dl
  40ba3c:	cmp    edx,edx
  40ba3e:	jnp    0x40ba2c
  40ba40:	aam    0xbc
  40ba42:	iret   
  40ba43:	sub    al,0x17
  40ba45:	pop    esp
  40ba46:	(bad)  
  40ba47:	push   esp
  40ba48:	push   eax
  40ba49:	sti    
  40ba4a:	dec    esp
  40ba4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba4c:	jmp    0x2c8b408b
  40ba51:	jge    0x40ba4c
  40ba53:	daa    
  40ba54:	jo     0x40ba39
  40ba56:	inc    ebp
  40ba57:	add    al,0x1
  40ba59:	and    BYTE PTR [ebp+0x6a8f5eb2],0x99
  40ba60:	mov    esp,0x54522562
  40ba65:	sub    eax,0xf015563d
  40ba6a:	imul   DWORD PTR [edi]
  40ba6c:	loop   0x40baab
  40ba6e:	push   esi
  40ba6f:	sub    dh,ah
  40ba71:	cmp    BYTE PTR [ebx-0x19],ah
  40ba74:	loopne 0x40ba49
  40ba76:	xchg   esi,eax
  40ba77:	mov    BYTE PTR [ecx],al
  40ba79:	mov    ebx,eax
  40ba7b:	retf   
  40ba7c:	cmp    eax,0xc054b8fd
  40ba81:	dec    edi
  40ba82:	ins    BYTE PTR es:[edi],dx
  40ba83:	ret    
  40ba84:	lea    edx,[eax+0x14d89e8d]
  40ba8a:	mov    dh,0x12
  40ba8c:	sbb    BYTE PTR [ecx-0x2750afe9],dl
  40ba92:	mov    al,ds:0xe22c10f0
  40ba97:	adc    DWORD PTR [ecx+0x51d16f12],edx
  40ba9d:	xchg   esi,eax
  40ba9e:	je     0x40ba5a
  40baa0:	cwde   
  40baa1:	sbb    esp,DWORD PTR ds:0x79411f9b
  40baa7:	fimul  WORD PTR [ebp+0x426d337c]
  40baad:	aad    0xb5
  40baaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab0:	repz or dl,ah
  40bab3:	add    al,0xe6
  40bab5:	call   0xc32b:0x6cbfa846
  40babc:	mov    al,cs:0x1949fb14
  40bac2:	ins    DWORD PTR es:[edi],dx
  40bac3:	adc    eax,0xc09780a1
  40bac8:	ret    0xf35a
  40bacb:	xor    BYTE PTR [ebp+edx*8+0x3c3755e5],ah
  40bad2:	cmp    DWORD PTR [esi-0x25],edx
  40bad5:	shl    DWORD PTR [edx+0x2],0x1f
  40bad9:	(bad)  
  40bada:	cmp    al,0x6d
  40badc:	ins    BYTE PTR es:[edi],dx
  40badd:	adc    cl,BYTE PTR [edx+0x43]
  40bae0:	adc    BYTE PTR [ebp+0x21c5de17],ch
  40bae6:	xor    BYTE PTR [ecx+0x64],dl
  40bae9:	rol    BYTE PTR [esi+0xb7e7cc8],cl
  40baef:	fwait
  40baf0:	lods   al,BYTE PTR ds:[esi]
  40baf1:	test   DWORD PTR [edx-0x1767e8e4],ecx
  40baf7:	cmc    
  40baf8:	and    al,BYTE PTR [ebp+0x9010832]
  40bafe:	sbb    eax,0x3bb229f8
  40bb03:	clc    
  40bb04:	or     ecx,0xffffffcf
  40bb07:	fldcw  WORD PTR [eax+0x5f]
  40bb0a:	test   DWORD PTR ds:0xfa836287,0x88df1e80
  40bb14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb15:	push   ss
  40bb16:	cdq    
  40bb17:	into   
  40bb18:	jle    0x40bb5b
  40bb1a:	inc    edi
  40bb1b:	mov    dl,0x44
  40bb1d:	test   eax,0xf00708e7
  40bb22:	mov    cl,0xa5
  40bb24:	jae    0x40bab8
  40bb26:	push   ebp
  40bb27:	in     al,0x2a
  40bb29:	out    dx,eax
  40bb2a:	mov    dh,0xd4
  40bb2c:	cmp    al,0x91
  40bb2e:	int    0xaa
  40bb30:	aas    
  40bb31:	lods   eax,DWORD PTR ds:[esi]
  40bb32:	sub    eax,0x5b0276df
  40bb37:	pushf  
  40bb38:	pusha  
  40bb39:	sub    al,ah
  40bb3b:	icebp  
  40bb3c:	test   DWORD PTR [edi+ebx*4-0x1b],esp
  40bb40:	xchg   ecx,eax
  40bb41:	call   0xdf7e:0xb1e465c
  40bb48:	retf   
  40bb49:	cmp    dl,BYTE PTR [edx+esi*4]
  40bb4c:	jnp    0x40bba0
  40bb4e:	pop    esi
  40bb4f:	sbb    dl,BYTE PTR [eax+0x41]
  40bb52:	cwde   
  40bb53:	das    
  40bb54:	sbb    al,0xc3
  40bb56:	jnp    0x40bb05
  40bb58:	shr    BYTE PTR [edx],cl
  40bb5a:	push   edx
  40bb5b:	aad    0xa2
  40bb5d:	lods   al,BYTE PTR ds:[esi]
  40bb5e:	pop    ss
  40bb5f:	sti    
  40bb60:	and    bl,BYTE PTR [ecx+0x2f1ce24e]
  40bb66:	(bad)  
  40bb67:	sub    al,0x9d
  40bb69:	loopne 0x40bbde
  40bb6b:	popa   
  40bb6c:	int3   
  40bb6d:	pusha  
  40bb6e:	mov    WORD PTR [ecx],ds
  40bb70:	adc    al,al
  40bb72:	mov    ah,0x4f
  40bb74:	lock pop ss
  40bb76:	test   ebp,edi
  40bb78:	xchg   ebx,eax
  40bb7a:	pop    edi
  40bb7b:	(bad)  
  40bb7c:	pop    ecx
  40bb7d:	jmp    0xf61a:0xf9ba5b00
  40bb84:	xor    dl,BYTE PTR ds:0x7c70d803
  40bb8a:	and    ecx,DWORD PTR [esi-0x51f4ef9c]
  40bb90:	cmp    al,0x47
  40bb92:	shl    DWORD PTR [ebx],cl
  40bb94:	push   0xffffff9f
  40bb96:	je     0x40bb5a
  40bb98:	repnz lods al,BYTE PTR ds:[esi]
  40bb9a:	(bad)  
  40bb9b:	shl    DWORD PTR ds:0xa8684ef6,1
  40bba1:	sub    eax,0xdcacd532
  40bba6:	xchg   edx,eax
  40bba7:	call   0x9596:0x6d17fb2c
  40bbae:	pop    ebx
  40bbaf:	not    DWORD PTR [edx-0x1b9b12dc]
  40bbb5:	pop    edi
  40bbb6:	jns    0x40bbea
  40bbb8:	push   0x74
  40bbba:	in     al,0x9b
  40bbbc:	push   cs
  40bbbd:	mov    ds:0x23ac3631,eax
  40bbc2:	shl    BYTE PTR [esi+0x1f254450],0xfd
  40bbc9:	retf   
  40bbca:	pop    ebp
  40bbcb:	mov    eax,ds:0x86f96673
  40bbd0:	mov    ecx,0xe31da065
  40bbd5:	fcom   DWORD PTR [ecx+ebx*8-0x2]
  40bbd9:	jb     0x40bbce
  40bbdb:	stos   DWORD PTR es:[edi],eax
  40bbdc:	int3   
  40bbdd:	xor    DWORD PTR [eax+0x7170df18],ebx
  40bbe3:	test   BYTE PTR [edi+0x37],dl
  40bbe6:	inc    edi
  40bbe7:	or     BYTE PTR [edi+ebp*8],ah
  40bbea:	nop
  40bbeb:	sbb    cl,BYTE PTR [ebp+0x742a478c]
  40bbf1:	mov    ecx,0x2c160139
  40bbf6:	push   edi
  40bbf7:	sbb    dh,BYTE PTR [edx]
  40bbf9:	dec    ebx
  40bbfa:	lahf   
  40bbfb:	jnp    0x40bbd0
  40bbfd:	inc    ebp
  40bbfe:	not    BYTE PTR [ebp+0x1b7c47ec]
  40bc04:	test   ah,dl
  40bc06:	test   eax,0xcb1bddf8
  40bc0b:	outs   dx,DWORD PTR ds:[esi]
  40bc0c:	push   es
  40bc0d:	call   0x4fdaf0fe
  40bc12:	ins    BYTE PTR es:[edi],dx
  40bc13:	xlat   BYTE PTR ds:[ebx]
  40bc14:	repnz inc ebx
  40bc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc17:	adc    ah,ah
  40bc19:	aam    0xcb
  40bc1b:	mov    bl,0xcd
  40bc1d:	push   esi
  40bc1e:	add    eax,0xc2bf322e
  40bc23:	push   ds
  40bc24:	xor    DWORD PTR [ecx],0x10596938
  40bc2a:	jbe    0x40bc81
  40bc2c:	aad    0x8a
  40bc2e:	fsub   DWORD PTR [edi+0x26]
  40bc31:	outs   dx,DWORD PTR ds:[esi]
  40bc32:	ins    DWORD PTR es:[edi],dx
  40bc33:	add    eax,0x9a842186
  40bc38:	out    dx,al
  40bc39:	es mov ebx,0x520ed113
  40bc3f:	nop
  40bc40:	dec    edi
  40bc41:	mov    ebp,0xea0b2074
  40bc46:	repz lahf 
  40bc48:	mov    dl,0x3c
  40bc4a:	mov    ch,dh
  40bc4c:	dec    DWORD PTR [edx-0x7a]
  40bc4f:	sub    edx,DWORD PTR [eax+ebp*4-0x5a365b9c]
  40bc56:	test   al,0xd5
  40bc58:	xchg   ebp,eax
  40bc59:	sub    BYTE PTR [edx-0x51],al
  40bc5c:	adc    eax,0x92673f08
  40bc61:	push   edx
  40bc62:	sub    BYTE PTR [esi+eax*8-0x36],ah
  40bc66:	(bad)  
  40bc67:	lods   eax,DWORD PTR ds:[esi]
  40bc68:	mov    al,0x78
  40bc6a:	jb     0x40bc23
  40bc6c:	and    DWORD PTR [ecx],edx
  40bc6e:	and    eax,0xf663a4ff
  40bc73:	leave  
  40bc74:	lds    esi,FWORD PTR [eax+edx*8-0x7b]
  40bc78:	mov    eax,0x478ea719
  40bc7d:	dec    edx
  40bc7e:	sub    al,0xff
  40bc80:	sbb    BYTE PTR [edx],0x3c
  40bc83:	cmp    edx,DWORD PTR [esi+0x68254633]
  40bc89:	and    ah,bh
  40bc8b:	sbb    DWORD PTR [ebx],ecx
  40bc8d:	mov    dl,0xa2
  40bc8f:	sbb    eax,0xa7ccaf3e
  40bc94:	sbb    edi,esi
  40bc96:	int    0xf9
  40bc98:	push   0xffffffb5
  40bc9a:	xor    eax,0x49d85506
  40bc9f:	push   DWORD PTR [ecx]
  40bca1:	inc    ebp
  40bca2:	fidivr DWORD PTR [ecx+0x23]
  40bca5:	add    DWORD PTR [ecx+0x4d467da7],eax
  40bcab:	pop    edi
  40bcac:	mul    BYTE PTR [edx]
  40bcae:	pushf  
  40bcaf:	in     eax,0x9
  40bcb1:	jns    0x40bd28
  40bcb3:	mov    al,ds:0xfbb20e34
  40bcb8:	fstp   st(0)
  40bcba:	mov    ecx,0xffb277ee
  40bcbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcc0:	mov    edx,0x90a4a891
  40bcc5:	xor    edi,DWORD PTR [eax+0x60b83dda]
  40bccb:	mov    ch,0x81
  40bccd:	adc    BYTE PTR [edi-0x98659a1],ah
  40bcd3:	dec    ebx
  40bcd4:	push   ds
  40bcd5:	jno    0x40bcaf
  40bcd7:	mov    BYTE PTR [esi-0x78],dl
  40bcda:	xchg   edi,eax
  40bcdb:	cmc    
  40bcdc:	popa   
  40bcdd:	lods   eax,DWORD PTR ds:[esi]
  40bcde:	(bad)  
  40bcdf:	stc    
  40bce0:	inc    esi
  40bce1:	xor    bl,BYTE PTR [esi]
  40bce3:	loopne 0x40bcd7
  40bce5:	loop   0x40bcd8
  40bce7:	dec    esp
  40bce8:	adc    esi,ebp
  40bcea:	pop    es
  40bceb:	mov    esi,0x8bcf2554
  40bcf0:	dec    edi
  40bcf1:	int3   
  40bcf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcf3:	jmp    0x6286178d
  40bcf8:	mov    cl,0x17
  40bcfa:	push   ss
  40bcfb:	cmp    al,0x29
  40bcfd:	xchg   ecx,eax
  40bcfe:	inc    edx
  40bcff:	outs   dx,DWORD PTR ds:[esi]
  40bd00:	xchg   edi,eax
  40bd01:	sahf   
  40bd02:	dec    eax
  40bd03:	sbb    al,0x0
  40bd05:	das    
  40bd06:	jmp    edi
  40bd08:	lock adc bh,BYTE PTR [edi+0x35bf6e82]
  40bd0f:	inc    ebx
  40bd10:	mov    ds:0xd5490b0c,al
  40bd15:	sub    eax,esp
  40bd17:	pop    edi
  40bd18:	sahf   
  40bd19:	dec    ebp
  40bd1a:	add    DWORD PTR [edx+eiz*2],esi
  40bd1d:	enter  0x4fb,0x5d
  40bd21:	xor    eax,0x3a5edc72
  40bd26:	cs test eax,0xde0704ae
  40bd2c:	call   0x83a0ae54
  40bd31:	xor    al,0x3c
  40bd33:	(bad)  
  40bd34:	outs   dx,DWORD PTR ss:[esi]
  40bd36:	test   DWORD PTR [edi-0x12],0x8d058b3b
  40bd3d:	in     eax,dx
  40bd3e:	bound  edx,QWORD PTR [eax+0x57741e2e]
  40bd44:	fbld   TBYTE PTR [edi-0x5d]
  40bd47:	test   BYTE PTR [ebp-0x45d3cbe5],ah
  40bd4d:	jg     0x40bd66
  40bd4f:	xchg   ebp,eax
  40bd50:	lahf   
  40bd51:	or     al,0x61
  40bd53:	push   ecx
  40bd54:	aaa    
  40bd55:	push   ecx
  40bd56:	call   0x7d34d23b
  40bd5b:	stos   BYTE PTR es:[edi],al
  40bd5c:	jmp    0x40bdc1
  40bd5e:	adc    eax,0x9c275463
  40bd63:	inc    ecx
  40bd64:	stos   DWORD PTR es:[edi],eax
  40bd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd66:	pop    ebp
  40bd67:	stc    
  40bd68:	stc    
  40bd69:	repz xor BYTE PTR [ecx+eiz*8+0x237140cf],bl
  40bd71:	sar    DWORD PTR [ebx+0x6e51dea1],1
  40bd77:	push   ds
  40bd78:	inc    edx
  40bd79:	aad    0xf6
  40bd7b:	imul   edi,DWORD PTR [edi-0x586fadd2],0x2e5cf434
  40bd85:	jle    0x40bd26
  40bd87:	lods   al,BYTE PTR cs:[esi]
  40bd89:	scas   eax,DWORD PTR es:[edi]
  40bd8a:	inc    eax
  40bd8b:	ret    0x5adc
  40bd8e:	jl     0x40bdab
  40bd90:	pop    ss
  40bd91:	mov    ecx,DWORD PTR [ebp-0x46]
  40bd94:	sti    
  40bd95:	stos   DWORD PTR es:[edi],eax
  40bd96:	bound  ecx,QWORD PTR [ebx+edx*1+0x0]
  40bd9a:	or     al,0xbd
  40bd9c:	push   ds
  40bd9d:	pushf  
  40bd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd9f:	(bad)  
  40bda2:	or     eax,0x51001234
  40bda7:	xchg   ebp,eax
  40bda8:	aas    
  40bda9:	cmp    ebp,ebx
  40bdab:	dec    edx
  40bdac:	and    ah,BYTE PTR [ebp+0x106fbd25]
  40bdb2:	mov    edi,es
  40bdb4:	outs   dx,DWORD PTR ds:[esi]
  40bdb5:	(bad)  
  40bdb6:	call   0x6034:0x10d666f2
  40bdbd:	adc    ecx,DWORD PTR [ebp+0xc615880]
  40bdc3:	mov    al,0x8
  40bdc5:	sub    DWORD PTR [ebp+0x2f48dcea],ebx
  40bdcb:	ins    DWORD PTR es:[edi],dx
  40bdcc:	push   eax
  40bdcd:	sbb    edx,ebp
  40bdcf:	fwait
  40bdd0:	mov    ecx,0xe3e1b12c
  40bdd5:	adc    BYTE PTR [esi+0x6463240d],dl
  40bddb:	push   ds
  40bddc:	push   ss
  40bddd:	scas   eax,DWORD PTR es:[edi]
  40bdde:	scas   al,BYTE PTR es:[edi]
  40bddf:	xchg   ebx,eax
  40bde0:	gs xchg esi,eax
  40bde2:	ja     0xf67c7e05
  40bde8:	lock push cs
  40bdea:	lahf   
  40bdeb:	test   eax,0x3665d170
  40bdf0:	lock add dl,BYTE PTR [ebx]
  40bdf3:	jecxz  0x40bdf6
  40bdf5:	ja     0x40bdb3
  40bdf7:	loopne 0x40bdcc
  40bdf9:	mov    edx,0xadfceeae
  40bdfe:	mov    ecx,DWORD PTR [esi-0x2a97b726]
  40be04:	pop    esi
  40be05:	mov    esp,0x4f0fd617
  40be0a:	fadd   QWORD PTR [ebx]
  40be0c:	xchg   ecx,eax
  40be0d:	sub    eax,ebp
  40be0f:	frndint 
  40be11:	pop    di
  40be13:	mov    esp,0xa9edbefe
  40be18:	mov    ds:0xafdb49d1,al
  40be1d:	xchg   BYTE PTR [ebx-0x2d71b605],cl
  40be23:	repz mov dl,cl
  40be26:	pop    eax
  40be27:	fmul   QWORD PTR [ebp-0x55fe666b]
  40be2d:	shl    DWORD PTR ds:0xe6fc24f8,1
  40be33:	daa    
  40be34:	fcmovu st,st(7)
  40be36:	aaa    
  40be37:	pop    eax
  40be38:	cli    
  40be39:	addr16 (bad) 
  40be3b:	cmp    BYTE PTR [edi+esi*8-0x479cc0de],dl
  40be42:	shl    DWORD PTR [ecx+0xa],cl
  40be45:	pop    ebx
  40be46:	mov    BYTE PTR [edi],dl
  40be48:	test   edi,ebx
  40be4a:	js     0x40be28
  40be4c:	lahf   
  40be4d:	add    eax,0xb8f89917
  40be52:	popa   
  40be53:	dec    edx
  40be54:	sub    dl,BYTE PTR ds:[edx]
  40be57:	pushf  
  40be58:	xchg   BYTE PTR [ebx],dh
  40be5a:	enter  0x88f7,0x3e
  40be5e:	push   ebx
  40be5f:	adc    DWORD PTR [ebp-0x2e],eax
  40be62:	or     BYTE PTR ds:0xc5d29a66,bl
  40be68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be69:	xchg   esp,eax
  40be6a:	out    dx,al
  40be6b:	in     al,0x39
  40be6d:	lahf   
  40be6e:	gs nop
  40be70:	test   DWORD PTR [ebx],esi
  40be72:	cmp    eax,0x33a4cbe2
  40be77:	and    ecx,DWORD PTR [edi]
  40be79:	xchg   edi,eax
  40be7a:	or     eax,0x9d061159
  40be7f:	(bad)  
  40be80:	adc    ebp,DWORD PTR [edi+ebp*4+0x41]
  40be84:	aaa    
  40be85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be86:	xchg   DWORD PTR [esi],ebx
  40be88:	mov    ah,0x82
  40be8a:	js     0x40bedd
  40be8c:	fsub   st,st(1)
  40be8e:	ins    DWORD PTR es:[edi],dx
  40be8f:	fld    TBYTE PTR [edi-0xbd14fea]
  40be95:	pusha  
  40be96:	arpl   WORD PTR [esi],si
  40be98:	cli    
  40be99:	jns    0x40bec6
  40be9b:	and    ebp,DWORD PTR [si+0x58f1]
  40bea0:	in     al,dx
  40bea1:	arpl   cx,sp
  40bea3:	cmc    
  40bea4:	push   0x12
  40bea6:	adc    eax,0x84748fa0
  40beab:	or     BYTE PTR [ecx],bh
  40bead:	bound  esi,QWORD PTR [eax]
  40beaf:	jns    0x40bedd
  40beb1:	repnz mov ds:0xcd865a49,eax
  40beb7:	jle    0x40bec4
  40beb9:	mov    dh,0xee
  40bebb:	(bad)  
  40bebc:	adc    eax,ebx
  40bebe:	(bad)  
  40bebf:	sub    DWORD PTR [edi-0x2ba05fcb],esp
  40bec5:	sub    al,0x60
  40bec7:	sub    al,0x2e
  40bec9:	sub    al,0x2c
  40becb:	hlt    
  40becc:	dec    ecx
  40becd:	mov    cl,0x7a
  40becf:	sbb    DWORD PTR ds:0xebdac6ce,edi
  40bed5:	adc    esp,DWORD PTR ds:0x21792acc
  40bedb:	dec    ecx
  40bedc:	lds    edi,FWORD PTR [edx]
  40bede:	je     0x40befe
  40bee0:	xlat   BYTE PTR ds:[ebx]
  40bee1:	rcr    DWORD PTR [esi],cl
  40bee3:	fstp   st(4)
  40bee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bee6:	xor    DWORD PTR [ebx],ebp
  40bee8:	mov    BYTE PTR [ecx-0x605227e],ah
  40beee:	fucompp 
  40bef0:	aad    0xde
  40bef2:	shl    BYTE PTR [esi+edi*4+0x61],0x8a
  40bef7:	xchg   edi,eax
  40bef8:	in     eax,dx
  40bef9:	sub    BYTE PTR [esi],ch
  40befb:	jecxz  0x40bf47
  40befd:	and    al,0xd7
  40beff:	pop    ebx
  40bf00:	mov    ebx,0x6f28ac7b
  40bf05:	nop
  40bf06:	jo     0x40be9a
  40bf08:	mov    ds:0x83d7baf6,al
  40bf0d:	(bad)  
  40bf0e:	imul   ecx,ebx,0x65
  40bf11:	rcr    cl,1
  40bf13:	mov    bh,0x73
  40bf15:	daa    
  40bf16:	dec    ebx
  40bf17:	xchg   edi,eax
  40bf18:	add    esp,DWORD PTR [edi]
  40bf1a:	jno    0x40bf27
  40bf1c:	test   BYTE PTR [ecx-0x3fb36e7c],cl
  40bf22:	nop
  40bf23:	push   edi
  40bf24:	jp     0x40befc
  40bf26:	daa    
  40bf27:	stc    
  40bf28:	jle    0x40beb1
  40bf2a:	jge    0x40bf72
  40bf2c:	sub    edi,ecx
  40bf2e:	and    esp,DWORD PTR [edx-0x6ecf9397]
  40bf34:	mov    ds:0x172f5a38,al
  40bf39:	jno    0x40bf43
  40bf3b:	les    eax,FWORD PTR [esp+eax*1]
  40bf3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf3f:	mov    edx,0x53c2d610
  40bf44:	mov    bh,0x26
  40bf46:	in     al,dx
  40bf47:	push   ss
  40bf48:	cwde   
  40bf49:	ins    BYTE PTR es:[edi],dx
  40bf4a:	les    edx,FWORD PTR [esi]
  40bf4c:	inc    ecx
  40bf4d:	ret    
  40bf4e:	sbb    DWORD PTR ds:0xce337e2e,edx
  40bf54:	les    ebp,FWORD PTR [ecx+0x67da3517]
  40bf5a:	mov    edx,0x8f6564fa
  40bf5f:	loope  0x40bfa2
  40bf61:	test   eax,0x17cab7e1
  40bf66:	repnz mov edi,0x89ddfc8d
  40bf6c:	and    eax,0xcf924fc4
  40bf71:	sub    BYTE PTR [esi-0x3f],cl
  40bf74:	es iret 
  40bf76:	int    0x79
  40bf78:	xor    dh,ah
  40bf7a:	rcr    DWORD PTR [ecx-0x538fb66e],cl
  40bf80:	inc    ebx
  40bf81:	pop    ds
  40bf82:	lahf   
  40bf83:	loope  0x40bf09
  40bf85:	inc    ebp
  40bf86:	std    
  40bf87:	jmp    0xd380f36b
  40bf8c:	cmp    al,0x89
  40bf8e:	and    edx,DWORD PTR [esi]
  40bf90:	or     DWORD PTR [ecx+0x7e],ebp
  40bf93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf94:	and    al,0xf9
  40bf96:	adc    al,0xf
  40bf98:	mov    edi,0x2fdcbdea
  40bf9d:	inc    edi
  40bf9e:	mov    eax,ds:0xbacb35f1
  40bfa3:	loop   0x40bfbd
  40bfa5:	std    
  40bfa6:	mov    esp,0x316d8c13
  40bfab:	nop
  40bfac:	push   ds
  40bfad:	mov    al,0x58
  40bfaf:	jmp    0x23a6a376
  40bfb4:	mov    ch,0x29
  40bfb6:	adc    al,0x5b
  40bfb8:	and    BYTE PTR [eax-0x6a],al
  40bfbb:	icebp  
  40bfbc:	(bad)  
  40bfbe:	je     0x40bf8d
  40bfc0:	inc    eax
  40bfc1:	pusha  
  40bfc2:	inc    edi
  40bfc3:	fcomp  st(0)
  40bfc5:	js     0x40bff3
  40bfc7:	imul   eax,DWORD PTR [edx-0x55],0x9d8aba74
  40bfce:	jbe    0x40c02e
  40bfd0:	sub    DWORD PTR [ebp+0x6072d919],esp
  40bfd6:	dec    eax
  40bfd7:	mov    esi,0xf4bcc18b
  40bfdc:	xor    al,BYTE PTR [ebp-0x4b]
  40bfdf:	enter  0x2dc0,0xa9
  40bfe3:	add    BYTE PTR [ebp-0x2b],al
  40bfe6:	repnz fs out dx,al
  40bfe9:	sub    BYTE PTR [edx-0x6447b295],bl
  40bfef:	sub    BYTE PTR [eax+0x6bb65796],dh
  40bff5:	jb     0x40c05e
  40bff7:	outs   dx,DWORD PTR ds:[esi]
  40bff8:	loopne 0x40bfe8
  40bffa:	dec    ecx
  40bffb:	fst    DWORD PTR [eax]
  40bffd:	mov    dl,0xa5
  40bfff:	jne    0x40c065
  40c001:	test   eax,0x2ec3aade
  40c006:	test   DWORD PTR [edx],edi
  40c008:	ins    BYTE PTR es:[edi],dx
  40c009:	dec    esp
  40c00a:	lds    edi,FWORD PTR [edi+esi*8+0x3c04806e]
  40c011:	in     eax,dx
  40c012:	push   0x4708984b
  40c017:	cli    
  40c018:	xor    ebx,DWORD PTR [edx]
  40c01a:	mov    cl,BYTE PTR [esi]
  40c01c:	in     eax,0x9c
  40c01e:	or     BYTE PTR [ecx-0x10],al
  40c021:	(bad)
  40c025:	fadd   DWORD PTR [eax-0x15]
  40c028:	sub    cl,BYTE PTR [ebx]
  40c02a:	fs sahf 
  40c02c:	retf   
  40c02d:	fcmovnbe st,st(6)
  40c02f:	aaa    
  40c030:	test   DWORD PTR [ebx-0x79],esp
  40c033:	rcr    DWORD PTR [ebx+0x772a021c],cl
  40c039:	pop    esp
  40c03a:	jge    0x40bfc2
  40c03c:	shl    DWORD PTR [esi],cl
  40c03e:	cs mov al,0x56
  40c041:	cs cld 
  40c043:	pop    ebx
  40c044:	inc    edi
  40c045:	test   al,0xaf
  40c047:	js     0x40c038
  40c049:	in     eax,0x68
  40c04b:	inc    ebx
  40c04c:	add    dl,BYTE PTR [ebx+eiz*1+0xfa816ac]
  40c053:	dec    edx
  40c054:	xor    BYTE PTR es:[ebp+0x6a9bd594],bl
  40c05b:	push   esi
  40c05c:	pop    ds
  40c05d:	cld    
  40c05e:	sub    DWORD PTR [eax-0x75],esi
  40c061:	add    dl,BYTE PTR [eax+0x3d5b2c63]
  40c067:	stc    
  40c068:	mov    bl,0x1f
  40c06a:	imul   esp,DWORD PTR [esi-0x7b],0x6510fe24
  40c071:	clc    
  40c072:	jecxz  0x40c0b5
  40c074:	or     al,0x62
  40c076:	ins    BYTE PTR es:[edi],dx
  40c077:	mov    edx,0x9ac45429
  40c07c:	daa    
  40c07d:	xchg   edi,eax
  40c07e:	mov    eax,ds:0x7c794631
  40c083:	dec    ebx
  40c084:	es data16 sbb al,0xa6
  40c088:	mov    eax,0xfbe264a6
  40c08d:	ss out 0xd3,al
  40c090:	shr    DWORD PTR [ebx-0x2151910e],0xfa
  40c097:	xchg   DWORD PTR [ebx-0x2d6b3de4],ebx
  40c09d:	jmp    0x7e8b:0x82e4685e
  40c0a4:	push   edx
  40c0a5:	repnz adc eax,0xe704dd22
  40c0ab:	call   0xdd00ef02
  40c0b0:	lahf   
  40c0b1:	or     eax,0xf5115fca
  40c0b6:	adc    esp,DWORD PTR [eax+edi*1-0x6988a543]
  40c0bd:	mov    DWORD PTR [ebp+0x60],edi
  40c0c0:	sbb    al,0xd0
  40c0c2:	shr    DWORD PTR [ecx],0xbf
  40c0c5:	pop    edx
  40c0c6:	sbb    DWORD PTR [edx-0x490ce800],ecx
  40c0cc:	mov    dl,BYTE PTR [esi+0x68deefab]
  40c0d2:	js     0x40c0a0
  40c0d4:	mov    WORD PTR [eax-0x63c7e926],cs
  40c0da:	inc    eax
  40c0db:	mov    edi,0x8caebb43
  40c0e0:	pushf  
  40c0e1:	cs jbe 0x40c0c0
  40c0e4:	adc    ah,BYTE PTR [edi+ebp*2-0x1a]
  40c0e8:	sahf   
  40c0e9:	call   DWORD PTR [esi-0x3e]
  40c0ec:	push   ds
  40c0ed:	cmp    BYTE PTR [edi-0x61ca682e],cl
  40c0f3:	pop    ebx
  40c0f4:	and    BYTE PTR [ebx-0x77c56e65],cl
  40c0fa:	fsub   st(6),st
  40c0fc:	dec    ebx
  40c0fd:	add    DWORD PTR [eax-0x73fafc68],edi
  40c103:	xor    al,0xe
  40c105:	loope  0x40c0e0
  40c107:	mov    cl,0x73
  40c109:	icebp  
  40c10a:	cdq    
  40c10b:	jo     0x40c165
  40c10d:	adc    ecx,DWORD PTR [edx]
  40c10f:	out    dx,al
  40c110:	or     al,cl
  40c112:	pop    ds
  40c113:	mov    bl,0xc9
  40c115:	int    0xe8
  40c117:	pop    ebp
  40c118:	hlt    
  40c119:	(bad)  
  40c11a:	ds adc eax,0xe1fccefd
  40c120:	jl     0x40c189
  40c122:	mov    al,0x1
  40c124:	xor    eax,0x5fd38867
  40c129:	pop    ds
  40c12a:	add    bh,BYTE PTR [edi]
  40c12c:	fistp  QWORD PTR [ecx-0x4f]
  40c12f:	xor    DWORD PTR ds:0x33537d5d,edx
  40c135:	sbb    DWORD PTR ds:0x32a80200,0xffffffea
  40c13c:	jbe    0x40c17d
  40c13e:	sub    eax,0x4ea592e6
  40c143:	bound  edi,QWORD PTR [esi]
  40c145:	push   ebx
  40c146:	dec    ebp
  40c147:	(bad)  
  40c148:	retf   0xeecf
  40c14b:	xor    ch,BYTE PTR [ecx+esi*8]
  40c14e:	clc    
  40c14f:	sbb    eax,0xdaf01457
  40c154:	icebp  
  40c155:	xchg   esp,eax
  40c156:	or     eax,0x150642cd
  40c15b:	xor    al,0x4c
  40c15d:	mov    eax,0x506448e3
  40c162:	stos   BYTE PTR es:[edi],al
  40c163:	mov    ebp,0x7c850a5e
  40c168:	mov    ?,WORD PTR [esp+ebx*4-0x15734e8e]
  40c16f:	jbe    0x40c188
  40c171:	out    0x3b,al
  40c173:	sub    BYTE PTR [esi],bh
  40c175:	ins    BYTE PTR es:[edi],dx
  40c176:	cmp    eax,DWORD PTR [eax+0x6a]
  40c179:	dec    ebx
  40c17a:	jmp    0x40c1f0
  40c17c:	cmp    eax,0x85899ecd
  40c181:	lods   al,BYTE PTR ds:[esi]
  40c182:	enter  0xc1a8,0x76
  40c186:	mov    ebx,DWORD PTR [ebp+0x6e]
  40c189:	mov    ah,0x43
  40c18b:	push   eax
  40c18c:	stos   DWORD PTR es:[edi],eax
  40c18d:	sbb    BYTE PTR [esi],ch
  40c18f:	leave  
  40c190:	sub    dl,BYTE PTR [ecx-0x60]
  40c193:	inc    ebx
  40c194:	sti    
  40c195:	pop    ebx
  40c196:	adc    eax,0x700081b6
  40c19b:	call   0x9880:0x60dbfba9
  40c1a2:	push   ebp
  40c1a3:	adc    DWORD PTR [edx+0x2],ebx
  40c1a6:	es or  al,0x70
  40c1a9:	pop    ds
  40c1aa:	dec    esp
  40c1ab:	and    ebp,DWORD PTR [edx+0xa]
  40c1ae:	mov    ch,0xa
  40c1b0:	popf   
  40c1b1:	inc    edx
  40c1b2:	pop    es
  40c1b3:	xchg   esp,eax
  40c1b4:	and    dh,BYTE PTR [esp+ebp*4-0x72]
  40c1b8:	test   DWORD PTR [ebp+eax*2+0x14462d89],ecx
  40c1bf:	inc    ebx
  40c1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c1:	mov    al,0xac
  40c1c3:	mov    DWORD PTR [esi],ebp
  40c1c5:	xor    DWORD PTR [esi+0x48cfdf94],edi
  40c1cb:	arpl   WORD PTR [ebp-0x6127e3d9],dx
  40c1d1:	xchg   ebx,eax
  40c1d2:	call   0xb707:0xc7e28eb5
  40c1d9:	fimul  DWORD PTR [esi-0x4e]
  40c1dc:	inc    edi
  40c1dd:	call   0x7be4:0xbf6d662f
  40c1e4:	out    dx,al
  40c1e5:	inc    ecx
  40c1e6:	aad    0x33
  40c1e8:	sub    eax,0xdaa8bc2e
  40c1ed:	dec    edx
  40c1ee:	xlat   BYTE PTR ds:[ebx]
  40c1ef:	sbb    dl,BYTE PTR [edx+0x60]
  40c1f2:	stos   DWORD PTR es:[edi],eax
  40c1f3:	(bad)  
  40c1f4:	sahf   
  40c1f5:	pop    esi
  40c1f6:	push   cs
  40c1f7:	outs   dx,DWORD PTR ds:[esi]
  40c1f8:	fmulp  st(4),st
  40c1fa:	mov    cl,0x4f
  40c1fc:	and    dl,cl
  40c1fe:	jbe    0x40c18f
  40c200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c201:	inc    edx
  40c202:	sub    al,0xb0
  40c204:	mov    edx,0x13dd5c16
  40c209:	gs int 0x79
  40c20c:	(bad)  
  40c20d:	xchg   ebp,eax
  40c20e:	mov    cl,0xf0
  40c210:	xlat   BYTE PTR ds:[ebx]
  40c211:	adc    eax,DWORD PTR ds:0xea8bf96b
  40c217:	cld    
  40c218:	adc    eax,0x626f9113
  40c21d:	aas    
  40c21e:	dec    esi
  40c21f:	dec    BYTE PTR [esi+0x595b9961]
  40c225:	dec    esi
  40c226:	mov    ecx,0xadf38554
  40c22b:	aaa    
  40c22c:	stos   BYTE PTR es:[edi],al
  40c22d:	ror    DWORD PTR [ebx+0x675d0f24],1
  40c233:	popa   
  40c234:	out    dx,eax
  40c235:	or     dl,ch
  40c237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c238:	add    al,0x23
  40c23a:	cwde   
  40c23b:	pop    ds
  40c23c:	jns    0x40c236
  40c23e:	hlt    
  40c23f:	add    BYTE PTR [edi+0x1],bh
  40c242:	mov    bh,0xa2
  40c244:	pop    ecx
  40c245:	(bad)  
  40c247:	xor    DWORD PTR [ebp-0x7f],esi
  40c24a:	(bad)  
  40c24b:	fild   WORD PTR [esi+0x23]
  40c24e:	(bad)  
  40c24f:	mov    edi,0x4a9f8698
  40c254:	jmp    0xfd49:0x6773188c
  40c25b:	sbb    edi,ebp
  40c25d:	sbb    BYTE PTR [eax-0x723e5942],dh
  40c263:	fincstp 
  40c265:	ins    BYTE PTR es:[edi],dx
  40c266:	xchg   ebp,eax
  40c267:	call   0x95369a0d
  40c26c:	(bad)  
  40c26d:	ins    BYTE PTR es:[edi],dx
  40c26e:	clc    
  40c26f:	xchg   esi,eax
  40c270:	mov    eax,ds:0x4b597dcf
  40c275:	mov    ch,0xe5
  40c277:	call   DWORD PTR [esi-0x7f]
  40c27a:	jne    0x40c277
  40c27c:	cmp    DWORD PTR [ecx+0x762ddf9c],ebp
  40c282:	push   0x337bbbd6
  40c287:	lds    edi,FWORD PTR [esi+0x105666a1]
  40c28d:	(bad)  
  40c28f:	jae    0x40c2f6
  40c291:	leave  
  40c292:	arpl   si,bp
  40c294:	cmp    BYTE PTR [edi-0x7],bl
  40c297:	or     al,0x3d
  40c299:	or     esi,DWORD PTR [esi+0x6d2e0942]
  40c29f:	xchg   esi,eax
  40c2a0:	push   0xffffffb6
  40c2a2:	sub    ch,BYTE PTR [edx+eiz*2+0x4f]
  40c2a6:	mov    eax,fs
  40c2a8:	or     eax,0x8e41fe32
  40c2ad:	pop    esi
  40c2ae:	repnz dec ecx
  40c2b0:	iret   
  40c2b1:	test   BYTE PTR [ebx+ebx*4+0x51],ch
  40c2b5:	sahf   
  40c2b6:	jno    0x40c2c6
  40c2b8:	das    
  40c2b9:	xor    al,0x69
  40c2bb:	sar    BYTE PTR [ebp+ebp*2+0x1a4c96f9],cl
  40c2c2:	(bad)  
  40c2c3:	rol    DWORD PTR [eax-0x7944f5aa],cl
  40c2c9:	in     eax,dx
  40c2ca:	js     0x40c28f
  40c2cc:	pop    ds
  40c2cd:	mov    BYTE PTR [esi+0x1e],al
  40c2d0:	xchg   BYTE PTR [ecx-0x4e],bh
  40c2d3:	add    eax,0x50704251
  40c2d8:	outs   dx,BYTE PTR ds:[esi]
  40c2d9:	retf   0x44f8
  40c2dc:	mov    fs,WORD PTR fs:[ebp+0x4dbb38f1]
  40c2e3:	jnp    0x40c355
  40c2e5:	dec    eax
  40c2e6:	mov    al,ds:0x382beb0d
  40c2eb:	ss dec esi
  40c2ed:	(bad)  
  40c2ef:	(bad)  
  40c2f1:	and    esp,DWORD PTR [ebx-0x5e2d03ba]
  40c2f7:	les    edi,FWORD PTR [ecx+ecx*8-0x9]
  40c2fb:	dec    eax
  40c2fc:	dec    edx
  40c2fd:	aad    0xb5
  40c2ff:	mov    al,ds:0xf917121d
  40c304:	mov    eax,ds:0x56900b4b
  40c309:	push   ebx
  40c30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c30b:	pop    ds
  40c30c:	xchg   ecx,eax
  40c30d:	mov    ch,0x27
  40c30f:	cmp    ah,BYTE PTR [ebp+0x7de45994]
  40c315:	es pop ebx
  40c317:	(bad)  
  40c319:	enter  0x4e82,0x42
  40c31d:	mov    edx,DWORD PTR [eax+0xb0d873a]
  40c323:	imul   ebp,DWORD PTR [esi+0xc5e3163],0xffffff8c
  40c32a:	xor    ecx,DWORD PTR [ecx+0xf7eb86b]
  40c330:	inc    edx
  40c331:	dec    ebx
  40c332:	pushf  
  40c333:	pop    es
  40c334:	jge    0x40c381
  40c336:	jmp    0x40c2bb
  40c338:	int3   
  40c339:	(bad)  
  40c33a:	add    dh,ah
  40c33c:	sbb    al,0xd8
  40c33e:	pop    es
  40c33f:	cmp    BYTE PTR [edx+0x66aa6f93],cl
  40c345:	retf   0x5e08
  40c348:	and    eax,0xe501ac9b
  40c34d:	mov    esi,0xf6ca6118
  40c352:	mov    BYTE PTR [esi+0xd2f5d48],cl
  40c358:	ins    DWORD PTR es:[edi],dx
  40c359:	mov    dl,0xae
  40c35b:	call   ecx
  40c35d:	add    al,0x61
  40c35f:	stos   BYTE PTR es:[edi],al
  40c360:	fldenv fs:[eax-0x16]
  40c364:	fnsave [bx+di-0x50a8]
  40c369:	outs   dx,DWORD PTR ds:[esi]
  40c36a:	ja     0x40c3e0
  40c36c:	in     al,0x23
  40c36e:	test   eax,0x415c3dfa
  40c373:	out    dx,al
  40c374:	sub    al,0x69
  40c376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c377:	jbe    0x40c39c
  40c379:	sub    BYTE PTR [ebx],0x96
  40c37c:	dec    edi
  40c37d:	add    eax,DWORD PTR [edx+ebp*4]
  40c380:	sub    al,0x1c
  40c382:	sub    BYTE PTR [bx+di+0x5d],bh
  40c386:	fs into 
  40c388:	out    dx,eax
  40c389:	xchg   edx,eax
  40c38a:	or     WORD PTR [esi-0x22],bp
  40c38e:	push   ebx
  40c38f:	rol    DWORD PTR [ecx],1
  40c391:	dec    eax
  40c392:	push   ss
  40c393:	xor    eax,0xdce61934
  40c398:	clc    
  40c399:	add    dh,ah
  40c39b:	xlat   BYTE PTR ds:[ebx]
  40c39c:	aad    0xeb
  40c39e:	jbe    0x40c330
  40c3a0:	dec    edx
  40c3a1:	iret   
  40c3a2:	iret   
  40c3a3:	adc    al,0x1
  40c3a5:	sbb    ah,BYTE PTR [edi+0x3f92e5a6]
  40c3ab:	inc    ebp
  40c3ac:	jl     0x40c38a
  40c3ae:	sub    al,0x9a
  40c3b0:	dec    BYTE PTR [esi]
  40c3b2:	and    eax,0xb3fa0998
  40c3b7:	test   eax,0xbdf3537e
  40c3bc:	gs das 
  40c3be:	sub    ebp,0x33
  40c3c1:	mov    dh,0x8d
  40c3c3:	sub    cl,0x45
  40c3c6:	xchg   esi,eax
  40c3c7:	mov    BYTE PTR [eax],bh
  40c3c9:	push   0xc2d775a9
  40c3ce:	test   BYTE PTR [ebx-0x54],dh
  40c3d1:	dec    edx
  40c3d2:	adc    edi,DWORD PTR [esi+0x5e]
  40c3d5:	xchg   edx,ebx
  40c3d7:	and    al,BYTE PTR [ecx-0x7953c89f]
  40c3dd:	or     eax,0xd6f81642
  40c3e2:	or     BYTE PTR [ebx],ch
  40c3e4:	mov    dh,0x62
  40c3e6:	push   ds
  40c3e7:	mov    BYTE PTR [eax],dl
  40c3e9:	push   0xffffffd6
  40c3eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3ec:	or     al,0xa8
  40c3ee:	pop    esp
  40c3ef:	inc    esi
  40c3f0:	test   eax,0x77307451
  40c3f5:	jecxz  0x40c472
  40c3f7:	rcl    ah,0x18
  40c3fa:	cmp    al,0xb0
  40c3fc:	(bad)  [edi+edx*4-0x42be1feb]
  40c403:	mov    BYTE PTR [edx+0x72b93c9c],al
  40c409:	dec    ebp
  40c40a:	fsubr  st(3),st
  40c40c:	fstp   TBYTE PTR [esi+0x2c]
  40c40f:	jp     0x40c453
  40c411:	les    esp,FWORD PTR [esi+0x64b11978]
  40c417:	mov    esi,0x71b67b59
  40c41c:	ret    0xb1c3
  40c41f:	push   esi
  40c420:	not    DWORD PTR [edx]
  40c422:	cld    
  40c423:	push   edi
  40c424:	lea    edi,ds:0x51124369
  40c42a:	mul    DWORD PTR [bx+di]
  40c42d:	jl     0x40c3b5
  40c42f:	pop    edx
  40c430:	call   0xd392:0x2368b283
  40c437:	fsub   QWORD PTR [ecx]
  40c439:	std    
  40c43a:	aas    
  40c43b:	jg     0x40c40f
  40c43d:	jge    0x40c415
  40c43f:	dec    esi
  40c440:	pop    edx
  40c441:	adc    DWORD PTR [edx],0x1619ad08
  40c447:	mov    WORD PTR [eax+0x3f],?
  40c44a:	adc    eax,0x8a7e5abd
  40c44f:	popf   
  40c450:	inc    edi
  40c451:	push   cs
  40c452:	add    al,0x41
  40c454:	dec    esi
  40c455:	dec    eax
  40c456:	add    al,0xf0
  40c458:	std    
  40c459:	dec    ebp
  40c45a:	aad    0x43
  40c45c:	pop    edi
  40c45d:	std    
  40c45e:	out    dx,eax
  40c45f:	ffree  st(3)
  40c461:	fldenv [eax]
  40c463:	ror    DWORD PTR [eax],1
  40c465:	and    DWORD PTR [ecx-0x4730c94f],ebx
  40c46b:	inc    ebp
  40c46c:	sub    al,0xb1
  40c46e:	push   ebx
  40c46f:	(bad)  
  40c470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c471:	push   cs
  40c472:	inc    edx
  40c473:	pop    ebp
  40c474:	pop    edx
  40c475:	fadd   DWORD PTR [esp+ebp*4+0x47]
  40c47a:	push   ebp
  40c47b:	cmp    ebp,DWORD PTR [edx]
  40c47d:	out    0x4f,al
  40c47f:	sub    al,0x4b
  40c481:	syscall 
  40c483:	idiv   edx
  40c485:	cs pop ss
  40c487:	int    0x76
  40c489:	aad    0x7
  40c48b:	lods   al,BYTE PTR ds:[esi]
  40c48c:	cdq    
  40c48d:	fwait
  40c48e:	cdq    
  40c48f:	loop   0x40c412
  40c491:	mov    WORD PTR [esi+ecx*4+0x60],gs
  40c495:	cmc    
  40c496:	neg    DWORD PTR [esi]
  40c498:	jbe    0x40c4c5
  40c49a:	pop    esp
  40c49b:	aad    0x35
  40c49d:	xor    BYTE PTR [ebp-0x3ca01e68],ah
  40c4a3:	push   ebp
  40c4a4:	ds nop
  40c4a6:	sbb    ah,BYTE PTR [ebx-0x77cabd77]
  40c4ac:	jb     0x40c4ca
  40c4ae:	push   eax
  40c4af:	popa   
  40c4b0:	cmp    al,0x19
  40c4b2:	xchg   DWORD PTR [ecx],eax
  40c4b4:	jecxz  0x40c4e9
  40c4b6:	mov    edi,0x80a92b26
  40c4bb:	jle    0x40c4a8
  40c4bd:	dec    esi
  40c4be:	rcl    BYTE PTR [esi],cl
  40c4c0:	push   ecx
  40c4c1:	inc    ebp
  40c4c2:	fucom  st(4)
  40c4c4:	adc    dl,BYTE PTR [ebx+0x5f840eb5]
  40c4ca:	cmp    eax,0xbacd6689
  40c4cf:	mov    ebx,eax
  40c4d1:	call   0xd6d9c16c
  40c4d6:	daa    
  40c4d7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d9:	into   
  40c4da:	mov    dl,0xd7
  40c4dc:	dec    eax
  40c4dd:	inc    ecx
  40c4de:	mov    ds:0xa25d2c5c,al
  40c4e3:	in     eax,0x68
  40c4e5:	adc    esp,DWORD PTR [ebx-0x2b5831f8]
  40c4eb:	xchg   DWORD PTR [ebx+0x78],ebx
  40c4ee:	xlat   BYTE PTR ds:[ebx]
  40c4ef:	scas   eax,DWORD PTR es:[edi]
  40c4f0:	sbb    ebp,DWORD PTR [eax-0x2b]
  40c4f3:	xchg   ebp,eax
  40c4f4:	lea    ebx,[ebx-0x77]
  40c4f7:	jo     0x40c518
  40c4f9:	icebp  
  40c4fa:	add    eax,0x47d14d63
  40c4ff:	mov    BYTE PTR [ebx+edx*8+0x22],bh
  40c503:	mov    cl,0xea
  40c505:	or     al,0x48
  40c507:	fnstcw WORD PTR ds:0x16908e05
  40c50d:	xor    al,0x76
  40c50f:	jg     0x40c588
  40c511:	addr16 aam 0xcf
  40c514:	push   eax
  40c515:	xchg   BYTE PTR [ebp+edi*8+0x4f],cl
  40c519:	out    dx,al
  40c51a:	jae    0x40c579
  40c51c:	imul   edx,DWORD PTR [ecx-0x7fdc12c0],0xc5f1a299
  40c526:	call   0xcf86:0xba3d2be5
  40c52d:	je     0x40c532
  40c52f:	xor    BYTE PTR [eax],bl
  40c531:	(bad)  
  40c532:	cs jae 0x40c52f
  40c535:	lss    edx,FWORD PTR [edx-0x27f50bc1]
  40c53c:	stc    
  40c53d:	cli    
  40c53e:	jmp    0x40c52e
  40c540:	jo     0x1aa11e71
  40c546:	iret   
  40c547:	or     cl,0x25
  40c54a:	jp     0x40c501
  40c54c:	(bad)  
  40c54d:	cli    
  40c54e:	push   ebx
  40c54f:	sti    
  40c550:	lock jno 0x40c563
  40c553:	or     ch,BYTE PTR [esi-0x16]
  40c556:	test   al,0x61
  40c558:	dec    ebx
  40c559:	(bad)  
  40c55a:	cmp    BYTE PTR ds:0x40215268,dl
  40c560:	lds    eax,FWORD PTR [eax]
  40c562:	dec    ecx
  40c563:	pop    eax
  40c564:	mov    ah,0xf
  40c566:	lods   al,BYTE PTR ds:[esi]
  40c567:	imul   edx,edi,0x4f9bd04b
  40c56d:	mov    ebx,0xb7b4ac95
  40c572:	test   DWORD PTR [eax-0x7d],esi
  40c575:	arpl   WORD PTR [ecx+0x4405bb8f],dx
  40c57b:	fidiv  WORD PTR [ecx]
  40c57d:	ss mov ebp,0xf52a1df5
  40c583:	wbinvd 
  40c585:	xor    al,0x55
  40c587:	ja     0x40c5a3
  40c589:	cdq    
  40c58a:	cmp    bh,dh
  40c58c:	jns    0x40c5f0
  40c58e:	mov    bh,BYTE PTR [ebp+0x3c65f90]
  40c594:	out    0xef,al
  40c596:	and    al,0x81
  40c598:	hlt    
  40c599:	adc    eax,0xf71ac311
  40c59e:	retf   
  40c59f:	jo     0x40c5c9
  40c5a1:	sbb    eax,0x9038af77
  40c5a6:	jmp    0xfd9c:0x8acf44f7
  40c5ad:	jecxz  0x40c5c0
  40c5af:	inc    ebp
  40c5b0:	sbb    BYTE PTR [ebx],0x8d
  40c5b3:	and    ah,BYTE PTR [edi+0x1345e1b5]
  40c5b9:	or     eax,0x8f0daa55
  40c5be:	ja     0x40c600
  40c5c0:	and    bh,dh
  40c5c2:	jae    0x40c5ef
  40c5c4:	adc    BYTE PTR [edx-0x3a3b09ad],ch
  40c5ca:	dec    edi
  40c5cb:	mov    esi,fs
  40c5cd:	into   
  40c5ce:	mov    esi,0xbde45477
  40c5d3:	into   
  40c5d4:	mov    bl,0x14
  40c5d6:	pop    eax
  40c5d7:	std    
  40c5d8:	cld    
  40c5d9:	repz cmp DWORD PTR [esi-0x7],esp
  40c5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5de:	sub    eax,0x8bc71e81
  40c5e3:	xor    esp,DWORD PTR [ebx+0x11757c60]
  40c5e9:	xlat   BYTE PTR ds:[ebx]
  40c5ea:	dec    edi
  40c5eb:	test   BYTE PTR [eax+0xbed385c],0xd9
  40c5f2:	inc    edi
  40c5f3:	(bad)
  40c5f8:	or     ch,dh
  40c5fa:	adc    DWORD PTR [ecx+ebp*2-0x51ea7ed1],0x5
  40c602:	(bad)  
  40c603:	lods   al,BYTE PTR ds:[esi]
  40c604:	data16 daa 
  40c606:	out    dx,al
  40c607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c608:	test   eax,0x1f1f31e3
  40c60d:	mov    edi,0xe65b0ac2
  40c612:	and    BYTE PTR [ebp-0x3562bb97],ah
  40c618:	sbb    eax,0x9b6a58b1
  40c61d:	pop    ss
  40c61e:	mov    ?,WORD PTR [esi+0x0]
  40c621:	sbb    eax,0x6a9e6597
  40c626:	outs   dx,BYTE PTR ds:[esi]
  40c627:	stos   BYTE PTR es:[edi],al
  40c628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c629:	out    0x88,eax
  40c62b:	stc    
  40c62c:	xlat   BYTE PTR ds:[ebx]
  40c62d:	pop    esi
  40c62e:	and    DWORD PTR [ebp+esi*1+0x652d425c],eax
  40c635:	jmp    FWORD PTR [ebx+ebx*1-0x10]
  40c639:	arpl   WORD PTR [eax+0x2111d213],ax
  40c63f:	jmp    0x40c668
  40c641:	ins    BYTE PTR es:[edi],dx
  40c642:	adc    DWORD PTR [ecx-0x3],0x26d1375b
  40c649:	pop    eax
  40c64a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c64b:	mov    ch,0xae
  40c64d:	stc    
  40c64e:	pop    ebp
  40c64f:	ds leave 
  40c651:	pop    ebp
  40c652:	cwde   
  40c653:	(bad)  
  40c654:	adc    bh,bl
  40c656:	or     DWORD PTR [edx],esi
  40c658:	outs   dx,BYTE PTR ds:[esi]
  40c659:	clc    
  40c65a:	out    0xe,al
  40c65c:	ror    DWORD PTR [esi-0x6a],cl
  40c65f:	addr16 fincstp 
  40c662:	and    ebp,DWORD PTR [esi-0x31]
  40c665:	(bad)
  40c66a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c66b:	sub    DWORD PTR [ebp-0x4ace81ea],ebx
  40c671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c672:	dec    ecx
  40c673:	mov    edx,0xd9418f9a
  40c678:	ret    0xd740
  40c67b:	popa   
  40c67c:	pop    eax
  40c67d:	and    al,0x4f
  40c67f:	jne    0x40c654
  40c681:	retf   
  40c682:	nop
  40c683:	pop    ebp
  40c684:	pop    edi
  40c685:	loopne 0x40c6a1
  40c687:	mov    eax,0x773d5711
  40c68c:	xchg   ecx,eax
  40c68d:	jo     0x40c65a
  40c68f:	sub    dh,BYTE PTR [ecx+0x64]
  40c692:	shl    DWORD PTR [ebx+ecx*1-0x25a7c8a1],0xbf
  40c69a:	aaa    
  40c69b:	les    edx,FWORD PTR [ebp+edi*1-0x6760bf02]
  40c6a2:	pop    ecx
  40c6a3:	cwde   
  40c6a4:	sub    ebp,edi
  40c6a6:	jl     0x40c701
  40c6a8:	mov    ds:0xf9ce90f1,al
  40c6ad:	pop    ss
  40c6ae:	and    edi,DWORD PTR [ecx-0x38]
  40c6b1:	pop    ebp
  40c6b2:	add    esp,ebp
  40c6b4:	retf   
  40c6b5:	mov    edx,edi
  40c6b7:	cmc    
  40c6b8:	out    0xf1,al
  40c6ba:	mov    ds:0x877b61f6,eax
  40c6bf:	outs   dx,DWORD PTR ds:[esi]
  40c6c0:	aam    0x7e
  40c6c2:	inc    eax
  40c6c3:	xor    DWORD PTR [esi-0x517f128c],ebp
  40c6c9:	pop    ecx
  40c6ca:	test   al,0xf9
  40c6cc:	pop    edi
  40c6cd:	sbb    ecx,DWORD PTR [ecx+ecx*8-0x64]
  40c6d1:	rcl    dh,cl
  40c6d3:	add    eax,DWORD PTR [edx-0xd]
  40c6d6:	fisttp DWORD PTR [ebx-0x7b07264a]
  40c6dc:	cmp    esi,DWORD PTR [edi]
  40c6de:	test   eax,0x2bb5dc8f
  40c6e3:	mov    eax,0x371d3236
  40c6e8:	or     esi,DWORD PTR [edi+0x6bd74a4]
  40c6ee:	stc    
  40c6ef:	or     edx,ecx
  40c6f1:	or     dl,dh
  40c6f3:	test   al,0x3d
  40c6f5:	push   ss
  40c6f6:	push   eax
  40c6f7:	mov    al,0x9a
  40c6f9:	(bad)  
  40c6fa:	fmul   QWORD PTR [esi+0x75]
  40c6fd:	push   es
  40c6fe:	pop    esp
  40c6ff:	jecxz  0x40c707
  40c701:	pop    ecx
  40c702:	outs   dx,BYTE PTR ds:[esi]
  40c703:	pop    edi
  40c704:	xchg   BYTE PTR [edi+0x2b43fb24],dh
  40c70a:	cmp    eax,0xd4a2e22d
  40c70f:	je     0x40c6d0
  40c711:	add    BYTE PTR [edx-0x185b9c36],al
  40c717:	call   DWORD PTR [edi+ebp*2]
  40c71a:	xor    esi,DWORD PTR [edi-0x41]
  40c71d:	fist   WORD PTR [ecx-0x21]
  40c720:	aad    0xd3
  40c722:	adc    eax,edx
  40c724:	call   0xccee:0xf1a67283
  40c72b:	test   eax,0x64da13ff
  40c730:	test   ebp,eax
  40c732:	sub    ah,dl
  40c734:	shr    BYTE PTR [eax+edx*8-0x7c],0x89
  40c739:	and    BYTE PTR [ebx],ch
  40c73b:	mov    eax,DWORD PTR [edi+ebp*4-0x55]
  40c73f:	(bad)  
  40c740:	sbb    ecx,edi
  40c742:	aaa    
  40c743:	xchg   edx,eax
  40c744:	mov    dh,0x56
  40c746:	xchg   ecx,eax
  40c747:	sub    al,0x72
  40c749:	aam    0x32
  40c74b:	xor    al,BYTE PTR [edx-0x42ac0866]
  40c751:	pusha  
  40c752:	pop    eax
  40c753:	add    BYTE PTR [ebp+edi*4-0x3a],cl
  40c757:	(bad)  
  40c758:	lock mov ds:0x7da60667,eax
  40c75e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c75f:	dec    ebx
  40c760:	lock repz or esp,edi
  40c764:	inc    edi
  40c765:	inc    edx
  40c766:	adc    al,0x5a
  40c768:	or     DWORD PTR [edx-0x1],esi
  40c76b:	add    BYTE PTR ds:0x28bcbaff,dl
  40c771:	mov    BYTE PTR [eax+eiz*8],dl
  40c774:	jmp    0x40c774
  40c776:	aaa    
  40c777:	fs test dh,ah
  40c77a:	cli    
  40c77b:	leave  
  40c77c:	push   ecx
  40c77d:	inc    ebp
  40c77e:	xchg   BYTE PTR [edi],al
  40c780:	add    esp,DWORD PTR [edi-0x77]
  40c783:	push   edi
  40c784:	imul   edi,DWORD PTR [edx-0x72d1816d],0xffffff89
  40c78b:	test   BYTE PTR [esi-0x13],0xe2
  40c78f:	pop    ebp
  40c790:	push   0x7bd48653
  40c795:	sub    BYTE PTR [ecx-0x57],dh
  40c798:	fs ds jnp 0x40c752
  40c79c:	xchg   edi,eax
  40c79d:	adc    al,0x58
  40c79f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a0:	xchg   DWORD PTR [ecx+ecx*1-0xf032b6b],ecx
  40c7a7:	shld   DWORD PTR [esi+edx*2-0x3e58498],esi,0xd0
  40c7b0:	scas   eax,DWORD PTR es:[edi]
  40c7b1:	sub    edi,ecx
  40c7b3:	pop    ebx
  40c7b4:	jbe    0x40c7b5
  40c7b6:	ret    0x54d9
  40c7b9:	mov    dh,0x38
  40c7bb:	adc    al,0x31
  40c7bd:	retf   
  40c7be:	pop    ebx
  40c7bf:	xor    eax,0x4a80c6e1
  40c7c4:	mov    ah,0xf9
  40c7c6:	xor    BYTE PTR [esi+0x10760e4e],ch
  40c7cc:	xor    DWORD PTR [ecx],eax
  40c7ce:	arpl   WORD PTR [edi],sp
  40c7d0:	enter  0x646b,0xaf
  40c7d4:	fs scas eax,DWORD PTR es:[edi]
  40c7d6:	loop   0x40c851
  40c7d8:	adc    edi,DWORD PTR ds:0x3db2a01f
  40c7de:	inc    ebp
  40c7df:	aaa    
  40c7e0:	jmp    0x1a69:0x9ecef7c2
  40c7e7:	lahf   
  40c7e8:	cmp    eax,0x8ca38fa8
  40c7ed:	adc    al,0xd
  40c7ef:	add    BYTE PTR [ecx-0x57],ch
  40c7f2:	or     eax,0xdf64ab4e
  40c7f7:	or     al,BYTE PTR [ecx]
  40c7f9:	or     esp,ebp
  40c7fb:	jge    0x40c837
  40c7fd:	clc    
  40c7fe:	retf   
  40c7ff:	mov    ebp,0x2a8b5279
  40c804:	cmp    DWORD PTR [edx],0x69
  40c807:	std    
  40c808:	popa   
  40c809:	mov    eax,ds:0xd922c60a
  40c80e:	in     al,0xa5
  40c810:	xor    esi,DWORD PTR [edx+ebp*1]
  40c813:	enter  0x2d96,0xe1
  40c817:	sahf   
  40c818:	adc    al,0xf8
  40c81a:	xor    DWORD PTR fs:[edx+esi*8],eax
  40c81e:	in     eax,dx
  40c81f:	pop    es
  40c820:	pop    esi
  40c821:	stos   BYTE PTR es:[edi],al
  40c822:	mov    bl,0x38
  40c824:	dec    ebp
  40c825:	xor    edx,DWORD PTR [ebp+0x5af716db]
  40c82b:	fcomp  DWORD PTR [ecx+0x6d]
  40c82e:	cli    
  40c82f:	mov    dh,0x8e
  40c831:	jae    0x40c884
  40c833:	and    cl,BYTE PTR [esp+edi*1+0x5499a1b4]
  40c83a:	fldenv [eax+0x61]
  40c83d:	inc    ecx
  40c83e:	aam    0xc6
  40c840:	cmp    BYTE PTR [ebx+0x5],bh
  40c843:	popa   
  40c844:	in     al,dx
  40c845:	push   0x6784fc0
  40c84a:	cmc    
  40c84b:	cmp    al,0xf8
  40c84d:	mov    al,ds:0x47c16d47
  40c852:	dec    eax
  40c853:	rcl    DWORD PTR [ebp-0x61a615d5],0x32
  40c85a:	adc    DWORD PTR [ecx-0x2b],eax
  40c85d:	mov    bh,0x68
  40c85f:	add    al,0x23
  40c861:	pop    ds
  40c862:	pop    ds
  40c863:	jae    0x40c845
  40c865:	dec    ebp
  40c866:	test   bl,ah
  40c868:	jmp    0x201753d3
  40c86d:	cs ja  0x40c81a
  40c870:	xor    al,BYTE PTR ds:0xceb17e41
  40c876:	xor    al,0xbc
  40c878:	mov    edi,0x905d1090
  40c87d:	pusha  
  40c87e:	push   edx
  40c87f:	xchg   esi,edx
  40c881:	(bad)  
  40c882:	push   edx
  40c883:	pop    es
  40c884:	xchg   esp,eax
  40c885:	fsubr  QWORD PTR [ecx]
  40c887:	push   esi
  40c888:	fdiv   st(5),st
  40c88a:	out    dx,al
  40c88b:	cmp    ah,dl
  40c88d:	xlat   BYTE PTR ds:[ebx]
  40c88e:	pusha  
  40c88f:	and    WORD PTR [ebx+0x35],dx
  40c893:	fs mov ebx,0x3340b3e4
  40c899:	xor    al,0x2e
  40c89b:	cmp    eax,0x1f04376
  40c8a0:	inc    esp
  40c8a1:	imul   esp,DWORD PTR [eax-0x2b4490e2],0xc350835d
  40c8ab:	and    eax,0x3817a2b
  40c8b0:	sbb    edx,DWORD PTR [eax+0x5d]
  40c8b3:	inc    eax
  40c8b4:	or     BYTE PTR [ecx],ah
  40c8b6:	push   esi
  40c8b7:	mov    WORD PTR [eax-0x2b],gs
  40c8ba:	pushf  
  40c8bb:	adc    esi,DWORD PTR ds:0xe7c27838
  40c8c1:	pushf  
  40c8c2:	test   al,0x61
  40c8c4:	iret   
  40c8c5:	cmp    bl,BYTE PTR [ebp-0x50]
  40c8c8:	imul   ebp,ecx,0x5b3424d4
  40c8ce:	sub    esi,DWORD PTR [edx-0x18a8c780]
  40c8d4:	cwde   
  40c8d5:	push   esi
  40c8d6:	pop    ss
  40c8d7:	ds mov ebx,0x3e767106
  40c8dd:	and    dl,0xc3
  40c8e0:	adc    eax,0x24ba8aad
  40c8e5:	xlat   BYTE PTR ds:[ebx]
  40c8e6:	inc    eax
  40c8e7:	xchg   edx,eax
  40c8e8:	adc    BYTE PTR [edi],al
  40c8ea:	or     al,0xcd
  40c8ec:	popa   
  40c8ed:	aas    
  40c8ee:	dec    eax
  40c8ef:	in     eax,0x73
  40c8f1:	das    
  40c8f2:	stc    
  40c8f3:	(bad)  
  40c8f4:	ss (bad) 
  40c8f6:	aad    0xb6
  40c8f8:	push   eax
  40c8f9:	mov    DWORD PTR [ecx],0xae404842
  40c8ff:	(bad)  [ecx-0x5a]
  40c902:	popa   
  40c903:	jmp    0x33b8a289
  40c908:	mov    al,ds:0x82cb5fc7
  40c90d:	jp     0x40c8c2
  40c90f:	pop    ebp
  40c910:	push   ss
  40c911:	pop    ebp
  40c912:	enter  0x64a2,0xe0
  40c916:	ror    DWORD PTR [ebp+0x2c],cl
  40c919:	and    DWORD PTR [ebx+eax*4-0x1e16d82f],edi
  40c920:	cli    
  40c921:	dec    eax
  40c922:	mov    BYTE PTR [ebx-0x28],al
  40c925:	repz push esp
  40c927:	dec    edx
  40c928:	sbb    bh,BYTE PTR [eax]
  40c92a:	adc    BYTE PTR [edi-0x18cdad06],ah
  40c930:	repnz (bad) 
  40c933:	ret    0x41a6
  40c936:	imul   ecx,esp,0xf870fccc
  40c93c:	das    
  40c93d:	pop    ebp
  40c93e:	fdivrp st(4),st
  40c940:	jl     0x40c97e
  40c942:	shr    DWORD PTR [edx+0x435f1a22],1
  40c948:	pop    esi
  40c949:	mov    al,ds:0x10d9c0e5
  40c94e:	pop    esp
  40c94f:	out    dx,al
  40c950:	inc    ecx
  40c951:	dec    esi
  40c952:	call   0x89e4676a
  40c957:	ret    0x3ad5
  40c95a:	imul   eax,DWORD PTR [ebx+0x28],0xffffffa5
  40c95e:	jecxz  0x40c992
  40c960:	mov    eax,ds:0x8ec7a80f
  40c965:	jbe    0x40c8eb
  40c967:	and    ah,al
  40c969:	ins    DWORD PTR es:[edi],dx
  40c96a:	mov    bl,0xd1
  40c96c:	xchg   ebx,eax
  40c96d:	push   edx
  40c96e:	imul   esp,DWORD PTR ds:0x5c9fe3d2,0x7b29fb1b
  40c978:	ror    BYTE PTR [ebx+0x595ec648],1
  40c97e:	mov    dh,BYTE PTR ds:0xf2ca1f0f
  40c984:	add    eax,0xc2c633a
  40c989:	mov    ecx,0x574892a7
  40c98e:	or     bh,dl
  40c990:	xor    eax,DWORD PTR [ebx+esi*1]
  40c993:	adc    al,0xba
  40c995:	inc    esp
  40c996:	jmp    0xc75f:0x4102222d
  40c99d:	rcl    DWORD PTR [esi],0xc7
  40c9a0:	inc    edx
  40c9a1:	out    0x10,al
  40c9a3:	push   esi
  40c9a4:	fs lahf 
  40c9a6:	outs   dx,BYTE PTR ds:[esi]
  40c9a7:	clc    
  40c9a8:	push   eax
  40c9a9:	xor    eax,0x1758908d
  40c9ae:	loopne 0x40ca2b
  40c9b0:	xor    eax,DWORD PTR [edi+eiz*4+0x3b]
  40c9b4:	fdivrp st(0),st
  40c9b6:	jge    0x40c9de
  40c9b8:	fiadd  DWORD PTR [edi]
  40c9ba:	xchg   DWORD PTR [edx],ebp
  40c9bc:	loopne 0x40ca3c
  40c9be:	pop    ds
  40c9bf:	sar    BYTE PTR [ebx],0xe3
  40c9c2:	fnstcw WORD PTR fs:[ebx-0x25989d6f]
  40c9c9:	(bad)  [ecx-0x1d]
  40c9cc:	loop   0x40c995
  40c9ce:	sub    al,0xc0
  40c9d0:	shl    esi,0x37
  40c9d3:	sbb    ebp,ebx
  40c9d5:	sbb    eax,0xe1156580
  40c9da:	and    al,0x49
  40c9dc:	cmp    BYTE PTR [edi-0x266bc358],ch
  40c9e2:	repnz jmp FWORD PTR [ebx-0x2107d733]
  40c9e9:	test   al,0xbb
  40c9eb:	push   ss
  40c9ec:	push   edi
  40c9ed:	inc    edx
  40c9ee:	xor    al,0x93
  40c9f0:	dec    esi
  40c9f1:	(bad)  
  40c9f2:	mov    ds,eax
  40c9f4:	push   ecx
  40c9f5:	add    eax,0x49fedd98
  40c9fb:	jmp    0x117d:0x8d2f6ad1
  40ca02:	mov    al,ds:0x7e08600a
  40ca07:	jecxz  0x40ca1e
  40ca09:	loopne 0x40ca7a
  40ca0b:	cwde   
  40ca0c:	or     al,0xea
  40ca0e:	rol    BYTE PTR [edi+ebp*4],0xee
  40ca12:	cdq    
  40ca13:	jbe    0x40c9f4
  40ca15:	adc    esp,DWORD PTR [eax]
  40ca17:	test   al,0xca
  40ca19:	stos   BYTE PTR es:[edi],al
  40ca1a:	cmp    eax,0xa11e707c
  40ca1f:	inc    esp
  40ca20:	test   BYTE PTR [esi+0x2c4a522],dl
  40ca26:	xor    bh,BYTE PTR [ebp+0x4bf78e68]
  40ca2c:	push   esp
  40ca2d:	and    BYTE PTR [ebx],dl
  40ca2f:	or     al,0x44
  40ca31:	jae    0x40c9ef
  40ca33:	cmp    ebx,ebx
  40ca35:	daa    
  40ca36:	ret    
  40ca37:	aas    
  40ca38:	fs jl  0x40c9be
  40ca3b:	adc    eax,0x8c2d5055
  40ca40:	mov    esp,0x3af1acf3
  40ca45:	ins    DWORD PTR es:[edi],dx
  40ca46:	dec    ecx
  40ca47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca48:	push   ebx
  40ca49:	inc    ecx
  40ca4a:	jmp    0x6b38:0xc19d0313
  40ca51:	and    DWORD PTR [ebx],ecx
  40ca53:	pop    esi
  40ca54:	mov    edx,?
  40ca56:	fiadd  DWORD PTR [edi+0xa]
  40ca59:	je     0x40c9ed
  40ca5b:	loop   0x40ca1c
  40ca5d:	jbe    0x40ca12
  40ca5f:	icebp  
  40ca60:	sbb    eax,0x4defa874
  40ca65:	ret    
  40ca66:	push   ebp
  40ca67:	scas   al,BYTE PTR es:[edi]
  40ca68:	je     0x40cac1
  40ca6a:	cmp    ah,al
  40ca6c:	cmp    DWORD PTR [esi-0x37067dec],eax
  40ca72:	je     0x40ca4e
  40ca74:	cmc    
  40ca75:	les    edi,FWORD PTR [edi]
  40ca77:	xor    BYTE PTR [ecx+0x37],bh
  40ca7a:	mov    dh,0xc3
  40ca7c:	lods   eax,DWORD PTR ds:[esi]
  40ca7d:	mov    ah,0x23
  40ca7f:	div    DWORD PTR [edx+0x1c]
  40ca82:	sub    ch,bl
  40ca84:	jbe    0x40ca3d
  40ca86:	into   
  40ca87:	sub    BYTE PTR ds:0x4e434806,cl
  40ca8d:	jb     0x40cac4
  40ca8f:	sub    eax,0xd86d4af6
  40ca94:	add    eax,0x9f629d56
  40ca99:	shl    BYTE PTR [ebp+0x2c],cl
  40ca9c:	div    DWORD PTR [ecx+0x41fd0640]
  40caa2:	sti    
  40caa3:	pushf  
  40caa4:	dec    ebp
  40caa5:	add    al,0xa8
  40caa7:	cmp    ah,BYTE PTR gs:0x5ffaf14e
  40caae:	cli    
  40caaf:	mov    bh,BYTE PTR [edi]
  40cab1:	push   edi
  40cab2:	push   eax
  40cab3:	fst    DWORD PTR [esi-0x5c807fdf]
  40cab9:	stos   DWORD PTR es:[edi],eax
  40caba:	push   ds
  40cabb:	sub    eax,0x5ffb51fb
  40cac0:	push   ds
  40cac1:	xchg   esp,eax
  40cac2:	sbb    cl,bl
  40cac4:	fstp   QWORD PTR [ebx]
  40cac6:	jne    0x40cb42
  40cac8:	jg     0x40ca8f
  40caca:	adc    bh,bh
  40cacc:	out    0x13,al
  40cace:	push   ebp
  40cacf:	push   esp
  40cad0:	stos   DWORD PTR es:[edi],eax
  40cad1:	test   BYTE PTR [ebx],0xfd
  40cad4:	out    0x7c,eax
  40cad6:	push   ds
  40cad7:	cmp    al,BYTE PTR [edx]
  40cad9:	lea    esp,[ecx+ebx*8-0x6169e257]
  40cae0:	(bad)  
  40cae1:	and    ecx,ebp
  40cae3:	pop    ds
  40cae4:	jno    0x40cab0
  40cae6:	aad    0x44
  40cae8:	or     BYTE PTR [edx-0x6debaa19],bl
  40caee:	push   ds
  40caef:	push   ss
  40caf0:	mov    al,ds:0xc559708
  40caf5:	pop    edx
  40caf6:	inc    edi
  40caf7:	mov    esi,DWORD PTR [eax+0x54a2188]
  40cafd:	lods   eax,DWORD PTR ds:[esi]
  40cafe:	stos   BYTE PTR es:[edi],al
  40caff:	ret    0xf60b
  40cb02:	jge    0x40cac7
  40cb04:	sbb    eax,0x3e2fc911
  40cb09:	jb     0x40cad4
  40cb0b:	mov    ecx,0xe4d1b61f
  40cb10:	mov    esp,0xea0007ed
  40cb15:	arpl   WORD PTR [ebp+ebx*4+0x7d1878ae],bp
  40cb1c:	(bad)  
  40cb1d:	cld    
  40cb1e:	aas    
  40cb1f:	cmp    dl,bh
  40cb21:	out    0xc1,al
  40cb23:	sbb    ecx,DWORD PTR [edx+0x36]
  40cb26:	lods   eax,DWORD PTR ds:[esi]
  40cb27:	sti    
  40cb28:	jmp    0x40cb95
  40cb2a:	fs aam 0x38
  40cb2d:	es or  al,0x77
  40cb30:	sbb    ebp,0xaf436c90
  40cb36:	jo     0x40cb72
  40cb38:	mov    eax,ds:0x5a182a4d
  40cb3d:	jno    0x40cb09
  40cb3f:	cs dec edx
  40cb41:	addr16 sub eax,0xa1622a38
  40cb47:	fnstsw WORD PTR [ebp-0x1d]
  40cb4a:	inc    esi
  40cb4b:	aam    0xb5
  40cb4d:	(bad)  
  40cb4e:	rcr    BYTE PTR [ebp-0x3a2d9542],cl
  40cb54:	sbb    eax,0x9393e721
  40cb59:	push   ebp
  40cb5a:	(bad)  
  40cb5b:	out    0xc8,al
  40cb5d:	dec    esi
  40cb5e:	pop    es
  40cb5f:	out    0xf4,al
  40cb61:	sub    eax,0x61ccb199
  40cb66:	stc    
  40cb67:	mov    ds:0x950b904f,eax
  40cb6c:	das    
  40cb6d:	mov    cl,0x79
  40cb6f:	mov    bl,0x8
  40cb71:	lods   eax,DWORD PTR ds:[esi]
  40cb72:	stc    
  40cb73:	(bad)  
  40cb74:	loopne 0x40cb95
  40cb76:	pop    esi
  40cb77:	pop    esp
  40cb78:	xchg   esi,eax
  40cb79:	js     0x40cb2c
  40cb7b:	adc    ecx,esp
  40cb7d:	add    DWORD PTR [esi],eax
  40cb7f:	dec    esi
  40cb80:	push   esi
  40cb81:	push   cs
  40cb82:	out    0xc1,eax
  40cb84:	xlat   BYTE PTR ds:[ebx]
  40cb85:	jns    0x40cbd1
  40cb87:	repz je 0x40cbf8
  40cb8a:	nop
  40cb8b:	arpl   WORD PTR [esi+0x7a0a57ae],cx
  40cb91:	in     eax,dx
  40cb92:	xor    al,0x5e
  40cb94:	push   0xffffff9c
  40cb96:	stc    
  40cb97:	fsub   st,st(0)
  40cb99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb9a:	rcr    DWORD PTR [ebp*4-0x7e938f17],cl
  40cba1:	jecxz  0x40cbcf
  40cba3:	scas   al,BYTE PTR es:[edi]
  40cba4:	xor    eax,0x87f3cf6
  40cba9:	inc    ebx
  40cbaa:	test   eax,0x8075d7ef
  40cbaf:	sub    al,0x64
  40cbb1:	in     al,0xee
  40cbb3:	push   ds
  40cbb4:	fnstcw WORD PTR [ecx]
  40cbb6:	mov    ?,edx
  40cbb8:	sahf   
  40cbb9:	je     0x40cb81
  40cbbb:	daa    
  40cbbc:	dec    ebp
  40cbbd:	add    DWORD PTR [ebx],ebx
  40cbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbc0:	add    eax,0xe737795f
  40cbc5:	(bad)  
  40cbc6:	sbb    ebp,DWORD PTR [esi-0x1e5ae37]
  40cbcc:	pop    ds
  40cbcd:	dec    edi
  40cbce:	data16 std 
  40cbd0:	aaa    
  40cbd1:	outs   dx,DWORD PTR ds:[esi]
  40cbd2:	addr16 mov edx,0xb3e18f8d
  40cbd8:	inc    esi
  40cbd9:	fldenv [edx+0x67]
  40cbdc:	sub    dl,cl
  40cbde:	pushf  
  40cbdf:	mov    ch,0xc7
  40cbe1:	test   DWORD PTR [edi-0x61e4f5fa],ecx
  40cbe7:	pop    ebx
  40cbe8:	mov    ebx,0x6c274e36
  40cbed:	lahf   
  40cbee:	inc    esp
  40cbef:	neg    DWORD PTR [edi-0x1a]
  40cbf2:	loope  0x40cb79
  40cbf4:	xlat   BYTE PTR ds:[ebx]
  40cbf5:	mul    DWORD PTR [edi+0x41]
  40cbf8:	jnp    0x40cb91
  40cbfa:	imul   BYTE PTR [eax-0x6f]
  40cbfd:	push   0xbe678ce1
  40cc02:	imul   esp,DWORD PTR [eax+0x1cd570d0],0xffffffe2
  40cc09:	dec    edi
  40cc0a:	leave  
  40cc0b:	dec    esi
  40cc0c:	repnz mov edi,0x2dca8717
  40cc12:	sbb    BYTE PTR [edx+0x76],ah
  40cc15:	iret   
  40cc16:	loopne 0x40cbd3
  40cc18:	or     al,BYTE PTR [ebx+0x0]
  40cc1b:	ds mov bx,si
  40cc1f:	pop    ecx
  40cc20:	or     edx,0x2c
  40cc23:	mov    ds,WORD PTR ss:[edi+edi*1+0x1278fe12]
  40cc2b:	hlt    
  40cc2c:	je     0x40cbb3
  40cc2e:	retf   
  40cc2f:	hlt    
  40cc30:	fistp  DWORD PTR [ebp+0x4cc5844e]
  40cc36:	xchg   ecx,eax
  40cc37:	(bad)  
  40cc38:	mov    ds:0xf0bad53f,al
  40cc3d:	push   esi
  40cc3e:	pop    ecx
  40cc3f:	pop    es
  40cc40:	xor    ebx,edx
  40cc42:	ror    BYTE PTR [esi+0x8],cl
  40cc45:	sub    DWORD PTR [bp-0x6e],0xffffffc1
  40cc4a:	repnz test eax,0xb774c2d
  40cc50:	lods   eax,DWORD PTR ds:[esi]
  40cc51:	jnp    0x40ccb6
  40cc53:	dec    esi
  40cc54:	inc    ebx
  40cc55:	push   es
  40cc56:	loopne 0x40cc31
  40cc58:	data16 lahf 
  40cc5a:	aas    
  40cc5b:	pop    ss
  40cc5c:	aad    0xbb
  40cc5e:	push   ebx
  40cc5f:	push   cs
  40cc60:	mov    DWORD PTR [ebp+0x6e],edi
  40cc63:	push   eax
  40cc64:	push   esi
  40cc65:	mov    edi,0xf8edca0f
  40cc6a:	mov    cl,ah
  40cc6c:	call   ecx
  40cc6e:	jne    0x40cc2e
  40cc70:	pop    eax
  40cc71:	adc    ecx,ebp
  40cc73:	in     al,dx
  40cc74:	mov    ebp,0x941f939c
  40cc79:	pop    esi
  40cc7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc7b:	(bad)  
  40cc7d:	mov    esi,0xb4b29d2
  40cc82:	aas    
  40cc83:	std    
  40cc84:	push   ecx
  40cc85:	aaa    
  40cc86:	gs pop esi
  40cc88:	shl    ah,1
  40cc8a:	mov    bl,0x20
  40cc8c:	(bad)
  40cc8f:	jg     0x40cc24
  40cc91:	addr16 adc al,0x48
  40cc94:	lea    eax,[eax-0x28bdb50a]
  40cc9a:	mov    esi,0xb7e9b69f
  40cc9f:	retf   
  40cca0:	shl    BYTE PTR ds:0xf4b1c5f,1
  40cca6:	rcl    cl,cl
  40cca8:	add    DWORD PTR [eax],eax
  40ccaa:	int3   
  40ccab:	(bad)  
  40ccac:	(bad)  
  40ccad:	rol    BYTE PTR [eax+0x12262c2c],0x4c
  40ccb4:	mov    WORD PTR [esi],fs
  40ccb6:	mov    al,0x8a
  40ccb8:	mov    BYTE PTR ds:0xc2dfeb2b,ah
  40ccbe:	cmp    ebx,DWORD PTR [esp+edi*2+0x39]
  40ccc2:	jnp    0x40ccae
  40ccc4:	xchg   ebp,eax
  40ccc5:	ins    DWORD PTR es:[edi],dx
  40ccc6:	popf   
  40ccc7:	jae    0x40cc73
  40ccc9:	pop    ebx
  40ccca:	xchg   ebx,eax
  40cccb:	xor    BYTE PTR [ebp-0x53],bl
  40ccce:	cs out dx,al
  40ccd0:	and    cl,al
  40ccd2:	xchg   ecx,eax
  40ccd3:	fcom   DWORD PTR [ecx]
  40ccd5:	pop    edx
  40ccd6:	mov    WORD PTR ds:0x3325d3a6,?
  40ccdc:	jbe    0xfd2a0c0
  40cce2:	pop    ebp
  40cce3:	popa   
  40cce4:	cmp    eax,0xfe29fae5
  40cce9:	mul    DWORD PTR [edi+0x4f3a7098]
  40ccef:	and    eax,DWORD PTR [eax+0x18]
  40ccf2:	popa   
  40ccf3:	ins    BYTE PTR es:[edi],dx
  40ccf4:	call   FWORD PTR [ecx+0x2d05debd]
  40ccfa:	pop    esi
  40ccfb:	mov    eax,0x3f0bb236
  40cd00:	or     al,0x15
  40cd02:	ret    
  40cd03:	xchg   edx,eax
  40cd04:	in     eax,dx
  40cd05:	pop    eax
  40cd06:	aad    0x5e
  40cd08:	int3   
  40cd09:	add    BYTE PTR [esi+0x741699a2],ah
  40cd0f:	xchg   ecx,eax
  40cd10:	(bad)  
  40cd11:	aam    0xf3
  40cd13:	pushf  
  40cd14:	iret   
  40cd15:	push   ebp
  40cd16:	loopne 0x40ccf8
  40cd18:	ret    
  40cd19:	lods   al,BYTE PTR ds:[esi]
  40cd1a:	push   eax
  40cd1b:	das    
  40cd1c:	int    0x9e
  40cd1e:	or     eax,0x4d8a2d92
  40cd23:	ret    0xf99e
  40cd26:	sbb    al,0xfb
  40cd28:	mov    eax,ds:0xffb7b686
  40cd2d:	cmp    ebx,DWORD PTR [esi]
  40cd2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd30:	out    dx,al
  40cd31:	dec    edx
  40cd32:	sbb    al,0x6e
  40cd34:	jge    0x40cd5e
  40cd36:	test   eax,0x131abac
  40cd3b:	sub    cl,bh
  40cd3d:	rcl    DWORD PTR [edx],1
  40cd3f:	retf   
  40cd40:	adc    al,0xec
  40cd42:	imul   ecx,DWORD PTR [edi],0xffffff93
  40cd45:	xor    eax,0xb0effe41
  40cd4a:	adc    ebx,DWORD PTR [ecx+esi*1]
  40cd4d:	js     0x40cd14
  40cd4f:	jns    0x40cda6
  40cd51:	mov    esp,0x7df2ca88
  40cd56:	jne    0x40cd59
  40cd58:	jae    0x40cd27
  40cd5a:	push   esi
  40cd5b:	mov    ds:0x17c019f8,al
  40cd60:	push   ecx
  40cd61:	sub    BYTE PTR [edi+0x4513af01],bh
  40cd67:	scas   al,BYTE PTR es:[edi]
  40cd68:	dec    esi
  40cd69:	mov    DWORD PTR [ebx-0x22],ecx
  40cd6c:	push   es
  40cd6d:	push   eax
  40cd6e:	push   cs
  40cd6f:	ds repnz gs inc ecx
  40cd73:	gs xchg esp,eax
  40cd75:	out    0xa2,eax
  40cd77:	xchg   edx,eax
  40cd78:	ins    DWORD PTR es:[edi],dx
  40cd79:	sub    al,0x5e
  40cd7b:	test   al,ch
  40cd7d:	push   eax
  40cd7e:	jns    0x40cdc7
  40cd80:	push   ebp
  40cd81:	pop    ebx
  40cd82:	dec    eax
  40cd84:	sbb    esp,DWORD PTR [eax]
  40cd86:	cmp    cl,cl
  40cd88:	inc    edx
  40cd89:	mov    al,ds:0xee0c623c
  40cd8e:	xchg   BYTE PTR [esi-0x59678033],ch
  40cd94:	fwait
  40cd95:	dec    esi
  40cd96:	push   edx
  40cd97:	xchg   edx,eax
  40cd98:	retf   0x9c4a
  40cd9b:	push   es
  40cd9c:	fnstsw WORD PTR [ebp+0x43]
  40cd9f:	cwde   
  40cda0:	and    esp,DWORD PTR [edi+0x345d654a]
  40cda6:	push   ss
  40cda7:	pop    esp
  40cda8:	jecxz  0x40cd3a
  40cdaa:	and    BYTE PTR [edx],ah
  40cdac:	out    0x3d,eax
  40cdae:	lahf   
  40cdaf:	add    edi,DWORD PTR [ebx+0x12]
  40cdb2:	clc    
  40cdb3:	call   0xd3ce0a69
  40cdb8:	lds    esp,FWORD PTR [eax]
  40cdba:	xchg   esp,eax
  40cdbb:	out    0x10,eax
  40cdbd:	enter  0x745e,0xf3
  40cdc1:	in     eax,dx
  40cdc2:	xchg   esp,eax
  40cdc3:	stos   BYTE PTR es:[edi],al
  40cdc4:	mov    bl,0xa9
  40cdc6:	xchg   BYTE PTR [eax+0xefa1303],cl
  40cdcc:	adc    DWORD PTR [ebp+0x4e434ee2],0x50
  40cdd3:	jge    0x40ce10
  40cdd5:	fist   DWORD PTR [ecx+edi*4-0x1b29ad82]
  40cddc:	rcr    DWORD PTR [ebx-0x136d999f],1
  40cde2:	cmc    
  40cde3:	(bad)  
  40cde4:	hlt    
  40cde5:	push   esp
  40cde6:	adc    DWORD PTR [ecx],edi
  40cde8:	test   al,bl
  40cdea:	and    BYTE PTR [ecx+0x2c],al
  40cded:	xchg   esi,eax
  40cdee:	push   ss
  40cdef:	add    edx,DWORD PTR [edx+0x2b]
  40cdf2:	out    dx,al
  40cdf3:	pop    esi
  40cdf4:	inc    ebx
  40cdf5:	pop    edx
  40cdf6:	ds loopne 0x40ce6c
  40cdf9:	js     0x40ce51
  40cdfb:	bound  edi,QWORD PTR [esi+0x5b]
  40cdfe:	pop    ebx
  40cdff:	sbb    eax,0xc58baa48
  40ce04:	shr    BYTE PTR [ebp-0x203dbb43],1
  40ce0a:	arpl   WORD PTR [edi+0x4a60df77],sp
  40ce10:	and    al,0x79
  40ce12:	sti    
  40ce13:	call   0xf4f7:0x4a370d69
  40ce1a:	pop    ecx
  40ce1b:	stos   BYTE PTR es:[edi],al
  40ce1c:	cwde   
  40ce1d:	push   0x3e
  40ce1f:	and    eax,0xbee5ea5b
  40ce24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce25:	sub    BYTE PTR [ecx],dl
  40ce27:	cmp    BYTE PTR [eax+0xcca9a6d],bh
  40ce2d:	sbb    BYTE PTR [ebp-0x3d],ch
  40ce30:	inc    esi
  40ce31:	mov    ebp,0xd775c7eb
  40ce36:	call   0x60d6203b
  40ce3b:	(bad)  
  40ce3d:	inc    edx
  40ce3e:	sub    bl,BYTE PTR [esi]
  40ce40:	jne    0x40cdda
  40ce42:	push   ebx
  40ce43:	jecxz  0x40ce9d
  40ce45:	jae    0x40ce49
  40ce47:	adc    BYTE PTR [ebp-0x48],0x7
  40ce4b:	outs   dx,DWORD PTR ds:[esi]
  40ce4c:	ins    DWORD PTR es:[edi],dx
  40ce4d:	retf   
  40ce4e:	mov    ebx,edi
  40ce50:	not    DWORD PTR [ecx-0x1d]
  40ce53:	dec    edx
  40ce54:	daa    
  40ce55:	pop    esi
  40ce56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce57:	xor    al,0x65
  40ce59:	add    al,0x91
  40ce5b:	les    esp,FWORD PTR [eax+edi*2]
  40ce5e:	(bad)  
  40ce5f:	push   esp
  40ce60:	stos   BYTE PTR es:[edi],al
  40ce61:	js     0x40ce9f
  40ce63:	inc    esp
  40ce64:	jbe    0x40ce72
  40ce66:	add    al,0xe6
  40ce68:	inc    edx
  40ce69:	shr    ah,1
  40ce6b:	mov    ebx,DWORD PTR [edx+0x41617f30]
  40ce71:	popf   
  40ce72:	push   0x76
  40ce74:	mov    DWORD PTR [ebx+0x5aecb6f7],esp
  40ce7a:	and    bh,BYTE PTR [ebp+0x6e]
  40ce7d:	stc    
  40ce7e:	ror    BYTE PTR [ebx],0xc1
  40ce81:	gs out 0x39,eax
  40ce84:	xchg   ecx,eax
  40ce85:	mov    ds:0x6b2e8d88,eax
  40ce8a:	cmc    
  40ce8b:	xchg   edx,eax
  40ce8c:	inc    eax
  40ce8d:	inc    ecx
  40ce8e:	pop    ds
  40ce8f:	ja     0x40ceef
  40ce91:	mov    bl,0x57
  40ce93:	mov    esi,DWORD PTR ds:0xc095cf
  40ce99:	mov    ecx,0x6b2c38b9
  40ce9e:	test   eax,0x847f29df
  40cea3:	pushf  
  40cea4:	out    dx,al
  40cea5:	(bad)  
  40cea6:	in     al,dx
  40cea7:	mov    BYTE PTR [edx+0x58e09bb7],0x4b
  40ceae:	iret   
  40ceaf:	sub    esp,DWORD PTR [ecx+0x77]
  40ceb2:	and    BYTE PTR [ebx-0x7fd44e8f],cl
  40ceb8:	or     al,0x4f
  40ceba:	push   eax
  40cebb:	std    
  40cebc:	fs repnz pop ebx
  40cebf:	dec    BYTE PTR [edx+0x7d81d2ae]
  40cec5:	lea    ecx,[edi+0x61]
  40cec8:	stos   DWORD PTR es:[edi],eax
  40cec9:	jp     0x40ced1
  40cecb:	loop   0x40cef6
  40cecd:	aad    0x6f
  40cecf:	loopne 0x40ce80
  40ced1:	xlat   BYTE PTR ds:[ebx]
  40ced2:	jl     0x40ce74
  40ced4:	push   0xffffffde
  40ced6:	loop   0x40ced8
  40ced8:	adc    dh,al
  40ceda:	sar    DWORD PTR ds:0x2dc52aa1,0xc5
  40cee1:	add    BYTE PTR [eax],bh
  40cee3:	or     BYTE PTR fs:[ebp-0x4f],dh
  40cee7:	mov    db0,ecx
  40ceea:	dec    esp
  40ceeb:	mov    dl,0x6f
  40ceed:	pop    ss
  40ceee:	cmp    BYTE PTR [edx],0xe5
  40cef1:	data16 scas al,BYTE PTR es:[edi]
  40cef3:	add    DWORD PTR [ecx-0x5b],esp
  40cef6:	mov    bl,0x93
  40cef8:	cdq    
  40cef9:	jmp    0x40ceab
  40cefb:	lods   al,BYTE PTR ds:[esi]
  40cefc:	nop
  40cefd:	sbb    DWORD PTR [eax],ecx
  40ceff:	mov    dh,0x49
  40cf01:	icebp  
  40cf02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf03:	daa    
  40cf04:	or     al,0x45
  40cf06:	mov    esp,0x3083edd0
  40cf0b:	xchg   esi,eax
  40cf0c:	repz into 
  40cf0e:	int    0xe8
  40cf10:	es mov ah,0x9c
  40cf13:	clc    
  40cf14:	mov    ah,0xc4
  40cf16:	xchg   esi,eax
  40cf17:	or     edx,DWORD PTR [ebx-0x7011be6c]
  40cf1d:	(bad)  
  40cf1e:	imul   edi,DWORD PTR [edi-0xf],0xe89469c8
  40cf25:	lea    edi,[ebp-0x30]
  40cf28:	adc    ah,BYTE PTR [eax]
  40cf2a:	ds xchg esp,eax
  40cf2c:	xchg   ebx,eax
  40cf2d:	or     al,BYTE PTR [edx+0x352a5465]
  40cf33:	mov    cl,BYTE PTR [edx-0x4e]
  40cf36:	and    dl,BYTE PTR [edx+eiz*1]
  40cf39:	adc    eax,0xfe069f53
  40cf3e:	jl     0x40ced1
  40cf40:	outs   dx,DWORD PTR ds:[esi]
  40cf41:	cwde   
  40cf42:	mov    esp,0xa71a9a05
  40cf47:	mov    esi,0xe6bdfa8d
  40cf4c:	fs leave 
  40cf4e:	add    ecx,DWORD PTR [eax-0x7d]
  40cf51:	pushf  
  40cf52:	inc    ebx
  40cf53:	rol    BYTE PTR [eax+0x6b],0xd3
  40cf57:	sbb    ch,BYTE PTR [edx-0x7e]
  40cf5a:	or     edx,DWORD PTR [eax+ebx*8-0x40]
  40cf5e:	enter  0x8494,0x99
  40cf62:	ins    BYTE PTR es:[edi],dx
  40cf63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf64:	mov    es,WORD PTR cs:[edx-0x76]
  40cf68:	xchg   ecx,eax
  40cf69:	and    edx,ecx
  40cf6b:	push   es
  40cf6c:	shl    cl,0xe4
  40cf6f:	dec    edx
  40cf70:	dec    eax
  40cf71:	inc    ebx
  40cf72:	xor    al,0x71
  40cf74:	enter  0xbac4,0x8a
  40cf78:	jno    0x40cfa6
  40cf7a:	fcom   DWORD PTR [edx-0x5b]
  40cf7d:	iret   
  40cf7e:	adc    al,0x9b
  40cf80:	push   esp
  40cf81:	hlt    
  40cf82:	popa   
  40cf83:	ret    
  40cf84:	xchg   edi,eax
  40cf85:	adc    edi,DWORD PTR [esi+esi*4+0x3f411b96]
  40cf8c:	outs   dx,DWORD PTR ds:[esi]
  40cf8d:	mov    ds:0x28bead3f,al
  40cf92:	es mov edi,0x1a7cdf12
  40cf98:	fdiv   DWORD PTR [eax-0x56fff63]
  40cf9e:	rcl    dl,0x49
  40cfa1:	xor    BYTE PTR [ebx-0x56],ah
  40cfa4:	scas   eax,DWORD PTR es:[edi]
  40cfa5:	cdq    
  40cfa6:	mov    DWORD PTR [ebx-0x29],ebp
  40cfa9:	xchg   esp,eax
  40cfaa:	scas   al,BYTE PTR es:[edi]
  40cfab:	in     al,dx
  40cfac:	clc    
  40cfad:	push   esi
  40cfae:	ins    BYTE PTR es:[edi],dx
  40cfaf:	push   ss
  40cfb0:	jg     0x40cfc7
  40cfb2:	mov    edx,0xf83ae96b
  40cfb7:	or     bl,BYTE PTR [ecx+0x54]
  40cfba:	retf   0x414b
  40cfbd:	call   0x8710:0x60de427c
  40cfc4:	pop    cx
  40cfc6:	lea    eax,[ebx+edx*2-0xf]
  40cfca:	hlt    
  40cfcb:	xchg   ecx,eax
  40cfcc:	and    DWORD PTR [ebx+esi*4+0x65dac0b6],esi
  40cfd3:	(bad)  
  40cfd5:	jo     0x40cf60
  40cfd7:	jo     0x40d01d
  40cfd9:	jl     0x40d046
  40cfdb:	in     al,0xaf
  40cfdd:	inc    esi
  40cfde:	add    eax,eax
  40cfe0:	scas   al,BYTE PTR es:[edi]
  40cfe1:	pop    ds
  40cfe2:	xchg   ebp,eax
  40cfe3:	jmp    0x9880:0xd226218d
  40cfea:	fld    st(6)
  40cfec:	mov    ds:0x56cfcf6c,eax
  40cff1:	sar    BYTE PTR [eax+0x5d0dd1b0],0xe
  40cff8:	mov    ds:0x5d297b86,eax
  40cffd:	pop    esi
  40cffe:	loopne 0x40d07c
  40d000:	aas    
  40d001:	lds    ebx,FWORD PTR [edi]
  40d003:	ins    DWORD PTR es:[edi],dx
  40d004:	in     al,dx
  40d005:	test   DWORD PTR [ecx],ebx
  40d007:	or     ebp,DWORD PTR [eax]
  40d009:	adc    eax,0x2dd698f3
  40d00e:	dec    ecx
  40d00f:	sar    DWORD PTR [eax-0xfc2d4d6],1
  40d015:	int    0xdc
  40d017:	shl    BYTE PTR [ebx+0x5cdc2618],cl
  40d01d:	dec    ebp
  40d01e:	xchg   edx,eax
  40d01f:	lahf   
  40d020:	dec    eax
  40d021:	fisttp WORD PTR [edi+0xbe24c04]
  40d027:	jmp    0x55f4:0x9f28f2b0
  40d02e:	push   cs
  40d02f:	push   0x56
  40d031:	std    
  40d032:	fldcw  WORD PTR [edx]
  40d034:	xchg   ecx,eax
  40d035:	push   ebp
  40d036:	jno    0x40d03c
  40d038:	scas   al,BYTE PTR es:[edi]
  40d039:	lock out 0x74,al
  40d03c:	test   BYTE PTR [esi+0x9d9a700],bl
  40d042:	push   0xffffffa7
  40d044:	xor    ah,bl
  40d046:	mov    al,ds:0x197eb47d
  40d04b:	jmp    0x40d06c
  40d04d:	stos   BYTE PTR es:[edi],al
  40d04e:	fucomip st,st(3)
  40d050:	bound  edi,QWORD PTR [ecx-0x1c47fa6c]
  40d056:	lods   al,BYTE PTR ds:[esi]
  40d057:	sbb    eax,0x7164fb0f
  40d05c:	xchg   esp,eax
  40d05d:	jle    0x40d021
  40d05f:	test   al,0x76
  40d061:	jne    0x40d075
  40d063:	jbe    0x40d0df
  40d065:	inc    eax
  40d066:	test   BYTE PTR [eax+0x7d6da71b],dl
  40d06c:	or     al,0x1d
  40d06e:	xchg   DWORD PTR [ebx],esi
  40d070:	mov    WORD PTR [ecx-0x1c],es
  40d073:	stos   DWORD PTR es:[edi],eax
  40d074:	int    0xad
  40d076:	pop    esp
  40d077:	dec    ecx
  40d078:	test   al,0x24
  40d07a:	pop    ds
  40d07b:	sbb    ebx,ecx
  40d07d:	xchg   BYTE PTR [ecx],dl
  40d07f:	push   esp
  40d080:	sbb    ch,al
  40d082:	fs mov esp,0x534a06d2
  40d088:	arpl   WORD PTR [edi+0x12],bp
  40d08b:	dec    edx
  40d08c:	xchg   ebp,eax
  40d08d:	addr16 popa 
  40d08f:	sub    BYTE PTR [edi-0x45],bl
  40d092:	and    BYTE PTR [ecx-0x5d],0x9b
  40d096:	inc    ebp
  40d097:	jns    0x40d027
  40d099:	mov    ebx,0x93f96309
  40d09e:	xor    DWORD PTR [edx],ecx
  40d0a0:	and    BYTE PTR ds:0x404fccc5,bl
  40d0a6:	mov    edx,0xfbe4c570
  40d0ab:	nop
  40d0ac:	fsub   QWORD PTR [ecx]
  40d0ae:	push   esp
  40d0af:	sbb    BYTE PTR ds:0x48c30808,0x2
  40d0b6:	dec    esi
  40d0b7:	mov    dh,0xdd
  40d0b9:	mov    dh,0x81
  40d0bb:	cmp    ah,dl
  40d0bd:	or     esp,DWORD PTR [ebx+0x58]
  40d0c0:	int3   
  40d0c1:	loope  0x40d10e
  40d0c3:	jg     0x40d05f
  40d0c5:	es ret 0x390f
  40d0c9:	mov    ch,0x9d
  40d0cb:	int    0x12
  40d0cd:	pop    ebx
  40d0ce:	inc    ebp
  40d0cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0d0:	jmp    0x7915:0x49ffb2d3
  40d0d7:	cmp    eax,0x46a8ea9f
  40d0dc:	mov    al,BYTE PTR [eax-0x37]
  40d0df:	jmp    0x40d116
  40d0e1:	cwde   
  40d0e2:	es fwait
  40d0e4:	aaa    
  40d0e5:	jg     0x40d161
  40d0e7:	out    0xc5,al
  40d0e9:	std    
  40d0ea:	mov    dl,0xfa
  40d0ec:	je     0x40d0b6
  40d0ee:	and    DWORD PTR [edx+0x3e2b51ab],0xfffffff9
  40d0f5:	retf   0x20fe
  40d0f8:	sahf   
  40d0f9:	outs   dx,DWORD PTR ds:[esi]
  40d0fa:	test   eax,0xcf52a646
  40d0ff:	add    BYTE PTR [ecx-0x7a],0xfd
  40d103:	mov    edx,0xf3020d87
  40d108:	pusha  
  40d109:	push   ecx
  40d10a:	mov    bh,0x75
  40d10c:	jle    0x40d17a
  40d10e:	or     BYTE PTR [ecx+0x33b412f0],ah
  40d114:	pop    esp
  40d115:	mov    ds:0x6ac2f9ff,eax
  40d11a:	pushf  
  40d11b:	inc    esi
  40d11c:	clc    
  40d11d:	and    BYTE PTR [esi],0x6f
  40d120:	jno    0x40d1a0
  40d122:	dec    edx
  40d123:	les    edx,FWORD PTR [edx+0x1e]
  40d126:	adc    BYTE PTR [ecx-0x19],ah
  40d129:	aad    0x7b
  40d12b:	sbb    eax,0xb080a304
  40d130:	std    
  40d131:	pop    ebx
  40d132:	fdivr  DWORD PTR [edi+esi*1-0x7d]
  40d136:	dec    esi
  40d137:	lods   eax,DWORD PTR ds:[esi]
  40d138:	cmp    dl,bh
  40d13a:	ret    
  40d13b:	mov    ecx,0x73e185da
  40d140:	pop    edi
  40d141:	aaa    
  40d142:	xor    BYTE PTR [ebx+0x7f],bh
  40d145:	pushf  
  40d146:	mov    al,0x3
  40d148:	imul   esp,edi,0xffffffdc
  40d14b:	mov    al,0x1c
  40d14d:	mov    bl,0x67
  40d14f:	scas   eax,DWORD PTR es:[edi]
  40d150:	test   eax,0xd5aca5eb
  40d155:	add    eax,0x32c574b2
  40d15a:	pop    ds
  40d15b:	add    eax,0x2245749e
  40d160:	test   al,0xaa
  40d162:	and    esi,eax
  40d164:	stc    
  40d165:	or     ecx,esi
  40d167:	lock push ebp
  40d169:	das    
  40d16a:	push   esp
  40d16b:	jae    0x40d114
  40d16d:	mov    ?,esp
  40d16f:	jne    0x40d11e
  40d171:	ins    BYTE PTR es:[edi],dx
  40d172:	or     al,0xac
  40d174:	loope  0x40d115
  40d176:	push   edi
  40d177:	shr    DWORD PTR [edx+ebp*4],cl
  40d17a:	mov    bx,0x8efd
  40d17e:	leave  
  40d17f:	fmul   DWORD PTR [edi+eax*4-0x37]
  40d183:	sub    dh,cl
  40d185:	retf   0x4314
  40d188:	add    eax,0x80ea9a80
  40d18d:	xchg   edi,eax
  40d18e:	in     eax,dx
  40d18f:	mov    al,ds:0xcb4d0738
  40d194:	mov    al,ds:0xcb4708fe
  40d199:	mov    cl,0x81
  40d19b:	add    al,0xe2
  40d19d:	not    DWORD PTR [ecx+0x86546c1]
  40d1a3:	les    cx,DWORD PTR [edi+0x72071225]
  40d1aa:	(bad)  
  40d1ac:	mov    esi,0xc69411f7
  40d1b1:	push   ebx
  40d1b2:	and    al,0xdf
  40d1b4:	jns    0x40d1b4
  40d1b6:	dec    ebx
  40d1b7:	rol    DWORD PTR [ebp*2+0x299d4e91],0xd7
  40d1bf:	gs mov bh,0xbd
  40d1c2:	adc    ah,BYTE PTR [edi+0x26ee92fe]
  40d1c8:	call   0x702d25b3
  40d1cd:	ret    0xa846
  40d1d0:	dec    esi
  40d1d1:	retf   0x8514
  40d1d4:	mov    dh,0xd7
  40d1d6:	lahf   
  40d1d7:	js     0x40d1bd
  40d1d9:	jp     0x40d173
  40d1db:	push   ebp
  40d1dc:	dec    esp
  40d1dd:	mov    esi,0x7e3ce0ae
  40d1e2:	or     al,0x71
  40d1e4:	sti    
  40d1e5:	test   BYTE PTR [edi+edx*8-0x70],bl
  40d1e9:	inc    esi
  40d1ea:	or     eax,0x33f8dfd2
  40d1ef:	push   eax
  40d1f0:	je     0x40d175
  40d1f2:	xor    dh,BYTE PTR [edi-0x796e62f8]
  40d1f8:	mov    eax,0xb86cf846
  40d1fd:	inc    ecx
  40d1fe:	inc    esi
  40d1ff:	out    0xf0,al
  40d201:	xchg   esi,eax
  40d202:	clc    
  40d203:	pop    ecx
  40d204:	popa   
  40d205:	inc    esp
  40d206:	fldenv [esp+eax*8+0x6524a86c]
  40d20d:	or     DWORD PTR [ecx+0x1a48dc47],ebp
  40d213:	inc    edx
  40d214:	jae    0x40d19b
  40d216:	pusha  
  40d217:	hlt    
  40d218:	add    dh,BYTE PTR [ebp-0x3b6d79e8]
  40d21e:	popf   
  40d21f:	push   cs
  40d220:	xchg   edi,eax
  40d221:	das    
  40d222:	outs   dx,DWORD PTR ds:[esi]
  40d223:	lea    ebx,[ebx-0x80]
  40d226:	inc    edx
  40d227:	push   esi
  40d228:	jno    0x40d249
  40d22a:	das    
  40d22b:	add    eax,0xca274df0
  40d230:	xchg   esp,eax
  40d231:	jns    0x40d1bb
  40d233:	xchg   BYTE PTR [edx+0x64],bh
  40d236:	push   ebp
  40d237:	mov    ah,BYTE PTR [ebx+0xc]
  40d23a:	mov    bl,0xb1
  40d23c:	xchg   ecx,eax
  40d23d:	mov    ds:0x61fb7d54,al
  40d242:	test   BYTE PTR [eax+0x179a673],0x6d
  40d249:	stos   BYTE PTR es:[edi],al
  40d24a:	inc    edx
  40d24b:	cmp    BYTE PTR ds:0xb389dbbc,cl
  40d251:	jl     0x40d1f9
  40d253:	dec    edx
  40d254:	mov    esp,0x70587e1a
  40d259:	sbb    eax,0xb317528b
  40d25e:	js     0x40d28d
  40d260:	mov    esp,0x6c281257
  40d265:	mov    dl,BYTE PTR [ebx]
  40d267:	retf   0x7767
  40d26a:	nop
  40d26b:	and    eax,0xedc967d5
  40d270:	jle    0x40d1f3
  40d272:	push   0x1e190134
  40d277:	sub    esi,DWORD PTR [esi-0x603afe8e]
  40d27d:	xchg   ebx,eax
  40d27e:	fadd   st(1),st
  40d280:	or     bl,cl
  40d282:	mov    cl,0x48
  40d284:	cmp    edx,esi
  40d286:	adc    esi,DWORD PTR [ebx-0x15395f72]
  40d28c:	mov    ch,0xa8
  40d28e:	fist   WORD PTR [eax+0x558aff05]
  40d294:	cmc    
  40d295:	or     dh,0x44
  40d298:	call   0xa771:0x76164fdb
  40d29f:	sbb    eax,0x35caf022
  40d2a4:	xlat   BYTE PTR ds:[ebx]
  40d2a5:	test   al,0xea
  40d2a7:	push   cs
  40d2a8:	in     eax,0x52
  40d2aa:	fimul  WORD PTR ds:0x5065f1f4
  40d2b0:	xlat   BYTE PTR ds:[ebx]
  40d2b1:	mov    esp,0x4f5bb3e8
  40d2b6:	dec    eax
  40d2b7:	xchg   ebp,eax
  40d2b8:	dec    eax
  40d2b9:	icebp  
  40d2ba:	ret    
  40d2bb:	(bad)  
  40d2bc:	mov    ecx,0x69b5e45d
  40d2c1:	cmp    cl,BYTE PTR [ebx-0x55]
  40d2c4:	pop    ebp
  40d2c5:	jle    0x40d2ad
  40d2c7:	push   eax
  40d2c8:	dec    esp
  40d2c9:	ror    ch,1
  40d2cb:	mov    ebp,0x98bd2b7b
  40d2d0:	ret    0x55a8
  40d2d3:	jbe    0x40d25b
  40d2d5:	je     0x40d302
  40d2d7:	inc    edi
  40d2d8:	push   ds
  40d2d9:	push   cs
  40d2da:	aaa    
  40d2db:	cld    
  40d2dc:	jge    0x40d28b
  40d2de:	(bad)  
  40d2df:	sub    ecx,eax
  40d2e1:	xchg   esi,eax
  40d2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e3:	hlt    
  40d2e4:	mov    bh,0xac
  40d2e6:	fidiv  WORD PTR [edx-0x6a797a40]
  40d2ec:	mov    ebx,0xc051da6c
  40d2f1:	or     dl,BYTE PTR [edx-0x28daf27f]
  40d2f7:	(bad)  
  40d2f8:	cmp    ebx,DWORD PTR [ebp-0x65403397]
  40d2fe:	mov    edi,0x3045c860
  40d303:	(bad)  
  40d304:	pop    esi
  40d305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d306:	pop    esi
  40d307:	test   ebx,edx
  40d309:	stos   DWORD PTR es:[edi],eax
  40d30a:	mov    al,0x15
  40d30c:	mov    al,0xee
  40d30e:	pop    ebx
  40d30f:	inc    ebx
  40d310:	out    0x17,al
  40d312:	out    dx,al
  40d313:	lods   al,BYTE PTR ds:[esi]
  40d314:	cmp    bh,cl
  40d316:	sbb    DWORD PTR [esi],ecx
  40d318:	out    0x2c,al
  40d31a:	fist   DWORD PTR [esi-0x14]
  40d31d:	adc    eax,0x9d13c9c7
  40d322:	xor    DWORD PTR [ecx+ebp*1+0x2c3b80cc],0x47
  40d32a:	inc    ecx
  40d32b:	push   eax
  40d32c:	das    
  40d32d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d32e:	pop    ebx
  40d32f:	imul   esp,DWORD PTR [eax],0x483ce0c9
  40d335:	pop    esp
  40d336:	js     0x40d316
  40d338:	inc    esi
  40d339:	ficom  WORD PTR [ebp-0x58b217a4]
  40d33f:	pop    ebx
  40d340:	sbb    dl,BYTE PTR [ebx]
  40d342:	xchg   edx,eax
  40d343:	push   ebx
  40d344:	mov    al,es:0x65f339e3
  40d34a:	lock xor cl,BYTE PTR [ebx-0x1f]
  40d34e:	sbb    BYTE PTR [esi+0x6b810387],dl
  40d354:	jmp    0x40d304
  40d356:	(bad)  
  40d358:	push   0xffffff85
  40d35a:	adc    ebx,DWORD PTR [ecx+0x43]
  40d35d:	dec    ebp
  40d35e:	cmc    
  40d35f:	push   0x1d3f3bef
  40d364:	ins    DWORD PTR es:[edi],dx
  40d365:	mov    ch,0xc2
  40d367:	jge    0x40d3cb
  40d369:	adc    al,0x6
  40d36b:	std    
  40d36c:	retf   0xd313
  40d36f:	imul   edx,DWORD PTR [edi],0xffffffe4
  40d372:	fild   DWORD PTR [eax]
  40d374:	inc    ebx
  40d375:	add    al,0x91
  40d378:	push   ebx
  40d379:	in     eax,dx
  40d37a:	aad    0x81
  40d37c:	mov    DWORD PTR [esi+0xc],ebp
  40d37f:	rol    BYTE PTR [ebx-0x7],1
  40d382:	fcmovbe st,st(4)
  40d384:	or     eax,0xac1acedb
  40d389:	sar    DWORD PTR [eax+0xd0021d],0x52
  40d390:	pop    edi
  40d391:	mov    dh,0xd2
  40d393:	fld    TBYTE PTR [esi]
  40d395:	or     esp,DWORD PTR [eax+0x1f]
  40d398:	sbb    ecx,DWORD PTR [edi-0x1a]
  40d39b:	add    ebp,DWORD PTR [esi-0x14]
  40d39e:	push   edi
  40d39f:	pop    DWORD PTR [edx]
  40d3a1:	icebp  
  40d3a2:	pushf  
  40d3a3:	or     esi,DWORD PTR [ecx+0x27]
  40d3a6:	push   ebx
  40d3a7:	cmp    al,0xd2
  40d3a9:	je     0x40d406
  40d3ab:	jae    0x40d3ec
  40d3ad:	pop    es
  40d3ae:	xchg   BYTE PTR [edx-0x24642fbc],ah
  40d3b4:	jno    0x40d33e
  40d3b6:	add    BYTE PTR ds:0x57e23b27,0xf0
  40d3bd:	cmp    DWORD PTR [edx],eax
  40d3bf:	push   edi
  40d3c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3c1:	xchg   esi,eax
  40d3c2:	jge    0x40d430
  40d3c4:	pop    es
  40d3c5:	and    DWORD PTR [ebp+0x54],edx
  40d3c8:	fnsave [ebp-0xf]
  40d3cb:	xor    ebp,DWORD PTR [ebx]
  40d3cd:	adc    ah,BYTE PTR [ebp-0x3f]
  40d3d0:	retf   0x6488
  40d3d3:	mov    eax,DWORD PTR [ebx-0x7]
  40d3d6:	mov    edx,DWORD PTR [ebp-0x8]
  40d3d9:	and    DWORD PTR ds:0x42c008,0x42b004
  40d3e3:	xor    ecx,eax
  40d3e5:	sbb    DWORD PTR ds:0x42c008,0x693a
  40d3ef:	xor    edx,eax
  40d3f1:	adc    DWORD PTR ds:0x42c00c,0x42b014
  40d3fb:	sub    ecx,edx
  40d3fd:	sub    ecx,esi
  40d3ff:	xor    ecx,eax
  40d401:	mov    DWORD PTR [ebp+0x8],ecx
  40d404:	mov    ecx,DWORD PTR [ebp+0x8]
  40d407:	adc    DWORD PTR ds:0x42d010,edi
  40d40d:	mov    edx,DWORD PTR [ebp-0x64]
  40d410:	lea    ecx,[edx+ecx*1+0x5708f4]
  40d417:	sub    DWORD PTR ds:0x42d014,ebx
  40d41d:	mov    DWORD PTR [ebp-0x64],ecx
  40d420:	mov    ecx,DWORD PTR [ebp+0x8]
  40d423:	sub    DWORD PTR ds:0x42a00c,0x429024
  40d42d:	mov    edx,DWORD PTR [ebp-0x60]
  40d430:	lea    ecx,[edx+ecx*1+0x5708f4]
  40d437:	mov    DWORD PTR [ebp-0x60],ecx
  40d43a:	mov    DWORD PTR ds:0x429024,0x1a
  40d444:	cmp    DWORD PTR ds:0x429024,0x0
  40d44b:	je     0x40d498
  40d451:	cmp    DWORD PTR ds:0x429024,0x6
  40d458:	jne    0x40d464
  40d45e:	call   DWORD PTR ds:0x42ed51
  40d464:	cmp    DWORD PTR ds:0x429024,0x7
  40d46b:	jne    0x40d47e
  40d471:	mov    edx,DWORD PTR ds:0x429024
  40d477:	dec    edx
  40d478:	mov    DWORD PTR ds:0x429024,edx
  40d47e:	xor    edx,edx
  40d480:	or     edx,DWORD PTR ds:0x429024
  40d486:	dec    edx
  40d487:	mov    DWORD PTR ds:0x429024,edx
  40d48d:	jmp    0x40d444
  40d492:	or     ecx,DWORD PTR ds:0x429000
  40d498:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49b:	mov    edx,DWORD PTR [ebp-0x5c]
  40d49e:	lea    ecx,[edx+ecx*1+0x5708f3]
  40d4a5:	sub    DWORD PTR ds:0x42c004,edx
  40d4ab:	mov    DWORD PTR [ebp-0x5c],ecx
  40d4ae:	mov    ecx,DWORD PTR [ebp+0x8]
  40d4b1:	mov    edx,DWORD PTR [ebp-0x58]
  40d4b4:	lea    ecx,[edx+ecx*1+0x5708f2]
  40d4bb:	or     DWORD PTR ds:0x42d010,edx
  40d4c1:	mov    DWORD PTR [ebp-0x58],ecx
  40d4c4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d4c7:	xor    edx,edx
  40d4c9:	or     edx,DWORD PTR ds:0x42d00c
  40d4cf:	add    DWORD PTR ds:0x42a008,edx
  40d4d5:	mov    edx,DWORD PTR [ebp-0x54]
  40d4d8:	lea    ecx,[edx+ecx*1+0x5708f1]
  40d4df:	mov    DWORD PTR [ebp-0x54],ecx
  40d4e2:	and    DWORD PTR ds:0x42c014,0x0
  40d4ec:	mov    ecx,DWORD PTR ds:0x42c014
  40d4f2:	inc    ecx
  40d4f3:	mov    DWORD PTR ds:0x42c014,ecx
  40d4f9:	cmp    DWORD PTR ds:0x42c014,0x11
  40d500:	jne    0x40d50c
  40d506:	call   DWORD PTR ds:0x42ed55
  40d50c:	cmp    DWORD PTR ds:0x42c014,0x10
  40d513:	jne    0x40d526
  40d519:	mov    ecx,DWORD PTR ds:0x42c014
  40d51f:	inc    ecx
  40d520:	mov    DWORD PTR ds:0x42c014,ecx
  40d526:	cmp    DWORD PTR ds:0x42c014,0x1e
  40d52d:	jb     0x40d4ec
  40d533:	mov    ecx,DWORD PTR [ebp+0x8]
  40d536:	mov    DWORD PTR ds:0x42900c,0x421d
  40d540:	mov    edx,DWORD PTR [ebp-0x50]
  40d543:	lea    ecx,[edx+ecx*1+0x5708f0]
  40d54a:	mov    DWORD PTR [ebp-0x50],ecx
  40d54d:	mov    ecx,DWORD PTR [ebp+0x8]
  40d550:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40d55a:	xor    ecx,eax
  40d55c:	or     DWORD PTR ds:0x42d000,0x429014
  40d566:	add    ecx,esi
  40d568:	jne    0x40b007
  40d56e:	mov    DWORD PTR ds:0x42b018,0x1de
  40d578:	jmp    0x40fc3c
  40d57d:	xor    DWORD PTR ds:0x42d010,0x429020
  40d587:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d58a:	xor    edx,edx
  40d58c:	xor    edx,DWORD PTR ds:0x42d014
  40d592:	sbb    DWORD PTR ds:0x42c01c,edx
  40d598:	mov    edx,DWORD PTR [ebp-0x8]
  40d59b:	xor    ecx,eax
  40d59d:	and    DWORD PTR ds:0x429020,0x3910
  40d5a7:	xor    edx,eax
  40d5a9:	and    DWORD PTR ds:0x429004,0x1359
  40d5b3:	sub    ecx,edx
  40d5b5:	sub    ecx,esi
  40d5b7:	xor    ecx,eax
  40d5b9:	mov    DWORD PTR [ebp-0x1c],ecx
  40d5bc:	mov    DWORD PTR ds:0x42a004,0x3dac
  40d5c6:	mov    ecx,DWORD PTR [ebp-0xc]
  40d5c9:	mov    DWORD PTR [ebp+0x8],ecx
  40d5cc:	jmp    0x40d6e6
  40d5d1:	and    DWORD PTR ds:0x429010,0x7fda
  40d5db:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5de:	mov    edx,DWORD PTR [ebp-0x8]
  40d5e1:	mov    DWORD PTR ds:0x42d018,0x16
  40d5eb:	cmp    DWORD PTR ds:0x42d018,0x0
  40d5f2:	je     0x40d654
  40d5f8:	cmp    DWORD PTR ds:0x42d018,0x2
  40d5ff:	jne    0x40d628
  40d605:	push   0x69b5
  40d60a:	push   DWORD PTR [ebp-0x10]
  40d60d:	push   0x429000
  40d612:	push   0x5bc7
  40d617:	push   DWORD PTR [ebp-0x28]
  40d61a:	push   0x68ba
  40d61f:	push   DWORD PTR [ebp-0x24]
  40d622:	call   DWORD PTR ds:0x42ed59
  40d628:	cmp    DWORD PTR ds:0x42d018,0x3
  40d62f:	jne    0x40d642
  40d635:	mov    edi,DWORD PTR ds:0x42d018
  40d63b:	dec    edi
  40d63c:	mov    DWORD PTR ds:0x42d018,edi
  40d642:	mov    edi,DWORD PTR ds:0x42d018
  40d648:	dec    edi
  40d649:	mov    DWORD PTR ds:0x42d018,edi
  40d64f:	jmp    0x40d5eb
  40d654:	xor    ecx,eax
  40d656:	sub    DWORD PTR ds:0x429024,0x443a
  40d660:	xor    edx,eax
  40d662:	not    edi
  40d664:	sub    ecx,edx
  40d666:	sub    ecx,esi
  40d668:	and    DWORD PTR ds:0x42d010,0x0
  40d672:	mov    edx,DWORD PTR ds:0x42d010
  40d678:	inc    edx
  40d679:	mov    DWORD PTR ds:0x42d010,edx
  40d67f:	cmp    DWORD PTR ds:0x42d010,0x5
  40d686:	jne    0x40d69a
  40d68c:	push   DWORD PTR [ebp-0x28]
  40d68f:	push   0x42e110
  40d694:	call   DWORD PTR ds:0x42ed5d
  40d69a:	cmp    DWORD PTR ds:0x42d010,0x4
  40d6a1:	jne    0x40d6b4
  40d6a7:	mov    edx,DWORD PTR ds:0x42d010
  40d6ad:	inc    edx
  40d6ae:	mov    DWORD PTR ds:0x42d010,edx
  40d6b4:	cmp    DWORD PTR ds:0x42d010,0x15
  40d6bb:	jb     0x40d672
  40d6c1:	and    DWORD PTR ds:0x42a018,edx
  40d6c7:	xor    ecx,eax
  40d6c9:	mov    DWORD PTR [ebp+0x8],ecx
  40d6cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6cf:	mov    edx,DWORD PTR [ebp+0x8]
  40d6d2:	imul   edx,edx,0x5708f4
  40d6d8:	xor    ecx,eax
  40d6da:	add    ecx,esi
  40d6dc:	lea    ecx,[ebp+ecx*4-0x64]
  40d6e0:	mov    edi,DWORD PTR [ecx]
  40d6e2:	add    edx,edi
  40d6e4:	mov    DWORD PTR [ecx],edx
  40d6e6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6e9:	xor    ecx,eax
  40d6eb:	add    ecx,esi
  40d6ed:	jne    0x40d5d1
  40d6f3:	mov    ecx,DWORD PTR [ebp-0x20]
  40d6f6:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40d6fd:	mov    dl,BYTE PTR [ebp-0x1]
  40d700:	cmp    cl,dl
  40d702:	je     0x40fb9d
  40d708:	mov    ecx,DWORD PTR [ebp-0x20]
  40d70b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40d712:	mov    edx,DWORD PTR [ebp+0xc]
  40d715:	cmp    cl,BYTE PTR [edx]
  40d717:	jne    0x40fc4e
  40d71d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d720:	mov    edx,DWORD PTR [ebp+0xc]
  40d723:	movsx  edx,BYTE PTR [edx]
  40d726:	xor    ecx,eax
  40d728:	add    ecx,esi
  40d72a:	cmp    edx,ecx
  40d72c:	mov    ecx,DWORD PTR [ebp-0xc]
  40d72f:	mov    DWORD PTR [ebp+0x8],ecx
  40d732:	mov    ecx,DWORD PTR [ebp+0x8]
  40d735:	je     0x40fcc8
  40d73b:	jmp    0x40fb32
  40d740:	mov    ecx,DWORD PTR [ebp+0x8]
  40d743:	mov    edx,DWORD PTR [ebp-0x8]
  40d746:	xor    ecx,eax
  40d748:	xor    edx,eax
  40d74a:	sub    ecx,edx
  40d74c:	jmp    0x40fb0e
  40d751:	rcl    BYTE PTR [ebx+eiz*2-0x71],1
  40d755:	jecxz  0x40d7ce
  40d757:	je     0x40d754
  40d759:	push   esp
  40d75a:	mov    edi,0xbb51b854
  40d75f:	inc    edi
  40d760:	dec    ebp
  40d761:	das    
  40d762:	in     eax,0x78
  40d764:	js     0x40d743
  40d766:	pop    edi
  40d767:	js     0x40d7e1
  40d769:	addr16 jb 0x40d722
  40d76c:	fadd   QWORD PTR [esi]
  40d76e:	mov    dl,0x6d
  40d770:	add    BYTE PTR [ebx+0x74d609b5],ah
  40d776:	jmp    0xbcc:0xae46c6fc
  40d77d:	cmp    BYTE PTR [ebx+ecx*1+0x19],0xf4
  40d782:	repz arpl WORD PTR [edx+0x4d8eca57],di
  40d789:	sub    al,0x27
  40d78b:	push   cs
  40d78c:	sub    ah,BYTE PTR [edi+0x2]
  40d78f:	push   edx
  40d790:	lock mov eax,ds:0xde2b6ce6
  40d796:	add    edx,edi
  40d798:	test   DWORD PTR [esi-0x8],ebp
  40d79b:	xchg   al,dl
  40d79d:	fucomi st,st(1)
  40d79f:	and    eax,0x23c015c0
  40d7a4:	xchg   edi,eax
  40d7a5:	dec    edi
  40d7a6:	dec    eax
  40d7a7:	mov    ah,0xe2
  40d7a9:	ins    DWORD PTR es:[edi],dx
  40d7aa:	pop    eax
  40d7ab:	lds    ebx,FWORD PTR [esi+eiz*4+0x6fcdece]
  40d7b2:	retf   0xd221
  40d7b5:	not    BYTE PTR [ecx*8-0x4eb4e2b0]
  40d7bc:	sub    ebp,0xf1c0cd90
  40d7c2:	arpl   WORD PTR [ebx+0x77],di
  40d7c5:	mov    dh,0xc6
  40d7c7:	hlt    
  40d7c8:	pop    ebp
  40d7c9:	dec    edi
  40d7ca:	mov    esp,0x8c1f1174
  40d7cf:	xchg   DWORD PTR [ebp+0x4a],esp
  40d7d2:	inc    BYTE PTR [ebp-0x26d7c8b4]
  40d7d8:	push   0xffffffa2
  40d7da:	push   ebx
  40d7db:	add    ah,ch
  40d7dd:	adc    dh,cl
  40d7df:	sub    eax,0x716435a2
  40d7e4:	xchg   edi,eax
  40d7e5:	mov    eax,0xbf0dbdbf
  40d7ea:	(bad)  
  40d7ee:	sub    al,0x4b
  40d7f0:	push   0x2
  40d7f2:	in     al,0x25
  40d7f4:	lods   eax,DWORD PTR ds:[esi]
  40d7f5:	xchg   esi,eax
  40d7f6:	sbb    esi,DWORD PTR [esi-0x75]
  40d7f9:	(bad)  
  40d7fa:	and    ecx,DWORD PTR [ebx+0x2d023134]
  40d800:	xor    al,0x86
  40d802:	push   ebp
  40d803:	pop    edi
  40d804:	jo     0x40d7bd
  40d806:	clc    
  40d807:	xchg   edi,eax
  40d808:	test   eax,0x3fdac59b
  40d80d:	push   es
  40d80e:	sub    eax,0xd33ef779
  40d813:	mov    ch,0xeb
  40d815:	push   eax
  40d816:	or     eax,DWORD PTR [eax-0x115d8b45]
  40d81c:	push   0x66e95250
  40d821:	push   esi
  40d822:	or     DWORD PTR [esp+edx*4-0x7a],ecx
  40d826:	dec    ebx
  40d827:	and    edx,DWORD PTR [ebp+0x58]
  40d82a:	arpl   WORD PTR [eax-0x66654cf7],bp
  40d830:	dec    edx
  40d831:	loopne 0x40d86d
  40d833:	pop    esi
  40d834:	sbb    BYTE PTR [edi+0x37],bh
  40d837:	daa    
  40d838:	mov    eax,ds:0xedad130c
  40d83d:	out    dx,eax
  40d83e:	and    al,0x69
  40d840:	fisubr DWORD PTR [edi-0x2a00e0f8]
  40d846:	sbb    al,0x55
  40d848:	retf   0x1bc9
  40d84b:	sahf   
  40d84c:	mov    dl,0x5d
  40d84e:	pop    eax
  40d84f:	inc    edx
  40d850:	push   ds
  40d851:	je     0x40d7ee
  40d853:	jae    0x40d835
  40d855:	ror    BYTE PTR [ecx-0xf],1
  40d858:	pop    edx
  40d859:	jns    0x40d8c4
  40d85b:	fld    DWORD PTR [ebx]
  40d85d:	ficomp DWORD PTR es:[ebx+edi*4+0x50]
  40d862:	dec    ebx
  40d863:	and    DWORD PTR [edi-0x5],0x45
  40d867:	cmp    ah,bh
  40d869:	add    al,0x3d
  40d86b:	retf   
  40d86c:	mov    esp,0x445d6804
  40d871:	xor    BYTE PTR [esi+0x6d],0x17
  40d875:	pop    ecx
  40d876:	jnp    0x40d873
  40d878:	add    ebx,DWORD PTR [ebx]
  40d87a:	jp     0x40d8c1
  40d87c:	retf   
  40d87d:	inc    ebx
  40d87e:	ret    
  40d87f:	daa    
  40d880:	jnp    0x40d8a2
  40d882:	add    al,BYTE PTR [ebx+0x1f18eb3a]
  40d888:	cmp    eax,0x855eaaa7
  40d88d:	clc    
  40d88e:	mov    BYTE PTR [ebx+0x2f],bl
  40d891:	sbb    edx,DWORD PTR [ebx-0x5]
  40d894:	cdq    
  40d895:	aas    
  40d896:	ds test eax,0xab98fdc8
  40d89c:	sbb    ebp,ecx
  40d89e:	or     ebx,edx
  40d8a0:	sub    BYTE PTR ds:0x19de86ad,bh
  40d8a6:	ret    
  40d8a7:	aaa    
  40d8a8:	test   eax,0x5195f6c7
  40d8ad:	push   edi
  40d8ae:	scas   eax,DWORD PTR es:[edi]
  40d8af:	adc    eax,0x54645a64
  40d8b4:	(bad)  
  40d8b5:	std    
  40d8b6:	jmp    0x40d877
  40d8b8:	add    eax,0x4158640
  40d8bd:	(bad)  
  40d8be:	mov    al,0x3a
  40d8c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8c1:	xchg   edx,eax
  40d8c2:	sub    bh,BYTE PTR [ecx]
  40d8c4:	repnz scas eax,DWORD PTR es:[edi]
  40d8c6:	pop    ecx
  40d8c7:	test   eax,0xf4d08f54
  40d8cc:	mov    dl,dl
  40d8ce:	push   0xd
  40d8d0:	xor    DWORD PTR [esi*4-0x383f55e2],edx
  40d8d7:	int3   
  40d8d8:	(bad)  
  40d8d9:	mov    ebx,0xe4ee13ee
  40d8de:	xor    ebp,DWORD PTR [eax]
  40d8e0:	and    al,BYTE PTR [eax-0x12]
  40d8e3:	cld    
  40d8e4:	int    0xf3
  40d8e6:	fisub  DWORD PTR [eax+0x53]
  40d8e9:	sub    cl,dh
  40d8eb:	jp     0x40d884
  40d8ed:	cmp    BYTE PTR [esp+ebx*4+0x2c132328],bl
  40d8f4:	aam    0x27
  40d8f6:	jmp    0x40d8c5
  40d8f8:	or     DWORD PTR [eax-0xee80d4c],esi
  40d8fe:	jo     0x40d8db
  40d900:	pusha  
  40d901:	pop    eax
  40d902:	jae    0x40d8a2
  40d904:	ret    
  40d905:	repz imul edx,DWORD PTR [edx+edi*8],0xffffffb2
  40d90a:	scas   eax,DWORD PTR es:[edi]
  40d90b:	sbb    al,0x22
  40d90d:	in     eax,dx
  40d90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d90f:	stos   BYTE PTR es:[edi],al
  40d910:	push   es
  40d911:	in     eax,dx
  40d912:	push   edi
  40d913:	fwait
  40d914:	jb     0x40d8f3
  40d916:	or     al,0x7
  40d918:	inc    ebp
  40d919:	push   esp
  40d91a:	push   esp
  40d91b:	mov    bl,0x88
  40d91d:	mov    bh,0xfc
  40d91f:	ins    DWORD PTR es:[edi],dx
  40d920:	jle    0x40d92b
  40d922:	xor    al,0x6f
  40d924:	cmp    dh,BYTE PTR [edi]
  40d926:	lea    ebp,[ebx+ecx*8]
  40d929:	and    eax,0x821192cf
  40d92e:	jecxz  0x40d920
  40d930:	mov    al,ds:0x88c03668
  40d935:	or     ecx,DWORD PTR [ecx]
  40d937:	scas   al,BYTE PTR es:[edi]
  40d938:	inc    eax
  40d939:	jle    0x40d94c
  40d93b:	mov    eax,0xe82fbbaf
  40d940:	(bad)  
  40d941:	out    dx,eax
  40d942:	sub    DWORD PTR [ebp+eiz*8-0x5b],edx
  40d946:	and    eax,0xfb80dc41
  40d94b:	jno    0x40d935
  40d94d:	jle    0x40d931
  40d94f:	mov    WORD PTR [ecx],?
  40d951:	xchg   BYTE PTR [eax],cl
  40d953:	int    0x39
  40d955:	jne    0x40d955
  40d957:	ror    DWORD PTR [edx-0x1e],0xa9
  40d95b:	mov    dh,0x63
  40d95d:	(bad)  
  40d95f:	or     al,BYTE PTR [ecx]
  40d961:	fist   DWORD PTR [ebx-0x345a734c]
  40d967:	pop    eax
  40d968:	stos   BYTE PTR es:[edi],al
  40d969:	add    al,0xee
  40d96b:	sub    edi,DWORD PTR [ecx]
  40d96d:	fsubr  QWORD PTR [edi]
  40d96f:	jp     0x40d902
  40d971:	retf   
  40d972:	inc    eax
  40d973:	imul   ecx,DWORD PTR [edi+0x5e],0x41
  40d977:	add    ch,BYTE PTR [ebx]
  40d979:	mov    cl,0x48
  40d97b:	xlat   BYTE PTR ds:[ebx]
  40d97c:	leave  
  40d97d:	xchg   bh,al
  40d97f:	xchg   esp,eax
  40d980:	add    eax,DWORD PTR [ecx+edx*2]
  40d983:	or     edi,0xffffffa5
  40d986:	adc    ebx,DWORD PTR [edi]
  40d988:	sbb    al,bh
  40d98a:	add    ecx,edi
  40d98c:	pop    ebx
  40d98d:	cli    
  40d98e:	(bad)  
  40d98f:	retf   0x582e
  40d992:	mov    ebx,0x508b3217
  40d997:	lea    esp,[edx+0x5fd165a8]
  40d99d:	dec    ebp
  40d99e:	test   DWORD PTR [edx+0x40],esi
  40d9a1:	or     DWORD PTR [ecx-0x5face43c],ecx
  40d9a7:	jnp    0x40d9a7
  40d9a9:	out    dx,eax
  40d9aa:	(bad)  
  40d9ab:	jb     0x40da1a
  40d9ad:	loope  0x40da10
  40d9af:	das    
  40d9b0:	(bad)
  40d9b3:	sub    DWORD PTR [esi-0x39],0xffffff81
  40d9b7:	mov    dh,BYTE PTR [eax+0x35]
  40d9ba:	call   0xe5c6:0x55096932
  40d9c1:	sub    al,0x64
  40d9c3:	les    ebp,FWORD PTR [ecx-0x2b040739]
  40d9c9:	xchg   edx,eax
  40d9ca:	jle    0x40d9ca
  40d9cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9cd:	stc    
  40d9ce:	icebp  
  40d9cf:	pop    ebp
  40d9d0:	dec    ebp
  40d9d1:	aas    
  40d9d2:	inc    ecx
  40d9d3:	scas   al,BYTE PTR es:[edi]
  40d9d4:	xchg   ebp,eax
  40d9d5:	fist   WORD PTR [esi-0x13bcf24b]
  40d9db:	rcl    dh,cl
  40d9dd:	mov    eax,0x39bb0bf8
  40d9e2:	js     0x40d99b
  40d9e4:	cli    
  40d9e5:	adc    eax,0xadc5ef66
  40d9ea:	int    0x39
  40d9ec:	test   al,0x0
  40d9ee:	add    BYTE PTR [edx-0x3e089f6b],dh
  40d9f4:	jmp    0xe6b14e68
  40d9f9:	inc    ebx
  40d9fa:	jno    0x40da19
  40d9fc:	mul    DWORD PTR [ebp-0x47]
  40d9ff:	inc    esp
  40da00:	adc    edi,edx
  40da02:	xchg   edx,eax
  40da03:	fisub  DWORD PTR [esi+0x7a]
  40da06:	or     ah,BYTE PTR [edi]
  40da08:	mov    edi,0xd02044d2
  40da0d:	or     cl,ch
  40da0f:	mov    WORD PTR [ecx],ds
  40da11:	mov    ecx,0x4013dd26
  40da16:	sub    dl,BYTE PTR [edi-0x176218c5]
  40da1c:	loop   0x40da45
  40da1e:	mov    WORD PTR [ebx+0x15],gs
  40da21:	pusha  
  40da22:	aas    
  40da23:	mov    WORD PTR ds:0xfae01285,ds
  40da29:	xchg   edi,eax
  40da2a:	stos   BYTE PTR es:[edi],al
  40da2b:	mov    al,ds:0xe0557b86
  40da30:	lods   eax,DWORD PTR ds:[esi]
  40da31:	xor    dl,BYTE PTR [ecx-0x2d]
  40da34:	jp     0x40da4a
  40da36:	dec    esi
  40da37:	add    bl,BYTE PTR [edx+0x3c]
  40da3a:	mov    DWORD PTR [ebp-0x48],ebp
  40da3d:	outs   dx,DWORD PTR ds:[esi]
  40da3e:	into   
  40da3f:	xchg   BYTE PTR [ebx+ecx*4],al
  40da42:	in     al,0x98
  40da44:	retf   
  40da45:	sbb    DWORD PTR [ecx+0x29],ecx
  40da48:	push   es
  40da49:	pop    ebx
  40da4a:	pop    eax
  40da4b:	(bad)  
  40da4c:	cmp    esp,DWORD PTR [eax+0xa]
  40da4f:	xchg   DWORD PTR [edi-0x22855a6f],ebp
  40da55:	inc    esi
  40da56:	ds pop esp
  40da58:	xor    BYTE PTR [edx+0x2d6ac308],dh
  40da5e:	sbb    BYTE PTR [ebp+0x7e],0xfa
  40da62:	loop   0x40dacd
  40da64:	xor    BYTE PTR [esi],dh
  40da66:	adc    eax,0xa4223ef9
  40da6b:	ja     0x40dab1
  40da6d:	or     eax,0x1a96b84b
  40da72:	mov    edx,0xaad7090a
  40da77:	xor    eax,0xc850e8ce
  40da7c:	inc    ecx
  40da7d:	dec    esp
  40da7e:	push   esi
  40da7f:	jmp    0xa8586019
  40da84:	loop   0x40dac3
  40da86:	(bad)  
  40da87:	jge    0x40da68
  40da89:	mov    ebx,0xdaa40bdc
  40da8e:	xchg   ebx,eax
  40da8f:	sbb    al,0xcf
  40da91:	outs   dx,DWORD PTR ds:[esi]
  40da92:	js     0x40da15
  40da94:	xchg   ebx,eax
  40da95:	fcom   QWORD PTR [ebp+ebp*2-0x46]
  40da99:	sahf   
  40da9a:	call   0x38d7:0x5211e49e
  40daa1:	sbb    bh,ch
  40daa3:	mov    eax,ebx
  40daa5:	xchg   edx,eax
  40daa6:	inc    DWORD PTR [eax+0xb0f1036]
  40daac:	fs xchg edx,eax
  40daae:	ins    DWORD PTR es:[edi],dx
  40daaf:	cs pop ss
  40dab1:	sbb    eax,0x38902b0c
  40dab6:	std    
  40dab7:	sub    eax,0xa3bca5fd
  40dabc:	bound  esi,QWORD PTR [eax]
  40dabe:	adc    dh,bl
  40dac0:	(bad)  
  40dac1:	cmp    BYTE PTR [eax],ah
  40dac3:	lea    edx,[ebx-0x41]
  40dac6:	(bad)  [ebp+0x59495e44]
  40dacc:	add    eax,0x2be53a49
  40dad1:	out    0xd5,al
  40dad3:	sbb    BYTE PTR [ebx],0x87
  40dad6:	xor    BYTE PTR [eax+0x2d],cl
  40dad9:	inc    esi
  40dada:	repz imul ecx,esi,0xd896176f
  40dae1:	xchg   ebp,eax
  40dae2:	je     0x40dad1
  40dae4:	and    eax,0x35b1175b
  40dae9:	or     DWORD PTR ds:0x757f0e3f,ebx
  40daef:	pushf  
  40daf0:	and    BYTE PTR [edi+ebx*1],al
  40daf3:	leave  
  40daf4:	pop    ds
  40daf5:	int    0x7a
  40daf7:	fcmovb st,st(1)
  40daf9:	inc    edi
  40dafa:	aad    0xf8
  40dafc:	pop    ebx
  40dafd:	call   0xee3e:0x7dc79c9c
  40db04:	leave  
  40db05:	mov    eax,0x9f4529c8
  40db0a:	jecxz  0x40da90
  40db0c:	or     esi,DWORD PTR [ecx-0x15]
  40db0f:	cs es cmp ebx,eax
  40db13:	cs jno 0x40dafe
  40db16:	xor    DWORD PTR [edx-0x49],ebx
  40db19:	shl    bl,0x24
  40db1c:	xchg   ebp,eax
  40db1d:	jmp    DWORD PTR [eax-0x72]
  40db20:	mov    eax,0x6b8bb60b
  40db25:	(bad)  
  40db26:	imul   eax,eax,0x1
  40db29:	scas   eax,DWORD PTR es:[edi]
  40db2a:	mov    bl,0xef
  40db2c:	std    
  40db2d:	dec    esp
  40db2e:	frstor [ebp+0x64]
  40db31:	xor    bh,BYTE PTR [ecx+ecx*8-0x3e61dc43]
  40db38:	xor    edx,0x819af354
  40db3e:	dec    eax
  40db3f:	sti    
  40db40:	mov    eax,ds:0x9c091d5d
  40db45:	xchg   ecx,eax
  40db46:	(bad)  gs:[ebp-0x19]
  40db4a:	int3   
  40db4b:	xor    eax,0xc1a2ab10
  40db50:	lea    eax,[ecx+0x5f]
  40db53:	dec    edi
  40db54:	xchg   esi,eax
  40db55:	inc    edi
  40db56:	xor    al,0xf1
  40db58:	aas    
  40db59:	mov    BYTE PTR fs:[ebx],bh
  40db5c:	sbb    eax,0x726cb109
  40db61:	imul   edx,DWORD PTR [edx],0x7a
  40db64:	cli    
  40db65:	rcl    DWORD PTR [ebx],cl
  40db67:	mov    eax,ebx
  40db69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db6a:	push   es
  40db6b:	lds    edx,FWORD PTR [edx+0x33fd1877]
  40db71:	mov    ds:0xfdc3df25,al
  40db76:	xchg   ebx,eax
  40db77:	(bad)  
  40db78:	push   esp
  40db79:	mov    eax,ds:0xd3dcb217
  40db7e:	les    edx,FWORD PTR [eax-0x7dd24dd3]
  40db84:	shl    BYTE PTR [esi-0x5a],0xd3
  40db88:	mov    al,0x6c
  40db8a:	test   DWORD PTR [ebx+0x4d],0x5b7bdc
  40db91:	mov    bh,BYTE PTR [edx-0x36]
  40db94:	outs   dx,BYTE PTR ds:[esi]
  40db95:	repz xchg ebp,eax
  40db97:	les    ecx,FWORD PTR [eax]
  40db99:	out    dx,al
  40db9a:	(bad)  ds:0xf1b7d86c
  40dba0:	sub    ecx,esp
  40dba2:	js     0x40dbb2
  40dba4:	pop    ebp
  40dba5:	or     al,0x9
  40dba7:	inc    edx
  40dba8:	leave  
  40dba9:	mov    edi,0x3891010d
  40dbae:	mov    dh,0xa0
  40dbb0:	repnz loop 0x40dbae
  40dbb3:	sub    al,0x4c
  40dbb5:	pop    esp
  40dbb6:	mov    eax,ds:0xff5b31d
  40dbbb:	scas   al,BYTE PTR es:[edi]
  40dbbc:	lods   eax,DWORD PTR ds:[esi]
  40dbbd:	scas   eax,DWORD PTR es:[edi]
  40dbbe:	push   esp
  40dbbf:	pop    ss
  40dbc0:	push   ss
  40dbc1:	pushf  
  40dbc2:	pop    es
  40dbc3:	add    bl,ch
  40dbc5:	popa   
  40dbc6:	mov    ds:0x2318abaf,al
  40dbcb:	sbb    BYTE PTR [edi-0x4e],ah
  40dbce:	sub    bl,bl
  40dbd0:	jge    0x40dbad
  40dbd2:	jb     0x40dc06
  40dbd4:	mov    ch,0xf2
  40dbd6:	pop    ss
  40dbd7:	cmp    cl,BYTE PTR [ebp-0x78]
  40dbda:	in     al,dx
  40dbdb:	dec    eax
  40dbdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbdd:	sbb    al,ah
  40dbdf:	call   0x69b2:0x4bbf7f15
  40dbe6:	sub    ebp,edx
  40dbe8:	pop    ecx
  40dbe9:	adc    eax,0x2fc66c2a
  40dbee:	pop    ebp
  40dbef:	pop    ebx
  40dbf0:	pop    ebx
  40dbf1:	sbb    BYTE PTR [ecx-0x4c],dl
  40dbf4:	sbb    bl,BYTE PTR [edi]
  40dbf6:	out    dx,eax
  40dbf7:	add    eax,0x880cbdfb
  40dbfc:	mov    fs,WORD PTR [esi+0x60]
  40dbff:	sti    
  40dc00:	loopne 0x40db93
  40dc02:	inc    ebx
  40dc03:	adc    dl,bh
  40dc05:	xchg   ebp,eax
  40dc06:	fst    st(3)
  40dc08:	lods   eax,DWORD PTR ds:[esi]
  40dc09:	mov    ebx,0xeeb23d1d
  40dc0e:	push   es
  40dc0f:	imul   esp,esi,0x4fe31a93
  40dc15:	mov    ah,0x33
  40dc17:	test   DWORD PTR [eax-0x6f],ebp
  40dc1a:	and    al,0x1c
  40dc1c:	mov    cl,0xb4
  40dc1e:	lock std 
  40dc20:	ins    BYTE PTR es:[edi],dx
  40dc21:	fbld   TBYTE PTR [ecx-0x57]
  40dc24:	daa    
  40dc25:	(bad)  
  40dc27:	sub    al,0x9e
  40dc29:	mov    al,0x5c
  40dc2b:	xchg   DWORD PTR [edi+0x2defbc60],esi
  40dc31:	add    edx,edi
  40dc33:	std    
  40dc34:	in     eax,0x3c
  40dc36:	sbb    al,0xdf
  40dc38:	test   al,0xf2
  40dc3b:	xchg   edi,eax
  40dc3c:	push   0x6a560f56
  40dc41:	fnstsw WORD PTR [edx+0x785c1311]
  40dc47:	test   DWORD PTR [edi-0x28212c33],eax
  40dc4d:	icebp  
  40dc4e:	push   ecx
  40dc4f:	dec    ebx
  40dc50:	clc    
  40dc51:	enter  0x7692,0xec
  40dc55:	pop    ebx
  40dc56:	sub    DWORD PTR [ebx-0x80],0x2f2fccdb
  40dc5d:	std    
  40dc5e:	imul   ebx,DWORD PTR [esi+0x7f2c6358],0x3d
  40dc65:	jno    0x40dc03
  40dc67:	je     0x40dbf6
  40dc69:	push   ecx
  40dc6a:	rol    BYTE PTR ds:0x2772db89,0x1e
  40dc71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc72:	dec    esi
  40dc73:	dec    edx
  40dc74:	mov    ecx,0xe973336c
  40dc79:	test   BYTE PTR [ecx-0x2],dh
  40dc7c:	into   
  40dc7d:	mov    ch,0x81
  40dc7f:	ja     0x40dc3d
  40dc81:	pusha  
  40dc82:	mov    es,esi
  40dc84:	xlat   BYTE PTR ds:[ebx]
  40dc85:	cmp    al,0x38
  40dc87:	fst    QWORD PTR [esi-0x3b]
  40dc8a:	ret    
  40dc8b:	xor    edi,DWORD PTR [ebp+0x44290cbc]
  40dc91:	inc    edi
  40dc92:	mov    edx,0x9485093c
  40dc97:	out    0x8f,al
  40dc99:	and    edx,ebp
  40dc9b:	retf   0x23db
  40dc9e:	loop   0x40dc48
  40dca0:	inc    eax
  40dca1:	and    DWORD PTR [esi+0xf],ebx
  40dca4:	push   cs
  40dca5:	mov    eax,ds:0x8a8606ca
  40dcaa:	sti    
  40dcab:	sbb    BYTE PTR [edi+0x47],bl
  40dcae:	push   edi
  40dcaf:	mov    bl,0x30
  40dcb1:	pop    ds
  40dcb2:	jp     0x40dc47
  40dcb4:	xchg   ecx,eax
  40dcb5:	pop    esi
  40dcb6:	test   ecx,0x2478913f
  40dcbc:	mov    cl,0xed
  40dcbe:	movntq QWORD PTR [esi],mm5
  40dcc1:	ss test al,0x81
  40dcc4:	add    eax,0xca619698
  40dcc9:	into   
  40dcca:	arpl   WORD PTR [eax+0x28c7d226],si
  40dcd0:	test   al,0x81
  40dcd2:	push   edi
  40dcd3:	mov    eax,0xa1084f72
  40dcd8:	cdq    
  40dcd9:	imul   ebp,ebp,0xafce2c1
  40dcdf:	jae    0x40dcbb
  40dce1:	cmp    DWORD PTR [esi],ecx
  40dce3:	ins    BYTE PTR es:[edi],dx
  40dce4:	inc    BYTE PTR [ebp-0x57f9345b]
  40dcea:	cmp    bl,ch
  40dcec:	and    eax,0x6851f006
  40dcf1:	or     edx,DWORD PTR [ebx+0x2a2f9cc6]
  40dcf7:	mov    esi,DWORD PTR ds:0x429af454
  40dcfd:	push   ss
  40dcfe:	jp     0x40dce3
  40dd00:	inc    ebp
  40dd01:	test   eax,0x72693e68
  40dd06:	jp     0x40dcd2
  40dd08:	pop    es
  40dd09:	mov    bl,0x6c
  40dd0b:	fisttp WORD PTR [eax+0x738666e1]
  40dd11:	test   DWORD PTR [ecx+edx*4+0x47358f52],0xfbdce09f
  40dd1c:	pop    eax
  40dd1d:	mov    al,ds:0xe33d610a
  40dd22:	(bad)  [ebx-0x7e]
  40dd25:	ret    0xbe55
  40dd28:	iret   
  40dd29:	fidiv  DWORD PTR [ebx+0x25]
  40dd2c:	cmp    eax,0x8b39d02e
  40dd31:	jnp    0x40dd78
  40dd33:	sbb    edx,DWORD PTR [ecx+eax*2-0x4f]
  40dd37:	dec    edi
  40dd38:	adc    DWORD PTR [ecx],ebp
  40dd3a:	push   cs
  40dd3b:	or     esi,ebx
  40dd3d:	mov    ebx,DWORD PTR [esi-0x451c71f5]
  40dd43:	aam    0x77
  40dd45:	and    DWORD PTR [edi+0xe],esi
  40dd48:	jmp    0x64b98998
  40dd4d:	in     eax,dx
  40dd4e:	retf   0xae5c
  40dd51:	repz sti 
  40dd53:	and    al,0x8e
  40dd55:	in     al,0x3
  40dd57:	and    al,0x3a
  40dd59:	cli    
  40dd5a:	mov    ds:0x10746502,eax
  40dd5f:	xchg   ebx,eax
  40dd60:	test   DWORD PTR [edi+0x70],esi
  40dd63:	into   
  40dd64:	shl    DWORD PTR [ebp-0x1f],cl
  40dd67:	into   
  40dd68:	xor    eax,0x32c073ae
  40dd6d:	and    ebx,DWORD PTR [ebp+0x72]
  40dd70:	cld    
  40dd71:	stc    
  40dd72:	pop    esi
  40dd73:	sub    al,BYTE PTR [edi]
  40dd75:	js     0x40ddb1
  40dd77:	pop    ebx
  40dd78:	or     esi,ebx
  40dd7a:	sbb    ebx,DWORD PTR [edi+0x15]
  40dd7d:	sub    ch,BYTE PTR [ebx-0x5c84b984]
  40dd83:	push   ss
  40dd84:	sbb    eax,0xbff07701
  40dd89:	jae    0x40dd61
  40dd8b:	sbb    al,0xc8
  40dd8d:	lahf   
  40dd8e:	push   eax
  40dd8f:	cmp    ebx,esi
  40dd91:	stos   BYTE PTR es:[edi],al
  40dd92:	popf   
  40dd93:	cmp    ecx,edi
  40dd95:	sbb    DWORD PTR [edx],0xffffffbe
  40dd98:	out    dx,eax
  40dd99:	pop    ds
  40dd9a:	shl    DWORD PTR [edi+0x56],cl
  40dd9d:	iret   
  40dd9e:	sbb    al,0x83
  40dda0:	lods   al,BYTE PTR ds:[esi]
  40dda1:	xchg   ebp,eax
  40dda2:	out    0xcc,eax
  40dda4:	imul   ebp,ecx,0x708b380
  40ddaa:	push   cs
  40ddab:	pop    ss
  40ddac:	loopne 0x40dd68
  40ddae:	dec    ebp
  40ddaf:	js     0x40ddf1
  40ddb1:	lods   al,BYTE PTR ds:[esi]
  40ddb2:	in     eax,dx
  40ddb3:	sub    ah,BYTE PTR [esp+esi*4]
  40ddb6:	sub    BYTE PTR [ecx-0x47],dh
  40ddb9:	mov    cl,0xfb
  40ddbb:	inc    edx
  40ddbc:	jmp    0x40ddd3
  40ddbe:	retf   0xf61d
  40ddc1:	pop    esp
  40ddc2:	push   ebx
  40ddc3:	int    0x96
  40ddc5:	xor    al,0x10
  40ddc7:	mov    ?,esp
  40ddc9:	xor    eax,0xc4fe8b80
  40ddce:	ror    DWORD PTR [eax-0x52eecba7],0x90
  40ddd5:	pop    ecx
  40ddd6:	fcomp  st(1)
  40ddd8:	out    dx,eax
  40ddd9:	mov    al,0xd5
  40dddb:	ds aaa 
  40dddd:	(bad)  
  40ddde:	push   ss
  40dddf:	xchg   ecx,eax
  40dde0:	mov    ds:0x309a21fc,eax
  40dde5:	pop    ecx
  40dde6:	add    BYTE PTR [edi],0xed
  40dde9:	les    edi,FWORD PTR [edx+0x5f0e24cd]
  40ddef:	es xor eax,0x439937b5
  40ddf5:	dec    esp
  40ddf6:	mov    eax,0x4372fd1d
  40ddfb:	dec    eax
  40ddfc:	xchg   ebx,eax
  40ddfd:	or     eax,0x3a09851d
  40de02:	popf   
  40de03:	xor    eax,0x739d3ed
  40de08:	std    
  40de09:	call   0x6112:0x911b2de8
  40de10:	je     0x40de18
  40de12:	(bad)  
  40de13:	hlt    
  40de14:	fild   QWORD PTR [esi]
  40de16:	call   0x2cd2:0x38fd5f44
  40de1d:	lock std 
  40de1f:	jbe    0x40de2a
  40de21:	sub    BYTE PTR [eax-0x18],ch
  40de24:	jnp    0x40de82
  40de26:	sub    BYTE PTR [edx],bh
  40de28:	ret    0xb1a9
  40de2b:	rcr    BYTE PTR [ebx-0x14],0x21
  40de2f:	(bad)  
  40de30:	adc    eax,DWORD PTR [ebx]
  40de32:	daa    
  40de33:	sar    DWORD PTR ds:0xa1626e22,1
  40de39:	mov    dl,0xd4
  40de3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de3c:	adc    DWORD PTR [ebp-0x39],ebx
  40de3f:	inc    ecx
  40de40:	sub    al,0xa8
  40de42:	out    0x71,al
  40de44:	sub    al,0x69
  40de46:	shl    ebp,1
  40de48:	lahf   
  40de49:	jbe    0x40dead
  40de4b:	or     BYTE PTR [edi-0x13],0xf6
  40de4f:	and    BYTE PTR [edx-0x28],0xd4
  40de53:	dec    ebx
  40de54:	mov    eax,0xd3ed55d7
  40de59:	xor    bl,dl
  40de5b:	rol    DWORD PTR [ebx-0x6c],1
  40de5e:	push   edx
  40de5f:	jp     0x40ddec
  40de61:	cs sub edx,ebp
  40de64:	xchg   eax,eax
  40de66:	rcl    DWORD PTR [edi+0x69],cl
  40de69:	cmp    ebx,DWORD PTR [ecx+0x0]
  40de6c:	hlt    
  40de6d:	push   es
  40de6e:	push   edi
  40de6f:	das    
  40de70:	inc    esp
  40de71:	mov    ah,0x3c
  40de73:	inc    esi
  40de74:	sar    DWORD PTR [ebx-0x84256f2],0xa
  40de7b:	rcr    ebx,1
  40de7d:	mov    ecx,0x4c4915aa
  40de82:	xchg   esi,eax
  40de83:	adc    BYTE PTR [ebp-0x14],ch
  40de86:	mov    dh,0x52
  40de88:	push   ss
  40de89:	call   0xf6a94305
  40de8e:	or     edi,DWORD PTR [edi]
  40de90:	sbb    eax,0xfe3371ba
  40de95:	fmul   DWORD PTR [ecx+0x782aa119]
  40de9b:	pop    eax
  40de9c:	cdq    
  40de9d:	or     al,0xfa
  40de9f:	xor    eax,0x2d1a79f4
  40dea4:	mov    esp,0x9d28a8bd
  40dea9:	add    al,0xdc
  40deab:	dec    ebx
  40deac:	mov    cs,WORD PTR [edi-0x19]
  40deaf:	into   
  40deb0:	jno    0x40dee5
  40deb2:	add    al,0x4
  40deb4:	push   eax
  40deb5:	ficomp DWORD PTR [edx-0x5e]
  40deb8:	test   BYTE PTR [edi],al
  40deba:	jmp    0x3683:0xec116fcc
  40dec1:	jl     0x40de4d
  40dec3:	dec    ebx
  40dec4:	dec    edx
  40dec5:	pushf  
  40dec6:	dec    eax
  40dec7:	(bad)  
  40dec8:	or     DWORD PTR [eax-0x71],eax
  40decb:	jb     0x40dee8
  40decd:	gs pop edi
  40decf:	mov    ah,0x3a
  40ded1:	shl    BYTE PTR ss:[edx+0x2c],cl
  40ded5:	dec    si
  40ded7:	mov    ah,0xe0
  40ded9:	popa   
  40deda:	mov    ebx,ds
  40dedc:	fist   WORD PTR [ecx+0x2e985005]
  40dee2:	mov    gs,WORD PTR [esi+eiz*8-0x5]
  40dee6:	or     DWORD PTR [ebp+0x53],0x64ac29b0
  40deed:	je     0x40df30
  40deef:	lahf   
  40def0:	scas   eax,DWORD PTR es:[edi]
  40def1:	pop    ds
  40def2:	fisub  DWORD PTR [ebp+ecx*2+0x5b15bc30]
  40def9:	mov    BYTE PTR [eax-0x5d],dl
  40defc:	test   dh,dl
  40defe:	hlt    
  40deff:	dec    ecx
  40df00:	and    ch,bl
  40df02:	retf   
  40df03:	and    ebx,DWORD PTR [ecx+0x258e8e84]
  40df09:	mov    ch,0x4
  40df0b:	hlt    
  40df0c:	test   eax,0x4c8b90b9
  40df11:	dec    edi
  40df12:	sbb    BYTE PTR [edx+0x4],bl
  40df15:	jl     0x40deb3
  40df17:	jo     0x40df6a
  40df19:	jmp    0x40df23
  40df1b:	out    dx,eax
  40df1c:	or     BYTE PTR [ecx+0x37],bh
  40df1f:	popf   
  40df20:	in     eax,dx
  40df21:	sub    BYTE PTR [edx+0xb6fb4a1],bh
  40df27:	movups XMMWORD PTR [esi+0x7e],xmm0
  40df2b:	std    
  40df2c:	mov    bl,0x4a
  40df2e:	ja     0x40df87
  40df30:	jno    0x40ded3
  40df32:	jmp    0x6d26:0xe0b0544f
  40df39:	pop    ss
  40df3a:	inc    edx
  40df3b:	pop    ecx
  40df3c:	push   0xbe446b19
  40df41:	jl     0x40df0a
  40df43:	rol    al,1
  40df45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df46:	mov    ebp,?
  40df48:	sub    BYTE PTR [edx-0x7f],dl
  40df4b:	mov    eax,0xa65f9b82
  40df50:	imul   esp,esp,0x7c
  40df53:	icebp  
  40df54:	or     eax,0xf314a44b
  40df59:	int3   
  40df5a:	mov    ah,dh
  40df5c:	or     eax,DWORD PTR [esi]
  40df5e:	rcl    bh,cl
  40df60:	mov    ah,0x87
  40df62:	push   0x173f0b9a
  40df67:	mov    WORD PTR [esi],es
  40df69:	push   eax
  40df6a:	sbb    DWORD PTR [ecx],edx
  40df6c:	add    ecx,DWORD PTR [edx+0x20]
  40df6f:	xor    cl,al
  40df71:	mov    eax,ds:0x454b8aa3
  40df76:	test   DWORD PTR [ebx+eiz*1+0x60],0xccb3e4cc
  40df7e:	call   0x4462:0x644c2911
  40df85:	jo     0x40dfaa
  40df87:	test   al,0xc0
  40df89:	mov    dl,0xa6
  40df8b:	xchg   ecx,eax
  40df8c:	jle    0x40df8e
  40df8e:	mov    BYTE PTR [eax+0x1a],ch
  40df91:	fistp  QWORD PTR [eax+0x4f266afe]
  40df97:	leave  
  40df98:	pop    esi
  40df99:	test   al,0xcb
  40df9b:	int3   
  40df9c:	jp     0x40dfea
  40df9e:	mov    eax,ds:0xcfcaee92
  40dfa3:	int    0xce
  40dfa5:	in     al,dx
  40dfa6:	adc    edi,DWORD PTR [edi-0x4b67bae]
  40dfac:	cs xor bl,0xd6
  40dfb0:	add    BYTE PTR [eax+0x95871c3],cl
  40dfb6:	mov    ch,al
  40dfb8:	les    edx,FWORD PTR [ebx+0x77]
  40dfbb:	jecxz  0x40dfbb
  40dfbd:	adc    dl,BYTE PTR [ecx+eax*8-0x6b]
  40dfc1:	jo     0x40df5d
  40dfc3:	mov    al,ds:0x5f639e62
  40dfc8:	and    BYTE PTR [edi-0x5c],ah
  40dfcb:	ja     0x40dfba
  40dfcd:	test   ebp,0x54f8fe0e
  40dfd3:	push   ebp
  40dfd4:	push   ebx
  40dfd5:	jp     0x40dfd1
  40dfd7:	mov    esi,0x7d81f12
  40dfdc:	into   
  40dfdd:	xor    al,0xe4
  40dfdf:	ret    0xedf9
  40dfe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfe3:	mov    edi,0x4834f039
  40dfe8:	adc    dh,dh
  40dfea:	mov    al,ds:0xfce67911
  40dfef:	sbb    BYTE PTR [eax-0x15],0x98
  40dff3:	inc    edx
  40dff4:	and    al,0x17
  40dff6:	push   ss
  40dff7:	scas   eax,DWORD PTR es:[edi]
  40dff8:	jmp    0xb5a83cf4
  40dffd:	push   esp
  40dffe:	and    BYTE PTR [ecx-0x3140f6d1],ah
  40e004:	fs push ebx
  40e006:	mov    WORD PTR [edi],cs
  40e008:	push   ebp
  40e009:	test   eax,0x47358e6e
  40e00e:	jno    0x40e02b
  40e010:	mov    edi,0xf05cf27f
  40e015:	in     al,0x6b
  40e017:	push   eax
  40e018:	mov    ebx,edx
  40e01a:	mov    ds:0xfdc11057,eax
  40e01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e020:	(bad)  
  40e021:	inc    esi
  40e022:	cmc    
  40e023:	scas   al,BYTE PTR es:[edi]
  40e024:	lahf   
  40e025:	lea    edi,[esi+0x665bbfa5]
  40e02b:	mov    eax,ds:0x34128af5
  40e030:	lahf   
  40e031:	fcmovnu st,st(6)
  40e033:	and    edi,DWORD PTR [esi-0xa]
  40e036:	cmp    ebx,DWORD PTR [edi+0x71325956]
  40e03c:	xchg   edi,eax
  40e03d:	dec    esi
  40e03e:	mov    ebx,0x527b2d9
  40e043:	dec    edi
  40e044:	jmp    0x96ef:0xc8a8ef8e
  40e04b:	out    0x4b,eax
  40e04d:	add    al,0x36
  40e04f:	mov    edx,0x67fc00be
  40e054:	adc    esi,esp
  40e056:	mov    eax,0x6caf7ca4
  40e05b:	sub    DWORD PTR [edi-0x30b4c7fd],esi
  40e061:	cmp    al,0xc8
  40e063:	loop   0x40e09d
  40e065:	fistp  DWORD PTR [ebp+0x2b]
  40e068:	jp     0x40e023
  40e06a:	jecxz  0x40dff9
  40e06c:	call   0xdc26:0x20c5f1c7
  40e073:	sbb    eax,0x32aa90d4
  40e078:	test   eax,0x1ffeeddb
  40e07d:	ins    DWORD PTR es:[edi],dx
  40e07e:	jge    0x40e08e
  40e080:	mov    esp,0xb77aa222
  40e085:	xor    ebx,DWORD PTR [esi]
  40e087:	cmp    al,0xf0
  40e089:	push   ebp
  40e08a:	out    dx,eax
  40e08b:	popa   
  40e08c:	stc    
  40e08d:	cdq    
  40e08e:	ja     0x40e02a
  40e090:	iret   
  40e091:	sub    eax,0x95f33753
  40e096:	sbb    ebp,ebp
  40e098:	xchg   esi,eax
  40e099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e09a:	inc    ebx
  40e09b:	lds    ecx,FWORD PTR [edi+edi*1+0x3d8d2fce]
  40e0a2:	fdiv   QWORD PTR [eax]
  40e0a4:	daa    
  40e0a5:	cli    
  40e0a6:	sbb    DWORD PTR [ecx+0x2da61810],edi
  40e0ac:	test   DWORD PTR [eax+eiz*4],esp
  40e0af:	scas   al,BYTE PTR es:[edi]
  40e0b0:	cdq    
  40e0b1:	je     0x40e0f0
  40e0b3:	add    DWORD PTR [edi],eax
  40e0b5:	jp     0x40e083
  40e0b7:	mov    edx,0xa05e71b5
  40e0bc:	mov    ds:0x9f05ee0,eax
  40e0c1:	cmp    DWORD PTR [ebp-0x63],ebp
  40e0c4:	cli    
  40e0c5:	dec    ebp
  40e0c6:	push   eax
  40e0c7:	add    bh,BYTE PTR [ebx+0xf]
  40e0ca:	or     cl,BYTE PTR [ebp+0x56b980b1]
  40e0d0:	addr16 jmp 0xe116:0xd1352db7
  40e0d8:	in     al,0x3
  40e0da:	outs   dx,BYTE PTR ds:[esi]
  40e0db:	jmp    0x725845e5
  40e0e0:	sbb    eax,0xbfe2c30
  40e0e5:	fiadd  DWORD PTR [edx]
  40e0e7:	addr16 pop eax
  40e0e9:	adc    edx,eax
  40e0eb:	mov    ebp,0x983dc30d
  40e0f0:	inc    ecx
  40e0f1:	les    eax,FWORD PTR [edi-0x27]
  40e0f4:	push   edx
  40e0f5:	jbe    0x40e097
  40e0f7:	test   DWORD PTR [edx],ecx
  40e0f9:	(bad)  
  40e0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0fc:	cwde   
  40e0fd:	out    0x9a,al
  40e0ff:	xor    esi,esi
  40e101:	mov    eax,0xe782f7c
  40e106:	sbb    ebp,DWORD PTR [ebp+0x35]
  40e109:	aaa    
  40e10a:	out    dx,eax
  40e10b:	test   BYTE PTR [edi],bh
  40e10d:	lods   al,BYTE PTR ds:[esi]
  40e10e:	jbe    0x40e147
  40e110:	sbb    al,0x93
  40e112:	push   ds
  40e113:	push   ecx
  40e114:	push   edi
  40e115:	mov    ecx,0xafb1a8cf
  40e11a:	arpl   WORD PTR [eax],si
  40e11c:	adc    dh,BYTE PTR [esi+edi*2]
  40e11f:	aad    0xce
  40e121:	mov    DWORD PTR [esp+ebx*2+0x30],ebx
  40e125:	cld    
  40e126:	jae    0x40e151
  40e128:	jne    0x40e123
  40e12a:	outs   dx,BYTE PTR ds:[esi]
  40e12b:	and    eax,0xa7cdd7c8
  40e130:	jge    0x40e117
  40e132:	inc    eax
  40e133:	pop    esi
  40e134:	inc    eax
  40e135:	xchg   edi,eax
  40e136:	mul    DWORD PTR [edx+0x7c204954]
  40e13c:	inc    esp
  40e13d:	(bad)  
  40e13e:	xor    dh,BYTE PTR [edi-0x18]
  40e141:	imul   ebp,DWORD PTR [edi+0x40f4241d],0x61c44ccb
  40e14b:	inc    ebx
  40e14c:	das    
  40e14d:	call   FWORD PTR [edi-0x17]
  40e150:	gs push ss
  40e152:	mov    ebx,0x80efca8a
  40e157:	jno    0x40e1b2
  40e159:	bnd jg 0x40e104
  40e15c:	sub    eax,0x6557558b
  40e161:	lds    eax,FWORD PTR [edx]
  40e163:	pop    ss
  40e164:	ret    
  40e165:	dec    eax
  40e166:	leave  
  40e167:	pop    ss
  40e168:	and    al,0x8a
  40e16a:	cmp    cl,BYTE PTR [edx+ebx*8+0xc516281]
  40e171:	dec    esi
  40e172:	dec    edi
  40e173:	cmp    DWORD PTR [edi-0x36],eax
  40e176:	inc    ebp
  40e177:	xor    BYTE PTR [ecx-0x1d],dh
  40e17a:	fadd   QWORD PTR cs:[esp-0x28f06a51]
  40e182:	mov    edx,0x707d1119
  40e187:	push   eax
  40e188:	sub    bl,al
  40e18a:	dec    ecx
  40e18b:	shl    DWORD PTR [ecx+0x26],cl
  40e18e:	stos   BYTE PTR es:[edi],al
  40e18f:	and    ebx,ecx
  40e191:	and    DWORD PTR [ecx-0xd],ebp
  40e194:	int3   
  40e195:	shl    cl,1
  40e197:	mov    ds:0x2b66e2af,eax
  40e19c:	inc    eax
  40e19d:	mov    ch,0x83
  40e19f:	sbb    eax,0xbff3cd12
  40e1a4:	jb     0x40e21a
  40e1a6:	adc    DWORD PTR [eax-0x14f8492a],0xffffffb0
  40e1ad:	fdivr  DWORD PTR [ecx+0x27]
  40e1b0:	jg     0x40e226
  40e1b2:	ja     0x40e1da
  40e1b4:	and    al,0xea
  40e1b6:	push   ebp
  40e1b7:	mov    edi,0x6284e6b0
  40e1bc:	std    
  40e1bd:	(bad)  
  40e1be:	and    ebp,DWORD PTR [ecx-0x7a]
  40e1c1:	mov    ecx,DWORD PTR [edi]
  40e1c3:	(bad)  
  40e1c5:	mov    ebp,0x58bc4af5
  40e1ca:	push   ebp
  40e1cb:	retf   0xd864
  40e1ce:	push   ecx
  40e1cf:	out    dx,al
  40e1d0:	pmaddwd mm3,QWORD PTR [edi-0x50]
  40e1d4:	dec    ebp
  40e1d5:	jmp    0xf1dc9f1e
  40e1da:	mov    ds:0x3c5e29ae,al
  40e1df:	jge    0x40e1f7
  40e1e1:	mov    ah,0xd2
  40e1e3:	lods   eax,DWORD PTR ds:[esi]
  40e1e4:	lahf   
  40e1e5:	sti    
  40e1e6:	sub    al,0x9c
  40e1e8:	lock in al,dx
  40e1ea:	mov    ebp,DWORD PTR [ebx]
  40e1ec:	adc    eax,DWORD PTR [esi+0x724186da]
  40e1f2:	daa    
  40e1f3:	call   0x30eb3792
  40e1f8:	cs sub al,0xe8
  40e1fb:	and    ebp,ebp
  40e1fd:	popf   
  40e1fe:	or     cl,BYTE PTR [esi+edx*8-0x762a3f68]
  40e205:	(bad)  
  40e206:	cmp    eax,0xdd6b1959
  40e20b:	cmp    al,0xbf
  40e20d:	xor    ebx,esp
  40e20f:	sbb    al,BYTE PTR [esi-0x7e8eaff5]
  40e215:	mov    ah,0xd8
  40e217:	clc    
  40e218:	adc    DWORD PTR [ecx],0x2f
  40e21b:	lods   eax,DWORD PTR ds:[esi]
  40e21c:	add    esp,DWORD PTR [esi-0x1741b134]
  40e222:	stos   BYTE PTR es:[edi],al
  40e223:	mov    dl,0xef
  40e225:	outs   dx,DWORD PTR ds:[esi]
  40e226:	jg     0x40e286
  40e228:	inc    edx
  40e229:	inc    ecx
  40e22a:	jae    0x40e259
  40e22c:	lock adc ah,BYTE PTR [edx+0x4c]
  40e230:	loope  0x40e1be
  40e232:	inc    ecx
  40e233:	push   edx
  40e234:	hlt    
  40e235:	adc    DWORD PTR [edx],ebx
  40e237:	adc    ecx,ebx
  40e239:	push   esi
  40e23a:	lods   al,BYTE PTR ds:[esi]
  40e23b:	lock xchg ebx,eax
  40e23d:	and    dl,BYTE PTR ds:0xa5ae7dc
  40e243:	push   ecx
  40e244:	cmp    al,0xad
  40e246:	mov    bl,0x74
  40e248:	clc    
  40e249:	enter  0x7803,0x60
  40e24d:	pop    es
  40e24e:	mov    eax,ds:0x33adb99
  40e253:	dec    ebp
  40e254:	xchg   dh,bh
  40e256:	dec    ebx
  40e257:	jmp    0x40e1f4
  40e259:	pop    ss
  40e25a:	pop    edi
  40e25b:	retf   0x56c6
  40e25e:	jns    0x40e21c
  40e260:	push   0x500e5f14
  40e265:	push   cs
  40e266:	shl    bl,0xe
  40e269:	fbld   TBYTE PTR [ecx]
  40e26b:	outs   dx,BYTE PTR ds:[esi]
  40e26c:	push   eax
  40e26d:	or     ebx,eax
  40e26f:	dec    esp
  40e270:	retf   0x4fae
  40e273:	adc    dh,BYTE PTR [edx]
  40e275:	mov    al,0x45
  40e277:	pop    edi
  40e278:	repz arpl WORD PTR [eax],bp
  40e27b:	or     ecx,edx
  40e27d:	or     ch,ch
  40e27f:	out    0x9,eax
  40e281:	cmp    eax,0x9a14dde0
  40e286:	lahf   
  40e287:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40e289:	int3   
  40e28a:	or     al,0x3
  40e28c:	lds    esp,FWORD PTR [eax-0x6f]
  40e28f:	test   eax,0x2f7a6bf2
  40e294:	test   DWORD PTR ds:0xe4a78bcb,eax
  40e29a:	out    dx,eax
  40e29b:	pop    edi
  40e29c:	fmul   DWORD PTR [ebx+0x550d4348]
  40e2a2:	xor    DWORD PTR [edi+0xe],0xeff76a2c
  40e2a9:	push   esi
  40e2aa:	cmc    
  40e2ab:	test   DWORD PTR [ecx+0x22a8dd74],ebp
  40e2b1:	pop    es
  40e2b2:	inc    edi
  40e2b3:	sbb    BYTE PTR [ecx+0x5ab7e697],0xe9
  40e2ba:	inc    esi
  40e2bb:	sahf   
  40e2bc:	test   BYTE PTR [edx+esi*4-0x118d497f],bl
  40e2c3:	xchg   ecx,eax
  40e2c4:	xor    eax,0xc0ba565f
  40e2c9:	or     DWORD PTR [eax+eax*2-0x7c6a2d48],ebp
  40e2d0:	push   edx
  40e2d1:	(bad)  
  40e2d3:	sub    edi,ecx
  40e2d5:	jmp    0x40e2ab
  40e2d7:	jge    0x40e2a3
  40e2d9:	adc    ecx,esi
  40e2db:	and    cl,dh
  40e2dd:	jbe    0x40e303
  40e2df:	pop    ebp
  40e2e0:	jecxz  0x40e29c
  40e2e2:	shl    DWORD PTR [edi-0x3c],0xfb
  40e2e6:	fxtract 
  40e2e8:	scas   eax,DWORD PTR es:[edi]
  40e2e9:	push   ecx
  40e2ea:	das    
  40e2eb:	mov    eax,0x75e63601
  40e2f0:	ret    
  40e2f1:	ror    BYTE PTR ds:0xaf84349f,0xb3
  40e2f9:	pop    edi
  40e2fa:	xor    DWORD PTR [ebp-0x1779845c],edx
  40e300:	std    
  40e301:	rcr    edx,1
  40e303:	and    edi,DWORD PTR [edx+0x159c3ec0]
  40e309:	xor    BYTE PTR [edx+0x176df88f],0x8f
  40e310:	cli    
  40e311:	jo     0x40e2d5
  40e313:	add    DWORD PTR [eax],ebp
  40e315:	loop   0x40e341
  40e317:	sbb    DWORD PTR [ebp+0x71],ebp
  40e31a:	out    0xd9,eax
  40e31c:	icebp  
  40e31d:	push   ds
  40e31e:	lea    eax,[ebx-0x16238361]
  40e324:	gs (bad) 
  40e326:	(bad)  
  40e328:	pop    ecx
  40e329:	add    bl,BYTE PTR [edi+ecx*4]
  40e32c:	sti    
  40e32d:	mov    edi,0x83dda867
  40e332:	call   ebx
  40e334:	xchg   ebp,eax
  40e335:	mov    edx,0xb4dc67b6
  40e33a:	cmp    ecx,edx
  40e33c:	aas    
  40e33d:	leave  
  40e33e:	pop    ebx
  40e33f:	cmc    
  40e340:	push   ebp
  40e341:	jae    0x40e360
  40e343:	clc    
  40e344:	data16 das 
  40e346:	dec    esi
  40e347:	(bad)  
  40e348:	sahf   
  40e349:	jae    0x40e390
  40e34b:	xchg   BYTE PTR [eax+eiz*4],ch
  40e34e:	ret    0x56b5
  40e351:	or     DWORD PTR [esi+edi*8+0x4b],edi
  40e355:	sbb    dl,bh
  40e357:	pop    edx
  40e358:	jmp    0xc8330892
  40e35d:	cmp    edx,DWORD PTR [ebp+eax*2-0x36f0b36c]
  40e364:	jmp    0x40e33d
  40e366:	lods   al,BYTE PTR ds:[esi]
  40e367:	jne    0x40e384
  40e369:	and    DWORD PTR [esi-0x20],esi
  40e36c:	mov    edi,0xcdafcd32
  40e371:	mov    ecx,0xf27eb0ab
  40e376:	sbb    DWORD PTR [eax+0x6d],ebx
  40e379:	cmp    dl,BYTE PTR [edx-0x2e196dde]
  40e37f:	inc    ecx
  40e380:	in     al,0x14
  40e382:	aam    0xa
  40e384:	cdq    
  40e385:	push   ecx
  40e386:	xor    eax,0xc5419253
  40e38b:	push   es
  40e38c:	(bad)  
  40e38d:	dec    ecx
  40e38f:	pop    ebx
  40e390:	adc    dh,BYTE PTR [esi-0xdfe9be]
  40e396:	xor    eax,0x6e924a76
  40e39b:	or     al,0x34
  40e39d:	int3   
  40e39e:	sbb    DWORD PTR [ebp+0xfc4c003],esp
  40e3a4:	mov    edx,0x1dd447b6
  40e3a9:	test   BYTE PTR [edi+0x10],bl
  40e3ac:	arpl   bx,bx
  40e3ae:	dec    ebx
  40e3af:	loop   0x40e3d8
  40e3b1:	adc    bl,ch
  40e3b3:	nop
  40e3b4:	mov    edi,0xd689da7
  40e3b9:	and    DWORD PTR [eax],esi
  40e3bb:	in     al,0x7f
  40e3bd:	es out dx,eax
  40e3bf:	jl     0x40e388
  40e3c1:	jno    0x40e3da
  40e3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c4:	ret    
  40e3c5:	ss ret 
  40e3c7:	ficom  WORD PTR [esi+0x22]
  40e3ca:	jl     0x40e449
  40e3cc:	jb     0x40e446
  40e3ce:	ss ins BYTE PTR es:[edi],dx
  40e3d0:	inc    edi
  40e3d1:	pop    ecx
  40e3d2:	test   DWORD PTR [ebx+0x1df078a2],edx
  40e3d8:	push   ecx
  40e3d9:	ja     0x40e39e
  40e3db:	dec    ecx
  40e3dc:	out    0xe2,al
  40e3de:	cmp    al,BYTE PTR [ebx-0x46dcefca]
  40e3e4:	xor    al,0x6
  40e3e6:	fwait
  40e3e7:	pop    edi
  40e3e8:	repz mov ebx,?
  40e3eb:	or     cl,dl
  40e3ed:	loop   0x40e42f
  40e3ef:	lods   eax,DWORD PTR ds:[esi]
  40e3f0:	xchg   edi,eax
  40e3f1:	add    BYTE PTR gs:[ebx-0x67],ah
  40e3f5:	aas    
  40e3f6:	scas   al,BYTE PTR es:[edi]
  40e3f7:	sahf   
  40e3f8:	cmova  esp,DWORD PTR [ebx-0xe]
  40e3fc:	sbb    BYTE PTR [ebp+0x5a],bh
  40e3ff:	add    DWORD PTR [ebx+eax*8],ebp
  40e402:	push   edx
  40e403:	add    eax,0x87fb2a93
  40e408:	loop   0x40e3c9
  40e40a:	cmp    BYTE PTR [ecx-0x6b],bl
  40e40d:	push   cs
  40e40e:	loope  0x40e3d3
  40e410:	(bad)  
  40e411:	xchg   ebp,eax
  40e412:	dec    ecx
  40e413:	rcl    BYTE PTR [ebx+0x41b312bd],1
  40e419:	push   ecx
  40e41a:	jle    0x40e3f3
  40e41c:	pop    ds
  40e41d:	mov    ebx,0x3ce85689
  40e422:	mov    dh,0xff
  40e424:	xchg   edx,eax
  40e425:	xor    edx,DWORD PTR [esi-0x780f7323]
  40e42b:	add    DWORD PTR [edi],ebp
  40e42d:	retf   0xbac
  40e430:	das    
  40e431:	cmp    DWORD PTR [ecx],ecx
  40e433:	sub    eax,0x6f55386
  40e438:	and    edx,DWORD PTR [ecx-0x184fb981]
  40e43e:	test   DWORD PTR [edi],0x1e1c3459
  40e444:	mov    eax,ds:0xbee6954b
  40e449:	shl    DWORD PTR [eax+0x6],0x2d
  40e44d:	popf   
  40e44e:	scas   al,BYTE PTR es:[edi]
  40e44f:	retf   0x7ba
  40e452:	mov    ds:0xaf240b64,al
  40e457:	shl    DWORD PTR [eax],0x3
  40e45a:	sub    eax,0xab5fb913
  40e45f:	and    bh,BYTE PTR [ebp+edi*1-0x48]
  40e463:	pop    eax
  40e464:	xchg   ebp,eax
  40e465:	std    
  40e466:	mov    eax,ds:0x7d6c518d
  40e46b:	fs add esi,esp
  40e46e:	mov    ss,WORD PTR [ecx-0x7a68356a]
  40e474:	mov    edx,0xaec45b28
  40e479:	mov    ch,0xfa
  40e47b:	sub    eax,0xbd5fd44
  40e480:	xlat   BYTE PTR ds:[ebx]
  40e481:	add    ch,0x38
  40e484:	or     cl,BYTE PTR [esi-0x1681fcbf]
  40e48a:	xchg   edx,eax
  40e48b:	jbe    0x40e508
  40e48d:	cmp    al,0x34
  40e48f:	and    DWORD PTR [esi+0xf63764b],esp
  40e495:	add    DWORD PTR [edi-0x63],ebp
  40e498:	sbb    ch,BYTE PTR [ecx-0x1b]
  40e49b:	or     ebx,DWORD PTR [eax]
  40e49d:	fsubr  QWORD PTR ds:0x3cb059e7
  40e4a3:	pop    esi
  40e4a4:	xor    edi,DWORD PTR [ebx+0x4a]
  40e4a7:	es iret 
  40e4a9:	xchg   edx,eax
  40e4aa:	or     al,0x71
  40e4ac:	dec    ebp
  40e4ad:	pop    ecx
  40e4ae:	inc    eax
  40e4af:	adc    dh,BYTE PTR [ebx+0x69]
  40e4b2:	cld    
  40e4b3:	pop    ds
  40e4b4:	test   al,0x48
  40e4b6:	scas   eax,DWORD PTR es:[edi]
  40e4b7:	sbb    al,dl
  40e4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4ba:	inc    ebx
  40e4bb:	mov    al,0xf1
  40e4bd:	fs jns 0x40e468
  40e4c0:	mov    bh,0x6b
  40e4c2:	adc    al,0xe0
  40e4c4:	mov    bl,0xad
  40e4c6:	in     al,dx
  40e4c7:	je     0x40e4dd
  40e4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ca:	hlt    
  40e4cb:	cmp    ah,BYTE PTR [eiz*8+0x4876e8e9]
  40e4d2:	sub    edi,DWORD PTR [ebx+0x4f55006a]
  40e4d8:	jne    0x40e47e
  40e4da:	ins    BYTE PTR es:[edi],dx
  40e4db:	cmc    
  40e4dc:	test   al,0x7c
  40e4de:	and    bl,BYTE PTR [edx+0x6d]
  40e4e1:	mov    bh,0xfb
  40e4e3:	push   edx
  40e4e4:	sub    cl,ch
  40e4e6:	inc    edx
  40e4e7:	sub    DWORD PTR ds:0x7b7f0201,ecx
  40e4ed:	cmp    cl,BYTE PTR ds:0xae75508e
  40e4f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4f4:	pop    esi
  40e4f5:	pop    esi
  40e4f6:	mov    cl,0x3a
  40e4f8:	xchg   edi,eax
  40e4f9:	retf   0x3aa6
  40e4fc:	call   0xe9ad:0xa48d02bb
  40e503:	fidivr WORD PTR [esi+0x741a8268]
  40e509:	jb     0x40e4f2
  40e50b:	cmp    eax,0xe4ce8d1a
  40e510:	or     BYTE PTR [ecx],al
  40e512:	jmp    0x40e4da
  40e514:	pop    ebx
  40e515:	daa    
  40e516:	ja     0x40e594
  40e518:	lea    edx,[eax]
  40e51a:	xor    DWORD PTR [ebp+0x5e],esp
  40e51d:	cmp    al,0x69
  40e51f:	jg     0x40e537
  40e521:	push   edx
  40e522:	lods   eax,DWORD PTR ds:[esi]
  40e523:	pop    ds
  40e524:	std    
  40e525:	test   BYTE PTR [esi],al
  40e527:	in     al,dx
  40e528:	xlat   BYTE PTR ds:[ebx]
  40e529:	mov    ah,0x1b
  40e52b:	retf   
  40e52c:	(bad)  
  40e52d:	cmp    eax,0x409bc182
  40e532:	xor    al,0x7
  40e534:	daa    
  40e535:	adc    DWORD PTR [esi],edi
  40e537:	lock loop 0x40e4d2
  40e53a:	sub    al,0x10
  40e53c:	push   cs
  40e53d:	aam    0x4c
  40e53f:	sub    BYTE PTR [ecx],ch
  40e541:	xchg   ebp,eax
  40e542:	add    eax,0xdb3060ae
  40e547:	dec    ebx
  40e548:	fwait
  40e549:	or     ah,bl
  40e54b:	dec    esi
  40e54c:	pop    esi
  40e54d:	scas   eax,DWORD PTR es:[edi]
  40e54e:	sbb    DWORD PTR [eax],edi
  40e550:	pop    ebp
  40e551:	sub    DWORD PTR [ecx+0x434a5d39],ebp
  40e557:	loope  0x40e54d
  40e559:	pushf  
  40e55a:	add    al,0xab
  40e55c:	dec    ebx
  40e55d:	inc    ebx
  40e55e:	(bad)  
  40e55f:	mov    cl,BYTE PTR [edx]
  40e561:	in     eax,0x1
  40e563:	inc    esp
  40e564:	cmp    BYTE PTR [eax+0x4f198af],dh
  40e56a:	mov    al,0x66
  40e56c:	adc    DWORD PTR [ebx-0x69],0x989d6f5f
  40e573:	xchg   esi,eax
  40e574:	scas   al,BYTE PTR es:[edi]
  40e575:	arpl   WORD PTR [esi-0x67],bx
  40e578:	shr    BYTE PTR [ecx+ebp*8],0xc5
  40e57c:	jmp    0x92b2:0xffafb44c
  40e583:	fwait
  40e584:	adc    BYTE PTR [edi],bh
  40e586:	out    0x49,al
  40e588:	mov    ds:0x3c78574f,eax
  40e58d:	loopne 0x40e5b2
  40e58f:	sub    esp,DWORD PTR [eax]
  40e591:	pop    ds
  40e592:	in     al,0xd7
  40e594:	mov    ds:0xec434e09,eax
  40e599:	push   ebx
  40e59a:	mov    WORD PTR ds:0x9eb86a4d,cs
  40e5a0:	jge    0x40e59e
  40e5a2:	fidivr WORD PTR [esi+esi*2-0x1adf2836]
  40e5a9:	int3   
  40e5aa:	fxtract 
  40e5ac:	and    BYTE PTR [edi+ebx*4],bl
  40e5af:	jecxz  0x40e5fb
  40e5b1:	mov    WORD PTR [ebx-0x37357e99],ss
  40e5b7:	push   edx
  40e5b8:	imul   ebx,esp,0x2421ffd6
  40e5be:	push   ebx
  40e5bf:	hlt    
  40e5c0:	(bad)  [ebp+eax*2+0x5a2c14ae]
  40e5c7:	fadd   DWORD PTR [eax+0x66]
  40e5ca:	(bad)  
  40e5cb:	iret   
  40e5cc:	addr16 sti 
  40e5ce:	lods   al,BYTE PTR ds:[esi]
  40e5cf:	and    al,ch
  40e5d1:	mov    al,ds:0xdcefe8d0
  40e5d6:	pop    esi
  40e5d7:	jmp    0xde9e:0xb68648fe
  40e5de:	jmp    0x40e5c0
  40e5e0:	mov    al,ds:0xe2097bc6
  40e5e5:	sub    DWORD PTR [esi],edx
  40e5e7:	sbb    al,0xe4
  40e5e9:	cmc    
  40e5ea:	pop    ebp
  40e5eb:	pop    ecx
  40e5ec:	sbb    DWORD PTR [esi+0x5cc67444],ecx
  40e5f2:	fdivp  st(1),st
  40e5f4:	pop    ecx
  40e5f5:	lds    edi,FWORD PTR [esi-0xd]
  40e5f8:	aad    0xd7
  40e5fa:	repnz call 0xc55e:0xaa361d73
  40e602:	loopne 0x40e5a4
  40e604:	sahf   
  40e605:	out    dx,eax
  40e606:	std    
  40e607:	js     0x40e5f5
  40e609:	or     DWORD PTR [ebp+0x4a],ebx
  40e60c:	pop    esi
  40e60d:	mov    esi,0x3d114506
  40e612:	cmp    al,0x2b
  40e614:	test   al,0xb6
  40e616:	jp     0x40e616
  40e618:	xchg   ecx,eax
  40e619:	dec    ebp
  40e61a:	in     al,dx
  40e61b:	(bad)  
  40e61c:	pushf  
  40e61d:	sbb    ebp,DWORD PTR [ebp-0x72]
  40e620:	mov    ?,esp
  40e622:	ret    
  40e623:	pop    ebx
  40e624:	cmp    al,0xb3
  40e626:	cli    
  40e627:	adc    dh,BYTE PTR [esi-0x2ad649a]
  40e62d:	inc    esi
  40e62e:	sub    ch,dh
  40e630:	mov    ebx,0x916c70a2
  40e635:	iret   
  40e636:	(bad)  
  40e637:	cmc    
  40e638:	cs fs mov bl,0x28
  40e63c:	repnz mov ebx,0x8889b383
  40e642:	or     ch,ah
  40e644:	hlt    
  40e645:	pop    ebx
  40e646:	mov    ebp,0x1009b368
  40e64b:	fdivr  QWORD PTR [ecx]
  40e64d:	out    0x34,eax
  40e64f:	rol    dh,0x30
  40e652:	add    dl,BYTE PTR [ecx-0x19f7ceb4]
  40e658:	jle    0x40e6bd
  40e65a:	sbb    al,0x8e
  40e65c:	stc    
  40e65d:	lods   eax,DWORD PTR ds:[esi]
  40e65e:	add    edx,ecx
  40e660:	(bad)  
  40e662:	push   edx
  40e663:	inc    ebx
  40e664:	nop
  40e665:	(bad)  
  40e666:	repnz out dx,eax
  40e668:	xor    BYTE PTR [edx],dl
  40e66a:	int    0xa8
  40e66c:	aad    0x9a
  40e66e:	mul    DWORD PTR [edx+0x5b466bf0]
  40e674:	pop    ebx
  40e675:	add    cl,dh
  40e677:	lods   al,BYTE PTR ds:[si]
  40e679:	pushf  
  40e67a:	in     al,dx
  40e67b:	and    al,0xbb
  40e67d:	inc    esp
  40e67e:	or     bl,BYTE PTR [edx-0x71]
  40e681:	test   al,cl
  40e683:	sub    eax,0xf84c9956
  40e688:	clc    
  40e689:	inc    eax
  40e68a:	mov    eax,0xfb1df4db
  40e68f:	mov    bl,0xb9
  40e691:	xchg   edi,eax
  40e692:	sub    eax,0x411c7580
  40e697:	mov    ebx,0x3844bd89
  40e69c:	adc    eax,0x6900597f
  40e6a1:	xchg   esp,eax
  40e6a2:	not    esi
  40e6a4:	js     0x40e6c8
  40e6a6:	call   DWORD PTR [ebp+0x7e]
  40e6a9:	jmp    0x1cc0f88c
  40e6ae:	in     eax,dx
  40e6af:	xlat   BYTE PTR ds:[ebx]
  40e6b0:	push   ds
  40e6b1:	fcmovnb st,st(7)
  40e6b3:	nop
  40e6b4:	(bad)  
  40e6b5:	mov    eax,0xd16a1f2c
  40e6ba:	sbb    eax,0xdcdde1fd
  40e6bf:	jb     0x40e72a
  40e6c1:	jp     0x40e700
  40e6c3:	or     ebp,ecx
  40e6c5:	xlat   BYTE PTR ds:[ebx]
  40e6c6:	xor    BYTE PTR [ecx+0x29dc3960],dh
  40e6cc:	adc    al,0x14
  40e6ce:	or     dh,BYTE PTR [ebx-0x43]
  40e6d1:	mov    ds:0x224688a6,eax
  40e6d6:	in     eax,dx
  40e6d7:	xor    BYTE PTR [ecx-0x18],al
  40e6da:	or     dl,0x28
  40e6dd:	push   ecx
  40e6de:	and    al,0x26
  40e6e0:	mov    ecx,0x2bba6be1
  40e6e5:	not    BYTE PTR [esi+0x7d]
  40e6e8:	sub    edx,ebp
  40e6ea:	aas    
  40e6eb:	cmc    
  40e6ec:	(bad)  
  40e6ed:	daa    
  40e6ee:	cmp    BYTE PTR [ecx],dl
  40e6f0:	jo     0x40e684
  40e6f2:	fild   DWORD PTR [ebp-0x16f88ecb]
  40e6f8:	add    dl,0xa5
  40e6fb:	push   edx
  40e6fc:	mov    eax,ds:0x3299b978
  40e701:	test   BYTE PTR [eax+0x3c],cl
  40e704:	inc    edx
  40e705:	mov    eax,0x2a30ca4f
  40e70a:	ins    DWORD PTR es:[edi],dx
  40e70b:	out    dx,al
  40e70c:	rcr    ecx,0x34
  40e70f:	fmul   QWORD PTR [edi]
  40e711:	mov    esi,0x73a5a48a
  40e716:	pushf  
  40e717:	(bad)  
  40e718:	ret    
  40e719:	xor    al,0x2d
  40e71b:	push   eax
  40e71c:	sub    BYTE PTR [ebx+0x65045474],bl
  40e722:	cld    
  40e723:	xor    esi,DWORD PTR [ebx+0x78f31293]
  40e729:	das    
  40e72a:	add    eax,0xa42a2c2d
  40e72f:	not    DWORD PTR [ebp+0x20]
  40e732:	xchg   esi,eax
  40e733:	jae    0x40e71e
  40e735:	(bad)  
  40e736:	test   DWORD PTR [ebx+0x3c12925c],0xa2300a90
  40e740:	adc    DWORD PTR [esi+ecx*4],ebp
  40e743:	mov    edi,0x79b081b
  40e748:	xor    eax,0xf91a0027
  40e74d:	xor    esi,DWORD PTR [edx]
  40e74f:	pop    ebp
  40e750:	popa   
  40e751:	pop    edi
  40e752:	mov    esp,0xd793487d
  40e757:	scas   al,BYTE PTR es:[edi]
  40e758:	aaa    
  40e759:	retf   0x969
  40e75c:	mov    ecx,DWORD PTR [ecx+0x44333c47]
  40e762:	push   cs
  40e763:	fmul   DWORD PTR [ecx]
  40e765:	das    
  40e766:	(bad)
  40e769:	dec    eax
  40e76a:	idiv   dh
  40e76c:	fbld   TBYTE PTR [edx+0x52]
  40e76f:	dec    edi
  40e770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e771:	in     eax,dx
  40e772:	jb     0x40e7b8
  40e774:	js     0x40e73b
  40e776:	shl    BYTE PTR [esi-0x4ff525f3],0x16
  40e77d:	and    DWORD PTR [ecx-0x11b8d7a],eax
  40e783:	jno    0x40e72d
  40e785:	int    0xa8
  40e787:	clc    
  40e788:	repnz mov esp,ebp
  40e78b:	add    eax,0x98bd6f87
  40e790:	cwde   
  40e791:	xchg   ebp,eax
  40e792:	mov    esi,0x21ccfa2
  40e797:	push   cs
  40e798:	push   cs
  40e799:	loop   0x40e7f8
  40e79b:	inc    ebx
  40e79c:	sub    eax,0xdcbac944
  40e7a1:	mov    DWORD PTR [esp+ebp*1],0x51a57e01
  40e7a8:	push   cs
  40e7a9:	pushf  
  40e7aa:	in     eax,0x3
  40e7ac:	rcl    DWORD PTR [esi],0x91
  40e7af:	and    eax,0xaf0df522
  40e7b4:	xlat   BYTE PTR ds:[ebx]
  40e7b5:	rcl    ecx,0x3f
  40e7b8:	in     eax,0xcc
  40e7ba:	xchg   ebx,eax
  40e7bb:	xor    al,0x3f
  40e7bd:	pop    edi
  40e7be:	clc    
  40e7bf:	jecxz  0x40e81d
  40e7c1:	adc    BYTE PTR [ecx+0x9],bl
  40e7c4:	fs adc eax,0xa414ecc4
  40e7ca:	outs   dx,BYTE PTR ds:[esi]
  40e7cb:	push   es
  40e7cc:	mov    DWORD PTR [eax-0x18a98553],ebp
  40e7d2:	mov    cl,0x21
  40e7d4:	(bad)  
  40e7d5:	jge    0x40e83b
  40e7d7:	shl    DWORD PTR [ebx-0x2f01e70c],0x7b
  40e7de:	dec    edi
  40e7df:	inc    edi
  40e7e0:	mov    esi,0x7d67d080
  40e7e5:	pusha  
  40e7e6:	ficomp DWORD PTR [ebx]
  40e7e8:	fistp  DWORD PTR [edi+0x20]
  40e7eb:	mov    BYTE PTR [ecx+edi*4-0x63],ch
  40e7ef:	icebp  
  40e7f0:	std    
  40e7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7f2:	mov    ds:0x8bb21cbb,al
  40e7f7:	mov    ?,WORD PTR [esi]
  40e7f9:	xor    cl,bh
  40e7fb:	icebp  
  40e7fc:	mov    ch,0x1b
  40e7fe:	sub    al,ah
  40e800:	lods   eax,DWORD PTR ds:[esi]
  40e801:	mov    dh,0xe4
  40e803:	std    
  40e804:	into   
  40e805:	fadd   DWORD PTR [bx+0x10]
  40e809:	nop
  40e80a:	sbb    edx,DWORD PTR [edi+0x23]
  40e80d:	adc    DWORD PTR [esi+ebp*4],esi
  40e810:	pop    esi
  40e811:	pop    ebx
  40e812:	sub    DWORD PTR ds:0x4b713728,0x73
  40e819:	lods   eax,DWORD PTR ds:[esi]
  40e81a:	out    dx,eax
  40e81b:	sub    BYTE PTR [ebx],bh
  40e81d:	lods   al,BYTE PTR ds:[esi]
  40e81e:	sbb    dh,bl
  40e820:	push   0x6e294c2e
  40e825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e826:	fdiv   DWORD PTR [eax]
  40e828:	aam    0xc3
  40e82a:	rcl    dl,1
  40e82c:	fs enter 0x4f30,0xbb
  40e831:	scas   al,BYTE PTR es:[edi]
  40e832:	push   edx
  40e833:	clc    
  40e834:	ret    0xc859
  40e837:	add    ecx,eax
  40e839:	shl    BYTE PTR [ecx],cl
  40e83b:	jle    0x40e892
  40e83d:	xlat   BYTE PTR ds:[ebx]
  40e83e:	jae    0x40e87d
  40e840:	pop    esi
  40e841:	sbb    al,0x3b
  40e843:	pop    ebp
  40e844:	cmp    BYTE PTR [esi+0x57],bh
  40e847:	es or  eax,0x80faa925
  40e84d:	or     DWORD PTR ds:0x903bd274,ecx
  40e853:	or     al,0x3d
  40e855:	ja     0x40e7fa
  40e857:	mov    DWORD PTR [ebx-0x38],edi
  40e85a:	mov    ecx,0xd9589524
  40e85f:	cmp    DWORD PTR [edi],ebp
  40e861:	sbb    DWORD PTR [ebx],esp
  40e863:	fistp  DWORD PTR [esi]
  40e865:	xor    dl,BYTE PTR [eax]
  40e867:	pop    eax
  40e868:	dec    edi
  40e869:	cmp    ebp,ebp
  40e86b:	in     eax,0xbc
  40e86d:	sbb    ah,BYTE PTR [edx+0x42cbec11]
  40e873:	jge    0x40e864
  40e875:	xchg   ebp,eax
  40e876:	ss xor eax,0xaed55356
  40e87c:	icebp  
  40e87d:	push   esp
  40e87e:	mov    ds:0x2d3082e4,al
  40e883:	adc    DWORD PTR [ebx+0x21707b60],esi
  40e889:	or     al,0x40
  40e88b:	mov    esi,ebx
  40e88d:	xchg   edx,eax
  40e88e:	enter  0xdb05,0xd9
  40e892:	jl     0x40e90f
  40e894:	xchg   esp,eax
  40e895:	jmp    0x40e8f9
  40e897:	not    BYTE PTR [edi+0x17]
  40e89a:	xor    DWORD PTR [eax+0x4db8a51],ebx
  40e8a0:	inc    esp
  40e8a1:	jo     0x40e8c8
  40e8a3:	jbe    0x40e85f
  40e8a5:	mov    WORD PTR [ebx+0x706ffdc3],cs
  40e8ab:	jne    0x40e8f0
  40e8ad:	stos   BYTE PTR es:[edi],al
  40e8ae:	adc    DWORD PTR [ebx+eax*1-0x556820eb],edx
  40e8b5:	es sti 
  40e8b7:	and    edx,edi
  40e8b9:	dec    esp
  40e8ba:	xor    BYTE PTR [eax],dh
  40e8bc:	inc    edx
  40e8bd:	push   esi
  40e8be:	xchg   ebx,eax
  40e8bf:	sub    al,0xa2
  40e8c1:	or     al,0xf8
  40e8c3:	outs   dx,BYTE PTR ds:[esi]
  40e8c4:	xchg   esi,eax
  40e8c5:	les    esi,FWORD PTR [eax+0x2b5f0c9d]
  40e8cb:	xchg   edi,eax
  40e8cc:	aas    
  40e8cd:	push   edx
  40e8ce:	dec    ebx
  40e8cf:	push   0x99e29b36
  40e8d4:	hlt    
  40e8d5:	jp     0x40e8e5
  40e8d7:	jo     0x40e94d
  40e8d9:	xchg   ebp,esp
  40e8db:	jns    0x40e869
  40e8dd:	dec    eax
  40e8de:	dec    eax
  40e8df:	mov    ecx,gs
  40e8e1:	cld    
  40e8e2:	cmp    ebx,DWORD PTR [edi]
  40e8e4:	pop    ebp
  40e8e5:	(bad)  
  40e8e6:	xchg   edi,eax
  40e8e7:	xchg   BYTE PTR [eax+0x27e8a314],bh
  40e8ed:	mov    edx,0x65e72e05
  40e8f2:	(bad)  
  40e8f3:	call   0xcbdb:0xcb9f514e
  40e8fa:	les    esp,FWORD PTR [eax]
  40e8fc:	mov    al,ds:0x5dbf57cf
  40e901:	mov    esi,edi
  40e903:	push   esi
  40e904:	(bad)
  40e908:	stos   DWORD PTR es:[edi],eax
  40e909:	loope  0x40e952
  40e90b:	add    DWORD PTR [ebx-0x525821e6],edx
  40e911:	jl     0x40e905
  40e913:	cld    
  40e914:	push   ds
  40e915:	out    dx,eax
  40e916:	aaa    
  40e917:	xchg   esi,eax
  40e918:	mov    cl,0x5a
  40e91a:	add    edi,DWORD PTR [edx+edi*4]
  40e91d:	mov    al,ds:0x974415ea
  40e922:	sbb    dh,BYTE PTR [eax-0x215a6669]
  40e928:	xchg   DWORD PTR [edx-0x7f],edi
  40e92b:	mov    edx,0x43b196d7
  40e930:	aad    0xe2
  40e932:	cdq    
  40e933:	mov    BYTE PTR [edx-0x7195fb72],cl
  40e939:	pop    esi
  40e93a:	nop
  40e93b:	jmp    0x40e96d
  40e93d:	popa   
  40e93e:	mov    bl,0x5a
  40e940:	and    dh,BYTE PTR [edx-0x6596a3dd]
  40e946:	neg    BYTE PTR [ebx-0x2e67a511]
  40e94c:	shl    ah,cl
  40e94e:	not    esi
  40e950:	adc    DWORD PTR ds:0xd0c9145e,esp
  40e956:	call   0xc4a2:0xee88520e
  40e95d:	mov    dh,0x9c
  40e95f:	test   BYTE PTR [ebx],bl
  40e961:	pop    ebx
  40e962:	xor    edx,DWORD PTR [eax+0x55db7a07]
  40e968:	sar    dl,0x68
  40e96b:	sub    edi,eax
  40e96d:	mov    DWORD PTR [ecx],edx
  40e96f:	(bad)  
  40e971:	mov    cl,bh
  40e973:	sbb    ah,dh
  40e975:	sbb    ah,cl
  40e977:	xlat   BYTE PTR ds:[ebx]
  40e978:	dec    edi
  40e979:	inc    ebp
  40e97a:	xchg   edi,eax
  40e97b:	inc    edi
  40e97c:	fmulp  st(3),st
  40e97e:	jg     0x40e912
  40e980:	and    al,0xe5
  40e982:	pop    ds
  40e983:	hlt    
  40e984:	add    DWORD PTR [edx+0x53914cc0],edx
  40e98a:	mov    ebp,0xedeb4075
  40e98f:	cmp    bh,BYTE PTR [edx+0x6b000297]
  40e995:	dec    ebx
  40e996:	enter  0x81b0,0xb2
  40e99a:	push   esi
  40e99b:	mov    eax,0xe0a8ff63
  40e9a0:	(bad)  
  40e9a1:	fbld   TBYTE PTR [esi]
  40e9a3:	fld    TBYTE PTR [ecx]
  40e9a5:	stos   DWORD PTR es:[edi],eax
  40e9a6:	and    ax,0x81f
  40e9aa:	call   0x614982e0
  40e9af:	push   0xf111cf58
  40e9b4:	fdivrp st(0),st
  40e9b6:	or     DWORD PTR [eax-0x6f],eax
  40e9b9:	sub    bl,dh
  40e9bb:	ss call 0xd2d9:0xcb16240a
  40e9c3:	mov    ch,0x57
  40e9c5:	mov    ds,WORD PTR [ebx-0x24]
  40e9c8:	and    edx,esi
  40e9ca:	(bad)  
  40e9cc:	mov    esi,0x1d1ed901
  40e9d1:	mov    ebx,0xb9244ed4
  40e9d6:	cmp    BYTE PTR [eax-0x12],ah
  40e9d9:	jns    0x40e9a8
  40e9db:	lods   al,BYTE PTR ds:[esi]
  40e9dc:	inc    ecx
  40e9dd:	int    0xfe
  40e9df:	jp     0x40e961
  40e9e1:	mov    bh,0x43
  40e9e3:	xchg   edx,eax
  40e9e4:	inc    ebx
  40e9e5:	lahf   
  40e9e6:	jle    0x40e9ea
  40e9e8:	cmp    BYTE PTR [esi-0x2d72e],cl
  40e9ee:	int    0x57
  40e9f0:	mov    ds:0xe1c5a615,al
  40e9f5:	or     esi,DWORD PTR [edi-0x20]
  40e9f8:	mov    ah,0xad
  40e9fa:	jne    0x40e9b3
  40e9fc:	aam    0xa9
  40e9fe:	(bad)  
  40e9ff:	cmc    
  40ea00:	mov    cl,0x37
  40ea02:	gs jno 0x40ea3e
  40ea05:	xchg   edi,eax
  40ea06:	ja     0x40ea77
  40ea08:	fprem  
  40ea0a:	mov    esp,0x1c35f254
  40ea0f:	(bad)  
  40ea10:	loopne 0x40ea14
  40ea12:	(bad)  
  40ea13:	push   edi
  40ea14:	dec    esi
  40ea15:	or     edi,ebx
  40ea17:	sbb    BYTE PTR [ebx+0x6c],cl
  40ea1a:	mov    dh,0xda
  40ea1c:	arpl   WORD PTR [eax+ebx*2+0x5c],sp
  40ea20:	push   cs
  40ea21:	xchg   edx,eax
  40ea22:	stos   DWORD PTR es:[edi],eax
  40ea23:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40ea25:	xchg   edi,edi
  40ea27:	cmp    DWORD PTR [edi+0x3abb7202],eax
  40ea2d:	lahf   
  40ea2e:	ret    
  40ea2f:	sbb    DWORD PTR [ebp-0x62],esp
  40ea32:	jo     0x40ea34
  40ea34:	jl     0x40eab3
  40ea36:	or     ch,BYTE PTR [ebp+0x36]
  40ea39:	test   cl,bh
  40ea3b:	push   ebx
  40ea3c:	mov    cl,0xf6
  40ea3e:	pop    ds
  40ea3f:	or     ch,BYTE PTR [edi-0x24a2374a]
  40ea45:	addr16 arpl si,ax
  40ea48:	sub    DWORD PTR [esi+0x37c706fb],0xbbf9b412
  40ea52:	sti    
  40ea53:	and    DWORD PTR [ebp-0x77],ebp
  40ea56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea57:	js     0x40e9ee
  40ea59:	jns    0x40ead0
  40ea5b:	jns    0x40ea38
  40ea5d:	not    edi
  40ea5f:	cmp    BYTE PTR [edi+0xb73203b],al
  40ea65:	je     0x40ea8a
  40ea67:	inc    esi
  40ea68:	arpl   WORD PTR [eax+edx*8],sp
  40ea6b:	mov    ebp,0x93a374a9
  40ea70:	loopne 0x40eaca
  40ea72:	mov    esp,DWORD PTR [edi]
  40ea74:	mov    al,0x7f
  40ea76:	xchg   ecx,eax
  40ea77:	mov    esi,0xf50c5f68
  40ea7c:	icebp  
  40ea7d:	jle    0x40ea22
  40ea7f:	and    eax,0x493d48d7
  40ea84:	mov    eax,0x45be8f68
  40ea89:	mov    esi,0x5368aa9e
  40ea8e:	in     al,dx
  40ea8f:	jbe    0x40eacf
  40ea91:	mov    al,0x9
  40ea93:	sub    ch,BYTE PTR [eax+0x64]
  40ea96:	dec    esi
  40ea97:	into   
  40ea98:	adc    BYTE PTR [ecx],al
  40ea9a:	xor    edi,ecx
  40ea9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea9d:	push   eax
  40ea9e:	jo     0x40ea9f
  40eaa0:	retf   
  40eaa1:	scas   eax,DWORD PTR es:[edi]
  40eaa2:	xlat   BYTE PTR ds:[ebx]
  40eaa3:	push   ecx
  40eaa4:	push   0xffffffc9
  40eaa6:	loopne 0x40eab4
  40eaa8:	mov    esp,0xb49575a8
  40eaad:	not    BYTE PTR [esi-0x1e]
  40eab0:	mov    ebx,0xefff009f
  40eab5:	or     eax,0xcf657c70
  40eaba:	jmp    0x4e80:0xefbeb4e6
  40eac1:	das    
  40eac2:	push   es
  40eac3:	in     eax,dx
  40eac4:	dec    esp
  40eac5:	ins    DWORD PTR es:[edi],dx
  40eac6:	pushf  
  40eac7:	test   DWORD PTR [edi-0x59e7403a],esi
  40eacd:	jne    0x40ea8d
  40eacf:	dec    esp
  40ead0:	neg    BYTE PTR [ebx-0x20]
  40ead3:	push   ds
  40ead4:	xchg   edi,eax
  40ead5:	stos   DWORD PTR es:[edi],eax
  40ead6:	dec    ebx
  40ead7:	mov    ecx,0x723f0a9d
  40eadc:	push   0x5b
  40eade:	std    
  40eadf:	test   ax,0x5b5e
  40eae3:	(bad)  
  40eae5:	out    0xd,al
  40eae7:	jb     0x40ea6f
  40eae9:	add    edi,DWORD PTR ds:0xa012a400
  40eaef:	xchg   DWORD PTR [ebx],edi
  40eaf1:	ror    DWORD PTR [edi],1
  40eaf3:	or     ebx,DWORD PTR ds:0x922bad35
  40eaf9:	pop    edi
  40eafa:	add    DWORD PTR [edx+0x16],eax
  40eafd:	in     eax,dx
  40eafe:	dec    eax
  40eaff:	and    BYTE PTR ds:0x806c1782,bh
  40eb05:	shr    ah,cl
  40eb07:	xchg   edx,eax
  40eb08:	js     0x40eabf
  40eb0a:	cs aad 0xf1
  40eb0d:	inc    ah
  40eb0f:	cdq    
  40eb10:	xchg   DWORD PTR [edx-0x26],ebx
  40eb13:	enter  0x9862,0x42
  40eb17:	int    0xc1
  40eb19:	xchg   edx,eax
  40eb1a:	repnz sub DWORD PTR [ebx*2-0xc927ade],ecx
  40eb22:	jmp    0x9959:0xf857a2ae
  40eb29:	pop    ebp
  40eb2a:	sbb    BYTE PTR [esp+edx*2],al
  40eb2d:	inc    BYTE PTR [esi-0x1cda91f9]
  40eb33:	fs shl ebp,0x30
  40eb37:	jmp    0xce9af906
  40eb3c:	adc    eax,0x37e166ed
  40eb41:	push   edi
  40eb42:	dec    ecx
  40eb43:	sub    al,ah
  40eb45:	push   es
  40eb46:	lds    edi,FWORD PTR [ebx-0x1fcb6991]
  40eb4c:	das    
  40eb4d:	sub    edi,edx
  40eb4f:	adc    BYTE PTR [edx+0x256e3f2c],dl
  40eb55:	lds    edi,FWORD PTR es:[ebp+0x2f]
  40eb59:	xchg   esp,eax
  40eb5a:	xchg   edi,eax
  40eb5b:	inc    ecx
  40eb5c:	push   ebx
  40eb5d:	push   ebp
  40eb5f:	adc    BYTE PTR [ebx+0x2ae78a65],ch
  40eb65:	cli    
  40eb66:	xor    eax,0x51bfb850
  40eb6b:	adc    eax,0xdc28654e
  40eb70:	scas   al,BYTE PTR es:[edi]
  40eb71:	faddp  st(4),st
  40eb73:	mov    DWORD PTR [eax-0x55],ecx
  40eb76:	leave  
  40eb77:	add    eax,0x14ef6120
  40eb7c:	mov    al,0x24
  40eb7e:	out    dx,eax
  40eb7f:	cld    
  40eb80:	retf   
  40eb81:	add    esi,DWORD PTR [edx]
  40eb83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb84:	int3   
  40eb85:	mov    dh,BYTE PTR [esp+ebx*8+0x3f]
  40eb89:	fisttp QWORD PTR [esi]
  40eb8b:	fcom   QWORD PTR [esi+0x1]
  40eb8e:	lea    ebp,[ebx-0xf]
  40eb91:	or     eax,DWORD PTR [edx]
  40eb93:	pop    edx
  40eb94:	dec    esp
  40eb95:	mov    bh,0x81
  40eb97:	sbb    bl,BYTE PTR [edi]
  40eb99:	sbb    al,0x46
  40eb9b:	jne    0x885b5c8b
  40eba1:	stos   DWORD PTR es:[edi],eax
  40eba2:	hlt    
  40eba3:	dec    edx
  40eba4:	ins    DWORD PTR es:[edi],dx
  40eba5:	in     eax,0xa9
  40eba7:	mov    ah,BYTE PTR [ecx-0x53b34fe4]
  40ebad:	mov    ds,WORD PTR ds:0xafdb1e3f
  40ebb3:	dec    edx
  40ebb4:	adc    eax,DWORD PTR [ebx+0x29]
  40ebb7:	enter  0x20fb,0x66
  40ebbb:	pop    ds
  40ebbc:	xor    eax,0x10f1b773
  40ebc1:	ins    BYTE PTR es:[edi],dx
  40ebc2:	adc    edi,ebx
  40ebc4:	retf   0x2154
  40ebc7:	add    al,0x86
  40ebc9:	retf   
  40ebca:	pop    eax
  40ebcb:	pushf  
  40ebcc:	xchg   ecx,eax
  40ebcd:	bound  eax,QWORD PTR [esi]
  40ebcf:	(bad)
  40ebd2:	inc    ecx
  40ebd3:	mov    bl,0x40
  40ebd5:	inc    eax
  40ebd6:	sub    DWORD PTR [edx+0x3c],edi
  40ebd9:	mov    eax,0xa456890d
  40ebde:	xchg   ecx,eax
  40ebdf:	or     eax,0xd78d2693
  40ebe4:	popa   
  40ebe5:	xor    dh,BYTE PTR [ecx+eax*1+0x6d]
  40ebe9:	adc    DWORD PTR [edx],edi
  40ebeb:	scas   eax,DWORD PTR es:[edi]
  40ebec:	sbb    al,0x8c
  40ebee:	out    dx,eax
  40ebef:	rol    BYTE PTR [edi],1
  40ebf1:	idiv   dh
  40ebf3:	mov    esp,0xe2c165ce
  40ebf8:	cmp    eax,0x15ae9c91
  40ebfd:	out    dx,al
  40ebfe:	aas    
  40ebff:	lahf   
  40ec00:	pop    edi
  40ec01:	es add ebx,ebx
  40ec04:	out    dx,eax
  40ec05:	push   0x31
  40ec07:	jle    0x40ec23
  40ec09:	fwait
  40ec0a:	inc    esi
  40ec0b:	fst    DWORD PTR [ebx+0x55]
  40ec0e:	mov    bh,0x3b
  40ec10:	sub    eax,0x3693a248
  40ec15:	xchg   edi,eax
  40ec16:	or     esp,DWORD PTR [edx-0x6ae73c99]
  40ec1c:	and    DWORD PTR [edi+ebx*8-0x19],edx
  40ec20:	(bad)  
  40ec21:	std    
  40ec22:	in     al,0x90
  40ec24:	push   edi
  40ec25:	jle    0x40ec47
  40ec27:	mov    edx,0xac9282f2
  40ec2c:	push   ds
  40ec2d:	cs xor eax,0x389e21be
  40ec33:	call   0xa243:0xaa3a181
  40ec3a:	dec    ebp
  40ec3b:	in     al,0xfe
  40ec3d:	xchg   edi,eax
  40ec3e:	arpl   WORD PTR [ebx-0x2b],cx
  40ec41:	inc    edx
  40ec42:	dec    ebp
  40ec43:	mov    ebp,ebp
  40ec45:	or     esp,DWORD PTR [eax+0x46b87486]
  40ec4b:	fisub  WORD PTR [bx]
  40ec4e:	or     al,BYTE PTR [esi-0x10ad7eaa]
  40ec54:	test   eax,0x3f7ed44e
  40ec59:	pusha  
  40ec5a:	pusha  
  40ec5b:	add    edi,eax
  40ec5d:	loope  0x40ec17
  40ec5f:	mov    al,0x89
  40ec61:	sub    BYTE PTR [ebx-0x276b0cee],cl
  40ec67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec68:	jno    0x40ec0a
  40ec6a:	jl     0x40ec67
  40ec6c:	inc    esi
  40ec6d:	std    
  40ec6e:	arpl   WORD PTR [bp+si],cx
  40ec71:	add    eax,0x7c06e8f9
  40ec76:	ss out 0xd5,al
  40ec79:	ss sahf 
  40ec7b:	push   esi
  40ec7c:	push   esi
  40ec7d:	outs   dx,DWORD PTR ds:[esi]
  40ec7e:	leave  
  40ec7f:	mov    ds:0xecf784f7,eax
  40ec84:	sbb    BYTE PTR [esi],al
  40ec86:	fstp   QWORD PTR ds:0x7e87bfc9
  40ec8c:	cli    
  40ec8d:	cmp    bl,dl
  40ec8f:	push   0x13
  40ec91:	in     eax,dx
  40ec92:	mov    dh,0xed
  40ec94:	or     ecx,DWORD PTR [esi-0x14]
  40ec97:	mov    WORD PTR [eax],gs
  40ec99:	mov    al,ds:0x2ebbb459
  40ec9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec9f:	(bad)  
  40eca0:	jb     0x40ed1c
  40eca2:	(bad)  
  40eca3:	jle    0x40ec2e
  40eca5:	and    ah,dh
  40eca7:	cmp    BYTE PTR [ebx],ah
  40eca9:	fld    TBYTE PTR [edx]
  40ecab:	mov    dl,0x91
  40ecad:	jmp    0x40ecd9
  40ecaf:	pop    ebp
  40ecb0:	fidivr DWORD PTR [ecx+0x2e2a9f21]
  40ecb6:	cmc    
  40ecb7:	jmp    FWORD PTR [eax]
  40ecb9:	fs pop ss
  40ecbb:	mov    BYTE PTR [ebx+0x2504b34d],dh
  40ecc1:	out    dx,al
  40ecc2:	scas   al,BYTE PTR es:[edi]
  40ecc3:	sub    eax,0xb205339a
  40ecc8:	add    esp,ebx
  40ecca:	ins    DWORD PTR es:[edi],dx
  40eccb:	sub    BYTE PTR [eax-0x74],0x87
  40eccf:	dec    eax
  40ecd0:	jmp    0x40eca5
  40ecd2:	ficomp DWORD PTR [ecx]
  40ecd4:	mov    edx,DWORD PTR [esp+edx*2+0x32f8f898]
  40ecdb:	jl     0x40ecc5
  40ecdd:	mov    cl,0xf1
  40ecdf:	and    bh,bh
  40ece1:	mov    esi,0x23afdc2d
  40ece6:	repz or esi,DWORD PTR [edi]
  40ece9:	mov    ah,0x28
  40eceb:	(bad)  
  40ecec:	pop    esp
  40eced:	xchg   esp,eax
  40ecee:	sbb    al,0x76
  40ecf0:	test   DWORD PTR [edi+eiz*2-0x4f],esp
  40ecf4:	jge    0x40ed5a
  40ecf6:	sbb    eax,0x3fd1c35f
  40ecfb:	out    0x2,al
  40ecfd:	or     eax,0xa0587ca3
  40ed02:	dec    eax
  40ed03:	sub    ebp,DWORD PTR [ebx]
  40ed05:	shl    DWORD PTR [esi+0x68],1
  40ed08:	xchg   DWORD PTR [ebx+esi*1],ebx
  40ed0b:	mov    al,0xb8
  40ed0d:	jnp    0x40ed4c
  40ed0f:	mov    eax,0xb509158b
  40ed14:	addr16 inc bp
  40ed17:	aas    
  40ed18:	outs   dx,DWORD PTR ds:[esi]
  40ed19:	stos   DWORD PTR es:[edi],eax
  40ed1a:	sbb    ebp,DWORD PTR [edi]
  40ed1c:	cs cmp eax,0xddda1ef3
  40ed22:	(bad)  
  40ed23:	pop    ds
  40ed24:	scas   al,BYTE PTR es:[edi]
  40ed25:	or     eax,0xc01ef2c2
  40ed2a:	ins    BYTE PTR es:[edi],dx
  40ed2b:	shl    bh,0xfb
  40ed2e:	push   ebx
  40ed2f:	xchg   esi,eax
  40ed30:	cmp    eax,0x627260dd
  40ed35:	push   es
  40ed36:	or     esp,DWORD PTR [esi+eiz*4]
  40ed39:	push   ebp
  40ed3a:	sbb    eax,0xe42c765f
  40ed3f:	ret    0xce7c
  40ed42:	fcomi  st,st(7)
  40ed44:	push   edi
  40ed45:	cmp    ebp,esi
  40ed47:	shl    BYTE PTR [edi+0xd],0x4
  40ed4b:	(bad)  
  40ed4c:	mov    cl,0x83
  40ed4e:	fsub   DWORD PTR ds:0x701b6c75
  40ed54:	inc    BYTE PTR [eax]
  40ed56:	xor    ch,ah
  40ed58:	(bad)  
  40ed59:	in     eax,0x41
  40ed5b:	xchg   esi,eax
  40ed5c:	lods   al,BYTE PTR ds:[esi]
  40ed5d:	pop    ss
  40ed5e:	jp     0x40ed47
  40ed60:	or     ebx,DWORD PTR [eax+0x59]
  40ed63:	adc    edi,DWORD PTR [eax+0xa]
  40ed66:	leave  
  40ed67:	clc    
  40ed68:	jmp    0x675c:0x819aefb5
  40ed6f:	xor    DWORD PTR [eax-0x4a],ecx
  40ed72:	xor    al,0x64
  40ed74:	and    DWORD PTR [ebx-0x19],esp
  40ed77:	dec    ebx
  40ed78:	add    eax,0xc37ead4b
  40ed7d:	imul   edx,DWORD PTR es:[ebx-0x35],0x38d116e4
  40ed85:	jae    0x40ed62
  40ed87:	lock imul DWORD PTR [edi-0x5d0ca271]
  40ed8e:	pop    ds
  40ed8f:	rcl    DWORD PTR [ebp+eax*8-0x44aa26c3],cl
  40ed96:	dec    edi
  40ed97:	aam    0x49
  40ed99:	pop    esp
  40ed9a:	adc    bh,BYTE PTR [ecx]
  40ed9c:	mov    ecx,ecx
  40ed9e:	xchg   edi,eax
  40ed9f:	sbb    bl,0x60
  40eda2:	pop    esi
  40eda3:	(bad)  
  40eda4:	cld    
  40eda5:	push   esi
  40eda6:	dec    edx
  40eda7:	add    ah,dl
  40eda9:	mov    ds:0x8a398619,al
  40edae:	iret   
  40edaf:	inc    ebp
  40edb0:	scas   al,BYTE PTR es:[edi]
  40edb1:	mov    eax,ds:0xa34c0d32
  40edb6:	fild   DWORD PTR [edi+ebp*2]
  40edb9:	jecxz  0x40ee1e
  40edbb:	(bad)  
  40edbc:	(bad)  
  40edbd:	nop
  40edbe:	aas    
  40edbf:	(bad)  
  40edc0:	push   cs
  40edc1:	mov    ebp,DWORD PTR [esi-0x45]
  40edc4:	xor    ah,BYTE PTR [ebp-0x53]
  40edc7:	jbe    0x40edb2
  40edc9:	jle    0x40ee47
  40edcb:	jmp    0x40ed5b
  40edcd:	push   ebx
  40edce:	sub    BYTE PTR [edi-0x7e],0x14
  40edd2:	fwait
  40edd3:	(bad)  
  40edd4:	js     0x40eda5
  40edd6:	push   eax
  40edd7:	sahf   
  40edd8:	push   ebx
  40edd9:	fst    QWORD PTR [ebx-0x2e]
  40eddc:	pop    edx
  40eddd:	push   ds
  40edde:	push   edi
  40eddf:	inc    esi
  40ede0:	les    ecx,FWORD PTR [esi-0x4ced5f87]
  40ede6:	ret    0xb9c6
  40ede9:	push   ebx
  40edea:	les    ecx,FWORD PTR [edx]
  40edec:	pop    ebx
  40eded:	sub    al,0x59
  40edef:	dec    esp
  40edf0:	or     bh,BYTE PTR [ebx]
  40edf2:	xchg   ebp,eax
  40edf3:	dec    edi
  40edf4:	aam    0xef
  40edf6:	mov    edx,0x26c5a11d
  40edfb:	outs   dx,DWORD PTR ds:[esi]
  40edfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edfd:	iret   
  40edfe:	jg     0x40ee79
  40ee00:	and    BYTE PTR [eax],bh
  40ee02:	in     eax,dx
  40ee03:	xlat   BYTE PTR ds:[ebx]
  40ee04:	cli    
  40ee05:	pop    es
  40ee06:	lea    esi,[ebp-0x4b]
  40ee09:	popf   
  40ee0a:	add    edx,DWORD PTR [edi+esi*4]
  40ee0d:	ss mov bh,0x91
  40ee10:	frstor [edx]
  40ee12:	and    ah,BYTE PTR [ebx+ecx*8-0x4c]
  40ee16:	cmp    ebp,edi
  40ee18:	sub    esi,esp
  40ee1a:	xchg   BYTE PTR [eax-0x10],bh
  40ee1d:	push   ecx
  40ee1e:	cmp    esi,DWORD PTR [ecx-0x6]
  40ee21:	ret    
  40ee22:	dec    edi
  40ee23:	xchg   ecx,eax
  40ee24:	jg     0x40ee8b
  40ee26:	out    0x55,al
  40ee28:	js     0x40edd7
  40ee2a:	cmp    BYTE PTR [ecx-0x28],ch
  40ee2d:	dec    ebx
  40ee2e:	push   edi
  40ee2f:	sbb    eax,0x7c133003
  40ee34:	add    eax,0xf9b89be6
  40ee39:	test   eax,0xc487ea0c
  40ee3e:	pop    esi
  40ee3f:	lea    ecx,[esi]
  40ee41:	lods   al,BYTE PTR ds:[esi]
  40ee42:	aad    0x73
  40ee44:	sub    ch,dl
  40ee46:	xor    esp,eax
  40ee48:	cmp    esi,esi
  40ee4a:	test   DWORD PTR [eax+esi*4+0x8],esp
  40ee4e:	cs loop 0x40edf4
  40ee51:	mov    dh,0x2e
  40ee53:	mov    esi,0x4583d2cc
  40ee58:	(bad)  
  40ee59:	cmp    eax,0xe8af4025
  40ee5e:	test   al,0xd1
  40ee60:	in     al,dx
  40ee61:	xor    DWORD PTR [edx-0x47228f7d],ebp
  40ee67:	sub    BYTE PTR [edi],0xe
  40ee6a:	call   0x10b71110
  40ee6f:	arpl   bx,bx
  40ee71:	push   ss
  40ee72:	lock scas al,BYTE PTR es:[edi]
  40ee74:	mov    al,ds:0xace583c6
  40ee79:	xchg   esi,eax
  40ee7a:	jb     0x40ee1d
  40ee7c:	push   eax
  40ee7d:	cdq    
  40ee7e:	jno    0x40ee20
  40ee80:	jne    0x40ee12
  40ee82:	jno    0x40ee5c
  40ee84:	lea    ebp,[eax-0x7a]
  40ee87:	fcom   DWORD PTR [esi-0x10]
  40ee8a:	or     DWORD PTR [ebx+0x11],0x5fbe2782
  40ee91:	bound  esi,QWORD PTR [edx-0x5e448e69]
  40ee97:	jmp    0x86ca7308
  40ee9c:	mul    bh
  40ee9e:	scas   eax,DWORD PTR es:[edi]
  40ee9f:	cmp    cl,BYTE PTR [ebp+0x2a]
  40eea2:	xchg   ebp,eax
  40eea3:	(bad)  
  40eea4:	sub    al,BYTE PTR [ebx+0x44]
  40eea7:	add    dh,BYTE PTR [ebx+eiz*8]
  40eeaa:	cmp    cl,BYTE PTR [ecx+edx*1-0x2f]
  40eeae:	adc    DWORD PTR [esi+0x477eb207],edi
  40eeb4:	mov    edx,0x8c714d4b
  40eeb9:	jmp    0x40eecf
  40eebb:	aas    
  40eebc:	(bad)  
  40eebe:	lods   eax,DWORD PTR ds:[esi]
  40eebf:	jecxz  0x40ee77
  40eec1:	std    
  40eec2:	enter  0xabea,0xe8
  40eec6:	out    dx,al
  40eec7:	outs   dx,BYTE PTR ds:[esi]
  40eec8:	stc    
  40eec9:	pop    edx
  40eeca:	enter  0x3781,0xdb
  40eece:	sti    
  40eecf:	cmp    esi,DWORD PTR [eax+0x5f]
  40eed2:	sahf   
  40eed3:	mov    ecx,gs
  40eed5:	or     DWORD PTR [edx-0x73b1a9df],eax
  40eedb:	stos   BYTE PTR es:[edi],al
  40eedc:	add    ebp,DWORD PTR [edi]
  40eede:	jb     0x40eed2
  40eee0:	test   al,0xe4
  40eee2:	iret   
  40eee3:	jo     0x40ef0a
  40eee5:	call   0x3479:0xa8382c8
  40eeec:	mov    eax,ds:0x8a6c9903
  40eef1:	imul   esp,DWORD PTR [ebx+esi*4+0x22],0xffffff8d
  40eef6:	xchg   esi,eax
  40eef7:	mov    ch,0xef
  40eef9:	sbb    BYTE PTR [ebx+0x5892dd5b],al
  40eeff:	xchg   ecx,eax
  40ef00:	xor    esi,DWORD PTR [eax-0x8931d11]
  40ef06:	(bad)
  40ef0a:	jg     0x40ee93
  40ef0c:	push   ebp
  40ef0d:	lea    ebx,[ecx+0x23]
  40ef10:	cmp    dh,ah
  40ef12:	outs   dx,DWORD PTR ds:[esi]
  40ef13:	sub    dl,BYTE PTR [ecx-0x133231ef]
  40ef19:	add    esi,DWORD PTR [ebx-0x50]
  40ef1c:	lahf   
  40ef1d:	adc    bh,BYTE PTR [esi+eiz*8]
  40ef20:	pop    ds
  40ef21:	sbb    BYTE PTR [ebp+0x79b0791f],dl
  40ef27:	xchg   ecx,eax
  40ef28:	sub    bh,0xe7
  40ef2b:	mov    al,0x79
  40ef2d:	or     eax,0x7ad7d011
  40ef32:	inc    ebx
  40ef33:	sahf   
  40ef34:	mov    bl,0x4a
  40ef36:	js     0x40ef8d
  40ef38:	mov    bh,0x67
  40ef3a:	dec    edi
  40ef3b:	fbstp  TBYTE PTR [ebx+ebp*4+0x61]
  40ef3f:	enter  0x15d0,0xa
  40ef43:	arpl   WORD PTR [ebx-0x1a5b50b1],di
  40ef49:	sub    DWORD PTR [ebx-0x6634fc5c],edx
  40ef4f:	fucomip st,st(7)
  40ef51:	cmp    BYTE PTR [ecx],dh
  40ef53:	das    
  40ef54:	ins    BYTE PTR es:[edi],dx
  40ef55:	inc    ebx
  40ef56:	jmp    0xcfd55f36
  40ef5b:	test   DWORD PTR [edx-0x4b],0xb9ea6b34
  40ef62:	mov    esi,DWORD PTR [esi-0x65170944]
  40ef68:	sub    al,0x66
  40ef6a:	dec    eax
  40ef6b:	pop    ecx
  40ef6c:	stos   BYTE PTR es:[edi],al
  40ef6d:	inc    esp
  40ef6e:	sub    ch,BYTE PTR [esi-0x50e71a7c]
  40ef74:	sub    eax,0xeb902f1
  40ef79:	pop    edx
  40ef7a:	cmp    bl,BYTE PTR [edx+0x338a1caa]
  40ef80:	adc    esp,DWORD PTR [ebx]
  40ef82:	and    dh,BYTE PTR [di+0x1af2]
  40ef87:	sti    
  40ef88:	(bad)  
  40ef89:	test   eax,0x6b892d80
  40ef8e:	sbb    ebx,0x6b
  40ef91:	sbb    al,0x2e
  40ef93:	push   0xfffffffa
  40ef95:	into   
  40ef96:	jle    0x40ef7e
  40ef98:	jb     0x40efde
  40ef9a:	(bad)  
  40ef9b:	adc    al,0xc0
  40ef9d:	retfw  0x7981
  40efa1:	dec    ebp
  40efa2:	cli    
  40efa3:	dec    eax
  40efa4:	fwait
  40efa5:	stos   BYTE PTR es:[edi],al
  40efa6:	dec    edx
  40efa7:	lods   al,BYTE PTR ds:[esi]
  40efa8:	repnz adc al,0xb
  40efab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efac:	cwde   
  40efad:	push   ebx
  40efae:	jae    0x40ef3e
  40efb0:	(bad)  
  40efb1:	pop    eax
  40efb2:	int3   
  40efb3:	or     ebp,esp
  40efb5:	push   es
  40efb6:	into   
  40efb7:	rcr    DWORD PTR [eax+edi*4+0x5f6e2c0],cl
  40efbe:	js     0x40efbe
  40efc0:	hlt    
  40efc1:	test   eax,0x4395965a
  40efc6:	pop    ebp
  40efc7:	dec    eax
  40efc8:	leave  
  40efc9:	int    0x2e
  40efcb:	cwde   
  40efcc:	add    BYTE PTR [eax+eiz*8+0x52],cl
  40efd0:	test   DWORD PTR [esi+0x53090da9],esi
  40efd6:	mov    dh,0x65
  40efd8:	fldenv ds:0xdbe52382
  40efde:	add    dl,BYTE PTR [ecx-0x2524effe]
  40efe4:	out    dx,eax
  40efe5:	push   esi
  40efe6:	sar    DWORD PTR [ecx+0x4f],0x83
  40efea:	push   es
  40efeb:	or     BYTE PTR [eax+0x6fb27190],bh
  40eff1:	(bad)  
  40eff3:	cmp    BYTE PTR [esi-0x1],0x9b
  40eff7:	sub    eax,0xb5c8cab4
  40effc:	mov    esp,0x6c177cb9
  40f001:	inc    eax
  40f002:	jle    0x40f06e
  40f004:	xchg   esi,eax
  40f005:	or     eax,0x9242625e
  40f00a:	mov    ebp,0x7df96fdf
  40f00f:	xchg   edi,edx
  40f011:	(bad)  
  40f012:	stos   DWORD PTR es:[edi],eax
  40f013:	mov    ds:0x36f9603,eax
  40f018:	xchg   edx,eax
  40f019:	jecxz  0x40efe0
  40f01b:	bound  eax,QWORD PTR [ebx-0x55]
  40f01e:	imul   edx
  40f020:	push   eax
  40f021:	sub    esi,esp
  40f023:	sbb    DWORD PTR [ebp+0x6916aa26],0x3d
  40f02a:	mul    esi
  40f02c:	sub    edi,DWORD PTR [ecx]
  40f02e:	dec    ebp
  40f02f:	jecxz  0x40f07b
  40f031:	or     BYTE PTR [ebx+0x7984156c],0x6e
  40f038:	inc    edi
  40f039:	(bad)  
  40f03a:	pop    ecx
  40f03b:	mov    BYTE PTR [ecx+0x32a6cb81],bl
  40f041:	or     edi,DWORD PTR [edi-0x1b4c48f4]
  40f047:	add    eax,0x2c0bbf97
  40f04c:	cmp    ecx,DWORD PTR ds:0x3d300e7c
  40f052:	lods   al,BYTE PTR ds:[esi]
  40f053:	pop    es
  40f054:	int    0x24
  40f056:	shr    ebx,cl
  40f058:	mov    cl,BYTE PTR [eax+0x65]
  40f05b:	or     esp,DWORD PTR [eax]
  40f05d:	xor    DWORD PTR [esi],esp
  40f05f:	jmp    0x5796:0x9c53f14e
  40f066:	sar    DWORD PTR [eax],0xfc
  40f069:	jl     0x40f0e2
  40f06b:	dec    ecx
  40f06c:	mov    eax,ds:0xbd3a823e
  40f071:	or     edi,DWORD PTR ds:0xc880f4c8
  40f077:	cmp    al,0x89
  40f079:	jnp    0x40f0b1
  40f07b:	je     0x40f061
  40f07d:	cld    
  40f07e:	pop    edi
  40f07f:	nop
  40f080:	add    ecx,DWORD PTR [ebx]
  40f082:	stos   DWORD PTR es:[edi],eax
  40f083:	jno    0x40f0ca
  40f085:	in     al,0x91
  40f087:	mov    esp,0x3d07f963
  40f08c:	cmp    cl,BYTE PTR [esi+0x3e]
  40f08f:	push   esi
  40f090:	add    cl,0xba
  40f093:	les    esp,FWORD PTR [edi+0x53699cbb]
  40f099:	xor    al,0xee
  40f09b:	cmp    BYTE PTR [edx],0x35
  40f09e:	retf   0x94fc
  40f0a1:	or     al,0xe
  40f0a3:	mov    edx,0x56455a77
  40f0a8:	outs   dx,BYTE PTR ds:[esi]
  40f0a9:	(bad)  
  40f0aa:	daa    
  40f0ab:	fild   WORD PTR [ebp+0x25]
  40f0ae:	ins    DWORD PTR es:[edi],dx
  40f0af:	pop    ebp
  40f0b0:	mov    WORD PTR [edx+eiz*1],?
  40f0b3:	and    DWORD PTR [ebp+0x70],edi
  40f0b6:	dec    BYTE PTR [edi-0x39]
  40f0b9:	jle    0x40f088
  40f0bb:	fadd   QWORD PTR [eax-0x366ac34f]
  40f0c1:	sbb    BYTE PTR [edi+0x7f043b05],dh
  40f0c7:	out    0x8f,al
  40f0c9:	add    eax,0x12cd4b87
  40f0ce:	jno    0x40f09a
  40f0d0:	dec    edx
  40f0d1:	int    0x3b
  40f0d3:	out    dx,eax
  40f0d4:	mov    ah,0xc3
  40f0d6:	mov    al,ds:0xcf2c7414
  40f0db:	ret    0xc3bf
  40f0de:	jg     0x40f0b0
  40f0e0:	jmp    0x81f:0x523a9617
  40f0e7:	shr    BYTE PTR [eax],0x4b
  40f0ea:	popa   
  40f0eb:	sbb    dl,BYTE PTR [ebx+0x51f6893a]
  40f0f1:	mov    ds:0xe728f4d7,eax
  40f0f6:	mov    bh,0x1b
  40f0f8:	cmp    ah,BYTE PTR [eax+0x326cc3d6]
  40f0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0ff:	pop    edx
  40f100:	shl    ebx,cl
  40f102:	mov    es,WORD PTR [eax]
  40f104:	jno    0x40f17c
  40f106:	test   BYTE PTR [ebp-0x4a33eecd],0x1c
  40f10d:	ss jmp 0x516d5ada
  40f113:	jle    0x40f15f
  40f115:	hlt    
  40f116:	out    0x73,al
  40f118:	lods   al,BYTE PTR ds:[esi]
  40f119:	imul   esi,DWORD PTR [ecx+0x77532eba],0xeb462573
  40f123:	jns    0x40f11f
  40f125:	bound  eax,QWORD PTR [eax+0x52ab9234]
  40f12b:	mov    edx,0x85194fbb
  40f130:	sbb    edi,eax
  40f132:	std    
  40f133:	lods   al,BYTE PTR ds:[esi]
  40f134:	push   ebx
  40f135:	shl    bh,1
  40f137:	ss ins BYTE PTR es:[edi],dx
  40f139:	in     eax,0xe9
  40f13b:	xor    BYTE PTR [edi+0x4],cl
  40f13e:	mov    dl,0x9e
  40f140:	add    dl,BYTE PTR [ebx-0x19]
  40f143:	push   0x32
  40f145:	pop    edi
  40f146:	mov    ds:0xd72e41bd,eax
  40f14b:	js     0x40f0e3
  40f14d:	outs   dx,BYTE PTR ds:[esi]
  40f14e:	and    BYTE PTR [ecx+eiz*1],ah
  40f151:	repz jo 0x40f0fa
  40f154:	call   0x317c:0xa4ba5d76
  40f15b:	xor    al,0x51
  40f15d:	push   0x2b
  40f15f:	jne    0x40f146
  40f161:	repnz xchg ebp,eax
  40f163:	cmc    
  40f164:	inc    ecx
  40f165:	push   cs
  40f166:	sub    DWORD PTR [ecx+eax*2+0x5],esi
  40f16a:	mov    ah,0x2b
  40f16c:	sbb    eax,0x2a90037b
  40f171:	retf   
  40f172:	loopne 0x40f1f1
  40f174:	jg     0x40f1d4
  40f176:	repnz adc dh,cl
  40f179:	mul    ebx
  40f17b:	cmp    DWORD PTR [ebx-0x35],esi
  40f17e:	adc    eax,0xc1f61052
  40f183:	xor    eax,0x7376f8de
  40f188:	lods   eax,DWORD PTR ds:[esi]
  40f189:	sbb    eax,0xe9610b84
  40f18e:	inc    esp
  40f18f:	mov    ebp,0xe2de83e9
  40f194:	fcom   QWORD PTR [esi]
  40f196:	sub    eax,DWORD PTR [ecx-0x2c0e311b]
  40f19c:	ret    
  40f19d:	sbb    DWORD PTR [eax],ebx
  40f19f:	call   0x3277:0x30b44dcb
  40f1a6:	stc    
  40f1a7:	xor    al,0x45
  40f1a9:	pop    eax
  40f1aa:	jmp    0x965c:0x46ee16d5
  40f1b1:	lahf   
  40f1b2:	dec    ecx
  40f1b3:	pop    esp
  40f1b4:	mov    esp,0x2c72c2c5
  40f1b9:	xor    eax,0xcb6c3d17
  40f1be:	outs   dx,BYTE PTR ds:[esi]
  40f1bf:	stc    
  40f1c0:	mov    ah,0x84
  40f1c2:	sbb    ah,dl
  40f1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c5:	inc    ebp
  40f1c6:	xchg   ebp,eax
  40f1c7:	outs   dx,BYTE PTR ds:[esi]
  40f1c8:	sbb    BYTE PTR ds:0x8ffa24,0x81
  40f1cf:	sub    DWORD PTR [ecx-0x6c],0x7b0be4d8
  40f1d6:	mov    ch,0xb0
  40f1d8:	jl     0x40f230
  40f1da:	js     0x40f15e
  40f1dc:	in     eax,0x34
  40f1de:	(bad)  
  40f1df:	push   ds
  40f1e0:	fwait
  40f1e1:	or     cl,BYTE PTR [eax-0xb]
  40f1e4:	(bad)  
  40f1e5:	gs xor esi,esp
  40f1e8:	jo     0x40f1a8
  40f1ea:	mov    BYTE PTR [edi-0x2b],al
  40f1ed:	call   0x7fa7:0x285ba10b
  40f1f4:	or     eax,0xd79fbc78
  40f1f9:	dec    ebx
  40f1fa:	icebp  
  40f1fb:	jg     0x40f1a7
  40f1fd:	pop    edi
  40f1fe:	mov    eax,ds:0x625fdfac
  40f203:	add    bh,ch
  40f205:	and    al,0x76
  40f207:	xchg   DWORD PTR [edi+0x38],edi
  40f20a:	fdiv   st,st(2)
  40f20c:	repz neg BYTE PTR [esi+0x76]
  40f210:	clc    
  40f211:	mov    ds:0x68271b8d,al
  40f216:	outs   dx,BYTE PTR ds:[esi]
  40f217:	int    0xab
  40f219:	adc    DWORD PTR [ecx],edx
  40f21b:	mov    ebx,0x6684b79c
  40f220:	jle    0x40f1ff
  40f222:	jne    0x40f228
  40f224:	xor    al,dl
  40f226:	mov    eax,ds:0x2658c319
  40f22b:	xchg   esi,eax
  40f22c:	jecxz  0x40f1e1
  40f22e:	xchg   al,bl
  40f230:	jge    0x40f266
  40f232:	jb     0x40f1d1
  40f234:	dec    esi
  40f235:	fucomp st(2)
  40f237:	pop    ebp
  40f238:	enter  0x4493,0x20
  40f23c:	lar    ebp,WORD PTR [ebx+0x69]
  40f240:	jns    0x40f1c9
  40f242:	add    eax,0xc89080f8
  40f247:	mov    al,0xaf
  40f249:	into   
  40f24a:	pop    ebx
  40f24b:	sbb    dh,al
  40f24d:	out    dx,al
  40f24e:	xchg   ecx,eax
  40f24f:	bound  edx,QWORD PTR [eax]
  40f251:	lods   al,BYTE PTR ds:[esi]
  40f252:	dec    edx
  40f253:	dec    eax
  40f254:	cli    
  40f255:	loope  0x40f289
  40f257:	pusha  
  40f258:	xchg   ebx,eax
  40f259:	ficom  WORD PTR [edx-0x7b0d3ad7]
  40f25f:	clc    
  40f260:	(bad)  
  40f261:	gs push 0x6efe4218
  40f267:	cmp    eax,0x29d8a432
  40f26c:	loop   0x40f2de
  40f26e:	sbb    DWORD PTR [edx+0x25b0552f],esp
  40f274:	cs mov esp,0xc74c6d5a
  40f27a:	pusha  
  40f27b:	out    dx,eax
  40f27c:	xor    dl,cl
  40f27e:	inc    ebp
  40f27f:	or     al,0x65
  40f281:	nop
  40f282:	push   es
  40f283:	loop   0x40f2bc
  40f285:	push   0x77
  40f287:	fwait
  40f288:	nop
  40f289:	dec    esi
  40f28a:	xor    eax,0x48a7980a
  40f28f:	jmp    0x40f301
  40f291:	hlt    
  40f292:	jbe    0x40f298
  40f294:	sbb    DWORD PTR [ecx+0x3c05caf7],ebx
  40f29a:	or     BYTE PTR [edx],al
  40f29c:	in     al,0xf3
  40f29e:	out    0x3b,eax
  40f2a0:	add    eax,0xf5bea02c
  40f2a5:	mov    ch,0xc8
  40f2a7:	(bad)  
  40f2a8:	sar    ebp,1
  40f2aa:	adc    al,0x3
  40f2ac:	jo     0x40f29e
  40f2ae:	sbb    esp,DWORD PTR [esi]
  40f2b0:	daa    
  40f2b1:	ficom  DWORD PTR ds:0x3bff4143
  40f2b7:	push   DWORD PTR [ebx-0x11]
  40f2ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2bb:	out    dx,al
  40f2bc:	push   ebp
  40f2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2be:	popa   
  40f2bf:	xor    DWORD PTR [esi],ecx
  40f2c1:	jbe    0x40f252
  40f2c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2c4:	call   0x3d81:0x59781ec4
  40f2cb:	shl    DWORD PTR ds:[edi+0x3f6aeaaf],1
  40f2d2:	pop    edi
  40f2d3:	jmp    0x72d89ae3
  40f2d8:	xchg   esi,eax
  40f2d9:	lahf   
  40f2da:	cmp    al,BYTE PTR [edx+0x4dd3788a]
  40f2e0:	inc    ecx
  40f2e1:	jecxz  0x40f2f0
  40f2e3:	and    DWORD PTR [ebp-0x73],0x93289990
  40f2ea:	mov    WORD PTR [edx],ss
  40f2ec:	adc    esi,ebp
  40f2ee:	mov    edi,0xc71d4fa1
  40f2f3:	push   ebx
  40f2f4:	mov    edx,0x1f53136b
  40f2f9:	pop    ds
  40f2fa:	sub    esi,esi
  40f2fc:	mov    BYTE PTR [edi+0x27],al
  40f2ff:	jp     0x40f290
  40f301:	ret    
  40f302:	push   esi
  40f303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f304:	hlt    
  40f305:	fwait
  40f306:	and    DWORD PTR [eax-0x5752fafa],ecx
  40f30c:	mov    eax,ds:0x32399b78
  40f311:	jmp    0xce39:0x10ffa7e3
  40f318:	pop    ecx
  40f319:	sub    cl,BYTE PTR [eax+0x4f]
  40f31c:	cld    
  40f31d:	int3   
  40f31e:	daa    
  40f31f:	xchg   DWORD PTR [eax-0x37],edx
  40f322:	js     0x40f308
  40f324:	mov    eax,ecx
  40f326:	mov    bh,0x14
  40f328:	jg     0x40f32f
  40f32a:	xor    al,0x83
  40f32c:	test   BYTE PTR [esi+0x10130c63],dh
  40f332:	pop    ss
  40f333:	fnstcw WORD PTR [ecx]
  40f335:	push   0xffffff8d
  40f337:	jmp    0xa630:0xb83d74
  40f33e:	dec    eax
  40f33f:	daa    
  40f340:	cmp    BYTE PTR [edx+0x6b54aaa7],0x6
  40f347:	stos   DWORD PTR es:[edi],eax
  40f348:	addr16 test al,0x53
  40f34b:	push   0x46
  40f34d:	data16 ss aaa 
  40f350:	(bad)  
  40f351:	jmp    0x4b9563d5
  40f356:	xrelease mov BYTE PTR [eax],0xf6
  40f35a:	sbb    esp,DWORD PTR [esi+edi*4-0xa]
  40f35e:	push   esi
  40f35f:	(bad)  
  40f360:	loopne 0x40f394
  40f362:	xlat   BYTE PTR ds:[ebx]
  40f363:	out    dx,al
  40f364:	lods   al,BYTE PTR ds:[esi]
  40f365:	cs add eax,0xe9b8f8f4
  40f36b:	cmp    BYTE PTR [ebx+eiz*1],bl
  40f36e:	sbb    DWORD PTR [esi+edx*1-0x32],ebx
  40f372:	retf   
  40f373:	and    eax,DWORD PTR [eax-0x21]
  40f376:	mov    ebx,0xfadd9d1
  40f37b:	xor    eax,0xe2526c3c
  40f380:	ins    DWORD PTR es:[edi],dx
  40f381:	rcr    BYTE PTR fs:[ebp-0x3b4fdd66],cl
  40f388:	add    DWORD PTR [edi-0x7604aee9],edi
  40f38e:	je     0x40f3e1
  40f390:	xchg   ebx,eax
  40f391:	jo     0x40f3e4
  40f393:	mov    ch,0x6e
  40f395:	push   ecx
  40f396:	(bad)  
  40f397:	xlat   BYTE PTR ds:[ebx]
  40f398:	or     DWORD PTR [edx],esp
  40f39a:	nop
  40f39b:	out    0x2,al
  40f39d:	mov    ebx,0x60af9a3f
  40f3a2:	mov    edi,edx
  40f3a4:	popf   
  40f3a5:	popf   
  40f3a6:	cld    
  40f3a7:	mov    edx,0x8038bfa2
  40f3ac:	js     0x40f3ae
  40f3ae:	sub    bh,BYTE PTR [esi+edi*1]
  40f3b1:	jnp    0x40f3b4
  40f3b3:	or     ecx,DWORD PTR [edx+0x7829e097]
  40f3b9:	mov    edi,0x3f92b319
  40f3be:	sub    eax,0x5a8c7f6a
  40f3c3:	ret    0x3b86
  40f3c6:	jne    0x40f38b
  40f3c8:	cdq    
  40f3c9:	shr    DWORD PTR [ecx+esi*1],0xf6
  40f3cd:	push   0xdc5bfeab
  40f3d2:	es jecxz 0x40f3ee
  40f3d5:	repz jp 0x40f381
  40f3d8:	dec    BYTE PTR [eax+0xf9e199]
  40f3de:	adc    al,BYTE PTR [edi-0x27]
  40f3e1:	adc    ch,BYTE PTR [edi-0x3871fcb]
  40f3e7:	stos   BYTE PTR es:[edi],al
  40f3e8:	jns    0x40f40f
  40f3ea:	dec    eax
  40f3eb:	or     ecx,DWORD PTR [ebp+0x323f11ca]
  40f3f1:	cmp    edx,DWORD PTR [eax]
  40f3f3:	out    0x8c,eax
  40f3f5:	xchg   ecx,eax
  40f3f6:	pop    es
  40f3f7:	es dec edi
  40f3f9:	sub    al,0x85
  40f3fb:	xchg   esi,eax
  40f3fc:	loope  0x40f3f6
  40f3fe:	adc    DWORD PTR [esi+0x2cf13561],0x5e
  40f405:	ret    
  40f406:	shl    BYTE PTR ds:0xfa1def55,cl
  40f40c:	lea    ebp,[ebp+ebx*4-0x510af406]
  40f413:	lods   eax,DWORD PTR ds:[esi]
  40f414:	and    BYTE PTR [esi+eiz*2],ch
  40f417:	mov    cl,0xb7
  40f419:	mov    edi,0xe52b733f
  40f41e:	mov    ch,0x6c
  40f420:	test   DWORD PTR [ecx-0x314957ff],eax
  40f426:	int    0x3c
  40f428:	pop    ebp
  40f429:	loope  0x40f450
  40f42b:	dec    ecx
  40f42c:	jae    0x40f451
  40f42e:	dec    edi
  40f42f:	sbb    al,0x3
  40f431:	lahf   
  40f432:	lods   eax,DWORD PTR ds:[esi]
  40f433:	mov    edi,0xcb36bf2f
  40f438:	jae    0x40f471
  40f43a:	jecxz  0x40f4bb
  40f43c:	stos   DWORD PTR es:[edi],eax
  40f43d:	or     BYTE PTR [esi-0x38e3e22],cl
  40f443:	sbb    eax,0x81114a2e
  40f448:	daa    
  40f449:	mov    DWORD PTR [esi+0x7],edx
  40f44c:	inc    esp
  40f44d:	call   0xd6c:0x9e1a5a03
  40f454:	adc    esi,ebx
  40f456:	popa   
  40f457:	cld    
  40f458:	xchg   edx,eax
  40f459:	ds aas 
  40f45b:	mov    dh,0x78
  40f45d:	mov    esi,0x5da1bb28
  40f462:	jmp    0x40f3eb
  40f464:	jbe    0x40f3fd
  40f466:	fld    QWORD PTR [ebx+edi*1-0x83a0922]
  40f46d:	repnz sbb DWORD PTR [ecx],0xfffffff8
  40f471:	adc    ebx,eax
  40f473:	daa    
  40f474:	sub    eax,0x276c241c
  40f479:	mov    ah,0xf9
  40f47b:	sbb    DWORD PTR [esi-0x5ac79607],0x8af6f1e1
  40f485:	shl    BYTE PTR [esi+0x3e59cfb8],0xde
  40f48c:	and    esp,DWORD PTR [ebx+0x31]
  40f48f:	test   eax,0xaec0130f
  40f494:	inc    ebx
  40f495:	sub    al,dl
  40f497:	pop    edi
  40f498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f499:	(bad)  
  40f49a:	adc    eax,0xed2581c6
  40f49f:	retf   
  40f4a0:	mov    eax,ds:0xe76819f4
  40f4a5:	adc    eax,0x5ddbc05c
  40f4aa:	or     BYTE PTR [ebp+0x7092dc6f],0x39
  40f4b1:	scas   al,BYTE PTR es:[edi]
  40f4b2:	ret    
  40f4b3:	xchg   edx,eax
  40f4b4:	(bad)  
  40f4b5:	in     eax,dx
  40f4b6:	and    BYTE PTR [esi],0x1d
  40f4b9:	repnz lods eax,DWORD PTR ds:[esi]
  40f4bb:	inc    edi
  40f4bc:	scas   eax,DWORD PTR es:[edi]
  40f4bd:	push   ss
  40f4be:	pop    ebp
  40f4bf:	shl    DWORD PTR [eax+0x46],1
  40f4c2:	jbe    0x40f490
  40f4c4:	out    0x55,eax
  40f4c6:	ss mov bl,0xae
  40f4c9:	push   esp
  40f4ca:	shl    DWORD PTR [edi+0x43542e79],1
  40f4d0:	iret   
  40f4d1:	or     al,0x71
  40f4d3:	push   cs
  40f4d4:	cmp    eax,0x9a7fb9ae
  40f4d9:	mov    dl,0xba
  40f4db:	dec    eax
  40f4dc:	pop    ebx
  40f4dd:	sbb    esi,DWORD PTR [edx+0x7f45167c]
  40f4e3:	mov    eax,ds:0x40f2f5c7
  40f4e8:	jge    0x40f519
  40f4ea:	xor    BYTE PTR [esi+0x45],bh
  40f4ed:	pop    esp
  40f4ee:	jb     0x40f511
  40f4f0:	mov    ch,0xfd
  40f4f2:	adc    DWORD PTR [ebx-0x65],eax
  40f4f5:	dec    esi
  40f4f6:	add    DWORD PTR [edx+0x75],eax
  40f4f9:	rcl    BYTE PTR [ecx-0x66],0x16
  40f4fd:	cmc    
  40f4fe:	push   ss
  40f4ff:	mov    dl,0x5f
  40f501:	xchg   ebp,eax
  40f502:	test   BYTE PTR [ebp+ecx*1+0xad59ad],ch
  40f509:	outs   dx,DWORD PTR ds:[esi]
  40f50a:	mov    cl,0x60
  40f50c:	xor    al,BYTE PTR ds:[ecx-0xf72b377]
  40f513:	inc    ecx
  40f514:	mul    dl
  40f516:	mov    eax,0xedcfe206
  40f51b:	mov    al,0xc8
  40f51d:	rcr    cl,0x28
  40f520:	sar    ebx,1
  40f522:	das    
  40f523:	mov    dh,0xf9
  40f525:	and    bh,ah
  40f527:	cld    
  40f528:	in     al,dx
  40f529:	add    BYTE PTR [esi],ah
  40f52b:	sar    BYTE PTR [esi],1
  40f52d:	xor    al,BYTE PTR [ecx+0x7a]
  40f530:	(bad)  
  40f531:	fiadd  WORD PTR [edx-0x1ad716d5]
  40f537:	loope  0x40f4de
  40f539:	add    ecx,DWORD PTR ds:0x46a317ff
  40f53f:	push   edi
  40f540:	std    
  40f541:	or     ch,BYTE PTR [ecx+0x6c]
  40f544:	mov    bl,BYTE PTR [ecx+0xa]
  40f547:	adc    ch,BYTE PTR [edi]
  40f549:	nop
  40f54a:	push   cs
  40f54b:	shl    esp,cl
  40f54d:	nop
  40f54e:	ret    
  40f54f:	pop    edx
  40f550:	mov    ecx,0x5f0d4a66
  40f555:	push   esp
  40f556:	aaa    
  40f557:	push   ebx
  40f558:	rcr    BYTE PTR [eax-0x33bd03ad],cl
  40f55e:	ficom  WORD PTR [edx]
  40f560:	repz (bad)
  40f563:	outs   dx,DWORD PTR ds:[esi]
  40f564:	ins    DWORD PTR es:[edi],dx
  40f565:	xchg   edi,eax
  40f566:	mov    ebx,0x812ffbea
  40f56b:	imul   esp,DWORD PTR [ebx-0x77],0xffffffb2
  40f56f:	dec    ecx
  40f570:	(bad)  
  40f572:	cs xchg esi,eax
  40f574:	lods   eax,DWORD PTR ds:[esi]
  40f575:	stc    
  40f576:	fwait
  40f577:	mov    esi,0x59c614d3
  40f57c:	into   
  40f57d:	aas    
  40f57e:	jno    0x40f5dc
  40f580:	or     DWORD PTR [ebx+0x2e],ecx
  40f583:	mov    al,ds:0x8fbc142e
  40f588:	cmp    al,0xe2
  40f58a:	push   ebx
  40f58b:	add    al,0x34
  40f58d:	push   edi
  40f58e:	es push ecx
  40f590:	pop    ecx
  40f591:	inc    esp
  40f592:	jnp    0x40f55a
  40f594:	jecxz  0x40f5a4
  40f596:	and    DWORD PTR [ebx+0x75],0x48
  40f59a:	sbb    DWORD PTR fs:[eax-0x6c],edx
  40f59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f59f:	rcl    BYTE PTR [edi+0x1208194e],1
  40f5a5:	push   esi
  40f5a6:	mov    cl,0x22
  40f5a8:	and    eax,0xfb963886
  40f5ad:	add    al,0x88
  40f5af:	aam    0x64
  40f5b1:	push   0xffffffe8
  40f5b3:	push   eax
  40f5b4:	test   eax,0x47cb0d1f
  40f5b9:	jae    0x40f5b0
  40f5bb:	pop    edi
  40f5bc:	inc    esp
  40f5bd:	(bad)  
  40f5be:	adc    BYTE PTR ds:0xffe45a02,bh
  40f5c4:	fisubr DWORD PTR [eax+0xa]
  40f5c7:	test   eax,0xd90338ca
  40f5cc:	jp     0x40f592
  40f5ce:	and    al,0x8c
  40f5d0:	fsubr  DWORD PTR [edx]
  40f5d2:	and    BYTE PTR [ebx-0x29e742d4],0x2e
  40f5d9:	pop    es
  40f5da:	scas   eax,DWORD PTR es:[edi]
  40f5db:	mov    bl,0x6a
  40f5dd:	and    al,BYTE PTR [eax+0x50]
  40f5e0:	sbb    BYTE PTR [esi+0x71],ah
  40f5e3:	or     al,0xc3
  40f5e5:	nop
  40f5e6:	out    0x3e,eax
  40f5e8:	push   ebp
  40f5e9:	hlt    
  40f5ea:	sti    
  40f5eb:	(bad)  
  40f5ec:	in     al,0xb
  40f5ee:	jp     0x40f651
  40f5f0:	arpl   si,ax
  40f5f2:	push   ebp
  40f5f3:	cmp    eax,0xcf1ca98e
  40f5f8:	clc    
  40f5f9:	fldenv [ebx]
  40f5fb:	jno    0x40f5d2
  40f5fd:	xor    eax,0x4ca89821
  40f602:	dec    eax
  40f603:	(bad)  ds:0xbfb624da
  40f609:	or     BYTE PTR [ebp+esi*2-0x15ec42d],dh
  40f610:	aaa    
  40f611:	jns    0x40f67c
  40f613:	jne    0x40f684
  40f615:	enter  0x4056,0xad
  40f619:	nop
  40f61a:	addps  xmm5,xmm4
  40f61d:	(bad)  
  40f61e:	and    dh,BYTE PTR [ecx-0x79]
  40f621:	adc    al,0xee
  40f623:	xchg   esi,eax
  40f624:	xchg   DWORD PTR [ecx-0x7f],edx
  40f627:	or     al,0xb7
  40f629:	mov    ds:0xc4c41aab,al
  40f62e:	sub    edi,ebx
  40f630:	adc    BYTE PTR ss:[esp+eax*8-0x28da5189],dl
  40f638:	adc    DWORD PTR [ebp-0x246a09a4],0x6c
  40f63f:	dec    esi
  40f640:	xor    BYTE PTR [ebx-0x20091900],0xa5
  40f647:	out    0xb9,eax
  40f649:	push   ebp
  40f64a:	push   cs
  40f64b:	inc    ecx
  40f64c:	push   esp
  40f64d:	dec    esp
  40f64e:	pop    esp
  40f64f:	retf   
  40f650:	stos   DWORD PTR es:[edi],eax
  40f651:	out    dx,eax
  40f652:	adc    edi,DWORD PTR ds:0x30e454fc
  40f658:	pop    edx
  40f659:	das    
  40f65a:	mov    eax,0x114b2abe
  40f65f:	out    dx,eax
  40f660:	mov    edx,0x19b7e9f5
  40f665:	xlat   BYTE PTR ds:[ebx]
  40f666:	and    cl,BYTE PTR [esi+0x7b]
  40f669:	retf   0x4b7a
  40f66c:	or     bh,BYTE PTR [edi+0x37]
  40f66f:	add    al,BYTE PTR [eax+esi*1-0x32]
  40f673:	addr16 leave 
  40f675:	je     0x40f6c6
  40f677:	fiadd  DWORD PTR [esi+0x211f8536]
  40f67d:	(bad)  
  40f67e:	frstor [ebp+eiz*1-0x5e]
  40f682:	ret    
  40f683:	aaa    
  40f684:	dec    edx
  40f685:	pusha  
  40f686:	(bad)  
  40f687:	and    al,0xf1
  40f689:	stos   BYTE PTR es:[edi],al
  40f68a:	test   DWORD PTR [ecx],edx
  40f68c:	mov    bh,0x88
  40f68e:	jne    0x40f6c1
  40f690:	fwait
  40f691:	int    0x5b
  40f693:	cli    
  40f694:	imul   edx,esp,0xffffffdd
  40f697:	sbb    edx,edx
  40f699:	push   es
  40f69a:	inc    ebp
  40f69b:	or     al,BYTE PTR [edi-0x243737a7]
  40f6a1:	ror    BYTE PTR cs:[ebx],1
  40f6a4:	mov    eax,0xa838f4bd
  40f6a9:	jnp    0x40f6a9
  40f6ab:	xchg   DWORD PTR [edi+0x47148a54],edx
  40f6b1:	shl    BYTE PTR [ebp+0x1c],1
  40f6b4:	mov    al,BYTE PTR [ebp+0x3b]
  40f6b7:	std    
  40f6b8:	out    0xe3,eax
  40f6ba:	adc    al,0x14
  40f6bc:	xchg   ah,bh
  40f6be:	retf   
  40f6bf:	repz jns 0x40f6b1
  40f6c2:	popa   
  40f6c3:	rcl    BYTE PTR [ecx+0x1c392ef4],0xb4
  40f6ca:	xrelease xchg DWORD PTR [edi],eax
  40f6cd:	cmp    DWORD PTR [ecx-0x1add4adb],0x4f
  40f6d4:	mov    WORD PTR [edi+0x5c306718],ss
  40f6da:	shl    DWORD PTR [edi-0x5ab3d6ac],cl
  40f6e0:	aam    0x35
  40f6e2:	or     al,0x6f
  40f6e4:	cmp    DWORD PTR [ebp+esi*8+0x392cdaba],ebx
  40f6eb:	xchg   DWORD PTR [esi-0x1dc506e9],esp
  40f6f1:	sub    eax,0x9622df14
  40f6f6:	sahf   
  40f6f7:	rcl    BYTE PTR [edi],cl
  40f6f9:	pop    ebx
  40f6fa:	lea    ecx,[ebx]
  40f6fc:	(bad)  
  40f6fd:	xlat   BYTE PTR ds:[ebx]
  40f6fe:	inc    ebx
  40f6ff:	sub    ah,BYTE PTR [ebx+0x75d7dd2f]
  40f705:	inc    eax
  40f706:	loop   0x40f6db
  40f708:	dec    edx
  40f709:	mov    esi,0x5c9753cd
  40f70e:	fdivr  st(3),st
  40f710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f711:	bound  esi,QWORD PTR [edx-0x20]
  40f714:	xchg   esp,eax
  40f715:	mov    al,0xd4
  40f717:	dec    ebp
  40f718:	stos   BYTE PTR es:[edi],al
  40f719:	aaa    
  40f71a:	bound  esi,QWORD PTR [edi-0x571fc276]
  40f720:	add    eax,0xed90401c
  40f725:	shl    DWORD PTR [edx-0x68],0x7f
  40f729:	push   cs
  40f72a:	cmp    eax,0x58bc7127
  40f72f:	outs   dx,DWORD PTR ss:[esi]
  40f731:	or     ah,al
  40f733:	rcl    BYTE PTR [ebp+0x6b],cl
  40f736:	imul   esp,DWORD PTR [eax+0x49ee89ed],0xeaabeeba
  40f740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f741:	pop    ecx
  40f742:	xor    al,0xe1
  40f744:	jmp    0x3b291c01
  40f749:	add    eax,0x9b8d2038
  40f74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f74f:	xchg   BYTE PTR [ebp+0x3802622c],cl
  40f755:	test   cl,ah
  40f757:	(bad)  
  40f758:	push   edx
  40f759:	(bad)  
  40f75a:	fisubr WORD PTR [edi+0x7646b5fa]
  40f760:	rcr    ah,cl
  40f762:	xchg   dl,dh
  40f764:	jns    0x40f744
  40f766:	scas   eax,DWORD PTR es:[edi]
  40f767:	or     DWORD PTR [ecx+0x75dff82f],ebx
  40f76d:	stc    
  40f76e:	shr    ecx,cl
  40f770:	int3   
  40f771:	shl    DWORD PTR [ecx],cl
  40f773:	mov    bh,0xd1
  40f775:	adc    ebp,DWORD PTR ds:0x84629513
  40f77b:	jb     0x40f713
  40f77d:	popa   
  40f77e:	cmp    al,0xdd
  40f780:	inc    edi
  40f781:	and    al,0x1b
  40f783:	jge    0x40f78f
  40f785:	inc    esi
  40f786:	add    esp,DWORD PTR [esp+esi*1-0x55]
  40f78a:	xor    eax,0xb63e6420
  40f78f:	mov    eax,ss:0x807aea62
  40f795:	ret    
  40f796:	sahf   
  40f797:	dec    ebx
  40f798:	jno    0x40f781
  40f79a:	stos   DWORD PTR es:[edi],eax
  40f79b:	sbb    dl,BYTE PTR [edx-0x6004fec9]
  40f7a1:	mov    cl,dl
  40f7a3:	test   BYTE PTR [ebx-0x22],cl
  40f7a6:	dec    edx
  40f7a7:	cs clc 
  40f7a9:	icebp  
  40f7aa:	lea    edx,[edi-0x13c9c127]
  40f7b0:	add    BYTE PTR [ecx],0xde
  40f7b3:	add    al,0x18
  40f7b5:	outs   dx,BYTE PTR ds:[esi]
  40f7b6:	cmp    al,0xb
  40f7b8:	(bad)  
  40f7b9:	inc    edi
  40f7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7bb:	sub    BYTE PTR ds:0x40ece695,dh
  40f7c1:	xchg   edx,eax
  40f7c2:	fnstcw WORD PTR [edx+edi*4]
  40f7c5:	cmovo  eax,DWORD PTR [ecx]
  40f7c8:	scas   al,BYTE PTR es:[edi]
  40f7c9:	dec    esp
  40f7ca:	pop    esi
  40f7cb:	xchg   esi,eax
  40f7cc:	cmp    ebp,esp
  40f7ce:	lahf   
  40f7cf:	loop   0x40f758
  40f7d1:	(bad)
  40f7d4:	jmp    0x7a60:0x25dd421b
  40f7db:	jbe    0x40f830
  40f7dd:	mov    edx,0xec245029
  40f7e2:	and    BYTE PTR [ebp-0x37da3a0c],ah
  40f7e8:	mov    ds:0xa45e36c0,eax
  40f7ed:	push   esp
  40f7ee:	pop    ebp
  40f7ef:	dec    edi
  40f7f0:	or     DWORD PTR [edx],eax
  40f7f2:	push   ebx
  40f7f3:	test   al,0x33
  40f7f5:	sub    ebx,ebx
  40f7f7:	lods   eax,DWORD PTR ds:[esi]
  40f7f8:	push   0x6d7eaa6
  40f7fd:	outs   dx,DWORD PTR ds:[esi]
  40f7fe:	cmp    esi,DWORD PTR [ebp-0x24]
  40f801:	inc    ebp
  40f802:	mov    WORD PTR ds:0xffdf0cf0,?
  40f808:	ror    BYTE PTR [ecx],1
  40f80a:	js     0x40f7f3
  40f80c:	mov    cl,BYTE PTR [ebx]
  40f80e:	fcom   DWORD PTR es:[eax]
  40f811:	xchg   ebp,eax
  40f812:	and    al,0x71
  40f814:	call   DWORD PTR [ebx-0x2baf4474]
  40f81a:	xchg   ebx,eax
  40f81b:	pop    edx
  40f81c:	outs   dx,BYTE PTR ds:[esi]
  40f81d:	retf   0x6c4a
  40f820:	test   eax,0x9e6b7ad6
  40f825:	icebp  
  40f826:	pusha  
  40f827:	cmc    
  40f828:	mov    ds:0x59cb0632,eax
  40f82d:	add    DWORD PTR ds:0x7fe890e6,esp
  40f833:	cs sti 
  40f835:	dec    ebp
  40f836:	dec    ebx
  40f837:	aas    
  40f838:	or     eax,0x118df3e5
  40f83d:	jle    0x40f88e
  40f83f:	xchg   esp,eax
  40f840:	push   esi
  40f841:	ret    0xc19d
  40f844:	pause  
  40f846:	sub    DWORD PTR [edx-0x43],esp
  40f849:	pop    ss
  40f84a:	gs sbb al,0x3a
  40f84d:	adc    al,0x2
  40f84f:	popa   
  40f850:	leave  
  40f851:	shl    BYTE PTR [eax],cl
  40f853:	mov    eax,0x91fde390
  40f858:	(bad)  
  40f85a:	(bad)  
  40f85b:	in     al,dx
  40f85c:	in     eax,dx
  40f85d:	adc    eax,0x1bef0cec
  40f862:	jmp    0x8bef:0xf67b36bc
  40f869:	pop    esp
  40f86a:	mov    ecx,0x7bdcda7c
  40f86f:	cmp    eax,esi
  40f871:	jmp    0x607:0x3ba5ffb6
  40f878:	xchg   esi,eax
  40f879:	shr    DWORD PTR [esi],1
  40f87b:	mov    ds:0xea6113a7,eax
  40f880:	xchg   edi,eax
  40f881:	lock lods al,BYTE PTR ds:[esi]
  40f883:	stos   BYTE PTR es:[edi],al
  40f884:	mov    ds:0x92612f24,al
  40f889:	enter  0xdcc8,0x82
  40f88d:	xchg   edx,eax
  40f88e:	sahf   
  40f88f:	push   ebp
  40f890:	cdq    
  40f891:	inc    ecx
  40f892:	sub    eax,0xda20fd8f
  40f897:	out    dx,eax
  40f898:	jle    0x40f902
  40f89a:	mov    eax,ds:0xfee3ad9a
  40f89f:	dec    edi
  40f8a0:	out    dx,eax
  40f8a1:	lock sbb bh,BYTE PTR [ecx]
  40f8a4:	adc    cl,cl
  40f8a6:	mov    al,ds:0x2e93573a
  40f8ab:	call   eax
  40f8ad:	sub    ah,cl
  40f8af:	cmp    ah,0x11
  40f8b2:	scas   eax,DWORD PTR es:[edi]
  40f8b3:	shl    DWORD PTR [edx+0x2d],0x98
  40f8b7:	push   es
  40f8b8:	mov    cl,0xa3
  40f8ba:	retf   
  40f8bb:	pushf  
  40f8bc:	sar    esi,cl
  40f8be:	mov    cl,0xcf
  40f8c0:	fiadd  DWORD PTR [esi]
  40f8c2:	lods   eax,DWORD PTR ds:[esi]
  40f8c3:	sub    BYTE PTR [ecx+0x31],bl
  40f8c6:	sti    
  40f8c7:	mov    cl,0xd1
  40f8c9:	mov    ecx,0x66ecf77e
  40f8ce:	mov    ecx,0x2fb5b13b
  40f8d3:	adc    edx,esi
  40f8d5:	sub    edi,edx
  40f8d7:	adc    al,BYTE PTR [ecx+0x4a609f83]
  40f8dd:	sahf   
  40f8de:	(bad)  
  40f8df:	jne    0x40f8e7
  40f8e1:	ret    0xf95
  40f8e4:	and    eax,0xd851853c
  40f8e9:	dec    ecx
  40f8ea:	mov    bl,0x3d
  40f8ec:	and    DWORD PTR [ebx-0x283d8a2b],ecx
  40f8f2:	ret    
  40f8f3:	aad    0x46
  40f8f5:	ja     0x40f905
  40f8f7:	cmp    al,0xf5
  40f8f9:	fs jae 0x40f8ec
  40f8fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8fd:	push   0xafe8b806
  40f902:	cmp    eax,DWORD PTR [ebp-0x1fa0ceb]
  40f908:	pop    edi
  40f909:	popa   
  40f90a:	cmp    BYTE PTR [ebp-0x2ceca39e],al
  40f910:	push   eax
  40f911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f912:	mov    ?,WORD PTR [ebp-0x36]
  40f915:	mov    esp,0xa26142eb
  40f91a:	or     edx,esi
  40f91c:	fistp  QWORD PTR [ecx+0x7e9c6259]
  40f922:	popf   
  40f923:	shl    esi,1
  40f925:	jbe    0x40f8e5
  40f927:	out    dx,eax
  40f928:	pop    esi
  40f929:	adc    ebx,DWORD PTR [ecx-0x55]
  40f92c:	add    esi,DWORD PTR [edx-0x33991bf5]
  40f932:	repz enter 0x4242,0xd9
  40f937:	fsub   st(2),st
  40f939:	inc    ebp
  40f93a:	ss in  eax,dx
  40f93c:	xchg   edx,eax
  40f93d:	dec    esi
  40f93e:	mov    ds:0x8811ccce,al
  40f943:	jl     0x40f94b
  40f945:	dec    ebx
  40f946:	cli    
  40f947:	sub    ebp,esi
  40f949:	xchg   esp,eax
  40f94b:	xor    eax,0x5c647b20
  40f950:	lea    edx,[esi]
  40f952:	gs shr dl,1
  40f955:	bound  eax,QWORD PTR [esi+ecx*8+0x18]
  40f959:	(bad)  
  40f95a:	inc    BYTE PTR [ebx+0x5]
  40f95d:	lds    eax,FWORD PTR [ebx-0x12bc7e40]
  40f963:	pop    esi
  40f964:	call   0x207e:0x1da22d36
  40f96b:	pop    edi
  40f96c:	jmp    0x9f26:0xe17e6d9b
  40f973:	ds mov cl,0xf8
  40f976:	(bad)  
  40f977:	jmp    DWORD PTR [esi+0x60]
  40f97a:	pop    es
  40f97b:	xchg   ecx,eax
  40f97c:	or     al,0xee
  40f97e:	jge    0x40f935
  40f980:	scas   eax,DWORD PTR es:[edi]
  40f981:	fdivr  QWORD PTR [ecx+esi*4]
  40f984:	shl    DWORD PTR [ebx+0x78],1
  40f987:	add    eax,0x902eb617
  40f98c:	jge    0x40f9b5
  40f98e:	cmp    BYTE PTR [edi],dh
  40f990:	ret    
  40f991:	push   0xa066ab23
  40f996:	and    eax,ebp
  40f998:	sub    eax,0xc0eeb7d
  40f99d:	cs or  ebx,esp
  40f9a0:	std    
  40f9a1:	neg    DWORD PTR [eax]
  40f9a3:	cmp    DWORD PTR [eax-0x60d556bf],edi
  40f9a9:	enter  0x5e24,0x5f
  40f9ad:	sbb    ebx,DWORD PTR [edi]
  40f9af:	(bad)
  40f9b2:	test   edx,esp
  40f9b4:	addr16 sbb eax,0x3c767615
  40f9ba:	jp     0x40f9bc
  40f9bc:	adc    al,0x57
  40f9be:	xlat   BYTE PTR ds:[ebx]
  40f9bf:	sbb    al,0x74
  40f9c1:	js     0x40f9eb
  40f9c3:	test   bh,dl
  40f9c5:	cmp    BYTE PTR [ebx+0x1af54966],al
  40f9cb:	and    BYTE PTR [eax],cl
  40f9cd:	in     al,0xbe
  40f9cf:	test   al,0xbb
  40f9d1:	sub    eax,0x95cb26a9
  40f9d6:	cmp    edi,DWORD PTR [esp+ebp*4-0x3f236b27]
  40f9dd:	fstp   QWORD PTR [ecx+0x3c315937]
  40f9e3:	mov    al,ds:0xe8700b57
  40f9e8:	stos   DWORD PTR es:[edi],eax
  40f9e9:	add    eax,esp
  40f9eb:	ror    al,0x60
  40f9ee:	retf   
  40f9ef:	mov    ecx,0x448e3957
  40f9f4:	daa    
  40f9f5:	outs   dx,DWORD PTR ds:[esi]
  40f9f6:	pop    esp
  40f9f7:	pusha  
  40f9f8:	inc    edi
  40f9f9:	inc    ecx
  40f9fa:	aas    
  40f9fb:	dec    esi
  40f9fc:	neg    DWORD PTR [edx+0x7a]
  40f9ff:	xor    al,bh
  40fa01:	jbe    0x40fa47
  40fa03:	sbb    eax,0xf5185c3a
  40fa08:	jns    0x40fa87
  40fa0a:	pop    ebx
  40fa0b:	xchg   WORD PTR [edi],cx
  40fa0e:	das    
  40fa0f:	arpl   WORD PTR [ecx],bx
  40fa11:	lock and esi,DWORD PTR [esi+ebx*4]
  40fa15:	loop   0x40fa78
  40fa17:	ret    
  40fa18:	jecxz  0x40f9de
  40fa1a:	jl     0x40fa5e
  40fa1c:	je     0x40fa6b
  40fa1e:	and    bl,BYTE PTR gs:[di-0x6f]
  40fa23:	retf   0xf02b
  40fa26:	dec    ecx
  40fa27:	leave  
  40fa28:	aam    0xe6
  40fa2a:	dec    esp
  40fa2b:	fisttp QWORD PTR [edx]
  40fa2d:	or     DWORD PTR [ebx],0x3f761846
  40fa33:	add    eax,0x34f8cdc8
  40fa38:	or     al,0xd0
  40fa3a:	enter  0x75d1,0xac
  40fa3e:	cmp    eax,DWORD PTR [esi+ecx*1]
  40fa41:	xchg   esp,eax
  40fa42:	lock test eax,0x2c0687dc
  40fa48:	inc    edx
  40fa49:	cwde   
  40fa4a:	xchg   esp,eax
  40fa4b:	cmp    DWORD PTR [ebp-0xab73b51],esi
  40fa51:	les    eax,FWORD PTR [eax]
  40fa53:	gs inc edi
  40fa55:	imul   edx,DWORD PTR [ecx+0x14],0xffffffa0
  40fa59:	adc    ecx,DWORD PTR [ebp-0x72]
  40fa5c:	xor    eax,0xacf0d2d2
  40fa61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa62:	push   ebx
  40fa63:	adc    DWORD PTR [ebp+0x48e345e3],esp
  40fa69:	shr    BYTE PTR [ecx-0x213d48fe],cl
  40fa6f:	cmc    
  40fa70:	(bad)
  40fa74:	int    0xac
  40fa76:	xlat   BYTE PTR ds:[ebx]
  40fa77:	or     cl,cl
  40fa79:	outs   dx,BYTE PTR ds:[esi]
  40fa7a:	xchg   BYTE PTR [eax+edi*1+0x7c],dh
  40fa7e:	aad    0xef
  40fa80:	mov    cl,BYTE PTR [esi+ebx*1+0x13a67b8d]
  40fa87:	inc    eax
  40fa88:	call   0xb866692d
  40fa8d:	test   edi,eax
  40fa8f:	imul   esi,DWORD PTR [esi+0x36],0x689c6765
  40fa96:	(bad)  
  40fa98:	fisub  WORD PTR [ecx+edx*4]
  40fa9b:	hlt    
  40fa9c:	mov    dl,0x10
  40fa9e:	call   0xab35:0x7432f7aa
  40faa5:	sub    ch,BYTE PTR [edi]
  40faa7:	cmp    eax,DWORD PTR [edi-0x2f030c13]
  40faad:	and    BYTE PTR [esp+ecx*8-0x7b2f9fda],cl
  40fab4:	pop    ds
  40fab5:	outs   dx,BYTE PTR ds:[esi]
  40fab6:	mov    dh,0x77
  40fab8:	jmp    0x40fab4
  40faba:	or     dh,BYTE PTR [ebx]
  40fabc:	mov    al,ds:0x2f8c5a87
  40fac1:	adc    esi,DWORD PTR [eax]
  40fac3:	dec    esi
  40fac4:	fwait
  40fac5:	add    BYTE PTR [edx-0x1c27202d],bl
  40facb:	cdq    
  40facc:	sub    BYTE PTR [ebx+0x3878f1a6],ah
  40fad2:	pop    edx
  40fad3:	in     al,dx
  40fad4:	add    al,0x24
  40fad6:	enter  0xca4e,0x4d
  40fada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fadb:	test   DWORD PTR [eax],0x14686cb3
  40fae1:	stos   DWORD PTR es:[edi],eax
  40fae2:	(bad)  
  40fae3:	(bad)  
  40fae4:	(bad)  
  40fae5:	xchg   BYTE PTR ss:[ebp-0x14b73d30],ah
  40faec:	mov    esp,0xd57ad705
  40faf1:	imul   eax,DWORD PTR [eax+0x2c],0xffffff99
  40faf5:	add    al,0x5e
  40faf7:	push   edx
  40faf8:	adc    BYTE PTR [ebx-0x6b],dl
  40fafb:	int3   
  40fafc:	mov    ebp,0x1cb01202
  40fb01:	inc    esi
  40fb02:	add    bl,BYTE PTR [ebp+0x448f1432]
  40fb08:	xor    ecx,ecx
  40fb0a:	sub    BYTE PTR [ebp+0x4f],ch
  40fb0d:	mov    gs,WORD PTR [ebx]
  40fb0f:	into   
  40fb10:	xor    ecx,eax
  40fb12:	mov    DWORD PTR [ebp+0x8],ecx
  40fb15:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb18:	mov    edx,DWORD PTR [ebp+0x8]
  40fb1b:	xor    ecx,eax
  40fb1d:	imul   edx,edx,0x5708f4
  40fb23:	add    ecx,esi
  40fb25:	lea    ecx,[ebp+ecx*4-0x64]
  40fb29:	mov    edi,DWORD PTR [ecx]
  40fb2b:	add    edx,edi
  40fb2d:	mov    DWORD PTR [ecx],edx
  40fb2f:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb32:	xor    ecx,eax
  40fb34:	add    ecx,esi
  40fb36:	jne    0x40d740
  40fb3c:	mov    ecx,DWORD PTR [ebp-0x14]
  40fb3f:	mov    edx,DWORD PTR [ebp+0x8]
  40fb42:	xor    ecx,eax
  40fb44:	xor    edx,eax
  40fb46:	add    ecx,esi
  40fb48:	add    edx,esi
  40fb4a:	cmp    ecx,edx
  40fb4c:	jae    0x40fbe2
  40fb52:	lea    edx,[ecx-0x3272de]
  40fb58:	mov    DWORD PTR [ebp-0x18],edx
  40fb5b:	mov    edi,DWORD PTR [ebp-0x18]
  40fb5e:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40fb65:	lea    edx,[ebp-0x24]
  40fb68:	mov    DWORD PTR [ebp-0x10],edx
  40fb6b:	mov    edx,DWORD PTR [ebp-0x10]
  40fb6e:	add    DWORD PTR [edx],0x705fa0f
  40fb74:	mov    ebx,DWORD PTR [ebp-0x10]
  40fb77:	xor    edi,eax
  40fb79:	add    edi,DWORD PTR [ebx]
  40fb7b:	lea    edx,[ebp+ecx*4-0x64]
  40fb7f:	mov    ebx,DWORD PTR [edx]
  40fb81:	xor    edi,ebx
  40fb83:	mov    DWORD PTR [edx],edi
  40fb85:	mov    edx,DWORD PTR [ebp+0x8]
  40fb88:	xor    edx,eax
  40fb8a:	inc    ecx
  40fb8b:	inc    DWORD PTR [ebp-0x18]
  40fb8e:	add    edx,esi
  40fb90:	cmp    ecx,edx
  40fb92:	jb     0x40fb5b
  40fb98:	jmp    0x40fbe2
  40fb9d:	mov    ecx,DWORD PTR [ebp-0xc]
  40fba0:	mov    DWORD PTR [ebp+0x8],ecx
  40fba3:	jmp    0x40fbd5
  40fba8:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbab:	mov    edx,DWORD PTR [ebp-0x8]
  40fbae:	xor    ecx,eax
  40fbb0:	xor    edx,eax
  40fbb2:	sub    ecx,edx
  40fbb4:	sub    ecx,esi
  40fbb6:	xor    ecx,eax
  40fbb8:	mov    DWORD PTR [ebp+0x8],ecx
  40fbbb:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbbe:	mov    edx,DWORD PTR [ebp+0x8]
  40fbc1:	imul   edx,edx,0x5708f4
  40fbc7:	xor    ecx,eax
  40fbc9:	add    ecx,esi
  40fbcb:	lea    ecx,[ebp+ecx*4-0x64]
  40fbcf:	mov    edi,DWORD PTR [ecx]
  40fbd1:	add    edx,edi
  40fbd3:	mov    DWORD PTR [ecx],edx
  40fbd5:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbd8:	xor    ecx,eax
  40fbda:	add    ecx,esi
  40fbdc:	jne    0x40fba8
  40fbe2:	mov    ecx,DWORD PTR [ebp-0xc]
  40fbe5:	mov    DWORD PTR [ebp+0x8],ecx
  40fbe8:	jmp    0x40fc1a
  40fbed:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbf0:	mov    edx,DWORD PTR [ebp-0x8]
  40fbf3:	xor    ecx,eax
  40fbf5:	xor    edx,eax
  40fbf7:	sub    ecx,edx
  40fbf9:	sub    ecx,esi
  40fbfb:	xor    ecx,eax
  40fbfd:	mov    DWORD PTR [ebp+0x8],ecx
  40fc00:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc03:	mov    edx,DWORD PTR [ebp+0x8]
  40fc06:	imul   edx,edx,0x5708f4
  40fc0c:	xor    ecx,eax
  40fc0e:	add    ecx,esi
  40fc10:	lea    ecx,[ebp+ecx*4-0x64]
  40fc14:	mov    edi,DWORD PTR [ecx]
  40fc16:	add    edx,edi
  40fc18:	mov    DWORD PTR [ecx],edx
  40fc1a:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc1d:	xor    ecx,eax
  40fc1f:	add    ecx,esi
  40fc21:	jne    0x40fbed
  40fc27:	mov    ecx,DWORD PTR [ebp-0x8]
  40fc2a:	mov    edx,DWORD PTR [ebp-0x20]
  40fc2d:	xor    ecx,eax
  40fc2f:	lea    ecx,[ecx+edx*1+0x3272de]
  40fc36:	mov    DWORD PTR [ebp-0x20],ecx
  40fc39:	inc    DWORD PTR [ebp+0xc]
  40fc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fc3f:	xor    ecx,eax
  40fc41:	add    ecx,esi
  40fc43:	jne    0x40d57d
  40fc49:	jmp    0x412094
  40fc4e:	mov    ecx,DWORD PTR [ebp-0xc]
  40fc51:	mov    DWORD PTR [ebp+0x8],ecx
  40fc54:	jmp    0x40fc86
  40fc59:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc5c:	mov    edx,DWORD PTR [ebp-0x8]
  40fc5f:	xor    ecx,eax
  40fc61:	xor    edx,eax
  40fc63:	sub    ecx,edx
  40fc65:	sub    ecx,esi
  40fc67:	xor    ecx,eax
  40fc69:	mov    DWORD PTR [ebp+0x8],ecx
  40fc6c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc6f:	mov    edx,DWORD PTR [ebp+0x8]
  40fc72:	imul   edx,edx,0x5708f4
  40fc78:	xor    ecx,eax
  40fc7a:	add    ecx,esi
  40fc7c:	lea    ecx,[ebp+ecx*4-0x64]
  40fc80:	mov    edi,DWORD PTR [ecx]
  40fc82:	add    edx,edi
  40fc84:	mov    DWORD PTR [ecx],edx
  40fc86:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc89:	xor    ecx,eax
  40fc8b:	add    ecx,esi
  40fc8d:	jne    0x40fc59
  40fc93:	jmp    0x4120a0
  40fc98:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc9b:	mov    edx,DWORD PTR [ebp-0x8]
  40fc9e:	xor    ecx,eax
  40fca0:	xor    edx,eax
  40fca2:	sub    ecx,edx
  40fca4:	sub    ecx,esi
  40fca6:	xor    ecx,eax
  40fca8:	mov    DWORD PTR [ebp+0x8],ecx
  40fcab:	mov    ecx,DWORD PTR [ebp+0x8]
  40fcae:	mov    edx,DWORD PTR [ebp+0x8]
  40fcb1:	xor    ecx,eax
  40fcb3:	imul   edx,edx,0x5708f4
  40fcb9:	add    ecx,esi
  40fcbb:	lea    ecx,[ebp+ecx*4-0x64]
  40fcbf:	mov    edi,DWORD PTR [ecx]
  40fcc1:	add    edx,edi
  40fcc3:	mov    DWORD PTR [ecx],edx
  40fcc5:	mov    ecx,DWORD PTR [ebp+0x8]
  40fcc8:	xor    ecx,eax
  40fcca:	add    ecx,esi
  40fccc:	jmp    0x41208e
  40fcd1:	pop    ebx
  40fcd2:	(bad)  
  40fcd3:	sbb    BYTE PTR [edi-0x74],cl
  40fcd6:	ja     0x40fcf3
  40fcd8:	retf   
  40fcd9:	push   edx
  40fcda:	outs   dx,BYTE PTR ds:[esi]
  40fcdb:	pop    edx
  40fcdc:	imul   ecx,DWORD PTR [edi+0x70a1db5d],0xdd7878c8
  40fce6:	pop    edi
  40fce7:	js     0x40fd61
  40fce9:	cli    
  40fcea:	call   0x373739bc
  40fcef:	and    DWORD PTR [esi+0x56],ecx
  40fcf2:	mov    eax,DWORD PTR [esi+0x46]
  40fcf5:	xchg   esp,eax
  40fcf6:	cmp    dh,BYTE PTR [ebp-0x2a]
  40fcf9:	fstp   TBYTE PTR [edx+0x1cc5bef]
  40fcff:	sti    
  40fd00:	daa    
  40fd01:	sub    DWORD PTR [eax+0x3c],ecx
  40fd04:	push   0xeca16d3f
  40fd09:	push   ebx
  40fd0a:	inc    ecx
  40fd0b:	dec    edi
  40fd0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd0d:	and    BYTE PTR [edi-0x27],ch
  40fd10:	out    0x59,eax
  40fd12:	pop    edx
  40fd13:	xor    eax,0xcab5d41e
  40fd18:	call   0x51d1:0x7a1b4638
  40fd1f:	lods   al,BYTE PTR ds:[esi]
  40fd20:	mov    al,ds:0x777af324
  40fd25:	mov    esi,0xe46fa525
  40fd2a:	pop    edx
  40fd2b:	test   al,0xe2
  40fd2d:	lea    eax,[eax]
  40fd2f:	sbb    dh,BYTE PTR [ebp-0x5a443c71]
  40fd35:	mov    ah,0x6a
  40fd37:	rol    edi,0xc0
  40fd3a:	push   edx
  40fd3b:	lahf   
  40fd3c:	jbe    0x40fd61
  40fd3e:	cmp    eax,0x4b2ea3d1
  40fd43:	dec    edi
  40fd44:	mov    WORD PTR [edx-0x6b601e5f],ss
  40fd4a:	pop    edx
  40fd4b:	adc    eax,0xeac43a28
  40fd50:	outs   dx,BYTE PTR ds:[esi]
  40fd51:	mov    dl,0x13
  40fd53:	fldln2 
  40fd55:	sub    esp,ebx
  40fd57:	jp     0x40fd64
  40fd59:	cdq    
  40fd5a:	jge    0x40fd97
  40fd5c:	and    al,BYTE PTR [esi-0xf2c9876]
  40fd62:	clc    
  40fd63:	xor    al,cl
  40fd65:	mov    bh,0x66
  40fd67:	dec    ecx
  40fd68:	retf   
  40fd69:	js     0x40fd75
  40fd6b:	push   0xffffffd4
  40fd6d:	lahf   
  40fd6e:	pusha  
  40fd6f:	(bad)  
  40fd70:	in     al,dx
  40fd71:	push   ebp
  40fd72:	scas   eax,DWORD PTR es:[edi]
  40fd73:	mov    edi,0x4ce75886
  40fd78:	arpl   WORD PTR [ebp*4+0x4e720d75],sp
  40fd7f:	sbb    al,0x56
  40fd81:	call   0xe79d18d2
  40fd86:	mov    ebx,0xded1a8a3
  40fd8b:	mov    cl,0x59
  40fd8d:	gs push esp
  40fd8f:	mov    ah,0x3b
  40fd91:	dec    edx
  40fd92:	scas   eax,DWORD PTR es:[edi]
  40fd93:	lea    esi,[eax]
  40fd95:	jge    0x40fdb5
  40fd97:	push   eax
  40fd98:	or     BYTE PTR ds:0x38ed169f,cl
  40fd9e:	cmp    ecx,eax
  40fda0:	adc    DWORD PTR [edx-0x23],ebx
  40fda3:	push   es
  40fda4:	fmul   DWORD PTR [esi]
  40fda6:	jmp    0xc6df0397
  40fdab:	mov    cl,0x79
  40fdad:	es or  al,0x42
  40fdb0:	pop    es
  40fdb1:	inc    edi
  40fdb2:	xor    bh,BYTE PTR [ebx]
  40fdb4:	test   DWORD PTR [edx+esi*2-0x3453e9fe],edx
  40fdbb:	(bad)  [ebx-0x3a]
  40fdbe:	jecxz  0x40fdbb
  40fdc0:	pusha  
  40fdc1:	loope  0x40fd61
  40fdc3:	pushf  
  40fdc4:	mov    ch,BYTE PTR [edi]
  40fdc6:	inc    edx
  40fdc7:	pop    eax
  40fdc8:	pop    eax
  40fdc9:	test   al,0xb8
  40fdcb:	xchg   BYTE PTR [esi-0x4b3c3f6a],ch
  40fdd1:	dec    esi
  40fdd2:	mov    bh,0x11
  40fdd4:	xor    BYTE PTR [edi],bl
  40fdd6:	(bad)  
  40fdd7:	mov    eax,0xcbc4685c
  40fddc:	paddq  mm2,QWORD PTR [ecx]
  40fddf:	lock stc 
  40fde1:	sbb    al,0xf3
  40fde3:	inc    DWORD PTR [eax]
  40fde5:	(bad)  
  40fde6:	push   esp
  40fde7:	(bad)  
  40fde9:	loop   0x40fe07
  40fdeb:	push   0xffffffef
  40fded:	sbb    al,0x33
  40fdef:	mov    ch,0x30
  40fdf1:	(bad)  
  40fdf2:	int3   
  40fdf3:	lock in eax,0x9d
  40fdf6:	inc    ebx
  40fdf7:	sbb    DWORD PTR [ecx-0x14],ebp
  40fdfa:	adc    al,0xc6
  40fdfc:	cli    
  40fdfd:	mov    ecx,0x6788b9a6
  40fe02:	imul   si,WORD PTR [edx],0x7b37
  40fe07:	add    ch,BYTE PTR ds:[ebp+esi*4-0x28269710]
  40fe0f:	adc    esi,DWORD PTR [esi]
  40fe11:	jno    0x40fd9f
  40fe13:	and    DWORD PTR [ebx-0x78],edi
  40fe16:	(bad)  
  40fe17:	jnp    0x40fe3a
  40fe19:	add    DWORD PTR [esi-0x34515746],esp
  40fe1f:	add    eax,0xcbfe2a61
  40fe24:	repz mov ebp,0x2d06290e
  40fe2a:	outs   dx,DWORD PTR ds:[esi]
  40fe2b:	fistp  WORD PTR [ebx+0x2a485fc4]
  40fe31:	pushf  
  40fe32:	loope  0x40fe56
  40fe34:	(bad)  
  40fe35:	xor    ch,BYTE PTR [eax+eax*1-0x3e5e4a51]
  40fe3c:	xchg   ebp,eax
  40fe3d:	ds or  al,0x3
  40fe40:	jb     0x40fe3d
  40fe42:	sbb    eax,0xc2acc84f
  40fe47:	and    ecx,DWORD PTR [edx-0x434abc71]
  40fe4d:	jbe    0x40fe84
  40fe4f:	ja     0x40feac
  40fe51:	jp     0x40feb2
  40fe53:	aam    0x8
  40fe55:	mov    ds:0xfea02685,eax
  40fe5a:	fisttp WORD PTR [ebx]
  40fe5c:	sub    DWORD PTR [ebx],ebx
  40fe5e:	ror    DWORD PTR [esi],cl
  40fe60:	dec    esi
  40fe61:	stc    
  40fe62:	fisttp QWORD PTR [ecx]
  40fe64:	inc    ebp
  40fe65:	jle    0x40fedf
  40fe67:	ret    
  40fe68:	pop    esp
  40fe69:	jbe    0x40fe70
  40fe6b:	outs   dx,BYTE PTR ds:[esi]
  40fe6c:	push   0x236f70d
  40fe71:	(bad)  
  40fe72:	std    
  40fe73:	fwait
  40fe74:	adc    cl,ah
  40fe76:	mov    eax,ds:0xa1b4271e
  40fe7b:	push   ebp
  40fe7c:	adc    dl,BYTE PTR [edx]
  40fe7e:	shl    eax,1
  40fe80:	xchg   edi,eax
  40fe81:	std    
  40fe82:	push   edx
  40fe83:	sub    eax,0xf37a3a78
  40fe88:	sbb    ecx,edi
  40fe8a:	popf   
  40fe8b:	or     DWORD PTR [edx-0x60f4ee8f],edi
  40fe91:	push   esi
  40fe92:	push   eax
  40fe93:	push   eax
  40fe94:	cmp    al,0xe7
  40fe96:	inc    ebp
  40fe97:	popf   
  40fe98:	retf   0x4206
  40fe9b:	(bad)  [ebp-0x6]
  40fe9e:	aad    0x28
  40fea0:	pop    esi
  40fea1:	stos   DWORD PTR es:[edi],eax
  40fea2:	push   ecx
  40fea3:	adc    ebp,DWORD PTR [edx-0x5b]
  40fea6:	ss inc edi
  40fea8:	sbb    al,bh
  40feaa:	addr16 int 0xa8
  40fead:	and    esp,DWORD PTR [edx-0x53]
  40feb0:	pushf  
  40feb1:	inc    edi
  40feb2:	or     al,0x92
  40feb4:	pop    ebx
  40feb5:	mov    bl,0x10
  40feb7:	or     al,0xa
  40feb9:	pop    eax
  40feba:	mov    ds:0x7ebde122,al
  40febf:	xchg   ecx,eax
  40fec0:	mov    bh,ch
  40fec2:	test   BYTE PTR [ecx-0x73],al
  40fec5:	mov    cl,0x97
  40fec7:	cmc    
  40fec8:	outs   dx,DWORD PTR ds:[esi]
  40fec9:	rcr    DWORD PTR [esi],0x8a
  40fecc:	push   edx
  40fecd:	std    
  40fece:	mov    bh,0x2e
  40fed0:	(bad)  [esi-0x61]
  40fed3:	mov    edi,0xa9ba75ae
  40fed8:	mov    ah,0x75
  40feda:	fcomp  QWORD PTR [edi]
  40fedc:	cmp    eax,0xe4abf434
  40fee1:	jmp    0x40ff34
  40fee3:	push   ebx
  40fee4:	mov    bl,0x33
  40fee6:	enter  0x1133,0x81
  40feea:	popf   
  40feeb:	and    eax,0x4a0a5db1
  40fef0:	mov    cl,ah
  40fef2:	mov    edi,0x9ecdf3b4
  40fef7:	adc    edi,ebx
  40fef9:	pop    esp
  40fefa:	aam    0xcf
  40fefc:	push   0x94cc2612
  40ff01:	pop    ds
  40ff02:	fild   DWORD PTR [esi+0x25]
  40ff05:	loope  0x40ff34
  40ff07:	je     0x40feee
  40ff09:	(bad)  
  40ff0a:	ror    DWORD PTR [edi],cl
  40ff0c:	xchg   ebp,eax
  40ff0d:	mov    dl,0x4a
  40ff0f:	cmp    eax,0x3e4d4138
  40ff14:	pop    ebp
  40ff15:	or     al,0x3e
  40ff17:	and    al,0x28
  40ff19:	imul   esp,DWORD PTR [eax],0x8a5f3eb2
  40ff1f:	push   edx
  40ff20:	xlat   BYTE PTR ss:[ebx]
  40ff22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff23:	imul   edx
  40ff25:	scas   al,BYTE PTR es:[edi]
  40ff26:	out    0xd1,al
  40ff28:	icebp  
  40ff29:	xchg   ebp,eax
  40ff2a:	adc    eax,DWORD PTR [edi]
  40ff2c:	jmp    0x5d82:0x2b0fe35f
  40ff33:	jns    0x40ff6e
  40ff35:	sbb    BYTE PTR [ebp+0x6e449267],0x6b
  40ff3c:	add    BYTE PTR [edx+0x14f48d6b],ah
  40ff42:	inc    ebp
  40ff43:	js     0x40ff9f
  40ff45:	repz push edi
  40ff47:	arpl   WORD PTR [edi-0x66d52ff6],di
  40ff4d:	mov    ch,0xb
  40ff4f:	cdq    
  40ff50:	pop    ds
  40ff51:	dec    edi
  40ff52:	outs   dx,DWORD PTR ds:[esi]
  40ff53:	inc    dl
  40ff55:	lods   al,BYTE PTR ds:[esi]
  40ff56:	int    0x93
  40ff58:	jp     0x40ffd7
  40ff5a:	das    
  40ff5b:	cld    
  40ff5c:	pop    eax
  40ff5d:	pop    es
  40ff5e:	test   al,0xc
  40ff60:	sahf   
  40ff61:	mov    ds:0x1060bbf,eax
  40ff66:	and    ebx,DWORD PTR [edx-0x7c]
  40ff69:	jmp    FWORD PTR [ebx-0x374ac489]
  40ff6f:	adc    cl,0x3c
  40ff72:	xor    bh,0x7e
  40ff75:	xchg   esp,eax
  40ff76:	lea    ecx,[ebp-0xc]
  40ff79:	aaa    
  40ff7a:	pop    esp
  40ff7b:	cmp    al,0x8c
  40ff7d:	call   0x720af56
  40ff82:	int3   
  40ff83:	in     al,dx
  40ff84:	and    ebx,esi
  40ff86:	dec    ebx
  40ff87:	pop    esp
  40ff88:	ja     0x40ffac
  40ff8a:	mov    ch,0xae
  40ff8c:	xchg   ebx,eax
  40ff8d:	push   ebp
  40ff8e:	adc    DWORD PTR [ebp+esi*2+0x1b],edi
  40ff92:	sub    BYTE PTR [ebp-0x13],cl
  40ff95:	jnp    0x410001
  40ff97:	icebp  
  40ff98:	pop    esp
  40ff99:	push   edi
  40ff9a:	loopne 0x41000d
  40ff9c:	popf   
  40ff9d:	cmp    eax,0x85d6a63a
  40ffa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa3:	cld    
  40ffa4:	nop
  40ffa5:	test   ecx,esp
  40ffa7:	fldpi  
  40ffa9:	inc    edi
  40ffaa:	rcl    eax,1
  40ffac:	sub    DWORD PTR ds:0xd6ef10e0,0x9fea866b
  40ffb6:	loop   0x40ffd5
  40ffb8:	nop
  40ffb9:	sahf   
  40ffba:	adc    DWORD PTR [eax+0x36],ebp
  40ffbd:	xor    al,0x17
  40ffbf:	pop    ds
  40ffc0:	mov    dh,0xb0
  40ffc2:	and    edi,ebp
  40ffc4:	and    eax,0xa8ab79b3
  40ffc9:	pop    ebp
  40ffca:	ds dec esp
  40ffcc:	(bad)  
  40ffce:	outs   dx,DWORD PTR ds:[esi]
  40ffcf:	and    ch,ch
  40ffd1:	pop    edi
  40ffd2:	sub    esi,DWORD PTR ss:[ebx+0x549d796]
  40ffd9:	popa   
  40ffda:	xchg   edx,eax
  40ffdb:	sub    ebx,DWORD PTR [esp+ebp*4+0x311f563a]
  40ffe2:	popf   
  40ffe3:	into   
  40ffe4:	add    BYTE PTR [ebp-0x5b0becd4],0xd5
  40ffeb:	push   ebx
  40ffec:	test   eax,0x60f591d5
  40fff1:	pushf  
  40fff2:	or     al,bh
  40fff4:	jbe    0x40ffcd
  40fff6:	pop    esi
  40fff7:	inc    esp
  40fff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fff9:	push   ebp
  40fffa:	cmp    BYTE PTR [ecx],dh
  40fffc:	jmp    0x53f74449
  410001:	shl    DWORD PTR [ecx+ecx*8+0x7d164c6c],1
  410008:	and    bh,BYTE PTR [eax]
  41000a:	xchg   ebx,eax
  41000b:	mov    bh,0xc9
  41000d:	imul   DWORD PTR [edi-0x38d10409]
  410013:	outs   dx,DWORD PTR ds:[esi]
  410014:	mov    bh,0xff
  410016:	pop    ebp
  410017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410018:	enter  0xb99f,0xa3
  41001c:	jmp    0x52fc:0xe192ce4c
  410023:	inc    ecx
  410024:	ss fmulp st(0),st
  410027:	out    dx,eax
  410028:	push   ebp
  410029:	mov    esp,0x6b301966
  41002e:	shl    al,cl
  410030:	xlat   BYTE PTR ds:[ebx]
  410031:	repz mov esi,0x3e2a43d7
  410037:	jmp    0x942:0x3ab46ece
  41003e:	push   esp
  41003f:	sar    DWORD PTR ds:0x25aabd4b,cl
  410045:	mov    BYTE PTR [edx+0x75],dl
  410048:	scas   al,BYTE PTR es:[edi]
  410049:	loope  0x410029
  41004b:	aas    
  41004c:	mov    WORD PTR [ecx-0x11],cs
  41004f:	retf   0xca1
  410052:	mov    BYTE PTR [eax+0x7af5f75c],bl
  410058:	push   edi
  410059:	js     0x4100ce
  41005b:	mul    ah
  41005d:	fst    QWORD PTR [ebp+0x36e4e23a]
  410063:	test   eax,0xf7e43df7
  410068:	pusha  
  410069:	sub    BYTE PTR [eax],dl
  41006b:	in     eax,0x96
  41006d:	jnp    0x410045
  41006f:	icebp  
  410070:	add    BYTE PTR ds:0x689c0766,ch
  410076:	jae    0x4100c4
  410078:	imul   ecx,DWORD PTR [edx],0x513fa13d
  41007e:	dec    esi
  41007f:	or     bl,BYTE PTR [esi]
  410081:	pop    edi
  410082:	mov    BYTE PTR [esi-0x5148950c],al
  410088:	add    cl,BYTE PTR [ebp-0xb02d82b]
  41008e:	repz xchg ebx,eax
  410090:	inc    esi
  410091:	(bad)  
  410093:	out    0xc3,al
  410095:	ror    DWORD PTR ds:0xbf0c8bb3,cl
  41009b:	stos   BYTE PTR es:[edi],al
  41009c:	sbb    al,0xa7
  41009e:	sbb    BYTE PTR [esi-0x18d9eed9],dh
  4100a4:	dec    esp
  4100a5:	(bad)  
  4100a6:	hlt    
  4100a7:	jecxz  0x41010b
  4100a9:	stos   DWORD PTR es:[edi],eax
  4100aa:	pushf  
  4100ab:	xchg   edi,eax
  4100ac:	ja     0x4100fe
  4100ae:	sub    al,0xf8
  4100b0:	mov    bl,0xad
  4100b2:	mov    bl,0x22
  4100b4:	push   0x5dbad1e3
  4100b9:	push   esp
  4100ba:	cwde   
  4100bb:	or     eax,0x54f7308
  4100c0:	push   ebp
  4100c1:	cmp    DWORD PTR [ecx+0x62ec40f4],0x3d46a24a
  4100cb:	repz mov dl,0x64
  4100ce:	inc    eax
  4100cf:	arpl   WORD PTR [eax-0x5ef733d4],bp
  4100d5:	xchg   edi,eax
  4100d6:	push   ss
  4100d7:	adc    eax,0x3ae9b725
  4100dc:	inc    esp
  4100dd:	add    bl,ah
  4100df:	mov    edx,ebx
  4100e1:	and    ecx,DWORD PTR [esi+edi*8-0x6e]
  4100e5:	ins    BYTE PTR es:[edi],dx
  4100e6:	fimul  DWORD PTR [esi]
  4100e8:	push   ecx
  4100e9:	ds scas al,BYTE PTR es:[edi]
  4100eb:	mov    edx,ecx
  4100ed:	sbb    DWORD PTR [ebp+0x2dc6fa9a],esp
  4100f3:	shl    DWORD PTR [ebx],0xe5
  4100f6:	or     BYTE PTR [eax+edi*1+0x23633df1],al
  4100fd:	sbb    BYTE PTR [esi+eiz*2-0x3ea0f62a],ah
  410104:	sti    
  410105:	jmp    0x608b:0xe2bc6d0f
  41010c:	inc    edi
  41010d:	xchg   esp,eax
  41010e:	retf   
  41010f:	inc    BYTE PTR [ebx]
  410111:	and    dh,ch
  410113:	xchg   al,dl
  410115:	xchg   edx,eax
  410116:	push   ds
  410117:	fbstp  TBYTE PTR [eax+0x219dd5ea]
  41011d:	out    0xfe,al
  41011f:	jb     0x410106
  410121:	jecxz  0x41013b
  410123:	push   ebp
  410124:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410126:	fs xchg edx,eax
  410128:	call   FWORD PTR [edi]
  41012a:	icebp  
  41012b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41012c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41012e:	popf   
  41012f:	xchg   ebx,eax
  410130:	cs imul bh
  410133:	xor    bl,BYTE PTR [esi+0xfe21034]
  410139:	loope  0x410163
  41013b:	xor    BYTE PTR [ebx-0x72],ch
  41013e:	inc    ebx
  41013f:	pop    ds
  410140:	repnz ds cli 
  410143:	test   ebp,eax
  410145:	dec    ebx
  410146:	out    0xae,al
  410148:	(bad)  [esi-0x4b]
  41014b:	sti    
  41014c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41014d:	xchg   edi,eax
  41014e:	loope  0x41013a
  410150:	retf   0x1de6
  410153:	jmp    0x105ae83f
  410158:	cmp    bl,BYTE PTR [edx+0x46]
  41015b:	add    edx,edi
  41015d:	ret    0xb7a0
  410160:	cli    
  410161:	mov    ds:0x5bcea97c,al
  410166:	dec    eax
  410167:	jo     0x4101b3
  410169:	or     al,BYTE PTR [edx+0x667760f2]
  41016f:	les    edi,FWORD PTR [esi-0x79]
  410172:	pop    edx
  410173:	cmp    BYTE PTR [edx-0x3672b26c],dl
  410179:	jo     0x41014d
  41017b:	test   BYTE PTR [ecx-0x7c3f2010],al
  410181:	add    eax,0x6ea01c92
  410186:	and    BYTE PTR [esi+0xc],0x1f
  41018a:	aaa    
  41018b:	or     esi,DWORD PTR [ebx]
  41018d:	arpl   WORD PTR [eax+0x7b],si
  410190:	popa   
  410191:	inc    esp
  410192:	rcl    ebx,1
  410194:	push   es
  410195:	(bad)  
  410196:	push   ebx
  410197:	mov    al,ds:0xe1b7a282
  41019c:	sbb    eax,esi
  41019e:	ins    BYTE PTR es:[edi],dx
  41019f:	aaa    
  4101a0:	test   al,0x54
  4101a2:	sbb    BYTE PTR [eax-0x77],bh
  4101a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101a6:	xchg   DWORD PTR [esi-0x3278a35c],ebx
  4101ac:	cld    
  4101ad:	add    eax,0xfc0875b
  4101b2:	xor    BYTE PTR [ebx+edx*2+0x1],bl
  4101b6:	aad    0xdd
  4101b8:	adc    bl,BYTE PTR [esi]
  4101ba:	jne    0x4101e3
  4101bc:	jbe    0x41018d
  4101be:	and    esp,DWORD PTR [esi]
  4101c0:	fwait
  4101c1:	hlt    
  4101c2:	jmp    0x8b7e:0x2ed89940
  4101c9:	out    dx,al
  4101ca:	mov    esi,0x9542f9e0
  4101cf:	test   ecx,esp
  4101d1:	push   esi
  4101d2:	add    DWORD PTR [ebp-0x28],0xab3301f6
  4101d9:	out    0x90,al
  4101db:	out    dx,eax
  4101dc:	jp     0x410199
  4101de:	rol    DWORD PTR [edi+0x15],1
  4101e1:	fst    DWORD PTR [ebp+0x744db48a]
  4101e7:	pop    ebx
  4101e8:	ficom  DWORD PTR [esi+0x59388989]
  4101ee:	pop    edi
  4101ef:	cli    
  4101f0:	xchg   dh,bl
  4101f2:	mov    ds:0x2fe98e92,eax
  4101f7:	daa    
  4101f8:	fnstenv [ebx-0x17]
  4101fb:	or     esi,DWORD PTR [ebx-0x77e167fd]
  410201:	jbe    0x41020f
  410203:	pusha  
  410204:	out    dx,eax
  410205:	push   edx
  410206:	cld    
  410207:	xor    al,0x52
  410209:	mov    cl,0xd8
  41020b:	ret    0xee8b
  41020e:	pop    esi
  41020f:	(bad)  
  410210:	mov    ebp,0xee914aca
  410215:	mov    al,ds:0x350e8854
  41021b:	and    eax,0xe3e9dc09
  410220:	adc    ch,BYTE PTR [ebp+0xdd47eb6]
  410226:	data16 mov dl,0x4b
  410229:	out    dx,eax
  41022a:	fs jl  0x4101d3
  41022d:	imul   edi,DWORD PTR [edx-0x13],0xffffff9a
  410231:	add    BYTE PTR [esi-0x2c],bl
  410234:	jnp    0x410209
  410236:	cmc    
  410237:	sahf   
  410238:	call   0xfbb3:0x97d7369b
  41023f:	mov    esi,0xbabe10c1
  410244:	(bad)  
  410246:	mov    edi,0xc91a0673
  41024b:	jecxz  0x410287
  41024d:	dec    eax
  41024e:	xchg   esp,eax
  41024f:	lock add eax,0xca8bd92f
  410255:	out    0x5d,eax
  410257:	js     0x410217
  410259:	imul   edx,esi,0xffffff94
  41025c:	jmp    FWORD PTR [edi-0x37]
  41025f:	add    al,0x48
  410261:	jbe    0x4102de
  410263:	xchg   BYTE PTR [edi],bl
  410265:	rcl    DWORD PTR [eax],0xb9
  410268:	lods   eax,DWORD PTR ds:[esi]
  410269:	mov    ch,0xfb
  41026b:	in     eax,0x42
  41026d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41026e:	jo     0x410220
  410270:	test   eax,0x44d4e4
  410275:	leave  
  410276:	ret    
  410277:	cld    
  410278:	fdivr  DWORD PTR [ebx]
  41027a:	push   esp
  41027b:	xor    al,0x7f
  41027d:	jp     0x410257
  41027f:	cmp    BYTE PTR [ecx+edx*2+0x4a5abe0a],dh
  410286:	or     eax,ebx
  410288:	ins    DWORD PTR es:[edi],dx
  410289:	popa   
  41028a:	das    
  41028b:	push   edx
  41028c:	or     al,0xff
  41028e:	sbb    dh,0xb7
  410291:	jno    0x410294
  410293:	dec    eax
  410294:	sbb    al,0xa9
  410296:	popa   
  410297:	and    eax,0x6e0b91ea
  41029c:	add    eax,0xb73ec773
  4102a1:	jnp    0x4102a3
  4102a3:	jb     0x4102a4
  4102a5:	cmp    bl,al
  4102a7:	jb     0x41025e
  4102a9:	dec    esi
  4102aa:	push   ds
  4102ab:	mov    WORD PTR [ebp+eiz*2-0x65f2e354],cs
  4102b2:	adc    DWORD PTR [eax+eiz*2+0x688bb5b3],esp
  4102b9:	retf   0xd7f5
  4102bc:	call   0x5a8f:0x4c872eef
  4102c3:	cmp    dh,BYTE PTR cs:[esi]
  4102c6:	mov    al,ds:0x21f85507
  4102cb:	ins    DWORD PTR es:[edi],dx
  4102cc:	mov    cl,0xdb
  4102ce:	inc    esi
  4102cf:	cmp    cl,BYTE PTR [eax]
  4102d1:	in     al,dx
  4102d2:	add    ah,ch
  4102d4:	adc    edx,DWORD PTR [ecx+edi*2-0x12f36bcb]
  4102db:	stos   DWORD PTR es:[edi],eax
  4102dc:	clc    
  4102dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102de:	bound  ecx,QWORD PTR [esi-0x5907e6f9]
  4102e4:	loope  0x41034b
  4102e6:	retf   
  4102e7:	dec    ebp
  4102e8:	and    esi,DWORD PTR [esi+0x6b602ba0]
  4102ee:	test   DWORD PTR [ecx+0x43adb7d4],esi
  4102f4:	ins    DWORD PTR es:[edi],dx
  4102f5:	gs push ds
  4102f7:	dec    esi
  4102f8:	(bad)  
  4102f9:	sub    eax,0xfd5dcf5c
  4102fe:	or     eax,0xdd8736cf
  410303:	jge    0x41033e
  410305:	jl     0x410347
  410307:	inc    edx
  410308:	cmp    DWORD PTR [ebx+0x5a545108],esi
  41030e:	addr16 dec edx
  410310:	push   0x18
  410312:	hlt    
  410313:	ja     0x41030c
  410315:	stos   DWORD PTR es:[edi],eax
  410316:	jne    0x41030c
  410318:	adc    DWORD PTR [ecx],esi
  41031a:	add    BYTE PTR [ecx+0x529591f2],ah
  410320:	dec    ebp
  410321:	mov    esp,0xf45c60a4
  410326:	lea    esi,[ebx+0x7cbb0f5f]
  41032c:	push   0xb
  41032e:	xchg   esi,eax
  41032f:	push   ebp
  410330:	inc    edx
  410331:	sub    cl,BYTE PTR [edx]
  410333:	scas   al,BYTE PTR es:[edi]
  410334:	mov    edx,0x987c9c9b
  410339:	retf   
  41033a:	out    dx,eax
  41033b:	or     DWORD PTR [eax],ebp
  41033d:	(bad)  
  41033e:	adc    BYTE PTR [ebx],ch
  410340:	or     al,0xc7
  410342:	inc    edi
  410343:	xchg   edi,eax
  410344:	std    
  410345:	addr16 adc eax,0xcfcb5c45
  41034b:	xor    DWORD PTR [ebx-0x848c9fb],ebp
  410351:	dec    ebp
  410352:	scas   eax,DWORD PTR es:[edi]
  410353:	or     ah,bh
  410355:	test   ch,ah
  410357:	mov    dh,al
  410359:	inc    edx
  41035a:	push   edi
  41035b:	in     eax,dx
  41035c:	sub    al,0xbc
  41035e:	scas   al,BYTE PTR es:[edi]
  41035f:	pop    ecx
  410360:	jmp    0x2800:0xe020d5c7
  410367:	sbb    eax,0x57b358ce
  41036c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41036d:	rol    BYTE PTR [ebp+0x1c063e4],cl
  410373:	test   eax,0xf344491b
  410378:	mov    eax,0x9b3e6357
  41037d:	dec    edi
  41037e:	cwde   
  41037f:	in     al,dx
  410380:	inc    eax
  410381:	test   DWORD PTR [ebx],eax
  410383:	xor    DWORD PTR [eax+0xf969994],0x71
  41038a:	data16 aas 
  41038c:	adc    bl,BYTE PTR [ebx]
  41038e:	jmp    0x97a2:0x1bac8711
  410395:	pop    ecx
  410396:	mov    edi,0xe4306bfd
  41039b:	xor    DWORD PTR [esi],esp
  41039d:	sub    DWORD PTR [edi-0x128c5e34],ecx
  4103a3:	mov    eax,0x34ea252c
  4103a8:	sub    esp,DWORD PTR [edi-0x17]
  4103ab:	mov    gs,WORD PTR [edx+edi*8]
  4103ae:	ss push ds
  4103b0:	inc    esp
  4103b1:	cli    
  4103b2:	pop    es
  4103b3:	stos   DWORD PTR es:[edi],eax
  4103b4:	fcmovb st,st(7)
  4103b6:	cmp    eax,0x3b2778e3
  4103bb:	cs sub ebp,ebp
  4103be:	fidiv  WORD PTR [ebx-0x6d]
  4103c1:	nop
  4103c2:	push   ebx
  4103c3:	ret    
  4103c4:	aam    0xbb
  4103c6:	or     edi,eax
  4103c8:	cmp    DWORD PTR [ebx],eax
  4103ca:	cs jo  0x41039f
  4103cd:	xor    esp,DWORD PTR [edx+0x19ec5d6a]
  4103d3:	add    DWORD PTR [edi-0x12c59c99],ecx
  4103d9:	outs   dx,DWORD PTR ds:[esi]
  4103da:	push   esp
  4103db:	or     al,0x19
  4103dd:	inc    cx
  4103df:	inc    ecx
  4103e0:	adc    eax,0xa3fa9d45
  4103e5:	bound  edi,QWORD PTR [ebx+0xb]
  4103e8:	and    al,0xef
  4103ea:	(bad)  
  4103eb:	push   ds
  4103ec:	sar    dl,cl
  4103ee:	xchg   esp,eax
  4103ef:	je     0x4103a7
  4103f1:	aad    0x8b
  4103f3:	jmp    0x410388
  4103f5:	xchg   edx,eax
  4103f6:	out    0x4,al
  4103f8:	ja     0x41039d
  4103fa:	and    eax,0xa01fc31b
  4103ff:	jae    0x410438
  410401:	les    eax,FWORD PTR [edx+0x28a307b5]
  410407:	je     0x4103a8
  410409:	sbb    esi,ebp
  41040b:	mov    edx,0x78d4ff22
  410410:	mov    ch,0x72
  410412:	mov    esi,0x26a373
  410417:	ins    DWORD PTR es:[edi],dx
  410418:	aaa    
  410419:	fnstsw WORD PTR [eax]
  41041b:	mov    al,ds:0x5b0e195
  410420:	pushf  
  410421:	cli    
  410422:	mov    dl,0x60
  410424:	push   ecx
  410425:	inc    ebx
  410426:	cmp    BYTE PTR [eax],dh
  410428:	pusha  
  410429:	and    al,0x8a
  41042b:	in     eax,dx
  41042c:	mov    ah,0x80
  41042e:	jp     0x4103c6
  410430:	(bad)  
  410431:	aaa    
  410432:	bound  edx,QWORD PTR [edx]
  410434:	mov    ds:0x83c19c55,eax
  410439:	cmp    BYTE PTR [eax],0x51
  41043c:	push   0xa14c77ec
  410441:	pop    ebx
  410442:	mov    dh,0xe
  410444:	loopne 0x4103ee
  410446:	and    BYTE PTR [edx-0x62],0xcb
  41044a:	mov    al,ds:0xbc22aaf6
  41044f:	aad    0x98
  410451:	stos   DWORD PTR es:[edi],eax
  410452:	push   cs
  410453:	mov    bl,0xd2
  410455:	les    eax,FWORD PTR [ecx+0x30]
  410458:	call   ebx
  41045a:	ret    
  41045b:	daa    
  41045c:	push   ecx
  41045d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41045e:	out    0xb2,al
  410460:	icebp  
  410461:	inc    esi
  410462:	sub    BYTE PTR [ecx-0x33],dh
  410465:	jb     0x4103ec
  410467:	push   cs
  410468:	xchg   edx,eax
  410469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41046a:	leave  
  41046b:	jle    0x410475
  41046d:	pop    eax
  41046e:	pop    ecx
  41046f:	daa    
  410470:	sbb    dh,BYTE PTR [edi+0x3f]
  410473:	pop    edx
  410474:	and    DWORD PTR [edx+0x68],edx
  410477:	sub    BYTE PTR [edx-0x7f],dl
  41047a:	xchg   BYTE PTR [edi+ebx*8-0x1f],dl
  41047e:	fwait
  41047f:	out    0x82,al
  410481:	das    
  410482:	jb     0x4104fb
  410484:	jecxz  0x41049c
  410486:	dec    ebx
  410487:	(bad)  
  410488:	dec    eax
  410489:	adc    BYTE PTR [ecx+0xd87d908],bl
  41048f:	loop   0x4104c8
  410491:	inc    esp
  410492:	aaa    
  410493:	adc    ecx,esp
  410495:	std    
  410496:	dec    esi
  410497:	imul   ah
  410499:	inc    ebp
  41049a:	add    eax,0xcc704585
  41049f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a0:	das    
  4104a1:	js     0x4104c4
  4104a3:	cmc    
  4104a4:	mov    cl,0x4f
  4104a7:	and    dl,BYTE PTR [ebx+0x2b0bc6ec]
  4104ad:	shl    DWORD PTR [edi+0x2c],1
  4104b0:	push   ds
  4104b1:	test   al,0x50
  4104b3:	popf   
  4104b4:	adc    eax,0xd7f247dd
  4104b9:	adc    edx,DWORD PTR [ecx]
  4104bb:	fcmovne st,st(2)
  4104bd:	cmp    BYTE PTR [edx],dl
  4104bf:	sub    ah,ah
  4104c1:	mov    ds:0x2e32d80a,eax
  4104c6:	xchg   ecx,eax
  4104c7:	retf   
  4104c8:	push   0x7f2c97de
  4104cd:	in     al,0xc5
  4104cf:	add    DWORD PTR [ecx-0x68],edx
  4104d2:	jle    0x4104ca
  4104d4:	outs   dx,DWORD PTR ds:[esi]
  4104d5:	mov    DWORD PTR [eax-0x67],edx
  4104d8:	jae    0x4104df
  4104da:	arpl   WORD PTR [eax],bp
  4104dc:	enter  0x9884,0x22
  4104e0:	icebp  
  4104e1:	(bad)  [edx]
  4104e3:	pop    ds
  4104e4:	jns    0x4104eb
  4104e6:	imul   ecx,DWORD PTR [eax],0xffffffda
  4104e9:	xchg   esp,eax
  4104ea:	push   esp
  4104eb:	cwde   
  4104ec:	xor    al,0x58
  4104ee:	push   es
  4104ef:	xor    dh,BYTE PTR [ebx+0x40af2795]
  4104f5:	mov    ebp,0xd8e1806f
  4104fa:	or     al,0x64
  4104fc:	jl     0x4104d4
  4104fe:	jo     0x41049f
  410500:	mov    cl,0xf5
  410502:	mov    gs,esp
  410504:	mov    cl,0xcb
  410506:	jl     0x410502
  410508:	sub    al,0x4e
  41050a:	sub    ch,BYTE PTR [edx+0x38b4cbeb]
  410510:	(bad)  
  410511:	jecxz  0x4104bd
  410513:	xor    ecx,DWORD PTR [ebx-0x43632c4]
  410519:	das    
  41051a:	push   es
  41051b:	ja     0x410527
  41051d:	xor    al,0x72
  41051f:	adc    BYTE PTR [eax-0xee9d3e6],bl
  410525:	das    
  410526:	adc    edx,DWORD PTR [esi-0x92b987a]
  41052c:	lahf   
  41052d:	inc    ebx
  41052e:	adc    DWORD PTR [ecx],ebx
  410530:	sub    DWORD PTR [ecx+0x75],edx
  410533:	loope  0x410551
  410535:	mov    BYTE PTR [edx],ch
  410537:	sub    al,0xdd
  410539:	aas    
  41053a:	xor    eax,0xa16a7fd5
  41053f:	fstp   QWORD PTR [edi]
  410541:	inc    ebx
  410542:	mov    al,BYTE PTR [ebp-0x3f3a960]
  410548:	jo     0x4104d5
  41054a:	inc    eax
  41054b:	mov    dh,0x1f
  41054d:	std    
  41054e:	loope  0x4105cf
  410550:	das    
  410551:	xchg   edi,eax
  410552:	cdq    
  410553:	call   0xb974586f
  410558:	or     ah,cl
  41055a:	idiv   DWORD PTR [ebx+0x64]
  41055d:	push   eax
  41055e:	repnz imul ebp,DWORD PTR [ecx+ebp*1],0x3bfee5f9
  410566:	cmp    al,0x23
  410568:	adc    ebx,DWORD PTR [eax-0x1b]
  41056b:	div    BYTE PTR [ecx-0x2d]
  41056e:	je     0x41050a
  410570:	xor    eax,DWORD PTR [ebx-0x29]
  410573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410574:	pop    ebp
  410575:	leave  
  410576:	sbb    bl,BYTE PTR [eax-0x32]
  410579:	jno    0x41052f
  41057b:	int    0x1c
  41057d:	outs   dx,BYTE PTR ds:[esi]
  41057e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41057f:	inc    esp
  410580:	pop    ss
  410581:	mov    esp,DWORD PTR [ebx+eiz*8+0x6]
  410585:	aad    0xb7
  410587:	mov    ch,BYTE PTR ds:[esi+0x6cd31a95]
  41058e:	sub    DWORD PTR [edx],0x6
  410591:	(bad)  
  410592:	cmp    dh,ah
  410594:	mov    eax,0x91a394bf
  410599:	hlt    
  41059a:	sub    esi,DWORD PTR ds:0x38968b14
  4105a0:	jbe    0x410612
  4105a2:	dec    edx
  4105a3:	pop    ss
  4105a4:	inc    esp
  4105a5:	sub    dl,cl
  4105a7:	in     eax,0xd6
  4105a9:	ja     0x410567
  4105ab:	jb     0x410564
  4105ad:	(bad)  
  4105af:	into   
  4105b0:	xor    eax,DWORD PTR [ebx]
  4105b2:	and    esi,0x2b
  4105b5:	cli    
  4105b6:	retf   0x992c
  4105b9:	sbb    al,0xd1
  4105bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105bc:	xlat   BYTE PTR ds:[ebx]
  4105bd:	outs   dx,BYTE PTR ds:[esi]
  4105be:	aad    0xab
  4105c0:	xor    eax,0x54cc985a
  4105c5:	scas   al,BYTE PTR es:[edi]
  4105c6:	add    al,0x6c
  4105c8:	jbe    0x41054a
  4105ca:	call   0xc66e2fad
  4105cf:	jbe    0x410603
  4105d1:	add    DWORD PTR [ecx],edx
  4105d3:	inc    ebx
  4105d4:	sub    eax,0xbda121a0
  4105d9:	push   esi
  4105da:	dec    eax
  4105db:	std    
  4105dc:	inc    ecx
  4105dd:	shl    ch,0x1c
  4105e0:	into   
  4105e1:	enter  0x71d3,0x85
  4105e5:	clc    
  4105e6:	shl    esi,1
  4105e8:	imul   DWORD PTR [edi]
  4105ea:	stos   DWORD PTR es:[edi],eax
  4105eb:	mov    esp,0xe976e63c
  4105f0:	push   ecx
  4105f1:	cmp    DWORD PTR [ebx+0x10],esi
  4105f4:	jmp    0xb3930e3f
  4105f9:	cs sub dh,bl
  4105fc:	xchg   esi,eax
  4105fd:	test   BYTE PTR [edx],bh
  4105ff:	es jbe 0x410610
  410602:	cwde   
  410603:	xlat   BYTE PTR ds:[ebx]
  410604:	adc    DWORD PTR [edx+0x20e00a12],0xffffffe0
  41060b:	(bad)  
  41060c:	retf   
  41060d:	jle    0x4105e5
  41060f:	add    BYTE PTR [ebx+eiz*2],al
  410612:	dec    esi
  410613:	sbb    eax,0x60daa502
  410618:	adc    ch,dl
  41061a:	and    ebx,DWORD PTR [esi-0x21]
  41061d:	shl    BYTE PTR [edx],0x9e
  410620:	aaa    
  410621:	xlat   BYTE PTR ds:[ebx]
  410622:	xchg   ebp,eax
  410623:	icebp  
  410624:	xor    dl,al
  410626:	les    edi,FWORD PTR [ecx-0x22]
  410629:	pop    ds
  41062a:	jb     0x4106a4
  41062c:	and    ebx,DWORD PTR [ecx]
  41062e:	adc    DWORD PTR [ebp+edi*8-0x300a1ab2],ebp
  410635:	gs jg  0x41066c
  410638:	in     eax,dx
  410639:	jno    0x410617
  41063b:	test   ecx,esp
  41063d:	dec    esi
  41063e:	repnz mov bl,0x8e
  410641:	stos   DWORD PTR es:[edi],eax
  410642:	popa   
  410643:	imul   ecx,DWORD PTR [eax+0x4b],0xffffffd9
  410647:	imul   DWORD PTR [ebx]
  410649:	daa    
  41064a:	push   ebx
  41064b:	call   0xce94:0x9ed07ae5
  410652:	and    eax,0x2a358e83
  410657:	cwde   
  410658:	retf   
  410659:	lods   eax,DWORD PTR ds:[esi]
  41065a:	xor    BYTE PTR [ebp+0x0],dh
  41065d:	sbb    ebp,edx
  41065f:	push   ds
  410660:	inc    ecx
  410661:	xor    eax,0x648e237d
  410666:	and    DWORD PTR [edi],esi
  410668:	or     al,0x9f
  41066a:	mov    eax,ds:0x98691925
  41066f:	ret    
  410670:	icebp  
  410671:	inc    ebx
  410672:	gs aas 
  410674:	adc    ch,bl
  410676:	add    eax,0x47a326d9
  41067b:	fdiv   QWORD PTR [edi]
  41067d:	push   esp
  41067e:	rcl    ebx,0xb6
  410681:	inc    DWORD PTR [edx]
  410683:	jne    0x410678
  410685:	ins    DWORD PTR es:[edi],dx
  410686:	fs jo  0x41066e
  410689:	arpl   dx,cx
  41068b:	pop    ss
  41068c:	mov    al,0x8f
  41068e:	xchg   edi,eax
  41068f:	or     ah,BYTE PTR [ecx+eiz*4+0x75]
  410693:	rol    DWORD PTR [ecx+esi*4-0x5d],0xd8
  410698:	cmc    
  410699:	adc    al,0xad
  41069b:	mov    dh,0x25
  41069d:	mov    DWORD PTR [ecx+edx*2-0xea06618],ebx
  4106a4:	je     0x410701
  4106a6:	mov    ebp,0x8e3a643b
  4106ab:	and    eax,0xb8c2e3f5
  4106b0:	push   edx
  4106b1:	cli    
  4106b2:	mov    ebp,0x4f8e89ce
  4106b7:	das    
  4106b8:	ror    DWORD PTR [ecx],1
  4106ba:	adc    edi,DWORD PTR [eax]
  4106bc:	jg     0x4106c3
  4106be:	popa   
  4106bf:	or     bh,bl
  4106c1:	jns    0x410704
  4106c3:	xor    esi,ebp
  4106c5:	gs aaa 
  4106c7:	sub    esi,eax
  4106c9:	dec    esp
  4106ca:	(bad)  
  4106cb:	hlt    
  4106cc:	mov    ch,0x3
  4106ce:	out    0x52,al
  4106d0:	ret    0x1836
  4106d3:	mov    ah,0x44
  4106d5:	adc    al,0x88
  4106d7:	dec    eax
  4106d8:	push   edi
  4106d9:	adc    ecx,edi
  4106db:	mov    WORD PTR [ebx],?
  4106dd:	je     0x4106af
  4106df:	mov    DWORD PTR [edx-0x4d],ecx
  4106e2:	xor    DWORD PTR [ecx],ebx
  4106e4:	jae    0x41066a
  4106e6:	loop   0x41074e
  4106e8:	retf   0x4747
  4106eb:	xchg   DWORD PTR [ecx],edi
  4106ed:	cmp    DWORD PTR [esi+0x6b9ff5d1],ebx
  4106f3:	fsub   QWORD PTR [edi-0x17]
  4106f6:	stos   BYTE PTR es:[edi],al
  4106f7:	sub    al,0xdc
  4106f9:	push   es
  4106fa:	pop    ecx
  4106fb:	mov    BYTE PTR [eax+eax*4-0x3439087],al
  410702:	jl     0x41068d
  410704:	(bad)  
  410706:	aad    0xaf
  410708:	enter  0xf676,0xb
  41070c:	loop   0x410701
  41070e:	int3   
  41070f:	lods   al,BYTE PTR ds:[esi]
  410710:	inc    ecx
  410711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410712:	aad    0xd1
  410714:	dec    esp
  410715:	adc    eax,0x2d9f94ca
  41071a:	(bad)  
  41071b:	aad    0xb6
  41071d:	push   esi
  41071e:	jge    0x4106ad
  410720:	call   0x48cfa583
  410725:	sbb    al,0x2a
  410727:	mov    cl,0xe4
  410729:	fwait
  41072a:	test   dl,al
  41072c:	out    0x20,eax
  41072e:	ins    BYTE PTR es:[edi],dx
  41072f:	in     al,dx
  410730:	jmp    0xdc93c16f
  410735:	fnsave [eax-0x4a]
  410738:	mov    esp,0x316a30f8
  41073d:	jmp    0x4106ea
  41073f:	or     al,0x85
  410742:	xor    ch,ch
  410744:	les    esi,FWORD PTR [eax]
  410746:	mov    eax,ds:0x1e80126
  41074b:	push   0x92d9ba99
  410750:	sub    DWORD PTR [ecx+0x7f],esp
  410753:	cli    
  410754:	mov    edi,0xdd68c368
  410759:	cmp    BYTE PTR [edx-0x6bb39b73],ch
  41075f:	ds into 
  410761:	jbe    0x410771
  410763:	imul   edi,esp,0xc
  410766:	sbb    BYTE PTR [ebx],cl
  410768:	pushf  
  410769:	fst    QWORD PTR [ebx]
  41076b:	lea    esp,ds:0xd06ddc9c
  410771:	adc    eax,0xdc7cefab
  410776:	jle    0x410770
  410778:	and    ah,dh
  41077a:	dec    edx
  41077b:	fnstsw WORD PTR [ebx]
  41077d:	pop    ds
  41077e:	xchg   ebp,eax
  41077f:	sub    edx,esp
  410781:	iret   
  410782:	in     al,dx
  410783:	fnstsw ax
  410785:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  410787:	cmp    dh,ah
  410789:	mov    cl,dl
  41078b:	xchg   esi,eax
  41078c:	jg     0x4107a7
  41078e:	jg     0x410782
  410790:	addr16 popa 
  410792:	cmp    esi,DWORD PTR [esi+0x45]
  410795:	mov    esi,DWORD PTR [ecx]
  410797:	arpl   WORD PTR [eax+0x44aa0f6b],cx
  41079d:	rol    DWORD PTR [ebx-0x38],1
  4107a0:	loop   0x41081f
  4107a2:	and    eax,DWORD PTR [ecx+0x68]
  4107a5:	xchg   BYTE PTR [edi],bh
  4107a7:	fdiv   st,st(2)
  4107a9:	mov    cl,0xd6
  4107ab:	and    BYTE PTR [ebx-0x31],cl
  4107ae:	fstp   TBYTE PTR ds:[edx+0x6c]
  4107b2:	xor    eax,0xa9c3e210
  4107b7:	mov    ah,0x74
  4107b9:	imul   edi,DWORD PTR [edx+ebx*2-0x54],0x38
  4107be:	out    0xa3,al
  4107c0:	idiv   DWORD PTR [esi+0x67ab61cc]
  4107c6:	gs fwait
  4107c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c9:	push   edi
  4107ca:	mov    edx,0x1552abc
  4107cf:	dec    ebx
  4107d0:	test   eax,0xd422f05d
  4107d5:	iret   
  4107d6:	loop   0x4107f6
  4107d8:	shl    DWORD PTR [ebx],cl
  4107da:	mov    eax,ds:0xa545bf40
  4107df:	retf   0x6255
  4107e2:	cmp    eax,0x9a7f10ba
  4107e7:	sbb    BYTE PTR [edi-0x4c710f7a],bh
  4107ed:	cmp    BYTE PTR [edi],cl
  4107ef:	push   ebx
  4107f0:	inc    eax
  4107f1:	sub    DWORD PTR [bx+di+0x4350],eax
  4107f6:	push   ebx
  4107f7:	pop    ss
  4107f8:	push   cs
  4107f9:	sahf   
  4107fa:	rol    BYTE PTR [ebx+0x59],1
  4107fd:	pusha  
  4107fe:	xlat   BYTE PTR ds:[ebx]
  4107ff:	idiv   BYTE PTR [eax+ebp*2-0x3f]
  410803:	adc    al,0x59
  410805:	enter  0x4ae7,0x3a
  410809:	repnz xchg ecx,eax
  41080b:	inc    BYTE PTR [esi+0x1d]
  41080e:	mov    bl,BYTE PTR [edx+0x78]
  410811:	jbe    0x4107fb
  410813:	push   esp
  410814:	shl    BYTE PTR [esi],0x2a
  410817:	js     0x4107e9
  410819:	sub    BYTE PTR [ecx-0x6b],al
  41081c:	xchg   ecx,eax
  41081d:	inc    edi
  41081e:	pop    ss
  41081f:	mov    ?,WORD PTR [edx]
  410821:	das    
  410822:	ss adc cl,cl
  410825:	xchg   BYTE PTR [ebx+0x2c21928],bh
  41082b:	out    0xd7,eax
  41082d:	stos   DWORD PTR es:[edi],eax
  41082e:	fnstsw WORD PTR [eax+0x3a]
  410831:	bound  eax,QWORD PTR [ebx-0xa0669ca]
  410837:	push   edx
  410838:	les    ecx,FWORD PTR [edi]
  41083a:	adc    eax,0xbbbfb323
  41083f:	add    esp,DWORD PTR [ecx-0x71]
  410842:	cmove  ecx,DWORD PTR [edx]
  410845:	pop    es
  410846:	das    
  410847:	inc    edi
  410848:	fdivr  st,st(1)
  41084a:	inc    esi
  41084b:	cmp    al,0xa4
  41084d:	xchg   ecx,eax
  41084e:	jo     0x41089d
  410850:	cmc    
  410851:	add    BYTE PTR [esi],al
  410853:	mov    ecx,DWORD PTR [edi]
  410855:	or     eax,DWORD PTR [edx]
  410857:	or     ah,0x84
  41085a:	ret    
  41085b:	push   ecx
  41085c:	ins    DWORD PTR es:[edi],dx
  41085d:	pop    ecx
  41085e:	ins    BYTE PTR es:[edi],dx
  41085f:	xchg   ebx,eax
  410860:	adc    DWORD PTR [edx-0x4bc97641],0x6d
  410867:	(bad)
  41086a:	mov    edx,0x9d8768e
  41086f:	aad    0xc0
  410871:	sub    edx,DWORD PTR [edi-0x24]
  410874:	int3   
  410875:	call   0x72a:0x9a45e765
  41087c:	dec    edi
  41087d:	int3   
  41087e:	push   es
  41087f:	call   0xa26d:0xd149a42f
  410886:	shr    DWORD PTR [esi-0x5dbff92a],0x57
  41088d:	mov    dh,0xfb
  41088f:	je     0x41089d
  410891:	mov    BYTE PTR [ecx+0x1a],0xf0
  410895:	and    BYTE PTR ds:0xb1934606,0xbb
  41089c:	rol    DWORD PTR [edx+0x49],1
  41089f:	push   esp
  4108a0:	dec    edx
  4108a1:	into   
  4108a2:	and    ebx,edi
  4108a4:	pop    edi
  4108a5:	sbb    eax,0xcbca1b9f
  4108aa:	cmp    eax,0x63149d33
  4108af:	outs   dx,DWORD PTR ds:[esi]
  4108b0:	mov    al,0xc6
  4108b2:	jnp    0x4108ae
  4108b4:	bt     DWORD PTR [edx+0x34],edi
  4108b8:	push   eax
  4108b9:	addr16 jo 0x410857
  4108bc:	mov    esp,DWORD PTR [edi+ebp*2+0x13]
  4108c0:	ins    DWORD PTR es:[edi],dx
  4108c1:	(bad)  
  4108c2:	and    DWORD PTR [ecx+0x3c],edx
  4108c5:	pop    esi
  4108c6:	rcr    edx,cl
  4108c8:	test   BYTE PTR [ecx],ah
  4108ca:	or     ebp,DWORD PTR [edx-0x71ab7467]
  4108d0:	mov    edi,0x1b797539
  4108d5:	or     edi,DWORD PTR [eax+0x2e9f4645]
  4108db:	dec    ebx
  4108dc:	fcomp  QWORD PTR ds:0x555a8ab9
  4108e2:	out    0xbc,eax
  4108e4:	test   BYTE PTR [ebx],al
  4108e6:	test   BYTE PTR [esi+0x6f163242],ah
  4108ec:	(bad)  
  4108ed:	ja     0x410870
  4108ef:	mov    ebp,0x6a13d1ff
  4108f4:	jl     0x410953
  4108f6:	scas   eax,DWORD PTR es:[edi]
  4108f7:	stos   DWORD PTR es:[edi],eax
  4108f8:	or     BYTE PTR [ecx-0x369b0f3b],0x6f
  4108ff:	das    
  410900:	jp     0x4108b0
  410902:	and    al,0x7
  410904:	aas    
  410905:	stc    
  410906:	jnp    0x410894
  410908:	lods   al,BYTE PTR ds:[esi]
  410909:	(bad)  [esi]
  41090b:	pop    ds
  41090c:	mov    ebx,DWORD PTR [edx+0x38]
  41090f:	int3   
  410910:	icebp  
  410911:	mov    eax,ds:0x9d7860f2
  410916:	out    dx,al
  410917:	sbb    bl,BYTE PTR [edi+0xfdd3be7]
  41091d:	(bad)  
  41091f:	or     ah,BYTE PTR [ebp-0x80]
  410922:	dec    eax
  410923:	mov    dl,0x83
  410925:	jmp    0xfac:0x69c94550
  41092c:	ret    
  41092d:	jl     0x410948
  41092f:	test   al,0x98
  410931:	dec    ebx
  410932:	fmul   st,st(0)
  410934:	xlat   BYTE PTR ds:[ebx]
  410935:	lds    ebp,FWORD PTR [ecx]
  410937:	jb     0x4109a6
  410939:	das    
  41093a:	gs js  0x410904
  41093d:	ins    BYTE PTR es:[edi],dx
  41093e:	fcom   DWORD PTR [ebx+0x2b]
  410941:	pop    es
  410942:	jns    0x4109ac
  410944:	inc    edi
  410945:	push   es
  410946:	mov    ds:0x961ad44d,al
  41094b:	xchg   ebx,eax
  41094c:	push   cs
  41094d:	and    BYTE PTR [esi-0x1],dh
  410950:	fist   WORD PTR ds:0xbb1f650d
  410956:	ror    dh,0x92
  410959:	adc    al,0x9e
  41095b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41095c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41095d:	inc    edx
  41095e:	xor    al,0xb6
  410960:	popa   
  410961:	push   eax
  410962:	push   es
  410963:	mov    ebx,0x5dbb631f
  410968:	mov    al,dh
  41096a:	test   eax,0xcaea4538
  41096f:	pop    edx
  410970:	sub    bh,BYTE PTR [edx+0x5]
  410973:	ds push es
  410975:	call   0x23abf366
  41097a:	cs cmp eax,0x6572fd9c
  410980:	(bad)  
  410981:	jmp    FWORD PTR [esi]
  410983:	push   ss
  410984:	add    BYTE PTR [ebx+0x7568739f],dl
  41098a:	fcomp  QWORD PTR [edx+0x148ac627]
  410990:	arpl   WORD PTR [ecx],sp
  410992:	xchg   al,dh
  410994:	hlt    
  410995:	dec    esi
  410996:	xchg   ecx,eax
  410997:	gs sbb eax,0x135b868f
  41099d:	sbb    DWORD PTR [esp+ecx*4],edi
  4109a0:	mov    ecx,0x39195604
  4109a5:	ds hlt 
  4109a7:	mov    dl,0xf0
  4109a9:	popf   
  4109aa:	sbb    eax,0x85392e43
  4109af:	jb     0x410954
  4109b1:	(bad)  
  4109b2:	retf   
  4109b3:	and    BYTE PTR [edx],bh
  4109b5:	xchg   ebx,eax
  4109b6:	dec    edi
  4109b7:	sub    ch,dh
  4109b9:	arpl   WORD PTR [edi+0x40],si
  4109bc:	repz pusha 
  4109be:	(bad)  
  4109bf:	scas   eax,DWORD PTR es:[edi]
  4109c0:	outs   dx,BYTE PTR ds:[esi]
  4109c1:	dec    edx
  4109c2:	test   eax,0x1f63401f
  4109c7:	sub    BYTE PTR [edi-0xddd6bd],0xa7
  4109ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109cf:	shr    BYTE PTR [edx-0x55],cl
  4109d2:	jo     0x410a32
  4109d4:	aaa    
  4109d5:	mov    ch,BYTE PTR [eax-0x80212d5]
  4109db:	adc    DWORD PTR [ecx],ebp
  4109dd:	call   0x20c4:0xa4bc831c
  4109e4:	dec    ebx
  4109e5:	ret    
  4109e6:	sbb    BYTE PTR [eax+0x416df5ac],ah
  4109ec:	rcl    DWORD PTR [ecx+0x24ff1b46],0xe9
  4109f3:	mov    esi,0x5baf3b2
  4109f8:	(bad)
  4109fc:	jmp    0x410a4f
  4109fe:	bnd je 0x4109ad
  410a01:	in     al,0x40
  410a03:	sub    al,0x7e
  410a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a06:	mov    esp,0x69b8ce36
  410a0b:	and    al,0x75
  410a0d:	cwde   
  410a0e:	out    0xf8,eax
  410a10:	data16 cli 
  410a12:	push   ecx
  410a13:	fwait
  410a14:	xlat   BYTE PTR cs:[ebx]
  410a16:	stos   BYTE PTR es:[edi],al
  410a17:	(bad)  
  410a18:	dec    dh
  410a1a:	push   edx
  410a1b:	xor    DWORD PTR [ebx-0x59],ebx
  410a1e:	push   ss
  410a1f:	adc    al,0xea
  410a21:	xor    ah,bh
  410a23:	pop    esi
  410a24:	pop    edi
  410a25:	test   eax,0xd2fdb53a
  410a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a2b:	lds    ebx,FWORD PTR [eax]
  410a2d:	sar    BYTE PTR [eax+edi*8],0xc8
  410a31:	test   eax,0x224a5cf5
  410a36:	xchg   esp,eax
  410a37:	rcl    BYTE PTR ds:0x6dd123f5,1
  410a3d:	inc    ecx
  410a3e:	mov    al,gs:0x2edeb93a
  410a44:	and    eax,0x7c23001
  410a49:	jne    0x4109e3
  410a4b:	bound  esi,QWORD PTR [edx+0xe]
  410a4e:	in     eax,dx
  410a4f:	(bad)  
  410a50:	aas    
  410a51:	push   ds
  410a52:	aad    0x47
  410a54:	xor    DWORD PTR [ecx+0xd],esi
  410a57:	sbb    BYTE PTR [ebx-0x57],0xe7
  410a5b:	sti    
  410a5c:	ins    DWORD PTR es:[edi],dx
  410a5d:	repz fbstp TBYTE PTR [ecx+0x1a]
  410a61:	or     BYTE PTR fs:[ebx+0x550df4e4],0x8a
  410a69:	adc    BYTE PTR [edi+0x5c],cl
  410a6c:	jns    0x410a11
  410a6e:	test   eax,0x39af8624
  410a73:	sbb    al,0xa4
  410a75:	inc    esp
  410a76:	repz pop es
  410a78:	cmp    cl,BYTE PTR [edi]
  410a7a:	pushf  
  410a7b:	in     eax,0x7c
  410a7d:	adc    BYTE PTR [ebp-0x25feb98c],al
  410a83:	dec    ebx
  410a84:	sbb    ah,BYTE PTR [ebp-0x47]
  410a87:	bound  edx,QWORD PTR [esi+0x50]
  410a8a:	pop    ebx
  410a8b:	dec    ebp
  410a8c:	push   cs
  410a8d:	jnp    0x410a54
  410a8f:	push   ds
  410a90:	fild   QWORD PTR fs:[ecx+0x69c21ab1]
  410a97:	daa    
  410a98:	in     al,0x8b
  410a9a:	xor    esp,eax
  410a9c:	xchg   DWORD PTR [ebx+0x4bf72f9f],edx
  410aa2:	ret    
  410aa3:	cmp    al,0xc7
  410aa5:	aad    0x76
  410aa7:	lods   eax,DWORD PTR ds:[esi]
  410aa8:	cs xor bl,bh
  410aab:	xor    dl,bl
  410aad:	mov    edx,DWORD PTR [ebx-0x3b]
  410ab0:	shl    DWORD PTR [eax],cl
  410ab2:	mov    es,esi
  410ab4:	(bad)  
  410ab5:	jbe    0x410a85
  410ab7:	inc    esp
  410ab8:	imul   ecx,esp,0xffffffc9
  410abb:	jl     0x410a7d
  410abd:	xor    al,0xee
  410abf:	jmp    0x5bf1:0x126db315
  410ac6:	out    0xa2,al
  410ac8:	outs   dx,BYTE PTR ds:[esi]
  410ac9:	in     eax,dx
  410aca:	retf   0x3dfc
  410acd:	mov    dh,0xa
  410acf:	push   ds
  410ad0:	inc    ebx
  410ad1:	push   eax
  410ad2:	outs   dx,DWORD PTR ds:[esi]
  410ad3:	mov    ecx,0x86ac2248
  410ad8:	fist   WORD PTR [edx]
  410ada:	xchg   edi,eax
  410adb:	jno    0x410aad
  410add:	mov    al,0x24
  410adf:	jnp    0x410b28
  410ae1:	les    eax,FWORD PTR [esi]
  410ae3:	int    0xf7
  410ae5:	adc    DWORD PTR [edi],0xffffffe9
  410ae8:	(bad)  
  410ae9:	mov    edi,0xfade9de1
  410aee:	fmul   st(1),st
  410af0:	stos   DWORD PTR es:[edi],eax
  410af1:	cwde   
  410af2:	nop
  410af3:	pop    ecx
  410af4:	pop    ecx
  410af5:	stc    
  410af6:	je     0x410a93
  410af8:	jo     0x410af6
  410afa:	shl    edi,0xd8
  410afd:	rcr    DWORD PTR [si-0x35],cl
  410b01:	lods   al,BYTE PTR ds:[esi]
  410b02:	and    eax,0x7a251246
  410b07:	dec    esi
  410b08:	mov    dh,0x9e
  410b0a:	mov    dl,0xa
  410b0c:	inc    edi
  410b0d:	das    
  410b0e:	xor    esi,DWORD PTR [esi+0x462b169]
  410b14:	sbb    ecx,DWORD PTR [edi-0x2]
  410b17:	dec    ebx
  410b18:	rol    DWORD PTR [edx+0x15],cl
  410b1b:	mov    dh,0x8
  410b1d:	enter  0x1bc8,0x72
  410b21:	mov    edx,DWORD PTR [esp+eiz*4+0x1fabc0ad]
  410b28:	sub    dl,BYTE PTR [ecx-0x26af48c2]
  410b2e:	jb     0x410ad5
  410b30:	daa    
  410b31:	(bad)  
  410b33:	xlat   BYTE PTR ds:[ebx]
  410b34:	push   cs
  410b35:	jo     0x410b80
  410b37:	xchg   edi,eax
  410b38:	cdq    
  410b39:	lock repnz nop
  410b3c:	xchg   ebp,eax
  410b3d:	or     al,al
  410b3f:	add    BYTE PTR [edx+eiz*2-0x5709bb61],0x9d
  410b47:	xor    al,0x69
  410b49:	adc    ebp,DWORD PTR [eax]
  410b4b:	push   0xff49da
  410b50:	fstp   TBYTE PTR [edi]
  410b52:	and    edi,DWORD PTR [esi+0xada7df0]
  410b58:	test   BYTE PTR [eax+0x48f98c5d],dh
  410b5e:	or     al,0x44
  410b60:	inc    edx
  410b61:	retf   0x9e12
  410b64:	add    dl,ah
  410b66:	xor    BYTE PTR [eax+esi*4-0x27],0x41
  410b6b:	jle    0x410b92
  410b6d:	push   ebx
  410b6e:	rol    DWORD PTR [ebx+ecx*2+0x6537601],1
  410b75:	sub    DWORD PTR [edx],ebp
  410b77:	push   esi
  410b78:	jmp    0x23a6:0x53a161ac
  410b7f:	mov    al,0x84
  410b81:	das    
  410b82:	rcl    BYTE PTR [edx-0x671b0ffb],0x29
  410b89:	mov    ds:0x1ec5ba0d,al
  410b8e:	(bad)  
  410b8f:	sub    DWORD PTR [eax],ebx
  410b91:	(bad)  
  410b92:	aad    0xd2
  410b94:	and    al,0x93
  410b96:	shr    edx,cl
  410b98:	adc    edi,esi
  410b9a:	addr16 push es
  410b9c:	mov    al,0xb8
  410b9e:	popa   
  410b9f:	dec    esp
  410ba0:	out    dx,al
  410ba1:	je     0x410c15
  410ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba4:	ror    DWORD PTR es:[ebx],cl
  410ba7:	jns    0x410b82
  410ba9:	mov    ds:0x470e1cae,eax
  410bae:	ja     0x410b39
  410bb0:	mov    ds:0x6897d297,al
  410bb5:	xchg   DWORD PTR [ebx],edx
  410bb7:	sub    bh,BYTE PTR [ecx+ebx*4+0x40]
  410bbb:	mov    al,0xa3
  410bbd:	inc    ebp
  410bbe:	dec    edx
  410bbf:	xlat   BYTE PTR ds:[ebx]
  410bc0:	xchg   esp,eax
  410bc1:	(bad)  
  410bc2:	or     eax,DWORD PTR [ecx+0x5eb58dfd]
  410bc8:	(bad)  
  410bca:	cmc    
  410bcb:	pop    ebp
  410bcc:	and    ch,BYTE PTR [esi]
  410bce:	fidiv  DWORD PTR [esp+ebx*1+0x1a911352]
  410bd5:	popa   
  410bd6:	mov    bh,0x7d
  410bd8:	aam    0xe3
  410bda:	aaa    
  410bdb:	outs   dx,DWORD PTR ds:[esi]
  410bdc:	add    bh,BYTE PTR [ecx+0x73761131]
  410be2:	jnp    0x410ba8
  410be4:	fstp   DWORD PTR [edx]
  410be6:	inc    esi
  410be7:	sbb    DWORD PTR [edx+0x7d71fa1b],esp
  410bed:	rol    DWORD PTR [edi-0x6],cl
  410bf0:	stos   DWORD PTR es:[edi],eax
  410bf1:	scas   al,BYTE PTR es:[edi]
  410bf2:	dec    ebp
  410bf3:	inc    ecx
  410bf4:	loop   0x410be6
  410bf6:	sbb    esp,ecx
  410bf8:	ret    0xfa05
  410bfb:	pop    esp
  410bfc:	push   0xffffffbf
  410bfe:	mov    ecx,0x9574c9c8
  410c03:	and    edi,edi
  410c05:	mov    cl,0xcf
  410c07:	cmp    eax,DWORD PTR es:[edi-0x27]
  410c0b:	inc    eax
  410c0c:	rol    DWORD PTR [esi+ebx*1+0x31f10b53],cl
  410c13:	mov    DWORD PTR [edx+eiz*1],eax
  410c16:	cmp    al,0x48
  410c18:	retf   0x99a3
  410c1b:	cmc    
  410c1c:	or     al,0xd5
  410c1e:	pop    esp
  410c1f:	pop    es
  410c20:	fisubr WORD PTR [eax]
  410c22:	pop    eax
  410c23:	ins    BYTE PTR es:[edi],dx
  410c24:	jbe    0x410c26
  410c26:	nop
  410c27:	imul   ebp,esp,0xffffffb7
  410c2a:	(bad)  
  410c2c:	mov    eax,ds:0xbeac1814
  410c31:	adc    eax,0xb0cb8318
  410c36:	aaa    
  410c37:	inc    ecx
  410c38:	cs nop
  410c3a:	fistp  QWORD PTR [ebx]
  410c3c:	mov    dl,0x2e
  410c3e:	fs or  al,0x5e
  410c41:	pop    ebx
  410c42:	fdivr  DWORD PTR [ecx+edx*4-0x45]
  410c46:	push   cs
  410c47:	lods   al,BYTE PTR ds:[esi]
  410c48:	and    edx,DWORD PTR [esi]
  410c4a:	fcmovne st,st(0)
  410c4c:	mov    dh,0xb7
  410c4e:	pop    ss
  410c4f:	dec    ecx
  410c50:	fdiv   DWORD PTR [eax+0x4073986d]
  410c56:	adc    edi,ecx
  410c58:	and    eax,0x26e13d79
  410c5d:	and    bh,0x9d
  410c60:	into   
  410c61:	jne    0x410cc9
  410c63:	sub    esp,DWORD PTR [ecx]
  410c65:	jae    0x410c6a
  410c67:	pop    edx
  410c68:	inc    esp
  410c69:	mov    DWORD PTR [ebx],esp
  410c6b:	mov    edi,0xcfa39217
  410c70:	sbb    ah,BYTE PTR [eax+0x2c]
  410c73:	jle    0x410c93
  410c75:	ins    DWORD PTR es:[edi],dx
  410c76:	in     eax,0xd6
  410c78:	cmp    eax,0x7a3b140d
  410c7d:	sbb    BYTE PTR [eax-0x4d],0xaa
  410c81:	cmc    
  410c82:	xor    ah,BYTE PTR [edi-0x78defb41]
  410c88:	pop    edi
  410c89:	lds    ebp,FWORD PTR [ecx+0x311072f]
  410c8f:	and    eax,0xffffffa1
  410c92:	add    ebx,esi
  410c94:	outs   dx,DWORD PTR ds:[esi]
  410c95:	and    BYTE PTR [ebx-0x3004f52d],bh
  410c9b:	js     0x410cc3
  410c9d:	(bad)
  410ca0:	jno    0x410c53
  410ca2:	mov    al,0xb
  410ca4:	jne    0x410cdc
  410ca6:	dec    esp
  410ca7:	inc    ebp
  410ca8:	or     eax,esi
  410caa:	push   es
  410cab:	cmp    esp,DWORD PTR [eax-0x33]
  410cae:	out    0x73,eax
  410cb0:	inc    edx
  410cb1:	stos   BYTE PTR es:[edi],al
  410cb2:	mov    bh,0xb0
  410cb4:	fidivr WORD PTR [eax-0x4bf8439e]
  410cba:	pop    es
  410cbb:	inc    edi
  410cbc:	ja     0x410c80
  410cbe:	ss push ecx
  410cc0:	pop    eax
  410cc1:	mov    ds:0x3fec6fe0,eax
  410cc6:	sbb    ch,dl
  410cc8:	xchg   edx,eax
  410cc9:	adc    ebx,edx
  410ccb:	jo     0x410c98
  410ccd:	mov    dl,0x31
  410ccf:	and    al,0x9
  410cd1:	loope  0x410d2c
  410cd3:	cs in  al,dx
  410cd5:	push   esp
  410cd6:	add    al,0x36
  410cd8:	inc    esi
  410cd9:	sbb    DWORD PTR [eax-0x657539fe],ebp
  410cdf:	jle    0x410ca1
  410ce1:	jns    0x410cb2
  410ce3:	xlat   BYTE PTR ds:[ebx]
  410ce4:	ret    0xd7d
  410ce7:	dec    esp
  410ce8:	or     BYTE PTR [edx-0x34d35208],dl
  410cee:	cmp    al,0x61
  410cf0:	lds    esi,FWORD PTR [eax]
  410cf2:	pop    ecx
  410cf3:	mov    bl,BYTE PTR ds:0x84c621f3
  410cf9:	cs or  al,0xa8
  410cfc:	xchg   ebp,eax
  410cfd:	xchg   esp,eax
  410cfe:	cmp    eax,0x2027cd2e
  410d03:	test   DWORD PTR [eax],edx
  410d05:	mov    ds:0xff462a91,al
  410d0a:	fdiv   QWORD PTR [eax-0x2c7c7d6d]
  410d10:	xchg   esi,eax
  410d11:	(bad)  
  410d12:	into   
  410d13:	das    
  410d14:	push   edx
  410d15:	pop    ds
  410d16:	adc    eax,0xd81b2816
  410d1b:	sbb    ebx,DWORD PTR [esi+0x4ef7691e]
  410d21:	aad    0xd6
  410d23:	pop    ss
  410d24:	sub    cl,ch
  410d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d27:	and    edi,edx
  410d29:	and    ebp,0xffffffa5
  410d2c:	or     dh,BYTE PTR ds:0x3e4ca39c
  410d32:	mov    al,ds:0x4e2e61a3
  410d37:	je     0x410ce4
  410d39:	inc    ecx
  410d3a:	retf   0xd1f
  410d3d:	mov    WORD PTR [ecx+edi*1],fs
  410d40:	inc    edi
  410d41:	and    BYTE PTR [ebx-0xa971eb4],bl
  410d47:	loopne 0x410cca
  410d49:	cmp    al,0xf7
  410d4b:	push   eax
  410d4c:	inc    edi
  410d4d:	aad    0x6a
  410d4f:	push   ebx
  410d50:	pop    esp
  410d51:	sti    
  410d52:	add    eax,DWORD PTR [esi+0x1b6aed8]
  410d58:	dec    ecx
  410d59:	mov    al,0xe7
  410d5b:	clc    
  410d5c:	mov    edx,0x695439d5
  410d61:	adc    bh,dh
  410d63:	and    ecx,DWORD PTR [ecx+0x242bb09d]
  410d69:	in     eax,dx
  410d6a:	jl     0x410ddf
  410d6c:	dec    ebx
  410d6d:	inc    ebx
  410d6e:	jmp    FWORD PTR [edi-0x6bc9f47e]
  410d74:	js     0x410cf6
  410d76:	or     esi,ebp
  410d78:	xchg   esi,eax
  410d79:	mov    ah,0x66
  410d7b:	and    BYTE PTR ds:0x73322e47,bl
  410d81:	pop    ss
  410d82:	bound  esp,QWORD PTR [eax+0x1e]
  410d85:	inc    esp
  410d86:	mov    bl,0x82
  410d88:	adc    eax,0xa6cdfb95
  410d8d:	out    0x94,al
  410d8f:	sub    eax,0xe6b5591b
  410d94:	cmp    DWORD PTR [edi],ebx
  410d96:	in     al,0x7c
  410d98:	jbe    0x410d66
  410d9a:	ficom  DWORD PTR [edx+0x2f]
  410d9d:	out    0x36,al
  410d9f:	inc    ebx
  410da0:	jg     0x410e14
  410da2:	into   
  410da3:	dec    ecx
  410da4:	or     esi,ecx
  410da6:	nop
  410da7:	arpl   dx,di
  410da9:	lahf   
  410daa:	add    eax,0x5bb8b7b5
  410daf:	sahf   
  410db0:	out    dx,al
  410db1:	aaa    
  410db2:	sbb    DWORD PTR [eax-0x7e],ebp
  410db5:	inc    ecx
  410db6:	mov    ecx,0x5aaece73
  410dbb:	sahf   
  410dbc:	inc    edx
  410dbd:	dec    ecx
  410dbe:	jmp    0x410ddd
  410dc0:	mov    dh,0xc8
  410dc2:	int3   
  410dc3:	iret   
  410dc4:	arpl   WORD PTR [edx+0x4d],dx
  410dc7:	mov    ecx,0xa0d9a7c3
  410dcc:	xlat   BYTE PTR ds:[ebx]
  410dcd:	int3   
  410dce:	ffreep st(2)
  410dd1:	cmp    al,0xb9
  410dd3:	dec    ebx
  410dd4:	sar    BYTE PTR [edx-0x39fd0741],cl
  410dda:	out    0x5a,al
  410ddc:	sbb    DWORD PTR [edi],0xa05e80e5
  410de2:	adc    DWORD PTR [ebx-0x3edabf4c],ecx
  410de8:	mov    dh,ch
  410dea:	sbb    al,0xb7
  410dec:	pop    edi
  410ded:	(bad)  
  410dee:	dec    ebx
  410df0:	scas   al,BYTE PTR es:[edi]
  410df1:	neg    DWORD PTR [eax]
  410df3:	in     al,dx
  410df4:	mov    edx,0xf88c1839
  410df9:	in     al,0xfc
  410dfb:	cmp    DWORD PTR [ebx],eax
  410dfd:	cmp    DWORD PTR [ebp-0x2e],ecx
  410e00:	in     eax,dx
  410e01:	std    
  410e02:	pop    ebp
  410e03:	xor    al,BYTE PTR [eax+0x66]
  410e06:	xor    ah,dh
  410e08:	xor    DWORD PTR [edi],ebp
  410e0a:	push   0x8caa22c9
  410e0f:	mov    bl,0xec
  410e11:	shl    ch,1
  410e13:	xchg   edx,eax
  410e14:	test   al,0x1a
  410e16:	jl     0x410dc9
  410e18:	outs   dx,BYTE PTR ds:[esi]
  410e19:	and    edx,DWORD PTR [esi+ecx*8]
  410e1c:	xchg   ebx,eax
  410e1d:	xchg   esi,eax
  410e1e:	jl     0x410e1b
  410e20:	int3   
  410e21:	ss push ebp
  410e23:	cmp    cl,ah
  410e25:	jno    0x410e65
  410e27:	mov    dl,0x69
  410e29:	adc    eax,0x6033faf0
  410e2e:	sub    eax,0xab558b20
  410e33:	or     esi,DWORD PTR [ecx-0x67]
  410e36:	les    ebx,FWORD PTR [edx+0x10]
  410e39:	std    
  410e3a:	mov    ds:0x7eed7cde,eax
  410e3f:	jge    0x410e4e
  410e41:	mov    ch,0x9e
  410e43:	jmp    FWORD PTR [ebx+0x7a065b75]
  410e49:	sti    
  410e4a:	xor    eax,0x9ae9ddab
  410e4f:	stos   DWORD PTR es:[edi],eax
  410e50:	xor    BYTE PTR [edi+0x38],0x7
  410e54:	sbb    eax,0x2f7c5f5f
  410e59:	(bad)  
  410e5a:	xchg   edi,eax
  410e5b:	inc    ebp
  410e5c:	xchg   DWORD PTR [ecx],eax
  410e5e:	dec    edi
  410e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e60:	pop    ecx
  410e61:	jno    0x410e71
  410e63:	inc    ebx
  410e64:	rcr    DWORD PTR [ebp-0x14],1
  410e67:	pop    ecx
  410e68:	xchg   esi,eax
  410e69:	sbb    edi,DWORD PTR [esi-0x4724b017]
  410e6f:	imul   esp,DWORD PTR [ebx-0x3d],0x9238eb81
  410e76:	inc    edx
  410e77:	mov    al,0x70
  410e79:	push   0xfffffff9
  410e7b:	and    eax,esi
  410e7d:	imul   BYTE PTR [ebx]
  410e7f:	rol    dh,1
  410e81:	xchg   ebx,eax
  410e82:	pop    es
  410e83:	call   0x5633:0xed0d890f
  410e8a:	mov    ebp,DWORD PTR [ecx+0x4a]
  410e8d:	aam    0x1d
  410e8f:	dec    esp
  410e90:	push   0x78fa1ea1
  410e95:	test   DWORD PTR [esi+0x7c],0x488ac0f5
  410e9c:	repnz and eax,0xdb985005
  410ea2:	inc    dx
  410ea4:	call   0x2659:0x1dfe5c08
  410eab:	fiadd  DWORD PTR [eiz*1-0x45bbb858]
  410eb2:	adc    dh,BYTE PTR [edi-0x42a971ef]
  410eb8:	les    ecx,FWORD PTR [esi+0x5e]
  410ebb:	inc    edi
  410ebc:	xchg   ebp,eax
  410ebd:	jg     0x410e71
  410ebf:	push   ecx
  410ec0:	xchg   esi,eax
  410ec1:	gs hlt 
  410ec3:	inc    ecx
  410ec4:	xchg   edi,eax
  410ec5:	lods   al,BYTE PTR ds:[esi]
  410ec6:	enter  0xcceb,0xe8
  410eca:	mov    eax,0xd2496059
  410ecf:	hlt    
  410ed0:	jo     0x410ec3
  410ed2:	or     al,0x1e
  410ed4:	stc    
  410ed5:	in     al,0x33
  410ed7:	cld    
  410ed8:	out    0x5f,al
  410eda:	call   0x98317aff
  410edf:	mov    edx,0xdb8b7d77
  410ee4:	dec    eax
  410ee5:	imul   edx,DWORD PTR [eax-0x692b177],0x7691821
  410eef:	stc    
  410ef0:	jmp    0x1ee3567
  410ef5:	mov    edx,esi
  410ef7:	imul   edi,DWORD PTR [eax+0x5fbaac48],0x8
  410efe:	lock and al,0x4
  410f01:	or     DWORD PTR [ebx+0x66],ebx
  410f04:	or     DWORD PTR ss:[ebx+eax*2-0x80],eax
  410f09:	lea    ebx,[ecx+0x20]
  410f0c:	xchg   esp,eax
  410f0d:	mov    eax,ds:0x5d8d625f
  410f12:	push   ds
  410f13:	add    al,0x51
  410f15:	mov    al,ds:0xcf2797f6
  410f1a:	daa    
  410f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f1c:	fidivr DWORD PTR [ebx-0x62d95266]
  410f22:	push   0xffffffe3
  410f24:	aam    0x78
  410f26:	jb     0x410ee7
  410f28:	sub    DWORD PTR [ebx-0x23],edx
  410f2b:	rol    cl,0x5d
  410f2e:	lock cmp eax,0xbd8e5124
  410f34:	imul   ebp,DWORD PTR [ebx-0x3d],0xcb1407ad
  410f3b:	xor    al,0x43
  410f3d:	mov    ah,0xd1
  410f3f:	add    dl,BYTE PTR [edx]
  410f41:	retf   
  410f42:	sub    al,0xdd
  410f44:	adc    ah,BYTE PTR [eax-0x655b1c84]
  410f4a:	test   BYTE PTR [ebx-0x48],cl
  410f4d:	stos   DWORD PTR es:[edi],eax
  410f4e:	fisubr WORD PTR [edx-0x4c229308]
  410f54:	je     0x410ee4
  410f56:	mov    WORD PTR [esi+0x6c610594],ss
  410f5c:	outs   dx,BYTE PTR ds:[esi]
  410f5d:	fistp  WORD PTR [ecx+0x56]
  410f60:	jmp    0xf6fa:0xd1040d4a
  410f67:	sbb    esp,DWORD PTR [edx-0x2e]
  410f6a:	xchg   esp,eax
  410f6b:	mov    bh,0x47
  410f6d:	pop    ss
  410f6e:	xor    BYTE PTR [esi-0x71],bh
  410f71:	cmp    al,bh
  410f73:	add    dl,BYTE PTR [esi-0x450b930b]
  410f79:	inc    esi
  410f7a:	xchg   ecx,eax
  410f7b:	adc    eax,ebx
  410f7d:	imul   esp,esp,0xffffff9f
  410f80:	sub    DWORD PTR [esi+0x9635278],0x692f6cc8
  410f8a:	int    0x61
  410f8c:	pop    ds
  410f8d:	xor    al,0xd5
  410f8f:	pop    ecx
  410f90:	xchg   ebx,ebx
  410f92:	and    DWORD PTR [ecx+eiz*8+0x330d88f2],edi
  410f99:	xor    BYTE PTR [eax+ecx*1-0x72],cl
  410f9d:	aas    
  410f9e:	gs enter 0x5ed7,0x91
  410fa3:	mov    ebx,ecx
  410fa5:	minps  xmm7,XMMWORD PTR [ecx]
  410fa8:	jno    0x410fe5
  410faa:	mov    esi,?
  410fac:	and    ebx,0xffffff9e
  410faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fb0:	or     cl,cl
  410fb2:	sti    
  410fb3:	shl    BYTE PTR [ebx],cl
  410fb5:	aas    
  410fb6:	in     eax,dx
  410fb7:	fldcw  WORD PTR ds:0xe26ae528
  410fbd:	pop    edi
  410fbe:	sahf   
  410fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fc1:	mov    DWORD PTR [eax+0x558f6015],0xfbaa4819
  410fcb:	je     0x410fd8
  410fcd:	jmp    0x729:0x6d52d0ed
  410fd4:	retf   
  410fd5:	cmp    esi,ebp
  410fd7:	or     edi,esi
  410fd9:	fs sub eax,0x1c894f94
  410fdf:	jb     0x410f7d
  410fe1:	mov    edx,0xb2ec8283
  410fe6:	mov    edx,0xf307fef9
  410feb:	arpl   cx,bx
  410fed:	lods   al,BYTE PTR ds:[esi]
  410fee:	xchg   edx,eax
  410fef:	cld    
  410ff0:	(bad)  
  410ff1:	pop    ecx
  410ff2:	mov    ds:0x7c87746d,eax
  410ff7:	test   BYTE PTR [ebx+edi*4-0x3a],ch
  410ffb:	and    BYTE PTR ds:0x9beb795b,bl
  411001:	jl     0x411069
  411003:	loop   0x411013
  411005:	jns    0x410f93
  411007:	push   ebx
  411008:	fwait
  411009:	adc    ebx,DWORD PTR [edi+0x6eaa4c86]
  41100f:	adc    DWORD PTR [ecx-0x502aebda],edx
  411015:	ret    
  411016:	jo     0x411096
  411018:	mov    DWORD PTR [edi-0x6f],0x7a6bfa7d
  41101f:	addr16 sahf 
  411021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411022:	loop   0x411008
  411024:	dec    BYTE PTR [ebx]
  411026:	ficomp DWORD PTR [edi]
  411028:	jg     0x4110a6
  41102a:	and    bl,BYTE PTR [ebx+eax*1+0x3b]
  41102e:	inc    ebx
  41102f:	dec    esp
  411030:	out    0xbf,al
  411032:	stos   DWORD PTR es:[edi],eax
  411033:	retf   
  411034:	nop
  411035:	imul   ebp,DWORD PTR [ebx],0xffffffa5
  411038:	cmp    eax,0xb34078e9
  41103d:	bound  ebx,QWORD PTR [ebp-0x725926e8]
  411043:	mov    bh,0x19
  411045:	push   0x8d8501c
  41104a:	imul   ebx,DWORD PTR [eax-0x6],0x4c
  41104e:	stos   DWORD PTR es:[edi],eax
  41104f:	jecxz  0x411047
  411051:	ins    BYTE PTR es:[edi],dx
  411052:	sub    esi,ecx
  411054:	aam    0x26
  411056:	out    dx,eax
  411057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411058:	scas   eax,DWORD PTR es:[edi]
  411059:	jmp    0x98d8264c
  41105e:	pusha  
  41105f:	mov    bl,0x8
  411061:	xchg   edx,eax
  411062:	mov    eax,ds:0xa96e1985
  411067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411068:	nop
  411069:	das    
  41106a:	push   ss
  41106b:	fcmovnb st,st(7)
  41106d:	mov    BYTE PTR [edi+0x58],0x56
  411071:	shl    BYTE PTR [eax],cl
  411073:	dec    edi
  411074:	sub    esi,DWORD PTR [ebx+0x30140fa6]
  41107a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41107c:	pop    es
  41107d:	push   edi
  41107e:	out    dx,al
  41107f:	out    0x66,al
  411081:	iret   
  411082:	pop    edx
  411083:	and    BYTE PTR [edi+edi*8],dl
  411086:	ja     0x411081
  411088:	mov    ecx,0x622544d
  41108d:	loope  0x411020
  41108f:	sbb    ah,dl
  411091:	mov    esp,0x7137a54d
  411096:	sub    eax,0xf0c4e86f
  41109b:	or     bl,BYTE PTR [edx]
  41109d:	ret    
  41109e:	fst    DWORD PTR [ebp-0x4f9760a9]
  4110a4:	adc    BYTE PTR [edi+0x66],bl
  4110a7:	outs   dx,BYTE PTR ds:[esi]
  4110a8:	enter  0x64ce,0xb7
  4110ac:	aad    0xa8
  4110ae:	(bad)  
  4110af:	mov    edx,0xd0bddb53
  4110b4:	mov    al,0xb1
  4110b6:	sub    bh,BYTE PTR [ecx+edx*1-0x5e830f49]
  4110bd:	popa   
  4110be:	fwait
  4110bf:	jecxz  0x411110
  4110c1:	aam    0x37
  4110c3:	mul    DWORD PTR ds:0xf4ee05b0
  4110c9:	xlat   BYTE PTR ds:[ebx]
  4110ca:	clc    
  4110cb:	xchg   DWORD PTR [edi-0x62],edi
  4110ce:	sar    ebx,1
  4110d0:	xchg   ebx,eax
  4110d1:	in     eax,0x1a
  4110d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d4:	push   ecx
  4110d5:	imul   edi,ebp,0x6cb45131
  4110db:	xchg   ecx,eax
  4110dc:	dec    esi
  4110dd:	cmp    dl,dl
  4110df:	scas   al,BYTE PTR es:[edi]
  4110e0:	mov    bl,0x5a
  4110e2:	adc    edi,0xffffff81
  4110e5:	or     BYTE PTR [ebp+0x19],ch
  4110e8:	rcl    BYTE PTR [ebx+ebx*1+0x2ea2b0da],0x35
  4110f0:	popa   
  4110f1:	xor    al,bl
  4110f3:	in     al,0x63
  4110f5:	add    DWORD PTR [esi-0x2f11399e],ecx
  4110fb:	lods   eax,DWORD PTR ds:[esi]
  4110fc:	dec    esp
  4110fd:	idiv   DWORD PTR [edx-0x33]
  411100:	scas   al,BYTE PTR es:[edi]
  411101:	mov    ebp,0x320c0701
  411106:	stos   DWORD PTR es:[edi],eax
  411107:	mov    DWORD PTR [esp+edi*4],ebp
  41110a:	mov    DWORD PTR [edi+0x74ef22c9],ebx
  411110:	lock mov eax,0xb193095e
  411116:	not    DWORD PTR [ebx]
  411118:	(bad)  
  411119:	xor    edi,DWORD PTR [edi+edi*8+0x2d]
  41111d:	push   edx
  41111e:	xchg   esi,eax
  41111f:	test   eax,0xaca9d9a9
  411124:	(bad)  [edi+ecx*2]
  411127:	pop    es
  411128:	lahf   
  411129:	arpl   WORD PTR cs:[edi+edi*1],cx
  41112d:	retf   
  41112e:	lahf   
  41112f:	loope  0x41118a
  411131:	rol    DWORD PTR [ebx+eiz*8-0x13],cl
  411135:	cmp    ch,cl
  411137:	ret    0x933c
  41113a:	lea    ebp,[edi-0xc]
  41113d:	xor    ax,0xd5de
  411141:	and    BYTE PTR ds:0x40d044f0,0x91
  411148:	pop    edi
  411149:	mov    edx,0x70a12836
  41114e:	and    BYTE PTR ds:0xee7970f,cl
  411154:	adc    al,0x35
  411156:	dec    esi
  411157:	jecxz  0x41119f
  411159:	xor    dl,al
  41115b:	pop    ebp
  41115d:	jnp    0x411186
  41115f:	xchg   ebx,eax
  411160:	pop    ebx
  411161:	sti    
  411162:	or     eax,DWORD PTR [ebp-0x2adea26e]
  411168:	es adc al,0x6b
  41116b:	in     eax,0x6f
  41116d:	and    edx,eax
  41116f:	lea    ebp,[ebx]
  411171:	int    0x42
  411173:	call   0xf30a:0x8b03b3e6
  41117a:	ja     0x411162
  41117c:	pop    esi
  41117d:	sub    dl,0xdc
  411180:	jae    0x4111b1
  411182:	xor    al,0x6b
  411184:	cmp    esp,DWORD PTR [ebx-0x60]
  411187:	enter  0xe3d0,0x8e
  41118b:	loop   0x411136
  41118d:	cmp    edi,DWORD PTR [ebx+0x37]
  411190:	add    al,0x70
  411192:	mov    eax,0xe38ad141
  411197:	fimul  DWORD PTR [ecx+0x464daf0d]
  41119d:	push   0x6d
  41119f:	imul   esi,DWORD PTR [edi],0x5f211467
  4111a5:	mov    ch,0x4e
  4111a7:	pop    eax
  4111a8:	add    DWORD PTR ds:0x85eea9e7,edx
  4111ae:	nop
  4111af:	jl     0x4111b6
  4111b1:	xchg   eax,esi
  4111b3:	daa    
  4111b4:	sub    ebx,DWORD PTR [ecx-0x70]
  4111b7:	mov    ebx,0xc721fbff
  4111bc:	inc    ebx
  4111bd:	add    edx,DWORD PTR [ebp+0x7a]
  4111c0:	pop    es
  4111c1:	pusha  
  4111c2:	mov    al,ds:0x881bb587
  4111c7:	inc    ebp
  4111c8:	push   esp
  4111c9:	shl    BYTE PTR [eax+0x209b3f79],cl
  4111cf:	arpl   di,dx
  4111d1:	xchg   ebp,eax
  4111d2:	pop    ss
  4111d3:	cld    
  4111d4:	inc    esp
  4111d5:	pop    eax
  4111d6:	popf   
  4111d7:	add    esi,edx
  4111d9:	mov    ebx,0xf19fa45a
  4111de:	mov    al,ds:0x8a86e5df
  4111e3:	fist   WORD PTR [edx]
  4111e5:	xchg   ebx,eax
  4111e6:	sbb    DWORD PTR [ebx-0x67],esi
  4111e9:	arpl   WORD PTR [eax+0x6258a7f0],bp
  4111ef:	fnstenv ds:[edi]
  4111f2:	aaa    
  4111f3:	add    BYTE PTR [edi-0x41],cl
  4111f6:	xor    al,0x13
  4111f8:	stos   DWORD PTR es:[edi],eax
  4111f9:	leavew 
  4111fb:	push   eax
  4111fc:	mov    BYTE PTR [ebx+esi*4],0x62
  411200:	jecxz  0x411246
  411202:	cmc    
  411203:	xor    al,0x55
  411205:	xchg   ebp,eax
  411206:	out    0x88,al
  411208:	lods   eax,DWORD PTR ds:[esi]
  411209:	iret   
  41120a:	jge    0x4111e8
  41120c:	fisub  DWORD PTR [eax]
  41120e:	(bad)  
  41120f:	jmp    0x6f960021
  411214:	js     0x41127b
  411216:	add    BYTE PTR [ecx+0x22],ah
  411219:	fmul   DWORD PTR [edi]
  41121b:	adc    bh,BYTE PTR [edi+0x5533a235]
  411221:	daa    
  411222:	cmp    esi,DWORD PTR [ebp-0x78524c49]
  411228:	lods   eax,DWORD PTR ds:[esi]
  411229:	sbb    al,0x7e
  41122b:	call   0xd978:0x9460fe60
  411232:	dec    edi
  411233:	ds mov edi,esi
  411236:	xchg   esp,eax
  411237:	xchg   esi,eax
  411238:	stc    
  411239:	mov    al,0x40
  41123b:	mov    BYTE PTR [edi-0x13],bh
  41123e:	or     eax,0x15d7512f
  411243:	mov    ch,0x5e
  411245:	mov    ?,WORD PTR [esi-0x3c]
  411248:	cmp    esp,DWORD PTR [eax-0x30]
  41124b:	stos   DWORD PTR es:[edi],eax
  41124c:	or     al,0x8b
  41124e:	pop    edi
  41124f:	fidiv  WORD PTR ds:0xc41b7aa6
  411255:	mov    dh,0xcc
  411257:	(bad)  
  411258:	mov    ecx,0xde025f5a
  41125d:	cmp    eax,0x5487bc3a
  411262:	aam    0xef
  411264:	lods   al,BYTE PTR ds:[esi]
  411265:	push   ds
  411266:	xor    eax,edx
  411268:	xchg   dl,bh
  41126a:	lock sbb bl,dh
  41126d:	inc    eax
  41126e:	push   es
  41126f:	xchg   esi,eax
  411270:	xchg   ebp,eax
  411271:	or     BYTE PTR [edi-0xa],dh
  411274:	(bad)  
  411275:	nop
  411276:	inc    ecx
  411277:	sbb    esp,esp
  411279:	mov    ds:0xde6037f3,eax
  41127e:	jmp    0x9976:0x66d94755
  411285:	inc    esi
  411286:	jp     0x41124a
  411288:	mov    edi,0xf3429bbe
  41128d:	or     DWORD PTR [ebx-0x64c01ed2],0xffffffbc
  411294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411295:	dec    ecx
  411296:	pop    ss
  411297:	and    al,0xf1
  411299:	outs   dx,DWORD PTR ds:[esi]
  41129a:	mov    eax,0x2280c037
  41129f:	jne    0x411262
  4112a1:	and    al,0x18
  4112a3:	dec    ecx
  4112a4:	mov    ch,0xdc
  4112a6:	dec    eax
  4112a7:	mov    eax,ds:0x39805811
  4112ac:	jbe    0x41124a
  4112ae:	adc    eax,0xcff2eabc
  4112b3:	lods   eax,DWORD PTR ds:[esi]
  4112b4:	inc    esp
  4112b5:	cdq    
  4112b6:	jmp    0x4112f0
  4112b8:	js     0x41130b
  4112ba:	hlt    
  4112bb:	ins    DWORD PTR es:[edi],dx
  4112bc:	pop    esi
  4112bd:	sbb    al,0xe7
  4112bf:	jp     0x4112eb
  4112c1:	mov    cl,0xec
  4112c3:	nop
  4112c4:	popa   
  4112c5:	xchg   ecx,eax
  4112c6:	int    0x26
  4112c8:	ins    BYTE PTR es:[edi],dx
  4112c9:	ins    DWORD PTR es:[edi],dx
  4112ca:	mov    bl,0x62
  4112cc:	imul   edx,DWORD PTR [edi],0x6d958ad5
  4112d2:	push   cs
  4112d3:	in     al,0x9b
  4112d5:	jbe    0x4112e2
  4112d7:	pop    edi
  4112d8:	dec    esi
  4112d9:	repnz mov di,0x1bc
  4112de:	fcomi  st,st(1)
  4112e0:	dec    esp
  4112e1:	mov    esi,esi
  4112e3:	lock cli 
  4112e5:	pop    esi
  4112e6:	(bad)  
  4112e7:	scas   al,BYTE PTR es:[edi]
  4112e8:	loop   0x4112ba
  4112ea:	dec    ebx
  4112eb:	stos   BYTE PTR es:[edi],al
  4112ec:	xor    DWORD PTR [eax+edi*1+0x20],0x8a2fa692
  4112f4:	sbb    eax,0x50163b5f
  4112f9:	dec    ebp
  4112fa:	sub    DWORD PTR [ecx],eax
  4112fc:	pop    ds
  4112fd:	dec    esi
  4112fe:	dec    ebp
  4112ff:	daa    
  411300:	jns    0x411352
  411302:	sti    
  411303:	jns    0x41129d
  411305:	push   esp
  411306:	or     BYTE PTR [eax],0x70
  411309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41130a:	push   eax
  41130b:	in     eax,0x72
  41130d:	sbb    DWORD PTR [eax],edx
  41130f:	and    eax,0xaebed8a0
  411314:	(bad)  
  411316:	adc    eax,0xce0c22e7
  41131b:	and    al,bh
  41131d:	icebp  
  41131e:	xchg   ecx,eax
  41131f:	push   0x2bde9052
  411324:	repz mov ah,0xcf
  411327:	loop   0x411319
  411329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41132a:	repz mov ?,esi
  41132d:	mov    BYTE PTR [eax],cl
  41132f:	out    0x46,al
  411331:	mov    ebp,0xd8b39cc
  411336:	mov    eax,DWORD PTR [ebp-0x2be054af]
  41133c:	sub    eax,0xac922319
  411341:	mov    WORD PTR [ecx],ss
  411343:	retf   
  411344:	inc    esi
  411345:	mov    ecx,0x1f5356f1
  41134a:	fstp   TBYTE PTR [ebp+0x50735500]
  411350:	lock das 
  411352:	mov    cl,0x19
  411354:	enter  0xb7a5,0xdb
  411358:	stos   BYTE PTR es:[edi],al
  411359:	jmp    0x7a274eef
  41135e:	xlat   BYTE PTR ds:[ebx]
  41135f:	and    ah,BYTE PTR [edx-0x1176f99c]
  411365:	xor    dh,BYTE PTR [edx-0x75b043ee]
  41136b:	and    BYTE PTR [esi],0x46
  41136e:	or     al,0x3a
  411370:	stos   DWORD PTR es:[edi],eax
  411371:	les    esp,FWORD PTR [esi+0x4c8612d9]
  411377:	push   esi
  411378:	push   DWORD PTR [ecx]
  41137a:	cmp    BYTE PTR [ebx+ebx*4-0x56],bl
  41137e:	adc    edx,edi
  411380:	xchg   DWORD PTR [edx-0x7a6c3068],ebp
  411386:	sub    BYTE PTR [edx+ebx*4],cl
  411389:	pop    edx
  41138a:	bound  edx,QWORD PTR [edi-0x4a976c36]
  411390:	inc    eax
  411391:	xchg   edi,eax
  411392:	sbb    edi,DWORD PTR [esi]
  411394:	sbb    esp,DWORD PTR [ebp+0x4fc54d13]
  41139a:	lods   al,BYTE PTR ds:[esi]
  41139b:	or     al,0xbe
  41139d:	mov    WORD PTR [ebp+0x76],es
  4113a0:	inc    ecx
  4113a1:	jle    0x41138a
  4113a3:	aas    
  4113a4:	in     eax,0x75
  4113a6:	and    DWORD PTR [edx],edx
  4113a8:	ja     0x411409
  4113aa:	jge    0x4113e6
  4113ac:	ja     0x411362
  4113ae:	and    eax,0x9a9c9446
  4113b3:	add    edx,edi
  4113b5:	and    al,0xb0
  4113b7:	pop    esi
  4113b8:	or     cl,BYTE PTR [eax-0x51df1224]
  4113be:	inc    esi
  4113bf:	xor    cl,BYTE PTR [eax]
  4113c1:	mov    edi,edx
  4113c3:	dec    ebp
  4113c4:	rol    DWORD PTR [ebx+ebx*4+0x7957fb32],cl
  4113cb:	pop    edi
  4113cc:	ret    0x9cab
  4113cf:	push   eax
  4113d0:	popf   
  4113d1:	jp     0x41141f
  4113d3:	jne    0x411432
  4113d5:	and    ch,BYTE PTR [esi-0x71]
  4113d8:	nop
  4113d9:	daa    
  4113da:	cmp    cl,BYTE PTR [ecx]
  4113dc:	adc    eax,0xad0c1f82
  4113e1:	loope  0x411417
  4113e3:	popf   
  4113e4:	ins    BYTE PTR es:[edi],dx
  4113e5:	mov    bl,0xcf
  4113e7:	mov    ebx,0x84716317
  4113ec:	stc    
  4113ed:	push   esi
  4113ee:	cwde   
  4113ef:	repz cld 
  4113f1:	pop    esp
  4113f2:	xor    eax,0x7945293
  4113f7:	aad    0xaf
  4113f9:	mov    ebx,0xde9da2d4
  4113fe:	xor    dh,BYTE PTR [edx-0x57]
  411401:	out    0x6b,eax
  411403:	(bad)  
  411404:	out    0xac,eax
  411406:	mov    cl,0xe6
  411408:	or     eax,0x85c2329d
  41140d:	mov    edi,0x7877a304
  411412:	cwde   
  411413:	jns    0x411440
  411415:	jbe    0x411406
  411417:	cmp    al,0xea
  411419:	pop    edi
  41141a:	ja     0x4113d0
  41141c:	mov    WORD PTR [ecx-0x46],ss
  41141f:	jno    0x4113d4
  411421:	jns    0x41147d
  411423:	or     esi,edx
  411425:	mov    edi,0xbe9d6098
  41142a:	and    bh,bh
  41142c:	push   ss
  41142d:	mov    cl,0x83
  41142f:	lock push esi
  411431:	repnz out dx,eax
  411433:	push   ds
  411434:	int    0x68
  411436:	and    al,0xf3
  411438:	jecxz  0x41148d
  41143a:	cmp    eax,0x901d45fd
  41143f:	jns    0x411488
  411441:	stos   DWORD PTR es:[edi],eax
  411442:	dec    esi
  411443:	aad    0xd8
  411445:	xor    bh,BYTE PTR [ebx]
  411447:	fisttp QWORD PTR [ecx-0x550ace98]
  41144d:	call   0x91ee24fc
  411452:	repnz add DWORD PTR [ebp-0x34],edi
  411456:	ja     0x41147b
  411458:	or     DWORD PTR [edi+0x4e],edi
  41145b:	cdq    
  41145c:	inc    ecx
  41145d:	test   eax,0x4083e479
  411462:	cmp    ecx,DWORD PTR [ebp-0x9e4b2a6]
  411468:	mov    ebx,0x9ddcb7bc
  41146d:	test   al,0x4
  41146f:	retf   0x7b2a
  411472:	add    eax,0xf46fdb5d
  411477:	jmp    0x9b0d:0xf4ca8ed6
  41147e:	and    al,0x20
  411480:	lock jmp 0x4d7e6824
  411486:	adc    al,bh
  411488:	add    eax,DWORD PTR [esi]
  41148a:	push   ecx
  41148b:	or     DWORD PTR [edi+0x6a6a23e2],0xffffffa5
  411492:	sub    dh,BYTE PTR [eax+0x2]
  411495:	inc    esp
  411496:	fsub   QWORD PTR ds:0x41b4f672
  41149c:	add    DWORD PTR [edx+0x7c],esp
  41149f:	inc    esi
  4114a0:	lahf   
  4114a1:	cmp    ebp,edx
  4114a3:	div    BYTE PTR [eax+ebx*1-0x1a]
  4114a7:	stc    
  4114a8:	mov    cl,ch
  4114aa:	lds    esi,FWORD PTR [edx]
  4114ac:	jp     0x4114ee
  4114ae:	xchg   ebp,eax
  4114af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114b0:	adc    eax,0x6a813c20
  4114b5:	mov    ecx,0x54f99c96
  4114ba:	sbb    ebp,DWORD PTR [edx]
  4114bc:	inc    edx
  4114bd:	cdq    
  4114be:	ror    BYTE PTR [ecx+eax*4],1
  4114c1:	aas    
  4114c2:	popf   
  4114c3:	sbb    ah,cl
  4114c5:	inc    ebp
  4114c6:	lds    esp,FWORD PTR [ecx+eax*8]
  4114c9:	add    DWORD PTR [ebx-0x6369186d],ebp
  4114cf:	push   eax
  4114d0:	jle    0x41145e
  4114d2:	loopne 0x41147b
  4114d4:	into   
  4114d5:	sbb    ebx,ebx
  4114d7:	adc    DWORD PTR cs:[ecx-0x53],edi
  4114db:	xor    WORD PTR [edx+0x59],dx
  4114df:	add    DWORD PTR [eax-0x64],esp
  4114e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e3:	mov    cl,0xd5
  4114e5:	ret    0x587c
  4114e8:	dec    ebx
  4114e9:	or     dh,cl
  4114eb:	inc    ecx
  4114ec:	mov    al,ds:0x2dc3a276
  4114f1:	add    bl,bh
  4114f3:	je     0x411531
  4114f5:	xlat   BYTE PTR ds:[ebx]
  4114f6:	dec    esi
  4114f7:	cmp    ebp,DWORD PTR [edx+0x3f4950bf]
  4114fd:	jmp    0x1b1066d0
  411502:	cmp    al,0x5d
  411504:	lods   eax,DWORD PTR ds:[esi]
  411505:	lahf   
  411506:	daa    
  411507:	dec    esp
  411508:	or     bl,dh
  41150a:	sub    edi,DWORD PTR [edx-0x306ab061]
  411510:	lods   eax,DWORD PTR ds:[esi]
  411511:	aaa    
  411512:	inc    esp
  411513:	xor    al,0x9c
  411515:	xchg   ebx,eax
  411516:	call   0xdd73:0x3d609d72
  41151d:	sub    al,0xc4
  41151f:	xchg   ebp,eax
  411520:	mul    BYTE PTR [ebp+0x3c21f1e6]
  411526:	sub    esi,DWORD PTR [ecx]
  411528:	mov    ebx,0x6a46b4df
  41152d:	shr    BYTE PTR [ecx],0xd
  411530:	or     ecx,eax
  411532:	push   0xd4abd7bc
  411537:	mov    dl,0x30
  411539:	or     bl,BYTE PTR [ecx]
  41153b:	sahf   
  41153c:	mov    dl,dl
  41153e:	scas   eax,DWORD PTR es:[edi]
  41153f:	mov    ecx,gs
  411541:	jmp    0x1b15:0xb8022154
  411548:	in     eax,0xd6
  41154a:	dec    ebx
  41154b:	mov    eax,0x5cf77b29
  411550:	xor    al,0xc7
  411552:	inc    esp
  411553:	rcl    edx,0x1e
  411556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411557:	jb     0x411590
  411559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41155a:	lds    ecx,FWORD PTR ds:0x5bcab397
  411560:	outs   dx,BYTE PTR ds:[esi]
  411561:	push   ecx
  411562:	sbb    al,0x60
  411564:	(bad)  
  411565:	jne    0x4115af
  411567:	(bad)
  41156c:	dec    esp
  41156d:	mov    edi,0x354870ab
  411572:	stos   BYTE PTR es:[edi],al
  411573:	mov    esi,0xe5d3607
  411578:	call   0x14927e81
  41157d:	mov    bl,BYTE PTR [edx+0x10]
  411580:	jbe    0x41151a
  411582:	je     0x411529
  411584:	cmp    ah,ch
  411586:	mov    al,ds:0x1e0bc2d6
  41158b:	ret    
  41158c:	fcmovne st,st(5)
  41158e:	xchg   ebp,eax
  41158f:	sahf   
  411590:	cld    
  411591:	(bad)  
  411592:	sbb    al,0xee
  411594:	test   BYTE PTR [ebx+ecx*8],ah
  411597:	cwde   
  411598:	loop   0x411604
  41159a:	jb     0x4115c5
  41159c:	jne    0x411578
  41159e:	call   0xda39:0x3b7b2839
  4115a5:	cmc    
  4115a6:	and    eax,0xb29f97a3
  4115ab:	std    
  4115ac:	jge    0x4115d5
  4115ae:	mov    esi,0x23062466
  4115b3:	fld    QWORD PTR [eax+0x3620c976]
  4115b9:	push   ds
  4115ba:	cli    
  4115bb:	call   0xf8bee0
  4115c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115c1:	fist   DWORD PTR [edi]
  4115c4:	neg    BYTE PTR [ebx]
  4115c6:	sbb    DWORD PTR [eax-0x5baf6b0d],ebp
  4115cc:	cmp    bl,BYTE PTR [eax]
  4115ce:	cmp    DWORD PTR [ecx],esp
  4115d0:	das    
  4115d1:	fbld   TBYTE PTR [edx]
  4115d3:	xor    eax,0xe10ac409
  4115d8:	pop    ecx
  4115d9:	jno    0x411577
  4115db:	sar    BYTE PTR ds:0xae577fb9,1
  4115e1:	jo     0x411597
  4115e3:	es push ecx
  4115e5:	mov    bl,0x7b
  4115e7:	shl    ch,cl
  4115e9:	dec    ebx
  4115ea:	mov    al,0x35
  4115ec:	sti    
  4115ed:	cmc    
  4115ee:	sbb    eax,0xd302c18e
  4115f3:	push   ebx
  4115f4:	imul   eax,DWORD PTR [esi-0x47],0x66
  4115f8:	dec    ecx
  4115f9:	mov    ebp,DWORD PTR [edi]
  4115fb:	adc    DWORD PTR ds:0x443bbdf3,edi
  411601:	jg     0x41159f
  411603:	xor    DWORD PTR [esi+0x2c],ebx
  411606:	mov    esp,0xb7cb947b
  41160b:	xor    al,al
  41160d:	sbb    al,0x52
  41160f:	sbb    dh,BYTE PTR [ebp-0x45]
  411612:	int    0x6
  411614:	scas   al,BYTE PTR es:[edi]
  411615:	pop    es
  411616:	inc    esi
  411617:	push   cs
  411618:	push   cs
  411619:	repnz and DWORD PTR [edx+0x645aa357],ebx
  411620:	(bad)  
  411621:	or     eax,0xdfdd237f
  411626:	das    
  411627:	fdivp  st(6),st
  411629:	popf   
  41162a:	mov    eax,0x6bf510b9
  41162f:	dec    ebp
  411630:	cld    
  411631:	or     dh,BYTE PTR [eax+ebp*4+0xd]
  411635:	(bad)  
  411636:	call   0x91dd3703
  41163b:	neg    dl
  41163d:	cmp    DWORD PTR [eax-0x48],ecx
  411640:	mov    esi,0x6a78e3c4
  411645:	push   cs
  411646:	call   0x8ee2d9a1
  41164b:	cwde   
  41164c:	int    0x28
  41164e:	gs push ss
  411650:	xchg   ecx,eax
  411651:	es cwde 
  411653:	add    al,0xc4
  411655:	(bad)  
  411656:	cld    
  411657:	call   0xa04e:0x5b758376
  41165e:	push   eax
  41165f:	xlat   BYTE PTR ds:[ebx]
  411660:	fucomi st,st(5)
  411662:	sub    cl,dh
  411664:	in     eax,0x2c
  411666:	aad    0xd7
  411668:	pop    esi
  411669:	mov    edx,0xfd829d4f
  41166e:	or     BYTE PTR [eax+0x46],ch
  411671:	sbb    edx,DWORD PTR [ecx+0x25]
  411674:	and    al,0x8a
  411676:	xchg   esi,eax
  411677:	push   ds
  411678:	(bad)  
  411679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41167a:	aas    
  41167b:	ror    dl,cl
  41167d:	inc    edi
  41167e:	js     0x4116ad
  411680:	pushf  
  411681:	sar    BYTE PTR [edx-0x6a],cl
  411684:	ror    DWORD PTR [edx-0x743b8597],1
  41168a:	mov    eax,0x64f034ca
  41168f:	aaa    
  411690:	xchg   DWORD PTR [ecx+0x48fafe8d],esp
  411696:	jmp    0x411639
  411698:	and    eax,0x136abb01
  41169d:	sub    ebp,DWORD PTR [ebx]
  41169f:	retf   
  4116a0:	push   esi
  4116a1:	sbb    esi,edx
  4116a3:	mov    eax,0x7499adec
  4116a8:	(bad)  
  4116a9:	aad    0xa8
  4116ab:	sbb    DWORD PTR [ebx-0x80],ebx
  4116ae:	pop    ebp
  4116af:	adc    al,0x8a
  4116b1:	fs mov edi,edx
  4116b4:	pop    esi
  4116b5:	pop    ebp
  4116b6:	sbb    BYTE PTR [ebp+0x55c64839],dh
  4116bc:	mov    dh,0xf0
  4116be:	mov    al,ds:0xa96f2b08
  4116c3:	pop    ss
  4116c4:	daa    
  4116c5:	pop    es
  4116c6:	jle    0x4116fc
  4116c8:	mov    dh,dh
  4116ca:	add    eax,0x9d0e40e0
  4116cf:	sbb    eax,0x49573c18
  4116d4:	push   ebp
  4116d5:	push   eax
  4116d6:	pushf  
  4116d7:	rol    BYTE PTR [edi+0x235c0bd4],0x20
  4116de:	sub    BYTE PTR [esi+0x4],bl
  4116e1:	lds    ebp,FWORD PTR [eax+0x2af2adbb]
  4116e7:	in     al,0xa0
  4116e9:	adc    esi,edi
  4116eb:	scas   eax,DWORD PTR es:[edi]
  4116ec:	add    al,0xf6
  4116ee:	xor    eax,0xdacbc2cd
  4116f3:	cs call 0x939a1b34
  4116f9:	pop    ebp
  4116fa:	sbb    BYTE PTR [ecx+edi*4],dh
  4116fd:	cmp    eax,0xe11fb23d
  411702:	bound  edx,QWORD PTR [ecx+edi*1]
  411705:	jne    0x411687
  411707:	es loop 0x411722
  41170a:	dec    esi
  41170b:	pushf  
  41170c:	and    ebx,DWORD PTR [edi-0x60a5d50e]
  411712:	add    BYTE PTR [edi+0x3cc8d75e],0xd9
  411719:	inc    eax
  41171a:	ret    0xa12c
  41171d:	dec    ecx
  41171e:	jecxz  0x41170c
  411720:	jnp    0x41178f
  411722:	ins    BYTE PTR es:[edi],dx
  411723:	pop    edx
  411724:	std    
  411725:	jae    0x4116da
  411727:	xlat   BYTE PTR ds:[ebx]
  411728:	fyl2x  
  41172a:	inc    ebx
  41172b:	out    0xcc,eax
  41172d:	out    dx,eax
  41172e:	jne    0x4116c6
  411730:	mov    dh,0xb4
  411732:	mov    ds:0xeb1724a3,eax
  411737:	adc    eax,0xffb7d088
  41173c:	pop    ss
  41173d:	add    DWORD PTR [eax-0x7b4aa008],ebx
  411743:	xor    esi,DWORD PTR [eax-0x7c637c23]
  411749:	mov    ds:0xcc084f57,al
  41174e:	es jbe 0x411766
  411751:	arpl   WORD PTR [edx],sp
  411753:	out    0x27,eax
  411755:	(bad)  
  411756:	pop    esp
  411757:	xchg   ebx,eax
  411758:	mov    WORD PTR [eax],fs
  41175a:	and    ecx,DWORD PTR [ebp+edx*4+0x5c]
  41175e:	mov    DWORD PTR [ecx+0x6fd5cfa],ebx
  411764:	pushf  
  411765:	sub    BYTE PTR [edx],bl
  411767:	ficom  WORD PTR [ebx]
  411769:	fcomp  QWORD PTR ds:0xfafe1b69
  41176f:	adc    cl,BYTE PTR [eax+0x5bb16cc4]
  411775:	push   cs
  411776:	or     DWORD PTR [edi],ebp
  411778:	xlat   BYTE PTR ds:[ebx]
  411779:	pop    ds
  41177a:	call   0xb67d:0xe659f3d8
  411781:	dec    ebp
  411782:	(bad)  
  411783:	cld    
  411784:	stos   BYTE PTR es:[edi],al
  411785:	stos   BYTE PTR es:[edi],al
  411786:	mov    al,ds:0x11d4a536
  41178b:	mov    bh,0x9
  41178d:	es fwait
  41178f:	mov    ?,WORD PTR [edx-0x37]
  411792:	out    dx,al
  411793:	dec    esi
  411794:	mov    cl,0xf8
  411796:	cmp    BYTE PTR [esi*8-0x625767dc],bl
  41179d:	dec    edx
  41179e:	fsub   QWORD PTR [ebx]
  4117a0:	idiv   BYTE PTR [eax]
  4117a2:	mov    edi,0x77e46867
  4117a7:	xor    DWORD PTR [ecx+edx*8+0x46],0xd2e01e76
  4117af:	ret    
  4117b0:	je     0x411794
  4117b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117b3:	repz mov es,WORD PTR [edx]
  4117b6:	mov    dl,dl
  4117b8:	iret   
  4117b9:	jl     0x41180b
  4117bb:	fcmovb st,st(5)
  4117bd:	popf   
  4117be:	pushf  
  4117bf:	sub    al,0x3e
  4117c2:	ror    DWORD PTR [edx+0x5cf28188],0x53
  4117c9:	aas    
  4117ca:	int    0x4b
  4117cc:	jge    0x411773
  4117ce:	aas    
  4117cf:	jle    0x41182c
  4117d1:	retf   
  4117d2:	cwde   
  4117d3:	out    dx,eax
  4117d4:	sbb    bl,BYTE PTR ds:0x108ed33d
  4117da:	push   esp
  4117db:	test   al,0x58
  4117dd:	dec    edx
  4117de:	cwde   
  4117df:	cli    
  4117e0:	ret    
  4117e1:	ins    BYTE PTR es:[edi],dx
  4117e2:	dec    ebp
  4117e3:	out    dx,ax
  4117e5:	out    0xf5,al
  4117e7:	or     al,0x65
  4117e9:	inc    edx
  4117ea:	jmp    0xa097:0xcd9de5e1
  4117f1:	(bad)  
  4117f2:	int    0xbc
  4117f4:	jmp    0x4117ad
  4117f6:	xchg   ecx,eax
  4117f7:	inc    eax
  4117f8:	push   eax
  4117f9:	sub    BYTE PTR [ebp+0x41f355ed],dh
  4117ff:	jg     0x411782
  411801:	xor    ebp,DWORD PTR [edx-0x1f]
  411804:	mov    al,0xcf
  411806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411807:	adc    al,0x80
  411809:	or     bl,BYTE PTR [ebp+0x6e5390a3]
  41180f:	pop    ecx
  411810:	loopne 0x4117c5
  411812:	cmp    al,0x84
  411814:	(bad)  
  411815:	aam    0x7
  411817:	ret    0x9340
  41181a:	hlt    
  41181b:	lods   eax,DWORD PTR ds:[esi]
  41181c:	(bad)  
  41181e:	push   esi
  41181f:	pop    ebp
  411820:	cmp    eax,0xd448fba0
  411825:	ja     0x411821
  411827:	ins    DWORD PTR es:[edi],dx
  411828:	jnp    0x411832
  41182a:	les    esi,FWORD PTR [edi+0x57]
  41182d:	mov    eax,ds:0x705600f
  411832:	loopne 0x41180e
  411834:	mov    edx,0x862ea2da
  411839:	out    dx,eax
  41183a:	add    eax,0x11983a97
  41183f:	shr    DWORD PTR [edx-0x30],1
  411842:	into   
  411843:	shl    ah,1
  411845:	inc    ecx
  411846:	iret   
  411847:	pop    ss
  411848:	and    al,0x8
  41184a:	mov    ch,0xd4
  41184c:	jge    0x411806
  41184e:	dec    ecx
  41184f:	xor    edi,DWORD PTR [ebx+0x77]
  411852:	bound  edi,QWORD PTR [edx]
  411854:	jb     0x411899
  411856:	lock imul edx,esi,0x5a052558
  41185d:	outs   dx,DWORD PTR ds:[esi]
  41185e:	sub    BYTE PTR [ebp-0x69c01b87],al
  411864:	mov    edi,0x10675860
  411869:	adc    BYTE PTR [ecx-0x44],0xb1
  41186d:	pop    es
  41186e:	sbb    BYTE PTR [esi-0x938d29f],0x82
  411875:	add    cl,BYTE PTR [eax]
  411877:	std    
  411878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411879:	mov    WORD PTR [ebp-0x59cadbc6],?
  41187f:	pop    es
  411880:	loope  0x411885
  411882:	fnstenv [esi]
  411884:	lods   al,BYTE PTR ds:[esi]
  411885:	xchg   esi,eax
  411886:	ins    DWORD PTR es:[edi],dx
  411887:	pop    esp
  411888:	and    ebx,DWORD PTR [ecx-0x83be912]
  41188e:	xchg   edx,eax
  41188f:	push   cs
  411890:	mov    esi,eax
  411892:	push   ss
  411893:	mov    bh,0xae
  411895:	mov    bl,0x99
  411897:	fistp  DWORD PTR [ebx-0x55]
  41189a:	sub    al,0x12
  41189c:	rcr    edx,0xc6
  41189f:	jno    0x4118d4
  4118a1:	das    
  4118a2:	jnp    0x411859
  4118a4:	cmp    BYTE PTR [ecx-0x65],ah
  4118a7:	test   eax,0x5783556e
  4118ac:	call   0x2d1d:0x457c412d
  4118b3:	xchg   edi,eax
  4118b4:	ror    DWORD PTR [esi],1
  4118b6:	jb     0x4118b6
  4118b8:	aad    0xfe
  4118ba:	ins    BYTE PTR es:[edi],dx
  4118bb:	clc    
  4118bc:	retf   0xb0e3
  4118bf:	jb     0x4118b7
  4118c1:	sub    BYTE PTR [eax],0x21
  4118c4:	jbe    0x41186d
  4118c6:	and    eax,0x8b774103
  4118cb:	lods   al,BYTE PTR ds:[esi]
  4118cc:	mov    bl,0x50
  4118ce:	pop    esi
  4118cf:	and    DWORD PTR [eax+0x5823adae],edi
  4118d5:	push   ecx
  4118d6:	aas    
  4118d7:	push   0x2e369422
  4118dc:	inc    ebp
  4118dd:	xchg   edi,eax
  4118de:	out    0x58,eax
  4118e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118e1:	(bad)  
  4118e2:	repz xor ebp,esp
  4118e5:	aas    
  4118e6:	mov    eax,0xcf9e5cc5
  4118eb:	clc    
  4118ec:	dec    ebp
  4118ed:	xchg   ebp,eax
  4118ee:	pop    ds
  4118ef:	dec    ebx
  4118f0:	retf   
  4118f1:	xor    BYTE PTR [edx],0x30
  4118f4:	adc    al,0x93
  4118f6:	mov    ds:0xa4374fdf,al
  4118fb:	pop    esp
  4118fc:	xor    eax,0x502420b4
  411901:	sub    bh,BYTE PTR [esi-0x4]
  411904:	adc    ah,dl
  411906:	push   ecx
  411907:	sbb    al,0xe8
  411909:	cdq    
  41190a:	sbb    DWORD PTR [esp+edi*2-0x4],ebx
  41190e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41190f:	enter  0xb84e,0x3b
  411913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411914:	mov    dh,BYTE PTR [ecx-0x1eeca51f]
  41191a:	aad    0xd
  41191c:	jmp    0x530af108
  411921:	push   0xffffffa1
  411923:	mov    bl,0x75
  411925:	jno    0x4118c6
  411927:	inc    esi
  411928:	inc    edi
  411929:	push   ds
  41192a:	adc    DWORD PTR [edi-0x74],eax
  41192d:	js     0x41198e
  41192f:	and    eax,0xf186e5ec
  411934:	rcr    DWORD PTR [eax],1
  411936:	out    dx,al
  411937:	xchg   esp,eax
  411938:	fwait
  411939:	mov    BYTE PTR [edx-0x25770628],bh
  41193f:	dec    edi
  411940:	inc    ebp
  411941:	ret    
  411942:	sub    al,0xea
  411944:	adc    eax,0x6b6a9373
  411949:	in     al,dx
  41194a:	jb     0x411972
  41194c:	sub    BYTE PTR [ecx+ecx*1],ch
  41194f:	cmc    
  411950:	jmp    0x994e13af
  411955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411956:	fcom   DWORD PTR [eax+ebx*4-0xd778235]
  41195d:	out    dx,eax
  41195e:	pop    esp
  41195f:	jge    0x411925
  411961:	cmp    bh,BYTE PTR [edi+eax*4-0x3f1919ac]
  411968:	push   ebp
  411969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41196a:	into   
  41196b:	and    ah,BYTE PTR [edi+0xbd55b4f]
  411971:	mov    esi,0x67fde041
  411976:	push   edx
  411977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411978:	div    al
  41197a:	popf   
  41197b:	xor    DWORD PTR [edi],ebp
  41197d:	add    eax,0x30cac6cd
  411982:	mov    eax,0x22ac6fd6
  411987:	std    
  411988:	enter  0x40d9,0xe6
  41198c:	pushf  
  41198d:	or     bl,BYTE PTR [esi+0x6c67a4cc]
  411993:	pop    edi
  411994:	mov    esp,DWORD PTR [edx-0x5c2e5898]
  41199a:	cmp    dh,ah
  41199c:	dec    edx
  41199d:	and    cl,bl
  41199f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a0:	xor    DWORD PTR [edi-0x71],edx
  4119a3:	(bad)  
  4119a4:	jo     0x411996
  4119a6:	ror    DWORD PTR [ebx-0x443b20ee],0xbb
  4119ad:	cdq    
  4119ae:	ins    DWORD PTR es:[edi],dx
  4119af:	push   es
  4119b0:	push   ss
  4119b1:	mov    edx,0x9d16f0bb
  4119b6:	mov    bh,0x2
  4119b8:	xchg   edx,eax
  4119b9:	inc    esp
  4119ba:	mov    al,0x6f
  4119bc:	or     ebp,DWORD PTR [edx+0x2fece680]
  4119c2:	jmp    0xb45b845d
  4119c7:	call   0xc02e7f86
  4119cc:	fmul   DWORD PTR [ebp+0x5f]
  4119cf:	das    
  4119d0:	daa    
  4119d1:	push   ds
  4119d2:	adc    cl,BYTE PTR [eax-0x5a]
  4119d5:	xor    BYTE PTR [esi],bl
  4119d7:	or     DWORD PTR [esi+0x6773bdce],0x70
  4119de:	sub    DWORD PTR [esi+0x35],eax
  4119e1:	sbb    BYTE PTR [esi-0x7112ce88],bl
  4119e7:	lea    ecx,[esi]
  4119e9:	iret   
  4119ea:	in     al,dx
  4119eb:	mov    DWORD PTR [edi+0x2d],esp
  4119ee:	and    al,0x1c
  4119f0:	mov    esp,0x6dda1843
  4119f5:	jge    0x411983
  4119f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f8:	dec    ecx
  4119f9:	lods   eax,DWORD PTR ds:[esi]
  4119fa:	out    dx,al
  4119fb:	push   ebp
  4119fc:	pop    esi
  4119fd:	and    dl,BYTE PTR [edi-0x38]
  411a00:	cld    
  411a01:	call   0xa4167d98
  411a06:	test   eax,0xd649f135
  411a0b:	or     ecx,edx
  411a0d:	inc    esp
  411a0e:	lods   al,BYTE PTR ds:[esi]
  411a0f:	mov    al,0xbc
  411a11:	adc    al,0xe7
  411a13:	enter  0x8721,0xa7
  411a17:	adc    edx,DWORD PTR [eax-0x3254ee49]
  411a1d:	fldcw  WORD PTR [ebx+edx*4+0x2d]
  411a21:	mov    esi,0x268d92a9
  411a26:	pop    esp
  411a27:	or     DWORD PTR [edx-0x6f],esi
  411a2a:	adc    bh,BYTE PTR [eax]
  411a2c:	pushf  
  411a2d:	rcl    DWORD PTR [ebx+0x41798841],1
  411a33:	cli    
  411a34:	add    al,0xf
  411a36:	xor    dl,BYTE PTR [ecx-0x1f]
  411a39:	xor    DWORD PTR [esi+0x60],0x7fe37251
  411a40:	retf   0x770c
  411a43:	(bad)  
  411a44:	retf   0x5dc4
  411a47:	and    bl,BYTE PTR [edi]
  411a49:	rol    BYTE PTR [edi],1
  411a4b:	xchg   BYTE PTR [esi],ah
  411a4d:	add    ebx,edx
  411a4f:	lds    esp,FWORD PTR [ebx]
  411a51:	ds push ecx
  411a53:	into   
  411a54:	mov    ebx,0xbd34aeaf
  411a59:	loope  0x411a17
  411a5b:	or     eax,0x180c6ec8
  411a60:	adc    DWORD PTR [ebx],edx
  411a62:	fdivr  st(2),st
  411a64:	nop
  411a65:	cmp    eax,DWORD PTR [ecx]
  411a67:	pop    ecx
  411a68:	xchg   BYTE PTR [edx+0x70],ch
  411a6b:	ds aas 
  411a6d:	inc    ebx
  411a6e:	mov    ch,0xe0
  411a70:	sbb    eax,0x72b9e2ad
  411a75:	bound  ecx,QWORD PTR [edx]
  411a77:	in     al,0x65
  411a79:	sbb    esp,DWORD PTR [edx+eax*8]
  411a7c:	outs   dx,BYTE PTR fs:[esi]
  411a7e:	dec    esp
  411a7f:	adc    cl,BYTE PTR [eax+0x6e]
  411a82:	and    eax,0xf1c8383
  411a87:	test   DWORD PTR [esi-0x6b],esp
  411a8a:	cmp    DWORD PTR [esi+ebp*1-0x46],esi
  411a8e:	adc    BYTE PTR [ecx+edi*8+0xbeda79d],ah
  411a95:	push   ebp
  411a96:	retf   0x362e
  411a99:	adc    ecx,DWORD PTR [ebp-0x1a560326]
  411a9f:	addr16 inc ebp
  411aa1:	cwde   
  411aa2:	xchg   esp,eax
  411aa3:	mov    ds:0xb6638986,al
  411aa8:	popa   
  411aa9:	dec    edx
  411aaa:	inc    ebx
  411aab:	mul    BYTE PTR [edx]
  411aad:	jge    0x411b02
  411aaf:	mov    dl,0xfe
  411ab1:	dec    eax
  411ab2:	dec    edx
  411ab3:	retf   
  411ab4:	or     DWORD PTR [esi],ecx
  411ab6:	aam    0x5e
  411ab8:	cmp    BYTE PTR gs:[edx+0x4a],dl
  411abc:	sbb    DWORD PTR [ecx],edx
  411abe:	std    
  411abf:	mov    esi,0x685b1690
  411ac4:	pop    ecx
  411ac5:	jb     0x411a50
  411ac7:	and    cl,bh
  411ac9:	xor    eax,0xa47ea44a
  411ace:	scas   al,BYTE PTR es:[edi]
  411acf:	scas   eax,DWORD PTR es:[edi]
  411ad0:	xchg   ebx,eax
  411ad1:	sahf   
  411ad2:	inc    esp
  411ad3:	(bad)  
  411ad4:	sbb    BYTE PTR [edx],ah
  411ad6:	inc    eax
  411ad7:	call   0x5fc30e84
  411adc:	jne    0x411aa3
  411ade:	inc    edx
  411adf:	xchg   esp,eax
  411ae0:	sar    BYTE PTR [eax+0x65],1
  411ae3:	push   ebx
  411ae4:	retf   
  411ae5:	outs   dx,BYTE PTR ds:[esi]
  411ae6:	jbe    0x411b20
  411ae8:	pop    eax
  411ae9:	jl     0x411ac9
  411aeb:	jbe    0x411b17
  411aed:	mov    esi,0xc00a4964
  411af2:	cdq    
  411af3:	loope  0x411a7a
  411af5:	ret    
  411af6:	out    0x1c,eax
  411af8:	cdq    
  411af9:	mov    edi,DWORD PTR [edi-0x783aba0e]
  411aff:	std    
  411b00:	jecxz  0x411ac3
  411b02:	push   es
  411b03:	outs   dx,BYTE PTR ds:[esi]
  411b04:	fimul  WORD PTR [ebx-0xd]
  411b07:	jle    0x411b7a
  411b09:	js     0x411ab1
  411b0b:	mov    eax,0xe031f6c
  411b10:	retf   0x5b40
  411b13:	and    BYTE PTR [ecx+0x9],bl
  411b16:	ins    BYTE PTR es:[edi],dx
  411b17:	ret    
  411b18:	jae    0x411b80
  411b1a:	mov    esi,0x3d414449
  411b1f:	jno    0x411b03
  411b21:	xchg   DWORD PTR [ecx],eax
  411b23:	ret    0x60c1
  411b26:	das    
  411b27:	lahf   
  411b28:	ins    DWORD PTR es:[edi],dx
  411b29:	mov    dh,0xf1
  411b2b:	jnp    0x411ace
  411b2d:	or     eax,0xe93ec013
  411b32:	mov    ds,WORD PTR [edx]
  411b34:	test   bh,0x29
  411b37:	out    0x24,eax
  411b39:	push   eax
  411b3a:	fild   DWORD PTR [ecx+0x3e]
  411b3d:	adc    eax,0xafff9838
  411b42:	and    eax,0xc61e81
  411b47:	inc    dl
  411b49:	ffreep st(1)
  411b4b:	addr16 je 0x411b26
  411b4e:	add    ebp,ecx
  411b50:	popf   
  411b51:	outs   dx,BYTE PTR ds:[esi]
  411b52:	cs fs push ds
  411b55:	jo     0x411af4
  411b57:	push   esp
  411b58:	xor    eax,0xb8c23bce
  411b5d:	mov    es,WORD PTR [ebx]
  411b5f:	push   ecx
  411b60:	or     ch,BYTE PTR [edx]
  411b62:	fwait
  411b63:	mov    esp,0xea0e207b
  411b68:	out    0x14,eax
  411b6a:	sbb    al,0xf6
  411b6c:	ss xchg ecx,eax
  411b6e:	or     eax,0x33dd6a34
  411b73:	pusha  
  411b74:	add    eax,0x8d5e3c40
  411b79:	sub    dh,BYTE PTR [ebp+esi*8-0x30f63039]
  411b80:	stos   DWORD PTR es:[edi],eax
  411b81:	cmp    DWORD PTR [edi],0xffffff9a
  411b84:	int3   
  411b85:	mov    ds:0xcac5b52e,eax
  411b8a:	pop    ecx
  411b8b:	sbb    al,0x43
  411b8d:	pop    edi
  411b8e:	add    BYTE PTR [ebp+0x4c68f12d],ch
  411b94:	arpl   WORD PTR [esi+ecx*2],bp
  411b97:	mov    al,0x6f
  411b99:	inc    esp
  411b9a:	pop    eax
  411b9b:	call   0xea096b99
  411ba0:	repz sti 
  411ba2:	sub    eax,0xa1be7414
  411ba7:	iret   
  411ba8:	jg     0x411b68
  411baa:	cmp    esi,ecx
  411bac:	cld    
  411bad:	xor    eax,0x93482768
  411bb2:	jp     0x411c18
  411bb4:	test   DWORD PTR [ecx],esi
  411bb6:	adc    DWORD PTR [ecx-0x65fb8e9d],edi
  411bbc:	pop    ebp
  411bbd:	outs   dx,DWORD PTR ds:[esi]
  411bbe:	xor    edx,edi
  411bc0:	fstp   TBYTE PTR [ebx+0x41f5685d]
  411bc6:	(bad)  
  411bc7:	jae    0x411b5a
  411bc9:	in     eax,0x40
  411bcb:	or     al,dh
  411bcd:	or     BYTE PTR [esi+ecx*8+0x3be4526e],ch
  411bd4:	in     eax,dx
  411bd5:	inc    ecx
  411bd6:	jno    0x411b94
  411bd8:	and    al,0x58
  411bda:	xor    edi,ebp
  411bdc:	(bad)  
  411bdd:	hlt    
  411bde:	mov    esp,0x13d08186
  411be3:	sub    eax,0x59673224
  411be8:	out    dx,eax
  411be9:	mov    ch,0x88
  411beb:	push   edi
  411bec:	dec    eax
  411bed:	(bad)  
  411bee:	pop    edx
  411bef:	test   al,0x23
  411bf1:	pop    es
  411bf2:	ja     0x411b96
  411bf4:	adc    al,0xa4
  411bf6:	dec    ebx
  411bf7:	xchg   ebp,eax
  411bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bf9:	add    eax,0x2dd0c804
  411bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bff:	fisubr DWORD PTR [esi+0x42]
  411c02:	fld    TBYTE PTR [esi+ebp*2-0x617c0cac]
  411c09:	or     al,0x9
  411c0b:	adc    BYTE PTR [ebx+0x3e],0xa7
  411c0f:	mov    ds:0x75a314a,al
  411c14:	add    DWORD PTR [ebp+eiz*1+0x251fe1ff],esp
  411c1b:	fcmovu st,st(2)
  411c1d:	in     al,dx
  411c1e:	jnp    0x411bfe
  411c20:	sub    eax,DWORD PTR [edx+0x76ffcb2d]
  411c26:	xchg   edx,eax
  411c27:	mov    eax,0xabb7bf38
  411c2c:	mov    esi,DWORD PTR [edx+0x6d]
  411c2f:	pop    ds
  411c30:	mov    edi,0x45d3d3a4
  411c35:	pop    ss
  411c36:	pop    ds
  411c37:	mov    ah,0x7e
  411c39:	gs into 
  411c3b:	jno    0x411bfa
  411c3d:	add    ebp,DWORD PTR [eax+0x7df1c7d0]
  411c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c44:	cmp    eax,0xc2372203
  411c49:	(bad)  
  411c4a:	enter  0xe7a9,0x30
  411c4e:	repnz push edx
  411c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c51:	add    ebp,DWORD PTR [ebp+eiz*2-0x7c]
  411c55:	and    al,0xc4
  411c57:	pusha  
  411c58:	ret    0x2822
  411c5b:	sbb    ebx,DWORD PTR [edx-0x3b199a06]
  411c61:	ss pop eax
  411c63:	jne    0x411cc1
  411c65:	sub    eax,0x864f0ed7
  411c6a:	pop    ebx
  411c6b:	mov    cl,0x73
  411c6d:	push   ds
  411c6e:	in     eax,0x8
  411c70:	das    
  411c71:	icebp  
  411c72:	pop    edx
  411c73:	xor    al,BYTE PTR [ecx+edx*1+0x2bb9fa72]
  411c7a:	push   esp
  411c7b:	cmp    al,0x95
  411c7d:	dec    edx
  411c7e:	sbb    esi,DWORD PTR [ebp+0x2]
  411c81:	pop    esi
  411c82:	and    DWORD PTR fs:[esi+0x0],0xffffffc9
  411c87:	pop    eax
  411c88:	ret    
  411c89:	push   eax
  411c8a:	iret   
  411c8b:	xchg   ebp,eax
  411c8c:	fcomp  DWORD PTR [ebx+edx*4]
  411c8f:	sbb    BYTE PTR [esi+0x19],bl
  411c92:	loop   0x411c3e
  411c94:	sahf   
  411c95:	js     0x411cca
  411c97:	jecxz  0x411cb9
  411c99:	adc    edx,DWORD PTR [edi-0x9]
  411c9c:	lea    esp,[ebx+eiz*4-0x76]
  411ca0:	dec    esp
  411ca1:	out    dx,eax
  411ca2:	cmp    eax,0xf2527b9e
  411ca7:	sub    esp,ebx
  411ca9:	jae    0x411c53
  411cab:	ins    BYTE PTR es:[edi],dx
  411cac:	or     eax,0x99dae956
  411cb1:	cmp    BYTE PTR [eax],al
  411cb3:	das    
  411cb4:	cli    
  411cb5:	add    esi,edx
  411cb7:	jne    0x411cd5
  411cb9:	leave  
  411cba:	je     0x411d12
  411cbc:	adc    esi,DWORD PTR [esi+0x15]
  411cbf:	cwde   
  411cc0:	cli    
  411cc1:	inc    ebx
  411cc2:	pop    esp
  411cc3:	mov    dl,0xcf
  411cc5:	xor    eax,DWORD PTR ds:0x2275c70a
  411ccb:	inc    esp
  411ccc:	push   0x796af9ce
  411cd1:	mov    ds,WORD PTR [ebp-0x49a60b24]
  411cd7:	xor    ah,BYTE PTR [edx+0x47]
  411cda:	mov    ds:0x907865d0,al
  411cdf:	sahf   
  411ce0:	mov    al,0xc3
  411ce2:	xor    al,0x64
  411ce4:	sar    DWORD PTR [edx-0x49],cl
  411ce7:	jb     0x411cf6
  411ce9:	icebp  
  411cea:	xor    ah,al
  411cec:	fs and al,0x7d
  411cef:	sub    al,0x39
  411cf1:	sub    ah,BYTE PTR [eax]
  411cf3:	adc    eax,DWORD PTR [ebp+0x6750534b]
  411cf9:	cmp    bh,bl
  411cfb:	test   al,0xe3
  411cfd:	les    eax,FWORD PTR [edx+ebp*8-0x37db2865]
  411d04:	(bad)  
  411d05:	inc    DWORD PTR [eax]
  411d07:	inc    eax
  411d08:	or     ah,BYTE PTR fs:[esi+0x71]
  411d0c:	fist   DWORD PTR [ecx+0xd776965]
  411d12:	mov    edi,0x9eb7e7b6
  411d17:	(bad)  
  411d18:	fbld   TBYTE PTR [eax-0x4]
  411d1b:	jle    0x411d65
  411d1d:	xor    eax,0x25bd203a
  411d22:	mov    BYTE PTR ss:[esi],0x1f
  411d26:	cld    
  411d27:	test   eax,0xadba29ed
  411d2c:	fwait
  411d2d:	xor    BYTE PTR [edi],bh
  411d2f:	mov    eax,0x198c74ff
  411d34:	cmc    
  411d35:	loopne 0x411ce2
  411d37:	xchg   DWORD PTR [ebx+0x4d],ebx
  411d3a:	mov    al,ds:0xa544718
  411d3f:	clc    
  411d40:	sti    
  411d41:	repnz stos DWORD PTR es:[edi],eax
  411d43:	cs loop 0x411d0f
  411d46:	daa    
  411d47:	cmp    BYTE PTR [esi],dh
  411d49:	sub    edx,DWORD PTR [ecx-0x80]
  411d4c:	add    eax,0x6ea4dbf9
  411d51:	inc    esi
  411d52:	rcr    DWORD PTR [eax+esi*4-0x4ef985e9],0x9a
  411d5a:	inc    esi
  411d5b:	jmp    0x845d:0xb322b6f6
  411d62:	and    al,0x1d
  411d64:	cmp    ah,BYTE PTR [edx-0x18eba3ca]
  411d6a:	cmc    
  411d6b:	stos   DWORD PTR es:[edi],eax
  411d6c:	jb     0x411d89
  411d6e:	popa   
  411d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d70:	jmp    0x411d5c
  411d72:	pop    ecx
  411d73:	xchg   ebp,eax
  411d74:	xor    al,0x6c
  411d76:	mov    al,ds:0xdbe06d95
  411d7b:	and    al,0x94
  411d7d:	inc    edx
  411d7e:	dec    ebx
  411d7f:	in     eax,dx
  411d80:	sub    edi,DWORD PTR [edi-0x7f353d31]
  411d86:	pushf  
  411d87:	popa   
  411d88:	fist   DWORD PTR ds:0x9766fbcf
  411d8e:	popa   
  411d8f:	shr    DWORD PTR [ecx],1
  411d91:	out    dx,al
  411d92:	cmc    
  411d93:	jmp    0x5ac922d8
  411d98:	imul   ebx,esi,0xce6fc4af
  411d9e:	enter  0xb547,0x95
  411da2:	(bad)
  411da6:	mov    ecx,0x30fbe0f5
  411dab:	lds    ecx,FWORD PTR [ecx+esi*2]
  411dae:	test   ch,al
  411db0:	imul   DWORD PTR [ecx]
  411db2:	jl     0x411dbc
  411db4:	(bad)  
  411db6:	xchg   edx,eax
  411db7:	mov    dh,0x65
  411db9:	ins    BYTE PTR es:[edi],dx
  411dba:	push   ecx
  411dbb:	mov    BYTE PTR [esi+0x3a],dh
  411dbe:	pop    esi
  411dbf:	mov    es,WORD PTR [edx]
  411dc1:	cmp    eax,DWORD PTR [edi+0x743a5e21]
  411dc7:	ror    BYTE PTR [ecx-0x3f],1
  411dca:	stos   BYTE PTR es:[edi],al
  411dcb:	mov    DWORD PTR [esi],esp
  411dcd:	ins    BYTE PTR es:[edi],dx
  411dce:	imul   BYTE PTR [ebx]
  411dd0:	jb     0x411e0d
  411dd2:	dec    ecx
  411dd3:	pop    esp
  411dd4:	jle    0x411d65
  411dd6:	out    dx,eax
  411dd7:	push   es
  411dd8:	call   0xb3f58ab9
  411ddd:	fcom   st(5)
  411ddf:	lock cdq 
  411de1:	std    
  411de2:	aad    0x9
  411de4:	pusha  
  411de5:	lock cdq 
  411de7:	dec    eax
  411de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de9:	lds    ecx,FWORD PTR [eax]
  411deb:	retf   
  411dec:	cs mov ch,0xcb
  411def:	out    dx,eax
  411df0:	test   DWORD PTR [bx+di],edi
  411df3:	adc    BYTE PTR [edi-0x15],0x6c
  411df7:	sbb    eax,DWORD PTR [edi-0x7e]
  411dfa:	test   esi,ebp
  411dfc:	pop    DWORD PTR [ecx+ebp*1-0x4e4102a4]
  411e03:	push   ebx
  411e04:	inc    BYTE PTR [edi-0x1b]
  411e07:	inc    ebx
  411e08:	mov    ecx,0x89e2a364
  411e0d:	aaa    
  411e0e:	loop   0x411dc2
  411e10:	(bad)  
  411e11:	mov    dh,0x57
  411e13:	(bad)  
  411e14:	push   cs
  411e15:	les    esi,FWORD PTR [esi]
  411e17:	adc    BYTE PTR [esi-0x2e7ed7a9],0xaa
  411e1e:	mov    dl,BYTE PTR [ebp+0x17c08bdf]
  411e24:	adc    eax,0x9bad0240
  411e29:	lods   eax,DWORD PTR ds:[esi]
  411e2a:	cli    
  411e2b:	pop    esi
  411e2c:	cdq    
  411e2d:	adc    BYTE PTR cs:[ebx],ah
  411e30:	jle    0x411e07
  411e32:	add    DWORD PTR [edi+0xd6ce04d],ebp
  411e38:	sub    eax,0x5b7b58ac
  411e3d:	add    bl,BYTE PTR [eax-0x44f84023]
  411e43:	cwde   
  411e44:	mov    edi,0xc3960c85
  411e49:	and    al,0x33
  411e4b:	lahf   
  411e4c:	(bad)
  411e4f:	inc    edi
  411e50:	jb     0x411dd8
  411e52:	mov    bl,0x3c
  411e54:	xchg   DWORD PTR [esi],eax
  411e56:	cmp    eax,0xc36515cc
  411e5b:	or     DWORD PTR [ebx+0x70c02bbb],esp
  411e61:	outs   dx,DWORD PTR ds:[esi]
  411e62:	jp     0x411e14
  411e64:	push   es
  411e65:	mov    eax,ds:0x1f2bdd60
  411e6a:	ja     0x411e10
  411e6c:	cmp    DWORD PTR [edi+0x40],edx
  411e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e70:	mov    ebx,0x3c1ae411
  411e75:	fwait
  411e76:	dec    esi
  411e77:	outs   dx,DWORD PTR ds:[esi]
  411e78:	fstp   TBYTE PTR [eax+0x71b0ecf]
  411e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e7f:	repz inc esp
  411e81:	mov    ds:0x8c2c021,eax
  411e86:	jno    0x411eb0
  411e88:	adc    DWORD PTR [ebx],esp
  411e8a:	jmp    0x411ec0
  411e8c:	popf   
  411e8d:	mov    cl,0x46
  411e8f:	(bad)  
  411e90:	jmp    0xefca:0xc347b16f
  411e97:	jmp    0xf27f:0x5a6e5197
  411e9e:	gs retf 
  411ea0:	jno    0x411e4b
  411ea2:	or     eax,0xa8053874
  411ea7:	pop    es
  411ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ea9:	out    dx,eax
  411eaa:	jmp    0x3034:0x447f3d21
  411eb1:	js     0x411ed7
  411eb3:	(bad)  
  411eb4:	adc    al,0x60
  411eb6:	neg    DWORD PTR [ebx+0x52]
  411eb9:	mov    al,0xb6
  411ebb:	add    BYTE PTR [ebx-0x453e9d40],0x25
  411ec2:	pushf  
  411ec3:	push   cs
  411ec4:	clc    
  411ec5:	cs jle 0x411e6b
  411ec8:	mov    ebx,0x8b8f5989
  411ecd:	ins    DWORD PTR es:[edi],dx
  411ece:	addr16 ja 0x411e7f
  411ed1:	arpl   WORD PTR [ecx-0x43],dx
  411ed4:	(bad)  
  411ed5:	sar    BYTE PTR [ebx+ebx*2-0x16],1
  411ed9:	loop   0x411eb4
  411edb:	popa   
  411edc:	shl    DWORD PTR [ebp+0x2e],0x5
  411ee0:	les    eax,FWORD PTR [edi-0x42]
  411ee3:	add    eax,0xd958efeb
  411ee8:	sub    esi,ebx
  411eea:	mov    bl,0x57
  411eec:	aad    0x9f
  411eee:	clc    
  411eef:	retf   
  411ef0:	xor    DWORD PTR [ebx+0x40],edi
  411ef3:	into   
  411ef4:	mul    DWORD PTR [edx-0x43]
  411ef7:	loop   0x411ef9
  411ef9:	jmp    0xf54:0xea2a513c
  411f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f01:	push   ds
  411f02:	and    dh,BYTE PTR [ecx+0x62]
  411f05:	sbb    eax,0x508fa1c3
  411f0a:	ret    0xe2e4
  411f0d:	fld    TBYTE PTR [edi]
  411f0f:	jge    0x411f43
  411f11:	push   esp
  411f12:	pop    ebx
  411f13:	dec    edx
  411f14:	cli    
  411f15:	sar    BYTE PTR [ecx],cl
  411f17:	das    
  411f18:	loopne 0x411eb5
  411f1a:	fwait
  411f1b:	aam    0xdd
  411f1d:	sbb    DWORD PTR [eax+0x52],esp
  411f20:	sbb    cl,al
  411f22:	push   ebx
  411f23:	les    edi,FWORD PTR [ebx+esi*8]
  411f26:	pop    edx
  411f27:	repz inc eax
  411f29:	push   ss
  411f2a:	mov    ch,0xe9
  411f2c:	pop    ss
  411f2d:	outs   dx,DWORD PTR ds:[esi]
  411f2e:	repnz adc DWORD PTR [ebx],ebx
  411f31:	pop    edx
  411f32:	bound  eax,QWORD PTR [edx]
  411f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f35:	push   edi
  411f36:	cld    
  411f37:	sar    DWORD PTR [esi+0x4c824c60],cl
  411f3d:	pop    ebx
  411f3e:	call   0xf3f9:0xb0874718
  411f45:	xchg   ebx,eax
  411f46:	mov    ?,ebx
  411f48:	mov    DWORD PTR [ecx+ebp*1+0x7f4eb464],0xa30074a9
  411f53:	fisttp QWORD PTR [ebp+0x55e5a444]
  411f59:	test   al,0x89
  411f5b:	inc    ecx
  411f5c:	or     al,0x86
  411f5e:	jp     0x411f62
  411f60:	ret    
  411f61:	cmp    al,0x91
  411f63:	sub    BYTE PTR cs:[eax-0x2a095056],0x56
  411f6b:	shl    BYTE PTR [eax+0x42d3697f],1
  411f71:	xor    eax,0xa2f1211c
  411f76:	xor    eax,0xfa96604d
  411f7b:	std    
  411f7c:	inc    ebx
  411f7d:	add    al,BYTE PTR [ebx+eax*1+0xe]
  411f81:	dec    esi
  411f82:	std    
  411f83:	inc    esi
  411f84:	push   cs
  411f85:	(bad)  
  411f86:	mov    ecx,0x731b31c6
  411f8b:	fs push ds
  411f8d:	test   BYTE PTR [eax+0x60903b54],0x4c
  411f94:	xchg   BYTE PTR [esi],ah
  411f96:	loopne 0x411f6e
  411f98:	(bad)  
  411f99:	pop    eax
  411f9a:	mov    ah,0x77
  411f9c:	xchg   BYTE PTR [ebp-0x46],bh
  411f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fa0:	in     al,0x46
  411fa2:	jne    0x411faa
  411fa4:	repz loopne 0x412006
  411fa7:	lds    ecx,FWORD PTR [edi-0x64d82732]
  411fad:	add    eax,0x8e54f2ac
  411fb2:	push   0x271b8826
  411fb7:	cmovp  esp,ecx
  411fba:	hlt    
  411fbb:	push   ss
  411fbc:	jl     0x411f78
  411fbe:	sub    dh,BYTE PTR [esi+esi*2+0x14b12f7f]
  411fc5:	cdq    
  411fc6:	les    edx,FWORD PTR [eax+edi*8-0x69]
  411fca:	mov    esi,0x5af08cae
  411fcf:	dec    edi
  411fd0:	adc    eax,DWORD PTR [esi]
  411fd2:	in     eax,0x39
  411fd4:	jo     0x41203d
  411fd6:	in     eax,dx
  411fd7:	dec    ecx
  411fd8:	sub    eax,0xfec50680
  411fdd:	mov    bl,0x9a
  411fdf:	fmul   QWORD PTR [edi+0x41]
  411fe2:	add    ecx,edi
  411fe4:	xor    BYTE PTR [edi+eiz*1],0x3c
  411fe8:	pop    es
  411fe9:	mov    eax,0xe5701158
  411fee:	mov    DWORD PTR [ebp-0x6badab9c],edi
  411ff4:	pop    ss
  411ff5:	add    eax,0x3b5a0def
  411ffa:	jb     0x412022
  411ffc:	sahf   
  411ffd:	das    
  411ffe:	jecxz  0x411fac
  412000:	fcmovnbe st,st(1)
  412002:	out    dx,al
  412003:	repnz pop eax
  412005:	cmp    DWORD PTR [eax-0x4b19c39d],ecx
  41200b:	test   eax,0xc1eb986f
  412010:	popa   
  412011:	push   ebp
  412012:	mov    esi,eax
  412014:	dec    esi
  412015:	sub    eax,0x198df94c
  41201a:	pusha  
  41201b:	shl    BYTE PTR [ecx],1
  41201d:	inc    esi
  41201e:	push   ecx
  41201f:	inc    edi
  412020:	out    0x43,al
  412022:	test   DWORD PTR [esi+edx*1-0x3a9794c6],edi
  412029:	cli    
  41202a:	push   esp
  41202b:	xchg   esi,eax
  41202d:	rol    DWORD PTR [esi-0x66],0x2
  412031:	(bad)  
  412032:	clc    
  412033:	stc    
  412034:	inc    edx
  412035:	mov    esi,0x8c0f9c35
  41203a:	sbb    BYTE PTR [eax+0x6b],ch
  41203d:	mov    edx,DWORD PTR [ecx+0x7bf98fa9]
  412043:	clc    
  412044:	fdivr  QWORD PTR [esi+0x3c]
  412047:	mov    edx,0x4c7baa95
  41204c:	and    al,0xce
  41204e:	lea    ebp,ds:0x72106ca7
  412054:	cwde   
  412055:	sub    ch,BYTE PTR [eax]
  412057:	adc    eax,0xea698b79
  41205c:	fisttp WORD PTR [ebx+ebp*8]
  41205f:	jmp    0xf42623d
  412064:	inc    esi
  412065:	xor    DWORD PTR [edx+0x54adaa65],eax
  41206b:	inc    ebp
  41206c:	imul   DWORD PTR ds:0x3b3e7eec
  412072:	sub    cl,BYTE PTR [eax+0x0]
  412075:	push   edx
  412076:	mov    eax,DWORD PTR [ebx]
  412078:	xor    cl,bh
  41207a:	xchg   ebx,eax
  41207b:	push   es
  41207c:	ficomp WORD PTR [ebx+0x330417de]
  412082:	xor    BYTE PTR [esi],0xa9
  412085:	les    edi,FWORD PTR [ecx-0x6e]
  412088:	lock push ss
  41208a:	mov    bh,0x13
  41208c:	sub    ebp,DWORD PTR [edi+ecx*1-0x23fb7b]
  412093:	dec    DWORD PTR [ebx-0x37cc07b3]
  412099:	mov    eax,DWORD PTR [ebp+0x10]
  41209c:	add    ecx,esi
  41209e:	mov    DWORD PTR [eax],ecx
  4120a0:	pop    edi
  4120a1:	pop    esi
  4120a2:	pop    ebx
  4120a3:	leave  
  4120a4:	ret    0xc
  4120a7:	add    BYTE PTR [eax-0x5ffbffbe],ah
  4120ad:	inc    edx
  4120ae:	add    BYTE PTR [eax],cl
  4120b0:	mov    al,ds:0xa00c0042
  4120b5:	inc    edx
  4120b6:	add    BYTE PTR [eax],dl
  4120b8:	mov    al,ds:0xa0140042
  4120bd:	inc    edx
  4120be:	add    BYTE PTR [eax],bl
  4120c0:	mov    al,ds:0xa01c0042
  4120c5:	inc    edx
  4120c6:	add    BYTE PTR [eax],al
  4120c8:	rol    BYTE PTR [edx+0x0],1
  4120cb:	add    al,0xd0
  4120cd:	inc    edx
  4120ce:	add    BYTE PTR [eax],cl
  4120d0:	rol    BYTE PTR [edx+0x0],1
  4120d3:	or     al,0xd0
  4120d5:	inc    edx
  4120d6:	add    BYTE PTR [eax],dl
  4120d8:	rol    BYTE PTR [edx+0x0],1
  4120db:	adc    al,0xd0
  4120dd:	inc    edx
  4120de:	add    BYTE PTR [eax],bl
  4120e0:	rol    BYTE PTR [edx+0x0],1
  4120e3:	sbb    al,0xd0
  4120e5:	inc    edx
	...
  4120f2:	add    BYTE PTR [eax],al
  4120f4:	adc    al,0x15
  4120f6:	into   
  4120f7:	dec    ebp
  4120f8:	add    BYTE PTR [eax],al
  4120fa:	add    BYTE PTR [eax],al
  4120fc:	add    al,BYTE PTR [eax]
  4120fe:	add    BYTE PTR [eax],al
  412100:	cmp    eax,0xe0000000
  412105:	and    DWORD PTR [ecx],eax
  412107:	add    al,ah
  412109:	adc    eax,0x1
  41210e:	add    BYTE PTR [eax],al
  412110:	add    BYTE PTR [eax],al
  412112:	add    BYTE PTR [eax],al
  412114:	adc    al,0x15
  412116:	into   
  412117:	dec    ebp
  412118:	add    BYTE PTR [eax],al
  41211a:	add    BYTE PTR [eax],al
  41211c:	inc    edx
  41211d:	and    DWORD PTR [ecx],eax
  41211f:	add    BYTE PTR [ecx],al
  412121:	add    BYTE PTR [eax],al
  412123:	add    BYTE PTR [ecx],al
  412125:	add    BYTE PTR [eax],al
  412127:	add    BYTE PTR [ecx],al
  412129:	add    BYTE PTR [eax],al
  41212b:	add    BYTE PTR [eax],bh
  41212d:	and    DWORD PTR [ecx],eax
  41212f:	add    BYTE PTR [ecx+eiz*1],bh
  412132:	add    DWORD PTR [eax],eax
  412134:	inc    eax
  412135:	and    DWORD PTR [ecx],eax
  412137:	add    dl,ch
  412139:	sub    eax,DWORD PTR [eax]
  41213b:	add    BYTE PTR [esi+0x21],cl
  41213e:	add    DWORD PTR [eax],eax
  412140:	add    BYTE PTR [eax],al
  412142:	inc    esp
  412143:	jns    0x4121b3
  412145:	popa   
  412146:	ins    DWORD PTR es:[edi],dx
  412147:	imul   ebp,DWORD PTR [ecx+0x43],0x747361
  41214e:	aas    
  41214f:	inc    ebx
  412150:	ins    BYTE PTR es:[edi],dx
  412151:	outs   dx,DWORD PTR ds:[esi]
  412152:	jae    0x4121b9
  412154:	push   edi
  412155:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  41215c:	popa   
  41215d:	je     0x4121c8
  41215f:	outs   dx,DWORD PTR ds:[esi]
  412160:	outs   dx,BYTE PTR ds:[esi]
  412161:	inc    ebx
  412162:	ins    BYTE PTR es:[edi],dx
  412163:	outs   dx,DWORD PTR ds:[esi]
  412164:	jae    0x4121cb
  412166:	push   edi
  412167:	imul   eax,DWORD PTR [eax],0x4004290
  41216d:	nop
  41216e:	inc    edx
  41216f:	add    BYTE PTR [eax],cl
  412171:	nop
  412172:	inc    edx
  412173:	add    BYTE PTR [eax+edx*4],cl
  412176:	inc    edx
  412177:	add    BYTE PTR [eax],dl
  412179:	nop
  41217a:	inc    edx
  41217b:	add    BYTE PTR [eax+edx*4],dl
  41217e:	inc    edx
  41217f:	add    BYTE PTR [eax],bl
  412181:	nop
  412182:	inc    edx
  412183:	add    BYTE PTR [eax+edx*4],bl
  412186:	inc    edx
  412187:	add    BYTE PTR [eax],ah
  412189:	nop
  41218a:	inc    edx
  41218b:	add    BYTE PTR [eax+edx*4],ah
  41218e:	inc    edx
  41218f:	add    BYTE PTR [eax],ch
  412191:	nop
  412192:	inc    edx
  412193:	add    BYTE PTR [eax],al
  412195:	mov    al,0x42
  412197:	add    BYTE PTR [eax+esi*4],al
  41219a:	inc    edx
  41219b:	add    BYTE PTR [eax],cl
  41219d:	mov    al,0x42
  41219f:	add    BYTE PTR [eax+esi*4],cl
  4121a2:	inc    edx
  4121a3:	add    BYTE PTR [eax],dl
  4121a5:	mov    al,0x42
  4121a7:	add    BYTE PTR [eax+esi*4],dl
  4121aa:	inc    edx
  4121ab:	add    BYTE PTR [eax],bl
  4121ad:	mov    al,0x42
  4121af:	add    BYTE PTR [eax+esi*4],bl
  4121b2:	inc    edx
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	rol    BYTE PTR [edx+0x0],0x4
  4121b9:	rol    BYTE PTR [edx+0x0],0x8
  4121bd:	rol    BYTE PTR [edx+0x0],0xc
  4121c1:	rol    BYTE PTR [edx+0x0],0x10
  4121c5:	rol    BYTE PTR [edx+0x0],0x14
  4121c9:	rol    BYTE PTR [edx+0x0],0x18
  4121cd:	rol    BYTE PTR [edx+0x0],0x1c
  4121d1:	rol    BYTE PTR [edx+0x0],0x0
	...
  4121dd:	add    BYTE PTR [eax],al
  4121df:	add    BYTE PTR [edx+0x53],dl
  4121e2:	inc    esp
  4121e3:	push   ebx
  4121e4:	jbe    0x4121f0
  4121e6:	jb     0x412176
  4121e8:	dec    esp
  4121e9:	push   ecx
  4121ea:	dec    ebx
  4121eb:	dec    edx
  4121ec:	call   0x4a79:0x6318cb1f
  4121f3:	sbb    al,0x1
  4121f5:	add    BYTE PTR [eax],al
  4121f7:	add    BYTE PTR [ebx+0x3a],al
  4121fa:	pop    esp
  4121fb:	inc    ebx
  4121fc:	jne    0x412270
  4121fe:	jb     0x412265
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	je     0x412247
  412203:	popa   
  412204:	je     0x412267
  412206:	pop    esp
  412207:	dec    ebp
  412208:	outs   dx,DWORD PTR ds:[esi]
  412209:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412211:	ins    BYTE PTR es:[edi],dx
  412212:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412219:	dec    esi
  41221a:	gs ja  0x41221d
  41221d:	mov    edx,DWORD PTR [ebp-0x14]
  412220:	sub    esp,0xe4
  412226:	push   ebx
  412227:	push   edi
  412228:	mov    eax,ebx
  41222a:	xchg   ecx,eax
  41222b:	mov    eax,DWORD PTR [ebp+0x8]
  41222e:	mov    edi,0xf89c85b5
  412233:	cmp    eax,edi
  412235:	jne    0x4125c9
  41223b:	mov    eax,DWORD PTR [ebp+0xc]
  41223e:	cmp    eax,0xf89c85b4
  412243:	jne    0x4125c9
  412249:	mov    eax,DWORD PTR [ebp+0x24]
  41224c:	mov    DWORD PTR [ebp-0x4],eax
  41224f:	mov    BYTE PTR [ebp-0x18],0x3
  412253:	mov    BYTE PTR [ebp-0x17],0x1c
  412257:	mov    BYTE PTR [ebp-0x16],0x1
  41225b:	mov    BYTE PTR [ebp-0x15],0x4f
  41225f:	mov    BYTE PTR [ebp-0x14],0x4e
  412263:	mov    BYTE PTR [ebp-0x13],0x78
  412267:	mov    BYTE PTR [ebp-0x20],0xd
  41226b:	mov    BYTE PTR [ebp-0x1f],0xf
  41226f:	mov    BYTE PTR [ebp-0x1e],0x1d
  412273:	mov    BYTE PTR [ebp-0x1d],0xe
  412277:	mov    BYTE PTR [ebp-0x1c],0x4f
  41227b:	mov    BYTE PTR [ebp-0x1b],0x4e
  41227f:	mov    BYTE PTR [ebp-0x1a],0x78
  412283:	mov    BYTE PTR [ebp-0x28],0xf
  412287:	xor    edx,edx
  412289:	mov    BYTE PTR [ebp-0x27],dl
  41228c:	mov    BYTE PTR [ebp-0x26],0x4
  412290:	mov    BYTE PTR [ebp-0x25],0xf3
  412294:	mov    BYTE PTR [ebp-0x24],0x19
  412298:	mov    BYTE PTR [ebp-0x23],0x8
  41229c:	push   esi
  41229d:	mov    BYTE PTR [ebp-0x22],0x1
  4122a1:	mov    BYTE PTR [ebp-0x21],0x78
  4122a5:	xor    esi,esi
  4122a7:	mov    eax,0xf6
  4122ac:	lea    ecx,[ebp+esi*1-0x18]
  4122b0:	movzx  ebx,BYTE PTR [ecx]
  4122b3:	xor    ebx,0x72
  4122b6:	add    ebx,eax
  4122b8:	inc    esi
  4122b9:	mov    BYTE PTR [ecx],bl
  4122bb:	cmp    esi,0x6
  4122be:	jb     0x4122ac
  4122c0:	xor    esi,esi
  4122c2:	lea    ecx,[ebp+esi*1-0x20]
  4122c6:	movzx  ebx,BYTE PTR [ecx]
  4122c9:	xor    ebx,0x72
  4122cc:	add    ebx,eax
  4122ce:	inc    esi
  4122cf:	mov    BYTE PTR [ecx],bl
  4122d1:	cmp    esi,0x7
  4122d4:	jb     0x4122c2
  4122d6:	xor    esi,esi
  4122d8:	lea    ecx,[ebp+esi*1-0x28]
  4122dc:	movzx  ebx,BYTE PTR [ecx]
  4122df:	xor    ebx,0x72
  4122e2:	add    ebx,eax
  4122e4:	push   0x8
  4122e6:	mov    BYTE PTR [ecx],bl
  4122e8:	inc    esi
  4122e9:	pop    ecx
  4122ea:	cmp    esi,ecx
  4122ec:	jb     0x4122d8
  4122ee:	lea    eax,[ebp-0x2c]
  4122f1:	mov    DWORD PTR [ebp-0x8],eax
  4122f4:	mov    esi,DWORD PTR [ebp-0x8]
  4122f7:	mov    eax,0x7113fcef
  4122fc:	mov    DWORD PTR [esi],eax
  4122fe:	mov    esi,DWORD PTR [ebp-0x2c]
  412301:	cmp    esi,eax
  412303:	jne    0x41230f
  412305:	mov    DWORD PTR [ebp-0x8],edi
  412308:	mov    DWORD PTR [ebp-0x8],0xf89c85e2
  41230f:	mov    eax,DWORD PTR [ebp-0x4]
  412312:	mov    eax,DWORD PTR [eax+0x18c]
  412318:	cmp    DWORD PTR [eax],edx
  41231a:	jne    0x412573
  412320:	mov    eax,DWORD PTR [ebp-0x4]
  412323:	mov    eax,DWORD PTR [eax+0x17c]
  412329:	mov    DWORD PTR [eax],edx
  41232b:	mov    eax,DWORD PTR [ebp-0x4]
  41232e:	mov    eax,DWORD PTR [eax+0x180]
  412334:	mov    DWORD PTR [eax],edx
  412336:	mov    edi,0x4e39
  41233b:	mov    eax,0x4f8e
  412340:	mov    WORD PTR [ebp-0x78],ax
  412344:	mov    eax,edi
  412346:	mov    WORD PTR [ebp-0x76],ax
  41234a:	add    eax,0x45
  41234d:	mov    WORD PTR [ebp-0x74],ax
  412351:	lea    eax,[edi+0x5]
  412354:	mov    WORD PTR [ebp-0x72],ax
  412358:	mov    eax,0x4fa9
  41235d:	mov    WORD PTR [ebp-0x70],ax
  412361:	lea    eax,[edi+0x4]
  412364:	mov    WORD PTR [ebp-0x6e],ax
  412368:	add    eax,0x3b
  41236b:	mov    WORD PTR [ebp-0x6c],ax
  41236f:	lea    eax,[edi-0x6]
  412372:	mov    WORD PTR [ebp-0x6a],ax
  412376:	mov    eax,edi
  412378:	mov    WORD PTR [ebp-0x68],ax
  41237c:	add    eax,0xfffffff9
  41237f:	mov    WORD PTR [ebp-0x66],ax
  412383:	mov    eax,0x99fe
  412388:	mov    WORD PTR [ebp-0x64],ax
  41238c:	mov    eax,0x828d
  412391:	mov    WORD PTR [ebp-0x62],ax
  412395:	mov    eax,0xd788
  41239a:	mov    WORD PTR [ebp-0x60],ax
  41239e:	add    eax,0x24
  4123a1:	mov    WORD PTR [ebp-0x5e],ax
  4123a5:	mov    eax,0x27a3
  4123aa:	mov    WORD PTR [ebp-0x5c],ax
  4123ae:	mov    eax,0x47a3
  4123b3:	mov    WORD PTR [ebp-0x5a],ax
  4123b7:	lea    eax,[edi+0x3]
  4123ba:	mov    WORD PTR [ebp-0x58],ax
  4123be:	mov    DWORD PTR [ebp-0x10],0xf304000f
  4123c5:	mov    BYTE PTR [ebp-0xc],0x19
  4123c9:	mov    BYTE PTR [ebp-0xb],cl
  4123cc:	mov    WORD PTR [ebp-0xa],0x7801
  4123d2:	lea    eax,[ebp-0x10]
  4123d5:	mov    dl,BYTE PTR [eax]
  4123d7:	xor    dl,0x72
  4123da:	sub    dl,0xa
  4123dd:	mov    BYTE PTR [eax],dl
  4123df:	inc    eax
  4123e0:	dec    ecx
  4123e1:	jne    0x4123d5
  4123e3:	lea    eax,[ebp-0x10]
  4123e6:	mov    DWORD PTR [ebp-0xb8],eax
  4123ec:	lea    eax,[ebp-0xbc]
  4123f2:	push   eax
  4123f3:	mov    eax,DWORD PTR [ebp+0xc]
  4123f6:	mov    ebx,0x7510897
  4123fb:	xor    eax,ebx
  4123fd:	mov    esi,0x3272de
  412402:	add    eax,esi
  412404:	push   eax
  412405:	mov    eax,DWORD PTR [ebp-0x4]
  412408:	add    eax,0x66
  41240b:	push   eax
  41240c:	mov    eax,DWORD PTR [ebp-0x4]
  41240f:	mov    eax,DWORD PTR [eax+0x198]
  412415:	mov    DWORD PTR [ebp-0xbc],0x1
  41241f:	push   DWORD PTR [eax]
  412421:	mov    eax,DWORD PTR [ebp+0x10]
  412424:	call   eax
  412426:	mov    ecx,DWORD PTR [ebp+0x8]
  412429:	xor    ecx,ebx
  41242b:	add    ecx,esi
  41242d:	mov    DWORD PTR [ebp-0x8],eax
  412430:	cmp    eax,ecx
  412432:	jne    0x41244d
  412434:	mov    eax,ds:0x33730bee
  412439:	or     eax,0x22150bef
  41243e:	mov    ds:0x33730bee,eax
  412443:	add    eax,0x3372e90f
  412448:	mov    ds:0x33730bee,eax
  41244d:	mov    ecx,0x4f81
  412452:	mov    eax,ecx
  412454:	mov    WORD PTR [ebp-0x40],ax
  412458:	mov    eax,0x4e74
  41245d:	mov    edx,eax
  41245f:	mov    WORD PTR [ebp-0x3e],dx
  412463:	lea    edx,[ecx+0x1b]
  412466:	mov    WORD PTR [ebp-0x3c],dx
  41246a:	add    edx,0xfffffff8
  41246d:	mov    WORD PTR [ebp-0x3a],dx
  412471:	lea    edx,[ecx+0x29]
  412474:	mov    WORD PTR [ebp-0x38],dx
  412478:	add    edx,0x5
  41247b:	mov    WORD PTR [ebp-0x36],dx
  41247f:	lea    edx,[ecx+0x1f]
  412482:	mov    WORD PTR [ebp-0x34],dx
  412486:	mov    WORD PTR [ebp-0x32],cx
  41248a:	mov    ecx,edi
  41248c:	mov    WORD PTR [ebp-0x30],cx
  412490:	lea    ecx,[edx+0x1]
  412493:	mov    edx,ecx
  412495:	mov    WORD PTR [ebp-0x54],dx
  412499:	mov    edx,eax
  41249b:	mov    WORD PTR [ebp-0x52],dx
  41249f:	add    edx,0x8
  4124a2:	mov    WORD PTR [ebp-0x50],dx
  4124a6:	mov    WORD PTR [ebp-0x4e],ax
  4124aa:	lea    eax,[ecx-0x17]
  4124ad:	mov    WORD PTR [ebp-0x4c],ax
  4124b1:	add    eax,0x5
  4124b4:	mov    WORD PTR [ebp-0x4a],ax
  4124b8:	lea    eax,[ecx-0x21]
  4124bb:	mov    WORD PTR [ebp-0x48],ax
  4124bf:	mov    WORD PTR [ebp-0x46],cx
  4124c3:	mov    WORD PTR [ebp-0x44],di
  4124c7:	mov    eax,DWORD PTR [ebp+0x8]
  4124ca:	movzx  ecx,WORD PTR [ebp-0x54]
  4124ce:	xor    eax,ebx
  4124d0:	add    eax,esi
  4124d2:	xor    eax,ecx
  4124d4:	mov    WORD PTR [ebp-0x54],ax
  4124d8:	mov    eax,DWORD PTR [ebp+0x8]
  4124db:	movzx  ecx,WORD PTR [ebp-0x40]
  4124df:	xor    eax,ebx
  4124e1:	add    eax,esi
  4124e3:	xor    eax,ecx
  4124e5:	mov    WORD PTR [ebp-0x40],ax
  4124e9:	xor    eax,eax
  4124eb:	mov    WORD PTR [ebp-0xd0],ax
  4124f2:	mov    WORD PTR [ebp-0xe4],ax
  4124f9:	mov    edi,DWORD PTR [ebp+0x24]
  4124fc:	lea    eax,[ebp-0xd0]
  412502:	lea    edx,[ebp-0x54]
  412505:	mov    DWORD PTR [ebp-0xbc],0x2
  41250f:	mov    DWORD PTR [ebp-0xb8],eax
  412515:	call   0x414ea6
  41251a:	mov    DWORD PTR [ebp-0xb4],eax
  412520:	lea    eax,[ebp-0xbc]
  412526:	push   eax
  412527:	mov    eax,DWORD PTR [ebp+0xc]
  41252a:	xor    eax,ebx
  41252c:	add    eax,esi
  41252e:	push   eax
  41252f:	lea    eax,[ebp-0x78]
  412532:	push   eax
  412533:	push   DWORD PTR [ebp-0x8]
  412536:	mov    eax,DWORD PTR [ebp+0x10]
  412539:	call   eax
  41253b:	mov    edi,DWORD PTR [ebp+0x24]
  41253e:	lea    eax,[ebp-0xe4]
  412544:	lea    edx,[ebp-0x40]
  412547:	mov    DWORD PTR [ebp-0xb8],eax
  41254d:	call   0x414ea6
  412552:	mov    DWORD PTR [ebp-0xb4],eax
  412558:	lea    eax,[ebp-0xbc]
  41255e:	push   eax
  41255f:	mov    eax,DWORD PTR [ebp+0xc]
  412562:	xor    eax,ebx
  412564:	add    eax,esi
  412566:	push   eax
  412567:	lea    eax,[ebp-0x78]
  41256a:	push   eax
  41256b:	push   DWORD PTR [ebp-0x8]
  41256e:	mov    eax,DWORD PTR [ebp+0x10]
  412571:	call   eax
  412573:	mov    eax,DWORD PTR [ebp+0x14]
  412576:	push   DWORD PTR [ebp-0x4]
  412579:	push   DWORD PTR [ebp+0x20]
  41257c:	push   DWORD PTR [ebp+0x1c]
  41257f:	push   DWORD PTR [ebp+0x18]
  412582:	push   DWORD PTR [ebp+0x10]
  412585:	push   DWORD PTR [ebp+0x8]
  412588:	push   DWORD PTR [ebp+0xc]
  41258b:	call   0x41374a
  412590:	add    DWORD PTR [ebp-0x4],eax
  412593:	mov    eax,DWORD PTR [ebp-0x4]
  412596:	mov    eax,DWORD PTR [ebp-0x4]
  412599:	mov    edi,DWORD PTR [eax+0x190]
  41259f:	mov    eax,DWORD PTR [ebp-0x4]
  4125a2:	mov    eax,DWORD PTR [eax+0x18c]
  4125a8:	mov    esi,DWORD PTR [eax]
  4125aa:	lea    ecx,[ebp+0x4]
  4125ad:	mov    edx,DWORD PTR [ecx]
  4125af:	cmp    edx,esi
  4125b1:	jb     0x4125c8
  4125b3:	mov    eax,DWORD PTR [edi]
  4125b5:	mov    edi,DWORD PTR [eax+0x3c]
  4125b8:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  4125bc:	add    edi,esi
  4125be:	cmp    edx,edi
  4125c0:	jae    0x4125c8
  4125c2:	sub    eax,esi
  4125c4:	add    eax,edx
  4125c6:	mov    DWORD PTR [ecx],eax
  4125c8:	pop    esi
  4125c9:	pop    edi
  4125ca:	pop    ebx
  4125cb:	leave  
  4125cc:	ret    0x20
  4125cf:	push   edi
  4125d0:	push   esi
  4125d1:	push   ebx
  4125d2:	push   ebp
  4125d3:	mov    ebp,esp
  4125d5:	mov    eax,DWORD PTR [ebp+0x24]
  4125d8:	add    DWORD PTR [ebp+0x28],eax
  4125db:	push   eax
  4125dc:	cld    
  4125dd:	mov    esi,DWORD PTR [ebp+0x18]
  4125e0:	add    DWORD PTR [ebp+0x1c],esi
  4125e3:	push   esi
  4125e4:	mov    esi,DWORD PTR [ebp+0x14]
  4125e7:	lods   eax,DWORD PTR ds:[esi]
  4125e8:	xchg   edx,eax
  4125e9:	push   edx
  4125ea:	mov    cl,BYTE PTR [esi-0x2]
  4125ed:	or     eax,0xffffffff
  4125f0:	shl    eax,cl
  4125f2:	not    eax
  4125f4:	push   eax
  4125f5:	mov    cl,dh
  4125f7:	or     eax,0xffffffff
  4125fa:	shl    eax,cl
  4125fc:	not    eax
  4125fe:	push   eax
  4125ff:	add    cl,dl
  412601:	mov    edi,esi
  412603:	sub    esp,0xc
  412606:	sub    eax,eax
  412608:	inc    eax
  412609:	push   eax
  41260a:	push   eax
  41260b:	push   eax
  41260c:	push   eax
  41260d:	push   eax
  41260e:	push   edi
  41260f:	sub    esi,esi
  412611:	push   esi
  412612:	or     ebx,0xffffffff
  412615:	mov    eax,0x300
  41261a:	shl    eax,cl
  41261c:	lea    ecx,[eax+0x736]
  412622:	mov    eax,0x4000400
  412627:	shr    ecx,1
  412629:	rep stos DWORD PTR es:[edi],eax
  41262b:	push   0x5
  41262d:	pop    ecx
  41262e:	call   0x412919
  412633:	loop   0x41262e
  412635:	lea    esi,[esi]
  412637:	lea    edi,[edi]
  412639:	mov    edi,DWORD PTR [ebp-0x4]
  41263c:	mov    eax,DWORD PTR [ebp-0x10]
  41263f:	sub    edi,DWORD PTR [ebp+0x24]
  412642:	and    eax,edi
  412644:	mov    DWORD PTR [ebp-0x18],eax
  412647:	mov    al,0x0
  412649:	call   0x412931
  41264e:	jne    0x4126e9
  412654:	mov    cl,BYTE PTR [ebp-0xc]
  412657:	and    edi,DWORD PTR [ebp-0x14]
  41265a:	shl    edi,cl
  41265c:	sub    cl,0x8
  41265f:	neg    cl
  412661:	shr    esi,cl
  412663:	pop    eax
  412664:	add    edi,esi
  412666:	pop    esi
  412667:	lea    edi,[edi+edi*2]
  41266a:	shl    edi,0x8
  41266d:	cmp    al,0x7
  41266f:	pop    edx
  412670:	lea    ecx,[esi+edi*2+0xe6c]
  412677:	push   ecx
  412678:	push   esi
  412679:	mov    esi,0x100
  41267e:	push   eax
  41267f:	mov    al,0x1
  412681:	jb     0x4126b7
  412683:	mov    edi,DWORD PTR [ebp-0x4]
  412686:	sub    edi,DWORD PTR [ebp-0x24]
  412689:	movzx  edi,BYTE PTR [edi]
  41268c:	mov    ebp,DWORD PTR [ebp-0x34]
  41268f:	shl    edi,1
  412691:	mov    ecx,esi
  412693:	and    esi,edi
  412695:	add    ecx,esi
  412697:	lea    ebp,[ebp+ecx*2+0x0]
  41269b:	call   0x412950
  4126a0:	mov    ecx,eax
  4126a2:	shr    esi,0x8
  4126a5:	and    ecx,0x1
  4126a8:	cmp    esi,ecx
  4126aa:	mov    esi,0x100
  4126af:	jne    0x4126bf
  4126b1:	cmp    eax,esi
  4126b3:	jb     0x41268c
  4126b5:	jmp    0x4126cb
  4126b7:	mov    ebp,DWORD PTR [ebp-0x34]
  4126ba:	call   0x412950
  4126bf:	inc    eax
  4126c0:	inc    esi
  4126c1:	sub    eax,0x1
  4126c4:	sub    esi,0x1
  4126c7:	cmp    eax,esi
  4126c9:	jb     0x4126b7
  4126cb:	pop    edx
  4126cc:	inc    edx
  4126cd:	cmp    edx,0x5
  4126d0:	dec    edx
  4126d1:	mov    ecx,edx
  4126d3:	jb     0x4126e4
  4126d5:	inc    edx
  4126d6:	cmp    edx,0xb
  4126d9:	dec    edx
  4126da:	mov    cl,0x4
  4126dc:	dec    cl
  4126de:	jb     0x4126e4
  4126e0:	mov    cl,0x7
  4126e2:	dec    cl
  4126e4:	sub    edx,ecx
  4126e6:	push   edx
  4126e7:	jmp    0x412738
  4126e9:	mov    al,0xc1
  4126eb:	dec    al
  4126ed:	call   0x412941
  4126f2:	jne    0x412708
  4126f4:	pop    eax
  4126f5:	pop    edi
  4126f6:	pop    edx
  4126f7:	pop    ecx
  4126f8:	pop    edx
  4126f9:	pop    ecx
  4126fa:	push   DWORD PTR [esp]
  4126fd:	push   ecx
  4126fe:	push   edx
  4126ff:	mov    edx,0x664
  412704:	mov    cl,0x0
  412706:	jmp    0x41277b
  412708:	mov    al,0xcd
  41270a:	dec    al
  41270c:	call   0x412941
  412711:	jne    0x412741
  412713:	mov    al,0xf1
  412715:	dec    al
  412717:	call   0x412931
  41271c:	jne    0x412771
  41271e:	pop    eax
  41271f:	cmp    al,0x7
  412721:	mov    al,0x9
  412723:	jb     0x412727
  412725:	mov    al,0xb
  412727:	push   eax
  412728:	mov    esi,DWORD PTR [ebp-0x4]
  41272b:	sub    esi,DWORD PTR [ebp-0x24]
  41272e:	cmp    esi,DWORD PTR [ebp+0x24]
  412731:	jb     0x412908
  412737:	lods   al,BYTE PTR ds:[esi]
  412738:	mov    edi,DWORD PTR [ebp-0x4]
  41273b:	stos   BYTE PTR es:[edi],al
  41273c:	jmp    0x4128cf
  412741:	mov    al,0xd8
  412743:	call   0x412941
  412748:	mov    esi,DWORD PTR [ebp-0x28]
  41274b:	je     0x412768
  41274d:	mov    al,0xe4
  41274f:	call   0x412941
  412754:	mov    esi,DWORD PTR [ebp-0x2c]
  412757:	je     0x412762
  412759:	mov    esi,DWORD PTR [ebp-0x30]
  41275c:	mov    ecx,DWORD PTR [ebp-0x2c]
  41275f:	mov    DWORD PTR [ebp-0x30],ecx
  412762:	mov    ecx,DWORD PTR [ebp-0x28]
  412765:	mov    DWORD PTR [ebp-0x2c],ecx
  412768:	mov    ecx,DWORD PTR [ebp-0x24]
  41276b:	mov    DWORD PTR [ebp-0x28],ecx
  41276e:	mov    DWORD PTR [ebp-0x24],esi
  412771:	pop    eax
  412772:	pop    edi
  412773:	pop    ecx
  412774:	mov    edx,0xa68
  412779:	mov    cl,0x8
  41277b:	add    edx,edi
  41277d:	push   edx
  41277e:	push   edi
  41277f:	cmp    al,0x7
  412781:	mov    al,cl
  412783:	jb     0x412787
  412785:	add    al,0x3
  412787:	push   eax
  412788:	mov    ebp,DWORD PTR [ebp-0x34]
  41278b:	call   0x41294e
  412790:	jne    0x4127a6
  412792:	mov    eax,DWORD PTR [ebp-0x18]
  412795:	mov    edi,DWORD PTR [ebp-0x34]
  412798:	shl    eax,0x3
  41279b:	sub    ecx,ecx
  41279d:	push   0x8
  41279f:	pop    esi
  4127a0:	lea    edi,[edi+eax*2+0x4]
  4127a4:	jmp    0x4127db
  4127a6:	mov    ebp,DWORD PTR [ebp-0x34]
  4127a9:	add    ebp,0x2
  4127ac:	call   0x41294e
  4127b1:	jne    0x4127cb
  4127b3:	mov    eax,DWORD PTR [ebp-0x18]
  4127b6:	mov    edi,DWORD PTR [ebp-0x34]
  4127b9:	shl    eax,0x3
  4127bc:	push   0x8
  4127be:	pop    ecx
  4127bf:	push   0x8
  4127c1:	pop    esi
  4127c2:	lea    edi,[edi+eax*2+0x104]
  4127c9:	jmp    0x4127db
  4127cb:	mov    edi,0x204
  4127d0:	add    edi,DWORD PTR [ebp-0x34]
  4127d3:	push   0x10
  4127d5:	pop    ecx
  4127d6:	mov    esi,0x100
  4127db:	mov    DWORD PTR [ebp-0x1c],ecx
  4127de:	sub    eax,eax
  4127e0:	inc    eax
  4127e1:	mov    ebp,edi
  4127e3:	call   0x412950
  4127e8:	mov    ecx,eax
  4127ea:	sub    ecx,esi
  4127ec:	jb     0x4127e1
  4127ee:	add    DWORD PTR [ebp-0x1c],ecx
  4127f1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4127f5:	jae    0x4128ab
  4127fb:	add    DWORD PTR [ebp-0x3c],0x7
  4127ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  412802:	cmp    ecx,0x4
  412805:	jb     0x41280a
  412807:	push   0x3
  412809:	pop    ecx
  41280a:	mov    edi,DWORD PTR [ebp-0x38]
  41280d:	shl    ecx,0x6
  412810:	sub    eax,eax
  412812:	inc    eax
  412813:	push   0x40
  412815:	pop    esi
  412816:	lea    edi,[edi+ecx*2+0x360]
  41281d:	mov    ebp,edi
  41281f:	call   0x412950
  412824:	mov    ecx,eax
  412826:	sub    ecx,esi
  412828:	jb     0x41281d
  41282a:	mov    DWORD PTR [ebp-0x18],ecx
  41282d:	mov    DWORD PTR [ebp-0x24],ecx
  412830:	cmp    ecx,0x4
  412833:	jb     0x4128a8
  412835:	mov    esi,ecx
  412837:	and    DWORD PTR [ebp-0x24],0x1
  41283b:	shr    esi,1
  41283d:	or     DWORD PTR [ebp-0x24],0x2
  412841:	dec    esi
  412842:	cmp    ecx,0xe
  412845:	jae    0x412860
  412847:	mov    eax,0x2af
  41284c:	sub    eax,ecx
  41284e:	mov    ecx,esi
  412850:	shl    BYTE PTR [ebp-0x24],cl
  412853:	add    eax,DWORD PTR [ebp-0x24]
  412856:	shl    eax,1
  412858:	add    eax,DWORD PTR [ebp-0x38]
  41285b:	mov    DWORD PTR [ebp-0x34],eax
  41285e:	jmp    0x41288d
  412860:	sub    esi,0x4
  412863:	call   0x41290d
  412868:	shr    ebx,1
  41286a:	shl    DWORD PTR [ebp-0x24],1
  41286d:	cmp    DWORD PTR [ebp-0x20],ebx
  412870:	jb     0x412878
  412872:	inc    DWORD PTR [ebp-0x24]
  412875:	sub    DWORD PTR [ebp-0x20],ebx
  412878:	dec    esi
  412879:	jne    0x412863
  41287b:	mov    eax,0x644
  412880:	add    eax,DWORD PTR [ebp-0x38]
  412883:	mov    DWORD PTR [ebp-0x34],eax
  412886:	shl    DWORD PTR [ebp-0x24],0x4
  41288a:	push   0x4
  41288c:	pop    esi
  41288d:	sub    edi,edi
  41288f:	inc    edi
  412890:	mov    eax,edi
  412892:	mov    ebp,DWORD PTR [ebp-0x34]
  412895:	call   0x412950
  41289a:	test   al,0x1
  41289c:	je     0x4128a1
  41289e:	or     DWORD PTR [ebp-0x24],edi
  4128a1:	shl    edi,1
  4128a3:	dec    esi
  4128a4:	jne    0x412892
  4128a6:	jmp    0x4128a8
  4128a8:	inc    DWORD PTR [ebp-0x24]
  4128ab:	mov    ecx,DWORD PTR [ebp-0x1c]
  4128ae:	add    ecx,0x2
  4128b1:	mov    edi,DWORD PTR [ebp-0x4]
  4128b4:	mov    eax,edi
  4128b6:	sub    eax,DWORD PTR [ebp+0x24]
  4128b9:	cmp    DWORD PTR [ebp-0x24],eax
  4128bc:	ja     0x412908
  4128be:	mov    esi,edi
  4128c0:	sub    esi,DWORD PTR [ebp-0x24]
  4128c3:	mov    edx,DWORD PTR [ebp+0x28]
  4128c6:	lods   al,BYTE PTR ds:[esi]
  4128c7:	stos   BYTE PTR es:[edi],al
  4128c8:	cmp    edi,edx
  4128ca:	jae    0x4128cf
  4128cc:	dec    ecx
  4128cd:	jne    0x4128c6
  4128cf:	mov    DWORD PTR [ebp-0x4],edi
  4128d2:	movzx  esi,al
  4128d5:	cmp    edi,DWORD PTR [ebp+0x28]
  4128d8:	jb     0x412639
  4128de:	call   0x41290d
  4128e3:	sub    eax,eax
  4128e5:	lea    ebp,[esp+0x3c]
  4128e9:	mov    edx,DWORD PTR [ebp+0x20]
  4128ec:	mov    esi,DWORD PTR [ebp-0x8]
  4128ef:	sub    esi,DWORD PTR [ebp+0x18]
  4128f2:	mov    DWORD PTR [edx],esi
  4128f4:	mov    edx,DWORD PTR [ebp+0x2c]
  4128f7:	mov    edi,DWORD PTR [ebp-0x4]
  4128fa:	sub    edi,DWORD PTR [ebp+0x24]
  4128fd:	mov    DWORD PTR [edx],edi
  4128ff:	leave  
  412900:	pop    ebx
  412901:	pop    esi
  412902:	pop    edi
  412903:	ret    0x1c
  412906:	pop    esi
  412907:	pop    eax
  412908:	sub    eax,eax
  41290a:	inc    eax
  41290b:	jmp    0x4128e5
  41290d:	cmp    ebx,0x1000000
  412913:	jb     0x412916
  412915:	ret    
  412916:	shl    ebx,0x8
  412919:	push   esi
  41291a:	mov    esi,DWORD PTR [ebp-0x8]
  41291d:	cmp    esi,DWORD PTR [ebp+0x1c]
  412920:	jae    0x412906
  412922:	mov    eax,DWORD PTR [ebp-0x20]
  412925:	shl    eax,0x8
  412928:	lods   al,BYTE PTR ds:[esi]
  412929:	mov    DWORD PTR [ebp-0x20],eax
  41292c:	mov    DWORD PTR [ebp-0x8],esi
  41292f:	pop    esi
  412930:	ret    
  412931:	mov    ecx,DWORD PTR [ebp-0x3c]
  412934:	movzx  eax,al
  412937:	shl    ecx,0x4
  41293a:	add    eax,DWORD PTR [ebp-0x18]
  41293d:	add    eax,ecx
  41293f:	jmp    0x412947
  412941:	movzx  eax,al
  412944:	add    eax,DWORD PTR [ebp-0x3c]
  412947:	mov    ebp,DWORD PTR [ebp-0x38]
  41294a:	lea    ebp,[ebp+eax*2+0x0]
  41294e:	sub    eax,eax
  412950:	lea    ebp,[ebp+eax*2+0x0]
  412954:	cmp    ebx,0x1000000
  41295a:	jae    0x412978
  41295c:	mov    ecx,DWORD PTR [esp+0x38]
  412960:	shl    DWORD PTR [esp+0x20],0x8
  412965:	cmp    ecx,DWORD PTR [esp+0x5c]
  412969:	jae    0x412907
  41296b:	mov    dl,BYTE PTR [ecx]
  41296d:	inc    DWORD PTR [esp+0x38]
  412971:	shl    ebx,0x8
  412974:	mov    BYTE PTR [esp+0x20],dl
  412978:	mov    ecx,ebx
  41297a:	movzx  edx,WORD PTR [ebp+0x0]
  41297e:	shr    ecx,0xb
  412981:	imul   ecx,edx
  412984:	cmp    DWORD PTR [esp+0x20],ecx
  412988:	jae    0x4129a1
  41298a:	mov    ebx,ecx
  41298c:	mov    ecx,0x800
  412991:	sub    ecx,edx
  412993:	shr    ecx,0x5
  412996:	add    WORD PTR [ebp+0x0],cx
  41299a:	add    eax,eax
  41299c:	lea    ebp,[esp+0x40]
  4129a0:	ret    
  4129a1:	shr    edx,0x5
  4129a4:	sub    DWORD PTR [esp+0x20],ecx
  4129a8:	sub    ebx,ecx
  4129aa:	sub    WORD PTR [ebp+0x0],dx
  4129ae:	add    eax,eax
  4129b0:	add    eax,0x1
  4129b3:	lea    ebp,[esp+0x40]
  4129b7:	ret    
  4129b8:	push   ebp
  4129b9:	mov    ebp,esp
  4129bb:	sub    esp,0x104
  4129c1:	push   ebx
  4129c2:	push   esi
  4129c3:	push   edi
  4129c4:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4129cb:	mov    DWORD PTR [ebp-0x44],0xf89c85b4
  4129d2:	mov    eax,DWORD PTR [ebp+0x8]
  4129d5:	mov    DWORD PTR [ebp+0x8],eax
  4129d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4129db:	mov    ebx,0x7510897
  4129e0:	xor    ecx,ebx
  4129e2:	mov    eax,0x3272de
  4129e7:	add    ecx,eax
  4129e9:	mov    DWORD PTR [ebp-0x28],ecx
  4129ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4129ef:	xor    ecx,ebx
  4129f1:	add    ecx,eax
  4129f3:	mov    DWORD PTR [ebp-0x40],ecx
  4129f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4129f9:	xor    ecx,ebx
  4129fb:	add    ecx,eax
  4129fd:	mov    DWORD PTR [ebp-0x3c],ecx
  412a00:	mov    ecx,DWORD PTR [ebp-0x10]
  412a03:	xor    ecx,ebx
  412a05:	add    ecx,eax
  412a07:	mov    DWORD PTR [ebp-0xa0],ecx
  412a0d:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  412a14:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b5
  412a1b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b1
  412a22:	push   0x24
  412a24:	pop    ecx
  412a25:	mov    DWORD PTR [ebp-0x2c],ecx
  412a28:	mov    DWORD PTR [ebp-0x2c],ecx
  412a2b:	push   0x64
  412a2d:	pop    ecx
  412a2e:	mov    DWORD PTR [ebp-0x2c],ecx
  412a31:	mov    DWORD PTR [ebp-0x2c],ecx
  412a34:	mov    DWORD PTR [ebp-0x2c],0x4c
  412a3b:	mov    DWORD PTR [ebp-0x2c],0x42
  412a42:	mov    ecx,DWORD PTR [ebp-0x10]
  412a45:	xor    ecx,ebx
  412a47:	add    ecx,eax
  412a49:	mov    DWORD PTR [ebp-0x2c],ecx
  412a4c:	mov    ecx,DWORD PTR [ebp-0x10]
  412a4f:	xor    ecx,ebx
  412a51:	add    ecx,eax
  412a53:	mov    DWORD PTR [ebp-0x2c],ecx
  412a56:	mov    DWORD PTR [ebp-0x24],0x256
  412a5d:	mov    DWORD PTR [ebp-0x34],0x34
  412a64:	mov    DWORD PTR [ebp-0x14],0x78
  412a6b:	lea    edi,[ebp-0xe4]
  412a71:	lea    esi,[ebp-0x104]
  412a77:	call   0x4136b9
  412a7c:	dec    DWORD PTR [ebp-0x14]
  412a7f:	jne    0x412a6b
  412a81:	dec    DWORD PTR [ebp-0x34]
  412a84:	jne    0x412a64
  412a86:	dec    DWORD PTR [ebp-0x24]
  412a89:	jne    0x412a5d
  412a8b:	mov    DWORD PTR [ebp-0x24],0x400c
  412a92:	mov    eax,DWORD PTR [ebp-0x10]
  412a95:	xor    eax,ebx
  412a97:	mov    esi,0x3272de
  412a9c:	add    eax,esi
  412a9e:	mov    DWORD PTR [ebp-0x1c],eax
  412aa1:	mov    eax,DWORD PTR [ebp-0x10]
  412aa4:	and    DWORD PTR [ebp-0x94],0x0
  412aab:	xor    eax,ebx
  412aad:	add    eax,esi
  412aaf:	mov    DWORD PTR [ebp-0x38],eax
  412ab2:	mov    eax,fs:0x18
  412ab8:	mov    DWORD PTR [ebp-0x94],eax
  412abe:	mov    eax,DWORD PTR [eax+0x30]
  412ac1:	mov    DWORD PTR [ebp-0x98],eax
  412ac7:	mov    eax,DWORD PTR [eax+0xc]
  412aca:	mov    DWORD PTR [ebp-0xc0],eax
  412ad0:	mov    eax,DWORD PTR [ebp+0x8]
  412ad3:	lea    ecx,[ebp-0x94]
  412ad9:	mov    DWORD PTR [eax+0x1a0],ecx
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	lea    ecx,[ebp-0x98]
  412ae8:	mov    DWORD PTR [eax+0x1a4],ecx
  412aee:	mov    eax,DWORD PTR [ebp+0x8]
  412af1:	push   DWORD PTR [ebp+0x8]
  412af4:	lea    ecx,[ebp-0xc0]
  412afa:	mov    DWORD PTR [eax+0x1a8],ecx
  412b00:	call   0x414e77
  412b05:	mov    ecx,DWORD PTR [ebp-0x10]
  412b08:	xor    ecx,ebx
  412b0a:	add    ecx,esi
  412b0c:	cmp    ecx,eax
  412b0e:	je     0x412deb
  412b14:	mov    eax,DWORD PTR [ebp+0x8]
  412b17:	mov    eax,DWORD PTR [eax+0x194]
  412b1d:	mov    ecx,DWORD PTR [eax]
  412b1f:	mov    eax,DWORD PTR [ebp+0x8]
  412b22:	mov    eax,DWORD PTR [eax+0x194]
  412b28:	mov    eax,DWORD PTR [eax]
  412b2a:	add    eax,DWORD PTR [ecx+0x3c]
  412b2d:	mov    ecx,DWORD PTR [ebp+0x8]
  412b30:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412b36:	lea    edx,[ebp-0xc4]
  412b3c:	push   edx
  412b3d:	mov    edx,DWORD PTR [ebp+0x8]
  412b40:	mov    edx,DWORD PTR [edx+0x18c]
  412b46:	mov    edx,DWORD PTR [edx]
  412b48:	add    edx,DWORD PTR [eax+0x88]
  412b4e:	push   0x4
  412b50:	push   DWORD PTR [eax+0x8c]
  412b56:	push   edx
  412b57:	call   DWORD PTR [ecx+0x1c]
  412b5a:	push   DWORD PTR [ebp+0x8]
  412b5d:	mov    edi,DWORD PTR [ebp+0x8]
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    edx,DWORD PTR [eax+0x1b8]
  412b69:	mov    DWORD PTR [ebp-0x68],0xe0c0f04
  412b70:	mov    DWORD PTR [ebp-0x64],0x108051f
  412b77:	mov    WORD PTR [ebp-0x60],0x7839
  412b7d:	mov    DWORD PTR [ebp-0x90],0x3f0f21
  412b87:	mov    DWORD PTR [ebp-0x8c],0x4390e19
  412b91:	mov    DWORD PTR [ebp-0x88],0x2a190008
  412b9b:	mov    DWORD PTR [ebp-0x84],0xe1d050d
  412ba5:	mov    DWORD PTR [ebp-0x80],0x78391f01
  412bac:	mov    DWORD PTR [ebp-0x7c],0x3f0f21
  412bb3:	mov    DWORD PTR [ebp-0x78],0x4390e19
  412bba:	mov    DWORD PTR [ebp-0x74],0x2a190008
  412bc1:	mov    DWORD PTR [ebp-0x70],0xe1d050d
  412bc8:	mov    DWORD PTR [ebp-0x6c],0x78131f01
  412bcf:	call   0x414ea6
  412bd4:	push   eax
  412bd5:	mov    eax,DWORD PTR [ebp+0x8]
  412bd8:	mov    eax,DWORD PTR [eax+0x1a8]
  412bde:	push   DWORD PTR [eax]
  412be0:	call   0x414b48
  412be5:	test   eax,eax
  412be7:	jne    0x412c39
  412be9:	mov    eax,DWORD PTR [ebp+0x8]
  412bec:	mov    eax,DWORD PTR [eax+0x1d8]
  412bf2:	mov    edi,DWORD PTR [ebp+0x8]
  412bf5:	add    eax,0x4
  412bf8:	mov    DWORD PTR [ebp-0x20],eax
  412bfb:	mov    eax,DWORD PTR [ebp+0x8]
  412bfe:	mov    edx,DWORD PTR [eax+0x1b8]
  412c04:	call   0x414ea6
  412c09:	push   eax
  412c0a:	mov    eax,DWORD PTR [ebp-0x20]
  412c0d:	call   DWORD PTR [eax]
  412c0f:	test   eax,eax
  412c11:	jne    0x412c39
  412c13:	mov    eax,DWORD PTR [ebp+0x8]
  412c16:	mov    eax,DWORD PTR [eax+0x1d8]
  412c1c:	mov    edi,DWORD PTR [ebp+0x8]
  412c1f:	add    eax,0x10
  412c22:	mov    DWORD PTR [ebp-0x20],eax
  412c25:	mov    eax,DWORD PTR [ebp+0x8]
  412c28:	mov    edx,DWORD PTR [eax+0x1b8]
  412c2e:	call   0x414ea6
  412c33:	push   eax
  412c34:	mov    eax,DWORD PTR [ebp-0x20]
  412c37:	call   DWORD PTR [eax]
  412c39:	mov    eax,DWORD PTR [ebp-0x10]
  412c3c:	mov    ecx,DWORD PTR [ebp-0x24]
  412c3f:	xor    eax,ebx
  412c41:	add    eax,esi
  412c43:	cmp    eax,ecx
  412c45:	je     0x412dc4
  412c4b:	mov    eax,DWORD PTR [ebp-0x44]
  412c4e:	xor    eax,ebx
  412c50:	mov    ecx,0xffcd8d22
  412c55:	sub    ecx,eax
  412c57:	add    ecx,DWORD PTR [ebp-0x24]
  412c5a:	mov    eax,DWORD PTR [ebp-0x1c]
  412c5d:	cmp    eax,ecx
  412c5f:	ja     0x412dc4
  412c65:	mov    DWORD PTR [ebp-0x34],0x0
  412c6c:	push   DWORD PTR [ebp+0x8]
  412c6f:	mov    edi,DWORD PTR [ebp+0x8]
  412c72:	mov    eax,DWORD PTR [ebp+0x8]
  412c75:	mov    edx,DWORD PTR [eax+0x1b4]
  412c7b:	call   0x414ea6
  412c80:	push   eax
  412c81:	mov    eax,DWORD PTR [ebp+0x8]
  412c84:	mov    eax,DWORD PTR [eax+0x1a8]
  412c8a:	push   DWORD PTR [eax]
  412c8c:	call   0x414b48
  412c91:	mov    ecx,DWORD PTR [ebp+0x8]
  412c94:	mov    ecx,DWORD PTR [ecx+0x19c]
  412c9a:	mov    DWORD PTR [ecx],eax
  412c9c:	mov    eax,DWORD PTR [ebp+0x8]
  412c9f:	mov    edi,DWORD PTR [eax+0x1d8]
  412ca5:	mov    esi,DWORD PTR [ebp+0x8]
  412ca8:	xor    eax,eax
  412caa:	lea    edx,[ebp-0x7c]
  412cad:	call   0x414edc
  412cb2:	push   eax
  412cb3:	mov    eax,DWORD PTR [ebp+0x8]
  412cb6:	mov    eax,DWORD PTR [eax+0x19c]
  412cbc:	push   DWORD PTR [eax]
  412cbe:	call   DWORD PTR [edi+0x8]
  412cc1:	mov    DWORD PTR [ebp-0x20],eax
  412cc4:	mov    eax,DWORD PTR [ebp+0x8]
  412cc7:	mov    edi,DWORD PTR [eax+0x1d8]
  412ccd:	mov    esi,DWORD PTR [ebp+0x8]
  412cd0:	xor    eax,eax
  412cd2:	lea    edx,[ebp-0x90]
  412cd8:	call   0x414edc
  412cdd:	push   eax
  412cde:	mov    eax,DWORD PTR [ebp+0x8]
  412ce1:	mov    eax,DWORD PTR [eax+0x19c]
  412ce7:	push   DWORD PTR [eax]
  412ce9:	call   DWORD PTR [edi+0x8]
  412cec:	and    DWORD PTR [ebp-0x8],0x0
  412cf0:	mov    eax,DWORD PTR [ebp-0x8]
  412cf3:	and    eax,0x7
  412cf6:	add    eax,0x31
  412cf9:	push   eax
  412cfa:	call   DWORD PTR [ebp-0x20]
  412cfd:	test   eax,eax
  412cff:	jne    0x412d06
  412d01:	and    DWORD PTR [ebp-0x14],eax
  412d04:	jmp    0x412d2e
  412d06:	mov    eax,DWORD PTR [ebp+0x8]
  412d09:	mov    edi,DWORD PTR [eax+0x1d8]
  412d0f:	mov    esi,DWORD PTR [ebp+0x8]
  412d12:	xor    eax,eax
  412d14:	lea    edx,[ebp-0x68]
  412d17:	call   0x414edc
  412d1c:	push   eax
  412d1d:	mov    eax,DWORD PTR [ebp+0x8]
  412d20:	mov    eax,DWORD PTR [eax+0x198]
  412d26:	push   DWORD PTR [eax]
  412d28:	call   DWORD PTR [edi+0x8]
  412d2b:	mov    DWORD PTR [ebp-0x14],eax
  412d2e:	inc    DWORD PTR [ebp-0x8]
  412d31:	cmp    DWORD PTR [ebp-0x8],0x10
  412d35:	jb     0x412cf0
  412d37:	mov    eax,DWORD PTR [ebp-0x44]
  412d3a:	mov    esi,DWORD PTR [ebp+0x8]
  412d3d:	xor    eax,ebx
  412d3f:	mov    edi,0x3272de
  412d44:	add    eax,edi
  412d46:	lea    edx,[ebp-0xe4]
  412d4c:	call   0x414edc
  412d51:	push   eax
  412d52:	mov    eax,DWORD PTR [ebp-0x10]
  412d55:	mov    esi,DWORD PTR [ebp+0x8]
  412d58:	xor    eax,ebx
  412d5a:	add    eax,edi
  412d5c:	lea    edx,[ebp-0x104]
  412d62:	call   0x414edc
  412d67:	push   eax
  412d68:	call   DWORD PTR [ebp-0x14]
  412d6b:	mov    ecx,DWORD PTR [ebp-0x10]
  412d6e:	xor    ecx,ebx
  412d70:	add    ecx,edi
  412d72:	cmp    ecx,eax
  412d74:	jne    0x412d7d
  412d76:	mov    DWORD PTR [ebp-0x34],0x1
  412d7d:	mov    eax,DWORD PTR [ebp-0x44]
  412d80:	mov    ecx,DWORD PTR [ebp-0x1c]
  412d83:	xor    eax,ebx
  412d85:	lea    eax,[eax+ecx*1+0x3272de]
  412d8c:	mov    DWORD PTR [ebp-0x1c],eax
  412d8f:	mov    eax,DWORD PTR [ebp-0x34]
  412d92:	test   eax,eax
  412d94:	je     0x412da8
  412d96:	mov    eax,DWORD PTR [ebp-0x44]
  412d99:	mov    ecx,DWORD PTR [ebp-0x38]
  412d9c:	xor    eax,ebx
  412d9e:	lea    eax,[eax+ecx*1+0x3272de]
  412da5:	mov    DWORD PTR [ebp-0x38],eax
  412da8:	mov    eax,DWORD PTR [ebp-0x44]
  412dab:	xor    eax,ebx
  412dad:	mov    ecx,0xffcd8d22
  412db2:	sub    ecx,eax
  412db4:	add    ecx,DWORD PTR [ebp-0x24]
  412db7:	mov    eax,DWORD PTR [ebp-0x1c]
  412dba:	cmp    eax,ecx
  412dbc:	jbe    0x412c65
  412dc2:	mov    esi,edi
  412dc4:	mov    eax,DWORD PTR [ebp-0x38]
  412dc7:	mov    ecx,DWORD PTR [ebp-0x1c]
  412dca:	cmp    ecx,eax
  412dcc:	jne    0x412ddf
  412dce:	push   DWORD PTR [ebp+0x8]
  412dd1:	lea    eax,[ebp-0x40]
  412dd4:	push   eax
  412dd5:	call   0x415955
  412dda:	mov    DWORD PTR [ebp-0x28],eax
  412ddd:	jmp    0x412deb
  412ddf:	mov    eax,DWORD PTR [ebp-0x28]
  412de2:	mov    ecx,DWORD PTR [ebp-0x44]
  412de5:	xor    ecx,ebx
  412de7:	add    ecx,esi
  412de9:	xor    DWORD PTR [eax],ecx
  412deb:	mov    eax,DWORD PTR [ebp-0x10]
  412dee:	mov    ecx,DWORD PTR [ebp-0x28]
  412df1:	xor    eax,ebx
  412df3:	add    eax,esi
  412df5:	cmp    eax,ecx
  412df7:	je     0x413597
  412dfd:	mov    eax,DWORD PTR [ebp-0x10]
  412e00:	mov    ecx,DWORD PTR [ebp-0x40]
  412e03:	xor    eax,ebx
  412e05:	add    eax,esi
  412e07:	cmp    eax,ecx
  412e09:	je     0x413597
  412e0f:	mov    eax,DWORD PTR [ebp-0x10]
  412e12:	xor    eax,ebx
  412e14:	add    eax,esi
  412e16:	jmp    0x412e34
  412e18:	mov    edi,DWORD PTR [ebp-0x28]
  412e1b:	mov    cl,al
  412e1d:	and    cl,0x1f
  412e20:	or     dl,0xff
  412e23:	sub    dl,cl
  412e25:	add    BYTE PTR [edi+eax*1],dl
  412e28:	mov    ecx,DWORD PTR [ebp-0x44]
  412e2b:	xor    ecx,ebx
  412e2d:	lea    eax,[eax+ecx*1+0x3272de]
  412e34:	mov    ecx,DWORD PTR [ebp-0x40]
  412e37:	cmp    eax,ecx
  412e39:	jb     0x412e18
  412e3b:	mov    eax,DWORD PTR [ebp-0x40]
  412e3e:	mov    DWORD PTR [ebp-0x24],eax
  412e41:	mov    eax,DWORD PTR [ebp-0x28]
  412e44:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  412e4b:	mov    DWORD PTR [ebp-0xbc],eax
  412e51:	mov    edi,0xf89c85b4
  412e56:	mov    DWORD PTR [ebp-0x1c],edi
  412e59:	mov    eax,DWORD PTR [ebp-0x38]
  412e5c:	xor    eax,ebx
  412e5e:	add    eax,esi
  412e60:	mov    DWORD PTR [ebp-0xc],eax
  412e63:	mov    eax,DWORD PTR [ebp-0x38]
  412e66:	xor    eax,ebx
  412e68:	add    eax,esi
  412e6a:	mov    DWORD PTR [ebp-0x8],eax
  412e6d:	mov    DWORD PTR [ebp-0x48],0xf89c85d5
  412e74:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  412e7b:	mov    eax,DWORD PTR [ebp-0x38]
  412e7e:	mov    ecx,DWORD PTR [ebp-0x24]
  412e81:	xor    eax,ebx
  412e83:	add    eax,esi
  412e85:	cmp    ecx,eax
  412e87:	je     0x41309a
  412e8d:	jmp    0x413076
  412e92:	mov    ecx,DWORD PTR [ebp-0xc]
  412e95:	mov    eax,DWORD PTR [ebp-0x24]
  412e98:	sub    eax,ecx
  412e9a:	mov    ecx,DWORD PTR [ebp-0x48]
  412e9d:	xor    ecx,ebx
  412e9f:	add    ecx,esi
  412ea1:	xor    edx,edx
  412ea3:	div    ecx
  412ea5:	mov    DWORD PTR [ebp-0x8],eax
  412ea8:	mov    eax,DWORD PTR [ebp-0x54]
  412eab:	mov    ecx,DWORD PTR [ebp-0x8]
  412eae:	xor    eax,ebx
  412eb0:	add    eax,esi
  412eb2:	cmp    ecx,eax
  412eb4:	jbe    0x412ec0
  412eb6:	mov    eax,DWORD PTR [ebp-0x54]
  412eb9:	xor    eax,ebx
  412ebb:	add    eax,esi
  412ebd:	mov    DWORD PTR [ebp-0x8],eax
  412ec0:	mov    eax,DWORD PTR [ebp-0x48]
  412ec3:	mov    ecx,DWORD PTR [ebp-0x8]
  412ec6:	xor    eax,ebx
  412ec8:	add    eax,esi
  412eca:	imul   eax,ecx
  412ecd:	mov    DWORD PTR [ebp-0x8],eax
  412ed0:	mov    eax,DWORD PTR [ebp-0x38]
  412ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  412ed6:	xor    eax,ebx
  412ed8:	add    eax,esi
  412eda:	cmp    ecx,eax
  412edc:	je     0x413064
  412ee2:	mov    eax,DWORD PTR [ebp-0x8]
  412ee5:	mov    DWORD PTR [ebp-0x14],eax
  412ee8:	mov    eax,DWORD PTR [ebp-0xc]
  412eeb:	add    eax,DWORD PTR [ebp-0xbc]
  412ef1:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  412ef8:	mov    DWORD PTR [ebp-0x34],edi
  412efb:	mov    DWORD PTR [ebp-0xa8],0xf89c85b3
  412f05:	mov    DWORD PTR [ebp-0x8],eax
  412f08:	mov    DWORD PTR [ebp-0x2c],0xf89c85b2
  412f0f:	mov    DWORD PTR [ebp-0x30],edi
  412f12:	mov    eax,DWORD PTR [ebp-0x20]
  412f15:	xor    eax,ebx
  412f17:	add    eax,esi
  412f19:	jmp    0x413023
  412f1e:	mov    eax,DWORD PTR [ebp-0x30]
  412f21:	mov    ecx,DWORD PTR [ebp-0x18]
  412f24:	xor    eax,ebx
  412f26:	add    eax,esi
  412f28:	imul   eax,ecx
  412f2b:	mov    ecx,DWORD PTR [ebp-0x8]
  412f2e:	mov    BYTE PTR [eax+ecx*1],0x0
  412f32:	mov    DWORD PTR [ebp-0xb0],0xf89c85bb
  412f3c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a1
  412f46:	mov    eax,DWORD PTR [ebp-0x30]
  412f49:	mov    ecx,DWORD PTR [ebp-0x18]
  412f4c:	xor    eax,ebx
  412f4e:	add    eax,esi
  412f50:	imul   eax,ecx
  412f53:	mov    ecx,DWORD PTR [ebp-0x8]
  412f56:	mov    al,BYTE PTR [eax+ecx*1]
  412f59:	mov    BYTE PTR [ebp-0x2],al
  412f5c:	mov    eax,DWORD PTR [ebp-0x30]
  412f5f:	mov    ecx,DWORD PTR [ebp-0x18]
  412f62:	xor    eax,ebx
  412f64:	add    eax,esi
  412f66:	imul   eax,ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0xa8]
  412f6f:	xor    ecx,ebx
  412f71:	add    eax,ecx
  412f73:	mov    ecx,DWORD PTR [ebp-0x8]
  412f76:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272de]
  412f7e:	mov    ecx,DWORD PTR [ebp-0xb0]
  412f84:	xor    ecx,ebx
  412f86:	lea    eax,[ecx+eax*1+0x3272de]
  412f8d:	movzx  ecx,BYTE PTR [ebp-0x2]
  412f91:	xor    ecx,eax
  412f93:	mov    BYTE PTR [ebp-0x2],cl
  412f96:	mov    al,BYTE PTR [ebp-0x2]
  412f99:	mov    ecx,DWORD PTR [ebp-0x30]
  412f9c:	mov    edx,DWORD PTR [ebp-0x18]
  412f9f:	xor    ecx,ebx
  412fa1:	add    ecx,esi
  412fa3:	imul   ecx,edx
  412fa6:	mov    edx,DWORD PTR [ebp-0x8]
  412fa9:	mov    BYTE PTR [ecx+edx*1],al
  412fac:	mov    eax,DWORD PTR [ebp-0x30]
  412faf:	mov    ecx,DWORD PTR [ebp-0x18]
  412fb2:	xor    eax,ebx
  412fb4:	add    eax,esi
  412fb6:	imul   eax,ecx
  412fb9:	mov    ecx,DWORD PTR [ebp-0x8]
  412fbc:	mov    al,BYTE PTR [eax+ecx*1]
  412fbf:	mov    BYTE PTR [ebp-0x2],al
  412fc2:	mov    eax,DWORD PTR [ebp-0x30]
  412fc5:	mov    ecx,DWORD PTR [ebp-0x18]
  412fc8:	xor    eax,ebx
  412fca:	add    eax,esi
  412fcc:	imul   eax,ecx
  412fcf:	mov    ecx,DWORD PTR [ebp-0x34]
  412fd2:	xor    ecx,ebx
  412fd4:	add    eax,ecx
  412fd6:	mov    ecx,DWORD PTR [ebp-0x8]
  412fd9:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272de]
  412fe1:	mov    ecx,DWORD PTR [ebp-0xb8]
  412fe7:	xor    ecx,ebx
  412fe9:	lea    eax,[ecx+eax*1+0x3272de]
  412ff0:	movzx  ecx,BYTE PTR [ebp-0x2]
  412ff4:	xor    ecx,eax
  412ff6:	mov    BYTE PTR [ebp-0x2],cl
  412ff9:	mov    al,BYTE PTR [ebp-0x2]
  412ffc:	mov    ecx,DWORD PTR [ebp-0x30]
  412fff:	mov    edx,DWORD PTR [ebp-0x18]
  413002:	xor    ecx,ebx
  413004:	add    ecx,esi
  413006:	imul   ecx,edx
  413009:	mov    edx,DWORD PTR [ebp-0x8]
  41300c:	mov    BYTE PTR [ecx+edx*1],al
  41300f:	mov    eax,DWORD PTR [ebp-0x2c]
  413012:	mov    ecx,DWORD PTR [ebp-0x34]
  413015:	xor    eax,ebx
  413017:	xor    ecx,ebx
  413019:	add    eax,esi
  41301b:	add    ecx,esi
  41301d:	imul   eax,ecx
  413020:	add    eax,DWORD PTR [ebp-0x18]
  413023:	mov    DWORD PTR [ebp-0x18],eax
  413026:	mov    eax,DWORD PTR [ebp-0x18]
  413029:	mov    ecx,DWORD PTR [ebp-0x14]
  41302c:	cmp    ecx,eax
  41302e:	jb     0x412f1e
  413034:	mov    eax,DWORD PTR [ebp-0x34]
  413037:	mov    ecx,DWORD PTR [ebp-0x14]
  41303a:	xor    eax,ebx
  41303c:	add    eax,esi
  41303e:	imul   eax,ecx
  413041:	mov    ecx,DWORD PTR [ebp-0x20]
  413044:	xor    ecx,ebx
  413046:	add    ecx,esi
  413048:	or     eax,ecx
  41304a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41304d:	xor    ecx,ebx
  41304f:	add    eax,ecx
  413051:	mov    ecx,DWORD PTR [ebp-0x1c]
  413054:	xor    ecx,ebx
  413056:	add    eax,ecx
  413058:	mov    ecx,DWORD PTR [ebp-0xc]
  41305b:	lea    eax,[eax+ecx*1+0x64e5bc]
  413062:	jmp    0x413073
  413064:	mov    eax,DWORD PTR [ebp-0x1c]
  413067:	mov    ecx,DWORD PTR [ebp-0xc]
  41306a:	xor    eax,ebx
  41306c:	lea    eax,[eax+ecx*1+0x3272de]
  413073:	mov    DWORD PTR [ebp-0xc],eax
  413076:	mov    eax,DWORD PTR [ebp-0x1c]
  413079:	xor    eax,ebx
  41307b:	mov    ecx,0xffcd8d22
  413080:	sub    ecx,eax
  413082:	add    ecx,DWORD PTR [ebp-0x24]
  413085:	mov    eax,DWORD PTR [ebp-0x1c]
  413088:	mov    edx,DWORD PTR [ebp-0xc]
  41308b:	xor    eax,ebx
  41308d:	add    eax,esi
  41308f:	imul   eax,edx
  413092:	cmp    eax,ecx
  413094:	jbe    0x412e92
  41309a:	mov    eax,DWORD PTR [ebp-0x10]
  41309d:	mov    ecx,DWORD PTR [ebp-0x40]
  4130a0:	mov    eax,DWORD PTR [ebp+0x8]
  4130a3:	mov    edx,DWORD PTR [ebp-0x4c]
  4130a6:	mov    eax,DWORD PTR [eax+0x1d8]
  4130ac:	xor    edx,ebx
  4130ae:	add    edx,esi
  4130b0:	push   edx
  4130b1:	mov    edx,DWORD PTR [ebp-0x3c]
  4130b4:	xor    edx,ebx
  4130b6:	add    edx,esi
  4130b8:	push   edx
  4130b9:	push   ecx
  4130ba:	mov    DWORD PTR [ebp-0x2c],ecx
  4130bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4130c0:	xor    ecx,ebx
  4130c2:	add    ecx,esi
  4130c4:	push   ecx
  4130c5:	call   DWORD PTR [eax+0x14]
  4130c8:	mov    edi,eax
  4130ca:	mov    eax,DWORD PTR [ebp-0x10]
  4130cd:	xor    eax,ebx
  4130cf:	add    eax,esi
  4130d1:	cmp    eax,edi
  4130d3:	je     0x41312e
  4130d5:	mov    eax,DWORD PTR [ebp-0x10]
  4130d8:	jmp    0x4130fb
  4130da:	mov    ecx,DWORD PTR [ebp-0x28]
  4130dd:	xor    eax,ebx
  4130df:	mov    cl,BYTE PTR [ecx+eax*1+0x3272de]
  4130e6:	mov    BYTE PTR [eax+edi*1+0x3272de],cl
  4130ed:	mov    ecx,DWORD PTR [ebp-0x44]
  4130f0:	xor    ecx,ebx
  4130f2:	lea    eax,[ecx+eax*1+0x3272de]
  4130f9:	xor    eax,ebx
  4130fb:	mov    ecx,DWORD PTR [ebp-0x40]
  4130fe:	sub    ecx,esi
  413100:	xor    ecx,ebx
  413102:	cmp    eax,ecx
  413104:	jne    0x4130da
  413106:	mov    eax,DWORD PTR [ebp+0x8]
  413109:	mov    ecx,DWORD PTR [ebp-0x50]
  41310c:	mov    eax,DWORD PTR [eax+0x1d8]
  413112:	xor    ecx,ebx
  413114:	add    ecx,esi
  413116:	push   ecx
  413117:	mov    ecx,DWORD PTR [ebp-0x10]
  41311a:	xor    ecx,ebx
  41311c:	add    ecx,esi
  41311e:	push   ecx
  41311f:	push   DWORD PTR [ebp-0x28]
  413122:	call   DWORD PTR [eax+0x18]
  413125:	mov    eax,DWORD PTR [ebp-0x2c]
  413128:	mov    DWORD PTR [ebp-0x28],edi
  41312b:	mov    DWORD PTR [ebp-0x40],eax
  41312e:	mov    edi,DWORD PTR [ebp-0x28]
  413131:	mov    eax,DWORD PTR [ebp-0x44]
  413134:	mov    ecx,DWORD PTR [ebp-0x10]
  413137:	xor    eax,ebx
  413139:	mov    DWORD PTR [ebp-0x2c],edi
  41313c:	add    eax,esi
  41313e:	mov    DWORD PTR [ebp-0x5c],0x39102810
  413145:	mov    DWORD PTR [ebp-0x58],0x27103f10
  41314c:	jmp    0x413180
  41314e:	xor    ecx,ebx
  413150:	mov    dl,BYTE PTR [ebp+ecx*1+0x327282]
  413157:	xor    dl,0x72
  41315a:	sub    dl,0xa
  41315d:	mov    DWORD PTR [ebp-0x3c],ecx
  413160:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272de]
  413168:	movzx  edx,dl
  41316b:	cmp    ecx,edx
  41316d:	jne    0x41318a
  41316f:	mov    ecx,DWORD PTR [ebp-0x44]
  413172:	mov    edx,DWORD PTR [ebp-0x3c]
  413175:	xor    ecx,ebx
  413177:	lea    ecx,[ecx+edx*1+0x3272de]
  41317e:	xor    ecx,ebx
  413180:	cmp    ecx,0xf89c85bd
  413186:	jne    0x41314e
  413188:	jmp    0x413191
  41318a:	mov    eax,DWORD PTR [ebp-0x10]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	mov    ecx,DWORD PTR [ebp-0x10]
  413194:	xor    ecx,ebx
  413196:	add    ecx,esi
  413198:	cmp    ecx,eax
  41319a:	je     0x41330d
  4131a0:	mov    eax,DWORD PTR [edi+0x8]
  4131a3:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  4131aa:	mov    DWORD PTR [ebp-0x3c],0xf89cc306
  4131b1:	mov    DWORD PTR [ebp-0x48],0xf89cb5b5
  4131b8:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  4131bf:	mov    DWORD PTR [ebp-0x14],eax
  4131c2:	mov    eax,DWORD PTR [ebp+0x8]
  4131c5:	mov    ecx,DWORD PTR [ebp-0x20]
  4131c8:	xor    ecx,ebx
  4131ca:	add    ecx,esi
  4131cc:	push   ecx
  4131cd:	mov    ecx,DWORD PTR [ebp-0x48]
  4131d0:	mov    eax,DWORD PTR [eax+0x1d8]
  4131d6:	xor    ecx,ebx
  4131d8:	add    ecx,esi
  4131da:	push   ecx
  4131db:	mov    ecx,DWORD PTR [ebp-0x3c]
  4131de:	xor    ecx,ebx
  4131e0:	add    ecx,esi
  4131e2:	push   ecx
  4131e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4131e6:	xor    ecx,ebx
  4131e8:	add    ecx,esi
  4131ea:	push   ecx
  4131eb:	call   DWORD PTR [eax+0x14]
  4131ee:	mov    edi,eax
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4131f6:	mov    eax,DWORD PTR [eax+0x1d8]
  4131fc:	xor    ecx,ebx
  4131fe:	add    ecx,esi
  413200:	push   ecx
  413201:	mov    ecx,DWORD PTR [ebp-0x48]
  413204:	xor    ecx,ebx
  413206:	add    ecx,esi
  413208:	push   ecx
  413209:	mov    ecx,DWORD PTR [ebp-0xc]
  41320c:	push   DWORD PTR [ebp-0x14]
  41320f:	xor    ecx,ebx
  413211:	add    ecx,esi
  413213:	push   ecx
  413214:	call   DWORD PTR [eax+0x14]
  413217:	mov    ecx,DWORD PTR [ebp-0xc]
  41321a:	xor    ecx,ebx
  41321c:	add    ecx,esi
  41321e:	mov    DWORD PTR [ebp-0x20],eax
  413221:	cmp    ecx,edi
  413223:	je     0x4135c4
  413229:	mov    ecx,DWORD PTR [ebp-0xc]
  41322c:	xor    ecx,ebx
  41322e:	add    ecx,esi
  413230:	cmp    ecx,eax
  413232:	je     0x4135c4
  413238:	mov    DWORD PTR [ebp-0x3c],0xf89c85b2
  41323f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b3
  413246:	mov    ecx,DWORD PTR [ebp-0x3c]
  413249:	xor    cl,0x97
  41324c:	sub    cl,0x22
  41324f:	mov    BYTE PTR [edi],cl
  413251:	mov    ecx,DWORD PTR [ebp-0xc]
  413254:	xor    cl,0x97
  413257:	sub    cl,0x22
  41325a:	mov    BYTE PTR [edi+0x1],cl
  41325d:	mov    ecx,DWORD PTR [ebp-0x4c]
  413260:	xor    cl,0x97
  413263:	sub    cl,0x22
  413266:	mov    BYTE PTR [edi+0x2],cl
  413269:	and    DWORD PTR [ebp-0xb4],0x0
  413270:	and    DWORD PTR [ebp-0xa4],0x0
  413277:	lea    ecx,[ebp-0xa4]
  41327d:	push   ecx
  41327e:	push   DWORD PTR [ebp-0x14]
  413281:	push   eax
  413282:	lea    eax,[ebp-0xb4]
  413288:	push   eax
  413289:	mov    eax,DWORD PTR [ebp-0x2c]
  41328c:	push   DWORD PTR [eax+0xc]
  41328f:	mov    eax,DWORD PTR [ebp-0x28]
  413292:	add    eax,0x10
  413295:	push   eax
  413296:	push   edi
  413297:	call   0x4125cf
  41329c:	mov    DWORD PTR [ebp-0x3c],eax
  41329f:	mov    eax,DWORD PTR [ebp+0x8]
  4132a2:	mov    ecx,DWORD PTR [ebp-0x50]
  4132a5:	mov    eax,DWORD PTR [eax+0x1d8]
  4132ab:	xor    ecx,ebx
  4132ad:	add    ecx,esi
  4132af:	push   ecx
  4132b0:	mov    ecx,DWORD PTR [ebp-0xc]
  4132b3:	xor    ecx,ebx
  4132b5:	add    ecx,esi
  4132b7:	push   ecx
  4132b8:	push   edi
  4132b9:	call   DWORD PTR [eax+0x18]
  4132bc:	mov    eax,DWORD PTR [ebp-0x3c]
  4132bf:	add    eax,0xffcd8d22
  4132c4:	xor    eax,ebx
  4132c6:	cmp    eax,0xf89c85b5
  4132cb:	mov    eax,DWORD PTR [ebp+0x8]
  4132ce:	mov    eax,DWORD PTR [eax+0x1d8]
  4132d4:	mov    ecx,DWORD PTR [ebp-0x50]
  4132d7:	jne    0x4132fa
  4132d9:	xor    ecx,ebx
  4132db:	add    ecx,esi
  4132dd:	push   ecx
  4132de:	mov    ecx,DWORD PTR [ebp-0xc]
  4132e1:	xor    ecx,ebx
  4132e3:	add    ecx,esi
  4132e5:	push   ecx
  4132e6:	push   DWORD PTR [ebp-0x28]
  4132e9:	call   DWORD PTR [eax+0x18]
  4132ec:	mov    eax,DWORD PTR [ebp-0x20]
  4132ef:	mov    DWORD PTR [ebp-0x28],eax
  4132f2:	mov    eax,DWORD PTR [ebp-0x14]
  4132f5:	mov    DWORD PTR [ebp-0x40],eax
  4132f8:	jmp    0x41330d
  4132fa:	xor    ecx,ebx
  4132fc:	add    ecx,esi
  4132fe:	push   ecx
  4132ff:	mov    ecx,DWORD PTR [ebp-0xc]
  413302:	xor    ecx,ebx
  413304:	add    ecx,esi
  413306:	push   ecx
  413307:	push   DWORD PTR [ebp-0x20]
  41330a:	call   DWORD PTR [eax+0x18]
  41330d:	mov    eax,DWORD PTR [ebp-0x40]
  413310:	mov    DWORD PTR [ebp-0x38],eax
  413313:	mov    eax,DWORD PTR [ebp-0x28]
  413316:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41331d:	mov    DWORD PTR [ebp-0x3c],eax
  413320:	mov    edi,0xf89c85b4
  413325:	mov    DWORD PTR [ebp-0x30],edi
  413328:	mov    eax,DWORD PTR [ebp-0x24]
  41332b:	xor    eax,ebx
  41332d:	add    eax,esi
  41332f:	mov    DWORD PTR [ebp-0xc],eax
  413332:	mov    eax,DWORD PTR [ebp-0x24]
  413335:	xor    eax,ebx
  413337:	add    eax,esi
  413339:	mov    DWORD PTR [ebp-0x14],eax
  41333c:	mov    DWORD PTR [ebp-0x48],0xf89c85d5
  413343:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41334a:	mov    eax,DWORD PTR [ebp-0x24]
  41334d:	mov    ecx,DWORD PTR [ebp-0x38]
  413350:	xor    eax,ebx
  413352:	add    eax,esi
  413354:	cmp    ecx,eax
  413356:	je     0x413560
  41335c:	jmp    0x41353c
  413361:	mov    ecx,DWORD PTR [ebp-0xc]
  413364:	mov    eax,DWORD PTR [ebp-0x38]
  413367:	sub    eax,ecx
  413369:	mov    ecx,DWORD PTR [ebp-0x48]
  41336c:	xor    ecx,ebx
  41336e:	add    ecx,esi
  413370:	xor    edx,edx
  413372:	div    ecx
  413374:	mov    DWORD PTR [ebp-0x14],eax
  413377:	mov    eax,DWORD PTR [ebp-0x20]
  41337a:	mov    ecx,DWORD PTR [ebp-0x14]
  41337d:	xor    eax,ebx
  41337f:	add    eax,esi
  413381:	cmp    ecx,eax
  413383:	jbe    0x41338f
  413385:	mov    eax,DWORD PTR [ebp-0x20]
  413388:	xor    eax,ebx
  41338a:	add    eax,esi
  41338c:	mov    DWORD PTR [ebp-0x14],eax
  41338f:	mov    eax,DWORD PTR [ebp-0x48]
  413392:	mov    ecx,DWORD PTR [ebp-0x14]
  413395:	xor    eax,ebx
  413397:	add    eax,esi
  413399:	imul   eax,ecx
  41339c:	mov    DWORD PTR [ebp-0x14],eax
  41339f:	mov    eax,DWORD PTR [ebp-0x24]
  4133a2:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a5:	xor    eax,ebx
  4133a7:	add    eax,esi
  4133a9:	cmp    ecx,eax
  4133ab:	je     0x41352a
  4133b1:	mov    eax,DWORD PTR [ebp-0x14]
  4133b4:	mov    DWORD PTR [ebp-0x34],eax
  4133b7:	mov    eax,DWORD PTR [ebp-0xc]
  4133ba:	add    eax,DWORD PTR [ebp-0x3c]
  4133bd:	mov    DWORD PTR [ebp-0x54],0xf89c85b5
  4133c4:	mov    DWORD PTR [ebp-0x14],edi
  4133c7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b3
  4133ce:	mov    DWORD PTR [ebp-0x8],eax
  4133d1:	mov    DWORD PTR [ebp-0x2c],0xf89c85b2
  4133d8:	mov    DWORD PTR [ebp-0x1c],edi
  4133db:	mov    eax,DWORD PTR [ebp-0x54]
  4133de:	xor    eax,ebx
  4133e0:	add    eax,esi
  4133e2:	jmp    0x4134e9
  4133e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4133ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4133ed:	xor    eax,ebx
  4133ef:	add    eax,esi
  4133f1:	imul   eax,ecx
  4133f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4133f7:	mov    BYTE PTR [eax+ecx*1],0x0
  4133fb:	mov    DWORD PTR [ebp-0xac],0xf89c85bb
  413405:	mov    DWORD PTR [ebp-0x9c],0xf89c85a1
  41340f:	mov    eax,DWORD PTR [ebp-0x1c]
  413412:	mov    ecx,DWORD PTR [ebp-0x18]
  413415:	xor    eax,ebx
  413417:	add    eax,esi
  413419:	imul   eax,ecx
  41341c:	mov    ecx,DWORD PTR [ebp-0x8]
  41341f:	mov    al,BYTE PTR [eax+ecx*1]
  413422:	mov    BYTE PTR [ebp-0x1],al
  413425:	mov    eax,DWORD PTR [ebp-0x1c]
  413428:	mov    ecx,DWORD PTR [ebp-0x18]
  41342b:	xor    eax,ebx
  41342d:	add    eax,esi
  41342f:	imul   eax,ecx
  413432:	mov    ecx,DWORD PTR [ebp-0x4c]
  413435:	xor    ecx,ebx
  413437:	add    eax,ecx
  413439:	mov    ecx,DWORD PTR [ebp-0x8]
  41343c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272de]
  413444:	mov    ecx,DWORD PTR [ebp-0xac]
  41344a:	xor    ecx,ebx
  41344c:	lea    eax,[ecx+eax*1+0x3272de]
  413453:	movzx  ecx,BYTE PTR [ebp-0x1]
  413457:	xor    ecx,eax
  413459:	mov    BYTE PTR [ebp-0x1],cl
  41345c:	mov    al,BYTE PTR [ebp-0x1]
  41345f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413462:	mov    edx,DWORD PTR [ebp-0x18]
  413465:	xor    ecx,ebx
  413467:	add    ecx,esi
  413469:	imul   ecx,edx
  41346c:	mov    edx,DWORD PTR [ebp-0x8]
  41346f:	mov    BYTE PTR [ecx+edx*1],al
  413472:	mov    eax,DWORD PTR [ebp-0x1c]
  413475:	mov    ecx,DWORD PTR [ebp-0x18]
  413478:	xor    eax,ebx
  41347a:	add    eax,esi
  41347c:	imul   eax,ecx
  41347f:	mov    ecx,DWORD PTR [ebp-0x8]
  413482:	mov    al,BYTE PTR [eax+ecx*1]
  413485:	mov    BYTE PTR [ebp-0x1],al
  413488:	mov    eax,DWORD PTR [ebp-0x1c]
  41348b:	mov    ecx,DWORD PTR [ebp-0x18]
  41348e:	xor    eax,ebx
  413490:	add    eax,esi
  413492:	imul   eax,ecx
  413495:	mov    ecx,DWORD PTR [ebp-0x14]
  413498:	xor    ecx,ebx
  41349a:	add    eax,ecx
  41349c:	mov    ecx,DWORD PTR [ebp-0x8]
  41349f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272de]
  4134a7:	mov    ecx,DWORD PTR [ebp-0x9c]
  4134ad:	xor    ecx,ebx
  4134af:	lea    eax,[ecx+eax*1+0x3272de]
  4134b6:	movzx  ecx,BYTE PTR [ebp-0x1]
  4134ba:	xor    ecx,eax
  4134bc:	mov    BYTE PTR [ebp-0x1],cl
  4134bf:	mov    al,BYTE PTR [ebp-0x1]
  4134c2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4134c5:	mov    edx,DWORD PTR [ebp-0x18]
  4134c8:	xor    ecx,ebx
  4134ca:	add    ecx,esi
  4134cc:	imul   ecx,edx
  4134cf:	mov    edx,DWORD PTR [ebp-0x8]
  4134d2:	mov    BYTE PTR [ecx+edx*1],al
  4134d5:	mov    eax,DWORD PTR [ebp-0x2c]
  4134d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4134db:	xor    eax,ebx
  4134dd:	xor    ecx,ebx
  4134df:	add    eax,esi
  4134e1:	add    ecx,esi
  4134e3:	imul   eax,ecx
  4134e6:	add    eax,DWORD PTR [ebp-0x18]
  4134e9:	mov    DWORD PTR [ebp-0x18],eax
  4134ec:	mov    eax,DWORD PTR [ebp-0x18]
  4134ef:	mov    ecx,DWORD PTR [ebp-0x34]
  4134f2:	cmp    ecx,eax
  4134f4:	jb     0x4133e7
  4134fa:	mov    eax,DWORD PTR [ebp-0x14]
  4134fd:	mov    ecx,DWORD PTR [ebp-0x34]
  413500:	xor    eax,ebx
  413502:	add    eax,esi
  413504:	imul   eax,ecx
  413507:	mov    ecx,DWORD PTR [ebp-0x54]
  41350a:	xor    ecx,ebx
  41350c:	add    ecx,esi
  41350e:	or     eax,ecx
  413510:	mov    ecx,DWORD PTR [ebp-0x30]
  413513:	xor    ecx,ebx
  413515:	add    eax,ecx
  413517:	mov    ecx,DWORD PTR [ebp-0x30]
  41351a:	xor    ecx,ebx
  41351c:	add    eax,ecx
  41351e:	mov    ecx,DWORD PTR [ebp-0xc]
  413521:	lea    eax,[eax+ecx*1+0x64e5bc]
  413528:	jmp    0x413539
  41352a:	mov    eax,DWORD PTR [ebp-0x30]
  41352d:	mov    ecx,DWORD PTR [ebp-0xc]
  413530:	xor    eax,ebx
  413532:	lea    eax,[eax+ecx*1+0x3272de]
  413539:	mov    DWORD PTR [ebp-0xc],eax
  41353c:	mov    eax,DWORD PTR [ebp-0x30]
  41353f:	xor    eax,ebx
  413541:	mov    ecx,0xffcd8d22
  413546:	sub    ecx,eax
  413548:	add    ecx,DWORD PTR [ebp-0x38]
  41354b:	mov    eax,DWORD PTR [ebp-0x30]
  41354e:	mov    edx,DWORD PTR [ebp-0xc]
  413551:	xor    eax,ebx
  413553:	add    eax,esi
  413555:	imul   eax,edx
  413558:	cmp    eax,ecx
  41355a:	jbe    0x413361
  413560:	push   DWORD PTR [ebp+0x8]
  413563:	mov    eax,DWORD PTR [ebp+0x8]
  413566:	push   DWORD PTR [eax+0x1cc]
  41356c:	lea    eax,[ebp-0xa0]
  413572:	push   eax
  413573:	mov    eax,DWORD PTR [ebp+0x8]
  413576:	mov    eax,DWORD PTR [eax+0x1c4]
  41357c:	push   DWORD PTR [eax]
  41357e:	mov    eax,DWORD PTR [ebp+0x8]
  413581:	mov    eax,DWORD PTR [eax+0x1c0]
  413587:	push   DWORD PTR [eax]
  413589:	push   DWORD PTR [ebp-0x40]
  41358c:	push   DWORD PTR [ebp-0x28]
  41358f:	call   0x414065
  413594:	mov    DWORD PTR [ebp-0x3c],eax
  413597:	mov    eax,DWORD PTR [ebp-0x10]
  41359a:	mov    ecx,DWORD PTR [ebp-0x28]
  41359d:	xor    eax,ebx
  41359f:	add    eax,esi
  4135a1:	cmp    eax,ecx
  4135a3:	je     0x4135c4
  4135a5:	mov    eax,DWORD PTR [ebp+0x8]
  4135a8:	mov    ecx,DWORD PTR [ebp-0x50]
  4135ab:	mov    eax,DWORD PTR [eax+0x1d8]
  4135b1:	xor    ecx,ebx
  4135b3:	add    ecx,esi
  4135b5:	push   ecx
  4135b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4135b9:	xor    ecx,ebx
  4135bb:	add    ecx,esi
  4135bd:	push   ecx
  4135be:	push   DWORD PTR [ebp-0x28]
  4135c1:	call   DWORD PTR [eax+0x18]
  4135c4:	pop    edi
  4135c5:	pop    esi
  4135c6:	pop    ebx
  4135c7:	leave  
  4135c8:	ret    0x4
  4135cb:	push   ebp
  4135cc:	mov    ebp,esp
  4135ce:	push   ecx
  4135cf:	push   ecx
  4135d0:	lea    eax,[ebp-0x8]
  4135d3:	mov    DWORD PTR [ebp-0x4],eax
  4135d6:	push   esi
  4135d7:	mov    esi,DWORD PTR [ebp-0x4]
  4135da:	mov    eax,0xf881ba0f
  4135df:	mov    DWORD PTR [esi],eax
  4135e1:	mov    esi,DWORD PTR [ebp-0x8]
  4135e4:	cmp    esi,eax
  4135e6:	pop    esi
  4135e7:	jne    0x4135f1
  4135e9:	mov    BYTE PTR [ecx+0xa],0x78
  4135ed:	mov    BYTE PTR [edx+0x8],0x2f
  4135f1:	mov    BYTE PTR [edx+0xa],0x78
  4135f5:	mov    BYTE PTR [ecx+0x2],0xa
  4135f9:	leave  
  4135fa:	ret    
  4135fb:	push   ebp
  4135fc:	mov    ebp,esp
  4135fe:	push   ecx
  4135ff:	push   ecx
  413600:	lea    eax,[ebp-0x8]
  413603:	mov    DWORD PTR [ebp-0x4],eax
  413606:	mov    edx,DWORD PTR [ebp-0x4]
  413609:	mov    eax,0xf88b0beb
  41360e:	mov    DWORD PTR [edx],eax
  413610:	mov    edx,DWORD PTR [ebp-0x8]
  413613:	cmp    edx,eax
  413615:	jne    0x413626
  413617:	mov    eax,DWORD PTR [ebp+0x8]
  41361a:	mov    BYTE PTR [ecx+0x9],0xc
  41361e:	mov    BYTE PTR [eax+0x7],0x47
  413622:	mov    BYTE PTR [ecx+0x6],0xf
  413626:	mov    BYTE PTR [ecx+0x3],0x1c
  41362a:	leave  
  41362b:	ret    0x4
  41362e:	push   ebp
  41362f:	mov    ebp,esp
  413631:	push   ecx
  413632:	push   ecx
  413633:	lea    eax,[ebp-0x8]
  413636:	mov    DWORD PTR [ebp-0x4],eax
  413639:	mov    edx,DWORD PTR [ebp-0x4]
  41363c:	mov    eax,0x7e0da0f
  413641:	mov    DWORD PTR [edx],eax
  413643:	mov    edx,DWORD PTR [ebp-0x8]
  413646:	cmp    edx,eax
  413648:	jne    0x41364e
  41364a:	mov    BYTE PTR [ecx+0x7],0x47
  41364e:	mov    eax,DWORD PTR [ebp+0x8]
  413651:	mov    BYTE PTR [ecx+0x1],0x1
  413655:	mov    BYTE PTR [eax+0x9],0x2c
  413659:	leave  
  41365a:	ret    0x4
  41365d:	push   ebp
  41365e:	mov    ebp,esp
  413660:	push   ecx
  413661:	push   ecx
  413662:	lea    eax,[ebp-0x8]
  413665:	mov    DWORD PTR [ebp-0x4],eax
  413668:	push   esi
  413669:	mov    esi,DWORD PTR [ebp-0x4]
  41366c:	mov    eax,0x7060e3e
  413671:	mov    DWORD PTR [esi],eax
  413673:	mov    esi,DWORD PTR [ebp-0x8]
  413676:	cmp    esi,eax
  413678:	pop    esi
  413679:	jne    0x413685
  41367b:	mov    BYTE PTR [edx+0x4],0xb
  41367f:	mov    WORD PTR [ecx+0x3],0xb1c
  413685:	mov    BYTE PTR [edx],0x3f
  413688:	leave  
  413689:	ret    
  41368a:	push   ebp
  41368b:	mov    ebp,esp
  41368d:	push   ecx
  41368e:	push   ecx
  41368f:	lea    eax,[ebp-0x8]
  413692:	mov    DWORD PTR [ebp-0x4],eax
  413695:	mov    edx,DWORD PTR [ebp-0x4]
  413698:	mov    eax,0xf8870b3f
  41369d:	mov    DWORD PTR [edx],eax
  41369f:	mov    edx,DWORD PTR [ebp-0x8]
  4136a2:	cmp    edx,eax
  4136a4:	jne    0x4136b1
  4136a6:	mov    eax,DWORD PTR [ebp+0x8]
  4136a9:	mov    BYTE PTR [ecx+0x8],0xf
  4136ad:	mov    BYTE PTR [eax+0x1],0x1
  4136b1:	mov    BYTE PTR [ecx+0x5],0xf3
  4136b5:	leave  
  4136b6:	ret    0x4
  4136b9:	push   esi
  4136ba:	mov    ecx,edi
  4136bc:	call   0x41368a
  4136c1:	mov    edx,edi
  4136c3:	mov    ecx,esi
  4136c5:	mov    BYTE PTR [esi],0x1f
  4136c8:	call   0x41365d
  4136cd:	push   esi
  4136ce:	mov    ecx,edi
  4136d0:	mov    BYTE PTR [esi+0x5],0xf3
  4136d4:	call   0x41362e
  4136d9:	push   esi
  4136da:	mov    BYTE PTR [esi+0x6],0xf
  4136de:	call   0x4135fb
  4136e3:	mov    BYTE PTR [esi+0x2],0xa
  4136e7:	mov    edx,esi
  4136e9:	jmp    0x4135cb
  4136ee:	push   ebp
  4136ef:	mov    ebp,esp
  4136f1:	push   ecx
  4136f2:	mov    ecx,DWORD PTR [edx+0x194]
  4136f8:	push   esi
  4136f9:	mov    esi,DWORD PTR [ebp+0x8]
  4136fc:	mov    esi,DWORD PTR [esi]
  4136fe:	mov    DWORD PTR [ecx],esi
  413700:	mov    ecx,DWORD PTR [edx+0x194]
  413706:	mov    ecx,DWORD PTR [ecx]
  413708:	mov    esi,DWORD PTR [edx+0x190]
  41370e:	mov    DWORD PTR [esi],ecx
  413710:	mov    eax,DWORD PTR [edx+0x194]
  413716:	mov    ecx,DWORD PTR [eax]
  413718:	mov    ecx,DWORD PTR [ecx+0x3c]
  41371b:	add    ecx,DWORD PTR [eax]
  41371d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  413724:	mov    eax,DWORD PTR [ebp-0x4]
  413727:	movzx  ecx,WORD PTR [ecx+0x16]
  41372b:	xor    eax,0x7510897
  413730:	add    eax,0x3272de
  413735:	pop    esi
  413736:	test   ecx,eax
  413738:	je     0x413746
  41373a:	mov    eax,DWORD PTR [edx+0x1c8]
  413740:	mov    DWORD PTR [eax],0xf89c85b4
  413746:	leave  
  413747:	ret    0x4
  41374a:	push   ebp
  41374b:	mov    ebp,esp
  41374d:	sub    esp,0x70
  413750:	and    DWORD PTR [ebp-0x20],0x0
  413754:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  41375b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  413762:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  413769:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  413770:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413777:	mov    eax,DWORD PTR [ebp+0x20]
  41377a:	mov    eax,DWORD PTR [eax+0x194]
  413780:	mov    DWORD PTR [ebp-0xc],eax
  413783:	mov    eax,DWORD PTR [ebp+0x20]
  413786:	push   ebx
  413787:	push   esi
  413788:	mov    esi,DWORD PTR [eax+0x190]
  41378e:	mov    eax,DWORD PTR [ebp+0x20]
  413791:	mov    eax,DWORD PTR [eax+0x18c]
  413797:	mov    DWORD PTR [ebp-0x8],eax
  41379a:	mov    eax,DWORD PTR [eax]
  41379c:	push   edi
  41379d:	mov    DWORD PTR [ebp-0x4],esi
  4137a0:	test   eax,eax
  4137a2:	jne    0x4137af
  4137a4:	push   DWORD PTR [ebp+0x1c]
  4137a7:	mov    edx,DWORD PTR [ebp+0x20]
  4137aa:	call   0x4136ee
  4137af:	mov    eax,DWORD PTR [esi]
  4137b1:	mov    ebx,DWORD PTR [esi]
  4137b3:	add    ebx,DWORD PTR [eax+0x3c]
  4137b6:	mov    eax,DWORD PTR [ebp+0xc]
  4137b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4137bc:	mov    ecx,DWORD PTR [ecx]
  4137be:	mov    esi,0x7510897
  4137c3:	xor    eax,esi
  4137c5:	mov    edi,0x3272de
  4137ca:	add    eax,edi
  4137cc:	cmp    eax,ecx
  4137ce:	jne    0x413a06
  4137d4:	mov    eax,DWORD PTR [ebp-0xc]
  4137d7:	mov    eax,DWORD PTR [eax]
  4137d9:	mov    DWORD PTR [ebp-0x10],eax
  4137dc:	mov    eax,DWORD PTR [ebx+0x50]
  4137df:	mov    DWORD PTR [ebp-0x68],eax
  4137e2:	mov    eax,DWORD PTR [ebp-0x18]
  4137e5:	xor    eax,esi
  4137e7:	add    eax,edi
  4137e9:	mov    DWORD PTR [ebp-0x64],eax
  4137ec:	mov    eax,DWORD PTR [ebp-0x14]
  4137ef:	and    DWORD PTR [ebp-0x6c],0x0
  4137f3:	xor    eax,esi
  4137f5:	add    eax,edi
  4137f7:	mov    DWORD PTR [ebp-0x60],eax
  4137fa:	lea    eax,[ebp-0x70]
  4137fd:	push   eax
  4137fe:	mov    eax,DWORD PTR [ebp+0x8]
  413801:	xor    eax,esi
  413803:	add    eax,edi
  413805:	push   eax
  413806:	mov    eax,DWORD PTR [ebp+0x20]
  413809:	add    eax,0xaa
  41380e:	push   eax
  41380f:	mov    eax,DWORD PTR [ebp+0x20]
  413812:	mov    eax,DWORD PTR [eax+0x198]
  413818:	mov    DWORD PTR [ebp-0x70],0x4
  41381f:	push   DWORD PTR [eax]
  413821:	mov    eax,DWORD PTR [ebp+0x10]
  413824:	call   eax
  413826:	mov    ecx,DWORD PTR [ebp-0xc]
  413829:	mov    ecx,DWORD PTR [ecx]
  41382b:	mov    edx,DWORD PTR [ebp-0x8]
  41382e:	mov    DWORD PTR [ebp-0x6c],eax
  413831:	mov    DWORD PTR [ebp+0x1c],eax
  413834:	mov    DWORD PTR [edx],ecx
  413836:	mov    ecx,DWORD PTR [ebp-0x4]
  413839:	mov    DWORD PTR [ecx],eax
  41383b:	mov    eax,DWORD PTR [ebx+0x50]
  41383e:	mov    DWORD PTR [ebp-0x68],eax
  413841:	mov    eax,DWORD PTR [ebp-0x1c]
  413844:	xor    eax,esi
  413846:	add    eax,edi
  413848:	mov    DWORD PTR [ebp-0x64],eax
  41384b:	lea    eax,[ebp-0x20]
  41384e:	mov    DWORD PTR [ebp-0x60],eax
  413851:	lea    eax,[ebp-0x70]
  413854:	push   eax
  413855:	mov    eax,DWORD PTR [ebp+0x8]
  413858:	xor    eax,esi
  41385a:	add    eax,edi
  41385c:	push   eax
  41385d:	mov    eax,DWORD PTR [ebp+0x20]
  413860:	add    eax,0xee
  413865:	push   eax
  413866:	mov    eax,DWORD PTR [ebp+0x20]
  413869:	mov    eax,DWORD PTR [eax+0x198]
  41386f:	mov    DWORD PTR [ebp-0x70],0x4
  413876:	push   DWORD PTR [eax]
  413878:	mov    eax,DWORD PTR [ebp+0x10]
  41387b:	call   eax
  41387d:	test   eax,eax
  41387f:	je     0x4138a4
  413881:	and    DWORD PTR [ebp+0xc],0x0
  413885:	cmp    DWORD PTR [ebx+0x50],0x0
  413889:	jbe    0x4138a4
  41388b:	mov    eax,DWORD PTR [ebp+0x1c]
  41388e:	mov    ecx,DWORD PTR [ebp-0x10]
  413891:	sub    ecx,eax
  413893:	mov    dl,BYTE PTR [ecx+eax*1]
  413896:	inc    DWORD PTR [ebp+0xc]
  413899:	mov    BYTE PTR [eax],dl
  41389b:	mov    edx,DWORD PTR [ebp+0xc]
  41389e:	inc    eax
  41389f:	cmp    edx,DWORD PTR [ebx+0x50]
  4138a2:	jb     0x413893
  4138a4:	mov    edx,DWORD PTR [ebp+0x1c]
  4138a7:	mov    ecx,DWORD PTR [edx+0x3c]
  4138aa:	add    ecx,edx
  4138ac:	mov    eax,DWORD PTR [ecx+0xa0]
  4138b2:	mov    ebx,DWORD PTR [ecx+0x28]
  4138b5:	add    eax,edx
  4138b7:	sub    edx,DWORD PTR [ebp-0x10]
  4138ba:	add    ebx,DWORD PTR [ebp+0x1c]
  4138bd:	mov    DWORD PTR [ebp+0xc],edx
  4138c0:	mov    DWORD PTR [ebp-0x2c],ecx
  4138c3:	mov    DWORD PTR [ebp-0x14],ebx
  4138c6:	mov    DWORD PTR [ebp-0x8],0x0
  4138cd:	jmp    0x413949
  4138cf:	add    edx,0xfffffff8
  4138d2:	shr    edx,1
  4138d4:	mov    DWORD PTR [ebp-0x18],edx
  4138d7:	je     0x413935
  4138d9:	lea    edx,[eax+0x8]
  4138dc:	mov    DWORD PTR [ebp-0x4],edx
  4138df:	mov    edx,DWORD PTR [ebp-0x18]
  4138e2:	mov    DWORD PTR [ebp-0x18],edx
  4138e5:	mov    edx,DWORD PTR [ebp-0x4]
  4138e8:	movzx  edx,WORD PTR [edx]
  4138eb:	mov    DWORD PTR [ebp-0x24],edx
  4138ee:	and    edx,0xfff
  4138f4:	mov    DWORD PTR [ebp-0x28],edx
  4138f7:	mov    edx,DWORD PTR [ebp-0x24]
  4138fa:	shr    edx,0xc
  4138fd:	add    edx,0xffcd8d22
  413903:	xor    edx,esi
  413905:	cmp    edx,0xf89c85b2
  41390b:	jne    0x41392c
  41390d:	mov    edx,DWORD PTR [ebp-0x28]
  413910:	add    edx,DWORD PTR [ebp+0x1c]
  413913:	mov    ebx,DWORD PTR [eax]
  413915:	cmp    DWORD PTR [ebx+edx*1],0x0
  413919:	je     0x413929
  41391b:	mov    ecx,DWORD PTR [ebp+0xc]
  41391e:	add    ecx,DWORD PTR [ebx+edx*1]
  413921:	mov    ebx,DWORD PTR [eax]
  413923:	mov    DWORD PTR [edx+ebx*1],ecx
  413926:	mov    ecx,DWORD PTR [ebp-0x2c]
  413929:	mov    ebx,DWORD PTR [ebp-0x14]
  41392c:	add    DWORD PTR [ebp-0x4],0x2
  413930:	dec    DWORD PTR [ebp-0x18]
  413933:	jne    0x4138e5
  413935:	mov    edx,DWORD PTR [ebp-0xc]
  413938:	add    DWORD PTR [ebp-0x8],edx
  41393b:	mov    edx,DWORD PTR [ebp-0x8]
  41393e:	cmp    edx,DWORD PTR [ecx+0xa4]
  413944:	jae    0x413957
  413946:	add    eax,DWORD PTR [ebp-0xc]
  413949:	mov    edx,DWORD PTR [eax+0x4]
  41394c:	mov    DWORD PTR [ebp-0xc],edx
  41394f:	test   edx,edx
  413951:	jne    0x4138cf
  413957:	mov    eax,DWORD PTR [ebp-0x10]
  41395a:	mov    DWORD PTR [ebp-0x6c],eax
  41395d:	mov    DWORD PTR [ebp-0x70],0x4
  413964:	mov    eax,DWORD PTR [ecx+0x50]
  413967:	mov    DWORD PTR [ebp-0x68],eax
  41396a:	mov    eax,DWORD PTR [ebp-0x1c]
  41396d:	xor    eax,esi
  41396f:	add    eax,edi
  413971:	mov    DWORD PTR [ebp-0x64],eax
  413974:	lea    eax,[ebp-0x20]
  413977:	mov    DWORD PTR [ebp-0x60],eax
  41397a:	lea    eax,[ebp-0x70]
  41397d:	push   eax
  41397e:	mov    eax,DWORD PTR [ebp+0x8]
  413981:	xor    eax,esi
  413983:	add    eax,edi
  413985:	push   eax
  413986:	mov    eax,DWORD PTR [ebp+0x20]
  413989:	add    eax,0xee
  41398e:	push   eax
  41398f:	mov    eax,DWORD PTR [ebp+0x20]
  413992:	mov    eax,DWORD PTR [eax+0x198]
  413998:	push   DWORD PTR [eax]
  41399a:	mov    eax,DWORD PTR [ebp+0x10]
  41399d:	call   eax
  41399f:	mov    eax,DWORD PTR [ebp+0x20]
  4139a2:	mov    eax,DWORD PTR [eax+0x180]
  4139a8:	add    eax,DWORD PTR [ebp+0xc]
  4139ab:	mov    ecx,DWORD PTR [ebp+0xc]
  4139ae:	push   DWORD PTR [ebp+0x18]
  4139b1:	mov    DWORD PTR [eax],ecx
  4139b3:	push   DWORD PTR [ebp+0x14]
  4139b6:	push   DWORD PTR [ebp+0x1c]
  4139b9:	call   ebx
  4139bb:	mov    eax,DWORD PTR [ebp+0xc]
  4139be:	add    eax,DWORD PTR [ebp+0x20]
  4139c1:	lea    ecx,[ebp+0x4]
  4139c4:	mov    DWORD PTR [ebp+0x20],eax
  4139c7:	mov    eax,DWORD PTR [ebp+0x20]
  4139ca:	mov    eax,DWORD PTR [ebp+0x20]
  4139cd:	mov    edx,DWORD PTR [eax+0x190]
  4139d3:	mov    eax,DWORD PTR [ebp+0x20]
  4139d6:	mov    eax,DWORD PTR [eax+0x18c]
  4139dc:	mov    esi,DWORD PTR [eax]
  4139de:	cmp    DWORD PTR [ecx],esi
  4139e0:	jb     0x413a01
  4139e2:	mov    esi,DWORD PTR [edx]
  4139e4:	mov    edi,DWORD PTR [edx]
  4139e6:	mov    esi,DWORD PTR [esi+0x3c]
  4139e9:	lea    esi,[edi+esi*1+0x50]
  4139ed:	mov    edi,DWORD PTR [eax]
  4139ef:	add    edi,DWORD PTR [esi]
  4139f1:	cmp    DWORD PTR [ecx],edi
  4139f3:	jae    0x413a01
  4139f5:	mov    esi,DWORD PTR [eax]
  4139f7:	mov    eax,DWORD PTR [ecx]
  4139f9:	mov    edx,DWORD PTR [edx]
  4139fb:	sub    eax,esi
  4139fd:	add    edx,eax
  4139ff:	mov    DWORD PTR [ecx],edx
  413a01:	mov    eax,DWORD PTR [ebp+0xc]
  413a04:	jmp    0x413a47
  413a06:	push   DWORD PTR [ebp+0x20]
  413a09:	call   0x4129b8
  413a0e:	mov    eax,DWORD PTR [ebp+0x20]
  413a11:	mov    eax,DWORD PTR [eax+0x1c8]
  413a17:	mov    eax,DWORD PTR [eax]
  413a19:	xor    eax,esi
  413a1b:	add    eax,edi
  413a1d:	mov    eax,DWORD PTR [ebp+0x20]
  413a20:	jne    0x413a38
  413a22:	mov    ecx,DWORD PTR [ebp+0x20]
  413a25:	mov    ecx,DWORD PTR [ecx+0x1cc]
  413a2b:	push   DWORD PTR [ecx]
  413a2d:	mov    eax,DWORD PTR [eax+0x1d8]
  413a33:	call   DWORD PTR [eax+0x28]
  413a36:	jmp    0x413a45
  413a38:	mov    eax,DWORD PTR [eax+0x17c]
  413a3e:	mov    ecx,DWORD PTR [eax]
  413a40:	lea    eax,[ebp+0x4]
  413a43:	add    DWORD PTR [eax],ecx
  413a45:	xor    eax,eax
  413a47:	pop    edi
  413a48:	pop    esi
  413a49:	pop    ebx
  413a4a:	leave  
  413a4b:	ret    0x1c
  413a4e:	push   ebp
  413a4f:	mov    ebp,esp
  413a51:	sub    esp,0x1c
  413a54:	push   esi
  413a55:	mov    esi,eax
  413a57:	mov    eax,DWORD PTR [ecx+0x190]
  413a5d:	cmp    DWORD PTR [eax],0x0
  413a60:	je     0x413b70
  413a66:	test   edx,edx
  413a68:	je     0x413b70
  413a6e:	test   esi,esi
  413a70:	je     0x413b70
  413a76:	mov    eax,DWORD PTR [esi+0x88]
  413a7c:	test   eax,eax
  413a7e:	je     0x413b6b
  413a84:	cmp    DWORD PTR [esi+0x8c],0x10
  413a8b:	je     0x413b6b
  413a91:	cmp    DWORD PTR [esi+0x34],edx
  413a94:	je     0x413b6b
  413a9a:	mov    esi,DWORD PTR [ecx+0x18c]
  413aa0:	and    DWORD PTR [ebp-0x10],0x0
  413aa4:	mov    ecx,edx
  413aa6:	sub    ecx,DWORD PTR [esi]
  413aa8:	add    eax,edx
  413aaa:	movzx  edx,WORD PTR [eax+0xc]
  413aae:	mov    DWORD PTR [ebp-0x1c],ecx
  413ab1:	movzx  ecx,WORD PTR [eax+0xe]
  413ab5:	add    ecx,edx
  413ab7:	je     0x413b6b
  413abd:	lea    ecx,[eax+0x14]
  413ac0:	push   ebx
  413ac1:	mov    DWORD PTR [ebp-0x18],ecx
  413ac4:	mov    esi,0x7fffffff
  413ac9:	push   edi
  413aca:	test   DWORD PTR [ecx],esi
  413acc:	je     0x413b4d
  413ace:	mov    edx,DWORD PTR [ecx]
  413ad0:	and    DWORD PTR [ebp-0xc],0x0
  413ad4:	and    edx,esi
  413ad6:	add    edx,eax
  413ad8:	movzx  edi,WORD PTR [edx+0xe]
  413adc:	movzx  ebx,WORD PTR [edx+0xc]
  413ae0:	add    edi,ebx
  413ae2:	je     0x413b4d
  413ae4:	lea    ecx,[edx+0x14]
  413ae7:	mov    DWORD PTR [ebp-0x14],ecx
  413aea:	test   DWORD PTR [ecx],esi
  413aec:	je     0x413b2f
  413aee:	mov    ecx,DWORD PTR [ecx]
  413af0:	and    DWORD PTR [ebp-0x8],0x0
  413af4:	and    ecx,esi
  413af6:	add    ecx,eax
  413af8:	movzx  edi,WORD PTR [ecx+0xe]
  413afc:	movzx  ebx,WORD PTR [ecx+0xc]
  413b00:	add    edi,ebx
  413b02:	je     0x413b2f
  413b04:	lea    edi,[ecx+0x14]
  413b07:	mov    DWORD PTR [ebp-0x4],edi
  413b0a:	mov    edi,DWORD PTR [ebp-0x4]
  413b0d:	mov    edi,DWORD PTR [edi]
  413b0f:	test   edi,edi
  413b11:	je     0x413b19
  413b13:	mov    ebx,DWORD PTR [ebp-0x1c]
  413b16:	add    DWORD PTR [edi+eax*1],ebx
  413b19:	movzx  edi,WORD PTR [ecx+0xe]
  413b1d:	movzx  ebx,WORD PTR [ecx+0xc]
  413b21:	inc    DWORD PTR [ebp-0x8]
  413b24:	add    DWORD PTR [ebp-0x4],0x8
  413b28:	add    edi,ebx
  413b2a:	cmp    DWORD PTR [ebp-0x8],edi
  413b2d:	jb     0x413b0a
  413b2f:	movzx  edi,WORD PTR [edx+0xe]
  413b33:	movzx  ebx,WORD PTR [edx+0xc]
  413b37:	mov    ecx,DWORD PTR [ebp-0x14]
  413b3a:	inc    DWORD PTR [ebp-0xc]
  413b3d:	add    ecx,0x8
  413b40:	add    edi,ebx
  413b42:	mov    DWORD PTR [ebp-0x14],ecx
  413b45:	cmp    DWORD PTR [ebp-0xc],edi
  413b48:	jb     0x413aea
  413b4a:	mov    ecx,DWORD PTR [ebp-0x18]
  413b4d:	movzx  edx,WORD PTR [eax+0xe]
  413b51:	movzx  edi,WORD PTR [eax+0xc]
  413b55:	inc    DWORD PTR [ebp-0x10]
  413b58:	add    ecx,0x8
  413b5b:	add    edx,edi
  413b5d:	mov    DWORD PTR [ebp-0x18],ecx
  413b60:	cmp    DWORD PTR [ebp-0x10],edx
  413b63:	jb     0x413aca
  413b69:	pop    edi
  413b6a:	pop    ebx
  413b6b:	xor    eax,eax
  413b6d:	inc    eax
  413b6e:	jmp    0x413b72
  413b70:	xor    eax,eax
  413b72:	pop    esi
  413b73:	leave  
  413b74:	ret    
  413b75:	push   ebp
  413b76:	mov    ebp,esp
  413b78:	mov    ecx,DWORD PTR [ecx+0x190]
  413b7e:	mov    eax,DWORD PTR [ebp+0xc]
  413b81:	sub    esp,0x10
  413b84:	push   ebx
  413b85:	xor    ebx,ebx
  413b87:	push   esi
  413b88:	push   edi
  413b89:	cmp    DWORD PTR [ecx],ebx
  413b8b:	je     0x413c13
  413b91:	cmp    eax,ebx
  413b93:	je     0x413c13
  413b95:	cmp    DWORD PTR [eax+0x78],ebx
  413b98:	jne    0x413b9f
  413b9a:	xor    eax,eax
  413b9c:	inc    eax
  413b9d:	jmp    0x413c15
  413b9f:	mov    eax,DWORD PTR [eax+0x78]
  413ba2:	add    eax,DWORD PTR [ebp+0x8]
  413ba5:	mov    ecx,DWORD PTR [eax+0x1c]
  413ba8:	mov    edx,DWORD PTR [eax+0x24]
  413bab:	mov    esi,DWORD PTR [eax+0x14]
  413bae:	mov    edi,DWORD PTR [eax+0x18]
  413bb1:	add    ecx,DWORD PTR [ebp+0x8]
  413bb4:	add    edx,DWORD PTR [ebp+0x8]
  413bb7:	mov    DWORD PTR [ebp-0x4],esi
  413bba:	cmp    esi,edi
  413bbc:	ja     0x413bc1
  413bbe:	mov    DWORD PTR [ebp-0x4],edi
  413bc1:	mov    DWORD PTR [ebp-0x8],ebx
  413bc4:	cmp    DWORD PTR [ebp-0x4],ebx
  413bc7:	jbe    0x413b9a
  413bc9:	cmp    ebx,DWORD PTR [eax+0x14]
  413bcc:	jae    0x413bd4
  413bce:	movzx  esi,WORD PTR [edx+ebx*2]
  413bd2:	jmp    0x413bd6
  413bd4:	mov    esi,ebx
  413bd6:	lea    esi,[ecx+esi*4]
  413bd9:	mov    edi,DWORD PTR [esi]
  413bdb:	test   edi,edi
  413bdd:	je     0x413c08
  413bdf:	add    edi,DWORD PTR [ebp+0x8]
  413be2:	mov    DWORD PTR [ebp-0x10],edi
  413be5:	cmp    edi,eax
  413be7:	jbe    0x413bf9
  413be9:	mov    ebx,DWORD PTR [ebp+0xc]
  413bec:	mov    ebx,DWORD PTR [ebx+0x7c]
  413bef:	add    ebx,eax
  413bf1:	cmp    edi,ebx
  413bf3:	jae    0x413bf9
  413bf5:	mov    esi,DWORD PTR [esi]
  413bf7:	jmp    0x413c01
  413bf9:	sub    edi,DWORD PTR [ebp+0x8]
  413bfc:	mov    DWORD PTR [esi],edi
  413bfe:	mov    esi,DWORD PTR [ebp-0x10]
  413c01:	test   esi,esi
  413c03:	je     0x413c13
  413c05:	mov    ebx,DWORD PTR [ebp-0x8]
  413c08:	inc    ebx
  413c09:	mov    DWORD PTR [ebp-0x8],ebx
  413c0c:	cmp    ebx,DWORD PTR [ebp-0x4]
  413c0f:	jb     0x413bc9
  413c11:	jmp    0x413b9a
  413c13:	xor    eax,eax
  413c15:	pop    edi
  413c16:	pop    esi
  413c17:	pop    ebx
  413c18:	leave  
  413c19:	ret    0x8
  413c1c:	push   ebp
  413c1d:	mov    ebp,esp
  413c1f:	sub    esp,0x2c
  413c22:	mov    edx,0xf89c85b5
  413c27:	mov    DWORD PTR [ebp-0x4],edx
  413c2a:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  413c31:	mov    eax,DWORD PTR [ebp-0x4]
  413c34:	mov    ecx,DWORD PTR [ebp-0x4]
  413c37:	mov    ecx,DWORD PTR [ebp-0x4]
  413c3a:	mov    ecx,DWORD PTR [ebp-0x4]
  413c3d:	mov    ecx,DWORD PTR [ebp-0x4]
  413c40:	mov    ecx,DWORD PTR [ebp-0x4]
  413c43:	push   ebx
  413c44:	mov    ebx,DWORD PTR [ebp+0x10]
  413c47:	push   esi
  413c48:	mov    esi,0x7510897
  413c4d:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  413c54:	mov    ecx,DWORD PTR [ebp-0x4]
  413c57:	mov    ebx,DWORD PTR [ebx+0x190]
  413c5d:	push   edi
  413c5e:	mov    edi,0x3272de
  413c63:	xor    ecx,esi
  413c65:	xor    eax,esi
  413c67:	add    eax,edi
  413c69:	add    ecx,edi
  413c6b:	mov    DWORD PTR [ebp-0x18],eax
  413c6e:	cmp    ecx,DWORD PTR [ebx]
  413c70:	je     0x413ef1
  413c76:	mov    ebx,DWORD PTR [ebp-0x4]
  413c79:	mov    ecx,DWORD PTR [ebp+0xc]
  413c7c:	xor    ebx,esi
  413c7e:	add    ebx,edi
  413c80:	cmp    ebx,ecx
  413c82:	je     0x413ef1
  413c88:	mov    ebx,DWORD PTR [ebp-0x4]
  413c8b:	mov    ecx,DWORD PTR [ecx+0x80]
  413c91:	xor    ebx,esi
  413c93:	add    ebx,edi
  413c95:	cmp    ecx,ebx
  413c97:	je     0x413eec
  413c9d:	add    ecx,DWORD PTR [ebp+0x8]
  413ca0:	mov    DWORD PTR [ebp-0x2c],ecx
  413ca3:	mov    ebx,edx
  413ca5:	xor    ebx,esi
  413ca7:	add    ebx,edi
  413ca9:	mov    DWORD PTR [ebp-0x10],ebx
  413cac:	mov    ebx,DWORD PTR [ebp-0x10]
  413caf:	cmp    ebx,edx
  413cb1:	je     0x413cc5
  413cb3:	mov    edx,DWORD PTR [ebp-0x10]
  413cb6:	mov    ebx,DWORD PTR [ebp-0x4]
  413cb9:	imul   edx,edx,0x14
  413cbc:	xor    ebx,esi
  413cbe:	add    ebx,edi
  413cc0:	cmp    DWORD PTR [edx+ecx*1],ebx
  413cc3:	jne    0x413cdc
  413cc5:	mov    edx,DWORD PTR [ebp-0x10]
  413cc8:	mov    ebx,DWORD PTR [ebp-0x4]
  413ccb:	imul   edx,edx,0x14
  413cce:	xor    ebx,esi
  413cd0:	add    ebx,edi
  413cd2:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413cd6:	je     0x413ede
  413cdc:	mov    eax,DWORD PTR [ebp-0x4]
  413cdf:	mov    ebx,DWORD PTR [ebp-0x4]
  413ce2:	mov    eax,DWORD PTR [ebp-0x10]
  413ce5:	imul   eax,eax,0x14
  413ce8:	add    eax,ecx
  413cea:	mov    ecx,DWORD PTR [eax+0x10]
  413ced:	add    ecx,DWORD PTR [ebp+0x8]
  413cf0:	xor    ebx,esi
  413cf2:	mov    DWORD PTR [ebp-0x1c],ecx
  413cf5:	mov    ecx,DWORD PTR [ebp-0x4]
  413cf8:	mov    edx,DWORD PTR [ebp-0x4]
  413cfb:	xor    ecx,esi
  413cfd:	add    ecx,edi
  413cff:	xor    edx,esi
  413d01:	mov    DWORD PTR [ebp-0x24],ecx
  413d04:	mov    ecx,DWORD PTR [eax]
  413d06:	add    edx,edi
  413d08:	add    ebx,edi
  413d0a:	cmp    ecx,edx
  413d0c:	je     0x413d14
  413d0e:	add    ecx,DWORD PTR [ebp+0x8]
  413d11:	mov    DWORD PTR [ebp-0x24],ecx
  413d14:	mov    ecx,DWORD PTR [ebp-0x4]
  413d17:	xor    ecx,esi
  413d19:	add    ecx,DWORD PTR [eax+0xc]
  413d1c:	mov    eax,DWORD PTR [ebp+0x8]
  413d1f:	lea    eax,[ecx+eax*1+0x3272de]
  413d26:	mov    DWORD PTR [ebp+0xc],eax
  413d29:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  413d30:	mov    eax,DWORD PTR [ebp+0x10]
  413d33:	push   DWORD PTR [ebp+0xc]
  413d36:	mov    eax,DWORD PTR [eax+0x1d8]
  413d3c:	call   DWORD PTR [eax]
  413d3e:	mov    ecx,DWORD PTR [ebp-0x4]
  413d41:	xor    ecx,esi
  413d43:	add    ecx,edi
  413d45:	mov    DWORD PTR [ebp-0xc],eax
  413d48:	cmp    ecx,eax
  413d4a:	jne    0x413d5e
  413d4c:	mov    eax,DWORD PTR [ebp+0x10]
  413d4f:	push   DWORD PTR [ebp+0xc]
  413d52:	mov    eax,DWORD PTR [eax+0x1d8]
  413d58:	call   DWORD PTR [eax+0xc]
  413d5b:	mov    DWORD PTR [ebp-0xc],eax
  413d5e:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  413d65:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  413d6c:	mov    eax,DWORD PTR [ebp-0x4]
  413d6f:	xor    eax,esi
  413d71:	add    eax,edi
  413d73:	cmp    eax,DWORD PTR [ebp-0xc]
  413d76:	jne    0x413d9b
  413d78:	mov    eax,DWORD PTR [ebp-0x8]
  413d7b:	mov    ecx,DWORD PTR [ebp-0x20]
  413d7e:	xor    eax,esi
  413d80:	xor    ecx,esi
  413d82:	lea    ebx,[ebx+eax*1+0x3272de]
  413d89:	mov    eax,DWORD PTR [ebp+0x10]
  413d8c:	mov    eax,DWORD PTR [eax+0x1d8]
  413d92:	add    ecx,edi
  413d94:	imul   ecx,ebx
  413d97:	push   ecx
  413d98:	call   DWORD PTR [eax+0x24]
  413d9b:	mov    eax,DWORD PTR [ebp-0x4]
  413d9e:	xor    eax,esi
  413da0:	add    eax,edi
  413da2:	cmp    eax,DWORD PTR [ebp-0xc]
  413da5:	jne    0x413db6
  413da7:	mov    eax,DWORD PTR [ebp-0x28]
  413daa:	xor    eax,esi
  413dac:	add    eax,edi
  413dae:	cmp    ebx,eax
  413db0:	jbe    0x413d30
  413db6:	mov    eax,DWORD PTR [ebp-0x4]
  413db9:	xor    eax,esi
  413dbb:	add    eax,edi
  413dbd:	cmp    eax,DWORD PTR [ebp-0xc]
  413dc0:	jne    0x413dd9
  413dc2:	mov    eax,DWORD PTR [ebp-0x8]
  413dc5:	mov    ecx,DWORD PTR [ebp-0x18]
  413dc8:	xor    eax,esi
  413dca:	lea    eax,[ecx+eax*1+0x3272de]
  413dd1:	mov    DWORD PTR [ebp-0x18],eax
  413dd4:	jmp    0x413ec8
  413dd9:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413de0:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413de7:	mov    ebx,DWORD PTR [ebp-0x4]
  413dea:	xor    ebx,esi
  413dec:	add    ebx,edi
  413dee:	jmp    0x413eb5
  413df3:	mov    eax,DWORD PTR [ebp-0x4]
  413df6:	xor    eax,esi
  413df8:	add    eax,edi
  413dfa:	mov    DWORD PTR [ebp-0x14],eax
  413dfd:	mov    eax,DWORD PTR [ebp-0x4]
  413e00:	xor    eax,esi
  413e02:	add    eax,edi
  413e04:	mov    DWORD PTR [ebp+0xc],eax
  413e07:	mov    ecx,DWORD PTR [ebp-0x4]
  413e0a:	mov    eax,DWORD PTR [ebp-0x24]
  413e0d:	xor    ecx,esi
  413e0f:	add    ecx,edi
  413e11:	cmp    ecx,eax
  413e13:	je     0x413e1b
  413e15:	mov    eax,DWORD PTR [eax+ebx*4]
  413e18:	mov    DWORD PTR [ebp-0x14],eax
  413e1b:	mov    eax,DWORD PTR [ebp-0x1c]
  413e1e:	mov    eax,DWORD PTR [eax+ebx*4]
  413e21:	mov    DWORD PTR [ebp+0xc],eax
  413e24:	mov    eax,DWORD PTR [ebp-0x4]
  413e27:	mov    ecx,DWORD PTR [ebp-0x14]
  413e2a:	xor    eax,esi
  413e2c:	add    eax,edi
  413e2e:	cmp    eax,ecx
  413e30:	je     0x413e5b
  413e32:	mov    eax,DWORD PTR [ebp-0x4]
  413e35:	mov    ecx,DWORD PTR [ebp-0x14]
  413e38:	xor    eax,esi
  413e3a:	add    eax,edi
  413e3c:	shr    ecx,0x1f
  413e3f:	cmp    eax,ecx
  413e41:	je     0x413e5b
  413e43:	mov    ecx,DWORD PTR [ebp-0x14]
  413e46:	mov    eax,DWORD PTR [ebp+0x10]
  413e49:	mov    eax,DWORD PTR [eax+0x1d8]
  413e4f:	movzx  ecx,cx
  413e52:	push   ecx
  413e53:	push   DWORD PTR [ebp-0xc]
  413e56:	call   DWORD PTR [eax+0x8]
  413e59:	jmp    0x413e74
  413e5b:	mov    eax,DWORD PTR [ebp+0xc]
  413e5e:	add    eax,DWORD PTR [ebp+0x8]
  413e61:	mov    ecx,DWORD PTR [ebp+0x10]
  413e64:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413e6a:	add    eax,0x2
  413e6d:	push   eax
  413e6e:	push   DWORD PTR [ebp-0xc]
  413e71:	call   DWORD PTR [ecx+0x8]
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	mov    eax,DWORD PTR [ebp-0x4]
  413e7a:	mov    ecx,DWORD PTR [ebp+0xc]
  413e7d:	xor    eax,esi
  413e7f:	add    eax,edi
  413e81:	cmp    eax,ecx
  413e83:	mov    eax,DWORD PTR [ebp-0x8]
  413e86:	jne    0x413e99
  413e88:	mov    ecx,DWORD PTR [ebp-0x18]
  413e8b:	xor    eax,esi
  413e8d:	lea    eax,[ecx+eax*1+0x3272de]
  413e94:	mov    DWORD PTR [ebp-0x18],eax
  413e97:	jmp    0x413ea9
  413e99:	mov    ecx,DWORD PTR [ebp+0xc]
  413e9c:	xor    eax,esi
  413e9e:	add    eax,edi
  413ea0:	imul   eax,ecx
  413ea3:	mov    ecx,DWORD PTR [ebp-0x1c]
  413ea6:	mov    DWORD PTR [ecx+ebx*4],eax
  413ea9:	mov    eax,DWORD PTR [ebp-0x8]
  413eac:	xor    eax,esi
  413eae:	lea    ebx,[ebx+eax*1+0x3272de]
  413eb5:	mov    eax,DWORD PTR [ebp-0x4]
  413eb8:	mov    ecx,DWORD PTR [ebp-0x1c]
  413ebb:	xor    eax,esi
  413ebd:	add    eax,edi
  413ebf:	cmp    DWORD PTR [ecx+ebx*4],eax
  413ec2:	jne    0x413df3
  413ec8:	mov    edx,DWORD PTR [ebp-0x10]
  413ecb:	mov    eax,DWORD PTR [ebp-0x18]
  413ece:	mov    ecx,DWORD PTR [ebp-0x2c]
  413ed1:	sub    edx,0x3272dd
  413ed7:	xor    edx,esi
  413ed9:	jmp    0x413ca3
  413ede:	mov    ecx,DWORD PTR [ebp-0x4]
  413ee1:	xor    ecx,esi
  413ee3:	add    ecx,edi
  413ee5:	cmp    eax,ecx
  413ee7:	mov    eax,DWORD PTR [ebp-0x4]
  413eea:	jne    0x413ef4
  413eec:	mov    eax,DWORD PTR [ebp-0x8]
  413eef:	jmp    0x413ef4
  413ef1:	mov    eax,DWORD PTR [ebp-0x4]
  413ef4:	xor    eax,esi
  413ef6:	add    eax,edi
  413ef8:	pop    edi
  413ef9:	pop    esi
  413efa:	pop    ebx
  413efb:	leave  
  413efc:	ret    0xc
  413eff:	push   ebp
  413f00:	mov    ebp,esp
  413f02:	sub    esp,0x28
  413f05:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413f0c:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  413f13:	mov    eax,DWORD PTR [ebp+0xc]
  413f16:	mov    DWORD PTR [ebp+0xc],eax
  413f19:	push   esi
  413f1a:	mov    eax,eax
  413f1c:	mov    eax,DWORD PTR [ebp-0x4]
  413f1f:	mov    esi,DWORD PTR [ebp+0x8]
  413f22:	mov    ecx,0x7510897
  413f27:	xor    eax,ecx
  413f29:	mov    edx,0x3272de
  413f2e:	add    eax,edx
  413f30:	cmp    esi,eax
  413f32:	je     0x414059
  413f38:	mov    eax,DWORD PTR [ebp+0x8]
  413f3b:	mov    esi,DWORD PTR [ebp+0x8]
  413f3e:	add    esi,DWORD PTR [eax+0x3c]
  413f41:	push   edi
  413f42:	mov    DWORD PTR [ebp+0xc],esi
  413f45:	mov    DWORD PTR [ebp-0x1c],0xf89c85b0
  413f4c:	mov    eax,DWORD PTR [ebp-0x1c]
  413f4f:	mov    esi,DWORD PTR [ebp-0x4]
  413f52:	mov    edi,DWORD PTR [ebp+0xc]
  413f55:	xor    esi,ecx
  413f57:	xor    eax,ecx
  413f59:	add    esi,edx
  413f5b:	cmp    DWORD PTR [edi+eax*8+0x1939768],esi
  413f62:	je     0x414053
  413f68:	mov    esi,DWORD PTR [ebp+0xc]
  413f6b:	mov    eax,DWORD PTR [ebp+0x8]
  413f6e:	add    eax,DWORD PTR [esi+0xa0]
  413f74:	mov    esi,DWORD PTR [ebp+0x8]
  413f77:	mov    edi,DWORD PTR [ebp+0xc]
  413f7a:	sub    esi,DWORD PTR [edi+0x34]
  413f7d:	mov    edi,DWORD PTR [ebp-0x4]
  413f80:	xor    edi,ecx
  413f82:	add    edi,edx
  413f84:	mov    DWORD PTR [ebp-0x24],esi
  413f87:	cmp    esi,edi
  413f89:	je     0x414053
  413f8f:	mov    esi,DWORD PTR [ebp-0x4]
  413f92:	xor    esi,ecx
  413f94:	add    esi,edx
  413f96:	mov    DWORD PTR [ebp-0x8],esi
  413f99:	push   ebx
  413f9a:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  413fa1:	jmp    0x41403d
  413fa6:	mov    esi,DWORD PTR [ebp-0x4]
  413fa9:	xor    esi,ecx
  413fab:	lea    edi,[ebx-0x8]
  413fae:	add    esi,edx
  413fb0:	shr    edi,1
  413fb2:	cmp    esi,edi
  413fb4:	jae    0x414023
  413fb6:	sub    edi,esi
  413fb8:	lea    ebx,[eax+esi*2+0x8]
  413fbc:	mov    DWORD PTR [ebp-0x18],edi
  413fbf:	movzx  esi,WORD PTR [ebx]
  413fc2:	and    esi,0xfff
  413fc8:	mov    DWORD PTR [ebp-0x14],esi
  413fcb:	mov    edi,DWORD PTR [ebp-0x14]
  413fce:	mov    esi,DWORD PTR [eax]
  413fd0:	sub    esi,edx
  413fd2:	add    edi,esi
  413fd4:	movzx  esi,WORD PTR [ebx]
  413fd7:	shr    esi,0xc
  413fda:	xor    edi,ecx
  413fdc:	mov    DWORD PTR [ebp-0x20],edi
  413fdf:	mov    DWORD PTR [ebp-0x14],esi
  413fe2:	mov    esi,DWORD PTR [ebp-0x20]
  413fe5:	mov    edi,DWORD PTR [ebp+0x8]
  413fe8:	xor    esi,ecx
  413fea:	lea    esi,[esi+edi*1+0x3272de]
  413ff1:	mov    DWORD PTR [ebp-0x20],esi
  413ff4:	mov    esi,DWORD PTR [ebp-0x10]
  413ff7:	mov    edi,DWORD PTR [ebp-0x14]
  413ffa:	xor    esi,ecx
  413ffc:	add    esi,edx
  413ffe:	cmp    edi,esi
  414000:	jne    0x414018
  414002:	mov    esi,DWORD PTR [ebp-0x10]
  414005:	mov    edi,DWORD PTR [ebp-0x14]
  414008:	xor    esi,ecx
  41400a:	add    esi,edx
  41400c:	cmp    edi,esi
  41400e:	jne    0x414018
  414010:	mov    esi,DWORD PTR [ebp-0x20]
  414013:	mov    edi,DWORD PTR [ebp-0x24]
  414016:	add    DWORD PTR [esi],edi
  414018:	add    ebx,0x2
  41401b:	dec    DWORD PTR [ebp-0x18]
  41401e:	jne    0x413fbf
  414020:	mov    ebx,DWORD PTR [ebp-0xc]
  414023:	add    DWORD PTR [ebp-0x8],ebx
  414026:	mov    esi,DWORD PTR [ebp-0x1c]
  414029:	mov    edi,DWORD PTR [ebp-0x8]
  41402c:	mov    ebx,DWORD PTR [ebp+0xc]
  41402f:	xor    esi,ecx
  414031:	cmp    edi,DWORD PTR [ebx+esi*8+0x193976c]
  414038:	jae    0x414052
  41403a:	add    eax,DWORD PTR [ebp-0xc]
  41403d:	mov    esi,DWORD PTR [ebp-0x4]
  414040:	mov    ebx,DWORD PTR [eax+0x4]
  414043:	xor    esi,ecx
  414045:	add    esi,edx
  414047:	mov    DWORD PTR [ebp-0xc],ebx
  41404a:	cmp    ebx,esi
  41404c:	jne    0x413fa6
  414052:	pop    ebx
  414053:	mov    eax,DWORD PTR [ebp-0x28]
  414056:	pop    edi
  414057:	jmp    0x41405c
  414059:	mov    eax,DWORD PTR [ebp-0x4]
  41405c:	xor    eax,ecx
  41405e:	add    eax,edx
  414060:	pop    esi
  414061:	leave  
  414062:	ret    0x8
  414065:	push   ebp
  414066:	mov    ebp,esp
  414068:	sub    esp,0x54
  41406b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414072:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  414079:	mov    eax,DWORD PTR [ebp-0x4]
  41407c:	push   ebx
  41407d:	push   esi
  41407e:	mov    esi,0x7510897
  414083:	xor    eax,esi
  414085:	mov    ebx,0x3272de
  41408a:	add    eax,ebx
  41408c:	mov    DWORD PTR [ebp-0x18],eax
  41408f:	mov    eax,DWORD PTR [ebp-0x4]
  414092:	xor    eax,esi
  414094:	add    eax,ebx
  414096:	mov    DWORD PTR [ebp-0x20],eax
  414099:	push   edi
  41409a:	mov    edi,DWORD PTR [ebp+0x20]
  41409d:	mov    eax,DWORD PTR [ebp-0x10]
  4140a0:	mov    ecx,DWORD PTR [ebp-0x10]
  4140a3:	xor    eax,ecx
  4140a5:	mov    DWORD PTR [ebp-0x10],eax
  4140a8:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  4140af:	mov    eax,DWORD PTR [ebp-0x8]
  4140b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4140b5:	xor    eax,ecx
  4140b7:	mov    DWORD PTR [ebp-0x8],eax
  4140ba:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  4140c1:	mov    eax,DWORD PTR [ebp-0xc]
  4140c4:	mov    ecx,DWORD PTR [ebp-0xc]
  4140c7:	xor    eax,ecx
  4140c9:	mov    DWORD PTR [ebp-0xc],eax
  4140cc:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  4140d3:	mov    eax,DWORD PTR [ebp-0x14]
  4140d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4140d9:	xor    eax,ecx
  4140db:	mov    DWORD PTR [ebp-0x14],eax
  4140de:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  4140e5:	mov    eax,0x9474
  4140ea:	mov    WORD PTR [ebp+0x20],ax
  4140ee:	mov    eax,DWORD PTR [ebp+0x8]
  4140f1:	test   eax,eax
  4140f3:	je     0x4144d8
  4140f9:	mov    eax,DWORD PTR [ebp+0xc]
  4140fc:	test   eax,eax
  4140fe:	je     0x4144d8
  414104:	mov    eax,DWORD PTR [ebp+0x18]
  414107:	test   eax,eax
  414109:	je     0x4144d8
  41410f:	mov    ax,WORD PTR [ebp+0x20]
  414113:	mov    ecx,0x8a8b
  414118:	xor    ax,cx
  41411b:	mov    ecx,0x3b4e
  414120:	add    ax,cx
  414123:	mov    ecx,DWORD PTR [ebp+0x8]
  414126:	cmp    WORD PTR [ecx],ax
  414129:	jne    0x4144d8
  41412f:	mov    eax,DWORD PTR [ebp-0x4]
  414132:	mov    ecx,DWORD PTR [ebp+0x8]
  414135:	mov    eax,DWORD PTR [ebp+0x8]
  414138:	add    eax,DWORD PTR [ecx+0x3c]
  41413b:	mov    DWORD PTR [ebp+0xc],eax
  41413e:	mov    eax,DWORD PTR [eax+0x50]
  414141:	test   eax,eax
  414143:	je     0x4144d8
  414149:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  414150:	mov    eax,DWORD PTR [ebp-0x2c]
  414153:	xor    eax,esi
  414155:	add    eax,ebx
  414157:	mov    DWORD PTR [ebp-0x2c],eax
  41415a:	mov    eax,DWORD PTR [ebp-0x4]
  41415d:	mov    eax,DWORD PTR [edi+0x190]
  414163:	mov    ecx,DWORD PTR [eax]
  414165:	mov    ecx,DWORD PTR [ecx+0x3c]
  414168:	add    ecx,DWORD PTR [eax]
  41416a:	mov    eax,DWORD PTR [ebp-0x4]
  41416d:	mov    eax,DWORD PTR [edi+0x18c]
  414173:	mov    edx,DWORD PTR [eax]
  414175:	mov    DWORD PTR [ebp-0x1c],ecx
  414178:	mov    DWORD PTR [ebp+0x20],edx
  41417b:	cmp    edx,edx
  41417d:	jne    0x4141b2
  41417f:	mov    eax,DWORD PTR [edi+0x1d8]
  414185:	lea    edx,[ebp-0x18]
  414188:	push   edx
  414189:	mov    edx,DWORD PTR [ebp-0x8]
  41418c:	xor    edx,esi
  41418e:	add    edx,ebx
  414190:	push   edx
  414191:	push   DWORD PTR [ecx+0x50]
  414194:	push   DWORD PTR [ebp+0x20]
  414197:	call   DWORD PTR [eax+0x1c]
  41419a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41419d:	mov    eax,DWORD PTR [ecx+0x54]
  4141a0:	mov    ecx,DWORD PTR [ecx+0x50]
  4141a3:	sub    ecx,eax
  4141a5:	add    eax,DWORD PTR [ebp+0x20]
  4141a8:	push   ecx
  4141a9:	push   eax
  4141aa:	call   0x414aec
  4141af:	mov    edx,DWORD PTR [ebp+0x20]
  4141b2:	mov    eax,DWORD PTR [edi+0x194]
  4141b8:	mov    DWORD PTR [eax],edx
  4141ba:	mov    eax,DWORD PTR [ebp+0xc]
  4141bd:	push   DWORD PTR [eax+0x54]
  4141c0:	push   DWORD PTR [ebp+0x8]
  4141c3:	push   edx
  4141c4:	call   0x414993
  4141c9:	mov    ecx,DWORD PTR [ebp+0x20]
  4141cc:	mov    eax,DWORD PTR [ecx+0x3c]
  4141cf:	add    eax,ecx
  4141d1:	movzx  ecx,WORD PTR [eax+0x14]
  4141d5:	lea    ecx,[ecx+eax*1+0x18]
  4141d9:	mov    DWORD PTR [ebp+0x18],ecx
  4141dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4141df:	movzx  edx,WORD PTR [eax+0x6]
  4141e3:	xor    ecx,esi
  4141e5:	add    ecx,ebx
  4141e7:	mov    DWORD PTR [ebp+0xc],eax
  4141ea:	cmp    edx,ecx
  4141ec:	je     0x41429a
  4141f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4141f5:	xor    ecx,esi
  4141f7:	add    ecx,ebx
  4141f9:	mov    DWORD PTR [ebp-0x20],ecx
  4141fc:	mov    ecx,DWORD PTR [ebp-0x24]
  4141ff:	movzx  edx,WORD PTR [eax+0x6]
  414203:	xor    ecx,esi
  414205:	sub    edx,ecx
  414207:	sub    edx,ebx
  414209:	cmp    DWORD PTR [ebp-0x20],edx
  41420c:	ja     0x41429a
  414212:	mov    edx,DWORD PTR [ebp+0x18]
  414215:	add    edx,0x8
  414218:	mov    DWORD PTR [ebp+0x18],edx
  41421b:	jmp    0x414220
  41421d:	mov    edx,DWORD PTR [ebp+0x18]
  414220:	mov    eax,DWORD PTR [eax+0x38]
  414223:	lea    ecx,[eax-0x1]
  414226:	mov    DWORD PTR [ebp-0x30],eax
  414229:	mov    eax,DWORD PTR [edx]
  41422b:	test   ecx,eax
  41422d:	je     0x414236
  41422f:	not    ecx
  414231:	and    eax,ecx
  414233:	add    eax,DWORD PTR [ebp-0x30]
  414236:	push   eax
  414237:	mov    eax,DWORD PTR [edx+0x4]
  41423a:	add    eax,DWORD PTR [ebp+0x20]
  41423d:	push   eax
  41423e:	call   0x414aec
  414243:	mov    edx,DWORD PTR [ebp-0x4]
  414246:	mov    eax,DWORD PTR [ebp+0x18]
  414249:	mov    ecx,DWORD PTR [eax+0x8]
  41424c:	xor    edx,esi
  41424e:	add    edx,ebx
  414250:	cmp    ecx,edx
  414252:	je     0x41426b
  414254:	push   ecx
  414255:	mov    ecx,DWORD PTR [ebp+0x8]
  414258:	add    ecx,DWORD PTR [eax+0xc]
  41425b:	mov    eax,DWORD PTR [eax+0x4]
  41425e:	add    eax,DWORD PTR [ebp+0x20]
  414261:	push   ecx
  414262:	push   eax
  414263:	call   0x414993
  414268:	mov    eax,DWORD PTR [ebp+0x18]
  41426b:	mov    ecx,DWORD PTR [ebp-0x24]
  41426e:	mov    edx,DWORD PTR [ebp-0x20]
  414271:	add    eax,0x28
  414274:	xor    ecx,esi
  414276:	lea    ecx,[edx+ecx*1+0x3272de]
  41427d:	mov    edx,DWORD PTR [ebp+0xc]
  414280:	mov    DWORD PTR [ebp+0x18],eax
  414283:	mov    eax,DWORD PTR [ebp-0x24]
  414286:	movzx  edx,WORD PTR [edx+0x6]
  41428a:	xor    eax,esi
  41428c:	sub    edx,eax
  41428e:	mov    eax,DWORD PTR [ebp+0xc]
  414291:	sub    edx,ebx
  414293:	mov    DWORD PTR [ebp-0x20],ecx
  414296:	cmp    ecx,edx
  414298:	jbe    0x41421d
  41429a:	mov    ecx,DWORD PTR [ebp-0x4]
  41429d:	mov    edx,DWORD PTR [edi+0x18c]
  4142a3:	xor    ecx,esi
  4142a5:	add    ecx,ebx
  4142a7:	mov    DWORD PTR [ebp+0x18],ecx
  4142aa:	mov    ecx,DWORD PTR [ebp+0x20]
  4142ad:	cmp    ecx,DWORD PTR [edx]
  4142af:	jne    0x4142d8
  4142b1:	mov    eax,DWORD PTR [edi+0x1d8]
  4142b7:	lea    edx,[ebp-0x18]
  4142ba:	push   edx
  4142bb:	mov    edx,DWORD PTR [ebp-0xc]
  4142be:	xor    edx,esi
  4142c0:	add    edx,ebx
  4142c2:	push   edx
  4142c3:	mov    edx,DWORD PTR [ebp-0x1c]
  4142c6:	push   DWORD PTR [edx+0x54]
  4142c9:	push   ecx
  4142ca:	call   DWORD PTR [eax+0x1c]
  4142cd:	test   eax,eax
  4142cf:	je     0x4144c9
  4142d5:	mov    eax,DWORD PTR [ebp+0xc]
  4142d8:	mov    ecx,DWORD PTR [edi+0x1c8]
  4142de:	mov    ecx,DWORD PTR [ecx]
  4142e0:	xor    ecx,esi
  4142e2:	add    ecx,ebx
  4142e4:	je     0x4143f4
  4142ea:	and    DWORD PTR [ebp-0x28],0x0
  4142ee:	mov    eax,0x4fab
  4142f3:	mov    WORD PTR [ebp-0x3c],ax
  4142f7:	add    eax,0x2
  4142fa:	mov    WORD PTR [ebp-0x3a],ax
  4142fe:	mov    eax,0x4f9d
  414303:	mov    WORD PTR [ebp-0x38],ax
  414307:	add    eax,0xfffffff8
  41430a:	and    DWORD PTR [ebp+0x8],0x0
  41430e:	mov    ecx,eax
  414310:	mov    WORD PTR [ebp-0x34],ax
  414314:	mov    eax,0x4e39
  414319:	mov    WORD PTR [ebp-0x36],cx
  41431d:	mov    WORD PTR [ebp-0x32],ax
  414321:	mov    eax,DWORD PTR [ebp+0x8]
  414324:	lea    eax,[ebp+eax*2-0x3c]
  414328:	mov    ecx,0x8a8b
  41432d:	xor    cx,WORD PTR [eax]
  414330:	mov    edx,0x3b4e
  414335:	add    cx,dx
  414338:	inc    DWORD PTR [ebp+0x8]
  41433b:	cmp    DWORD PTR [ebp+0x8],0x6
  41433f:	mov    WORD PTR [eax],cx
  414342:	jb     0x414321
  414344:	mov    DWORD PTR [ebp-0x54],0x220e1c24
  41434b:	mov    DWORD PTR [ebp-0x50],0x3d1c0a01
  414352:	mov    DWORD PTR [ebp-0x4c],0xf10e0c0a
  414359:	mov    DWORD PTR [ebp-0x48],0x390e0b22
  414360:	mov    DWORD PTR [ebp-0x44],0x1d0e1c1c
  414367:	mov    WORD PTR [ebp-0x40],0xf0f
  41436d:	mov    BYTE PTR [ebp-0x3e],0x78
  414371:	xor    ecx,ecx
  414373:	lea    eax,[ebp+ecx*1-0x54]
  414377:	mov    dl,BYTE PTR [eax]
  414379:	xor    dl,0x72
  41437c:	sub    dl,0xa
  41437f:	inc    ecx
  414380:	mov    BYTE PTR [eax],dl
  414382:	cmp    ecx,0x17
  414385:	jb     0x414373
  414387:	mov    eax,DWORD PTR [edi+0x1d8]
  41438d:	lea    ecx,[ebp-0x3c]
  414390:	push   ecx
  414391:	call   DWORD PTR [eax+0x4]
  414394:	mov    ecx,DWORD PTR [edi+0x1d8]
  41439a:	lea    edx,[ebp-0x54]
  41439d:	push   edx
  41439e:	push   eax
  41439f:	call   DWORD PTR [ecx+0x8]
  4143a2:	lea    ecx,[ebp-0x28]
  4143a5:	push   ecx
  4143a6:	mov    ecx,DWORD PTR [edi+0x18c]
  4143ac:	push   DWORD PTR [ecx]
  4143ae:	call   eax
  4143b0:	mov    eax,DWORD PTR [ebp-0x28]
  4143b3:	test   eax,eax
  4143b5:	je     0x4143f1
  4143b7:	mov    DWORD PTR [ebp+0x8],eax
  4143ba:	jmp    0x4143c6
  4143bc:	mov    eax,DWORD PTR [eax]
  4143be:	mov    DWORD PTR [ebp-0x28],eax
  4143c1:	cmp    eax,DWORD PTR [ebp+0x8]
  4143c4:	je     0x4143d3
  4143c6:	mov    edx,DWORD PTR [eax+0x18]
  4143c9:	mov    ecx,DWORD PTR [edi+0x18c]
  4143cf:	cmp    edx,DWORD PTR [ecx]
  4143d1:	jne    0x4143bc
  4143d3:	mov    edx,DWORD PTR [eax+0x18]
  4143d6:	mov    ecx,DWORD PTR [edi+0x18c]
  4143dc:	cmp    edx,DWORD PTR [ecx]
  4143de:	jne    0x4143f1
  4143e0:	mov    edx,DWORD PTR [ebp-0x1c]
  4143e3:	mov    ecx,DWORD PTR [edi+0x190]
  4143e9:	mov    edx,DWORD PTR [edx+0x28]
  4143ec:	add    edx,DWORD PTR [ecx]
  4143ee:	mov    DWORD PTR [eax+0x1c],edx
  4143f1:	mov    eax,DWORD PTR [ebp+0xc]
  4143f4:	push   edi
  4143f5:	push   eax
  4143f6:	push   DWORD PTR [ebp+0x20]
  4143f9:	call   0x413c1c
  4143fe:	test   eax,eax
  414400:	je     0x4144c9
  414406:	push   DWORD PTR [ebp+0xc]
  414409:	mov    ecx,edi
  41440b:	push   DWORD PTR [ebp+0x20]
  41440e:	call   0x413b75
  414413:	test   eax,eax
  414415:	je     0x4144c9
  41441b:	mov    eax,DWORD PTR [ebp+0xc]
  41441e:	mov    edx,DWORD PTR [ebp+0x20]
  414421:	mov    ecx,edi
  414423:	call   0x413a4e
  414428:	test   eax,eax
  41442a:	je     0x4144c9
  414430:	push   edi
  414431:	push   DWORD PTR [ebp+0x20]
  414434:	call   0x413eff
  414439:	test   eax,eax
  41443b:	je     0x4144c9
  414441:	mov    eax,DWORD PTR [edi+0x18c]
  414447:	mov    edx,DWORD PTR [ebp+0x20]
  41444a:	cmp    edx,DWORD PTR [eax]
  41444c:	jne    0x414468
  41444e:	mov    eax,DWORD PTR [edi+0x1d8]
  414454:	lea    ecx,[ebp-0x18]
  414457:	push   ecx
  414458:	push   DWORD PTR [ebp-0x18]
  41445b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41445e:	push   DWORD PTR [ecx+0x54]
  414461:	push   edx
  414462:	call   DWORD PTR [eax+0x1c]
  414465:	mov    edx,DWORD PTR [ebp+0x20]
  414468:	mov    eax,DWORD PTR [edi+0x1c8]
  41446e:	mov    eax,DWORD PTR [eax]
  414470:	xor    eax,esi
  414472:	add    eax,ebx
  414474:	je     0x4144ad
  414476:	mov    ecx,DWORD PTR [ebp+0xc]
  414479:	mov    eax,DWORD PTR [ecx+0x28]
  41447c:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414483:	mov    esi,DWORD PTR [ebp+0x8]
  414486:	push   DWORD PTR [ebp+0x14]
  414489:	xor    esi,0x897
  41448f:	push   DWORD PTR [ebp+0x10]
  414492:	add    esi,0x72de
  414498:	or     WORD PTR [ecx+0x16],si
  41449c:	add    eax,edx
  41449e:	push   edx
  41449f:	call   eax
  4144a1:	mov    DWORD PTR [edi+0x1d0],0xf89c85b4
  4144ab:	jmp    0x4144b7
  4144ad:	mov    eax,DWORD PTR [ebp+0xc]
  4144b0:	mov    eax,DWORD PTR [eax+0x28]
  4144b3:	add    eax,edx
  4144b5:	call   eax
  4144b7:	mov    DWORD PTR [ebp-0x20],eax
  4144ba:	mov    eax,DWORD PTR [ebp-0x20]
  4144bd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4144c0:	mov    DWORD PTR [ecx],eax
  4144c2:	mov    DWORD PTR [ebp+0x18],0x1
  4144c9:	cmp    DWORD PTR [ebp+0x18],0x0
  4144cd:	jne    0x4144d3
  4144cf:	and    DWORD PTR [ebp+0x20],0x0
  4144d3:	mov    eax,DWORD PTR [ebp+0x20]
  4144d6:	jmp    0x4144da
  4144d8:	xor    eax,eax
  4144da:	pop    edi
  4144db:	pop    esi
  4144dc:	pop    ebx
  4144dd:	leave  
  4144de:	ret    0x1c
  4144e1:	push   ebp
  4144e2:	mov    ebp,esp
  4144e4:	movzx  edx,WORD PTR [ecx+0x6]
  4144e8:	movzx  eax,WORD PTR [ecx+0x14]
  4144ec:	push   ebx
  4144ed:	push   edi
  4144ee:	xor    edi,edi
  4144f0:	lea    eax,[eax+ecx*1+0x18]
  4144f4:	test   edx,edx
  4144f6:	je     0x414517
  4144f8:	mov    ecx,DWORD PTR [eax+0xc]
  4144fb:	lea    ebx,[ecx+esi*1]
  4144fe:	cmp    DWORD PTR [ebp+0x8],ebx
  414501:	jb     0x41450f
  414503:	mov    ebx,DWORD PTR [eax+0x8]
  414506:	add    ebx,ecx
  414508:	add    ebx,esi
  41450a:	cmp    DWORD PTR [ebp+0x8],ebx
  41450d:	jb     0x414519
  41450f:	add    eax,0x28
  414512:	inc    edi
  414513:	cmp    edi,edx
  414515:	jb     0x4144f8
  414517:	xor    eax,eax
  414519:	pop    edi
  41451a:	pop    ebx
  41451b:	pop    ebp
  41451c:	ret    0x4
  41451f:	push   ebp
  414520:	mov    ebp,esp
  414522:	sub    esp,0x28
  414525:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  41452c:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414533:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  41453a:	mov    eax,0x4f98
  41453f:	mov    WORD PTR [ebp-0xc],ax
  414543:	mov    eax,0x4e78
  414548:	mov    WORD PTR [ebp-0x4],ax
  41454c:	mov    eax,0x4fa7
  414551:	mov    WORD PTR [ebp-0x8],ax
  414555:	add    eax,0xffffffe0
  414558:	mov    WORD PTR [ebp-0x8],ax
  41455c:	mov    eax,DWORD PTR [ebp+0x8]
  41455f:	mov    DWORD PTR [ebp-0x14],eax
  414562:	mov    eax,DWORD PTR [ebp+0xc]
  414565:	mov    DWORD PTR [ebp-0x18],eax
  414568:	mov    eax,DWORD PTR [ebp-0x10]
  41456b:	push   ebx
  41456c:	mov    ecx,0x7510897
  414571:	xor    eax,ecx
  414573:	push   esi
  414574:	mov    esi,DWORD PTR [ebp-0x14]
  414577:	mov    edx,0x3272de
  41457c:	add    eax,edx
  41457e:	push   edi
  41457f:	cmp    esi,eax
  414581:	je     0x41477f
  414587:	mov    eax,DWORD PTR [ebp-0x10]
  41458a:	mov    esi,DWORD PTR [ebp-0x18]
  41458d:	xor    eax,ecx
  41458f:	add    eax,edx
  414591:	cmp    esi,eax
  414593:	je     0x41477f
  414599:	mov    eax,DWORD PTR [ebp-0x10]
  41459c:	xor    eax,ecx
  41459e:	add    eax,edx
  4145a0:	mov    DWORD PTR [ebp-0x20],eax
  4145a3:	mov    eax,DWORD PTR [ebp-0x10]
  4145a6:	xor    eax,ecx
  4145a8:	add    eax,edx
  4145aa:	mov    DWORD PTR [ebp-0x24],eax
  4145ad:	movzx  esi,WORD PTR [ebp-0x4]
  4145b1:	movzx  edi,WORD PTR [ebp-0xc]
  4145b5:	mov    eax,0x8a8b
  4145ba:	xor    si,ax
  4145bd:	mov    ebx,0x8a8b
  4145c2:	xor    di,bx
  4145c5:	mov    eax,0x3b4e
  4145ca:	add    si,ax
  4145cd:	add    di,ax
  4145d0:	sub    edi,esi
  4145d2:	mov    WORD PTR [ebp-0xc],di
  4145d6:	mov    esi,DWORD PTR [ebp-0x20]
  4145d9:	mov    edi,DWORD PTR [ebp-0x14]
  4145dc:	mov    si,WORD PTR [edi+esi*2]
  4145e0:	mov    WORD PTR [ebp+0x8],si
  4145e4:	mov    esi,DWORD PTR [ebp-0x24]
  4145e7:	mov    edi,DWORD PTR [ebp-0x18]
  4145ea:	mov    si,WORD PTR [edi+esi*2]
  4145ee:	mov    WORD PTR [ebp+0xc],si
  4145f2:	mov    esi,0x72de
  4145f7:	jmp    0x414704
  4145fc:	mov    edi,DWORD PTR [ebp-0x10]
  4145ff:	mov    bx,WORD PTR [ebp+0xc]
  414603:	xor    edi,0x897
  414609:	add    edi,esi
  41460b:	cmp    bx,di
  41460e:	je     0x41472e
  414614:	mov    edi,DWORD PTR [ebp-0x10]
  414617:	mov    ebx,DWORD PTR [ebp+0x10]
  41461a:	xor    edi,ecx
  41461c:	add    edi,edx
  41461e:	cmp    ebx,edi
  414620:	mov    di,WORD PTR [ebp+0xc]
  414624:	mov    bx,WORD PTR [ebp+0x8]
  414628:	je     0x4146bb
  41462e:	cmp    bx,di
  414631:	je     0x4146c4
  414637:	mov    di,WORD PTR [ebp-0x4]
  41463b:	mov    ebx,0x8a8b
  414640:	xor    di,bx
  414643:	mov    bx,WORD PTR [ebp+0x8]
  414647:	add    di,ax
  41464a:	cmp    bx,di
  41464d:	jb     0x414675
  41464f:	mov    di,WORD PTR [ebp-0x8]
  414653:	mov    ebx,0x8a8b
  414658:	xor    di,bx
  41465b:	mov    bx,WORD PTR [ebp+0x8]
  41465f:	add    di,ax
  414662:	cmp    bx,di
  414665:	ja     0x414675
  414667:	movzx  edi,WORD PTR [ebp+0x8]
  41466b:	movzx  ebx,WORD PTR [ebp-0xc]
  41466f:	add    edi,ebx
  414671:	mov    WORD PTR [ebp+0x8],di
  414675:	mov    di,WORD PTR [ebp-0x4]
  414679:	mov    ebx,0x8a8b
  41467e:	xor    di,bx
  414681:	mov    bx,WORD PTR [ebp+0xc]
  414685:	add    di,ax
  414688:	cmp    bx,di
  41468b:	jb     0x4146b3
  41468d:	mov    di,WORD PTR [ebp-0x8]
  414691:	mov    ebx,0x8a8b
  414696:	xor    di,bx
  414699:	mov    bx,WORD PTR [ebp+0xc]
  41469d:	add    di,ax
  4146a0:	cmp    bx,di
  4146a3:	ja     0x4146b3
  4146a5:	movzx  edi,WORD PTR [ebp+0xc]
  4146a9:	movzx  ebx,WORD PTR [ebp-0xc]
  4146ad:	add    edi,ebx
  4146af:	mov    WORD PTR [ebp+0xc],di
  4146b3:	mov    di,WORD PTR [ebp+0xc]
  4146b7:	mov    bx,WORD PTR [ebp+0x8]
  4146bb:	cmp    bx,di
  4146be:	jne    0x41477f
  4146c4:	mov    edi,DWORD PTR [ebp-0x28]
  4146c7:	mov    ebx,DWORD PTR [ebp-0x14]
  4146ca:	xor    edi,ecx
  4146cc:	lea    edi,[edi+ebx*1+0x3272de]
  4146d3:	mov    DWORD PTR [ebp-0x14],edi
  4146d6:	mov    edi,DWORD PTR [ebp-0x28]
  4146d9:	mov    ebx,DWORD PTR [ebp-0x18]
  4146dc:	xor    edi,ecx
  4146de:	lea    edi,[edi+ebx*1+0x3272de]
  4146e5:	mov    DWORD PTR [ebp-0x18],edi
  4146e8:	mov    edi,DWORD PTR [ebp-0x20]
  4146eb:	mov    ebx,DWORD PTR [ebp-0x14]
  4146ee:	mov    di,WORD PTR [ebx+edi*2]
  4146f2:	mov    WORD PTR [ebp+0x8],di
  4146f6:	mov    edi,DWORD PTR [ebp-0x24]
  4146f9:	mov    ebx,DWORD PTR [ebp-0x18]
  4146fc:	mov    di,WORD PTR [ebx+edi*2]
  414700:	mov    WORD PTR [ebp+0xc],di
  414704:	mov    edi,DWORD PTR [ebp-0x10]
  414707:	mov    bx,WORD PTR [ebp+0x8]
  41470b:	xor    edi,0x897
  414711:	add    edi,esi
  414713:	cmp    bx,di
  414716:	jne    0x4145fc
  41471c:	mov    esi,DWORD PTR [ebp-0x1c]
  41471f:	xor    esi,ecx
  414721:	mov    ecx,DWORD PTR [ebp-0x10]
  414724:	add    esi,edx
  414726:	imul   esi,ecx
  414729:	mov    DWORD PTR [ebp-0x10],esi
  41472c:	jmp    0x414740
  41472e:	mov    edx,DWORD PTR [ebp-0x10]
  414731:	xor    edx,ecx
  414733:	mov    ecx,DWORD PTR [ebp-0x1c]
  414736:	lea    ecx,[edx+ecx*1+0x3272de]
  41473d:	mov    DWORD PTR [ebp-0x1c],ecx
  414740:	mov    edx,DWORD PTR [ebp-0x20]
  414743:	mov    esi,DWORD PTR [ebp-0x14]
  414746:	mov    si,WORD PTR [esi+edx*2]
  41474a:	mov    ecx,eax
  41474c:	sub    si,cx
  41474f:	mov    edx,0x8a8b
  414754:	xor    si,dx
  414757:	mov    ecx,0x4e39
  41475c:	cmp    si,cx
  41475f:	jne    0x41477a
  414761:	mov    esi,DWORD PTR [ebp-0x24]
  414764:	mov    edi,DWORD PTR [ebp-0x18]
  414767:	mov    si,WORD PTR [edi+esi*2]
  41476b:	sub    si,ax
  41476e:	xor    si,dx
  414771:	cmp    si,cx
  414774:	jne    0x41477a
  414776:	xor    eax,eax
  414778:	jmp    0x414786
  41477a:	xor    eax,eax
  41477c:	inc    eax
  41477d:	jmp    0x414786
  41477f:	mov    eax,DWORD PTR [ebp-0x1c]
  414782:	xor    eax,ecx
  414784:	add    eax,edx
  414786:	pop    edi
  414787:	pop    esi
  414788:	pop    ebx
  414789:	leave  
  41478a:	ret    0xc
  41478d:	push   ebp
  41478e:	mov    ebp,esp
  414790:	push   ecx
  414791:	mov    cx,WORD PTR [eax]
  414794:	push   esi
  414795:	mov    esi,0x3b4e
  41479a:	sub    cx,si
  41479d:	mov    esi,0x8a8b
  4147a2:	xor    cx,si
  4147a5:	mov    esi,0x4e39
  4147aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4147b1:	mov    edx,0xf89c85b5
  4147b6:	cmp    cx,si
  4147b9:	je     0x414818
  4147bb:	push   ebx
  4147bc:	push   edi
  4147bd:	movzx  ecx,cx
  4147c0:	mov    edi,0xffcd8d22
  4147c5:	mov    esi,0x7510897
  4147ca:	mov    ebx,0x4f85
  4147cf:	cmp    cx,bx
  4147d2:	jne    0x4147d7
  4147d4:	mov    DWORD PTR [ebp-0x4],edx
  4147d7:	lea    edx,[edi+0x1]
  4147da:	xor    edx,esi
  4147dc:	mov    edi,edx
  4147de:	xor    edi,esi
  4147e0:	mov    cx,WORD PTR [eax+edi*2+0x64e5bc]
  4147e8:	mov    ebx,0x3b4e
  4147ed:	sub    cx,bx
  4147f0:	mov    ebx,0x8a8b
  4147f5:	xor    cx,bx
  4147f8:	mov    ebx,0x4e39
  4147fd:	cmp    cx,bx
  414800:	jne    0x4147ca
  414802:	mov    ecx,DWORD PTR [ebp-0x4]
  414805:	pop    edi
  414806:	pop    ebx
  414807:	cmp    ecx,0xf89c85b6
  41480d:	je     0x414818
  41480f:	xor    ecx,esi
  414811:	lea    eax,[eax+ecx*2+0x64e5be]
  414818:	pop    esi
  414819:	leave  
  41481a:	ret    
  41481b:	push   ebp
  41481c:	mov    ebp,esp
  41481e:	push   ecx
  41481f:	push   esi
  414820:	push   edi
  414821:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  414828:	mov    esi,0xf89c85b5
  41482d:	call   0x41478d
  414832:	mov    edi,eax
  414834:	mov    al,BYTE PTR [edi]
  414836:	add    al,0xa
  414838:	xor    al,0x72
  41483a:	cmp    al,0x78
  41483c:	je     0x41489f
  41483e:	mov    eax,edi
  414840:	mov    edx,0xffcd8d22
  414845:	mov    ecx,0x7510897
  41484a:	push   ebx
  41484b:	mov    ax,WORD PTR [eax]
  41484e:	mov    ebx,0x3b4e
  414853:	sub    ax,bx
  414856:	mov    ebx,0x8a8b
  41485b:	xor    ax,bx
  41485e:	mov    ebx,0x4e6b
  414863:	cmp    ax,bx
  414866:	jne    0x41486b
  414868:	mov    DWORD PTR [ebp-0x4],esi
  41486b:	lea    esi,[edx+0x1]
  41486e:	xor    esi,ecx
  414870:	mov    edx,esi
  414872:	xor    edx,ecx
  414874:	lea    eax,[edi+edx*2+0x64e5bc]
  41487b:	mov    bl,BYTE PTR [eax]
  41487d:	add    bl,0xa
  414880:	xor    bl,0x72
  414883:	cmp    bl,0x78
  414886:	jne    0x41484b
  414888:	mov    eax,DWORD PTR [ebp-0x4]
  41488b:	pop    ebx
  41488c:	cmp    eax,0xf89c85b6
  414891:	je     0x41489f
  414893:	xor    eax,ecx
  414895:	xor    ecx,ecx
  414897:	mov    WORD PTR [edi+eax*2+0x64e5bc],cx
  41489f:	mov    eax,edi
  4148a1:	pop    edi
  4148a2:	pop    esi
  4148a3:	leave  
  4148a4:	ret    
  4148a5:	push   ebp
  4148a6:	mov    ebp,esp
  4148a8:	push   ecx
  4148a9:	push   esi
  4148aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4148b1:	mov    esi,0xf89c85b5
  4148b6:	call   0x41478d
  4148bb:	mov    cx,WORD PTR [eax]
  4148be:	mov    edx,0x3b4e
  4148c3:	sub    cx,dx
  4148c6:	mov    edx,0x8a8b
  4148cb:	xor    cx,dx
  4148ce:	mov    edx,0x4e39
  4148d3:	cmp    cx,dx
  4148d6:	je     0x41492f
  4148d8:	push   ebx
  4148d9:	push   edi
  4148da:	movzx  ecx,cx
  4148dd:	mov    edx,0xffcd8d22
  4148e2:	mov    edi,0x7510897
  4148e7:	mov    ebx,0x4e6b
  4148ec:	cmp    cx,bx
  4148ef:	jne    0x4148f4
  4148f1:	mov    DWORD PTR [ebp-0x4],esi
  4148f4:	lea    esi,[edx+0x1]
  4148f7:	xor    esi,edi
  4148f9:	mov    edx,esi
  4148fb:	xor    edx,edi
  4148fd:	mov    cx,WORD PTR [eax+edx*2+0x64e5bc]
  414905:	mov    ebx,0x3b4e
  41490a:	sub    cx,bx
  41490d:	mov    ebx,0x8a8b
  414912:	xor    cx,bx
  414915:	mov    ebx,0x4e39
  41491a:	cmp    cx,bx
  41491d:	jne    0x4148e7
  41491f:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  414926:	pop    edi
  414927:	pop    ebx
  414928:	je     0x41492f
  41492a:	xor    eax,eax
  41492c:	inc    eax
  41492d:	jmp    0x414931
  41492f:	xor    eax,eax
  414931:	pop    esi
  414932:	leave  
  414933:	ret    
  414934:	push   ebp
  414935:	mov    ebp,esp
  414937:	push   ecx
  414938:	mov    eax,DWORD PTR [ebp+0x8]
  41493b:	movzx  ecx,WORD PTR [eax]
  41493e:	push   esi
  41493f:	lea    eax,[ecx-0x3b4e]
  414945:	mov    esi,0x8a8b
  41494a:	push   edi
  41494b:	xor    eax,esi
  41494d:	mov    edi,0x4e39
  414952:	mov    DWORD PTR [ebp-0x4],edx
  414955:	cmp    ax,di
  414958:	je     0x414985
  41495a:	mov    eax,DWORD PTR [ebp+0x8]
  41495d:	sub    eax,edx
  41495f:	mov    DWORD PTR [ebp+0x8],eax
  414962:	jmp    0x414967
  414964:	mov    eax,DWORD PTR [ebp+0x8]
  414967:	mov    WORD PTR [edx],cx
  41496a:	add    edx,0x2
  41496d:	movzx  edi,WORD PTR [eax+edx*1]
  414971:	mov    ecx,edi
  414973:	add    edi,0xffffc4b2
  414979:	xor    edi,esi
  41497b:	mov    eax,0x4e39
  414980:	cmp    di,ax
  414983:	jne    0x414964
  414985:	xor    eax,eax
  414987:	pop    edi
  414988:	mov    WORD PTR [edx],ax
  41498b:	mov    eax,DWORD PTR [ebp-0x4]
  41498e:	pop    esi
  41498f:	leave  
  414990:	ret    0x4
  414993:	push   ebp
  414994:	mov    ebp,esp
  414996:	sub    esp,0x18
  414999:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4149a0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  4149a7:	mov    eax,DWORD PTR [ebp-0x14]
  4149aa:	xor    eax,0x7510897
  4149af:	add    eax,0x3272de
  4149b4:	mov    DWORD PTR [ebp-0x8],eax
  4149b7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4149be:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4149c5:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  4149cc:	mov    eax,DWORD PTR [ebp-0x14]
  4149cf:	xor    eax,0x7510897
  4149d4:	mov    ecx,DWORD PTR [ebp-0x8]
  4149d7:	lea    eax,[ecx+eax*1+0x3272de]
  4149de:	mov    ecx,DWORD PTR [ebp-0x18]
  4149e1:	xor    ecx,0x7510897
  4149e7:	add    ecx,0x3272de
  4149ed:	mov    edx,DWORD PTR [ebp+0x10]
  4149f0:	imul   edx,ecx
  4149f3:	cmp    eax,edx
  4149f5:	jae    0x414ae8
  4149fb:	mov    eax,DWORD PTR [ebp+0x10]
  4149fe:	mov    ecx,DWORD PTR [ebp-0x8]
  414a01:	sub    eax,ecx
  414a03:	mov    ecx,DWORD PTR [ebp-0x10]
  414a06:	xor    ecx,0x7510897
  414a0c:	add    ecx,0x3272de
  414a12:	cmp    eax,ecx
  414a14:	jbe    0x414a46
  414a16:	mov    eax,DWORD PTR [ebp+0x8]
  414a19:	add    eax,DWORD PTR [ebp-0x8]
  414a1c:	mov    ecx,DWORD PTR [ebp+0xc]
  414a1f:	add    ecx,DWORD PTR [ebp-0x8]
  414a22:	mov    edx,DWORD PTR [ecx]
  414a24:	mov    DWORD PTR [eax],edx
  414a26:	mov    ecx,DWORD PTR [ecx+0x4]
  414a29:	mov    DWORD PTR [eax+0x4],ecx
  414a2c:	mov    eax,DWORD PTR [ebp-0x10]
  414a2f:	xor    eax,0x7510897
  414a34:	mov    ecx,DWORD PTR [ebp-0x8]
  414a37:	lea    eax,[ecx+eax*1+0x3272de]
  414a3e:	mov    DWORD PTR [ebp-0x8],eax
  414a41:	jmp    0x414ae3
  414a46:	mov    eax,DWORD PTR [ebp+0x10]
  414a49:	mov    ecx,DWORD PTR [ebp-0x8]
  414a4c:	sub    eax,ecx
  414a4e:	mov    ecx,DWORD PTR [ebp-0xc]
  414a51:	xor    ecx,0x7510897
  414a57:	add    ecx,0x3272de
  414a5d:	cmp    eax,ecx
  414a5f:	jbe    0x414a88
  414a61:	mov    eax,DWORD PTR [ebp+0x8]
  414a64:	add    eax,DWORD PTR [ebp-0x8]
  414a67:	mov    ecx,DWORD PTR [ebp+0xc]
  414a6a:	add    ecx,DWORD PTR [ebp-0x8]
  414a6d:	mov    ecx,DWORD PTR [ecx]
  414a6f:	mov    DWORD PTR [eax],ecx
  414a71:	mov    eax,DWORD PTR [ebp-0xc]
  414a74:	xor    eax,0x7510897
  414a79:	mov    ecx,DWORD PTR [ebp-0x8]
  414a7c:	lea    eax,[ecx+eax*1+0x3272de]
  414a83:	mov    DWORD PTR [ebp-0x8],eax
  414a86:	jmp    0x414ae3
  414a88:	mov    eax,DWORD PTR [ebp+0x10]
  414a8b:	mov    ecx,DWORD PTR [ebp-0x8]
  414a8e:	sub    eax,ecx
  414a90:	mov    ecx,DWORD PTR [ebp-0x4]
  414a93:	xor    ecx,0x7510897
  414a99:	add    ecx,0x3272de
  414a9f:	cmp    eax,ecx
  414aa1:	jbe    0x414acc
  414aa3:	mov    eax,DWORD PTR [ebp+0x8]
  414aa6:	add    eax,DWORD PTR [ebp-0x8]
  414aa9:	mov    ecx,DWORD PTR [ebp+0xc]
  414aac:	add    ecx,DWORD PTR [ebp-0x8]
  414aaf:	mov    cx,WORD PTR [ecx]
  414ab2:	mov    WORD PTR [eax],cx
  414ab5:	mov    eax,DWORD PTR [ebp-0x4]
  414ab8:	xor    eax,0x7510897
  414abd:	mov    ecx,DWORD PTR [ebp-0x8]
  414ac0:	lea    eax,[ecx+eax*1+0x3272de]
  414ac7:	mov    DWORD PTR [ebp-0x8],eax
  414aca:	jmp    0x414ae3
  414acc:	mov    eax,DWORD PTR [ebp+0x8]
  414acf:	add    eax,DWORD PTR [ebp-0x8]
  414ad2:	mov    ecx,DWORD PTR [ebp+0xc]
  414ad5:	add    ecx,DWORD PTR [ebp-0x8]
  414ad8:	mov    cl,BYTE PTR [ecx]
  414ada:	mov    BYTE PTR [eax],cl
  414adc:	mov    eax,DWORD PTR [ebp-0x8]
  414adf:	inc    eax
  414ae0:	mov    DWORD PTR [ebp-0x8],eax
  414ae3:	jmp    0x4149cc
  414ae8:	leave  
  414ae9:	ret    0xc
  414aec:	push   ebp
  414aed:	mov    ebp,esp
  414aef:	push   ecx
  414af0:	push   ecx
  414af1:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414af8:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  414aff:	xor    eax,eax
  414b01:	inc    eax
  414b02:	je     0x414b44
  414b04:	mov    eax,DWORD PTR [ebp-0x4]
  414b07:	xor    eax,0x7510897
  414b0c:	add    eax,0x3272de
  414b11:	cmp    DWORD PTR [ebp+0xc],eax
  414b14:	jne    0x414b18
  414b16:	jmp    0x414b44
  414b18:	mov    eax,DWORD PTR [ebp-0x8]
  414b1b:	xor    eax,0x7510897
  414b20:	add    eax,0x3272de
  414b25:	mov    ecx,DWORD PTR [ebp+0xc]
  414b28:	sub    ecx,eax
  414b2a:	mov    DWORD PTR [ebp+0xc],ecx
  414b2d:	mov    eax,DWORD PTR [ebp-0x4]
  414b30:	xor    eax,0x7510897
  414b35:	add    eax,0x3272de
  414b3a:	mov    ecx,DWORD PTR [ebp+0x8]
  414b3d:	add    ecx,DWORD PTR [ebp+0xc]
  414b40:	mov    BYTE PTR [ecx],al
  414b42:	jmp    0x414aff
  414b44:	leave  
  414b45:	ret    0x8
  414b48:	push   ebp
  414b49:	mov    ebp,esp
  414b4b:	sub    esp,0x21c
  414b51:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414b58:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  414b5f:	mov    eax,DWORD PTR [ebp+0x10]
  414b62:	mov    eax,DWORD PTR [ebp-0x4]
  414b65:	mov    ecx,DWORD PTR [ebp+0x8]
  414b68:	push   esi
  414b69:	push   edi
  414b6a:	mov    edi,0x7510897
  414b6f:	xor    eax,edi
  414b71:	mov    esi,0x3272de
  414b76:	add    eax,esi
  414b78:	cmp    eax,ecx
  414b7a:	mov    eax,DWORD PTR [ebp-0x4]
  414b7d:	jne    0x414b88
  414b7f:	xor    eax,edi
  414b81:	add    eax,esi
  414b83:	jmp    0x414c34
  414b88:	mov    ecx,DWORD PTR [ebp+0xc]
  414b8b:	xor    eax,edi
  414b8d:	add    eax,esi
  414b8f:	cmp    eax,ecx
  414b91:	jne    0x414b98
  414b93:	mov    eax,DWORD PTR [ebp-0x4]
  414b96:	jmp    0x414b7f
  414b98:	lea    eax,[ebp-0x21c]
  414b9e:	mov    DWORD PTR [ebp-0x8],eax
  414ba1:	mov    eax,DWORD PTR [ebp+0xc]
  414ba4:	mov    DWORD PTR [ebp-0x10],eax
  414ba7:	mov    eax,DWORD PTR [ebp-0x4]
  414baa:	xor    eax,edi
  414bac:	add    eax,esi
  414bae:	mov    DWORD PTR [ebp+0x10],eax
  414bb1:	mov    eax,DWORD PTR [ebp+0xc]
  414bb4:	push   ebx
  414bb5:	call   0x4148a5
  414bba:	mov    ebx,eax
  414bbc:	mov    eax,DWORD PTR [ebp+0x8]
  414bbf:	mov    eax,DWORD PTR [eax+0x14]
  414bc2:	jmp    0x414c1c
  414bc4:	mov    eax,DWORD PTR [ebp+0xc]
  414bc7:	sub    eax,0x8
  414bca:	mov    DWORD PTR [ebp-0xc],eax
  414bcd:	mov    eax,DWORD PTR [ebp-0xc]
  414bd0:	mov    eax,DWORD PTR [eax+0x28]
  414bd3:	call   0x41478d
  414bd8:	mov    DWORD PTR [ebp+0x10],eax
  414bdb:	push   DWORD PTR [ebp+0x10]
  414bde:	mov    edx,DWORD PTR [ebp-0x8]
  414be1:	call   0x414934
  414be6:	mov    eax,DWORD PTR [ebp-0x4]
  414be9:	xor    eax,edi
  414beb:	add    eax,esi
  414bed:	cmp    eax,ebx
  414bef:	jne    0x414bf9
  414bf1:	mov    eax,DWORD PTR [ebp-0x8]
  414bf4:	call   0x41481b
  414bf9:	mov    eax,DWORD PTR [ebp-0x14]
  414bfc:	xor    eax,edi
  414bfe:	add    eax,esi
  414c00:	push   eax
  414c01:	push   DWORD PTR [ebp-0x10]
  414c04:	push   DWORD PTR [ebp-0x8]
  414c07:	call   0x41451f
  414c0c:	mov    ecx,DWORD PTR [ebp-0x4]
  414c0f:	xor    ecx,edi
  414c11:	add    ecx,esi
  414c13:	cmp    eax,ecx
  414c15:	je     0x414c3a
  414c17:	mov    eax,DWORD PTR [ebp+0xc]
  414c1a:	mov    eax,DWORD PTR [eax]
  414c1c:	mov    DWORD PTR [ebp+0xc],eax
  414c1f:	mov    eax,DWORD PTR [ebp+0x8]
  414c22:	mov    ecx,DWORD PTR [ebp+0xc]
  414c25:	add    eax,0x14
  414c28:	cmp    ecx,eax
  414c2a:	jne    0x414bc4
  414c2c:	mov    eax,DWORD PTR [ebp-0x4]
  414c2f:	xor    eax,edi
  414c31:	add    eax,esi
  414c33:	pop    ebx
  414c34:	pop    edi
  414c35:	pop    esi
  414c36:	leave  
  414c37:	ret    0xc
  414c3a:	mov    eax,DWORD PTR [ebp-0xc]
  414c3d:	mov    eax,DWORD PTR [eax+0x18]
  414c40:	jmp    0x414c33
  414c42:	push   ebp
  414c43:	mov    ebp,esp
  414c45:	mov    eax,DWORD PTR [ebp+0xc]
  414c48:	sub    esp,0x10
  414c4b:	cmp    DWORD PTR [ebp+0x8],0x0
  414c4f:	push   ebx
  414c50:	push   esi
  414c51:	push   edi
  414c52:	je     0x414d07
  414c58:	test   eax,eax
  414c5a:	je     0x414d07
  414c60:	movzx  eax,WORD PTR [eax+0x20]
  414c64:	mov    ecx,eax
  414c66:	mov    DWORD PTR [ebp-0x10],eax
  414c69:	xor    edx,edx
  414c6b:	and    DWORD PTR [ebp-0x8],edx
  414c6e:	mov    eax,0x8a8b
  414c73:	xor    ecx,eax
  414c75:	add    ecx,0x3b4e
  414c7b:	mov    DWORD PTR [ebp-0xc],ecx
  414c7e:	and    DWORD PTR [ebp-0x4],0x0
  414c82:	xor    ecx,ecx
  414c84:	push   0x7e
  414c86:	pop    edi
  414c87:	cmp    cx,WORD PTR [ebp-0xc]
  414c8b:	jae    0x414cf1
  414c8d:	lea    esi,[edx-0x3b4e]
  414c93:	xor    esi,eax
  414c95:	movzx  ecx,WORD PTR [ebp-0x4]
  414c99:	mov    ebx,DWORD PTR [ebp+0xc]
  414c9c:	lea    ecx,[ebx+ecx*4]
  414c9f:	cmp    WORD PTR [ecx+0x2],si
  414ca3:	jne    0x414cdc
  414ca5:	movzx  ecx,WORD PTR [ecx]
  414ca8:	mov    edi,0x4e39
  414cad:	cmp    cx,di
  414cb0:	jne    0x414cbe
  414cb2:	mov    ebx,DWORD PTR [ebp+0x8]
  414cb5:	movzx  edi,dx
  414cb8:	cmp    BYTE PTR [edi+ebx*1],0x0
  414cbc:	je     0x414ceb
  414cbe:	mov    ebx,DWORD PTR [ebp+0x8]
  414cc1:	movzx  edi,dx
  414cc4:	movsx  di,BYTE PTR [edi+ebx*1]
  414cc9:	mov    ebx,0x3b4e
  414cce:	sub    di,bx
  414cd1:	xor    di,ax
  414cd4:	cmp    cx,di
  414cd7:	je     0x414ceb
  414cd9:	push   0x78
  414cdb:	pop    edi
  414cdc:	inc    DWORD PTR [ebp-0x4]
  414cdf:	mov    cx,WORD PTR [ebp-0xc]
  414ce3:	cmp    WORD PTR [ebp-0x4],cx
  414ce7:	jb     0x414c95
  414ce9:	jmp    0x414cf1
  414ceb:	inc    DWORD PTR [ebp-0x8]
  414cee:	push   0x79
  414cf0:	pop    edi
  414cf1:	mov    esi,DWORD PTR [ebp+0x8]
  414cf4:	movzx  ecx,dx
  414cf7:	cmp    BYTE PTR [ecx+esi*1],0x0
  414cfb:	je     0x414d10
  414cfd:	inc    edx
  414cfe:	cmp    edi,0x78
  414d01:	jne    0x414c7e
  414d07:	xor    eax,eax
  414d09:	pop    edi
  414d0a:	pop    esi
  414d0b:	pop    ebx
  414d0c:	leave  
  414d0d:	ret    0x8
  414d10:	mov    ecx,DWORD PTR [ebp-0x8]
  414d13:	add    ecx,0xffffc4b2
  414d19:	xor    cx,ax
  414d1c:	xor    eax,eax
  414d1e:	cmp    cx,WORD PTR [ebp-0x10]
  414d22:	sete   al
  414d25:	jmp    0x414d09
  414d27:	push   ebp
  414d28:	mov    ebp,esp
  414d2a:	sub    esp,0x50
  414d2d:	push   edi
  414d2e:	mov    edi,eax
  414d30:	mov    eax,DWORD PTR [edi+0x1a8]
  414d36:	cmp    DWORD PTR [eax],0x0
  414d39:	jne    0x414d42
  414d3b:	xor    eax,eax
  414d3d:	jmp    0x414e72
  414d42:	push   0x2c
  414d44:	push   DWORD PTR [ebp+0x8]
  414d47:	call   0x414aec
  414d4c:	mov    edx,DWORD PTR [edi+0x1ac]
  414d52:	lea    eax,[edi+0x22]
  414d55:	mov    DWORD PTR [ebp-0x4c],eax
  414d58:	lea    eax,[edi+0x44]
  414d5b:	mov    DWORD PTR [ebp-0x48],eax
  414d5e:	lea    eax,[edi+0x66]
  414d61:	mov    DWORD PTR [ebp-0x44],eax
  414d64:	lea    eax,[edi+0x88]
  414d6a:	mov    DWORD PTR [ebp-0x40],eax
  414d6d:	lea    eax,[edi+0xaa]
  414d73:	mov    DWORD PTR [ebp-0x3c],eax
  414d76:	lea    eax,[edi+0xcc]
  414d7c:	mov    DWORD PTR [ebp-0x38],eax
  414d7f:	lea    eax,[edi+0xee]
  414d85:	mov    DWORD PTR [ebp-0x34],eax
  414d88:	lea    eax,[edi+0x110]
  414d8e:	mov    DWORD PTR [ebp-0x30],eax
  414d91:	lea    eax,[edi+0x132]
  414d97:	mov    DWORD PTR [ebp-0x2c],eax
  414d9a:	lea    eax,[edi+0x154]
  414da0:	push   edi
  414da1:	mov    DWORD PTR [ebp-0x50],edi
  414da4:	mov    DWORD PTR [ebp-0x28],eax
  414da7:	call   0x414ea6
  414dac:	push   eax
  414dad:	mov    eax,DWORD PTR [edi+0x1a8]
  414db3:	push   DWORD PTR [eax]
  414db5:	call   0x414b48
  414dba:	mov    DWORD PTR [ebp-0x10],eax
  414dbd:	test   eax,eax
  414dbf:	je     0x414e72
  414dc5:	mov    ecx,DWORD PTR [eax+0x3c]
  414dc8:	push   ebx
  414dc9:	push   esi
  414dca:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414dce:	add    esi,eax
  414dd0:	mov    edi,DWORD PTR [esi+0x24]
  414dd3:	mov    ecx,DWORD PTR [esi+0x1c]
  414dd6:	mov    edx,DWORD PTR [esi+0x20]
  414dd9:	mov    ebx,DWORD PTR [esi+0x18]
  414ddc:	add    edi,eax
  414dde:	mov    DWORD PTR [ebp-0x20],edi
  414de1:	mov    edi,DWORD PTR [esi+0x14]
  414de4:	add    ecx,eax
  414de6:	add    edx,eax
  414de8:	mov    DWORD PTR [ebp-0xc],ecx
  414deb:	mov    DWORD PTR [ebp-0x1c],edx
  414dee:	mov    DWORD PTR [ebp-0x8],edi
  414df1:	cmp    edi,ebx
  414df3:	ja     0x414df8
  414df5:	mov    DWORD PTR [ebp-0x8],ebx
  414df8:	xor    ebx,ebx
  414dfa:	mov    DWORD PTR [ebp-0x18],ebx
  414dfd:	cmp    DWORD PTR [ebp-0x8],ebx
  414e00:	jbe    0x414e70
  414e02:	jmp    0x414e07
  414e04:	mov    edx,DWORD PTR [ebp-0x1c]
  414e07:	mov    edi,DWORD PTR [ebp-0x20]
  414e0a:	movzx  edi,WORD PTR [edi+ebx*2]
  414e0e:	cmp    ebx,DWORD PTR [esi+0x18]
  414e11:	jae    0x414e70
  414e13:	cmp    edi,DWORD PTR [esi+0x14]
  414e16:	jae    0x414e70
  414e18:	mov    ebx,DWORD PTR [edx+ebx*4]
  414e1b:	mov    edx,DWORD PTR [ebp+0x8]
  414e1e:	mov    edi,DWORD PTR [ecx+edi*4]
  414e21:	mov    DWORD PTR [ebp-0x4],edx
  414e24:	lea    edx,[ebp-0x50]
  414e27:	add    ebx,eax
  414e29:	add    edi,eax
  414e2b:	sub    edx,DWORD PTR [ebp+0x8]
  414e2e:	mov    DWORD PTR [ebp-0x14],0xb
  414e35:	mov    DWORD PTR [ebp-0x24],edx
  414e38:	mov    edx,DWORD PTR [ebp-0x4]
  414e3b:	cmp    DWORD PTR [edx],0x0
  414e3e:	jne    0x414e5b
  414e40:	mov    eax,DWORD PTR [ebp-0x24]
  414e43:	push   DWORD PTR [eax+edx*1]
  414e46:	push   ebx
  414e47:	call   0x414c42
  414e4c:	mov    ecx,DWORD PTR [ebp-0xc]
  414e4f:	test   eax,eax
  414e51:	je     0x414e58
  414e53:	mov    eax,DWORD PTR [ebp-0x4]
  414e56:	mov    DWORD PTR [eax],edi
  414e58:	mov    eax,DWORD PTR [ebp-0x10]
  414e5b:	add    DWORD PTR [ebp-0x4],0x4
  414e5f:	dec    DWORD PTR [ebp-0x14]
  414e62:	jne    0x414e38
  414e64:	mov    ebx,DWORD PTR [ebp-0x18]
  414e67:	inc    ebx
  414e68:	mov    DWORD PTR [ebp-0x18],ebx
  414e6b:	cmp    ebx,DWORD PTR [ebp-0x8]
  414e6e:	jb     0x414e04
  414e70:	pop    esi
  414e71:	pop    ebx
  414e72:	pop    edi
  414e73:	leave  
  414e74:	ret    0x4
  414e77:	push   ebp
  414e78:	mov    ebp,esp
  414e7a:	mov    eax,DWORD PTR [ebp+0x8]
  414e7d:	push   esi
  414e7e:	push   DWORD PTR [eax+0x1d8]
  414e84:	lea    esi,[eax+0x198]
  414e8a:	mov    eax,DWORD PTR [ebp+0x8]
  414e8d:	call   0x414d27
  414e92:	mov    ecx,DWORD PTR [esi]
  414e94:	mov    DWORD PTR [ecx],eax
  414e96:	mov    eax,DWORD PTR [esi]
  414e98:	xor    ecx,ecx
  414e9a:	cmp    DWORD PTR [eax],ecx
  414e9c:	pop    esi
  414e9d:	setne  cl
  414ea0:	mov    eax,ecx
  414ea2:	pop    ebp
  414ea3:	ret    0x4
  414ea6:	mov    ecx,DWORD PTR [edi+0x188]
  414eac:	push   ebx
  414ead:	jmp    0x414ec2
  414eaf:	xor    eax,0x8a8b
  414eb4:	add    eax,0x3b4e
  414eb9:	mov    WORD PTR [ecx],ax
  414ebc:	add    ecx,0x2
  414ebf:	add    edx,0x2
  414ec2:	movzx  eax,WORD PTR [edx]
  414ec5:	mov    ebx,0x4e39
  414eca:	cmp    ax,bx
  414ecd:	jne    0x414eaf
  414ecf:	xor    eax,eax
  414ed1:	mov    WORD PTR [ecx],ax
  414ed4:	mov    eax,DWORD PTR [edi+0x188]
  414eda:	pop    ebx
  414edb:	ret    
  414edc:	push   edi
  414edd:	mov    edi,eax
  414edf:	mov    eax,DWORD PTR [esi+0x188]
  414ee5:	shl    edi,0x6
  414ee8:	add    eax,edi
  414eea:	jmp    0x414ef6
  414eec:	xor    cl,0x72
  414eef:	sub    cl,0xa
  414ef2:	mov    BYTE PTR [eax],cl
  414ef4:	inc    eax
  414ef5:	inc    edx
  414ef6:	mov    cl,BYTE PTR [edx]
  414ef8:	cmp    cl,0x78
  414efb:	jne    0x414eec
  414efd:	mov    BYTE PTR [eax],0x0
  414f00:	mov    eax,DWORD PTR [esi+0x188]
  414f06:	add    eax,edi
  414f08:	pop    edi
  414f09:	ret    
  414f0a:	push   ebp
  414f0b:	mov    ebp,esp
  414f0d:	sub    esp,0x38
  414f10:	push   ebx
  414f11:	mov    ebx,0xf89c85b5
  414f16:	mov    DWORD PTR [ebp-0x4],ebx
  414f19:	lea    eax,[ebx-0x1]
  414f1c:	push   esi
  414f1d:	mov    DWORD PTR [ebp-0x24],eax
  414f20:	mov    ecx,DWORD PTR [ebp-0x4]
  414f23:	mov    edx,DWORD PTR [ebp+0x8]
  414f26:	mov    esi,0x7510897
  414f2b:	push   edi
  414f2c:	xor    ecx,esi
  414f2e:	mov    edi,0x3272de
  414f33:	add    ecx,edi
  414f35:	cmp    edx,ecx
  414f37:	je     0x4150a5
  414f3d:	mov    ecx,DWORD PTR [ebp-0x4]
  414f40:	mov    edx,DWORD PTR [ebp+0xc]
  414f43:	xor    ecx,esi
  414f45:	add    ecx,edi
  414f47:	cmp    edx,ecx
  414f49:	je     0x4150a5
  414f4f:	mov    ecx,DWORD PTR [ebp+0x10]
  414f52:	mov    DWORD PTR [ebp-0x18],ecx
  414f55:	mov    ecx,DWORD PTR [ebp+0xc]
  414f58:	mov    DWORD PTR [ebp-0x14],ecx
  414f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  414f5e:	mov    DWORD PTR [ebp-0x1c],0xf89c8509
  414f65:	mov    DWORD PTR [ebp-0x20],eax
  414f68:	mov    DWORD PTR [ebp-0x10],ebx
  414f6b:	mov    DWORD PTR [ebp+0xc],eax
  414f6e:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414f75:	mov    eax,DWORD PTR [ebp+0xc]
  414f78:	mov    DWORD PTR [ebp-0xc],ecx
  414f7b:	xor    eax,esi
  414f7d:	mov    ecx,0xffcd8d22
  414f82:	sub    ecx,eax
  414f84:	add    ecx,DWORD PTR [ebp-0x14]
  414f87:	mov    DWORD PTR [ebp+0x8],ecx
  414f8a:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  414f91:	jmp    0x415095
  414f96:	mov    eax,DWORD PTR [ebp+0xc]
  414f99:	mov    ecx,DWORD PTR [ebp+0xc]
  414f9c:	xor    eax,esi
  414f9e:	xor    ecx,esi
  414fa0:	lea    ecx,[eax+ecx*1+0x64e5bc]
  414fa7:	mov    eax,DWORD PTR [ebp+0x8]
  414faa:	xor    edx,edx
  414fac:	div    ecx
  414fae:	mov    eax,DWORD PTR [ebp+0x10]
  414fb1:	mov    ecx,DWORD PTR [ebp+0xc]
  414fb4:	xor    eax,esi
  414fb6:	xor    ecx,esi
  414fb8:	sub    eax,ecx
  414fba:	cmp    edx,eax
  414fbc:	jne    0x415051
  414fc2:	mov    eax,DWORD PTR [ebp+0x8]
  414fc5:	add    eax,DWORD PTR [ebp-0xc]
  414fc8:	mov    dl,BYTE PTR [eax]
  414fca:	mov    eax,DWORD PTR [ebp-0x10]
  414fcd:	mov    ecx,DWORD PTR [ebp-0x8]
  414fd0:	xor    eax,esi
  414fd2:	xor    ecx,esi
  414fd4:	add    eax,edi
  414fd6:	add    ecx,edi
  414fd8:	cmp    eax,ecx
  414fda:	jae    0x415022
  414fdc:	lea    ecx,[eax-0x3272de]
  414fe2:	mov    DWORD PTR [ebp-0x4],ecx
  414fe5:	mov    ebx,DWORD PTR [ebp-0x4]
  414fe8:	xor    ebx,esi
  414fea:	add    ebx,0x7f55d8f3
  414ff0:	lea    ecx,[ebp+eax*4-0x38]
  414ff4:	mov    DWORD PTR [ecx],ebx
  414ff6:	mov    ebx,DWORD PTR [ecx]
  414ff8:	cmp    ebx,0x244ecbd2
  414ffe:	jbe    0x415008
  415000:	add    DWORD PTR [ecx],0x405fc11
  415006:	jmp    0x41500e
  415008:	add    DWORD PTR [ecx],0xfdaf43ef
  41500e:	mov    ecx,DWORD PTR [ebp-0x8]
  415011:	xor    ecx,esi
  415013:	inc    eax
  415014:	inc    DWORD PTR [ebp-0x4]
  415017:	add    ecx,edi
  415019:	cmp    eax,ecx
  41501b:	jb     0x414fe5
  41501d:	mov    ebx,0xf89c85b5
  415022:	mov    eax,DWORD PTR [ebp-0x18]
  415025:	test   eax,eax
  415027:	jne    0x415031
  415029:	xor    dl,0x72
  41502c:	sub    dl,0xa
  41502f:	jmp    0x415047
  415031:	mov    eax,DWORD PTR [ebp-0x1c]
  415034:	xor    al,0x97
  415036:	mov    cl,0x22
  415038:	sub    cl,al
  41503a:	add    dl,cl
  41503c:	mov    ecx,DWORD PTR [ebp-0x20]
  41503f:	xor    cl,0x97
  415042:	sub    cl,0x22
  415045:	ror    dl,cl
  415047:	xor    eax,eax
  415049:	mov    eax,DWORD PTR [ebp+0x8]
  41504c:	add    eax,DWORD PTR [ebp-0xc]
  41504f:	mov    BYTE PTR [eax],dl
  415051:	mov    eax,DWORD PTR [ebp+0x8]
  415054:	mov    ecx,DWORD PTR [ebp-0x10]
  415057:	sub    eax,edi
  415059:	xor    eax,esi
  41505b:	cmp    eax,ecx
  41505d:	jne    0x415083
  41505f:	mov    eax,DWORD PTR [ebp+0x10]
  415062:	mov    ecx,DWORD PTR [ebp+0xc]
  415065:	xor    eax,esi
  415067:	xor    ecx,esi
  415069:	sub    eax,ecx
  41506b:	sub    eax,edi
  41506d:	xor    eax,esi
  41506f:	mov    DWORD PTR [ebp+0x10],eax
  415072:	mov    eax,DWORD PTR [ebp+0xc]
  415075:	xor    eax,esi
  415077:	mov    ecx,0xffcd8d22
  41507c:	sub    ecx,eax
  41507e:	add    ecx,DWORD PTR [ebp-0x14]
  415081:	jmp    0x415092
  415083:	mov    eax,DWORD PTR [ebp+0xc]
  415086:	xor    eax,esi
  415088:	mov    ecx,0xffcd8d22
  41508d:	sub    ecx,eax
  41508f:	add    ecx,DWORD PTR [ebp+0x8]
  415092:	mov    DWORD PTR [ebp+0x8],ecx
  415095:	mov    eax,DWORD PTR [ebp+0x10]
  415098:	cmp    eax,ebx
  41509a:	jne    0x414f96
  4150a0:	mov    eax,DWORD PTR [ebp-0x24]
  4150a3:	jmp    0x4150a8
  4150a5:	mov    eax,DWORD PTR [ebp-0x4]
  4150a8:	xor    eax,esi
  4150aa:	add    eax,edi
  4150ac:	pop    edi
  4150ad:	pop    esi
  4150ae:	pop    ebx
  4150af:	leave  
  4150b0:	ret    0xc
  4150b3:	push   ebp
  4150b4:	mov    ebp,esp
  4150b6:	sub    esp,0x14
  4150b9:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4150c0:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4150c7:	mov    eax,DWORD PTR [ebx]
  4150c9:	mov    DWORD PTR [ebp-0x8],eax
  4150cc:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4150d3:	push   esi
  4150d4:	push   edi
  4150d5:	mov    DWORD PTR [ebp-0x14],0xead718d5
  4150dc:	mov    edi,DWORD PTR [ebp-0x4]
  4150df:	mov    ecx,DWORD PTR [ebp-0x10]
  4150e2:	mov    eax,0x7510897
  4150e7:	xor    edi,eax
  4150e9:	mov    edx,0x3272de
  4150ee:	xor    ecx,eax
  4150f0:	add    edi,edx
  4150f2:	add    ecx,edx
  4150f4:	imul   edi,ecx
  4150f7:	jmp    0x41513f
  4150f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4150fc:	mov    esi,DWORD PTR [ebp-0x4]
  4150ff:	xor    ecx,eax
  415101:	xor    esi,eax
  415103:	add    ecx,edx
  415105:	add    esi,edx
  415107:	test   esi,ecx
  415109:	mov    esi,DWORD PTR [ebp-0x8]
  41510c:	mov    ecx,DWORD PTR [ebp-0x4]
  41510f:	je     0x415126
  415111:	xor    ecx,eax
  415113:	xor    esi,eax
  415115:	add    ecx,edx
  415117:	add    esi,edx
  415119:	shr    esi,cl
  41511b:	mov    ecx,DWORD PTR [ebp-0x14]
  41511e:	xor    ecx,eax
  415120:	add    ecx,edx
  415122:	xor    esi,ecx
  415124:	jmp    0x415130
  415126:	xor    esi,eax
  415128:	xor    ecx,eax
  41512a:	add    esi,edx
  41512c:	add    ecx,edx
  41512e:	shr    esi,cl
  415130:	mov    DWORD PTR [ebp-0x8],esi
  415133:	mov    ecx,DWORD PTR [ebp-0x4]
  415136:	xor    ecx,eax
  415138:	lea    edi,[edi+ecx*1+0x3272de]
  41513f:	mov    ecx,DWORD PTR [ebp-0xc]
  415142:	mov    esi,DWORD PTR [ebp-0x4]
  415145:	xor    esi,eax
  415147:	xor    ecx,eax
  415149:	sub    ecx,esi
  41514b:	cmp    edi,ecx
  41514d:	jbe    0x4150f9
  41514f:	mov    eax,DWORD PTR [ebp-0x8]
  415152:	pop    edi
  415153:	mov    DWORD PTR [ebx],eax
  415155:	mov    eax,DWORD PTR [ebp-0x8]
  415158:	pop    esi
  415159:	leave  
  41515a:	ret    
  41515b:	push   ebp
  41515c:	mov    ebp,esp
  41515e:	sub    esp,0x420
  415164:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41516b:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  415172:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  415179:	push   ebx
  41517a:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  415181:	mov    eax,DWORD PTR [ebp-0x14]
  415184:	push   esi
  415185:	mov    esi,0x7510897
  41518a:	push   edi
  41518b:	xor    eax,esi
  41518d:	mov    edi,0x3272de
  415192:	add    eax,edi
  415194:	mov    DWORD PTR [ebp-0x8],eax
  415197:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41519e:	mov    DWORD PTR [ebp-0x4],0xead718d5
  4151a5:	mov    DWORD PTR [ebp-0x10],0x8
  4151ac:	mov    ecx,ecx
  4151ae:	mov    eax,DWORD PTR [ebp-0xc]
  4151b1:	mov    ecx,DWORD PTR [ebp-0x14]
  4151b4:	xor    eax,esi
  4151b6:	xor    ecx,esi
  4151b8:	add    eax,edi
  4151ba:	add    ecx,edi
  4151bc:	imul   eax,ecx
  4151bf:	jmp    0x4151f2
  4151c1:	mov    eax,DWORD PTR [ebp-0x4]
  4151c4:	sub    eax,edi
  4151c6:	xor    eax,esi
  4151c8:	mov    DWORD PTR [ebp-0x8],eax
  4151cb:	lea    ebx,[ebp-0x8]
  4151ce:	call   0x4150b3
  4151d3:	mov    DWORD PTR [ebp-0x8],eax
  4151d6:	mov    eax,DWORD PTR [ebp-0x8]
  4151d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4151dc:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4151e3:	mov    eax,DWORD PTR [ebp-0xc]
  4151e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4151e9:	xor    eax,esi
  4151eb:	lea    eax,[eax+ecx*1+0x3272de]
  4151f2:	mov    DWORD PTR [ebp-0x4],eax
  4151f5:	mov    eax,DWORD PTR [ebp-0x18]
  4151f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4151fb:	xor    ecx,esi
  4151fd:	xor    eax,esi
  4151ff:	sub    eax,ecx
  415201:	mov    ecx,DWORD PTR [ebp-0x4]
  415204:	cmp    ecx,eax
  415206:	jbe    0x4151c1
  415208:	mov    eax,DWORD PTR [ebp-0x1c]
  41520b:	xor    eax,esi
  41520d:	add    eax,edi
  41520f:	mov    DWORD PTR [ebp-0x8],eax
  415212:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  415219:	mov    ebx,ebx
  41521b:	jmp    0x41527e
  41521d:	mov    ecx,DWORD PTR [ebp-0x20]
  415220:	mov    eax,DWORD PTR [ebp-0x8]
  415223:	xor    ecx,esi
  415225:	add    ecx,edi
  415227:	shr    eax,cl
  415229:	mov    DWORD PTR [ebp-0x4],eax
  41522c:	mov    eax,DWORD PTR [ebp+0x8]
  41522f:	mov    cl,BYTE PTR [eax]
  415231:	mov    BYTE PTR [ebp+0xb],cl
  415234:	mov    cl,BYTE PTR [ebp+0xb]
  415237:	mov    edx,DWORD PTR [ebp-0x8]
  41523a:	movzx  ecx,cl
  41523d:	xor    ecx,edx
  41523f:	mov    DWORD PTR [ebp+0x8],ecx
  415242:	mov    ecx,DWORD PTR [ebp-0x18]
  415245:	mov    edx,DWORD PTR [ebp+0x8]
  415248:	xor    ecx,esi
  41524a:	add    ecx,edi
  41524c:	and    ecx,edx
  41524e:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  415255:	mov    edx,DWORD PTR [ebp-0x4]
  415258:	xor    ecx,edx
  41525a:	mov    DWORD PTR [ebp-0x8],ecx
  41525d:	mov    ecx,DWORD PTR [ebp-0xc]
  415260:	xor    ecx,esi
  415262:	lea    eax,[eax+ecx*1+0x3272de]
  415269:	mov    DWORD PTR [ebp+0x8],eax
  41526c:	mov    eax,DWORD PTR [ebp-0xc]
  41526f:	xor    eax,esi
  415271:	mov    ecx,0xffcd8d22
  415276:	sub    ecx,eax
  415278:	add    ecx,DWORD PTR [ebp-0x10]
  41527b:	mov    DWORD PTR [ebp-0x10],ecx
  41527e:	mov    eax,DWORD PTR [ebp-0x14]
  415281:	mov    ecx,DWORD PTR [ebp-0x10]
  415284:	xor    eax,esi
  415286:	add    eax,edi
  415288:	cmp    ecx,eax
  41528a:	jne    0x41521d
  41528c:	mov    eax,DWORD PTR [ebp-0x1c]
  41528f:	mov    ecx,DWORD PTR [ebp-0x8]
  415292:	xor    eax,esi
  415294:	add    eax,edi
  415296:	pop    edi
  415297:	pop    esi
  415298:	xor    eax,ecx
  41529a:	pop    ebx
  41529b:	leave  
  41529c:	ret    0x4
  41529f:	push   ebp
  4152a0:	mov    ebp,esp
  4152a2:	mov    eax,DWORD PTR [ebp+0x1c]
  4152a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4152a8:	mov    edx,DWORD PTR [ebp+0x10]
  4152ab:	mov    eax,DWORD PTR [eax+0x190]
  4152b1:	mov    eax,DWORD PTR [eax]
  4152b3:	sub    esp,0x64
  4152b6:	push   ebx
  4152b7:	push   esi
  4152b8:	push   edi
  4152b9:	mov    edi,0x7510897
  4152be:	xor    ecx,edi
  4152c0:	mov    ebx,0x3272de
  4152c5:	add    ecx,ebx
  4152c7:	cmp    ecx,edx
  4152c9:	jne    0x4152da
  4152cb:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4152d5:	jmp    0x4157d7
  4152da:	mov    ecx,DWORD PTR [ebp+0x8]
  4152dd:	mov    esi,DWORD PTR [ebp+0x14]
  4152e0:	mov    edx,DWORD PTR [esi]
  4152e2:	xor    ecx,edi
  4152e4:	add    ecx,ebx
  4152e6:	cmp    edx,ecx
  4152e8:	je     0x415792
  4152ee:	mov    ecx,DWORD PTR [ebp+0x1c]
  4152f1:	mov    DWORD PTR [ebp-0x1c],eax
  4152f4:	mov    DWORD PTR [ebp+0x1c],ecx
  4152f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4152fa:	mov    eax,DWORD PTR [esi]
  4152fc:	mov    DWORD PTR [ebp-0x20],eax
  4152ff:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  415306:	mov    edx,0xf89c85b4
  41530b:	mov    DWORD PTR [ebp-0x8],edx
  41530e:	mov    eax,DWORD PTR [ebp+0x1c]
  415311:	mov    DWORD PTR [ebp+0x1c],eax
  415314:	mov    eax,DWORD PTR [ebp+0x1c]
  415317:	mov    eax,DWORD PTR [eax+0x190]
  41531d:	mov    eax,DWORD PTR [eax]
  41531f:	mov    DWORD PTR [ebp-0x24],ecx
  415322:	mov    ecx,DWORD PTR [ebp+0x1c]
  415325:	mov    ecx,DWORD PTR [ecx+0x190]
  41532b:	mov    ecx,DWORD PTR [ecx]
  41532d:	add    ecx,DWORD PTR [eax+0x3c]
  415330:	mov    DWORD PTR [ebp+0x10],ecx
  415333:	mov    eax,DWORD PTR [ebp+0x8]
  415336:	xor    eax,edi
  415338:	add    eax,ebx
  41533a:	mov    DWORD PTR [ebp-0x4],eax
  41533d:	mov    eax,DWORD PTR [ebp+0x8]
  415340:	xor    eax,edi
  415342:	add    eax,ebx
  415344:	mov    DWORD PTR [ebp+0x18],eax
  415347:	mov    eax,DWORD PTR [ebp+0x10]
  41534a:	mov    eax,DWORD PTR [eax+0x50]
  41534d:	sub    eax,0xc
  415350:	mov    DWORD PTR [ebp-0x28],eax
  415353:	mov    eax,DWORD PTR [ebp+0x10]
  415356:	mov    eax,DWORD PTR [eax+0x38]
  415359:	mov    ecx,DWORD PTR [ebp+0x10]
  41535c:	dec    eax
  41535d:	test   DWORD PTR [ecx+0x54],eax
  415360:	mov    eax,DWORD PTR [ebp+0x10]
  415363:	je     0x41537d
  415365:	mov    eax,DWORD PTR [eax+0x38]
  415368:	mov    ecx,DWORD PTR [ebp+0x10]
  41536b:	mov    ecx,DWORD PTR [ecx+0x54]
  41536e:	dec    eax
  41536f:	not    eax
  415371:	and    ecx,eax
  415373:	mov    eax,DWORD PTR [ebp+0x10]
  415376:	mov    eax,DWORD PTR [eax+0x38]
  415379:	add    eax,ecx
  41537b:	jmp    0x415380
  41537d:	mov    eax,DWORD PTR [eax+0x54]
  415380:	mov    DWORD PTR [ebp+0x1c],eax
  415383:	mov    eax,DWORD PTR [ebp+0x8]
  415386:	xor    eax,edi
  415388:	add    eax,ebx
  41538a:	mov    DWORD PTR [ebp+0x18],eax
  41538d:	mov    eax,DWORD PTR [ebp+0x8]
  415390:	xor    eax,edi
  415392:	add    eax,ebx
  415394:	mov    DWORD PTR [ebp+0x18],eax
  415397:	mov    eax,DWORD PTR [ebp+0x8]
  41539a:	mov    ecx,DWORD PTR [ebp-0x24]
  41539d:	xor    eax,edi
  41539f:	add    eax,ebx
  4153a1:	mov    DWORD PTR [ecx],eax
  4153a3:	mov    DWORD PTR [ebp+0x18],edx
  4153a6:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  4153ad:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  4153b4:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  4153bb:	mov    eax,DWORD PTR [ebp-0x8]
  4153be:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153c1:	xor    eax,edi
  4153c3:	add    eax,ebx
  4153c5:	imul   eax,ecx
  4153c8:	mov    ecx,DWORD PTR [ebp+0x8]
  4153cb:	mov    edx,DWORD PTR [ebp-0x28]
  4153ce:	xor    ecx,edi
  4153d0:	lea    ecx,[ecx+edx*1+0x3272de]
  4153d7:	cmp    eax,ecx
  4153d9:	jae    0x41578b
  4153df:	mov    eax,DWORD PTR [ebp+0x8]
  4153e2:	xor    eax,edi
  4153e4:	add    eax,ebx
  4153e6:	mov    DWORD PTR [ebp+0x18],eax
  4153e9:	mov    eax,DWORD PTR [ebp+0x1c]
  4153ec:	add    eax,DWORD PTR [ebp-0x1c]
  4153ef:	mov    DWORD PTR [ebp-0x4],eax
  4153f2:	push   DWORD PTR [ebp-0x4]
  4153f5:	mov    esi,DWORD PTR [ebp-0x1c]
  4153f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4153fb:	call   0x4144e1
  415400:	mov    DWORD PTR [ebp+0xc],eax
  415403:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  41540a:	mov    eax,DWORD PTR [ebp-0x18]
  41540d:	xor    eax,edi
  41540f:	add    eax,ebx
  415411:	push   eax
  415412:	lea    eax,[ebp-0x40]
  415415:	push   eax
  415416:	call   0x414aec
  41541b:	mov    eax,DWORD PTR [ebp+0xc]
  41541e:	test   eax,eax
  415420:	je     0x415470
  415422:	mov    eax,DWORD PTR [ebp-0x18]
  415425:	xor    eax,edi
  415427:	add    eax,ebx
  415429:	push   eax
  41542a:	push   DWORD PTR [ebp+0xc]
  41542d:	lea    eax,[ebp-0x40]
  415430:	push   eax
  415431:	call   0x414993
  415436:	mov    eax,DWORD PTR [ebp-0x4]
  415439:	mov    DWORD PTR [ebp-0x18],eax
  41543c:	mov    eax,DWORD PTR [ebp-0x18]
  41543f:	mov    ecx,DWORD PTR [ebp-0x1c]
  415442:	sub    eax,ecx
  415444:	mov    DWORD PTR [ebp-0x18],eax
  415447:	mov    eax,DWORD PTR [ebp+0xc]
  41544a:	mov    ecx,DWORD PTR [ebp+0xc]
  41544d:	mov    eax,DWORD PTR [eax+0x10]
  415450:	add    eax,DWORD PTR [ecx+0xc]
  415453:	mov    ecx,DWORD PTR [ebp-0x18]
  415456:	cmp    ecx,eax
  415458:	jb     0x415470
  41545a:	mov    eax,DWORD PTR [ebp+0xc]
  41545d:	mov    eax,DWORD PTR [eax+0xc]
  415460:	mov    ecx,DWORD PTR [ebp+0xc]
  415463:	add    eax,DWORD PTR [ecx+0x8]
  415466:	mov    ecx,DWORD PTR [ebp-0x18]
  415469:	sub    eax,ecx
  41546b:	jmp    0x41575e
  415470:	push   0xc
  415472:	push   DWORD PTR [ebp-0x4]
  415475:	lea    eax,[ebp-0x4c]
  415478:	push   eax
  415479:	call   0x414993
  41547e:	mov    eax,0xf89c85b5
  415483:	mov    DWORD PTR [ebp-0x2c],eax
  415486:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  41548d:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415494:	mov    DWORD PTR [ebp-0x38],0xf89c85b2
  41549b:	lea    ecx,[ebp-0x2c]
  41549e:	mov    DWORD PTR [ebp-0xc],ecx
  4154a1:	lea    ecx,[ebp-0x30]
  4154a4:	mov    DWORD PTR [ebp-0x10],ecx
  4154a7:	lea    ecx,[ebp-0x34]
  4154aa:	mov    DWORD PTR [ebp+0xc],ecx
  4154ad:	lea    ecx,[ebp-0x38]
  4154b0:	mov    DWORD PTR [ebp-0x14],ecx
  4154b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4154b6:	xor    ecx,edi
  4154b8:	add    ecx,ebx
  4154ba:	mov    DWORD PTR [ebp-0x18],ecx
  4154bd:	jmp    0x4156b9
  4154c2:	cmp    eax,0xf89c85b3
  4154c7:	je     0x4156cb
  4154cd:	mov    ecx,DWORD PTR [ebp-0x8]
  4154d0:	xor    ecx,edi
  4154d2:	mov    esi,eax
  4154d4:	add    ecx,ebx
  4154d6:	mov    DWORD PTR [ebp+0x18],ecx
  4154d9:	mov    eax,DWORD PTR [ebp-0x18]
  4154dc:	xor    esi,edi
  4154de:	lea    eax,[eax+esi*1+0x3272de]
  4154e5:	mov    DWORD PTR [ebp-0x18],eax
  4154e8:	mov    eax,DWORD PTR [ebp-0x8]
  4154eb:	mov    ecx,DWORD PTR [ebp-0x18]
  4154ee:	xor    eax,edi
  4154f0:	add    eax,ebx
  4154f2:	cmp    ecx,eax
  4154f4:	jne    0x415509
  4154f6:	mov    eax,DWORD PTR [ebp+0x8]
  4154f9:	xor    eax,edi
  4154fb:	add    eax,ebx
  4154fd:	push   eax
  4154fe:	push   0xc
  415500:	lea    eax,[ebp-0x4c]
  415503:	push   eax
  415504:	call   0x414f0a
  415509:	mov    eax,DWORD PTR [ebp-0xc]
  41550c:	mov    eax,DWORD PTR [eax]
  41550e:	xor    eax,edi
  415510:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415517:	mov    ecx,DWORD PTR [ebp+0x8]
  41551a:	xor    ecx,edi
  41551c:	movzx  eax,al
  41551f:	add    ecx,ebx
  415521:	cmp    eax,ecx
  415523:	je     0x4156a1
  415529:	mov    eax,DWORD PTR [ebp-0x10]
  41552c:	mov    eax,DWORD PTR [eax]
  41552e:	xor    eax,edi
  415530:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415537:	mov    ecx,DWORD PTR [ebp+0x8]
  41553a:	xor    ecx,edi
  41553c:	movzx  eax,al
  41553f:	add    ecx,ebx
  415541:	cmp    eax,ecx
  415543:	je     0x4156a1
  415549:	mov    eax,DWORD PTR [ebp+0xc]
  41554c:	mov    eax,DWORD PTR [eax]
  41554e:	xor    eax,edi
  415550:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415557:	mov    ecx,DWORD PTR [ebp+0x8]
  41555a:	xor    ecx,edi
  41555c:	movzx  eax,al
  41555f:	add    ecx,ebx
  415561:	cmp    eax,ecx
  415563:	je     0x4156a1
  415569:	mov    eax,DWORD PTR [ebp-0x14]
  41556c:	mov    eax,DWORD PTR [eax]
  41556e:	xor    eax,edi
  415570:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415577:	mov    ecx,DWORD PTR [ebp+0x8]
  41557a:	xor    ecx,edi
  41557c:	movzx  eax,al
  41557f:	add    ecx,ebx
  415581:	cmp    eax,ecx
  415583:	je     0x4156a1
  415589:	mov    eax,DWORD PTR [ebp-0x10]
  41558c:	mov    eax,DWORD PTR [eax]
  41558e:	xor    eax,edi
  415590:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415597:	mov    ecx,DWORD PTR [ebp-0xc]
  41559a:	mov    ecx,DWORD PTR [ecx]
  41559c:	xor    ecx,edi
  41559e:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  4155a5:	xor    al,cl
  4155a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4155aa:	mov    ecx,DWORD PTR [ecx]
  4155ac:	xor    ecx,edi
  4155ae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  4155b5:	or     al,cl
  4155b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4155ba:	mov    ecx,DWORD PTR [ecx]
  4155bc:	xor    ecx,edi
  4155be:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4155c5:	cmp    cl,al
  4155c7:	jne    0x4156a1
  4155cd:	mov    eax,DWORD PTR [ebp+0xc]
  4155d0:	mov    eax,DWORD PTR [eax]
  4155d2:	xor    eax,edi
  4155d4:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  4155db:	mov    ecx,DWORD PTR [ebp-0x10]
  4155de:	mov    ecx,DWORD PTR [ecx]
  4155e0:	xor    ecx,edi
  4155e2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  4155e9:	xor    al,cl
  4155eb:	mov    ecx,DWORD PTR [ebp-0x14]
  4155ee:	mov    ecx,DWORD PTR [ecx]
  4155f0:	xor    ecx,edi
  4155f2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  4155f9:	or     al,cl
  4155fb:	mov    ecx,DWORD PTR [ebp-0x10]
  4155fe:	mov    ecx,DWORD PTR [ecx]
  415600:	xor    ecx,edi
  415602:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  415609:	cmp    cl,al
  41560b:	jne    0x4156a1
  415611:	mov    eax,DWORD PTR [ebp-0x14]
  415614:	mov    eax,DWORD PTR [eax]
  415616:	xor    eax,edi
  415618:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  41561f:	mov    ecx,DWORD PTR [ebp+0xc]
  415622:	mov    ecx,DWORD PTR [ecx]
  415624:	xor    ecx,edi
  415626:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  41562d:	xor    al,cl
  41562f:	mov    ecx,DWORD PTR [ebp-0xc]
  415632:	mov    ecx,DWORD PTR [ecx]
  415634:	xor    ecx,edi
  415636:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  41563d:	or     al,cl
  41563f:	mov    ecx,DWORD PTR [ebp+0xc]
  415642:	mov    ecx,DWORD PTR [ecx]
  415644:	xor    ecx,edi
  415646:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  41564d:	cmp    cl,al
  41564f:	jne    0x4156a1
  415651:	mov    eax,DWORD PTR [ebp-0x14]
  415654:	mov    eax,DWORD PTR [eax]
  415656:	xor    eax,edi
  415658:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  41565f:	mov    ecx,DWORD PTR [ebp-0xc]
  415662:	mov    ecx,DWORD PTR [ecx]
  415664:	xor    ecx,edi
  415666:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  41566d:	xor    al,cl
  41566f:	mov    ecx,DWORD PTR [ebp-0x10]
  415672:	mov    ecx,DWORD PTR [ecx]
  415674:	xor    ecx,edi
  415676:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  41567d:	or     al,cl
  41567f:	mov    ecx,DWORD PTR [ebp-0x14]
  415682:	mov    ecx,DWORD PTR [ecx]
  415684:	xor    ecx,edi
  415686:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  41568d:	cmp    cl,al
  41568f:	jne    0x4156a1
  415691:	lea    eax,[ebp-0x4c]
  415694:	push   eax
  415695:	call   0x41515b
  41569a:	mov    ecx,DWORD PTR [ebp-0x44]
  41569d:	cmp    eax,ecx
  41569f:	je     0x4156ab
  4156a1:	mov    eax,DWORD PTR [ebp+0x8]
  4156a4:	xor    eax,edi
  4156a6:	add    eax,ebx
  4156a8:	mov    DWORD PTR [ebp+0x18],eax
  4156ab:	mov    eax,DWORD PTR [ebp-0x8]
  4156ae:	xor    eax,edi
  4156b0:	lea    eax,[eax+esi*1+0x3272de]
  4156b7:	xor    eax,edi
  4156b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4156bc:	mov    edx,DWORD PTR [ebp+0x18]
  4156bf:	xor    ecx,edi
  4156c1:	add    ecx,ebx
  4156c3:	cmp    edx,ecx
  4156c5:	je     0x4154c2
  4156cb:	mov    eax,DWORD PTR [ebp+0x8]
  4156ce:	mov    ecx,DWORD PTR [ebp+0x18]
  4156d1:	xor    eax,edi
  4156d3:	add    eax,ebx
  4156d5:	cmp    ecx,eax
  4156d7:	jne    0x4156ea
  4156d9:	mov    eax,DWORD PTR [ebp-0x8]
  4156dc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4156df:	xor    eax,edi
  4156e1:	lea    eax,[eax+ecx*1+0x3272de]
  4156e8:	jmp    0x415761
  4156ea:	push   0x18
  4156ec:	push   DWORD PTR [ebp-0x4]
  4156ef:	lea    eax,[ebp-0x64]
  4156f2:	push   eax
  4156f3:	call   0x414993
  4156f8:	mov    eax,DWORD PTR [ebp+0x8]
  4156fb:	mov    ecx,DWORD PTR [ebp-0x18]
  4156fe:	xor    eax,edi
  415700:	add    eax,ebx
  415702:	cmp    eax,ecx
  415704:	je     0x415719
  415706:	mov    eax,DWORD PTR [ebp+0x8]
  415709:	xor    eax,edi
  41570b:	add    eax,ebx
  41570d:	push   eax
  41570e:	push   0x18
  415710:	lea    eax,[ebp-0x64]
  415713:	push   eax
  415714:	call   0x414f0a
  415719:	mov    eax,DWORD PTR [ebp-0x4]
  41571c:	add    eax,0x18
  41571f:	mov    DWORD PTR [ebp+0x18],eax
  415722:	push   DWORD PTR [ebp-0x50]
  415725:	push   DWORD PTR [ebp+0x18]
  415728:	mov    eax,DWORD PTR [ebp-0x54]
  41572b:	add    eax,DWORD PTR [ebp-0x20]
  41572e:	push   eax
  41572f:	call   0x414993
  415734:	mov    eax,DWORD PTR [ebp+0x8]
  415737:	mov    ecx,DWORD PTR [ebp-0x18]
  41573a:	xor    eax,edi
  41573c:	add    eax,ebx
  41573e:	cmp    eax,ecx
  415740:	je     0x415753
  415742:	push   0x0
  415744:	push   DWORD PTR [ebp-0x50]
  415747:	mov    eax,DWORD PTR [ebp-0x54]
  41574a:	add    eax,DWORD PTR [ebp-0x20]
  41574d:	push   eax
  41574e:	call   0x414f0a
  415753:	mov    eax,DWORD PTR [ebp-0x24]
  415756:	mov    ecx,DWORD PTR [ebp-0x50]
  415759:	add    DWORD PTR [eax],ecx
  41575b:	mov    eax,DWORD PTR [ebp-0x50]
  41575e:	add    eax,DWORD PTR [ebp+0x1c]
  415761:	mov    DWORD PTR [ebp+0x1c],eax
  415764:	mov    eax,DWORD PTR [ebp-0x8]
  415767:	mov    ecx,DWORD PTR [ebp+0x1c]
  41576a:	xor    eax,edi
  41576c:	add    eax,ebx
  41576e:	imul   eax,ecx
  415771:	mov    ecx,DWORD PTR [ebp+0x8]
  415774:	mov    edx,DWORD PTR [ebp-0x28]
  415777:	xor    ecx,edi
  415779:	lea    ecx,[ecx+edx*1+0x3272de]
  415780:	cmp    eax,ecx
  415782:	jb     0x4153df
  415788:	mov    esi,DWORD PTR [ebp+0x14]
  41578b:	mov    eax,DWORD PTR [ebp-0x20]
  41578e:	mov    DWORD PTR [esi],eax
  415790:	jmp    0x4157d7
  415792:	mov    ecx,DWORD PTR [ebp+0x8]
  415795:	mov    edx,DWORD PTR [ebp+0xc]
  415798:	xor    ecx,edi
  41579a:	xor    edx,edi
  41579c:	add    ecx,ebx
  41579e:	add    edx,ebx
  4157a0:	cmp    ecx,edx
  4157a2:	jne    0x4157b6
  4157a4:	mov    eax,ds:0x7f642d1e
  4157a9:	imul   eax,eax,0x9f15fcef
  4157af:	mov    ds:0x7f642d1e,eax
  4157b4:	jmp    0x4157d7
  4157b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4157b9:	xor    ecx,edi
  4157bb:	add    ecx,ebx
  4157bd:	cmp    eax,ecx
  4157bf:	je     0x4157cd
  4157c1:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4157cb:	jmp    0x4157d7
  4157cd:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  4157d7:	pop    edi
  4157d8:	pop    esi
  4157d9:	pop    ebx
  4157da:	leave  
  4157db:	ret    0x18
  4157de:	push   ebp
  4157df:	mov    ebp,esp
  4157e1:	and    esp,0xfffffff8
  4157e4:	mov    eax,DWORD PTR [ebp+0x20]
  4157e7:	sub    esp,0x14
  4157ea:	push   ebx
  4157eb:	mov    ebx,DWORD PTR [ebp+0x14]
  4157ee:	push   esi
  4157ef:	push   edi
  4157f0:	cmp    eax,0xf89c85b5
  4157f5:	jne    0x415801
  4157f7:	push   0xf89c85b4
  4157fc:	jmp    0x415933
  415801:	mov    eax,DWORD PTR [ebp+0x20]
  415804:	cmp    eax,0xf89c85b4
  415809:	jne    0x415815
  41580b:	push   0xf89c85b3
  415810:	jmp    0x415933
  415815:	mov    eax,DWORD PTR [ebp+0x20]
  415818:	cmp    eax,0xf89c85b3
  41581d:	jne    0x415829
  41581f:	push   0xf89c85b2
  415824:	jmp    0x415933
  415829:	mov    eax,DWORD PTR [ebp+0x20]
  41582c:	cmp    eax,0xf89c85b2
  415831:	jne    0x41583d
  415833:	push   0xf89c85b1
  415838:	jmp    0x415933
  41583d:	mov    ecx,DWORD PTR [ebp+0x20]
  415840:	mov    eax,0xf89c85be
  415845:	cmp    ecx,eax
  415847:	jne    0x415903
  41584d:	mov    eax,DWORD PTR [ebp+0x10]
  415850:	mov    DWORD PTR [esp+0xc],eax
  415854:	mov    eax,DWORD PTR [ebp+0x18]
  415857:	mov    DWORD PTR [esp+0x14],eax
  41585b:	mov    eax,DWORD PTR [ebp+0xc]
  41585e:	mov    DWORD PTR [esp+0x18],eax
  415862:	mov    eax,DWORD PTR [ebp+0x8]
  415865:	mov    DWORD PTR [esp+0x10],eax
  415869:	mov    eax,DWORD PTR [esp+0x10]
  41586d:	mov    ecx,DWORD PTR [esp+0x14]
  415871:	mov    edi,0x7510897
  415876:	xor    eax,edi
  415878:	mov    esi,0x3272de
  41587d:	add    eax,esi
  41587f:	mov    DWORD PTR [ecx],eax
  415881:	mov    eax,DWORD PTR [esp+0xc]
  415885:	mov    eax,DWORD PTR [eax+0x194]
  41588b:	mov    ecx,DWORD PTR [eax]
  41588d:	mov    eax,DWORD PTR [esp+0xc]
  415891:	mov    eax,DWORD PTR [eax+0x194]
  415897:	mov    eax,DWORD PTR [eax]
  415899:	add    eax,DWORD PTR [ecx+0x3c]
  41589c:	mov    ecx,DWORD PTR [esp+0xc]
  4158a0:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4158a6:	mov    ecx,DWORD PTR [ecx+0x14]
  4158a9:	push   0x4
  4158ab:	push   0x3000
  4158b0:	push   DWORD PTR [eax+0x50]
  4158b3:	push   0x0
  4158b5:	call   ecx
  4158b7:	mov    DWORD PTR [ebx],eax
  4158b9:	mov    eax,DWORD PTR [esp+0x10]
  4158bd:	push   DWORD PTR [esp+0xc]
  4158c1:	xor    eax,edi
  4158c3:	add    eax,esi
  4158c5:	mov    DWORD PTR [esp+0x20],eax
  4158c9:	lea    eax,[esp+0x20]
  4158cd:	push   eax
  4158ce:	push   ebx
  4158cf:	push   DWORD PTR [esp+0x20]
  4158d3:	push   DWORD PTR [esp+0x28]
  4158d7:	push   DWORD PTR [esp+0x24]
  4158db:	call   0x41529f
  4158e0:	mov    eax,DWORD PTR [esp+0x10]
  4158e4:	mov    ecx,DWORD PTR [ebx]
  4158e6:	xor    eax,edi
  4158e8:	add    eax,esi
  4158ea:	cmp    ecx,eax
  4158ec:	je     0x41594a
  4158ee:	mov    eax,DWORD PTR [esp+0x18]
  4158f2:	mov    ecx,DWORD PTR [esp+0x14]
  4158f6:	xor    eax,edi
  4158f8:	add    eax,esi
  4158fa:	imul   eax,DWORD PTR [esp+0x1c]
  4158ff:	mov    DWORD PTR [ecx],eax
  415901:	jmp    0x41594a
  415903:	mov    ecx,DWORD PTR [ebp+0x20]
  415906:	cmp    ecx,0xf89c85b1
  41590c:	jne    0x415915
  41590e:	push   0xf89c85b0
  415913:	jmp    0x415933
  415915:	mov    ecx,DWORD PTR [ebp+0x20]
  415918:	cmp    ecx,0xf89c85b0
  41591e:	jne    0x415927
  415920:	push   0xf89c85bf
  415925:	jmp    0x415933
  415927:	mov    ecx,DWORD PTR [ebp+0x20]
  41592a:	cmp    ecx,0xf89c85bf
  415930:	jne    0x41594a
  415932:	push   eax
  415933:	push   DWORD PTR [ebp+0x1c]
  415936:	push   DWORD PTR [ebp+0x18]
  415939:	push   ebx
  41593a:	push   DWORD PTR [ebp+0x10]
  41593d:	push   DWORD PTR [ebp+0xc]
  415940:	push   DWORD PTR [ebp+0x8]
  415943:	call   0x4157de
  415948:	mov    DWORD PTR [ebx],eax
  41594a:	mov    eax,DWORD PTR [ebx]
  41594c:	pop    edi
  41594d:	pop    esi
  41594e:	pop    ebx
  41594f:	mov    esp,ebp
  415951:	pop    ebp
  415952:	ret    0x1c
  415955:	push   ebp
  415956:	mov    ebp,esp
  415958:	sub    esp,0xc
  41595b:	mov    eax,0xf89c85b5
  415960:	mov    DWORD PTR [ebp-0x8],eax
  415963:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  41596a:	mov    ecx,DWORD PTR [ebp-0x8]
  41596d:	xor    ecx,0x7510897
  415973:	add    ecx,0x3272de
  415979:	mov    DWORD PTR [ebp-0x4],ecx
  41597c:	mov    ecx,DWORD PTR [ebp+0xc]
  41597f:	push   eax
  415980:	mov    DWORD PTR [ebp+0xc],ecx
  415983:	push   DWORD PTR [ebp+0xc]
  415986:	lea    eax,[ebp-0x4]
  415989:	push   DWORD PTR [ebp+0x8]
  41598c:	push   eax
  41598d:	push   DWORD PTR [ebp+0xc]
  415990:	push   DWORD PTR [ebp-0xc]
  415993:	push   DWORD PTR [ebp-0x8]
  415996:	call   0x4157de
  41599b:	mov    DWORD PTR [ebp-0x4],eax
  41599e:	mov    eax,DWORD PTR [ebp-0x4]
  4159a1:	leave  
  4159a2:	ret    0x8
  4159a5:	mov    cl,0x27
  4159a7:	popa   
  4159a8:	test   bh,dh
  4159aa:	(bad)  
  4159ab:	cmc    
  4159ac:	aaa    
  4159ad:	in     eax,0xc5
  4159af:	sub    eax,0x869b138b
  4159b4:	nop
  4159b5:	popf   
  4159b6:	aam    0x0
  4159b8:	add    al,bh
  4159ba:	add    al,0x0
  4159bc:	add    BYTE PTR [edi],ch
  4159be:	xchg   BYTE PTR [esi],dl
  4159c0:	push   eax
  4159c1:	inc    cl
  4159c3:	sbb    DWORD PTR [ebx-0x14],edx
  4159c6:	loopne 0x415a0a
  4159c8:	add    al,0x48
  4159ca:	or     BYTE PTR [edi-0x43],cl
  4159cd:	ins    BYTE PTR es:[edi],dx
  4159ce:	add    DWORD PTR ds:0xe1099152,edx
  4159d4:	xor    al,0x51
  4159d6:	mov    ebp,0x21b58cbe
  4159db:	xchg   ebp,eax
  4159dc:	xchg   ebp,eax
  4159dd:	adc    esi,DWORD PTR [eax-0x3ed5e164]
  4159e3:	fldenv [ecx]
  4159e5:	(bad)  
  4159e6:	push   cs
  4159e7:	les    ecx,FWORD PTR [ecx+0x42c91d6b]
  4159ed:	jbe    0x415a4b
  4159ef:	mov    edi,0xbd6d63f9
  4159f4:	mov    edi,0xc54b90c7
  4159f9:	stos   DWORD PTR es:[edi],eax
  4159fa:	in     eax,dx
  4159fb:	nop
  4159fc:	mov    ebp,0x759ec262
  415a01:	das    
  415a02:	sub    edx,ebp
  415a04:	add    al,0xac
  415a06:	cmp    eax,0x152e2026
  415a0b:	cld    
  415a0c:	cmp    eax,0x894e1d6b
  415a11:	mov    eax,ds:0x28f239c1
  415a16:	and    BYTE PTR [ebx],0x2e
  415a19:	stc    
  415a1a:	dec    esp
  415a1b:	pop    edi
  415a1c:	pop    ebx
  415a1d:	out    0x54,al
  415a1f:	(bad)  
  415a20:	js     0x415a48
  415a22:	cs nop
  415a24:	mov    ebp,0x36ddea38
  415a29:	xchg   esi,eax
  415a2a:	(bad)  
  415a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a2c:	loopne 0x415a02
  415a2e:	mov    dh,cl
  415a30:	mov    edx,0xec5999b7
  415a35:	jb     0x4159d2
  415a37:	scas   al,BYTE PTR es:[edi]
  415a38:	(bad)
  415a3c:	sar    BYTE PTR [ebx-0x73],cl
  415a3f:	and    ecx,DWORD PTR [ecx]
  415a41:	cmp    al,0x69
  415a43:	fmul   DWORD PTR [edx-0x4bb08387]
  415a49:	inc    ecx
  415a4a:	jbe    0x415ab2
  415a4c:	add    al,0xe0
  415a4e:	int3   
  415a4f:	sub    DWORD PTR [edi-0x2],edi
  415a52:	aaa    
  415a53:	ret    
  415a54:	gs sub esp,ebp
  415a57:	pusha  
  415a58:	xchg   DWORD PTR [edx],ebp
  415a5a:	jbe    0x415a6f
  415a5c:	dec    edx
  415a5d:	(bad)  
  415a5e:	mov    bl,0x93
  415a60:	and    DWORD PTR [eax],esp
  415a62:	adc    DWORD PTR [edx+eax*2+0x5c0118f4],ebx
  415a69:	jmp    0x223c:0x3d890b13
  415a70:	cdq    
  415a71:	adc    al,BYTE PTR [ecx-0x27bf72cd]
  415a77:	in     al,0xab
  415a79:	aad    0x22
  415a7b:	cmp    dl,cl
  415a7d:	or     eax,0x1b32d1f7
  415a82:	jmp    0xcb7c1225
  415a87:	inc    esp
  415a88:	cmp    al,0xd1
  415a8a:	add    al,0xe3
  415a8c:	lds    ecx,FWORD PTR [eax-0x72befbff]
  415a92:	into   
  415a93:	mov    ch,0x95
  415a95:	mov    ebp,0x8c71100
  415a9a:	cmp    eax,0x75c046aa
  415a9f:	xor    ebx,DWORD PTR [eax-0x2357bf6e]
  415aa5:	push   edx
  415aa6:	cs sbb al,0xe5
  415aa9:	in     eax,dx
  415aaa:	loop   0x415a6b
  415aac:	pop    es
  415aad:	out    dx,eax
  415aae:	inc    edi
  415aaf:	lock sub ecx,DWORD PTR ds:0x9a4257b5
  415ab6:	add    ebp,ebx
  415ab8:	pop    ss
  415ab9:	add    DWORD PTR [edi+ebx*4+0x43dd495a],0x3ffc730e
  415ac4:	(bad)  
  415ac6:	inc    esp
  415ac7:	or     DWORD PTR ss:[esi+0x280e53c3],edi
  415ace:	xchg   edi,eax
  415acf:	and    DWORD PTR [ebx-0x39],eax
  415ad2:	pop    edx
  415ad3:	xchg   edx,eax
  415ad4:	lea    ebx,[esi-0x4c]
  415ad7:	aad    0xc1
  415ad9:	adc    eax,ecx
  415adb:	fs sbb al,0x45
  415ade:	jle    0x415b39
  415ae0:	in     eax,dx
  415ae1:	in     eax,dx
  415ae2:	outs   dx,BYTE PTR ds:[esi]
  415ae3:	leave  
  415ae4:	int    0x25
  415ae6:	inc    edi
  415ae7:	pop    es
  415ae8:	in     eax,0x25
  415aea:	ja     0x415a7a
  415aec:	test   al,0x46
  415aee:	out    dx,eax
  415aef:	mov    ebp,0x859749f2
  415af4:	sbb    al,0xe8
  415af6:	adc    ecx,DWORD PTR [esi]
  415af8:	imul   edx,ebx,0x7
  415afb:	xchg   esp,eax
  415afc:	test   al,0x38
  415afe:	dec    ecx
  415aff:	fiadd  WORD PTR [ecx-0x5f]
  415b02:	mov    dh,0xb7
  415b04:	dec    ebx
  415b05:	daa    
  415b06:	not    BYTE PTR [ebx-0x3d955cb1]
  415b0c:	test   eax,0xc46d653c
  415b11:	das    
  415b12:	xor    edx,DWORD PTR [edx+0x219a7314]
  415b18:	imul   edx,DWORD PTR [ebx],0x5e
  415b1b:	adc    ch,BYTE PTR [edi-0x76a364c7]
  415b21:	retf   
  415b22:	inc    ebp
  415b23:	mov    ss,WORD PTR [esi]
  415b25:	mov    di,ax
  415b28:	inc    ebp
  415b29:	popf   
  415b2a:	jns    0x415b67
  415b2c:	adc    DWORD PTR [edi+edi*2+0x1053953d],eax
  415b33:	fdiv   QWORD PTR [ecx+0x58]
  415b36:	out    dx,eax
  415b37:	in     eax,0x99
  415b39:	sbb    al,0x48
  415b3b:	push   ebp
  415b3c:	div    DWORD PTR [edi+0x15]
  415b3f:	loop   0x415aca
  415b41:	imul   edx,DWORD PTR [ebp-0x69],0xa72d99e4
  415b48:	pop    edi
  415b49:	aad    0x2c
  415b4b:	repnz dec edx
  415b4d:	(bad)  
  415b4e:	and    ecx,esi
  415b50:	sub    al,0x68
  415b52:	ja     0x415b5e
  415b54:	and    dl,cl
  415b56:	fwait
  415b57:	mov    dh,0xa
  415b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b5a:	enter  0x51df,0xa6
  415b5e:	or     bh,BYTE PTR [edx-0x69]
  415b61:	inc    edi
  415b62:	ret    
  415b63:	xchg   ebx,eax
  415b64:	push   ds
  415b65:	sbb    bh,BYTE PTR [ecx+0x26]
  415b68:	cmp    al,0x6e
  415b6a:	xchg   ebp,eax
  415b6b:	sbb    esp,ebx
  415b6d:	pop    esp
  415b6e:	xor    al,0x16
  415b70:	push   eax
  415b71:	rol    BYTE PTR ss:[esi-0x7c55e3c8],cl
  415b78:	pop    ebp
  415b79:	(bad)  
  415b7a:	mov    esi,0x2bdb854f
  415b7f:	mov    ds:0x1633c25c,eax
  415b84:	cmp    ebp,DWORD PTR [esp+esi*2-0x3274398e]
  415b8b:	jmp    0x415bbc
  415b8d:	loopne 0x415b69
  415b8f:	add    eax,0xae2ada91
  415b94:	sbb    eax,0xc0717ca
  415b99:	xchg   edx,eax
  415b9a:	or     eax,0x242b2ee7
  415b9f:	jg     0x415c14
  415ba1:	inc    edx
  415ba2:	jl     0x415be6
  415ba4:	cmc    
  415ba5:	loope  0x415be5
  415ba7:	jge    0x415b5a
  415ba9:	fstp   TBYTE PTR [ebx+edx*1-0x42]
  415bad:	pop    es
  415bae:	jnp    0x415b45
  415bb0:	or     esp,DWORD PTR [ecx+0x55531e28]
  415bb6:	dec    eax
  415bb7:	jle    0x415bf5
  415bb9:	mov    eax,cs:0xe8aef8f2
  415bbf:	daa    
  415bc0:	sbb    al,0x15
  415bc2:	mov    bh,0xc0
  415bc4:	push   eax
  415bc5:	xchg   esi,eax
  415bc6:	imul   BYTE PTR [ecx+0x2f]
  415bc9:	mov    bl,0xde
  415bcb:	mov    edx,0xd672cbef
  415bd0:	jmp    0x415c01
  415bd2:	add    bl,bl
  415bd4:	daa    
  415bd5:	(bad)  
  415bd6:	lds    esi,FWORD PTR [edi+0x6fdea0d9]
  415bdc:	push   ecx
  415bdd:	mov    WORD PTR [edx+0x1ac3410e],?
  415be3:	fild   DWORD PTR [edx]
  415be5:	inc    edi
  415be6:	adc    BYTE PTR [ebx],bl
  415be8:	mov    gs,ebp
  415bea:	dec    esp
  415beb:	jge    0x415c09
  415bed:	or     al,0xb2
  415bef:	in     eax,dx
  415bf0:	mov    dl,0xc3
  415bf2:	out    dx,eax
  415bf3:	add    BYTE PTR [edx-0x67],0xf8
  415bf7:	fidivr DWORD PTR [edx]
  415bf9:	sar    DWORD PTR [eax+0x69507ac0],0xaf
  415c00:	arpl   WORD PTR [edi-0x5f9cbea2],bp
  415c06:	rcr    DWORD PTR [ebx-0x26],0xc8
  415c0a:	xor    ebx,DWORD PTR [edx+esi*4+0x25ab94c3]
  415c11:	mov    ds:0xddff03e7,eax
  415c16:	xchg   edi,eax
  415c17:	nop    DWORD PTR [eax+eax*4]
  415c1b:	push   eax
  415c1c:	div    DWORD PTR [edi-0x69]
  415c1f:	fmul   DWORD PTR [eax]
  415c21:	je     0x415c66
  415c23:	cmp    eax,0x3901270e
  415c28:	and    DWORD PTR [ecx-0x697778dc],eax
  415c2e:	mov    DWORD PTR ds:0x5a9877b2,eax
  415c34:	cwde   
  415c35:	sbb    BYTE PTR [edi+0x5bf2bbd],dl
  415c3b:	dec    eax
  415c3c:	js     0x415c23
  415c3e:	sub    bl,BYTE PTR [edx-0x13]
  415c41:	das    
  415c42:	lds    edi,FWORD PTR [eax]
  415c44:	es mov dh,0x13
  415c47:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c49:	add    eax,0x1ea95e04
  415c4e:	add    al,0x56
  415c50:	daa    
  415c51:	loope  0x415c89
  415c53:	inc    esp
  415c54:	bound  esi,QWORD PTR [esi-0x46]
  415c57:	xor    DWORD PTR [edi-0x335a8af4],ebx
  415c5d:	adc    eax,0xbad11749
  415c62:	pop    ebx
  415c63:	mov    al,0xf7
  415c65:	sub    al,0x1e
  415c67:	sbb    eax,0x12075f63
  415c6c:	inc    esp
  415c6d:	sbb    eax,0xa6303b6a
  415c72:	dec    eax
  415c73:	mov    WORD PTR [edi+0x5cdefe25],ds
  415c79:	lds    ecx,FWORD PTR [ebp+0x630833a6]
  415c7f:	mov    dh,0xeb
  415c81:	xchg   ebx,eax
  415c82:	add    al,0xc4
  415c84:	sbb    DWORD PTR [edi],esp
  415c86:	inc    ebp
  415c87:	aad    0x99
  415c89:	push   edx
  415c8a:	push   edi
  415c8b:	jne    0x415c4f
  415c8d:	mov    eax,0xd4fef07b
  415c92:	push   DWORD PTR [ebx+0x2]
  415c95:	addr16 jnp 0x415cc3
  415c98:	out    0x3c,al
  415c9a:	sbb    esi,DWORD PTR [esi]
  415c9c:	xchg   ebp,eax
  415c9d:	jb     0x415cb3
  415c9f:	xchg   esi,eax
  415ca0:	push   edx
  415ca1:	fisub  WORD PTR [edx+0x5d]
  415ca4:	std    
  415ca5:	sti    
  415ca6:	sub    al,0x6b
  415ca8:	push   0xffffffdf
  415caa:	and    eax,0xffa08c2b
  415caf:	push   ds
  415cb0:	fnstsw WORD PTR [ecx-0x31]
  415cb3:	dec    eax
  415cb4:	or     al,0xeb
  415cb6:	sbb    cl,cl
  415cb8:	in     al,0x70
  415cba:	pusha  
  415cbb:	lahf   
  415cbc:	fnstcw WORD PTR [edi]
  415cbe:	pop    edx
  415cbf:	call   0x74d8d718
  415cc4:	push   cs
  415cc5:	outs   dx,BYTE PTR ds:[esi]
  415cc7:	cmp    al,0x92
  415cc9:	test   DWORD PTR [eax+0x55f92f8a],edx
  415ccf:	and    esi,DWORD PTR [ebx]
  415cd1:	cs mov dh,0x65
  415cd4:	daa    
  415cd5:	ffreep st(4)
  415cd7:	sub    dl,BYTE PTR [edx+0x22]
  415cda:	mov    ecx,0x4f20a7a8
  415cdf:	push   ss
  415ce0:	inc    ecx
  415ce1:	dec    edi
  415ce2:	mov    esi,0xf3797481
  415ce7:	jo     0x415cf9
  415ce9:	sub    BYTE PTR [edx-0xbb90571],ah
  415cef:	mov    edx,0x9d5b772d
  415cf4:	adc    bh,BYTE PTR [ebp+ebx*8-0x68]
  415cf8:	jo     0x415c9e
  415cfa:	lds    edx,FWORD PTR [edx]
  415cfc:	lods   al,BYTE PTR ds:[esi]
  415cfd:	push   edi
  415cfe:	pop    ecx
  415cff:	(bad)  
  415d00:	push   edx
  415d01:	mov    esp,0x69f866
  415d06:	mov    ds:0xd304a18d,al
  415d0b:	push   esp
  415d0c:	cli    
  415d0d:	jecxz  0x415d25
  415d0f:	adc    DWORD PTR [edi+ebp*2+0x30c3d023],esi
  415d16:	mov    dl,0x43
  415d18:	dec    ebx
  415d19:	jmp    0x6e73:0x47c87fcb
  415d20:	dec    esp
  415d21:	sub    eax,0x15d054e3
  415d26:	and    eax,0x28463e
  415d2b:	into   
  415d2c:	inc    ebp
  415d2d:	es dec ecx
  415d2f:	outs   dx,BYTE PTR ds:[esi]
  415d30:	pop    edi
  415d31:	xor    DWORD PTR [edx-0x31],ecx
  415d34:	xor    al,0xb1
  415d36:	jae    0x415cdb
  415d38:	mov    al,0x92
  415d3a:	iret   
  415d3b:	test   ebp,eax
  415d3d:	push   0xffffff99
  415d3f:	test   ebp,ebx
  415d41:	adc    DWORD PTR [ecx-0x35e9fce3],ecx
  415d47:	jb     0x415ce8
  415d49:	sbb    ecx,DWORD PTR [edi+esi*8]
  415d4c:	mov    es,WORD PTR [eax+0x2c4e6423]
  415d52:	pusha  
  415d53:	pop    es
  415d54:	sbb    DWORD PTR [eax-0x10],eax
  415d57:	cmc    
  415d58:	jge    0x415dc7
  415d5a:	adc    eax,0x5090305d
  415d5f:	clc    
  415d60:	(bad)  
  415d61:	jp     0x415dc3
  415d63:	outs   dx,DWORD PTR ds:[esi]
  415d64:	push   edx
  415d65:	fisub  DWORD PTR [edx]
  415d67:	int    0x34
  415d69:	leave  
  415d6a:	inc    esp
  415d6b:	inc    edi
  415d6c:	sbb    BYTE PTR [ebx+0x2d],bl
  415d6f:	cmp    BYTE PTR [edx+eiz*2+0x6f],dl
  415d73:	test   eax,0x8ac78fd3
  415d78:	jne    0x415d0b
  415d7a:	stos   BYTE PTR es:[edi],al
  415d7b:	mov    ah,0x35
  415d7d:	push   eax
  415d7e:	or     BYTE PTR [ebx],ch
  415d80:	pop    esi
  415d81:	popa   
  415d82:	xor    ch,dl
  415d84:	sub    eax,0x21590b14
  415d89:	retf   0x2245
  415d8c:	ficomp DWORD PTR [ecx+0x3ab58e52]
  415d92:	add    dl,BYTE PTR [edx]
  415d94:	adc    edx,ecx
  415d96:	test   eax,0x9d71c606
  415d9b:	(bad)
  415d9e:	jg     0x415dda
  415da0:	test   DWORD PTR [esi],eax
  415da2:	xchg   ecx,eax
  415da3:	popf   
  415da4:	loopne 0x415d3f
  415da6:	pop    eax
  415da7:	stc    
  415da8:	inc    ebp
  415da9:	lods   al,BYTE PTR ds:[esi]
  415daa:	loopne 0x415d8a
  415dac:	add    DWORD PTR [ebp+0xef336a3],ecx
  415db2:	adc    eax,0xa1dfbb3
  415db7:	xchg   ebp,eax
  415db8:	push   ss
  415db9:	lods   al,BYTE PTR ds:[esi]
  415dba:	nop
  415dbb:	std    
  415dbc:	stos   DWORD PTR es:[edi],eax
  415dbd:	jae    0x415e3c
  415dbf:	sbb    al,0xf3
  415dc1:	push   ss
  415dc2:	sbb    DWORD PTR [ecx+0x1845305e],0xffffff95
  415dc9:	jg     0x415d52
  415dcb:	ror    BYTE PTR [eax+ebx*8-0x5c],0x36
  415dd0:	inc    edi
  415dd1:	xlat   BYTE PTR ds:[ebx]
  415dd2:	test   eax,0x78029aab
  415dd7:	mov    ds:0x2276af3c,al
  415ddc:	add    edi,DWORD PTR [ebx-0x31]
  415ddf:	mov    ah,0x6
  415de1:	adc    DWORD PTR [edx+ecx*2-0x1b],edx
  415de5:	sti    
  415de6:	push   0xffffffc7
  415de8:	fst    QWORD PTR [eax+0x3dd88150]
  415dee:	je     0x415e65
  415df0:	dec    edi
  415df1:	mov    ds:0x6bf2dbec,al
  415df6:	iret   
  415df7:	not    DWORD PTR [ecx-0x63]
  415dfa:	mov    eax,ds:0xea14b42a
  415dff:	or     al,0x75
  415e01:	jne    0x415e4c
  415e03:	fsubr  DWORD PTR [ebx-0x72]
  415e06:	adc    ch,BYTE PTR [ebx+0xf]
  415e09:	(bad)  
  415e0b:	cmp    esi,0xffffffa7
  415e0e:	dec    eax
  415e0f:	cdq    
  415e10:	add    BYTE PTR [ebx],dl
  415e12:	stos   DWORD PTR es:[edi],eax
  415e13:	adc    al,0xcb
  415e15:	or     dh,BYTE PTR [edx]
  415e17:	pop    eax
  415e18:	cmp    DWORD PTR [ebx],ebx
  415e1a:	pop    ecx
  415e1b:	out    0x81,al
  415e1d:	sub    bh,BYTE PTR [eax+0x54]
  415e20:	sub    dh,dl
  415e22:	xor    eax,0x3da3301e
  415e27:	pop    es
  415e28:	jae    0x415e0d
  415e2a:	retf   0x8a4b
  415e2d:	mov    ecx,edi
  415e2f:	jo     0x415e00
  415e31:	jmp    0x415eb1
  415e33:	mov    WORD PTR ds:[edi],gs
  415e36:	leave  
  415e37:	ret    0xd950
  415e3a:	pusha  
  415e3b:	mov    eax,ds:0x874e2cc2
  415e40:	dec    esp
  415e41:	imul   edi,DWORD PTR [esi+0x2cbfd168],0x5eca761c
  415e4b:	xchg   edi,eax
  415e4c:	jno    0x415e55
  415e4e:	jp     0x415def
  415e50:	or     al,0x5d
  415e52:	fstsw  WORD PTR [edx+0x4c]
  415e56:	xchg   ebp,eax
  415e57:	data16 add al,0x99
  415e5a:	(bad)  
  415e5d:	push   ecx
  415e5e:	pop    esp
  415e5f:	jmp    DWORD PTR [edi]
  415e61:	(bad)  
  415e63:	or     BYTE PTR [ebx+0x49],0x99
  415e67:	inc    ecx
  415e68:	xchg   BYTE PTR [edx+ebx*8],ch
  415e6b:	xchg   ecx,eax
  415e6c:	mov    ds:0x982231ce,al
  415e71:	pop    edx
  415e72:	shl    BYTE PTR [esi-0x19],1
  415e75:	pop    edx
  415e76:	fidivr DWORD PTR [ecx]
  415e78:	in     eax,dx
  415e79:	and    BYTE PTR [ebp-0x2f5d0c1e],0x10
  415e80:	clc    
  415e81:	jns    0x415e97
  415e83:	(bad)  
  415e84:	inc    ebp
  415e85:	bound  edi,QWORD PTR [ebp-0x50]
  415e88:	sbb    ah,BYTE PTR [eax-0x4dcaacdb]
  415e8e:	cmovo  ebx,DWORD PTR [ebx+0x69]
  415e92:	pop    ss
  415e93:	xadd   dh,dl
  415e96:	jle    0x415e6e
  415e98:	int3   
  415e99:	push   0x1d
  415e9b:	or     BYTE PTR [esi+ecx*4],ah
  415e9e:	clc    
  415e9f:	jnp    0x415ea8
  415ea1:	or     DWORD PTR [edi],ecx
  415ea3:	jb     0x415e61
  415ea5:	mov    ebx,0x54fcfefe
  415eaa:	ja     0x415e35
  415eac:	push   ds
  415ead:	sbb    BYTE PTR [edi],0xa9
  415eb0:	ja     0x415e95
  415eb2:	in     al,dx
  415eb3:	mov    ebx,0x8016c064
  415eb8:	pop    ebx
  415eb9:	(bad)  
  415eba:	(bad)  
  415ebc:	lahf   
  415ebd:	xchg   esp,eax
  415ebe:	mov    esi,DWORD PTR [edi-0x32956cd5]
  415ec4:	call   0x42385e
  415ec9:	clc    
  415eca:	add    al,0x0
  415ecc:	add    al,bh
  415ece:	cmp    al,0x2d
  415ed0:	push   esp
  415ed1:	out    dx,al
  415ed2:	fsubr  st(3),st
  415ed4:	or     DWORD PTR [esi],edx
  415ed6:	and    eax,0xf3efaf7b
  415edb:	sub    BYTE PTR [esi+0x5a],ch
  415ede:	imul   ebp,DWORD PTR [ebx+eiz*2+0x18],0xd9d25b62
  415ee6:	push   ecx
  415ee7:	inc    esi
  415ee8:	mov    DWORD PTR [edi],edi
  415eea:	mov    esp,0x9a069002
  415eef:	fld    QWORD PTR [ecx]
  415ef1:	xchg   esp,eax
  415ef2:	pop    ebp
  415ef3:	ficomp WORD PTR [ecx+0x706508f3]
  415ef9:	dec    edi
  415efa:	jns    0x415e7d
  415efc:	sahf   
  415efd:	add    edi,ebx
  415eff:	stos   BYTE PTR es:[edi],al
  415f00:	xor    eax,0xe634588f
  415f05:	sahf   
  415f06:	data16 and bl,bh
  415f09:	aaa    
  415f0a:	mov    bl,0xcd
  415f0c:	inc    ebp
  415f0d:	xor    BYTE PTR [edi],0xc4
  415f10:	dec    ebx
  415f11:	cmp    al,0x8f
  415f13:	cmp    DWORD PTR [esi-0x337838e],ebx
  415f19:	call   0x243489bc
  415f1e:	push   cs
  415f1f:	dec    esi
  415f20:	adc    eax,0xf0771e2f
  415f25:	fld    TBYTE PTR [ecx-0x49]
  415f28:	ins    DWORD PTR es:[edi],dx
  415f29:	sub    BYTE PTR [edi+0x76eaeba8],dh
  415f2f:	cmp    bh,BYTE PTR [esi+0x59]
  415f32:	imul   ecx,esp,0x18
  415f35:	xchg   DWORD PTR [esi-0x23],ebx
  415f38:	mov    WORD PTR [eax+ecx*8-0x3a],es
  415f3c:	cmp    edi,DWORD PTR [edx]
  415f3e:	clc    
  415f3f:	mov    al,ds:0x200d9273
  415f44:	aam    0x5c
  415f46:	sar    esi,1
  415f48:	or     BYTE PTR [edx-0x705f724a],dl
  415f4e:	pop    edi
  415f4f:	pop    edx
  415f50:	mov    dl,0xa1
  415f52:	leave  
  415f53:	(bad)  
  415f54:	cmc    
  415f55:	lock mov ebp,0xc8cf89c3
  415f5b:	inc    BYTE PTR [edx]
  415f5d:	pop    esi
  415f5e:	dec    edi
  415f5f:	call   0x47d95e6b
  415f64:	mov    ds:0x675eb3b2,eax
  415f69:	jb     0x415f02
  415f6b:	outs   dx,BYTE PTR ds:[esi]
  415f6c:	xor    eax,DWORD PTR [ebx+edx*1-0x3b0bd027]
  415f73:	retf   0xc1a
  415f76:	adc    esi,DWORD PTR [edx]
  415f78:	cmp    al,0x55
  415f7a:	jns    0x415fb1
  415f7c:	jno    0x415fdc
  415f7e:	imul   ebx,DWORD PTR [edx+ecx*4],0xffffffe2
  415f82:	sub    bh,BYTE PTR [edx-0x7a]
  415f85:	jns    0x415f4c
  415f87:	push   ebp
  415f88:	mov    al,0xef
  415f8a:	sbb    cl,BYTE PTR [esi-0x444acf39]
  415f90:	jmp    0x58a0:0x650f28c9
  415f97:	xchg   esp,eax
  415f98:	lds    eax,FWORD PTR [esi]
  415f9a:	fsubr  DWORD PTR [edx-0x1f3befb]
  415fa0:	fdivr  st,st(7)
  415fa2:	bound  ebx,QWORD PTR [edx]
  415fa4:	push   edx
  415fa5:	ds lahf 
  415fa7:	fwait
  415fa8:	popf   
  415fa9:	jp     0x415f9c
  415fab:	mov    ecx,0xfe964e10
  415fb0:	int3   
  415fb1:	and    eax,0x5178fd99
  415fb6:	ret    
  415fb7:	ret    
  415fb8:	adc    al,0xd3
  415fba:	fwait
  415fbb:	cmp    al,0xb6
  415fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fbe:	fwait
  415fbf:	mov    al,0xf8
  415fc1:	ret    
  415fc2:	pop    es
  415fc3:	jae    0x415fb4
  415fc5:	xor    al,0x95
  415fc7:	dec    ecx
  415fc8:	scas   al,BYTE PTR es:[edi]
  415fc9:	xor    al,al
  415fcb:	push   ecx
  415fcc:	sub    edx,DWORD PTR [esi]
  415fce:	adc    BYTE PTR [ebp-0x1eb91988],bl
  415fd4:	and    eax,0x95ae7e1a
  415fd9:	inc    eax
  415fda:	sbb    esp,DWORD PTR [ebx+0x1a]
  415fdd:	adc    edi,eax
  415fdf:	add    al,0x2e
  415fe1:	ret    0xa374
  415fe4:	imul   ecx,DWORD PTR [ecx+0x62],0x4f154fc4
  415feb:	rcr    BYTE PTR [esi],0x89
  415fee:	shr    DWORD PTR [esi-0x2e],1
  415ff1:	jmp    0xa954:0xaf759322
  415ff8:	std    
  415ff9:	fistp  DWORD PTR [edi]
  415ffb:	test   BYTE PTR [esi+0x4666922b],bh
  416001:	je     0x41604d
  416003:	mov    dh,0x92
  416005:	jmp    0x7353764f
  41600a:	mul    BYTE PTR [esi+0x50]
  41600d:	pop    ecx
  41600e:	xchg   ch,dl
  416010:	icebp  
  416011:	cmp    eax,0x70e482b
  416016:	dec    eax
  416017:	enter  0xfe6a,0x9
  41601b:	mov    dl,0xe5
  41601d:	les    edx,FWORD PTR [eax]
  41601f:	loop   0x41600d
  416021:	push   ds
  416022:	shr    DWORD PTR [edx-0x5c],0x14
  416026:	retf   0x51e9
  416029:	jmp    0x415ffa
  41602b:	stc    
  41602c:	xchg   BYTE PTR ds:0x17e424b7,dl
  416032:	ins    BYTE PTR es:[edi],dx
  416033:	fild   QWORD PTR ds:0xda7396e2
  416039:	add    DWORD PTR [edx+0x3d14f211],ebp
  41603f:	jno    0x416040
  416041:	stos   BYTE PTR es:[edi],al
  416042:	bnd ja 0x415fe6
  416045:	out    0x50,al
  416047:	inc    ebx
  416048:	xor    eax,0x645e4d06
  41604d:	and    ebx,DWORD PTR [edx-0x3f46bbe1]
  416053:	mov    esi,DWORD PTR [ebx-0x2a]
  416056:	call   0x89ba:0x98c30192
  41605d:	sub    al,cl
  41605f:	push   ds
  416060:	or     eax,0x8f190203
  416065:	add    al,0x29
  416067:	inc    ecx
  416068:	(bad)  
  41606a:	loope  0x416078
  41606c:	ret    
  41606d:	mul    edi
  41606f:	cmc    
  416070:	sbb    ecx,DWORD PTR [ecx-0x3c]
  416073:	and    dh,al
  416075:	mov    al,0x89
  416077:	adc    eax,DWORD PTR ds:0x60fea115
  41607d:	cwde   
  41607e:	sbb    BYTE PTR [eax-0x11],cl
  416081:	mov    bh,0x7a
  416083:	mov    ch,ah
  416085:	push   0xffffff8f
  416087:	sub    DWORD PTR ds:0xb2f4f981,eax
  41608d:	push   eax
  41608e:	pop    ebp
  41608f:	rcr    al,0x4b
  416092:	inc    edi
  416093:	and    al,0x26
  416095:	and    DWORD PTR [esp+edx*8+0x2e866b5e],edx
  41609c:	mov    ch,0xf4
  41609e:	sbb    ah,BYTE PTR [eax+ebx*8-0x71]
  4160a2:	lods   al,BYTE PTR ds:[esi]
  4160a3:	add    al,0x89
  4160a5:	push   0x43
  4160a7:	arpl   WORD PTR [ebp-0x7a76873],di
  4160ad:	and    cl,dl
  4160af:	scas   eax,DWORD PTR es:[edi]
  4160b0:	jmp    0xd059482d
  4160b5:	shl    DWORD PTR [ecx],1
  4160b7:	fs clc 
  4160b9:	mov    ah,BYTE PTR [ecx-0x3c]
  4160bc:	(bad)  
  4160bd:	rol    bh,1
  4160bf:	jbe    0x4160bf
  4160c1:	sbb    eax,0xb5fea64d
  4160c6:	cmp    BYTE PTR [ecx+0x77d41717],dh
  4160cc:	pop    ds
  4160cd:	push   esi
  4160ce:	loop   0x4160aa
  4160d0:	pop    esp
  4160d1:	jg     0x4160d0
  4160d3:	scas   al,BYTE PTR es:[edi]
  4160d4:	hlt    
  4160d5:	sar    BYTE PTR [eax-0x7575580],0xb5
  4160dc:	sub    al,0x32
  4160de:	lea    ebp,[eax]
  4160e0:	idiv   DWORD PTR [eax+0x254c7d91]
  4160e6:	sub    esp,DWORD PTR [edx+0xb5f4f58]
  4160ec:	sub    al,0xb2
  4160ee:	sub    cl,BYTE PTR [ebp+0x40e79467]
  4160f4:	dec    eax
  4160f5:	mov    bl,0x6a
  4160f7:	ja     0x41615b
  4160f9:	ret    0x3cab
  4160fc:	or     dh,cl
  4160fe:	enter  0xef78,0x56
  416102:	mov    bl,0xf6
  416104:	les    edx,FWORD PTR [edi]
  416106:	in     eax,dx
  416107:	jmp    0x57e0:0x603da6b
  41610e:	mov    ebx,0x2d5102b1
  416113:	sbb    ebp,DWORD PTR [ecx]
  416115:	inc    ebx
  416116:	add    bh,BYTE PTR ds:0xbefc49d3
  41611c:	sub    dh,BYTE PTR [edi-0x29]
  41611f:	repnz into 
  416121:	xor    esp,0x72479a84
  416127:	shr    edi,1
  416129:	test   BYTE PTR [edx],bl
  41612b:	xchg   ecx,eax
  41612c:	pop    ecx
  41612d:	cmp    eax,0x6348bd84
  416132:	call   0xbc5224c1
  416137:	add    ecx,DWORD PTR [ecx+0x7]
  41613a:	hlt    
  41613b:	ins    BYTE PTR es:[edi],dx
  41613c:	dec    ecx
  41613d:	or     DWORD PTR [esi-0xe96a17a],ebx
  416143:	lea    ecx,[eax+0x79]
  416146:	dec    eax
  416147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416148:	xor    BYTE PTR [eax+0x7ae365d7],0xd4
  41614f:	fsub   st(3),st
  416151:	leave  
  416152:	push   esi
  416154:	xchg   ecx,eax
  416155:	in     al,dx
  416156:	jg     0x4160ff
  416158:	call   0x3cf3:0x33fcd27
  41615f:	(bad)  
  416160:	jmp    0x416167
  416162:	ins    DWORD PTR es:[edi],dx
  416163:	pop    es
  416164:	inc    ecx
  416165:	push   ss
  416166:	xlat   BYTE PTR ds:[ebx]
  416167:	cli    
  416168:	fs add ah,0x20
  41616c:	add    eax,0x50827e68
  416171:	mov    ds:0xc01dcb0f,al
  416176:	cmc    
  416177:	out    dx,al
  416178:	mov    ebp,DWORD PTR [eax+ebx*4-0x1a8126cd]
  41617f:	ins    BYTE PTR es:[edi],dx
  416180:	rol    DWORD PTR [ecx],cl
  416182:	jne    0x416104
  416184:	popf   
  416185:	and    edx,DWORD PTR [edx]
  416187:	aas    
  416188:	push   edi
  416189:	lea    ecx,[eax+0x27958544]
  41618f:	(bad)  
  416190:	pop    esp
  416191:	push   es
  416192:	ins    BYTE PTR es:[edi],dx
  416193:	or     BYTE PTR [esi+edi*4],ah
  416196:	xlat   BYTE PTR ds:[ebx]
  416197:	mov    eax,0xdcbf467e
  41619c:	out    dx,eax
  41619d:	shl    BYTE PTR [ecx+0x29d8679b],cl
  4161a3:	xchg   edi,eax
  4161a4:	sbb    eax,0x9651518f
  4161a9:	and    al,0x57
  4161ab:	dec    ebp
  4161ac:	pusha  
  4161ad:	mov    DWORD PTR [esi+0x5b],ecx
  4161b0:	dec    ebx
  4161b1:	push   0x78
  4161b3:	(bad)  
  4161b4:	adc    bh,BYTE PTR [eax+0x6]
  4161b7:	or     eax,0xa8fbcf46
  4161bc:	rol    DWORD PTR [edx+0x4753b3c1],0x81
  4161c3:	ja     0x41621a
  4161c5:	loop   0x4161da
  4161c7:	(bad)  
  4161c9:	mov    ebp,DWORD PTR [edx-0x3e27ee6d]
  4161cf:	pop    esi
  4161d0:	setne  BYTE PTR [eax-0x67]
  4161d4:	or     bh,bl
  4161d6:	jecxz  0x41623b
  4161d8:	outs   dx,BYTE PTR ds:[esi]
  4161d9:	cmc    
  4161da:	sahf   
  4161db:	add    esp,DWORD PTR [edi-0x64]
  4161de:	mov    dl,bl
  4161e0:	xchg   esp,eax
  4161e1:	popa   
  4161e2:	(bad)  
  4161e3:	dec    esi
  4161e4:	sub    dl,BYTE PTR [esi+0x267596cf]
  4161ea:	cmp    esi,esi
  4161ec:	inc    edi
  4161ed:	jg     0x41626d
  4161ef:	push   0x48e12756
  4161f4:	jb     0x41619d
  4161f6:	outs   dx,DWORD PTR ds:[esi]
  4161f7:	sub    al,0x68
  4161f9:	cwde   
  4161fa:	in     eax,dx
  4161fb:	out    dx,eax
  4161fc:	rol    dl,0xda
  4161ff:	inc    ebp
  416200:	clc    
  416201:	mov    dl,0x8
  416203:	lods   eax,DWORD PTR ds:[esi]
  416204:	cs into 
  416206:	pop    edi
  416207:	xchg   edi,eax
  416208:	sbb    eax,0xf9265bb2
  41620d:	loope  0x41625d
  41620f:	xchg   esp,eax
  416210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416211:	mov    ch,0xdb
  416213:	sbb    ch,BYTE PTR [ebx]
  416215:	jecxz  0x41628c
  416217:	mov    gs,ebx
  416219:	test   ebx,edx
  41621b:	and    bh,BYTE PTR [ecx-0x78]
  41621e:	test   BYTE PTR [esp+ebx*2-0x1a],bh
  416222:	out    0x89,al
  416224:	test   eax,0x358db81
  416229:	daa    
  41622a:	mov    eax,DWORD PTR [esi]
  41622c:	cmc    
  41622d:	out    dx,al
  41622e:	adc    DWORD PTR [ebp+0x3239035],esi
  416234:	(bad)  
  416235:	mov    edx,0x35bf394f
  41623a:	or     BYTE PTR [edx],cl
  41623c:	cmp    DWORD PTR [esi-0x59],ecx
  41623f:	test   cl,dh
  416241:	xchg   esi,eax
  416242:	mov    dl,0xc1
  416244:	jecxz  0x4161fc
  416246:	jl     0x4161e1
  416248:	test   dh,bh
  41624a:	jb     0x4162c7
  41624c:	pop    edx
  41624d:	aad    0x1f
  41624f:	push   0x995c4986
  416254:	jp     0x4161eb
  416256:	ret    
  416257:	jae    0x41623a
  416259:	lea    esp,[edx-0x32c81df8]
  41625f:	dec    edi
  416260:	test   BYTE PTR [edx-0x10],dh
  416263:	call   0xcfa8:0x932120da
  41626a:	mov    ebx,0x479c999c
  41626f:	and    BYTE PTR [edi-0x6af21a91],ah
  416275:	test   al,0x6d
  416277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416278:	outs   dx,DWORD PTR ds:[esi]
  416279:	mov    ebp,0x6c2c4216
  41627e:	cmp    ah,BYTE PTR [edx]
  416280:	cld    
  416281:	sbb    ecx,esp
  416283:	xor    DWORD PTR [edi+0x46],esi
  416286:	jne    0x41625e
  416288:	test   eax,0x2691c4c3
  41628d:	jo     0x416293
  41628f:	aam    0xc9
  416291:	iret   
  416292:	int3   
  416293:	sub    eax,0x5f543d9b
  416298:	cld    
  416299:	sbb    ecx,DWORD PTR [eax]
  41629b:	pop    ecx
  41629c:	pop    ss
  41629d:	mov    ds:0x65a176b6,eax
  4162a2:	sub    BYTE PTR [edx],bh
  4162a4:	adc    edx,edi
  4162a6:	rcr    BYTE PTR [eax+0xa983d9e],cl
  4162ac:	add    edx,edx
  4162ae:	cmc    
  4162af:	xchg   ebp,eax
  4162b0:	fs sub cl,bl
  4162b3:	cmp    edx,0x40c44f33
  4162b9:	mov    al,0xda
  4162bb:	cld    
  4162bc:	shl    esp,1
  4162be:	pop    esi
  4162bf:	sub    bh,ch
  4162c1:	pop    edx
  4162c2:	or     BYTE PTR [ebx+0x51a44481],bh
  4162c8:	mov    DWORD PTR [eax+0x25534b73],0x49c88d1a
  4162d2:	pop    esp
  4162d3:	or     ebx,DWORD PTR [eax*4-0x16798eb0]
  4162da:	stos   BYTE PTR es:[edi],al
  4162db:	nop
  4162dc:	ret    0xb32a
  4162df:	sub    al,0x76
  4162e1:	lds    edi,FWORD PTR [esi]
  4162e3:	ja     0x4162a8
  4162e5:	repz adc dh,cl
  4162e8:	add    al,0x2f
  4162ea:	cli    
  4162eb:	jno    0x4162e5
  4162ed:	cdq    
  4162ee:	cmp    BYTE PTR [ebp+0x3f],bl
  4162f1:	add    BYTE PTR [eax],ah
  4162f3:	push   cs
  4162f4:	xchg   esi,eax
  4162f5:	test   DWORD PTR [edi-0x3c4705fc],esp
  4162fb:	lea    ebx,[ecx-0xc158beb]
  416301:	mov    eax,ds:0x1e2f9298
  416306:	and    edx,DWORD PTR [ebp+ebx*1+0x77]
  41630a:	mov    edx,0x14d841e1
  41630f:	rcr    BYTE PTR [ecx],0xc9
  416312:	hlt    
  416313:	aam    0xa5
  416315:	push   edx
  416316:	(bad)  
  416317:	imul   edx,edx,0x51
  41631a:	jmp    0x1044:0x2bfd139f
  416321:	arpl   WORD PTR [esi-0x76],si
  416324:	das    
  416325:	mov    cs,edx
  416327:	fsubr  QWORD PTR [bx+si+0x3fbb]
  41632c:	push   ecx
  41632d:	rcl    edi,1
  41632f:	and    al,0xeb
  416331:	arpl   WORD PTR [edi-0x9],sp
  416334:	adc    al,0x3b
  416336:	mov    edx,0x67c607f6
  41633b:	add    eax,0xfad0ec88
  416340:	or     bl,BYTE PTR [edx+0xa6d5c08]
  416346:	inc    edx
  416347:	jnp    0x4162fb
  416349:	push   es
  41634a:	into   
  41634b:	daa    
  41634c:	cmp    eax,0xffffff8f
  41634f:	mov    eax,0xb78f72f7
  416354:	mov    edx,0xe95b59b8
  416359:	xor    eax,ebx
  41635b:	push   ds
  41635c:	mov    ds:0x2b904153,eax
  416361:	mov    bl,0xe7
  416363:	push   ebp
  416364:	xor    al,BYTE PTR [edi+ebx*4+0x6c]
  416368:	sbb    al,0x8d
  41636a:	ds test eax,0xca9602dc
  416370:	adc    eax,0xe9c77567
  416375:	in     al,dx
  416376:	out    0x92,eax
  416378:	pusha  
  416379:	lds    ebx,FWORD PTR [edi+0x7d145ef5]
  41637f:	mov    DWORD PTR [ebx],esp
  416381:	test   BYTE PTR [ebx-0x66660f15],dh
  416387:	pop    edx
  416388:	aam    0x11
  41638a:	pop    eax
  41638b:	jno    0x4163e4
  41638d:	xchg   cl,al
  41638f:	mov    DWORD PTR [ebp+0x79],ecx
  416392:	add    DWORD PTR [ebp-0x12],ebx
  416395:	dec    ebx
  416396:	jne    0x416402
  416398:	inc    ecx
  416399:	pop    ebp
  41639a:	dec    eax
  41639b:	mov    eax,ds:0x4ccf5aa2
  4163a0:	das    
  4163a1:	shl    BYTE PTR [ebp-0x64],cl
  4163a4:	add    ecx,DWORD PTR [ebx+0x73801c25]
  4163aa:	test   al,0x50
  4163ac:	stc    
  4163ad:	add    BYTE PTR [eax-0x69],dl
  4163b0:	adc    eax,0xd782894e
  4163b5:	mov    edx,0xc2eb64e1
  4163ba:	sbb    cl,BYTE PTR [ebx]
  4163bc:	jo     0x4163f5
  4163be:	push   esp
  4163bf:	les    eax,FWORD PTR [edx]
  4163c1:	into   
  4163c2:	arpl   WORD PTR [ebx+0x3c753a25],si
  4163c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c9:	jg     0x4163ba
  4163cb:	mov    edx,0xf7e5f4fd
  4163d0:	sar    BYTE PTR [ecx+eiz*1+0x1],0xc6
  4163d5:	(bad)  
  4163d6:	fiadd  WORD PTR [eax]
  4163d8:	add    al,bh
  4163da:	add    al,0x0
  4163dc:	add    BYTE PTR [ebx+eax*8-0x1f],dh
  4163e0:	imul   BYTE PTR [ebx+eax*2]
  4163e3:	jl     0x416441
  4163e5:	xor    DWORD PTR [edx+ecx*8+0x12],ecx
  4163e9:	pop    esp
  4163ea:	push   eax
  4163eb:	imul   ebx,DWORD PTR [esi+edi*8+0x50],0x66
  4163f0:	outs   dx,DWORD PTR ds:[esi]
  4163f1:	fwait
  4163f2:	xor    ebp,DWORD PTR [edx]
  4163f4:	and    DWORD PTR ds:0x33075cb1,edx
  4163fa:	in     al,0xe1
  4163fc:	jne    0x41641e
  4163fe:	ja     0x4163d3
  416400:	fisttp QWORD PTR [ebp-0x6a6030ba]
  416406:	retf   
  416407:	cmp    al,0x4a
  416409:	ins    BYTE PTR es:[edi],dx
  41640a:	jmp    0x32d2:0xb1a7d2d5
  416411:	in     al,0x12
  416413:	mul    bh
  416415:	sub    dl,BYTE PTR [edi-0x50]
  416418:	out    dx,al
  416419:	push   0xffffff80
  41641b:	dec    cx
  41641d:	adc    BYTE PTR [esi],ah
  41641f:	lods   al,BYTE PTR ds:[esi]
  416420:	jge    0x416418
  416422:	xchg   ecx,eax
  416423:	test   BYTE PTR [edx+0x2f18be1c],dh
  416429:	inc    ebx
  41642a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41642b:	jne    0x4163c6
  41642d:	out    dx,eax
  41642e:	xchg   cl,ah
  416430:	push   ss
  416431:	xlat   BYTE PTR ds:[ebx]
  416432:	(bad)
  416436:	cli    
  416437:	sahf   
  416438:	clc    
  416439:	fmul   DWORD PTR [ecx+eax*1]
  41643c:	sub    edx,DWORD PTR [edx+edi*2]
  41643f:	test   eax,0x34b301ca
  416444:	nop
  416445:	dec    edx
  416446:	fadd   DWORD PTR [edi+0xe]
  416449:	adc    bh,ah
  41644b:	adc    ebp,DWORD PTR [esi]
  41644d:	out    0x8f,eax
  41644f:	test   eax,0x7f916839
  416454:	inc    ebx
  416455:	jl     0x41641b
  416457:	adc    al,0x32
  416459:	jno    0x416416
  41645b:	pop    esi
  41645c:	jecxz  0x416402
  41645e:	fwait
  41645f:	mov    eax,ds:0xefc6b976
  416464:	xchg   edx,eax
  416465:	int    0x37
  416467:	leave  
  416468:	lds    edx,FWORD PTR [ebx+0x11def480]
  41646e:	add    ecx,DWORD PTR [edi-0x5a]
  416471:	iret   
  416472:	fucomip st,st(2)
  416474:	cmp    bl,0x4e
  416477:	mov    bl,0x1c
  416479:	or     edi,edi
  41647b:	dec    edi
  41647c:	(bad)  
  41647e:	ret    0xdca9
  416481:	test   al,0x1d
  416483:	es dec ebx
  416485:	inc    ebp
  416486:	push   ebp
  416487:	cwde   
  416488:	sub    eax,0xc1907049
  41648d:	lds    esp,FWORD PTR [ebp+0x6a3c0cd6]
  416493:	adc    eax,0x26eb0cac
  416498:	ret    
  416499:	cmp    ecx,DWORD PTR [eax]
  41649b:	inc    esp
  41649c:	das    
  41649d:	inc    eax
  41649e:	dec    ebp
  41649f:	jle    0x416449
  4164a1:	arpl   WORD PTR [esi+ecx*8],bx
  4164a4:	jg     0x41648a
  4164a6:	scas   al,BYTE PTR es:[edi]
  4164a7:	jl     0x4164c6
  4164a9:	xchg   ebx,eax
  4164aa:	(bad)  
  4164ac:	xchg   BYTE PTR ds:0x4b91390,bh
  4164b2:	add    cl,0xc2
  4164b5:	mov    edi,cs
  4164b7:	std    
  4164b8:	jmp    0x41651f
  4164ba:	jp     0x416509
  4164bc:	mov    ds:0x197c6ee4,eax
  4164c1:	lock add BYTE PTR [edi+esi*4],bl
  4164c5:	jae    0x416470
  4164c7:	scas   eax,DWORD PTR es:[edi]
  4164c8:	into   
  4164c9:	cmp    cl,dl
  4164cb:	stc    
  4164cc:	inc    ebx
  4164cd:	jl     0x4164be
  4164cf:	push   ebx
  4164d0:	push   esi
  4164d1:	cwde   
  4164d2:	sbb    ebp,0xffffffc8
  4164d5:	jae    0x416538
  4164d7:	mov    bh,BYTE PTR [ebp+0x14]
  4164da:	neg    bl
  4164dc:	neg    BYTE PTR [edx+0x47bc399a]
  4164e2:	sbb    dl,dh
  4164e4:	push   ebp
  4164e5:	and    esi,DWORD PTR [ecx]
  4164e7:	pop    esp
  4164e8:	das    
  4164e9:	outs   dx,BYTE PTR ds:[esi]
  4164ea:	adc    al,0x0
  4164ec:	mov    dh,0x5f
  4164ee:	or     BYTE PTR [esp+edx*8],ah
  4164f1:	cmp    esi,DWORD PTR ds:0xb91f1dac
  4164f7:	mov    ds:0x4d2a4291,eax
  4164fc:	jbe    0x416538
  4164fe:	lock and ecx,DWORD PTR [eax+0x22]
  416502:	shr    BYTE PTR [esi],1
  416504:	and    eax,0x11915877
  416509:	sahf   
  41650a:	inc    esp
  41650b:	pushf  
  41650c:	inc    esi
  41650d:	enter  0x72f8,0x72
  416511:	cmp    ah,0xca
  416514:	lds    ebp,FWORD PTR [esi-0x45]
  416517:	mov    ?,WORD PTR [eax+edi*4+0x3eacbf6f]
  41651e:	cmp    ch,al
  416520:	inc    esp
  416521:	rcr    ebp,cl
  416523:	xchg   edx,eax
  416524:	push   cs
  416525:	clc    
  416526:	ja     0x416514
  416528:	pop    es
  416529:	sub    BYTE PTR [ebx],dl
  41652b:	arpl   WORD PTR [ecx+0x62a0c97e],bp
  416531:	fdivp  st(6),st
  416533:	aas    
  416534:	mov    WORD PTR [ebp+0x7c],cs
  416537:	ja     0x416516
  416539:	mov    bh,0xd1
  41653b:	mov    esi,0x485a0d51
  416540:	ja     0x41651c
  416542:	ins    BYTE PTR es:[edi],dx
  416543:	or     edi,esp
  416545:	push   ebp
  416546:	xchg   ebx,eax
  416547:	pop    ecx
  416548:	pop    ebp
  416549:	test   eax,0x9be0e13b
  41654e:	jae    0x416566
  416550:	mov    edi,0x3871dd80
  416555:	test   eax,0xefa4c0d8
  41655a:	pop    esi
  41655b:	fsubp  st(6),st
  41655d:	mov    ebx,DWORD PTR [ecx+0x11a089dd]
  416563:	das    
  416564:	jnp    0x4164fb
  416566:	adc    ch,BYTE PTR [eax-0x25]
  416569:	inc    ebx
  41656a:	(bad)  
  41656b:	rcr    edx,1
  41656d:	int    0x94
  41656f:	inc    edi
  416570:	pop    ecx
  416571:	das    
  416572:	mov    edx,0x93470064
  416577:	xchg   BYTE PTR [ecx-0xb],cl
  41657a:	pop    edi
  41657b:	sub    DWORD PTR [ecx+0x5c580084],ebx
  416581:	ret    
  416582:	pop    esi
  416583:	pop    esi
  416584:	xor    edi,DWORD PTR es:[ecx]
  416587:	inc    esi
  416588:	ficomp WORD PTR [esi+0xa5076f0]
  41658e:	enter  0x660c,0x5b
  416592:	dec    edx
  416593:	out    0xc6,eax
  416595:	stos   BYTE PTR es:[edi],al
  416596:	xchg   esi,eax
  416597:	sti    
  416598:	sub    dh,BYTE PTR [ecx]
  41659a:	adc    al,0x9b
  41659c:	out    0x23,al
  41659e:	jmp    0x5784:0xc184a9ba
  4165a5:	jmp    0x1953:0x694eeced
  4165ac:	jb     0x41656f
  4165ae:	aam    0xf8
  4165b0:	unpcklps xmm2,XMMWORD PTR [ecx-0x1]
  4165b4:	or     BYTE PTR [esi-0x4d],0xe8
  4165b8:	int    0xc3
  4165ba:	icebp  
  4165bb:	(bad)  
  4165bc:	(bad)  
  4165bd:	int    0x14
  4165bf:	shr    BYTE PTR [ebx-0x61],cl
  4165c2:	rcl    BYTE PTR [ebx],1
  4165c4:	or     ch,dl
  4165c6:	dec    ebx
  4165c7:	mov    edx,0xe01c5595
  4165cc:	sbb    BYTE PTR [eax-0xa],0x8b
  4165d0:	inc    esi
  4165d1:	test   DWORD PTR [ebx+0x1df7f924],ebx
  4165d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165d8:	loop   0x4165f1
  4165da:	mov    WORD PTR [ebx+0x4fce503b],cs
  4165e0:	loope  0x416655
  4165e2:	jle    0x41662e
  4165e4:	sbb    DWORD PTR [ecx+0x75bd3671],ebp
  4165ea:	lea    esi,[ecx]
  4165ec:	iret   
  4165ed:	mov    esp,0x4998f846
  4165f2:	jecxz  0x4165c3
  4165f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165f5:	pop    ebp
  4165f6:	int3   
  4165f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165f8:	jl     0x41661b
  4165fa:	in     al,0x58
  4165fc:	loope  0x4165d4
  4165fe:	dec    edi
  4165ff:	bound  edi,QWORD PTR [edx]
  416601:	push   0x2a9ae0bc
  416606:	sub    ebp,DWORD PTR [eax]
  416608:	mov    ah,0x17
  41660a:	jmp    0x2ec16558
  41660f:	ss inc eax
  416611:	dec    esp
  416612:	xchg   ebp,eax
  416613:	stc    
  416614:	adc    DWORD PTR [ecx],ebx
  416616:	adc    dh,ch
  416618:	ss ss ins DWORD PTR es:[edi],dx
  41661b:	push   esp
  41661c:	xor    al,0x43
  41661e:	mov    ebp,ecx
  416620:	scas   al,BYTE PTR es:[edi]
  416621:	loopne 0x416606
  416623:	fldenv [esi-0x5f]
  416626:	pop    esp
  416627:	dec    edi
  416628:	lock mov ecx,0xf77932b7
  41662e:	and    al,0x4b
  416630:	cli    
  416631:	out    dx,al
  416632:	mov    esi,0x2c12e5ab
  416637:	push   edx
  416638:	imul   eax,DWORD PTR [edx],0x20
  41663b:	lahf   
  41663c:	pop    esi
  41663d:	js     0x416664
  41663f:	aas    
  416640:	add    DWORD PTR [eax+0x21],eax
  416643:	sub    al,0x52
  416645:	mov    dl,0x7c
  416647:	add    eax,0x4c19e205
  41664c:	(bad)  
  41664d:	aam    0xc
  41664f:	mov    edx,0x5e4bbdcc
  416654:	in     eax,0xed
  416656:	jmp    0x416636
  416658:	test   ebx,ebx
  41665a:	test   ch,0x8
  41665d:	pop    esi
  41665e:	jo     0x416673
  416660:	rol    esi,1
  416662:	enter  0xc069,0x39
  416666:	and    esp,ecx
  416668:	dec    esp
  416669:	aam    0xea
  41666b:	aam    0x5b
  41666d:	inc    edx
  41666e:	pop    esp
  41666f:	xor    dl,BYTE PTR [ecx+eiz*1]
  416672:	bound  ebx,QWORD PTR [edi-0xe295734]
  416678:	sbb    al,0x79
  41667a:	ds mov edx,0x1d193ed
  416680:	sbb    dh,BYTE PTR [ebx]
  416682:	xchg   esp,eax
  416683:	pusha  
  416684:	das    
  416685:	mov    gs,WORD PTR [esi+0x63a90898]
  41668b:	xor    al,0xb
  41668d:	into   
  41668e:	xlat   BYTE PTR ds:[ebx]
  41668f:	mov    bh,0x10
  416691:	xchg   DWORD PTR [ecx+ecx*4],ecx
  416694:	ss xor BYTE PTR ds:[edx],dl
  416698:	add    eax,0xd31343d3
  41669d:	ror    DWORD PTR [edi+0x2e],1
  4166a0:	push   ss
  4166a1:	and    eax,0x446b4495
  4166a6:	add    al,0x99
  4166a8:	dec    edi
  4166a9:	int    0xce
  4166ab:	sahf   
  4166ac:	nop
  4166ad:	int3   
  4166ae:	out    0x12,eax
  4166b0:	add    ebp,ecx
  4166b2:	inc    esp
  4166b3:	cwde   
  4166b4:	dec    ecx
  4166b5:	ret    
  4166b6:	jmp    0xae26bc8f
  4166bb:	or     eax,0x3d4a41a2
  4166c0:	sub    al,0x8a
  4166c2:	and    bh,BYTE PTR [edx+ecx*8]
  4166c5:	adc    eax,0x1d45b042
  4166ca:	push   cs
  4166cb:	cmp    dl,BYTE PTR [edx+esi*2+0x5cee9cda]
  4166d2:	data16 ror cl,1
  4166d5:	mov    edx,fs
  4166d7:	test   al,0x18
  4166d9:	fist   WORD PTR [edi-0x63]
  4166dc:	pop    ecx
  4166dd:	sbb    al,0x4
  4166df:	sar    ecx,0xf5
  4166e2:	lods   eax,DWORD PTR ds:[esi]
  4166e3:	ret    
  4166e4:	int    0x9d
  4166e6:	aaa    
  4166e7:	sbb    BYTE PTR [esi+0x7b],0x55
  4166eb:	and    eax,0x2e24e5ad
  4166f0:	sub    esp,DWORD PTR [ebp-0x4fd8ed46]
  4166f6:	rol    DWORD PTR [edx+ecx*1+0x7c6971e4],cl
  4166fd:	mov    edi,0x6093401a
  416702:	mov    ch,0xa
  416704:	pop    ebx
  416705:	in     eax,0x92
  416707:	into   
  416708:	aad    0x35
  41670a:	fwait
  41670b:	mov    ds:0xc5bd90d8,eax
  416710:	pop    es
  416711:	add    edx,DWORD PTR [ebx]
  416713:	(bad)  
  416714:	rcr    DWORD PTR [edi],1
  416716:	(bad)  
  416717:	ss pop ebx
  416719:	or     dl,BYTE PTR [ebx-0x5480a9ed]
  41671f:	jecxz  0x416780
  416721:	or     eax,DWORD PTR [edx+0x6c]
  416724:	lods   eax,DWORD PTR ds:[esi]
  416725:	in     eax,dx
  416726:	hlt    
  416727:	in     eax,dx
  416728:	cmc    
  416729:	arpl   WORD PTR [edi],ax
  41672b:	add    esi,eax
  41672d:	(bad)  
  41672e:	outs   dx,BYTE PTR ds:[esi]
  41672f:	xchg   edi,eax
  416730:	hlt    
  416731:	adc    cl,ah
  416733:	(bad)  
  416734:	aas    
  416735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416736:	jge    0x41679b
  416738:	dec    esp
  416739:	mov    ds:0xb6355276,eax
  41673e:	jbe    0x416754
  416740:	test   dl,ch
  416742:	(bad)  
  416743:	rcr    BYTE PTR [eax],0x28
  416746:	adc    BYTE PTR [ebx+0x769b0dc7],0x91
  41674d:	cmp    eax,0xf94929cd
  416752:	sbb    eax,0x6019332b
  416757:	int    0x39
  416759:	ins    BYTE PTR es:[edi],dx
  41675a:	jo     0x416758
  41675c:	cmp    ecx,ebx
  41675e:	test   DWORD PTR [eax],edi
  416760:	mov    dh,0xce
  416762:	push   eax
  416763:	cmp    bl,BYTE PTR [ecx-0x38b96b65]
  416769:	add    eax,0x80022961
  41676e:	inc    DWORD PTR [ebp+0x5]
  416771:	jmp    0x416767
  416773:	push   eax
  416774:	rol    DWORD PTR cs:[ecx],0xad
  416778:	adc    eax,0xd0d60782
  41677d:	sbb    eax,0xb66e4339
  416782:	jmp    DWORD PTR [eax+0x3c11b123]
  416788:	pop    esi
  416789:	jecxz  0x416735
  41678b:	xor    ch,BYTE PTR [ecx+ebx*4+0x14]
  41678f:	xchg   BYTE PTR [ebx+ecx*2],bh
  416792:	xor    edi,DWORD PTR [esi+ebx*2]
  416795:	push   0xffffffbf
  416797:	(bad)  
  416798:	xchg   esi,eax
  416799:	jg     0x4167cb
  41679b:	das    
  41679c:	mov    cl,0x99
  41679e:	loop   0x41681e
  4167a0:	mov    esi,DWORD PTR [eax+0x7a]
  4167a3:	jmp    0x779be4bd
  4167a8:	outs   dx,DWORD PTR ds:[esi]
  4167a9:	aas    
  4167aa:	fcomp  DWORD PTR es:[ebx+0x10]
  4167ae:	cmp    BYTE PTR [edi*4-0x2cf8ae3c],0x78
  4167b6:	inc    ecx
  4167b7:	dec    eax
  4167b8:	and    DWORD PTR [ebp+0x7],esi
  4167bb:	pop    esp
  4167bc:	nop
  4167bd:	push   es
  4167be:	inc    esi
  4167bf:	rcl    dh,cl
  4167c1:	mov    ch,0xb3
  4167c3:	js     0x416797
  4167c5:	add    dl,0x9d
  4167c8:	pusha  
  4167c9:	retf   0xe928
  4167cc:	pop    ds
  4167cd:	xchg   ebp,eax
  4167ce:	test   BYTE PTR [edi+0x7],cl
  4167d1:	popf   
  4167d2:	scas   al,BYTE PTR es:[edi]
  4167d3:	mov    dh,0xf0
  4167d5:	sub    al,0x30
  4167d7:	jne    0x4167f0
  4167d9:	jecxz  0x416807
  4167db:	jg     0x416823
  4167dd:	std    
  4167de:	scas   al,BYTE PTR es:[edi]
  4167df:	push   esi
  4167e0:	mov    al,0xda
  4167e2:	stos   BYTE PTR es:[edi],al
  4167e3:	dec    edx
  4167e4:	(bad)  
  4167e5:	bound  esp,QWORD PTR [ebp+0x22fff40f]
  4167eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ed:	stos   BYTE PTR es:[edi],al
  4167ee:	lock jmp 0xec20071
  4167f4:	xchg   ebx,eax
  4167f5:	ins    BYTE PTR es:[edi],dx
  4167f6:	hlt    
  4167f7:	push   0x50
  4167f9:	(bad)  
  4167fa:	fdivr  DWORD PTR [ebp-0x45]
  4167fd:	xchg   ebx,eax
  4167fe:	mov    cl,0x77
  416800:	mov    BYTE PTR [ebp+0x2e],al
  416803:	int    0x29
  416805:	lock inc esi
  416807:	sub    ch,BYTE PTR [esi+0x3ab56fe1]
  41680d:	inc    eax
  41680e:	mov    dl,BYTE PTR [esi+0x2180e5f9]
  416814:	jg     0x416814
  416816:	rol    BYTE PTR [ebp+0xf],1
  416819:	je     0x41684c
  41681b:	mov    dl,0x78
  41681d:	loope  0x416886
  41681f:	sub    dh,BYTE PTR [eax+0xc400863]
  416825:	pop    esp
  416826:	push   edx
  416827:	jle    0x4167fb
  416829:	xchg   edx,eax
  41682a:	psrlw  mm0,mm5
  41682d:	repnz imul ebp,DWORD PTR [edi+eax*1-0x1806bf16],0x5453de44
  416839:	xchg   edi,eax
  41683a:	and    dh,BYTE PTR [ecx]
  41683c:	mov    ah,0x10
  41683e:	mov    edx,ss
  416840:	cmp    bl,BYTE PTR [edx+eax*1+0x47]
  416844:	mov    esp,0x6b29e6a0
  416849:	add    dl,bl
  41684b:	in     al,dx
  41684c:	in     eax,dx
  41684d:	jae    0x41681d
  41684f:	jns    0x4168cb
  416851:	xchg   edx,eax
  416852:	pop    es
  416853:	(bad)  [edi]
  416855:	int    0x9c
  416857:	push   0x1c4a4f5a
  41685c:	out    0x67,al
  41685e:	xor    eax,0x2b40bb35
  416863:	pop    esi
  416864:	lods   al,BYTE PTR ds:[esi]
  416865:	loope  0x4167e8
  416867:	lds    esp,FWORD PTR [eax+0x55f8f1b9]
  41686d:	sub    eax,ebp
  41686f:	stc    
  416870:	out    dx,al
  416871:	pop    esi
  416872:	icebp  
  416873:	mov    esi,0xc6c6d49
  416878:	jmp    0x4168a5
  41687a:	int    0x84
  41687c:	mov    ecx,0x2ae75106
  416881:	lods   eax,DWORD PTR ds:[esi]
  416882:	and    bh,BYTE PTR [eax-0x1372ce47]
  416888:	jmp    0x4168bf
  41688a:	add    eax,0x2595df49
  41688f:	in     eax,dx
  416890:	stos   DWORD PTR es:[edi],eax
  416891:	fs cmp edi,esp
  416894:	jg     0x416875
  416896:	pop    es
  416897:	popa   
  416898:	fldcw  WORD PTR [esi+0x68]
  41689b:	sahf   
  41689c:	add    al,0x39
  41689e:	cs pop edi
  4168a0:	ficom  DWORD PTR ds:0x5122e7d3
  4168a6:	sub    esp,0xba01c58
  4168ac:	add    BYTE PTR [esi+0x472d25d7],ch
  4168b2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b4:	dec    eax
  4168b5:	xchg   edi,eax
  4168b6:	mov    al,dl
  4168b8:	imul   ecx,DWORD PTR [ebx-0x3658e00b],0x4b
  4168bf:	dec    edx
  4168c0:	ret    0x2508
  4168c3:	test   eax,ebx
  4168c5:	gs enter 0x6cef,0x30
  4168ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168cb:	test   al,0x60
  4168cd:	test   al,0x1a
  4168cf:	jmp    0x7768444f
  4168d4:	dec    esp
  4168d5:	clc    
  4168d6:	pminsw mm6,QWORD PTR [edi-0x1]
  4168da:	idiv   ebp
  4168dc:	(bad)  
  4168dd:	aad    0x6c
  4168df:	push   ebx
  4168e0:	(bad)  
  4168e1:	jne    0x41688c
  4168e3:	jbe    0x416958
  4168e5:	test   ebx,esp
  4168e7:	add    BYTE PTR [eax],al
  4168e9:	clc    
  4168ea:	add    al,0x0
  4168ec:	add    dh,bl
  4168ee:	scas   eax,DWORD PTR es:[edi]
  4168ef:	dec    edx
  4168f0:	jmp    0x60cf88c
  4168f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f6:	test   eax,0xc1aaad02
  4168fb:	jecxz  0x41696d
  4168fd:	(bad)  
  4168fe:	sqrtps xmm1,XMMWORD PTR [eax+0x16e1dff5]
  416905:	add    ebp,DWORD PTR [eax-0x1e]
  416908:	aaa    
  416909:	or     DWORD PTR [ebx],0x3
  41690c:	push   eax
  41690d:	xor    al,dl
  41690f:	ins    DWORD PTR es:[edi],dx
  416910:	loopne 0x4168fd
  416912:	cmp    DWORD PTR [edx+ecx*8-0x698c10fd],edx
  416919:	mov    fs,ebx
  41691b:	jge    0x4168bb
  41691d:	in     eax,0xd5
  41691f:	sub    DWORD PTR [esi+0xdc3b557],ecx
  416925:	push   ebp
  416926:	(bad)  
  416927:	jb     0x41697f
  416929:	and    DWORD PTR [edx],ecx
  41692b:	shl    edi,cl
  41692d:	imul   edx,DWORD PTR [edx+0x2e],0x85533c8f
  416934:	add    DWORD PTR [esi-0xf68eae4],eax
  41693a:	lock cmp esi,DWORD PTR [edi+0x3374aafa]
  416941:	sbb    eax,edi
  416943:	xor    DWORD PTR [ebp-0x2c],eax
  416946:	xchg   edx,eax
  416947:	dec    ebp
  416948:	jns    0x41694f
  41694a:	inc    edi
  41694b:	retf   
  41694c:	dec    edi
  41694d:	pop    es
  41694e:	frstorw [esi+ebx*1+0x70]
  416953:	jmp    0x416957
  416955:	rol    DWORD PTR [esi-0x5d],1
  416958:	cmp    DWORD PTR [ebp+0x74366f38],0x796cb4d6
  416962:	addps  xmm6,XMMWORD PTR ds:0x4ec1033f
  416969:	and    DWORD PTR [ecx-0x682b728e],0x3e
  416970:	jmp    0x41691f
  416972:	fwait
  416973:	add    BYTE PTR [esi-0x2d875f06],bl
  416979:	add    edi,DWORD PTR [ebx-0x38c86205]
  41697f:	jmp    0x416992
  416981:	pop    bp
  416983:	clc    
  416984:	xchg   edi,eax
  416985:	fmul   QWORD PTR [ecx]
  416987:	sbb    DWORD PTR [esi+0x15],esi
  41698a:	(bad)
  41698d:	or     dl,0x13
  416990:	push   es
  416991:	pop    ebx
  416992:	inc    ebx
  416993:	xor    eax,0x2dacf8af
  416998:	add    eax,0x22d738a6
  41699d:	sti    
  41699e:	cmp    eax,0x3dbe431a
  4169a3:	mov    ch,0x2c
  4169a5:	std    
  4169a6:	aad    0xfe
  4169a8:	in     al,dx
  4169a9:	iret   
  4169aa:	mov    al,ds:0x990baafc
  4169af:	arpl   WORD PTR [ebx+edi*8],ax
  4169b2:	lods   al,BYTE PTR ds:[esi]
  4169b3:	mov    ah,BYTE PTR [ebx+0x45]
  4169b6:	data16 (bad) 
  4169b8:	test   DWORD PTR [esi+0x3f],0x3e2469a9
  4169bf:	test   DWORD PTR [ebx],edx
  4169c1:	je     0x4169a5
  4169c3:	inc    edi
  4169c4:	sub    al,0x96
  4169c6:	push   ds
  4169c7:	push   ds
  4169c8:	out    dx,al
  4169c9:	(bad)  
  4169ca:	sbb    DWORD PTR [edi+0x318ea634],edi
  4169d0:	aas    
  4169d1:	push   ss
  4169d2:	fisttp WORD PTR [ebp+0x354a48ba]
  4169d8:	lea    edx,ds:0x4ab065c0
  4169de:	adc    ah,dh
  4169e0:	xchg   ecx,eax
  4169e1:	mov    dh,0xb8
  4169e3:	or     esp,DWORD PTR [esi+0x3]
  4169e6:	arpl   WORD PTR [ebx+0x68c6514f],dx
  4169ec:	jmp    0x4169f7
  4169ee:	sub    dh,0x29
  4169f1:	mov    cl,0x5c
  4169f3:	mov    ebx,0x463ae368
  4169f8:	sub    eax,0x5d417c22
  4169fd:	vcvtsi2sd xmm4,xmm7,DWORD PTR [eax-0x606d135e]
  416a05:	rol    BYTE PTR [edx+0x41301080],1
  416a0b:	imul   eax,DWORD PTR [ebp-0x5711770f],0x4d0a2cd4
  416a15:	pop    ss
  416a16:	jle    0x4169f8
  416a18:	int3   
  416a19:	inc    ebp
  416a1a:	xor    DWORD PTR [ebp+0x3c45c5db],ebp
  416a20:	ja     0x416a63
  416a22:	sar    bl,0x18
  416a25:	(bad)  
  416a27:	(bad)  
  416a28:	je     0x416a8e
  416a2a:	out    dx,eax
  416a2b:	mov    DWORD PTR [edi-0x7f],ebx
  416a2e:	mov    bl,0xd
  416a30:	outs   dx,BYTE PTR fs:[esi]
  416a32:	pop    esp
  416a33:	inc    esi
  416a34:	mov    BYTE PTR [eax],al
  416a36:	push   ebp
  416a37:	pop    ebx
  416a38:	dec    edi
  416a39:	push   DWORD PTR [edi+0x17]
  416a3c:	stos   DWORD PTR es:[edi],eax
  416a3d:	or     BYTE PTR [eax+ebx*4-0x43],al
  416a41:	ins    DWORD PTR es:[edi],dx
  416a42:	hlt    
  416a43:	jbe    0x416aba
  416a45:	sbb    dl,al
  416a47:	loope  0x416a0d
  416a49:	pushf  
  416a4a:	jae    0x416a30
  416a4c:	inc    ebx
  416a4d:	push   0xffffff91
  416a4f:	pop    ebp
  416a50:	and    esi,DWORD PTR [ecx-0x2627c7e0]
  416a56:	mov    esi,0x70e29ea4
  416a5b:	inc    ebp
  416a5c:	mov    cl,0x18
  416a5e:	iret   
  416a5f:	(bad)  
  416a60:	jmp    0xd7294860
  416a65:	or     DWORD PTR [edx-0x45],eax
  416a68:	aaa    
  416a69:	sub    DWORD PTR [esi+0x48],esp
  416a6c:	push   0xffffff96
  416a6e:	in     al,dx
  416a6f:	dec    edx
  416a70:	jbe    0x4169fc
  416a72:	lea    esp,[esi+0x9]
  416a75:	mov    edi,0x8872ced0
  416a7a:	pop    es
  416a7b:	dec    edx
  416a7c:	or     DWORD PTR [edx+0x56],edi
  416a7f:	add    eax,0x4993d481
  416a84:	call   0x872d8cf8
  416a89:	or     al,0x32
  416a8b:	mov    edx,0xf7ab68f7
  416a90:	in     eax,0xaf
  416a92:	mov    ebx,esp
  416a94:	rcr    al,1
  416a96:	icebp  
  416a97:	mov    esi,DWORD PTR [edx-0x32a9aabf]
  416a9d:	call   0x3c2e:0xd6f922a7
  416aa4:	out    0x5c,eax
  416aa6:	std    
  416aa7:	jmp    0xf74d:0xc2f00bdd
  416aae:	xor    bl,BYTE PTR [ebx-0x40]
  416ab1:	(bad)
  416ab4:	(bad)
  416ab7:	ins    BYTE PTR es:[edi],dx
  416ab8:	adc    DWORD PTR [ebx+eiz*8+0x125844b9],esi
  416abf:	sbb    cl,ch
  416ac1:	add    DWORD PTR [esi-0x7e177bc1],edi
  416ac7:	out    dx,eax
  416ac8:	mov    ebx,edx
  416aca:	mov    edi,0x59e0a1a3
  416acf:	out    dx,eax
  416ad0:	into   
  416ad1:	fnstenv [esi]
  416ad3:	pop    edi
  416ad4:	add    DWORD PTR [eax],0xffffff88
  416ad7:	mov    ch,0x87
  416ad9:	sahf   
  416ada:	mov    al,ds:0x9b651474
  416adf:	jbe    0x416b05
  416ae1:	pop    esp
  416ae2:	or     al,0xd6
  416ae4:	test   DWORD PTR [ebx+eiz*1+0x70],ebx
  416ae8:	test   al,0x40
  416aea:	inc    eax
  416aeb:	shl    DWORD PTR [ebx+0x44efea26],cl
  416af1:	pop    ebp
  416af2:	add    eax,edi
  416af4:	xor    al,0x62
  416af6:	clc    
  416af7:	pop    esp
  416af8:	clc    
  416af9:	dec    ecx
  416afa:	sti    
  416afb:	sar    BYTE PTR [ebp+0x494e7887],1
  416b01:	jmp    0xddc5f5d0
  416b06:	outs   dx,DWORD PTR ds:[esi]
  416b07:	aas    
  416b08:	and    DWORD PTR [edi],0x4f89732a
  416b0e:	cmp    BYTE PTR [edx+eiz*2+0x6b6b1d60],dl
  416b15:	fild   WORD PTR [edx+0x19e054f9]
  416b1b:	xor    eax,0x1473c13
  416b20:	mov    cs,WORD PTR ds:0x3d58666b
  416b26:	stc    
  416b27:	stc    
  416b28:	shl    BYTE PTR [ebx+0x68b699e7],0x4b
  416b2f:	cmp    DWORD PTR [esi],ebx
  416b31:	mov    edx,0x5c9de73b
  416b36:	outs   dx,BYTE PTR ds:[esi]
  416b37:	outs   dx,BYTE PTR ds:[esi]
  416b38:	push   ss
  416b39:	or     ebx,DWORD PTR [ebp+0xf85ea30]
  416b3f:	stos   BYTE PTR es:[edi],al
  416b40:	pop    ss
  416b41:	inc    esp
  416b42:	outs   dx,DWORD PTR ds:[esi]
  416b43:	stos   DWORD PTR es:[edi],eax
  416b44:	or     al,0x3c
  416b46:	pusha  
  416b47:	call   0x7a5:0xe83d8da5
  416b4e:	js     0x416b2a
  416b50:	call   0x9980:0x13b3df61
  416b57:	pop    edx
  416b58:	dec    ecx
  416b59:	pop    esp
  416b5a:	mov    ss,WORD PTR [edi+0x197272df]
  416b60:	jmp    0xfda7:0x53c42d6
  416b67:	jecxz  0x416bd1
  416b69:	nop
  416b6a:	(bad)  [ebx]
  416b6c:	ror    BYTE PTR [ebx-0x41],1
  416b6f:	js     0x416b33
  416b71:	xchg   edi,eax
  416b72:	mov    dl,0x67
  416b74:	push   ds
  416b75:	add    BYTE PTR [esi],0xdc
  416b78:	add    al,0xe4
  416b7a:	loopne 0x416b25
  416b7c:	xchg   esp,eax
  416b7d:	retf   
  416b7e:	ins    BYTE PTR es:[edi],dx
  416b7f:	aad    0xdb
  416b81:	in     al,dx
  416b82:	adc    esp,DWORD PTR [ebx]
  416b84:	lock retf 0xa830
  416b88:	jns    0x416bcd
  416b8a:	mov    eax,ds:0x5e47bd42
  416b8f:	pop    ss
  416b90:	sub    edx,DWORD PTR [eax+ecx*4-0x98a6d16]
  416b97:	stos   DWORD PTR es:[edi],eax
  416b98:	scas   al,BYTE PTR es:[edi]
  416b99:	lea    eax,[edi+0x7418ba36]
  416b9f:	into   
  416ba0:	cmp    al,0x88
  416ba2:	jg     0x416bfc
  416ba4:	push   eax
  416ba5:	jmp    0x416c0d
  416ba7:	out    dx,al
  416ba8:	xchg   bl,ah
  416baa:	jae    0x416bc6
  416bac:	mov    al,0x3c
  416bae:	adc    cl,BYTE PTR [ebx]
  416bb0:	xchg   edi,ebp
  416bb2:	shl    dh,1
  416bb4:	sbb    eax,0x2393555c
  416bb9:	mov    bl,0x7f
  416bbb:	cmp    eax,0xbbb8bfc3
  416bc0:	in     eax,0xb5
  416bc2:	pop    es
  416bc3:	popa   
  416bc4:	es sbb eax,0x9a6bd3ee
  416bca:	daa    
  416bcb:	xor    ecx,DWORD PTR [ecx+0x2d]
  416bce:	pusha  
  416bcf:	fistp  QWORD PTR [ebx+ebp*4+0x606232a2]
  416bd6:	jb     0x416c23
  416bd8:	mov    al,ds:0xb1717391
  416bdd:	sub    al,0x3d
  416bdf:	addr16 int 0x29
  416be2:	fstp   DWORD PTR [esi-0x5d]
  416be5:	mov    DWORD PTR [edi-0x3c64bff3],eax
  416beb:	(bad)  
  416bec:	std    
  416bed:	jno    0x416c34
  416bef:	(bad)  
  416bf0:	dec    eax
  416bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf2:	(bad)  
  416bf3:	sti    
  416bf4:	push   0x301bbb90
  416bf9:	jmp    0xad9e11ab
  416bfe:	or     ch,BYTE PTR [edi]
  416c00:	dec    ebp
  416c01:	jp     0x416c7d
  416c03:	cmc    
  416c04:	pop    ss
  416c05:	mov    bl,0x2b
  416c07:	xchg   ebp,eax
  416c08:	imul   ebx,DWORD PTR [edx],0xceb6bf5
  416c0e:	pop    ecx
  416c0f:	and    cl,BYTE PTR [edi]
  416c11:	jmp    0x5058:0x154853f3
  416c18:	push   ecx
  416c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c1a:	jmp    0xf9b9:0x580f5fca
  416c21:	xor    eax,0x1e176a7f
  416c26:	mov    eax,0xc63b1cf
  416c2b:	(bad)  
  416c2c:	xor    esi,ebp
  416c2e:	out    dx,eax
  416c2f:	and    eax,0x5d30bd27
  416c34:	mov    ecx,0x9e06ca2b
  416c39:	addr16 test al,bh
  416c3c:	cmp    al,0x8e
  416c3e:	dec    ecx
  416c3f:	shl    BYTE PTR [ebx+0x3a],cl
  416c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c43:	repnz mov esp,DWORD PTR [eax+edi*1+0xc]
  416c48:	out    0x72,al
  416c4a:	hlt    
  416c4b:	not    ah
  416c4d:	xchg   edi,eax
  416c4e:	test   BYTE PTR [ebp-0x4d],cl
  416c51:	test   al,0xe
  416c53:	cs sti 
  416c55:	xchg   BYTE PTR [eax-0x57],dl
  416c58:	sub    DWORD PTR [ecx-0x71],edx
  416c5b:	jmp    0x416cc6
  416c5d:	xchg   ecx,eax
  416c5e:	mov    al,ds:0xf92c91b4
  416c63:	fidivr WORD PTR [ebx-0x64fa8f24]
  416c69:	jnp    0x416c2e
  416c6b:	dec    edx
  416c6c:	fild   DWORD PTR [ecx+edx*2-0x3f]
  416c70:	pop    ebp
  416c71:	pop    eax
  416c72:	ja     0x416cc4
  416c74:	int    0xfc
  416c76:	cmp    eax,0x271cfd13
  416c7b:	cld    
  416c7c:	aaa    
  416c7d:	fs and BYTE PTR ss:[esi+ebx*2],dh
  416c82:	mov    DWORD PTR cs:0x28fec9bb,ecx
  416c89:	cwde   
  416c8a:	add    eax,0xba8e4033
  416c8f:	dec    BYTE PTR [ecx+ebx*1-0x7c]
  416c93:	lods   eax,DWORD PTR es:[esi]
  416c95:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416c97:	inc    ebx
  416c98:	sbb    ebp,DWORD PTR [ebp+0x2d]
  416c9b:	xchg   BYTE PTR [ebx+eax*8],dh
  416c9e:	pop    es
  416c9f:	out    0x90,eax
  416ca1:	xchg   edx,eax
  416ca2:	scas   al,BYTE PTR es:[edi]
  416ca3:	jl     0x416cae
  416ca5:	dec    eax
  416ca6:	add    BYTE PTR [esi+ebx*4],0x20
  416caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cab:	cmc    
  416cac:	or     BYTE PTR [edx+0x56],ch
  416caf:	outs   dx,DWORD PTR ds:[esi]
  416cb0:	outs   dx,DWORD PTR ds:[esi]
  416cb1:	cmp    BYTE PTR [edx-0x5e],0x70
  416cb5:	mov    esp,0x6cefbb00
  416cba:	stos   DWORD PTR es:[edi],eax
  416cbb:	js     0x416c5b
  416cbd:	rol    al,1
  416cbf:	lods   al,BYTE PTR ds:[esi]
  416cc0:	cmp    eax,0x1d4461b1
  416cc5:	adc    al,0x2
  416cc7:	and    BYTE PTR [edi+0x3f],0x43
  416ccb:	inc    esp
  416ccc:	fwait
  416ccd:	cdq    
  416cce:	push   ebx
  416ccf:	test   DWORD PTR [eax],edx
  416cd1:	inc    edx
  416cd2:	mov    cl,0x48
  416cd4:	rol    BYTE PTR [edi+ebp*1-0x2a],0xe3
  416cd9:	sbb    eax,0x82586edc
  416cde:	cli    
  416cdf:	shl    BYTE PTR [edi],cl
  416ce1:	jmp    0xc808:0x6d8dbcb2
  416ce8:	shr    ecx,0x3c
  416ceb:	sub    esp,DWORD PTR [eax-0x3f]
  416cee:	jmp    0x8866a7b1
  416cf3:	dec    edx
  416cf4:	cmp    dh,bh
  416cf6:	mov    ah,0x9e
  416cf8:	push   cs
  416cf9:	sub    BYTE PTR [ebx],ch
  416cfb:	cmp    BYTE PTR [ebx+ebx*8+0x4b4ec110],dl
  416d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d03:	dec    edi
  416d04:	xor    dh,dl
  416d06:	dec    edi
  416d07:	pop    esp
  416d08:	pop    edx
  416d09:	jmp    0x2c587252
  416d0e:	add    ah,BYTE PTR [ecx-0x68733910]
  416d14:	push   ds
  416d15:	lock repnz adc al,0x92
  416d19:	adc    BYTE PTR [esi-0x6d00ea84],al
  416d1f:	call   0x6cb9:0x9c3643a
  416d26:	inc    edi
  416d27:	stos   BYTE PTR es:[edi],al
  416d28:	xor    BYTE PTR ss:[esi+eiz*2],bl
  416d2c:	test   ch,ah
  416d2e:	(bad)  
  416d2f:	repnz and ecx,ecx
  416d32:	in     eax,dx
  416d33:	mov    cl,0x95
  416d35:	ins    DWORD PTR es:[edi],dx
  416d36:	das    
  416d37:	out    0x5e,al
  416d39:	mov    ds:0xb8ef1ab0,al
  416d3e:	xor    eax,0xbc92f3ee
  416d43:	pop    ds
  416d44:	nop
  416d45:	dec    ebx
  416d46:	cmp    ecx,DWORD PTR [edi+0x4f6eabe3]
  416d4c:	int3   
  416d4d:	jp     0x416d64
  416d4f:	pop    ebp
  416d50:	sbb    al,0x1a
  416d52:	repnz sub DWORD PTR [edx],edi
  416d55:	jmp    0xdf8855e7
  416d5a:	retf   
  416d5b:	arpl   WORD PTR [edx+esi*4],si
  416d5e:	(bad)  
  416d5f:	or     ah,BYTE PTR [eax+0x65341709]
  416d65:	xchg   BYTE PTR [edi-0x60],cl
  416d68:	mov    ds,WORD PTR [esi]
  416d6a:	sub    bl,BYTE PTR [ebx]
  416d6c:	mov    cl,0x8d
  416d6e:	sbb    al,0xfa
  416d70:	xor    ebx,DWORD PTR [esp+ebx*8]
  416d73:	push   ebp
  416d74:	pop    ebp
  416d76:	(bad)  
  416d77:	cld    
  416d78:	jne    0x416dd7
  416d7a:	cmp    al,0xe4
  416d7c:	mov    DWORD PTR [edx+eax*8+0x5e410cfa],ecx
  416d83:	(bad)  
  416d84:	out    dx,eax
  416d85:	xor    eax,0x1c3c96f3
  416d8a:	sub    DWORD PTR [ecx-0x10],0x2e84eade
  416d91:	mul    esp
  416d93:	repnz xchg ecx,eax
  416d95:	mov    ebx,0x18f59c9a
  416d9a:	test   eax,0x999ce547
  416d9f:	jg     0x416da5
  416da1:	repnz mov gs,WORD PTR [eax-0x4b531f6f]
  416da8:	jg     0x416e0f
  416daa:	or     ecx,DWORD PTR ds:[ebp+0x3a]
  416dae:	pusha  
  416daf:	outs   dx,BYTE PTR ds:[esi]
  416db0:	pop    esp
  416db1:	pop    ds
  416db2:	test   BYTE PTR [ebx],bl
  416db4:	jo     0x416d83
  416db6:	mov    dh,0x4e
  416db8:	sub    eax,ebx
  416dba:	xor    BYTE PTR [edx],ah
  416dbc:	mov    edx,0xdcd8ddc0
  416dc1:	loopne 0x416dbd
  416dc3:	xchg   edi,eax
  416dc4:	loope  0x416e22
  416dc6:	adc    al,0x15
  416dc8:	ja     0x416d88
  416dca:	xor    DWORD PTR [edi+0x22],edi
  416dcd:	stos   BYTE PTR es:[edi],al
  416dce:	repz sub DWORD PTR [esi],ebx
  416dd1:	in     al,0xd3
  416dd3:	inc    ebp
  416dd4:	inc    edi
  416dd5:	jp     0x416dae
  416dd7:	cmc    
  416dd8:	int3   
  416dd9:	push   ebx
  416dda:	test   ah,dl
  416ddc:	les    esp,FWORD PTR [ebx]
  416dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ddf:	adc    DWORD PTR [edx-0x33c7493],esp
  416de5:	call   0xfb7c387b
  416dea:	jnp    0x416de4
  416dec:	rcr    DWORD PTR [edx-0x2fcf6730],cl
  416df2:	clc    
  416df3:	add    al,0x24
  416df5:	jge    0x416ddf
  416df7:	add    BYTE PTR [eax],al
  416df9:	clc    
  416dfa:	add    al,0x0
  416dfc:	add    BYTE PTR [ebp+0x44c91e6d],al
  416e02:	jle    0x416e48
  416e04:	mov    dl,0xc8
  416e06:	mov    ebx,0xd5e382a5
  416e0b:	fwait
  416e0c:	xor    edx,ebp
  416e0e:	(bad)  
  416e0f:	enter  0xc9a5,0x29
  416e13:	pop    ds
  416e14:	inc    esi
  416e15:	xchg   esp,eax
  416e16:	das    
  416e17:	cmp    eax,DWORD PTR [ebx+0xb]
  416e1a:	push   es
  416e1b:	je     0x416dd6
  416e1d:	(bad)  
  416e1e:	daa    
  416e1f:	leave  
  416e20:	or     edx,0x52e3d88e
  416e26:	sbb    ebx,0x5414c60c
  416e2c:	lds    edx,FWORD PTR [ecx+0x580c11c5]
  416e32:	repz push esp
  416e34:	daa    
  416e35:	loop   0x416e2b
  416e37:	jno    0x416e78
  416e39:	mov    esp,esi
  416e3b:	hlt    
  416e3c:	push   esp
  416e3d:	xchg   ecx,eax
  416e3e:	outs   dx,BYTE PTR ds:[esi]
  416e3f:	(bad)  
  416e40:	fxch   st(4)
  416e42:	xchg   ebp,eax
  416e43:	or     al,0x75
  416e45:	lods   eax,DWORD PTR ds:[esi]
  416e46:	fadd   st(3),st
  416e48:	fbstp  TBYTE PTR [ebp-0x15b6d9a8]
  416e4e:	fisubr WORD PTR [ecx]
  416e50:	xchg   DWORD PTR [ebp-0x798e6547],ecx
  416e56:	call   0x4b15:0xb7252374
  416e5d:	mov    ds:0xe36865d4,al
  416e62:	xor    esi,DWORD PTR [ecx]
  416e64:	dec    ebx
  416e65:	and    BYTE PTR [edx-0x59],dl
  416e68:	ds mov ch,0x3a
  416e6b:	and    esp,edi
  416e6d:	lods   al,BYTE PTR ds:[esi]
  416e6e:	push   es
  416e6f:	add    eax,DWORD PTR [edi]
  416e71:	data16 xor al,0x35
  416e74:	daa    
  416e75:	pop    ebx
  416e76:	neg    DWORD PTR [edi+0x13]
  416e79:	(bad)  
  416e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e7c:	retf   
  416e7d:	push   0x14
  416e7f:	sbb    dl,BYTE PTR [eax-0x1e83ccae]
  416e85:	pop    ds
  416e86:	shl    BYTE PTR [esi],0x24
  416e89:	xor    edx,DWORD PTR [ebp+0x50]
  416e8c:	mov    eax,0x50364607
  416e91:	into   
  416e92:	pop    esi
  416e93:	cmp    al,0xe
  416e95:	mov    ds:0xcac8b3f3,eax
  416e9a:	or     BYTE PTR [ebp+esi*2+0x277130f],bh
  416ea1:	pusha  
  416ea2:	pushf  
  416ea3:	cwde   
  416ea4:	push   esi
  416ea5:	adc    eax,0xa9057fab
  416eaa:	dec    ebp
  416eab:	lods   eax,DWORD PTR ds:[esi]
  416eac:	and    dl,0x81
  416eaf:	cmp    DWORD PTR [eax-0x48],ecx
  416eb2:	jnp    0x416f16
  416eb4:	cmp    ecx,DWORD PTR [ecx+0x36]
  416eb7:	fisub  DWORD PTR [edi]
  416eb9:	mov    ebx,0xe457df1f
  416ebe:	pop    DWORD PTR [edx+ebp*1]
  416ec1:	ret    0xead0
  416ec4:	cmp    eax,0x6adec2f0
  416ec9:	scas   eax,DWORD PTR es:[edi]
  416eca:	inc    esi
  416ecb:	or     BYTE PTR [edx],0x81
  416ece:	aam    0x6f
  416ed0:	(bad)  
  416ed2:	repnz in al,0xa6
  416ed5:	xor    dh,BYTE PTR [edi-0x1f47fd05]
  416edb:	in     al,0x18
  416edd:	icebp  
  416ede:	dec    esp
  416edf:	pop    ds
  416ee0:	addr16 jno 0x416eaa
  416ee3:	sbb    edx,DWORD PTR [ecx-0x4744a956]
  416ee9:	xchg   esp,eax
  416eea:	aas    
  416eeb:	scas   eax,DWORD PTR es:[edi]
  416eec:	xor    edi,ebx
  416eee:	xor    DWORD PTR [esi+0x5b],0x270d3d6
  416ef5:	sub    al,BYTE PTR [edx]
  416ef7:	or     ah,BYTE PTR [eax]
  416ef9:	(bad)  
  416efb:	sub    BYTE PTR [esi+0x43],0x54
  416eff:	add    al,0x9f
  416f01:	jg     0x416f27
  416f03:	xchg   ebx,eax
  416f04:	mov    DWORD PTR [ecx-0x646bf11b],ecx
  416f0a:	sbb    DWORD PTR [ebp+0xa064465],ebx
  416f10:	push   ss
  416f11:	int3   
  416f12:	add    al,0x7a
  416f14:	cmp    cl,dl
  416f16:	jne    0x416ee0
  416f18:	pop    ecx
  416f19:	pop    edx
  416f1a:	out    0xc6,al
  416f1c:	or     al,0xf7
  416f1e:	popf   
  416f1f:	leave  
  416f20:	cmc    
  416f21:	jecxz  0x416f86
  416f23:	lods   al,BYTE PTR ds:[esi]
  416f24:	cli    
  416f25:	and    al,0xfa
  416f27:	and    al,0xb2
  416f29:	add    edi,DWORD PTR [esi]
  416f2b:	sub    dl,BYTE PTR [ebp-0xbca0730]
  416f31:	leave  
  416f32:	push   0x64
  416f34:	sbb    BYTE PTR [esi+0x52],ch
  416f37:	cli    
  416f38:	lea    ebp,[esi-0x7a]
  416f3b:	mov    ebp,0x39ef5815
  416f40:	test   DWORD PTR [edi-0xf],edi
  416f43:	inc    eax
  416f44:	and    DWORD PTR [esi+0x38f89b11],ebx
  416f4a:	jmp    0x4497:0x39b1f13a
  416f51:	jp     0x416f89
  416f53:	mov    bl,0xe
  416f55:	ins    DWORD PTR es:[edi],dx
  416f56:	pushf  
  416f57:	jne    0x416ef0
  416f59:	mov    ebp,DWORD PTR [edx]
  416f5b:	repz mov esp,0xcbf5a383
  416f61:	scas   al,BYTE PTR es:[edi]
  416f62:	out    0xe2,eax
  416f64:	repz add al,0x13
  416f67:	mov    esp,0x4c3508ff
  416f6d:	push   ecx
  416f6e:	push   esi
  416f6f:	add    ah,BYTE PTR [edx]
  416f71:	cdq    
  416f72:	in     eax,dx
  416f73:	pop    ecx
  416f74:	cmp    al,0x28
  416f76:	jle    0x416f5a
  416f78:	outs   dx,DWORD PTR ds:[esi]
  416f79:	mov    BYTE PTR [edx+0x326f6ecd],al
  416f7f:	cld    
  416f80:	or     al,0xad
  416f82:	div    DWORD PTR [ecx+0x9]
  416f85:	test   BYTE PTR [ebx-0x11f677f1],dh
  416f8b:	loop   0x416f55
  416f8d:	test   BYTE PTR [edi],cl
  416f8f:	(bad)  
  416f90:	lock test BYTE PTR [ebp+0x69601f1c],dl
  416f97:	pusha  
  416f98:	push   0xffffffca
  416f9a:	dec    esp
  416f9b:	mov    eax,edx
  416f9d:	sub    bh,BYTE PTR [eax+0x1fcf2521]
  416fa3:	popa   
  416fa4:	mov    ecx,0xc0854296
  416fa9:	xchg   DWORD PTR [ecx-0x19],esi
  416fac:	xor    ebp,DWORD PTR [ebx-0x499aef0f]
  416fb2:	jnp    0x416f48
  416fb4:	push   ebx
  416fb5:	and    ecx,DWORD PTR [edx-0x3b85ad18]
  416fbb:	daa    
  416fbc:	repz clc 
  416fbe:	imul   edx,DWORD PTR [edi-0x80],0x65
  416fc2:	shl    DWORD PTR [edx+0x18],0x55
  416fc6:	jne    0x416fec
  416fc8:	scas   al,BYTE PTR es:[edi]
  416fc9:	in     al,0xb1
  416fcb:	loope  0x416f71
  416fcd:	out    0x18,al
  416fcf:	inc    edx
  416fd0:	xchg   edi,eax
  416fd1:	outs   dx,BYTE PTR ds:[esi]
  416fd2:	aad    0x32
  416fd4:	enter  0x4b5,0x4f
  416fd8:	jne    0x417039
  416fda:	cs xchg edi,eax
  416fdc:	or     BYTE PTR [eax-0x20f33322],bh
  416fe2:	add    bl,dl
  416fe4:	dec    edx
  416fe5:	inc    ecx
  416fe6:	rcl    DWORD PTR [edx-0x33],0x39
  416fea:	mov    esi,0xe42c3a38
  416fef:	out    dx,al
  416ff0:	push   cs
  416ff1:	fdivr  DWORD PTR [esi-0x3edb04e4]
  416ff7:	rcr    bh,0xf2
  416ffa:	fsubr  QWORD PTR [esi+0x212a0109]
  417000:	stos   DWORD PTR es:[edi],eax
  417001:	dec    ebp
  417002:	jecxz  0x417001
  417004:	hlt    
  417005:	cld    
  417006:	rcr    BYTE PTR [esi-0x3ff07a56],cl
  41700c:	push   esp
  41700d:	jnp    0x417087
  41700f:	and    dl,BYTE PTR [ecx+0x79]
  417012:	sbb    dh,cl
  417014:	mov    esi,0xefd02431
  417019:	fdivr  QWORD PTR [esi-0x30]
  41701c:	mov    al,BYTE PTR [ebx]
  41701e:	lds    edx,FWORD PTR [edi-0x1e]
  417021:	lock dec esi
  417023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417024:	sbb    DWORD PTR [esi+edi*1-0x68],edi
  417028:	add    al,0x90
  41702a:	test   BYTE PTR [edx+0x3e],ah
  41702d:	cmc    
  41702e:	mov    ds:0xb40a5862,al
  417033:	cmc    
  417034:	fsubr  st,st(6)
  417036:	sbb    ecx,DWORD PTR [ebx-0x6c]
  417039:	shr    BYTE PTR [edi+0x75],1
  41703c:	xor    esp,DWORD PTR [ecx-0x3d2a2db9]
  417042:	repz call 0x437f6506
  417048:	retf   
  417049:	xor    al,0x28
  41704b:	dec    ebx
  41704c:	jne    0x416ffc
  41704e:	in     al,dx
  41704f:	push   cs
  417050:	sbb    al,0x3f
  417052:	fidiv  DWORD PTR [edx+0x12]
  417055:	or     DWORD PTR [esi+0x1b],ecx
  417058:	int    0xa9
  41705a:	mov    ebp,DWORD PTR [ebx-0x1dbe0d6d]
  417060:	sbb    DWORD PTR [edx],0x25a2f9e8
  417066:	pop    ebx
  417067:	aas    
  417068:	mov    al,ds:0x584415f4
  41706d:	inc    esp
  41706e:	xchg   ebx,eax
  41706f:	ror    BYTE PTR [esi+0x6e10fc86],cl
  417075:	sti    
  417076:	(bad)
  41707a:	sahf   
  41707b:	mov    ds:0x65d39840,eax
  417080:	jle    0x4170ae
  417082:	sbb    eax,0xcd56a00d
  417087:	shl    bh,1
  417089:	sahf   
  41708a:	xchg   ebx,eax
  41708b:	sbb    bh,BYTE PTR [eax+0x7a0eaecd]
  417091:	(bad)  
  417092:	push   ebx
  417093:	inc    edx
  417094:	call   0x4f0d:0xa19a23e7
  41709b:	jmp    0x57e3:0xd8800cc
  4170a2:	dec    edx
  4170a3:	int3   
  4170a4:	xchg   ecx,eax
  4170a5:	fwait
  4170a6:	popf   
  4170a7:	pop    es
  4170a8:	mov    eax,edi
  4170aa:	(bad)  
  4170ac:	enter  0x13b2,0x72
  4170b0:	inc    bh
  4170b2:	frstor [edi-0x3faefbee]
  4170b8:	icebp  
  4170b9:	(bad)  
  4170ba:	xor    esp,DWORD PTR [ecx-0x1c121064]
  4170c0:	neg    DWORD PTR [ecx+0x3b]
  4170c3:	cli    
  4170c4:	xor    DWORD PTR [eax+0x22],ecx
  4170c7:	adc    al,bh
  4170c9:	cdq    
  4170ca:	retf   
  4170cb:	faddp  st(7),st
  4170cd:	add    al,0x70
  4170cf:	lea    ebp,[ebp+0x20bc5452]
  4170d5:	inc    eax
  4170d6:	and    ecx,esp
  4170d8:	adc    ah,BYTE PTR ds:0x5c51c2d
  4170de:	inc    eax
  4170df:	jbe    0x41715f
  4170e1:	push   0x74adc38f
  4170e6:	inc    ecx
  4170e7:	stos   BYTE PTR es:[edi],al
  4170e8:	jecxz  0x4170aa
  4170ea:	push   edi
  4170eb:	out    dx,al
  4170ec:	sbb    al,0x41
  4170ee:	loopne 0x4170e0
  4170f0:	mov    al,0x7
  4170f2:	in     al,0xac
  4170f4:	push   cs
  4170f5:	xor    DWORD PTR [edx-0x1b],ebp
  4170f8:	dec    ebp
  4170f9:	ficom  WORD PTR [edi]
  4170fb:	bound  ebp,QWORD PTR [ecx]
  4170fd:	sub    BYTE PTR ds:0xbf877f84,bl
  417103:	mov    bl,0x67
  417105:	sub    ebp,DWORD PTR [ebx-0x5941d78d]
  41710b:	xchg   edx,eax
  41710c:	jecxz  0x4170a8
  41710e:	mov    gs,eax
  417110:	mov    esp,0x8dd10461
  417115:	add    esi,DWORD PTR [esi-0x3b9bdb72]
  41711b:	or     bl,cl
  41711d:	(bad)  
  41711e:	sbb    eax,0xd97fd4f2
  417123:	test   eax,0xa32a4ade
  417128:	add    ah,BYTE PTR [ebp-0x55]
  41712b:	int3   
  41712c:	stos   BYTE PTR es:[edi],al
  41712d:	mov    edx,0x974308f7
  417132:	ins    DWORD PTR es:[edi],dx
  417133:	aaa    
  417134:	shr    ebx,1
  417136:	xchg   BYTE PTR [edi-0x3],ah
  417139:	cmp    al,0xff
  41713b:	adc    al,0xb0
  41713d:	jl     0x41718f
  41713f:	xchg   esi,eax
  417140:	sbb    DWORD PTR [ebx],ecx
  417142:	push   fs
  417144:	sbb    DWORD PTR [eax+0x7ad00fc3],eax
  41714a:	iret   
  41714b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41714c:	cmp    bp,si
  41714f:	jbe    0x417192
  417151:	and    bl,bl
  417153:	icebp  
  417154:	outs   dx,BYTE PTR ds:[esi]
  417155:	mov    bh,BYTE PTR [edi+eiz*8-0x72]
  417159:	lds    edx,FWORD PTR [edi+0x2d]
  41715c:	sbb    al,0xb9
  41715e:	in     al,0x68
  417160:	sub    ch,BYTE PTR [esi+0x264f70ba]
  417166:	inc    ebp
  417167:	test   ecx,0x4abe865f
  41716d:	inc    ebp
  41716e:	mov    bl,0xed
  417170:	jle    0x4170fb
  417172:	stos   DWORD PTR es:[edi],eax
  417173:	outs   dx,DWORD PTR ds:[esi]
  417174:	pop    eax
  417175:	out    dx,al
  417176:	jo     0x4171e6
  417178:	jb     0x417100
  41717a:	or     DWORD PTR [ebx+0x71],ebp
  41717d:	adc    esi,eax
  41717f:	sub    edi,DWORD PTR [esi+0x7d]
  417182:	and    ch,BYTE PTR [ebx-0x1d]
  417185:	fmulp  st(7),st
  417187:	cmp    al,0x91
  417189:	add    cl,cl
  41718b:	xor    eax,0xc56e7f23
  417190:	jmp    0x417127
  417192:	and    DWORD PTR [edi],ecx
  417194:	or     eax,esp
  417196:	mov    bl,0x3d
  417198:	and    DWORD PTR [ecx+edx*2-0x1b],ecx
  41719c:	enter  0x95d9,0x54
  4171a0:	bound  eax,QWORD PTR [eax-0x32b21fe3]
  4171a6:	(bad)  
  4171a7:	dec    esi
  4171a8:	push   edx
  4171a9:	neg    BYTE PTR [esi+0x3d94f9c7]
  4171af:	addr16 aaa 
  4171b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171b2:	aaa    
  4171b3:	xor    esi,ebp
  4171b5:	or     bh,al
  4171b7:	jae    0x417226
  4171b9:	push   cs
  4171ba:	ror    DWORD PTR [esi-0x55a8f63b],cl
  4171c0:	xor    DWORD PTR [esi-0x41894f7e],0x55
  4171c7:	clc    
  4171c8:	enter  0x7ed6,0xe3
  4171cc:	lock fst QWORD PTR [edi]
  4171cf:	repz ds imul esp,esp,0xffffff91
  4171d4:	pop    ss
  4171d5:	mov    BYTE PTR [ecx+0x3d9e1f53],dl
  4171db:	test   DWORD PTR [eax],0xb1025265
  4171e1:	mov    WORD PTR [ebp-0x34],?
  4171e4:	iret   
  4171e5:	push   cs
  4171e6:	clc    
  4171e7:	or     dl,BYTE PTR [ecx]
  4171e9:	mov    esi,0xc3f80780
  4171ee:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4171f0:	pop    ecx
  4171f1:	aaa    
  4171f2:	push   0x6cffcb1f
  4171f7:	aaa    
  4171f8:	fs push edi
  4171fa:	rcr    eax,0x6e
  4171fd:	xchg   BYTE PTR [ecx],cl
  4171ff:	retf   
  417200:	sbb    DWORD PTR [esi+edx*8-0x21],edi
  417204:	mov    esp,0x49a8bb79
  417209:	jmp    0xeb64:0xed25e5b0
  417210:	cdq    
  417211:	es dec edx
  417213:	cmp    ch,bh
  417215:	jbe    0x4171c0
  417217:	sahf   
  417218:	dec    edi
  417219:	lahf   
  41721a:	stos   DWORD PTR es:[edi],eax
  41721b:	out    0x1f,eax
  41721d:	xchg   ebx,eax
  41721e:	xchg   ebp,eax
  41721f:	out    dx,al
  417220:	hlt    
  417221:	loopne 0x41722f
  417223:	xor    esp,0xffffffb6
  417226:	std    
  417227:	(bad)  
  417228:	call   0x1f7efbf4
  41722d:	in     al,dx
  41722e:	fwait
  41722f:	lock (bad) 
  417231:	cmp    DWORD PTR [edx-0x71b494e3],edi
  417237:	shl    BYTE PTR [ebx+0x38],1
  41723a:	test   BYTE PTR [ecx],dl
  41723c:	pop    es
  41723d:	and    al,0x47
  41723f:	lds    edi,FWORD PTR [ecx+0x10]
  417242:	adc    bl,cl
  417244:	pushf  
  417245:	or     BYTE PTR [ecx+0x78201c68],ah
  41724b:	push   cs
  41724c:	out    0x21,eax
  41724e:	ins    BYTE PTR es:[edi],dx
  41724f:	daa    
  417250:	jnp    0x41723b
  417252:	sahf   
  417253:	shl    BYTE PTR [ebx],cl
  417255:	clc    
  417256:	inc    esi
  417257:	xor    al,BYTE PTR [edi]
  417259:	mov    bh,0x6c
  41725b:	xchg   BYTE PTR ds:0xbc68b42a,ah
  417261:	xor    BYTE PTR [ebx+0x4a],al
  417264:	pop    ss
  417265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417267:	sbb    ah,BYTE PTR ds:0x44243a85
  41726d:	or     BYTE PTR [esp+ecx*4],0x5c
  417271:	sbb    eax,0xff4c7f83
  417276:	leave  
  417277:	fcmovne st,st(1)
  417279:	ja     0x41723e
  41727b:	pop    ebp
  41727c:	cli    
  41727d:	pusha  
  41727e:	jg     0x4172d2
  417280:	mov    ds:0xc59d2ff4,eax
  417285:	cmp    al,0x3a
  417287:	fmul   QWORD PTR [esi+0x7cc7c7aa]
  41728d:	rcl    DWORD PTR [bx+di+0x3fc5],cl
  417292:	lods   al,BYTE PTR ds:[esi]
  417293:	dec    edx
  417294:	imul   ebp,DWORD PTR [edx],0xe252708d
  41729a:	push   eax
  41729b:	push   0x1b5d4931
  4172a0:	add    BYTE PTR [edi+esi*8-0xf78b321],0xd3
  4172a8:	test   DWORD PTR [esi-0x4c],esp
  4172ab:	retf   
  4172ac:	aaa    
  4172ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ae:	je     0x4172d0
  4172b0:	scas   al,BYTE PTR es:[edi]
  4172b1:	aas    
  4172b2:	or     eax,0x709ab908
  4172b7:	xchg   BYTE PTR [bx],ch
  4172ba:	(bad)
  4172bd:	popf   
  4172be:	mov    dh,0xd4
  4172c0:	lods   eax,DWORD PTR ds:[esi]
  4172c1:	xor    DWORD PTR [esi],esi
  4172c3:	jmp    0x735a073b
  4172c8:	es jbe 0x41733b
  4172cb:	std    
  4172cc:	jbe    0x417261
  4172ce:	shr    BYTE PTR [ebp+0x71],0xad
  4172d2:	adc    eax,0xe04b1893
  4172d7:	test   al,0xd8
  4172d9:	mov    bl,0x78
  4172db:	sbb    bl,BYTE PTR [edi]
  4172dd:	mov    al,ds:0xfb1a0266
  4172e2:	pop    edi
  4172e3:	xchg   ebx,eax
  4172e4:	sti    
  4172e5:	and    edx,DWORD PTR [ebp-0x67192ef7]
  4172eb:	rcl    BYTE PTR [eax],1
  4172ed:	add    DWORD PTR [esi+eax*2],edx
  4172f0:	mov    DWORD PTR [edx+0x55ab6c29],edi
  4172f6:	sub    al,0x5f
  4172f8:	test   DWORD PTR [edi-0x9],edi
  4172fb:	(bad)  
  4172fd:	enter  0x5167,0xc
  417301:	in     al,0x8
  417303:	lea    eax,[edi+0xed75]
  417309:	clc    
  41730a:	add    al,0x0
  41730c:	add    al,ch
  41730e:	outs   dx,DWORD PTR ds:[esi]
  41730f:	test   al,0x1b
  417311:	imul   ebx,DWORD PTR [ebx-0x19ed0d2c],0x94f52ba5
  41731b:	outs   dx,BYTE PTR ds:[esi]
  41731c:	pop    eax
  41731d:	sti    
  41731e:	pop    edi
  41731f:	dec    edx
  417320:	push   0xfffffff4
  417322:	add    BYTE PTR [eax-0x7a87596f],al
  417328:	loopne 0x41735d
  41732a:	push   cs
  41732b:	jns    0x4172e8
  41732d:	mov    edi,0x3285313c
  417332:	outs   dx,DWORD PTR ds:[esi]
  417333:	jle    0x417314
  417335:	mov    edi,0x1c2f4a7c
  41733a:	add    cl,bl
  41733c:	lds    ecx,FWORD PTR [edx]
  41733e:	cld    
  41733f:	inc    edi
  417340:	adc    BYTE PTR [edx],al
  417342:	lea    esp,[edx-0x6]
  417345:	popa   
  417346:	jl     0x417396
  417348:	and    DWORD PTR ds:0x7b122942,ecx
  41734e:	scas   al,BYTE PTR es:[edi]
  41734f:	daa    
  417350:	or     al,0x79
  417352:	iret   
  417353:	xchg   esi,eax
  417354:	inc    edi
  417355:	pop    ss
  417356:	int    0xc8
  417358:	das    
  417359:	retf   0xa353
  41735c:	loope  0x4172e5
  41735e:	mov    bh,0x8e
  417360:	xlat   BYTE PTR ds:[ebx]
  417361:	call   0xd754:0x42ee2b65
  417368:	test   DWORD PTR [edi-0x723dd12c],ecx
  41736e:	mov    cl,0x6a
  417370:	xor    al,0x9b
  417372:	sahf   
  417373:	in     eax,dx
  417374:	popa   
  417375:	mov    edi,0x7ac3d6c3
  41737a:	inc    ebp
  41737b:	out    dx,eax
  41737c:	dec    ebp
  41737d:	or     ah,dh
  41737f:	mov    ds:0x671eb12d,al
  417384:	pushf  
  417385:	add    ebp,edi
  417387:	scas   eax,DWORD PTR es:[edi]
  417388:	jle    0x4173b9
  41738a:	data16 jns 0x4173a2
  41738d:	bound  ebx,QWORD PTR [ebx+0x22]
  417390:	adc    DWORD PTR [edi-0x56],esi
  417393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417394:	iret   
  417395:	add    eax,0x93e1d995
  41739a:	add    esi,edx
  41739c:	push   ebp
  41739d:	cmc    
  41739e:	jmp    0x417386
  4173a0:	mov    edx,0x9cc90361
  4173a5:	pop    ds
  4173a6:	add    esi,ebx
  4173a8:	sub    al,0x9d
  4173aa:	add    bh,BYTE PTR [esi]
  4173ac:	push   edi
  4173ad:	push   edi
  4173ae:	cmp    al,0x9b
  4173b0:	retf   
  4173b1:	xchg   esp,eax
  4173b2:	mov    cl,0x7
  4173b4:	bound  esi,QWORD PTR [edi]
  4173b6:	sbb    cl,cl
  4173b8:	test   al,0xda
  4173ba:	xchg   DWORD PTR [ebp+0x466a815],ebx
  4173c0:	and    al,0x40
  4173c2:	xor    DWORD PTR [eax+ebp*8-0x2e3909e0],ebx
  4173c9:	in     eax,dx
  4173ca:	push   edi
  4173cb:	scas   al,BYTE PTR es:[edi]
  4173cc:	pop    edi
  4173cd:	int    0xba
  4173cf:	push   edi
  4173d0:	jl     0x4173b6
  4173d2:	push   ecx
  4173d3:	(bad)  
  4173d4:	scas   eax,DWORD PTR es:[edi]
  4173d5:	xlat   BYTE PTR ds:[ebx]
  4173d6:	xchg   DWORD PTR [edx*8-0x7de44278],eax
  4173dd:	mov    bl,0xc2
  4173df:	daa    
  4173e0:	repnz das 
  4173e2:	dec    ebp
  4173e3:	(bad)  
  4173e4:	daa    
  4173e5:	dec    ebx
  4173e6:	mov    ebp,edi
  4173e8:	jae    0x417436
  4173ea:	data16 not BYTE PTR [eax+edi*4+0xb]
  4173ef:	sub    ah,ah
  4173f1:	mov    bl,0xe4
  4173f3:	mov    bl,0x7e
  4173f5:	fs mov eax,0x76572f36
  4173fb:	mov    ebp,DWORD PTR [esi]
  4173fd:	(bad)  
  4173fe:	sar    DWORD PTR [ecx+0xebbee4],1
  417404:	imul   ecx,edx,0x2f
  417407:	int3   
  417408:	sti    
  417409:	gs sbb eax,eax
  41740c:	push   ecx
  41740d:	xchg   edi,eax
  41740e:	pop    DWORD PTR [ebx+0x882c433]
  417414:	xor    eax,0xd9e9cd86
  417419:	mov    WORD PTR [eax-0x5a52f946],ss
  41741f:	call   0x8335:0xa6df38ac
  417426:	mov    bh,0x39
  417428:	cmp    eax,0x2cb5cc8f
  41742d:	adc    ah,ch
  41742f:	shl    al,1
  417431:	pusha  
  417432:	fwait
  417433:	clc    
  417434:	jo     0x41747d
  417436:	dec    edi
  417437:	adc    al,0xd0
  417439:	shl    BYTE PTR [eax],0xb9
  41743c:	adc    cl,BYTE PTR [edx+ebx*8-0x3e5097f4]
  417443:	or     bh,BYTE PTR [ebx-0x30]
  417446:	clc    
  417447:	xchg   ebp,eax
  417448:	sbb    BYTE PTR [eax+edi*4+0x50b401e2],ah
  41744f:	jmp    0xed06:0xbe6ed4ce
  417456:	sbb    DWORD PTR [ebx+ebp*1-0x5ed86065],ebx
  41745d:	retf   0x534b
  417460:	sbb    al,ah
  417462:	pushf  
  417463:	xchg   edx,eax
  417464:	ss (bad) 
  417466:	mov    al,0xe0
  417468:	add    DWORD PTR ds:0xf1b09f3d,ebp
  41746e:	loop   0x417459
  417470:	fst    DWORD PTR [edx+0x16]
  417473:	xchg   edx,eax
  417474:	or     esp,DWORD PTR [ebx+0x6ceea542]
  41747a:	push   0x17220a70
  41747f:	push   edx
  417480:	mov    esi,0x1a20f153
  417485:	ss hlt 
  417487:	arpl   WORD PTR [edi-0x64e580fc],cx
  41748d:	dec    edi
  41748e:	ss xchg ebx,eax
  417490:	sbb    cl,BYTE PTR [edi+0x6c8a3115]
  417496:	push   0xb758f09f
  41749b:	and    al,0x25
  41749d:	ja     0x41744f
  41749f:	push   0x44
  4174a1:	sbb    bh,al
  4174a3:	aam    0xac
  4174a5:	addr16 mov bh,0x5a
  4174a8:	jg     0x417510
  4174aa:	jne    0x4174d9
  4174ac:	clc    
  4174ad:	das    
  4174ae:	je     0x4174d4
  4174b0:	sti    
  4174b1:	js     0x41752b
  4174b3:	sub    bl,ch
  4174b5:	in     al,dx
  4174b6:	add    BYTE PTR [ebx+0x21],0x41
  4174ba:	or     al,0xc8
  4174bc:	rcr    BYTE PTR [esi-0x6ebe0589],0xd2
  4174c3:	inc    edi
  4174c4:	jae    0x4174e4
  4174c6:	cmp    al,0x26
  4174c8:	in     eax,dx
  4174c9:	mov    esp,0x3d482d61
  4174ce:	mov    ecx,0x50529cc4
  4174d3:	mov    ecx,edx
  4174d5:	inc    eax
  4174d6:	inc    esp
  4174d7:	dec    BYTE PTR [ecx-0x6b940380]
  4174dd:	int3   
  4174de:	pushf  
  4174df:	mov    ds,WORD PTR [esi+0x6bd690bf]
  4174e5:	and    eax,0x31cbd209
  4174ea:	test   esp,edx
  4174ec:	ds hlt 
  4174ee:	sbb    cl,0xa1
  4174f1:	ss gs dec esi
  4174f4:	popa   
  4174f5:	jmp    0x5bd3c364
  4174fa:	adc    dl,ch
  4174fc:	push   ebx
  4174fd:	mov    BYTE PTR [edx-0x33f23367],dl
  417503:	sbb    DWORD PTR [eax+0x63f7bfff],ebp
  417509:	add    edx,DWORD PTR [eax+0x73]
  41750c:	inc    esp
  41750d:	xchg   ebp,eax
  41750e:	(bad)  
  417510:	pusha  
  417511:	cmovb  edx,DWORD PTR [edx-0x61b77852]
  417518:	mov    al,0x47
  41751a:	cmc    
  41751b:	loop   0x41751e
  41751d:	sbb    BYTE PTR [edx+0x596850c],0x3c
  417524:	mov    edi,0xda5ae6d6
  417529:	dec    eax
  41752a:	stos   DWORD PTR es:[edi],eax
  41752b:	jmp    0x858b:0x9227ff66
  417532:	dec    edx
  417533:	lds    ebp,FWORD PTR [eax]
  417535:	inc    ebx
  417536:	enter  0xbfea,0x34
  41753a:	pop    ebx
  41753b:	mov    bl,0x3a
  41753d:	rol    BYTE PTR [ebp-0x79],0x44
  417541:	inc    ebx
  417542:	imul   ebp,DWORD PTR [edi],0xe
  417545:	sub    DWORD PTR [ebx+ebx*8+0x45663f2f],edi
  41754c:	sbb    al,0xb6
  41754e:	pop    es
  41754f:	push   edi
  417550:	pusha  
  417551:	or     al,BYTE PTR [ebx]
  417553:	test   eax,0x82c9bdbe
  417558:	cli    
  417559:	ins    DWORD PTR es:[edi],dx
  41755a:	loop   0x417507
  41755c:	ja     0x417540
  41755e:	push   ebp
  41755f:	sub    DWORD PTR [ebp-0x22],esp
  417562:	aas    
  417563:	push   edx
  417564:	ins    BYTE PTR es:[edi],dx
  417565:	daa    
  417566:	sbb    eax,0xcfbc0740
  41756b:	pushf  
  41756c:	mov    cl,0x17
  41756e:	pop    eax
  41756f:	loope  0x4175cf
  417571:	jnp    0x41759c
  417573:	and    ecx,edi
  417575:	sub    ecx,esp
  417577:	pop    es
  417578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417579:	sbb    DWORD PTR ds:0x9089fd25,ecx
  41757f:	adc    ah,BYTE PTR [edx+eax*1-0x596ba2c8]
  417586:	(bad)  
  417587:	and    ah,BYTE PTR [edx]
  417589:	int3   
  41758a:	inc    esp
  41758b:	shr    BYTE PTR [ebp-0x5e],0x18
  41758f:	push   ecx
  417590:	or     al,0xbd
  417592:	inc    edx
  417593:	xchg   BYTE PTR [esi+0x58f1b800],dh
  417599:	xlat   BYTE PTR ds:[ebx]
  41759a:	sbb    al,0x48
  41759c:	jmp    0x45ef:0xdb796da
  4175a3:	sub    DWORD PTR [edx-0xf],edx
  4175a6:	sti    
  4175a7:	mov    ch,0xcd
  4175a9:	jg     0x417575
  4175ab:	loope  0x4175ab
  4175ad:	cmp    al,0x7a
  4175af:	pop    ecx
  4175b0:	dec    edx
  4175b1:	mov    ds:0x1f456adb,al
  4175b6:	shl    cl,cl
  4175b8:	dec    ecx
  4175b9:	into   
  4175ba:	pop    ebx
  4175bb:	cmp    al,0xc2
  4175bd:	adc    BYTE PTR [ebx+0x2e],ch
  4175c0:	aad    0x59
  4175c2:	xchg   BYTE PTR [edi],ah
  4175c4:	xchg   ecx,eax
  4175c5:	or     DWORD PTR [ebx+0x1a],edi
  4175c8:	jnp    0x4175dc
  4175ca:	loop   0x41760e
  4175cc:	xchg   esp,eax
  4175cd:	shl    BYTE PTR [eax+edx*1],cl
  4175d0:	in     al,0xa
  4175d2:	mov    dl,0x3e
  4175d4:	ret    0xd227
  4175d7:	leave  
  4175d8:	xchg   ebp,eax
  4175d9:	das    
  4175da:	mov    cl,0xf2
  4175dc:	add    eax,0x55a50a33
  4175e1:	jle    0x41757c
  4175e3:	jb     0x417573
  4175e5:	cmp    DWORD PTR [edi-0x13],ecx
  4175e8:	sub    BYTE PTR [edx+0x2a55d4f5],0x2c
  4175ef:	push   ds
  4175f0:	ret    0x16f3
  4175f3:	xchg   edi,eax
  4175f4:	inc    esp
  4175f5:	xor    DWORD PTR [di],edi
  4175f8:	mov    ch,0xe1
  4175fa:	hlt    
  4175fb:	inc    ecx
  4175fc:	ret    0x1543
  4175ff:	cdq    
  417600:	jns    0x417621
  417602:	cmp    BYTE PTR [eax+0x1b7508c8],al
  417608:	dec    ebx
  417609:	adc    al,0xf0
  41760b:	mov    ah,0x29
  41760d:	into   
  41760e:	jle    0x4175d8
  417610:	sbb    ebx,DWORD PTR [edx+0x14]
  417613:	ror    ch,cl
  417615:	test   DWORD PTR [esi+0x4bf3737d],edi
  41761b:	shl    DWORD PTR [edx-0x56d0d095],1
  417621:	scas   al,BYTE PTR es:[edi]
  417622:	mov    DWORD PTR [eax-0x2f],esi
  417625:	or     dh,BYTE PTR [eax-0x62]
  417628:	in     al,0xd9
  41762a:	xchg   esp,eax
  41762b:	dec    ebx
  41762c:	inc    eax
  41762d:	pop    esp
  41762e:	mov    esp,0xdf39d578
  417633:	mov    esp,0xa1d87649
  417638:	pop    ebx
  417639:	jl     0x41760f
  41763b:	fsub   QWORD PTR [esi-0x494db8a3]
  417641:	lods   eax,DWORD PTR ds:[esi]
  417642:	ja     0x417679
  417644:	and    al,0x69
  417646:	jae    0x417608
  417648:	scas   eax,DWORD PTR es:[edi]
  417649:	adc    edx,DWORD PTR [ebx+0x77]
  41764c:	mov    ss,WORD PTR [eax+eax*8+0x26]
  417650:	rcl    BYTE PTR [ecx+0x5449aa9f],1
  417656:	out    dx,al
  417657:	leave  
  417658:	call   0x49130376
  41765d:	dec    ebp
  41765e:	dec    ebp
  41765f:	retf   
  417660:	or     dh,dh
  417662:	push   0xffffffce
  417664:	push   cs
  417665:	xchg   edi,eax
  417666:	jle    0x4176e4
  417668:	jae    0x41763e
  41766a:	adc    al,0x3
  41766c:	repnz cmp ecx,esp
  41766f:	rcr    BYTE PTR [ebp-0x1d459c66],cl
  417675:	es loopne 0x417618
  417678:	and    eax,0x7820aab9
  41767d:	mov    esp,0x40f39f8b
  417682:	pop    ebp
  417683:	inc    ecx
  417684:	sub    BYTE PTR [ecx+0x69],0x62
  417688:	lods   al,BYTE PTR ds:[esi]
  417689:	cli    
  41768a:	(bad)  
  41768b:	and    ebp,ebp
  41768d:	stos   BYTE PTR es:[edi],al
  41768e:	jae    0x4176fd
  417690:	test   al,0xad
  417692:	test   DWORD PTR [eax-0x54],esp
  417695:	iret   
  417696:	mov    dl,cl
  417698:	jle    0x4176fe
  41769a:	vmwrite edx,DWORD PTR [esi-0x1c129d73]
  4176a1:	nop
  4176a2:	cmp    bh,BYTE PTR [ebp-0x47]
  4176a5:	sbb    eax,0xe960de24
  4176aa:	and    BYTE PTR [edi+0xdda6ccb],dh
  4176b0:	loope  0x4176b7
  4176b2:	(bad)  
  4176b3:	out    dx,eax
  4176b4:	scas   eax,DWORD PTR es:[edi]
  4176b5:	mov    cl,0x91
  4176b7:	pop    ds
  4176b8:	sbb    al,0x86
  4176ba:	dec    eax
  4176bb:	or     ebp,DWORD PTR [esi]
  4176bd:	and    DWORD PTR [edi-0x68ed8e3c],edi
  4176c3:	pusha  
  4176c4:	test   al,0xab
  4176c6:	mov    edi,0xb2e5606
  4176cb:	mov    ebx,?
  4176cd:	mov    sp,0x596f
  4176d1:	fld    TBYTE PTR [edx+0x0]
  4176d4:	sbb    eax,0x373737e3
  4176d9:	or     eax,0x77484923
  4176de:	dec    esi
  4176df:	nop
  4176e0:	push   ecx
  4176e1:	jne    0x4176cf
  4176e3:	mov    esp,0x4bbaca7
  4176e8:	sub    BYTE PTR [ecx+eax*1-0x4f],cl
  4176ec:	pop    ebx
  4176ed:	shr    BYTE PTR [ecx],cl
  4176ef:	fdivr  DWORD PTR [edi+0xb]
  4176f2:	pop    ds
  4176f3:	add    ebp,DWORD PTR [ebx-0xa92c242]
  4176f9:	adc    DWORD PTR [eax],esi
  4176fb:	mov    esp,0xcc2568ad
  417700:	mov    edi,0xf9e7503d
  417705:	or     eax,0x8341aeb6
  41770a:	jp     0x417763
  41770c:	jne    0x41776f
  41770e:	inc    esp
  41770f:	jmp    0x41773a
  417711:	jmp    0xbc0f25e2
  417716:	addr16 std 
  417718:	mov    ecx,DWORD PTR [ebx]
  41771a:	icebp  
  41771b:	mov    BYTE PTR [ebp*2+0x7333755],ah
  417722:	sub    ah,BYTE PTR [eax-0x46]
  417725:	adc    BYTE PTR [eax],cl
  417727:	xor    BYTE PTR [esi-0x3f],ch
  41772a:	pop    es
  41772b:	jmp    0x4391:0x9e2a5b65
  417732:	xlat   BYTE PTR ds:[ebx]
  417733:	mov    esp,ebp
  417735:	jno    0x417796
  417737:	popa   
  417738:	xchg   esp,eax
  417739:	sub    dl,BYTE PTR [edx+0x6c3c2422]
  41773f:	sbb    bh,bh
  417741:	or     ecx,DWORD PTR [edx+0x2]
  417744:	sbb    DWORD PTR ds:0x1efdcb7a,ebp
  41774a:	mov    eax,ds:0xbe4d4f68
  41774f:	push   edi
  417750:	and    eax,0x6c28eb13
  417755:	les    ecx,FWORD PTR [esi-0x41be1d53]
  41775b:	cld    
  41775c:	loope  0x41772a
  41775e:	je     0x4177dd
  417760:	mov    bl,0x9e
  417762:	les    ecx,FWORD PTR [ecx+edx*8+0x6f7cd298]
  417769:	out    0x64,eax
  41776b:	rcl    DWORD PTR [ebx],1
  41776d:	inc    esi
  41776e:	ret    0xa650
  417771:	out    0x78,al
  417773:	adc    bl,BYTE PTR [ebx+0x34]
  417776:	adc    DWORD PTR [edx+0x5c],eax
  417779:	retf   
  41777a:	fxch   st(3)
  41777c:	push   cs
  41777d:	mov    ds:0x3e6279fd,al
  417782:	imul   edx,ebx,0xffffffd3
  417785:	xchg   ebp,eax
  417786:	dec    esp
  417787:	lods   al,BYTE PTR ds:[esi]
  417788:	and    dl,BYTE PTR ds:0xd33f20be
  41778e:	mov    ecx,0x666941e1
  417793:	add    al,0xea
  417795:	sahf   
  417796:	call   0x1fc1:0xd3bdadd7
  41779d:	cmp    eax,0x166e968a
  4177a2:	outs   dx,BYTE PTR ds:[esi]
  4177a3:	push   ecx
  4177a4:	hlt    
  4177a5:	ss push ebp
  4177a7:	mov    bh,0x8f
  4177a9:	inc    edx
  4177aa:	sahf   
  4177ab:	mov    al,0x4a
  4177ad:	lods   al,BYTE PTR ds:[esi]
  4177ae:	pusha  
  4177af:	mov    eax,edi
  4177b1:	xor    al,ch
  4177b3:	stc    
  4177b4:	in     eax,dx
  4177b5:	push   ebx
  4177b6:	mov    ebp,0xcbf45a42
  4177bb:	es mov ch,0xc
  4177be:	dec    ebx
  4177bf:	and    edi,ebx
  4177c1:	icebp  
  4177c2:	and    al,0xb1
  4177c4:	fistp  QWORD PTR [ebx]
  4177c6:	mov    esi,0x9287cc8d
  4177cb:	add    eax,0xf61e5e3c
  4177d0:	or     dh,ch
  4177d2:	pop    eax
  4177d3:	jmp    0x417851
  4177d5:	dec    edx
  4177d6:	gs xchg ecx,ebx
  4177d9:	jle    0x4177a2
  4177db:	fmul   DWORD PTR [esi+0x78]
  4177de:	push   esi
  4177df:	push   ecx
  4177e0:	ss dec ebx
  4177e2:	fmul   QWORD PTR [esi+0x61]
  4177e5:	aas    
  4177e6:	inc    eax
  4177e7:	xchg   esi,eax
  4177e8:	jns    0x41776c
  4177ea:	sub    bl,ah
  4177ec:	nop
  4177ed:	mov    esp,0x1c8ec9a3
  4177f2:	inc    esp
  4177f3:	test   al,0xe9
  4177f5:	sbb    edi,DWORD PTR [ebx]
  4177f7:	mov    dh,0xc4
  4177f9:	and    eax,0x3117226b
  4177fe:	or     eax,0xffffffdc
  417801:	enter  0x3e70,0xa
  417805:	fisttp WORD PTR [ebp-0x66]
  417808:	mov    DWORD PTR [edx+0x555fdfdf],ebx
  41780e:	cmc    
  41780f:	icebp  
  417810:	or     esi,edi
  417812:	sbb    BYTE PTR [edi-0x79],0x6d
  417816:	repnz add BYTE PTR [eax],al
  417819:	clc    
  41781a:	add    al,0x0
  41781c:	add    BYTE PTR [esi],bh
  41781e:	mov    ch,0x5b
  417820:	cdq    
  417821:	repnz loop 0x4177d2
  417824:	iret   
  417825:	fidivr WORD PTR [esi-0x7f]
  417828:	mov    bl,0xbc
  41782a:	popa   
  41782b:	jns    0x417830
  41782d:	shrd   esp,esp,cl
  417830:	es jp  0x417803
  417833:	xchg   edi,eax
  417834:	pop    ebx
  417835:	(bad)  
  417836:	cld    
  417837:	sub    al,0xf8
  417839:	xchg   esp,eax
  41783a:	xchg   edi,eax
  41783b:	sub    edi,edi
  41783d:	retf   
  41783e:	xchg   ebp,eax
  41783f:	inc    ebx
  417840:	cwde   
  417841:	add    edx,DWORD PTR [edx-0x4f]
  417844:	pop    edx
  417845:	std    
  417846:	jmp    0x41787d
  417848:	test   DWORD PTR [esi-0x46],ebx
  41784b:	jmp    0x417801
  41784d:	call   0x6e324128
  417852:	int3   
  417853:	jp     0x41785a
  417855:	add    DWORD PTR [eax+edx*1-0x3561a3],edi
  41785c:	mov    BYTE PTR [eax],0x36
  41785f:	pop    ds
  417860:	and    eax,0xc344665e
  417865:	dec    ecx
  417866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417867:	lock pop esi
  417869:	adc    eax,0xa9c3593f
  41786e:	push   ebp
  41786f:	call   0x955dc102
  417874:	gs mov ah,0xbe
  417877:	clc    
  417878:	cmp    al,0xaa
  41787a:	les    esp,FWORD PTR [eax-0x4]
  41787d:	ja     0x41787a
  41787f:	popa   
  417880:	scas   al,BYTE PTR es:[edi]
  417881:	(bad)  [edx-0x39229ccb]
  417887:	sbb    DWORD PTR [ecx],esi
  417889:	sub    ebp,esp
  41788b:	xchg   ecx,eax
  41788c:	nop
  41788d:	mov    ds,WORD PTR [edx-0x7d9bd79d]
  417893:	hlt    
  417894:	push   ss
  417895:	(bad)
  417899:	inc    ecx
  41789a:	nop
  41789b:	jmp    0xf75b:0xb9e147e1
  4178a2:	gs mov ch,0xff
  4178a5:	(bad)  
  4178a6:	sti    
  4178a7:	fsubp  st(1),st
  4178a9:	pusha  
  4178aa:	pop    esi
  4178ab:	dec    ebp
  4178ac:	js     0x417875
  4178ae:	jmp    0x417867
  4178b0:	add    DWORD PTR [eax],edi
  4178b2:	aam    0xe8
  4178b4:	ror    DWORD PTR [eax+0x54],cl
  4178b7:	mov    eax,0x3f402947
  4178bc:	sti    
  4178bd:	nop
  4178be:	mov    esp,DWORD PTR [eax]
  4178c0:	(bad)  
  4178c1:	push   eax
  4178c2:	fild   DWORD PTR [ebx-0x79]
  4178c5:	bswap  ecx
  4178c7:	dec    ecx
  4178c8:	adc    DWORD PTR [eax-0x7395aa2a],esp
  4178ce:	out    dx,eax
  4178cf:	inc    edx
  4178d0:	push   ds
  4178d1:	dec    ecx
  4178d2:	xor    al,0x6f
  4178d4:	dec    ebx
  4178d5:	and    eax,ecx
  4178d7:	and    eax,0xa2d6e38e
  4178dc:	call   0x1b3cd200
  4178e1:	mov    dh,0xfe
  4178e3:	inc    edi
  4178e4:	cs cmc 
  4178e6:	sar    esi,0x20
  4178e9:	jno    0x4178f2
  4178eb:	xchg   BYTE PTR [edx+ebx*1],bh
  4178ee:	cmp    BYTE PTR [ebx],0x2f
  4178f1:	cmp    eax,0xeb676772
  4178f6:	pop    edx
  4178f7:	in     al,dx
  4178f8:	stc    
  4178f9:	loop   0x4178ce
  4178fb:	xchg   ebx,eax
  4178fc:	pop    es
  4178fd:	call   0x37e18977
  417902:	sbb    al,0x9f
  417904:	fistp  QWORD PTR ds:0x5e45419
  41790a:	fisubr WORD PTR [edx]
  41790c:	fadd   QWORD PTR [ebp-0x76]
  41790f:	inc    ebx
  417910:	xor    eax,0x20e2c950
  417915:	popf   
  417916:	mov    dh,0xdf
  417918:	out    0xcd,eax
  41791a:	push   cs
  41791b:	push   eax
  41791c:	mov    edi,0x80dc511
  417921:	dec    esi
  417922:	sub    ebp,ebx
  417924:	dec    ecx
  417925:	and    DWORD PTR [edi],edx
  417927:	mov    eax,0x1a4548d4
  41792c:	sti    
  41792d:	mov    esp,0x3d047baf
  417932:	lock ja 0x4179b4
  417935:	repnz inc edi
  417937:	push   0x41
  417939:	dec    ecx
  41793a:	dec    esp
  41793b:	pushf  
  41793c:	stc    
  41793d:	repz aas 
  41793f:	ror    edx,cl
  417941:	push   0xf00eff62
  417946:	sub    eax,0xf6941272
  41794b:	inc    ecx
  41794c:	lock xchg esp,eax
  41794e:	inc    edi
  41794f:	xor    esi,ecx
  417951:	mov    bl,0x53
  417953:	xchg   esp,eax
  417954:	bound  edi,QWORD PTR [esi-0xa]
  417957:	jmp    0x807b:0x8b3777c7
  41795e:	dec    ecx
  41795f:	test   BYTE PTR [ebx+0x10],bl
  417962:	sbb    BYTE PTR [ebp+0x5f],al
  417965:	or     eax,0xd2910ac4
  41796a:	or     ebp,DWORD PTR [edi]
  41796c:	cmp    DWORD PTR [ebx+0x3fb93a68],edx
  417972:	aas    
  417973:	and    eax,0xf6c95f8f
  417978:	sbb    BYTE PTR [ebx+0x5b91095d],0xee
  41797f:	mov    ebp,0xb8b4ea2d
  417984:	ja     0x417970
  417986:	and    BYTE PTR [esi-0x58],ah
  417989:	into   
  41798a:	jns    0x4179c8
  41798c:	mov    al,ds:0x513c765f
  417991:	out    0xb1,eax
  417993:	add    esp,eax
  417995:	rcr    DWORD PTR ds:0xeea9fa06,1
  41799b:	sbb    DWORD PTR ds:0xb6ed4dfa,0xd7d482cf
  4179a5:	cmc    
  4179a6:	add    bl,BYTE PTR ds:0xbb68e354
  4179ac:	mov    edx,0xe7e0fba0
  4179b1:	setbe  BYTE PTR [edx]
  4179b4:	dec    esi
  4179b5:	or     BYTE PTR [ecx-0x36],0x97
  4179b9:	out    0x4d,al
  4179bb:	xchg   esi,eax
  4179bc:	xor    ebp,DWORD PTR [edi]
  4179be:	sti    
  4179bf:	push   0xfb0ca7b
  4179c4:	mov    dl,0x8b
  4179c6:	dec    edi
  4179c7:	jle    0x4179c1
  4179c9:	sub    al,0x67
  4179cb:	push   eax
  4179cc:	cld    
  4179cd:	xor    BYTE PTR [ebp+eax*4+0x3f6ec1c],bh
  4179d4:	leave  
  4179d5:	pop    esi
  4179d6:	sub    eax,0xcf87db54
  4179db:	ins    DWORD PTR es:[edi],dx
  4179dc:	push   eax
  4179dd:	retf   
  4179de:	xchg   DWORD PTR [ebp+ecx*1-0x3d171ed9],edi
  4179e5:	test   cl,ah
  4179e7:	(bad)  
  4179e8:	enter  0xc046,0x36
  4179ec:	enter  0x6f46,0x7a
  4179f0:	sbb    bl,BYTE PTR [eax+eiz*1+0x52f787f]
  4179f7:	es cmc 
  4179f9:	push   ebx
  4179fa:	call   0x3bd25b3d
  4179ff:	enter  0xd486,0x6e
  417a03:	mov    bh,0x4b
  417a05:	xchg   ecx,eax
  417a06:	jns    0x417a30
  417a08:	mov    ebp,0x25b5053b
  417a0d:	xlat   BYTE PTR ds:[ebx]
  417a0e:	xor    al,0x5c
  417a10:	and    DWORD PTR [edi+0x587e0310],edi
  417a16:	mov    eax,ds:0x19a0e37d
  417a1b:	add    ebx,DWORD PTR [edi]
  417a1d:	stos   BYTE PTR es:[edi],al
  417a1e:	push   0xffffff95
  417a20:	mov    ds:0xa2cc6fca,eax
  417a25:	add    BYTE PTR [ebx-0x18],al
  417a28:	push   es
  417a29:	ror    DWORD PTR [eax],cl
  417a2b:	loop   0x417aa6
  417a2d:	jo     0x417a8f
  417a2f:	inc    ecx
  417a30:	popa   
  417a31:	out    0xaa,al
  417a33:	cmp    DWORD PTR [esi+0x28d77983],ebp
  417a39:	jp     0x4179eb
  417a3b:	fidiv  WORD PTR [ebx-0x3b]
  417a3e:	repnz cmp DWORD PTR [ebx-0x66],eax
  417a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a44:	fcomp  DWORD PTR ds:0x85142ac0
  417a4a:	inc    ebx
  417a4b:	cs jg  0x417abd
  417a4e:	inc    edx
  417a4f:	lock aad 0x14
  417a52:	repz or bl,BYTE PTR [ecx+0x48]
  417a56:	sbb    al,0xb6
  417a58:	inc    ebx
  417a59:	dec    ebp
  417a5a:	test   DWORD PTR ds:0xc1fe50b9,ebp
  417a60:	inc    ebx
  417a61:	cli    
  417a62:	fs inc edx
  417a64:	sub    edx,DWORD PTR [eax-0x1a]
  417a67:	gs xchg esp,eax
  417a69:	sti    
  417a6a:	xchg   DWORD PTR [ecx-0x76],esp
  417a6d:	or     eax,0x1b16d89
  417a72:	xor    dh,BYTE PTR [ebp+ebx*1+0x54]
  417a76:	cmp    eax,0xdea756bf
  417a7b:	in     al,dx
  417a7c:	dec    edi
  417a7d:	sub    esp,esi
  417a7f:	mov    ds:0x4531d032,eax
  417a84:	das    
  417a85:	adc    eax,0xd0fd56a2
  417a8a:	test   al,0x56
  417a8c:	call   0x52377bbf
  417a91:	jl     0x417a44
  417a93:	cmp    eax,0x77110890
  417a98:	push   ss
  417a99:	jmp    0x417a61
  417a9b:	mov    ss,WORD PTR [ebx]
  417a9d:	je     0x417b0c
  417a9f:	arpl   WORD PTR [esi],sp
  417aa1:	sub    eax,0xc9590e2f
  417aa6:	jns    0x417a59
  417aa8:	test   BYTE PTR [edi],0x9c
  417aab:	adc    dl,BYTE PTR [ecx]
  417aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aae:	adc    BYTE PTR [ebp+0x4a0cdc11],dh
  417ab4:	cld    
  417ab5:	fld    DWORD PTR [eax-0x383f9feb]
  417abb:	cwde   
  417abc:	int    0x95
  417abe:	leave  
  417abf:	or     eax,0x8ed5b84
  417ac4:	mov    ebx,0xada30278
  417ac9:	(bad)  
  417acb:	shr    DWORD PTR [ebx+edi*2],1
  417ace:	scas   al,BYTE PTR es:[edi]
  417acf:	lds    ebp,FWORD PTR [ebp+0x58b898b5]
  417ad5:	add    eax,0x234b6ea5
  417ada:	xor    edi,ebp
  417adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417add:	cwde   
  417ade:	into   
  417adf:	gs retf 
  417ae1:	push   ds
  417ae2:	jns    0x417a68
  417ae4:	dec    ecx
  417ae5:	inc    esi
  417ae6:	cmp    al,0x6a
  417ae8:	sbb    eax,0x15685861
  417aed:	or     esp,DWORD PTR [esi-0x3324914]
  417af3:	mov    WORD PTR [edi-0x29a26d8e],?
  417af9:	xchg   esi,eax
  417afa:	push   0x69
  417afc:	icebp  
  417afd:	retf   
  417afe:	(bad)  
  417aff:	aad    0x10
  417b01:	in     al,0xef
  417b03:	call   0x373:0xa9ec1ccb
  417b0a:	mov    dh,0x5a
  417b0c:	xchg   DWORD PTR [ebx],edi
  417b0e:	test   eax,0xde53163f
  417b13:	xchg   ebx,eax
  417b14:	xchg   esp,eax
  417b15:	pop    eax
  417b16:	dec    edi
  417b17:	adc    DWORD PTR [eax],0xffffffec
  417b1a:	out    0xd2,al
  417b1c:	xchg   esp,eax
  417b1d:	je     0x417b18
  417b1f:	cmp    al,0xa8
  417b21:	test   BYTE PTR [ecx+0x44],bh
  417b24:	and    ch,dh
  417b26:	imul   BYTE PTR ds:0x20a75b83
  417b2c:	loopne 0x417b6b
  417b2e:	test   BYTE PTR [esi-0x77c3a798],al
  417b34:	std    
  417b35:	jb     0x417b80
  417b37:	test   bh,ah
  417b39:	int3   
  417b3a:	cld    
  417b3b:	mov    ds:0x39e9fabc,eax
  417b40:	sti    
  417b41:	jp     0x417b94
  417b43:	sub    al,0x78
  417b45:	loop   0x417bb6
  417b47:	sar    BYTE PTR [edx+0x69],cl
  417b4a:	jbe    0x417b65
  417b4c:	ins    DWORD PTR es:[edi],dx
  417b4d:	pop    esi
  417b4e:	shr    BYTE PTR [eax],1
  417b50:	lods   al,BYTE PTR ds:[esi]
  417b51:	fcomp  DWORD PTR ds:0xcb3c748b
  417b57:	aam    0x66
  417b59:	dec    esp
  417b5a:	sub    eax,0xa1c79c71
  417b5f:	and    BYTE PTR [ebx+0x41],0x8a
  417b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b64:	jno    0x417afd
  417b66:	xor    ch,BYTE PTR [ebp+0x5fc0366f]
  417b6c:	and    edx,DWORD PTR [ecx]
  417b6e:	push   esp
  417b6f:	pop    ss
  417b70:	sub    BYTE PTR [esi+ebx*8-0x1007d166],al
  417b77:	(bad)  
  417b78:	xlat   BYTE PTR ds:[ebx]
  417b79:	jns    0x417bdc
  417b7b:	xor    DWORD PTR [edi-0x7d],0x2613aa3b
  417b82:	dec    edx
  417b83:	xchg   DWORD PTR [ebx+0x8c56c5a],edx
  417b89:	mov    ecx,0x111c95f4
  417b8e:	loop   0x417c0d
  417b90:	pop    esi
  417b91:	cmp    BYTE PTR [edi-0x4b0d9dfd],bh
  417b97:	sbb    DWORD PTR [eax+0x36],esi
  417b9a:	cmp    al,0xa1
  417b9c:	fsub   st(1),st
  417b9e:	cmp    DWORD PTR [esi+0x7b],ebx
  417ba1:	lods   eax,DWORD PTR ds:[esi]
  417ba2:	call   0xca991f6d
  417ba7:	fild   DWORD PTR [ebp+0x27]
  417baa:	aad    0xbe
  417bac:	jg     0x417bc3
  417bae:	jmp    0x97006ef8
  417bb3:	loop   0x417c2f
  417bb5:	adc    DWORD PTR [ebp+0x4],eax
  417bb8:	mov    cl,0x8
  417bba:	xor    DWORD PTR [ebx+eiz*2+0x4d],ebp
  417bbe:	mov    WORD PTR [edi+0x75b48107],?
  417bc4:	lods   al,BYTE PTR ds:[esi]
  417bc5:	mov    ecx,0x11f73a01
  417bca:	xchg   esi,eax
  417bcb:	push   esi
  417bcc:	mov    edx,0xbd28e4ef
  417bd1:	shl    BYTE PTR [edi],0xfa
  417bd4:	jg     0x417c09
  417bd6:	jl     0x417c4b
  417bd8:	push   esp
  417bd9:	pop    ds
  417bda:	int3   
  417bdb:	cld    
  417bdc:	cli    
  417bdd:	pop    esp
  417bde:	int    0xea
  417be0:	fild   QWORD PTR [edi-0x72]
  417be3:	iret   
  417be4:	test   BYTE PTR [eax+0x58bb4fbb],0xc
  417beb:	test   BYTE PTR [eax-0x8],bh
  417bee:	dec    esp
  417bef:	test   BYTE PTR [ebx-0x5d282e05],0x37
  417bf6:	loope  0x417c08
  417bf8:	push   cs
  417bf9:	xchg   edx,eax
  417bfa:	into   
  417bfb:	leave  
  417bfc:	dec    edi
  417bfd:	sbb    eax,0x7d0e5198
  417c02:	push   0x2c553fd3
  417c07:	mov    esi,0x66dc0736
  417c0c:	enter  0xc1fa,0xa2
  417c10:	jmp    0x74efe53e
  417c15:	push   0x4b
  417c17:	xchg   esp,eax
  417c18:	ret    0x81b0
  417c1b:	ffree  st(7)
  417c1d:	ins    DWORD PTR es:[edi],dx
  417c1e:	sub    edi,edx
  417c20:	je     0x417c52
  417c22:	mov    eax,ds:0x5cd1b9ae
  417c27:	adc    eax,0xda7b26da
  417c2c:	jmp    0x417c33
  417c2e:	das    
  417c2f:	adc    al,0xba
  417c31:	ficom  DWORD PTR [ecx]
  417c33:	fimul  DWORD PTR [ebp+esi*2-0x64]
  417c37:	jae    0x417c2c
  417c39:	ja     0x417c3f
  417c3b:	mov    ch,0x76
  417c3d:	ins    BYTE PTR es:[edi],dx
  417c3e:	iret   
  417c3f:	aam    0x44
  417c41:	adc    bh,BYTE PTR [ebx+edi*2]
  417c44:	lds    eax,FWORD PTR [ecx+esi*2]
  417c47:	std    
  417c48:	ins    BYTE PTR es:[edi],dx
  417c49:	leave  
  417c4a:	dec    BYTE PTR [eax+edi*8]
  417c4d:	adc    bl,BYTE PTR [edi-0x38e8299a]
  417c53:	sbb    edi,DWORD PTR [ebx]
  417c55:	call   0x4d9c:0x79307a2a
  417c5c:	dec    esi
  417c5d:	mov    cl,0x89
  417c5f:	imul   ebp,DWORD PTR [eax],0xffffff81
  417c62:	xchg   esi,eax
  417c63:	mov    DWORD PTR [ebp-0xd],eax
  417c66:	mov    edx,0x61d6225e
  417c6b:	push   cs
  417c6c:	(bad)  
  417c6e:	lods   al,BYTE PTR ds:[esi]
  417c6f:	xchg   esp,eax
  417c70:	dec    edx
  417c71:	sahf   
  417c72:	(bad)  
  417c73:	hlt    
  417c74:	inc    edx
  417c75:	psubusb mm7,QWORD PTR [edi+ecx*1]
  417c79:	dec    esp
  417c7a:	inc    esp
  417c7b:	xor    eax,0x929f8c8b
  417c80:	xor    ah,bl
  417c82:	ja     0x417c72
  417c84:	mov    eax,0x3245e206
  417c89:	xor    al,0x2e
  417c8b:	xchg   BYTE PTR [ecx+0x36],dl
  417c8e:	push   edi
  417c8f:	inc    eax
  417c90:	popa   
  417c91:	imul   ecx,DWORD PTR [esi+edx*4],0xffffffb3
  417c95:	loopne 0x417cc9
  417c97:	push   esi
  417c98:	aad    0x91
  417c9a:	push   es
  417c9b:	cmp    al,0x1d
  417c9d:	dec    ebx
  417c9e:	fidiv  DWORD PTR ds:0xbf678d3d
  417ca4:	out    0xe8,al
  417ca6:	mov    DWORD PTR [ecx+esi*4],esi
  417ca9:	sub    eax,0x368d32de
  417cae:	xchg   esi,eax
  417caf:	cmp    eax,0xa7ed9dd9
  417cb4:	fwait
  417cb5:	or     esi,ebp
  417cb7:	(bad)  
  417cb9:	loopne 0x417cdc
  417cbb:	call   0x1d26:0x72fd1448
  417cc2:	dec    BYTE PTR [eax+0x79]
  417cc5:	pop    edi
  417cc6:	sar    BYTE PTR [ecx],cl
  417cc8:	sahf   
  417cc9:	fdiv   DWORD PTR [ebx+0x54c2c6ef]
  417ccf:	adc    cl,BYTE PTR [ecx-0xb]
  417cd2:	mov    bh,0xed
  417cd4:	cwde   
  417cd5:	jmp    0x96adad49
  417cda:	jb     0x417cf5
  417cdc:	test   DWORD PTR [edi],esi
  417cde:	fnstsw ax
  417ce0:	inc    ebp
  417ce1:	push   0x58
  417ce3:	pusha  
  417ce4:	sbb    edx,DWORD PTR fs:[ebx+0x28]
  417ce8:	retf   0xc0c
  417ceb:	jle    0x417cd8
  417ced:	xchg   ecx,eax
  417cee:	scas   al,BYTE PTR es:[edi]
  417cef:	jb     0x417d52
  417cf1:	and    eax,0xeaa6bc67
  417cf6:	mov    ds:0x8d22a6c7,eax
  417cfb:	rol    ah,cl
  417cfd:	scas   eax,DWORD PTR es:[edi]
  417cfe:	mov    edi,0xa3cce8f
  417d04:	cli    
  417d05:	sbb    DWORD PTR [edi+edi*1+0x67e829a1],esi
  417d0c:	js     0x417cd1
  417d0e:	inc    eax
  417d0f:	jl     0x417d13
  417d11:	out    dx,al
  417d12:	push   eax
  417d13:	dec    edi
  417d14:	jge    0x417d3c
  417d16:	mov    ah,0x71
  417d18:	jno    0x417d0d
  417d1a:	cmc    
  417d1b:	mul    DWORD PTR es:[edi+edx*1+0x3b1e728]
  417d23:	adc    al,0x3a
  417d25:	test   DWORD PTR gs:[eax],0x4f800
  417d2c:	add    bl,cl
  417d2e:	test   ecx,eax
  417d30:	mov    DWORD PTR [esi-0x585d9b19],eax
  417d36:	jne    0x417d28
  417d38:	inc    edx
  417d39:	adc    al,0x6c
  417d3b:	push   ecx
  417d3c:	adc    DWORD PTR [ebx-0x3a],ebx
  417d3f:	xor    DWORD PTR [edx+esi*1],esi
  417d42:	mov    edi,0xa430829a
  417d47:	int    0x92
  417d49:	ins    DWORD PTR es:[edi],dx
  417d4a:	int3   
  417d4b:	(bad)  
  417d4c:	stos   BYTE PTR es:[edi],al
  417d4d:	and    bl,BYTE PTR [ebx+0x4d6c4427]
  417d53:	push   eax
  417d54:	and    eax,0xbe85ec78
  417d59:	(bad)  [esi+edx*4-0x7a]
  417d5d:	xchg   esi,eax
  417d5e:	idiv   DWORD PTR [ecx-0xa527f32]
  417d64:	or     esi,DWORD PTR [ebp-0x3e17b9e8]
  417d6a:	inc    edi
  417d6b:	xchg   DWORD PTR [edx+ebx*2],edi
  417d6e:	cmp    bh,BYTE PTR [edx+0x49]
  417d71:	sub    al,0xef
  417d73:	lds    ecx,FWORD PTR [ecx+0x2f]
  417d76:	mov    WORD PTR [ebx],?
  417d78:	mov    BYTE PTR ds:0xbbb7fd4a,ch
  417d7e:	lods   al,BYTE PTR ds:[esi]
  417d7f:	(bad)
  417d82:	and    eax,0x2a1fd6b2
  417d87:	fcmovb st,st(3)
  417d89:	ret    
  417d8a:	in     al,dx
  417d8b:	dec    edx
  417d8c:	mov    ah,0xa
  417d8e:	mov    ss,WORD PTR [esi+0x37]
  417d91:	daa    
  417d92:	jne    0x417d91
  417d94:	or     al,0xee
  417d96:	xor    edi,edx
  417d98:	mov    ebp,0xec81fcd4
  417d9d:	cmp    eax,0x3024a148
  417da2:	jmp    0x417d93
  417da4:	push   ss
  417da5:	into   
  417da6:	mov    dh,0xec
  417da8:	fdivr  st,st(1)
  417daa:	not    DWORD PTR [ecx+0x44]
  417dad:	loop   0x417d85
  417daf:	xchg   esi,eax
  417db0:	pushf  
  417db1:	fidiv  DWORD PTR [ecx-0x72c64202]
  417db7:	repz or esp,edx
  417dba:	pop    esi
  417dbb:	fidivr WORD PTR [edi-0x15]
  417dbe:	dec    ebp
  417dbf:	cmp    dh,BYTE PTR [esi]
  417dc1:	mov    eax,0x99a4a4e6
  417dc6:	pop    sp
  417dc8:	jb     0x417d93
  417dca:	clc    
  417dcb:	push   edi
  417dcc:	ror    BYTE PTR ds:0x41e3a85d,1
  417dd2:	call   0x79b1:0x23dc9e49
  417dd9:	push   0x6c
  417ddb:	neg    BYTE PTR [ebx-0x18]
  417dde:	loop   0x417df3
  417de0:	push   ebp
  417de1:	icebp  
  417de2:	xchg   ecx,eax
  417de3:	jg     0x417e61
  417de5:	push   es
  417de6:	lds    edi,FWORD PTR [edx+0x62]
  417de9:	push   ecx
  417dea:	pop    es
  417deb:	ret    
  417dec:	fwait
  417ded:	cs icebp 
  417def:	and    BYTE PTR ss:0x4f5e4061,ch
  417df6:	stc    
  417df7:	jbe    0x417dcc
  417df9:	scas   al,BYTE PTR es:[edi]
  417dfa:	or     ecx,esi
  417dfc:	popa   
  417dfd:	pop    esp
  417dfe:	adc    BYTE PTR [eax-0x77],dh
  417e01:	pop    edx
  417e02:	retf   
  417e03:	sub    BYTE PTR [edx+eax*4-0x62],ah
  417e07:	adc    cl,BYTE PTR [esp+eax*2-0x7bc60a6a]
  417e0e:	stos   DWORD PTR es:[edi],eax
  417e0f:	loope  0x417e6b
  417e11:	adc    esp,0xb3610404
  417e17:	rcl    ah,1
  417e19:	or     esp,ecx
  417e1b:	mov    bh,0x49
  417e1d:	inc    esi
  417e1e:	and    al,0xe9
  417e20:	jmp    0x181a:0x5039363c
  417e27:	loop   0x417df7
  417e29:	lock mov ah,0x49
  417e2c:	fist   WORD PTR [esi]
  417e2e:	jecxz  0x417e4a
  417e30:	jns    0x417e42
  417e32:	and    DWORD PTR [ebx-0x229b75d3],ecx
  417e38:	or     al,0x54
  417e3a:	ins    DWORD PTR es:[edi],dx
  417e3b:	(bad)  
  417e3c:	test   DWORD PTR [ebx+0x15534ed1],esp
  417e42:	pop    esp
  417e43:	int3   
  417e44:	cli    
  417e45:	int    0x21
  417e47:	push   esi
  417e48:	dec    edx
  417e49:	out    0x38,al
  417e4b:	ror    cl,cl
  417e4d:	out    dx,al
  417e4e:	loopne 0x417e04
  417e50:	mov    bl,0x20
  417e52:	inc    edx
  417e53:	inc    esp
  417e54:	fcomp  QWORD PTR [edi+eiz*4+0x1f]
  417e58:	xchg   edx,edi
  417e5a:	mov    ch,0xdf
  417e5c:	jbe    0x417e72
  417e5e:	test   eax,0xff684f19
  417e63:	cmc    
  417e64:	add    DWORD PTR [edi*4+0x1c5aea16],0x64
  417e6c:	fcomp  DWORD PTR [ebp-0x22f512ac]
  417e72:	add    ebp,DWORD PTR [eax+0x2b0230d7]
  417e78:	cs push ds
  417e7a:	xlat   BYTE PTR ds:[ebx]
  417e7b:	stc    
  417e7c:	call   0xa08c354
  417e81:	cwde   
  417e82:	jno    0x417e2d
  417e84:	fsubr  DWORD PTR [esp+esi*4+0x585fa994]
  417e8b:	lahf   
  417e8c:	dec    esp
  417e8d:	pop    es
  417e8e:	js     0x417ecf
  417e90:	lock xchg edx,eax
  417e92:	mov    eax,ds:0xad8eee57
  417e97:	in     eax,0x84
  417e99:	inc    eax
  417e9a:	daa    
  417e9b:	xor    eax,0xc8d79847
  417ea0:	pop    eax
  417ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ea2:	dec    ebx
  417ea3:	pushf  
  417ea4:	outs   dx,DWORD PTR ds:[esi]
  417ea5:	sar    DWORD PTR [ebx],0x41
  417ea8:	cld    
  417ea9:	mov    ah,0xeb
  417eab:	push   edi
  417eac:	clc    
  417ead:	dec    ebx
  417eae:	xor    al,0xdf
  417eb0:	dec    esi
  417eb1:	sbb    ch,BYTE PTR [edx]
  417eb3:	stos   BYTE PTR es:[edi],al
  417eb4:	mov    esp,ebp
  417eb6:	xor    DWORD PTR cs:[edx+ebx*2-0x4],ebx
  417ebb:	sub    BYTE PTR [ebx+0x1ab77a0],al
  417ec1:	inc    eax
  417ec2:	lahf   
  417ec3:	cmp    ebx,edx
  417ec5:	fld    QWORD PTR [edx+ebp*4+0x15a47c72]
  417ecc:	mov    esp,0x8870a9c6
  417ed1:	cld    
  417ed2:	scas   al,BYTE PTR es:[edi]
  417ed3:	sub    al,0xb8
  417ed5:	sbb    DWORD PTR [ebx],edi
  417ed7:	fs add ecx,eax
  417eda:	pusha  
  417edb:	jb     0x417e7d
  417edd:	sub    bh,BYTE PTR ds:0x4cd0979b
  417ee3:	sti    
  417ee4:	xor    edi,DWORD PTR fs:[ecx-0x28]
  417ee8:	data16 mov dh,0xc
  417eeb:	push   0xa7c3d8c
  417ef0:	lods   eax,DWORD PTR ds:[esi]
  417ef1:	call   0xd89b89a6
  417ef6:	pop    bp
  417ef8:	cmc    
  417ef9:	loopne 0x417f5d
  417efb:	sbb    bh,BYTE PTR [edx+0x3]
  417efe:	mov    dl,0x10
  417f00:	add    eax,0xf02f91b
  417f05:	push   ecx
  417f06:	add    BYTE PTR [ecx],bh
  417f08:	(bad)  
  417f0a:	outs   dx,BYTE PTR ds:[esi]
  417f0b:	and    dh,bl
  417f0d:	ins    DWORD PTR es:[edi],dx
  417f0e:	rcl    DWORD PTR [eax],1
  417f10:	inc    edx
  417f11:	lea    ebp,[eax+0x2b8b0f88]
  417f17:	pop    es
  417f18:	jne    0x417f6b
  417f1a:	sbb    al,0xa4
  417f1c:	fistp  DWORD PTR [ebx-0x3e]
  417f1f:	mov    dh,0x4f
  417f21:	mul    cl
  417f23:	push   esp
  417f24:	jmp    0xc77c:0x336b3e2
  417f2b:	js     0x417f11
  417f2d:	add    bl,BYTE PTR [edi]
  417f2f:	mov    ecx,DWORD PTR [esi-0x281ca646]
  417f35:	push   esp
  417f36:	mov    edi,0xa9cd5b90
  417f3b:	push   ecx
  417f3c:	call   0x872a:0x6f7d9d6f
  417f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f44:	loopne 0x417f53
  417f46:	shl    dl,1
  417f48:	xchg   BYTE PTR [ecx-0x46],bh
  417f4b:	jne    0x417edb
  417f4d:	popa   
  417f4e:	xchg   ecx,eax
  417f4f:	or     BYTE PTR [esi],bh
  417f51:	mov    eax,0x3789c1f8
  417f56:	std    
  417f57:	sahf   
  417f58:	pop    DWORD PTR [ebx+0x671f595d]
  417f5e:	fcomi  st,st(7)
  417f60:	addr16 fs hlt 
  417f63:	push   ebx
  417f64:	cmp    bh,ah
  417f66:	jecxz  0x417eff
  417f68:	sti    
  417f69:	jl     0x417f5f
  417f6b:	dec    ecx
  417f6c:	or     DWORD PTR [edx],edi
  417f6e:	lock inc edx
  417f70:	(bad)  
  417f71:	pop    esp
  417f72:	bound  esp,QWORD PTR [ecx+esi*1]
  417f75:	cmp    DWORD PTR [ebp+0x1307c2d8],esi
  417f7b:	push   ecx
  417f7c:	inc    ebp
  417f7d:	xchg   esp,eax
  417f7e:	rol    ecx,cl
  417f80:	mov    WORD PTR [eax],?
  417f82:	(bad)  
  417f83:	lock jo 0x417f15
  417f86:	xor    BYTE PTR [esi+0x69],ch
  417f89:	cmp    al,bh
  417f8b:	pop    ecx
  417f8c:	(bad)  
  417f8d:	cmp    eax,0xb06218d8
  417f92:	mov    ch,0x40
  417f94:	jns    0x417fdf
  417f96:	mov    db2,esp
  417f99:	jbe    0x417f79
  417f9b:	push   ebp
  417f9c:	push   edx
  417f9d:	stc    
  417f9e:	(bad)  
  417f9f:	mov    ds:0x5abd9930,al
  417fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fa5:	fimul  DWORD PTR [edx*2+0x22832e52]
  417fac:	aaa    
  417fad:	cli    
  417fae:	pop    es
  417faf:	mov    ah,0xd1
  417fb1:	add    esi,DWORD PTR [ecx+ebx*4+0x11a2d9e4]
  417fb8:	dec    ecx
  417fb9:	fist   DWORD PTR [esi]
  417fbb:	xor    al,0x66
  417fbd:	(bad)  
  417fbe:	fmul   QWORD PTR [eax]
  417fc0:	arpl   WORD PTR [edx+ebx*8],si
  417fc3:	fadd   st,st(2)
  417fc5:	nop
  417fc6:	dec    edx
  417fc7:	add    BYTE PTR [esi],ah
  417fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fca:	(bad)  
  417fcb:	fdiv   DWORD PTR [ecx]
  417fcd:	and    dh,BYTE PTR [edx]
  417fcf:	jmp    0x417fb1
  417fd1:	adc    bl,BYTE PTR [eax+ebp*4]
  417fd4:	mov    edx,ecx
  417fd6:	std    
  417fd7:	nop
  417fd8:	dec    eax
  417fd9:	push   esi
  417fda:	repz inc edx
  417fdc:	fcomp  DWORD PTR [esi-0x279a4875]
  417fe2:	mov    eax,ds:0x72e60e7f
  417fe7:	out    0x61,al
  417fe9:	aad    0x27
  417feb:	clc    
  417fec:	mov    ?,WORD PTR [eax+0x44472fc1]
  417ff2:	sar    esi,cl
  417ff4:	mov    esi,0x7710364e
  417ff9:	addr16 mov edx,0x87a0e2f4
  417fff:	ins    BYTE PTR es:[edi],dx
  418000:	repz jmp 0xa8bb1a4
  418006:	clc    
  418007:	and    al,0x16
  418009:	(bad)  
  41800a:	nop
  41800b:	cmp    ebp,DWORD PTR [ebx]
  41800d:	push   esp
  41800e:	dec    edi
  41800f:	push   esp
  418010:	out    dx,al
  418011:	call   0x521f1a86
  418016:	clc    
  418017:	mov    ch,0x8a
  418019:	mov    ch,0xa1
  41801b:	aaa    
  41801c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41801d:	vmwrite esp,DWORD PTR [ebx]
  418020:	mov    cl,0x48
  418022:	xchg   DWORD PTR [ebx-0x21],ebp
  418025:	out    0xab,eax
  418027:	sub    eax,0xd4dc575a
  41802c:	ror    BYTE PTR [ebx+0x24],0x9d
  418030:	jecxz  0x418016
  418032:	arpl   WORD PTR [ebx-0x5f8f8527],cx
  418038:	in     eax,0xcb
  41803a:	fcom   QWORD PTR [esi]
  41803c:	xor    ah,BYTE PTR [ebp+0x2eb8b6fc]
  418042:	or     esi,DWORD PTR [ebx+0x6e]
  418045:	cmp    al,0xea
  418047:	icebp  
  418048:	jmp    0x3a5b:0x9653781e
  41804f:	pop    es
  418050:	cmc    
  418051:	mov    DWORD PTR [edi+0x5d7f9f48],ebp
  418057:	add    eax,0x9c300d15
  41805c:	inc    esp
  41805d:	jecxz  0x41807c
  41805f:	or     ebx,DWORD PTR [ecx-0x2d]
  418062:	frstor [edi+ebx*1]
  418065:	jecxz  0x41800b
  418067:	retf   
  418068:	fscale 
  41806a:	sti    
  41806b:	cmp    al,0x17
  41806d:	push   ebp
  41806e:	lea    esi,[eax+0x16]
  418071:	push   edi
  418072:	push   es
  418073:	shl    DWORD PTR [edi+0x7629a70d],1
  418079:	sti    
  41807a:	addr16 mov eax,0x9e716d8f
  418080:	push   esi
  418081:	fcomp  QWORD PTR [ebp+0x5e]
  418084:	adc    al,0xa4
  418086:	int3   
  418087:	pop    ebx
  418088:	lahf   
  418089:	push   eax
  41808a:	add    eax,0x20a79e06
  41808f:	daa    
  418090:	popf   
  418091:	cmp    DWORD PTR [ebx+ebp*4],esp
  418094:	cmp    al,0x49
  418096:	mov    ebp,0x1c2d3bc1
  41809b:	out    dx,al
  41809c:	lahf   
  41809d:	jl     0x418088
  41809f:	push   ds
  4180a0:	mov    ebx,0xeaa1becc
  4180a5:	dec    edi
  4180a6:	jecxz  0x4180ab
  4180a8:	ins    DWORD PTR es:[edi],dx
  4180a9:	jo     0x41807d
  4180ab:	sub    eax,0x207b8c2d
  4180b0:	push   edx
  4180b1:	mov    ch,cl
  4180b3:	in     al,dx
  4180b4:	in     al,dx
  4180b5:	push   DWORD PTR [edx+0x5e77f899]
  4180bb:	shl    DWORD PTR [esi-0x4d708bf4],0xbf
  4180c2:	add    esp,DWORD PTR [eax-0x3a]
  4180c5:	adc    esp,DWORD PTR [edx-0x791b83e]
  4180cb:	fwait
  4180cc:	out    dx,al
  4180cd:	jle    0x4180cf
  4180cf:	imul   esp,DWORD PTR [ecx],0x37b13d58
  4180d5:	or     BYTE PTR [ebx+0x6a52deb8],dh
  4180db:	and    al,0xf5
  4180dd:	or     edx,DWORD PTR [esi+0x37]
  4180e0:	out    dx,eax
  4180e1:	dec    edx
  4180e2:	mov    ds:0xdd4d4dde,eax
  4180e7:	or     ah,BYTE PTR [edi-0x70]
  4180ea:	push   ebp
  4180eb:	adc    ebp,DWORD PTR [ebx+0x5086d729]
  4180f1:	mov    edx,0x3ede846b
  4180f6:	xor    al,ch
  4180f8:	pop    ebx
  4180f9:	inc    ecx
  4180fa:	pop    edi
  4180fb:	pop    ebp
  4180fc:	or     BYTE PTR [ecx+0x11],0xfc
  418100:	and    bl,BYTE PTR [ebx-0x4e22c6c4]
  418106:	dec    ebx
  418107:	mov    bl,0x88
  418109:	enter  0xd425,0x8a
  41810d:	add    eax,0x8123838f
  418112:	das    
  418113:	dec    edx
  418114:	into   
  418115:	jl     0x4180c5
  418117:	in     eax,dx
  418118:	sub    al,0x5e
  41811a:	outs   dx,DWORD PTR ds:[esi]
  41811b:	(bad)  
  41811c:	loop   0x4180c3
  41811e:	test   eax,0x42aefb5
  418123:	or     edi,edi
  418125:	add    al,0xe5
  418127:	or     cl,BYTE PTR [edi]
  418129:	int    0x2a
  41812b:	adc    BYTE PTR [ecx-0x62],ah
  41812e:	gs cmp al,0x36
  418131:	mov    ds:0xa3211fba,al
  418136:	outs   dx,BYTE PTR ds:[esi]
  418137:	rcr    BYTE PTR [esi+0x36],1
  41813a:	jmp    DWORD PTR [esi-0x24]
  41813d:	sbb    eax,0x94e3285d
  418142:	loope  0x4181ae
  418144:	aam    0xf5
  418146:	xor    BYTE PTR [edx],0x7a
  418149:	dec    edx
  41814a:	div    BYTE PTR [ebp-0x505ebb77]
  418150:	sub    al,0xd5
  418152:	sbb    cl,BYTE PTR [eax]
  418154:	bound  ebx,QWORD PTR [ecx+esi*1-0x70]
  418158:	js     0x418153
  41815a:	lahf   
  41815b:	fs pop es
  41815d:	in     al,0x56
  41815f:	xchg   dl,bh
  418161:	add    BYTE PTR [edi+0x36d139a5],dh
  418167:	inc    edx
  418168:	mov    al,0x63
  41816a:	pop    edi
  41816b:	mov    esi,0x4660f265
  418170:	mov    al,0x74
  418172:	jb     0x418137
  418174:	test   eax,ecx
  418176:	in     al,0x8c
  418178:	inc    ecx
  418179:	and    eax,0x3380ed8
  41817e:	(bad)  
  41817f:	jg     0x418141
  418181:	aas    
  418182:	es xor ebx,eax
  418185:	inc    edx
  418186:	or     BYTE PTR [esi+0x5e],bh
  418189:	jl     0x4181df
  41818b:	test   al,0x68
  41818d:	inc    esp
  41818e:	push   0xed964cf7
  418193:	dec    ebp
  418194:	outs   dx,BYTE PTR ds:[esi]
  418195:	arpl   bx,ax
  418197:	lock lods eax,DWORD PTR ds:[esi]
  418199:	push   esi
  41819a:	adc    DWORD PTR [ebx-0x3c],ebp
  41819d:	cmp    al,0x9e
  41819f:	xchg   BYTE PTR [esi-0x3d8f3390],dh
  4181a5:	mov    bl,0x7d
  4181a7:	jmp    esp
  4181a9:	pop    ds
  4181aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ab:	mov    cl,cl
  4181ad:	push   ss
  4181ae:	test   BYTE PTR [ecx+0x3f],0x76
  4181b2:	cmp    al,0x68
  4181b4:	fidivr WORD PTR [ecx+0x29]
  4181b7:	jge    0x4181e1
  4181b9:	push   ebp
  4181ba:	daa    
  4181bb:	sbb    dh,BYTE PTR [ebp+0x2f48f7eb]
  4181c1:	xchg   esp,eax
  4181c2:	shl    BYTE PTR [ebp+0x2f],0x89
  4181c6:	push   esp
  4181c7:	sub    al,0x66
  4181c9:	not    edi
  4181cb:	mov    ebp,0x68b53634
  4181d0:	xor    al,BYTE PTR [ebp-0x1498b4e2]
  4181d6:	aad    0x74
  4181d8:	ins    DWORD PTR es:[edi],dx
  4181d9:	push   0xffffff82
  4181db:	dec    ecx
  4181dc:	or     esi,DWORD PTR [edx]
  4181de:	(bad)  
  4181df:	xor    eax,0xb588eed3
  4181e4:	test   al,0xce
  4181e6:	adc    al,0xdb
  4181e8:	sub    al,0x42
  4181ea:	out    0x7e,eax
  4181ec:	pop    esp
  4181ed:	mov    dh,0xba
  4181ef:	lock xor al,0xb4
  4181f2:	or     eax,0x519d586f
  4181f7:	jb     0x418197
  4181f9:	sub    al,0x7f
  4181fb:	test   eax,0x4b874739
  418200:	retf   
  418201:	nop
  418202:	shl    BYTE PTR [ebx-0x15],1
  418205:	mov    edx,0x3b05d404
  41820a:	das    
  41820b:	pusha  
  41820c:	fdivr  QWORD PTR [eax-0x6c]
  41820f:	stos   DWORD PTR es:[edi],eax
  418210:	sub    dh,0x9c
  418213:	mov    ebx,0xd319d8c5
  418218:	jmp    0x39c9:0x9eda8168
  41821f:	add    ebx,0xffffffaa
  418222:	dec    ebx
  418223:	in     al,dx
  418224:	mov    ah,0xc2
  418226:	sahf   
  418227:	xchg   ebx,eax
  418228:	inc    edi
  418229:	fisttp WORD PTR [edi-0x2a]
  41822c:	lahf   
  41822d:	rol    DWORD PTR [ecx*1-0x2bdc450],1
  418234:	dec    ebp
  418235:	pop    ebp
  418236:	cld    
  418237:	add    BYTE PTR [eax],al
  418239:	clc    
  41823a:	add    al,0x0
  41823c:	add    BYTE PTR [ebx+0x6],ah
  41823f:	daa    
  418240:	inc    esp
  418241:	fisub  WORD PTR [ebp-0x2330eca3]
  418247:	mov    dl,0x2b
  418249:	sub    ecx,DWORD PTR [esi]
  41824b:	das    
  41824c:	mov    ah,BYTE PTR [edx]
  41824e:	nop
  41824f:	jb     0x418247
  418251:	jle    0x4182ad
  418253:	imul   ecx,ecx,0xffffffd1
  418256:	sbb    bl,bl
  418258:	test   eax,0x9a68d7e0
  41825d:	add    ah,BYTE PTR ds:0x1ae8ae4e
  418263:	and    dl,dl
  418265:	mov    eax,0x4b352587
  41826a:	gs push edi
  41826c:	add    esi,DWORD PTR [ecx]
  41826e:	stos   BYTE PTR es:[edi],al
  41826f:	sar    DWORD PTR [ebp-0x54],0x32
  418273:	push   ebp
  418274:	int    0xcd
  418276:	sub    DWORD PTR [ecx+0x5b],0xd0777638
  41827d:	mov    BYTE PTR [ebx],bh
  41827f:	push   ds
  418280:	idiv   DWORD PTR [eax]
  418282:	and    al,0x5d
  418284:	mov    dh,BYTE PTR [ebp-0x51]
  418287:	bound  edx,QWORD PTR ds:0xe25b55eb
  41828d:	fld    DWORD PTR [ecx]
  41828f:	lds    edi,FWORD PTR [eax+0x352b9ee4]
  418295:	jecxz  0x418279
  418297:	std    
  418298:	test   DWORD PTR [esi],ebx
  41829a:	pop    edi
  41829b:	add    bl,cl
  41829d:	cmp    esi,DWORD PTR ds:0x9a327e08
  4182a3:	lds    esi,FWORD PTR [edx+0x1a]
  4182a6:	(bad)  [di]
  4182a9:	jg     0x418282
  4182ab:	clc    
  4182ac:	cs dec edx
  4182ae:	inc    ecx
  4182af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182b0:	daa    
  4182b1:	into   
  4182b2:	or     eax,0xc2f45198
  4182b7:	mov    edi,0x98295dd5
  4182bc:	push   eax
  4182bd:	sub    dl,BYTE PTR [edi-0x7a]
  4182c0:	nop
  4182c1:	cli    
  4182c2:	cdq    
  4182c3:	call   0x621c2197
  4182c8:	mov    ecx,0x56d0c19f
  4182cd:	(bad)  
  4182ce:	jmp    0xe3cf85f9
  4182d3:	jns    0x418333
  4182d5:	adc    bl,BYTE PTR [esi+0x4e6fc122]
  4182db:	and    DWORD PTR [edx+edx*8+0x1c],ebp
  4182df:	ds ds out dx,al
  4182e2:	popf   
  4182e3:	push   ss
  4182e4:	(bad)  
  4182e5:	jnp    0x418298
  4182e7:	sub    BYTE PTR ds:0xe7130379,ch
  4182ed:	add    BYTE PTR [ebp-0xb],ah
  4182f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f1:	add    esi,DWORD PTR [esi]
  4182f3:	mov    al,0xa1
  4182f5:	in     al,0x3b
  4182f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f8:	xchg   DWORD PTR [edx+0x49999067],edx
  4182fe:	stos   DWORD PTR es:[edi],eax
  4182ff:	cld    
  418300:	and    eax,0x246cfd8c
  418305:	jecxz  0x418312
  418307:	pop    ss
  418308:	enter  0x1d05,0xe3
  41830c:	xchg   ebp,eax
  41830d:	stos   DWORD PTR es:[edi],eax
  41830e:	xchg   ecx,eax
  41830f:	jge    0x418366
  418311:	leave  
  418312:	xor    DWORD PTR [esp+eiz*4-0x34a57b54],edx
  418319:	(bad)  
  41831a:	daa    
  41831b:	jecxz  0x4182ef
  41831d:	ret    
  41831e:	ins    BYTE PTR es:[edi],dx
  41831f:	push   0xffffffb2
  418321:	in     al,dx
  418322:	popf   
  418323:	push   ss
  418324:	daa    
  418325:	mov    al,0x60
  418327:	test   BYTE PTR [ebx-0x6fc6425e],bh
  41832d:	in     eax,0x43
  41832f:	dec    esi
  418330:	ror    di,0xf7
  418334:	xor    BYTE PTR [edx+0x47],bl
  418337:	mov    bh,0x19
  418339:	dec    ebx
  41833a:	out    0x76,al
  41833c:	adc    DWORD PTR [edi+0x4bec9016],0xffffff8e
  418343:	(bad)  
  418344:	xor    DWORD PTR [ebp-0x8fb6789],edx
  41834a:	retf   
  41834b:	icebp  
  41834c:	inc    esp
  41834d:	jb     0x4183a2
  41834f:	ficom  DWORD PTR [ecx+0x7f48908e]
  418355:	mov    edi,0x6bb99081
  41835a:	mov    dl,0xc
  41835c:	fadd   DWORD PTR [ebp-0x61]
  41835f:	add    bh,BYTE PTR [ecx]
  418361:	arpl   WORD PTR [edx+0x6e917816],ax
  418367:	adc    eax,0xbbec783c
  41836c:	aaa    
  41836d:	mov    eax,0xaa98fcd4
  418372:	push   esi
  418373:	(bad)  
  418374:	out    dx,al
  418375:	leave  
  418376:	dec    ecx
  418377:	jmp    0x4183dc
  418379:	xor    ch,BYTE PTR [edi+edx*8+0x501f7030]
  418380:	call   0x6ae29189
  418385:	sbb    DWORD PTR [esi],0xea122efa
  41838b:	loopne 0x418401
  41838d:	clc    
  41838e:	add    DWORD PTR [edx+ecx*8+0x5b05a124],edx
  418395:	sbb    DWORD PTR [esi-0x30],0xd203b475
  41839c:	dec    edi
  41839d:	mov    ds:0x984a3276,eax
  4183a2:	jbe    0x418353
  4183a4:	fst    QWORD PTR [esi]
  4183a6:	xchg   ebx,eax
  4183a7:	xor    al,0x96
  4183a9:	repz out 0x45,eax
  4183ac:	ins    BYTE PTR es:[edi],dx
  4183ad:	(bad)  [esi+edi*4-0x73809925]
  4183b4:	aad    0x2e
  4183b6:	pop    es
  4183b7:	xor    ebp,ebx
  4183b9:	leave  
  4183ba:	sub    eax,0xd110814d
  4183bf:	push   esp
  4183c0:	and    BYTE PTR [ecx+0x43f7237],0x44
  4183c7:	lahf   
  4183c8:	cmc    
  4183c9:	imul   ecx,DWORD PTR [ecx-0xd3b13cc],0xffffff83
  4183d0:	inc    ebx
  4183d1:	loop   0x41836e
  4183d3:	xor    DWORD PTR [ebx],ebp
  4183d5:	sub    al,0xd5
  4183d7:	and    bl,bh
  4183d9:	mov    ah,0xcb
  4183db:	inc    bh
  4183dd:	mov    al,0xa6
  4183df:	inc    edi
  4183e0:	int3   
  4183e1:	das    
  4183e2:	cs ds push ebx
  4183e5:	ror    DWORD PTR [ecx+0x23],cl
  4183e8:	cmp    edi,edi
  4183ea:	ds jbe 0x41840b
  4183ed:	cmp    al,0x56
  4183ef:	cmp    dh,ah
  4183f1:	dec    ebx
  4183f2:	jmp    0x7191:0x2e0c712f
  4183f9:	fwait
  4183fa:	xchg   DWORD PTR [ecx],ebp
  4183fc:	ins    BYTE PTR es:[edi],dx
  4183fd:	dec    ecx
  4183fe:	and    BYTE PTR [edx],dh
  418400:	pop    ebp
  418401:	fstp   DWORD PTR [eax+0x4551e1c8]
  418407:	icebp  
  418408:	fisttp WORD PTR [ecx-0x621c5797]
  41840e:	sub    ebx,DWORD PTR ds:0x53d3adb9
  418414:	mov    WORD PTR [edx-0x6c082674],?
  41841a:	xchg   ecx,eax
  41841b:	mov    ebp,0xda77f8d0
  418420:	mov    al,0xaa
  418422:	stc    
  418423:	xor    BYTE PTR [eax],0x1e
  418426:	loopne 0x418499
  418428:	es ds xchg edx,eax
  41842b:	clc    
  41842c:	loop   0x41840b
  41842e:	fild   WORD PTR [edx-0x257a1bcc]
  418434:	call   0x224f437
  418439:	xchg   esp,eax
  41843a:	je     0x418491
  41843c:	push   esi
  41843d:	inc    esi
  41843e:	mov    gs,WORD PTR [esi]
  418440:	push   eax
  418441:	or     BYTE PTR [ebp+ebx*8-0x64],al
  418445:	not    DWORD PTR [ebx+0x2935e78f]
  41844b:	mov    ds:0xfa945963,eax
  418450:	in     al,0x92
  418452:	call   0xd860:0x80ea1916
  418459:	lds    eax,FWORD PTR [eax+0x6b321766]
  41845f:	mov    ebp,ds
  418461:	fwait
  418462:	mov    cl,0xaa
  418464:	call   0x1cf1:0xf5813bac
  41846b:	jp     0x41849b
  41846d:	pusha  
  41846e:	shr    BYTE PTR [esi+eiz*8+0x2c],1
  418472:	cmp    eax,0xeecce374
  418477:	data16 (bad) 
  41847a:	lahf   
  41847b:	mov    esp,0xcb12a348
  418480:	mov    al,ds:0x8238cca0
  418485:	aas    
  418486:	mov    ebx,DWORD PTR [edx+0x927451d]
  41848c:	retf   
  41848d:	jne    0x4184cb
  41848f:	enter  0x38bd,0x63
  418493:	xchg   ecx,eax
  418494:	mov    WORD PTR [eax+edx*4],es
  418497:	sbb    ah,ah
  418499:	ffreep st(3)
  41849b:	ins    BYTE PTR es:[edi],dx
  41849c:	stos   BYTE PTR es:[edi],al
  41849d:	fs mov ecx,0xc74d0d17
  4184a3:	cmp    dh,BYTE PTR [eax+0x69]
  4184a6:	test   BYTE PTR [edi-0x1f],0x3d
  4184aa:	inc    edi
  4184ab:	add    ebp,DWORD PTR [esi]
  4184ad:	in     al,dx
  4184ae:	ins    BYTE PTR es:[edi],dx
  4184af:	std    
  4184b0:	outs   dx,DWORD PTR ds:[esi]
  4184b1:	mov    cl,0x6e
  4184b3:	sub    cl,0x54
  4184b6:	ret    0x7993
  4184b9:	mov    dh,BYTE PTR [edi-0x6]
  4184bc:	mov    esi,0xc9f17a83
  4184c1:	pop    ebx
  4184c2:	cwde   
  4184c3:	cmp    cl,BYTE PTR [edi+0x42]
  4184c6:	rcr    BYTE PTR [edi],0x2b
  4184c9:	aam    0x47
  4184cb:	ror    ebp,1
  4184cd:	jle    0x418480
  4184cf:	call   0x4c0551c5
  4184d4:	sbb    ebp,esi
  4184d6:	iret   
  4184d7:	ins    DWORD PTR es:[edi],dx
  4184d8:	outs   dx,BYTE PTR ds:[esi]
  4184d9:	int3   
  4184da:	shr    DWORD PTR [edi-0x2d729c88],1
  4184e0:	jae    0x418520
  4184e2:	gs pop es
  4184e4:	adc    BYTE PTR [esi-0x80],dl
  4184e7:	pop    es
  4184e8:	cld    
  4184e9:	add    DWORD PTR [esi+0x246db5d0],0xe3a7c811
  4184f3:	mov    ah,0x36
  4184f5:	inc    esi
  4184f6:	fadd   st,st(7)
  4184f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184f9:	js     0x41848a
  4184fb:	mov    al,0x3c
  4184fd:	jbe    0x4184e5
  4184ff:	sbb    eax,0x23f7d512
  418504:	pop    ss
  418505:	(bad)  
  418506:	sti    
  418507:	jbe    0x41850b
  418509:	add    ebx,edx
  41850b:	int3   
  41850c:	out    dx,al
  41850d:	xchg   ebp,eax
  41850e:	pop    esp
  41850f:	sbb    DWORD PTR [ecx+ebp*8-0x20133aec],ecx
  418516:	and    esp,DWORD PTR [ebp-0x16018608]
  41851c:	pop    ebp
  41851d:	icebp  
  41851e:	or     al,0xd1
  418520:	into   
  418521:	fstp   DWORD PTR [ebx+0x3ddee049]
  418527:	pusha  
  418528:	inc    eax
  418529:	dec    eax
  41852a:	dec    edx
  41852b:	dec    edx
  41852c:	jl     0x4184b6
  41852e:	outs   dx,BYTE PTR ds:[esi]
  41852f:	jae    0x4184fd
  418531:	adc    dh,BYTE PTR [edi+0x66]
  418534:	ds loopne 0x418566
  418537:	push   0xfffffffe
  418539:	pop    edx
  41853a:	dec    esi
  41853b:	les    ebp,FWORD PTR [esi-0x1f29bb5a]
  418541:	push   eax
  418542:	xor    cl,BYTE PTR [edi-0xb590fc8]
  418548:	or     bl,BYTE PTR [edx+esi*4-0x550d8112]
  41854f:	push   ebp
  418550:	pop    edi
  418551:	and    BYTE PTR [ecx],ch
  418553:	add    eax,0x7a0adc76
  418558:	sbb    DWORD PTR [ebx+0x706f7e7],eax
  41855e:	out    dx,al
  41855f:	pop    esp
  418560:	xchg   edx,eax
  418561:	popf   
  418562:	lock icebp 
  418564:	jno    0x418593
  418566:	cmp    DWORD PTR [esi+0x7feb463b],esi
  41856c:	cmp    ecx,edx
  41856e:	call   0x82b8:0xbd18b715
  418575:	adc    al,0xf2
  418577:	pushf  
  418578:	loop   0x418555
  41857a:	cmp    al,0x6c
  41857c:	test   DWORD PTR [esi-0x47],ebp
  41857f:	adc    cl,BYTE PTR [edx+0x60d606a1]
  418585:	mov    ebx,0xd0e078a4
  41858a:	xchg   ecx,eax
  41858b:	out    dx,eax
  41858c:	mov    WORD PTR [edx-0x201bfb15],gs
  418592:	leave  
  418593:	add    dl,BYTE PTR [edx-0x2f]
  418596:	test   al,0x9b
  418598:	sub    al,0x75
  41859a:	mov    cl,0x22
  41859c:	inc    eax
  41859d:	sahf   
  41859e:	and    eax,0x32d042f8
  4185a3:	ja     0x4185d7
  4185a5:	pop    esi
  4185a6:	mov    ch,BYTE PTR [eax-0xd]
  4185a9:	hlt    
  4185aa:	data16 add BYTE PTR [ebp+0x38],dh
  4185ae:	rol    BYTE PTR cs:[ebp+0x4cd7eaa8],1
  4185b5:	call   0xf63e:0x9ed5ef46
  4185bc:	loopne 0x418571
  4185be:	test   al,0x3a
  4185c0:	sub    eax,0x6fe95534
  4185c5:	sbb    BYTE PTR [ecx],ah
  4185c7:	test   eax,0xaf99c797
  4185cc:	xor    DWORD PTR [ecx-0x4f],esi
  4185cf:	loopne 0x4185a9
  4185d1:	or     ebp,ebx
  4185d3:	out    0x8c,eax
  4185d5:	adc    BYTE PTR [eax+0xe11e13a],bl
  4185db:	jp     0x4185ce
  4185dd:	mov    bh,0x82
  4185df:	mov    ds:0x7f3fe120,eax
  4185e4:	and    cl,BYTE PTR [edx-0x6a]
  4185e7:	in     al,0xea
  4185e9:	mov    ebp,0x5bc2e844
  4185ee:	dec    eax
  4185ef:	pop    ss
  4185f0:	sbb    eax,0x88e6d37b
  4185f5:	sahf   
  4185f6:	mov    cl,0x40
  4185f8:	mov    ds:0x60dcda52,eax
  4185fd:	sub    eax,0x941212ce
  418602:	push   edx
  418603:	idiv   DWORD PTR [ebp+eiz*4+0x56]
  418607:	mov    edi,0x55a09d91
  41860c:	sahf   
  41860d:	neg    DWORD PTR [esi+ebp*1]
  418610:	mov    al,ds:0x9f04a904
  418615:	pop    esp
  418616:	stos   BYTE PTR es:[di],al
  418618:	call   0x9103:0xdb8ec4bc
  41861f:	lea    edx,ss:[eax+0x417b422d]
  418626:	mov    al,0x6a
  418628:	dec    edx
  418629:	fmul   st(1),st
  41862b:	gs ret 
  41862d:	fwait
  41862e:	dec    edi
  41862f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418630:	(bad)  
  418631:	shr    BYTE PTR [ecx+0x5c33bc2f],0x56
  418638:	sub    ebx,DWORD PTR [eax+0x668bdd8a]
  41863e:	adc    dh,BYTE PTR [esi]
  418640:	call   0x7f94:0x800964db
  418647:	cld    
  418648:	add    DWORD PTR [esi],0x28
  41864b:	ret    0x2df7
  41864e:	and    al,BYTE PTR [edx+0x3e]
  418651:	jno    0x4185fd
  418653:	pop    ecx
  418654:	fld    DWORD PTR [ebp-0x4f]
  418657:	inc    edi
  418658:	pop    edx
  418659:	cmp    eax,0xdada3ebf
  41865e:	pop    ecx
  41865f:	adc    eax,DWORD PTR [edx]
  418661:	cmp    DWORD PTR [ebp-0x2b],ecx
  418664:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  418666:	shl    edi,cl
  418668:	and    eax,0x92df534b
  41866d:	dec    edi
  41866e:	lds    ecx,FWORD PTR [edx+0x7b]
  418671:	ins    DWORD PTR es:[edi],dx
  418672:	in     al,0x7d
  418674:	and    al,dh
  418676:	je     0x418659
  418678:	cmp    al,0x6b
  41867a:	jecxz  0x41862b
  41867c:	in     al,0xb6
  41867e:	aaa    
  41867f:	pop    eax
  418680:	fcmovbe st,st(1)
  418682:	shr    BYTE PTR [edi],0x6c
  418685:	aam    0x87
  418687:	mov    ah,0x49
  418689:	mov    ebp,0x7baa30fb
  41868e:	xchg   edx,eax
  41868f:	xchg   ebx,eax
  418690:	(bad)  
  418691:	xor    DWORD PTR [edi+0x2b66a888],esp
  418697:	pop    eax
  418698:	inc    DWORD PTR [edx]
  41869a:	sbb    ch,BYTE PTR [edx]
  41869c:	pop    ebx
  41869d:	fild   DWORD PTR [ebx-0x72]
  4186a0:	test   eax,0x3ee346a3
  4186a5:	push   0x29b22455
  4186aa:	xchg   esi,eax
  4186ab:	ds hlt 
  4186ad:	dec    DWORD PTR [edx-0x4b]
  4186b0:	add    al,0xca
  4186b2:	pop    edx
  4186b3:	inc    edx
  4186b4:	push   esp
  4186b5:	pop    edx
  4186b6:	sti    
  4186b7:	in     al,0x4f
  4186b9:	or     ecx,DWORD PTR [eax+edi*1-0x3a]
  4186bd:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4186bf:	leave  
  4186c0:	int    0xe4
  4186c2:	xchg   esp,eax
  4186c3:	lea    edx,[ebx]
  4186c5:	or     ecx,DWORD PTR [ebx-0x54279015]
  4186cb:	imul   edi,DWORD PTR [ecx-0x41fc526d],0xd50de6c5
  4186d5:	out    0x9e,eax
  4186d7:	test   eax,0x95e3668f
  4186dc:	push   0xd2627e82
  4186e1:	cmp    edi,DWORD PTR [esi+0x359b8b29]
  4186e7:	in     al,0x5d
  4186e9:	dec    ecx
  4186ea:	or     eax,ecx
  4186ec:	icebp  
  4186ed:	push   ss
  4186ee:	sbb    eax,0xb77e31fe
  4186f3:	pop    es
  4186f4:	test   eax,0xc889f0bb
  4186f9:	mov    BYTE PTR [ebp+0x712a0d2d],bh
  4186ff:	xchg   ecx,eax
  418700:	and    al,0xa9
  418702:	sar    DWORD PTR [ebp-0x1e],1
  418705:	aaa    
  418706:	mov    edx,0xdbfdd1f4
  41870b:	retf   
  41870c:	les    eax,FWORD PTR [eax-0x11]
  41870f:	sub    eax,0x325ebed6
  418714:	mov    WORD PTR [eax+0x41411b1f],cs
  41871a:	fild   QWORD PTR [ecx]
  41871c:	aaa    
  41871d:	loopne 0x418761
  41871f:	mov    ah,0xb2
  418721:	fs push ebx
  418723:	inc    edi
  418724:	cmp    DWORD PTR [edx+0x20e97bbe],ebp
  41872a:	fcmovnu st,st(7)
  41872c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41872d:	dec    edx
  41872e:	sub    esi,DWORD PTR [esi-0x75]
  418731:	int3   
  418732:	xor    al,0x14
  418734:	ret    0x3d96
  418737:	bound  esi,QWORD PTR [ebp+0x3fd7ffeb]
  41873d:	mov    ecx,0xc88c6229
  418742:	xchg   esp,eax
  418743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418744:	or     edx,DWORD PTR [ebp+0x1]
  418747:	add    DWORD PTR [eax],eax
  418749:	clc    
  41874a:	add    al,0x0
  41874c:	add    cl,dl
  41874e:	mov    bh,0x2b
  418750:	adc    dh,BYTE PTR [edx+0x74b730f5]
  418756:	outs   dx,BYTE PTR ds:[esi]
  418757:	cmp    eax,0xe73c6a85
  41875c:	fst    st(5)
  41875e:	or     ebp,DWORD PTR [ecx+0x30]
  418761:	pop    esi
  418762:	add    BYTE PTR [eax+ebp*1-0x6b],cl
  418766:	push   cs
  418767:	pop    esi
  418768:	ud0    edx,DWORD PTR [esi-0x77637f2f]
  41876f:	mov    bl,0xd2
  418771:	mov    dl,0x72
  418773:	push   DWORD PTR [edi]
  418775:	dec    edi
  418776:	xor    BYTE PTR [ecx+0x11],al
  418779:	cmp    BYTE PTR ds:0xd44971dc,dh
  41877f:	mov    esi,0x287e629a
  418784:	jmp    0xcedb1141
  418789:	pop    eax
  41878a:	adc    ecx,DWORD PTR ds:0xa0b92fa7
  418790:	xchg   esp,eax
  418791:	(bad)  
  418792:	ror    DWORD PTR [edx+0x31],0x82
  418796:	loop   0x4187dc
  418798:	jb     0x4187bd
  41879a:	mov    ch,BYTE PTR [eax-0x74]
  41879d:	push   cs
  41879e:	les    ebx,FWORD PTR [eax]
  4187a0:	cmp    cl,BYTE PTR [esi-0x53]
  4187a3:	mov    eax,ebp
  4187a5:	ficomp DWORD PTR [ebp+0x59]
  4187a8:	cmp    eax,0xa4ea76ef
  4187ad:	dec    ebx
  4187ae:	out    dx,al
  4187af:	in     eax,dx
  4187b0:	mov    esi,0x67b85681
  4187b5:	lods   al,BYTE PTR ds:[esi]
  4187b6:	xchg   edi,eax
  4187b7:	cmc    
  4187b8:	jo     0x418820
  4187ba:	es jmp 0xf940:0x5b553a77
  4187c2:	ret    0xc614
  4187c5:	out    0x77,eax
  4187c7:	mov    cl,0x58
  4187c9:	outs   dx,DWORD PTR ds:[esi]
  4187ca:	adc    dl,BYTE PTR [ebp+0x49008faa]
  4187d0:	ret    
  4187d1:	sbb    al,0x70
  4187d3:	idiv   DWORD PTR [eax-0x42b88b46]
  4187d9:	nop
  4187da:	lods   al,BYTE PTR ds:[esi]
  4187db:	bound  edx,QWORD PTR [eax]
  4187dd:	cmp    eax,0x8ac7fef3
  4187e2:	and    BYTE PTR [edi+0x6d],cl
  4187e5:	jle    0x4187fa
  4187e7:	sub    esi,DWORD PTR [eax-0xa]
  4187ea:	daa    
  4187eb:	mov    ds:0xef70b073,eax
  4187f0:	jle    0x4187d7
  4187f2:	out    dx,eax
  4187f3:	shl    esi,0xd3
  4187f6:	adc    DWORD PTR [eax+0x7f],ebp
  4187f9:	mov    cl,0x3e
  4187fb:	pop    ebp
  4187fc:	imul   ecx,DWORD PTR [esi+0x57098ea6],0xffffffea
  418803:	ret    0x948c
  418806:	shl    BYTE PTR [ecx+ebp*2+0x5ed081cb],1
  41880d:	push   es
  41880e:	test   BYTE PTR [edi+0x29],bl
  418811:	adc    al,0xe3
  418813:	std    
  418814:	sbb    DWORD PTR [edx-0x884579b],eax
  41881a:	xchg   edi,eax
  41881b:	mov    bl,0xd
  41881d:	popa   
  41881e:	loop   0x418850
  418820:	jo     0x418853
  418822:	pusha  
  418823:	aaa    
  418824:	push   ebx
  418825:	stc    
  418826:	xchg   edi,eax
  418827:	in     al,0x1d
  418829:	int    0x3a
  41882b:	mov    cl,dh
  41882d:	mov    esp,0x1a81e1b4
  418832:	lea    ebx,ds:0xb18115e8
  418838:	inc    eax
  418839:	inc    esp
  41883a:	gs dec eax
  41883c:	icebp  
  41883d:	(bad)  
  41883e:	jns    0x41884a
  418840:	adc    bl,al
  418842:	adc    DWORD PTR [ecx-0x2b0decd6],ebx
  418848:	mov    BYTE PTR [edx+0x0],dh
  41884b:	(bad)
  41884f:	jg     0x418842
  418851:	inc    ebp
  418852:	das    
  418853:	xlat   BYTE PTR ds:[ebx]
  418854:	inc    ecx
  418855:	adc    bh,BYTE PTR [eax-0x6f01eff4]
  41885b:	fucom  st(7)
  41885d:	cli    
  41885e:	loop   0x418813
  418860:	mov    cl,0x16
  418862:	sub    bh,BYTE PTR [eax-0x29]
  418865:	dec    edx
  418866:	jns    0x4188a3
  418868:	mov    eax,gs:0x62f4c13d
  41886e:	dec    eax
  41886f:	in     al,dx
  418870:	xor    ecx,DWORD PTR [edi+0x7c6c8801]
  418876:	mov    DWORD PTR [esp+edi*2-0x4b],esi
  41887a:	pop    edi
  41887b:	jmp    0xcbbd27d4
  418880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418881:	dec    ebx
  418882:	popf   
  418883:	sub    cl,BYTE PTR [edi+edx*2+0x1d3e7c44]
  41888a:	mov    ds:0x73ab85c6,eax
  41888f:	rcr    BYTE PTR [edx-0x7f],0xf
  418893:	dec    esi
  418894:	push   eax
  418895:	and    al,0xa8
  418897:	cld    
  418898:	cld    
  418899:	jno    0x418829
  41889b:	jb     0x41890c
  41889d:	and    al,dh
  41889f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a0:	pop    ebp
  4188a1:	and    eax,0x34b31023
  4188a6:	xchg   ebx,eax
  4188a7:	sbb    eax,0xc1da8b34
  4188ac:	rol    BYTE PTR [eax+ecx*1+0x29d96897],0xaf
  4188b4:	jb     0x4188f8
  4188b6:	jae    0x4188c9
  4188b8:	xor    al,0x1a
  4188ba:	nop
  4188bb:	mov    ds:0x9b29bb78,al
  4188c0:	inc    esi
  4188c1:	shl    ch,1
  4188c3:	or     dh,dh
  4188c5:	pop    ds
  4188c6:	adc    al,0xa6
  4188c8:	jbe    0x418904
  4188ca:	loope  0x41891d
  4188cc:	jmp    0x41891d
  4188ce:	icebp  
  4188cf:	std    
  4188d0:	scas   al,BYTE PTR es:[edi]
  4188d1:	mov    ch,0x87
  4188d3:	cmp    eax,0x4d35a9a6
  4188d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188d9:	sbb    al,BYTE PTR [ebx-0x28e4f15a]
  4188df:	jmp    0xb538:0x8dc19fc
  4188e6:	xchg   esi,eax
  4188e7:	xor    BYTE PTR [esi],dh
  4188e9:	hlt    
  4188ea:	imul   eax,edi,0x7010ebda
  4188f0:	mov    BYTE PTR [ebp+0x6b0bbfd7],dl
  4188f6:	mov    bh,0xc7
  4188f8:	ret    
  4188f9:	sbb    al,0x6e
  4188fb:	test   BYTE PTR [esi+edx*4-0x1b],al
  4188ff:	dec    esi
  418900:	lock xchg esp,eax
  418902:	jg     0x418927
  418904:	je     0x418914
  418906:	punpckhwd mm6,QWORD PTR [ebp+0x7169c648]
  41890d:	ret    
  41890e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41890f:	mov    edi,0x8bb6edf1
  418914:	xchg   ebp,eax
  418915:	idiv   BYTE PTR [ebp-0x4f9f100e]
  41891b:	in     al,0x94
  41891d:	sbb    eax,0x26c59fde
  418922:	add    al,0x38
  418924:	loope  0x4189a4
  418926:	pop    esi
  418927:	rol    BYTE PTR ds:0xd4a073e2,0x96
  41892e:	punpckhwd mm1,QWORD PTR [esi-0x7d]
  418932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418933:	or     eax,0x3886c60b
  418938:	xchg   edi,eax
  418939:	in     al,dx
  41893a:	es pop edi
  41893c:	inc    eax
  41893d:	push   esp
  41893e:	mov    ds:0xfbd7b136,al
  418943:	jecxz  0x418968
  418945:	shl    DWORD PTR [ebx-0x2e],cl
  418948:	and    eax,0x9b04dacb
  41894d:	into   
  41894e:	loopne 0x41896f
  418950:	mov    al,0xec
  418952:	inc    esp
  418953:	sbb    al,0x79
  418955:	push   ebx
  418956:	mov    fs,WORD PTR [eax-0xc]
  418959:	add    cl,bl
  41895b:	mov    esi,0xfcbce6d1
  418960:	mov    ah,0xce
  418962:	inc    ecx
  418963:	test   al,0x62
  418965:	pop    ss
  418966:	test   eax,0xaacc01e7
  41896b:	out    dx,al
  41896c:	lea    esi,[esi-0x6b]
  41896f:	mov    dh,0xda
  418971:	test   eax,0x70efd14b
  418976:	mov    eax,ds:0xf9f77012
  41897b:	sbb    eax,0x785a713c
  418980:	push   eax
  418981:	jl     0x4189a4
  418983:	ror    DWORD PTR [ebx],cl
  418985:	out    0xdb,al
  418987:	cmc    
  418988:	into   
  418989:	mov    bl,0x39
  41898b:	loop   0x418962
  41898d:	jnp    0x41897a
  41898f:	inc    esp
  418990:	cdq    
  418991:	mov    ah,0xd5
  418993:	xchg   esp,eax
  418994:	sbb    dh,dl
  418996:	mov    dh,0x66
  418998:	lods   al,BYTE PTR ds:[esi]
  418999:	mov    ds:0xb302b986,al
  41899e:	scas   eax,DWORD PTR es:[edi]
  41899f:	push   0x39df4aeb
  4189a4:	stos   BYTE PTR es:[edi],al
  4189a5:	arpl   WORD PTR [ebp-0x17],cx
  4189a8:	mov    al,BYTE PTR [edi+eax*8+0x9]
  4189ac:	dec    edx
  4189ad:	jge    0x4189c6
  4189af:	jmp    0x418a23
  4189b1:	push   ebx
  4189b2:	enter  0x9254,0x44
  4189b6:	xor    DWORD PTR [ebp-0x62],ecx
  4189b9:	jl     0x41893c
  4189bb:	test   DWORD PTR [esi+0x6e],ecx
  4189be:	fimul  DWORD PTR [ebx]
  4189c0:	sub    BYTE PTR [ebp-0x1b],ah
  4189c3:	sti    
  4189c4:	add    eax,0xf8148e62
  4189c9:	imul   ecx,DWORD PTR [edx-0x34],0x458c5ddd
  4189d0:	adc    BYTE PTR [eax],ah
  4189d2:	lea    ebp,[ecx+eax*8-0x1f5e8b13]
  4189d9:	inc    esp
  4189da:	out    dx,al
  4189db:	pop    edi
  4189dc:	loop   0x418970
  4189de:	sbb    dl,ah
  4189e0:	jbe    0x4189ac
  4189e2:	cwde   
  4189e3:	rcr    BYTE PTR ds:0x5439ea18,cl
  4189e9:	sysenter 
  4189eb:	test   al,0x89
  4189ed:	fidiv  DWORD PTR [edx+0x34]
  4189f0:	stc    
  4189f1:	dec    esp
  4189f2:	inc    eax
  4189f3:	imul   esi,DWORD PTR [edx-0x63],0x8b0a754f
  4189fa:	call   0x3c2d:0xa3de7ec7
  418a01:	or     eax,DWORD PTR [ebp+0xb7be8ea]
  418a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a08:	push   0x2c
  418a0a:	mov    ds:0x9b86d101,al
  418a0f:	mov    bh,0x6d
  418a11:	mov    esi,0xc26b2e19
  418a16:	cmp    al,0x5f
  418a18:	or     al,0x61
  418a1a:	mov    ecx,0xd29c0914
  418a1f:	cdq    
  418a20:	push   cs
  418a21:	mov    bh,0xd0
  418a23:	sbb    esi,eax
  418a25:	sbb    BYTE PTR [eax+0x4af6d988],ch
  418a2b:	pop    ds
  418a2c:	repnz data16 and BYTE PTR [edi],al
  418a30:	mov    al,ds:0xa31b56af
  418a35:	and    BYTE PTR [ecx],al
  418a37:	test   dl,al
  418a39:	dec    esp
  418a3a:	fidivr WORD PTR [ebx-0x42]
  418a3d:	add    DWORD PTR [esi],0xffffffd9
  418a40:	adc    DWORD PTR [esi],ebp
  418a42:	dec    ecx
  418a43:	pusha  
  418a44:	ret    
  418a45:	out    dx,eax
  418a46:	fcomp  QWORD PTR [eax]
  418a48:	push   cs
  418a49:	mov    bl,0x7c
  418a4b:	push   es
  418a4c:	(bad)  
  418a4d:	scas   al,BYTE PTR es:[edi]
  418a4e:	daa    
  418a4f:	push   ecx
  418a50:	ins    BYTE PTR es:[edi],dx
  418a51:	test   al,0x26
  418a53:	shl    BYTE PTR [edx+0x54ad4ae0],1
  418a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a5a:	and    al,0x3b
  418a5c:	jnp    0x4189f7
  418a5e:	mov    ah,0x1a
  418a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a61:	xchg   ebp,eax
  418a62:	mov    ecx,0x6efcf0e2
  418a67:	sbb    eax,DWORD PTR [ebx]
  418a69:	dec    ebx
  418a6a:	popf   
  418a6b:	and    dl,dh
  418a6d:	sbb    al,0x77
  418a6f:	ins    BYTE PTR es:[edi],dx
  418a70:	outs   dx,DWORD PTR ds:[esi]
  418a71:	(bad)  
  418a72:	xlat   BYTE PTR ds:[ebx]
  418a73:	sbb    DWORD PTR [ecx],eax
  418a75:	jmp    0x77e7:0x251f33b0
  418a7c:	in     eax,dx
  418a7d:	aaa    
  418a7e:	push   eax
  418a7f:	push   0x18a6e0ab
  418a84:	mov    dl,0xed
  418a86:	repnz jecxz 0x418aa3
  418a89:	popf   
  418a8a:	imul   BYTE PTR [ecx-0x3a989724]
  418a90:	shr    DWORD PTR ds:[edx],1
  418a93:	shr    esp,cl
  418a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a96:	or     eax,0x60cfc9bd
  418a9b:	adc    al,0x28
  418a9d:	sbb    eax,0xa5d5bf93
  418aa2:	cmp    BYTE PTR [ecx+esi*1+0x3d0d38de],0xc3
  418aaa:	out    dx,al
  418aab:	cmp    bh,ch
  418aad:	in     al,0x7d
  418aaf:	daa    
  418ab0:	outs   dx,BYTE PTR ds:[esi]
  418ab1:	or     al,bl
  418ab3:	ficom  WORD PTR [ebx]
  418ab5:	inc    esp
  418ab6:	pop    esp
  418ab7:	sbb    edi,esi
  418ab9:	push   esp
  418aba:	push   es
  418abb:	idiv   DWORD PTR [ecx]
  418abd:	push   ds
  418abe:	and    ecx,DWORD PTR [ebx+0x407fe525]
  418ac4:	pop    edi
  418ac5:	loop   0x418b33
  418ac7:	gs pop eax
  418ac9:	dec    edx
  418aca:	mov    ds:0xfb3fb9e,eax
  418acf:	mov    ah,0x8b
  418ad1:	arpl   si,dx
  418ad3:	cmp    ah,BYTE PTR [ebp+0x1d]
  418ad6:	imul   ebp,DWORD PTR [ebp+0x51a4b4c8],0x7014a0d3
  418ae0:	es into 
  418ae2:	or     eax,0x464b5e3
  418ae7:	(bad)  
  418ae8:	lea    ebx,[ecx+0x443f754a]
  418aee:	ds int 0xe5
  418af1:	icebp  
  418af2:	(bad)  
  418af3:	jecxz  0x418aba
  418af5:	out    dx,al
  418af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418af7:	adc    BYTE PTR [ebx],dh
  418af9:	push   es
  418afa:	int    0xe7
  418afc:	mov    DWORD PTR [esi+0x10],0xe01cbe91
  418b03:	dec    ecx
  418b04:	ror    DWORD PTR [ecx+0x2779c756],0xde
  418b0b:	jge    0x418ace
  418b0d:	add    eax,0x7998fc0d
  418b12:	loope  0x418aa0
  418b14:	jge    0x418aef
  418b16:	mov    esp,0x8fc17f42
  418b1b:	xor    DWORD PTR [ebx-0x210ba42c],0xffffffd8
  418b22:	xor    ebx,ebx
  418b24:	add    DWORD PTR [edx+0x3a],esi
  418b27:	mov    ebx,0x47020276
  418b2c:	imul   esp,DWORD PTR [eax+0x20],0x2f75989e
  418b33:	adc    esp,ebx
  418b35:	out    0x7,eax
  418b37:	adc    DWORD PTR [edx],eax
  418b39:	mov    ds:0x545dbe8c,eax
  418b3e:	sar    BYTE PTR [ebp+edx*1-0x1985ed64],1
  418b45:	jns    0x418b69
  418b47:	cmp    ebx,ecx
  418b49:	push   esp
  418b4a:	pusha  
  418b4b:	mov    BYTE PTR ds:0x82217375,bh
  418b51:	(bad)  
  418b52:	pop    ss
  418b53:	retf   0x88a7
  418b56:	jecxz  0x418b01
  418b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b59:	mov    ecx,ecx
  418b5b:	fimul  WORD PTR ds:0xe3b9a9dd
  418b61:	addr16 cld 
  418b63:	xor    edx,DWORD PTR [eax-0x4a]
  418b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b67:	sub    DWORD PTR [eax+0x72],esi
  418b6a:	jnp    0x418be3
  418b6c:	and    ebp,DWORD PTR [esi+0x362bae36]
  418b72:	sahf   
  418b73:	mov    cl,BYTE PTR [esi]
  418b75:	mov    ch,0xb8
  418b77:	fisubr WORD PTR [eax]
  418b79:	cmp    eax,0xfce6bce8
  418b7e:	xchg   ecx,eax
  418b7f:	push   es
  418b80:	mov    ebx,DWORD PTR [edx+ecx*8-0x25871381]
  418b87:	enter  0xfb9e,0xe9
  418b8b:	pusha  
  418b8c:	(bad)  
  418b8d:	inc    esi
  418b8e:	(bad)  
  418b8f:	stc    
  418b90:	pushf  
  418b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b92:	sub    al,0x7b
  418b94:	xchg   esp,eax
  418b95:	maxps  xmm5,XMMWORD PTR [ecx-0x2866d7ee]
  418b9c:	mov    BYTE PTR [edi-0x1bb9715f],cl
  418ba2:	(bad)  [esp+ecx*4+0x2a51f274]
  418ba9:	mov    dh,0x10
  418bab:	mov    cl,0x16
  418bad:	pusha  
  418bae:	inc    edx
  418baf:	es dec eax
  418bb1:	sbb    bl,BYTE PTR [ebx]
  418bb3:	dec    edi
  418bb4:	adc    dh,BYTE PTR [eax-0x21]
  418bb7:	jecxz  0x418b45
  418bb9:	xor    BYTE PTR [esi+0x61],bh
  418bbc:	mov    edi,0x862f9044
  418bc1:	mov    ch,0x14
  418bc3:	mov    bh,0x8a
  418bc5:	loopne 0x418b68
  418bc7:	push   ebp
  418bc8:	data16 or bh,dl
  418bcb:	mov    edi,0xbd6b1594
  418bd0:	call   FWORD PTR [ebp+0x6f745184]
  418bd6:	sub    DWORD PTR [eax],ebx
  418bd8:	push   es
  418bd9:	fadd   DWORD PTR [esi]
  418bdb:	out    0x1e,eax
  418bdd:	jmp    0xba74:0x2ae7d75e
  418be4:	in     eax,dx
  418be5:	inc    ebp
  418be6:	cmp    eax,0xb1253c15
  418beb:	xor    dh,BYTE PTR [ebx]
  418bed:	mov    bl,0xae
  418bef:	rcl    ebp,1
  418bf1:	pop    eax
  418bf2:	add    eax,0xcffc0a72
  418bf7:	shl    DWORD PTR ds:0x8eedf25a,0xe8
  418bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bff:	cmp    bh,BYTE PTR [edi+0x4c]
  418c02:	jmp    0x418c1d
  418c04:	adc    ch,BYTE PTR [edi+0x1cff8c4d]
  418c0a:	mov    cl,0xf3
  418c0c:	out    0xa4,eax
  418c0e:	cmp    esi,esi
  418c10:	dec    ebp
  418c11:	lahf   
  418c12:	and    DWORD PTR [ebx+ebx*8],ebx
  418c15:	jmp    0x5b53:0xf43c24bc
  418c1c:	jge    0x418c98
  418c1e:	stos   DWORD PTR es:[edi],eax
  418c1f:	mov    esi,0x556f0ec0
  418c24:	inc    edx
  418c25:	cdq    
  418c26:	loop   0x418c88
  418c28:	pop    ss
  418c29:	sub    edi,edx
  418c2b:	add    al,0x67
  418c2d:	add    edi,DWORD PTR [ecx+0x43]
  418c30:	pop    eax
  418c31:	mov    ds:0x55457d59,al
  418c36:	fs mov esi,eax
  418c39:	loopne 0x418c74
  418c3b:	lods   al,BYTE PTR ds:[esi]
  418c3c:	arpl   WORD PTR cs:[eax+edi*1+0x30],dx
  418c41:	test   DWORD PTR [ebx+0x6d9e8a40],ebx
  418c47:	not    esi
  418c49:	neg    esi
  418c4b:	mov    edi,0xa13de6d
  418c50:	jge    0x418bdc
  418c52:	push   edi
  418c53:	add    DWORD PTR [ecx+0x4d],ecx
  418c56:	push   es
  418c57:	add    DWORD PTR [eax],eax
  418c59:	clc    
  418c5a:	add    al,0x0
  418c5c:	add    BYTE PTR [ecx+0x85f105b],dh
  418c62:	adc    edx,DWORD PTR [esp+edx*4-0x4e]
  418c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c67:	into   
  418c68:	adc    al,0x17
  418c6a:	(bad)  
  418c6b:	pop    sp
  418c6d:	cdq    
  418c6e:	xchg   ebx,eax
  418c6f:	stc    
  418c70:	pop    esi
  418c71:	mov    BYTE PTR [ebx],ah
  418c73:	loopne 0x418c1c
  418c75:	aas    
  418c76:	sbb    al,0x8a
  418c78:	cmp    bl,BYTE PTR [edx+0x28]
  418c7b:	ins    DWORD PTR es:[edi],dx
  418c7c:	ins    DWORD PTR es:[edi],dx
  418c7d:	add    eax,0xd835e439
  418c82:	mov    ecx,ss
  418c84:	ins    DWORD PTR es:[edi],dx
  418c85:	fucomp st(2)
  418c87:	sub    BYTE PTR [ebx-0x7c8a8614],0x58
  418c8e:	(bad)  
  418c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c90:	and    eax,0x2f45b7b7
  418c95:	jmp    0xefe463e4
  418c9a:	loop   0x418cb0
  418c9c:	xchg   ecx,eax
  418c9d:	push   esi
  418c9e:	cwde   
  418c9f:	jb     0x418cf4
  418ca1:	mov    eax,0x90aa132c
  418ca6:	cdq    
  418ca7:	daa    
  418ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ca9:	mov    BYTE PTR [ecx],ch
  418cab:	(bad)  
  418cac:	pop    esi
  418cad:	in     eax,dx
  418cae:	aad    0xfa
  418cb0:	aam    0x4d
  418cb2:	mov    dh,BYTE PTR [ebx+0x7]
  418cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cb6:	pop    edi
  418cb7:	cmp    BYTE PTR [ecx+0x7affb16e],bl
  418cbd:	fild   QWORD PTR [eax-0x33]
  418cc0:	imul   eax,DWORD PTR [ebp-0x11],0x736993d2
  418cc7:	cmp    al,BYTE PTR [eax+0x28818f7d]
  418ccd:	ins    BYTE PTR es:[edi],dx
  418cce:	add    bl,dh
  418cd0:	aad    0x9d
  418cd2:	pop    ebx
  418cd3:	shl    BYTE PTR [ebx],cl
  418cd5:	test   eax,0x66e686e9
  418cda:	stos   BYTE PTR es:[edi],al
  418cdb:	and    DWORD PTR [edx],eax
  418cdd:	jo     0x418d44
  418cdf:	(bad)  
  418ce0:	push   eax
  418ce1:	add    al,0xfc
  418ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ce4:	fdivr  DWORD PTR [ebx-0x5a3d7eca]
  418cea:	jg     0x418c6e
  418cec:	dec    sp
  418cee:	jge    0x418cbc
  418cf0:	jmp    0x418c83
  418cf2:	sub    eax,0x5cf64bfb
  418cf7:	and    cl,BYTE PTR [ecx+edx*8+0x5b2da017]
  418cfe:	pop    ecx
  418cff:	dec    edi
  418d00:	add    bh,ch
  418d02:	loop   0x418d21
  418d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d05:	inc    ecx
  418d06:	icebp  
  418d07:	push   es
  418d08:	xor    ebp,DWORD PTR [eax+0x72]
  418d0b:	mov    bl,bl
  418d0d:	sbb    DWORD PTR [edi-0x75],ebp
  418d10:	das    
  418d11:	inc    edx
  418d12:	nop
  418d13:	adc    DWORD PTR [ecx-0x1475818f],ebx
  418d19:	fcom   DWORD PTR [ebx]
  418d1b:	jmp    0x418ccd
  418d1d:	jbe    0x418d71
  418d1f:	mov    esi,DWORD PTR [ebx-0x56]
  418d22:	aam    0x46
  418d24:	adc    ebp,eax
  418d26:	mov    ds:0x72951f2e,al
  418d2b:	paddw  mm5,QWORD PTR [esi+0x5331e03c]
  418d32:	(bad)  
  418d33:	adc    dh,BYTE PTR [edx+edx*8-0x6c]
  418d37:	push   0xe818ef75
  418d3c:	cmp    eax,0xdb1d486e
  418d41:	pusha  
  418d42:	rcr    BYTE PTR [esi+0x18],cl
  418d45:	dec    eax
  418d46:	out    dx,eax
  418d47:	mov    ecx,0x59d52b18
  418d4c:	icebp  
  418d4d:	ret    0xc057
  418d50:	mov    ch,0xb5
  418d52:	push   eax
  418d53:	pusha  
  418d54:	sbb    al,0xec
  418d56:	push   ecx
  418d57:	inc    esi
  418d58:	pop    es
  418d59:	inc    edx
  418d5a:	pusha  
  418d5b:	xlat   BYTE PTR ds:[ebx]
  418d5c:	shr    BYTE PTR [ecx+eax*1-0x67],0x79
  418d61:	sub    edi,DWORD PTR [ebx+0x6a1bd5dd]
  418d67:	xor    BYTE PTR [edi-0x5b],al
  418d6a:	mov    ss,WORD PTR [esi+ecx*1]
  418d6d:	daa    
  418d6e:	push   esi
  418d6f:	icebp  
  418d70:	cwde   
  418d71:	sar    BYTE PTR [ebp+0x33],cl
  418d74:	mov    ds:0x402d0ffd,al
  418d79:	jnp    0x418d7b
  418d7b:	cmp    bl,BYTE PTR [edx+ebp*2-0x6d2bf3a1]
  418d82:	in     eax,0xc5
  418d84:	mov    cl,BYTE PTR [edi-0x5a]
  418d87:	adc    ch,BYTE PTR [eax+0x3336e2f3]
  418d8d:	pop    edi
  418d8e:	dec    edi
  418d8f:	jmp    0xe759:0xcc70b6e
  418d96:	mov    bl,0xdc
  418d98:	pop    esp
  418d99:	imul   ebp,DWORD PTR [ebx+ecx*1+0x137f2cb8],0x8c55d4d7
  418da4:	dec    ecx
  418da5:	stos   BYTE PTR es:[edi],al
  418da6:	sub    cl,dh
  418da8:	mov    BYTE PTR [ebp+0x4621d57b],0xb1
  418daf:	mov    DWORD PTR [edx-0x414164ff],ebp
  418db5:	lea    eax,[ecx+0xa83a003]
  418dbb:	push   ecx
  418dbc:	cli    
  418dbd:	test   eax,0x96117fbb
  418dc2:	sar    bl,1
  418dc4:	(bad)  
  418dc5:	aaa    
  418dc6:	or     cl,BYTE PTR [eax+0x3d]
  418dc9:	push   ebx
  418dca:	push   esp
  418dcb:	data16 mov ch,0x7e
  418dce:	jmp    0x418d69
  418dd0:	push   ss
  418dd1:	popf   
  418dd2:	jmp    0x9725:0x737c30b0
  418dd9:	sbb    al,0x75
  418ddb:	(bad)  
  418ddc:	nop    eax
  418ddf:	clc    
  418de0:	mov    ds:0x2667e7f0,al
  418de5:	and    bl,BYTE PTR [esi]
  418de7:	adc    esp,DWORD PTR [edi+eiz*4]
  418dea:	aaa    
  418deb:	(bad)  
  418dec:	push   ss
  418ded:	push   ebp
  418dee:	jl     0x418d82
  418df0:	js     0x418d7d
  418df2:	sub    ebx,DWORD PTR [edi+0x69421b8]
  418df8:	dec    edx
  418df9:	sbb    eax,0x75b46aae
  418dfe:	out    dx,al
  418dff:	ss mov ah,0x58
  418e02:	xchg   ebx,eax
  418e03:	sub    edi,DWORD PTR [edi]
  418e05:	lds    eax,FWORD PTR [ebx+0x54]
  418e08:	mov    esp,0x8f2f1290
  418e0d:	(bad)  
  418e0e:	in     eax,0xe6
  418e10:	adc    ax,0x535b
  418e14:	outs   dx,BYTE PTR ds:[esi]
  418e15:	iret   
  418e16:	mov    al,ds:0x7664a72c
  418e1b:	sahf   
  418e1c:	inc    ebx
  418e1d:	pop    edi
  418e1e:	adc    esi,edi
  418e20:	cmp    edi,DWORD PTR [edx]
  418e22:	retf   0x13b6
  418e25:	popf   
  418e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e27:	cmp    DWORD PTR [edi+eiz*8+0x13fa14f5],edx
  418e2e:	data16 repz out dx,al
  418e31:	sub    DWORD PTR [ebp-0xe8a5b0e],0xffffff9f
  418e38:	push   esi
  418e39:	xlat   BYTE PTR ds:[ebx]
  418e3a:	xor    bl,ah
  418e3c:	jge    0x418e14
  418e3e:	mov    dl,ch
  418e40:	loopne 0x418e6f
  418e42:	or     dl,BYTE PTR [esi+0x21]
  418e45:	idiv   DWORD PTR [esi]
  418e47:	cdq    
  418e48:	and    al,0x37
  418e4a:	scas   al,BYTE PTR es:[edi]
  418e4b:	retf   
  418e4c:	fstp   QWORD PTR [ecx+0x53]
  418e4f:	xchg   ebp,eax
  418e50:	sahf   
  418e51:	cmp    ebp,eax
  418e53:	mov    ebx,0xd6201cf
  418e58:	cmc    
  418e59:	out    dx,eax
  418e5a:	cdq    
  418e5b:	or     BYTE PTR [ebp-0x7],ch
  418e5e:	mov    WORD PTR [ebx],ds
  418e60:	ins    DWORD PTR es:[edi],dx
  418e61:	out    dx,al
  418e62:	cwde   
  418e63:	enter  0x79ed,0x27
  418e67:	fisttp WORD PTR [eax+0x4eb89ee0]
  418e6d:	add    ebx,esi
  418e6f:	fwait
  418e70:	push   es
  418e71:	mov    eax,ds:0x22898a8d
  418e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e77:	(bad)  
  418e78:	cmp    eax,0x653cd2f3
  418e7d:	push   0xb4371403
  418e82:	cwde   
  418e83:	or     ah,BYTE PTR [edx]
  418e85:	inc    ebx
  418e86:	mov    dl,0xa2
  418e88:	push   eax
  418e89:	pop    ebp
  418e8a:	pop    edx
  418e8b:	pop    edi
  418e8c:	cld    
  418e8d:	ret    
  418e8e:	ds and esp,esi
  418e91:	mov    ch,0xbb
  418e93:	dec    esi
  418e94:	mov    ds:0x1e1a575b,al
  418e99:	lahf   
  418e9a:	adc    al,0xcd
  418e9c:	xor    DWORD PTR [edx-0x6218e6b4],ecx
  418ea2:	adc    DWORD PTR ds:0x15ac9f68,ebx
  418ea8:	hlt    
  418ea9:	sbb    bh,al
  418eab:	jnp    0x418edf
  418ead:	mov    WORD PTR cs:[ecx+0x1e40cf4e],ss
  418eb4:	mov    eax,ds:0xfc4f4fbf
  418eb9:	fidivr WORD PTR [esi+0x38]
  418ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ebd:	jg     0x418e92
  418ebf:	das    
  418ec0:	fxch   st(4)
  418ec2:	gs sbb eax,0xda7ae410
  418ec8:	adc    eax,0x1d4f1b10
  418ecd:	add    al,BYTE PTR [ebp-0x2f1c3e31]
  418ed3:	sub    ecx,DWORD PTR [edi]
  418ed5:	sahf   
  418ed6:	stc    
  418ed7:	push   ds
  418ed8:	dec    esi
  418ed9:	and    DWORD PTR [esi+0x47934643],ecx
  418edf:	sbb    esp,DWORD PTR [edx]
  418ee1:	or     DWORD PTR [eax+0x3d],0xffffffef
  418ee5:	or     al,0x97
  418ee7:	loop   0x418e82
  418ee9:	(bad)  
  418eea:	out    dx,al
  418eeb:	sbb    DWORD PTR [edx+0x13],edx
  418eee:	pop    esi
  418eef:	(bad)  
  418ef0:	outs   dx,BYTE PTR ds:[esi]
  418ef1:	in     al,0xc
  418ef3:	out    0x6f,al
  418ef5:	aaa    
  418ef6:	aam    0x74
  418ef8:	adc    eax,0x48577e06
  418efd:	push   0xffffffcb
  418eff:	add    esi,DWORD PTR [eax]
  418f01:	pop    edi
  418f02:	outs   dx,BYTE PTR ds:[esi]
  418f03:	inc    esi
  418f04:	popa   
  418f05:	add    al,0xb2
  418f07:	fidivr WORD PTR [ecx+0x15]
  418f0a:	cmc    
  418f0b:	(bad)  
  418f0d:	jns    0x418f40
  418f0f:	data16 jecxz 0x418f42
  418f12:	sbb    eax,0x71094dd8
  418f17:	jbe    0x418f61
  418f19:	mov    ecx,0x23333b09
  418f1e:	cs std 
  418f20:	dec    ebx
  418f21:	push   esi
  418f22:	fs jno 0x418f6c
  418f25:	inc    eax
  418f26:	push   ecx
  418f27:	jo     0x418f8a
  418f29:	sub    esi,DWORD PTR [eax-0x6d]
  418f2c:	xchg   ebp,eax
  418f2d:	add    DWORD PTR [esi],ecx
  418f2f:	frstor [edx]
  418f31:	mov    edx,0x4e85c154
  418f36:	call   0xb53d:0xd69156de
  418f3d:	xchg   DWORD PTR [bx+0x4a76],eax
  418f42:	sahf   
  418f43:	inc    eax
  418f44:	push   0x573a853a
  418f49:	pushf  
  418f4a:	lea    ecx,[esp+edi*2+0x5a1b9182]
  418f51:	push   esp
  418f52:	cwde   
  418f53:	cs fsub st(7),st
  418f56:	aad    0xe1
  418f58:	repnz (bad) 
  418f5a:	xchg   ecx,eax
  418f5b:	or     DWORD PTR [ebp-0x27],0x29fbe503
  418f62:	sub    cl,dl
  418f64:	shr    DWORD PTR [esi+0x4c],1
  418f67:	cmp    DWORD PTR [ebp+0x64],esi
  418f6a:	mov    ds:0x417cb94a,al
  418f6f:	repnz mov ecx,0xed903bdc
  418f75:	and    ebx,DWORD PTR [esi+0x65]
  418f78:	inc    eax
  418f79:	in     al,0xdd
  418f7b:	js     0x418fbb
  418f7d:	xchg   ebp,eax
  418f7e:	mov    eax,ds:0x79d107ce
  418f83:	mov    al,ds:0x9e10471f
  418f88:	repnz hlt 
  418f8a:	retf   
  418f8b:	sub    esi,DWORD PTR ds:0x71792adb
  418f91:	mov    ebp,0xc611b0b7
  418f96:	inc    esi
  418f97:	xor    bh,al
  418f99:	jle    0x418fe9
  418f9b:	enter  0x5f17,0x80
  418f9f:	psraw  mm6,QWORD PTR [eax+0x78]
  418fa3:	pop    edx
  418fa4:	test   ebx,0xffb2a53b
  418faa:	shl    DWORD PTR [esi-0x729b2c8e],0x85
  418fb1:	out    0xc,eax
  418fb3:	stos   DWORD PTR es:[edi],eax
  418fb4:	enter  0x8a4b,0xc0
  418fb8:	popf   
  418fb9:	dec    ebx
  418fba:	adc    al,0xdc
  418fbc:	loopne 0x41903b
  418fbe:	cmp    eax,0xca565223
  418fc3:	(bad)  
  418fc4:	sub    eax,0x3a01df45
  418fc9:	jmp    0xaf97:0x48dff5a8
  418fd0:	adc    ebx,edx
  418fd2:	jno    0x418fda
  418fd4:	or     BYTE PTR [ebx],ah
  418fd6:	push   es
  418fd7:	lods   eax,DWORD PTR fs:[esi]
  418fd9:	scas   eax,DWORD PTR es:[edi]
  418fda:	aaa    
  418fdb:	sub    DWORD PTR [edi],eax
  418fdd:	cs mov esi,esp
  418fe0:	lock aad 0x20
  418fe3:	push   eax
  418fe4:	sbb    BYTE PTR [ecx+edx*2],cl
  418fe7:	inc    ecx
  418fe8:	ja     0x418f7b
  418fea:	gs aad 0xd6
  418fed:	addr16 push edi
  418fef:	inc    edx
  418ff0:	xor    eax,0xd00d6bd3
  418ff5:	or     DWORD PTR [esi],0x8c41b879
  418ffb:	mov    edx,0xa9c7d7b7
  419000:	jno    0x41905e
  419002:	icebp  
  419003:	mov    ebx,0x1755b7f9
  419008:	outs   dx,BYTE PTR ds:[esi]
  419009:	pop    esp
  41900a:	(bad)  
  41900b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41900c:	mov    ?,WORD PTR ds:0xe210e66f
  419012:	es int3 
  419014:	int3   
  419015:	mov    ch,0x4a
  419017:	push   0x64
  419019:	es jbe 0x419021
  41901c:	or     dl,bh
  41901e:	cmp    eax,0x3de80978
  419023:	jl     0x419018
  419025:	mov    dl,0xa4
  419027:	je     0x419088
  419029:	ror    BYTE PTR [edi+0x7172512a],0x10
  419030:	ss (bad) 
  419032:	mov    ds:0xbdf0674e,al
  419037:	pop    edi
  419038:	fidivr DWORD PTR [esi-0x3a]
  41903b:	or     edi,DWORD PTR [ecx-0x25]
  41903e:	sti    
  41903f:	ficom  DWORD PTR [ebx-0x31]
  419042:	xchg   esi,eax
  419043:	jecxz  0x419058
  419045:	add    bl,cl
  419047:	jge    0x41903f
  419049:	xchg   esi,eax
  41904a:	mov    dl,0x78
  41904c:	clc    
  41904d:	cld    
  41904e:	jmp    0x419053
  419050:	add    ah,ch
  419052:	xlat   BYTE PTR ds:[ebx]
  419053:	push   0x1a704f33
  419058:	mov    bh,0xb
  41905a:	(bad)  
  41905b:	popf   
  41905c:	sub    DWORD PTR [edi],edi
  41905e:	fisub  WORD PTR [ebp+0x40193e6c]
  419064:	pusha  
  419065:	jl     0x419089
  419067:	fs sub dl,ch
  41906a:	push   ebx
  41906b:	loopne 0x4190d7
  41906d:	xor    edx,DWORD PTR [esp+edi*8-0x19]
  419071:	sub    eax,0x649b46a2
  419076:	sub    eax,0x49c17d25
  41907b:	addr16 imul esp,ebx,0x50
  41907f:	out    0x42,al
  419081:	inc    ebx
  419082:	or     BYTE PTR [ecx+ebx*2+0x58],ah
  419086:	or     eax,0xf77a9681
  41908b:	test   BYTE PTR [eax-0x65],cl
  41908e:	jns    0x4190fa
  419090:	jns    0x419057
  419092:	cmp    BYTE PTR [eax],ch
  419094:	inc    sp
  419096:	jns    0x41908f
  419098:	and    BYTE PTR [edx+edx*1],0xf3
  41909c:	enter  0x77d0,0x15
  4190a0:	mov    dl,0xca
  4190a2:	add    ebp,eax
  4190a4:	jo     0x4190d7
  4190a6:	rcl    DWORD PTR [ebx],cl
  4190a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190a9:	scas   eax,DWORD PTR es:[edi]
  4190aa:	lods   al,BYTE PTR ds:[esi]
  4190ab:	add    al,0xa3
  4190ad:	pop    es
  4190ae:	mov    ebp,0x27b8244
  4190b3:	(bad)  
  4190b4:	push   esp
  4190b5:	mov    ?,ebx
  4190b7:	ins    DWORD PTR es:[edi],dx
  4190b8:	add    BYTE PTR [eax-0x66],al
  4190bb:	shr    DWORD PTR [ecx-0x4b58592b],1
  4190c1:	xchg   BYTE PTR [ebx+0x7e4a4d8e],al
  4190c7:	push   0x5f
  4190c9:	(bad)  
  4190ca:	adc    al,0xbb
  4190cc:	inc    esp
  4190cd:	jnp    0x419068
  4190cf:	xchg   edi,eax
  4190d0:	inc    edi
  4190d1:	cmp    BYTE PTR [ecx],bl
  4190d3:	outs   dx,BYTE PTR ds:[esi]
  4190d4:	jae    0x41907f
  4190d6:	cmp    ebp,edx
  4190d8:	and    BYTE PTR [edx+edx*2-0x441ceba4],bh
  4190df:	or     dl,al
  4190e1:	pop    esi
  4190e2:	hlt    
  4190e3:	xor    DWORD PTR [ecx],esi
  4190e5:	add    DWORD PTR [esi+eax*2+0x65dc4c96],ebx
  4190ec:	mov    DWORD PTR [ebp+0xc],esp
  4190ef:	add    BYTE PTR [ebp-0x6d],bh
  4190f2:	mov    eax,eax
  4190f4:	push   esi
  4190f5:	sbb    eax,0x2f12b274
  4190fa:	ret    
  4190fb:	dec    eax
  4190fc:	jb     0x419171
  4190fe:	pop    ss
  4190ff:	in     al,dx
  419100:	sub    DWORD PTR [edi],ecx
  419102:	inc    eax
  419103:	mov    DWORD PTR [ebp-0x77],eax
  419106:	stos   DWORD PTR es:[edi],eax
  419107:	pop    ss
  419108:	popf   
  419109:	cmc    
  41910a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41910b:	fistp  QWORD PTR [edx+0x3f]
  41910e:	sbb    bh,BYTE PTR [esi+0x396b3c6]
  419114:	imul   edx,edx,0x3f
  419117:	inc    eax
  419118:	xchg   DWORD PTR [ecx-0x53],ecx
  41911b:	sub    ecx,esp
  41911d:	fisttp DWORD PTR [edx+ebx*4-0x27310da8]
  419124:	sar    DWORD PTR [edi+0x17ff8057],cl
  41912a:	inc    ebp
  41912b:	adc    ecx,DWORD PTR [eax+0x5f4a3f68]
  419131:	mov    edx,0xaffc77e8
  419136:	xor    al,BYTE PTR [edx]
  419138:	popa   
  419139:	mov    eax,ds:0xcd7e8fbb
  41913e:	cdq    
  41913f:	in     al,0xc5
  419141:	sbb    edx,ecx
  419143:	jae    0x41916d
  419145:	(bad)  
  419146:	pop    eax
  419147:	aam    0x21
  419149:	pop    ecx
  41914a:	stos   BYTE PTR es:[edi],al
  41914b:	sbb    al,0x28
  41914d:	clc    
  41914e:	xchg   edx,eax
  41914f:	dec    esp
  419150:	inc    esi
  419151:	cmp    ch,cl
  419153:	mov    esp,0x6a57b2ea
  419158:	leave  
  419159:	out    dx,eax
  41915a:	std    
  41915b:	mov    bl,0x7f
  41915d:	cwde   
  41915e:	xor    bh,BYTE PTR [eax]
  419160:	das    
  419161:	mov    eax,ds:0x45cf9769
  419166:	or     eax,DWORD PTR [ecx]
  419168:	add    al,bh
  41916a:	add    al,0x0
  41916c:	add    BYTE PTR [ebx],ah
  41916e:	test   BYTE PTR [ebx+0x4d],ah
  419171:	cmp    BYTE PTR [edi],ch
  419173:	adc    BYTE PTR [edx+0x18a4290d],al
  419179:	dec    ecx
  41917a:	out    dx,al
  41917b:	std    
  41917c:	pop    edx
  41917d:	and    BYTE PTR [esi+0x5d4b048e],cl
  419183:	call   0x3efe:0x6e6ebac7
  41918a:	loope  0x4191ad
  41918c:	(bad)  
  41918d:	xchg   esp,eax
  41918e:	scas   al,BYTE PTR es:[edi]
  41918f:	sbb    ah,ah
  419191:	repnz xchg ebx,eax
  419193:	mov    esp,0x6714e264
  419198:	shr    DWORD PTR [edi],0xd
  41919b:	push   0x67
  41919d:	and    dh,BYTE PTR [edi-0x33602743]
  4191a3:	imul   esi,esp,0x47
  4191a6:	shl    ah,1
  4191a8:	xchg   edx,eax
  4191a9:	sub    eax,0x671c75d7
  4191ae:	mov    edi,DWORD PTR es:[ebx]
  4191b1:	repnz icebp 
  4191b3:	and    ah,BYTE PTR [esi+0xae71ab3]
  4191b9:	mov    ecx,DWORD PTR [ecx+0x71]
  4191bc:	mov    edx,0x9442944f
  4191c1:	lods   al,BYTE PTR ds:[esi]
  4191c2:	outs   dx,BYTE PTR ds:[esi]
  4191c3:	xchg   ecx,eax
  4191c4:	adc    ebx,DWORD PTR [ebx-0x41e9018a]
  4191ca:	fild   DWORD PTR [edi+0x2676d932]
  4191d0:	dec    ebx
  4191d1:	or     ecx,DWORD PTR [ecx]
  4191d3:	mov    ah,0xe7
  4191d5:	outs   dx,BYTE PTR ss:[esi]
  4191d7:	nop
  4191d8:	rcr    BYTE PTR [ebx-0x1298ada3],cl
  4191de:	out    dx,al
  4191df:	ret    0x6f1b
  4191e2:	mov    al,0x80
  4191e4:	or     edi,DWORD PTR [edi+0x73e4e7d3]
  4191ea:	jmp    0x8addeb4d
  4191ef:	leave  
  4191f0:	fcom   QWORD PTR [edi-0x6e08b4bb]
  4191f6:	and    BYTE PTR [edx+0x7a447b03],dl
  4191fc:	sub    dl,BYTE PTR [eax]
  4191fe:	aaa    
  4191ff:	pop    ebx
  419200:	ret    
  419201:	or     al,0x89
  419204:	mov    edx,0xbaa190f9
  419209:	out    dx,eax
  41920a:	mov    ebp,0x10649e3c
  41920f:	stos   BYTE PTR es:[edi],al
  419210:	push   esi
  419211:	inc    edi
  419212:	loope  0x419258
  419214:	push   esp
  419215:	xlat   BYTE PTR ds:[ebx]
  419216:	inc    edi
  419217:	xchg   ecx,eax
  419218:	adc    BYTE PTR [eax+0x5707db1e],dl
  41921e:	arpl   bx,ax
  419220:	daa    
  419221:	mov    al,ds:0xd953321
  419226:	sbb    al,0xca
  419228:	int    0x1
  41922a:	iret   
  41922b:	addr16 push es
  41922d:	clc    
  41922e:	pop    es
  41922f:	dec    ecx
  419230:	jmp    0x4c358cf2
  419235:	mov    esp,0x59af3c17
  41923a:	cmp    eax,0x3fb5d021
  41923f:	cmp    al,0x50
  419241:	ja     0x419297
  419243:	jl     0x4192a3
  419245:	and    al,0x26
  419247:	jbe    0x419278
  419249:	lock cdq 
  41924b:	rcl    BYTE PTR [edi+esi*8-0x4],1
  41924f:	inc    BYTE PTR [esp+ebx*1+0x47]
  419253:	imul   ecx,DWORD PTR [edi],0x82b2af12
  419259:	jmp    0x8bde:0x14a2d811
  419260:	jbe    0x419219
  419262:	or     BYTE PTR [edx+0x45],ch
  419265:	xor    al,0x22
  419267:	nop
  419268:	sahf   
  419269:	or     DWORD PTR [edx+0x3a],esi
  41926c:	cmp    bl,BYTE PTR [eax+0x12304e4b]
  419272:	xor    DWORD PTR [ebx+0xbee6b0c],edx
  419278:	inc    edi
  419279:	sbb    cl,al
  41927b:	pusha  
  41927c:	imul   esp,ebx,0xffffffac
  41927f:	add    al,0x4
  419281:	push   es
  419282:	dec    esp
  419283:	call   0x286e:0x9504d2da
  41928a:	jns    0x4192bb
  41928c:	shr    DWORD PTR [edx],cl
  41928e:	fld    TBYTE PTR [eax]
  419290:	jmp    0x4192f9
  419292:	inc    edx
  419293:	and    ch,BYTE PTR [edx-0x23]
  419296:	mov    al,0x5a
  419298:	pushf  
  419299:	mov    dh,0x93
  41929b:	fidiv  DWORD PTR [eax+ebx*1]
  41929e:	int3   
  41929f:	loop   0x41928e
  4192a1:	stos   BYTE PTR es:[edi],al
  4192a2:	sub    dh,BYTE PTR [eax-0x5f687185]
  4192a8:	enter  0x4dcb,0xe9
  4192ac:	pop    es
  4192ad:	and    BYTE PTR [edi-0x37],0xe3
  4192b1:	ret    0x35eb
  4192b4:	dec    eax
  4192b5:	sub    al,0xcd
  4192b7:	jecxz  0x4192f6
  4192b9:	mov    ebp,ds
  4192bb:	aad    0xf0
  4192bd:	pop    ebp
  4192be:	or     eax,0x64d917ca
  4192c3:	xor    edx,DWORD PTR [ebp+0x66]
  4192c6:	mov    ah,BYTE PTR [esi+0x1]
  4192c9:	shr    ebp,1
  4192cb:	pop    edi
  4192cc:	(bad)  
  4192cd:	mov    dl,BYTE PTR [edx+esi*4-0x59390511]
  4192d4:	bound  esi,QWORD PTR [esi]
  4192d6:	ret    0xa0a5
  4192d9:	adc    ebp,eax
  4192db:	(bad)  
  4192dc:	stos   DWORD PTR es:[edi],eax
  4192dd:	push   ecx
  4192de:	mov    DWORD PTR [edx],eax
  4192e0:	setns  BYTE PTR [eax]
  4192e3:	loope  0x41930e
  4192e5:	test   DWORD PTR [eax],0x6143dd8f
  4192eb:	fld    DWORD PTR [ebx+edx*1]
  4192ee:	mov    ds:0x49a951d9,al
  4192f3:	push   edi
  4192f4:	adc    dh,al
  4192f6:	jl     0x41929c
  4192f8:	outs   dx,DWORD PTR ds:[esi]
  4192f9:	mov    esp,0x5ee5ac88
  4192fe:	das    
  4192ff:	sbb    eax,DWORD PTR [edi]
  419301:	or     eax,0x4779458e
  419306:	adc    al,0x37
  419308:	scas   al,BYTE PTR es:[edi]
  419309:	bound  eax,QWORD PTR [ecx]
  41930b:	push   cs
  41930c:	in     al,0x12
  41930e:	push   ss
  41930f:	fwait
  419310:	jb     0x41934e
  419312:	add    eax,0xa7ce76dc
  419317:	div    al
  419319:	or     al,ch
  41931b:	mov    edi,edi
  41931d:	adc    BYTE PTR [ebx],al
  41931f:	mov    dl,0x57
  419321:	lods   eax,DWORD PTR ds:[esi]
  419322:	jge    0x4192df
  419324:	mov    ah,0x5a
  419326:	cld    
  419327:	push   ds
  419328:	pop    edx
  419329:	out    dx,al
  41932a:	sub    eax,0xb25b93f4
  41932f:	enter  0xcd35,0x17
  419333:	arpl   WORD PTR [ecx-0x17],di
  419336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419337:	es dec edx
  419339:	adc    eax,DWORD PTR [ebx]
  41933b:	add    DWORD PTR [eax-0x546f2791],ebp
  419341:	out    dx,al
  419342:	fimul  DWORD PTR [edi+0x4a521171]
  419348:	mov    al,0x23
  41934a:	into   
  41934b:	js     0x4193a9
  41934d:	dec    ecx
  41934e:	rcl    edx,0xe3
  419351:	pusha  
  419352:	xor    ch,BYTE PTR [eax]
  419354:	ins    DWORD PTR es:[edi],dx
  419355:	jl     0x419305
  419357:	sbb    DWORD PTR [edi],0xffffff95
  41935a:	and    BYTE PTR gs:[edi-0x65],bl
  41935e:	les    ebx,FWORD PTR [eax]
  419360:	pusha  
  419361:	sbb    eax,0x1d70b123
  419366:	fiadd  DWORD PTR [ebp+edx*8-0x58bc773f]
  41936d:	push   esp
  41936e:	(bad)  
  419370:	mov    cl,BYTE PTR [edx+eax*2+0x40]
  419374:	loop   0x4193dc
  419376:	mov    ecx,0x19564c5a
  41937b:	jnp    0x4193c2
  41937d:	mov    ds:0x1aa385c0,eax
  419382:	push   edi
  419383:	or     al,0x4f
  419385:	popf   
  419386:	inc    eax
  419387:	mov    ds:0xda7961b8,eax
  41938c:	or     dl,BYTE PTR [edi+ebp*2+0x596d5749]
  419393:	iret   
  419394:	aad    0x61
  419396:	xor    eax,0xc2fce36
  41939b:	(bad)  
  41939c:	arpl   sp,bp
  41939e:	adc    DWORD PTR [edi+0x4d0d41fa],esp
  4193a4:	cmp    BYTE PTR [esi],bh
  4193a6:	push   es
  4193a7:	cmc    
  4193a8:	dec    ecx
  4193a9:	sub    esp,DWORD PTR ds:0x770df449
  4193af:	xor    DWORD PTR [bp-0x5e42],esp
  4193b4:	gs push edi
  4193b6:	bound  esp,QWORD PTR [edi]
  4193b8:	pop    es
  4193b9:	pop    eax
  4193ba:	xchg   BYTE PTR [ebp+0x67],ch
  4193bd:	and    BYTE PTR [edx],cl
  4193bf:	xlat   BYTE PTR ds:[ebx]
  4193c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193c1:	call   0x2be8:0xe6b8e20c
  4193c8:	in     eax,0xe2
  4193ca:	mov    BYTE PTR [edx],cl
  4193cc:	mov    ebx,cr5
  4193cf:	or     DWORD PTR [eax],0x4a
  4193d2:	dec    ecx
  4193d3:	push   ds
  4193d4:	mov    bh,0x12
  4193d6:	iret   
  4193d7:	nop
  4193d8:	jge    0x419411
  4193da:	into   
  4193db:	mov    DWORD PTR [esi-0x78],ecx
  4193de:	inc    ecx
  4193df:	fcomip st,st(7)
  4193e1:	ror    DWORD PTR [eax],1
  4193e3:	push   ds
  4193e4:	aas    
  4193e5:	or     edi,DWORD PTR [ebx+eiz*2+0x28]
  4193e9:	iret   
  4193ea:	xchg   ebx,eax
  4193eb:	mov    bl,cl
  4193ed:	in     al,0x57
  4193ef:	ret    
  4193f0:	pushf  
  4193f1:	push   ds
  4193f2:	add    eax,0xf8d39738
  4193f7:	push   cs
  4193f8:	pop    edx
  4193f9:	(bad)  
  4193fa:	cmc    
  4193fb:	and    BYTE PTR [esi+0x6f705705],cl
  419401:	int    0x93
  419403:	inc    ecx
  419404:	fsubr  QWORD PTR [edx]
  419406:	lock pusha 
  419408:	adc    DWORD PTR [ebp+0x6d],ecx
  41940b:	mov    edx,ecx
  41940d:	not    BYTE PTR gs:[ebx-0x56]
  419411:	scas   eax,DWORD PTR es:[edi]
  419412:	jg     0x4193fa
  419414:	adc    DWORD PTR [edi],eax
  419416:	jb     0x419398
  419418:	(bad)  
  419419:	sub    eax,0xc34561b0
  41941e:	mov    gs,edi
  419420:	mov    ds:0x3b80dd15,al
  419425:	pop    ss
  419426:	in     al,0xf1
  419428:	shl    BYTE PTR [ecx],cl
  41942a:	int3   
  41942b:	jmp    0x419472
  41942d:	push   es
  41942e:	out    0xc2,eax
  419430:	jmp    0x4193e7
  419432:	xor    esp,esp
  419434:	adc    bh,0x75
  419437:	push   eax
  419438:	jne    0x4193c0
  41943a:	pop    eax
  41943b:	xchg   edi,eax
  41943c:	icebp  
  41943d:	repnz fstp DWORD PTR ds:0x3568f4e5
  419444:	cmp    BYTE PTR es:[esi-0x8ad3d55],dh
  41944b:	test   al,0x6b
  41944d:	mov    ah,0x32
  41944f:	push   0xffffffab
  419451:	int    0xed
  419453:	mov    ebp,?
  419455:	ret    0x3509
  419458:	imul   ebp,DWORD PTR [edi],0xffffffca
  41945b:	dec    edi
  41945c:	xchg   esi,eax
  41945d:	fcom   st(3)
  41945f:	fs cld 
  419461:	jb     0x4193ec
  419463:	out    0xb,al
  419465:	or     al,0x10
  419467:	iret   
  419468:	aad    0x47
  41946a:	cmp    ch,cl
  41946c:	sbb    DWORD PTR [ecx-0x3359f490],ecx
  419472:	pop    es
  419473:	fwait
  419474:	ins    DWORD PTR es:[edi],dx
  419475:	jnp    0x419446
  419477:	inc    ecx
  419478:	sbb    bh,BYTE PTR ds:0xd2d6688f
  41947e:	rcr    BYTE PTR [ebx],cl
  419480:	fistp  QWORD PTR [edx+eax*2+0xf]
  419484:	dec    esi
  419485:	mov    esi,0xc1291e82
  41948a:	and    esp,eax
  41948c:	or     al,0x74
  41948e:	xchg   BYTE PTR [eax-0x4cb55b75],dh
  419494:	sahf   
  419495:	lds    ebx,FWORD PTR [ebx+0x3c]
  419498:	test   DWORD PTR [edx+eiz*2],esp
  41949b:	jb     0x4194a0
  41949d:	out    dx,al
  41949e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41949f:	xor    eax,0x79b9ea0
  4194a4:	out    0xfb,eax
  4194a6:	stos   BYTE PTR es:[edi],al
  4194a7:	jnp    0x419497
  4194a9:	clc    
  4194aa:	add    al,0x3e
  4194ac:	inc    edx
  4194ad:	and    al,BYTE PTR [eax-0xe]
  4194b0:	(bad)  
  4194b1:	xchg   esp,eax
  4194b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194b3:	adc    edi,0xffffffa3
  4194b6:	and    edx,DWORD PTR [ecx+eax*1-0x22]
  4194ba:	retf   
  4194bb:	and    cl,0x1f
  4194be:	jns    0x41949a
  4194c0:	call   0x811a1c75
  4194c5:	mov    DWORD PTR [ecx-0x54],ebx
  4194c8:	ja     0x419485
  4194ca:	mov    ebp,0x74b3d7b2
  4194cf:	sub    DWORD PTR [edx],esp
  4194d1:	mov    ch,0x57
  4194d3:	jno    0x419462
  4194d5:	sbb    eax,0x41be2e69
  4194da:	retf   0x9e3a
  4194dd:	sub    esi,DWORD PTR [eax]
  4194df:	aad    0x15
  4194e1:	and    ch,bh
  4194e3:	mov    al,0x23
  4194e5:	jnp    0x419537
  4194e7:	push   0x2bb298b5
  4194ec:	inc    esi
  4194ed:	loopne 0x41956e
  4194ef:	mov    al,ds:0xd8051fbf
  4194f4:	cdq    
  4194f5:	mov    WORD PTR [edi],?
  4194f7:	xlat   BYTE PTR ds:[ebx]
  4194f8:	popa   
  4194f9:	cmc    
  4194fa:	dec    ebp
  4194fb:	add    BYTE PTR ds:0x8dca2df9,bl
  419501:	enter  0xc7a6,0x63
  419505:	loopne 0x419551
  419507:	and    al,0xd8
  419509:	adc    BYTE PTR [edi],ah
  41950b:	inc    ebp
  41950c:	pop    esi
  41950d:	sub    DWORD PTR [eax],esi
  41950f:	js     0x419491
  419511:	cmp    eax,0x6b3f8714
  419516:	ins    DWORD PTR es:[edi],dx
  419517:	dec    ecx
  419518:	imul   esp,ebx,0xe29d995d
  41951e:	and    al,BYTE PTR [esi+0x2f]
  419521:	daa    
  419522:	in     al,0x74
  419524:	jmp    0x7e0f8cf9
  419529:	test   bl,dh
  41952b:	mov    al,ds:0x4b3fd026
  419530:	test   eax,0xc36d8a6
  419535:	adc    BYTE PTR [ecx-0x5d3e51ad],bl
  41953b:	imul   edx,DWORD PTR [esi],0xb03ad774
  419541:	sbb    esi,ecx
  419543:	ret    
  419544:	js     0x41954b
  419546:	inc    eax
  419547:	(bad)  
  419548:	fdivr  DWORD PTR [ecx-0x2ac6a153]
  41954e:	retf   0xe656
  419551:	jecxz  0x4194dc
  419553:	fistp  QWORD PTR ds:0xd80f9aea
  419559:	shr    DWORD PTR [esi],0x8c
  41955c:	into   
  41955d:	(bad)  
  41955e:	sti    
  41955f:	hlt    
  419560:	into   
  419561:	xchg   esp,eax
  419562:	mov    esi,0xa7a91b21
  419567:	inc    edx
  419568:	mov    eax,ds:0x49adbf47
  41956d:	xchg   ebx,eax
  41956e:	in     al,0x5
  419570:	pusha  
  419571:	adc    eax,0xa19334e4
  419576:	test   al,0xf9
  419578:	jmp    0x419585
  41957a:	push   esp
  41957b:	(bad)  
  41957c:	pop    ss
  41957d:	cs dec esp
  41957f:	mov    bl,0x86
  419581:	in     al,dx
  419582:	jle    0x4195aa
  419584:	mul    dl
  419586:	inc    eax
  419587:	adc    BYTE PTR [eax+0x5d53e35e],bl
  41958d:	mov    dh,BYTE PTR [esp+ebp*4+0x42e11e88]
  419594:	popf   
  419595:	stos   BYTE PTR es:[edi],al
  419596:	mov    esi,0x64f5800a
  41959b:	lahf   
  41959c:	jle    0x4195fa
  41959e:	and    al,BYTE PTR [edx]
  4195a0:	imul   esi
  4195a2:	test   al,0xd6
  4195a4:	jl     0x4195cf
  4195a6:	daa    
  4195a7:	jns    0x41954f
  4195a9:	inc    edi
  4195aa:	test   al,0xa8
  4195ac:	sub    al,0x6b
  4195ae:	jns    0x419556
  4195b0:	not    eax
  4195b2:	mov    ebp,esi
  4195b4:	xchg   DWORD PTR [edi],ebp
  4195b6:	aad    0xe9
  4195b8:	mov    ecx,edx
  4195ba:	add    al,0xa2
  4195bc:	jno    0x4195f8
  4195be:	or     al,0x55
  4195c0:	pop    ss
  4195c1:	add    BYTE PTR [ebx+0x47],ch
  4195c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c5:	sar    DWORD PTR [edi],cl
  4195c7:	push   ds
  4195c8:	leave  
  4195c9:	ds sahf 
  4195cb:	cmp    DWORD PTR [ecx-0x37],esi
  4195ce:	rcl    BYTE PTR [esi+0x30],0x71
  4195d2:	lock fisubr DWORD PTR [edx-0x5c7fed11]
  4195d9:	jmp    0x419573
  4195db:	and    al,0xc8
  4195dd:	ins    BYTE PTR es:[edi],dx
  4195de:	fcomp  DWORD PTR [ebx]
  4195e0:	jmp    0x29888782
  4195e5:	test   DWORD PTR [ebp-0x4e65d9ee],edx
  4195eb:	jb     0x41959e
  4195ed:	push   es
  4195ee:	cmp    al,0xea
  4195f0:	std    
  4195f1:	cs dec ebp
  4195f3:	jmp    0x419671
  4195f5:	xor    al,0x97
  4195f7:	retf   0xdca6
  4195fa:	or     BYTE PTR [edi],ah
  4195fc:	push   0xbe1df326
  419601:	aad    0xcf
  419603:	and    edx,0x2b
  419606:	aaa    
  419607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419608:	xchg   DWORD PTR [ecx+0x67],esp
  41960b:	retf   
  41960c:	dec    ebp
  41960d:	cmp    eax,0x53e3cd49
  419612:	mov    BYTE PTR [edx+eiz*8-0x2b858e1e],ah
  419619:	pop    esp
  41961a:	ins    BYTE PTR es:[edi],dx
  41961b:	mov    ebx,0xd6f83e2e
  419620:	popf   
  419621:	(bad)  
  419622:	stc    
  419623:	inc    ebx
  419624:	xchg   DWORD PTR [edi-0x6d3a3e9c],esi
  41962a:	enter  0x647c,0x8e
  41962e:	(bad)  [edi+0x20bffa6d]
  419634:	mov    BYTE PTR [ebx],dh
  419636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419637:	repnz dec esi
  419639:	(bad)  
  41963a:	push   esi
  41963b:	icebp  
  41963c:	scas   eax,DWORD PTR es:[edi]
  41963d:	inc    edx
  41963e:	jecxz  0x41969a
  419640:	or     ebx,ebx
  419642:	cs xor esi,0xffffffca
  419646:	xchg   ebp,eax
  419647:	xchg   edx,eax
  419648:	retf   
  419649:	and    ebp,DWORD PTR [ebp-0x37907d5b]
  41964f:	in     al,dx
  419650:	aad    0x5b
  419652:	sub    BYTE PTR [ecx-0x2ec2c70],al
  419658:	pop    edi
  419659:	lds    ecx,FWORD PTR [esi-0x41675ccf]
  41965f:	xor    DWORD PTR [eax+0x2d92001],ebx
  419665:	inc    ebp
  419666:	push   cs
  419667:	retf   0xcb6c
  41966a:	in     al,dx
  41966b:	out    0x2f,eax
  41966d:	pushf  
  41966e:	das    
  41966f:	cmp    esi,DWORD PTR [eax-0x3db5805d]
  419675:	cmp    eax,0xf8000110
  41967a:	add    al,0x0
  41967c:	add    BYTE PTR ds:0xc59a1aa4,al
  419682:	test   eax,0x3409ff10
  419687:	std    
  419688:	mov    ch,0xc2
  41968a:	out    0x24,al
  41968c:	in     eax,dx
  41968d:	mov    ebx,0x35fe39c6
  419692:	in     al,dx
  419693:	mov    bh,0xf7
  419695:	out    0xcf,al
  419697:	add    DWORD PTR [ebx+0x6c],ecx
  41969a:	jecxz  0x41964a
  41969c:	test   al,0x31
  41969e:	retf   0x9f92
  4196a1:	jp     0x4196e6
  4196a3:	fmul   DWORD PTR [ecx+0x71]
  4196a6:	jmp    0x41971d
  4196a8:	xchg   edx,eax
  4196a9:	mov    ds:0x82c5c851,eax
  4196ae:	jbe    0x4196c0
  4196b0:	xor    esp,DWORD PTR [eax+0x1e]
  4196b3:	mov    eax,0xe45d306f
  4196b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196b9:	mov    ebp,0x86cb882b
  4196be:	fwait
  4196bf:	(bad)  
  4196c0:	dec    ecx
  4196c1:	sub    ah,BYTE PTR [edx-0x3]
  4196c4:	push   cs
  4196c5:	cli    
  4196c6:	daa    
  4196c7:	iret   
  4196c8:	xchg   edi,eax
  4196c9:	and    bh,BYTE PTR [esi-0x75]
  4196cc:	fild   QWORD PTR [esi-0x108d643f]
  4196d2:	pushf  
  4196d3:	inc    esi
  4196d4:	call   0x8287d090
  4196d9:	std    
  4196da:	inc    edi
  4196db:	sub    al,0x3e
  4196dd:	ins    BYTE PTR es:[edi],dx
  4196de:	mov    cl,0xb
  4196e0:	push   esi
  4196e1:	es stc 
  4196e3:	ret    0x9ab5
  4196e6:	lods   al,BYTE PTR ds:[esi]
  4196e7:	hlt    
  4196e8:	push   esp
  4196e9:	xor    BYTE PTR [ebx],0xc5
  4196ec:	or     DWORD PTR [ebp+eiz*1-0x79],esi
  4196f0:	cmp    ebx,edi
  4196f2:	mov    eax,0x45f5166d
  4196f7:	dec    ecx
  4196f8:	inc    eax
  4196f9:	or     edi,DWORD PTR ds:0x27bf8302
  4196ff:	pop    ss
  419700:	lock push edi
  419702:	jge    0x4196e0
  419704:	shr    dl,1
  419706:	mov    BYTE PTR [ecx+edi*2+0x27307718],0x52
  41970e:	int    0xec
  419710:	sbb    eax,0x6242fd12
  419715:	push   esi
  419716:	cmp    DWORD PTR [ebx+ebx*4+0x463b80ca],ebx
  41971d:	sti    
  41971e:	mov    ebp,0xa19f2d67
  419723:	test   eax,0xe762a377
  419728:	test   eax,0x30a6807b
  41972d:	and    al,0x4e
  41972f:	aam    0xf1
  419731:	mov    cs,ecx
  419733:	bound  ecx,QWORD PTR [ebx]
  419735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419736:	mov    ebp,0xddad72a7
  41973b:	or     DWORD PTR [esi+eiz*2],ecx
  41973e:	jno    0x41974a
  419740:	or     al,0x84
  419742:	fadd   QWORD PTR [esi-0x602bd2b9]
  419748:	popf   
  419749:	pop    edi
  41974a:	and    esi,DWORD PTR [ebp-0x71]
  41974d:	in     eax,dx
  41974e:	xchg   DWORD PTR [edi],ebp
  419750:	fist   DWORD PTR ds:0x5d856a16
  419756:	jnp    0x4196ed
  419758:	(bad)  
  419759:	mov    ds:0x1b507f90,al
  41975e:	sbb    ch,ch
  419760:	mov    esi,DWORD PTR [eax-0x750a7bc8]
  419766:	jp     0x4197cb
  419768:	into   
  419769:	or     eax,0xfdf91da0
  41976e:	jle    0x419755
  419770:	push   esi
  419771:	push   0x494139fb
  419776:	imul   ebp,ebx,0xffffff85
  419779:	jmp    0x6841:0xa95e2d62
  419780:	hlt    
  419781:	xor    dl,bh
  419783:	(bad)  
  419784:	clc    
  419785:	pusha  
  419786:	inc    edi
  419787:	ror    DWORD PTR [edx],cl
  419789:	retf   
  41978a:	pushf  
  41978b:	add    al,0xdf
  41978d:	jmp    0x7f6f3a4e
  419792:	sub    edx,DWORD PTR cs:[ecx+0x72]
  419796:	repnz sbb al,0x94
  419799:	out    0xad,eax
  41979b:	lahf   
  41979c:	in     al,0xe1
  41979e:	xchg   esp,eax
  41979f:	(bad)  
  4197a0:	sub    ch,BYTE PTR [ecx]
  4197a2:	pop    ebp
  4197a3:	pop    edx
  4197a4:	sbb    BYTE PTR [ebp+0x246001d8],bl
  4197aa:	call   0xc3c24120
  4197af:	out    0xd9,al
  4197b1:	test   al,0xe4
  4197b3:	pop    esp
  4197b4:	push   edx
  4197b5:	ret    0xaf88
  4197b8:	xchg   esi,eax
  4197b9:	das    
  4197ba:	cmp    al,0xf8
  4197bc:	fidiv  DWORD PTR [ebx]
  4197be:	jb     0x41981a
  4197c0:	or     ch,bh
  4197c2:	adc    eax,0x43f5d193
  4197c7:	cli    
  4197c8:	xor    eax,0xd1b78acb
  4197cd:	inc    esi
  4197ce:	mov    ah,0x1d
  4197d0:	imul   ebx,DWORD PTR [ecx+0x16],0x5cb6e046
  4197d7:	fdivr  QWORD PTR [bx+di+0xe20]
  4197dc:	push   eax
  4197dd:	(bad)  
  4197df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e0:	push   esp
  4197e1:	fwait
  4197e2:	and    BYTE PTR [edx+edi*8],ah
  4197e5:	push   ecx
  4197e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e7:	mov    al,0xb0
  4197e9:	mov    ds:0x356f2027,al
  4197ee:	jle    0x419842
  4197f0:	push   es
  4197f1:	hlt    
  4197f2:	enter  0x435d,0x8f
  4197f6:	or     esp,esp
  4197f8:	adc    BYTE PTR [ecx+0x7b],ah
  4197fb:	shl    DWORD PTR [ebp+0x4f],0xf6
  4197ff:	(bad)  
  419800:	stos   BYTE PTR es:[edi],al
  419801:	loope  0x41985a
  419803:	call   0x14f2:0xcc7eb20b
  41980a:	cld    
  41980b:	dec    ebx
  41980c:	jb     0x419875
  41980e:	dec    ebx
  41980f:	and    BYTE PTR [ebx+0x77],cl
  419812:	jns    0x419796
  419814:	inc    edi
  419815:	shl    DWORD PTR [eax+0x61],cl
  419818:	ss imul esi,eax,0xffffff9c
  41981c:	cwde   
  41981d:	cmp    eax,ebp
  41981f:	jne    0x4b0d
  419824:	ret    0xf6d2
  419827:	xor    al,BYTE PTR [esi]
  419829:	gs adc ebp,edi
  41982c:	data16 cld 
  41982e:	or     eax,0x93842902
  419833:	icebp  
  419834:	rcr    DWORD PTR [edi],cl
  419836:	out    dx,al
  419837:	add    ah,BYTE PTR [esi+0x37]
  41983a:	mov    bl,0x7e
  41983c:	cmp    al,0xd0
  41983e:	xor    dl,bl
  419840:	and    DWORD PTR [edi+0x1b],ecx
  419843:	call   FWORD PTR [eax+0x1a]
  419846:	push   edx
  419847:	shl    BYTE PTR [ebp-0x6e],0x99
  41984b:	add    DWORD PTR [ebx-0x67d9fa64],edx
  419851:	add    DWORD PTR [edx],eax
  419853:	ja     0x41988a
  419855:	xchg   edx,eax
  419856:	mov    cl,0xd6
  419858:	das    
  419859:	fs inc esi
  41985b:	mov    ebp,0x34e9976b
  419860:	jae    0x419811
  419862:	scas   al,BYTE PTR es:[edi]
  419863:	mov    ch,0x86
  419865:	cmp    dl,BYTE PTR [ebp+0x4e]
  419868:	cmp    BYTE PTR [ebx],dh
  41986a:	sub    eax,0xcd6b636c
  41986f:	ins    DWORD PTR es:[edi],dx
  419870:	cmp    DWORD PTR [ebp-0x46],eax
  419873:	dec    ebp
  419874:	gs scas al,BYTE PTR es:[edi]
  419876:	test   al,0x54
  419878:	js     0x419898
  41987a:	ja     0x41980d
  41987c:	(bad)  
  41987d:	(bad)  
  41987f:	std    
  419880:	mov    bh,0x9b
  419882:	mov    cl,0xd
  419884:	es push 0x626240a2
  41988a:	jecxz  0x4198a1
  41988c:	pop    edx
  41988d:	out    dx,al
  41988e:	pusha  
  41988f:	xchg   ebx,eax
  419890:	push   ds
  419891:	nop
  419892:	push   ebp
  419893:	pop    ecx
  419894:	sub    BYTE PTR [edx+0x305eba73],al
  41989a:	stos   DWORD PTR es:[edi],eax
  41989b:	cmp    al,0x29
  41989d:	xor    ebx,DWORD PTR [ebp+0x6c8029e3]
  4198a3:	sub    ah,bh
  4198a5:	lods   eax,DWORD PTR ds:[esi]
  4198a6:	mov    ds:0xc00afce3,eax
  4198ab:	jns    0x4198b6
  4198ad:	rol    bh,0x33
  4198b0:	mov    eax,0xd8c40cd4
  4198b5:	jge    0x4198f9
  4198b7:	lahf   
  4198b8:	std    
  4198b9:	push   cs
  4198ba:	test   DWORD PTR [edi+0x29],edi
  4198bd:	push   ds
  4198be:	push   ds
  4198bf:	std    
  4198c0:	jb     0x419929
  4198c2:	jmp    0xbbb56638
  4198c7:	stos   BYTE PTR es:[edi],al
  4198c8:	bound  edi,QWORD PTR [esi+0x14]
  4198cb:	arpl   WORD PTR [esp-0x49],ax
  4198cf:	mov    edi,DWORD PTR [ecx]
  4198d1:	cmp    DWORD PTR [ebp+eax*2+0x40],edx
  4198d5:	jne    0x41993a
  4198d7:	or     al,0x64
  4198d9:	push   es
  4198da:	icebp  
  4198db:	mov    ebx,0x7ca5e0c4
  4198e0:	inc    edi
  4198e1:	shl    DWORD PTR [esi-0x35],0xab
  4198e5:	test   eax,0x1ed968f
  4198ea:	(bad)  
  4198eb:	pop    ebx
  4198ec:	and    DWORD PTR [edx-0x26],0xffffffd5
  4198f0:	add    ebp,DWORD PTR [edx+0x6]
  4198f3:	loop   0x4198c9
  4198f5:	je     0x4198a6
  4198f7:	mov    ds:0x97bdd081,al
  4198fc:	and    eax,0xa21563a3
  419901:	sahf   
  419902:	loopne 0x419889
  419904:	(bad)  
  419905:	aaa    
  419906:	mov    eax,0x5a0d2871
  41990b:	mov    ds:0xab2c948,eax
  419910:	push   ss
  419911:	or     BYTE PTR [edx+ecx*8+0x28],al
  419915:	rcr    DWORD PTR [esi-0x7f],cl
  419918:	xor    BYTE PTR [ecx-0x2b],cl
  41991b:	sub    bl,BYTE PTR [ebx]
  41991d:	jp     0x997bd5e8
  419923:	jle    0x4198d9
  419925:	inc    ecx
  419926:	test   BYTE PTR [ecx+eiz*1],ch
  419929:	push   cs
  41992a:	pop    edi
  41992b:	or     ebp,ebp
  41992d:	dec    ecx
  41992e:	repz add eax,0x15837f7d
  419934:	cmp    eax,0x2bb50538
  419939:	js     0x419919
  41993b:	push   es
  41993c:	or     BYTE PTR [ebx],dh
  41993e:	xor    al,0x8e
  419940:	fisttp QWORD PTR [edi+0xd]
  419943:	push   ds
  419944:	push   edx
  419945:	icebp  
  419946:	pop    esi
  419947:	shl    DWORD PTR [esi],1
  419949:	xor    esp,0x56
  41994c:	fild   QWORD PTR [ebx-0x6e4f44d3]
  419952:	(bad)  
  419955:	in     al,dx
  419956:	cwde   
  419957:	lahf   
  419958:	inc    esp
  419959:	test   BYTE PTR [ecx-0x75],ah
  41995c:	dec    ecx
  41995d:	pop    ds
  41995e:	mov    WORD PTR [edi],cs
  419960:	fincstp 
  419962:	ss push esp
  419964:	(bad)  
  419965:	not    DWORD PTR [edi]
  419967:	sti    
  419968:	push   cs
  419969:	mov    cs,WORD PTR [edi-0x18]
  41996c:	and    eax,0x4b9e51aa
  419971:	xchg   ebx,eax
  419972:	out    0xe4,al
  419974:	or     BYTE PTR [ebx+0x4e37ed42],0x46
  41997b:	mov    ch,0x1f
  41997d:	call   0x1347:0xdf2d86c2
  419984:	xchg   DWORD PTR [edi-0xa5195fe],edx
  41998a:	sbb    DWORD PTR [ebp+ebp*1+0x30ab376],edi
  419991:	scas   eax,DWORD PTR es:[edi]
  419992:	scas   eax,DWORD PTR es:[edi]
  419993:	not    DWORD PTR [edx+edx*8+0x64e324bf]
  41999a:	fisub  WORD PTR [esi+eax*8-0x5c8260a6]
  4199a1:	scas   al,BYTE PTR es:[edi]
  4199a2:	repnz and edi,edx
  4199a5:	push   0xffffffd4
  4199a7:	cmc    
  4199a8:	push   ebp
  4199a9:	xchg   edi,eax
  4199aa:	add    eax,0x50930579
  4199af:	xor    eax,0xd9811fac
  4199b4:	bound  edx,QWORD PTR [eax+edi*2]
  4199b7:	sub    eax,0xa0b6ab60
  4199bc:	pop    ds
  4199bd:	(bad)  
  4199be:	repnz mov esp,0x959a6122
  4199c4:	loopne 0x4199e5
  4199c6:	inc    esi
  4199c7:	loopne 0x4199dc
  4199c9:	adc    BYTE PTR [edi+ebp*8-0x69],dh
  4199cd:	test   DWORD PTR [ebx+0x5b],esi
  4199d0:	popf   
  4199d1:	inc    ecx
  4199d2:	cmp    edx,DWORD PTR [edi+0x62]
  4199d5:	out    0x42,al
  4199d7:	xchg   edx,eax
  4199d8:	pop    ss
  4199d9:	int3   
  4199da:	inc    ebp
  4199db:	dec    eax
  4199dc:	mov    esi,DWORD PTR [ecx-0x15f944ab]
  4199e2:	leave  
  4199e3:	mov    ds:0xf2742f26,eax
  4199e8:	scas   al,BYTE PTR es:[edi]
  4199e9:	das    
  4199ea:	aas    
  4199eb:	icebp  
  4199ec:	test   DWORD PTR [edi+ebp*8-0x1d],eax
  4199f0:	dec    eax
  4199f1:	xchg   esi,eax
  4199f2:	xchg   esp,eax
  4199f3:	imul   ebx,ebp,0x7f779bcc
  4199f9:	cmp    BYTE PTR [edi],cl
  4199fb:	loop   0x41999a
  4199fd:	sub    BYTE PTR [ecx-0x43],dl
  419a00:	pop    ebp
  419a01:	cs pop ds
  419a03:	mov    dh,BYTE PTR [edi+0x39]
  419a06:	sbb    DWORD PTR [edx+0x53],edi
  419a09:	sbb    al,BYTE PTR [edx-0x6cf24cec]
  419a0f:	ja     0x419a4d
  419a11:	jns    0x419a45
  419a13:	dec    eax
  419a14:	lahf   
  419a15:	push   0xffffffb6
  419a17:	call   0x139d:0x7da57b56
  419a1e:	retf   0xbf26
  419a21:	pop    edx
  419a22:	fdivrp st(7),st
  419a24:	cld    
  419a25:	mov    ah,0x9d
  419a27:	xchg   edi,eax
  419a28:	lods   al,BYTE PTR ds:[esi]
  419a29:	sub    BYTE PTR [ebx],dl
  419a2b:	push   esi
  419a2c:	sbb    dh,ch
  419a2e:	sub    BYTE PTR [eax],bh
  419a30:	hlt    
  419a31:	test   eax,0xfaa66a27
  419a36:	leave  
  419a37:	iret   
  419a38:	jbe    0x419a76
  419a3a:	sub    eax,0x4a75f4e7
  419a3f:	ret    0x6fed
  419a42:	shl    BYTE PTR [ebp+0x4],0x6c
  419a46:	sub    eax,DWORD PTR [esi]
  419a48:	adc    DWORD PTR [edx+0x1228973e],0xffffffb8
  419a4f:	mov    ch,0xc9
  419a51:	xor    dh,BYTE PTR ss:[eax+0x74]
  419a55:	or     edi,DWORD PTR [eax-0x3d247e09]
  419a5b:	lahf   
  419a5c:	outs   dx,BYTE PTR ds:[esi]
  419a5d:	pop    ss
  419a5e:	cwde   
  419a5f:	stos   DWORD PTR es:[edi],eax
  419a60:	pop    ds
  419a61:	push   ss
  419a62:	test   al,0xdf
  419a64:	outs   dx,DWORD PTR ds:[esi]
  419a65:	test   eax,0xa86558b0
  419a6a:	sbb    al,0x4e
  419a6c:	jg     0x419a52
  419a6e:	sbb    DWORD PTR [ebx-0x182ca029],ecx
  419a74:	dec    esp
  419a75:	call   0x4ecf1c97
  419a7a:	xor    eax,0xef72410d
  419a7f:	in     al,0x84
  419a81:	mov    esp,0xd4f5f29b
  419a86:	jo     0x419a0c
  419a88:	or     ah,dl
  419a8a:	jb     0x419b02
  419a8c:	(bad)  
  419a8d:	xchg   edi,eax
  419a8e:	xchg   BYTE PTR [esi+eiz*8+0x73],bl
  419a92:	or     eax,0x8e7068c
  419a97:	sbb    esp,DWORD PTR [esi+0xf]
  419a9a:	bound  ecx,QWORD PTR [edi+0x1a]
  419a9d:	and    BYTE PTR [eax-0x7e5088cc],bl
  419aa3:	dec    ebx
  419aa4:	enter  0xf12a,0xda
  419aa8:	ret    
  419aa9:	or     edi,DWORD PTR [ebx]
  419aab:	cmp    al,BYTE PTR [edx+eax*1+0x66]
  419aaf:	test   DWORD PTR [ecx+0x111438a],edi
  419ab5:	jmp    0x419b25
  419ab7:	clc    
  419ab8:	shl    ecx,1
  419aba:	pop    edx
  419abb:	lods   eax,DWORD PTR ds:[esi]
  419abc:	sub    bl,BYTE PTR [ebx]
  419abe:	push   ebp
  419abf:	outs   dx,DWORD PTR ds:[esi]
  419ac0:	js     0x419b3c
  419ac2:	idiv   bl
  419ac4:	fcom   QWORD PTR [ecx-0x23]
  419ac7:	dec    ecx
  419ac8:	add    edx,ebx
  419aca:	mov    ds:0x16370148,al
  419acf:	push   0xffffff8c
  419ad1:	push   0x7050db77
  419ad6:	or     eax,edx
  419ad8:	imul   esi,DWORD PTR ds:0x48de0d8c,0x264a406a
  419ae2:	rcl    DWORD PTR [eax+0x677970d9],1
  419ae8:	and    eax,DWORD PTR [ecx]
  419aea:	xchg   edi,eax
  419aeb:	rcr    al,0x5b
  419aee:	out    dx,al
  419aef:	icebp  
  419af0:	inc    ebp
  419af1:	push   cs
  419af2:	cmp    bl,dl
  419af4:	xchg   ebp,eax
  419af5:	cdq    
  419af6:	sbb    al,0x4c
  419af8:	mov    ebx,0x81ef6557
  419afe:	xlat   BYTE PTR ds:[ebx]
  419aff:	sub    dl,bh
  419b01:	jmp    0x419add
  419b03:	jns    0x419a99
  419b05:	jbe    0x419ac9
  419b07:	xchg   BYTE PTR [edx],bl
  419b09:	pop    ebx
  419b0a:	inc    ebp
  419b0b:	mov    edi,DWORD PTR [edi-0x45]
  419b0e:	push   cs
  419b0f:	ja     0x419b90
  419b11:	inc    ebx
  419b12:	rol    BYTE PTR [esp+ebp*4+0x7e],1
  419b16:	dec    esi
  419b17:	daa    
  419b18:	sbb    ebx,eax
  419b1a:	xlat   BYTE PTR ds:[ebx]
  419b1b:	sub    ah,BYTE PTR [esp+edx*1+0x3dec6a8a]
  419b22:	neg    BYTE PTR [edi-0x2e]
  419b25:	adc    al,BYTE PTR [eax+0x6dd24abe]
  419b2b:	in     eax,0xfe
  419b2d:	es sbb al,0x37
  419b30:	push   ss
  419b31:	stos   DWORD PTR es:[edi],eax
  419b32:	adc    eax,0x1c559cbe
  419b37:	xchg   edi,eax
  419b38:	sub    BYTE PTR [esi],dh
  419b3a:	js     0x419b2a
  419b3c:	les    ebx,FWORD PTR [edx]
  419b3e:	mov    cl,0x2e
  419b40:	dec    ecx
  419b41:	xlat   BYTE PTR ds:[ebx]
  419b42:	(bad)  
  419b43:	into   
  419b44:	inc    ebp
  419b45:	dec    eax
  419b46:	mov    al,0xc9
  419b48:	ds pop ecx
  419b4a:	gs inc ecx
  419b4c:	and    eax,0x502460f6
  419b51:	xor    al,0xe8
  419b53:	xor    ch,BYTE PTR ds:0x2bbf57b7
  419b59:	sbb    al,BYTE PTR [ecx+0x7b674adb]
  419b5f:	sbb    eax,0xb005472d
  419b64:	pop    esp
  419b65:	shl    eax,0xa5
  419b68:	push   esp
  419b69:	ret    0xeda
  419b6c:	jle    0x419b57
  419b6e:	sub    DWORD PTR [esi-0x41],esi
  419b71:	mov    ds:0x14e83793,eax
  419b76:	jmp    0xbe3ebfef
  419b7b:	push   esp
  419b7c:	stc    
  419b7d:	dec    esp
  419b7e:	add    dh,ah
  419b80:	adc    DWORD PTR ds:0x35d2ca1e,eax
  419b86:	adc    eax,0x4f80001
  419b8b:	add    BYTE PTR [eax],al
  419b8d:	xor    al,dl
  419b8f:	mov    cl,0x43
  419b91:	imul   edx,DWORD PTR [ecx+0x3],0x1d
  419b95:	fnstsw WORD PTR [ebp-0x77324739]
  419b9b:	sub    bh,BYTE PTR [edx]
  419b9d:	arpl   WORD PTR [esi],ax
  419b9f:	imul   ebx,DWORD PTR [eax],0x62
  419ba2:	and    BYTE PTR [ebx],bl
  419ba4:	mov    esp,0xad51f6d1
  419ba9:	pop    eax
  419baa:	adc    ah,BYTE PTR [esi+0x5a]
  419bad:	mov    edi,0xb7ce3e20
  419bb2:	inc    esi
  419bb3:	mov    esp,0x6eabc15
  419bb8:	mov    eax,ds:0x2dc09f50
  419bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bbe:	ins    BYTE PTR es:[edi],dx
  419bbf:	enter  0xf676,0x64
  419bc3:	adc    ch,ch
  419bc5:	xor    ch,BYTE PTR [edi+0xacc823c]
  419bcb:	cs pop esi
  419bcd:	and    dl,BYTE PTR [eax+ebp*2+0x73]
  419bd1:	ret    
  419bd2:	mov    bh,0x9b
  419bd4:	sbb    BYTE PTR [esi+edx*2-0x52aa55f3],0xa7
  419bdc:	sti    
  419bdd:	and    ebp,DWORD PTR [edx-0x2b32e6cb]
  419be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be4:	adc    DWORD PTR [esi-0x45],esp
  419be7:	lods   eax,DWORD PTR ds:[esi]
  419be8:	and    WORD PTR [esi-0x44],di
  419bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bed:	mov    ah,0x1f
  419bef:	int3   
  419bf0:	cmp    ch,BYTE PTR [ecx+0x5d]
  419bf3:	out    dx,eax
  419bf4:	dec    esi
  419bf5:	sbb    eax,0x504a185a
  419bfa:	jae    0x419b85
  419bfc:	gs out 0x68,al
  419bff:	into   
  419c00:	(bad)  
  419c01:	mov    ds:0x42af30f1,al
  419c06:	mov    al,dl
  419c08:	push   ebp
  419c09:	(bad)  
  419c0a:	xchg   edx,eax
  419c0b:	(bad)  
  419c0c:	pushf  
  419c0d:	jle    0x419c65
  419c0f:	test   al,cl
  419c11:	in     al,dx
  419c12:	gs inc eax
  419c14:	sub    DWORD PTR [edx],esi
  419c16:	into   
  419c17:	loopne 0x419c2f
  419c19:	add    dh,BYTE PTR [esi-0x2f]
  419c1c:	and    edx,0x53b31f1f
  419c22:	inc    eax
  419c23:	cli    
  419c24:	cli    
  419c25:	dec    edx
  419c26:	sub    al,0xdb
  419c28:	sbb    edi,DWORD PTR [edx+0x39]
  419c2b:	sub    ebp,DWORD PTR [ebp-0x11be7420]
  419c31:	sub    DWORD PTR [ebp+0x4ccd7f34],ebx
  419c37:	inc    esp
  419c38:	loop   0x419c89
  419c3a:	aas    
  419c3b:	jnp    0x419c9d
  419c3d:	sub    al,0x6f
  419c3f:	pop    ebx
  419c40:	or     BYTE PTR [edx],ch
  419c42:	jle    0x419c31
  419c44:	out    0xd4,al
  419c46:	jg     0x419c84
  419c48:	adc    eax,0xcdd5fd8c
  419c4d:	ficom  DWORD PTR ds:0x1003cb53
  419c53:	(bad)  
  419c55:	cmp    eax,0x42548a26
  419c5a:	fist   WORD PTR [ebp-0x1a]
  419c5d:	pusha  
  419c5e:	outs   dx,BYTE PTR ds:[esi]
  419c5f:	out    dx,al
  419c60:	dec    esp
  419c61:	ins    BYTE PTR es:[edi],dx
  419c62:	(bad)  
  419c63:	or     BYTE PTR [edi-0x38],dh
  419c66:	mov    esp,0x8bb7bc58
  419c6b:	jp     0x419cb6
  419c6d:	cmp    eax,0x4d2bd151
  419c72:	adc    eax,0x20f983e9
  419c77:	aam    0x19
  419c79:	mov    BYTE PTR ds:0x5d4b4ba3,ah
  419c7f:	mov    cl,0xe7
  419c81:	mov    dh,0x2b
  419c83:	in     eax,dx
  419c84:	jo     0x419c0e
  419c86:	sbb    ebx,ecx
  419c88:	ins    DWORD PTR es:[edi],dx
  419c89:	leave  
  419c8a:	enter  0x6b2a,0x63
  419c8e:	jg     0x419ce8
  419c90:	out    dx,al
  419c91:	pop    ds
  419c92:	push   ebx
  419c93:	jmp    0x2892:0xcf5881c6
  419c9a:	or     dl,BYTE PTR [ecx+0x63]
  419c9d:	push   edx
  419c9e:	fidivr WORD PTR [eax-0x79]
  419ca1:	dec    eax
  419ca2:	inc    ebp
  419ca3:	xchg   ecx,eax
  419ca4:	mov    al,0xea
  419ca6:	lods   eax,DWORD PTR ds:[esi]
  419ca7:	inc    edi
  419ca8:	xor    eax,0x5dfd0a98
  419cad:	into   
  419cae:	jp     0x419c34
  419cb0:	retf   
  419cb1:	or     edx,DWORD PTR [ecx-0x3b]
  419cb4:	gs push esi
  419cb6:	in     eax,dx
  419cb7:	ja     0x419cd0
  419cb9:	dec    esi
  419cba:	adc    DWORD PTR [eax],ebx
  419cbc:	in     eax,0x67
  419cbe:	rcl    DWORD PTR [ecx-0x6dc7f9d6],1
  419cc4:	test   eax,0xa5f04b01
  419cc9:	mov    ds:0xed345a8b,eax
  419cce:	mov    ecx,0x747169e7
  419cd3:	inc    ebx
  419cd4:	pusha  
  419cd5:	shl    DWORD PTR [edx-0x44],0xe0
  419cd9:	xlat   BYTE PTR ds:[ebx]
  419cda:	jl     0x419d0d
  419cdc:	push   ss
  419cdd:	daa    
  419cde:	xor    cl,bh
  419ce0:	fs jmp 0xe09c:0x62b505db
  419ce8:	repz dec dx
  419ceb:	sbb    DWORD PTR [ecx+0x1f],ebp
  419cee:	test   DWORD PTR [ecx-0x5cddcf4a],0x5a8d31a3
  419cf8:	xchg   ecx,eax
  419cf9:	out    0x30,al
  419cfb:	or     BYTE PTR [esi+eax*4-0x752b3286],bh
  419d02:	imul   eax,DWORD PTR es:[edi+0x61e745d7],0x584caed7
  419d0d:	jecxz  0x419d46
  419d0f:	sbb    ebx,DWORD PTR [esp+eax*2]
  419d12:	mul    DWORD PTR [eax-0x53]
  419d15:	add    ch,dl
  419d17:	mov    BYTE PTR cs:[ecx+edx*4-0x3a04cb26],ah
  419d1f:	mov    bh,0xe9
  419d21:	or     ecx,DWORD PTR [ebx+0x50a29fde]
  419d27:	ficom  DWORD PTR [edi-0x3b441fcf]
  419d2d:	(bad)
  419d30:	ins    BYTE PTR es:[edi],dx
  419d31:	push   esi
  419d32:	jmp    0xb7e98701
  419d37:	mov    edx,0xc4ef4b02
  419d3c:	pop    edi
  419d3d:	sbb    al,0x13
  419d3f:	mov    edi,0xe979ea4d
  419d44:	adc    ch,BYTE PTR [esi+0x2feb6a41]
  419d4a:	xchg   edx,eax
  419d4b:	loopne 0x419d31
  419d4d:	xor    BYTE PTR [ebx-0x5b6b3907],dl
  419d53:	pop    edx
  419d54:	test   BYTE PTR [ebx-0x25],cl
  419d57:	out    dx,al
  419d58:	xchg   edx,eax
  419d59:	out    0x62,al
  419d5b:	or     eax,0xfbdade01
  419d60:	mov    esp,0xe28c242f
  419d65:	shr    BYTE PTR [eax],1
  419d67:	mov    ch,0x14
  419d69:	(bad)  
  419d6a:	xchg   esp,eax
  419d6b:	test   eax,0x8de6b8a1
  419d70:	into   
  419d71:	adc    ecx,0xffffffcf
  419d74:	or     edi,DWORD PTR [esi+0x541ee848]
  419d7a:	dec    eax
  419d7b:	mov    esp,0x6259259e
  419d80:	inc    DWORD PTR [edx-0x3a]
  419d83:	add    eax,0x7efd0fb0
  419d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d89:	aaa    
  419d8a:	cmp    esp,DWORD PTR [ebx]
  419d8c:	iret   
  419d8d:	pop    ecx
  419d8e:	jl     0x419e0d
  419d90:	mov    ah,0x63
  419d92:	mov    ds:0xda149894,eax
  419d97:	int3   
  419d98:	mov    dl,0x1
  419d9a:	xor    al,bh
  419d9c:	push   ebx
  419d9d:	add    esp,DWORD PTR [eax+0x726dd44d]
  419da3:	scas   al,BYTE PTR es:[edi]
  419da4:	je     0x419e15
  419da6:	pop    ebx
  419da7:	push   esi
  419da8:	stos   DWORD PTR es:[edi],eax
  419da9:	push   ecx
  419daa:	loopne 0x419d7a
  419dac:	sti    
  419dad:	sbb    edx,DWORD PTR [edx+0x3b0b63aa]
  419db3:	in     al,dx
  419db4:	ins    DWORD PTR es:[edi],dx
  419db5:	xor    ch,ch
  419db7:	shr    ch,0x3a
  419dba:	out    dx,eax
  419dbb:	xor    DWORD PTR [eax],0x21
  419dbe:	ds arpl bx,bx
  419dc1:	sub    BYTE PTR [edx],dl
  419dc3:	js     0x419dce
  419dc5:	mov    DWORD PTR [ebp+0x65e821fe],esp
  419dcb:	jnp    0x419e3e
  419dcd:	push   ebp
  419dce:	and    bl,cl
  419dd0:	je     0x419de8
  419dd2:	out    0x74,al
  419dd4:	mov    WORD PTR [edx+0x4a],ss
  419dd7:	mov    ds:0x4057c6eb,eax
  419ddc:	popf   
  419ddd:	ja     0x419dbb
  419ddf:	jge    0x419e1e
  419de1:	ds cdq 
  419de3:	mov    ch,0x8e
  419de5:	fwait
  419de6:	push   cs
  419de7:	mov    edi,0xa7e3b21a
  419dec:	cmp    BYTE PTR [edi],bh
  419dee:	retf   0x6bc0
  419df1:	add    eax,0x74e7b2cb
  419df6:	inc    esi
  419df7:	stos   BYTE PTR es:[edi],al
  419df8:	ror    DWORD PTR [ecx-0x63],1
  419dfb:	xor    eax,DWORD PTR [ecx+eax*1-0x1f3cbee0]
  419e02:	dec    esp
  419e03:	push   ds
  419e04:	mov    ebp,0x836f3806
  419e09:	sbb    BYTE PTR [esi],al
  419e0b:	sbb    eax,DWORD PTR [esi-0x4a3499ba]
  419e11:	bound  edx,QWORD PTR [edx+0x25918e74]
  419e17:	iret   
  419e18:	cmp    DWORD PTR [ebp-0x5e],edi
  419e1b:	test   ah,dl
  419e1d:	jg     0x419db8
  419e1f:	jae    0x419e7a
  419e21:	mov    bl,0xdd
  419e23:	dec    eax
  419e24:	test   ch,cl
  419e26:	das    
  419e27:	out    dx,al
  419e28:	cmc    
  419e29:	sub    esi,DWORD PTR [ebx]
  419e2b:	sti    
  419e2c:	icebp  
  419e2d:	mov    ebp,0x8805c2b9
  419e32:	iret   
  419e33:	push   edx
  419e34:	or     eax,0x5a2f19f4
  419e39:	add    bh,BYTE PTR [ebp*2+0x43527ca0]
  419e40:	xor    ecx,DWORD PTR [eax+0x56]
  419e43:	inc    ecx
  419e44:	xchg   edx,eax
  419e45:	xchg   ecx,eax
  419e46:	daa    
  419e47:	add    al,0x6c
  419e49:	mov    al,ds:0x9be755a9
  419e4e:	and    al,0x1f
  419e50:	sbb    DWORD PTR [ebx+eax*8],0xd300efe6
  419e57:	(bad)  ds:0xfa4bc06f
  419e5d:	mov    esp,0x21191b79
  419e62:	sti    
  419e63:	xlat   BYTE PTR ds:[ebx]
  419e64:	mov    ds:0xfe8057db,eax
  419e69:	(bad)  
  419e6b:	pop    ds
  419e6c:	inc    ecx
  419e6d:	not    ah
  419e6f:	mov    esi,0xd63323dd
  419e74:	les    ecx,FWORD PTR [ebx+0x4dff65a3]
  419e7a:	mov    bh,0xb2
  419e7c:	ds in  al,dx
  419e7e:	push   0x38b4a290
  419e83:	xchg   esp,eax
  419e84:	adc    DWORD PTR [eax+0x440f7a46],0x4f
  419e8b:	ja     0x419e47
  419e8d:	inc    edx
  419e8e:	out    dx,eax
  419e8f:	fsub   QWORD PTR [esi]
  419e91:	in     eax,dx
  419e92:	cmp    DWORD PTR [ebp+0x28],edi
  419e95:	gs mov esp,0xe0ff9013
  419e9b:	not    BYTE PTR [edx+0x1f2a8eb5]
  419ea1:	jnp    0x419e6f
  419ea3:	test   eax,0x801e9714
  419ea8:	jo     0x419ee2
  419eaa:	sar    BYTE PTR [ebx-0x714e811a],1
  419eb0:	rol    DWORD PTR ss:[edx+0x3c],cl
  419eb4:	dec    edx
  419eb5:	jbe    0x419e87
  419eb7:	fadd   DWORD PTR [edx+eax*1]
  419eba:	cmp    BYTE PTR ds:0x3f8ea59f,dl
  419ec0:	outs   dx,DWORD PTR ds:[esi]
  419ec1:	hlt    
  419ec2:	adc    BYTE PTR [ecx],bh
  419ec4:	mov    esi,0x97abfe62
  419ec9:	and    al,0xa5
  419ecb:	jge    0x419f2a
  419ecd:	es test al,0x3d
  419ed0:	repz sub dl,cl
  419ed3:	adc    ah,al
  419ed5:	and    DWORD PTR [edx-0xa],eax
  419ed8:	push   cs
  419ed9:	adc    al,0x4d
  419edb:	mov    cl,0xd6
  419edd:	pop    ds
  419ede:	cmp    BYTE PTR [edx+0x755e95cb],bl
  419ee4:	mov    ds:0xa5343cc4,al
  419ee9:	jge    0x419eb8
  419eeb:	call   0xf54260e3
  419ef0:	xor    BYTE PTR [edi+ebx*8],cl
  419ef3:	xor    eax,0xc587340
  419ef8:	xor    ch,bh
  419efa:	pop    es
  419efb:	pop    eax
  419efc:	mov    bh,0xb7
  419efe:	stos   BYTE PTR es:[edi],al
  419eff:	cli    
  419f00:	out    0xb7,eax
  419f02:	test   BYTE PTR ds:0x4a2229ef,0x1
  419f09:	aam    0x8b
  419f0b:	jae    0x419ec7
  419f0d:	inc    ecx
  419f0e:	jnp    0x419f51
  419f10:	out    0x11,al
  419f12:	mov    edi,0x2677b913
  419f17:	xor    BYTE PTR [edi],bl
  419f19:	enter  0x4441,0xe4
  419f1d:	xor    eax,0xc799623
  419f22:	jmp    0x419f79
  419f24:	push   0x52262bf6
  419f29:	es sti 
  419f2b:	inc    esp
  419f2c:	adc    DWORD PTR [ebx],0x41b64eaa
  419f32:	mov    ds:0x5f301cf3,eax
  419f37:	jg     0x419ee5
  419f39:	cwde   
  419f3a:	and    esi,ecx
  419f3c:	sbb    eax,0x5db6bec4
  419f41:	mov    fs,ebp
  419f43:	test   eax,0xdcfd75d4
  419f48:	mov    ebp,0x3c5d7322
  419f4d:	out    0x3a,eax
  419f4f:	loope  0x419ef7
  419f51:	inc    ebx
  419f52:	fldenv [edi+0x61]
  419f55:	sbb    BYTE PTR [edx+0x6ed39646],cl
  419f5b:	in     al,0x91
  419f5d:	push   ecx
  419f5e:	and    al,0xec
  419f60:	popa   
  419f61:	adc    dh,BYTE PTR [ecx-0x66c10216]
  419f67:	test   eax,0xbc17a537
  419f6c:	std    
  419f6d:	mov    dh,0x65
  419f6f:	into   
  419f70:	pop    ss
  419f71:	xchg   esp,eax
  419f72:	pop    ebx
  419f73:	push   ds
  419f74:	in     eax,dx
  419f75:	and    eax,0x6baf75e5
  419f7a:	stos   DWORD PTR es:[edi],eax
  419f7b:	shl    DWORD PTR [edi+0x6002e840],cl
  419f81:	xchg   ecx,eax
  419f82:	jmp    0xe016d378
  419f87:	xchg   DWORD PTR [ebp+0xd22d5c],ebp
  419f8d:	mov    dh,BYTE PTR [eax-0x2cc97aa5]
  419f93:	pushf  
  419f94:	aam    0x46
  419f96:	call   FWORD PTR [ebx-0x2d]
  419f99:	mov    ebx,eax
  419f9b:	jmp    0x52871a5
  419fa0:	xchg   edx,eax
  419fa1:	mov    bl,BYTE PTR [edi+0x61]
  419fa4:	jp     0x419f5f
  419fa6:	sub    eax,DWORD PTR [edx]
  419fa8:	cmp    eax,0x41143d1d
  419fad:	push   esp
  419fae:	lods   al,BYTE PTR ds:[esi]
  419faf:	pop    edi
  419fb0:	stos   BYTE PTR es:[edi],al
  419fb1:	jbe    0x419fa5
  419fb3:	jl     0x41a014
  419fb5:	stos   BYTE PTR es:[edi],al
  419fb6:	test   al,0x84
  419fb8:	mov    ebx,0xcc90dc8b
  419fbd:	mov    dl,0x52
  419fbf:	mov    cl,0x61
  419fc1:	pop    ds
  419fc2:	ja     0x419f9a
  419fc4:	(bad)  
  419fc5:	xchg   ecx,eax
  419fc6:	pop    edx
  419fc7:	out    dx,eax
  419fc8:	mov    edx,0xa444c586
  419fcd:	pop    eax
  419fce:	jmp    0xad5e:0xd66acbb2
  419fd5:	sbb    bh,BYTE PTR [edi]
  419fd7:	xchg   DWORD PTR [eax+esi*1+0x23],ebp
  419fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fdd:	call   0x3d99:0xfc209409
  419fe4:	std    
  419fe5:	sahf   
  419fe6:	and    DWORD PTR [esi+0xf],ebx
  419fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fea:	sub    DWORD PTR [ecx+eax*1-0x2c1ca55c],eax
  419ff1:	into   
  419ff2:	sti    
  419ff3:	cmp    eax,0x6de6cd6d
  419ff8:	(bad)  
  419ff9:	push   esp
  419ffa:	call   0xb137:0x40864121
  41a001:	fst    DWORD PTR [ecx+0x61]
  41a004:	das    
  41a005:	fldcw  WORD PTR [ebx]
  41a007:	or     eax,DWORD PTR [edx+0x68c9acb0]
  41a00d:	test   al,0x36
  41a00f:	les    esp,FWORD PTR [eax]
  41a011:	test   eax,0x9f92695
  41a016:	mov    bl,BYTE PTR [edi-0xa]
  41a019:	pop    esi
  41a01a:	jmp    0x25cf:0xa60db8b6
  41a021:	ins    DWORD PTR es:[edi],dx
  41a022:	pop    edi
  41a023:	stos   BYTE PTR es:[edi],al
  41a024:	lds    edx,FWORD PTR [esi-0xc7a7c36]
  41a02a:	and    bh,BYTE PTR [ebp-0x8]
  41a02d:	(bad)  
  41a02e:	pop    ebp
  41a02f:	dec    esi
  41a030:	fdivrp st(7),st
  41a032:	push   ds
  41a033:	jge    0x41a09c
  41a035:	ins    DWORD PTR es:[edi],dx
  41a036:	mov    BYTE PTR [ecx-0x5f],bl
  41a039:	dec    ecx
  41a03a:	leave  
  41a03b:	imul   edi,esi,0x41778bbc
  41a041:	retf   
  41a042:	adc    DWORD PTR [ecx],esi
  41a044:	dec    ebp
  41a045:	jg     0x41a05a
  41a047:	mov    dh,0x5d
  41a049:	in     al,0xd1
  41a04b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a04c:	add    eax,0xdcf6725d
  41a051:	fsubr  DWORD PTR [edx-0x300b04ba]
  41a057:	jg     0x41a0ad
  41a059:	xor    BYTE PTR [esp+ebx*1-0x6a],cl
  41a05d:	sahf   
  41a05e:	pusha  
  41a05f:	pop    esi
  41a060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a061:	dec    ebp
  41a062:	add    al,0x32
  41a064:	sbb    eax,0x1c82a550
  41a069:	adc    ah,BYTE PTR [ecx]
  41a06b:	xor    eax,0x8cc1cb32
  41a070:	aad    0xb7
  41a072:	jmp    0x513a5f5
  41a077:	or     BYTE PTR [esi],bh
  41a079:	mov    ch,0x7d
  41a07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a07c:	imul   esp,esi,0x38435cb0
  41a082:	mov    BYTE PTR ds:0xc0458869,al
  41a088:	fs int 0xe5
  41a08b:	lods   al,BYTE PTR ds:[esi]
  41a08c:	in     eax,dx
  41a08d:	call   0x1e977730
  41a092:	ins    BYTE PTR es:[edi],dx
  41a093:	sub    DWORD PTR ds:0xf800011a,ebp
  41a09a:	add    al,0x0
  41a09c:	add    BYTE PTR [ebp+0xa12a9e1],dl
  41a0a2:	out    dx,al
  41a0a3:	addr16 cmp al,0xbf
  41a0a6:	pop    edx
  41a0a7:	out    0x6b,al
  41a0a9:	(bad)  
  41a0ab:	mov    ds:0x99c70b2e,al
  41a0b0:	(bad)  
  41a0b1:	add    eax,0x23118ba6
  41a0b6:	bound  ecx,QWORD PTR [ecx+0x6a334d2c]
  41a0bc:	pushf  
  41a0bd:	mov    ch,0xad
  41a0bf:	pop    ebp
  41a0c0:	dec    esp
  41a0c1:	add    eax,0xffe0da5b
  41a0c6:	jmp    0x7d7a:0x4cce7883
  41a0cd:	and    ecx,DWORD PTR [edx+0x44]
  41a0d0:	mov    esp,0x461dac80
  41a0d5:	aaa    
  41a0d6:	test   BYTE PTR [ecx+0x4336538b],ah
  41a0dc:	add    dh,ch
  41a0de:	mov    esi,ds
  41a0e0:	mov    gs,eax
  41a0e2:	retf   0xd87e
  41a0e5:	dec    esp
  41a0e6:	ficomp DWORD PTR cs:[eax-0x23]
  41a0ea:	dec    esp
  41a0eb:	pop    esp
  41a0ec:	imul   ebx,esp,0xffffff91
  41a0ef:	cwde   
  41a0f0:	pushf  
  41a0f1:	push   ds
  41a0f2:	lea    edx,[ebx+0x5720d6d5]
  41a0f8:	call   0x55adde31
  41a0fd:	or     bh,BYTE PTR [ecx]
  41a0ff:	mov    eax,0x678357e5
  41a104:	out    0x6c,al
  41a106:	add    al,0xa1
  41a108:	jns    0x41a0b2
  41a10a:	xchg   esp,eax
  41a10b:	test   DWORD PTR [ebx],ebp
  41a10d:	add    ebx,DWORD PTR [eax+0xc8d55fd]
  41a113:	add    eax,0x15c8a94d
  41a118:	ja     0x41a0a5
  41a11a:	loopne 0x41a142
  41a11c:	and    bl,ch
  41a11e:	inc    ecx
  41a11f:	or     ch,dh
  41a121:	clc    
  41a122:	arpl   bp,dx
  41a124:	xchg   esp,eax
  41a125:	ins    DWORD PTR es:[edi],dx
  41a126:	dec    edx
  41a127:	fwait
  41a128:	inc    esp
  41a129:	jg     0x41a0e6
  41a12b:	(bad)  
  41a12c:	fiadd  WORD PTR [eax+esi*2]
  41a12f:	ret    
  41a130:	mov    ecx,ebx
  41a132:	repz pop ds
  41a134:	test   eax,edx
  41a136:	pop    ecx
  41a137:	fwait
  41a138:	cs pop edx
  41a13a:	fcmovb st,st(4)
  41a13c:	cdq    
  41a13d:	push   ss
  41a13e:	xchg   ebx,eax
  41a13f:	add    DWORD PTR [edx],ecx
  41a141:	cld    
  41a142:	ficomp WORD PTR [ecx-0x4e]
  41a145:	xor    al,0x40
  41a147:	inc    esi
  41a148:	ret    0x9fb4
  41a14b:	jb     0x41a108
  41a14d:	mov    dh,0x79
  41a14f:	jle    0x41a16e
  41a151:	mov    eax,ds:0x7cd32db1
  41a156:	cbw    
  41a158:	aaa    
  41a159:	lods   al,BYTE PTR ds:[esi]
  41a15a:	inc    esp
  41a15b:	sti    
  41a15c:	add    ebx,esp
  41a15e:	jg     0x41a1de
  41a160:	sub    DWORD PTR [ebp-0x32],esi
  41a163:	xor    al,0xb8
  41a165:	cmp    BYTE PTR [ebp-0x35919380],cl
  41a16b:	cli    
  41a16c:	pop    edx
  41a16d:	sub    edx,DWORD PTR [ebx-0x23325b90]
  41a173:	inc    ebx
  41a174:	rcl    ebx,0x2f
  41a177:	add    ebp,DWORD PTR [ecx-0x39]
  41a17a:	test   BYTE PTR [edx],bh
  41a17c:	push   edi
  41a17d:	xchg   edx,eax
  41a17e:	test   BYTE PTR ds:0x596043d7,bh
  41a184:	cld    
  41a185:	fs out dx,al
  41a187:	dec    edi
  41a188:	imul   ebx,DWORD PTR [ebp-0x7d65f52e],0xab5a1126
  41a192:	sub    BYTE PTR [eax+ebp*2-0x52],0xa2
  41a197:	pusha  
  41a198:	push   edi
  41a199:	add    ah,al
  41a19b:	js     0x41a1b0
  41a19d:	mov    edi,0xf5d06a2c
  41a1a2:	jmp    0xebbb:0xbbcf13f2
  41a1a9:	ror    DWORD PTR [edi+0x20c048a6],1
  41a1af:	dec    esp
  41a1b0:	and    BYTE PTR [ebp+0x53af0801],bh
  41a1b6:	shr    DWORD PTR [ecx-0x28768312],0x4f
  41a1bd:	call   0x8e7c:0x91580919
  41a1c4:	clc    
  41a1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c6:	test   BYTE PTR [edi+0x716e656d],bh
  41a1cc:	and    eax,0x3ffc9af5
  41a1d1:	mov    bl,0xf8
  41a1d3:	imul   esp,DWORD PTR [esi+0x11],0xffffff8f
  41a1d7:	aaa    
  41a1d8:	inc    ebp
  41a1d9:	lock xor al,BYTE PTR fs:[ebp+0x73]
  41a1de:	mov    cl,0xab
  41a1e0:	and    DWORD PTR [esi+0x5354a9e7],edi
  41a1e6:	sub    al,0x55
  41a1e8:	aam    0xa8
  41a1ea:	out    0xfb,eax
  41a1ec:	(bad)  
  41a1ed:	jg     0x41a1fd
  41a1ef:	push   ss
  41a1f0:	ror    dh,1
  41a1f2:	dec    esi
  41a1f3:	stos   BYTE PTR es:[edi],al
  41a1f4:	dec    ebx
  41a1f5:	xor    al,0x2d
  41a1f7:	lods   eax,DWORD PTR ds:[esi]
  41a1f8:	mov    edi,0x6f64299e
  41a1fd:	jo     0x41a20c
  41a1ff:	jbe    0x41a182
  41a201:	imul   edx,DWORD PTR [ecx+0x49],0xffffff9c
  41a205:	sqrtps xmm5,xmm2
  41a208:	cmp    ebx,DWORD PTR [ebx]
  41a20a:	xor    dh,al
  41a20c:	pmaddwd mm7,QWORD PTR [ebp+0x1b45369a]
  41a213:	shl    BYTE PTR [esi+0x78],1
  41a216:	fcomp  DWORD PTR [ecx+0x707fd01c]
  41a21c:	(bad)  
  41a21e:	dec    DWORD PTR [ebx]
  41a220:	repnz imul dh
  41a223:	ror    BYTE PTR [ecx],cl
  41a225:	dec    edi
  41a226:	add    ah,dl
  41a228:	inc    ebp
  41a22a:	jae    0x41a1bf
  41a22c:	test   DWORD PTR [ecx-0x55b2a70],edi
  41a232:	data16 in al,dx
  41a234:	xchg   ebp,ebp
  41a236:	jp     0x41a20c
  41a238:	sbb    DWORD PTR [ebx],eax
  41a23a:	ror    BYTE PTR [edi+0x3e],cl
  41a23d:	psllq  mm7,QWORD PTR [edi+0x41]
  41a241:	cld    
  41a242:	popf   
  41a243:	inc    eax
  41a244:	(bad)  
  41a246:	xchg   edi,eax
  41a247:	inc    edi
  41a248:	test   DWORD PTR [ebp-0x2c80cad5],eax
  41a24e:	sbb    edx,DWORD PTR [edi]
  41a250:	xchg   esp,eax
  41a251:	fcomp  DWORD PTR [edi]
  41a253:	scas   eax,DWORD PTR es:[edi]
  41a254:	cdq    
  41a255:	and    esi,ebx
  41a257:	lds    esi,FWORD PTR [ebp-0x6e405880]
  41a25d:	jbe    0x41a280
  41a25f:	outs   dx,BYTE PTR ds:[esi]
  41a260:	push   edi
  41a261:	es xchg edi,eax
  41a263:	jmp    0xf4d84458
  41a268:	stos   DWORD PTR es:[edi],eax
  41a269:	adc    edi,DWORD PTR [edx+eiz*2-0x14659a1]
  41a270:	mov    bl,ah
  41a272:	jae    0x41a2e3
  41a274:	ret    0x3214
  41a277:	adc    DWORD PTR [ecx-0x5483b9ea],ecx
  41a27d:	aaa    
  41a27e:	or     al,0xb3
  41a280:	or     BYTE PTR [esi+0x5acee663],dl
  41a286:	adc    edx,DWORD PTR [eax-0x1d9cde8b]
  41a28c:	repnz mov ch,al
  41a28f:	xchg   edi,eax
  41a290:	or     cl,dl
  41a292:	push   0x6a
  41a294:	mov    eax,0x78a383a6
  41a299:	mov    ecx,0x51cf3136
  41a29e:	push   ss
  41a29f:	xor    esi,DWORD PTR [edi+0x6f27f4d1]
  41a2a5:	hlt    
  41a2a6:	adc    al,0x72
  41a2a8:	fst    QWORD PTR [esi+0xb]
  41a2ab:	adc    DWORD PTR ds:0x37cc5644,edx
  41a2b1:	cwde   
  41a2b2:	lahf   
  41a2b3:	out    dx,eax
  41a2b4:	pop    eax
  41a2b5:	cmp    cl,BYTE PTR [ebp+0x378c918]
  41a2bb:	lods   al,BYTE PTR ds:[esi]
  41a2bc:	sbb    esp,DWORD PTR [ebp-0x62]
  41a2bf:	je     0x41a2f3
  41a2c1:	push   ss
  41a2c2:	call   0x38b:0x2c91b3aa
  41a2c9:	inc    ebp
  41a2ca:	jmp    0x2fa9:0x8ea7deb6
  41a2d1:	add    BYTE PTR [esi+0x4d],dh
  41a2d4:	push   es
  41a2d5:	mov    ds:0x553ceffb,al
  41a2da:	adc    dl,dh
  41a2dc:	adc    al,BYTE PTR [edx+0x8b7a3c8]
  41a2e2:	add    esp,ecx
  41a2e4:	leave  
  41a2e5:	pop    ds
  41a2e6:	sub    BYTE PTR [ecx-0x6d],ah
  41a2e9:	(bad)  
  41a2ea:	rcl    BYTE PTR [edi+0x6b391c57],cl
  41a2f0:	or     al,0xde
  41a2f2:	xor    DWORD PTR [ebp-0x6f],eax
  41a2f5:	fisttp QWORD PTR ds:0x71796ab9
  41a2fb:	and    BYTE PTR [eax+esi*8-0x62],0x35
  41a300:	call   0x153315b3
  41a305:	add    DWORD PTR [edi+0x71],eax
  41a308:	sbb    al,0x17
  41a30a:	mov    esp,0xf9674110
  41a30f:	or     BYTE PTR [esi],dl
  41a311:	data16 fst DWORD PTR [edx]
  41a314:	push   edi
  41a315:	loope  0x41a2d6
  41a317:	mov    dh,BYTE PTR [ebx-0x11]
  41a31a:	punpcklbw mm4,DWORD PTR [ecx-0x75]
  41a31e:	out    dx,eax
  41a31f:	lods   eax,DWORD PTR ds:[esi]
  41a320:	push   ebx
  41a321:	mov    esi,DWORD PTR [ebx]
  41a323:	sub    dl,BYTE PTR [ebx-0x39bc5e13]
  41a329:	scas   al,BYTE PTR es:[edi]
  41a32a:	pop    esp
  41a32b:	xchg   BYTE PTR [eax+0x34],bh
  41a32e:	push   eax
  41a32f:	push   es
  41a330:	aas    
  41a331:	les    edx,FWORD PTR [edi+0x44]
  41a334:	inc    ebx
  41a335:	xchg   ebx,eax
  41a336:	test   eax,0x65035dbb
  41a33b:	(bad)  
  41a33d:	test   al,0x33
  41a33f:	out    0x88,eax
  41a341:	dec    eax
  41a342:	jae    0x41a36a
  41a344:	(bad)  
  41a346:	xor    BYTE PTR [ebx],0x37
  41a349:	inc    edx
  41a34a:	cdq    
  41a34b:	adc    BYTE PTR [ebx-0x67],bh
  41a34e:	xchg   edi,eax
  41a34f:	and    ah,ah
  41a351:	(bad)  
  41a352:	push   edi
  41a353:	sub    dh,BYTE PTR [ebp-0x40]
  41a356:	or     edx,DWORD PTR [edx-0x39]
  41a359:	and    eax,0xc591523e
  41a35e:	bound  ebx,QWORD PTR [edi-0xb]
  41a361:	push   ss
  41a362:	mov    bh,0xd1
  41a364:	adc    eax,0x114864cd
  41a369:	loope  0x41a34d
  41a36b:	lock repnz sbb esi,esp
  41a36f:	test   DWORD PTR ds:0x6e4ec837,esp
  41a375:	aas    
  41a376:	or     eax,0xf2105d1
  41a37b:	mov    edx,0x3b2e0cd0
  41a380:	fs inc ecx
  41a382:	and    bh,BYTE PTR [ecx+0x6e2d14b9]
  41a388:	mov    eax,0x76ebec12
  41a38d:	pop    ds
  41a38e:	dec    eax
  41a38f:	jno    0x41a338
  41a391:	test   eax,0x4c63590
  41a396:	outs   dx,BYTE PTR ds:[esi]
  41a397:	inc    eax
  41a398:	fucompp 
  41a39a:	bound  ecx,QWORD PTR [edx]
  41a39c:	pusha  
  41a39d:	ins    DWORD PTR es:[edi],dx
  41a39e:	cmp    BYTE PTR [esi+0x11],bl
  41a3a1:	mov    ebx,0xe598de5b
  41a3a6:	sbb    al,0x82
  41a3a8:	les    eax,FWORD PTR [edx+0x22]
  41a3ab:	dec    eax
  41a3ac:	pusha  
  41a3ad:	out    dx,al
  41a3ae:	hlt    
  41a3af:	inc    esi
  41a3b0:	pop    ebp
  41a3b1:	add    BYTE PTR [ebx],ah
  41a3b3:	jno    0x41a3b1
  41a3b5:	jle    0x41a393
  41a3b7:	pop    eax
  41a3b8:	and    ebp,0x76
  41a3bb:	pop    ss
  41a3bc:	jge    0x41a381
  41a3be:	push   es
  41a3bf:	xor    DWORD PTR [eax+0x3d],esp
  41a3c2:	cli    
  41a3c3:	xor    DWORD PTR [esi+0x14],esp
  41a3c6:	cdq    
  41a3c7:	mov    ecx,0x6580eb77
  41a3cc:	aad    0xa6
  41a3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3cf:	xlat   BYTE PTR ds:[ebx]
  41a3d0:	(bad)  
  41a3d1:	pop    esp
  41a3d2:	jne    0x41a382
  41a3d4:	or     ch,dl
  41a3d6:	inc    ebx
  41a3d7:	mov    al,BYTE PTR [eax-0x25bc7de1]
  41a3dd:	mov    esi,0x5e192879
  41a3e2:	mov    ebx,0xe0f36645
  41a3e7:	or     bh,BYTE PTR [ebx+0x6c]
  41a3ea:	fs pop ss
  41a3ec:	dec    ecx
  41a3ed:	pop    edx
  41a3ee:	mov    ebp,0x10c2f323
  41a3f3:	(bad)  
  41a3f4:	mov    DWORD PTR [edx],edi
  41a3f6:	fild   WORD PTR [eax-0x70]
  41a3f9:	ss je  0x41a444
  41a3fc:	mov    ebx,0xcfd0c836
  41a401:	sub    eax,0x82b46847
  41a406:	and    eax,0xb7cd3028
  41a40b:	test   DWORD PTR [edx-0x20],ecx
  41a40e:	(bad)  
  41a411:	and    al,0xce
  41a413:	ins    BYTE PTR es:[edi],dx
  41a414:	aas    
  41a415:	xchg   BYTE PTR [eax+edx*2+0xa],ch
  41a419:	psubq  mm5,QWORD PTR [ebp-0x6a]
  41a41d:	pop    ecx
  41a41e:	push   ebp
  41a41f:	pop    edi
  41a420:	test   al,0x8b
  41a422:	das    
  41a423:	mov    bh,0x89
  41a425:	ins    DWORD PTR es:[edi],dx
  41a426:	cli    
  41a427:	call   0x6098ef01
  41a42c:	jbe    0x41a481
  41a42e:	arpl   WORD PTR [ebp+0x22],sp
  41a431:	xor    eax,0x5e765b26
  41a436:	jo     0x41a44c
  41a438:	or     BYTE PTR [esi-0x39],bl
  41a43b:	cs popf 
  41a43d:	sar    DWORD PTR [eax+0xd86b76d],cl
  41a443:	pop    ebp
  41a444:	jmp    0x41a8:0x9f69f3a3
  41a44b:	icebp  
  41a44c:	stc    
  41a44d:	es xchg esp,eax
  41a44f:	into   
  41a450:	mov    ebp,0xd53f3aab
  41a455:	into   
  41a456:	xchg   ebx,eax
  41a457:	mov    ds:0x246cf93e,eax
  41a45c:	pusha  
  41a45d:	sub    ecx,eax
  41a45f:	jle    0x41a45a
  41a461:	test   eax,0x3993653a
  41a466:	push   ebx
  41a467:	push   cs
  41a468:	jo     0x41a4de
  41a46a:	jge    0x41a4b6
  41a46c:	je     0x41a45b
  41a46e:	pop    ebx
  41a46f:	(bad)  
  41a470:	xchg   ecx,eax
  41a471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a472:	lods   eax,DWORD PTR ds:[esi]
  41a473:	mov    bl,0x17
  41a475:	xlat   BYTE PTR ds:[ebx]
  41a476:	das    
  41a477:	mov    al,ds:0x587e3cb3
  41a47c:	int3   
  41a47d:	fwait
  41a47e:	xchg   ebp,eax
  41a47f:	adc    eax,0xf97ee3f0
  41a484:	dec    ecx
  41a485:	icebp  
  41a486:	xor    BYTE PTR [ebx+0x402978ee],bh
  41a48c:	(bad)  
  41a48d:	loope  0x41a496
  41a48f:	push   ebx
  41a490:	repnz sbb esi,DWORD PTR [esi]
  41a493:	xor    esp,ebp
  41a495:	mov    cl,0xe5
  41a497:	mov    al,0xfe
  41a499:	xchg   esi,eax
  41a49a:	mov    edx,0xee8212b2
  41a49f:	sub    ebx,edi
  41a4a1:	inc    ebx
  41a4a2:	popa   
  41a4a3:	xchg   edx,eax
  41a4a4:	repnz adc eax,DWORD PTR ds:0x85055c5e
  41a4ab:	xor    BYTE PTR [edi-0x1e05271c],ch
  41a4b1:	cmc    
  41a4b2:	inc    ecx
  41a4b3:	(bad)  
  41a4b5:	sbb    bl,ah
  41a4b7:	xor    ebx,DWORD PTR [ebx+ebp*1]
  41a4ba:	mov    eax,ds:0xf91a1731
  41a4bf:	push   esi
  41a4c0:	ja     0x41a540
  41a4c2:	push   0xffffffd4
  41a4c4:	or     BYTE PTR [edi],cl
  41a4c6:	rcl    DWORD PTR [edi-0x5aef44b1],cl
  41a4cc:	push   0xffffffd3
  41a4ce:	push   ss
  41a4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4d0:	or     BYTE PTR [ebx-0x2d94b695],ch
  41a4d6:	inc    esi
  41a4d7:	xchg   ebp,eax
  41a4d8:	jne    0x41a4f7
  41a4da:	sbb    esi,DWORD PTR [edx-0xfd5bd96]
  41a4e0:	scas   al,BYTE PTR es:[edi]
  41a4e1:	adc    BYTE PTR [edx],dh
  41a4e3:	test   eax,0xae0efaa6
  41a4e8:	mov    DWORD PTR es:[ebp-0x750fd208],ebx
  41a4ef:	sub    DWORD PTR [edx-0x6ac69b38],edi
  41a4f5:	jnp    0x41a48f
  41a4f7:	jne    0x41a4a7
  41a4f9:	push   ebx
  41a4fa:	sbb    eax,DWORD PTR [eax+0x12106902]
  41a500:	dec    esp
  41a501:	outs   dx,DWORD PTR ds:[esi]
  41a502:	xchg   esi,eax
  41a503:	xchg   DWORD PTR [ebx],esp
  41a505:	inc    eax
  41a506:	cmc    
  41a507:	and    BYTE PTR [esi],cl
  41a509:	imul   eax,DWORD PTR [ecx],0x47bb1ed1
  41a50f:	addr16 mov edi,0x56196a13
  41a515:	sub    edi,DWORD PTR [eax+0x56e0dd30]
  41a51b:	dec    esp
  41a51c:	jnp    0x41a53a
  41a51e:	xchg   ecx,eax
  41a51f:	loope  0x41a564
  41a521:	outs   dx,BYTE PTR ds:[esi]
  41a522:	xchg   esi,eax
  41a523:	mov    eax,DWORD PTR [ecx]
  41a525:	mov    bh,0x17
  41a527:	adc    BYTE PTR [edi],bl
  41a529:	bound  esi,QWORD PTR [edx]
  41a52b:	inc    edx
  41a52c:	popf   
  41a52d:	out    dx,eax
  41a52e:	push   ebp
  41a52f:	jle    0x41a582
  41a531:	mov    bl,0xb9
  41a533:	sbb    BYTE PTR [edi+0x6bc2ef21],dl
  41a539:	fs add eax,0xea09f5f4
  41a53f:	cdq    
  41a540:	aam    0x4d
  41a542:	js     0x41a4fd
  41a544:	or     cl,BYTE PTR [esi]
  41a546:	sbb    DWORD PTR [edi+0x43f685a9],esp
  41a54c:	cmp    al,0xd0
  41a54e:	ret    0x847c
  41a551:	gs gs (bad) 
  41a555:	sub    eax,0x48eb0add
  41a55a:	adc    DWORD PTR [esi+0x1c],ebx
  41a55d:	jae    0x41a58f
  41a55f:	jp     0x41a54d
  41a561:	out    0xc1,eax
  41a563:	add    al,0xb3
  41a565:	sbb    esi,DWORD PTR [edx+0x4d6dbcc]
  41a56b:	cmp    esi,0xac0f95d0
  41a571:	sub    ebx,0xfffffff3
  41a574:	cmp    bh,BYTE PTR ds:0xa80604fa
  41a57a:	fstp   DWORD PTR [ebx-0x30]
  41a57d:	shl    BYTE PTR [edx],cl
  41a57f:	and    esi,DWORD PTR [ecx-0x20045198]
  41a585:	and    eax,0xd566dd7
  41a58a:	test   DWORD PTR [edx+0x7a],esp
  41a58d:	push   esi
  41a58e:	adc    al,0x7d
  41a590:	inc    edi
  41a591:	and    al,ah
  41a593:	mov    ah,0xa4
  41a595:	sbb    BYTE PTR [ebp+0xe],dl
  41a598:	add    eax,0x5d1b5f4f
  41a59d:	clc    
  41a59e:	retf   0x9c05
  41a5a1:	in     al,dx
  41a5a2:	dec    esp
  41a5a3:	jo     0x41a5a3
  41a5a5:	and    eax,0xf800011f
  41a5aa:	add    al,0x0
  41a5ac:	add    BYTE PTR [ebp*1-0x6baaa761],ah
  41a5b3:	ror    DWORD PTR [esi+0x35524ea6],1
  41a5b9:	sub    BYTE PTR [ebx+0x6ed1bc39],ch
  41a5bf:	out    0x82,al
  41a5c1:	call   0x99fa:0x1043e7a2
  41a5c8:	clc    
  41a5c9:	mov    al,ds:0xde0a4bb9
  41a5ce:	mov    dh,0x17
  41a5d0:	sub    BYTE PTR ds:0xb6d5bbc1,dh
  41a5d6:	jne    0x41a627
  41a5d8:	jns    0x41a631
  41a5da:	adc    bl,BYTE PTR [eax-0x1fc1bc31]
  41a5e0:	jae    0x41a5dd
  41a5e2:	dec    eax
  41a5e3:	xchg   esp,eax
  41a5e4:	outs   dx,BYTE PTR ds:[esi]
  41a5e5:	out    0xc4,al
  41a5e7:	adc    esi,DWORD PTR [edx+0x4fcf2cd7]
  41a5ed:	cmp    BYTE PTR [ecx+0x3c],0xe1
  41a5f1:	cmp    al,0x3f
  41a5f3:	idiv   DWORD PTR ss:[eax-0x70]
  41a5f7:	pop    ecx
  41a5f8:	push   esp
  41a5f9:	inc    esi
  41a5fa:	mov    ch,0x81
  41a5fc:	out    0x7d,eax
  41a5fe:	hlt    
  41a5ff:	shl    dl,0xde
  41a602:	jns    0x41a62d
  41a604:	repnz cmc 
  41a606:	fmul   DWORD PTR [edi]
  41a608:	mov    edx,edx
  41a60a:	repnz nop
  41a60c:	push   ebx
  41a60d:	sbb    DWORD PTR [ebx+0x3d182353],0xffffffbe
  41a614:	dec    edx
  41a615:	xchg   DWORD PTR [ebx],ecx
  41a617:	inc    esp
  41a618:	call   0xe4ea0d46
  41a61d:	mov    dl,0x5c
  41a61f:	xor    DWORD PTR [ecx],eax
  41a621:	lea    edx,[edx]
  41a623:	jno    0x41a69e
  41a625:	xchg   DWORD PTR [ecx-0x1d],eax
  41a628:	dec    esp
  41a629:	retf   
  41a62a:	rcl    DWORD PTR [edx+0x30],0xbf
  41a62e:	pop    ds
  41a62f:	pop    ss
  41a630:	or     al,0xb
  41a632:	dec    eax
  41a633:	adc    DWORD PTR [eax],edx
  41a635:	scas   eax,DWORD PTR es:[edi]
  41a636:	(bad)  
  41a637:	mov    al,0x61
  41a639:	or     dl,BYTE PTR [ecx-0x7c25c28b]
  41a63f:	daa    
  41a640:	add    ah,BYTE PTR [ebx-0x463ca20a]
  41a646:	push   esp
  41a647:	gs jg  0x41a6c2
  41a64a:	mov    ds:0xffb6509a,eax
  41a64f:	test   DWORD PTR [ebx],esp
  41a651:	or     DWORD PTR [edi+0x0],edi
  41a654:	and    BYTE PTR [ebx+edx*8],dl
  41a657:	in     eax,0x8d
  41a659:	dec    edx
  41a65a:	sbb    bh,cl
  41a65c:	xchg   ebx,eax
  41a65d:	clc    
  41a65e:	mov    edi,0x53759ecd
  41a663:	sbb    DWORD PTR [ebx-0x7c],ebp
  41a666:	mov    ebp,0xb7e65aa7
  41a66b:	lea    esp,[ecx]
  41a66d:	out    0x88,eax
  41a66f:	sub    bl,BYTE PTR [edi+0x6d313e5a]
  41a675:	or     al,0xd3
  41a677:	xchg   edi,eax
  41a678:	retf   0xc705
  41a67b:	sti    
  41a67c:	imul   ebp,DWORD PTR [eax+0x5],0x7c
  41a680:	sub    DWORD PTR [ecx+ebx*1],edx
  41a683:	dec    bx
  41a685:	loopne 0x41a60c
  41a687:	dec    eax
  41a688:	cli    
  41a689:	gs xchg esp,eax
  41a68b:	stos   BYTE PTR es:[edi],al
  41a68c:	sub    al,0xcc
  41a68e:	or     DWORD PTR ds:0x66349cc1,ebx
  41a694:	ins    DWORD PTR es:[edi],dx
  41a695:	call   FWORD PTR [eax+ebx*2]
  41a698:	mov    ?,WORD PTR [ecx+0x121e2a33]
  41a69e:	pop    ds
  41a69f:	mov    ebp,0xb01c0363
  41a6a4:	xchg   BYTE PTR [ebx+0x709e855f],ah
  41a6aa:	adc    ebx,DWORD PTR [ebp+0x38]
  41a6ad:	clc    
  41a6ae:	jg     0x41a64e
  41a6b0:	imul   esi,DWORD PTR [ebx],0xb54c8c96
  41a6b6:	push   ecx
  41a6b7:	in     eax,0x5c
  41a6b9:	cmp    al,0xde
  41a6bb:	inc    esp
  41a6bc:	cmp    al,0x56
  41a6be:	je     0x41a6ef
  41a6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c1:	pop    edi
  41a6c2:	popf   
  41a6c3:	out    0xc2,eax
  41a6c5:	and    al,0xe2
  41a6c7:	push   es
  41a6c8:	push   edx
  41a6c9:	ins    BYTE PTR es:[edi],dx
  41a6ca:	in     eax,0x93
  41a6cc:	pop    eax
  41a6cd:	inc    edx
  41a6ce:	mov    ah,0x54
  41a6d0:	add    BYTE PTR [ebx+edx*2],bh
  41a6d3:	pop    ds
  41a6d4:	dec    edx
  41a6d5:	cmc    
  41a6d6:	or     eax,0xdf6eedb3
  41a6db:	xor    eax,0x3c1dd3d2
  41a6e0:	cld    
  41a6e1:	ds push ds
  41a6e3:	sub    al,BYTE PTR [ebp-0x12]
  41a6e6:	(bad)  
  41a6e7:	adc    BYTE PTR ds:0x887ff1f2,bh
  41a6ed:	push   edx
  41a6ee:	fimul  DWORD PTR [edx]
  41a6f0:	frstor [eax-0x6f9ef32d]
  41a6f6:	bound  esp,QWORD PTR [ecx+0x8]
  41a6f9:	clc    
  41a6fa:	jmp    0x41a744
  41a6fc:	xchg   BYTE PTR [ecx],cl
  41a6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6ff:	cmp    cl,BYTE PTR [edi-0x11]
  41a702:	mov    eax,DWORD PTR ds:0xb24d0ae3
  41a708:	loope  0x41a75b
  41a70a:	retf   
  41a70b:	push   edx
  41a70c:	cmp    ebx,DWORD PTR [edx+edx*2]
  41a70f:	cmp    edx,DWORD PTR [eax+0x28e34d04]
  41a715:	daa    
  41a716:	fimul  WORD PTR [ecx+eax*4+0x21]
  41a71a:	and    bh,dh
  41a71c:	stc    
  41a71d:	arpl   WORD PTR [edi+0x65b76b66],si
  41a723:	mov    al,0x8e
  41a725:	call   0x7e6:0xea0de2dd
  41a72c:	arpl   WORD PTR [ecx],bx
  41a72e:	call   0x14e2f215
  41a733:	in     al,dx
  41a734:	dec    esi
  41a735:	dec    DWORD PTR [edx]
  41a737:	clc    
  41a738:	nop
  41a739:	(bad)
  41a73d:	cmp    DWORD PTR ds:0xe2f52ced,esi
  41a743:	mov    ecx,0x8aa4632f
  41a748:	sbb    BYTE PTR [ebx+0x6158339],ch
  41a74e:	add    al,0xbe
  41a750:	test   BYTE PTR [edx-0x5e],cl
  41a753:	sbb    eax,esp
  41a755:	mov    al,0x6c
  41a757:	into   
  41a758:	push   ds
  41a759:	jge    0x41a725
  41a75b:	xchg   ebp,eax
  41a75c:	aaa    
  41a75d:	cwde   
  41a75e:	scas   eax,DWORD PTR es:[edi]
  41a75f:	pop    edi
  41a760:	aaa    
  41a761:	add    eax,0xe218a3ee
  41a766:	div    dh
  41a768:	xlat   BYTE PTR ds:[ebx]
  41a769:	jge    0x41a7a8
  41a76b:	and    BYTE PTR [edx+0x52],cl
  41a76e:	push   esi
  41a76f:	fdivr  QWORD PTR [ecx-0x6b]
  41a772:	std    
  41a773:	mov    eax,ds:0x53f0c0c0
  41a778:	loope  0x41a741
  41a77a:	mov    ecx,0xcbf941fe
  41a77f:	inc    esi
  41a780:	fmul   DWORD PTR [ebx+eax*8]
  41a783:	sbb    BYTE PTR [esi],dl
  41a785:	sub    ecx,esi
  41a787:	push   ebx
  41a788:	lea    eax,[ebx]
  41a78a:	repnz icebp 
  41a78c:	sub    bl,BYTE PTR ds:0x1db05354
  41a792:	push   ebp
  41a793:	lock or BYTE PTR [ecx],ch
  41a796:	mov    bl,0x4f
  41a798:	imul   edi,DWORD PTR [ecx+0x67317b4d],0xffffffe2
  41a79f:	aad    0x67
  41a7a1:	push   esp
  41a7a2:	leave  
  41a7a3:	sub    ecx,DWORD PTR [ecx]
  41a7a5:	xchg   BYTE PTR [edx-0x76],cl
  41a7a8:	jno    0x41a78b
  41a7aa:	mov    dh,0xc2
  41a7ac:	shl    DWORD PTR [esi+edi*4+0x51ebb59c],0x98
  41a7b4:	(bad)  
  41a7b5:	xlat   BYTE PTR ds:[ebx]
  41a7b6:	dec    ecx
  41a7b7:	cmp    dl,cl
  41a7b9:	ret    0x29b1
  41a7bc:	pusha  
  41a7bd:	inc    ebp
  41a7be:	xchg   esi,eax
  41a7bf:	sub    esp,DWORD PTR [edi-0x10]
  41a7c2:	or     ebx,ecx
  41a7c4:	call   0x8baf:0x135dbad9
  41a7cb:	xor    eax,0x29e738f5
  41a7d0:	outs   dx,DWORD PTR ds:[esi]
  41a7d1:	pop    ecx
  41a7d2:	sbb    edx,edx
  41a7d4:	inc    ebp
  41a7d5:	adc    DWORD PTR [esi],edi
  41a7d7:	pop    eax
  41a7d8:	icebp  
  41a7d9:	jbe    0x41a78b
  41a7db:	fnstenv [ebx+0x3042a75]
  41a7e1:	aaa    
  41a7e2:	dec    ebx
  41a7e3:	cmp    ebp,ebp
  41a7e5:	sbb    DWORD PTR [esi-0x168fc4ef],esi
  41a7eb:	lods   al,BYTE PTR ds:[esi]
  41a7ec:	mov    ebp,0x59f98a69
  41a7f1:	rol    BYTE PTR ds:0xc61dc2a6,0x89
  41a7f8:	xchg   ecx,eax
  41a7f9:	push   cs
  41a7fa:	adc    al,0xd6
  41a7fc:	sbb    al,0x3
  41a7fe:	adc    ch,ah
  41a800:	sub    esp,DWORD PTR [esi-0x5ff68796]
  41a806:	sbb    BYTE PTR [eax],dh
  41a808:	cmp    eax,0x62a373d9
  41a80d:	gs mov esi,0x5cbb680e
  41a813:	push   esi
  41a814:	xchg   esp,eax
  41a815:	add    al,0xd6
  41a817:	cmp    al,0x0
  41a819:	or     BYTE PTR [edi],cl
  41a81b:	loopne 0x41a7fc
  41a81d:	jbe    0x41a868
  41a81f:	fs jne 0x41a846
  41a822:	push   ebx
  41a823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a824:	pop    DWORD PTR ds:0x598cb571
  41a82a:	add    dl,BYTE PTR [esp+edi*2-0x1d]
  41a82e:	adc    ebx,edi
  41a830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a831:	arpl   WORD PTR ds:[esi],dx
  41a834:	cmp    dl,BYTE PTR [eax-0x57]
  41a837:	enter  0x1642,0x9
  41a83b:	inc    edi
  41a83c:	xor    eax,edi
  41a83e:	inc    ebp
  41a83f:	jp     0x41a841
  41a841:	dec    esp
  41a842:	sahf   
  41a843:	mov    eax,ds:0xd6093a81
  41a848:	push   esi
  41a849:	fxch   st(7)
  41a84b:	mov    esi,0x23c912af
  41a850:	aam    0x6d
  41a852:	mov    ebx,0xdf56efab
  41a857:	mov    dh,0xed
  41a859:	or     al,0xbc
  41a85b:	cmc    
  41a85c:	ja     0x41a828
  41a85e:	jle    0x41a80e
  41a860:	push   ebp
  41a861:	jg     0x41a8a5
  41a863:	nop
  41a864:	mov    edx,?
  41a866:	jb     0x41a8bf
  41a868:	sbb    dh,BYTE PTR [ebp+eiz*1+0x47]
  41a86c:	add    edx,DWORD PTR [bx+0x6d]
  41a870:	xchg   esp,eax
  41a871:	dec    esi
  41a872:	sbb    BYTE PTR [edi+0x5ea22cf3],al
  41a878:	xlat   BYTE PTR ds:[ebx]
  41a879:	imul   edi,DWORD PTR [edi-0x55],0x2f
  41a87d:	mov    edx,0x2522163f
  41a882:	enter  0x2866,0x11
  41a886:	fnstsw WORD PTR [esi+0x72]
  41a889:	jo     0x41a8cc
  41a88b:	retf   0x9508
  41a88e:	loop   0x41a8af
  41a890:	aas    
  41a891:	cmp    DWORD PTR [eax+0x5],esp
  41a894:	lods   eax,DWORD PTR ds:[esi]
  41a895:	test   eax,0x8d0b8d33
  41a89a:	xchg   esi,eax
  41a89b:	imul   ebx,ebx,0xbc5837
  41a8a1:	jno    0x41a846
  41a8a3:	dec    ebx
  41a8a4:	inc    eax
  41a8a5:	clc    
  41a8a6:	fidiv  DWORD PTR [ebx+0x7578d1fb]
  41a8ac:	jp     0x41a8fe
  41a8ae:	js     0x41a835
  41a8b0:	cmc    
  41a8b1:	in     al,dx
  41a8b2:	adc    DWORD PTR [esi-0x39],0x23
  41a8b6:	add    edi,ecx
  41a8b8:	out    0xad,al
  41a8ba:	add    ch,ah
  41a8bc:	xchg   ebx,eax
  41a8bd:	push   ss
  41a8be:	out    0x21,al
  41a8c0:	call   0xf10f293a
  41a8c5:	and    esi,edi
  41a8c7:	sti    
  41a8c8:	jmp    0x41a889
  41a8ca:	inc    ebx
  41a8cb:	sbb    DWORD PTR [ebp+0x57],edx
  41a8ce:	dec    ebp
  41a8cf:	add    eax,0x9f61ae56
  41a8d4:	inc    eax
  41a8d5:	fwait
  41a8d6:	jmp    0x235db5b6
  41a8db:	mov    DWORD PTR [eax+eiz*2+0x602ef407],edi
  41a8e2:	push   ds
  41a8e3:	add    eax,0xecb765c5
  41a8e8:	inc    esp
  41a8e9:	test   eax,0x5f30b9ac
  41a8ee:	bound  ebp,QWORD PTR [ecx+0x37]
  41a8f1:	adc    BYTE PTR [edx+eiz*2-0x2],al
  41a8f5:	xor    BYTE PTR [esi-0x27],bh
  41a8f8:	imul   ecx,DWORD PTR [eax-0x4a07c038],0xfffffffa
  41a8ff:	mov    eax,?
  41a901:	inc    ebx
  41a902:	xlat   BYTE PTR ds:[ebx]
  41a903:	stos   BYTE PTR es:[edi],al
  41a904:	(bad)  
  41a905:	mov    edx,0x67b656c5
  41a90a:	jmp    FWORD PTR [ecx-0x4a]
  41a90d:	inc    ecx
  41a90e:	pop    edx
  41a90f:	xchg   BYTE PTR [edi-0x50a023f4],dh
  41a915:	inc    edx
  41a916:	sbb    bl,BYTE PTR [edi-0x72]
  41a919:	xlat   BYTE PTR ds:[ebx]
  41a91a:	sbb    BYTE PTR [esp+edx*8-0x397d4dd0],bl
  41a921:	outs   dx,DWORD PTR ds:[esi]
  41a922:	cmc    
  41a923:	jb     0x41a8e5
  41a925:	gs test eax,0x58bec46a
  41a92b:	mov    bh,0x1
  41a92d:	popf   
  41a92e:	call   0x97f0:0x2c07399f
  41a935:	push   edi
  41a936:	xchg   ebp,eax
  41a937:	jns    0x41a8be
  41a939:	inc    esp
  41a93a:	test   ecx,ecx
  41a93c:	sbb    BYTE PTR [edx+0x7c],0x50
  41a940:	je     0x41a95b
  41a942:	jb     0x41a8fe
  41a944:	ret    0x20bb
  41a947:	jle    0x41a961
  41a949:	icebp  
  41a94a:	mov    ah,0xb8
  41a94c:	lock or al,0x4c
  41a94f:	pop    edx
  41a950:	jmp    0xfd1a:0x3b9fae18
  41a957:	dec    eax
  41a958:	and    al,0xdd
  41a95a:	mov    ch,0x26
  41a95c:	sti    
  41a95d:	inc    esi
  41a95e:	mov    eax,ds:0xf1506900
  41a963:	fstp   TBYTE PTR [ebx]
  41a965:	hlt    
  41a966:	imul   ecx,DWORD PTR [ebx],0xf5c974be
  41a96c:	push   edi
  41a96d:	push   ebx
  41a96e:	and    esi,ecx
  41a970:	sub    edx,DWORD PTR [ecx+0x3b]
  41a973:	jno    0x41a941
  41a975:	push   es
  41a976:	push   es
  41a977:	loope  0x41a9a0
  41a979:	mov    BYTE PTR [ecx-0x32],cl
  41a97c:	sbb    BYTE PTR [edx],ch
  41a97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a97f:	adc    edx,DWORD PTR [edx-0x6a]
  41a982:	jbe    0x41a921
  41a984:	out    dx,eax
  41a985:	xor    esi,0x49
  41a988:	jb     0x41a91d
  41a98a:	sub    edi,DWORD PTR [edi-0x2]
  41a98d:	jg     0x41a9bf
  41a98f:	jg     0x41a94e
  41a991:	jmp    0x500dd0a9
  41a996:	rol    BYTE PTR [esi+0x65],1
  41a999:	lock pop ebx
  41a99b:	out    0xf7,eax
  41a99d:	mov    ah,0x6
  41a99f:	add    DWORD PTR [edx-0x6f4fc75c],0xdbea2023
  41a9a9:	ret    
  41a9aa:	jb     0x41a9d3
  41a9ac:	(bad)  
  41a9ad:	in     al,dx
  41a9ae:	daa    
  41a9af:	inc    eax
  41a9b0:	mov    ebx,0x11776149
  41a9b5:	retf   
  41a9b6:	or     DWORD PTR [eax+0x7b9a46e9],edi
  41a9bc:	inc    esp
  41a9bd:	and    DWORD PTR [ebx+eiz*1],ebp
  41a9c0:	scas   eax,DWORD PTR es:[edi]
  41a9c1:	fs inc esp
  41a9c3:	(bad)  
  41a9c4:	adc    edx,ebp
  41a9c6:	cwde   
  41a9c7:	mov    eax,edx
  41a9c9:	nop
  41a9ca:	inc    ecx
  41a9cb:	mov    al,0x4a
  41a9cd:	push   edx
  41a9ce:	and    eax,0x13c7e9c2
  41a9d3:	adc    al,0xc6
  41a9d5:	cmp    esp,ebp
  41a9d7:	out    dx,eax
  41a9d8:	push   eax
  41a9d9:	in     eax,0x69
  41a9db:	mov    esp,0x301b3c7d
  41a9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9e1:	sti    
  41a9e2:	xchg   edx,eax
  41a9e3:	imul   edx,DWORD PTR [edi-0xee25b02],0x27
  41a9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9eb:	dec    ecx
  41a9ec:	fs xor al,0x7d
  41a9ef:	cwde   
  41a9f0:	je     0x41a98f
  41a9f2:	dec    edi
  41a9f3:	add    eax,DWORD PTR [esi-0x110522d]
  41a9f9:	lea    esi,[esi-0x55]
  41a9fc:	add    BYTE PTR [ebx],ah
  41a9fe:	mov    edi,0x314dae18
  41aa03:	inc    DWORD PTR [ebx+0x465d5190]
  41aa09:	lods   eax,DWORD PTR ds:[esi]
  41aa0a:	test   DWORD PTR [ecx],0x6e65e7f4
  41aa10:	mov    DWORD PTR [edx+0x1d],ecx
  41aa13:	aad    0x15
  41aa15:	leave  
  41aa16:	jae    0x41aa69
  41aa18:	jecxz  0x41aa6f
  41aa1a:	pop    ebp
  41aa1b:	jbe    0x41aa25
  41aa1d:	mov    WORD PTR [ebp+0x894cc6f],ss
  41aa23:	dec    ecx
  41aa24:	xchg   ebp,eax
  41aa25:	icebp  
  41aa26:	sub    dx,WORD PTR [eax-0x23e6faeb]
  41aa2d:	rcr    DWORD PTR ds:0x4d231500,cl
  41aa33:	scas   al,BYTE PTR es:[edi]
  41aa34:	ret    0xc2ca
  41aa37:	jnp    0x41a9ef
  41aa39:	in     eax,0x31
  41aa3b:	and    ch,BYTE PTR [ecx]
  41aa3d:	mul    dl
  41aa3f:	xlat   BYTE PTR ds:[ebx]
  41aa40:	out    dx,eax
  41aa41:	je     0x41aac2
  41aa43:	cs push cs
  41aa45:	xchg   edi,eax
  41aa46:	(bad)  
  41aa47:	cli    
  41aa48:	mov    dh,0xe2
  41aa4a:	adc    edx,DWORD PTR [edi]
  41aa4c:	fsubr  st,st(7)
  41aa4e:	cmp    DWORD PTR [ecx-0x6d],esi
  41aa51:	cmp    esi,edx
  41aa53:	mov    eax,0xed42791f
  41aa58:	jl     0x41aa79
  41aa5a:	out    dx,al
  41aa5b:	push   esi
  41aa5c:	cs mov bl,0x55
  41aa5f:	(bad)  [ecx+0x4]
  41aa62:	dec    esi
  41aa63:	leave  
  41aa64:	or     BYTE PTR [eax+0x32dba5c9],0x5d
  41aa6b:	int3   
  41aa6c:	push   es
  41aa6d:	push   0xffffffe4
  41aa6f:	inc    eax
  41aa70:	add    ah,BYTE PTR [edx+0x63d43ec3]
  41aa76:	jb     0x41aa30
  41aa78:	ds out 0x47,eax
  41aa7b:	mov    WORD PTR [esi],es
  41aa7d:	imul   esp,DWORD PTR [edi+0x3],0x89285848
  41aa84:	stos   DWORD PTR es:[edi],eax
  41aa85:	das    
  41aa86:	ret    
  41aa87:	imul   esi,DWORD PTR [eax-0x74],0x5d
  41aa8b:	daa    
  41aa8c:	push   0xb7deffdc
  41aa91:	imul   esp,DWORD PTR [eax],0x11e9da41
  41aa97:	push   eax
  41aa98:	ret    0x1edb
  41aa9b:	mov    ecx,0x524a0a6
  41aaa0:	dec    ebp
  41aaa1:	(bad)  
  41aaa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaa3:	fdiv   QWORD PTR [esi+0x28746f4e]
  41aaa9:	jne    0x41aae6
  41aaab:	pop    esi
  41aaac:	outs   dx,DWORD PTR ds:[esi]
  41aaad:	dec    esi
  41aaae:	cwde   
  41aaaf:	les    ebx,FWORD PTR [edx-0x3c]
  41aab2:	test   al,0x73
  41aab4:	lahf   
  41aab5:	sbb    eax,0xf8000124
  41aaba:	add    al,0x0
  41aabc:	add    ah,bh
  41aabe:	rol    dl,1
  41aac0:	fcomp  DWORD PTR [edi+0x54]
  41aac3:	loopne 0x41aabb
  41aac5:	daa    
  41aac6:	push   edi
  41aac7:	test   al,0x12
  41aac9:	sub    esi,DWORD PTR [ebx-0x49]
  41aacc:	lds    ecx,FWORD PTR [eax+0x43d45f4b]
  41aad2:	pop    edi
  41aad3:	sbb    eax,0x13e6f273
  41aad8:	out    dx,eax
  41aad9:	add    DWORD PTR [eax+0x13],edx
  41aadc:	dec    esi
  41aadd:	(bad)  
  41aade:	(bad)  
  41aadf:	rcl    bl,cl
  41aae1:	and    BYTE PTR [esi],cl
  41aae3:	jecxz  0x41ab5d
  41aae5:	pop    edi
  41aae6:	xor    DWORD PTR [esi+0x5d],edi
  41aae9:	xchg   ecx,eax
  41aaea:	push   ecx
  41aaeb:	je     0x41aaa0
  41aaed:	shr    bh,0xdf
  41aaf0:	mov    dl,0xd0
  41aaf2:	stos   DWORD PTR es:[edi],eax
  41aaf3:	dec    ebp
  41aaf4:	adc    BYTE PTR [ebx],0x7e
  41aaf7:	imul   edi,DWORD PTR [edi+0x23e72c52],0x6c
  41aafe:	push   esp
  41aaff:	outs   dx,BYTE PTR ds:[esi]
  41ab00:	mov    ch,BYTE PTR [edx]
  41ab02:	xor    al,0x39
  41ab04:	outs   dx,BYTE PTR ds:[esi]
  41ab05:	retf   0x113a
  41ab08:	and    bh,BYTE PTR [eax+ecx*1-0x226b6a3a]
  41ab0f:	sbb    al,0x43
  41ab11:	test   eax,0xb76a82d3
  41ab16:	push   esp
  41ab17:	sub    esi,DWORD PTR [esi+0x2789611a]
  41ab1d:	and    cl,BYTE PTR [edx]
  41ab1f:	imul   edi,DWORD PTR fs:[eax-0x4e88d1d1],0x24
  41ab27:	leave  
  41ab28:	mov    DWORD PTR [edi-0x77018de3],ebx
  41ab2e:	(bad)  
  41ab2f:	in     al,dx
  41ab30:	pop    edx
  41ab31:	scas   eax,DWORD PTR es:[edi]
  41ab32:	push   ebp
  41ab33:	icebp  
  41ab34:	inc    ecx
  41ab35:	loopne 0x41ab8c
  41ab37:	mov    bh,0x5f
  41ab39:	ror    BYTE PTR [edi-0x15],cl
  41ab3c:	xchg   edi,eax
  41ab3d:	daa    
  41ab3e:	enter  0xec0f,0x7
  41ab42:	push   edi
  41ab43:	pop    eax
  41ab44:	jnp    0x41ab3f
  41ab46:	cmp    al,BYTE PTR [edi]
  41ab48:	dec    ebx
  41ab49:	call   0x43a3a9ea
  41ab4e:	dec    ebp
  41ab4f:	inc    ebx
  41ab50:	repnz push eax
  41ab52:	mov    ebx,esi
  41ab54:	pop    ecx
  41ab55:	sub    eax,0x7229fc07
  41ab5a:	ret    0xccc8
  41ab5d:	sub    DWORD PTR [esi],ebp
  41ab5f:	mov    eax,0x29c6cf07
  41ab64:	mov    al,ds:0x635c623d
  41ab69:	fsub   st,st(4)
  41ab6b:	xchg   esp,eax
  41ab6c:	lods   eax,DWORD PTR ds:[esi]
  41ab6d:	sub    al,0x30
  41ab6f:	and    esi,edi
  41ab71:	in     eax,0x96
  41ab73:	add    DWORD PTR [ebp+0x5a],edx
  41ab76:	and    ah,BYTE PTR [edi+0x35beff1d]
  41ab7c:	rol    DWORD PTR [eax+ebp*1-0x2ee4064b],cl
  41ab83:	and    DWORD PTR [eax-0x7f],esi
  41ab86:	mov    ds:0x950cf199,al
  41ab8b:	adc    eax,0xe6c0b28a
  41ab90:	mov    ds:0xb1545108,eax
  41ab95:	mov    ebp,DWORD PTR [edx+0x1f]
  41ab98:	mov    dh,0x65
  41ab9a:	ss (bad) 
  41ab9c:	test   al,0x75
  41ab9e:	stos   DWORD PTR es:[edi],eax
  41ab9f:	ja     0x41abdb
  41aba1:	cmp    DWORD PTR [esi-0x29],esp
  41aba4:	fisubr DWORD PTR [edi-0x15ada06e]
  41abaa:	dec    eax
  41abab:	mov    esi,0xb203019
  41abb0:	mov    eax,0xa8fc1016
  41abb5:	pop    edx
  41abb6:	fsubr  st,st(6)
  41abb8:	push   0xa86dd931
  41abbd:	shr    eax,cl
  41abbf:	xor    al,0x42
  41abc1:	cld    
  41abc2:	inc    esi
  41abc3:	jle    0x41abb9
  41abc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abc6:	mov    ebp,0x2335d970
  41abcb:	enter  0x1313,0xc2
  41abcf:	push   ecx
  41abd0:	fwait
  41abd1:	dec    edx
  41abd2:	cmc    
  41abd3:	and    eax,0x173ab01b
  41abd8:	iret   
  41abd9:	test   al,0xa0
  41abdb:	pop    ebx
  41abdc:	mov    esp,0xf5a2028
  41abe1:	jl     0x41ac49
  41abe3:	dec    edi
  41abe4:	jns    0x41ac02
  41abe6:	dec    esp
  41abe7:	add    ebx,esp
  41abe9:	inc    esp
  41abea:	jmp    0xdc6db2f8
  41abef:	imul   edi,DWORD PTR [ebx+0x4d],0xffffff9c
  41abf3:	outs   dx,BYTE PTR ds:[esi]
  41abf4:	mov    ebp,ebp
  41abf6:	ins    DWORD PTR es:[edi],dx
  41abf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abf8:	add    eax,0x7c0f3658
  41abfd:	mul    DWORD PTR [ebp-0x75ecec1]
  41ac03:	mov    DWORD PTR [ecx+0x7e],ebx
  41ac06:	shl    BYTE PTR [ecx+ebp*2],cl
  41ac09:	dec    ecx
  41ac0a:	out    0x61,eax
  41ac0c:	test   al,0xf4
  41ac0e:	and    bh,BYTE PTR [esp+eiz*2]
  41ac11:	addr16 mov edx,0x50b0bf8f
  41ac17:	sbb    bl,BYTE PTR [edx-0x21]
  41ac1a:	les    edx,FWORD PTR [ebx]
  41ac1c:	cli    
  41ac1d:	not    BYTE PTR [edi-0x4e3277a7]
  41ac23:	mov    edi,0x7bf3eb4a
  41ac28:	pusha  
  41ac29:	(bad)
  41ac2c:	jmp    0xe85a:0x8b13ddb0
  41ac33:	dec    eax
  41ac34:	lea    edx,[edi]
  41ac36:	jbe    0x41ac63
  41ac38:	lock dec eax
  41ac3a:	mov    ds:0x6f73c6b0,al
  41ac3f:	pop    esi
  41ac40:	push   0xffffffbd
  41ac42:	cmc    
  41ac43:	in     al,dx
  41ac44:	rcl    DWORD PTR [ebx],1
  41ac46:	add    al,0x11
  41ac48:	adc    ebp,DWORD PTR [ebp+0x64a68326]
  41ac4e:	das    
  41ac4f:	data16 (bad) 
  41ac51:	cmp    edi,DWORD PTR [ebx]
  41ac53:	arpl   bp,sp
  41ac55:	and    BYTE PTR [edx+0x3d017059],0xf3
  41ac5c:	pop    edx
  41ac5d:	pop    eax
  41ac5e:	push   eax
  41ac5f:	push   esi
  41ac60:	inc    ecx
  41ac61:	push   esi
  41ac62:	and    al,0x8d
  41ac64:	adc    al,0x36
  41ac66:	dec    ecx
  41ac67:	jnp    0x41ac9b
  41ac69:	stos   BYTE PTR es:[edi],al
  41ac6a:	scas   eax,DWORD PTR es:[edi]
  41ac6b:	pop    eax
  41ac6c:	mov    dh,0x5b
  41ac6e:	lock call 0xd24be8e5
  41ac74:	pop    ss
  41ac75:	ret    0x19fd
  41ac78:	inc    DWORD PTR [esi+0x4ebb3b31]
  41ac7e:	mov    WORD PTR [ecx+0x36],?
  41ac81:	and    BYTE PTR [ebp+0x226d6f43],al
  41ac87:	inc    ebp
  41ac88:	jg     0x41ac20
  41ac8a:	mov    ebx,0x39c002ae
  41ac8f:	sbb    eax,0x6c630d0f
  41ac94:	(bad)  
  41ac95:	pop    ebx
  41ac96:	fistp  DWORD PTR [esi-0x27]
  41ac99:	ret    0xa596
  41ac9c:	jo     0x41acf0
  41ac9e:	jecxz  0x41ac50
  41aca0:	or     edi,DWORD PTR [ebx-0xcadf07e]
  41aca6:	mov    dh,BYTE PTR [edx]
  41aca8:	jmp    0x480dc47f
  41acad:	daa    
  41acae:	ins    BYTE PTR es:[edi],dx
  41acaf:	shr    BYTE PTR [ecx+0x69],1
  41acb2:	outs   dx,BYTE PTR ds:[esi]
  41acb3:	fs (bad) 
  41acb5:	lea    ebp,[ebx]
  41acb7:	sbb    edx,DWORD PTR [eax+edx*1-0x5d]
  41acbb:	sbb    BYTE PTR [edx+edx*1+0x61],0x2c
  41acc0:	bound  esi,QWORD PTR [edx+0x6810a000]
  41acc6:	mov    edx,0x452f96b6
  41accb:	sub    BYTE PTR [ebp-0x435a302c],ch
  41acd1:	data16 lock sub ch,ah
  41acd5:	ficomp WORD PTR [ebx+0x37]
  41acd8:	pop    ebx
  41acd9:	and    DWORD PTR [eax-0x37],edi
  41acdc:	icebp  
  41acdd:	in     eax,0x7d
  41acdf:	push   0x80a4e7a
  41ace4:	call   0x901fabb3
  41ace9:	outs   dx,DWORD PTR ds:[esi]
  41acea:	jno    0x41ad46
  41acec:	fisub  WORD PTR [ebx+0x1c1c7419]
  41acf2:	popf   
  41acf3:	fucom  st(6)
  41acf5:	sti    
  41acf6:	leave  
  41acf7:	repz (bad) 
  41acf9:	mov    dl,0xe
  41acfb:	enter  0x3125,0x27
  41acff:	ins    BYTE PTR es:[edi],dx
  41ad00:	mov    ecx,0x8c64dbfe
  41ad05:	push   ebx
  41ad06:	inc    ecx
  41ad07:	test   DWORD PTR [edi-0x2877781f],0xbde66310
  41ad11:	imul   esi,DWORD PTR [edi-0x6fa2e4f],0xa96c068
  41ad1b:	mov    ds:0xec9cca7c,eax
  41ad20:	xchg   edi,eax
  41ad21:	inc    ecx
  41ad22:	ret    
  41ad23:	and    DWORD PTR [ebp+ebx*1-0x37],0xffffff86
  41ad28:	call   DWORD PTR [ecx-0x695e4c1f]
  41ad2e:	rcl    DWORD PTR [edi],cl
  41ad30:	ficom  DWORD PTR [ecx+0x673d077a]
  41ad36:	sbb    bl,BYTE PTR [edi+0x7b412340]
  41ad3c:	jecxz  0x41acdc
  41ad3e:	fwait
  41ad3f:	jae    0x41ad25
  41ad41:	iret   
  41ad42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad43:	add    DWORD PTR [edi+0x6],esi
  41ad46:	mov    bh,0xac
  41ad48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad49:	mov    ds:0x1543f19d,eax
  41ad4e:	inc    ebx
  41ad4f:	mov    BYTE PTR [edi+ebp*8],ah
  41ad52:	inc    ecx
  41ad53:	stos   DWORD PTR es:[edi],eax
  41ad54:	cmp    al,0xea
  41ad56:	adc    dl,BYTE PTR ds:0xf8f4ea8b
  41ad5c:	push   ecx
  41ad5d:	daa    
  41ad5e:	dec    edx
  41ad5f:	sub    ah,BYTE PTR [esi]
  41ad61:	sub    al,0x1a
  41ad63:	arpl   WORD PTR [ecx+0x2e],ax
  41ad66:	frstor [edx+ecx*2]
  41ad69:	inc    esp
  41ad6a:	jmp    0x56834677
  41ad6f:	into   
  41ad70:	pop    ds
  41ad71:	jne    0x41ad1d
  41ad73:	adc    eax,0xaabb657
  41ad78:	(bad)  
  41ad79:	cli    
  41ad7a:	fwait
  41ad7b:	push   eax
  41ad7c:	jmp    0x41ad80
  41ad7e:	out    0x33,al
  41ad80:	aam    0x4
  41ad82:	add    al,0x48
  41ad84:	and    eax,0x48f850b6
  41ad89:	pop    DWORD PTR [ebx-0x2f]
  41ad8c:	retf   0x49df
  41ad8f:	pop    ebx
  41ad90:	(bad)  
  41ad91:	fisttp WORD PTR [edx-0x44]
  41ad94:	fdivrp st(2),st
  41ad96:	xchg   edi,eax
  41ad97:	nop
  41ad98:	xchg   edx,eax
  41ad99:	sub    dh,bl
  41ad9b:	mov    dh,0xab
  41ad9d:	int    0x1c
  41ad9f:	shr    BYTE PTR [ecx],cl
  41ada1:	(bad)  
  41ada2:	jmp    0x6fe5:0x2fc73e8b
  41ada9:	xchg   ebp,eax
  41adaa:	jge    0x41ad4c
  41adac:	jno    0x41add2
  41adae:	xchg   esi,eax
  41adaf:	sar    DWORD PTR [edi],0x26
  41adb2:	dec    ecx
  41adb3:	fcomp  DWORD PTR [eax+0x194bf13c]
  41adb9:	addr16 mov esp,0x20f5b6f6
  41adbf:	jbe    0x41ae11
  41adc1:	and    eax,0x828a9ca0
  41adc6:	in     eax,0xcc
  41adc8:	adc    al,0xc3
  41adca:	fidivr WORD PTR ds:0x2cb1ca3f
  41add0:	inc    esp
  41add1:	pop    esp
  41add2:	jp     0x41ad84
  41add4:	mov    ebp,0x7ad249ca
  41add9:	cs daa 
  41addb:	sub    edi,DWORD PTR [ebp-0x51]
  41adde:	das    
  41addf:	int    0xc1
  41ade1:	jo     0x41ae27
  41ade3:	lods   eax,DWORD PTR ds:[esi]
  41ade4:	ss (bad) 
  41ade6:	ds ja  0x41ae30
  41ade9:	dec    ebx
  41adea:	in     eax,dx
  41adeb:	pop    edx
  41adec:	sub    BYTE PTR [ebp-0x4a089901],cl
  41adf2:	pop    ds
  41adf3:	pop    esi
  41adf4:	jmp    0x41ae4c
  41adf6:	rol    BYTE PTR [ecx+eiz*1],0x64
  41adfa:	pop    edi
  41adfb:	cmp    bl,ch
  41adfd:	test   al,0x96
  41adff:	retf   0x2bf9
  41ae02:	sub    DWORD PTR [ebx+0x17b9ae47],edi
  41ae08:	xor    DWORD PTR [ebp+0x67b00776],esi
  41ae0e:	icebp  
  41ae0f:	mov    eax,0x50ecef4
  41ae14:	inc    ecx
  41ae15:	mov    DWORD PTR es:[edi+0x2e],edi
  41ae19:	or     DWORD PTR [eax],ebx
  41ae1b:	sbb    eax,0xdbb1a06a
  41ae20:	cmp    eax,0x84274893
  41ae25:	fild   WORD PTR [ebx+0x75f08b41]
  41ae2b:	xchg   edx,eax
  41ae2c:	push   ss
  41ae2d:	stos   BYTE PTR es:[edi],al
  41ae2e:	pop    DWORD PTR [ebx-0x69]
  41ae31:	push   edx
  41ae32:	sbb    al,0x42
  41ae34:	div    DWORD PTR ds:0x37946b20
  41ae3a:	aad    0xb3
  41ae3c:	inc    ecx
  41ae3d:	pop    esp
  41ae3e:	jnp    0x41ade2
  41ae40:	jp     0x41ae3a
  41ae42:	sbb    eax,0x4df254c3
  41ae47:	xor    DWORD PTR [ebx-0x4d],eax
  41ae4a:	add    eax,0x5d563314
  41ae4f:	outs   dx,BYTE PTR ds:[esi]
  41ae50:	push   ss
  41ae51:	retfw  
  41ae53:	lods   al,BYTE PTR ds:[esi]
  41ae54:	test   BYTE PTR [ebx+0x53],ch
  41ae57:	retf   
  41ae58:	dec    esp
  41ae59:	scas   eax,DWORD PTR es:[edi]
  41ae5a:	lea    esi,[esi]
  41ae5c:	push   ebp
  41ae5d:	cli    
  41ae5e:	int3   
  41ae5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae60:	and    dl,al
  41ae62:	in     al,dx
  41ae63:	lods   eax,DWORD PTR ds:[esi]
  41ae64:	mov    edx,DWORD PTR [eax]
  41ae66:	pop    edx
  41ae67:	es js  0x41aec4
  41ae6a:	pop    esi
  41ae6b:	(bad)  
  41ae6c:	popf   
  41ae6d:	scas   al,BYTE PTR es:[edi]
  41ae6e:	mov    cl,0x3c
  41ae70:	pop    esp
  41ae71:	mov    edi,0x4f9d461d
  41ae76:	cs sbb eax,0x299a5bc6
  41ae7c:	jnp    0x41ae0d
  41ae7e:	popa   
  41ae7f:	adc    ch,BYTE PTR [edx+0x346313b8]
  41ae85:	or     bl,dh
  41ae87:	inc    ebp
  41ae88:	dec    edi
  41ae89:	loop   0x41ae8c
  41ae8b:	enter  0x9f51,0xdf
  41ae8f:	ins    DWORD PTR es:[edi],dx
  41ae90:	cmp    al,0x51
  41ae92:	dec    esi
  41ae93:	mov    DWORD PTR ds:0x8a48db30,edx
  41ae99:	mov    ch,0x3b
  41ae9b:	ds xchg ecx,eax
  41ae9d:	mov    eax,gs
  41ae9f:	ins    BYTE PTR es:[edi],dx
  41aea0:	adc    eax,DWORD PTR [esi-0x7a]
  41aea3:	and    BYTE PTR [eax-0x4],ch
  41aea6:	stos   DWORD PTR es:[edi],eax
  41aea7:	shl    DWORD PTR [edi+0x75563f7d],0xc9
  41aeae:	cld    
  41aeaf:	inc    ebx
  41aeb0:	retf   
  41aeb1:	ss aaa 
  41aeb3:	xchg   DWORD PTR [eax+0x16],eax
  41aeb6:	mov    al,0x63
  41aeb8:	mov    ah,0xfd
  41aeba:	mov    WORD PTR [eax],?
  41aebc:	lods   eax,DWORD PTR ds:[esi]
  41aebd:	daa    
  41aebe:	jbe    0x41ae78
  41aec0:	inc    ebp
  41aec1:	mov    ebx,0xe799fc9c
  41aec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec7:	fdiv   QWORD PTR [edx+eiz*2-0x5965b700]
  41aece:	pop    ebx
  41aecf:	pop    esi
  41aed0:	out    dx,al
  41aed1:	xor    BYTE PTR [edi-0x15],ch
  41aed4:	xchg   BYTE PTR [ebx],bh
  41aed6:	test   BYTE PTR [ebp-0x73],ah
  41aed9:	lods   al,BYTE PTR ds:[esi]
  41aeda:	sub    ch,0xac
  41aedd:	aad    0x0
  41aedf:	fidivr WORD PTR [esi+0x13541764]
  41aee5:	sar    esi,0xb0
  41aee8:	sbb    bh,BYTE PTR [eax-0x123ba73c]
  41aeee:	pushf  
  41aeef:	retf   
  41aef0:	imul   ecx,edi,0x45
  41aef3:	mov    WORD PTR ds:0x8ed58bc7,cs
  41aef9:	fmul   DWORD PTR [ebp+0x7497aaa2]
  41aeff:	(bad)  [ebp-0xc]
  41af02:	mov    al,0xb1
  41af04:	adc    ecx,ebx
  41af06:	scas   eax,DWORD PTR es:[edi]
  41af07:	mov    eax,ds:0x6d8cc812
  41af0c:	jns    0x41ae93
  41af0e:	dec    ebp
  41af0f:	sbb    edx,0xffffffa9
  41af12:	sbb    BYTE PTR [eax],bl
  41af14:	cs fsubp st(3),st
  41af17:	inc    eax
  41af18:	hlt    
  41af19:	cmp    cl,BYTE PTR [edx-0x7c]
  41af1c:	sbb    esp,DWORD PTR [ecx+0x79]
  41af1f:	jns    0x41af12
  41af21:	jbe    0x41af8a
  41af23:	iret   
  41af24:	inc    esp
  41af25:	pop    ebp
  41af26:	sub    eax,DWORD PTR [ebx+0x13]
  41af29:	pop    esp
  41af2a:	mov    ebp,0x1ee392a9
  41af2f:	inc    edi
  41af30:	and    eax,0x383cba03
  41af35:	pop    edi
  41af36:	sbb    BYTE PTR [edi+0x2d3dd2e5],bh
  41af3c:	pop    eax
  41af3d:	rcr    ebp,0xc1
  41af40:	mov    esi,0x1e9aca19
  41af45:	mov    ebx,0x3f0f4699
  41af4a:	imul   eax,DWORD PTR [edi+0x7c],0xffffffdc
  41af4e:	std    
  41af4f:	in     al,0xf5
  41af51:	cwde   
  41af52:	jae    0x41af8b
  41af54:	xchg   esi,eax
  41af55:	sub    eax,0xd2299f36
  41af5a:	clc    
  41af5b:	or     eax,0x5303362c
  41af60:	cmp    esp,DWORD PTR [esi]
  41af62:	mov    bh,0xc3
  41af64:	or     bh,BYTE PTR [ecx-0x5b]
  41af67:	int3   
  41af68:	dec    esi
  41af69:	js     0x41afcc
  41af6b:	test   eax,0xd37d6136
  41af70:	pop    edx
  41af71:	adc    BYTE PTR [esi],cl
  41af73:	push   0xd799bd55
  41af78:	sbb    DWORD PTR [ebp+0x4c],edx
  41af7b:	xor    esp,DWORD PTR [ecx+0x4a]
  41af7e:	in     eax,dx
  41af7f:	pop    esi
  41af80:	mov    edx,0xaf59f10d
  41af85:	push   0xffffffe3
  41af87:	dec    ebp
  41af88:	jge    0x41affa
  41af8a:	push   ebx
  41af8b:	dec    esi
  41af8c:	dec    esp
  41af8d:	daa    
  41af8e:	(bad)  
  41af8f:	cwde   
  41af90:	inc    edx
  41af91:	mov    ecx,0xf3628af0
  41af96:	fdivr  DWORD PTR [eax-0x17d7dfd9]
  41af9c:	sub    DWORD PTR [ecx+0x4a20b5bc],ecx
  41afa2:	xchg   ecx,eax
  41afa3:	ss adc eax,0x9c2cf116
  41afa9:	push   0xfffffff7
  41afab:	ret    
  41afac:	dec    edx
  41afad:	leave  
  41afae:	adc    ah,BYTE PTR [ebp-0x43]
  41afb1:	ret    
  41afb2:	sub    al,0x26
  41afb4:	jecxz  0x41b003
  41afb6:	dec    ebp
  41afb7:	ss retf 0xfb36
  41afbb:	std    
  41afbc:	iret   
  41afbd:	pop    eax
  41afbe:	sub    ch,al
  41afc0:	adc    al,0xaf
  41afc2:	add    ecx,DWORD PTR [esi-0x5d]
  41afc5:	adc    eax,0xf8000129
  41afca:	add    al,0x0
  41afcc:	add    BYTE PTR [esi+edx*2],ch
  41afcf:	mov    al,ds:0x1929538
  41afd4:	in     eax,dx
  41afd5:	std    
  41afd6:	daa    
  41afd7:	and    al,0x33
  41afd9:	dec    ecx
  41afda:	pop    es
  41afdb:	enter  0x8a00,0xae
  41afdf:	lock cmc 
  41afe1:	pusha  
  41afe2:	push   ds
  41afe3:	not    BYTE PTR [edi-0x6f]
  41afe6:	ds ins DWORD PTR es:[edi],dx
  41afe8:	dec    esp
  41afea:	xor    DWORD PTR [edx-0x23d57cb3],0x24ec4616
  41aff4:	add    eax,0xbb00868e
  41aff9:	inc    ebp
  41affa:	mov    ah,0xea
  41affc:	cmp    al,0x32
  41affe:	xchg   esp,eax
  41afff:	ja     0x41afbc
  41b001:	or     DWORD PTR [ebx],edi
  41b003:	cmp    bl,ah
  41b005:	cmc    
  41b006:	arpl   WORD PTR [edi+0x3cf1275c],di
  41b00c:	pop    ss
  41b00d:	push   esi
  41b00e:	mov    al,ds:0xed22fc9e
  41b013:	mov    edx,0x5de44db4
  41b018:	pop    esp
  41b019:	sub    DWORD PTR [esi-0x10],0x21cd6b3
  41b020:	push   ebp
  41b021:	push   ebp
  41b022:	push   ebx
  41b023:	hlt    
  41b024:	rcl    BYTE PTR [eax],1
  41b026:	add    eax,0x971e314d
  41b02b:	ins    DWORD PTR es:[edi],dx
  41b02c:	inc    edi
  41b02d:	add    eax,0xafbd139a
  41b032:	nop
  41b033:	sahf   
  41b034:	repnz and esi,DWORD PTR [esi+0x56]
  41b038:	or     eax,0x9777fe40
  41b03d:	imul   ebx,DWORD PTR [ebx-0x639c62d8],0x8e19cdf
  41b047:	stos   DWORD PTR es:[edi],eax
  41b048:	jge    0x41b00f
  41b04a:	xchg   eax,ebp
  41b04c:	imul   ebx,DWORD PTR [esi],0xea38ae8e
  41b052:	sbb    al,0x75
  41b054:	call   0xe0ee:0x82e76d55
  41b05b:	ins    BYTE PTR es:[edi],dx
  41b05c:	addr16 mov esi,0x9d52dc82
  41b062:	sbb    BYTE PTR [ecx+ecx*2],cl
  41b065:	icebp  
  41b066:	cld    
  41b067:	ja     0x41b091
  41b069:	test   DWORD PTR [edx-0x6941c033],0x5c6a903b
  41b073:	inc    edx
  41b074:	test   al,0x44
  41b076:	xchg   ecx,eax
  41b077:	add    eax,0x7afad6ef
  41b07c:	mov    bh,0xe
  41b07e:	mov    dh,0x60
  41b080:	enter  0x27cf,0x48
  41b084:	push   edx
  41b085:	add    BYTE PTR [ebx-0x2],al
  41b088:	std    
  41b089:	mov    edi,0xbcfdea1f
  41b08e:	add    al,0x96
  41b090:	ret    
  41b091:	mov    al,ds:0xc3a33e8c
  41b096:	in     eax,0x5e
  41b098:	shr    cl,0xda
  41b09b:	lods   eax,DWORD PTR ds:[esi]
  41b09c:	adc    ah,BYTE PTR [ecx+0x17]
  41b09f:	jae    0x41b0bb
  41b0a1:	pop    esp
  41b0a2:	jne    0x41b0ec
  41b0a4:	mov    edi,ebx
  41b0a6:	xchg   ebx,eax
  41b0a7:	aad    0x7c
  41b0a9:	inc    esp
  41b0aa:	lds    esp,FWORD PTR [edi+0x7e8758a7]
  41b0b0:	sub    al,0x86
  41b0b2:	fucom  st(5)
  41b0b4:	mov    ebp,0xa7cc6348
  41b0b9:	and    al,0x36
  41b0bb:	push   ds
  41b0bc:	cs mov edi,0xf4073f8d
  41b0c2:	xor    ebp,DWORD PTR [edx]
  41b0c4:	pop    ds
  41b0c5:	add    DWORD PTR [esi-0x2ed73b5b],ebp
  41b0cb:	popf   
  41b0cc:	test   al,0xcd
  41b0ce:	mov    cs,WORD PTR [edi+0x7a82be2c]
  41b0d4:	xlat   BYTE PTR ds:[ebx]
  41b0d5:	fisub  DWORD PTR [ebx-0x7a]
  41b0d8:	mov    bh,0x77
  41b0da:	pop    edx
  41b0db:	xchg   esi,eax
  41b0dc:	jp     0x41b077
  41b0de:	sub    bh,BYTE PTR [eax-0x4d]
  41b0e1:	jl     0x41b10c
  41b0e3:	shr    eax,0xa8
  41b0e6:	cdq    
  41b0e7:	mov    ah,al
  41b0e9:	xchg   DWORD PTR ds:0xc35181cf,ebp
  41b0ef:	ret    
  41b0f0:	hlt    
  41b0f1:	pop    ebp
  41b0f2:	in     al,0x5
  41b0f4:	les    edi,FWORD PTR [eax-0x67696084]
  41b0fa:	outs   dx,DWORD PTR ds:[esi]
  41b0fb:	adc    cl,BYTE PTR [ecx]
  41b0fd:	xchg   esp,eax
  41b0fe:	adc    cl,BYTE PTR [eax-0x3]
  41b101:	sbb    BYTE PTR [edx-0x7b],0xed
  41b105:	dec    eax
  41b106:	push   esi
  41b107:	xor    ecx,ebx
  41b109:	sbb    dh,BYTE PTR [ebx+edi*2]
  41b10c:	push   es
  41b10d:	push   es
  41b10e:	jns    0x41b0c4
  41b110:	data16 jg 0x41b17c
  41b113:	sbb    BYTE PTR [eax-0x64e3fda1],al
  41b119:	jl     0x41b13d
  41b11b:	pushf  
  41b11c:	(bad)  
  41b11d:	pop    ds
  41b11e:	ja     0x41b13d
  41b120:	pop    ebp
  41b121:	or     al,0x6d
  41b123:	jb     0x41b13d
  41b125:	cwde   
  41b126:	mov    esp,0x7e8f3cbe
  41b12b:	scas   al,BYTE PTR es:[edi]
  41b12c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b12d:	mov    ds:0xb5e6b4ad,eax
  41b132:	xlat   BYTE PTR ds:[ebx]
  41b133:	cmp    ah,BYTE PTR [eax]
  41b135:	add    al,0xdd
  41b137:	xchg   edx,eax
  41b138:	mov    ecx,0xf9cb3f42
  41b13d:	dec    edx
  41b13e:	and    eax,0xd3c084cb
  41b143:	and    BYTE PTR [esi],dl
  41b145:	test   eax,0x6a500b63
  41b14a:	cwde   
  41b14b:	hlt    
  41b14c:	(bad)  
  41b14e:	in     al,dx
  41b14f:	or     DWORD PTR [edi+0x26],ecx
  41b152:	pop    ecx
  41b153:	xor    ecx,ecx
  41b155:	pop    es
  41b156:	mov    edx,esp
  41b158:	pop    ss
  41b159:	fs or  al,0xe6
  41b15c:	int    0x39
  41b15e:	int3   
  41b15f:	jmp    0x3daea3d1
  41b164:	retf   0xa37b
  41b167:	mov    bl,0x75
  41b169:	add    eax,0x8dfce46a
  41b16e:	sub    ah,BYTE PTR [edx+ebp*8]
  41b171:	sbb    BYTE PTR [edi],ah
  41b173:	mov    al,0x94
  41b175:	mov    esp,0xf24c117e
  41b17a:	mov    esp,0xfdab2980
  41b17f:	inc    ecx
  41b180:	fld    TBYTE PTR [edi+0x61]
  41b183:	sbb    dl,BYTE PTR [edx-0x146afe13]
  41b189:	or     al,0xd8
  41b18b:	sbb    BYTE PTR [edx],ch
  41b18d:	sbb    al,0xc9
  41b18f:	jge    0x41b159
  41b191:	je     0x41b18f
  41b193:	retf   0x2f79
  41b196:	ss test eax,0x4880e4b9
  41b19c:	adc    al,BYTE PTR [edx+0xf]
  41b19f:	cmp    cl,bh
  41b1a1:	push   eax
  41b1a2:	not    dh
  41b1a4:	xchg   esp,eax
  41b1a5:	inc    esp
  41b1a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1a7:	rcr    al,1
  41b1a9:	pop    edx
  41b1aa:	sti    
  41b1ab:	dec    ebx
  41b1ac:	pop    edx
  41b1ad:	fisubr WORD PTR [edi-0x32]
  41b1b0:	test   BYTE PTR [ebx],ch
  41b1b2:	mov    DWORD PTR [edi+ecx*8-0x51a73587],ebx
  41b1b9:	add    DWORD PTR [esi+0x7f1c7e34],0xe61b3e7b
  41b1c3:	mov    esi,0x26d64df0
  41b1c8:	mov    ds:0xfed683e5,eax
  41b1cd:	pop    ebx
  41b1ce:	cmp    eax,0x1218a586
  41b1d3:	jnp    0x41b17d
  41b1d5:	hlt    
  41b1d6:	lahf   
  41b1d7:	in     eax,0xca
  41b1d9:	(bad)  
  41b1da:	je     0x41b241
  41b1dc:	inc    ecx
  41b1dd:	inc    ebp
  41b1de:	popf   
  41b1df:	ret    
  41b1e0:	(bad)  
  41b1e1:	frstor [ebp+0x43]
  41b1e4:	jnp    0x41b221
  41b1e6:	xor    DWORD PTR [esi-0x226b26a7],ebp
  41b1ec:	xor    bl,ch
  41b1ee:	jno    0x41b228
  41b1f0:	mov    si,0x2a6e
  41b1f4:	ret    
  41b1f5:	or     eax,edx
  41b1f7:	push   es
  41b1f8:	jmp    0x41b264
  41b1fa:	(bad)  
  41b1fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1fc:	ja     0x41b26b
  41b1fe:	or     ecx,DWORD PTR [edi-0x1d]
  41b201:	scas   al,BYTE PTR es:[edi]
  41b202:	fwait
  41b203:	pop    ss
  41b204:	mov    cs,WORD PTR [eax+0x44]
  41b207:	xor    DWORD PTR [ebp+0x41],0xe460971d
  41b20e:	inc    ebx
  41b20f:	pop    esi
  41b210:	shr    BYTE PTR [edx],cl
  41b212:	outs   dx,BYTE PTR ds:[esi]
  41b213:	(bad)  [esi+0x2d]
  41b216:	mov    ds:0x340c485f,eax
  41b21b:	enter  0x89b9,0xbf
  41b21f:	into   
  41b220:	es mov eax,ss
  41b223:	shl    cl,0x39
  41b226:	sahf   
  41b227:	data16 cli 
  41b229:	pop    ebp
  41b22a:	push   edi
  41b22b:	(bad)  
  41b22c:	fdivr  QWORD PTR [esi+0x3c051c08]
  41b232:	inc    edi
  41b233:	push   esi
  41b234:	out    dx,al
  41b235:	mov    ecx,0x70077ab3
  41b23a:	cli    
  41b23b:	cmp    al,0x29
  41b23d:	pop    esp
  41b23e:	(bad)  
  41b240:	lods   eax,DWORD PTR ds:[esi]
  41b241:	sbb    al,0x69
  41b243:	dec    esi
  41b244:	sar    DWORD PTR [eax+0x18],cl
  41b247:	dec    ecx
  41b248:	loope  0x41b2b7
  41b24a:	pop    edx
  41b24b:	sub    ah,BYTE PTR gs:[edx+ebp*8]
  41b24f:	pop    ebx
  41b250:	add    DWORD PTR [esi+eax*1],esi
  41b253:	sub    BYTE PTR [eax-0xf092a4d],bh
  41b259:	mov    dl,0x9e
  41b25b:	out    0xa3,eax
  41b25d:	jae    0x41b26f
  41b25f:	(bad)  
  41b260:	adc    cl,ch
  41b262:	jae    0x41b26c
  41b264:	push   esp
  41b265:	push   0x242db361
  41b26a:	cmp    DWORD PTR [ebx],ebp
  41b26c:	jg     0x41b2b0
  41b26e:	cmp    DWORD PTR [edi+0x50b20e0d],edx
  41b274:	out    0xf,al
  41b276:	hlt    
  41b277:	adc    BYTE PTR [ecx],0xce
  41b27a:	jo     0x41b2a4
  41b27c:	inc    ebx
  41b27d:	push   eax
  41b27e:	arpl   WORD PTR [ecx-0x24f7a5aa],dx
  41b284:	add    edx,DWORD PTR [eax]
  41b286:	mov    dh,0x3a
  41b288:	enter  0x9325,0x9c
  41b28c:	arpl   cx,bp
  41b28e:	cmp    bl,BYTE PTR ds:0xdafdd267
  41b294:	sbb    bh,BYTE PTR [ecx-0x12]
  41b297:	mov    bh,0xcc
  41b299:	adc    ebx,edi
  41b29b:	popf   
  41b29c:	sub    esi,DWORD PTR [ebx]
  41b29e:	adc    bl,0xa9
  41b2a1:	rol    DWORD PTR [eax+0x3d],0x75
  41b2a5:	cmp    BYTE PTR [esp+esi*2-0x7],bh
  41b2a9:	pop    edi
  41b2aa:	inc    ebp
  41b2ab:	enter  0xec8b,0x28
  41b2af:	mov    ecx,0xe72a961a
  41b2b4:	ret    
  41b2b5:	lods   al,BYTE PTR ds:[esi]
  41b2b6:	inc    eax
  41b2b7:	into   
  41b2b8:	pop    ebp
  41b2b9:	inc    esi
  41b2ba:	inc    edi
  41b2bb:	xchg   esi,eax
  41b2bc:	dec    ecx
  41b2bd:	cwde   
  41b2be:	and    eax,0xb37aa5fa
  41b2c3:	mov    ds:0x6de4c8f7,eax
  41b2c8:	pop    edi
  41b2c9:	les    ebp,FWORD PTR [ecx-0x5cd54263]
  41b2cf:	fld    TBYTE PTR [edx+0x5c]
  41b2d2:	arpl   bx,di
  41b2d4:	in     eax,dx
  41b2d5:	jo     0x41b295
  41b2d7:	sub    al,0x9b
  41b2d9:	push   cs
  41b2da:	xchg   esi,eax
  41b2db:	jo     0x41b27d
  41b2dd:	daa    
  41b2de:	loope  0x41b35a
  41b2e0:	push   0xffffff91
  41b2e2:	or     dl,bh
  41b2e4:	jbe    0x41b33f
  41b2e6:	push   esp
  41b2e7:	outs   dx,DWORD PTR ds:[esi]
  41b2e8:	mov    cl,0xd4
  41b2ea:	xor    DWORD PTR [eax+edx*8-0x39],ecx
  41b2ee:	dec    esp
  41b2ef:	call   0x9220:0x640b76e6
  41b2f6:	out    dx,al
  41b2f7:	sub    ah,BYTE PTR [ebp+ecx*8-0x1a66349a]
  41b2fe:	mov    al,ds:0xcfc2613
  41b303:	sub    BYTE PTR ss:[edi],al
  41b306:	addr16 iret 
  41b308:	pop    esp
  41b309:	es ins BYTE PTR es:[edi],dx
  41b30b:	(bad)  
  41b30d:	imul   ecx,ebp,0xffffffb3
  41b310:	loop   0x41b2e8
  41b312:	adc    bh,BYTE PTR [esi]
  41b314:	cmp    ebp,esi
  41b316:	outs   dx,DWORD PTR ds:[esi]
  41b317:	inc    edi
  41b318:	hlt    
  41b319:	mov    WORD PTR [edx-0x70],?
  41b31c:	loope  0x41b2b6
  41b31e:	push   0xc1b6fc2b
  41b323:	adc    bl,BYTE PTR [eax+0x6b95750c]
  41b329:	ret    0xc28
  41b32c:	cdq    
  41b32d:	pop    esi
  41b32e:	and    ebx,DWORD PTR [eax+0x1bef3aa9]
  41b334:	mov    dh,0xbc
  41b336:	gs jmp 0x41b2df
  41b339:	pop    edx
  41b33a:	(bad)  ds:0xd056ce51
  41b340:	(bad)  
  41b341:	data16 jb 0x41b2f3
  41b344:	(bad)  
  41b345:	push   cs
  41b346:	repz into 
  41b348:	mov    al,0xfe
  41b34a:	faddp  st(4),st
  41b34c:	mov    cl,BYTE PTR [edi+edi*4-0x59]
  41b350:	push   ds
  41b351:	retf   0x91ea
  41b354:	jp     0x41b384
  41b356:	mov    dl,0x3c
  41b358:	jecxz  0x41b38a
  41b35a:	jg     0x41b3ce
  41b35c:	lahf   
  41b35d:	fwait
  41b35e:	cmp    al,0xc7
  41b360:	or     bl,ah
  41b362:	and    al,0x89
  41b364:	int    0x5
  41b366:	fs aam 0xc6
  41b369:	push   edx
  41b36a:	sar    DWORD PTR [edx],0x93
  41b36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b36e:	xchg   esp,eax
  41b36f:	jl     0x41b38c
  41b371:	dec    edi
  41b372:	fidiv  DWORD PTR [esi-0x42ddef5d]
  41b378:	xchg   ch,ch
  41b37a:	out    dx,al
  41b37b:	addr16 mov ch,0x9c
  41b37e:	sar    DWORD PTR [edi-0x7759526e],0xff
  41b385:	dec    edx
  41b386:	std    
  41b387:	ffreep st(4)
  41b389:	mov    eax,ds:0x82ed2e8f
  41b38e:	clc    
  41b38f:	pop    edi
  41b390:	mov    edx,0x3bf5755f
  41b395:	test   DWORD PTR [ecx],esi
  41b397:	stos   DWORD PTR es:[edi],eax
  41b398:	add    eax,edi
  41b39a:	sub    DWORD PTR [esi-0x4c],0xffffffd9
  41b39e:	stos   DWORD PTR es:[edi],eax
  41b39f:	das    
  41b3a0:	cmp    eax,0xd50afc66
  41b3a5:	adc    ch,al
  41b3a7:	mov    ch,0x32
  41b3a9:	popf   
  41b3aa:	fisttp DWORD PTR [ebp-0x27]
  41b3ad:	inc    esi
  41b3ae:	sub    DWORD PTR [eax+0x4f4f4998],edx
  41b3b4:	dec    esi
  41b3b5:	sbb    al,0xd2
  41b3b7:	jge    0x41b382
  41b3b9:	dec    ebx
  41b3ba:	cs jg  0x41b367
  41b3bd:	test   al,0x98
  41b3bf:	add    dh,BYTE PTR [ecx-0x1]
  41b3c2:	imul   edx,DWORD PTR [edi],0xdbfc8538
  41b3c8:	(bad)  
  41b3c9:	sub    al,0x95
  41b3cb:	mov    esi,0xac638e13
  41b3d0:	daa    
  41b3d1:	jbe    0x41b3b3
  41b3d3:	sbb    eax,0xe3e9334a
  41b3d8:	xor    dl,al
  41b3da:	lds    eax,FWORD PTR gs:[edx-0x16]
  41b3de:	mov    esi,0xb5a1bf9b
  41b3e3:	xchg   ebx,esp
  41b3e5:	sti    
  41b3e6:	test   BYTE PTR [ebp-0x25],bl
  41b3e9:	ds inc esp
  41b3eb:	hlt    
  41b3ec:	pushf  
  41b3ed:	adc    al,0x84
  41b3ef:	in     al,dx
  41b3f0:	out    dx,al
  41b3f1:	cs push es
  41b3f3:	push   esp
  41b3f4:	out    0x57,al
  41b3f6:	push   esi
  41b3f7:	ffree  st(3)
  41b3f9:	xlat   BYTE PTR ds:[ebx]
  41b3fa:	int    0x8b
  41b3fc:	(bad)  
  41b3fd:	jge    0x41b3e5
  41b3ff:	inc    eax
  41b400:	mov    ebp,0x72d93c91
  41b405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b406:	out    dx,eax
  41b407:	popa   
  41b408:	arpl   bx,cx
  41b40a:	push   0x39fed42d
  41b40f:	mov    ds,WORD PTR [edi+0x7603125e]
  41b415:	fild   WORD PTR [edx+0x3ba82101]
  41b41b:	in     al,0x50
  41b41d:	and    dl,BYTE PTR [esi-0x28154346]
  41b423:	xor    al,0x8e
  41b425:	push   ecx
  41b426:	and    dl,BYTE PTR [edx+eiz*8-0x197c5681]
  41b42d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41b42f:	adc    al,0x52
  41b431:	int    0xcf
  41b433:	enter  0x1bd9,0xb
  41b437:	(bad)  
  41b439:	jl     0x41b467
  41b43b:	aam    0xfd
  41b43d:	sub    al,0xac
  41b43f:	clc    
  41b440:	pop    esp
  41b441:	mov    esp,0xc74556dd
  41b446:	fmul   st(5),st
  41b448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b449:	mov    ebx,DWORD PTR [ebp+0x29]
  41b44c:	fdivr  QWORD PTR [ebx-0x45]
  41b44f:	inc    ebp
  41b450:	push   ebx
  41b451:	ret    
  41b452:	jo     0x41b408
  41b454:	leave  
  41b455:	jb     0x41b45b
  41b457:	test   BYTE PTR [edi-0x14830586],ah
  41b45d:	stos   BYTE PTR es:[edi],al
  41b45e:	xor    BYTE PTR [esi],ch
  41b460:	test   esp,edi
  41b462:	jno    0x41b4ae
  41b464:	repnz (bad) [eax]
  41b467:	addr16 cld 
  41b469:	push   cs
  41b46a:	and    DWORD PTR [esi+0x4f0f12d6],esi
  41b470:	dec    ebp
  41b471:	(bad)  
  41b472:	mov    esi,0x7d8bff20
  41b477:	mov    ecx,0x4856f874
  41b47c:	adc    DWORD PTR [ebp-0x52],0x11
  41b480:	jo     0x41b46f
  41b482:	adc    DWORD PTR [edx-0x6d],esi
  41b485:	mov    dl,0xe2
  41b487:	push   ss
  41b488:	xchg   edi,eax
  41b489:	sub    al,0xe8
  41b48b:	adc    al,0x25
  41b48d:	push   edx
  41b48e:	or     al,BYTE PTR [eax-0x74073f1e]
  41b494:	adc    al,BYTE PTR [edx+eax*1+0x22f6126f]
  41b49b:	add    dh,ah
  41b49d:	ins    DWORD PTR es:[edi],dx
  41b49e:	sti    
  41b49f:	push   ss
  41b4a0:	inc    ecx
  41b4a1:	pop    ebx
  41b4a2:	adc    esp,ecx
  41b4a4:	leave  
  41b4a5:	mov    al,ds:0x4b19729d
  41b4aa:	push   ebp
  41b4ab:	cmp    edi,DWORD PTR [edi+0x7b]
  41b4ae:	jg     0x41b4e2
  41b4b0:	loope  0x41b4cc
  41b4b2:	loop   0x41b50f
  41b4b4:	dec    eax
  41b4b5:	in     eax,dx
  41b4b6:	push   ds
  41b4b7:	ret    
  41b4b8:	adc    bh,ah
  41b4ba:	jle    0x41b440
  41b4bc:	jg     0x41b461
  41b4be:	push   ss
  41b4bf:	cmp    cl,BYTE PTR [edi]
  41b4c1:	cli    
  41b4c2:	int3   
  41b4c3:	adc    eax,0xef26fc18
  41b4c8:	mov    eax,ds:0x7ffee9ff
  41b4cd:	in     al,dx
  41b4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4cf:	data16 arpl WORD PTR [eiz*1+0x2e0dc6eb],bp
  41b4d7:	add    DWORD PTR [eax],eax
  41b4d9:	clc    
  41b4da:	add    al,0x0
  41b4dc:	add    BYTE PTR ds:0xde9aca68,ah
  41b4e2:	mov    BYTE PTR [ebx+ebx*2],cl
  41b4e5:	ins    BYTE PTR es:[edi],dx
  41b4e6:	into   
  41b4e7:	sbb    DWORD PTR [ebp+0x200445ef],edi
  41b4ed:	jl     0x41b4a2
  41b4ef:	jge    0x41b49a
  41b4f1:	inc    edi
  41b4f2:	repnz xchg edi,eax
  41b4f4:	push   es
  41b4f5:	das    
  41b4f6:	and    DWORD PTR [edi],edi
  41b4f8:	jmp    FWORD PTR [edi+0x1c]
  41b4fb:	xchg   esp,eax
  41b4fc:	pop    eax
  41b4fd:	lods   al,BYTE PTR ds:[esi]
  41b4fe:	push   ebp
  41b4ff:	add    al,0x24
  41b501:	test   BYTE PTR [edx-0x63],bh
  41b504:	cld    
  41b505:	or     DWORD PTR [ecx-0x2002bfae],0xffffffce
  41b50c:	mov    ch,0xd
  41b50e:	jmp    0x48fe:0xc7d136c3
  41b515:	and    al,0x8
  41b517:	(bad)  
  41b518:	loopne 0x41b597
  41b51a:	fst    st(7)
  41b51c:	imul   ah
  41b51e:	(bad)
  41b521:	add    DWORD PTR [esi-0x2f],ebp
  41b524:	push   edi
  41b525:	mov    ch,BYTE PTR [edx+ebx*8]
  41b528:	push   ds
  41b529:	pop    es
  41b52a:	cld    
  41b52b:	aad    0xb1
  41b52d:	fwait
  41b52e:	adc    ch,ch
  41b530:	adc    ecx,DWORD PTR [ebp+0x50]
  41b533:	add    al,0x1a
  41b535:	mov    dh,0x4b
  41b537:	in     al,0x2e
  41b539:	out    0x32,al
  41b53b:	cmc    
  41b53c:	push   ecx
  41b53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b53e:	out    0x78,al
  41b540:	lock pop eax
  41b542:	(bad)  
  41b543:	cld    
  41b544:	sub    cl,BYTE PTR [ebx]
  41b546:	pop    ebp
  41b547:	rol    cl,cl
  41b549:	rcr    ah,cl
  41b54b:	mov    edi,0xc1d86d95
  41b550:	or     BYTE PTR [ecx+0x56],0x50
  41b554:	jnp    0x41b517
  41b556:	cmp    al,0xe0
  41b558:	and    bl,ah
  41b55a:	push   eax
  41b55b:	push   es
  41b55c:	xchg   esi,eax
  41b55d:	mov    ebx,0xefc74a09
  41b562:	daa    
  41b563:	and    edx,eax
  41b565:	repnz mov dl,0x63
  41b568:	in     eax,dx
  41b569:	xor    ebp,esi
  41b56b:	aas    
  41b56c:	fisubr WORD PTR [esi+0x40778f85]
  41b572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b573:	push   ebx
  41b574:	lock aas 
  41b576:	in     al,0xca
  41b578:	and    BYTE PTR [edi],0x39
  41b57b:	mov    ebp,0x3c4d957e
  41b580:	or     eax,0xb2bde1ba
  41b585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b586:	jno    0x41b5db
  41b588:	repnz stos BYTE PTR es:[edi],al
  41b58a:	mov    ebp,0xe6a032f9
  41b58f:	jl     0x41b550
  41b591:	pop    edi
  41b592:	sub    BYTE PTR [edi-0x7a],bl
  41b595:	je     0x41b54a
  41b597:	aas    
  41b598:	jecxz  0x41b530
  41b59a:	sub    BYTE PTR [ecx],0xa8
  41b59d:	mov    ds:0x832e1380,eax
  41b5a2:	jl     0x41b5ca
  41b5a4:	fisttp WORD PTR [ecx-0x70eaf98a]
  41b5aa:	dec    ecx
  41b5ab:	(bad)  
  41b5ac:	sub    dl,BYTE PTR [ecx]
  41b5ae:	jne    0x41b5ed
  41b5b0:	dec    ebp
  41b5b1:	sar    dh,0x5
  41b5b4:	mov    bh,0xe7
  41b5b6:	(bad)  
  41b5b7:	and    DWORD PTR [esi],esi
  41b5b9:	lock cli 
  41b5bb:	jge    0x41b5f1
  41b5bd:	sbb    ah,dh
  41b5bf:	fwait
  41b5c0:	iret   
  41b5c1:	lds    ebx,FWORD PTR [esi+0x5f]
  41b5c4:	inc    eax
  41b5c5:	and    eax,0xd7596880
  41b5ca:	imul   ecx,DWORD PTR [ebp+0x25],0xc5499358
  41b5d1:	fnstsw WORD PTR [esi+edx*1+0x1]
  41b5d5:	call   0xf4fd4535
  41b5da:	aad    0x41
  41b5dc:	add    DWORD PTR [eax-0x7d],ecx
  41b5df:	mov    WORD PTR [edi+0x1f],ss
  41b5e2:	pop    ss
  41b5e3:	fldcw  WORD PTR [ebp-0x273ead20]
  41b5e9:	fs mov esi,edx
  41b5ec:	dec    ebx
  41b5ed:	adc    al,0xed
  41b5ef:	dec    esi
  41b5f0:	(bad)  
  41b5f1:	xor    eax,0xc3f872b5
  41b5f6:	inc    edx
  41b5f7:	add    ebx,DWORD PTR [ecx+ebp*4]
  41b5fa:	cs (bad) 
  41b5fc:	fcmovnbe st,st(1)
  41b5fe:	fdiv   QWORD PTR [esi]
  41b600:	in     al,0x2d
  41b602:	(bad)  
  41b603:	je     0x41b597
  41b605:	sub    BYTE PTR [eax+esi*4+0x129ce397],dh
  41b60c:	es inc esi
  41b60e:	sbb    eax,DWORD PTR [ebx+0x6f60a7c0]
  41b614:	mov    fs,ebp
  41b616:	imul   esi,DWORD PTR [ebx],0x49
  41b619:	and    esp,DWORD PTR [ecx]
  41b61b:	imul   esp,DWORD PTR [edi],0x36c3b346
  41b621:	or     esi,esi
  41b623:	retf   0x2631
  41b626:	les    ebp,FWORD PTR [edi]
  41b628:	push   cs
  41b629:	add    edx,DWORD PTR fs:[ebp-0x75]
  41b62d:	add    BYTE PTR [edx-0x5],cl
  41b630:	cli    
  41b631:	dec    edi
  41b632:	test   DWORD PTR [eax],esp
  41b634:	call   0xc7e1f472
  41b639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b63a:	lahf   
  41b63b:	dec    edi
  41b63c:	je     0x41b685
  41b63e:	retf   
  41b63f:	fcomp  DWORD PTR [edi]
  41b641:	push   edx
  41b642:	in     eax,0x91
  41b644:	inc    esi
  41b645:	jl     0x41b635
  41b647:	cli    
  41b648:	mul    BYTE PTR [esi]
  41b64a:	retf   0xbb4a
  41b64d:	ret    0x48b4
  41b650:	gs jmp 0x52ee:0xa9fa42de
  41b658:	xchg   ah,dh
  41b65a:	push   edi
  41b65b:	bound  ebx,QWORD PTR [edi]
  41b65d:	cli    
  41b65e:	ins    BYTE PTR es:[edi],dx
  41b65f:	ffree  st(3)
  41b661:	mov    ch,0x7d
  41b663:	mov    ds:0x83b97ec1,al
  41b668:	push   ss
  41b669:	sub    DWORD PTR [ecx+ebp*8-0x641abc29],ebp
  41b670:	jne    0x41b605
  41b672:	ds mov dl,0x36
  41b675:	cmp    bl,BYTE PTR [eax*1+0x35076b4f]
  41b67c:	cdq    
  41b67d:	cmp    al,bl
  41b67f:	mov    DWORD PTR [edx+0xd5d6410],0x7bc39e1b
  41b689:	pop    eax
  41b68a:	hlt    
  41b68b:	loope  0x41b614
  41b68d:	jbe    0x41b657
  41b68f:	and    al,0x40
  41b691:	cli    
  41b692:	jmp    0x6384:0x311988f0
  41b699:	lock ja 0x41b654
  41b69c:	stc    
  41b69d:	(bad)  
  41b69e:	das    
  41b69f:	rol    BYTE PTR ss:[eax-0x6f],cl
  41b6a3:	adc    edx,edi
  41b6a5:	jmp    0x1b874fd4
  41b6aa:	add    al,0xa5
  41b6ac:	setge  BYTE PTR ds:0x9dd870f9
  41b6b3:	ins    DWORD PTR es:[edi],dx
  41b6b4:	imul   edi,DWORD PTR [ebx],0x9
  41b6b7:	push   ebp
  41b6b8:	push   ecx
  41b6b9:	push   esi
  41b6ba:	jbe    0x41b6c2
  41b6bc:	mov    ds:0x3ee4462d,al
  41b6c1:	cmp    eax,0xb7948325
  41b6c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6c7:	je     0x41b66d
  41b6c9:	cmp    DWORD PTR ds:0x78df75a1,edx
  41b6cf:	pop    edx
  41b6d0:	xchg   edi,eax
  41b6d1:	xchg   DWORD PTR [eax-0x43915a7d],ebp
  41b6d7:	and    dh,BYTE PTR [ebp-0x5a84153c]
  41b6dd:	jmp    0xc502:0x41f8571d
  41b6e4:	pop    edx
  41b6e5:	mov    ds:0x645598ba,eax
  41b6ea:	icebp  
  41b6eb:	cmp    bl,dl
  41b6ed:	repz cmp al,BYTE PTR [ecx]
  41b6f0:	mov    eax,ds:0xcbcf510c
  41b6f5:	int3   
  41b6f6:	mov    esp,0x50ae6244
  41b6fb:	loope  0x41b6ca
  41b6fd:	mov    bh,0xa6
  41b6ff:	xor    DWORD PTR [ebp+0x70841788],edi
  41b705:	jnp    0x41b752
  41b707:	stos   DWORD PTR es:[edi],eax
  41b708:	lods   al,BYTE PTR ds:[esi]
  41b709:	xlat   BYTE PTR ds:[ebx]
  41b70a:	call   0xb8a7d13d
  41b70f:	inc    esp
  41b710:	je     0x41b772
  41b712:	lods   al,BYTE PTR ds:[esi]
  41b713:	add    dh,BYTE PTR [esi+0x3a]
  41b716:	repnz inc edx
  41b718:	popa   
  41b719:	dec    esi
  41b71a:	dec    esp
  41b71b:	das    
  41b71c:	cmc    
  41b71d:	shl    ah,1
  41b71f:	in     al,0x21
  41b721:	add    ah,ch
  41b723:	cmp    al,BYTE PTR [ecx-0x2478aeef]
  41b729:	add    edi,DWORD PTR [ebx-0x497a063e]
  41b72f:	sbb    edx,DWORD PTR [ebp+0x4bbf9eb2]
  41b735:	out    dx,eax
  41b736:	add    BYTE PTR fs:[ecx+0x18acbc37],dh
  41b73d:	jmp    0x41b7bb
  41b73f:	xchg   edi,eax
  41b740:	in     al,0x44
  41b742:	(bad)  
  41b743:	pminsw mm7,QWORD PTR [edi+0x20cfab33]
  41b74a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41b74c:	mov    esp,0x423ea1ab
  41b751:	outs   dx,BYTE PTR ds:[esi]
  41b752:	(bad)  
  41b753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b754:	mov    ebx,0x4b0decaf
  41b759:	mov    ds:0xe59102a0,al
  41b75e:	jle    0x41b72e
  41b760:	xor    ebp,DWORD PTR [eax-0x30123c6f]
  41b766:	mov    ebp,0xf4f793a6
  41b76b:	jg     0x41b78c
  41b76d:	sub    ecx,DWORD PTR [eax-0x2f60becd]
  41b773:	jb     0x41b7c6
  41b775:	mov    esp,DWORD PTR [ecx]
  41b777:	dec    esi
  41b778:	pop    eax
  41b779:	sbb    cl,BYTE PTR [eax+0x73]
  41b77c:	ror    BYTE PTR [eax+0x6b],1
  41b77f:	loope  0x41b744
  41b781:	retf   0xade7
  41b784:	adc    eax,0xc2778490
  41b789:	push   esi
  41b78a:	jns    0x41b7cc
  41b78c:	add    BYTE PTR [ecx+0x67ce503f],dh
  41b792:	ja     0x41b782
  41b794:	pushf  
  41b795:	mov    dh,0xdd
  41b797:	mov    esp,0x98d9d215
  41b79c:	adc    edx,DWORD PTR [edi+0x4e12969]
  41b7a2:	jmp    0x8164:0xbc1c47b
  41b7a9:	add    dh,BYTE PTR [bp+si+0x70]
  41b7ad:	add    BYTE PTR [esi-0x727fb8cc],dl
  41b7b3:	repz js 0x41b758
  41b7b6:	adc    edi,DWORD PTR [edi+0x19f51da5]
  41b7bc:	scas   eax,DWORD PTR es:[edi]
  41b7bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7be:	mov    dl,BYTE PTR [ecx+0x53f94dcc]
  41b7c4:	mov    WORD PTR [ebx+0x78],cs
  41b7c7:	loope  0x41b78e
  41b7c9:	cmp    eax,0xa41277ca
  41b7ce:	rol    BYTE PTR [ebx-0x24],cl
  41b7d1:	repz or BYTE PTR [ecx+0x74],bh
  41b7d5:	imul   esi,eax,0xffffffc1
  41b7d8:	add    ebx,DWORD PTR ds:0xcd65254c
  41b7de:	repz jnp 0x41b766
  41b7e1:	mov    dl,0x23
  41b7e3:	int3   
  41b7e4:	mov    ebx,0x46cbe595
  41b7e9:	clc    
  41b7ea:	sub    esi,DWORD PTR [edi]
  41b7ec:	mov    bl,0x63
  41b7ee:	mov    ch,0x98
  41b7f0:	push   eax
  41b7f1:	not    bl
  41b7f3:	mov    esi,0xe1776feb
  41b7f8:	add    ah,BYTE PTR [edx+0x20]
  41b7fb:	ret    
  41b7fc:	mov    ecx,0xee63f326
  41b801:	xor    BYTE PTR [eax+0x1f],ch
  41b804:	xlat   BYTE PTR ds:[ebx]
  41b805:	jecxz  0x41b7fe
  41b807:	push   0x22b58346
  41b80c:	and    DWORD PTR [edx-0x276da3bd],ecx
  41b812:	or     DWORD PTR [edx],eax
  41b814:	popa   
  41b815:	mov    cl,0xce
  41b817:	(bad)  
  41b818:	(bad)  
  41b819:	push   0x5
  41b81b:	lods   al,BYTE PTR ds:[esi]
  41b81c:	test   BYTE PTR [ecx-0x48],bl
  41b81f:	fstp   TBYTE PTR [esi-0x6b6ec9fc]
  41b825:	sahf   
  41b826:	ja     0x41b86a
  41b828:	loop   0x41b81e
  41b82a:	lods   al,BYTE PTR ds:[esi]
  41b82b:	cmp    dl,BYTE PTR [ebp-0x47]
  41b82e:	push   ebx
  41b82f:	xor    dh,bl
  41b831:	mul    DWORD PTR [edx]
  41b833:	xchg   ecx,eax
  41b834:	fidiv  WORD PTR gs:[esp+ebp*1]
  41b838:	push   0x68
  41b83a:	inc    edi
  41b83b:	fwait
  41b83c:	push   ss
  41b83d:	cdq    
  41b83e:	and    DWORD PTR [ebx-0x58],eax
  41b841:	leave  
  41b842:	leave  
  41b843:	das    
  41b844:	not    BYTE PTR [ecx-0x5fc534de]
  41b84a:	jns    0x41b824
  41b84c:	adc    bl,BYTE PTR [esi+edi*8-0x3f]
  41b850:	sbb    ch,BYTE PTR [ebp-0x2d]
  41b853:	rol    BYTE PTR [eiz*4+0x494b6fab],1
  41b85a:	icebp  
  41b85b:	push   ds
  41b85c:	nop
  41b85d:	retf   
  41b85e:	mov    dl,0x6c
  41b860:	pop    ss
  41b861:	ja     0x41b86f
  41b863:	xchg   ebx,eax
  41b864:	gs jmp 0xcd6770e9
  41b86a:	dec    edx
  41b86b:	fidivr WORD PTR [ecx]
  41b86d:	scas   eax,DWORD PTR es:[edi]
  41b86e:	fsubrp st(4),st
  41b870:	jo     0x41b80d
  41b872:	or     al,0x35
  41b874:	push   esi
  41b875:	push   ecx
  41b876:	and    eax,DWORD PTR [eax-0x438fe0d3]
  41b87c:	push   esi
  41b87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b87e:	mov    bl,dl
  41b880:	cmp    esi,DWORD PTR cs:[edx-0x3f6c1c88]
  41b887:	pop    ebp
  41b888:	icebp  
  41b889:	std    
  41b88a:	mov    WORD PTR ds:0x2e6cf944,es
  41b890:	mov    ecx,0x87cfd5fa
  41b895:	into   
  41b896:	ja     0x41b8f6
  41b898:	pop    ebp
  41b899:	(bad)  
  41b89a:	xchg   edx,eax
  41b89b:	enter  0xf1d3,0x2e
  41b89f:	adc    dh,BYTE PTR [ebx+eax*4]
  41b8a2:	lahf   
  41b8a3:	div    DWORD PTR [ebx+edi*2]
  41b8a6:	hlt    
  41b8a7:	cmc    
  41b8a8:	cs (bad) 
  41b8aa:	rol    ch,cl
  41b8ac:	mov    ebp,0x3134d646
  41b8b1:	mov    eax,0xb8a15de7
  41b8b6:	and    ebx,ebx
  41b8b8:	or     al,0xb8
  41b8ba:	xchg   edi,eax
  41b8bb:	and    eax,0xa745a551
  41b8c0:	(bad)  ds:0xa0f81254
  41b8c6:	lods   al,BYTE PTR ds:[esi]
  41b8c7:	data16 mov al,0x53
  41b8ca:	(bad)  
  41b8cb:	rol    al,1
  41b8cd:	pop    ds
  41b8ce:	fidiv  WORD PTR [edi]
  41b8d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8d1:	pop    ss
  41b8d2:	inc    ecx
  41b8d3:	mov    ds:0x958a1359,eax
  41b8d8:	mov    esp,0x3e880d14
  41b8dd:	push   0xffffff8f
  41b8df:	retf   
  41b8e0:	add    bh,BYTE PTR [edi-0x35ecad7d]
  41b8e6:	push   esp
  41b8e7:	retf   0xdb66
  41b8ea:	inc    eax
  41b8eb:	rcr    BYTE PTR [edx+0x18],cl
  41b8ee:	pop    ebp
  41b8ef:	test   DWORD PTR [ecx+0x7f0ce44f],eax
  41b8f5:	mov    ebx,0x3d27214e
  41b8fa:	(bad)  
  41b8fb:	sbb    BYTE PTR [eax+0x242527d1],ah
  41b901:	stos   DWORD PTR es:[edi],eax
  41b902:	stos   DWORD PTR es:[edi],eax
  41b903:	daa    
  41b904:	div    BYTE PTR [edi+ecx*2-0x77]
  41b908:	inc    edi
  41b909:	xor    al,0xda
  41b90b:	test   BYTE PTR [ebx-0x21],ch
  41b90e:	mov    ebx,0xd13924cd
  41b913:	adc    al,0xd
  41b915:	cmp    BYTE PTR [esi+0x42d0df5f],ah
  41b91b:	outs   dx,BYTE PTR ds:[esi]
  41b91c:	inc    edi
  41b91d:	cmp    ebp,DWORD PTR [esi]
  41b91f:	push   0x9c786079
  41b924:	(bad)  
  41b925:	cmp    BYTE PTR [edx+0x30927dea],ch
  41b92b:	cdq    
  41b92c:	add    cl,BYTE PTR [esp+ecx*8-0x4e]
  41b930:	pop    edi
  41b931:	xor    BYTE PTR [ebp*8-0x11e6fbdb],cl
  41b938:	dec    esp
  41b939:	mov    BYTE PTR [ecx],bl
  41b93b:	out    dx,eax
  41b93c:	aaa    
  41b93d:	sbb    BYTE PTR fs:[edx+0x36e3e865],0x9b
  41b945:	shl    DWORD PTR [edx-0x50],cl
  41b948:	and    edi,DWORD PTR [ebx-0x1a]
  41b94b:	push   edi
  41b94c:	(bad)  
  41b94d:	mov    al,0xd1
  41b94f:	mov    ds:0xbedb5535,al
  41b954:	xlat   BYTE PTR ds:[ebx]
  41b955:	and    BYTE PTR [edx-0x68],al
  41b958:	pop    ss
  41b959:	cwde   
  41b95a:	fsub   QWORD PTR cs:[ebx+ebx*1]
  41b95e:	or     edx,DWORD PTR [ebp+0x312ca54d]
  41b964:	cmp    eax,0xf56896c0
  41b969:	sbb    eax,0x6c18e29
  41b96e:	rcr    BYTE PTR [edi+0x2b],1
  41b971:	jo     0x41b938
  41b973:	mov    edi,0x72e63130
  41b978:	cmp    eax,0xdfb89a0e
  41b97d:	adc    esi,0xcc795445
  41b983:	mov    esi,0xd827d916
  41b988:	mov    ebx,0x23fcc432
  41b98d:	mov    bl,0x43
  41b98f:	jecxz  0x41b9b7
  41b991:	shl    ah,0xf0
  41b994:	sub    cl,BYTE PTR [eax+ebp*8+0x67635d45]
  41b99b:	repz inc ebp
  41b99d:	add    dl,BYTE PTR [ebp+edx*2+0x2bc394d3]
  41b9a4:	(bad)  
  41b9a6:	call   0x317b:0xd06154f3
  41b9ad:	sbb    al,0xe0
  41b9af:	rcl    BYTE PTR [ebx+0x63a9334e],cl
  41b9b5:	aad    0x55
  41b9b7:	cld    
  41b9b8:	nop
  41b9b9:	mov    ah,0xfe
  41b9bb:	iret   
  41b9bc:	repz in eax,dx
  41b9be:	xchg   edx,eax
  41b9bf:	scas   eax,DWORD PTR es:[edi]
  41b9c0:	push   ss
  41b9c1:	lock inc esi
  41b9c3:	adc    eax,0x4f3ca5ad
  41b9c8:	aas    
  41b9c9:	rcl    DWORD PTR [ecx],1
  41b9cb:	stos   DWORD PTR es:[edi],eax
  41b9cc:	cmp    DWORD PTR [eax],0x875926e7
  41b9d2:	(bad)  
  41b9d3:	push   edi
  41b9d4:	hlt    
  41b9d5:	(bad)  
  41b9d6:	aaa    
  41b9d7:	sti    
  41b9d8:	addr16 sti 
  41b9da:	out    dx,eax
  41b9db:	fidiv  WORD PTR [edi-0x1dda8775]
  41b9e1:	sub    bh,al
  41b9e3:	(bad)  
  41b9e4:	jl     0x41b9eb
  41b9e6:	xor    eax,DWORD PTR [ecx]
  41b9e8:	add    al,bh
  41b9ea:	add    al,0x0
  41b9ec:	add    BYTE PTR [edi-0x5f8514e9],dh
  41b9f2:	jbe    0x41b99f
  41b9f4:	add    BYTE PTR [eax+0x26],al
  41b9f7:	inc    ch
  41b9f9:	push   cs
  41b9fa:	std    
  41b9fb:	pop    ds
  41b9fc:	fld    DWORD PTR [ebx+0x7f]
  41b9ff:	jp     0x41ba40
  41ba01:	outs   dx,DWORD PTR ds:[esi]
  41ba02:	fmul   DWORD PTR [esi+0x7e]
  41ba05:	push   eax
  41ba06:	mov    esp,0xe0f71d10
  41ba0b:	xor    DWORD PTR [ebp-0x784261d1],esp
  41ba11:	jo     0x41ba36
  41ba13:	push   ss
  41ba14:	(bad)  
  41ba16:	leave  
  41ba17:	enter  0x6b6f,0x28
  41ba1b:	mov    edi,DWORD PTR ds:0xa6cacbe3
  41ba21:	inc    esp
  41ba22:	(bad)  
  41ba23:	mov    ch,0x64
  41ba25:	mov    eax,ds:0x85283775
  41ba2a:	in     eax,dx
  41ba2b:	mov    ds:0xc23e1873,eax
  41ba30:	rcr    DWORD PTR [eax+ebp*4+0x74],0x9a
  41ba35:	(bad)  
  41ba37:	(bad)  
  41ba38:	std    
  41ba39:	adc    esp,DWORD PTR [ebx-0x18]
  41ba3c:	sbb    al,0xec
  41ba3e:	xchg   ebp,eax
  41ba3f:	or     DWORD PTR [esi-0x37a80f70],ebx
  41ba45:	push   edx
  41ba46:	and    al,0xc0
  41ba48:	mov    cl,0x5d
  41ba4a:	pushf  
  41ba4b:	mov    es,WORD PTR [ebx-0x323a7de4]
  41ba51:	(bad)  
  41ba52:	mov    ecx,0xf5d8803e
  41ba57:	add    dh,BYTE PTR [eax-0x7cdb7bca]
  41ba5d:	inc    eax
  41ba5e:	out    dx,al
  41ba5f:	jecxz  0x41ba1c
  41ba61:	mov    cl,0x54
  41ba63:	sbb    dl,ah
  41ba65:	xor    ecx,DWORD PTR [edi]
  41ba67:	mov    cl,0x50
  41ba69:	inc    esp
  41ba6a:	sahf   
  41ba6b:	jle    0x41ba60
  41ba6d:	xor    al,0xfa
  41ba6f:	imul   ebp,DWORD PTR [ebx-0x517fb9],0x63
  41ba76:	xor    esi,esp
  41ba78:	mov    edx,0xedf4a8a0
  41ba7d:	mov    esi,0xbf459218
  41ba82:	out    0x77,al
  41ba84:	mov    eax,0x260ad82
  41ba89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba8a:	pop    esi
  41ba8b:	pxor   mm3,mm0
  41ba8e:	fmulp  st(7),st
  41ba90:	cmp    ebp,DWORD PTR [ecx-0x602c8096]
  41ba96:	dec    ebp
  41ba97:	je     0x41ba64
  41ba99:	sti    
  41ba9a:	hlt    
  41ba9b:	push   edi
  41ba9c:	jge    0x41ba58
  41ba9e:	dec    ebx
  41ba9f:	push   cs
  41baa0:	dec    edi
  41baa1:	je     0x41ba63
  41baa3:	bound  ebx,QWORD PTR ds:0xf18c4b3c
  41baa9:	pusha  
  41baaa:	mov    DWORD PTR [ecx+0x1cab8401],esp
  41bab0:	jecxz  0x41bac7
  41bab2:	push   ds
  41bab3:	pushf  
  41bab4:	jne    0x41baeb
  41bab6:	adc    ebx,DWORD PTR [ebx+0x0]
  41bab9:	mov    ebp,0x6fb28abe
  41babe:	mov    BYTE PTR [esi],bh
  41bac0:	out    0x6b,al
  41bac2:	mov    ds:0x7be2b824,eax
  41bac7:	or     al,0x8a
  41bac9:	loope  0x41baee
  41bacb:	pop    edx
  41bacc:	or     al,dh
  41bace:	dec    esp
  41bacf:	lods   eax,DWORD PTR ds:[esi]
  41bad0:	cmc    
  41bad1:	test   DWORD PTR [esp+esi*8+0x64],esi
  41bad5:	out    dx,eax
  41bad6:	mov    ah,0xcc
  41bad8:	push   es
  41bad9:	rcr    DWORD PTR [edx-0x2652f0b4],0x39
  41bae0:	add    BYTE PTR [eax+0x53],bl
  41bae3:	xchg   ebx,eax
  41bae4:	inc    esp
  41bae5:	sub    DWORD PTR [ebx+0x37],0xffffff92
  41bae9:	loop   0x41ba83
  41baeb:	lds    ecx,FWORD PTR ss:[ebp+ecx*1-0x5b]
  41baf0:	adc    BYTE PTR [ebx+0x3f],0x1b
  41baf4:	jae    0x41bb1e
  41baf6:	ss mov dl,0x4
  41baf9:	pop    ss
  41bafa:	sbb    BYTE PTR [ebp-0x6f7558e6],dh
  41bb00:	sub    BYTE PTR [ecx+0x4d],0xd8
  41bb04:	sbb    edx,DWORD PTR [ecx-0x37912cab]
  41bb0a:	lods   al,BYTE PTR ds:[esi]
  41bb0b:	pop    ebx
  41bb0c:	push   0x78
  41bb0e:	push   ds
  41bb0f:	push   ebx
  41bb10:	sub    BYTE PTR [ecx+0x59],dh
  41bb13:	xchg   edi,eax
  41bb14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb15:	cmp    edi,ecx
  41bb17:	and    ch,0xa5
  41bb1a:	mov    eax,DWORD PTR [ebx+0x12]
  41bb1d:	cmp    dh,cl
  41bb1f:	scas   eax,DWORD PTR es:[edi]
  41bb20:	cwde   
  41bb21:	inc    ecx
  41bb22:	retf   0x7f03
  41bb25:	pop    ds
  41bb26:	mov    edi,0xe5fdef41
  41bb2b:	jbe    0x41bb62
  41bb2d:	and    esp,DWORD PTR [ebp-0x2a3c799b]
  41bb33:	jmp    0xf9e6b1cd
  41bb38:	and    al,0xcb
  41bb3a:	cmp    esp,ecx
  41bb3c:	ror    DWORD PTR [ecx-0x2c],cl
  41bb3f:	ror    DWORD PTR [ebx],cl
  41bb41:	cdq    
  41bb42:	mov    edi,0x449eb6c1
  41bb47:	frstor [edx]
  41bb49:	mov    DWORD PTR [esi-0x3e220702],edi
  41bb4f:	mul    edx
  41bb51:	cmp    eax,0x2aa5377a
  41bb56:	gs jmp 0x2b4bf8a7
  41bb5c:	out    0x5f,al
  41bb5e:	xor    BYTE PTR [ebx+0x54],0x9a
  41bb62:	fiadd  DWORD PTR [eax]
  41bb64:	mov    ds:0x7e66fbcd,al
  41bb69:	ret    0xcc36
  41bb6c:	jb     0x41bb34
  41bb6e:	adc    esi,DWORD PTR [ebp-0x5039d999]
  41bb74:	cdq    
  41bb75:	(bad)  
  41bb76:	leave  
  41bb77:	arpl   WORD PTR [edx+0x71],si
  41bb7a:	xor    BYTE PTR [eax+0x30a12f82],0x56
  41bb81:	mov    dh,0x2
  41bb83:	xor    al,0x73
  41bb85:	jle    0x41bb6d
  41bb87:	adc    esp,DWORD PTR [ecx]
  41bb89:	out    dx,eax
  41bb8a:	fxch   st(4)
  41bb8c:	mov    ch,0x5b
  41bb8e:	in     eax,0x59
  41bb90:	xchg   BYTE PTR [ebp-0x5d],ch
  41bb93:	mov    al,0x62
  41bb95:	enter  0x89d5,0x67
  41bb99:	je     0x41bbc6
  41bb9b:	sub    eax,DWORD PTR [esi+0x3e]
  41bb9e:	mov    ch,0xd0
  41bba0:	jns    0x41bb8c
  41bba2:	scas   al,BYTE PTR es:[edi]
  41bba3:	pop    es
  41bba4:	jno    0x41bba3
  41bba6:	in     al,dx
  41bba7:	mov    edx,0x1c175533
  41bbac:	cmp    edx,DWORD PTR [ebp+0x16]
  41bbaf:	fldenv [edi+0x16]
  41bbb2:	stc    
  41bbb3:	dec    ecx
  41bbb4:	fstp   TBYTE PTR [ecx+0x18]
  41bbb7:	push   0x21
  41bbb9:	jns    0x41bb51
  41bbbb:	and    ecx,edi
  41bbbd:	xor    DWORD PTR [esi+edx*4],esp
  41bbc0:	out    dx,al
  41bbc1:	test   BYTE PTR [edx],al
  41bbc3:	xor    DWORD PTR [esp+edx*1+0x3f],edx
  41bbc7:	adc    DWORD PTR [edi-0x36f60511],ebx
  41bbcd:	mov    ds:0x3fd20ab4,eax
  41bbd2:	into   
  41bbd3:	pusha  
  41bbd4:	leave  
  41bbd5:	mov    ds:0xc9b1e2f1,al
  41bbda:	pop    edi
  41bbdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbdc:	pavgw  mm1,QWORD PTR [edx+0x54e11f5d]
  41bbe3:	push   esp
  41bbe4:	mov    eax,0x11fe30fe
  41bbe9:	out    0x37,al
  41bbeb:	mov    edi,0x8f517ce8
  41bbf0:	or     ebp,DWORD PTR [ecx+eiz*2+0x64]
  41bbf4:	(bad)  
  41bbf5:	les    edx,FWORD PTR [ecx]
  41bbf7:	push   bp
  41bbf9:	and    BYTE PTR [ebp+0x8215a8b],al
  41bbff:	sbb    al,0x49
  41bc01:	pop    es
  41bc02:	mov    ss,WORD PTR [ecx+0x7b]
  41bc05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc06:	sub    BYTE PTR [edi],ch
  41bc08:	jg     0x41bc7d
  41bc0a:	lock leave 
  41bc0c:	mov    eax,DWORD PTR [ebx+0x15]
  41bc0f:	inc    esi
  41bc10:	stos   BYTE PTR es:[edi],al
  41bc11:	out    dx,eax
  41bc12:	scas   eax,DWORD PTR es:[edi]
  41bc13:	cmp    al,0x93
  41bc15:	adc    DWORD PTR [ecx],ebp
  41bc17:	stos   DWORD PTR es:[edi],eax
  41bc18:	pop    esp
  41bc19:	loop   0x41bbfb
  41bc1b:	push   ecx
  41bc1c:	jecxz  0x41bc18
  41bc1e:	cmp    eax,0xf255e4d7
  41bc23:	push   esp
  41bc24:	call   0xbffa416
  41bc29:	pop    ss
  41bc2a:	push   eax
  41bc2b:	push   ebp
  41bc2c:	in     eax,dx
  41bc2d:	and    DWORD PTR [edi-0x36629352],ebp
  41bc33:	retf   
  41bc34:	push   ds
  41bc35:	dec    ebx
  41bc36:	aaa    
  41bc37:	inc    ebp
  41bc38:	out    0xaa,al
  41bc3a:	xor    al,0x8f
  41bc3c:	scas   al,BYTE PTR es:[edi]
  41bc3d:	stos   BYTE PTR es:[edi],al
  41bc3e:	mov    ds:0xc14c26e6,eax
  41bc43:	push   edx
  41bc44:	cmp    al,0x74
  41bc46:	pop    ss
  41bc47:	pushf  
  41bc48:	xlat   BYTE PTR ds:[ebx]
  41bc49:	ins    BYTE PTR es:[edi],dx
  41bc4a:	mov    ah,0x7f
  41bc4c:	sub    DWORD PTR [edi-0x25],esp
  41bc4f:	daa    
  41bc50:	(bad)  
  41bc51:	not    esp
  41bc53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc54:	adc    esp,DWORD PTR [ebp-0x17e8fbc4]
  41bc5a:	inc    esi
  41bc5b:	adc    BYTE PTR [ebp+0x4d],0xef
  41bc5f:	imul   esi,DWORD PTR [esi],0xa0fe6f26
  41bc65:	cdq    
  41bc66:	mov    edi,0xf479675a
  41bc6b:	fidivr DWORD PTR [edx-0x23]
  41bc6e:	popa   
  41bc6f:	dec    ebx
  41bc70:	out    dx,eax
  41bc71:	imul   ebx,edi,0x6fcb0c9c
  41bc77:	mov    al,0x95
  41bc79:	imul   esp,DWORD PTR [ebx],0xffffff8d
  41bc7c:	adc    BYTE PTR [esp+eax*4-0x7a8070c7],ch
  41bc83:	push   0x9bff0255
  41bc88:	inc    esp
  41bc89:	and    eax,0x8ba5dfc7
  41bc8e:	xor    ebp,DWORD PTR [eax+0x6c893c67]
  41bc94:	inc    edi
  41bc95:	mov    ch,0x64
  41bc97:	xchg   BYTE PTR [ebp-0x6f],bl
  41bc9a:	or     ch,BYTE PTR [ebx+0x4d]
  41bc9d:	aad    0x28
  41bc9f:	mov    edx,0x8c5149c5
  41bca4:	inc    esi
  41bca5:	neg    BYTE PTR [edi+0x37c10d89]
  41bcab:	sbb    edx,esp
  41bcad:	mov    ecx,0x960ef68a
  41bcb2:	pop    es
  41bcb3:	and    eax,0x9e9fe58d
  41bcb8:	aad    0xb0
  41bcba:	add    BYTE PTR [edi],0xb4
  41bcbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcbe:	ins    DWORD PTR es:[edi],dx
  41bcbf:	test   DWORD PTR [edx+0x7d72a0f],0x901d8a82
  41bcc9:	xor    BYTE PTR [esi],cl
  41bccb:	sar    bl,0xe8
  41bcce:	(bad)  
  41bccf:	pop    ss
  41bcd0:	out    dx,al
  41bcd1:	jecxz  0x41bc7c
  41bcd3:	pop    es
  41bcd4:	scas   eax,DWORD PTR es:[edi]
  41bcd5:	shl    DWORD PTR [ecx-0x77],0x3f
  41bcd9:	dec    ecx
  41bcda:	cmp    cl,BYTE PTR [esi+0x4e]
  41bcdd:	call   0x9aecd028
  41bce2:	add    DWORD PTR [edi],edx
  41bce4:	adc    ecx,DWORD PTR [edx-0x37424dd]
  41bcea:	mul    DWORD PTR [ebx-0x4e]
  41bced:	jp     0x41bccc
  41bcef:	loopne 0x41bd2a
  41bcf1:	loopne 0x41bd4b
  41bcf3:	push   ds
  41bcf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcf5:	cwde   
  41bcf6:	add    al,0xe
  41bcf8:	add    DWORD PTR [esp+ecx*4],esp
  41bcfb:	adc    ah,al
  41bcfd:	mov    fs,edx
  41bcff:	mov    edi,0x943eb39a
  41bd04:	sub    DWORD PTR [esi+0x7276f8ba],esi
  41bd0a:	fidiv  WORD PTR [edx-0x77]
  41bd0d:	add    al,0x18
  41bd0f:	arpl   dx,dx
  41bd11:	jecxz  0x41bd32
  41bd13:	inc    edi
  41bd14:	push   ebx
  41bd15:	add    ah,BYTE PTR [esp+eax*4+0x16]
  41bd19:	mov    esi,edx
  41bd1b:	mov    ah,0x99
  41bd1d:	cmp    eax,0x6a6f0094
  41bd22:	adc    ch,cl
  41bd24:	(bad)  
  41bd25:	push   edi
  41bd26:	add    ecx,ebx
  41bd28:	add    eax,0xbb5c738d
  41bd2d:	popa   
  41bd2e:	xor    edi,DWORD PTR [ebx-0x1aac60fb]
  41bd34:	add    DWORD PTR [edx+0x724506d3],ecx
  41bd3a:	sar    DWORD PTR [edi+0x58],0x8b
  41bd3e:	cld    
  41bd3f:	jne    0x41bdb3
  41bd41:	in     eax,dx
  41bd42:	add    esi,ebp
  41bd44:	xchg   ebx,eax
  41bd45:	cdq    
  41bd46:	mov    ebp,DWORD PTR gs:[edi+0x58]
  41bd4a:	jl     0x41bce1
  41bd4c:	jmp    0x41bd58
  41bd4e:	mov    esp,0x5bf1074a
  41bd53:	xor    DWORD PTR [edx+0x16],ebx
  41bd56:	ss cmp eax,0xf979b83c
  41bd5c:	pushf  
  41bd5d:	xlat   BYTE PTR ds:[ebx]
  41bd5e:	xor    ebp,esp
  41bd60:	fcomp  st(4)
  41bd62:	and    eax,0xefbb543a
  41bd67:	or     eax,0xa12a8345
  41bd6c:	dec    edx
  41bd6d:	call   0xa0cf2b1e
  41bd72:	jmp    0x41bdc8
  41bd74:	mov    ecx,0xb72ff72e
  41bd79:	push   cs
  41bd7a:	sub    DWORD PTR [ebx-0x17],edx
  41bd7d:	repnz pop ss
  41bd7f:	aad    0x6f
  41bd81:	out    0x7d,al
  41bd83:	cmp    eax,0x406e9836
  41bd88:	sbb    ecx,DWORD PTR gs:[ecx+0xb]
  41bd8c:	adc    eax,DWORD PTR [ebx]
  41bd8e:	je     0x41bd19
  41bd90:	mov    ch,0x1a
  41bd92:	lock jmp 0x41bda2
  41bd95:	(bad)  
  41bd96:	mov    eax,ds:0x8693e7b
  41bd9b:	xchg   esp,eax
  41bd9c:	sub    dh,BYTE PTR [esi+0x53]
  41bd9f:	cmp    eax,0x83b95d53
  41bda4:	push   esp
  41bda5:	or     eax,0x86005eda
  41bdaa:	push   esp
  41bdab:	sahf   
  41bdac:	int    0xd9
  41bdae:	pop    ds
  41bdaf:	sub    ch,BYTE PTR [edx+edx*2+0x7c1a1ff3]
  41bdb6:	jmp    0x8282f0ef
  41bdbb:	les    ecx,FWORD PTR [esi+0x53]
  41bdbe:	and    edi,DWORD PTR ss:[ebx]
  41bdc1:	aam    0x49
  41bdc3:	inc    esp
  41bdc4:	(bad)  
  41bdc5:	fiadd  DWORD PTR [edx]
  41bdc7:	std    
  41bdc8:	std    
  41bdc9:	push   ebp
  41bdca:	lea    esp,ds:0xc5115ce4
  41bdd0:	pop    ecx
  41bdd1:	push   0xba9f787f
  41bdd6:	iret   
  41bdd7:	pop    edi
  41bdd8:	imul   edx,DWORD PTR [edx],0xac467043
  41bdde:	test   al,0x95
  41bde0:	mov    WORD PTR [edx+esi*1+0x54],?
  41bde4:	xchg   ebp,eax
  41bde5:	pop    ss
  41bde6:	gs sti 
  41bde8:	in     al,dx
  41bde9:	and    eax,0x68e315f1
  41bdee:	add    al,0xb2
  41bdf0:	push   ecx
  41bdf1:	xchg   ebp,eax
  41bdf2:	sub    dh,BYTE PTR [eax-0x29]
  41bdf5:	mov    al,0xc2
  41bdf7:	or     esi,esp
  41bdf9:	fcmovu st,st(3)
  41bdfb:	leave  
  41bdfc:	jbe    0x41be41
  41bdfe:	xor    DWORD PTR [ecx],ebp
  41be00:	fist   WORD PTR [eax-0x52]
  41be03:	shr    DWORD PTR [ecx+eiz*2+0x3f],1
  41be07:	sbb    eax,0x4d46b0e7
  41be0c:	loopne 0x41be85
  41be0e:	leave  
  41be0f:	sbb    BYTE PTR [ebx],al
  41be11:	push   esi
  41be12:	cld    
  41be13:	pop    ecx
  41be14:	int    0x63
  41be16:	and    dh,BYTE PTR [ebx+0x1]
  41be19:	mov    ecx,0xe686dbe0
  41be1e:	fwait
  41be1f:	loop   0x41be40
  41be21:	push   edi
  41be22:	in     eax,0x49
  41be24:	dec    edi
  41be25:	push   edi
  41be26:	jl     0x41be2f
  41be28:	pop    es
  41be29:	jmp    0xfcab:0xa132b037
  41be30:	jp     0x41be65
  41be32:	dec    esi
  41be33:	xchg   esi,eax
  41be34:	xchg   esi,eax
  41be35:	sub    eax,0xc6eacde5
  41be3a:	aas    
  41be3b:	in     eax,dx
  41be3c:	inc    esi
  41be3d:	jmp    0x41be6a
  41be3f:	jbe    0x41be1f
  41be41:	fs leave 
  41be43:	sbb    esp,DWORD PTR [ebx+0x794e5fbc]
  41be49:	or     esp,DWORD PTR [edx-0xd]
  41be4c:	sub    al,0x55
  41be4e:	add    eax,0x9aa0ee44
  41be53:	fwait
  41be54:	jb     0x41be45
  41be56:	mov    dh,0xa5
  41be58:	arpl   WORD PTR [ebx+0x4c],bx
  41be5b:	sub    BYTE PTR [edx+ebp*1],cl
  41be5e:	add    ebx,DWORD PTR [ebx+0x42]
  41be61:	test   al,0x63
  41be63:	or     al,BYTE PTR [edx]
  41be65:	hlt    
  41be66:	ds pusha 
  41be68:	sbb    cl,cl
  41be6a:	fist   DWORD PTR [ebp+0xa]
  41be6d:	dec    edi
  41be6e:	stc    
  41be6f:	pop    ebp
  41be70:	or     DWORD PTR [ebx-0x3a],edi
  41be73:	ret    0x60a3
  41be76:	icebp  
  41be77:	or     eax,0x72b8e0fa
  41be7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be7d:	and    DWORD PTR [eax+0x4f8a44b0],eax
  41be83:	outs   dx,BYTE PTR ds:[esi]
  41be84:	dec    edi
  41be85:	jge    0x41befb
  41be87:	retf   0xf9f1
  41be8a:	pop    esi
  41be8b:	dec    esp
  41be8c:	mov    edx,0x266f2558
  41be91:	jae    0x41be6e
  41be93:	fcomp  DWORD PTR [ebp-0x4a]
  41be96:	(bad)  
  41be97:	push   cs
  41be98:	mov    al,ds:0xeda4d4b1
  41be9d:	lods   eax,DWORD PTR ds:[esi]
  41be9e:	add    cl,BYTE PTR [ecx+0x68723ed8]
  41bea4:	jnp    0x41bec4
  41bea6:	inc    edx
  41bea7:	das    
  41bea8:	neg    edx
  41beaa:	(bad)  
  41beab:	jns    0x41bee2
  41bead:	aas    
  41beae:	pushf  
  41beaf:	stos   BYTE PTR es:[edi],al
  41beb0:	xchg   edx,eax
  41beb1:	push   esp
  41beb2:	mov    bh,0xf3
  41beb4:	xchg   ecx,eax
  41beb5:	mov    DWORD PTR [ebp+0x1e22660],ebp
  41bebb:	aas    
  41bebc:	ret    
  41bebd:	shl    DWORD PTR [edx-0x20],1
  41bec0:	mov    ebx,0xbbf0740a
  41bec5:	jecxz  0x41be62
  41bec7:	mov    BYTE PTR [ebx],bh
  41bec9:	fs in  eax,dx
  41becb:	scas   al,BYTE PTR es:[edi]
  41becc:	retf   0x7ae2
  41becf:	shr    BYTE PTR [ecx+0x3506ca98],0xa2
  41bed6:	loop   0x41bf46
  41bed8:	adc    eax,0x2c4cd02d
  41bedd:	inc    ebp
  41bede:	xchg   esi,edx
  41bee0:	xchg   esi,eax
  41bee1:	or     eax,0xe6d5018b
  41bee6:	inc    eax
  41bee7:	sbb    eax,0xee5dbf15
  41beec:	repz sbb esi,DWORD PTR [edi+edi*1+0x13]
  41bef1:	pinsrw mm2,WORD PTR [edi+0x137fdd9],0x0
  41bef9:	clc    
  41befa:	add    al,0x0
  41befc:	add    BYTE PTR [ebx],ah
  41befe:	inc    ecx
  41beff:	sbb    BYTE PTR [edx-0x2d66fb3a],bl
  41bf05:	mov    fs,WORD PTR ds:0xb594e8aa
  41bf0b:	cmc    
  41bf0c:	std    
  41bf0d:	wrmsr  
  41bf0f:	push   ebp
  41bf10:	popf   
  41bf11:	lds    esp,FWORD PTR [eax]
  41bf13:	shl    DWORD PTR [ecx-0x70],1
  41bf16:	dec    eax
  41bf17:	and    eax,0x848558d9
  41bf1c:	push   esi
  41bf1d:	sub    al,0x4b
  41bf1f:	dec    ebx
  41bf20:	les    edx,FWORD PTR [ebp+0x1bb8d586]
  41bf26:	es (bad) 
  41bf28:	ret    
  41bf29:	pop    ds
  41bf2a:	test   eax,0x48f77794
  41bf2f:	daa    
  41bf30:	outs   dx,BYTE PTR ds:[esi]
  41bf31:	in     al,0x82
  41bf33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf34:	or     ebp,esp
  41bf36:	mov    ebx,DWORD PTR [esi+eiz*4-0x3f5473fe]
  41bf3d:	imul   ebx,DWORD PTR [edx+eax*1],0xffffffb5
  41bf41:	add    al,0x8e
  41bf43:	(bad)  
  41bf44:	mov    BYTE PTR [esi-0x1],ah
  41bf47:	aam    0xab
  41bf49:	mov    edi,0x1309bcdb
  41bf4e:	(bad)  
  41bf4f:	xor    edx,ebx
  41bf51:	xor    DWORD PTR [eax+0x3a6e63e1],0xffffffe7
  41bf58:	and    BYTE PTR [eax-0x3],0x9c
  41bf5c:	mov    bl,0x76
  41bf5e:	jo     0x41bf9d
  41bf60:	ret    0x1a02
  41bf63:	cmc    
  41bf64:	adc    ebp,DWORD PTR [esi+0x11]
  41bf67:	sub    eax,0x2576b1fe
  41bf6c:	arpl   WORD PTR [esi-0x1f139f85],ax
  41bf72:	mov    al,ds:0x608d7f6e
  41bf77:	cmp    al,ch
  41bf79:	mov    esi,DWORD PTR [esi-0x835965b]
  41bf7f:	rcl    DWORD PTR [ebx+0x63],0x4b
  41bf83:	inc    ebx
  41bf84:	nop
  41bf85:	mov    dl,0x73
  41bf87:	xchg   ebx,edx
  41bf89:	inc    esp
  41bf8a:	mov    eax,ds:0xb2bfbf89
  41bf8f:	push   0x9ae311c9
  41bf94:	out    0x35,eax
  41bf96:	sbb    dh,BYTE PTR [esi+0x396bd1]
  41bf9c:	fwait
  41bf9d:	and    BYTE PTR [edx],0xfa
  41bfa0:	xor    al,0x89
  41bfa2:	scas   eax,DWORD PTR es:[edi]
  41bfa3:	add    ah,0xb
  41bfa6:	out    0x8a,eax
  41bfa8:	int3   
  41bfa9:	cmp    bh,BYTE PTR ds:0x8349b814
  41bfaf:	cmp    DWORD PTR [esi-0x37f58755],0xffffffe8
  41bfb6:	or     BYTE PTR [ebx-0x1e],0xe1
  41bfba:	(bad)  
  41bfbb:	sti    
  41bfbc:	jb     0x41bf6d
  41bfbe:	add    eax,0xcb41f79e
  41bfc3:	dec    eax
  41bfc4:	mov    cl,al
  41bfc6:	jmp    0x41c01b
  41bfc8:	pop    edx
  41bfc9:	pop    edi
  41bfca:	pop    edx
  41bfcb:	data16 jle 0x41c00a
  41bfce:	cld    
  41bfcf:	or     DWORD PTR [edi+0x5b],0xffffff92
  41bfd3:	out    dx,al
  41bfd4:	push   0xaabfdb
  41bfd9:	and    ch,BYTE PTR [eax]
  41bfdb:	pop    ds
  41bfdc:	xor    al,0x9
  41bfde:	xor    dh,dl
  41bfe0:	sbb    ah,BYTE PTR [esi+0x33]
  41bfe3:	sub    ebp,esi
  41bfe5:	adc    eax,0x18ec4aea
  41bfea:	imul   ebp,DWORD PTR [edx],0x11220d74
  41bff0:	sbb    eax,0x4421c4d6
  41bff5:	inc    ebx
  41bff6:	mov    edx,db5
  41bff9:	xchg   ecx,eax
  41bffa:	xor    eax,0x21713955
  41bfff:	push   ecx
  41c000:	push   0xf6e4ae27
  41c005:	lahf   
  41c006:	xor    esi,DWORD PTR [edi]
  41c008:	xor    bl,ch
  41c00a:	stc    
  41c00b:	push   es
  41c00c:	or     BYTE PTR [edx+eax*1-0x68f8d2d7],0xa2
  41c014:	fild   QWORD PTR [esi+0x73c7fc76]
  41c01a:	imul   esi,DWORD PTR [ebx+0x6acfc49e],0x46
  41c021:	xchg   esi,eax
  41c022:	jmp    0xe4236a39
  41c027:	add    al,0x75
  41c029:	lods   eax,DWORD PTR ds:[esi]
  41c02a:	std    
  41c02b:	out    dx,eax
  41c02c:	and    ah,cl
  41c02e:	sahf   
  41c02f:	leave  
  41c030:	jp     0x41bff5
  41c032:	imul   esp,DWORD PTR cs:[edx-0x3c],0x72
  41c037:	mov    WORD PTR [edi+0x48011706],cs
  41c03d:	shl    BYTE PTR [eax],cl
  41c03f:	or     al,0xe8
  41c041:	jg     0x41c04b
  41c043:	test   al,0x85
  41c045:	or     eax,0xadb3638b
  41c04a:	into   
  41c04b:	sbb    BYTE PTR [ebp+0x40],al
  41c04e:	lds    ecx,FWORD PTR [ebx-0x6a191461]
  41c054:	or     BYTE PTR [edx+edi*8+0x54],bh
  41c058:	push   edx
  41c059:	sbb    BYTE PTR [eax-0x6b],cl
  41c05c:	jnp    0x41bff7
  41c05e:	pusha  
  41c05f:	xor    BYTE PTR [ecx+0x340cc3a2],0x0
  41c066:	mov    al,ds:0xc120f66d
  41c06b:	popa   
  41c06c:	outs   dx,DWORD PTR ds:[esi]
  41c06d:	dec    ebp
  41c06e:	inc    ebp
  41c06f:	ret    
  41c070:	out    dx,al
  41c071:	push   cs
  41c072:	std    
  41c073:	jg     0x41c0dd
  41c075:	aad    0x8a
  41c077:	test   bh,0x1b
  41c07a:	(bad)  [eax-0x2b]
  41c07d:	int3   
  41c07e:	mov    esp,0x1e0f0599
  41c083:	loop   0x41c035
  41c085:	or     ebx,DWORD PTR [edx-0x4a72c196]
  41c08b:	mov    cl,0x24
  41c08d:	and    eax,0x8930aea
  41c092:	cmp    ah,BYTE PTR [esi+eiz*4-0x72e4d262]
  41c099:	(bad)  
  41c09b:	mov    eax,ds:0x430004de
  41c0a0:	fild   WORD PTR ds:0x1fa4ecc1
  41c0a6:	enter  0x8b6d,0xe5
  41c0aa:	adc    DWORD PTR [ebx-0x67],ebp
  41c0ad:	mov    esi,0xb7e471cf
  41c0b2:	push   0x62a4925f
  41c0b7:	pop    es
  41c0b8:	pop    esi
  41c0b9:	xchg   ebx,eax
  41c0ba:	ds pop ss
  41c0bc:	or     eax,0x39392faa
  41c0c1:	dec    ecx
  41c0c2:	leave  
  41c0c3:	popf   
  41c0c4:	add    edx,edi
  41c0c6:	ins    BYTE PTR es:[edi],dx
  41c0c7:	jnp    0x41c09f
  41c0c9:	call   0xa401:0xc646b412
  41c0d0:	ja     0x41c079
  41c0d2:	(bad)  
  41c0d3:	outs   dx,DWORD PTR ds:[esi]
  41c0d4:	inc    esp
  41c0d5:	imul   ebx,DWORD PTR ds:0xe8e52595,0xce077363
  41c0df:	mov    ah,0x77
  41c0e1:	addr16 loop 0x41c06e
  41c0e4:	adc    DWORD PTR [ebp+0x49],edx
  41c0e7:	popa   
  41c0e8:	xchg   ebx,eax
  41c0e9:	mov    ecx,ss
  41c0eb:	pop    esp
  41c0ec:	daa    
  41c0ed:	mov    edx,0x35b5898a
  41c0f2:	call   0xe95dadbf
  41c0f7:	pop    esi
  41c0f8:	jmp    0x7cce:0x9b51e8fb
  41c0ff:	out    dx,al
  41c100:	jb     0x41c0c5
  41c102:	or     al,BYTE PTR [esi-0xe77ddc8]
  41c108:	(bad)  
  41c109:	cmp    esp,DWORD PTR [ecx+0x59]
  41c10c:	js     0x41c094
  41c10e:	ss jmp 0x41c114
  41c111:	cmp    al,0xc5
  41c113:	repz scas al,BYTE PTR es:[edi]
  41c115:	(bad)  
  41c116:	jnp    0x41c0f5
  41c118:	add    esi,DWORD PTR [ebp-0x35]
  41c11b:	out    dx,al
  41c11c:	loopne 0x41c114
  41c11e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c11f:	mov    dl,0x18
  41c121:	sbb    ecx,DWORD PTR [edx-0x47]
  41c124:	aad    0x16
  41c126:	aas    
  41c127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c128:	(bad)  
  41c129:	(bad)  
  41c12a:	call   0xd67d:0x44455ba2
  41c131:	and    DWORD PTR [ebp-0x70efb1b0],edi
  41c137:	xor    DWORD PTR [ebx-0x35],0x36
  41c13b:	enter  0x490d,0x53
  41c13f:	dec    eax
  41c140:	push   ebx
  41c141:	mov    esp,0xcfed215d
  41c146:	faddp  st(6),st
  41c148:	cld    
  41c149:	call   0xe6e4:0x2613c2d
  41c150:	jmp    FWORD PTR [ebx]
  41c152:	xchg   edx,eax
  41c153:	or     ebp,ecx
  41c155:	jmp    0xec4fc4b7
  41c15a:	stos   BYTE PTR es:[edi],al
  41c15b:	jbe    0x41c1c6
  41c15d:	cmp    dl,BYTE PTR [esi]
  41c15f:	mov    esi,es
  41c161:	call   FWORD PTR [eax-0x3338f3e4]
  41c167:	mov    cl,0xba
  41c16a:	shr    BYTE PTR [esi+0x27],1
  41c16d:	mov    ah,0x52
  41c16f:	test   eax,0xff39c5fe
  41c174:	push   es
  41c175:	pop    ds
  41c176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c177:	sub    edx,DWORD PTR [ebx+0x57]
  41c17a:	test   al,0x74
  41c17c:	call   0xdc0178df
  41c181:	add    al,0xea
  41c183:	mov    dl,0x57
  41c185:	aas    
  41c186:	lahf   
  41c187:	scas   eax,DWORD PTR es:[edi]
  41c188:	loope  0x41c1e1
  41c18a:	fnsave [ebp-0x4d]
  41c18d:	pop    ecx
  41c18e:	lahf   
  41c18f:	cmp    bh,BYTE PTR [esi]
  41c191:	inc    ecx
  41c192:	aam    0xf9
  41c194:	dec    ebx
  41c195:	jmp    0x879795cd
  41c19a:	retf   
  41c19b:	aaa    
  41c19c:	mov    dh,0xe0
  41c19e:	or     eax,0xdb86823c
  41c1a3:	ja     0x41c1bd
  41c1a5:	int3   
  41c1a6:	add    DWORD PTR [ebx+0x67751f55],esp
  41c1ac:	xor    BYTE PTR [eax],cl
  41c1ae:	xor    eax,0x9e81527a
  41c1b3:	call   0xc58b7b75
  41c1b8:	shl    eax,1
  41c1ba:	and    eax,0x848282df
  41c1bf:	mov    ecx,0xbea4156c
  41c1c4:	and    eax,0x626c75c
  41c1c9:	mov    edx,0x45c1391d
  41c1ce:	in     eax,0x94
  41c1d0:	ins    BYTE PTR es:[edi],dx
  41c1d1:	and    al,0x9c
  41c1d3:	or     al,0x87
  41c1d5:	push   edi
  41c1d6:	pop    ecx
  41c1d7:	dec    edi
  41c1d8:	mov    edx,0xbbd4b2f4
  41c1dd:	push   esi
  41c1de:	and    DWORD PTR [esi],0x486a2fb4
  41c1e4:	xchg   ebp,eax
  41c1e5:	and    al,0x29
  41c1e7:	mov    eax,0xfcee68de
  41c1ec:	call   0x71e77904
  41c1f1:	sbb    BYTE PTR [edi],dh
  41c1f3:	xchg   ecx,eax
  41c1f4:	add    eax,0x848ce317
  41c1f9:	cli    
  41c1fa:	int3   
  41c1fb:	rcr    DWORD PTR [ebp-0x5abee75c],1
  41c201:	mov    bl,0x58
  41c203:	aaa    
  41c204:	(bad)  
  41c205:	sbb    eax,ebx
  41c207:	sbb    DWORD PTR [ebp-0x7b],0x59597bfc
  41c20e:	or     al,BYTE PTR [ecx-0xe]
  41c211:	push   ebx
  41c212:	or     edx,0xffffffa3
  41c215:	lods   al,BYTE PTR cs:[esi]
  41c217:	mov    bh,0xf2
  41c219:	(bad)  
  41c21a:	aas    
  41c21b:	scas   al,BYTE PTR es:[edi]
  41c21c:	and    ah,BYTE PTR [edi+0x1f3fd76e]
  41c222:	push   es
  41c223:	ret    
  41c224:	ret    0x7628
  41c227:	add    al,0x3c
  41c229:	fiadd  WORD PTR [eax]
  41c22b:	dec    ah
  41c22d:	outs   dx,BYTE PTR ds:[esi]
  41c22e:	in     eax,dx
  41c22f:	test   DWORD PTR [esi+0x37],eax
  41c232:	or     dl,ch
  41c234:	sti    
  41c235:	xchg   edx,eax
  41c236:	mov    ebp,DWORD PTR [ebx-0x5ab9a28d]
  41c23c:	xor    eax,0x8adb4bd
  41c241:	les    ecx,FWORD PTR [eax]
  41c243:	sub    BYTE PTR [esi+0x223b195b],bl
  41c249:	fcomp  DWORD PTR [eax-0x30]
  41c24c:	add    ch,BYTE PTR [ebx-0x2d331c7b]
  41c252:	outs   dx,BYTE PTR ds:[esi]
  41c253:	jae    0x41c256
  41c255:	mov    DWORD PTR [edx-0x75e62ba],0xdf2bbe73
  41c25f:	(bad)  
  41c260:	aas    
  41c261:	loop   0x41c238
  41c263:	xor    DWORD PTR [ebx],ecx
  41c265:	popf   
  41c266:	rcr    BYTE PTR ds:0x6aabe7db,0xef
  41c26d:	mov    edx,0x295a168d
  41c272:	imul   ebp,DWORD PTR [ebp+0x9],0x68112936
  41c279:	and    BYTE PTR [edx-0x6b89830d],al
  41c27f:	cmp    ch,ah
  41c281:	lea    ecx,[ebx]
  41c283:	imul   ecx,DWORD PTR [ebp-0x13],0xffffffae
  41c287:	adc    bh,ah
  41c289:	jbe    0x41c269
  41c28b:	or     BYTE PTR [edi-0x4477643e],0xec
  41c292:	repz loopne 0x41c2ec
  41c295:	push   edx
  41c296:	cmp    ebx,ebx
  41c298:	loop   0x41c2e8
  41c29a:	out    dx,al
  41c29b:	xchg   esp,eax
  41c29c:	sub    al,BYTE PTR [esi+0xc]
  41c29f:	test   BYTE PTR ds:0xa23d6a64,ah
  41c2a5:	mov    bl,0x23
  41c2a7:	mov    eax,ds
  41c2a9:	inc    eax
  41c2aa:	cli    
  41c2ab:	pop    ds
  41c2ac:	jmp    0xe694ac6
  41c2b1:	push   eax
  41c2b2:	mov    edx,0x1a5b96e7
  41c2b7:	push   0x69
  41c2b9:	or     al,0xe4
  41c2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2bc:	popf   
  41c2bd:	icebp  
  41c2be:	push   cs
  41c2bf:	fcomp  st(0)
  41c2c1:	add    eax,0x802ded8d
  41c2c6:	jo     0x41c2cc
  41c2c8:	xchg   DWORD PTR [ecx],eax
  41c2ca:	clc    
  41c2cb:	xchg   esi,eax
  41c2cc:	push   0x1c824f3
  41c2d1:	ror    DWORD PTR [edx+eiz*4+0x2d],cl
  41c2d5:	or     BYTE PTR [ebp-0x480680af],0x7f
  41c2dc:	add    ah,BYTE PTR [ecx+0x5b]
  41c2df:	inc    eax
  41c2e0:	(bad)  
  41c2e1:	xchg   edx,eax
  41c2e2:	and    ch,BYTE PTR [esi+0xb]
  41c2e5:	iret   
  41c2e6:	lea    esi,[eax+0x43]
  41c2e9:	sub    BYTE PTR [esp+ecx*4+0x8b4e075],cl
  41c2f0:	mov    bl,0xa0
  41c2f2:	hlt    
  41c2f3:	mov    ds:0x5eebb266,eax
  41c2f8:	dec    ecx
  41c2f9:	mov    edi,DWORD PTR [edi+ebp*2-0x7f94654]
  41c300:	jne    0x41c2df
  41c302:	mov    dl,0x32
  41c304:	aam    0x4c
  41c306:	fnstsw ax
  41c308:	mov    eax,ds:0x176cf9fc
  41c30d:	push   esp
  41c30e:	and    BYTE PTR [ebx+0x460d6e71],al
  41c314:	pop    eax
  41c315:	mov    ch,0x23
  41c317:	dec    ecx
  41c318:	sbb    dh,BYTE PTR [eax+edx*1+0x7c77a9d2]
  41c31f:	pop    ecx
  41c320:	enter  0x790c,0x39
  41c324:	push   ecx
  41c325:	mov    dh,0x24
  41c327:	inc    eax
  41c328:	loope  0x41c2d8
  41c32a:	cs out dx,al
  41c32c:	fxam   
  41c32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c32f:	pop    esi
  41c330:	shr    DWORD PTR [edi],0x5f
  41c333:	xchg   ecx,eax
  41c334:	aas    
  41c335:	mov    ds:0x7e0fd408,eax
  41c33a:	shl    esi,cl
  41c33c:	ret    
  41c33d:	inc    eax
  41c33e:	fadd   DWORD PTR [ecx-0x52]
  41c341:	inc    ebx
  41c342:	mov    ds:0x1b6f2277,al
  41c347:	fild   QWORD PTR [edx]
  41c349:	push   ss
  41c34a:	pop    ss
  41c34b:	jno    0x41c383
  41c34d:	mov    esp,0xe1b971bf
  41c352:	aas    
  41c353:	repz add eax,0xfd06dd1b
  41c359:	jne    0x41c3d7
  41c35b:	and    DWORD PTR [esi+0x41d58cd8],ebp
  41c361:	push   edi
  41c362:	dec    ebp
  41c363:	add    ebp,DWORD PTR [edi+0x43277b13]
  41c369:	test   DWORD PTR [eax+0x441f9f54],ebx
  41c36f:	mov    ebp,ebp
  41c371:	mov    edi,0x2af8ebe2
  41c376:	lds    esp,FWORD PTR [ecx-0x654873d1]
  41c37c:	jae    0x41c3de
  41c37e:	aaa    
  41c37f:	je     0x41c3fd
  41c381:	pop    edx
  41c382:	xor    DWORD PTR [ecx-0x21],0xb7b224dd
  41c389:	jle    0x41c32a
  41c38b:	in     al,0xcd
  41c38d:	ftst   
  41c38f:	adc    al,0xb2
  41c391:	mov    ecx,0xce65c1c3
  41c396:	sbb    eax,0x7d07f508
  41c39b:	and    eax,0xe75c6cd1
  41c3a0:	lea    esp,ds:0x6b80
  41c3a5:	mov    dl,BYTE PTR [edx+0x68]
  41c3a8:	cs pushf 
  41c3aa:	aaa    
  41c3ab:	mov    edx,0xb5e5f79b
  41c3b0:	std    
  41c3b1:	stos   BYTE PTR es:[edi],al
  41c3b2:	(bad)  
  41c3b3:	pop    ebp
  41c3b4:	fucomip st,st(2)
  41c3b6:	mov    cl,0x1f
  41c3b8:	pusha  
  41c3b9:	cdq    
  41c3ba:	mov    ecx,0xf48e8cb6
  41c3bf:	xchg   ebp,eax
  41c3c0:	out    dx,eax
  41c3c1:	sbb    ebp,0xffffffc8
  41c3c4:	sar    BYTE PTR [edi],0xe8
  41c3c7:	cmp    ebx,DWORD PTR [edx]
  41c3c9:	rcr    DWORD PTR [edx-0x2189e9dd],1
  41c3cf:	stos   DWORD PTR es:[edi],eax
  41c3d0:	sub    eax,0x46c6d683
  41c3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3d6:	adc    eax,0x34a03ba1
  41c3db:	pop    es
  41c3dc:	xchg   edi,eax
  41c3dd:	in     al,0x4
  41c3df:	ins    DWORD PTR es:[edi],dx
  41c3e0:	xchg   esp,eax
  41c3e1:	or     BYTE PTR [ebx+0x2b],0xa5
  41c3e5:	pop    ebp
  41c3e6:	cmp    DWORD PTR [esp+edx*4+0x3f],eax
  41c3ea:	jnp    0x41c3a1
  41c3ec:	stos   BYTE PTR es:[edi],al
  41c3ed:	and    al,0x1f
  41c3ef:	adc    BYTE PTR [esi],ah
  41c3f1:	add    eax,0xb632eceb
  41c3f6:	cmp    ah,bh
  41c3f8:	add    edi,ebp
  41c3fa:	(bad)  
  41c3fc:	mov    edi,0x745d8fe9
  41c401:	xchg   edx,eax
  41c402:	and    eax,0x3cf51b2a
  41c407:	add    DWORD PTR [eax],eax
  41c409:	clc    
  41c40a:	add    al,0x0
  41c40c:	add    BYTE PTR [ebx-0x2f],dl
  41c40f:	xchg   edi,eax
  41c410:	jmp    0x28ab:0xfdbb764d
  41c417:	lods   al,BYTE PTR ds:[esi]
  41c418:	or     eax,0xcba93ced
  41c41d:	sub    bh,BYTE PTR [ecx+0x25a65c9e]
  41c423:	(bad)  
  41c424:	clc    
  41c425:	pusha  
  41c426:	cld    
  41c427:	jo     0x41c3f9
  41c429:	add    cl,ch
  41c42b:	jecxz  0x41c400
  41c42d:	lods   al,BYTE PTR ds:[esi]
  41c42e:	rcl    DWORD PTR [ebx],1
  41c430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c431:	ja     0x41c47a
  41c433:	mov    bl,dh
  41c435:	outs   dx,BYTE PTR ds:[esi]
  41c436:	stos   BYTE PTR es:[edi],al
  41c437:	inc    edx
  41c438:	xor    bl,al
  41c43a:	push   0xaedee3e7
  41c43f:	sub    dh,BYTE PTR [esi]
  41c441:	(bad)  
  41c442:	jl     0x41c4ac
  41c444:	std    
  41c445:	jmp    0x2528:0x2534394d
  41c44c:	leave  
  41c44d:	(bad)  
  41c44e:	pusha  
  41c44f:	rol    BYTE PTR [ebx+0x1e297cd3],cl
  41c455:	and    BYTE PTR [esi-0x6d808a44],al
  41c45b:	(bad)  
  41c45c:	loopne 0x41c438
  41c45e:	(bad)  
  41c45f:	adc    eax,0x6839c9c7
  41c464:	inc    edi
  41c465:	xor    eax,0x712331ba
  41c46a:	out    dx,al
  41c46b:	mov    ?,WORD PTR [ebx-0x7dcceca9]
  41c471:	cmp    ecx,DWORD PTR [edx-0x4b4bfd05]
  41c477:	jl     0x41c400
  41c479:	xor    al,0x2
  41c47b:	imul   edx,ebx,0x2ac54ded
  41c481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c482:	jno    0x41c470
  41c484:	outs   dx,DWORD PTR ds:[esi]
  41c485:	cld    
  41c486:	mov    cs,WORD PTR [esi]
  41c488:	out    0x4f,eax
  41c48a:	bound  esp,QWORD PTR [ebx]
  41c48c:	sbb    DWORD PTR [edx-0x63],ebx
  41c48f:	mov    cl,0xe9
  41c491:	mov    al,0x45
  41c493:	int3   
  41c494:	aas    
  41c495:	clc    
  41c496:	mov    ah,0x5c
  41c498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c499:	daa    
  41c49a:	sub    BYTE PTR [esi],0x48
  41c49d:	or     eax,0x9f51c515
  41c4a2:	mov    al,ds:0x73521789
  41c4a7:	mov    ecx,DWORD PTR [esi+0x2b719a18]
  41c4ad:	(bad)  
  41c4af:	ds or  edx,0xda0cf082
  41c4b6:	gs mov bh,0x83
  41c4b9:	pop    eax
  41c4ba:	dec    esp
  41c4bb:	inc    eax
  41c4bc:	adc    ebp,edi
  41c4be:	adc    al,0xfd
  41c4c0:	repz mov ebp,0xf3065f0a
  41c4c6:	fstp   QWORD PTR [ebx+0x7e]
  41c4c9:	pop    esp
  41c4ca:	inc    edi
  41c4cb:	cwde   
  41c4cc:	inc    ecx
  41c4cd:	loope  0x41c530
  41c4cf:	scas   eax,DWORD PTR es:[edi]
  41c4d0:	clc    
  41c4d1:	enter  0x9968,0xa
  41c4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d6:	enter  0x3477,0x4e
  41c4da:	(bad)  [edi-0x71194ef8]
  41c4e0:	out    0x9d,al
  41c4e2:	test   ecx,edx
  41c4e4:	test   BYTE PTR [ecx-0x6b801613],0x6e
  41c4eb:	retf   
  41c4ec:	out    0x1c,eax
  41c4ee:	adc    esi,DWORD PTR [edx+0x3e55f409]
  41c4f4:	fild   WORD PTR [ecx]
  41c4f6:	leave  
  41c4f7:	xor    al,0x17
  41c4f9:	push   ds
  41c4fa:	test   al,0x5d
  41c4fc:	mov    bl,0xe0
  41c4fe:	add    eax,0xa589c371
  41c503:	cli    
  41c504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c505:	jns    0x41c4a2
  41c507:	or     eax,ecx
  41c509:	xor    esp,ebp
  41c50b:	das    
  41c50c:	jne    0x41c54c
  41c50e:	mov    bh,0x75
  41c510:	xor    esp,DWORD PTR [edi+0x3e]
  41c513:	sub    eax,0x947eecd6
  41c518:	dec    ecx
  41c519:	fadd   DWORD PTR [ecx+eiz*1]
  41c51c:	repnz ror DWORD PTR [edx],cl
  41c51f:	rcl    DWORD PTR ds:0xa31f13b6,cl
  41c525:	out    dx,al
  41c526:	les    edi,FWORD PTR [ecx]
  41c528:	iret   
  41c529:	mov    DWORD PTR [ebp+0x3e],ecx
  41c52c:	addr16 jge 0x41c5ab
  41c52f:	mov    dl,0x77
  41c531:	fst    st(6)
  41c533:	adc    BYTE PTR [eax-0x2],bh
  41c536:	jg     0x41c54e
  41c538:	cmc    
  41c539:	and    BYTE PTR [edx+0x7d],ah
  41c53c:	ror    BYTE PTR [esi-0x70],cl
  41c53f:	(bad)  
  41c540:	hlt    
  41c541:	jno    0x41c4f9
  41c543:	xchg   BYTE PTR [ebx-0x10e49e0],ah
  41c549:	es jb  0x41c4d7
  41c54c:	test   BYTE PTR [eax-0x76012922],bl
  41c552:	scas   al,BYTE PTR es:[edi]
  41c553:	les    ebp,FWORD PTR [eax+0x1c]
  41c556:	out    dx,al
  41c557:	cmp    DWORD PTR [edi+0x4c1a5785],edx
  41c55d:	aad    0x87
  41c55f:	lods   al,BYTE PTR ds:[esi]
  41c560:	(bad)  
  41c562:	and    ebp,DWORD PTR [edi+ecx*1+0x6a]
  41c566:	mov    ch,bh
  41c568:	add    BYTE PTR [edx+0x58],ch
  41c56b:	inc    ebp
  41c56c:	add    eax,0x30fd3084
  41c571:	xchg   edi,eax
  41c572:	pop    ebx
  41c573:	adc    BYTE PTR [ecx],0xd3
  41c576:	call   0xb18dca5b
  41c57b:	cmp    ebp,esi
  41c57d:	rcr    BYTE PTR [edi],cl
  41c57f:	jbe    0x41c5e9
  41c581:	ja     0x41c5a8
  41c583:	rcr    BYTE PTR [eax+0x5fa76f32],cl
  41c589:	mov    ebx,0x5d5903f4
  41c58e:	xor    bl,BYTE PTR [eax-0x30]
  41c591:	in     al,0x55
  41c593:	add    BYTE PTR ss:[edx+0x47c82902],al
  41c59a:	dec    edi
  41c59b:	pop    ebp
  41c59c:	mov    WORD PTR [ebx],gs
  41c59e:	pop    ss
  41c59f:	jae    0x41c567
  41c5a1:	ins    DWORD PTR es:[edi],dx
  41c5a2:	int3   
  41c5a3:	dec    ecx
  41c5a4:	inc    eax
  41c5a5:	bnd je 0x41c55d
  41c5a8:	adc    al,0x78
  41c5aa:	sar    BYTE PTR [eax+0x1],cl
  41c5ad:	outs   dx,DWORD PTR ds:[esi]
  41c5ae:	call   0x8b40:0xf987ba0c
  41c5b5:	(bad)  
  41c5b6:	sub    ebx,DWORD PTR ds:0x9b6c5d38
  41c5bc:	in     al,dx
  41c5bd:	repz leave 
  41c5bf:	inc    edi
  41c5c0:	add    BYTE PTR [ebp-0xe],al
  41c5c3:	sub    al,0x7
  41c5c5:	inc    eax
  41c5c6:	push   ss
  41c5c7:	and    dh,BYTE PTR [ecx]
  41c5c9:	mov    dl,0xf8
  41c5cb:	pop    eax
  41c5cc:	in     al,dx
  41c5cd:	dec    ebp
  41c5ce:	jp     0x41c5d4
  41c5d0:	mov    esi,0x5519d812
  41c5d5:	mov    ecx,0xd570bc9f
  41c5da:	or     DWORD PTR [ecx+0x5f],ecx
  41c5dd:	inc    ebx
  41c5de:	mov    esi,0x91489e01
  41c5e3:	adc    al,0x9c
  41c5e5:	loopne 0x41c5e8
  41c5e7:	inc    esi
  41c5e8:	pop    ebp
  41c5e9:	inc    ebp
  41c5ea:	sbb    bl,BYTE PTR [edi-0x4b983b52]
  41c5f0:	retf   0x410
  41c5f3:	add    edx,DWORD PTR [esp+eax*8]
  41c5f6:	test   al,0xc3
  41c5f8:	test   ecx,0xf76b11be
  41c5fe:	dec    esp
  41c5ff:	nop
  41c600:	out    dx,al
  41c601:	mov    edx,0xd37b080f
  41c606:	jb     0x41c596
  41c608:	mov    WORD PTR [edi],ss
  41c60a:	inc    eax
  41c60b:	outs   dx,DWORD PTR ds:[esi]
  41c60c:	sbb    DWORD PTR [edi+0xd],0x11
  41c610:	fst    DWORD PTR [esi+edx*8+0x44]
  41c614:	dec    ecx
  41c615:	jbe    0x41c64c
  41c617:	inc    edi
  41c618:	add    al,dl
  41c61a:	or     BYTE PTR [ebx-0x39],ah
  41c61d:	lds    esp,FWORD PTR es:[ebx+0x29d55e86]
  41c624:	ficom  WORD PTR [edi]
  41c626:	push   cs
  41c627:	outs   dx,DWORD PTR ds:[esi]
  41c628:	enter  0xd5e6,0x44
  41c62c:	push   edi
  41c62d:	jbe    0x41c6a7
  41c62f:	(bad)  
  41c630:	mov    esi,0x5e09c052
  41c635:	xchg   edi,eax
  41c636:	xchg   BYTE PTR [edi+ecx*2+0x6465c20d],bh
  41c63d:	xor    dh,bh
  41c63f:	stos   DWORD PTR es:[edi],eax
  41c640:	bound  ebp,QWORD PTR [esi+0x76]
  41c643:	enter  0xd9b8,0x1a
  41c647:	add    BYTE PTR [eax],bl
  41c649:	cmp    ebx,DWORD PTR [ebx-0x41]
  41c64c:	or     BYTE PTR [esi+0x5e],ah
  41c64f:	adc    eax,0xf1ab9365
  41c654:	pop    ds
  41c655:	es aam 0x71
  41c658:	rol    bl,cl
  41c65a:	cmp    DWORD PTR [ebx],ebx
  41c65c:	push   esp
  41c65d:	xor    BYTE PTR [ebp+0x3c8979a],ah
  41c663:	fiadd  DWORD PTR [edi+0x7400ff00]
  41c669:	cmp    edx,0xc2ac861e
  41c66f:	inc    esi
  41c670:	aad    0x72
  41c672:	mov    WORD PTR [ecx-0x4ffd2506],gs
  41c678:	jmp    0x41c6b2
  41c67a:	pop    esi
  41c67b:	jnp    0x41c69f
  41c67d:	cmp    eax,0x7dea90fb
  41c682:	std    
  41c683:	(bad)  
  41c684:	mov    ah,0x6b
  41c686:	sbb    cl,BYTE PTR [edx-0x3c4c8e26]
  41c68c:	(bad)  
  41c68d:	pushf  
  41c68e:	lock mov esp,0x15466a33
  41c694:	out    0x4b,eax
  41c696:	cmc    
  41c697:	xor    ebx,DWORD PTR [esi+0x39e47cb1]
  41c69d:	mov    eax,ds:0xae3b4ed0
  41c6a2:	daa    
  41c6a3:	push   ds
  41c6a4:	pop    ecx
  41c6a5:	adc    cl,BYTE PTR [edx]
  41c6a7:	mov    bl,0xeb
  41c6a9:	sar    DWORD PTR [eax],1
  41c6ab:	mov    BYTE PTR [ebp-0x68f35bc],ch
  41c6b1:	jge    0x41c713
  41c6b3:	stos   BYTE PTR es:[edi],al
  41c6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6b5:	out    0xd3,eax
  41c6b7:	(bad)  
  41c6b8:	fucomip st,st(5)
  41c6ba:	push   edx
  41c6bb:	mov    ecx,0x1b588cbb
  41c6c0:	xor    DWORD PTR [eax+edx*2-0x48],ebx
  41c6c4:	ret    
  41c6c5:	adc    eax,0x466f2ab
  41c6ca:	push   es
  41c6cb:	sub    esi,DWORD PTR [edx-0x2dc760f6]
  41c6d1:	outs   dx,DWORD PTR ds:[esi]
  41c6d2:	push   esi
  41c6d3:	xchg   edx,eax
  41c6d4:	jo     0x41c731
  41c6d6:	push   0x75
  41c6d8:	jae    0x41c669
  41c6da:	and    al,BYTE PTR [edi]
  41c6dc:	push   ecx
  41c6dd:	pop    ds
  41c6de:	test   eax,0x5b891f9d
  41c6e3:	mov    esp,0xc3b8f95d
  41c6e8:	and    dh,BYTE PTR [ecx+0x34]
  41c6eb:	jae    0x41c6b6
  41c6ed:	js     0x41c769
  41c6ef:	jp     0x41c710
  41c6f1:	dec    esp
  41c6f2:	and    eax,0x4283f45a
  41c6f7:	cmp    esi,DWORD PTR [ebp+0x5d38b76d]
  41c6fd:	push   ecx
  41c6fe:	test   DWORD PTR [edi-0x4390d51a],ecx
  41c704:	add    cl,BYTE PTR [ebx-0x39]
  41c707:	out    0x75,eax
  41c709:	fwait
  41c70a:	mov    ah,BYTE PTR [ebx-0x4c3f7f7c]
  41c710:	lods   eax,DWORD PTR ds:[esi]
  41c711:	mov    DWORD PTR [edx-0x7c37e37b],edi
  41c717:	nop
  41c718:	or     BYTE PTR [ecx-0x47963dc1],dh
  41c71e:	mov    ecx,0xdaf9d070
  41c723:	push   esp
  41c724:	mov    dx,0x234
  41c728:	push   ds
  41c729:	jo     0x41c7aa
  41c72b:	ja     0x41c724
  41c72d:	mov    WORD PTR [eax-0x6cafa82c],cs
  41c733:	iret   
  41c734:	lea    ebp,[ebp+ecx*8-0x4]
  41c738:	jne    0x41c6bb
  41c73a:	hlt    
  41c73b:	imul   ebx,ebp,0xffffffe6
  41c73e:	enter  0x4099,0xdf
  41c742:	mov    esi,DWORD PTR [edx+0x52]
  41c745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c746:	stc    
  41c747:	add    eax,0x25fe59ef
  41c74c:	(bad)  {k5}
  41c751:	outs   dx,BYTE PTR ds:[esi]
  41c752:	cmp    DWORD PTR [esi],esp
  41c754:	lea    edx,[ebx+eax*1-0x3b51a224]
  41c75b:	xor    al,0x21
  41c75d:	mov    DWORD PTR [ebx-0x14cb1c0a],esp
  41c763:	push   es
  41c764:	adc    DWORD PTR [ebp+0x4bcb65ca],0x5602904a
  41c76e:	rol    ch,1
  41c770:	jae    0x41c79c
  41c772:	pushf  
  41c773:	shr    BYTE PTR [esp+ebx*2-0x63],0x56
  41c778:	xchg   DWORD PTR [esp+eax*8+0x57],ecx
  41c77c:	ret    0xebc6
  41c77f:	xchg   esi,eax
  41c780:	leave  
  41c781:	(bad)  
  41c782:	lock xchg esi,eax
  41c784:	mov    cl,0xda
  41c786:	daa    
  41c787:	aaa    
  41c788:	xchg   DWORD PTR [esi-0x26a606bf],esi
  41c78e:	push   ecx
  41c78f:	add    edi,ecx
  41c791:	or     eax,DWORD PTR [edi]
  41c793:	jle    0x41c7d7
  41c795:	cmp    eax,DWORD PTR [edi+0x76]
  41c798:	xor    BYTE PTR [edi-0xb],0x71
  41c79c:	dec    ebp
  41c79d:	into   
  41c79e:	test   BYTE PTR [ebx+ebx*8],cl
  41c7a1:	jbe    0x41c7eb
  41c7a3:	sti    
  41c7a4:	jmp    0xc6af91ba
  41c7a9:	adc    dl,BYTE PTR [ebx+eax*1+0xad2cafc]
  41c7b0:	xor    DWORD PTR [bp+0x5a],ebx
  41c7b4:	inc    ebx
  41c7b5:	or     edi,DWORD PTR [ebp+0x47]
  41c7b8:	dec    ebx
  41c7b9:	pop    esi
  41c7ba:	daa    
  41c7bb:	bound  esi,QWORD PTR [edi+0x398a8b7d]
  41c7c1:	pop    esi
  41c7c2:	mov    ds:0x475ba20b,eax
  41c7c7:	or     al,0x7b
  41c7c9:	popa   
  41c7ca:	adc    DWORD PTR [esi-0x41],edi
  41c7cd:	dec    esi
  41c7ce:	xor    eax,0x44fd2173
  41c7d3:	jmp    0xad61:0x9ddf0f94
  41c7da:	arpl   WORD PTR [ebx],bx
  41c7dc:	pop    ebx
  41c7dd:	mov    dh,0x24
  41c7df:	add    bl,dl
  41c7e1:	dec    ecx
  41c7e2:	mov    ecx,0x76307c35
  41c7e7:	das    
  41c7e8:	dec    esp
  41c7e9:	cmp    BYTE PTR [ebp+edi*4-0x61],ah
  41c7ed:	jb     0x41c796
  41c7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7f0:	add    al,BYTE PTR [ecx]
  41c7f2:	cwde   
  41c7f3:	sub    BYTE PTR [edi],0x79
  41c7f6:	fsubr  DWORD PTR [esi+ecx*4+0x85cbbbd]
  41c7fd:	jae    0x41c78d
  41c7ff:	aad    0x83
  41c801:	pop    ds
  41c802:	shl    esi,0xe9
  41c805:	and    al,0xc5
  41c807:	mov    ecx,0xd5face94
  41c80c:	xlat   BYTE PTR ds:[ebx]
  41c80d:	out    dx,eax
  41c80e:	ds pop ebp
  41c810:	mov    esi,0x57bb1076
  41c815:	push   0xc9d44bdd
  41c81a:	in     eax,dx
  41c81b:	inc    edi
  41c81c:	cmp    eax,DWORD PTR [eax-0x519539c4]
  41c822:	fcomp  DWORD PTR [ecx]
  41c824:	and    cl,BYTE PTR [esp+eax*8]
  41c827:	out    0xfe,eax
  41c829:	jecxz  0x41c7ab
  41c82b:	adc    al,0xfd
  41c82d:	dec    esi
  41c82e:	pop    edi
  41c82f:	mov    BYTE PTR [ebp-0x6657e150],ch
  41c835:	fisub  WORD PTR [esi+0x6a50b4b5]
  41c83b:	pop    ds
  41c83c:	xchg   esp,eax
  41c83d:	pop    cx
  41c83f:	push   0xcd44ecf3
  41c844:	xor    ecx,DWORD PTR [ebx+0x63fcbed2]
  41c84a:	push   edx
  41c84b:	retf   
  41c84c:	ss pop esi
  41c84e:	pushf  
  41c84f:	leave  
  41c850:	dec    ecx
  41c851:	lds    esp,FWORD PTR [eax]
  41c853:	mov    ds:0xf0474b6f,al
  41c858:	or     al,0x13
  41c85a:	in     eax,dx
  41c85b:	pop    esp
  41c85c:	pusha  
  41c85d:	rcl    DWORD PTR [ebp+0x5c5e2ccc],1
  41c863:	inc    esp
  41c864:	test   eax,0xe8a451c4
  41c869:	mov    ecx,ss
  41c86b:	jno    0x41c812
  41c86d:	xchg   BYTE PTR [ebx],cl
  41c86f:	aad    0xf7
  41c871:	push   esi
  41c872:	mov    ecx,0x4ad8aa0
  41c877:	pop    edi
  41c878:	scas   eax,DWORD PTR es:[edi]
  41c879:	jle    0x41c892
  41c87b:	lds    ecx,FWORD PTR [edx+eiz*2]
  41c87e:	dec    ecx
  41c87f:	data16 and dh,dh
  41c882:	mov    al,0x37
  41c884:	ficom  DWORD PTR [esi-0x77]
  41c887:	push   esi
  41c888:	or     al,0x73
  41c88a:	mov    ebx,esp
  41c88c:	push   edx
  41c88d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c88e:	jns    0x41c8e0
  41c890:	es add al,0xdf
  41c893:	rep stos BYTE PTR es:[edi],al
  41c895:	xchg   BYTE PTR [ebp+esi*4-0x76e1ec06],bh
  41c89c:	adc    al,BYTE PTR [ebp+0x29d96028]
  41c8a2:	jno    0x41c87b
  41c8a4:	mov    al,BYTE PTR [edi]
  41c8a6:	test   BYTE PTR ds:0xfc781eb3,0x6c
  41c8ad:	mov    ebp,ebp
  41c8af:	(bad)  
  41c8b1:	fsubr  st,st(6)
  41c8b3:	sub    eax,0x3e7cbdfd
  41c8b8:	inc    edx
  41c8b9:	sub    ah,ch
  41c8bb:	push   ds
  41c8bc:	pop    esi
  41c8bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8be:	stos   DWORD PTR es:[edi],eax
  41c8bf:	neg    BYTE PTR [eax-0x27e53070]
  41c8c5:	xor    ax,WORD PTR [edi]
  41c8c8:	inc    esp
  41c8c9:	pop    ebx
  41c8ca:	push   ss
  41c8cb:	pop    ecx
  41c8cc:	adc    esi,DWORD PTR [edi-0x2e9ca3e0]
  41c8d2:	clc    
  41c8d3:	mov    cl,bh
  41c8d5:	iret   
  41c8d6:	xlat   BYTE PTR ds:[ebx]
  41c8d7:	inc    edi
  41c8d8:	gs xchg edi,eax
  41c8da:	and    BYTE PTR [edi],cl
  41c8dc:	mov    ss,WORD PTR [ecx+0x64284259]
  41c8e2:	adc    BYTE PTR [eax],al
  41c8e4:	mov    bl,0x78
  41c8e6:	stos   BYTE PTR es:[edi],al
  41c8e7:	ret    0x5581
  41c8ea:	push   ebp
  41c8eb:	retf   0xc62a
  41c8ee:	xor    eax,0x98980bbd
  41c8f3:	sbb    DWORD PTR [edi],ebp
  41c8f5:	add    ebp,esi
  41c8f7:	(bad)  
  41c8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f9:	imul   edx,DWORD PTR [eax],0xffffff8a
  41c8fc:	das    
  41c8fd:	cs sub ecx,0x2146a899
  41c904:	add    ch,ah
  41c906:	adc    al,BYTE PTR [edi]
  41c908:	dec    ebx
  41c909:	neg    DWORD PTR [edi-0x13]
  41c90c:	mov    esi,0x965e93ef
  41c911:	or     al,0x6
  41c913:	leave  
  41c914:	ret    0x41ed
  41c917:	add    DWORD PTR [eax],eax
  41c919:	clc    
  41c91a:	add    al,0x0
  41c91c:	add    BYTE PTR [ebp+0x30],al
  41c91f:	hlt    
  41c920:	ins    BYTE PTR es:[edi],dx
  41c921:	dec    esi
  41c922:	popa   
  41c923:	xor    ch,0x28
  41c926:	in     al,0x8b
  41c928:	jle    0x41c991
  41c92a:	(bad)
  41c92e:	and    DWORD PTR [ebp+ecx*4+0x3a],0x6f
  41c933:	add    eax,0xfc46c42b
  41c938:	jmp    0x41c917
  41c93a:	push   eax
  41c93b:	les    ecx,FWORD PTR [ecx-0x7c]
  41c93e:	(bad)  
  41c93f:	xchg   esp,eax
  41c940:	mov    ds:0x8cd3a85e,al
  41c945:	outs   dx,BYTE PTR ds:[esi]
  41c946:	scas   al,BYTE PTR es:[edi]
  41c947:	aas    
  41c948:	inc    edx
  41c949:	xchg   edx,eax
  41c94a:	loopne 0x41c970
  41c94c:	pop    ds
  41c94d:	inc    esp
  41c94e:	dec    edi
  41c94f:	icebp  
  41c950:	cmp    DWORD PTR [ecx],esp
  41c952:	das    
  41c953:	adc    DWORD PTR [eax],0x2ff4e3cb
  41c959:	pop    es
  41c95a:	or     eax,0xc36c0ad4
  41c95f:	mov    eax,ds:0x2ae54e97
  41c964:	fwait
  41c965:	jmp    0xed3b:0x958f1d75
  41c96c:	xchg   ebx,eax
  41c96d:	loop   0x41c9d9
  41c96f:	sar    BYTE PTR [esi+0xfedeae3],cl
  41c975:	add    DWORD PTR [ebp+0x32],0x1670934f
  41c97c:	and    eax,0x90a071d6
  41c981:	out    0x47,eax
  41c983:	xchg   edx,eax
  41c984:	pop    edi
  41c985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c986:	jno    0x41c940
  41c988:	or     ebx,DWORD PTR ss:[ebp+0x2d]
  41c98c:	jnp    0x41c93f
  41c98e:	mov    ebx,0xd4c16d33
  41c993:	ror    BYTE PTR [ebx],1
  41c995:	int    0x6f
  41c997:	dec    esi
  41c998:	xchg   ebx,eax
  41c999:	rcl    BYTE PTR [eax+0x51],cl
  41c99c:	popf   
  41c99d:	mov    al,ds:0x8aa7ee67
  41c9a2:	ja     0x41c9b6
  41c9a4:	sbb    bl,0xb4
  41c9a7:	jle    0x41c9ac
  41c9a9:	stc    
  41c9aa:	push   edi
  41c9ab:	mov    bl,0x4d
  41c9ad:	ss popa 
  41c9af:	gs in  al,0x64
  41c9b2:	outs   dx,BYTE PTR ds:[esi]
  41c9b3:	xchg   ebp,eax
  41c9b4:	shr    BYTE PTR [esi-0x6b1978d4],cl
  41c9ba:	out    0x6,eax
  41c9bc:	xchg   esi,eax
  41c9bd:	xchg   ecx,eax
  41c9be:	retf   
  41c9bf:	jnp    0x41c9de
  41c9c1:	sbb    al,0x11
  41c9c3:	dec    ecx
  41c9c4:	pop    ebx
  41c9c5:	push   0xfffffff2
  41c9c7:	ror    DWORD PTR [edi+ebp*4+0x11],0xff
  41c9cc:	stos   DWORD PTR es:[edi],eax
  41c9cd:	xlat   BYTE PTR ds:[ebx]
  41c9ce:	jp     0x41ca17
  41c9d0:	mov    WORD PTR [edi],?
  41c9d2:	push   esi
  41c9d3:	dec    esi
  41c9d4:	mov    edx,DWORD PTR [edx+0x44]
  41c9d7:	(bad)  
  41c9d8:	sbb    dh,BYTE PTR [edx-0x1319e8a2]
  41c9de:	cwde   
  41c9df:	mov    al,ds:0x9bf5b423
  41c9e4:	cmp    DWORD PTR [edi-0x29811609],edi
  41c9ea:	xlat   BYTE PTR ds:[ebx]
  41c9eb:	cdq    
  41c9ec:	xchg   BYTE PTR [esp+edx*1+0x6f315b12],dl
  41c9f3:	add    DWORD PTR [edx+0x83520],esi
  41c9f9:	cmp    al,0x6a
  41c9fb:	inc    esi
  41c9fc:	ret    0xeebe
  41c9ff:	or     BYTE PTR [ecx+eax*1],0xd9
  41ca03:	push   0x97332edb
  41ca08:	cmp    bl,dl
  41ca0a:	(bad)  
  41ca0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca0c:	xor    DWORD PTR [ebp-0x507a863e],0xcd8f4b8c
  41ca16:	das    
  41ca17:	retf   
  41ca18:	ja     0x41ca89
  41ca1a:	js     0x41c9a3
  41ca1c:	dec    edi
  41ca1d:	mov    dh,0x6e
  41ca1f:	push   0xa399efc3
  41ca24:	inc    edi
  41ca25:	or     BYTE PTR [edx],dl
  41ca27:	add    DWORD PTR [ebp+0x5e],0xb48c6c2
  41ca2e:	inc    edi
  41ca2f:	xchg   DWORD PTR [edx+0x5dda53c0],eax
  41ca35:	push   edi
  41ca36:	push   ss
  41ca37:	jno    0x41caaa
  41ca39:	aaa    
  41ca3a:	(bad)  
  41ca3c:	(bad)  
  41ca3d:	sahf   
  41ca3e:	pop    ds
  41ca3f:	cmp    esi,edi
  41ca41:	and    cl,BYTE PTR [edx+0x31339d83]
  41ca47:	jo     0x41ca78
  41ca49:	adc    cl,BYTE PTR [eax]
  41ca4b:	cmp    BYTE PTR [ebx+0x1a],0xc1
  41ca4f:	lods   al,BYTE PTR ds:[esi]
  41ca50:	dec    esi
  41ca51:	leave  
  41ca52:	mov    dl,0xa5
  41ca54:	xchg   ebx,eax
  41ca55:	ins    BYTE PTR es:[edi],dx
  41ca56:	xchg   ecx,eax
  41ca57:	sub    ah,bl
  41ca59:	cmp    eax,eax
  41ca5b:	jbe    0x41ca26
  41ca5d:	adc    eax,0x7bdef6e2
  41ca62:	ret    
  41ca63:	jmp    0x41cac3
  41ca65:	adc    eax,0x40774925
  41ca6a:	mov    esp,0x8024c104
  41ca6f:	iret   
  41ca70:	aam    0x87
  41ca72:	bound  edx,QWORD PTR [eax-0x2e7cc24a]
  41ca78:	sub    edx,DWORD PTR [ebx+esi*8+0x10132216]
  41ca7f:	sbb    al,0x97
  41ca81:	shl    ah,cl
  41ca83:	push   0xb2f3492c
  41ca88:	add    ebx,ecx
  41ca8a:	int3   
  41ca8b:	xchg   esi,eax
  41ca8c:	mov    BYTE PTR [ecx-0x28705290],0xa9
  41ca93:	dec    edi
  41ca94:	sbb    ch,BYTE PTR ss:[ebx-0x55]
  41ca98:	(bad)  
  41ca99:	cmp    al,0xc9
  41ca9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca9c:	(bad)  
  41ca9d:	nop
  41ca9e:	jae    0x41cae0
  41caa0:	jg     0x41cb10
  41caa2:	and    DWORD PTR [ecx*4-0xe00a7ca],eax
  41caa9:	fcomp  QWORD PTR [edi]
  41caab:	inc    ecx
  41caac:	outs   dx,DWORD PTR ds:[esi]
  41caad:	iret   
  41caae:	mov    ebp,0xeda20cee
  41cab3:	cdq    
  41cab4:	and    dl,BYTE PTR [eax-0x14]
  41cab7:	xor    eax,0xe8654507
  41cabc:	inc    esp
  41cabd:	out    0x9e,eax
  41cabf:	add    esi,esp
  41cac1:	cmp    eax,0xf6fd934
  41cac6:	in     al,0x6e
  41cac8:	push   eax
  41cac9:	jecxz  0x41cb2e
  41cacb:	cmp    esi,DWORD PTR [ecx+eiz*8]
  41cace:	aam    0x8b
  41cad0:	mov    edi,0xf0fe30d3
  41cad5:	cld    
  41cad6:	push   ds
  41cad7:	cdq    
  41cad8:	cmp    BYTE PTR [ebx+0x79],al
  41cadb:	xor    ebx,edx
  41cadd:	inc    ebp
  41cade:	cli    
  41cadf:	and    BYTE PTR [ecx-0x6867892d],dh
  41cae5:	rcr    DWORD PTR [ebx],1
  41cae7:	popa   
  41cae8:	inc    eax
  41cae9:	dec    ebx
  41caea:	sbb    eax,0xd67c8c16
  41caef:	jecxz  0x41cb27
  41caf1:	in     eax,0xcb
  41caf3:	sub    DWORD PTR [ebx-0x9e297ad],esi
  41caf9:	xor    al,BYTE PTR [ebx-0x43e7a4d]
  41caff:	test   eax,0x7f99f381
  41cb04:	dec    edx
  41cb05:	dec    ebx
  41cb06:	(bad)  
  41cb07:	stc    
  41cb08:	xchg   edx,eax
  41cb09:	cmp    esi,DWORD PTR [di]
  41cb0c:	mov    ch,BYTE PTR [eax+0x23]
  41cb0f:	pushf  
  41cb10:	bound  esi,QWORD PTR [esi-0x2a]
  41cb13:	cmp    edi,DWORD PTR [ebp-0x6b]
  41cb16:	lea    esp,gs:[eax+esi*1-0x27ab4f56]
  41cb1e:	push   ebp
  41cb1f:	or     ch,BYTE PTR [ecx+eiz*1+0x7d]
  41cb23:	mov    dl,0x6b
  41cb25:	mov    bl,al
  41cb27:	add    al,0xf0
  41cb29:	inc    edi
  41cb2a:	mov    esp,DWORD PTR [esi+0x1a]
  41cb2d:	(bad)  
  41cb2e:	mul    dh
  41cb30:	jle    0x41cafd
  41cb32:	mov    cl,BYTE PTR [ebx-0x20]
  41cb35:	xor    eax,0x89f327ea
  41cb3a:	in     eax,dx
  41cb3b:	repz fistp WORD PTR [bp+si+0x4d]
  41cb40:	sub    DWORD PTR [edi+0x49],ebp
  41cb43:	or     al,0xd3
  41cb45:	jo     0x41cb59
  41cb47:	ss push ebp
  41cb49:	and    BYTE PTR [ebx-0x56],al
  41cb4c:	(bad)  
  41cb4d:	in     eax,0xaf
  41cb4f:	push   es
  41cb50:	data16 cmp BYTE PTR [ecx+0x63d00332],dh
  41cb57:	xchg   edi,eax
  41cb58:	fsub   st(6),st
  41cb5a:	(bad)  
  41cb5b:	mov    edx,0x3fce0bbf
  41cb60:	adc    al,0xc8
  41cb62:	xor    bh,bh
  41cb64:	in     al,0xb
  41cb66:	xchg   ebp,eax
  41cb67:	sub    esp,DWORD PTR [esi]
  41cb69:	(bad)  
  41cb6a:	loop   0x41cb65
  41cb6c:	repnz dec ebx
  41cb6e:	bound  eax,QWORD PTR [ecx+0x58]
  41cb71:	push   0xce6fa8c6
  41cb76:	mov    al,0xc
  41cb78:	lds    esi,FWORD PTR [eax-0x4f]
  41cb7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7c:	cmp    bh,ch
  41cb7e:	sub    DWORD PTR [eax+0x38],edx
  41cb81:	les    esp,FWORD PTR [ebp-0xa]
  41cb84:	lea    edx,[edi]
  41cb86:	stos   BYTE PTR es:[edi],al
  41cb87:	xor    ebp,esi
  41cb89:	clc    
  41cb8a:	mov    ds:0xfc427851,eax
  41cb8f:	inc    eax
  41cb90:	arpl   WORD PTR [ecx],si
  41cb92:	sbb    DWORD PTR [ebp-0x3b053a97],ebp
  41cb98:	adc    BYTE PTR [esi+0x58],dl
  41cb9b:	xchg   esp,eax
  41cb9c:	sub    dl,BYTE PTR [esi+ebp*2-0x2dece23c]
  41cba3:	(bad)  
  41cba4:	xlat   BYTE PTR ds:[ebx]
  41cba5:	push   ebp
  41cba6:	into   
  41cba7:	scas   eax,DWORD PTR es:[edi]
  41cba8:	outs   dx,BYTE PTR gs:[esi]
  41cbaa:	loope  0x41cb88
  41cbac:	add    dh,al
  41cbae:	inc    DWORD PTR [edx]
  41cbb0:	jb     0x41cbc9
  41cbb2:	popa   
  41cbb3:	cwde   
  41cbb4:	imul   eax,DWORD PTR [eax+edx*1],0xa27bef3b
  41cbbb:	shl    DWORD PTR [edx+0x8],1
  41cbbe:	loope  0x41cc26
  41cbc0:	add    DWORD PTR [eax-0x545cf1f8],eax
  41cbc6:	add    DWORD PTR [ebx-0x51],ebx
  41cbc9:	sub    eax,eax
  41cbcb:	and    DWORD PTR [ebx+0x49],esi
  41cbce:	retf   0x93fe
  41cbd1:	call   0x2fdd:0xb05f31a3
  41cbd8:	and    DWORD PTR [ebx+eiz*1],ebp
  41cbdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbdc:	cwde   
  41cbdd:	fidiv  DWORD PTR [ecx]
  41cbdf:	sub    BYTE PTR ds:0xe780fbdc,al
  41cbe5:	push   esi
  41cbe6:	retf   0xd84b
  41cbe9:	loope  0x41cc23
  41cbeb:	or     edx,DWORD PTR [edx-0xd047ca2]
  41cbf1:	cmp    ebx,DWORD PTR [eax+edx*4+0x3a]
  41cbf5:	ror    bh,cl
  41cbf7:	adc    BYTE PTR [esi-0xd1039aa],al
  41cbfd:	mov    ah,0x14
  41cbff:	add    ebp,edi
  41cc01:	popf   
  41cc02:	add    eax,0x12a54449
  41cc07:	xchg   esp,eax
  41cc08:	mov    eax,cs
  41cc0a:	sahf   
  41cc0b:	test   BYTE PTR [ebx],al
  41cc0d:	test   al,0xc7
  41cc0f:	pop    ebx
  41cc10:	hlt    
  41cc11:	push   0xffffffdc
  41cc13:	aam    0xd5
  41cc15:	js     0x41cc0c
  41cc17:	aas    
  41cc18:	add    DWORD PTR [edx],edi
  41cc1a:	pusha  
  41cc1b:	push   edi
  41cc1c:	push   ecx
  41cc1d:	stc    
  41cc1e:	es fs in al,dx
  41cc21:	or     BYTE PTR [esp+edx*2+0x1890db92],dl
  41cc28:	out    0xc0,al
  41cc2a:	jmp    0x41cc46
  41cc2c:	mov    dh,0xd3
  41cc2e:	add    ebp,DWORD PTR ds:0x81a590f1
  41cc34:	pop    ebp
  41cc35:	in     eax,0x6f
  41cc37:	xorps  xmm4,XMMWORD PTR [ebp+0x43]
  41cc3b:	(bad)  [edx+0x2991b59f]
  41cc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc42:	xchg   edx,eax
  41cc43:	mov    ecx,gs
  41cc45:	bound  esp,QWORD PTR [ecx]
  41cc47:	and    edi,ebx
  41cc49:	pop    esp
  41cc4a:	(bad)  
  41cc4b:	push   cs
  41cc4c:	cmp    eax,0x93f35e7f
  41cc51:	push   es
  41cc52:	leave  
  41cc53:	pushf  
  41cc54:	or     ch,BYTE PTR [di-0x2897]
  41cc59:	sbb    eax,0xb5f5f317
  41cc5e:	rcr    BYTE PTR [esi],cl
  41cc60:	push   0x6ca07488
  41cc65:	popf   
  41cc66:	jnp    0x41ccaa
  41cc68:	jge    0x41cc8f
  41cc6a:	mov    eax,ds:0xa59ba842
  41cc6f:	jae    0x41cc55
  41cc71:	fsub   QWORD PTR [ecx]
  41cc73:	imul   edx,DWORD PTR [edi+ecx*1],0xfffffff2
  41cc77:	adc    DWORD PTR [edx-0x6],eax
  41cc7a:	xchg   ecx,eax
  41cc7b:	nop
  41cc7c:	adc    eax,eax
  41cc7e:	xchg   DWORD PTR [ebp+0x56],ecx
  41cc81:	adc    al,0x92
  41cc83:	mov    eax,ds:0x56ccaa6d
  41cc88:	mov    esi,0x4b594882
  41cc8d:	pop    ebp
  41cc8e:	xchg   ebx,eax
  41cc8f:	cmp    dl,BYTE PTR [edi]
  41cc91:	out    0x50,al
  41cc93:	stos   BYTE PTR es:[edi],al
  41cc94:	jp     0x41cc7a
  41cc96:	dec    edx
  41cc97:	mov    es,eax
  41cc99:	xlat   BYTE PTR ds:[ebx]
  41cc9a:	jge    0x41cc37
  41cc9c:	call   0xee92:0x32d9970
  41cca3:	xchg   esi,eax
  41cca4:	test   DWORD PTR [edx+ecx*1-0x37],ecx
  41cca8:	push   cs
  41cca9:	mov    dl,0x69
  41ccab:	mov    bh,ah
  41ccad:	jbe    0x41cd19
  41ccaf:	mov    esp,0x523b2368
  41ccb4:	xor    eax,0x1ca9ce20
  41ccb9:	sub    DWORD PTR [ecx],ebx
  41ccbb:	jge    0x41cccb
  41ccbd:	jmp    0x41cd27
  41ccbf:	pop    es
  41ccc0:	push   0x1
  41ccc2:	lahf   
  41ccc3:	dec    ecx
  41ccc4:	xchg   ebp,eax
  41ccc5:	or     DWORD PTR [ebx+0x729aa863],esp
  41cccb:	mov    DWORD PTR [ebx],edi
  41cccd:	outs   dx,DWORD PTR ds:[esi]
  41ccce:	dec    esi
  41cccf:	mov    esp,0x122629a4
  41ccd4:	mov    ch,0xfd
  41ccd6:	cld    
  41ccd7:	dec    edi
  41ccd8:	sbb    DWORD PTR [edi],edi
  41ccda:	out    0xcb,al
  41ccdc:	fiadd  WORD PTR [esi-0x37d420c6]
  41cce2:	loop   0x41cc9f
  41cce4:	pusha  
  41cce5:	adc    al,0xae
  41cce7:	sub    BYTE PTR [ecx-0x65],dl
  41ccea:	push   ss
  41cceb:	push   0x5b
  41cced:	pop    esp
  41ccee:	std    
  41ccef:	pushf  
  41ccf0:	mov    esi,0x404fe79b
  41ccf5:	mov    ecx,0x8ebd04dd
  41ccfa:	clc    
  41ccfb:	sub    bl,BYTE PTR [esi]
  41ccfd:	fcom   DWORD PTR [edx+0x490dea0c]
  41cd03:	xor    ch,BYTE PTR [ecx]
  41cd05:	test   al,0x51
  41cd07:	ins    DWORD PTR es:[edi],dx
  41cd08:	aas    
  41cd09:	test   al,0x8b
  41cd0b:	adc    dh,al
  41cd0d:	cmp    dl,BYTE PTR [ecx-0x1d880ad0]
  41cd13:	xor    al,0x9a
  41cd15:	int    0xb7
  41cd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd18:	jl     0x41ccba
  41cd1a:	or     ah,cl
  41cd1c:	push   ebp
  41cd1d:	cdq    
  41cd1e:	jg     0x41cd85
  41cd20:	fdiv   DWORD PTR [esi+0x3f]
  41cd23:	call   0xc97422c
  41cd28:	ins    BYTE PTR es:[edi],dx
  41cd29:	xor    esp,0xac84b8a9
  41cd2f:	(bad)  
  41cd30:	mov    esp,0x2c7a993
  41cd35:	pop    ecx
  41cd36:	shl    DWORD PTR [eax+0x4bf73753],cl
  41cd3c:	adc    eax,0xb61666cd
  41cd41:	jae    0x41cd99
  41cd43:	rol    BYTE PTR [esi+0x2a],1
  41cd46:	sbb    esp,DWORD PTR ds:[ebx-0xbd62434]
  41cd4d:	or     dh,BYTE PTR [ebx+esi*1-0x35]
  41cd51:	cmc    
  41cd52:	dec    esp
  41cd53:	pop    ss
  41cd54:	scas   al,BYTE PTR es:[edi]
  41cd55:	in     eax,dx
  41cd56:	out    0xbc,al
  41cd58:	stos   DWORD PTR es:[edi],eax
  41cd59:	scas   eax,DWORD PTR es:[edi]
  41cd5a:	add    DWORD PTR [ebx+0x41],ecx
  41cd5d:	adc    esp,DWORD PTR [ebp+0x59]
  41cd60:	xchg   esp,eax
  41cd61:	retf   
  41cd62:	jno    0x41cd80
  41cd64:	cmp    al,dl
  41cd66:	cs inc esi
  41cd68:	cmc    
  41cd69:	shl    BYTE PTR [eax+0x1],cl
  41cd6c:	lds    eax,FWORD PTR [ebp+ebx*2+0xe]
  41cd70:	repz bound esp,QWORD PTR [ebx+0x6671baa8]
  41cd77:	lea    esp,[eax]
  41cd79:	push   ds
  41cd7a:	mov    ds:0x35da89c,eax
  41cd7f:	inc    ebx
  41cd80:	jo     0x41cdf4
  41cd82:	and    dl,BYTE PTR ds:0x9c09039a
  41cd88:	jge    0x41cd93
  41cd8a:	fiadd  WORD PTR [eax]
  41cd8c:	imul   eax,eax,0xffffffdb
  41cd8f:	xor    DWORD PTR [esi],eax
  41cd91:	mov    esp,0xbcd671e4
  41cd96:	mov    esp,ebx
  41cd98:	jnp    0x41cd8e
  41cd9a:	ss add cl,bl
  41cd9d:	push   cs
  41cd9e:	xchg   DWORD PTR [eax+ebx*4+0x20],edx
  41cda2:	js     0x41cd2e
  41cda4:	xor    DWORD PTR [edi],esi
  41cda6:	push   esi
  41cda7:	mov    edx,0xfe8d41f8
  41cdac:	pushf  
  41cdad:	sbb    BYTE PTR [ebx-0x52],dh
  41cdb0:	pop    ss
  41cdb1:	jno    0x41cd74
  41cdb3:	fisttp DWORD PTR [ecx+0x4ec9acc0]
  41cdb9:	test   BYTE PTR [eax-0x75e0b3d1],dh
  41cdbf:	mov    ah,BYTE PTR [esi-0x37]
  41cdc2:	mov    DWORD PTR [edx-0x42],0xa40791d9
  41cdc9:	mov    bl,0x46
  41cdcb:	cli    
  41cdcc:	pop    ecx
  41cdcd:	push   edi
  41cdce:	das    
  41cdcf:	lods   eax,DWORD PTR ds:[esi]
  41cdd0:	cmp    ebx,ecx
  41cdd2:	ins    BYTE PTR es:[edi],dx
  41cdd3:	popf   
  41cdd4:	(bad)  
  41cdd5:	mov    ch,0x8b
  41cdd7:	xor    al,0xd5
  41cdd9:	and    dh,ch
  41cddb:	jmp    0x827d:0xf12231ff
  41cde2:	or     dl,BYTE PTR [edx]
  41cde4:	in     eax,dx
  41cde5:	popa   
  41cde6:	out    dx,eax
  41cde7:	push   esp
  41cde8:	gs mov ecx,0x6fe6f10c
  41cdee:	jns    0x41cd87
  41cdf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdf1:	xor    eax,0x3fac491
  41cdf6:	push   ebx
  41cdf7:	jno    0x41cd9f
  41cdf9:	pop    edi
  41cdfa:	sbb    ah,BYTE PTR [ebp-0x4a]
  41cdfd:	push   ecx
  41cdfe:	(bad)  
  41cdff:	ss jp  0x41ce71
  41ce02:	pop    esp
  41ce03:	or     eax,0x20b39ce
  41ce08:	fidiv  DWORD PTR fs:[esi+esi*4]
  41ce0c:	out    dx,eax
  41ce0d:	mov    al,ds:0x6c2610d8
  41ce12:	add    ecx,edi
  41ce14:	call   0xd4ce0cfd
  41ce19:	fdivrp st(6),st
  41ce1b:	cld    
  41ce1c:	ds js  0x41cdd0
  41ce1f:	out    dx,al
  41ce20:	daa    
  41ce21:	push   esp
  41ce22:	loopne 0x41ce35
  41ce24:	dec    esi
  41ce25:	in     eax,0x46
  41ce27:	add    DWORD PTR [eax],eax
  41ce29:	clc    
  41ce2a:	add    al,0x0
  41ce2c:	add    BYTE PTR ds:0x8f384704,bh
  41ce32:	test   DWORD PTR [eax+edi*2],ecx
  41ce35:	push   ebp
  41ce36:	popf   
  41ce37:	(bad)  
  41ce38:	sbb    DWORD PTR [esi-0x1c],ecx
  41ce3b:	push   esi
  41ce3c:	pop    esi
  41ce3d:	pop    ss
  41ce3e:	sbb    al,0x99
  41ce40:	ret    0xd9d7
  41ce43:	js     0x41ce73
  41ce45:	fstp   QWORD PTR [edx-0x6b10c6c2]
  41ce4b:	pop    edi
  41ce4c:	aaa    
  41ce4d:	(bad)  
  41ce4e:	mov    cl,0x28
  41ce50:	js     0x41ce0f
  41ce52:	enter  0xc741,0xb1
  41ce56:	adc    eax,0xe8540975
  41ce5b:	outs   dx,BYTE PTR ds:[esi]
  41ce5c:	gs push 0x4c
  41ce5f:	ins    BYTE PTR es:[edi],dx
  41ce60:	shl    BYTE PTR [ebx+0x59],1
  41ce63:	int3   
  41ce64:	pushf  
  41ce65:	add    ebp,ecx
  41ce67:	cmp    DWORD PTR [esp+ebp*4-0x27],ecx
  41ce6b:	sub    al,BYTE PTR [ebx+0x5ceeee92]
  41ce71:	and    bl,BYTE PTR [esi-0x6e8b87d1]
  41ce77:	cmp    esi,DWORD PTR [esi+edi*1]
  41ce7a:	xchg   BYTE PTR [edx],bh
  41ce7c:	int3   
  41ce7d:	int    0xda
  41ce7f:	lods   eax,DWORD PTR ds:[esi]
  41ce80:	das    
  41ce81:	sbb    esp,DWORD PTR [ecx-0x51cfd3c7]
  41ce87:	lods   eax,DWORD PTR ds:[esi]
  41ce88:	dec    ebp
  41ce89:	mov    ds:0x99754081,al
  41ce8e:	fistp  DWORD PTR [edx]
  41ce90:	addr16 mov eax,0x35115bb
  41ce96:	fs dec edx
  41ce98:	xchg   ebx,eax
  41ce99:	in     al,dx
  41ce9a:	in     al,dx
  41ce9b:	adc    bh,BYTE PTR [edx+eax*1]
  41ce9e:	scas   al,BYTE PTR es:[edi]
  41ce9f:	add    edi,esp
  41cea1:	lods   eax,DWORD PTR ds:[esi]
  41cea2:	inc    ecx
  41cea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cea4:	add    eax,0x43674ff8
  41cea9:	jle    0x41ce32
  41ceab:	and    al,0x13
  41cead:	ins    DWORD PTR es:[edi],dx
  41ceae:	mov    ebx,0x2afc0e4b
  41ceb3:	fidivr WORD PTR [edi-0xf]
  41ceb6:	sub    al,BYTE PTR [ecx-0x23]
  41ceb9:	ins    BYTE PTR es:[edi],dx
  41ceba:	mov    edi,0x20669571
  41cebf:	dec    esp
  41cec0:	mov    ebp,0x95e0b9de
  41cec5:	inc    edx
  41cec6:	pop    ebp
  41cec7:	shl    ch,0x20
  41ceca:	shl    DWORD PTR [ebp+0x13],0xb7
  41cece:	sbb    dl,BYTE PTR [ebx+ebp*4-0xc]
  41ced2:	test   al,0x5b
  41ced4:	sbb    BYTE PTR [edi+0x1e],bh
  41ced7:	ret    
  41ced8:	push   es
  41ced9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceda:	mov    ebx,0xaf57533f
  41cedf:	adc    BYTE PTR [edx+eax*2-0x34],0x85
  41cee4:	inc    edx
  41cee5:	out    0xc8,eax
  41cee7:	ficom  WORD PTR [edi+eiz*8]
  41ceea:	push   ss
  41ceeb:	lods   al,BYTE PTR ds:[esi]
  41ceec:	xor    bl,dl
  41ceee:	lea    esi,[edi+0x5b]
  41cef1:	mov    esi,0x1cd9c4a3
  41cef6:	bswap  esp
  41cef8:	add    DWORD PTR [edx+0x78e7e420],ecx
  41cefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceff:	daa    
  41cf00:	add    al,0xa1
  41cf02:	aas    
  41cf03:	retf   
  41cf04:	pop    ebp
  41cf05:	test   eax,0x84c416f1
  41cf0a:	and    al,0x76
  41cf0c:	out    dx,eax
  41cf0d:	enter  0x3824,0x7a
  41cf11:	or     cl,BYTE PTR [esi-0x66]
  41cf14:	cmp    eax,esp
  41cf16:	ss ror cl,cl
  41cf19:	xchg   esi,eax
  41cf1a:	enter  0x8e94,0x7f
  41cf1e:	ins    BYTE PTR es:[edi],dx
  41cf1f:	dec    esi
  41cf20:	mov    cl,ah
  41cf22:	pop    ecx
  41cf23:	loopne 0x41cf5b
  41cf25:	outs   dx,BYTE PTR es:[esi]
  41cf27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf28:	sbb    ebp,edx
  41cf2a:	adc    BYTE PTR [eax-0x75d5b6ee],0x1c
  41cf31:	sub    eax,DWORD PTR [ebp+0x5a9a799f]
  41cf37:	mov    edi,0xfbcd4eab
  41cf3c:	(bad)  
  41cf3e:	or     edx,DWORD PTR [edx-0x70da0968]
  41cf44:	pop    edx
  41cf45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf46:	fwait
  41cf47:	in     eax,0x98
  41cf49:	stc    
  41cf4a:	xlat   BYTE PTR ds:[ebx]
  41cf4b:	xor    al,BYTE PTR [ecx+0x4a]
  41cf4e:	ret    0xe518
  41cf51:	push   eax
  41cf52:	leave  
  41cf53:	movzx  edi,WORD PTR [edi]
  41cf56:	mov    ebp,0x71453b96
  41cf5b:	jne    0x41cfa9
  41cf5d:	and    ecx,ebp
  41cf5f:	xchg   ebx,eax
  41cf60:	push   ds
  41cf61:	js     0x41cf3e
  41cf63:	pop    esp
  41cf64:	mov    esi,0xad6d40ae
  41cf69:	outs   dx,DWORD PTR ds:[esi]
  41cf6a:	xchg   ebx,eax
  41cf6b:	inc    esp
  41cf6c:	pop    ds
  41cf6d:	ins    DWORD PTR es:[edi],dx
  41cf6e:	ss int3 
  41cf70:	xor    ch,BYTE PTR [ecx]
  41cf72:	dec    esi
  41cf73:	data16 rol ah,cl
  41cf76:	cdq    
  41cf77:	push   ecx
  41cf78:	call   0x6030c9d3
  41cf7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf7e:	call   0x147445c4
  41cf83:	mov    eax,0xf7bf6445
  41cf88:	sub    eax,0x7d461ddc
  41cf8d:	(bad)  
  41cf8e:	call   0xcc69ffe2
  41cf93:	adc    bl,BYTE PTR [esi+0x43]
  41cf96:	stos   BYTE PTR es:[edi],al
  41cf97:	dec    edi
  41cf98:	daa    
  41cf99:	dec    edx
  41cf9a:	sub    bh,cl
  41cf9c:	jo     0x41cfca
  41cf9e:	sbb    edi,ecx
  41cfa0:	hlt    
  41cfa1:	add    cl,BYTE PTR [eax-0x346d07ff]
  41cfa7:	jbe    0x41cf34
  41cfa9:	or     DWORD PTR [ecx+0x7e],ebx
  41cfac:	(bad)  
  41cfad:	sub    eax,0x1b93aaa9
  41cfb2:	stos   DWORD PTR es:[edi],eax
  41cfb3:	sub    al,cl
  41cfb5:	sub    edi,esp
  41cfb7:	call   0x1d70:0x66e06370
  41cfbe:	sub    BYTE PTR [eax],dh
  41cfc0:	ret    0xe0bf
  41cfc3:	pop    esp
  41cfc4:	cmp    eax,0x817eeeed
  41cfc9:	imul   edi,DWORD PTR [edi-0x80],0xffffff87
  41cfcd:	add    eax,0x18992db5
  41cfd2:	jae    0x41cf58
  41cfd4:	inc    edi
  41cfd5:	stos   DWORD PTR es:[edi],eax
  41cfd6:	ja     0x41cf66
  41cfd8:	push   esp
  41cfd9:	mov    ds:0x31e4fe0f,al
  41cfde:	sub    al,0xf3
  41cfe0:	js     0x41d020
  41cfe2:	and    eax,ecx
  41cfe4:	lahf   
  41cfe5:	dec    ebp
  41cfe6:	pusha  
  41cfe7:	loope  0x41d036
  41cfe9:	pop    ds
  41cfea:	clc    
  41cfeb:	add    ah,bl
  41cfed:	fst    QWORD PTR [edi]
  41cfef:	pusha  
  41cff0:	or     cl,BYTE PTR [ecx+0x5d31be3]
  41cff6:	jbe    0x41d02a
  41cff8:	inc    edi
  41cff9:	mov    al,0x2
  41cffb:	sbb    ecx,DWORD PTR [eax]
  41cffd:	cmp    bl,bh
  41cfff:	xor    esi,ebx
  41d001:	xor    eax,0x3c5f1577
  41d006:	push   0xffffffc0
  41d008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d009:	add    dh,0xa
  41d00c:	cwde   
  41d00d:	dec    esp
  41d00e:	pop    esi
  41d00f:	retf   
  41d010:	ds cwd 
  41d013:	sbb    BYTE PTR [eax+0x1eecedd2],cl
  41d019:	mov    ebp,0x45507739
  41d01e:	ja     0x41d03b
  41d020:	mov    ecx,eax
  41d022:	fcom   DWORD PTR [ecx+ebx*1-0x48]
  41d026:	out    dx,al
  41d027:	pop    esi
  41d028:	mov    esi,0x6b06b84c
  41d02d:	add    ah,BYTE PTR ds:0xb0d307c5
  41d033:	inc    edi
  41d034:	ror    BYTE PTR [eax],0x51
  41d037:	mov    bl,0xe5
  41d039:	ror    DWORD PTR [edx],cl
  41d03b:	ss loopne 0x41d0b1
  41d03e:	fild   WORD PTR [eax-0x3e6e1b1b]
  41d044:	shr    BYTE PTR [edi+edx*4+0x40903ad4],0x3b
  41d04c:	mov    esp,0x65934096
  41d051:	push   0xdfdcaec9
  41d056:	in     eax,0x98
  41d058:	fbld   TBYTE PTR [ebx+0x3]
  41d05b:	add    ebp,edx
  41d05d:	retf   
  41d05e:	xlat   BYTE PTR ds:[ebx]
  41d05f:	or     bh,BYTE PTR [ebp+0x3ec885af]
  41d065:	call   0x3e616ae9
  41d06a:	nop
  41d06b:	(bad)  
  41d06d:	pop    esi
  41d06e:	mov    al,ds:0xedd44706
  41d073:	mov    esp,0x12f4df8c
  41d078:	outs   dx,BYTE PTR ds:[esi]
  41d079:	mov    ah,0xbe
  41d07b:	push   ebx
  41d07c:	or     DWORD PTR [edi],edx
  41d07e:	loop   0x41d020
  41d080:	mov    edi,0x3d34fed8
  41d085:	push   ebx
  41d086:	jge    0x41d055
  41d088:	adc    DWORD PTR [esi+0x48],ebx
  41d08b:	iret   
  41d08c:	rcr    DWORD PTR [edx-0x15],0x5d
  41d090:	add    bl,dl
  41d092:	xor    al,0x2e
  41d094:	popa   
  41d095:	push   ss
  41d096:	adc    dh,BYTE PTR [eax-0x58711f32]
  41d09c:	in     al,dx
  41d09d:	lock or eax,0x81e567ea
  41d0a3:	mov    ebx,0x6bb6ef92
  41d0a8:	dec    esi
  41d0a9:	shr    DWORD PTR [eax-0x73],0xc6
  41d0ad:	sbb    al,0xdd
  41d0af:	into   
  41d0b0:	and    al,0xa9
  41d0b2:	mov    ds:0x5b43bfa,eax
  41d0b7:	jge    0x41d0e6
  41d0b9:	into   
  41d0ba:	push   0xc013520d
  41d0bf:	push   edi
  41d0c0:	stos   DWORD PTR es:[edi],eax
  41d0c1:	test   BYTE PTR [esi],0xf2
  41d0c4:	cli    
  41d0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0c6:	mov    ?,edi
  41d0c8:	lods   eax,DWORD PTR ds:[esi]
  41d0c9:	push   0x22515447
  41d0ce:	sub    eax,0x9b498d26
  41d0d3:	xor    eax,0x5f626e38
  41d0d8:	cli    
  41d0d9:	jecxz  0x41d084
  41d0db:	mov    BYTE PTR [ebx+0x641153f8],dl
  41d0e1:	(bad)  
  41d0e2:	jnp    0x41d0cb
  41d0e4:	call   0xec30:0x5db40c75
  41d0eb:	push   esp
  41d0ec:	outs   dx,BYTE PTR ds:[esi]
  41d0ed:	cmp    DWORD PTR ds:0xf80b6015,0xffffffa3
  41d0f4:	or     eax,esi
  41d0f6:	mov    WORD PTR [ebx-0x70],gs
  41d0f9:	je     0x41d150
  41d0fb:	add    esi,0x5dc6aa0a
  41d101:	or     eax,0xe1a86557
  41d106:	imul   eax,ebx,0x267a1b7d
  41d10c:	dec    edx
  41d10d:	and    ebp,ebp
  41d10f:	int3   
  41d110:	pop    ss
  41d111:	mov    cl,BYTE PTR [eax]
  41d113:	sar    BYTE PTR [ecx+eax*1+0x42],0x54
  41d118:	mov    dl,BYTE PTR ds:0xaf382c5d
  41d11e:	cmp    dh,bh
  41d120:	aam    0x39
  41d122:	in     al,dx
  41d123:	pop    es
  41d124:	repz sbb DWORD PTR [ecx+0x5d],0xffffff97
  41d129:	(bad)  
  41d12a:	lds    ebp,FWORD PTR [esi+0x1dca29de]
  41d130:	xchg   ecx,eax
  41d131:	aas    
  41d132:	push   0xb0f93bc
  41d137:	(bad)  
  41d138:	and    eax,0x90b79872
  41d13d:	mov    ds:0x16c99523,al
  41d142:	jbe    0x41d0e0
  41d144:	scas   al,BYTE PTR es:[edi]
  41d145:	addr16 xchg ebp,eax
  41d147:	mov    dh,0x7a
  41d149:	xchg   al,ah
  41d14b:	xor    eax,0x56387f4b
  41d150:	lock mov ah,0x35
  41d153:	adc    BYTE PTR [edi-0x2e],cl
  41d156:	push   0xe062c04a
  41d15b:	imul   ecx,DWORD PTR [ebp+ebx*4+0x1c7407fd],0x5906c601
  41d166:	fldenv [edi+0x3d]
  41d169:	das    
  41d16a:	sbb    cl,al
  41d16c:	pop    es
  41d16d:	xor    esi,esi
  41d16f:	cld    
  41d170:	jae    0x41d126
  41d172:	adc    bh,ch
  41d174:	sbb    al,0x6b
  41d176:	push   eax
  41d177:	mov    edi,0xd5e053ac
  41d17c:	aaa    
  41d17d:	outs   dx,DWORD PTR ds:[esi]
  41d17e:	jnp    0x1870dbb9
  41d184:	ss dec esp
  41d186:	xchg   esp,esi
  41d188:	(bad)  
  41d189:	nop
  41d18a:	add    eax,0x24ec5b8f
  41d18f:	inc    edi
  41d190:	fdivrp st(2),st
  41d192:	sar    DWORD PTR [ecx],cl
  41d194:	sbb    BYTE PTR [ecx-0x51],al
  41d197:	test   ch,bh
  41d199:	lods   al,BYTE PTR ds:[esi]
  41d19a:	shr    ebx,cl
  41d19c:	jo     0x41d1d8
  41d19e:	push   ecx
  41d19f:	cmp    DWORD PTR [ebp+0x28],ebx
  41d1a2:	fld    TBYTE PTR [ebx-0x3e]
  41d1a5:	fdivr  st,st(1)
  41d1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1a8:	repz inc eax
  41d1aa:	xor    al,0xf2
  41d1ac:	in     eax,dx
  41d1ad:	jle    0x41d1fc
  41d1af:	dec    esi
  41d1b0:	rol    BYTE PTR [edx],cl
  41d1b2:	and    BYTE PTR [eax-0x13cad692],cl
  41d1b8:	pushf  
  41d1b9:	daa    
  41d1ba:	jmp    0x41d1c1
  41d1bc:	aad    0x8a
  41d1be:	and    BYTE PTR [eax-0x98e2af5],dl
  41d1c4:	mov    eax,ds:0xc9fdfc54
  41d1c9:	sar    BYTE PTR [ebp-0x55cf2dee],cl
  41d1cf:	or     DWORD PTR [ebx],0xffffffed
  41d1d2:	ss add ebx,esp
  41d1d5:	(bad)  
  41d1d6:	outs   dx,DWORD PTR ds:[esi]
  41d1d7:	xor    DWORD PTR [esi+eax*2],edx
  41d1da:	mov    ch,0xb1
  41d1dc:	shl    DWORD PTR [edx],cl
  41d1de:	mov    bh,0x9c
  41d1e0:	lods   eax,DWORD PTR ds:[esi]
  41d1e1:	sbb    al,0xb4
  41d1e3:	sti    
  41d1e4:	sub    eax,0xed5f4d4b
  41d1e9:	cmp    esi,ecx
  41d1eb:	mov    bh,0xbd
  41d1ed:	pop    esi
  41d1ee:	fs inc edx
  41d1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1f1:	pop    ecx
  41d1f2:	sysexit 
  41d1f4:	fild   QWORD PTR [ecx+0x5e6d595]
  41d1fa:	mov    esp,0x4d4a3000
  41d1ff:	or     dl,BYTE PTR [ebx+0x7c]
  41d202:	adc    esi,edx
  41d204:	out    0x98,eax
  41d206:	fadd   DWORD PTR [edx]
  41d208:	call   0x12c7:0xb348a81b
  41d20f:	pop    ebp
  41d210:	stos   DWORD PTR es:[edi],eax
  41d211:	lods   al,BYTE PTR ds:[esi]
  41d212:	or     DWORD PTR [edi+0x34],ebx
  41d215:	jmp    0xe1b4:0x6c5b01fc
  41d21c:	push   ds
  41d21d:	mov    eax,0x8175ece5
  41d222:	add    BYTE PTR [ebp-0x2212328f],ch
  41d228:	push   esp
  41d229:	je     0x41d289
  41d22b:	shl    DWORD PTR [ebx+0x4],cl
  41d22e:	and    eax,esi
  41d230:	es adc al,0xc6
  41d233:	cmp    cl,BYTE PTR [ecx+esi*2-0x62]
  41d237:	xor    al,0x3c
  41d239:	cli    
  41d23a:	inc    esp
  41d23b:	mov    ah,0xfe
  41d23d:	push   ebp
  41d23e:	and    esp,DWORD PTR [edi+0x49935368]
  41d244:	inc    edx
  41d245:	xchg   esi,eax
  41d246:	lock enter 0x38e2,0x67
  41d24b:	mov    DWORD PTR [ebp-0x6b],edx
  41d24e:	test   dl,bh
  41d250:	les    edi,FWORD PTR [edx-0x40e171e1]
  41d256:	shl    BYTE PTR [esi-0x12f72237],0x9e
  41d25d:	add    DWORD PTR ds:0x5ad2fa88,edx
  41d263:	fs inc ecx
  41d265:	mov    bl,0x40
  41d267:	into   
  41d268:	mov    edi,0x1bd48e04
  41d26d:	xor    BYTE PTR ds:0x66a8e212,ah
  41d273:	xchg   DWORD PTR [edx+0x48],edx
  41d276:	(bad)  
  41d277:	sub    BYTE PTR [edi],ch
  41d279:	adc    BYTE PTR ds:0x8822380c,ah
  41d27f:	enter  0x5b7a,0x8d
  41d283:	dec    DWORD PTR [ebp-0x21d7982c]
  41d289:	out    0xf6,al
  41d28b:	mov    eax,0xd0705044
  41d290:	inc    ecx
  41d291:	(bad)  
  41d292:	cli    
  41d293:	and    BYTE PTR [eax],al
  41d295:	xlat   BYTE PTR ds:[ebx]
  41d296:	or     eax,0xb634965c
  41d29b:	popf   
  41d29c:	inc    eax
  41d29d:	ficomp WORD PTR [edx+ecx*8+0xd]
  41d2a1:	adc    DWORD PTR [ecx-0x366087d5],esi
  41d2a7:	cmp    eax,DWORD PTR ds:0xd389e1bb
  41d2ad:	sub    esi,0xffffff86
  41d2b0:	in     al,dx
  41d2b1:	cli    
  41d2b2:	rcl    bl,1
  41d2b4:	xchg   DWORD PTR [edi+0x60b63852],edi
  41d2ba:	push   ebx
  41d2bb:	sti    
  41d2bc:	dec    edi
  41d2bd:	cmp    esi,DWORD PTR [edi-0x2e8b278c]
  41d2c3:	pop    ecx
  41d2c4:	out    dx,eax
  41d2c5:	inc    ecx
  41d2c6:	push   esp
  41d2c7:	sti    
  41d2c8:	xchg   ebp,eax
  41d2c9:	aaa    
  41d2ca:	xchg   ebx,eax
  41d2cb:	xor    eax,0x7da71a8b
  41d2d0:	rol    BYTE PTR [edi-0x71],cl
  41d2d3:	push   0xffffffcc
  41d2d5:	push   cs
  41d2d6:	sahf   
  41d2d7:	bound  edx,QWORD PTR [edx-0x4157040b]
  41d2dd:	lds    ebp,FWORD PTR [edx+0x6fb3176c]
  41d2e3:	sahf   
  41d2e4:	arpl   WORD PTR [esi],di
  41d2e6:	mov    dl,0x18
  41d2e8:	pushf  
  41d2e9:	les    esp,FWORD PTR [edi+0x709dd110]
  41d2ef:	stos   BYTE PTR es:[edi],al
  41d2f0:	push   ecx
  41d2f1:	push   ecx
  41d2f3:	mov    ah,0x67
  41d2f5:	push   ecx
  41d2f6:	mov    al,BYTE PTR [ebx+edx*4]
  41d2f9:	push   esi
  41d2fa:	xor    DWORD PTR ds:0xac6e8913,edx
  41d300:	mov    ecx,0x86407c4b
  41d305:	ds cmp dl,bh
  41d308:	xchg   edx,eax
  41d309:	pop    ecx
  41d30a:	test   ebp,edi
  41d30c:	adc    al,0x72
  41d30e:	pushf  
  41d30f:	enter  0xcfd8,0xb9
  41d313:	jno    0x41d2a2
  41d315:	push   ds
  41d316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d317:	jnp    0x41d2a1
  41d319:	xor    BYTE PTR ds:[ebx],ah
  41d31c:	pop    ebp
  41d31d:	xor    dl,ch
  41d31f:	adc    DWORD PTR [edi-0x30],eax
  41d322:	cmc    
  41d323:	dec    esp
  41d324:	jb     0x41d3a1
  41d326:	leave  
  41d327:	xor    bh,0xb2
  41d32a:	(bad)  
  41d32b:	jg     0x41d2fa
  41d32d:	cdq    
  41d32e:	sbb    ax,WORD PTR [eax+0x4b8517a7]
  41d335:	fisttp QWORD PTR [ebx+0x1]
  41d338:	add    al,bh
  41d33a:	add    al,0x0
  41d33c:	add    BYTE PTR ds:0x1949d397,ch
  41d342:	sbb    DWORD PTR [ecx-0x69ed9489],eax
  41d348:	test   eax,0x3674c5b2
  41d34d:	mov    ah,0xc6
  41d34f:	les    edi,FWORD PTR [edi]
  41d351:	mov    ecx,0xb56fc25b
  41d356:	in     al,dx
  41d357:	imul   ebx,DWORD PTR [edi],0x16
  41d35a:	mov    ch,0x82
  41d35c:	push   es
  41d35d:	popf   
  41d35e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d35f:	lea    edx,[ecx+edx*1-0x20568ae1]
  41d366:	inc    esp
  41d367:	int    0xd0
  41d369:	cwde   
  41d36a:	aad    0xb3
  41d36c:	and    ecx,DWORD PTR [edx]
  41d36e:	(bad)  
  41d371:	xor    cl,dh
  41d373:	inc    esp
  41d374:	out    dx,al
  41d375:	pop    ds
  41d376:	jl     0x41d30e
  41d378:	fldenv [edi]
  41d37a:	pop    ss
  41d37b:	inc    edx
  41d37c:	fldenv [esi-0x1]
  41d37f:	inc    ebp
  41d380:	or     al,0x5c
  41d382:	daa    
  41d383:	xchg   edx,eax
  41d384:	das    
  41d385:	push   esi
  41d386:	jmp    0xa0e48be4
  41d38b:	hlt    
  41d38c:	shr    BYTE PTR [edi+0x8737955],1
  41d392:	es sbb al,0x45
  41d395:	enter  0x2883,0xed
  41d399:	outs   dx,BYTE PTR ds:[esi]
  41d39a:	aam    0xdc
  41d39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d39d:	test   BYTE PTR [esi-0x6ca26d33],cl
  41d3a3:	sub    al,0x77
  41d3a5:	and    al,0x40
  41d3a7:	leave  
  41d3a8:	bnd fs js 0x41d3c4
  41d3ac:	ret    0x41ad
  41d3af:	test   DWORD PTR [ebp+esi*2+0x6e1529c],ebx
  41d3b6:	gs (bad) 
  41d3b8:	test   eax,0x7156bd1c
  41d3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3be:	cli    
  41d3bf:	popf   
  41d3c0:	push   esi
  41d3c1:	cmp    al,0xd0
  41d3c3:	fstp   TBYTE PTR [ebx-0x6af33ed5]
  41d3c9:	das    
  41d3ca:	xchg   DWORD PTR ds:0x884e1f3a,ecx
  41d3d0:	and    eax,0x3014e479
  41d3d5:	(bad)  
  41d3d6:	mov    al,0x7a
  41d3d8:	sub    al,0x8c
  41d3da:	jae    0x41d42c
  41d3dc:	xchg   ebx,eax
  41d3dd:	mov    WORD PTR [ecx],ss
  41d3df:	jno    0x41d364
  41d3e1:	xchg   edx,eax
  41d3e2:	js     0x41d430
  41d3e4:	jg     0x41d3df
  41d3e6:	lods   al,BYTE PTR ds:[esi]
  41d3e7:	sub    eax,0x49809a4a
  41d3ec:	dec    ecx
  41d3ed:	sbb    al,0x61
  41d3ef:	inc    edx
  41d3f0:	fucom  st(0)
  41d3f2:	or     eax,0x7dcff2bc
  41d3f7:	(bad)  
  41d3f8:	jo     0x41d449
  41d3fa:	retf   0xab8f
  41d3fd:	adc    eax,0xb6923e27
  41d402:	push   ebx
  41d403:	adc    ecx,edi
  41d405:	rol    esi,1
  41d407:	fs loop 0x41d475
  41d40a:	and    eax,DWORD PTR [edi+0x4033daec]
  41d410:	inc    edi
  41d411:	push   esi
  41d412:	pushf  
  41d413:	xor    DWORD PTR [ebx-0x43],esi
  41d416:	fmulp  st(3),st
  41d418:	xchg   ecx,eax
  41d419:	pop    ebp
  41d41a:	xchg   esp,eax
  41d41b:	bound  ebx,QWORD PTR [ebx-0x43e91a91]
  41d421:	sub    esi,ebp
  41d423:	in     eax,0xcb
  41d425:	and    dl,ch
  41d427:	rcl    DWORD PTR [ebp-0x6b],1
  41d42a:	inc    edi
  41d42b:	and    BYTE PTR [eax-0x385a4f1f],ah
  41d431:	test   al,0x65
  41d433:	jecxz  0x41d495
  41d435:	sbb    eax,ecx
  41d437:	leave  
  41d438:	or     DWORD PTR [eax],ecx
  41d43a:	mov    ch,0x64
  41d43d:	outs   dx,BYTE PTR ds:[esi]
  41d43e:	arpl   WORD PTR [eax],ax
  41d440:	and    al,0xc1
  41d442:	mov    al,ds:0x310fcadd
  41d447:	sub    eax,0x8958d6a0
  41d44c:	jo     0x41d420
  41d44e:	pusha  
  41d44f:	ins    BYTE PTR es:[edi],dx
  41d450:	sbb    DWORD PTR [esi],0x35562baf
  41d456:	icebp  
  41d457:	rcl    BYTE PTR [eax],cl
  41d459:	outs   dx,BYTE PTR ds:[esi]
  41d45a:	retf   
  41d45b:	iret   
  41d45c:	mov    edi,0x153f1cab
  41d461:	pop    edi
  41d462:	inc    esi
  41d463:	nop
  41d464:	ret    0xf8ff
  41d467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d468:	cmc    
  41d469:	sub    DWORD PTR [esi+edx*8-0x78],esp
  41d46d:	data16 clc 
  41d46f:	xor    ch,BYTE PTR fs:[ecx+ebp*1-0x12f78f77]
  41d477:	int    0x15
  41d479:	jmp    0xd4b3:0xc15904d2
  41d480:	and    DWORD PTR [edx],eax
  41d482:	push   ds
  41d483:	ret    
  41d484:	xor    al,0xf9
  41d486:	pop    ds
  41d487:	push   ds
  41d488:	int3   
  41d489:	enter  0x45c6,0xf4
  41d48d:	add    DWORD PTR [edx-0x31],ecx
  41d490:	fwait
  41d491:	push   ss
  41d492:	lock cmp BYTE PTR ds:[ecx],bh
  41d496:	mov    eax,ds:0x88a7ba62
  41d49b:	xchg   ebx,eax
  41d49c:	loope  0x41d4c3
  41d49e:	inc    ecx
  41d49f:	or     BYTE PTR [ebx+0x4884500a],0xb7
  41d4a6:	push   edi
  41d4a7:	pop    es
  41d4a8:	shl    BYTE PTR [esi-0x4af5a3],1
  41d4ae:	mov    ds:0x427bf1c0,al
  41d4b3:	in     al,0xa7
  41d4b5:	scas   al,BYTE PTR es:[edi]
  41d4b6:	or     dh,BYTE PTR [eax+0x8]
  41d4b9:	mov    edx,0xbcabd81b
  41d4be:	loopne 0x41d4a1
  41d4c0:	inc    ecx
  41d4c1:	call   0xa6:0x7571a56a
  41d4c8:	inc    ebp
  41d4c9:	aas    
  41d4ca:	sbb    al,0x9f
  41d4cc:	cmp    al,cl
  41d4ce:	popf   
  41d4cf:	push   edi
  41d4d0:	jns    0x41d536
  41d4d2:	push   edi
  41d4d3:	cmp    al,0xc
  41d4d5:	jge    0x41d4fb
  41d4d7:	imul   eax,edx,0x1c9cf63b
  41d4dd:	stc    
  41d4de:	push   esi
  41d4df:	push   esp
  41d4e0:	cmc    
  41d4e1:	mov    ds:0xacb4964,al
  41d4e6:	pop    ebp
  41d4e7:	add    BYTE PTR [edx+0x7b],cl
  41d4ea:	jo     0x41d519
  41d4ec:	sub    edx,DWORD PTR [ebx+0xa]
  41d4ef:	pop    esi
  41d4f0:	jo     0x41d544
  41d4f2:	popa   
  41d4f3:	pop    ebx
  41d4f4:	ins    DWORD PTR es:[edi],dx
  41d4f5:	ficom  DWORD PTR [edx]
  41d4f7:	rol    BYTE PTR ds:0x4193830,cl
  41d4fd:	int3   
  41d4fe:	pop    edx
  41d4ff:	mov    ebx,0xd2d7188c
  41d504:	or     BYTE PTR [ebp-0x6b7d714a],0xfa
  41d50b:	pop    ss
  41d50c:	mov    ecx,0xeb248feb
  41d511:	and    ch,BYTE PTR [edx]
  41d513:	loopne 0x41d55a
  41d515:	mov    al,0x7b
  41d517:	fnstsw WORD PTR [bx+0x6e44]
  41d51c:	rcr    BYTE PTR [edx-0x131a3bd7],0x58
  41d523:	mov    ch,0x90
  41d525:	pop    esi
  41d526:	sbb    DWORD PTR [ebx+0x31a7abb],edi
  41d52c:	mov    edx,0x59757f0b
  41d531:	sub    al,0x84
  41d533:	pop    ss
  41d534:	or     eax,0x94332d0a
  41d539:	mov    bh,0x84
  41d53b:	iret   
  41d53c:	loope  0x41d53c
  41d53e:	jb     0x41d4ea
  41d540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d541:	dec    edx
  41d542:	aad    0xf7
  41d544:	jb     0x41d5c3
  41d546:	or     BYTE PTR [ebx+0x58],bh
  41d549:	and    eax,0x941a6938
  41d54e:	push   ds
  41d54f:	ins    BYTE PTR es:[edi],dx
  41d550:	mov    DWORD PTR [esi],esi
  41d552:	pop    esp
  41d553:	idiv   BYTE PTR [eax+edi*8]
  41d556:	sbb    edi,0x38
  41d559:	jg     0x41d538
  41d55b:	add    al,0xb8
  41d55d:	and    al,0x5d
  41d55f:	addr16 add edi,edx
  41d562:	(bad)  
  41d563:	std    
  41d564:	fadd   DWORD PTR [esi-0x54]
  41d567:	or     DWORD PTR [edx+0x5c6e3d75],ebx
  41d56d:	jmp    DWORD PTR [ebp-0x39]
  41d570:	fs (bad) 
  41d572:	jmp    0xf7a5:0x3e84edf0
  41d579:	ss mov bl,0xdb
  41d57c:	push   edx
  41d57d:	cmc    
  41d57e:	mov    DWORD PTR [edi+esi*1+0x6e52beb0],edi
  41d585:	xchg   esi,eax
  41d586:	mov    esp,0x513f4f8
  41d58b:	das    
  41d58c:	dec    edx
  41d58d:	adc    dh,BYTE PTR [eax-0x57]
  41d590:	pop    ebp
  41d591:	xor    BYTE PTR [ebx-0x5c],0x7c
  41d595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d596:	loop   0x41d594
  41d598:	inc    ecx
  41d599:	mov    eax,0x7d85d8b2
  41d59e:	mul    cl
  41d5a0:	inc    edx
  41d5a1:	shl    bh,0x93
  41d5a4:	ins    BYTE PTR es:[edi],dx
  41d5a5:	mov    ds:0xf496fd6c,eax
  41d5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ab:	lahf   
  41d5ac:	in     eax,0x9b
  41d5ae:	imul   edi,DWORD PTR [ebx-0x75],0xffffffdd
  41d5b2:	mov    bh,0x0
  41d5b4:	and    eax,0x5c4cd950
  41d5b9:	repnz pop edi
  41d5bb:	cdq    
  41d5bc:	mov    eax,ecx
  41d5be:	dec    ebp
  41d5bf:	xchg   ebp,eax
  41d5c0:	loopne 0x41d635
  41d5c2:	(bad)  [ebx]
  41d5c4:	daa    
  41d5c5:	enter  0xb08b,0x26
  41d5c9:	ja     0x41d5b6
  41d5cb:	mov    ecx,0xf2d06255
  41d5d0:	int    0x72
  41d5d2:	dec    esp
  41d5d3:	js     0x41d571
  41d5d5:	icebp  
  41d5d6:	or     cl,BYTE PTR [edi+esi*4]
  41d5d9:	and    DWORD PTR [esi+0x67],eax
  41d5dc:	mov    al,ds:0xaabf7979
  41d5e1:	pop    ebx
  41d5e2:	adc    BYTE PTR [eax+esi*2+0x20],dh
  41d5e6:	xchg   esp,eax
  41d5e7:	adc    BYTE PTR [esi-0x134d5f1e],dl
  41d5ed:	add    ah,BYTE PTR [edi-0x65d1441f]
  41d5f3:	call   0x699ad54d
  41d5f8:	mov    DWORD PTR [ecx],0x59130470
  41d5fe:	or     eax,0xa6b0d779
  41d603:	iret   
  41d604:	daa    
  41d605:	mov    edi,0xbbdac537
  41d60a:	jne    0x41d5f9
  41d60c:	fwait
  41d60d:	ins    BYTE PTR es:[edi],dx
  41d60e:	add    bl,dh
  41d610:	mov    ebx,0xd3f6ca08
  41d615:	inc    edx
  41d616:	sub    BYTE PTR ds:0x8c1803b3,dh
  41d61c:	test   DWORD PTR [edi+ebx*2],edx
  41d61f:	jecxz  0x41d63e
  41d621:	(bad)  
  41d622:	fldz   
  41d624:	jbe    0x41d5d0
  41d626:	inc    ebx
  41d627:	mov    ch,0x7e
  41d629:	into   
  41d62a:	jmp    0x7263257c
  41d62f:	pop    ebx
  41d630:	sti    
  41d631:	lahf   
  41d632:	pop    eax
  41d633:	xchg   BYTE PTR [esi+0x5870dce4],dl
  41d639:	mov    dh,0xd0
  41d63b:	push   esp
  41d63c:	mov    gs,WORD PTR [ebx]
  41d63e:	rol    BYTE PTR [ebx+0x21477535],cl
  41d644:	imul   eax,DWORD PTR ds:0x7ee7ce51,0x1c4e06f2
  41d64e:	or     BYTE PTR ds:0x1ea80bdc,cl
  41d654:	(bad)  
  41d655:	in     al,dx
  41d656:	inc    ebp
  41d657:	pop    ebp
  41d658:	jg     0x41d5ff
  41d65a:	test   al,0xf8
  41d65c:	ds loop 0x41d63a
  41d65f:	ss pop ecx
  41d661:	push   ecx
  41d662:	add    DWORD PTR [eax+0x15],eax
  41d665:	loop   0x41d661
  41d667:	not    eax
  41d669:	retf   
  41d66a:	stos   DWORD PTR es:[edi],eax
  41d66b:	popf   
  41d66c:	and    DWORD PTR [esi-0x3a99df80],ecx
  41d672:	clc    
  41d673:	xor    cl,BYTE PTR [ebx+0x233da459]
  41d679:	inc    esp
  41d67a:	int3   
  41d67b:	fdiv   QWORD PTR [edx+0x68]
  41d67e:	stos   BYTE PTR es:[edi],al
  41d67f:	xchg   edi,eax
  41d680:	sti    
  41d681:	pushf  
  41d682:	mov    DWORD PTR [esi+0x31c3f49],edi
  41d688:	jmp    0xeec5070b
  41d68d:	icebp  
  41d68e:	sub    esi,ecx
  41d690:	test   al,0x46
  41d692:	inc    eax
  41d693:	in     eax,dx
  41d694:	add    eax,DWORD PTR [edx+0x22]
  41d697:	mov    BYTE PTR [edi],0xcc
  41d69a:	sbb    DWORD PTR [edi+0x7d],edx
  41d69d:	ror    DWORD PTR [eax],cl
  41d69f:	cmp    al,0x5a
  41d6a1:	aas    
  41d6a2:	fbld   TBYTE PTR [edx+0x40]
  41d6a5:	xchg   esp,eax
  41d6a6:	sub    edx,edi
  41d6a8:	push   0x41
  41d6aa:	or     BYTE PTR [ecx],bl
  41d6ac:	addr16 xor al,0xd4
  41d6af:	(bad)  
  41d6b0:	xlat   BYTE PTR ds:[ebx]
  41d6b1:	and    BYTE PTR [edx-0x13253a53],bl
  41d6b7:	dec    ebp
  41d6b8:	push   ecx
  41d6b9:	pop    ss
  41d6ba:	inc    esi
  41d6bb:	mov    dh,0xf4
  41d6bd:	xor    bl,BYTE PTR [eax+eax*2-0x19]
  41d6c1:	comiss xmm0,DWORD PTR [ebp+0x79abb299]
  41d6c8:	fbld   TBYTE PTR [esi]
  41d6ca:	scas   al,BYTE PTR es:[edi]
  41d6cb:	dec    ebp
  41d6cc:	mov    al,ds:0x83c0ab26
  41d6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d2:	jnp    0x41d746
  41d6d4:	or     al,0xdc
  41d6d6:	jae    0x41d665
  41d6d8:	mov    al,0xa1
  41d6da:	sub    BYTE PTR [edi-0x5c74b782],bh
  41d6e0:	nop
  41d6e1:	xor    eax,0x9723fcaf
  41d6e6:	xlat   BYTE PTR ds:[ebx]
  41d6e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6e8:	push   cs
  41d6e9:	imul   esi,DWORD PTR [eax],0x7f
  41d6ec:	sub    cl,0x84
  41d6ef:	int    0xda
  41d6f1:	js     0x41d6ec
  41d6f3:	int    0xbb
  41d6f5:	stc    
  41d6f6:	mov    DWORD PTR [edx],0xac6ba014
  41d6fc:	sbb    dl,BYTE PTR [eax+eax*2]
  41d6ff:	lock jl 0x41d71e
  41d702:	mov    bh,0x7e
  41d704:	and    eax,DWORD PTR [eax+edx*8+0x33]
  41d708:	mov    BYTE PTR [eax-0x4b0cecd],dl
  41d70e:	xor    al,dh
  41d710:	xchg   DWORD PTR [edi],esp
  41d712:	out    0x17,eax
  41d714:	jecxz  0x41d712
  41d716:	(bad)  
  41d717:	(bad)  
  41d718:	push   ebx
  41d719:	and    al,0x49
  41d71b:	cmp    esi,DWORD PTR [esp+ecx*2+0x30]
  41d71f:	add    DWORD PTR [ebp+0x752839c8],0x56
  41d726:	mul    BYTE PTR [ebx-0x1e]
  41d729:	mov    ?,WORD PTR [ebp-0x2fe2fa9a]
  41d72f:	xor    ebp,DWORD PTR [esi]
  41d731:	add    eax,0xc9ba8f13
  41d736:	std    
  41d737:	rcl    BYTE PTR [esi],0x1a
  41d73a:	mov    DWORD PTR [ebx+0x321122a5],edx
  41d740:	or     dl,BYTE PTR [eax-0x78a6626e]
  41d746:	cwde   
  41d747:	xchg   esi,eax
  41d748:	in     al,dx
  41d749:	icebp  
  41d74a:	mov    edx,DWORD PTR [ebx+0x2581c0dc]
  41d750:	jnp    0x41d71c
  41d752:	jo     0x41d726
  41d754:	adc    al,0xb5
  41d756:	sub    cl,BYTE PTR [eax]
  41d758:	sub    cl,0x1
  41d75b:	adc    dl,BYTE PTR [esi+0x717d8f62]
  41d761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d762:	dec    eax
  41d763:	mov    al,ds:0x5266e7f
  41d768:	sti    
  41d769:	xor    bh,BYTE PTR [edi]
  41d76b:	jecxz  0x41d72d
  41d76d:	dec    edi
  41d76e:	pop    edx
  41d76f:	mov    ecx,0xf1a86781
  41d774:	cmp    eax,0xda4c9803
  41d779:	add    bl,BYTE PTR [edx+0x25]
  41d77c:	cdq    
  41d77d:	cmp    al,0xb6
  41d77f:	sbb    DWORD PTR [esi-0x574b4deb],eax
  41d785:	pop    esi
  41d786:	lea    esp,[esi]
  41d788:	push   cs
  41d789:	adc    BYTE PTR [ebx-0x22f11cb4],dl
  41d78f:	pop    esi
  41d790:	and    ebx,esi
  41d792:	repz sbb DWORD PTR [eax],ecx
  41d795:	aad    0xf2
  41d797:	adc    al,0x59
  41d799:	jo     0x41d7eb
  41d79b:	ja     0x41d733
  41d79d:	sub    al,0x1d
  41d79f:	pop    es
  41d7a0:	sbb    al,0x46
  41d7a2:	fcomi  st,st(0)
  41d7a4:	jecxz  0x41d785
  41d7a6:	ror    edx,0x1f
  41d7a9:	pop    es
  41d7aa:	ret    
  41d7ab:	jo     0x41d81c
  41d7ad:	mov    eax,ds:0x86d9f4dc
  41d7b2:	add    DWORD PTR [edx-0x60],eax
  41d7b5:	inc    DWORD PTR [eax-0x6eff6ea8]
  41d7bb:	xlat   BYTE PTR ds:[ebx]
  41d7bc:	cli    
  41d7bd:	mov    es,WORD PTR [esi+0x57f32a10]
  41d7c3:	jbe    0x41d7ad
  41d7c5:	inc    edi
  41d7c6:	lock xchg ebp,eax
  41d7c8:	push   edx
  41d7c9:	aaa    
  41d7ca:	inc    eax
  41d7cb:	icebp  
  41d7cc:	ficom  DWORD PTR [edx+0x3a147912]
  41d7d2:	test   BYTE PTR [ebx+0x49],ah
  41d7d5:	imul   esi,DWORD PTR [ecx-0x581a9870],0x69ac1a72
  41d7df:	aam    0x4e
  41d7e1:	(bad)  
  41d7e2:	mov    esi,0x23df3777
  41d7e7:	lea    ebp,[ecx]
  41d7e9:	jmp    0x41d7c9
  41d7eb:	mov    WORD PTR [ecx],cs
  41d7ed:	fst    QWORD PTR [edx]
  41d7ef:	pop    es
  41d7f0:	cdq    
  41d7f1:	lods   eax,DWORD PTR ds:[esi]
  41d7f2:	out    0x82,al
  41d7f4:	xchg   esp,eax
  41d7f5:	(bad)  [edx+0x28c6132d]
  41d7fb:	sar    BYTE PTR [ebp+0x66],1
  41d7fe:	lock sub DWORD PTR [edi-0x7d],edx
  41d802:	sbb    ch,BYTE PTR [edi]
  41d804:	jnp    0x41d7b1
  41d806:	stc    
  41d807:	rcr    DWORD PTR [ecx+esi*4+0x74],cl
  41d80b:	cld    
  41d80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d80d:	or     dl,bl
  41d80f:	xchg   esi,eax
  41d810:	ret    0xd837
  41d813:	pop    esp
  41d814:	sub    al,0x6f
  41d816:	xchg   ebx,eax
  41d817:	ficomp DWORD PTR [eax]
  41d819:	and    BYTE PTR [edi-0x1a3449b8],bh
  41d81f:	jl     0x41d867
  41d821:	test   BYTE PTR [esi],cl
  41d823:	and    DWORD PTR [ebx-0x65],ebx
  41d826:	mov    ds:0xdc89779e,al
  41d82b:	cwde   
  41d82c:	jbe    0x41d7c4
  41d82e:	xor    esi,DWORD PTR [eax+0x1de0c50e]
  41d834:	inc    eax
  41d835:	loop   0x41d841
  41d837:	add    DWORD PTR [ecx+0x7bf29be9],edx
  41d83d:	and    eax,0xfad4df28
  41d842:	(bad)  
  41d843:	int3   
  41d844:	sbb    al,0xd5
  41d846:	push   eax
  41d847:	add    DWORD PTR [eax],eax
  41d849:	clc    
  41d84a:	add    al,0x0
  41d84c:	add    dh,dh
  41d84e:	pop    ecx
  41d84f:	jmp    DWORD PTR [eax+0x4155359]
  41d855:	sub    dl,BYTE PTR [ebx]
  41d857:	clc    
  41d858:	popa   
  41d859:	jecxz  0x41d809
  41d85b:	mov    edx,0xc5af9a1d
  41d860:	cwde   
  41d861:	jnp    0x41d8db
  41d863:	adc    dh,BYTE PTR [edi+0x593fd0a6]
  41d869:	test   edx,edx
  41d86b:	and    eax,0x4ed57108
  41d870:	inc    dh
  41d872:	sub    ebx,ebx
  41d874:	dec    ebx
  41d875:	xchg   DWORD PTR [esi+edx*2+0x71],ebp
  41d879:	xlat   BYTE PTR ds:[ebx]
  41d87a:	repnz dec ebp
  41d87c:	icebp  
  41d87d:	(bad)  
  41d87e:	out    dx,eax
  41d87f:	xchg   ebp,eax
  41d880:	push   edx
  41d881:	dec    ebx
  41d882:	ja     0x41d900
  41d884:	push   DWORD PTR [edx-0x98b7ca1]
  41d88a:	sbb    al,0x2c
  41d88c:	push   esp
  41d88d:	in     al,0xaa
  41d88f:	ins    DWORD PTR es:[edi],dx
  41d890:	mov    ebx,0xc87c5e1e
  41d895:	inc    edx
  41d896:	add    al,0x71
  41d898:	(bad)  
  41d899:	xchg   esi,eax
  41d89a:	mov    ecx,eax
  41d89c:	mov    WORD PTR [ebp-0x3],ds
  41d89f:	mov    dl,0xf5
  41d8a1:	or     eax,0xffffffe4
  41d8a4:	nop
  41d8a5:	adc    esp,DWORD PTR [edi+0x4e8b4664]
  41d8ab:	and    eax,0x32da31a7
  41d8b0:	clc    
  41d8b1:	out    0xc5,eax
  41d8b3:	sti    
  41d8b4:	js     0x41d913
  41d8b6:	mov    al,ds:0xb2ecf2c4
  41d8bb:	inc    DWORD PTR [eax]
  41d8bd:	sub    ecx,DWORD PTR [eax]
  41d8bf:	pop    edi
  41d8c0:	call   0x7467e641
  41d8c5:	fstp   TBYTE PTR [ebp+0x6780c6f4]
  41d8cb:	mov    ecx,0xd9c79e10
  41d8d0:	inc    esi
  41d8d1:	jecxz  0x41d91a
  41d8d3:	gs push edx
  41d8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8d6:	push   cs
  41d8d7:	lods   al,BYTE PTR ds:[esi]
  41d8d8:	add    DWORD PTR [ebp+0x76627ecc],ebx
  41d8de:	mov    edi,0x8fbabf7f
  41d8e3:	lea    esp,[ebp-0xac30f88]
  41d8e9:	out    0x92,eax
  41d8eb:	lahf   
  41d8ec:	cmp    edi,0xffffffe0
  41d8ef:	bound  esi,QWORD PTR [ecx+edi*8+0x26fbe46d]
  41d8f6:	hlt    
  41d8f7:	jecxz  0x41d8ed
  41d8f9:	and    BYTE PTR [edx+esi*4+0x77],ch
  41d8fd:	js     0x41d8ca
  41d8ff:	pop    eax
  41d900:	test   al,0xc3
  41d902:	call   0x911ba94d
  41d907:	scas   al,BYTE PTR es:[edi]
  41d908:	das    
  41d909:	gs (bad) 
  41d90b:	leave  
  41d90c:	mov    bl,0xe8
  41d90e:	scas   al,BYTE PTR es:[edi]
  41d90f:	push   0xffffffb8
  41d911:	fimul  DWORD PTR [edx+0x1d]
  41d914:	loop   0x41d901
  41d916:	mov    eax,DWORD PTR gs:[ebx]
  41d919:	retf   0x2e49
  41d91c:	icebp  
  41d91d:	inc    eax
  41d91e:	mov    edi,DWORD PTR [eax]
  41d920:	jnp    0x41d8a8
  41d922:	jp     0x41d984
  41d924:	push   eax
  41d925:	lea    esp,[esp-0x56be3004]
  41d92c:	aaa    
  41d92d:	sbb    dh,cl
  41d92f:	jns    0x41d8f1
  41d931:	jno    0x41d8d0
  41d933:	bswap  eax
  41d935:	cmp    eax,0xa0ad7d0b
  41d93a:	lods   eax,DWORD PTR ds:[esi]
  41d93b:	and    edi,DWORD PTR [ebp+ebp*2-0x63]
  41d93f:	ret    0x13da
  41d942:	dec    ebx
  41d943:	ds sub ecx,ecx
  41d946:	push   esp
  41d947:	inc    eax
  41d948:	mov    eax,0x1875f573
  41d94d:	fdiv   DWORD PTR [ecx-0x53]
  41d950:	fcomip st,st(1)
  41d952:	stc    
  41d953:	sbb    DWORD PTR [ebp*8+0x78e28240],0xe50f2f91
  41d95e:	mov    al,0xb0
  41d960:	sti    
  41d961:	mov    ecx,DWORD PTR [edx+0x1a]
  41d964:	mov    ebp,0x32485d34
  41d969:	push   eax
  41d96a:	ja     0x41d9af
  41d96c:	sbb    DWORD PTR [ecx+0x40],ebx
  41d96f:	les    ecx,FWORD PTR [ebp-0x22]
  41d972:	pop    edx
  41d973:	idiv   DWORD PTR [edx]
  41d975:	outs   dx,BYTE PTR ds:[esi]
  41d976:	push   esp
  41d977:	xchg   DWORD PTR [ebx-0x5841e5fc],esp
  41d97d:	push   0x9ae8551c
  41d982:	out    dx,eax
  41d983:	outs   dx,BYTE PTR ds:[esi]
  41d984:	add    BYTE PTR [ecx],ah
  41d986:	mov    ds:0x59f93372,al
  41d98b:	xchg   ebp,eax
  41d98c:	adc    DWORD PTR [edi-0x56],ebx
  41d98f:	jecxz  0x41d958
  41d991:	popf   
  41d992:	(bad)  
  41d993:	adc    eax,0x5fe43f27
  41d998:	icebp  
  41d999:	test   edi,edi
  41d99b:	push   ecx
  41d99c:	dec    eax
  41d99d:	sub    BYTE PTR [ecx-0x2cb6e00a],0xf6
  41d9a4:	jb     0x41d9c3
  41d9a6:	ds cwde 
  41d9a8:	sub    esi,0x7b
  41d9ab:	lods   al,BYTE PTR ds:[esi]
  41d9ac:	sub    DWORD PTR [ebp+0x600e2885],eax
  41d9b2:	push   ebx
  41d9b3:	jmp    0xc715357d
  41d9b8:	mov    WORD PTR [ebx],ss
  41d9ba:	sbb    ebp,ebx
  41d9bc:	lds    esp,FWORD PTR [eax]
  41d9be:	(bad)  
  41d9bf:	pop    ecx
  41d9c0:	shr    DWORD PTR [ebx+ecx*1],0x34
  41d9c4:	das    
  41d9c5:	fs ret 0x4ae7
  41d9c9:	test   eax,0x59b1dbff
  41d9ce:	sub    ah,cl
  41d9d0:	hlt    
  41d9d1:	adc    ebx,esi
  41d9d3:	pop    edi
  41d9d4:	and    ebp,DWORD PTR [edi-0x2e]
  41d9d7:	jge    0x41d960
  41d9d9:	adc    DWORD PTR [edi+0x54f815a0],esp
  41d9df:	push   edi
  41d9e0:	sahf   
  41d9e1:	loop   0x41d989
  41d9e3:	mov    al,ds:0x817e4f26
  41d9e8:	xor    DWORD PTR [edi],0xffffffcf
  41d9eb:	or     BYTE PTR [ecx-0x39],bh
  41d9ee:	dec    eax
  41d9ef:	bnd jg 0x41d9b3
  41d9f2:	jmp    0x4e11ba6c
  41d9f7:	and    BYTE PTR [ebp-0x3ac9cf5f],0x40
  41d9fe:	mov    ebp,0x8bbdf0f1
  41da03:	jbe    0x41d99a
  41da05:	mov    esp,DWORD PTR [esp+edx*2+0x3da24db5]
  41da0c:	mov    esi,0x801ed2de
  41da11:	leave  
  41da12:	call   FWORD PTR [eax+0x13]
  41da15:	or     ebx,DWORD PTR [esi+edx*8+0x74]
  41da19:	ret    
  41da1a:	dec    eax
  41da1b:	mov    BYTE PTR [ecx],bl
  41da1d:	add    BYTE PTR [ecx],al
  41da1f:	cmp    dl,BYTE PTR [ecx]
  41da21:	test   ebp,0xbb8a956c
  41da27:	adc    BYTE PTR [esi+ebp*8-0x29],bl
  41da2b:	add    ebp,DWORD PTR [esi+0x23]
  41da2e:	sub    al,dh
  41da30:	imul   BYTE PTR [ecx-0x534379b3]
  41da36:	lock mov esp,0xc99e32f9
  41da3c:	fisttp QWORD PTR [edi+0x1d]
  41da3f:	dec    esp
  41da40:	xchg   ecx,eax
  41da41:	popf   
  41da42:	sub    al,0x98
  41da44:	xor    BYTE PTR [ebp+0x2092a65c],dl
  41da4a:	and    DWORD PTR [ebx],eax
  41da4c:	(bad)  
  41da4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da4e:	pop    ss
  41da4f:	xor    BYTE PTR [edx-0x4c],ch
  41da52:	loop   0x41da26
  41da54:	sbb    BYTE PTR [ebx-0x4e2614f6],0x95
  41da5b:	or     dh,cl
  41da5d:	mov    al,0x16
  41da5f:	stc    
  41da60:	cli    
  41da61:	retf   0xb8d5
  41da64:	cmp    al,0xfd
  41da66:	mov    ah,0xd4
  41da68:	test   edi,edi
  41da6a:	jno    0x41dae9
  41da6c:	cmp    al,0x8d
  41da6e:	cwde   
  41da6f:	outs   dx,DWORD PTR ds:[esi]
  41da70:	mov    gs,WORD PTR [edx+0x58]
  41da73:	and    BYTE PTR [edx],0x2e
  41da76:	xchg   edi,eax
  41da77:	push   ds
  41da78:	int    0x35
  41da7a:	and    DWORD PTR [ecx+0x7a2b5d8],edi
  41da80:	or     eax,0x8d05fd9a
  41da85:	xor    al,0xe7
  41da87:	(bad)
  41da8a:	push   esp
  41da8b:	scas   eax,DWORD PTR es:[edi]
  41da8c:	push   ecx
  41da8d:	or     al,0x3
  41da8f:	mov    ds:0x31bb4b7,eax
  41da94:	push   cs
  41da95:	add    al,0x4e
  41da97:	shl    BYTE PTR [edi-0x51711b7],0xba
  41da9e:	out    dx,al
  41da9f:	or     eax,0x9649a1fe
  41daa4:	mov    al,ds:0xb2156b3d
  41daa9:	push   edi
  41daaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daac:	and    ch,BYTE PTR [esi+0x2]
  41daaf:	int3   
  41dab0:	xchg   ebp,eax
  41dab1:	mov    eax,0x372c5452
  41dab6:	hlt    
  41dab7:	and    edi,DWORD PTR [ecx-0x2e]
  41daba:	retf   
  41dabb:	push   ecx
  41dabc:	mov    al,0xb2
  41dabe:	out    dx,eax
  41dabf:	pop    esi
  41dac0:	sbb    al,0xc1
  41dac2:	push   cs
  41dac3:	(bad)  
  41dac5:	xchg   edx,eax
  41dac6:	mov    bl,0xc5
  41dac8:	xor    ch,BYTE PTR [eax]
  41daca:	adc    eax,esp
  41dacc:	ins    BYTE PTR es:[edi],dx
  41dacd:	fidivr WORD PTR [ecx-0x9]
  41dad0:	lahf   
  41dad1:	outs   dx,DWORD PTR ds:[esi]
  41dad2:	in     eax,dx
  41dad3:	jge    0x41dae8
  41dad5:	data16 in al,0xf1
  41dad8:	int    0xae
  41dada:	jp     0x41db05
  41dadc:	push   ecx
  41dadd:	inc    ecx
  41dade:	adc    esp,DWORD PTR [esi+0x383cc5f5]
  41dae4:	dec    edi
  41dae5:	aas    
  41dae6:	cs ret 
  41dae8:	cli    
  41dae9:	jae    0x41da6f
  41daeb:	not    DWORD PTR [ebx]
  41daed:	lea    esp,ds:0xeaff09c2
  41daf3:	pop    eax
  41daf4:	call   0xf89db365
  41daf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dafa:	dec    esp
  41dafb:	in     al,dx
  41dafc:	mov    BYTE PTR [edx],cl
  41dafe:	add    DWORD PTR gs:[ecx-0x7d31f57b],esp
  41db05:	sbb    eax,0xc77c0474
  41db0a:	ss mov esi,0xbe135b79
  41db10:	mov    BYTE PTR [edx+0x48],ch
  41db13:	or     eax,DWORD PTR [ebx+0x87f8462]
  41db19:	popa   
  41db1a:	mov    dl,0xa2
  41db1c:	fwait
  41db1d:	test   DWORD PTR [edi+0x71],edi
  41db20:	(bad)  
  41db21:	mov    ebx,0x22292df7
  41db26:	in     eax,dx
  41db27:	loop   0x41dad7
  41db29:	fld    QWORD PTR [edi-0x3f]
  41db2c:	(bad)  
  41db2d:	push   ebx
  41db2e:	retf   
  41db2f:	and    BYTE PTR [esi+0x7f],dh
  41db32:	or     eax,DWORD PTR [ebp+esi*2+0x690f7b2d]
  41db39:	xchg   ebp,eax
  41db3a:	loop   0x41dae0
  41db3c:	in     al,dx
  41db3d:	cmp    eax,0xba39bfac
  41db42:	and    BYTE PTR [eax-0x24],ch
  41db45:	adc    BYTE PTR [eax],cl
  41db47:	or     di,bp
  41db4a:	inc    edi
  41db4b:	mov    eax,ds:0x51723cb8
  41db50:	stos   DWORD PTR es:[edi],eax
  41db51:	mov    al,0x5d
  41db53:	test   al,0x28
  41db55:	lock xchg BYTE PTR [esp+eax*1],al
  41db59:	pushf  
  41db5a:	xchg   ecx,eax
  41db5b:	ficomp WORD PTR [ecx+0x39caabb8]
  41db61:	push   eax
  41db62:	aam    0xf7
  41db64:	mov    BYTE PTR [ebx+0x40],bl
  41db67:	and    dl,BYTE PTR [ecx-0x7d]
  41db6a:	int3   
  41db6b:	(bad)  
  41db6d:	sub    DWORD PTR [ecx+0x44],eax
  41db70:	ret    0x2317
  41db73:	xor    BYTE PTR [esi-0x18027cc6],0x49
  41db7a:	sub    eax,0xce118f27
  41db7f:	iret   
  41db80:	jp     0x41db3e
  41db82:	pop    esi
  41db83:	enter  0x5c0d,0xb3
  41db87:	imul   esp,esi,0xffffffb6
  41db8a:	pop    eax
  41db8b:	dec    edx
  41db8c:	add    al,0x49
  41db8e:	popa   
  41db8f:	cmp    DWORD PTR [edi],0x7dfeb5d1
  41db95:	in     al,0xe8
  41db97:	outs   dx,DWORD PTR ds:[esi]
  41db98:	fsubrp st(7),st
  41db9a:	push   edx
  41db9b:	mov    ds:0x14885b62,eax
  41dba0:	pop    es
  41dba1:	aad    0x71
  41dba3:	ret    
  41dba4:	inc    esi
  41dba5:	lahf   
  41dba6:	inc    edi
  41dba7:	test   dh,al
  41dba9:	fld    QWORD PTR [esi+edi*1+0x13]
  41dbad:	gs loope 0x41db36
  41dbb0:	test   al,0x9a
  41dbb2:	in     eax,0xb7
  41dbb4:	mov    ecx,0x113b2223
  41dbb9:	paddusb mm2,mm6
  41dbbc:	push   ebx
  41dbbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbbe:	pop    ebx
  41dbbf:	aam    0x34
  41dbc1:	inc    ecx
  41dbc2:	fs call 0x830a:0x3ce3b98f
  41dbca:	pop    esi
  41dbcb:	pop    edx
  41dbcc:	test   dl,ah
  41dbce:	test   DWORD PTR es:[esi],esi
  41dbd1:	add    DWORD PTR [ecx],esp
  41dbd3:	dec    eax
  41dbd4:	repz xchg edx,eax
  41dbd6:	cmp    ch,dl
  41dbd8:	or     al,0xae
  41dbda:	add    DWORD PTR [ebp+0xf],0x7f
  41dbde:	cwde   
  41dbdf:	aam    0x10
  41dbe1:	mov    ah,0x8
  41dbe3:	dec    edi
  41dbe4:	ret    
  41dbe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbe6:	pop    esp
  41dbe7:	in     al,dx
  41dbe8:	xchg   ah,cl
  41dbea:	xchg   esi,eax
  41dbeb:	jge    0x41dc16
  41dbed:	cld    
  41dbee:	aaa    
  41dbef:	ds cli 
  41dbf1:	fs pusha 
  41dbf3:	je     0x41dc42
  41dbf5:	push   ds
  41dbf6:	into   
  41dbf7:	cs xor al,0x1c
  41dbfa:	les    esi,FWORD PTR [ebx+0x27]
  41dbfd:	out    dx,al
  41dbfe:	ret    
  41dbff:	mov    WORD PTR [ecx+0x7b],fs
  41dc02:	jl     0x41dc0b
  41dc04:	xchg   edi,eax
  41dc05:	sub    ch,BYTE PTR [ecx-0x2b]
  41dc08:	scas   eax,DWORD PTR es:[edi]
  41dc09:	rcr    DWORD PTR [edi+0x73],0x98
  41dc0d:	stos   BYTE PTR es:[edi],al
  41dc0e:	xor    BYTE PTR [edi],bh
  41dc10:	test   ah,bl
  41dc12:	cmp    eax,0x38daba30
  41dc17:	and    al,0xb
  41dc19:	inc    dh
  41dc1b:	popa   
  41dc1c:	aam    0xaa
  41dc1e:	adc    cl,bh
  41dc20:	loopne 0x41dbd9
  41dc22:	mov    ds:0xb1ce2b34,eax
  41dc27:	xor    edi,edi
  41dc29:	test   BYTE PTR [ecx-0x10ae3aa6],cl
  41dc2f:	fs jecxz 0x41dbbd
  41dc32:	cmp    ecx,DWORD PTR [edi-0x1ff18e17]
  41dc38:	push   ecx
  41dc39:	adc    ecx,DWORD PTR [ebx+0x15]
  41dc3c:	pop    ds
  41dc3d:	(bad)  
  41dc3e:	cli    
  41dc3f:	add    ah,BYTE PTR [ecx]
  41dc41:	or     BYTE PTR [esi],al
  41dc43:	shr    esi,1
  41dc45:	les    esp,FWORD PTR [edx+0x1cec736a]
  41dc4b:	ret    
  41dc4c:	xlat   BYTE PTR ds:[ebx]
  41dc4d:	in     eax,0x33
  41dc4f:	jp     0x41dcbb
  41dc51:	lea    eax,[esi+0x5bf98047]
  41dc57:	or     eax,0xd225bd14
  41dc5c:	test   BYTE PTR [ebx-0x1e],ah
  41dc5f:	mov    ds:0x8a8e7b35,eax
  41dc64:	mov    cl,0x57
  41dc66:	fwait
  41dc67:	xchg   ebp,eax
  41dc68:	sbb    DWORD PTR es:[esi],0x5be51077
  41dc6f:	fisttp DWORD PTR [ecx+eiz*2+0x7236fd2c]
  41dc76:	stos   BYTE PTR es:[edi],al
  41dc77:	ins    DWORD PTR es:[edi],dx
  41dc78:	lock test eax,0x5cff3cdf
  41dc7e:	leave  
  41dc7f:	lods   al,BYTE PTR ds:[esi]
  41dc80:	das    
  41dc81:	fidivr WORD PTR [ecx-0x1c81d59b]
  41dc87:	sar    BYTE PTR [eax],cl
  41dc89:	jno    0x41dcc7
  41dc8b:	dec    ebp
  41dc8c:	rol    DWORD PTR [edi+0x3d2166d3],cl
  41dc92:	adc    dh,al
  41dc94:	cs jmp 0xd0f4:0xe82499ef
  41dc9c:	mov    dh,0xd5
  41dc9e:	pop    ss
  41dc9f:	xchg   ebx,eax
  41dca0:	xor    al,0xb2
  41dca2:	push   ebp
  41dca3:	and    BYTE PTR [edi+0x1dfd31d4],cl
  41dca9:	pop    ebx
  41dcaa:	sbb    esp,0xf53c7471
  41dcb0:	cmp    BYTE PTR [esp+esi*8+0x50136938],ch
  41dcb7:	out    0x71,al
  41dcb9:	inc    esi
  41dcba:	sbb    BYTE PTR [esi],bh
  41dcbc:	scas   al,BYTE PTR es:[edi]
  41dcbd:	ds ja  0x41dc97
  41dcc0:	(bad)  
  41dcc2:	sbb    eax,0xcd7ec47d
  41dcc7:	popa   
  41dcc8:	fild   WORD PTR [ebx]
  41dcca:	(bad)  
  41dccb:	out    0x5c,eax
  41dccd:	push   0xd9b1cc72
  41dcd2:	fnstcw WORD PTR [eax+0x6da04aa5]
  41dcd8:	pushf  
  41dcd9:	mov    ds:0x5a690ed2,al
  41dcde:	inc    ebx
  41dcdf:	push   es
  41dce0:	lea    ebx,[eax+0x1f]
  41dce3:	mov    ebx,0x9b3ffa7b
  41dce8:	imul   edx,DWORD PTR [esi],0xffffffcc
  41dceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcec:	jecxz  0x41dce7
  41dcee:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41dcf0:	add    dl,BYTE PTR [esi+0x5b]
  41dcf3:	aad    0x52
  41dcf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf6:	xlat   BYTE PTR ds:[ebx]
  41dcf7:	mov    esp,0x8393175
  41dcfc:	(bad)  
  41dcfd:	mov    DWORD PTR [eax+0x8ace9a7],edi
  41dd03:	(bad)  
  41dd04:	xor    DWORD PTR [edx],edi
  41dd06:	idiv   BYTE PTR [edi]
  41dd08:	in     eax,0x17
  41dd0a:	and    BYTE PTR [ecx-0x14],bh
  41dd0d:	mov    eax,edx
  41dd0f:	lods   eax,DWORD PTR ds:[esi]
  41dd10:	icebp  
  41dd11:	repnz mov ss,WORD PTR [esi+0x1fe54952]
  41dd18:	std    
  41dd19:	repnz jmp 0xb6:0x87492698
  41dd21:	push   ds
  41dd22:	adc    ch,BYTE PTR [edx-0x1180c71d]
  41dd28:	adc    DWORD PTR [eax+0x4b7673cc],ebx
  41dd2e:	call   0xb4c0:0xab966fb6
  41dd35:	sbb    BYTE PTR [ebp+0x79150345],dl
  41dd3b:	xchg   bl,al
  41dd3d:	aaa    
  41dd3e:	out    dx,al
  41dd3f:	jmp    0x1be0f718
  41dd44:	xchg   esi,eax
  41dd45:	pop    esi
  41dd46:	pop    esi
  41dd47:	loope  0x41ddb7
  41dd49:	loope  0x41dd4a
  41dd4b:	fistp  QWORD PTR [esi-0x4f]
  41dd4e:	xor    al,0x1a
  41dd50:	pop    ecx
  41dd51:	repz cs leave 
  41dd54:	add    ch,cl
  41dd56:	push   ebp
  41dd57:	add    DWORD PTR [eax],eax
  41dd59:	clc    
  41dd5a:	add    al,0x0
  41dd5c:	add    BYTE PTR [edx+0x7e],cl
  41dd5f:	lock add DWORD PTR [ebp+0x57],ebx
  41dd63:	pop    ecx
  41dd64:	cwde   
  41dd65:	cmc    
  41dd66:	aad    0x3a
  41dd68:	mov    esi,0x148c91ae
  41dd6d:	and    ecx,DWORD PTR [eax]
  41dd6f:	aad    0x8
  41dd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd72:	cwde   
  41dd73:	lods   eax,DWORD PTR ds:[esi]
  41dd74:	cdq    
  41dd75:	sbb    eax,ebp
  41dd77:	sbb    eax,DWORD PTR [ebp-0x5f85bc75]
  41dd7d:	loope  0x41ddd8
  41dd7f:	pop    esi
  41dd80:	stc    
  41dd81:	pop    ebx
  41dd82:	out    dx,al
  41dd83:	xchg   ebp,eax
  41dd84:	es pop ss
  41dd86:	push   ds
  41dd87:	dec    eax
  41dd88:	sub    DWORD PTR [edi+0x70],esp
  41dd8b:	jp     0x41ddb8
  41dd8d:	mov    ebx,0x9192062a
  41dd92:	aas    
  41dd93:	dec    edx
  41dd94:	retf   0xebcc
  41dd97:	sbb    bl,BYTE PTR [eax]
  41dd99:	push   0x7a
  41dd9b:	std    
  41dd9c:	ficom  WORD PTR [ebx-0x79ccdd0f]
  41dda2:	and    eax,0x3399bd39
  41dda7:	cs cli 
  41dda9:	add    BYTE PTR [eax-0x4ccace09],dh
  41ddaf:	and    eax,0x59a5340
  41ddb4:	pop    esp
  41ddb5:	sahf   
  41ddb6:	and    al,0x1a
  41ddb8:	sahf   
  41ddb9:	cli    
  41ddba:	loopne 0x41de35
  41ddbc:	mov    ch,0x35
  41ddbe:	in     eax,0xc5
  41ddc0:	lods   al,BYTE PTR ds:[esi]
  41ddc1:	(bad)  
  41ddc2:	push   edi
  41ddc3:	stos   BYTE PTR es:[edi],al
  41ddc4:	jmp    0xf547:0xc689d036
  41ddcb:	daa    
  41ddcc:	rol    DWORD PTR [ecx+0x344f22de],cl
  41ddd2:	scas   al,BYTE PTR es:[edi]
  41ddd3:	cld    
  41ddd4:	(bad)  
  41ddd5:	into   
  41ddd6:	lea    eax,[eax-0x70]
  41ddd9:	scas   al,BYTE PTR es:[edi]
  41ddda:	cmp    edx,DWORD PTR [ebp+0x666f8efd]
  41dde0:	test   al,0xcc
  41dde2:	popw   es
  41dde4:	(bad)  
  41dde5:	int3   
  41dde6:	mov    cl,0xb8
  41dde8:	mov    esi,0x9f4b5f67
  41dded:	sbb    eax,0xf88487f2
  41ddf2:	xchg   ecx,eax
  41ddf3:	and    cl,BYTE PTR [eax+0x421215e2]
  41ddf9:	enter  0xe6b3,0x9b
  41ddfd:	imul   eax,edi,0xffffffca
  41de00:	mov    dh,0x96
  41de02:	daa    
  41de03:	add    DWORD PTR [edx],ebp
  41de05:	repnz cmp DWORD PTR ds:0x1e0d55c7,esp
  41de0c:	repnz and bl,BYTE PTR [edi+0x556cdd75]
  41de13:	inc    ebp
  41de14:	mov    ds:0x5896341e,eax
  41de19:	mov    cl,0x38
  41de1b:	sub    ecx,ebx
  41de1d:	push   ss
  41de1e:	mov    ebp,0x30521ad0
  41de23:	jle    0x41de4e
  41de25:	fadd   QWORD PTR [edx+0x5a0e2c6c]
  41de2b:	int3   
  41de2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de2d:	pop    edi
  41de2e:	and    al,0x74
  41de30:	iret   
  41de31:	sbb    al,0x3b
  41de33:	jno    0x41de2c
  41de35:	jns    0x41dddd
  41de37:	lods   al,BYTE PTR ds:[esi]
  41de38:	jg     0x41de84
  41de3a:	fstp   TBYTE PTR [eax]
  41de3c:	xor    DWORD PTR [edx-0x3121270c],edx
  41de42:	xor    eax,DWORD PTR [ecx-0xd117bc8]
  41de48:	and    al,0x6d
  41de4a:	xlat   BYTE PTR ds:[ebx]
  41de4b:	int3   
  41de4c:	jnp    0x41de15
  41de4e:	or     BYTE PTR [edx+ecx*2+0x12],dl
  41de52:	mov    cl,0x75
  41de54:	fdiv   QWORD PTR [ecx]
  41de56:	jmp    0x2b36:0x3ab416b2
  41de5d:	jnp    0x41ded6
  41de5f:	sbb    DWORD PTR [ebp+0xe886481],ebp
  41de65:	pop    eax
  41de66:	mov    ds:0xfa23fcd8,al
  41de6b:	mov    esp,0x4c63a8d5
  41de70:	lahf   
  41de71:	adc    esp,esi
  41de73:	ds in  al,0x8
  41de76:	xor    al,0x59
  41de78:	mov    esp,DWORD PTR [eax+0x5a2effdd]
  41de7e:	pop    esp
  41de7f:	imul   BYTE PTR [edi+0x38]
  41de82:	sub    DWORD PTR [ecx],edx
  41de84:	iret   
  41de85:	or     eax,0xc48f4f46
  41de8a:	lea    esp,[edx]
  41de8c:	ins    BYTE PTR es:[edi],dx
  41de8d:	loop   0x41de84
  41de8f:	rcl    BYTE PTR [eax-0x738d1417],1
  41de95:	xor    al,BYTE PTR [ecx+0x6d]
  41de98:	mov    edi,0xae66089e
  41de9d:	mov    ds:0xe850dbb4,al
  41dea2:	sub    DWORD PTR [ebx-0x49],edx
  41dea5:	push   edx
  41dea6:	mov    bh,0x7e
  41dea8:	push   eax
  41dea9:	cs sahf 
  41deab:	inc    esi
  41deac:	jae    0x41df00
  41deae:	arpl   ax,sp
  41deb0:	aad    0xd1
  41deb2:	loope  0x41deff
  41deb4:	xchg   edi,eax
  41deb5:	lahf   
  41deb6:	xor    eax,0xea022773
  41debb:	sahf   
  41debc:	in     eax,dx
  41debd:	test   al,0x1f
  41debf:	test   BYTE PTR [edx+0x24df0a61],cl
  41dec5:	in     al,dx
  41dec6:	mov    dh,BYTE PTR [ebx+0x1460690a]
  41decc:	les    edi,FWORD PTR [edx-0x77405e91]
  41ded2:	pop    edx
  41ded3:	inc    esp
  41ded4:	iret   
  41ded5:	jo     0x41dede
  41ded7:	add    eax,0x623e903b
  41dedc:	in     al,dx
  41dedd:	lahf   
  41dede:	pop    es
  41dedf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dee0:	and    dl,bl
  41dee2:	adc    BYTE PTR [ecx+0x38],bl
  41dee5:	mov    ds:0xbebcdb45,al
  41deea:	aam    0xbe
  41deec:	ret    
  41deed:	pop    ss
  41deee:	shr    edx,cl
  41def0:	push   0xc2f0ae33
  41def5:	xor    DWORD PTR [ecx],ebx
  41def7:	ss and esp,0x13
  41defb:	mov    ds:0x4c858af1,eax
  41df00:	sti    
  41df01:	adc    al,cl
  41df03:	push   ds
  41df04:	add    al,0xd8
  41df06:	sbb    DWORD PTR [edi+0x19e19eb5],edi
  41df0c:	dec    edx
  41df0d:	(bad)  
  41df0e:	daa    
  41df0f:	mov    bl,0x8c
  41df11:	push   ss
  41df12:	xor    eax,0x2d3567a4
  41df17:	push   eax
  41df18:	popf   
  41df19:	xlat   BYTE PTR ds:[ebx]
  41df1a:	adc    DWORD PTR [eax],ecx
  41df1c:	inc    edx
  41df1d:	add    BYTE PTR [ecx],0x96
  41df20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df21:	imul   edi,DWORD PTR [edx-0x5494cfb3],0xffffffef
  41df28:	pop    edx
  41df29:	neg    DWORD PTR [ecx*8+0x1ae5d0bd]
  41df30:	cmp    al,0x3d
  41df32:	fdiv   st,st(6)
  41df34:	repnz push ds
  41df36:	push   ebp
  41df38:	mov    al,0xbb
  41df3a:	jae    0x41df41
  41df3c:	retf   
  41df3d:	retf   0xec47
  41df40:	nop
  41df41:	xor    eax,0x2589d778
  41df46:	sbb    al,0x41
  41df48:	sub    DWORD PTR [ebx-0x370680e],0xfffffffd
  41df4f:	push   ecx
  41df50:	adc    BYTE PTR [edi-0x75],0x30
  41df54:	lods   al,BYTE PTR ds:[esi]
  41df55:	repz jns 0x41df23
  41df58:	push   ecx
  41df59:	dec    ebp
  41df5a:	int3   
  41df5b:	loope  0x41df99
  41df5d:	call   0xb5a4:0xe4fa9bf
  41df64:	cmp    cl,BYTE PTR [eax+eiz*1+0x52]
  41df68:	lahf   
  41df69:	retf   0x677
  41df6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df6d:	mov    ch,0xa4
  41df6f:	sub    eax,0x37f57826
  41df74:	inc    edi
  41df75:	lahf   
  41df76:	mov    ch,0x15
  41df78:	push   ss
  41df79:	shl    DWORD PTR [ecx-0x51],cl
  41df7c:	inc    esi
  41df7d:	mov    ah,0x1
  41df7f:	cmp    eax,0x21feb7b
  41df84:	push   ss
  41df85:	mov    dh,0xf7
  41df87:	pushf  
  41df88:	aad    0x53
  41df8a:	inc    esp
  41df8b:	sub    al,0x8c
  41df8d:	int3   
  41df8e:	mov    bl,0x99
  41df90:	mov    ch,0xd2
  41df92:	sub    edi,edx
  41df94:	sbb    DWORD PTR [ebp-0x3254a97f],edx
  41df9a:	mov    esi,edx
  41df9c:	dec    esi
  41df9d:	mov    ch,0x2a
  41df9f:	xor    eax,ebx
  41dfa1:	adc    BYTE PTR [eax-0x45],bl
  41dfa4:	loopne 0x41dffe
  41dfa6:	in     al,dx
  41dfa7:	inc    eax
  41dfa8:	sbb    edi,0xffffff8d
  41dfab:	dec    ecx
  41dfac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfad:	arpl   sp,dx
  41dfaf:	ja     0x41df9d
  41dfb1:	shr    DWORD PTR [ebx],cl
  41dfb3:	sbb    eax,DWORD PTR [eax+ebx*8]
  41dfb6:	dec    esp
  41dfb7:	mov    ecx,0xee9a645c
  41dfbc:	fwait
  41dfbd:	xchg   DWORD PTR [ebx+0x43cc6cbb],edi
  41dfc3:	xor    al,BYTE PTR [esi+0x5c98ec6f]
  41dfc9:	lods   eax,DWORD PTR ds:[esi]
  41dfca:	bnd jg 0x41dfda
  41dfcd:	adc    DWORD PTR [ebx],edi
  41dfcf:	hlt    
  41dfd0:	inc    esp
  41dfd1:	pushf  
  41dfd2:	aam    0x79
  41dfd4:	stos   BYTE PTR es:[edi],al
  41dfd5:	outs   dx,DWORD PTR ds:[esi]
  41dfd6:	aaa    
  41dfd7:	sbb    DWORD PTR [edx],eax
  41dfd9:	inc    ebp
  41dfda:	and    BYTE PTR [ecx+0x663237e5],ah
  41dfe0:	fdiv   QWORD PTR [esi-0xb659496]
  41dfe6:	cmp    eax,0x34925f41
  41dfeb:	dec    esi
  41dfec:	inc    edi
  41dfed:	and    edx,edi
  41dfef:	out    0x2d,eax
  41dff1:	sub    eax,0xa828ed99
  41dff6:	dec    ebp
  41dff7:	inc    edi
  41dff8:	push   cs
  41dff9:	fdivr  st(1),st
  41dffb:	push   edx
  41dffc:	nop
  41dffd:	cmp    BYTE PTR [edx+0x56],dl
  41e000:	das    
  41e001:	inc    ebp
  41e002:	iret   
  41e003:	xor    BYTE PTR [eax],dh
  41e005:	jmp    0x41dfae
  41e007:	jae    0x41e02b
  41e009:	pop    ebp
  41e00a:	cs data16 mov bh,0x26
  41e00e:	pop    eax
  41e00f:	or     esi,eax
  41e011:	xor    DWORD PTR ds:0x71e227d6,ebp
  41e017:	sti    
  41e018:	inc    esi
  41e019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e01a:	jmp    0x41dfb3
  41e01c:	(bad)  
  41e01d:	xor    al,0x92
  41e01f:	sar    DWORD PTR [ebx],cl
  41e021:	loop   0x41e06f
  41e023:	test   bl,0xbf
  41e026:	push   ecx
  41e027:	neg    dh
  41e029:	js     0x41e051
  41e02b:	xchg   ebx,eax
  41e02c:	inc    edi
  41e02d:	shl    esi,0xd4
  41e030:	icebp  
  41e031:	clc    
  41e032:	arpl   WORD PTR [edi],sp
  41e034:	fisttp DWORD PTR [eax+0x5afb61af]
  41e03a:	sub    al,0x9c
  41e03c:	pop    esi
  41e03d:	jo     0x41e0be
  41e03f:	ds syscall 
  41e042:	idiv   eax
  41e044:	jne    0x41e069
  41e046:	mov    al,ds:0x1dae7c6f
  41e04b:	cwde   
  41e04c:	popf   
  41e04d:	sub    edx,DWORD PTR [ebp-0x4aa3c9d1]
  41e053:	hlt    
  41e054:	push   0xe6ba3e2d
  41e059:	es icebp 
  41e05b:	mov    eax,0xf05c3bd4
  41e060:	shr    BYTE PTR [edi+0xc4c4e0e],cl
  41e066:	adc    eax,0x3b79293d
  41e06b:	mul    edi
  41e06d:	xor    DWORD PTR [edx+esi*8],esi
  41e070:	jbe    0x41e094
  41e072:	dec    ebx
  41e073:	lahf   
  41e074:	pusha  
  41e075:	xchg   ecx,eax
  41e076:	or     eax,DWORD PTR [eax+esi*1]
  41e079:	jne    0x41e0d9
  41e07b:	sbb    ebp,DWORD PTR [eax+0x49a27e0a]
  41e081:	das    
  41e082:	cmp    eax,0x31dd1c1
  41e087:	inc    esp
  41e088:	repz xchg esi,eax
  41e08a:	jmp    0x41e028
  41e08c:	sub    bl,BYTE PTR [esi-0x71]
  41e08f:	sbb    DWORD PTR [esi+edx*1],esp
  41e092:	jno    0x41e091
  41e094:	sub    eax,0x27a6ce64
  41e099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e09a:	xchg   esp,eax
  41e09b:	nop
  41e09c:	in     al,0xb7
  41e09e:	aaa    
  41e09f:	xor    ch,BYTE PTR [eax+0x3f]
  41e0a2:	in     al,0x24
  41e0a4:	test   bl,bh
  41e0a6:	pop    es
  41e0a7:	or     eax,0x9619a2a8
  41e0ac:	and    BYTE PTR [eax],ah
  41e0ae:	daa    
  41e0af:	jae    0x41e10d
  41e0b1:	add    esi,DWORD PTR [esi+0xe5f823c]
  41e0b7:	(bad)  
  41e0b8:	cdq    
  41e0b9:	test   al,0xa3
  41e0bb:	out    dx,eax
  41e0bc:	clc    
  41e0bd:	cmp    al,0x2
  41e0bf:	test   BYTE PTR [esp+edi*8-0x174d96ac],ch
  41e0c6:	dec    ebx
  41e0c7:	lods   al,BYTE PTR ds:[esi]
  41e0c8:	xchg   esp,ebp
  41e0ca:	les    esi,FWORD PTR [ebx+ebx*8+0x1363c02a]
  41e0d1:	cmc    
  41e0d2:	das    
  41e0d3:	ror    ah,cl
  41e0d5:	cli    
  41e0d6:	loop   0x41e088
  41e0d8:	mov    dl,0x13
  41e0da:	sbb    esi,DWORD PTR [ebx+0x6e]
  41e0dd:	or     al,0xc2
  41e0df:	mov    al,BYTE PTR [ebp+0x3e7ce16e]
  41e0e5:	cdq    
  41e0e6:	xchg   esi,eax
  41e0e7:	add    eax,0x5b92c952
  41e0ec:	ja     0x41e0ff
  41e0ee:	xchg   esi,eax
  41e0ef:	push   edx
  41e0f0:	xchg   ebp,eax
  41e0f1:	lods   al,BYTE PTR ds:[esi]
  41e0f2:	nop
  41e0f3:	sub    al,0x6c
  41e0f5:	cmp    dl,BYTE PTR [esi-0x15a28175]
  41e0fb:	sub    edi,DWORD PTR [ecx+edx*2-0x3e9835b2]
  41e102:	jno    0x41e135
  41e104:	mov    DWORD PTR [esp+ecx*8],eax
  41e107:	fistp  QWORD PTR [eax]
  41e109:	xchg   BYTE PTR [eax+0xe7a6298],ah
  41e10f:	retf   0x353a
  41e112:	stos   BYTE PTR es:[edi],al
  41e113:	pop    ds
  41e114:	push   eax
  41e115:	dec    ebp
  41e116:	sbb    BYTE PTR [edx],bh
  41e118:	je     0x41e153
  41e11a:	test   al,0x96
  41e11c:	rol    DWORD PTR [eax+0x4],0xa
  41e120:	aam    0xc5
  41e122:	add    DWORD PTR [eax-0x6c],esp
  41e125:	ja     0x41e0d2
  41e127:	fsubrp st(0),st
  41e129:	sbb    ebx,DWORD PTR [edx-0x5dad0ca2]
  41e12f:	fs jnp 0x41e17d
  41e132:	aam    0x6b
  41e134:	dec    esi
  41e135:	cmp    edi,DWORD PTR [ecx+0x337fd7a6]
  41e13b:	adc    ebx,DWORD PTR [edi-0x37221f7d]
  41e141:	push   0xffffffdc
  41e143:	xchg   ebx,eax
  41e144:	ret    
  41e145:	pop    ebp
  41e146:	pop    esp
  41e147:	enter  0x48cf,0xb2
  41e14b:	in     al,0xe3
  41e14d:	je     0x41e1b9
  41e14f:	and    al,0xcc
  41e151:	xchg   ebp,eax
  41e152:	push   edi
  41e153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e154:	inc    ebx
  41e155:	iret   
  41e156:	mov    bh,0xf5
  41e158:	or     edx,esi
  41e15a:	push   edx
  41e15b:	les    edi,FWORD PTR [edi+0x1b]
  41e15e:	dec    esp
  41e15f:	jbe    0x41e1c5
  41e161:	test   eax,0x3673f327
  41e166:	into   
  41e167:	mov    edx,DWORD PTR [eax+0xa5b1b50]
  41e16d:	leave  
  41e16e:	shl    BYTE PTR [ecx-0x12238b24],1
  41e174:	dec    edi
  41e175:	xchg   DWORD PTR [ecx],ebp
  41e177:	sti    
  41e178:	adc    DWORD PTR [edi],esp
  41e17a:	inc    ebx
  41e17b:	jmp    FWORD PTR [esi+0x6b]
  41e17e:	out    dx,eax
  41e17f:	in     al,dx
  41e180:	fbstp  TBYTE PTR ds:0x7de3ee8f
  41e186:	and    DWORD PTR [ebx-0x3],edx
  41e189:	xor    eax,0x7c50d5f2
  41e18e:	mov    al,0xf6
  41e190:	push   esi
  41e191:	(bad)  
  41e192:	push   0x13216e9a
  41e197:	cmp    DWORD PTR [eax-0x25],ebp
  41e19a:	mov    DWORD PTR [ebp-0x4298ee3d],ebp
  41e1a0:	outs   dx,DWORD PTR ds:[esi]
  41e1a1:	mov    dh,0xc0
  41e1a3:	fcmovnb st,st(3)
  41e1a5:	arpl   WORD PTR [esi],bx
  41e1a7:	inc    ebx
  41e1a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a9:	ins    BYTE PTR es:[edi],dx
  41e1aa:	(bad)  
  41e1ab:	pop    esp
  41e1ac:	out    0x2b,eax
  41e1ae:	sahf   
  41e1af:	cwde   
  41e1b0:	aas    
  41e1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1b2:	test   eax,ebp
  41e1b4:	sub    al,BYTE PTR [edx-0x6b]
  41e1b7:	ds std 
  41e1b9:	jge    0x41e1b6
  41e1bb:	dec    ecx
  41e1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1bd:	into   
  41e1be:	mov    eax,0x5aa4e67
  41e1c3:	mov    bh,0xb5
  41e1c5:	dec    esp
  41e1c6:	retf   0xa432
  41e1c9:	(bad)  
  41e1ca:	fiadd  DWORD PTR [edx]
  41e1cc:	dec    ecx
  41e1cd:	dec    ecx
  41e1ce:	xor    eax,0xd3c7a997
  41e1d3:	or     al,0xd8
  41e1d5:	inc    ebx
  41e1d6:	xor    ah,ch
  41e1d8:	sub    edi,DWORD PTR [eax+0x25a6d3ba]
  41e1de:	push   ebx
  41e1df:	mov    ch,0x5a
  41e1e1:	por    mm3,QWORD PTR [edi-0xa]
  41e1e5:	jnp    0x41e172
  41e1e7:	dec    ebp
  41e1e8:	sbb    dl,dl
  41e1ea:	shr    esp,1
  41e1ec:	and    eax,0x13f995a2
  41e1f1:	imul   ebx,DWORD PTR [edi+edx*8+0x66],0x5b
  41e1f6:	sub    bh,BYTE PTR [ebx-0x61]
  41e1f9:	lods   eax,DWORD PTR ds:[esi]
  41e1fa:	pop    ebx
  41e1fb:	xchg   edi,eax
  41e1fc:	and    ah,BYTE PTR [edi+0x5ee63866]
  41e202:	add    DWORD PTR [eax-0x580ae852],esi
  41e208:	popa   
  41e209:	sub    al,0x34
  41e20b:	mov    ah,0xe
  41e20d:	jno    0x41e207
  41e20f:	and    al,0x3d
  41e211:	mov    edi,0xc6424106
  41e216:	(bad)  
  41e217:	sbb    BYTE PTR [ebp-0x6],al
  41e21a:	cmc    
  41e21b:	cmp    eax,0x24b344d
  41e220:	ds push esi
  41e222:	cmp    eax,0x97875e3a
  41e227:	fs pop ebx
  41e229:	jge    0x41e257
  41e22b:	pop    esp
  41e22c:	inc    edx
  41e22d:	jl     0x41e1b0
  41e22f:	sbb    eax,0x7d15ccc1
  41e234:	mov    ebx,0x4f59279
  41e239:	dec    ecx
  41e23a:	xor    edx,DWORD PTR [edx+0x2]
  41e23d:	neg    DWORD PTR [ebx-0x4d]
  41e240:	sub    al,0xc5
  41e242:	adc    al,0xe8
  41e244:	int3   
  41e245:	mov    bh,0xd4
  41e247:	sbb    DWORD PTR [eax],ebx
  41e249:	loope  0x41e2b2
  41e24b:	push   0x37
  41e24d:	test   DWORD PTR [eax],eax
  41e24f:	mov    ebp,0x55b4a23b
  41e254:	jmp    ecx
  41e256:	test   BYTE PTR [esi-0x80d1810],al
  41e25c:	xchg   ebp,eax
  41e25d:	aam    0x7a
  41e25f:	js     0x41e270
  41e261:	sbb    dl,ch
  41e263:	je     0x41e203
  41e265:	lds    ebx,FWORD PTR [edx+0x1]
  41e268:	add    al,bh
  41e26a:	add    al,0x0
  41e26c:	add    dh,bh
  41e26e:	jb     0x41e280
  41e270:	push   ss
  41e271:	mov    edx,0x737a5b30
  41e276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e277:	cmp    DWORD PTR [eax-0x1e],0xc3e50e7f
  41e27e:	(bad)  
  41e27f:	daa    
  41e280:	ds xor esp,edi
  41e283:	pop    es
  41e284:	jge    0x41e29e
  41e286:	into   
  41e287:	inc    esp
  41e288:	mov    eax,0x345165c1
  41e28d:	jge    0x41e2b4
  41e28f:	ins    DWORD PTR es:[edi],dx
  41e290:	iret   
  41e291:	js     0x41e269
  41e293:	xor    al,0x6c
  41e295:	push   edx
  41e296:	xchg   ebx,eax
  41e297:	or     DWORD PTR [edi+0x5878ba45],ecx
  41e29d:	cdq    
  41e29e:	ja     0x41e26a
  41e2a0:	mov    DWORD PTR [edx+0x4f2115b7],ebp
  41e2a6:	jne    0x41e2ab
  41e2a8:	or     eax,0x9dd3ba0b
  41e2ad:	into   
  41e2ae:	aaa    
  41e2af:	call   0xd578:0x606611ce
  41e2b6:	cmp    esp,ebp
  41e2b8:	shl    BYTE PTR [esi-0x1abebcbf],0x85
  41e2bf:	fwait
  41e2c0:	sar    DWORD PTR [edi-0x41f484b9],1
  41e2c6:	pop    es
  41e2c7:	cmc    
  41e2c8:	and    esi,DWORD PTR [edx+0x55]
  41e2cb:	fwait
  41e2cc:	sti    
  41e2cd:	fsubr  DWORD PTR [ebx]
  41e2cf:	add    BYTE PTR [esi],cl
  41e2d1:	add    edx,0x4cfb6766
  41e2d7:	adc    DWORD PTR [ecx-0x21e662f6],edi
  41e2dd:	push   edx
  41e2de:	ficomp WORD PTR [ebx]
  41e2e0:	js     0x41e283
  41e2e2:	and    dh,BYTE PTR [esi+0x3f6f21ab]
  41e2e8:	cmp    bl,bh
  41e2ea:	xor    al,0x1b
  41e2ec:	cli    
  41e2ed:	push   eax
  41e2ee:	cld    
  41e2ef:	out    0x91,eax
  41e2f1:	jl     0x41e2f3
  41e2f3:	aam    0x87
  41e2f5:	mov    ds:0x69a2b848,eax
  41e2fa:	mov    dh,0x58
  41e2fc:	push   0xf7807f6
  41e301:	dec    esi
  41e302:	scas   eax,DWORD PTR es:[edi]
  41e303:	leave  
  41e304:	stos   BYTE PTR es:[edi],al
  41e305:	lds    esp,FWORD PTR [esi-0x1c3df8a]
  41e30b:	aas    
  41e30c:	mov    al,ds:0xc9d87cc2
  41e311:	jmp    0x2a21ae5c
  41e316:	jne    0x41e2d1
  41e318:	int3   
  41e319:	aaa    
  41e31a:	mov    ebx,0x69ae3277
  41e31f:	cli    
  41e320:	mov    al,BYTE PTR [ebx+edx*4-0x4a4e352e]
  41e327:	pushf  
  41e328:	inc    eax
  41e329:	or     edi,ecx
  41e32b:	call   0xb35dc6eb
  41e330:	jmp    0x41e2df
  41e332:	pop    es
  41e333:	lods   eax,DWORD PTR ds:[esi]
  41e334:	stc    
  41e335:	mov    ss,WORD PTR [ecx-0x63]
  41e338:	icebp  
  41e339:	sub    edi,esi
  41e33b:	push   ds
  41e33c:	cli    
  41e33d:	sbb    dh,BYTE PTR [esp+ecx*4-0x76c6c209]
  41e344:	mov    edx,0xfb3a4f47
  41e349:	loop   0x41e2e0
  41e34b:	ins    DWORD PTR es:[edi],dx
  41e34c:	push   0xffffffe6
  41e34e:	pop    edi
  41e34f:	push   ss
  41e350:	or     edi,DWORD PTR [ecx]
  41e352:	adc    BYTE PTR [edx-0x2baf24df],ch
  41e358:	mov    cs,ebp
  41e35a:	mov    bl,0xbf
  41e35c:	adc    al,bh
  41e35e:	pop    es
  41e35f:	mov    edx,0xbbc64569
  41e364:	fidiv  WORD PTR [ebx]
  41e366:	push   es
  41e367:	cmp    eax,0x1bdf1ea2
  41e36c:	sub    al,0x26
  41e36e:	add    DWORD PTR [edi],0xffffffd8
  41e371:	jbe    0x41e34c
  41e373:	xor    DWORD PTR [ebx+0x1e34bb64],esp
  41e379:	aas    
  41e37a:	cmp    al,BYTE PTR [ecx+edx*8]
  41e37d:	lods   al,BYTE PTR ds:[esi]
  41e37e:	std    
  41e37f:	mov    ds:0xb75fffe3,eax
  41e384:	xchg   DWORD PTR [edi+0x47],esi
  41e387:	je     0x41e3f2
  41e389:	loopne 0x41e36e
  41e38b:	cwde   
  41e38c:	mov    al,ds:0x56b73498
  41e391:	cld    
  41e392:	popf   
  41e393:	pushf  
  41e394:	sub    al,0xf0
  41e396:	(bad)
  41e399:	mov    esp,0xe22ac43b
  41e39e:	loop   0x41e32d
  41e3a0:	sar    bl,cl
  41e3a2:	inc    edi
  41e3a3:	outs   dx,BYTE PTR ds:[esi]
  41e3a4:	jne    0x41e3c9
  41e3a6:	sbb    BYTE PTR [edi+0x73],al
  41e3a9:	popa   
  41e3aa:	sar    eax,0xb9
  41e3ad:	jo     0x41e3c2
  41e3af:	mov    ds:0x656de42d,al
  41e3b4:	xchg   edx,eax
  41e3b5:	std    
  41e3b6:	inc    eax
  41e3b7:	fstp   TBYTE PTR [eax+0x15]
  41e3ba:	xchg   ebx,eax
  41e3bc:	mov    edi,0x15110aba
  41e3c1:	sub    eax,0x38d1581b
  41e3c6:	xlat   BYTE PTR ds:[ebx]
  41e3c7:	cmp    al,0x3e
  41e3c9:	jl     0x41e439
  41e3cb:	or     DWORD PTR [ecx],eax
  41e3cd:	ja     0x41e42c
  41e3cf:	mov    ch,0xd7
  41e3d1:	xchg   esi,eax
  41e3d2:	sub    BYTE PTR [ebx+0x1c68caaa],al
  41e3d8:	xchg   esi,eax
  41e3d9:	out    0x28,al
  41e3db:	out    0x82,eax
  41e3dd:	dec    esi
  41e3de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3df:	loopne 0x41e3e3
  41e3e1:	and    al,0xdb
  41e3e3:	and    ah,BYTE PTR [eax-0xf5293a2]
  41e3e9:	int    0xc8
  41e3eb:	loope  0x41e402
  41e3ed:	jb     0x41e38b
  41e3ef:	inc    esi
  41e3f0:	sbb    cl,BYTE PTR [edx-0x74]
  41e3f3:	xchg   eax,ebx
  41e3f5:	jmp    0x41e454
  41e3f7:	xor    eax,0x9670eff2
  41e3fc:	ret    
  41e3fd:	mov    esi,0x35c17d77
  41e402:	aas    
  41e403:	cmp    eax,0x56ef52fa
  41e408:	or     al,0xf1
  41e40a:	pop    ecx
  41e40b:	and    ebx,DWORD PTR [ebx+0x70]
  41e40e:	loope  0x41e3b9
  41e410:	cmc    
  41e411:	mov    eax,0xbcb9fbc4
  41e416:	out    dx,eax
  41e417:	ret    0x24a5
  41e41a:	xchg   BYTE PTR [ecx+0x4483540e],bl
  41e420:	pop    ss
  41e421:	rcr    DWORD PTR [ebx-0x1ba8ddb4],0xe1
  41e428:	loopne 0x41e432
  41e42a:	jnp    0x41e43b
  41e42c:	cmc    
  41e42d:	ror    BYTE PTR [esi+0x4c4fd36d],0x9f
  41e434:	mov    bh,0x89
  41e436:	push   ecx
  41e437:	add    ah,cl
  41e439:	imul   ecx,DWORD PTR [edx*4+0x71338e56],0x54
  41e441:	(bad)  
  41e442:	pop    ebx
  41e443:	pop    es
  41e444:	jp     0x41e3c7
  41e446:	das    
  41e447:	dec    edi
  41e448:	test   BYTE PTR [edx+0x5ae0d15],ch
  41e44e:	cwde   
  41e44f:	hlt    
  41e450:	mov    ch,0xb8
  41e452:	pusha  
  41e453:	fimul  DWORD PTR [ebx+0x51c82427]
  41e459:	js     0x41e4d4
  41e45b:	ficom  WORD PTR [edi-0x3]
  41e45e:	cmp    BYTE PTR [ebp+0x3abe5b0],cl
  41e464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e465:	add    eax,0xd4d0e4e7
  41e46a:	sub    esp,edi
  41e46c:	mov    WORD PTR gs:[esi-0x22],?
  41e470:	aas    
  41e471:	shl    BYTE PTR [ebx+0xbe3569e],0x9e
  41e478:	(bad)  
  41e479:	cmp    BYTE PTR [ecx+0x3b],ah
  41e47c:	sub    al,0x67
  41e47e:	pop    edi
  41e47f:	idiv   BYTE PTR [esi]
  41e481:	jb     0x41e438
  41e483:	daa    
  41e484:	mov    ah,0x34
  41e486:	sub    BYTE PTR [edi],bh
  41e488:	xlat   BYTE PTR ds:[ebx]
  41e489:	jmp    0x41e49d
  41e48b:	data16 ja 0x41e4a0
  41e48e:	cli    
  41e48f:	jp     0x41e488
  41e491:	xor    BYTE PTR [esi-0x7276149],dl
  41e497:	scas   al,BYTE PTR es:[edi]
  41e498:	in     eax,0x15
  41e49a:	scas   al,BYTE PTR es:[edi]
  41e49b:	cmp    al,0xf5
  41e49d:	sbb    ch,BYTE PTR [eax+0x2f]
  41e4a0:	pop    edx
  41e4a1:	or     DWORD PTR [edx+0x20],esp
  41e4a4:	arpl   WORD PTR [eax-0x47d2f495],di
  41e4aa:	aad    0x93
  41e4ac:	mov    ah,0xa
  41e4ae:	xchg   esp,eax
  41e4af:	repnz pop ebx
  41e4b1:	test   DWORD PTR [esi+edx*4+0x5374b076],esp
  41e4b8:	mov    dl,0x28
  41e4ba:	out    0x45,eax
  41e4bc:	lods   eax,DWORD PTR ds:[esi]
  41e4bd:	and    eax,0x5c171369
  41e4c2:	pop    edi
  41e4c3:	icebp  
  41e4c4:	jbe    0x41e460
  41e4c6:	dec    edx
  41e4c7:	pop    edx
  41e4c8:	cld    
  41e4c9:	mov    ss,WORD PTR [edi]
  41e4cb:	in     eax,dx
  41e4cc:	je     0x41e470
  41e4ce:	pop    esi
  41e4cf:	and    cl,al
  41e4d1:	(bad)  
  41e4d2:	lea    edi,[edi]
  41e4d4:	adc    ah,dh
  41e4d6:	dec    edi
  41e4d7:	fidivr WORD PTR [esi+ebx*2+0x36]
  41e4db:	jmp    0xcbcdd6ab
  41e4e0:	mov    ebp,0xaf7bdb51
  41e4e5:	lock mov ah,ch
  41e4e8:	std    
  41e4e9:	xor    BYTE PTR ds:0x218ba547,bl
  41e4ef:	push   cs
  41e4f0:	xor    DWORD PTR [esp+edi*8],edx
  41e4f3:	mov    ds:0xc9f54821,al
  41e4f8:	call   0xc945799b
  41e4fd:	sti    
  41e4fe:	loope  0x41e520
  41e500:	icebp  
  41e501:	or     eax,0x5c7e0fb7
  41e506:	mov    esp,0x469ba822
  41e50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e50c:	(bad)  
  41e50d:	push   ebp
  41e50e:	adc    ch,BYTE PTR [edx+0x79fc876b]
  41e514:	(bad)  
  41e516:	adc    BYTE PTR [ebx-0x1e50adcd],ah
  41e51c:	xor    DWORD PTR [ebp-0x70],esi
  41e51f:	push   edi
  41e520:	(bad)  [ebp+0x1b396c82]
  41e526:	cmp    al,0xcc
  41e528:	int    0xc0
  41e52a:	std    
  41e52b:	mov    edi,esp
  41e52d:	lea    ebp,[ebp+0x28]
  41e530:	dec    ebx
  41e531:	dec    ebx
  41e532:	sbb    al,0x43
  41e534:	sub    ch,BYTE PTR [edx-0x76]
  41e537:	mov    edi,0xb987bd47
  41e53c:	inc    edi
  41e53d:	es push edx
  41e53f:	hlt    
  41e540:	in     al,dx
  41e541:	lea    eax,[edi]
  41e543:	repz and eax,ebp
  41e546:	xor    eax,0x1dacba92
  41e54b:	jmp    0xdc7a:0x9970a2d7
  41e552:	xchg   edi,eax
  41e553:	push   cs
  41e554:	xchg   edx,eax
  41e555:	les    ebp,FWORD PTR [eax]
  41e557:	or     BYTE PTR [edx],bh
  41e559:	mov    DWORD PTR [esp+esi*4+0x34ccc438],ebp
  41e560:	jp     0x41e54e
  41e562:	mov    eax,ds:0x5d5aa529
  41e567:	cld    
  41e568:	jo     0x41e4ea
  41e56a:	cli    
  41e56b:	push   ebp
  41e56c:	addr16 hlt 
  41e56e:	pop    ebp
  41e56f:	and    eax,0xe82aa5de
  41e574:	test   BYTE PTR [ebp+0x38],al
  41e577:	js     0x41e563
  41e579:	lds    edi,FWORD PTR [edx+0x455fceeb]
  41e57f:	jle    0x41e5e5
  41e581:	mov    bl,0x2
  41e583:	mov    ds:0xfff4976,eax
  41e588:	js     0x41e5ec
  41e58a:	add    BYTE PTR [edx+0x18],bh
  41e58d:	(bad)  
  41e58f:	mov    esp,esp
  41e591:	imul   ebp,DWORD PTR [edi+0x411524b7],0x1d8cc944
  41e59b:	out    0xe1,al
  41e59d:	jmp    0x466c:0x791e4bb
  41e5a4:	test   eax,0xe255c087
  41e5a9:	popf   
  41e5aa:	push   edi
  41e5ab:	int3   
  41e5ac:	dec    esi
  41e5ad:	out    dx,eax
  41e5ae:	mov    ebx,DWORD PTR [edi]
  41e5b0:	inc    esi
  41e5b1:	fs pop ds
  41e5b3:	out    dx,eax
  41e5b4:	mov    cl,0x9d
  41e5b6:	into   
  41e5b7:	sbb    BYTE PTR [eax-0x46ea4d42],dl
  41e5bd:	jg     0x41e623
  41e5bf:	mov    esp,0xa3644e8a
  41e5c4:	icebp  
  41e5c5:	cmp    BYTE PTR [edi-0x3d950251],bh
  41e5cb:	push   edx
  41e5cc:	lock aas 
  41e5ce:	xor    cl,BYTE PTR [ecx+0x7f3bdd48]
  41e5d4:	sahf   
  41e5d5:	pusha  
  41e5d6:	add    bl,BYTE PTR [edx-0x7b]
  41e5d9:	xchg   ebx,eax
  41e5da:	xchg   ecx,eax
  41e5db:	jnp    0x41e63d
  41e5dd:	inc    ebx
  41e5de:	mov    bl,0x49
  41e5e0:	inc    edx
  41e5e1:	test   BYTE PTR [ecx+0x4bbca246],cl
  41e5e7:	add    eax,ecx
  41e5e9:	lods   al,BYTE PTR ds:[esi]
  41e5ea:	clc    
  41e5eb:	push   edi
  41e5ec:	mov    ecx,0xc0d78e84
  41e5f1:	mov    ebx,0x66e36eb1
  41e5f6:	ins    DWORD PTR es:[edi],dx
  41e5f7:	stc    
  41e5f8:	clc    
  41e5f9:	stc    
  41e5fa:	mov    ecx,DWORD PTR [edi-0x5165c37a]
  41e600:	dec    ebp
  41e601:	sbb    eax,0xc8fbe8e7
  41e606:	dec    ebx
  41e607:	xchg   edi,eax
  41e608:	dec    ecx
  41e609:	(bad)  
  41e60a:	std    
  41e60b:	mov    ebp,edx
  41e60d:	retf   
  41e60e:	clc    
  41e60f:	cmc    
  41e610:	sbb    DWORD PTR [edx],esi
  41e612:	out    dx,eax
  41e613:	pop    edi
  41e614:	hlt    
  41e615:	mov    DWORD PTR [ebx],ebp
  41e617:	loope  0x41e5e1
  41e619:	pop    eax
  41e61a:	jnp    0x41e5b0
  41e61c:	sub    ah,0xd8
  41e61f:	shr    DWORD PTR [ecx-0x1c],cl
  41e622:	cwde   
  41e623:	add    eax,0xfc2d83f7
  41e628:	adc    BYTE PTR [edx],ah
  41e62a:	mov    dl,0x31
  41e62c:	add    al,0x14
  41e62e:	shl    DWORD PTR [ebx+0x7140a4e3],cl
  41e634:	scas   eax,DWORD PTR es:[edi]
  41e635:	frstor [bp-0x2]
  41e639:	aaa    
  41e63a:	fistp  QWORD PTR [ecx-0x31]
  41e63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e63e:	into   
  41e63f:	and    DWORD PTR [edx-0x6c],0xffffffc9
  41e643:	mov    WORD PTR cs:0xdaf015f2,fs
  41e64a:	ror    DWORD PTR [esi+0x226af8fb],0xa1
  41e651:	mov    al,0x85
  41e653:	dec    ecx
  41e654:	pusha  
  41e655:	xlat   BYTE PTR ds:[ebx]
  41e656:	mov    dl,0x62
  41e658:	rol    DWORD PTR [eax],cl
  41e65a:	popa   
  41e65b:	call   0x352f261
  41e660:	out    dx,eax
  41e661:	ret    
  41e662:	call   DWORD PTR [edi+0x6b527986]
  41e668:	push   cs
  41e669:	mov    esp,0x91ff5a49
  41e66e:	popa   
  41e66f:	cmc    
  41e670:	gs cmp eax,0xfdf95114
  41e676:	sub    ebx,DWORD PTR [ebp-0x26e706e2]
  41e67c:	iret   
  41e67d:	jle    0x41e602
  41e67f:	bound  ebp,QWORD PTR [esi-0x3]
  41e682:	(bad)  [edx-0x5cb58910]
  41e688:	pop    esi
  41e689:	pop    ss
  41e68a:	std    
  41e68b:	call   0x55ca7294
  41e690:	lds    ecx,FWORD PTR [ecx+0x4d]
  41e693:	dec    eax
  41e694:	out    0x3d,eax
  41e696:	mov    WORD PTR [ecx-0x5a],?
  41e699:	fdivr  st(7),st
  41e69b:	add    BYTE PTR [ecx+0x79],ch
  41e69e:	push   ebp
  41e69f:	or     eax,0xc8fe4676
  41e6a4:	bound  eax,QWORD PTR [ebp-0x7b]
  41e6a7:	not    DWORD PTR [edi+0x1a]
  41e6aa:	and    eax,0xb9c2c020
  41e6af:	ror    bl,cl
  41e6b1:	and    eax,0x98f2c50c
  41e6b6:	push   es
  41e6b7:	cli    
  41e6b8:	mov    BYTE PTR [edx],ch
  41e6ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6bb:	aad    0xbb
  41e6bd:	stc    
  41e6be:	outs   dx,BYTE PTR ds:[esi]
  41e6bf:	out    dx,eax
  41e6c0:	mov    ebp,0x883bd02d
  41e6c5:	int3   
  41e6c6:	pop    edx
  41e6c7:	popa   
  41e6c8:	xchg   ebx,eax
  41e6c9:	mov    ds,WORD PTR [ebp+0x4613d167]
  41e6cf:	lea    ecx,[edi-0x7e6fd19b]
  41e6d5:	sub    eax,0x72833ac7
  41e6da:	mov    ah,0x97
  41e6dc:	imul   edx,DWORD PTR [edx+edx*2-0x32],0xaf65e2ff
  41e6e4:	jbe    0x41e749
  41e6e6:	mov    gs,WORD PTR [eax]
  41e6e8:	outs   dx,BYTE PTR ds:[esi]
  41e6e9:	or     eax,0x1784c517
  41e6ee:	add    al,0x58
  41e6f0:	std    
  41e6f1:	adc    BYTE PTR [edx+0x6dc17803],dh
  41e6f7:	test   eax,0x7374485d
  41e6fc:	jbe    0x41e717
  41e6fe:	mov    edx,0x4e603b61
  41e703:	aaa    
  41e704:	jno    0x7b0d1b38
  41e70a:	popf   
  41e70b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e70c:	sbb    BYTE PTR [edi],cl
  41e70e:	sbb    ecx,DWORD PTR [esi-0x8953a1b]
  41e714:	popf   
  41e715:	mov    esp,0x4a12f9ff
  41e71a:	les    edx,FWORD PTR [edx+0x7c21b4f4]
  41e720:	(bad)  
  41e721:	clc    
  41e722:	mov    ch,0xf8
  41e724:	cmp    dl,BYTE PTR [eax+0x0]
  41e727:	leave  
  41e728:	test   al,0xf3
  41e72a:	bound  esp,QWORD PTR [edi-0x39]
  41e72d:	or     eax,DWORD PTR [esi-0x80]
  41e730:	sub    DWORD PTR [esi+0x79],ebx
  41e733:	sub    ch,BYTE PTR es:[eax]
  41e736:	xchg   BYTE PTR [ebx],cl
  41e738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e739:	sub    BYTE PTR [esi+0x53723263],0x14
  41e740:	mov    bl,0xea
  41e742:	shl    BYTE PTR [edx-0x2e],0x4d
  41e746:	jbe    0x41e7ab
  41e748:	add    DWORD PTR [ebx],ecx
  41e74a:	sti    
  41e74b:	out    0xd7,eax
  41e74d:	push   ebp
  41e74e:	xchg   esp,eax
  41e74f:	mov    bh,0x69
  41e751:	ret    
  41e752:	adc    ecx,eax
  41e754:	test   DWORD PTR [edx-0x2cf5e2b9],esp
  41e75a:	sbb    al,0xf
  41e75c:	aad    0x88
  41e75e:	jmp    0x4580:0xb5183775
  41e765:	add    al,0xf8
  41e768:	and    eax,edi
  41e76a:	cmp    ecx,ebx
  41e76c:	loope  0x41e76a
  41e76e:	pop    esp
  41e76f:	ds cld 
  41e771:	pop    edi
  41e772:	or     DWORD PTR [esp+eax*8+0x15fbd],0x4f8
  41e77d:	aaa    
  41e77e:	sub    bl,dl
  41e780:	popa   
  41e781:	in     eax,0xc9
  41e783:	xor    ecx,ebx
  41e785:	jl     0x41e718
  41e787:	pop    ss
  41e788:	into   
  41e789:	scas   al,BYTE PTR es:[edi]
  41e78a:	call   0xfbd5:0xda8e3
  41e791:	fwait
  41e792:	(bad)  
  41e793:	mov    dl,0x77
  41e795:	sahf   
  41e796:	xchg   ecx,eax
  41e797:	adc    ebx,DWORD PTR [edx+0x73]
  41e79a:	das    
  41e79b:	out    dx,al
  41e79c:	pmullw mm0,QWORD PTR [edi-0x14b4ad03]
  41e7a3:	in     al,0xe5
  41e7a5:	or     eax,ebx
  41e7a7:	push   ebp
  41e7a8:	sub    eax,0xa12960ab
  41e7ad:	das    
  41e7ae:	rcl    DWORD PTR [edi],1
  41e7b0:	add    ch,ch
  41e7b2:	sbb    ebx,ebp
  41e7b4:	aad    0xd
  41e7b6:	dec    esp
  41e7b7:	dec    ecx
  41e7b8:	inc    esi
  41e7b9:	jp     0x41e7f4
  41e7bb:	cdq    
  41e7bc:	je     0x41e752
  41e7be:	mov    esi,0xbc020f58
  41e7c3:	sbb    esi,DWORD PTR [ebp+0x138c1b7d]
  41e7c9:	inc    eax
  41e7ca:	jl     0x41e834
  41e7cc:	push   es
  41e7cd:	test   eax,0x48ed1109
  41e7d2:	(bad)  
  41e7d3:	gs dec ebx
  41e7d5:	add    al,0xc4
  41e7d7:	shl    ah,cl
  41e7d9:	ins    DWORD PTR es:[edi],dx
  41e7da:	jno    0x41e848
  41e7dc:	pop    ss
  41e7dd:	dec    ebx
  41e7de:	mov    dl,0x3c
  41e7e0:	out    dx,eax
  41e7e1:	mov    ds:0x8905abd2,eax
  41e7e6:	xor    dl,cl
  41e7e8:	outs   dx,DWORD PTR ds:[esi]
  41e7e9:	sbb    eax,0xaf31f406
  41e7ee:	call   0x3f211ee2
  41e7f3:	or     dh,BYTE PTR [ecx]
  41e7f5:	cdq    
  41e7f6:	xchg   ecx,eax
  41e7f7:	mov    esp,0x945469e2
  41e7fc:	xchg   ebx,eax
  41e7fd:	in     al,0xe8
  41e7ff:	pop    ebp
  41e800:	mov    cl,BYTE PTR [edx]
  41e802:	in     eax,dx
  41e803:	das    
  41e804:	addr16 mov al,ss:0xa23b
  41e809:	lahf   
  41e80a:	es xchg ebx,eax
  41e80c:	add    al,0xa2
  41e80e:	dec    ebp
  41e80f:	cs fadd st,st(5)
  41e812:	jge    0x41e82f
  41e814:	xor    al,0x9d
  41e816:	or     eax,0x8fc2f4a7
  41e81b:	add    DWORD PTR [edi+0xe6168d2],eax
  41e821:	mov    eax,ds:0x5931dca7
  41e826:	stos   BYTE PTR es:[edi],al
  41e827:	sub    al,0xc0
  41e829:	loop   0x41e81a
  41e82b:	ror    DWORD PTR [edi-0x7c],cl
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	inc    esp
  41e830:	dec    esp
  41e831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e832:	jno    0x41e7ff
  41e834:	push   es
  41e835:	nop
  41e836:	sub    DWORD PTR [edx+0x6f],ecx
  41e839:	sub    edx,eax
  41e83b:	int3   
  41e83c:	imul   ebp,edi,0xc4c9512a
  41e842:	fbld   TBYTE PTR [edi]
  41e844:	xor    bl,0x53
  41e847:	pop    ecx
  41e848:	inc    edi
  41e849:	sbb    DWORD PTR [edi-0x50eded59],esp
  41e84f:	mov    WORD PTR [ecx],ax
  41e852:	seto   BYTE PTR [eax+0x67dcc5ae]
  41e859:	jae    0x41e873
  41e85b:	shr    DWORD PTR [ebx-0x3f42e19],cl
  41e861:	mov    ecx,0xc934798b
  41e866:	test   DWORD PTR [esi],ecx
  41e868:	clc    
  41e869:	mov    bl,0xc9
  41e86b:	mov    dl,BYTE PTR [edi+0x60]
  41e86e:	imul   esp,DWORD PTR [ebx+edx*1-0x9],0x396e3e69
  41e876:	xlat   BYTE PTR ds:[ebx]
  41e877:	pop    ecx
  41e878:	cmp    eax,0x451d1d61
  41e87d:	add    BYTE PTR [ecx+0x4dc64f5c],cl
  41e883:	adc    al,0xa4
  41e885:	imul   edx,DWORD PTR [eax+0x73],0xb01d7ca3
  41e88c:	dec    edx
  41e88d:	stc    
  41e88e:	cmp    DWORD PTR [edi+0x7f],eax
  41e891:	lods   eax,DWORD PTR ds:[esi]
  41e892:	sahf   
  41e893:	push   esi
  41e894:	aad    0x7b
  41e896:	in     al,dx
  41e897:	test   eax,0x4d162fd
  41e89c:	psubw  mm0,mm3
  41e89f:	or     al,0x8e
  41e8a1:	pop    eax
  41e8a2:	push   esp
  41e8a3:	ret    
  41e8a4:	jg     0x41e8fd
  41e8a6:	adc    al,0x6
  41e8a8:	shl    dh,1
  41e8aa:	fwait
  41e8ab:	adc    al,BYTE PTR [edx-0x16]
  41e8ae:	sbb    eax,0x2f127ff8
  41e8b3:	mov    al,0x8c
  41e8b5:	mov    ?,ebp
  41e8b7:	push   cs
  41e8b8:	aas    
  41e8b9:	mov    ds:0xe2f9c552,eax
  41e8be:	mov    edi,0xf4aeaa05
  41e8c3:	pop    es
  41e8c4:	les    edx,FWORD PTR [ebp+0x16]
  41e8c7:	fidiv  DWORD PTR [edx-0xc2d1e08]
  41e8cd:	adc    al,0x30
  41e8cf:	inc    edx
  41e8d0:	adc    ebp,DWORD PTR [esi-0x2cef9db]
  41e8d6:	dec    edx
  41e8d7:	adc    al,0x8e
  41e8d9:	dec    esi
  41e8da:	fistp  QWORD PTR [esp+eax*8+0x20]
  41e8de:	xchg   BYTE PTR [ebp+0x43ef1b9c],cl
  41e8e4:	pop    ebp
  41e8e5:	adc    esp,esi
  41e8e7:	mov    edi,0x833610
  41e8ec:	xchg   esi,eax
  41e8ed:	cmc    
  41e8ee:	add    cl,BYTE PTR [ebx+0x29]
  41e8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8f2:	dec    ebp
  41e8f3:	ret    
  41e8f4:	dec    ebx
  41e8f5:	ins    BYTE PTR es:[edi],dx
  41e8f6:	add    DWORD PTR [edx+0x65],ebp
  41e8f9:	fdiv   QWORD PTR [ebp+0x6e6e2f02]
  41e8ff:	ja     0x41e90d
  41e901:	fstp   QWORD PTR [ebp-0x6b]
  41e904:	cmp    al,0xc8
  41e906:	push   esi
  41e907:	inc    ebp
  41e908:	xchg   BYTE PTR [ebp-0x30ffd6bf],dh
  41e90e:	or     DWORD PTR [esi+0x72],ebp
  41e911:	in     al,dx
  41e912:	dec    ecx
  41e913:	mov    dl,0x33
  41e915:	arpl   WORD PTR [esi-0x1a],cx
  41e918:	mov    cl,0x64
  41e91a:	xlat   BYTE PTR ds:[ebx]
  41e91b:	rol    BYTE PTR [ebx+edi*8-0x72],0x3f
  41e920:	inc    ebx
  41e921:	and    al,0x95
  41e923:	aad    0xef
  41e925:	addr16 dec esi
  41e927:	and    DWORD PTR [esi+0x8a46499],ebp
  41e92d:	popa   
  41e92e:	call   0x3710:0x88be645f
  41e935:	mov    ah,0x26
  41e937:	shl    DWORD PTR [ecx+edi*4],1
  41e93a:	mov    edx,0x89872c1f
  41e93f:	mov    dh,0x78
  41e941:	div    BYTE PTR [edi+0x3b]
  41e944:	dec    eax
  41e945:	lods   eax,DWORD PTR ds:[esi]
  41e946:	push   0xffffffd0
  41e948:	in     eax,dx
  41e949:	out    dx,eax
  41e94a:	xchg   edi,eax
  41e94b:	xor    bh,BYTE PTR [esi-0x7c6bd83]
  41e951:	jp     0x41e97f
  41e953:	xor    DWORD PTR [ecx],ebx
  41e955:	sahf   
  41e956:	add    al,0x44
  41e958:	inc    ecx
  41e959:	push   ecx
  41e95a:	ret    
  41e95b:	inc    ecx
  41e95c:	std    
  41e95d:	mov    edx,esi
  41e95f:	cwde   
  41e960:	gs xchg ebp,eax
  41e962:	cmp    eax,0x26c5516f
  41e967:	sbb    eax,0xde084956
  41e96c:	mov    dh,0x8c
  41e96e:	daa    
  41e96f:	dec    esp
  41e970:	popa   
  41e971:	pushf  
  41e972:	sub    eax,0x3ec340ba
  41e977:	push   ds
  41e978:	mov    esp,0xfdbacfe
  41e97d:	xor    ah,cl
  41e97f:	jmp    0xc264:0x61312d74
  41e986:	adc    ah,ch
  41e988:	mov    bh,0xa0
  41e98a:	cmp    dh,BYTE PTR [edx+ebx*8]
  41e98d:	xchg   edx,eax
  41e98e:	and    esp,0xffffffe1
  41e991:	dec    ebp
  41e992:	pop    ebp
  41e993:	add    ecx,esp
  41e995:	(bad)  
  41e996:	xor    BYTE PTR [eax],bh
  41e998:	xor    DWORD PTR [esi-0x77],eax
  41e99b:	jle    0x41e9ff
  41e99d:	jae    0x41e940
  41e99f:	mov    al,ds:0x21f6f8c1
  41e9a4:	dec    edi
  41e9a5:	(bad)  
  41e9a6:	(bad)  [edx+0x58]
  41e9a9:	mov    edx,ebx
  41e9ab:	or     DWORD PTR [eax-0x20],0x49e776ff
  41e9b2:	cmp    eax,0xcd27687c
  41e9b7:	es mov bh,0x39
  41e9ba:	bound  edx,QWORD PTR [ebp-0x678e1a84]
  41e9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9c1:	fild   WORD PTR [ebp-0x165bf017]
  41e9c7:	lds    esi,FWORD PTR [ecx]
  41e9c9:	inc    eax
  41e9ca:	sub    DWORD PTR gs:[esi],0x56772a4a
  41e9d1:	cwde   
  41e9d2:	call   0xffc18420
  41e9d7:	mov    bh,0x35
  41e9d9:	shr    DWORD PTR [eax+edi*2],cl
  41e9dc:	mov    ds:0xc4657d65,al
  41e9e1:	dec    eax
  41e9e2:	jmp    0x8a47:0x97d277a9
  41e9e9:	sbb    al,0xdb
  41e9eb:	aaa    
  41e9ec:	out    dx,al
  41e9ed:	dec    eax
  41e9ee:	push   cs
  41e9ef:	mov    cs,WORD PTR [edi-0x39]
  41e9f2:	pop    ds
  41e9f3:	int    0xcf
  41e9f5:	aad    0xcc
  41e9f7:	adc    BYTE PTR [edi],cl
  41e9f9:	loop   0x41ea44
  41e9fb:	jmp    0x3c220741
  41ea00:	aas    
  41ea01:	ret    0x8ad2
  41ea04:	mov    esp,0xaec95a35
  41ea09:	mov    ds:0xb9f4b461,eax
  41ea0e:	int3   
  41ea0f:	jge    0x41ea44
  41ea11:	mov    edx,0xc8fd0c87
  41ea16:	sar    DWORD PTR [eax],1
  41ea18:	jbe    0x41ea64
  41ea1a:	pop    es
  41ea1b:	push   eax
  41ea1c:	mov    esi,0x8b7a7a0b
  41ea21:	dec    edx
  41ea22:	out    0xd4,al
  41ea24:	mov    ch,0xda
  41ea26:	sbb    bl,al
  41ea28:	add    bh,bl
  41ea2a:	push   esp
  41ea2b:	jge    0x41ea8e
  41ea2d:	push   ebp
  41ea2e:	test   BYTE PTR [eax],dh
  41ea30:	retf   
  41ea31:	nop
  41ea32:	pop    ds
  41ea33:	out    dx,al
  41ea34:	push   eax
  41ea35:	bswap  esp
  41ea37:	and    ecx,edx
  41ea39:	dec    esi
  41ea3a:	test   eax,0x6b492985
  41ea3f:	jns    0x41e9f4
  41ea41:	push   es
  41ea42:	sub    al,0x62
  41ea44:	mov    eax,esi
  41ea46:	fnstcw WORD PTR [edx+0x77]
  41ea49:	and    edi,DWORD PTR [edx+0xe99662]
  41ea4f:	xor    BYTE PTR [ebx+0x6994a85a],0x8d
  41ea56:	test   DWORD PTR ss:[eax+0xd],ebx
  41ea5a:	or     al,BYTE PTR [ebx]
  41ea5c:	aas    
  41ea5d:	mov    al,0x35
  41ea5f:	mov    bh,0xf9
  41ea61:	xlat   BYTE PTR ds:[ebx]
  41ea62:	sub    cl,0x60
  41ea65:	dec    esi
  41ea66:	in     eax,0x21
  41ea68:	pop    es
  41ea69:	(bad)  
  41ea6a:	xchg   DWORD PTR [eax],edx
  41ea6c:	pop    ds
  41ea6d:	retf   0x47ee
  41ea70:	cmp    eax,0x73ffb945
  41ea75:	es add al,0x97
  41ea78:	dec    ebx
  41ea79:	outs   dx,BYTE PTR ds:[esi]
  41ea7a:	(bad)  
  41ea7b:	jmp    0x4eec:0x41ec9a19
  41ea82:	out    dx,al
  41ea83:	inc    ecx
  41ea84:	mov    DWORD PTR [ecx+0x1081257],ebp
  41ea8a:	ja     0x41ea63
  41ea8c:	sub    eax,0x1210dbc7
  41ea91:	mov    WORD PTR [esi-0x6b],es
  41ea94:	pop    edi
  41ea95:	and    eax,0xe90a476c
  41ea9a:	rol    BYTE PTR [esi],cl
  41ea9c:	cs and edx,ecx
  41ea9f:	cmp    BYTE PTR [edx-0x61],ch
  41eaa2:	addr16 es fdivr st,st(4)
  41eaa6:	mov    eax,0x4df108c9
  41eaab:	inc    edi
  41eaac:	cwde   
  41eaad:	jecxz  0x41eb12
  41eaaf:	je     0x41eaf0
  41eab1:	mov    edi,0xa45c2841
  41eab6:	cmp    esi,esp
  41eab8:	sub    DWORD PTR [esi],ebp
  41eaba:	xor    ah,BYTE PTR [ebx-0x5f]
  41eabd:	and    dh,BYTE PTR [esi]
  41eabf:	sbb    dl,bh
  41eac1:	add    al,0x19
  41eac3:	repnz outs dx,BYTE PTR ds:[esi]
  41eac5:	mov    cl,0x90
  41eac7:	mov    ds:0x8e664d9,eax
  41eacc:	mov    ecx,0xfa5adadc
  41ead1:	pop    ebp
  41ead2:	addr16 addr16 in al,0x81
  41ead6:	mov    bl,0x58
  41ead8:	pop    edi
  41ead9:	cmp    eax,0xf14e1d64
  41eade:	dec    edx
  41eadf:	mov    edi,0xed704cbf
  41eae4:	and    BYTE PTR [edi+0x22],dl
  41eae7:	lods   al,BYTE PTR ds:[esi]
  41eae8:	fadd   QWORD PTR [esi-0x33]
  41eaeb:	mov    bh,0x39
  41eaed:	fst    QWORD PTR [ebx]
  41eaef:	inc    esp
  41eaf0:	mov    ecx,DWORD PTR [eax+0x4fafc190]
  41eaf6:	sub    eax,0x181c319c
  41eafb:	loope  0x41eb59
  41eafd:	and    al,0x25
  41eaff:	shl    DWORD PTR [eax+edx*4-0x79e2042c],cl
  41eb06:	inc    esp
  41eb07:	retf   0xdcce
  41eb0a:	push   ebx
  41eb0b:	xor    ch,BYTE PTR [ebx-0x47]
  41eb0e:	add    ecx,DWORD PTR [ecx]
  41eb10:	ss push 0xffffffaf
  41eb13:	sar    BYTE PTR [ecx+0x5489da97],cl
  41eb19:	jle    0x41eb5f
  41eb1b:	adc    BYTE PTR [ebp+0x6949d4b],bl
  41eb21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb22:	cmp    al,0xbe
  41eb24:	rol    DWORD PTR [edx*2-0x1db915dd],0xec
  41eb2c:	push   ecx
  41eb2d:	mov    esi,DWORD PTR [ebx+0x6e25cd9d]
  41eb33:	xor    DWORD PTR [ecx-0x1ac92555],0x627dbe05
  41eb3d:	test   BYTE PTR [edx-0x78],dl
  41eb40:	lds    edx,FWORD PTR [esi-0x5d]
  41eb43:	mov    eax,ds:0x2e1859ee
  41eb48:	imul   eax,DWORD PTR [ebx-0x45e8c236],0x1d
  41eb4f:	addr16 ja 0x41eb7d
  41eb52:	push   cs
  41eb53:	aam    0xd1
  41eb55:	and    BYTE PTR [ebx+0xc],ch
  41eb58:	cmp    al,0x4f
  41eb5a:	cmp    DWORD PTR [ecx-0x64],ebp
  41eb5d:	xor    edx,DWORD PTR ds:0x853f61b
  41eb63:	call   0x3348:0xc0f91fcc
  41eb6a:	sti    
  41eb6b:	shl    BYTE PTR [edi+0x54],0x64
  41eb6f:	sbb    dh,al
  41eb71:	pop    ss
  41eb72:	adc    edi,DWORD PTR [edx]
  41eb74:	sahf   
  41eb75:	sbb    BYTE PTR [ebx+0x6e],bl
  41eb78:	sub    bh,bl
  41eb7a:	xchg   ebp,eax
  41eb7b:	add    al,dl
  41eb7d:	sbb    DWORD PTR [ecx-0x16419a42],ebx
  41eb83:	sub    eax,0x447230a0
  41eb88:	jle    0x41eb98
  41eb8a:	scas   al,BYTE PTR es:[edi]
  41eb8b:	mov    ecx,DWORD PTR [ecx-0x14]
  41eb8e:	and    DWORD PTR [eax+0x66],0xffffffc4
  41eb92:	jl     0x41eb53
  41eb94:	xchg   ebx,edi
  41eb96:	daa    
  41eb97:	js     0x41ebdc
  41eb99:	nop
  41eb9a:	outs   dx,BYTE PTR ds:[esi]
  41eb9b:	cdq    
  41eb9c:	in     eax,dx
  41eb9d:	ds pop ebx
  41eb9f:	sbb    eax,DWORD PTR [eax+eiz*2-0x11]
  41eba3:	xor    esi,DWORD PTR [esi-0x1101d7d5]
  41eba9:	or     ebp,DWORD PTR [ecx]
  41ebab:	lea    esi,[ecx]
  41ebad:	mov    edx,0x5c05b196
  41ebb2:	icebp  
  41ebb3:	das    
  41ebb4:	mov    ecx,DWORD PTR [ebx+0x21]
  41ebb7:	loope  0x41eb81
  41ebb9:	jns    0x41eb8a
  41ebbb:	outs   dx,BYTE PTR ds:[esi]
  41ebbc:	xchg   esp,eax
  41ebbd:	push   ds
  41ebbe:	retf   0xd049
  41ebc1:	xchg   esp,eax
  41ebc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc3:	stos   DWORD PTR es:[edi],eax
  41ebc4:	shl    BYTE PTR [edx-0x2d8474b7],1
  41ebca:	(bad)  
  41ebcb:	bound  esp,QWORD PTR [eax-0x40]
  41ebce:	add    eax,0xce55d49
  41ebd3:	sbb    eax,0xd431fead
  41ebd8:	xchg   ecx,eax
  41ebd9:	pop    ebp
  41ebda:	mov    es,WORD PTR [esi-0x4f]
  41ebdd:	pushf  
  41ebde:	mov    bh,0x45
  41ebe0:	in     al,dx
  41ebe1:	mov    cl,0x89
  41ebe3:	jne    0x41ec2c
  41ebe5:	xchg   bh,ah
  41ebe7:	dec    ebx
  41ebe8:	test   BYTE PTR [ebx-0x59],0x23
  41ebec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebed:	inc    ebp
  41ebee:	jmp    0xdd2:0x52dbba58
  41ebf5:	neg    BYTE PTR [ecx]
  41ebf7:	in     eax,0x40
  41ebf9:	fsubr  st(6),st
  41ebfb:	cmp    DWORD PTR [esi],esp
  41ebfd:	out    0x8b,al
  41ebff:	mov    al,ds:0xa04ac0b7
  41ec04:	cmp    BYTE PTR [ecx+0x61],ah
  41ec07:	out    dx,eax
  41ec08:	add    bl,BYTE PTR [ebp-0x14]
  41ec0b:	dec    ebx
  41ec0c:	cmp    DWORD PTR [eax+ebp*8+0x5e],eax
  41ec10:	pop    ebp
  41ec11:	int3   
  41ec12:	fcomp  DWORD PTR [edx-0xa]
  41ec15:	mov    DWORD PTR [ecx+0x1afb0aad],0xa1a60db0
  41ec1f:	call   0xd3d9:0xf28349c6
  41ec26:	jmp    0x36533642
  41ec2b:	repnz sbb BYTE PTR [ebx+0x6a62bf8c],ch
  41ec32:	mov    eax,ds:0x4cb88452
  41ec37:	xchg   ebp,eax
  41ec38:	mov    bl,0x8b
  41ec3a:	or     eax,0xefd9bd51
  41ec3f:	mov    DWORD PTR [edi+0x2439b962],ecx
  41ec45:	jmp    0x6fc:0x2bba80bf
  41ec4c:	loopne 0x41ec28
  41ec4e:	xlat   BYTE PTR ds:[ebx]
  41ec4f:	(bad)  
  41ec51:	or     BYTE PTR [edi],bh
  41ec53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec54:	lods   al,BYTE PTR ds:[esi]
  41ec55:	test   BYTE PTR [ecx-0x6c],cl
  41ec58:	sub    esi,esi
  41ec5a:	add    BYTE PTR [ebp+0x9],ch
  41ec5d:	push   eax
  41ec5e:	les    edx,FWORD PTR [eax]
  41ec60:	push   0x8f1f4683
  41ec65:	jns    0x41ec1e
  41ec67:	jns    0x41ecdd
  41ec69:	or     BYTE PTR ds:0x57f2c94d,0x34
  41ec70:	inc    ecx
  41ec71:	pop    edx
  41ec72:	fcom   QWORD PTR [esi-0x46878026]
  41ec78:	push   ebp
  41ec79:	mov    edi,0x667affd5
  41ec7e:	jecxz  0x41ecc8
  41ec80:	repz or al,0x1b
  41ec83:	sbb    BYTE PTR [edi],bl
  41ec85:	mov    ch,0x64
  41ec87:	add    DWORD PTR [eax],eax
  41ec89:	clc    
  41ec8a:	add    al,0x0
  41ec8c:	add    BYTE PTR [ebx],ch
  41ec8e:	pusha  
  41ec8f:	sahf   
  41ec90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec91:	loop   0x41ec84
  41ec93:	iret   
  41ec94:	lahf   
  41ec95:	cs out 0x4c,eax
  41ec98:	push   ds
  41ec99:	xchg   edx,eax
  41ec9a:	imul   eax,DWORD PTR [esi-0xf],0x826d5cd2
  41eca1:	push   cs
  41eca2:	cmp    BYTE PTR [eax+eax*2-0x37],0xfc
  41eca7:	sub    al,BYTE PTR ds:0x2fadc309
  41ecad:	and    eax,0x79759de6
  41ecb2:	arpl   bx,ax
  41ecb4:	ja     0x41ecc1
  41ecb6:	mov    eax,ds:0xd2dbbca3
  41ecbb:	jle    0x41ecb7
  41ecbd:	or     ebp,DWORD PTR [edx+0x4485facd]
  41ecc3:	das    
  41ecc4:	add    edx,DWORD PTR [ecx]
  41ecc6:	repz push ebx
  41ecc8:	jnp    0x41ec6f
  41ecca:	fcom   QWORD PTR [edi-0x43]
  41eccd:	sti    
  41ecce:	pop    edi
  41eccf:	pop    esp
  41ecd0:	mov    esp,0xadda05c4
  41ecd5:	leave  
  41ecd6:	push   ds
  41ecd7:	cli    
  41ecd8:	cmp    esi,0x964b07ee
  41ecde:	mov    ah,0x63
  41ece0:	or     ebp,DWORD PTR [esi+0x7588e40c]
  41ece6:	adc    esp,DWORD PTR [eax-0x5b681aa3]
  41ecec:	inc    esp
  41eced:	(bad)  
  41ecef:	fwait
  41ecf0:	rcl    DWORD PTR [edi+0x4c],1
  41ecf3:	push   ebp
  41ecf4:	int3   
  41ecf5:	loopne 0x41ed2e
  41ecf7:	mov    ds:0xe51ea0b9,al
  41ecfd:	pushf  
  41ecfe:	mov    al,ds:0xed0a15ee
  41ed03:	push   ds
  41ed04:	test   BYTE PTR [eax],0xfd
  41ed07:	jne    0x41ed70
  41ed09:	or     ah,BYTE PTR [ebx+0x4e052ba9]
  41ed0f:	mov    dh,0xc4
  41ed11:	jo     0x41ed51
  41ed13:	cmp    ah,bl
  41ed15:	test   BYTE PTR [ebx-0x334dcbac],dh
  41ed1b:	dec    ebx
  41ed1c:	jge    0x41ed21
  41ed1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed1f:	dec    esi
  41ed20:	into   
  41ed21:	xor    al,0x71
  41ed23:	int    0x6
  41ed25:	mov    ecx,0x9c9d5b00
  41ed2a:	push   0xcd6b98e7
  41ed2f:	xchg   ecx,eax
  41ed30:	cmp    ch,BYTE PTR [edx]
  41ed32:	push   esp
  41ed33:	sbb    al,0x23
  41ed35:	pop    ebx
  41ed36:	and    al,0xcb
  41ed38:	sar    BYTE PTR [ebp+edi*4+0x2f],0xe4
  41ed3d:	std    
  41ed3e:	jno    0x41ed29
  41ed40:	call   0x428a:0xe18a25e3
  41ed47:	push   0xd96da750
  41ed4c:	pop    es
  41ed4d:	push   eax
  41ed4e:	popa   
  41ed4f:	xor    al,0x4c
  41ed51:	xor    BYTE PTR [ebp+0x28],ah
  41ed54:	fimul  DWORD PTR [ebx]
  41ed56:	(bad)  
  41ed57:	sbb    al,dh
  41ed59:	in     al,0x9f
  41ed5b:	in     eax,0x2c
  41ed5d:	call   0x9e1e:0x84dd8b26
  41ed64:	lods   eax,DWORD PTR ds:[esi]
  41ed65:	sbb    DWORD PTR [ecx],0x79
  41ed68:	ss inc ebx
  41ed6a:	sub    bl,BYTE PTR [ebx]
  41ed6c:	or     esp,edi
  41ed6e:	sahf   
  41ed6f:	xchg   ebp,eax
  41ed70:	xor    ch,0x8a
  41ed73:	mov    dl,0xb1
  41ed75:	fistp  DWORD PTR [esi]
  41ed77:	sbb    ah,BYTE PTR [ebp+0x70]
  41ed7a:	imul   BYTE PTR [ebx+0x7c4ad8f8]
  41ed80:	or     BYTE PTR [ecx+0x40],0x4a
  41ed84:	mov    cl,0xfd
  41ed86:	call   0x5c67f3ed
  41ed8b:	std    
  41ed8c:	and    eax,0x71c927b3
  41ed91:	and    BYTE PTR [eax],bl
  41ed93:	pop    edi
  41ed94:	mov    edx,0x204c6968
  41ed99:	mov    bl,0x93
  41ed9b:	sub    ch,cl
  41ed9d:	sub    ebx,DWORD PTR [eax+0x18a4ab17]
  41eda3:	sbb    cl,BYTE PTR [edx+0x1ed356cc]
  41eda9:	popf   
  41edaa:	pushf  
  41edab:	pop    edx
  41edac:	fldcw  WORD PTR [edi+edx*1+0x6c]
  41edb0:	loope  0x41ed88
  41edb2:	rol    DWORD PTR [esp+ecx*8+0x21],cl
  41edb6:	jb     0x41ed41
  41edb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edb9:	outs   dx,BYTE PTR ds:[esi]
  41edba:	ret    0xefce
  41edbd:	leave  
  41edbe:	xor    ch,BYTE PTR [eax+0x14]
  41edc1:	cmpxchg DWORD PTR [edx+0x6e],esi
  41edc5:	or     DWORD PTR [edi],ecx
  41edc7:	add    esp,DWORD PTR [ecx+0x38a7773]
  41edcd:	sbb    ebp,DWORD PTR [esp+ecx*2+0x37d1b7e5]
  41edd4:	fimul  DWORD PTR [ebp-0x5]
  41edd7:	jge    0x41edc2
  41edd9:	or     edi,DWORD PTR [edx]
  41eddb:	jg     0x41ed90
  41eddd:	cmp    eax,0x424b38b9
  41ede2:	scas   eax,DWORD PTR es:[edi]
  41ede3:	mov    cl,0x7e
  41ede5:	mov    DWORD PTR [ecx],edx
  41ede7:	ret    
  41ede8:	pop    ds
  41ede9:	mov    esp,DWORD PTR [edx-0x5a]
  41edec:	lahf   
  41eded:	pop    ecx
  41edee:	cld    
  41edef:	jno    0x41edf3
  41edf1:	fsubrp st(1),st
  41edf3:	push   esp
  41edf4:	(bad)  [esi+0x3a]
  41edf7:	mov    ch,0xe7
  41edf9:	mov    bh,0xa3
  41edfb:	xchg   esp,eax
  41edfc:	push   cs
  41edfd:	outs   dx,BYTE PTR ds:[esi]
  41edfe:	push   ds
  41edff:	ret    
  41ee00:	clc    
  41ee01:	push   eax
  41ee02:	xchg   ebp,eax
  41ee03:	add    DWORD PTR [eax-0x3b7d58d2],0xda6d18b5
  41ee0d:	out    0x8d,eax
  41ee0f:	pop    ecx
  41ee10:	icebp  
  41ee11:	dec    esi
  41ee12:	xchg   ebp,eax
  41ee13:	aad    0x37
  41ee15:	sbb    DWORD PTR [esp+edx*8+0x7eb4fb2c],eax
  41ee1c:	xchg   ebx,eax
  41ee1d:	hlt    
  41ee1e:	mov    ecx,0x5a08d1e7
  41ee23:	mov    ebp,0xba0eda3
  41ee28:	and    BYTE PTR [edx+eiz*4],bh
  41ee2b:	mov    cl,0x52
  41ee2d:	enter  0x43ac,0x5d
  41ee31:	loope  0x41edfe
  41ee33:	mov    eax,ds:0x50cd048a
  41ee38:	cdq    
  41ee39:	sti    
  41ee3a:	and    al,0x87
  41ee3c:	and    ebp,DWORD PTR [ebx-0x7c]
  41ee3f:	(bad)  
  41ee40:	and    bh,BYTE PTR [ebx]
  41ee42:	aas    
  41ee43:	call   0x6d6baf49
  41ee48:	int    0xb4
  41ee4a:	or     ah,dh
  41ee4c:	imul   ecx,DWORD PTR [esp+ebp*8+0x407a89c],0xfa2766a8
  41ee57:	jmp    0x53da1c84
  41ee5c:	mov    edi,0x31ec6527
  41ee61:	xchg   esp,eax
  41ee62:	xchg   esi,eax
  41ee63:	pop    ebx
  41ee64:	into   
  41ee65:	mov    DWORD PTR [esi+ebp*8-0xb],ecx
  41ee69:	push   ebp
  41ee6a:	cmp    eax,DWORD PTR [esi-0x5e]
  41ee6d:	leave  
  41ee6e:	popf   
  41ee6f:	das    
  41ee70:	add    al,0x2a
  41ee72:	ja     0x41eeb6
  41ee74:	cmp    dh,ch
  41ee76:	push   ecx
  41ee77:	and    eax,0xe2c830bf
  41ee7c:	pop    eax
  41ee7d:	test   BYTE PTR [edi-0x1f1e5d49],bl
  41ee83:	in     eax,0xd1
  41ee85:	lds    edx,FWORD PTR [ecx+0x40]
  41ee88:	add    eax,DWORD PTR ds:[edx+ebx*4+0x5c]
  41ee8d:	and    cl,BYTE PTR [eax+0x39]
  41ee90:	fidivr WORD PTR [ecx-0x70dba6ac]
  41ee96:	and    eax,DWORD PTR [ebx+0x22b6d2f7]
  41ee9c:	mov    ah,0x46
  41ee9e:	xor    al,0xfb
  41eea0:	xor    cl,al
  41eea2:	cmc    
  41eea3:	cmp    bh,BYTE PTR [ecx]
  41eea5:	je     0x41ef0a
  41eea7:	pop    es
  41eea8:	sbb    al,0x6c
  41eeaa:	fwait
  41eeab:	test   esi,edi
  41eead:	(bad)  [edi]
  41eeaf:	inc    esp
  41eeb0:	adc    DWORD PTR [edi+eax*2+0x75f4a965],edx
  41eeb7:	outs   dx,BYTE PTR ds:[esi]
  41eeb8:	pop    ecx
  41eeb9:	pop    esi
  41eeba:	js     0x41ef36
  41eebc:	je     0x41ef18
  41eebe:	or     al,0x21
  41eec0:	jbe    0x41eee2
  41eec2:	push   es
  41eec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eec4:	inc    edx
  41eec5:	retf   
  41eec6:	loopne 0x41ef2a
  41eec8:	xchg   esp,eax
  41eec9:	push   ecx
  41eeca:	adc    esp,DWORD PTR [eax+0x36]
  41eecd:	xchg   al,ch
  41eecf:	xor    eax,0x52b84ca4
  41eed4:	xchg   edi,eax
  41eed5:	inc    esp
  41eed6:	push   esi
  41eed7:	loope  0x41eee3
  41eed9:	push   ebp
  41eeda:	out    0xa4,eax
  41eedc:	mul    DWORD PTR [esi+0x7e]
  41eedf:	cdq    
  41eee0:	mov    esi,0x739f7b23
  41eee5:	mov    WORD PTR [edx-0x19],ds
  41eee8:	ins    DWORD PTR es:[edi],dx
  41eee9:	out    0x66,al
  41eeeb:	push   edi
  41eeec:	stos   DWORD PTR es:[edi],eax
  41eeed:	jmp    0xf4aa:0x59e24225
  41eef4:	fisub  DWORD PTR [esi-0x27]
  41eef7:	das    
  41eef8:	ret    
  41eef9:	jbe    0x41ee85
  41eefb:	scas   al,BYTE PTR es:[edi]
  41eefc:	sub    edi,DWORD PTR [ecx+0x18d35e3a]
  41ef02:	shl    DWORD PTR [ebp-0x5eab097c],cl
  41ef08:	jmp    0x3dfedefd
  41ef0d:	test   esp,esi
  41ef0f:	(bad)  
  41ef11:	add    ebx,DWORD PTR [ecx]
  41ef13:	mov    eax,0xbe0166b4
  41ef18:	mov    esi,0x694a19ee
  41ef1d:	bound  ebp,QWORD PTR [ecx-0x77]
  41ef20:	push   esp
  41ef21:	rcl    DWORD PTR [ecx],1
  41ef23:	pusha  
  41ef24:	int3   
  41ef25:	repnz or DWORD PTR [ecx-0x48],ebx
  41ef29:	push   ss
  41ef2a:	rcr    DWORD PTR [ebx+0x13],0x2
  41ef2e:	pop    edi
  41ef2f:	xchg   edi,eax
  41ef30:	dec    ecx
  41ef31:	pop    eax
  41ef32:	pop    ecx
  41ef33:	jl     0x41ef0d
  41ef35:	cmp    al,0x34
  41ef37:	mov    bl,0x97
  41ef39:	sub    al,0x8e
  41ef3b:	out    dx,al
  41ef3c:	dec    ebx
  41ef3d:	add    dh,BYTE PTR [eax]
  41ef3f:	pusha  
  41ef40:	adc    edx,DWORD PTR [eax]
  41ef42:	adc    eax,0x5d809c00
  41ef47:	xor    eax,0xf9a9d89c
  41ef4c:	mov    edx,0xd7bc255c
  41ef51:	imul   esp,DWORD PTR [esi-0x7937c6f6],0xffffffe7
  41ef58:	loope  0x41eee7
  41ef5a:	push   es
  41ef5b:	mov    ?,edi
  41ef5d:	pushf  
  41ef5e:	arpl   WORD PTR [esi],sp
  41ef60:	mov    esp,edx
  41ef62:	data16 stos BYTE PTR es:[edi],al
  41ef64:	sbb    bl,BYTE PTR [ebx-0x121adfbc]
  41ef6a:	mov    ah,0x28
  41ef6c:	ret    
  41ef6d:	mov    edx,ebp
  41ef6f:	jne    0x41ef56
  41ef71:	push   ebx
  41ef72:	ds (bad) 
  41ef74:	cwde   
  41ef75:	scas   eax,DWORD PTR es:[edi]
  41ef76:	mov    dh,0xa
  41ef78:	call   FWORD PTR [ebp-0x7fa3f3b7]
  41ef7e:	add    BYTE PTR [esi-0x3e],dl
  41ef81:	das    
  41ef82:	es ins BYTE PTR es:[edi],dx
  41ef84:	test   BYTE PTR [ecx+0x790bed23],al
  41ef8a:	xchg   ecx,eax
  41ef8b:	mov    cl,0x55
  41ef8d:	sub    BYTE PTR [esi+esi*8-0x4e8249b4],dh
  41ef94:	fnstenv [ebp-0x13]
  41ef97:	sar    DWORD PTR [edi-0x4d],1
  41ef9a:	jne    0x41f014
  41ef9c:	ret    0x26c5
  41ef9f:	xchg   esp,eax
  41efa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efa1:	les    esi,FWORD PTR [esp+esi*8-0x440000f4]
  41efa8:	fstp   DWORD PTR [ebx-0x1067c01a]
  41efae:	xchg   edx,eax
  41efaf:	pop    esi
  41efb0:	dec    esi
  41efb1:	loop   0x41efc7
  41efb3:	outs   dx,BYTE PTR ds:[esi]
  41efb4:	push   eax
  41efb5:	cwde   
  41efb6:	gs pushf 
  41efb8:	sbb    ecx,DWORD PTR [edx-0x96150e]
  41efbe:	cmp    eax,0x88d87be6
  41efc3:	shl    DWORD PTR [edx+0x16],1
  41efc6:	sti    
  41efc7:	rcl    DWORD PTR [edi-0x67],cl
  41efca:	leave  
  41efcb:	mov    ds:0x731856fc,eax
  41efd0:	dec    ecx
  41efd1:	cmc    
  41efd2:	fist   DWORD PTR [ecx+0x79f84060]
  41efd8:	popf   
  41efd9:	iret   
  41efda:	sbb    eax,0x90ea7f47
  41efdf:	xor    al,0xdd
  41efe1:	xor    BYTE PTR [ecx],al
  41efe3:	inc    esi
  41efe4:	add    eax,0x35bb7f5c
  41efe9:	pushf  
  41efea:	xchg   esp,eax
  41efeb:	pop    edx
  41efec:	and    edx,esi
  41efee:	push   ebp
  41efef:	xchg   ebx,eax
  41eff0:	cwde   
  41eff1:	inc    DWORD PTR [eax+0x3fe0d57b]
  41eff7:	mov    al,0x9e
  41eff9:	outs   dx,BYTE PTR ds:[esi]
  41effa:	push   ecx
  41effb:	repz and DWORD PTR [eax],0xffffffa5
  41efff:	pop    ecx
  41f000:	icebp  
  41f001:	or     ecx,edi
  41f003:	jbe    0x41f019
  41f005:	cmp    DWORD PTR [ebx],edi
  41f007:	jno    0x41effb
  41f009:	stc    
  41f00a:	cwde   
  41f00b:	push   eax
  41f00c:	imul   DWORD PTR [ebx]
  41f00e:	inc    esi
  41f00f:	mov    dl,0xd1
  41f011:	out    0x89,al
  41f013:	adc    al,BYTE PTR [eax+ebp*4]
  41f016:	and    esp,DWORD PTR [esi+0xec08b59]
  41f01c:	pop    esi
  41f01d:	ror    DWORD PTR [ebp-0x19],cl
  41f020:	xchg   esi,eax
  41f021:	cmp    eax,DWORD PTR [esi+esi*1-0x25a1fce1]
  41f028:	retf   0x69f8
  41f02b:	xor    al,0xe9
  41f02d:	mov    ds:0xa42e1f0,al
  41f032:	mov    DWORD PTR [esi],esp
  41f034:	gs retf 0x75f8
  41f038:	mov    eax,0x11135505
  41f03d:	call   0xb23:0x3ff0b3bf
  41f044:	fs call 0x317d:0x1e133439
  41f04c:	adc    ebp,DWORD PTR [eax]
  41f04e:	pop    ds
  41f04f:	sbb    BYTE PTR [ebp+edi*2+0x45],bh
  41f053:	ss daa 
  41f055:	daa    
  41f056:	sbb    DWORD PTR [ebx+esi*8-0x61],edi
  41f05a:	and    DWORD PTR [eax+0x463109ec],ebp
  41f060:	shl    DWORD PTR [esi-0x2c],0x7c
  41f064:	mov    edx,gs
  41f066:	mov    ecx,0x308513f6
  41f06b:	mov    esp,0x39e92f76
  41f070:	pop    ebx
  41f071:	adc    ebp,edi
  41f073:	dec    ecx
  41f074:	retf   0x2dd2
  41f077:	je     0x41f0b6
  41f079:	push   cs
  41f07a:	xchg   edx,eax
  41f07b:	jp     0x41f065
  41f07d:	add    al,0xab
  41f07f:	js     0x41f06c
  41f081:	xor    eax,DWORD PTR [esi]
  41f083:	cmp    DWORD PTR [edx+0xe],edx
  41f086:	(bad)  
  41f087:	xchg   dl,ch
  41f089:	(bad)  
  41f08a:	ret    
  41f08b:	sbb    eax,0x421e533e
  41f090:	add    dh,BYTE PTR [ebx]
  41f092:	push   es
  41f093:	imul   eax,DWORD PTR [edi-0x2bb1ecbc],0x2d
  41f09a:	mov    edi,DWORD PTR [edx-0xb]
  41f09d:	jno    0x41f069
  41f09f:	js     0x41f09b
  41f0a1:	out    0x68,eax
  41f0a3:	leave  
  41f0a4:	xchg   DWORD PTR [esi+edi*4],eax
  41f0a7:	mov    al,0x1e
  41f0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0aa:	mov    WORD PTR [esi+0x4],es
  41f0ad:	cmp    esp,ebx
  41f0af:	popa   
  41f0b0:	sub    edi,0x7f
  41f0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b4:	lahf   
  41f0b5:	jl     0x41f059
  41f0b7:	sub    al,0x3a
  41f0b9:	out    dx,eax
  41f0ba:	sub    eax,0xa8d16be2
  41f0bf:	jg     0x41f05b
  41f0c1:	lods   al,BYTE PTR ds:[esi]
  41f0c2:	xlat   BYTE PTR es:[ebx]
  41f0c4:	or     esp,DWORD PTR [ecx+ecx*2-0x44]
  41f0c8:	xbegin 0xd74e21c6
  41f0ce:	jg     0x41f06f
  41f0d0:	cli    
  41f0d1:	icebp  
  41f0d2:	lds    edx,FWORD PTR [edi]
  41f0d4:	pop    ebp
  41f0d5:	pushf  
  41f0d6:	sbb    esp,ebp
  41f0d8:	cdq    
  41f0d9:	adc    DWORD PTR [ecx+0x17],eax
  41f0dc:	mov    ebx,0x7ca76590
  41f0e1:	js     0x41f10b
  41f0e3:	adc    bl,BYTE PTR [ebx+0x160000cf]
  41f0e9:	repz call 0x42d9d0f4
  41f0ef:	xor    eax,0x2e509990
  41f0f4:	sbb    DWORD PTR [ecx+ebx*2],0x2c
  41f0f8:	xor    esp,DWORD PTR [edi+0x4c]
  41f0fb:	dec    ebx
  41f0fc:	pushf  
  41f0fd:	sbb    esp,DWORD PTR [ecx+0xfe74f06]
  41f103:	sti    
  41f104:	and    al,bh
  41f106:	pop    edi
  41f107:	fadd   DWORD PTR [ebp-0x1b]
  41f10a:	pop    es
  41f10b:	mov    ah,0x77
  41f10d:	js     0x41f0ca
  41f10f:	dec    ebp
  41f110:	stc    
  41f111:	es in  eax,0x9
  41f114:	nop
  41f115:	push   es
  41f116:	adc    DWORD PTR [ecx-0x7aea97e5],esp
  41f11c:	mov    ebp,0xc58cfd2
  41f121:	jbe    0x41f11a
  41f123:	mov    esp,0x5761135f
  41f128:	shr    BYTE PTR [esp+eax*2+0x63148975],cl
  41f12f:	cld    
  41f130:	pop    es
  41f131:	jl     0x41f18b
  41f133:	daa    
  41f134:	je     0x41f11a
  41f136:	sbb    al,bl
  41f138:	xor    eax,0xe5680587
  41f13d:	call   0xd77e141
  41f142:	push   ebp
  41f143:	fisttp QWORD PTR [ebx+0x75]
  41f146:	loope  0x41f1bf
  41f148:	repnz add ch,ah
  41f14b:	bnd jp 0x41f1c4
  41f14e:	stos   DWORD PTR es:[edi],eax
  41f14f:	adc    eax,0x4d61d519
  41f154:	pop    edi
  41f155:	jp     0x41f1c5
  41f157:	jg     0x41f0f4
  41f159:	and    al,0x3b
  41f15b:	cmovle esi,edi
  41f15e:	mov    eax,0x43f74988
  41f163:	and    BYTE PTR [ebp-0x54],ah
  41f166:	jmp    0x56ca4bed
  41f16b:	fmul   DWORD PTR ds:0xf1ce4530
  41f171:	xchg   ecx,eax
  41f172:	push   cs
  41f173:	lods   al,BYTE PTR ds:[esi]
  41f174:	fstp   QWORD PTR [ebx-0x20bee20]
  41f17a:	inc    eax
  41f17b:	xchg   ecx,eax
  41f17c:	inc    ebp
  41f17d:	sub    eax,0xe5fb4c03
  41f182:	outs   dx,BYTE PTR ds:[esi]
  41f183:	les    edi,FWORD PTR [eax+0x52]
  41f186:	push   ecx
  41f187:	cmp    BYTE PTR [ebx],al
  41f189:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41f18c:	push   ecx
  41f18d:	push   ss
  41f18e:	or     BYTE PTR [esi+ecx*8],cl
  41f191:	pop    esp
  41f192:	inc    ecx
  41f193:	test   BYTE PTR [ebx],ch
  41f195:	lods   eax,DWORD PTR ds:[esi]
  41f196:	imul   eax,DWORD PTR [ecx],0x4f800
  41f19c:	add    BYTE PTR [ebx+ecx*2-0x7247290d],dl
  41f1a3:	bound  ebp,QWORD PTR [ebp-0x7df5ee2]
  41f1a9:	inc    ebx
  41f1aa:	mov    BYTE PTR [eax+0x7e60b6c0],dl
  41f1b0:	cmp    edx,DWORD PTR [edx+0x7d272f30]
  41f1b6:	and    ebp,DWORD PTR [eax+0x14]
  41f1b9:	jne    0x41f216
  41f1bb:	push   esp
  41f1bc:	pop    ebp
  41f1bd:	mov    edx,0x30e85973
  41f1c2:	lods   eax,DWORD PTR ds:[esi]
  41f1c3:	stos   DWORD PTR es:[edi],eax
  41f1c4:	adc    ebx,esi
  41f1c6:	add    ebx,edi
  41f1c8:	arpl   WORD PTR [eax+0x7bc6ce5],cx
  41f1ce:	cmp    al,0x2
  41f1d0:	xor    cl,BYTE PTR [eax]
  41f1d2:	das    
  41f1d3:	iret   
  41f1d4:	aaa    
  41f1d5:	(bad)  
  41f1d6:	adc    DWORD PTR [edx-0x39],esp
  41f1d9:	shr    DWORD PTR [edi+0x54],1
  41f1dc:	in     eax,0x11
  41f1de:	(bad)  
  41f1df:	jnp    0x41f241
  41f1e1:	loopne 0x41f21d
  41f1e3:	and    eax,0x18309e9e
  41f1e8:	neg    DWORD PTR [esi]
  41f1ea:	jmp    DWORD PTR [eax-0x1b46a99e]
  41f1f0:	jno    0x41f270
  41f1f2:	inc    eax
  41f1f3:	out    dx,al
  41f1f4:	dec    eax
  41f1f5:	cmp    ecx,DWORD PTR [edx]
  41f1f7:	imul   ecx,DWORD PTR [edi-0x4eb984a1],0x3e
  41f1fe:	adc    ecx,DWORD PTR [esi]
  41f200:	lds    esi,FWORD PTR [eax]
  41f202:	sub    eax,0x22b83364
  41f207:	add    eax,0x91561431
  41f20c:	les    edi,FWORD PTR [esi-0x6b238a9c]
  41f212:	sbb    al,0x93
  41f214:	mov    BYTE PTR [edi],dh
  41f216:	add    BYTE PTR [ebp+eiz*1-0x3e5e9fc3],bl
  41f21d:	rcr    BYTE PTR [eax+0x664d701c],1
  41f223:	aas    
  41f224:	or     eax,0xcdf209da
  41f229:	inc    esp
  41f22a:	dec    esp
  41f22b:	dec    esp
  41f22c:	mov    cs,esi
  41f22e:	cs fwait
  41f230:	loopne 0x41f1c8
  41f232:	mov    cl,0xa5
  41f234:	inc    ecx
  41f235:	or     bh,BYTE PTR [edx+0x4f]
  41f238:	frstor [ebx+eiz*2]
  41f23b:	add    DWORD PTR [ebx-0x18],edx
  41f23e:	inc    eax
  41f23f:	xchg   edi,eax
  41f240:	scas   eax,DWORD PTR es:[edi]
  41f241:	sub    BYTE PTR [edi],bh
  41f243:	dec    ecx
  41f244:	jbe    0x41f241
  41f246:	aaa    
  41f247:	adc    eax,0x36875d4c
  41f24c:	clc    
  41f24d:	(bad)  
  41f24e:	sub    edi,DWORD PTR [edx-0x78005db0]
  41f254:	xchg   edi,eax
  41f255:	into   
  41f256:	les    esp,FWORD PTR [ecx]
  41f258:	test   al,0x1a
  41f25a:	ja     0x41f2be
  41f25c:	dec    eax
  41f25d:	mov    esp,DWORD PTR [ebp+0x77134b29]
  41f263:	xor    ah,BYTE PTR [esi+0x1774f9c9]
  41f269:	ins    DWORD PTR es:[edi],dx
  41f26a:	or     DWORD PTR [ebx-0x27],ecx
  41f26d:	ret    
  41f26e:	fwait
  41f26f:	imul   esp,DWORD PTR [esi+edi*4-0x38],0xbb83aff8
  41f277:	ss inc esp
  41f279:	mov    esi,0x45084135
  41f27e:	retf   0x273b
  41f281:	mov    WORD PTR [esi+0x54],?
  41f284:	jmp    0xd08c:0xc6d35e6a
  41f28b:	xor    dl,al
  41f28d:	or     DWORD PTR [esi-0x4c7bf933],eax
  41f293:	ss mov esi,0x2be95530
  41f299:	jmp    FWORD PTR [eax+0xe4b3fc1]
  41f29f:	jo     0x41f2a9
  41f2a1:	in     al,0xd2
  41f2a3:	jmp    0xeb59:0x72ea587f
  41f2aa:	and    eax,DWORD PTR [ecx]
  41f2ac:	cmp    dl,BYTE PTR [edi-0xc]
  41f2af:	(bad)  
  41f2b0:	sub    esi,DWORD PTR [esi-0x53d78912]
  41f2b6:	push   esi
  41f2b7:	xchg   esi,eax
  41f2b8:	shr    BYTE PTR [edx],1
  41f2ba:	iret   
  41f2bb:	xor    al,0x33
  41f2bd:	xchg   bl,bh
  41f2bf:	and    al,0x41
  41f2c1:	cmp    ch,BYTE PTR [eax-0x5f]
  41f2c4:	adc    esi,edi
  41f2c6:	loopne 0x41f31e
  41f2c8:	scas   al,BYTE PTR es:[edi]
  41f2c9:	pop    esp
  41f2ca:	lock jge 0x41f2f8
  41f2cd:	jnp    0x41f276
  41f2cf:	(bad)  
  41f2d1:	sub    dl,BYTE PTR [ecx-0x78]
  41f2d4:	inc    ebx
  41f2d5:	sub    al,0x9d
  41f2d7:	mov    eax,ds:0x7e197fa3
  41f2dc:	idiv   BYTE PTR [ebx+eiz*8+0x62d7703d]
  41f2e3:	inc    ebp
  41f2e4:	sahf   
  41f2e5:	cmp    cl,ch
  41f2e7:	ret    0xb04f
  41f2ea:	push   0x84154844
  41f2ef:	pop    ds
  41f2f0:	jmp    0x41f27c
  41f2f2:	jl     0x41f2a2
  41f2f4:	sbb    eax,0x63d9dc1
  41f2f9:	es jg  0x41f2f8
  41f2fc:	pop    eax
  41f2fd:	lods   al,BYTE PTR ds:[esi]
  41f2fe:	xchg   ecx,eax
  41f2ff:	mov    DWORD PTR [esp+eax*4+0x8276c31],edi
  41f306:	loop   0x41f2c0
  41f308:	sbb    eax,0x1cf03982
  41f30d:	call   0x2e9f:0x1b009785
  41f314:	pop    ds
  41f315:	xchg   al,bh
  41f317:	je     0x41f37a
  41f319:	das    
  41f31a:	mov    dl,0xbd
  41f31c:	or     ebx,DWORD PTR [eax-0xd]
  41f31f:	jmp    0x12df:0x1c2e01ea
  41f326:	mov    ah,BYTE PTR [esi+ecx*1-0x735390d6]
  41f32d:	jb     0x41f2d7
  41f32f:	test   BYTE PTR [edi+0x67],ah
  41f332:	imul   ecx,DWORD PTR [ebx],0x51
  41f335:	mov    eax,ds:0x48743fb6
  41f33a:	(bad)  
  41f33b:	or     edi,DWORD PTR [ecx-0x775a7a5a]
  41f341:	popf   
  41f342:	mov    cl,0xd2
  41f344:	inc    edi
  41f345:	leave  
  41f346:	ror    ch,cl
  41f348:	bound  ebp,QWORD PTR [ecx-0x42]
  41f34b:	fwait
  41f34c:	xor    dl,dl
  41f34e:	mov    eax,ds:0xcf0b6ebd
  41f353:	mov    DWORD PTR [eax+0x2f34ac04],eax
  41f359:	loope  0x41f374
  41f35b:	in     al,0x94
  41f35d:	call   0x76d9:0x81ee
  41f363:	retf   
  41f364:	stc    
  41f365:	push   ecx
  41f366:	sar    ah,1
  41f368:	pop    edi
  41f369:	sbb    dh,bl
  41f36b:	mov    BYTE PTR [edx-0x449abfe2],bl
  41f371:	mov    esp,0x5863b6cc
  41f376:	sub    BYTE PTR [ebx+eiz*2-0x1ac08970],bh
  41f37d:	mov    al,BYTE PTR [ecx]
  41f37f:	test   al,0xe8
  41f381:	(bad)  
  41f382:	mov    dh,0x48
  41f384:	and    esi,edi
  41f386:	clc    
  41f387:	out    0x4b,eax
  41f389:	sub    edx,DWORD PTR [edx]
  41f38b:	cld    
  41f38c:	data16 hlt 
  41f38e:	pop    ss
  41f38f:	xor    edi,DWORD PTR [edi-0x15cf9cd6]
  41f395:	sbb    ecx,ecx
  41f397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f398:	data16 jl 0x41f3dd
  41f39b:	mov    esp,?
  41f39d:	sbb    BYTE PTR [esi+0x258e86bd],bl
  41f3a3:	mov    BYTE PTR [edi+0x54],ah
  41f3a6:	sbb    ebx,ebp
  41f3a8:	lock jl 0x41f355
  41f3ab:	cmp    ch,bh
  41f3ad:	scas   al,BYTE PTR es:[edi]
  41f3ae:	jecxz  0x41f3ad
  41f3b0:	cld    
  41f3b1:	mov    esp,es
  41f3b3:	inc    ebx
  41f3b4:	pusha  
  41f3b5:	jp     0x41f3aa
  41f3b7:	sub    al,0xf8
  41f3b9:	sub    eax,0x4d12f206
  41f3be:	sub    al,0x78
  41f3c0:	xor    eax,esi
  41f3c2:	cmp    eax,0x6342fbe2
  41f3c7:	pop    edx
  41f3c8:	cld    
  41f3c9:	dec    edi
  41f3ca:	adc    al,0xf0
  41f3cc:	mov    al,0x35
  41f3ce:	dec    ecx
  41f3cf:	mov    edi,0x2d1d8dd8
  41f3d4:	mov    esp,0x757ed887
  41f3d9:	out    0xa8,al
  41f3db:	sub    DWORD PTR [edi],edx
  41f3dd:	les    edi,FWORD PTR [ebp-0x57]
  41f3e0:	cmp    BYTE PTR [ebp-0x48e9a151],al
  41f3e6:	sub    BYTE PTR [ebp+ebx*2+0x40],dl
  41f3ea:	push   esi
  41f3eb:	and    edi,DWORD PTR [eax-0x68]
  41f3ee:	and    ebp,ebp
  41f3f0:	fst    st(3)
  41f3f2:	pop    ecx
  41f3f3:	jmp    0xe4deae0d
  41f3f8:	ret    
  41f3f9:	out    0xf9,eax
  41f3fb:	sbb    dh,BYTE PTR [esi]
  41f3fd:	mov    ebx,0xc858089c
  41f402:	test   ah,bh
  41f404:	mov    ecx,0xfa047136
  41f409:	xor    edx,esp
  41f40b:	std    
  41f40c:	xchg   esp,eax
  41f40d:	ret    0x18ad
  41f410:	popf   
  41f411:	dec    esi
  41f412:	(bad)  
  41f413:	and    dh,BYTE PTR ds:0xee49a26a
  41f419:	dec    esi
  41f41a:	(bad)  
  41f41b:	jns    0x41f46e
  41f41d:	mov    BYTE PTR [eax],al
  41f41f:	or     DWORD PTR [ebx-0x3406587b],edx
  41f425:	js     0x41f3cc
  41f427:	xor    al,0x84
  41f42a:	sub    BYTE PTR [edx],bl
  41f42c:	scas   al,BYTE PTR es:[edi]
  41f42d:	outs   dx,BYTE PTR ds:[esi]
  41f42e:	sub    dl,BYTE PTR [edx-0x32]
  41f431:	ret    0x3240
  41f434:	xchg   ebx,eax
  41f435:	cmp    edi,DWORD PTR [edi]
  41f437:	push   esi
  41f438:	jmp    0x41f44d
  41f43a:	fimul  DWORD PTR [ecx-0x5d4dbe2d]
  41f440:	jbe    0x41f4a3
  41f442:	test   DWORD PTR [esi+0x4],edx
  41f445:	add    DWORD PTR [edx-0x6e2bf048],edi
  41f44b:	sbb    ah,al
  41f44d:	dec    esp
  41f44e:	fcmovb st,st(5)
  41f450:	sub    edi,DWORD PTR [esi+ebx*8]
  41f453:	aaa    
  41f454:	inc    ebp
  41f455:	cmp    DWORD PTR [edi-0xa],eax
  41f458:	ds xor eax,0xbb6099fd
  41f45e:	sub    BYTE PTR [esi+0x3409b94],bl
  41f464:	test   BYTE PTR [ebp-0xb],bl
  41f467:	(bad)  
  41f468:	pop    esp
  41f469:	add    BYTE PTR [ebx],al
  41f46b:	popa   
  41f46c:	int    0xbe
  41f46e:	pop    eax
  41f46f:	retf   0x5a46
  41f472:	cmp    DWORD PTR [esp+esi*8+0x1a82fff3],esi
  41f479:	jp     0x41f426
  41f47b:	cmp    BYTE PTR [eax+0x593c8ee8],dh
  41f481:	dec    esp
  41f482:	call   0xc944b54f
  41f487:	mov    ch,0x7a
  41f489:	jg     0x41f485
  41f48b:	dec    ebx
  41f48c:	test   al,0xee
  41f48e:	mov    ebp,0xe71d9c7
  41f493:	jg     0x41f4e5
  41f495:	(bad)  
  41f496:	mov    ebx,0xd9627adc
  41f49b:	add    esi,0x1e
  41f49e:	stos   BYTE PTR es:[edi],al
  41f49f:	scas   eax,DWORD PTR es:[edi]
  41f4a0:	mov    esi,0xb9ecfb4d
  41f4a5:	add    ch,BYTE PTR [ebp+ebx*4-0x6b83e098]
  41f4ac:	xchg   edx,eax
  41f4ad:	mov    eax,0xe1aee355
  41f4b2:	inc    ebp
  41f4b3:	and    ecx,ebx
  41f4b5:	and    al,0x75
  41f4b7:	jecxz  0x41f51b
  41f4b9:	fsubr  st,st(1)
  41f4bb:	ret    
  41f4bc:	cmp    BYTE PTR ds:0xc29c104d,dh
  41f4c2:	pop    eax
  41f4c3:	inc    esi
  41f4c4:	and    DWORD PTR [ebx+0x24a83120],ebx
  41f4ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4cb:	enter  0x7e30,0x26
  41f4cf:	iret   
  41f4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4d1:	mov    ecx,?
  41f4d3:	jno    0x41f4c5
  41f4d5:	jnp    0x41f53b
  41f4d7:	repnz push edx
  41f4d9:	push   edi
  41f4da:	push   ds
  41f4db:	fwait
  41f4dc:	lods   al,BYTE PTR ds:[esi]
  41f4dd:	push   eax
  41f4de:	js     0x41f543
  41f4e0:	fiadd  WORD PTR [ecx+0x267dd3b]
  41f4e6:	mov    dh,0xf6
  41f4e8:	add    eax,DWORD PTR ds:0xa3712483
  41f4ee:	(bad)  
  41f4ef:	push   ss
  41f4f0:	sbb    al,0x60
  41f4f2:	jp     0x41f49c
  41f4f4:	ss jne 0x41f539
  41f4f7:	jbe    0x41f512
  41f4f9:	call   0x1bac:0xd8e3
  41f4ff:	dec    DWORD PTR [esi+0x3b]
  41f502:	pop    eax
  41f503:	jmp    0xdd4:0xead2a103
  41f50a:	(bad)  
  41f50b:	lea    esp,[esi+0x262d1446]
  41f511:	sub    DWORD PTR [ecx-0x5ec54e2c],ebp
  41f517:	movd   mm7,DWORD PTR [eax+edi*8+0xae87e0a]
  41f51f:	cwde   
  41f520:	(bad)  
  41f522:	loopne 0x41f529
  41f524:	ds test eax,0xc1dbd273
  41f52a:	bound  edx,QWORD PTR [edi]
  41f52c:	mov    esp,0x5cc5ae2e
  41f531:	and    bl,BYTE PTR [ecx+0x3c143b8d]
  41f537:	sub    edx,DWORD PTR [ebp+0x5db4d5f0]
  41f53d:	push   es
  41f53e:	sub    dh,dh
  41f540:	sbb    DWORD PTR [edi],esi
  41f542:	fistp  DWORD PTR [edx-0x39f6a74a]
  41f548:	repnz dec ebx
  41f54a:	fisubr WORD PTR [ebp+edx*4+0x37b112d3]
  41f551:	inc    esp
  41f552:	mov    eax,ebx
  41f554:	mov    eax,0xaef8f377
  41f559:	cmp    eax,0x93428b12
  41f55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f55f:	dec    ecx
  41f560:	rcl    BYTE PTR [edi+0x21c51010],cl
  41f566:	jg     0x41f57d
  41f568:	jge    0x41f557
  41f56a:	fcmovne st,st(3)
  41f56c:	mov    eax,0x8c70aa0
  41f571:	fcomp  DWORD PTR [edx-0x1405191f]
  41f577:	cmp    ah,dl
  41f579:	iret   
  41f57a:	jmp    0x41f557
  41f57c:	jmp    0x5e659c96
  41f581:	imul   BYTE PTR [edx-0x291d0d56]
  41f587:	sub    edi,DWORD PTR [edx]
  41f589:	(bad)  
  41f58b:	sub    BYTE PTR [esi],bl
  41f58d:	hlt    
  41f58e:	sbb    ebp,DWORD PTR [ebx+ecx*8+0x50]
  41f592:	xchg   esi,eax
  41f593:	call   0x81d4:0xa9b50dde
  41f59a:	pop    edx
  41f59b:	mov    edx,0x58b253ea
  41f5a0:	jg     0x41f5c1
  41f5a2:	and    edx,esp
  41f5a4:	mov    bh,0xf4
  41f5a6:	pusha  
  41f5a7:	pop    ebp
  41f5a8:	popf   
  41f5a9:	xchg   BYTE PTR [ecx+0xb],bl
  41f5ac:	stos   BYTE PTR es:[edi],al
  41f5ad:	add    esi,DWORD PTR [ebx]
  41f5af:	(bad)
  41f5b3:	or     eax,0x61c7a82e
  41f5b8:	ss in  al,dx
  41f5ba:	ins    BYTE PTR es:[edi],dx
  41f5bb:	popf   
  41f5bc:	out    0xeb,al
  41f5be:	retf   0x86cb
  41f5c1:	test   eax,0x6dfe7165
  41f5c6:	into   
  41f5c7:	enter  0xba17,0xfb
  41f5cb:	xchg   ebp,eax
  41f5cc:	jns    0x41f5c9
  41f5ce:	add    DWORD PTR [edx],ebx
  41f5d0:	jnp    0x41f63e
  41f5d2:	push   esp
  41f5d3:	push   ecx
  41f5d4:	adc    al,dh
  41f5d6:	and    esi,DWORD PTR [eax+0x4]
  41f5d9:	lods   eax,DWORD PTR ds:[esi]
  41f5da:	or     esi,ebp
  41f5dc:	bswap  ecx
  41f5de:	lahf   
  41f5df:	dec    edx
  41f5e0:	(bad)  
  41f5e2:	aam    0x9e
  41f5e4:	ret    0x7e01
  41f5e7:	mov    BYTE PTR [ebp+0x5f574d3d],dl
  41f5ed:	cs pop edi
  41f5ef:	or     BYTE PTR [ebx],bh
  41f5f1:	stos   BYTE PTR es:[edi],al
  41f5f2:	(bad)  
  41f5f3:	mov    esi,0x3292c5ae
  41f5f8:	scas   eax,DWORD PTR es:[edi]
  41f5f9:	jnp    0x41f5fa
  41f5fb:	jbe    0x41f5bd
  41f5fd:	test   DWORD PTR [eax+0x2],ebp
  41f600:	mov    ds:0x4755295e,al
  41f605:	xor    dl,BYTE PTR [eax-0x6a3352cf]
  41f60b:	mov    eax,ds:0x6875cad3
  41f610:	pop    eax
  41f611:	inc    esp
  41f612:	aas    
  41f613:	fmul   DWORD PTR [edi]
  41f615:	inc    edx
  41f616:	pop    es
  41f617:	jge    0x41f628
  41f619:	lock cmp bl,bh
  41f61c:	outs   dx,BYTE PTR ds:[esi]
  41f61d:	pop    edx
  41f61e:	mov    BYTE PTR fs:[ebp+0x5f],cl
  41f622:	leave  
  41f623:	test   eax,0x739a4433
  41f628:	int    0xfb
  41f62a:	outs   dx,BYTE PTR ds:[esi]
  41f62b:	jl     0x41f635
  41f62d:	nop
  41f62e:	cs (bad) 
  41f630:	fisubr DWORD PTR [eax]
  41f632:	pusha  
  41f633:	pop    ebp
  41f634:	out    dx,al
  41f635:	xor    eax,0xa6cfbced
  41f63a:	in     eax,0xac
  41f63c:	sbb    eax,0x6c840362
  41f641:	push   0x6cfafbd5
  41f646:	dec    edx
  41f647:	loopne 0x41f6a1
  41f649:	data16 adc BYTE PTR [edx+eax*8-0x7cfd474f],ch
  41f651:	mov    WORD PTR [ebx-0x4c332dc9],cs
  41f657:	jmp    0x41f69c
  41f659:	cmp    al,0x9d
  41f65b:	cmp    dh,BYTE PTR [ebx-0x29]
  41f65e:	ror    dl,1
  41f660:	les    ebx,FWORD PTR [ecx+0x3200f8ec]
  41f666:	pop    esi
  41f667:	out    0x5,al
  41f669:	xchg   esp,eax
  41f66a:	mov    ecx,0x7d74920
  41f66f:	cld    
  41f670:	mov    ch,0x24
  41f672:	leave  
  41f673:	scas   eax,DWORD PTR es:[edi]
  41f674:	das    
  41f675:	mov    esi,0x3ed600cd
  41f67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f67b:	icebp  
  41f67c:	stos   DWORD PTR es:[edi],eax
  41f67d:	outs   dx,DWORD PTR ds:[esi]
  41f67e:	jae    0x41f6f2
  41f680:	xor    BYTE PTR [ebx-0x23],dh
  41f683:	xor    ebx,eax
  41f685:	fs sub eax,0x5942d43
  41f68b:	outs   dx,BYTE PTR ds:[esi]
  41f68c:	hlt    
  41f68d:	mov    bl,BYTE PTR [ebx+edi*4-0x46]
  41f691:	jo     0x41f70a
  41f693:	mov    eax,0x43a12b87
  41f698:	adc    al,0xcb
  41f69a:	idiv   BYTE PTR [edi-0x41]
  41f69d:	xchg   ebx,eax
  41f69e:	in     al,0x34
  41f6a0:	xchg   edi,eax
  41f6a1:	scas   ax,WORD PTR es:[edi]
  41f6a3:	shl    dh,1
  41f6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a6:	outs   dx,BYTE PTR ds:[esi]
  41f6a7:	add    DWORD PTR [eax],eax
  41f6a9:	clc    
  41f6aa:	add    al,0x0
  41f6ac:	add    dh,dh
  41f6ae:	cmp    edi,DWORD PTR [ebx]
  41f6b0:	jmp    0x9f2b:0xddbd808b
  41f6b7:	jns    0x41f68f
  41f6b9:	push   ebp
  41f6ba:	mov    cl,0x2d
  41f6bc:	pop    ebx
  41f6bd:	mov    ds:0xff92af50,al
  41f6c2:	movnti DWORD PTR [esi],ebp
  41f6c5:	xchg   esp,eax
  41f6c6:	sub    DWORD PTR [eax],ebx
  41f6c8:	adc    al,0xf6
  41f6ca:	shl    BYTE PTR [esi-0x7cbe8f06],cl
  41f6d0:	cmp    al,0xa1
  41f6d2:	jnp    0x41f6f2
  41f6d4:	aad    0x7f
  41f6d6:	jle    0x41f6e0
  41f6d8:	mov    ch,0x40
  41f6da:	mov    edx,0x5ceb3a0b
  41f6df:	bswap  edi
  41f6e1:	(bad)  
  41f6e3:	mov    cl,0xd5
  41f6e5:	pusha  
  41f6e6:	call   0x8a45907a
  41f6eb:	hlt    
  41f6ec:	xchg   ebp,eax
  41f6ed:	mov    ebx,0xd2d5f025
  41f6f2:	lods   eax,DWORD PTR ds:[esi]
  41f6f3:	push   ebx
  41f6f4:	xchg   edi,eax
  41f6f5:	sbb    DWORD PTR [eax+edx*2-0x659c4153],edx
  41f6fc:	and    eax,0x7d4f2b53
  41f701:	xchg   bl,dl
  41f703:	sub    al,0xf1
  41f705:	mov    esi,0x4e6f6197
  41f70a:	xor    eax,0xf6ac7cf5
  41f70f:	mov    ds:0xba4c78e5,al
  41f714:	and    DWORD PTR [ebx],ecx
  41f716:	mov    ?,WORD PTR [ebx-0xa82a933]
  41f71c:	les    ebx,FWORD PTR [edi-0x5a377726]
  41f722:	and    al,ch
  41f724:	call   0x4a51d00b
  41f729:	out    dx,al
  41f72a:	data16 or al,0x9b
  41f72d:	xchg   ebp,eax
  41f72e:	sub    esi,ebx
  41f730:	daa    
  41f731:	inc    esp
  41f732:	dec    esi
  41f733:	mov    edx,0x1dcd6725
  41f738:	pop    es
  41f739:	repz fwait
  41f73b:	cmp    al,0xc7
  41f73d:	int    0x21
  41f73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f740:	sbb    DWORD PTR [edx-0x65b70fab],ecx
  41f746:	js     0x41f6d0
  41f748:	and    al,0x5b
  41f74b:	add    bl,bl
  41f74d:	out    dx,eax
  41f74e:	lock ror DWORD PTR [edx+0x52],1
  41f752:	xchg   DWORD PTR [esi+0x6b],ebp
  41f755:	fwait
  41f756:	and    dl,BYTE PTR ds:0xeae634cb
  41f75c:	loop   0x41f780
  41f75e:	fidivr WORD PTR [esi-0x729d2067]
  41f764:	mov    ds:0x114e9656,al
  41f769:	data16 adc BYTE PTR [eax-0x28],bh
  41f76d:	enter  0xf451,0x36
  41f771:	jp     0x41f772
  41f773:	add    al,0x26
  41f775:	mov    ds:0x5c7112e1,eax
  41f77a:	xchg   ebp,eax
  41f77b:	es mov eax,eax
  41f77e:	jbe    0x41f752
  41f780:	into   
  41f781:	dec    ebx
  41f782:	dec    edi
  41f783:	xor    BYTE PTR ds:0xd53bcb74,bl
  41f789:	adc    al,0x37
  41f78b:	outs   dx,BYTE PTR ds:[esi]
  41f78c:	pop    esi
  41f78d:	sar    BYTE PTR [esi+0x2310e3cb],1
  41f793:	ds push edi
  41f795:	gs sub al,0x65
  41f798:	push   ebp
  41f799:	sbb    ch,dl
  41f79b:	lds    edi,FWORD PTR [eax+0x4a3fff1d]
  41f7a1:	inc    edx
  41f7a2:	aaa    
  41f7a3:	xor    DWORD PTR [ebx+0x7aa570f2],ebx
  41f7a9:	pushf  
  41f7aa:	mov    cl,0x95
  41f7ac:	push   0x65ba6649
  41f7b1:	das    
  41f7b2:	inc    esi
  41f7b3:	cmp    dl,BYTE PTR [edi+eiz*2+0x67]
  41f7b7:	int    0xbc
  41f7b9:	push   es
  41f7ba:	in     al,dx
  41f7bb:	ins    BYTE PTR es:[edi],dx
  41f7bc:	fld    DWORD PTR [edx+0x15a689b1]
  41f7c2:	and    al,0x59
  41f7c4:	push   edi
  41f7c5:	ins    DWORD PTR es:[edi],dx
  41f7c6:	pushf  
  41f7c7:	xor    eax,0x26d38e75
  41f7cc:	ja     0x41f7a3
  41f7ce:	fdivr  DWORD PTR [edx-0x53f054da]
  41f7d4:	mov    ebp,0x131e1018
  41f7d9:	jg     0x41f812
  41f7db:	and    edi,DWORD PTR [ebx-0xef5b5e8]
  41f7e1:	test   eax,0x23faaf4f
  41f7e6:	mov    WORD PTR [ecx+0x36],?
  41f7e9:	xor    DWORD PTR [eax],edx
  41f7eb:	out    dx,al
  41f7ec:	jno    0x41f7d7
  41f7ee:	mov    esp,ebp
  41f7f0:	data16 aad 0x20
  41f7f3:	fstp   QWORD PTR [edx]
  41f7f5:	jae    0x41f7d4
  41f7f7:	xchg   ebp,eax
  41f7f8:	adc    ebx,esp
  41f7fa:	sub    al,0xf2
  41f7fc:	mov    WORD PTR [esp+ebx*4],es
  41f7ff:	or     eax,edx
  41f801:	iret   
  41f802:	xor    eax,0x2ba35978
  41f807:	pop    esp
  41f808:	add    BYTE PTR [ecx-0x3316e498],dl
  41f80e:	push   es
  41f80f:	js     0x41f7ed
  41f811:	not    BYTE PTR [ebx+0x6dd99107]
  41f817:	in     al,dx
  41f818:	mov    ah,0xe8
  41f81a:	dec    ebx
  41f81b:	push   0xffffff8e
  41f81d:	lods   eax,DWORD PTR ds:[esi]
  41f81e:	add    DWORD PTR [esi+0x39],edi
  41f821:	jb     0x41f7d2
  41f823:	neg    DWORD PTR [edi+0x3]
  41f826:	aas    
  41f827:	ret    0x9929
  41f82a:	mov    bl,0x20
  41f82c:	rcl    DWORD PTR [edi],0x95
  41f82f:	push   ds
  41f830:	pop    ss
  41f831:	retf   
  41f832:	je     0x41f7dc
  41f834:	stos   DWORD PTR es:[edi],eax
  41f835:	adc    eax,0x529e72d7
  41f83a:	sub    BYTE PTR es:[ebx-0x79c880b4],ch
  41f841:	sbb    DWORD PTR [edi],esi
  41f843:	in     al,dx
  41f844:	dec    eax
  41f845:	jp     0x41f7f4
  41f847:	mul    BYTE PTR [ecx+0x20e58195]
  41f84d:	xchg   ebx,eax
  41f84e:	cmp    al,0xe7
  41f850:	dec    esi
  41f851:	add    eax,0x523e8e8b
  41f856:	cwde   
  41f857:	cli    
  41f858:	clc    
  41f859:	jmp    0xf38:0x8a178b3b
  41f860:	js     0x41f818
  41f862:	adc    eax,0x92b893b9
  41f867:	sub    eax,0xb13ce594
  41f86c:	push   edx
  41f86d:	pushf  
  41f86e:	loop   0x41f84a
  41f870:	lea    edi,[ebp+edx*1-0x80]
  41f874:	or     eax,0x5b16a85e
  41f879:	mov    ecx,0x750901f5
  41f87e:	adc    ch,BYTE PTR [edi-0x398818d9]
  41f884:	jmp    0x41f89a
  41f886:	dec    ebx
  41f887:	adc    bl,BYTE PTR [ebx+ecx*1-0x3abb4ef0]
  41f88e:	mov    ebp,0xfaf3dd2e
  41f893:	lea    ebp,[edi-0x30]
  41f896:	add    eax,0xcb6d6176
  41f89b:	(bad)  
  41f89c:	clc    
  41f89d:	jae    0x41f91c
  41f89f:	fs jle 0x41f90d
  41f8a2:	and    DWORD PTR [eax],ecx
  41f8a4:	test   esp,ebx
  41f8a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8a7:	push   0x67
  41f8a9:	jmp    FWORD PTR [edx+eax*8]
  41f8ac:	fadd   QWORD PTR [esi+0x19]
  41f8af:	arpl   WORD PTR [edx-0x78],ax
  41f8b2:	in     eax,0xa0
  41f8b4:	call   0xf64d8e27
  41f8b9:	jmp    0x41f8db
  41f8bb:	pop    ebp
  41f8bc:	cwde   
  41f8bd:	push   0xe78fcb30
  41f8c2:	push   ax
  41f8c4:	mov    ds:0xb1f7f53c,al
  41f8c9:	nop
  41f8ca:	ds mov edi,0xc0eac5a4
  41f8d0:	sub    edi,DWORD PTR [eax+0x1f]
  41f8d3:	mov    dl,0x54
  41f8d5:	popf   
  41f8d6:	nop
  41f8d7:	les    ecx,FWORD PTR [ecx+0x2ae9f9ab]
  41f8dd:	sub    dl,bl
  41f8df:	fist   DWORD PTR [edi-0xae94b6f]
  41f8e5:	hlt    
  41f8e6:	fs in  eax,dx
  41f8e8:	cs pusha 
  41f8ea:	dec    ebp
  41f8eb:	rcl    ah,1
  41f8ed:	lea    esp,[ebx]
  41f8ef:	xor    dh,BYTE PTR [esi]
  41f8f1:	int3   
  41f8f2:	xlat   BYTE PTR ds:[ebx]
  41f8f3:	pop    es
  41f8f4:	mov    eax,0x65bbbef
  41f8f9:	adc    ebp,ecx
  41f8fb:	std    
  41f8fc:	cli    
  41f8fd:	mov    DWORD PTR [ebp+0x4d],eax
  41f900:	pop    ds
  41f901:	push   esi
  41f902:	adc    ch,BYTE PTR [eax-0x50851ae0]
  41f908:	ins    BYTE PTR es:[edi],dx
  41f909:	mov    eax,ds:0xf5f709a2
  41f90e:	dec    edi
  41f90f:	mov    bl,0xed
  41f911:	or     ecx,DWORD PTR [ebx+0x59]
  41f914:	fld    DWORD PTR [ecx+0x41]
  41f917:	xchg   ebx,eax
  41f918:	mov    DWORD PTR [edi+0x5a8d1d91],0xa7e143f6
  41f922:	jns    0x41f8c7
  41f924:	test   BYTE PTR [edx+ebx*2],al
  41f927:	mov    ecx,0x4058295a
  41f92c:	ffree  st(5)
  41f92e:	xchg   ebx,eax
  41f92f:	sbb    esp,DWORD PTR [ebp-0x61]
  41f932:	ss in  eax,0x57
  41f935:	jg     0x41f96d
  41f937:	cmp    al,0x90
  41f939:	fisttp DWORD PTR [eax+esi*8]
  41f93c:	push   es
  41f93d:	ja     0x41f901
  41f93f:	data16 adc bl,dl
  41f942:	xchg   edx,eax
  41f943:	fisubr WORD PTR [ebx]
  41f945:	(bad)  
  41f947:	leave  
  41f948:	sub    edx,DWORD PTR [eax]
  41f94a:	fbld   TBYTE PTR [edx]
  41f94c:	pop    esp
  41f94d:	repz jle 0x41f8f4
  41f950:	add    al,0x7f
  41f952:	push   edx
  41f953:	scas   al,BYTE PTR es:[edi]
  41f954:	add    eax,0x4ea8f3b5
  41f959:	or     eax,DWORD PTR ds:0xd68d29fd
  41f95f:	fmul   QWORD PTR [edi+0x53]
  41f962:	sub    eax,0xb9c38b3d
  41f967:	fcom   DWORD PTR [edi]
  41f969:	mov    ebx,0xecc599e8
  41f96f:	out    0xab,al
  41f971:	add    eax,0xe3ec44b6
  41f976:	fbstp  TBYTE PTR [esi-0x3d]
  41f979:	test   BYTE PTR [edi+0x1a204f4d],0xd3
  41f980:	dec    edx
  41f981:	sub    BYTE PTR [ebp-0x3e],0x58
  41f985:	pop    es
  41f986:	dec    edi
  41f987:	neg    BYTE PTR [esi+0x431f953d]
  41f98d:	fsubr  st(7),st
  41f98f:	cmp    eax,0x282590a
  41f994:	out    0x19,eax
  41f996:	out    dx,eax
  41f997:	je     0x41f98d
  41f999:	adc    eax,edi
  41f99b:	cmp    ah,BYTE PTR [esi+0x2ad65f71]
  41f9a1:	xor    eax,0x74f75bcc
  41f9a6:	ror    BYTE PTR [eax],cl
  41f9a8:	xor    DWORD PTR [edx-0x56492fdc],ebx
  41f9ae:	sbb    eax,0x87f8c20a
  41f9b3:	shr    BYTE PTR [edx+ecx*4-0x300612f3],1
  41f9ba:	mov    edx,0xa45c918e
  41f9bf:	aad    0x96
  41f9c1:	in     eax,dx
  41f9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9c3:	inc    ebp
  41f9c4:	jo     0x41f977
  41f9c6:	(bad)  
  41f9c7:	jo     0x41f966
  41f9c9:	call   DWORD PTR [edx+0x6d12c0d9]
  41f9cf:	or     eax,0x828a34ef
  41f9d4:	sbb    eax,0x2762765b
  41f9d9:	jno    0x41fa4c
  41f9db:	lods   eax,DWORD PTR ds:[esi]
  41f9dc:	aaa    
  41f9dd:	mov    al,ds:0x22ad96eb
  41f9e2:	inc    ebp
  41f9e3:	jp     0x41f9a2
  41f9e5:	push   0x7a6d001e
  41f9ea:	jg     0x41fa4e
  41f9ec:	(bad)  
  41f9ed:	frstor ds:0xd2448f0d
  41f9f3:	push   edx
  41f9f4:	ret    0x2465
  41f9f7:	ror    BYTE PTR [eax-0x2c],cl
  41f9fa:	stos   BYTE PTR es:[edi],al
  41f9fb:	int    0x32
  41f9fd:	jl     0x41fa66
  41f9ff:	add    ah,BYTE PTR [esi+0x45]
  41fa02:	loop   0x41fa64
  41fa04:	jb     0x41fa26
  41fa06:	test   BYTE PTR [ebx],0x3c
  41fa09:	int    0x18
  41fa0b:	popa   
  41fa0c:	mov    ds:0xb9d7bc30,al
  41fa11:	pop    es
  41fa12:	mov    ecx,0xa08924d1
  41fa17:	es cdq 
  41fa19:	xor    eax,0x6eff645
  41fa1e:	push   esp
  41fa1f:	pop    es
  41fa20:	popa   
  41fa21:	dec    edi
  41fa22:	stos   BYTE PTR es:[edi],al
  41fa23:	cmp    DWORD PTR [edi],ebx
  41fa25:	sahf   
  41fa26:	ds ret 
  41fa28:	cdq    
  41fa29:	push   edi
  41fa2a:	xor    al,0x44
  41fa2c:	ja     0x41f9c5
  41fa2e:	inc    eax
  41fa2f:	jge    0x41fa6f
  41fa31:	js     0x41fa0b
  41fa33:	inc    ecx
  41fa34:	lea    ebp,[esi+0x2d2d162e]
  41fa3a:	call   DWORD PTR [eax+0x2a]
  41fa3d:	cdq    
  41fa3e:	xchg   esi,eax
  41fa3f:	ret    
  41fa40:	cmp    BYTE PTR [edi],ah
  41fa42:	push   ecx
  41fa43:	rcl    DWORD PTR [ebp-0x64],cl
  41fa46:	dec    edi
  41fa47:	jae    0x41fa59
  41fa49:	sbb    WORD PTR [ebp-0x2c5963c6],cx
  41fa50:	dec    ebp
  41fa51:	pop    esi
  41fa52:	aad    0x6
  41fa54:	rcl    BYTE PTR [ecx-0x2c6746f8],1
  41fa5a:	cmp    bl,BYTE PTR [ebx+0x79]
  41fa5d:	fisub  DWORD PTR [eax+0x2d]
  41fa60:	sbb    eax,0x3fb816b8
  41fa65:	jmp    0x52411487
  41fa6a:	mov    ebp,0x4a2ae9a7
  41fa6f:	sbb    eax,0xa78130dc
  41fa74:	jmp    0x41fa30
  41fa76:	int    0xa
  41fa78:	or     edx,DWORD PTR [eax]
  41fa7a:	pop    ecx
  41fa7b:	inc    ebp
  41fa7c:	xchg   esi,eax
  41fa7d:	int3   
  41fa7e:	adc    al,cl
  41fa80:	sbb    ebx,DWORD PTR [ebx-0x71502a56]
  41fa86:	push   ebp
  41fa87:	push   ecx
  41fa88:	cmp    edx,DWORD PTR [edi-0x16]
  41fa8b:	shl    DWORD PTR [edx-0x62],1
  41fa8e:	inc    ecx
  41fa8f:	addr16 popf 
  41fa91:	sbb    eax,0xa3acfbad
  41fa96:	inc    esp
  41fa97:	cmp    DWORD PTR [ebx+0x5],ecx
  41fa9a:	mov    ebx,0xfcddc323
  41fa9f:	jl     0x41faef
  41faa1:	mov    ch,0xe3
  41faa3:	mov    esp,DWORD PTR [ebp-0x6eff277]
  41faa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faaa:	push   ds
  41faab:	jge    0x41fa86
  41faad:	or     edi,edx
  41faaf:	dec    edi
  41fab0:	sbb    al,0xdc
  41fab2:	mov    ecx,0x32dff988
  41fab7:	es out 0x35,eax
  41faba:	dec    BYTE PTR [esi+0x192cc47a]
  41fac0:	enter  0x604,0x63
  41fac4:	leave  
  41fac5:	lahf   
  41fac6:	pop    ss
  41fac7:	mov    ebx,0x539adf06
  41facc:	mov    ecx,0x1af20b4d
  41fad1:	sbb    BYTE PTR [edi+edx*8-0x73],cl
  41fad5:	and    DWORD PTR [edi-0x4b534278],0xd8990b25
  41fadf:	aas    
  41fae0:	test   DWORD PTR [ebp+edx*8+0xa7ec233],esp
  41fae7:	pop    ebp
  41fae8:	push   esi
  41fae9:	lods   eax,DWORD PTR ds:[esi]
  41faea:	push   esp
  41faeb:	lea    edx,[eax+0x3c]
  41faee:	cs call 0xe4f98e6c
  41faf4:	sub    DWORD PTR [esi],esp
  41faf6:	repz arpl WORD PTR [esi+0x61],si
  41fafa:	loop   0x41faf7
  41fafc:	add    eax,0xcbced2f6
  41fb01:	jne    0x41fb68
  41fb03:	mov    BYTE PTR [ecx],dl
  41fb05:	push   ss
  41fb06:	shr    DWORD PTR [ebx+0x6ccc4fa2],1
  41fb0c:	addr16 das 
  41fb0e:	ds jecxz 0x41fb07
  41fb11:	mov    bh,BYTE PTR [esi+0x4d9665fe]
  41fb17:	xlat   BYTE PTR ds:[ebx]
  41fb18:	mov    ds:0xcae36b3b,al
  41fb1d:	adc    ebx,DWORD PTR [ecx]
  41fb1f:	push   edi
  41fb20:	call   0x1d7d:0x4f1ce015
  41fb27:	lock stc 
  41fb29:	xor    cl,cl
  41fb2b:	jnp    0x41fb84
  41fb2d:	add    ebx,ecx
  41fb2f:	lods   al,BYTE PTR ds:[esi]
  41fb30:	lods   al,BYTE PTR ds:[esi]
  41fb31:	dec    ebp
  41fb32:	int3   
  41fb33:	mov    al,BYTE PTR [esi]
  41fb35:	shr    BYTE PTR [ebp-0x7adc5e7e],1
  41fb3b:	pop    ebp
  41fb3c:	push   edx
  41fb3d:	nop
  41fb3e:	jnp    0x41fb48
  41fb40:	out    0x1,al
  41fb42:	and    al,0x36
  41fb44:	outs   dx,BYTE PTR ds:[esi]
  41fb45:	jns    0x41fb2a
  41fb47:	or     DWORD PTR [eax-0x4c],0xa2fe6f02
  41fb4e:	or     bl,BYTE PTR [edi-0x4eab5eac]
  41fb54:	pop    es
  41fb55:	in     al,dx
  41fb56:	daa    
  41fb57:	jmp    0x41fb90
  41fb59:	xchg   esi,eax
  41fb5a:	mov    dh,0x7b
  41fb5c:	jne    0x41fb1a
  41fb5e:	xchg   BYTE PTR [esi],ch
  41fb60:	fidiv  WORD PTR [ecx+0x6494acd7]
  41fb66:	add    BYTE PTR [ebx],dh
  41fb68:	push   es
  41fb69:	ja     0x41fb9a
  41fb6b:	or     al,0x3d
  41fb6d:	es cmp eax,0x103ea488
  41fb73:	ja     0x41fb0b
  41fb75:	sbb    al,0x31
  41fb77:	daa    
  41fb78:	test   BYTE PTR [ecx+0x7bf2c3c5],0x14
  41fb7f:	aas    
  41fb80:	jb     0x41fbfb
  41fb82:	adc    eax,esi
  41fb84:	test   DWORD PTR [ecx-0x3a047e83],esi
  41fb8a:	ret    
  41fb8b:	push   0xffffff93
  41fb8d:	nop
  41fb8e:	js     0x41fb1a
  41fb90:	jbe    0x41fbeb
  41fb92:	sbb    BYTE PTR [esi+0x2c261658],bh
  41fb98:	ds cdq 
  41fb9a:	cli    
  41fb9b:	jecxz  0x41fba8
  41fb9d:	out    dx,al
  41fb9e:	push   esi
  41fb9f:	cdq    
  41fba0:	mov    al,0xd1
  41fba2:	adc    bl,ah
  41fba4:	or     cl,BYTE PTR [eax+0x64]
  41fba7:	mul    BYTE PTR [eax-0x2]
  41fbaa:	repnz fisubr WORD PTR [edi+ebp*2-0x5f]
  41fbaf:	pop    ss
  41fbb0:	(bad)  
  41fbb2:	std    
  41fbb3:	cmc    
  41fbb4:	test   eax,0x1739d
  41fbb9:	clc    
  41fbba:	add    al,0x0
  41fbbc:	add    BYTE PTR [ecx-0x6af1fd81],ch
  41fbc2:	hlt    
  41fbc3:	and    ebx,DWORD PTR [esi]
  41fbc5:	imul   esp,DWORD PTR [ecx-0x6e9056e3],0x48
  41fbcc:	call   0x3605:0xafc00117
  41fbd3:	mov    cl,BYTE PTR [edx+0x6d4c2783]
  41fbd9:	xchg   ebp,eax
  41fbda:	(bad)  
  41fbdb:	mov    eax,ds:0x5a43ba11
  41fbe0:	or     eax,0xe022f3bb
  41fbe5:	pop    ebp
  41fbe6:	test   eax,0x3f159686
  41fbeb:	adc    BYTE PTR [ecx-0x143c9718],ch
  41fbf1:	mov    ch,0x2
  41fbf3:	mov    ecx,0xc99e9cdd
  41fbf8:	xchg   ebp,eax
  41fbf9:	add    DWORD PTR es:[ebx+0x1a],ebx
  41fbfd:	dec    eax
  41fbfe:	and    esi,0x3b
  41fc01:	inc    eax
  41fc02:	das    
  41fc03:	push   cs
  41fc04:	or     bh,BYTE PTR [ebx]
  41fc06:	shl    DWORD PTR [eax+esi*1+0x68],cl
  41fc0a:	popa   
  41fc0b:	daa    
  41fc0c:	jp     0x41fb96
  41fc0e:	iret   
  41fc0f:	test   eax,0x60592da2
  41fc14:	mov    eax,ds:0x58ae7846
  41fc19:	jnp    0x41fbaa
  41fc1b:	inc    eax
  41fc1c:	pop    ebx
  41fc1d:	mov    eax,0x5ffbe83
  41fc22:	and    al,0x13
  41fc24:	stc    
  41fc25:	adc    bh,BYTE PTR [ebx]
  41fc27:	ss dec eax
  41fc29:	pop    ebx
  41fc2a:	mov    esp,0xe47fd58a
  41fc2f:	pop    edi
  41fc30:	cmp    eax,0x277045f6
  41fc35:	je     0x41fc2a
  41fc37:	or     eax,0x6694dec4
  41fc3c:	push   ss
  41fc3d:	or     ecx,edi
  41fc3f:	js     0x41fc93
  41fc41:	pop    ebp
  41fc42:	or     BYTE PTR [ebp+0x9f616ab],dl
  41fc48:	cli    
  41fc49:	pop    eax
  41fc4a:	adc    al,0x93
  41fc4c:	adc    ebp,0x7fe7f8d
  41fc52:	and    eax,0x7f43b9ca
  41fc57:	mov    cl,0xe3
  41fc59:	aad    0x6
  41fc5b:	dec    esp
  41fc5c:	or     eax,0xce887572
  41fc61:	fld    QWORD PTR [esi-0x7441e322]
  41fc67:	es xchg ebx,eax
  41fc69:	push   ss
  41fc6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc6b:	stc    
  41fc6c:	inc    ecx
  41fc6d:	mov    dl,0x92
  41fc6f:	add    eax,0x117c64af
  41fc74:	lods   al,BYTE PTR ds:[esi]
  41fc75:	lock mov edi,0x3248581d
  41fc7b:	mov    eax,0x7a0dbabd
  41fc80:	fldcw  WORD PTR [eax-0x4a954779]
  41fc86:	(bad)  
  41fc87:	fsub   DWORD PTR [esi+0x4b]
  41fc8a:	shr    DWORD PTR [edx],1
  41fc8c:	ret    
  41fc8d:	pop    edx
  41fc8e:	fdivr  DWORD PTR [eax-0xd78ddd8]
  41fc94:	or     DWORD PTR [ecx],edx
  41fc96:	adc    cl,0x47
  41fc99:	pop    ecx
  41fc9a:	sub    BYTE PTR [ebx+ebp*1+0x63afbc72],al
  41fca1:	and    DWORD PTR [edi-0x43504fbd],0xffffff9f
  41fca8:	jae    0x41fd1c
  41fcaa:	jae    0x41fc70
  41fcac:	sub    ebx,edi
  41fcae:	mov    al,0xbd
  41fcb0:	in     eax,0xf9
  41fcb2:	jmp    0xda6e7f8b
  41fcb7:	adc    ebx,ebp
  41fcb9:	(bad)  
  41fcba:	fld    DWORD PTR [edi+0x63bb610]
  41fcc0:	or     al,0x28
  41fcc2:	lods   eax,DWORD PTR ds:[esi]
  41fcc3:	jns    0x41fd1c
  41fcc5:	(bad)  
  41fcc6:	adc    eax,0x71851a5e
  41fccb:	mov    BYTE PTR ds:0x20803083,al
  41fcd1:	mov    esi,0xa1036174
  41fcd6:	js     0x41fcc6
  41fcd8:	adc    eax,0xa35b0d5b
  41fcdd:	jb     0x41fcdb
  41fcdf:	or     eax,0xf52fd20f
  41fce4:	mov    eax,0xd899f29c
  41fce9:	out    dx,eax
  41fcea:	das    
  41fceb:	add    BYTE PTR gs:[esi-0x27d556b0],cl
  41fcf2:	push   edx
  41fcf3:	iret   
  41fcf4:	pop    esi
  41fcf5:	mov    dl,0x1
  41fcf7:	ret    
  41fcf8:	or     DWORD PTR gs:[eax-0x37c3d12c],ebp
  41fcff:	ins    DWORD PTR es:[edi],dx
  41fd00:	adc    cl,BYTE PTR [esi-0x6b]
  41fd03:	(bad)  
  41fd04:	push   ds
  41fd05:	mov    esi,0x2891df58
  41fd0a:	cwde   
  41fd0b:	outs   dx,DWORD PTR ds:[esi]
  41fd0c:	xor    eax,0x8d751db2
  41fd11:	in     eax,dx
  41fd12:	mov    al,0xa6
  41fd14:	mov    bh,0xe1
  41fd16:	jns    0x41fccc
  41fd18:	or     DWORD PTR [ecx+0x437fdad5],0x4a
  41fd1f:	pop    ebp
  41fd20:	inc    esi
  41fd21:	dec    eax
  41fd22:	ficom  DWORD PTR [ecx]
  41fd24:	or     BYTE PTR [edx+0x70f8477a],0x44
  41fd2b:	jg     0x41fcf8
  41fd2d:	(bad)  
  41fd2e:	cmp    eax,0x83f84cdb
  41fd33:	lock xchg ecx,eax
  41fd35:	into   
  41fd36:	cmp    BYTE PTR [ecx-0x7a995cb3],dh
  41fd3c:	jb     0x41fce0
  41fd3e:	add    edx,DWORD PTR [eax+0xa7a00f5]
  41fd44:	sub    ebx,edx
  41fd46:	ss pop edi
  41fd48:	adc    edi,DWORD PTR gs:[edx+eiz*8]
  41fd4c:	call   0x1e3:0xbda66374
  41fd53:	push   ebx
  41fd54:	jbe    0x41fd6f
  41fd56:	das    
  41fd57:	jno    0x41fd95
  41fd59:	js     0x41fcfa
  41fd5b:	rcl    BYTE PTR [eax],1
  41fd5d:	lods   al,BYTE PTR ds:[esi]
  41fd5e:	std    
  41fd5f:	dec    ecx
  41fd60:	loopne 0x41fd10
  41fd62:	call   0xc159:0xa502377b
  41fd69:	mov    ebx,0x3484e9a1
  41fd6e:	leave  
  41fd6f:	fbstp  TBYTE PTR [esi]
  41fd71:	mov    ebp,0x105f8c27
  41fd76:	adc    al,0xbf
  41fd78:	aam    0xf7
  41fd7a:	mov    al,0x22
  41fd7c:	inc    esp
  41fd7d:	xchg   BYTE PTR [ebp+0x76],al
  41fd80:	mov    eax,ds:0xf629d64c
  41fd85:	cmp    al,0xf0
  41fd87:	repz cmp BYTE PTR [esi],dh
  41fd8a:	sub    BYTE PTR [eax],0x32
  41fd8d:	mov    ds:0xbbfa7bc,eax
  41fd92:	mov    dh,0xdd
  41fd94:	retf   0x780d
  41fd97:	aad    0x50
  41fd99:	mov    ah,0xf3
  41fd9b:	and    dh,cl
  41fd9d:	je     0x41fd27
  41fd9f:	mov    dl,0xa1
  41fda1:	jecxz  0x41fd9c
  41fda3:	add    al,0x98
  41fda5:	dec    esp
  41fda6:	fcmovb st,st(1)
  41fda8:	jecxz  0x41fd44
  41fdaa:	pusha  
  41fdab:	(bad)  
  41fdac:	jp     0x41fda0
  41fdae:	xchg   BYTE PTR [eax+0x1],ah
  41fdb1:	fucomp st(4)
  41fdb3:	jo     0x41fda6
  41fdb5:	adc    DWORD PTR [ecx-0x72],edi
  41fdb8:	imul   DWORD PTR [ebx-0x63962aab]
  41fdbe:	xchg   esi,eax
  41fdbf:	test   al,0xa1
  41fdc1:	sub    eax,0x92fd6050
  41fdc6:	xor    bl,BYTE PTR [esi+0x3f]
  41fdc9:	leave  
  41fdca:	add    eax,0x6d8631c7
  41fdcf:	rol    BYTE PTR fs:[ebx+0x6f6a20dd],0x3
  41fdd7:	push   cs
  41fdd8:	fidivr DWORD PTR [ebp+ecx*4-0x70cb01c7]
  41fddf:	xchg   esi,eax
  41fde0:	mov    esp,0x9758c992
  41fde5:	mov    cl,0x87
  41fde7:	stc    
  41fde8:	mov    esi,0x670b6889
  41fded:	shl    DWORD PTR [edi],cl
  41fdef:	int3   
  41fdf0:	pop    es
  41fdf1:	aas    
  41fdf2:	lods   al,BYTE PTR ds:[esi]
  41fdf3:	std    
  41fdf4:	cdq    
  41fdf5:	retf   0x7ab0
  41fdf8:	and    al,0xe1
  41fdfa:	pop    eax
  41fdfb:	pop    edx
  41fdfc:	inc    ebp
  41fdfd:	or     eax,0x8bef7e1b
  41fe02:	push   ds
  41fe03:	in     eax,0xc1
  41fe05:	sbb    cl,dh
  41fe07:	jmp    0xca1a1f1d
  41fe0c:	mov    edx,0xf3a5d6be
  41fe11:	outs   dx,DWORD PTR ds:[esi]
  41fe12:	in     al,0x59
  41fe14:	sub    al,0x4c
  41fe16:	cs push ebx
  41fe18:	xchg   edx,eax
  41fe19:	cs mov cl,0x11
  41fe1c:	sahf   
  41fe1d:	xchg   ebp,eax
  41fe1e:	xchg   ecx,eax
  41fe1f:	popf   
  41fe20:	es in  al,dx
  41fe22:	push   ebp
  41fe23:	div    BYTE PTR [ebp+edx*1-0x35]
  41fe27:	imul   edx,DWORD PTR [ecx+0x79],0x10
  41fe2b:	into   
  41fe2c:	lds    ecx,FWORD PTR fs:[eax+0xee5cb05]
  41fe33:	xchg   ebx,eax
  41fe34:	repnz xchg esp,eax
  41fe36:	xchg   DWORD PTR [esi],ecx
  41fe38:	jmp    0x41fe33
  41fe3a:	mov    ah,0x23
  41fe3c:	push   ds
  41fe3d:	xor    ch,ah
  41fe3f:	stos   BYTE PTR es:[edi],al
  41fe40:	and    eax,0x4e2c1945
  41fe45:	ficomp DWORD PTR [eax+0x662403a3]
  41fe4b:	jp     0x41fe42
  41fe4d:	sbb    esp,edx
  41fe4f:	stc    
  41fe50:	and    al,0x57
  41fe52:	add    al,0x2c
  41fe54:	inc    ebp
  41fe55:	adc    BYTE PTR [ebx+0x11],bl
  41fe58:	xor    al,0x56
  41fe5a:	push   ds
  41fe5b:	bound  esp,QWORD PTR [ebx-0x79c72af1]
  41fe61:	xor    eax,0x7a8ba2c9
  41fe66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe67:	(bad)  
  41fe68:	mov    ds:0xe4969d39,eax
  41fe6d:	mov    edi,ss
  41fe6f:	and    ebx,DWORD PTR [edx-0xb]
  41fe72:	mov    edi,0x33634341
  41fe77:	cmp    edi,DWORD PTR [edx]
  41fe79:	out    dx,al
  41fe7a:	das    
  41fe7b:	aam    0xf2
  41fe7d:	test   al,0xc7
  41fe7f:	cmp    al,0x4e
  41fe81:	scas   al,BYTE PTR es:[edi]
  41fe82:	add    al,0x26
  41fe84:	jge    0x41fe10
  41fe86:	mov    al,0xb2
  41fe88:	retf   
  41fe89:	scas   eax,DWORD PTR es:[edi]
  41fe8a:	xchg   BYTE PTR [ebx],bl
  41fe8c:	lock fwait
  41fe8e:	add    esi,eax
  41fe90:	ror    DWORD PTR [esi],0x29
  41fe93:	inc    edi
  41fe94:	xor    bl,al
  41fe96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe97:	fwait
  41fe98:	ret    0xb08
  41fe9b:	mov    al,ds:0xaceaf67b
  41fea0:	fcmovbe st,st(4)
  41fea2:	pop    esi
  41fea3:	scas   eax,DWORD PTR es:[edi]
  41fea4:	rcr    BYTE PTR [esi],1
  41fea6:	bnd jns 0x41fedb
  41fea9:	inc    ebx
  41feaa:	cmp    edi,DWORD PTR [edx-0x5dbde12]
  41feb0:	mov    dh,0xdc
  41feb2:	pop    esi
  41feb3:	(bad)  
  41feb4:	fdivr  DWORD PTR [edi]
  41feb6:	call   0x4da1fa0a
  41febb:	and    edi,DWORD PTR [edi-0x16]
  41febe:	mov    cl,0x96
  41fec0:	sahf   
  41fec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fec2:	in     al,dx
  41fec3:	ror    BYTE PTR [esi+0x14],0xa0
  41fec7:	jp     0x41fe4c
  41fec9:	sub    eax,ecx
  41fecb:	test   eax,0x412849fb
  41fed0:	fs ss dec ecx
  41fed3:	and    eax,0x4ecc3bb4
  41fed8:	(bad)  
  41feda:	shl    BYTE PTR ds:0x29410e51,1
  41fee0:	push   eax
  41fee1:	mov    edi,edx
  41fee3:	xor    ah,0x93
  41fee6:	retf   0x7f3f
  41fee9:	jb     0x41ff56
  41feeb:	add    BYTE PTR [ebx-0x28e9b7f7],cl
  41fef1:	cmp    BYTE PTR [edi-0x6bd6cc59],0x3c
  41fef8:	mov    BYTE PTR [eax],bh
  41fefa:	inc    edi
  41fefb:	mov    al,0x4b
  41fefd:	js     0x41fed0
  41feff:	lahf   
  41ff00:	hlt    
  41ff01:	loope  0x41fee8
  41ff03:	xchg   edi,eax
  41ff04:	xlat   BYTE PTR ds:[ebx]
  41ff05:	cmc    
  41ff06:	sub    ebx,DWORD PTR [edx+0x3a]
  41ff09:	pushf  
  41ff0a:	in     al,0xfc
  41ff0c:	sub    bl,BYTE PTR [eax+ecx*2]
  41ff0f:	call   0x4c62e0a2
  41ff14:	dec    eax
  41ff15:	cdq    
  41ff16:	lea    esp,[esi-0x5ed6951a]
  41ff1c:	or     edx,DWORD PTR [ebx-0x26]
  41ff1f:	shl    ecx,cl
  41ff21:	mov    eax,ds:0x85eef2b3
  41ff26:	jge    0x41ff49
  41ff28:	(bad)  
  41ff29:	cmp    eax,DWORD PTR [ecx-0x67]
  41ff2c:	mov    dl,0xf6
  41ff2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff2f:	(bad)  
  41ff30:	or     DWORD PTR [edi-0x40913f33],esi
  41ff36:	or     DWORD PTR [esi+0x45cf8d2b],edi
  41ff3c:	mov    esp,0x6839d9da
  41ff41:	jecxz  0x41fecd
  41ff43:	out    dx,al
  41ff44:	inc    ebp
  41ff45:	adc    edx,DWORD PTR [eax-0x391f18f]
  41ff4b:	and    eax,0x748f2641
  41ff50:	xchg   esp,eax
  41ff51:	sahf   
  41ff52:	mov    ebp,0x5554c45f
  41ff57:	mov    edi,0x37d894af
  41ff5c:	mov    BYTE PTR [ecx],al
  41ff5e:	out    0xac,eax
  41ff60:	adc    BYTE PTR [esp+esi*4],al
  41ff63:	stos   DWORD PTR es:[edi],eax
  41ff64:	sub    cl,BYTE PTR [ebx-0x29eada46]
  41ff6a:	xor    eax,0xa6f226f0
  41ff6f:	pop    eax
  41ff70:	sbb    edx,DWORD PTR [eax-0x4d]
  41ff73:	pop    ss
  41ff74:	mov    edx,0x181d8830
  41ff79:	jg     0x41ffa7
  41ff7b:	(bad)  
  41ff7c:	in     eax,dx
  41ff7d:	and    eax,0x5dbe3692
  41ff82:	adc    edx,ebp
  41ff84:	add    eax,0x40985a19
  41ff89:	or     al,0x2d
  41ff8b:	or     al,0xf7
  41ff8d:	daa    
  41ff8e:	dec    edx
  41ff8f:	cmp    al,0x9
  41ff91:	fstp   TBYTE PTR [ebp-0x27d1061b]
  41ff97:	jb     0x41fffe
  41ff99:	pop    esi
  41ff9a:	sahf   
  41ff9b:	rol    BYTE PTR [ecx],0xff
  41ff9e:	stos   DWORD PTR es:[edi],eax
  41ff9f:	shl    DWORD PTR [eax+edx*1+0x68f6d2ed],1
  41ffa6:	pushf  
  41ffa7:	aas    
  41ffa8:	or     bh,ah
  41ffaa:	fstp   TBYTE PTR [esi+0x5430957c]
  41ffb0:	push   ebp
  41ffb1:	inc    DWORD PTR [ecx+0x532bad71]
  41ffb7:	jb     0x41ffa6
  41ffb9:	je     0x41ff75
  41ffbb:	or     edi,0x403ae28e
  41ffc1:	call   0x5f9778f5
  41ffc6:	or     eax,0xb6e56264
  41ffcb:	test   eax,0x70dc7806
  41ffd0:	lds    eax,FWORD PTR [eax+0x63]
  41ffd3:	mov    dl,0xa8
  41ffd5:	jge    0x41ff67
  41ffd7:	lods   eax,DWORD PTR ds:[esi]
  41ffd8:	fisubr WORD PTR [ebx+0x419f0de7]
  41ffde:	call   0xce7d2da3
  41ffe3:	addr16 mov ds:0x91cb,eax
  41ffe7:	sti    
  41ffe8:	jnp    0x41ffce
  41ffea:	sar    DWORD PTR [ebp+0x265acd58],cl
  41fff0:	pusha  
  41fff1:	outs   dx,DWORD PTR ds:[esi]
  41fff2:	xor    DWORD PTR [ecx],eax
  41fff4:	iret   
  41fff5:	lock int 0x2b
  41fff8:	cld    
  41fff9:	fsubr  DWORD PTR [ebp+0x4e]
  41fffc:	xchg   edx,eax
  41fffd:	les    esi,FWORD PTR ds:0xee8f5651
  420003:	or     dh,BYTE PTR [ecx]
  420005:	mov    ds:0x87cb64e2,al
  42000a:	add    ah,BYTE PTR [esi-0x3650fa88]
  420010:	jmp    0x3d63:0xf2f759b1
  420017:	loope  0x420021
  420019:	xor    DWORD PTR [eax+0x36],0xfc6f5fe9
  420020:	bound  eax,QWORD PTR [eax+0x47]
  420023:	adc    cl,BYTE PTR ds:0x7bba6611
  420029:	xchg   ebp,eax
  42002a:	scas   al,BYTE PTR es:[edi]
  42002b:	mov    edx,0x90109b82
  420030:	or     DWORD PTR [ebx],0x86a75187
  420036:	mov    bl,0x4e
  420038:	lahf   
  420039:	(bad)  
  42003a:	or     BYTE PTR [edx+0x7daab2f1],bh
  420040:	test   al,0x87
  420042:	pop    eax
  420043:	xor    BYTE PTR [ecx+edi*4+0x4f64abb0],dh
  42004a:	arpl   ax,di
  42004c:	push   eax
  42004d:	or     eax,DWORD PTR [eax-0x8]
  420050:	out    dx,al
  420051:	cmp    al,0x75
  420053:	jno    0x4200a2
  420055:	pop    ebx
  420056:	stos   DWORD PTR es:[edi],eax
  420057:	sbb    al,0xe9
  420059:	pop    esp
  42005a:	imul   ebx,eax,0xa3483840
  420060:	shl    BYTE PTR [edi],0xf1
  420063:	push   cs
  420064:	push   eax
  420065:	xor    BYTE PTR [ebp+0x46],0xeb
  420069:	jnp    0x420065
  42006b:	pop    ebp
  42006c:	iret   
  42006d:	loopne 0x42003d
  42006f:	jp     0x4200ef
  420071:	loope  0x420068
  420073:	and    eax,eax
  420075:	scas   al,BYTE PTR es:[edi]
  420076:	mov    ds:0x8cd6bf28,al
  42007b:	mov    bh,BYTE PTR [ecx-0x762410ae]
  420081:	xchg   edi,eax
  420082:	cli    
  420083:	in     al,dx
  420084:	adc    esp,ecx
  420086:	out    dx,eax
  420087:	add    DWORD PTR [ecx-0x33],esp
  42008a:	test   DWORD PTR [edi],edi
  42008c:	shr    BYTE PTR es:0x46e9751b,0x53
  420094:	(bad)  
  420095:	bound  ecx,QWORD PTR [ebx-0x5d]
  420098:	test   DWORD PTR [edx],0xc25baafa
  42009e:	loopne 0x4200dc
  4200a0:	pop    ss
  4200a1:	(bad)  
  4200a2:	mov    ecx,0xd5e7a2dc
  4200a7:	push   eax
  4200a8:	mov    ecx,0xc02de65c
  4200ad:	or     DWORD PTR [esi+0x55],ecx
  4200b0:	jo     0x420119
  4200b2:	mov    eax,DWORD PTR [ebx-0x49]
  4200b5:	mov    ds:0xb713b617,al
  4200ba:	mov    bl,0xa7
  4200bc:	mov    bh,0x5
  4200be:	std    
  4200bf:	rcl    DWORD PTR gs:[ecx-0x6a6f9295],cl
  4200c6:	js     0x4200c9
  4200c8:	add    al,bh
  4200ca:	add    al,0x0
  4200cc:	add    BYTE PTR [esi+0x20],bl
  4200cf:	sbb    edi,DWORD PTR [ebx]
  4200d1:	mov    esi,0xf2ec15a8
  4200d6:	jo     0x42010b
  4200d8:	push   eax
  4200d9:	dec    edi
  4200da:	cs retf 0xbb39
  4200de:	push   esi
  4200df:	je     0x42012f
  4200e1:	xchg   ebx,eax
  4200e2:	cmp    eax,0x4cb25a96
  4200e7:	out    dx,eax
  4200e8:	push   ss
  4200e9:	push   ecx
  4200ea:	shr    BYTE PTR [eax-0x5c663baa],1
  4200f0:	bound  edi,QWORD PTR [ebx+eiz*1+0x672b63fc]
  4200f7:	pop    ebp
  4200f8:	mov    al,ds:0x235ab71f
  4200fd:	jge    0x4200f8
  4200ff:	and    BYTE PTR [eax+0x3866e94],dh
  420105:	pusha  
  420106:	dec    esp
  420107:	aad    0x40
  420109:	push   ebp
  42010a:	xchg   DWORD PTR [ecx],eax
  42010c:	adc    BYTE PTR [ebx],0x43
  42010f:	outs   dx,BYTE PTR ds:[esi]
  420110:	mov    eax,ds:0x9fc899c0
  420115:	pop    eax
  420116:	fcom   QWORD PTR [edx]
  420118:	gs sub eax,ecx
  42011b:	xchg   esi,eax
  42011c:	inc    ebx
  42011d:	cs jno 0x4200f4
  420120:	mov    ecx,0x1f64c53
  420125:	(bad)  
  420127:	or     cl,BYTE PTR [ebp+0x6a]
  42012a:	sub    edi,DWORD PTR [ebx+0x73]
  42012d:	push   eax
  42012e:	ins    BYTE PTR es:[edi],dx
  42012f:	hlt    
  420130:	aam    0x9e
  420132:	jo     0x4200ff
  420134:	mov    edx,0x14741bcf
  420139:	imul   ebx,DWORD PTR [eax-0x55],0xffffffe1
  42013d:	and    bl,cl
  42013f:	and    DWORD PTR [eax-0x39],0x6cab6574
  420146:	push   0xffffff9b
  420148:	sub    eax,0xad710d36
  42014d:	adc    eax,0x91582164
  420152:	int    0x32
  420154:	mov    ch,0xe6
  420156:	aas    
  420157:	sbb    BYTE PTR [edx],bl
  420159:	inc    esp
  42015a:	in     al,0x39
  42015c:	cmp    BYTE PTR [eax-0x15],bl
  42015f:	lock mov dh,0x8d
  420162:	mov    bl,0xcf
  420164:	xor    al,BYTE PTR [esi+0x6658bda7]
  42016a:	inc    ecx
  42016b:	cmp    DWORD PTR [edx],esp
  42016d:	adc    BYTE PTR [esi-0x14634ba5],cl
  420173:	addr16 mov edx,0x1166b3e9
  420179:	mov    edx,0x3977ce33
  42017e:	int    0x8f
  420180:	outs   dx,DWORD PTR ds:[esi]
  420181:	mov    DWORD PTR [eax],ebp
  420183:	outs   dx,DWORD PTR es:[esi]
  420185:	inc    edi
  420186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420187:	fcomp  QWORD PTR [ecx-0x1b]
  42018a:	push   0xffffffc6
  42018c:	ja     0x42015c
  42018e:	adc    DWORD PTR [edx],0x4c0c7193
  420194:	and    ebp,DWORD PTR [edx+0x5f]
  420197:	loop   0x420199
  420199:	jae    0x42012c
  42019b:	aaa    
  42019c:	cli    
  42019d:	inc    ecx
  42019e:	fld    DWORD PTR [ecx]
  4201a0:	sub    BYTE PTR [esi-0x437487ed],0x8d
  4201a7:	add    BYTE PTR [edi],ch
  4201a9:	scas   eax,DWORD PTR es:[edi]
  4201aa:	pop    ss
  4201ab:	clts   
  4201ad:	ds psubusb mm2,mm5
  4201b1:	out    0x63,al
  4201b3:	popf   
  4201b4:	and    bh,BYTE PTR ds:0x31b8d9fe
  4201ba:	or     BYTE PTR [edx+0x573d671d],0xaa
  4201c1:	fimul  DWORD PTR [eax]
  4201c3:	pop    ss
  4201c4:	ret    0x2e01
  4201c7:	ds sub al,0xbf
  4201ca:	and    al,BYTE PTR [edx]
  4201cc:	adc    eax,0x63553d84
  4201d1:	imul   edx,DWORD PTR [ebx+0x2e69dbb],0x29e744ee
  4201db:	rol    DWORD PTR [esi+0x59],cl
  4201de:	xor    BYTE PTR [ecx+0x58],dl
  4201e1:	add    DWORD PTR ds:0x4415fd7,ecx
  4201e7:	lods   eax,DWORD PTR ds:[esi]
  4201e8:	aad    0x5b
  4201ea:	mov    dl,0x94
  4201ec:	cwde   
  4201ed:	push   ebp
  4201ee:	stos   BYTE PTR es:[edi],al
  4201ef:	stc    
  4201f0:	or     esp,DWORD PTR [edi]
  4201f2:	pop    ebp
  4201f3:	xor    dl,bh
  4201f5:	loopne 0x420227
  4201f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201f8:	push   ds
  4201f9:	xchg   esp,eax
  4201fa:	inc    ecx
  4201fb:	and    DWORD PTR ds:0xd1358373,eax
  420201:	dec    edx
  420202:	mov    edi,0x106d2262
  420207:	add    dh,bl
  420209:	mov    dh,0x41
  42020b:	js     0x4201fe
  42020d:	add    ecx,DWORD PTR [edi+0xf]
  420210:	fs repz adc ecx,0x89f5139b
  420218:	inc    eax
  420219:	push   ecx
  42021a:	fdiv   DWORD PTR [eax+0x99c34c2]
  420220:	push   0x49070ac6
  420225:	imul   BYTE PTR [edi]
  420227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420228:	push   ecx
  420229:	lea    edx,[edi+0x1188bb11]
  42022f:	mov    eax,0x60c8333d
  420234:	jl     0x420275
  420236:	mov    cl,0x23
  420238:	stos   BYTE PTR es:[edi],al
  420239:	pop    esp
  42023a:	cmp    BYTE PTR [edi-0x39a9935a],al
  420240:	aad    0xae
  420242:	stos   BYTE PTR es:[edi],al
  420243:	mov    eax,ds:0xcd896b36
  420248:	mov    ebx,0xe9f8e53
  42024d:	jo     0x420252
  42024f:	mov    cl,0xcf
  420251:	push   es
  420252:	mov    ?,WORD PTR [eax+0x26]
  420255:	adc    BYTE PTR [ebp-0x28ffa534],bl
  42025b:	adc    ebx,DWORD PTR [eax+0x5b]
  42025e:	out    0x22,eax
  420260:	xor    eax,0x5483e5b1
  420265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420266:	push   cs
  420267:	cmp    eax,0xf04b6277
  42026c:	and    eax,0xa7e7a60c
  420271:	xchg   ebx,eax
  420272:	xchg   edx,ecx
  420274:	dec    esp
  420275:	xor    esp,DWORD PTR [ebp-0x63e73dba]
  42027b:	test   al,0xba
  42027d:	and    ch,BYTE PTR ds:0xc14a51d3
  420283:	stos   DWORD PTR es:[edi],eax
  420284:	or     eax,0x53c0ec39
  420289:	xchg   esi,eax
  42028a:	mov    ds:0xdacff779,al
  42028f:	sti    
  420290:	test   DWORD PTR [esi],0xf5828c1e
  420296:	push   esp
  420297:	dec    esi
  420298:	je     0x420229
  42029a:	dec    esp
  42029b:	das    
  42029c:	push   esi
  42029d:	jle    0x4202e1
  42029f:	fcomp  QWORD PTR [ebp+0x1a7c7abe]
  4202a5:	and    esi,esi
  4202a7:	jnp    0x42031b
  4202a9:	jp     0x4202ac
  4202ab:	out    dx,eax
  4202ac:	inc    esi
  4202ad:	dec    ebp
  4202ae:	adc    dl,BYTE PTR [edi+eax*8]
  4202b1:	push   esp
  4202b2:	fnsave [edx+0x3ea44726]
  4202b8:	gs push 0xb44a17cd
  4202be:	or     dl,BYTE PTR [ecx]
  4202c0:	loop   0x420295
  4202c2:	test   BYTE PTR [esi+0x18],bh
  4202c5:	xchg   esp,ebx
  4202c7:	mov    BYTE PTR [eax+0x51],cl
  4202ca:	ss push esp
  4202cc:	add    BYTE PTR [eax],bl
  4202ce:	sub    DWORD PTR [eax+edi*2],0xdc4e6a74
  4202d5:	inc    sp
  4202d7:	xor    dl,dl
  4202d9:	stc    
  4202da:	xor    ch,dh
  4202dc:	aaa    
  4202dd:	cmp    al,0x5e
  4202df:	pop    esp
  4202e0:	into   
  4202e1:	sub    BYTE PTR [eax+eax*1],al
  4202e4:	jne    0x4202d4
  4202e6:	push   ebp
  4202e7:	repnz or dh,BYTE PTR [ecx]
  4202ea:	stc    
  4202eb:	pusha  
  4202ec:	jmp    0x42036c
  4202ee:	lods   al,BYTE PTR ds:[esi]
  4202ef:	mov    bh,0x29
  4202f1:	cli    
  4202f2:	in     al,0x1f
  4202f4:	adc    ebp,esi
  4202f6:	xor    al,0xe1
  4202f8:	sbb    DWORD PTR [ebp+0x3bcfb9cf],ebx
  4202fe:	outs   dx,DWORD PTR ds:[esi]
  4202ff:	ds add eax,0x6ab68c86
  420305:	sbb    BYTE PTR [esi],dl
  420307:	pop    ss
  420308:	xor    ecx,DWORD PTR [esi]
  42030a:	idiv   DWORD PTR [edi]
  42030c:	mov    ecx,0x722913b7
  420311:	xor    esi,DWORD PTR [ebx+0x2]
  420314:	call   0x1eeb:0xdd3f948
  42031b:	call   0xe288:0x5b5b504b
  420322:	in     al,0xa2
  420324:	jae    0x420358
  420326:	cli    
  420327:	icebp  
  420328:	in     eax,0x82
  42032a:	repz jnp 0x4202f7
  42032d:	mov    cl,0x46
  42032f:	cmp    ecx,DWORD PTR [edi+0x7a0a8e9e]
  420335:	retf   
  420336:	daa    
  420337:	test   eax,ecx
  420339:	lods   al,BYTE PTR ds:[esi]
  42033a:	test   BYTE PTR [eax+0x6f754d57],ch
  420340:	ja     0x42039b
  420342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420343:	outs   dx,DWORD PTR ds:[esi]
  420344:	jp     0x420352
  420346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420347:	sar    edi,cl
  420349:	aad    0xa5
  42034b:	mov    WORD PTR [ecx],gs
  42034d:	xchg   ebp,eax
  42034e:	mov    ds:0xb8f708f9,eax
  420353:	sub    ch,0x94
  420356:	out    0xf3,eax
  420358:	jp     0x420385
  42035a:	mov    BYTE PTR [edi-0xa],bh
  42035d:	pop    edi
  42035e:	outs   dx,BYTE PTR ds:[esi]
  42035f:	or     al,0x0
  420361:	mov    edx,0xbc7bb70a
  420366:	inc    ecx
  420367:	and    edi,edx
  420369:	dec    esi
  42036a:	outs   dx,BYTE PTR ds:[esi]
  42036b:	jae    0x42030e
  42036d:	(bad)  
  42036f:	add    BYTE PTR [ebp*2-0x1cff1493],dh
  420376:	adc    al,0x5c
  420378:	or     al,BYTE PTR ds:0x58b6109e
  42037e:	fwait
  42037f:	outs   dx,BYTE PTR ds:[esi]
  420380:	xor    DWORD PTR [edx+0x70],esp
  420383:	repnz add bh,BYTE PTR [eax]
  420386:	clc    
  420387:	inc    esi
  420388:	lods   al,BYTE PTR ds:[esi]
  420389:	retf   
  42038a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42038b:	mov    ecx,0x5c316954
  420390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420391:	retf   0xe2b6
  420394:	clc    
  420395:	and    BYTE PTR [ebx+0x55],0x91
  420399:	xchg   ebp,eax
  42039a:	pop    edi
  42039b:	push   esp
  42039c:	mov    al,ds:0x18f2aff2
  4203a1:	call   0xa582:0x505da496
  4203a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a9:	fwait
  4203aa:	mov    dl,0x39
  4203ac:	mov    ds:0x83fc102,al
  4203b1:	sbb    BYTE PTR [ebx+0x39c8b2e2],cl
  4203b7:	xor    ch,BYTE PTR [eax+0x300a8f9f]
  4203bd:	cld    
  4203be:	popa   
  4203bf:	aas    
  4203c0:	into   
  4203c1:	jns    0x4203a5
  4203c3:	mov    ah,0xaf
  4203c5:	cmp    cl,BYTE PTR ds:0x3664bff0
  4203cb:	and    BYTE PTR [esp+ebp*2+0x46767725],ah
  4203d2:	add    BYTE PTR [ebp-0x66],0xe
  4203d6:	cld    
  4203d7:	pop    ecx
  4203d8:	mov    ebx,0x78d770f1
  4203dd:	lock mov ecx,0xb5f7a1cd
  4203e3:	iret   
  4203e4:	clc    
  4203e5:	fsubrp st(3),st
  4203e7:	lea    ebx,[edx+ecx*8-0x4c3f77f0]
  4203ee:	fxch   st(7)
  4203f0:	cli    
  4203f1:	mov    DWORD PTR [ebp-0x4b4f2c2c],esp
  4203f7:	nop
  4203f8:	mov    bh,dl
  4203fa:	shr    esi,0xcc
  4203fd:	jmp    0x300a:0xa9debe90
  420404:	sub    edi,ecx
  420406:	add    BYTE PTR [edi-0x56],al
  420409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42040a:	ja     0x420469
  42040c:	jmp    0x75c71ed7
  420411:	rol    BYTE PTR [edx-0x5c],1
  420414:	(bad)  
  420417:	or     si,WORD PTR [esi-0x1b2075da]
  42041e:	sub    ebp,eax
  420420:	and    al,0x8b
  420422:	add    al,0xc7
  420424:	sbb    eax,0xb37f1ae6
  420429:	es mov al,0x8c
  42042c:	lods   eax,DWORD PTR ds:[esi]
  42042d:	pop    ebx
  42042e:	loopne 0x42049d
  420430:	mov    eax,?
  420432:	mov    cl,0x2b
  420434:	mov    al,BYTE PTR [ebx]
  420436:	mov    ebp,0x9956574f
  42043b:	cwde   
  42043c:	scas   al,BYTE PTR es:[edi]
  42043d:	mov    eax,0x5671a794
  420442:	imul   esi,DWORD PTR [ebp-0x5d],0xdd2166ec
  420449:	adc    eax,0x79264064
  42044e:	retf   0x5937
  420451:	in     eax,0xe8
  420453:	mov    gs,esi
  420455:	dec    edx
  420456:	fdiv   QWORD PTR [eax+0x96292a]
  42045c:	inc    eax
  42045d:	ret    
  42045e:	add    BYTE PTR [ebx-0x140549b4],cl
  420464:	mov    edx,?
  420466:	inc    edx
  420467:	inc    ebx
  420468:	cmp    DWORD PTR [edi+0x11],0xa6d8995e
  42046f:	fdiv   QWORD PTR [eax]
  420471:	sar    DWORD PTR [edi+0x2c],cl
  420474:	xchg   edi,eax
  420475:	(bad)  
  420476:	iret   
  420477:	out    dx,al
  420478:	adc    BYTE PTR ds:0x6b4fa42,al
  42047e:	test   BYTE PTR [eax],cl
  420480:	stc    
  420481:	arpl   WORD PTR [ecx+esi*2],bx
  420484:	mov    ecx,0x83873887
  420489:	pop    ebx
  42048a:	mov    ds:0x8e421d4c,al
  42048f:	and    eax,0x143e4688
  420494:	dec    eax
  420495:	test   BYTE PTR [esi+0x4dfacf9b],al
  42049b:	sbb    DWORD PTR [ebp-0x28],esi
  42049e:	push   ebx
  42049f:	inc    ebx
  4204a0:	pushf  
  4204a1:	loope  0x420507
  4204a3:	push   ss
  4204a4:	mov    esi,0xe879f3e6
  4204a9:	ja     0x4204b6
  4204ab:	retf   0x57ff
  4204ae:	and    al,0xb5
  4204b0:	rcl    DWORD PTR [ebx-0x529b22b1],1
  4204b6:	ror    DWORD PTR [edx+0x37],cl
  4204b9:	xor    eax,0x166f3d0e
  4204be:	call   0x3b26:0x4d982ff7
  4204c5:	retf   
  4204c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204c7:	xchg   ecx,eax
  4204c8:	and    BYTE PTR [ebx],0x87
  4204cb:	addr16 out dx,eax
  4204cd:	xor    DWORD PTR [esi+0x69],eax
  4204d0:	in     eax,0x62
  4204d2:	mov    cl,0xb5
  4204d4:	xchg   ebp,eax
  4204d5:	push   eax
  4204d6:	cmp    al,0x35
  4204d8:	ins    BYTE PTR es:[edi],dx
  4204d9:	imul   eax,DWORD PTR [ebx-0x51],0xd6597730
  4204e0:	lock push ss
  4204e2:	in     eax,0x1a
  4204e4:	out    dx,eax
  4204e5:	dec    esp
  4204e6:	fs test al,0xb9
  4204e9:	mul    BYTE PTR [ecx]
  4204eb:	retf   
  4204ec:	pop    es
  4204ed:	adc    BYTE PTR [eax],dh
  4204ef:	idiv   ch
  4204f1:	ins    DWORD PTR es:[edi],dx
  4204f2:	out    dx,al
  4204f3:	mov    eax,0x608cb780
  4204f8:	vpunpcklbw ymm7,ymm0,YMMWORD PTR [eax-0x30]
  4204fd:	sub    eax,0xfe79ff62
  420502:	ja     0x4204f2
  420504:	ret    
  420505:	retf   
  420506:	repz das 
  420508:	ja     0x420582
  42050a:	arpl   WORD PTR [eax],ax
  42050c:	pop    ecx
  42050d:	mov    ecx,0xfcbff21f
  420512:	cmp    BYTE PTR [eax-0x4bb5b189],0xed
  420519:	add    dl,BYTE PTR [ebx+edi*8-0x1e]
  42051d:	cmp    al,BYTE PTR [eax]
  42051f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420520:	lods   eax,DWORD PTR ds:[esi]
  420521:	imul   ecx,DWORD PTR [edi],0x73571c36
  420527:	cld    
  420528:	popa   
  420529:	cli    
  42052a:	dec    ebx
  42052b:	sub    DWORD PTR ds:[eax-0x61926050],eax
  420532:	rol    edi,cl
  420534:	fwait
  420535:	or     bh,dl
  420537:	repnz mov dh,0xf9
  42053a:	out    dx,eax
  42053b:	or     DWORD PTR [ebx+0x5b2aa89f],0xad58175e
  420545:	push   esp
  420546:	cs mov cl,0xce
  420549:	cwde   
  42054a:	leave  
  42054b:	jge    0x42057e
  42054d:	mov    WORD PTR [edx+0x60],ds
  420550:	vsubpd xmm0,xmm2,XMMWORD PTR [edx-0x48]
  420555:	add    ah,BYTE PTR [ebp-0x62]
  420558:	sub    dh,BYTE PTR [eax-0x63]
  42055b:	mov    BYTE PTR [esi+0x2d],0x2d
  42055f:	add    esp,esi
  420561:	js     0x420566
  420563:	sbb    DWORD PTR [ebp-0x33],esi
  420566:	mov    edx,0x62a5b942
  42056b:	fdiv   DWORD PTR [edx+0x6a695317]
  420571:	je     0x420519
  420573:	mov    esp,0x82e0ed8
  420578:	data16 xor ah,BYTE PTR [ebp-0x13]
  42057c:	adc    BYTE PTR [ecx],bl
  42057e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42057f:	inc    ebp
  420580:	mov    ?,WORD PTR [ecx]
  420582:	cmp    ch,BYTE PTR [ebx]
  420584:	jecxz  0x42056d
  420586:	adc    BYTE PTR [eax+edx*8+0x622cc008],ch
  42058d:	and    eax,0x879071f3
  420592:	sub    al,0x70
  420594:	push   edi
  420595:	and    al,0xb0
  420597:	ficomp WORD PTR [esi+0xf]
  42059a:	mov    ds:0xb3da88eb,al
  42059f:	sub    eax,0xb628fbb
  4205a4:	jp     0x4205ef
  4205a6:	mov    ds,WORD PTR [ecx+0x2f95ec63]
  4205ac:	jmp    0x5f6e9c8b
  4205b1:	jae    0x4205d8
  4205b3:	xchg   esi,eax
  4205b4:	test   dl,ch
  4205b6:	push   esi
  4205b7:	sub    ebx,0x34
  4205ba:	push   cs
  4205bb:	push   ds
  4205bc:	xchg   ebx,eax
  4205bd:	std    
  4205be:	mov    ecx,0xc2d7e150
  4205c3:	shl    DWORD PTR [esi+edx*4+0x57fe4584],1
  4205ca:	(bad)  
  4205cb:	mov    edi,0xa8ab31ec
  4205d0:	add    eax,0x276aac74
  4205d5:	lea    edi,[ebp+0x1]
  4205d8:	add    al,bh
  4205da:	add    al,0x0
  4205dc:	add    bh,dl
  4205de:	jns    0x420613
  4205e0:	adc    ebp,DWORD PTR [ebp+0x28]
  4205e3:	aad    0x88
  4205e5:	mov    cl,0x45
  4205e7:	imul   DWORD PTR [ecx]
  4205e9:	cmp    BYTE PTR [eax+0x3d],bl
  4205ec:	sub    DWORD PTR [edi-0x69],ebx
  4205ef:	jp     0x420663
  4205f1:	sub    esi,DWORD PTR [esi]
  4205f3:	sar    BYTE PTR [esi+0x504c00a3],0xc5
  4205fa:	out    dx,al
  4205fb:	leave  
  4205fc:	inc    edx
  4205fd:	sub    eax,0x690b66b9
  420602:	xor    bl,dh
  420604:	push   cs
  420605:	(bad)  
  420606:	mov    cl,0x37
  420608:	xchg   BYTE PTR [ecx],ch
  42060a:	sub    eax,0xfeace6be
  42060f:	ret    0x86eb
  420612:	mov    ds:0x12186981,al
  420617:	cs mov ah,cl
  42061a:	push   cs
  42061b:	mov    ds:0xc8cdf36c,eax
  420620:	imul   esp,DWORD PTR [eax],0xffffff87
  420623:	mov    edx,0xfec16abf
  420628:	add    ch,ah
  42062a:	imul   ecx,DWORD PTR [edx+0x14],0xffffff90
  42062e:	addr16 jp 0x42060f
  420631:	inc    esi
  420632:	sbb    al,0xb0
  420634:	pushf  
  420635:	enter  0x6bb6,0x48
  420639:	or     DWORD PTR [ecx],ebx
  42063b:	cs push edi
  42063d:	mov    bl,0x6
  42063f:	aaa    
  420640:	test   bh,0x0
  420643:	imul   eax,DWORD PTR [esi+ecx*1],0xb13ecaad
  42064a:	or     al,BYTE PTR [edi]
  42064c:	ret    0xfb4a
  42064f:	rol    DWORD PTR [esi],0x98
  420652:	adc    eax,DWORD PTR [edx-0x71]
  420655:	rcl    BYTE PTR [eax+0x56],0x2c
  420659:	dec    ebp
  42065a:	push   esi
  42065b:	pop    ebx
  42065c:	and    DWORD PTR [ebp+0x57],edx
  42065f:	sub    bh,bl
  420661:	std    
  420662:	mov    al,0xe1
  420664:	mov    esi,0x64c982b6
  420669:	add    ebp,edi
  42066b:	mov    esp,DWORD PTR [edx+0x5d]
  42066e:	sbb    bh,ah
  420670:	jmp    0x420621
  420672:	es sti 
  420674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420675:	rcl    DWORD PTR [ecx+ecx*2-0x3c],0x92
  42067a:	mov    BYTE PTR [edi],0xe9
  42067d:	mov    eax,ds:0xeb9f3362
  420682:	shr    BYTE PTR [ecx+0x7c],cl
  420685:	ds nop
  420687:	stos   DWORD PTR es:[edi],eax
  420688:	(bad)  
  420689:	mov    bl,0x16
  42068b:	fwait
  42068c:	inc    ebx
  42068d:	add    BYTE PTR [esi-0xc],ah
  420690:	xchg   ecx,eax
  420691:	(bad)  
  420692:	mov    esi,0x74f5769f
  420697:	mov    edi,0x921c8978
  42069c:	adc    BYTE PTR [esi],ah
  42069e:	dec    esi
  42069f:	and    esi,eax
  4206a1:	pop    eax
  4206a2:	cs es inc ebp
  4206a5:	xchg   ebx,eax
  4206a6:	and    ch,BYTE PTR [ebx]
  4206a8:	sbb    ebx,edi
  4206aa:	mov    ds:0x475bf342,al
  4206af:	(bad)  
  4206b1:	stos   DWORD PTR es:[edi],eax
  4206b2:	cli    
  4206b3:	sub    dl,bl
  4206b5:	xchg   edi,eax
  4206b6:	aas    
  4206b7:	repnz cwde 
  4206b9:	xchg   ecx,eax
  4206ba:	mov    bh,0x6d
  4206bc:	dec    esi
  4206bd:	lods   eax,DWORD PTR ds:[esi]
  4206be:	dec    ebx
  4206bf:	mov    edx,0x8ee58328
  4206c4:	imul   ebx,DWORD PTR [esi+0x74],0x28754248
  4206cb:	dec    eax
  4206cc:	ins    DWORD PTR es:[edi],dx
  4206cd:	call   0x95b3:0x707e4643
  4206d4:	aam    0x73
  4206d6:	shl    bh,1
  4206d8:	xchg   ebp,eax
  4206d9:	jge    0x4206e5
  4206db:	lock dec esp
  4206dd:	mov    ebp,0x64fae45d
  4206e2:	inc    esp
  4206e3:	or     eax,0xb08efcd1
  4206e8:	aam    0xff
  4206ea:	mov    ds:0x9369452,al
  4206ef:	xchg   esp,esp
  4206f1:	(bad)  
  4206f2:	call   0xe49b:0xcbaadafe
  4206f9:	stos   BYTE PTR es:[edi],al
  4206fa:	loope  0x420758
  4206fc:	inc    ecx
  4206fd:	adc    ebp,eax
  4206ff:	inc    BYTE PTR [edx-0x13]
  420702:	jo     0x4206df
  420704:	test   DWORD PTR [ebp+0x5b],esi
  420707:	lahf   
  420708:	arpl   WORD PTR [esi],dx
  42070a:	mov    bl,0xf8
  42070c:	cwde   
  42070d:	(bad)  
  42070e:	mov    dl,0x93
  420710:	int3   
  420711:	ds (bad) 
  420713:	mov    ah,0xb3
  420715:	dec    eax
  420716:	jno    0x420775
  420718:	pop    esp
  420719:	dec    ebx
  42071a:	test   eax,0x56ed8c19
  42071f:	(bad)  
  420720:	pop    edx
  420721:	xchg   esp,eax
  420722:	cdq    
  420723:	leave  
  420724:	xor    BYTE PTR [edi+0x45],dh
  420727:	out    0x67,al
  420729:	xor    bl,BYTE PTR [ebx+0x39647ff2]
  42072f:	aam    0xb6
  420731:	or     al,0xf5
  420733:	or     esi,DWORD PTR [edx+0x163befaa]
  420739:	add    eax,DWORD PTR [ecx-0x5f]
  42073c:	rcl    DWORD PTR [esi+ebx*8-0x63],1
  420740:	cmp    cl,BYTE PTR [eax+eiz*8-0x757d324c]
  420747:	mov    bl,0x62
  420749:	mov    ch,cl
  42074b:	das    
  42074c:	dec    esp
  42074d:	pop    ebp
  42074e:	(bad)  
  420751:	fiadd  WORD PTR [edi+ecx*8-0x777ad12c]
  420758:	cmp    BYTE PTR [edx],bl
  42075a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42075b:	cs retf 
  42075d:	out    0x15,eax
  42075f:	mov    al,ds:0x36737b92
  420764:	out    dx,al
  420765:	pop    ebp
  420766:	jno    0x4207e2
  420768:	inc    edx
  420769:	adc    ebp,DWORD PTR [eax]
  42076b:	pop    ebx
  42076c:	fbstp  TBYTE PTR [ebp-0xb]
  42076f:	hlt    
  420770:	inc    ecx
  420771:	lahf   
  420772:	fsub   QWORD PTR [ebp+esi*2+0x7c]
  420776:	pop    DWORD PTR [eax-0x2a]
  420779:	aam    0xb9
  42077b:	call   0x505dab85
  420780:	or     DWORD PTR [ebp-0x55db65b2],esi
  420786:	js     0x42079c
  420788:	push   0xffffffac
  42078a:	mov    eax,0xcb8730c3
  42078f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420790:	jo     0x420797
  420792:	dec    esp
  420793:	(bad)  
  420794:	in     eax,dx
  420795:	pop    esp
  420796:	sbb    eax,0x3ad53a07
  42079b:	lea    ebp,[ecx]
  42079d:	and    eax,0x55454d03
  4207a2:	pop    ebx
  4207a3:	sbb    eax,0x1410042b
  4207a8:	mov    bh,al
  4207aa:	cwde   
  4207ab:	push   eax
  4207ac:	mov    bh,0x93
  4207ae:	pop    es
  4207af:	mov    ebp,0x7d5cf0f6
  4207b4:	js     0x42077d
  4207b6:	ins    DWORD PTR es:[edi],dx
  4207b7:	(bad)  
  4207b8:	ja     0x42077e
  4207ba:	xchg   ecx,eax
  4207bb:	mov    dx,0x97c8
  4207bf:	arpl   WORD PTR ss:[ebx+0x39],bp
  4207c3:	loop   0x420806
  4207c5:	out    0xbb,al
  4207c7:	mov    WORD PTR es:[edx+0x57541b9a],?
  4207ce:	loop   0x4207d3
  4207d0:	push   edi
  4207d1:	push   es
  4207d2:	outs   dx,DWORD PTR ds:[esi]
  4207d3:	dec    ebp
  4207d4:	mov    bl,0xe5
  4207d6:	adc    eax,0xf482ae60
  4207db:	push   ss
  4207dc:	rol    DWORD PTR [eax],0x1c
  4207df:	xchg   edx,eax
  4207e0:	push   edi
  4207e1:	xlat   BYTE PTR ds:[ebx]
  4207e2:	stc    
  4207e3:	pushf  
  4207e4:	in     al,0x28
  4207e6:	pop    ds
  4207e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207e8:	sti    
  4207e9:	mov    eax,DWORD PTR [edx]
  4207eb:	pop    esi
  4207ec:	aad    0xde
  4207ee:	or     bh,dh
  4207f0:	rcl    BYTE PTR [edi-0x58],1
  4207f3:	xor    eax,0x6b752ea9
  4207f8:	xlat   BYTE PTR ds:[ebx]
  4207f9:	jmp    0x657b9951
  4207fe:	dec    edi
  4207ff:	sub    DWORD PTR [esi-0x4188a91c],0xffffffe5
  420806:	test   ch,ah
  420808:	and    eax,0x5cb22512
  42080d:	scas   al,BYTE PTR es:[edi]
  42080e:	lods   eax,DWORD PTR ds:[esi]
  42080f:	imul   edx,DWORD PTR [edi-0x5c],0xdc0170f0
  420816:	jmp    DWORD PTR [ebp-0x3f]
  420819:	icebp  
  42081a:	jo     0x420836
  42081c:	jae    0x420880
  42081e:	out    0xeb,al
  420820:	pop    eax
  420821:	lahf   
  420822:	mov    bl,0xd7
  420824:	cmp    al,0x94
  420826:	mov    al,0xe3
  420828:	fmulp  st(4),st
  42082a:	bnd jbe 0x42080a
  42082d:	mov    ah,0x8a
  42082f:	mov    bh,0x3e
  420831:	push   0x1
  420833:	sub    ecx,DWORD PTR [ebx-0x4e]
  420836:	cld    
  420837:	jbe    0x420805
  420839:	add    al,0x86
  42083b:	jns    0x4207fa
  42083d:	dec    esi
  42083e:	jbe    0x420826
  420840:	int3   
  420841:	sub    DWORD PTR [ebp+edi*2+0x728e39f6],esp
  420848:	shr    BYTE PTR [ecx+ecx*2+0x6b846e2c],1
  42084f:	jno    0x420816
  420851:	mov    ebp,0x16710c33
  420856:	adc    BYTE PTR [edx],ah
  420858:	dec    eax
  420859:	mov    ds:0xc7d2b3c0,al
  42085e:	jp     0x4208c9
  420860:	mov    ch,0x60
  420862:	jge    0x4208c7
  420864:	idiv   ebx
  420866:	push   ebp
  420867:	aas    
  420868:	push   cs
  420869:	daa    
  42086a:	fimul  WORD PTR gs:[eax+0x15]
  42086e:	push   eax
  42086f:	clc    
  420870:	mov    ch,BYTE PTR [ebp+0x45]
  420873:	jnp    0x42083b
  420875:	jecxz  0x420823
  420877:	ins    DWORD PTR es:[edi],dx
  420878:	rcr    BYTE PTR [eax+edx*4],0xd3
  42087c:	jnp    0x4208c5
  42087e:	pop    edx
  42087f:	ins    DWORD PTR es:[edi],dx
  420880:	mov    ds:0x572097db,eax
  420885:	cmp    ch,BYTE PTR [edi+0x413fd6a0]
  42088b:	aad    0x94
  42088d:	ret    
  42088e:	mov    ds:0x1600ab06,eax
  420893:	popf   
  420894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420895:	arpl   dx,cx
  420897:	cmp    dl,BYTE PTR [ebx]
  420899:	cmp    al,0xd0
  42089b:	mov    cl,0xa9
  42089d:	pusha  
  42089e:	cmp    ebx,DWORD PTR [ecx+esi*8-0x11]
  4208a2:	ret    0x9a2f
  4208a5:	out    dx,eax
  4208a6:	push   edi
  4208a7:	adc    dh,BYTE PTR [edx]
  4208a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208aa:	inc    ecx
  4208ab:	jl     0x420870
  4208ad:	out    0xd3,al
  4208af:	or     ch,cl
  4208b1:	inc    eax
  4208b2:	add    al,0x50
  4208b4:	stos   DWORD PTR es:[edi],eax
  4208b5:	es out 0xe0,al
  4208b8:	adc    ebx,esi
  4208ba:	(bad)  
  4208bb:	jle    0x420859
  4208bd:	xchg   ecx,eax
  4208be:	std    
  4208bf:	(bad)  
  4208c1:	outs   dx,DWORD PTR ds:[esi]
  4208c2:	imul   esi,DWORD PTR [esi],0xd51e23a6
  4208c8:	sub    DWORD PTR ds:0xd9162952,edx
  4208ce:	lods   al,BYTE PTR ds:[esi]
  4208cf:	je     0x420929
  4208d1:	mov    cl,BYTE PTR [ecx]
  4208d3:	pop    ecx
  4208d4:	je     0x420901
  4208d6:	mov    esp,0x8b16b420
  4208db:	clc    
  4208dc:	repz mov cl,0x47
  4208df:	(bad)  
  4208e0:	jp     0x4208c7
  4208e2:	les    ebx,FWORD PTR [esi+0x631b815d]
  4208e8:	dec    ecx
  4208e9:	test   al,0x5f
  4208eb:	int    0x31
  4208ed:	dec    ecx
  4208ee:	(bad)
  4208f1:	push   0x4474b68c
  4208f6:	das    
  4208f7:	add    DWORD PTR ds:0x131363a6,eax
  4208fd:	in     eax,0x63
  4208ff:	jno    0x42095d
  420901:	repnz pop ebx
  420903:	xor    BYTE PTR ds:0x3bbfc023,dl
  420909:	mov    ds,esi
  42090b:	in     al,dx
  42090c:	test   eax,0x91e763de
  420911:	fistp  DWORD PTR [ebx+eiz*4-0x4726477a]
  420918:	and    DWORD PTR [ecx-0x7837f48c],0xffffff91
  42091f:	sahf   
  420920:	cmp    al,bh
  420922:	out    dx,al
  420923:	jmp    0x5bca:0x89c019ba
  42092a:	jmp    0x4208bb
  42092c:	pop    eax
  42092d:	leave  
  42092e:	xor    al,0xc5
  420930:	(bad)  
  420931:	stc    
  420932:	mov    bl,0x19
  420934:	frstor [esi-0x51c2cc60]
  42093a:	(bad)  
  42093c:	cmp    al,dh
  42093e:	test   BYTE PTR [ebx+0x24],dl
  420941:	pop    edx
  420942:	lds    edx,FWORD PTR [edi+0x45d1d361]
  420948:	stc    
  420949:	data16 cmp BYTE PTR [edx+0x7a],dl
  42094d:	mov    ch,0xaf
  42094f:	sbb    bl,BYTE PTR [ebp+0x596fb4ba]
  420955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420956:	test   eax,0x2787c878
  42095b:	frndint 
  42095d:	jmp    0xe37ef264
  420962:	dec    edx
  420963:	fs inc esi
  420965:	lods   al,BYTE PTR ds:[esi]
  420966:	sub    dh,dh
  420968:	scas   al,BYTE PTR es:[edi]
  420969:	pop    eax
  42096a:	retf   
  42096b:	popa   
  42096c:	sbb    eax,0xcb7cb0cc
  420971:	rol    DWORD PTR [edx],1
  420973:	pop    esi
  420974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420975:	cld    
  420976:	or     al,0xf2
  420978:	pop    edi
  420979:	ret    0x7fe9
  42097c:	jmp    0x420980
  42097e:	in     al,dx
  42097f:	int    0xd9
  420981:	add    eax,0xa0de093a
  420986:	inc    esp
  420987:	stos   BYTE PTR es:[edi],al
  420988:	pop    esp
  420989:	mov    esp,esp
  42098b:	fild   DWORD PTR ds:0x98da1301
  420991:	mov    eax,esp
  420993:	imul   ebx,DWORD PTR [esi],0x41
  420996:	xchg   ch,dl
  420998:	fcmove st,st(1)
  42099a:	sbb    al,0x12
  42099c:	mov    edi,0xd2f968a9
  4209a1:	cmp    eax,0x18b0e29e
  4209a6:	rcpps  xmm3,XMMWORD PTR [eax+0xf]
  4209aa:	ror    BYTE PTR [ebp-0x1b],1
  4209ad:	mov    esi,0xe84520d1
  4209b2:	addr16 xchg edx,eax
  4209b4:	sbb    bl,BYTE PTR [edi-0x792b127e]
  4209ba:	loope  0x420981
  4209bc:	jne    0x42096a
  4209be:	pop    ds
  4209bf:	pop    ebx
  4209c0:	xor    BYTE PTR [ecx+0x4a],dh
  4209c3:	push   ecx
  4209c4:	push   ebx
  4209c5:	sbb    esp,ebp
  4209c7:	repz (bad) 
  4209c9:	xchg   ebp,eax
  4209ca:	mov    ds:0x9a4fce71,eax
  4209cf:	das    
  4209d0:	das    
  4209d1:	cmp    DWORD PTR [eax-0x3373ddcd],edx
  4209d7:	mov    bh,0x3e
  4209d9:	jmp    0x6132:0xdea40f6e
  4209e0:	outs   dx,DWORD PTR ds:[esi]
  4209e1:	push   ecx
  4209e2:	dec    esp
  4209e3:	ja     0x420a07
  4209e5:	and    BYTE PTR [esi+0x6c],dh
  4209e8:	je     0x42099a
  4209ea:	xor    al,0x5d
  4209ec:	mov    bh,0x99
  4209ee:	dec    ebp
  4209ef:	std    
  4209f0:	imul   esp,DWORD PTR ds:0x66cf7b2f,0x219b604b
  4209fa:	mov    BYTE PTR [ebx+0x78fe91c],cl
  420a00:	call   0xe674:0x855fd066
  420a07:	cmc    
  420a08:	push   0x67b7bf7e
  420a0d:	fsubr  DWORD PTR [esi+0x60cbd8f1]
  420a13:	pushf  
  420a14:	xor    esi,DWORD PTR fs:[ebx]
  420a17:	pop    edi
  420a18:	fcom   DWORD PTR [esi+0x369207cb]
  420a1e:	(bad)  
  420a20:	nop
  420a21:	dec    edx
  420a22:	push   esp
  420a23:	adc    al,0xfa
  420a25:	or     al,0x5a
  420a27:	ja     0x420a7d
  420a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a2a:	nop
  420a2b:	inc    esp
  420a2c:	sub    al,0x47
  420a2e:	ja     0x4209bb
  420a30:	dec    esp
  420a31:	jecxz  0x420a6f
  420a33:	and    DWORD PTR [edx],ebx
  420a35:	stc    
  420a36:	pop    ebx
  420a37:	or     DWORD PTR [edx-0x52],edx
  420a3a:	push   0x357f8d2a
  420a3f:	jae    0x4209e6
  420a41:	jae    0x420a75
  420a43:	std    
  420a44:	ret    0xd730
  420a47:	or     eax,0x245307a7
  420a4c:	aas    
  420a4d:	(bad)  
  420a4f:	jecxz  0x420a67
  420a51:	fist   WORD PTR ds:0x8e8f1c34
  420a57:	jb     0x420abf
  420a59:	mov    eax,ds:0x39480c7b
  420a5e:	mov    ds:0x62ac038a,eax
  420a63:	add    ch,BYTE PTR [ecx-0x8]
  420a66:	push   es
  420a67:	jp     0x420a7d
  420a69:	jns    0x420abb
  420a6b:	inc    edx
  420a6c:	mov    esi,0x3ed3e5fd
  420a71:	retf   0x5997
  420a74:	mov    ds:0x5ee08cfe,al
  420a79:	sbb    ebx,DWORD PTR [ebx-0x76d960fc]
  420a7f:	lock xchg ebx,eax
  420a81:	ret    
  420a82:	mov    edi,0xa1c4f98e
  420a87:	jp     0x420ab0
  420a89:	test   al,0x9b
  420a8b:	and    ah,BYTE PTR [eax]
  420a8d:	push   ebp
  420a8e:	stc    
  420a8f:	pop    eax
  420a90:	push   ebp
  420a91:	mov    dl,0x10
  420a93:	xchg   edx,eax
  420a94:	and    al,0x6c
  420a96:	dec    edx
  420a97:	scas   eax,DWORD PTR es:[edi]
  420a98:	jp     0x420b0b
  420a9a:	and    dh,BYTE PTR [esi+0x736cd7f9]
  420aa0:	mov    edi,0x17dca8f0
  420aa5:	icebp  
  420aa6:	sub    BYTE PTR ds:0x6d954670,bh
  420aac:	xor    ebp,DWORD PTR [esi+edx*4+0x5d323968]
  420ab3:	ss cmc 
  420ab5:	enter  0xd6fc,0x30
  420ab9:	loopne 0x420ad2
  420abb:	mov    al,ds:0xc8237592
  420ac0:	or     al,0x9a
  420ac2:	int    0x8f
  420ac4:	rol    BYTE PTR ds:0x5a9ed297,1
  420aca:	add    ebp,edi
  420acc:	push   ebp
  420acd:	cmc    
  420ace:	in     eax,dx
  420acf:	js     0x420a52
  420ad1:	adc    al,0x74
  420ad3:	outs   dx,BYTE PTR ds:[esi]
  420ad4:	and    DWORD PTR [ecx],0x1f
  420ad7:	fld    QWORD PTR [esi]
  420ad9:	inc    esi
  420adb:	sti    
  420adc:	aas    
  420add:	loopne 0x420b25
  420adf:	imul   edi,DWORD PTR [eax-0x20],0x2f
  420ae3:	push   es
  420ae4:	dec    ebx
  420ae5:	test   DWORD PTR [edx+0x4f80001],eax
  420aeb:	add    BYTE PTR [eax],al
  420aed:	adc    DWORD PTR [ecx-0x6e],eax
  420af0:	ror    DWORD PTR [ebx+0x516c298],0x31
  420af7:	sbb    al,0x31
  420af9:	xchg   esp,eax
  420afa:	push   esp
  420afb:	(bad)
  420afe:	inc    ebp
  420aff:	mul    BYTE PTR [esi]
  420b01:	pop    edx
  420b02:	mov    bh,0x45
  420b04:	stos   BYTE PTR es:[edi],al
  420b05:	scas   al,BYTE PTR es:[edi]
  420b06:	stos   BYTE PTR es:[edi],al
  420b07:	loope  0x420aee
  420b09:	ret    0x9f84
  420b0c:	mov    ch,dh
  420b0e:	inc    edi
  420b0f:	pusha  
  420b10:	and    bl,BYTE PTR [esi+eiz*1]
  420b13:	test   eax,0x8cf04797
  420b18:	xchg   edi,eax
  420b19:	icebp  
  420b1a:	shr    bl,1
  420b1c:	and    DWORD PTR [ebp+0x35],esi
  420b1f:	dec    al
  420b21:	popa   
  420b22:	rcr    DWORD PTR [ebx],cl
  420b24:	jge    0x420b86
  420b26:	jecxz  0x420b03
  420b28:	rcr    esi,cl
  420b2a:	into   
  420b2b:	and    BYTE PTR [edi],bl
  420b2d:	inc    ecx
  420b2e:	jmp    0x6fb7:0xd9325a14
  420b35:	mov    dh,0xce
  420b37:	inc    ebp
  420b38:	and    DWORD PTR [ecx],edi
  420b3a:	(bad)  [edx+edi*8+0x9]
  420b3e:	stos   BYTE PTR es:[edi],al
  420b3f:	je     0x420ad5
  420b41:	dec    edi
  420b42:	popf   
  420b43:	ds push 0xffffffab
  420b46:	jg     0x420b9a
  420b48:	out    0xa0,eax
  420b4a:	mov    cl,0x18
  420b4c:	xlat   BYTE PTR ds:[ebx]
  420b4d:	stc    
  420b4e:	in     eax,dx
  420b4f:	(bad)  
  420b50:	fisubr WORD PTR [edx]
  420b52:	lds    ecx,FWORD PTR [esi]
  420b54:	mov    ah,0xe7
  420b56:	lahf   
  420b57:	enter  0x6d15,0x25
  420b5b:	aad    0xa
  420b5d:	leave  
  420b5e:	add    eax,0xcddbf5d2
  420b63:	dec    eax
  420b64:	jnp    0x420bd0
  420b66:	loop   0x420bc1
  420b68:	and    cl,dh
  420b6a:	cpuid  
  420b6c:	loope  0x420be1
  420b6e:	sub    edx,ebx
  420b70:	out    0xee,al
  420b72:	xlat   BYTE PTR ds:[ebx]
  420b73:	stc    
  420b74:	xchg   ebx,eax
  420b75:	dec    esp
  420b76:	push   0x15
  420b78:	add    ah,BYTE PTR [esi+0x43aceb0e]
  420b7e:	and    esi,DWORD PTR [ebp-0x11d002f7]
  420b84:	or     dl,BYTE PTR [eax-0x65]
  420b87:	sub    BYTE PTR [ebx+0x17],dh
  420b8a:	sub    esi,0x717e9ee6
  420b90:	sbb    eax,0x8ecb1a9e
  420b95:	and    BYTE PTR [ebx+0x68],0xfe
  420b99:	(bad)  
  420b9a:	aam    0xd7
  420b9c:	loop   0x420b2c
  420b9e:	jae    0x420b94
  420ba0:	call   0xb68d0608
  420ba5:	das    
  420ba6:	lds    esp,FWORD PTR [ebx-0x33]
  420ba9:	rcl    BYTE PTR [eax],1
  420bab:	mov    fs,edx
  420bad:	mov    dl,0xca
  420baf:	dec    edx
  420bb0:	sar    DWORD PTR [eax],0xb4
  420bb3:	xor    al,0x2d
  420bb5:	sub    DWORD PTR [edi-0x5d251e52],ebp
  420bbb:	out    0xf3,eax
  420bbd:	mov    bl,0x99
  420bbf:	test   BYTE PTR [ecx-0x3f],ch
  420bc2:	xor    al,0xea
  420bc4:	jmp    0xcab9:0xe86740cf
  420bcb:	xor    al,0x8
  420bcd:	mov    WORD PTR [esi],ds
  420bcf:	ror    BYTE PTR [ebp+0x17e4ed82],0xed
  420bd6:	dec    ch
  420bd8:	mov    bh,BYTE PTR [ebx+0x36]
  420bdb:	retf   0x937a
  420bde:	bound  ebx,QWORD PTR [ecx]
  420be0:	vpermilps ymm3{k4},ymm5,DWORD PTR [ebp-0x70]{1to8}
  420be7:	jnp    0x420b82
  420be9:	xor    ch,BYTE PTR [esi]
  420beb:	sbb    al,0xf3
  420bed:	jl     0x420b9b
  420bef:	jb     0x420b7e
  420bf1:	jne    0x420bf0
  420bf3:	mov    cl,0x36
  420bf5:	cmp    DWORD PTR [edx-0x33],edx
  420bf8:	(bad)  
  420bf9:	in     eax,0x80
  420bfb:	push   cs
  420bfc:	rcpps  xmm6,XMMWORD PTR [ebx-0x6f62ea9f]
  420c03:	pop    esp
  420c04:	mov    bh,0x73
  420c06:	and    cl,BYTE PTR [eax]
  420c08:	push   esi
  420c09:	out    0x17,al
  420c0b:	xlat   BYTE PTR ds:[ebx]
  420c0c:	loope  0x420c2e
  420c0e:	not    DWORD PTR fs:[ebp-0x67]
  420c12:	xor    eax,0xe87d53b5
  420c17:	or     al,0x61
  420c19:	xchg   esp,eax
  420c1a:	mov    bl,0xa8
  420c1c:	iret   
  420c1d:	sub    DWORD PTR [eax+0x6af33fb6],edx
  420c23:	ins    BYTE PTR es:[edi],dx
  420c24:	outs   dx,DWORD PTR ds:[esi]
  420c25:	hlt    
  420c26:	mov    bh,0x6f
  420c28:	icebp  
  420c29:	fnstsw WORD PTR [edi+0x29]
  420c2c:	or     edx,DWORD PTR [ebp+0x44]
  420c2f:	push   edx
  420c30:	test   eax,0xe01f0bad
  420c35:	std    
  420c36:	mov    esp,0x664695cb
  420c3b:	in     eax,dx
  420c3c:	pop    esp
  420c3d:	stc    
  420c3e:	inc    esp
  420c3f:	aad    0x37
  420c41:	sbb    al,0xab
  420c43:	push   cs
  420c44:	lods   eax,DWORD PTR ds:[esi]
  420c45:	outs   dx,DWORD PTR ds:[esi]
  420c46:	lock push ds
  420c48:	sub    eax,0x479dce0d
  420c4d:	sahf   
  420c4e:	cld    
  420c4f:	cs out 0xa3,eax
  420c52:	jbe    0x420cb7
  420c54:	jb     0x420c66
  420c56:	add    edi,DWORD PTR [ecx]
  420c58:	scas   eax,DWORD PTR es:[edi]
  420c59:	sbb    bl,bh
  420c5b:	enter  0x2a60,0x4
  420c5f:	sti    
  420c60:	fld    TBYTE PTR [edi+0x5c]
  420c63:	pop    ebp
  420c64:	add    BYTE PTR cs:[ebx+0x65],al
  420c68:	je     0x420bf1
  420c6a:	sar    DWORD PTR [ecx+0x18f3caf1],1
  420c70:	pushf  
  420c71:	xchg   edi,edi
  420c73:	mov    ds:0x7d738ccc,al
  420c78:	mov    ah,0xbb
  420c7a:	stos   BYTE PTR es:[edi],al
  420c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c7c:	or     eax,0xa1fe2431
  420c81:	or     ebx,edi
  420c83:	out    0x1e,eax
  420c85:	cmp    al,bh
  420c87:	inc    edx
  420c88:	mov    ah,BYTE PTR [ecx]
  420c8a:	mov    WORD PTR [esi-0x6a],fs
  420c8d:	push   es
  420c8e:	sub    al,0x5a
  420c90:	mov    bl,0xa6
  420c92:	mov    ss,ecx
  420c94:	jae    0x420ca8
  420c96:	jmp    0x76c0ed47
  420c9b:	data16 cmp al,0x8e
  420c9e:	leave  
  420c9f:	adc    DWORD PTR [ebx+0x641f4b19],0x7f7adc36
  420ca9:	ss add al,0xb5
  420cac:	cdq    
  420cad:	cmc    
  420cae:	mov    bl,0x62
  420cb0:	add    al,0x1b
  420cb2:	adc    dl,BYTE PTR [edi-0x281057]
  420cb8:	outs   dx,BYTE PTR ds:[esi]
  420cb9:	sti    
  420cba:	enter  0x5c47,0x64
  420cbe:	add    BYTE PTR [ecx+0x65e7ecc1],bl
  420cc4:	bound  eax,QWORD PTR [ebp+0x2ed3f479]
  420cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ccb:	xor    BYTE PTR [ebx+0x68],ch
  420cce:	leave  
  420ccf:	cdq    
  420cd0:	ret    0xf385
  420cd3:	jmp    0xd18df998
  420cd8:	xchg   esi,eax
  420cd9:	pop    es
  420cda:	cmp    BYTE PTR [edi],ah
  420cdc:	rol    edx,1
  420cde:	rcr    esi,1
  420ce0:	fsubr  QWORD PTR [edx]
  420ce2:	inc    esp
  420ce3:	les    ebp,FWORD PTR [ebx-0x8d59c46]
  420ce9:	(bad)  
  420cea:	mov    WORD PTR [edi-0x30],fs
  420ced:	inc    esp
  420cee:	jne    0x420d17
  420cf0:	mov    ds:0x27d157db,eax
  420cf5:	or     al,0xf4
  420cf7:	inc    ebp
  420cf8:	enter  0x4e46,0xa6
  420cfc:	or     DWORD PTR ds:0x8c11fadf,ecx
  420d02:	mov    esp,0x3cab94fe
  420d07:	leave  
  420d08:	bound  esp,QWORD PTR [esi+0x3a]
  420d0b:	test   ch,0x25
  420d0e:	stos   DWORD PTR es:[edi],eax
  420d0f:	mov    ebp,ebp
  420d11:	rcl    esi,cl
  420d13:	pop    esi
  420d14:	xchg   edx,eax
  420d15:	dec    esp
  420d16:	adc    al,0x51
  420d18:	adc    ch,0xb8
  420d1b:	imul   esp,DWORD PTR [edi+0x4b],0x767bcfc4
  420d22:	or     bl,BYTE PTR [ebp-0x63]
  420d25:	push   edx
  420d26:	xor    BYTE PTR [edi+0x5d],al
  420d29:	ds xchg ebx,eax
  420d2b:	out    0x40,eax
  420d2d:	mov    al,ds:0x15d9546e
  420d32:	push   es
  420d33:	sbb    al,0x9f
  420d35:	fistp  QWORD PTR [esp+edi*1+0x3564d520]
  420d3c:	outs   dx,DWORD PTR ds:[esi]
  420d3d:	test   BYTE PTR [edi+0x9b1a010],ch
  420d43:	fiadd  WORD PTR [ebx+ebx*8]
  420d46:	pop    es
  420d47:	fnstsw WORD PTR [edi]
  420d49:	into   
  420d4a:	ret    
  420d4b:	mov    al,ds:0x39bf4a65
  420d50:	(bad)  
  420d51:	outs   dx,BYTE PTR ds:[esi]
  420d52:	aam    0x93
  420d54:	cdq    
  420d55:	mov    ds:0x297345f2,eax
  420d5a:	cmp    DWORD PTR ds:0xbf4356e,esp
  420d60:	ret    
  420d61:	fisttp QWORD PTR [edx-0x6a]
  420d64:	fwait
  420d65:	and    BYTE PTR ds:0xc01bf662,bl
  420d6b:	push   ds
  420d6c:	add    al,0x32
  420d6e:	test   DWORD PTR [esi+0x34],edi
  420d71:	dec    esp
  420d72:	add    ch,BYTE PTR [ebx-0x72]
  420d75:	fld    TBYTE PTR [ebp-0x2a]
  420d78:	xchg   esp,eax
  420d79:	addr16 daa 
  420d7b:	jp     0x420def
  420d7d:	mov    esi,edi
  420d7f:	push   edx
  420d80:	in     eax,0x3d
  420d82:	push   ss
  420d83:	call   0x9c51154
  420d88:	xor    eax,0xffb648df
  420d8d:	sbb    al,0x4b
  420d8f:	jge    0x420d37
  420d91:	popf   
  420d92:	sar    DWORD PTR [esi],cl
  420d94:	mov    cl,0xb7
  420d96:	enter  0xd0eb,0x25
  420d9a:	mov    cl,0x5
  420d9c:	pop    ss
  420d9d:	xchg   DWORD PTR [ebx+0x3f083ce],edi
  420da3:	mov    eax,0xbed50205
  420da8:	adc    eax,0x2eb0b345
  420dad:	loop   0x420d7c
  420daf:	fld    st(5)
  420db1:	pop    ebp
  420db2:	xor    al,0xf9
  420db4:	loopne 0x420e01
  420db6:	pop    esp
  420db7:	outs   dx,BYTE PTR ds:[esi]
  420db8:	and    edx,ebx
  420dba:	adc    eax,0x7380809c
  420dbf:	mov    ah,0xff
  420dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dc2:	jg     0x420dd2
  420dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dc5:	retf   
  420dc6:	jne    0x420e0b
  420dc8:	sub    al,0xc2
  420dca:	mov    eax,ds:0xb630d39f
  420dcf:	pop    esp
  420dd0:	int3   
  420dd1:	rcr    DWORD PTR [edi-0x623c5b68],1
  420dd7:	femms  
  420dd9:	scas   al,BYTE PTR es:[edi]
  420dda:	pop    ebp
  420ddb:	mov    esp,0x24460da6
  420de0:	stos   BYTE PTR es:[edi],al
  420de1:	stc    
  420de2:	cld    
  420de3:	icebp  
  420de4:	inc    esi
  420de5:	mov    eax,0x23bb7d89
  420dea:	aad    0xd7
  420dec:	(bad)  
  420ded:	jmp    0x420db1
  420def:	into   
  420df0:	or     ah,BYTE PTR [esi]
  420df2:	adc    eax,0xae22085f
  420df7:	mov    eax,ds:0xc00b2694
  420dfc:	cmp    dh,ch
  420dfe:	xor    BYTE PTR [esi],ch
  420e00:	mov    al,ds:0x7f7e9c4b
  420e05:	push   ecx
  420e06:	mov    al,0x42
  420e08:	scas   al,BYTE PTR es:[edi]
  420e09:	lock jbe 0x420deb
  420e0c:	fistp  QWORD PTR ds:0xc64cd1ef
  420e12:	mov    dh,0x22
  420e14:	hlt    
  420e15:	(bad)  
  420e17:	pop    esi
  420e18:	lds    ebx,FWORD PTR [edx]
  420e1a:	cmp    bh,BYTE PTR [edx+0x24a3a4e7]
  420e20:	into   
  420e21:	imul   BYTE PTR [ebx+0x8b22abd]
  420e27:	addr16 and esi,ecx
  420e2a:	jae    0x420dff
  420e2c:	loopne 0x420e89
  420e2e:	sti    
  420e2f:	not    al
  420e31:	xchg   edi,eax
  420e32:	pop    edi
  420e33:	cmp    eax,DWORD PTR ds:[esi+0x7]
  420e37:	loope  0x420e80
  420e39:	clc    
  420e3a:	jg     0x420e86
  420e3c:	pop    esi
  420e3d:	pop    edi
  420e3e:	mov    ebx,0xb679b6ee
  420e43:	das    
  420e44:	pop    es
  420e45:	dec    ecx
  420e46:	or     DWORD PTR [eax-0x35],0xffffffbf
  420e4a:	int3   
  420e4b:	popa   
  420e4c:	out    0x32,al
  420e4e:	jae    0x420e0b
  420e50:	out    dx,eax
  420e51:	cmp    eax,0x6e4cf92e
  420e56:	and    ebp,edx
  420e58:	add    DWORD PTR [edi-0x1c],ebx
  420e5b:	mov    DWORD PTR fs:[bp+di+0x649e],ebp
  420e61:	jecxz  0x420e1d
  420e63:	ins    BYTE PTR es:[edi],dx
  420e64:	sbb    DWORD PTR [ecx],0x75022584
  420e6a:	jge    0x420e40
  420e6c:	jno    0x420ea1
  420e6e:	adc    al,0xe6
  420e70:	enter  0xddef,0xa3
  420e74:	(bad)  
  420e75:	fstp   TBYTE PTR [eax-0x754949ab]
  420e7b:	pushf  
  420e7c:	(bad)  
  420e7d:	popf   
  420e7e:	in     al,dx
  420e7f:	je     0x420e32
  420e81:	and    BYTE PTR [ebx-0x66ca49a5],cl
  420e87:	pop    ss
  420e88:	(bad)  
  420e89:	or     dh,ch
  420e8b:	jge    0x420e71
  420e8d:	repnz jmp 0x5446:0x6b05ee46
  420e95:	ins    DWORD PTR es:[edi],dx
  420e96:	in     al,0xd3
  420e98:	xchg   ebp,eax
  420e99:	mov    BYTE PTR [ebx+0x4b],0x71
  420e9d:	mov    al,ds:0x16b1fcab
  420ea2:	sbb    al,BYTE PTR [ebp+0x5ed6756a]
  420ea8:	js     0x420edc
  420eaa:	and    DWORD PTR [edi],edx
  420eac:	mov    gs,WORD PTR [edi]
  420eae:	ds mov al,0xb
  420eb1:	call   0xd3f0b3e
  420eb6:	inc    ebp
  420eb7:	in     al,dx
  420eb8:	aam    0x6a
  420eba:	mov    WORD PTR [esi+0x74],cs
  420ebd:	mov    eax,0x9e7bab6b
  420ec2:	fiadd  WORD PTR [ebp-0x48b6e511]
  420ec8:	cmp    edx,DWORD PTR ds:0xa286bb71
  420ece:	idiv   DWORD PTR [ebx-0x2f]
  420ed1:	pop    ds
  420ed2:	daa    
  420ed3:	mov    al,ds:0x3abadf28
  420ed8:	pushf  
  420ed9:	mov    ch,0x84
  420edb:	(bad)  
  420edc:	dec    eax
  420edd:	out    dx,eax
  420ede:	(bad)
  420ee2:	lods   al,BYTE PTR ds:[esi]
  420ee3:	daa    
  420ee4:	cld    
  420ee5:	(bad)  
  420ee6:	fld    TBYTE PTR [esi+0x38]
  420ee9:	add    bl,0x7b
  420eec:	xor    ch,BYTE PTR [eax+0x2d]
  420eef:	pop    ecx
  420ef0:	aaa    
  420ef1:	push   ebp
  420ef2:	outs   dx,DWORD PTR ds:[esi]
  420ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef4:	shl    BYTE PTR [ebp-0x3d],1
  420ef7:	js     0x420f41
  420ef9:	xchg   DWORD PTR [esi+0x18],ecx
  420efc:	xor    eax,0xcfbfc820
  420f01:	jmp    0x21bd:0xabde92bc
  420f08:	fimul  WORD PTR [ecx+0x24]
  420f0b:	dec    edi
  420f0c:	inc    eax
  420f0d:	gs sbb esi,esi
  420f10:	notrack jmp DWORD PTR [ebx-0x7fc82f3a]
  420f17:	mov    dh,0x17
  420f19:	xchg   esp,eax
  420f1a:	or     eax,0x17174891
  420f1f:	das    
  420f20:	pop    ebp
  420f21:	pusha  
  420f22:	pop    ebx
  420f23:	mov    BYTE PTR [ebx],cl
  420f25:	mov    dl,0xd3
  420f27:	mov    ah,BYTE PTR fs:[ecx+0x48]
  420f2b:	cmp    ebx,0xffffffd9
  420f2e:	adc    ebp,DWORD PTR [ebx-0x1a]
  420f31:	leave  
  420f32:	mov    BYTE PTR [ecx-0x4aa07af2],0xb4
  420f39:	test   DWORD PTR [ebx-0x4f],edi
  420f3c:	call   0xb49a:0xe85586d1
  420f43:	loop   0x420f62
  420f45:	gs xchg ebp,eax
  420f47:	xchg   edx,eax
  420f48:	ror    BYTE PTR [eax+0x6bf1d35d],0x53
  420f4f:	jno    0x420f12
  420f51:	dec    eax
  420f52:	fwait
  420f53:	mov    ebx,0x2b3449d2
  420f58:	add    al,0xec
  420f5a:	xor    BYTE PTR [esi-0x68],ah
  420f5d:	add    DWORD PTR [ebx],eax
  420f5f:	out    dx,eax
  420f60:	cwde   
  420f61:	fisub  WORD PTR [ebx+0x621fc9b1]
  420f67:	cmp    al,0x7
  420f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f6a:	mov    dh,0xb9
  420f6c:	xor    edi,edx
  420f6e:	sub    edi,DWORD PTR [eax]
  420f70:	stc    
  420f71:	stos   BYTE PTR es:[edi],al
  420f72:	sub    bl,BYTE PTR [ebx+0x5975c2ad]
  420f78:	mov    bh,0x20
  420f7a:	addr16 or eax,0x50cdee6e
  420f80:	jmp    0x5a22:0xee073983
  420f87:	pop    ds
  420f88:	fs inc esi
  420f8a:	and    BYTE PTR [edx-0x4589218b],ch
  420f90:	cmp    al,0xda
  420f92:	cmp    eax,0xf357bb2f
  420f97:	cmp    DWORD PTR [ecx],edi
  420f99:	hlt    
  420f9a:	lahf   
  420f9b:	adc    al,0x61
  420f9d:	mov    esp,0xfa5ad2c6
  420fa2:	sbb    al,0x5c
  420fa4:	pop    ss
  420fa5:	dec    edi
  420fa6:	ins    DWORD PTR es:[edi],dx
  420fa7:	mov    esi,0x4e677873
  420fac:	xor    al,0x55
  420fae:	push   edi
  420faf:	aas    
  420fb0:	(bad)  
  420fb1:	or     al,0x3d
  420fb3:	data16 xlat BYTE PTR ds:[ebx]
  420fb5:	or     eax,0x6ebddc7e
  420fba:	inc    eax
  420fbb:	arpl   WORD PTR [edx],dx
  420fbd:	loopne 0x420f47
  420fbf:	and    cl,BYTE PTR [ecx-0x3d4f0cba]
  420fc5:	outs   dx,BYTE PTR ds:[esi]
  420fc6:	ins    BYTE PTR es:[edi],dx
  420fc7:	fisub  WORD PTR [ebx+0x4d]
  420fca:	popa   
  420fcb:	mov    dh,0xe8
  420fcd:	out    0x23,eax
  420fcf:	pop    es
  420fd0:	inc    ecx
  420fd1:	popa   
  420fd2:	pop    DWORD PTR [eax+0x1]
  420fd5:	push   cs
  420fd6:	pop    ds
  420fd7:	sbb    DWORD PTR [ecx-0x354fc2eb],0xb17c58c1
  420fe1:	adc    esi,DWORD PTR [edi]
  420fe3:	call   0xfcbd:0xd87d01c4
  420fea:	mov    ebp,0x6dccfd65
  420fef:	xor    BYTE PTR [edi-0x7fa8a3f9],cl
  420ff5:	jge    0x420f7e
  420ff7:	add    DWORD PTR [eax],eax
  420ff9:	clc    
  420ffa:	add    al,0x0
  420ffc:	add    BYTE PTR ds:0x5c7684b9,bl
  421002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421003:	leave  
  421004:	mov    esp,0x707e0d82
  421009:	jne    0x420f8c
  42100b:	inc    edi
  42100d:	pop    ebx
  42100e:	sbb    edi,ecx
  421010:	in     eax,dx
  421011:	xchg   DWORD PTR [esi],edi
  421013:	jb     0x420fd3
  421015:	or     BYTE PTR [ebp-0x4e67f5c0],ah
  42101b:	lods   al,BYTE PTR ds:[esi]
  42101c:	es out dx,eax
  42101e:	mov    cl,0x7a
  421020:	jg     0x42109e
  421022:	adc    al,0x51
  421024:	inc    BYTE PTR [edi+0xa]
  421027:	inc    edi
  421028:	pushf  
  421029:	fsub   st,st(1)
  42102b:	call   0x6c1518f4
  421030:	call   FWORD PTR [ebx-0x37]
  421033:	inc    ecx
  421034:	cli    
  421035:	or     eax,0xdf634ce5
  42103a:	add    BYTE PTR [ebx],cl
  42103c:	test   al,0x84
  42103e:	push   es
  42103f:	jb     0x420fd1
  421041:	mov    DWORD PTR [edi],edi
  421043:	xchg   DWORD PTR [esi-0x5f],edi
  421046:	adc    eax,0xfb73516c
  42104b:	std    
  42104c:	cmp    ecx,DWORD PTR [edi-0x5d684274]
  421052:	mov    al,0xe
  421054:	stc    
  421055:	dec    esp
  421056:	push   eax
  421057:	inc    ebx
  421058:	sti    
  421059:	mov    bl,0xda
  42105b:	je     0x4210c4
  42105d:	xchg   esp,eax
  42105e:	push   ss
  42105f:	jl     0x420fe3
  421061:	jnp    0x4210d3
  421063:	mov    dl,0xa6
  421065:	psubd  mm3,QWORD PTR ds:0x59be0187
  42106c:	stc    
  42106d:	mov    ah,ch
  42106f:	pop    ds
  421070:	mov    ds:0x1d23b1d5,eax
  421075:	stc    
  421076:	sub    BYTE PTR [ebx+0x5c],bl
  421079:	scas   eax,DWORD PTR es:[edi]
  42107a:	out    dx,eax
  42107b:	int    0xc
  42107d:	xor    DWORD PTR [edi+0x5688fc07],0xffffffce
  421084:	xor    dl,BYTE PTR [ebx+0x59a569b0]
  42108a:	and    esp,ebx
  42108c:	mov    ah,0xd
  42108e:	add    al,0x35
  421090:	sbb    bh,BYTE PTR [eax+ebp*1+0x5dc485a]
  421097:	push   eax
  421098:	xlat   BYTE PTR ds:[ebx]
  421099:	mov    ch,0xc4
  42109b:	jp     0x421068
  42109d:	or     al,0x7d
  42109f:	push   edx
  4210a0:	cs loope 0x42103d
  4210a3:	push   0x90bd738c
  4210a8:	push   es
  4210a9:	dec    edi
  4210aa:	imul   esp,DWORD PTR [edi+eax*2],0xffffffaa
  4210ae:	adc    eax,0x2ecdfc31
  4210b3:	int    0x64
  4210b5:	cmp    al,0x59
  4210b7:	mov    ch,0x73
  4210b9:	(bad)  
  4210ba:	rol    BYTE PTR [edi],cl
  4210bc:	mov    ds:0x98ceeb7f,eax
  4210c1:	inc    esi
  4210c2:	mov    WORD PTR [ebx-0x72],fs
  4210c5:	pushf  
  4210c6:	jg     0x421123
  4210c8:	push   DWORD PTR [edi-0x1f11f49a]
  4210ce:	scas   al,BYTE PTR es:[edi]
  4210cf:	mov    al,0x70
  4210d1:	push   edx
  4210d2:	dec    ebx
  4210d3:	outs   dx,BYTE PTR ds:[esi]
  4210d4:	out    0x1b,al
  4210d6:	in     eax,dx
  4210d7:	dec    ecx
  4210d8:	jo     0x4210da
  4210da:	push   esp
  4210db:	mov    bh,dl
  4210dd:	mov    dh,BYTE PTR [ebp+0x159ebde4]
  4210e3:	(bad)  
  4210e4:	lods   al,BYTE PTR ds:[esi]
  4210e5:	mov    ah,0x26
  4210e7:	(bad)  
  4210e8:	dec    ebx
  4210e9:	dec    eax
  4210ea:	and    dl,BYTE PTR [ecx-0x2f8f693f]
  4210f0:	stos   BYTE PTR es:[edi],al
  4210f1:	fstp   QWORD PTR [ebp+0x2fbbf9dc]
  4210f7:	pop    edi
  4210f8:	xor    BYTE PTR [edx-0xf],al
  4210fb:	push   ss
  4210fc:	mov    ds:0x1454f334,eax
  421101:	adc    eax,0x79f9c649
  421106:	stos   DWORD PTR es:[edi],eax
  421107:	outs   dx,BYTE PTR ds:[esi]
  421108:	pop    ecx
  421109:	push   ds
  42110a:	and    eax,0x9e7ee6e9
  42110f:	mov    WORD PTR [ebp-0xbc1e20f],cs
  421115:	adc    ebx,DWORD PTR [ebx+0x1]
  421118:	pop    esp
  421119:	mov    DWORD PTR ds:0xef5b977b,0x166583a6
  421123:	iret   
  421124:	adc    ebx,DWORD PTR [ecx+0x78]
  421127:	push   esi
  421128:	adc    eax,DWORD PTR [bp+si-0xd7c]
  42112d:	sub    al,ah
  42112f:	out    dx,al
  421130:	inc    edi
  421131:	stos   BYTE PTR es:[edi],al
  421132:	jno    0x4210de
  421134:	scas   al,BYTE PTR es:[edi]
  421135:	mov    eax,ds:0xeadad426
  42113a:	fistp  WORD PTR [eax-0x79]
  42113d:	test   BYTE PTR [esi+0x5f],ah
  421140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421141:	in     eax,dx
  421142:	and    bx,WORD PTR [esi-0x56ae9499]
  421149:	push   ebp
  42114a:	mov    ah,0x41
  42114c:	das    
  42114d:	fdivrp st(3),st
  42114f:	lea    edx,[eax+eax*8]
  421152:	sti    
  421153:	je     0x421127
  421155:	add    DWORD PTR [ecx],ebp
  421157:	xchg   edx,eax
  421158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421159:	lds    eax,FWORD PTR [edx]
  42115b:	inc    esi
  42115c:	shl    BYTE PTR [ecx-0x2f2cf35e],0x87
  421163:	retf   
  421164:	push   es
  421165:	mov    eax,ds:0xf5855510
  42116a:	enter  0xeedc,0xd7
  42116e:	inc    edi
  42116f:	push   esp
  421170:	adc    bl,ch
  421172:	fmul   QWORD PTR [edx+0x72]
  421175:	iret   
  421176:	in     al,dx
  421177:	push   ss
  421178:	es scas eax,DWORD PTR es:[edi]
  42117a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42117b:	xchg   ebp,eax
  42117c:	test   bh,ch
  42117e:	inc    esp
  42117f:	sub    BYTE PTR [eax+0x7c],dl
  421182:	enter  0x5800,0xb7
  421186:	jecxz  0x4211ec
  421188:	rcr    DWORD PTR [esi-0xf88b329],1
  42118e:	add    edi,DWORD PTR [ecx]
  421190:	xlat   BYTE PTR ds:[ebx]
  421191:	jge    0x42114f
  421193:	or     ebx,eax
  421195:	and    esp,DWORD PTR [ebx+ebx*4-0x15]
  421199:	repz cmp eax,0x75cda1d0
  42119f:	inc    ecx
  4211a0:	jo     0x421174
  4211a2:	cmp    al,0x30
  4211a4:	or     al,ah
  4211a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a7:	sahf   
  4211a8:	mov    dl,0xb8
  4211aa:	and    DWORD PTR [edx],esp
  4211ac:	pop    edi
  4211ad:	sub    ebp,DWORD PTR [ecx]
  4211af:	pop    ebx
  4211b0:	mov    edi,0x5b78955d
  4211b5:	push   eax
  4211b6:	rol    DWORD PTR [ebx],cl
  4211b8:	rcr    DWORD PTR [ebx+0x757409a3],0x8f
  4211bf:	mov    gs,WORD PTR [ebp-0x2c]
  4211c2:	pop    ebp
  4211c3:	imul   DWORD PTR [ecx-0x53]
  4211c6:	enter  0xabe2,0xdb
  4211ca:	jge    0x421188
  4211cc:	aad    0x12
  4211ce:	jle    0x4211de
  4211d0:	cli    
  4211d1:	sahf   
  4211d2:	mov    ds:0x4b681a0c,eax
  4211d7:	frstor [ecx+0x52]
  4211da:	arpl   bp,dx
  4211dc:	inc    eax
  4211dd:	das    
  4211de:	enter  0x67e9,0xae
  4211e2:	jg     0x4211c0
  4211e4:	or     al,0xef
  4211e6:	(bad)  [ecx-0x7f71c808]
  4211ec:	mov    eax,ecx
  4211ee:	add    eax,0x2d542c9e
  4211f3:	call   0x9ec3:0xdcd702cf
  4211fa:	xlat   BYTE PTR ds:[ebx]
  4211fb:	dec    edx
  4211fc:	push   esp
  4211fd:	inc    ecx
  4211fe:	jno    0x42120e
  421200:	sbb    DWORD PTR [eax+0x77cdf513],ebx
  421206:	xor    ecx,DWORD PTR [eax-0x42f20b13]
  42120c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42120d:	imul   edi,DWORD PTR [ebx],0xffffffa1
  421210:	loope  0x421241
  421212:	fsubr  DWORD PTR [edx+0x54]
  421215:	cli    
  421216:	jl     0x4211de
  421218:	mov    eax,0x9593a864
  42121d:	and    cl,BYTE PTR [esi]
  42121f:	clc    
  421220:	nop
  421221:	add    DWORD PTR [esi+0x3d],0x65821f1f
  421228:	fsubr  QWORD PTR [eax-0x7d80b74f]
  42122e:	icebp  
  42122f:	ins    DWORD PTR es:[edi],dx
  421230:	les    ecx,FWORD PTR [ecx]
  421232:	(bad)  
  421233:	jmp    0xd7d12dbe
  421238:	icebp  
  421239:	mov    DWORD PTR [ebx+0x62c424fa],esp
  42123f:	nop    eax
  421242:	adc    dl,BYTE PTR [edi+0x71]
  421245:	mov    ss,WORD PTR [edi-0x2a]
  421248:	jo     0x42124a
  42124a:	adc    dh,ah
  42124c:	dec    edx
  42124d:	in     eax,dx
  42124e:	(bad)
  421251:	pop    ss
  421252:	add    al,0xfe
  421254:	mov    dl,0xa5
  421256:	or     bl,BYTE PTR [edx]
  421258:	call   0x83b4:0x4926149d
  42125f:	fnsave [ebp+0x72]
  421262:	adc    eax,0x2a42da03
  421267:	aas    
  421268:	mov    esi,DWORD PTR [ebx-0x526e2b58]
  42126e:	leave  
  42126f:	fsub   st(1),st
  421271:	xchg   edx,eax
  421272:	mov    al,ds:0x9360918d
  421277:	shl    BYTE PTR [ebx],cl
  421279:	dec    ecx
  42127a:	fisttp QWORD PTR [ecx+0x6b]
  42127d:	rcr    BYTE PTR [ebp+edx*2+0x21809e6a],0x6d
  421285:	iret   
  421286:	xor    bl,0xd7
  421289:	push   cs
  42128a:	loopne 0x4212f4
  42128c:	rcr    BYTE PTR [edx+0x73926cf7],0xf1
  421293:	loopne 0x42123d
  421295:	and    DWORD PTR ds:0xa0632a7e,ebx
  42129b:	popf   
  42129c:	xchg   ebp,eax
  42129d:	inc    eax
  42129e:	ja     0x421238
  4212a0:	sti    
  4212a1:	fs jns 0x4212db
  4212a4:	daa    
  4212a5:	xchg   cl,bl
  4212a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a8:	stos   BYTE PTR es:[edi],al
  4212a9:	sar    BYTE PTR [esi+eax*4],0x1
  4212ad:	test   al,0x74
  4212af:	xchg   esp,eax
  4212b0:	pop    esi
  4212b1:	ss fs scas al,BYTE PTR es:[edi]
  4212b4:	xchg   edi,eax
  4212b5:	pop    edx
  4212b6:	pop    ss
  4212b7:	xchg   bl,al
  4212b9:	sbb    DWORD PTR [esi+0x3b],ebx
  4212bc:	sub    esp,DWORD PTR [ecx]
  4212be:	mov    eax,0x83c4331c
  4212c3:	outs   dx,DWORD PTR ds:[esi]
  4212c4:	cs inc ebx
  4212c6:	aad    0x43
  4212c8:	in     eax,0xa5
  4212ca:	push   0xdf6852ce
  4212cf:	arpl   WORD PTR [edi-0x3d],dx
  4212d2:	cmp    eax,0x2f326c0a
  4212d7:	mov    ebx,0x83e13b2f
  4212dc:	xor    al,BYTE PTR [esi+ebp*1]
  4212df:	xchg   edi,eax
  4212e0:	stc    
  4212e1:	jmp    0x42127f
  4212e3:	cdq    
  4212e4:	imul   bh
  4212e6:	inc    eax
  4212e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212e8:	mov    ebp,0xfb3df569
  4212ed:	mov    ebp,0x7ff88c7a
  4212f2:	fmul   DWORD PTR [ebx-0x70c82cb8]
  4212f8:	(bad)  
  4212f9:	loopne 0x4212c7
  4212fb:	(bad)  
  4212fc:	xlat   BYTE PTR ds:[ebx]
  4212fd:	popa   
  4212fe:	jnp    0x421321
  421300:	(bad)
  421305:	(bad)  
  421306:	ds adc eax,0x4e51af5f
  42130c:	push   ss
  42130d:	xchg   DWORD PTR [ecx],esi
  42130f:	popa   
  421310:	sub    al,0x8b
  421312:	dec    esp
  421313:	pop    esi
  421314:	ror    esp,0x2a
  421317:	xor    DWORD PTR [ebx-0x3f],eax
  42131a:	dec    esp
  42131b:	out    dx,al
  42131c:	ret    
  42131d:	pop    edi
  42131e:	sub    BYTE PTR ds:0xfbaaa33c,dh
  421324:	hlt    
  421325:	ds (bad) 
  421327:	lahf   
  421328:	dec    eax
  421329:	push   esp
  42132a:	sbb    ebx,esi
  42132c:	cmp    eax,0x99ee81eb
  421331:	sbb    DWORD PTR [ecx-0x41834642],0xffffffd1
  421338:	pop    ebx
  421339:	std    
  42133a:	aam    0x94
  42133c:	gs pusha 
  42133e:	out    dx,eax
  42133f:	jmp    0x92c2:0x8fc5a94e
  421346:	fistp  QWORD PTR [ecx-0x63ad5645]
  42134c:	push   0xbdc59494
  421351:	mov    edx,0xf4325593
  421356:	push   esi
  421357:	push   ss
  421358:	mov    ah,bh
  42135a:	(bad)  
  42135b:	(bad)  
  42135c:	push   edx
  42135d:	push   esp
  42135e:	(bad)  
  42135f:	cmp    al,0xe7
  421361:	jl     0x4213b4
  421363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421364:	inc    ecx
  421365:	loopne 0x42139f
  421367:	and    DWORD PTR [ecx+edx*8],edi
  42136a:	in     al,dx
  42136b:	repz and ebx,0xb3fc7f27
  421372:	jmp    0x5bb1:0x825d7302
  421379:	enter  0x814a,0x69
  42137d:	pop    esi
  42137e:	push   ebx
  42137f:	mov    dl,0x21
  421381:	xchg   esp,eax
  421382:	and    eax,0x329965a8
  421387:	push   esp
  421388:	dec    esp
  421389:	xchg   edi,eax
  42138a:	xlat   BYTE PTR ds:[ebx]
  42138b:	pop    ds
  42138c:	or     al,0x23
  42138e:	cmp    al,0xe5
  421390:	test   al,0xca
  421392:	mov    eax,ds:0x3abe3eff
  421397:	jmp    0x42137d
  421399:	fstp   st(5)
  42139b:	push   edi
  42139c:	jg     0x421344
  42139e:	je     0x42135b
  4213a0:	dec    edx
  4213a1:	fldcw  WORD PTR [ebx]
  4213a3:	dec    ebp
  4213a4:	pop    ebx
  4213a5:	or     al,0xe4
  4213a7:	cmp    ah,BYTE PTR [edi+0x3c]
  4213aa:	lea    esp,[ecx+0x3a]
  4213ad:	mov    esi,0xf0a2b09d
  4213b2:	fld    DWORD PTR [ecx+0x41]
  4213b5:	xor    DWORD PTR [esi],ecx
  4213b7:	push   edx
  4213b8:	jl     0x42138b
  4213ba:	pop    ecx
  4213bb:	pop    edi
  4213bc:	test   al,0x3a
  4213be:	lods   al,BYTE PTR ds:[esi]
  4213bf:	ret    
  4213c0:	lock inc ecx
  4213c2:	adc    al,0xbf
  4213c4:	nop
  4213c5:	adc    eax,0xefe39f6b
  4213ca:	cmp    eax,0x4ff8f2
  4213cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213d0:	mov    bl,0xa4
  4213d2:	xlat   BYTE PTR ds:[ebx]
  4213d3:	mov    dh,BYTE PTR [ecx]
  4213d5:	mov    eax,ds:0xe0f91dbd
  4213da:	enter  0x306a,0xb9
  4213de:	mov    WORD PTR [edx-0xc8ad2de],?
  4213e4:	add    dl,BYTE PTR [ecx]
  4213e6:	cmp    eax,0xb0a5e904
  4213eb:	sar    dl,0xbf
  4213ee:	ss cmc 
  4213f0:	sub    al,0xd4
  4213f2:	sub    eax,0x52116833
  4213f7:	cmp    BYTE PTR [edi],bl
  4213f9:	not    BYTE PTR [eax-0x3f]
  4213fc:	cmp    DWORD PTR [ecx],0xe7fc187c
  421402:	and    eax,0xeb40c3ba
  421407:	dec    edi
  421408:	or     al,0x9f
  42140a:	sbb    DWORD PTR [eax-0x71],0x4f8eb2bd
  421411:	stos   BYTE PTR es:[edi],al
  421412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421413:	xchg   ebx,eax
  421414:	rcr    dh,0x94
  421417:	nop
  421418:	push   ax
  42141a:	ja     0x421425
  42141c:	sbb    BYTE PTR [edi+0x56],ah
  42141f:	inc    ecx
  421420:	loope  0x421444
  421422:	add    DWORD PTR [eax+0x30],ebx
  421425:	inc    ecx
  421426:	fadd   QWORD PTR [esi]
  421428:	sti    
  421429:	sbb    BYTE PTR [ebp+0x7a],ah
  42142c:	bound  esp,QWORD PTR [eax]
  42142e:	push   ecx
  42142f:	daa    
  421430:	dec    ebp
  421431:	popa   
  421432:	mov    bl,0x4e
  421434:	(bad)  [ecx]
  421436:	push   ebx
  421437:	cmp    BYTE PTR [eax],cl
  421439:	clc    
  42143a:	jbe    0x4213ce
  42143c:	test   BYTE PTR [bx+di-0x79f3],ch
  421441:	jl     0x42147f
  421443:	les    eax,FWORD PTR [esp+ecx*1]
  421446:	jg     0x421448
  421448:	in     al,0x50
  42144a:	push   0x49863184
  42144f:	jb     0x421464
  421451:	xchg   esp,edi
  421453:	or     BYTE PTR [ebx],bh
  421455:	inc    esi
  421456:	cmp    al,0x7a
  421458:	jmp    0x16343ec0
  42145d:	dec    eax
  42145e:	sbb    BYTE PTR [eax],ah
  421460:	jmp    0x987c7644
  421465:	aam    0x49
  421467:	repz aad 0x36
  42146a:	scas   eax,DWORD PTR es:[edi]
  42146b:	out    dx,al
  42146c:	(bad)  
  42146d:	in     eax,dx
  42146e:	dec    esi
  42146f:	fiadd  DWORD PTR [ebp-0x21]
  421472:	inc    eax
  421473:	adc    BYTE PTR [eax+0x71ec7210],0xae
  42147a:	je     0x421459
  42147c:	inc    esp
  42147d:	iret   
  42147e:	sahf   
  42147f:	cs mov ebp,ebp
  421482:	jns    0x421423
  421484:	sbb    esi,ecx
  421486:	mov    ecx,DWORD PTR [edi+0x34]
  421489:	test   DWORD PTR [eax],ebp
  42148b:	sbb    bh,BYTE PTR [ecx-0x59ed4e7c]
  421491:	stc    
  421492:	popf   
  421493:	mov    ch,0xa8
  421495:	cli    
  421496:	jbe    0x421498
  421498:	fdivr  st(7),st
  42149a:	push   ebx
  42149b:	fcomp  DWORD PTR [edx+0x2d75cff1]
  4214a1:	fild   DWORD PTR [esi+0x5d]
  4214a4:	mov    ebp,0x5f4fd02c
  4214a9:	mov    ds:0x4d1b123a,eax
  4214ae:	pop    ss
  4214af:	ficom  WORD PTR [ecx+0x37617c21]
  4214b5:	inc    ebp
  4214b6:	push   edi
  4214b7:	add    al,0x79
  4214b9:	ret    0x6b32
  4214bc:	retf   
  4214bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214be:	loope  0x42149d
  4214c0:	imul   edi,DWORD PTR [ebp+0x72],0x2bc66f01
  4214c7:	not    BYTE PTR [edi+ecx*2-0x39ba6e1]
  4214ce:	(bad)  
  4214cf:	aas    
  4214d0:	or     edx,esi
  4214d2:	mov    bh,0xfb
  4214d4:	dec    edi
  4214d5:	lds    edi,FWORD PTR [esp+eiz*2+0x4484a4d2]
  4214dc:	jge    0x4214a9
  4214de:	jmp    0x4214ff
  4214e0:	shl    dl,1
  4214e2:	pushf  
  4214e3:	pop    esp
  4214e4:	cs fsub st(5),st
  4214e7:	dec    esi
  4214e8:	test   eax,0x661a8bf6
  4214ed:	pop    ebp
  4214ee:	iret   
  4214ef:	aam    0x31
  4214f1:	(bad)  
  4214f2:	mov    eax,0xcf87dae4
  4214f7:	adc    ebp,DWORD PTR [edx]
  4214f9:	pop    ebx
  4214fa:	(bad)  
  4214fb:	mov    edi,0x430897ef
  421500:	add    eax,0x73e30b95
  421505:	jne    0x421493
  421507:	add    DWORD PTR [eax],eax
  421509:	clc    
  42150a:	add    al,0x0
  42150c:	add    BYTE PTR [ecx-0x754674df],bl
  421512:	cmp    BYTE PTR [esi],bl
  421514:	or     ebp,esp
  421516:	jg     0x4214df
  421518:	mov    ah,0xae
  42151a:	mov    ?,WORD PTR [ecx-0x2b8ff43e]
  421520:	pop    eax
  421521:	push   edi
  421522:	ffree  st(4)
  421524:	sbb    edx,edi
  421526:	lods   al,BYTE PTR ds:[esi]
  421527:	xchg   ebx,eax
  421528:	fnstcw WORD PTR [edx+0x38bf4b58]
  42152e:	mov    DWORD PTR [ecx-0x1a],esp
  421531:	les    ebp,FWORD PTR [ebx]
  421533:	div    BYTE PTR [eax]
  421535:	inc    ebp
  421536:	ja     0x42156a
  421538:	call   0xa7b1ef8
  42153d:	in     al,0xce
  42153f:	test   BYTE PTR [edx+0x29],dh
  421542:	sub    bl,BYTE PTR [eax+eax*4]
  421545:	mov    eax,0x29dcda63
  42154a:	mov    edi,0x9c3a08f9
  42154f:	lock xlat BYTE PTR ds:[ebx]
  421551:	dec    esp
  421552:	dec    edi
  421553:	dec    edx
  421554:	arpl   bp,ax
  421556:	outs   dx,DWORD PTR ds:[esi]
  421557:	dec    esp
  421558:	fs mov dh,0x72
  42155b:	add    eax,0x4aa40a5b
  421560:	push   esp
  421561:	adc    cl,bl
  421563:	jae    0x42156a
  421565:	aaa    
  421566:	call   0x9720b090
  42156b:	sub    eax,0xd252d834
  421570:	push   esp
  421571:	or     eax,0xd039c5bf
  421576:	mov    ah,0x5b
  421578:	adc    al,0x70
  42157a:	loopne 0x42154e
  42157c:	push   eax
  42157d:	push   ebx
  42157e:	and    ebx,edi
  421580:	ds cwde 
  421582:	jp     0x42154b
  421584:	fs push esp
  421586:	mov    eax,0x9d18b702
  42158b:	inc    edx
  42158c:	aad    0x47
  42158e:	(bad)  
  42158f:	rcl    BYTE PTR [ecx+0x4f0dcb6],1
  421595:	and    ecx,DWORD PTR [ecx+eiz*2]
  421598:	jl     0x421524
  42159a:	imul   esi,DWORD PTR [esi+0x3],0x12
  42159e:	in     al,0x66
  4215a0:	retf   
  4215a1:	stos   DWORD PTR es:[edi],eax
  4215a2:	and    ah,BYTE PTR [eax+0x31d060d0]
  4215a8:	xor    ah,BYTE PTR [edx-0x6a]
  4215ab:	mov    edi,DWORD PTR [ebx+0x7ed62f26]
  4215b1:	adc    edx,ecx
  4215b3:	das    
  4215b4:	fst    QWORD PTR [edi-0x69b3530a]
  4215ba:	push   cs
  4215bb:	lods   eax,DWORD PTR ds:[esi]
  4215bc:	lods   eax,DWORD PTR ds:[esi]
  4215bd:	clc    
  4215be:	scas   eax,DWORD PTR es:[edi]
  4215bf:	mov    ecx,0x62c935dd
  4215c4:	out    dx,al
  4215c5:	xchg   ebp,eax
  4215c6:	sti    
  4215c7:	jl     0x4215c6
  4215c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215ca:	in     al,0x40
  4215cc:	xor    edx,DWORD PTR [ebx+0x24]
  4215cf:	mov    edx,0xb2d97ca6
  4215d4:	dec    eax
  4215d5:	retf   
  4215d6:	push   ecx
  4215d7:	jae    0x42157e
  4215d9:	add    eax,0x1fd129b0
  4215de:	push   esi
  4215df:	cmp    DWORD PTR [ecx],0x9df90473
  4215e5:	ins    DWORD PTR es:[edi],dx
  4215e6:	mov    ch,0x13
  4215e8:	push   esp
  4215e9:	push   ecx
  4215ea:	cdq    
  4215eb:	jbe    0x421618
  4215ed:	ds cli 
  4215ef:	cmc    
  4215f0:	iret   
  4215f1:	or     ch,ah
  4215f3:	ret    0x611b
  4215f6:	arpl   cx,dx
  4215f8:	dec    ebx
  4215f9:	test   DWORD PTR [edi],ebp
  4215fb:	ss aam 0xb9
  4215fe:	pop    ds
  4215ff:	push   es
  421600:	out    0x69,al
  421602:	jg     0x4215aa
  421604:	test   ecx,edi
  421606:	pushf  
  421607:	mov    esi,0xec6f7fa6
  42160c:	dec    eax
  42160d:	jo     0x4215e5
  42160f:	push   eax
  421610:	in     eax,dx
  421611:	or     al,0x6d
  421613:	neg    BYTE PTR [ecx]
  421615:	xchg   ecx,eax
  421616:	(bad)  [ecx+0x171ecf30]
  42161c:	cmp    DWORD PTR [eax],edi
  42161e:	gs cwde 
  421620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421621:	sti    
  421622:	idiv   DWORD PTR [edx+ebx*2-0x66]
  421626:	mov    ecx,0xa40b86a3
  42162b:	pop    esi
  42162c:	push   ss
  42162d:	xchg   edx,eax
  42162e:	add    esi,DWORD PTR [ebp-0x34193342]
  421634:	gs daa 
  421636:	fcmovne st,st(3)
  421638:	sti    
  421639:	stc    
  42163a:	mov    eax,ds:0x1c099839
  42163f:	jp     0x421612
  421641:	(bad)  
  421642:	jp     0x42165d
  421644:	mov    ebp,0x2c9b60aa
  421649:	mov    ebp,0xd7b5f2e0
  42164e:	imul   ebp,ebp,0xffffffd9
  421651:	lods   eax,DWORD PTR ds:[esi]
  421652:	or     dh,BYTE PTR [edi-0x33b1f731]
  421658:	jne    0x42167b
  42165a:	fucomip st,st(5)
  42165c:	imul   edi,edi,0x2660de2c
  421662:	iret   
  421663:	out    0xa6,eax
  421665:	shr    bl,cl
  421667:	mov    ecx,0x65ff715b
  42166c:	and    ch,BYTE PTR [edx-0x510ab18e]
  421672:	popf   
  421673:	xchg   esi,eax
  421674:	nop
  421675:	jb     0x421601
  421677:	xor    bl,BYTE PTR [ecx-0x3b978689]
  42167d:	arpl   WORD PTR [ebx-0x68],cx
  421680:	inc    ebp
  421681:	mov    ds:0x38d1e111,al
  421686:	iret   
  421687:	add    ebx,ebx
  421689:	imul   ecx,DWORD PTR [ebx+0x31],0x4d
  42168d:	imul   eax,DWORD PTR [esi*2-0x1a7bdd73],0xcff54c65
  421698:	es push es
  42169a:	push   cs
  42169b:	ss dec ebx
  42169d:	dec    esi
  42169e:	adc    al,0x35
  4216a0:	imul   ecx,DWORD PTR [ecx-0x3aed52ca],0xe3d96b7d
  4216aa:	repnz (bad) 
  4216ac:	mov    ds:0xbfdc642a,al
  4216b1:	test   DWORD PTR [eax-0x13821f82],esp
  4216b7:	adc    esi,DWORD PTR [ecx]
  4216b9:	add    dh,BYTE PTR cs:[ecx]
  4216bc:	je     0x421702
  4216be:	icebp  
  4216bf:	ins    BYTE PTR es:[edi],dx
  4216c0:	pop    es
  4216c1:	call   0x7ad57a54
  4216c6:	inc    edi
  4216c7:	jno    0x4216bc
  4216c9:	cmp    al,0x2d
  4216cb:	jns    0x421699
  4216cd:	shl    DWORD PTR [edx+0x2c],0xf1
  4216d1:	outs   dx,BYTE PTR ds:[esi]
  4216d2:	xor    al,0x4
  4216d4:	popf   
  4216d5:	push   esi
  4216d6:	rcl    bh,cl
  4216d8:	xchg   BYTE PTR [ecx+edx*2+0x30],bh
  4216dc:	lock mov al,ds:0xafa9ae7c
  4216e2:	out    dx,al
  4216e3:	sbb    al,0x31
  4216e5:	sar    ebx,1
  4216e7:	sbb    cl,dh
  4216e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216ea:	rol    BYTE PTR [edx+0x25be6c80],1
  4216f0:	jae    0x421690
  4216f2:	xchg   DWORD PTR [edi-0x220a19b6],edi
  4216f8:	pop    es
  4216f9:	fcomp  st(5)
  4216fb:	loop   0x421747
  4216fd:	mov    esp,0x7f5a3100
  421702:	jg     0x4216db
  421704:	lock sbb esi,0x5876d259
  42170b:	(bad)  
  42170c:	dec    eax
  42170e:	sbb    dh,cl
  421710:	stos   DWORD PTR es:[edi],eax
  421711:	imul   edx,DWORD PTR [edi+0x61522b63],0x90bd0505
  42171b:	jecxz  0x4216fa
  42171d:	sar    DWORD PTR [ecx-0x6c],0x4e
  421721:	pop    esp
  421722:	mov    cl,0x3c
  421724:	adc    ch,ah
  421726:	xchg   ebp,eax
  421727:	add    al,0xbe
  421729:	or     ch,BYTE PTR [ebx]
  42172b:	imul   ebx,esp,0xffffffbb
  42172e:	inc    edx
  42172f:	nop
  421730:	test   DWORD PTR [edi],ebp
  421732:	jmp    0x1429a363
  421737:	outs   dx,BYTE PTR ds:[esi]
  421738:	or     eax,0x8719886d
  42173d:	ins    DWORD PTR es:[edi],dx
  42173e:	ins    DWORD PTR es:[edi],dx
  42173f:	cmp    ah,BYTE PTR [edi]
  421741:	adc    eax,0x671aff18
  421746:	test   BYTE PTR [ecx-0x73],bl
  421749:	lahf   
  42174a:	mov    BYTE PTR [edx+ecx*4],bh
  42174d:	jmp    0xa67f:0x20e23229
  421754:	fisttp WORD PTR [esi+ecx*1]
  421757:	jl     0x42175d
  421759:	fistp  QWORD PTR [ecx]
  42175b:	mov    ebx,0x5f051088
  421760:	pushf  
  421761:	cmp    eax,0x7866497e
  421766:	or     ecx,DWORD PTR [ebp-0x1dd52cb7]
  42176c:	pusha  
  42176d:	stos   DWORD PTR es:[edi],eax
  42176e:	pushf  
  42176f:	push   esi
  421770:	and    DWORD PTR [ebp+0x2f],0xa5b407a3
  421777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421778:	fstp   TBYTE PTR [eax+edi*2]
  42177b:	mov    ?,WORD PTR [ebx]
  42177d:	xor    eax,0x662e8630
  421782:	into   
  421783:	sar    BYTE PTR [edi],0x2d
  421786:	sub    dl,BYTE PTR [ecx+0x1616c198]
  42178c:	dec    esp
  42178d:	dec    ebx
  42178e:	xchg   ebp,eax
  42178f:	lods   eax,DWORD PTR ds:[esi]
  421790:	jne    0x42179f
  421792:	gs jnp 0x421766
  421795:	out    0xe1,eax
  421797:	lock xor ah,0x95
  42179b:	popf   
  42179c:	or     eax,0xc4d65aa9
  4217a1:	mov    dh,cl
  4217a3:	push   ecx
  4217a4:	add    al,0xd1
  4217a6:	push   ecx
  4217a7:	sbb    BYTE PTR [ecx+0x1c7a5f94],ch
  4217ad:	and    BYTE PTR [edi+0x20],ah
  4217b0:	int3   
  4217b1:	xor    al,0x7f
  4217b3:	in     al,dx
  4217b4:	push   esp
  4217b5:	inc    eax
  4217b6:	mov    ds:0xb744584a,al
  4217bb:	fwait
  4217bc:	mov    ecx,DWORD PTR [ecx]
  4217be:	pushf  
  4217bf:	push   ecx
  4217c0:	adc    eax,0x9758b5cd
  4217c5:	cmp    DWORD PTR [edi-0xad349c9],ebx
  4217cb:	xchg   edx,eax
  4217cc:	sub    BYTE PTR [esi+esi*4],dl
  4217cf:	add    eax,0xa86d03a5
  4217d4:	push   edx
  4217d5:	(bad)  
  4217d6:	lock sub eax,0x5443607c
  4217dc:	xor    DWORD PTR [ecx],edi
  4217de:	jae    0x4217bd
  4217e0:	jne    0x421842
  4217e2:	jmp    0x3b7b:0x63f3d804
  4217e9:	ds popf 
  4217eb:	stos   DWORD PTR es:[edi],eax
  4217ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217ed:	ins    BYTE PTR es:[edi],dx
  4217ee:	pop    ds
  4217ef:	dec    esp
  4217f0:	mov    sp,0x705b
  4217f4:	push   ss
  4217f5:	inc    edi
  4217f6:	cli    
  4217f7:	cmp    eax,0x483e4a8
  4217fc:	jae    0x421840
  4217fe:	es jae 0x42183a
  421801:	fucom  st(4)
  421803:	dec    ecx
  421804:	fdivr  DWORD PTR [esi-0x31]
  421807:	and    BYTE PTR [esi],bl
  421809:	inc    esi
  42180a:	xlat   BYTE PTR ds:[ebx]
  42180b:	rcr    dl,1
  42180d:	add    BYTE PTR [eax-0x21],bh
  421810:	arpl   WORD PTR [edx+0x75],sp
  421813:	pushf  
  421814:	push   es
  421815:	adc    DWORD PTR [esi-0x3be276bf],0x31
  42181c:	sbb    BYTE PTR [edx+0x25],ch
  42181f:	call   0x34b72330
  421824:	sahf   
  421825:	and    ecx,DWORD PTR [eax]
  421827:	fwait
  421828:	ret    
  421829:	inc    edi
  42182a:	mov    al,0x9a
  42182c:	dec    edi
  42182d:	rol    ebp,1
  42182f:	inc    eax
  421830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421831:	in     eax,dx
  421832:	fwait
  421833:	shl    BYTE PTR [esi+0x33],cl
  421836:	mov    ebp,0x2507fc0c
  42183b:	mov    ch,0xff
  42183d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42183e:	sub    BYTE PTR [ebp+0x41],al
  421841:	pop    eax
  421842:	cmp    eax,0x918dfa60
  421847:	inc    esi
  421848:	ret    0x256e
  42184b:	dec    eax
  42184c:	ret    
  42184d:	lods   al,BYTE PTR ds:[esi]
  42184e:	mov    dh,0x6a
  421850:	pop    ebp
  421851:	sub    eax,0x1f0bcb5f
  421856:	std    
  421857:	xchg   DWORD PTR [edi],ebp
  421859:	js     0x42181a
  42185b:	mov    edi,0xcb0256c6
  421860:	push   esp
  421861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421862:	mov    ds:0x5259c4cd,al
  421867:	ds xchg esp,eax
  421869:	rcl    BYTE PTR [edi+0x2dc7aecc],0x78
  421870:	push   ebx
  421871:	std    
  421872:	xlat   BYTE PTR ds:[ebx]
  421873:	inc    DWORD PTR [edx-0x32]
  421876:	loop   0x42182c
  421878:	ret    
  421879:	cmp    DWORD PTR [edx-0x778f896f],edx
  42187f:	jg     0x42188a
  421881:	mov    bh,bh
  421883:	push   ebx
  421884:	sbb    DWORD PTR [edi+0x49],esi
  421887:	add    eax,0x690a2ec4
  42188c:	lds    eax,FWORD PTR [edi+0x2f]
  42188f:	lds    esp,FWORD PTR [edx-0x1c]
  421892:	jne    0x421851
  421894:	mov    dl,0x23
  421896:	(bad)  
  421897:	dec    esp
  421898:	dec    esp
  421899:	leave  
  42189a:	(bad)  
  42189c:	push   ss
  42189d:	or     BYTE PTR [eax-0x4203d5d6],dh
  4218a3:	add    BYTE PTR [edx],cl
  4218a5:	fstp   TBYTE PTR [eax+0x520a2f65]
  4218ab:	rcl    BYTE PTR [ecx-0x1b],1
  4218ae:	fld    QWORD PTR [esi+edx*2]
  4218b1:	fdivr  st(4),st
  4218b3:	pop    ds
  4218b4:	aad    0x6b
  4218b6:	jp     0x42186e
  4218b8:	jmp    0x421875
  4218ba:	enter  0xc75b,0xf0
  4218be:	inc    edi
  4218bf:	sbb    BYTE PTR [esi+ebx*8-0x3852a7f9],0x3b
  4218c7:	jecxz  0x42187f
  4218c9:	mov    esp,0xdc207d5
  4218ce:	and    al,0xf6
  4218d0:	inc    eax
  4218d1:	(bad)  
  4218d2:	or     DWORD PTR [edx+eiz*8-0xb],edi
  4218d6:	push   cs
  4218d7:	out    dx,al
  4218d8:	or     esi,edi
  4218da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218db:	dec    ecx
  4218dc:	jno    0x4218d1
  4218de:	or     BYTE PTR [edi],0xe4
  4218e1:	xchg   DWORD PTR [edx-0x46],esp
  4218e4:	std    
  4218e5:	aaa    
  4218e6:	les    edx,FWORD PTR [edi]
  4218e8:	in     eax,0xf
  4218ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218eb:	inc    eax
  4218ec:	jmp    0xf8df91b4
  4218f1:	sbb    dh,bl
  4218f3:	pop    ebp
  4218f4:	daa    
  4218f5:	jb     0x42195a
  4218f7:	mov    edi,0x5b5a342a
  4218fc:	jmp    0x42193d
  4218fe:	sub    BYTE PTR es:[eax+ebx*8],bl
  421902:	cmc    
  421903:	outs   dx,DWORD PTR ds:[esi]
  421904:	jp     0x42190b
  421906:	pop    es
  421907:	call   0x5117:0xc5a21672
  42190e:	adc    al,0x1e
  421910:	ret    
  421911:	cmp    ch,BYTE PTR [ebp-0x712366f8]
  421917:	or     al,0xde
  421919:	add    bh,cl
  42191b:	repz pop eax
  42191d:	cmp    bl,dl
  42191f:	dec    edi
  421920:	das    
  421921:	mov    ch,0xe4
  421923:	xor    BYTE PTR [ecx-0x46],bh
  421926:	loopne 0x4218f3
  421928:	bound  eax,QWORD PTR [edi+0x2c1403da]
  42192e:	xor    edi,DWORD PTR [esi+0x2782b4a8]
  421934:	popf   
  421935:	dec    esi
  421936:	sub    eax,0xcfbed8d1
  42193b:	sbb    DWORD PTR [ebp+0x34],ecx
  42193e:	mov    cs,WORD PTR [edx+0x4808fe4b]
  421944:	clc    
  421945:	mov    ds:0x36e20f75,eax
  42194a:	out    0x61,eax
  42194c:	cmc    
  42194d:	lea    esi,[eax+0x77bcb1b7]
  421953:	push   es
  421954:	pushw  0xc8e4
  421958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421959:	or     BYTE PTR [ebx+edi*1],dh
  42195c:	mov    ss,WORD PTR [ecx+edi*4]
  42195f:	sbb    DWORD PTR [ecx-0x6f],ecx
  421962:	jp     0x421988
  421964:	jge    0x42193e
  421966:	xchg   edx,eax
  421967:	sub    BYTE PTR [edx-0x4f],dl
  42196a:	mov    al,ds:0x848284bd
  42196f:	or     BYTE PTR [ecx-0x4d],cl
  421972:	push   DWORD PTR [eax+eax*4+0x3830d6]
  421979:	sti    
  42197a:	adc    DWORD PTR [ebp-0x76],esi
  42197d:	jb     0x42199b
  42197f:	mov    cl,0x77
  421981:	add    dh,BYTE PTR [edx-0x61]
  421984:	test   al,0x2
  421986:	or     al,0xc0
  421988:	mov    eax,0x2271f5de
  42198d:	mov    edi,DWORD PTR [esi+0x7ec48b17]
  421993:	nop
  421994:	lea    ebp,[esi+eiz*8-0x74]
  421998:	or     al,0x20
  42199a:	ret    0x85ba
  42199d:	pop    edx
  42199e:	pop    edx
  42199f:	sub    edi,esp
  4219a1:	adc    ecx,0xcbc55614
  4219a7:	jb     0x42197d
  4219a9:	adc    esi,DWORD PTR [edx-0x5e]
  4219ac:	push   0x1d
  4219ae:	std    
  4219af:	add    DWORD PTR [ebp-0x53],0xffffff95
  4219b3:	mov    edi,0x975a5d63
  4219b8:	test   BYTE PTR [esi+eax*2],bh
  4219bb:	enter  0xb456,0xc9
  4219bf:	push   eax
  4219c0:	jbe    0x421a3c
  4219c2:	mov    ebx,0x9fbcdc28
  4219c7:	js     0x421a1e
  4219c9:	pop    edi
  4219ca:	sub    DWORD PTR [edx+0x3e88ee37],0xffffff81
  4219d1:	and    ebp,DWORD PTR [eax]
  4219d3:	fadd   DWORD PTR [eax+edi*2+0x4f0d755e]
  4219da:	retf   0x9e6b
  4219dd:	pop    esp
  4219de:	icebp  
  4219df:	js     0x421987
  4219e1:	aas    
  4219e2:	xchg   ebx,eax
  4219e3:	and    BYTE PTR [edx],dl
  4219e5:	iret   
  4219e6:	sub    al,0x73
  4219e8:	repz aam 0xe7
  4219eb:	inc    ecx
  4219ec:	xor    DWORD PTR [ebx+0x6],edi
  4219ef:	sbb    al,0x80
  4219f1:	sbb    DWORD PTR [esi+0x5723c9ea],0x5f05701e
  4219fb:	or     eax,0x11f48e2c
  421a00:	or     al,0xe2
  421a02:	out    dx,eax
  421a03:	xchg   edi,eax
  421a04:	std    
  421a05:	sti    
  421a06:	and    al,0xdc
  421a08:	es (bad) 
  421a0b:	sti    
  421a0c:	std    
  421a0d:	ror    DWORD PTR [ebp+0x1d],0x3b
  421a11:	iret   
  421a12:	or     eax,0x916d0983
  421a17:	add    DWORD PTR [eax],eax
  421a19:	clc    
  421a1a:	add    al,0x0
  421a1c:	add    BYTE PTR [edi+0x59],ah
  421a1f:	mov    ebx,0xe559e680
  421a24:	cmp    al,BYTE PTR cs:[eax+0x67]
  421a28:	sub    esi,DWORD PTR [ecx]
  421a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a2b:	sahf   
  421a2c:	in     eax,dx
  421a2d:	lock popf 
  421a2f:	leave  
  421a30:	adc    esp,ecx
  421a32:	outs   dx,BYTE PTR ds:[esi]
  421a33:	jns    0x421a18
  421a35:	or     al,0x63
  421a37:	pop    edi
  421a38:	mov    esi,DWORD PTR [ebx+ecx*4+0x5c]
  421a3c:	jl     0x421a26
  421a3e:	mov    ds:0x2d4af485,al
  421a43:	outs   dx,BYTE PTR ds:[esi]
  421a44:	test   eax,0x99ba1974
  421a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a4a:	sub    dh,cl
  421a4c:	mov    ds:0x6c6e75da,al
  421a51:	loopne 0x421aa4
  421a53:	mov    ebp,0x55436e11
  421a58:	shr    al,cl
  421a5a:	lahf   
  421a5b:	cli    
  421a5c:	push   esp
  421a5d:	aaa    
  421a5e:	icebp  
  421a5f:	mov    esp,0x55c2ed4d
  421a64:	rol    DWORD PTR [ecx],cl
  421a66:	xchg   BYTE PTR [edx+0x44],bh
  421a69:	mov    ah,0x7f
  421a6b:	add    DWORD PTR [edi],ecx
  421a6d:	(bad)  
  421a6e:	xchg   BYTE PTR [eax],al
  421a70:	mov    bl,BYTE PTR [edx-0x31]
  421a73:	xor    edx,DWORD PTR [esi]
  421a75:	xchg   DWORD PTR [edi],eax
  421a77:	cld    
  421a78:	and    DWORD PTR [esi+eiz*2+0x3e35771e],edi
  421a7f:	clc    
  421a80:	aaa    
  421a81:	sub    ebp,DWORD PTR [edi+0x6e931c64]
  421a87:	test   eax,0x97ead8b3
  421a8c:	dec    ebp
  421a8d:	xchg   ebp,eax
  421a8e:	call   0xe9214034
  421a93:	jns    0x421a24
  421a95:	(bad)  
  421a96:	jb     0x421a3a
  421a98:	push   ecx
  421a99:	in     al,0x56
  421a9b:	test   al,0xd1
  421a9d:	lods   al,BYTE PTR ds:[esi]
  421a9e:	je     0x421ac0
  421aa0:	jge    0x421ad2
  421aa2:	mov    eax,0xaf4ad234
  421aa7:	lds    esi,FWORD PTR [eax-0x1e]
  421aaa:	ss sub cl,cl
  421aad:	jbe    0x421a73
  421aaf:	xlat   BYTE PTR ds:[ebx]
  421ab0:	in     al,0x9f
  421ab2:	outs   dx,BYTE PTR ds:[esi]
  421ab3:	sbb    al,0x87
  421ab5:	mov    DWORD PTR [ebp-0x6808f765],ebp
  421abb:	scas   al,BYTE PTR es:[edi]
  421abc:	out    0x87,eax
  421abe:	ret    0x9775
  421ac1:	sub    esp,DWORD PTR [esi+eax*2-0x755c840e]
  421ac8:	arpl   WORD PTR [ebx-0x4b],sp
  421acb:	(bad)  
  421acc:	outs   dx,DWORD PTR ds:[esi]
  421acd:	fs jl  0x421aec
  421ad0:	push   ds
  421ad1:	out    dx,eax
  421ad2:	jno    0x421a5c
  421ad4:	test   BYTE PTR [esi+0x721c088e],0x46
  421adb:	xchg   esp,eax
  421adc:	xor    edi,eax
  421ade:	cmp    al,0x94
  421ae0:	mov    dl,0xdf
  421ae2:	fwait
  421ae3:	mov    eax,0xe8ab3261
  421ae8:	ins    BYTE PTR es:[edi],dx
  421ae9:	jmp    0xdba5:0x1d3cf946
  421af0:	outs   dx,BYTE PTR ds:[esi]
  421af1:	cwde   
  421af2:	fsubrp st(0),st
  421af4:	xchg   edi,eax
  421af5:	dec    si
  421af7:	sahf   
  421af8:	cdq    
  421af9:	stc    
  421afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421afb:	xlat   BYTE PTR ds:[ebx]
  421afc:	xchg   edx,eax
  421afd:	cmp    al,0xb8
  421aff:	add    al,0x42
  421b01:	adc    esp,esp
  421b03:	std    
  421b04:	jge    0x421b59
  421b06:	mov    dh,BYTE PTR gs:[ebp-0x4a61de64]
  421b0d:	inc    edx
  421b0e:	test   BYTE PTR [eax],bh
  421b10:	adc    eax,0x3862cb6d
  421b15:	and    al,0x7e
  421b17:	cmp    bl,BYTE PTR es:[esi+0x481027cd]
  421b1e:	fisttp QWORD PTR [ecx+0x6e6fc09c]
  421b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b25:	xchg   DWORD PTR [eax-0x6f],edx
  421b28:	in     al,0xbc
  421b2a:	mov    ecx,0x6dfe59c2
  421b2f:	xchg   ebx,eax
  421b30:	adc    dh,BYTE PTR [ebx]
  421b32:	repz push ecx
  421b34:	adc    eax,0xae9a5d68
  421b39:	fsub   QWORD PTR [eax-0x5c8ebf01]
  421b3f:	jnp    0x421af8
  421b41:	mov    al,0xe2
  421b43:	or     esi,esp
  421b45:	pop    edi
  421b46:	xor    edi,DWORD PTR [edx]
  421b48:	inc    ecx
  421b49:	add    al,ah
  421b4b:	(bad)  
  421b4c:	sub    bl,BYTE PTR [edi+0x32]
  421b4f:	dec    ebx
  421b50:	divps  xmm3,XMMWORD PTR [ebp-0x11aab74f]
  421b57:	outs   dx,DWORD PTR ds:[esi]
  421b58:	popf   
  421b59:	inc    BYTE PTR [ebx-0x139d0ebf]
  421b5f:	in     eax,dx
  421b60:	push   cs
  421b61:	imul   edi,DWORD PTR [ebp+0x445950fc],0x1d
  421b68:	mov    ebx,0x5fb78060
  421b6d:	mov    al,ds:0xca5efc79
  421b72:	mov    esp,0xd6b4779e
  421b77:	loopne 0x421b2a
  421b79:	std    
  421b7a:	jg     0x421bac
  421b7c:	adc    BYTE PTR [ecx-0x22],0x7
  421b80:	xchg   edx,eax
  421b81:	daa    
  421b82:	push   esp
  421b83:	pop    esi
  421b84:	cmp    ch,ah
  421b86:	(bad)  
  421b89:	pop    esp
  421b8a:	mov    ebp,0xb21e5a1c
  421b8f:	std    
  421b90:	daa    
  421b91:	mov    ebp,0x4649d017
  421b96:	sar    BYTE PTR [ecx+0x635dfa30],1
  421b9c:	mov    ds:0x89ff8de8,eax
  421ba1:	fcmovnbe st,st(0)
  421ba3:	lds    eax,FWORD PTR [esi+0x45]
  421ba6:	les    edi,FWORD PTR [edx-0x1702269a]
  421bac:	cmp    BYTE PTR [edx],bh
  421bae:	push   ebp
  421baf:	in     al,0xe0
  421bb1:	in     eax,dx
  421bb2:	add    bh,cl
  421bb4:	mov    bh,0xfe
  421bb6:	sbb    bl,cl
  421bb8:	push   eax
  421bb9:	mov    cl,0xc7
  421bbb:	ins    BYTE PTR es:[edi],dx
  421bbc:	(bad)  
  421bbd:	cmp    ch,BYTE PTR ds:0x2e53d3da
  421bc3:	sub    eax,ebx
  421bc5:	cmp    eax,0x83f11e97
  421bca:	mov    es,WORD PTR [edi-0x41fa5518]
  421bd0:	mov    bh,0x1d
  421bd2:	mov    BYTE PTR [esi-0x2a],ch
  421bd5:	push   ebp
  421bd6:	ds retf 
  421bd8:	outs   dx,BYTE PTR ds:[esi]
  421bd9:	sbb    al,0x41
  421bdb:	loopne 0x421bb0
  421bdd:	in     al,dx
  421bde:	inc    eax
  421bdf:	ja     0x421bbf
  421be1:	in     al,dx
  421be2:	dec    ecx
  421be3:	push   cs
  421be4:	or     BYTE PTR [ebx+0x43],ah
  421be7:	inc    ecx
  421be8:	rcl    edx,cl
  421bea:	sub    eax,0x11808ebd
  421bef:	xchg   DWORD PTR [eax],esp
  421bf1:	jge    0x421bb8
  421bf3:	jp     0x421c50
  421bf5:	pop    ebp
  421bf6:	mov    esp,0xeb09249b
  421bfb:	pop    es
  421bfc:	mov    cl,0x8d
  421bfe:	(bad)  
  421bff:	xor    dl,cl
  421c01:	wrmsr  
  421c03:	addr16 pusha 
  421c05:	add    ebx,eax
  421c07:	xchg   esp,eax
  421c08:	dec    esi
  421c09:	inc    edi
  421c0a:	sbb    al,0xac
  421c0c:	jmp    DWORD PTR [edx+0x330bfaaa]
  421c12:	jns    0x421b96
  421c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c15:	jmp    0x844f:0x3056dd79
  421c1c:	and    ebp,DWORD PTR fs:[ebx+edi*4-0x403d91a8]
  421c24:	inc    eax
  421c25:	or     DWORD PTR [esi+ebp*4],esi
  421c28:	sub    eax,0x7bfc345d
  421c2d:	mov    BYTE PTR [edx],dh
  421c2f:	ret    
  421c30:	jecxz  0x421c45
  421c32:	or     BYTE PTR [edi],0x60
  421c35:	nop
  421c36:	sub    esi,DWORD PTR [ebx]
  421c38:	stos   DWORD PTR es:[edi],eax
  421c39:	xchg   ebx,eax
  421c3a:	or     eax,0x5c77e4af
  421c3f:	stc    
  421c40:	in     eax,0x40
  421c42:	xchg   ecx,eax
  421c43:	pop    ebp
  421c44:	enter  0x4122,0xe5
  421c48:	dec    eax
  421c49:	scas   al,BYTE PTR es:[edi]
  421c4a:	lds    eax,FWORD PTR [ebx-0x4c793e05]
  421c50:	add    dl,dl
  421c52:	push   es
  421c53:	mov    ecx,eax
  421c55:	sub    esi,DWORD PTR [ebx+ebp*2+0x67517fb1]
  421c5c:	mov    dh,BYTE PTR [edx]
  421c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c5f:	mov    bh,0x12
  421c61:	aam    0xf9
  421c63:	mov    esp,0x6688c641
  421c68:	inc    ecx
  421c69:	pop    esi
  421c6a:	pop    eax
  421c6b:	loopne 0x421c59
  421c6d:	stos   BYTE PTR es:[edi],al
  421c6e:	lods   al,BYTE PTR ds:[esi]
  421c6f:	mov    eax,ds:0x14de80de
  421c74:	fldcw  WORD PTR [edi-0x3f]
  421c77:	daa    
  421c78:	(bad)  
  421c79:	pushf  
  421c7a:	mov    eax,DWORD PTR ds:0x71b856fd
  421c80:	loope  0x421c8c
  421c82:	arpl   WORD PTR [edi],cx
  421c84:	mov    bl,BYTE PTR fs:[eax-0x12]
  421c88:	inc    esp
  421c89:	cdq    
  421c8a:	xchg   edx,eax
  421c8b:	outs   dx,DWORD PTR ds:[esi]
  421c8c:	outs   dx,DWORD PTR ds:[esi]
  421c8d:	mov    edx,0x1a41e7a4
  421c92:	xor    eax,0xdb589171
  421c97:	inc    ebp
  421c98:	pop    edi
  421c99:	pop    es
  421c9a:	lods   al,BYTE PTR ds:[esi]
  421c9b:	lock leave 
  421c9d:	cwde   
  421c9e:	adc    bh,BYTE PTR [eax-0x7f]
  421ca1:	jmp    0x421cc8
  421ca3:	retf   
  421ca4:	xchg   ecx,eax
  421ca5:	sar    BYTE PTR [eax-0x72],1
  421ca8:	pop    ss
  421ca9:	xlat   BYTE PTR ds:[ebx]
  421caa:	xchg   esp,eax
  421cab:	mov    edx,0xc0976228
  421cb0:	imul   esp,DWORD PTR [ecx+0xd],0x55f16e85
  421cb7:	xor    al,0xe8
  421cb9:	dec    ebp
  421cba:	and    eax,0x196b7d00
  421cbf:	push   edx
  421cc0:	fisttp QWORD PTR ds:0xb23706b8
  421cc6:	iret   
  421cc7:	and    cl,dl
  421cc9:	add    edx,DWORD PTR [ebp+0x4a]
  421ccc:	mov    edi,0x449c9eb9
  421cd1:	push   edx
  421cd2:	jg     0x421d4f
  421cd4:	aas    
  421cd5:	jecxz  0x421d40
  421cd7:	rcr    DWORD PTR [ebp+0x2c],0xd9
  421cdb:	cdq    
  421cdc:	mov    ecx,0xdffa3497
  421ce1:	pop    eax
  421ce2:	mov    WORD PTR [esi+0x26],ds
  421ce5:	jecxz  0x421cda
  421ce7:	dec    ecx
  421ce8:	jp     0x421c78
  421cea:	mov    ecx,0xb1cbe15
  421cef:	stos   DWORD PTR es:[edi],eax
  421cf0:	mov    BYTE PTR [eax+edi*4+0x1d],ch
  421cf4:	adc    ebx,0x14
  421cf7:	sub    al,bl
  421cf9:	int    0x71
  421cfb:	jnp    0x421cf1
  421cfd:	adc    BYTE PTR [edi+0x1193c5fa],ah
  421d03:	mov    bl,0xf5
  421d05:	mov    al,0x6b
  421d07:	jns    0x421c98
  421d09:	ror    DWORD PTR ds:0x7c9db708,cl
  421d0f:	pop    es
  421d10:	jae    0x421cba
  421d12:	lahf   
  421d13:	mov    al,0x28
  421d15:	fisubr WORD PTR [ecx+0x4e021176]
  421d1b:	clc    
  421d1c:	sub    cl,cl
  421d1e:	imul   ebp,DWORD PTR [ecx],0xa8e7afa3
  421d24:	mov    al,0x31
  421d26:	cld    
  421d27:	in     al,0xfb
  421d29:	and    eax,0x951bc3a6
  421d2e:	or     BYTE PTR [eax],al
  421d30:	pop    esp
  421d31:	cmp    esi,DWORD PTR [esi]
  421d33:	std    
  421d34:	clc    
  421d35:	int3   
  421d36:	fs sti 
  421d38:	mov    al,0xef
  421d3a:	jmp    DWORD PTR [ebp+0x2d294601]
  421d40:	(bad)  
  421d41:	pop    ebx
  421d42:	push   esp
  421d43:	push   ds
  421d44:	sub    eax,DWORD PTR [eax+0x42]
  421d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d48:	dec    edi
  421d49:	push   es
  421d4a:	inc    ebx
  421d4b:	scas   eax,DWORD PTR es:[edi]
  421d4c:	mov    edx,0xc667b1f8
  421d51:	mov    dl,0x3f
  421d53:	xor    ah,BYTE PTR [ebx]
  421d55:	push   es
  421d56:	dec    eax
  421d57:	mov    ds:0x49c6f4b1,eax
  421d5c:	(bad)  
  421d5d:	dec    ecx
  421d5e:	loopne 0x421d17
  421d60:	push   edi
  421d61:	xlat   BYTE PTR ds:[ebx]
  421d62:	mov    esp,0xd94db41d
  421d67:	push   ebp
  421d68:	jecxz  0x421dbb
  421d6a:	inc    edi
  421d6b:	out    0x98,al
  421d6d:	push   0xfffffff8
  421d6f:	rcr    DWORD PTR [esi],cl
  421d71:	push   esp
  421d72:	(bad)  [edi]
  421d74:	and    DWORD PTR [ebp+0x5d],ebx
  421d77:	dec    ebx
  421d78:	jmp    0x421d9b
  421d7a:	clc    
  421d7b:	xor    BYTE PTR [edx],ch
  421d7d:	sub    al,0x4c
  421d7f:	and    bh,cl
  421d81:	mov    ebp,0xa15f1b42
  421d86:	call   0xf17f:0xe2ab214f
  421d8d:	pop    edx
  421d8e:	xlat   BYTE PTR ds:[ebx]
  421d8f:	dec    ebx
  421d90:	mov    cl,0x75
  421d93:	mov    cl,BYTE PTR [eax+edx*2+0x5e]
  421d97:	inc    ebp
  421d98:	jbe    0x421d2a
  421d9a:	adc    bh,BYTE PTR [ebx+0x37]
  421d9d:	mov    ds:0xfd672342,al
  421da2:	sbb    al,0xc4
  421da4:	xor    eax,0xd940cab5
  421da9:	test   eax,0xbc1b1e2a
  421dae:	iret   
  421daf:	mov    edi,0x99d857f3
  421db4:	mov    DWORD PTR [edx],ebp
  421db6:	fs push esp
  421db8:	push   ecx
  421db9:	push   0xee519ccc
  421dbe:	xchg   edi,eax
  421dbf:	xchg   edi,eax
  421dc0:	xchg   edi,eax
  421dc1:	in     eax,0xe2
  421dc3:	dec    edi
  421dc4:	push   ecx
  421dc5:	xchg   edx,eax
  421dc6:	add    al,BYTE PTR [eax+0x50]
  421dc9:	pop    edi
  421dca:	adc    DWORD PTR [ecx+0x77640495],0xffffffa5
  421dd1:	push   cs
  421dd2:	shr    BYTE PTR [edx+0x74d4d87],cl
  421dd8:	lds    edx,FWORD PTR [esi]
  421dda:	fadd   st,st(1)
  421ddc:	or     al,0x96
  421dde:	outs   dx,BYTE PTR ds:[esi]
  421ddf:	out    dx,eax
  421de0:	scas   eax,DWORD PTR es:[edi]
  421de1:	aaa    
  421de2:	into   
  421de3:	pop    edx
  421de4:	add    dh,ah
  421de6:	mov    cl,0x23
  421de8:	cmovle edx,DWORD PTR [esi+ecx*2]
  421dec:	mov    esp,0xae9b8dae
  421df1:	outs   dx,BYTE PTR ds:[esi]
  421df2:	int    0xb9
  421df4:	xchg   edi,eax
  421df5:	data16 rcr BYTE PTR cs:[ebx+esi*8+0x2e5dcdc8],cl
  421dfe:	data16 aam 0xa9
  421e01:	repz sar BYTE PTR [ebx+0x11365597],1
  421e08:	inc    edx
  421e09:	icebp  
  421e0a:	repnz push bx
  421e0d:	fiadd  DWORD PTR [ecx]
  421e0f:	xchg   esp,eax
  421e10:	(bad)  
  421e11:	out    0x28,al
  421e13:	retf   0x78c4
  421e16:	fs and al,0xb4
  421e19:	dec    ebp
  421e1b:	cmp    ah,0xd8
  421e1e:	ror    WORD PTR [edx],cl
  421e21:	pusha  
  421e22:	adc    ebp,edi
  421e24:	xchg   edx,eax
  421e25:	xor    BYTE PTR [esi+0x2550914d],dh
  421e2b:	shr    BYTE PTR [esi-0x678fed8],0x3f
  421e32:	leave  
  421e33:	inc    DWORD PTR [edx]
  421e35:	rcr    eax,1
  421e37:	push   edx
  421e38:	jbe    0x421e2b
  421e3a:	call   FWORD PTR [ecx+0x66]
  421e3d:	xor    ebp,DWORD PTR [ebx+0x708cd15a]
  421e43:	sar    esi,cl
  421e45:	mov    ch,bh
  421e47:	rcr    DWORD PTR [ebx-0x5c369cc6],cl
  421e4d:	cmp    al,0x5b
  421e4f:	pop    eax
  421e50:	add    BYTE PTR [ebx-0x53c4498c],dh
  421e56:	mov    bl,0xb3
  421e58:	dec    ebx
  421e59:	cmp    esp,DWORD PTR [eax+0x5a]
  421e5c:	mov    bh,0x83
  421e5e:	lahf   
  421e5f:	cmp    eax,0xccdf0c2
  421e64:	cmp    DWORD PTR [esi+0x1a],esi
  421e67:	fmul   QWORD PTR [ebx+esi*4-0x3c0849d7]
  421e6e:	pop    eax
  421e6f:	push   edx
  421e70:	cwde   
  421e71:	(bad)  
  421e72:	fist   WORD PTR [ebx-0x25c73309]
  421e78:	dec    ebx
  421e79:	mov    ds:0xc0cfcb7d,al
  421e7e:	push   ebx
  421e7f:	ins    BYTE PTR es:[edi],dx
  421e80:	fcom   st(1)
  421e82:	xor    eax,0x9b7df272
  421e87:	push   ecx
  421e88:	pusha  
  421e89:	jmp    0x68b9:0x42e50038
  421e90:	xor    al,0x56
  421e92:	rcl    dh,cl
  421e94:	jo     0x421eb0
  421e96:	xor    dh,BYTE PTR cs:[eax]
  421e99:	push   edi
  421e9a:	jne    0x421e7e
  421e9c:	lods   eax,DWORD PTR ds:[esi]
  421e9d:	jnp    0x421e75
  421e9f:	push   es
  421ea0:	mov    cl,0xdd
  421ea2:	adc    BYTE PTR [esi+eax*8+0x35],0x9e
  421ea7:	sahf   
  421ea8:	inc    eax
  421ea9:	in     al,dx
  421eaa:	in     al,0x9
  421eac:	xchg   esi,eax
  421ead:	xchg   edi,eax
  421eae:	fwait
  421eaf:	ins    DWORD PTR es:[edi],dx
  421eb0:	ja     0x421ecc
  421eb2:	shl    DWORD PTR [ebx+0x20f62141],cl
  421eb8:	mov    ecx,0xfaf830c9
  421ebd:	push   0x6b
  421ebf:	mov    bl,0x5c
  421ec1:	fs push ds
  421ec3:	cmp    DWORD PTR [edx+0x42e21717],esi
  421ec9:	adc    al,0xe3
  421ecb:	jo     0x421efd
  421ecd:	fisub  DWORD PTR [esi-0x67]
  421ed0:	cmp    dl,BYTE PTR [esi+0x5ba47c35]
  421ed6:	jne    0x421f33
  421ed8:	ja     0x421e70
  421eda:	xchg   al,ah
  421edc:	imul   ebx,DWORD PTR [esi],0x4f6d20f0
  421ee2:	inc    esp
  421ee3:	repnz lods al,BYTE PTR ds:[esi]
  421ee5:	ret    
  421ee6:	inc    esi
  421ee7:	loope  0x421ed1
  421ee9:	stos   BYTE PTR es:[edi],al
  421eea:	mov    esi,0xbdb7a686
  421eef:	xchg   ecx,eax
  421ef0:	enter  0x4682,0xf1
  421ef4:	lock push ebp
  421ef6:	mov    bh,0xa4
  421ef8:	mov    BYTE PTR [edx+ebp*1+0x2d398760],dl
  421eff:	pop    edx
  421f00:	sbb    eax,0x34a01dd6
  421f05:	lods   eax,DWORD PTR ds:[esi]
  421f06:	inc    edx
  421f07:	jmp    0x5a6f:0x6fbac705
  421f0e:	xor    bl,BYTE PTR [eax+0x2e663480]
  421f14:	jae    0x421f31
  421f16:	mov    esi,0xdaef9aee
  421f1b:	jg     0x421edc
  421f1d:	inc    eax
  421f1e:	jp     0x421ef4
  421f20:	sbb    eax,0x6a73ea8f
  421f25:	gs xchg esi,eax
  421f27:	add    DWORD PTR [eax],eax
  421f29:	clc    
  421f2a:	add    al,0x0
  421f2c:	add    BYTE PTR [esi+0x77f19088],cl
  421f32:	mov    ebx,0xee04d033
  421f37:	or     ebx,DWORD PTR [esi]
  421f39:	loop   0x421fa9
  421f3b:	aam    0x31
  421f3d:	clc    
  421f3e:	mov    dh,BYTE PTR [esi]
  421f40:	repz int 0x7b
  421f43:	pop    ecx
  421f44:	stc    
  421f45:	retf   0x5f18
  421f48:	sti    
  421f49:	popa   
  421f4a:	stos   DWORD PTR es:[edi],eax
  421f4b:	nop
  421f4c:	int3   
  421f4d:	shr    BYTE PTR [ebx],cl
  421f4f:	stos   BYTE PTR es:[edi],al
  421f50:	out    dx,al
  421f51:	jb     0x421f56
  421f53:	aas    
  421f54:	stos   BYTE PTR es:[edi],al
  421f55:	xchg   ebp,eax
  421f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f57:	js     0x421ee7
  421f59:	pop    edi
  421f5a:	shl    ch,0xb5
  421f5d:	and    DWORD PTR ds:0xced839c3,0x9d490135
  421f67:	sbb    DWORD PTR [esi-0x2e4dad04],ecx
  421f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f6e:	stos   BYTE PTR es:[edi],al
  421f6f:	inc    edi
  421f70:	retf   
  421f71:	ss jae 0x421fcd
  421f74:	pop    esp
  421f75:	dec    ebx
  421f76:	xchg   ebp,eax
  421f77:	mov    esi,0xc1b9eb83
  421f7c:	sub    esi,esi
  421f7e:	adc    al,0xee
  421f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f81:	sar    BYTE PTR [eax],cl
  421f83:	fldenv [edx+0x74]
  421f86:	and    al,0xee
  421f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f89:	add    DWORD PTR [edi+0x52],eax
  421f8c:	int    0x3c
  421f8e:	dec    DWORD PTR [ebx+0x6b]
  421f91:	cld    
  421f92:	mov    eax,ds:0x6c4d384a
  421f97:	ins    BYTE PTR es:[edi],dx
  421f98:	bound  ebp,QWORD PTR [ebx+0x1c50cd7e]
  421f9e:	out    dx,eax
  421f9f:	mov    edx,0xa9ef5d08
  421fa4:	neg    BYTE PTR [ebx-0x64]
  421fa7:	jge    0x421f39
  421fa9:	lea    edi,[ecx-0x1b1a9f6c]
  421faf:	xor    eax,0xbe9f08ab
  421fb4:	and    ch,cl
  421fb6:	add    al,0xb1
  421fb8:	fwait
  421fb9:	pop    ebx
  421fba:	dec    ebx
  421fbb:	jbe    0x421f3d
  421fbd:	jae    0x421f75
  421fbf:	push   ds
  421fc0:	xchg   edx,eax
  421fc1:	inc    edi
  421fc2:	jo     0x42201b
  421fc4:	add    cl,BYTE PTR [ecx-0x28]
  421fc7:	mov    cs,WORD PTR [edx+0x5ad13792]
  421fcd:	jmp    0xc75269b6
  421fd2:	sub    DWORD PTR [ecx+0x20],0xf88e1ebd
  421fd9:	call   0xec03:0xf7d27463
  421fe0:	xor    ah,BYTE PTR [edi]
  421fe2:	mov    al,0x6e
  421fe4:	jmp    0x421f77
  421fe6:	mov    esi,0x532a022b
  421feb:	xor    BYTE PTR [edx+ebp*8+0x7a278241],0x96
  421ff3:	mov    ebp,0x4555ad9
  421ff8:	mov    esp,0x3ec3af28
  421ffd:	in     al,0x2f
  421fff:	xor    eax,0x90b71189
  422004:	adc    edi,DWORD PTR [edi-0x59500d2c]
  42200a:	mov    ah,dh
  42200c:	pop    edx
  42200d:	jl     0x421fa2
  42200f:	stos   DWORD PTR es:[edi],eax
  422010:	xor    BYTE PTR [esi+0x755679b1],cl
  422016:	pop    eax
  422017:	dec    ebp
  422018:	es push 0xffffff8d
  42201b:	fimul  DWORD PTR [ecx]
  42201d:	push   ds
  42201e:	jns    0x422087
  422020:	ins    BYTE PTR es:[edi],dx
  422021:	xchg   BYTE PTR [ebp+0x75d270d3],dl
  422027:	adc    eax,0xfa8e94d9
  42202c:	jo     0x42204d
  42202e:	pop    ecx
  42202f:	inc    eax
  422030:	mov    al,ds:0xb7c8c576
  422035:	(bad)  
  422036:	sbb    ebx,DWORD PTR [esi-0x10513857]
  42203c:	push   0xffffffda
  42203e:	ret    0x1ab2
  422041:	sub    eax,0xd73d8b4f
  422046:	loope  0x42202c
  422048:	push   0xfffffff8
  42204a:	fisub  WORD PTR [esi+ebp*1+0x3c]
  42204e:	dec    ecx
  42204f:	pushf  
  422050:	mul    BYTE PTR [ebp+0x1476481b]
  422056:	call   0x63fa:0x50c39fb2
  42205d:	repz mov ah,0xb1
  422060:	push   ebp
  422061:	mov    bl,0xfd
  422063:	or     al,BYTE PTR [ecx+0x4fd87753]
  422069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42206a:	test   BYTE PTR [edi+0x34],dh
  42206d:	mov    ds:0x43554751,al
  422072:	inc    edi
  422073:	jmp    0x42200a
  422075:	aam    0x84
  422077:	gs inc esi
  422079:	pop    es
  42207a:	xor    al,0x23
  42207c:	and    dh,BYTE PTR [eax]
  42207e:	sub    eax,0x5a90baa2
  422083:	cli    
  422084:	retf   0x4ef3
  422087:	and    dh,BYTE PTR [edx]
  422089:	in     eax,0x9b
  42208b:	lahf   
  42208c:	xchg   DWORD PTR [esi-0x216f2aa0],ebp
  422092:	or     al,0x74
  422094:	aas    
  422095:	nop
  422096:	add    esi,ebx
  422098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422099:	sbb    DWORD PTR [ebx+0x3a664127],esp
  42209f:	jns    0x42208d
  4220a1:	dec    eax
  4220a2:	arpl   WORD PTR [esi-0x29],sp
  4220a5:	or     al,BYTE PTR [ebx+ebx*2+0x1d]
  4220a9:	xor    al,0xa6
  4220ab:	aas    
  4220ac:	adc    al,0xf8
  4220ae:	push   0xffffff82
  4220b0:	sub    DWORD PTR [ecx+0x7c],eax
  4220b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220b4:	jnp    0x422081
  4220b6:	push   ebx
  4220b7:	retf   0xf5f0
  4220ba:	mov    esp,0xdb0ff913
  4220bf:	jo     0x422081
  4220c1:	cmp    al,0x5f
  4220c3:	lea    esp,[esi-0x1]
  4220c6:	(bad)  
  4220c8:	test   DWORD PTR [ecx+0xb],0x36786942
  4220cf:	int    0xd9
  4220d1:	fwait
  4220d2:	aas    
  4220d3:	jnp    0x42211d
  4220d5:	(bad)  
  4220d7:	sti    
  4220d8:	out    0x4f,al
  4220da:	pushf  
  4220db:	call   0xb75e:0x92a17f27
  4220e2:	lahf   
  4220e3:	sbb    bh,ah
  4220e5:	add    edi,ecx
  4220e7:	xor    DWORD PTR [eax-0x17c1f745],ecx
  4220ed:	or     ah,al
  4220ef:	jg     0x422161
  4220f1:	aad    0xd7
  4220f3:	loopne 0x422173
  4220f5:	or     BYTE PTR [edx+0x6eba1ac5],dh
  4220fb:	adc    BYTE PTR [ecx-0xbec37c4],0xf
  422102:	add    eax,DWORD PTR [esi-0x49c5f0dc]
  422108:	mov    ecx,0x298f8964
  42210d:	shl    BYTE PTR [esi+0x35],0xdd
  422111:	out    dx,eax
  422112:	cmp    ebx,DWORD PTR [ebp+0x5c677c86]
  422118:	mov    edx,0xbe7fc136
  42211d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42211e:	sub    al,0x2d
  422120:	and    BYTE PTR [ecx],al
  422122:	push   es
  422123:	jecxz  0x42218d
  422125:	xchg   esp,eax
  422127:	fs push 0x3f348624
  42212d:	or     al,0xd2
  42212f:	push   ds
  422130:	xchg   ebx,eax
  422131:	sub    DWORD PTR [esi-0x68],ecx
  422134:	and    cl,0x3f
  422137:	arpl   dx,dx
  422139:	xor    esp,DWORD PTR [ebp+0x67]
  42213c:	push   ebp
  42213d:	out    dx,al
  42213e:	jo     0x4220ca
  422140:	std    
  422141:	sub    BYTE PTR [eax+0x29],dl
  422144:	sbb    DWORD PTR [eax+0x5b],0xf48c1e98
  42214b:	pop    es
  42214c:	xchg   DWORD PTR [edi],edx
  42214e:	cmp    DWORD PTR [edi-0x67],0xffffffb2
  422152:	out    0xae,al
  422154:	dec    edx
  422155:	loop   0x4220f1
  422157:	mov    dl,0x4b
  422159:	add    DWORD PTR [ecx-0x16],ebx
  42215c:	adc    eax,0x27fd975f
  422161:	push   ecx
  422162:	and    esi,edi
  422164:	pop    ecx
  422165:	pop    eax
  422166:	adc    DWORD PTR [edx+0x49],0xda008f95
  42216d:	push   edx
  42216e:	mov    edx,0x80304123
  422173:	inc    ebp
  422174:	in     al,dx
  422175:	jae    0x422198
  422177:	mov    bh,0x61
  422179:	inc    esi
  42217a:	rcr    DWORD PTR [edx+0xaca12d1],1
  422180:	sahf   
  422181:	xlat   BYTE PTR ds:[ebx]
  422182:	or     ecx,DWORD PTR [ebx+0x67680cdc]
  422188:	cld    
  422189:	aad    0x4d
  42218b:	push   ss
  42218c:	add    DWORD PTR [ebx],edi
  42218e:	fist   WORD PTR [ecx+edx*8]
  422191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422192:	jmp    0x4221fd
  422194:	jbe    0x42215d
  422196:	popf   
  422197:	outs   dx,BYTE PTR ds:[esi]
  422198:	push   edx
  422199:	(bad)  
  42219a:	mov    al,0xfa
  42219c:	push   cs
  42219d:	in     eax,dx
  42219e:	pushf  
  42219f:	push   ebx
  4221a0:	or     eax,0x7530c654
  4221a5:	jecxz  0x42221b
  4221a7:	xchg   ebx,eax
  4221a8:	sar    DWORD PTR [eax-0x73507118],cl
  4221ae:	sbb    esi,ebp
  4221b0:	aad    0x73
  4221b2:	add    BYTE PTR [eax],ch
  4221b4:	or     bh,BYTE PTR [ebx]
  4221b6:	inc    ecx
  4221b7:	ror    esi,0x23
  4221ba:	loop   0x422169
  4221bc:	std    
  4221bd:	dec    ebx
  4221be:	cmp    bl,ch
  4221c0:	js     0x4221e2
  4221c2:	aaa    
  4221c3:	int    0xa
  4221c5:	and    eax,0x210bd6e8
  4221ca:	xlat   BYTE PTR ds:[ebx]
  4221cb:	int    0x7c
  4221cd:	dec    esi
  4221ce:	div    BYTE PTR [esi+edi*2]
  4221d1:	loope  0x42220d
  4221d3:	ja     0x42224e
  4221d5:	mov    WORD PTR [ebp+0x7b],es
  4221d8:	fs mov ch,ch
  4221db:	popa   
  4221dc:	adc    BYTE PTR ds:0xfd39d563,cl
  4221e2:	in     eax,0x9
  4221e4:	xor    BYTE PTR [ebx+edi*1],dl
  4221e7:	and    al,0xb1
  4221e9:	repz push esi
  4221eb:	retf   0xdebd
  4221ee:	pop    ds
  4221ef:	shl    BYTE PTR [edi-0x434f2517],0x9a
  4221f6:	jno    0x4221cb
  4221f8:	fimul  DWORD PTR [esi]
  4221fa:	scas   al,BYTE PTR es:[edi]
  4221fb:	scas   eax,DWORD PTR es:[edi]
  4221fc:	mov    dl,0x2a
  4221fe:	xor    eax,DWORD PTR [ebx]
  422200:	retf   
  422201:	aam    0x2d
  422203:	(bad)  
  422204:	push   ebx
  422205:	dec    esp
  422206:	dec    cx
  422208:	ret    
  422209:	imul   edx,DWORD PTR [edx],0x3588d2ab
  42220f:	cmp    ch,BYTE PTR [edx-0x4787fd63]
  422215:	cmp    eax,0x4ca2fcee
  42221a:	adc    dh,BYTE PTR [edx+0x79]
  42221d:	push   edi
  42221e:	pop    eax
  42221f:	cmp    dh,BYTE PTR [eax+0x1b91466c]
  422225:	cmp    al,0xe0
  422227:	lock icebp 
  422229:	push   ebx
  42222a:	mov    cs,WORD PTR [ebx-0x485669e9]
  422230:	aam    0x97
  422232:	jae    0x42229f
  422234:	test   al,0xf7
  422236:	dec    ecx
  422237:	aam    0xc2
  422239:	stos   BYTE PTR es:[edi],al
  42223a:	stc    
  42223b:	sub    eax,DWORD PTR [edx-0x17db47a8]
  422241:	or     al,0x18
  422243:	div    BYTE PTR [ecx+0x6f7b47ad]
  422249:	shl    eax,cl
  42224b:	mov    ah,0xc5
  42224d:	stos   BYTE PTR es:[edi],al
  42224e:	cwde   
  42224f:	push   ss
  422250:	jne    0x4221d3
  422252:	sbb    ebp,DWORD PTR [edx-0x2f]
  422255:	daa    
  422256:	call   0x29d1:0xb950da31
  42225d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42225e:	push   0x886961c6
  422263:	xlat   BYTE PTR ds:[ebx]
  422264:	or     bh,bh
  422266:	inc    ebx
  422267:	cmp    al,0x31
  422269:	out    0x48,eax
  42226b:	sub    eax,0x8cef33f2
  422270:	scas   eax,DWORD PTR es:[edi]
  422271:	add    DWORD PTR [edi],esi
  422273:	pop    edx
  422274:	and    BYTE PTR [edi+0x42cbd4dc],bh
  42227a:	jns    0x42227b
  42227c:	push   esp
  42227d:	and    al,0x4d
  42227f:	(bad)
  422282:	mov    edi,0x1cdff892
  422287:	pop    eax
  422288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422289:	push   es
  42228a:	jmp    0x422214
  42228c:	arpl   WORD PTR [edx+0x73],ax
  42228f:	xchg   DWORD PTR [esi],ebp
  422291:	xor    ebp,DWORD PTR [eax]
  422293:	jecxz  0x4222b7
  422295:	push   ebx
  422296:	ror    DWORD PTR [ebp-0x5b],1
  422299:	add    al,0x5f
  42229b:	mov    al,ds:0x6acb6ca4
  4222a0:	sbb    BYTE PTR [edx+0x1e],bh
  4222a3:	add    eax,DWORD PTR [esi+0x767c8fa3]
  4222a9:	mov    esi,0x3900b7f8
  4222ae:	repz push esp
  4222b0:	add    edi,ebx
  4222b2:	sbb    cl,BYTE PTR [esi+0x1f]
  4222b5:	add    eax,0x80ebbe60
  4222ba:	dec    ebx
  4222bb:	push   esp
  4222bc:	sti    
  4222bd:	push   0x41708175
  4222c2:	repz add bh,dl
  4222c5:	pop    es
  4222c6:	mov    eax,0x22eb841f
  4222cb:	mov    eax,ds:0xcee724a3
  4222d0:	add    eax,0xa241fcd9
  4222d5:	xchg   ebp,eax
  4222d6:	out    0x6d,al
  4222d8:	lods   al,BYTE PTR ds:[esi]
  4222d9:	cmp    al,BYTE PTR [edx]
  4222db:	adc    eax,DWORD PTR [ebx+0x5a]
  4222de:	push   esi
  4222df:	sub    DWORD PTR [edi+0x46eab048],esp
  4222e5:	push   0x54
  4222e7:	shl    DWORD PTR [edi+0x4],0xee
  4222eb:	cwde   
  4222ec:	cwde   
  4222ed:	ret    0x7f49
  4222f0:	pop    eax
  4222f1:	popa   
  4222f2:	ret    0xb782
  4222f5:	imul   ecx,DWORD PTR [esi],0xd34f084f
  4222fb:	cmc    
  4222fc:	mov    al,BYTE PTR [ecx+0x4a]
  4222ff:	bound  esi,QWORD PTR [edi]
  422301:	ins    DWORD PTR es:[edi],dx
  422302:	inc    esi
  422303:	xor    al,0xc8
  422305:	mov    dh,BYTE PTR [ecx]
  422307:	push   es
  422308:	xchg   dl,ah
  42230a:	sbb    DWORD PTR [esi-0x14],0xffffffd6
  42230e:	(bad)  
  42230f:	fmul   DWORD PTR [esi-0x30354d48]
  422315:	pop    eax
  422316:	aam    0x72
  422318:	jmp    0x42236d
  42231a:	jge    0x42236c
  42231c:	push   eax
  42231d:	stc    
  42231e:	cmp    ebp,eax
  422320:	lods   eax,DWORD PTR ds:[esi]
  422321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422322:	(bad)  
  422323:	push   edi
  422324:	pop    ss
  422325:	lods   al,BYTE PTR ds:[esi]
  422326:	push   0xb92bc52b
  42232b:	cli    
  42232c:	inc    eax
  42232d:	jns    0x42233d
  42232f:	pop    ebp
  422330:	mov    ebx,DWORD PTR [esi-0x15f4ece4]
  422336:	sub    eax,DWORD PTR [esi-0x6e]
  422339:	or     eax,0xcbe6f6ab
  42233e:	xchg   edi,eax
  42233f:	out    0xf6,eax
  422341:	push   cs
  422342:	mov    cl,0xa9
  422344:	adc    eax,0xd63d2740
  422349:	mov    ebp,0xf81fd27b
  42234e:	pop    es
  42234f:	cld    
  422350:	add    BYTE PTR [eax],ch
  422352:	enter  0x304c,0x54
  422356:	and    esi,eax
  422358:	jnp    0x422341
  42235a:	lods   al,BYTE PTR ds:[esi]
  42235b:	xadd   BYTE PTR [ebx-0x66f4d5c4],al
  422362:	mov    bl,0x3f
  422364:	sbb    bh,BYTE PTR [edi-0x27ca98a5]
  42236a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236b:	jbe    0x4223db
  42236d:	mov    cl,0x5c
  42236f:	push   ss
  422370:	jb     0x4222f3
  422372:	xchg   edi,eax
  422373:	push   ss
  422374:	and    eax,0x43be6224
  422379:	test   eax,0x92971ef2
  42237e:	push   ebp
  42237f:	repz pop ebx
  422381:	lock and al,0x52
  422384:	jo     0x422357
  422386:	sbb    DWORD PTR [ecx+0x63d6bbfc],ecx
  42238c:	sbb    eax,0x84bda99a
  422391:	mov    ebp,0xc3b885fe
  422396:	bound  esp,QWORD PTR [ebx+0x13]
  422399:	adc    al,0x22
  42239b:	imul   edi,DWORD PTR [edi+ebx*4-0xd],0x5c513809
  4223a3:	mov    edi,0xe56bbc43
  4223a8:	ror    BYTE PTR [esi+0x7afaa73c],1
  4223ae:	retf   
  4223af:	jns    0x4223bd
  4223b1:	out    dx,al
  4223b2:	aad    0xa
  4223b4:	fisttp QWORD PTR [edi-0x42]
  4223b7:	mov    ch,0xbe
  4223b9:	loop   0x422357
  4223bb:	adc    DWORD PTR [eax],ebp
  4223bd:	adc    DWORD PTR [esi],ebp
  4223bf:	loope  0x4223e4
  4223c1:	nop
  4223c2:	cli    
  4223c3:	mov    ah,0xd6
  4223c5:	data16 es lahf 
  4223c8:	fnsave [esi+ebx*8-0x28]
  4223cc:	cmc    
  4223cd:	loop   0x42243b
  4223cf:	mov    dh,0x63
  4223d1:	push   cs
  4223d2:	test   BYTE PTR [edi-0x373ff62f],cl
  4223d8:	add    DWORD PTR [ecx+ecx*2-0x55],eax
  4223dc:	push   ebx
  4223dd:	mov    esp,DWORD PTR [eax+eax*2-0x4047a5df]
  4223e4:	push   ebp
  4223e5:	add    esi,edi
  4223e7:	ret    0xaf38
  4223ea:	outs   dx,BYTE PTR ds:[esi]
  4223eb:	mov    al,ds:0x9db8088b
  4223f0:	loopne 0x4223f4
  4223f2:	push   0x7866c8cc
  4223f7:	jno    0x4223c9
  4223f9:	and    al,0x93
  4223fb:	int3   
  4223fc:	sbb    al,0x62
  4223fe:	add    ecx,DWORD PTR [edi-0x3b]
  422401:	sub    BYTE PTR [ecx],bh
  422403:	and    cl,ah
  422405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422406:	pop    esi
  422407:	rcr    BYTE PTR [eax+0x4f5dd79a],0xfe
  42240e:	pop    ss
  42240f:	inc    edx
  422410:	and    edi,edx
  422412:	pop    ss
  422413:	sub    al,0xd5
  422415:	loopne 0x4223bc
  422417:	sbb    cl,BYTE PTR [esp+ebp*1-0x4b966646]
  42241e:	imul   edx,DWORD PTR [esi],0xffffffcd
  422421:	pop    DWORD PTR [ebx-0x6c619fe]
  422427:	pop    ebx
  422428:	sub    ebx,ebx
  42242a:	stos   DWORD PTR es:[edi],eax
  42242b:	jns    0x422428
  42242d:	pop    ebp
  42242e:	or     BYTE PTR [edx],bh
  422430:	xor    al,0xdb
  422432:	mov    BYTE PTR [ebp-0x45],bh
  422435:	pop    ebp
  422436:	fwait
  422437:	add    DWORD PTR [eax],eax
  422439:	clc    
  42243a:	add    al,0x0
  42243c:	add    cl,dh
  42243e:	mov    cl,0xa3
  422440:	cmp    DWORD PTR [eax],0x50e17602
  422446:	shl    BYTE PTR [edi+edx*2+0x24],1
  42244a:	jnp    0x42248c
  42244c:	imul   edx,DWORD PTR [ebp-0x2b],0xc16e2f44
  422453:	clc    
  422454:	scas   al,BYTE PTR es:[edi]
  422455:	pop    ecx
  422456:	pop    esp
  422457:	test   DWORD PTR [ebp+0x2e],ecx
  42245a:	mov    ds:0x7535b487,eax
  42245f:	jmp    0x422480
  422461:	or     DWORD PTR [esi],eax
  422463:	leave  
  422464:	addr16 inc esp
  422466:	(bad)  
  422467:	dec    ebp
  422468:	leave  
  422469:	xchg   esi,eax
  42246a:	adc    BYTE PTR [ecx],ah
  42246c:	ret    0x3446
  42246f:	xchg   ebp,eax
  422470:	cmp    esi,esi
  422472:	add    al,0xc2
  422474:	mov    ebx,0xb5457136
  422479:	push   ds
  42247a:	mov    ds:0xfcd497ca,al
  42247f:	xor    ebp,DWORD PTR [ecx+0x58]
  422482:	add    dl,BYTE PTR [ecx]
  422484:	(bad)  
  422485:	in     al,dx
  422486:	mov    esp,0xdc51353e
  42248b:	shl    BYTE PTR [ebx+0x13],1
  42248e:	mov    ebx,0xbb52a35f
  422493:	xor    BYTE PTR [ecx],ch
  422495:	(bad)  
  422496:	cmc    
  422497:	(bad)  
  422498:	lahf   
  422499:	jecxz  0x422516
  42249b:	mov    eax,ds:0x600d81ac
  4224a0:	call   0x43cd:0xa97cb068
  4224a7:	cwde   
  4224a8:	shl    DWORD PTR [ebx-0x71e96032],cl
  4224ae:	mov    esp,ecx
  4224b0:	pop    es
  4224b1:	lea    eax,ds:0x1d5c2ccd
  4224b7:	xor    BYTE PTR [edx],dh
  4224b9:	loopne 0x4224c2
  4224bb:	shl    edi,1
  4224bd:	xor    ebp,0x224e3469
  4224c3:	test   eax,0xff646ccc
  4224c8:	or     DWORD PTR [eax+0x7fb1155e],esp
  4224ce:	pop    edi
  4224cf:	xchg   edi,eax
  4224d0:	inc    ecx
  4224d1:	mov    edx,0x37e5efa2
  4224d6:	test   DWORD PTR [eax-0x49c61e08],edx
  4224dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224dd:	out    dx,eax
  4224de:	scas   al,BYTE PTR es:[edi]
  4224df:	or     ah,BYTE PTR [ebx+0x1]
  4224e2:	jle    0x42247a
  4224e4:	mov    ebx,0xf343e7b
  4224e9:	mov    edi,0xbdecd6
  4224ee:	jp     0x4224d3
  4224f0:	or     ecx,DWORD PTR [ecx-0x4e8d2127]
  4224f6:	inc    ecx
  4224f7:	aad    0x47
  4224f9:	and    ebp,DWORD PTR [esi+0x6d]
  4224fc:	xor    al,0x99
  4224fe:	push   ss
  4224ff:	push   ecx
  422500:	sti    
  422501:	sub    edx,DWORD PTR [ebp+0x172111c7]
  422507:	in     al,0x79
  422509:	dec    esp
  42250a:	pop    esi
  42250b:	rcr    ch,0x39
  42250e:	pop    edx
  42250f:	cmc    
  422510:	dec    edx
  422511:	mov    dh,0x8a
  422513:	clc    
  422514:	jb     0x422514
  422516:	rol    BYTE PTR [ebx],1
  422518:	addr16 xor al,0xe6
  42251b:	sar    ecx,1
  42251d:	dec    esi
  42251e:	jmp    FWORD PTR [esi-0xbc883fb]
  422524:	mov    ebp,DWORD PTR [esi+0x3a]
  422527:	pop    ds
  422528:	outs   dx,BYTE PTR ds:[esi]
  422529:	mov    ch,0x9d
  42252b:	sbb    dl,dh
  42252d:	dec    ebx
  42252e:	out    dx,eax
  42252f:	jbe    0x42258e
  422531:	(bad)  
  422532:	sar    BYTE PTR [ebx-0xf],1
  422535:	inc    edx
  422536:	pop    ebx
  422537:	add    al,0xe7
  422539:	sahf   
  42253a:	fcom   DWORD PTR [esi+0x54]
  42253d:	loopne 0x42259c
  42253f:	lea    ebx,[esi+edx*2]
  422542:	dec    edx
  422543:	cmpss  xmm6,xmm6,0x8e
  422548:	sbb    DWORD PTR [eax],0x76
  42254b:	ss js  0x422545
  42254e:	push   edx
  42254f:	mov    dl,0x5e
  422551:	loopne 0x422502
  422553:	std    
  422554:	add    DWORD PTR [eax],esp
  422556:	faddp  st(5),st
  422558:	test   BYTE PTR [ecx+0x76],al
  42255b:	or     DWORD PTR [edi-0x5949c52f],0xb37da69a
  422565:	or     BYTE PTR [eax+edx*8+0xce0507a],dl
  42256c:	fsub   QWORD PTR [eax+0x489c78f]
  422572:	sub    ecx,DWORD PTR ds:0x4323273
  422578:	stc    
  422579:	fmul   DWORD PTR [esp+eax*4]
  42257c:	pop    ebx
  42257d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42257e:	push   esp
  42257f:	xchg   edx,eax
  422580:	push   0xab9e06f3
  422585:	push   esp
  422586:	arpl   bx,di
  422588:	sub    al,0x81
  42258a:	ret    0x66be
  42258d:	add    ecx,DWORD PTR [ebx+0x6229556b]
  422593:	bound  esp,QWORD PTR [ecx-0xb]
  422596:	add    esi,DWORD PTR [ebp+edx*2+0x7b4a20d]
  42259d:	retf   0x65b8
  4225a0:	nop
  4225a1:	mov    eax,ds:0x84fa050d
  4225a6:	cli    
  4225a7:	add    esp,DWORD PTR [edx-0x4a]
  4225aa:	ja     0x4225f2
  4225ac:	pop    ebx
  4225ad:	nop
  4225ae:	outs   dx,BYTE PTR ds:[esi]
  4225af:	out    dx,eax
  4225b0:	inc    ecx
  4225b1:	dec    ebp
  4225b2:	mov    bh,0x7e
  4225b4:	aad    0x42
  4225b6:	mov    ds:0xef46b258,eax
  4225bb:	or     BYTE PTR [ecx+ebp*8],ch
  4225be:	mov    ebx,0xebdfc9a4
  4225c3:	mov    bl,0x16
  4225c5:	jnp    0x4225cf
  4225c7:	jp     0x4225ac
  4225c9:	js     0x422577
  4225cb:	push   esi
  4225cc:	add    esi,DWORD PTR [esi-0x69]
  4225cf:	lods   eax,DWORD PTR ds:[esi]
  4225d0:	ja     0x422582
  4225d2:	pop    ds
  4225d3:	fcom   QWORD PTR [ecx-0x75a0940a]
  4225d9:	hlt    
  4225da:	inc    edx
  4225db:	add    eax,0xf0af1e9c
  4225e0:	(bad)  
  4225e1:	sbb    ebp,DWORD PTR [ebp+0x319cda1d]
  4225e7:	call   0xe671:0x24d460eb
  4225ee:	imul   ecx,ecx,0x773318d2
  4225f4:	push   ebp
  4225f5:	sub    eax,0xa2c82f6b
  4225fa:	push   edx
  4225fb:	nop
  4225fc:	push   0xa774e652
  422601:	in     eax,dx
  422602:	add    eax,0x674fe54
  422607:	repz jno 0x422643
  42260a:	jb     0x422609
  42260c:	int    0x29
  42260e:	mov    ebx,0x34cf7ba4
  422613:	push   ebx
  422614:	into   
  422615:	psubusb mm6,QWORD PTR [esi+0x1]
  422619:	add    eax,0x26c02574
  42261e:	sahf   
  42261f:	mov    ds:0xd6be200c,eax
  422624:	in     eax,dx
  422625:	leave  
  422626:	div    DWORD PTR [ecx-0x20]
  422629:	mov    edx,0x16f4760d
  42262e:	aaa    
  42262f:	push   eax
  422630:	mul    esi
  422632:	cmp    eax,0xcb35a9b7
  422637:	sub    DWORD PTR [ecx],0x9b5a0200
  42263d:	outs   dx,DWORD PTR ds:[esi]
  42263e:	sbb    edx,DWORD PTR [edi]
  422640:	and    BYTE PTR [esi],bh
  422642:	shr    ebx,0xf9
  422645:	add    BYTE PTR [edx+0x29d92265],al
  42264b:	imul   eax,DWORD PTR [ebx],0x7587d7f8
  422651:	fidiv  WORD PTR [eax+0x40]
  422654:	sub    al,0xca
  422656:	and    ah,BYTE PTR [eax]
  422658:	fild   QWORD PTR [ebx+0x57]
  42265b:	aad    0xee
  42265d:	add    DWORD PTR [ecx-0xf],esi
  422660:	mov    bh,0x85
  422662:	push   ebp
  422663:	inc    edi
  422664:	dec    esp
  422665:	mov    edi,0x3620a0ba
  42266a:	lock pop esi
  42266c:	cmp    DWORD PTR [ecx],edi
  42266e:	push   0xc32a823f
  422673:	(bad)  [eax-0x47]
  422676:	mov    eax,0x329bed82
  42267b:	push   esp
  42267c:	ret    
  42267d:	mov    bl,0x3b
  42267f:	mov    edi,0xbdee7ea
  422684:	xor    al,0xd1
  422686:	int    0x3
  422688:	xchg   bl,ah
  42268a:	ja     0x422693
  42268c:	sbb    ecx,ecx
  42268e:	pop    ebx
  42268f:	sar    dh,cl
  422691:	push   edi
  422692:	ds stc 
  422694:	loopne 0x4226b6
  422696:	in     al,dx
  422697:	and    eax,0xb26bb780
  42269c:	and    DWORD PTR [eax+0x2ac04167],ebx
  4226a2:	imul   ebp,DWORD PTR [edi-0x6b0a2c0d],0x4aa0bc67
  4226ac:	jge    0x422675
  4226ae:	xchg   edi,eax
  4226af:	mov    ah,0xb
  4226b1:	dec    ebp
  4226b2:	test   BYTE PTR [esi-0x2fcb7e48],bl
  4226b8:	mov    bl,0x1a
  4226ba:	add    ebx,DWORD PTR [esi+ebp*8]
  4226bd:	xchg   ebp,eax
  4226be:	ficomp DWORD PTR [eax+0x5d]
  4226c1:	js     0x422691
  4226c3:	xchg   esi,eax
  4226c4:	fisubr WORD PTR [edx]
  4226c6:	or     ah,bh
  4226c8:	dec    edx
  4226c9:	pop    edi
  4226ca:	in     al,0x84
  4226cc:	jg     0x42274d
  4226ce:	(bad)  
  4226cf:	pop    ds
  4226d0:	add    DWORD PTR [esi],0xf
  4226d3:	xchg   edi,eax
  4226d4:	push   ecx
  4226d5:	retf   
  4226d6:	mov    esi,gs
  4226d8:	inc    ecx
  4226d9:	push   ds
  4226da:	in     al,0xea
  4226dc:	in     eax,0x1
  4226de:	in     eax,0xf0
  4226e0:	test   DWORD PTR [ebp+0x216c1e3d],esp
  4226e6:	dec    edi
  4226e7:	add    ebx,0x2d
  4226ea:	enter  0xe818,0x36
  4226ee:	dec    esi
  4226ef:	(bad)  
  4226f0:	out    0xca,al
  4226f2:	repnz sub ebp,eax
  4226f5:	jns    0x422759
  4226f7:	and    DWORD PTR [ebp-0x67],esi
  4226fa:	retf   
  4226fb:	lods   eax,DWORD PTR ds:[esi]
  4226fc:	push   ds
  4226fd:	(bad)  
  4226fe:	sti    
  4226ff:	inc    edx
  422700:	mov    ecx,0xe21523df
  422705:	dec    ebp
  422706:	add    BYTE PTR [eax+edx*1],ch
  422709:	inc    ebx
  42270a:	mov    al,BYTE PTR [ebx+0x1e20be60]
  422710:	cs xchg ecx,esp
  422713:	jmp    0x5f8bc353
  422718:	sbb    eax,0x40a005
  42271d:	data16 sub al,0x3b
  422720:	cmc    
  422721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422722:	push   edx
  422723:	mov    esp,0xc97176eb
  422728:	sub    eax,0x30afd15b
  42272d:	jns    0x42270b
  42272f:	jecxz  0x422769
  422731:	sbb    ecx,DWORD PTR [edx+ebp*1+0xd]
  422735:	inc    ebx
  422736:	dec    edx
  422737:	je     0x4226ff
  422739:	xchg   ebx,eax
  42273a:	mov    al,ds:0x28059926
  42273f:	loope  0x422763
  422741:	mov    ch,BYTE PTR [edi+edx*1]
  422744:	adc    DWORD PTR [ebx+0xc20ffef],edi
  42274a:	inc    ebp
  42274b:	dec    edx
  42274c:	xchg   edx,eax
  42274d:	jge    0x422767
  42274f:	jmp    0x42274b
  422751:	(bad)  
  422752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422753:	bound  ebp,QWORD PTR [edx]
  422755:	ja     0x4227cf
  422757:	xor    bl,bl
  422759:	test   BYTE PTR [ebx+0x38],bh
  42275c:	jmp    0x4227ad
  42275e:	jo     0x422766
  422760:	and    ebp,edi
  422762:	popf   
  422763:	push   ecx
  422764:	add    eax,0x87512ee4
  422769:	jbe    0x422720
  42276b:	pop    ecx
  42276c:	pop    esi
  42276d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42276e:	ins    BYTE PTR es:[edi],dx
  42276f:	fcom   DWORD PTR [esi]
  422771:	mov    DWORD PTR [ebp+0x49a1756],ebp
  422777:	call   0x2cf569bb
  42277c:	sbb    al,0x1f
  42277e:	test   al,0x9
  422780:	xchg   esi,eax
  422781:	mov    cl,0xaf
  422783:	out    0x73,al
  422785:	out    dx,eax
  422786:	xchg   ah,bl
  422788:	sub    BYTE PTR [edi+0x49],dh
  42278b:	xor    dh,BYTE PTR [edi-0x4244ae6a]
  422791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422792:	in     al,dx
  422793:	pushaw 
  422795:	inc    eax
  422796:	call   0x9c9a0804
  42279b:	push   ebp
  42279c:	pop    esp
  42279d:	loopne 0x4227e9
  42279f:	loopne 0x422800
  4227a1:	in     al,0x3f
  4227a3:	dec    edx
  4227a4:	add    al,0x14
  4227a6:	test   eax,0x66103de5
  4227ab:	test   ebp,edx
  4227ad:	aas    
  4227ae:	mov    cs,WORD PTR [edi-0x6e7d4263]
  4227b4:	iret   
  4227b5:	ret    
  4227b6:	jg     0x422770
  4227b8:	stos   DWORD PTR es:[edi],eax
  4227b9:	jno    0x422759
  4227bb:	xor    esp,edx
  4227bd:	pop    edx
  4227be:	icebp  
  4227bf:	add    cl,BYTE PTR [ebx+0x5e129c01]
  4227c5:	rcr    DWORD PTR [esi+eax*1+0x49829d8c],0x3c
  4227cd:	jbe    0x4227b1
  4227cf:	push   ecx
  4227d1:	enter  0x88a6,0x6b
  4227d5:	fs push edi
  4227d7:	cmp    al,0xba
  4227d9:	add    ah,0x57
  4227dc:	rcl    BYTE PTR [esi+0x19],0x16
  4227e0:	(bad)  
  4227e1:	aad    0x31
  4227e3:	ret    
  4227e4:	inc    esp
  4227e5:	sub    dh,dl
  4227e7:	in     al,0xe0
  4227e9:	mov    es,WORD PTR [edx]
  4227eb:	jno    0x42285f
  4227ed:	mov    dl,0xec
  4227ef:	lods   eax,DWORD PTR ds:[esi]
  4227f0:	mov    ch,0x16
  4227f2:	push   esp
  4227f3:	stos   DWORD PTR es:[edi],eax
  4227f4:	aad    0x97
  4227f6:	(bad)  
  4227f7:	dec    esi
  4227f8:	pop    esi
  4227f9:	xor    eax,0xffa53544
  4227fe:	push   0x7
  422800:	inc    esi
  422801:	xor    DWORD PTR [ebp+edx*4+0x5a198dba],esp
  422808:	push   esp
  422809:	sar    DWORD PTR [ebp-0x1c7f704f],0x71
  422810:	mov    esp,0xce1ce6e6
  422815:	in     al,0x56
  422817:	pusha  
  422818:	call   DWORD PTR [ecx]
  42281a:	rcl    DWORD PTR [esi+0x58],1
  42281d:	aad    0xe2
  42281f:	adc    bl,BYTE PTR ds:0x753b355e
  422825:	push   esp
  422826:	arpl   ax,sp
  422828:	jmp    0x422874
  42282a:	sub    eax,0xae122fa
  42282f:	and    DWORD PTR [ebx+0x16700706],0x35be7489
  422839:	shl    DWORD PTR [ecx-0x6e],cl
  42283c:	icebp  
  42283d:	rcl    BYTE PTR [ebp+0x3ce13ef1],cl
  422843:	inc    ebp
  422844:	sbb    esi,DWORD PTR [ebp+0x57108801]
  42284a:	ja     0x4228a8
  42284c:	ror    DWORD PTR [edx-0x69],1
  42284f:	out    0x53,al
  422851:	imul   ebp,ebp,0x70
  422854:	jle    0x42289b
  422856:	or     bh,BYTE PTR [ecx]
  422858:	scas   al,BYTE PTR es:[edi]
  422859:	outs   dx,BYTE PTR ds:[esi]
  42285a:	inc    edx
  42285b:	push   ss
  42285c:	pop    esp
  42285d:	push   ss
  42285e:	ss repnz cli 
  422861:	jo     0x42283a
  422863:	addr16 inc ebx
  422865:	xor    esp,edx
  422867:	test   al,0xf8
  422869:	call   0xa8d1:0x5a7b24b7
  422870:	jnp    0x4227f5
  422872:	aad    0x66
  422874:	add    al,0x2f
  422876:	jbe    0x42288e
  422878:	imul   BYTE PTR [ecx+0x7751f5fe]
  42287e:	dec    ebx
  42287f:	or     al,0x45
  422881:	jno    0x42288e
  422883:	cmp    al,0x6
  422885:	adc    eax,ebp
  422887:	sub    DWORD PTR [edx-0x7d],edi
  42288a:	fist   WORD PTR [esi]
  42288c:	mov    eax,0xa7004625
  422891:	outs   dx,BYTE PTR ds:[esi]
  422892:	sti    
  422893:	or     DWORD PTR [ecx+0x27],edx
  422896:	ins    BYTE PTR es:[edi],dx
  422897:	and    esi,0x20
  42289a:	mov    cl,0xef
  42289c:	int    0xba
  42289e:	jno    0x422914
  4228a0:	mov    dl,0x54
  4228a2:	xor    DWORD PTR [edi-0x76ad3dcc],edi
  4228a8:	push   esi
  4228a9:	sub    eax,0x3e65e598
  4228ae:	js     0x42284f
  4228b0:	dec    eax
  4228b1:	sub    esi,DWORD PTR [ebx+0x63]
  4228b4:	mov    al,0x5f
  4228b6:	stc    
  4228b7:	test   ch,dl
  4228b9:	cwde   
  4228ba:	push   ds
  4228bb:	lods   eax,DWORD PTR ds:[esi]
  4228bc:	data16 jecxz 0x4228c2
  4228bf:	scas   eax,DWORD PTR es:[edi]
  4228c0:	cwde   
  4228c1:	inc    esp
  4228c2:	pop    es
  4228c3:	(bad)  
  4228c4:	arpl   WORD PTR [ebx],di
  4228c6:	pop    edi
  4228c7:	jle    0x422877
  4228c9:	int    0xbe
  4228cb:	cmc    
  4228cc:	into   
  4228cd:	jle    0x4228af
  4228cf:	imul   edx,DWORD PTR [esi-0x3],0xfffffff0
  4228d3:	lods   eax,DWORD PTR ds:[esi]
  4228d4:	mov    ds:0x7088899,al
  4228d9:	push   ebp
  4228da:	sahf   
  4228db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228dc:	and    DWORD PTR ds:0xdcc32f47,eax
  4228e2:	mov    eax,ds:0xa1e6c4a2
  4228e7:	js     0x4228a2
  4228e9:	jp     0x4228e1
  4228eb:	pop    esp
  4228ec:	test   DWORD PTR [esi],ecx
  4228ee:	jecxz  0x422880
  4228f0:	xlat   BYTE PTR ds:[bx]
  4228f2:	adc    al,al
  4228f4:	repz mov dl,0x69
  4228f7:	imul   ebp,DWORD PTR [edi+0x7fe3775],0x40c3cd8
  422901:	xchg   DWORD PTR [eax],ebp
  422903:	pusha  
  422904:	xchg   esi,eax
  422905:	pop    ecx
  422906:	test   ch,dh
  422908:	imul   ebp,DWORD PTR [edi],0x7c104a11
  42290e:	push   esp
  42290f:	sahf   
  422910:	cwde   
  422911:	jmp    0x98a5079f
  422916:	rcl    BYTE PTR [ebx+0x53a0dc68],cl
  42291c:	and    BYTE PTR [ebx+0x73],al
  42291f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422921:	inc    esp
  422922:	inc    edx
  422923:	sub    DWORD PTR [esi+0x1f104e12],ebx
  422929:	mov    ds:0x13f53e1c,al
  42292e:	inc    ebx
  42292f:	pop    es
  422930:	jmp    DWORD PTR [edx-0x35ff56fc]
  422936:	adc    al,0x69
  422938:	dec    ecx
  422939:	(bad)  
  42293a:	jge    0x422926
  42293c:	xchg   edi,eax
  42293d:	mov    dl,0x28
  42293f:	test   BYTE PTR [edx-0x2],bl
  422942:	cld    
  422943:	mov    dh,0x6f
  422945:	push   ebp
  422946:	mov    al,ds:0x4f80001
  42294b:	add    BYTE PTR [eax],al
  42294d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42294e:	mov    edx,0xfa801364
  422953:	add    dh,BYTE PTR [esi-0x4c830a1e]
  422959:	sbb    BYTE PTR [edi-0xa],dl
  42295c:	outs   dx,BYTE PTR ds:[esi]
  42295d:	jp     0x4229cc
  42295f:	jmp    0x970a:0x52d45aec
  422966:	outs   dx,BYTE PTR ds:[esi]
  422967:	daa    
  422968:	xchg   edx,eax
  422969:	lahf   
  42296a:	ins    BYTE PTR es:[edi],dx
  42296b:	xor    eax,0xde50a428
  422970:	repnz mov ebp,0xbbb8e659
  422976:	hlt    
  422977:	add    al,0x48
  422979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42297a:	sti    
  42297b:	(bad)  
  42297c:	mov    esi,0x4f4f06e1
  422981:	push   ds
  422982:	xchg   ebp,eax
  422983:	add    ah,BYTE PTR [ecx+0x14]
  422986:	xchg   esp,eax
  422987:	mov    dx,0x5d07
  42298b:	gs stos BYTE PTR es:[edi],al
  42298d:	repz aad 0xdb
  422990:	mov    bl,0x6f
  422992:	das    
  422993:	inc    ecx
  422994:	ss fwait
  422996:	(bad)  
  422997:	xlat   BYTE PTR ds:[ebx]
  422998:	mov    ebx,0x22ffc3cd
  42299d:	sub    ebp,edx
  42299f:	push   ss
  4229a0:	mov    edi,0x1bc2337d
  4229a5:	sub    BYTE PTR [esi],ch
  4229a7:	rol    BYTE PTR ds:0x14dc0078,0xac
  4229ae:	xor    bh,BYTE PTR [ebx]
  4229b0:	add    DWORD PTR [ebx+0x7a],0x514ea221
  4229b7:	inc    esp
  4229b8:	sbb    BYTE PTR [edx-0x5c],ah
  4229bb:	mov    eax,ds:0xc32153ac
  4229c0:	or     eax,0xeb00c952
  4229c5:	mov    edx,0x1bcbd193
  4229ca:	pop    ebx
  4229cb:	test   DWORD PTR ds:0xd9b7df9,0xd53ede30
  4229d5:	loope  0x422a2d
  4229d7:	int3   
  4229d8:	push   eax
  4229d9:	icebp  
  4229da:	adc    dh,BYTE PTR [esi-0x17]
  4229dd:	xor    DWORD PTR [eax+ebx*1],ebx
  4229e0:	fwait
  4229e1:	lahf   
  4229e2:	adc    bh,BYTE PTR es:[ebp-0x5a]
  4229e6:	lahf   
  4229e7:	xchg   edx,eax
  4229e8:	push   ds
  4229e9:	repnz inc edx
  4229eb:	das    
  4229ec:	lods   eax,DWORD PTR ds:[esi]
  4229ed:	push   0x7a
  4229ef:	loope  0x4229f0
  4229f1:	les    esi,FWORD PTR [eax+0x4377d985]
  4229f7:	test   al,0x9d
  4229f9:	shr    DWORD PTR ds:[ebp*8+0x3d1d35f3],1
  422a01:	dec    edx
  422a02:	(bad)  
  422a03:	enter  0x9f18,0x20
  422a07:	bound  eax,QWORD PTR [eax+eiz*1+0x0]
  422a0b:	ss jp  0x422a4c
  422a0e:	addr16 js 0x422a75
  422a11:	mov    al,ds:0x5e406f2f
  422a16:	add    BYTE PTR [esi-0x2eff4113],0x38
  422a1d:	adc    eax,0x6077039
  422a22:	or     DWORD PTR [ebp+0x34],esp
  422a25:	mov    ah,0x91
  422a27:	pop    eax
  422a28:	sub    eax,ebx
  422a2a:	add    BYTE PTR ds:0xe1536031,bh
  422a30:	das    
  422a31:	adc    al,0xec
  422a33:	stc    
  422a34:	mov    bl,0xd0
  422a36:	mov    edi,0xeedf5bea
  422a3b:	out    0x84,al
  422a3d:	icebp  
  422a3e:	ins    BYTE PTR es:[edi],dx
  422a3f:	shl    BYTE PTR ds:0xbd0acf87,cl
  422a45:	xchg   ebp,eax
  422a46:	jecxz  0x422a5a
  422a48:	xchg   DWORD PTR [edx+ebp*2-0x64a7914a],edx
  422a4f:	shl    BYTE PTR [edx+0x3a],0x83
  422a53:	jmp    0x422a7a
  422a55:	sub    al,0xd3
  422a57:	fdivr  QWORD PTR [esi-0x44]
  422a5a:	cmc    
  422a5b:	fild   WORD PTR [ebx+0x3c6b654f]
  422a61:	jno    0x422abf
  422a63:	leave  
  422a64:	add    ah,bl
  422a66:	loopne 0x422ab6
  422a68:	pop    ss
  422a69:	lods   eax,DWORD PTR ds:[esi]
  422a6a:	push   esp
  422a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a6c:	mov    edx,0xc782d4d
  422a71:	cmp    eax,0xd95e5399
  422a76:	jbe    0x422ac3
  422a78:	adc    eax,0xee8fbb59
  422a7d:	sub    dl,BYTE PTR ss:[ebx]
  422a80:	inc    eax
  422a81:	sbb    bl,BYTE PTR ds:0x79c45827
  422a87:	mov    dl,0x80
  422a89:	outs   dx,BYTE PTR ds:[esi]
  422a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a8b:	mov    esi,0x545b05ff
  422a90:	pop    ds
  422a91:	xchg   ecx,eax
  422a92:	rcr    DWORD PTR [edx],0xd4
  422a95:	js     0x422a5a
  422a97:	pop    es
  422a98:	dec    esp
  422a99:	dec    eax
  422a9a:	jb     0x422a3a
  422a9c:	sbb    eax,0xec83b18f
  422aa1:	pop    esi
  422aa2:	mov    WORD PTR [ebp-0x3c],ds
  422aa5:	(bad)  
  422aa6:	ret    0x60a8
  422aa9:	xor    DWORD PTR [ebx+0x70],ebx
  422aac:	xchg   ebx,eax
  422aad:	lods   al,BYTE PTR ds:[esi]
  422aae:	pop    ecx
  422aaf:	retf   0x22f3
  422ab2:	mov    edi,0x51881ac
  422ab7:	fsub   QWORD PTR [ebp-0x74fd8c24]
  422abd:	jae    0x422a6c
  422abf:	xchg   esp,eax
  422ac0:	rcl    DWORD PTR [edi],1
  422ac2:	mov    al,0x2a
  422ac4:	push   esi
  422ac5:	sbb    cl,cl
  422ac7:	jl     0x422ac4
  422ac9:	out    dx,al
  422aca:	jo     0x422b4a
  422acc:	int3   
  422acd:	add    eax,0x8626680d
  422ad2:	out    dx,al
  422ad3:	and    DWORD PTR [edi-0x5cde4882],0xaad71040
  422add:	sbb    eax,0x5203773a
  422ae2:	and    BYTE PTR [ebp-0x11],ch
  422ae5:	cmp    dl,BYTE PTR [esi+0x27]
  422ae8:	dec    esi
  422ae9:	pop    ebx
  422aea:	push   edx
  422aeb:	jo     0x422b43
  422aed:	shr    BYTE PTR [esp+eax*4+0x42883adb],1
  422af4:	push   esp
  422af5:	push   esp
  422af6:	jb     0x422ac9
  422af8:	adc    bl,dh
  422afa:	shrd   DWORD PTR [edi],ecx,cl
  422afd:	and    BYTE PTR [edi],bh
  422aff:	push   0xffffff81
  422b01:	mov    al,ds:0xdf29f70d
  422b06:	fiadd  DWORD PTR [ecx]
  422b08:	pop    ds
  422b09:	pop    ss
  422b0a:	lds    edx,FWORD PTR [ebp+0x361ef791]
  422b10:	adc    al,0x20
  422b12:	aad    0xb8
  422b14:	mov    DWORD PTR [eax],esi
  422b16:	ror    DWORD PTR [ebx-0x6],0x59
  422b1a:	push   0x49
  422b1c:	and    edi,DWORD PTR [esi+esi*1-0x334d8c98]
  422b23:	add    al,0xa5
  422b25:	dec    edi
  422b26:	push   ecx
  422b27:	ficomp DWORD PTR [ecx-0x727b2121]
  422b2d:	pushf  
  422b2e:	dec    ecx
  422b2f:	test   DWORD PTR [esi],ebx
  422b31:	push   0xffffffc7
  422b33:	xor    dl,BYTE PTR [eax+0x6b598104]
  422b39:	pop    esp
  422b3a:	mov    ds:0x5ab4bdec,al
  422b3f:	adc    DWORD PTR [eax-0x4b],ebx
  422b42:	mov    ecx,0xd0ef40b3
  422b47:	in     eax,0x3b
  422b49:	lock push es
  422b4b:	mov    dl,0x85
  422b4d:	sub    al,0x3d
  422b4f:	sub    DWORD PTR [edi],ebp
  422b51:	ins    BYTE PTR es:[edi],dx
  422b52:	sbb    BYTE PTR [edx],dh
  422b54:	push   0x5246be43
  422b59:	dec    edx
  422b5a:	push   ds
  422b5b:	cmp    esi,DWORD PTR [ebx+0x21]
  422b5e:	cdq    
  422b5f:	jo     0x422b37
  422b61:	leave  
  422b62:	ins    DWORD PTR es:[edi],dx
  422b63:	add    al,0x9e
  422b65:	dec    ebx
  422b66:	int    0x6e
  422b68:	push   edi
  422b69:	in     eax,0x2a
  422b6b:	lds    esi,FWORD PTR [edx+0x237db9ac]
  422b71:	inc    eax
  422b72:	or     al,0x38
  422b74:	xor    BYTE PTR [ebx],dh
  422b76:	inc    ecx
  422b77:	push   ebp
  422b78:	sub    ah,bh
  422b7a:	mov    eax,0x1629895d
  422b7f:	rcl    dl,cl
  422b81:	jb     0x422bcd
  422b83:	ja     0x422b8d
  422b85:	mov    ch,0x16
  422b87:	popa   
  422b88:	call   0x9949:0xde3593cf
  422b8f:	add    eax,0x16415129
  422b94:	xor    bh,dl
  422b96:	pop    es
  422b97:	jae    0x422b92
  422b99:	and    al,0x14
  422b9b:	mov    dh,0x7e
  422b9d:	mov    ds:0x9685d80d,al
  422ba2:	sub    al,0x92
  422ba4:	sar    DWORD PTR [ecx+0x795268d7],0xac
  422bab:	addr16 push esi
  422bad:	popf   
  422bae:	inc    esi
  422baf:	sbb    eax,0xf843a60c
  422bb4:	fist   DWORD PTR [eax]
  422bb6:	test   edx,0x2b90c55e
  422bbc:	and    BYTE PTR [eax+0x6b1b84ea],bh
  422bc2:	jg     0x422b60
  422bc4:	test   eax,0xfa73efa5
  422bc9:	pop    ebp
  422bca:	mov    bh,0x47
  422bcc:	ror    DWORD PTR [esi],0x93
  422bcf:	into   
  422bd0:	mov    ds:0x38bda4ba,eax
  422bd5:	popf   
  422bd6:	adc    DWORD PTR [ecx-0x2d],edx
  422bd9:	jge    0x422be2
  422bdb:	dec    edi
  422bdc:	push   ss
  422bdd:	in     al,dx
  422bde:	pop    es
  422bdf:	mov    BYTE PTR [edx],dh
  422be1:	cmp    cl,BYTE PTR [eax+0x185bb589]
  422be7:	sbb    al,BYTE PTR [ecx+0x5a]
  422bea:	lock xchg ebp,eax
  422bec:	jmp    0x5f7e67ab
  422bf1:	mov    BYTE PTR ds:0x5057936c,0x49
  422bf8:	fisubr DWORD PTR [edx-0x2afd758a]
  422bfe:	xchg   esp,eax
  422bff:	mov    cl,0xeb
  422c01:	(bad)  
  422c02:	cmp    dh,BYTE PTR [edi]
  422c04:	ins    DWORD PTR es:[edi],dx
  422c05:	inc    eax
  422c06:	aaa    
  422c07:	mov    dl,0x4f
  422c09:	lock ja 0x422c3b
  422c0c:	pop    es
  422c0d:	jecxz  0x422be0
  422c0f:	inc    esp
  422c10:	ret    
  422c11:	mov    al,0x4d
  422c13:	add    BYTE PTR [eax],bh
  422c15:	loope  0x422b9b
  422c17:	adc    BYTE PTR [ecx],dl
  422c19:	addr16 repz cmp al,0xf7
  422c1d:	xchg   esi,eax
  422c1e:	and    DWORD PTR [edi+eiz*4],ecx
  422c21:	retf   0xa11
  422c24:	dec    ecx
  422c25:	mov    ch,0x5f
  422c27:	fisubr DWORD PTR [ecx+ebp*2]
  422c2a:	pop    edx
  422c2b:	lods   al,BYTE PTR ds:[esi]
  422c2c:	dec    edx
  422c2d:	sbb    DWORD PTR [ecx],esi
  422c2f:	ret    0xca91
  422c32:	idiv   DWORD PTR [ebp-0x55]
  422c35:	pop    edi
  422c36:	cwde   
  422c37:	or     cl,0xf8
  422c3a:	cmc    
  422c3b:	fadd   st,st(7)
  422c3d:	stos   BYTE PTR es:[edi],al
  422c3e:	data16 arpl WORD PTR [ebp+0x2d],ax
  422c42:	iret   
  422c43:	and    dh,BYTE PTR [ebx]
  422c45:	mov    bl,0xf2
  422c47:	nop
  422c48:	daa    
  422c49:	cdq    
  422c4a:	inc    eax
  422c4b:	cli    
  422c4c:	arpl   sp,sp
  422c4e:	cmp    BYTE PTR [esi+0x7f388e92],bl
  422c54:	popf   
  422c55:	mov    eax,DWORD PTR ds:0x510e9340
  422c5b:	jge    0x422caa
  422c5d:	inc    ebp
  422c5e:	add    edi,DWORD PTR [edx-0x5c]
  422c61:	cmp    al,0x3c
  422c63:	mov    eax,0xf6b8d16f
  422c68:	ror    DWORD PTR [eax+0x3ae2c3fa],cl
  422c6e:	add    al,0x6e
  422c70:	or     esp,DWORD PTR [esi-0x5d]
  422c73:	rol    DWORD PTR [bp+di+0x3],cl
  422c77:	lock mov ds:0xc5bcabcf,al
  422c7d:	(bad)  
  422c7e:	adc    BYTE PTR ds:0xf261892e,cl
  422c84:	scas   eax,DWORD PTR es:[edi]
  422c85:	ds push 0xffffff9b
  422c88:	enter  0x3d55,0xca
  422c8c:	dec    edx
  422c8d:	cs dec ebp
  422c8f:	and    ebx,DWORD PTR [ecx]
  422c91:	sbb    ecx,DWORD PTR [ebp-0x16]
  422c94:	jp     0x422c57
  422c96:	mov    fs:0x6cf5ea8,eax
  422c9c:	int3   
  422c9d:	push   esp
  422c9e:	cs sub cl,bh
  422ca1:	and    al,0xe4
  422ca3:	push   ds
  422ca4:	(bad)  
  422ca5:	into   
  422ca6:	out    0x9f,al
  422ca8:	mov    ah,0x73
  422caa:	xchg   ebp,eax
  422cab:	sub    al,0xfa
  422cad:	dec    esi
  422cae:	xchg   DWORD PTR [ebx-0x13],ebp
  422cb1:	xlat   BYTE PTR ds:[ebx]
  422cb2:	mov    eax,ds:0x96a4fdde
  422cb7:	out    0x39,eax
  422cb9:	lods   eax,DWORD PTR ds:[esi]
  422cba:	xchg   esi,eax
  422cbb:	cmp    eax,0xcf2ceed2
  422cc0:	cmp    dl,BYTE PTR [eax+0x4eb05d56]
  422cc6:	outs   dx,DWORD PTR ds:[esi]
  422cc7:	adc    BYTE PTR [esi+0xca64ae2],cl
  422ccd:	popa   
  422cce:	xor    al,0xc9
  422cd0:	bnd jbe 0x422cc7
  422cd3:	cli    
  422cd4:	mov    ecx,0xc936bb9c
  422cd9:	fbstp  TBYTE PTR [ebx+ebx*4+0x3b]
  422cdd:	(bad)  
  422cde:	cmp    al,0x93
  422ce0:	add    edi,DWORD PTR ds:0x75efe64d
  422ce6:	mov    ch,0x0
  422ce8:	in     al,0xd
  422cea:	frstor [eax-0x15e89644]
  422cf0:	xchg   edi,eax
  422cf1:	xlat   BYTE PTR ds:[ebx]
  422cf2:	lea    ebp,[ecx+0x7a8a956b]
  422cf8:	loop   0x422cb4
  422cfa:	rcl    ebx,1
  422cfc:	enter  0xbf60,0xf5
  422d00:	adc    al,0x46
  422d02:	jle    0x422ce2
  422d04:	test   ch,bh
  422d06:	pop    es
  422d07:	sbb    DWORD PTR [ebx],esi
  422d09:	mov    eax,ebp
  422d0b:	mov    al,0xf9
  422d0d:	add    eax,0xf6ec8f11
  422d12:	mov    bl,0x1c
  422d14:	jecxz  0x422d36
  422d16:	mov    dl,BYTE PTR [ecx]
  422d18:	or     al,0x4e
  422d1a:	cmp    ecx,DWORD PTR [ebp+0x7f]
  422d1d:	mov    bh,0x3f
  422d1f:	call   0x4aea:0x58093c1f
  422d26:	les    ebp,FWORD PTR es:[edx+0x61]
  422d2a:	pop    ax
  422d2c:	jb     0x422cf2
  422d2e:	sub    ebp,esp
  422d30:	stc    
  422d31:	push   esi
  422d32:	scas   eax,DWORD PTR es:[edi]
  422d33:	(bad)  
  422d34:	punpckhbw mm5,mm5
  422d37:	pushf  
  422d38:	test   DWORD PTR [ebp-0x2499f291],esp
  422d3e:	jnp    0x422db0
  422d40:	push   0x35
  422d42:	pop    ds
  422d43:	out    0x97,al
  422d45:	add    BYTE PTR [eax+0x3b],dl
  422d48:	scas   eax,DWORD PTR es:[edi]
  422d49:	(bad)  
  422d4a:	push   ecx
  422d4b:	(bad)  
  422d4c:	sub    dh,BYTE PTR ds:0x8377593a
  422d52:	dec    edi
  422d53:	pop    esi
  422d54:	sub    DWORD PTR ds:0x53c074b5,0x74bfce67
  422d5e:	stos   DWORD PTR es:[edi],eax
  422d5f:	js     0x422d77
  422d61:	test   DWORD PTR [edi],esi
  422d63:	pop    es
  422d64:	icebp  
  422d65:	test   eax,0x19a49d05
  422d6a:	sahf   
  422d6b:	inc    ebx
  422d6c:	mov    edx,0xa272d9b9
  422d71:	call   DWORD PTR [edx-0x5600ad08]
  422d77:	jmp    0x65c6:0x31eeed86
  422d7e:	sbb    ebx,esi
  422d80:	adc    bl,bh
  422d82:	jne    0x422e00
  422d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d85:	sub    al,0x9e
  422d87:	repz bound ecx,QWORD PTR [edi-0x5b4e3906]
  422d8e:	jg     0x422e07
  422d90:	xchg   ebp,eax
  422d91:	pop    esi
  422d92:	mov    bl,BYTE PTR [edi+0x50]
  422d95:	add    eax,0x1d14ac6
  422d9a:	clc    
  422d9b:	int    0x81
  422d9d:	enter  0x88b9,0x0
  422da1:	xor    al,BYTE PTR [ecx+0x33e09f96]
  422da7:	popa   
  422da8:	jle    0x422d70
  422daa:	or     DWORD PTR [eax],esp
  422dac:	ss xor al,0xb
  422daf:	xchg   edi,eax
  422db0:	or     bl,dh
  422db2:	ss xor edi,ecx
  422db5:	push   es
  422db6:	cmp    eax,0xaaa73109
  422dbb:	shl    BYTE PTR [eax+0x2ed90004],1
  422dc1:	shl    esi,1
  422dc3:	dec    ebx
  422dc4:	cli    
  422dc5:	lock mul BYTE PTR gs:[ecx-0x62328a60]
  422dcd:	adc    DWORD PTR [edi],ebx
  422dcf:	fcom   DWORD PTR [ebx]
  422dd1:	in     eax,dx
  422dd2:	jmp    0x422db8
  422dd4:	popf   
  422dd5:	xchg   BYTE PTR [edi],dl
  422dd7:	and    BYTE PTR [edx],cl
  422dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dda:	popf   
  422ddb:	sbb    dl,BYTE PTR [ebx+0x25c7a7d5]
  422de1:	sbb    DWORD PTR [eax+0x73],ebx
  422de4:	mov    edx,0xe5f18bf2
  422de9:	xor    DWORD PTR [ecx-0x5c],0xd758a60a
  422df0:	jp     0x422e58
  422df2:	jg     0x422e6e
  422df4:	jne    0x422e33
  422df6:	mov    eax,cs
  422df8:	repz xor DWORD PTR [ebx-0x4c],esi
  422dfc:	pushf  
  422dfd:	loope  0x422db5
  422dff:	fdivr  st,st(5)
  422e01:	call   0x7d4e:0x4b668b2d
  422e08:	inc    ecx
  422e09:	dec    edi
  422e0a:	cld    
  422e0b:	mov    dl,0x1b
  422e0d:	lock mov ds:0x795cabad,eax
  422e13:	xchg   edi,eax
  422e14:	js     0x422da3
  422e16:	mov    DWORD PTR [edx],esi
  422e18:	repnz test eax,0x193cf97
  422e1e:	adc    edx,ecx
  422e20:	push   esp
  422e21:	mov    eax,0xd9623295
  422e26:	pushf  
  422e27:	idiv   BYTE PTR [eax-0x798083b9]
  422e2d:	mov    esp,0x457b0be8
  422e32:	cmp    BYTE PTR [esi+edx*4+0x4a460cdd],bh
  422e39:	scas   eax,DWORD PTR es:[edi]
  422e3a:	in     eax,0x2b
  422e3c:	inc    ebp
  422e3d:	loope  0x422ea1
  422e3f:	(bad)  
  422e40:	push   cs
  422e41:	(bad)  
  422e43:	add    bh,al
  422e45:	(bad)  
  422e46:	xlat   BYTE PTR ds:[ebx]
  422e47:	hlt    
  422e48:	push   ebp
  422e4a:	jmp    FWORD PTR [ebx-0x21]
  422e4d:	push   ecx
  422e4e:	iret   
  422e4f:	mov    fs,WORD PTR [esi+0x3fd6fc2f]
  422e55:	dec    ebp
  422e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e57:	add    DWORD PTR [eax],eax
  422e59:	clc    
  422e5a:	add    al,0x0
  422e5c:	add    al,cl
  422e5e:	out    0xbe,al
  422e60:	mov    ss,WORD PTR [ecx+0x5eaf96db]
  422e66:	push   eax
  422e67:	jo     0x422e18
  422e69:	jno    0x422e91
  422e6b:	adc    dh,ch
  422e6d:	sub    bh,al
  422e6f:	rcr    eax,0x56
  422e72:	adc    BYTE PTR [esi+0xb],0xe
  422e76:	retf   
  422e77:	xchg   DWORD PTR ds:0x74ab7dd5,esi
  422e7d:	sbb    al,0x8e
  422e7f:	mov    bh,0xa7
  422e81:	mov    eax,ebx
  422e83:	xor    al,0x96
  422e85:	clc    
  422e86:	and    al,0x8f
  422e88:	jo     0x422e52
  422e8a:	add    al,0x73
  422e8c:	push   edi
  422e8d:	fwait
  422e8e:	or     bh,BYTE PTR [eax+0x7300c07d]
  422e94:	stos   BYTE PTR es:[edi],al
  422e95:	call   0xfd94:0xa1c6d601
  422e9c:	pop    esp
  422e9d:	jge    0x422ebe
  422e9f:	int3   
  422ea0:	and    DWORD PTR [edi-0x40a27d59],eax
  422ea6:	adc    eax,0x1fd31770
  422eab:	fcom   QWORD PTR [eax+0x1cb02188]
  422eb1:	sbb    bh,BYTE PTR [edi-0x50d9d392]
  422eb7:	stos   BYTE PTR es:[edi],al
  422eb8:	rcr    DWORD PTR [eax],cl
  422eba:	cmp    edx,DWORD PTR [esi+0x5ab74dfc]
  422ec0:	push   es
  422ec1:	mov    cl,0xa0
  422ec3:	ret    0x3ba3
  422ec6:	adc    al,0x17
  422ec8:	xor    DWORD PTR [ebp-0x2b],edx
  422ecb:	(bad)  
  422ecc:	cmp    BYTE PTR [ecx],cl
  422ece:	mov    BYTE PTR [esi-0xa2589c3],ah
  422ed4:	retf   
  422ed5:	fmul   QWORD PTR [eax-0x18142e62]
  422edb:	sbb    bh,BYTE PTR [ebx+0x2c]
  422ede:	xchg   esp,eax
  422edf:	mov    bh,0x3b
  422ee1:	lods   eax,DWORD PTR ds:[esi]
  422ee2:	fcomp  QWORD PTR [edi+0x45591e58]
  422ee8:	inc    esi
  422ee9:	xchg   edx,eax
  422eea:	mov    ebp,0xe4b6f2ca
  422eef:	call   DWORD PTR [edx-0x6364b02e]
  422ef5:	push   ebp
  422ef6:	jl     0x422eb8
  422ef8:	push   0x36
  422efa:	pop    ss
  422efb:	adc    al,BYTE PTR [edx]
  422efd:	call   0xba55:0x495854c
  422f04:	xor    BYTE PTR [eax],cl
  422f06:	push   esp
  422f07:	xor    al,0x23
  422f09:	dec    ebx
  422f0a:	in     eax,0xe6
  422f0c:	aad    0x76
  422f0e:	ret    0x251e
  422f11:	out    dx,eax
  422f12:	mul    BYTE PTR [edx-0x7e4ecea9]
  422f18:	dec    esi
  422f19:	out    0x2f,eax
  422f1b:	js     0x422ecf
  422f1d:	sub    BYTE PTR [eax],ah
  422f1f:	dec    ebp
  422f20:	pushf  
  422f21:	pop    ds
  422f22:	xchg   bl,al
  422f24:	retf   
  422f25:	out    dx,eax
  422f26:	(bad)  
  422f27:	mov    bh,0x8c
  422f29:	push   ebx
  422f2a:	or     esp,DWORD PTR [esi-0x298ead6d]
  422f30:	mov    ds:0x2c3f62f4,eax
  422f35:	mov    eax,0xc6a47efe
  422f3a:	cs ret 0xda0a
  422f3e:	mov    esp,0xa911e99f
  422f43:	pop    es
  422f44:	ret    
  422f45:	ja     0x422f72
  422f47:	fldenv [ecx]
  422f49:	sub    dh,BYTE PTR [ebx-0x6f]
  422f4c:	outs   dx,BYTE PTR ds:[esi]
  422f4d:	or     ebx,0xebd1c939
  422f53:	ror    ebx,0xae
  422f56:	mov    ebp,0x9109abd6
  422f5b:	pop    ebx
  422f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f5d:	repz lea ebp,[edi-0x23]
  422f61:	jnp    0x422f40
  422f63:	jp     0x422eec
  422f65:	dec    ebp
  422f66:	sar    DWORD PTR [ecx],1
  422f68:	jae    0x422fd1
  422f6a:	in     al,0xb8
  422f6c:	jg     0x422f39
  422f6e:	in     al,0x6b
  422f70:	mov    DWORD PTR [ebx],esi
  422f72:	stos   DWORD PTR es:[edi],eax
  422f73:	or     DWORD PTR [ebp+eax*1+0x6a89b71],esp
  422f7a:	mov    cl,0x6e
  422f7c:	imul   esi,DWORD PTR [esi*1-0x6b7b4cfb],0xffffff8a
  422f84:	dec    ebp
  422f85:	in     al,dx
  422f86:	mov    edx,0x68a65a59
  422f8b:	(bad)  
  422f8c:	popa   
  422f8d:	test   eax,0x20a972c
  422f92:	dec    ebp
  422f93:	call   0xdf58b0d9
  422f98:	aad    0x43
  422f9a:	enter  0x39db,0x88
  422f9e:	xchg   DWORD PTR [ebp-0x4c],ecx
  422fa1:	shr    DWORD PTR [ecx+esi*8-0x676bf774],0x50
  422fa9:	or     al,0x2
  422fab:	scas   al,BYTE PTR es:[edi]
  422fac:	mov    al,0xc3
  422fae:	les    esi,FWORD PTR [ecx-0x7b6b48d2]
  422fb4:	shl    BYTE PTR [esi+ebp*8],cl
  422fb7:	aas    
  422fb8:	popf   
  422fb9:	cmp    al,0xce
  422fbb:	jno    0x422fa5
  422fbd:	mov    BYTE PTR [ebx+ebp*4-0x37],ah
  422fc1:	fcomp  st(1)
  422fc3:	clc    
  422fc4:	cmp    ch,BYTE PTR [esi+ecx*1+0x7e]
  422fc8:	jl     0x422f97
  422fca:	or     esi,DWORD PTR [edx+0x3]
  422fcd:	or     al,0x73
  422fcf:	outs   dx,DWORD PTR ds:[esi]
  422fd0:	push   eax
  422fd1:	ins    DWORD PTR es:[edi],dx
  422fd2:	mov    DWORD PTR [ebx-0x36565675],edx
  422fd8:	fisubr DWORD PTR [eax]
  422fda:	and    al,BYTE PTR [ecx-0x5a]
  422fdd:	in     eax,dx
  422fde:	(bad)  
  422fdf:	jl     0x422fac
  422fe1:	cwde   
  422fe2:	push   ss
  422fe3:	aam    0xf7
  422fe5:	(bad)  
  422fe6:	cli    
  422fe7:	call   0x8b1810a9
  422fec:	or     cl,BYTE PTR [ebx-0x379b77f4]
  422ff2:	aad    0xb7
  422ff4:	push   esp
  422ff5:	push   ds
  422ff6:	mov    WORD PTR [ecx],cs
  422ff8:	into   
  422ff9:	sbb    BYTE PTR [esp+edx*1],ch
  422ffc:	push   ecx
  422ffd:	push   ecx
  422ffe:	fsubr  DWORD PTR [ebp-0x47399fc5]
  423004:	xchg   ecx,eax
  423005:	jmp    0x9801:0xf5674d21
  42300c:	jecxz  0x422f96
  42300e:	or     BYTE PTR [edx+0x1aa06787],bh
  423014:	outs   dx,DWORD PTR ds:[esi]
  423015:	es xor al,0xa
  423018:	and    dh,0x4
  42301b:	icebp  
  42301c:	sub    esp,DWORD PTR [edi+eax*1-0xb]
  423020:	loope  0x422fbb
  423022:	popa   
  423023:	fisub  WORD PTR [ebx]
  423025:	xlat   BYTE PTR ds:[ebx]
  423026:	add    dh,BYTE PTR [edx+0x23]
  423029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42302a:	nop
  42302b:	adc    BYTE PTR [eax-0x74],cl
  42302e:	ss xor al,0x23
  423031:	fiadd  DWORD PTR [esi+ebx*1-0x49]
  423035:	lock (bad) 
  423037:	jmp    0xe6b45a9d
  42303c:	call   0x9ce6fe02
  423041:	dec    ebp
  423042:	mov    eax,0xd5912be
  423047:	out    dx,eax
  423048:	pusha  
  423049:	mov    ebx,0xf036bef5
  42304e:	cmp    eax,DWORD PTR [ebx]
  423050:	xor    eax,0xc903581c
  423055:	ds aam 0xd
  423058:	retf   0xf450
  42305b:	lahf   
  42305c:	cmp    eax,0xe8ca03e3
  423061:	fcomp  DWORD PTR [esi-0x7ede9be3]
  423067:	in     eax,dx
  423068:	ja     0x4230e6
  42306a:	sar    BYTE PTR [ecx],0x4c
  42306d:	pop    ss
  42306e:	push   esi
  42306f:	popf   
  423070:	fimul  DWORD PTR [esi+0x1d]
  423073:	cmp    ah,BYTE PTR [eax]
  423075:	pop    eax
  423076:	daa    
  423077:	dec    DWORD PTR [esi+esi*1+0x6c]
  42307b:	fs into 
  42307d:	loope  0x42309b
  42307f:	xchg   edi,eax
  423080:	leave  
  423081:	sbb    BYTE PTR [ebx+0x6606ddf0],dl
  423087:	jle    0x42309e
  423089:	adc    BYTE PTR [edi+0x2f],bl
  42308c:	cmp    BYTE PTR [ecx-0x17f60386],0x93
  423093:	pop    ebx
  423094:	mov    WORD PTR [edx],es
  423096:	jle    0x42305f
  423098:	sbb    ah,0x6f
  42309b:	sub    al,0xa2
  42309d:	add    dh,BYTE PTR [eax]
  42309f:	add    cl,bl
  4230a1:	xchg   edi,eax
  4230a2:	inc    eax
  4230a3:	sub    bl,BYTE PTR [edi+0x7f28da8b]
  4230a9:	in     eax,0xcc
  4230ab:	outs   dx,DWORD PTR ds:[esi]
  4230ac:	call   0xfe72:0xee35d281
  4230b3:	push   cs
  4230b4:	jae    0x4230d5
  4230b6:	and    bl,BYTE PTR [ebx]
  4230b8:	ret    
  4230b9:	test   DWORD PTR [edi],0x2a0383b2
  4230bf:	xchg   edx,eax
  4230c0:	fild   WORD PTR [esi-0x4]
  4230c3:	sub    eax,0x277c017a
  4230c8:	stos   DWORD PTR es:[edi],eax
  4230c9:	(bad)  
  4230ca:	jbe    0x42308a
  4230cc:	test   DWORD PTR [ebx+eax*2+0x22],ebp
  4230d0:	xchg   edi,eax
  4230d1:	repz dec eax
  4230d3:	out    0xae,al
  4230d5:	mov    esp,0xdaecb98e
  4230da:	or     DWORD PTR [esi+0x6],edi
  4230dd:	scas   eax,DWORD PTR es:[edi]
  4230de:	std    
  4230df:	clc    
  4230e0:	xchg   esp,eax
  4230e1:	add    BYTE PTR [eax],ah
  4230e3:	mov    WORD PTR [esi],fs
  4230e5:	rcr    DWORD PTR [ecx+0x5a],1
  4230e8:	sahf   
  4230e9:	or     BYTE PTR [eax+0x5e670b94],bl
  4230ef:	leave  
  4230f0:	pop    edi
  4230f1:	leave  
  4230f2:	das    
  4230f3:	(bad)  
  4230f4:	jnp    0x423127
  4230f6:	dec    ecx
  4230f7:	fwait
  4230f8:	dec    esp
  4230f9:	add    eax,0xcbbbcca8
  4230fe:	push   ds
  4230ff:	jg     0x42317d
  423101:	repz mov al,0x4
  423104:	jle    0x423118
  423106:	ins    BYTE PTR es:[edi],dx
  423107:	js     0x423123
  423109:	xor    eax,0xf4a608eb
  42310e:	add    al,0xce
  423110:	pop    esp
  423111:	inc    edi
  423112:	jp     0x42312e
  423114:	and    eax,0x18affd25
  423119:	mov    bh,ch
  42311b:	(bad)  
  42311c:	idiv   DWORD PTR [eax+0x16]
  42311f:	stc    
  423120:	test   al,0x47
  423122:	adc    BYTE PTR [eax+ebp*2],0x86
  423126:	out    dx,eax
  423127:	jge    0x423178
  423129:	and    al,0x3b
  42312b:	xlat   BYTE PTR ds:[ebx]
  42312c:	(bad)  
  42312d:	call   0xe9c70d1c
  423132:	rcr    DWORD PTR [eax+0x19],cl
  423135:	sbb    eax,DWORD PTR [ebx-0x56]
  423138:	imul   edi,DWORD PTR [eax-0x69],0x3547d437
  42313f:	iret   
  423140:	adc    dh,bh
  423142:	jmp    0x15e2e841
  423147:	push   cs
  423148:	pusha  
  423149:	xor    al,0xd7
  42314b:	es sti 
  42314d:	jb     0x423132
  42314f:	call   0xdaf8:0xaead
  423155:	sbb    eax,0xd0746f18
  42315a:	sub    esi,esp
  42315c:	mov    edx,0xc150260e
  423161:	(bad)  
  423162:	jecxz  0x423109
  423164:	inc    esp
  423165:	or     DWORD PTR [esi],edx
  423167:	jge    0x4231c4
  423169:	call   0x61f8:0x884d799e
  423170:	sahf   
  423171:	jle    0x423192
  423173:	pop    es
  423174:	sub    BYTE PTR [eax],bh
  423176:	inc    edi
  423177:	popa   
  423178:	mov    esp,0x99ba48d2
  42317d:	outs   dx,BYTE PTR ds:[esi]
  42317e:	sbb    ebx,ecx
  423180:	xchg   esp,eax
  423181:	cmp    dh,BYTE PTR ds:0x528651dd
  423187:	test   edx,ecx
  423189:	pop    ebp
  42318a:	in     al,dx
  42318b:	mov    al,0xa
  42318d:	mov    ecx,esp
  42318f:	les    eax,FWORD PTR [esi+0x2a]
  423192:	arpl   WORD PTR [ecx+0x1c37eb41],bp
  423198:	pop    es
  423199:	imul   eax,DWORD PTR [ebp+0x1d],0x1cfc035e
  4231a0:	ror    BYTE PTR [ecx+0x4f88c0d6],0xf0
  4231a7:	sbb    DWORD PTR ds:0x69a2c66f,ebp
  4231ad:	(bad)  
  4231af:	sti    
  4231b0:	mov    ebp,0x90d8e256
  4231b5:	sbb    eax,edi
  4231b7:	fisttp WORD PTR [edi-0x1a423630]
  4231bd:	cmp    esp,edi
  4231bf:	inc    esi
  4231c0:	sbb    BYTE PTR [bx+di],0x11
  4231c4:	aam    0xf9
  4231c6:	dec    ecx
  4231c7:	jmp    0x99a8:0xd52b4fee
  4231ce:	ins    DWORD PTR es:[edi],dx
  4231cf:	scas   al,BYTE PTR es:[edi]
  4231d0:	or     al,0x78
  4231d2:	push   eax
  4231d3:	leave  
  4231d4:	sub    al,0x4d
  4231d6:	add    ah,BYTE PTR [esi+0x3837607]
  4231dc:	mov    dl,BYTE PTR [ecx+0x7d]
  4231df:	loop   0x42319a
  4231e1:	aam    0x61
  4231e3:	test   al,0xa1
  4231e5:	fdiv   QWORD PTR ds:0x13ba08c4
  4231eb:	out    dx,eax
  4231ec:	lds    ebx,FWORD PTR [edi+0x22886574]
  4231f2:	int    0x51
  4231f4:	push   edx
  4231f5:	and    cl,cl
  4231f7:	sbb    esp,DWORD PTR [edi-0x38]
  4231fa:	rcl    BYTE PTR [ecx],1
  4231fc:	fist   DWORD PTR [ebx]
  4231fe:	sbb    BYTE PTR [esi+0x2],al
  423201:	das    
  423202:	loop   0x423240
  423204:	ins    DWORD PTR es:[edi],dx
  423205:	dec    edi
  423206:	ret    0x633a
  423209:	dec    esi
  42320a:	clc    
  42320b:	pop    ss
  42320c:	stos   DWORD PTR es:[edi],eax
  42320d:	test   BYTE PTR [eax-0x63],dl
  423210:	daa    
  423211:	and    eax,0x9083b2e6
  423216:	pop    ebp
  423217:	add    bl,BYTE PTR [esi]
  423219:	sub    eax,0xd6d5c83c
  42321e:	das    
  42321f:	ret    0xe26c
  423222:	adc    edx,ebx
  423224:	addr16 pop esi
  423226:	(bad)  
  423227:	in     eax,dx
  423228:	push   ss
  423229:	loop   0x42320c
  42322b:	lods   eax,DWORD PTR ds:[esi]
  42322c:	retf   0x90cc
  42322f:	push   ebx
  423230:	mov    al,0x8c
  423232:	test   eax,0x60e6538f
  423237:	stos   BYTE PTR es:[edi],al
  423238:	shl    DWORD PTR [bx+di],0x7a
  42323c:	sbb    eax,0xfb119d78
  423241:	lds    esi,FWORD PTR [ebx-0x762f0815]
  423247:	mov    ds:0x5c098972,eax
  42324c:	mul    DWORD PTR [ecx+0x1c]
  42324f:	xchg   ebp,eax
  423250:	pop    esp
  423251:	dec    ebx
  423252:	in     eax,0x8a
  423254:	adc    eax,0xd7df01f6
  423259:	mov    ebx,0xed9a53ab
  42325e:	xor    al,0x2
  423260:	and    BYTE PTR [edi+0x60],0xd
  423264:	ins    BYTE PTR es:[edi],dx
  423265:	fdiv   st(3),st
  423267:	in     al,dx
  423268:	(bad)  
  423269:	pop    ebx
  42326a:	and    DWORD PTR [ecx+0x741f8026],0xffffff91
  423271:	enter  0x5c44,0xd7
  423275:	add    DWORD PTR [ebp+0x24a97dce],eax
  42327b:	out    dx,al
  42327c:	push   ebp
  42327d:	add    ebx,DWORD PTR [ebp-0x5deaadd7]
  423283:	or     DWORD PTR [esi],0xffffffd1
  423286:	dec    ecx
  423287:	jmp    0x5acb:0xac2a870b
  42328e:	ds adc eax,eax
  423291:	(bad)  [edx+0x33]
  423294:	scas   eax,DWORD PTR es:[edi]
  423295:	in     eax,dx
  423296:	cdq    
  423297:	pop    eax
  423298:	popf   
  423299:	push   ss
  42329a:	sbb    BYTE PTR [esi+0x17],ch
  42329d:	dec    esp
  42329e:	pop    ss
  42329f:	ja     0x4232d6
  4232a1:	(bad)  
  4232a2:	std    
  4232a3:	lahf   
  4232a4:	jg     0x423286
  4232a6:	sbb    DWORD PTR [eax],ecx
  4232a8:	cdq    
  4232a9:	sub    eax,0x9fdd9770
  4232ae:	in     eax,0xd4
  4232b0:	jnp    0x4232b4
  4232b2:	mov    ebp,0x51f201a6
  4232b7:	push   eax
  4232b8:	xlat   BYTE PTR ds:[ebx]
  4232b9:	sub    edi,DWORD PTR [ebx+esi*8+0x6f975b0a]
  4232c0:	sub    eax,0xbde2f727
  4232c5:	push   cs
  4232c6:	jo     0x4232d0
  4232c8:	cli    
  4232c9:	outs   dx,BYTE PTR ds:[esi]
  4232ca:	dec    edx
  4232cb:	dec    esp
  4232cc:	push   ebp
  4232cd:	dec    edi
  4232ce:	pushf  
  4232cf:	hlt    
  4232d0:	jae    0x423291
  4232d2:	xchg   edx,eax
  4232d3:	sbb    al,0xc6
  4232d5:	cmc    
  4232d6:	(bad)
  4232da:	adc    BYTE PTR [ebx+0xf2c38db],0xd
  4232e1:	xchg   esp,ebp
  4232e3:	mov    edi,eax
  4232e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232e6:	dec    ecx
  4232e7:	test   DWORD PTR [edx+ebp*2-0x4a],esp
  4232eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232ec:	xchg   ecx,eax
  4232ed:	out    0x79,al
  4232ef:	jb     0x423332
  4232f1:	cdq    
  4232f2:	jp     0x423278
  4232f4:	stos   DWORD PTR es:[edi],eax
  4232f5:	xchg   ecx,eax
  4232f6:	add    DWORD PTR [edx],ebp
  4232f8:	enter  0x810a,0x2e
  4232fc:	mov    DWORD PTR [ebx+0x7d],esi
  4232ff:	popa   
  423300:	mov    ecx,0x4def7c80
  423305:	js     0x423323
  423307:	fstp   QWORD PTR [edx]
  423309:	out    dx,al
  42330a:	dec    DWORD PTR [eax+0x1770cb6c]
  423310:	mov    eax,ds:0x480b9d2b
  423315:	stos   DWORD PTR es:[edi],eax
  423316:	or     al,0xf6
  423318:	xchg   esp,ebp
  42331a:	cmp    BYTE PTR [esi],dl
  42331c:	jge    0x423308
  42331e:	adc    eax,0xe98f238a
  423323:	loop   0x42335b
  423325:	out    dx,al
  423326:	imul   ebx,DWORD PTR [ebx+0x653e257f],0xc6843b3
  423330:	pop    ebx
  423331:	pop    ss
  423332:	adc    edx,DWORD PTR [eax+0x7f04c087]
  423338:	inc    ecx
  423339:	mov    ah,0x32
  42333b:	jb     0x4232d0
  42333d:	aas    
  42333e:	pop    ds
  42333f:	out    0xc0,al
  423341:	fbstp  TBYTE PTR [ecx-0x1c86ed74]
  423347:	lea    ebx,[edi+0xe]
  42334a:	imul   ebx,DWORD PTR [ecx],0x69
  42334d:	mov    ebx,0x60877e28
  423352:	jne    0x423348
  423354:	cmp    ecx,DWORD PTR [edi]
  423356:	pop    ebx
  423357:	test   BYTE PTR [esi],dl
  423359:	aam    0xdf
  42335b:	lahf   
  42335c:	pop    ebx
  42335d:	xchg   ebp,eax
  42335e:	sub    ecx,eax
  423360:	pop    esp
  423361:	pop    edx
  423362:	push   ss
  423363:	mov    cl,0x5c
  423365:	inc    ebp
  423366:	stos   BYTE PTR es:[edi],al
  423367:	add    DWORD PTR [eax],eax
  423369:	clc    
  42336a:	add    al,0x0
  42336c:	add    BYTE PTR [edi+0xe],bh
  42336f:	push   ds
  423370:	mov    ds:0xf4cdee43,eax
  423375:	inc    ecx
  423376:	mov    dh,0xe7
  423378:	or     DWORD PTR [edi],0xb697730c
  42337e:	jmp    0xb477:0xce53449b
  423385:	popa   
  423386:	cmp    BYTE PTR [edx-0x84b57e0],dl
  42338c:	cmp    ch,ch
  42338e:	cmp    ebp,ebp
  423390:	cmp    esp,DWORD PTR ds:0x85ee51b2
  423396:	xchg   ebp,eax
  423397:	stos   BYTE PTR es:[edi],al
  423398:	call   0x6ba8:0x735b64df
  42339f:	or     ah,bh
  4233a1:	int3   
  4233a2:	jmp    0x37e4:0x274e44fa
  4233a9:	ds or  ch,0x43
  4233ad:	mul    DWORD PTR [ebp+0x6]
  4233b0:	test   eax,0x92625565
  4233b5:	dec    ebp
  4233b6:	dec    ebx
  4233b7:	mov    esi,0xa22e787a
  4233bc:	adc    BYTE PTR [edi+0x23f60284],0x75
  4233c3:	mov    bl,0x13
  4233c5:	sbb    DWORD PTR [ecx],esp
  4233c7:	xchg   edx,eax
  4233c8:	and    dl,BYTE PTR [ebp+0x3216ce7d]
  4233ce:	call   0x828d:0xaa77f480
  4233d5:	enter  0x2ae5,0xe6
  4233d9:	(bad)  
  4233da:	(bad)  [eax-0x43]
  4233dd:	mov    ch,0xa4
  4233df:	jge    0x423448
  4233e1:	(bad)  
  4233e3:	fiadd  WORD PTR [ecx]
  4233e5:	cmc    
  4233e6:	mov    ds:0xa448acb6,eax
  4233eb:	test   al,0x4a
  4233ed:	stc    
  4233ee:	ins    BYTE PTR es:[edi],dx
  4233ef:	xlat   BYTE PTR ds:[ebx]
  4233f0:	pop    ds
  4233f1:	gs lahf 
  4233f3:	xor    BYTE PTR [ebp*8-0x2215e368],al
  4233fa:	jb     0x4233c6
  4233fc:	imul   edi,DWORD PTR [ebp-0x7],0x2ba088ce
  423403:	and    BYTE PTR [ebx],bh
  423405:	xor    ebp,DWORD PTR [eax+0x2e]
  423408:	aaa    
  423409:	add    al,0xff
  42340b:	jmp    0xd20ec1be
  423410:	cmp    ebx,esi
  423412:	arpl   WORD PTR [ebx+0x4ab1204a],dx
  423418:	(bad)  
  423419:	pop    ebp
  42341a:	dec    BYTE PTR [esi+0x13]
  42341d:	sbb    ebx,DWORD PTR ds:0x95ea132d
  423423:	inc    esi
  423424:	mov    ds:0x1920bf11,eax
  423429:	sub    edx,ebx
  42342b:	adc    ah,0xf9
  42342e:	add    BYTE PTR [edi-0x1c],ah
  423431:	sahf   
  423432:	ror    DWORD PTR [ebx],cl
  423434:	pushf  
  423435:	sbb    DWORD PTR [ebx+edx*8+0x29f4d5e6],ecx
  42343c:	xchg   edx,eax
  42343d:	add    al,0x3
  42343f:	int    0x48
  423441:	packssdw mm2,QWORD PTR [ebx-0x2840164b]
  423448:	cmc    
  423449:	xchg   edi,eax
  42344a:	pop    eax
  42344b:	mov    bh,0x7c
  42344d:	ins    DWORD PTR es:[edi],dx
  42344e:	jbe    0x423453
  423450:	xchg   edx,eax
  423451:	out    dx,eax
  423452:	cdq    
  423453:	mov    cl,0xbe
  423455:	pop    ss
  423456:	jmp    0x78afa5cf
  42345b:	(bad)  
  42345c:	pop    ds
  42345d:	les    ecx,FWORD PTR gs:0x9523ffff
  423464:	mov    ecx,0x1e4b0ea1
  423469:	xor    bl,BYTE PTR [eax*1-0x3e01377]
  423470:	in     al,dx
  423471:	mov    ah,0x92
  423473:	ror    esp,cl
  423475:	jns    0x42348a
  423477:	add    ebp,DWORD PTR [ecx]
  423479:	xor    eax,0x931e9e1c
  42347e:	popa   
  42347f:	inc    edx
  423480:	jns    0x4234ff
  423482:	push   ecx
  423483:	xor    cl,al
  423485:	mov    BYTE PTR [ecx-0x7b],dh
  423488:	sbb    edi,esp
  42348a:	xor    al,0x69
  42348c:	jmp    FWORD PTR [edx-0x2a]
  42348f:	in     al,dx
  423490:	jg     0x42345a
  423492:	push   esi
  423493:	jl     0x42350a
  423495:	sti    
  423496:	sti    
  423497:	out    dx,al
  423498:	add    DWORD PTR [ebx+0x10],ebp
  42349b:	dec    edx
  42349c:	mov    al,0xe9
  42349e:	adc    al,0x58
  4234a0:	popf   
  4234a1:	inc    esi
  4234a2:	mov    esi,0x2c2cdedb
  4234a7:	sub    eax,0xab0e94b9
  4234ac:	retf   
  4234ad:	in     eax,0x56
  4234af:	data16 (bad) 
  4234b1:	mov    edx,0x33671411
  4234b6:	sbb    eax,0xb80b311d
  4234bb:	jle    0x423508
  4234bd:	inc    di
  4234bf:	dec    edi
  4234c0:	dec    ecx
  4234c1:	mov    edi,0xa6ab9348
  4234c6:	les    ecx,FWORD PTR [ecx]
  4234c8:	test   DWORD PTR [edi],edi
  4234ca:	push   ds
  4234cb:	adc    ah,BYTE PTR [ebx]
  4234cd:	aad    0x28
  4234cf:	sbb    DWORD PTR [ebx-0x24b5c057],ebx
  4234d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234d6:	pop    DWORD PTR [ebx+0x75a96b6]
  4234dc:	xor    eax,DWORD PTR [esi-0x74e7fa93]
  4234e2:	repz es dec eax
  4234e5:	in     eax,dx
  4234e6:	lds    esp,FWORD PTR [ebp-0x9b59be]
  4234ec:	fsubr  QWORD PTR [ecx+0x385a9f07]
  4234f2:	and    DWORD PTR [ebp-0x25],0xc4142c85
  4234f9:	dec    esi
  4234fa:	fstp   TBYTE PTR [ebp+0x2e]
  4234fd:	into   
  4234fe:	jbe    0x42357d
  423500:	mov    dh,BYTE PTR [esi]
  423502:	and    al,BYTE PTR [edx+0x70]
  423505:	lea    edx,[edi-0x4]
  423508:	xchg   esp,eax
  423509:	xchg   ebp,eax
  42350a:	add    DWORD PTR [edi],0xffffffcd
  42350d:	js     0x42349e
  42350f:	push   edx
  423510:	xor    ebp,0x3e61098c
  423516:	push   ecx
  423517:	cld    
  423518:	loopne 0x423582
  42351a:	cmp    ecx,DWORD PTR [eax]
  42351c:	xchg   BYTE PTR [esi-0x4e858def],dh
  423522:	xor    BYTE PTR [edx-0x32c18300],0x6e
  423529:	es gs xchg edi,eax
  42352c:	ins    BYTE PTR es:[edi],dx
  42352d:	mov    WORD PTR [esi-0x67],gs
  423530:	call   0xa7c8:0x5fe5066c
  423537:	ins    BYTE PTR es:[edi],dx
  423538:	push   ecx
  423539:	jge    0x4234d8
  42353b:	test   al,0x95
  42353d:	mov    ah,0x67
  42353f:	aaa    
  423540:	xchg   edi,eax
  423541:	fcom   DWORD PTR [ecx-0x45]
  423544:	(bad)  
  423545:	or     al,0xfd
  423547:	cmp    eax,0x61474b86
  42354c:	mov    BYTE PTR [esi-0x1b],dl
  42354f:	dec    edi
  423550:	test   BYTE PTR [ecx+0x25],bh
  423553:	and    edx,DWORD PTR [eax+edx*2]
  423556:	mov    ah,BYTE PTR [edi-0x71baafa4]
  42355c:	int    0x81
  42355e:	xchg   edi,eax
  42355f:	ret    
  423560:	xchg   ecx,eax
  423561:	mov    ds:0x60c5db28,eax
  423566:	lds    edi,FWORD PTR [ebx-0x2a]
  423569:	xor    DWORD PTR [eiz*8-0x191661ce],ebp
  423570:	int    0x13
  423572:	and    DWORD PTR [ebx+0x264cd180],esp
  423578:	iret   
  423579:	add    al,0xf3
  42357b:	js     0x4235b2
  42357d:	inc    edi
  42357e:	lods   eax,DWORD PTR ds:[esi]
  42357f:	pushf  
  423580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423581:	ss test al,0xe2
  423584:	xchg   ecx,eax
  423585:	dec    ebp
  423586:	sahf   
  423587:	(bad)  
  423588:	fbld   TBYTE PTR [ecx-0x76ebe891]
  42358e:	in     eax,0xee
  423590:	cwde   
  423591:	cmp    cl,dl
  423593:	jb     0x423559
  423595:	lods   al,BYTE PTR ds:[esi]
  423596:	inc    ecx
  423597:	add    al,0x6c
  423599:	jnp    0x42352c
  42359b:	add    al,BYTE PTR [ecx-0x34]
  42359e:	pop    esp
  42359f:	sub    dl,BYTE PTR [ecx]
  4235a1:	pop    ds
  4235a2:	mov    esi,0x24b60cce
  4235a7:	data16 icebp 
  4235a9:	fidiv  WORD PTR [edx]
  4235ab:	lahf   
  4235ac:	pop    es
  4235ad:	mov    edi,0xb1ae913c
  4235b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235b3:	xlat   BYTE PTR ds:[ebx]
  4235b4:	pop    eax
  4235b5:	stc    
  4235b6:	popa   
  4235b7:	sar    BYTE PTR [ebp-0x23],1
  4235ba:	or     eax,0x737abf1b
  4235bf:	das    
  4235c0:	imul   esp,DWORD PTR [esi],0xb8467255
  4235c6:	ins    BYTE PTR es:[edi],dx
  4235c7:	shl    DWORD PTR [edx],0x2b
  4235ca:	add    eax,0x413ef5d3
  4235cf:	popf   
  4235d0:	dec    edi
  4235d1:	test   BYTE PTR [edx],ch
  4235d3:	push   es
  4235d4:	xor    esp,esi
  4235d6:	int    0xe7
  4235d8:	push   edi
  4235d9:	pop    ds
  4235da:	jmp    0x14f3b029
  4235df:	jb     0x4235e8
  4235e1:	inc    esi
  4235e2:	sub    al,0xc4
  4235e4:	or     al,0x6d
  4235e6:	(bad)  
  4235e7:	mov    ecx,0x537e28b6
  4235ec:	mov    eax,0x3f98a8cc
  4235f1:	fucomp st(0)
  4235f3:	cld    
  4235f4:	leave  
  4235f5:	sbb    al,0x62
  4235f7:	xor    al,0xcd
  4235f9:	rcl    edi,cl
  4235fb:	ja     0x4235bc
  4235fd:	push   ss
  4235fe:	push   0x25
  423600:	call   0x86fa7184
  423605:	popf   
  423606:	jmp    0x8e90:0xffa5d22f
  42360d:	repz fistp QWORD PTR [edi+ecx*8-0x4f]
  423612:	push   ebx
  423613:	aam    0xe8
  423615:	pop    eax
  423616:	inc    ebp
  423617:	outs   dx,BYTE PTR ds:[esi]
  423618:	mov    esi,0xb0fc92f0
  42361d:	sbb    bh,BYTE PTR [esi+0xbe8b08e]
  423623:	pop    edi
  423624:	mov    edi,edi
  423626:	inc    eax
  423627:	imul   eax,DWORD PTR [eax+0x5595de67],0x3bd9955b
  423631:	push   esp
  423632:	add    BYTE PTR [ecx+0x57d63e86],al
  423638:	in     al,0x7f
  42363a:	lea    ebp,[ecx-0x80]
  42363d:	test   BYTE PTR [eax],dh
  42363f:	es xchg edx,eax
  423641:	icebp  
  423642:	and    al,0x64
  423644:	les    ebx,FWORD PTR [esi+0x77]
  423647:	mov    ds:0xef37c322,al
  42364c:	sbb    edi,esp
  42364e:	hlt    
  42364f:	loope  0x423684
  423651:	hlt    
  423652:	xchg   ecx,eax
  423653:	sbb    al,dl
  423655:	adc    BYTE PTR [esi-0x74d6d4b6],dl
  42365b:	adc    al,0x80
  42365d:	dec    ecx
  42365e:	outs   dx,DWORD PTR ds:[esi]
  42365f:	sahf   
  423660:	icebp  
  423661:	mov    eax,ds:0x85be5733
  423666:	and    DWORD PTR [esi+eax*4-0x4a],0x5c7cecc1
  42366e:	jnp    0x423622
  423670:	out    dx,eax
  423671:	(bad)  
  423672:	(bad)  
  423673:	dec    esi
  423674:	in     al,dx
  423675:	je     0x423619
  423677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423678:	push   es
  423679:	in     eax,dx
  42367a:	cmp    BYTE PTR [ebp+edi*2-0x9535aba],bh
  423681:	ret    
  423682:	add    BYTE PTR [esp+ebx*4],ch
  423685:	push   ss
  423686:	pop    ecx
  423687:	xor    esi,ebp
  423689:	xchg   ecx,eax
  42368a:	nop
  42368b:	sbb    eax,0xa577ce3a
  423690:	scas   al,BYTE PTR es:[edi]
  423691:	loop   0x423673
  423693:	add    esi,DWORD PTR [ebx]
  423695:	pusha  
  423696:	cmp    bh,cl
  423698:	gs jecxz 0x423625
  42369b:	rol    ebp,0x43
  42369e:	dec    edi
  42369f:	stos   DWORD PTR es:[edi],eax
  4236a0:	jno    0x4236da
  4236a2:	fdivr  st(3),st
  4236a4:	sbb    esp,DWORD PTR ds:0xefb2c65d
  4236aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236ab:	mov    edi,0xd7bc67dc
  4236b0:	(bad)  
  4236b1:	scas   al,BYTE PTR es:[edi]
  4236b2:	cmp    BYTE PTR [bx+0x6a],ch
  4236b6:	push   0xd2dacefc
  4236bb:	daa    
  4236bc:	jl     0x4236ab
  4236be:	sub    dl,BYTE PTR [esi+0x6f]
  4236c1:	mov    ch,0x4a
  4236c3:	sub    BYTE PTR [ebx+0x155a6682],ah
  4236c9:	sub    al,0x7c
  4236cb:	jo     0x423677
  4236cd:	stos   BYTE PTR es:[edi],al
  4236ce:	mov    eax,ds:0x391ef77a
  4236d3:	adc    al,0xe9
  4236d5:	cmp    al,dh
  4236d7:	cmp    eax,esp
  4236d9:	leave  
  4236da:	test   DWORD PTR [ebx+0x38610853],0xef7335c6
  4236e4:	add    BYTE PTR ds:0x6395944e,0xa7
  4236eb:	aaa    
  4236ec:	lds    edx,FWORD PTR [ebp-0x40]
  4236ef:	and    edx,eax
  4236f1:	adc    eax,0x7d878e0d
  4236f6:	outs   dx,BYTE PTR ds:[esi]
  4236f7:	jle    0x4236f0
  4236f9:	enter  0x7670,0x17
  4236fd:	add    ebp,DWORD PTR [ecx+0x1d]
  423700:	dec    eax
  423701:	cld    
  423702:	or     DWORD PTR [ebx+0x69ede1e5],ecx
  423708:	push   es
  423709:	(bad)  
  42370a:	fwait
  42370b:	in     al,0xc1
  42370d:	push   0x4d820cab
  423712:	popf   
  423713:	inc    esi
  423714:	cmp    dl,0x3a
  423717:	xor    BYTE PTR [ebx+0x425baa4b],bh
  42371d:	adc    DWORD PTR [eax-0x28],ebx
  423720:	and    BYTE PTR [ecx+eiz*1+0x8],ch
  423724:	data16 mov cl,0x45
  423727:	push   0xffffff8a
  423729:	add    dh,BYTE PTR [eax-0x17]
  42372c:	(bad)  
  42372d:	sbb    ebx,ebx
  42372f:	xlat   BYTE PTR ds:[ebx]
  423730:	xor    DWORD PTR [ebp+0x55de1b59],edi
  423736:	inc    ebp
  423737:	test   DWORD PTR [eax+ecx*1+0x11],ebx
  42373b:	sbb    DWORD PTR [ebx-0x7d397cdf],ecx
  423741:	push   esi
  423742:	cwde   
  423743:	fistp  DWORD PTR [ebx-0x5b]
  423746:	push   edx
  423747:	or     cl,BYTE PTR [ebp-0x35]
  42374a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42374b:	push   cs
  42374c:	(bad)  
  42374d:	adc    esp,DWORD PTR [edi+0xdd991ba]
  423753:	sub    DWORD PTR [edx+0x52c39ac1],0xe2f4814
  42375d:	dec    esp
  42375e:	(bad)  
  42375f:	push   edi
  423760:	(bad)  
  423761:	jb     0x4237b7
  423763:	rcr    DWORD PTR [eax-0x61],cl
  423766:	stc    
  423767:	dec    esp
  423768:	push   ecx
  423769:	dec    ebp
  42376a:	mov    esi,0x2d70f5b6
  42376f:	shl    dl,cl
  423771:	jbe    0x42379b
  423773:	in     eax,0x67
  423775:	cmp    bh,BYTE PTR [ecx-0x10]
  423778:	dec    edi
  423779:	inc    esp
  42377a:	lods   eax,DWORD PTR ds:[esi]
  42377b:	sub    BYTE PTR [eax+esi*8+0x16],bh
  42377f:	in     al,dx
  423780:	inc    esp
  423781:	push   ebp
  423782:	pushf  
  423783:	test   al,0xaf
  423785:	add    ah,BYTE PTR [edx-0x2]
  423788:	mov    ch,0xc8
  42378a:	cmp    bl,BYTE PTR [esi+0xa]
  42378d:	leave  
  42378e:	and    ecx,DWORD PTR [ecx]
  423790:	jbe    0x423739
  423792:	in     eax,0x36
  423794:	mov    eax,0x2bc8a72c
  423799:	adc    eax,0x4fb503f9
  42379e:	cld    
  42379f:	sub    BYTE PTR [edi+0x2d],0x23
  4237a3:	xor    BYTE PTR [eax+eax*8],al
  4237a6:	leave  
  4237a7:	pop    ecx
  4237a8:	hlt    
  4237a9:	or     ah,al
  4237ab:	xor    DWORD PTR [edi-0x1bbb7f0],ecx
  4237b1:	jmp    0x5c1:0x8d7af5b1
  4237b8:	out    dx,al
  4237b9:	fdiv   st,st(1)
  4237bb:	dec    ecx
  4237bc:	adc    ch,al
  4237be:	sbb    ebx,DWORD PTR [edi+ebx*4]
  4237c1:	push   cs
  4237c2:	es popf 
  4237c4:	inc    esi
  4237c5:	mov    dl,0x62
  4237c7:	cmp    ebp,edx
  4237c9:	jl     0x42380c
  4237cb:	jmp    0xf1ce:0x1d5ad027
  4237d2:	pop    ecx
  4237d3:	or     esp,edi
  4237d5:	aaa    
  4237d6:	sbb    eax,0xe13b1ead
  4237db:	popa   
  4237dc:	pop    esp
  4237dd:	dec    esi
  4237de:	jle    0x4237c3
  4237e0:	sbb    BYTE PTR [edx+0x7d8fd484],al
  4237e6:	ror    BYTE PTR [ebx*4-0x32a0a62c],0xa3
  4237ee:	xlat   BYTE PTR ds:[ebx]
  4237ef:	jb     0x423841
  4237f1:	add    eax,0x8736b56
  4237f6:	test   eax,0x99c8bdba
  4237fb:	mov    cl,0x66
  4237fd:	lock les esp,FWORD PTR ds:0xe9b26e1
  423804:	int3   
  423805:	push   ecx
  423806:	dec    edx
  423807:	mov    esp,DWORD PTR es:[eax]
  42380a:	lock call 0x2b632491
  423810:	js     0x42384d
  423812:	xchg   BYTE PTR [eax+eax*8+0x3a70db47],bh
  423819:	push   ds
  42381a:	in     eax,dx
  42381b:	js     0x4237ab
  42381d:	idiv   BYTE PTR [esi-0x6b]
  423820:	test   BYTE PTR [ebx-0x304530c3],cl
  423826:	add    ebx,0xf9d51dee
  42382c:	pop    ss
  42382d:	mov    ebp,0xfecd59a6
  423832:	cmp    eax,0x24130b38
  423837:	inc    edi
  423838:	outs   dx,BYTE PTR ds:[esi]
  423839:	ins    BYTE PTR es:[edi],dx
  42383a:	cmc    
  42383b:	call   0x38502070
  423840:	mov    edx,0x83c6c792
  423845:	icebp  
  423846:	push   0x977f4bb1
  42384b:	mov    ah,BYTE PTR [ebp-0x1362cc3b]
  423851:	push   ds
  423852:	(bad)  
  423853:	mov    cl,0x96
  423855:	xchg   ebp,eax
  423856:	test   eax,0xcceb08dd
  42385b:	(bad)  
  42385c:	lock mov bh,0xf3
  42385f:	mov    ecx,0x9e52cbcc
  423864:	pusha  
  423865:	dec    ecx
  423866:	mov    ds:0xf6ffd655,eax
  42386b:	retf   
  42386c:	mov    edi,0x16fa35ca
  423871:	int3   
  423872:	and    edi,esp
  423874:	aam    0x3d
  423876:	scas   eax,DWORD PTR es:[edi]
  423877:	add    DWORD PTR [eax],eax
  423879:	clc    
  42387a:	add    al,0x0
  42387c:	add    cl,cl
  42387e:	sbb    al,0xbe
  423880:	sti    
  423881:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  423883:	push   esp
  423884:	rcr    BYTE PTR [eax-0x55],1
  423887:	ins    DWORD PTR es:[edi],dx
  423888:	shl    DWORD PTR [ebx+ebx*8-0x57],1
  42388c:	dec    ebx
  42388d:	mov    ?,WORD PTR ds:0x1b6f6211
  423893:	lds    ebp,FWORD PTR [eax-0x2516dddc]
  423899:	cs jle 0x423917
  42389c:	cwde   
  42389d:	jge    0x42389e
  42389f:	sub    dl,BYTE PTR [ebx]
  4238a1:	push   edi
  4238a2:	inc    esi
  4238a3:	lea    ebx,[eax+0x78760f66]
  4238a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238aa:	mov    ebp,0x2916cf1b
  4238af:	popf   
  4238b0:	nop
  4238b1:	push   edx
  4238b2:	(bad)  
  4238b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238b4:	inc    ebx
  4238b6:	sub    DWORD PTR [ecx],ecx
  4238b8:	and    al,0xac
  4238ba:	push   esi
  4238bb:	push   edi
  4238bc:	das    
  4238bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238be:	xchg   edi,eax
  4238bf:	jnp    0x423863
  4238c1:	xlat   BYTE PTR ds:[ebx]
  4238c2:	push   ss
  4238c3:	push   0xc
  4238c5:	stos   DWORD PTR es:[edi],eax
  4238c6:	lea    esp,[eax]
  4238c8:	push   ds
  4238c9:	lock sbb eax,esi
  4238cc:	rol    DWORD PTR [ebp+0x59],0x94
  4238d0:	add    dl,BYTE PTR [edi]
  4238d2:	test   al,0x84
  4238d4:	ss out 0x92,al
  4238d7:	sub    eax,0xe4076bda
  4238dc:	hlt    
  4238dd:	rcr    ah,1
  4238df:	inc    eax
  4238e0:	mov    esp,0x6b895e9a
  4238e5:	and    bl,ah
  4238e7:	xchg   BYTE PTR [edx-0xa],bl
  4238ea:	aam    0xdb
  4238ec:	ret    
  4238ed:	or     al,0x34
  4238ef:	xlat   BYTE PTR ds:[ebx]
  4238f0:	adc    BYTE PTR [ecx+0x5e],bh
  4238f3:	pop    es
  4238f4:	pop    ds
  4238f5:	inc    edx
  4238f6:	cld    
  4238f7:	adc    al,0xd8
  4238f9:	call   0x1d0d:0xfa534370
  423900:	stos   DWORD PTR es:[edi],eax
  423901:	ret    0xecfc
  423904:	test   DWORD PTR [edx],0x14eed4c8
  42390a:	or     DWORD PTR [eax],esp
  42390c:	and    BYTE PTR [edx],al
  42390e:	dec    eax
  42390f:	sbb    edi,DWORD PTR [esi]
  423911:	lods   eax,DWORD PTR ds:[esi]
  423912:	das    
  423913:	add    eax,ebp
  423915:	xor    DWORD PTR [ebx],ebp
  423917:	jl     0x4238c7
  423919:	jecxz  0x423927
  42391b:	xchg   ecx,eax
  42391c:	pop    ecx
  42391d:	arpl   di,cx
  42391f:	mov    ds:0x6f43d0a2,al
  423924:	std    
  423925:	imul   ecx,DWORD PTR [ebp-0x70186311],0x2bb681ef
  42392f:	mov    dh,0x24
  423931:	pop    esp
  423932:	sbb    ecx,DWORD PTR [edi+0x36]
  423935:	jp     0x4238cc
  423937:	mov    esi,0xcc18433b
  42393c:	iret   
  42393d:	aas    
  42393e:	repz lea ebx,[eax+0x60529fa9]
  423945:	push   0xfffffff1
  423947:	mov    ds:0xef6beb0,al
  42394c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42394d:	dec    ecx
  42394e:	jbe    0x42397e
  423950:	loopne 0x4239ce
  423952:	sub    ah,bl
  423954:	xor    edx,DWORD PTR [edx+0x7b]
  423957:	loop   0x423900
  423959:	and    dl,cl
  42395b:	cdq    
  42395c:	xor    ebx,DWORD PTR [eax-0x797423bf]
  423962:	sbb    eax,0x91017b7f
  423967:	xchg   edi,eax
  423968:	push   ebx
  423969:	mov    dl,al
  42396b:	adc    eax,0xbcd644ed
  423970:	dec    ecx
  423971:	sti    
  423972:	pop    ecx
  423973:	lods   eax,DWORD PTR ds:[esi]
  423974:	mov    bl,0xce
  423976:	(bad)  
  423978:	enter  0xa0a3,0xaf
  42397c:	lds    ebp,FWORD PTR [ebx+0x31a0801e]
  423982:	aas    
  423983:	sbb    BYTE PTR [esi+0x62],0x42
  423987:	jg     0x423915
  423989:	data16 xor al,0xa0
  42398c:	sub    al,0xba
  42398e:	add    edi,DWORD PTR [eax+0x1ece87ee]
  423994:	popf   
  423995:	xchg   ecx,eax
  423996:	or     edi,ebp
  423998:	(bad)  
  423999:	cld    
  42399a:	jg     0x42397e
  42399c:	aam    0x89
  42399e:	call   0xf132:0x96b4598b
  4239a5:	cwde   
  4239a6:	hlt    
  4239a7:	popa   
  4239a8:	scas   eax,DWORD PTR es:[edi]
  4239a9:	sub    al,0x76
  4239ab:	ret    0xcdc8
  4239ae:	or     BYTE PTR [eax],bl
  4239b0:	pop    es
  4239b1:	addr16 (bad) 
  4239b3:	or     al,0x5e
  4239b5:	dec    ebx
  4239b6:	xchg   BYTE PTR [edi-0x43bb0909],dl
  4239bc:	jmp    0xe7c0:0x775d9301
  4239c3:	das    
  4239c4:	leave  
  4239c5:	cmp    al,dh
  4239c7:	adc    DWORD PTR [eax+edx*4-0x6569edb9],ecx
  4239ce:	aam    0xbf
  4239d0:	sti    
  4239d1:	dec    esi
  4239d2:	hlt    
  4239d3:	jnp    0x423a52
  4239d5:	int    0xc8
  4239d7:	int    0x45
  4239d9:	fs sbb al,0xba
  4239dc:	jl     0x423a1d
  4239de:	out    dx,eax
  4239df:	and    bh,BYTE PTR [eax+0x7c2739ea]
  4239e5:	jle    0x423a0c
  4239e7:	mov    ch,0x79
  4239e9:	xchg   edx,eax
  4239ea:	push   0xf6ca9285
  4239ef:	call   0xdb44:0xf95e9554
  4239f6:	ja     0x423a6d
  4239f8:	cmp    BYTE PTR [ebp+0x4efabd5c],al
  4239fe:	mov    ah,0x3
  423a00:	mov    eax,0x6c378120
  423a05:	cs aam 0x24
  423a08:	aad    0xac
  423a0a:	inc    esi
  423a0b:	cmp    ebp,ebp
  423a0d:	jle    0x4239ca
  423a0f:	xchg   BYTE PTR [edx+0x7a],dl
  423a12:	pop    ss
  423a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a14:	addr16 in al,0x61
  423a17:	je     0x423a18
  423a19:	int    0xce
  423a1b:	cmp    BYTE PTR [ebx],ah
  423a1d:	sbb    DWORD PTR [ecx+0x75b397b1],0x30f3530f
  423a27:	xlat   BYTE PTR ds:[ebx]
  423a28:	mov    cl,0x25
  423a2a:	inc    ebp
  423a2b:	sub    cl,BYTE PTR [ecx]
  423a2d:	sub    BYTE PTR [eax-0x6e],dh
  423a30:	int    0x22
  423a32:	fnstcw WORD PTR [ecx-0x1dc38544]
  423a38:	aaa    
  423a39:	mov    DWORD PTR [esp+eax*2-0x3f],ebx
  423a3d:	and    DWORD PTR [eax+0x4b],ecx
  423a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a41:	fwait
  423a42:	inc    esi
  423a43:	cmp    DWORD PTR [ecx+0x2aea8325],0x57687cb4
  423a4d:	inc    ebp
  423a4e:	mov    ds:0xdf628c55,al
  423a53:	inc    edi
  423a54:	sub    edx,ecx
  423a56:	loope  0x423a67
  423a58:	mov    ah,ah
  423a5a:	dec    ecx
  423a5b:	cmp    edi,DWORD PTR [edi+0x3ade5642]
  423a61:	jmp    0x643cf2d9
  423a66:	xor    al,bl
  423a68:	xchg   ecx,eax
  423a69:	lods   eax,DWORD PTR ds:[esi]
  423a6a:	push   esi
  423a6b:	lahf   
  423a6c:	sahf   
  423a6d:	xchg   BYTE PTR [ecx],bh
  423a6f:	loop   0x423a7c
  423a71:	inc    edi
  423a72:	iret   
  423a73:	jns    0x423a18
  423a75:	aas    
  423a76:	(bad)  
  423a78:	imul   esp,DWORD PTR [ecx+0x6f],0x2f
  423a7c:	mov    eax,0x8a2d4788
  423a81:	pop    ecx
  423a82:	ins    BYTE PTR es:[edi],dx
  423a83:	pop    ebp
  423a84:	retf   
  423a85:	aad    0x70
  423a87:	(bad)  
  423a88:	out    dx,eax
  423a89:	test   al,0x37
  423a8b:	adc    BYTE PTR [edi+0x2b519cb],bl
  423a91:	and    eax,esp
  423a93:	lds    eax,FWORD PTR [ebx-0x7d]
  423a96:	cmp    ax,0x5a35
  423a9a:	addr16 pop eax
  423a9c:	es js  0x423acf
  423a9f:	aaa    
  423aa0:	sbb    DWORD PTR [edx],edx
  423aa2:	pop    es
  423aa3:	mov    ?,WORD PTR [esi+0x26f7896]
  423aa9:	nop
  423aaa:	push   ds
  423aab:	jbe    0x423a3b
  423aad:	push   ds
  423aae:	lods   eax,DWORD PTR ds:[esi]
  423aaf:	stos   BYTE PTR es:[edi],al
  423ab0:	mov    esp,DWORD PTR [esi]
  423ab2:	ds xchg ecx,eax
  423ab4:	popa   
  423ab5:	sbb    al,0xcd
  423ab7:	mov    esi,0x3c56974b
  423abc:	icebp  
  423abd:	mov    bl,0x6f
  423abf:	enter  0x79e0,0x6b
  423ac3:	dec    ecx
  423ac4:	add    BYTE PTR [ebp-0xd],bh
  423ac7:	shl    ebx,1
  423ac9:	mov    eax,0xf9708ec9
  423ace:	out    0x4c,al
  423ad0:	add    DWORD PTR [esi-0xefb9349],ebp
  423ad6:	in     eax,0x7c
  423ad8:	sub    BYTE PTR [eax],dh
  423ada:	sar    BYTE PTR [ebx+0x60],0xbf
  423ade:	popf   
  423adf:	sub    al,0x88
  423ae1:	cmp    BYTE PTR [edx+0x2c],dh
  423ae4:	xor    eax,0x10a68edb
  423ae9:	in     eax,dx
  423aea:	sub    ah,BYTE PTR [edx-0x36c678cb]
  423af0:	or     BYTE PTR [edi],ah
  423af2:	das    
  423af3:	pop    ecx
  423af4:	lods   eax,DWORD PTR ds:[esi]
  423af5:	inc    ecx
  423af6:	lea    ebp,[eax+0x3049c4bb]
  423afc:	mov    dh,0x51
  423afe:	vpshldw zmm4{k6}{z},zmm2,zmm7,0x35
  423b05:	adc    eax,0xa5fb4cfc
  423b0a:	shr    BYTE PTR [ebx-0x7e50c270],cl
  423b10:	aas    
  423b11:	sub    ebx,DWORD PTR [edi-0x7bbde3f8]
  423b17:	sbb    al,0xe
  423b19:	pop    edi
  423b1a:	pop    edi
  423b1b:	mov    esi,0xc2962594
  423b20:	mov    bl,0xa9
  423b22:	pop    ecx
  423b23:	xor    al,0x84
  423b25:	mov    ds:0xd50e02a,eax
  423b2a:	push   ss
  423b2b:	jl     0x423b46
  423b2d:	cmp    BYTE PTR [esi-0x6bb97ca2],ah
  423b33:	sub    BYTE PTR [edi-0x13],ah
  423b36:	movaps xmm0,XMMWORD PTR [ebp-0x7e2195b5]
  423b3d:	jne    0x423b74
  423b3f:	scas   al,BYTE PTR es:[edi]
  423b40:	fisttp WORD PTR [eax+0x76cbcfa2]
  423b46:	pusha  
  423b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b48:	fsub   st,st(7)
  423b4a:	ins    DWORD PTR es:[edi],dx
  423b4b:	outs   dx,DWORD PTR ds:[esi]
  423b4c:	scas   al,BYTE PTR es:[edi]
  423b4d:	xchg   ebx,eax
  423b4e:	hlt    
  423b4f:	mov    esp,edx
  423b51:	out    dx,al
  423b52:	push   0x72840a10
  423b57:	dec    esp
  423b58:	jp     0x423afe
  423b5a:	adc    BYTE PTR [edx-0x5d40df68],0x90
  423b61:	pop    edi
  423b62:	jmp    0xf45:0x607cc44e
  423b69:	or     DWORD PTR [edi+edi*8-0x34],eax
  423b6d:	inc    ecx
  423b6e:	in     eax,dx
  423b6f:	inc    ebp
  423b70:	dec    ecx
  423b71:	dec    ebx
  423b72:	sbb    al,0xbc
  423b74:	sbb    DWORD PTR [eax-0x2ff3a313],0x6b4e7b3b
  423b7e:	xchg   edi,eax
  423b7f:	mov    eax,ds:0x4751a4b3
  423b84:	mov    ch,0x70
  423b86:	in     eax,dx
  423b87:	jno    0x423b90
  423b89:	cmc    
  423b8a:	jmp    0x8f697e29
  423b8f:	or     eax,0xf1515b6a
  423b94:	addr16 clc 
  423b96:	push   0x25c94c31
  423b9b:	cmp    bl,BYTE PTR [edx+0xa]
  423b9e:	call   0xf065c777
  423ba3:	inc    ecx
  423ba4:	push   ebx
  423ba5:	fcomp  QWORD PTR [ebx+edx*2]
  423ba8:	push   ss
  423ba9:	dec    ecx
  423baa:	outs   dx,BYTE PTR ds:[esi]
  423bab:	nop
  423bac:	adc    al,0xb7
  423bae:	mov    ?,WORD PTR [esi]
  423bb0:	jb     0x423c06
  423bb2:	mov    dl,0x32
  423bb4:	(bad)  
  423bb5:	ret    0x33fb
  423bb8:	jns    0x423be6
  423bba:	and    edx,ecx
  423bbc:	icebp  
  423bbd:	xchg   esp,eax
  423bbe:	stc    
  423bbf:	data16 cld 
  423bc1:	push   ss
  423bc2:	push   ds
  423bc3:	sahf   
  423bc4:	cmp    bh,BYTE PTR [ecx-0x59]
  423bc7:	in     eax,dx
  423bc8:	cs out 0xe3,eax
  423bcb:	into   
  423bcc:	adc    eax,0x2135868e
  423bd1:	idiv   BYTE PTR [esi-0x5f]
  423bd4:	push   edx
  423bd5:	je     0x423b57
  423bd7:	mov    eax,0xa04b6b5c
  423bdc:	push   0xffffffa6
  423bde:	xchg   BYTE PTR ds:0xed20c038,dh
  423be4:	pop    ebx
  423be5:	jmp    0x423bee
  423be7:	js     0x423bc7
  423be9:	add    ebp,ebx
  423beb:	test   eax,0xcc9da8b3
  423bf0:	mov    eax,ds:0x2b791f66
  423bf5:	loope  0x423b98
  423bf7:	(bad)  
  423bf8:	dec    esp
  423bf9:	xlat   BYTE PTR ds:[ebx]
  423bfa:	add    DWORD PTR [eax],edx
  423bfc:	or     esi,DWORD PTR [esi+ebp*1+0x2fdc0222]
  423c03:	add    dh,BYTE PTR [ebx+edi*8]
  423c06:	adc    BYTE PTR [esi],ch
  423c08:	ffree  st(1)
  423c0a:	dec    ebp
  423c0b:	sbb    eax,0x51f14edd
  423c10:	sub    eax,0x8ed6a462
  423c15:	jmp    0x815116a2
  423c1a:	test   al,0x9a
  423c1c:	or     BYTE PTR [esi+0x65],bh
  423c1f:	add    ecx,DWORD PTR [esi]
  423c21:	dec    edx
  423c22:	(bad)  
  423c23:	mov    eax,ds:0xf5f3327c
  423c28:	repnz scas eax,DWORD PTR es:[edi]
  423c2a:	xchg   ebx,eax
  423c2b:	pop    esi
  423c2c:	mov    eax,0x2d004d42
  423c31:	cmp    DWORD PTR [esp+ebp*8],esp
  423c34:	lea    eax,[ecx+0x38]
  423c37:	mov    ah,BYTE PTR [edx-0x3c]
  423c3a:	cmp    al,0x1b
  423c3c:	add    eax,0xd63f676c
  423c41:	iret   
  423c42:	xor    eax,0xaddd1c38
  423c47:	addr16 loop 0x423c76
  423c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c4b:	popf   
  423c4c:	xor    BYTE PTR [eax+0x2d],ah
  423c4f:	mov    dl,0x3f
  423c51:	out    dx,eax
  423c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c53:	push   esp
  423c54:	sar    DWORD PTR [esi+ebp*4],cl
  423c57:	push   0xffffffb6
  423c59:	stos   DWORD PTR es:[edi],eax
  423c5a:	aas    
  423c5b:	jb     0x423c84
  423c5d:	xchg   ebp,eax
  423c5e:	mov    ebp,0x90d49320
  423c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c64:	jne    0x423cbc
  423c66:	jns    0x423c4f
  423c68:	in     al,0x35
  423c6a:	xor    BYTE PTR [ecx-0x7d2ce54d],bh
  423c70:	mov    edx,0x89cd86d1
  423c75:	add    eax,0x96672fce
  423c7a:	scas   al,BYTE PTR es:[edi]
  423c7b:	adc    ecx,DWORD PTR [edi]
  423c7d:	xor    DWORD PTR [esi],ecx
  423c7f:	push   ebx
  423c80:	bound  esp,QWORD PTR [ecx]
  423c82:	jae    0x423c49
  423c84:	and    al,0x83
  423c86:	lds    ebp,FWORD PTR [eax]
  423c88:	imul   ebx,DWORD PTR [esi+eax*1],0xdba7e503
  423c8f:	sub    al,0xdb
  423c91:	sbb    BYTE PTR [esp+eax*4+0x59],0x3f
  423c96:	stc    
  423c97:	cmp    DWORD PTR [ebx+edi*2-0x22],ebp
  423c9b:	xor    DWORD PTR [ebx],esi
  423c9d:	lods   eax,DWORD PTR ds:[esi]
  423c9e:	clc    
  423c9f:	rcr    DWORD PTR [esi],cl
  423ca1:	loopne 0x423cbc
  423ca3:	pop    ebx
  423ca4:	jmp    0x423cb8
  423ca6:	inc    edx
  423ca7:	loopne 0x423cc1
  423ca9:	cmp    eax,0x324fbe8
  423cae:	popa   
  423caf:	xor    esp,DWORD PTR [edi]
  423cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cb2:	bound  esi,QWORD PTR [ebx]
  423cb4:	fadd   QWORD PTR [esi+0x21]
  423cb7:	inc    ebx
  423cb8:	cmp    dl,BYTE PTR [eax+ebx*2+0x4750f2c0]
  423cbf:	ja     0x423d38
  423cc1:	jnp    0x423cdd
  423cc3:	inc    eax
  423cc4:	leave  
  423cc5:	(bad)  
  423cc6:	jp     0x423c7f
  423cc8:	xchg   esi,eax
  423cc9:	loope  0x423cc9
  423ccb:	cmp    bl,BYTE PTR [ebx+0x4f]
  423cce:	xor    ch,cl
  423cd0:	mov    fs,WORD PTR [edx+ebx*2+0x8a20998]
  423cd7:	sbb    eax,0xf46c7871
  423cdc:	imul   esi,DWORD PTR [edx],0xffffffd1
  423cdf:	and    al,0xb8
  423ce1:	sbb    esp,DWORD PTR [edi-0x5dee8248]
  423ce7:	cmp    BYTE PTR [edx+ebp*1-0x12],ch
  423ceb:	adc    bl,BYTE PTR [eax+0x8]
  423cee:	loop   0x423d04
  423cf0:	repz mov dl,0x7f
  423cf3:	test   DWORD PTR [ebx+0x18fae8f9],edi
  423cf9:	fild   WORD PTR [ebx+0x5f783264]
  423cff:	inc    edx
  423d00:	adc    dh,BYTE PTR [ebp-0x69]
  423d03:	jg     0x423d45
  423d05:	jle    0x423c9e
  423d07:	mov    ebp,0x408e83c1
  423d0c:	mov    ebx,0xa5d02d2d
  423d11:	mov    bl,0x9
  423d13:	sub    DWORD PTR [ecx+0x65f6df4d],0xc0149dc7
  423d1d:	bound  edi,QWORD PTR [eax+esi*2+0xddaed8d]
  423d24:	out    dx,al
  423d25:	mov    ebp,DWORD PTR [esi+0x72]
  423d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d29:	jbe    0x423d45
  423d2b:	out    dx,al
  423d2c:	retf   
  423d2d:	sbb    ch,al
  423d2f:	lods   eax,DWORD PTR ds:[esi]
  423d30:	iret   
  423d31:	ins    BYTE PTR es:[edi],dx
  423d32:	push   ss
  423d33:	pop    edx
  423d34:	jle    0x423d6c
  423d36:	xchg   BYTE PTR [esi-0x2183860e],ah
  423d3c:	nop
  423d3d:	int    0x26
  423d3f:	sub    ebx,eax
  423d41:	pop    ecx
  423d42:	idiv   bl
  423d44:	shl    ah,0xfa
  423d47:	dec    edx
  423d48:	neg    BYTE PTR [ebx-0x74edeaf9]
  423d4e:	xlat   BYTE PTR ds:[ebx]
  423d4f:	les    edi,FWORD PTR [edi-0x5e9b792f]
  423d55:	xchg   edi,eax
  423d56:	sti    
  423d57:	push   esi
  423d58:	and    DWORD PTR [ecx+0x79],0xdbb884c6
  423d5f:	ror    edx,0xbc
  423d62:	xor    bh,BYTE PTR [eax-0x5b0d120]
  423d68:	hlt    
  423d69:	shl    BYTE PTR [eax+0x54379fd0],cl
  423d6f:	push   es
  423d70:	jnp    0x423de0
  423d72:	mov    eax,ds:0x97468ccb
  423d77:	daa    
  423d78:	cmp    esi,edi
  423d7a:	mov    ebx,0x8b96ff5e
  423d7f:	ss aaa 
  423d81:	mov    ah,0x80
  423d83:	nop
  423d84:	aas    
  423d85:	xor    eax,0xf80001b4
  423d8a:	add    al,0x0
  423d8c:	add    BYTE PTR [ebp+0x20],dl
  423d8f:	mov    al,0x24
  423d91:	pop    esp
  423d92:	retf   0x837e
  423d95:	and    BYTE PTR [edi],bl
  423d97:	lea    esi,[ebx+0xf]
  423d9a:	jnp    0x423e02
  423d9c:	cmp    eax,0x5cefc630
  423da1:	xor    BYTE PTR [edi],ch
  423da3:	dec    edx
  423da4:	(bad)  
  423da5:	leave  
  423da6:	loopne 0x423da4
  423da8:	fisubr DWORD PTR [ecx+0x5f]
  423dab:	test   BYTE PTR [edx-0x7b],al
  423dae:	jl     0x423d6a
  423db0:	js     0x423db8
  423db2:	mov    esp,esi
  423db4:	in     eax,dx
  423db5:	xor    ebp,edi
  423db7:	mov    ebp,0x302e7cd7
  423dbc:	fs jb  0x423d96
  423dbf:	jo     0x423dfd
  423dc1:	inc    eax
  423dc2:	sbb    DWORD PTR [ebp-0x72],eax
  423dc5:	sbb    BYTE PTR ds:0x2c090db8,dl
  423dcb:	cld    
  423dcc:	retf   0x474f
  423dcf:	aas    
  423dd0:	aaa    
  423dd1:	(bad)  [edx-0x165cdf18]
  423dd7:	jecxz  0x423e45
  423dd9:	jae    0x423dad
  423ddb:	cmp    BYTE PTR [ebp-0x1272198d],cl
  423de1:	mov    DWORD PTR ds:0x99ffe958,esp
  423de7:	les    ebp,FWORD PTR [ebx+0x26]
  423dea:	imul   eax,DWORD PTR [eax+0x6a3d763d],0xc
  423df1:	jp     0x423d9c
  423df3:	fsubr  DWORD PTR gs:[eax]
  423df6:	(bad)  
  423df7:	outs   dx,DWORD PTR ds:[esi]
  423df8:	outs   dx,BYTE PTR ds:[esi]
  423df9:	xchg   ecx,eax
  423dfa:	push   es
  423dfb:	mov    ebx,0xdc5c56b5
  423e00:	int    0xfe
  423e02:	pop    ecx
  423e03:	sbb    ebx,DWORD PTR [edx+esi*2]
  423e06:	in     eax,0xee
  423e08:	jne    0x423e6c
  423e0a:	sub    ebp,DWORD PTR [edx+0x323d42c6]
  423e10:	cwde   
  423e11:	xchg   al,bl
  423e13:	jmp    0x749:0x389cbf3f
  423e1a:	pop    edi
  423e1b:	pop    edi
  423e1c:	arpl   cx,bx
  423e1e:	dec    esi
  423e1f:	xor    DWORD PTR [ebx-0x1254dba7],ecx
  423e25:	pop    es
  423e26:	iret   
  423e27:	push   ds
  423e28:	mov    ds:0x56c6f71a,eax
  423e2d:	or     BYTE PTR [ebp+ecx*8+0xba185b9],bh
  423e34:	call   0x4bf4a7ef
  423e39:	inc    ecx
  423e3a:	jecxz  0x423eac
  423e3c:	stc    
  423e3d:	fstp   st(4)
  423e3f:	mov    DWORD PTR [edx-0x5a],eax
  423e42:	cli    
  423e43:	fistp  WORD PTR [esi]
  423e45:	sub    ecx,eax
  423e47:	adc    BYTE PTR [edi+0x1f],0x24
  423e4b:	mov    esp,0x1fdcb1fd
  423e50:	mov    ebx,DWORD PTR [ecx*4+0x36bab73e]
  423e57:	sbb    dl,BYTE PTR gs:[edx+0xd]
  423e5b:	cmp    eax,0x340d7a0a
  423e60:	jmp    0x3636:0xfab5aba5
  423e67:	sub    bl,BYTE PTR [edi+0x3a]
  423e6a:	mov    ch,0xef
  423e6c:	test   DWORD PTR [ecx],eax
  423e6e:	fdiv   st(6),st
  423e70:	fs pop ebp
  423e72:	lea    ebx,[edi+0xae31b06]
  423e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e79:	cmp    BYTE PTR [eax-0x4],dl
  423e7c:	scas   al,BYTE PTR es:[edi]
  423e7d:	inc    esi
  423e7e:	xor    BYTE PTR [esi+ecx*2+0x213e1e2c],al
  423e85:	ja     0x423e74
  423e87:	push   eax
  423e88:	cmp    al,BYTE PTR [esi+0x40d927f7]
  423e8e:	mov    bh,0xf6
  423e90:	out    0x4e,al
  423e92:	dec    edi
  423e93:	repz out dx,eax
  423e95:	in     eax,dx
  423e96:	mov    ah,0xa9
  423e98:	xchg   edx,eax
  423e99:	mov    ebp,0x6aa9573a
  423e9e:	int3   
  423e9f:	push   ecx
  423ea0:	jbe    0x423ead
  423ea2:	sub    al,bl
  423ea4:	or     DWORD PTR [ecx+edx*4-0x3c40ff40],esi
  423eab:	add    al,0xc1
  423ead:	shl    DWORD PTR [eax+0x19],1
  423eb0:	fisttp QWORD PTR [edi]
  423eb2:	mov    al,ds:0x290e4771
  423eb7:	pop    eax
  423eb8:	cs mov edi,0xb29be7c1
  423ebe:	inc    ebx
  423ebf:	ficom  WORD PTR [ebp+eax*4-0x2fbb8fc6]
  423ec6:	sub    DWORD PTR [esi-0x612c9fc2],eax
  423ecc:	out    0xaf,al
  423ece:	popf   
  423ecf:	adc    esi,DWORD PTR [edi-0x36f02317]
  423ed5:	lea    esi,[ebx]
  423ed7:	in     eax,dx
  423ed8:	in     al,0x78
  423eda:	pop    ds
  423edb:	mov    edx,0xbad501ee
  423ee0:	lahf   
  423ee1:	jnp    0x423e99
  423ee3:	pusha  
  423ee4:	push   ebp
  423ee5:	pop    esp
  423ee6:	pop    edi
  423ee7:	sub    al,0x1
  423ee9:	test   BYTE PTR [esi],dh
  423eeb:	pop    esi
  423eec:	mov    ebx,0xd163af07
  423ef1:	fdiv   QWORD PTR [ebx-0x26eafce2]
  423ef7:	ret    0xbc9f
  423efa:	and    eax,0x8a8e3c00
  423eff:	or     ah,bl
  423f01:	stos   BYTE PTR es:[edi],al
  423f02:	jmp    0xd9948fa0
  423f07:	das    
  423f08:	xchg   ebp,eax
  423f09:	mov    WORD PTR [ebp+0x77c7435d],ds
  423f0f:	inc    ebp
  423f10:	repnz adc al,cl
  423f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f14:	cmp    BYTE PTR [edx-0x39],ch
  423f17:	and    al,0x60
  423f19:	add    ebx,0x6f5b3f5f
  423f1f:	gs je  0x423ef1
  423f22:	mov    esp,fs
  423f24:	inc    esp
  423f25:	dec    esp
  423f26:	ja     0x423f7a
  423f28:	xor    eax,DWORD PTR [ecx]
  423f2a:	jae    0x423f46
  423f2c:	sbb    eax,0x4b4495cd
  423f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f32:	xor    esi,0xdc70b95c
  423f38:	stos   BYTE PTR es:[edi],al
  423f39:	in     al,0x75
  423f3b:	lea    esi,[ebp-0xf2aaa23]
  423f41:	mov    ?,WORD PTR [eax-0x7e]
  423f44:	mov    ch,0x3a
  423f46:	mov    ds:0x4fa5eaf4,eax
  423f4b:	mov    eax,0x7d927877
  423f50:	inc    ebp
  423f51:	gs sub ebx,edi
  423f54:	mov    bl,0xdb
  423f56:	mov    ah,0x3c
  423f58:	pushf  
  423f59:	push   es
  423f5a:	aam    0x53
  423f5c:	mov    dh,0x8e
  423f5e:	rcr    BYTE PTR [eax+eax*1],cl
  423f61:	push   es
  423f62:	push   ds
  423f63:	sub    al,bl
  423f65:	mov    al,0xd0
  423f67:	mov    ebp,0x6882e5be
  423f6c:	jb     0x423f49
  423f6e:	out    dx,al
  423f6f:	mov    bh,ah
  423f71:	aaa    
  423f72:	pop    ebx
  423f73:	dec    edi
  423f74:	shr    BYTE PTR [ebp-0x7a],1
  423f77:	hlt    
  423f78:	xor    BYTE PTR [esi+edx*2-0x3],dl
  423f7c:	or     al,bh
  423f7e:	inc    esi
  423f7f:	mov    ?,WORD PTR [edi]
  423f81:	ret    0x9549
  423f84:	and    cl,bh
  423f86:	sub    eax,0x90e62886
  423f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f8c:	inc    ebp
  423f8d:	inc    ecx
  423f8e:	bound  esi,QWORD PTR [ecx]
  423f90:	sub    bh,0x83
  423f93:	ins    BYTE PTR es:[edi],dx
  423f94:	or     esi,DWORD PTR [eax]
  423f96:	jno    0x423f87
  423f98:	inc    ebx
  423f99:	clc    
  423f9a:	add    BYTE PTR [ebx+0x40],ch
  423f9d:	xchg   esi,eax
  423f9e:	mov    dl,0xcf
  423fa0:	popa   
  423fa1:	and    eax,0xc5f5b86
  423fa6:	and    al,ch
  423fa8:	jnp    0x424023
  423faa:	mov    dl,0x33
  423fac:	mov    ebp,0xb5f42885
  423fb1:	push   edx
  423fb2:	jecxz  0x423fd7
  423fb4:	cmp    ecx,eax
  423fb6:	mov    bh,0xd1
  423fb8:	adc    eax,eax
  423fba:	dec    esp
  423fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fbc:	mov    edi,0xcec0fc6b
  423fc1:	dec    eax
  423fc2:	adc    eax,0x1e1b0260
  423fc7:	xchg   ebp,eax
  423fc8:	mov    bh,0xc
  423fca:	jno    0x424010
  423fcc:	stos   BYTE PTR es:[edi],al
  423fcd:	push   ds
  423fce:	or     DWORD PTR [ebx+esi*8],ecx
  423fd1:	mov    ebp,0x80be2486
  423fd6:	mov    bh,0x27
  423fd8:	sbb    dl,ah
  423fda:	xchg   ecx,eax
  423fdb:	and    bl,0x43
  423fde:	pusha  
  423fdf:	push   ebp
  423fe0:	(bad)  
  423fe1:	aaa    
  423fe2:	imul   ecx,DWORD PTR [eax-0x71e32cbc],0xdf4ceb92
  423fec:	nop
  423fed:	mov    edx,ebx
  423fef:	imul   edx,esp,0x4cb9a1e6
  423ff5:	std    
  423ff6:	rcr    BYTE PTR [esi+0x13],cl
  423ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ffa:	cld    
  423ffb:	mov    ebp,0x68f359b8
  424000:	xchg   dh,ch
  424002:	push   ecx
  424003:	mov    ds,ebx
  424005:	mov    edi,0x779a53f2
  42400a:	pop    ebp
  42400b:	shl    DWORD PTR [edi],1
  42400d:	ds push ebp
  42400f:	retf   0x1fdd
  424012:	not    cl
  424014:	aam    0xb7
  424016:	jg     0x423fc9
  424018:	mov    bh,0x18
  42401a:	pusha  
  42401b:	mov    esi,0x70266930
  424020:	sbb    BYTE PTR [ebx],0xe1
  424023:	in     eax,0x29
  424025:	pop    ebx
  424026:	mov    bh,0x93
  424028:	aas    
  424029:	dec    esp
  42402a:	push   ebx
  42402b:	cmp    al,0xba
  42402d:	mov    es,WORD PTR [ecx]
  42402f:	mov    WORD PTR [ecx-0x50eebe38],?
  424035:	sub    esi,ebp
  424037:	aam    0xe1
  424039:	retf   0x328b
  42403c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42403d:	sar    DWORD PTR [edx-0x12],cl
  424040:	push   0x14
  424042:	ins    BYTE PTR es:[edi],dx
  424043:	push   0x60cf99e0
  424048:	cld    
  424049:	lock fcmovbe st,st(2)
  42404c:	pop    edi
  42404d:	and    eax,DWORD PTR [edx+0x7a04ebe4]
  424053:	lods   eax,DWORD PTR ds:[esi]
  424054:	rcr    BYTE PTR [ebx],0xb9
  424057:	test   DWORD PTR [ecx],ebp
  424059:	xlat   BYTE PTR ds:[ebx]
  42405a:	aas    
  42405b:	into   
  42405c:	push   edx
  42405d:	sub    al,0x2a
  42405f:	es jns 0x424008
  424062:	lock mov ds:0x3ac5cc15,al
  424068:	sbb    BYTE PTR [ebp-0x49f632d6],0x6c
  42406f:	fwait
  424070:	pop    esp
  424071:	mov    ebp,0x9f757b1a
  424076:	iret   
  424077:	xchg   esp,eax
  424078:	ja     0x4240bd
  42407a:	jp     0x4240dd
  42407c:	icebp  
  42407d:	lods   al,BYTE PTR ds:[esi]
  42407e:	sbb    bp,WORD PTR [esi+ecx*4-0x341bd3e5]
  424086:	add    DWORD PTR [ecx+0x7f],0x4f
  42408a:	inc    ebp
  42408b:	cmp    BYTE PTR [edi],dh
  42408d:	inc    ebx
  42408e:	xchg   edi,eax
  42408f:	out    dx,eax
  424090:	xor    ebp,DWORD PTR [ebp+0x46328013]
  424096:	push   ss
  424097:	mov    ecx,0x72b775b6
  42409c:	ja     0x42405f
  42409e:	fisubr DWORD PTR [esi+0x53103b17]
  4240a4:	(bad)  
  4240a5:	mov    ah,0x1d
  4240a7:	(bad)  
  4240a8:	in     al,0x40
  4240aa:	adc    al,BYTE PTR [edi-0x42c009a3]
  4240b0:	mov    eax,ds:0x77e740e1
  4240b5:	xor    BYTE PTR [edi],cl
  4240b7:	(bad)  
  4240b9:	mul    BYTE PTR [eax]
  4240bb:	sub    eax,DWORD PTR [ebx-0x29aba2f8]
  4240c1:	push   ebp
  4240c2:	add    BYTE PTR [ebx+0x5e],ah
  4240c5:	mov    esp,edi
  4240c7:	mov    ah,0xfc
  4240c9:	outs   dx,DWORD PTR ds:[esi]
  4240ca:	mov    ebp,0x40d3a047
  4240cf:	fs pop es
  4240d1:	sahf   
  4240d2:	or     edi,DWORD PTR [eax+0x53037864]
  4240d8:	loope  0x424141
  4240da:	push   cs
  4240db:	adc    dh,bl
  4240dd:	xor    al,0x6
  4240df:	xchg   ecx,eax
  4240e0:	mov    al,ds:0x3ed7e7d4
  4240e5:	mov    ah,0x5b
  4240e7:	jae    0x42408c
  4240e9:	xchg   ecx,eax
  4240ea:	or     al,BYTE PTR ds:0x3c8f2f37
  4240f0:	sub    eax,0x6952689f
  4240f5:	int    0x61
  4240f7:	pop    esi
  4240f8:	sbb    al,0xc1
  4240fa:	in     al,0xb5
  4240fc:	ja     0x424151
  4240fe:	xchg   ebp,eax
  4240ff:	gs imul eax,ebx,0x15ae1b31
  424106:	xchg   DWORD PTR [ecx],esi
  424108:	inc    ecx
  424109:	inc    esi
  42410a:	sqrtps xmm5,xmm2
  42410d:	arpl   WORD PTR [edx-0x49],bp
  424110:	fimul  DWORD PTR [edx+ecx*8+0x64aa9ca7]
  424117:	sub    BYTE PTR ds:[eax+0x56338b9a],ah
  42411e:	mov    edx,0x37b404b7
  424123:	sub    al,BYTE PTR [esi+0x6ec6ef9c]
  424129:	xchg   edi,eax
  42412a:	jl     0x4240b1
  42412c:	out    0x3b,al
  42412e:	iret   
  42412f:	fmul   QWORD PTR [esp+esi*4]
  424132:	dec    eax
  424133:	or     al,0xcb
  424135:	xlat   BYTE PTR ds:[ebx]
  424136:	dec    ebx
  424137:	jns    0x4240c7
  424139:	jo     0x4241aa
  42413b:	jbe    0x4240c4
  42413d:	jb     0x4241b2
  42413f:	(bad)  
  424140:	xchg   ebx,eax
  424141:	sti    
  424142:	rcl    BYTE PTR [edi],1
  424144:	mov    al,ds:0x5ded8f75
  424149:	fmul   QWORD PTR [edx-0x124794be]
  42414f:	cwde   
  424150:	xor    ecx,DWORD PTR [ebp+edx*8+0x29]
  424154:	stc    
  424155:	ret    0xb2cb
  424158:	(bad)  
  42415a:	sbb    BYTE PTR [edx+0x3e],ah
  42415d:	je     0x4240f9
  42415f:	stos   BYTE PTR es:[edi],al
  424160:	jno    0x424186
  424162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424163:	mov    cl,0x5c
  424165:	retf   
  424166:	imul   ecx,DWORD PTR [edi-0x198d6fc4],0x1
  42416d:	gs clc 
  42416f:	or     BYTE PTR [edi+0x6b7f525f],0xb0
  424176:	daa    
  424177:	out    0x2f,al
  424179:	sub    ah,bh
  42417b:	push   ebx
  42417c:	sbb    al,0x24
  42417e:	js     0x424170
  424180:	scas   eax,DWORD PTR es:[edi]
  424181:	adc    eax,0x2c30339d
  424186:	pop    ebp
  424187:	outs   dx,BYTE PTR ds:[esi]
  424188:	(bad)  
  424189:	jmp    0x4241b5
  42418b:	sbb    al,BYTE PTR [esi-0x22305403]
  424191:	pop    ecx
  424192:	fwait
  424193:	imul   ebx
  424195:	mov    ds:0x1790e010,eax
  42419a:	inc    ebp
  42419b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42419c:	push   0x3c65de21
  4241a1:	or     eax,0x1939e5db
  4241a6:	fnstsw WORD PTR [ebx]
  4241a8:	cmp    ecx,ebp
  4241aa:	or     eax,0xf5036f4d
  4241af:	int3   
  4241b0:	shl    BYTE PTR [esi-0x48],1
  4241b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241b4:	sbb    DWORD PTR [ebx+esi*2-0x4fd7eef2],ebx
  4241bb:	imul   esp,DWORD PTR [edx-0x4],0x25
  4241bf:	xchg   edx,eax
  4241c0:	or     al,0xfb
  4241c2:	data16 rcr al,0x91
  4241c6:	add    al,BYTE PTR [ebp+0x1586f9cd]
  4241cc:	ret    0xe097
  4241cf:	test   eax,0x36cdd90b
  4241d4:	fwait
  4241d5:	mov    BYTE PTR [edx+0x19aa076b],ah
  4241db:	imul   ebx,DWORD PTR [eax],0x19
  4241de:	jnp    0x424197
  4241e0:	cmp    al,0x96
  4241e2:	pushf  
  4241e3:	mov    cl,0xb5
  4241e5:	pop    ds
  4241e6:	repnz and al,BYTE PTR [edx-0x58]
  4241ea:	popf   
  4241eb:	je     0x424191
  4241ed:	aad    0x6e
  4241ef:	sbb    BYTE PTR [edi],0xc9
  4241f2:	xor    al,0x62
  4241f4:	test   al,0xd4
  4241f6:	repnz mov eax,ds:0x3035bb80
  4241fc:	pop    ecx
  4241fd:	xor    al,ah
  4241ff:	aaa    
  424200:	inc    ebp
  424201:	add    al,BYTE PTR ds:0xd8f6b6bb
  424207:	div    DWORD PTR [eax]
  424209:	mov    bl,ah
  42420b:	in     eax,dx
  42420c:	jns    0x424256
  42420e:	inc    esp
  42420f:	rcl    BYTE PTR [esi+0x1a70149e],1
  424215:	push   0x7a6c09d3
  42421a:	mov    bh,0x8c
  42421c:	add    ecx,DWORD PTR [edi+ebp*4]
  42421f:	mov    WORD PTR [edi+0x3a8ee9c7],ds
  424225:	dec    ecx
  424226:	mov    esi,0x4cfb001e
  42422b:	cmp    DWORD PTR [edi-0x268119d2],0xffffffaf
  424232:	mov    eax,0x93d2f841
  424237:	jnp    0x424278
  424239:	push   ecx
  42423a:	shl    DWORD PTR [ebx+0x61],1
  42423d:	mov    eax,0x508413b0
  424242:	pop    es
  424243:	or     ah,BYTE PTR [edi-0x6fe88e97]
  424249:	pop    ebx
  42424a:	mov    ebx,esp
  42424c:	cld    
  42424d:	sar    DWORD PTR [edx+0x41e75c9b],cl
  424253:	shr    DWORD PTR [edi],cl
  424255:	push   ebx
  424256:	jl     0x424247
  424258:	es hlt 
  42425a:	pop    ss
  42425b:	fldenv [ebx-0x6d]
  42425e:	push   cs
  42425f:	lock lods eax,DWORD PTR ds:[esi]
  424261:	cld    
  424262:	mov    BYTE PTR [ecx-0x5e],dh
  424265:	mov    esi,esi
  424267:	push   cs
  424268:	outs   dx,DWORD PTR ds:[esi]
  424269:	xor    al,0xa2
  42426b:	call   0xf3fd:0x7075f416
  424272:	mov    WORD PTR [ebp-0x2d5d34f9],cs
  424278:	sbb    ebx,ecx
  42427a:	xchg   DWORD PTR [ecx+0x3d],esi
  42427d:	jl     0x424205
  42427f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424280:	adc    eax,0xc58aa898
  424285:	sar    al,cl
  424287:	data16 outs dx,BYTE PTR es:[esi]
  42428a:	mov    esi,0xedf7fcd2
  42428f:	ret    0x417a
  424292:	mov    eax,ds:0xb92d9007
  424297:	add    DWORD PTR [eax],eax
  424299:	clc    
  42429a:	add    al,0x0
  42429c:	add    BYTE PTR [ebx],dh
  42429e:	test   al,0xd3
  4242a0:	or     edi,DWORD PTR [esi-0x38]
  4242a3:	cmp    dh,BYTE PTR [ebx+ebx*4+0x16333573]
  4242aa:	scas   eax,DWORD PTR es:[edi]
  4242ab:	(bad)  
  4242ac:	lods   eax,DWORD PTR ds:[esi]
  4242ad:	mov    ebx,edx
  4242af:	das    
  4242b0:	sbb    eax,DWORD PTR [esi-0x32]
  4242b3:	push   cs
  4242b4:	push   fs
  4242b6:	ja     0x4242c2
  4242b8:	cmc    
  4242b9:	mov    esp,0xfc4ab9eb
  4242be:	aad    0xcc
  4242c0:	and    eax,DWORD PTR [edx-0x47e659c]
  4242c6:	or     DWORD PTR [esi],ebx
  4242c8:	psubsb mm0,mm2
  4242cb:	test   DWORD PTR [ecx-0x30],edi
  4242ce:	xchg   esi,eax
  4242cf:	fmul   st(2),st
  4242d1:	arpl   ax,sp
  4242d3:	xchg   ebp,eax
  4242d4:	leave  
  4242d5:	dec    edi
  4242d6:	jmp    0x424285
  4242d8:	scas   al,BYTE PTR es:[edi]
  4242d9:	enter  0x221b,0xbc
  4242dd:	pushf  
  4242de:	pop    edx
  4242df:	mov    al,0x52
  4242e1:	pop    ebp
  4242e2:	ins    BYTE PTR es:[edi],dx
  4242e3:	or     al,BYTE PTR [eax+0x3c05a7dc]
  4242e9:	sbb    dh,BYTE PTR [edi]
  4242eb:	dec    ebp
  4242ec:	or     al,0x59
  4242ee:	pop    edi
  4242ef:	lods   eax,DWORD PTR ds:[esi]
  4242f0:	out    dx,eax
  4242f1:	in     eax,dx
  4242f2:	data16 js 0x42427b
  4242f5:	mov    dh,0x15
  4242f7:	sub    al,0x5b
  4242f9:	je     0x4242cd
  4242fb:	repnz in al,0x42
  4242fe:	(bad)  
  4242ff:	in     eax,dx
  424300:	data16 aaa 
  424302:	sahf   
  424303:	frstor [edi-0x5fdfd308]
  424309:	pop    edi
  42430a:	mov    ecx,0x1c24eb8f
  42430f:	ins    DWORD PTR es:[edi],dx
  424310:	je     0x424388
  424312:	test   eax,0x7887ea8e
  424317:	pop    esp
  424318:	mov    WORD PTR [ebx+0x336107d],gs
  42431e:	int    0x6e
  424320:	into   
  424321:	enter  0x3bf4,0xf1
  424325:	ins    BYTE PTR es:[edi],dx
  424326:	push   ss
  424327:	and    dl,al
  424329:	mov    esi,0x990b2d89
  42432e:	or     eax,0x98a9708c
  424333:	inc    edx
  424334:	iret   
  424335:	adc    dl,BYTE PTR [ecx]
  424337:	mov    edi,0x5cc1aa8a
  42433c:	ficomp DWORD PTR [ebp+0xa]
  42433f:	and    BYTE PTR [ecx],dl
  424341:	data16 into 
  424343:	pushf  
  424344:	stos   DWORD PTR es:[edi],eax
  424345:	lods   eax,DWORD PTR ds:[esi]
  424346:	std    
  424347:	lds    ecx,FWORD PTR [esi]
  424349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42434a:	fadd   QWORD PTR [ebp-0x1c]
  42434d:	mov    WORD PTR [edi-0x46],cx
  424351:	cmp    BYTE PTR [ebx+eiz*2-0x5de44885],cl
  424358:	ss mov dh,0x20
  42435b:	js     0x4243be
  42435d:	call   DWORD PTR [edi]
  42435f:	lock jg 0x4243e1
  424362:	loopne 0x424345
  424364:	inc    edx
  424365:	push   es
  424366:	retf   0x5092
  424369:	es js  0x424367
  42436c:	fistp  WORD PTR [edi+0x45a15274]
  424372:	add    BYTE PTR [ecx],0xe4
  424375:	sub    cl,BYTE PTR [esi+0x2a]
  424378:	arpl   WORD PTR [edx],ax
  42437a:	iret   
  42437b:	outs   dx,DWORD PTR ds:[esi]
  42437c:	push   ebp
  42437d:	sbb    esi,esp
  42437f:	std    
  424380:	cmp    dl,BYTE PTR [ebp+0x3d1931e7]
  424386:	xchg   edi,eax
  424387:	lods   eax,DWORD PTR ds:[esi]
  424388:	mov    edx,DWORD PTR [ecx-0x5746f13e]
  42438e:	cli    
  42438f:	pop    esp
  424390:	pop    es
  424391:	xor    al,cl
  424393:	dec    ebx
  424394:	and    BYTE PTR [ecx+0x628e2ef4],ch
  42439a:	mov    ebx,0xf3509a94
  42439f:	(bad)  
  4243a0:	sbb    DWORD PTR [ecx],esp
  4243a2:	mov    ds:0x4479835d,eax
  4243a7:	or     BYTE PTR [edx+0x1e],dl
  4243aa:	ret    0x4cc2
  4243ad:	dec    ebp
  4243ae:	or     DWORD PTR [edi-0x53263ce7],0xa596d4a8
  4243b8:	add    al,0x23
  4243ba:	(bad)  
  4243bb:	push   edi
  4243bc:	not    DWORD PTR [ebx]
  4243be:	add    esp,DWORD PTR [esi+ebp*2+0x68164d5d]
  4243c5:	mov    ebx,0xd724fa27
  4243ca:	mov    bh,0x99
  4243cc:	inc    edx
  4243cd:	cmp    DWORD PTR [edi-0x7e16e264],edi
  4243d3:	push   ebx
  4243d4:	movhps QWORD PTR [ecx],xmm3
  4243d7:	cmp    dh,BYTE PTR [esi-0x56]
  4243da:	pop    eax
  4243db:	imul   edx,DWORD PTR [ecx+0x5ce309ce],0x73
  4243e2:	loope  0x424378
  4243e4:	hlt    
  4243e5:	icebp  
  4243e6:	inc    ecx
  4243e7:	hlt    
  4243e8:	inc    eax
  4243e9:	mov    esi,0x707f90c7
  4243ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243ef:	mov    eax,tr5
  4243f2:	iret   
  4243f3:	xor    eax,0x9954ac23
  4243f8:	and    eax,0x3bb1c047
  4243fd:	sbb    DWORD PTR [eax+0x4a],esp
  424400:	jo     0x4243fc
  424402:	inc    esi
  424403:	pop    ss
  424404:	mov    ebx,0x2a05360b
  424409:	xor    DWORD PTR [edx],eax
  42440b:	xchg   ebp,eax
  42440c:	aaa    
  42440d:	ret    
  42440e:	lock xchg edx,eax
  424410:	ret    
  424411:	fcom   st(7)
  424413:	sar    DWORD PTR [edx+0x23dcf552],0x58
  42441a:	mov    ds,eax
  42441c:	loope  0x4243e0
  42441e:	or     ecx,DWORD PTR ds:0x7d42969a
  424424:	int3   
  424425:	jmp    0x4243a9
  424427:	cmp    al,BYTE PTR [ebx+0x63]
  42442a:	cmp    eax,0x228237f8
  42442f:	sub    esi,esi
  424431:	push   esi
  424432:	jmp    0x424484
  424434:	inc    ebx
  424435:	push   ds
  424436:	adc    ah,BYTE PTR [esi+0x23145293]
  42443c:	leave  
  42443d:	lds    ebx,FWORD PTR [edx+0x4]
  424440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424441:	cdq    
  424442:	mov    edi,0x2e9f956a
  424447:	lock sbb al,0x39
  42444a:	call   0xff4e:0xeb5a61db
  424451:	inc    ebx
  424452:	push   ebx
  424453:	scas   eax,DWORD PTR es:[edi]
  424454:	xchg   esi,eax
  424455:	or     BYTE PTR [esi-0x46],dh
  424458:	pop    edx
  424459:	inc    ecx
  42445a:	push   0x5d
  42445c:	loope  0x4244b3
  42445e:	hlt    
  42445f:	movsx  esp,bl
  424462:	cld    
  424463:	es jmp 0x40ce:0x1fde278
  42446b:	adc    DWORD PTR [edi+0x6c32546],ebp
  424471:	inc    ebp
  424472:	(bad)  
  424473:	sbb    esp,edx
  424475:	xchg   al,al
  424477:	pusha  
  424478:	in     al,dx
  424479:	call   0x1feecd20
  42447e:	pushf  
  42447f:	icebp  
  424480:	sbb    al,0x24
  424482:	out    0x2d,eax
  424484:	ror    DWORD PTR [esi+0x4],0x27
  424488:	sar    DWORD PTR [ecx+ebx*4-0x5ae51d37],0x1f
  424490:	add    al,0x9c
  424492:	sbb    al,0x86
  424494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424495:	inc    edx
  424496:	pushf  
  424497:	sub    DWORD PTR [ecx+0x41b3f54],ecx
  42449d:	and    edx,DWORD PTR [esi+ecx*4-0x67]
  4244a1:	or     eax,eax
  4244a3:	sbb    eax,0xa1392f5b
  4244a8:	inc    eax
  4244a9:	sti    
  4244aa:	and    DWORD PTR [ecx-0x40],esi
  4244ad:	pop    es
  4244ae:	test   eax,0xd8399b7
  4244b3:	dec    ebx
  4244b4:	fistp  DWORD PTR [eax+esi*1+0x4c]
  4244b8:	cmc    
  4244b9:	mov    eax,ds:0x8fcf0d33
  4244be:	push   esi
  4244bf:	push   edx
  4244c0:	inc    esi
  4244c1:	push   eax
  4244c2:	and    BYTE PTR [ebx-0x47],dh
  4244c5:	inc    ecx
  4244c6:	jg     0x42452e
  4244c8:	call   0x90ecdd08
  4244cd:	pop    edx
  4244ce:	push   ebp
  4244cf:	test   BYTE PTR [edx],ch
  4244d1:	and    DWORD PTR [eax-0x3c32c4eb],ebp
  4244d7:	(bad)  
  4244d8:	loopne 0x4244c9
  4244da:	(bad)  
  4244db:	or     ebx,DWORD PTR [esi+0x73]
  4244de:	sbb    edi,ecx
  4244e0:	dec    edi
  4244e1:	out    0x77,al
  4244e3:	imul   esp,DWORD PTR [esi-0x27db0340],0xc0abbb8d
  4244ed:	xor    ah,dh
  4244ef:	pop    ds
  4244f0:	adc    eax,0x161d0835
  4244f5:	pop    ds
  4244f6:	cs push edi
  4244f8:	das    
  4244f9:	sbb    eax,0xf186e23d
  4244fe:	sbb    edx,DWORD PTR [eax]
  424500:	lds    ebx,FWORD PTR [edx-0x4b]
  424503:	in     al,dx
  424504:	or     DWORD PTR [edx+0x2bc39540],edx
  42450a:	xor    eax,0x5824da30
  42450f:	mov    ebx,0xbc1f3550
  424514:	mov    DWORD PTR [esi+0x50d49223],edi
  42451a:	mov    edi,DWORD PTR [edx]
  42451c:	inc    edx
  42451d:	loope  0x4244cd
  42451f:	push   eax
  424520:	push   edi
  424521:	adc    BYTE PTR [esi-0x434a262c],bh
  424527:	lods   al,BYTE PTR ds:[esi]
  424528:	scas   eax,DWORD PTR es:[edi]
  424529:	jns    0x424580
  42452b:	push   es
  42452c:	sbb    ebp,DWORD PTR [edi+0x67]
  42452f:	jmp    0x42453e
  424531:	cmp    ah,bh
  424533:	adc    eax,0xf0c2c016
  424538:	fild   QWORD PTR [edx]
  42453a:	push   esp
  42453c:	dec    eax
  42453d:	cli    
  42453e:	out    dx,eax
  42453f:	clc    
  424540:	pushf  
  424541:	push   ebx
  424542:	dec    esp
  424543:	ds xchg edx,eax
  424545:	test   DWORD PTR ds:[edx+0x38],edx
  424549:	dec    edx
  42454a:	sti    
  42454b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42454c:	stos   BYTE PTR es:[edi],al
  42454d:	(bad)  
  42454e:	pop    edi
  42454f:	adc    eax,0xa6863933
  424554:	sbb    DWORD PTR [edi+0x44da3a01],0x64
  42455b:	daa    
  42455c:	xchg   esp,eax
  42455d:	pushf  
  42455e:	jg     0x424560
  424560:	pop    edx
  424561:	push   ss
  424562:	sub    eax,0x98fe9548
  424567:	test   eax,0x2841cd62
  42456c:	jb     0x42451f
  42456e:	xchg   DWORD PTR [ebx+0xe22dce2],ebp
  424574:	push   ds
  424575:	out    dx,al
  424576:	xor    ebp,DWORD PTR [eax]
  424578:	jbe    0x4245dc
  42457a:	jge    0x424570
  42457c:	(bad)  
  42457d:	and    eax,0x90a94560
  424582:	mov    WORD PTR [esi-0x7f],?
  424585:	adc    esi,DWORD PTR [esp+ebp*1-0x1b]
  424589:	out    0x65,eax
  42458b:	mov    dl,0x2e
  42458d:	pop    ebx
  42458e:	jl     0x424529
  424590:	cmc    
  424591:	adc    eax,0xe7db6770
  424596:	and    DWORD PTR ds:0xf04756db,0x63
  42459d:	mov    bl,0x2a
  42459f:	iret   
  4245a0:	jmp    0x42456c
  4245a2:	mov    al,ds:0xf3acadcf
  4245a7:	jne    0x424544
  4245a9:	jne    0x4245b7
  4245ab:	ins    BYTE PTR es:[edi],dx
  4245ac:	int3   
  4245ad:	or     cl,ch
  4245af:	outs   dx,BYTE PTR ds:[esi]
  4245b0:	xlat   BYTE PTR ds:[ebx]
  4245b1:	mov    cl,0xa0
  4245b3:	std    
  4245b4:	sub    eax,0x5553f0f5
  4245b9:	int    0xc9
  4245bb:	nop
  4245bc:	add    eax,0xe0169cd6
  4245c1:	pop    esp
  4245c2:	xor    BYTE PTR [esi+ebx*1],dh
  4245c5:	ss mov ebx,0x2bcf36b5
  4245cb:	mov    al,0xaf
  4245cd:	cdq    
  4245ce:	push   cs
  4245cf:	add    al,0xa5
  4245d1:	fisttp QWORD PTR [ecx+0x56]
  4245d4:	xchg   edi,eax
  4245d5:	mov    ch,0xea
  4245d7:	cld    
  4245d8:	cs jle 0x424652
  4245db:	sub    bh,BYTE PTR [edx]
  4245dd:	xchg   edx,eax
  4245de:	int    0x85
  4245e0:	scas   eax,DWORD PTR es:[edi]
  4245e1:	xlat   BYTE PTR ds:[ebx]
  4245e2:	push   esp
  4245e3:	cmp    DWORD PTR [ebx+ebx*1],0xe77dc686
  4245ea:	retf   0xadf9
  4245ed:	adc    esp,DWORD PTR [edx-0x640c29d0]
  4245f3:	add    BYTE PTR [edi],ch
  4245f5:	or     ebp,DWORD PTR [ebx+0x1c]
  4245f8:	(bad)  
  4245fa:	(bad)  
  4245fb:	pop    ds
  4245fc:	and    al,0x11
  4245fe:	inc    eax
  4245ff:	xor    BYTE PTR [ebx-0x55],ch
  424602:	fmul   st,st(0)
  424604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424605:	xchg   edi,eax
  424606:	and    esp,edx
  424608:	test   eax,0xd61cca2f
  42460d:	imul   edi,DWORD PTR [ecx],0x29ace8b1
  424613:	jns    0x424636
  424615:	mov    BYTE PTR [esi],bh
  424617:	ja     0x424685
  424619:	pop    edi
  42461a:	adc    al,0x49
  42461c:	aad    0x67
  42461e:	jp     0x4245fc
  424620:	sbb    al,0xac
  424622:	add    edx,DWORD PTR [ebx+0x43453dc3]
  424628:	cs mov eax,0xef094100
  42462e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42462f:	jge    0x4245f5
  424631:	dec    esp
  424632:	imul   esp,DWORD PTR [eax],0xffffff83
  424635:	xlat   BYTE PTR ds:[ebx]
  424636:	scas   al,BYTE PTR es:[edi]
  424637:	add    ah,BYTE PTR [edx+0x42]
  42463a:	adc    DWORD PTR [edx+ebx*1],0xecc02819
  424641:	mov    cl,0x99
  424643:	pop    es
  424644:	jno    0x4245e8
  424646:	pop    edi
  424647:	lock mov bl,0xc2
  42464a:	mov    ah,0x50
  42464c:	inc    edi
  42464d:	dec    eax
  42464e:	jle    0x42460e
  424650:	adc    al,0x46
  424652:	ins    BYTE PTR es:[edi],dx
  424653:	or     ecx,DWORD PTR [eax]
  424655:	(bad)  
  424656:	or     al,0xd8
  424658:	xor    BYTE PTR [ecx-0x626deace],dh
  42465e:	(bad)  
  42465f:	adc    bl,dl
  424661:	call   0x2605a00c
  424666:	mov    bl,0xea
  424668:	aam    0xad
  42466a:	fidivr DWORD PTR [ecx+0x1e]
  42466d:	add    eax,0x93801eff
  424672:	mov    ds:0xb4af7d76,al
  424677:	pop    edi
  424678:	jmp    0x90c7d913
  42467d:	or     eax,0x5d596efe
  424682:	sar    eax,0x94
  424685:	dec    esp
  424686:	or     ch,ch
  424688:	xor    al,0x4a
  42468a:	and    eax,0xd8c14180
  42468f:	mov    ds:0x56f9f9f6,al
  424694:	xchg   esi,eax
  424695:	xchg   ebp,eax
  424696:	mov    dh,ah
  424698:	push   ecx
  424699:	rcl    BYTE PTR [esi],0x45
  42469c:	popa   
  42469d:	pop    ss
  42469e:	push   ebp
  42469f:	int    0xa6
  4246a1:	xor    bl,BYTE PTR [edi+0x61]
  4246a4:	call   0x7c4587c6
  4246a9:	popf   
  4246aa:	test   al,0x11
  4246ac:	daa    
  4246ad:	cmp    DWORD PTR [ebx-0x6e],0xffffffc4
  4246b1:	rol    BYTE PTR [edx],1
  4246b3:	dec    ebx
  4246b4:	dec    ecx
  4246b5:	nop
  4246b6:	fnsave [edx]
  4246b8:	sti    
  4246b9:	jne    0x424666
  4246bb:	mov    bh,0xfd
  4246bd:	adc    ah,dh
  4246bf:	inc    edx
  4246c0:	ja     0x4246cb
  4246c2:	dec    ecx
  4246c3:	push   cs
  4246c4:	adc    BYTE PTR [edi+0x44691bd],al
  4246ca:	stos   DWORD PTR es:[edi],eax
  4246cb:	xor    al,0xa4
  4246cd:	add    al,0xda
  4246cf:	pusha  
  4246d0:	mov    BYTE PTR ds:0xeeab7743,cl
  4246d6:	xchg   ebx,esi
  4246d8:	mov    ah,0xf9
  4246da:	jmp    0x69c6752
  4246df:	adc    eax,0x48084b8
  4246e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246e5:	int    0x10
  4246e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246e8:	or     ebx,edi
  4246ea:	fwait
  4246eb:	(bad)  
  4246ec:	iret   
  4246ed:	push   es
  4246ee:	addr16 sbb cl,dl
  4246f1:	pop    esi
  4246f2:	test   BYTE PTR [ebx-0x1c2d2871],al
  4246f8:	and    al,BYTE PTR [edx+0x64]
  4246fb:	iret   
  4246fc:	add    al,0xd8
  4246fe:	jle    0x424712
  424700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424701:	jmp    0x9b05:0x60d31f5b
  424708:	iret   
  424709:	inc    esp
  42470a:	inc    esp
  42470b:	inc    esp
  42470c:	arpl   WORD PTR [ebp+0x1519d607],si
  424712:	(bad)  
  424713:	xchg   ecx,eax
  424714:	mov    ebp,0x2c6854aa
  424719:	outs   dx,BYTE PTR ds:[esi]
  42471a:	stos   BYTE PTR es:[edi],al
  42471b:	mov    BYTE PTR [edi-0x10089938],0x80
  424722:	sar    BYTE PTR [esi],cl
  424724:	nop
  424725:	or     DWORD PTR [eax+eax*8+0x6],0x3b63d145
  42472d:	cdq    
  42472e:	sbb    ah,BYTE PTR [edx]
  424730:	push   edx
  424731:	in     al,0x11
  424733:	push   ds
  424734:	pop    ss
  424735:	ror    DWORD PTR [ebx-0x192cdb2d],1
  42473b:	daa    
  42473c:	bound  edi,QWORD PTR [edi]
  42473e:	test   BYTE PTR [esi],0x40
  424741:	jns    0x42472c
  424743:	mov    dh,0x64
  424745:	mov    di,0xf284
  424749:	push   eax
  42474a:	ror    DWORD PTR [edx+edi*1+0x19],1
  42474e:	fs mov dh,0xd
  424751:	sahf   
  424752:	pop    ecx
  424753:	loope  0x4246ec
  424755:	push   edi
  424756:	jg     0x424785
  424758:	xchg   esi,eax
  424759:	jne    0x424733
  42475b:	dec    esp
  42475c:	pop    ds
  42475d:	loop   0x424793
  42475f:	mov    ah,0x49
  424761:	lds    edx,FWORD PTR [eax]
  424763:	pushf  
  424764:	mov    ah,0x4d
  424766:	jbe    0x4247bf
  424768:	mov    dl,0x32
  42476a:	ins    DWORD PTR es:[edi],dx
  42476b:	sub    eax,0xa14b6f33
  424770:	aas    
  424771:	cmp    DWORD PTR [eax-0x4f],eax
  424774:	lea    eax,[ecx]
  424776:	daa    
  424777:	fiadd  DWORD PTR ds:0x13bd3b83
  42477d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42477e:	repnz or bh,BYTE PTR [esi-0x45ff5794]
  424785:	ret    0xdffe
  424788:	stos   BYTE PTR es:[edi],al
  424789:	mov    ch,0x22
  42478b:	dec    ebp
  42478c:	inc    eax
  42478d:	stos   BYTE PTR es:[edi],al
  42478e:	sbb    esi,DWORD PTR ds:0x41ef7e2
  424794:	pop    ebp
  424795:	sub    al,0xda
  424797:	iret   
  424798:	cmp    bh,0x95
  42479b:	outs   dx,DWORD PTR ds:[esi]
  42479c:	(bad)  
  42479d:	stc    
  42479e:	jmp    0x424795
  4247a0:	xor    al,0x71
  4247a2:	pop    ebx
  4247a3:	fxch   st(0)
  4247a5:	and    eax,0xf80001be
  4247aa:	add    al,0x0
  4247ac:	add    BYTE PTR [ebx-0x70],dh
  4247af:	pop    ebx
  4247b0:	dec    eax
  4247b1:	fsub   QWORD PTR [ecx+0x3e834b62]
  4247b7:	das    
  4247b8:	push   0x7f
  4247ba:	push   eax
  4247bb:	aad    0x50
  4247bd:	gs fst st(7)
  4247c0:	ja     0x42474b
  4247c2:	adc    DWORD PTR [edi-0x6e],edx
  4247c5:	cmp    edi,DWORD PTR [eax+eiz*2-0x5e]
  4247c9:	mov    al,0xb5
  4247cb:	lods   al,BYTE PTR ds:[esi]
  4247cc:	sbb    edx,DWORD PTR [eax]
  4247ce:	or     DWORD PTR [edi+0x46],0xc3628cc3
  4247d5:	inc    esi
  4247d6:	sub    dl,BYTE PTR [ecx+ebx*2+0x417dc2c0]
  4247dd:	pop    edi
  4247de:	ja     0x4247a2
  4247e0:	cmp    dl,BYTE PTR [eax]
  4247e2:	dec    ecx
  4247e3:	add    esi,DWORD PTR [edx]
  4247e5:	pop    ebp
  4247e6:	pushf  
  4247e7:	loope  0x4247ca
  4247e9:	push   esp
  4247ea:	scas   al,BYTE PTR es:[edi]
  4247eb:	push   ds
  4247ec:	(bad)  
  4247ed:	pop    eax
  4247ee:	push   cs
  4247ef:	push   es
  4247f0:	imul   edx,esi,0xf
  4247f3:	jmp    0x4247ec
  4247f5:	dec    ebx
  4247f6:	arpl   WORD PTR [ecx+0x3b58e363],dx
  4247fc:	push   ebx
  4247fd:	push   0x6d56fe40
  424802:	aad    0xd9
  424804:	inc    esi
  424805:	mov    DWORD PTR [eax],esp
  424807:	dec    esp
  424808:	bound  edx,QWORD PTR [ecx-0x1db736ba]
  42480e:	push   cs
  42480f:	mov    ecx,DWORD PTR [eax-0x519be1fa]
  424815:	cmp    DWORD PTR [esi-0x514dc4cd],esi
  42481b:	adc    al,0x65
  42481d:	jecxz  0x42483d
  42481f:	in     al,dx
  424820:	cmp    eax,0x386abf1a
  424825:	sbb    al,0xa8
  424827:	loope  0x424844
  424829:	push   0x6e
  42482b:	mov    ?,WORD PTR [esi]
  42482d:	push   ebp
  42482e:	sbb    eax,0xf8e6b27d
  424833:	jno    0x424868
  424835:	loopne 0x4247bd
  424837:	ret    0x2282
  42483a:	xchg   ecx,eax
  42483b:	xor    BYTE PTR [edi+0x53],0x14
  42483f:	ret    
  424840:	(bad)  
  424841:	iret   
  424842:	and    BYTE PTR [edx+0x59],bh
  424845:	lea    ebx,[edx-0x52cbd4d6]
  42484b:	mov    al,0xfe
  42484d:	jo     0x424856
  42484f:	dec    esp
  424850:	sahf   
  424851:	xlat   BYTE PTR ds:[ebx]
  424852:	and    al,0x3
  424854:	add    ebp,DWORD PTR [edi-0x35]
  424857:	bnd jb 0x424880
  42485a:	icebp  
  42485b:	scas   eax,DWORD PTR es:[edi]
  42485c:	jg     0x424810
  42485e:	add    BYTE PTR [eax+0xa29b0e8],bh
  424864:	mov    ebp,0x95c1c457
  424869:	clc    
  42486a:	and    cl,bh
  42486c:	mov    ecx,0x469c6f15
  424871:	retf   
  424872:	push   ss
  424873:	mov    al,0x40
  424875:	push   edi
  424876:	mov    ah,0x5e
  424878:	pop    esp
  424879:	sbb    esp,esi
  42487b:	add    BYTE PTR [ebx],dh
  42487d:	push   cs
  42487e:	ror    BYTE PTR [ebp+0x1a],cl
  424881:	mov    ch,0xf3
  424883:	jmp    0x328b17d6
  424888:	and    BYTE PTR [eax+0x2c46e99c],bl
  42488e:	pop    esi
  42488f:	imul   esi,DWORD PTR [ebp+0x3a91a56c],0x4a5fca77
  424899:	mov    ah,0x81
  42489b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42489c:	push   0x41
  42489e:	loopne 0x42491a
  4248a0:	cwde   
  4248a1:	lea    edx,[ecx-0x7a]
  4248a4:	pop    esp
  4248a5:	xchg   edi,eax
  4248a6:	fist   DWORD PTR cs:[eax+eax*4-0x19820d73]
  4248ae:	dec    edi
  4248af:	xor    eax,0x5121b9b5
  4248b4:	add    ecx,DWORD PTR [ebx]
  4248b6:	mov    edi,0x33a51ad1
  4248bb:	jo     0x424843
  4248bd:	aad    0x86
  4248bf:	mov    ebx,0x5c722014
  4248c4:	mov    ch,BYTE PTR es:[ebx]
  4248c7:	mov    edx,0xd74b922e
  4248cc:	lock jecxz 0x42487f
  4248cf:	xchg   esp,eax
  4248d0:	xchg   ebx,eax
  4248d1:	out    0x47,eax
  4248d3:	ficomp WORD PTR [edi]
  4248d5:	and    eax,0x8bd9204e
  4248da:	mov    ebp,ebx
  4248dc:	into   
  4248dd:	mov    cl,0xa1
  4248df:	xchg   edx,eax
  4248e0:	push   ecx
  4248e1:	or     DWORD PTR [eax],0xe781d6e2
  4248e7:	repnz mov cl,0x38
  4248ea:	fs loop 0x4248dc
  4248ed:	loopne 0x4248ec
  4248ef:	or     BYTE PTR [edx],dh
  4248f1:	cmc    
  4248f2:	call   0xc010:0xf6cda024
  4248f9:	lahf   
  4248fa:	cmp    ch,BYTE PTR cs:[ebx]
  4248fd:	sbb    BYTE PTR [ebp-0x1acd42f0],ch
  424903:	gs enter 0xaf05,0xbb
  424908:	pop    ebp
  42490a:	or     DWORD PTR [ecx],ecx
  42490c:	push   ds
  42490d:	and    edi,DWORD PTR [edx]
  42490f:	mov    ds:0x13e9b4c6,al
  424914:	es adc edi,edi
  424917:	test   al,0x38
  424919:	repnz sbb eax,0xdc854a6e
  42491f:	mov    edx,0xcc5e9bdb
  424924:	dec    edi
  424925:	jl     0x4248c9
  424927:	repnz add al,0x59
  42492a:	lahf   
  42492b:	(bad)  
  42492c:	outs   dx,BYTE PTR ds:[esi]
  42492d:	jbe    0x42498d
  42492f:	add    ah,ah
  424931:	in     al,dx
  424932:	pop    ecx
  424933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424934:	sbb    eax,0x444c810e
  424939:	push   cs
  42493a:	cwde   
  42493b:	(bad)  [ebp+eax*1-0x14]
  42493f:	xor    esp,DWORD PTR [ecx-0x6385134a]
  424945:	cmp    ah,BYTE PTR [edi]
  424947:	jae    0x424960
  424949:	push   ebp
  42494a:	add    al,BYTE PTR [edx+0x2c3d6667]
  424950:	icebp  
  424951:	out    0xde,al
  424953:	or     DWORD PTR [eax+0x63],0xf693846a
  42495a:	popf   
  42495b:	jns    0x42493c
  42495d:	push   esp
  42495e:	inc    ch
  424960:	jmp    0xab6:0xfa81c453
  424967:	or     al,0x67
  424969:	imul   esi,DWORD PTR [eax-0x1e],0x516b9e81
  424970:	loope  0x42492a
  424972:	and    ecx,DWORD PTR [ecx]
  424974:	ins    DWORD PTR es:[edi],dx
  424975:	pop    ebx
  424976:	mov    edx,0x4bf582df
  42497b:	adc    al,0xb4
  42497d:	test   BYTE PTR [ebx+edx*4+0x7850e751],al
  424984:	add    eax,0x9abfa9dc
  424989:	jecxz  0x4249d1
  42498b:	fsubr  st(0),st
  42498d:	inc    ecx
  42498e:	test   DWORD PTR [eax+eiz*1],esp
  424991:	xchg   ebx,eax
  424992:	sahf   
  424993:	mov    ds:0x4f191ab7,al
  424998:	daa    
  424999:	in     al,dx
  42499a:	fbstp  TBYTE PTR [edx+0x57]
  42499d:	mov    ecx,0x520916dc
  4249a2:	xchg   ebx,eax
  4249a3:	imul   ecx,DWORD PTR [edx+0x14],0x1a96bb25
  4249aa:	mov    bl,0xd6
  4249ac:	xchg   dh,dh
  4249ae:	popa   
  4249af:	bswap  ecx
  4249b1:	sub    dh,BYTE PTR [ecx]
  4249b3:	push   esi
  4249b4:	stos   DWORD PTR es:[edi],eax
  4249b5:	mov    dl,0x68
  4249b7:	gs ja  0x4249af
  4249ba:	or     DWORD PTR [ebx-0x1241720b],ebp
  4249c0:	mov    ecx,0xfce0fcbc
  4249c5:	jns    0x4249c3
  4249c7:	sub    BYTE PTR [ecx],ah
  4249c9:	mov    ds:0xa3a00a67,al
  4249ce:	mov    ds:0x24776e00,eax
  4249d3:	loop   0x4249eb
  4249d5:	stc    
  4249d6:	(bad)  es:[edi-0x574df212]
  4249de:	jnp    0x424a58
  4249e0:	cmp    al,0x7b
  4249e2:	mov    dh,BYTE PTR [esi]
  4249e4:	add    dl,BYTE PTR [eax+esi*2-0x2d]
  4249e8:	aad    0x48
  4249ea:	loope  0x4249fe
  4249ec:	shl    DWORD PTR [esi-0xc],1
  4249ef:	or     edx,edi
  4249f1:	mov    ebx,0x5e1f25a9
  4249f6:	inc    esp
  4249f7:	push   es
  4249f8:	pop    ds
  4249f9:	adc    edx,esp
  4249fb:	add    esi,edi
  4249fd:	jne    0x4249eb
  4249ff:	in     al,0xdb
  424a01:	shr    BYTE PTR [ebx+ebp*4],cl
  424a04:	jecxz  0x424994
  424a06:	ror    DWORD PTR [esi],cl
  424a08:	scas   eax,DWORD PTR es:[edi]
  424a09:	xchg   ebx,eax
  424a0a:	inc    ebx
  424a0b:	aas    
  424a0c:	inc    bp
  424a0e:	dec    ebp
  424a0f:	adc    ch,BYTE PTR [esi]
  424a11:	push   si
  424a13:	pop    es
  424a14:	or     DWORD PTR [ebx+0x6e95ad04],esi
  424a1a:	inc    edi
  424a1b:	push   cs
  424a1c:	cli    
  424a1d:	mov    ah,0xfe
  424a1f:	ja     0x424a3b
  424a21:	xor    dh,dh
  424a23:	push   eax
  424a24:	mov    edx,DWORD PTR [ecx+0x46090ec1]
  424a2a:	push   ecx
  424a2b:	cmp    DWORD PTR [edx],ebp
  424a2d:	sub    eax,0x588586bd
  424a32:	xchg   WORD PTR [ebp-0x54a9e21e],ax
  424a39:	test   eax,0x23deaf13
  424a3e:	add    eax,0x1e7d5521
  424a43:	xor    ah,BYTE PTR [edi-0x40]
  424a46:	bound  esi,QWORD PTR [ebx-0x4db8d4c9]
  424a4c:	adc    BYTE PTR [esi-0x5a],ch
  424a4f:	or     al,0xf9
  424a51:	sbb    dh,BYTE PTR [ebp+0x36cea759]
  424a57:	jbe    0x424aa0
  424a59:	jg     0x424a61
  424a5b:	dec    esi
  424a5c:	clc    
  424a5d:	sbb    DWORD PTR [ebx],0x753b1d06
  424a63:	cdq    
  424a64:	test   al,0xe2
  424a66:	cmc    
  424a67:	shl    DWORD PTR [ebx],1
  424a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a6a:	cmp    al,0xc9
  424a6c:	int    0xc5
  424a6e:	cmp    BYTE PTR [ebx],0x4b
  424a71:	push   esi
  424a72:	mov    ecx,0xf24511e8
  424a77:	shr    bl,1
  424a79:	push   0x5a
  424a7b:	addps  xmm7,xmm5
  424a7e:	mov    BYTE PTR [edx],bh
  424a80:	jl     0x424a16
  424a82:	sti    
  424a83:	sbb    al,0xc3
  424a85:	sub    DWORD PTR [edi+ebp*8-0x3e682afd],0x548a1cf6
  424a90:	cdq    
  424a91:	je     0x424aee
  424a93:	addr16 int3 
  424a95:	mov    al,ds:0x90ace15d
  424a9a:	adc    DWORD PTR [edi],ebp
  424a9c:	jo     0x424b07
  424a9e:	enter  0x31d3,0xcc
  424aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aa3:	mov    esp,0xe5970f78
  424aa8:	(bad)  
  424aa9:	(bad)  
  424aaa:	fstp   DWORD PTR [ecx]
  424aac:	jge    0x424a85
  424aae:	add    al,0x6f
  424ab0:	(bad)  
  424ab2:	loop   0x424ada
  424ab4:	mov    ebx,0x5d6bb342
  424ab9:	imul   eax,DWORD PTR [ebp-0x58590bce],0x7b
  424ac0:	ficom  DWORD PTR [edi]
  424ac2:	dec    ebp
  424ac3:	adc    al,0x68
  424ac5:	mov    dh,0xbc
  424ac7:	sub    al,0x27
  424ac9:	out    dx,eax
  424aca:	adc    DWORD PTR [edx-0x13],0x5c
  424ace:	dec    esp
  424acf:	xor    dl,BYTE PTR [ebx]
  424ad1:	mov    esi,0x7fa410b9
  424ad6:	sbb    BYTE PTR [edi+0x68],dl
  424ad9:	jl     0x424acf
  424adb:	lods   eax,DWORD PTR ds:[esi]
  424adc:	xchg   esi,eax
  424add:	jb     0x424aaf
  424adf:	clc    
  424ae0:	stc    
  424ae1:	xlat   BYTE PTR ds:[ebx]
  424ae2:	xor    eax,0xb1026566
  424ae7:	fisub  DWORD PTR [ebx+0x67976880]
  424aed:	cmp    ch,dl
  424aef:	xchg   edx,eax
  424af0:	add    eax,0xbb9d9c8b
  424af5:	push   cs
  424af6:	imul   esp,DWORD PTR gs:[ebp+ecx*4+0x52],0xb543c768
  424aff:	outs   dx,BYTE PTR ds:[esi]
  424b00:	xor    dh,BYTE PTR [esp+ebp*2+0xf]
  424b04:	cmc    
  424b05:	popa   
  424b06:	xchg   ebp,eax
  424b07:	mov    esi,?
  424b09:	xchg   edi,eax
  424b0a:	xchg   BYTE PTR [edx-0x2e],dl
  424b0d:	imul   edx,ecx,0x84de4f43
  424b13:	xchg   esp,eax
  424b14:	or     dh,BYTE PTR [ebx]
  424b16:	loopne 0x424b62
  424b18:	fild   WORD PTR [edx+0x12b62a89]
  424b1e:	mov    ecx,eax
  424b20:	(bad)  
  424b21:	outs   dx,BYTE PTR ds:[esi]
  424b22:	call   0xdded:0xfde14bc
  424b29:	push   ebx
  424b2a:	aaa    
  424b2b:	arpl   dx,bp
  424b2d:	mov    esi,0x5a0a89d3
  424b32:	xchg   edx,eax
  424b33:	out    dx,eax
  424b34:	in     al,dx
  424b35:	xor    al,0x49
  424b37:	jecxz  0x424aed
  424b39:	jmp    0x424b02
  424b3b:	and    eax,0xc82c6bde
  424b40:	sbb    esi,DWORD PTR [esi+0x2e]
  424b43:	inc    edi
  424b44:	pop    eax
  424b45:	add    esp,DWORD PTR [edi+0x5c0579ec]
  424b4b:	xor    al,0x95
  424b4d:	aaa    
  424b4e:	jmp    0x1e9400e2
  424b53:	sti    
  424b54:	jmp    0x424b22
  424b56:	xor    bh,BYTE PTR [esi+0x40]
  424b59:	sbb    ebp,DWORD PTR [esi]
  424b5b:	jp     0x424b52
  424b5d:	test   DWORD PTR [ecx+0xa],edi
  424b60:	fdiv   st(4),st
  424b62:	pop    esi
  424b63:	sub    edx,esi
  424b65:	fwait
  424b66:	int3   
  424b67:	jl     0x424bc5
  424b69:	dec    ebp
  424b6a:	(bad)  
  424b6b:	cmp    eax,0x1945de66
  424b70:	xchg   ebp,eax
  424b71:	daa    
  424b72:	enter  0xad2,0xf
  424b76:	test   dl,bh
  424b78:	dec    DWORD PTR [ebx]
  424b7a:	ret    0xcbfa
  424b7d:	push   ecx
  424b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b7f:	and    BYTE PTR [edx+0x6],al
  424b82:	aas    
  424b83:	add    DWORD PTR [edx+0x6df529d6],ebx
  424b89:	and    al,0xbb
  424b8b:	mov    ds:0x998fa080,al
  424b90:	push   0x2a9cfc56
  424b95:	cwde   
  424b96:	mov    esp,0xc60ec72b
  424b9b:	jb     0x424ba5
  424b9d:	aam    0xde
  424b9f:	test   dl,0xd2
  424ba2:	push   ebx
  424ba3:	cmp    eax,0x2a48b28a
  424ba8:	inc    ebx
  424ba9:	cwde   
  424baa:	push   cs
  424bab:	jmp    0x3a40:0x56e29950
  424bb2:	sti    
  424bb3:	leave  
  424bb4:	jae    0x424c09
  424bb6:	div    DWORD PTR [edx]
  424bb8:	stos   BYTE PTR es:[edi],al
  424bb9:	xor    esp,DWORD PTR [eax+0x1]
  424bbc:	ins    BYTE PTR es:[edi],dx
  424bbd:	jle    0x424b8b
  424bbf:	movlps xmm6,QWORD PTR [eax]
  424bc2:	call   0x9aef:0x237721bc
  424bc9:	pop    ss
  424bca:	stc    
  424bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bcc:	sub    BYTE PTR [edx],bl
  424bce:	fcmovbe st,st(0)
  424bd0:	sbb    ch,BYTE PTR [ebp-0x73cfd0e9]
  424bd6:	psrld  mm1,mm2
  424bd9:	jge    0x424b5b
  424bdb:	jmp    0xb54547ff
  424be0:	aad    0x54
  424be2:	adc    BYTE PTR [ecx+0x3d],cl
  424be5:	mov    bh,BYTE PTR [edi-0x62befc4d]
  424beb:	jae    0x424c25
  424bed:	sbb    BYTE PTR [eax-0x76f66214],al
  424bf3:	mov    ecx,?
  424bf5:	cmp    esi,DWORD PTR [ecx+ebx*8]
  424bf8:	fs sub ebx,ebx
  424bfb:	adc    BYTE PTR [eax],al
  424bfd:	xchg   esi,eax
  424bfe:	aaa    
  424bff:	mov    ebx,es
  424c01:	mov    ah,0x34
  424c03:	add    eax,0x509b4b84
  424c08:	jb     0x424be5
  424c0a:	or     BYTE PTR [ecx+0x42ea0baa],ch
  424c10:	inc    ebx
  424c11:	add    cl,BYTE PTR [edx]
  424c13:	nop
  424c14:	inc    ebx
  424c15:	lock loopne 0x424be4
  424c18:	shr    BYTE PTR [ecx],1
  424c1a:	iret   
  424c1b:	pusha  
  424c1c:	lods   eax,DWORD PTR ds:[esi]
  424c1d:	retf   0xf748
  424c20:	out    0xa9,al
  424c22:	mov    BYTE PTR [edx-0x40],bh
  424c25:	add    eax,0xbda98b70
  424c2a:	pop    edi
  424c2b:	stc    
  424c2c:	and    DWORD PTR [esp+ecx*4+0x3a],edi
  424c30:	sub    BYTE PTR [ebx],0x3d
  424c33:	add    bh,ch
  424c35:	and    ecx,DWORD PTR [eax]
  424c37:	mov    eax,ds:0xfc8a2666
  424c3c:	sbb    cl,ch
  424c3e:	cmp    eax,0x9d0fa964
  424c43:	xchg   edx,eax
  424c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c45:	enter  0xd227,0x7f
  424c49:	in     eax,0x74
  424c4b:	push   eax
  424c4c:	jecxz  0x424c4a
  424c4e:	test   ecx,ecx
  424c50:	loop   0x424c36
  424c52:	stos   DWORD PTR es:[edi],eax
  424c53:	in     eax,dx
  424c54:	xor    eax,DWORD PTR [esi-0x18e4b6d8]
  424c5a:	out    dx,al
  424c5b:	lds    edx,FWORD PTR [eax+ecx*8-0x4]
  424c5f:	mov    eax,ds:0x3bc5081b
  424c64:	fadd   DWORD PTR [edi]
  424c66:	out    dx,eax
  424c67:	leave  
  424c68:	jecxz  0x424bf2
  424c6a:	cmp    eax,0xfe896af5
  424c6f:	add    eax,0x5010ba21
  424c74:	outs   dx,DWORD PTR ds:[esi]
  424c75:	push   ecx
  424c76:	inc    esp
  424c77:	das    
  424c78:	scas   eax,DWORD PTR es:[edi]
  424c79:	sbb    eax,0x4b010acd
  424c7e:	outs   dx,DWORD PTR ds:[esi]
  424c7f:	jo     0x424c5e
  424c81:	mov    ch,0x42
  424c83:	pop    esp
  424c84:	dec    ebx
  424c85:	out    dx,al
  424c86:	loop   0x424c2b
  424c88:	add    eax,0x505324d3
  424c8d:	pop    edx
  424c8e:	gs jne 0x424cc5
  424c91:	jmp    0x424c4e
  424c93:	es push 0x5ae7efc1
  424c99:	or     dh,cl
  424c9b:	cmc    
  424c9c:	dec    esi
  424c9d:	cli    
  424c9e:	shl    DWORD PTR [esi],cl
  424ca0:	test   eax,0x685ce524
  424ca5:	adc    ecx,DWORD PTR [ebp-0x104094d7]
  424cab:	push   ebx
  424cac:	std    
  424cad:	push   0x34438c4
  424cb2:	not    BYTE PTR [edi]
  424cb4:	push   ebx
  424cb5:	sbb    eax,0xf80001c3
  424cba:	add    al,0x0
  424cbc:	add    BYTE PTR [eax-0x50c1612],bl
  424cc2:	and    eax,0x342e9d25
  424cc7:	pop    ds
  424cc8:	and    ecx,edx
  424cca:	lea    eax,[ecx+0x66410fa5]
  424cd0:	inc    edx
  424cd1:	std    
  424cd2:	icebp  
  424cd3:	int3   
  424cd4:	jmp    0x424c58
  424cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cd7:	cmc    
  424cd8:	add    eax,DWORD PTR ds:0xde1c7ce7
  424cde:	inc    ecx
  424cdf:	daa    
  424ce0:	pop    ds
  424ce1:	inc    esi
  424ce2:	add    esp,DWORD PTR [ebp+ebp*8-0x5e761da2]
  424ce9:	jmp    FWORD PTR [esi-0x243c6ba3]
  424cef:	jno    0x424d16
  424cf1:	or     ebp,DWORD PTR [ebx]
  424cf3:	xor    al,0x3a
  424cf5:	mov    eax,ds:0xb4990ca4
  424cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfb:	outs   dx,BYTE PTR ds:[esi]
  424cfc:	fsub   QWORD PTR [ebp+ecx*8-0x1]
  424d00:	std    
  424d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d02:	ins    DWORD PTR es:[edi],dx
  424d03:	call   0x4579:0xb2c2ec52
  424d0a:	sahf   
  424d0b:	out    0xfa,al
  424d0d:	(bad)  
  424d0e:	int    0x40
  424d10:	mov    ebx,0xad4e72ab
  424d15:	shl    esi,cl
  424d17:	mov    ch,0x24
  424d19:	loope  0x424d65
  424d1b:	mov    esp,0xf0695077
  424d20:	fstp   QWORD PTR [ebp-0x47ac835d]
  424d26:	iret   
  424d27:	sbb    BYTE PTR [ebx],al
  424d29:	mov    BYTE PTR [edx+0x5],dl
  424d2c:	rol    BYTE PTR [ebp-0x5d],1
  424d2f:	xchg   edx,eax
  424d30:	jmp    FWORD PTR [esi+ecx*4]
  424d33:	mov    eax,ds:0x7653cd23
  424d38:	dec    BYTE PTR [ecx+0x1f]
  424d3b:	out    0xd7,eax
  424d3d:	push   ss
  424d3e:	das    
  424d3f:	ds ret 0xc099
  424d43:	mov    bh,0x8e
  424d45:	mov    ecx,0xf1176890
  424d4a:	or     al,0xee
  424d4c:	add    BYTE PTR [edi+0x20d89b6c],ch
  424d52:	sub    DWORD PTR [esi],ecx
  424d54:	test   eax,0xa978534d
  424d59:	mov    bh,0xfa
  424d5b:	fsubr  st,st(3)
  424d5d:	mov    dl,BYTE PTR [ebp-0x41fba272]
  424d63:	pop    edx
  424d64:	fadd   st(0),st
  424d66:	jl     0x424d86
  424d68:	jmp    0x6c75456a
  424d6d:	ficomp DWORD PTR [eax+0x6c182d16]
  424d73:	push   ds
  424d74:	sti    
  424d75:	mov    cs,WORD PTR [eax-0x15]
  424d78:	fsub   DWORD PTR ds:0xb54200ef
  424d7e:	inc    esi
  424d7f:	cmp    eax,DWORD PTR [edx+0x7c]
  424d82:	ret    
  424d83:	ins    BYTE PTR es:[edi],dx
  424d84:	in     al,0x5c
  424d86:	adc    DWORD PTR [ebx-0x3f],esi
  424d89:	iret   
  424d8a:	mov    cs,WORD PTR [ebp+0x3e32bb75]
  424d90:	int3   
  424d91:	mov    BYTE PTR [ebx],bh
  424d93:	jns    0x424ddd
  424d95:	cmp    BYTE PTR [ecx+0x4f518339],ah
  424d9b:	pop    edx
  424d9c:	test   al,0x98
  424d9e:	jae    0x424da4
  424da0:	jg     0x424d33
  424da2:	xchg   ecx,eax
  424da3:	jge    0x424e10
  424da5:	pop    edx
  424da6:	mov    eax,gs:0x3bf0185b
  424dac:	dec    edi
  424dad:	add    DWORD PTR [edx-0x69ea6c53],0x2b9067d7
  424db7:	push   ss
  424db8:	xchg   DWORD PTR [ebx],ebx
  424dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dbb:	adc    al,0xd
  424dbd:	lock imul eax,ebp,0x26f9e26e
  424dc4:	sub    ebp,DWORD PTR [esi]
  424dc6:	push   edx
  424dc7:	add    al,0xf9
  424dc9:	ret    
  424dca:	jb     0x424d57
  424dcc:	out    0xd1,al
  424dce:	gs jns 0x424e06
  424dd1:	add    eax,DWORD PTR [edx-0x61cd3b6c]
  424dd7:	gs shl edi,0xf7
  424ddb:	std    
  424ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ddd:	les    edi,FWORD PTR [edx+0x33]
  424de0:	stos   BYTE PTR es:[edi],al
  424de1:	mov    ebx,0x38c8617d
  424de6:	jns    0x424dae
  424de8:	adc    al,0xf0
  424dea:	mov    ds:0x947d7fa7,eax
  424def:	sub    ch,ch
  424df1:	psrlq  mm5,QWORD PTR [ebx+edx*8-0x79e55d7a]
  424df9:	sbb    ebp,DWORD PTR [ecx+0x14e46df9]
  424dff:	sti    
  424e00:	or     ebp,eax
  424e02:	test   esi,eax
  424e04:	xor    ebp,DWORD PTR [ecx]
  424e06:	leave  
  424e07:	xor    al,0xd5
  424e09:	or     al,0x3d
  424e0b:	ss out dx,al
  424e0d:	fs mov esi,0x19175f47
  424e13:	adc    cl,dh
  424e15:	mov    ecx,0xb040bfbe
  424e1a:	aam    0xc4
  424e1c:	add    al,0x29
  424e1e:	pop    ebp
  424e1f:	and    eax,0xba0d6874
  424e24:	jmp    0xa66b4f23
  424e29:	pop    es
  424e2a:	xchg   esi,eax
  424e2b:	sub    BYTE PTR [esi+0x2c0fb6f7],bl
  424e31:	sub    eax,DWORD PTR [eax+edi*2-0x41]
  424e35:	sub    eax,0xf8d5005b
  424e3a:	cli    
  424e3b:	mov    bl,0xee
  424e3d:	lods   eax,DWORD PTR ds:[esi]
  424e3e:	pop    eax
  424e3f:	shl    BYTE PTR [ebp-0x66],cl
  424e42:	cli    
  424e43:	cmp    edx,DWORD PTR [ecx+0x40]
  424e46:	mov    edi,0x1fae0ee9
  424e4b:	pop    es
  424e4c:	(bad)  
  424e4e:	xchg   ecx,eax
  424e4f:	jae    0x424e65
  424e51:	pandn  mm4,QWORD PTR [edi-0x256a9ef6]
  424e58:	mov    esi,0x1cf1ee64
  424e5d:	cwde   
  424e5e:	add    ecx,DWORD PTR [ecx-0x21]
  424e61:	mov    al,ds:0xca832875
  424e66:	push   ecx
  424e67:	jmp    0x3615aeef
  424e6c:	out    dx,al
  424e6d:	sbb    ecx,edx
  424e6f:	jle    0x424e10
  424e71:	and    eax,0xeada4ab5
  424e76:	dec    eax
  424e77:	cmp    al,0x25
  424e79:	cmp    eax,DWORD PTR [ebx+esi*2+0x15d3b07f]
  424e80:	jp     0x424e0a
  424e82:	sbb    eax,ebp
  424e84:	clc    
  424e85:	adc    cl,BYTE PTR [esi]
  424e87:	lea    ebx,[edx+ebp*8]
  424e8a:	mov    dh,0x8d
  424e8c:	bound  ebx,QWORD PTR [edx-0x4752f637]
  424e92:	cmp    ah,BYTE PTR [ecx+0x3e]
  424e95:	test   BYTE PTR [eax+0x33fd942d],ch
  424e9b:	sbb    ch,BYTE PTR [eiz*4-0x2f67a9ea]
  424ea2:	in     eax,dx
  424ea3:	sub    dh,bh
  424ea5:	retf   0x8a8d
  424ea8:	and    esi,DWORD PTR [esi]
  424eaa:	push   esp
  424eab:	in     al,dx
  424eac:	mov    ebx,0x4632dfc4
  424eb1:	fistp  DWORD PTR [eax+0x27b4fd03]
  424eb7:	scas   eax,DWORD PTR es:[edi]
  424eb8:	out    dx,eax
  424eb9:	push   es
  424eba:	clc    
  424ebb:	jmp    0x5ea1fcb2
  424ec0:	loope  0x424f14
  424ec2:	inc    edi
  424ec3:	mov    ecx,0xf6be0d24
  424ec8:	js     0x424ebe
  424eca:	cmc    
  424ecb:	cli    
  424ecc:	outs   dx,DWORD PTR ds:[esi]
  424ecd:	and    eax,DWORD PTR [edi+0x43]
  424ed0:	mov    ah,0x4d
  424ed2:	nop
  424ed3:	adc    DWORD PTR [esi],eax
  424ed5:	fistp  DWORD PTR [esi+0x7388fc54]
  424edb:	sti    
  424edc:	lods   al,BYTE PTR ds:[esi]
  424edd:	stos   DWORD PTR es:[edi],eax
  424ede:	and    dh,BYTE PTR ds:0xf231c688
  424ee4:	cmp    di,WORD PTR [ebx+0x45]
  424ee8:	xchg   ebx,eax
  424ee9:	adc    ebx,ebp
  424eeb:	push   0x85726385
  424ef0:	ja     0x424f1d
  424ef2:	sbb    cl,bl
  424ef4:	inc    eax
  424ef5:	outs   dx,DWORD PTR ds:[esi]
  424ef6:	or     BYTE PTR [esi+0x2a5838ef],0x3
  424efd:	test   al,0x29
  424eff:	cmp    dh,ch
  424f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f02:	mov    esi,0xb08e6e6b
  424f07:	mov    al,0x2
  424f09:	push   esi
  424f0a:	hlt    
  424f0b:	loop   0x424ed4
  424f0d:	jecxz  0x424e90
  424f0f:	jbe    0x424f42
  424f11:	cmp    al,0x4e
  424f13:	pop    esi
  424f14:	cli    
  424f15:	sar    DWORD PTR [edx+0x561fc808],cl
  424f1b:	mov    eax,ds:0x8d4a1242
  424f20:	inc    ebp
  424f21:	or     bh,bl
  424f23:	cdq    
  424f24:	mov    ch,0x3e
  424f26:	bound  ebp,QWORD PTR [edx+0x5e928c62]
  424f2c:	push   ss
  424f2d:	sar    BYTE PTR [ebx],0xef
  424f30:	dec    ebx
  424f31:	mov    esi,0x39b34a45
  424f36:	vcvtsi2sd xmm6,xmm2,DWORD PTR [esi+eiz*1-0x62]
  424f3c:	iret   
  424f3d:	stc    
  424f3e:	jg     0x424fb6
  424f40:	sbb    eax,DWORD PTR [ecx]
  424f42:	das    
  424f43:	jne    0x424f7c
  424f45:	push   0xaa7af2c9
  424f4a:	inc    esi
  424f4b:	xchg   ebp,eax
  424f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f4d:	fstp   QWORD PTR [esi-0x77]
  424f50:	cmp    eax,0xe429f34d
  424f55:	jns    0x424f57
  424f57:	jmp    0x133c:0x428cc249
  424f5e:	aas    
  424f5f:	inc    ebp
  424f60:	stos   BYTE PTR es:[edi],al
  424f61:	aaa    
  424f62:	retf   0x9cb7
  424f65:	pop    edx
  424f66:	imul   ecx,DWORD PTR [ebx+0x625acfd7],0xf8a403fa
  424f70:	cmp    dh,BYTE PTR [eax-0x12]
  424f73:	jnp    0x424f2a
  424f75:	or     ebp,DWORD PTR [edi]
  424f77:	jns    0x424fc2
  424f79:	jmp    0x5b15:0xd9b1f2b9
  424f80:	xor    al,BYTE PTR ds:0xbea1ffca
  424f86:	add    al,ah
  424f88:	jb     0x424fa2
  424f8a:	sbb    eax,0xac21fa5f
  424f8f:	rcr    BYTE PTR [ebp+0x4d7b9128],0x35
  424f96:	mov    ah,0x76
  424f98:	nop
  424f99:	push   ds
  424f9a:	adc    bl,BYTE PTR [ecx]
  424f9c:	push   ebp
  424f9d:	out    0x10,eax
  424f9f:	out    dx,al
  424fa0:	sub    ebp,DWORD PTR [edx]
  424fa2:	test   BYTE PTR [eax-0x6859f0e8],dh
  424fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fa9:	xor    cl,BYTE PTR [eax]
  424fab:	sbb    ch,bl
  424fad:	mov    edx,0xfb4591ae
  424fb2:	mov    esp,0xacf5e7d
  424fb7:	dec    eax
  424fb8:	popf   
  424fb9:	mov    ds:0xb72f0ad,al
  424fbe:	cdq    
  424fbf:	cmp    ebp,DWORD PTR es:[esi+ecx*1+0x368a3351]
  424fc7:	bound  ecx,QWORD PTR [ecx]
  424fc9:	gs aad 0x47
  424fcc:	jb     0x424f9b
  424fce:	jmp    0x2634:0x3e9e069f
  424fd5:	xchg   ebp,eax
  424fd6:	push   ebp
  424fd7:	add    DWORD PTR [ebx-0x1b],edi
  424fda:	adc    al,0xb4
  424fdc:	push   es
  424fdd:	inc    edx
  424fde:	xchg   esp,eax
  424fdf:	cmp    edi,DWORD PTR [ecx+0x54]
  424fe2:	sub    bl,BYTE PTR [eax]
  424fe4:	lock mov DWORD PTR [ecx],ebp
  424fe7:	adc    cl,dl
  424fe9:	dec    esp
  424fea:	pop    ebp
  424feb:	jnp    0x424fa9
  424fed:	cmp    ebp,DWORD PTR [esi]
  424fef:	jns    0x424fee
  424ff1:	stc    
  424ff2:	inc    esp
  424ff3:	inc    esi
  424ff4:	fld    DWORD PTR [ebp+0x7c]
  424ff7:	push   edx
  424ff8:	mov    esp,0x9d70b164
  424ffe:	es mov ebp,0x307a035a
  425004:	push   ebx
  425005:	ins    BYTE PTR es:[edi],dx
  425006:	hlt    
  425007:	jmp    0xdc2828f2
  42500c:	pop    ss
  42500d:	jns    0x42506e
  42500f:	cs pusha 
  425011:	shl    ah,0x33
  425014:	jecxz  0x42508c
  425016:	jmp    0x4c99a44c
  42501b:	out    dx,eax
  42501c:	push   ebp
  42501d:	(bad)  [ebp+0x2eff831c]
  425023:	mul    BYTE PTR [edx+0x76]
  425026:	mov    al,ds:0x70ac3cb6
  42502b:	fnstenv [ebx+ebx*1]
  42502e:	mov    ds:0x69884112,al
  425033:	ret    0xfcfa
  425036:	(bad)  
  425037:	ffreep st(4)
  425039:	lock out 0x2d,eax
  42503c:	sbb    edx,DWORD PTR [esi]
  42503e:	js     0x425044
  425040:	or     al,0x51
  425042:	cmp    eax,0x8795201f
  425047:	mov    cl,0x7d
  425049:	lahf   
  42504a:	mov    WORD PTR [esi+0x764270ff],fs
  425050:	pop    ebx
  425051:	inc    esi
  425052:	inc    eax
  425053:	fcom   st(3)
  425055:	ret    
  425056:	xor    BYTE PTR [esi-0x67],al
  425059:	or     DWORD PTR [esi-0x37],esi
  42505c:	xor    dl,BYTE PTR [ecx]
  42505e:	nop
  42505f:	loop   0x42502d
  425061:	test   eax,0x85b0c72b
  425066:	imul   eax,DWORD PTR [eax],0xffffffc4
  425069:	inc    cl
  42506b:	jg     0x4250ba
  42506d:	pushf  
  42506e:	inc    esi
  42506f:	mov    dl,BYTE PTR [edi]
  425071:	dec    esp
  425072:	push   cs
  425073:	push   eax
  425074:	pop    edx
  425075:	pop    edi
  425076:	test   al,0xd2
  425078:	rcr    BYTE PTR [ebx],1
  42507a:	jmp    0x50607f0e
  42507f:	fidivr WORD PTR ss:[ebx]
  425082:	adc    ebx,DWORD PTR [ecx]
  425084:	leave  
  425085:	repz xor DWORD PTR [ecx+0x45],eax
  425089:	sahf   
  42508a:	xchg   edi,eax
  42508b:	and    DWORD PTR [eax],esi
  42508d:	or     al,BYTE PTR [ebp-0x3196e396]
  425093:	retw   0xe2d5
  425097:	aaa    
  425098:	sub    bl,BYTE PTR [edi+edx*4+0x34a90ee5]
  42509f:	xor    edi,DWORD PTR [ebp-0x53]
  4250a2:	pop    ss
  4250a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250a4:	jnp    0x425035
  4250a6:	pop    edi
  4250a7:	mov    ah,0x91
  4250a9:	pop    edx
  4250aa:	sub    ch,BYTE PTR [ecx+0x1dad0ecd]
  4250b0:	jne    0x425076
  4250b2:	xchg   esp,eax
  4250b3:	cmp    al,0x57
  4250b5:	cmp    al,0xe0
  4250b7:	sub    esi,DWORD PTR [edx-0x30]
  4250ba:	(bad)  
  4250bb:	jp     0x425044
  4250bd:	jb     0x4250c8
  4250bf:	push   cs
  4250c0:	lds    ebp,FWORD PTR [esi-0x4d]
  4250c3:	push   eax
  4250c4:	inc    eax
  4250c5:	ret    
  4250c6:	xor    eax,0x9e67616e
  4250cb:	dec    eax
  4250cc:	(bad)
  4250cf:	sub    al,0xc6
  4250d1:	jns    0x42505d
  4250d3:	repnz sub esp,DWORD PTR [edi+0x75e9c0cf]
  4250da:	xchg   esp,eax
  4250db:	jecxz  0x42509e
  4250dd:	jns    0x425078
  4250df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250e0:	sti    
  4250e1:	push   ebp
  4250e2:	mov    eax,0xb80cd481
  4250e7:	mov    dl,BYTE PTR [esi]
  4250e9:	ds in  al,dx
  4250eb:	mov    ah,0xcc
  4250ed:	adc    edx,DWORD PTR [ecx]
  4250ef:	cwde   
  4250f0:	add    ah,BYTE PTR [eax]
  4250f2:	shl    ecx,0xac
  4250f5:	pusha  
  4250f6:	jle    0x42510f
  4250f8:	cmp    al,0xb2
  4250fa:	jmp    0x425156
  4250fc:	jae    0x4250a6
  4250fe:	gs loope 0x425114
  425101:	or     al,0xaa
  425103:	aaa    
  425104:	leave  
  425105:	(bad)  
  425106:	xchg   ecx,eax
  425107:	imul   eax,edx,0xb5ef2905
  42510d:	test   DWORD PTR [esi-0x7d],0x1d0972d0
  425114:	mov    dh,ah
  425116:	or     al,0x14
  425118:	(bad)  
  425119:	lods   al,BYTE PTR ds:[esi]
  42511a:	ins    BYTE PTR es:[edi],dx
  42511b:	test   esp,edi
  42511d:	ins    DWORD PTR es:[edi],dx
  42511e:	idiv   DWORD PTR [edi-0xa1859af]
  425124:	add    DWORD PTR [ebx-0x4],esp
  425127:	call   0x6c9e4625
  42512c:	test   al,0xc0
  42512e:	ret    0x6db0
  425131:	ret    
  425132:	aaa    
  425133:	rol    BYTE PTR [edx],1
  425135:	nop
  425136:	sti    
  425137:	dec    eax
  425138:	inc    ecx
  425139:	in     al,0x2e
  42513b:	mov    edi,0xd742694d
  425140:	jle    0x4250e0
  425142:	cdq    
  425143:	fsubp  st(1),st
  425145:	outs   dx,BYTE PTR ds:[esi]
  425146:	dec    esp
  425147:	cld    
  425148:	cld    
  425149:	leave  
  42514a:	into   
  42514b:	fst    QWORD PTR [ebx+0x8]
  42514e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42514f:	gs leave 
  425151:	mov    ?,WORD PTR [ebx+0x4e]
  425154:	or     esi,DWORD PTR ds:0x91f6d8b0
  42515a:	dec    eax
  42515b:	(bad)  
  42515c:	stos   BYTE PTR es:[edi],al
  42515d:	imul   eax,ebp,0xffffff8c
  425160:	sbb    DWORD PTR [ecx+edx*2-0x40],ecx
  425164:	test   ch,dh
  425166:	sub    al,0x3
  425168:	xor    al,0x43
  42516a:	xor    eax,0xad4bb4e2
  42516f:	push   ecx
  425170:	mov    BYTE PTR [ecx+ebp*1],cl
  425173:	push   ebp
  425174:	ds pop esp
  425176:	(bad)  
  425177:	push   ebp
  425178:	push   0xf76db9b2
  42517d:	retf   
  42517e:	add    al,0xfd
  425180:	pop    ebp
  425181:	stos   BYTE PTR es:[edi],al
  425182:	fsubr  DWORD PTR [edx+ecx*4]
  425185:	lods   al,BYTE PTR ds:[esi]
  425186:	sub    al,0x58
  425188:	pop    edx
  425189:	call   0xaac64bb8
  42518e:	xchg   ecx,eax
  42518f:	cmp    BYTE PTR [ebp+0x38],dl
  425192:	aam    0x3f
  425194:	lods   al,BYTE PTR ds:[esi]
  425195:	xor    al,0xc8
  425197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425198:	or     esp,DWORD PTR [eax]
  42519a:	add    al,0xcd
  42519c:	mov    bl,0x92
  42519e:	pop    esp
  42519f:	fadd   st,st(0)
  4251a1:	adc    dl,dh
  4251a3:	inc    esp
  4251a4:	sub    eax,0x181f48f3
  4251a9:	inc    esi
  4251aa:	aam    0xe0
  4251ac:	sti    
  4251ad:	retf   0xc403
  4251b0:	jae    0x4251ed
  4251b2:	adc    ebp,DWORD PTR [esi+0x2a]
  4251b5:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  4251ba:	bswap  eax
  4251bc:	(bad)  
  4251bd:	int3   
  4251be:	push   0xffffffa1
  4251c0:	lahf   
  4251c1:	adc    DWORD PTR [ebp-0x37ea1071],ebp
  4251c7:	add    DWORD PTR [eax],eax
  4251c9:	clc    
  4251ca:	add    al,0x0
  4251cc:	add    BYTE PTR [ecx],al
  4251ce:	add    DWORD PTR [esi+0x3a],edi
  4251d1:	mov    bh,0x2c
  4251d3:	and    eax,0x5de36b10
  4251d8:	sub    DWORD PTR [ebp+0x6033434b],0xa57a56bc
  4251e2:	push   ds
  4251e3:	test   DWORD PTR [ecx-0x5427822e],ecx
  4251e9:	dec    edx
  4251ea:	lock mov BYTE PTR [edx],al
  4251ed:	(bad)  
  4251ee:	enter  0x5fb9,0xdc
  4251f2:	outs   dx,BYTE PTR ds:[esi]
  4251f3:	adc    DWORD PTR [ebx+ebp*8+0xd340b0e],ecx
  4251fa:	hlt    
  4251fb:	(bad)  
  4251fc:	mov    edx,0x32b80ee2
  425201:	mov    dl,0xb6
  425203:	ret    
  425204:	sub    BYTE PTR ds:0xc1bdbe5e,ah
  42520a:	daa    
  42520b:	cwde   
  42520c:	xchg   esi,eax
  42520d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42520e:	fwait
  42520f:	repz es dec edx
  425212:	mov    esp,0x6537b498
  425217:	or     al,0x5d
  425219:	jo     0x4251db
  42521b:	jb     0x42525e
  42521d:	out    0x2a,eax
  42521f:	retf   0xad00
  425222:	mov    DWORD PTR [edx],ebp
  425224:	xor    BYTE PTR [ebx+0x51],dh
  425227:	outs   dx,BYTE PTR ds:[esi]
  425228:	dec    ebx
  425229:	cdq    
  42522a:	sar    BYTE PTR [esi-0x80],0x52
  42522e:	frstor [esi]
  425230:	add    ecx,DWORD PTR [ecx-0x58]
  425233:	fbld   TBYTE PTR [ebx]
  425235:	stos   DWORD PTR es:[edi],eax
  425236:	ret    0x7c87
  425239:	imul   esi,DWORD PTR [eax+eax*8],0x45331f89
  425240:	mov    al,0xdd
  425242:	xchg   ebp,eax
  425243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425244:	sub    eax,0xdc34b4db
  425249:	sbb    al,0x80
  42524b:	xchg   esi,eax
  42524c:	test   al,0xd7
  42524e:	cli    
  42524f:	or     BYTE PTR ds:0x76e0f96b,dh
  425255:	cmp    al,0x33
  425257:	call   FWORD PTR [ebx+0x114914a6]
  42525d:	add    al,0xa6
  42525f:	popa   
  425260:	pop    eax
  425261:	jno    0x425209
  425263:	scas   al,BYTE PTR es:[edi]
  425264:	ins    BYTE PTR es:[edi],dx
  425265:	addr16 jo 0x42520e
  425268:	cdq    
  425269:	sbb    esi,DWORD PTR [edx+0x1]
  42526c:	stos   DWORD PTR es:[edi],eax
  42526d:	sbb    al,0xbc
  42526f:	(bad)  
  425270:	push   ss
  425271:	lahf   
  425272:	leave  
  425273:	jbe    0x425239
  425275:	add    dh,ah
  425277:	outs   dx,DWORD PTR ds:[esi]
  425278:	xchg   edi,eax
  425279:	loopne 0x4252b0
  42527b:	std    
  42527c:	dec    ebp
  42527d:	ds cli 
  42527f:	loope  0x42525a
  425281:	fwait
  425282:	and    al,BYTE PTR [ecx+ebp*1]
  425285:	dec    ebx
  425286:	xor    al,0x76
  425288:	rcl    BYTE PTR [esi+0x57107bc8],cl
  42528e:	adc    esi,DWORD PTR [esi]
  425290:	into   
  425291:	out    0x2,al
  425293:	xchg   edi,eax
  425294:	pop    ebp
  425295:	(bad)  
  425296:	adc    al,0xef
  425298:	not    DWORD PTR [ecx+0x43b24883]
  42529e:	repz xchg esi,eax
  4252a0:	xor    eax,0x98166724
  4252a5:	and    DWORD PTR [ebp+0x512a2c3],ebp
  4252ab:	add    eax,ecx
  4252ad:	stos   DWORD PTR es:[edi],eax
  4252ae:	pop    esi
  4252af:	aas    
  4252b0:	lds    ebx,FWORD PTR [ebp+0x4a]
  4252b3:	ror    DWORD PTR [ebx+0x34f8b8df],1
  4252b9:	jno    0x425260
  4252bb:	mov    BYTE PTR [edi],ch
  4252bd:	pop    edx
  4252be:	lock (bad) 
  4252c1:	push   es
  4252c2:	ror    DWORD PTR [ebx-0x67],1
  4252c5:	fisttp DWORD PTR [ecx]
  4252c7:	sahf   
  4252c8:	(bad)  
  4252c9:	mov    eax,0x7631e81b
  4252ce:	das    
  4252cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252d0:	push   esi
  4252d1:	stos   BYTE PTR es:[edi],al
  4252d2:	or     cl,BYTE PTR [esi]
  4252d4:	ror    DWORD PTR [ebp+0x7852dada],cl
  4252da:	adc    BYTE PTR [edx+0x1c],ah
  4252dd:	clc    
  4252de:	pop    esi
  4252df:	or     DWORD PTR [ebx-0x48],ecx
  4252e2:	add    DWORD PTR [esi-0x4af1d76e],ecx
  4252e8:	adc    DWORD PTR [ebx+edi*8],eax
  4252eb:	cmp    BYTE PTR [ebx],ch
  4252ed:	jmp    DWORD PTR [edx]
  4252ef:	sti    
  4252f0:	nop
  4252f1:	in     al,dx
  4252f2:	fldenv [ebx-0x44]
  4252f5:	cmp    al,0xa7
  4252f7:	adc    ch,al
  4252f9:	or     BYTE PTR [edx-0x5a2efaae],dl
  4252ff:	sbb    edi,edi
  425301:	jge    0x4252b5
  425303:	stos   DWORD PTR es:[edi],eax
  425304:	push   ss
  425305:	sahf   
  425306:	xchg   edx,eax
  425307:	xchg   edi,eax
  425308:	pop    ecx
  425309:	pusha  
  42530a:	xchg   edx,eax
  42530b:	stos   DWORD PTR es:[edi],eax
  42530c:	adc    dh,BYTE PTR [ecx+0x6f]
  42530f:	fldpi  
  425311:	and    BYTE PTR [edi+edx*2-0x3e15f055],0xce
  425319:	rol    DWORD PTR [eax],1
  42531b:	xchg   ecx,eax
  42531c:	mov    ebp,0xf0d52462
  425321:	ins    BYTE PTR es:[edi],dx
  425322:	dec    edi
  425323:	scas   eax,DWORD PTR es:[edi]
  425324:	in     al,0x2b
  425326:	and    esp,DWORD PTR [ebp+0x6c]
  425329:	pop    ds
  42532a:	push   edx
  42532b:	mov    ds:0x3f96cc8f,eax
  425330:	inc    edx
  425331:	rcl    BYTE PTR [edi+0x3f17eb39],0x38
  425338:	xor    eax,0xde8bc4c6
  42533d:	dec    ebp
  42533e:	add    esp,0x5d73cb4c
  425344:	je     0x4253bf
  425346:	pushf  
  425347:	jnp    0x425305
  425349:	nop
  42534a:	pop    eax
  42534b:	idiv   DWORD PTR [ebx+0x6d]
  42534e:	pop    esi
  42534f:	pop    ecx
  425350:	xor    eax,0xf9204bdc
  425355:	das    
  425356:	add    al,BYTE PTR [eax+0x24]
  425359:	or     bh,BYTE PTR [edx]
  42535b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42535c:	jnp    0x42537c
  42535e:	test   al,0x9f
  425360:	pop    esp
  425361:	xor    al,0x8c
  425363:	out    dx,al
  425364:	xchg   edx,eax
  425365:	sahf   
  425366:	jmp    0xb8ae4791
  42536b:	sub    edi,DWORD PTR [esi-0x16]
  42536e:	pop    ecx
  42536f:	mov    edi,0xdc819ba
  425374:	mov    edi,0xba742431
  425379:	js     0x42536d
  42537b:	(bad)  
  42537c:	cmc    
  42537d:	iret   
  42537e:	rcr    esp,cl
  425380:	mov    dh,ah
  425382:	mov    DWORD PTR [edx+0x5a4a8b37],eax
  425388:	and    al,0x8e
  42538a:	ficom  WORD PTR [esi+0x7]
  42538d:	xchg   ch,ch
  42538f:	jl     0x4253c1
  425391:	jmp    DWORD PTR [edx-0x161bf80c]
  425397:	mov    eax,0x5c31d544
  42539c:	fdivr  QWORD PTR [edx+esi*1-0x68]
  4253a0:	sub    al,0x4
  4253a2:	ja     0x425380
  4253a4:	popf   
  4253a5:	call   0xdc28:0x89f2d457
  4253ac:	pop    edx
  4253ad:	xchg   BYTE PTR [eax+0x61],dl
  4253b0:	test   BYTE PTR [edx],cl
  4253b2:	xchg   esp,eax
  4253b3:	fs push ecx
  4253b5:	mov    eax,0x752950a3
  4253ba:	pop    esp
  4253bb:	pop    edx
  4253bc:	mov    bl,0x22
  4253be:	(bad)  
  4253bf:	cs cmp al,0xd2
  4253c2:	mov    bh,0x39
  4253c4:	rcr    BYTE PTR [eax+0x6c],cl
  4253c7:	cmp    esi,eax
  4253c9:	push   ds
  4253ca:	mov    eax,DWORD PTR [esi]
  4253cc:	or     bl,dh
  4253ce:	fsub   QWORD PTR [ebx]
  4253d0:	xor    al,0x1f
  4253d2:	mov    bh,BYTE PTR [edi+0x42]
  4253d5:	and    al,0x60
  4253d7:	xor    eax,0xb9946859
  4253dc:	mov    dh,0xc5
  4253de:	inc    edx
  4253df:	int3   
  4253e0:	shl    DWORD PTR [edx-0x57],1
  4253e3:	pop    ds
  4253e4:	adc    esi,ecx
  4253e6:	mov    BYTE PTR [esi+ebx*2],cl
  4253e9:	and    dh,0x47
  4253ec:	(bad)  [eax+0x74]
  4253ef:	sar    BYTE PTR [eax-0x14],cl
  4253f2:	or     BYTE PTR [eax+0x7d3ede14],al
  4253f8:	add    dl,BYTE PTR [esi+0x2e]
  4253fb:	call   0xd5f9:0x603b9645
  425402:	inc    ebp
  425403:	add    BYTE PTR [ebp+0x77],0x1c
  425407:	shl    DWORD PTR [edx+0x3c],0xa2
  42540b:	or     ebp,ebp
  42540d:	test   BYTE PTR [ebx],dl
  42540f:	jo     0x42542e
  425411:	inc    esi
  425412:	push   cs
  425413:	or     edx,ecx
  425415:	lods   al,BYTE PTR ds:[esi]
  425416:	bound  ecx,QWORD PTR [ebx]
  425418:	rcr    BYTE PTR [edi+0x57],cl
  42541b:	ins    BYTE PTR es:[edi],dx
  42541c:	stos   DWORD PTR es:[edi],eax
  42541d:	cwde   
  42541e:	hlt    
  42541f:	push   cs
  425420:	jge    0x4253fe
  425422:	int3   
  425423:	mov    eax,ds:0xbeb5d327
  425428:	dec    edx
  425429:	dec    eax
  42542a:	xchg   ebx,eax
  42542b:	in     al,dx
  42542c:	or     esi,ebp
  42542e:	and    BYTE PTR [edi],ah
  425430:	add    BYTE PTR [edx+0x51],dh
  425433:	(bad)  [ebx+0xfabe686]
  425439:	stc    
  42543a:	(bad)  
  42543c:	popa   
  42543d:	call   esp
  42543f:	or     BYTE PTR [ebx+0x54d15ab6],dh
  425445:	add    al,0xba
  425447:	and    eax,0xe22f58b4
  42544c:	int    0x7e
  42544e:	(bad)  
  42544f:	sbb    al,0x25
  425451:	and    BYTE PTR [ebx+0x28d716f2],bh
  425457:	sbb    BYTE PTR [edi+0x5a93f06b],ch
  42545d:	push   0x6d
  42545f:	loopne 0x425400
  425461:	stos   BYTE PTR es:[edi],al
  425462:	out    dx,al
  425463:	mov    ds:0x4677cfb6,eax
  425468:	dec    eax
  425469:	fist   WORD PTR [eax]
  42546b:	mov    edx,0xd082d79d
  425470:	pushf  
  425471:	(bad)  
  425472:	mov    ebx,0x23ac0de1
  425477:	mov    ah,0xf7
  425479:	out    0xd2,al
  42547b:	mov    WORD PTR [edi],cs
  42547d:	enter  0x195f,0x74
  425481:	aad    0xb6
  425483:	add    al,0xd
  425485:	mov    ecx,DWORD PTR [ebx]
  425487:	pop    edi
  425488:	pop    ebp
  425489:	jns    0x42550a
  42548b:	mov    cl,0x29
  42548d:	or     al,0x97
  42548f:	pop    ebx
  425490:	das    
  425491:	ins    BYTE PTR es:[edi],dx
  425492:	push   ss
  425493:	imul   ebx,DWORD PTR [edx+0x1f],0xffffffa4
  425497:	pop    ebp
  425498:	mov    ecx,0x86db88e4
  42549d:	push   ecx
  42549e:	adc    BYTE PTR [ecx-0x3c26e9c0],al
  4254a4:	xchg   esp,ebp
  4254a6:	pop    ecx
  4254a7:	mov    dh,BYTE PTR [ebx-0x1489a57]
  4254ad:	xor    edi,0xc8ba9c22
  4254b3:	jno    0x425488
  4254b5:	sbb    bh,0x77
  4254b8:	fstp   st(1)
  4254ba:	outs   dx,BYTE PTR ds:[esi]
  4254bb:	ret    0x2e74
  4254be:	lea    edx,[ebx-0x79]
  4254c1:	mov    dl,0x22
  4254c3:	call   0x1556a3d2
  4254c8:	pop    ebx
  4254c9:	sbb    BYTE PTR [eax-0x29ce9960],dh
  4254cf:	into   
  4254d0:	add    BYTE PTR [ebp+eax*8+0x7311041a],bl
  4254d7:	or     BYTE PTR [eax],dh
  4254d9:	adc    bl,BYTE PTR [ecx+0x6a9e1ee4]
  4254df:	cs in  al,dx
  4254e1:	ds jecxz 0x42547b
  4254e4:	push   eax
  4254e5:	jle    0x42552f
  4254e7:	push   ds
  4254e8:	mov    gs,WORD PTR [edi+0x6c]
  4254eb:	jne    0x4254c6
  4254ed:	enter  0xb247,0x4b
  4254f1:	sub    ebx,DWORD PTR [esp+esi*8-0x69]
  4254f5:	jle    0x425489
  4254f7:	xchg   ebx,eax
  4254f8:	sub    eax,0x5abe72fe
  4254fd:	add    BYTE PTR [edi],dl
  4254ff:	or     DWORD PTR [edi+ebp*2+0xf14b2f9],esp
  425506:	rol    DWORD PTR [ebx],1
  425508:	loopne 0x425533
  42550a:	push   esi
  42550b:	jle    0x42555d
  42550d:	inc    esp
  42550e:	mov    ch,0x8
  425510:	and    eax,0xbc864d47
  425515:	ja     0x42557f
  425517:	push   cs
  425518:	push   ecx
  425519:	xchg   ebp,eax
  42551a:	shl    BYTE PTR [esi],0x5e
  42551d:	cdq    
  42551e:	pop    es
  42551f:	add    eax,0x5f9512d6
  425524:	imul   edi,DWORD PTR [esi],0xba887748
  42552a:	sub    al,0x5
  42552c:	xchg   ebp,eax
  42552d:	std    
  42552e:	repz sub eax,0x8149a7e1
  425534:	push   ebp
  425535:	test   al,0x4b
  425537:	pop    eax
  425538:	les    ecx,FWORD PTR [eax-0x4b0d1392]
  42553e:	push   edx
  42553f:	scas   al,BYTE PTR es:[edi]
  425540:	ds push ebx
  425542:	inc    ecx
  425543:	fidivr DWORD PTR [esi+edx*2+0xb828398]
  42554a:	daa    
  42554b:	and    DWORD PTR [edx+0x157af7df],ecx
  425551:	dec    eax
  425552:	test   eax,0xeb7d5d68
  425557:	add    DWORD PTR [eax+0x6b],edi
  42555a:	mov    al,0x76
  42555c:	lods   al,BYTE PTR ds:[esi]
  42555d:	cmc    
  42555e:	xchg   ebx,eax
  42555f:	adc    ebp,DWORD PTR [ebx+0x79]
  425562:	adc    DWORD PTR [edx+0x65243cb4],eax
  425568:	pop    edx
  425569:	ins    DWORD PTR es:[edi],dx
  42556a:	shr    ecx,0x17
  42556d:	push   esi
  42556e:	cmp    BYTE PTR [ecx-0x64],0x3d
  425572:	cmc    
  425573:	cmp    al,0x11
  425575:	jp     0x4255da
  425577:	loope  0x425571
  425579:	shl    DWORD PTR [ecx-0x40],1
  42557c:	xor    BYTE PTR [esi],al
  42557e:	xor    dh,0x59
  425581:	lds    edi,FWORD PTR [esi-0x37]
  425584:	mov    BYTE PTR [esi+0x2c],0x40
  425588:	add    DWORD PTR [eax+edx*8],ebp
  42558b:	jno    0x4255fa
  42558d:	clc    
  42558e:	xor    ebx,edx
  425590:	retf   
  425591:	or     ebp,DWORD PTR [ebp-0x77b1d1b4]
  425597:	out    0x35,eax
  425599:	sbb    eax,0xd47ecc06
  42559e:	add    dl,cl
  4255a0:	jmp    0x4255b4
  4255a2:	xor    dh,cl
  4255a4:	xchg   DWORD PTR ds:0x4b0b6460,eax
  4255aa:	dec    DWORD PTR [edi+edi*1]
  4255ad:	inc    ecx
  4255ae:	lock out 0x7e,al
  4255b1:	xlat   BYTE PTR ds:[ebx]
  4255b2:	aad    0x7e
  4255b4:	xchg   esi,eax
  4255b5:	adc    eax,0xc226e523
  4255ba:	pop    esi
  4255bb:	and    BYTE PTR [eax],dl
  4255bd:	sbb    ecx,esi
  4255bf:	sti    
  4255c0:	sub    eax,0x2971a43f
  4255c5:	jl     0x42555a
  4255c7:	jne    0x4255e1
  4255c9:	into   
  4255ca:	pop    edi
  4255cb:	xchg   esi,eax
  4255cc:	leave  
  4255cd:	or     BYTE PTR [edi-0x68c204c4],bl
  4255d3:	xlat   BYTE PTR ds:[ebx]
  4255d4:	div    BYTE PTR [ecx+eax*8-0x75e16601]
  4255db:	std    
  4255dc:	inc    esp
  4255dd:	pop    esi
  4255de:	lds    edi,FWORD PTR [edi]
  4255e0:	pop    edx
  4255e1:	mov    ecx,DWORD PTR [eax+0x72239bec]
  4255e7:	lea    edx,[edi+0x26]
  4255ea:	fild   DWORD PTR [eax+0x62]
  4255ed:	push   ecx
  4255ee:	mov    ch,0x84
  4255f0:	dec    esi
  4255f1:	xchg   ebx,eax
  4255f2:	dec    ebp
  4255f3:	(bad)  
  4255f4:	fisub  DWORD PTR [esi+0xc]
  4255f7:	hlt    
  4255f8:	(bad)  
  4255f9:	mov    esp,0x42d50b22
  4255fe:	pop    eax
  4255ff:	add    bl,BYTE PTR [ecx+ebp*2]
  425602:	pop    ds
  425603:	ja     0x4255f8
  425605:	cmp    eax,edi
  425607:	es inc esp
  425609:	test   al,0xce
  42560b:	dec    esp
  42560c:	pushw  ss
  42560e:	inc    eax
  42560f:	gs add ebp,ecx
  425612:	sub    BYTE PTR [ebx+0x45],ch
  425615:	out    dx,al
  425616:	mov    bp,0x31f4
  42561a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42561b:	mov    dh,0x7e
  42561d:	out    dx,al
  42561e:	xor    eax,0x70a14bc1
  425623:	std    
  425624:	xchg   ecx,eax
  425625:	mov    eax,ds:0x50081b78
  42562a:	xchg   BYTE PTR [esi-0x5c],dh
  42562d:	sbb    bl,ah
  42562f:	inc    ecx
  425630:	sbb    BYTE PTR [esi-0x28182867],dl
  425636:	mov    edx,0xdd49b2e2
  42563b:	jnp    0x42569d
  42563d:	stc    
  42563e:	mov    al,ds:0xffebfe0a
  425643:	retf   0x6de1
  425646:	pushf  
  425647:	les    esi,FWORD PTR [eax+0x5be4983d]
  42564d:	dec    ebx
  42564e:	xor    bl,BYTE PTR [ebx]
  425650:	je     0x425644
  425652:	xchg   ecx,eax
  425653:	ss inc eax
  425655:	cmp    ch,BYTE PTR [edi-0x198de628]
  42565b:	ja     0x4256db
  42565d:	pop    esi
  42565e:	dec    ebp
  42565f:	add    eax,0xdb48e994
  425664:	mov    dh,0x4d
  425666:	or     eax,0xc64865c9
  42566b:	inc    esp
  42566c:	ins    DWORD PTR es:[edi],dx
  42566d:	push   edx
  42566e:	lock mov dl,0xa4
  425671:	std    
  425672:	sar    dh,0xa4
  425675:	xor    esi,DWORD PTR [edx]
  425677:	scas   eax,DWORD PTR es:[edi]
  425678:	inc    esi
  425679:	jmp    0x425699
  42567b:	retf   0x3bcf
  42567e:	(bad)  
  42567f:	sbb    edi,ebx
  425681:	inc    esp
  425682:	aas    
  425683:	pop    eax
  425684:	sar    cl,0x7f
  425687:	and    dh,BYTE PTR [edx-0x4cd11dbc]
  42568d:	ins    BYTE PTR es:[edi],dx
  42568e:	mov    dl,0x11
  425690:	outs   dx,DWORD PTR ds:[esi]
  425691:	mov    dl,0x1d
  425693:	jle    0x425699
  425695:	push   ebp
  425696:	xchg   ebx,eax
  425697:	popf   
  425698:	xchg   BYTE PTR [ebp-0xc0599d0],bl
  42569e:	dec    edi
  42569f:	jmp    0x5020:0x7082168d
  4256a6:	test   al,0xbb
  4256a8:	push   edi
  4256a9:	mov    al,ds:0xc01a371d
  4256ae:	cli    
  4256af:	out    0xf0,al
  4256b1:	add    DWORD PTR [ebx+0x15],0x62755122
  4256b8:	call   0x534b7d0f
  4256bd:	xor    ebx,DWORD PTR [ebx-0x64]
  4256c0:	mov    ah,0x27
  4256c2:	mov    bl,0x88
  4256c4:	cmp    BYTE PTR [ebx-0x11909fab],bl
  4256ca:	jg     0x42566b
  4256cc:	cmc    
  4256cd:	jae    0x425723
  4256cf:	cmp    al,0x39
  4256d1:	int    0x69
  4256d3:	add    DWORD PTR [ecx],edx
  4256d5:	or     eax,0xf80001cd
  4256da:	add    al,0x0
  4256dc:	add    BYTE PTR [ebx+0x2079add],bh
  4256e2:	(bad)  
  4256e3:	stc    
  4256e4:	int    0xbc
  4256e6:	pop    edi
  4256e7:	jae    0x4256a0
  4256e9:	mov    ebx,0x604fdb0b
  4256ee:	cmp    BYTE PTR [esi-0x24],0xce
  4256f2:	add    cl,bh
  4256f4:	mov    dh,0x7d
  4256f6:	rcl    ebx,1
  4256f8:	push   ss
  4256f9:	in     eax,0x9
  4256fb:	sbb    eax,0xf0dd4c3a
  425700:	gs fs push 0x81b89ce0
  425707:	push   es
  425708:	dec    ebp
  425709:	rcl    DWORD PTR [esi],1
  42570b:	jge    0x42575b
  42570d:	out    0xbd,al
  42570f:	xor    DWORD PTR [ebp+0x1d9acc33],ebx
  425715:	jecxz  0x425711
  425717:	inc    esp
  425718:	es inc esi
  42571a:	mov    cl,0xd8
  42571c:	xchg   ebp,eax
  42571d:	and    eax,0x4f26ae0e
  425722:	xchg   BYTE PTR [ecx],al
  425724:	jle    0x4256c1
  425726:	mov    edx,0xc82d1a3e
  42572b:	test   eax,0x3e7f4b97
  425730:	jbe    0x4256f5
  425732:	arpl   di,dx
  425734:	(bad)  
  425736:	mov    cl,0x2e
  425738:	gs add eax,0x2e0ad37f
  42573e:	xor    al,BYTE PTR [edi+0x60]
  425741:	sahf   
  425742:	pop    es
  425743:	xchg   ebp,eax
  425744:	sar    DWORD PTR [edx+0x78e7a289],1
  42574a:	loopne 0x4257c7
  42574c:	push   esp
  42574d:	loop   0x42576d
  42574f:	mov    al,0x62
  425751:	or     BYTE PTR [edi-0x2f],bl
  425754:	lock scas eax,DWORD PTR es:[edi]
  425756:	push   0x5a8d4fb9
  42575b:	jbe    0x42572c
  42575d:	(bad)
  425760:	pop    ebp
  425761:	retf   0xf88a
  425764:	loopne 0x4257e4
  425766:	cmp    eax,edi
  425768:	jecxz  0x425744
  42576a:	xor    dl,al
  42576c:	adc    eax,0x4d18247
  425771:	dec    edi
  425772:	std    
  425773:	jmp    0xc03d:0x400a4ba0
  42577a:	xor    ch,BYTE PTR [ebx+0x22]
  42577d:	mov    ebx,0x6b91ac25
  425782:	pushf  
  425783:	xchg   ebx,eax
  425784:	hlt    
  425785:	mov    ebp,0xa920559
  42578a:	fsubp  st(7),st
  42578c:	imul   ecx,DWORD PTR [ebx-0x65],0xb962d4af
  425793:	leave  
  425794:	ror    BYTE PTR [ebx-0x53a64adc],cl
  42579a:	jmp    0x425813
  42579c:	mul    BYTE PTR [ebx]
  42579e:	mov    edi,0x6a356675
  4257a3:	and    BYTE PTR [ebp+0x72],ch
  4257a6:	jmp    0x1b47c1a9
  4257ab:	mov    edi,0x37ad98ab
  4257b0:	jecxz  0x425733
  4257b2:	mov    WORD PTR [eax-0x49],gs
  4257b5:	data16 mov BYTE PTR ds:0x22f520cc,ch
  4257bc:	les    esi,FWORD PTR [ebx-0x68bef1bd]
  4257c2:	xchg   ebx,eax
  4257c3:	adc    BYTE PTR [eax-0x2e334525],dh
  4257c9:	xor    dh,dh
  4257cb:	ja     0x425778
  4257cd:	xchg   esp,eax
  4257ce:	mov    edx,0xbb67bf6b
  4257d3:	sbb    al,0x9b
  4257d5:	(bad)  
  4257d6:	jns    0x425793
  4257d8:	lock sub eax,0xa02d133f
  4257de:	or     bl,al
  4257e0:	jge    0x4257eb
  4257e2:	push   edx
  4257e3:	push   ss
  4257e4:	and    esp,0xc942cad2
  4257ea:	mov    ebp,0x508f20f7
  4257ef:	and    DWORD PTR [edx+0x75add7d0],0xcd091338
  4257f9:	sbb    bh,BYTE PTR [eax]
  4257fb:	push   es
  4257fc:	and    al,0x70
  4257fe:	dec    edi
  4257ff:	leave  
  425800:	mov    ebx,DWORD PTR [ebx+0x21]
  425803:	or     esp,0xffffff83
  425806:	test   eax,0xa4567821
  42580b:	adc    ch,BYTE PTR [esi-0x5eed166b]
  425811:	scas   eax,DWORD PTR es:[edi]
  425812:	das    
  425813:	jno    0x42580a
  425815:	lea    esi,ds:0xb5d9235c
  42581b:	mov    al,0xd1
  42581d:	adc    eax,0x35cc33f1
  425822:	pop    ebp
  425823:	jo     0x425850
  425825:	inc    edx
  425826:	inc    ebx
  425827:	arpl   WORD PTR [ebp-0x7c],si
  42582a:	mov    ebx,cs
  42582c:	dec    esp
  42582d:	mov    edi,0xa9ef33d4
  425832:	mov    ah,0x18
  425834:	icebp  
  425835:	in     eax,0xe2
  425837:	js     0x425889
  425839:	pop    ecx
  42583a:	inc    esp
  42583b:	retf   
  42583c:	stc    
  42583d:	pop    ss
  42583e:	xor    eax,0xad8aae51
  425843:	int3   
  425844:	clc    
  425845:	iret   
  425846:	repnz mov ah,0x3d
  425849:	sub    DWORD PTR [ecx],esi
  42584b:	jo     0x4257d6
  42584d:	rcr    BYTE PTR [ebx-0x913c270],cl
  425853:	imul   edi,DWORD PTR [ebp-0x2b],0xcfa2355c
  42585a:	loopne 0x4258b7
  42585c:	jecxz  0x425816
  42585e:	test   eax,0x39bd177d
  425863:	pop    ebx
  425864:	dec    esi
  425865:	(bad)  
  425868:	rcr    DWORD PTR [ecx],1
  42586a:	call   0x7e5ce0e
  42586f:	cmc    
  425870:	cmp    ebp,DWORD PTR [esi+eax*2+0x7cc5598a]
  425877:	xlat   BYTE PTR ds:[ebx]
  425878:	and    edx,ebp
  42587a:	(bad)  
  42587b:	pop    edi
  42587c:	jg     0x425806
  42587e:	pop    eax
  42587f:	fdiv   QWORD PTR [ebx]
  425881:	call   0x33203bb1
  425886:	out    dx,eax
  425887:	and    ebx,esi
  425889:	outs   dx,DWORD PTR ds:[esi]
  42588a:	sub    bh,ah
  42588c:	(bad)  
  42588d:	call   0x5bbc:0x893ff71
  425894:	out    dx,eax
  425895:	fstp   DWORD PTR [eax+0x2226eb3c]
  42589b:	inc    esi
  42589c:	add    cl,dl
  42589e:	enter  0x222f,0x24
  4258a2:	xor    eax,0x17a4f437
  4258a7:	and    al,0x65
  4258a9:	fimul  WORD PTR [edx-0x12]
  4258ac:	fldcw  WORD PTR [ebp+ebx*8+0x7f]
  4258b0:	out    dx,al
  4258b1:	jp     0x42586d
  4258b3:	sbb    ch,dl
  4258b5:	adc    esi,DWORD PTR [edi-0x12bfa855]
  4258bb:	out    dx,al
  4258bc:	les    ebx,FWORD PTR [esi-0x61]
  4258bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258c0:	(bad)  
  4258c2:	retf   
  4258c3:	test   ecx,esp
  4258c5:	cmp    eax,ebp
  4258c7:	jecxz  0x4258e3
  4258c9:	enter  0x4a38,0x20
  4258cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258ce:	icebp  
  4258cf:	ins    BYTE PTR es:[edi],dx
  4258d0:	ficomp WORD PTR [ecx-0x2754abc0]
  4258d6:	shr    BYTE PTR [edx-0x14],0x9
  4258da:	hlt    
  4258db:	sub    DWORD PTR [eax],esp
  4258dd:	jae    0x425912
  4258df:	sahf   
  4258e0:	cmc    
  4258e1:	jmp    0x1db6:0x73379b66
  4258e8:	ins    BYTE PTR es:[edi],dx
  4258e9:	js     0x425944
  4258eb:	and    BYTE PTR [ecx+0x5c],ch
  4258ee:	cmp    cl,al
  4258f0:	xchg   edx,eax
  4258f1:	ja     0x425910
  4258f3:	push   ebp
  4258f4:	xchg   edx,eax
  4258f5:	adc    BYTE PTR [ebx-0x4c0fefbc],bl
  4258fb:	cmp    DWORD PTR [ebx+0x7799aad2],0x8c64ccb6
  425905:	cld    
  425906:	std    
  425907:	mov    dl,BYTE PTR [esi]
  425909:	mov    ?,WORD PTR [edx-0x30]
  42590c:	adc    al,0x5a
  42590e:	ror    BYTE PTR [ebp-0x63],cl
  425911:	sbb    dh,BYTE PTR [ebx-0x2597c613]
  425917:	cli    
  425918:	inc    ebx
  425919:	test   BYTE PTR [eax-0x77e00cb2],bh
  42591f:	adc    ecx,ecx
  425921:	imul   eax,DWORD PTR [ecx],0xfffffff0
  425924:	mov    edx,esi
  425926:	sub    eax,0xcf92f7f0
  42592b:	sti    
  42592c:	popf   
  42592d:	adc    al,0xfd
  42592f:	jmp    0xd1e174f
  425934:	pop    eax
  425935:	daa    
  425936:	jg     0x4258f7
  425938:	sahf   
  425939:	clc    
  42593a:	xor    ecx,DWORD PTR [ebx+0xc]
  42593d:	or     BYTE PTR [eax-0x2594ff1c],bl
  425943:	add    dh,BYTE PTR [edi+edi*8+0x7502e299]
  42594a:	loopne 0x42599e
  42594c:	mov    al,ds:0x557e4e3b
  425951:	sbb    bh,BYTE PTR [di]
  425954:	dec    esi
  425955:	jl     0x4259b6
  425957:	les    edi,FWORD PTR [esp+edx*2]
  42595a:	(bad)  
  42595b:	mov    esp,0xacdd0a94
  425960:	scas   al,BYTE PTR es:[edi]
  425961:	and    esi,edx
  425963:	mov    esi,0xe3348bcb
  425968:	cmp    eax,0x21351ce0
  42596d:	inc    esp
  42596e:	pop    es
  42596f:	lds    esp,FWORD PTR [ecx+0x38ce618d]
  425975:	cmp    DWORD PTR [eax],ecx
  425977:	mov    ?,esp
  425979:	int3   
  42597a:	cmp    eax,0x4df8f96b
  42597f:	adc    DWORD PTR [esi-0x3],0xffffffeb
  425983:	aam    0x1b
  425985:	rcr    DWORD PTR ds:0xeb56e6f3,1
  42598b:	mov    bh,0x88
  42598d:	jle    0x4259cb
  42598f:	sub    eax,0xc5033bc4
  425994:	sub    ah,BYTE PTR [esi-0x17cab040]
  42599a:	ficomp WORD PTR [ebp-0x6ffcc4e6]
  4259a0:	shl    BYTE PTR [eax+0x1f699c74],0x83
  4259a7:	cmp    esp,esi
  4259a9:	sub    ch,BYTE PTR [edi+0x2924eaec]
  4259af:	mov    cl,0xb3
  4259b1:	jno    0x425a1e
  4259b3:	jne    0x425959
  4259b5:	add    DWORD PTR [edi-0x2fd7a2b2],eax
  4259bb:	and    al,dh
  4259bd:	jp     0x42595d
  4259bf:	or     al,0x61
  4259c1:	stos   DWORD PTR es:[edi],eax
  4259c2:	fdivr  st(1),st
  4259c4:	cmp    eax,0xaf0d44a
  4259c9:	pop    edi
  4259ca:	in     al,0xe6
  4259cc:	and    BYTE PTR [edx-0x14d2b7b9],cl
  4259d2:	or     ecx,DWORD PTR [edx-0x6ca8bd74]
  4259d8:	mov    ds:0x95dd71f7,al
  4259dd:	jno    0x425a58
  4259df:	push   cs
  4259e0:	in     eax,dx
  4259e1:	add    ecx,DWORD PTR [bx+si-0x5399]
  4259e6:	rol    BYTE PTR [ebx],0x7a
  4259e9:	data16 in al,dx
  4259eb:	cld    
  4259ec:	cmp    BYTE PTR [eax+0x4f],dl
  4259ef:	xchg   esi,eax
  4259f0:	retf   0xdadb
  4259f3:	aaa    
  4259f4:	mov    esp,0x6fdd3121
  4259f9:	jp     0x425980
  4259fb:	mov    esi,0xc4323cd0
  425a00:	imul   edx,DWORD PTR [edx+0x190ade98],0x33fc817c
  425a0a:	sbb    BYTE PTR [esi+0x1b],bh
  425a0d:	sub    al,0x80
  425a0f:	fs mov esi,0x4ecec8b2
  425a15:	iret   
  425a16:	jb     0x425a62
  425a18:	dec    ecx
  425a19:	jnp    0x425a00
  425a1b:	sub    DWORD PTR [ebx],ebx
  425a1d:	popf   
  425a1e:	test   al,0x41
  425a20:	push   eax
  425a21:	loope  0x425a35
  425a23:	jbe    0x4259fb
  425a25:	std    
  425a26:	push   0xb839b27e
  425a2b:	sbb    eax,eax
  425a2d:	je     0x425a51
  425a2f:	jmp    0xab6ab3c2
  425a34:	sbb    ch,BYTE PTR [ecx-0x1e]
  425a37:	xchg   ch,dh
  425a39:	ret    
  425a3a:	out    0x12,eax
  425a3c:	push   ebp
  425a3d:	mov    ds:0x6df4d1e5,al
  425a42:	mov    DWORD PTR [ebp-0x7b],ecx
  425a45:	popa   
  425a46:	es out dx,al
  425a48:	xchg   edi,eax
  425a49:	sar    edx,1
  425a4b:	iret   
  425a4c:	fisub  WORD PTR [eax+eax*4+0x3]
  425a50:	addr16 push ecx
  425a52:	mov    ecx,0xe05cd8aa
  425a57:	push   ebp
  425a58:	lahf   
  425a59:	dec    esi
  425a5a:	jbe    0x425aa5
  425a5c:	and    DWORD PTR [edi],ebp
  425a5e:	fidivr WORD PTR gs:[ecx]
  425a61:	int3   
  425a62:	jl     0x425a48
  425a64:	pop    es
  425a65:	mov    ebp,0x4474708e
  425a6a:	pop    edi
  425a6b:	sub    al,0xb
  425a6d:	sbb    eax,0x7092de21
  425a72:	ja     0x425a3b
  425a74:	cs jmp 0xad2d:0xe7431a1c
  425a7c:	xor    esi,DWORD PTR [eax+0x5d]
  425a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a80:	ret    
  425a81:	in     eax,0xb3
  425a83:	jnp    0x425ac3
  425a85:	or     BYTE PTR [ebx+0x57],ah
  425a88:	push   eax
  425a89:	les    ebx,FWORD PTR [ecx]
  425a8b:	jns    0x425ae6
  425a8d:	pop    edi
  425a8e:	icebp  
  425a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a90:	sub    bh,cl
  425a92:	mov    es,WORD PTR [ebx+0x1e]
  425a95:	(bad)  
  425a96:	push   0xfffffffa
  425a98:	lods   al,BYTE PTR ds:[esi]
  425a99:	enter  0x414c,0x9a
  425a9d:	in     eax,dx
  425a9e:	ds jae 0x425a64
  425aa1:	mov    bh,0xd4
  425aa3:	hlt    
  425aa4:	push   cs
  425aa5:	jne    0x425ae8
  425aa7:	jo     0x425a68
  425aa9:	sub    DWORD PTR [edi+0x2e0a6fce],0x7e5b0091
  425ab3:	jbe    0x425a64
  425ab5:	addr16 repnz das 
  425ab8:	bound  esp,QWORD PTR [edi+0x21840114]
  425abe:	icebp  
  425abf:	(bad)  [ebx]
  425ac1:	rol    DWORD PTR [edi-0x3ce1ea],1
  425ac7:	xchg   DWORD PTR [eax],esp
  425ac9:	daa    
  425aca:	imul   esp,ecx,0x50
  425acd:	dec    ebx
  425ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425acf:	call   0x5bd86453
  425ad4:	jno    0x425b32
  425ad6:	sbb    ecx,DWORD PTR [edx-0x60daeddc]
  425adc:	repnz in al,dx
  425ade:	jg     0x425b52
  425ae0:	inc    eax
  425ae1:	(bad)  [esi-0x4b]
  425ae4:	mov    edi,0xefbad635
  425ae9:	add    eax,0xfcda8252
  425aee:	sbb    eax,0x5701c55c
  425af3:	add    eax,0x2556be7e
  425af8:	cmp    eax,0x9c6e2357
  425afd:	push   edi
  425afe:	inc    ecx
  425aff:	jo     0x425b5f
  425b01:	adc    DWORD PTR [edx-0x70defe9e],ebx
  425b07:	(bad)  
  425b09:	pop    ebx
  425b0a:	scas   al,BYTE PTR es:[edi]
  425b0b:	adc    edi,esp
  425b0d:	cmp    dl,BYTE PTR [ecx]
  425b0f:	sub    edi,DWORD PTR [edi+0x2f]
  425b12:	push   esp
  425b13:	shr    DWORD PTR [ebp-0x33],1
  425b16:	mov    edx,0xc74b4c1c
  425b1b:	bound  ebp,QWORD PTR [ecx+0x19]
  425b1e:	add    al,0xb
  425b20:	std    
  425b21:	lds    esi,FWORD PTR [eax-0x63cdef4e]
  425b27:	nop
  425b28:	or     esp,DWORD PTR [ecx+0x340fbef7]
  425b2e:	or     esi,DWORD PTR [edx]
  425b30:	cmc    
  425b31:	sti    
  425b32:	sbb    eax,0xa2ef8b7f
  425b37:	jl     0x425b6d
  425b39:	jnp    0x425ac6
  425b3b:	add    eax,0xf77c8e06
  425b40:	sti    
  425b41:	jle    0x425b3c
  425b43:	jns    0x425b68
  425b45:	jb     0x425b54
  425b47:	cmovbe ecx,DWORD PTR [edi]
  425b4a:	lea    ecx,[edi-0x28be41d2]
  425b50:	cmp    ebp,ecx
  425b52:	ficom  DWORD PTR [edi]
  425b54:	call   0x8b456a9d
  425b59:	in     eax,0xf0
  425b5b:	out    dx,eax
  425b5c:	jne    0x425bcf
  425b5e:	add    eax,0x8f51405d
  425b63:	cmp    esi,0xffffff9f
  425b66:	test   al,0xbe
  425b68:	dec    esi
  425b69:	shl    DWORD PTR [ebp+0x5b],cl
  425b6c:	lahf   
  425b6d:	mov    ah,BYTE PTR [ebx-0x4b22a292]
  425b73:	cdq    
  425b74:	xor    dh,BYTE PTR [edx-0x21b5102d]
  425b7a:	scas   eax,DWORD PTR es:[edi]
  425b7b:	nop
  425b7c:	rcl    DWORD PTR [eax],0x7e
  425b7f:	sub    dh,BYTE PTR [edi+0x1bce4aa7]
  425b85:	in     eax,dx
  425b86:	rcl    DWORD PTR [edx+0x273312ec],1
  425b8c:	push   ss
  425b8d:	pop    es
  425b8e:	mov    DWORD PTR [edx-0x3e4f99b4],0x6c7c7478
  425b98:	or     esp,edx
  425b9a:	das    
  425b9b:	repz fcomp DWORD PTR [edi+0x21]
  425b9f:	ds enter 0x95b0,0x91
  425ba4:	dec    ecx
  425ba5:	inc    ebx
  425ba6:	daa    
  425ba7:	mov    ebx,0x4394013
  425bac:	sbb    DWORD PTR [esi],eax
  425bae:	sbb    al,BYTE PTR [ecx-0x3e]
  425bb1:	out    0x3e,eax
  425bb3:	lods   al,BYTE PTR ds:[esi]
  425bb4:	fld    TBYTE PTR [edx-0x1b5bd2a9]
  425bba:	inc    esi
  425bbb:	(bad)  
  425bbc:	loopne 0x425c1c
  425bbe:	push   edx
  425bbf:	mov    ebp,0xadc01d97
  425bc4:	sub    ebx,ecx
  425bc6:	sti    
  425bc7:	aas    
  425bc8:	in     al,dx
  425bc9:	push   ebp
  425bca:	ret    
  425bcb:	push   esi
  425bcc:	cli    
  425bcd:	mov    cl,0xe6
  425bcf:	xchg   ebp,eax
  425bd0:	mov    bh,0x83
  425bd2:	mov    edi,0x85055ddd
  425bd7:	scas   eax,DWORD PTR es:[edi]
  425bd8:	inc    esp
  425bd9:	scas   eax,DWORD PTR es:[edi]
  425bda:	outs   dx,BYTE PTR ds:[esi]
  425bdb:	out    dx,eax
  425bdc:	lds    ebp,FWORD PTR [ebp+ebp*8-0x3f]
  425be0:	mov    ds:0xa68ee054,al
  425be5:	add    eax,0xf80001d2
  425bea:	add    al,0x0
  425bec:	add    BYTE PTR [edi+0x4e],dl
  425bef:	leave  
  425bf0:	fidiv  WORD PTR [ebx-0x28]
  425bf3:	js     0x425bc1
  425bf5:	cmp    DWORD PTR [ecx+0x64],ebp
  425bf8:	push   ds
  425bf9:	xchg   BYTE PTR [ebx],bh
  425bfb:	lock mov BYTE PTR [ebx-0x53],0x16
  425c00:	xchg   edi,eax
  425c01:	xlat   BYTE PTR ds:[ebx]
  425c02:	std    
  425c03:	cwde   
  425c04:	(bad)  
  425c05:	and    dh,BYTE PTR [ecx+0x7217c10d]
  425c0b:	and    BYTE PTR [eax-0x1],0xe7
  425c0f:	enter  0x605e,0x35
  425c13:	popa   
  425c14:	sbb    DWORD PTR [edi+ecx*2-0x7d64889c],edx
  425c1b:	cdq    
  425c1c:	jnp    0x425c41
  425c1e:	mov    eax,ds:0xb08ef1f2
  425c23:	inc    eax
  425c24:	data16 daa 
  425c26:	sbb    al,dh
  425c28:	or     BYTE PTR [edi+ecx*8-0x32],bh
  425c2c:	pop    edi
  425c2d:	and    eax,DWORD PTR [ebp-0x7c5fdf43]
  425c33:	mov    ebx,0xc2216f2b
  425c38:	or     al,0x2f
  425c3a:	retf   
  425c3b:	scas   al,BYTE PTR es:[edi]
  425c3c:	call   0x1d151c2b
  425c41:	inc    esp
  425c42:	dec    eax
  425c43:	mov    fs,WORD PTR [ebp+0x3d]
  425c46:	test   al,0xf
  425c48:	mov    esi,DWORD PTR [ebx+0xd]
  425c4b:	jmp    0x425c92
  425c4d:	fbstp  TBYTE PTR [esi+0x35]
  425c50:	adc    DWORD PTR [ebp+0x39],edi
  425c53:	call   0x8a0bb7d4
  425c58:	in     eax,0x69
  425c5a:	idiv   BYTE PTR [ebx-0x4a12fbe9]
  425c60:	jmp    0x664a2b93
  425c65:	dec    ebp
  425c66:	in     eax,0x46
  425c68:	jne    0x425c7f
  425c6a:	fs mov esi,0x42a6f071
  425c70:	repz mov dh,0x19
  425c73:	mov    al,ds:0x9fc49e3
  425c78:	rep outs dx,BYTE PTR ds:[esi]
  425c7a:	push   esp
  425c7b:	pop    DWORD PTR [edx+0x6df02c33]
  425c81:	dec    edi
  425c82:	xchg   ecx,eax
  425c83:	test   DWORD PTR [ecx*4-0x7cd86b39],esi
  425c8a:	repz push edx
  425c8c:	or     ah,0xb
  425c8f:	imul   ecx,ebx,0x3d
  425c92:	and    edi,DWORD PTR [ecx-0xd1149e9]
  425c98:	int3   
  425c99:	out    dx,al
  425c9a:	daa    
  425c9b:	(bad)  
  425c9d:	mov    ebx,eax
  425c9f:	jno    0x425c3c
  425ca1:	je     0x425d0b
  425ca3:	add    esi,eax
  425ca5:	scas   eax,DWORD PTR es:[edi]
  425ca6:	pusha  
  425ca7:	aaa    
  425ca8:	dec    ecx
  425ca9:	pop    edi
  425caa:	mov    al,ds:0xa842a4ec
  425caf:	sub    BYTE PTR [edi],dl
  425cb1:	pushf  
  425cb2:	jae    0x425d00
  425cb4:	hlt    
  425cb5:	stos   BYTE PTR es:[edi],al
  425cb6:	sbb    al,0x37
  425cb8:	push   0x3ad4e7dc
  425cbd:	jle    0x425d28
  425cbf:	or     DWORD PTR ss:[edi+0x67d6ec5e],edi
  425cc6:	xor    edi,DWORD PTR [ebx+0x3c]
  425cc9:	xchg   esi,eax
  425cca:	in     al,0xe7
  425ccc:	cmp    DWORD PTR [ebx],edi
  425cce:	ins    BYTE PTR es:[edi],dx
  425ccf:	mov    ch,0x10
  425cd1:	shr    dh,cl
  425cd3:	ins    DWORD PTR es:[edi],dx
  425cd4:	push   ebx
  425cd5:	out    0x4d,eax
  425cd7:	xlat   BYTE PTR ds:[ebx]
  425cd8:	sbb    DWORD PTR [eax],ebp
  425cda:	xchg   esi,eax
  425cdb:	fstp   QWORD PTR [esi+ecx*8-0x5a]
  425cdf:	or     bh,0x49
  425ce2:	int    0xe2
  425ce4:	dec    edx
  425ce5:	adc    dh,BYTE PTR [ecx+0xf3b879b]
  425ceb:	test   DWORD PTR [eax-0x62],ecx
  425cee:	daa    
  425cef:	in     al,dx
  425cf0:	fcmovnu st,st(6)
  425cf2:	jg     0x425d1b
  425cf4:	dec    ebx
  425cf5:	xchg   edx,eax
  425cf6:	cmp    dl,BYTE PTR [ebx-0x39]
  425cf9:	mov    ds:0x9642a87d,al
  425cfe:	daa    
  425cff:	mov    al,ch
  425d01:	mov    bh,0x7e
  425d03:	sub    esp,DWORD PTR [esi+edx*8-0x70]
  425d07:	stos   BYTE PTR es:[edi],al
  425d08:	and    bh,BYTE PTR [ebx+0x18]
  425d0b:	xor    edx,ebp
  425d0d:	cmp    dh,BYTE PTR [eax+0x29]
  425d10:	jg     0x425cf1
  425d12:	mov    cl,0x24
  425d14:	xor    ebp,esp
  425d16:	enter  0xa06e,0xa2
  425d1a:	cld    
  425d1b:	mov    ebx,0x12afa4fb
  425d20:	daa    
  425d21:	cmp    BYTE PTR [ebx-0x2b],bh
  425d24:	inc    ecx
  425d25:	out    0x95,al
  425d27:	and    bl,bh
  425d29:	push   ss
  425d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d2b:	inc    eax
  425d2c:	push   eax
  425d2d:	popf   
  425d2e:	mov    ebp,0xed3c79af
  425d33:	call   0x602d0452
  425d38:	lds    esp,FWORD PTR [ebx]
  425d3a:	cmp    al,0xfb
  425d3c:	pop    ecx
  425d3d:	call   0xc8c4:0xc0b55ed0
  425d44:	mov    BYTE PTR [edi+0x12],0xdb
  425d48:	repnz sub DWORD PTR ds:[esi-0x5e],esi
  425d4d:	shl    DWORD PTR [esi-0x57d277f6],cl
  425d53:	jae    0x425d5f
  425d55:	adc    dl,BYTE PTR [eax-0x42419adb]
  425d5b:	imul   ebp,DWORD PTR [esi-0x21ff5475],0x8f717390
  425d65:	cmc    
  425d66:	mov    dl,0x6c
  425d68:	cmp    al,0x0
  425d6a:	stc    
  425d6b:	out    dx,eax
  425d6c:	ret    
  425d6d:	sub    ecx,0x6add1a66
  425d73:	iret   
  425d74:	sub    bh,BYTE PTR [esi+0x7a1bde9c]
  425d7a:	pop    edi
  425d7b:	cmp    BYTE PTR [ebp+eiz*1-0xf5dbbfd],cl
  425d82:	scas   eax,DWORD PTR es:[edi]
  425d83:	xor    dh,BYTE PTR [ecx+edx*1+0x7e45962]
  425d8a:	inc    edx
  425d8b:	pop    esi
  425d8c:	add    al,0xa6
  425d8e:	cmp    DWORD PTR [edx],esp
  425d90:	pop    ebx
  425d91:	popf   
  425d92:	arpl   sp,cx
  425d94:	mov    dl,0x3d
  425d96:	jbe    0x425df0
  425d98:	mov    dl,0xa1
  425d9a:	xchg   ecx,eax
  425d9b:	scas   al,BYTE PTR es:[edi]
  425d9c:	sti    
  425d9d:	mov    edx,0xd4d4ee97
  425da2:	xchg   edi,eax
  425da3:	cmp    DWORD PTR [edx-0x4fcd0852],edx
  425da9:	cmp    esi,DWORD PTR [eax+0x64]
  425dac:	call   0xc158eb48
  425db1:	cmp    DWORD PTR [edi-0x2e957399],ecx
  425db7:	int    0xbf
  425db9:	mov    ds:0xcb911649,al
  425dbe:	fisttp DWORD PTR [esi+0x53eb7c2]
  425dc4:	or     DWORD PTR [ecx-0x3b],edx
  425dc7:	mov    ecx,0x4e711eb8
  425dcc:	add    ecx,DWORD PTR [edx+0x1153e066]
  425dd2:	or     eax,0xcda41abe
  425dd7:	sahf   
  425dd8:	mov    ebp,0x741abbda
  425ddd:	mov    eax,ds:0x6542895e
  425de2:	sti    
  425de3:	mov    ebp,0xc0d2ffe0
  425de8:	int    0xd4
  425dea:	mov    ebp,0x27504d3d
  425def:	sbb    ebx,esi
  425df1:	push   esp
  425df2:	dec    esp
  425df3:	pop    ss
  425df4:	imul   edx,DWORD PTR [eax],0x9e990c54
  425dfa:	adc    ch,ch
  425dfc:	push   cs
  425dfd:	pusha  
  425dfe:	xor    bl,BYTE PTR [edi+0x233105df]
  425e04:	mov    eax,DWORD PTR [edx]
  425e06:	outs   dx,DWORD PTR ds:[esi]
  425e07:	js     0x425dd1
  425e09:	xchg   ebp,eax
  425e0a:	ds test eax,0xb2b990e4
  425e10:	xor    DWORD PTR [ebp+0x47],esi
  425e13:	cli    
  425e14:	rcl    BYTE PTR [eax+0x5c],cl
  425e17:	loop   0x425e8a
  425e19:	mov    eax,0xda8a77f2
  425e1e:	mov    edx,DWORD PTR [esi+esi*2-0x3860f42e]
  425e25:	lods   eax,DWORD PTR ds:[esi]
  425e26:	ins    BYTE PTR es:[edi],dx
  425e27:	aaa    
  425e28:	jne    0x425dc9
  425e2a:	adc    bl,BYTE PTR [edi+0x3c99da8f]
  425e30:	repnz cmp DWORD PTR [eax],ecx
  425e33:	xchg   BYTE PTR [ebx-0x4cad9d2e],cl
  425e39:	xor    ebx,edi
  425e3b:	add    al,0x33
  425e3d:	jne    0x425ebc
  425e3f:	aas    
  425e40:	loop   0x425e6f
  425e42:	cmp    al,0x1e
  425e44:	mov    eax,ds:0xdb7d82f7
  425e49:	push   ecx
  425e4a:	aam    0x47
  425e4c:	sbb    al,0x9a
  425e4e:	xchg   edx,eax
  425e4f:	cmp    esi,ecx
  425e51:	jno    0x425e8d
  425e53:	jne    0x425e14
  425e55:	fmul   st,st(2)
  425e57:	jmp    0x93d:0xc60bed6a
  425e5e:	mov    dl,0xfc
  425e60:	sub    esi,DWORD PTR [edi+0x75f05487]
  425e66:	out    0x4d,eax
  425e68:	stos   BYTE PTR es:[edi],al
  425e69:	sub    esi,DWORD PTR [ecx+0x4e17cdec]
  425e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e70:	fnstsw WORD PTR [ecx-0x349ee310]
  425e76:	pusha  
  425e77:	ret    0x88f8
  425e7a:	or     eax,0xa396b3fa
  425e7f:	(bad)  
  425e80:	stc    
  425e81:	imul   esp,DWORD PTR [edi],0xffffff8f
  425e84:	mov    esp,0x7c98ae16
  425e89:	inc    esp
  425e8a:	and    BYTE PTR [esi+eiz*4+0x6f],ch
  425e8e:	xchg   esp,eax
  425e8f:	and    esi,DWORD PTR [ecx+0x5be91068]
  425e95:	(bad)  
  425e96:	jnp    0x425ead
  425e98:	inc    ebp
  425e99:	cli    
  425e9a:	cdq    
  425e9b:	les    eax,FWORD PTR [eax+0x39d5a407]
  425ea1:	and    ebx,DWORD PTR [edx]
  425ea3:	cmp    DWORD PTR [esp+esi*4-0x3d0423cc],edx
  425eaa:	dec    esp
  425eab:	cld    
  425eac:	or     esi,DWORD PTR [ebp+0x14]
  425eaf:	popa   
  425eb0:	fist   WORD PTR [eax+0x6]
  425eb3:	rcl    DWORD PTR [ecx],0x7b
  425eb6:	cmp    ah,BYTE PTR [edi-0x24d9b87d]
  425ebc:	jnp    0x425eb9
  425ebe:	test   BYTE PTR [esi+0x6d5efb73],cl
  425ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ec5:	mov    ebp,?
  425ec7:	lods   al,BYTE PTR ds:[esi]
  425ec8:	inc    edi
  425ec9:	fwait
  425eca:	(bad)  
  425ecb:	in     eax,0x42
  425ecd:	sub    al,0x94
  425ecf:	or     BYTE PTR [eax+0x26],dl
  425ed2:	ret    
  425ed3:	push   edi
  425ed4:	(bad)  
  425ed5:	pop    ebp
  425ed6:	out    dx,al
  425ed7:	sbb    DWORD PTR [ebx-0x35],esp
  425eda:	out    dx,al
  425edb:	rol    dh,0xb
  425ede:	mov    dh,BYTE PTR [edi-0x49]
  425ee1:	sbb    bh,cl
  425ee3:	xor    esp,DWORD PTR [edx+0x52]
  425ee6:	fild   DWORD PTR [ebx+0x3b46f18f]
  425eec:	inc    edi
  425eed:	dec    esp
  425eee:	push   cs
  425eef:	xchg   DWORD PTR [edi+0x15883a47],esp
  425ef5:	in     al,dx
  425ef6:	dec    ebx
  425ef7:	pusha  
  425ef8:	and    ch,BYTE PTR [ebx]
  425efa:	xchg   ebp,eax
  425efb:	jmp    0x1e78:0xc01fa4f2
  425f02:	loop   0x425ea3
  425f04:	lock iret 
  425f06:	and    BYTE PTR [esi-0x120554b3],cl
  425f0c:	xchg   esp,eax
  425f0d:	jecxz  0x425f4e
  425f0f:	pop    ebx
  425f10:	imul   ebp,DWORD PTR ds:0x600385e8,0xdc04b155
  425f1a:	retf   
  425f1b:	cmp    al,0x6b
  425f1d:	rcl    BYTE PTR [edx-0x45],0x25
  425f21:	and    ecx,edx
  425f23:	and    DWORD PTR [edx],edx
  425f25:	loop   0x425f30
  425f27:	(bad)  
  425f28:	adc    esi,DWORD PTR ds:0xe124282e
  425f2e:	pop    edi
  425f2f:	es test eax,0xe721c37b
  425f35:	push   ds
  425f36:	mov    edi,0x9a33cf24
  425f3b:	jns    0x425f9a
  425f3d:	stos   DWORD PTR es:[edi],eax
  425f3e:	sbb    dl,BYTE PTR es:[edx]
  425f41:	jns    0x425f81
  425f43:	push   es
  425f44:	add    eax,0xbad4b51e
  425f49:	xchg   ebx,eax
  425f4a:	sbb    al,0x65
  425f4c:	shr    BYTE PTR ds:0xa5a36412,cl
  425f52:	jmp    0x425efd
  425f54:	(bad)  
  425f55:	fmul   DWORD PTR [esi]
  425f57:	xor    BYTE PTR [ebx-0x3888a52b],0xff
  425f5e:	cmp    dl,BYTE PTR [edi+0x3e]
  425f61:	shl    DWORD PTR [esi-0x7c],cl
  425f64:	repnz stos DWORD PTR es:[edi],eax
  425f66:	leave  
  425f67:	and    ecx,edx
  425f69:	jbe    0x425fc0
  425f6b:	(bad)  
  425f6c:	retf   
  425f6d:	(bad)  
  425f6e:	jmp    0x425f3f
  425f70:	fwait
  425f71:	jne    0x425fa4
  425f73:	into   
  425f74:	out    0xd2,eax
  425f76:	add    eax,0xebbede42
  425f7b:	cmp    DWORD PTR [edi],esp
  425f7d:	sub    esi,DWORD PTR [edx+eax*1+0x15]
  425f81:	les    edx,FWORD PTR [esi]
  425f83:	jmp    0xd350:0x39f82ef7
  425f8a:	sub    al,0xe7
  425f8c:	inc    esi
  425f8d:	ins    DWORD PTR es:[edi],dx
  425f8e:	mov    dh,0x7a
  425f90:	inc    edx
  425f91:	cwde   
  425f92:	add    al,0x5e
  425f94:	push   ebx
  425f95:	lahf   
  425f96:	(bad)  
  425f97:	shr    DWORD PTR [ebp-0x191b238e],1
  425f9d:	adc    WORD PTR [edx+0x59175c14],si
  425fa4:	sub    edi,DWORD PTR [eax+0x5f]
  425fa7:	sar    DWORD PTR [esi],1
  425fa9:	int    0xad
  425fab:	in     al,dx
  425fac:	and    esp,ecx
  425fae:	jne    0x426013
  425fb0:	cwde   
  425fb1:	add    DWORD PTR [ebx+0x4d],ecx
  425fb4:	mov    eax,0x63a634e2
  425fb9:	push   edi
  425fba:	fwait
  425fbb:	data16 int 0xcf
  425fbe:	fisub  DWORD PTR [ebx]
  425fc0:	jns    0x425f4b
  425fc2:	dec    edx
  425fc3:	pop    ecx
  425fc4:	imul   ecx,DWORD PTR [esi+0x13cbbc55],0x3
  425fcb:	and    DWORD PTR [ebp-0x34],0xffffffed
  425fcf:	enter  0xe3a1,0x5b
  425fd3:	mov    DWORD PTR [ecx+0x359a0934],ebp
  425fd9:	adc    eax,0x937792a6
  425fde:	add    eax,0xda919bd3
  425fe3:	out    0x4d,eax
  425fe5:	daa    
  425fe6:	cmp    cl,bl
  425fe8:	inc    edx
  425fe9:	(bad)  [ecx+0x55]
  425fec:	xchg   BYTE PTR [ebx+0x6b],ch
  425fef:	mov    bh,0x53
  425ff1:	test   eax,0x62b7a90b
  425ff6:	sbb    DWORD PTR [ecx-0x6914a72c],0x9a81c21b
  426000:	or     ecx,DWORD PTR [esi-0x2d2a300f]
  426006:	push   es
  426007:	out    dx,al
  426008:	mov    ds:0xd6d2c46b,al
  42600d:	aaa    
  42600e:	imul   edx,DWORD PTR [edi],0x77641ea
  426014:	int    0xed
  426016:	mov    ds:0x8c14ba85,al
  42601b:	and    al,bh
  42601d:	lods   al,BYTE PTR ds:[esi]
  42601e:	sub    dl,BYTE PTR [eax-0x6b]
  426021:	lock div BYTE PTR [ebp+esi*8+0x55]
  426026:	adc    al,0xbd
  426028:	mov    dh,0x45
  42602a:	or     eax,0xbfd2e681
  42602f:	jg     0x426043
  426031:	js     0x4260a4
  426033:	shl    BYTE PTR [ebx],cl
  426035:	sub    BYTE PTR [ebx+0x3d4bbdd2],al
  42603b:	xor    dl,ah
  42603d:	jge    0x425fea
  42603f:	scas   al,BYTE PTR es:[edi]
  426040:	xchg   ecx,eax
  426041:	fisttp DWORD PTR [ebp-0x2e5a8ad8]
  426047:	jns    0x4260a4
  426049:	jmp    DWORD PTR [ecx+0x1d]
  42604c:	jb     0x425fea
  42604e:	jno    0x425fde
  426050:	or     BYTE PTR [ebp-0x74],0x2e
  426054:	adc    cl,BYTE PTR [ecx]
  426056:	pop    edx
  426057:	adc    al,0xb0
  426059:	cmp    eax,0xda955e99
  42605e:	ret    0xa249
  426061:	sub    edx,ebp
  426063:	ins    BYTE PTR es:[edi],dx
  426064:	dec    edx
  426065:	xor    eax,0xc36d25d0
  42606a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42606b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42606c:	mov    dh,BYTE PTR [esi+ebp*4]
  42606f:	call   0xc6c6:0x594f212a
  426076:	and    DWORD PTR [esp+eax*1],0x1d7f15d8
  42607d:	pop    esp
  42607e:	loope  0x42600c
  426080:	cmp    bh,BYTE PTR [ecx+0xa9d505b]
  426086:	and    dl,BYTE PTR [esi]
  426088:	in     eax,0xfc
  42608a:	mov    DWORD PTR cs:[ecx+0x75],ebx
  42608e:	jo     0x4260c7
  426090:	push   ss
  426091:	and    esi,DWORD PTR [ebx-0x1c]
  426094:	xchg   ebp,eax
  426095:	jmp    0xf331479c
  42609a:	inc    ecx
  42609b:	neg    ecx
  42609d:	pop    esp
  42609e:	mov    ss,WORD PTR [esi+0xa6b3bd4]
  4260a4:	popf   
  4260a5:	in     eax,dx
  4260a6:	push   ss
  4260a7:	shr    DWORD PTR ds:0x1b4c21b9,0x34
  4260ae:	mov    edx,0x7b7a4a0d
  4260b4:	inc    edx
  4260b5:	imul   esi,DWORD PTR [ebp+0x7f80a5e],0xf061112b
  4260bf:	jge    0x426124
  4260c1:	and    eax,DWORD PTR ds:0xd5f3caf5
  4260c7:	fcmovbe st,st(0)
  4260c9:	loope  0x42609d
  4260cb:	in     al,0x51
  4260cd:	retf   0x5473
  4260d0:	xor    al,al
  4260d2:	retf   0x51c6
  4260d5:	or     ah,BYTE PTR [eax+0x43]
  4260d8:	ret    0xadbb
  4260db:	fs dec edi
  4260dd:	dec    ecx
  4260de:	pop    esi
  4260df:	rol    BYTE PTR [esi+0x79ea9cb7],0xee
  4260e6:	retf   0xd589
  4260e9:	lods   eax,DWORD PTR ds:[esi]
  4260ea:	xlat   BYTE PTR ds:[ebx]
  4260eb:	(bad)  
  4260ec:	sti    
  4260ed:	jmp    0x4260b4
  4260ef:	pop    ebp
  4260f0:	sub    ebx,DWORD PTR [edx-0x41]
  4260f3:	fidivr DWORD PTR [ebp+0x1d6fd]
  4260f9:	clc    
  4260fa:	add    al,0x0
  4260fc:	add    BYTE PTR [eax-0x7102e790],dl
  426102:	mov    eax,ds:0x5355e60b
  426107:	jo     0x426125
  426109:	mov    WORD PTR [ebx],?
  42610b:	jmp    0x679b:0xe68935e5
  426112:	cwde   
  426113:	xchg   ecx,eax
  426114:	loop   0x426176
  426116:	mov    edi,DWORD PTR [esi]
  426118:	imul   eax,DWORD PTR [eax-0x70],0xdd72895d
  42611f:	adc    bh,ch
  426121:	popa   
  426122:	pop    es
  426123:	pand   mm4,QWORD PTR ds:0xc3ec8eb9
  42612a:	test   eax,0xf079aa5e
  42612f:	push   edi
  426130:	and    eax,ecx
  426132:	mov    ds:0x79b53ae,eax
  426137:	inc    edi
  426138:	cmc    
  426139:	push   esi
  42613a:	fs hlt 
  42613c:	aaa    
  42613d:	shl    DWORD PTR [ecx-0x11],cl
  426140:	xor    al,0x2a
  426142:	jmp    0x830e672e
  426147:	inc    eax
  426148:	stos   BYTE PTR es:[edi],al
  426149:	xchg   edi,eax
  42614a:	ficomp WORD PTR [ebx-0x819a4ff]
  426150:	imul   eax,DWORD PTR [ebp-0x5235d586],0x61a60ca5
  42615a:	sbb    eax,0x3176ea0b
  42615f:	lea    esi,[esi-0xb017c53]
  426165:	repnz daa 
  426167:	pop    eax
  426168:	mov    ecx,0x97fea809
  42616d:	or     bh,ch
  42616f:	xchg   ebp,ebx
  426171:	mov    DWORD PTR [edi+esi*2-0x71],edx
  426175:	xchg   DWORD PTR [ebx],ecx
  426177:	retf   0xb5a9
  42617a:	icebp  
  42617b:	cmp    bl,cl
  42617d:	pop    ss
  42617e:	pop    ecx
  42617f:	xor    al,0x87
  426181:	push   edi
  426182:	inc    eax
  426183:	mov    bl,0x68
  426185:	cmc    
  426186:	jp     0x4261d4
  426188:	xchg   edi,eax
  426189:	dec    edx
  42618a:	fcom   QWORD PTR [eax+0x2d]
  42618d:	lods   eax,DWORD PTR ds:[esi]
  42618e:	push   cs
  42618f:	ret    0x4207
  426192:	lds    esi,FWORD PTR [ebx-0x40]
  426195:	and    dh,BYTE PTR [esi+ebx*4-0x1]
  426199:	inc    esi
  42619a:	mov    dh,0x85
  42619c:	test   al,0xf5
  42619e:	cwde   
  42619f:	retf   0x9863
  4261a2:	dec    ecx
  4261a3:	retf   0x26aa
  4261a6:	and    DWORD PTR [edi+0x4969d88b],ebp
  4261ac:	adc    dl,ch
  4261ae:	jmp    0x82d161ff
  4261b3:	pop    esp
  4261b4:	repz call 0x502c:0x2ec3a86a
  4261bc:	dec    ebp
  4261bd:	cmc    
  4261be:	push   edi
  4261bf:	xchg   esp,eax
  4261c0:	sbb    al,BYTE PTR [esi+0x57b34e3f]
  4261c6:	retf   0x5743
  4261c9:	rcr    DWORD PTR [edx],1
  4261cb:	sbb    DWORD PTR [esi+esi*8],eax
  4261ce:	xchg   cl,dh
  4261d0:	nop
  4261d1:	das    
  4261d2:	push   edx
  4261d3:	imul   ebp,DWORD PTR [edi],0xa7703f9c
  4261d9:	clc    
  4261da:	add    DWORD PTR [ebx+ebx*1],edx
  4261dd:	aad    0x14
  4261df:	ret    0xb020
  4261e2:	dec    edx
  4261e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261e4:	repz jmp 0x92a38d5f
  4261ea:	repz and al,0x9f
  4261ed:	xor    BYTE PTR [edx+0x817367b],al
  4261f3:	test   BYTE PTR [ebx],ch
  4261f5:	js     0x426246
  4261f7:	add    BYTE PTR [esp+ebx*4],al
  4261fa:	ins    BYTE PTR es:[edi],dx
  4261fb:	test   BYTE PTR [eax+0x43461a38],ah
  426201:	lods   eax,DWORD PTR ds:[esi]
  426202:	mov    edi,DWORD PTR [ecx-0x5cb9276b]
  426208:	inc    edx
  426209:	adc    esp,edi
  42620b:	adc    eax,DWORD PTR [eax]
  42620d:	mov    ebx,0xd1eb0082
  426212:	lea    ebp,[eax]
  426214:	jecxz  0x4261a4
  426216:	out    0x31,al
  426218:	jbe    0x4261ef
  42621a:	inc    esp
  42621b:	dec    edi
  42621c:	adc    eax,0x26bc9c80
  426221:	iret   
  426222:	mov    bl,0x10
  426224:	add    ch,BYTE PTR [edi+0x34]
  426227:	in     al,dx
  426228:	inc    esp
  426229:	sar    BYTE PTR [ecx-0x37a58e5],cl
  42622f:	xor    edx,edx
  426231:	pause  
  426233:	cmp    ecx,DWORD PTR [edi+0x556f4944]
  426239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42623a:	push   ss
  42623b:	stos   BYTE PTR es:[edi],al
  42623c:	jp     0x426260
  42623e:	popf   
  42623f:	pop    ss
  426240:	sub    eax,0xb90d199a
  426245:	fiadd  DWORD PTR [edx+0x2f408da7]
  42624b:	pusha  
  42624c:	sbb    al,0xba
  42624e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42624f:	sbb    al,0x4d
  426251:	add    dl,BYTE PTR [edi]
  426253:	or     eax,0x3e98a9d0
  426258:	(bad)  
  426259:	lods   al,BYTE PTR ds:[esi]
  42625a:	pop    ss
  42625b:	push   esp
  42625c:	(bad)  
  42625d:	or     BYTE PTR gs:0x823592e5,cl
  426264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426267:	lods   eax,DWORD PTR ds:[esi]
  426268:	mov    eax,0xfa9dcd25
  42626d:	adc    eax,0x8c2091f2
  426272:	ficom  DWORD PTR [esi+eiz*2]
  426275:	adc    al,0x15
  426277:	sub    esp,ecx
  426279:	inc    BYTE PTR [ebx+0x3249a7a1]
  42627f:	mov    edi,0x3d677ed
  426284:	lods   eax,DWORD PTR ds:[esi]
  426285:	pop    ecx
  426286:	(bad)  
  426287:	fisubr WORD PTR [edx-0x2]
  42628a:	nop
  42628b:	mov    edi,DWORD PTR [ebp-0x2]
  42628e:	xchg   ebx,eax
  42628f:	sub    al,0xee
  426291:	xchg   edi,eax
  426292:	enter  0x55a1,0xc0
  426296:	pop    eax
  426297:	fwait
  426298:	idiv   DWORD PTR [ecx]
  42629a:	or     BYTE PTR [ebp+0x18],bh
  42629d:	scas   al,BYTE PTR es:[edi]
  42629e:	add    edi,ebp
  4262a0:	arpl   WORD PTR [esi-0x79],bp
  4262a3:	sbb    dh,bh
  4262a5:	out    0xc6,eax
  4262a7:	sbb    DWORD PTR [eax-0x27c094e6],ecx
  4262ad:	daa    
  4262ae:	xchg   edx,eax
  4262af:	xchg   DWORD PTR [ebx+0x988aa55],ecx
  4262b5:	jge    0x426238
  4262b7:	pop    edi
  4262b8:	in     al,dx
  4262b9:	pusha  
  4262ba:	dec    eax
  4262bb:	push   edx
  4262bc:	dec    edi
  4262bd:	add    ch,cl
  4262bf:	add    eax,DWORD PTR [edx+0x6ad43848]
  4262c5:	cmp    al,0xf9
  4262c7:	push   esp
  4262c8:	push   esi
  4262c9:	das    
  4262ca:	fisub  WORD PTR [esi+0x7f]
  4262cd:	and    eax,0x45819926
  4262d2:	jecxz  0x426255
  4262d4:	in     al,0xd2
  4262d6:	sub    esp,ebp
  4262d8:	xchg   esi,eax
  4262d9:	jae    0x426302
  4262db:	clc    
  4262dc:	push   0xffffffdb
  4262de:	es iret 
  4262e0:	jmp    0xfaecc6b2
  4262e5:	sub    ah,bh
  4262e7:	jle    0x4262eb
  4262e9:	loopne 0x426324
  4262eb:	mov    ah,0x77
  4262ed:	push   edx
  4262ee:	push   esi
  4262ef:	sar    ecx,0xe6
  4262f2:	jnp    0x42627d
  4262f4:	fldpi  
  4262f6:	out    dx,al
  4262f7:	jg     0x4262bc
  4262f9:	push   ebp
  4262fa:	loop   0x42634c
  4262fc:	jns    0x42635d
  4262fe:	in     al,0x15
  426300:	mov    dl,0x57
  426302:	aad    0x63
  426304:	sar    BYTE PTR [ecx+0x2f],1
  426307:	jmp    0x42635d
  426309:	stc    
  42630a:	scas   eax,DWORD PTR es:[edi]
  42630b:	test   DWORD PTR [ecx-0x64],esp
  42630e:	in     eax,dx
  42630f:	aaa    
  426310:	jns    0x4262aa
  426312:	rcl    dh,cl
  426314:	outs   dx,DWORD PTR ds:[esi]
  426315:	out    dx,al
  426316:	repnz test BYTE PTR [eax],ah
  426319:	jmp    0xd67c097f
  42631e:	push   es
  42631f:	test   DWORD PTR [edi],ebp
  426321:	das    
  426322:	(bad)
  426325:	arpl   WORD PTR [edi+0x7b],dx
  426328:	inc    eax
  426329:	jbe    0x4262ea
  42632b:	and    ebx,edx
  42632d:	jge    0x426348
  42632f:	imul   edx,eax,0x42187345
  426335:	xor    DWORD PTR [edx-0x6f],eax
  426338:	(bad)  
  426339:	scas   al,BYTE PTR es:[edi]
  42633a:	mov    bh,0x2f
  42633c:	mov    eax,ds:0xe26bbaff
  426341:	loope  0x426384
  426343:	mov    cl,0x7a
  426345:	mov    edx,0xa010d41a
  42634a:	add    eax,0x4320aeeb
  42634f:	xchg   ebp,eax
  426350:	in     al,dx
  426351:	cld    
  426352:	jo     0x4263ac
  426354:	push   0xffffff96
  426356:	mov    edi,0x6e4c1a82
  42635b:	push   ebp
  42635c:	pop    esp
  42635d:	cwde   
  42635e:	or     eax,0x3b0ac89e
  426363:	mov    bh,0x9a
  426365:	cld    
  426366:	xor    ch,BYTE PTR [eax-0x78]
  426369:	dec    ecx
  42636a:	cmp    ecx,DWORD PTR [ebp-0x241872b]
  426370:	ins    DWORD PTR es:[edi],dx
  426371:	ds pushf 
  426373:	(bad)  
  426374:	mov    bh,0xa0
  426376:	jbe    0x426329
  426378:	cmc    
  426379:	mov    WORD PTR [ebx],fs
  42637b:	jmp    0x4e35:0x73e3a8ed
  426382:	in     al,dx
  426383:	add    eax,0x53cf5990
  426388:	in     al,dx
  426389:	mov    ah,0x2e
  42638b:	or     DWORD PTR [edx],edi
  42638d:	shr    BYTE PTR [edi],1
  42638f:	scas   eax,DWORD PTR es:[edi]
  426390:	mov    esp,0x726addad
  426395:	mov    esp,0xd45cb07e
  42639a:	lahf   
  42639b:	add    eax,0x2e62abd6
  4263a0:	arpl   WORD PTR [esi-0x13],di
  4263a3:	push   ebx
  4263a4:	inc    ebp
  4263a5:	mov    ebp,0x946ed0c8
  4263aa:	call   0xbff6:0xd26f0ff1
  4263b1:	inc    ebx
  4263b2:	and    BYTE PTR [ecx-0x2d],dh
  4263b5:	jnp    0x426399
  4263b7:	mov    eax,ds:0x6ee1ce5b
  4263bc:	cmp    DWORD PTR [edx+0x59],esp
  4263bf:	pop    ebx
  4263c0:	mov    al,0x2d
  4263c2:	jmp    0x426392
  4263c4:	jno    0x42641e
  4263c6:	shl    DWORD PTR [edx],cl
  4263c8:	loopne 0x4263b5
  4263ca:	xchg   DWORD PTR [edi+0x344390a7],esi
  4263d0:	mov    edx,DWORD PTR [edi]
  4263d2:	inc    esp
  4263d3:	sbb    eax,0x896dcb1c
  4263d8:	not    eax
  4263da:	js     0x42640d
  4263dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263dd:	mov    esi,0x120aef5e
  4263e2:	jmp    0x9fc6:0x8c547cde
  4263e9:	jmp    0x8b590b1b
  4263ee:	ja     0x4263db
  4263f0:	or     eax,0xbeb606ef
  4263f5:	aaa    
  4263f6:	lods   al,BYTE PTR ds:[esi]
  4263f7:	sti    
  4263f8:	sbb    al,0xce
  4263fa:	test   eax,0xb1eaf3a6
  4263ff:	xor    eax,0xb9c01a7c
  426404:	sub    esi,ebp
  426406:	sbb    al,0x2
  426408:	(bad)  
  426409:	cdq    
  42640a:	push   esi
  42640b:	jmp    0x97daa33b
  426410:	retf   0x18cc
  426413:	inc    eax
  426414:	sub    al,0xcc
  426416:	ficomp DWORD PTR [ebp+0x7dcd47e3]
  42641c:	hlt    
  42641d:	or     DWORD PTR [eax],eax
  42641f:	or     DWORD PTR [ebp+eiz*4+0x36],eax
  426423:	retf   0x87df
  426426:	imul   ecx,DWORD PTR [ebx-0xcda9a9b],0xffffff84
  42642d:	sbb    al,0x41
  42642f:	sub    edx,DWORD PTR [eax+0x31]
  426432:	dec    ebx
  426433:	repz call edx
  426436:	iret   
  426437:	inc    BYTE PTR [ebp-0x35]
  42643a:	jo     0x4263f7
  42643c:	cld    
  42643d:	jne    0x42649e
  42643f:	shr    DWORD PTR ds:0xcbadf739,cl
  426445:	mov    BYTE PTR [ebp+0x1bcf92b7],dh
  42644b:	xor    eax,0x44baec3e
  426450:	sahf   
  426451:	mov    bh,0xa5
  426453:	stos   BYTE PTR es:[edi],al
  426454:	je     0x426471
  426456:	xor    cl,BYTE PTR [ecx]
  426458:	cmp    al,0xf5
  42645a:	inc    ebp
  42645b:	jnp    0x426440
  42645d:	call   0x6cc5172
  426462:	shl    ebp,cl
  426464:	cmp    DWORD PTR [ecx+0x49],ebp
  426467:	xchg   ebp,eax
  426468:	int3   
  426469:	rcl    DWORD PTR [eax-0x2],0xb
  42646d:	in     eax,0xca
  42646f:	fs iret 
  426471:	inc    ecx
  426472:	adc    eax,edi
  426474:	rcr    BYTE PTR [esi],0x58
  426477:	mov    al,0xcb
  426479:	(bad)  
  42647a:	ins    BYTE PTR es:[edi],dx
  42647b:	leave  
  42647c:	imul   BYTE PTR [ebp+0x61d34ca0]
  426482:	sahf   
  426483:	imul   esp,DWORD PTR [edx+eax*4-0x12e661f6],0x769bb90e
  42648e:	or     al,0x15
  426490:	and    dh,BYTE PTR [eax+0xd]
  426493:	and    al,0x22
  426495:	gs aas 
  426497:	arpl   WORD PTR [ebp-0xd9c2271],dx
  42649d:	mov    edi,0xe065f5da
  4264a2:	sbb    DWORD PTR [edi*2-0x2cc47006],0x64b91a17
  4264ad:	pop    esp
  4264ae:	push   ecx
  4264af:	jge    0x426487
  4264b1:	(bad)  
  4264b2:	adc    al,0xd5
  4264b4:	test   BYTE PTR [edi+0x7e8b1511],al
  4264ba:	pop    eax
  4264bb:	mov    esp,edx
  4264bd:	pop    ebx
  4264be:	inc    eax
  4264bf:	dec    ecx
  4264c0:	adc    BYTE PTR [edi+eiz*8+0x20c82728],bh
  4264c7:	test   eax,0xa7bc2d3e
  4264cc:	sub    dl,BYTE PTR [eax+0x43]
  4264cf:	mov    dh,0x99
  4264d1:	and    al,0x9f
  4264d3:	call   0x85ec:0xd0d24317
  4264da:	pop    esp
  4264db:	push   es
  4264dc:	(bad)  
  4264dd:	rcr    BYTE PTR [esi],cl
  4264df:	push   edx
  4264e0:	lods   al,BYTE PTR ds:[esi]
  4264e1:	mov    edi,0xab156131
  4264e6:	inc    ebx
  4264e7:	idiv   BYTE PTR [ecx]
  4264e9:	mov    ah,BYTE PTR [ebx+0x25b14b4]
  4264ef:	push   esi
  4264f0:	mov    dh,0x96
  4264f2:	inc    ebp
  4264f3:	retf   
  4264f4:	pushf  
  4264f5:	es sbb ecx,ecx
  4264f8:	clc    
  4264f9:	sub    ch,BYTE PTR [edx+edi*1-0x5f]
  4264fd:	repz sub ch,0x6
  426501:	mov    eax,ds:0x30852f76
  426506:	loope  0x426587
  426508:	mov    esi,0x99f9f127
  42650d:	add    al,0xb3
  42650f:	sub    ch,dh
  426511:	push   edi
  426512:	adc    eax,0x95889ddc
  426517:	and    al,0x29
  426519:	or     DWORD PTR [ebx],ebp
  42651b:	inc    edx
  42651c:	iret   
  42651d:	adc    edi,DWORD PTR [ecx+edx*8+0x27a85dd7]
  426524:	pop    eax
  426525:	aas    
  426526:	out    0x48,al
  426528:	mov    bl,0x2b
  42652a:	scas   al,BYTE PTR es:[edi]
  42652b:	loope  0x4264c9
  42652d:	pop    ecx
  42652e:	dec    eax
  42652f:	jecxz  0x426519
  426531:	mov    eax,esp
  426533:	das    
  426534:	add    dh,BYTE PTR [esi+edx*1-0x5dc1e35f]
  42653b:	and    edx,DWORD PTR [ebx-0x11]
  42653e:	adc    al,0xc5
  426540:	jg     0x4264ef
  426542:	or     dh,dl
  426544:	fbstp  TBYTE PTR [ebx-0x66e49731]
  42654a:	sbb    cl,BYTE PTR [eax+0x36]
  42654d:	loop   0x4264e5
  42654f:	int3   
  426550:	inc    eax
  426551:	adc    eax,0x8d3e54bf
  426556:	scas   eax,DWORD PTR es:[edi]
  426557:	pop    ecx
  426558:	push   esi
  426559:	sub    eax,0xd55078c
  42655e:	and    eax,0x32907015
  426563:	fidivr DWORD PTR [edx-0x2e8e1bb5]
  426569:	push   edi
  42656a:	int    0xae
  42656c:	jno    0x42653c
  42656e:	mov    eax,ds:0xeba7e6c8
  426573:	or     BYTE PTR [edi],0x74
  426576:	fwait
  426577:	in     eax,dx
  426578:	popa   
  426579:	rcr    BYTE PTR [edi+0x67],0xfe
  42657d:	add    BYTE PTR [ebx-0x70e18eb1],cl
  426583:	mov    al,0x98
  426585:	outs   dx,DWORD PTR ds:[esi]
  426586:	mov    al,0xb7
  426588:	cmc    
  426589:	jmp    0x3ebd89a1
  42658e:	pop    es
  42658f:	fwait
  426590:	in     al,dx
  426591:	xor    BYTE PTR [ebp+0x4c289dca],0x30
  426598:	xchg   esi,eax
  426599:	je     0x4265c8
  42659b:	and    ecx,DWORD PTR [ebx]
  42659d:	sbb    BYTE PTR [ecx+ebx*2],bh
  4265a0:	(bad)  
  4265a1:	ins    DWORD PTR es:[edi],dx
  4265a2:	sub    DWORD PTR [ebx+0x6d],esi
  4265a5:	test   al,0xbf
  4265a7:	leave  
  4265a8:	xchg   edi,eax
  4265a9:	es mov ebx,0xfd5f92d3
  4265af:	xor    eax,0xc02abe98
  4265b4:	dec    eax
  4265b5:	fdivr  QWORD PTR [edx+0x6]
  4265b8:	int    0x21
  4265ba:	shl    DWORD PTR [eax+0x2ef97374],1
  4265c0:	jne    0x42662f
  4265c2:	push   ds
  4265c3:	ja     0x4265d6
  4265c5:	hlt    
  4265c6:	pop    eax
  4265c7:	sbb    al,0x82
  4265c9:	cwde   
  4265ca:	shr    esp,1
  4265cc:	(bad)  
  4265cd:	fwait
  4265ce:	adc    al,0xea
  4265d0:	lahf   
  4265d1:	arpl   WORD PTR ds:0xd0a73fbf,cx
  4265d7:	call   0xe1ea:0x5154ae05
  4265de:	push   edi
  4265df:	sub    eax,0x7f12fce0
  4265e4:	(bad)  
  4265e5:	outs   dx,BYTE PTR ds:[esi]
  4265e6:	stc    
  4265e7:	sahf   
  4265e8:	sub    edi,DWORD PTR [edi]
  4265ea:	xchg   BYTE PTR [esp+ecx*2],ah
  4265ed:	jns    0x42662d
  4265ef:	popa   
  4265f0:	fsub   st(3),st
  4265f2:	stos   BYTE PTR es:[edi],al
  4265f3:	xchg   DWORD PTR [ecx+0x71],ecx
  4265f6:	ret    
  4265f7:	loop   0x4265e4
  4265f9:	bnd jmp 0x426675
  4265fc:	fstp   TBYTE PTR [ecx-0x11f42ed0]
  426602:	fstp   QWORD PTR ds:0x1dbf5ab
  426608:	add    al,bh
  42660a:	add    al,0x0
  42660c:	add    BYTE PTR [ecx-0x22e63271],bl
  426612:	mov    DWORD PTR ds:0x2fe29799,esi
  426618:	(bad)  
  426619:	scas   al,BYTE PTR es:[edi]
  42661a:	dec    edx
  42661b:	pop    edi
  42661c:	ds jo  0x4265d5
  42661f:	rol    DWORD PTR [esi+0x53f4085c],cl
  426625:	dec    ebp
  426626:	cli    
  426627:	mov    ecx,ebx
  426629:	ins    DWORD PTR es:[edi],dx
  42662a:	and    eax,0x19ad8f22
  42662f:	jbe    0x4265d6
  426631:	mov    ch,0xb2
  426633:	xchg   esi,eax
  426634:	dec    edx
  426635:	adc    al,bl
  426637:	int3   
  426638:	sub    BYTE PTR [eax+0x39],ah
  42663b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42663c:	mov    edx,0xe65b3419
  426641:	dec    esi
  426642:	sub    eax,0x5dbd7413
  426647:	(bad)  
  426648:	push   cs
  426649:	je     0x426651
  42664b:	sub    esp,ebx
  42664d:	fst    QWORD PTR [edi+0x5a2b4bc5]
  426653:	sbb    eax,0xc4c67c21
  426658:	das    
  426659:	push   ebp
  42665a:	xchg   ecx,eax
  42665b:	dec    ecx
  42665c:	and    dl,bh
  42665e:	stos   DWORD PTR es:[edi],eax
  42665f:	(bad)  
  426660:	shl    DWORD PTR [ecx],cl
  426662:	fstp   QWORD PTR [edi+0x958820e]
  426668:	in     eax,dx
  426669:	jl     0x426671
  42666b:	pop    ss
  42666c:	xrelease mov DWORD PTR [esi],ebx
  42666f:	jmp    0xee50:0x4c17518b
  426676:	add    BYTE PTR [esi-0x2],ch
  426679:	data16 out 0x55,al
  42667c:	mov    cl,BYTE PTR [esi-0x777af0f1]
  426682:	ret    
  426683:	int    0x49
  426685:	ret    
  426686:	shl    cl,1
  426688:	dec    edi
  426689:	push   0x49
  42668b:	pop    edi
  42668c:	cdq    
  42668d:	jno    0x426676
  42668f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426690:	inc    eax
  426691:	xor    bl,ch
  426693:	in     eax,dx
  426694:	xchg   esp,eax
  426695:	inc    eax
  426696:	lock enter 0xa65c,0x19
  42669b:	mov    edx,0x5eef1d86
  4266a0:	lock xor ch,bl
  4266a3:	faddp  st(5),st
  4266a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a6:	jne    0x426717
  4266a8:	nop
  4266a9:	scas   eax,DWORD PTR es:[edi]
  4266aa:	dec    eax
  4266ab:	out    0xbb,eax
  4266ad:	arpl   WORD PTR [ecx-0x29681574],di
  4266b3:	loopne 0x426675
  4266b5:	xchg   ebx,eax
  4266b6:	popa   
  4266b7:	add    BYTE PTR [ebx-0x2b3fa77],ch
  4266bd:	int3   
  4266be:	xor    al,0x18
  4266c0:	adc    ebx,DWORD PTR [ecx]
  4266c2:	add    esi,DWORD PTR [edi+0x1c93700a]
  4266c8:	adc    BYTE PTR [eax+0x30c7d64f],dl
  4266ce:	jg     0x42673d
  4266d0:	lock ins BYTE PTR es:[edi],dx
  4266d2:	data16 fidivr WORD PTR [ebx+0x542e6b02]
  4266d9:	sbb    DWORD PTR [edx+0x37],0xffffffa5
  4266dd:	pop    ss
  4266de:	fsubr  QWORD PTR [ebp+0x33ceff4d]
  4266e4:	mov    WORD PTR [ecx+0x13],fs
  4266e7:	(bad)  
  4266e8:	xor    al,0xe3
  4266ea:	jmp    0x42668a
  4266ec:	int    0x3f
  4266ee:	jecxz  0x426733
  4266f0:	dec    DWORD PTR [esi-0x4b23553e]
  4266f6:	test   al,0xf2
  4266f8:	sbb    DWORD PTR [edi],edx
  4266fa:	lods   eax,DWORD PTR ds:[esi]
  4266fb:	in     al,dx
  4266fc:	mov    esi,0x316c4992
  426701:	xchg   ebx,eax
  426702:	pop    esi
  426703:	popa   
  426704:	in     eax,0xa6
  426706:	adc    eax,0x7373e254
  42670b:	sub    BYTE PTR [eax-0x20ff1f1d],bh
  426711:	(bad)  
  426712:	out    0x92,al
  426714:	mov    al,ds:0xff581be2
  426719:	arpl   WORD PTR [edi+0x2573c750],dx
  42671f:	or     eax,0xb7ee1a93
  426724:	hlt    
  426725:	mov    bl,0x25
  426727:	cld    
  426728:	cwde   
  426729:	call   0xae7b:0xe8042753
  426730:	in     eax,dx
  426731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426732:	imul   edx,DWORD PTR [edx],0x50f9c46
  426738:	out    dx,eax
  426739:	pop    ebx
  42673a:	stos   DWORD PTR es:[edi],eax
  42673b:	jo     0x426736
  42673d:	pop    esp
  42673e:	ror    BYTE PTR [ecx*1+0x301ddc14],1
  426745:	sub    ebp,DWORD PTR [edi]
  426747:	les    eax,FWORD PTR [ebp+ebx*8-0x1c]
  42674b:	cwde   
  42674c:	push   esi
  42674d:	data16 icebp 
  42674f:	mov    ch,0xe3
  426751:	mov    eax,ds:0x1e259c7c
  426756:	jo     0x4266fe
  426758:	ins    BYTE PTR es:[edi],dx
  426759:	test   dh,ah
  42675b:	push   DWORD PTR [eax-0x20]
  42675e:	in     al,0xb1
  426760:	adc    DWORD PTR [ebx-0x2f],edx
  426763:	jge    0x426743
  426765:	cmp    esp,DWORD PTR ds:0x67c30c24
  42676b:	xor    BYTE PTR [esi],dl
  42676d:	inc    edx
  42676e:	test   BYTE PTR [edi-0x443df4fc],bh
  426774:	fnstsw WORD PTR [edi+0x2e]
  426777:	sub    esi,DWORD PTR [ecx-0x27]
  42677a:	push   esi
  42677b:	call   0xac02:0xf56f3f0b
  426782:	lods   eax,DWORD PTR ds:[esi]
  426783:	sbb    eax,0x2c6dd21e
  426788:	adc    BYTE PTR [eax+0x3e],0xdc
  42678c:	or     DWORD PTR [esi],0x6165ed66
  426792:	inc    edi
  426793:	mov    ds:0xf63fcdf,eax
  426798:	sub    al,dl
  42679a:	push   es
  42679b:	fild   WORD PTR [ecx]
  42679d:	pop    esp
  42679e:	je     0x4267b6
  4267a0:	data16 (bad) 
  4267a3:	and    al,0x73
  4267a5:	aas    
  4267a6:	mov    DWORD PTR [ebp+0x4c],esp
  4267a9:	jb     0x4267f5
  4267ab:	jno    0x426774
  4267ad:	jle    0x426820
  4267af:	xchg   DWORD PTR [eax-0x71],esi
  4267b2:	jmp    0xc8a2:0x915f2cea
  4267b9:	gs je  0x426819
  4267bc:	bound  ebx,QWORD PTR [edx+0x97aaf22]
  4267c2:	out    dx,eax
  4267c3:	test   DWORD PTR [esi+0x22],esp
  4267c6:	cli    
  4267c7:	mov    al,ds:0x5ac379e1
  4267cc:	sbb    BYTE PTR [ebx+0x6266c541],bh
  4267d2:	sbb    al,0x23
  4267d4:	mov    cl,0x7f
  4267d6:	cwde   
  4267d7:	push   es
  4267d8:	les    ebx,FWORD PTR ds:0x88d84c20
  4267de:	adc    al,BYTE PTR [eax-0x1c]
  4267e1:	inc    edx
  4267e2:	adc    al,0x26
  4267e4:	pop    ebx
  4267e5:	sub    ebp,DWORD PTR [edx+0x1d05327f]
  4267eb:	xchg   edx,eax
  4267ec:	jg     0x4267d0
  4267ee:	repnz push esi
  4267f0:	jbe    0x426785
  4267f2:	mov    cl,0x9d
  4267f4:	push   cs
  4267f5:	mov    ecx,0xc06e5d7e
  4267fa:	ins    DWORD PTR es:[edi],dx
  4267fb:	pop    ss
  4267fc:	inc    eax
  4267fd:	jno    0x4267ae
  4267ff:	fcom   DWORD PTR [edi+edi*2+0x42]
  426803:	test   DWORD PTR [ebx+ebp*8+0x9d7c7c2],edx
  42680a:	xor    DWORD PTR [ebx+0x2a17da7f],ebp
  426810:	pop    ecx
  426811:	iret   
  426812:	push   edx
  426813:	(bad)  
  426814:	sbb    dh,al
  426816:	clc    
  426817:	cdq    
  426818:	jae    0x4267d5
  42681a:	jnp    0x426889
  42681c:	fwait
  42681d:	and    dl,BYTE PTR [ecx+0x2]
  426820:	and    eax,0xb197e770
  426825:	sbb    al,0x1c
  426827:	adc    eax,0xc50b6dbc
  42682c:	jmp    0xf4b4:0xac321dab
  426833:	das    
  426834:	xchg   edx,eax
  426835:	and    DWORD PTR [ecx],eax
  426837:	out    dx,al
  426838:	lds    edx,FWORD PTR [ebp-0xa]
  42683b:	cld    
  42683c:	xor    edi,DWORD PTR [ecx+0x19]
  42683f:	inc    ebp
  426840:	push   0x4079b857
  426845:	adc    DWORD PTR [edi+0x66fbe98f],ecx
  42684b:	pop    esi
  42684c:	mov    al,0xbd
  42684e:	xchg   DWORD PTR [edx-0x74],eax
  426851:	push   0x84cc10af
  426856:	sub    BYTE PTR [edx+0x31edd4e6],cl
  42685c:	cwde   
  42685d:	loop   0x42682c
  42685f:	fld    st(5)
  426861:	cmp    eax,0xc2087a9
  426866:	popa   
  426867:	push   es
  426868:	ds retf 0x6ce5
  42686c:	mov    edx,0xa8d5e3e4
  426871:	jg     0x426872
  426873:	je     0x42688e
  426875:	stos   BYTE PTR es:[edi],al
  426876:	shl    edx,cl
  426878:	pop    esi
  426879:	test   esi,ecx
  42687b:	xchg   DWORD PTR [ecx+ecx*4+0x6a2fd15f],esp
  426882:	adc    al,0x51
  426884:	pusha  
  426885:	dec    edx
  426886:	scas   eax,DWORD PTR es:[edi]
  426887:	mov    esp,0x40317234
  42688c:	add    dl,ah
  42688e:	rcl    BYTE PTR ds:0xf63e8459,1
  426894:	lods   eax,DWORD PTR ds:[esi]
  426895:	xor    BYTE PTR [ecx],cl
  426897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426898:	add    BYTE PTR [ebx+esi*2+0x50],dl
  42689c:	fbld   TBYTE PTR [edi-0x5e]
  42689f:	aam    0x79
  4268a1:	jp     0x42684a
  4268a3:	aaa    
  4268a4:	add    DWORD PTR [edi+0x78f4996c],edi
  4268aa:	loop   0x426892
  4268ac:	jle    0x426874
  4268ae:	rcr    DWORD PTR [eax],0xda
  4268b1:	jecxz  0x4268b0
  4268b3:	sbb    DWORD PTR ds:0x989d017e,0xffffffde
  4268ba:	int3   
  4268bb:	arpl   WORD PTR ds:0xa327be88,sp
  4268c1:	ret    
  4268c2:	lahf   
  4268c3:	les    ebp,FWORD PTR [eax]
  4268c5:	shl    ah,cl
  4268c7:	jo     0x4268b5
  4268c9:	scas   eax,DWORD PTR es:[edi]
  4268ca:	ret    0x30d7
  4268cd:	ret    0xc2a5
  4268d0:	fld    TBYTE PTR [edi-0x7fe0923d]
  4268d6:	hlt    
  4268d7:	jmp    0x9447:0x92b0f80b
  4268de:	into   
  4268df:	mov    al,BYTE PTR gs:[eax+0x2d]
  4268e3:	or     esi,ebx
  4268e5:	je     0x4268cc
  4268e7:	push   ebp
  4268e8:	dec    esp
  4268e9:	jo     0x426876
  4268eb:	loopne 0x42695c
  4268ed:	push   ecx
  4268ee:	stos   BYTE PTR es:[edi],al
  4268ef:	outs   dx,DWORD PTR ds:[esi]
  4268f0:	sti    
  4268f1:	ret    
  4268f2:	mov    ebp,0xc0e1f252
  4268f7:	add    BYTE PTR [edx+eiz*4-0x4e108d83],dh
  4268fe:	call   0x2b333fa6
  426903:	pop    ebp
  426904:	out    0x49,eax
  426906:	add    DWORD PTR [eax],esp
  426908:	lods   al,BYTE PTR ds:[esi]
  426909:	add    esp,DWORD PTR [ecx]
  42690b:	das    
  42690c:	add    al,0x6c
  42690e:	inc    edi
  42690f:	jle    0x42698d
  426911:	call   0x8ff3edc6
  426916:	push   ds
  426917:	dec    ebx
  426918:	stos   BYTE PTR es:[edi],al
  426919:	mov    edx,0x5a0576b4
  42691e:	lds    ecx,FWORD PTR [esi]
  426920:	jg     0x426940
  426922:	cmp    ebp,ecx
  426924:	or     ebp,DWORD PTR [ecx-0x3d1dd1ba]
  42692a:	mov    ecx,0x14d1081c
  42692f:	lods   eax,DWORD PTR ds:[esi]
  426930:	xchg   ebx,eax
  426931:	jb     0x42693d
  426933:	xor    DWORD PTR [bp+di],edx
  426936:	loop   0x426975
  426938:	repnz fwait
  42693a:	mov    eax,cs:0x3338e8dc
  426940:	ret    
  426941:	push   0x31df04df
  426946:	lds    edx,FWORD PTR [edi+0x36]
  426949:	out    dx,al
  42694a:	imul   eax,DWORD PTR ds:0xbd5b4f82,0x10
  426951:	inc    edi
  426952:	mov    esi,0xaaf5f0b2
  426957:	mov    ah,0x6
  426959:	fisubr WORD PTR [esi+eax*4-0x7096bb24]
  426960:	popa   
  426961:	pop    ecx
  426962:	pop    eax
  426963:	pop    esi
  426964:	mov    edx,0x780dea46
  426969:	mov    ch,0x99
  42696b:	(bad)  [edi+eax*8+0xde1cba]
  426972:	jmp    0x764938fb
  426977:	cmp    dl,BYTE PTR [ebx+0x8fcba02]
  42697d:	pop    ebp
  42697e:	pop    eax
  42697f:	and    edi,DWORD PTR [eax-0x3b]
  426982:	fdivr  DWORD PTR [edx+0x5b]
  426985:	in     eax,dx
  426986:	in     eax,dx
  426987:	and    ah,BYTE PTR [edi+0x21829cc0]
  42698d:	inc    ebp
  42698e:	sbb    BYTE PTR [esi+edi*8],bh
  426991:	int    0xe4
  426993:	and    BYTE PTR [eax+0x3b],ch
  426996:	bound  edx,QWORD PTR [esi+esi*4-0x1e]
  42699a:	and    edx,edi
  42699c:	ffree  st(0)
  42699e:	or     BYTE PTR [ebx-0x17],0x27
  4269a2:	mov    DWORD PTR [esi],0xc2b94e5b
  4269a8:	mov    WORD PTR [esi+eiz*1-0x3e8d67c4],?
  4269af:	mov    esi,DWORD PTR [ebp+0x2d67504]
  4269b5:	sbb    eax,0x564e94f7
  4269ba:	jecxz  0x426a2e
  4269bc:	stc    
  4269bd:	cld    
  4269be:	sub    ah,al
  4269c0:	push   0xd06a7b4d
  4269c5:	int3   
  4269c6:	sbb    al,BYTE PTR [eax-0x816f7c8]
  4269cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269cd:	or     al,0xb9
  4269cf:	(bad)  
  4269d0:	mov    ch,0x24
  4269d2:	mov    edx,0x8bd64bb2
  4269d7:	dec    ecx
  4269d8:	jb     0x4269f6
  4269da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269db:	fld    DWORD PTR [edx+0x593f04e5]
  4269e1:	imul   ebx,esp,0xffffffcd
  4269e4:	aam    0x63
  4269e6:	imul   ecx,DWORD PTR [ebp+0x23],0x1e
  4269ea:	push   eax
  4269eb:	push   ds
  4269ec:	or     al,0x53
  4269ee:	jle    0x426982
  4269f0:	and    ecx,DWORD PTR [edi]
  4269f2:	leave  
  4269f3:	inc    edx
  4269f4:	call   0x18e1a447
  4269f9:	outs   dx,BYTE PTR ds:[esi]
  4269fa:	or     al,0xfe
  4269fc:	inc    esp
  4269fd:	lahf   
  4269fe:	ja     0x4269ea
  426a00:	dec    ebp
  426a01:	sbb    cl,BYTE PTR [edx]
  426a03:	int    0x12
  426a05:	addr16 inc esi
  426a07:	mov    DWORD PTR [eax],edi
  426a09:	inc    ecx
  426a0a:	imul   ch
  426a0c:	jle    0x4269ab
  426a0e:	(bad)  es:[ecx-0x79]
  426a12:	inc    esp
  426a13:	retf   0x87a9
  426a16:	xor    BYTE PTR [ebp-0x2974fe6f],ch
  426a1c:	jns    0x426a14
  426a1e:	mov    WORD PTR [edx+0xf],gs
  426a21:	into   
  426a22:	add    DWORD PTR [eax-0x131bc500],edi
  426a28:	push   eax
  426a29:	dec    edx
  426a2a:	aaa    
  426a2b:	inc    edx
  426a2c:	xchg   esi,eax
  426a2d:	rcr    DWORD PTR [eax+edi*4+0x487c285d],0xe0
  426a35:	enter  0x1510,0x4
  426a39:	push   DWORD PTR [ebp-0x74]
  426a3c:	inc    ecx
  426a3d:	mov    bl,0x3f
  426a3f:	in     eax,dx
  426a40:	and    al,0x25
  426a42:	lods   eax,DWORD PTR ds:[esi]
  426a43:	sub    DWORD PTR [esi+0x1aa9e702],0x8a2a6085
  426a4d:	aaa    
  426a4e:	iret   
  426a4f:	iret   
  426a50:	in     al,dx
  426a51:	xchg   esp,ebp
  426a53:	sub    ebx,DWORD PTR gs:[eax-0x5d]
  426a57:	stos   BYTE PTR es:[edi],al
  426a58:	dec    ebp
  426a59:	aad    0x2a
  426a5b:	dec    edx
  426a5c:	pop    edx
  426a5d:	push   0xc1ed66d9
  426a62:	push   0x9f1a86ae
  426a67:	push   esp
  426a68:	and    al,BYTE PTR [edi-0xd3a0705]
  426a6e:	xchg   DWORD PTR [esi+0x1ff44f58],esi
  426a74:	fild   QWORD PTR gs:[ecx-0x50a16dba]
  426a7b:	adc    ebp,DWORD PTR [edi+0x6cd93997]
  426a81:	(bad)  
  426a82:	push   ss
  426a83:	xor    DWORD PTR [edi+0xcd29095],esi
  426a89:	inc    edi
  426a8a:	pop    ebp
  426a8b:	cmp    eax,0x79fbcac0
  426a90:	or     eax,0x7ac28227
  426a95:	cmp    al,0x92
  426a97:	out    0xd4,eax
  426a99:	xor    bh,bh
  426a9b:	pop    esi
  426a9c:	push   cs
  426a9d:	sbb    DWORD PTR [eax-0x490225e6],edx
  426aa3:	pop    eax
  426aa4:	frstor [ecx+0x1b]
  426aa7:	jb     0x426a6d
  426aa9:	or     BYTE PTR [eax+0x5f],0x18
  426aad:	cli    
  426aae:	and    cl,BYTE PTR [edi-0x42ae8ee3]
  426ab4:	int3   
  426ab5:	aaa    
  426ab6:	xchg   ecx,eax
  426ab7:	jo     0x426a7b
  426ab9:	nop
  426aba:	add    DWORD PTR [edx-0x4bf9982],esi
  426ac0:	call   0x10:0xc0bc0c7a
  426ac7:	imul   ebp,ebp,0x9e91b041
  426acd:	ds xor al,0x22
  426ad0:	hlt    
  426ad1:	popf   
  426ad2:	out    dx,eax
  426ad3:	or     al,0x48
  426ad5:	inc    edx
  426ad6:	jb     0x426b00
  426ad8:	pop    ecx
  426ad9:	lods   al,BYTE PTR ds:[esi]
  426ada:	or     ebx,esp
  426adc:	sbb    ebp,DWORD PTR [edi]
  426ade:	out    0xf8,al
  426ae0:	pushf  
  426ae1:	cdq    
  426ae2:	mov    al,ds:0xe6dcf18a
  426ae7:	adc    eax,0xe9cce09a
  426aec:	jne    0x426a9c
  426aee:	adc    ebp,DWORD PTR ds:0x8f595721
  426af4:	cmp    eax,0xdf2a8fc0
  426af9:	jmp    0x426b17
  426afb:	pop    edi
  426afc:	and    BYTE PTR [esi-0x5cdaec00],0x96
  426b03:	test   DWORD PTR [edi],esp
  426b05:	and    DWORD PTR [ecx+ebp*8],0xfbdfed93
  426b0c:	call   DWORD PTR ss:[ebp+edi*4+0x70051790]
  426b14:	(bad)  
  426b15:	in     eax,dx
  426b16:	loopne 0x426b19
  426b18:	add    al,bh
  426b1a:	add    al,0x0
  426b1c:	add    BYTE PTR [esi+0x67bdeb08],dh
  426b22:	pop    ecx
  426b23:	pop    ss
  426b24:	inc    esi
  426b25:	push   0xffffffa3
  426b27:	sbb    dl,BYTE PTR [ebp+0x7ec31341]
  426b2d:	xchg   esp,eax
  426b2e:	push   ecx
  426b2f:	lock mov ds:0xae04332e,al
  426b35:	test   al,0x18
  426b37:	outs   dx,DWORD PTR ds:[esi]
  426b38:	imul   eax,DWORD PTR [ebx-0x625f24c1],0x50
  426b3f:	dec    edx
  426b40:	sbb    ah,BYTE PTR [esi]
  426b42:	out    0xf8,eax
  426b44:	sbb    BYTE PTR [ebp-0x47cb200d],bh
  426b4a:	addr16 retf 0x8a67
  426b4e:	(bad)  
  426b4f:	icebp  
  426b50:	jp     0x426b18
  426b52:	mov    al,BYTE PTR [ebx]
  426b54:	inc    ecx
  426b55:	adc    edx,0xe1695ae8
  426b5b:	pop    ebp
  426b5c:	int    0xe1
  426b5e:	shl    BYTE PTR [edx+ebx*4],cl
  426b61:	aaa    
  426b62:	cmp    dh,BYTE PTR [ebx+0x70]
  426b65:	jns    0x426afb
  426b67:	sub    ebx,DWORD PTR [esi]
  426b69:	test   al,0x21
  426b6b:	ret    
  426b6c:	shl    DWORD PTR [ebx+0x65],1
  426b6f:	push   ebp
  426b70:	dec    edx
  426b71:	loop   0x426bcd
  426b73:	jge    0x426b47
  426b75:	cmp    DWORD PTR [edi],ecx
  426b77:	fwait
  426b78:	and    BYTE PTR [ebx+0x19d91a80],dh
  426b7e:	mov    edi,0x84ed7901
  426b83:	retf   
  426b84:	not    BYTE PTR [esi]
  426b86:	add    ch,0x52
  426b89:	cmp    DWORD PTR [edx-0x3060f5f9],0x56843e30
  426b93:	lahf   
  426b94:	int    0x2e
  426b96:	in     eax,0x3b
  426b98:	lods   al,BYTE PTR ds:[esi]
  426b99:	int3   
  426b9a:	fldcw  WORD PTR [esp+ebp*1+0x7f]
  426b9e:	arpl   WORD PTR [ecx],bp
  426ba0:	ret    
  426ba1:	jae    0x426b48
  426ba3:	in     al,dx
  426ba4:	mov    bl,cl
  426ba6:	(bad)  
  426ba8:	ds fs xchg esp,eax
  426bab:	push   es
  426bac:	jae    0x426b8c
  426bae:	jnp    0x426ba2
  426bb0:	in     al,dx
  426bb1:	fld    TBYTE PTR [eax+0x3be9b321]
  426bb7:	retf   
  426bb8:	shl    ah,cl
  426bba:	dec    ebx
  426bbb:	pop    ebx
  426bbc:	inc    esi
  426bbd:	xchg   esi,eax
  426bbe:	dec    esp
  426bbf:	xor    bl,BYTE PTR [ebp-0x22]
  426bc2:	cmovle esp,DWORD PTR [edx+edi*4-0x50]
  426bc7:	or     ebp,0xf8bce5da
  426bcd:	aad    0xa5
  426bcf:	cld    
  426bd0:	jae    0x426b5b
  426bd2:	ror    DWORD PTR [edi],0x6e
  426bd5:	fsubr  DWORD PTR [esi-0x4e4ebb8f]
  426bdb:	fsub   QWORD PTR [esi]
  426bdd:	cmc    
  426bde:	mul    BYTE PTR [ecx-0x1c1f5d6a]
  426be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426be5:	daa    
  426be6:	cwde   
  426be7:	(bad)  
  426be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426be9:	pop    edx
  426bea:	sub    bh,BYTE PTR [edi]
  426bec:	jmp    0x9bc1:0x7f7c7abc
  426bf3:	lds    ebx,FWORD PTR [esi+ebx*4+0x7d550e15]
  426bfa:	or     DWORD PTR [esi],ebx
  426bfc:	or     al,0xdc
  426bfe:	jo     0x426bc0
  426c00:	sbb    DWORD PTR [edi],ebp
  426c02:	dec    esi
  426c03:	adc    BYTE PTR gs:[esi+0x6ea32812],dl
  426c0a:	popf   
  426c0b:	js     0x426baa
  426c0d:	sub    BYTE PTR [edi],bh
  426c0f:	rol    BYTE PTR [esi],0xa4
  426c12:	add    eax,0xb3342d30
  426c17:	jnp    0x426bb0
  426c19:	push   esi
  426c1a:	cmp    BYTE PTR [esi-0x7d],0x6e
  426c1e:	sub    BYTE PTR [ebx],dl
  426c20:	mov    dh,0xc0
  426c22:	ss xchg esi,eax
  426c24:	cli    
  426c25:	sbb    eax,0x209576a4
  426c2a:	and    DWORD PTR [ebp+0x2d4478e3],ebp
  426c30:	push   0xffffffa8
  426c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c33:	mov    ebp,0xdb8401c0
  426c38:	inc    esp
  426c39:	sahf   
  426c3a:	and    BYTE PTR [edi-0x68ff8c2c],ch
  426c40:	fnsave [edi-0x7420e946]
  426c46:	xor    ch,ah
  426c48:	xlat   BYTE PTR ds:[ebx]
  426c49:	jns    0x426cc7
  426c4b:	push   ecx
  426c4c:	mov    al,0x14
  426c4e:	xor    edx,esp
  426c50:	dec    ebp
  426c51:	cli    
  426c52:	retf   0x527b
  426c55:	sahf   
  426c56:	sbb    ebx,DWORD PTR [edi-0x373ae12c]
  426c5c:	pop    edx
  426c5d:	add    eax,0x72bf4905
  426c62:	and    eax,0x20755408
  426c67:	fld    DWORD PTR [esp+edx*1-0xe5060db]
  426c6e:	xchg   ebp,eax
  426c6f:	enter  0x86f,0xfd
  426c73:	pop    ecx
  426c74:	dec    esp
  426c75:	push   edx
  426c76:	idiv   DWORD PTR [esi+0x73ae26f9]
  426c7c:	frstor [ecx+0x22]
  426c7f:	dec    ebx
  426c80:	pop    esi
  426c81:	jl     0x426cbd
  426c83:	ins    BYTE PTR es:[edi],dx
  426c84:	push   es
  426c85:	and    al,0x24
  426c87:	out    dx,al
  426c88:	lahf   
  426c89:	mov    ds:0xdbb5de97,eax
  426c8e:	into   
  426c8f:	dec    ecx
  426c90:	cmp    eax,0x8cf6f01e
  426c95:	xor    ebx,DWORD PTR [edi+0x764df815]
  426c9b:	jmp    0xaba5aecc
  426ca0:	jbe    0x426d0f
  426ca2:	xor    DWORD PTR [eax+0x653aa7a2],ecx
  426ca8:	pop    esi
  426ca9:	scas   eax,DWORD PTR es:[edi]
  426caa:	shl    DWORD PTR [esi-0x22d9f181],0xb1
  426cb1:	xor    ebx,DWORD PTR [eax+edi*2]
  426cb4:	int    0x68
  426cb6:	leave  
  426cb7:	dec    esp
  426cb8:	push   edx
  426cb9:	jnp    0x426c80
  426cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cbc:	cli    
  426cbd:	xor    DWORD PTR [esi+0x3c],edx
  426cc0:	jl     0x426ca5
  426cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cc3:	fdiv   QWORD PTR [ebx]
  426cc5:	inc    ecx
  426cc6:	cs pusha 
  426cc8:	mov    ah,0xb4
  426cca:	jo     0x426c66
  426ccc:	stos   DWORD PTR es:[edi],eax
  426ccd:	xor    al,0xc4
  426ccf:	leave  
  426cd0:	jbe    0x426c6f
  426cd2:	sbb    dl,ch
  426cd4:	cmp    BYTE PTR [edx+0x5aa4108f],ch
  426cda:	mov    cl,0x17
  426cdc:	outs   dx,BYTE PTR ds:[esi]
  426cdd:	jg     0x426c7b
  426cdf:	dec    edi
  426ce0:	xchg   BYTE PTR [edi],dl
  426ce2:	ja     0x426d27
  426ce4:	jmp    0x426c7b
  426ce6:	fnsave [ebp-0x6f]
  426ce9:	int    0x12
  426ceb:	push   esp
  426cec:	ja     0x426d44
  426cee:	add    bh,BYTE PTR [esi+0x29]
  426cf1:	fiadd  WORD PTR [bx+si-0x55]
  426cf5:	ins    DWORD PTR es:[edi],dx
  426cf6:	test   al,0xb7
  426cf8:	or     DWORD PTR [edx+edi*1],ebp
  426cfb:	popa   
  426cfc:	stos   DWORD PTR es:[edi],eax
  426cfd:	lock arpl WORD PTR [eax-0x8],dx
  426d01:	push   ecx
  426d02:	stc    
  426d03:	xor    BYTE PTR ds:0xd78ddd7a,bl
  426d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d0a:	ret    
  426d0b:	inc    esp
  426d0c:	imul   ebp,ebx,0xffffff91
  426d0f:	cld    
  426d10:	cs xor al,0xb7
  426d13:	jb     0x426ce9
  426d15:	fdivr  st(3),st
  426d17:	jge    0x426d06
  426d19:	jmp    0x426d7e
  426d1b:	xor    eax,esi
  426d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d1e:	sbb    BYTE PTR [ebx+edi*1],bh
  426d21:	fadd   QWORD PTR [esi-0x62]
  426d24:	jge    0x426d01
  426d26:	out    0xfa,eax
  426d28:	adc    esi,edx
  426d2a:	mov    ebx,0x94e9b88f
  426d2f:	inc    ecx
  426d30:	mov    cl,0x75
  426d32:	shl    DWORD PTR [ebx],0xc7
  426d35:	jnp    0x426d07
  426d37:	jl     0x426d9e
  426d39:	mov    cl,0xe6
  426d3b:	out    dx,al
  426d3c:	mov    ch,0xca
  426d3e:	imul   esi,DWORD PTR [ebx+edi*8],0xffffffa7
  426d42:	imul   esp,DWORD PTR [esi-0x70],0xc6f315c2
  426d49:	mov    al,0xad
  426d4b:	mov    eax,ds:0xcfeafe03
  426d50:	and    edx,esp
  426d52:	push   cs
  426d53:	push   cs
  426d54:	inc    edx
  426d55:	hlt    
  426d56:	adc    DWORD PTR es:[eax+0x41c8f344],edi
  426d5d:	imul   edx,DWORD PTR [eax],0x92f5895e
  426d63:	mov    al,0x76
  426d65:	xchg   ecx,eax
  426d66:	mov    ebp,ebx
  426d68:	clc    
  426d69:	mov    DWORD PTR [eax+ebp*1-0x7d],edx
  426d6d:	cli    
  426d6e:	cmp    edi,DWORD PTR [ebp+0x6c8d2c6b]
  426d74:	mov    DWORD PTR [esi],ebp
  426d76:	add    ebp,esp
  426d78:	js     0x426db2
  426d7a:	dec    esi
  426d7b:	sahf   
  426d7c:	sub    DWORD PTR [edx-0x23],edx
  426d7f:	in     eax,0xd8
  426d81:	mov    bh,0x2c
  426d83:	mov    esp,0xe3d82822
  426d88:	jl     0x426db4
  426d8a:	bound  ebx,QWORD PTR [ecx+0x10]
  426d8d:	(bad)  
  426d8e:	add    eax,0xd1d549d1
  426d93:	fcmovnu st,st(7)
  426d95:	retf   0xb923
  426d98:	pop    es
  426d99:	jmp    0x91c5bf37
  426d9e:	mov    edx,DWORD PTR [ebx-0x1c]
  426da1:	push   0x4c54b94b
  426da6:	adc    eax,0xa561e32
  426dab:	or     dl,ah
  426dad:	fistp  DWORD PTR [ebx-0x30113df0]
  426db3:	jne    0x426d4f
  426db5:	xor    al,0x6e
  426db7:	jp     0x426dac
  426db9:	(bad)  
  426dba:	xor    ebx,DWORD PTR [eax]
  426dbc:	push   ebp
  426dbd:	inc    ebx
  426dbe:	mov    esi,0x9b5df1c9
  426dc3:	fcom   DWORD PTR [esi]
  426dc5:	lea    esi,[ecx+0x44]
  426dc8:	xor    ax,0x1c4a
  426dcc:	xchg   edi,eax
  426dcd:	sbb    bh,ah
  426dcf:	clc    
  426dd0:	test   eax,0x8a314ca0
  426dd5:	pop    ebx
  426dd6:	inc    edi
  426dd7:	dec    edx
  426dd8:	adc    dh,dl
  426dda:	js     0x426d9d
  426ddc:	mov    dh,0x51
  426dde:	ror    DWORD PTR [edx],0x35
  426de1:	(bad)  
  426de2:	(bad)  
  426de3:	mov    al,0xee
  426de5:	or     DWORD PTR [edx-0x2b],eax
  426de8:	in     al,dx
  426de9:	sub    eax,0x7d39144c
  426dee:	sahf   
  426def:	dec    bx
  426df1:	mov    ebx,0x5f05ecbb
  426df6:	jl     0x426d91
  426df8:	and    al,0x7f
  426dfa:	sbb    eax,esp
  426dfc:	fisub  WORD PTR [esi+0x62]
  426dff:	pop    edi
  426e00:	imul   ebx,ebx,0xffffffbb
  426e03:	lahf   
  426e04:	aam    0xdf
  426e06:	dec    esi
  426e07:	sub    ebp,DWORD PTR [esi-0x54]
  426e0a:	into   
  426e0b:	fwait
  426e0c:	push   edx
  426e0d:	dec    esi
  426e0e:	fld    QWORD PTR [edi]
  426e10:	iret   
  426e11:	shl    BYTE PTR [edi],0x6
  426e14:	cwde   
  426e15:	repz out dx,al
  426e17:	or     BYTE PTR [edx-0x272271e0],dl
  426e1d:	mov    eax,ds:0xfbb46b7e
  426e22:	loope  0x426e29
  426e24:	or     BYTE PTR [eax],dh
  426e26:	ret    
  426e27:	sar    DWORD PTR [edx],0x5c
  426e2a:	nop
  426e2b:	jbe    0x426e20
  426e2d:	push   esp
  426e2e:	xor    DWORD PTR [edx],0x8d0d1715
  426e34:	pop    edx
  426e35:	arpl   WORD PTR [edx+0x53],dx
  426e38:	out    0x81,eax
  426e3a:	mov    ah,0x5e
  426e3c:	outs   dx,DWORD PTR ds:[esi]
  426e3d:	shl    BYTE PTR [eax+0x7b],cl
  426e40:	retf   0x97a7
  426e43:	cdq    
  426e44:	jp     0x426ea4
  426e46:	stc    
  426e47:	jb     0x426e4d
  426e49:	push   es
  426e4a:	xchg   edx,eax
  426e4b:	cmc    
  426e4c:	out    0x4f,al
  426e4e:	mov    esp,0x2db0349d
  426e53:	inc    edx
  426e54:	mov    edx,0xd76b470e
  426e59:	data16 jp 0x426e95
  426e5c:	inc    edx
  426e5d:	sbb    eax,0x381ef63
  426e62:	mov    ebp,0x9a1fc0
  426e67:	adc    dl,BYTE PTR [ebx+0xcc52731]
  426e6d:	icebp  
  426e6e:	fs je  0x426df2
  426e71:	inc    esi
  426e72:	inc    ebx
  426e73:	mov    bl,0x79
  426e75:	and    dh,BYTE PTR [ebp-0xe]
  426e78:	cwde   
  426e79:	fdivp  st(4),st
  426e7b:	montmul (bad)
  426e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e7d:	push   es
  426e7e:	pusha  
  426e7f:	mov    dh,0xf3
  426e81:	outs   dx,BYTE PTR ds:[esi]
  426e82:	fld    st(1)
  426e84:	xchg   BYTE PTR [eax+0x1ebb44c],cl
  426e8a:	xor    BYTE PTR [ebx],0x42
  426e8d:	jb     0x426e5b
  426e8f:	outs   dx,DWORD PTR ds:[esi]
  426e90:	stos   BYTE PTR es:[edi],al
  426e91:	sar    DWORD PTR [edx+eiz*8-0x271b040b],cl
  426e98:	ror    BYTE PTR [ecx-0x25],1
  426e9b:	fcom   st(2)
  426e9d:	mov    edx,0x9fbd31
  426ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ea3:	retf   0x8a70
  426ea6:	pushf  
  426ea7:	and    DWORD PTR [esi-0x5bea525],ebx
  426ead:	hlt    
  426eae:	and    al,0xd9
  426eb0:	mov    eax,ds:0xbc3b0f50
  426eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426eb6:	outs   dx,DWORD PTR ds:[esi]
  426eb7:	leave  
  426eb8:	fwait
  426eb9:	out    0xc2,al
  426ebb:	clc    
  426ebc:	lods   al,BYTE PTR ds:[esi]
  426ebd:	dec    ebp
  426ebe:	add    ebp,DWORD PTR [ebx+esi*4-0x1ae17309]
  426ec5:	push   ds
  426ec6:	inc    edi
  426ec7:	mov    ebx,0xbfaf6a0
  426ecc:	cld    
  426ecd:	pop    eax
  426ece:	sti    
  426ecf:	fild   DWORD PTR [ecx+0x171339d]
  426ed5:	data16 fdivr QWORD PTR [ebp+0x51]
  426ed9:	jns    0x426efa
  426edb:	ins    BYTE PTR es:[edi],dx
  426edc:	retf   
  426edd:	mov    esp,0x5ed23d3b
  426ee2:	ret    0x6976
  426ee5:	mov    ch,BYTE PTR [edx]
  426ee7:	inc    ecx
  426ee8:	in     eax,dx
  426ee9:	jl     0x426eb6
  426eeb:	lahf   
  426eec:	mov    cl,0x5f
  426eee:	out    0x4e,al
  426ef0:	and    al,0x5b
  426ef2:	pop    ss
  426ef3:	mov    bh,0xb6
  426ef5:	iret   
  426ef6:	ss hlt 
  426ef8:	daa    
  426ef9:	push   ecx
  426efa:	push   esi
  426efb:	mov    ecx,0x9d16d8e8
  426f00:	sbb    eax,0xbb411e58
  426f05:	sahf   
  426f06:	jmp    0x426f1e
  426f08:	fbld   TBYTE PTR [esi]
  426f0a:	test   bl,dh
  426f0c:	sub    al,0x6f
  426f0e:	mov    cl,BYTE PTR [edx]
  426f10:	pop    ss
  426f11:	sbb    dl,BYTE PTR [esi+esi*8-0x351fce11]
  426f18:	sbb    dh,al
  426f1a:	out    0xe0,eax
  426f1c:	or     al,0xf1
  426f1e:	push   ebp
  426f1f:	mov    edi,0x62ebbd95
  426f24:	xchg   ebx,eax
  426f25:	(bad)  
  426f26:	sahf   
  426f27:	mov    cl,bh
  426f29:	out    0xbb,eax
  426f2b:	clc    
  426f2c:	mov    ds:0x899ff389,eax
  426f31:	push   ecx
  426f32:	ds (bad) 
  426f34:	ins    DWORD PTR es:[edi],dx
  426f35:	xchg   DWORD PTR [esi-0x7],esp
  426f38:	pusha  
  426f39:	jo     0x426ece
  426f3b:	je     0x426ec8
  426f3d:	xchg   ecx,eax
  426f3e:	ss in  eax,0x2c
  426f41:	mov    bh,0x83
  426f43:	rcl    BYTE PTR [ebx-0x2b],0x92
  426f47:	or     DWORD PTR [edi+0x36819687],edx
  426f4d:	and    eax,0x4189f797
  426f52:	fwait
  426f53:	xchg   ebp,eax
  426f54:	jne    0x426f11
  426f56:	ins    DWORD PTR es:[edi],dx
  426f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f58:	xor    ecx,DWORD PTR [esi-0x68]
  426f5b:	cmp    BYTE PTR [edi-0x4c1751e8],ch
  426f61:	sub    eax,0xea215296
  426f66:	ins    BYTE PTR es:[edi],dx
  426f67:	mov    dh,0xcb
  426f69:	(bad)  
  426f6a:	ficom  DWORD PTR [eax+0x44fcd7c2]
  426f70:	hlt    
  426f71:	push   ss
  426f72:	xor    DWORD PTR [ebx+0x72],0x6f90e7b3
  426f79:	cmp    al,0x48
  426f7b:	cmp    ebp,DWORD PTR [edx]
  426f7d:	xor    al,0x36
  426f7f:	mov    ah,0xbf
  426f81:	lahf   
  426f82:	cmp    BYTE PTR [edx*1+0x6da71642],0x68
  426f8a:	pusha  
  426f8b:	iret   
  426f8c:	mov    esi,0x2566de79
  426f91:	popf   
  426f92:	xor    al,0x82
  426f94:	xchg   edx,eax
  426f95:	add    DWORD PTR [ebp+0x78],edx
  426f98:	jmp    0x426f7d
  426f9a:	xor    BYTE PTR [ecx+0x6d],0x2f
  426f9e:	sub    ebp,DWORD PTR [ecx+esi*8]
  426fa1:	dec    esi
  426fa2:	cmp    eax,0x646077a6
  426fa7:	fidiv  WORD PTR [eax+0xd]
  426faa:	pop    esi
  426fab:	cmp    ebx,ebp
  426fad:	jbe    0x42701b
  426faf:	outs   dx,DWORD PTR ds:[esi]
  426fb0:	pop    ebx
  426fb1:	fsub   QWORD PTR [esi]
  426fb3:	lods   al,BYTE PTR ds:[esi]
  426fb4:	retfw  0xef20
  426fb8:	out    0x69,eax
  426fba:	cwde   
  426fbb:	(bad)  
  426fbc:	jg     0x426fa2
  426fbe:	or     DWORD PTR [ecx],eax
  426fc0:	pop    ss
  426fc1:	repnz inc esp
  426fc3:	pop    eax
  426fc4:	xchg   edi,eax
  426fc5:	jmp    0x426fc4
  426fc7:	leave  
  426fc8:	and    esp,DWORD PTR [edi+0x1a]
  426fcb:	adc    BYTE PTR [ecx],dh
  426fcd:	pop    es
  426fce:	fisttp DWORD PTR [edi]
  426fd0:	or     al,al
  426fd2:	pop    es
  426fd3:	pop    es
  426fd4:	xor    al,0x13
  426fd6:	(bad)  
  426fd7:	adc    esp,edi
  426fd9:	inc    ebx
  426fda:	mov    eax,ds:0x4c49b619
  426fdf:	adc    BYTE PTR [edi],bh
  426fe1:	pop    ds
  426fe2:	jg     0x426f74
  426fe4:	fsub   QWORD PTR [ecx-0x5983555]
  426fea:	jne    0x427062
  426fec:	lods   eax,DWORD PTR ds:[esi]
  426fed:	sub    ebp,edx
  426fef:	imul   ebp,DWORD PTR [ecx-0xf],0xffffffd9
  426ff3:	mov    cl,0xca
  426ff5:	push   edx
  426ff6:	cli    
  426ff7:	pop    ss
  426ff8:	sub    BYTE PTR [ebx-0x7a],dh
  426ffb:	arpl   WORD PTR [eax+0x45],dx
  426ffe:	xor    ebx,0xffffffe4
  427001:	push   ss
  427002:	outs   dx,BYTE PTR ds:[esi]
  427003:	scas   al,BYTE PTR es:[edi]
  427004:	pop    ebx
  427005:	ret    0x5a3
  427008:	call   0x9188:0xa7b1f4b3
  42700f:	in     al,dx
  427010:	mov    al,ds:0x98e73fed
  427015:	xchg   esi,eax
  427016:	rcr    BYTE PTR [edi],0x45
  427019:	pop    edi
  42701a:	(bad)  
  42701c:	rcr    DWORD PTR [ebx-0x19],cl
  42701f:	inc    edx
  427020:	adc    ecx,edi
  427022:	or     cl,dh
  427024:	sbb    eax,0x1e5e5
  427029:	clc    
  42702a:	add    al,0x0
  42702c:	add    BYTE PTR [ebp-0x34d9d25b],dl
  427032:	and    al,0x5
  427034:	xlat   BYTE PTR ds:[ebx]
  427036:	repnz inc esp
  427038:	and    DWORD PTR [ecx],edi
  42703a:	std    
  42703b:	repz inc ebp
  42703d:	int    0xbd
  42703f:	imul   esi
  427041:	mov    ds:0xa3ff49db,eax
  427046:	xor    al,0xf2
  427048:	lahf   
  427049:	call   0x32b1:0x247707
  427050:	ret    
  427051:	xlat   BYTE PTR ds:[ebx]
  427052:	hlt    
  427053:	rol    al,1
  427055:	pop    ss
  427056:	seta   BYTE PTR [eax-0x9464e97]
  42705d:	addr16 cmp al,bl
  427060:	lahf   
  427061:	sbb    BYTE PTR fs:[ebx-0x6b1731a5],dl
  427068:	pop    eax
  42706a:	xor    al,0x4c
  42706c:	push   esi
  42706d:	jge    0x427074
  42706f:	stc    
  427070:	hlt    
  427071:	pop    ebp
  427072:	idiv   DWORD PTR [eax+0x68]
  427075:	mov    ah,0xcf
  427077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427078:	and    esi,DWORD PTR ds:0xaf7869c6
  42707e:	xor    BYTE PTR [eax+0x64],cl
  427081:	mov    edx,ecx
  427083:	fwait
  427084:	scas   al,BYTE PTR es:[edi]
  427085:	sub    eax,0xb8dc4d53
  42708a:	ja     0x427067
  42708c:	cmp    esp,DWORD PTR ds:0x27fcef42
  427092:	adc    al,BYTE PTR ds:0x4e99a816
  427098:	mov    ebp,0x60f61007
  42709d:	ds cmp al,0xad
  4270a0:	mov    dh,0x49
  4270a2:	sub    BYTE PTR [esi-0x56502a72],dh
  4270a8:	sub    ah,bh
  4270aa:	es mov cl,0xb5
  4270ad:	ret    
  4270ae:	fwait
  4270af:	inc    edx
  4270b0:	xchg   edi,eax
  4270b1:	inc    esp
  4270b2:	and    ebx,DWORD PTR [edi]
  4270b4:	cmc    
  4270b5:	(bad)  
  4270b6:	xor    edi,ebp
  4270b8:	fs adc eax,0xf4380eb2
  4270be:	cld    
  4270bf:	popf   
  4270c0:	je     0x427087
  4270c2:	pop    eax
  4270c3:	into   
  4270c4:	mov    al,BYTE PTR [eax*4-0x46d6dba5]
  4270cb:	dec    edi
  4270cc:	mov    edi,0x52861173
  4270d1:	int    0x8e
  4270d3:	jns    0x42706d
  4270d5:	add    ebx,DWORD PTR [edi+ebp*4-0x4a]
  4270d9:	int3   
  4270da:	add    cl,BYTE PTR [edi]
  4270dc:	jecxz  0x4270b3
  4270de:	sbb    eax,0x623abd80
  4270e3:	pusha  
  4270e4:	xor    DWORD PTR [eax+0x651f08f2],edi
  4270ea:	std    
  4270eb:	rol    ebx,1
  4270ed:	aam    0xf2
  4270ef:	xor    edi,DWORD PTR [eax+0x78]
  4270f2:	pusha  
  4270f3:	jmp    0x5a895cfc
  4270f8:	push   edx
  4270f9:	inc    eax
  4270fa:	fcom   DWORD PTR [eax]
  4270fc:	pop    ss
  4270fd:	xchg   edx,eax
  4270fe:	loopne 0x42708e
  427100:	cdq    
  427101:	rcl    edx,1
  427103:	imul   BYTE PTR [ebx]
  427105:	into   
  427106:	repz aad 0xf
  427109:	cmp    eax,0x7aa887eb
  42710e:	jno    0x4270bc
  427110:	sbb    eax,DWORD PTR [eax+0x74]
  427113:	sbb    BYTE PTR [esi],bh
  427115:	jb     0x4270d3
  427117:	and    al,0xb8
  427119:	xchg   BYTE PTR [esp+ebp*8-0x55],al
  42711d:	(bad)  
  42711e:	mov    esp,0xee8744e1
  427123:	and    bh,ch
  427125:	mov    ebx,0x1d0cce26
  42712a:	gs xchg ecx,eax
  42712c:	adc    BYTE PTR [edi-0x6d],bl
  42712f:	xor    al,0xdc
  427131:	adc    eax,edx
  427133:	sub    eax,0x44ef2535
  427138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427139:	pop    ecx
  42713a:	popa   
  42713b:	jmp    0x3acd:0x6fe4a220
  427142:	push   ebx
  427143:	rcl    BYTE PTR [ebx+0xd05399c],1
  427149:	pop    esp
  42714a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42714b:	(bad)
  42714e:	out    dx,eax
  42714f:	and    DWORD PTR [eax],0xf08640f5
  427155:	xchg   esi,eax
  427156:	mul    BYTE PTR [eax]
  427158:	out    dx,al
  427159:	test   eax,0xe7f5170d
  42715e:	retf   
  42715f:	xchg   ebx,eax
  427160:	pop    ecx
  427161:	pushf  
  427162:	int3   
  427163:	mov    edx,0x6d357ca5
  427168:	pop    ebp
  427169:	pop    edx
  42716a:	std    
  42716b:	dec    ebx
  42716c:	test   ch,bl
  42716e:	(bad)  
  42716f:	out    0x94,al
  427171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427172:	rcl    DWORD PTR [edx],0xba
  427175:	sub    BYTE PTR [ebx+ebx*4+0x10b911f1],0xff
  42717d:	fisub  WORD PTR [edx+0x3c]
  427180:	nop
  427181:	adc    edi,edx
  427183:	mov    ah,0x2d
  427185:	dec    ecx
  427186:	out    0x34,eax
  427188:	push   ebp
  427189:	inc    edi
  42718a:	mov    ds:0xc0798181,al
  42718f:	mov    bl,0xf2
  427191:	stc    
  427192:	xchg   esp,eax
  427193:	adc    bl,ah
  427195:	xor    BYTE PTR [ebx+0x22],bh
  427198:	or     esp,DWORD PTR [eax-0x3413be3f]
  42719e:	inc    edi
  42719f:	pop    edx
  4271a0:	loope  0x427138
  4271a2:	sar    ebx,1
  4271a4:	loopne 0x4271f1
  4271a6:	je     0x4271ed
  4271a8:	cmp    eax,0x5081d12e
  4271ad:	xchg   ebx,edi
  4271af:	es push eax
  4271b1:	out    0x99,al
  4271b3:	adc    DWORD PTR [ebx-0x4f],edi
  4271b6:	es xor al,0x8
  4271b9:	xchg   DWORD PTR ds:0xd38037da,ecx
  4271bf:	sti    
  4271c0:	das    
  4271c1:	push   0xffffff92
  4271c3:	out    0xb6,al
  4271c5:	jbe    0x4271d9
  4271c7:	addr16 xchg esi,eax
  4271c9:	mov    WORD PTR [edi],cs
  4271cb:	add    dl,BYTE PTR [edi]
  4271cd:	xor    eax,0x5e0b0057
  4271d2:	aaa    
  4271d3:	inc    edi
  4271d4:	cmp    ebx,ecx
  4271d6:	or     BYTE PTR [ebp+0x7ad88823],0xec
  4271dd:	push   ebx
  4271de:	test   BYTE PTR [bp+si],al
  4271e1:	(bad)  
  4271e2:	dec    esi
  4271e3:	pop    esp
  4271e4:	and    DWORD PTR [ebx+0x5bd7fc16],edx
  4271ea:	pop    ds
  4271eb:	fst    QWORD PTR [eax]
  4271ed:	inc    esi
  4271ee:	es push ecx
  4271f0:	or     ebp,DWORD PTR [ecx-0x79]
  4271f3:	xchg   edi,eax
  4271f4:	sbb    al,0x13
  4271f6:	scas   eax,DWORD PTR es:[edi]
  4271f7:	mov    edi,0x2dd162a
  4271fc:	jg     0x42724f
  4271fe:	rol    DWORD PTR [edi],1
  427200:	sub    ah,BYTE PTR [edx-0x69]
  427203:	sahf   
  427204:	div    dl
  427206:	ins    BYTE PTR es:[edi],dx
  427207:	pop    edi
  427208:	push   es
  427209:	dec    ecx
  42720a:	push   edx
  42720b:	fild   QWORD PTR [eax-0x12]
  42720e:	icebp  
  42720f:	jmp    0x2984:0x57b03abe
  427216:	add    ch,BYTE PTR [ebx+eax*4-0xd5cfb4b]
  42721d:	enter  0xa9fb,0x46
  427221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427222:	std    
  427223:	xchg   BYTE PTR [esi-0xc376381],ch
  427229:	cmp    al,0x2f
  42722b:	into   
  42722c:	sbb    al,0x8f
  42722e:	mov    cl,0x7d
  427230:	jmp    0x5128dce6
  427235:	sar    DWORD PTR [edx+ebp*2],0xca
  427239:	mov    edx,0x2f6c765c
  42723e:	pop    ss
  42723f:	sti    
  427240:	push   edi
  427241:	shl    DWORD PTR [ebp-0x3a],1
  427244:	sub    BYTE PTR [ebp+0x3bc2e2f6],0x99
  42724b:	repz mov edi,0xfc066b17
  427251:	or     dh,ah
  427253:	mov    esp,0xd057d91c
  427258:	mov    cl,0x2c
  42725a:	in     al,0x0
  42725c:	mov    ah,0x30
  42725e:	xchg   DWORD PTR [eax-0x53f251e9],esp
  427264:	xchg   edi,edi
  427266:	fsub   QWORD PTR [ecx]
  427268:	pop    esp
  427269:	jbe    0x427293
  42726b:	(bad)  [esi+0x4]
  42726e:	call   0x3382:0x3fd2d337
  427275:	mov    eax,0x1a59e418
  42727a:	jmp    0x427274
  42727c:	nop
  42727d:	jmp    0x8d5ddecf
  427282:	adc    dh,BYTE PTR [esi+0x10]
  427285:	rcl    BYTE PTR [ebx+0x72],0x3f
  427289:	out    dx,al
  42728a:	addr16 (bad) 
  42728c:	mov    ebx,0x106194a8
  427291:	and    bh,BYTE PTR [ecx+0x46647f12]
  427297:	shl    eax,cl
  427299:	cmp    bl,BYTE PTR [esi+0x54fc7b65]
  42729f:	mov    al,ds:0x161ab771
  4272a4:	jno    0x4272e7
  4272a6:	mov    edx,0x89f42fd7
  4272ab:	push   0x65aff781
  4272b0:	sahf   
  4272b1:	out    0xaa,al
  4272b3:	inc    ecx
  4272b4:	jmp    0xaaadc1df
  4272b9:	out    0xfc,eax
  4272bb:	sub    eax,DWORD PTR [ecx-0x3faa7d39]
  4272c1:	aam    0x47
  4272c3:	cmp    al,0x6f
  4272c5:	dec    esi
  4272c6:	in     eax,0xa5
  4272c8:	inc    eax
  4272c9:	jmp    0xec8b:0x8408289c
  4272d0:	shl    ebx,1
  4272d2:	and    BYTE PTR [ecx],dh
  4272d4:	sub    al,0x2
  4272d6:	cmp    BYTE PTR ds:0xf2af9ae6,dl
  4272dc:	cmp    DWORD PTR [ebx+0x3e],0x5ae7dea0
  4272e3:	lea    ecx,[edx+edi*8-0x4e]
  4272e7:	or     ah,BYTE PTR [ebp+0xd8697e3]
  4272ed:	jb     0x427289
  4272ef:	cli    
  4272f0:	popf   
  4272f1:	stos   DWORD PTR es:[edi],eax
  4272f2:	push   ebx
  4272f3:	mov    al,0x64
  4272f5:	mov    ecx,0x5f5020ad
  4272fa:	pop    ds
  4272fb:	mov    dh,0xd0
  4272fd:	hlt    
  4272fe:	adc    edi,DWORD PTR [ecx+0x71]
  427301:	jmp    0x870a54df
  427306:	and    ecx,0xffffffc6
  427309:	mov    ah,0x9c
  42730b:	hlt    
  42730c:	mov    ch,0x26
  42730e:	mov    ebx,0x7143e79c
  427313:	push   ss
  427314:	push   ebp
  427315:	scas   eax,DWORD PTR es:[edi]
  427316:	nop
  427317:	popf   
  427318:	out    dx,al
  427319:	aam    0x7
  42731b:	sti    
  42731c:	inc    edi
  42731d:	rcr    DWORD PTR [esi-0x9],cl
  427320:	aaa    
  427321:	xor    al,0x32
  427323:	lock cmp dl,ah
  427326:	sub    eax,0xe6fafb59
  42732b:	inc    edi
  42732c:	dec    edi
  42732d:	stos   WORD PTR es:[edi],ax
  42732f:	jmp    0x502f:0xc16472a7
  427336:	mov    dh,0xe6
  427338:	cmp    dh,BYTE PTR [ecx-0xabe351e]
  42733e:	sub    bh,bh
  427340:	xlat   BYTE PTR ds:[ebx]
  427341:	mul    edx
  427343:	dec    esi
  427344:	in     eax,dx
  427345:	jl     0x4272d0
  427347:	xor    al,0x0
  427349:	leave  
  42734a:	addr16 dec ecx
  42734c:	push   ebp
  42734d:	clc    
  42734e:	xchg   edi,eax
  42734f:	nop
  427350:	test   DWORD PTR [ecx-0xf282d43],esi
  427356:	outs   dx,BYTE PTR ds:[esi]
  427357:	les    ecx,FWORD PTR [di-0x1c]
  42735b:	ins    DWORD PTR es:[edi],dx
  42735c:	jbe    0x427333
  42735e:	icebp  
  42735f:	out    dx,al
  427360:	out    0x59,eax
  427362:	mov    ds:0xa49f23b8,al
  427367:	mov    ch,0x28
  427369:	push   edi
  42736a:	cdq    
  42736b:	lods   eax,DWORD PTR ds:[esi]
  42736c:	sbb    dh,BYTE PTR es:[edi+ecx*1-0x6b]
  427371:	stos   DWORD PTR es:[edi],eax
  427372:	sbb    DWORD PTR [edi+edi*4-0x48],ecx
  427376:	out    dx,eax
  427377:	je     0x42730f
  427379:	ss sbb al,0xda
  42737c:	cmp    eax,0x5bd7afaa
  427381:	sub    bh,BYTE PTR [esi+0x2e]
  427384:	aas    
  427385:	aam    0xca
  427387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427388:	cs retf 
  42738a:	gs pop eax
  42738c:	mov    bl,0x6a
  42738e:	repnz int3 
  427390:	sbb    al,0xdf
  427392:	cmp    edi,DWORD PTR [ecx-0x34d3f701]
  427398:	scas   eax,DWORD PTR es:[edi]
  427399:	inc    esp
  42739a:	push   esp
  42739b:	mov    ds:0xe3ab2399,al
  4273a0:	dec    esp
  4273a1:	inc    esi
  4273a2:	in     eax,dx
  4273a3:	pop    eax
  4273a4:	add    eax,0x9c1ce4d0
  4273a9:	dec    ebx
  4273aa:	rcr    DWORD PTR [edx],0x1d
  4273ad:	enter  0x910e,0x5
  4273b1:	fisub  DWORD PTR ds:0x43d3cd61
  4273b7:	nop
  4273b8:	jg     0x4273cf
  4273ba:	mov    WORD PTR [eax+eiz*1],fs
  4273bd:	mov    ss,eax
  4273bf:	out    dx,eax
  4273c0:	int3   
  4273c1:	dec    edi
  4273c2:	inc    DWORD PTR [eax+0x7bf8fe9b]
  4273c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273c9:	(bad)  
  4273ca:	fldcw  WORD PTR [ecx+0x73]
  4273cd:	sub    bl,BYTE PTR [edx]
  4273cf:	push   edx
  4273d0:	mov    ch,0x9a
  4273d2:	mov    cl,0xc
  4273d4:	dec    edi
  4273d5:	sub    BYTE PTR [edx+0x24d88d8c],0xd1
  4273dc:	and    cl,BYTE PTR [esi]
  4273de:	push   0xfffffff5
  4273e0:	pop    ebp
  4273e1:	jl     0x427441
  4273e3:	xchg   edx,eax
  4273e4:	sub    DWORD PTR [edx+edx*4+0x20],ebp
  4273e8:	lds    ebp,FWORD PTR [esi+ecx*8+0x5b]
  4273ec:	mov    esp,DWORD PTR [ebp+0x8004f50]
  4273f2:	mov    dh,dh
  4273f4:	sbb    BYTE PTR [esi+0xa],dh
  4273f7:	add    al,0x5d
  4273f9:	jl     0x4273e7
  4273fb:	xchg   ebx,eax
  4273fc:	cs sbb eax,0xefe67d98
  427402:	sub    al,0x1f
  427404:	xor    al,0x81
  427406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427407:	mov    bl,0x31
  427409:	jno    0x427486
  42740b:	sbb    esi,ebx
  42740d:	add    eax,0xb363f69c
  427412:	cmc    
  427413:	sahf   
  427414:	jnp    0x4273d5
  427416:	dec    ebx
  427417:	pop    esi
  427418:	fimul  DWORD PTR [edi-0x71]
  42741b:	test   BYTE PTR [ebx-0x74],bh
  42741e:	add    cl,BYTE PTR [ebp-0x39832ac6]
  427424:	jae    0x4273b0
  427426:	add    eax,0xd025519c
  42742b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42742c:	pop    edx
  42742d:	fcomp  DWORD PTR [edi-0x5c850dfe]
  427433:	mov    BYTE PTR [ecx+0x3a0f8d2e],ch
  427439:	nop
  42743a:	ret    0x1858
  42743d:	mov    dh,0x93
  42743f:	je     0x4273e4
  427441:	test   DWORD PTR [esi-0x21653ab0],ebp
  427447:	xchg   ebx,eax
  427448:	adc    BYTE PTR [ecx],dh
  42744a:	and    DWORD PTR [edx+0x3931a9b9],0xffffffba
  427451:	inc    ebp
  427452:	inc    ebx
  427453:	inc    ebx
  427454:	xor    eax,0xe906dace
  427459:	mov    DWORD PTR [ebx-0x7f5b718d],esp
  42745f:	ins    BYTE PTR es:[edi],dx
  427460:	dec    esp
  427461:	xor    DWORD PTR [edx+0x68],edx
  427464:	mov    cl,0x9e
  427466:	ficom  WORD PTR [ebx-0x3c]
  427469:	jo     0x427438
  42746b:	jbe    0x4274d7
  42746d:	aad    0x21
  42746f:	add    ebx,eax
  427471:	clc    
  427472:	jl     0x427402
  427474:	dec    DWORD PTR [ebx-0x3b]
  427477:	mov    al,BYTE PTR [ebp+0x53]
  42747a:	popf   
  42747b:	ins    BYTE PTR es:[edi],dx
  42747c:	stos   BYTE PTR es:[edi],al
  42747d:	icebp  
  42747e:	imul   edi,DWORD PTR [edx+0x7380b14b],0xdad0bc5f
  427488:	push   0xfffffffe
  42748a:	cmp    eax,0x9ece97b7
  42748f:	adc    eax,0x6fa0f304
  427494:	gs jg  0x4274db
  427497:	and    BYTE PTR [eax+edx*8],bh
  42749a:	push   ss
  42749b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42749c:	cwde   
  42749d:	fisubr WORD PTR [ebp+0x43]
  4274a0:	bound  esp,QWORD PTR [esi+0x62edf04e]
  4274a6:	mov    edx,DWORD PTR [ecx+0x47]
  4274a9:	and    DWORD PTR [esp+esi*8-0x20bd995e],eax
  4274b0:	lea    esp,[eax+0x7f849394]
  4274b6:	aaa    
  4274b7:	(bad)  
  4274b8:	stos   DWORD PTR es:[edi],eax
  4274b9:	sub    BYTE PTR [edi+ebp*4],ch
  4274bc:	inc    edi
  4274bd:	test   DWORD PTR ds:0x1b090828,ebp
  4274c3:	jp     0x4274cb
  4274c5:	xchg   edi,eax
  4274c6:	xchg   ecx,eax
  4274c7:	shl    DWORD PTR [ecx+0x78],cl
  4274ca:	je     0x427467
  4274cc:	adc    DWORD PTR [edi-0x33c277a5],esi
  4274d2:	push   ss
  4274d3:	push   edx
  4274d4:	adc    ebx,DWORD PTR [edi+0x730e15e9]
  4274da:	dec    ebp
  4274db:	test   al,0xb2
  4274dd:	leave  
  4274de:	inc    ecx
  4274df:	ins    DWORD PTR es:[edi],dx
  4274e0:	std    
  4274e1:	sub    eax,0x5f006acc
  4274e6:	std    
  4274e7:	in     eax,0xe
  4274e9:	jnp    0x887d4d61
  4274ef:	aas    
  4274f0:	mov    cl,0x1
  4274f2:	cmp    BYTE PTR [eax-0x3f],bh
  4274f5:	add    ebx,DWORD PTR [edi+0x463457d5]
  4274fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274fc:	and    DWORD PTR [esi+0x7f],ebp
  4274ff:	mov    eax,ds:0xcc8afffb
  427504:	add    al,0xfd
  427506:	jecxz  0x427555
  427508:	in     eax,dx
  427509:	lock cmovs esi,DWORD PTR [edi+0x30984833]
  427511:	mov    WORD PTR [eax+0x42],fs
  427514:	sub    eax,0xce10fb1
  427519:	sbb    DWORD PTR [eax-0x7f891520],edx
  42751f:	addr16 data16 jmp 0x427591
  427523:	jg     0x4274f0
  427525:	sub    eax,DWORD PTR [edi-0xc021e8b]
  42752b:	mov    edi,0xa2081dcf
  427530:	js     0x427555
  427532:	dec    ebp
  427533:	add    al,0x27
  427535:	fucomp st(2)
  427537:	add    DWORD PTR [eax],eax
  427539:	clc    
  42753a:	add    al,0x0
  42753c:	add    BYTE PTR [ebp+0x314bbe77],ch
  427542:	adc    DWORD PTR [ebp-0x37],edx
  427545:	adc    DWORD PTR [edi],0xd69c0e74
  42754b:	push   es
  42754c:	xchg   DWORD PTR [edx+0x1c8e8a],edx
  427552:	or     DWORD PTR [edi-0x59],0x5a00f3f6
  427559:	ins    BYTE PTR es:[edi],dx
  42755a:	adc    BYTE PTR [esi+0x6d6772b7],bh
  427560:	rcr    BYTE PTR [edx+0x28fa8e45],0x84
  427567:	sbb    eax,0x26be40c2
  42756c:	test   BYTE PTR [ecx],0xcd
  42756f:	push   0x984bcd44
  427574:	xlat   BYTE PTR ds:[ebx]
  427575:	or     ch,BYTE PTR [edx+0x38436d69]
  42757b:	adc    eax,0x165384a6
  427580:	mov    eax,ds:0xac7736e1
  427585:	add    BYTE PTR [ebp+0x5fb2492],cl
  42758b:	and    eax,0x4674351b
  427590:	nop
  427591:	push   ss
  427592:	xor    BYTE PTR [edx],al
  427594:	mov    dh,0x97
  427596:	sti    
  427597:	outs   dx,BYTE PTR ds:[esi]
  427598:	cmp    BYTE PTR [ebx],ch
  42759a:	int3   
  42759b:	sbb    BYTE PTR [esi],0xdf
  42759e:	mov    ecx,0x389c77e8
  4275a3:	inc    edx
  4275a4:	push   cs
  4275a5:	pop    ds
  4275a6:	sub    ch,ch
  4275a8:	out    0x4b,al
  4275aa:	adc    ecx,edi
  4275ac:	mov    dl,0x4c
  4275ae:	pop    esi
  4275af:	mov    dl,0xc5
  4275b1:	mov    ebx,0xac75e349
  4275b6:	lahf   
  4275b7:	pop    esi
  4275b8:	and    BYTE PTR [edx],dh
  4275ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275bb:	dec    ecx
  4275bc:	skinit 
  4275bf:	pusha  
  4275c0:	rcl    bl,1
  4275c2:	shr    DWORD PTR [edx+0x2de39e19],cl
  4275c8:	out    0x83,eax
  4275ca:	push   ss
  4275cb:	outs   dx,BYTE PTR ds:[esi]
  4275cc:	jg     0x42760a
  4275ce:	enter  0xcbbb,0x31
  4275d2:	iret   
  4275d3:	or     BYTE PTR [ebx+0x4a],ah
  4275d6:	ins    DWORD PTR es:[edi],dx
  4275d7:	pusha  
  4275d8:	cs mov dl,0x6a
  4275db:	xor    ah,BYTE PTR [ebx]
  4275dd:	push   esi
  4275de:	js     0x42759d
  4275e0:	ret    
  4275e1:	add    ch,ah
  4275e3:	in     eax,dx
  4275e4:	scas   al,BYTE PTR es:[edi]
  4275e5:	jmp    DWORD PTR [ebx]
  4275e7:	add    al,0xd8
  4275e9:	js     0x427583
  4275eb:	cmp    eax,0x8af34642
  4275f0:	inc    esi
  4275f1:	dec    ebp
  4275f2:	fwait
  4275f3:	jno    0x4275b1
  4275f5:	loop   0x42762f
  4275f7:	out    dx,eax
  4275f8:	mov    ch,0x7d
  4275fa:	sbb    esi,ebx
  4275fc:	cmp    DWORD PTR [ebp+0x32],esi
  4275ff:	rcr    dl,cl
  427601:	and    BYTE PTR [edx+eax*2-0x528ff40d],0xe6
  427609:	mov    cl,0xe0
  42760b:	ret    0x54d8
  42760e:	imul   esi,ebp,0x43d6da10
  427614:	mov    ds:0xa46e9404,al
  427619:	or     al,0xd7
  42761b:	bound  ecx,QWORD PTR [eax+0x26afae3f]
  427621:	jle    0x4275ca
  427623:	je     0x4275e8
  427625:	xchg   ebx,eax
  427626:	add    ebp,DWORD PTR [edx+0x1d7980d6]
  42762c:	(bad)  
  42762d:	shl    BYTE PTR [eax+0x34e49ee8],cl
  427633:	mov    ebx,edx
  427635:	in     eax,0xc
  427637:	test   eax,0x7010e392
  42763c:	mov    DWORD PTR [edi+ebp*8],edi
  42763f:	cmp    bl,BYTE PTR [edi-0x19194a0]
  427645:	rcl    DWORD PTR [ecx+ebp*1],1
  427648:	jns    0x427639
  42764a:	jp     0x42760a
  42764c:	mov    cl,0xe2
  42764e:	mov    ds:0xde8bcc29,al
  427653:	mov    ebp,0xb21817e1
  427658:	mov    ah,0xab
  42765a:	push   esi
  42765b:	adc    al,0xc5
  42765d:	cmp    BYTE PTR [ecx-0x343d5797],al
  427663:	fild   DWORD PTR [ebp+0x7717b5e3]
  427669:	jp     0x4275f8
  42766b:	and    al,bh
  42766d:	stos   BYTE PTR es:[edi],al
  42766e:	or     bh,BYTE PTR [edi+0x1a]
  427671:	rcr    DWORD PTR [ebx+0x33],1
  427674:	xchg   edi,eax
  427675:	adc    eax,0xc2c9a1be
  42767a:	repz and dh,BYTE PTR [ecx-0x7e3631ea]
  427681:	xchg   ebp,eax
  427682:	(bad)  
  427683:	dec    BYTE PTR [edx-0x20db4d69]
  427689:	mov    ds:0xb2b17ab4,al
  42768e:	ret    
  42768f:	aam    0xd2
  427691:	jae    0x4276a5
  427693:	je     0x4276d6
  427695:	dec    ebp
  427696:	sar    BYTE PTR [ebx-0x5b5ae648],0x7e
  42769d:	pusha  
  42769e:	mov    al,0x3d
  4276a0:	fld    QWORD PTR [ebp-0x4c]
  4276a3:	fs retf 0x6efc
  4276a7:	jg     0x4276be
  4276a9:	sub    eax,0xa2dc62cc
  4276ae:	mov    BYTE PTR [ebx],cl
  4276b0:	cs shr esi,0xa
  4276b4:	lods   al,BYTE PTR ds:[esi]
  4276b5:	mov    ebx,0x276b1092
  4276ba:	in     al,dx
  4276bb:	and    edi,DWORD PTR [edi-0x6c]
  4276be:	fldcw  WORD PTR [edx-0x4e]
  4276c1:	out    dx,al
  4276c2:	xlat   BYTE PTR ds:[ebx]
  4276c3:	jae    0x42768a
  4276c5:	je     0x4276b3
  4276c7:	jmp    0x4276cd
  4276c9:	test   al,0xc
  4276cb:	adc    esp,DWORD PTR [esi+esi*1]
  4276ce:	repnz pop ds
  4276d0:	mov    cl,cl
  4276d2:	fdivp  st(5),st
  4276d4:	lahf   
  4276d5:	push   0x25261d53
  4276da:	mov    ah,ah
  4276dc:	in     al,0xd7
  4276de:	stos   BYTE PTR es:[edi],al
  4276df:	test   eax,0x2dd77bfd
  4276e4:	gs push 0x3df0ae4e
  4276ea:	inc    ecx
  4276eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276ec:	push   esi
  4276ed:	mov    BYTE PTR [ecx+0x5579f6bd],bl
  4276f3:	mov    dl,0x6f
  4276f5:	test   esi,esi
  4276f7:	inc    esi
  4276f8:	cmp    DWORD PTR ds:0xc9728144,edx
  4276fe:	mov    ds:0x236d4ba1,eax
  427703:	push   ecx
  427704:	in     al,dx
  427705:	aam    0x4d
  427707:	sahf   
  427708:	add    ecx,ebx
  42770a:	je     0x42770f
  42770c:	stos   DWORD PTR es:[edi],eax
  42770d:	out    0x83,al
  42770f:	pop    ebp
  427710:	test   DWORD PTR [ecx],ebp
  427712:	cdq    
  427713:	jbe    0x427775
  427715:	ror    bl,cl
  427717:	int    0x81
  427719:	xor    BYTE PTR [ecx],ch
  42771b:	jae    0x4276b9
  42771d:	in     al,dx
  42771e:	jg     0x427791
  427720:	hlt    
  427721:	jnp    0x4276ae
  427723:	mov    edi,es
  427725:	loopne 0x427768
  427727:	rol    BYTE PTR gs:[esi+edi*8+0x5b],0xbd
  42772d:	je     0x4276e7
  42772f:	loope  0x427742
  427731:	dec    ebx
  427732:	andnps xmm7,XMMWORD PTR [esi+ebp*4]
  427736:	or     eax,0xe01f2078
  42773b:	loopne 0x4276f6
  42773d:	inc    ecx
  42773e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42773f:	mov    dh,0x36
  427741:	leave  
  427742:	jbe    0x427740
  427744:	dec    esi
  427745:	lds    esp,FWORD PTR [ebx]
  427747:	dec    esi
  427748:	jo     0x42770e
  42774a:	mov    cl,0x49
  42774c:	cli    
  42774d:	dec    ecx
  42774e:	inc    esi
  42774f:	hlt    
  427750:	call   0x95f3545e
  427755:	sub    al,0x18
  427757:	cmp    eax,0xd64ade99
  42775c:	pushf  
  42775d:	add    ecx,DWORD PTR [ebx]
  42775f:	push   ds
  427760:	sub    DWORD PTR [ebp*4-0x70b947e8],esi
  427767:	ins    DWORD PTR es:[edi],dx
  427768:	fst    DWORD PTR [ebx+0x12ce3d9]
  42776e:	es addr16 dec eax
  427771:	dec    ebp
  427772:	aas    
  427773:	fisttp WORD PTR [ecx+0x2767d44]
  427779:	sub    eax,0x4d1d2892
  42777e:	popf   
  42777f:	cmp    eax,0xcb0443d0
  427784:	push   ss
  427785:	fisubr DWORD PTR [ecx+0x50b644f4]
  42778b:	or     DWORD PTR [edx+0x48],ebx
  42778e:	xchg   ecx,eax
  42778f:	ret    
  427790:	add    BYTE PTR [eax+0x6c],bh
  427793:	push   edi
  427794:	sbb    ebp,DWORD PTR [edi-0x53f7fd93]
  42779a:	xchg   edx,eax
  42779b:	test   al,0x81
  42779d:	push   ds
  42779e:	dec    ecx
  42779f:	mov    BYTE PTR [edx+ebp*4+0x28],dl
  4277a3:	call   0x345b0f88
  4277a8:	test   eax,0xf17f93f3
  4277ad:	jae    0x4277ea
  4277af:	cmp    ch,bh
  4277b1:	ds int 0xca
  4277b4:	lock jg 0x4277a1
  4277b7:	div    esi
  4277b9:	mov    cl,0x36
  4277bb:	jmp    0x2808:0xb98b302d
  4277c2:	xchg   BYTE PTR [ebx],dl
  4277c4:	mov    cl,0xaa
  4277c6:	mov    ?,WORD PTR [eax]
  4277c8:	sbb    BYTE PTR [ebp+0x73634477],dl
  4277ce:	mov    ecx,0x62d49db9
  4277d3:	in     eax,dx
  4277d4:	loop   0x42783c
  4277d6:	rcr    BYTE PTR [ecx],1
  4277d8:	adc    BYTE PTR [edi+0x67],0xee
  4277dc:	or     BYTE PTR [edx],al
  4277de:	xchg   ebp,eax
  4277df:	add    BYTE PTR [edx-0x2e],bh
  4277e2:	inc    eax
  4277e3:	jle    0x4277fe
  4277e5:	mov    eax,esp
  4277e7:	test   DWORD PTR [edx-0x4f],edi
  4277ea:	mov    ss,ecx
  4277ec:	ret    0x49de
  4277ef:	je     0x4277e8
  4277f1:	leave  
  4277f2:	mov    ds,WORD PTR [eax-0x19]
  4277f5:	jne    0x42780c
  4277f7:	pop    edx
  4277f8:	pop    eax
  4277f9:	outs   dx,DWORD PTR ds:[esi]
  4277fa:	inc    ebp
  4277fb:	imul   eax,edi,0x67
  4277fe:	hlt    
  4277ff:	imul   esi,DWORD PTR [edi],0x8b7f8dcf
  427805:	fdivrp st(6),st
  427807:	call   FWORD PTR [eax+eax*1-0x67]
  42780b:	mov    esp,0x89025393
  427810:	mov    dl,0x12
  427812:	xlat   BYTE PTR ds:[ebx]
  427813:	add    eax,0xcff7fa39
  427818:	aad    0xad
  42781a:	add    ebx,DWORD PTR ds:[eax-0x59]
  42781e:	dec    edx
  42781f:	lock mov ebx,0xbe81373b
  427825:	xchg   DWORD PTR [edx],esp
  427827:	adc    al,0x95
  427829:	imul   edx,esi,0x643491f6
  42782f:	add    bh,BYTE PTR es:[esi+edx*4]
  427833:	mov    ?,edi
  427835:	dec    esp
  427836:	and    eax,0x57c8758c
  42783b:	call   0x5d7a:0x7726e52c
  427842:	ss pop ecx
  427844:	pushf  
  427845:	inc    edi
  427846:	pop    es
  427847:	call   DWORD PTR [ecx]
  427849:	gs ins BYTE PTR es:[edi],dx
  42784b:	pop    ds
  42784c:	lock xchg esi,eax
  42784e:	adc    ch,al
  427850:	jge    0x427807
  427852:	inc    ebx
  427853:	ja     0x427857
  427855:	and    al,0xb5
  427857:	pop    ebp
  427858:	xor    eax,0x12996601
  42785d:	call   0x691d:0xfab9f333
  427864:	loopne 0x42789d
  427866:	mov    BYTE PTR [ebx+ebx*1+0xa],cl
  42786a:	cwde   
  42786b:	mov    dl,0x76
  42786d:	retf   0x776c
  427870:	sti    
  427871:	push   edi
  427872:	cmp    ebx,DWORD PTR [edi+0xb]
  427875:	xchg   DWORD PTR [edx],esi
  427877:	(bad)  
  427878:	clc    
  427879:	xchg   esp,eax
  42787a:	adc    dh,BYTE PTR [edi+eiz*1+0xfce3f0f]
  427881:	dec    esp
  427882:	nop
  427883:	pop    ss
  427884:	cdq    
  427885:	jl     0x427903
  427887:	inc    ecx
  427888:	das    
  427889:	aad    0xd1
  42788b:	jae    0x4278ba
  42788d:	shl    bl,cl
  42788f:	or     BYTE PTR [edi],cl
  427891:	(bad)  
  427892:	retf   
  427893:	pop    ebp
  427894:	xor    al,BYTE PTR ds:0x822b2e8a
  42789a:	xor    eax,0xbf6a005e
  42789f:	imul   edi,DWORD PTR [edx],0x24
  4278a2:	fild   WORD PTR [ebx]
  4278a4:	(bad)  
  4278a6:	cdq    
  4278a7:	add    edx,DWORD PTR [edi]
  4278a9:	(bad)  
  4278aa:	je     0x4278ac
  4278ac:	and    DWORD PTR [edx-0x23],esi
  4278af:	retf   
  4278b0:	in     al,0x7d
  4278b2:	jge    0x427857
  4278b4:	mov    dl,BYTE PTR [edi+0x33deec43]
  4278ba:	pop    ss
  4278bb:	or     eax,0x80771f1a
  4278c0:	je     0x427921
  4278c2:	mov    edx,0xf084721a
  4278c7:	adc    cl,dl
  4278c9:	or     DWORD PTR [eax-0xbd07b4],ecx
  4278cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278d0:	push   cs
  4278d1:	push   cs
  4278d2:	jl     0x42790c
  4278d4:	dec    ebx
  4278d5:	xor    eax,0x7b236d07
  4278da:	iret   
  4278db:	jns    0x42790b
  4278dd:	out    dx,eax
  4278de:	push   esi
  4278df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278e0:	mov    esp,0xd6065b4c
  4278e5:	xchg   esi,eax
  4278e6:	xor    DWORD PTR [eax+0x6c],edx
  4278e9:	shl    esp,1
  4278eb:	pop    ebp
  4278ec:	adc    BYTE PTR [edx+0x70],dh
  4278ef:	mov    eax,0x6473a018
  4278f4:	fnstenv [eax+0x0]
  4278f7:	push   ecx
  4278f8:	mov    edx,0xd027b28a
  4278fd:	xchg   esi,eax
  4278fe:	jns    0x427968
  427900:	sub    al,0x9
  427902:	retf   0x8bf8
  427905:	ret    0xe3b8
  427908:	clc    
  427909:	mov    eax,ds:0x864d7df2
  42790e:	and    DWORD PTR [ecx+0xb],esp
  427911:	jb     0x4278fa
  427913:	sub    ebx,DWORD PTR [edi]
  427915:	ror    bl,cl
  427917:	xchg   BYTE PTR [esp+esi*8],ch
  42791a:	aas    
  42791b:	int    0xa8
  42791d:	pusha  
  42791e:	mov    dl,0x0
  427920:	sub    ebp,DWORD PTR [edi-0x1665e3d4]
  427926:	mov    al,ds:0xd031e5dc
  42792b:	pop    ebx
  42792c:	jmp    0x4278b7
  42792e:	cmp    BYTE PTR [ecx+edi*2],0xb5
  427932:	or     edi,ebp
  427934:	push   0xfffffff6
  427936:	adc    ch,cl
  427938:	mov    edx,0x393ddd40
  42793d:	test   DWORD PTR [edi-0x74],ecx
  427940:	ret    0xc01a
  427943:	mov    ?,WORD PTR [eax]
  427945:	ret    
  427946:	inc    ebp
  427947:	sub    eax,0x994c9ed2
  42794c:	popf   
  42794d:	adc    al,0xdc
  42794f:	(bad)  
  427951:	and    al,0x33
  427953:	mov    BYTE PTR [esi+0x21d7b2ed],dh
  427959:	jne    0x4278ea
  42795b:	mov    ebp,0x222a2d2f
  427960:	cmp    DWORD PTR [edx],ebx
  427962:	jbe    0x4279c4
  427964:	mov    esp,DWORD PTR [eax-0x6d759efd]
  42796a:	shl    DWORD PTR [ebx+0x3cbafb0c],1
  427970:	pop    edi
  427971:	add    al,0x16
  427973:	push   es
  427974:	mov    DWORD PTR [ebx-0x24],edx
  427977:	outs   dx,BYTE PTR ds:[esi]
  427978:	mov    al,0xbf
  42797a:	xchg   ecx,eax
  42797b:	enter  0x3b32,0xb9
  42797f:	sahf   
  427980:	adc    eax,0x56d42bcb
  427985:	sbb    DWORD PTR [esi-0x9],0x8ddea0b3
  42798c:	push   es
  42798d:	jle    0x42797d
  42798f:	arpl   WORD PTR [ebx+0x5d],bx
  427992:	es inc ebp
  427994:	gs adc edx,esi
  427997:	das    
  427998:	jg     0x4279f7
  42799a:	enter  0x27c5,0x1c
  42799e:	add    BYTE PTR [eax],ch
  4279a0:	cdq    
  4279a1:	addr16 mov ds:0x4036,eax
  4279a5:	nop
  4279a6:	sub    al,dh
  4279a8:	leave  
  4279a9:	int3   
  4279aa:	sub    ebx,DWORD PTR [esi]
  4279ac:	shl    DWORD PTR [edx-0x34701802],0xe2
  4279b3:	add    edi,edx
  4279b5:	jge    0x4279d8
  4279b7:	repz cmp al,0x4a
  4279ba:	aad    0x7a
  4279bc:	mov    cl,0x98
  4279be:	(bad)
  4279c2:	xchg   ebx,eax
  4279c3:	aam    0x7b
  4279c5:	pop    ebp
  4279c6:	adc    al,0x3a
  4279c8:	xchg   dh,dl
  4279ca:	xor    edx,DWORD PTR [eax+0x608155af]
  4279d0:	adc    BYTE PTR [esi-0x1905c591],0xaa
  4279d7:	lods   al,BYTE PTR ds:[esi]
  4279d8:	push   ebx
  4279d9:	mov    edx,0x4fc91bdd
  4279de:	call   0xc3d36977
  4279e3:	cdq    
  4279e4:	iret   
  4279e5:	mov    ecx,ds
  4279e7:	hlt    
  4279e8:	xchg   ebx,eax
  4279e9:	sub    al,bh
  4279eb:	fsub   DWORD PTR [edi+0x3a1dcb93]
  4279f1:	xchg   ebx,eax
  4279f2:	aad    0xf8
  4279f4:	repnz adc ebx,DWORD PTR [ecx+0xc7d7384]
  4279fb:	and    DWORD PTR [eax+ebp*2],esp
  4279fe:	pushf  
  4279ff:	and    al,0x62
  427a01:	inc    ebx
  427a02:	push   esi
  427a03:	pop    edx
  427a04:	fisttp WORD PTR [eax+0x21]
  427a07:	pop    ebx
  427a08:	push   ebp
  427a09:	inc    eax
  427a0a:	sar    al,cl
  427a0c:	cld    
  427a0d:	mov    ebx,0x14c39dc5
  427a12:	std    
  427a13:	dec    eax
  427a14:	jns    0x4279e1
  427a16:	jno    0x427a0c
  427a18:	mov    al,0xe8
  427a1a:	dec    esi
  427a1b:	pusha  
  427a1c:	mov    al,ds:0x7ab6503b
  427a21:	gs push es
  427a23:	fisub  WORD PTR [edi-0x1]
  427a26:	(bad)
  427a2a:	in     al,0xf0
  427a2c:	lock shl BYTE PTR [edi+0x2d148883],1
  427a33:	sub    BYTE PTR [edx+ecx*1-0x3c],cl
  427a37:	mov    eax,ds:0x5ef7eff7
  427a3c:	std    
  427a3d:	push   cs
  427a3e:	mov    edx,0xc5e77fbd
  427a43:	sbb    al,0xe5
  427a45:	aad    0xef
  427a47:	add    DWORD PTR [eax],eax
  427a49:	clc    
  427a4a:	add    al,0x0
  427a4c:	add    BYTE PTR [esi],ch
  427a4e:	stos   DWORD PTR es:[edi],eax
  427a4f:	mov    ch,0xe9
  427a51:	add    eax,0xc507381f
  427a56:	inc    edx
  427a57:	aas    
  427a58:	pop    eax
  427a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a5b:	les    ecx,FWORD PTR [esp+ebp*1]
  427a5e:	jo     0x427adf
  427a60:	and    BYTE PTR [esi+eax*2+0x72c4889c],cl
  427a67:	pop    ds
  427a68:	or     BYTE PTR [esi+0x599b900e],0xa5
  427a6f:	mov    ebp,DWORD PTR [edx-0x306c67f7]
  427a75:	inc    ebp
  427a76:	mov    al,ds:0x94bcd40d
  427a7b:	push   edx
  427a7c:	cmp    BYTE PTR [ecx-0x18258db9],al
  427a82:	fwait
  427a83:	pusha  
  427a84:	(bad)  
  427a86:	xchg   edx,eax
  427a87:	aam    0x2d
  427a89:	arpl   WORD PTR [edi+eiz*4+0x53],di
  427a8d:	and    eax,0x8f38f8fc
  427a92:	lds    eax,FWORD PTR [edi]
  427a94:	pop    ss
  427a95:	mov    eax,ds:0x5fef6b64
  427a9a:	jae    0x427b11
  427a9c:	or     BYTE PTR [edx-0x373b3d8c],dh
  427aa2:	pop    eax
  427aa3:	xor    DWORD PTR [esi],0x793334f5
  427aa9:	lea    edi,[ebx-0x223dba38]
  427aaf:	test   esp,0x46c3eb6c
  427ab5:	adc    esi,DWORD PTR [esi]
  427ab7:	fistp  DWORD PTR [ecx-0x6a]
  427aba:	xor    al,0xfa
  427abc:	sar    DWORD PTR [ebp-0x333b5e47],0x3b
  427ac3:	jle    0x427a7b
  427ac5:	rcl    BYTE PTR [edx+ebx*4-0x73],1
  427ac9:	call   DWORD PTR [edx+0x52e686f6]
  427acf:	into   
  427ad0:	(bad)  
  427ad1:	mov    esp,0x95c7675b
  427ad6:	mov    ds:0xfa80feac,al
  427adb:	out    dx,eax
  427adc:	push   0xfe7b42b5
  427ae1:	dec    esp
  427ae2:	mov    bl,0x34
  427ae4:	imul   edx,DWORD PTR ds:0xa88acc13,0x62
  427aeb:	int    0xd1
  427aed:	fld    DWORD PTR [edi]
  427aef:	push   0xfffffff4
  427af1:	xor    esi,DWORD PTR [eax+0x57269f5a]
  427af7:	push   0x6d9b50f5
  427afc:	xchg   ebp,eax
  427afd:	or     al,0xac
  427aff:	aam    0x48
  427b01:	outs   dx,DWORD PTR ds:[esi]
  427b02:	push   es
  427b03:	dec    ebp
  427b04:	inc    esp
  427b05:	add    edx,DWORD PTR [ebp-0x2f17009e]
  427b0b:	push   es
  427b0c:	ja     0x427ade
  427b0e:	xchg   edx,eax
  427b0f:	sbb    bl,bl
  427b11:	jnp    0x427b87
  427b13:	cwde   
  427b14:	jb     0x427b95
  427b16:	jbe    0x427b6e
  427b18:	outs   dx,BYTE PTR ds:[esi]
  427b19:	imul   ecx,DWORD PTR [eax+0x16],0xfffffff1
  427b1d:	sub    bl,BYTE PTR [eax+0x67]
  427b20:	pop    ecx
  427b21:	dec    eax
  427b22:	inc    ebx
  427b23:	mov    al,0x34
  427b25:	mov    ds:0xc66a5e09,al
  427b2a:	mov    bh,0x2f
  427b2c:	xchg   DWORD PTR [eax-0x60a68c40],esi
  427b32:	imul   DWORD PTR [ecx-0x24fa5500]
  427b38:	out    dx,al
  427b39:	call   0x1999609a
  427b3e:	mov    bl,BYTE PTR [ebx+0x3c21a85e]
  427b44:	sbb    BYTE PTR [ebx+0x27a3d4d7],ah
  427b4a:	(bad)  
  427b4b:	test   al,0x55
  427b4d:	mov    edx,0x9789da5d
  427b52:	xchg   DWORD PTR [ecx],edi
  427b54:	mov    ah,0x53
  427b56:	std    
  427b57:	push   esi
  427b58:	inc    esp
  427b59:	pop    es
  427b5a:	pop    eax
  427b5b:	dec    esi
  427b5c:	sbb    al,0x7b
  427b5e:	jo     0x427b1f
  427b60:	lea    ebx,[edx]
  427b62:	sbb    eax,0x11cfbe14
  427b67:	bound  esp,QWORD PTR ds:0xd4b0c65c
  427b6d:	enter  0x58e6,0x4b
  427b71:	inc    ebx
  427b72:	and    BYTE PTR [ebx],ah
  427b74:	iret   
  427b75:	(bad)  [esi]
  427b77:	jp     0x427bb5
  427b79:	jle    0x427b78
  427b7b:	bnd jmp 0x122e4fd1
  427b81:	aas    
  427b82:	xchg   ebp,eax
  427b83:	xchg   edi,eax
  427b84:	xor    eax,0x39d74665
  427b89:	mov    ch,bh
  427b8b:	pop    ss
  427b8c:	fs scas al,BYTE PTR es:[edi]
  427b8e:	(bad)  [eax-0x2e]
  427b91:	adc    DWORD PTR [esi],esi
  427b93:	dec    esi
  427b94:	inc    ecx
  427b95:	(bad)  
  427b96:	pop    eax
  427b97:	push   cs
  427b98:	mov    ah,bl
  427b9a:	jmp    DWORD PTR [edi+0x7c01380c]
  427ba0:	push   0xffffff80
  427ba2:	and    al,0x77
  427ba4:	jno    0x427bbe
  427ba6:	and    BYTE PTR [eax-0x43f3d8e1],0x85
  427bad:	push   es
  427bae:	sbb    dh,BYTE PTR ds:0x3dca4934
  427bb4:	in     al,0x1f
  427bb6:	pop    eax
  427bb7:	push   cs
  427bb8:	or     al,dl
  427bba:	push   cs
  427bbb:	jmp    0x8c8f:0x46bdb497
  427bc2:	cdq    
  427bc3:	jp     0x427b6c
  427bc5:	or     ch,BYTE PTR [edx-0x699a822]
  427bcb:	fdivr  QWORD PTR [edx+0x3fd9f495]
  427bd1:	popa   
  427bd2:	lods   eax,DWORD PTR ds:[esi]
  427bd3:	xor    eax,ecx
  427bd5:	and    dl,dh
  427bd7:	xor    bh,BYTE PTR [ecx+ebp*1]
  427bda:	jno    0x427b81
  427bdc:	stos   BYTE PTR es:[edi],al
  427bdd:	sar    BYTE PTR [edi-0x5e],cl
  427be0:	add    DWORD PTR [edx],ebx
  427be2:	ror    DWORD PTR [ecx+0x49],cl
  427be5:	(bad)  
  427be6:	inc    al
  427be8:	mov    ecx,0x1e0d93d6
  427bed:	fcom   QWORD PTR [ebx-0x7d]
  427bf0:	cmp    ebx,DWORD PTR [esp+ebx*4+0x2fa9b8b1]
  427bf7:	xchg   DWORD PTR [edx-0x712ee5b1],ebp
  427bfd:	not    cl
  427bff:	xchg   esi,eax
  427c00:	in     eax,0xfc
  427c02:	mov    bl,0x4a
  427c04:	inc    esp
  427c05:	(bad)  
  427c06:	xor    ebp,DWORD PTR [ebp-0x62]
  427c09:	inc    edx
  427c0a:	mov    edx,DWORD PTR [ebx-0x6f2a4026]
  427c10:	xor    eax,0xcbb196cd
  427c15:	pop    esi
  427c16:	push   esi
  427c17:	push   edi
  427c18:	iret   
  427c19:	out    0x32,al
  427c1b:	xor    eax,0x621dd351
  427c20:	and    DWORD PTR [ecx],0xffffffdb
  427c23:	jno    0x427bdd
  427c25:	xchg   ebp,eax
  427c26:	cdq    
  427c27:	pop    ds
  427c28:	movups xmm5,XMMWORD PTR [edx]
  427c2b:	add    ebx,DWORD PTR [esi]
  427c2d:	push   ss
  427c2e:	or     al,0xbe
  427c30:	jo     0x427c34
  427c32:	ror    esp,0xba
  427c35:	and    eax,0x73573a59
  427c3a:	daa    
  427c3b:	mov    eax,0xb45a283c
  427c40:	in     eax,0x5a
  427c42:	mov    cl,dl
  427c44:	mov    ah,0x51
  427c46:	ins    BYTE PTR es:[edi],dx
  427c47:	ds test eax,0x1b6bb01
  427c4d:	adc    BYTE PTR [ebx+0x15],ch
  427c50:	cmc    
  427c51:	cmp    DWORD PTR [ecx+0x22f4b5a7],edx
  427c57:	ror    BYTE PTR [ebx+0x71],cl
  427c5a:	in     al,0xe7
  427c5c:	sbb    eax,0x1383c8c
  427c61:	push   edi
  427c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c63:	mov    edx,0xce6c3e78
  427c68:	pop    DWORD PTR [ebp+0x6c]
  427c6b:	xor    edx,edx
  427c6d:	jb     0x427c9b
  427c6f:	sub    al,0xea
  427c71:	imul   ebp,DWORD PTR [ebp+eiz*4+0x6114381],0xf37a0348
  427c7c:	mov    dl,0x80
  427c7e:	repz dec esi
  427c80:	(bad)  
  427c81:	lods   al,BYTE PTR ds:[esi]
  427c82:	sysret 
  427c84:	mov    edx,0x19e4f118
  427c89:	out    0xc4,eax
  427c8b:	cmp    DWORD PTR [edi],eax
  427c8d:	loopne 0x427c50
  427c8f:	xor    al,0xe
  427c91:	cwde   
  427c92:	imul   eax,DWORD PTR [eax+eiz*1-0x49ec67fc],0xfffffff2
  427c9a:	push   es
  427c9b:	lea    esi,[edi+ebp*8-0x37894391]
  427ca2:	leave  
  427ca3:	and    DWORD PTR [edx+0x43],edx
  427ca6:	fs sub eax,0x2c3d2539
  427cac:	mov    dl,0xdc
  427cae:	retf   
  427caf:	adc    edi,DWORD PTR [edi+eax*1-0x20]
  427cb3:	mov    ah,0xdb
  427cb5:	cmp    al,0x84
  427cb7:	in     al,0xfd
  427cb9:	sbb    al,0x1b
  427cbb:	(bad)  
  427cbc:	jmp    0x7d93eb79
  427cc1:	jno    0x427d3d
  427cc3:	retf   
  427cc4:	jns    0x427cb2
  427cc6:	xor    eax,0xf9e33a31
  427ccb:	cmp    ebx,DWORD PTR [ebp-0x4c83f667]
  427cd1:	dec    ecx
  427cd2:	add    eax,0xbf6fc1b5
  427cd7:	push   edi
  427cd8:	out    dx,al
  427cd9:	pop    edx
  427cda:	retf   
  427cdb:	cmp    bh,al
  427cdd:	or     al,0xd1
  427cdf:	js     0x427cb1
  427ce1:	ds mov al,0xef
  427ce4:	xor    ecx,DWORD PTR [ebp+0x28]
  427ce7:	lea    esp,ds:0xb8dd3f0c
  427ced:	and    eax,0x88103556
  427cf2:	mov    es,esp
  427cf4:	inc    edx
  427cf5:	xchg   edx,eax
  427cf6:	inc    edi
  427cf7:	add    eax,0xccf11aab
  427cfc:	icebp  
  427cfd:	push   es
  427cfe:	dec    esp
  427cff:	jmp    0x427d64
  427d01:	test   al,0x41
  427d03:	xchg   edx,eax
  427d04:	int3   
  427d05:	popf   
  427d06:	push   ecx
  427d07:	push   cs
  427d08:	inc    edi
  427d09:	inc    eax
  427d0a:	ins    DWORD PTR es:[edi],dx
  427d0b:	hlt    
  427d0c:	jl     0x427d48
  427d0e:	push   esp
  427d0f:	nop    DWORD PTR [ebx]
  427d12:	cwde   
  427d13:	sahf   
  427d14:	xlat   BYTE PTR ds:[ebx]
  427d15:	jmp    FWORD PTR [edi+0x39a6258d]
  427d1b:	xchg   ebx,eax
  427d1c:	enter  0x45df,0x7
  427d20:	fcom   DWORD PTR [ecx+0x5e77d194]
  427d26:	sbb    eax,0x671ef61c
  427d2b:	loopne 0x427d94
  427d2d:	push   ds
  427d2e:	mov    dl,0x97
  427d30:	adc    eax,0xed3b83c2
  427d35:	pop    esi
  427d36:	fisttp QWORD PTR [edi-0x7ae212b7]
  427d3c:	mov    bl,0x5
  427d3e:	js     0x427d24
  427d40:	pop    ss
  427d41:	fimul  WORD PTR [edx+0x195e91f4]
  427d47:	mov    dl,0xaf
  427d49:	icebp  
  427d4a:	test   DWORD PTR [ecx],ebx
  427d4c:	cmp    ch,al
  427d4e:	repz cmp al,0x99
  427d51:	sub    al,0x4
  427d53:	js     0x427d25
  427d55:	or     esi,0x4d
  427d58:	mov    ebp,0x5f3eae0f
  427d5d:	aas    
  427d5e:	shl    BYTE PTR ds:0x4cf3ab7b,0xa2
  427d65:	test   eax,0x777e974c
  427d6a:	(bad)  
  427d6c:	mov    bh,0xa7
  427d6e:	stos   BYTE PTR es:[edi],al
  427d6f:	and    BYTE PTR [ebp+0x66546c26],al
  427d75:	ror    ecx,cl
  427d77:	xlat   BYTE PTR ds:[ebx]
  427d78:	dec    edi
  427d79:	(bad)  
  427d7a:	cwde   
  427d7b:	pop    gs
  427d7d:	sbb    eax,0x7eac57a4
  427d82:	loope  0x427de0
  427d84:	jbe    0x427d2b
  427d86:	gs add eax,0xbc157b83
  427d8c:	gs test eax,0x9dee079
  427d92:	mov    esp,0x2b231593
  427d97:	shr    al,cl
  427d99:	out    dx,eax
  427d9a:	jl     0x427daf
  427d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d9d:	sbb    DWORD PTR [edx],eax
  427d9f:	aaa    
  427da0:	cdq    
  427da1:	mov    edi,0xd5789bb0
  427da6:	xchg   esi,eax
  427da7:	int    0x73
  427da9:	jne    0x427d8a
  427dab:	mov    bh,0x4c
  427dad:	inc    ebx
  427dae:	stc    
  427daf:	imul   edx,ebx,0xb7035d05
  427db5:	sbb    ebp,eax
  427db7:	aad    0x91
  427db9:	(bad)  
  427dba:	out    dx,eax
  427dbb:	sub    edi,DWORD PTR [edi]
  427dbd:	sbb    bl,0x3d
  427dc0:	mov    cl,0x8e
  427dc2:	mov    cl,0x3
  427dc4:	adc    dl,ah
  427dc6:	sar    BYTE PTR [ebx],0xb2
  427dc9:	and    bh,BYTE PTR [edi+0x8d67f05]
  427dcf:	jge    0x427d79
  427dd1:	jo     0x427e4c
  427dd3:	std    
  427dd4:	or     dl,dl
  427dd6:	add    eax,0xa5c2d368
  427ddb:	xor    eax,DWORD PTR [esi+0x3f318cf0]
  427de1:	or     al,0x82
  427de3:	jg     0x427e63
  427de5:	and    bh,ah
  427de7:	xchg   esp,edx
  427de9:	retf   
  427dea:	outs   dx,BYTE PTR ds:[esi]
  427deb:	mov    ebp,0x11f5467c
  427df0:	push   esi
  427df1:	xchg   edi,eax
  427df2:	add    al,ah
  427df4:	bound  esp,QWORD PTR [ebx-0x44ddb50b]
  427dfa:	xor    esp,esi
  427dfc:	test   eax,0x6de9fef9
  427e01:	ins    DWORD PTR es:[edi],dx
  427e02:	daa    
  427e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e04:	xor    BYTE PTR ds:0x5a326943,bl
  427e0a:	and    cl,BYTE PTR [esi-0x3b]
  427e0d:	cmp    cl,BYTE PTR [eax]
  427e0f:	mov    eax,0x41ad1531
  427e14:	mov    ebp,0xc6acbf0e
  427e19:	add    BYTE PTR [ebp+0x631b63b8],dl
  427e1f:	sbb    BYTE PTR [ebx+0x48],ch
  427e22:	js     0x427e44
  427e24:	pusha  
  427e25:	or     BYTE PTR [edx],bh
  427e27:	dec    esi
  427e28:	test   DWORD PTR [ecx],esp
  427e2a:	aas    
  427e2b:	shl    BYTE PTR ds:0x60743554,1
  427e31:	inc    ebp
  427e32:	mov    bl,0x70
  427e34:	call   0x43d06247
  427e39:	adc    al,0x31
  427e3b:	dec    esi
  427e3c:	jnp    0x427e81
  427e3e:	mov    ch,0x49
  427e40:	(bad)  
  427e41:	out    0x43,eax
  427e43:	xor    al,0x58
  427e45:	jecxz  0x427e4a
  427e47:	stos   BYTE PTR es:[edi],al
  427e48:	mov    ch,0xad
  427e4a:	mov    ebx,?
  427e4c:	mov    ebx,es
  427e4e:	pop    ebx
  427e4f:	(bad)  
  427e50:	jmp    FWORD PTR [esp+edx*8+0x1be51db4]
  427e57:	addr16 jmp 0xa4bda9f0
  427e5d:	loope  0x427e09
  427e5f:	dec    eax
  427e60:	repnz sbb esp,DWORD PTR [ebp-0xb662db5]
  427e67:	and    DWORD PTR [esi-0x476b987a],edx
  427e6d:	mov    ecx,0x78bcdf1a
  427e72:	out    dx,al
  427e73:	lock push edi
  427e75:	push   esp
  427e76:	int    0xc0
  427e78:	rcl    BYTE PTR [ebp-0x34],0x90
  427e7c:	xchg   ecx,eax
  427e7d:	jae    0x427eae
  427e7f:	ret    
  427e80:	(bad)  
  427e81:	test   al,0xc3
  427e83:	sub    al,0x2f
  427e85:	or     eax,0xee18f82
  427e8a:	pop    es
  427e8b:	dec    edx
  427e8c:	jl     0x427e8b
  427e8e:	popf   
  427e8f:	into   
  427e90:	out    0x63,al
  427e92:	mov    eax,ds:0x1c1f1fdf
  427e97:	sbb    ecx,DWORD PTR [ebx]
  427e99:	sbb    bl,dh
  427e9b:	cs sti 
  427e9d:	add    eax,0xa177ea1e
  427ea2:	adc    dh,bl
  427ea4:	xor    BYTE PTR [eax+0x2e],0x39
  427ea8:	cld    
  427ea9:	les    edi,FWORD PTR [ebp-0x67]
  427eac:	sbb    eax,0xec98d15b
  427eb1:	fwait
  427eb2:	stos   DWORD PTR es:[edi],eax
  427eb3:	xchg   ecx,eax
  427eb4:	test   eax,0x8a15582f
  427eb9:	dec    edi
  427eba:	push   eax
  427ebb:	and    bl,BYTE PTR [eax-0x50d2ae38]
  427ec1:	ficomp DWORD PTR [edi]
  427ec3:	outs   dx,DWORD PTR ds:[esi]
  427ec4:	ins    DWORD PTR es:[edi],dx
  427ec5:	pop    ecx
  427ec6:	pop    ebx
  427ec7:	push   0x84d2d67e
  427ecc:	cmp    cl,BYTE PTR [edi-0x2]
  427ecf:	xchg   DWORD PTR [ebx+esi*8-0x9],ecx
  427ed3:	cmp    al,0xae
  427ed5:	jecxz  0x427f01
  427ed7:	js     0x427e62
  427ed9:	inc    esi
  427eda:	xor    al,BYTE PTR [edi-0x26]
  427edd:	jo     0x427e87
  427edf:	stc    
  427ee0:	cwde   
  427ee1:	ret    0x31ed
  427ee4:	sbb    BYTE PTR [ecx-0x6d0fb4d3],bh
  427eea:	dec    edx
  427eeb:	jmp    0x427ef7
  427eed:	cmp    BYTE PTR [ebp+0x10],ah
  427ef0:	push   0x34
  427ef2:	lea    edx,[eax]
  427ef4:	fsub   QWORD PTR [edx+0x57]
  427ef7:	cmp    BYTE PTR [edx],al
  427ef9:	push   ss
  427efa:	int3   
  427efb:	jle    0x427efc
  427efd:	xchg   ebp,eax
  427efe:	mov    ds:0xfb8403fe,eax
  427f03:	pop    edx
  427f04:	dec    edi
  427f05:	neg    DWORD PTR [edi+0x1c]
  427f08:	scas   eax,DWORD PTR es:[edi]
  427f09:	test   dh,bh
  427f0b:	inc    ebx
  427f0c:	pop    edx
  427f0d:	sub    ebp,ebp
  427f0f:	idiv   dh
  427f11:	mov    ?,WORD PTR [ebp-0x20]
  427f14:	jmp    0x427ee0
  427f16:	repnz xchg ebp,eax
  427f18:	(bad)  
  427f1a:	jp     0x427ef2
  427f1c:	cmp    DWORD PTR [eax],0x62d2fa88
  427f22:	scas   al,BYTE PTR es:[edi]
  427f23:	inc    ebx
  427f24:	iret   
  427f25:	mov    bl,0x88
  427f27:	ficom  DWORD PTR [eax]
  427f29:	mov    ebx,0x7ea34e3f
  427f2e:	(bad)  
  427f2f:	push   ebp
  427f30:	cdq    
  427f31:	inc    ebp
  427f32:	pop    ebx
  427f33:	or     al,0xdc
  427f35:	in     eax,dx
  427f36:	mov    eax,0x24e72bc6
  427f3b:	aas    
  427f3c:	punpcklbw mm6,DWORD PTR [esi-0x23de3d89]
  427f43:	pushf  
  427f44:	outs   dx,BYTE PTR ds:[esi]
  427f45:	ja     0x427f3d
  427f47:	push   ecx
  427f48:	dec    edi
  427f49:	shr    edi,1
  427f4b:	jg     0x427f4b
  427f4d:	std    
  427f4e:	cli    
  427f4f:	imul   ebx,DWORD PTR [ecx],0xffffffaa
  427f52:	pop    esi
  427f53:	jge    0x427fd2
  427f55:	int    0xf4
  427f57:	add    DWORD PTR [eax],eax
  427f59:	clc    
  427f5a:	add    al,0x0
  427f5c:	add    dh,bl
  427f5e:	cmp    eax,0xa9cf855d
  427f63:	sub    DWORD PTR [esi-0x5cec3286],edi
  427f69:	mov    al,ds:0x5fe975a8
  427f6e:	sti    
  427f6f:	xchg   edi,eax
  427f70:	xsha1  (bad)
  427f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f72:	femms  
  427f74:	in     eax,dx
  427f75:	bound  ecx,QWORD PTR [edi+0x55477cc6]
  427f7b:	in     al,0xe8
  427f7d:	je     0x427fae
  427f7f:	pop    esp
  427f80:	nop
  427f81:	retf   
  427f82:	push   esp
  427f83:	cmp    esi,DWORD PTR [eax]
  427f85:	xor    eax,0xa092d5e
  427f8a:	pop    esi
  427f8b:	cmp    al,0xe0
  427f8d:	(bad)  
  427f8e:	pop    ebx
  427f8f:	inc    ebx
  427f90:	push   esp
  427f91:	ins    BYTE PTR es:[edi],dx
  427f92:	leave  
  427f93:	ins    DWORD PTR es:[edi],dx
  427f94:	xchg   BYTE PTR [esi+0x52],dh
  427f97:	lods   al,BYTE PTR ds:[esi]
  427f98:	sub    dl,BYTE PTR [esi-0x13e90167]
  427f9e:	stos   DWORD PTR es:[edi],eax
  427f9f:	mov    bl,0xba
  427fa1:	fbstp  TBYTE PTR [esi]
  427fa3:	test   BYTE PTR [ecx+0x4f],0xeb
  427fa7:	push   ss
  427fa8:	fwait
  427fa9:	inc    edi
  427faa:	jmp    0x9607a4ac
  427faf:	mov    BYTE PTR [edi+0x24201e3e],ah
  427fb5:	adc    BYTE PTR [eax],dl
  427fb7:	dec    edi
  427fb8:	xchg   esi,eax
  427fb9:	fwait
  427fba:	xchg   edi,eax
  427fbb:	inc    eax
  427fbc:	call   0xea7d:0x2f744b37
  427fc3:	outs   dx,BYTE PTR ds:[esi]
  427fc4:	repnz iret 
  427fc6:	push   ss
  427fc7:	xchg   esi,eax
  427fc8:	dec    edi
  427fc9:	mov    dl,0x17
  427fcb:	into   
  427fcc:	ret    
  427fcd:	or     esp,esi
  427fcf:	cwde   
  427fd0:	ds fwait
  427fd2:	lods   al,BYTE PTR ds:[esi]
  427fd3:	dec    edx
  427fd4:	iret   
  427fd5:	test   eax,0x6b003a45
  427fda:	xor    eax,0x74f95154
  427fdf:	adc    ebp,DWORD PTR [esi]
  427fe1:	shld   DWORD PTR es:[edi+0x3525cbff],esi,0x84
  427fea:	cmp    eax,0xcab70434
  427fef:	lahf   
  427ff0:	or     al,BYTE PTR [ebx]
  427ff2:	dec    edi
  427ff3:	fst    st(0)
  427ff5:	ret    
  427ff6:	aam    0x38
  427ff8:	imul   ebp,DWORD PTR [ebp-0x21],0x9f1007dd
  427fff:	push   0x96cb4b19
  428004:	mov    ds:0x8da84355,al
  428009:	xchg   esp,eax
  42800a:	xchg   ecx,eax
  42800b:	pop    esi
  42800c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42800d:	mov    ebp,0x430fc6d0
  428012:	push   es
  428013:	mov    esi,0x5facfd58
  428018:	xchg   ebp,eax
  428019:	(bad)  
  42801a:	out    dx,al
  42801b:	jnp    0x42802b
  42801d:	(bad)  
  42801f:	cdq    
  428020:	shl    edx,cl
  428022:	fisttp WORD PTR [edi]
  428024:	push   edi
  428025:	xchg   edi,eax
  428026:	dec    ebx
  428027:	xchg   edi,eax
  428028:	ins    BYTE PTR es:[edi],dx
  428029:	push   edx
  42802a:	mov    edx,DWORD PTR ds:0xcf21689d
  428030:	adc    BYTE PTR [edi],bh
  428032:	aam    0x83
  428034:	shl    DWORD PTR [ecx],0x93
  428037:	mov    dl,0x54
  428039:	bound  ebp,QWORD PTR [edx]
  42803b:	nop
  42803c:	in     al,dx
  42803d:	or     cl,BYTE PTR [ebp+edi*8-0x3c]
  428041:	aad    0x27
  428043:	arpl   bx,si
  428045:	lea    ebp,[ebx]
  428047:	push   ds
  428048:	push   edi
  428049:	arpl   cx,ax
  42804b:	cmp    bl,BYTE PTR [ebx-0x727c2ac2]
  428051:	clc    
  428052:	into   
  428053:	(bad)  
  428054:	int3   
  428055:	cli    
  428056:	mov    esi,0xd9dd005d
  42805b:	jle    0x42805a
  42805d:	shl    DWORD PTR [ebp-0x2d],0xe8
  428061:	xchg   ebp,eax
  428062:	inc    edx
  428063:	nop
  428064:	sbb    al,bl
  428066:	lods   al,BYTE PTR ds:[esi]
  428067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428068:	mov    ebx,0x4eec9f61
  42806d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42806e:	mov    al,ds:0xc5bd14dc
  428073:	and    ecx,DWORD PTR [eax]
  428075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428076:	clc    
  428077:	fs stos DWORD PTR es:[edi],eax
  428079:	outs   dx,BYTE PTR ds:[esi]
  42807a:	pop    eax
  42807b:	dec    esp
  42807c:	dec    edi
  42807d:	pusha  
  42807e:	aas    
  42807f:	jmp    0xf78aa2b7
  428084:	loop   0x428102
  428086:	pop    ss
  428087:	jne    0x4280db
  428089:	cwde   
  42808a:	mov    dl,0x50
  42808c:	dec    ebx
  42808d:	xchg   esi,eax
  42808e:	xchg   edi,eax
  42808f:	dec    eax
  428090:	or     eax,0x14e9b1f9
  428095:	jmp    0x428057
  428097:	mov    edi,0x4ef078a3
  42809c:	aas    
  42809d:	addr16 fadd st(6),st
  4280a0:	(bad)  
  4280a1:	xor    BYTE PTR [ecx],bh
  4280a3:	cmp    DWORD PTR [eax+0x5f06e17a],0x3651a4c6
  4280ad:	es je  0x428051
  4280b0:	sbb    eax,0x7f05f29e
  4280b5:	adc    esi,DWORD PTR [ecx+0x575753b7]
  4280bb:	xchg   edx,eax
  4280bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280bd:	add    ecx,DWORD PTR [eax-0x51d3ca34]
  4280c3:	mov    ecx,0xff88ccc6
  4280c8:	pop    ecx
  4280c9:	inc    edi
  4280ca:	scas   eax,DWORD PTR es:[edi]
  4280cb:	or     eax,DWORD PTR cs:[ebx]
  4280ce:	ss (bad) 
  4280d0:	rol    BYTE PTR [ecx+0x268446c8],cl
  4280d6:	sub    esi,ebp
  4280d8:	and    eax,0xf658b2ba
  4280dd:	aam    0xa8
  4280df:	sub    esi,DWORD PTR [ecx]
  4280e1:	mov    ecx,0xbc5439cb
  4280e6:	stos   BYTE PTR es:[edi],al
  4280e7:	imul   esp,DWORD PTR [esi-0x74],0xffffffca
  4280eb:	sub    ah,BYTE PTR [eax]
  4280ed:	mov    cl,0x40
  4280ef:	out    0x36,al
  4280f1:	push   ecx
  4280f2:	dec    edx
  4280f3:	les    eax,FWORD PTR [ebp+0x40]
  4280f6:	or     esi,ecx
  4280f8:	in     al,0x34
  4280fa:	or     bh,BYTE PTR [ebp-0x5f]
  4280fd:	add    ah,0x3f
  428100:	adc    DWORD PTR [ebp-0x72f43597],ebp
  428106:	adc    BYTE PTR [esi-0x61],al
  428109:	std    
  42810a:	sub    al,0x56
  42810c:	std    
  42810d:	stos   BYTE PTR es:[edi],al
  42810e:	pop    ebx
  42810f:	mov    BYTE PTR [ecx],bl
  428111:	pusha  
  428112:	mov    edx,esi
  428114:	je     0x428151
  428116:	imul   esi,DWORD PTR [eax],0x654fb5f1
  42811c:	outs   dx,DWORD PTR ds:[esi]
  42811d:	lds    esi,FWORD PTR [ebx+0x77]
  428120:	dec    esi
  428121:	or     edi,DWORD PTR ds:0xb751e91d
  428127:	ins    DWORD PTR es:[edi],dx
  428128:	cmp    ebp,esi
  42812a:	scas   al,BYTE PTR es:[edi]
  42812b:	(bad)  
  42812c:	fcmovnbe st,st(7)
  42812e:	xor    ah,dh
  428130:	or     eax,0x5c7c4338
  428135:	pop    ebx
  428136:	dec    edi
  428137:	icebp  
  428138:	adc    DWORD PTR [eax-0x71],esp
  42813b:	test   al,0xc9
  42813d:	mov    ebx,0xaaaef22e
  428142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428143:	push   esi
  428144:	js     0x42813c
  428146:	mov    ecx,0x55e39add
  42814b:	ret    0xd345
  42814e:	int3   
  42814f:	and    dh,BYTE PTR [ebx-0x707acd36]
  428155:	mov    al,BYTE PTR [eax]
  428157:	aas    
  428158:	pop    ebx
  428159:	popa   
  42815a:	stc    
  42815b:	retf   0x5b56
  42815e:	jo     0x42818d
  428160:	mov    eax,ds:0x4ced367f
  428165:	mul    DWORD PTR [edi]
  428167:	push   ecx
  428168:	popa   
  428169:	inc    ecx
  42816a:	cwde   
  42816b:	cmp    DWORD PTR [edi],0x57
  42816e:	div    BYTE PTR [edx]
  428170:	std    
  428171:	sbb    eax,0xfedd887b
  428176:	fwait
  428177:	xchg   ecx,eax
  428178:	imul   ecx,DWORD PTR [esi-0x36],0xc4db1a01
  42817f:	pop    ds
  428180:	jns    0x42812d
  428182:	daa    
  428183:	int    0xa7
  428185:	push   eax
  428186:	mul    ebx
  428188:	xchg   edx,eax
  428189:	dec    ebp
  42818a:	gs sbb al,0x65
  42818d:	loope  0x4281fa
  42818f:	sti    
  428190:	into   
  428191:	(bad)  
  428192:	cmp    dl,BYTE PTR [ebx-0x1a]
  428195:	in     al,dx
  428196:	(bad)  
  428197:	jmp    0xc07b99ae
  42819c:	pushf  
  42819d:	or     DWORD PTR [ebp+0x3d310ac3],ebx
  4281a3:	sbb    al,0x7f
  4281a5:	and    BYTE PTR [eax+0x19],cl
  4281a8:	dec    edx
  4281a9:	xchg   edi,eax
  4281aa:	mov    WORD PTR [esi],ds
  4281ac:	mov    dh,0xb4
  4281ae:	jns    0x428141
  4281b0:	xor    al,0x82
  4281b2:	lahf   
  4281b3:	outs   dx,DWORD PTR ds:[esi]
  4281b4:	mov    edi,ds
  4281b6:	add    BYTE PTR ds:[ebp+0x2],0x41
  4281bb:	jne    0x42822d
  4281bd:	scas   al,BYTE PTR es:[edi]
  4281be:	dec    ecx
  4281bf:	bts    DWORD PTR [edx],esi
  4281c2:	shl    DWORD PTR [ebp+ebp*4-0x42],0x58
  4281c7:	jno    0x42815d
  4281c9:	cmp    eax,0x89ec73ca
  4281ce:	scas   al,BYTE PTR es:[edi]
  4281cf:	sub    DWORD PTR [esi],0x2fb7f71a
  4281d5:	mov    edi,DWORD PTR [edi+eiz*1+0x63]
  4281d9:	aam    0xd7
  4281db:	sti    
  4281dc:	fs jae 0x428204
  4281df:	cmc    
  4281e0:	loop   0x428255
  4281e2:	cli    
  4281e3:	cwde   
  4281e4:	push   ss
  4281e5:	lock sub BYTE PTR [ebx],ah
  4281e8:	int    0x76
  4281ea:	jmp    0x87d368a3
  4281ef:	push   ebx
  4281f0:	ss aas 
  4281f2:	inc    ecx
  4281f3:	sbb    al,0xd7
  4281f5:	popf   
  4281f6:	or     dh,BYTE PTR [ecx-0x1a004a21]
  4281fc:	in     al,0x3c
  4281fe:	outs   dx,DWORD PTR ds:[esi]
  4281ff:	xchg   edi,eax
  428200:	stos   DWORD PTR es:[edi],eax
  428201:	outs   dx,BYTE PTR ds:[esi]
  428202:	arpl   WORD PTR [esi-0x10c8cf3d],cx
  428208:	dec    edi
  428209:	fnstsw WORD PTR [eax-0x65]
  42820c:	iret   
  42820d:	pop    esp
  42820e:	sub    eax,0xeb85d5dd
  428213:	push   esi
  428214:	out    dx,eax
  428215:	repz mov eax,ds:0xdfb4b023
  42821b:	loope  0x4281e5
  42821d:	push   0x311f28a4
  428222:	pop    esp
  428223:	jb     0x4281bc
  428225:	mov    ds:0x57678de9,eax
  42822a:	inc    esi
  42822b:	icebp  
  42822c:	lahf   
  42822d:	mov    ebx,0x68f1f622
  428232:	xor    ah,ah
  428234:	push   cs
  428235:	and    BYTE PTR [ecx-0x79],0x14
  428239:	lahf   
  42823a:	lods   al,BYTE PTR ds:[esi]
  42823b:	mov    eax,0xfadedbba
  428240:	test   eax,0xa230a693
  428245:	sbb    BYTE PTR [esi-0x4ebc5a05],dh
  42824b:	sbb    BYTE PTR [eax+0x53],0xbc
  42824f:	sbb    esi,ebx
  428251:	add    eax,0x55d9210f
  428256:	mov    ecx,0x34b5d139
  42825b:	aad    0x5e
  42825d:	ret    0xd88c
  428260:	out    0x85,eax
  428262:	sub    BYTE PTR [edx],ch
  428264:	mov    al,ds:0xb4528126
  428269:	iret   
  42826a:	xchg   ecx,eax
  42826b:	mov    dl,0x89
  42826d:	dec    ecx
  42826e:	mov    ch,BYTE PTR [edi]
  428270:	dec    edx
  428271:	dec    ebx
  428272:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428274:	icebp  
  428275:	ins    DWORD PTR es:[edi],dx
  428276:	xchg   esp,eax
  428277:	mov    bl,0x9c
  428279:	sbb    eax,0x74d20486
  42827e:	test   BYTE PTR [ebp-0x667b9662],0xcc
  428285:	cli    
  428286:	jb     0x4282d4
  428288:	les    ebp,FWORD PTR ds:0x358d44ff
  42828e:	pop    ecx
  42828f:	loopne 0x428284
  428291:	cmp    DWORD PTR cs:[ebx],eax
  428294:	xor    DWORD PTR [edi],esp
  428296:	ja     0x428226
  428298:	or     eax,0x260064b9
  42829d:	mov    esi,edi
  42829f:	xor    al,bl
  4282a1:	cmp    eax,0x970af4ab
  4282a6:	fstp   DWORD PTR [edx+0x2d]
  4282a9:	addr16 cdq 
  4282ab:	in     al,0x13
  4282ad:	fwait
  4282ae:	push   ebx
  4282af:	push   ss
  4282b0:	and    eax,DWORD PTR [edi-0x77]
  4282b3:	sbb    ch,BYTE PTR [edx+0x7f8fcd47]
  4282b9:	stos   BYTE PTR es:[edi],al
  4282ba:	je     0x42824b
  4282bc:	out    0xa3,eax
  4282be:	sbb    esi,DWORD PTR [ebx+0x1a3b778b]
  4282c4:	daa    
  4282c5:	push   ss
  4282c6:	and    al,0x9
  4282c8:	cmp    ah,0x99
  4282cb:	xor    bl,BYTE PTR [esi-0x62]
  4282ce:	mov    ebp,0x657d5d6d
  4282d3:	je     0x428273
  4282d5:	int    0xf2
  4282d7:	hlt    
  4282d8:	add    al,BYTE PTR [esi+0x70ec0f0b]
  4282de:	fsubr  QWORD PTR [edi]
  4282e0:	xchg   DWORD PTR [edi+0x2a],edx
  4282e3:	int    0xd
  4282e5:	jne    0x428318
  4282e7:	dec    esp
  4282e8:	dec    edi
  4282e9:	sbb    DWORD PTR [edi+0x374a1a4d],ebp
  4282ef:	lods   eax,DWORD PTR es:[esi]
  4282f1:	pop    edi
  4282f2:	push   edi
  4282f3:	out    0x7,al
  4282f5:	mov    DWORD PTR [ecx+0x2c],esp
  4282f8:	or     ch,ch
  4282fa:	and    eax,0x7598e4ba
  4282ff:	xor    bl,BYTE PTR [edx+0x46]
  428302:	xchg   ecx,eax
  428303:	aad    0xc3
  428305:	push   ebx
  428306:	fs popf 
  428308:	and    ah,BYTE PTR [ecx-0x79]
  42830b:	xor    bh,dl
  42830d:	dec    ebx
  42830e:	adc    BYTE PTR [edx+0x2b],bl
  428311:	or     dl,BYTE PTR [edi]
  428313:	ds test cl,0x6
  428317:	out    0xd5,eax
  428319:	or     eax,0xe6e90291
  42831e:	cmp    cl,bl
  428320:	ja     0x4282e4
  428322:	inc    ebx
  428323:	cmp    bh,BYTE PTR [ebp-0x8db7b53]
  428329:	cmp    al,0xb9
  42832b:	pop    ss
  42832c:	iret   
  42832d:	push   esp
  42832e:	adc    ebx,DWORD PTR [edi+0x966f401]
  428334:	xor    bh,BYTE PTR [ecx+0x19]
  428337:	test   al,0xe2
  428339:	in     al,dx
  42833a:	xor    ch,0x74
  42833d:	pop    esi
  42833e:	adc    eax,0x960ccd97
  428343:	(bad)  [ebx]
  428345:	fbstp  TBYTE PTR [eax]
  428347:	jae    0x4283a0
  428349:	xchg   esp,eax
  42834a:	popf   
  42834b:	xor    BYTE PTR [esi-0x2d277d8b],bh
  428351:	scas   eax,DWORD PTR es:[edi]
  428352:	mov    bl,0x3f
  428354:	lock mov edi,0x33f05b98
  42835a:	gs mov eax,0xbadf57c4
  428360:	jmp    FWORD PTR [esi]
  428362:	or     eax,0x40d54e35
  428367:	sbb    dl,BYTE PTR [eax-0x13]
  42836a:	int3   
  42836b:	sbb    edx,DWORD PTR [esi+0x119938f7]
  428371:	sub    ah,BYTE PTR [edi-0x32d03203]
  428377:	shr    DWORD PTR [esi],1
  428379:	stos   DWORD PTR es:[edi],eax
  42837a:	mov    esp,DWORD PTR [eax+eax*4+0x61a90cca]
  428381:	mov    al,ds:0xf30c5df2
  428386:	cwde   
  428387:	test   al,0x46
  428389:	mov    dl,0x32
  42838b:	(bad)  
  42838c:	call   0x198d:0x25aeec1c
  428393:	inc    ecx
  428394:	ret    
  428395:	fadd   DWORD PTR [ebp-0x2201bbf9]
  42839b:	sbb    eax,0x771815a6
  4283a0:	sbb    BYTE PTR [ebx],al
  4283a2:	xor    DWORD PTR [edx+edx*4],esp
  4283a5:	sub    BYTE PTR [ebx],ch
  4283a7:	(bad)  
  4283a8:	xchg   DWORD PTR [edx-0x6d02fc4d],esp
  4283ae:	into   
  4283af:	ror    dh,0x8d
  4283b2:	push   ds
  4283b3:	sbb    eax,0x717ce5d
  4283b9:	mov    al,ds:0xb615bff8
  4283be:	aaa    
  4283bf:	xchg   ecx,ebx
  4283c1:	in     eax,0x34
  4283c3:	xchg   esi,eax
  4283c4:	outs   dx,BYTE PTR ds:[esi]
  4283c5:	retf   
  4283c6:	les    eax,FWORD PTR [eax+0xb21f669]
  4283cc:	xlat   BYTE PTR ds:[ebx]
  4283cd:	mov    ds:0xba48ec48,eax
  4283d2:	cld    
  4283d3:	xchg   ecx,eax
  4283d4:	mov    dh,0xf
  4283d6:	jo     0x428447
  4283d8:	and    al,0xf2
  4283da:	pop    ecx
  4283db:	or     al,0x6
  4283dd:	inc    eax
  4283de:	inc    ebx
  4283df:	dec    DWORD PTR [edi-0x36766ab7]
  4283e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283e6:	or     eax,0xf49d158c
  4283eb:	jo     0x4283e9
  4283ed:	pop    es
  4283ee:	ds push es
  4283f0:	or     ecx,DWORD PTR [edi-0x3b8be9e2]
  4283f6:	push   ss
  4283f7:	stc    
  4283f8:	and    al,BYTE PTR [ecx-0x4a984cf]
  4283fe:	pusha  
  4283ff:	es stos BYTE PTR es:[edi],al
  428401:	push   edx
  428402:	call   0xbe41:0xfd361559
  428409:	pushf  
  42840a:	push   edi
  42840b:	jle    0x42843b
  42840d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42840e:	sbb    al,0x3c
  428410:	jmp    0x4283d1
  428412:	aas    
  428413:	pop    ebx
  428414:	das    
  428415:	fisttp WORD PTR [ebp+0x1]
  428418:	cmc    
  428419:	repz push ebp
  42841b:	and    al,0xeb
  42841d:	xor    BYTE PTR [edi],bh
  42841f:	stc    
  428420:	add    bh,BYTE PTR [edi]
  428422:	jmp    0xe3b7f564
  428427:	call   0xfc3c49bb
  42842c:	cmp    BYTE PTR [ecx+0x40],dl
  42842f:	jecxz  0x42845e
  428431:	fs sti 
  428433:	xlat   BYTE PTR ds:[ebx]
  428434:	push   es
  428435:	xchg   DWORD PTR [esi],edi
  428437:	pop    esi
  428438:	jbe    0x428445
  42843a:	and    BYTE PTR [ebx+0x57],bl
  42843d:	xchg   ebp,eax
  42843e:	xor    cl,dl
  428440:	scas   al,BYTE PTR es:[edi]
  428441:	jp     0x4283d2
  428443:	ds push ss
  428445:	sbb    al,0x78
  428447:	push   ebp
  428448:	scas   al,BYTE PTR es:[edi]
  428449:	mov    ebx,0xe8d781d6
  42844e:	retf   
  42844f:	mov    edx,0xaba94fca
  428454:	aas    
  428455:	(bad)  
  428456:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  428458:	push   eax
  428459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42845a:	shl    bh,cl
  42845c:	div    DWORD PTR [eax+edi*8]
  42845f:	nop
  428460:	pop    edi
  428461:	aas    
  428462:	(bad)  
  428463:	mov    ecx,0x1f9c514
  428468:	add    al,dh
  42846a:	add    al,0x0
  42846c:	add    BYTE PTR [esi-0xa496eae],dh
  428472:	call   0xe5d3:0xf9650842
  428479:	out    dx,eax
  42847a:	and    BYTE PTR [edx-0x9],ch
  42847d:	pop    edi
  42847e:	ficom  WORD PTR [ebx+ebx*4+0x33]
  428482:	aam    0x9e
  428484:	add    ebp,DWORD PTR [edx-0xe]
  428487:	and    bh,BYTE PTR [eax+esi*4+0x3c]
  42848b:	adc    dl,cl
  42848d:	sub    eax,0xd42c9a51
  428492:	jl     0x4284d9
  428494:	inc    edi
  428495:	fld    QWORD PTR [edx+0x10]
  428498:	bound  edx,QWORD PTR [ecx]
  42849a:	sbb    eax,0x8f3ee894
  42849f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284a1:	lahf   
  4284a2:	popa   
  4284a3:	xor    eax,0xb85174fb
  4284a8:	ret    0xb0c8
  4284ab:	enter  0xc3c8,0x3e
  4284af:	add    DWORD PTR [edx],edi
  4284b1:	add    al,0x7c
  4284b3:	sub    al,0x49
  4284b5:	mov    esi,0x560e5f80
  4284ba:	jge    0x42846c
  4284bc:	mov    ecx,DWORD PTR [ecx-0xe]
  4284bf:	mov    ds:0x97ffcf75,eax
  4284c4:	mov    ebp,0xcd996f80
  4284c9:	inc    ebx
  4284ca:	inc    ebp
  4284cb:	lock mov WORD PTR [esi],ds
  4284ce:	pop    ebp
  4284cf:	mov    cl,0x6b
  4284d1:	xor    bx,WORD PTR [edi]
  4284d4:	repz and eax,0xd818dd87
  4284da:	retf   
  4284db:	out    dx,al
  4284dc:	cmp    eax,0x59d4f598
  4284e1:	jecxz  0x4284f1
  4284e3:	bound  esi,QWORD PTR [ebx]
  4284e5:	push   ecx
  4284e6:	lock dec eax
  4284e8:	pushf  
  4284e9:	mov    ch,0xa1
  4284eb:	dec    esi
  4284ec:	fmul   DWORD PTR [edx+0x2c6ee14c]
  4284f2:	idiv   BYTE PTR [eax+0x5e369d6e]
  4284f8:	cwde   
  4284f9:	in     eax,dx
  4284fa:	xlat   BYTE PTR ds:[ebx]
  4284fb:	aas    
  4284fc:	jnp    0x428517
  4284fe:	mov    eax,0x1b1baa09
  428503:	imul   bh
  428505:	jge    0x42850d
  428507:	jge    0x42849d
  428509:	add    al,dl
  42850b:	sbb    al,0xbd
  42850d:	lahf   
  42850e:	pushf  
  42850f:	scas   eax,DWORD PTR es:[edi]
  428510:	out    dx,al
  428511:	inc    ebp
  428512:	xchg   ebx,eax
  428513:	inc    ecx
  428514:	jp     0x428557
  428516:	inc    esp
  428517:	and    eax,0x2fa5f73
  42851c:	xor    bl,BYTE PTR [edx-0x27]
  42851f:	adc    ebx,eax
  428521:	and    eax,0xe7c88962
  428526:	push   cs
  428527:	add    eax,0x52da30e8
  42852c:	retf   0xd437
  42852f:	cmc    
  428530:	or     edi,ebx
  428532:	add    bl,bh
  428534:	pop    es
  428535:	enter  0xeb0b,0xd2
  428539:	pop    es
  42853a:	jg     0x428531
  42853c:	mov    WORD PTR [ebp+0x54cbf2fd],ds
  428542:	mov    ecx,0x23b870bb
  428547:	xchg   ecx,eax
  428548:	das    
  428549:	pusha  
  42854a:	stc    
  42854b:	and    bh,bh
  42854d:	out    0x90,al
  42854f:	jb     0x42850e
  428551:	or     BYTE PTR [edi],0xec
  428554:	inc    bp
  428556:	icebp  
  428557:	aaa    
  428558:	shl    esi,0xfb
  42855b:	daa    
  42855c:	jns    0x4284f7
  42855e:	test   BYTE PTR [edi+0x6f],ch
  428561:	dec    ebp
  428562:	pop    ebx
  428563:	sbb    al,0xc0
  428565:	sbb    eax,0x11091ec2
  42856a:	fsubr  QWORD PTR [esp+ecx*8-0x79295c1d]
  428571:	aaa    
  428572:	es call 0x3958:0x4b875404
  42857a:	lea    ecx,[esp+ebx*1]
  42857d:	pop    ebp
  42857e:	pusha  
  42857f:	stos   DWORD PTR es:[edi],eax
  428580:	add    DWORD PTR cs:[eax],edi
  428583:	lahf   
  428584:	xchg   edx,eax
  428585:	mov    ah,ch
  428587:	cmp    eax,0x6163e1ed
  42858c:	xlat   BYTE PTR ds:[ebx]
  42858d:	mov    esp,0x52ced2b4
  428592:	fidiv  DWORD PTR [ebx+0x2c]
  428595:	retf   0x3a92
  428598:	sbb    BYTE PTR [esi],ch
  42859a:	inc    esp
  42859b:	fisubr WORD PTR [eax-0x57]
  42859e:	jae    0x42859f
  4285a0:	out    0x2b,eax
  4285a2:	xchg   eax,edx
  4285a4:	repz pop esi
  4285a6:	xchg   edx,eax
  4285a7:	mov    edi,0x259c43e
  4285ac:	add    esi,DWORD PTR [esp+esi*1-0x2e]
  4285b0:	outs   dx,BYTE PTR ds:[esi]
  4285b1:	xor    eax,DWORD PTR [edx]
  4285b3:	xor    esp,esi
  4285b5:	jle    0x428603
  4285b7:	ja     0x428546
  4285b9:	pop    esp
  4285ba:	aas    
  4285bb:	inc    ecx
  4285bc:	mov    esi,DWORD PTR [edi]
  4285be:	or     esi,0xc9331b76
  4285c4:	(bad)
  4285ca:	mov    cl,0xc4
  4285cc:	mov    esp,0x28e1da71
  4285d1:	cmp    BYTE PTR [esi],al
  4285d3:	adc    eax,0x328dbdd9
  4285d8:	pop    esi
  4285d9:	jp     0x428569
  4285db:	mov    ecx,0xa7e081ca
  4285e0:	mov    al,0xf9
  4285e2:	shr    esi,1
  4285e4:	xchg   ebp,eax
  4285e5:	push   ebx
  4285e6:	sar    DWORD PTR [edi+0x274475cb],1
  4285ec:	sbb    esi,eax
  4285ee:	cmp    ah,BYTE PTR [eax+edx*4+0x3e3da7a7]
  4285f5:	and    ecx,edx
  4285f7:	sub    DWORD PTR [edx-0x45c783ab],esi
  4285fd:	jmp    DWORD PTR [edi]
  4285ff:	sub    DWORD PTR [ebx-0x32ea5cca],ebx
  428605:	xor    al,0x5a
  428607:	int3   
  428608:	adc    al,0xb9
  42860a:	das    
  42860b:	cmp    al,BYTE PTR [esi-0x13]
  42860e:	dec    edi
  42860f:	int3   
  428610:	cld    
  428611:	fwait
  428612:	and    al,0xc0
  428614:	mov    cl,ch
  428616:	aas    
  428617:	mov    WORD PTR [edx],fs
  428619:	xor    BYTE PTR [ebx+0x1471a438],0x4d
  428620:	sbb    BYTE PTR [ecx-0x74],bh
  428623:	xlat   BYTE PTR ds:[ebx]
  428624:	inc    esp
  428625:	sub    dh,dh
  428627:	dec    esp
  428628:	cmp    al,0x17
  42862a:	mov    DWORD PTR [esi+0x20],ecx
  42862d:	sub    ebx,eax
  42862f:	daa    
  428630:	daa    
  428631:	lds    ecx,FWORD PTR [esi-0x7c]
  428634:	cmp    DWORD PTR [eax-0x488ad008],ebx
  42863a:	gs xchg esi,eax
  42863c:	push   edx
  42863d:	mov    ebp,0x552733ae
  428642:	enter  0xafba,0x51
  428646:	fs xchg esi,eax
  428648:	ror    DWORD PTR [ebp+0xd8ef4bd],0x38
  42864f:	aaa    
  428650:	dec    ebp
  428651:	mov    ss,WORD PTR [esi-0x7a]
  428654:	popf   
  428655:	adc    BYTE PTR [edx-0x2f],dh
  428658:	lds    ebx,FWORD PTR [ecx+edx*1]
  42865b:	pop    edx
  42865c:	inc    ecx
  42865d:	in     al,0xde
  42865f:	dec    esp
  428660:	rcl    BYTE PTR ds:0xf9cce7ed,0xc5
  428667:	jno    0x4286b2
  428669:	imul   BYTE PTR [ebx]
  42866b:	hlt    
  42866c:	sti    
  42866d:	xchg   ebp,eax
  42866e:	add    DWORD PTR [edi+0x4467e02b],ebx
  428674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428675:	lock cmp dh,BYTE PTR ds:0x9bc84f5
  42867c:	jae    0x42864b
  42867e:	push   esp
  42867f:	push   ss
  428680:	cdq    
  428681:	dec    edi
  428682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428683:	lods   eax,DWORD PTR ds:[esi]
  428684:	sub    BYTE PTR [eax-0x61b3c078],bl
  42868a:	mov    cl,0x8
  42868c:	das    
  42868d:	jmp    0x69954dcc
  428692:	mov    ebx,0xeeadb91c
  428697:	int    0x40
  428699:	ins    BYTE PTR es:[edi],dx
  42869a:	(bad)  [ebx+ebx*2+0x29]
  42869e:	enter  0x14ef,0x31
  4286a2:	and    BYTE PTR [ecx],al
  4286a4:	test   al,0xba
  4286a6:	mov    eax,ds:0x4e9e8406
  4286ab:	pop    ds
  4286ac:	js     0x428675
  4286ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286af:	push   cs
  4286b0:	xchg   esp,eax
  4286b1:	lods   eax,DWORD PTR ds:[esi]
  4286b2:	call   0xffbfdb89
  4286b7:	jnp    0x42869d
  4286b9:	ficomp DWORD PTR [edi]
  4286bb:	jne    0x428647
  4286bd:	fmul   QWORD PTR [eax]
  4286bf:	xchg   BYTE PTR [eax],ch
  4286c1:	sbb    DWORD PTR [ecx],ecx
  4286c3:	sbb    eax,0xbb480894
  4286c8:	mov    edi,0xcd27e703
  4286cd:	call   0x9f0a44bf
  4286d2:	mov    eax,ds:0x8a304ba6
  4286d7:	fdiv   DWORD PTR [edi+0x3bad343d]
  4286dd:	in     al,dx
  4286de:	fistp  QWORD PTR [edi]
  4286e0:	hlt    
  4286e1:	int3   
  4286e2:	ds aaa 
  4286e4:	add    DWORD PTR [ecx+ecx*8-0x31],ebx
  4286e8:	imul   edx,DWORD PTR [ecx],0xb210b911
  4286ee:	jbe    0x428744
  4286f0:	imul   ebx,DWORD PTR [edi+0x8],0xd43ce018
  4286f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286f8:	in     eax,0x26
  4286fa:	int    0xe6
  4286fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286fd:	xchg   ebx,eax
  4286fe:	outs   dx,BYTE PTR ds:[esi]
  4286ff:	jbe    0x42871a
  428701:	scas   al,BYTE PTR es:[edi]
  428702:	mov    DWORD PTR [eax-0x1dc895cd],ebx
  428708:	pop    ecx
  428709:	dec    edi
  42870a:	cld    
  42870b:	cmp    eax,0xb8849253
  428710:	ror    DWORD PTR [esp+edx*4-0x4a],0xab
  428715:	sub    ah,ch
  428717:	stc    
  428718:	xchg   esp,eax
  428719:	sbb    DWORD PTR [edx+esi*2+0xc],ecx
  42871d:	xchg   ah,ch
  42871f:	adc    BYTE PTR [edi+ebx*1+0x2249e46c],dl
  428726:	pop    edx
  428727:	ja     0x4286cc
  428729:	outs   dx,BYTE PTR ds:[esi]
  42872a:	sbb    edx,DWORD PTR [ebx+0x2d42814f]
  428730:	push   eax
  428731:	pushf  
  428732:	ins    DWORD PTR es:[edi],dx
  428733:	hlt    
  428734:	out    0x63,al
  428736:	int    0x10
  428738:	pop    ecx
  428739:	inc    ecx
  42873a:	jp     0x428768
  42873c:	push   edx
  42873d:	jmp    0x42875d
  42873f:	stc    
  428740:	mul    bl
  428742:	scas   al,BYTE PTR es:[edi]
  428743:	sub    esi,0xbcd908ed
  428749:	inc    ebx
  42874a:	jecxz  0x42879e
  42874c:	mov    cl,0x96
  42874e:	leave  
  42874f:	and    DWORD PTR [ebp+0x41],esp
  428752:	repz ret 0x41d
  428756:	leave  
  428757:	icebp  
  428758:	sahf   
  428759:	dec    esp
  42875a:	out    dx,eax
  42875b:	sbb    BYTE PTR [ecx],0xad
  42875e:	bound  esp,QWORD PTR [eax+0x53]
  428761:	or     eax,edi
  428763:	jmp    0x4287df
  428765:	mov    ebp,0x826fa1b5
  42876a:	nop
  42876b:	xor    eax,0x13f01c64
  428770:	inc    eax
  428771:	jmp    0x428765
  428773:	retf   0x8e22
  428776:	ret    0xfc67
  428779:	clc    
  42877a:	jbe    0x4287b7
  42877c:	dec    ecx
  42877d:	adc    DWORD PTR [ebx+esi*1+0xcf50b35],esi
  428784:	stos   BYTE PTR es:[edi],al
  428785:	mov    BYTE PTR [edi-0x6154730f],al
  42878b:	inc    edx
  42878c:	xchg   esi,eax
  42878d:	adc    ah,ah
  42878f:	xchg   BYTE PTR gs:[eax-0x21eab19],dl
  428796:	repz dec eax
  428798:	pop    edx
  428799:	ficom  DWORD PTR [ecx]
  42879b:	imul   esp,DWORD PTR [edx],0x3760bde0
  4287a1:	and    BYTE PTR [edx],0xa2
  4287a4:	lock loop 0x42881b
  4287a7:	jmp    0xb1060978
  4287ac:	mov    edx,0x6ea3783
  4287b1:	dec    esp
  4287b2:	arpl   WORD PTR [ecx],cx
  4287b4:	or     BYTE PTR [edx+ebx*1+0x533fa44c],bh
  4287bb:	int    0x61
  4287bd:	mov    ah,0x4c
  4287bf:	ins    BYTE PTR es:[edi],dx
  4287c0:	pop    esp
  4287c1:	xlat   BYTE PTR ds:[ebx]
  4287c2:	inc    ebp
  4287c3:	or     dl,BYTE PTR [eax-0x7]
  4287c6:	(bad)  
  4287c7:	ja     0x8949dae0
  4287cd:	es mov ebx,0xb7c4dfe4
  4287d3:	add    al,BYTE PTR [eax+0x38]
  4287d6:	inc    edx
  4287d7:	es xchg ecx,eax
  4287d9:	push   DWORD PTR [esi+0x6f45ec30]
  4287df:	push   edx
  4287e0:	adc    al,0xb0
  4287e2:	out    dx,al
  4287e3:	pop    eax
  4287e4:	loope  0x42883c
  4287e6:	xor    ecx,DWORD PTR [edi+0x2a60b54]
  4287ec:	or     ch,BYTE PTR [eax-0x47]
  4287ef:	dec    ebp
  4287f0:	jnp    0x42880b
  4287f2:	xor    ebp,0xffffffe6
  4287f5:	jg     0x4287b4
  4287f7:	add    ch,dh
  4287f9:	and    al,0x33
  4287fb:	leave  
  4287fc:	or     eax,0x6dd41e97
  428801:	pop    ebx
  428802:	xchg   ebp,eax
  428803:	ins    BYTE PTR es:[edi],dx
  428804:	mov    DWORD PTR [edx+0x15],edx
  428807:	mov    edx,0xf25a9e84
  42880c:	jns    0x428871
  42880e:	xchg   ebx,eax
  42880f:	xlat   BYTE PTR ds:[ebx]
  428810:	fmul   st,st(1)
  428812:	adc    DWORD PTR [ebx],edi
  428814:	jmp    0x428809
  428816:	push   cs
  428817:	mov    ds:0x62d7bf39,eax
  42881c:	jle    0x428843
  42881e:	sub    BYTE PTR [edi],0x1
  428821:	and    DWORD PTR [ecx+0x45657212],eax
  428827:	loop   0x4287f2
  428829:	retf   
  42882a:	add    DWORD PTR [ebx+0x52],ebx
  42882d:	jnp    0x428855
  42882f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428830:	sbb    al,0x28
  428832:	dec    BYTE PTR [ebp+0x601aaf50]
  428838:	push   esi
  428839:	mov    BYTE PTR [edi-0x7f],ch
  42883c:	mov    eax,ds:0xf3ed3a
  428841:	scas   al,BYTE PTR es:[edi]
  428842:	and    edx,DWORD PTR ds:0x3dcbbebb
  428848:	pop    ss
  428849:	jae    0x4288bb
  42884b:	out    dx,al
  42884c:	adc    eax,0x802481c3
  428851:	retf   
  428852:	dec    edx
  428853:	nop
  428854:	jns    0x428890
  428856:	adc    al,0x92
  428858:	test   DWORD PTR [ecx+0x46],ebp
  42885b:	adc    ah,BYTE PTR [edi+0x54e89740]
  428861:	xor    DWORD PTR [eax+0x5b2401cd],0x554ae5c6
  42886b:	cmp    DWORD PTR [edi-0x752f84a2],edx
  428871:	adc    eax,0xf1f826ba
  428876:	(bad)
  42887a:	sub    dl,BYTE PTR [esi+0x26]
  42887d:	xlat   BYTE PTR ds:[ebx]
  42887e:	popf   
  42887f:	(bad)  
  428880:	sbb    esi,DWORD PTR [ebx+edx*8]
  428883:	into   
  428884:	les    edi,FWORD PTR [ebx+0x7d6f2a2e]
  42888a:	das    
  42888b:	mov    ebx,0xe6167b4c
  428890:	dec    ebx
  428891:	icebp  
  428892:	mov    ebx,0x1f879818
  428897:	pop    eax
  428898:	push   esp
  428899:	jmp    0x4288c8
  42889b:	xchg   esp,eax
  42889c:	sub    al,0xb1
  42889e:	lds    edi,FWORD PTR [esi+eax*4-0xfde7c24]
  4288a5:	repz aam 0x2f
  4288a8:	aaa    
  4288a9:	loop   0x42889d
  4288ab:	inc    esp
  4288ac:	cwde   
  4288ad:	dec    ebp
  4288ae:	int    0xe0
  4288b0:	sub    bh,BYTE PTR [edx]
  4288b2:	adc    eax,0x664f7be1
  4288b7:	mov    WORD PTR [ebp+0x59],ss
  4288ba:	retf   
  4288bb:	xor    eax,0xf34ee1bc
  4288c0:	mov    DWORD PTR [edx],edi
  4288c2:	sub    BYTE PTR [ebp-0x7d],dl
  4288c5:	xlat   BYTE PTR ds:[ebx]
  4288c6:	aad    0x9a
  4288c8:	dec    esi
  4288c9:	add    BYTE PTR [eax],ah
  4288cb:	mov    bh,0xc5
  4288cd:	dec    eax
  4288ce:	jmp    0x3396:0x9fc65bf4
  4288d5:	push   esp
  4288d6:	lds    ebx,FWORD PTR ds:0x4db38325
  4288dc:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288df:	dec    edi
  4288e0:	cmp    edi,DWORD PTR [eax-0xa]
  4288e3:	dec    ecx
  4288e4:	aad    0x7
  4288e6:	and    ah,BYTE PTR [eax]
  4288e8:	ret    0xa8bc
  4288eb:	not    BYTE PTR [edi-0x44]
  4288ee:	mov    eax,0x425d18a
  4288f3:	ror    BYTE PTR [esp-0x25],0x57
  4288f8:	div    ah
  4288fa:	and    BYTE PTR [edx-0x1],dl
  4288fd:	jno    0x428895
  4288ff:	mov    edx,0x5e736ef0
  428904:	jecxz  0x4288f1
  428906:	sbb    eax,0xde5cd4a3
  42890b:	je     0x42892a
  42890d:	pop    ecx
  42890e:	push   0xd
  428910:	ret    
  428911:	fild   QWORD PTR [edi+0x78]
  428914:	and    DWORD PTR [esi],eax
  428916:	jmp    0x4288d4
  428918:	icebp  
  428919:	in     al,dx
  42891a:	call   0x4c5ce11e
  42891f:	pop    esp
  428920:	jo     0x4288d0
  428922:	or     al,0x69
  428924:	push   eax
  428925:	popa   
  428926:	jno    0x428964
  428928:	fucomip st,st(7)
  42892a:	cmp    DWORD PTR [edi*1-0x135aef49],edx
  428931:	js     0x428947
  428933:	xchg   BYTE PTR [edi+0x7a],cl
  428936:	jecxz  0x428967
  428938:	pop    ebp
  428939:	jnp    0x428978
  42893b:	mov    eax,0x1f41bcc
  428940:	cmc    
  428941:	stos   DWORD PTR es:[edi],eax
  428942:	xor    BYTE PTR [eax],cl
  428944:	cmp    eax,0xdd3ef1be
  428949:	rol    BYTE PTR [edi],0x83
  42894c:	xchg   ebp,eax
  42894d:	cmp    DWORD PTR [ebp+ecx*4-0x6a],0xe02fd4d1
  428955:	jle    0x4289b1
  428957:	(bad)  
  428958:	(bad)  
  428959:	cld    
  42895a:	mov    esi,0x556c
  42895f:	add    BYTE PTR [eax],al
  428961:	add    BYTE PTR [eax],al
	...
