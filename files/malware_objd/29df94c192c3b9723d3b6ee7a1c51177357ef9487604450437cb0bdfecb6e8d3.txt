
29df94c192c3b9723d3b6ee7a1c51177357ef9487604450437cb0bdfecb6e8d3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	imul   eax,DWORD PTR [esi+0x6e217ac9],0x384dc8f4
  401178:	sbb    al,0x3c
  40117a:	and    ah,bh
  40117c:	and    ah,BYTE PTR [ebx+edx*2]
  40117f:	outs   dx,DWORD PTR ds:[esi]
  401180:	xor    al,BYTE PTR [esi+edx*4+0x8cff8dd]
  401187:	and    bl,bh
  401189:	jb     0x401123
  40118b:	dec    ebp
  40118c:	(bad)  
  40118d:	xor    eax,0x8d45371d
  401192:	push   0x71
  401194:	and    dh,BYTE PTR [edx-0x60]
  401197:	call   0xafea24a0
  40119c:	cli    
  40119d:	arpl   WORD PTR [edi-0x9],si
  4011a0:	fwait
  4011a1:	or     ebp,ecx
  4011a3:	xchg   edi,eax
  4011a4:	gs sub cl,al
  4011a7:	scas   al,BYTE PTR es:[edi]
  4011a8:	bound  eax,QWORD PTR [ebp+0x3d15eddc]
  4011ae:	ins    BYTE PTR es:[edi],dx
  4011af:	je     0x40117a
  4011b1:	icebp  
  4011b2:	jge    0x401207
  4011b4:	repnz xor DWORD PTR [eax+eax*1+0x4750b3f8],ebx
  4011bc:	xor    DWORD PTR [eax+0x361e6c11],ebp
  4011c2:	es mov ah,0x7
  4011c5:	iret   
  4011c6:	mov    ?,WORD PTR [esi]
  4011c8:	adc    bh,BYTE PTR [edx]
  4011ca:	push   esp
  4011cb:	mov    ebx,0xa58bc7dd
  4011d0:	sub    BYTE PTR [edx],cl
  4011d2:	daa    
  4011d3:	lahf   
  4011d4:	loopne 0x4011f7
  4011d6:	sub    DWORD PTR [eax+0x7],ebx
  4011d9:	imul   esp,DWORD PTR [ebp-0x6],0xc99ff26
  4011e0:	call   0xeb09900e
  4011e5:	inc    esp
  4011e6:	retf   
  4011e7:	cwde   
  4011e8:	test   DWORD PTR [ebp-0x7d1aa371],edx
  4011ee:	frstor [ecx+0x1521268d]
  4011f4:	stc    
  4011f5:	dec    edx
  4011f6:	pop    ebx
  4011f7:	es leave 
  4011f9:	pop    ds
  4011fa:	nop
  4011fb:	imul   edx,DWORD PTR [ecx+0x513c069],0x2b10bce1
  401205:	push   edi
  401206:	sbb    al,0xd9
  401208:	cmp    DWORD PTR [edi],esi
  40120a:	out    dx,al
  40120b:	jb     0x4011b7
  40120d:	xchg   esi,eax
  40120e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40120f:	mov    esi,DWORD PTR ss:[ebp+0xe7b4391]
  401216:	in     al,dx
  401217:	scas   eax,DWORD PTR es:[edi]
  401218:	inc    eax
  401219:	xchg   ecx,eax
  40121a:	outs   dx,BYTE PTR ds:[esi]
  40121b:	fistp  DWORD PTR [ebp+0x42]
  40121e:	js     0x40124c
  401220:	jle    0x4011d9
  401222:	mov    fs,ebx
  401224:	mov    DWORD PTR [esi+0x57],ecx
  401227:	mov    es,WORD PTR [eax+eiz*2+0x4d]
  40122b:	cmp    cl,BYTE PTR [ebp+0x15cb331a]
  401231:	out    dx,eax
  401232:	inc    ecx
  401233:	enter  0x63b1,0x4c
  401237:	xchg   esi,eax
  401238:	mov    ds:0x558e83e9,al
  40123d:	xor    eax,0xf9ae19b6
  401242:	mov    ecx,0xdfc71a46
  401247:	jl     0x4012a1
  401249:	out    0x4,al
  40124b:	dec    ebp
  40124c:	inc    ebp
  40124d:	push   edi
  40124e:	into   
  40124f:	arpl   WORD PTR [ebx+0x7a],cx
  401252:	dec    esi
  401253:	rep lods al,BYTE PTR ds:[esi]
  401255:	pop    esi
  401256:	pop    ecx
  401257:	jl     0x401276
  401259:	inc    edi
  40125a:	push   ecx
  40125b:	rol    DWORD PTR [esi+0x6c],0xe4
  40125f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401260:	jno    0x4012b1
  401262:	fs mov dh,0x3b
  401265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401266:	das    
  401267:	popa   
  401268:	or     esp,ebx
  40126a:	std    
  40126b:	test   DWORD PTR [esi+edi*1-0x2a0fd5c],esi
  401272:	add    bl,BYTE PTR [ebx+ebx*1]
  401275:	(bad)  
  401276:	xlat   BYTE PTR ds:[ebx]
  401277:	loop   0x40124d
  401279:	fist   DWORD PTR [ebx+0x121f5f3b]
  40127f:	ret    0xb58e
  401282:	fs add dl,ch
  401285:	in     al,dx
  401286:	sbb    ebx,ebp
  401288:	mov    al,ds:0x425e849f
  40128d:	fwait
  40128e:	sahf   
  40128f:	sub    DWORD PTR [ebx],0x55ee576f
  401295:	(bad)
  401298:	cmp    BYTE PTR [esi+0x12965cbe],bh
  40129e:	popf   
  40129f:	clc    
  4012a0:	fsubrp st(5),st
  4012a2:	gs mov cl,0x1d
  4012a5:	test   al,ah
  4012a7:	or     eax,0xa3fcfd3a
  4012ac:	(bad)  
  4012ad:	xchg   ebp,eax
  4012ae:	nop
  4012af:	adc    ch,0x7d
  4012b2:	test   BYTE PTR [ebp+0x50426b69],ch
  4012b8:	jns    0x4012ec
  4012ba:	mov    ds,WORD PTR [esi]
  4012bc:	mov    edi,0xe3487b69
  4012c1:	mov    esi,0xa753bc93
  4012c6:	sbb    al,dl
  4012c8:	xchg   edi,eax
  4012c9:	ins    DWORD PTR es:[edi],dx
  4012ca:	or     DWORD PTR [eax],edx
  4012cc:	push   ebx
  4012cd:	push   0x57
  4012cf:	(bad)  
  4012d0:	retf   
  4012d1:	dec    eax
  4012d2:	inc    esi
  4012d3:	sahf   
  4012d4:	stos   BYTE PTR es:[edi],al
  4012d5:	pop    es
  4012d6:	pop    esp
  4012d7:	jmp    0xb2ec:0xe981a006
  4012de:	push   edx
  4012df:	dec    eax
  4012e0:	clc    
  4012e1:	and    al,0x6b
  4012e3:	xchg   esi,eax
  4012e4:	or     BYTE PTR [edi],0x57
  4012e7:	xor    BYTE PTR [esi-0xc325179],al
  4012ed:	popa   
  4012ee:	add    cl,bl
  4012f0:	mov    al,ds:0xff58288a
  4012f5:	repz mov dl,0xcc
  4012f8:	add    ch,bl
  4012fa:	int3   
  4012fb:	xor    cl,BYTE PTR [eax+0x6efc068]
  401301:	into   
  401302:	jp     0x401353
  401304:	jo     0x4012de
  401306:	in     al,0xbc
  401308:	cmp    BYTE PTR [esi],cl
  40130a:	iret   
  40130b:	jno    0x40137a
  40130d:	int    0x90
  40130f:	jg     0x401306
  401311:	bound  esi,QWORD PTR [esp+eiz*2-0x2047cbca]
  401318:	add    eax,0x9ebe1d69
  40131d:	or     ecx,edx
  40131f:	(bad)  
  401320:	push   ebp
  401321:	pusha  
  401322:	pop    ecx
  401323:	outs   dx,BYTE PTR ds:[esi]
  401324:	push   ds
  401325:	xor    BYTE PTR [esi+0x3],ch
  401328:	mov    ah,0x9f
  40132a:	sub    BYTE PTR ds:0x37dde731,cl
  401330:	fcomp  DWORD PTR [ebp+0x79]
  401333:	fcmovnu st,st(6)
  401335:	aam    0xce
  401337:	xor    ah,ah
  401339:	push   edx
  40133a:	(bad)  
  40133b:	out    0x54,eax
  40133d:	pop    edx
  40133e:	sbb    al,0x4c
  401340:	data16 mov cl,0x98
  401343:	test   al,0x2e
  401345:	ss aam 0x47
  401348:	mov    al,0x32
  40134a:	stos   DWORD PTR es:[edi],eax
  40134b:	or     eax,0xaf49e848
  401350:	mov    ax,ds:0x657fdb1a
  401356:	les    edx,FWORD PTR [edx+0x59946517]
  40135c:	xchg   ebx,eax
  40135d:	call   0xe0d78587
  401362:	repz addr16 inc esi
  401365:	ret    
  401366:	jo     0x401368
  401368:	pop    es
  401369:	push   ebp
  40136a:	outs   dx,BYTE PTR ds:[esi]
  40136b:	push   ss
  40136c:	je     0x4013c2
  40136e:	repnz lods al,BYTE PTR ds:[si]
  401371:	inc    ebx
  401372:	dec    ecx
  401373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401374:	cwde   
  401375:	push   edx
  401376:	jne    0x4013b8
  401378:	push   eax
  401379:	iret   
  40137a:	cmp    al,0x44
  40137c:	fisub  DWORD PTR [esi]
  40137e:	inc    esi
  40137f:	(bad)
  401382:	ins    DWORD PTR es:[edi],dx
  401383:	mov    esi,DWORD PTR [edx]
  401385:	cmp    DWORD PTR [edx],esp
  401387:	test   DWORD PTR [ecx],ecx
  401389:	aad    0x67
  40138b:	(bad)  
  40138c:	mov    esp,0x516e6b11
  401391:	pop    es
  401392:	sbb    BYTE PTR [esi+ecx*1+0x4b],ch
  401396:	fucomp st(2)
  401398:	pop    ss
  401399:	cs sub ebp,eax
  40139c:	fwait
  40139d:	nop
  40139e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40139f:	ins    BYTE PTR es:[edi],dx
  4013a0:	jns    0x401358
  4013a2:	jnp    0x401423
  4013a4:	fstp   QWORD PTR [esi+0x4884386b]
  4013aa:	sub    DWORD PTR [edx],ecx
  4013ac:	push   0xc0ee898b
  4013b1:	mov    DWORD PTR [esi-0x2a3b190c],edi
  4013b7:	inc    ebx
  4013b8:	lds    edx,FWORD PTR [esi]
  4013ba:	adc    eax,0x45ff6ca3
  4013bf:	imul   edi,DWORD PTR [edi],0xa629608b
  4013c5:	sub    al,BYTE PTR ds:0x3786cec9
  4013cb:	jns    0x401424
  4013cd:	out    0xa6,eax
  4013cf:	test   al,0xcb
  4013d1:	(bad)  
  4013d2:	dec    edi
  4013d3:	mov    DWORD PTR [eax+0x15178cdd],ebx
  4013d9:	push   ebp
  4013da:	es push edx
  4013dc:	push   edi
  4013dd:	inc    edi
  4013de:	sbb    eax,0xb7fe3ff4
  4013e3:	mov    esi,DWORD PTR [esi+0x4d3f797c]
  4013e9:	add    DWORD PTR [edi],ecx
  4013eb:	call   0x5921:0x7dea31b4
  4013f2:	(bad)  
  4013f3:	std    
  4013f4:	cmp    ebp,DWORD PTR [esi-0x1454e9df]
  4013fa:	fld    TBYTE PTR [esi+edx*8]
  4013fd:	into   
  4013fe:	fwait
  4013ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401400:	push   ds
  401401:	(bad)  
  401403:	dec    edi
  401404:	cmp    ebx,DWORD PTR [esi-0x6d]
  401407:	int3   
  401408:	cwde   
  401409:	mov    bh,0x1f
  40140b:	pop    eax
  40140c:	sbb    DWORD PTR [esp+ebx*1+0x6d],edx
  401410:	(bad)  
  401412:	jns    0x4013be
  401414:	xor    esi,DWORD PTR [eax+0x23]
  401417:	jae    0x4013ab
  401419:	xor    BYTE PTR [ecx+0x2e11ecb1],al
  40141f:	ficomp DWORD PTR [edi]
  401421:	adc    bl,BYTE PTR [eax]
  401423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401424:	push   0xc93e48aa
  401429:	fisub  DWORD PTR [edx]
  40142b:	mov    bl,0xfe
  40142d:	jmp    0xd1a8:0x19460dc7
  401434:	lock sub DWORD PTR [esi],edx
  401437:	xor    al,BYTE PTR [ebx-0x36]
  40143a:	mov    bl,0x2d
  40143c:	pop    ebp
  40143d:	mov    esi,DWORD PTR [eax]
  40143f:	mul    esi
  401441:	mov    al,ds:0x43b795bd
  401446:	mov    esi,0x4b0c1dfc
  40144b:	or     DWORD PTR ds:[edx-0x3d],esp
  40144f:	ret    0x86b
  401452:	aad    0x63
  401454:	adc    BYTE PTR [ebp+0xfb62b87],ch
  40145a:	jae    0x401412
  40145c:	adc    eax,0xf942a784
  401461:	ins    BYTE PTR es:[edi],dx
  401462:	pop    es
  401463:	mov    eax,0xf0b6c952
  401468:	jge    0x401493
  40146a:	aad    0x29
  40146c:	xlat   BYTE PTR ds:[ebx]
  40146d:	sub    DWORD PTR [edx+0x130b47c1],0xffffffd4
  401474:	sub    eax,0xdab62ea1
  401479:	adc    al,0x28
  40147b:	pop    esi
  40147c:	mov    edi,DWORD PTR [ecx]
  40147e:	pop    esp
  40147f:	adc    ah,bh
  401481:	into   
  401482:	sbb    BYTE PTR [ebx-0x5ef7df6d],bl
  401488:	leave  
  401489:	daa    
  40148a:	add    dh,cl
  40148c:	aad    0xa8
  40148e:	(bad)  
  40148f:	push   ebp
  401490:	push   eax
  401491:	arpl   WORD PTR [esi+ebx*4],bx
  401494:	and    ebp,DWORD PTR [ebx]
  401496:	sbb    BYTE PTR [ecx],cl
  401498:	jmp    0x8b2:0x2a094770
  40149f:	div    BYTE PTR [edx+0x43]
  4014a2:	stos   BYTE PTR es:[edi],al
  4014a3:	ds jmp 0xb55aa9fd
  4014a9:	sti    
  4014aa:	in     al,0x18
  4014ac:	pusha  
  4014ad:	addr16 pop ss
  4014af:	xchg   edi,eax
  4014b0:	xchg   esi,eax
  4014b1:	mov    esi,0x41179df9
  4014b6:	out    dx,al
  4014b7:	sub    ch,BYTE PTR [edi]
  4014b9:	add    ecx,DWORD PTR [edx-0xbd59e1e]
  4014bf:	push   eax
  4014c0:	inc    esp
  4014c1:	popf   
  4014c2:	dec    ebp
  4014c3:	mov    ecx,ds
  4014c5:	cmp    BYTE PTR [edi+edi*4+0x6],ah
  4014c9:	stos   BYTE PTR es:[edi],al
  4014ca:	loop   0x401519
  4014cc:	adc    DWORD PTR [eax+0x7a],0xf
  4014d0:	ins    BYTE PTR es:[edi],dx
  4014d1:	imul   edx,DWORD PTR [esi+0x4d],0x46c502d4
  4014d8:	nop
  4014d9:	lahf   
  4014da:	push   edx
  4014db:	int    0x17
  4014dd:	(bad)  
  4014de:	js     0x401476
  4014e0:	arpl   sp,bp
  4014e2:	stos   DWORD PTR es:[edi],eax
  4014e3:	dec    ebx
  4014e4:	popa   
  4014e5:	sub    ch,BYTE PTR [edi+0x8]
  4014e8:	inc    ecx
  4014e9:	out    0x2e,al
  4014eb:	push   ecx
  4014ec:	shl    cl,cl
  4014ee:	retf   0x7d37
  4014f1:	fist   DWORD PTR [edi+0x3cb20862]
  4014f7:	cmp    bl,BYTE PTR [ebp+eiz*8+0x31317923]
  4014fe:	cdq    
  4014ff:	pusha  
  401500:	aas    
  401501:	sub    BYTE PTR [edi+0x17bb0152],dl
  401507:	cmc    
  401508:	pop    edi
  401509:	inc    esp
  40150a:	xor    DWORD PTR [esi],0x9dc13adb
  401510:	fwait
  401511:	sbb    bl,BYTE PTR [esi]
  401513:	in     al,dx
  401514:	test   al,0x2b
  401516:	rol    BYTE PTR [esi+0x2045e30e],cl
  40151c:	jmp    0x6727:0xf145cbbc
  401523:	stos   DWORD PTR es:[edi],eax
  401524:	pop    ds
  401525:	mov    al,cl
  401527:	jle    0x401521
  401529:	lahf   
  40152a:	pop    esi
  40152b:	test   edi,esp
  40152d:	adc    ah,dl
  40152f:	add    al,0x50
  401531:	dec    ecx
  401532:	lods   al,BYTE PTR ds:[esi]
  401533:	add    eax,0xba669db6
  401538:	pop    esi
  401539:	mov    ah,0x27
  40153b:	ret    0x9f1c
  40153e:	aaa    
  40153f:	fsub   QWORD PTR [ebp-0x65]
  401542:	xchg   edx,eax
  401543:	sub    al,0xa4
  401545:	repz jno 0x4014f7
  401548:	fidiv  DWORD PTR [esi]
  40154a:	push   edx
  40154b:	test   DWORD PTR [ecx],edi
  40154d:	xchg   edi,ecx
  40154f:	nop
  401550:	sbb    al,0x76
  401552:	xor    DWORD PTR [esi+0x4d],ebx
  401555:	push   esi
  401556:	xchg   esi,eax
  401557:	stc    
  401558:	and    eax,eax
  40155a:	sbb    bh,BYTE PTR [edi]
  40155c:	test   BYTE PTR [edx],0x13
  40155f:	test   al,0xf4
  401561:	or     ecx,DWORD PTR [edx-0x42]
  401564:	dec    ebx
  401565:	in     al,dx
  401566:	retf   0x1eb6
  401569:	loop   0x40158a
  40156b:	pop    ds
  40156c:	arpl   dx,di
  40156e:	mov    ah,0xcc
  401570:	push   ecx
  401571:	imul   ebp,esi,0x2f63cd58
  401577:	mov    dl,0x73
  401579:	sar    esp,0x2
  40157c:	sub    BYTE PTR [ebp+0x43ba7760],cl
  401582:	into   
  401583:	test   eax,0xf0b6d167
  401588:	pop    esp
  401589:	adc    BYTE PTR [edx-0x11],bl
  40158c:	mov    edx,0x9e34967d
  401591:	sbb    dl,0x0
  401594:	sub    esi,esi
  401596:	and    al,0x6a
  401598:	in     al,dx
  401599:	mov    eax,ds:0x13fcce95
  40159e:	shl    DWORD PTR [eax+0x3cdedef],cl
  4015a4:	push   0x2e
  4015a6:	fadd   DWORD PTR [edx-0x19d5aa9e]
  4015ac:	stos   BYTE PTR es:[edi],al
  4015ad:	addr16 pop edx
  4015af:	imul   ecx,DWORD PTR [esi+ecx*1-0x76f6a230],0x25f268ca
  4015ba:	and    DWORD PTR ds:0xfab74167,eax
  4015c0:	add    BYTE PTR [edi+0x40],bh
  4015c3:	xor    al,0x17
  4015c5:	mov    al,ds:0x8806245c
  4015ca:	mov    edx,0x4f69828
  4015cf:	inc    ebp
  4015d0:	mov    ebp,ss
  4015d2:	test   al,0x58
  4015d4:	je     0x4015f6
  4015d6:	sbb    edi,ecx
  4015d8:	mov    DWORD PTR [esi+0xa],ecx
  4015db:	push   DWORD PTR [edx-0x3e]
  4015de:	in     al,dx
  4015df:	sub    DWORD PTR [ebp-0x1410a3d],0xf
  4015e6:	push   0xf852890b
  4015eb:	inc    ebp
  4015ec:	cwde   
  4015ed:	jl     0x40157d
  4015ef:	js     0x401616
  4015f1:	push   edi
  4015f2:	sbb    al,0x9c
  4015f4:	shl    DWORD PTR [ecx+0x738d0118],cl
  4015fa:	xchg   ebp,eax
  4015fb:	pop    edx
  4015fc:	adc    eax,0x1ae36d82
  401601:	sar    BYTE PTR [esp+ecx*1+0x4e],0xa2
  401606:	in     al,dx
  401607:	mov    ebp,0x4fa21fe5
  40160c:	sub    BYTE PTR [eax],al
  40160e:	add    al,0x7e
  401610:	sub    eax,0xc1377357
  401615:	(bad)  
  401616:	cmp    BYTE PTR [eax+0x110adac4],ch
  40161c:	sbb    dl,dh
  40161e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40161f:	pop    edi
  401620:	push   eax
  401621:	mov    DWORD PTR [ecx],ebp
  401623:	in     eax,dx
  401624:	push   ebp
  401625:	push   ss
  401626:	fcomp  DWORD PTR [eax+0x5f1ccee0]
  40162c:	or     al,0x30
  40162e:	test   eax,0xc26bd028
  401633:	fnsave [edx-0x7d236b1]
  401639:	xor    BYTE PTR ds:0x791793be,0x24
  401640:	int    0xcf
  401642:	repnz inc eax
  401644:	push   es
  401645:	xor    ah,ah
  401647:	xor    DWORD PTR [ecx+0x4b],eax
  40164a:	cs ret 
  40164c:	lahf   
  40164d:	fsubr  DWORD PTR [esi]
  40164f:	dec    edx
  401650:	jle    0x4016ad
  401652:	cli    
  401653:	jl     0x401645
  401655:	xlat   BYTE PTR ds:[ebx]
  401656:	out    0x79,eax
  401658:	mov    edi,0x86869f8f
  40165d:	add    cl,dh
  40165f:	xchg   DWORD PTR [ebp+edx*8-0x62],esi
  401663:	aas    
  401664:	pop    ss
  401665:	test   al,0x1f
  401667:	xchg   edx,eax
  401668:	dec    edx
  401669:	cmp    BYTE PTR [ebp+0x60],al
  40166c:	push   es
  40166d:	xor    bl,cl
  40166f:	sbb    al,cl
  401671:	cmc    
  401672:	dec    edi
  401673:	adc    ebx,DWORD PTR [edi]
  401675:	ror    DWORD PTR [eax+0x62],0x34
  401679:	sub    al,0x1a
  40167b:	xchg   ecx,eax
  40167c:	or     eax,0xc3419bd1
  401681:	outs   dx,DWORD PTR ds:[esi]
  401682:	es scas al,BYTE PTR es:[edi]
  401684:	jge    0x401703
  401686:	in     eax,dx
  401687:	aam    0xf6
  401689:	addr16 test al,0xa9
  40168c:	fld    TBYTE PTR [esp+eiz*8+0x58]
  401690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401691:	sbb    al,0x5b
  401693:	push   esi
  401694:	mov    ch,0xa1
  401696:	imul   eax,DWORD PTR [ecx-0x2d],0xfdaedc83
  40169d:	adc    dl,BYTE PTR [ebx+eiz*2]
  4016a0:	xchg   edx,eax
  4016a1:	add    al,0x37
  4016a3:	push   ebp
  4016a4:	adc    BYTE PTR [ecx-0x1a],0xe5
  4016a8:	xchg   esi,eax
  4016a9:	leave  
  4016aa:	and    al,0xf5
  4016ac:	sbb    esp,ebx
  4016ae:	hlt    
  4016af:	idiv   BYTE PTR [edi]
  4016b1:	inc    ebp
  4016b2:	sbb    bh,BYTE PTR [si+0x5820]
  4016b7:	scas   al,BYTE PTR es:[edi]
  4016b8:	push   0xffffff8d
  4016ba:	ret    
  4016bb:	jne    0x40172e
  4016bd:	aaa    
  4016be:	mov    esi,DWORD PTR [esi]
  4016c0:	jl     0x4016b1
  4016c2:	mov    DWORD PTR [eax+0x28aaec29],esp
  4016c8:	(bad)  
  4016c9:	xor    ah,0x88
  4016cc:	push   es
  4016cd:	inc    esi
  4016ce:	icebp  
  4016cf:	adc    al,dl
  4016d1:	add    BYTE PTR ds:0xdcf3d5bb,dh
  4016d7:	push   es
  4016d8:	ins    DWORD PTR es:[edi],dx
  4016d9:	and    bl,BYTE PTR [esi+0x3bbf5bb4]
  4016df:	fsub   DWORD PTR [ecx]
  4016e1:	dec    ecx
  4016e2:	sub    eax,0xe32ee794
  4016e7:	xchg   esp,eax
  4016e8:	das    
  4016e9:	sbb    DWORD PTR [ebx],esi
  4016eb:	call   0xc5b5:0x8862d1f3
  4016f2:	stos   DWORD PTR es:[edi],eax
  4016f3:	mov    ah,0xd4
  4016f5:	ja     0x40167e
  4016f7:	cmc    
  4016f8:	dec    esp
  4016f9:	pop    ecx
  4016fa:	fist   DWORD PTR [ecx-0x79a68a01]
  401700:	inc    edx
  401701:	(bad)  
  401702:	(bad)  
  401703:	pop    esp
  401704:	cmp    dl,BYTE PTR [esi+0x3ef8e34b]
  40170a:	repnz mov ecx,0x93134842
  401710:	cmp    DWORD PTR [edi-0x44d2c0f],esi
  401716:	call   0xa10ed391
  40171b:	mov    dh,0x54
  40171d:	sub    eax,0xdb48c5e0
  401722:	mov    bl,0x24
  401724:	and    DWORD PTR [eax+ecx*1],ebx
  401727:	loopne 0x4016d8
  401729:	pop    ebx
  40172a:	pushf  
  40172b:	and    al,0xe1
  40172d:	adc    dl,ah
  40172f:	pop    es
  401730:	push   ecx
  401731:	int    0x2
  401733:	mov    dl,BYTE PTR [edi-0x7b]
  401736:	xlat   BYTE PTR ds:[ebx]
  401737:	out    0x2b,eax
  401739:	ja     0x40177d
  40173b:	and    al,0x21
  40173d:	sub    al,0xcd
  40173f:	or     eax,0xcb83960c
  401744:	pop    ss
  401745:	pop    ecx
  401746:	cmp    al,0x6a
  401748:	mov    bl,0x74
  40174a:	arpl   WORD PTR [ecx-0x6],di
  40174d:	mov    ebp,0x4f5618cf
  401752:	dec    edx
  401753:	mov    esp,0xc7ae9ca7
  401758:	lods   eax,DWORD PTR ds:[esi]
  401759:	test   al,0x53
  40175b:	shl    BYTE PTR [ebx+0x2a58cdab],0x83
  401762:	arpl   WORD PTR [esi],ax
  401764:	sbb    al,0xcb
  401766:	stc    
  401767:	push   ss
  401768:	add    edx,DWORD PTR [ecx-0x5a]
  40176b:	mov    dl,0x66
  40176d:	inc    ebx
  40176e:	jnp    0x401722
  401770:	mov    DWORD PTR [edx],edi
  401772:	or     dh,BYTE PTR [ecx]
  401774:	mov    ebx,0x7a97cb9c
  401779:	mov    BYTE PTR [edi+esi*1-0x1f],al
  40177d:	add    eax,0xf3dc3ab2
  401782:	mov    ah,0x2c
  401784:	push   esp
  401785:	mov    WORD PTR [edi],fs
  401787:	jg     0x401780
  401789:	inc    edi
  40178a:	repnz mov dh,0x30
  40178d:	cmp    DWORD PTR [edx+0x1821fff0],edi
  401793:	push   0xd6153868
  401798:	pop    ebx
  401799:	jns    0x4017bb
  40179b:	test   eax,0xab9f366b
  4017a0:	imul   esi,DWORD PTR [ecx],0x8
  4017a3:	xchg   ecx,eax
  4017a4:	sub    ecx,DWORD PTR [edx-0x7e12d49b]
  4017aa:	xor    al,0x3
  4017ac:	and    al,BYTE PTR [ebp-0x6ce0de00]
  4017b2:	jl     0x4017cd
  4017b4:	pushf  
  4017b5:	pusha  
  4017b6:	mov    eax,ds:0x3f83d798
  4017bb:	stc    
  4017bc:	enter  0xf060,0xe3
  4017c0:	outs   dx,DWORD PTR ds:[esi]
  4017c1:	dec    esi
  4017c2:	push   edi
  4017c3:	push   ebp
  4017c4:	inc    edi
  4017c5:	pop    ds
  4017c6:	add    dl,0x7e
  4017c9:	scas   al,BYTE PTR es:[edi]
  4017ca:	xlat   BYTE PTR ds:[ebx]
  4017cb:	nop
  4017cc:	xchg   ecx,eax
  4017cd:	inc    eax
  4017ce:	adc    al,0xca
  4017d0:	jno    0x401842
  4017d2:	in     eax,dx
  4017d3:	mov    ebp,0xec957c1b
  4017d8:	and    DWORD PTR [esi],ebp
  4017da:	xchg   esi,eax
  4017db:	push   esi
  4017dc:	inc    ecx
  4017dd:	xchg   ecx,eax
  4017de:	or     eax,0x719b02b4
  4017e3:	sub    eax,0x6660fdb8
  4017e8:	xor    dh,ah
  4017ea:	scas   eax,DWORD PTR es:[edi]
  4017eb:	(bad)  
  4017ec:	(bad)
  4017ef:	mov    dh,0x8
  4017f1:	ja     0x4017ad
  4017f3:	fs jmp 0x3ace:0x44c6d8db
  4017fb:	pusha  
  4017fc:	sahf   
  4017fd:	push   eax
  4017fe:	pop    ebx
  4017ff:	sub    DWORD PTR [ebx],eax
  401801:	(bad)  
  401803:	jmp    0x45fa:0xc81640a5
  40180a:	sti    
  40180b:	and    DWORD PTR [edx+eiz*2+0x76419cd7],ebx
  401812:	jge    0x401825
  401814:	fisubr WORD PTR ds:0xa8f10441
  40181a:	push   ds
  40181b:	mov    bh,0xac
  40181d:	dec    esi
  40181e:	jp     0x4017ad
  401820:	ja     0x401811
  401822:	mov    ecx,0x99990fa3
  401827:	xchg   edi,eax
  401828:	daa    
  401829:	test   cl,dl
  40182b:	int    0x45
  40182d:	scas   eax,DWORD PTR es:[edi]
  40182e:	mov    al,0x51
  401830:	lods   al,BYTE PTR ds:[esi]
  401831:	sub    BYTE PTR [edx-0x3559ad15],bh
  401837:	sbb    BYTE PTR [ebx+edx*4+0x5e],ch
  40183b:	stc    
  40183c:	inc    esp
  40183d:	rcl    DWORD PTR [edx+eax*2-0x38],cl
  401841:	jae    0x4017e9
  401843:	in     al,dx
  401844:	cdq    
  401845:	sub    DWORD PTR [eax],ecx
  401847:	xchg   esp,eax
  401848:	and    esp,DWORD PTR [ecx+0x3745d6ff]
  40184e:	mov    ch,0x41
  401850:	or     ecx,esp
  401852:	in     eax,dx
  401853:	mov    esp,0x3e14c4d8
  401858:	mov    dl,0xf2
  40185a:	push   ecx
  40185b:	dec    esi
  40185c:	out    dx,eax
  40185d:	in     eax,0xe2
  40185f:	pop    edx
  401860:	mov    cl,0x8b
  401862:	inc    esp
  401863:	fnsave [esi-0x546e7ddf]
  401869:	sahf   
  40186a:	inc    ebx
  40186b:	jbe    0x4018ab
  40186d:	in     eax,0x4
  40186f:	add    al,0xa1
  401871:	out    0x8e,al
  401873:	push   eax
  401874:	xchg   DWORD PTR [esp+ebx*1-0x60],ebp
  401878:	or     DWORD PTR [eax],ebp
  40187a:	jne    0x401821
  40187c:	out    dx,al
  40187d:	pop    ds
  40187e:	fist   WORD PTR [eax+0x31c26e2e]
  401884:	mov    esp,DWORD PTR [ebx*1-0x1c8961bf]
  40188b:	(bad)  
  40188c:	aas    
  40188d:	stos   DWORD PTR es:[edi],eax
  40188e:	dec    ecx
  40188f:	xlat   BYTE PTR ds:[ebx]
  401890:	out    0xf4,al
  401892:	int3   
  401893:	out    dx,al
  401894:	push   ds
  401895:	or     DWORD PTR [edi+0x66],ecx
  401898:	dec    ecx
  401899:	(bad)  
  40189a:	cmp    DWORD PTR [edi],esi
  40189c:	jb     0x401907
  40189e:	jne    0x4018a9
  4018a0:	stc    
  4018a1:	xor    BYTE PTR ds:0x586fa7e2,al
  4018a7:	test   bh,ch
  4018a9:	mulps  xmm2,XMMWORD PTR [ecx+0x20253a62]
  4018b0:	pop    esp
  4018b1:	dec    ecx
  4018b2:	add    al,BYTE PTR [ebx+ebx*2+0x239b0f5]
  4018b9:	stc    
  4018ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018bb:	idiv   BYTE PTR [esi+0x7d]
  4018be:	ret    
  4018bf:	lds    ecx,FWORD PTR [edi]
  4018c1:	dec    edi
  4018c2:	jge    0x40190b
  4018c4:	idiv   BYTE PTR [ecx+0x2c6dfc4c]
  4018ca:	loopne 0x40185d
  4018cc:	stos   BYTE PTR es:[edi],al
  4018cd:	jo     0x4018fe
  4018cf:	add    ah,ch
  4018d1:	icebp  
  4018d2:	or     bl,bl
  4018d4:	and    ecx,DWORD PTR [ecx+ebp*1]
  4018d7:	add    al,0x47
  4018d9:	ret    
  4018da:	(bad)  
  4018db:	cmp    ecx,DWORD PTR [edx-0x19ca1e87]
  4018e1:	loopne 0x4018d2
  4018e3:	je     0x401918
  4018e5:	adc    eax,0xabbbeca7
  4018ea:	(bad)  
  4018eb:	ss leave 
  4018ed:	loope  0x4018b1
  4018ef:	leave  
  4018f0:	retf   0xf1cb
  4018f3:	xchg   esi,eax
  4018f4:	pop    ebx
  4018f5:	xor    DWORD PTR [esi-0x7c],ecx
  4018f8:	lds    ebp,FWORD PTR [edx-0x1ccab032]
  4018fe:	js     0x401889
  401900:	lds    esi,FWORD PTR cs:[edi]
  401903:	jmp    0x60258a51
  401908:	pop    edi
  401909:	loope  0x401912
  40190b:	lds    esp,FWORD PTR [ecx]
  40190d:	xchg   edi,eax
  40190e:	out    dx,eax
  40190f:	les    ebx,FWORD PTR [edi-0x31]
  401912:	pop    esp
  401913:	rcr    BYTE PTR [ebx-0x73],cl
  401916:	hlt    
  401917:	popa   
  401918:	inc    BYTE PTR [edi+0x3a115e37]
  40191e:	sbb    al,0xe8
  401920:	lock jns 0x40192b
  401923:	ss mov cl,0x14
  401926:	in     eax,0xfa
  401928:	cmp    esi,ebp
  40192a:	jmp    0x7508:0x7e75a023
  401931:	in     al,0x9a
  401933:	dec    esp
  401934:	scas   al,BYTE PTR es:[edi]
  401935:	jmp    0x66195225
  40193a:	pop    edx
  40193b:	pop    edx
  40193c:	pop    ds
  40193d:	lds    esi,FWORD PTR [ebx-0x2b]
  401940:	arpl   WORD PTR [edx+edx*2-0x5aea5d7a],ax
  401947:	out    dx,al
  401948:	in     eax,0x2f
  40194a:	jne    0x401922
  40194c:	test   al,0xf0
  40194e:	jnp    0x401941
  401950:	push   cs
  401951:	jge    0x4018fe
  401953:	pop    edx
  401954:	jp     0x4019a7
  401956:	mov    al,BYTE PTR [ebx]
  401958:	out    0x19,eax
  40195a:	inc    esi
  40195b:	add    eax,0x95692e53
  401960:	je     0x4018f1
  401962:	add    ah,BYTE PTR [esi-0x5de8981c]
  401968:	imul   esp,edi,0xe18e66f3
  40196e:	addr16 sub eax,0x6c62143
  401974:	pushf  
  401975:	jp     0x401989
  401977:	in     eax,0x4e
  401979:	dec    ecx
  40197a:	pop    esp
  40197b:	xchg   edi,eax
  40197c:	sub    DWORD PTR [ecx+0x2a],ebp
  40197f:	or     eax,0x790a4b73
  401984:	mov    BYTE PTR [eax-0x35],dl
  401987:	daa    
  401988:	test   DWORD PTR [ecx],esi
  40198a:	mov    ah,BYTE PTR [edi]
  40198c:	scas   eax,DWORD PTR es:[edi]
  40198d:	mul    ch
  40198f:	cmp    al,0xd4
  401991:	mov    eax,0x67b1bb0
  401996:	dec    edx
  401997:	les    ecx,FWORD PTR [edi+0x4763282d]
  40199d:	xchg   edx,eax
  40199e:	enter  0x2f80,0x1b
  4019a2:	ins    DWORD PTR es:[edi],dx
  4019a3:	sub    al,0x0
  4019a5:	cmp    al,0xd8
  4019a7:	mov    DWORD PTR es:[ebp+0xcd31aa4],edi
  4019ae:	repz aaa 
  4019b0:	fistp  DWORD PTR [ecx+0x40]
  4019b3:	push   cs
  4019b4:	bound  esi,QWORD PTR [esi+0x44e8e907]
  4019ba:	fisttp QWORD PTR [ebp+0x1c6e492]
  4019c0:	cld    
  4019c1:	xor    BYTE PTR [eax+0x5d69ddbb],bh
  4019c7:	sub    ch,al
  4019c9:	jno    0x40197b
  4019cb:	mov    BYTE PTR [ebx+0x60d36fec],bl
  4019d1:	inc    eax
  4019d2:	mov    DWORD PTR ds:0xac66921e,ecx
  4019d8:	(bad)  
  4019d9:	out    dx,al
  4019da:	les    esp,FWORD PTR [ebx+eiz*8-0x291ad81c]
  4019e1:	stc    
  4019e2:	sbb    DWORD PTR [edi+esi*2],ecx
  4019e5:	cmp    BYTE PTR [edx+0x7640c446],ah
  4019eb:	pop    ss
  4019ec:	sub    eax,0x5330f27e
  4019f1:	fdivr  QWORD PTR [edx]
  4019f3:	ret    
  4019f4:	push   edx
  4019f5:	pop    esi
  4019f6:	aam    0x9e
  4019f8:	mov    ds:0x8e625776,eax
  4019fd:	out    0xc3,eax
  4019ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a00:	imul   ecx,DWORD PTR [esi-0xba8e8f1],0x5c
  401a07:	je     0x401a4b
  401a09:	icebp  
  401a0a:	mov    edi,0xdc26cff1
  401a0f:	call   0x80c4cb3a
  401a14:	jnp    0x401a49
  401a16:	cmp    cl,BYTE PTR [edx+esi*1]
  401a19:	jnp    0x401a96
  401a1b:	dec    edi
  401a1c:	data16 sbb BYTE PTR [ebx],0xab
  401a20:	add    ebx,DWORD PTR [ebx+ebx*4-0x78]
  401a24:	cmp    DWORD PTR [esi+0x4c3bbbbe],ebp
  401a2a:	add    ebp,ebx
  401a2c:	rcl    DWORD PTR [esi],cl
  401a2e:	mov    eax,0x52f9a7d5
  401a33:	push   ds
  401a34:	mov    ds:0x393b2582,al
  401a39:	aad    0x59
  401a3b:	fiadd  DWORD PTR [edx-0x6a]
  401a3e:	int3   
  401a3f:	popa   
  401a40:	fstp   DWORD PTR [esi+0x17]
  401a43:	daa    
  401a44:	loope  0x4019eb
  401a46:	or     BYTE PTR [eax+0x10],ch
  401a49:	fnstenv [edi+0x8aa9949]
  401a4f:	daa    
  401a50:	and    ch,0x1d
  401a53:	out    0x3b,al
  401a55:	outs   dx,BYTE PTR ds:[esi]
  401a56:	lock jo 0x401a65
  401a59:	add    bl,BYTE PTR [edx+0x54c3520e]
  401a5f:	je     0x401a44
  401a61:	push   es
  401a62:	(bad)  
  401a63:	imul   DWORD PTR [ecx]
  401a65:	ja     0x401ad2
  401a67:	stos   BYTE PTR es:[edi],al
  401a68:	pop    esp
  401a69:	xor    DWORD PTR [ebx+0x29],ebx
  401a6c:	in     al,dx
  401a6d:	push   esi
  401a6e:	jbe    0x401a83
  401a70:	sub    DWORD PTR [esi-0x4ce42200],eax
  401a76:	mov    ds:0x813fcb5c,eax
  401a7b:	and    cl,BYTE PTR [edi+0x17]
  401a7e:	andps  xmm2,xmm3
  401a81:	inc    ecx
  401a82:	fdiv   DWORD PTR [esi]
  401a84:	adc    BYTE PTR [ebx+ebp*1+0x37],ah
  401a88:	call   0x96df:0xb85f8e8e
  401a8f:	sub    edx,DWORD PTR [edi-0x55ff92b8]
  401a95:	ss pop es
  401a97:	sub    BYTE PTR [esi],ch
  401a99:	cdq    
  401a9a:	nop
  401a9b:	vpcmpeqd xmm6,xmm3,XMMWORD PTR [edi]
  401a9f:	fsub   QWORD PTR [ecx+0x5ca344c0]
  401aa5:	not    BYTE PTR [ebx-0x71503ff6]
  401aab:	mov    ah,BYTE PTR [edx-0x30]
  401aae:	ror    DWORD PTR [ebx],1
  401ab0:	push   ss
  401ab1:	mov    ch,0xf8
  401ab3:	lods   al,BYTE PTR ds:[esi]
  401ab4:	cmp    dh,ah
  401ab6:	push   cs
  401ab7:	aas    
  401ab8:	cwde   
  401ab9:	lds    ebx,FWORD PTR [ecx+0x64]
  401abc:	push   edx
  401abd:	xlat   BYTE PTR ds:[ebx]
  401abe:	push   edi
  401abf:	outs   dx,BYTE PTR gs:[esi]
  401ac1:	repz cwde 
  401ac3:	xor    ecx,ecx
  401ac5:	outs   dx,BYTE PTR ds:[esi]
  401ac6:	lods   eax,DWORD PTR ds:[esi]
  401ac7:	mov    al,0x26
  401ac9:	imul   eax,DWORD PTR [esi-0x1e],0x21b10bf4
  401ad0:	xor    esp,edx
  401ad2:	je     0x401b0e
  401ad4:	(bad)  
  401ad6:	pop    es
  401ad7:	ins    DWORD PTR es:[edi],dx
  401ad8:	(bad)  
  401ad9:	test   al,0x96
  401adb:	sahf   
  401adc:	lea    esi,ds:[eax]
  401adf:	stos   DWORD PTR es:[edi],eax
  401ae0:	dec    edx
  401ae1:	cmp    al,0xeb
  401ae3:	push   ecx
  401ae4:	add    ebp,esp
  401ae6:	sbb    eax,0xf1b1027
  401aeb:	adc    DWORD PTR [bx+0x241c],ebp
  401af0:	(bad)  
  401af1:	jecxz  0x401b2d
  401af3:	add    bl,BYTE PTR [eax+0x7b]
  401af6:	ss pop ecx
  401af8:	mov    edx,0x8adfafbe
  401afd:	xchg   ebp,eax
  401afe:	xchg   edx,eax
  401aff:	push   cs
  401b00:	pop    eax
  401b01:	aad    0x73
  401b03:	mov    bl,0x11
  401b05:	cmp    al,0xda
  401b07:	retf   0xca08
  401b0a:	xchg   ebx,eax
  401b0b:	les    edi,FWORD PTR [esi]
  401b0d:	mov    eax,ds:0xa8d58037
  401b12:	xchg   esp,esp
  401b14:	xor    ecx,edi
  401b16:	mov    bl,0x8c
  401b18:	dec    eax
  401b19:	loope  0x401b08
  401b1b:	or     al,0xb6
  401b1d:	mov    ecx,0x90cc6f7d
  401b22:	outs   dx,BYTE PTR ds:[esi]
  401b23:	js     0x401b49
  401b25:	in     al,0x60
  401b27:	dec    DWORD PTR [ebx]
  401b29:	leave  
  401b2a:	fidiv  DWORD PTR [esi]
  401b2c:	inc    esp
  401b2d:	fimul  DWORD PTR [ebp-0x602ec652]
  401b33:	add    ebx,ebp
  401b35:	xor    dl,BYTE PTR ds:0x6e2fd392
  401b3b:	dec    edi
  401b3c:	ja     0x401b68
  401b3e:	and    al,0x1a
  401b40:	xchg   ecx,eax
  401b41:	pusha  
  401b42:	xor    al,0x30
  401b44:	mov    ds:0x6f73547,al
  401b49:	into   
  401b4a:	mov    edi,0x5ed6d51
  401b4f:	std    
  401b50:	test   DWORD PTR [edx+0x1f],esp
  401b53:	mov    eax,ds:0xce421fc5
  401b58:	jno    0x401b64
  401b5a:	ret    
  401b5b:	inc    esp
  401b5c:	cdq    
  401b5d:	call   0x1c5f:0x8db93e6c
  401b64:	push   0xfffffff0
  401b66:	inc    edx
  401b67:	ja     0x401b77
  401b69:	popa   
  401b6a:	ret    
  401b6b:	add    BYTE PTR [ecx-0x2],0xfd
  401b6f:	add    BYTE PTR [edx],cl
  401b71:	loopne 0x401af3
  401b73:	push   ebp
  401b74:	pop    es
  401b75:	mov    edx,0x50bcfd3d
  401b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b7b:	jl     0x401b33
  401b7d:	lds    esi,FWORD PTR [ecx]
  401b7f:	out    0x58,eax
  401b81:	in     al,dx
  401b82:	int3   
  401b83:	jp     0x401b53
  401b85:	or     al,0x7c
  401b87:	(bad)  
  401b88:	loopne 0x401ba2
  401b8a:	in     al,dx
  401b8b:	(bad)  
  401b8c:	mov    bh,0xd6
  401b8e:	neg    edx
  401b90:	lods   eax,DWORD PTR ds:[esi]
  401b91:	pop    edi
  401b92:	add    ch,bl
  401b94:	inc    ebp
  401b95:	test   al,0xf5
  401b97:	adc    eax,0xcc107309
  401b9c:	sbb    edx,DWORD PTR [ebp+ebp*8-0x1aa4836a]
  401ba3:	pop    ds
  401ba4:	jae    0x401b51
  401ba6:	jl     0x401b85
  401ba8:	stc    
  401ba9:	add    ah,BYTE PTR [esi-0x2c2ec358]
  401baf:	jne    0x401b5f
  401bb1:	xchg   esp,eax
  401bb2:	fst    DWORD PTR [eax-0x1e]
  401bb5:	dec    ebp
  401bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bb7:	cdq    
  401bb8:	aam    0xa3
  401bba:	xchg   ch,ch
  401bbc:	sar    DWORD PTR [ebx-0x1e],cl
  401bbf:	leave  
  401bc0:	inc    edi
  401bc1:	xchg   esi,eax
  401bc2:	jo     0x401ba6
  401bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bc6:	sti    
  401bc7:	stos   DWORD PTR es:[edi],eax
  401bc8:	aad    0x85
  401bca:	sub    esi,DWORD PTR [eax-0x3b]
  401bcd:	mov    al,dh
  401bcf:	aaa    
  401bd0:	jb     0xc2ffc2dc
  401bd6:	jp     0x401c22
  401bd8:	je     0x401b99
  401bda:	outs   dx,DWORD PTR ds:[esi]
  401bdb:	mov    al,0xfc
  401bdd:	inc    ebx
  401bde:	mov    edx,0x3977f6c8
  401be3:	fdivp  st(2),st
  401be5:	rcl    DWORD PTR [eax-0x38fc5903],1
  401beb:	jo     0x401b9f
  401bed:	or     BYTE PTR [esi],0x24
  401bf0:	test   dl,ch
  401bf2:	retf   
  401bf3:	mov    esp,0xcf075144
  401bf8:	scas   eax,DWORD PTR es:[edi]
  401bf9:	icebp  
  401bfa:	dec    esp
  401bfb:	and    BYTE PTR [edi-0x7f],ch
  401bfe:	je     0xfc7900d8
  401c04:	mov    DWORD PTR [ebp+edx*2-0x4b7bd9ad],esp
  401c0b:	and    esp,ebp
  401c0d:	cmp    DWORD PTR ds:0x6480d6af,ebp
  401c13:	ret    0x358f
  401c16:	jnp    0x401bb3
  401c18:	or     al,0x81
  401c1a:	adc    ecx,DWORD PTR [ebp-0x1de6d8eb]
  401c20:	xchg   BYTE PTR [ecx+0x5e],dl
  401c23:	inc    esi
  401c24:	dec    eax
  401c25:	mov    dh,0x3e
  401c27:	arpl   WORD PTR [edi-0x5a],si
  401c2a:	icebp  
  401c2b:	mov    ds:0xeb6d9f38,eax
  401c30:	jae    0x401c35
  401c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c33:	fnstsw WORD PTR ds:0xff0fcb17
  401c39:	(bad)  
  401c3a:	jmp    0xa366fd8
  401c3f:	addr16 push ds
  401c41:	outs   dx,DWORD PTR ds:[esi]
  401c42:	push   ebp
  401c43:	shr    DWORD PTR [ebx-0x56],cl
  401c46:	mov    esi,0xe5e4e051
  401c4b:	add    DWORD PTR ds:0xa31ede81,edx
  401c51:	and    BYTE PTR [ecx-0x60],al
  401c54:	(bad)  
  401c55:	test   eax,0x29b16e39
  401c5a:	xchg   ecx,eax
  401c5b:	sbb    al,0xf6
  401c5d:	jb     0x401c1c
  401c5f:	cmp    DWORD PTR cs:[edx-0x3b],edi
  401c63:	xor    eax,0xc5116255
  401c68:	popf   
  401c69:	ins    DWORD PTR es:[edi],dx
  401c6a:	div    BYTE PTR [esi-0x562c1865]
  401c70:	call   FWORD PTR [ecx+0x20bc9f86]
  401c76:	out    dx,al
  401c77:	mov    al,0x31
  401c79:	sahf   
  401c7a:	fwait
  401c7b:	lock rcr BYTE PTR [ebx+ebp*1-0x7d],0xd2
  401c81:	rol    DWORD PTR [eax-0x7f832134],0xc0
  401c88:	sub    BYTE PTR [ebp+0x2b],dl
  401c8b:	test   eax,0xf820a962
  401c90:	(bad)  
  401c91:	fmul   DWORD PTR [ebx-0x66b88ca0]
  401c97:	aas    
  401c98:	xor    esi,DWORD PTR [ebx+0x63aba763]
  401c9e:	mov    bl,0x8d
  401ca0:	mov    edx,0xcf36d594
  401ca5:	nop
  401ca6:	mov    esp,0xe7021e88
  401cab:	jmp    0xbf922590
  401cb0:	xor    esp,esp
  401cb2:	retf   0xc5a2
  401cb5:	pop    es
  401cb6:	dec    edi
  401cb7:	jns    0x401c82
  401cb9:	sahf   
  401cba:	mov    ah,0x82
  401cbc:	imul   ecx,DWORD PTR gs:[ebp-0x310e19ec],0x43c4e4be
  401cc7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cc9:	sbb    DWORD PTR [ecx],ebx
  401ccb:	push   ss
  401ccc:	fcmovu st,st(0)
  401cce:	fimul  DWORD PTR [edi+edx*4+0x2d36e030]
  401cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cd6:	or     BYTE PTR [ebx],ah
  401cd8:	xchg   ebp,eax
  401cd9:	aam    0x6d
  401cdb:	and    ecx,DWORD PTR [ecx+0x259308cf]
  401ce1:	sub    edi,esp
  401ce3:	(bad)  
  401ce4:	or     edi,DWORD PTR [esi+0x3d]
  401ce7:	push   esi
  401ce8:	(bad)  
  401ce9:	xchg   edi,eax
  401cea:	shr    BYTE PTR [edx-0x4556732d],1
  401cf0:	and    edi,ebp
  401cf2:	jge    0x401d52
  401cf4:	mov    esi,0xf7af1533
  401cf9:	test   BYTE PTR [esi],0xb4
  401cfc:	lea    esp,[edx-0x2a]
  401cff:	xchg   ecx,eax
  401d00:	mov    bh,0x52
  401d02:	sub    DWORD PTR [ebp-0x3a23de4c],eax
  401d08:	cmp    ecx,ebx
  401d0a:	add    eax,0x62d96eed
  401d0f:	pop    ebp
  401d10:	adc    al,0xa7
  401d12:	stos   DWORD PTR es:[edi],eax
  401d13:	dec    ebx
  401d14:	das    
  401d15:	fdiv   DWORD PTR [ebx-0x29]
  401d18:	sbb    esi,0xc8115185
  401d1e:	inc    ecx
  401d1f:	sbb    DWORD PTR [ecx],edi
  401d21:	mov    cs,WORD PTR cs:[edi]
  401d24:	sbb    bl,ch
  401d26:	inc    BYTE PTR [edx]
  401d28:	inc    esp
  401d29:	out    dx,eax
  401d2a:	fmul   DWORD PTR [edi-0x1e]
  401d2d:	push   ecx
  401d2e:	xor    BYTE PTR [ecx-0x5b],bl
  401d31:	sbb    DWORD PTR [edx-0x68a97706],ebx
  401d37:	push   0x685a40f7
  401d3c:	cmc    
  401d3d:	push   ecx
  401d3e:	mov    ebp,0xde5400d5
  401d43:	call   0x28fb0207
  401d48:	hlt    
  401d49:	pushf  
  401d4a:	das    
  401d4b:	loopne 0x401d6b
  401d4d:	pop    esp
  401d4e:	mov    eax,ds:0x1e72ef3a
  401d53:	add    ebx,DWORD PTR [edi]
  401d55:	lds    edi,FWORD PTR ds:0xb6e2fa66
  401d5b:	xor    edi,DWORD PTR [eax-0x10dc97cb]
  401d61:	sbb    DWORD PTR [edx-0x77ee5da8],ebx
  401d67:	lock loopne 0x401d6a
  401d6a:	into   
  401d6b:	std    
  401d6c:	add    BYTE PTR [edi+0x6d],cl
  401d6f:	(bad)  
  401d70:	stc    
  401d71:	call   0x8df5:0x416d03fe
  401d78:	test   edi,0xfbeabd54
  401d7e:	outs   dx,DWORD PTR ds:[esi]
  401d7f:	cwde   
  401d80:	ss push edi
  401d82:	inc    ecx
  401d83:	rcr    BYTE PTR [edx],cl
  401d85:	daa    
  401d86:	adc    al,0xa
  401d88:	sahf   
  401d89:	mov    ds,WORD PTR [edi]
  401d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d8c:	mov    esi,0x78f87b0b
  401d91:	push   0x36
  401d93:	push   ss
  401d94:	int3   
  401d95:	sub    ebx,DWORD PTR [edi-0x65f45fcd]
  401d9b:	je     0x401d29
  401d9d:	mov    esi,ecx
  401d9f:	mov    esp,0x33e6f1e2
  401da4:	mov    bl,0x4c
  401da6:	fisttp QWORD PTR [ecx+ecx*1-0x187721d5]
  401dad:	xchg   ebx,eax
  401dae:	jg     0x401e21
  401db0:	adc    bh,bh
  401db2:	cmp    DWORD PTR [ecx+0x7c9e9efc],esi
  401db8:	rcr    BYTE PTR [edi-0x74c5d610],1
  401dbe:	ror    bl,1
  401dc0:	pop    esp
  401dc1:	mov    DWORD PTR fs:[ecx+0x8],0x98492b28
  401dc9:	mov    ds:0x4fe50408,al
  401dce:	jecxz  0x401d98
  401dd0:	cs hlt 
  401dd2:	jb     0x401dab
  401dd4:	xor    BYTE PTR [edi],ah
  401dd6:	arpl   WORD PTR [edi-0x29],sp
  401dd9:	cmp    al,0x86
  401ddb:	mov    dl,0xd1
  401ddd:	xor    al,0x96
  401ddf:	and    ebx,DWORD PTR [ecx]
  401de1:	aam    0xad
  401de3:	mov    ebp,DWORD PTR [edx+0x1d9618c2]
  401de9:	aaa    
  401dea:	mov    ah,0xb6
  401dec:	arpl   WORD PTR [ecx],bx
  401dee:	scas   al,BYTE PTR es:[edi]
  401def:	or     al,0x37
  401df1:	cmp    eax,0xd0b6e4e4
  401df6:	scas   al,BYTE PTR es:[edi]
  401df7:	inc    DWORD PTR [esp+edx*8+0x8e94d90]
  401dfe:	push   ebp
  401dff:	ret    0xfccd
  401e02:	pop    es
  401e03:	cmc    
  401e04:	ficom  WORD PTR [ebx]
  401e06:	mov    edx,0x317f16dd
  401e0b:	inc    edi
  401e0c:	xlat   BYTE PTR ds:[ebx]
  401e0d:	pop    es
  401e0e:	dec    eax
  401e0f:	cmp    BYTE PTR [ecx+0x62],ch
  401e12:	push   0x16
  401e14:	pop    ecx
  401e15:	(bad)  [ebp-0x9b309e4]
  401e1b:	sar    edi,1
  401e1d:	stos   DWORD PTR es:[edi],eax
  401e1e:	xchg   esi,eax
  401e1f:	pushf  
  401e20:	cmp    BYTE PTR [eax-0x63],dh
  401e23:	push   es
  401e24:	std    
  401e25:	fbld   TBYTE PTR [ecx+0x4ddd698e]
  401e2b:	add    dh,BYTE PTR [esi+0x5e4ecb9f]
  401e31:	nop
  401e32:	jae    0x401e81
  401e34:	je     0x401e1c
  401e36:	(bad)  
  401e37:	(bad)  
  401e38:	xchg   ecx,eax
  401e39:	imul   esp,esi,0xfffffff3
  401e3c:	imul   ebp,DWORD PTR [ecx],0x807b1d50
  401e42:	retf   
  401e43:	or     ch,al
  401e45:	inc    ebx
  401e46:	jne    0x401e8c
  401e48:	shl    DWORD PTR [ebp+0x20],0xf6
  401e4c:	repz dec ebx
  401e4e:	sub    ch,cl
  401e50:	push   0xffffffcb
  401e52:	fs mov bh,0x6c
  401e55:	or     BYTE PTR [ebx+ecx*2-0x4a],al
  401e59:	mov    al,0x56
  401e5b:	test   ch,dh
  401e5d:	ds loope 0x401e66
  401e60:	jne    0x401df0
  401e62:	mov    WORD PTR [ebx+0x35ce080a],ds
  401e68:	xor    bl,cl
  401e6a:	push   0x82bb4fb6
  401e6f:	sti    
  401e70:	jle    0x401df8
  401e72:	neg    BYTE PTR [edi-0x70]
  401e75:	jl     0x401dfb
  401e77:	jmp    0x401e0f
  401e79:	in     eax,dx
  401e7a:	mov    eax,0x6184e705
  401e7f:	cli    
  401e80:	daa    
  401e81:	shr    ch,1
  401e83:	and    al,0xd1
  401e85:	lds    ebx,FWORD PTR [edx-0x3fab260b]
  401e8b:	xchg   ecx,eax
  401e8c:	stos   DWORD PTR es:[edi],eax
  401e8d:	or     edi,DWORD PTR [esp+eax*4-0x21]
  401e91:	(bad)  [ebx-0x43b97510]
  401e97:	sbb    eax,DWORD PTR [eax]
  401e99:	(bad)  
  401e9a:	ins    BYTE PTR es:[edi],dx
  401e9b:	retf   
  401e9c:	int3   
  401e9d:	dec    ecx
  401e9e:	xchg   ebp,eax
  401e9f:	les    eax,FWORD PTR [ebx]
  401ea1:	inc    edx
  401ea2:	icebp  
  401ea3:	ja     0x401f05
  401ea5:	(bad)  
  401ea7:	inc    esp
  401ea8:	aam    0xd7
  401eaa:	es nop
  401eac:	pop    edx
  401ead:	ja     0x401e97
  401eaf:	shr    DWORD PTR [edi-0x4797618f],cl
  401eb5:	inc    esi
  401eb6:	test   al,0x3e
  401eb8:	mov    esi,0xf9654fc3
  401ebd:	jmp    0x401e45
  401ebf:	xchg   edi,eax
  401ec0:	pop    ebx
  401ec1:	addr16 js 0x401eae
  401ec4:	pop    DWORD PTR es:[eax+0x29]
  401ec8:	inc    ebx
  401ec9:	fwait
  401eca:	jae    0x401edc
  401ecc:	push   es
  401ecd:	dec    esi
  401ece:	scas   al,BYTE PTR es:[edi]
  401ecf:	out    0xf0,eax
  401ed1:	cwde   
  401ed2:	sbb    al,0xa5
  401ed4:	in     eax,dx
  401ed5:	es add eax,0xa56abc2a
  401edb:	int3   
  401edc:	jns    0x401ee1
  401ede:	dec    ebx
  401edf:	xchg   BYTE PTR [esi+0x42],bh
  401ee2:	and    al,0xba
  401ee4:	or     BYTE PTR [ebp-0x31b47188],al
  401eea:	mov    edi,0xc37c1735
  401eef:	adc    dl,ch
  401ef1:	pop    edx
  401ef2:	mov    ah,0x80
  401ef4:	int    0x1e
  401ef6:	fnstsw WORD PTR [eax]
  401ef8:	int    0xc3
  401efa:	mov    edx,0x6cfa6116
  401eff:	enter  0xf92c,0x67
  401f03:	push   DWORD PTR [edi-0x337fcfd2]
  401f09:	xor    eax,0x304d919c
  401f0e:	jno    0x401eb9
  401f10:	mov    bl,0xd2
  401f12:	aaa    
  401f13:	xchg   esp,edx
  401f15:	bound  esi,QWORD PTR [ebp-0x1585003a]
  401f1b:	jmp    0xb09e581c
  401f20:	and    ebx,edx
  401f22:	cld    
  401f23:	sbb    al,0x15
  401f25:	and    DWORD PTR [ecx],edi
  401f27:	add    edx,DWORD PTR [esi+0x2f]
  401f2a:	xchg   ebp,eax
  401f2b:	mov    ebp,0x82893a52
  401f30:	rol    DWORD PTR [ecx+eax*8+0x279f69a6],cl
  401f37:	cmp    ch,0xa8
  401f3a:	mov    edi,0x53114941
  401f3f:	out    0x3,al
  401f41:	lds    ebx,FWORD PTR [ecx-0x20]
  401f44:	outs   dx,DWORD PTR ds:[esi]
  401f45:	jmp    0x5f4b:0x6b3b136f
  401f4c:	dec    edx
  401f4d:	push   edi
  401f4e:	mov    ah,0x58
  401f50:	mov    esi,0xa6e45f90
  401f55:	dec    ebx
  401f56:	push   eax
  401f57:	jmp    0x401f83
  401f59:	mov    DWORD PTR ds:0x34ad8ab6,eax
  401f5f:	stos   DWORD PTR es:[edi],eax
  401f60:	push   es
  401f61:	xchg   ebx,esi
  401f63:	xor    BYTE PTR ds:0xc8f13e47,0xfe
  401f6a:	and    ch,0xde
  401f6d:	dec    DWORD PTR [esi-0x4f]
  401f70:	sub    DWORD PTR [edx-0x5e121537],esi
  401f76:	xchg   ebx,eax
  401f77:	rcl    BYTE PTR [ecx-0x6dd7c692],cl
  401f7d:	in     eax,dx
  401f7e:	lahf   
  401f7f:	iret   
  401f80:	popa   
  401f81:	inc    DWORD PTR [ecx+0x4a]
  401f84:	ret    0xbfef
  401f87:	dec    esi
  401f88:	jge    0x401fa5
  401f8a:	repnz call 0xaaae:0x39ed699c
  401f92:	cwde   
  401f93:	xor    ecx,edx
  401f95:	rol    BYTE PTR [ebx-0x45b9c593],0x31
  401f9c:	jmp    0xb8c6:0xbd81a656
  401fa3:	jl     0x401f93
  401fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fa6:	push   cs
  401fa7:	push   esi
  401fa8:	cmp    DWORD PTR [ebx-0x52],eax
  401fab:	arpl   WORD PTR [eax],cx
  401fad:	jb     0x40202d
  401faf:	test   eax,0xc8a5d0c3
  401fb5:	push   cs
  401fb6:	cwde   
  401fb7:	leave  
  401fb8:	jne    0x401fcd
  401fba:	test   BYTE PTR [ebx+0x65],dl
  401fbd:	pop    esi
  401fbe:	sub    edi,DWORD PTR [ebp-0x6b4ffa6b]
  401fc4:	mov    edx,0x79e82ca1
  401fc9:	cmp    eax,0x2d18844c
  401fce:	dec    eax
  401fcf:	push   ecx
  401fd0:	and    eax,0xe78fae81
  401fd5:	jns    0x401f84
  401fd7:	arpl   sp,dx
  401fd9:	jns    0x402040
  401fdb:	adc    al,0x38
  401fdd:	enter  0x2e9f,0x17
  401fe1:	es and eax,0x62c62c62
  401fe7:	jmp    0x40201c
  401fe9:	cmp    eax,0xffbaf636
  401fee:	scas   al,BYTE PTR es:[edi]
  401fef:	loop   0x402059
  401ff1:	scas   al,BYTE PTR es:[edi]
  401ff2:	mov    ebp,0x9d541ae6
  401ff7:	imul   ebx,esi,0xffffffb8
  401ffa:	mov    dl,0xda
  401ffc:	mov    dh,0x22
  401ffe:	mov    bh,0x17
  402000:	mov    esp,0xcb365d78
  402005:	mov    ebp,DWORD PTR [ecx+esi*1-0x4a2be276]
  40200c:	cdq    
  40200d:	out    dx,eax
  40200e:	jbe    0x402070
  402010:	neg    bh
  402012:	sub    edx,DWORD PTR [eax+0x6d2a504]
  402018:	shl    DWORD PTR [ecx-0x42],cl
  40201b:	in     eax,0xab
  40201d:	fwait
  40201e:	cmp    al,0x87
  402020:	pop    eax
  402021:	fsub   DWORD PTR ds:0x317766d9
  402027:	sub    al,0xda
  402029:	dec    esp
  40202a:	and    bh,cl
  40202c:	or     ecx,DWORD PTR [eax-0x2c]
  40202f:	sbb    al,0xfd
  402031:	pop    eax
  402032:	les    esi,FWORD PTR [ebp+ebp*4-0x7e]
  402036:	add    al,0x88
  402038:	ins    BYTE PTR es:[edi],dx
  402039:	xlat   BYTE PTR ds:[ebx]
  40203a:	sbb    BYTE PTR [edi-0xb82fd91],ch
  402040:	test   ch,dh
  402042:	push   ds
  402043:	push   ecx
  402044:	xchg   BYTE PTR [edi+0x24a90db3],dh
  40204a:	push   ss
  40204b:	mov    dh,0x5f
  40204d:	push   cs
  40204e:	xchg   DWORD PTR [ebx+0x24],esp
  402051:	push   edi
  402052:	xchg   esp,eax
  402053:	pop    ds
  402054:	popf   
  402055:	inc    ebx
  402056:	inc    ebx
  402057:	xchg   ebx,eax
  402058:	fcom   st(1)
  40205a:	mov    ebp,0xcabca69b
  40205f:	or     ecx,ebp
  402061:	hlt    
  402062:	out    dx,al
  402063:	sbb    edi,eax
  402065:	mov    ebp,0x88f17c1c
  40206a:	sub    esi,DWORD PTR [eax+0x61feec62]
  402070:	pusha  
  402071:	xchg   dl,ch
  402073:	jp     0x402098
  402075:	push   edx
  402076:	lock test DWORD PTR [ebp-0x52f9de63],0x14104232
  402081:	push   ebx
  402082:	les    esp,FWORD PTR [ecx-0xdb8b59c]
  402088:	mov    WORD PTR [ecx+esi*8],ss
  40208b:	push   cs
  40208c:	mov    ch,0x75
  40208e:	popf   
  40208f:	clc    
  402090:	fucomi st,st(4)
  402092:	call   0x2319:0xb05bcee9
  402099:	xchg   ebx,eax
  40209a:	jmp    0x402085
  40209c:	shl    BYTE PTR [ebp+edx*8+0x15895260],cl
  4020a3:	pushf  
  4020a4:	fst    QWORD PTR [ecx]
  4020a6:	(bad)  
  4020a7:	pusha  
  4020a8:	pop    esp
  4020a9:	stc    
  4020aa:	dec    ebx
  4020ab:	inc    esp
  4020ac:	dec    ecx
  4020ad:	adc    al,0x90
  4020af:	loopne 0x40210a
  4020b1:	or     ebx,DWORD PTR [ebx]
  4020b3:	pushf  
  4020b4:	ds inc edx
  4020b6:	test   DWORD PTR [eax-0x52],0xb77444c5
  4020bd:	lock addr16 push 0x63
  4020c1:	lock and ebx,eax
  4020c4:	jae    0xe36388e
  4020ca:	scas   al,BYTE PTR es:[edi]
  4020cb:	mov    ebx,0x159c7303
  4020d0:	mov    eax,0xd8f25623
  4020d5:	mov    dl,0xbf
  4020d7:	inc    esi
  4020d8:	jno    0x4020ec
  4020da:	jge    0x40213d
  4020dc:	sbb    ebx,DWORD PTR [esi-0x2]
  4020df:	imul   esi,DWORD PTR [ebx+0xa2fcd8b],0xffffffef
  4020e6:	sub    al,0x39
  4020e8:	in     eax,0x21
  4020ea:	lods   eax,DWORD PTR ds:[esi]
  4020eb:	xchg   dx,ax
  4020ed:	addr16 jns 0x402118
  4020f0:	dec    edi
  4020f1:	imul   eax,DWORD PTR [edx+0x43],0xffffffca
  4020f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020f6:	maxps  xmm1,XMMWORD PTR ss:0xdd70b62d
  4020fe:	xor    DWORD PTR [ecx+edx*4-0x50],eax
  402102:	popa   
  402103:	cs jbe 0x402104
  402106:	xor    dl,BYTE PTR [edi-0x7ee7e267]
  40210c:	fwait
  40210d:	ss iret 
  40210f:	mov    edi,DWORD PTR [eax-0x5]
  402112:	add    BYTE PTR [ecx-0x2],dh
  402115:	test   DWORD PTR [ecx+0x39],esp
  402118:	pop    eax
  402119:	jmp    0x402164
  40211b:	jns    0x402173
  40211d:	jmp    0xc8b3319c
  402122:	mov    dh,0x0
  402124:	adc    edi,DWORD PTR [ebx-0x4f]
  402127:	mov    bl,0xf0
  402129:	adc    al,0x91
  40212b:	xchg   edx,eax
  40212c:	xor    DWORD PTR [edx-0x41],eax
  40212f:	ds inc edi
  402131:	push   esp
  402132:	dec    edx
  402133:	push   edi
  402134:	into   
  402135:	jg     0x402174
  402137:	ret    
  402138:	scas   al,BYTE PTR es:[edi]
  402139:	in     eax,dx
  40213a:	or     bl,dl
  40213c:	or     dl,BYTE PTR [eax+0x73]
  40213f:	add    cl,bh
  402141:	imul   ebx,DWORD PTR [eax-0x42b4a9ad],0xf49ba3f4
  40214b:	sbb    al,0x48
  40214d:	(bad)  
  40214e:	jle    0x4020e2
  402150:	(bad)
  402153:	or     al,0x8d
  402155:	outs   dx,BYTE PTR ds:[esi]
  402156:	cmp    ebp,ebx
  402158:	dec    ebx
  402159:	sub    ebp,edi
  40215b:	pop    edx
  40215c:	and    DWORD PTR [ecx],ecx
  40215e:	add    BYTE PTR [edi-0x36],0xb4
  402162:	xor    eax,0xc0c3c1fe
  402167:	addr16 mov ecx,esp
  40216a:	hlt    
  40216b:	fsubr  DWORD PTR [esi]
  40216d:	stos   BYTE PTR es:[edi],al
  40216e:	jl     0x402185
  402170:	das    
  402171:	pop    ebp
  402172:	add    al,0x62
  402174:	(bad)  
  402175:	cmp    BYTE PTR [edi],al
  402177:	out    dx,al
  402178:	push   edx
  402179:	cmp    al,0x1e
  40217b:	mov    ch,0x14
  40217d:	scas   al,BYTE PTR es:[edi]
  40217e:	sub    cl,cl
  402180:	daa    
  402181:	jno    0x402157
  402183:	push   ds
  402184:	adc    eax,0x3a58a618
  402189:	pop    ebx
  40218a:	loopne 0x40220a
  40218c:	lahf   
  40218d:	dec    edx
  40218e:	lahf   
  40218f:	ffreep st(5)
  402191:	mov    edx,0x2a223eaf
  402196:	fwait
  402197:	test   DWORD PTR [ebp+0x2b],esi
  40219a:	call   0x2a20:0x457b7156
  4021a1:	xor    ebp,ebx
  4021a3:	jp     0x4021e6
  4021a5:	pop    ebx
  4021a6:	mov    esp,0xb6f41177
  4021ab:	sub    eax,0xc2f6c707
  4021b0:	jge    0x402147
  4021b2:	scas   eax,DWORD PTR es:[edi]
  4021b3:	hlt    
  4021b4:	xchg   esp,eax
  4021b5:	mov    cl,0x61
  4021b7:	ficom  WORD PTR [ebx-0x7e]
  4021ba:	push   0xffffff87
  4021bc:	fiadd  WORD PTR [ebx]
  4021be:	ins    BYTE PTR es:[edi],dx
  4021bf:	int3   
  4021c0:	scas   eax,DWORD PTR es:[edi]
  4021c1:	ficomp WORD PTR [esi+0x416ed474]
  4021c7:	sti    
  4021c8:	enter  0xebe2,0x5a
  4021cc:	shr    eax,0x5e
  4021cf:	fs xor edx,esi
  4021d2:	retf   
  4021d3:	jae    0x4021e6
  4021d5:	cli    
  4021d6:	push   ebx
  4021d7:	fisubr WORD PTR [ebx-0xb]
  4021da:	aas    
  4021db:	or     DWORD PTR [edi+0x7c],eax
  4021de:	xlat   BYTE PTR ds:[ebx]
  4021df:	sbb    ch,BYTE PTR [ebp-0x69]
  4021e2:	shl    DWORD PTR [edx-0xf5a3152],1
  4021e8:	jmp    0x6c93c9f
  4021ed:	cwde   
  4021ee:	mov    esi,0xe903dc6e
  4021f3:	jecxz  0x40219c
  4021f5:	pop    edx
  4021f6:	cmp    edi,DWORD PTR ds:0x8bad70ef
  4021fc:	es iret 
  4021fe:	mov    edx,ebx
  402200:	push   ebx
  402201:	mov    ecx,0x89ab7c1b
  402206:	das    
  402207:	test   BYTE PTR [eax-0x6c1d713e],dh
  40220d:	xchg   esp,eax
  40220e:	clc    
  40220f:	push   esp
  402210:	std    
  402211:	mov    cl,0x9e
  402213:	scas   eax,DWORD PTR es:[edi]
  402214:	mov    DWORD PTR [edi+edi*8-0x52],ebx
  402218:	leave  
  402219:	int3   
  40221a:	inc    edx
  40221b:	push   ecx
  40221c:	xor    cl,BYTE PTR [edx-0xfa7fecc]
  402222:	test   eax,0x5f98bbe
  402227:	int3   
  402228:	(bad)  
  402229:	and    BYTE PTR [esi],ch
  40222b:	ret    
  40222c:	xor    al,0x1e
  40222e:	ins    DWORD PTR es:[edi],dx
  40222f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402230:	add    bl,BYTE PTR [esi]
  402232:	sar    DWORD PTR [eax-0x6b118325],cl
  402238:	pop    ss
  402239:	mov    DWORD PTR [ebp-0x724ee272],ebp
  40223f:	xor    cl,dh
  402241:	sbb    ebx,DWORD PTR [eax]
  402243:	add    DWORD PTR [esi+0x3b76813d],edx
  402249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40224a:	into   
  40224b:	xchg   BYTE PTR [esi],cl
  40224d:	and    eax,0xac722013
  402252:	pop    ds
  402253:	test   ah,dh
  402255:	imul   edx,esp,0xe
  402258:	aad    0x9
  40225a:	mov    dh,0x28
  40225c:	mov    edx,0xb272e65e
  402261:	test   ecx,0xe8799a10
  402267:	imul   ebp,DWORD PTR [ecx-0x13],0xc68eb0bf
  40226e:	and    ch,BYTE PTR [ecx+eiz*1+0x6f]
  402272:	jmp    DWORD PTR [ebx]
  402274:	icebp  
  402275:	add    DWORD PTR fs:[ecx-0x51],esp
  402279:	call   0xb906:0x5998865a
  402280:	jmp    0x402264
  402282:	cli    
  402283:	mov    edi,0x94bc5f83
  402288:	add    al,0x65
  40228a:	stc    
  40228b:	jo     0x402283
  40228d:	fsub   st,st(5)
  40228f:	sbb    dl,al
  402291:	and    al,0x17
  402293:	dec    ebp
  402294:	cmp    DWORD PTR [ebp-0x7e],esp
  402297:	adc    ch,bl
  402299:	jp     0x4022cf
  40229b:	jnp    0x4022db
  40229d:	call   0x36df:0x3636363
  4022a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022a5:	mov    dh,0x8b
  4022a7:	scas   eax,DWORD PTR es:[edi]
  4022a8:	stc    
  4022a9:	idiv   BYTE PTR [edi]
  4022ab:	mov    ss,esi
  4022ad:	inc    ecx
  4022ae:	shl    DWORD PTR [edx],cl
  4022b0:	aad    0x24
  4022b2:	bound  esi,QWORD PTR [ebx+0x4b52dbbf]
  4022b8:	sub    dl,ch
  4022ba:	(bad)  
  4022bb:	xor    bh,dl
  4022bd:	ds xchg ebp,eax
  4022bf:	add    dl,BYTE PTR [eax+0x6c]
  4022c2:	test   BYTE PTR [eax+0x5e],dh
  4022c5:	and    DWORD PTR [eax+0xd],edx
  4022c8:	jo     0x4022b5
  4022ca:	mov    ds:0xb96a8808,eax
  4022cf:	mov    esi,0xc396591c
  4022d4:	sbb    ch,bl
  4022d6:	dec    edx
  4022d7:	(bad)  
  4022d8:	adc    ch,ch
  4022da:	into   
  4022db:	dec    esp
  4022dc:	adc    al,0x56
  4022de:	scas   eax,DWORD PTR es:[edi]
  4022df:	mov    WORD PTR [edx-0x77],fs
  4022e2:	push   cs
  4022e3:	or     BYTE PTR [edi],0x60
  4022e6:	mov    bh,0xa8
  4022e8:	mov    al,ds:0xdd320563
  4022ed:	sbb    dl,BYTE PTR [esi-0x5acfa60a]
  4022f3:	adc    al,0xda
  4022f5:	pusha  
  4022f6:	jns    0x40232c
  4022f8:	out    0xec,al
  4022fa:	xor    al,0x98
  4022fc:	stos   DWORD PTR es:[edi],eax
  4022fd:	ret    
  4022fe:	push   ds
  4022ff:	push   ss
  402300:	addr16 push ss
  402302:	mov    ah,BYTE PTR [edi+ebp*4+0x5d]
  402306:	pop    edx
  402307:	mov    eax,ds:0x92a343d9
  40230c:	push   cs
  40230d:	or     ebp,0x57
  402310:	or     bl,ch
  402312:	jae    0x4022a7
  402314:	mov    WORD PTR [edx+0x1001ca06],ds
  40231a:	int    0x78
  40231c:	fidivr WORD PTR ds:0x8749f0b3
  402323:	adc    al,0xe9
  402325:	add    bh,BYTE PTR [ebx+0x5b]
  402328:	add    eax,0x40094723
  40232d:	mov    ebp,0xf9ab0ef9
  402332:	cld    
  402333:	sub    BYTE PTR [ebx+0x78462c33],0xc3
  40233a:	dec    ecx
  40233b:	in     al,0x60
  40233d:	mov    ecx,0x7b4eed0d
  402342:	dec    esi
  402343:	and    DWORD PTR [edx+0x31d7dc77],ecx
  402349:	int3   
  40234a:	fs (bad) 
  40234c:	sti    
  40234d:	dec    ecx
  40234e:	push   0x28dbb179
  402353:	jge    0x4023cc
  402355:	ret    
  402356:	dec    esi
  402357:	test   DWORD PTR [edi],edx
  402359:	sbb    esi,DWORD PTR [ebp+0x7a]
  40235c:	push   edx
  40235d:	outs   dx,DWORD PTR ds:[esi]
  40235e:	sub    eax,0x39e57212
  402363:	push   0xffffffb4
  402365:	out    0xd1,al
  402367:	mov    ds:0x556dbb16,al
  40236c:	je     0x402381
  40236e:	mov    bh,0xc0
  402370:	mov    esp,0x8ce33657
  402375:	or     eax,DWORD PTR [edx]
  402377:	cld    
  402378:	aas    
  402379:	inc    ebx
  40237a:	adc    eax,0x6141cf97
  40237f:	sub    ebx,ecx
  402381:	cmp    ebp,eax
  402383:	pop    ebp
  402384:	jl     0x4023dc
  402386:	jae    0x402318
  402388:	inc    eax
  402389:	add    BYTE PTR [ebx-0xde72cf7],ah
  40238f:	xchg   esi,eax
  402390:	icebp  
  402391:	jbe    0x402336
  402393:	iret   
  402394:	jmp    0xf252:0x8d83c0f
  40239b:	xor    BYTE PTR [edi+0x64],cl
  40239e:	and    edi,ecx
  4023a0:	test   al,0xb
  4023a2:	cli    
  4023a3:	jae    0x40234b
  4023a5:	push   es
  4023a6:	les    eax,FWORD PTR [esi]
  4023a8:	xchg   esi,eax
  4023a9:	mov    bh,0xe9
  4023ab:	bnd ret 0x669f
  4023af:	js     0x402378
  4023b1:	adc    al,0x21
  4023b3:	sub    BYTE PTR [ebp+0x410bea3],0xb2
  4023ba:	inc    edx
  4023bb:	push   edx
  4023bc:	(bad)  
  4023bd:	and    cl,BYTE PTR [ecx*4+0x775d3c09]
  4023c4:	scas   eax,DWORD PTR es:[edi]
  4023c5:	push   edi
  4023c6:	jl     0x402434
  4023c8:	lods   eax,DWORD PTR ds:[esi]
  4023c9:	mov    es,WORD PTR [ebx-0x36]
  4023cc:	out    0x89,al
  4023ce:	jecxz  0x40238d
  4023d0:	popa   
  4023d1:	loopne 0x402439
  4023d3:	popf   
  4023d4:	ror    BYTE PTR [eax+0x46],0xb7
  4023d8:	push   ds
  4023d9:	or     dl,BYTE PTR [ebp-0x198e33f9]
  4023df:	and    eax,0x16b7283f
  4023e4:	adc    al,0xdd
  4023e6:	or     ah,BYTE PTR [eax-0x7e]
  4023e9:	sbb    al,0x1b
  4023eb:	xor    BYTE PTR [ebx],0xb1
  4023ee:	dec    edi
  4023ef:	push   ss
  4023f0:	inc    ebp
  4023f1:	shl    dh,cl
  4023f3:	jae    0x402468
  4023f5:	jb     0x4023c5
  4023f7:	test   BYTE PTR [edi-0x32a3686b],ah
  4023fd:	loopne 0x4023ad
  4023ff:	ret    
  402400:	sub    eax,0xb92c87bc
  402405:	add    eax,0xc1b38255
  40240a:	dec    edi
  40240b:	ja     0x4023fe
  40240d:	push   ecx
  40240e:	mov    ah,0xab
  402410:	jne    0x402474
  402412:	inc    esi
  402413:	mov    edi,DWORD PTR [ebx+0x5]
  402416:	cdq    
  402417:	and    DWORD PTR [ecx],0x71eb869
  40241d:	and    ah,ch
  40241f:	sahf   
  402420:	sbb    BYTE PTR ds:0xed5b694d,bh
  402426:	ret    0x9c97
  402429:	lods   eax,DWORD PTR ds:[esi]
  40242a:	int    0xcb
  40242c:	ja     0x40248e
  40242e:	retf   
  40242f:	mov    ah,BYTE PTR [ebx]
  402431:	push   ebp
  402432:	push   es
  402433:	lock aas 
  402435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402436:	fcom   DWORD PTR [edi-0x77628b48]
  40243c:	rcr    DWORD PTR [edx-0x3b08a639],1
  402442:	push   esp
  402443:	rol    DWORD PTR [edx-0x85fc55e],cl
  402449:	pop    esp
  40244a:	test   edi,edi
  40244c:	xor    DWORD PTR [ebp+0x36c25f65],ecx
  402452:	inc    esp
  402453:	push   ebx
  402454:	std    
  402455:	dec    ebp
  402456:	inc    ebx
  402457:	aam    0x74
  402459:	mov    esi,eax
  40245b:	cmp    edi,DWORD PTR [ecx+0x418d25ad]
  402461:	sbb    DWORD PTR [ebp+0x71],0xf5b90ce
  402468:	mov    al,0x76
  40246a:	push   cs
  40246b:	adc    BYTE PTR [ebp+0xaf561ea],bh
  402471:	jp     0x402431
  402473:	mov    eax,ds:0xeb2b3ab7
  402478:	lock xchg DWORD PTR [eax-0x77],ecx
  40247c:	sub    DWORD PTR [edx-0x69],edi
  40247f:	mov    ebp,fs
  402481:	pop    eax
  402482:	call   0xa5a6:0xeb31bd7d
  402489:	sbb    DWORD PTR [edi+0xef73cf1],eax
  40248f:	jp     0x4024bd
  402491:	xchg   ebx,eax
  402492:	les    ebp,FWORD PTR [edi+0x3a4a22d7]
  402498:	jge    0x40246a
  40249a:	mov    eax,ds:0xff4f2ba
  40249f:	sub    ebx,DWORD PTR [edx]
  4024a1:	into   
  4024a2:	adc    esp,edi
  4024a4:	push   ds
  4024a5:	adc    eax,0xd50357c0
  4024aa:	mov    esp,0x1f0c6d6f
  4024af:	mov    DWORD PTR [ecx],edx
  4024b1:	fcom   st(0)
  4024b3:	push   0x3bd12da4
  4024b8:	jmp    0x4b8c:0x34e7a858
  4024bf:	mov    cl,0xc3
  4024c1:	fisubr DWORD PTR [eax-0x27]
  4024c4:	mov    dh,0xe0
  4024c6:	shr    DWORD PTR ds:0x94e22365,cl
  4024cc:	pop    ebx
  4024cd:	mov    ds:0x34e503df,al
  4024d2:	push   ebx
  4024d3:	ins    BYTE PTR es:[edi],dx
  4024d4:	mov    ds:0x6c691b8c,al
  4024d9:	div    BYTE PTR [ebp+0x1d692f82]
  4024df:	cs scas eax,DWORD PTR es:[edi]
  4024e1:	mov    ds,WORD PTR [ecx-0x2234294a]
  4024e7:	js     0x402565
  4024e9:	sbb    DWORD PTR [edi-0x6f],ebx
  4024ec:	adc    DWORD PTR [edi],esp
  4024ee:	push   0x1506adca
  4024f3:	outs   dx,DWORD PTR ds:[esi]
  4024f4:	cmp    ecx,DWORD PTR [eax+0x44]
  4024f7:	in     eax,0x31
  4024f9:	outs   dx,DWORD PTR ds:[esi]
  4024fa:	mov    dl,0x6d
  4024fc:	and    eax,0xb1820360
  402501:	add    BYTE PTR [esi],0xed
  402504:	push   ds
  402505:	push   ss
  402506:	retf   0xd6b3
  402509:	cmp    bl,BYTE PTR [ecx-0x3ee27cd3]
  40250f:	pop    ss
  402510:	inc    ecx
  402511:	in     al,0x1
  402513:	mov    dh,0xb8
  402515:	js     0x4024ba
  402517:	dec    ecx
  402518:	int3   
  402519:	add    DWORD PTR ds:0xbc255c0,edx
  40251f:	in     eax,0x5f
  402521:	push   esp
  402522:	xchg   ebx,eax
  402523:	xor    ah,BYTE PTR [ecx-0x3e45d340]
  402529:	inc    ebx
  40252a:	pop    ds
  40252b:	sub    al,0x24
  40252d:	add    BYTE PTR ds:0x5a1e168c,al
  402533:	test   BYTE PTR [edi+0x4f],0x15
  402537:	inc    ebx
  402538:	pop    es
  402539:	cld    
  40253a:	repnz inc esi
  40253c:	pop    ecx
  40253d:	dec    esi
  40253e:	jg     0x40254c
  402540:	test   al,0xf3
  402542:	xchg   DWORD PTR [ebx],edi
  402544:	shl    DWORD PTR [ebp+ebp*4-0x43],1
  402548:	(bad)  
  402549:	mov    edi,0xc1ba042e
  40254e:	push   esi
  40254f:	dec    ebp
  402550:	sbb    al,0xf9
  402552:	mov    ah,0xe3
  402554:	pop    esi
  402555:	test   BYTE PTR [esi-0x29],dl
  402558:	clc    
  402559:	jne    0x402575
  40255b:	add    bh,BYTE PTR [eax+0x100b4e72]
  402561:	aas    
  402562:	inc    esp
  402563:	ins    BYTE PTR es:[edi],dx
  402564:	adc    eax,0xc1f875e4
  402569:	add    eax,0x8c12fbba
  40256e:	cmp    BYTE PTR [esi-0x25728e2c],ah
  402574:	dec    ecx
  402575:	xor    al,0x3b
  402577:	test   eax,0xd5dcaf97
  40257c:	adc    DWORD PTR [ecx+0x4716a1c1],ebx
  402582:	icebp  
  402583:	cli    
  402584:	int3   
  402585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402586:	lds    edi,FWORD PTR [esi+0x74c2d9af]
  40258c:	mov    esi,0xb9c2587f
  402591:	dec    edx
  402592:	mov    ebp,0x920a5aba
  402597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402598:	adc    eax,0x1228410b
  40259d:	cs or  al,0x8f
  4025a0:	mov    esi,0xd9f88fb5
  4025a5:	(bad)  
  4025a6:	xor    ebp,DWORD PTR [edi+0x6a]
  4025a9:	pop    eax
  4025aa:	aas    
  4025ab:	into   
  4025ac:	(bad)  
  4025ad:	pop    ebp
  4025ae:	cmc    
  4025af:	nop
  4025b0:	(bad)  
  4025b1:	frstor [edi+eax*2-0x1b358bb2]
  4025b8:	lahf   
  4025b9:	(bad)  
  4025ba:	dec    esi
  4025bb:	and    al,0x20
  4025be:	test   DWORD PTR [edx-0x587b0689],esi
  4025c4:	leave  
  4025c5:	mov    bh,0x53
  4025c7:	(bad)  
  4025c8:	sti    
  4025c9:	sbb    BYTE PTR [ebx],0xe7
  4025cc:	rol    BYTE PTR [ecx-0x461e080],1
  4025d2:	xor    al,0x46
  4025d4:	add    ebp,DWORD PTR [eax-0x17]
  4025d7:	repnz pop es
  4025d9:	jns    0x4025dd
  4025db:	push   edx
  4025dc:	cvtps2pd xmm5,QWORD PTR ds:0xee435e27
  4025e3:	cmp    dl,al
  4025e5:	mov    al,ds:0x1a26ef99
  4025ea:	pop    esp
  4025eb:	jno    0x4025a9
  4025ed:	add    BYTE PTR [ecx-0x54],ch
  4025f0:	hlt    
  4025f1:	call   0x4cc2:0x29730182
  4025f8:	cmp    dh,dh
  4025fa:	push   esp
  4025fb:	sub    BYTE PTR [eax-0x12],dh
  4025fe:	test   BYTE PTR [edi-0x11ad2e46],cl
  402604:	rcr    dl,0xce
  402607:	adc    dl,BYTE PTR [edx]
  402609:	or     DWORD PTR [eax+ebp*8],esp
  40260c:	adc    ebx,DWORD PTR [ebx-0x40]
  40260f:	mov    ebx,0xe12d7265
  402614:	sbb    dl,BYTE PTR [ecx-0x16]
  402617:	inc    eax
  402618:	popf   
  402619:	mov    ebx,0xea88456e
  40261e:	xor    al,0x11
  402621:	and    eax,0x6fb9a2f8
  402626:	fdiv   st,st(0)
  402628:	mov    es:0x26325282,eax
  40262e:	sub    edx,eax
  402630:	lods   al,BYTE PTR ds:[esi]
  402631:	fwait
  402632:	test   al,0x27
  402634:	xor    ecx,DWORD PTR [edx+edx*8-0x5b]
  402638:	xchg   ecx,eax
  402639:	sub    BYTE PTR [edx],ah
  40263b:	pop    ecx
  40263c:	sub    dl,bl
  40263e:	popf   
  40263f:	mov    ss,WORD PTR [edx+0x27]
  402642:	rol    DWORD PTR [esi+0x1867b34a],1
  402648:	ror    BYTE PTR [eax+0x4c54255e],1
  40264e:	mov    ah,0xa4
  402650:	inc    esp
  402651:	mov    eax,0x3a99b04c
  402656:	mov    bl,0x3c
  402658:	add    bl,BYTE PTR [edi+0x24020451]
  40265e:	out    dx,al
  40265f:	cmp    edi,DWORD PTR [edi-0xb16f32b]
  402665:	ins    DWORD PTR es:[edi],dx
  402666:	jae    0x4026c9
  402668:	test   BYTE PTR [esi-0x11ef476e],dl
  40266e:	and    ecx,ebp
  402670:	fld    TBYTE PTR [edi+0x4817cf36]
  402676:	and    bl,BYTE PTR [ebx+0x72]
  402679:	pushf  
  40267a:	bound  ecx,QWORD PTR [esi]
  40267c:	sbb    al,0xea
  40267e:	imul   ebx,DWORD PTR [esi-0x5f],0xffffffa1
  402682:	icebp  
  402683:	out    0x8e,al
  402685:	cmp    dl,BYTE PTR [edi]
  402687:	dec    esi
  402688:	push   ecx
  402689:	loope  0x402614
  40268b:	jo     0x4026ea
  40268d:	cwde   
  40268e:	inc    ebx
  40268f:	sub    edx,ecx
  402691:	jo     0x4026a9
  402693:	add    esi,DWORD PTR [edx-0x29]
  402696:	sub    BYTE PTR [esi+0x5],dl
  402699:	lea    ebx,[edi-0x407a5a5]
  40269f:	jmp    0xa4d313e7
  4026a4:	imul   edi,DWORD PTR [esi],0x6b709342
  4026aa:	mov    esp,DWORD PTR [ebp-0x4cccc2a3]
  4026b0:	js     0x4026ad
  4026b2:	aas    
  4026b3:	out    dx,al
  4026b4:	xchg   esp,eax
  4026b5:	mov    edi,0x77fedef0
  4026ba:	aad    0x6e
  4026bc:	outs   dx,BYTE PTR ds:[esi]
  4026bd:	mov    edi,es
  4026bf:	repnz sbb ebp,DWORD PTR [ebp+edx*4+0x360b54a0]
  4026c7:	cmp    DWORD PTR [ebx+0xa],ebp
  4026ca:	adc    edi,DWORD PTR [edi]
  4026cc:	pop    edx
  4026cd:	dec    esi
  4026ce:	inc    esi
  4026cf:	stos   DWORD PTR es:[edi],eax
  4026d0:	push   cs
  4026d1:	xchg   ebx,eax
  4026d2:	push   ss
  4026d3:	fcom   st(3)
  4026d5:	push   0xffffffb2
  4026d7:	mov    dl,al
  4026d9:	jae    0x4026a8
  4026db:	push   ecx
  4026dc:	add    eax,0xbb0ac12c
  4026e1:	mov    al,ds:0x14f7544e
  4026e6:	rol    ecx,cl
  4026e8:	adc    DWORD PTR [esi+0x72],edi
  4026eb:	sub    ah,0xe1
  4026ee:	outs   dx,DWORD PTR ds:[esi]
  4026ef:	aad    0xe7
  4026f1:	cmp    bh,ah
  4026f3:	pop    esi
  4026f4:	dec    edi
  4026f5:	pop    ecx
  4026f6:	out    dx,al
  4026f7:	jge    0x4026d6
  4026f9:	int    0x61
  4026fb:	lods   eax,DWORD PTR ds:[esi]
  4026fc:	scas   eax,DWORD PTR es:[edi]
  4026fd:	adc    esp,DWORD PTR [edx]
  4026ff:	adc    cl,BYTE PTR [eax]
  402701:	in     eax,dx
  402702:	test   BYTE PTR [ecx-0x68],al
  402705:	test   DWORD PTR [esi+0x632e049d],esp
  40270b:	test   BYTE PTR [ecx-0x2723d2a7],0x83
  402712:	je     0x402787
  402714:	call   0xa347495
  402719:	pop    esp
  40271a:	mov    ss:0xedd527fd,eax
  402720:	jb     0x40271a
  402722:	ficomp DWORD PTR [ebp-0x37e50aa7]
  402728:	stos   BYTE PTR es:[edi],al
  402729:	mov    ah,BYTE PTR [esi-0x12694a]
  40272f:	xchg   edx,eax
  402730:	push   edi
  402731:	push   edx
  402732:	push   edi
  402733:	mov    ah,0x30
  402735:	jle    0x4026ee
  402737:	lock cmp eax,0x3b2c9450
  40273d:	sbb    al,0xbb
  40273f:	jge    0x40270f
  402741:	jne    0x4027a2
  402743:	adc    eax,0x526d5fad
  402748:	pop    ebx
  402749:	inc    ebx
  40274a:	mov    dl,0x92
  40274c:	lock leave 
  40274e:	ret    
  40274f:	pusha  
  402750:	fwait
  402751:	and    BYTE PTR [ebx+0x47],dh
  402754:	mov    ah,0x56
  402756:	ins    BYTE PTR es:[edi],dx
  402757:	add    ah,BYTE PTR [edx]
  402759:	lahf   
  40275a:	retf   0xeaff
  40275d:	js     0x4027b2
  40275f:	adc    DWORD PTR [esi+edi*2+0x7a],0x35
  402764:	dec    eax
  402765:	(bad)  
  402766:	jne    0x40273c
  402768:	mov    BYTE PTR [edi-0x49],ah
  40276b:	cs push 0xf825796d
  402771:	push   esi
  402772:	lods   eax,DWORD PTR ds:[esi]
  402773:	dec    ebp
  402774:	or     bl,BYTE PTR [eax+edi*2-0x4b]
  402778:	popa   
  402779:	pop    ds
  40277a:	in     eax,dx
  40277b:	in     al,0x2b
  40277d:	xchg   esp,eax
  40277e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40277f:	aam    0x56
  402781:	mov    ds:0xb73412d7,eax
  402786:	in     al,dx
  402787:	stos   BYTE PTR es:[edi],al
  402788:	inc    esi
  402789:	fnstsw WORD PTR [esi+edi*4-0x407e71b3]
  402790:	and    al,0x1e
  402792:	push   0x67
  402794:	pushf  
  402795:	pop    es
  402796:	popa   
  402797:	jne    0x4027ad
  402799:	dec    edi
  40279a:	mov    ds:0xf42c9b68,al
  40279f:	out    0x4,al
  4027a1:	and    ecx,ebx
  4027a3:	push   ss
  4027a4:	xchg   edx,eax
  4027a5:	or     bh,BYTE PTR fs:[ebx-0x1e7f6f56]
  4027ac:	scas   eax,DWORD PTR es:[edi]
  4027ad:	fdivrp st(3),st
  4027af:	fs out 0xe7,al
  4027b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b3:	in     al,0x75
  4027b5:	jae    0x4027fa
  4027b7:	mov    al,fs:0xdf5ac491
  4027bd:	mov    al,0xd3
  4027bf:	stos   DWORD PTR es:[edi],eax
  4027c0:	jne    0x402802
  4027c2:	adc    BYTE PTR [ecx-0x39f512f9],ch
  4027c8:	mov    ch,0xcd
  4027ca:	sar    dl,1
  4027cc:	idiv   DWORD PTR [ebx+edx*4-0x5]
  4027d0:	bound  edi,QWORD PTR ds:0x1cb88467
  4027d6:	fldenv [ecx-0x55]
  4027d9:	in     al,0xa8
  4027db:	outs   dx,BYTE PTR ds:[esi]
  4027dc:	(bad)  
  4027dd:	mov    dh,0x4d
  4027df:	mov    ?,WORD PTR [di-0x456a]
  4027e4:	mov    bh,al
  4027e6:	and    dh,BYTE PTR [edx+0x43]
  4027e9:	cs and dl,bh
  4027ec:	xor    DWORD PTR [edi+0x3f],ecx
  4027ef:	and    BYTE PTR [ebp+0x3e],cl
  4027f2:	mov    ebx,0x337752bb
  4027f7:	es out 0x9,al
  4027fa:	in     al,dx
  4027fb:	mov    al,ds:0x90c65c9e
  402800:	pop    edx
  402801:	retf   0xdeda
  402804:	das    
  402805:	in     al,0xb3
  402807:	lds    eax,FWORD PTR [edx+0x33]
  40280a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40280b:	xor    eax,0x37cf3732
  402810:	fbld   TBYTE PTR ds:0xa17b0f4f
  402816:	test   DWORD PTR [eiz*4+0x3741bbf9],eax
  40281d:	or     ch,BYTE PTR [eax+0x7]
  402820:	pop    esi
  402821:	mov    esi,0xdf20736b
  402826:	(bad)  
  402827:	cmp    BYTE PTR [eax+0x5a],dl
  40282a:	je     0x4027fc
  40282c:	mov    gs,WORD PTR [esp+edi*8-0x7639beef]
  402833:	dec    esp
  402834:	lods   eax,DWORD PTR ds:[esi]
  402835:	and    al,0x8c
  402837:	stos   DWORD PTR es:[edi],eax
  402838:	(bad)  [ecx]
  40283a:	std    
  40283b:	mov    ?,ebx
  40283d:	cmp    al,cl
  40283f:	fwait
  402840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402841:	fnstsw WORD PTR [eax-0x36]
  402844:	xchg   DWORD PTR [edx],eax
  402846:	or     DWORD PTR [ecx-0x451094a5],ecx
  40284c:	or     esi,DWORD PTR [ecx+0x63431aff]
  402852:	sti    
  402853:	inc    esp
  402854:	shl    BYTE PTR [esi],cl
  402856:	pop    esi
  402857:	jmp    0x63a5:0x1775c851
  40285e:	pop    eax
  40285f:	sub    dl,BYTE PTR ds:0x721f65ad
  402865:	repnz dec ebx
  402867:	adc    BYTE PTR [ebx],al
  402869:	fst    st(7)
  40286b:	(bad)  
  40286c:	sub    eax,0x96bd8faf
  402871:	or     eax,0x8d63a1f2
  402876:	add    edx,DWORD PTR [esi+eiz*8-0x76]
  40287a:	inc    ebx
  40287b:	fisubr DWORD PTR [eax-0x47]
  40287e:	test   eax,0xca67f976
  402883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402884:	and    al,0x33
  402886:	cmp    eax,0x830d98
  40288b:	cmp    dh,BYTE PTR [ebx]
  40288d:	xchg   ecx,eax
  40288e:	cmc    
  40288f:	sbb    DWORD PTR [edx-0x48224f2b],eax
  402895:	push   0x59
  402897:	pop    edi
  402898:	icebp  
  402899:	or     dh,dh
  40289b:	cmp    eax,0xaa2a4ad9
  4028a0:	xchg   BYTE PTR [ebx],ch
  4028a2:	mov    eax,ds:0x548fe4c7
  4028a7:	dec    ecx
  4028a8:	sub    DWORD PTR [ecx],ebx
  4028aa:	add    BYTE PTR [edi],bh
  4028ac:	and    al,0x84
  4028ae:	loope  0x402875
  4028b0:	outs   dx,DWORD PTR ds:[esi]
  4028b1:	repnz rcr edx,cl
  4028b4:	std    
  4028b5:	fild   QWORD PTR ds:0xe023ff1f
  4028bb:	les    ebp,FWORD PTR [eax-0x1d]
  4028be:	xor    bl,BYTE PTR [ebx+ebp*1-0x2c81073a]
  4028c5:	mov    edx,0xcf00eb44
  4028ca:	cmp    eax,0x62bf25f1
  4028cf:	sti    
  4028d0:	xor    bh,BYTE PTR [edx+0x67]
  4028d3:	xor    al,0xee
  4028d5:	ja     0x40285a
  4028d7:	imul   eax,ebp,0xa5902d58
  4028dd:	and    al,0xd9
  4028df:	in     al,dx
  4028e0:	loopne 0x4028f2
  4028e2:	iret   
  4028e3:	out    dx,al
  4028e4:	cli    
  4028e5:	aas    
  4028e6:	push   esi
  4028e7:	mov    al,ds:0x6450b3c2
  4028ec:	jge    0x40295c
  4028ee:	inc    dl
  4028f0:	jle    0x402903
  4028f2:	stc    
  4028f3:	test   eax,0x4cfdafe6
  4028f8:	pushf  
  4028f9:	fisub  DWORD PTR [ebx+0x6c376da5]
  4028ff:	mov    ecx,0x400259c1
  402904:	xor    dl,BYTE PTR [esi+ebx*4-0x3b]
  402908:	pop    esi
  402909:	test   BYTE PTR [eax+0x62],0x6b
  40290d:	outs   dx,BYTE PTR ds:[esi]
  40290e:	int3   
  40290f:	mov    BYTE PTR ds:0x6fd70953,ch
  402915:	sbb    esi,ecx
  402917:	int    0xb
  402919:	add    eax,0x27e5c1d2
  40291e:	mov    DWORD PTR [eax-0x7b],ebx
  402921:	fcomp  QWORD PTR [ebp-0x3b]
  402924:	inc    ecx
  402925:	jae    0x4028d4
  402927:	add    ecx,DWORD PTR [esi]
  402929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40292a:	(bad)
  40292e:	xor    BYTE PTR [eax-0x4fff2248],cl
  402934:	jp     0x402992
  402936:	mov    dl,0xf0
  402938:	mov    ah,BYTE PTR [eax+0x10444f2d]
  40293e:	das    
  40293f:	arpl   WORD PTR [ebp-0x1cd92968],ax
  402945:	jl     0x40291b
  402947:	and    ch,dh
  402949:	in     eax,0x46
  40294b:	sbb    al,0x9c
  40294d:	dec    edi
  40294e:	adc    esi,0x7f
  402951:	jge    0x402973
  402953:	out    0x5e,eax
  402955:	das    
  402956:	loop   0x402989
  402958:	mov    ds:0xde29bae0,al
  40295d:	das    
  40295e:	pushf  
  40295f:	fldenv [esi+0x27]
  402962:	ds push cs
  402964:	hlt    
  402965:	pop    edx
  402966:	ds daa 
  402968:	fs push eax
  40296a:	out    dx,al
  40296b:	(bad)  
  40296c:	retf   
  40296d:	(bad)  
  40296e:	mov    ds:0xec75fb7c,al
  402973:	mov    edx,0x3efe5225
  402978:	retf   0x9a3
  40297b:	push   cs
  40297c:	xchg   ebp,eax
  40297d:	mov    bh,0xde
  40297f:	jecxz  0x40293f
  402981:	xor    esp,esp
  402983:	mov    DWORD PTR [eax-0x22],ebx
  402986:	sbb    BYTE PTR [esi],ch
  402988:	or     BYTE PTR [ebp+0x16],bh
  40298b:	jbe    0x402911
  40298d:	dec    ebx
  40298e:	dec    ebp
  40298f:	outs   dx,DWORD PTR ds:[esi]
  402990:	inc    ecx
  402991:	mov    ah,0x2d
  402993:	in     al,dx
  402994:	jbe    0x4029d9
  402996:	out    0xb0,al
  402998:	sti    
  402999:	sbb    DWORD PTR [ebx+0x735f05ca],esp
  40299f:	push   ds
  4029a0:	cmc    
  4029a1:	xor    eax,0xc18791e7
  4029a6:	mov    bh,0xbf
  4029a8:	xchg   edx,eax
  4029a9:	pushf  
  4029aa:	jmp    0x438b:0x7da40895
  4029b1:	xchg   edi,eax
  4029b2:	outs   dx,DWORD PTR ds:[esi]
  4029b3:	add    eax,DWORD PTR [edi]
  4029b5:	xlat   BYTE PTR ds:[ebx]
  4029b6:	dec    ebp
  4029b7:	cwde   
  4029b8:	and    ebp,esp
  4029ba:	lea    ebx,[edx]
  4029bc:	neg    DWORD PTR [edi+0x634aad3d]
  4029c2:	aad    0x43
  4029c4:	cdq    
  4029c5:	mov    ecx,0x12f8fe4b
  4029ca:	sub    al,0x9f
  4029cc:	push   edx
  4029cd:	sti    
  4029ce:	aad    0x50
  4029d0:	out    dx,eax
  4029d1:	aas    
  4029d2:	popf   
  4029d3:	mov    dl,0xfc
  4029d5:	and    BYTE PTR [ebx-0x3f],0x88
  4029d9:	and    dl,BYTE PTR [edi]
  4029db:	popa   
  4029dc:	cwde   
  4029dd:	sbb    BYTE PTR [esi+0x1748c1a2],al
  4029e3:	sub    BYTE PTR [ebx-0x6ab3e817],bl
  4029e9:	mov    ch,0x7d
  4029eb:	cwde   
  4029ec:	dec    esp
  4029ed:	or     DWORD PTR [esi+0x5ce16e26],ebp
  4029f3:	sub    eax,0x52e4738a
  4029f8:	mov    DWORD PTR [eax-0x2f0ef94],esp
  4029fe:	aad    0xf1
  402a00:	pushf  
  402a01:	popf   
  402a02:	mov    al,ds:0xab255289
  402a07:	imul   eax,DWORD PTR [ebp-0x5f],0x72febdff
  402a0e:	adc    eax,0x7dce1150
  402a13:	jmp    0x5d5e7a
  402a18:	(bad)
  402a1d:	push   eax
  402a1e:	and    ebp,DWORD PTR [eax-0x1f747a33]
  402a24:	sub    al,0x30
  402a26:	inc    esi
  402a27:	sub    ebp,esp
  402a29:	arpl   WORD PTR [ecx],bx
  402a2b:	mov    eax,0xa5aa6f8
  402a30:	imul   eax,DWORD PTR [ebx-0x53fda001],0xffffffc6
  402a37:	mov    esp,0x21f20713
  402a3c:	adc    al,0x34
  402a3e:	mov    esi,0xcd10a059
  402a43:	add    BYTE PTR [eax+0x446360f0],0xd0
  402a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a4b:	(bad)  
  402a4c:	pop    ebp
  402a4d:	nop
  402a4e:	js     0x402a2f
  402a50:	mov    al,ds:0xcd74ce13
  402a55:	je     0x402a28
  402a57:	pop    ecx
  402a58:	and    al,0x92
  402a5a:	cld    
  402a5b:	xchg   esp,eax
  402a5c:	pusha  
  402a5d:	mov    ecx,0x8c8014d9
  402a62:	sub    eax,DWORD PTR [edx+0x117cc8d8]
  402a68:	in     eax,dx
  402a69:	xor    ebp,DWORD PTR [edx+0x56]
  402a6c:	pop    esi
  402a6d:	push   DWORD PTR [edi-0x336c7633]
  402a73:	jno    0x402ad3
  402a75:	test   eax,0xbcf6e414
  402a7a:	jnp    0x402aea
  402a7c:	lds    ebp,FWORD PTR [edx-0x2b]
  402a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a80:	scas   al,BYTE PTR es:[edi]
  402a81:	test   DWORD PTR [eax],ecx
  402a83:	xor    eax,0x4c0a4126
  402a88:	pop    ebx
  402a89:	jo     0x402a98
  402a8b:	test   al,0x4a
  402a8d:	rcl    DWORD PTR [eax+0x68],1
  402a90:	jae    0x402a66
  402a92:	cmp    DWORD PTR [edx+0x12],ecx
  402a95:	mov    al,ds:0x1dab8bac
  402a9a:	stos   BYTE PTR es:[edi],al
  402a9b:	ret    0xfdeb
  402a9e:	sti    
  402a9f:	cmp    esi,esp
  402aa1:	rcr    DWORD PTR [edi],0x9b
  402aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aa5:	mov    ds:0x51b70bff,eax
  402aaa:	inc    esp
  402aab:	jmp    0x2f0887f4
  402ab0:	inc    DWORD PTR [eax]
  402ab2:	jae    0x402aaa
  402ab4:	xchg   ebp,eax
  402ab5:	or     ah,BYTE PTR cs:[ebp-0x789379f3]
  402abc:	ja     0x402b37
  402abe:	xchg   edx,eax
  402abf:	iret   
  402ac0:	hlt    
  402ac1:	push   ecx
  402ac2:	sbb    BYTE PTR [esi],bh
  402ac4:	push   0xffffff99
  402ac6:	sbb    cl,BYTE PTR [edi-0x262fe38b]
  402acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402acd:	out    dx,al
  402ace:	stos   BYTE PTR es:[edi],al
  402acf:	mov    cl,0x9b
  402ad1:	push   es
  402ad2:	(bad)  
  402ad3:	fadd   QWORD PTR [ecx]
  402ad5:	(bad)  
  402ad6:	cmc    
  402ad7:	jp     0x402b19
  402ad9:	mov    esi,0xd450602c
  402ade:	aaa    
  402adf:	push   edi
  402ae0:	xchg   esp,eax
  402ae1:	loopne 0x402aaa
  402ae3:	mov    BYTE PTR [esi+0x57],bl
  402ae6:	xchg   edi,eax
  402ae7:	lahf   
  402ae8:	mov    al,ds:0xe7bd3368
  402aed:	ins    DWORD PTR es:[edi],dx
  402aee:	and    esp,ebp
  402af0:	out    0x9f,eax
  402af2:	mov    eax,0x4a0b737a
  402af7:	test   eax,0x7a96da0c
  402afc:	dec    ebx
  402afd:	fwait
  402afe:	mov    ds:0x37545c4f,al
  402b03:	scas   al,BYTE PTR es:[edi]
  402b04:	add    DWORD PTR [eax+0x22],edi
  402b07:	dec    edx
  402b08:	pop    ss
  402b09:	dec    edi
  402b0a:	loopne 0x402b77
  402b0c:	sbb    esi,0xffffff96
  402b0f:	mov    ds:0x4e178986,al
  402b14:	pop    edx
  402b15:	cmp    cl,bl
  402b17:	sub    al,0x52
  402b19:	add    eax,0x480bb731
  402b1e:	add    dl,BYTE PTR [edi-0x4]
  402b21:	out    dx,al
  402b22:	inc    ecx
  402b23:	inc    ecx
  402b24:	mov    ebx,0x701d9e72
  402b29:	cld    
  402b2a:	es mov edi,0xad59a816
  402b30:	jnp    0x402ba4
  402b32:	xor    BYTE PTR [ebx],dh
  402b34:	push   ecx
  402b35:	test   BYTE PTR [ecx],ch
  402b37:	shl    BYTE PTR [ebx+0x36709ac2],1
  402b3d:	jmp    0xfb0d:0xc101d5b
  402b44:	daa    
  402b45:	pop    esp
  402b46:	mov    ah,0x12
  402b48:	into   
  402b49:	push   ecx
  402b4a:	cmp    ecx,esi
  402b4c:	pop    edi
  402b4d:	iret   
  402b4e:	push   eax
  402b4f:	inc    edi
  402b50:	adc    BYTE PTR [edx-0x49ab66fb],al
  402b56:	call   0xe426:0x14a62440
  402b5d:	aaa    
  402b5e:	ja     0x402b0d
  402b60:	jl     0x402bc9
  402b62:	or     DWORD PTR [eax+0x26],esp
  402b65:	pop    es
  402b66:	clc    
  402b67:	xchg   edi,eax
  402b68:	jp     0x402af6
  402b6a:	mov    edx,DWORD PTR [ecx+0x244cb24c]
  402b70:	mov    DWORD PTR [ebp+0x5c],0x62161cc0
  402b77:	arpl   WORD PTR [ecx+esi*4-0x81d7a39],bp
  402b7e:	push   edx
  402b7f:	sub    al,0x7e
  402b81:	push   ds
  402b82:	cmp    eax,0x4230064c
  402b87:	adc    dh,BYTE PTR [edx]
  402b89:	or     dh,ch
  402b8b:	stc    
  402b8c:	call   0xd999b36d
  402b91:	cmp    eax,0x7a9f78a3
  402b96:	xor    DWORD PTR [ebx],eax
  402b98:	or     ebx,DWORD PTR [edx-0x7a043bcb]
  402b9e:	or     eax,0xacedd40e
  402ba3:	cmc    
  402ba4:	jae    0x402b51
  402ba6:	mov    dh,0xdf
  402ba8:	pop    esp
  402ba9:	mov    bh,0xa0
  402bab:	adc    eax,0x3820389d
  402bb0:	clc    
  402bb1:	sub    DWORD PTR [edi-0x1d],ecx
  402bb4:	sbb    BYTE PTR [eax+0x20],al
  402bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bb8:	int3   
  402bb9:	(bad)  
  402bba:	iret   
  402bbb:	mov    bl,0x25
  402bbd:	ss retf 0x8154
  402bc1:	pop    ecx
  402bc2:	sbb    edx,ebp
  402bc4:	aas    
  402bc5:	cmp    eax,DWORD PTR [ebp-0x73cd5480]
  402bcb:	pushf  
  402bcc:	xchg   edx,eax
  402bcd:	xor    dh,BYTE PTR [ecx-0x6e]
  402bd0:	push   es
  402bd1:	imul   edi,DWORD PTR fs:[ecx-0x27],0xd54c1a1c
  402bd9:	stos   BYTE PTR es:[edi],al
  402bda:	dec    esp
  402bdb:	pusha  
  402bdc:	push   ebx
  402bdd:	xor    dh,BYTE PTR ds:0x1a7c88a2
  402be3:	xor    bl,BYTE PTR ds:0x60515c9d
  402be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bea:	add    BYTE PTR [ecx+eax*1-0x65],ah
  402bee:	adc    dh,BYTE PTR [eax+0x5165ddd3]
  402bf4:	mov    edx,DWORD PTR [edi]
  402bf6:	mov    esp,0xa950825c
  402bfb:	and    DWORD PTR [esi+edx*1+0x4a625374],0x3e
  402c03:	or     BYTE PTR [ebx-0x4c],0x3d
  402c07:	adc    cl,dl
  402c09:	shr    BYTE PTR [edx-0x2fd3b5de],0xe5
  402c10:	test   bl,dl
  402c12:	inc    esi
  402c13:	jne    0x402c67
  402c15:	sar    DWORD PTR [edi+0x7f],0x92
  402c19:	shl    cl,1
  402c1b:	jmp    0x402bf5
  402c1d:	arpl   cx,di
  402c1f:	push   edx
  402c20:	int    0x2f
  402c22:	mov    edx,0xdf490045
  402c27:	invd   
  402c29:	mov    eax,0x41b17159
  402c2e:	mov    esp,0xc762bf7
  402c33:	lea    esp,[ebp+0x9]
  402c36:	mov    dh,0x4
  402c38:	mov    ebp,0xfc2b87ca
  402c3d:	lods   eax,DWORD PTR ds:[esi]
  402c3e:	dec    esi
  402c3f:	add    eax,0x2856c25d
  402c44:	(bad)  
  402c46:	mov    ds:0xcfc515d1,eax
  402c4b:	push   ecx
  402c4c:	data16 mov dh,bl
  402c4f:	and    bh,BYTE PTR [edi+eax*8-0x73e5015e]
  402c56:	jmp    0x706df608
  402c5b:	daa    
  402c5c:	stc    
  402c5d:	lock or al,0xd8
  402c60:	fs push eax
  402c62:	dec    ecx
  402c63:	dec    ecx
  402c64:	and    eax,0x72667901
  402c69:	les    esi,FWORD PTR [ecx-0x3f]
  402c6c:	int3   
  402c6d:	inc    esi
  402c6e:	and    dh,BYTE PTR [edx]
  402c70:	xchg   ebx,eax
  402c71:	xor    eax,0xf93c2ab0
  402c76:	mov    ecx,0x3e4a4858
  402c7b:	out    0xb9,al
  402c7d:	mov    bl,0xdf
  402c7f:	and    al,0xac
  402c81:	pop    ebp
  402c82:	cmp    al,0xe6
  402c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c85:	fbstp  TBYTE PTR [esi+0x6b84448a]
  402c8b:	dec    esp
  402c8c:	outs   dx,BYTE PTR ds:[esi]
  402c8d:	mov    dh,0xa6
  402c8f:	cmp    ebx,DWORD PTR [ecx]
  402c91:	jb     0x402c5e
  402c93:	shl    DWORD PTR [eax],0x75
  402c96:	js     0x402c19
  402c98:	xchg   ebp,eax
  402c99:	addr16 mov ch,0xd0
  402c9c:	mov    ebp,0xd84c0a6b
  402ca1:	outs   dx,BYTE PTR ds:[esi]
  402ca2:	and    al,0x25
  402ca4:	and    edi,DWORD PTR [edi+0x7de65c36]
  402caa:	xor    eax,0x8e09bd75
  402caf:	cs clc 
  402cb1:	into   
  402cb2:	mov    dh,BYTE PTR [edi-0x6ccae6ad]
  402cb8:	pop    edx
  402cb9:	jge    0x402d11
  402cbb:	scas   al,BYTE PTR es:[edi]
  402cbc:	pushf  
  402cbd:	jbe    0x402d24
  402cbf:	addr16 test al,0x99
  402cc2:	pop    esi
  402cc3:	xor    eax,0xa21716d7
  402cc8:	lods   eax,DWORD PTR ds:[esi]
  402cc9:	pop    ss
  402cca:	fcmovbe st,st(2)
  402ccc:	push   ebx
  402ccd:	xchg   ebp,eax
  402cce:	mov    BYTE PTR [esi],dl
  402cd0:	bound  esi,QWORD PTR [ecx+0x3d]
  402cd3:	xor    al,BYTE PTR [esi-0x8b90b08]
  402cd9:	mov    ebx,0x69eb9da1
  402cde:	rcl    BYTE PTR [edx+0xeaf3c97],1
  402ce4:	(bad)  
  402ce5:	adc    eax,0x94ea36db
  402cea:	aad    0xac
  402cec:	aam    0x4e
  402cee:	inc    esi
  402cef:	xor    DWORD PTR [esi],ebp
  402cf1:	rcr    DWORD PTR [esi-0x53],0x82
  402cf5:	add    eax,0x3eb63139
  402cfa:	mov    ecx,0xe194d214
  402cff:	jle    0x402ce1
  402d01:	jne    0x402c86
  402d03:	inc    edi
  402d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d05:	jp     0x402d48
  402d07:	and    dl,BYTE PTR es:[eax-0x3f9bd790]
  402d0e:	xor    BYTE PTR [ebx-0x559bf9cd],cl
  402d14:	shr    esp,cl
  402d16:	sahf   
  402d17:	push   ds
  402d18:	sbb    al,0x62
  402d1a:	jmp    0x402d4e
  402d1c:	jp     0x402d65
  402d1e:	cmp    al,0x2b
  402d20:	scas   al,BYTE PTR es:[edi]
  402d21:	sub    bh,bl
  402d23:	or     esp,ebx
  402d25:	std    
  402d26:	test   BYTE PTR [edx-0x2ea471d0],0xab
  402d2d:	retf   
  402d2e:	pop    edi
  402d2f:	dec    ch
  402d31:	in     al,0x38
  402d33:	pushf  
  402d34:	dec    esp
  402d35:	or     BYTE PTR [esi+0xe09550a],0x7c
  402d3c:	bound  ebp,QWORD PTR [ecx-0x2]
  402d3f:	mov    dh,0x6
  402d41:	stos   DWORD PTR es:[edi],eax
  402d42:	or     al,0x5b
  402d44:	xlat   BYTE PTR ds:[ebx]
  402d45:	mov    dl,0x3
  402d47:	test   eax,0x1d1cbf65
  402d4c:	push   ss
  402d4d:	mov    eax,0x45b0dbf5
  402d52:	clc    
  402d53:	pop    ebx
  402d54:	popf   
  402d55:	ds dec ebp
  402d57:	jge    0x402dca
  402d59:	jge    0x402cec
  402d5b:	jnp    0x402dbc
  402d5d:	std    
  402d5e:	mov    gs,ecx
  402d60:	ret    0x8c91
  402d63:	retf   
  402d64:	into   
  402d65:	sbb    eax,0x5873e588
  402d6a:	adc    bl,dh
  402d6c:	mov    BYTE PTR [eax],bl
  402d6e:	and    bl,BYTE PTR ds:0x513a0ed7
  402d74:	daa    
  402d75:	push   eax
  402d76:	mov    ebx,0xa7bf1c45
  402d7b:	xchg   ebp,edx
  402d7d:	sbb    al,0xa0
  402d7f:	scas   eax,DWORD PTR es:[edi]
  402d80:	mov    esp,0x34ffcb5f
  402d85:	jge    0x402db9
  402d87:	or     ah,BYTE PTR [edx-0x6b]
  402d8a:	cmp    BYTE PTR [eax],ch
  402d8c:	pop    ebx
  402d8d:	sub    dh,ch
  402d8f:	out    0xb0,al
  402d91:	cmp    eax,0xf02fa36a
  402d96:	sub    esi,eax
  402d98:	shl    DWORD PTR [ebp+0x28ee8190],1
  402d9e:	sbb    ch,ah
  402da0:	lods   eax,DWORD PTR ds:[esi]
  402da1:	jmp    0xdc63:0xd7fb00cd
  402da8:	je     0x402dad
  402daa:	clc    
  402dab:	xchg   BYTE PTR [esi],ch
  402dad:	js     0x402dd5
  402daf:	js     0x402d66
  402db1:	ret    
  402db2:	in     eax,dx
  402db3:	cdq    
  402db4:	clc    
  402db5:	add    DWORD PTR [eax+0x6fbdacda],esp
  402dbb:	test   BYTE PTR [edi-0x15],bl
  402dbe:	dec    esi
  402dbf:	ret    0x198d
  402dc2:	cmc    
  402dc3:	adc    ebp,DWORD PTR [ebp+0x13]
  402dc6:	out    0xda,eax
  402dc8:	fsubr  QWORD PTR [ebx]
  402dca:	push   0x7658b49
  402dcf:	enter  0x5ab2,0x41
  402dd3:	dec    edx
  402dd4:	adc    esi,DWORD PTR gs:[ebp+edi*8+0x22]
  402dd9:	add    eax,0x6f89d003
  402dde:	(bad)  
  402ddf:	sahf   
  402de0:	ror    esp,1
  402de2:	inc    esi
  402de3:	mov    ds:0xb1a06018,al
  402de8:	adc    BYTE PTR [ecx+0x6f17d5bd],dh
  402dee:	cld    
  402def:	icebp  
  402df0:	je     0x402da4
  402df2:	loope  0x402e1a
  402df4:	(bad)  
  402df5:	neg    DWORD PTR [ebx]
  402df7:	jns    0x402da9
  402df9:	push   0x146a17cb
  402dfe:	aam    0x70
  402e00:	loopne 0x402e4f
  402e02:	lahf   
  402e03:	rcl    BYTE PTR [ecx+0x319dd38d],cl
  402e09:	mov    edx,DWORD PTR [eax]
  402e0b:	aad    0x14
  402e0d:	mov    edx,0x24b2599d
  402e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e13:	xchg   esi,eax
  402e14:	mov    al,ds:0xefc8552a
  402e19:	sub    bh,BYTE PTR gs:[ebx-0x6ea2a3a9]
  402e20:	add    eax,0x1fb70833
  402e25:	fidiv  WORD PTR [esp+edi*1-0x4c3fbd5a]
  402e2c:	jge    0x402e99
  402e2e:	add    cl,BYTE PTR [ebx]
  402e30:	ins    BYTE PTR es:[edi],dx
  402e31:	int    0xc9
  402e33:	jle    0x402ea3
  402e35:	divps  xmm3,xmm7
  402e38:	push   esp
  402e39:	ret    0x3d38
  402e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e3d:	sub    al,0x3e
  402e3f:	ret    
  402e40:	jle    0x402dd2
  402e42:	mov    ecx,0x58abd98d
  402e47:	test   DWORD PTR [edi+0x3b],edi
  402e4a:	inc    esi
  402e4b:	(bad)  
  402e4c:	shl    BYTE PTR [ebp-0x71],1
  402e4f:	sbb    eax,edx
  402e51:	fs mov ch,0x66
  402e54:	xchg   ecx,eax
  402e55:	and    ah,ch
  402e57:	xchg   ebx,eax
  402e58:	loopne 0x402eca
  402e5a:	jmp    0x402eb5
  402e5c:	fwait
  402e5d:	pop    eax
  402e5e:	mov    ebp,0xb3f2f6fd
  402e63:	sti    
  402e64:	retf   0xb3a3
  402e67:	iret   
  402e68:	mov    edi,eax
  402e6a:	push   cs
  402e6b:	ret    
  402e6c:	jno    0x402ede
  402e6e:	or     ah,dl
  402e70:	out    dx,al
  402e71:	sbb    DWORD PTR cs:[edi-0x44],ebp
  402e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e76:	xchg   ecx,eax
  402e77:	or     al,0xb9
  402e79:	std    
  402e7a:	pusha  
  402e7b:	dec    eax
  402e7c:	sub    BYTE PTR [eax],cl
  402e7e:	(bad)  
  402e7f:	in     eax,dx
  402e80:	leave  
  402e81:	ins    BYTE PTR es:[edi],dx
  402e82:	popf   
  402e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e84:	(bad)  
  402e85:	push   edi
  402e86:	or     DWORD PTR ds:0x2efe41bf,0xa040d7d5
  402e90:	lock xchg ecx,eax
  402e92:	sub    BYTE PTR [ecx],bl
  402e94:	mov    ecx,0x89942f59
  402e99:	mov    al,0x88
  402e9b:	lods   eax,DWORD PTR ds:[esi]
  402e9c:	xchg   DWORD PTR [esi],edi
  402e9e:	mov    bh,0xdd
  402ea0:	xchg   ebx,eax
  402ea1:	mov    al,0xc3
  402ea3:	pop    ecx
  402ea4:	retf   
  402ea5:	xchg   DWORD PTR [ebx+0xe89811f],ecx
  402eab:	adc    DWORD PTR ds:0x56fc0a35,edx
  402eb1:	xchg   edx,eax
  402eb2:	fist   DWORD PTR ds:0x3cc7f39c
  402eb8:	inc    esp
  402eb9:	fistp  QWORD PTR [edi+0x1143a44b]
  402ebf:	cmp    ebp,esp
  402ec1:	inc    ebp
  402ec2:	and    al,0xfe
  402ec4:	out    dx,eax
  402ec5:	inc    edx
  402ec6:	iret   
  402ec7:	outs   dx,DWORD PTR ds:[esi]
  402ec8:	xor    ch,BYTE PTR [ecx]
  402eca:	mov    eax,ds:0x5217d813
  402ecf:	mov    esi,0x92c6990
  402ed4:	push   edi
  402ed5:	retf   0xdc6f
  402ed8:	push   ebx
  402ed9:	mov    eax,ds:0x3b0646ff
  402ede:	push   esp
  402edf:	pushf  
  402ee0:	add    al,0x94
  402ee2:	mov    ebx,0xcbf724bb
  402ee7:	rol    DWORD PTR [eax+0x49],cl
  402eea:	mov    ebx,0xff4ab65d
  402eef:	iret   
  402ef0:	mov    WORD PTR [esi],ds
  402ef2:	jmp    0x402eba
  402ef4:	int    0x5f
  402ef6:	or     al,0x54
  402ef8:	cmc    
  402ef9:	push   es
  402efa:	inc    edx
  402efb:	sub    eax,0x1e48853c
  402f00:	dec    esi
  402f01:	add    eax,0x77ba80f0
  402f06:	leave  
  402f07:	int3   
  402f08:	iret   
  402f09:	push   ecx
  402f0a:	push   edx
  402f0b:	jno    0x402ef9
  402f0d:	adc    esi,DWORD PTR [ebx]
  402f0f:	inc    edx
  402f10:	sbb    ebx,edx
  402f12:	(bad)  
  402f13:	in     al,dx
  402f14:	mov    ah,0x35
  402f16:	inc    esi
  402f17:	inc    ebp
  402f18:	rcl    BYTE PTR [edi+0x3b],cl
  402f1b:	lock cmp ah,BYTE PTR [edi-0x26]
  402f1f:	push   cs
  402f20:	cwde   
  402f21:	xchg   ebx,eax
  402f22:	(bad)  
  402f23:	push   esp
  402f24:	in     eax,0x13
  402f26:	mov    al,0xdc
  402f28:	fbld   TBYTE PTR [edx+0x1]
  402f2b:	aam    0x2a
  402f2d:	mov    dl,0xd6
  402f2f:	mov    esp,0xcea489fd
  402f34:	int3   
  402f35:	pop    eax
  402f36:	out    0xba,eax
  402f38:	dec    eax
  402f39:	pop    eax
  402f3a:	mov    ah,0xa6
  402f3c:	sahf   
  402f3d:	mov    eax,0xbeed1879
  402f42:	loop   0x402f85
  402f44:	aas    
  402f45:	mov    eax,ds:0x28bb3cd7
  402f4a:	push   esi
  402f4b:	or     ebx,DWORD PTR [edx]
  402f4d:	add    ecx,esi
  402f4f:	imul   ecx,DWORD PTR [esi+0x7192ac9b],0xffffffd7
  402f56:	xchg   esp,eax
  402f57:	out    0xf1,eax
  402f59:	outs   dx,DWORD PTR ds:[esi]
  402f5a:	jp     0x402f58
  402f5c:	test   al,0xc9
  402f5e:	sbb    al,0xc4
  402f60:	pop    es
  402f61:	cmp    DWORD PTR [eax-0x75],ebx
  402f64:	push   0x18d2b528
  402f69:	or     BYTE PTR [esi-0x4dda6ea2],cl
  402f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f70:	push   ebx
  402f71:	sub    DWORD PTR [esi],edx
  402f73:	scas   al,BYTE PTR es:[edi]
  402f74:	inc    edx
  402f75:	mov    edi,0x6b68bba7
  402f7a:	(bad)  
  402f7b:	xor    al,0xc6
  402f7d:	push   eax
  402f7e:	dec    esi
  402f7f:	pop    ecx
  402f80:	imul   ebx,DWORD PTR [esi-0x45],0xb898d0
  402f87:	hlt    
  402f88:	inc    BYTE PTR [eax+ebx*8-0x74]
  402f8c:	fld    TBYTE PTR [edx]
  402f8e:	loope  0x402fad
  402f90:	sti    
  402f91:	cmp    al,0xa9
  402f93:	arpl   WORD PTR [ebp+0x2726b89b],si
  402f99:	and    esi,ebx
  402f9b:	mov    bl,BYTE PTR [ecx+0x2cb3cb53]
  402fa1:	test   ebp,ebx
  402fa3:	das    
  402fa4:	add    ah,BYTE PTR ds:0x3d3efdef
  402faa:	cmp    edx,ebx
  402fac:	and    DWORD PTR [ebp+ecx*2+0x29],ebp
  402fb0:	popf   
  402fb1:	fldcw  WORD PTR [edi-0x7f80066b]
  402fb7:	push   ds
  402fb8:	sub    ah,BYTE PTR [edi+0x35eb3789]
  402fbe:	pop    esi
  402fbf:	mov    dh,0x7a
  402fc1:	icebp  
  402fc2:	adc    al,0x46
  402fc4:	jb     0x402f82
  402fc6:	cmp    eax,0x45deede7
  402fcb:	adc    eax,ebp
  402fcd:	jb     0x40300e
  402fcf:	dec    esp
  402fd0:	inc    edi
  402fd1:	pop    edi
  402fd2:	fidivr WORD PTR [ebp+0xce309c2]
  402fd8:	xor    bh,BYTE PTR [esi-0x32]
  402fdb:	inc    ch
  402fdd:	(bad)  
  402fde:	call   0xa63f:0x25d3ee66
  402fe5:	in     al,0x18
  402fe7:	pop    edx
  402fe8:	dec    ebp
  402fe9:	jp     0x402ff8
  402feb:	sbb    al,0x6d
  402fed:	(bad)  
  402fee:	xchg   ecx,eax
  402fef:	jae    0x403059
  402ff1:	jg     0x40303b
  402ff3:	ficomp DWORD PTR [ebx+ebx*2]
  402ff6:	mov    eax,ds:0xe0ce0cc0
  402ffb:	fwait
  402ffc:	mov    WORD PTR [esi+edx*1],?
  402fff:	mov    ah,0xd
  403001:	jb     0x403062
  403003:	ds pop edi
  403005:	adc    DWORD PTR [edx],0xce43fbaf
  40300b:	dec    edi
  40300c:	pop    ecx
  40300d:	push   edx
  40300e:	xchg   edi,eax
  40300f:	add    eax,0x175918b8
  403014:	add    BYTE PTR [ebx-0x10],dl
  403017:	cmp    esp,DWORD PTR [edx-0x4d]
  40301a:	fstp   DWORD PTR [ecx+0x4bb84376]
  403020:	push   ecx
  403021:	rol    DWORD PTR ds:0x245bf86f,cl
  403027:	dec    edi
  403028:	gs ds loop 0x403031
  40302c:	inc    ebp
  40302d:	and    eax,0x163b759f
  403032:	xchg   edi,eax
  403033:	adc    ah,BYTE PTR [ebp-0x2506a13f]
  403039:	jg     0x403091
  40303b:	lods   eax,DWORD PTR ds:[esi]
  40303c:	in     al,dx
  40303d:	hlt    
  40303e:	in     al,0xc1
  403040:	pop    ebp
  403041:	dec    ebx
  403042:	outs   dx,DWORD PTR fs:[esi]
  403044:	mov    dh,BYTE PTR [ecx-0x2e6d3c65]
  40304a:	mov    bh,0x97
  40304c:	dec    ax
  40304e:	pushf  
  40304f:	jno    0x402ff9
  403051:	ins    DWORD PTR es:[edi],dx
  403052:	dec    edi
  403053:	repz sbb eax,DWORD PTR [edx]
  403056:	xchg   ebx,eax
  403057:	adc    esi,DWORD PTR [ebx+0x39]
  40305a:	xchg   BYTE PTR ds:0xa2568039,ah
  403060:	sbb    eax,0xb2c32c8c
  403065:	pop    ss
  403066:	mov    ecx,0x47144731
  40306b:	add    eax,0x24771caf
  403070:	mov    cl,0xca
  403072:	jle    0x4030c1
  403074:	mov    ?,WORD PTR [eax+edx*4+0x3bac2db5]
  40307b:	bound  esp,QWORD PTR [edx]
  40307d:	pushf  
  40307e:	or     ah,BYTE PTR [ecx+0xf]
  403081:	enter  0xd2b3,0x87
  403085:	xchg   ebp,eax
  403086:	mov    al,0x92
  403088:	cld    
  403089:	daa    
  40308a:	jne    0x4030b7
  40308c:	lods   al,BYTE PTR ds:[esi]
  40308d:	or     eax,0x77afa1f6
  403092:	xor    al,0xb6
  403094:	sub    ah,BYTE PTR [edi+0x413118d6]
  40309a:	or     eax,0xb44eabfb
  40309f:	mov    cl,0x3a
  4030a1:	(bad)  
  4030a2:	icebp  
  4030a3:	mov    ecx,0xeb31b750
  4030a8:	mov    cl,0xe8
  4030aa:	retf   
  4030ab:	sub    eax,0xe7d89403
  4030b0:	or     DWORD PTR [ecx+0x66],ebx
  4030b3:	fnsave ds:0xc24f857c
  4030b9:	add    cl,BYTE PTR [esi+eiz*1+0x5d50bee2]
  4030c0:	pop    ebx
  4030c1:	call   0xac46df28
  4030c6:	nop
  4030c7:	add    bh,ch
  4030c9:	cs xchg esi,eax
  4030cb:	sub    al,0x5c
  4030cd:	pop    edx
  4030ce:	frstor [edi+ebp*1]
  4030d1:	xor    DWORD PTR [edx+ecx*8+0x18],0x68
  4030d6:	aam    0xa3
  4030d8:	pop    edx
  4030d9:	add    al,al
  4030db:	adc    ch,BYTE PTR [edx]
  4030dd:	fucomi st,st(3)
  4030df:	loop   0x403117
  4030e1:	add    DWORD PTR [ebx+0x48f765f1],eax
  4030e7:	pop    ebp
  4030e8:	ror    BYTE PTR [edi+0x5964724f],0x46
  4030ef:	mov    dl,BYTE PTR [ebp+0x65]
  4030f2:	test   al,0xa7
  4030f4:	cmp    al,0x33
  4030f6:	jle    0x403107
  4030f8:	inc    esi
  4030f9:	pushf  
  4030fa:	ret    
  4030fb:	std    
  4030fc:	mov    dh,0x86
  4030fe:	div    DWORD PTR [edi]
  403100:	hlt    
  403101:	iret   
  403102:	cwde   
  403103:	lods   eax,DWORD PTR ds:[esi]
  403104:	xor    DWORD PTR [esi+0x690f57cb],edi
  40310a:	(bad)  
  40310c:	into   
  40310d:	rdtsc  
  40310f:	pop    edi
  403110:	(bad)  
  403111:	push   ss
  403112:	out    0x52,eax
  403114:	shr    BYTE PTR [edx+0x22],0x39
  403118:	scas   al,BYTE PTR es:[edi]
  403119:	inc    ecx
  40311a:	or     BYTE PTR [ecx-0x4a],cl
  40311d:	cld    
  40311e:	fs cmp eax,0x5f73b2e3
  403124:	adc    cl,cl
  403126:	dec    ecx
  403127:	repnz sti 
  403129:	mov    WORD PTR [eax+0x7d68436],?
  40312f:	xchg   al,bh
  403131:	ja     0x4030f7
  403133:	jmp    0x40315b
  403135:	scas   eax,DWORD PTR es:[edi]
  403136:	xchg   esp,eax
  403137:	inc    eax
  403138:	add    bh,BYTE PTR [esi]
  40313a:	sbb    BYTE PTR [edx+0x735ec890],cl
  403140:	cs jb  0x4031bf
  403143:	add    ch,BYTE PTR [edx-0x5e]
  403146:	enter  0x1dc5,0xb4
  40314a:	add    esp,DWORD PTR [ebp-0x396a448a]
  403150:	ss jns 0x4031b2
  403153:	div    BYTE PTR [eax-0x7d]
  403156:	loopne 0x40310d
  403158:	mov    eax,0x6e43f053
  40315d:	push   edx
  40315e:	arpl   WORD PTR [edx+0x7],cx
  403161:	fild   DWORD PTR [ebx]
  403163:	das    
  403164:	jb     0x4031dd
  403166:	xchg   ch,dh
  403168:	fcom   DWORD PTR [ebp+0x5487061f]
  40316e:	(bad)  
  40316f:	(bad)  
  403171:	sbb    ah,BYTE PTR [ecx+eiz*1+0x3ff0a661]
  403178:	inc    edi
  403179:	mov    DWORD PTR [edi+0x781a5570],ebp
  40317f:	jnp    0x4031fc
  403181:	cmc    
  403182:	mov    al,0x39
  403184:	xor    edi,esp
  403186:	test   eax,0x36cc1264
  40318b:	pop    edi
  40318c:	out    0x37,al
  40318e:	inc    esi
  40318f:	dec    eax
  403190:	cmp    al,0xba
  403192:	pop    es
  403193:	mov    cl,0x0
  403195:	div    DWORD PTR [ecx]
  403197:	ret    
  403198:	ins    BYTE PTR es:[edi],dx
  403199:	push   edi
  40319a:	pop    es
  40319b:	outs   dx,DWORD PTR ds:[esi]
  40319c:	ja     0x4031bc
  40319e:	js     0x4031f6
  4031a0:	pop    ebx
  4031a1:	aaa    
  4031a2:	ret    
  4031a3:	mov    eax,DWORD PTR [edi]
  4031a5:	stos   BYTE PTR es:[edi],al
  4031a6:	bound  esi,QWORD PTR [ebx]
  4031a8:	mov    al,0x6b
  4031aa:	arpl   WORD PTR [ebx],si
  4031ac:	mov    eax,0xe86fbfdb
  4031b1:	cli    
  4031b2:	or     al,0xd2
  4031b4:	mov    ds:0x2545425,al
  4031b9:	xchg   DWORD PTR [ebp-0x72],ebx
  4031bc:	jle    0x4031b6
  4031be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031bf:	cli    
  4031c0:	push   edx
  4031c1:	aad    0xf0
  4031c3:	ds push ebp
  4031c5:	xchg   DWORD PTR [edx],ebp
  4031c7:	or     al,0x95
  4031c9:	add    bl,BYTE PTR [esi]
  4031cb:	add    edx,esp
  4031cd:	push   ds
  4031ce:	jae    0x403179
  4031d0:	jmp    0x4031f5
  4031d2:	aaa    
  4031d3:	pop    edi
  4031d4:	out    dx,eax
  4031d5:	adc    al,0xb9
  4031d7:	ror    DWORD PTR [ecx],cl
  4031d9:	jae    0x403246
  4031db:	xchg   ebp,eax
  4031dc:	mov    ebx,DWORD PTR [ebx-0x6f748744]
  4031e2:	loopne 0x403225
  4031e4:	jmp    0x4031c0
  4031e6:	add    ch,BYTE PTR [eax-0x5a]
  4031e9:	xchg   edx,eax
  4031ea:	stc    
  4031eb:	stos   BYTE PTR es:[edi],al
  4031ec:	jge    0x4031c0
  4031ee:	adc    ebx,DWORD PTR [edx+0x52]
  4031f1:	inc    esi
  4031f2:	add    al,bl
  4031f4:	into   
  4031f5:	push   ecx
  4031f6:	push   ebx
  4031f7:	xor    cl,BYTE PTR [edx+0x35]
  4031fa:	jns    0x4031cd
  4031fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031fd:	adc    ecx,ecx
  4031ff:	jg     0x4031f0
  403201:	pop    ebp
  403202:	xchg   BYTE PTR [esi],cl
  403204:	retf   
  403205:	lea    esi,[eax]
  403207:	pusha  
  403208:	dec    ecx
  403209:	or     al,0xc7
  40320b:	mov    ecx,0xfc449c84
  403210:	cmp    al,BYTE PTR [edx]
  403212:	xadd   BYTE PTR [edx+0x58e07792],al
  403219:	jo     0x4031cc
  40321b:	add    al,0x62
  40321d:	pop    ss
  40321e:	and    esp,esi
  403220:	(bad)  
  403221:	(bad)  
  403222:	repz retf 0x87d8
  403226:	mov    eax,0x6a9dcb44
  40322b:	mov    bl,0x7d
  40322d:	les    eax,FWORD PTR [eax*4-0x42ca9717]
  403234:	adc    al,0x73
  403236:	ja     0x403275
  403238:	dec    ebp
  403239:	ds push ss
  40323b:	imul   BYTE PTR [ebx-0x738ca07f]
  403241:	cmp    ch,BYTE PTR [edx-0x26]
  403244:	add    BYTE PTR [edx+0x1c23e1ea],bh
  40324a:	in     eax,0xda
  40324c:	ja     0x403206
  40324e:	fimul  DWORD PTR [edi]
  403250:	sbb    eax,0x315d268d
  403255:	sub    BYTE PTR [edx-0x2afc9494],0x8c
  40325c:	jnp    0x4032bb
  40325e:	push   esp
  40325f:	dec    esi
  403260:	sbb    bh,BYTE PTR [edi-0x79504dbe]
  403266:	inc    esi
  403267:	adc    BYTE PTR [edi+0x3a0b034c],bl
  40326d:	gs inc edi
  40326f:	(bad)
  403273:	bound  ecx,QWORD PTR [edx+ebx*8+0x326e8523]
  40327a:	repz add eax,0xe0eae4d7
  403280:	les    ebx,FWORD PTR [edi]
  403282:	push   esp
  403283:	les    ebx,FWORD PTR [edx]
  403285:	test   al,0xd4
  403287:	mov    eax,ds:0x73245eb7
  40328c:	mov    esp,DWORD PTR [edx-0xa]
  40328f:	repnz jmp 0xd02d:0xac153102
  403297:	lahf   
  403298:	popf   
  403299:	sub    BYTE PTR [ecx+0x6f],0xd1
  40329d:	xchg   DWORD PTR [ebx],ebx
  40329f:	dec    edi
  4032a0:	push   esp
  4032a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032a2:	scas   al,BYTE PTR es:[edi]
  4032a3:	lahf   
  4032a4:	ja     0x403296
  4032a6:	inc    edx
  4032a7:	repnz cld 
  4032a9:	in     eax,dx
  4032aa:	js     0x403258
  4032ac:	ficomp DWORD PTR [ebx-0x25]
  4032af:	popf   
  4032b0:	jl     0x4032ed
  4032b2:	mov    al,ds:0xd5800190
  4032b7:	lds    eax,FWORD PTR [edx-0x50f417f1]
  4032bd:	cli    
  4032be:	adc    cl,BYTE PTR [edi-0x6604b940]
  4032c4:	mov    esi,0x641d3f7d
  4032c9:	mov    ebx,0xbb259a74
  4032ce:	pop    ds
  4032cf:	fnsave [edi+0x19]
  4032d2:	pop    es
  4032d3:	jno    0x403304
  4032d5:	jbe    0x4032b0
  4032d7:	push   ebp
  4032d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d9:	into   
  4032da:	ss dec edx
  4032dc:	test   al,0xab
  4032de:	rol    ch,1
  4032e0:	dec    esp
  4032e1:	inc    edi
  4032e2:	mov    ecx,0x64dd3ad
  4032e7:	sbb    edx,DWORD PTR [ebp-0x7a]
  4032ea:	pop    ds
  4032eb:	jb     0x4032a9
  4032ed:	jno    0x40330a
  4032ef:	(bad)  
  4032f0:	pop    ebx
  4032f1:	pop    esp
  4032f2:	(bad)  
  4032f3:	cmp    al,0xb6
  4032f5:	pop    edx
  4032f6:	lea    ecx,[ebp-0x7ad4cb07]
  4032fc:	xchg   BYTE PTR [ebx-0x786726a7],ah
  403302:	aaa    
  403303:	pop    ecx
  403304:	xor    ah,BYTE PTR [esi+0x38]
  403307:	pusha  
  403308:	mov    esp,0x1a85e8b3
  40330d:	sahf   
  40330e:	pop    ebp
  40330f:	push   0x77fc92c1
  403314:	leave  
  403315:	xor    dh,bl
  403317:	aas    
  403318:	test   dl,dh
  40331a:	enter  0xfcdf,0x32
  40331e:	push   ds
  40331f:	lahf   
  403320:	adc    BYTE PTR [ecx],0x5f
  403323:	inc    edx
  403324:	mov    ds:0x1062a5f6,eax
  403329:	push   esp
  40332a:	call   0xe124:0x2817bffa
  403331:	mov    esp,DWORD PTR [edi-0x218a1662]
  403337:	scas   eax,DWORD PTR es:[edi]
  403338:	test   al,0x95
  40333a:	hlt    
  40333b:	lods   eax,DWORD PTR ds:[esi]
  40333c:	ins    DWORD PTR es:[edi],dx
  40333d:	cmc    
  40333e:	xor    eax,0x8531e087
  403343:	mov    al,0x68
  403345:	dec    edx
  403346:	xchg   edx,eax
  403347:	ins    BYTE PTR es:[edi],dx
  403348:	retf   
  403349:	push   0xd9771196
  40334e:	jne    0x40331b
  403350:	shl    BYTE PTR [edx+0x6ace71da],1
  403356:	jmp    0x70cf:0xbfef16bf
  40335d:	fadd   QWORD PTR [edi]
  40335f:	aam    0x67
  403361:	jns    0x4032fc
  403363:	adc    esp,eax
  403365:	cmp    DWORD PTR [ebp+eax*8-0x18],edi
  403369:	jae    0x40335f
  40336b:	dec    esp
  40336c:	or     ah,BYTE PTR [ebx-0x446fdd36]
  403372:	stos   BYTE PTR es:[edi],al
  403373:	add    BYTE PTR fs:[edx-0x73],0xb2
  403378:	xor    DWORD PTR [eax+0x45],ebp
  40337b:	or     ah,BYTE PTR [esi-0x12718c1c]
  403381:	xor    DWORD PTR [ebx],0xefdbd37a
  403387:	cmp    bh,BYTE PTR [eax-0x7a]
  40338a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40338b:	jne    0x40339a
  40338d:	pop    ebx
  40338e:	sti    
  40338f:	test   eax,0x31f0087b
  403394:	std    
  403395:	(bad)  
  403396:	aaa    
  403397:	clc    
  403398:	sar    DWORD PTR [edx],0x11
  40339b:	pop    ds
  40339c:	stos   BYTE PTR es:[edi],al
  40339d:	and    BYTE PTR [ecx-0x58769ca],bl
  4033a3:	add    eax,0x2968810d
  4033a8:	bound  esi,QWORD PTR [ebp-0x45]
  4033ab:	jnp    0x4033d1
  4033ad:	ja     0x40340a
  4033af:	and    al,0x67
  4033b1:	xchg   edx,eax
  4033b2:	inc    esi
  4033b3:	pop    ds
  4033b4:	pop    edx
  4033b5:	das    
  4033b6:	dec    ebx
  4033b7:	scas   al,BYTE PTR es:[edi]
  4033b8:	call   0x82677b74
  4033bd:	rol    BYTE PTR [edx+0x59],cl
  4033c0:	xor    DWORD PTR [ebx],edx
  4033c2:	fidivr DWORD PTR [edx+0x34]
  4033c5:	or     al,0x6
  4033c7:	out    0x54,eax
  4033c9:	push   edi
  4033ca:	lahf   
  4033cb:	pop    esp
  4033cc:	jbe    0x4033fe
  4033ce:	xor    DWORD PTR [ecx+0x3ad3d1b2],edx
  4033d4:	and    BYTE PTR [esi-0x3f6245cb],al
  4033da:	pop    esp
  4033db:	cmp    DWORD PTR [ecx+0x5f59c642],0x45ef825c
  4033e5:	rol    BYTE PTR [edx],0x99
  4033e8:	dec    edi
  4033e9:	popa   
  4033ea:	dec    edx
  4033eb:	adc    dh,BYTE PTR [ebx+0x1e]
  4033ee:	pop    es
  4033ef:	or     eax,0xb1d5bd94
  4033f4:	rol    DWORD PTR [ecx],1
  4033f6:	stos   DWORD PTR es:[edi],eax
  4033f7:	lods   eax,DWORD PTR ds:[esi]
  4033f8:	(bad)  
  4033f9:	mov    bl,BYTE PTR [edi-0x29]
  4033fc:	rcl    BYTE PTR [ebx+0x5cade78a],0x72
  403403:	outs   dx,DWORD PTR ds:[esi]
  403404:	in     al,dx
  403405:	lods   eax,DWORD PTR ds:[esi]
  403406:	hlt    
  403407:	imul   ebp,esp,0x440b69d0
  40340d:	inc    edi
  40340e:	cdq    
  40340f:	popf   
  403410:	dec    eax
  403411:	jge    0x40341e
  403413:	mov    WORD PTR [edx-0x3e004429],cs
  403419:	sahf   
  40341a:	xor    DWORD PTR [esi+edi*4+0x53],0xd15b3b6e
  403422:	call   0x1627ceed
  403427:	mov    edi,0xdc72d0a3
  40342c:	stc    
  40342d:	retf   0x39fb
  403430:	and    ch,BYTE PTR [edx+eax*8-0x3f]
  403434:	jne    0x4034aa
  403436:	les    ecx,FWORD PTR [ecx]
  403438:	pop    esi
  403439:	mov    bh,0x7e
  40343b:	aaa    
  40343c:	mov    al,ds:0xadb8dd4d
  403441:	out    dx,eax
  403442:	gs int3 
  403444:	addr16 cld 
  403446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403447:	loopne 0x4034a7
  403449:	in     eax,dx
  40344a:	fwait
  40344b:	mov    ah,0xd2
  40344d:	cld    
  40344e:	push   esp
  40344f:	dec    ebp
  403450:	mov    ch,0x20
  403452:	push   DWORD PTR [edx-0x1748ac55]
  403458:	add    ecx,esp
  40345a:	into   
  40345b:	push   es
  40345c:	std    
  40345d:	sub    eax,0x7b732f2
  403462:	in     al,dx
  403463:	jmp    0x6696:0x1700cbd3
  40346a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40346b:	cmp    BYTE PTR [edi],bh
  40346d:	std    
  40346e:	push   cs
  40346f:	mov    dh,BYTE PTR [esp+edi*1-0x15850100]
  403476:	ja     0x4034a1
  403478:	xchg   ebx,eax
  403479:	xchg   ecx,eax
  40347a:	pushf  
  40347b:	lods   al,BYTE PTR ds:[esi]
  40347c:	xchg   esp,eax
  40347d:	outs   dx,BYTE PTR ds:[esi]
  40347e:	mov    ebp,0x832d52e
  403483:	lods   al,BYTE PTR ds:[esi]
  403484:	push   ss
  403485:	sub    al,0x93
  403487:	cmp    dh,BYTE PTR ds:0xcebc
  40348c:	int3   
  40348d:	lods   al,BYTE PTR ds:[esi]
  40348e:	adc    al,0x8c
  403490:	cmp    DWORD PTR cs:[ebx+ecx*2],ecx
  403494:	mov    ecx,0x8205209a
  403499:	mov    bl,0xe3
  40349b:	mov    ds:0x349a399a,al
  4034a0:	jmp    0xbb6ef166
  4034a5:	les    ebx,FWORD PTR [edx+0x45631415]
  4034ab:	push   ds
  4034ac:	adc    dl,ah
  4034ae:	cli    
  4034af:	lods   eax,DWORD PTR ds:[esi]
  4034b0:	(bad)  
  4034b1:	jg     0x403460
  4034b3:	mov    esi,esp
  4034b5:	push   esp
  4034b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034b7:	test   BYTE PTR ds:0x4ce0adc3,dh
  4034bd:	clc    
  4034be:	and    bl,BYTE PTR [edx]
  4034c0:	clc    
  4034c1:	inc    ecx
  4034c2:	(bad)  
  4034c3:	ins    BYTE PTR es:[edi],dx
  4034c4:	cli    
  4034c5:	add    dh,BYTE PTR [ecx-0x53234080]
  4034cb:	inc    ecx
  4034cc:	jmp    0x4034f5
  4034ce:	ja     0x4034a0
  4034d0:	lods   eax,DWORD PTR ds:[esi]
  4034d1:	bound  edi,QWORD PTR es:[edi-0x8]
  4034d5:	lds    edx,FWORD PTR [esi]
  4034d7:	fnsave [edx-0x4b]
  4034da:	lahf   
  4034db:	into   
  4034dc:	mov    edi,0xc350414a
  4034e1:	add    esp,DWORD PTR [edi-0xe0160e4]
  4034e7:	jmp    0xe27bac44
  4034ec:	ja     0x4034ae
  4034ee:	outs   dx,BYTE PTR ds:[esi]
  4034ef:	leave  
  4034f0:	or     BYTE PTR [edx-0x51],ch
  4034f3:	dec    eax
  4034f4:	cmp    BYTE PTR [ebp+0x28],dl
  4034f7:	cmp    esp,DWORD PTR [edx]
  4034f9:	mov    esp,0xf2cc2caa
  4034fe:	cdq    
  4034ff:	loopne 0x403537
  403501:	and    BYTE PTR [ecx+0x3332a6ca],bh
  403507:	xor    al,0xc1
  403509:	jp     0x4034e6
  40350b:	or     eax,0xa6a8e1a5
  403510:	cmp    cl,BYTE PTR [esi-0x43]
  403513:	retf   
  403514:	jl     0x403552
  403516:	test   al,0xa
  403518:	dec    eax
  403519:	xchg   esp,eax
  40351a:	jnp    0x4034a3
  40351c:	pop    ecx
  40351d:	or     eax,0x991cb651
  403523:	shr    BYTE PTR [esi],cl
  403525:	shr    DWORD PTR fs:[edi+eax*4+0x1],1
  40352a:	nop
  40352b:	in     al,dx
  40352c:	test   al,0x8d
  40352e:	mov    ecx,0x88c583d
  403533:	mov    bh,0xe6
  403535:	mov    ds:0x17aa6381,al
  40353a:	mov    ebp,0xfde8b77d
  40353f:	(bad)  
  403540:	aas    
  403541:	xor    eax,0xd4924414
  403546:	nop
  403547:	int    0x41
  403549:	jmp    0xc509:0xc077ac44
  403550:	int    0xed
  403552:	ret    
  403553:	fst    st(0)
  403555:	and    eax,0x45e139d3
  40355a:	psubsw mm0,QWORD PTR [ecx-0x3b]
  40355e:	(bad)  
  40355f:	pop    ebp
  403560:	inc    edx
  403561:	rol    DWORD PTR ds:[edx+eax*8+0x409a0fb3],1
  403569:	or     eax,0xf54bf954
  40356e:	jmp    0x403515
  403570:	mov    cl,0x6f
  403572:	pop    ebx
  403573:	xor    BYTE PTR [ecx],bl
  403575:	aas    
  403576:	xor    BYTE PTR [edx-0x66],ah
  403579:	xchg   esi,eax
  40357a:	sbb    eax,0xaf59d0d4
  40357f:	push   edi
  403580:	add    eax,DWORD PTR [eax+0x59]
  403583:	dec    ebp
  403584:	jmp    0x403531
  403586:	mov    ecx,0xe195b8b1
  40358b:	ret    0x8176
  40358e:	cwde   
  40358f:	push   ds
  403590:	jbe    0x4035d4
  403592:	in     eax,dx
  403593:	and    eax,0xc5606745
  403598:	xor    al,0x58
  40359a:	mov    dh,0xf7
  40359c:	inc    ebp
  40359d:	in     eax,0x7f
  40359f:	pop    esp
  4035a0:	ja     0x40360b
  4035a2:	inc    esi
  4035a3:	sub    al,0x1c
  4035a5:	cld    
  4035a6:	fsub   DWORD PTR [esi]
  4035a8:	sub    dh,BYTE PTR [ebx+0x38]
  4035ab:	mov    ds:0x339d6525,al
  4035b0:	jne    0x40359d
  4035b2:	mov    DWORD PTR [ebx+0xcdeda95],esi
  4035b8:	mov    bh,0xe4
  4035ba:	xor    eax,DWORD PTR [edi+eax*1+0x48]
  4035be:	or     eax,DWORD PTR [esi-0x52]
  4035c1:	push   ss
  4035c2:	retf   0x6630
  4035c5:	je     0x40363b
  4035c7:	xchg   esp,eax
  4035c8:	jmp    0x40361e
  4035ca:	jle    0x403630
  4035cc:	enter  0x76c5,0x3a
  4035d0:	push   es
  4035d1:	ins    DWORD PTR es:[edi],dx
  4035d2:	(bad)  
  4035d3:	jecxz  0x4035e8
  4035d5:	mov    bl,0xab
  4035d7:	in     al,0x86
  4035d9:	xor    al,0x20
  4035db:	adc    eax,0x1142dae5
  4035e0:	addr16 mov esp,0xe39e7e81
  4035e6:	push   esi
  4035e7:	xor    DWORD PTR [edi+0x69],ecx
  4035ea:	(bad)  
  4035eb:	sub    al,BYTE PTR [edx]
  4035ed:	shl    BYTE PTR [ebx+0x2d6e70d7],cl
  4035f3:	pop    eax
  4035f4:	outs   dx,DWORD PTR ds:[esi]
  4035f5:	pop    es
  4035f6:	push   edx
  4035f7:	out    dx,eax
  4035f8:	dec    edi
  4035f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035fa:	das    
  4035fb:	sbb    BYTE PTR ds:0xb3996331,0xc1
  403602:	das    
  403603:	xchg   bl,bl
  403605:	jns    0x40363b
  403607:	test   al,0x6a
  403609:	jp     0x403628
  40360b:	loope  0x4035cc
  40360d:	int    0xce
  40360f:	mov    ebp,0xeb84d626
  403614:	or     BYTE PTR [esi-0x293f825a],ch
  40361a:	mov    esi,0xcc9cc3c3
  40361f:	inc    edi
  403620:	dec    edi
  403621:	jns    0x4035cd
  403623:	add    DWORD PTR [esi-0x6b670ef8],ebp
  403629:	std    
  40362a:	inc    ebp
  40362b:	mov    ch,0x44
  40362d:	in     eax,dx
  40362e:	mov    dl,0xa8
  403630:	(bad)  
  403632:	jb     0x4035dc
  403634:	and    bh,BYTE PTR [edi-0x48]
  403637:	pop    ebx
  403638:	cmp    BYTE PTR [esi-0x56],ah
  40363b:	fbstp  TBYTE PTR [edx+0x1b]
  40363e:	sar    BYTE PTR [ebp-0x69],cl
  403641:	loopne 0x4035e7
  403643:	adc    eax,0x7958e562
  403648:	cld    
  403649:	fdivp  st(1),st
  40364b:	frstor fs:[edi-0x3e]
  40364f:	sub    eax,0x3887e80
  403654:	push   ecx
  403655:	fs xchg edi,eax
  403657:	pop    ss
  403658:	fwait
  403659:	ret    
  40365a:	(bad)  
  40365b:	ss push 0x55ec8313
  403661:	ins    BYTE PTR es:[edi],dx
  403662:	arpl   WORD PTR [edi-0x38],di
  403665:	imul   esp,DWORD PTR [esi+esi*1-0xfcb51f],0x239d47ed
  403670:	fdiv   DWORD PTR [esi]
  403672:	or     dh,cl
  403674:	(bad)  
  403676:	jl     0x40364e
  403678:	retf   
  403679:	arpl   cx,bp
  40367b:	je     0x4036d3
  40367d:	pop    esp
  40367e:	add    eax,0xc5b9ed56
  403683:	push   eax
  403684:	int3   
  403685:	and    al,0xbd
  403687:	jae    0x403664
  403689:	les    ecx,FWORD PTR [eax]
  40368b:	test   eax,0xf30e80ef
  403690:	test   al,0xe6
  403692:	test   BYTE PTR [ecx+0x20dee764],0x21
  403699:	or     edx,ebx
  40369b:	push   es
  40369c:	dec    esi
  40369d:	pusha  
  40369e:	push   ecx
  40369f:	add    ebp,ecx
  4036a1:	and    DWORD PTR [esi],0x71
  4036a4:	pop    es
  4036a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036a6:	aaa    
  4036a7:	fmulp  st(1),st
  4036a9:	fidiv  DWORD PTR [edi+0x51]
  4036ac:	mov    dl,0xda
  4036ae:	push   ecx
  4036af:	mov    ebp,0x45bf2ea2
  4036b4:	push   es
  4036b5:	int    0x7b
  4036b7:	rcl    BYTE PTR ds:[esi+0x78],cl
  4036bb:	rol    BYTE PTR [ebx],0x1c
  4036be:	jg     0x403722
  4036c0:	dec    ebx
  4036c1:	push   es
  4036c2:	fsubr  QWORD PTR ds:0x2c781887
  4036c8:	les    esi,FWORD PTR [ebp+0x9635a9]
  4036ce:	scas   al,BYTE PTR es:[edi]
  4036cf:	sub    cl,BYTE PTR [ebp-0x41]
  4036d2:	sbb    al,0xc8
  4036d4:	lods   al,BYTE PTR ds:[esi]
  4036d5:	xor    DWORD PTR [eax-0x62c9d883],edx
  4036db:	jnp    0x403661
  4036dd:	test   al,0xef
  4036df:	sbb    al,0x2e
  4036e1:	cwde   
  4036e2:	fxtract 
  4036e4:	rcl    DWORD PTR [ebp-0x136c9a8c],0xbd
  4036eb:	test   ah,bh
  4036ed:	loope  0x403747
  4036ef:	daa    
  4036f0:	ins    BYTE PTR es:[edi],dx
  4036f1:	pop    esp
  4036f2:	sahf   
  4036f3:	ja     0x4036b6
  4036f5:	push   esp
  4036f6:	shr    DWORD PTR ds:0xe83b7cf1,1
  4036fc:	test   al,0xc6
  4036fe:	das    
  4036ff:	loopne 0x4036bf
  403701:	aam    0x92
  403703:	ss mov ch,0xc0
  403706:	sbb    ebp,ecx
  403708:	stos   DWORD PTR es:[edi],eax
  403709:	(bad)  
  40370a:	jmp    0x1e03fd9b
  40370f:	jp     0x4036fe
  403711:	jns    0x403705
  403713:	ds pop ecx
  403715:	push   eax
  403716:	jo     0x403713
  403718:	fs pop esp
  40371a:	enter  0x2945,0xbb
  40371e:	or     al,BYTE PTR fs:[ebx]
  403721:	or     ax,0xf1c8
  403725:	mov    ebp,esp
  403727:	mov    dh,BYTE PTR [esi-0x5a]
  40372a:	mov    bl,0x57
  40372c:	test   al,0x89
  40372e:	(bad)  
  40372f:	std    
  403730:	sbb    eax,0x27bffaa7
  403735:	xor    ebx,DWORD PTR [ecx+0x7d1015b4]
  40373b:	stos   BYTE PTR es:[edi],al
  40373c:	ror    DWORD PTR [edx+0x19],cl
  40373f:	dec    ecx
  403740:	or     bl,BYTE PTR [ecx+0x68]
  403743:	add    dh,bh
  403745:	pushf  
  403746:	lea    ecx,[edx+0x3cbb7b84]
  40374c:	push   eax
  40374d:	cmc    
  40374e:	inc    esp
  40374f:	pop    esi
  403750:	mov    ebx,0x3c53973
  403755:	retf   0x93ed
  403758:	dec    esp
  403759:	in     al,0x94
  40375b:	pop    ecx
  40375c:	pop    es
  40375d:	dec    edi
  40375e:	push   DWORD PTR [edi]
  403760:	sbb    cl,ch
  403762:	leave  
  403763:	or     ebp,esp
  403765:	push   ebp
  403766:	push   ebx
  403767:	inc    eax
  403768:	dec    ecx
  403769:	or     DWORD PTR [ecx+0xf],esp
  40376c:	jle    0x403788
  40376e:	push   cs
  40376f:	daa    
  403770:	mov    esi,0x7fe0daeb
  403775:	lds    edi,FWORD PTR [ebx]
  403777:	sahf   
  403778:	cmp    al,0xe1
  40377a:	shr    DWORD PTR [esi],1
  40377c:	lds    ebp,FWORD PTR [edi-0x50]
  40377f:	pop    eax
  403780:	das    
  403781:	dec    edx
  403782:	adc    BYTE PTR [esi+0x3fa5518b],cl
  403788:	inc    esi
  403789:	or     eax,DWORD PTR [ebx+edi*2]
  40378c:	fdiv   QWORD PTR [edi+0x2e]
  40378f:	pop    edi
  403790:	addr16 xor ebp,edx
  403793:	add    bh,BYTE PTR [ecx]
  403795:	dec    esp
  403796:	das    
  403797:	lds    ebp,FWORD PTR [ebx-0x69]
  40379a:	in     eax,0x2
  40379c:	push   eax
  40379d:	ds pusha 
  40379f:	mov    BYTE PTR [edi+ebp*2-0x1b],al
  4037a3:	cmp    BYTE PTR [esp+edx*1+0x3af258c5],al
  4037aa:	mov    eax,0xdc32ed3d
  4037af:	adc    eax,0x33e6bf5d
  4037b4:	lock adc eax,0xadd21a1d
  4037ba:	inc    esp
  4037bb:	in     eax,0x0
  4037bd:	push   edi
  4037be:	and    eax,0xf7259ec
  4037c3:	das    
  4037c4:	xlat   BYTE PTR ds:[ebx]
  4037c5:	scas   eax,DWORD PTR es:[edi]
  4037c6:	test   al,0x4a
  4037c8:	mov    ds:0x9acbf33e,eax
  4037cd:	mov    edx,ebx
  4037cf:	and    cl,al
  4037d1:	ret    
  4037d2:	mov    dl,0x1e
  4037d4:	mov    eax,ds:0xebbe6dd8
  4037d9:	dec    edi
  4037da:	sbb    edx,DWORD PTR [ebx+0x1c523164]
  4037e0:	sub    ebp,eax
  4037e2:	pop    ss
  4037e3:	mov    eax,ds:0x778dbac6
  4037e8:	das    
  4037e9:	lahf   
  4037ea:	mov    bh,0x2a
  4037ec:	aam    0xf8
  4037ee:	stc    
  4037ef:	nop
  4037f0:	bound  eax,QWORD PTR ds:[ebp+0x51]
  4037f4:	fisubr WORD PTR [esi+0x693e2384]
  4037fa:	outs   dx,DWORD PTR ds:[esi]
  4037fb:	ja     0x4037dc
  4037fd:	pop    eax
  4037fe:	inc    ecx
  4037ff:	and    DWORD PTR [ecx],ebx
  403801:	and    esp,DWORD PTR es:[edi+0x3]
  403805:	push   edi
  403806:	jmp    0x65ec:0x65374cfe
  40380d:	xor    ebx,esi
  40380f:	jno    0x4037fc
  403811:	les    eax,FWORD PTR [edi]
  403813:	retf   0xc93d
  403816:	pushf  
  403817:	sbb    BYTE PTR [eax-0x2963e61e],0x1e
  40381e:	push   eax
  40381f:	mov    ds,edi
  403821:	jne    0x403855
  403823:	sub    DWORD PTR [edx+eax*4-0x46],edx
  403827:	sti    
  403828:	fwait
  403829:	lods   al,BYTE PTR ds:[esi]
  40382a:	pop    es
  40382b:	mov    esi,0xa55b3200
  403830:	jp     0x403887
  403832:	fwait
  403833:	mov    al,ds:0xc7c298e
  403838:	pop    ebx
  403839:	push   es
  40383a:	fwait
  40383b:	sbb    bh,BYTE PTR [ebx]
  40383d:	xchg   ecx,eax
  40383e:	mov    al,BYTE PTR [edi]
  403840:	jns    0x4038bf
  403842:	jp     0x403840
  403844:	outs   dx,BYTE PTR ds:[esi]
  403845:	(bad)  
  403846:	leave  
  403847:	fnsave [edi+0xc503830]
  40384d:	mov    bh,0x77
  40384f:	pop    esi
  403850:	xor    cl,BYTE PTR [edx+0x1c611e7d]
  403856:	(bad)  
  403857:	xor    ch,BYTE PTR [ebx+0x79a028ca]
  40385d:	adc    al,0x4b
  40385f:	imul   DWORD PTR [edx]
  403861:	scas   al,BYTE PTR es:[edi]
  403862:	mov    ecx,DWORD PTR [ebx-0x3b]
  403865:	dec    edx
  403866:	loope  0x403864
  403868:	(bad)  [eax+ecx*8]
  40386b:	mov    BYTE PTR [edx],bh
  40386d:	and    BYTE PTR [esi+edx*8+0x4d],cl
  403871:	or     ecx,eax
  403873:	test   al,0x81
  403875:	and    al,0xc0
  403877:	adc    BYTE PTR [edi],cl
  403879:	mov    al,ds:0x299ca9eb
  40387e:	mov    al,0x6d
  403880:	imul   ecx,DWORD PTR [edx],0xad945053
  403886:	ja     0x403842
  403888:	fcomp  QWORD PTR [edi]
  40388a:	jae    0x403820
  40388c:	dec    esp
  40388d:	outs   dx,BYTE PTR ds:[esi]
  40388e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40388f:	mov    esi,0x93ad1eaa
  403894:	mov    ?,WORD PTR [ecx]
  403896:	int    0x90
  403898:	(bad)  
  403899:	out    0xf0,eax
  40389b:	hlt    
  40389c:	sbb    eax,0x639088d1
  4038a1:	jmp    0x40382c
  4038a3:	outs   dx,BYTE PTR ds:[esi]
  4038a4:	mov    ecx,0x5350875e
  4038a9:	xchg   ebp,eax
  4038aa:	call   0xd3591f59
  4038af:	mov    ah,0x72
  4038b1:	addr16 (bad) 
  4038b3:	in     eax,0xad
  4038b5:	mov    ebx,0x64eab499
  4038ba:	push   esp
  4038bb:	sub    eax,0x325d01db
  4038c0:	test   BYTE PTR [eax-0x6e90cf55],0x96
  4038c7:	loope  0x403898
  4038c9:	mov    bh,0x2f
  4038cb:	inc    ecx
  4038cc:	mov    ds:0xeda35d22,al
  4038d1:	mov    dl,0x41
  4038d3:	stos   DWORD PTR es:[edi],eax
  4038d4:	jmp    0xb3fa:0xd57afe1b
  4038db:	fldenv ds:[edi+0xfc95756]
  4038e2:	fcomp  QWORD PTR [edx-0x1e]
  4038e5:	stos   DWORD PTR es:[edi],eax
  4038e6:	aaa    
  4038e7:	call   DWORD PTR [edx]
  4038e9:	mov    eax,ds:0x8ec0aaa7
  4038ee:	imul   eax,esi,0xa26136a9
  4038f4:	mov    ds:0xc25efd8b,al
  4038f9:	push   edi
  4038fa:	mov    bh,0xe3
  4038fc:	jae    0x40395a
  4038fe:	sub    ebx,DWORD PTR [eax]
  403900:	(bad)  
  403901:	test   bh,0xaa
  403904:	and    eax,0xdd58b251
  403909:	scas   eax,DWORD PTR es:[edi]
  40390a:	and    eax,0x93603712
  40390f:	sub    esp,DWORD PTR [edi-0x44]
  403912:	jno    0x4038d6
  403914:	out    dx,eax
  403915:	lea    edi,cs:[ecx+0x467a3f00]
  40391c:	or     al,0x8d
  40391e:	push   esi
  40391f:	xchg   BYTE PTR [ebx+0x2],bl
  403922:	cli    
  403923:	(bad)  
  403924:	clc    
  403925:	div    BYTE PTR [edi]
  403927:	out    0x61,eax
  403929:	test   eax,0x11ef0be5
  40392e:	shl    DWORD PTR [ecx+0x6a],1
  403931:	int    0x7f
  403933:	fstp   TBYTE PTR [edx-0x78540e18]
  403939:	or     dl,bh
  40393b:	xor    BYTE PTR [esi-0x7],ah
  40393e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40393f:	xchg   esp,eax
  403940:	fcomip st,st(5)
  403942:	xor    cl,0x32
  403945:	cli    
  403946:	mov    esi,0x5f33f69c
  40394b:	inc    ebp
  40394c:	fs add eax,0x388ff5d1
  403952:	sbb    BYTE PTR [edi],bl
  403954:	jge    0x403944
  403956:	xchg   edx,eax
  403957:	xor    al,0x6e
  403959:	dec    esi
  40395a:	adc    cl,BYTE PTR [edi-0x6b]
  40395d:	or     DWORD PTR [edi+0x1b],ebp
  403960:	rcl    BYTE PTR [ebx+0x25],0xf
  403964:	imul   edi,DWORD PTR [eax+esi*8],0x53
  403968:	push   edx
  403969:	retf   
  40396a:	lods   eax,DWORD PTR ds:[esi]
  40396b:	mov    ds:0xb1a192b8,al
  403970:	inc    ecx
  403971:	sbb    DWORD PTR [ecx+0x17],esp
  403974:	cmp    bh,BYTE PTR ds:0x49004dfc
  40397a:	xchg   BYTE PTR [esi],dl
  40397c:	mov    BYTE PTR [edi+0x11],0x15
  403980:	xlat   BYTE PTR ds:[ebx]
  403981:	mov    bl,0xff
  403983:	jnp    0x403985
  403985:	xlat   BYTE PTR ds:[ebx]
  403986:	mov    DWORD PTR [esi-0x5f],ebp
  403989:	pop    ecx
  40398a:	sub    DWORD PTR [edi+edi*2+0x0],esi
  40398e:	mov    ds:0x35ee5fcc,eax
  403993:	mov    bl,0xe3
  403995:	and    BYTE PTR [ebp-0x26],ch
  403998:	inc    ebx
  403999:	mov    ebp,0x81c061a4
  40399e:	jno    0x403970
  4039a0:	mov    ds:0xecb3f1d4,al
  4039a5:	mov    esp,DWORD PTR [ebp*8+0x64505801]
  4039ac:	fimul  DWORD PTR [ebx+0x442d8cc6]
  4039b2:	stos   DWORD PTR es:[edi],eax
  4039b3:	icebp  
  4039b4:	jo     0x40396f
  4039b6:	daa    
  4039b7:	aam    0x65
  4039b9:	jmp    0x4039b5
  4039bb:	outs   dx,BYTE PTR ds:[esi]
  4039bc:	mov    gs,eax
  4039be:	mov    bl,0x89
  4039c0:	stos   DWORD PTR es:[edi],eax
  4039c1:	arpl   WORD PTR [edx],ax
  4039c3:	clc    
  4039c4:	lods   al,BYTE PTR ds:[esi]
  4039c5:	int    0x77
  4039c7:	mov    dh,0xfe
  4039c9:	cmp    al,0x9c
  4039cb:	push   ss
  4039cc:	mov    ds:0xfc44af36,eax
  4039d1:	fild   WORD PTR [edi+0x10]
  4039d4:	gs cli 
  4039d6:	adc    dh,BYTE PTR [edx+0x7b]
  4039d9:	(bad)  
  4039da:	mov    dl,0xb8
  4039dc:	lahf   
  4039dd:	xor    esp,esi
  4039df:	mov    ecx,0xfdc1554
  4039e4:	xchg   ebp,eax
  4039e5:	adc    eax,0x4bb0076b
  4039ea:	call   0xd739b23c
  4039ef:	daa    
  4039f0:	xchg   esp,eax
  4039f1:	aad    0x65
  4039f3:	cmp    eax,0xc30779b9
  4039f8:	jne    0x4039b3
  4039fa:	dec    edx
  4039fb:	test   BYTE PTR [ecx+eiz*1-0x31],0x68
  403a00:	fst    QWORD PTR [ebx+0x64dedbff]
  403a06:	js     0x4039e3
  403a08:	imul   esi,DWORD PTR [ebp+0x4d3a4b39],0xdbc0d59
  403a12:	and    BYTE PTR [eax],dh
  403a14:	fs mov esp,0xf992eb2f
  403a1a:	mov    ebp,fs
  403a1c:	dec    edi
  403a1d:	mov    eax,ds:0x9debace1
  403a22:	mov    al,0xd6
  403a24:	xchg   ebx,eax
  403a25:	and    ebp,esp
  403a27:	xor    al,0xd2
  403a29:	push   ecx
  403a2a:	push   0x44be9198
  403a2f:	inc    ebx
  403a30:	stos   DWORD PTR es:[edi],eax
  403a31:	mov    BYTE PTR ds:0xf7def90b,bl
  403a37:	lock adc BYTE PTR [ebx],al
  403a3a:	data16 aas 
  403a3c:	imul   esi,DWORD PTR [edx-0x2f1ba433],0x4c
  403a43:	mov    al,ds:0xdfd463a5
  403a48:	and    BYTE PTR [ecx+0x1551553c],bh
  403a4e:	add    dh,dh
  403a50:	test   eax,0xb9b920ba
  403a55:	stc    
  403a56:	or     DWORD PTR [ecx+0x3570955b],ebx
  403a5c:	inc    esi
  403a5d:	in     al,dx
  403a5e:	or     DWORD PTR [edx+0x11],edx
  403a61:	out    dx,al
  403a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a63:	mov    al,ds:0xa32f6594
  403a68:	daa    
  403a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a6a:	xor    bl,BYTE PTR [esi-0x3f51ad6]
  403a70:	inc    ebp
  403a71:	test   ecx,ebp
  403a73:	push   0xaf523d30
  403a78:	jns    0x403a61
  403a7a:	stos   DWORD PTR es:[edi],eax
  403a7b:	leave  
  403a7c:	shr    BYTE PTR [ebx-0x1d],cl
  403a7f:	lahf   
  403a80:	fdivr  QWORD PTR [esi+0x2d]
  403a83:	mul    edi
  403a85:	daa    
  403a86:	ss add cl,cl
  403a89:	pushf  
  403a8a:	data16 jecxz 0x403b00
  403a8d:	jl     0x403ad3
  403a8f:	ja     0x403a6a
  403a91:	imul   eax,DWORD PTR [esi+0x25],0xffffffd5
  403a95:	fld    QWORD PTR [ebx-0x6a]
  403a98:	lahf   
  403a99:	sti    
  403a9a:	add    ch,cl
  403a9c:	fimul  DWORD PTR [edi+0x7a11751e]
  403aa2:	std    
  403aa3:	retf   
  403aa4:	int    0x54
  403aa6:	mov    ds:0xbb726106,al
  403aab:	rol    ebx,cl
  403aad:	repz repz inc esp
  403ab0:	pop    es
  403ab1:	cdq    
  403ab2:	cwde   
  403ab3:	mov    ch,0x61
  403ab5:	je     0x403aa1
  403ab7:	fistp  QWORD PTR [ebp+0x3de5d62a]
  403abd:	push   eax
  403abe:	and    edi,0x1ac061db
  403ac4:	mov    esp,0x4e338565
  403ac9:	cs stos BYTE PTR es:[edi],al
  403acb:	cmp    al,0xed
  403acd:	sbb    eax,0x5bd3c388
  403ad2:	and    DWORD PTR [eax-0x76],ebx
  403ad5:	mov    eax,ds:0x72562526
  403ada:	out    dx,al
  403adb:	pop    eax
  403adc:	ret    0xec89
  403adf:	les    esi,FWORD PTR [edi+0x51c8c710]
  403ae5:	les    edi,FWORD PTR [ecx+0x16c07fd5]
  403aeb:	leave  
  403aec:	or     eax,0xab4d1fa4
  403af1:	xchg   edx,eax
  403af2:	test   al,0x9a
  403af4:	and    DWORD PTR [eax+eiz*8+0x4c5644cf],ebp
  403afb:	adc    al,0x3c
  403afd:	dec    edi
  403afe:	outs   dx,DWORD PTR ds:[esi]
  403aff:	fsubp  st(5),st
  403b01:	das    
  403b02:	or     dl,dh
  403b04:	sbb    edx,ebp
  403b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b07:	les    esi,FWORD PTR [ebp-0x543cd6e6]
  403b0d:	sbb    BYTE PTR [edx+0x6b6a726e],dl
  403b13:	nop
  403b14:	(bad)  
  403b15:	mov    ds:0x74dee4f5,al
  403b1a:	aas    
  403b1b:	sub    ch,dl
  403b1d:	aaa    
  403b1e:	or     esp,DWORD PTR [ecx-0x6b]
  403b21:	push   ebp
  403b22:	mov    edi,0x8378aefd
  403b27:	ss je  0x403b20
  403b2a:	xor    ch,BYTE PTR [ecx-0x59a8cef7]
  403b30:	inc    esi
  403b31:	mov    bl,0xb8
  403b33:	and    eax,0x3b49da8e
  403b38:	loope  0x403aee
  403b3a:	sub    al,0x40
  403b3c:	lods   eax,DWORD PTR ds:[esi]
  403b3d:	inc    esi
  403b3e:	pop    edi
  403b3f:	adc    eax,0x9a449516
  403b44:	inc    ebx
  403b45:	mov    al,ds:0xc9c6273d
  403b4a:	xchg   esi,eax
  403b4b:	(bad)  
  403b4c:	cli    
  403b4d:	cli    
  403b4e:	sub    DWORD PTR [ebp+eax*1+0x10],esp
  403b52:	cdq    
  403b53:	aam    0x5a
  403b55:	xchg   ebx,eax
  403b56:	fild   QWORD PTR [ebp-0x17]
  403b59:	fisub  DWORD PTR [ebx-0x7cf64186]
  403b5f:	cs jl  0x403bb2
  403b62:	adc    BYTE PTR [eax],ah
  403b64:	mov    edi,0xda6180c5
  403b69:	sbb    eax,0x40339fda
  403b6e:	sub    DWORD PTR [edx],edx
  403b70:	sub    al,0x6c
  403b72:	mov    ecx,0x52f71e75
  403b77:	fmul   DWORD PTR [ecx+0x5635d84c]
  403b7d:	int3   
  403b7e:	adc    al,0xc4
  403b80:	mov    edx,0x9c43317b
  403b85:	mov    esi,0xc9e4a509
  403b8a:	mov    edx,0x7482033c
  403b8f:	dec    ebp
  403b90:	aam    0x4
  403b92:	jb     0x403c11
  403b94:	dec    ebp
  403b95:	jl     0x403b1b
  403b97:	add    ebp,edi
  403b99:	mov    cx,0xbcd6
  403b9d:	inc    edi
  403b9e:	aam    0x61
  403ba0:	push   ss
  403ba1:	mov    esi,0x3294035e
  403ba6:	sbb    ecx,DWORD PTR [ebx-0x2b469672]
  403bac:	push   ecx
  403bad:	dec    ebx
  403bae:	cli    
  403baf:	lea    ebp,[edi+0x3f]
  403bb2:	mov    ds,WORD PTR [ebp+0x11ee116a]
  403bb8:	(bad)  [edx+0x8d9b408]
  403bbe:	sub    al,0xa8
  403bc0:	arpl   WORD PTR es:[edi],cx
  403bc3:	mov    ch,0x6f
  403bc5:	push   ebp
  403bc6:	xor    eax,0xc4bcab86
  403bcb:	pop    eax
  403bcc:	push   ebp
  403bcd:	push   edi
  403bce:	pop    ebp
  403bcf:	cwde   
  403bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bd1:	mov    eax,esi
  403bd3:	cwde   
  403bd4:	xor    DWORD PTR [eax-0x76eb8fe6],edx
  403bda:	ins    BYTE PTR es:[edi],dx
  403bdb:	mov    ch,0xbd
  403bdd:	xlat   BYTE PTR ds:[ebx]
  403bde:	hlt    
  403bdf:	or     BYTE PTR [ebx+0x145d9a56],bl
  403be5:	mov    ds:0x9e1c4b8,al
  403bea:	into   
  403beb:	mov    al,0x9f
  403bed:	and    al,0xc7
  403bef:	add    BYTE PTR [edi],bl
  403bf1:	inc    ebp
  403bf2:	or     al,0x65
  403bf4:	in     al,dx
  403bf5:	fmul   DWORD PTR [eax+0x3e]
  403bf8:	rol    DWORD PTR [edx+edi*1-0x5b138d2],cl
  403bff:	inc    eax
  403c00:	push   ecx
  403c01:	cmp    ecx,DWORD PTR [edx]
  403c03:	push   ebp
  403c04:	outs   dx,BYTE PTR ds:[esi]
  403c05:	idiv   ebp
  403c07:	js     0x403c6c
  403c09:	mov    ebx,0x363d08fd
  403c0e:	lahf   
  403c0f:	dec    esp
  403c10:	jl     0x403c00
  403c12:	imul   ecx,esp,0x1527c9d8
  403c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c19:	xlat   BYTE PTR ds:[ebx]
  403c1a:	inc    esp
  403c1b:	mov    ch,0x6
  403c1d:	or     al,0xd6
  403c1f:	or     eax,0xe10c05d6
  403c24:	lock pop esp
  403c26:	mov    ebx,0x232962ae
  403c2b:	inc    esp
  403c2c:	std    
  403c2d:	je     0x403c5f
  403c2f:	adc    BYTE PTR [ebp+0x4b261bb2],bh
  403c35:	pushf  
  403c36:	xchg   edx,eax
  403c37:	lea    ecx,ds:0xdf2d7aa4
  403c3d:	mov    cl,0xe
  403c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c40:	int3   
  403c41:	cmp    DWORD PTR [ebx-0xd],ebp
  403c44:	and    BYTE PTR [ebp+0x69],bl
  403c47:	pop    ebx
  403c48:	dec    ebp
  403c49:	cwde   
  403c4a:	out    0xbe,eax
  403c4c:	test   DWORD PTR [ebx-0x10],edx
  403c4f:	int3   
  403c50:	pop    es
  403c51:	je     0x403bfd
  403c53:	js     0x403c8a
  403c55:	mov    bl,0x75
  403c57:	int    0x6e
  403c59:	(bad)  
  403c5b:	xor    edx,DWORD PTR [ebp-0x246b0da1]
  403c61:	call   0x6147f619
  403c66:	push   ebx
  403c67:	pop    ebp
  403c68:	rcl    al,cl
  403c6a:	cmp    al,0x7c
  403c6c:	mov    WORD PTR [eax+0xc],ss
  403c6f:	aam    0x82
  403c71:	add    esp,DWORD PTR [ebp-0x57]
  403c74:	repnz xchg edi,eax
  403c76:	mov    eax,ds:0x5e0a56b
  403c7b:	sbb    esi,DWORD PTR [esi+0x7c]
  403c7e:	ret    
  403c7f:	inc    edx
  403c80:	xor    al,0xbb
  403c82:	cld    
  403c83:	mov    eax,0xa8dfe399
  403c88:	jmp    0x3b03:0xea2495f
  403c8f:	int3   
  403c90:	xor    al,0x96
  403c92:	loop   0x403cf9
  403c94:	or     esi,DWORD PTR ss:[ebx]
  403c97:	sbb    eax,0x91564d48
  403c9c:	adc    BYTE PTR [ebp+0x4d],ah
  403c9f:	inc    ebx
  403ca0:	adc    al,0xec
  403ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ca3:	fucom  st(2)
  403ca5:	inc    esi
  403ca6:	nop
  403ca7:	sub    al,0x70
  403ca9:	xlat   BYTE PTR ds:[ebx]
  403caa:	mov    al,ds:0x3c72cf0
  403caf:	mov    esi,ebx
  403cb1:	mov    fs,WORD PTR [esi-0x25]
  403cb4:	pop    ebp
  403cb5:	stos   DWORD PTR es:[edi],eax
  403cb6:	mov    ch,0x3c
  403cb8:	inc    esi
  403cb9:	cmp    esp,DWORD PTR [eax-0x2aa70289]
  403cbf:	xchg   ebx,eax
  403cc0:	jmp    0xdf35:0x8028ebd1
  403cc7:	jmp    0x9ae87509
  403ccc:	(bad)  
  403ccd:	mov    dl,0x14
  403ccf:	outs   dx,BYTE PTR ds:[esi]
  403cd0:	dec    edi
  403cd1:	mov    cl,ch
  403cd3:	pop    ebp
  403cd4:	dec    esp
  403cd5:	push   ss
  403cd6:	in     al,dx
  403cd7:	jmp    0xfee6:0xad8aba13
  403cde:	xchg   BYTE PTR [ecx+0x61dff94c],bh
  403ce4:	mov    esp,0x7982c14d
  403ce9:	lock test DWORD PTR [esi+0x7e],ebx
  403ced:	inc    ebx
  403cee:	push   0xffffff80
  403cf0:	mov    esi,0x2c4704b7
  403cf5:	jmp    0xa081:0x2be8a608
  403cfc:	loope  0x403cd8
  403cfe:	cli    
  403cff:	mov    edx,0xea8d77c9
  403d04:	mov    edi,es
  403d06:	ror    BYTE PTR [ebx+0x5e],0xbb
  403d0a:	lock aas 
  403d0c:	jl     0x403d01
  403d0e:	sbb    esp,edi
  403d10:	push   ebx
  403d11:	jmp    0x6095:0x67664509
  403d18:	mov    BYTE PTR [eax],bh
  403d1a:	enter  0x63d3,0x33
  403d1e:	or     al,0x61
  403d20:	fdivr  QWORD PTR [edx+ebp*2+0x675e3f73]
  403d27:	(bad)  
  403d28:	call   0xdb23eb1d
  403d2d:	mov    dh,0x6
  403d2f:	into   
  403d30:	pop    esp
  403d31:	repz loope 0x403ce9
  403d34:	sub    esi,esi
  403d36:	xchg   edi,eax
  403d37:	stos   DWORD PTR es:[edi],eax
  403d38:	lahf   
  403d39:	scas   al,BYTE PTR es:[edi]
  403d3a:	popa   
  403d3b:	jp     0x403cc4
  403d3d:	cwde   
  403d3e:	push   es
  403d3f:	push   esi
  403d40:	out    dx,eax
  403d41:	push   esp
  403d42:	pop    ecx
  403d43:	out    0xd,eax
  403d45:	jns    0x403d4b
  403d47:	outs   dx,DWORD PTR ds:[esi]
  403d48:	repz mov dl,0xc5
  403d4b:	jae    0x403d64
  403d4d:	sbb    cl,al
  403d4f:	inc    BYTE PTR [eax-0x96e7c7a]
  403d55:	jg     0x403d02
  403d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d58:	mov    eax,0x87bd566a
  403d5d:	daa    
  403d5e:	lds    esp,FWORD PTR [ebx]
  403d60:	pop    ds
  403d61:	pop    ss
  403d62:	ret    0xf2dd
  403d65:	repz call DWORD PTR [ebp+0x4da7565c]
  403d6c:	pusha  
  403d6d:	mov    cl,0x9a
  403d6f:	push   0x45c479fb
  403d74:	cwde   
  403d75:	and    eax,0x6fdb63a4
  403d7a:	fbstp  TBYTE PTR [esp+ebx*8-0x5f8168dc]
  403d81:	jp     0x403d9e
  403d83:	sub    al,0x91
  403d85:	sti    
  403d86:	out    dx,eax
  403d87:	dec    esp
  403d88:	and    dh,bh
  403d8a:	jmp    0xc0bb1c0
  403d8f:	xor    dh,BYTE PTR [ebx-0x456f1e4]
  403d95:	gs mov ebp,0x89f26ed7
  403d9b:	sar    ebx,1
  403d9d:	push   ebx
  403d9e:	(bad)  
  403d9f:	(bad)
  403da2:	ins    DWORD PTR es:[edi],dx
  403da3:	mov    ch,0xa7
  403da5:	lock fdivr DWORD PTR [edi-0x31]
  403da9:	xchg   ecx,edi
  403dab:	test   ch,cl
  403dad:	mov    dh,0x6a
  403daf:	pusha  
  403db0:	test   BYTE PTR [edx+0x17522152],cl
  403db6:	jo     0x403d45
  403db8:	scas   eax,DWORD PTR es:[edi]
  403db9:	retf   0xebd8
  403dbc:	inc    edx
  403dbd:	or     edi,DWORD PTR [edx-0x7823553e]
  403dc3:	dec    edi
  403dc4:	adc    BYTE PTR [ecx],al
  403dc6:	push   esp
  403dc7:	loope  0x403e30
  403dc9:	push   ds
  403dca:	push   0x5d
  403dcc:	dec    edx
  403dcd:	xchg   edx,eax
  403dce:	loope  0x403df4
  403dd0:	inc    edi
  403dd1:	(bad)  
  403dd2:	sbb    DWORD PTR [edx-0x34815dd7],esi
  403dd8:	xchg   BYTE PTR [ebp+0x5d],ah
  403ddb:	je     0x403dd4
  403ddd:	mov    BYTE PTR [edi+0xbbee049],ah
  403de3:	jnp    0x403e09
  403de5:	outs   dx,BYTE PTR ds:[esi]
  403de6:	retf   
  403de7:	je     0x403d6a
  403de9:	cmc    
  403dea:	sub    ah,al
  403dec:	in     al,dx
  403ded:	leave  
  403dee:	push   esi
  403def:	jns    0x403d92
  403df1:	test   eax,0x426112b9
  403df6:	adc    BYTE PTR [ecx+0x1febab2],ah
  403dfc:	stc    
  403dfd:	or     cl,dh
  403dff:	(bad)  
  403e00:	push   esp
  403e01:	mov    DWORD PTR [edx+0x55d62556],eax
  403e07:	xor    DWORD PTR [esi],edi
  403e09:	fidiv  WORD PTR [ecx]
  403e0b:	sbb    dl,BYTE PTR [eax]
  403e0d:	test   al,0xd0
  403e0f:	pop    esp
  403e10:	and    bh,ah
  403e12:	ffreep st(0)
  403e14:	test   DWORD PTR [ebx+0x63],ebp
  403e17:	setns  BYTE PTR ds:0x3d585a9c
  403e1e:	or     eax,0xabbfcc01
  403e23:	lea    esp,[ebx-0x20]
  403e26:	sar    ecx,0x94
  403e29:	sbb    al,0xde
  403e2b:	mov    esp,0x8fd25a64
  403e30:	scas   eax,DWORD PTR es:[edi]
  403e31:	outs   dx,BYTE PTR ds:[esi]
  403e32:	out    dx,eax
  403e33:	xor    DWORD PTR [edx-0x3e1897ca],edx
  403e39:	or     ebx,DWORD PTR [ecx+0x2e]
  403e3c:	push   esi
  403e3d:	ror    BYTE PTR ds:0x3e8f,1
  403e42:	test   BYTE PTR [ecx],dl
  403e44:	ja     0x403e08
  403e46:	jp     0x403e6e
  403e48:	test   DWORD PTR [bp+si+0x77],edx
  403e4c:	adc    DWORD PTR [ebx-0x6c],ebp
  403e4f:	cmp    dl,BYTE PTR [eax-0x26ad0624]
  403e55:	fist   WORD PTR [edi]
  403e57:	mov    ds:0x7d37e927,eax
  403e5c:	mov    ds:0xe13d57c2,al
  403e61:	xchg   ebx,eax
  403e62:	push   ebp
  403e63:	rcr    DWORD PTR [ecx+0x438426d8],1
  403e69:	mov    ebp,DWORD PTR [edi]
  403e6b:	sar    BYTE PTR [ecx+0x0],cl
  403e6e:	stc    
  403e6f:	fidiv  DWORD PTR [edi+eax*1-0x7eeec147]
  403e76:	mov    cl,dl
  403e78:	adc    BYTE PTR [ecx-0x177c8ab6],al
  403e7e:	bnd jae 0x403e56
  403e81:	std    
  403e82:	data16 js 0x403e8d
  403e85:	cdq    
  403e86:	int    0x11
  403e88:	mov    al,0x96
  403e8a:	sub    BYTE PTR [edi+ebx*1+0x22],dl
  403e8e:	adc    al,0x45
  403e90:	out    dx,al
  403e91:	mov    BYTE PTR [ecx+edx*4],bl
  403e94:	dec    edi
  403e95:	test   al,0x33
  403e97:	add    ecx,ebx
  403e99:	cli    
  403e9a:	sti    
  403e9b:	lea    eax,[ebx-0x2d4ac3db]
  403ea1:	pop    edi
  403ea2:	cmp    eax,0x4a7a5f51
  403ea7:	fmul   QWORD PTR [ecx-0x16f6d44b]
  403ead:	fwait
  403eae:	sub    al,0x35
  403eb0:	jg     0x403e82
  403eb2:	push   ebp
  403eb3:	in     eax,dx
  403eb4:	pop    ss
  403eb5:	mov    al,0x92
  403eb7:	xlat   BYTE PTR ds:[ebx]
  403eb8:	mov    ds:0x901f38b0,al
  403ebd:	jo     0x403e86
  403ebf:	inc    esp
  403ec0:	xor    ecx,DWORD PTR [ebp+0xcd2f53b]
  403ec6:	call   DWORD PTR [edx+0x2f35b7e7]
  403ecc:	jmp    0x12358df0
  403ed1:	stos   DWORD PTR es:[edi],eax
  403ed2:	inc    esi
  403ed3:	mov    ebx,0x32daa564
  403ed8:	fbstp  TBYTE PTR [esi+0x47]
  403edb:	mov    al,0x62
  403edd:	and    BYTE PTR [edx+0x533b0bd9],ah
  403ee3:	mov    ah,0x4d
  403ee5:	mov    bh,BYTE PTR [ebp-0x3b]
  403ee8:	cmp    esp,DWORD PTR [ebp+0x5d]
  403eeb:	and    DWORD PTR [ebx+0x3a],eax
  403eee:	lds    ecx,FWORD PTR [esi+edx*4+0x1a]
  403ef2:	shl    DWORD PTR ds:0x17c37a31,0xa3
  403ef9:	mov    ecx,0x9872b83
  403efe:	ja     0x403f4d
  403f00:	inc    esp
  403f01:	inc    esi
  403f02:	loope  0x403e9e
  403f04:	and    BYTE PTR [esi+0x3e],cl
  403f07:	and    eax,0x96d608ed
  403f0c:	inc    edi
  403f0d:	inc    ecx
  403f0e:	push   ebx
  403f0f:	lods   al,BYTE PTR ds:[esi]
  403f10:	jo     0x403ee4
  403f12:	mov    ah,0x57
  403f14:	adc    BYTE PTR [eax-0x76],bl
  403f17:	call   0xc3f80b1c
  403f1c:	inc    edx
  403f1d:	push   0x7c
  403f1f:	ror    DWORD PTR [edx-0x5f75e57e],cl
  403f25:	xor    al,0x8
  403f27:	jmp    FWORD PTR [edx+ebp*4]
  403f2a:	mov    DWORD PTR [edx-0x71cf1910],0xe3ae3637
  403f34:	int3   
  403f35:	(bad)  
  403f36:	ftst   
  403f38:	stos   BYTE PTR es:[edi],al
  403f39:	popa   
  403f3a:	push   sp
  403f3c:	push   edx
  403f3d:	xchg   BYTE PTR [esi],dh
  403f3f:	std    
  403f40:	jle    0x403fbd
  403f42:	outs   dx,DWORD PTR ds:[esi]
  403f43:	fnstsw WORD PTR [edx]
  403f45:	ret    
  403f46:	outs   dx,BYTE PTR ds:[esi]
  403f47:	and    al,0x3e
  403f49:	pop    ecx
  403f4a:	jle    0x403fb0
  403f4c:	aaa    
  403f4d:	call   0x2a7b:0x4d7bded6
  403f54:	repnz popa 
  403f56:	icebp  
  403f57:	push   ebp
  403f58:	js     0x403fd0
  403f5a:	sub    DWORD PTR [ebx-0x66],edi
  403f5d:	pop    ds
  403f5e:	shl    DWORD PTR [eax+0x34a2356a],0x5e
  403f65:	push   ecx
  403f66:	adc    bl,BYTE PTR [ecx]
  403f68:	push   cs
  403f69:	mov    eax,0xc883f46c
  403f6e:	jle    0x403fba
  403f70:	and    BYTE PTR [ebx-0x73a0d22b],ah
  403f76:	std    
  403f77:	sub    bl,0x68
  403f7a:	shl    DWORD PTR [edx],1
  403f7c:	jo     0x403f75
  403f7e:	test   dh,al
  403f80:	ss mov bl,0x91
  403f83:	mov    ch,0xcb
  403f85:	cli    
  403f86:	inc    ebp
  403f87:	sbb    edi,DWORD PTR [ecx]
  403f89:	sti    
  403f8a:	js     0x403f28
  403f8c:	aas    
  403f8d:	shr    DWORD PTR [edx-0x3fd25262],cl
  403f93:	adc    ebx,edi
  403f95:	outs   dx,BYTE PTR ds:[esi]
  403f96:	test   eax,0xf442e76c
  403f9b:	mov    al,BYTE PTR [eax+0x4013fea8]
  403fa1:	xchg   ebx,eax
  403fa2:	aas    
  403fa3:	loopne 0x403f97
  403fa5:	push   ebp
  403fa6:	daa    
  403fa7:	jb     0x404017
  403fa9:	push   edx
  403faa:	mov    ah,0x7f
  403fac:	outs   dx,BYTE PTR ds:[esi]
  403fad:	push   ebp
  403fae:	and    ch,cl
  403fb0:	je     0x40401d
  403fb2:	xchg   ebx,eax
  403fb3:	xchg   edi,eax
  403fb4:	mov    bl,0x30
  403fb6:	les    edi,FWORD PTR [esi+0x9db2889]
  403fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fbe:	pop    ebx
  403fbf:	test   DWORD PTR [esi+0x70bab737],edi
  403fc5:	xchg   edi,eax
  403fc6:	cmp    ebx,DWORD PTR [ecx-0x1]
  403fc9:	jg     0x403f96
  403fcb:	sbb    eax,0xda98eff5
  403fd0:	fisubr WORD PTR [edx+0x2c]
  403fd3:	mov    bl,0xda
  403fd5:	lock adc BYTE PTR [eax-0x47],dl
  403fd9:	adc    BYTE PTR [edi],0x29
  403fdc:	jp     0x403fa9
  403fde:	mov    dh,0xb5
  403fe0:	call   0x5873:0x6d8432e6
  403fe7:	jle    0x40404d
  403fe9:	and    DWORD PTR [edx],0xabd7bbc0
  403fef:	mov    ds:0x3b3df3f9,al
  403ff4:	(bad)  
  403ff5:	loop   0x40406d
  403ff7:	push   es
  403ff8:	(bad)  
  403ff9:	push   esi
  403ffa:	push   ss
  403ffb:	xchg   esi,eax
  403ffc:	aaa    
  403ffd:	(bad)  [edx-0x66]
  404000:	adc    DWORD PTR [edi],0xe
  404003:	(bad)  
  404004:	adc    eax,0xeb66abe6
  404009:	mov    bl,0xe1
  40400b:	outs   dx,WORD PTR ds:[esi]
  40400d:	inc    eax
  40400e:	jns    0x403ff7
  404010:	sub    edi,DWORD PTR [edx-0x34d6556d]
  404016:	cmp    BYTE PTR [ebx+0x6],dh
  404019:	or     eax,0xde78f04f
  40401e:	jl     0x40409a
  404020:	adc    edi,DWORD PTR [esi]
  404022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404023:	(bad)  
  404024:	imul   edi,DWORD PTR [edi+ebp*2+0x6e6cb67c],0x5a
  40402c:	pop    ecx
  40402d:	xor    eax,0x4bd4a2dd
  404032:	dec    esi
  404033:	sbb    BYTE PTR [edi-0x70],bl
  404036:	add    ah,BYTE PTR [esi-0x3bc3ce5]
  40403c:	pop    ebx
  40403d:	jl     0x40409b
  40403f:	aas    
  404040:	add    al,0x9e
  404042:	jecxz  0x4040a5
  404044:	push   ecx
  404045:	popa   
  404046:	or     DWORD PTR [ebx-0x32],ecx
  404049:	and    eax,DWORD PTR [ebx]
  40404b:	push   edi
  40404c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40404d:	xchg   esp,eax
  40404e:	pop    ebx
  40404f:	out    dx,al
  404050:	cdq    
  404051:	jmp    0x404039
  404053:	and    esi,esp
  404055:	hlt    
  404056:	clc    
  404057:	scas   eax,DWORD PTR es:[edi]
  404058:	jno    0x40409e
  40405a:	sub    ecx,DWORD PTR [ecx-0x65]
  40405d:	je     0x4040b8
  40405f:	call   0x416e:0x3aa221ab
  404066:	jo     0x40407e
  404068:	push   esi
  404069:	inc    edi
  40406a:	repnz and BYTE PTR [esi+0x2dc0791],0x9c
  404072:	pop    edi
  404073:	mov    ecx,0x15bcb830
  404078:	pop    ecx
  404079:	popf   
  40407a:	add    cl,BYTE PTR [ecx+0x1c]
  40407d:	mov    esi,0x346903f8
  404082:	add    DWORD PTR [edx-0x4dd364e0],0x7b
  404089:	mov    ecx,0xb2154bd5
  40408e:	test   al,0xc
  404090:	xchg   BYTE PTR [edx+eax*1+0x29],cl
  404094:	pop    ebp
  404095:	into   
  404096:	cmp    al,0x91
  404098:	fisttp QWORD PTR [edx+0x46b9767f]
  40409e:	add    esp,DWORD PTR [ecx-0x9f056f1]
  4040a4:	add    DWORD PTR [edx],eax
  4040a6:	push   0x6640555f
  4040ab:	fdivr  DWORD PTR [edi+0x1eac4dad]
  4040b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040b2:	imul   edx,edi,0xd8a9abf5
  4040b8:	inc    esp
  4040b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ba:	iret   
  4040bb:	push   es
  4040bc:	cwde   
  4040bd:	pop    eax
  4040be:	jo     0x40407c
  4040c0:	xlat   BYTE PTR ds:[ebx]
  4040c1:	fs pop esp
  4040c3:	push   esi
  4040c4:	xor    eax,0x27e99e1a
  4040c9:	shl    DWORD PTR [edx+0x34],0x87
  4040cd:	sbb    ch,BYTE PTR ds:0x525023bb
  4040d3:	mov    ds:0xe31811b7,al
  4040d8:	mov    edx,0x1f5a3f75
  4040dd:	jno    0x404069
  4040df:	jnp    0x404077
  4040e1:	cmp    al,0x36
  4040e3:	xchg   BYTE PTR [esi],ch
  4040e5:	retf   0x9835
  4040e8:	push   esp
  4040e9:	leave  
  4040ea:	jg     0x404118
  4040ec:	jne    0x404130
  4040ee:	mov    ecx,DWORD PTR [ebp+0x4aa16970]
  4040f4:	mov    cl,cl
  4040f6:	sbb    esp,esi
  4040f8:	sub    al,0xae
  4040fa:	add    cl,ch
  4040fc:	mov    cl,0xc0
  4040fe:	jno    0x4040fa
  404100:	push   ds
  404101:	inc    edi
  404102:	pop    edi
  404103:	in     al,dx
  404104:	jne    0x40416a
  404106:	lods   eax,DWORD PTR ds:[esi]
  404107:	cmp    DWORD PTR [eax+eax*8],0x99dc739c
  40410e:	gs (bad) 
  404110:	dec    ebx
  404111:	xor    bl,ch
  404113:	xlat   BYTE PTR ds:[ebx]
  404114:	mov    esi,0xf196950e
  404119:	fwait
  40411a:	in     al,dx
  40411b:	jno    0x40412a
  40411d:	sbb    eax,0x3d32cb94
  404122:	popf   
  404123:	and    al,0x79
  404125:	leave  
  404126:	or     ah,bh
  404128:	mov    edi,0x296e8a7c
  40412d:	pop    ds
  40412e:	fs add al,0x2a
  404131:	addr16 mov esi,ebp
  404134:	dec    edx
  404135:	aas    
  404136:	or     dl,0x32
  404139:	add    ebp,edi
  40413b:	adc    cl,al
  40413d:	and    bh,0x45
  404140:	push   ecx
  404141:	aad    0x55
  404143:	je     0x404175
  404145:	push   ebx
  404146:	cmp    eax,0xfc2bd021
  40414b:	mov    esi,0x9f52544b
  404150:	jae    0x4041c4
  404152:	push   eax
  404153:	dec    eax
  404154:	and    dh,ch
  404156:	push   edi
  404157:	push   ds
  404158:	je     0x4040df
  40415a:	enter  0xc6b5,0x3b
  40415e:	popa   
  40415f:	cmp    DWORD PTR [ebp+0x36],0xfffffff0
  404163:	sbb    eax,0xcf38f2aa
  404168:	daa    
  404169:	jno    0x404140
  40416b:	add    al,0xf5
  40416d:	fidiv  DWORD PTR [esi+edx*1+0xc11bfdf]
  404174:	add    BYTE PTR [eax-0x1e0a036c],0xc9
  40417b:	call   0xabe339af
  404180:	das    
  404181:	pop    edx
  404182:	into   
  404183:	xor    al,0x10
  404185:	jne    0x404169
  404187:	jecxz  0x404123
  404189:	mov    bh,0x9
  40418b:	pop    ds
  40418c:	lods   eax,DWORD PTR ds:[esi]
  40418d:	inc    esp
  40418e:	sbb    BYTE PTR [eax+eax*8+0x6d],dh
  404192:	mov    eax,ds:0x693d6be5
  404197:	dec    esp
  404198:	sub    BYTE PTR [ecx-0x33],al
  40419b:	mov    ecx,0xc0679b1
  4041a0:	ret    
  4041a1:	out    0x60,eax
  4041a3:	outs   dx,BYTE PTR ds:[esi]
  4041a4:	repz or bl,BYTE PTR [ebx-0x7d1162b5]
  4041ab:	stos   BYTE PTR es:[edi],al
  4041ac:	push   ebp
  4041ad:	(bad)  
  4041ae:	sub    BYTE PTR [edi+0x1b],al
  4041b1:	or     BYTE PTR [esi-0x21d23f33],al
  4041b7:	gs pop esp
  4041b9:	das    
  4041ba:	inc    ebp
  4041bb:	xchg   ebp,eax
  4041bc:	push   es
  4041bd:	ret    0xe241
  4041c0:	or     BYTE PTR [ebx],bh
  4041c2:	push   eax
  4041c3:	ja     0x40416f
  4041c5:	xor    al,0x38
  4041c7:	xor    BYTE PTR [edi],bh
  4041c9:	dec    esp
  4041ca:	fwait
  4041cb:	mov    edx,0xd1130b82
  4041d0:	inc    edx
  4041d1:	imul   ebx,DWORD PTR [esp+edx*4],0x29
  4041d5:	mov    ah,0x92
  4041d7:	es icebp 
  4041d9:	fimul  DWORD PTR [edx]
  4041db:	mov    WORD PTR [ebp+0x64],ds
  4041de:	dec    eax
  4041df:	and    DWORD PTR [eax+0x0],esp
  4041e2:	frstor [edx+ebx*4]
  4041e5:	dec    eax
  4041e6:	inc    esi
  4041e7:	test   BYTE PTR [ecx],dh
  4041e9:	push   ebp
  4041ea:	test   eax,0x10f1230b
  4041ef:	or     esp,0xffffffc1
  4041f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f3:	cmc    
  4041f4:	push   ebp
  4041f5:	in     al,dx
  4041f6:	loopne 0x4041d3
  4041f8:	push   ebp
  4041f9:	rol    BYTE PTR [esi+0x4c230b59],0x73
  404200:	jge    0x404183
  404202:	retf   0xd1ba
  404205:	mov    ds:0x349a58e6,eax
  40420a:	mov    DWORD PTR [ebx-0x25],ecx
  40420d:	sub    BYTE PTR [edi-0x48],ch
  404210:	jns    0x40428a
  404212:	jp     0x404259
  404214:	or     bh,dh
  404216:	(bad)  
  404217:	std    
  404218:	mov    bh,0x3
  40421a:	jl     0x4041ce
  40421c:	jae    0x40422d
  40421e:	or     dh,BYTE PTR [edi+eiz*2]
  404221:	mov    ah,0x48
  404223:	repz mov dh,0xae
  404226:	mov    ds:0x117c73fa,eax
  40422b:	xchg   ecx,eax
  40422c:	lods   eax,DWORD PTR ds:[esi]
  40422d:	push   ecx
  40422e:	and    DWORD PTR [ebx-0x402582fd],ebx
  404234:	(bad)  
  404236:	pop    es
  404237:	sbb    ah,0x80
  40423a:	xor    BYTE PTR [esi],dh
  40423c:	xlat   BYTE PTR ds:[ebx]
  40423d:	jg     0x404231
  40423f:	xor    ebp,DWORD PTR [ebp+0x52df6d5e]
  404245:	fisttp WORD PTR [ebx-0x7e360ca3]
  40424b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40424c:	inc    ecx
  40424d:	stos   DWORD PTR es:[edi],eax
  40424e:	cmp    BYTE PTR [ecx+0x3b],0x6b
  404252:	push   es
  404253:	xchg   ebx,eax
  404254:	lahf   
  404255:	clc    
  404256:	xchg   ecx,eax
  404257:	or     al,dl
  404259:	xor    ebp,ecx
  40425b:	pusha  
  40425c:	or     DWORD PTR [ebx+0x4e962130],ebp
  404262:	xchg   ebx,eax
  404263:	rcl    BYTE PTR [edi+0x24e42c4f],cl
  404269:	push   es
  40426a:	push   0xe0724fad
  40426f:	dec    BYTE PTR [edi]
  404271:	dec    ebp
  404272:	sbb    al,0x21
  404274:	xchg   DWORD PTR [ebx+0x3f],esi
  404277:	adc    DWORD PTR [eax],eax
  404279:	mov    al,0x8a
  40427b:	push   esi
  40427c:	xchg   esp,ebp
  40427e:	adc    eax,ebp
  404280:	jmp    0x565759d6
  404285:	cld    
  404286:	call   esi
  404288:	inc    edi
  404289:	mov    al,0x54
  40428b:	push   0x27
  40428d:	in     eax,0x7d
  40428f:	lea    ebp,[eax-0x675d1a8a]
  404295:	stc    
  404296:	arpl   WORD PTR [ecx],bp
  404298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404299:	shl    DWORD PTR [esi],cl
  40429b:	pop    esi
  40429c:	retf   0x4085
  40429f:	xchg   edi,eax
  4042a0:	aam    0x15
  4042a2:	loop   0x40431b
  4042a4:	mov    ds:0x2a0a3bab,eax
  4042a9:	ficomp DWORD PTR [edx+0x10]
  4042ac:	jecxz  0x40428f
  4042ae:	outs   dx,BYTE PTR ds:[esi]
  4042af:	xor    eax,0x255aaa1b
  4042b4:	or     bl,dl
  4042b6:	mov    esp,0x669dff7a
  4042bb:	ret    
  4042bc:	(bad)  
  4042bd:	mov    esi,0xdd55e26c
  4042c2:	or     al,0xe0
  4042c4:	mov    ds:0x1591cc08,al
  4042c9:	push   edi
  4042ca:	adc    DWORD PTR [esi-0x3a8a7d73],0xa
  4042d1:	mov    esi,0xdf84ebe5
  4042d6:	les    ecx,FWORD PTR [ecx+edx*2-0x4b3906f0]
  4042dd:	jp     0x40432a
  4042df:	gs in  al,0xc2
  4042e2:	mov    bl,dh
  4042e4:	jecxz  0x404306
  4042e6:	xlat   BYTE PTR ds:[ebx]
  4042e7:	arpl   WORD PTR [edx+0x0],ax
  4042ea:	test   BYTE PTR [esi+0x40f736c3],dl
  4042f0:	stos   DWORD PTR es:[edi],eax
  4042f1:	sbb    al,0x94
  4042f3:	enter  0x81e5,0xd0
  4042f7:	cmp    al,0xd9
  4042f9:	xchg   esi,ebp
  4042fb:	jno    0x404345
  4042fd:	aas    
  4042fe:	or     al,0xb4
  404300:	std    
  404301:	lea    ecx,[ebx+edx*4-0x67]
  404305:	arpl   WORD PTR [ebp-0x61],cx
  404308:	jp     0x4042a4
  40430a:	sahf   
  40430b:	mov    al,0x9e
  40430d:	mov    esp,0x898ff9e4
  404312:	pop    edi
  404313:	call   DWORD PTR [esi]
  404315:	outs   dx,BYTE PTR ds:[esi]
  404316:	inc    ebp
  404317:	push   0xffffffcd
  404319:	dec    BYTE PTR [esi+0x74]
  40431c:	xor    ch,ch
  40431e:	pop    ebp
  40431f:	xor    DWORD PTR [ebx+0xb],ecx
  404322:	xchg   edx,eax
  404323:	iret   
  404324:	cdq    
  404325:	pmullw mm4,QWORD PTR [ebx+0x45]
  404329:	dec    eax
  40432a:	pop    si
  40432c:	shl    DWORD PTR [ebp-0x2db05d28],cl
  404332:	cmp    eax,0x7c2fba98
  404337:	adc    BYTE PTR [edi+0x24],cl
  40433a:	(bad)  
  40433b:	sbb    BYTE PTR cs:[ecx+ebx*8+0x585390b9],ch
  404343:	sbb    dl,BYTE PTR [esi+0x4efbae40]
  404349:	mov    ds,WORD PTR [esi+ecx*4]
  40434c:	jle    0x4042f5
  40434e:	jmp    0x2da:0x4512e873
  404355:	ret    
  404356:	test   BYTE PTR [edi],al
  404358:	mov    eax,ds:0xc7f0b119
  40435d:	xchg   esp,eax
  40435e:	cwde   
  40435f:	std    
  404360:	sub    DWORD PTR ds:0x17f683e9,ecx
  404366:	in     eax,dx
  404367:	pop    ebx
  404368:	out    0x68,eax
  40436a:	xor    BYTE PTR [edi+0xae08e7d],ch
  404370:	aam    0x94
  404372:	fwait
  404373:	cmp    eax,0xc99e55ca
  404378:	fwait
  404379:	jl     0x4043a6
  40437b:	pushf  
  40437c:	mov    ch,BYTE PTR [edi-0x6f]
  40437f:	imul   eax,DWORD PTR [edx-0x16e804b3],0xffffffd8
  404386:	nop
  404387:	sbb    al,0xd1
  404389:	dec    ecx
  40438a:	aas    
  40438b:	or     DWORD PTR ds:0x2ff6a3b2,ebx
  404391:	jp     0x4043a1
  404393:	inc    BYTE PTR [ebp+0x7a]
  404396:	cmc    
  404397:	iret   
  404398:	jp     0x4043fc
  40439a:	push   ebp
  40439b:	outs   dx,BYTE PTR ds:[esi]
  40439c:	dec    ebp
  40439d:	test   BYTE PTR [ebp+0x4c],dl
  4043a0:	or     BYTE PTR [edi-0x187fa7a7],al
  4043a6:	sub    eax,0x4ce0f05
  4043ab:	arpl   WORD PTR [esp+eiz*2+0x4],ax
  4043af:	(bad)  
  4043b0:	pop    eax
  4043b1:	cmp    DWORD PTR [edi],esi
  4043b3:	(bad)  
  4043b4:	fdiv   QWORD PTR [eax-0x38]
  4043b7:	bound  ecx,QWORD PTR [ecx+0x4f41b168]
  4043bd:	stos   DWORD PTR es:[edi],eax
  4043be:	dec    ebp
  4043bf:	mov    esi,DWORD PTR [edi-0x46]
  4043c2:	scas   eax,DWORD PTR es:[edi]
  4043c3:	mov    esp,0xdd9370dc
  4043c8:	inc    ecx
  4043c9:	out    0x91,al
  4043cb:	push   ds
  4043cc:	scas   eax,DWORD PTR es:[edi]
  4043cd:	(bad)  
  4043ce:	icebp  
  4043cf:	inc    edx
  4043d0:	cmp    al,0x41
  4043d2:	je     0x404361
  4043d4:	jl     0x4043a9
  4043d6:	pop    eax
  4043d7:	adc    BYTE PTR [edi],bl
  4043d9:	add    eax,0x6da05825
  4043de:	pusha  
  4043df:	jp     0x4043c6
  4043e1:	mov    ebx,0xb10f1462
  4043e6:	adc    eax,0x924056f9
  4043eb:	outs   dx,BYTE PTR ds:[esi]
  4043ec:	add    esp,DWORD PTR [ebx-0x4d]
  4043ef:	sar    DWORD PTR [edi+0x4086de36],0x43
  4043f6:	inc    ecx
  4043f7:	(bad)  
  4043f8:	sbb    bh,al
  4043fa:	fiadd  DWORD PTR [ebx]
  4043fc:	fwait
  4043fd:	pop    esi
  4043fe:	push   ss
  4043ff:	ror    DWORD PTR [eax-0x5dd682f2],0x97
  404406:	add    al,0x4b
  404408:	jns    0x404436
  40440a:	pop    ds
  40440b:	jbe    0x4043f3
  40440d:	jg     0x404428
  40440f:	inc    esp
  404410:	mov    ebp,DWORD PTR [ebx+0x34e041d0]
  404416:	mov    esi,0xa4313155
  40441b:	shl    DWORD PTR [edi+0x4b],cl
  40441e:	bound  esi,QWORD PTR [edi+0x58c8d64b]
  404424:	jne    0x4043f5
  404426:	sar    DWORD PTR [ecx-0x292afee1],cl
  40442c:	aas    
  40442d:	ja     0x40443b
  40442f:	dec    eax
  404430:	lods   eax,DWORD PTR ds:[esi]
  404431:	mov    cl,0xf6
  404433:	push   edi
  404434:	xchg   ecx,eax
  404435:	push   ss
  404436:	mov    ebx,0xce37a242
  40443b:	(bad)  
  40443c:	aad    0x6a
  40443e:	(bad)  
  40443f:	xchg   edx,eax
  404440:	fdiv   DWORD PTR [esi+0x46ddf676]
  404446:	add    edx,DWORD PTR [ebx-0x1]
  404449:	cmp    al,0xe8
  40444b:	les    ebx,FWORD PTR [ebx+0x7ea81928]
  404451:	push   esp
  404452:	jbe    0x404402
  404454:	mov    dl,0xd9
  404456:	jae    0x404476
  404458:	and    BYTE PTR [ebx+0x3],bh
  40445b:	xor    DWORD PTR [esi],0xffffffbe
  40445e:	dec    esp
  40445f:	cld    
  404460:	xchg   edi,eax
  404461:	repz pop esi
  404463:	ins    DWORD PTR es:[edi],dx
  404464:	test   al,dh
  404466:	enter  0xa04e,0x6f
  40446a:	cwde   
  40446b:	cmovbe eax,DWORD PTR [eax]
  40446e:	stos   BYTE PTR es:[edi],al
  40446f:	jp     0x404401
  404471:	push   ebp
  404472:	je     0x4044b4
  404474:	dec    eax
  404476:	jae    0x4044db
  404478:	mov    dh,0x10
  40447a:	bound  edx,QWORD PTR [ebx]
  40447c:	push   esp
  40447d:	pusha  
  40447e:	jne    0x404424
  404480:	push   ecx
  404481:	adc    DWORD PTR [ebp-0x1e],0xffffffcb
  404485:	sahf   
  404486:	aam    0x5f
  404488:	pop    edi
  404489:	cmp    al,0x7d
  40448b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40448c:	jo     0x40449c
  40448e:	add    bl,ch
  404490:	push   edx
  404491:	and    eax,0xe24240cf
  404496:	pop    esi
  404497:	jmp    0x404486
  404499:	mov    bl,0x6b
  40449b:	call   0xef7e4e6a
  4044a0:	add    ah,ch
  4044a2:	ins    DWORD PTR es:[edi],dx
  4044a3:	je     0x4044b1
  4044a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044a6:	out    0x68,eax
  4044a8:	dec    edx
  4044a9:	cmp    cl,BYTE PTR ds:0x3c22132a
  4044af:	xchg   edx,eax
  4044b0:	stos   DWORD PTR es:[edi],eax
  4044b1:	rcl    BYTE PTR [ebx-0x42],1
  4044b4:	push   ds
  4044b5:	enter  0x9eb3,0xf4
  4044b9:	outs   dx,DWORD PTR ds:[esi]
  4044ba:	jo     0x4044ae
  4044bc:	mov    ah,BYTE PTR [edx-0x24]
  4044bf:	dec    eax
  4044c0:	add    BYTE PTR ds:0xc5ad06bf,0xec
  4044c7:	adc    dh,BYTE PTR [esi]
  4044c9:	in     eax,dx
  4044ca:	aam    0x64
  4044cc:	imul   edi,DWORD PTR [ecx+0x246aaeb7],0x8899d63b
  4044d6:	mov    ebp,0xa474fcd7
  4044db:	scas   al,BYTE PTR es:[edi]
  4044dc:	loop   0x4044dc
  4044de:	xor    ah,dl
  4044e0:	add    BYTE PTR [edx],0x46
  4044e3:	xor    al,BYTE PTR [edx+0x36]
  4044e6:	lods   al,BYTE PTR ds:[esi]
  4044e7:	inc    ebx
  4044e8:	mov    ah,0x8b
  4044ea:	mov    edx,0xce0ab943
  4044ef:	lods   eax,DWORD PTR ds:[esi]
  4044f0:	fdiv   DWORD PTR [edx+0x11]
  4044f3:	sar    DWORD PTR [eax-0x4b],1
  4044f6:	mov    bh,bh
  4044f8:	test   al,0xa0
  4044fa:	sbb    edi,esp
  4044fc:	cmc    
  4044fd:	or     al,0x5b
  4044ff:	mov    dh,0x1c
  404501:	or     eax,0x22a361fa
  404506:	stos   BYTE PTR es:[edi],al
  404507:	and    al,0x6
  404509:	mov    ds:0x6e512c06,eax
  40450e:	mov    al,ds:0x2946356
  404513:	shl    BYTE PTR [edi],cl
  404515:	aad    0x82
  404517:	outs   dx,BYTE PTR ds:[esi]
  404518:	mov    eax,0x2260521
  40451d:	dec    ecx
  40451e:	out    0x7f,al
  404520:	push   ebx
  404521:	add    edx,edi
  404523:	ins    DWORD PTR es:[edi],dx
  404524:	and    ah,0x4a
  404527:	jp     0x404513
  404529:	(bad)  [edx]
  40452b:	pop    eax
  40452c:	ja     0x4044f9
  40452e:	not    bl
  404530:	sbb    BYTE PTR [ebx+ebp*8+0x615ebdf0],al
  404537:	inc    edx
  404538:	pop    ss
  404539:	push   esi
  40453a:	test   DWORD PTR [edx+edi*8-0x52050e83],esi
  404541:	dec    esi
  404542:	mov    ebx,0x561b58cf
  404547:	jb     0x404556
  404549:	mov    edx,0x1b042eb2
  40454e:	pop    ecx
  40454f:	jmp    DWORD PTR [ebx-0x562476d]
  404555:	sub    eax,0x8695df62
  40455a:	scas   eax,DWORD PTR es:[edi]
  40455b:	in     eax,0xde
  40455d:	mov    edi,0x9edb3ee
  404562:	cmp    ecx,eax
  404564:	inc    esi
  404565:	sub    al,0x51
  404567:	mov    esp,ebp
  404569:	les    esp,FWORD PTR [edx+eiz*1-0x20]
  40456d:	or     bh,al
  40456f:	and    al,0x36
  404571:	retf   0x5950
  404574:	inc    esi
  404575:	fsub   QWORD PTR [ecx-0x75]
  404578:	pop    ebx
  404579:	jb     0x404534
  40457b:	sbb    dh,dh
  40457d:	ret    0x4a89
  404580:	fldcw  WORD PTR [esi+ebp*4+0x114fbf93]
  404587:	in     al,0x3e
  404589:	ds jo  0x404557
  40458c:	push   0xfffffff8
  40458e:	pop    esp
  40458f:	fs ss push esi
  404592:	and    BYTE PTR [edx-0x77],ah
  404595:	inc    edi
  404596:	(bad)  
  404597:	mov    edx,0x2e403d7b
  40459c:	sahf   
  40459d:	push   esi
  40459e:	ret    
  40459f:	(bad)  
  4045a0:	mov    gs,WORD PTR [edx+0x3a476328]
  4045a6:	mov    ecx,0x6c0e79f5
  4045ab:	inc    ebp
  4045ac:	outs   dx,DWORD PTR ds:[esi]
  4045ad:	pushf  
  4045ae:	and    edi,DWORD PTR [ebx+0x47]
  4045b1:	ret    0x14be
  4045b4:	mov    ds:0x83864018,al
  4045b9:	xchg   DWORD PTR [edi+esi*8-0x11],esi
  4045bd:	mov    ch,0x8b
  4045bf:	imul   edx,DWORD PTR [ecx-0x14cae608],0xffffffe4
  4045c6:	dec    esi
  4045c7:	mov    ebx,es
  4045c9:	sub    DWORD PTR [edi],ebp
  4045cb:	xor    DWORD PTR [edi],edi
  4045cd:	xchg   BYTE PTR [ebx+0x594654d7],al
  4045d3:	adc    dl,ch
  4045d5:	dec    eax
  4045d6:	cmp    DWORD PTR [eax+0x6c4a5db2],0x56
  4045dd:	jb     0x40456c
  4045df:	jg     0x40464c
  4045e1:	pop    eax
  4045e2:	pop    edi
  4045e3:	or     ah,dh
  4045e5:	mov    DWORD PTR [eax],ebx
  4045e7:	icebp  
  4045e8:	mov    dl,0xae
  4045ea:	out    dx,eax
  4045eb:	pop    eax
  4045ec:	or     eax,0xb26cc341
  4045f1:	fcmovne st,st(5)
  4045f3:	mov    ah,0x2
  4045f5:	mov    edi,0x2ea47717
  4045fa:	rcl    BYTE PTR [eax],cl
  4045fc:	stos   DWORD PTR es:[edi],eax
  4045fd:	(bad)  
  4045fe:	push   edi
  4045ff:	mov    bl,0x7c
  404601:	popa   
  404602:	leave  
  404603:	add    eax,0x15b80717
  404608:	cli    
  404609:	and    al,0xde
  40460b:	sbb    al,0xee
  40460d:	test   BYTE PTR [edi],0x33
  404610:	data16 fcmovne st,st(4)
  404613:	ja     0x404674
  404615:	aad    0xff
  404617:	push   es
  404618:	stc    
  404619:	sub    DWORD PTR [edi],0xe5c58eb4
  40461f:	xchg   ebx,eax
  404620:	cmp    al,0xd4
  404622:	dec    edx
  404623:	iret   
  404624:	and    cl,bl
  404626:	sub    DWORD PTR [esi-0x3cd13cf2],edx
  40462c:	sbb    DWORD PTR [ecx],esi
  40462e:	xchg   esp,eax
  40462f:	rcl    ch,0x18
  404632:	nop    DWORD PTR [esi]
  404635:	jle    0x4045f2
  404637:	ficom  DWORD PTR [ecx-0x4525e3b]
  40463d:	cmp    al,0xcd
  40463f:	iret   
  404640:	push   edi
  404641:	imul   edi,DWORD PTR ds:0x8b81c9eb,0x5a
  404648:	pop    edi
  404649:	shl    DWORD PTR [edi-0x163d3be4],0xd3
  404650:	mov    ebp,0xad5edd2b
  404655:	jb     0x4046d1
  404657:	(bad)  
  404658:	push   eax
  404659:	adc    DWORD PTR [edi+0x2d],edx
  40465c:	xor    ecx,0xf03e6272
  404662:	outs   dx,DWORD PTR ds:[esi]
  404663:	push   edi
  404664:	stos   BYTE PTR es:[edi],al
  404665:	add    eax,0x1e1db828
  40466a:	retf   0x4872
  40466d:	test   BYTE PTR [ebx],dh
  40466f:	(bad)  
  404670:	inc    DWORD PTR [ebp+0x401e8ed1]
  404676:	cmp    dh,bl
  404678:	imul   dl
  40467a:	mov    edi,0x6806356a
  40467f:	(bad)  
  404680:	retf   
  404681:	add    dh,BYTE PTR [ecx+0x3a]
  404684:	out    0x3,al
  404686:	or     BYTE PTR [ebp+0x47564c86],dh
  40468c:	jmp    0x40469b
  40468e:	mov    di,0xdc8
  404692:	mov    ebx,0x227c04f3
  404697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404698:	xchg   esi,eax
  404699:	aam    0x1f
  40469b:	jp     0x404709
  40469d:	scas   eax,DWORD PTR es:[edi]
  40469e:	(bad)  
  40469f:	in     al,0x1c
  4046a1:	inc    edi
  4046a2:	jns    0x4046c8
  4046a4:	pop    es
  4046a5:	(bad)  
  4046a6:	cmp    al,cl
  4046a8:	add    ecx,0xf3d7d800
  4046ae:	sub    dl,BYTE PTR [si-0x5b3b]
  4046b3:	(bad)  
  4046b4:	out    dx,al
  4046b5:	nop
  4046b6:	cli    
  4046b7:	in     eax,0x4f
  4046b9:	gs xor eax,0x7772949
  4046bf:	ja     0x4046e3
  4046c1:	sbb    dl,BYTE PTR [esi]
  4046c3:	jmp    DWORD PTR [eax]
  4046c5:	pushf  
  4046c6:	outs   dx,BYTE PTR ds:[esi]
  4046c7:	mov    cs,WORD PTR [eax+0x42e81978]
  4046cd:	clc    
  4046ce:	sar    edx,1
  4046d0:	jne    0x4046ef
  4046d2:	stos   DWORD PTR es:[edi],eax
  4046d3:	xor    al,0x6c
  4046d5:	icebp  
  4046d6:	fld    DWORD PTR [esi+eiz*2]
  4046d9:	out    0xb0,eax
  4046db:	sti    
  4046dc:	pop    edx
  4046dd:	enter  0xf750,0xce
  4046e1:	xor    BYTE PTR [eax-0x53],dh
  4046e4:	cdq    
  4046e5:	pusha  
  4046e6:	inc    edx
  4046e7:	inc    eax
  4046e8:	ss (bad) 
  4046ea:	adc    bl,ah
  4046ec:	adc    DWORD PTR [eax+0x36],esi
  4046ef:	sbb    dl,cl
  4046f1:	adc    edx,esp
  4046f3:	sub    DWORD PTR [esi+0x3c],ebp
  4046f6:	sub    al,0x7b
  4046f8:	xchg   BYTE PTR [eax+0x91b0618],bl
  4046fe:	adc    DWORD PTR [ebx+0x334cbb61],eax
  404704:	jl     0x4046f4
  404706:	push   0x15
  404708:	jle    0x404783
  40470a:	xor    dh,BYTE PTR [ebp+0x35]
  40470d:	outs   dx,DWORD PTR ds:[esi]
  40470e:	test   DWORD PTR ds:0xc4277635,esp
  404714:	pop    ecx
  404715:	sub    al,0x6a
  404717:	pop    edx
  404718:	dec    eax
  404719:	xchg   DWORD PTR [esi-0x74113f07],ebx
  40471f:	aam    0x94
  404721:	lahf   
  404722:	jae    0x404733
  404724:	sti    
  404725:	pop    edx
  404726:	add    DWORD PTR [ebp-0x144a40dd],edi
  40472c:	dec    BYTE PTR [esi]
  40472e:	lahf   
  40472f:	(bad)  
  404730:	fcom   DWORD PTR [edx-0x4c]
  404733:	mov    WORD PTR [eiz*2-0x5f3845d8],ds
  40473a:	or     al,0xc8
  40473c:	sub    ebp,edi
  40473e:	cld    
  40473f:	cmp    eax,0xcd15143d
  404744:	cmp    al,0x5c
  404746:	popa   
  404747:	dec    edx
  404748:	inc    edi
  404749:	test   BYTE PTR [esp+ebp*1+0x3a599278],al
  404750:	(bad)  
  404751:	sahf   
  404752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404753:	and    ah,BYTE PTR [edi-0x3c]
  404756:	loope  0x40472a
  404758:	inc    esp
  404759:	mov    esp,0x92fe65d4
  40475e:	je     0x4047cd
  404760:	les    esp,FWORD PTR [ecx+0x9]
  404763:	cwde   
  404764:	popf   
  404765:	xchg   esp,eax
  404766:	mov    bh,0xbd
  404768:	xor    al,0x1c
  40476a:	jmp    0xcf2810c9
  40476f:	test   eax,0x86c0331c
  404774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404775:	push   cs
  404776:	rcl    DWORD PTR [edi+edi*1],0x58
  40477a:	jp     0x404712
  40477c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40477d:	fs hlt 
  40477f:	mov    esp,0xc3e62497
  404784:	pop    edx
  404785:	sti    
  404786:	mov    BYTE PTR [ecx+0xa],cl
  404789:	sbb    eax,DWORD PTR [edi-0x713800a2]
  40478f:	fwait
  404790:	fwait
  404791:	jecxz  0x4047af
  404793:	cmp    al,0xb0
  404795:	jmp    0x40477c
  404797:	jg     0x40474e
  404799:	pop    esp
  40479a:	sar    DWORD PTR [eax+0xa5b7899],1
  4047a0:	mov    al,0x9b
  4047a2:	xchg   edi,eax
  4047a3:	seto   BYTE PTR [ebx-0x544261d0]
  4047aa:	repz push esp
  4047ac:	jno    0x4047ec
  4047ae:	inc    esp
  4047af:	push   edi
  4047b0:	inc    ebp
  4047b1:	cwde   
  4047b2:	dec    esi
  4047b3:	push   ebx
  4047b4:	dec    ecx
  4047b5:	in     eax,0x4e
  4047b7:	scas   eax,DWORD PTR es:[edi]
  4047b8:	sbb    esi,esp
  4047ba:	xor    ch,BYTE PTR [ebp+ebx*4-0x5f0e4d9e]
  4047c1:	mov    ss,ebx
  4047c3:	shl    BYTE PTR [edx-0x9],cl
  4047c6:	out    dx,al
  4047c7:	jnp    0x4047f2
  4047c9:	mov    ecx,0x1a4699bb
  4047ce:	std    
  4047cf:	call   0xafb5:0x8d4356c7
  4047d6:	inc    edi
  4047d7:	das    
  4047d8:	(bad)  
  4047d9:	cld    
  4047da:	mov    BYTE PTR [ecx-0xd],al
  4047dd:	cld    
  4047de:	push   eax
  4047df:	test   DWORD PTR [edi+0x3c],esp
  4047e2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047e4:	xchg   ecx,eax
  4047e5:	push   esi
  4047e6:	das    
  4047e7:	into   
  4047e8:	mov    esp,0x661918a0
  4047ed:	xchg   esi,eax
  4047ee:	adc    esi,edi
  4047f0:	sub    DWORD PTR [esi+eiz*2+0x6d94176e],esp
  4047f7:	popa   
  4047f8:	xor    dl,BYTE PTR [ecx+0x30]
  4047fb:	mov    dh,0x28
  4047fd:	xchg   ebx,eax
  4047fe:	out    0x21,al
  404800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404801:	push   eax
  404802:	rcr    esi,cl
  404804:	daa    
  404805:	push   esp
  404806:	mov    edi,DWORD PTR [ebx-0x70]
  404809:	mov    cl,0x17
  40480b:	fucomi st,st(7)
  40480d:	mov    ah,0x1e
  40480f:	cmp    si,ax
  404812:	add    DWORD PTR [eax+0x138eb932],ebp
  404818:	push   0x41
  40481a:	imul   edi,DWORD PTR [esi],0x2253944a
  404820:	push   ds
  404821:	test   al,0xeb
  404823:	add    DWORD PTR [ebx+0x21],esi
  404826:	push   ecx
  404827:	adc    BYTE PTR [eax],ch
  404829:	sbb    DWORD PTR [esi+0x5d],edi
  40482c:	cmc    
  40482d:	add    ch,cl
  40482f:	pmuludq mm6,QWORD PTR [ebp-0x2691cbf4]
  404836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404837:	lock mov al,0xd1
  40483a:	and    al,0x8a
  40483c:	std    
  40483d:	jmp    0x40486f
  40483f:	nop
  404840:	mov    ebx,0x159c1c7a
  404845:	pop    esp
  404846:	pop    ss
  404847:	add    ebx,esp
  404849:	stos   DWORD PTR es:[edi],eax
  40484a:	sub    esp,ebp
  40484c:	mov    ebx,0xcd6c2ea8
  404851:	pslld  mm6,QWORD PTR [esi+ecx*2-0x36aee75d]
  404859:	leave  
  40485a:	add    dh,BYTE PTR [esi+0x1bcee18b]
  404860:	(bad)  
  404861:	jecxz  0x40483d
  404863:	add    ebx,DWORD PTR [edx-0x6fd1424b]
  404869:	cs loopne 0x4048b1
  40486c:	mov    al,ds:0xfe814131
  404871:	loop   0x404866
  404873:	xchg   edx,eax
  404874:	icebp  
  404875:	dec    esp
  404876:	mov    eax,ds:0xb416f735
  40487b:	ds pusha 
  40487d:	inc    esi
  40487e:	gs nop
  404880:	fiadd  WORD PTR [esi]
  404882:	pop    esi
  404883:	xor    BYTE PTR ds:0x91f8d648,bl
  404889:	or     cl,BYTE PTR [ecx+edx*2]
  40488c:	mov    ecx,0x3d7c6d6b
  404891:	js     0x4048bf
  404893:	loope  0x4048a9
  404895:	aad    0x4f
  404897:	jle    0x4048ba
  404899:	imul   edx,DWORD PTR [ebp-0x1b],0xffffff94
  40489d:	in     eax,0x64
  40489f:	inc    ebp
  4048a0:	fbld   TBYTE PTR [edi]
  4048a2:	test   al,0x3d
  4048a4:	sbb    al,0xbe
  4048a6:	sti    
  4048a7:	gs in  eax,dx
  4048a9:	cmp    cl,bl
  4048ab:	jg     0x4048f1
  4048ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ae:	fwait
  4048af:	repnz aad 0x54
  4048b2:	mov    eax,0x27282ac8
  4048b7:	and    dh,dh
  4048b9:	cdq    
  4048ba:	fs cwde 
  4048bc:	(bad)
  4048c0:	dec    ebx
  4048c1:	adc    al,0x43
  4048c3:	test   al,0x0
  4048c5:	bound  esp,QWORD PTR [esi]
  4048c7:	xor    BYTE PTR [esi],ah
  4048c9:	out    dx,eax
  4048ca:	mov    ecx,0x7c90c738
  4048cf:	mov    eax,ds:0x8dafe9a0
  4048d4:	sbb    al,BYTE PTR [eax+0x7d]
  4048d7:	pop    ebp
  4048d8:	mov    dl,0xa7
  4048da:	out    dx,eax
  4048db:	mov    esi,0x5b1ebafb
  4048e0:	jmp    0x3f66:0xd130c073
  4048e7:	add    eax,0x27783f0f
  4048ec:	push   es
  4048ed:	enter  0x2ce5,0x67
  4048f1:	lods   eax,DWORD PTR ds:[esi]
  4048f2:	sbb    BYTE PTR [ebx+ebx*2+0x60],ch
  4048f6:	cdq    
  4048f7:	aam    0xb4
  4048f9:	xchg   ebp,eax
  4048fa:	gs scas al,BYTE PTR es:[edi]
  4048fc:	ss cli 
  4048fe:	pop    edi
  404900:	cdq    
  404901:	dec    esp
  404902:	or     eax,0x1311d7de
  404907:	pusha  
  404908:	pop    ecx
  404909:	cli    
  40490a:	ds gs jne 0x404964
  40490e:	fwait
  40490f:	sub    eax,0xc6a23edd
  404914:	leave  
  404915:	xchg   ebx,eax
  404916:	fisttp WORD PTR [esi+0x57]
  404919:	inc    ebp
  40491a:	pushf  
  40491b:	xor    DWORD PTR [eax],esp
  40491d:	imul   esi,DWORD PTR [ebx],0xfad2edfa
  404923:	cs mov ecx,0xdf91dc1e
  404929:	lods   al,BYTE PTR ds:[esi]
  40492a:	mov    ecx,0xcd7beefe
  40492f:	xor    DWORD PTR [ebx],eax
  404931:	adc    edx,DWORD PTR [edi+0x39ee3914]
  404937:	or     DWORD PTR [eax+0x63c74f17],edi
  40493d:	in     al,0xa9
  40493f:	cmp    al,0x99
  404941:	loope  0x404911
  404943:	call   0xcd36:0x3005b001
  40494a:	cwde   
  40494b:	fisubr WORD PTR [esi]
  40494d:	jmp    0xd475e4a7
  404952:	jne    0x40494e
  404954:	addr16 test al,0x28
  404957:	push   cs
  404958:	cmp    bl,BYTE PTR [ecx-0x522d8368]
  40495e:	ja     0x404915
  404960:	mov    cs,WORD PTR [esi+0x2db4ebf0]
  404966:	loope  0x4049c1
  404968:	pop    esi
  404969:	mov    dl,0xdc
  40496b:	adc    eax,0x444147b3
  404970:	or     edi,DWORD PTR [ebp-0x4e1c5746]
  404976:	retf   
  404977:	push   esp
  404978:	mov    edi,0x14f06c43
  40497d:	jb     0x404924
  40497f:	mov    ebp,0x471d4462
  404984:	add    al,0x88
  404986:	clc    
  404987:	sahf   
  404988:	adc    bh,dh
  40498a:	push   edi
  40498b:	sbb    al,0xcb
  40498d:	ret    
  40498e:	push   edi
  40498f:	mov    ds:0x92184a95,eax
  404994:	out    0x1a,al
  404996:	mov    ch,BYTE PTR [ecx-0x4f8735f4]
  40499c:	push   es
  40499d:	jo     0x4049ac
  40499f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049a1:	or     edi,DWORD PTR [ebp+0x78558495]
  4049a7:	xchg   edi,eax
  4049a8:	push   ebx
  4049a9:	shl    DWORD PTR [ebp+0x9],1
  4049ac:	ds sub eax,0x6b22c0c3
  4049b2:	sti    
  4049b3:	and    bl,BYTE PTR [esi+eiz*8]
  4049b6:	dec    ebp
  4049b7:	rol    DWORD PTR [eax+eax*4+0x77],1
  4049bb:	xchg   esi,eax
  4049bc:	fwait
  4049bd:	cli    
  4049be:	mov    bl,0xa7
  4049c0:	je     0x4049c2
  4049c2:	out    0xc9,eax
  4049c4:	(bad)  
  4049c5:	outs   dx,BYTE PTR ds:[esi]
  4049c6:	lea    ebp,[ecx+0x5ea7ac7]
  4049cc:	ficom  DWORD PTR [ebx+0x7639447f]
  4049d2:	pushf  
  4049d3:	aas    
  4049d4:	mov    ecx,0xeee896c8
  4049d9:	mov    ch,0x8f
  4049db:	and    BYTE PTR [eax+eax*4],ah
  4049de:	je     0x4049f0
  4049e0:	jno    0x404a1e
  4049e2:	(bad)  [eax+0x1e]
  4049e5:	mov    bl,0x3f
  4049e7:	sub    al,BYTE PTR [edi-0x547c1a36]
  4049ed:	sub    edx,DWORD PTR [ecx]
  4049ef:	mov    ds:0x93af9e89,al
  4049f4:	sub    bh,al
  4049f6:	jle    0x4049f7
  4049f8:	inc    edi
  4049f9:	or     ecx,DWORD PTR [ebx+ebx*1+0x42f9f12c]
  404a00:	jo     0x404a36
  404a02:	call   0x520f:0x5beb0138
  404a09:	dec    ebp
  404a0a:	xchg   esp,eax
  404a0b:	inc    edx
  404a0c:	inc    ebx
  404a0d:	ret    0x18d5
  404a10:	xor    eax,0xc1aac9a7
  404a15:	stos   DWORD PTR es:[edi],eax
  404a16:	add    esi,esi
  404a18:	adc    al,0x32
  404a1a:	adc    eax,DWORD PTR [ecx]
  404a1c:	retf   
  404a1d:	or     BYTE PTR [edx+0x3b],0xc2
  404a21:	lods   eax,DWORD PTR fs:[esi]
  404a23:	jp     0x404a32
  404a25:	aas    
  404a26:	push   esp
  404a27:	into   
  404a28:	add    eax,0x538b2ff2
  404a2d:	pop    esp
  404a2e:	fcmove st,st(6)
  404a30:	fwait
  404a31:	dec    esi
  404a32:	leave  
  404a33:	iret   
  404a34:	jmp    0xbf70:0x7a93a373
  404a3b:	je     0x4049d9
  404a3d:	mov    bh,0x60
  404a3f:	mov    WORD PTR [ebx+0x702cc5fd],fs
  404a45:	push   esi
  404a46:	dec    ecx
  404a47:	inc    esi
  404a48:	push   ds
  404a49:	les    ebp,FWORD PTR [ebx+0x39]
  404a4c:	(bad)  
  404a4e:	mov    esi,0x888bfd3b
  404a53:	inc    edi
  404a54:	inc    esi
  404a55:	aad    0xb4
  404a57:	xor    DWORD PTR [ebx+edx*4-0x7a53e196],esp
  404a5e:	mov    ch,0xff
  404a60:	mov    edx,0x5e17d907
  404a65:	(bad)  
  404a66:	aam    0x3a
  404a68:	mov    WORD PTR [edi-0x433cc2d0],?
  404a6e:	sti    
  404a6f:	pop    edx
  404a70:	xor    DWORD PTR [ecx+0x520c8989],eax
  404a76:	mov    al,0xd3
  404a78:	cmc    
  404a79:	push   edx
  404a7a:	or     dl,BYTE PTR [ebx-0x28]
  404a7d:	cmp    BYTE PTR [esi],ch
  404a7f:	jmp    0x404a68
  404a81:	cli    
  404a82:	sbb    dl,bl
  404a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a85:	imul   eax,DWORD PTR cs:[ebp+0x11a7f595],0x5f2e6a43
  404a90:	fninit 
  404a92:	das    
  404a93:	mov    bl,0xf6
  404a95:	cli    
  404a96:	test   DWORD PTR [esi],ecx
  404a98:	fild   QWORD PTR [edi]
  404a9a:	dec    ebx
  404a9b:	and    DWORD PTR [eax],0x65613490
  404aa1:	cdq    
  404aa2:	push   esp
  404aa3:	push   es
  404aa4:	jne    0x404ada
  404aa6:	mov    esp,0x9ec501e8
  404aab:	enter  0xf3da,0x57
  404aaf:	adc    ah,BYTE PTR [ebx]
  404ab1:	fmul   DWORD PTR [esi+ebx*1]
  404ab4:	xor    DWORD PTR [ecx],ebp
  404ab6:	int3   
  404ab7:	add    eax,0x40ad415
  404abc:	(bad)  
  404abe:	sub    edi,DWORD PTR [edi+0x4b]
  404ac1:	dec    ecx
  404ac2:	(bad)  
  404ac3:	xchg   edi,eax
  404ac4:	and    eax,0x95d3f418
  404ac9:	out    0xd7,eax
  404acb:	ror    edi,cl
  404acd:	push   0xda00c2eb
  404ad2:	jmp    DWORD PTR [ebx+0x3b]
  404ad5:	mov    cl,0x5d
  404ad7:	mov    ds:0x5122c1fa,eax
  404adc:	inc    esi
  404add:	(bad)
  404ae1:	xchg   edx,eax
  404ae2:	ret    
  404ae3:	jbe    0x404a8b
  404ae5:	outs   dx,DWORD PTR ds:[esi]
  404ae6:	xor    eax,0x49a8b9b2
  404aeb:	inc    edi
  404aec:	imul   ebp,DWORD PTR [ebx+eiz*8-0x112d1d83],0xffffffa4
  404af4:	adc    bl,BYTE PTR [esp+esi*4-0x53]
  404af8:	pop    edi
  404af9:	jg     0x404ab6
  404afb:	ror    DWORD PTR [esi-0x1],0x14
  404aff:	push   ss
  404b00:	sub    al,0x51
  404b02:	fdivr  QWORD PTR [ecx-0x752d8b05]
  404b08:	adc    ebx,DWORD PTR [edx]
  404b0a:	dec    eax
  404b0b:	and    esp,DWORD PTR [ecx+0x623a81da]
  404b11:	ds pop ds
  404b13:	sbb    al,BYTE PTR [ecx]
  404b15:	aas    
  404b16:	push   edx
  404b17:	fnstenv [eax+0x17955bb1]
  404b1d:	mov    BYTE PTR [esi-0x2140097e],dl
  404b23:	aad    0x7b
  404b25:	jb     0x404aa9
  404b27:	mov    BYTE PTR [ebx-0x424d1b90],dh
  404b2d:	in     eax,dx
  404b2e:	mov    ds:0xad5260eb,al
  404b33:	aam    0x62
  404b35:	push   edx
  404b36:	inc    edx
  404b37:	xchg   DWORD PTR [ecx+0x271f2bdb],ebp
  404b3d:	loope  0x404b92
  404b3f:	push   ebx
  404b40:	pop    ebx
  404b41:	add    ebp,esp
  404b43:	inc    ecx
  404b44:	pop    esp
  404b45:	out    0x10,eax
  404b47:	xlat   BYTE PTR ds:[ebx]
  404b48:	clc    
  404b49:	loop   0x404b0e
  404b4b:	and    ch,ah
  404b4d:	inc    edx
  404b4e:	dec    eax
  404b4f:	mov    dh,0x73
  404b51:	jns    0x404b5b
  404b53:	pop    eax
  404b54:	into   
  404b55:	mov    cl,0x60
  404b57:	pop    esi
  404b58:	or     BYTE PTR [eax-0x2153496],bl
  404b5e:	xchg   esi,eax
  404b5f:	rol    BYTE PTR [edx+0x19],0x32
  404b63:	pop    edi
  404b64:	jp     0x404b06
  404b66:	adc    DWORD PTR [ebx+eax*4],edx
  404b69:	pop    edx
  404b6a:	lds    ebp,FWORD PTR [eax-0x1a]
  404b6d:	ja     0x404b63
  404b6f:	pop    eax
  404b70:	daa    
  404b71:	jmp    FWORD PTR [ebx+0x691159dd]
  404b77:	cld    
  404b78:	aaa    
  404b79:	je     0x404b5e
  404b7b:	mov    al,ds:0x65dffab9
  404b80:	pop    edi
  404b81:	mov    bh,0xec
  404b83:	lock inc esp
  404b85:	and    eax,0x118b0c73
  404b8a:	fild   DWORD PTR [eax+0x1b404f46]
  404b90:	mov    ebx,0xd25ff9ad
  404b95:	sbb    DWORD PTR [eax-0x22663133],0xfd6f8038
  404b9f:	sbb    cl,ch
  404ba1:	call   0x9d8c9bc8
  404ba6:	out    0xe,eax
  404ba8:	int3   
  404ba9:	mov    edx,0xf5aa9c11
  404bae:	mov    DWORD PTR [ebx+0x24],eax
  404bb1:	inc    ebx
  404bb2:	push   0x54
  404bb4:	mov    ecx,0x5df4c2a4
  404bb9:	mov    ecx,0x363b1ee
  404bbe:	pop    edi
  404bbf:	into   
  404bc0:	jbe    0x404c01
  404bc2:	leave  
  404bc3:	repnz dec edi
  404bc5:	push   ebp
  404bc6:	add    ah,BYTE PTR [ecx+edx*1+0x7f]
  404bca:	into   
  404bcb:	out    dx,al
  404bcc:	push   esp
  404bcd:	sbb    esi,DWORD PTR [esp+ebp*1]
  404bd0:	mov    al,ds:0x2114a6f5
  404bd5:	retf   
  404bd6:	sbb    eax,0x5b58dcc1
  404bdb:	xor    edi,DWORD PTR [ebx+0x729536b5]
  404be1:	or     al,0xa
  404be3:	xor    BYTE PTR [eax+0x30f313f8],0x42
  404bea:	mov    ah,0xfd
  404bec:	pop    ebp
  404bed:	dec    esi
  404bee:	jnp    0x404c28
  404bf0:	xchg   ebp,eax
  404bf1:	frstor [edx]
  404bf3:	adc    eax,0xcb4b131d
  404bf8:	test   DWORD PTR [eax],ecx
  404bfa:	sti    
  404bfb:	shr    BYTE PTR [esi+0x3],0xe5
  404bff:	loope  0x404c5c
  404c01:	ret    0x2860
  404c04:	data16 mov dh,0xcd
  404c07:	imul   edx,eax,0x48bfe9a3
  404c0d:	inc    esp
  404c0e:	daa    
  404c0f:	dec    esp
  404c10:	repnz cmp eax,0xcfd569d3
  404c16:	iret   
  404c17:	xor    dl,bh
  404c19:	shl    DWORD PTR [ebp*1-0x2d52e4ab],1
  404c20:	inc    edi
  404c21:	inc    esi
  404c22:	int    0x32
  404c24:	jne    0x404c54
  404c26:	add    DWORD PTR [edx+0x7c541bcd],edx
  404c2c:	les    eax,FWORD PTR [eax+0x405c347c]
  404c32:	stc    
  404c33:	fwait
  404c34:	call   0xe7514206
  404c39:	ja     0x404c25
  404c3b:	es or  al,0x67
  404c3e:	loopne 0x404c30
  404c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c41:	mov    ebp,0xa03d4187
  404c46:	dec    edi
  404c47:	or     BYTE PTR [ebx+ecx*2-0x57],al
  404c4b:	pusha  
  404c4c:	sub    al,0xfa
  404c4e:	or     esp,DWORD PTR [ebp+0x6afe5bb7]
  404c54:	dec    esi
  404c55:	dec    ecx
  404c56:	inc    ebx
  404c57:	mov    ds,WORD PTR [eax+0x3f]
  404c5a:	iret   
  404c5b:	cmp    ecx,DWORD PTR [esi+0x61a098f6]
  404c61:	popf   
  404c62:	ficom  DWORD PTR [ecx]
  404c64:	push   ebx
  404c65:	(bad)  [edi+0x8]
  404c68:	push   ds
  404c69:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c6b:	push   ebx
  404c6c:	jmp    0x404cc2
  404c6e:	xchg   esp,eax
  404c6f:	push   eax
  404c70:	jmp    0x640efaea
  404c75:	mov    eax,ds:0x9dd349e7
  404c7a:	ror    esp,1
  404c7c:	test   BYTE PTR [ebp+0x4f],dh
  404c7f:	loop   0x404c5c
  404c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c82:	sub    dl,al
  404c84:	(bad)  
  404c85:	mov    eax,0x64d22e48
  404c8a:	nop
  404c8b:	leave  
  404c8c:	in     al,dx
  404c8d:	fld    DWORD PTR [ecx-0x62]
  404c90:	lea    edx,[eax+0x33f034b4]
  404c96:	rol    DWORD PTR [edi+0x1e],0xc4
  404c9a:	jl     0x404ce3
  404c9c:	(bad)  
  404c9d:	fcom   QWORD PTR [edx-0xed2d7cb]
  404ca3:	std    
  404ca4:	adc    eax,0x522e5cf1
  404ca9:	sbb    dh,BYTE PTR [ecx-0xba96ac9]
  404caf:	mov    ecx,0xc02973c3
  404cb4:	popf   
  404cb5:	ror    dh,cl
  404cb7:	dec    esi
  404cb8:	or     ebp,DWORD PTR [esi]
  404cba:	loope  0x404c45
  404cbc:	dec    eax
  404cbd:	cmp    esp,eax
  404cbf:	fmul   QWORD PTR [ebx+0x7f]
  404cc2:	cmp    DWORD PTR [eax+0x20],ebp
  404cc5:	inc    edi
  404cc6:	cmp    BYTE PTR [ebx],0x59
  404cc9:	stc    
  404cca:	int3   
  404ccb:	lods   al,BYTE PTR ds:[esi]
  404ccc:	sbb    eax,0x8a95ebf5
  404cd1:	mov    ebx,DWORD PTR [edi]
  404cd3:	sbb    dl,BYTE PTR [ecx*4-0xccef04d]
  404cda:	fidivr DWORD PTR [ecx-0x5103b53f]
  404ce0:	call   0x8acd76aa
  404ce5:	cmc    
  404ce6:	xchg   edx,eax
  404ce7:	mov    dh,0x29
  404ce9:	pushf  
  404cea:	loopne 0x404d03
  404cec:	xchg   esi,eax
  404ced:	mov    ecx,0xfbb2bead
  404cf2:	(bad)  
  404cf3:	fs inc ebx
  404cf5:	cmp    dh,BYTE PTR [esp+ebp*1-0x5e]
  404cf9:	adc    bl,bl
  404cfb:	cld    
  404cfc:	inc    edx
  404cfd:	jg     0x404d25
  404cff:	ret    
  404d00:	retf   
  404d01:	aad    0x84
  404d03:	sub    al,0x56
  404d05:	test   DWORD PTR [edi+0x7eb4a68e],esp
  404d0b:	bound  ebp,QWORD PTR [ebx]
  404d0d:	push   eax
  404d0e:	jns    0x404d3a
  404d10:	or     eax,0x16bef9e4
  404d15:	ins    DWORD PTR es:[edi],dx
  404d16:	jns    0x404d30
  404d18:	push   edx
  404d19:	call   0xc3ad5ed8
  404d1e:	test   DWORD PTR [ecx-0x2a755f48],eax
  404d24:	mov    cl,0x9f
  404d26:	xlat   BYTE PTR ds:[ebx]
  404d27:	ror    BYTE PTR [ecx+esi*1-0x4d],1
  404d2b:	dec    edi
  404d2c:	repz es call 0xf6fc:0xb23a0b5b
  404d35:	test   eax,0xb149af7c
  404d3a:	fcom   QWORD PTR [esi-0x49]
  404d3d:	lock add ch,BYTE PTR [eax+0x65e339a4]
  404d44:	mov    edx,0xc422ad37
  404d49:	rcl    DWORD PTR [eax],cl
  404d4b:	adc    ch,BYTE PTR [ecx+0x54]
  404d4e:	adc    al,0x37
  404d50:	inc    eax
  404d51:	ret    
  404d52:	dec    ecx
  404d53:	sbb    al,0xf0
  404d55:	(bad)  
  404d56:	pop    ebp
  404d57:	jns    0x404cf0
  404d59:	popa   
  404d5a:	push   ecx
  404d5b:	lea    edi,[eax-0x2390d688]
  404d61:	push   ecx
  404d62:	inc    edi
  404d63:	pop    eax
  404d64:	lds    ebp,FWORD PTR [edx+esi*1]
  404d67:	pop    es
  404d68:	or     al,0xc8
  404d6a:	cmp    al,cl
  404d6c:	and    eax,0x63b74fc6
  404d71:	mov    ah,BYTE PTR [esi-0x5a]
  404d74:	mov    ch,BYTE PTR cs:[esi+edi*1-0x1503b772]
  404d7c:	xchg   edx,eax
  404d7d:	pop    eax
  404d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d7f:	push   edi
  404d80:	adc    al,0xf8
  404d82:	inc    edi
  404d83:	fwait
  404d84:	push   es
  404d85:	sub    eax,0x4e299319
  404d8a:	xchg   ebx,eax
  404d8b:	into   
  404d8c:	outs   dx,BYTE PTR ds:[esi]
  404d8d:	aas    
  404d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d8f:	popa   
  404d90:	sbb    dl,cl
  404d92:	mov    edi,0xd2acab20
  404d97:	inc    edx
  404d98:	sar    DWORD PTR [ecx],cl
  404d9a:	and    esp,DWORD PTR [ecx+0x21]
  404d9d:	mov    esp,0xf54facc8
  404da2:	rcr    BYTE PTR [esi+0x5df8eb02],cl
  404da8:	mov    edi,0x881fdc4b
  404dad:	jecxz  0x404e01
  404daf:	arpl   WORD PTR [esi-0x2],cx
  404db2:	mov    ecx,0xb232aaf4
  404db7:	test   eax,0x656e3198
  404dbc:	and    eax,0xdecdfcad
  404dc1:	push   ds
  404dc2:	sub    eax,0x4490e956
  404dc7:	sbb    eax,0xdcb5fcbb
  404dcc:	fistp  WORD PTR [eax-0x8460cca]
  404dd2:	or     dh,BYTE PTR [esp+eiz*4-0x31]
  404dd6:	pop    ebx
  404dd7:	mov    dh,0x71
  404dd9:	jb     0x404dec
  404ddb:	push   esi
  404ddc:	loope  0x404df2
  404dde:	fdivp  st(1),st
  404de0:	popf   
  404de1:	and    BYTE PTR [eax],ah
  404de3:	inc    ebp
  404de4:	arpl   WORD PTR [eax],bx
  404de6:	adc    ah,bh
  404de8:	js     0x404e33
  404dea:	push   es
  404deb:	imul   edx,DWORD PTR [edx+0x31fb91db],0x68
  404df2:	or     al,0xa4
  404df4:	js     0x404e1e
  404df6:	inc    edi
  404df7:	sub    ebx,DWORD PTR [eax]
  404df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dfa:	sub    eax,0x72ac6e00
  404dff:	sub    eax,0x8772c74d
  404e04:	mov    esp,0x29e9d0c8
  404e09:	(bad)  
  404e0b:	dec    ebx
  404e0c:	mov    bl,BYTE PTR [ebx-0x3f]
  404e0f:	shr    BYTE PTR [esi+0x28],0xaa
  404e13:	cs fs loop 0x404db4
  404e17:	and    esp,DWORD PTR [edx]
  404e19:	xchg   ebx,eax
  404e1a:	fldcw  WORD PTR [edx-0x28]
  404e1d:	int3   
  404e1e:	cmp    DWORD PTR [ebp-0x58c2d51b],0x6212877a
  404e28:	push   esi
  404e29:	mov    BYTE PTR [ebx-0x7d],bl
  404e2c:	mov    ecx,0x6a63cd0d
  404e31:	lahf   
  404e32:	repnz cwde 
  404e34:	mov    edx,0x859b3cf9
  404e39:	sti    
  404e3a:	into   
  404e3b:	inc    esi
  404e3c:	dec    ebx
  404e3d:	ret    0x8f36
  404e40:	sub    eax,0x5e66656e
  404e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e46:	mov    ecx,0x436e086
  404e4b:	and    al,0x5c
  404e4d:	fistp  WORD PTR [ebx+0x699c75d7]
  404e53:	adc    BYTE PTR [ebp+0x22465409],dl
  404e59:	test   BYTE PTR [edx],bl
  404e5b:	bound  edi,QWORD PTR [ecx+ebp*8-0x73]
  404e5f:	mov    eax,ds:0x776416d9
  404e64:	jb     0x404e2b
  404e66:	retf   
  404e67:	rcl    DWORD PTR [ecx-0x46],1
  404e6a:	ret    
  404e6b:	ds stc 
  404e6d:	xchg   edx,eax
  404e6e:	imul   DWORD PTR [eax-0x3a5ec283]
  404e74:	cld    
  404e75:	jno    0x404eb7
  404e77:	cmp    eax,0xa172e69c
  404e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e7d:	pop    esi
  404e7e:	out    0x16,eax
  404e80:	lods   al,BYTE PTR ds:[esi]
  404e81:	adc    eax,DWORD PTR [ecx+0x57]
  404e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e85:	add    al,0xfc
  404e87:	mov    eax,ds:0x5e60ca1b
  404e8c:	jae    0x404e95
  404e8e:	mov    edx,db1
  404e91:	in     eax,dx
  404e92:	lahf   
  404e93:	inc    edx
  404e94:	dec    edx
  404e95:	jl     0x404ec5
  404e97:	pop    esi
  404e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e99:	sub    eax,0xa32ab7f
  404e9e:	adc    DWORD PTR [ecx],edx
  404ea0:	sub    bh,BYTE PTR [edi+edx*8]
  404ea3:	sahf   
  404ea4:	inc    ecx
  404ea5:	mov    cl,0xe5
  404ea7:	aam    0x7d
  404ea9:	aad    0xd4
  404eab:	fidivr WORD PTR [edx-0x4f]
  404eae:	mov    BYTE PTR [edx+edx*8+0x6f],al
  404eb2:	lods   eax,DWORD PTR ds:[esi]
  404eb3:	jmp    0xf689:0x7ce9d21
  404eba:	cmp    al,0xbd
  404ebc:	push   es
  404ebd:	std    
  404ebe:	adc    dh,dh
  404ec0:	dec    ecx
  404ec1:	xchg   edi,eax
  404ec2:	fisub  WORD PTR ds:0xa1775e8e
  404ec8:	and    eax,0x3038333e
  404ecd:	mov    esi,0x74a34d89
  404ed2:	mov    ebx,0x9e08f618
  404ed7:	cmp    eax,0x1148f111
  404edc:	add    al,0x71
  404ede:	dec    ecx
  404edf:	call   0xffafb3c3
  404ee4:	xchg   esp,eax
  404ee5:	push   esp
  404ee6:	add    DWORD PTR [ebx],0x88ff9a80
  404eec:	lahf   
  404eed:	repz sub eax,0xec28f33f
  404ef3:	in     eax,0x78
  404ef5:	jmp    0x6787:0x2a7adba0
  404efc:	and    DWORD PTR [esi],edx
  404efe:	enter  0x2ce6,0x7d
  404f02:	adc    al,0x3b
  404f04:	popa   
  404f05:	mov    dl,0x64
  404f07:	pop    esi
  404f08:	xor    eax,0xa8045cec
  404f0d:	out    dx,al
  404f0e:	cli    
  404f0f:	lahf   
  404f10:	mov    ebp,0xb7a0e3bb
  404f15:	(bad)  
  404f16:	div    DWORD PTR [ecx-0x69]
  404f19:	push   ebp
  404f1a:	dec    esp
  404f1b:	test   al,0xf8
  404f1d:	ins    BYTE PTR es:[edi],dx
  404f1e:	aas    
  404f1f:	outs   dx,DWORD PTR ds:[esi]
  404f20:	popf   
  404f21:	out    0x4f,eax
  404f23:	out    dx,al
  404f24:	bound  ebp,QWORD PTR [ecx-0x36592f5d]
  404f2a:	das    
  404f2b:	pop    eax
  404f2c:	enter  0x7e2d,0x8e
  404f30:	popa   
  404f31:	jle    0x404ec6
  404f33:	popf   
  404f34:	dec    ebp
  404f35:	add    al,0xb4
  404f37:	in     al,0xf5
  404f39:	mov    al,ds:0x668d288f
  404f3e:	ret    
  404f3f:	ret    0x5666
  404f42:	push   esi
  404f43:	or     eax,0x20fb104b
  404f48:	dec    edi
  404f49:	fistp  WORD PTR [ecx-0xc3296f5]
  404f4f:	sbb    eax,eax
  404f51:	cmp    DWORD PTR ds:0x1710226f,esp
  404f57:	mov    al,0xf5
  404f59:	or     eax,edi
  404f5b:	(bad)  
  404f5c:	call   0xb7572e4e
  404f61:	push   ecx
  404f62:	mov    al,ds:0x9d3c297d
  404f67:	pop    esi
  404f68:	jo     0x404f8d
  404f6a:	cmc    
  404f6b:	and    BYTE PTR [edi+0x78],ah
  404f6e:	cld    
  404f6f:	out    0x3,al
  404f71:	xchg   ecx,ecx
  404f73:	data16 es rol ah,1
  404f77:	ret    0xb385
  404f7a:	retf   
  404f7b:	add    al,0xec
  404f7d:	jp     0x404f31
  404f7f:	xchg   DWORD PTR [esi-0x30],ebx
  404f82:	mov    ebx,0xacd29ccd
  404f87:	adc    esp,DWORD PTR [eax+0x719c70e2]
  404f8d:	dec    esp
  404f8e:	inc    esp
  404f8f:	add    eax,0x8f21ceb3
  404f94:	lea    ebp,[edi]
  404f96:	popf   
  404f97:	mov    ds:0x8d0b192f,eax
  404f9d:	cmc    
  404f9e:	sbb    edx,edx
  404fa0:	mov    edx,0x399ec5b2
  404fa5:	sbb    al,0x9c
  404fa7:	sar    BYTE PTR [eax+0x2833dda9],cl
  404fad:	xor    al,0xc5
  404faf:	dec    esp
  404fb0:	pop    ecx
  404fb1:	or     BYTE PTR [ebp-0x3465ee2],ah
  404fb7:	pop    esi
  404fb8:	dec    ebp
  404fb9:	cld    
  404fba:	cmc    
  404fbb:	mov    WORD PTR [ebp-0x43d72bf9],ss
  404fc1:	shl    DWORD PTR [edi+0x7],1
  404fc4:	clc    
  404fc5:	lahf   
  404fc6:	xchg   ah,dl
  404fc8:	imul   eax,DWORD PTR [ecx-0xa86880a],0x3610c461
  404fd2:	scas   eax,DWORD PTR es:[edi]
  404fd3:	es inc eax
  404fd5:	add    DWORD PTR fs:[esi+0x4f],esp
  404fd9:	xchg   esp,eax
  404fda:	call   0xd9e38c7
  404fdf:	inc    ebp
  404fe0:	jl     0x40501e
  404fe2:	mov    ecx,DWORD PTR [ebx-0x65]
  404fe5:	shl    DWORD PTR [ecx-0x43],0xe4
  404fe9:	jns    0x404f91
  404feb:	pop    ds
  404fec:	ins    DWORD PTR es:[edi],dx
  404fed:	sahf   
  404fee:	in     al,dx
  404fef:	or     ecx,edx
  404ff1:	cli    
  404ff2:	sub    esp,ecx
  404ff4:	inc    eax
  404ff5:	inc    edi
  404ff6:	jb     0x404fbd
  404ff8:	sub    al,0xa9
  404ffa:	jbe    0x404fc7
  404ffc:	or     edx,DWORD PTR ds:[ebp-0x63]
  405000:	popf   
  405001:	es mov ebp,0x84816f45
  405007:	xlat   BYTE PTR ds:[ebx]
  405008:	dec    esi
  405009:	mov    ds:0x58f97e8c,eax
  40500e:	cmp    al,0xda
  405010:	test   DWORD PTR [edx-0x2],0xfffb3589
  405017:	rcl    BYTE PTR [esi-0x62f6e216],cl
  40501d:	mov    cl,0x70
  40501f:	xchg   esp,eax
  405020:	test   DWORD PTR [ebx],ebx
  405022:	mov    WORD PTR ds:0xba1ec500,gs
  405028:	stos   DWORD PTR es:[edi],eax
  405029:	pop    ss
  40502a:	(bad)  
  40502b:	icebp  
  40502c:	data16 stos BYTE PTR es:[edi],al
  40502e:	repz in eax,dx
  405030:	test   al,0x68
  405032:	ret    0x29af
  405035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405036:	ins    DWORD PTR es:[edi],dx
  405037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405038:	lock jnp 0x404fcd
  40503b:	inc    edx
  40503c:	xchg   edx,eax
  40503d:	sub    ah,BYTE PTR [edx+0x29]
  405040:	inc    ecx
  405041:	fwait
  405042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405043:	adc    ebx,esp
  405045:	xchg   DWORD PTR ds:0xcdb8b820,esi
  40504b:	xchg   edi,eax
  40504c:	les    eax,FWORD PTR [eax-0x32d30de2]
  405052:	ins    BYTE PTR es:[edi],dx
  405053:	push   esp
  405054:	or     BYTE PTR [esi],0x61
  405057:	sbb    BYTE PTR [eax-0x7b],0x1a
  40505b:	sub    bh,BYTE PTR gs:[ebx]
  40505e:	out    0x14,al
  405060:	in     eax,0xc8
  405062:	jle    0x40507a
  405064:	jne    0x405050
  405066:	clc    
  405067:	loope  0x40508d
  405069:	mov    al,ds:0xc46d0d17
  40506e:	bound  esi,QWORD PTR [esp+eiz*4+0x30dcdd89]
  405075:	add    BYTE PTR [esi+0x5f09bbd7],ah
  40507b:	cwde   
  40507c:	jnp    0x4050e8
  40507e:	es sub eax,0xd613cf0b
  405084:	arpl   WORD PTR [ebx+eax*1],di
  405087:	mov    ebx,0xdae4320
  40508c:	lods   eax,DWORD PTR ds:[esi]
  40508d:	xor    BYTE PTR [esi-0x34],0x6e
  405091:	pop    es
  405092:	out    0x84,eax
  405094:	or     cl,dh
  405096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405097:	jo     0x4050d2
  405099:	cmp    eax,0x72b59f8a
  40509e:	cmp    eax,0x6fc36131
  4050a3:	cmp    edx,esp
  4050a5:	adc    DWORD PTR [ebp+0x36b9e989],ebx
  4050ab:	mov    bl,BYTE PTR [edi+ebp*2]
  4050ae:	jecxz  0x4050ec
  4050b0:	jae    0x405050
  4050b2:	mov    eax,0x657f825f
  4050b7:	mov    edi,0xb32e8f8b
  4050bc:	loope  0x4050ce
  4050be:	js     0x405056
  4050c0:	or     ecx,DWORD PTR [eax+0x4c]
  4050c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050c4:	xchg   ebx,eax
  4050c5:	(bad)  
  4050c6:	arpl   WORD PTR [edx-0x61],sp
  4050c9:	inc    esp
  4050ca:	jno    0x40506b
  4050cc:	xchg   BYTE PTR [ebp+0x2fb77ece],al
  4050d2:	test   DWORD PTR [esi+0x36],ecx
  4050d5:	icebp  
  4050d6:	clc    
  4050d7:	jno    0x40507b
  4050d9:	fs stos BYTE PTR es:[edi],al
  4050db:	mov    dh,0xcd
  4050dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050de:	enter  0x35a9,0xe
  4050e2:	addr16 push ebx
  4050e4:	jbe    0x4050b6
  4050e6:	xchg   esi,eax
  4050e7:	jge    0x40510a
  4050e9:	dec    edi
  4050ea:	scas   eax,DWORD PTR es:[edi]
  4050eb:	adc    al,0x36
  4050ed:	mov    esp,DWORD PTR [edi-0xe]
  4050f0:	sub    ebp,esi
  4050f2:	sar    ch,1
  4050f4:	cmp    al,0xa8
  4050f6:	ins    BYTE PTR es:[edi],dx
  4050f7:	xchg   edx,eax
  4050f8:	enter  0x83fa,0x13
  4050fc:	inc    ebp
  4050fd:	aam    0xb0
  4050ff:	es clc 
  405101:	push   ds
  405102:	dec    esp
  405103:	jne    0x4050fd
  405105:	mov    ds:0xf6e02aff,eax
  40510a:	bound  eax,QWORD PTR [edx-0xd53b320]
  405110:	rcl    DWORD PTR [ebx+edi*2+0x75],1
  405114:	pop    DWORD PTR [edx+0x63]
  405117:	ret    0xa8be
  40511a:	call   0x5858cfa
  40511f:	fcomp  DWORD PTR [esi+0xcf1fa06]
  405125:	xor    eax,0xb72652d
  40512a:	mov    edx,0x5c37d22
  40512f:	leave  
  405130:	jmp    0x58dc:0x32c581be
  405137:	mov    al,ds:0x14b16622
  40513c:	mov    bl,BYTE PTR [ebp-0x23]
  40513f:	(bad)  
  405140:	nop
  405141:	push   ss
  405142:	pop    eax
  405143:	dec    edi
  405144:	mov    edi,DWORD PTR [esi+0x0]
  405147:	shr    bl,1
  405149:	mov    cl,0xf1
  40514b:	push   edx
  40514c:	xchg   edx,eax
  40514d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40514e:	hlt    
  40514f:	jbe    0x4050ef
  405151:	call   DWORD PTR [esi-0x7fb42323]
  405157:	cli    
  405158:	jmp    0x405158
  40515a:	mov    ah,0x7
  40515c:	ror    BYTE PTR [ebx-0x3d080bdb],0x5d
  405163:	out    0x41,al
  405165:	fdiv   QWORD PTR [esi-0x5c97621e]
  40516b:	xchg   DWORD PTR [esi+eiz*2],edi
  40516e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40516f:	aad    0x69
  405171:	ins    DWORD PTR es:[edi],dx
  405172:	add    al,dh
  405174:	iret   
  405175:	cli    
  405176:	sub    BYTE PTR ss:[esi],al
  405179:	call   0x6ddd:0xbe756054
  405180:	outs   dx,DWORD PTR ds:[esi]
  405181:	push   ds
  405182:	arpl   si,si
  405184:	dec    edx
  405185:	fs cli 
  405187:	rol    BYTE PTR [eax],1
  405189:	jae    0x4051ae
  40518b:	lods   eax,DWORD PTR ds:[esi]
  40518c:	sar    dl,1
  40518e:	sar    BYTE PTR [ebx],1
  405190:	fcom   DWORD PTR [esi]
  405192:	into   
  405193:	xlat   BYTE PTR ds:[ebx]
  405194:	push   edi
  405195:	cs sbb eax,0xba28ea93
  40519b:	push   ds
  40519c:	mov    ds:0xfaef614f,al
  4051a1:	cli    
  4051a2:	and    eax,0x8eb8c15c
  4051a7:	mov    bh,0x4
  4051a9:	call   0x4ef91174
  4051ae:	and    al,0xa7
  4051b0:	popa   
  4051b1:	(bad)  
  4051b2:	je     0x405220
  4051b4:	pop    ds
  4051b5:	and    cl,dh
  4051b7:	in     eax,0x68
  4051b9:	add    cl,dl
  4051bb:	jae    0x405210
  4051bd:	jae    0x4051a8
  4051bf:	fldenv [esi]
  4051c1:	pop    ss
  4051c2:	imul   ecx,DWORD PTR [edx-0x72],0xffffffc0
  4051c6:	popf   
  4051c7:	xor    al,0x35
  4051c9:	(bad)  
  4051ca:	push   edi
  4051cb:	mov    dh,0x2b
  4051cd:	aaa    
  4051ce:	sub    eax,DWORD PTR [ebx]
  4051d0:	retf   0x2042
  4051d3:	mov    esp,0xe61282aa
  4051d8:	mov    BYTE PTR [ebx-0x18],cl
  4051db:	inc    esp
  4051dc:	leave  
  4051dd:	(bad)  
  4051de:	jmp    0xda927d7d
  4051e3:	mov    edi,0x64d05f1b
  4051e8:	push   edx
  4051e9:	inc    BYTE PTR [eax+0x7a]
  4051ec:	sbb    esi,DWORD PTR [ebx-0x6]
  4051ef:	dec    DWORD PTR [edx+0x4a]
  4051f2:	cmp    BYTE PTR [ebx-0x72],ah
  4051f5:	xchg   bh,bl
  4051f7:	rcr    ecx,cl
  4051f9:	shl    DWORD PTR [ebx+0x3b0967bc],cl
  4051ff:	xchg   esi,eax
  405200:	fcomp  QWORD PTR [esi]
  405202:	pop    ds
  405203:	mov    dl,0x14
  405205:	mov    bl,BYTE PTR [edx+0x3b321949]
  40520b:	cmp    BYTE PTR [ebx],ah
  40520d:	repz jg 0x4051ba
  405210:	inc    esi
  405211:	mov    cl,0xb5
  405213:	add    ebp,edi
  405215:	jo     0x40523d
  405217:	mov    ds:0x4a532f71,eax
  40521c:	out    dx,al
  40521d:	mov    edi,0x267ef83b
  405222:	mov    ecx,DWORD PTR [ebx-0x3c]
  405225:	enter  0x7b26,0x45
  405229:	mov    ebp,0xc729163d
  40522e:	adc    eax,0xe4b54fbe
  405233:	js     0x40520c
  405235:	jl     0x40524c
  405237:	sub    cl,ah
  405239:	mov    ch,0xc1
  40523b:	inc    esi
  40523c:	ins    DWORD PTR es:[edi],dx
  40523d:	loop   0x4051ca
  40523f:	add    esi,DWORD PTR [ebx-0x478ef936]
  405245:	jge    0x40521e
  405247:	push   cs
  405248:	xor    cl,dh
  40524a:	out    0xd6,eax
  40524c:	pusha  
  40524d:	push   edx
  40524e:	ds dec ebx
  405250:	lods   eax,DWORD PTR ds:[esi]
  405251:	rcl    cl,0x1
  405254:	call   0x2557:0xd204aea1
  40525b:	inc    esp
  40525c:	mov    ah,0xa3
  40525e:	xchg   BYTE PTR [edi-0x7d],al
  405261:	shr    BYTE PTR [edx+0xd],cl
  405264:	sti    
  405265:	lea    esp,[ebx]
  405267:	sbb    ecx,ebx
  405269:	xor    DWORD PTR [esp+ebp*8-0x32],ebp
  40526d:	sub    DWORD PTR [edx+0x19bc5d2e],ebp
  405273:	int3   
  405274:	mov    esp,0x38a05bb1
  405279:	(bad)  
  40527a:	pmaxsw mm2,mm5
  40527d:	push   esp
  40527e:	xor    al,0x81
  405280:	sbb    bl,BYTE PTR [esp+ebp*8]
  405283:	ficomp DWORD PTR [edx+esi*4]
  405286:	mov    edx,0x1ede5f1a
  40528b:	push   edx
  40528c:	jle    0x405301
  40528e:	push   0xffffffa4
  405290:	daa    
  405291:	rcr    cl,0x68
  405294:	scas   eax,DWORD PTR es:[edi]
  405295:	in     eax,dx
  405296:	inc    eax
  405297:	mov    ah,0x1e
  405299:	outs   dx,DWORD PTR ds:[esi]
  40529a:	sub    DWORD PTR [ecx+0x64],edx
  40529d:	outs   dx,DWORD PTR ds:[esi]
  40529e:	push   edx
  40529f:	(bad)  
  4052a0:	(bad)  
  4052a1:	cld    
  4052a2:	sub    BYTE PTR [eax-0x69],0x49
  4052a6:	retf   0xe380
  4052a9:	mov    eax,0xce1736ea
  4052ae:	ins    BYTE PTR es:[edi],dx
  4052af:	sbb    DWORD PTR [ebx+0x573036e5],edi
  4052b5:	fsubr  st,st(7)
  4052b7:	fisubr DWORD PTR [esi+ebx*4-0x3a43159f]
  4052be:	mov    esi,0xf66ed603
  4052c3:	loope  0x405293
  4052c5:	jb     0x4052cc
  4052c7:	jb     0x4052ec
  4052c9:	pop    eax
  4052ca:	stos   BYTE PTR es:[edi],al
  4052cb:	cmp    esp,DWORD PTR [ebx-0x25028e9c]
  4052d1:	rcr    BYTE PTR [ebp+0x6e],1
  4052d4:	and    eax,0x7857d02
  4052d9:	jmp    0x40529a
  4052db:	into   
  4052dc:	xchg   esi,eax
  4052dd:	call   0xa4e4:0x81c2d6a4
  4052e4:	sub    dl,bl
  4052e6:	pop    eax
  4052e7:	sub    ah,BYTE PTR [ebx]
  4052e9:	pop    edx
  4052ea:	ins    DWORD PTR es:[edi],dx
  4052eb:	popf   
  4052ec:	sub    al,0x6b
  4052ee:	jno    0x405321
  4052f0:	jmp    0x405332
  4052f2:	jns    0x405357
  4052f4:	pop    es
  4052f5:	mov    ds:0xf8dba6d1,al
  4052fa:	std    
  4052fb:	mov    ebp,0x53176034
  405300:	mov    ch,0xaf
  405302:	call   0xf697:0x728fe101
  405309:	arpl   bp,ax
  40530b:	(bad)  
  40530c:	lock mov bl,0xa0
  40530f:	push   ebx
  405310:	leave  
  405311:	iret   
  405312:	fild   WORD PTR [ecx-0x20]
  405315:	pushf  
  405316:	inc    ecx
  405317:	xor    al,0x47
  405319:	cmp    al,0xe3
  40531b:	inc    edx
  40531c:	push   edi
  40531d:	mov    ecx,0x46849bf3
  405322:	fnsave [edi+0x18]
  405325:	push   edi
  405326:	sbb    ebx,DWORD PTR [edx-0xb]
  405329:	push   es
  40532a:	push   ds
  40532b:	inc    esp
  40532c:	rol    DWORD PTR [esi],cl
  40532e:	push   edx
  40532f:	push   eax
  405330:	jns    0x4052be
  405332:	xchg   BYTE PTR [edi],bh
  405334:	xor    BYTE PTR ds:0x8a567705,0x4e
  40533b:	sub    al,0xa4
  40533d:	jno    0x40530a
  40533f:	fild   QWORD PTR [edi]
  405341:	mov    bh,0xf
  405343:	adc    al,0xe2
  405345:	mov    ah,0x95
  405347:	mov    ds:0xf719625b,al
  40534c:	das    
  40534d:	dec    ebp
  40534e:	popa   
  40534f:	rcr    BYTE PTR [ecx-0x10ebd460],cl
  405355:	rol    al,cl
  405357:	xchg   BYTE PTR [eax-0x20c01fe],dl
  40535d:	jecxz  0x4053a3
  40535f:	popa   
  405360:	iret   
  405361:	sti    
  405362:	mov    ecx,ebx
  405364:	mov    ch,BYTE PTR [eax-0xa]
  405367:	and    dl,BYTE PTR [ebp+0x4f]
  40536a:	mov    ds,WORD PTR [eax-0x4b]
  40536d:	add    eax,0x395906e4
  405372:	add    eax,0x60d40333
  405377:	pop    eax
  405378:	sar    bh,cl
  40537a:	ins    DWORD PTR es:[edi],dx
  40537b:	sbb    dl,BYTE PTR [esi+0x282b3a62]
  405381:	iret   
  405382:	xchg   ecx,eax
  405383:	lahf   
  405384:	inc    ebx
  405385:	sbb    eax,0x5d26d26c
  40538a:	fstp   QWORD PTR [edx+ebp*8]
  40538d:	xor    al,0xe6
  40538f:	xlat   BYTE PTR ds:[ebx]
  405390:	shr    BYTE PTR [edx-0x6b5e13c8],cl
  405396:	jo     0x405401
  405398:	pop    esi
  405399:	add    BYTE PTR [edi],ch
  40539b:	shl    BYTE PTR [ebx],cl
  40539d:	xchg   edx,eax
  40539e:	inc    edi
  40539f:	(bad)  
  4053a0:	stc    
  4053a1:	cdq    
  4053a2:	push   ecx
  4053a3:	dec    edx
  4053a4:	popa   
  4053a5:	bound  esi,QWORD PTR [eax-0x1a]
  4053a8:	sbb    al,0xeb
  4053aa:	or     eax,0xc9ad40df
  4053af:	push   ds
  4053b0:	ret    
  4053b1:	adc    BYTE PTR [ebx+0x1db20258],bh
  4053b7:	lahf   
  4053b8:	popf   
  4053b9:	add    BYTE PTR [eax+edx*4+0x3b],0xa4
  4053be:	xchg   ebx,eax
  4053bf:	rcl    BYTE PTR [ebx],0xf7
  4053c2:	or     edi,DWORD PTR [edi]
  4053c4:	rcl    ch,1
  4053c6:	scas   al,BYTE PTR es:[edi]
  4053c7:	adc    ch,dh
  4053c9:	lahf   
  4053ca:	xor    al,0xdd
  4053cc:	fwait
  4053cd:	sub    DWORD PTR [edi-0x16],esi
  4053d0:	cmp    al,0x4
  4053d2:	pop    ebp
  4053d3:	and    edi,ebx
  4053d5:	xchg   esi,eax
  4053d6:	sub    al,0x1c
  4053d8:	retf   
  4053d9:	xchg   DWORD PTR [edx],ebp
  4053db:	dec    esp
  4053dc:	inc    ecx
  4053dd:	aas    
  4053de:	inc    eax
  4053df:	add    al,0x5d
  4053e1:	add    eax,0xf4383e79
  4053e6:	test   ebp,ebx
  4053e8:	aas    
  4053e9:	mov    esp,DWORD PTR [ebp-0x67]
  4053ec:	cmp    al,0xa3
  4053ee:	xor    BYTE PTR [eax-0x47bd0df3],ah
  4053f4:	pop    esp
  4053f6:	js     0x405425
  4053f8:	enter  0xdcac,0xaf
  4053fc:	inc    ebx
  4053fd:	cmp    DWORD PTR [ebx+ebp*2],edi
  405400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405401:	popa   
  405402:	in     al,dx
  405403:	xlat   BYTE PTR ds:[ebx]
  405404:	ds ret 
  405406:	call   0x4bd25efc
  40540b:	fist   DWORD PTR [ebp+0x479d0e46]
  405411:	xor    eax,0x436060b6
  405416:	repz sahf 
  405418:	(bad)  
  405419:	mov    edx,0x67886381
  40541e:	xor    BYTE PTR [ecx+esi*4],bh
  405421:	pop    ebp
  405422:	xchg   DWORD PTR [ebp+0x7d],ebp
  405425:	add    eax,0x661cc3d0
  40542a:	mov    dl,0xc2
  40542c:	and    dh,ch
  40542e:	adc    BYTE PTR [ebx+ebp*1+0x2386dc34],dl
  405435:	adc    al,0x3a
  405437:	popa   
  405438:	out    dx,al
  405439:	pushf  
  40543a:	mov    bh,0x22
  40543c:	(bad)  
  40543d:	or     dh,BYTE PTR [esp+ecx*8-0x73fd2b5a]
  405444:	jns    0x405411
  405446:	cwde   
  405447:	dec    ecx
  405448:	cmp    al,0x95
  40544a:	repnz (bad) 
  40544c:	sti    
  40544d:	lock into 
  40544f:	xchg   DWORD PTR [ebp+0x4d6b8781],esi
  405455:	popa   
  405456:	and    DWORD PTR [eax],0xc342a6ae
  40545c:	shr    DWORD PTR [ecx],0x38
  40545f:	js     0x4054c1
  405461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405462:	xchg   DWORD PTR [eax+0x19],esi
  405465:	mov    bh,0xc7
  405467:	push   ds
  405468:	test   eax,0x27d4b4c1
  40546d:	adc    al,0x62
  40546f:	rcr    DWORD PTR [esi+0x6c],0x26
  405473:	out    0x10,eax
  405475:	push   cs
  405476:	dec    edi
  405477:	fistp  QWORD PTR [edi+0x5a]
  40547a:	or     DWORD PTR [edx-0x5ddc247f],edi
  405480:	daa    
  405481:	pop    edx
  405482:	shl    dl,1
  405484:	mov    DWORD PTR [edi-0x27],ebx
  405487:	adc    al,BYTE PTR [edi]
  405489:	adc    BYTE PTR [edx+0x3db87ba0],0x9d
  405490:	inc    ecx
  405491:	jns    0x4054c7
  405493:	ins    BYTE PTR es:[edi],dx
  405494:	xchg   DWORD PTR [ebx-0x3],edx
  405497:	mov    ss,WORD PTR ds:0xfcbd8e02
  40549d:	bound  edi,QWORD PTR [esi+0x3495f7a7]
  4054a3:	in     al,0x11
  4054a5:	pop    edx
  4054a6:	jno    0x40551b
  4054a8:	pop    esi
  4054a9:	imul   ebp,DWORD PTR [esi+ebx*4],0x7ed8d06d
  4054b0:	out    0x5f,eax
  4054b2:	mov    bl,0x6a
  4054b4:	inc    esp
  4054b5:	push   ss
  4054b6:	dec    esp
  4054b7:	stos   BYTE PTR es:[edi],al
  4054b8:	adc    DWORD PTR [edx],esp
  4054ba:	fcmove st,st(2)
  4054bc:	out    dx,al
  4054bd:	sub    eax,0x6835659
  4054c2:	mov    al,0x5c
  4054c4:	jbe    0x40551d
  4054c6:	nop
  4054c7:	mov    edi,0x73be9418
  4054cc:	test   DWORD PTR [ecx+0x29],ecx
  4054cf:	mov    BYTE PTR [edx-0x60],dh
  4054d2:	sbb    edx,DWORD PTR [edi]
  4054d4:	cmp    ebp,ebp
  4054d6:	adc    al,0xc2
  4054d8:	pop    esi
  4054d9:	je     0x405558
  4054db:	ja     0x405512
  4054dd:	add    BYTE PTR [edx-0x3d],ch
  4054e0:	jns    0x4054f4
  4054e2:	pop    ss
  4054e3:	jns    0x405499
  4054e5:	or     esi,eax
  4054e7:	ds in  eax,0x5
  4054ea:	ss cwde 
  4054ec:	jecxz  0x405492
  4054ee:	pushf  
  4054ef:	leave  
  4054f0:	jp     0x405499
  4054f2:	mov    bh,0xf7
  4054f4:	jge    0x40554a
  4054f6:	mov    eax,ds:0x4c360cd7
  4054fb:	mov    al,ds:0x6ab6a4d4
  405500:	test   BYTE PTR [eax+0x35],cl
  405503:	pop    ss
  405504:	(bad)  
  405505:	xor    BYTE PTR [edx],bh
  405507:	sbb    al,0x43
  405509:	adc    al,0xfd
  40550b:	aaa    
  40550c:	sar    DWORD PTR [ecx-0x2a7c1dd0],cl
  405512:	lock repz call 0x7a8d:0x65083ff6
  40551b:	stos   BYTE PTR es:[edi],al
  40551c:	cmp    al,0x2a
  40551e:	dec    ebp
  40551f:	and    eax,0xc5949a2b
  405524:	add    edx,ebx
  405526:	push   esi
  405527:	sahf   
  405528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405529:	ja     0x4054f9
  40552b:	sub    BYTE PTR [ecx+eiz*8-0x9aeb833],0x2b
  405533:	jbe    0x405512
  405535:	add    ecx,DWORD PTR [edx-0x4c]
  405538:	xlat   BYTE PTR ds:[ebx]
  405539:	stos   BYTE PTR es:[edi],al
  40553a:	or     ebp,edx
  40553c:	mov    al,0x58
  40553e:	or     edx,eax
  405540:	dec    ebp
  405541:	popa   
  405542:	mov    ebp,0x5ec4c854
  405547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405548:	cmp    bh,BYTE PTR [eax+0x49]
  40554b:	xchg   eax,esi
  40554d:	pop    edi
  40554e:	inc    esi
  40554f:	call   0x98be:0x2b80b414
  405556:	out    0xa7,al
  405558:	inc    ebx
  405559:	xchg   ecx,eax
  40555a:	xchg   edx,eax
  40555b:	mov    al,0xc1
  40555d:	call   0x2a780ee7
  405562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405564:	or     BYTE PTR [edx-0x7],0xf9
  405568:	inc    ebp
  405569:	out    dx,al
  40556a:	rol    BYTE PTR [edi+0x66],1
  40556d:	retf   0x46eb
  405570:	inc    eax
  405571:	mov    ecx,0x2b6cf9e8
  405576:	in     eax,dx
  405577:	jle    0x40553a
  405579:	je     0x405511
  40557b:	out    0xad,eax
  40557d:	pop    ebx
  40557e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40557f:	add    edx,DWORD PTR [esi+0x164caa47]
  405585:	fbld   TBYTE PTR [ecx]
  405587:	jmp    0x97c4b784
  40558c:	mov    BYTE PTR [eax+edi*8-0x19d49b15],cl
  405593:	xchg   edx,eax
  405594:	pop    ebx
  405595:	xor    al,0x4b
  405597:	out    0x17,al
  405599:	aaa    
  40559a:	(bad)  [esi-0x3c1bc2fc]
  4055a0:	scas   eax,DWORD PTR es:[edi]
  4055a1:	pop    edx
  4055a2:	and    ebx,DWORD PTR [ebx-0x4c]
  4055a5:	fidivr WORD PTR [ebp-0x2a]
  4055a8:	test   al,0xd8
  4055aa:	out    0x9,al
  4055ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055ae:	ror    edx,1
  4055b0:	pop    es
  4055b1:	dec    edx
  4055b2:	mov    ebp,DWORD PTR [ebx]
  4055b4:	xor    eax,0x1868ef22
  4055b9:	push   0x17
  4055bb:	fisubr WORD PTR [esi-0x13]
  4055be:	cdq    
  4055bf:	pop    es
  4055c0:	add    ch,BYTE PTR [eax]
  4055c2:	dec    esp
  4055c3:	pop    es
  4055c4:	test   BYTE PTR [edx+0x1ffbec1f],0x17
  4055cb:	adc    ah,BYTE PTR [edi]
  4055cd:	sahf   
  4055ce:	jl     0x405644
  4055d0:	fldcw  WORD PTR [ecx+0x1d]
  4055d3:	or     eax,0xc0976eea
  4055d8:	pusha  
  4055d9:	jge    0x4055d5
  4055db:	in     eax,0xa
  4055dd:	jne    0x4055fb
  4055df:	scas   eax,DWORD PTR es:[edi]
  4055e0:	test   al,0x9b
  4055e2:	in     al,0x16
  4055e4:	jae    0x405651
  4055e6:	mov    bl,BYTE PTR [ebx-0x4a]
  4055e9:	dec    esi
  4055ea:	mov    ebp,0xbdcad36
  4055ef:	adc    al,BYTE PTR [edi-0x24]
  4055f2:	sub    eax,0x6c574b71
  4055f7:	shl    DWORD PTR [esi],1
  4055f9:	cli    
  4055fa:	mov    esp,edi
  4055fc:	xchg   ebx,eax
  4055fd:	in     eax,0x1b
  4055ff:	aas    
  405600:	sbb    DWORD PTR [eax+0x3333d83d],esp
  405606:	push   ds
  405607:	leave  
  405608:	sub    BYTE PTR [ebx],bh
  40560a:	inc    ebp
  40560b:	retf   0xbdb7
  40560e:	mov    eax,0xd2423289
  405613:	dec    edi
  405614:	pushf  
  405615:	sbb    ebp,edi
  405617:	loop   0x40564f
  405619:	(bad)  
  40561a:	iret   
  40561b:	jb     0xd6af8591
  405621:	and    DWORD PTR [ecx+ecx*2-0x658c6c8],esi
  405628:	mov    eax,0x3a8b62c0
  40562d:	fldcw  WORD PTR [ebp+0x30d66806]
  405633:	daa    
  405634:	sub    edx,DWORD PTR ds:0x1fb89d42
  40563a:	adc    eax,0x8056c425
  40563f:	jmp    0x7673ff4e
  405644:	fnstenv [eax-0x57ad5e9c]
  40564a:	jge    0x4055f9
  40564c:	inc    esi
  40564d:	or     ebp,DWORD PTR [esi-0x7076e1b1]
  405653:	and    edi,DWORD PTR [edx+0x66]
  405656:	pusha  
  405657:	push   edx
  405658:	loopne 0x4056d6
  40565a:	sar    BYTE PTR [eax+0x36],0xb2
  40565e:	outs   dx,BYTE PTR ds:[esi]
  40565f:	pop    edx
  405660:	lods   al,BYTE PTR ds:[esi]
  405661:	scas   eax,DWORD PTR es:[edi]
  405662:	setle  BYTE PTR [edx-0x20f21343]
  405669:	cmc    
  40566a:	or     al,0xa1
  40566c:	data16 daa 
  40566e:	(bad)  
  40566f:	sar    DWORD PTR [ecx],1
  405671:	jg     0x405609
  405673:	call   0x3e6ba494
  405678:	dec    esp
  405679:	push   ebp
  40567a:	pop    ds
  40567b:	jmp    0x950c7df0
  405680:	in     al,0x16
  405682:	cs inc edi
  405684:	mov    bh,0x40
  405686:	push   ebx
  405687:	xlat   BYTE PTR ds:[ebx]
  405688:	jmp    0x4056c5
  40568a:	xchg   DWORD PTR [ebp+0x41],ebp
  40568d:	mov    ch,0x32
  40568f:	call   0xa9d:0xbc6d02a0
  405696:	adc    eax,0x1b2b199e
  40569b:	mov    ds:0x48b13b2f,eax
  4056a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056a1:	out    dx,al
  4056a2:	xchg   esp,eax
  4056a3:	sahf   
  4056a4:	xchg   ebp,eax
  4056a5:	int3   
  4056a6:	xchg   ebp,eax
  4056a7:	movq   mm5,QWORD PTR [eax-0x5a]
  4056ab:	dec    ebp
  4056ac:	jns    0x4056e2
  4056ae:	mov    eax,ds:0xf9365bb2
  4056b3:	and    eax,0x947a2a3b
  4056b8:	adc    DWORD PTR [ebx+esi*4+0x7edd9147],ebp
  4056bf:	clc    
  4056c0:	loopne 0x4056ec
  4056c2:	js     0x4056c9
  4056c4:	push   ss
  4056c5:	stc    
  4056c6:	inc    edi
  4056c7:	xor    BYTE PTR [eax+0x79],al
  4056ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056cb:	jmp    0x9092:0xe3f4f043
  4056d2:	xchg   ecx,eax
  4056d3:	rcl    ebx,0x82
  4056d6:	mov    ch,0x87
  4056d8:	pop    ebx
  4056d9:	sub    BYTE PTR [edi],al
  4056db:	mov    eax,ds:0x3af0d441
  4056e0:	ret    
  4056e1:	adc    DWORD PTR [esi],edi
  4056e3:	adc    BYTE PTR [edi+0x2ff6b023],ah
  4056e9:	sahf   
  4056ea:	xchg   ebp,eax
  4056eb:	pop    ebx
  4056ec:	mov    bl,0xd5
  4056ee:	dec    edx
  4056ef:	mov    ebx,0xcb69bc9c
  4056f4:	leave  
  4056f5:	inc    ecx
  4056f6:	push   eax
  4056f7:	retf   0xac25
  4056fa:	xchg   ebp,eax
  4056fb:	adc    al,0x0
  4056fd:	xor    BYTE PTR [ebx],dl
  4056ff:	inc    ebp
  405700:	mul    DWORD PTR [edx]
  405702:	popa   
  405703:	xlat   BYTE PTR ds:[ebx]
  405704:	or     cl,cl
  405706:	sub    bh,BYTE PTR [ebx-0x66]
  405709:	aaa    
  40570a:	pushf  
  40570b:	pop    ss
  40570c:	jmp    0x9f69:0xec0e0f4d
  405713:	inc    esp
  405714:	sub    DWORD PTR [edx],edi
  405716:	bound  esp,QWORD PTR [ebp-0x39d76534]
  40571c:	mov    esi,0xe3b8e28e
  405721:	jno    0x40577e
  405723:	in     al,0xc4
  405725:	jl     0x40573f
  405727:	mov    cs:0x364ec7eb,al
  40572d:	jno    0x4056ca
  40572f:	or     al,0xef
  405731:	mov    ebx,0x6561025
  405736:	xchg   esp,eax
  405737:	sub    ebx,eax
  405739:	scas   eax,DWORD PTR es:[edi]
  40573a:	inc    ebp
  40573b:	ins    DWORD PTR es:[edi],dx
  40573c:	arpl   WORD PTR [eax-0x1da17284],bp
  405742:	jg     0x4056d6
  405744:	ret    0xe314
  405747:	(bad)  
  405748:	dec    ecx
  405749:	xchg   ecx,eax
  40574a:	int    0x5d
  40574c:	mov    ebx,0x74fd7e2a
  405751:	fdiv   QWORD PTR [ecx]
  405753:	push   ebp
  405754:	inc    ecx
  405755:	sub    ebp,0xffffffb2
  405758:	stos   DWORD PTR es:[edi],eax
  405759:	sbb    al,bl
  40575b:	push   0x33
  40575d:	mov    BYTE PTR [ebx+0x7a9f071],ch
  405763:	(bad)  
  405764:	jno    0x405772
  405766:	mul    BYTE PTR [edi-0x3c]
  405769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40576a:	and    DWORD PTR [edi+0x22],esi
  40576d:	mov    esi,0x7a593ec3
  405772:	or     DWORD PTR [eax],ebp
  405774:	bnd jle 0x4057ea
  405777:	les    edi,FWORD PTR [edi]
  405779:	fidivr WORD PTR [esi-0x9]
  40577c:	jg     0x40579d
  40577e:	repnz pop ds
  405780:	aam    0x8
  405782:	into   
  405783:	push   eax
  405784:	pop    ds
  405785:	out    dx,eax
  405786:	adc    esp,0xffffffa8
  405789:	daa    
  40578a:	f2xm1  
  40578c:	mov    esp,?
  40578e:	jno    0x40575a
  405790:	xor    al,0x18
  405792:	cwde   
  405793:	xor    esp,ebx
  405795:	stos   BYTE PTR es:[edi],al
  405796:	sbb    DWORD PTR [ebx],eax
  405798:	fwait
  405799:	or     ecx,eax
  40579b:	ds or  al,0x98
  40579e:	repnz dec edx
  4057a0:	in     al,0xcb
  4057a2:	pop    ss
  4057a3:	dec    ebx
  4057a4:	add    al,0x73
  4057a6:	push   edx
  4057a7:	das    
  4057a8:	adc    DWORD PTR [ebx],ecx
  4057aa:	dec    ecx
  4057ab:	push   0x1917877b
  4057b0:	or     ebp,ebx
  4057b2:	js     0x405740
  4057b4:	outs   dx,BYTE PTR ds:[esi]
  4057b5:	call   0xa25d2c8b
  4057ba:	out    0xcf,eax
  4057bc:	push   esp
  4057bd:	pop    ebp
  4057be:	jo     0x405743
  4057c0:	and    BYTE PTR [esi+0x19],dl
  4057c3:	outs   dx,BYTE PTR ds:[esi]
  4057c4:	mov    eax,0x88dcc67
  4057c9:	mov    dh,0x7f
  4057cb:	lods   eax,DWORD PTR ds:[esi]
  4057cc:	dec    ebx
  4057cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ce:	int    0xb1
  4057d0:	jo     0x4057e6
  4057d2:	retf   0xe289
  4057d5:	adc    BYTE PTR [ecx],cl
  4057d7:	shl    esi,cl
  4057d9:	and    edx,DWORD PTR [ecx]
  4057db:	out    0xab,eax
  4057dd:	rol    DWORD PTR [edx+ecx*4-0x24c58453],cl
  4057e4:	iret   
  4057e5:	test   DWORD PTR [eax+0x2],eax
  4057e8:	jmp    0xbb790f31
  4057ed:	mov    edx,0xbeadb109
  4057f2:	pop    edx
  4057f3:	pushf  
  4057f4:	mov    ecx,0x6964a55a
  4057f9:	data16 add al,0x3e
  4057fc:	mov    eax,0x3f47e9c0
  405801:	repnz push esp
  405804:	retf   
  405805:	retf   0xac8f
  405808:	mov    bl,0x3f
  40580a:	mov    ah,0x3f
  40580c:	cmp    cl,ch
  40580e:	lods   eax,DWORD PTR ds:[esi]
  40580f:	out    dx,al
  405810:	cmp    DWORD PTR [edx],esi
  405812:	dec    esi
  405813:	mov    cl,0x68
  405815:	mov    BYTE PTR [ebx-0x7486b40],bl
  40581b:	ins    BYTE PTR es:[edi],dx
  40581c:	in     eax,0x22
  40581e:	in     al,dx
  40581f:	push   ebp
  405820:	mov    ds,WORD PTR [ebx+0x19d5d47d]
  405826:	mov    bh,BYTE PTR [edx-0xbd5b2f2]
  40582c:	or     BYTE PTR [edx],ah
  40582e:	push   ss
  40582f:	lods   al,BYTE PTR ds:[esi]
  405830:	xchg   esi,eax
  405831:	mov    ch,0x58
  405833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405834:	add    dh,al
  405836:	ss pop ss
  405838:	cmp    BYTE PTR [edx+0x12cd4f93],0x97
  40583f:	mov    bl,0xab
  405841:	jmp    0x6a23:0x6df43bd5
  405848:	push   eax
  405849:	mov    cl,0xfe
  40584b:	jecxz  0x4058ac
  40584d:	inc    ebx
  40584e:	aaa    
  40584f:	inc    esi
  405850:	dec    esp
  405851:	popa   
  405852:	or     cl,dh
  405854:	aas    
  405855:	pop    es
  405856:	mov    cl,0x92
  405858:	sub    BYTE PTR [edx-0x6a],ah
  40585b:	ins    DWORD PTR es:[edi],dx
  40585c:	or     BYTE PTR [ebp-0x1499b9f2],ch
  405862:	jg     0x4058a8
  405864:	lea    esp,[esi-0x1a]
  405867:	and    esi,edx
  405869:	mov    al,ds:0xc7fc234c
  40586e:	call   0x28a9c019
  405873:	ins    DWORD PTR es:[edi],dx
  405874:	or     DWORD PTR [esp+edx*4],ecx
  405877:	jp     0x4058ed
  405879:	mov    ebp,0xdd2abfcb
  40587e:	div    DWORD PTR [edx-0x3186fd32]
  405884:	mov    al,bh
  405886:	pop    es
  405887:	das    
  405888:	aaa    
  405889:	dec    esi
  40588a:	cmp    al,BYTE PTR [esi-0x7]
  40588d:	(bad)  
  40588e:	scas   al,BYTE PTR es:[edi]
  40588f:	ins    BYTE PTR es:[edi],dx
  405890:	push   esi
  405891:	lahf   
  405892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405893:	mov    ds:0xab4ab345,al
  405898:	mov    bl,0xc3
  40589a:	push   ds
  40589b:	pop    edi
  40589c:	cmp    DWORD PTR [esi-0x39],edx
  40589f:	mov    ecx,0x361522d9
  4058a4:	dec    esi
  4058a5:	lea    edx,[eax-0x451b52be]
  4058ab:	aaa    
  4058ac:	sbb    eax,0xd5f9243e
  4058b1:	js     0x4058e8
  4058b3:	push   ecx
  4058b4:	xor    DWORD PTR [ebx+0x337a7396],ecx
  4058ba:	ret    0xb514
  4058bd:	adc    edi,DWORD PTR [edi-0x141197c9]
  4058c3:	jne    0x40590a
  4058c5:	mov    ds:0x2e4a102f,al
  4058ca:	push   0xda2d1f64
  4058cf:	push   ds
  4058d0:	lds    ecx,FWORD PTR [edx+0x4e5fffeb]
  4058d6:	mov    cl,0xe6
  4058d8:	les    esi,FWORD PTR [ecx]
  4058da:	xchg   edx,eax
  4058db:	loopne 0x40586e
  4058dd:	adc    eax,0xf2f53db2
  4058e2:	mov    ebp,0x3e6d5b77
  4058e7:	ret    0x4309
  4058ea:	push   ds
  4058eb:	dec    esp
  4058ec:	fwait
  4058ed:	test   eax,0xbee21e6a
  4058f2:	mov    WORD PTR [esi+0x63c5604a],?
  4058f8:	dec    edx
  4058fa:	lahf   
  4058fb:	mov    BYTE PTR [ebp+0x15],0x13
  4058ff:	aaa    
  405900:	sti    
  405901:	inc    edi
  405902:	inc    edx
  405903:	fstp   QWORD PTR [edi-0x4e]
  405906:	aad    0x2a
  405908:	push   cs
  405909:	xor    ecx,DWORD PTR [edi+0x1339ad40]
  40590f:	pop    ebx
  405910:	into   
  405911:	pushf  
  405912:	xchg   ebp,eax
  405913:	push   esp
  405914:	cwde   
  405915:	sbb    eax,0x104de54a
  40591a:	pop    edi
  40591b:	cmp    DWORD PTR [edx+0x0],esi
  40591e:	mov    dh,dh
  405920:	iret   
  405921:	idiv   BYTE PTR [ecx+0x16ad6301]
  405927:	jmp    0x350b:0x83889090
  40592e:	adc    esp,eax
  405930:	mov    edx,0xe94a1101
  405935:	xlat   BYTE PTR ds:[ebx]
  405936:	xchg   DWORD PTR [edx-0x52],ebx
  405939:	sbb    al,0xc7
  40593b:	shl    BYTE PTR [edx+0xd1af72],0x16
  405942:	imul   esi,ebp,0x7f45c63e
  405948:	mov    ds:0x20cba2b4,eax
  40594d:	call   0x7c719912
  405952:	push   0xa363cebc
  405957:	adc    cl,BYTE PTR [eax-0xb4423f4]
  40595d:	cli    
  40595e:	ins    BYTE PTR es:[edi],dx
  40595f:	pushf  
  405960:	std    
  405961:	dec    ecx
  405962:	xchg   ebp,eax
  405963:	retf   0x48
  405966:	and    ecx,DWORD PTR [esi]
  405968:	mov    ch,0x21
  40596a:	stos   BYTE PTR es:[edi],al
  40596b:	retf   
  40596c:	cli    
  40596d:	pmuludq mm6,QWORD PTR [esi+0x25]
  405971:	xchg   BYTE PTR [esi+0x46fbc35d],cl
  405977:	and    edx,esp
  405979:	addr16 jae 0x405961
  40597c:	adc    eax,0x468d09e8
  405981:	ficom  DWORD PTR [ebp+edx*8-0x80]
  405985:	cli    
  405986:	sahf   
  405987:	lock sbb BYTE PTR [edi+0x8],0x92
  40598c:	pusha  
  40598d:	push   cs
  40598e:	inc    ebx
  40598f:	cmp    edx,DWORD PTR [ebx+0x1f]
  405992:	(bad)  
  405993:	cwde   
  405994:	in     eax,dx
  405995:	xchg   ecx,eax
  405996:	sub    eax,0x5c527bd6
  40599b:	popa   
  40599c:	je     0x40597d
  40599e:	dec    esp
  40599f:	dec    edi
  4059a0:	add    ch,bl
  4059a2:	mov    gs,esp
  4059a4:	jmp    0xbd8cdea9
  4059a9:	mov    esp,0xe57cd486
  4059ae:	xchg   edx,eax
  4059af:	cmp    DWORD PTR [ecx],eax
  4059b1:	(bad)  
  4059b2:	mov    bh,0x99
  4059b4:	repnz (bad) 
  4059b6:	(bad)  [ebx+edx*1]
  4059b9:	dec    esi
  4059ba:	pop    es
  4059bb:	fidivr WORD PTR [eax+edx*1-0x14]
  4059bf:	inc    esi
  4059c0:	push   0xffffff9c
  4059c2:	inc    edx
  4059c3:	test   DWORD PTR [ecx+0x7a],0xae6a0f5
  4059ca:	mov    cl,0x24
  4059cc:	sti    
  4059cd:	cmp    BYTE PTR [esi+0x2405bfc6],0x9e
  4059d4:	cmp    al,0xb8
  4059d7:	mov    bh,BYTE PTR [ebp+0x59df49ee]
  4059dd:	or     eax,0x1f6de841
  4059e2:	pop    esi
  4059e3:	fwait
  4059e4:	ja     0x4059fa
  4059e6:	sbb    DWORD PTR [edi+edi*1],0x6127d8b8
  4059ed:	and    al,ah
  4059ef:	mov    esp,0xe98483d3
  4059f4:	ror    ecx,1
  4059f6:	dec    eax
  4059f7:	push   esi
  4059f8:	stos   BYTE PTR es:[edi],al
  4059f9:	xchg   DWORD PTR [eax+0x79],edx
  4059fc:	test   eax,ecx
  4059fe:	shl    eax,1
  405a00:	mov    esp,0xf41f4c4a
  405a05:	fcom   st(6)
  405a07:	xlat   BYTE PTR ds:[ebx]
  405a08:	(bad)  [ecx]
  405a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a0b:	jno    0x405a28
  405a0d:	fdiv   DWORD PTR [ebp-0x19b72467]
  405a13:	inc    edx
  405a14:	xchg   ebx,eax
  405a15:	pusha  
  405a16:	push   ecx
  405a17:	cli    
  405a18:	retf   
  405a19:	pop    esp
  405a1a:	out    dx,eax
  405a1b:	jg     0x40599d
  405a1d:	call   0xd236c3bf
  405a22:	jne    0x405a27
  405a24:	mov    eax,0xfa17b88f
  405a29:	mov    ch,0xf8
  405a2b:	aas    
  405a2c:	ror    edi,cl
  405a2e:	jne    0x405a3f
  405a30:	cmp    eax,0xf918d71b
  405a35:	scas   al,BYTE PTR es:[edi]
  405a36:	int3   
  405a37:	int    0xda
  405a39:	push   esi
  405a3a:	push   ebp
  405a3b:	nop
  405a3c:	adc    ah,BYTE PTR [esi]
  405a3e:	push   esi
  405a3f:	mov    bh,0xb5
  405a41:	lahf   
  405a42:	xlat   BYTE PTR ds:[ebx]
  405a43:	xchg   edi,eax
  405a44:	inc    edi
  405a45:	jnp    0x405a3a
  405a47:	dec    edi
  405a48:	sar    esi,0xd1
  405a4b:	fld    DWORD PTR ds:0x86a5c344
  405a51:	xchg   ebx,eax
  405a52:	jmp    0xe493:0x290c2fc8
  405a59:	inc    esp
  405a5a:	mov    dh,ah
  405a5c:	mov    DWORD PTR [edi+eax*4-0x4d987da8],ebp
  405a63:	in     eax,dx
  405a64:	and    eax,0xa3a2719c
  405a69:	jl     0x405a60
  405a6b:	xor    ah,bh
  405a6d:	adc    DWORD PTR [ecx-0x699366fd],ecx
  405a73:	std    
  405a74:	add    BYTE PTR [ebp-0x3a],dh
  405a77:	sub    al,BYTE PTR [ecx-0x2cbd1c4a]
  405a7d:	jnp    0x405ae9
  405a7f:	mov    ch,0x20
  405a81:	std    
  405a82:	loope  0x405a67
  405a84:	mov    es,WORD PTR [ebp-0x6]
  405a87:	mov    es,WORD PTR [edi+0x3d]
  405a8a:	inc    edx
  405a8b:	jns    0x405a6b
  405a8d:	fild   WORD PTR [eax+0x55]
  405a90:	ja     0x405a56
  405a92:	je     0x405aa3
  405a94:	lea    ebp,[ebp+0x296cb6d8]
  405a9a:	pop    ecx
  405a9b:	jbe    0x405ae9
  405a9d:	repz pop ss
  405a9f:	leave  
  405aa0:	les    ebp,FWORD PTR [esi+0x7a67a1c3]
  405aa6:	addr16 pop ebx
  405aa8:	mov    dl,0x88
  405aaa:	sbb    DWORD PTR ds:0x7712eacc,edx
  405ab0:	bound  eax,QWORD PTR [ecx-0x107d13e]
  405ab6:	push   0xffffffe3
  405ab8:	mov    bh,0x7c
  405aba:	xor    al,0xcf
  405abc:	icebp  
  405abd:	sbb    ebp,DWORD PTR [esi+0x3a]
  405ac0:	mov    esp,0xa1777883
  405ac5:	es ja  0x405aa0
  405ac8:	(bad)  
  405ac9:	lds    ecx,FWORD PTR [ecx]
  405acb:	cmp    bl,BYTE PTR [esi+0x2b]
  405ace:	mov    dl,0x7b
  405ad0:	adc    BYTE PTR [ebx+edi*4],cl
  405ad3:	stos   BYTE PTR es:[edi],al
  405ad4:	cwde   
  405ad5:	xor    BYTE PTR fs:[ebx-0x48d42da6],bl
  405adc:	aaa    
  405add:	mov    ?,WORD PTR [ebp+eax*2-0x4752d7ec]
  405ae4:	je     0x405b43
  405ae6:	push   ecx
  405ae7:	mov    esi,0x5d9ab59b
  405aec:	and    eax,0xe2ea40a1
  405af1:	adc    eax,0x2a51307f
  405af6:	xchg   ebx,eax
  405af7:	mov    ss,WORD PTR [edi+eax*8]
  405afa:	shl    bh,1
  405afc:	add    DWORD PTR [eax-0x349a6ad4],ecx
  405b02:	cmp    edi,DWORD PTR ds:0xf00563eb
  405b08:	mov    eax,0x528cb340
  405b0d:	xor    al,0xe0
  405b0f:	lahf   
  405b10:	push   esi
  405b11:	add    DWORD PTR [eax-0x22b2d896],esp
  405b17:	push   esi
  405b18:	dec    esp
  405b19:	ficomp WORD PTR [edi+0x3c]
  405b1c:	lods   eax,DWORD PTR ds:[esi]
  405b1d:	dec    ebx
  405b1e:	mov    ch,BYTE PTR [esi]
  405b20:	sbb    ecx,DWORD PTR [ecx]
  405b22:	bound  esp,QWORD PTR [edi+0x67]
  405b25:	or     DWORD PTR [eax+0x5cf039e8],edi
  405b2b:	and    al,ah
  405b2d:	mov    ch,0x0
  405b2f:	mov    ch,0xe3
  405b31:	gs arpl bx,dx
  405b34:	dec    edi
  405b35:	jmp    0x405bae
  405b37:	scas   eax,DWORD PTR es:[edi]
  405b38:	adc    ebp,DWORD PTR [ebx-0x5765a2fd]
  405b3e:	loop   0x405bb9
  405b40:	ret    0xb681
  405b43:	cwde   
  405b44:	stos   DWORD PTR es:[edi],eax
  405b45:	sub    edi,0x25babfc2
  405b4b:	adc    BYTE PTR [esp+ebp*1],dh
  405b4e:	cs repz pop esi
  405b51:	call   0x171df78f
  405b56:	and    bl,ch
  405b58:	push   0x11cba0d1
  405b5d:	sbb    edi,DWORD PTR [ebx+ebx*4+0x40]
  405b61:	pop    es
  405b62:	ss sbb eax,0x859076b8
  405b68:	int3   
  405b69:	jmp    0x405bb2
  405b6b:	out    dx,al
  405b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b6d:	rcr    DWORD PTR [edx],cl
  405b6f:	retf   
  405b70:	fs inc edi
  405b72:	out    0xbd,al
  405b74:	cmp    eax,0xc96dc362
  405b79:	pusha  
  405b7a:	repz lahf 
  405b7c:	mov    eax,ds:0x535a3d7f
  405b81:	sbb    eax,0x88a25001
  405b86:	lea    esp,[eax+0x4]
  405b89:	jne    0x405be5
  405b8b:	xchg   ebp,eax
  405b8c:	test   al,0xc2
  405b8e:	sti    
  405b8f:	(bad)  
  405b90:	or     edi,edi
  405b92:	pop    eax
  405b93:	into   
  405b94:	pop    ecx
  405b95:	pop    ds
  405b96:	mov    bh,0x5a
  405b98:	mov    ch,0xa0
  405b9a:	mov    bl,0x66
  405b9c:	mov    eax,0x591a7a7d
  405ba1:	scas   eax,DWORD PTR es:[edi]
  405ba2:	data16 ja 0x405c04
  405ba5:	pop    esi
  405ba6:	push   es
  405ba7:	dec    esp
  405ba8:	jg     0x405bd0
  405baa:	mov    edi,0xabd096e1
  405baf:	adc    BYTE PTR [eax],0x2d
  405bb2:	retf   
  405bb3:	cmp    DWORD PTR [eax],esp
  405bb5:	fld    DWORD PTR [ecx+0x4c]
  405bb8:	lds    edi,FWORD PTR [eax-0x49]
  405bbb:	adc    BYTE PTR [esi+0xd698b49],dh
  405bc1:	dec    ebx
  405bc2:	dec    ecx
  405bc3:	or     eax,0x7e222714
  405bc8:	sbb    ebp,esp
  405bca:	dec    eax
  405bcb:	out    0x40,eax
  405bcd:	mov    edi,0x544a371f
  405bd2:	arpl   bp,di
  405bd4:	ja     0x405c2c
  405bd6:	rcl    esp,1
  405bd8:	or     al,0x88
  405bda:	or     al,BYTE PTR [ebp-0x7f2fb325]
  405be0:	jne    0x405c02
  405be2:	les    edx,FWORD PTR ds:0x19f3ccf7
  405be8:	mov    BYTE PTR [ebx],al
  405bea:	hlt    
  405beb:	mov    ebp,DWORD PTR [ecx]
  405bed:	(bad)  
  405bee:	into   
  405bef:	push   ds
  405bf0:	je     0x405bae
  405bf2:	adc    ah,BYTE PTR [ecx-0x53089110]
  405bf8:	fdiv   QWORD PTR [edi]
  405bfa:	xor    al,0x3
  405bfc:	aad    0x7f
  405bfe:	inc    ebp
  405bff:	inc    ebp
  405c00:	pop    edx
  405c01:	mov    ?,WORD PTR [eax+0x6fecdb0a]
  405c07:	cmp    eax,0xaacc711
  405c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c0d:	repz mov eax,ds:0xf7b5489a
  405c13:	ins    BYTE PTR es:[edi],dx
  405c14:	adc    esp,esp
  405c16:	out    dx,al
  405c17:	adc    al,0xc
  405c19:	pop    ecx
  405c1a:	dec    edx
  405c1c:	clc    
  405c1d:	call   0xae1867c6
  405c22:	daa    
  405c23:	xchg   esp,eax
  405c24:	dec    edi
  405c25:	sub    eax,ebp
  405c27:	inc    ebx
  405c28:	dec    eax
  405c29:	pop    esp
  405c2a:	cmp    ebp,esp
  405c2c:	push   0x59
  405c2e:	adc    ch,BYTE PTR [ecx]
  405c30:	ficom  WORD PTR [ebx-0x458bd10e]
  405c36:	mov    edi,0xb129355f
  405c3b:	popf   
  405c3c:	mov    esp,0x5cf291de
  405c41:	adc    al,BYTE PTR [eax-0x40]
  405c44:	inc    ebx
  405c45:	mov    ebp,0x39dea1f3
  405c4a:	jno    0x405bd7
  405c4c:	cmc    
  405c4d:	call   0x35e8:0xa462cd46
  405c54:	cmp    al,0x61
  405c56:	cmp    al,0x97
  405c58:	outs   dx,DWORD PTR es:[esi]
  405c5a:	call   0xb003b13f
  405c5f:	ja     0x405c33
  405c61:	test   BYTE PTR [ebx-0x4b],al
  405c64:	and    ebp,DWORD PTR [ecx+edx*4+0x4b]
  405c68:	fs xor eax,esp
  405c6b:	in     al,0x30
  405c6d:	inc    ebx
  405c6e:	hlt    
  405c6f:	je     0x405c7f
  405c71:	(bad)  [eax-0x5a5921ab]
  405c77:	cmp    ah,BYTE PTR [esp+eiz*8]
  405c7a:	in     eax,0x51
  405c7c:	repz add esp,edi
  405c7f:	mov    ds:0x25e32d51,eax
  405c84:	fs aad 0x95
  405c87:	lds    esp,FWORD PTR [edi+0x39b3597e]
  405c8d:	mov    eax,0x2d643845
  405c92:	jae    0x405cd1
  405c94:	add    eax,0xa680fbba
  405c99:	push   edx
  405c9a:	xor    BYTE PTR [edx+0x6eb81d3e],ch
  405ca0:	pop    esp
  405ca1:	ins    DWORD PTR es:[edi],dx
  405ca2:	sahf   
  405ca3:	mov    edx,0x5b407acd
  405ca8:	enter  0x90f4,0x22
  405cac:	xchg   eax,esp
  405cae:	and    eax,0xae4e0c70
  405cb3:	out    0x3b,al
  405cb5:	iret   
  405cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cb7:	dec    ecx
  405cb8:	(bad)  
  405cba:	pusha  
  405cbb:	and    BYTE PTR [edx+0x6],bh
  405cbe:	sbb    DWORD PTR [eax],edx
  405cc0:	scas   eax,DWORD PTR es:[edi]
  405cc1:	inc    BYTE PTR [ecx]
  405cc3:	push   0x42f5f524
  405cc8:	push   ecx
  405cc9:	test   al,0xc3
  405ccb:	outs   dx,DWORD PTR ds:[esi]
  405ccc:	push   esi
  405ccd:	pop    ebx
  405cce:	cmp    BYTE PTR [eax+0x1d],0xa9
  405cd2:	jns    0x405d1f
  405cd4:	cmp    al,0xaa
  405cd6:	jmp    0x67e3:0x3022927c
  405cdd:	int    0xcd
  405cdf:	fnstcw WORD PTR [ebx+edi*8]
  405ce2:	mov    ebx,0x5be9c477
  405ce7:	popf   
  405ce8:	pop    ebx
  405ce9:	xchg   ebp,eax
  405cea:	ja     0x405ca4
  405cec:	push   edi
  405ced:	cdq    
  405cee:	aas    
  405cef:	addr16 xchg edx,eax
  405cf1:	sbb    al,0xc9
  405cf3:	ds inc ebp
  405cf5:	in     eax,0xfa
  405cf7:	adc    edi,DWORD PTR [edi+0x70]
  405cfa:	dec    ebp
  405cfb:	dec    esp
  405cfc:	ins    BYTE PTR es:[edi],dx
  405cfd:	in     al,0xec
  405cff:	sar    bh,1
  405d01:	add    al,0x55
  405d03:	lods   eax,DWORD PTR ds:[esi]
  405d04:	clc    
  405d05:	aaa    
  405d06:	sbb    DWORD PTR [ebx],esi
  405d08:	mov    esi,DWORD PTR [edi+eiz*8-0x30]
  405d0c:	xchg   bh,bh
  405d0e:	ja     0x405c96
  405d10:	stos   BYTE PTR es:[edi],al
  405d11:	sub    BYTE PTR [edi+0x2],bl
  405d14:	pop    esi
  405d15:	push   edi
  405d16:	and    al,0x78
  405d18:	mov    ecx,0x5ac7738d
  405d1d:	mov    dl,0xb0
  405d1f:	push   ss
  405d20:	adc    dh,BYTE PTR [esi-0x19]
  405d23:	mov    BYTE PTR [edx],0xc
  405d26:	sub    ebx,DWORD PTR [edx-0x58c7e12f]
  405d2c:	add    ebp,esi
  405d2e:	jg     0x405d1f
  405d30:	and    al,0xda
  405d32:	in     eax,dx
  405d33:	adc    al,0x49
  405d35:	push   ebp
  405d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d37:	mov    al,ds:0xf7e81788
  405d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d3d:	retf   
  405d3e:	fmul   DWORD PTR [esi+0x2e5f03ec]
  405d44:	jle    0x405cf4
  405d46:	repnz test eax,0x88cfdf93
  405d4c:	test   DWORD PTR [ecx-0x31],edi
  405d4f:	ficomp WORD PTR [eax-0x35]
  405d52:	movlps QWORD PTR [eax-0x13],xmm3
  405d56:	jg     0x405d52
  405d58:	push   es
  405d59:	dec    edi
  405d5a:	fmul   QWORD PTR [esp+esi*4]
  405d5d:	das    
  405d5e:	ror    DWORD PTR [edx+ebx*2],0x40
  405d62:	cmp    edx,ecx
  405d64:	loop   0x405d16
  405d66:	jl     0x405cfd
  405d68:	outs   dx,BYTE PTR ds:[esi]
  405d69:	iret   
  405d6a:	cld    
  405d6b:	stos   DWORD PTR es:[edi],eax
  405d6c:	fisub  WORD PTR [eax-0x5135c23d]
  405d72:	push   ecx
  405d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d74:	xchg   ecx,eax
  405d75:	popf   
  405d76:	push   0x42
  405d78:	mov    ah,0x39
  405d7a:	aad    0x82
  405d7c:	out    dx,eax
  405d7d:	stos   BYTE PTR es:[edi],al
  405d7e:	push   ss
  405d7f:	lock jp 0x405d95
  405d82:	cmp    eax,0xd08a3542
  405d87:	les    edi,FWORD PTR [edi+edi*8]
  405d8a:	cmp    BYTE PTR [edi+0x284e7acd],bl
  405d90:	mov    eax,0x9feaa446
  405d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d96:	jo     0x405ddd
  405d98:	jae    0x405db5
  405d9a:	cmp    eax,0xaa59691e
  405d9f:	xor    DWORD PTR [ebx+0x7d916637],esi
  405da5:	push   ss
  405da6:	dec    ebp
  405da7:	stc    
  405da8:	leave  
  405da9:	mov    ah,0xbd
  405dab:	pop    ebp
  405dac:	jl     0x405d9e
  405dae:	pop    ebx
  405daf:	out    0x14,eax
  405db1:	pop    esp
  405db2:	call   0x8fd2:0xb1cc6954
  405db9:	pusha  
  405dba:	adc    eax,0x3fd21e0d
  405dbf:	xchg   edx,eax
  405dc0:	jns    0x405dcb
  405dc2:	and    DWORD PTR es:[ebx+edx*4+0x61],ecx
  405dc7:	add    al,0x85
  405dc9:	xchg   ebp,eax
  405dca:	xor    cl,BYTE PTR [eax]
  405dcc:	bound  eax,QWORD PTR [esi]
  405dce:	icebp  
  405dcf:	push   es
  405dd0:	xchg   esi,eax
  405dd1:	ja     0x405dba
  405dd3:	inc    ebx
  405dd4:	js     0x405da5
  405dd6:	outs   dx,DWORD PTR ds:[esi]
  405dd7:	dec    edx
  405dd8:	es push ebp
  405dda:	not    BYTE PTR [ebx-0x61]
  405ddd:	cwde   
  405dde:	mov    dl,0xae
  405de0:	(bad)  
  405de1:	cmp    edx,ebp
  405de3:	call   0x595d:0x3a82dde9
  405dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405deb:	sbb    BYTE PTR [edi-0x1b],al
  405dee:	xor    dl,BYTE PTR [eax-0x5c4e59dc]
  405df4:	call   0xa91fb61b
  405df9:	dec    ebp
  405dfa:	inc    ecx
  405dfb:	(bad)  
  405dfc:	mov    bl,0xd1
  405dfe:	(bad)  
  405dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e00:	imul   esp,DWORD PTR [edx-0x3c08a712],0x51701859
  405e0a:	sar    BYTE PTR ds:0x416acce2,0x43
  405e11:	push   fs
  405e13:	(bad)  
  405e15:	sbb    al,0x7c
  405e17:	jne    0x405e7b
  405e19:	inc    ebp
  405e1a:	mov    al,ds:0x191f0c02
  405e1f:	data16 out dx,al
  405e21:	and    eax,0x3432b9b6
  405e26:	sub    BYTE PTR [edx-0x39],al
  405e29:	loopne 0x405e4b
  405e2b:	imul   DWORD PTR [ebx-0x49]
  405e2e:	fistp  WORD PTR [esi+0x358c742a]
  405e34:	(bad)  
  405e35:	sub    esp,ebp
  405e37:	sub    BYTE PTR [ebx],ah
  405e39:	xor    al,0x16
  405e3b:	or     al,0x47
  405e3d:	test   eax,0x7d86af35
  405e42:	ins    WORD PTR es:[edi],dx
  405e44:	in     al,0xc2
  405e46:	in     al,dx
  405e47:	(bad)  [ecx+eiz*8-0x4f]
  405e4b:	imul   edi,DWORD PTR [eax],0x9bbc1049
  405e51:	outs   dx,DWORD PTR ds:[esi]
  405e52:	jge    0x405e0e
  405e54:	mov    eax,ds:0xf8f7c7fc
  405e59:	test   eax,0x816cc3e6
  405e5e:	mov    esi,0x7ac079ec
  405e63:	push   eax
  405e64:	mov    ebp,0x9a073713
  405e69:	data16 mov dh,BYTE PTR [ebp+0x383e01a6]
  405e70:	sahf   
  405e71:	ins    BYTE PTR es:[edi],dx
  405e72:	mov    eax,ds:0xe88596f1
  405e77:	aaa    
  405e78:	ret    
  405e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e7a:	push   eax
  405e7b:	inc    ebp
  405e7c:	add    eax,0x30db88a
  405e81:	mov    bh,0xa2
  405e83:	push   edx
  405e84:	fstp   QWORD PTR [ecx]
  405e86:	inc    edx
  405e87:	dec    cx
  405e89:	dec    esi
  405e8a:	jnp    0x405f0a
  405e8c:	retf   
  405e8d:	sahf   
  405e8e:	jp     0x405e3c
  405e90:	loope  0x405edf
  405e92:	adc    ah,BYTE PTR [edx+eax*2+0x6d0d38fc]
  405e99:	push   esp
  405e9a:	push   ebp
  405e9b:	dec    ebp
  405e9c:	sahf   
  405e9d:	dec    ebp
  405e9e:	mov    DWORD PTR [edi],0x4cc85765
  405ea4:	mov    eax,0x52ce22ca
  405ea9:	popa   
  405eaa:	and    DWORD PTR [ebx],eax
  405eac:	bnd jo 0x405ea3
  405eaf:	cli    
  405eb0:	mov    ah,0xf
  405eb2:	mov    esi,0x7c08757
  405eb7:	and    BYTE PTR [edx-0x4326ac1b],bl
  405ebd:	jg     0x405e7e
  405ebf:	push   ss
  405ec0:	adc    bl,BYTE PTR ds:0x54738714
  405ec6:	push   ebp
  405ec7:	or     al,dh
  405ec9:	or     eax,DWORD PTR [eax-0x3749ae86]
  405ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ed0:	sbb    BYTE PTR [ebx],bh
  405ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed3:	xor    DWORD PTR [edx+0x25be46ac],0xe371a453
  405edd:	shl    DWORD PTR [edi-0x7b],1
  405ee0:	mov    eax,0x8daba429
  405ee5:	int3   
  405ee6:	mov    ebp,DWORD PTR [ebp+0x3c63a3ea]
  405eec:	cmp    eax,0x7f828e87
  405ef1:	sahf   
  405ef2:	push   ebp
  405ef3:	arpl   ax,di
  405ef5:	imul   ebp,DWORD PTR [edx+0x735506c0],0x79
  405efc:	inc    edx
  405efd:	jmp    FWORD PTR [edi-0x4ec87d50]
  405f03:	jo     0x405f23
  405f05:	shr    DWORD PTR [eax],1
  405f07:	in     eax,0xaa
  405f09:	cwde   
  405f0a:	clc    
  405f0b:	(bad)  
  405f0c:	sahf   
  405f0d:	push   ss
  405f0e:	scas   eax,DWORD PTR es:[edi]
  405f0f:	(bad)  
  405f10:	iret   
  405f11:	or     ebp,DWORD PTR [edi]
  405f13:	sub    BYTE PTR [edi-0x43c2c3b1],ah
  405f19:	fistp  WORD PTR [ecx*1-0x1abf66c]
  405f20:	sahf   
  405f21:	inc    esi
  405f22:	shl    BYTE PTR [edi-0x6885743],1
  405f28:	(bad)  
  405f29:	push   esp
  405f2a:	xor    DWORD PTR [esi],ebx
  405f2c:	call   0xa63bb859
  405f31:	mov    edi,0x8f35c68
  405f36:	icebp  
  405f37:	test   ecx,edi
  405f39:	mov    esp,0xa2f1f5a5
  405f3e:	repz sub BYTE PTR [ebx-0xa6ec76e],bh
  405f45:	pop    ebp
  405f46:	test   DWORD PTR [ebp-0x28],esp
  405f49:	mov    dh,dl
  405f4b:	bound  eax,QWORD PTR [ebx+ebx*8]
  405f4e:	imul   edi,DWORD PTR [ecx],0x5a
  405f51:	jnp    0x405ed3
  405f53:	sbb    edx,ebp
  405f55:	in     eax,0x64
  405f57:	sub    ebp,DWORD PTR [edi+ebp*1+0x76986311]
  405f5e:	push   ss
  405f5f:	sti    
  405f60:	jge    0x405fe0
  405f62:	dec    eax
  405f63:	mov    es,WORD PTR [ebp-0x64fac750]
  405f69:	and    eax,0x8711fa71
  405f6e:	dec    ebx
  405f6f:	and    eax,DWORD PTR [esi+0x4f30705e]
  405f75:	les    ebp,FWORD PTR [eax]
  405f77:	test   eax,0x61729306
  405f7c:	or     BYTE PTR [esi+0x6f],ah
  405f7f:	nop
  405f80:	push   esi
  405f81:	div    BYTE PTR [ebp-0x7aac299]
  405f87:	xor    eax,0x689fe143
  405f8c:	push   ds
  405f8d:	sbb    bl,ch
  405f8f:	xor    bl,BYTE PTR ds:0xfedda644
  405f95:	lahf   
  405f96:	mov    ah,0x7f
  405f98:	js     0x405f38
  405f9a:	into   
  405f9b:	push   ecx
  405f9c:	mov    esi,0x319f0d88
  405fa1:	imul   edx,DWORD PTR [ebp+edi*8+0x5c],0x45
  405fa6:	sub    ch,BYTE PTR ds:0xa121b1cf
  405fac:	mov    esi,0x8872cd42
  405fb1:	(bad)
  405fb4:	push   0x18c77545
  405fb9:	(bad)  
  405fba:	popf   
  405fbb:	out    dx,al
  405fbc:	adc    bl,BYTE PTR [esi-0x32]
  405fbf:	mov    ebx,0x61682558
  405fc4:	mov    DWORD PTR [esi],edi
  405fc6:	lock mov bh,0xf1
  405fc9:	fadd   DWORD PTR [ebp+0x1e2036b]
  405fcf:	mov    ds,ebp
  405fd1:	and    edx,edi
  405fd3:	xchg   ecx,eax
  405fd4:	xchg   esi,eax
  405fd5:	data16 shl BYTE PTR [edx+0x7755d7c0],1
  405fdc:	or     cl,BYTE PTR [ebx+0x4b]
  405fdf:	imul   esp,DWORD PTR [ebx],0x846dc109
  405fe5:	int3   
  405fe6:	jo     0x405fd7
  405fe8:	xor    BYTE PTR [edx],0x22
  405feb:	mov    ah,0x5
  405fed:	inc    edi
  405fee:	mov    ebx,0x75a6b450
  405ff3:	adc    al,0x98
  405ff5:	ins    BYTE PTR es:[edi],dx
  405ff6:	and    eax,0x4277f204
  405ffb:	mov    edx,0x3e3028b9
  406000:	or     edx,DWORD PTR [eax-0x5d]
  406003:	dec    edi
  406004:	es out dx,al
  406006:	inc    esp
  406007:	dec    edi
  406008:	dec    ebp
  406009:	and    esi,edx
  40600b:	fsubr  QWORD PTR [edi+0x75db24dd]
  406011:	or     eax,0x1a9e1543
  406016:	aas    
  406017:	inc    ecx
  406018:	(bad)  [edi]
  40601a:	es mov bh,0x63
  40601d:	dec    esi
  40601e:	sub    al,BYTE PTR [edi-0x246f6872]
  406024:	stos   BYTE PTR es:[edi],al
  406025:	addr16 mov esp,0x8bc67b7a
  40602b:	mov    edi,0xe2f935da
  406030:	ret    0x58af
  406033:	push   ss
  406034:	cmp    esi,DWORD PTR [ecx+0x16fbefb7]
  40603a:	pop    ebx
  40603b:	xchg   DWORD PTR [esi+0xe],edi
  40603e:	cs popa 
  406040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406041:	leave  
  406042:	aaa    
  406043:	in     al,0x80
  406045:	xchg   ebx,eax
  406046:	pop    ds
  406047:	mov    WORD PTR [esi+0x32],cs
  40604a:	data16 sahf 
  40604c:	or     ebx,eax
  40604e:	clc    
  40604f:	ret    
  406050:	push   ebp
  406051:	je     0x4060c2
  406053:	out    0xa6,eax
  406055:	ja     0x4060be
  406057:	and    bl,BYTE PTR [ebx-0x17f75bc5]
  40605d:	and    BYTE PTR [ebp+0x471f0d1],dh
  406063:	shr    esp,cl
  406065:	mov    bh,0xba
  406067:	add    esi,edx
  406069:	cli    
  40606a:	and    edx,ecx
  40606c:	repz cmp al,0x16
  40606f:	adc    al,0x8e
  406071:	test   DWORD PTR [ecx-0x289ea1f0],0xb5106690
  40607b:	dec    esp
  40607c:	(bad)  
  40607d:	jle    0x406000
  40607f:	or     al,0x28
  406081:	sti    
  406082:	or     eax,0xdfb6056d
  406087:	fiadd  DWORD PTR [ebx]
  406089:	mov    dh,0x13
  40608b:	mov    ds:0xd7b08a48,al
  406090:	jae    0x406057
  406092:	jmp    0x839921c9
  406097:	mov    ebx,DWORD PTR [ecx]
  406099:	je     0x406027
  40609b:	into   
  40609c:	out    0x3c,eax
  40609e:	sub    cl,BYTE PTR [edx+0x5f010b73]
  4060a4:	rol    BYTE PTR [ebx*1+0x671bbb4a],0x3a
  4060ac:	jle    0x40608a
  4060ae:	mov    bh,0xae
  4060b0:	push   ds
  4060b1:	les    esi,FWORD PTR [ebp-0x3dce5fd3]
  4060b7:	leave  
  4060b8:	(bad)  
  4060b9:	cmp    BYTE PTR [esi],ah
  4060bb:	retf   0x2deb
  4060be:	(bad)  
  4060c0:	aad    0x6f
  4060c2:	fnstcw WORD PTR [ecx-0x509d12df]
  4060c8:	ja     0x406067
  4060ca:	or     BYTE PTR [edx+0x16541da0],cl
  4060d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060d1:	mov    DWORD PTR [edi-0x23098c6c],edx
  4060d7:	xchg   esi,eax
  4060d9:	retf   0x8920
  4060dc:	and    ah,BYTE PTR [edi-0x4]
  4060df:	enter  0x9f59,0xee
  4060e3:	int    0x48
  4060e5:	into   
  4060e6:	loope  0x406165
  4060e8:	hlt    
  4060e9:	ins    DWORD PTR es:[edi],dx
  4060ea:	and    eax,0x45b9b78
  4060ef:	rol    BYTE PTR [esi-0x1],1
  4060f2:	cwde   
  4060f3:	neg    DWORD PTR [eax+0x2a]
  4060f6:	test   dh,0x8e
  4060f9:	iret   
  4060fa:	cld    
  4060fb:	pop    esp
  4060fc:	or     cl,ah
  4060fe:	stos   BYTE PTR es:[edi],al
  4060ff:	call   0xb267:0xce6ea991
  406106:	jns    0x4060c3
  406108:	in     eax,dx
  406109:	or     esp,DWORD PTR [esi+edi*4+0x1624bcf3]
  406110:	jbe    0x406093
  406112:	mov    edi,0xb664a0d8
  406117:	cmp    bl,cl
  406119:	in     eax,0x78
  40611b:	call   DWORD PTR [edi]
  40611d:	fidiv  DWORD PTR [ebp-0x3]
  406120:	cld    
  406121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406122:	in     eax,0x1f
  406124:	pop    ebp
  406125:	adc    eax,0x201114fc
  40612a:	outs   dx,BYTE PTR ds:[esi]
  40612b:	out    0xf1,eax
  40612d:	test   BYTE PTR [edx+0x10069ba2],0xe3
  406134:	jmp    0xe9c32710
  406139:	push   es
  40613a:	mov    esi,esp
  40613c:	fisubr DWORD PTR [edx-0xc]
  40613f:	pop    ebx
  406140:	sar    al,cl
  406142:	push   edx
  406143:	jo     0x406197
  406145:	xor    eax,0xa79a9114
  40614a:	xor    eax,0x339c17ba
  40614f:	xor    DWORD PTR [esi-0x5f0e397b],ebx
  406155:	push   edi
  406156:	xor    ch,BYTE PTR [ecx-0x13b85c80]
  40615c:	or     eax,0x1e02b561
  406161:	ins    DWORD PTR es:[edi],dx
  406162:	dec    edx
  406163:	aad    0xd4
  406165:	data16 jnp 0x40610e
  406168:	xor    BYTE PTR [esi-0xf],0x47
  40616c:	mov    ah,BYTE PTR [eax-0x4c]
  40616f:	das    
  406170:	sub    bl,BYTE PTR [edx+0x1be50847]
  406176:	sub    ch,BYTE PTR [eax+ebx*8-0x1e]
  40617a:	fwait
  40617b:	cmp    ebx,DWORD PTR [eax-0x3]
  40617e:	in     eax,dx
  40617f:	loop   0x40616f
  406181:	inc    edx
  406182:	sahf   
  406183:	retf   0xa068
  406186:	inc    ecx
  406187:	nop
  406188:	fdiv   DWORD PTR [eax]
  40618a:	imul   ebp,DWORD PTR [ebx+0x3544d7f2],0x8523eb73
  406194:	cmp    eax,0x13027749
  406199:	adc    ecx,esp
  40619b:	(bad)
  40619e:	jne    0x4061fa
  4061a0:	pop    edi
  4061a1:	mov    bh,0xe0
  4061a3:	rcr    DWORD PTR [ebx-0x14],0x3a
  4061a7:	push   ebp
  4061a8:	cmp    eax,0x4ec95d67
  4061ad:	and    cl,BYTE PTR [ebx]
  4061af:	popf   
  4061b0:	ja     0x406198
  4061b2:	dec    eax
  4061b3:	jl     0x4061f5
  4061b5:	cld    
  4061b6:	fadd   st,st(7)
  4061b8:	fmul   DWORD PTR [esi]
  4061ba:	fdivr  DWORD PTR [edx]
  4061bc:	addr16 push esp
  4061be:	test   BYTE PTR [ebx-0x1ed8b6ba],0xc1
  4061c5:	repnz lahf 
  4061c7:	in     al,0x43
  4061c9:	rcl    bl,cl
  4061cb:	imul   ecx,ebx,0x27
  4061ce:	jl     0x406221
  4061d0:	xchg   cx,ax
  4061d2:	mov    al,ds:0xe20b50e0
  4061d7:	test   eax,0xa534b622
  4061dc:	dec    edi
  4061dd:	pop    ebx
  4061de:	or     eax,0xec2b834d
  4061e3:	(bad)  
  4061e4:	add    ah,BYTE PTR [eax]
  4061e6:	cmc    
  4061e7:	shl    DWORD PTR [ebp-0x2a01a503],0x92
  4061ee:	(bad)  
  4061ef:	xchg   ebp,eax
  4061f0:	xor    esp,DWORD PTR [esi]
  4061f2:	pop    edi
  4061f3:	(bad)  
  4061f4:	mov    al,BYTE PTR [edi+esi*4+0x33a1e569]
  4061fb:	cmp    al,0xfb
  4061fd:	in     eax,dx
  4061fe:	sub    bl,0x53
  406201:	ds jb  0x4061d2
  406204:	into   
  406205:	add    ecx,ebx
  406207:	mov    bh,BYTE PTR [ebx-0x5e657be9]
  40620d:	pushf  
  40620e:	jno    0x4061e0
  406210:	and    edi,DWORD PTR [edi+0x4f]
  406213:	add    DWORD PTR [eax],edi
  406215:	cld    
  406216:	pop    ecx
  406217:	icebp  
  406218:	mov    bl,0x67
  40621a:	cmp    BYTE PTR [edx+0x58b4a3b5],ch
  406220:	stos   DWORD PTR es:[edi],eax
  406221:	dec    eax
  406222:	sub    al,BYTE PTR [ecx+eiz*8-0x36]
  406226:	pop    esp
  406227:	add    al,0x5e
  406229:	int3   
  40622a:	scas   eax,DWORD PTR es:[edi]
  40622b:	rcl    DWORD PTR [eax-0x18],0x62
  40622f:	es inc esp
  406231:	imul   esi,DWORD PTR [ecx-0x4b],0xffffffe7
  406235:	jge    0x406298
  406237:	push   ecx
  406238:	mov    al,0x2d
  40623a:	push   es
  40623b:	mov    DWORD PTR [edi],esp
  40623d:	jge    0x406214
  40623f:	fcomp  DWORD PTR [ebp+0x132f9324]
  406245:	imul   edi,DWORD PTR [eax-0x60],0x7bffec92
  40624c:	cmp    eax,0xa140e87a
  406251:	push   0xcb30e207
  406256:	pop    esp
  406257:	out    dx,al
  406258:	nop
  406259:	and    eax,0x14161bcb
  40625e:	push   esi
  40625f:	push   ss
  406260:	xlat   BYTE PTR ds:[ebx]
  406261:	inc    ecx
  406262:	leave  
  406263:	ins    BYTE PTR es:[edi],dx
  406264:	mov    eax,0xfebda147
  406269:	jnp    0x4062c0
  40626b:	stc    
  40626c:	loope  0x4062b2
  40626e:	out    0xdb,eax
  406270:	xchg   BYTE PTR [ecx-0x4f892eb8],al
  406276:	repnz adc al,0xa0
  406279:	nop
  40627a:	dec    eax
  40627b:	jo     0x40626c
  40627d:	push   eax
  40627e:	mov    cs,WORD PTR [esi-0x43994a20]
  406284:	out    0x31,al
  406286:	pop    edi
  406287:	js     0x4062de
  406289:	cdq    
  40628a:	xor    bh,ah
  40628c:	xchg   esp,eax
  40628d:	mov    esp,DWORD PTR [edx]
  40628f:	pop    ebx
  406290:	xchg   DWORD PTR [ecx+0x76b375f1],ebx
  406296:	loopne 0x406240
  406298:	or     al,BYTE PTR [ebx]
  40629a:	mov    ds:0x57f9cc5f,al
  40629f:	inc    edi
  4062a0:	lgs    ecx,FWORD PTR [eax]
  4062a3:	aam    0xd3
  4062a5:	cmp    DWORD PTR [ecx-0x11],0xffffffeb
  4062a9:	retf   
  4062aa:	sub    eax,0x9070f12b
  4062af:	out    dx,eax
  4062b0:	rcr    DWORD PTR [esi-0x6fcf68bc],cl
  4062b6:	(bad)  
  4062b8:	pop    ebx
  4062b9:	pop    esp
  4062ba:	mov    bl,0xbc
  4062bc:	(bad)  
  4062bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062be:	das    
  4062bf:	jne    0x4062a0
  4062c1:	jae    0x406336
  4062c3:	push   edi
  4062c4:	aas    
  4062c5:	loope  0x4062d0
  4062c7:	call   0x2b19e8e0
  4062cc:	sub    BYTE PTR [ebp+0x1e],ch
  4062cf:	lock xchg ebp,eax
  4062d1:	and    ah,bh
  4062d3:	mov    DWORD PTR [eax-0x30],ebx
  4062d6:	sbb    dh,BYTE PTR [ecx-0x6a]
  4062d9:	push   0xffffffa9
  4062db:	mov    edi,0xf63c0df4
  4062e0:	cmp    eax,0x2adba83e
  4062e5:	sbb    BYTE PTR [eax-0x49],bl
  4062e8:	shl    DWORD PTR [esi-0x17],cl
  4062eb:	or     ebx,esi
  4062ed:	mov    ebx,ecx
  4062ef:	lds    ebp,FWORD PTR [ebx]
  4062f1:	repnz mov ebx,0xe5048915
  4062f7:	xlat   BYTE PTR ds:[ebx]
  4062f8:	outs   dx,BYTE PTR ds:[esi]
  4062f9:	call   DWORD PTR [edi]
  4062fb:	push   ecx
  4062fc:	ret    0x57b5
  4062ff:	les    esp,FWORD PTR [esi+0x4f]
  406302:	out    dx,eax
  406303:	or     DWORD PTR [ecx],0x284d34d6
  406309:	out    0xae,al
  40630b:	dec    ecx
  40630c:	cmp    BYTE PTR [ecx],bl
  40630e:	js     0x406332
  406310:	push   ebp
  406311:	push   ecx
  406312:	pop    esp
  406313:	aas    
  406314:	arpl   WORD PTR [ebx+edi*4+0x67be809e],di
  40631b:	fdivr  QWORD PTR [esi+eiz*4-0x2c09f3e4]
  406322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406323:	cmp    edi,DWORD PTR [eax]
  406325:	jl     0x40633a
  406327:	daa    
  406328:	(bad)  
  406329:	loop   0x40631d
  40632b:	dec    ebp
  40632c:	js     0x40631e
  40632e:	push   0x31
  406330:	aaa    
  406331:	or     eax,0x6e548b44
  406336:	sub    BYTE PTR [ebp+ebx*4-0x175b8e73],cl
  40633d:	jl     0x4062e5
  40633f:	pop    ecx
  406340:	inc    esi
  406341:	cs clc 
  406343:	shl    al,0xec
  406346:	mov    ds:0xb1f4c766,eax
  40634b:	push   esp
  40634c:	sub    eax,0xe8cb0993
  406352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406353:	mov    cs,WORD PTR [eax+0xc0bbca2]
  406359:	sub    esi,DWORD PTR [edx+ebx*1]
  40635c:	ds lahf 
  40635e:	faddp  st(7),st
  406360:	and    eax,0x7157a0a7
  406365:	rcl    BYTE PTR [ebx+0x7b2c18b6],1
  40636b:	test   BYTE PTR [ebp+ecx*8+0x4b28c07e],bh
  406372:	dec    edx
  406373:	lds    ebp,FWORD PTR [edx+0x4c26899e]
  406379:	cmp    ebp,edx
  40637b:	mov    eax,edi
  40637d:	dec    eax
  40637e:	shl    BYTE PTR [ecx+0xe937ea4],cl
  406384:	sbb    edx,DWORD PTR [eax]
  406386:	jbe    0x4063b5
  406388:	pop    ebx
  406389:	mov    DWORD PTR [edi-0x3c7e8933],ebp
  40638f:	ss mov eax,0x163b562a
  406395:	jp     0x406341
  406397:	xchg   DWORD PTR [edx-0xb],ebx
  40639a:	scas   al,BYTE PTR es:[edi]
  40639b:	mov    edi,0x46b5636b
  4063a0:	or     eax,0x2c054dd0
  4063a5:	push   es
  4063a6:	mov    dh,0xc9
  4063a8:	adc    eax,0x83259f67
  4063ad:	jmp    0x6fe0:0x172afa92
  4063b4:	jmp    0x7c0:0xd69dc169
  4063bb:	inc    esp
  4063bc:	cmp    eax,0x5518f359
  4063c1:	cs adc cl,0x6c
  4063c5:	xchg   ebp,eax
  4063c6:	sub    DWORD PTR [esi+eax*1],esp
  4063c9:	lahf   
  4063ca:	pop    esi
  4063cb:	shr    DWORD PTR [edi+eax*8],cl
  4063ce:	jmp    0xbe8ac3b2
  4063d3:	leave  
  4063d4:	pushf  
  4063d5:	sub    eax,ecx
  4063d7:	retf   0x202d
  4063da:	clc    
  4063db:	out    0xd0,eax
  4063dd:	sbb    BYTE PTR [ebp-0x53],0x51
  4063e1:	xchg   edx,eax
  4063e2:	xchg   edi,eax
  4063e3:	mov    ecx,0xb1e346e8
  4063e8:	xchg   edi,eax
  4063e9:	lahf   
  4063ea:	test   DWORD PTR [edx-0x5e],edx
  4063ed:	loopne 0x4063e9
  4063ef:	jns    0x4063d4
  4063f1:	adc    BYTE PTR [eax-0x72d55a7e],0xc
  4063f8:	pop    edi
  4063f9:	dec    esp
  4063fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063fb:	data16 mov bh,0xb5
  4063fe:	sbb    BYTE PTR [ebp+0x39],ch
  406401:	(bad)  
  406403:	popa   
  406404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406405:	or     edi,ebp
  406407:	push   cs
  406408:	in     eax,0x2d
  40640a:	adc    BYTE PTR [esi+0x708c8645],al
  406410:	int    0x52
  406412:	(bad)  
  406413:	jo     0x4063e3
  406415:	hlt    
  406416:	mov    edi,?
  406418:	mov    ds:0x87547925,al
  40641d:	mov    cl,BYTE PTR [ecx+0x6c4553bb]
  406423:	scas   eax,DWORD PTR es:[edi]
  406424:	lahf   
  406425:	mov    bh,dl
  406427:	scas   eax,DWORD PTR es:[edi]
  406428:	push   esp
  406429:	in     eax,dx
  40642a:	test   ah,dh
  40642c:	xchg   esi,eax
  40642d:	mov    al,ds:0xa6ca1852
  406432:	mov    esi,0x34497258
  406437:	in     al,0xe7
  406439:	jne    0x40642a
  40643b:	dec    edi
  40643c:	cmp    al,0x88
  40643e:	mov    edx,0xc1e3efea
  406443:	les    ebp,FWORD PTR [ecx]
  406445:	add    al,0xd
  406447:	jge    0x4064ba
  406449:	mov    al,0x5d
  40644b:	mov    BYTE PTR [edi-0x51],cl
  40644e:	int3   
  40644f:	cmp    DWORD PTR [eax],ebp
  406451:	rcl    al,1
  406453:	imul   esi,DWORD PTR [edx-0x31839018],0xc5a1bdce
  40645d:	jp     0x406429
  40645f:	jmp    0xa8d2228b
  406464:	cwde   
  406465:	and    BYTE PTR [ebp-0x70],bh
  406468:	out    dx,al
  406469:	xor    bh,BYTE PTR [eax+ebx*8]
  40646c:	and    al,0x7
  40646e:	mov    bh,BYTE PTR [esi]
  406470:	xchg   ebp,eax
  406471:	pop    esp
  406472:	pop    ds
  406473:	and    ebp,DWORD PTR [ebx+0x2f]
  406476:	pushf  
  406477:	jns    0x4064b8
  406479:	call   0x7a12d261
  40647e:	xchg   edi,eax
  40647f:	mov    ds:0x11436bf7,al
  406484:	jmp    0xed4efd88
  406489:	clc    
  40648a:	jb     0x406492
  40648c:	retf   
  40648d:	out    dx,eax
  40648e:	push   ebp
  40648f:	and    al,0xd0
  406491:	pop    ecx
  406492:	sub    DWORD PTR [ebp-0xcf1a6a2],0xffffff91
  406499:	jne    0x40644c
  40649b:	out    dx,eax
  40649c:	retf   
  40649d:	pop    ds
  40649e:	sub    DWORD PTR [edi],edi
  4064a0:	ret    
  4064a1:	in     eax,dx
  4064a2:	inc    esi
  4064a3:	call   0x6727c81a
  4064a8:	loopne 0x406493
  4064aa:	add    DWORD PTR [edx+ebp*1+0x32],0x6a
  4064af:	in     eax,0xdc
  4064b1:	stos   DWORD PTR es:[edi],eax
  4064b2:	mov    dl,0x96
  4064b4:	cli    
  4064b5:	loope  0x40647d
  4064b7:	dec    edi
  4064b8:	jmp    0x1d18:0xe4df039
  4064bf:	call   0xe849:0x7a45328a
  4064c6:	sbb    DWORD PTR [ebp-0x56],esi
  4064c9:	call   0x971d:0x26bd5ea3
  4064d0:	jnp    0x4064a1
  4064d2:	cmc    
  4064d3:	mov    ebp,DWORD PTR ds:0x9aad3bc1
  4064d9:	sbb    edx,edx
  4064db:	mov    eax,0x7753b651
  4064e0:	loopne 0x40647d
  4064e2:	cmp    ebx,edi
  4064e4:	push   esp
  4064e5:	mov    dl,0x3a
  4064e7:	inc    ebx
  4064e8:	lfs    edx,FWORD PTR es:[esi-0x5aad9191]
  4064f0:	sbb    esi,ecx
  4064f2:	mov    esp,0xaa1ef48
  4064f7:	mov    BYTE PTR [ecx+0x5979ebdb],ch
  4064fd:	mov    esi,0x8c0e561e
  406502:	and    ebp,DWORD PTR [ecx]
  406504:	out    dx,eax
  406505:	inc    esp
  406506:	cmp    DWORD PTR [edi],0xc82e0163
  40650c:	inc    edx
  40650d:	dec    edx
  40650e:	stc    
  40650f:	cld    
  406510:	pop    ss
  406511:	xchg   esi,eax
  406512:	dec    ebp
  406513:	sbb    DWORD PTR [eax+0x5f],eax
  406516:	aam    0x95
  406518:	(bad)  
  406519:	mov    edi,0xa87ba3ea
  40651e:	or     eax,0x79b12ab0
  406523:	push   ebp
  406524:	jle    0x40656c
  406526:	fidivr DWORD PTR [ecx]
  406528:	icebp  
  406529:	jnp    0x406552
  40652b:	popa   
  40652c:	sbb    DWORD PTR [eax-0x24412145],eax
  406532:	outs   dx,DWORD PTR ds:[esi]
  406533:	ins    DWORD PTR es:[edi],dx
  406534:	pop    ds
  406535:	ins    DWORD PTR es:[edi],dx
  406536:	ror    BYTE PTR [eax+0x6e],cl
  406539:	xchg   ebx,eax
  40653a:	out    0xf4,eax
  40653c:	mov    edi,0x44993651
  406541:	outs   dx,BYTE PTR ds:[esi]
  406542:	popf   
  406543:	addr16 push eax
  406545:	inc    ebp
  406546:	adc    edx,DWORD PTR [edx]
  406548:	in     eax,dx
  406549:	sar    DWORD PTR [eax],1
  40654b:	add    BYTE PTR [ecx],dh
  40654d:	push   edx
  40654e:	push   0xed2545b7
  406553:	mov    eax,ds:0x93128a20
  406558:	pop    ebx
  406559:	push   edi
  40655a:	nop
  40655b:	and    al,0xe6
  40655d:	jg     0x4064f4
  40655f:	pop    es
  406560:	pop    ebp
  406561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406562:	ja     0x4065da
  406564:	xor    esp,DWORD PTR [esi]
  406566:	jb     0x4064fc
  406568:	and    eax,0x194fbeed
  40656d:	push   ebx
  40656e:	inc    ebx
  40656f:	std    
  406570:	inc    ebp
  406571:	ds daa 
  406573:	lea    eax,[ebp+ecx*2-0x7a]
  406577:	add    al,0xc7
  406579:	fdiv   QWORD PTR [ebx-0x5c]
  40657c:	inc    DWORD PTR [ebx+ecx*2-0x38]
  406580:	jne    0x4065b0
  406582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406583:	push   esp
  406584:	retf   
  406585:	add    DWORD PTR [esi-0x279c1ad9],edx
  40658b:	stc    
  40658c:	jge    0x72cb7f0f
  406592:	call   0x7020:0x2330273
  406599:	sbb    ebp,ebp
  40659b:	jle    0x406569
  40659d:	add    al,0x5d
  40659f:	or     eax,0xd15737d9
  4065a4:	iret   
  4065a5:	inc    ecx
  4065a6:	ret    
  4065a7:	not    DWORD PTR [ebx]
  4065a9:	(bad)  
  4065aa:	dec    edi
  4065ab:	cmc    
  4065ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065ad:	cmp    DWORD PTR [edi-0x4c14820c],ecx
  4065b3:	pop    esi
  4065b4:	jp     0x406609
  4065b6:	pusha  
  4065b7:	stos   DWORD PTR es:[edi],eax
  4065b8:	dec    esp
  4065b9:	cs pop esi
  4065bb:	or     al,0xfd
  4065bd:	lods   eax,DWORD PTR ds:[esi]
  4065be:	sbb    BYTE PTR [ebx],0xd4
  4065c1:	push   ebx
  4065c2:	push   edx
  4065c3:	push   ebx
  4065c4:	(bad)  
  4065c5:	(bad)  
  4065c6:	in     eax,dx
  4065c7:	scas   al,BYTE PTR es:[edi]
  4065c8:	lahf   
  4065c9:	dec    ecx
  4065ca:	dec    edi
  4065cb:	fidiv  WORD PTR ss:[edx+0x2]
  4065cf:	fst    DWORD PTR [ecx+esi*2-0x1f]
  4065d3:	fld    st(5)
  4065d5:	pushf  
  4065d6:	in     al,dx
  4065d7:	pop    es
  4065d8:	and    al,0xf8
  4065da:	add    edx,DWORD PTR [ebp-0x57]
  4065dd:	mov    ch,0x2
  4065df:	cmp    DWORD PTR ds:0x5c5b7c1e,ecx
  4065e5:	popf   
  4065e6:	pop    es
  4065e7:	pop    edi
  4065e8:	pop    ebp
  4065e9:	out    dx,al
  4065ea:	je     0x4065bd
  4065ec:	dec    edx
  4065ed:	inc    esi
  4065ee:	scas   eax,DWORD PTR es:[edi]
  4065ef:	add    eax,0x3aa6b593
  4065f4:	mov    edi,eax
  4065f6:	xor    ch,BYTE PTR [esi+0x18]
  4065f9:	ins    DWORD PTR es:[edi],dx
  4065fa:	xor    bl,BYTE PTR [ebx]
  4065fc:	mov    ch,0xef
  4065fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ff:	aad    0x7b
  406601:	call   0x6106:0x2f9fe603
  406608:	push   ss
  406609:	cwde   
  40660a:	pop    ebp
  40660b:	(bad)  
  40660c:	pop    ecx
  40660d:	jle    0x4065b8
  40660f:	and    ecx,DWORD PTR cs:[eax]
  406612:	xor    al,0xcb
  406614:	add    DWORD PTR [edx+0x6],0xb0797aac
  40661b:	dec    eax
  40661c:	(bad)  
  40661d:	adc    al,0x35
  40661f:	lea    ebp,[esi-0x3f8d4d57]
  406625:	adc    al,0x3
  406627:	inc    ebp
  406628:	inc    DWORD PTR [ebx]
  40662a:	mov    ch,BYTE PTR [esi+0x75]
  40662d:	push   cs
  40662e:	scas   al,BYTE PTR es:[edi]
  40662f:	push   ebx
  406630:	in     eax,0x3a
  406632:	jle    0x406679
  406634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406635:	or     DWORD PTR [ecx],ecx
  406637:	mov    dl,0x91
  406639:	push   0x42770318
  40663e:	lea    edi,[ecx+0x55]
  406641:	test   al,ah
  406643:	ds loope 0x4065f3
  406646:	dec    ebx
  406647:	repnz mov eax,0x22f57c55
  40664d:	push   ecx
  40664e:	retf   
  40664f:	gs jmp 0x406664
  406652:	jno    0x4066c9
  406654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406655:	ins    DWORD PTR es:[edi],dx
  406656:	fisttp WORD PTR [ebp+eiz*8+0x4b]
  40665a:	or     BYTE PTR [eax],ch
  40665c:	ins    DWORD PTR es:[edi],dx
  40665d:	inc    esi
  40665e:	aaa    
  40665f:	(bad)  
  406660:	out    0x6f,eax
  406662:	xchg   BYTE PTR [ebp-0x3b58d90f],bl
  406668:	jmp    0x364f:0x75347092
  40666f:	test   al,0x14
  406671:	xchg   edi,eax
  406672:	sbb    edi,DWORD PTR [esi-0x4bdcc41e]
  406678:	adc    DWORD PTR [edi-0x60dc7bea],0x9ee92a85
  406682:	cdq    
  406683:	push   esi
  406684:	das    
  406685:	inc    edx
  406686:	adc    al,dh
  406688:	jmp    0x40664f
  40668a:	mov    eax,0x4c57365
  40668f:	xor    ebp,edx
  406691:	xchg   esi,eax
  406692:	adc    eax,0xd051b08c
  406697:	xchg   ecx,eax
  406698:	sub    ebp,edx
  40669a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40669b:	mov    esi,0x69982f40
  4066a0:	add    BYTE PTR [eax+0x4fcac6ed],cl
  4066a6:	inc    edi
  4066a7:	xchg   ebx,eax
  4066a8:	jmp    0x9ab2:0xb12d6ebd
  4066af:	and    bl,BYTE PTR fs:[esi-0x646b49f5]
  4066b6:	(bad)  
  4066b7:	in     al,dx
  4066b8:	xlat   BYTE PTR ds:[ebx]
  4066b9:	mov    WORD PTR [ebx],fs
  4066bb:	add    al,0x40
  4066bd:	out    0xaf,eax
  4066bf:	mov    bh,0xfa
  4066c1:	repnz pop ecx
  4066c3:	sub    dh,BYTE PTR [ecx-0x7f058e27]
  4066c9:	push   ebp
  4066ca:	cdq    
  4066cb:	loopne 0x4066b9
  4066cd:	xlat   BYTE PTR ds:[ebx]
  4066ce:	out    0x82,eax
  4066d0:	sub    edx,eax
  4066d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d3:	xchg   esp,eax
  4066d4:	jo     0x4066d6
  4066d6:	cmc    
  4066d7:	and    eax,0x68f96693
  4066dc:	sbb    eax,0xeb6e305b
  4066e1:	outs   dx,BYTE PTR ds:[esi]
  4066e2:	icebp  
  4066e3:	cmp    BYTE PTR [eax],cl
  4066e5:	cmp    BYTE PTR [ebx+0x21933664],al
  4066eb:	add    edx,0x2b6100a5
  4066f1:	call   0xb522:0x4d314f74
  4066f8:	pop    es
  4066f9:	dec    ecx
  4066fa:	cmp    eax,esp
  4066fc:	mov    ebx,0x425f9ab2
  406701:	call   DWORD PTR [ecx+0x792834e2]
  406707:	xchg   esi,eax
  406708:	retw   0x1e4e
  40670c:	jmp    0x145c6bc8
  406711:	sbb    eax,0x4e64b8b8
  406716:	fidiv  WORD PTR [esi+eiz*2-0x72]
  40671a:	cmp    DWORD PTR [ebp+0x1950c32a],0xffffffa5
  406721:	dec    ch
  406723:	data16 xchg WORD PTR [ebx-0x5c54f75c],cx
  40672b:	and    al,0x4
  40672d:	popa   
  40672e:	leave  
  40672f:	inc    eax
  406730:	jmp    0x6a80:0x20124087
  406737:	fsubr  st(0),st
  406739:	jbe    0x40679e
  40673b:	or     al,0xcf
  40673d:	adc    DWORD PTR [ebp+0x55f4dc6c],eax
  406743:	lods   eax,DWORD PTR ds:[esi]
  406744:	jge    0x4066d3
  406746:	and    BYTE PTR ds:0xf5a99706,ch
  40674c:	ins    BYTE PTR es:[edi],dx
  40674d:	push   esi
  40674e:	mov    eax,ds:0xdac2f4a2
  406753:	cmc    
  406754:	or     DWORD PTR [edx-0x1d],ebx
  406757:	inc    ebp
  406758:	cmp    DWORD PTR [ebp-0x12],edi
  40675b:	test   DWORD PTR ds:0xfa263882,ecx
  406761:	fwait
  406762:	repz pushw es
  406765:	enter  0xa331,0xcf
  406769:	mov    DWORD PTR [edi+0x6a],esi
  40676c:	icebp  
  40676d:	in     eax,0xbc
  40676f:	xchg   edx,eax
  406770:	mov    cl,0xa0
  406772:	jg     0x40673d
  406774:	dec    esi
  406775:	aaa    
  406776:	and    al,0x5a
  406778:	(bad)  
  40677a:	jle    0x4067f4
  40677c:	xor    eax,ecx
  40677e:	inc    ebx
  40677f:	push   ebp
  406780:	pop    esp
  406781:	push   ebx
  406782:	ja     0x3ace733d
  406788:	add    cl,bh
  40678a:	ret    0x5b9c
  40678d:	mov    bl,0x3a
  40678f:	test   cl,dl
  406791:	inc    esi
  406792:	jle    0x40678c
  406794:	sahf   
  406795:	fbld   TBYTE PTR [edi]
  406797:	xchg   ebp,eax
  406798:	or     BYTE PTR [edi-0x62],bh
  40679b:	in     eax,dx
  40679c:	dec    ebx
  40679d:	and    al,0xac
  40679f:	cmp    eax,0xea2a640
  4067a4:	inc    ecx
  4067a5:	mov    ebx,0xba786151
  4067aa:	shr    dl,1
  4067ac:	add    dh,0x79
  4067af:	jmp    0xf2db:0x727776b9
  4067b6:	push   eax
  4067b7:	clc    
  4067b8:	mov    DWORD PTR [esi+0x185bce55],ecx
  4067be:	stos   DWORD PTR es:[edi],eax
  4067bf:	call   DWORD PTR [ebp-0x6c]
  4067c2:	or     BYTE PTR [ebx-0x751e983e],al
  4067c8:	je     0x406787
  4067ca:	int3   
  4067cb:	add    ebx,DWORD PTR [edi-0x74]
  4067ce:	mov    ecx,0xf4aabb5d
  4067d3:	repz xchg esp,eax
  4067d5:	xlat   BYTE PTR ds:[ebx]
  4067d6:	sahf   
  4067d7:	mov    dl,0x59
  4067d9:	and    DWORD PTR [ebp-0x5488f50e],eax
  4067df:	inc    esi
  4067e0:	sub    DWORD PTR [esi],esp
  4067e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067e3:	and    DWORD PTR [ecx+0x14],ebp
  4067e6:	push   ebp
  4067e7:	jp     0x406779
  4067e9:	sar    ch,1
  4067eb:	icebp  
  4067ec:	mov    BYTE PTR [edi],bl
  4067ee:	shr    DWORD PTR [esi],0x18
  4067f1:	rol    DWORD PTR [ebx],cl
  4067f3:	cdq    
  4067f4:	pop    ebx
  4067f5:	aas    
  4067f6:	int    0x7e
  4067f8:	xor    eax,0x516c293f
  4067fd:	add    dh,bl
  4067ff:	out    dx,al
  406800:	adc    BYTE PTR [edi*4+0x2e955ac0],dl
  406807:	cli    
  406808:	xor    DWORD PTR [ebx+0x594dbe68],0x67
  40680f:	pop    DWORD PTR [eax]
  406811:	test   BYTE PTR [edx],0x51
  406814:	or     esp,DWORD PTR [esp+esi*2]
  406817:	pushf  
  406818:	inc    ecx
  406819:	lahf   
  40681a:	jno    0x4067f4
  40681c:	out    dx,al
  40681d:	mov    al,0x92
  40681f:	ret    
  406820:	sub    al,0x88
  406823:	leave  
  406824:	std    
  406825:	dec    esi
  406826:	cli    
  406827:	xchg   esp,eax
  406828:	fimul  DWORD PTR [ecx-0x32393776]
  40682e:	in     al,0x1
  406830:	xchg   ecx,eax
  406831:	mov    eax,ds:0x721df946
  406836:	jbe    0x4068b7
  406838:	mov    al,0x4e
  40683a:	fldcw  WORD PTR [eax+edx*2+0x44fea249]
  406841:	and    DWORD PTR [ecx],eax
  406843:	sbb    al,0x82
  406845:	sbb    ah,ah
  406847:	jbe    0x4068bb
  406849:	xor    DWORD PTR [edx-0x6c],eax
  40684c:	mov    bh,0x3b
  40684e:	enter  0x23bf,0xa6
  406852:	loope  0x40682b
  406854:	xor    eax,0x105af936
  406859:	shl    dh,1
  40685b:	sub    esp,DWORD PTR [edi-0x39]
  40685e:	pop    ds
  40685f:	sbb    dl,bl
  406861:	fisub  DWORD PTR [edx-0x25]
  406864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406865:	(bad)  
  406866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406867:	cmp    BYTE PTR [ebp-0x592317c8],0x2f
  40686e:	int    0x23
  406870:	cwde   
  406871:	shl    DWORD PTR [edx-0xf],1
  406874:	in     eax,dx
  406875:	inc    esp
  406876:	push   ss
  406877:	and    al,0x48
  406879:	fisub  WORD PTR [edx-0x32]
  40687c:	inc    ecx
  40687d:	mov    edi,DWORD PTR [edi-0xd01f867]
  406883:	data16 out 0x59,al
  406886:	shr    DWORD PTR [ebp-0x2b23b8c7],1
  40688c:	shl    BYTE PTR [ecx],1
  40688e:	or     eax,DWORD PTR ds:0x798f64d7
  406894:	jb     0x406909
  406896:	cmp    bh,BYTE PTR [ebx]
  406898:	(bad)  
  40689a:	sub    al,0xc7
  40689c:	aaa    
  40689d:	pop    esp
  40689e:	sbb    BYTE PTR [edx+0x55e3cd6d],dl
  4068a4:	cmp    eax,0xc2bcf440
  4068a9:	jl     0x406872
  4068ab:	push   ds
  4068ac:	sbb    al,cl
  4068ae:	ficom  WORD PTR [ebx+0x37cd8093]
  4068b4:	fst    st(5)
  4068b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068b7:	repz dec edi
  4068b9:	scas   al,BYTE PTR es:[edi]
  4068ba:	(bad)  
  4068bb:	hlt    
  4068bc:	add    al,0x48
  4068be:	outs   dx,BYTE PTR ds:[esi]
  4068bf:	sub    BYTE PTR [eax],cl
  4068c1:	ret    0xc5ac
  4068c4:	pop    ecx
  4068c5:	sbb    BYTE PTR [esi-0x6112fdd],0x17
  4068cc:	and    BYTE PTR [edi],dh
  4068ce:	arpl   WORD PTR [ecx-0x17],di
  4068d1:	jecxz  0x4068f9
  4068d3:	cmp    eax,0xcf948343
  4068d8:	adc    eax,0x94196528
  4068dd:	push   cs
  4068de:	(bad)  
  4068df:	jns    0x40691c
  4068e1:	and    DWORD PTR [edi],esi
  4068e3:	and    edi,DWORD PTR [edi+0x4]
  4068e6:	mov    dh,0x87
  4068e8:	js     0x40693e
  4068ea:	scas   al,BYTE PTR es:[edi]
  4068eb:	jl     0x4068c2
  4068ed:	and    al,0xfa
  4068ef:	jg     0x406905
  4068f1:	xchg   esp,eax
  4068f2:	fild   DWORD PTR [eax]
  4068f4:	adc    DWORD PTR [ebx+ecx*1+0x7],edx
  4068f8:	loope  0x406922
  4068fa:	scas   al,BYTE PTR es:[edi]
  4068fb:	(bad)  
  4068fc:	popf   
  4068fd:	push   0xebef7b7e
  406902:	in     al,dx
  406903:	ret    0x54c1
  406906:	shl    DWORD PTR [eax+0x6d],0x8c
  40690a:	call   0x4bfedd1a
  40690f:	ins    DWORD PTR es:[edi],dx
  406910:	mov    ch,0xe4
  406912:	enter  0x9d3f,0x72
  406916:	(bad)  
  406917:	jbe    0x406909
  406919:	test   eax,0x49132bdc
  40691e:	aas    
  40691f:	outs   dx,DWORD PTR ds:[esi]
  406920:	adc    dl,dl
  406922:	mov    ds:0x9ca837c7,al
  406927:	ret    0xd4b0
  40692a:	mov    edx,0x2f8cbbbd
  40692f:	retf   0x8b09
  406932:	(bad)  
  406933:	push   esi
  406934:	cmp    ebx,ebp
  406936:	cmp    al,0x89
  406938:	pop    esp
  406939:	jo     0x406974
  40693b:	imul   ecx,DWORD PTR [eax-0x66f61c04],0x45be602d
  406945:	inc    eax
  406946:	pusha  
  406947:	xchg   DWORD PTR [eax+0x3f],ecx
  40694a:	lods   eax,DWORD PTR ds:[esi]
  40694b:	jg     0x4069c8
  40694d:	lods   al,BYTE PTR ds:[esi]
  40694e:	je     0x40691f
  406950:	inc    ebx
  406951:	add    al,0x86
  406953:	sub    al,0xcc
  406955:	ret    
  406956:	lahf   
  406957:	(bad)  
  406958:	push   edx
  406959:	adc    BYTE PTR [ecx*4-0x269887ae],cl
  406960:	and    BYTE PTR [ebp+edi*8-0x72],0x17
  406965:	pop    ebx
  406966:	out    dx,al
  406967:	popa   
  406968:	lods   al,BYTE PTR ds:[esi]
  406969:	mov    WORD PTR [ecx-0x46ca7eb],ds
  40696f:	enter  0x3094,0x37
  406973:	mov    cl,BYTE PTR [edx]
  406975:	in     eax,0x1b
  406977:	ror    DWORD PTR [esi+0x22],cl
  40697a:	(bad)  
  40697c:	test   eax,0x1600b7f0
  406981:	in     al,0xb3
  406983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406984:	aas    
  406985:	push   ss
  406986:	add    BYTE PTR [eax],0x1
  406989:	lock add al,0x73
  40698c:	iret   
  40698d:	add    ch,BYTE PTR [esi+0x2039019e]
  406993:	mov    esi,0xecf55154
  406998:	and    BYTE PTR [ebx+0x13],ah
  40699b:	outs   dx,DWORD PTR ds:[esi]
  40699c:	cmp    edx,DWORD PTR [ebx]
  40699e:	ds out 0xe9,eax
  4069a1:	mov    eax,ds:0x617f1174
  4069a6:	sbb    edi,DWORD PTR [esi]
  4069a8:	icebp  
  4069a9:	add    bl,BYTE PTR [esi]
  4069ab:	jle    0x40695c
  4069ad:	push   ebx
  4069ae:	push   ebx
  4069af:	out    0xcf,eax
  4069b1:	into   
  4069b2:	mov    eax,0x9ea3d167
  4069b7:	pushf  
  4069b8:	jo     0x406974
  4069ba:	loope  0x4069cb
  4069bc:	(bad)  [eax-0x13]
  4069bf:	adc    eax,0xc73b654e
  4069c4:	test   al,0x8a
  4069c6:	int3   
  4069c7:	mov    cl,BYTE PTR [esi-0x61]
  4069ca:	push   esi
  4069cb:	jecxz  0x4069fc
  4069cd:	or     eax,0xad4bf6bf
  4069d2:	mov    ah,0x20
  4069d4:	push   cs
  4069d5:	dec    ecx
  4069d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069d7:	cmp    BYTE PTR [ebp+0x3f],dl
  4069da:	out    0xf,eax
  4069dc:	adc    esi,ebx
  4069de:	cld    
  4069df:	fnsave ds:0x1224a424
  4069e5:	jno    0x406a44
  4069e7:	cmp    DWORD PTR [edx+ebp*2],ebx
  4069ea:	cmc    
  4069eb:	xchg   ecx,eax
  4069ec:	jnp    0x406a48
  4069ee:	arpl   WORD PTR [eax],dx
  4069f0:	adc    DWORD PTR [edx+edx*8-0x7ae79900],ebp
  4069f7:	fwait
  4069f8:	bound  esi,QWORD PTR [ecx-0x62dfe87c]
  4069fe:	sub    BYTE PTR [ecx+0x46],cl
  406a01:	mov    WORD PTR ds:0xbadcfd49,?
  406a07:	je     0x406a64
  406a09:	ror    BYTE PTR [eax+ecx*1-0x65d2c19a],cl
  406a10:	push   0xffffffdc
  406a12:	cmp    DWORD PTR [ecx],edx
  406a14:	std    
  406a15:	inc    edx
  406a16:	sbb    DWORD PTR [eax-0x5ce950e0],ebx
  406a1c:	push   ss
  406a1d:	add    BYTE PTR [esi],dl
  406a1f:	test   DWORD PTR [ebx+0x6],0xcf73d758
  406a26:	aam    0x17
  406a28:	xchg   esi,eax
  406a29:	sbb    al,BYTE PTR [ecx]
  406a2b:	loop   0x406a0f
  406a2d:	fidivr WORD PTR [ecx+esi*1]
  406a30:	popa   
  406a31:	iret   
  406a32:	inc    ebp
  406a33:	mov    fs,WORD PTR [esi]
  406a35:	inc    edi
  406a36:	jp     0x4069e5
  406a38:	xor    al,0x6f
  406a3a:	enter  0x9c3d,0x28
  406a3e:	cli    
  406a3f:	push   edx
  406a40:	addr16 xchg edi,eax
  406a42:	push   0x69e3a56e
  406a47:	je     0x4069fe
  406a49:	mov    es,WORD PTR [ebx]
  406a4b:	pop    ebx
  406a4c:	loop   0x406a8e
  406a4e:	push   eax
  406a4f:	jns    0x4069fa
  406a51:	inc    ebp
  406a52:	mov    edx,0x9454101c
  406a57:	add    al,0xef
  406a59:	adc    cl,BYTE PTR [ecx-0xd]
  406a5c:	(bad)  
  406a5d:	ret    0x3872
  406a60:	sbb    eax,0xdfa81603
  406a65:	ror    BYTE PTR [edi+0x68],1
  406a68:	stc    
  406a69:	scas   al,BYTE PTR es:[edi]
  406a6a:	pop    esp
  406a6b:	dec    ebx
  406a6c:	fcmovnu st,st(4)
  406a6e:	dec    ebp
  406a6f:	xor    bh,BYTE PTR [ebx-0x77]
  406a72:	push   esi
  406a73:	adc    DWORD PTR [edx],edx
  406a75:	inc    ebx
  406a76:	(bad)  
  406a77:	in     eax,dx
  406a78:	mov    ah,0xb9
  406a7a:	sbb    BYTE PTR [edx],al
  406a7c:	dec    esp
  406a7d:	xlat   BYTE PTR ds:[ebx]
  406a7e:	lahf   
  406a7f:	call   0x9a76e03c
  406a84:	sbb    eax,ebp
  406a86:	shr    DWORD PTR [ebx],0xc9
  406a89:	adc    DWORD PTR [ebx+edx*2-0x12],ebp
  406a8d:	sbb    DWORD PTR [edi-0x4880abb0],eax
  406a93:	jp     0x406adf
  406a95:	mov    al,0x4b
  406a97:	cli    
  406a98:	fsubr  QWORD PTR [esi+0x4c]
  406a9b:	jb     0x406a37
  406a9d:	call   0x663a:0x42b55626
  406aa4:	cmp    cl,BYTE PTR [ecx+0x4b]
  406aa7:	and    eax,ebx
  406aa9:	jnp    0x406a77
  406aab:	xor    BYTE PTR [esi+0x68],0xc9
  406aaf:	cs das 
  406ab1:	pop    edx
  406ab2:	mov    bl,0xee
  406ab4:	ret    0x6bf9
  406ab7:	icebp  
  406ab8:	imul   ebx,esp,0xffffff9b
  406abb:	xor    BYTE PTR [edi+0x4],bh
  406abe:	adc    ebp,DWORD PTR [eax]
  406ac0:	inc    esi
  406ac1:	lea    ebx,[ecx+0x12dbb094]
  406ac7:	test   bh,dh
  406ac9:	push   ss
  406aca:	and    BYTE PTR [edx],0xc7
  406acd:	je     0x406b10
  406acf:	and    eax,DWORD PTR es:[esi+0x37]
  406ad3:	or     al,0x8b
  406ad5:	xor    BYTE PTR [esi-0x2fa6764e],bh
  406adb:	lock lods al,BYTE PTR ds:[esi]
  406add:	bound  ebx,QWORD PTR [ebx-0x39]
  406ae0:	mov    al,ds:0xcd91b1f9
  406ae5:	stc    
  406ae6:	push   esp
  406ae7:	retf   
  406ae8:	mov    edx,0x92a336bb
  406aed:	or     bh,BYTE PTR [edi+0x19c888c3]
  406af3:	mov    edx,0x47f7ff9b
  406af8:	leave  
  406af9:	push   ds
  406afa:	pushf  
  406afb:	push   edi
  406afc:	aaa    
  406afd:	add    DWORD PTR [ecx],esp
  406aff:	dec    bl
  406b01:	inc    ebx
  406b02:	mov    ss,WORD PTR [edi+0x3e8112e8]
  406b08:	dec    ecx
  406b09:	push   eax
  406b0a:	cdq    
  406b0b:	or     esp,DWORD PTR [ecx+0x765a80d2]
  406b11:	loop   0x406b04
  406b13:	into   
  406b14:	mov    ebp,0x14df8d0b
  406b19:	(bad)  
  406b1a:	push   ecx
  406b1b:	jmp    0x406b10
  406b1d:	adc    BYTE PTR [edx-0x508bf9e6],bl
  406b23:	sbb    esp,DWORD PTR [esp+eiz*2]
  406b26:	add    ebx,ebp
  406b28:	stos   BYTE PTR es:[edi],al
  406b29:	inc    edx
  406b2a:	cmp    BYTE PTR [edi],cl
  406b2c:	xor    al,0x70
  406b2e:	or     eax,0xd0791593
  406b33:	jl     0x406ac3
  406b35:	jge    0x406b5d
  406b37:	into   
  406b38:	and    al,0x1a
  406b3a:	cmp    eax,0x83dabab0
  406b3f:	dec    esi
  406b40:	push   ss
  406b41:	sbb    BYTE PTR [ebp*8-0x3289abef],dl
  406b48:	imul   esp,DWORD PTR [ecx+0x3a4226c],0xfb8eeb1d
  406b52:	add    bh,BYTE PTR [edi]
  406b54:	or     dl,BYTE PTR [eax+edx*2-0x7259e855]
  406b5b:	mov    WORD PTR [edx+0x1b34bedf],cs
  406b61:	mov    ebp,ebx
  406b63:	gs arpl sp,dx
  406b66:	hlt    
  406b67:	maskmovq mm5,(bad)
  406b68:	imul   DWORD PTR [eax]
  406b6a:	lods   eax,DWORD PTR ds:[esi]
  406b6b:	sbb    bl,dl
  406b6d:	mov    dh,0x1a
  406b6f:	mov    ah,0xbd
  406b71:	jg     0x406b4a
  406b73:	and    eax,0x1326fb69
  406b78:	mov    eax,DWORD PTR [ebx-0x69]
  406b7b:	cmp    eax,0x35394e1c
  406b80:	sub    edx,DWORD PTR ds:0x21c815fb
  406b86:	adc    esi,0xb9d120de
  406b8c:	add    DWORD PTR [edx+0x2c023eee],eax
  406b92:	or     esp,DWORD PTR [edx-0x10066cfd]
  406b98:	dec    ecx
  406b99:	js     0x406c1a
  406b9b:	loopne 0x406bdc
  406b9d:	jg     0x406b7f
  406b9f:	xchg   edx,eax
  406ba0:	dec    edx
  406ba1:	pop    edi
  406ba2:	mov    dl,0xe1
  406ba4:	popf   
  406ba5:	in     eax,dx
  406ba6:	mov    ?,WORD PTR [ebx+0x21]
  406ba9:	loope  0x406bcd
  406bab:	xor    al,0x5
  406bad:	pushf  
  406bae:	inc    ebx
  406baf:	sub    dl,BYTE PTR [edx+0xf]
  406bb2:	and    BYTE PTR [ebp+0x69c71817],0xdc
  406bb9:	add    DWORD PTR [esi-0x1a],eax
  406bbc:	adc    BYTE PTR ds:0xd5437f00,bl
  406bc2:	outs   dx,DWORD PTR ds:[esi]
  406bc3:	mov    ds:0x84f6b696,eax
  406bc8:	fmul   DWORD PTR ds:0x7154199b
  406bce:	inc    ecx
  406bcf:	jbe    0x406b9e
  406bd1:	pop    ebp
  406bd2:	mov    ah,0x4f
  406bd4:	(bad)  
  406bd5:	fninit 
  406bd7:	dec    edi
  406bd8:	bswap  ebp
  406bda:	test   eax,0xf91f1136
  406bdf:	lods   eax,DWORD PTR ds:[esi]
  406be0:	mov    ?,esi
  406be2:	xor    DWORD PTR [ecx-0x6ab2a62e],edi
  406be8:	sub    esp,DWORD PTR [edi-0x2b]
  406beb:	nop
  406bec:	sbb    edi,edi
  406bee:	mov    ds:0x1dd6d7fd,al
  406bf3:	out    dx,eax
  406bf4:	or     dh,BYTE PTR [esi-0x73]
  406bf7:	sbb    BYTE PTR [edi-0x6fed8563],dh
  406bfd:	popf   
  406bfe:	lds    esi,FWORD PTR ss:[ebx]
  406c01:	sub    ch,BYTE PTR ds:[edx+0x4bff4696]
  406c08:	jp     0x406c72
  406c0a:	sbb    BYTE PTR [edi+edi*4],al
  406c0d:	xchg   edi,eax
  406c0e:	in     eax,0xd2
  406c10:	scas   eax,DWORD PTR es:[edi]
  406c11:	sub    dl,BYTE PTR [eax+0x464f21a8]
  406c17:	lods   eax,DWORD PTR ds:[esi]
  406c18:	dec    esp
  406c19:	(bad)  
  406c1a:	arpl   WORD PTR [edi+0x2c],ax
  406c1d:	xor    eax,0x30c54ed5
  406c22:	push   0xfe2f5279
  406c27:	jo     0x406bdc
  406c29:	enter  0xa54f,0xa1
  406c2d:	mov    ds:0x3285af5c,al
  406c32:	sti    
  406c33:	push   ebp
  406c34:	scas   eax,DWORD PTR es:[edi]
  406c35:	push   edi
  406c36:	ins    BYTE PTR es:[edi],dx
  406c37:	shl    DWORD PTR [ebx-0xa],cl
  406c3a:	xchg   ebx,eax
  406c3b:	xchg   ebp,eax
  406c3c:	imul   edx,DWORD PTR [ebp+eax*2-0x3d7ca800],0x1f
  406c44:	sar    BYTE PTR [ebp+esi*2+0x2c5daa70],0x18
  406c4c:	test   al,0x46
  406c4e:	dec    edi
  406c4f:	repz (bad) 
  406c51:	(bad)  [esi-0x448d4e4c]
  406c57:	sbb    edx,DWORD PTR ds:0xb8c14a5f
  406c5d:	das    
  406c5e:	je     0x406cde
  406c60:	xor    ebp,DWORD PTR [esi-0x7f]
  406c63:	repz or bl,BYTE PTR [ecx]
  406c66:	jmp    0xec6ddd61
  406c6b:	xchg   esi,eax
  406c6c:	pop    ebp
  406c6d:	test   eax,0xf0a2505c
  406c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c73:	mov    ah,0x21
  406c75:	imul   esi,DWORD PTR [ebx+0x4c],0x743a2e61
  406c7c:	ret    0x868
  406c7f:	inc    esi
  406c80:	ret    
  406c81:	test   BYTE PTR [edx-0x18e3ee9b],ah
  406c87:	out    dx,eax
  406c88:	test   BYTE PTR [edi-0xd],al
  406c8b:	mov    cl,0xe8
  406c8d:	xor    esp,DWORD PTR [edx+0x6c]
  406c90:	mov    bh,0xe7
  406c92:	cmp    ch,BYTE PTR [esi+ebp*4+0xc]
  406c96:	out    0xe3,eax
  406c98:	pushf  
  406c99:	push   ebx
  406c9a:	push   edx
  406c9b:	mov    al,ds:0xf7c73105
  406ca0:	cmp    al,0x18
  406ca2:	lock repz adc cl,bl
  406ca6:	sub    DWORD PTR [edx+eiz*2],0x6bb6df9a
  406cad:	inc    edi
  406cae:	jbe    0x406ccd
  406cb0:	push   esi
  406cb1:	pusha  
  406cb2:	mov    ebx,0x9de0a34d
  406cb7:	xchg   BYTE PTR [edi+0x1b],cl
  406cba:	pop    es
  406cbb:	or     ebp,DWORD PTR [edx+eax*8-0x755383db]
  406cc2:	cmp    DWORD PTR [ebx-0x65],esp
  406cc5:	mov    dl,BYTE PTR [edx+edi*4-0x16]
  406cc9:	in     eax,0x70
  406ccb:	dec    eax
  406ccc:	mov    edi,DWORD PTR [edi-0x4787d5e]
  406cd2:	add    dh,BYTE PTR [ebx]
  406cd4:	mov    ch,0x29
  406cd6:	pop    es
  406cd7:	mov    es,WORD PTR [esp+edi*2]
  406cda:	clc    
  406cdb:	mov    dh,0x3c
  406cdd:	ins    BYTE PTR es:[edi],dx
  406cde:	scas   eax,DWORD PTR es:[edi]
  406cdf:	xchg   bh,bh
  406ce1:	lock sub esi,DWORD PTR [esi+0x13]
  406ce5:	test   eax,0x118c507a
  406cea:	aaa    
  406ceb:	pop    ss
  406cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cee:	inc    edi
  406cef:	ret    
  406cf0:	sti    
  406cf1:	inc    edx
  406cf2:	sbb    ch,BYTE PTR [eax+0x0]
  406cf5:	pop    esi
  406cf6:	xchg   DWORD PTR [eax],ebp
  406cf8:	outs   dx,BYTE PTR ds:[esi]
  406cf9:	in     al,dx
  406cfa:	mov    bh,0x8f
  406cfc:	or     eax,0xbd080be0
  406d01:	fucomip st,st(0)
  406d03:	js     0x406d2d
  406d05:	sub    BYTE PTR [esi],dl
  406d07:	stos   DWORD PTR es:[edi],eax
  406d08:	vmovaps xmm0,XMMWORD PTR gs:[ebx]
  406d0d:	fnop   
  406d0f:	mov    ds:0xfce8454,al
  406d14:	pusha  
  406d15:	lds    ebx,FWORD PTR [eax]
  406d17:	sub    eax,0xb5bf4882
  406d1c:	jle    0x406cd0
  406d1e:	dec    eax
  406d1f:	mov    WORD PTR ds:0x1394a4ae,cs
  406d25:	call   0xed992111
  406d2a:	lods   eax,DWORD PTR cs:[esi]
  406d2c:	cmp    bh,BYTE PTR [ebx-0x3]
  406d2f:	push   ebp
  406d30:	or     al,0xd3
  406d32:	mov    ecx,0xb19b13a5
  406d37:	mov    ah,0x1f
  406d39:	loopne 0x406d2b
  406d3b:	repz ror esi,1
  406d3e:	xchg   edx,eax
  406d3f:	xor    ah,BYTE PTR [ebx]
  406d41:	sub    ch,dl
  406d43:	dec    ebp
  406d44:	(bad)  
  406d45:	popa   
  406d46:	cmp    edi,DWORD PTR [eax]
  406d48:	xchg   edx,eax
  406d49:	retf   0x9136
  406d4c:	(bad)  
  406d4d:	(bad)  
  406d4e:	cmovae eax,DWORD PTR [ecx]
  406d51:	mov    WORD PTR [ebx+0x3a3b447c],fs
  406d57:	js     0x406d8f
  406d59:	fmul   DWORD PTR [ebx]
  406d5b:	ja     0x406d7b
  406d5d:	loopne 0x406cea
  406d5f:	push   0x9145d128
  406d64:	lods   al,BYTE PTR ds:[esi]
  406d65:	cli    
  406d66:	xor    al,0x44
  406d68:	jp     0x406dd7
  406d6a:	pusha  
  406d6b:	xchg   DWORD PTR [eax+0x4b1aeb7f],ebx
  406d71:	xchg   ecx,eax
  406d72:	push   esp
  406d73:	ds add al,0xc2
  406d76:	call   0x3a64:0x23bc0232
  406d7d:	bnd jb 0x406d91
  406d80:	retf   0x2842
  406d83:	mov    dl,0x7b
  406d85:	mov    esi,0x46fca6a
  406d8a:	test   eax,0x7888a870
  406d8f:	aam    0x57
  406d91:	mov    bh,al
  406d93:	aam    0x1e
  406d95:	pop    eax
  406d96:	sti    
  406d97:	xchg   DWORD PTR [ecx+0x213f5fd2],ebx
  406d9d:	xor    BYTE PTR [eax],dh
  406d9f:	dec    esi
  406da0:	jl     0x406de3
  406da2:	cmc    
  406da3:	(bad)  
  406da4:	mov    cl,0x57
  406da6:	pop    esi
  406da7:	or     eax,0xf1615c48
  406dac:	std    
  406dad:	out    0x67,al
  406daf:	sti    
  406db0:	into   
  406db1:	rcl    DWORD PTR [edx],cl
  406db3:	pop    ecx
  406db4:	xor    cl,BYTE PTR [eax+0x21]
  406db7:	ss aas 
  406db9:	push   cs
  406dba:	imul   ecx,esi,0xcb6e051
  406dc0:	ins    BYTE PTR es:[edi],dx
  406dc1:	(bad)  
  406dc2:	shr    BYTE PTR [edi],0xcb
  406dc5:	mov    ecx,0xd34dec3c
  406dca:	mov    es,esp
  406dcc:	out    0xd,al
  406dce:	pop    ds
  406dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dd1:	pop    edx
  406dd2:	rol    DWORD PTR [edi+0x45],cl
  406dd5:	jne    0x406de6
  406dd7:	loop   0x406d84
  406dd9:	sbb    eax,0x3889de67
  406dde:	mov    cl,0x78
  406de0:	std    
  406de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406de2:	pop    eax
  406de3:	shr    BYTE PTR [edx],cl
  406de5:	and    al,BYTE PTR [eax+0x681f33e8]
  406deb:	and    BYTE PTR [esi-0x60bb87b3],dl
  406df1:	pop    ebp
  406df2:	mov    esi,DWORD PTR [esi+0x15]
  406df5:	mov    eax,0xc40766d0
  406dfa:	xor    BYTE PTR [ecx-0x374145b9],0x82
  406e01:	in     al,dx
  406e02:	jg     0x406dcf
  406e04:	inc    esi
  406e05:	pushf  
  406e06:	aas    
  406e07:	(bad)  
  406e08:	popf   
  406e09:	adc    DWORD PTR [ebx+0x2734e77f],esp
  406e0f:	jbe    0x406deb
  406e11:	test   DWORD PTR [esi],esp
  406e13:	cld    
  406e14:	in     eax,dx
  406e15:	aas    
  406e16:	pop    ebp
  406e17:	push   es
  406e18:	enter  0x37ff,0xfa
  406e1c:	retf   
  406e1d:	es add ebp,edx
  406e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e21:	dec    ebx
  406e22:	inc    esi
  406e23:	es add eax,0x2fc3936c
  406e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e2a:	cdq    
  406e2b:	add    dl,BYTE PTR [ecx]
  406e2d:	std    
  406e2e:	loopne 0x406e6e
  406e30:	outs   dx,DWORD PTR ds:[esi]
  406e31:	jmp    0x9cd68924
  406e36:	sbb    al,0xca
  406e38:	sub    al,0x81
  406e3a:	ror    DWORD PTR [edx+0x60],0x9e
  406e3e:	ins    DWORD PTR es:[edi],dx
  406e3f:	lock rol DWORD PTR [edx+eax*2],cl
  406e43:	es loopne 0x406ec1
  406e46:	jae    0x406ec4
  406e48:	cmp    al,0x50
  406e4a:	les    ebx,FWORD PTR [edx+0x36f5321b]
  406e50:	imul   DWORD PTR [eax]
  406e52:	fisttp DWORD PTR [ebp-0x58]
  406e55:	ds popa 
  406e57:	or     BYTE PTR [esi+0x3de035ed],cl
  406e5d:	bound  ebx,QWORD PTR [edx]
  406e5f:	or     DWORD PTR [edx+ecx*1-0x7d],edx
  406e63:	imul   esi,DWORD PTR [esi+0x760374e6],0x2c
  406e6a:	into   
  406e6b:	fcmovnb st,st(3)
  406e6d:	adc    eax,0x69ae296b
  406e72:	popf   
  406e73:	jecxz  0x406e6b
  406e75:	push   0xffffffbf
  406e77:	mov    esi,0x7c844d9a
  406e7c:	jae    0x406e45
  406e7e:	mov    al,ds:0x12580386
  406e83:	dec    ebx
  406e84:	test   eax,0x7f049f1
  406e89:	sbb    BYTE PTR [ebx-0x61],dh
  406e8c:	jae    0x406e1a
  406e8e:	test   eax,0xd4c9f4
  406e93:	push   esi
  406e94:	fwait
  406e95:	or     dh,BYTE PTR [edi-0x73da633f]
  406e9b:	or     BYTE PTR [ebp+esi*4-0x39],bl
  406e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea0:	mov    ds:0x58b690f6,al
  406ea5:	push   esp
  406ea6:	inc    edx
  406ea7:	leave  
  406ea8:	call   0xf0f3:0xc72503f2
  406eaf:	dec    edi
  406eb0:	and    edx,DWORD PTR [esi+0x221db8d8]
  406eb6:	retf   
  406eb7:	pop    ss
  406eb8:	dec    ecx
  406eb9:	sti    
  406eba:	sub    eax,0x51616d65
  406ebf:	jb     0x406ed0
  406ec1:	stos   BYTE PTR es:[edi],al
  406ec2:	adc    eax,0x7363c5be
  406ec7:	neg    ebp
  406ec9:	ds je  0x406f38
  406ecc:	icebp  
  406ecd:	scas   eax,DWORD PTR es:[edi]
  406ece:	clc    
  406ecf:	jg     0x406efd
  406ed1:	push   eax
  406ed2:	(bad)  
  406ed3:	js     0x406ec9
  406ed5:	cwde   
  406ed6:	push   0x48
  406ed8:	fcmovb st,st(5)
  406eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406edb:	jns    0x406f30
  406edd:	jge    0x406f25
  406edf:	pop    edx
  406ee0:	dec    ecx
  406ee1:	mov    ah,0x5d
  406ee3:	mov    ?,edx
  406ee5:	ja     0x406e8e
  406ee7:	mov    DWORD PTR [esi+eax*2-0x60569b06],0xa9ac040
  406ef2:	dec    edi
  406ef3:	cmp    bh,dl
  406ef5:	push   edx
  406ef6:	hlt    
  406ef7:	push   edi
  406ef8:	shl    DWORD PTR [edi+0x5b31ece9],0x91
  406eff:	fwait
  406f00:	(bad)  
  406f01:	sub    al,0x37
  406f03:	xchg   edi,eax
  406f04:	add    edx,DWORD PTR [edx-0x57]
  406f07:	enter  0xee3f,0xce
  406f0b:	mov    esi,0xf060b6d2
  406f10:	dec    edi
  406f11:	jae    0x406ea3
  406f13:	mov    edi,0xa27b59df
  406f18:	in     al,dx
  406f19:	inc    edx
  406f1a:	std    
  406f1b:	mov    eax,ds:0x65617196
  406f20:	mov    ebx,0x783c7de1
  406f25:	dec    ecx
  406f26:	mov    al,ds:0xa7bfe2c9
  406f2b:	push   ecx
  406f2c:	mov    bl,0x85
  406f2e:	rcl    BYTE PTR [esi+0x37db732],cl
  406f34:	fnstenv [ecx+0x3dbd1c33]
  406f3a:	jg     0x406ed9
  406f3c:	push   edx
  406f3d:	ss lahf 
  406f3f:	sahf   
  406f40:	setle  BYTE PTR [ecx+0x397ed7f3]
  406f47:	out    dx,al
  406f48:	mov    ds:0xd3e4568f,al
  406f4d:	fist   WORD PTR cs:[esi+0x6e]
  406f51:	xchg   ecx,eax
  406f52:	push   ss
  406f53:	mov    esi,0xc351f321
  406f58:	ss mov edx,0x50acab38
  406f5e:	mov    edi,0x44a704c9
  406f63:	out    dx,eax
  406f64:	push   es
  406f65:	push   ebp
  406f66:	retf   0x4635
  406f69:	call   0x193ec1eb
  406f6e:	das    
  406f6f:	imul   esi,DWORD PTR [esi],0x24
  406f72:	je     0x406f95
  406f74:	pop    edx
  406f75:	xchg   eax,edi
  406f77:	pop    ecx
  406f78:	jle    0x406ff3
  406f7a:	rcl    BYTE PTR [edx-0x1224fd49],0xe
  406f81:	jns    0x406f35
  406f83:	mov    ds:0xbec31fa0,eax
  406f88:	stos   DWORD PTR es:[edi],eax
  406f89:	mov    ah,0x55
  406f8b:	fs call 0x7b929a8b
  406f91:	in     eax,dx
  406f92:	pop    ss
  406f93:	sbb    DWORD PTR [eax],esp
  406f95:	xor    al,0x5
  406f97:	loop   0x406f90
  406f99:	ss push eax
  406f9b:	push   es
  406f9c:	mov    al,ds:0xf4fec817
  406fa1:	sbb    BYTE PTR [ebp+0x58],ah
  406fa4:	jae    0x407018
  406fa6:	cmp    al,bh
  406fa8:	cmp    bl,0xdd
  406fab:	test   BYTE PTR [ebx+0x4b13b6bc],al
  406fb1:	or     DWORD PTR [edx],ebp
  406fb3:	and    al,0x15
  406fb5:	mov    dl,0x95
  406fb7:	(bad)  
  406fb8:	mov    eax,0xc6ca8a6a
  406fbd:	and    al,0x22
  406fbf:	fadd   QWORD PTR [ebx]
  406fc1:	add    ah,BYTE PTR [ebp+edi*4+0x6c1eb589]
  406fc8:	popa   
  406fc9:	xlat   BYTE PTR ds:[ebx]
  406fca:	sti    
  406fcb:	das    
  406fcc:	loopne 0x406f55
  406fce:	dec    esi
  406fcf:	(bad)  [edi+0x5d158a4d]
  406fd5:	in     eax,dx
  406fd6:	push   0xffffffe4
  406fd8:	test   edx,ecx
  406fda:	scas   eax,DWORD PTR es:[edi]
  406fdb:	push   es
  406fdc:	add    dh,BYTE PTR [esi+edi*4+0x76]
  406fe0:	push   ecx
  406fe1:	cmp    ch,BYTE PTR [esi-0x5c]
  406fe4:	or     ebx,esp
  406fe6:	mov    gs,edi
  406fe8:	ret    
  406fe9:	push   ss
  406fea:	jge    0x407065
  406fec:	jge    0x406f78
  406fee:	and    al,dl
  406ff0:	adc    esi,DWORD PTR [edi+0x35]
  406ff3:	cwde   
  406ff4:	and    eax,edx
  406ff6:	push   esp
  406ff7:	rcr    ch,cl
  406ff9:	cmp    ch,BYTE PTR [esi+0x32]
  406ffc:	stos   BYTE PTR es:[edi],al
  406ffd:	es cmc 
  406fff:	push   si
  407001:	sub    ecx,DWORD PTR [ebx+ecx*8]
  407004:	outs   dx,BYTE PTR ds:[esi]
  407005:	mov    bh,0xc8
  407007:	inc    edx
  407008:	jle    0x407027
  40700a:	xor    al,dh
  40700c:	jno    0x407010
  40700e:	aaa    
  40700f:	sbb    bh,BYTE PTR [eax-0x50]
  407012:	inc    ecx
  407013:	and    edi,esp
  407015:	jnp    0x40702c
  407017:	push   cs
  407018:	lds    esi,FWORD PTR [eax-0x11]
  40701b:	popa   
  40701c:	or     bh,al
  40701e:	js     0x407034
  407020:	or     BYTE PTR [edx-0x4d5cbf75],bh
  407026:	js     0x407001
  407028:	shr    BYTE PTR [ebx+0x237ba26e],0x45
  40702f:	dec    ecx
  407030:	xchg   edi,eax
  407031:	add    eax,0x13e779db
  407036:	adc    al,0xda
  407038:	mov    bh,ch
  40703a:	fwait
  40703b:	inc    esi
  40703c:	leave  
  40703d:	and    ch,BYTE PTR [esi+ecx*4+0x43e83db7]
  407044:	sbb    esp,DWORD PTR [eax-0x46ba56ed]
  40704a:	jl     0x407080
  40704c:	test   DWORD PTR [esi-0x1328d5b9],ebx
  407052:	mov    ch,0xee
  407054:	push   ss
  407055:	inc    ebx
  407056:	cmp    eax,0x9938154f
  40705b:	fadd   QWORD PTR [eax+0x6870a66f]
  407061:	jo     0x407029
  407063:	pusha  
  407064:	mov    ds:0xb8ed49de,al
  407069:	mov    edx,DWORD PTR [edx+ebp*4+0x237097c0]
  407070:	loop   0x407003
  407072:	inc    ecx
  407073:	pop    es
  407074:	clc    
  407075:	xchg   edx,eax
  407076:	cmp    DWORD PTR [edx-0x44b2a378],ecx
  40707c:	xor    al,0x52
  40707e:	jge    0x4070f6
  407080:	xchg   BYTE PTR [edi],dh
  407082:	ret    
  407083:	dec    edx
  407084:	dec    esp
  407085:	mov    al,fs:0xc92be637
  40708b:	add    DWORD PTR [eax+0x2],edx
  40708e:	mov    bh,0xad
  407090:	out    dx,eax
  407091:	add    DWORD PTR [ecx+0x26],esp
  407094:	sub    BYTE PTR [esi+0xa],0x73
  407098:	jl     0x4070b5
  40709a:	inc    esi
  40709b:	and    DWORD PTR [ebx-0x349aba80],edx
  4070a1:	aad    0x59
  4070a3:	sbb    DWORD PTR [edx+0x5e],edi
  4070a6:	cmp    eax,0x7408a799
  4070ab:	test   DWORD PTR [edx+0xb],esp
  4070ae:	xchg   esi,eax
  4070af:	pop    ebx
  4070b0:	clc    
  4070b1:	popa   
  4070b2:	aam    0xa1
  4070b4:	out    dx,al
  4070b5:	ins    BYTE PTR es:[edi],dx
  4070b6:	add    BYTE PTR [esi+0x298b8896],ah
  4070bc:	fmul   QWORD PTR [ecx+ecx*2-0x3b]
  4070c0:	mov    ecx,0xef174c88
  4070c5:	sbb    al,0xb6
  4070c7:	inc    edx
  4070c8:	sbb    DWORD PTR [edi-0x732ebee2],0x7a
  4070cf:	repnz icebp 
  4070d1:	stos   BYTE PTR es:[edi],al
  4070d2:	fs pop ss
  4070d4:	ficom  DWORD PTR [esi-0x4eff9649]
  4070da:	mov    eax,ds:0x360aa2f9
  4070df:	iret   
  4070e0:	xchg   ch,dh
  4070e2:	mov    ah,0xa4
  4070e4:	cli    
  4070e5:	adc    BYTE PTR [esi+0x43fe53c7],dl
  4070eb:	push   0xffffffb7
  4070ed:	loope  0x407104
  4070ef:	pop    esi
  4070f0:	stc    
  4070f1:	add    bh,BYTE PTR [eax-0x64]
  4070f4:	je     0x4070fe
  4070f6:	inc    esi
  4070f7:	xor    al,0x11
  4070f9:	jb     0x407088
  4070fb:	mov    ds:0xbb5dd046,al
  407100:	dec    ebp
  407101:	mov    ds:0x3682f272,al
  407106:	call   0x67345c7c
  40710b:	in     al,dx
  40710c:	and    BYTE PTR [ecx-0x2eb5b01a],0x41
  407113:	inc    esi
  407114:	adc    DWORD PTR [ecx-0x3e960c58],edi
  40711a:	xor    BYTE PTR [eax+ebx*1],dl
  40711d:	repnz dec edi
  40711f:	mov    ds:0x4bcfc368,al
  407124:	pop    ss
  407125:	mov    BYTE PTR [eax],0x9d
  407128:	pop    es
  407129:	or     BYTE PTR [ebx-0x13],bl
  40712c:	xor    BYTE PTR [ecx],bl
  40712e:	nop
  40712f:	dec    edi
  407130:	in     al,0xb8
  407132:	cmp    ah,0xb5
  407135:	mov    DWORD PTR [edi-0x250cebb],ebx
  40713b:	xchg   BYTE PTR [ecx+ebp*4],al
  40713e:	inc    ebp
  40713f:	and    al,0x89
  407141:	mov    ecx,0x46162176
  407146:	mov    bl,0xb1
  407148:	sahf   
  407149:	push   0xffffffd3
  40714b:	push   cs
  40714c:	popa   
  40714d:	ins    BYTE PTR es:[edi],dx
  40714e:	mov    dh,BYTE PTR [ecx]
  407150:	cwde   
  407151:	mov    esi,0x33616f94
  407156:	mov    ds:0x17337503,al
  40715b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40715c:	push   edi
  40715d:	sbb    eax,DWORD PTR [edx+0x21]
  407160:	(bad)  
  407161:	mov    bl,0xc
  407163:	push   0x38
  407165:	mov    ds:0xa015d4bb,eax
  40716a:	pop    ebp
  40716b:	out    0x31,al
  40716d:	jecxz  0x407199
  40716f:	loop   0x40714b
  407171:	cld    
  407172:	out    0x4a,al
  407174:	mov    ch,0x75
  407176:	and    DWORD PTR [ebp-0x453c76b7],edi
  40717c:	les    edx,FWORD PTR [edi+eax*2]
  40717f:	lock pop edi
  407181:	addr16 rol eax,0x6e
  407185:	xlat   BYTE PTR ds:[ebx]
  407186:	repnz scas eax,DWORD PTR es:[edi]
  407188:	inc    ebp
  407189:	xor    ebp,DWORD PTR [ecx]
  40718b:	jg     0x407133
  40718d:	jle    0x40712d
  40718f:	out    dx,al
  407190:	cdq    
  407191:	sbb    BYTE PTR [ebp+0x5c],dl
  407194:	or     ebp,esp
  407196:	jae    0x407164
  407198:	pavgw  mm0,QWORD PTR [edi]
  40719b:	xor    DWORD PTR [ebp+0x2e],edi
  40719e:	mov    al,ds:0x4d09f390
  4071a3:	mov    dl,0xa0
  4071a5:	mov    dl,0x30
  4071a7:	clc    
  4071a8:	icebp  
  4071a9:	imul   ecx,DWORD PTR [ebp+eax*2-0x13],0xffffff82
  4071ae:	bound  ebp,QWORD PTR [esi]
  4071b0:	sbb    edi,esi
  4071b2:	pop    eax
  4071b3:	sbb    BYTE PTR [edx],bl
  4071b5:	iret   
  4071b6:	cmp    al,0x6d
  4071b8:	dec    ebp
  4071b9:	and    DWORD PTR [ebx-0x50701dfd],esi
  4071bf:	call   0x34bea382
  4071c4:	(bad)  
  4071c5:	les    edx,FWORD PTR [eax+0x3abd3b91]
  4071cb:	or     dh,BYTE PTR [edx]
  4071cd:	xor    edi,DWORD PTR [ecx+eax*2-0x42231af5]
  4071d4:	dec    ebp
  4071d5:	inc    edx
  4071d6:	leave  
  4071d7:	fbstp  TBYTE PTR [ecx]
  4071d9:	and    ebp,edi
  4071db:	fiadd  WORD PTR [ebx]
  4071dd:	mov    eax,ds:0xccd741c3
  4071e2:	cli    
  4071e3:	inc    eax
  4071e4:	aas    
  4071e5:	or     eax,0x27fa287a
  4071ea:	pop    ebp
  4071eb:	mov    ebx,0xeab5ffb9
  4071f0:	mov    BYTE PTR ds:0x9ce07ac5,bh
  4071f6:	xchg   esi,eax
  4071f7:	adc    bh,BYTE PTR [eax]
  4071f9:	inc    esi
  4071fa:	arpl   WORD PTR [ecx],bp
  4071fc:	cld    
  4071fd:	xchg   esp,eax
  4071fe:	loope  0x4071f1
  407200:	or     bh,BYTE PTR [ebx-0x47]
  407203:	mov    fs,WORD PTR [ebx-0x387b7b86]
  407209:	leave  
  40720a:	mov    edx,0x1906d87b
  40720f:	mov    eax,ds:0xad86503b
  407214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407215:	test   DWORD PTR [ebx+edi*8],ebx
  407218:	out    dx,al
  407219:	shl    DWORD PTR ds:0x1f7dd83,cl
  40721f:	sub    edx,0xffffff9a
  407222:	xor    ch,BYTE PTR [ebp+0x1]
  407225:	jae    0x40729c
  407227:	xchg   esp,eax
  407228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407229:	xor    cl,BYTE PTR [eax]
  40722b:	cli    
  40722c:	repz pop es
  40722e:	cmp    DWORD PTR [edx+0x651c02c7],ecx
  407234:	or     al,0x2f
  407236:	arpl   WORD PTR [esi*4+0x543f02bd],ax
  40723d:	xchg   esi,eax
  40723e:	test   BYTE PTR [esi],ah
  407240:	rcl    DWORD PTR [edi-0x321f1b94],1
  407246:	sbb    DWORD PTR [esi-0x5e],0x76
  40724a:	and    dh,ch
  40724c:	aam    0xb4
  40724e:	pop    eax
  40724f:	and    eax,0x9c2ec550
  407254:	ret    0xeb90
  407257:	push   edi
  407258:	rep outs dx,BYTE PTR ds:[esi]
  40725a:	test   al,0xec
  40725c:	or     dl,BYTE PTR [ecx]
  40725e:	push   ecx
  40725f:	scas   eax,DWORD PTR es:[edi]
  407260:	adc    ch,BYTE PTR [ebx+0x6f30a4c9]
  407266:	jmp    0xaf0f:0x7da1f597
  40726d:	(bad)  
  40726e:	jmp    0x6714fb4d
  407273:	xchg   ebx,eax
  407274:	lea    ecx,[edx+0x23]
  407277:	repnz in eax,0xa1
  40727a:	pop    eax
  40727b:	out    0x2d,al
  40727d:	inc    edi
  40727e:	jne    0x407216
  407280:	rol    BYTE PTR [esp+ebp*1+0x1e],0xc7
  407285:	stos   BYTE PTR es:[edi],al
  407286:	mov    esp,DWORD PTR [ecx+0x3df215e7]
  40728c:	adc    cl,dh
  40728e:	test   DWORD PTR [esi-0xef89671],0x721afaa6
  407298:	aaa    
  407299:	jle    0x4072e1
  40729b:	cmp    ebx,DWORD PTR [esi+0x6a7b5d08]
  4072a1:	cmp    ch,BYTE PTR [esi]
  4072a3:	mov    edx,0x90a5b35b
  4072a8:	inc    esp
  4072a9:	mov    edx,DWORD PTR [ebx-0x19f2d914]
  4072af:	es dec esi
  4072b1:	daa    
  4072b2:	shl    BYTE PTR [edx-0x56256cea],1
  4072b8:	aam    0x11
  4072ba:	mov    fs,WORD PTR [edi-0x74]
  4072bd:	aam    0x5b
  4072bf:	mov    dh,0xa
  4072c1:	cmp    esi,DWORD PTR [ebx]
  4072c3:	mov    al,dl
  4072c5:	sahf   
  4072c6:	xor    bl,cl
  4072c8:	jmp    0xb988:0x9bdcfd74
  4072cf:	cmc    
  4072d0:	sbb    BYTE PTR [ebx+0x3e],dh
  4072d3:	repnz cdq 
  4072d5:	fidiv  WORD PTR [edi+0x6b77f8a]
  4072db:	and    ebx,eax
  4072dd:	enter  0x72b3,0x6a
  4072e1:	mov    bh,0x47
  4072e3:	fstp   DWORD PTR [esi+esi*4]
  4072e6:	or     BYTE PTR [edi+0x67],dl
  4072e9:	sub    al,0xe9
  4072eb:	dec    eax
  4072ec:	daa    
  4072ed:	aaa    
  4072ee:	xchg   edx,eax
  4072ef:	and    ch,BYTE PTR [eax+edi*4]
  4072f2:	adc    al,0x13
  4072f4:	shr    BYTE PTR [esi-0x12],cl
  4072f7:	mov    ecx,0xc206d45
  4072fc:	or     eax,0x43562e9d
  407301:	(bad)  
  407302:	loope  0x407353
  407304:	or     DWORD PTR [eax-0x6f0266d],edx
  40730a:	jp     0x40729d
  40730c:	mov    ds:0xd4f4a399,eax
  407311:	pop    eax
  407312:	add    dl,al
  407314:	pop    esi
  407315:	xchg   esp,eax
  407316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407317:	je     0x4072c1
  407319:	rcl    BYTE PTR [ebp+0x43],cl
  40731c:	daa    
  40731d:	arpl   WORD PTR [edi+ebp*8],di
  407320:	jne    0x4072f0
  407322:	push   eax
  407323:	pop    eax
  407324:	call   0x60b5:0xc72e535c
  40732b:	fisub  DWORD PTR [ecx-0x6546e01]
  407331:	out    dx,eax
  407332:	push   edx
  407333:	cs or  al,0xe9
  407336:	add    eax,0xb4f03e92
  40733b:	pop    edi
  40733c:	fwait
  40733d:	cmp    dh,BYTE PTR fs:[esi-0x367b0b53]
  407344:	imul   ebp,DWORD PTR [edi],0xffffffbb
  407347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407348:	icebp  
  407349:	sub    cl,ah
  40734b:	jge    0x4073c2
  40734d:	jmp    0x23d7c2a4
  407352:	gs call 0x3f7a:0x4615d480
  40735a:	sub    al,0x9c
  40735c:	sub    BYTE PTR [ecx],al
  40735e:	mov    ecx,0xe6c0be7c
  407363:	add    dl,BYTE PTR [ecx]
  407365:	xlat   BYTE PTR ds:[ebx]
  407366:	retf   0xea7a
  407369:	mov    esi,0x670f1026
  40736e:	mov    DWORD PTR [ebp+0x6b],ebp
  407371:	aas    
  407372:	cmp    al,0xdd
  407374:	cmp    BYTE PTR [eax-0x27],al
  407377:	mov    dh,0x84
  407379:	push   esp
  40737a:	test   DWORD PTR [ebx],0xaf700d64
  407380:	mov    ebx,0xfb8681f
  407385:	push   ss
  407386:	add    BYTE PTR [ecx-0x55],dh
  407389:	dec    ecx
  40738a:	fs dec ebx
  40738c:	inc    ecx
  40738d:	and    eax,0x7466720d
  407392:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  407394:	jl     0x4073e2
  407396:	mov    edi,0xdbfc8b16
  40739b:	jge    0x4073bc
  40739d:	aad    0xf9
  40739f:	push   esp
  4073a0:	push   ebx
  4073a1:	or     eax,0xc469878b
  4073a6:	dec    esi
  4073a7:	imul   edx,DWORD PTR [ebp-0x55b0d38f],0x68
  4073ae:	int3   
  4073af:	jl     0x40735f
  4073b1:	cmp    DWORD PTR [esi-0x144f2d59],esi
  4073b7:	cli    
  4073b8:	push   ebx
  4073b9:	pop    esp
  4073ba:	and    dl,BYTE PTR [esi+ecx*2]
  4073bd:	outs   dx,DWORD PTR ds:[esi]
  4073be:	push   eax
  4073bf:	add    BYTE PTR [eax],ch
  4073c1:	(bad)  
  4073c3:	xor    BYTE PTR [eax+0x3183ec97],bl
  4073c9:	aaa    
  4073ca:	sub    eax,0xd3187b5f
  4073cf:	cli    
  4073d0:	out    dx,al
  4073d1:	les    edx,FWORD PTR [ebp-0x7052be1c]
  4073d7:	xor    ah,BYTE PTR [ebp+eiz*4-0x1b]
  4073db:	lahf   
  4073dc:	mov    ecx,0x3cd3a5cf
  4073e1:	retf   
  4073e2:	push   cs
  4073e3:	bnd jne 0x4073e4
  4073e6:	repnz push ebp
  4073e8:	dec    ecx
  4073e9:	aaa    
  4073ea:	pop    ds
  4073eb:	jae    0x407394
  4073ed:	enter  0x2b67,0xbd
  4073f1:	mov    dh,0x91
  4073f3:	xlat   BYTE PTR ds:[ebx]
  4073f4:	xchg   edi,eax
  4073f5:	mov    ds:0xc6f0ec32,al
  4073fa:	scas   eax,DWORD PTR es:[edi]
  4073fb:	iret   
  4073fc:	test   BYTE PTR [esi],0xe2
  4073ff:	push   es
  407400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407401:	ret    0x854e
  407404:	xchg   ecx,eax
  407405:	jmp    0x407470
  407407:	and    ebx,DWORD PTR [ebx+0x7f]
  40740a:	pusha  
  40740b:	out    dx,eax
  40740c:	and    ecx,DWORD PTR [edx-0x2007b4b4]
  407412:	xchg   DWORD PTR [edx+0xe],eax
  407415:	enter  0x5cee,0xde
  407419:	shl    ebx,0x93
  40741c:	stos   BYTE PTR es:[edi],al
  40741d:	add    ch,0x74
  407420:	or     cl,BYTE PTR [ebx+0x10]
  407423:	add    eax,0x53fb7046
  407428:	mov    dh,0x1a
  40742a:	test   dh,bh
  40742c:	retf   
  40742d:	pop    ss
  40742e:	dec    ecx
  40742f:	jp     0x4073cc
  407431:	mov    esi,0xe6026f01
  407436:	mov    ah,0x5c
  407438:	push   esi
  407439:	fs scas eax,DWORD PTR es:[edi]
  40743b:	je     0x407439
  40743d:	push   0xeb9ef1e4
  407442:	jmp    0xf521:0xdb96a320
  407449:	jp     0x4073ec
  40744b:	mov    al,ds:0x8d3c4567
  407450:	xor    ah,bh
  407452:	addr16 pusha 
  407454:	aad    0x58
  407456:	stos   DWORD PTR es:[edi],eax
  407457:	jns    0x4074a6
  407459:	mov    ah,BYTE PTR [eax+0x31f51947]
  40745f:	mov    ds:0x353ad127,al
  407464:	dec    ecx
  407465:	mov    ds,esp
  407467:	ror    DWORD PTR [ecx],cl
  407469:	imul   ebp,esi,0x437eefec
  40746f:	sbb    DWORD PTR [esi-0x4],ebx
  407472:	push   ss
  407473:	sti    
  407474:	xchg   esp,eax
  407475:	adc    DWORD PTR [eax-0x16ab58ca],0xffffffe3
  40747c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40747e:	sbb    BYTE PTR [edx],0x2d
  407481:	xchg   edi,eax
  407482:	(bad)  
  407483:	xchg   ebp,eax
  407484:	out    dx,eax
  407485:	mov    ch,0x48
  407487:	nop
  407488:	int3   
  407489:	xor    al,0x6b
  40748b:	dec    eax
  40748c:	cmp    BYTE PTR cs:[ebp+0x76265cec],0x37
  407494:	dec    ebx
  407495:	lods   eax,DWORD PTR ds:[esi]
  407496:	(bad)  
  407497:	adc    BYTE PTR [edx+0x1509a4dc],ah
  40749d:	aas    
  40749e:	sbb    dl,bh
  4074a0:	int    0xe6
  4074a2:	cmp    cl,BYTE PTR [ecx+0xb]
  4074a5:	xor    eax,0xe1ab133d
  4074aa:	jae    0x4074d7
  4074ac:	cli    
  4074ad:	test   DWORD PTR [esi+0x51b47b8a],eax
  4074b3:	nop
  4074b4:	add    al,0x3f
  4074b6:	ja     0x40743a
  4074b8:	sbb    eax,0x6c037441
  4074bd:	adc    eax,0x792fcf8e
  4074c2:	loop   0x407515
  4074c4:	push   es
  4074c5:	xchg   edi,eax
  4074c6:	pusha  
  4074c7:	add    dl,dh
  4074c9:	aam    0x63
  4074cb:	ret    
  4074cc:	test   al,0x3a
  4074ce:	sbb    eax,DWORD PTR [ecx]
  4074d0:	mov    esp,0x5a67b4d7
  4074d5:	xchg   ebx,eax
  4074d6:	(bad)  
  4074d8:	mov    esi,0xe0bba967
  4074dd:	mov    ebx,0x3682ebb3
  4074e2:	inc    eax
  4074e3:	xchg   esi,eax
  4074e4:	lea    edi,[edx]
  4074e6:	sbb    al,BYTE PTR [ebx]
  4074e8:	call   0x69a88184
  4074ed:	mov    esi,0x97662f3d
  4074f2:	call   FWORD PTR [esi+0x7390c27e]
  4074f8:	fild   QWORD PTR [edx-0x74bdc14c]
  4074fe:	stos   BYTE PTR es:[edi],al
  4074ff:	arpl   WORD PTR [edi+0x493c136e],ax
  407505:	(bad)  
  407506:	push   edx
  407507:	out    dx,eax
  407508:	ja     0x4074d9
  40750a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40750b:	adc    cl,BYTE PTR [ecx-0x6f84d8ea]
  407511:	pushf  
  407512:	bound  eax,QWORD PTR [eax-0xd11e4a3]
  407518:	xor    bh,BYTE PTR [ebx+0x387d9ab3]
  40751e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40751f:	out    dx,eax
  407520:	retf   0x1a50
  407523:	(bad)  
  407524:	or     al,0x57
  407526:	add    esp,ebx
  407528:	cmp    eax,0xa5956f0c
  40752d:	push   esi
  40752e:	jns    0x4074d6
  407530:	scas   al,BYTE PTR es:[edi]
  407531:	scas   al,BYTE PTR es:[edi]
  407532:	push   es
  407533:	test   BYTE PTR [ebx],al
  407535:	pop    ecx
  407536:	cmp    dl,BYTE PTR [esi+0x2547e47]
  40753c:	mov    cs,WORD PTR [ebp+ebx*1-0x26]
  407540:	out    0x56,eax
  407542:	dec    ebp
  407543:	ja     0x4075a5
  407545:	xor    ch,BYTE PTR [edx]
  407547:	ficomp DWORD PTR [ebx-0x7acb4577]
  40754d:	fdiv   DWORD PTR [ecx-0x25]
  407550:	push   esp
  407551:	add    BYTE PTR [ebp-0x2b],bh
  407554:	dec    ebx
  407555:	or     DWORD PTR [ebp-0x226011cb],0x7d31d2bf
  40755f:	adc    ch,BYTE PTR [edi-0x321f81a2]
  407565:	div    DWORD PTR [eax+eiz*4]
  407568:	adc    BYTE PTR [ebp+0x31983bee],0xb
  40756f:	push   ebx
  407570:	enter  0xe2ed,0xfb
  407574:	popf   
  407575:	jnp    0x40752f
  407577:	xor    BYTE PTR [esi+0x2a5cfc31],0x16
  40757e:	jecxz  0x4075cc
  407580:	xor    DWORD PTR ds:0x2a8ba810,ebp
  407586:	hlt    
  407587:	ret    
  407588:	lahf   
  407589:	push   ebx
  40758a:	aam    0xf8
  40758c:	xchg   edx,eax
  40758d:	and    BYTE PTR [esi+0x46ece7c4],0xdb
  407594:	pop    eax
  407595:	test   DWORD PTR [edx-0x51],esp
  407598:	push   edx
  407599:	ret    0xae30
  40759c:	push   edx
  40759d:	retf   
  40759e:	shr    ebx,0x19
  4075a1:	sbb    eax,0x54512a13
  4075a6:	mov    edx,DWORD PTR [edi-0x44d0947e]
  4075ac:	cmp    al,0xc7
  4075ae:	pop    edx
  4075af:	cmp    al,0xa8
  4075b1:	ins    BYTE PTR es:[edi],dx
  4075b2:	mov    DWORD PTR ds:0x5c6beba4,ecx
  4075b8:	and    eax,0x22bd9201
  4075bd:	cdq    
  4075be:	cs cmp ah,dh
  4075c1:	add    edi,edi
  4075c3:	pusha  
  4075c4:	aaa    
  4075c5:	push   0x9e3c1b98
  4075ca:	jg     0x40760c
  4075cc:	ret    
  4075cd:	dec    ebx
  4075ce:	pop    eax
  4075cf:	enter  0x3ad4,0x96
  4075d3:	out    dx,eax
  4075d4:	adc    al,0x71
  4075d6:	(bad)  
  4075d7:	mov    al,0xf8
  4075d9:	in     al,0xb4
  4075db:	sub    BYTE PTR [esi-0x6ef1865],bh
  4075e1:	push   ebp
  4075e2:	sti    
  4075e3:	xor    al,0x36
  4075e5:	imul   ecx,DWORD PTR [ebx],0x1cce4237
  4075eb:	mov    esp,0x245b7bf0
  4075f0:	(bad)  
  4075f1:	jmp    0x407646
  4075f3:	data16 jecxz 0x407615
  4075f6:	inc    ecx
  4075f7:	xor    dl,ah
  4075f9:	jg     0x4075ef
  4075fb:	or     al,0x74
  4075fd:	retf   0x95e
  407600:	push   edi
  407601:	test   al,0x40
  407603:	pop    ebp
  407604:	test   BYTE PTR [ecx+ecx*4+0x4fb1264a],ah
  40760b:	dec    esi
  40760c:	add    BYTE PTR [eax],0xa5
  40760f:	mov    ah,0x1f
  407611:	aam    0x5
  407613:	gs xchg edx,eax
  407615:	jb     0x407695
  407617:	test   al,0xe6
  407619:	adc    eax,ecx
  40761b:	fst    QWORD PTR [eax]
  40761d:	out    dx,al
  40761e:	xchg   esi,eax
  40761f:	outs   dx,DWORD PTR ds:[esi]
  407620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407621:	push   ebp
  407622:	add    eax,0x17cd4e6c
  407627:	stos   DWORD PTR es:[edi],eax
  407628:	jmp    0xaee62c1c
  40762d:	fist   WORD PTR [edx+edx*2]
  407630:	mov    ecx,0x34a19f29
  407635:	fucomip st,st(1)
  407637:	outs   dx,DWORD PTR ds:[esi]
  407638:	adc    ecx,esp
  40763a:	loope  0x407643
  40763c:	dec    ebp
  40763d:	stos   BYTE PTR es:[edi],al
  40763e:	out    dx,al
  40763f:	jne    0x407687
  407641:	inc    eax
  407642:	jae    0x40765d
  407644:	push   ss
  407645:	sar    dl,cl
  407647:	inc    edi
  407648:	repnz push 0xffffffa9
  40764b:	mov    ds:0xc2b9437e,eax
  407650:	add    ebp,DWORD PTR [edi+0x65]
  407653:	imul   ebp,DWORD PTR [ebx-0x1b],0xe40c6987
  40765a:	pop    esi
  40765b:	mov    dl,BYTE PTR [edx+0x31]
  40765e:	mov    ebp,0x9313c0ec
  407663:	mov    al,0x8c
  407665:	mov    eax,0xc2492d41
  40766a:	pusha  
  40766b:	aad    0x11
  40766d:	hlt    
  40766e:	dec    ebp
  40766f:	ficomp DWORD PTR [esi-0x54]
  407672:	adc    eax,0x3154b65c
  407677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407678:	mov    ah,0x27
  40767a:	xor    DWORD PTR [eax],0x3aaba6
  407680:	and    DWORD PTR [esi],0xb01b3845
  407686:	cli    
  407687:	sub    al,0x21
  407689:	mov    cl,ch
  40768b:	push   es
  40768c:	test   al,0x4f
  40768e:	mov    bl,0x63
  407690:	cmp    al,0x78
  407692:	jns    0x407679
  407694:	and    BYTE PTR [ebx+eiz*1],bl
  407697:	sub    BYTE PTR [ebp+0x7c],ah
  40769a:	shl    BYTE PTR [eax],cl
  40769c:	pop    ebp
  40769d:	jle    0x407634
  40769f:	or     DWORD PTR [esi],edx
  4076a1:	fwait
  4076a2:	pop    edx
  4076a3:	sub    ch,0x31
  4076a6:	xchg   edi,eax
  4076a7:	shl    DWORD PTR [eax-0x1a],1
  4076aa:	into   
  4076ab:	call   0x6171:0xb859c9c0
  4076b2:	inc    edx
  4076b3:	sbb    DWORD PTR [esi-0x1254a068],0xffffffdb
  4076ba:	push   ebx
  4076bb:	push   ebp
  4076bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076bd:	hlt    
  4076be:	ins    DWORD PTR es:[edi],dx
  4076bf:	jbe    0x40767b
  4076c1:	int3   
  4076c2:	add    DWORD PTR [edi+0x3cd85590],esp
  4076c8:	xor    al,0x7b
  4076ca:	pop    edi
  4076cb:	dec    esp
  4076cc:	mov    edi,0xce6bd44a
  4076d1:	cmp    BYTE PTR [ebx+0x8f11ba5],al
  4076d7:	dec    ecx
  4076d8:	push   edi
  4076d9:	shr    BYTE PTR [edi+0x15],cl
  4076dc:	xor    esp,DWORD PTR [eax]
  4076de:	jnp    0x40772a
  4076e0:	add    al,0xd6
  4076e2:	imul   edi,DWORD PTR [esp+edi*2-0x2a303af7],0x8d62c664
  4076ed:	fild   WORD PTR [ecx-0x1b]
  4076f0:	jne    0x407750
  4076f2:	xchg   ecx,eax
  4076f3:	loopne 0x4076a2
  4076f5:	sub    eax,0xd1edaff5
  4076fa:	fst    DWORD PTR [edi]
  4076fc:	or     eax,0xae65fb31
  407701:	mov    ebp,0x1dfaac5a
  407706:	add    esi,DWORD PTR [ecx+esi*2+0x28]
  40770a:	daa    
  40770b:	adc    DWORD PTR [edi],ecx
  40770d:	mov    eax,ds:0xe91732d0
  407712:	test   DWORD PTR [ebp+0x293b5fd5],ebx
  407718:	ficom  WORD PTR [ebp-0xe]
  40771b:	fistp  QWORD PTR [edx+edi*2+0x6d07cc01]
  407722:	js     0x407702
  407724:	xchg   edx,eax
  407725:	sti    
  407726:	loopne 0x4076cb
  407728:	cld    
  407729:	mov    dh,0x7c
  40772b:	sbb    ah,ch
  40772d:	lds    ebx,FWORD PTR [edi]
  40772f:	add    al,0x20
  407731:	out    dx,al
  407732:	(bad)  
  407733:	or     dl,bh
  407735:	dec    esi
  407736:	je     0x40775b
  407738:	seta   BYTE PTR [eax+0x16f2a37b]
  40773f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407740:	and    eax,0x674c307e
  407745:	lock inc ebx
  407747:	mov    ah,0x4e
  407749:	fcomp  DWORD PTR [ebp-0x44325e1e]
  40774f:	in     eax,0xe9
  407751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407752:	cli    
  407753:	cmp    DWORD PTR [esi-0x3fbd344a],0x63
  40775a:	fcom   QWORD PTR [ebx-0x65654ef2]
  407760:	adc    bl,al
  407762:	xor    DWORD PTR [ebx],ebx
  407764:	stos   DWORD PTR es:[edi],eax
  407765:	jb     0x40770d
  407767:	retf   
  407768:	and    eax,0xcf50e381
  40776d:	outs   dx,BYTE PTR ds:[esi]
  40776e:	jp     0x407714
  407770:	loop   0x407782
  407772:	inc    edx
  407773:	ins    DWORD PTR es:[edi],dx
  407774:	push   es
  407775:	rcr    DWORD PTR [eax],1
  407777:	mov    ah,0xb3
  407779:	sbb    eax,0x4a1f047d
  40777e:	and    bl,ah
  407780:	push   ecx
  407781:	ins    DWORD PTR es:[edi],dx
  407782:	or     al,0xac
  407784:	addr16 dec edx
  407786:	mov    DWORD PTR [esi+0x289e66a9],0x6a5378b4
  407790:	test   BYTE PTR [edx+0x30],dh
  407793:	push   eax
  407794:	push   0xca455966
  407799:	add    DWORD PTR [ecx+0x7d],ebp
  40779c:	adc    eax,0x837ad31
  4077a1:	xchg   edi,eax
  4077a2:	in     eax,0x6
  4077a4:	ds jbe 0x4077be
  4077a7:	pop    edi
  4077a8:	cwde   
  4077a9:	mov    ds:0x89f730bc,al
  4077ae:	retf   0xd4a1
  4077b1:	inc    edi
  4077b2:	add    al,0xe9
  4077b4:	fdiv   DWORD PTR [edi]
  4077b6:	mov    ds:0x8d5116c1,al
  4077bb:	imul   esi,DWORD PTR [ecx+0x7f911fc4],0x6074ca2f
  4077c5:	data16 stos BYTE PTR es:[edi],al
  4077c7:	mov    edi,0x63f66af4
  4077cc:	push   ds
  4077cd:	ja     0x80ae5b49
  4077d3:	cs jb  0x4077eb
  4077d6:	test   BYTE PTR [edi-0x44c57e89],ah
  4077dc:	add    ah,BYTE PTR [esi-0x20]
  4077df:	jmp    0x4077eb
  4077e1:	div    DWORD PTR [ebp-0x5d]
  4077e4:	ficom  DWORD PTR [ebx-0xe227838]
  4077ea:	dec    eax
  4077eb:	das    
  4077ec:	jbe    0x4077c5
  4077ee:	lods   eax,DWORD PTR ds:[esi]
  4077ef:	jg     0x407843
  4077f1:	popf   
  4077f2:	adc    dh,bh
  4077f4:	and    DWORD PTR [ecx+0x5606a9b2],ebx
  4077fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077fb:	repnz aas 
  4077fd:	add    BYTE PTR [esi],bl
  4077ff:	mov    ebp,?
  407801:	xor    ecx,DWORD PTR [eax-0x69eda805]
  407807:	inc    esp
  407808:	scas   eax,DWORD PTR es:[edi]
  407809:	add    edi,edi
  40780b:	mul    ch
  40780d:	stos   DWORD PTR es:[edi],eax
  40780e:	nop
  40780f:	push   ecx
  407810:	lea    eax,[ebx]
  407812:	outs   dx,BYTE PTR ds:[esi]
  407813:	lods   al,BYTE PTR ds:[esi]
  407814:	shl    BYTE PTR [esi-0x3e],0xa2
  407818:	sub    dh,BYTE PTR [ebx-0x521ed47f]
  40781e:	iret   
  40781f:	push   ecx
  407820:	mov    bl,0xc2
  407822:	out    0xf1,eax
  407824:	test   eax,0x72c0b37b
  407829:	pusha  
  40782a:	mov    bl,0xdd
  40782c:	popf   
  40782d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40782e:	imul   esp,edi,0xffffffce
  407831:	out    dx,al
  407832:	push   eax
  407833:	je     0x407811
  407835:	lds    ebx,FWORD PTR [edi]
  407837:	loopne 0x40783d
  407839:	inc    edx
  40783a:	iret   
  40783b:	jnp    0x40788f
  40783d:	lods   al,BYTE PTR ds:[esi]
  40783e:	xchg   edi,eax
  40783f:	popa   
  407840:	jl     0x4077c8
  407842:	stos   BYTE PTR es:[edi],al
  407843:	mov    edx,0xc64becce
  407848:	fisub  DWORD PTR [ebx]
  40784a:	ror    al,0x7
  40784d:	jg     0x4078c5
  40784f:	enter  0xfb30,0xf9
  407853:	mov    eax,0xaf85777
  407858:	out    dx,eax
  407859:	test   al,0xd4
  40785b:	or     bl,bh
  40785d:	push   ds
  40785e:	shl    BYTE PTR [ebp-0x54],0x22
  407862:	adc    eax,0x900e031d
  407867:	ror    DWORD PTR [ebp-0x4d],0x66
  40786b:	fimul  WORD PTR [ebx]
  40786d:	ja     0x40785b
  40786f:	mov    ss,WORD PTR ds:0x8301991e
  407875:	mov    ds:0x1e2de54f,al
  40787a:	cmp    DWORD PTR [ebx],ebp
  40787c:	pop    esp
  40787d:	loopne 0x4078ed
  40787f:	loop   0x40789d
  407881:	push   ebx
  407882:	sbb    BYTE PTR [bx+di+0x2a2],0x81
  407888:	iret   
  407889:	xlat   BYTE PTR ds:[ebx]
  40788a:	inc    ecx
  40788b:	mov    ecx,DWORD PTR [eiz*4-0x28a93d70]
  407892:	and    BYTE PTR [edi],dl
  407894:	inc    edx
  407895:	cmp    BYTE PTR [edx+ebx*1-0xed34a36],ah
  40789c:	xor    eax,0x20aab99
  4078a1:	(bad)  
  4078a2:	shl    DWORD PTR [edi-0x24],0x26
  4078a6:	jb     0x407872
  4078a8:	dec    ebp
  4078a9:	pop    edi
  4078aa:	jle    0x40789c
  4078ac:	inc    eax
  4078ad:	xchg   ebx,eax
  4078ae:	out    dx,al
  4078af:	(bad)  
  4078b0:	ret    0x5b7
  4078b3:	push   ebx
  4078b4:	int    0x99
  4078b6:	push   ss
  4078b7:	jmp    0x670d:0xe6c70a54
  4078be:	std    
  4078bf:	mov    ebp,0x51c29687
  4078c4:	xchg   dl,dl
  4078c6:	cwde   
  4078c7:	inc    esp
  4078c8:	stos   DWORD PTR es:[edi],eax
  4078c9:	fwait
  4078ca:	xchg   ecx,eax
  4078cb:	sbb    DWORD PTR ds:0xf2036812,eax
  4078d1:	std    
  4078d2:	stc    
  4078d3:	pop    ebx
  4078d4:	mov    eax,ds:0x18721e67
  4078d9:	fadd   DWORD PTR [ecx]
  4078db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078dc:	sub    al,0x3b
  4078de:	out    dx,al
  4078df:	mov    cl,0x9c
  4078e1:	xor    cl,BYTE PTR ds:0xae568e78
  4078e7:	push   ds
  4078e8:	xor    DWORD PTR [edx],ebx
  4078ea:	cmp    dh,dl
  4078ec:	inc    ebp
  4078ed:	mov    ch,0x3f
  4078ef:	add    DWORD PTR [ebp+ebp*2-0x41],0x9255dcd3
  4078f7:	adc    ch,ah
  4078f9:	cmp    BYTE PTR [ebp+0x3c],dl
  4078fc:	push   es
  4078fd:	jbe    0x40796d
  4078ff:	xchg   ecx,eax
  407900:	dec    ecx
  407901:	xchg   ecx,eax
  407902:	and    BYTE PTR [ebp+0x65],bl
  407905:	gs jecxz 0x407909
  407908:	push   0x6cc01630
  40790d:	adc    ch,al
  40790f:	ret    
  407910:	dec    esp
  407911:	mov    edi,0x47f769c2
  407916:	add    DWORD PTR [ebp+0x3e],ecx
  407919:	sbb    eax,0xdd0096da
  40791e:	xchg   ecx,eax
  40791f:	sub    eax,0xae62d2b5
  407924:	dec    edi
  407925:	iret   
  407926:	cmp    al,0xea
  407928:	adc    eax,0x4217f827
  40792d:	and    DWORD PTR [ebx-0x4b6acaa9],ecx
  407933:	xchg   esi,eax
  407934:	scas   eax,DWORD PTR es:[edi]
  407935:	mov    ds:0x1574ffe6,eax
  40793a:	sar    BYTE PTR [edi-0x336fce9b],1
  407940:	cdq    
  407941:	mov    cl,BYTE PTR [edi-0x37455f1f]
  407947:	ror    DWORD PTR [ecx-0x80],cl
  40794a:	mov    eax,ds:0xdb893b67
  40794f:	stc    
  407950:	mov    ebp,0x5aa9f1ed
  407955:	push   eax
  407956:	call   0x403bef52
  40795b:	dec    eax
  40795c:	out    dx,al
  40795d:	div    BYTE PTR [ebx+eax*1]
  407960:	retf   
  407961:	adc    dl,BYTE PTR [eax-0x6b]
  407964:	cs inc ecx
  407966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407967:	inc    ebx
  407968:	mov    cl,0xcf
  40796a:	mov    ds:0x609654e7,al
  40796f:	cld    
  407970:	mov    esp,0x7c2b1a26
  407975:	int3   
  407976:	adc    dl,0x7f
  407979:	test   DWORD PTR [ebx-0x66ce3431],esp
  40797f:	dec    ebp
  407980:	retf   
  407981:	sub    DWORD PTR [ebp+edx*1-0x24a2c27d],eax
  407988:	jle    0x4079f2
  40798a:	shr    esi,1
  40798c:	jbe    0x407959
  40798e:	push   eax
  40798f:	pop    edi
  407990:	mov    ds:0x577ac920,al
  407995:	jbe    0x4079ab
  407997:	inc    edi
  407998:	mov    esp,0xe8d08f32
  40799d:	sbb    DWORD PTR [edx-0xc57d108],edx
  4079a3:	out    0x75,eax
  4079a5:	(bad)  
  4079a6:	loopne 0x407984
  4079a8:	pop    ebx
  4079a9:	shl    eax,cl
  4079ab:	in     eax,dx
  4079ac:	jo     0x4079eb
  4079ae:	stc    
  4079af:	mov    ds:0xc0bd9242,eax
  4079b4:	mov    edi,0x6b5cbcb2
  4079b9:	pop    edi
  4079ba:	mov    DWORD PTR [ebp-0x310191a2],ecx
  4079c0:	nop
  4079c1:	xor    BYTE PTR [esi+ebx*2],cl
  4079c4:	scas   al,BYTE PTR es:[edi]
  4079c5:	add    eax,0xac1922f1
  4079ca:	push   ds
  4079cb:	jp     0x40796b
  4079cd:	cmp    eax,0x3d01ec99
  4079d2:	mov    ds:0x7a8317f3,eax
  4079d7:	daa    
  4079d8:	cld    
  4079d9:	cli    
  4079da:	(bad)  
  4079dd:	push   ebp
  4079de:	sbb    DWORD PTR [edi+edi*8+0x5c904f10],ebp
  4079e5:	icebp  
  4079e6:	sub    ah,BYTE PTR [ecx-0x73]
  4079e9:	xor    cl,0x62
  4079ec:	enter  0x366,0xf4
  4079f0:	push   cs
  4079f1:	scas   eax,DWORD PTR es:[edi]
  4079f2:	sar    DWORD PTR [ecx],1
  4079f4:	or     ebx,DWORD PTR [ebp-0x47972e6c]
  4079fa:	into   
  4079fb:	push   ebx
  4079fc:	pop    ds
  4079fd:	ficom  WORD PTR [eax+0x5d754820]
  407a03:	pop    eax
  407a04:	jno    0x407a42
  407a06:	fdiv   QWORD PTR [edi+ecx*1+0x5c]
  407a0a:	mov    ch,0x63
  407a0c:	cmp    BYTE PTR [ebx+ecx*4-0x32741875],ch
  407a13:	mov    eax,ds:0x7101a3c
  407a18:	(bad)  
  407a19:	sbb    bh,dh
  407a1b:	mov    ds:0xab1543b9,al
  407a20:	inc    eax
  407a21:	pusha  
  407a22:	cmp    eax,0x65b76ae4
  407a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a28:	adc    ch,bl
  407a2a:	mov    ds:0xc230d8e0,al
  407a2f:	test   BYTE PTR [ecx+0x7ea10045],bh
  407a35:	jmp    0x681a:0xac041d7e
  407a3c:	dec    esp
  407a3d:	pop    edx
  407a3e:	pop    eax
  407a3f:	retf   0x3d18
  407a42:	fmul   DWORD PTR [ecx+0x71]
  407a45:	sbb    BYTE PTR [edx],0x82
  407a48:	aaa    
  407a49:	daa    
  407a4a:	mov    ch,0xd0
  407a4c:	lods   al,BYTE PTR ds:[esi]
  407a4d:	cld    
  407a4e:	xchg   DWORD PTR [eax+eax*2+0x0],edx
  407a52:	fdivrp st(7),st
  407a54:	bound  esp,QWORD PTR [eax-0x56b6fff3]
  407a5a:	test   al,0x87
  407a5c:	or     edx,DWORD PTR ds:0x2d115079
  407a62:	push   edi
  407a63:	shl    DWORD PTR [ebp+0x1a6087fa],0x62
  407a6a:	mov    dh,ch
  407a6c:	pop    ecx
  407a6d:	aad    0xc4
  407a6f:	inc    edx
  407a70:	call   0x17f3c92e
  407a75:	add    dh,ch
  407a77:	xor    BYTE PTR [ebx-0x79cb4e90],cl
  407a7d:	out    0x7,eax
  407a7f:	jecxz  0x407ae1
  407a81:	inc    ebp
  407a82:	mov    ah,0x53
  407a84:	js     0x407a86
  407a86:	in     al,0x33
  407a88:	jg     0x407a4c
  407a8a:	sar    BYTE PTR [ebp-0x49],cl
  407a8d:	xchg   edi,eax
  407a8e:	repz lahf 
  407a90:	or     al,ah
  407a92:	fdiv   st,st(6)
  407a94:	push   bp
  407a96:	sbb    al,0xd2
  407a98:	mov    edi,0x3a52b1db
  407a9d:	cmp    eax,0x3f78b993
  407aa2:	iret   
  407aa3:	cmp    dl,al
  407aa5:	xchg   esp,eax
  407aa6:	retf   0x3f3b
  407aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aaa:	sub    al,0x58
  407aac:	jecxz  0x407a44
  407aae:	inc    edi
  407aaf:	or     DWORD PTR [edi],esp
  407ab1:	dec    edi
  407ab2:	fnstcw WORD PTR [edi]
  407ab4:	int    0x9e
  407ab6:	add    ebx,DWORD PTR [ecx-0x6108ed90]
  407abc:	cmp    esp,edi
  407abe:	xor    dl,BYTE PTR [eax-0x2d279e8d]
  407ac4:	mov    ah,0xe7
  407ac6:	in     eax,0x10
  407ac8:	push   esp
  407ac9:	lods   eax,DWORD PTR ds:[esi]
  407aca:	push   esi
  407acb:	scas   al,BYTE PTR es:[edi]
  407acc:	xor    al,dl
  407ace:	mov    ebp,0x6c4203a2
  407ad3:	div    DWORD PTR [edx-0x58cf9a2b]
  407ad9:	test   DWORD PTR [esi-0x5ec7a5ca],0x89d49530
  407ae3:	js     0x407af6
  407ae5:	dec    esi
  407ae6:	pop    edx
  407ae7:	inc    ecx
  407ae8:	mov    ah,0xf2
  407aea:	inc    esi
  407aeb:	pop    ds
  407aec:	fsub   st(2),st
  407aee:	mov    gs,esp
  407af0:	frstpm(287 only) 
  407af2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  407af4:	cmc    
  407af5:	sbb    al,0x8d
  407af7:	addr16 mov esi,0xc6def741
  407afd:	cld    
  407afe:	cmp    ch,cl
  407b00:	jle    0x407b5a
  407b02:	inc    esp
  407b03:	pop    edi
  407b04:	(bad)  
  407b05:	das    
  407b06:	mov    ecx,0x9f89c129
  407b0b:	ret    
  407b0c:	or     ebp,ebp
  407b0e:	push   ebp
  407b0f:	test   DWORD PTR [esi+0x1fe03eba],0xa87a1a0e
  407b19:	mov    ecx,0x10a8aa55
  407b1e:	mov    ah,0xba
  407b20:	mov    bl,0x91
  407b22:	pop    eax
  407b23:	push   ss
  407b24:	xchg   edi,eax
  407b25:	and    cl,BYTE PTR [ecx-0x5ebbb888]
  407b2b:	ds out 0x78,al
  407b2e:	loopne 0x407b79
  407b30:	mov    esp,0xd92f3ca4
  407b35:	mov    ds:0xb9751f05,al
  407b3a:	ror    BYTE PTR [eax-0x1ed87fe4],1
  407b40:	push   esp
  407b41:	rol    BYTE PTR [edi-0x6c],cl
  407b44:	adc    bh,bl
  407b46:	leave  
  407b47:	sahf   
  407b48:	jbe    0x407ae9
  407b4a:	aam    0xf4
  407b4c:	or     cl,BYTE PTR [edx+0x37]
  407b4f:	fistp  WORD PTR [edi]
  407b51:	data16 (bad) 
  407b53:	std    
  407b54:	mov    eax,0x1747ff3
  407b59:	mov    esp,esi
  407b5b:	cmp    cl,BYTE PTR [eax+eiz*1]
  407b5e:	or     esp,DWORD PTR [ecx+0x26d74a68]
  407b64:	mov    edx,DWORD PTR cs:[ecx+0x387e4d9a]
  407b6b:	mov    ds:0xa2e71727,al
  407b70:	push   esp
  407b71:	mov    ds:0xf82594ff,eax
  407b76:	test   DWORD PTR [edx+0x7ef3e5e4],esp
  407b7c:	push   es
  407b7d:	(bad)
  407b80:	ret    0xe450
  407b83:	xlat   BYTE PTR ds:[ebx]
  407b84:	or     BYTE PTR [eax],al
  407b86:	inc    ebp
  407b87:	and    al,0x7
  407b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b8a:	test   al,0x53
  407b8c:	stc    
  407b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b8e:	xchg   esp,eax
  407b8f:	xchg   BYTE PTR [eax-0x41c95162],dh
  407b95:	sahf   
  407b96:	mov    ah,0x50
  407b98:	mov    dl,0xa0
  407b9a:	fidivr WORD PTR [esi]
  407b9c:	rcr    DWORD PTR ds:0xbcce0e4,1
  407ba2:	out    dx,eax
  407ba3:	adc    eax,0xde540fc9
  407ba8:	sbb    DWORD PTR [edx+0x27a821b3],ebx
  407bae:	out    dx,al
  407baf:	das    
  407bb0:	stos   BYTE PTR es:[edi],al
  407bb1:	fadd   DWORD PTR [edi]
  407bb3:	jle    0x407b93
  407bb5:	pop    ebp
  407bb6:	mov    BYTE PTR [ecx],bl
  407bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bb9:	fnstenv [edx]
  407bbb:	mov    esp,0x30e7349e
  407bc0:	imul   esi,DWORD PTR ds:0xdeef9cfa,0xa0ba3c43
  407bca:	mov    BYTE PTR [eax],ch
  407bcc:	sbb    DWORD PTR [edx-0x2c],0xffffffc0
  407bd0:	jp     0x407b62
  407bd2:	xchg   esp,eax
  407bd3:	mov    ah,0x42
  407bd5:	inc    edx
  407bd6:	hlt    
  407bd7:	scas   al,BYTE PTR es:[edi]
  407bd8:	xchg   ebx,eax
  407bd9:	aad    0x59
  407bdb:	sahf   
  407bdc:	(bad)  
  407bdd:	fiadd  DWORD PTR [ebp-0x8]
  407be0:	call   0xd1706234
  407be5:	inc    ebx
  407be6:	mov    bh,0xfa
  407be8:	pop    eax
  407be9:	lahf   
  407bea:	dec    ecx
  407beb:	push   ss
  407bec:	jns    0x407bea
  407bee:	adc    bh,al
  407bf0:	popf   
  407bf1:	fucomi st,st(1)
  407bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bf4:	inc    eax
  407bf5:	pop    ss
  407bf6:	mov    dh,0xd0
  407bf8:	repz xor cl,BYTE PTR [esi]
  407bfb:	sub    DWORD PTR [ecx],0xffffffc6
  407bfe:	cmp    ebp,DWORD PTR [ebp-0x6]
  407c01:	inc    eax
  407c02:	mov    al,gs:0x9a23c986
  407c08:	ror    DWORD PTR [ebx+ebp*4],0x55
  407c0c:	add    eax,0x52956175
  407c11:	sbb    BYTE PTR [edi],al
  407c13:	sahf   
  407c14:	neg    BYTE PTR [edi+ecx*1+0x38b915f2]
  407c1b:	sbb    BYTE PTR [ebx-0x47b933f6],0xb4
  407c22:	jle    0x407c35
  407c24:	pop    DWORD PTR [eax]
  407c26:	sub    ch,dl
  407c28:	mov    bh,0xd9
  407c2a:	push   ebx
  407c2b:	adc    al,0x1c
  407c2d:	sbb    BYTE PTR [edi-0x7992fe46],dh
  407c33:	sub    dl,dl
  407c35:	sbb    BYTE PTR [edi-0x5d617d6e],cl
  407c3b:	(bad)  
  407c3c:	xor    eax,0xbef0a38f
  407c41:	fstp   QWORD PTR [edi]
  407c43:	cli    
  407c44:	xor    al,BYTE PTR [eax]
  407c46:	jecxz  0x407c1d
  407c48:	dec    ebx
  407c49:	pop    esi
  407c4a:	(bad)  
  407c4b:	in     al,0x75
  407c4d:	pop    esp
  407c4e:	sbb    al,0x55
  407c50:	sbb    esi,eax
  407c52:	in     al,0xc9
  407c54:	ins    BYTE PTR es:[edi],dx
  407c55:	add    al,0x4b
  407c57:	sbb    al,BYTE PTR [edx+0x2ae74d4c]
  407c5d:	setno  cl
  407c60:	fcomp  DWORD PTR [edx-0x1f767670]
  407c66:	or     dl,BYTE PTR [edi-0x80]
  407c69:	(bad)  
  407c6a:	push   ds
  407c6b:	fs cmc 
  407c6d:	sbb    BYTE PTR [ebp-0xac8c8c1],ah
  407c73:	fiadd  DWORD PTR [ebx-0x65]
  407c76:	(bad)  [ebx+eax*8-0x4ee4681e]
  407c7d:	nop
  407c7e:	inc    eax
  407c7f:	mov    bl,0x7d
  407c81:	add    ah,al
  407c83:	add    cl,ch
  407c85:	dec    ebp
  407c86:	mov    eax,ds:0x9e1130a4
  407c8b:	sub    al,0xd9
  407c8d:	pop    es
  407c8e:	ret    
  407c8f:	mov    bh,0xe5
  407c91:	cmp    DWORD PTR [edi+ebp*1-0x2208ae5e],ecx
  407c98:	push   esi
  407c99:	(bad)  
  407c9a:	jmp    0xbc69a7f7
  407c9f:	adc    ecx,DWORD PTR [esp+ebp*1-0x51aeb664]
  407ca6:	outs   dx,BYTE PTR ds:[esi]
  407ca7:	xchg   edx,eax
  407ca8:	mov    BYTE PTR [ecx+0x4c],ch
  407cab:	adc    eax,0xfacb47a8
  407cb0:	je     0x407cba
  407cb2:	cmp    eax,0xef0f8de3
  407cb7:	cmp    cl,BYTE PTR [ebx]
  407cb9:	inc    ebx
  407cba:	pop    ss
  407cbb:	jle    0x407d39
  407cbd:	inc    ebx
  407cbe:	mov    esp,0xa76111ed
  407cc3:	jns    0x407d2e
  407cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cc6:	or     esp,esi
  407cc8:	push   es
  407cc9:	mov    ss,WORD PTR ds:0x96435b39
  407ccf:	loopne 0x407ce1
  407cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cd2:	dec    ebx
  407cd3:	leave  
  407cd4:	popf   
  407cd5:	mov    bl,0x17
  407cd7:	test   edx,ecx
  407cd9:	rcr    ebx,0x57
  407cdc:	sahf   
  407cdd:	shr    DWORD PTR [eax+0x51],cl
  407ce0:	add    BYTE PTR [esi+0xbfdaf3c],al
  407ce6:	inc    eax
  407ce7:	shl    ebx,cl
  407ce9:	sub    DWORD PTR [edx],edi
  407ceb:	dec    ebp
  407cec:	and    BYTE PTR [ebx-0x109d5cc6],cl
  407cf2:	hlt    
  407cf3:	cli    
  407cf4:	ja     0x407cd7
  407cf6:	xchg   esi,eax
  407cf7:	mov    eax,ds:0x90a25adc
  407cfc:	mov    eax,0xadda17b1
  407d01:	mov    WORD PTR [ebx],?
  407d03:	jmp    0x56e4:0x9f2685ec
  407d0a:	out    0x72,al
  407d0c:	cmp    edx,esp
  407d0e:	cmp    DWORD PTR [ebx-0x1b2b8af6],esp
  407d14:	xchg   edx,eax
  407d15:	mov    ebx,0x338ead4c
  407d1a:	call   0x9d2:0xfab819bc
  407d21:	nop
  407d22:	add    DWORD PTR [ebx+0x3c308f45],edx
  407d28:	pop    edi
  407d29:	das    
  407d2a:	sub    DWORD PTR [edi],0xa8c14ec4
  407d30:	(bad)  
  407d31:	sub    al,0xaa
  407d33:	mov    al,0xf6
  407d35:	inc    ebx
  407d36:	loop   0x407d81
  407d38:	fld    DWORD PTR [edi+0x4d5c3113]
  407d3e:	adc    DWORD PTR [edx+0x55],edx
  407d41:	inc    esi
  407d42:	sbb    BYTE PTR [esp+edi*8],dl
  407d45:	lea    edx,[edi+0x7a1830f6]
  407d4b:	inc    ebp
  407d4c:	fidivr DWORD PTR [edx]
  407d4e:	adc    eax,0xec5efa3b
  407d53:	clc    
  407d54:	out    dx,al
  407d55:	jg     0x407d10
  407d57:	imul   ebx,DWORD PTR [edi+0x53fce08],0x2fae5ad3
  407d61:	push   eax
  407d62:	out    0x8c,al
  407d64:	dec    esp
  407d65:	push   ss
  407d66:	pop    edi
  407d67:	mov    esi,DWORD PTR ss:[edi-0x12]
  407d6b:	es out dx,al
  407d6d:	call   DWORD PTR [edi]
  407d6f:	stos   DWORD PTR es:[edi],eax
  407d70:	add    ch,BYTE PTR cs:[edi-0x56]
  407d74:	arpl   WORD PTR [ebp+0x21],bx
  407d77:	ror    DWORD PTR [esi+ebx*8],1
  407d7a:	in     eax,0x62
  407d7c:	sbb    bl,BYTE PTR [edx]
  407d7e:	out    0xb3,eax
  407d80:	jge    0x407ddb
  407d82:	lds    ebx,FWORD PTR [ebp+0x7769261c]
  407d88:	or     ebx,DWORD PTR [ecx+0x6a]
  407d8b:	lock test DWORD PTR [edi-0x4d],0x190a1804
  407d93:	mov    dl,BYTE PTR [edi]
  407d95:	xor    BYTE PTR [ecx-0x24],ah
  407d98:	cmp    eax,0x7f805791
  407d9d:	scas   al,BYTE PTR es:[edi]
  407d9e:	mov    ah,0xe3
  407da0:	fldz   
  407da2:	xor    edi,DWORD PTR [ebx+0x4553bc52]
  407da8:	js     0x407de9
  407daa:	repz int 0x9f
  407dad:	jno    0x407d78
  407daf:	mov    ah,0xa5
  407db1:	and    DWORD PTR [ebx-0x8],ebp
  407db4:	iret   
  407db5:	mov    DWORD PTR [ecx-0x4297ce23],edx
  407dbb:	sub    eax,0xd8e8e75a
  407dc0:	or     DWORD PTR [ebx-0x689ffad3],edi
  407dc6:	xor    al,0xdd
  407dc8:	xor    ah,BYTE PTR [eax*8-0xf765cb7]
  407dcf:	sub    eax,DWORD PTR [ecx+0x75]
  407dd2:	xchg   esp,eax
  407dd3:	jb     0x407e3e
  407dd5:	mov    bl,al
  407dd7:	std    
  407dd8:	jne    0x407e4a
  407dda:	sahf   
  407ddb:	hlt    
  407ddc:	call   0xd35b:0xb083548b
  407de3:	sbb    eax,DWORD PTR [esi]
  407de5:	pop    esi
  407de6:	(bad)  
  407de7:	pop    ds
  407de8:	fwait
  407de9:	xchg   ecx,eax
  407dea:	ds mov eax,0xb0277324
  407df0:	mov    al,0x34
  407df2:	repnz ins BYTE PTR es:[edi],dx
  407df4:	mov    dh,0x84
  407df6:	cwde   
  407df7:	push   cs
  407df8:	ror    BYTE PTR [ebx+0x54],cl
  407dfb:	jns    0x407db8
  407dfd:	aas    
  407dfe:	push   ecx
  407dff:	cli    
  407e00:	loope  0x407dee
  407e02:	jecxz  0x407e65
  407e04:	shl    DWORD PTR [ecx],0xca
  407e07:	dec    ebp
  407e08:	jg     0x407e5d
  407e0a:	adc    DWORD PTR [ebp-0x15dd2402],esp
  407e10:	into   
  407e11:	push   ebx
  407e12:	cmp    BYTE PTR [edi-0x8f490d2],bh
  407e18:	inc    ecx
  407e19:	pop    ds
  407e1a:	mov    edx,DWORD PTR [ecx-0xdd6d180]
  407e20:	xor    al,0xb1
  407e22:	das    
  407e23:	jne    0x407e19
  407e25:	fnstenv [esi+0x5110e924]
  407e2b:	cmp    edi,ecx
  407e2d:	nop
  407e2e:	inc    edx
  407e2f:	sahf   
  407e30:	xlat   BYTE PTR ds:[ebx]
  407e31:	outs   dx,DWORD PTR ds:[esi]
  407e32:	pop    esi
  407e33:	(bad)  
  407e34:	lods   eax,DWORD PTR ds:[esi]
  407e35:	ret    0x7d61
  407e38:	in     al,dx
  407e39:	popf   
  407e3a:	ret    
  407e3b:	push   0x3b
  407e3d:	sbb    DWORD PTR [eax],ecx
  407e3f:	and    eax,0xbcd53fb8
  407e44:	es aam 0xfe
  407e47:	push   esp
  407e48:	xor    eax,0xba1f52bb
  407e4d:	shr    BYTE PTR [ecx-0x71],1
  407e50:	(bad)  
  407e51:	mov    esi,0xbbacb98d
  407e56:	mov    ds:0x1d17090c,al
  407e5b:	mov    eax,0xfe49b6da
  407e60:	shl    BYTE PTR ds:0xc5375a42,cl
  407e66:	mov    al,ds:0x812fb42e
  407e6b:	or     al,0x9
  407e6d:	repnz xchg ebx,eax
  407e6f:	int    0x8e
  407e71:	nop
  407e72:	scas   eax,DWORD PTR es:[edi]
  407e73:	pushf  
  407e74:	pop    ecx
  407e75:	xchg   DWORD PTR [edi+esi*8-0x65fdba1a],ecx
  407e7c:	xchg   esp,eax
  407e7d:	push   ebp
  407e7e:	mov    eax,ds:0xc19b8322
  407e83:	pop    ss
  407e84:	shl    BYTE PTR [ebp+0x52805684],1
  407e8a:	and    DWORD PTR [edi],0x6084c112
  407e90:	sahf   
  407e91:	cmp    ebx,DWORD PTR [eax-0x13]
  407e94:	mov    cl,0x93
  407e96:	adc    BYTE PTR [ecx*8-0x4c59f080],dh
  407e9d:	mov    dl,0x95
  407e9f:	popf   
  407ea0:	gs push es
  407ea2:	rol    BYTE PTR [ebx+0x495ecbab],0xe4
  407ea9:	jecxz  0x407f10
  407eab:	js     0x407e81
  407ead:	dec    esp
  407eae:	jbe    0x407f04
  407eb0:	xchg   ecx,eax
  407eb1:	ret    0x5a45
  407eb4:	or     BYTE PTR [esi+eax*4-0x33],bl
  407eb8:	mov    al,0x37
  407eba:	fstp   QWORD PTR [eax-0x58ad10c9]
  407ec0:	jge    0x407ede
  407ec2:	and    al,BYTE PTR [ecx-0x5afdf45b]
  407ec8:	push   edx
  407ec9:	fadd   st(4),st
  407ecb:	xchg   edx,eax
  407ecc:	mov    ds:0x300e1b6,al
  407ed1:	shl    eax,cl
  407ed3:	inc    edi
  407ed4:	dec    esi
  407ed5:	(bad)  
  407ed6:	pop    eax
  407ed7:	sbb    BYTE PTR [esi+0x3501f31f],al
  407edd:	or     DWORD PTR ss:[esi-0x6b0aa148],eax
  407ee4:	retf   
  407ee5:	repz and ah,BYTE PTR [esi]
  407ee8:	in     eax,dx
  407ee9:	test   ecx,ebp
  407eeb:	add    BYTE PTR [ebx],0x72
  407eee:	pop    ecx
  407eef:	lahf   
  407ef0:	adc    eax,DWORD PTR [esi]
  407ef2:	xchg   edi,eax
  407ef3:	or     BYTE PTR [ebp-0x7ac58672],ah
  407ef9:	mov    bl,0x29
  407efb:	jne    0x407f45
  407efd:	or     eax,0x83fe0fcf
  407f02:	mov    cl,0xb9
  407f04:	ins    BYTE PTR es:[edi],dx
  407f05:	sub    bl,0x32
  407f08:	mov    al,0xc4
  407f0a:	and    ebx,DWORD PTR [edi]
  407f0c:	fst    QWORD PTR [esi-0x2d]
  407f0f:	rcr    eax,1
  407f11:	xor    al,0x3
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	(bad)  
  407f15:	jle    0x407e9a
  407f17:	adc    DWORD PTR [edi+0x62],0x11cfa22c
  407f1e:	push   ebp
  407f1f:	mov    ds:0xfef4b6c3,al
  407f24:	push   es
  407f25:	sar    BYTE PTR [edx],cl
  407f27:	sub    DWORD PTR [esi+ebp*1+0x1a],esi
  407f2b:	mov    al,ds:0x101d8fb4
  407f30:	repz loopne 0x407f5b
  407f33:	mov    DWORD PTR [eax+edx*8],ecx
  407f36:	in     al,0x65
  407f38:	outs   dx,BYTE PTR gs:[esi]
  407f3a:	ret    
  407f3b:	(bad)  
  407f3c:	mov    ch,0x6
  407f3e:	push   es
  407f3f:	add    ch,BYTE PTR [ebx-0x35c8d56c]
  407f45:	xor    ecx,DWORD PTR [ecx]
  407f47:	sbb    edx,ebx
  407f49:	test   DWORD PTR [ecx-0x4a1c4a66],ebx
  407f4f:	fbld   TBYTE PTR [eax-0x3a]
  407f52:	(bad)  
  407f53:	xor    dl,BYTE PTR [esp+edi*1+0x1a61dd93]
  407f5a:	lahf   
  407f5b:	ret    0xe326
  407f5e:	iret   
  407f5f:	out    dx,al
  407f60:	jne    0x407f86
  407f62:	add    al,0x8
  407f64:	mov    eax,DWORD PTR [ebx]
  407f66:	or     al,0xc6
  407f68:	xor    BYTE PTR [ebx-0x73],ah
  407f6b:	sbb    ecx,eax
  407f6d:	xchg   edx,eax
  407f6f:	inc    edi
  407f70:	cmp    dh,ch
  407f72:	sbb    eax,0xef9a1d79
  407f77:	inc    ebp
  407f78:	test   al,0xfb
  407f7a:	dec    ebx
  407f7b:	jbe    0x407fc7
  407f7d:	loop   0x407fcd
  407f7f:	inc    ebx
  407f80:	cmp    BYTE PTR [edi+edx*8-0x28750085],ch
  407f87:	or     DWORD PTR [ebx-0x50c756fd],esi
  407f8d:	lahf   
  407f8e:	dec    bp
  407f90:	and    al,0xd8
  407f92:	out    dx,eax
  407f93:	das    
  407f94:	jb     0x407f52
  407f96:	dec    ebp
  407f97:	or     cl,BYTE PTR [esi+0x7033e250]
  407f9d:	mov    WORD PTR ds:0x3b895c0a,?
  407fa3:	ss mov dl,0x32
  407fa6:	push   edx
  407fa7:	xor    eax,0x17e84ce0
  407fac:	jo     0x407fea
  407fae:	nop
  407faf:	call   0xdb1184e7
  407fb4:	xchg   BYTE PTR [ebp-0x1f798c42],dl
  407fba:	daa    
  407fbb:	add    al,0xf4
  407fbd:	cmp    eax,0xa1a33fd0
  407fc2:	pop    esp
  407fc3:	stos   BYTE PTR es:[edi],al
  407fc4:	pop    esp
  407fc5:	mov    al,BYTE PTR [esi+0x66]
  407fc8:	rcl    DWORD PTR [edx+0x2a],1
  407fcb:	jmp    0x63596606
  407fd0:	xchg   edi,eax
  407fd1:	push   ecx
  407fd2:	cmp    eax,0x98af4c44
  407fd7:	mov    bl,BYTE PTR [eax+0x5f]
  407fda:	das    
  407fdb:	dec    eax
  407fdc:	mov    ch,0xbc
  407fde:	inc    ecx
  407fdf:	cdq    
  407fe0:	(bad)  
  407fe3:	nop
  407fe4:	not    DWORD PTR [ebp-0x1938acbe]
  407fea:	lods   al,BYTE PTR ds:[esi]
  407feb:	in     eax,dx
  407fec:	jmp    0x408059
  407fee:	(bad)  
  407ff0:	sbb    DWORD PTR [esi-0x18],ebx
  407ff3:	test   DWORD PTR [esi+0x3c2d5385],eax
  407ff9:	test   eax,0x37df6030
  407ffe:	imul   ebp,ecx,0xffffffe9
  408001:	retf   
  408002:	xchg   BYTE PTR [ecx+0x475f77f0],ch
  408008:	sbb    eax,0x6c2ece7a
  40800d:	push   cs
  40800e:	pop    edx
  40800f:	stc    
  408010:	sahf   
  408011:	ficom  WORD PTR [ecx]
  408013:	ins    BYTE PTR es:[edi],dx
  408014:	mov    esi,0xa1e2fd8d
  408019:	dec    esi
  40801a:	and    ch,cl
  40801c:	jmp    0x407ffe
  40801e:	mov    esi,DWORD PTR [esi]
  408020:	or     bl,dh
  408022:	pop    ds
  408023:	mov    ch,0xa6
  408025:	or     BYTE PTR es:[esi+0x3d],bl
  408029:	rol    BYTE PTR [ebp+ebp*8+0x70],0xdb
  40802e:	inc    edx
  40802f:	fwait
  408030:	mov    esi,0xe7a0b65c
  408035:	aas    
  408036:	sub    DWORD PTR [eax],ecx
  408038:	arpl   WORD PTR [ebp+0x24e8b70],ax
  40803e:	add    ebx,esp
  408040:	inc    edx
  408041:	jp     0x4080ad
  408043:	daa    
  408044:	push   ds
  408045:	sub    al,0xa9
  408047:	aad    0x19
  408049:	xchg   esi,eax
  40804a:	mov    bl,0x27
  40804c:	cmp    al,0x9b
  40804e:	cli    
  40804f:	scas   eax,DWORD PTR es:[edi]
  408050:	(bad)  
  408051:	adc    al,0xea
  408053:	pop    edi
  408054:	ds xor eax,0x2926bcf2
  40805a:	mul    DWORD PTR [eax+0x5]
  40805d:	xchg   esp,eax
  40805e:	in     al,dx
  40805f:	into   
  408060:	jae    0x408091
  408062:	mov    DWORD PTR [eax+esi*8+0x14],ebp
  408066:	in     al,dx
  408067:	retf   0x5303
  40806a:	add    dl,al
  40806c:	mov    bh,0x9
  40806e:	pop    ebx
  40806f:	inc    esi
  408070:	jns    0x4080af
  408072:	push   esi
  408073:	inc    esi
  408074:	popf   
  408075:	sbb    ecx,edx
  408077:	ja     0x408095
  408079:	sti    
  40807a:	clc    
  40807b:	cmp    al,0xac
  40807d:	mul    ah
  40807f:	fnstenv [eax+ecx*8]
  408082:	push   eax
  408083:	pop    ebp
  408084:	mov    cl,ch
  408086:	in     eax,0x64
  408088:	pop    ss
  408089:	sbb    edx,DWORD PTR [edi]
  40808b:	fsub   DWORD PTR [ebp-0x47ca420c]
  408091:	or     al,0xa3
  408093:	inc    esi
  408094:	cmp    ebx,ebx
  408096:	mov    ds:0x57345000,eax
  40809b:	mov    ch,0x5f
  40809d:	pop    edx
  40809e:	daa    
  40809f:	jl     0x408108
  4080a1:	inc    esi
  4080a2:	jmp    0x132fd83b
  4080a7:	inc    ecx
  4080a8:	int    0x22
  4080aa:	clc    
  4080ab:	pop    edx
  4080ac:	mov    al,ds:0xdd05a560
  4080b1:	je     0x4080c4
  4080b3:	das    
  4080b4:	push   cs
  4080b5:	xor    BYTE PTR [ebp-0x2c],ch
  4080b8:	add    al,0x5f
  4080ba:	out    dx,eax
  4080bb:	jge    0x408127
  4080bd:	cli    
  4080be:	test   DWORD PTR [esi+0x5f26b379],esi
  4080c4:	icebp  
  4080c5:	ins    BYTE PTR es:[edi],dx
  4080c6:	les    eax,FWORD PTR [edi-0x3dd8d37f]
  4080cc:	out    0x91,al
  4080ce:	ror    BYTE PTR [ecx+0x605e6271],cl
  4080d4:	lock sub al,0xff
  4080d7:	(bad)  
  4080d8:	sbb    bl,BYTE PTR ds:0xb1396dc0
  4080de:	push   ecx
  4080df:	sbb    edi,ecx
  4080e1:	repz pushf 
  4080e3:	jne    0x4080d2
  4080e5:	out    0x32,al
  4080e7:	or     bh,dh
  4080e9:	out    0xab,al
  4080eb:	jbe    0x408110
  4080ed:	or     BYTE PTR [esi-0x3f8d1873],0xfd
  4080f4:	fild   DWORD PTR [esi+0x31c9ac27]
  4080fa:	jo     0x4080c2
  4080fc:	sbb    ebp,esp
  4080fe:	pop    ss
  4080ff:	or     DWORD PTR [ecx+ebx*2+0x3f],0xffffff8d
  408104:	mov    edx,0x6a542353
  408109:	cli    
  40810a:	cmp    DWORD PTR [esp+ebp*8+0x45],eax
  40810e:	fsubr  QWORD PTR [eax+0x49]
  408111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408112:	push   ss
  408113:	add    al,0x87
  408115:	into   
  408116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408117:	mov    ds,WORD PTR [edx]
  408119:	mov    bh,0x5c
  40811b:	push   cs
  40811c:	pop    ds
  40811d:	adc    dh,bh
  40811f:	or     DWORD PTR [edi-0x6abbfd0],esi
  408125:	enter  0x765a,0xaf
  408129:	gs ret 0xb884
  40812d:	dec    eax
  40812e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40812f:	and    ebp,DWORD PTR [edx-0x6850fed9]
  408135:	mov    esp,0x9e26efc7
  40813a:	fsub   QWORD PTR [ebp+0x72]
  40813d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40813e:	fs push es
  408140:	outs   dx,BYTE PTR ds:[esi]
  408141:	in     al,0xfa
  408143:	fcomi  st,st(4)
  408145:	scas   eax,DWORD PTR es:[edi]
  408146:	push   ecx
  408147:	xor    DWORD PTR [ebx],ebx
  408149:	int    0xb0
  40814b:	pop    esi
  40814c:	dec    eax
  40814d:	aad    0x6c
  40814f:	es out 0x35,eax
  408152:	or     eax,0xbaf286d2
  408157:	mov    al,0xc2
  408159:	pop    ebp
  40815a:	stos   BYTE PTR es:[edi],al
  40815b:	cmp    ch,cl
  40815d:	repz xor BYTE PTR [edx-0x194d2221],dl
  408164:	call   0xd21057c0
  408169:	jl     0x40812f
  40816b:	mov    al,ds:0xa60904ee
  408170:	jns    0x4081ce
  408172:	mov    esi,0xfdda15d5
  408177:	xor    cl,BYTE PTR [edi]
  408179:	pop    eax
  40817a:	fisttp DWORD PTR [eax]
  40817c:	(bad)  
  40817d:	fwait
  40817e:	push   edx
  40817f:	mov    bl,0xf1
  408181:	mov    ds:0x3eb70a85,al
  408186:	or     al,0x58
  408188:	dec    ebx
  408189:	cdq    
  40818a:	icebp  
  40818b:	call   0x2460:0xcd594a80
  408192:	sub    edx,DWORD PTR [esi]
  408194:	sbb    eax,0x7b8a2334
  408199:	xchg   ebp,eax
  40819a:	push   edx
  40819b:	out    dx,eax
  40819c:	outs   dx,BYTE PTR ds:[esi]
  40819d:	in     al,dx
  40819e:	(bad)  [ebx+0x521e7a3a]
  4081a4:	adc    al,0xc5
  4081a6:	add    eax,0xd50b4c4
  4081ab:	mov    ebp,DWORD PTR ds:0x32bab478
  4081b1:	sbb    BYTE PTR [ebx-0xe48b45f],0xbb
  4081b8:	mov    al,0x71
  4081ba:	cmp    eax,0xc7f26dae
  4081bf:	push   ss
  4081c0:	test   al,0xe1
  4081c2:	pop    ds
  4081c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081c4:	lahf   
  4081c5:	sbb    ecx,DWORD PTR [edx]
  4081c7:	lods   eax,DWORD PTR ds:[esi]
  4081c8:	lea    eax,[eax+edi*8+0x72]
  4081cc:	fwait
  4081cd:	cmp    dl,ch
  4081cf:	sub    ch,0xa4
  4081d2:	jl     0x4081bb
  4081d4:	div    edx
  4081d6:	push   edi
  4081d7:	sub    eax,0x4285070f
  4081dc:	xchg   ebx,eax
  4081dd:	pop    ebx
  4081de:	jp     0x4081b9
  4081e0:	shl    BYTE PTR ds:0xaf468682,1
  4081e6:	addr16 xchg esi,eax
  4081e8:	aam    0x36
  4081ea:	dec    edx
  4081eb:	or     DWORD PTR [ecx-0x40],ebx
  4081ee:	sub    BYTE PTR ds:0xf7243d06,0x3f
  4081f5:	sbb    ebx,DWORD PTR [edx+ecx*1-0x4d]
  4081f9:	pop    esi
  4081fa:	adc    BYTE PTR [edx],ch
  4081fc:	sbb    BYTE PTR [ebp+edx*2+0x1365830c],dl
  408203:	call   0x2d8928ca
  408208:	mov    bh,0xf3
  40820a:	arpl   dx,ax
  40820c:	fwait
  40820d:	stos   BYTE PTR es:[edi],al
  40820e:	sub    DWORD PTR [edi+0x73],edx
  408211:	jb     0x4081d3
  408213:	stos   BYTE PTR es:[edi],al
  408214:	loope  0x40823e
  408216:	call   0x53b0:0x20a74e9c
  40821d:	fisttp WORD PTR [edi-0x5e]
  408220:	mov    ecx,0x7d9ba87c
  408225:	push   ecx
  408226:	mov    cl,0xf9
  408228:	int3   
  408229:	and    eax,DWORD PTR [edx]
  40822b:	in     al,dx
  40822c:	test   DWORD PTR [ecx+eiz*4-0x2c25b869],ebp
  408233:	add    BYTE PTR [ecx-0x79a2cebb],dl
  408239:	push   cs
  40823a:	and    ah,ah
  40823c:	mov    ebp,0xb1e2b55
  408241:	out    0x8a,al
  408243:	mov    ds:0x27968778,eax
  408248:	xor    ch,BYTE PTR [edi+ebp*2-0x60ddc355]
  40824f:	shl    BYTE PTR [eax],cl
  408251:	cmp    eax,DWORD PTR [eax+0x56]
  408254:	mov    bh,0xfd
  408256:	inc    edi
  408257:	(bad)  
  408258:	aad    0x36
  40825a:	xor    esp,ebx
  40825c:	xchg   esi,eax
  40825d:	sar    DWORD PTR [eax],cl
  40825f:	cmp    eax,0x4124a619
  408264:	mov    ds:0x34f73ee5,al
  408269:	jbe    0x408219
  40826b:	call   0xe8d495f8
  408270:	fistp  QWORD PTR [ebx+ebp*1+0x6c]
  408274:	jb     0x4081fc
  408276:	shl    DWORD PTR [ecx-0x47],cl
  408279:	add    eax,0x3b46516f
  40827e:	and    edx,DWORD PTR [ecx+0x7fcce6ca]
  408284:	(bad)  
  408285:	fcmovne st,st(0)
  408287:	femms  
  408289:	aam    0x58
  40828b:	cmp    eax,0xf733df40
  408290:	inc    ebp
  408291:	popa   
  408292:	xchg   esp,eax
  408293:	cmp    bl,al
  408295:	push   ds
  408296:	mov    ch,0x84
  408298:	shr    ebp,0x8d
  40829b:	adc    BYTE PTR [edi+edx*8],dh
  40829e:	(bad)  
  40829f:	dec    ebx
  4082a0:	jg     0x4082fc
  4082a2:	call   0x6c567f02
  4082a7:	cld    
  4082a8:	adc    esi,DWORD PTR [ebx+ebp*2+0x668401cf]
  4082af:	(bad)  
  4082b0:	fst    QWORD PTR ss:[ebp+0x4d0de236]
  4082b7:	fisub  WORD PTR [edi+0x47]
  4082ba:	inc    esi
  4082bb:	sbb    esp,DWORD PTR [ebx-0x1b]
  4082be:	pop    edx
  4082bf:	xor    eax,0xe39b5100
  4082c4:	jp     0x408300
  4082c6:	adc    eax,0xd5c28579
  4082cb:	or     al,0xe8
  4082cd:	loope  0x4082f8
  4082cf:	jb     0x408294
  4082d1:	xchg   ebx,eax
  4082d2:	addr16 daa 
  4082d4:	adc    DWORD PTR [edx],esi
  4082d6:	add    ah,BYTE PTR [edx+esi*8-0x110e1c6e]
  4082dd:	inc    eax
  4082de:	or     ecx,DWORD PTR [eax+0x24]
  4082e1:	push   es
  4082e2:	xor    BYTE PTR [eax-0x14],0x83
  4082e6:	jbe    0x4082d9
  4082e8:	jmp    0x2f33:0xbb0efb
  4082ef:	mov    ds:0x6d99653,al
  4082f4:	test   BYTE PTR [ebx+0x189e9c3f],0xda
  4082fb:	mov    esi,0x3fde98c4
  408300:	or     al,0x42
  408302:	xchg   ebp,eax
  408303:	outs   dx,DWORD PTR ds:[esi]
  408304:	cwde   
  408305:	lods   eax,DWORD PTR ds:[esi]
  408306:	stc    
  408307:	neg    DWORD PTR [esi]
  408309:	sbb    ch,0xc7
  40830c:	sti    
  40830d:	out    0x93,eax
  40830f:	mov    esp,0xa2303133
  408314:	cmp    eax,0xadc0a019
  408319:	push   edi
  40831a:	std    
  40831b:	ror    DWORD PTR [ebp+eax*4-0x12024dae],cl
  408322:	test   eax,0x6890abed
  408327:	es pop esi
  408329:	enter  0xe6e4,0x74
  40832d:	(bad)  
  40832f:	sub    al,0x81
  408331:	adc    BYTE PTR [ebx],cl
  408333:	shr    BYTE PTR [ecx-0x2ce6d227],1
  408339:	dec    edi
  40833a:	cmp    ebx,DWORD PTR [esi+0x633b7e2a]
  408340:	stos   BYTE PTR es:[edi],al
  408341:	xchg   esi,eax
  408342:	mov    BYTE PTR ds:0x3272e1bb,bh
  408348:	push   ebp
  408349:	jo     0x4082e9
  40834b:	xor    DWORD PTR [esi-0x4483a3bb],0xffffffdc
  408352:	pop    ebx
  408353:	mov    cl,0x9
  408355:	jmp    0x2995:0xe1a9d4e2
  40835c:	mov    dl,0x93
  40835e:	xor    dl,BYTE PTR [ebp-0x6460cbd8]
  408364:	push   ebp
  408365:	cmp    eax,0xabd49bcc
  40836a:	adc    esp,esp
  40836c:	dec    eax
  40836d:	hlt    
  40836e:	push   esi
  40836f:	cmp    BYTE PTR [edx],dh
  408371:	add    DWORD PTR [ebp-0x73],esi
  408374:	test   BYTE PTR [ebx+ebp*4+0x72],bl
  408378:	xlat   BYTE PTR ds:[ebx]
  408379:	call   0xb62d:0xae7cad0c
  408380:	mov    ecx,0xddd0e6c5
  408385:	adc    eax,0x380447f7
  40838a:	xor    al,0xeb
  40838c:	push   0xd9ccf2ea
  408391:	aas    
  408392:	clc    
  408393:	into   
  408394:	pop    bx
  408396:	xor    DWORD PTR [eax],edx
  408398:	xor    DWORD PTR [eax],eax
  40839a:	cld    
  40839b:	imul   ebx,DWORD PTR [eax],0xf353dda5
  4083a1:	in     al,dx
  4083a2:	xchg   esp,eax
  4083a3:	mov    edi,0x7744381
  4083a8:	rol    BYTE PTR [eiz*2+0x2eeaede1],1
  4083af:	jg     0x408334
  4083b1:	scas   eax,DWORD PTR es:[edi]
  4083b2:	push   0x2f
  4083b4:	adc    BYTE PTR [si],0xa9
  4083b8:	or     eax,0xf6f85e2a
  4083bd:	ja     0x4083d8
  4083bf:	jbe    0x4083d5
  4083c1:	fs mov dh,0xb4
  4083c4:	or     dh,BYTE PTR [esp-0xe]
  4083c8:	push   0x71
  4083ca:	dec    edi
  4083cb:	add    al,0xcf
  4083cd:	in     eax,0x70
  4083cf:	aas    
  4083d0:	fsub   DWORD PTR [ebx]
  4083d2:	pop    eax
  4083d3:	mov    ah,0x9f
  4083d5:	scas   eax,DWORD PTR es:[edi]
  4083d6:	stos   DWORD PTR es:[edi],eax
  4083d7:	dec    esi
  4083d8:	outs   dx,BYTE PTR ds:[esi]
  4083d9:	adc    ecx,DWORD PTR [ecx+0x51305b9e]
  4083df:	inc    esi
  4083e0:	test   eax,0x529d5ada
  4083e5:	mov    ds:0xc3fa0251,ax
  4083eb:	pop    ebx
  4083ec:	(bad)  
  4083ee:	scas   eax,DWORD PTR es:[edi]
  4083ef:	stos   DWORD PTR es:[edi],eax
  4083f0:	in     al,dx
  4083f1:	imul   edi,edx,0x53
  4083f4:	popa   
  4083f5:	add    DWORD PTR [eax-0x48],ebp
  4083f8:	add    ecx,DWORD PTR [ecx-0x66449445]
  4083fe:	scas   al,BYTE PTR es:[edi]
  4083ff:	xor    eax,0x262ed33
  408404:	push   cs
  408405:	push   edi
  408406:	push   ecx
  408407:	inc    ecx
  408408:	inc    edi
  408409:	xrelease mov BYTE PTR [esi],ch
  40840c:	add    DWORD PTR [eax-0x13bfd5ba],ecx
  408412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408413:	add    dh,BYTE PTR [ebx+0x5c]
  408416:	in     al,0xe7
  408418:	in     eax,dx
  408419:	call   0x912dcba5
  40841e:	sbb    al,0xc7
  408420:	imul   eax,edx,0xfffffff1
  408423:	lea    ecx,[edx+0x50cef554]
  408429:	adc    DWORD PTR [edi+0x3c],eax
  40842c:	mov    eax,ds:0x136d2228
  408431:	jp     0x408483
  408433:	lods   eax,DWORD PTR ds:[esi]
  408434:	jnp    0x4083de
  408436:	sbb    eax,0x865b702
  40843b:	(bad)  [esi-0x32]
  40843e:	fild   WORD PTR [edx+ecx*8]
  408441:	les    edx,FWORD PTR [esi+0x36]
  408444:	jl     0x408494
  408446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408447:	mov    ebx,0x97198270
  40844c:	imul   edx,DWORD PTR [ebp+0x1a0a3db9],0xfffffff2
  408453:	test   al,0x18
  408455:	mov    ebp,0xc85be964
  40845a:	mov    bl,0x41
  40845c:	sbb    al,0x29
  40845e:	and    ch,BYTE PTR [edi-0x5032c126]
  408464:	xchg   ebp,eax
  408465:	xchg   ecx,eax
  408466:	xchg   ebx,eax
  408467:	xchg   BYTE PTR [ebp-0x3a],al
  40846a:	xchg   BYTE PTR [ecx+ebx*4-0x7ab0273c],ah
  408471:	pop    ss
  408472:	adc    BYTE PTR [di-0x7b],ch
  408476:	xor    cl,dl
  408478:	xchg   edx,eax
  408479:	call   0xd8af5039
  40847e:	das    
  40847f:	xchg   esp,eax
  408480:	mov    ecx,esi
  408482:	adc    ecx,0x9fe5e01f
  408488:	add    DWORD PTR [edi],esi
  40848a:	inc    esi
  40848b:	mov    cl,0x68
  40848d:	js     0x408493
  40848f:	mov    ebp,0x9b265c29
  408494:	mov    BYTE PTR [edx+eiz*1+0x5599a19],0xc4
  40849c:	or     BYTE PTR [ebp+0x7d3cbd0d],al
  4084a2:	jo     0x4084cc
  4084a4:	and    eax,0xf00ae7c6
  4084a9:	pop    ebx
  4084aa:	inc    di
  4084ac:	pmullw mm4,QWORD PTR [esi-0x429d50dc]
  4084b3:	sbb    DWORD PTR [edx-0x3e],0x37b1977
  4084ba:	xlat   BYTE PTR ds:[ebx]
  4084bb:	(bad)  
  4084bc:	mov    edi,0xc40c13d
  4084c1:	das    
  4084c2:	pushf  
  4084c3:	mov    bl,0x87
  4084c5:	sub    edx,ebp
  4084c7:	into   
  4084c8:	jmp    0xff7f:0x150303a
  4084cf:	fs adc eax,0x5878eed8
  4084d5:	sub    DWORD PTR [ebp+0x64],esi
  4084d8:	mov    bh,0x5d
  4084da:	pop    ss
  4084db:	aaa    
  4084dc:	mov    al,0xa3
  4084de:	ss sub al,0x74
  4084e1:	mov    esp,0x46877275
  4084e6:	test   al,0x87
  4084e8:	lock and eax,0xfcaa9ec5
  4084ee:	sti    
  4084ef:	into   
  4084f0:	loope  0x4084e4
  4084f2:	retf   
  4084f3:	call   0xc180:0x2786ee86
  4084fa:	in     eax,0xa9
  4084fc:	adc    dh,ah
  4084fe:	mov    ds:0xf291f031,eax
  408503:	xor    ch,BYTE PTR [esi+0x5e]
  408506:	mov    dl,0x1e
  408508:	ror    BYTE PTR [ebx-0x12389664],1
  40850e:	out    dx,eax
  40850f:	push   esi
  408510:	dec    esi
  408511:	mov    ecx,0x7760bef3
  408516:	jp     0x408559
  408518:	dec    eax
  408519:	mov    ch,0x43
  40851b:	fadd   QWORD PTR [eax+ebp*2-0x672dbc6b]
  408522:	push   ecx
  408523:	lea    edi,[eax-0x785e6bb8]
  408529:	pusha  
  40852a:	sbb    esp,esp
  40852c:	das    
  40852d:	or     al,0xcf
  40852f:	gs pop esi
  408531:	pop    esi
  408532:	adc    cl,dl
  408534:	shl    BYTE PTR [ecx],0x32
  408537:	ret    0xacad
  40853a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40853c:	or     eax,0x1b28a79d
  408541:	push   ebx
  408542:	inc    BYTE PTR [edi]
  408544:	or     si,ax
  408547:	mov    edx,0x6f345d45
  40854c:	ss mov dl,0x1d
  40854f:	mov    ecx,0xabc95be4
  408554:	leave  
  408555:	jp     0x4085c6
  408557:	sub    cl,BYTE PTR [ebx-0x25]
  40855a:	xor    BYTE PTR [ebx],al
  40855c:	addr16 ret 0x8909
  408560:	(bad)  
  408561:	bound  eax,QWORD PTR [edi-0x5a]
  408564:	pop    ds
  408565:	pop    eax
  408566:	rcl    DWORD PTR [eax+0x77934eb9],0x84
  40856d:	mov    ch,0x51
  40856f:	ins    DWORD PTR es:[edi],dx
  408570:	daa    
  408571:	adc    ah,BYTE PTR [ebx+0x68e9c99e]
  408577:	fwait
  408578:	out    0xfc,al
  40857a:	scas   eax,DWORD PTR es:[edi]
  40857b:	idiv   esp
  40857d:	pop    ecx
  40857e:	xchg   esi,eax
  40857f:	repz mov bl,0xbd
  408582:	push   esp
  408583:	mov    edi,0xa0f30a75
  408588:	cs pop ebx
  40858a:	jl     0x408574
  40858c:	mov    edi,0x7560b95f
  408591:	in     eax,0xc9
  408593:	imul   ebx,DWORD PTR [eax-0x2ec1f99c],0xffffff9b
  40859a:	es scas eax,DWORD PTR es:[edi]
  40859c:	mov    ecx,0x285f94ed
  4085a1:	xor    ch,BYTE PTR [ebx+ecx*1+0x4306c0b6]
  4085a8:	addr16 aad 0x42
  4085ab:	(bad)
  4085af:	xor    edx,edi
  4085b1:	or     ebp,DWORD PTR [edx-0xdd1409c]
  4085b7:	in     eax,dx
  4085b8:	cmovs  ecx,DWORD PTR [esp+ebp*1-0x74b4aed0]
  4085c0:	dec    eax
  4085c1:	cmp    ch,BYTE PTR es:[ecx]
  4085c4:	sub    cl,dh
  4085c6:	sahf   
  4085c7:	or     dl,cl
  4085c9:	out    dx,al
  4085ca:	jb     0x4085ff
  4085cc:	shl    DWORD PTR [eax+eiz*2+0x54944f8f],cl
  4085d3:	into   
  4085d4:	cwde   
  4085d5:	push   0x6032464a
  4085da:	retf   
  4085db:	cmc    
  4085dc:	pop    ebx
  4085dd:	mov    cl,0x54
  4085df:	jno    0x4085dc
  4085e1:	inc    ecx
  4085e2:	push   ebp
  4085e3:	clc    
  4085e4:	add    eax,0x74efbcff
  4085e9:	push   edx
  4085ea:	repnz xor al,BYTE PTR [ebx]
  4085ed:	adc    eax,0xf1054357
  4085f2:	jp     0x40858c
  4085f4:	inc    esi
  4085f5:	sbb    al,0x40
  4085f7:	ror    al,1
  4085f9:	(bad)  
  4085fa:	int    0xcf
  4085fc:	and    dh,dl
  4085fe:	push   cs
  4085ff:	pop    DWORD PTR [esi+0x8]
  408602:	cmp    BYTE PTR [esp+eax*1+0x4e983bf],0x30
  40860a:	inc    eax
  40860b:	sbb    BYTE PTR [eax-0x260590bd],dl
  408611:	xor    al,0x40
  408613:	loope  0x408595
  408615:	sar    BYTE PTR [edi+eiz*4],1
  408618:	in     al,0x17
  40861a:	or     DWORD PTR [ebx-0x54],0x521f99b8
  408621:	popf   
  408622:	je     0x4085b5
  408624:	cli    
  408625:	or     al,0x89
  408627:	xchg   BYTE PTR [esi],ah
  408629:	ja     0x4085fa
  40862b:	rcl    BYTE PTR [edi-0x688a5150],1
  408631:	pop    esp
  408632:	jb     0x4086b2
  408634:	addr16 cmc 
  408636:	jne    0x4085f7
  408638:	fsubr  DWORD PTR [esp+ebp*2+0x5d]
  40863c:	jo     0x408660
  40863e:	adc    esi,ecx
  408640:	jbe    0x4085d5
  408642:	aaa    
  408643:	mov    cl,0x79
  408645:	mov    dl,0xc
  408647:	scas   eax,DWORD PTR es:[edi]
  408648:	and    al,0x5
  40864a:	pop    ebp
  40864b:	test   al,0x7d
  40864d:	dec    ebx
  40864e:	mov    BYTE PTR [edx-0x77a592b3],dl
  408654:	cli    
  408655:	or     ecx,ebx
  408657:	ret    
  408658:	mov    ds,WORD PTR [ecx]
  40865a:	cli    
  40865b:	sbb    cl,ch
  40865d:	(bad)  
  40865f:	mov    dh,0xb9
  408661:	js     0x40867f
  408663:	push   edi
  408664:	in     al,0xb4
  408666:	jbe    0x4086b2
  408668:	lea    edx,[ebx]
  40866a:	push   ebx
  40866b:	push   ss
  40866c:	or     bl,BYTE PTR [ecx-0x6153a723]
  408672:	add    eax,0xa122d310
  408677:	mov    esi,0x151f0808
  40867c:	jne    0x408655
  40867e:	pop    ebp
  40867f:	push   ss
  408680:	mov    ebx,0xda40d51
  408685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408686:	daa    
  408687:	loop   0x4086c6
  408689:	jmp    0x1c92:0x825c406a
  408690:	push   eax
  408691:	jb     0x408633
  408693:	jae    0x40869c
  408695:	les    ebp,FWORD PTR [edi]
  408697:	jns    0x4086bc
  408699:	leave  
  40869a:	sub    eax,edi
  40869c:	cdq    
  40869d:	mov    edi,0xf6142ff0
  4086a2:	and    eax,0x53984f1c
  4086a7:	jne    0x408670
  4086a9:	xor    dl,ch
  4086ab:	call   FWORD PTR [edi+0x6192cfe0]
  4086b1:	xor    DWORD PTR [esi-0x1a],esp
  4086b4:	stos   BYTE PTR es:[edi],al
  4086b5:	sbb    eax,0x98ceb28b
  4086ba:	bound  esp,QWORD PTR [edx-0x54aa7bf5]
  4086c0:	xor    DWORD PTR [edi+0x6],esi
  4086c3:	mov    cl,0xfa
  4086c5:	fidivr DWORD PTR [edi]
  4086c7:	xchg   ebp,eax
  4086c8:	push   esi
  4086c9:	(bad)  [ebx]
  4086cb:	call   0x2577da43
  4086d0:	sahf   
  4086d1:	xor    eax,0xb810a4cc
  4086d6:	mov    dh,0xaf
  4086d8:	daa    
  4086d9:	enter  0x20bc,0x9
  4086dd:	mov    ecx,0x94c4ae93
  4086e2:	inc    ecx
  4086e3:	rcl    eax,0xc1
  4086e6:	sub    DWORD PTR [ecx-0x16],ecx
  4086e9:	adc    eax,0x830ceaab
  4086ee:	xlat   BYTE PTR ds:[ebx]
  4086ef:	inc    esi
  4086f0:	leave  
  4086f1:	mov    di,0x16d5
  4086f5:	push   cs
  4086f6:	dec    ebx
  4086f7:	repz add eax,0x91bf46f2
  4086fd:	xchg   ecx,eax
  4086fe:	outs   dx,BYTE PTR ds:[esi]
  4086ff:	in     eax,dx
  408700:	inc    BYTE PTR [edi-0x2634004e]
  408706:	pop    ecx
  408707:	and    esi,0x3d
  40870a:	xor    bl,bl
  40870c:	push   ebp
  40870d:	es xchg ebx,eax
  40870f:	cwde   
  408710:	retf   
  408711:	inc    esi
  408712:	push   edi
  408713:	aas    
  408714:	leave  
  408715:	jns    0x4086ec
  408717:	mov    bh,BYTE PTR [esi+0x7e]
  40871a:	iret   
  40871b:	push   ss
  40871c:	cli    
  40871d:	or     BYTE PTR [ebp-0x787bd8a9],0x94
  408724:	xchg   DWORD PTR [esi-0x3d],ebp
  408727:	sbb    al,0x24
  408729:	call   0xf9c41adb
  40872e:	mov    cl,BYTE PTR [edx+eax*8-0x1f]
  408732:	std    
  408733:	sub    DWORD PTR [ebx-0x16],0xfffffff7
  408737:	leave  
  408738:	inc    eax
  408739:	es (bad) 
  40873b:	sub    BYTE PTR [eax-0x4d],ch
  40873e:	(bad)  
  40873f:	xchg   ebp,eax
  408740:	stc    
  408741:	dec    ebx
  408742:	(bad)  
  408743:	stc    
  408744:	cli    
  408745:	dec    ebp
  408746:	add    DWORD PTR es:[esi],edi
  408749:	jecxz  0x40879c
  40874b:	or     eax,0x241ee03a
  408750:	ror    DWORD PTR [esi+0xa3b6e01],1
  408756:	mov    bh,0x86
  408758:	mov    cl,BYTE PTR [edi+eiz*1]
  40875b:	adc    DWORD PTR [ebp-0x5f11dab1],ebp
  408761:	push   esp
  408762:	cmp    ebp,ebx
  408764:	(bad)  
  408765:	ins    BYTE PTR es:[edi],dx
  408766:	push   esp
  408767:	jmp    0xe28d2c53
  40876c:	ret    0xdf1f
  40876f:	jmp    0x4087df
  408771:	lea    edi,[edi-0x13]
  408774:	pop    edx
  408775:	adc    ebp,DWORD PTR [bp+0x3383]
  40877a:	add    al,0xee
  40877c:	jmp    0x7f60b6c
  408781:	fmul   QWORD PTR [esi-0x8034871]
  408787:	stos   DWORD PTR es:[edi],eax
  408788:	adc    ebx,edx
  40878a:	outs   dx,DWORD PTR ds:[esi]
  40878b:	push   ebx
  40878c:	fist   DWORD PTR [esi]
  40878e:	js     0x408733
  408790:	test   al,0x7c
  408792:	lods   eax,DWORD PTR ds:[esi]
  408793:	push   ds
  408794:	mov    ah,0x33
  408796:	and    al,BYTE PTR [ecx]
  408798:	test   eax,0x9a2fafd6
  40879d:	imul   eax,DWORD PTR [edi-0x3cb00f7],0x10c4fb77
  4087a7:	and    ch,ah
  4087a9:	sar    BYTE PTR [ebx-0x15],0xe2
  4087ad:	and    al,0xa8
  4087af:	pop    ss
  4087b0:	inc    esp
  4087b1:	scas   eax,DWORD PTR es:[edi]
  4087b2:	clc    
  4087b3:	dec    ebx
  4087b4:	sahf   
  4087b5:	dec    ebx
  4087b6:	loopne 0x4087d8
  4087b8:	sbb    eax,0xcea384b8
  4087bd:	sbb    BYTE PTR [eax],al
  4087bf:	or     BYTE PTR [ebx-0x21],0x27
  4087c3:	adc    al,0x13
  4087c5:	ficomp WORD PTR [esi]
  4087c7:	add    cl,ch
  4087c9:	jp     0x40883e
  4087cb:	ret    0x2f15
  4087ce:	mov    eax,ds:0xfc449f5a
  4087d3:	sar    DWORD PTR [esi+0x75c4d6b6],1
  4087d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087da:	and    eax,0xffad761e
  4087df:	sub    DWORD PTR [ecx-0x35],eax
  4087e2:	sahf   
  4087e3:	lea    ebp,[ebp+0x3dfe9d6]
  4087e9:	scas   al,BYTE PTR es:[edi]
  4087ea:	mov    ch,0xa7
  4087ec:	jno    0x4087e4
  4087ee:	add    dh,BYTE PTR ss:[esi+ebx*1+0x73]
  4087f3:	mov    edi,0x338e0c98
  4087f8:	int3   
  4087f9:	pop    edi
  4087fa:	daa    
  4087fb:	jne    0x40886b
  4087fd:	add    bl,cl
  4087ff:	retf   
  408800:	(bad)  
  408801:	into   
  408802:	std    
  408803:	xor    BYTE PTR [ebx+0x76],dh
  408806:	arpl   bp,di
  408808:	pop    es
  408809:	jns    0x4087c7
  40880b:	jmp    0x989a:0x50ec2cb2
  408812:	mov    edx,0x8c24ff21
  408817:	and    cl,BYTE PTR [edx+0xb]
  40881a:	leave  
  40881b:	push   edi
  40881c:	pop    ebx
  40881d:	adc    ah,al
  40881f:	inc    DWORD PTR [edi-0x5a]
  408822:	(bad)  
  408823:	fcomp  DWORD PTR [ebx]
  408825:	hlt    
  408826:	cs and dh,al
  408829:	or     ebx,esi
  40882b:	jmp    0x408830
  40882d:	jnp    0x4087f2
  40882f:	pop    ebp
  408830:	dec    edi
  408831:	inc    ecx
  408832:	aaa    
  408833:	lahf   
  408834:	xor    edi,ebx
  408836:	mov    edx,0x588dd309
  40883b:	lock call 0x3125:0x34bc4575
  408843:	(bad)
  408846:	push   ebp
  408847:	mov    ch,0xe7
  408849:	rcr    DWORD PTR [eax+0x36],0x42
  40884d:	sbb    BYTE PTR [esi-0x5c88eb10],bl
  408853:	loopne 0x408819
  408855:	dec    ebp
  408856:	aaa    
  408857:	sub    ah,BYTE PTR [esi-0x2e]
  40885a:	jb     0x40880c
  40885c:	pop    ds
  40885d:	bound  esi,QWORD PTR [edx-0x7fa9638c]
  408863:	sbb    ebp,DWORD PTR [ecx+0x36aa44f5]
  408869:	mov    esi,0x2592e3c1
  40886e:	add    BYTE PTR [ebx],dh
  408870:	mov    edi,0x6693d131
  408875:	gs push ss
  408877:	cld    
  408878:	jg     0x4088b8
  40887a:	jo     0x40886f
  40887c:	cld    
  40887d:	sbb    BYTE PTR [esi+0x6c],ah
  408880:	cmp    BYTE PTR [eax+eax*4+0x58cf5605],bl
  408887:	pop    edx
  408888:	fisttp QWORD PTR ds:[edx]
  40888b:	rol    BYTE PTR [edx-0x78],1
  40888e:	loopne 0x408886
  408890:	mov    dh,0x69
  408892:	outs   dx,BYTE PTR ds:[esi]
  408893:	call   0xd7e4:0x9039c741
  40889a:	std    
  40889b:	push   es
  40889c:	add    BYTE PTR [ecx],bh
  40889e:	adc    ebp,DWORD PTR [edx]
  4088a0:	mov    ds,WORD PTR [ebx+ebx*2-0xe6cfc38]
  4088a7:	jmp    0x4088cb
  4088a9:	cmp    eax,0xcc8f9514
  4088ae:	add    edi,DWORD PTR [eax-0x275b0dfd]
  4088b4:	sub    al,0xc
  4088b6:	adc    DWORD PTR [ebx-0x2e88d577],esi
  4088bc:	pop    edx
  4088bd:	mov    esi,0x80667fd2
  4088c2:	jne    0x408917
  4088c4:	xchg   edx,eax
  4088c5:	ja     0x40891d
  4088c7:	or     esp,esi
  4088c9:	fidivr WORD PTR [eax+0x78]
  4088cc:	daa    
  4088cd:	lods   al,BYTE PTR ds:[esi]
  4088ce:	add    esp,ebp
  4088d0:	ss dec edx
  4088d2:	xor    BYTE PTR [edi+0x5d],cl
  4088d5:	inc    ebx
  4088d6:	fcom   QWORD PTR [eax-0x47a66889]
  4088dc:	in     eax,0xd1
  4088de:	lods   al,BYTE PTR ds:[esi]
  4088df:	lods   eax,DWORD PTR ds:[esi]
  4088e0:	and    al,BYTE PTR [ebx-0x585cfb1d]
  4088e6:	jnp    0x408911
  4088e8:	jb     0x40890e
  4088ea:	sbb    BYTE PTR [ebx+0x362fead5],ch
  4088f0:	sar    DWORD PTR [ecx-0x544a8aae],1
  4088f6:	lahf   
  4088f7:	mov    ebp,0x5adf7aef
  4088fc:	inc    ecx
  4088fd:	dec    edi
  4088fe:	sub    DWORD PTR [edi-0x6c9f12fe],edi
  408904:	stos   DWORD PTR es:[edi],eax
  408905:	sbb    dl,BYTE PTR [edi+0x33]
  408908:	call   0x8cff:0x9fd4940c
  40890f:	lea    edx,[edx-0x22]
  408912:	sub    al,BYTE PTR [eax-0x58]
  408915:	scas   al,BYTE PTR es:[edi]
  408916:	mov    esi,0xcdd3062b
  40891b:	imul   esi,DWORD PTR [eax-0x19],0xffffffe3
  40891f:	fidiv  WORD PTR [bp+si-0xae5]
  408924:	ror    BYTE PTR ds:0x4ba2f081,1
  40892a:	mov    ds:0xd8b3ffd2,eax
  40892f:	add    al,0x9
  408931:	shl    BYTE PTR [edx-0x4473d3d9],cl
  408937:	mov    al,0xdc
  408939:	and    DWORD PTR [esi],ebx
  40893b:	out    dx,al
  40893c:	mov    dl,0x8c
  40893e:	adc    DWORD PTR [ebx],edx
  408940:	jae    0x408953
  408942:	cmp    esp,DWORD PTR [esp+edx*4]
  408945:	retf   0x4a3c
  408948:	test   BYTE PTR [edi],bh
  40894a:	sar    BYTE PTR [ebx],cl
  40894c:	aad    0x5f
  40894e:	jmp    0x8329:0x973c4003
  408955:	add    DWORD PTR [edi],ecx
  408957:	sbb    DWORD PTR [esi],ebp
  408959:	sbb    edx,DWORD PTR [ecx]
  40895b:	mov    eax,0x6e7bfc82
  408960:	xchg   ecx,eax
  408961:	and    BYTE PTR [edi+0x3f],bl
  408964:	popa   
  408965:	lods   al,BYTE PTR ds:[esi]
  408966:	(bad)  
  408967:	sub    edi,DWORD PTR [ebx+ecx*2+0x5b]
  40896b:	aas    
  40896c:	nop
  40896d:	push   0xffffffde
  40896f:	jle    0x408991
  408971:	inc    ebp
  408972:	sub    dh,ch
  408974:	jge    0x4089af
  408976:	ja     0x408983
  408978:	mov    ecx,0xe97e1a59
  40897d:	or     esp,DWORD PTR [eax]
  40897f:	arpl   dx,si
  408981:	daa    
  408982:	ins    BYTE PTR es:[edi],dx
  408983:	xchg   bl,bl
  408985:	jle    0x408957
  408987:	add    BYTE PTR [edi-0x45],bl
  40898a:	jne    0x40891e
  40898c:	mov    ebp,0x97a135cd
  408991:	outs   dx,BYTE PTR ds:[esi]
  408992:	popf   
  408993:	xor    DWORD PTR [ecx+0x1a7a42d2],ecx
  408999:	dec    ebx
  40899a:	jmp    0xc4b3:0x5e0c1a56
  4089a1:	std    
  4089a2:	add    bl,BYTE PTR [ebx]
  4089a4:	mov    ebp,0x28b8ba9
  4089a9:	jp     0x408972
  4089ab:	fnstcw WORD PTR [edi-0x34]
  4089ae:	mov    al,ds:0x824d2081
  4089b3:	fisttp DWORD PTR gs:[edi+0x7]
  4089b7:	push   es
  4089b8:	ret    
  4089b9:	jbe    0x408a0e
  4089bb:	sbb    esp,DWORD PTR [edx+0x62]
  4089be:	ins    DWORD PTR es:[edi],dx
  4089bf:	fnstsw WORD PTR [edx]
  4089c1:	aas    
  4089c2:	fisubr WORD PTR [ebp+0x3c]
  4089c5:	fisttp DWORD PTR [esi-0x108ae670]
  4089cb:	cld    
  4089cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089cd:	jg     0x4089a9
  4089cf:	aas    
  4089d0:	push   ds
  4089d1:	retf   0x9311
  4089d4:	nop
  4089d5:	xor    eax,0x638e9cba
  4089da:	pop    ecx
  4089db:	arpl   si,ax
  4089dd:	sbb    ah,BYTE PTR [ecx]
  4089df:	inc    esi
  4089e0:	imul   edx,ebx,0xffffff96
  4089e3:	xchg   ebp,eax
  4089e4:	sbb    al,0x78
  4089e6:	and    al,0xb
  4089e8:	sbb    ch,dl
  4089ea:	fcomp  DWORD PTR [edi-0x4e24e53d]
  4089f0:	pop    ebx
  4089f1:	sbb    edi,ebp
  4089f3:	jbe    0x4089f5
  4089f5:	pop    es
  4089f6:	shr    DWORD PTR [esi-0x283a2ac5],1
  4089fc:	and    ebx,DWORD PTR [eax-0x653c52c9]
  408a02:	push   es
  408a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a04:	mov    ch,0x69
  408a06:	inc    ebp
  408a07:	shl    DWORD PTR [esi+0x5e6cdaa5],cl
  408a0d:	out    0xb3,al
  408a0f:	cmp    al,BYTE PTR [ebx+eiz*8-0x4f41f328]
  408a16:	and    BYTE PTR ds:0x9c6aadbb,cl
  408a1c:	sbb    DWORD PTR [edx],0x42092904
  408a22:	enter  0x489e,0x2b
  408a26:	mov    esi,0x1772c1e8
  408a2b:	dec    ebp
  408a2c:	mov    WORD PTR [ebp+0x4b],?
  408a2f:	adc    DWORD PTR [ecx-0x5f],ecx
  408a32:	sti    
  408a33:	ss (bad) 
  408a35:	ret    0xf882
  408a38:	sbb    al,0xe4
  408a3a:	repnz mov ebx,0x355c43d5
  408a40:	push   ebx
  408a41:	pop    esi
  408a42:	mov    al,ds:0x21926800
  408a47:	mov    esi,0xff31f005
  408a4c:	pop    esp
  408a4d:	pop    edi
  408a4e:	cmp    BYTE PTR [edx+0x46],ah
  408a51:	and    esi,DWORD PTR ds:0xc39d51ba
  408a57:	push   eax
  408a58:	mov    eax,ds:0xb2ad4562
  408a5d:	cmp    BYTE PTR [edi+0x1],bl
  408a60:	mov    ds:0xe700e7c0,eax
  408a65:	arpl   WORD PTR [ebp+0x30fdd5a1],dx
  408a6b:	retf   
  408a6c:	je     0x408a65
  408a6e:	popf   
  408a6f:	call   0x5cff:0x3b8d229d
  408a76:	mov    dh,BYTE PTR [ecx-0xc]
  408a79:	inc    esp
  408a7a:	sub    BYTE PTR [edi+ebp*4],cl
  408a7d:	push   ecx
  408a7e:	jnp    0x408aba
  408a80:	mov    al,ds:0xd222784d
  408a85:	fimul  DWORD PTR [esi-0x76]
  408a88:	mov    dl,0x1d
  408a8a:	popa   
  408a8b:	sti    
  408a8c:	out    dx,eax
  408a8d:	or     bh,BYTE PTR [edx+0x6a]
  408a90:	xchg   edx,eax
  408a91:	loop   0x408ae0
  408a93:	cmp    cl,BYTE PTR [eax+esi*8+0x2b]
  408a97:	and    eax,0x373b6c7e
  408a9c:	leave  
  408a9d:	ins    DWORD PTR es:[edi],dx
  408a9e:	mov    edx,0x4478cf35
  408aa3:	cli    
  408aa4:	push   es
  408aa5:	pop    eax
  408aa6:	adc    eax,0x423bfb01
  408aab:	push   esp
  408aac:	test   al,0xdc
  408aae:	(bad)  
  408aaf:	jnp    0x408aa5
  408ab1:	sti    
  408ab2:	jl     0x408a7d
  408ab4:	jbe    0x408a8c
  408ab6:	xchg   esi,eax
  408ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ab8:	mov    DWORD PTR [edx+0x54],ebp
  408abb:	push   edi
  408abc:	(bad)  
  408abd:	hlt    
  408abe:	test   BYTE PTR [edi-0x47527253],ah
  408ac4:	leave  
  408ac5:	push   edx
  408ac6:	mov    al,ds:0x84784444
  408acb:	mov    BYTE PTR [edx+0x5d],ah
  408ace:	or     DWORD PTR [edx-0x42],0xebec0c75
  408ad5:	mov    WORD PTR [edi-0x5c],gs
  408ad8:	scas   al,BYTE PTR es:[edi]
  408ad9:	add    eax,0xffeb9e51
  408ade:	inc    DWORD PTR [esi-0x1aca3d4f]
  408ae4:	jg     0x408a7b
  408ae6:	icebp  
  408ae7:	dec    ebx
  408ae8:	loop   0x408b48
  408aea:	cmp    DWORD PTR [eax],ebp
  408aec:	mov    esp,0x729f633d
  408af1:	cmp    BYTE PTR [edx-0x21],dl
  408af4:	jmp    0x408a84
  408af6:	add    ch,al
  408af8:	bound  edi,QWORD PTR [ebx]
  408afa:	dec    edx
  408afb:	ins    BYTE PTR es:[edi],dx
  408afc:	(bad)  
  408afd:	clc    
  408afe:	mov    eax,0xebb753cf
  408b03:	imul   ebx,DWORD PTR [ebx+esi*8+0x7dad8476],0xe
  408b0b:	aad    0xaf
  408b0d:	mov    esi,0xb06ba849
  408b12:	cs add ebx,ebx
  408b15:	xchg   ebp,eax
  408b16:	pop    ecx
  408b17:	lock push ebp
  408b19:	add    esi,DWORD PTR [eax]
  408b1b:	retf   0x464f
  408b1e:	push   esp
  408b1f:	cld    
  408b20:	test   DWORD PTR [ecx+0x25],0x4cc77c50
  408b27:	enter  0x4efd,0xc7
  408b2b:	push   ebp
  408b2c:	call   0x1bd40421
  408b31:	mov    edx,0x51df2e5b
  408b36:	mov    ds:0x17146e34,eax
  408b3b:	cld    
  408b3c:	popa   
  408b3d:	or     DWORD PTR [ebx+eax*8],0xbab61329
  408b44:	popf   
  408b45:	and    BYTE PTR [eax-0x56],ch
  408b48:	(bad)
  408b4b:	nop
  408b4c:	xchg   esp,eax
  408b4d:	stos   DWORD PTR es:[edi],eax
  408b4e:	pop    ebx
  408b4f:	add    DWORD PTR [edx-0x70],0x2e
  408b53:	xor    DWORD PTR [ebx+0x5d5344f3],ebp
  408b59:	daa    
  408b5a:	sti    
  408b5b:	and    ebp,edi
  408b5d:	xchg   edi,eax
  408b5e:	test   eax,0xd5a79529
  408b63:	jno    0x408bc6
  408b65:	mov    al,ah
  408b67:	adc    BYTE PTR [ebp+0x7d248fb5],0x5d
  408b6e:	ins    BYTE PTR es:[edi],dx
  408b6f:	stc    
  408b70:	outs   dx,BYTE PTR ds:[esi]
  408b71:	popf   
  408b72:	arpl   WORD PTR [esi+0x1dc2bc17],cx
  408b78:	stos   DWORD PTR es:[edi],eax
  408b79:	in     eax,dx
  408b7a:	cmc    
  408b7b:	imul   ecx,DWORD PTR [eax-0x34351267],0x32
  408b82:	dec    edx
  408b83:	mov    ebx,0x16afe455
  408b88:	push   0x5a
  408b8a:	(bad)  ds:0x715c5f21
  408b91:	ror    DWORD PTR [ecx-0x122aff14],0xde
  408b98:	inc    ebx
  408b99:	cmp    ecx,DWORD PTR [edx]
  408b9b:	cmp    ecx,DWORD PTR [eax-0x43]
  408b9e:	sti    
  408b9f:	rcr    DWORD PTR [eax],1
  408ba1:	xchg   ecx,eax
  408ba2:	dec    dh
  408ba4:	xchg   ebp,eax
  408ba5:	out    0x16,eax
  408ba7:	mov    ebx,0x9056c47a
  408bac:	inc    ebp
  408bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bae:	std    
  408baf:	(bad)
  408bb4:	iret   
  408bb5:	mov    ch,0x9a
  408bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bb8:	lock mov ?,WORD PTR gs:[eax+0x51]
  408bbd:	add    al,0xf7
  408bbf:	into   
  408bc0:	xor    BYTE PTR [edi-0x59],al
  408bc3:	stos   BYTE PTR es:[edi],al
  408bc4:	leave  
  408bc5:	mov    eax,ds:0x641b287e
  408bca:	pop    ebx
  408bcb:	sub    DWORD PTR [ecx-0x44930b1f],ebp
  408bd1:	in     al,dx
  408bd2:	xor    DWORD PTR [edi-0xc],esp
  408bd5:	lea    edi,[ecx-0x20]
  408bd8:	popf   
  408bd9:	cmp    ah,al
  408bdb:	push   esp
  408bdc:	and    al,0x12
  408bde:	mov    bl,BYTE PTR [eax+esi*4]
  408be1:	jno    0x408ba4
  408be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408be4:	dec    edx
  408be5:	cmp    bh,dl
  408be7:	cmp    DWORD PTR [edi],0x77c5a07e
  408bed:	sti    
  408bee:	cmp    dl,bl
  408bf0:	cmp    BYTE PTR [edx-0x58],ah
  408bf3:	les    ebp,FWORD PTR [ecx+0xa]
  408bf6:	shr    BYTE PTR [eax-0x691d9195],1
  408bfc:	cwde   
  408bfd:	cld    
  408bfe:	(bad)  
  408bff:	mov    edi,0xf52e299f
  408c04:	rcr    BYTE PTR [eax-0x4682607c],0xc2
  408c0b:	pop    esi
  408c0c:	je     0x942690fb
  408c12:	mov    ah,0xbd
  408c14:	mov    ecx,0x65742f43
  408c19:	dec    eax
  408c1a:	loopne 0x408c72
  408c1c:	into   
  408c1d:	dec    ecx
  408c1e:	jmp    0x197c9228
  408c23:	jge    0x408bac
  408c25:	xor    BYTE PTR [ebx-0x38],al
  408c28:	ud1    esi,ebx
  408c2b:	pop    es
  408c2c:	pop    ss
  408c2d:	push   esp
  408c2e:	ins    BYTE PTR es:[edi],dx
  408c2f:	jmp    0x408bc6
  408c31:	xchg   esi,eax
  408c32:	mov    dh,0xff
  408c34:	fcmovu st,st(2)
  408c36:	mov    ebp,0xbfb2b830
  408c3b:	sub    ebx,DWORD PTR [edx+0x26]
  408c3e:	jmp    0x8a86c5a5
  408c43:	inc    eax
  408c44:	call   0xb19a:0x411fb3c4
  408c4b:	pushf  
  408c4c:	int3   
  408c4d:	das    
  408c4e:	add    al,0x65
  408c50:	push   esp
  408c51:	enter  0x5a3d,0x2b
  408c55:	sbb    eax,0x7572d0b6
  408c5a:	dec    edi
  408c5b:	xor    al,0x54
  408c5d:	mov    al,ds:0x53247aa6
  408c62:	and    edi,DWORD PTR [ebp+eax*4+0x32]
  408c66:	mov    ds:0x35e367e3,al
  408c6b:	rol    BYTE PTR [ebx+eax*8-0x29],1
  408c6f:	daa    
  408c70:	sub    eax,0xefb481c0
  408c75:	aad    0xdd
  408c77:	aaa    
  408c78:	retf   0xcc2d
  408c7b:	loope  0x408c99
  408c7d:	push   ebx
  408c7e:	test   BYTE PTR [edi+0x59],bl
  408c81:	(bad)  
  408c82:	imul   ebx,DWORD PTR [eax-0x30],0x93504ae0
  408c89:	ja     0x408c8b
  408c8b:	add    esi,eax
  408c8d:	(bad)  
  408c8f:	sbb    DWORD PTR [edi+0x1a],0xffffff90
  408c93:	add    DWORD PTR [eax],ecx
  408c95:	inc    edi
  408c96:	fdiv   QWORD PTR [edx+0x792ceb4e]
  408c9c:	jns    0x408c50
  408c9e:	inc    esp
  408c9f:	ds cmp al,0xf5
  408ca2:	in     eax,dx
  408ca3:	mov    al,ds:0x6264af95
  408ca8:	int    0x4
  408caa:	ret    0x9368
  408cad:	gs call 0xbd6275c7
  408cb3:	ss cmc 
  408cb5:	cmp    bh,BYTE PTR [ebp+0x59]
  408cb8:	push   ecx
  408cb9:	lods   eax,DWORD PTR ds:[esi]
  408cba:	mov    eax,0x196fe93c
  408cbf:	sbb    eax,0x486fec13
  408cc4:	aad    0x7f
  408cc6:	jmp    0x408cc6
  408cc8:	add    eax,0x6fdc813d
  408ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cce:	adc    BYTE PTR ds:[eax+0x3e31349e],dl
  408cd5:	sti    
  408cd6:	push   edi
  408cd7:	rol    DWORD PTR [ecx],0xd5
  408cda:	sbb    BYTE PTR [ebx+0x28],dh
  408cdd:	pop    edx
  408cde:	cdq    
  408cdf:	mov    ah,0x62
  408ce1:	mov    WORD PTR [edi+0xf],es
  408ce4:	call   0x85fe4f8c
  408ce9:	and    ch,ah
  408ceb:	mov    ah,BYTE PTR [ebp-0x1]
  408cee:	cld    
  408cef:	ins    DWORD PTR es:[edi],dx
  408cf0:	xchg   edi,eax
  408cf1:	adc    eax,0x8dfbdb82
  408cf6:	imul   edi,DWORD PTR [eax+ecx*8+0x4a],0x33edf0e5
  408cfe:	clc    
  408cff:	push   0x79ba6203
  408d04:	add    DWORD PTR [esi],edi
  408d06:	es pop esp
  408d09:	mov    BYTE PTR [esi-0x7d],cl
  408d0c:	sbb    al,0x79
  408d0e:	daa    
  408d0f:	out    dx,al
  408d10:	add    ebp,esi
  408d12:	not    DWORD PTR [eax]
  408d14:	(bad)  
  408d15:	cmp    DWORD PTR [edi*4+0x3e265af],ebx
  408d1c:	imul   eax,ebp,0xfffffff7
  408d1f:	jl     0x408cf4
  408d21:	push   eax
  408d22:	xchg   ebx,eax
  408d23:	(bad)  
  408d24:	mov    esp,0x47237dbb
  408d29:	jo     0x408d02
  408d2b:	xor    al,BYTE PTR [ebx-0x4a49bb6b]
  408d31:	in     eax,0x3a
  408d33:	in     eax,0xf7
  408d35:	idiv   ebp
  408d37:	(bad)  
  408d38:	jecxz  0x408da1
  408d3a:	sbb    DWORD PTR [ebx+0x19],eax
  408d3d:	fcmovnb st,st(5)
  408d3f:	dec    eax
  408d40:	push   ebp
  408d41:	mov    ds:0x73ee1516,al
  408d46:	adc    ebx,DWORD PTR [eax-0x47]
  408d49:	and    al,0xd0
  408d4b:	or     dl,BYTE PTR [ebx-0x581dff1e]
  408d51:	scas   eax,DWORD PTR es:[edi]
  408d52:	mov    esp,0x9bf14f30
  408d57:	mov    ah,0x70
  408d59:	jl     0x408d23
  408d5b:	xchg   ebp,eax
  408d5c:	xchg   ebx,eax
  408d5d:	pop    ds
  408d5e:	push   cs
  408d5f:	xchg   DWORD PTR [esi+0x1a],esi
  408d62:	push   ebp
  408d63:	mov    bl,0x8d
  408d65:	retf   0xd273
  408d68:	cwde   
  408d69:	or     edx,DWORD PTR [esi]
  408d6b:	fiadd  WORD PTR [ebp+0x58]
  408d6e:	(bad)  
  408d6f:	out    dx,eax
  408d70:	dec    edx
  408d71:	dec    edi
  408d72:	cmp    DWORD PTR [ecx-0x36],0xffffffce
  408d76:	mov    ds:0xca392e,eax
  408d7b:	xor    bh,ch
  408d7d:	or     BYTE PTR [edi],al
  408d7f:	ficomp DWORD PTR [ecx+0x22]
  408d82:	out    dx,eax
  408d83:	xor    esp,ebp
  408d85:	(bad)  
  408d86:	mov    esp,0x6f0b7ecb
  408d8b:	push   ds
  408d8c:	loope  0x408d54
  408d8e:	dec    eax
  408d8f:	cmp    dh,BYTE PTR [ebp+0x6e5e9510]
  408d95:	cmp    BYTE PTR [ebx+0x49],cl
  408d98:	aaa    
  408d99:	rcl    DWORD PTR [ebp+0x68106337],0x3a
  408da0:	jmp    DWORD PTR [esi+0x7d]
  408da3:	inc    edx
  408da4:	test   eax,0x3e35ca2c
  408da9:	test   BYTE PTR ds:0xaebe52e1,ch
  408daf:	out    dx,al
  408db0:	lea    ebp,[ecx]
  408db2:	xchg   eax,esi
  408db4:	fisttp QWORD PTR [edi]
  408db6:	daa    
  408db7:	popa   
  408db8:	int3   
  408db9:	mov    eax,ds:0x1ce1ce8e
  408dbe:	xchg   ebp,eax
  408dbf:	dec    esp
  408dc0:	(bad)
  408dc3:	out    dx,eax
  408dc4:	repnz iret 
  408dc6:	mov    ah,0x18
  408dc8:	push   0xfffffff6
  408dca:	sub    DWORD PTR [eax-0x3f],esi
  408dcd:	mov    edi,0x30ba2cb1
  408dd2:	xor    ecx,eax
  408dd4:	test   eax,0xfc66ff2f
  408dd9:	mov    esp,0xd33525fd
  408dde:	or     esi,edi
  408de0:	dec    ebp
  408de1:	les    ebp,FWORD PTR [ebp-0x7bd66c8a]
  408de7:	cwde   
  408de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de9:	cli    
  408dea:	arpl   WORD PTR [ebp+0x35],bx
  408ded:	ret    
  408dee:	jae    0x408df7
  408df0:	inc    ecx
  408df1:	jae    0x408e56
  408df3:	pushf  
  408df4:	or     al,0x21
  408df6:	pop    eax
  408df7:	dec    DWORD PTR [ecx]
  408df9:	shl    DWORD PTR [ebx],0xbd
  408dfc:	sub    bl,BYTE PTR ds:0x9428a4aa
  408e02:	and    eax,ebp
  408e04:	ins    DWORD PTR es:[edi],dx
  408e05:	sar    esi,1
  408e07:	and    BYTE PTR [ecx-0x65f8a883],bh
  408e0d:	sti    
  408e0e:	lods   eax,DWORD PTR ds:[esi]
  408e0f:	in     al,dx
  408e10:	mov    ah,0x67
  408e12:	xlat   BYTE PTR ds:[ebx]
  408e13:	jmp    0x66f9:0x9b342436
  408e1a:	clc    
  408e1b:	iret   
  408e1c:	ja     0x408e1f
  408e1e:	sbb    eax,DWORD PTR [ecx+esi*8-0x1319f50d]
  408e25:	push   ebp
  408e26:	(bad)  
  408e27:	sti    
  408e28:	(bad)  
  408e29:	push   0xffffffb7
  408e2b:	push   0xc06aba74
  408e30:	pop    esi
  408e31:	push   ds
  408e32:	pushf  
  408e33:	aad    0xf3
  408e35:	lods   al,BYTE PTR ds:[esi]
  408e36:	dec    ebp
  408e37:	push   esp
  408e38:	inc    esi
  408e39:	cld    
  408e3a:	daa    
  408e3b:	pushf  
  408e3c:	dec    ebx
  408e3d:	cwde   
  408e3e:	jl     0x408e6c
  408e40:	adc    bl,BYTE PTR [ecx+ecx*8+0x37]
  408e44:	sbb    dl,ch
  408e46:	xlat   BYTE PTR ds:[ebx]
  408e47:	nop
  408e48:	pop    ebx
  408e49:	cwde   
  408e4a:	gs nop
  408e4c:	mov    ah,0x86
  408e4e:	int3   
  408e4f:	(bad)  
  408e50:	pop    ebp
  408e51:	dec    edx
  408e52:	mov    ah,cl
  408e54:	movlhps xmm3,xmm5
  408e57:	dec    ecx
  408e58:	push   0x42fdfa4b
  408e5d:	jb     0x408edd
  408e5f:	fistp  DWORD PTR [edi]
  408e61:	imul   ebp,DWORD PTR [ebp+0x16],0x44
  408e65:	js     0x408e23
  408e67:	xor    BYTE PTR ds:0xefc323f9,bh
  408e6d:	mov    al,ds:0xe41d55bf
  408e72:	xchg   ecx,eax
  408e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e74:	or     edx,DWORD PTR [edi+0x75ec7df]
  408e7a:	and    eax,0xe5f6513f
  408e7f:	(bad)  
  408e81:	pop    ebx
  408e82:	dec    edx
  408e83:	xor    BYTE PTR [esi],ch
  408e85:	jmp    0x408eea
  408e87:	xchg   BYTE PTR [edx+ebp*4+0x72],al
  408e8b:	lock jmp 0x30bf561a
  408e91:	xchg   eax,ecx
  408e93:	inc    ecx
  408e94:	push   eax
  408e95:	jp     0x408edf
  408e97:	mov    al,0x1a
  408e99:	imul   esp,esp,0xdea7ea2f
  408e9f:	fisttp DWORD PTR [esp+ebx*4]
  408ea2:	fwait
  408ea3:	je     0x408eb1
  408ea5:	jecxz  0x408ebc
  408ea7:	push   ebx
  408ea8:	mov    WORD PTR [ebx+0x1e],ss
  408eab:	out    0x34,al
  408ead:	mov    bl,0xc1
  408eaf:	inc    esi
  408eb0:	jbe    0x408e8b
  408eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb3:	ret    0x3e82
  408eb6:	or     DWORD PTR ds:0x44ac72ff,ebp
  408ebc:	scas   eax,DWORD PTR es:[edi]
  408ebd:	jecxz  0x408efb
  408ebf:	xor    DWORD PTR [ebp-0x43435789],edi
  408ec5:	test   BYTE PTR ds:0x35f868b1,ch
  408ecb:	dec    ebp
  408ecc:	dec    esi
  408ecd:	popf   
  408ece:	add    eax,0x2c7c8b71
  408ed3:	xlat   BYTE PTR ds:[ebx]
  408ed4:	inc    esp
  408ed5:	add    ebx,DWORD PTR [esi+0x23665b1a]
  408edb:	dec    edi
  408edc:	add    al,0x53
  408ede:	out    0x3c,al
  408ee0:	mov    ah,0x70
  408ee2:	xchg   esp,eax
  408ee3:	xchg   BYTE PTR [ecx],bh
  408ee5:	outs   dx,DWORD PTR es:[esi]
  408ee7:	sub    bh,BYTE PTR [eax+edx*4-0x381d30aa]
  408eee:	(bad)  
  408eef:	and    DWORD PTR [ecx],esp
  408ef1:	xchg   esp,eax
  408ef2:	add    DWORD PTR [ecx],eax
  408ef4:	sbb    esp,DWORD PTR [edi]
  408ef6:	xor    eax,0x32ace931
  408efb:	fiadd  WORD PTR [edi]
  408efd:	mov    ecx,0xe7234190
  408f02:	dec    esi
  408f03:	inc    eax
  408f04:	das    
  408f05:	mov    al,0x48
  408f07:	xchg   BYTE PTR [ebp-0x3475d363],bl
  408f0d:	lahf   
  408f0e:	aam    0x75
  408f10:	iret   
  408f11:	ret    0xfeed
  408f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f15:	popf   
  408f16:	retf   0xca97
  408f19:	inc    esp
  408f1a:	aaa    
  408f1b:	es ins BYTE PTR es:[edi],dx
  408f1d:	xor    al,0xd7
  408f1f:	mov    al,0x90
  408f21:	not    DWORD PTR [eax+0x50]
  408f24:	push   ss
  408f25:	cmp    al,0x22
  408f27:	mov    cl,0xd8
  408f29:	or     al,0x5b
  408f2b:	loop   0x408f11
  408f2d:	push   cs
  408f2e:	xchg   ebp,eax
  408f2f:	cmp    al,0x29
  408f31:	int    0x78
  408f33:	int    0x95
  408f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f36:	mov    ch,0x40
  408f38:	mul    BYTE PTR [ebp-0x35]
  408f3b:	cmp    BYTE PTR [ebp-0x6a],dh
  408f3e:	mov    bl,0x5e
  408f40:	(bad)  
  408f41:	stc    
  408f42:	stos   DWORD PTR es:[edi],eax
  408f43:	in     al,dx
  408f44:	aas    
  408f45:	in     ax,0x4f
  408f48:	fld    DWORD PTR [eax+0x9b954b8]
  408f4e:	dec    edi
  408f4f:	and    eax,0x79d06dc3
  408f54:	not    eax
  408f56:	push   es
  408f57:	aas    
  408f58:	pushw  0x2aec
  408f5c:	cmc    
  408f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f5e:	and    al,0xef
  408f60:	arpl   WORD PTR ss:[esi],ax
  408f63:	dec    esp
  408f64:	pop    ecx
  408f65:	mov    ebx,ss
  408f67:	adc    al,cl
  408f69:	mov    eax,0x274f6cb3
  408f6e:	push   0xffffffd4
  408f70:	mov    al,0x45
  408f72:	fnsave [ebp-0x37]
  408f75:	mov    dl,0x9e
  408f77:	int    0x5b
  408f79:	js     0x408fe2
  408f7b:	jecxz  0x408f1a
  408f7d:	jmp    0x6d3d9430
  408f82:	ins    DWORD PTR es:[edi],dx
  408f83:	ins    DWORD PTR es:[edi],dx
  408f84:	cmc    
  408f85:	neg    BYTE PTR [ebx-0x69]
  408f88:	mov    eax,DWORD PTR [ecx-0xa]
  408f8b:	sahf   
  408f8c:	or     al,0x21
  408f8e:	aaa    
  408f8f:	pop    es
  408f90:	mov    bl,0x87
  408f92:	jle    0x408fe4
  408f94:	pop    eax
  408f95:	in     eax,0xaa
  408f97:	clc    
  408f98:	add    eax,0x8f99e4a8
  408f9d:	fimul  DWORD PTR [esp+eax*2+0x45]
  408fa1:	in     al,0x70
  408fa3:	xchg   cl,ah
  408fa5:	and    eax,edx
  408fa7:	clc    
  408fa8:	in     eax,0xb7
  408faa:	jmp    0x408f70
  408fac:	imul   edi,DWORD PTR ds:0x6433472b,0x125f0c1c
  408fb6:	into   
  408fb7:	into   
  408fb8:	neg    BYTE PTR [ebp-0x1308cae1]
  408fbe:	cwde   
  408fbf:	mov    ch,0xa4
  408fc1:	cmp    ecx,DWORD PTR [edx]
  408fc3:	nop
  408fc4:	ds jmp 0x408f50
  408fc7:	mul    DWORD PTR cs:[ebp-0x65]
  408fcb:	sub    eax,0xf5617c20
  408fd0:	sbb    ch,BYTE PTR ds:0x87409a29
  408fd6:	not    BYTE PTR [esi-0x31]
  408fd9:	repz pop eax
  408fdb:	cs xchg ebx,eax
  408fdd:	mov    gs,WORD PTR [edi+eax*1]
  408fe0:	nop
  408fe1:	jno    0x408faf
  408fe3:	js     0x408fd7
  408fe5:	mov    ecx,0xdb4d1e58
  408fea:	and    DWORD PTR [esi+0x4],esi
  408fed:	jmp    0xcc8d1362
  408ff2:	sub    al,0x4a
  408ff4:	(bad)  
  408ff5:	push   edx
  408ff6:	mov    ds:0xa3951e65,eax
  408ffb:	outs   dx,DWORD PTR ds:[esi]
  408ffc:	scas   al,BYTE PTR es:[edi]
  408ffd:	jae    0x409068
  408fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409000:	push   cs
  409001:	xlat   BYTE PTR ds:[ebx]
  409002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409004:	fs sub eax,0x1742e4bc
  40900a:	ins    BYTE PTR es:[edi],dx
  40900b:	jp     0x408f95
  40900d:	adc    ecx,DWORD PTR [ebx-0x6cd619e0]
  409013:	xor    dh,BYTE PTR [ecx+ebx*8+0x28cb694c]
  40901a:	cmp    edx,esi
  40901c:	test   BYTE PTR [ecx],0xbe
  40901f:	ss repnz imul ecx,eax,0x3b
  409024:	(bad)  
  409025:	idiv   BYTE PTR [ebx]
  409027:	push   ebx
  409028:	mov    bl,0x82
  40902a:	icebp  
  40902b:	jmp    0xdcb7:0x57fe0386
  409032:	ds icebp 
  409034:	jge    0x40909a
  409036:	adc    bl,ch
  409038:	or     DWORD PTR [edx],ebx
  40903a:	mov    ch,0xc1
  40903c:	inc    edi
  40903d:	dec    esp
  40903e:	shr    BYTE PTR [eax],cl
  409040:	mov    bl,0xe0
  409042:	cld    
  409043:	cmp    al,0xc
  409045:	add    al,0x42
  409047:	inc    ecx
  409048:	cdq    
  409049:	add    ebp,DWORD PTR [esi-0xf]
  40904c:	fdivr  QWORD PTR [edi+0x3e8fd4b4]
  409052:	mov    WORD PTR [eax-0x61],?
  409055:	test   BYTE PTR [esi+0x9ac6b4c],bl
  40905b:	push   es
  40905c:	pushf  
  40905d:	lds    ebx,FWORD PTR [edx+0x72a944dc]
  409063:	adc    al,al
  409065:	push   edx
  409066:	mov    ebx,0xa543da92
  40906b:	ficomp DWORD PTR [eax]
  40906d:	imul   edi,DWORD PTR [edi-0x11],0xffffff99
  409071:	sbb    eax,0x244dcfc3
  409076:	jmp    0x409098
  409078:	or     al,0xc5
  40907a:	adc    al,0x32
  40907c:	clc    
  40907d:	mov    edi,0xc86bc12d
  409082:	enter  0xdf7,0xb3
  409086:	call   0xa13b:0x5cbd2df2
  40908d:	xlat   BYTE PTR ds:[ebx]
  40908e:	jg     0x4090d0
  409090:	cmp    DWORD PTR [ebp+0x3910a82e],edi
  409096:	xchg   esi,eax
  409097:	dec    esp
  409098:	adc    al,ah
  40909a:	mov    ebp,0xb229a973
  40909f:	outs   dx,DWORD PTR ds:[esi]
  4090a0:	retf   
  4090a1:	push   0xbdfc5aa5
  4090a6:	js     0x40905c
  4090a8:	addr16 cld 
  4090aa:	sub    al,0xd
  4090ac:	sub    BYTE PTR [ebx-0xe26b27],0x8d
  4090b3:	mov    ecx,0x7af63313
  4090b8:	mov    cl,0x79
  4090ba:	aad    0xc6
  4090bc:	xlat   BYTE PTR ds:[ebx]
  4090bd:	shl    DWORD PTR [eax-0x883c25d],cl
  4090c3:	xchg   BYTE PTR [ebx],al
  4090c5:	(bad)  
  4090c7:	shl    BYTE PTR [ebx+esi*8],cl
  4090ca:	hlt    
  4090cb:	sub    al,0xe1
  4090cd:	faddp  st(2),st
  4090cf:	(bad)  
  4090d0:	and    eax,DWORD PTR [esi+ecx*1+0x2e]
  4090d4:	adc    DWORD PTR [edx+0x25bd94f3],esi
  4090da:	in     eax,dx
  4090db:	enter  0x2d20,0x8e
  4090df:	pop    edx
  4090e0:	add    dh,BYTE PTR [eax]
  4090e2:	cmc    
  4090e3:	dec    edx
  4090e4:	ds pop ebp
  4090e6:	mov    esi,0x7fd49243
  4090eb:	jge    0x4090be
  4090ed:	call   0xa81dc804
  4090f2:	push   eax
  4090f3:	add    dh,bh
  4090f5:	add    esi,DWORD PTR [edi-0x5ca6c25]
  4090fb:	sub    DWORD PTR [eax+0x7e],edi
  4090fe:	xor    al,0x40
  409100:	pop    esp
  409101:	xchg   esi,eax
  409102:	jbe    0x4090b7
  409104:	cld    
  409105:	xchg   ebp,eax
  409106:	jb     0x409112
  409108:	mov    ebx,0xb6469f6a
  40910d:	nop
  40910e:	ficom  DWORD PTR [edx+ecx*4-0x521eaa9a]
  409115:	sub    eax,0x922514dd
  40911a:	popf   
  40911b:	out    0x94,eax
  40911d:	icebp  
  40911e:	xor    DWORD PTR [eax-0x71cdba4e],esp
  409124:	adc    esp,edi
  409126:	push   esp
  409127:	sar    DWORD PTR [esi-0x230422ba],1
  40912d:	jg     0x4091a0
  40912f:	dec    ebx
  409130:	gs xchg edi,eax
  409132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409133:	clc    
  409134:	and    eax,0x4a32a72c
  409139:	lahf   
  40913a:	sbb    al,0xc0
  40913c:	adc    ah,BYTE PTR [edi]
  40913e:	fidiv  WORD PTR [edi+0xc5a5f1b]
  409144:	jp     0x409135
  409146:	jbe    0x409136
  409148:	mov    esi,ebx
  40914a:	sahf   
  40914b:	mov    cl,0x96
  40914d:	cwde   
  40914e:	ss cmp eax,0xa196fb6e
  409154:	push   edi
  409155:	dec    ebp
  409156:	out    dx,eax
  409157:	or     al,ch
  409159:	test   DWORD PTR [ebx],ebp
  40915b:	mov    al,ds:0x80964d6d
  409160:	xor    eax,0x5664c907
  409165:	and    ebp,DWORD PTR [edx+0x23]
  409168:	sbb    bh,BYTE PTR [esi-0x4077157f]
  40916e:	add    ebx,DWORD PTR [eax]
  409170:	jb     0x4091d0
  409172:	dec    ecx
  409173:	adc    edx,esi
  409175:	retf   
  409176:	dec    esp
  409177:	jmp    0x4091b3
  409179:	inc    edi
  40917a:	adc    BYTE PTR [edi-0x2dbd52e1],dh
  409180:	push   es
  409181:	imul   esp,DWORD PTR [edx+0x7b8792c2],0xf
  409188:	mov    esp,DWORD PTR [eax-0x47]
  40918b:	sub    al,0x1c
  40918d:	cmc    
  40918e:	mov    bh,0x7a
  409190:	mov    ch,0xe6
  409192:	das    
  409193:	outs   dx,DWORD PTR ds:[esi]
  409194:	lahf   
  409195:	xlat   BYTE PTR ds:[ebx]
  409196:	leave  
  409197:	sub    al,0x2d
  409199:	and    esi,DWORD PTR [edx]
  40919b:	add    al,0xc
  40919d:	int    0xfd
  40919f:	push   eax
  4091a0:	inc    edi
  4091a1:	cmp    eax,DWORD PTR [edi-0x4c7fb78f]
  4091a7:	mov    ?,esi
  4091a9:	mov    cl,ah
  4091ab:	pop    edi
  4091ac:	icebp  
  4091ad:	or     dh,BYTE PTR [edx]
  4091af:	test   al,0x33
  4091b1:	je     0x409198
  4091b3:	mov    al,0xe1
  4091b5:	cmc    
  4091b6:	cs stos DWORD PTR es:[edi],eax
  4091b8:	jmp    0x287e:0x37b2abcc
  4091bf:	(bad)  
  4091c0:	ror    ecx,0xab
  4091c3:	sbb    al,0xf6
  4091c5:	fisub  DWORD PTR [edx+0x25cdf715]
  4091cb:	dec    eax
  4091cc:	sub    edi,DWORD PTR [ecx-0x59]
  4091cf:	push   eax
  4091d0:	xchg   ecx,eax
  4091d1:	add    esi,DWORD PTR [esi+0x31]
  4091d4:	mov    cl,0xe4
  4091d6:	leave  
  4091d7:	pop    ecx
  4091d8:	gs pushf 
  4091da:	(bad)  [eax-0x7b]
  4091dd:	fstp   TBYTE PTR [ecx]
  4091df:	shl    DWORD PTR [ebx],0x99
  4091e2:	sbb    BYTE PTR [eax],ch
  4091e4:	mov    dl,0x79
  4091e6:	cmc    
  4091e7:	adc    BYTE PTR [ebx-0xb005d32],ch
  4091ed:	test   al,0xd
  4091ef:	inc    esi
  4091f0:	add    BYTE PTR [eax-0x7f],cl
  4091f3:	adc    eax,DWORD PTR [ebx-0x4cd274b9]
  4091f9:	shl    DWORD PTR [ecx+0x6b6fe4ef],cl
  4091ff:	es data16 jg 0x4091f6
  409203:	add    DWORD PTR [edi+ebp*1],edi
  409206:	jmp    0x7e38:0x65d66775
  40920d:	inc    eax
  40920e:	loope  0x40926c
  409210:	cmp    eax,0x5ee1ca56
  409215:	mov    al,0x5
  409217:	pop    si
  409219:	out    0xa,al
  40921b:	ins    DWORD PTR es:[edi],dx
  40921c:	(bad)  
  40921d:	jmp    DWORD PTR [ebp+0x7456b501]
  409223:	adc    al,BYTE PTR [edx-0x1e]
  409226:	aam    0xd4
  409228:	scas   al,BYTE PTR es:[edi]
  409229:	sahf   
  40922a:	dec    ebx
  40922b:	xor    edi,esp
  40922d:	jmp    0x2ef0ec35
  409232:	jl     0x4092a5
  409234:	pop    edx
  409235:	call   DWORD PTR [eax+0x7e49f05f]
  40923b:	mov    ch,0x30
  40923d:	cmp    ebx,DWORD PTR [ebp-0x6b]
  409240:	adc    edi,DWORD PTR [ebx-0x5bd8106b]
  409246:	jbe    0x40928f
  409248:	in     eax,0xcf
  40924a:	cmp    al,0x41
  40924c:	push   eax
  40924d:	stc    
  40924e:	push   eax
  40924f:	arpl   WORD PTR [eax-0x7e],si
  409252:	pusha  
  409253:	sub    al,BYTE PTR [edx]
  409255:	mov    dl,0xe6
  409257:	mov    BYTE PTR [ebx-0xe19d054],dh
  40925d:	popa   
  40925e:	adc    al,0xfb
  409260:	js     0x4091fd
  409262:	test   BYTE PTR [ecx-0x68],bh
  409265:	xor    bl,ch
  409267:	xchg   ecx,eax
  409268:	js     0x409255
  40926a:	pop    fs
  40926c:	in     eax,0xad
  40926e:	icebp  
  40926f:	cli    
  409270:	lods   eax,DWORD PTR ds:[esi]
  409271:	add    bh,BYTE PTR [edi]
  409273:	cmp    eax,0xd715c5df
  409278:	mov    ds:0x4d72ecf3,eax
  40927d:	retf   
  40927e:	mov    edi,eax
  409280:	jle    0x40927b
  409282:	mov    ds:0xe592cfd1,eax
  409287:	in     eax,dx
  409288:	pop    es
  409289:	xchg   edi,eax
  40928a:	sti    
  40928b:	scas   eax,DWORD PTR es:[di]
  40928d:	dec    ebx
  40928e:	int    0x8c
  409290:	dec    edi
  409291:	mov    bh,0xc8
  409293:	push   ss
  409294:	jecxz  0x4092a7
  409296:	lahf   
  409297:	pop    ds
  409298:	js     0x40925c
  40929a:	fisub  DWORD PTR ds:0xe840cfff
  4092a0:	xor    dh,bl
  4092a2:	or     BYTE PTR [esi],0xfc
  4092a5:	mov    al,0xf8
  4092a7:	arpl   WORD PTR [esi+0xbecb4f3],di
  4092ad:	xchg   edi,eax
  4092ae:	sub    DWORD PTR [eax-0x67],edx
  4092b1:	retf   
  4092b2:	add    DWORD PTR [edx-0x390c006c],esi
  4092b8:	out    dx,al
  4092b9:	xchg   ecx,eax
  4092ba:	ins    BYTE PTR es:[edi],dx
  4092bb:	push   0xffffff8e
  4092bd:	ror    BYTE PTR [esi-0x33c91c60],cl
  4092c3:	pushfw 
  4092c5:	call   0xfd46:0xbf95134e
  4092cc:	mov    ah,0xb6
  4092ce:	or     BYTE PTR [ebx-0x5c5d03bb],dh
  4092d4:	sti    
  4092d5:	int    0x1a
  4092d7:	shr    DWORD PTR [ecx],0xab
  4092da:	mov    bl,0xc3
  4092dc:	mov    al,0xc9
  4092de:	dec    esp
  4092df:	js     0x409277
  4092e1:	das    
  4092e2:	es sahf 
  4092e4:	jmp    0xa6b6:0x104cfecd
  4092eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092ec:	inc    ebp
  4092ed:	stos   DWORD PTR es:[edi],eax
  4092ee:	inc    ebp
  4092ef:	xlat   BYTE PTR ds:[ebx]
  4092f0:	es aaa 
  4092f2:	mov    esi,0xeaa0439f
  4092f7:	imul   edx,DWORD PTR [esi+0x64],0xf042d501
  4092fe:	adc    BYTE PTR [edx-0x3b],ah
  409301:	popa   
  409302:	pop    edi
  409303:	xchg   esp,eax
  409304:	xchg   BYTE PTR [esi],ch
  409306:	or     al,0x19
  409308:	mov    eax,ds:0x3bea7376
  40930d:	clc    
  40930e:	or     ebx,DWORD PTR [esi-0x8dcac8]
  409314:	xchg   ebx,eax
  409315:	dec    eax
  409316:	push   eax
  409317:	xor    ebp,0x3885eee4
  40931d:	and    ecx,ebx
  40931f:	and    dh,BYTE PTR [edx]
  409321:	add    edi,DWORD PTR [ecx]
  409323:	pop    esi
  409324:	hlt    
  409325:	imul   edx,DWORD PTR [edi+0xd],0x22c67e7d
  40932c:	push   esi
  40932d:	out    0x18,eax
  40932f:	mov    edi,0x1acd1504
  409334:	mov    edx,0xa506cdfd
  409339:	inc    ecx
  40933a:	xchg   ebx,eax
  40933b:	push   edi
  40933c:	inc    esi
  40933d:	ja     0x4093b8
  40933f:	cmp    BYTE PTR [ecx-0x34253986],0x8a
  409346:	test   BYTE PTR [esi],dl
  409348:	push   edi
  409349:	xlat   BYTE PTR ds:[ebx]
  40934a:	push   esi
  40934b:	push   ebp
  40934c:	cld    
  40934d:	inc    ecx
  40934e:	(bad)
  409351:	fisubr WORD PTR [ecx+0xa]
  409354:	mov    ecx,0xa11f5e
  409359:	jmp    0x4092fa
  40935b:	leave  
  40935c:	xchg   esp,eax
  40935d:	add    dh,BYTE PTR [ebp-0x65b4c100]
  409363:	mov    ecx,0x10265db3
  409368:	mov    al,BYTE PTR [ebx+0x26a9521f]
  40936e:	mov    dh,0x20
  409370:	iret   
  409371:	bound  ecx,QWORD PTR [eax]
  409373:	int3   
  409374:	(bad)  
  409375:	aad    0x2b
  409377:	jbe    0x40939b
  409379:	test   DWORD PTR [esi+0x22bc8ea1],esp
  40937f:	in     al,dx
  409380:	and    ch,dh
  409382:	xchg   ebp,eax
  409383:	ficom  DWORD PTR [ecx+0x4788d2c]
  409389:	fdiv   QWORD PTR [esi]
  40938b:	mov    cl,0x4f
  40938d:	or     BYTE PTR [edx],0x36
  409390:	sbb    bl,BYTE PTR [ebx-0x23]
  409393:	retf   0x264e
  409396:	mov    gs,WORD PTR [ecx]
  409398:	repnz rcl dl,1
  40939b:	imul   edx,DWORD PTR [ebx+0x5a6d56cd],0x78
  4093a2:	pop    esi
  4093a3:	ret    0xec56
  4093a6:	fisttp DWORD PTR [eax+0x77]
  4093a9:	pop    esi
  4093aa:	shl    DWORD PTR [ecx+0x1dd7fee],0xb2
  4093b1:	jnp    0x40934c
  4093b3:	nop
  4093b4:	sub    eax,0xc432f575
  4093b9:	shr    DWORD PTR [eax],cl
  4093bb:	hlt    
  4093bc:	aaa    
  4093bd:	and    ch,BYTE PTR [edx-0x27]
  4093c0:	(bad)  
  4093c1:	jg     0x40939b
  4093c3:	outs   dx,BYTE PTR ds:[esi]
  4093c4:	ds push edx
  4093c6:	and    al,0x85
  4093c9:	sub    BYTE PTR [edx+0x30],cl
  4093cc:	and    BYTE PTR [eax+0x52],dh
  4093cf:	adc    BYTE PTR [edx-0x4b],dl
  4093d2:	arpl   WORD PTR [ebx-0xf3a2772],ax
  4093d8:	dec    edi
  4093d9:	push   0xffffffef
  4093db:	sub    esi,ebp
  4093dd:	mov    ecx,0xe621db55
  4093e2:	adc    eax,0xcb324052
  4093e7:	out    0x93,eax
  4093e9:	in     al,dx
  4093ea:	fwait
  4093eb:	dec    esp
  4093ec:	or     DWORD PTR [ebx],ebx
  4093ee:	add    eax,0x2368a03e
  4093f3:	fs retf 
  4093f5:	clc    
  4093f6:	addr16 dec edi
  4093f8:	daa    
  4093f9:	jbe    0x409471
  4093fb:	mov    DWORD PTR [edi],edi
  4093fd:	and    al,0xe8
  4093ff:	push   0x54
  409401:	es mov esi,0xbc78aef3
  409407:	pop    ss
  409408:	out    0xa9,eax
  40940a:	push   ecx
  40940b:	gs inc edi
  40940d:	pop    esp
  40940e:	and    eax,0x8cfbddea
  409413:	int3   
  409414:	stc    
  409415:	adc    BYTE PTR [ecx+eiz*8-0x5391846],al
  40941c:	call   0x28ea:0x781ec7a3
  409423:	pusha  
  409424:	sbb    al,0xa5
  409426:	sbb    al,0x42
  409428:	sbb    al,0x6c
  40942a:	in     al,0x12
  40942c:	cs xchg edx,eax
  40942e:	gs adc eax,0xe02eadb6
  409434:	cmp    dh,BYTE PTR [esi-0x2]
  409437:	in     al,dx
  409438:	dec    eax
  409439:	pop    ss
  40943a:	cld    
  40943b:	adc    bh,BYTE PTR [edx]
  40943d:	out    dx,al
  40943e:	int    0x74
  409440:	ins    BYTE PTR es:[edi],dx
  409441:	int    0xb8
  409443:	sbb    DWORD PTR [edi],eax
  409445:	lea    ecx,ds:0x284f336f
  40944b:	jecxz  0x4093f8
  40944d:	into   
  40944e:	mov    al,BYTE PTR [edi-0x42db1146]
  409454:	push   eax
  409455:	adc    al,0x2c
  409457:	mov    BYTE PTR [edi],dh
  409459:	jmp    0x4094b8
  40945b:	adc    al,0x1f
  40945d:	int    0x57
  40945f:	stos   BYTE PTR es:[edi],al
  409460:	or     eax,0xb5260bb8
  409465:	lds    esp,FWORD PTR [edx]
  409467:	fcomp  DWORD PTR [ebx-0x786b8706]
  40946d:	inc    esp
  40946e:	and    al,0x49
  409470:	test   DWORD PTR [ebp+0x9],edi
  409473:	sbb    al,0x4f
  409475:	cmp    edx,DWORD PTR [edi]
  409477:	das    
  409478:	push   ds
  409479:	inc    eax
  40947b:	mov    ah,0xe4
  40947d:	or     edx,edx
  40947f:	push   ebp
  409480:	and    al,0x4e
  409482:	push   ebp
  409483:	mov    DWORD PTR [ebx],ebp
  409485:	clc    
  409486:	cmp    bl,bl
  409488:	in     al,0x81
  40948a:	pushf  
  40948b:	jo     0x4094dd
  40948d:	sti    
  40948e:	mov    al,ds:0xf7e2451e
  409493:	sbb    DWORD PTR [esp+edi*4-0xded181e],0xffffffc7
  40949b:	dec    ecx
  40949c:	(bad)
  40949f:	mov    bl,BYTE PTR [edx]
  4094a1:	jg     0x4094a7
  4094a3:	fwait
  4094a4:	add    al,0x73
  4094a6:	or     al,0x55
  4094a8:	mov    esi,0xbb39e54a
  4094ad:	xor    al,0x76
  4094af:	add    edx,esi
  4094b1:	mov    ds:0x80476c95,eax
  4094b6:	push   esp
  4094b7:	pop    ds
  4094b8:	inc    ebp
  4094b9:	xor    ah,BYTE PTR [edi+0x7]
  4094bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094bd:	jg     0x40950b
  4094bf:	ret    
  4094c0:	push   es
  4094c1:	mov    ebp,DWORD PTR [edi-0x3e370ec4]
  4094c7:	idiv   DWORD PTR [eax+0x50378b38]
  4094cd:	out    dx,al
  4094ce:	aad    0x31
  4094d0:	pop    esi
  4094d1:	jecxz  0x4094bf
  4094d3:	jmp    0xe804368a
  4094d8:	daa    
  4094d9:	xchg   DWORD PTR [esi],edi
  4094db:	fcom   DWORD PTR [edx+0x3b835f81]
  4094e1:	inc    edi
  4094e2:	push   esi
  4094e3:	mov    ebp,0x11aa85c7
  4094e8:	mov    DWORD PTR [ecx+0x460cc852],ecx
  4094ee:	lock (bad) 
  4094f0:	jnp    0x4094ae
  4094f2:	mov    dl,0x0
  4094f4:	test   al,0xe1
  4094f6:	pop    ecx
  4094f7:	and    esp,ecx
  4094f9:	lds    eax,FWORD PTR [esi-0x27eac36a]
  4094ff:	xchg   edx,eax
  409500:	call   0x233134b4
  409505:	mov    edi,0x2dbc6933
  40950a:	scas   al,BYTE PTR es:[edi]
  40950b:	xchg   edx,eax
  40950c:	or     DWORD PTR [ebx-0x544f4216],ecx
  409512:	or     DWORD PTR [edx-0x52],edx
  409515:	mov    bl,BYTE PTR [edi-0x78]
  409518:	add    eax,0xaacde5e1
  40951d:	nop
  40951e:	push   si
  409520:	cvtps2pd xmm0,QWORD PTR [ecx-0x42]
  409524:	sti    
  409525:	xchg   ebp,eax
  409526:	xor    bl,dh
  409528:	xor    DWORD PTR [edi-0x11f15676],eax
  40952e:	or     al,0xee
  409530:	inc    edi
  409531:	icebp  
  409532:	push   ebx
  409533:	gs pop es
  409535:	in     eax,dx
  409536:	push   0x37
  409538:	std    
  409539:	jl     0x4094f2
  40953b:	mov    dl,0x97
  40953d:	dec    eax
  40953e:	inc    edx
  40953f:	lea    edi,[ecx+0x1ac30fee]
  409545:	js     0x409591
  409547:	out    0x26,eax
  409549:	(bad)  
  40954a:	aad    0x47
  40954c:	fs mov ebx,0x4d1e101f
  409552:	sbb    eax,0xfefc51be
  409557:	pop    es
  409558:	push   esp
  409559:	cmp    eax,0x7a44cc06
  40955e:	xor    DWORD PTR ds:0xc900abd4,ebp
  409564:	icebp  
  409565:	adc    DWORD PTR [ebp+ebp*8-0x7b],0xe968fe33
  40956d:	in     eax,dx
  40956e:	inc    edi
  40956f:	out    0xce,al
  409571:	cld    
  409572:	mov    ebp,0x49c063d4
  409577:	sub    BYTE PTR [ebx-0x72aab821],bh
  40957d:	(bad)  
  40957e:	in     al,dx
  40957f:	pop    ecx
  409580:	mov    esi,0xc3a89c7c
  409585:	inc    edx
  409586:	mov    ds:0x3e7f6874,al
  40958b:	cwde   
  40958c:	jle    0x4095c2
  40958e:	pop    ss
  40958f:	out    0xa8,al
  409591:	sbb    DWORD PTR [edx],edi
  409593:	cmp    al,0x3f
  409595:	adc    BYTE PTR ds:0x1dbaf864,dl
  40959b:	jne    0x4095bd
  40959d:	popf   
  40959e:	ins    DWORD PTR es:[edi],dx
  40959f:	and    DWORD PTR [ecx-0x33c9f25c],edi
  4095a5:	dec    edx
  4095a6:	aam    0xb3
  4095a8:	mov    ah,BYTE PTR [edx+0x1c]
  4095ab:	into   
  4095ac:	mov    bl,bh
  4095ae:	or     DWORD PTR [edx],edx
  4095b0:	je     0x4095b5
  4095b2:	es inc esp
  4095b4:	pop    eax
  4095b5:	push   cs
  4095b6:	mov    eax,0x23414c5d
  4095bb:	and    bl,dh
  4095bd:	dec    ebx
  4095be:	test   BYTE PTR [edx+0x665d3e5e],dl
  4095c4:	mov    dl,0x60
  4095c6:	xchg   ebx,eax
  4095c7:	pusha  
  4095c8:	or     al,0x5f
  4095ca:	and    DWORD PTR [esi-0x74],edi
  4095cd:	aaa    
  4095ce:	dec    ebx
  4095cf:	lods   eax,DWORD PTR ds:[esi]
  4095d0:	mov    eax,ds:0x3711ca34
  4095d5:	cmc    
  4095d6:	fcomp  DWORD PTR [esi]
  4095d8:	xor    al,0xab
  4095da:	add    bh,bl
  4095dc:	mov    dl,0x1c
  4095de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095df:	adc    al,0x7e
  4095e1:	scas   eax,DWORD PTR es:[edi]
  4095e2:	std    
  4095e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095e4:	les    esp,FWORD PTR [ebp+0x1d83034d]
  4095ea:	pop    edi
  4095eb:	rcr    BYTE PTR [ebp+0x269a882b],1
  4095f1:	mov    bh,0xc1
  4095f3:	mov    esi,0x48b151ef
  4095f8:	mov    BYTE PTR [ebx+0x77],ah
  4095fb:	shl    BYTE PTR [edi+0x62af7258],1
  409601:	or     DWORD PTR [ecx],esp
  409603:	into   
  409604:	clc    
  409605:	mov    dh,0x1
  409607:	cs pop esi
  409609:	cmp    al,0x2e
  40960b:	scas   eax,DWORD PTR es:[edi]
  40960c:	popw   ds
  40960e:	xchg   ebx,eax
  40960f:	into   
  409610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409611:	call   0xfecd:0x23c75d9d
  409618:	test   ebx,eax
  40961a:	rol    eax,cl
  40961c:	pop    ebx
  40961d:	and    BYTE PTR [esi],al
  40961f:	pop    ebx
  409620:	in     eax,dx
  409621:	js     0x409661
  409623:	scas   eax,DWORD PTR es:[edi]
  409624:	sub    edx,esp
  409626:	cs pusha 
  409628:	leave  
  409629:	ret    0xd185
  40962c:	bound  esp,QWORD PTR [ecx]
  40962e:	pusha  
  40962f:	in     eax,0x91
  409631:	jno    0x409690
  409633:	pop    edi
  409634:	cmp    ecx,DWORD PTR [ebx]
  409636:	or     BYTE PTR [ebx],al
  409638:	imul   DWORD PTR ds:0x32445706
  40963e:	add    BYTE PTR [eax+0x7db80fa8],dh
  409644:	dec    edi
  409645:	pop    ss
  409646:	sbb    esp,DWORD PTR [esi+esi*2+0x2e064e8e]
  40964d:	jge    0x4095d8
  40964f:	xchg   esp,eax
  409650:	mov    dl,0xbf
  409652:	(bad)  
  409653:	stos   DWORD PTR es:[edi],eax
  409654:	mov    WORD PTR [ecx+0xc],fs
  409657:	sub    dh,bl
  409659:	jecxz  0x40960d
  40965b:	loope  0x4096be
  40965d:	shl    eax,1
  40965f:	mov    DWORD PTR [eax-0x38],0xfb5e8355
  409666:	jns    0x4096a0
  409668:	xchg   esi,eax
  409669:	mov    ds:0x4189e63b,eax
  40966e:	dec    esi
  40966f:	xor    ecx,DWORD PTR [eax+esi*4+0xc74ae50]
  409676:	test   eax,0x7c987998
  40967b:	repz test eax,0x7396afa2
  409681:	mov    ds:0xe0ad1a94,eax
  409686:	leave  
  409687:	mov    ebp,0xc652d3f7
  40968c:	jb     0x4096a2
  40968e:	mul    bh
  409690:	adc    bl,BYTE PTR [edi+edx*8-0x10f9b6a6]
  409697:	cld    
  409698:	mov    bh,0x18
  40969a:	xchg   edi,eax
  40969b:	push   ss
  40969c:	leave  
  40969d:	mov    esp,0xac141e57
  4096a2:	in     al,dx
  4096a3:	div    DWORD PTR [ecx+0x40]
  4096a6:	pop    es
  4096a7:	sbb    dl,BYTE PTR [edi+0x50]
  4096aa:	sbb    ecx,DWORD PTR [ebp-0x6a]
  4096ad:	and    DWORD PTR [edx+0x51],edi
  4096b0:	dec    ebp
  4096b1:	push   es
  4096b2:	add    dh,bh
  4096b4:	push   0xe020dee3
  4096b9:	mov    ds:0x4ae225b9,eax
  4096be:	jmp    0x974:0xd910b354
  4096c5:	retf   
  4096c6:	mov    dl,0x7e
  4096c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096c9:	fwait
  4096ca:	push   ecx
  4096cb:	scas   eax,DWORD PTR es:[edi]
  4096cc:	cwde   
  4096cd:	aad    0x52
  4096cf:	xchg   BYTE PTR [esi+0xe],bl
  4096d2:	sbb    edx,ecx
  4096d4:	mov    WORD PTR [ebp+0x5eb4ef0a],gs
  4096da:	repnz pop ebp
  4096dc:	sti    
  4096dd:	and    DWORD PTR [bx+di],esp
  4096e0:	clc    
  4096e1:	dec    esi
  4096e2:	xchg   DWORD PTR [edi-0x1efa414f],ebx
  4096e8:	(bad)
  4096ec:	sahf   
  4096ed:	cdq    
  4096ee:	mov    cl,0xa7
  4096f0:	das    
  4096f1:	lods   eax,DWORD PTR ds:[esi]
  4096f2:	mov    WORD PTR [eax+0x14],ds
  4096f5:	push   esp
  4096f6:	and    edx,ebx
  4096f8:	repz mov eax,ds:0x2e9b663
  4096fe:	add    BYTE PTR [edi+0x3b],bl
  409701:	xchg   DWORD PTR [edx+0x6f6b9742],ecx
  409707:	sub    al,0x84
  409709:	daa    
  40970a:	xchg   edx,eax
  40970b:	push   edi
  40970c:	jmp    0x409769
  40970e:	adc    al,al
  409710:	into   
  409711:	int3   
  409712:	fcmovnu st,st(1)
  409714:	mov    ds:0xb61e7a0e,eax
  409719:	test   BYTE PTR [ebp+0x24249cee],dh
  40971f:	lds    eax,FWORD PTR [edi+0x61]
  409722:	cmc    
  409723:	mov    al,ds:0xd4fe5897
  409728:	popf   
  409729:	mov    ds:0xbb3a2389,eax
  40972e:	push   eax
  40972f:	lods   al,BYTE PTR ds:[esi]
  409730:	aaa    
  409731:	outs   dx,BYTE PTR ds:[esi]
  409732:	call   0xebd8:0x3cd7d364
  409739:	mov    fs:0x61ca2730,al
  40973f:	and    al,0xc2
  409741:	retf   0x29ae
  409744:	push   ebp
  409745:	dec    ebx
  409746:	addr16 push 0xa72f647b
  40974c:	dec    esp
  40974d:	inc    ebp
  40974e:	stos   DWORD PTR es:[edi],eax
  40974f:	shr    DWORD PTR [edi+0x208f6c8],1
  409755:	xchg   edi,eax
  409756:	xor    ebp,DWORD PTR [edx-0x1116d80a]
  40975c:	or     BYTE PTR [ebx-0x25fd63ce],al
  409762:	iret   
  409763:	and    al,0xb3
  409765:	mov    cl,0x8f
  409767:	ret    
  409768:	push   esp
  409769:	popf   
  40976a:	dec    eax
  40976b:	sbb    DWORD PTR [edx],0x6bedba2a
  409771:	cmp    eax,0x2d6a88b5
  409776:	xchg   esp,eax
  409777:	add    edi,DWORD PTR [esi+0x6c]
  40977a:	icebp  
  40977b:	icebp  
  40977c:	stos   DWORD PTR es:[edi],eax
  40977d:	push   esi
  40977e:	shl    DWORD PTR [edi],1
  409780:	(bad)  [ebp-0x52899dd6]
  409786:	imul   eax,DWORD PTR [ebp-0x10ff8134],0x27553efe
  409790:	out    0x8b,al
  409792:	xor    ebp,DWORD PTR [ebp+0xf8fdd7b]
  409798:	dec    esi
  409799:	push   es
  40979a:	fmul   st(2),st
  40979c:	in     eax,0x5b
  40979e:	pop    ecx
  40979f:	mov    al,BYTE PTR [ebx+ecx*1-0x3e518650]
  4097a6:	test   al,0x22
  4097a8:	mov    bh,0xcd
  4097aa:	out    0x41,al
  4097ac:	cdq    
  4097ad:	jmp    0x409799
  4097af:	sti    
  4097b0:	jne    0x409750
  4097b2:	or     eax,0x2a9617e4
  4097b7:	dec    esi
  4097b8:	dec    ebx
  4097b9:	lock mov ecx,0x599361
  4097bf:	xchg   dh,bl
  4097c1:	sbb    eax,0x5c057c1
  4097c6:	pusha  
  4097c7:	dec    esi
  4097c8:	xor    BYTE PTR [edx+0x46ae24e7],0xef
  4097cf:	dec    ecx
  4097d0:	push   edi
  4097d1:	int    0xf0
  4097d3:	inc    ebp
  4097d4:	adc    eax,0x40cd94b5
  4097d9:	pop    esi
  4097da:	int    0xbb
  4097dc:	in     eax,dx
  4097dd:	imul   eax,DWORD PTR gs:[edi],0xc88ce598
  4097e4:	retf   0x6a57
  4097e7:	adc    ah,BYTE PTR ds:0x4d0e97e2
  4097ed:	xchg   BYTE PTR [ecx],dl
  4097ef:	ffree  st(3)
  4097f1:	jmp    0x2023:0x2cc11791
  4097f8:	leave  
  4097f9:	jae    0x4097cd
  4097fb:	push   esp
  4097fc:	pop    es
  4097fd:	arpl   di,di
  4097ff:	add    eax,0x7edad92b
  409804:	sbb    edi,DWORD PTR [ebx+0x62]
  409807:	pop    ds
  409808:	shl    DWORD PTR [ecx],cl
  40980a:	popa   
  40980b:	push   edi
  40980c:	scas   eax,DWORD PTR es:[edi]
  40980d:	jl     0x40983a
  40980f:	addr16 test edi,edx
  409812:	mov    BYTE PTR [eax],ch
  409814:	push   ds
  409815:	into   
  409816:	sub    DWORD PTR [edi],esi
  409818:	sub    DWORD PTR [edi+0x607afd6a],esp
  40981e:	inc    ebx
  40981f:	sbb    eax,0x7eaef129
  409824:	in     al,dx
  409825:	mov    DWORD PTR [edx+edi*8-0x6f],edx
  409829:	jns    0x4098aa
  40982b:	push   esi
  40982c:	dec    esi
  40982d:	mov    eax,0x3e27149d
  409832:	or     eax,0x9bc2a78b
  409837:	out    0x58,al
  409839:	fistp  DWORD PTR [ebx-0x2d8ca467]
  40983f:	xchg   DWORD PTR [ecx],eax
  409841:	pop    ebx
  409842:	cld    
  409843:	xlat   BYTE PTR ds:[ebx]
  409844:	sbb    eax,0x106001e7
  409849:	mov    bh,0xea
  40984b:	es jae 0x4098c0
  40984e:	jecxz  0x4097ef
  409850:	ins    DWORD PTR es:[edi],dx
  409851:	fbld   TBYTE PTR [ebx+edi*4-0xc2b2712]
  409858:	push   edx
  409859:	ss push edx
  40985b:	scas   eax,DWORD PTR es:[edi]
  40985c:	cwde   
  40985d:	push   ds
  40985e:	mov    ebx,0x67303978
  409863:	or     edx,DWORD PTR [ebx+0x3c]
  409866:	std    
  409867:	enter  0xb01,0x3a
  40986b:	jmp    0xe631:0xb989ad85
  409872:	outs   dx,BYTE PTR ds:[esi]
  409873:	(bad)  
  409875:	and    al,0xa7
  409877:	mov    bh,0x72
  409879:	aas    
  40987a:	(bad)  
  40987b:	cmp    ah,dh
  40987d:	dec    ebp
  40987e:	pushf  
  40987f:	out    dx,eax
  409880:	call   0x1d66:0x18f971a
  409887:	stos   DWORD PTR es:[edi],eax
  409888:	retf   0x7770
  40988b:	scas   eax,DWORD PTR es:[edi]
  40988c:	ficomp WORD PTR [eax]
  40988e:	jnp    0x409902
  409890:	and    al,0x7e
  409892:	in     eax,0x46
  409894:	mov    ecx,0x64cbc736
  409899:	jmp    0x51c0:0x7ee3b0ef
  4098a0:	sub    dl,BYTE PTR [eax]
  4098a2:	(bad)  
  4098a3:	xlat   BYTE PTR ds:[ebx]
  4098a4:	cmc    
  4098a5:	paddb  mm5,QWORD PTR [edi+0x4e]
  4098a9:	outs   dx,DWORD PTR ds:[esi]
  4098aa:	mov    al,ds:0xc551e755
  4098af:	cld    
  4098b0:	repnz rcr ebp,0xf2
  4098b4:	mov    ecx,0x7bf5b470
  4098b9:	xor    ebp,edi
  4098bb:	loop   0x409914
  4098bd:	xchg   ebx,eax
  4098be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098bf:	xchg   DWORD PTR [ebx-0x6],esp
  4098c2:	mov    dh,0x9d
  4098c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098c5:	mov    dh,0x74
  4098c7:	pop    ecx
  4098c8:	test   al,0xac
  4098ca:	and    BYTE PTR [ebx-0x7299e81f],cl
  4098d0:	add    eax,0xea8937ab
  4098d5:	(bad)  
  4098d6:	ficomp DWORD PTR [eax+0x6f]
  4098d9:	arpl   WORD PTR [ebx+0xf],bx
  4098dc:	fmul   DWORD PTR [ebx]
  4098de:	lods   al,BYTE PTR ds:[esi]
  4098df:	cmp    DWORD PTR [ebx+0x5e],esp
  4098e2:	lods   eax,DWORD PTR ds:[esi]
  4098e3:	push   ecx
  4098e4:	cmp    cl,0xa8
  4098e7:	mov    BYTE PTR [edi+0x4d],bl
  4098ea:	lock (bad) 
  4098ec:	aas    
  4098ed:	cmp    ah,cl
  4098ef:	xchg   edi,eax
  4098f0:	sub    cl,BYTE PTR [esi+esi*2]
  4098f3:	in     eax,dx
  4098f4:	test   al,0x6e
  4098f6:	sar    BYTE PTR [ebx-0x77],0x27
  4098fa:	mov    ebp,DWORD PTR [eax+eax*1+0x1c]
  4098fe:	ja     0x4098a5
  409900:	ret    0xe6c0
  409903:	(bad)  
  409904:	adc    al,0x49
  409906:	mov    BYTE PTR [eax],0x88
  409909:	out    dx,al
  40990a:	xor    DWORD PTR [ebp+0x15],ebx
  40990d:	push   esp
  40990e:	push   ecx
  40990f:	mov    ax,ds:0xe37e960c
  409915:	les    eax,FWORD PTR [edx]
  409917:	fidiv  WORD PTR [ebx-0x5d]
  40991a:	or     ebp,0xffffff92
  40991d:	xchg   edi,eax
  40991e:	ja     0x40996e
  409920:	xor    esp,ebp
  409922:	outs   dx,DWORD PTR ds:[esi]
  409923:	iret   
  409924:	mov    edi,0xeabd472d
  409929:	stc    
  40992a:	mov    ch,BYTE PTR [eax+0x100871ba]
  409930:	leave  
  409931:	or     DWORD PTR [eax-0x11],esi
  409934:	inc    ebx
  409935:	iret   
  409936:	and    edx,DWORD PTR [ebx-0x19]
  409939:	or     ah,dl
  40993b:	pop    es
  40993c:	xor    ebx,DWORD PTR [ebx+0x30c2cbc]
  409942:	int    0x1
  409944:	js     0x40999c
  409946:	out    dx,al
  409947:	pop    ss
  409948:	dec    ebp
  409949:	retf   
  40994a:	mov    DWORD PTR [ecx+0x2e],ebp
  40994d:	dec    esi
  40994e:	retf   
  40994f:	adc    dl,BYTE PTR [ecx+eiz*4-0x171ea176]
  409956:	loope  0x4099a1
  409958:	test   BYTE PTR [edx],0xb9
  40995b:	pop    ebx
  40995c:	loopne 0x4099d5
  40995e:	mov    ch,0x89
  409960:	lock cmp DWORD PTR [edi],edi
  409963:	iret   
  409964:	fsubr  st,st(1)
  409966:	pop    es
  409967:	push   ecx
  409968:	cmc    
  409969:	mov    ah,0x58
  40996b:	out    dx,al
  40996c:	jne    0x409948
  40996e:	dec    esp
  40996f:	mov    edx,0xaae491aa
  409974:	inc    ebx
  409975:	sub    esi,edx
  409977:	ds push ds
  409979:	jl     0x4099c2
  40997b:	mov    ss,WORD PTR [esi]
  40997d:	sub    ch,BYTE PTR [ebx+0x13]
  409980:	std    
  409981:	pop    ebx
  409982:	out    dx,al
  409983:	adc    esp,DWORD PTR ds:0x13e90469
  409989:	jg     0x4099b6
  40998b:	mov    ebx,0x8b2c52b3
  409990:	dec    ebp
  409991:	std    
  409992:	adc    bh,BYTE PTR [ebp+0x5e2d58c3]
  409998:	pop    ss
  409999:	outs   dx,BYTE PTR ds:[esi]
  40999a:	and    al,0x19
  40999c:	mov    ah,0x6e
  40999e:	push   edx
  40999f:	into   
  4099a0:	lock cmp eax,ebp
  4099a3:	mov    DWORD PTR [ecx],0xf29b5159
  4099a9:	or     DWORD PTR [edi+0x5],eax
  4099ac:	lds    ecx,FWORD PTR [edi+0x21]
  4099af:	sbb    cl,al
  4099b1:	mov    edi,ds
  4099b3:	push   edi
  4099b4:	jp     0x409940
  4099b6:	inc    edx
  4099b7:	popf   
  4099b8:	mov    ch,0x47
  4099ba:	(bad)  
  4099bb:	xchg   ebx,eax
  4099bc:	add    eax,0xe29c4fbc
  4099c1:	imul   eax,edx,0x1f
  4099c4:	jae    0x409a03
  4099c6:	mov    esi,ebp
  4099c8:	jecxz  0x409965
  4099ca:	mov    ah,0xcb
  4099cc:	jae    0x409a0f
  4099ce:	sbb    BYTE PTR [edi],0x50
  4099d1:	(bad)  
  4099d2:	jge    0x4099b8
  4099d4:	push   edx
  4099d5:	call   0x40d75f
  4099da:	sub    BYTE PTR [esi-0x22],dh
  4099dd:	in     eax,dx
  4099de:	ds sahf 
  4099e0:	jmp    0x54eda2e3
  4099e5:	inc    ecx
  4099e6:	xor    DWORD PTR [edi],esi
  4099e8:	sar    DWORD PTR [edx-0x3f],1
  4099eb:	jmp    0xe6f57d71
  4099f0:	ror    DWORD PTR [edi-0x13],1
  4099f3:	cmc    
  4099f4:	dec    edi
  4099f5:	dec    edx
  4099f6:	addr16 out 0xb8,al
  4099f9:	hlt    
  4099fa:	iret   
  4099fb:	push   ds
  4099fc:	mov    ecx,DWORD PTR [esi]
  4099fe:	add    al,BYTE PTR ds:0x3076f70e
  409a04:	data16 aam 0xf4
  409a07:	jg     0x409a22
  409a09:	pushf  
  409a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a0b:	imul   ecx,DWORD PTR [ebx-0x54141372],0xffffffde
  409a12:	mov    BYTE PTR es:[ecx+0x67a2ca14],ah
  409a19:	xchg   BYTE PTR [ebp-0x1d7ebf39],cl
  409a1f:	push   ebp
  409a20:	sub    ch,bl
  409a22:	mov    ebp,0xb0fc760e
  409a27:	add    ebx,DWORD PTR ds:0xd9973e65
  409a2d:	sub    bl,BYTE PTR [ebx+0x6eb0dadb]
  409a33:	je     0x409a37
  409a35:	xlat   BYTE PTR ds:[ebx]
  409a36:	mov    edi,0xa628793
  409a3b:	sub    cl,ch
  409a3d:	mov    dl,0x75
  409a3f:	cli    
  409a40:	test   DWORD PTR [edi-0x51],edi
  409a43:	dec    ebx
  409a44:	nop
  409a45:	mov    dh,BYTE PTR [esi-0x1c74fd0f]
  409a4b:	pop    ebp
  409a4c:	pop    ebp
  409a4d:	push   ebp
  409a4e:	sub    BYTE PTR [edx+0xdfc1576],ah
  409a54:	sbb    edi,DWORD PTR [edi+0x28f640d9]
  409a5a:	retf   0x38c
  409a5d:	aas    
  409a5e:	dec    esp
  409a5f:	mov    ebp,0xf00f6dd5
  409a64:	push   ds
  409a65:	mov    cl,0xdf
  409a67:	jnp    0x409a24
  409a69:	mov    ebp,0xd902ad99
  409a6e:	adc    al,0x45
  409a70:	fistp  DWORD PTR [edi+0x58156cb4]
  409a76:	rol    DWORD PTR [ebp+0x21],1
  409a79:	ins    DWORD PTR es:[edi],dx
  409a7a:	jg     0x409a39
  409a7c:	mov    ds:0x1fa76dd6,eax
  409a81:	fild   WORD PTR [eax+0x70]
  409a84:	jge    0x409a42
  409a86:	inc    ebx
  409a87:	je     0x409ade
  409a89:	mov    ah,0x48
  409a8b:	sbb    BYTE PTR [eax],bh
  409a8d:	and    ebx,esp
  409a8f:	xchg   ecx,eax
  409a90:	(bad)  
  409a91:	sub    eax,0x21c10205
  409a96:	hlt    
  409a97:	mov    esp,DWORD PTR [edi-0x1898c227]
  409a9d:	jo     0x409abf
  409a9f:	push   ebx
  409aa0:	add    DWORD PTR [eax-0xb957673],0xffffffae
  409aa7:	jns    0x409b24
  409aa9:	aad    0x36
  409aab:	mov    eax,ds:0x5f21a33d
  409ab0:	pop    eax
  409ab1:	ret    
  409ab2:	das    
  409ab3:	sub    al,0x4b
  409ab5:	mov    ds:0x645c68f4,eax
  409aba:	test   al,0xd0
  409abc:	call   0xee507e3a
  409ac1:	dec    esi
  409ac2:	push   edi
  409ac3:	aaa    
  409ac4:	popa   
  409ac5:	sbb    eax,0xee522524
  409aca:	inc    ebp
  409acb:	and    bh,dl
  409acd:	inc    ecx
  409ace:	cmp    eax,0xb75dafa
  409ad3:	shl    bl,cl
  409ad5:	imul   eax,DWORD PTR [eax+ebx*1-0x4c210138],0xffffff8b
  409add:	mov    bl,0x3c
  409adf:	mov    ebx,0xb7a1a9b4
  409ae4:	xchg   esi,eax
  409ae5:	pop    esi
  409ae6:	dec    ebp
  409ae7:	ins    BYTE PTR es:[edi],dx
  409ae8:	pop    ds
  409ae9:	jne    0x409a90
  409aeb:	jmp    0xf56f311d
  409af0:	jbe    0x409aee
  409af2:	push   ds
  409af3:	(bad)  
  409af5:	pop    eax
  409af6:	pop    ebx
  409af7:	and    al,0xe0
  409af9:	and    dh,BYTE PTR [edx]
  409afb:	div    DWORD PTR [ecx]
  409afd:	adc    bh,dl
  409aff:	or     DWORD PTR [esi],ebx
  409b01:	imul   esi,DWORD PTR [eax-0x3d],0xba478df7
  409b08:	(bad)  
  409b09:	js     0x409aef
  409b0b:	int3   
  409b0c:	add    cl,BYTE PTR [ecx]
  409b0e:	lock and eax,0xb08218d5
  409b14:	xchg   BYTE PTR [edx+0x19cddb3f],ah
  409b1a:	shl    BYTE PTR [eax+0x61],1
  409b1d:	and    bl,BYTE PTR [edi-0x4e]
  409b20:	add    eax,0x6d95ce2c
  409b25:	(bad)  
  409b26:	fadd   QWORD PTR [edx-0xd]
  409b29:	scas   eax,DWORD PTR es:[edi]
  409b2a:	data16 fidiv DWORD PTR [edx+0x2afdb84f]
  409b31:	mov    ecx,0x96ac60c4
  409b36:	adc    DWORD PTR [edx-0x9ebe827],edx
  409b3c:	aas    
  409b3d:	ret    0xdeb2
  409b40:	dec    ecx
  409b41:	jge    0x409b36
  409b43:	jb     0x409b9b
  409b45:	imul   ecx,DWORD PTR [ecx+0x4519f931],0x4b
  409b4c:	(bad)  
  409b4d:	lds    esi,FWORD PTR [esi-0x1]
  409b50:	cmp    bl,BYTE PTR [esi]
  409b52:	retf   
  409b53:	and    edx,DWORD PTR [ebp+0x1198d067]
  409b59:	add    BYTE PTR ds:0x10a511,dl
  409b5f:	shl    dh,1
  409b61:	ret    0xfde8
  409b64:	pushf  
  409b65:	outs   dx,BYTE PTR ds:[esi]
  409b66:	sbb    esp,ebp
  409b68:	adc    edi,ecx
  409b6a:	or     BYTE PTR [ecx+0x46],cl
  409b6d:	mov    al,ds:0xf89833b8
  409b72:	imul   eax,DWORD PTR [eax-0x75cad402],0xffffff9a
  409b79:	dec    ecx
  409b7a:	mov    eax,0xfe531ff4
  409b7f:	shr    edi,cl
  409b81:	dec    esi
  409b82:	ret    
  409b83:	jns    0x409bf5
  409b85:	les    ebp,FWORD PTR [eax-0x6e]
  409b88:	es jle 0x409ba3
  409b8b:	aas    
  409b8c:	sub    BYTE PTR [eax-0x69c0323f],ch
  409b92:	xchg   edi,eax
  409b93:	fadd   QWORD PTR [edx+0x37]
  409b96:	mov    bh,0xcd
  409b98:	push   ebx
  409b99:	retf   
  409b9a:	int    0x12
  409b9c:	jmp    0x409b98
  409b9e:	push   ss
  409b9f:	mov    dl,0x75
  409ba1:	add    al,0xcf
  409ba3:	pop    ecx
  409ba4:	(bad)  
  409ba5:	es hlt 
  409ba7:	mov    ch,0x80
  409ba9:	or     al,0xd6
  409bab:	aam    0xee
  409bad:	mov    bl,0xfd
  409baf:	sub    al,0x6a
  409bb1:	adc    al,0xe6
  409bb3:	and    esi,edx
  409bb5:	cwde   
  409bb6:	repz push 0x3d
  409bb9:	pop    ecx
  409bba:	cmp    eax,0xc9f29968
  409bbf:	out    dx,eax
  409bc0:	mov    es,WORD PTR [ebp+0x3c]
  409bc3:	xor    eax,0x17f99b3f
  409bc8:	jne    0x409c3c
  409bca:	sub    eax,0x9dfd9650
  409bcf:	mov    dh,0x19
  409bd1:	outs   dx,BYTE PTR ds:[esi]
  409bd2:	pop    edx
  409bd3:	inc    ecx
  409bd4:	xchg   esp,eax
  409bd5:	popa   
  409bd6:	push   edx
  409bd7:	in     eax,0xa9
  409bd9:	add    eax,0x300bbe70
  409bde:	adc    eax,0x111602f7
  409be3:	add    edi,DWORD PTR [ebp+0xb]
  409be6:	jns    0x409b77
  409be8:	std    
  409be9:	fist   DWORD PTR [ecx-0x78]
  409bec:	and    eax,0x6ac8f19b
  409bf1:	cmp    eax,0x20fa09fd
  409bf6:	mov    al,ds:0xccabd337
  409bfb:	mov    esi,edx
  409bfd:	xchg   ebx,eax
  409bfe:	or     eax,0x9fc52ba2
  409c03:	imul   ebx,DWORD PTR [edx+0x6b3ab486],0x281f80b9
  409c0d:	jns    0x409bca
  409c0f:	jne    0x409c32
  409c11:	ds xchg ecx,eax
  409c13:	ret    0xd3a6
  409c16:	mov    ds:0xc805ced9,al
  409c1b:	test   al,0xf6
  409c1d:	stos   BYTE PTR es:[edi],al
  409c1e:	add    ecx,DWORD PTR [edx-0x60]
  409c21:	inc    edi
  409c22:	or     BYTE PTR ds:0x19bbeaf8,dh
  409c29:	enter  0xa6ed,0x98
  409c2d:	push   edx
  409c2e:	loopne 0x409bb5
  409c30:	push   0x5fddb7a4
  409c35:	in     al,dx
  409c36:	hlt    
  409c37:	pushf  
  409c38:	div    BYTE PTR [esi-0x10]
  409c3b:	loopne 0x409c86
  409c3d:	xchg   DWORD PTR ds:0x8801c103,esi
  409c43:	xchg   esi,eax
  409c44:	jbe    0x409c19
  409c46:	sub    BYTE PTR [ebp-0x32624965],0x2f
  409c4d:	iret   
  409c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c4f:	sub    DWORD PTR [ecx-0x73748f27],ebx
  409c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c56:	jg     0x409c73
  409c58:	fwait
  409c59:	into   
  409c5a:	mov    es,WORD PTR [esi-0x43a104a5]
  409c60:	xchg   edx,eax
  409c61:	jg     0x409c9e
  409c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c64:	retf   
  409c65:	inc    ebx
  409c66:	in     eax,dx
  409c67:	add    al,0x9e
  409c69:	dec    esp
  409c6a:	push   cs
  409c6b:	loop   0x409c1e
  409c6d:	mov    WORD PTR [ecx-0x3d],cs
  409c70:	jg     0x409ca2
  409c72:	cmp    DWORD PTR fs:[eax],ebx
  409c75:	adc    esp,ecx
  409c77:	retf   0xa333
  409c7a:	ja     0x409c34
  409c7c:	sub    DWORD PTR [eax-0x34dd2a8a],ebp
  409c82:	pop    es
  409c83:	stos   DWORD PTR es:[edi],eax
  409c84:	test   DWORD PTR [esi-0xf7e1262],ebp
  409c8a:	pop    esi
  409c8b:	mov    esi,0xe96b3979
  409c90:	mov    ebx,DWORD PTR [ecx+0x2f]
  409c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c94:	and    bl,dh
  409c96:	arpl   WORD PTR [esi],dx
  409c98:	popa   
  409c99:	mov    ebp,0x300a0d2a
  409c9e:	add    al,dl
  409ca0:	adc    eax,0xbcb3fbea
  409ca5:	push   edx
  409ca6:	loop   0x409c35
  409ca8:	and    bh,BYTE PTR [edi+0x72]
  409cab:	(bad)  
  409cad:	aas    
  409cae:	std    
  409caf:	push   cs
  409cb0:	pop    ds
  409cb1:	mov    ds:0xc9de4299,al
  409cb6:	(bad)  
  409cb7:	arpl   WORD PTR [esi+0x631647b2],si
  409cbd:	enter  0x5d69,0x8b
  409cc1:	jno    0x409d42
  409cc3:	jbe    0x409d40
  409cc5:	mov    esi,0x7b75f5ac
  409cca:	mov    ch,0x92
  409ccc:	jge    0x409cbc
  409cce:	cli    
  409ccf:	push   ebx
  409cd0:	aas    
  409cd1:	push   esi
  409cd2:	push   ebp
  409cd3:	cmp    BYTE PTR [ecx+ebx*4-0x796c500],ch
  409cda:	loopne 0x409cb7
  409cdc:	push   ss
  409cdd:	lods   eax,DWORD PTR ds:[esi]
  409cde:	sti    
  409cdf:	leave  
  409ce0:	dec    esp
  409ce1:	data16 adc BYTE PTR [eax],ch
  409ce4:	push   edx
  409ce5:	push   ebp
  409ce6:	aam    0x7f
  409ce8:	out    0x79,al
  409cea:	fistp  WORD PTR [ebp-0x5d94e3e8]
  409cf0:	and    al,0xc3
  409cf2:	push   esp
  409cf3:	adc    dh,bl
  409cf5:	test   DWORD PTR [ebx],edx
  409cf7:	pop    ss
  409cf8:	inc    eax
  409cf9:	add    eax,0xca4bb2c3
  409cfe:	je     0x409cd4
  409d00:	pop    ebp
  409d01:	retf   0x1260
  409d04:	mov    esi,0x8b135705
  409d09:	sub    BYTE PTR [ebp+0x63],bh
  409d0c:	pusha  
  409d0d:	lahf   
  409d0e:	mov    ah,0x2
  409d10:	stc    
  409d11:	jmp    0xed1a:0x2e70c58a
  409d18:	or     BYTE PTR [si+0x7e],dl
  409d1c:	cmp    bl,BYTE PTR [esi-0x19]
  409d1f:	into   
  409d20:	mov    ch,0x95
  409d22:	jg     0x409cc0
  409d24:	and    bl,al
  409d26:	js     0x409d78
  409d28:	clc    
  409d29:	mov    edi,0x7c0a1a1a
  409d2e:	xabort 0xe0
  409d31:	mov    ds:0xade5a435,eax
  409d36:	mov    eax,ds:0x365bb593
  409d3b:	dec    ebx
  409d3c:	cmp    esp,DWORD PTR [ebx+ecx*4-0x28]
  409d40:	sub    DWORD PTR [edx+0x64625ff0],ebx
  409d46:	cdq    
  409d47:	call   0xec14c02
  409d4c:	push   0xffffffe2
  409d4e:	(bad)  
  409d4f:	mov    esi,0xef6b884
  409d54:	pop    esi
  409d55:	imul   ecx,DWORD PTR ds:0x7c8de8b,0xffffff8a
  409d5c:	pop    esi
  409d5d:	jne    0x409d91
  409d5f:	dec    ecx
  409d60:	jbe    0x409dc6
  409d62:	test   DWORD PTR [esi],ecx
  409d64:	iret   
  409d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d66:	je     0x409cea
  409d68:	ins    DWORD PTR es:[edi],dx
  409d69:	mov    esp,DWORD PTR [edi-0x49]
  409d6c:	in     al,0xfe
  409d6e:	lahf   
  409d6f:	sbb    al,0x2f
  409d71:	ret    0xb7a8
  409d74:	(bad)  
  409d75:	xchg   ecx,eax
  409d76:	and    eax,0x4d54d455
  409d7b:	test   al,0x4f
  409d7d:	sbb    BYTE PTR [eax-0x3ff19545],cl
  409d83:	fs stos BYTE PTR es:[edi],al
  409d85:	iret   
  409d86:	pop    esi
  409d87:	push   es
  409d88:	mov    DWORD PTR [ebp+ebp*4+0x21],esi
  409d8c:	cmp    DWORD PTR [ecx+0x62c1d98a],ecx
  409d92:	nop
  409d93:	lds    edi,FWORD PTR [ebx+0x1e75afc8]
  409d99:	push   esp
  409d9a:	jns    0x409d7a
  409d9c:	push   edi
  409d9d:	out    dx,al
  409d9e:	inc    eax
  409d9f:	daa    
  409da0:	cmp    esp,DWORD PTR [edx-0x22df12c9]
  409da6:	xchg   esp,eax
  409da7:	loope  0x409df8
  409da9:	fild   WORD PTR [ecx+edx*8-0x10]
  409dad:	ficom  DWORD PTR [ebp+0x634dd4c3]
  409db3:	dec    edx
  409db4:	cmp    ecx,DWORD PTR [edx+0x7063add4]
  409dba:	cld    
  409dbb:	mov    ds:0xa98b9135,al
  409dc0:	pop    ebp
  409dc1:	cs lahf 
  409dc3:	ins    DWORD PTR es:[edi],dx
  409dc4:	or     eax,0xf83b59fd
  409dc9:	dec    eax
  409dca:	out    0xe0,al
  409dcc:	jl     0x409e08
  409dce:	mov    gs,WORD PTR [esi+0x65]
  409dd1:	push   ebp
  409dd2:	inc    edi
  409dd3:	pop    esp
  409dd4:	popf   
  409dd5:	cmc    
  409dd6:	out    0x88,al
  409dd8:	das    
  409dd9:	into   
  409dda:	pop    edi
  409ddb:	sbb    eax,0x93aa8151
  409de0:	(bad)
  409de4:	add    DWORD PTR [ebx-0x8c09245],0x70
  409deb:	repz mov ch,0xa7
  409dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409def:	ret    
  409df0:	cmp    eax,0x1d89d00e
  409df5:	ja     0x409e03
  409df7:	adc    al,0x74
  409df9:	stc    
  409dfa:	xor    DWORD PTR [eax],esi
  409dfc:	pusha  
  409dfd:	push   es
  409dfe:	jb     0x409e15
  409e00:	pop    esp
  409e01:	push   ebp
  409e02:	sbb    DWORD PTR [edx-0x41],ebp
  409e05:	adc    eax,DWORD PTR [esp+edi*2]
  409e08:	repz les esi,FWORD PTR [edi-0x6e]
  409e0c:	sub    DWORD PTR [eax],eax
  409e0e:	and    BYTE PTR [ebp-0x5c],ch
  409e11:	cmp    BYTE PTR [esp+esi*8],0xbc
  409e15:	xchg   esi,eax
  409e16:	pop    es
  409e17:	sub    bh,BYTE PTR [ecx]
  409e19:	jb     0x409df1
  409e1b:	mov    al,0xff
  409e1d:	xor    esp,DWORD PTR [edi+0x3c]
  409e20:	adc    BYTE PTR [ecx-0x7e7ad503],bh
  409e26:	fidivr WORD PTR [edx+0x40]
  409e29:	loope  0x409e3f
  409e2b:	mov    bl,0xd6
  409e2d:	cwde   
  409e2e:	in     eax,0x9c
  409e30:	mov    ds:0xa5aca1f0,eax
  409e35:	or     edx,DWORD PTR [esi+0x23]
  409e38:	mov    ebp,ebp
  409e3a:	(bad)  
  409e3b:	out    dx,al
  409e3c:	aaa    
  409e3d:	mov    ah,0xe5
  409e3f:	arpl   dx,bp
  409e41:	xchg   ecx,eax
  409e42:	sbb    BYTE PTR [ecx],cl
  409e44:	fs cmp al,0x5b
  409e47:	mov    al,0xca
  409e49:	push   ds
  409e4a:	xchg   ecx,eax
  409e4b:	imul   esi,DWORD PTR [ebx],0xa56f2aa5
  409e51:	xchg   edx,eax
  409e52:	mov    bh,BYTE PTR ds:0x5a3c9cfd
  409e58:	ret    
  409e59:	aaa    
  409e5a:	or     DWORD PTR [esi],esp
  409e5c:	fild   WORD PTR [ebx-0x4e]
  409e5f:	jno    0x409e3a
  409e61:	xor    eax,0x7ea2c367
  409e66:	mov    ebp,0xac31e304
  409e6b:	and    ebp,ebp
  409e6d:	add    BYTE PTR [eax-0x4ae61978],bl
  409e73:	push   ebp
  409e74:	out    0xfa,al
  409e76:	outs   dx,BYTE PTR ds:[esi]
  409e77:	mov    eax,0xddab1166
  409e7c:	push   ds
  409e7d:	lock cmp ebx,edx
  409e80:	xchg   esi,eax
  409e81:	ins    DWORD PTR es:[edi],dx
  409e82:	lahf   
  409e83:	out    dx,al
  409e84:	fmul   DWORD PTR [edi+0x23ace2cb]
  409e8a:	stc    
  409e8b:	mov    eax,ds:0xde12f2e8
  409e90:	stos   BYTE PTR es:[edi],al
  409e91:	inc    esp
  409e92:	ror    DWORD PTR [esi],1
  409e94:	into   
  409e95:	imul   esp,DWORD PTR [edx],0xf3795ce
  409e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e9c:	stos   DWORD PTR es:[edi],eax
  409e9d:	dec    edi
  409e9e:	xchg   ebx,eax
  409e9f:	dec    ebx
  409ea0:	pop    ebp
  409ea1:	into   
  409ea2:	xchg   edx,eax
  409ea3:	dec    esp
  409ea4:	lods   al,BYTE PTR ds:[esi]
  409ea5:	mov    al,0x79
  409ea7:	ins    BYTE PTR es:[edi],dx
  409ea8:	fisttp DWORD PTR [edx+0x1ba2e5e5]
  409eae:	dec    edx
  409eaf:	dec    esi
  409eb0:	cmp    ah,BYTE PTR [eax]
  409eb2:	or     ebx,DWORD PTR [ebx]
  409eb4:	aas    
  409eb5:	sub    ecx,ebp
  409eb7:	fnstsw WORD PTR [ebp+eiz*1+0x496de27e]
  409ebe:	ins    BYTE PTR es:[edi],dx
  409ebf:	popa   
  409ec0:	sub    eax,0xf4da4c3e
  409ec5:	(bad)  
  409ec6:	prefetch (bad)
  409ec7:	or     eax,0xbfee2ffd
  409ecc:	fdiv   st(6),st
  409ece:	call   0x69e712e4
  409ed3:	xchg   esp,eax
  409ed4:	push   ebx
  409ed5:	mov    ah,0xe8
  409ed7:	bound  edx,QWORD PTR ds:0xa1984280
  409edd:	div    esp
  409edf:	pop    ebp
  409ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee1:	(bad)  
  409ee2:	xchg   esp,eax
  409ee3:	gs loopne 0x409f2a
  409ee6:	in     eax,dx
  409ee7:	jge    0x409ea6
  409ee9:	in     al,0xf5
  409eeb:	jnp    0x409ee8
  409eed:	ret    
  409eee:	cmc    
  409eef:	je     0x409e9d
  409ef1:	adc    eax,0x256c1a6d
  409ef6:	(bad)  
  409ef7:	scas   eax,DWORD PTR es:[edi]
  409ef8:	repnz mov es,WORD PTR [ecx-0x30]
  409efc:	inc    edi
  409efd:	enter  0xc666,0x99
  409f01:	or     al,BYTE PTR [ebp-0x217f7c87]
  409f07:	addr16 or al,0x4c
  409f0a:	retf   0x1049
  409f0d:	jb     0x409f53
  409f0f:	sti    
  409f10:	sub    eax,0x3223ea2a
  409f15:	scas   al,BYTE PTR es:[edi]
  409f16:	sbb    eax,0x4a543a9c
  409f1b:	out    dx,al
  409f1c:	mov    dh,0x64
  409f1e:	ret    
  409f1f:	sub    BYTE PTR [ecx+0x5b3f5a7a],ah
  409f25:	xchg   ebp,eax
  409f26:	inc    ebp
  409f27:	and    cl,dl
  409f29:	in     al,0x7f
  409f2b:	xor    esi,DWORD PTR [edx-0x73]
  409f2e:	mov    dl,0xbc
  409f30:	add    al,0x37
  409f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f33:	icebp  
  409f34:	pop    ebx
  409f35:	mov    ecx,0x8218c4ac
  409f3a:	lds    ecx,FWORD PTR [ecx]
  409f3c:	rol    DWORD PTR [esi-0x352cf022],0xec
  409f43:	retf   
  409f44:	imul   ebp,ebx,0xffffffb7
  409f47:	aas    
  409f48:	outs   dx,BYTE PTR ds:[esi]
  409f49:	ja     0x409f48
  409f4b:	add    DWORD PTR [edx],ecx
  409f4d:	test   eax,0xe73d26df
  409f52:	lods   eax,DWORD PTR ds:[esi]
  409f53:	pop    es
  409f54:	mov    cl,0x17
  409f56:	test   eax,0xca85d347
  409f5b:	stos   BYTE PTR es:[edi],al
  409f5c:	add    ebx,DWORD PTR [ecx+eiz*2+0x608849e1]
  409f63:	aaa    
  409f64:	sbb    esi,DWORD PTR [ebp+esi*8-0x3ac4b031]
  409f6b:	clc    
  409f6c:	std    
  409f6d:	lahf   
  409f6e:	je     0x409fb5
  409f70:	sbb    al,0x2e
  409f72:	in     al,0xac
  409f74:	pop    ss
  409f75:	icebp  
  409f76:	cli    
  409f77:	mov    al,ds:0xc48575fd
  409f7c:	lea    ecx,[eax-0x3b47d72d]
  409f82:	push   ebx
  409f83:	sbb    bh,BYTE PTR [edx]
  409f85:	nop
  409f86:	es and esp,ebp
  409f89:	dec    esp
  409f8a:	cmp    BYTE PTR [ecx],cl
  409f8c:	mov    al,0x95
  409f8e:	push   ebx
  409f8f:	jne    0x40a002
  409f91:	mov    ebx,0x5365fb19
  409f96:	stos   DWORD PTR es:[edi],eax
  409f97:	pop    edi
  409f98:	adc    al,0xf
  409f9a:	ret    
  409f9b:	cmp    eax,eax
  409f9d:	test   DWORD PTR [edx-0x319bd158],ecx
  409fa3:	dec    ecx
  409fa4:	xchg   BYTE PTR [ebx+0xd962986],ch
  409faa:	lahf   
  409fab:	adc    ch,BYTE PTR [edx-0x6dde7e56]
  409fb1:	bound  esp,QWORD PTR [ebx+0x48907be1]
  409fb7:	cld    
  409fb8:	fs inc esp
  409fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fbb:	xor    BYTE PTR [edi],dl
  409fbd:	inc    dh
  409fbf:	popa   
  409fc0:	jmp    0xcdc:0xa0b2f8a
  409fc7:	das    
  409fc8:	lahf   
  409fc9:	sub    esi,DWORD PTR [esi+0x1ba5f7ec]
  409fcf:	mov    bh,0xf5
  409fd1:	mov    esp,0x433f9fc3
  409fd6:	aam    0x21
  409fd8:	cwde   
  409fd9:	ret    
  409fda:	or     al,0xac
  409fdc:	test   al,0xb2
  409fde:	mov    esi,0x573147c4
  409fe3:	ss jb  0x409ff5
  409fe6:	mov    edi,0x70bbe7b6
  409feb:	out    dx,al
  409fec:	pop    ebp
  409fed:	dec    ebx
  409fee:	dec    esp
  409fef:	push   0xffffffe6
  409ff1:	bnd jno 0x409ff8
  409ff4:	sti    
  409ff5:	dec    esp
  409ff6:	mov    dl,0xfc
  409ff8:	adc    ebp,DWORD PTR [ebx-0x44]
  409ffb:	fdivr  DWORD PTR [ebx]
  409ffd:	dec    ecx
  409ffe:	and    BYTE PTR [edi+ebx*1],ah
  40a001:	stc    
  40a002:	std    
  40a003:	xchg   DWORD PTR [esi],esp
  40a005:	xchg   ecx,eax
  40a006:	into   
  40a007:	lods   al,BYTE PTR ds:[esi]
  40a008:	inc    ebp
  40a009:	jg     0x409f9d
  40a00b:	push   ss
  40a00c:	add    DWORD PTR [edx-0x3b],0x9c2d2c19
  40a013:	(bad)  
  40a014:	bound  eax,QWORD PTR [ebp+0x6b]
  40a017:	cli    
  40a018:	les    edx,FWORD PTR ds:0x4efbd8e
  40a01e:	push   cs
  40a01f:	pop    esp
  40a020:	call   0xbaebb746
  40a025:	fldpi  
  40a027:	test   DWORD PTR [edi],esp
  40a029:	repz xchg ebx,eax
  40a02b:	mov    bh,BYTE PTR [ecx+0x2c]
  40a02e:	jnp    0x40a0ac
  40a030:	inc    esp
  40a031:	push   eax
  40a032:	test   al,0xa2
  40a034:	mov    ch,0x87
  40a036:	dec    ebp
  40a037:	adc    ch,BYTE PTR [edx-0x6259ffb9]
  40a03d:	ficom  WORD PTR [edi+0x2e]
  40a040:	imul   ecx,DWORD PTR [edx+eiz*1],0x14
  40a044:	stos   DWORD PTR es:[edi],eax
  40a045:	not    BYTE PTR [ecx+edx*4+0x75]
  40a049:	fwait
  40a04a:	retf   0x34cf
  40a04d:	cmp    eax,0xdf3f857
  40a052:	mov    ch,0xd6
  40a054:	imul   BYTE PTR [eax+ebp*2]
  40a057:	xchg   esp,eax
  40a058:	mov    edx,0x846c8705
  40a05d:	cs nop
  40a05f:	inc    eax
  40a060:	imul   edx,ecx,0xffffffe1
  40a063:	aad    0xa2
  40a065:	sahf   
  40a066:	mov    dl,0xe
  40a068:	or     DWORD PTR [ebx-0x566c45b9],ebp
  40a06e:	cli    
  40a06f:	jne    0x40a0a5
  40a071:	ret    
  40a072:	adc    eax,0x7115617c
  40a077:	daa    
  40a078:	cmp    eax,0xefe3cdff
  40a07d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a07e:	dec    ebp
  40a07f:	xchg   esi,ebp
  40a081:	ss inc eax
  40a083:	xor    dl,al
  40a085:	xor    eax,ecx
  40a087:	mov    edx,0xc2e81e92
  40a08c:	jne    0x40a033
  40a08e:	or     edi,DWORD PTR [eax+0x76]
  40a091:	das    
  40a092:	arpl   WORD PTR [ecx],sp
  40a094:	push   edi
  40a095:	cdq    
  40a096:	fstp   TBYTE PTR [ebx-0x4584e142]
  40a09c:	or     dh,ch
  40a09e:	(bad)  
  40a09f:	mov    bh,0xef
  40a0a1:	or     al,0x94
  40a0a3:	jo     0x40a118
  40a0a5:	lods   eax,DWORD PTR ds:[esi]
  40a0a6:	cdq    
  40a0a7:	inc    ecx
  40a0a8:	(bad)  
  40a0a9:	adc    al,cl
  40a0ab:	fwait
  40a0ac:	pop    es
  40a0ad:	sub    al,ch
  40a0af:	push   edx
  40a0b0:	xlat   BYTE PTR ds:[ebx]
  40a0b1:	in     eax,dx
  40a0b2:	clc    
  40a0b3:	jp     0x40a096
  40a0b5:	call   0x2797:0x2a2f1a33
  40a0bc:	(bad)  
  40a0bd:	sbb    DWORD PTR [edx],edx
  40a0bf:	popa   
  40a0c0:	cdq    
  40a0c1:	fld    TBYTE PTR [ebp-0x7449cca5]
  40a0c7:	inc    eax
  40a0c8:	lahf   
  40a0c9:	xor    BYTE PTR [ebx],al
  40a0cb:	sbb    DWORD PTR [ecx+ebp*4-0x57],eax
  40a0cf:	mov    eax,ds:0x79f780e0
  40a0d4:	pop    es
  40a0d5:	ins    BYTE PTR es:[edi],dx
  40a0d6:	scas   al,BYTE PTR es:[edi]
  40a0d7:	arpl   WORD PTR [esi+0x5f1e4490],dx
  40a0dd:	ins    DWORD PTR es:[edi],dx
  40a0de:	ins    BYTE PTR es:[edi],dx
  40a0df:	test   eax,0x57e29c34
  40a0e4:	loope  0x40a134
  40a0e6:	mov    ah,BYTE PTR [edi-0x21]
  40a0e9:	pop    esi
  40a0ea:	jno    0x40a0f9
  40a0ec:	xor    DWORD PTR [ebx+0x38e8904f],ebp
  40a0f2:	sbb    esi,edi
  40a0f4:	jmp    0x40a146
  40a0f6:	lds    esp,FWORD PTR [edi+0x51]
  40a0f9:	imul   edx,DWORD PTR [ecx-0x488ec3eb],0xfffffff3
  40a100:	sbb    DWORD PTR [edx],ebx
  40a102:	out    0x1c,eax
  40a104:	adc    ecx,DWORD PTR [eax-0x582d1309]
  40a10a:	mov    ch,0xea
  40a10c:	adc    dl,ch
  40a10e:	outs   dx,DWORD PTR ds:[esi]
  40a10f:	outs   dx,DWORD PTR ds:[esi]
  40a110:	pop    edx
  40a111:	mov    bh,0x7
  40a113:	push   ds
  40a114:	outs   dx,DWORD PTR ds:[esi]
  40a115:	jle    0x40a0de
  40a117:	or     dh,BYTE PTR [edi+0x28c05e88]
  40a11d:	enter  0x7b80,0x2
  40a121:	mov    ds:0x6b552f95,al
  40a126:	xchg   edi,eax
  40a127:	or     BYTE PTR [edi-0x30],al
  40a12a:	ins    DWORD PTR es:[edi],dx
  40a12b:	xor    eax,0x30c0dc20
  40a130:	fild   WORD PTR [edx+eax*1+0x71]
  40a134:	pushf  
  40a135:	pop    ax
  40a137:	or     cl,al
  40a139:	and    eax,0x739d0d6a
  40a13e:	stos   DWORD PTR es:[edi],eax
  40a13f:	stc    
  40a140:	cmp    bl,BYTE PTR [ebx+0x41]
  40a143:	outs   dx,BYTE PTR ds:[esi]
  40a144:	shl    BYTE PTR [edi-0x52fda8aa],0x1a
  40a14b:	xchg   esp,eax
  40a14c:	int    0xd7
  40a14e:	sub    al,0x4c
  40a150:	add    al,BYTE PTR [esi-0x1d1c0426]
  40a156:	cmp    DWORD PTR [edi],edi
  40a158:	in     eax,0x37
  40a15a:	mov    DWORD PTR [edi+0x14],ebp
  40a15d:	push   ss
  40a15e:	jno    0x40a154
  40a160:	sub    eax,0xe6a42f21
  40a165:	push   esi
  40a166:	pop    esi
  40a167:	test   BYTE PTR [eax],ah
  40a169:	and    eax,esp
  40a16b:	dec    ebx
  40a16c:	pop    ebp
  40a16d:	xchg   edx,eax
  40a16e:	stc    
  40a16f:	pop    ebx
  40a170:	not    BYTE PTR [ebx+0x70927652]
  40a176:	jle    0x40a176
  40a178:	daa    
  40a179:	ja     0x40a1ce
  40a17b:	in     eax,0x18
  40a17d:	test   bl,ch
  40a17f:	add    ebp,DWORD PTR [ecx]
  40a181:	mov    ch,0xa7
  40a183:	jmp    0x40a1ab
  40a185:	xlat   BYTE PTR ds:[ebx]
  40a186:	xor    edi,DWORD PTR ds:0x3bfd1997
  40a18c:	popa   
  40a18d:	jge    0x40a186
  40a18f:	sahf   
  40a190:	cwde   
  40a191:	mov    eax,eax
  40a193:	and    ah,dl
  40a195:	pop    es
  40a196:	neg    DWORD PTR [edi+0x6]
  40a199:	jl     0x40a19a
  40a19b:	popa   
  40a19c:	cmp    BYTE PTR [ecx-0x4305724],dh
  40a1a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1a3:	add    BYTE PTR [eax],0xb8
  40a1a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1a7:	push   esi
  40a1a8:	mov    eax,0xff32b644
  40a1ad:	aaa    
  40a1ae:	inc    ebx
  40a1af:	mov    bh,0x91
  40a1b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b2:	mov    ah,0x56
  40a1b4:	xor    eax,0xff4bef92
  40a1b9:	in     eax,0x4b
  40a1bb:	adc    al,BYTE PTR [ecx-0x39]
  40a1be:	pop    eax
  40a1bf:	mov    ebx,0xb70f6692
  40a1c4:	leave  
  40a1c5:	popf   
  40a1c6:	push   esi
  40a1c7:	mov    ds:0x26ba3b80,al
  40a1cc:	cpuid  
  40a1ce:	cmp    DWORD PTR [edi+edi*4],0x70
  40a1d2:	push   edx
  40a1d3:	stos   BYTE PTR es:[edi],al
  40a1d4:	fs push esp
  40a1d6:	jbe    0x40a1c6
  40a1d8:	xchg   edx,eax
  40a1d9:	cmp    al,BYTE PTR [eax+0x1c3d04a]
  40a1df:	idiv   DWORD PTR [edx+0x2d28637c]
  40a1e5:	pop    es
  40a1e6:	test   BYTE PTR [ebp+0x73],ch
  40a1e9:	int3   
  40a1ea:	fadd   QWORD PTR [eax+0x3b]
  40a1ed:	cmp    al,0xf0
  40a1ef:	fs fs cmp al,0xf6
  40a1f3:	xor    esp,edi
  40a1f5:	and    al,0x92
  40a1f7:	mov    dh,0x12
  40a1f9:	inc    esp
  40a1fa:	xchg   ecx,eax
  40a1fb:	add    al,0x15
  40a1fd:	fiadd  WORD PTR [ecx+eax*1+0x1844c9d7]
  40a204:	stos   DWORD PTR es:[edi],eax
  40a205:	pop    esi
  40a206:	add    eax,0x6b1eb54c
  40a20b:	es scas eax,DWORD PTR es:[edi]
  40a20d:	push   ecx
  40a20e:	cmc    
  40a20f:	call   0xc7d88928
  40a214:	sbb    eax,0xa6a648a6
  40a219:	daa    
  40a21a:	cmp    esp,eax
  40a21c:	inc    esp
  40a21d:	sub    ch,ah
  40a21f:	sahf   
  40a220:	bound  esi,QWORD PTR [edi-0x512cbaca]
  40a226:	stos   DWORD PTR es:[edi],eax
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    eax,ds:0xb3d899e4
  40a22d:	push   es
  40a22e:	adc    DWORD PTR [ebx-0x68],eax
  40a231:	gs ret 0xba56
  40a235:	add    eax,0x2485bd0e
  40a23a:	mul    dl
  40a23c:	out    0xe2,al
  40a23e:	mov    al,ds:0xf59bc178
  40a243:	cli    
  40a244:	xchg   ebp,eax
  40a245:	sbb    eax,0xfe314809
  40a24a:	or     al,0xe5
  40a24c:	push   ds
  40a24d:	jge    0x40a212
  40a24f:	lods   al,BYTE PTR ds:[esi]
  40a250:	or     cl,bh
  40a252:	in     al,dx
  40a253:	sub    DWORD PTR [ecx+0x4a58320c],eax
  40a259:	push   cs
  40a25a:	js     0x40a240
  40a25c:	daa    
  40a25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a25e:	test   eax,0x2e26b129
  40a263:	int    0xca
  40a265:	imul   ebp,DWORD PTR [ebx+0x78cd83e],0xfffffffa
  40a26c:	mov    edi,0xd5bf878b
  40a271:	cmp    DWORD PTR [ecx+0x139d2c27],edx
  40a277:	mov    edi,0x77246125
  40a27c:	ret    
  40a27d:	fsubr  st(6),st
  40a27f:	repz push es
  40a281:	fs aaa 
  40a283:	inc    eax
  40a284:	fidiv  DWORD PTR [eax-0x1f]
  40a287:	xchg   ecx,eax
  40a288:	cld    
  40a289:	aad    0xee
  40a28b:	mov    al,ds:0x4f0c50c1
  40a290:	adc    DWORD PTR [eax+0x2a5700df],edx
  40a296:	inc    edi
  40a297:	mov    esp,0xbc25f7d8
  40a29c:	sub    DWORD PTR [edi+ebp*1-0x31],0xb90da509
  40a2a4:	test   BYTE PTR [esi-0x48e160ce],bl
  40a2aa:	aam    0xf
  40a2ac:	cmp    dl,bh
  40a2ae:	and    cl,0xcd
  40a2b1:	dec    ecx
  40a2b2:	pusha  
  40a2b3:	ret    
  40a2b4:	dec    ax
  40a2b6:	in     al,dx
  40a2b7:	push   edx
  40a2b8:	and    dl,al
  40a2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2bb:	pop    eax
  40a2bc:	mov    ds:0x1623ee8a,al
  40a2c1:	inc    esp
  40a2c2:	in     eax,0x9c
  40a2c4:	inc    edx
  40a2c5:	mov    al,0x31
  40a2c7:	mov    dl,0x22
  40a2c9:	call   0x5cd32803
  40a2ce:	mov    dl,0x77
  40a2d0:	push   eax
  40a2d1:	and    eax,0xa73639b0
  40a2d6:	(bad)  
  40a2d7:	(bad)  [esi-0x224b8d6e]
  40a2dd:	fcmovb st,st(0)
  40a2df:	sahf   
  40a2e0:	mov    edi,0xa30057f
  40a2e5:	shl    BYTE PTR [esi+0x59],1
  40a2e8:	lds    edx,FWORD PTR [eax+0x1c]
  40a2eb:	mov    esi,0x4959b5bf
  40a2f0:	call   0xa725:0xf70dafe2
  40a2f7:	lods   eax,DWORD PTR ds:[esi]
  40a2f8:	mov    al,0x7c
  40a2fa:	mov    ecx,0xeab144ae
  40a2ff:	les    edx,FWORD PTR es:[edi]
  40a302:	sub    eax,0x6766292
  40a307:	jno    0x40a354
  40a309:	xchg   ecx,eax
  40a30a:	test   DWORD PTR [esi],edi
  40a30c:	pop    esp
  40a30d:	mov    ds:0x3784ddf4,al
  40a312:	mov    ch,BYTE PTR [edi+0x3d]
  40a315:	(bad)  
  40a316:	(bad)  
  40a318:	addr16 add al,0x49
  40a31b:	and    ah,BYTE PTR [ebx]
  40a31d:	sub    ebp,DWORD PTR [ecx+0x72f88207]
  40a323:	mov    ebx,ebx
  40a325:	scas   al,BYTE PTR es:[edi]
  40a326:	jmp    0x4f1ea139
  40a32b:	add    eax,0xafea0b2e
  40a330:	inc    ebx
  40a331:	inc    ebx
  40a332:	shl    DWORD PTR [edi-0xc],1
  40a335:	adc    al,0x13
  40a337:	mov    ch,ah
  40a339:	sbb    eax,DWORD PTR [ebx+0x448f321]
  40a33f:	call   0x1c7b:0xb5daae43
  40a346:	nop
  40a347:	mov    bl,0x26
  40a349:	test   al,0x74
  40a34b:	outs   dx,BYTE PTR ds:[esi]
  40a34c:	cmp    edi,DWORD PTR [edx+0x539f5b51]
  40a352:	push   0xffffffd9
  40a354:	mov    dl,BYTE PTR [esi+0x2c]
  40a357:	(bad)  
  40a358:	aad    0xe3
  40a35a:	repz fbld TBYTE PTR [ebx+eax*1-0x76]
  40a35f:	cmp    BYTE PTR [edi+0x30],dl
  40a362:	add    BYTE PTR [edi+0x66a14716],bl
  40a368:	rcr    DWORD PTR [edx],1
  40a36a:	push   edx
  40a36b:	mov    ds:0x4afe088c,al
  40a370:	xchg   BYTE PTR gs:[eax-0x325a3585],bl
  40a377:	lea    ecx,[ebx-0x65a15d33]
  40a37d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a37e:	icebp  
  40a37f:	(bad)  
  40a380:	fdiv   DWORD PTR [ebx+esi*2]
  40a383:	mov    al,ds:0x31b7be95
  40a388:	adc    DWORD PTR [edx-0x5e],eax
  40a38b:	gs loop 0x40a337
  40a38e:	aaa    
  40a38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a390:	inc    ecx
  40a391:	popa   
  40a392:	mov    DWORD PTR ds:0x95774f24,esp
  40a398:	xor    DWORD PTR [eax+0x27],ecx
  40a39b:	sub    al,0x8b
  40a39d:	jmp    FWORD PTR [ebx-0x45df7ee5]
  40a3a3:	(bad)  [eax]
  40a3a5:	pop    ds
  40a3a6:	(bad)  
  40a3a8:	sub    edx,0x18
  40a3ab:	jno    0x40a420
  40a3ad:	adc    DWORD PTR [ecx+esi*4-0x4a],0x821435ee
  40a3b5:	aam    0xf6
  40a3b7:	lock add dl,ch
  40a3ba:	hlt    
  40a3bb:	xchg   ebp,eax
  40a3bc:	mov    al,ds:0x1ecf5519
  40a3c1:	test   DWORD PTR ss:[edi-0x17844f32],esp
  40a3c8:	adc    bl,dl
  40a3ca:	xor    al,0xb0
  40a3cc:	cmp    bh,BYTE PTR [ebx]
  40a3ce:	xor    al,0x6e
  40a3d0:	call   0x89aa1393
  40a3d5:	dec    edi
  40a3d6:	dec    edi
  40a3d7:	ss xchg edx,eax
  40a3d9:	mov    WORD PTR [ecx],ds
  40a3db:	ins    BYTE PTR es:[edi],dx
  40a3dc:	sub    al,0x75
  40a3de:	jmp    0x580e9185
  40a3e3:	mov    al,0xa4
  40a3e5:	dec    edi
  40a3e6:	fdivr  DWORD PTR [ecx-0x20]
  40a3e9:	mov    ch,0x75
  40a3eb:	cmp    ebx,eax
  40a3ed:	ret    0x16f5
  40a3f0:	das    
  40a3f1:	jg     0x40a439
  40a3f3:	cmp    DWORD PTR [ebx+edx*2+0x3709b487],ecx
  40a3fa:	xor    eax,0x4b2d12f
  40a3ff:	jne    0x40a3b8
  40a401:	inc    eax
  40a402:	mov    al,ds:0x4b1c4c60
  40a407:	pop    ds
  40a408:	pop    ss
  40a409:	pop    esi
  40a40a:	dec    eax
  40a40b:	pop    eax
  40a40c:	add    ebp,0x6d
  40a40f:	or     al,BYTE PTR [ebp-0x302df9af]
  40a415:	gs popa 
  40a417:	hlt    
  40a418:	loop   0x40a3fe
  40a41a:	popa   
  40a41b:	test   DWORD PTR [eax],edi
  40a41d:	push   es
  40a41e:	sahf   
  40a41f:	leave  
  40a420:	pop    ss
  40a421:	xor    al,0x16
  40a423:	retf   
  40a424:	and    BYTE PTR [ebx],0xd
  40a427:	xor    DWORD PTR [ecx-0x11],eax
  40a42a:	aam    0xf7
  40a42c:	outs   dx,DWORD PTR ds:[esi]
  40a42d:	ins    BYTE PTR es:[edi],dx
  40a42e:	mov    edx,0xbbf2e787
  40a433:	sar    BYTE PTR [ebx+0x5a4e7b50],0x34
  40a43a:	icebp  
  40a43b:	push   0xfffffff2
  40a43d:	(bad)  
  40a43e:	jmp    0x40a420
  40a440:	cmp    edi,eax
  40a442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a443:	mov    ds:0xa747ea25,al
  40a448:	sub    dh,BYTE PTR [eax+0x662cb7db]
  40a44e:	repz adc al,0x87
  40a451:	sub    al,0x15
  40a453:	fs inc ebx
  40a455:	add    cl,BYTE PTR [ebx]
  40a457:	push   edi
  40a458:	dec    ebx
  40a459:	lods   al,BYTE PTR ds:[esi]
  40a45a:	mov    ebx,0x1ca49a7
  40a45f:	aaa    
  40a460:	push   edi
  40a461:	sbb    BYTE PTR [esi-0x340a0346],al
  40a467:	lea    edi,[esi]
  40a469:	pop    ebx
  40a46a:	fcomp  QWORD PTR [esi*4-0x1d53346c]
  40a471:	sub    dh,BYTE PTR ds:[ebp-0x3f]
  40a475:	inc    ebx
  40a476:	lds    ebp,FWORD PTR [edi]
  40a478:	mov    eax,ds:0xca42959c
  40a47d:	lar    esi,dx
  40a480:	or     DWORD PTR [ebp+eiz*4-0x1e],0x7c
  40a485:	mov    esp,0x8af05c14
  40a48a:	imul   edi,DWORD PTR [edi],0x121606e2
  40a490:	lods   al,BYTE PTR ds:[esi]
  40a491:	dec    ebp
  40a492:	fistp  QWORD PTR ds:0x83d54525
  40a498:	scas   al,BYTE PTR es:[edi]
  40a499:	repz retf 0x62f8
  40a49d:	wrmsr  
  40a49f:	test   eax,0x22683fae
  40a4a4:	ret    0x1ec5
  40a4a7:	jle    0x40a506
  40a4a9:	and    dl,ch
  40a4ab:	rcr    BYTE PTR [esi+0x5f],1
  40a4ae:	bound  eax,QWORD PTR [ecx+0x38]
  40a4b1:	sub    BYTE PTR [ebx+0x51],ch
  40a4b4:	in     al,0x5a
  40a4b6:	out    0x42,eax
  40a4b8:	scas   eax,DWORD PTR es:[edi]
  40a4b9:	sbb    ecx,DWORD PTR [ebx-0x5d]
  40a4bc:	inc    edx
  40a4bd:	xor    eax,DWORD PTR [edx+0x75]
  40a4c0:	jmp    eax
  40a4c2:	push   esi
  40a4c3:	cmp    al,0xe
  40a4c5:	scas   eax,DWORD PTR es:[edi]
  40a4c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c7:	pushf  
  40a4c8:	dec    edx
  40a4c9:	(bad)  
  40a4ca:	out    0x49,al
  40a4cc:	stos   DWORD PTR es:[edi],eax
  40a4cd:	into   
  40a4ce:	test   BYTE PTR [eax-0x1cc9330d],al
  40a4d4:	imul   eax,ecx,0x871e2072
  40a4da:	xor    dl,dh
  40a4dc:	cmp    BYTE PTR [bx+di],cl
  40a4df:	mov    ebx,0xb5704682
  40a4e4:	add    edx,DWORD PTR [bx+di-0x68f1]
  40a4e9:	jnp    0x40a46d
  40a4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4ec:	out    dx,eax
  40a4ed:	jecxz  0x40a4cc
  40a4ef:	inc    edx
  40a4f0:	bound  edx,QWORD PTR [ebp-0x174bcf0f]
  40a4f6:	in     al,dx
  40a4f7:	sti    
  40a4f8:	(bad)  
  40a4f9:	lods   eax,DWORD PTR ds:[esi]
  40a4fa:	ror    edx,0x2f
  40a4fd:	test   DWORD PTR [esi],edx
  40a4ff:	and    esi,DWORD PTR [ebx+0x7229388b]
  40a505:	pop    edi
  40a506:	retf   
  40a507:	in     eax,0xe8
  40a509:	icebp  
  40a50a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a50b:	mov    bl,0x68
  40a50d:	dec    eax
  40a50e:	nop
  40a50f:	fdivr  DWORD PTR [esi-0x4c]
  40a512:	xlat   BYTE PTR ds:[ebx]
  40a513:	push   esp
  40a514:	inc    eax
  40a515:	(bad)  
  40a516:	into   
  40a517:	popa   
  40a518:	imul   edx,DWORD PTR [ebx],0x35e51a37
  40a51e:	or     eax,0x9ab3940d
  40a523:	test   DWORD PTR [ecx],esp
  40a525:	cmp    BYTE PTR [eax+0x71404448],ah
  40a52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a52c:	and    BYTE PTR [eax+0x203caa],bh
  40a532:	jno    0x40a577
  40a534:	inc    ecx
  40a535:	mov    ebx,0xdee1c6c
  40a53a:	mov    al,0x4c
  40a53c:	jmp    0xc5a207a8
  40a541:	adc    al,0xdf
  40a543:	fimul  WORD PTR [ebx+0x22]
  40a546:	jmp    0xe697d345
  40a54b:	idiv   BYTE PTR [eax]
  40a54d:	dec    esi
  40a54e:	cmp    DWORD PTR [edx+eiz*4],0x8
  40a552:	retf   
  40a553:	fild   DWORD PTR [ebx+0x25e83de5]
  40a559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a55a:	out    dx,al
  40a55b:	enter  0xeacd,0x9b
  40a55f:	dec    ebx
  40a560:	mov    ch,0x2
  40a562:	ins    BYTE PTR es:[edi],dx
  40a563:	daa    
  40a564:	fldlg2 
  40a566:	mov    esp,0x572990da
  40a56b:	sub    BYTE PTR [ebp-0x3c],ah
  40a56e:	push   esi
  40a56f:	dec    ecx
  40a570:	mov    esp,0xac3a44c6
  40a575:	cdq    
  40a576:	stc    
  40a577:	(bad)  
  40a578:	sbb    DWORD PTR [ebp-0x6e],ebx
  40a57b:	loop   0x40a573
  40a57d:	and    ecx,edi
  40a57f:	push   ebp
  40a580:	test   eax,0xd22a36fb
  40a585:	add    al,0xfc
  40a587:	leave  
  40a588:	loopne 0x40a5d9
  40a58a:	jmp    0xe406:0x26dda895
  40a591:	jmp    0x47a029c2
  40a596:	inc    edi
  40a597:	jns    0x40a58a
  40a599:	add    BYTE PTR [ebx+eax*1-0x3b0380ae],ah
  40a5a0:	adc    bh,BYTE PTR [esi-0x4ccde958]
  40a5a6:	das    
  40a5a7:	inc    esi
  40a5a8:	xchg   ecx,eax
  40a5a9:	rcl    dh,0xe5
  40a5ac:	pop    ss
  40a5ad:	fwait
  40a5ae:	ret    
  40a5af:	add    ebx,DWORD PTR [ecx-0x71]
  40a5b2:	scas   al,BYTE PTR es:[edi]
  40a5b3:	cwde   
  40a5b4:	faddp  st(7),st
  40a5b6:	daa    
  40a5b7:	mov    edx,0x426a1d99
  40a5bc:	bound  ebp,QWORD PTR [eax+0x1e]
  40a5bf:	adc    bh,BYTE PTR cs:[edx-0x4f]
  40a5c3:	stos   BYTE PTR es:[edi],al
  40a5c4:	je     0x40a57b
  40a5c6:	mov    DWORD PTR [eax],0xedea2ce9
  40a5cc:	mov    cl,0x34
  40a5ce:	into   
  40a5cf:	dec    eax
  40a5d0:	retf   0x949f
  40a5d3:	cmp    al,0xbb
  40a5d5:	pop    edx
  40a5d6:	repz dec ecx
  40a5d8:	test   DWORD PTR [ecx-0x3a263e3d],edi
  40a5de:	ror    edi,cl
  40a5e0:	dec    ebx
  40a5e1:	cmp    edi,DWORD PTR [esi+ebx*1]
  40a5e4:	popf   
  40a5e5:	mov    bh,0x4d
  40a5e7:	sbb    DWORD PTR [esi+0x30e3d27c],edi
  40a5ed:	xor    al,0xff
  40a5ef:	sub    DWORD PTR [ebp+0x12b70bb1],esi
  40a5f5:	or     DWORD PTR [esp+edx*2+0x7b8f4558],edx
  40a5fc:	adc    eax,0xd673af65
  40a601:	cmp    DWORD PTR [esi],ebx
  40a603:	adc    bh,cl
  40a605:	fucompp 
  40a607:	cs loope 0x40a58f
  40a60a:	sbb    DWORD PTR [edx-0x2cbdee09],ecx
  40a610:	iret   
  40a611:	dec    esi
  40a612:	(bad)
  40a615:	loop   0x40a667
  40a617:	adc    ecx,DWORD PTR [esi+ebx*1+0xa]
  40a61b:	or     al,0xa4
  40a61d:	and    dh,BYTE PTR [edi]
  40a61f:	daa    
  40a620:	mov    ch,0xb5
  40a622:	jg     0x40a686
  40a624:	sbb    esi,ecx
  40a626:	or     dl,BYTE PTR [edi-0x40]
  40a629:	push   ecx
  40a62a:	cdq    
  40a62b:	ja     0x40a66e
  40a62d:	jb     0x40a63f
  40a62f:	in     eax,dx
  40a630:	add    BYTE PTR [ecx-0x4006835d],0x1
  40a637:	and    bh,BYTE PTR [esi]
  40a639:	xlat   BYTE PTR ds:[ebx]
  40a63a:	fdivr  DWORD PTR [edi-0x4b]
  40a63d:	xchg   ebp,eax
  40a63e:	or     eax,0x95fa5d1d
  40a643:	fcmovnu st,st(0)
  40a645:	adc    al,0x15
  40a647:	inc    edx
  40a648:	pop    edx
  40a649:	cmc    
  40a64a:	fsub   DWORD PTR [ebx+0x8]
  40a64d:	sub    al,ch
  40a64f:	sbb    al,0x8d
  40a651:	sub    ebp,edx
  40a653:	add    BYTE PTR [ebp-0x37],cl
  40a656:	or     esp,DWORD PTR [eax]
  40a658:	fsub   st,st(0)
  40a65a:	jb     0x40a5e0
  40a65c:	xchg   edi,eax
  40a65d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a65e:	xor    bh,bh
  40a660:	sub    DWORD PTR [ebx-0x4ab6f7f8],ebp
  40a666:	xchg   ebx,eax
  40a667:	ins    DWORD PTR es:[edi],dx
  40a668:	not    BYTE PTR [edi+0x600645d0]
  40a66e:	and    dh,BYTE PTR [ebx]
  40a670:	dec    ebp
  40a671:	sub    bl,BYTE PTR [ebx+edi*1]
  40a674:	push   esi
  40a675:	mov    ds:0x22bd2df0,al
  40a67a:	test   eax,0x6dee8c9
  40a67f:	aam    0x20
  40a681:	sub    al,0x55
  40a683:	push   esi
  40a684:	push   ebx
  40a685:	fsub   QWORD PTR [ebp-0x32594a54]
  40a68b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a68c:	mov    eax,ds:0x8940f282
  40a691:	pusha  
  40a692:	pop    ds
  40a693:	fild   WORD PTR [esi+0x3eb8da4f]
  40a699:	or     bl,0x8d
  40a69c:	mov    cl,0xad
  40a69e:	dec    esp
  40a69f:	in     eax,0x24
  40a6a1:	mov    cl,0x2c
  40a6a3:	mov    dl,0xd3
  40a6a5:	sbb    eax,0x2ebf6f85
  40a6aa:	(bad)  
  40a6ab:	retf   
  40a6ac:	xlat   BYTE PTR ds:[ebx]
  40a6ad:	or     edx,DWORD PTR [ebp-0x40a5ad93]
  40a6b3:	jmp    0xc998ce29
  40a6b8:	xor    ecx,eax
  40a6ba:	scas   al,BYTE PTR es:[edi]
  40a6bb:	ror    DWORD PTR [edi],1
  40a6bd:	pop    ebx
  40a6be:	mov    bl,0xe3
  40a6c0:	stos   DWORD PTR es:[edi],eax
  40a6c1:	ja     0x40a73d
  40a6c3:	and    BYTE PTR [eax+0x7a],0x41
  40a6c7:	add    esp,edx
  40a6c9:	mov    ecx,0xecdd3961
  40a6ce:	inc    ebp
  40a6cf:	dec    ebp
  40a6d0:	icebp  
  40a6d1:	dec    ebx
  40a6d2:	jle    0x40a73b
  40a6d4:	jns    0x40a687
  40a6d6:	inc    esi
  40a6d7:	mov    bx,0xa46c
  40a6db:	mov    ebx,0x6a6b2d1
  40a6e0:	xchg   esi,eax
  40a6e1:	shr    dl,cl
  40a6e3:	dec    esi
  40a6e4:	adc    ch,BYTE PTR [ebx-0x5b5bed2d]
  40a6ea:	mov    ebx,edx
  40a6ec:	repnz iret 
  40a6ee:	push   0x3ac1a70f
  40a6f3:	mov    dl,0x32
  40a6f5:	mov    al,0x55
  40a6f7:	jb     0x40a6ff
  40a6f9:	lods   al,BYTE PTR ds:[esi]
  40a6fa:	fwait
  40a6fb:	ror    edx,cl
  40a6fd:	push   esi
  40a6ff:	out    0x64,eax
  40a701:	push   edi
  40a702:	mov    al,0x47
  40a704:	cmp    al,0x5f
  40a706:	pop    ss
  40a707:	loop   0x40a783
  40a709:	add    eax,0x57259b6e
  40a70e:	cmc    
  40a70f:	rcr    bh,0x6a
  40a712:	sahf   
  40a713:	xchg   bh,ah
  40a715:	ds xchg ecx,eax
  40a717:	cdq    
  40a718:	sub    edi,DWORD PTR [esi]
  40a71a:	xchg   BYTE PTR [eax+0x79],ch
  40a71d:	adc    eax,0xe3742c69
  40a722:	not    DWORD PTR [ebx-0x56]
  40a725:	loop   0x40a6af
  40a727:	dec    ebp
  40a728:	icebp  
  40a729:	sbb    BYTE PTR [edx+ecx*1-0x44],0x48
  40a72e:	mov    al,0x7a
  40a730:	jle    0x40a796
  40a732:	inc    ecx
  40a733:	fld    QWORD PTR [ecx+ecx*4]
  40a736:	xchg   edi,eax
  40a737:	sbb    eax,0xa716caf8
  40a73c:	mov    ch,0xa5
  40a73e:	mov    WORD PTR [eax-0x4f],ds
  40a741:	jnp    0x40a6d7
  40a743:	dec    eax
  40a744:	jno    0x40a7c4
  40a746:	pop    edi
  40a747:	mov    edi,0x8949d1a4
  40a74c:	mov    cl,0xbc
  40a74e:	mov    bh,0xfd
  40a750:	mov    ds:0xa58180d1,eax
  40a755:	jne    0x40a775
  40a757:	hlt    
  40a758:	rol    DWORD PTR [ecx-0x19],0x25
  40a75c:	xor    cl,dl
  40a75e:	mov    bl,0x84
  40a760:	jns    0x40a74e
  40a762:	fs sti 
  40a764:	pop    es
  40a765:	ret    
  40a766:	fcom   DWORD PTR [edi-0x268a7d6]
  40a76c:	cmp    eax,esp
  40a76e:	inc    esi
  40a76f:	xchg   esp,eax
  40a770:	addr16 push ecx
  40a772:	sahf   
  40a773:	jge    0x40a702
  40a775:	data16 cmp al,0xd9
  40a778:	aad    0x88
  40a77a:	sbb    edi,DWORD PTR [edx+0x79]
  40a77d:	fist   DWORD PTR gs:[esi]
  40a780:	jae    0x40a77f
  40a782:	aam    0x86
  40a784:	mov    ds:0xb64f901d,al
  40a789:	into   
  40a78a:	fs jo  0x40a72e
  40a78d:	ror    DWORD PTR [ebp-0x26fb5ea9],cl
  40a793:	idiv   BYTE PTR [ebx-0x44771d03]
  40a799:	enter  0x771a,0x54
  40a79d:	push   cs
  40a79e:	cli    
  40a79f:	xchg   BYTE PTR [ebx],dl
  40a7a1:	scas   eax,DWORD PTR es:[edi]
  40a7a2:	mov    al,ds:0x933dd677
  40a7a7:	(bad)  
  40a7a8:	sub    dl,BYTE PTR [ecx+eiz*2]
  40a7ab:	and    BYTE PTR [ebx+0x48],dl
  40a7ae:	shl    DWORD PTR [ecx-0x3a],1
  40a7b1:	pop    es
  40a7b2:	jl     0x40a7b1
  40a7b4:	popf   
  40a7b5:	push   edx
  40a7b6:	mov    ds:0x30e753b1,eax
  40a7bb:	dec    esp
  40a7bc:	(bad)  
  40a7bd:	cs sub eax,0x4992ebfc
  40a7c3:	aad    0x2c
  40a7c5:	sbb    eax,0x66b4d7a1
  40a7ca:	jnp    0x40a81a
  40a7cc:	xchg   edi,eax
  40a7cd:	xchg   esp,eax
  40a7ce:	pop    esp
  40a7cf:	shl    DWORD PTR [eax+0x1a],0x52
  40a7d3:	mov    esp,0xa67b1184
  40a7d8:	in     eax,0x13
  40a7da:	push   esi
  40a7db:	mov    ecx,0x4f55572b
  40a7e0:	mov    bl,0x3f
  40a7e2:	mov    dh,0x3e
  40a7e4:	xor    BYTE PTR es:[ecx+0x4a31b154],ch
  40a7eb:	bound  edi,QWORD PTR [ecx-0x5c]
  40a7ee:	fs jne 0x40a7e4
  40a7f1:	bound  ebp,QWORD PTR [ebp+0x6c]
  40a7f4:	gs add esp,edi
  40a7f7:	lahf   
  40a7f8:	scas   eax,DWORD PTR es:[edi]
  40a7f9:	aas    
  40a7fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7fb:	outs   dx,BYTE PTR ds:[esi]
  40a7fc:	fadd   DWORD PTR [edi-0x3d]
  40a7ff:	jl     0x40a826
  40a801:	dec    ebx
  40a802:	test   ah,al
  40a804:	or     BYTE PTR [ebp-0x4bb86e45],dh
  40a80a:	repz push esp
  40a80c:	loopne 0x40a885
  40a80e:	cld    
  40a80f:	or     eax,0x289b1024
  40a814:	xchg   esi,eax
  40a815:	jb     0x40a7ba
  40a817:	fwait
  40a818:	stos   BYTE PTR es:[edi],al
  40a819:	jno    0x40a7bb
  40a81b:	(bad)  
  40a81c:	mov    bl,0x93
  40a81e:	or     dh,cl
  40a820:	jge    0x40a893
  40a822:	lods   eax,DWORD PTR ds:[esi]
  40a823:	popa   
  40a824:	pop    esp
  40a825:	and    esi,DWORD PTR [eax-0x36]
  40a828:	pusha  
  40a829:	(bad)  
  40a82b:	adc    bl,BYTE PTR [edx]
  40a82d:	mov    ebp,0x597a9b88
  40a832:	mov    ecx,DWORD PTR [ecx+0x3]
  40a835:	xor    DWORD PTR [edi],0xa2e2e17f
  40a83b:	pop    ds
  40a83c:	inc    esi
  40a83d:	std    
  40a83e:	sub    ah,dl
  40a840:	in     eax,dx
  40a841:	stc    
  40a842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a843:	clc    
  40a844:	stc    
  40a845:	fbld   TBYTE PTR [edi+eax*8+0x5f]
  40a849:	push   eax
  40a84a:	mov    bl,0x7f
  40a84c:	and    al,BYTE PTR [eax]
  40a84e:	xor    DWORD PTR [ebx],ecx
  40a850:	fnsetpm(287 only) 
  40a852:	xlat   BYTE PTR ds:[ebx]
  40a853:	mov    ecx,0x1031962c
  40a858:	add    DWORD PTR [ebx],ecx
  40a85a:	aaa    
  40a85b:	cmp    edi,DWORD PTR [esi-0x19]
  40a85e:	xchg   ebx,eax
  40a85f:	xor    eax,0x8aa6bf56
  40a864:	ins    DWORD PTR es:[edi],dx
  40a865:	pop    edi
  40a866:	adc    ch,BYTE PTR [ebp+0x54]
  40a869:	push   ebp
  40a86a:	mov    edi,0x5ad58b64
  40a86f:	mov    bl,0xa1
  40a871:	jb     0x40a82b
  40a873:	pop    edi
  40a874:	(bad)  
  40a875:	enter  0xe20a,0xa5
  40a879:	aas    
  40a87a:	or     al,0x40
  40a87c:	cdq    
  40a87d:	mov    dl,0x8d
  40a87f:	out    0xa,al
  40a881:	pop    ecx
  40a882:	adc    BYTE PTR [eax-0x24bb4cd6],al
  40a888:	adc    esp,edi
  40a88a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a88b:	rol    BYTE PTR [esi+0x27],cl
  40a88e:	les    eax,FWORD PTR ds:0x298d22db
  40a894:	rcl    BYTE PTR [ebx+0x58],1
  40a897:	jge    0x40a852
  40a899:	out    dx,al
  40a89a:	lds    ecx,FWORD PTR [ebp+0x159ea9e4]
  40a8a0:	mov    dl,0x74
  40a8a2:	cld    
  40a8a3:	adc    BYTE PTR [ecx+ebp*8],cl
  40a8a6:	dec    edi
  40a8a7:	jae    0x40a893
  40a8a9:	jo     0x40a8ef
  40a8ab:	xor    dl,BYTE PTR [ebx]
  40a8ad:	cdq    
  40a8ae:	sahf   
  40a8af:	fstp   DWORD PTR [ecx]
  40a8b1:	and    ebp,DWORD PTR [edx]
  40a8b3:	aad    0x90
  40a8b5:	inc    esp
  40a8b6:	test   al,0xd0
  40a8b8:	out    dx,eax
  40a8b9:	mov    esi,0x4a635a19
  40a8be:	cmp    DWORD PTR [ebp+0x2a85d711],ebx
  40a8c4:	pusha  
  40a8c5:	adc    cl,BYTE PTR [ebx-0x13]
  40a8c8:	push   eax
  40a8c9:	push   esp
  40a8ca:	iret   
  40a8cb:	xchg   BYTE PTR [esp+edx*1],bh
  40a8ce:	inc    esi
  40a8cf:	or     ebx,esi
  40a8d1:	sti    
  40a8d2:	jg     0x40a87d
  40a8d4:	dec    ecx
  40a8d5:	aam    0xe5
  40a8d7:	clc    
  40a8d8:	icebp  
  40a8d9:	cmp    al,0x99
  40a8db:	pop    ds
  40a8dc:	jp     0x40a8a8
  40a8de:	daa    
  40a8df:	sahf   
  40a8e0:	das    
  40a8e1:	xor    eax,0xd0db4e13
  40a8e6:	fbld   TBYTE PTR [esi+0x347f7edb]
  40a8ec:	setne  dh
  40a8ef:	jl     0x40a913
  40a8f1:	nop
  40a8f2:	(bad)  
  40a8f3:	cld    
  40a8f4:	mov    ecx,DWORD PTR [edi]
  40a8f6:	mov    edx,0x5670a007
  40a8fb:	add    al,0x81
  40a8fd:	ret    0x957c
  40a900:	outs   dx,DWORD PTR ds:[esi]
  40a901:	mov    es,WORD PTR [ecx]
  40a903:	or     eax,0xf0330e3e
  40a908:	in     al,0x87
  40a90a:	arpl   WORD PTR [esi-0x12562e95],sp
  40a910:	(bad)  
  40a911:	test   al,0xcd
  40a913:	add    eax,0x35354595
  40a918:	push   esi
  40a919:	loope  0x40a90a
  40a91b:	out    0xd6,al
  40a91d:	fdiv   QWORD PTR ds:[edi+0x7dd1d69]
  40a924:	or     esp,DWORD PTR [edx+0x33]
  40a927:	xlat   BYTE PTR ds:[ebx]
  40a928:	mov    edi,0x3ea68ca4
  40a92d:	ins    BYTE PTR es:[edi],dx
  40a92e:	and    eax,0x52d06d0c
  40a933:	(bad)
  40a937:	xchg   esp,eax
  40a938:	jnp    0x40a8bf
  40a93a:	sub    eax,0x8d34ffc1
  40a93f:	or     ecx,DWORD PTR [edx+0x50]
  40a942:	loopne 0x40a97b
  40a944:	adc    eax,0x554128d0
  40a949:	sahf   
  40a94a:	adc    DWORD PTR [ecx+0x65f39c8e],edi
  40a950:	test   al,0xb0
  40a952:	pop    es
  40a953:	lea    ebp,[ecx+ebp*8-0xb]
  40a957:	sti    
  40a958:	and    dh,dh
  40a95a:	jo     0x40a9cf
  40a95c:	repz out 0x7c,al
  40a95f:	aad    0x8a
  40a961:	int    0x95
  40a963:	repnz dec edx
  40a965:	xchg   edx,eax
  40a966:	sub    BYTE PTR [edi-0x7da2229a],al
  40a96c:	icebp  
  40a96d:	lods   al,BYTE PTR ds:[esi]
  40a96e:	popf   
  40a96f:	shr    DWORD PTR [ecx],cl
  40a971:	mov    edi,0x21493815
  40a976:	pop    ss
  40a977:	mov    esp,0xd35398f1
  40a97c:	inc    ebx
  40a97d:	xor    edi,DWORD PTR [ecx-0x3132ba5]
  40a983:	xor    ebp,edx
  40a985:	cmp    DWORD PTR [eax-0x69],ecx
  40a988:	loopne 0x40a927
  40a98a:	icebp  
  40a98b:	loopne 0x40a994
  40a98d:	pop    edx
  40a98e:	mov    dh,0x47
  40a990:	mov    ecx,0x61e5394f
  40a995:	fwait
  40a996:	add    eax,0x68
  40a999:	out    0x8b,al
  40a99b:	jbe    0x40a98f
  40a99d:	test   ch,bl
  40a99f:	pop    ebx
  40a9a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9a1:	ret    
  40a9a2:	push   ecx
  40a9a3:	dec    edx
  40a9a4:	inc    esp
  40a9a5:	daa    
  40a9a6:	adc    ebx,ecx
  40a9a8:	or     DWORD PTR [eax+0x7c987a79],esi
  40a9ae:	or     DWORD PTR [edx+0x2e36a2de],esi
  40a9b4:	popa   
  40a9b5:	and    eax,0x1980c9ef
  40a9ba:	fsubr  st,st(0)
  40a9bc:	xor    ebx,DWORD PTR [edi+0x6d]
  40a9bf:	xlat   BYTE PTR ds:[ebx]
  40a9c0:	jge    0x40a9ab
  40a9c2:	or     al,0xcd
  40a9c4:	adc    bh,BYTE PTR [eax+0x6]
  40a9c7:	aam    0x89
  40a9c9:	adc    BYTE PTR [ebx],bh
  40a9cb:	jg     0x40a9cd
  40a9cd:	lahf   
  40a9ce:	ret    0x79ba
  40a9d1:	pop    edx
  40a9d2:	push   ecx
  40a9d3:	pop    edi
  40a9d4:	sbb    DWORD PTR [esp+eiz*2-0x78],ebp
  40a9d8:	jp     0x40a9e2
  40a9da:	and    DWORD PTR [ebp-0x32],ebx
  40a9dd:	and    ah,BYTE PTR [edi+0x7c]
  40a9e0:	sbb    eax,0x912f5954
  40a9e5:	jl     0x40a9b8
  40a9e7:	lock inc ebx
  40a9e9:	leave  
  40a9ea:	mov    WORD PTR [ebx+0x60],?
  40a9ed:	loope  0x40a9f0
  40a9ef:	(bad)  
  40a9f0:	(bad)  [ecx]
  40a9f2:	sub    al,0x8c
  40a9f4:	cli    
  40a9f5:	inc    BYTE PTR [esi-0x5db910cb]
  40a9fb:	icebp  
  40a9fc:	icebp  
  40a9fd:	jo     0x40a9dc
  40a9ff:	jbe    0x40a9ea
  40aa01:	pop    es
  40aa02:	repz aam 0xb4
  40aa05:	sbb    eax,0x68e81e4d
  40aa0a:	popf   
  40aa0b:	into   
  40aa0c:	lea    esi,[edi-0x729db1e]
  40aa12:	repnz push ebp
  40aa14:	push   edx
  40aa15:	(bad)  
  40aa16:	bnd jae 0x40aa43
  40aa19:	clc    
  40aa1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa1b:	mov    ds:0xb4c21f1,al
  40aa20:	xor    DWORD PTR [edx+0x218c9e59],0xffffffd7
  40aa27:	mov    eax,0x52314b88
  40aa2c:	jbe    0x40aa02
  40aa2e:	cld    
  40aa2f:	rcl    BYTE PTR ds:0x9ce4070a,1
  40aa35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa36:	xchg   DWORD PTR [edx+esi*8-0x17],eax
  40aa3a:	inc    eax
  40aa3b:	and    BYTE PTR [edi+0x62],bl
  40aa3e:	lods   eax,DWORD PTR ds:[esi]
  40aa3f:	xor    eax,0x230495dc
  40aa44:	enter  0xe3ec,0xa8
  40aa48:	jg     0x40aa80
  40aa4a:	sub    dl,ah
  40aa4c:	in     al,0x36
  40aa4e:	pop    eax
  40aa4f:	fild   QWORD PTR [esi-0x3e]
  40aa52:	out    0x41,al
  40aa54:	lods   al,BYTE PTR ds:[esi]
  40aa55:	outs   dx,DWORD PTR ds:[esi]
  40aa56:	retf   
  40aa57:	mov    dl,0xe5
  40aa59:	dec    edi
  40aa5a:	push   cs
  40aa5b:	ja     0x40aa4e
  40aa5d:	maxps  xmm3,XMMWORD PTR [eiz*2+0x284376e3]
  40aa65:	sub    al,0x9e
  40aa67:	mov    esi,0xc9f48549
  40aa6c:	test   ebp,ebx
  40aa6e:	mov    esp,0x21fd90e8
  40aa74:	outs   dx,BYTE PTR ds:[esi]
  40aa75:	and    ecx,esi
  40aa77:	(bad)  
  40aa79:	mov    bl,BYTE PTR [eax*2+0x5b5223ad]
  40aa80:	add    eax,0x77f0eb64
  40aa85:	mov    cl,0xa
  40aa87:	add    ch,BYTE PTR [esi+0x49]
  40aa8a:	aas    
  40aa8b:	loopne 0x40aa51
  40aa8d:	fld    st(1)
  40aa8f:	dec    ebx
  40aa90:	retf   0xfc75
  40aa93:	lahf   
  40aa94:	int    0xfc
  40aa96:	and    al,0x7c
  40aa98:	pop    ebp
  40aa99:	stc    
  40aa9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa9b:	mov    ah,0x6b
  40aa9d:	fisubr DWORD PTR [ebx+eiz*2-0x54267ab8]
  40aaa4:	push   ss
  40aaa5:	xchg   esi,eax
  40aaa6:	add    eax,0xd02b86e6
  40aaab:	pop    ecx
  40aaac:	cdq    
  40aaad:	and    ecx,DWORD PTR ds:0x50b70b94
  40aab3:	jns    0x40aab0
  40aab5:	sti    
  40aab6:	mov    dl,0xfc
  40aab8:	mov    eax,ds:0x7fb8c275
  40aabd:	sub    bl,BYTE PTR [eax+0x24]
  40aac0:	dec    edi
  40aac1:	addr16 push ebp
  40aac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aac4:	push   ss
  40aac5:	out    dx,eax
  40aac6:	pop    edi
  40aac7:	mov    BYTE PTR [ebx],bh
  40aac9:	outs   dx,DWORD PTR ds:[esi]
  40aaca:	in     al,dx
  40aacb:	jne    0x40aa81
  40aacd:	loop   0x40ab18
  40aacf:	mov    BYTE PTR [edx+0x41],ch
  40aad2:	fist   WORD PTR [edx+0x7065e97f]
  40aad8:	data16 lods al,BYTE PTR ds:[esi]
  40aada:	adc    DWORD PTR [ebp+0x26],ecx
  40aadd:	jge    0x40ab30
  40aadf:	pop    es
  40aae0:	mov    al,ds:0x4c9611a7
  40aae5:	mov    esi,0xb46eb262
  40aaea:	jp     0x40aae9
  40aaec:	xchg   DWORD PTR [esp+esi*2-0x13fc4f58],ebx
  40aaf3:	and    eax,0x3a742cbe
  40aaf8:	sub    al,0x1d
  40aafa:	xchg   DWORD PTR [ebx],edi
  40aafc:	cmp    cl,BYTE PTR [esi+ebx*2+0x42]
  40ab00:	jmp    0xc0c4:0xe6adbf0f
  40ab07:	imul   eax,DWORD PTR [ebx-0x7c],0x402d1d68
  40ab0e:	nop
  40ab0f:	xchg   esi,eax
  40ab10:	sub    bh,0x8c
  40ab13:	arpl   WORD PTR [edx+0x538245e1],si
  40ab19:	ja     0x40aaea
  40ab1b:	or     eax,0x3c5a3982
  40ab20:	adc    BYTE PTR [eax+ecx*2+0x1c],dh
  40ab24:	inc    eax
  40ab25:	and    eax,0x7d29074f
  40ab2a:	and    BYTE PTR [esi],bh
  40ab2c:	push   edi
  40ab2d:	mov    dl,0x4b
  40ab2f:	pop    edx
  40ab30:	push   esi
  40ab31:	ins    BYTE PTR es:[edi],dx
  40ab32:	in     eax,0xb3
  40ab34:	dec    ecx
  40ab35:	dec    edx
  40ab36:	ret    0x6562
  40ab39:	push   ecx
  40ab3a:	jmp    0x40aad3
  40ab3c:	add    eax,0x13
  40ab3f:	push   ebp
  40ab40:	add    eax,0x7b4a6296
  40ab45:	retf   0x1857
  40ab48:	in     eax,0x3e
  40ab4a:	cmp    ebx,DWORD PTR [ebx]
  40ab4c:	dec    edx
  40ab4d:	inc    edx
  40ab4e:	rcl    DWORD PTR [ebx+0xecdb1bf],cl
  40ab54:	rol    dh,cl
  40ab56:	lahf   
  40ab57:	sub    esp,DWORD PTR [eax-0x44]
  40ab5a:	aas    
  40ab5b:	mov    BYTE PTR [esi],dl
  40ab5d:	loope  0x40ab9b
  40ab5f:	pop    esp
  40ab60:	fs mov esp,0xf486ce2e
  40ab66:	arpl   bx,bx
  40ab68:	inc    edi
  40ab69:	jnp    0x40aaec
  40ab6b:	retf   
  40ab6c:	gs inc esi
  40ab6e:	sub    esi,DWORD PTR gs:[ebx-0x57014aa7]
  40ab75:	ja     0x40ab8a
  40ab77:	push   es
  40ab78:	and    ch,BYTE PTR [ebp-0x53de5da0]
  40ab7e:	mov    eax,0xdaf29ecc
  40ab83:	stc    
  40ab84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab85:	das    
  40ab86:	out    0x49,al
  40ab88:	stc    
  40ab89:	aad    0xe1
  40ab8b:	call   0x40e4dde8
  40ab90:	add    al,0x2c
  40ab92:	retf   0x4657
  40ab95:	inc    ebx
  40ab96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab97:	and    edx,DWORD PTR [edi-0x1cd9ca43]
  40ab9d:	xchg   ebp,eax
  40ab9e:	lea    ecx,[esi+0x5a721bab]
  40aba4:	scas   eax,DWORD PTR es:[edi]
  40aba5:	mov    esi,DWORD PTR [eax+0x64]
  40aba8:	or     BYTE PTR [edx+0x4a0d19c5],bl
  40abae:	jmp    0x40ab81
  40abb0:	add    al,0x9e
  40abb2:	jmp    0x40abaa
  40abb4:	dec    edx
  40abb5:	ins    BYTE PTR es:[edi],dx
  40abb6:	lods   eax,DWORD PTR ds:[esi]
  40abb7:	mov    al,bh
  40abb9:	jmp    0x76e6:0xa052d953
  40abc0:	lods   eax,DWORD PTR ds:[esi]
  40abc1:	and    BYTE PTR [edx-0x1dd74a7d],0x59
  40abc8:	sub    DWORD PTR [ebx-0x6f],ecx
  40abcb:	retf   0x2d79
  40abce:	mov    dh,0x77
  40abd0:	das    
  40abd1:	call   DWORD PTR [eax+0x2c]
  40abd4:	das    
  40abd5:	push   0x9167c0a2
  40abda:	int    0xd5
  40abdc:	push   edi
  40abdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abde:	push   0x209b606f
  40abe3:	xchg   edi,eax
  40abe4:	push   cs
  40abe5:	adc    BYTE PTR [esi+0x5c7a2d5a],dh
  40abeb:	or     al,0x94
  40abed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abee:	xchg   edx,eax
  40abef:	jo     0x40aba9
  40abf1:	jl     0x40ac2f
  40abf3:	dec    esi
  40abf4:	mov    WORD PTR [ecx+0x6f],es
  40abf7:	in     al,dx
  40abf8:	sub    edi,DWORD PTR [eax]
  40abfa:	dec    esp
  40abfb:	nop
  40abfc:	and    esp,esi
  40abfe:	bnd jmp 0x9eceb30c
  40ac04:	mov    dl,0x10
  40ac06:	in     eax,0x64
  40ac08:	jmp    0x40ac37
  40ac0a:	sub    ch,BYTE PTR [esi-0x17d0d6ed]
  40ac10:	repz das 
  40ac12:	or     ch,ah
  40ac14:	push   ebp
  40ac15:	pop    edx
  40ac16:	ins    BYTE PTR es:[edi],dx
  40ac17:	scas   eax,DWORD PTR es:[edi]
  40ac18:	ja     0x40ac8d
  40ac1a:	out    0xe0,eax
  40ac1c:	hlt    
  40ac1d:	cmp    BYTE PTR [ecx+0x66],al
  40ac20:	in     al,0x82
  40ac22:	pushf  
  40ac23:	aam    0x4c
  40ac25:	jmp    0x34be:0x949a4d23
  40ac2c:	out    dx,al
  40ac2d:	xor    edi,esi
  40ac2f:	or     al,0x67
  40ac31:	outs   dx,DWORD PTR ds:[esi]
  40ac32:	imul   esi,ecx,0x2aa9ffca
  40ac38:	push   eax
  40ac39:	fwait
  40ac3a:	mov    dh,0xdd
  40ac3c:	lahf   
  40ac3d:	lea    esi,[ebp+0x22]
  40ac40:	ficom  WORD PTR [ecx-0x3a7cde79]
  40ac46:	cmp    DWORD PTR [ebx],ebp
  40ac48:	fbstp  TBYTE PTR [esi-0x37b0ef64]
  40ac4e:	leave  
  40ac4f:	cmp    bh,dl
  40ac51:	push   0xc8859f61
  40ac56:	leave  
  40ac57:	popa   
  40ac58:	ror    DWORD PTR [ecx],cl
  40ac5a:	xchg   edi,eax
  40ac5b:	leave  
  40ac5c:	loop   0x40ac40
  40ac5e:	mov    cl,0xe3
  40ac60:	div    eax
  40ac62:	push   eax
  40ac63:	add    BYTE PTR [edi+ebp*8],dh
  40ac66:	and    DWORD PTR [eax-0x3739c82e],ebx
  40ac6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac6d:	aam    0x80
  40ac6f:	scas   eax,DWORD PTR es:[edi]
  40ac70:	inc    esp
  40ac71:	dec    eax
  40ac72:	fidiv  DWORD PTR [edx-0x14bbe89a]
  40ac78:	add    BYTE PTR [edx+ebp*4-0xa24f004],cl
  40ac7f:	dec    edx
  40ac80:	mov    eax,ds:0x6cf017a0
  40ac85:	and    BYTE PTR [ecx],bl
  40ac87:	jle    0x40ac52
  40ac89:	push   ss
  40ac8a:	out    0x89,al
  40ac8c:	adc    eax,0x7db0850b
  40ac91:	mov    cl,0xb
  40ac93:	test   DWORD PTR [esp+eiz*4+0x31],edi
  40ac97:	and    BYTE PTR [edx+0x50],bh
  40ac9a:	sub    ebp,ebp
  40ac9c:	jecxz  0x40ad1a
  40ac9e:	push   es
  40ac9f:	add    dh,al
  40aca1:	shr    ecx,0x3d
  40aca4:	pop    ebp
  40aca5:	icebp  
  40aca6:	int3   
  40aca7:	push   es
  40aca8:	pop    esi
  40aca9:	jg     0x40ace1
  40acab:	adc    ah,BYTE PTR [ebx+edx*2-0x33]
  40acaf:	clc    
  40acb0:	fcomp  st(5)
  40acb2:	and    BYTE PTR [ebp-0x47dcc598],cl
  40acb8:	xor    DWORD PTR [esi],eax
  40acba:	inc    ecx
  40acbb:	mov    eax,ds:0x4965fb07
  40acc0:	adc    ah,bl
  40acc2:	or     DWORD PTR [ebx-0x25ff5f2b],ebx
  40acc8:	mul    BYTE PTR [esi+0x47f82cba]
  40acce:	push   ebx
  40accf:	clc    
  40acd0:	mov    al,ds:0x74da2209
  40acd5:	rol    esi,0x36
  40acd8:	jno    0x40ac8b
  40acda:	fyl2x  
  40acdc:	xchg   esi,eax
  40acdd:	xchg   BYTE PTR [edx+0x71f71c2b],bl
  40ace3:	push   0x9f8b6f09
  40ace8:	leave  
  40ace9:	and    eax,0x6ef033c0
  40acee:	int3   
  40acef:	ins    DWORD PTR es:[edi],dx
  40acf0:	sbb    dh,ah
  40acf2:	jecxz  0x40ac7e
  40acf4:	pushf  
  40acf5:	mul    DWORD PTR [esi+0x74]
  40acf8:	xor    DWORD PTR [eax],0xfffffff2
  40acfb:	cmp    edx,edx
  40acfd:	dec    ebx
  40acfe:	jne    0x40acb8
  40ad00:	mov    edx,0x9824e5ad
  40ad05:	cli    
  40ad06:	(bad)  
  40ad07:	lock and ebx,DWORD PTR [ecx-0x2cf63f1b]
  40ad0e:	cmp    al,0x11
  40ad10:	or     ebp,DWORD PTR [ebx-0x168d3aa7]
  40ad16:	leave  
  40ad17:	fs mov bh,0x87
  40ad1a:	push   ds
  40ad1b:	repz cmp al,0x70
  40ad1e:	dec    ebp
  40ad1f:	repz cdq 
  40ad21:	pop    edi
  40ad22:	mov    esi,0x6244eadc
  40ad27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad28:	xor    DWORD PTR [ebp+edx*2-0x47],0x9ff82e2f
  40ad30:	mov    ecx,DWORD PTR [eax+0x69]
  40ad33:	jle    0x40ad79
  40ad35:	ss test eax,0xdd22fcb5
  40ad3b:	mov    dl,0x70
  40ad3d:	push   es
  40ad3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad3f:	push   cs
  40ad40:	push   cs
  40ad41:	das    
  40ad42:	sub    ebx,ecx
  40ad44:	mov    bh,0x55
  40ad46:	int3   
  40ad47:	pop    ecx
  40ad48:	xor    BYTE PTR [ebp+0x757d9bcc],dl
  40ad4e:	shl    DWORD PTR [esi+0x6e6cef37],0xac
  40ad55:	jp     0x40adce
  40ad57:	sbb    al,0xe7
  40ad59:	inc    edi
  40ad5a:	and    eax,0xdab53555
  40ad5f:	ins    DWORD PTR es:[edi],dx
  40ad60:	pop    ebx
  40ad61:	ds push ebp
  40ad63:	sar    BYTE PTR [eax+0x5b],cl
  40ad66:	mov    ah,0x7c
  40ad68:	xchg   ebp,eax
  40ad69:	fst    QWORD PTR [edi-0x1b]
  40ad6c:	add    DWORD PTR [esi],esp
  40ad6e:	outs   dx,DWORD PTR ds:[esi]
  40ad6f:	fucom  st(5)
  40ad71:	and    al,0x2f
  40ad73:	dec    edi
  40ad75:	or     ah,0x65
  40ad78:	mov    ds:0x2508e5d,eax
  40ad7d:	push   esi
  40ad7e:	add    al,0x3b
  40ad80:	xlat   BYTE PTR ds:[ebx]
  40ad81:	inc    ebp
  40ad82:	xor    ebp,DWORD PTR [ecx-0x67]
  40ad85:	sbb    DWORD PTR [edi+0x1c0b4bf9],ebx
  40ad8b:	je     0x40ad77
  40ad8d:	pusha  
  40ad8e:	xor    bh,bl
  40ad90:	stc    
  40ad91:	push   cs
  40ad92:	aaa    
  40ad93:	les    eax,FWORD PTR [edx-0x2a]
  40ad96:	jecxz  0x40ad7b
  40ad98:	pop    edx
  40ad99:	mov    ecx,0xd4c82c67
  40ad9e:	pop    ecx
  40ad9f:	dec    ebp
  40ada0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada1:	sub    eax,0xaca3e418
  40ada6:	cmc    
  40ada7:	lea    esi,[ebp+0x6d1ac1d6]
  40adad:	call   0xf3d1fe83
  40adb2:	mov    ah,BYTE PTR [esp+edx*4-0x1b]
  40adb6:	and    bh,BYTE PTR [ebp-0xf]
  40adb9:	loopne 0x40ae11
  40adbb:	cmp    ah,BYTE PTR [edi-0x13ac14c]
  40adc1:	lds    ebp,FWORD PTR [eax]
  40adc3:	jmp    0xa610:0x1015bcb0
  40adca:	repz sti 
  40adcc:	fisub  WORD PTR [eax+0x5f]
  40adcf:	repz ja 0x40adc9
  40add2:	stc    
  40add3:	pop    esp
  40add4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add5:	fst    st(4)
  40add7:	inc    ebx
  40add8:	mov    ebx,0xd42d1f70
  40addd:	pop    ss
  40adde:	addr16 inc ebp
  40ade0:	mov    BYTE PTR [edx+edi*4+0x19280269],ah
  40ade7:	enter  0x819a,0x1a
  40adeb:	xchg   edi,eax
  40adec:	jmp    0xde1086c1
  40adf1:	retf   
  40adf2:	and    DWORD PTR [edi-0x611160ab],edi
  40adf8:	or     DWORD PTR [edx+0x25],ecx
  40adfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adfc:	bnd jle 0x40ae54
  40adff:	cmp    BYTE PTR [ecx],0x23
  40ae02:	add    dl,dl
  40ae04:	sbb    ebp,ebp
  40ae06:	pop    ebp
  40ae07:	pop    ebp
  40ae08:	jle    0x40ae02
  40ae0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae0b:	jns    0x40ae83
  40ae0d:	out    0xd0,al
  40ae0f:	pop    ecx
  40ae10:	(bad)  
  40ae11:	and    al,0x65
  40ae13:	imul   ebx,DWORD PTR [esi+0x65037aa6],0x22
  40ae1a:	loope  0x40ae35
  40ae1c:	add    edx,eax
  40ae1e:	sbb    ecx,DWORD PTR [ecx-0x6b]
  40ae21:	sub    ecx,DWORD PTR [eax]
  40ae23:	dec    edi
  40ae24:	pusha  
  40ae25:	cmp    edx,esi
  40ae27:	popf   
  40ae28:	pop    ss
  40ae29:	dec    ebx
  40ae2a:	aam    0x60
  40ae2c:	psubusb mm6,mm2
  40ae2f:	bound  esi,QWORD PTR [esi-0x185349ee]
  40ae35:	rcl    DWORD PTR [eax+0x5c],0xfe
  40ae39:	imul   ebx,DWORD PTR [eax-0x66],0x63ce46f8
  40ae40:	inc    ebx
  40ae41:	pusha  
  40ae42:	data16 outs dx,BYTE PTR ds:[esi]
  40ae44:	mov    ds:0xbc2113,al
  40ae49:	inc    ecx
  40ae4a:	(bad)  
  40ae4b:	sub    BYTE PTR [ebp+0x33],al
  40ae4e:	rol    esp,1
  40ae50:	fs out 0x2d,al
  40ae53:	or     al,0xcc
  40ae55:	fisub  DWORD PTR [ebx-0x3a]
  40ae58:	mov    esp,0xa2d0a7dc
  40ae5d:	xor    al,0x50
  40ae5f:	or     dl,al
  40ae61:	push   es
  40ae62:	jbe    0x40ae0e
  40ae64:	loope  0x40ae0f
  40ae66:	add    ecx,DWORD PTR [ebp-0x66]
  40ae69:	cli    
  40ae6a:	sub    DWORD PTR [ecx+0x69],edx
  40ae6d:	repnz adc ebx,ecx
  40ae70:	ins    BYTE PTR es:[edi],dx
  40ae71:	jl     0x40ae17
  40ae73:	repz jl 0x40ae2f
  40ae76:	mov    DWORD PTR [edx+0x2],ebp
  40ae79:	jns    0x40aea1
  40ae7b:	idiv   cl
  40ae7d:	pop    eax
  40ae7e:	(bad)  
  40ae80:	mov    al,ds:0xf6c1af5a
  40ae85:	popf   
  40ae86:	xor    bh,dl
  40ae88:	fcmovnbe st,st(3)
  40ae8a:	adc    al,0xda
  40ae8c:	mov    bh,0xc4
  40ae8e:	xchg   esi,eax
  40ae8f:	pop    edx
  40ae90:	dec    eax
  40ae91:	dec    ch
  40ae93:	ja     0x40ae72
  40ae95:	cmp    eax,0xd4bb649b
  40ae9a:	mov    al,0x97
  40ae9c:	call   0xf5cb:0x65bf813d
  40aea3:	sub    BYTE PTR [ecx-0x5ae37a92],0xb6
  40aeaa:	sbb    DWORD PTR [ebx-0x1f],ebp
  40aead:	pop    es
  40aeae:	cli    
  40aeaf:	out    dx,al
  40aeb0:	cmp    eax,0x35424fb6
  40aeb5:	sahf   
  40aeb6:	xchg   BYTE PTR [edx],ah
  40aeb8:	pushf  
  40aeb9:	xchg   BYTE PTR [ebp+0x250e0b6c],bl
  40aebf:	jl     0x40aecf
  40aec1:	and    al,0xce
  40aec3:	push   0xffffffc0
  40aec5:	jl     0x40af29
  40aec7:	(bad)  
  40aec9:	mov    edi,0xbf83e9d2
  40aece:	lods   al,BYTE PTR ds:[esi]
  40aecf:	dec    ebx
  40aed0:	ss stos BYTE PTR es:[edi],al
  40aed2:	xchg   ebx,eax
  40aed3:	jg     0x40aee1
  40aed5:	call   0x69a6b066
  40aeda:	and    edx,DWORD PTR [ebp+0x6]
  40aedd:	loope  0x40aebe
  40aedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aee0:	outs   dx,DWORD PTR ds:[esi]
  40aee1:	or     esp,DWORD PTR [edx]
  40aee3:	jp     0x40af2e
  40aee5:	int    0xc0
  40aee7:	mov    ch,0x2b
  40aee9:	fcomp  st(5)
  40aeeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeec:	xchg   esp,eax
  40aeed:	outs   dx,DWORD PTR ds:[esi]
  40aeee:	pop    eax
  40aeef:	jnp    0x40af08
  40aef1:	sub    eax,ecx
  40aef3:	(bad)  
  40aef4:	mov    DWORD PTR [edx],0xdb7213d8
  40aefa:	(bad)  
  40aefb:	ss xchg ebx,eax
  40aefd:	inc    ebp
  40aefe:	and    ch,cl
  40af00:	mov    cl,0x76
  40af02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af03:	push   ds
  40af04:	xor    al,0xfe
  40af06:	hlt    
  40af07:	mov    eax,es
  40af09:	bound  ax,DWORD PTR [ebx]
  40af0c:	outs   dx,BYTE PTR ds:[esi]
  40af0d:	sbb    esi,DWORD PTR [ebp+0x7f]
  40af10:	mov    ds:0x2a04686c,eax
  40af15:	imul   ecx,DWORD PTR [ecx+0x53],0x5eb56acb
  40af1c:	gs jge 0x40af92
  40af1f:	jecxz  0x40af59
  40af21:	dec    ebp
  40af22:	xchg   edx,eax
  40af23:	in     eax,0xf1
  40af25:	test   BYTE PTR [esi],dh
  40af27:	lea    eax,[edx]
  40af29:	add    BYTE PTR [ebx-0x184454df],ch
  40af2f:	ret    0x757f
  40af32:	xchg   BYTE PTR [esi-0x27],ch
  40af35:	jmp    DWORD PTR [edi]
  40af37:	mov    ds:0x5b297d2b,al
  40af3c:	shr    DWORD PTR [edi+0x23],0xaf
  40af40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af41:	mov    ch,0xa5
  40af43:	xchg   ebp,eax
  40af44:	inc    edi
  40af45:	mov    eax,DWORD PTR [ebp+eiz*2-0x527023f9]
  40af4c:	jno    0x40af82
  40af4e:	xchg   BYTE PTR [edi],ah
  40af50:	fstp   st(5)
  40af52:	inc    eax
  40af53:	stc    
  40af54:	test   al,0xa7
  40af56:	outs   dx,BYTE PTR ds:[esi]
  40af57:	test   ch,bh
  40af59:	out    dx,eax
  40af5a:	sbb    eax,0xa97d5b51
  40af5f:	hlt    
  40af60:	and    eax,0x9a7f7c15
  40af65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af66:	mov    ds:0xd6352d43,eax
  40af6b:	fucomi st,st(1)
  40af6d:	lods   eax,DWORD PTR ds:[esi]
  40af6e:	mov    DWORD PTR [ebx-0x51],ebp
  40af71:	repz xchg esp,eax
  40af73:	jns    0x40af64
  40af75:	int3   
  40af76:	cmp    DWORD PTR [edx-0x4a],esp
  40af79:	out    0x6e,al
  40af7b:	call   0xb954:0xb7a82660
  40af82:	fcom   QWORD PTR [ebp+ebx*4+0x72]
  40af86:	jmp    0xf7c4:0x7f5c39af
  40af8d:	loopne 0x40b00d
  40af8f:	sbb    al,0x29
  40af91:	jno    0x40af33
  40af93:	and    edx,DWORD PTR [ebx+ebx*2-0x786cbd2]
  40af9a:	sti    
  40af9b:	in     eax,0x98
  40af9d:	cmp    BYTE PTR [edx+edx*2+0x261110b8],cl
  40afa4:	jns    0x40af38
  40afa6:	fmul   QWORD PTR [esi]
  40afa8:	pushw  0xfa47
  40afac:	mov    BYTE PTR [ebp+0x69d80f2e],bh
  40afb2:	jnp    0x40afad
  40afb4:	adc    BYTE PTR [eiz*1+0x65ab709d],dl
  40afbb:	adc    BYTE PTR [esi+0x77b90432],0x4c
  40afc2:	iret   
  40afc3:	push   ebp
  40afc4:	sub    al,0x86
  40afc6:	jmp    0x8bd5ad32
  40afcb:	test   al,0x18
  40afcd:	das    
  40afce:	or     dl,BYTE PTR [esp+ebp*8+0x38d07b57]
  40afd5:	scas   al,BYTE PTR es:[edi]
  40afd6:	call   0xab44de4a
  40afdb:	mov    edi,0xd9c3212d
  40afe0:	mov    DWORD PTR [ebp+0x495cb5a5],eax
  40afe6:	mov    ebx,0x5d0438c1
  40afeb:	sahf   
  40afec:	cmp    bh,BYTE PTR ds:0xb3e3cfb7
  40aff2:	jne    0x40af87
  40aff4:	xchg   ebx,eax
  40aff5:	and    eax,0x938a54ae
  40affa:	imul   eax,DWORD PTR [ecx+0x59],0x64
  40affe:	or     edi,DWORD PTR [eax-0x41]
  40b001:	inc    eax
  40b002:	loopne 0x40afa0
  40b004:	sti    
  40b005:	ficom  WORD PTR [eax+edi*8+0x33]
  40b009:	jmp    0x39a2:0xece58732
  40b010:	inc    esp
  40b011:	stos   BYTE PTR es:[edi],al
  40b012:	bound  ebx,QWORD PTR [esi+0x5013691c]
  40b018:	(bad)  
  40b019:	call   DWORD PTR [edx+ebp*2+0x39]
  40b01d:	out    0xda,eax
  40b01f:	add    DWORD PTR [ecx-0x3b76071b],eax
  40b025:	add    al,0x4c
  40b027:	retf   
  40b028:	adc    eax,0x8ce7915c
  40b02d:	and    al,0xe0
  40b02f:	mov    al,ds:0x2bf22bf3
  40b034:	and    dh,BYTE PTR [edx]
  40b036:	popa   
  40b037:	fnstenvw [ecx-0x53]
  40b03b:	leave  
  40b03c:	jbe    0x40b06a
  40b03e:	cmp    eax,0x6b2efeaf
  40b043:	cli    
  40b044:	xchg   edx,eax
  40b045:	xchg   ecx,eax
  40b046:	scas   al,BYTE PTR es:[edi]
  40b047:	mov    WORD PTR [eax],ds
  40b049:	clc    
  40b04a:	lods   eax,DWORD PTR ds:[esi]
  40b04b:	mov    ah,0x96
  40b04d:	and    al,0x9
  40b04f:	mov    cl,0xc
  40b051:	add    ch,BYTE PTR [ecx-0x6017fe37]
  40b057:	push   ebx
  40b058:	imul   edx,DWORD PTR [ecx],0xffffff93
  40b05b:	mov    esp,0xfbede06
  40b060:	jmp    0x40b05e
  40b062:	cmp    ebp,DWORD PTR [ebx-0x6bc57366]
  40b068:	sub    edi,edi
  40b06a:	sbb    BYTE PTR [esi-0x6967f0c4],bl
  40b070:	jecxz  0x40b08d
  40b072:	aas    
  40b073:	mov    cl,0xdc
  40b075:	push   es
  40b076:	cmp    al,0x9e
  40b078:	mov    dh,0xa7
  40b07a:	sar    DWORD PTR [ecx+0x0],0x3a
  40b07e:	cmp    BYTE PTR [ecx+ebp*2-0x1e],ch
  40b082:	mov    ds:0xe8c05a54,al
  40b087:	mov    al,ds:0xea93bbd
  40b08c:	arpl   WORD PTR ds:0x87bcbdea,di
  40b092:	dec    ebp
  40b093:	jle    0x40b074
  40b095:	adc    eax,0x4dc0346
  40b09a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b09b:	jmp    0x40b0de
  40b09d:	inc    ecx
  40b09f:	xchg   esp,eax
  40b0a0:	sbb    ecx,DWORD PTR [bx-0x2e]
  40b0a4:	sbb    bh,bl
  40b0a6:	sub    eax,0xb0df0b06
  40b0ab:	shr    BYTE PTR [edi],1
  40b0ad:	xor    DWORD PTR [esi],edx
  40b0af:	stos   DWORD PTR es:[edi],eax
  40b0b0:	mov    al,0xf1
  40b0b2:	cdq    
  40b0b3:	rcr    DWORD PTR [edi],cl
  40b0b5:	inc    edx
  40b0b6:	push   eax
  40b0b7:	std    
  40b0b8:	fwait
  40b0b9:	push   esi
  40b0ba:	fsubr  QWORD PTR [esp+ebx*2]
  40b0bd:	fbstp  TBYTE PTR [edx]
  40b0bf:	aad    0xf3
  40b0c1:	stos   DWORD PTR es:[edi],eax
  40b0c2:	ins    DWORD PTR es:[edi],dx
  40b0c3:	sbb    ch,BYTE PTR [ebp-0x16]
  40b0c6:	and    esi,ebp
  40b0c8:	mov    bl,0xe5
  40b0ca:	ja     0x40b09f
  40b0cc:	inc    edi
  40b0cd:	cmp    esi,eax
  40b0cf:	or     eax,DWORD PTR [ebx+0x2]
  40b0d2:	fidivr DWORD PTR [eax-0x1f]
  40b0d5:	fs call 0xd240a845
  40b0db:	xchg   ebx,eax
  40b0dc:	test   BYTE PTR [ebp+0x1aa32dec],ch
  40b0e2:	sahf   
  40b0e3:	gs jb  0x40b088
  40b0e6:	lahf   
  40b0e7:	xlat   BYTE PTR ds:[ebx]
  40b0e8:	(bad)  
  40b0ea:	shl    eax,0xb5
  40b0ed:	sahf   
  40b0ee:	push   0x521b4bf4
  40b0f3:	gs fs cwde 
  40b0f6:	neg    BYTE PTR [ebp-0x2bc4747a]
  40b0fc:	cmp    eax,0x54c33797
  40b101:	xchg   ecx,eax
  40b102:	std    
  40b103:	or     esp,DWORD PTR [ecx+0x5d]
  40b106:	out    dx,al
  40b107:	retf   
  40b108:	sub    ch,al
  40b10a:	aas    
  40b10b:	or     BYTE PTR [edx],dl
  40b10d:	sub    BYTE PTR [ecx+edx*4+0x2b],dl
  40b111:	jle    0x40b0fe
  40b113:	dec    eax
  40b114:	out    dx,al
  40b115:	out    0x1,al
  40b117:	jb     0x40b175
  40b119:	add    bh,ch
  40b11b:	(bad)  [esi+edx*2+0x6a40d507]
  40b122:	cmc    
  40b123:	mov    edx,0xec4ae6f8
  40b128:	arpl   WORD PTR [edx],si
  40b12a:	inc    eax
  40b12b:	aam    0x10
  40b12d:	add    ecx,esp
  40b12f:	clc    
  40b130:	enter  0x41c1,0xc5
  40b134:	jnp    0x40b1a2
  40b136:	cmp    eax,0x51d1577e
  40b13b:	(bad)  
  40b13d:	in     eax,dx
  40b13e:	mov    edi,0xd685182c
  40b143:	inc    ebx
  40b144:	rcr    esi,1
  40b146:	push   eax
  40b147:	les    ebp,FWORD PTR [edx+0x68]
  40b14a:	lahf   
  40b14b:	add    DWORD PTR [ebx],0x75
  40b14e:	aam    0xcc
  40b150:	jmp    0x40b0f2
  40b152:	mov    ebp,0xbb3fbedd
  40b157:	cmp    al,0xc3
  40b159:	mov    edx,DWORD PTR [ecx]
  40b15b:	sbb    BYTE PTR [ecx-0x27],bl
  40b15e:	mov    ds:0x8a5b51cb,al
  40b163:	mov    ah,0x11
  40b165:	dec    ebp
  40b166:	dec    ecx
  40b167:	inc    esi
  40b168:	sub    ecx,DWORD PTR [edi]
  40b16a:	in     al,0xcc
  40b16c:	rol    DWORD PTR [eax-0x50],1
  40b16f:	add    al,0x61
  40b171:	out    0xa0,al
  40b173:	xchg   edi,eax
  40b174:	in     al,0x12
  40b176:	adc    ecx,DWORD PTR ds:0xc8d948
  40b17c:	inc    esi
  40b17d:	mov    eax,fs:0x4dd154ca
  40b183:	or     bh,BYTE PTR [eax]
  40b185:	in     al,0xbb
  40b187:	dec    edx
  40b188:	cmp    eax,edi
  40b18a:	fwait
  40b18b:	add    eax,0x43ab3ec3
  40b190:	ss dec al
  40b193:	mov    edi,0x25113cf2
  40b198:	ret    
  40b199:	pop    ecx
  40b19a:	imul   edi,DWORD PTR ds:0xfa0d5fcd,0x61
  40b1a1:	fisttp WORD PTR [edx-0x43]
  40b1a4:	push   ds
  40b1a5:	fidiv  DWORD PTR [esi-0x2]
  40b1a8:	jge    0x40b1fe
  40b1aa:	jmp    0x40b1af
  40b1ac:	push   ss
  40b1ad:	les    edx,FWORD PTR [eax+eax*1+0x529cbf0f]
  40b1b4:	mov    edx,0x22add080
  40b1b9:	sti    
  40b1ba:	sub    cl,ch
  40b1bc:	pop    esi
  40b1bd:	(bad)
  40b1c0:	jl     0x40b22f
  40b1c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c3:	and    BYTE PTR [ebp+0x2a4e6e9f],dh
  40b1c9:	fbstp  TBYTE PTR [eax-0x418b4183]
  40b1cf:	fbld   TBYTE PTR [ebx+eax*4-0x73]
  40b1d3:	and    ebp,0x97a07194
  40b1d9:	push   ebx
  40b1da:	mov    dl,0x2d
  40b1dc:	inc    esp
  40b1dd:	add    DWORD PTR [ebx],ebp
  40b1df:	jge    0x40b179
  40b1e1:	add    BYTE PTR [ebp+0x76],dl
  40b1e4:	retf   0xcd1b
  40b1e7:	or     BYTE PTR [edi],al
  40b1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1ea:	inc    esp
  40b1eb:	sbb    ebp,ebp
  40b1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1ee:	add    al,al
  40b1f0:	les    edx,FWORD PTR [edx]
  40b1f2:	inc    eax
  40b1f3:	sub    al,0xa2
  40b1f5:	xor    dh,BYTE PTR [ebx]
  40b1f7:	inc    eax
  40b1f8:	call   0x5d3a3a17
  40b1fd:	enter  0x1385,0x86
  40b201:	mov    ?,WORD PTR [eax-0x6e]
  40b204:	scas   eax,DWORD PTR es:[edi]
  40b205:	ret    
  40b206:	imul   esi,DWORD PTR [esi+0x1f],0xf5a6eace
  40b20d:	sti    
  40b20e:	imul   DWORD PTR [eax]
  40b210:	jmp    FWORD PTR [ebp+0x24]
  40b213:	dec    ebp
  40b214:	add    BYTE PTR [ecx+0x25],al
  40b217:	push   ebp
  40b218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b219:	xchg   edi,eax
  40b21a:	(bad)  
  40b21b:	xor    BYTE PTR ds:[edi-0x1242ff77],ch
  40b222:	out    dx,eax
  40b223:	sub    ecx,edi
  40b225:	inc    ebp
  40b226:	sub    ah,dl
  40b228:	test   DWORD PTR [esi+edx*8-0x6e],ecx
  40b22c:	dec    edx
  40b22d:	pop    ss
  40b22e:	pop    ds
  40b22f:	or     DWORD PTR [ecx-0x33],esi
  40b232:	(bad)  
  40b233:	stos   BYTE PTR es:[edi],al
  40b234:	leave  
  40b235:	pop    esi
  40b236:	push   0x47
  40b238:	cmp    DWORD PTR [ebx],esi
  40b23a:	test   DWORD PTR ds:0x3e183faf,edx
  40b240:	push   cs
  40b241:	push   esi
  40b242:	bound  edi,QWORD PTR [ecx+0x6e1b3092]
  40b248:	dec    ebx
  40b249:	pop    ebp
  40b24a:	pop    ss
  40b24b:	shr    DWORD PTR [ebx+0xac4579d],0x6a
  40b252:	pop    ebx
  40b253:	or     al,0xa3
  40b255:	mov    ds:0x50c692b9,eax
  40b25a:	push   0xffffffad
  40b25c:	icebp  
  40b25d:	fdivr  QWORD PTR [eax+edi*2]
  40b260:	push   esi
  40b261:	push   ecx
  40b262:	or     bl,BYTE PTR [edx]
  40b264:	mov    ebp,0xb57e4b73
  40b269:	and    edx,DWORD PTR [esi*1+0x2445949b]
  40b270:	push   esi
  40b271:	mov    DWORD PTR [edx-0x352e478c],ecx
  40b277:	sbb    BYTE PTR [ebx+0x56857d18],0x76
  40b27e:	adc    al,0xd
  40b280:	loope  0x40b2a7
  40b282:	and    al,0xa2
  40b284:	enter  0xeb1a,0x85
  40b288:	jl     0x40b247
  40b28a:	icebp  
  40b28b:	pop    esi
  40b28c:	scas   eax,DWORD PTR es:[edi]
  40b28d:	sar    DWORD PTR [ebx+edi*4],1
  40b290:	adc    ch,BYTE PTR [edi+ebp*1]
  40b293:	iret   
  40b294:	in     al,0x37
  40b296:	pop    esp
  40b297:	pop    esp
  40b298:	outs   dx,BYTE PTR ds:[esi]
  40b299:	and    al,0x2c
  40b29b:	in     al,dx
  40b29c:	sub    eax,DWORD PTR [ebx+ebp*2+0x5c]
  40b2a0:	jecxz  0x40b307
  40b2a2:	sbb    eax,DWORD PTR ds:0x51d9273b
  40b2a8:	(bad)  
  40b2a9:	push   ds
  40b2aa:	div    BYTE PTR [esi-0x54]
  40b2ad:	and    BYTE PTR [edi-0x11076481],ch
  40b2b3:	out    dx,eax
  40b2b4:	jmp    0x1c0ccd0
  40b2b9:	dec    ebx
  40b2ba:	push   esp
  40b2bb:	fucomi st,st(0)
  40b2bd:	test   DWORD PTR [edx],ebp
  40b2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2c0:	adc    ebx,DWORD PTR [ebx]
  40b2c2:	mov    ebp,0x55b7a6ac
  40b2c7:	jle    0x40b316
  40b2c9:	jmp    0xbe0560f0
  40b2ce:	adc    ch,dh
  40b2d0:	mov    gs,WORD PTR [ecx+0x2d0efdb6]
  40b2d6:	mov    ds:0xd3f2fd6b,eax
  40b2db:	jmp    0xaae8:0x74d9cf09
  40b2e2:	pop    esi
  40b2e3:	scas   eax,DWORD PTR es:[edi]
  40b2e4:	add    DWORD PTR [eax+0x7e],0xffffff91
  40b2e8:	pop    es
  40b2e9:	mov    WORD PTR [edx+eiz*4-0x1b],ds
  40b2ed:	test   BYTE PTR [ebx+0x75],al
  40b2f0:	or     al,0xc4
  40b2f2:	jle    0x40b35f
  40b2f4:	jge    0x40b2a2
  40b2f6:	xchg   esp,eax
  40b2f7:	ja     0xf561ad60
  40b2fd:	cmp    edx,DWORD PTR [ecx]
  40b2ff:	sbb    ch,al
  40b301:	addr16 jg 0x40b35b
  40b304:	cmp    DWORD PTR [ecx-0x5a],ebx
  40b307:	aam    0x99
  40b309:	xchg   edx,eax
  40b30a:	dec    eax
  40b30b:	push   eax
  40b30c:	and    eax,0xc73ace5
  40b311:	adc    al,0x42
  40b313:	test   BYTE PTR [edx],dh
  40b315:	pop    es
  40b316:	dec    edi
  40b317:	dec    esi
  40b318:	aam    0x9f
  40b31a:	xchg   esi,eax
  40b31b:	jno    0x40b312
  40b31d:	ja     0x40b331
  40b31f:	push   ebx
  40b320:	ja     0x40b324
  40b322:	loopne 0x40b321
  40b324:	xor    BYTE PTR [eax],bl
  40b326:	leave  
  40b327:	sub    cl,0x11
  40b32a:	js     0x40b2e3
  40b32c:	int    0xcf
  40b32e:	and    al,0x20
  40b330:	data16 scas al,BYTE PTR es:[edi]
  40b332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b333:	mov    esi,0x431352c0
  40b338:	dec    edx
  40b339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b33a:	pop    ecx
  40b33b:	xchg   DWORD PTR [eax],ebp
  40b33d:	or     al,al
  40b33f:	ds daa 
  40b341:	fmul   QWORD PTR [esp+eiz*2]
  40b344:	fisub  WORD PTR [eax-0x21]
  40b347:	jl     0x40b32c
  40b349:	retf   0x542
  40b34c:	pop    ebx
  40b34d:	rcr    esp,1
  40b34f:	enter  0xb992,0x81
  40b353:	popf   
  40b354:	cmp    BYTE PTR [eax],bl
  40b356:	mov    edi,DWORD PTR [esi+0x3ffabd76]
  40b35c:	xor    dh,BYTE PTR [ebx+0x2f]
  40b35f:	jmp    0x1fc1a96a
  40b364:	and    DWORD PTR [ecx],ecx
  40b366:	enter  0x1f38,0x28
  40b36a:	jg     0x40b314
  40b36c:	pop    eax
  40b36d:	les    edi,FWORD PTR [edx-0x43d83481]
  40b373:	mov    eax,ds:0xf3f52115
  40b378:	or     ebp,DWORD PTR [eax-0x2e877474]
  40b37e:	mov    esi,0x44a91d07
  40b383:	xchg   BYTE PTR [ecx+0x6d],bl
  40b386:	dec    edi
  40b387:	pop    ebx
  40b388:	arpl   WORD PTR [ebp+0x754e5b18],bp
  40b38e:	clc    
  40b38f:	scas   eax,DWORD PTR es:[edi]
  40b390:	cmp    dl,al
  40b392:	fistp  WORD PTR [ebx]
  40b394:	inc    ebx
  40b395:	mov    ds:0xa8f65e28,eax
  40b39a:	xchg   esi,eax
  40b39b:	sub    edx,DWORD PTR [esi-0x7a]
  40b39e:	scas   al,BYTE PTR es:[edi]
  40b39f:	xor    DWORD PTR [ebx+0x6386446e],ebp
  40b3a5:	push   esp
  40b3a6:	cmp    al,BYTE PTR [ecx+ebp*2-0x3d]
  40b3aa:	jp     0x40b38a
  40b3ac:	jb     0x40b370
  40b3ae:	enter  0x5297,0x2a
  40b3b2:	jmp    DWORD PTR [ecx+0x6ac6c11a]
  40b3b8:	mov    edi,0x632bfa62
  40b3bd:	imul   esi,esi,0xb597f373
  40b3c3:	fidiv  WORD PTR [edx-0x4b]
  40b3c6:	cdq    
  40b3c7:	xor    BYTE PTR [ecx],ah
  40b3c9:	pop    edx
  40b3ca:	adc    BYTE PTR [ebp-0x6d],al
  40b3cd:	int    0x5f
  40b3cf:	jno    0x40b3fe
  40b3d1:	mov    dh,0xe5
  40b3d3:	(bad)  
  40b3d5:	call   0x987b5aab
  40b3da:	or     ah,BYTE PTR [edi+0x5d]
  40b3dd:	aaa    
  40b3de:	div    DWORD PTR [ecx+ebx*1+0x30e892bb]
  40b3e5:	retf   
  40b3e6:	cmp    BYTE PTR [edx+eax*2+0x4da90423],ah
  40b3ed:	in     eax,dx
  40b3ee:	popa   
  40b3ef:	jbe    0x40b433
  40b3f1:	repnz arpl WORD PTR [edx],di
  40b3f4:	bound  edi,QWORD PTR [edx]
  40b3f6:	or     DWORD PTR [eax+0x32915577],0xffffffa1
  40b3fd:	addr16 imul eax,edx,0xb1ff32ca
  40b404:	pusha  
  40b405:	shl    BYTE PTR [edx+ebx*4+0x3b],0xc8
  40b40a:	pop    es
  40b40b:	dec    ebp
  40b40c:	push   ss
  40b40d:	jge    0x40b404
  40b40f:	mov    ah,0x83
  40b411:	test   DWORD PTR [ecx-0x4d3f1e26],ebp
  40b417:	sub    edi,DWORD PTR [edx+0x37]
  40b41a:	sub    ebp,DWORD PTR [esi]
  40b41c:	jp     0x40b3d0
  40b41e:	cmp    cl,BYTE PTR ds:0xc8d1fed4
  40b424:	into   
  40b425:	mov    ebx,gs
  40b427:	clc    
  40b428:	std    
  40b429:	cli    
  40b42a:	adc    eax,0xbf5935cf
  40b42f:	daa    
  40b430:	inc    edx
  40b431:	popf   
  40b432:	cmp    eax,0x186f83ab
  40b437:	iret   
  40b438:	pusha  
  40b439:	cdq    
  40b43a:	jl     0x40b45e
  40b43c:	fldpi  
  40b43e:	mov    eax,DWORD PTR [eax+0x2e]
  40b441:	or     eax,0xb7579ae2
  40b446:	dec    edx
  40b447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b448:	addr16 ja 0x40b48f
  40b44b:	repz lahf 
  40b44d:	push   esi
  40b44e:	jmp    0xc411e917
  40b453:	es pop eax
  40b455:	push   0xb089fb7e
  40b45a:	repz pop edx
  40b45c:	xchg   DWORD PTR [edx],ebx
  40b45e:	jg     0x40b48b
  40b460:	mov    dh,0x96
  40b462:	sbb    BYTE PTR [ecx-0x52b5614],dl
  40b468:	imul   edx,DWORD PTR ds:0x26f08c0,0xe
  40b46f:	sbb    eax,0xbb82d98f
  40b474:	in     al,dx
  40b475:	jne    0x40b428
  40b477:	scas   al,BYTE PTR es:[edi]
  40b478:	retf   0x686c
  40b47b:	das    
  40b47c:	aam    0xc5
  40b47e:	std    
  40b47f:	jne    0x40b4ed
  40b481:	cmp    dl,BYTE PTR [edx+0x6a858fc6]
  40b487:	or     bh,BYTE PTR [edi]
  40b489:	jno    0x40b4a8
  40b48b:	leave  
  40b48c:	sbb    DWORD PTR [ecx-0x37bc34d3],esi
  40b492:	outs   dx,DWORD PTR ds:[esi]
  40b493:	es iret 
  40b495:	cli    
  40b496:	loope  0x40b4ca
  40b498:	push   edx
  40b499:	out    dx,eax
  40b49a:	in     eax,0xf
  40b49c:	popf   
  40b49d:	lock cmp BYTE PTR [ecx-0x473c0d5c],al
  40b4a4:	cmp    bh,BYTE PTR [esi-0x165b3564]
  40b4aa:	aas    
  40b4ab:	enter  0xe800,0x4
  40b4af:	push   es
  40b4b0:	(bad)  
  40b4b1:	int3   
  40b4b2:	mov    ds,WORD PTR [ecx-0x14125e70]
  40b4b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4b9:	ins    DWORD PTR es:[edi],dx
  40b4ba:	cmp    al,0x77
  40b4bc:	fmul   QWORD PTR [edi-0x36]
  40b4bf:	repz pop edx
  40b4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4c2:	pop    ss
  40b4c3:	jecxz  0x40b4ae
  40b4c5:	shr    DWORD PTR [esp+esi*4],1
  40b4c8:	pop    esp
  40b4c9:	out    0xe2,al
  40b4cb:	jae    0x40b470
  40b4cd:	ss stos BYTE PTR es:[edi],al
  40b4cf:	out    0xe9,eax
  40b4d1:	mov    ebp,0x319e7138
  40b4d6:	fistp  QWORD PTR [ebx+0x4c77810f]
  40b4dc:	xor    eax,0xf6aaccd0
  40b4e1:	inc    ebp
  40b4e2:	add    ebx,DWORD PTR [ebx]
  40b4e4:	scas   eax,DWORD PTR es:[edi]
  40b4e5:	pop    ecx
  40b4e6:	int3   
  40b4e7:	fstp   QWORD PTR [ecx+0x47]
  40b4ea:	and    edx,DWORD PTR [ecx+0x327de9a1]
  40b4f0:	scas   al,BYTE PTR es:[edi]
  40b4f1:	test   al,0x86
  40b4f3:	dec    ebx
  40b4f4:	lods   al,BYTE PTR ds:[esi]
  40b4f5:	cmp    al,0x65
  40b4f7:	cdq    
  40b4f8:	mov    BYTE PTR [eax-0x4f],dl
  40b4fb:	loopne 0x40b54b
  40b4fd:	leave  
  40b4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ff:	loope  0x40b529
  40b501:	add    al,0xf9
  40b503:	lods   eax,DWORD PTR ds:[esi]
  40b504:	loopne 0x40b55a
  40b506:	daa    
  40b507:	mov    esi,0x8cd107bc
  40b50c:	imul   ecx,DWORD PTR [ebx-0x71],0x10
  40b510:	call   0xdb407bbc
  40b515:	xor    ebp,ecx
  40b517:	test   DWORD PTR [edi-0x59],esi
  40b51a:	loopne 0x40b4e8
  40b51c:	jecxz  0x40b4cd
  40b51e:	push   esp
  40b51f:	jp     0x40b58c
  40b521:	mov    eax,0x65bf25c
  40b526:	jp     0x40b500
  40b528:	jae    0xa8c61384
  40b52e:	je     0x40b57c
  40b530:	sbb    eax,0x34326fd5
  40b535:	ins    BYTE PTR es:[edi],dx
  40b536:	ret    
  40b537:	xchg   esp,eax
  40b538:	outs   dx,BYTE PTR ds:[esi]
  40b539:	xor    BYTE PTR [eax+0x357f5625],dh
  40b53f:	mov    cl,0x90
  40b541:	and    al,BYTE PTR [ebp-0x4c]
  40b544:	xchg   ecx,eax
  40b545:	pop    edi
  40b546:	xor    al,BYTE PTR [ebp+0x77f0501b]
  40b54c:	cld    
  40b54d:	enter  0x5be7,0x1
  40b551:	aas    
  40b552:	sub    eax,0x9c69481f
  40b557:	imul   edi,DWORD PTR [ebp+0x61],0x17b677e6
  40b55e:	jno    0x40b548
  40b560:	leave  
  40b561:	cwde   
  40b562:	cmp    bl,0x52
  40b565:	pop    edi
  40b566:	call   0x129b:0xb481d2f3
  40b56d:	sahf   
  40b56e:	pop    es
  40b56f:	jno    0x40b4ff
  40b571:	pop    edi
  40b572:	cmp    BYTE PTR [esi],dh
  40b574:	sub    edx,DWORD PTR [edi+ebx*4-0x231a3d39]
  40b57b:	cwde   
  40b57c:	test   eax,0x1ef0510e
  40b581:	cmp    dh,cl
  40b583:	test   al,0x46
  40b585:	div    BYTE PTR [ebp+0x38]
  40b588:	jg     0x40b559
  40b58a:	mov    edi,0xed2b6790
  40b58f:	jnp    0x40b56d
  40b591:	std    
  40b592:	out    dx,eax
  40b593:	jne    0x40b5e2
  40b595:	dec    esi
  40b596:	outs   dx,DWORD PTR ds:[esi]
  40b597:	aad    0x14
  40b599:	cld    
  40b59a:	aad    0xe1
  40b59c:	push   edx
  40b59d:	fcomp  DWORD PTR [esi]
  40b59f:	ret    0xbec4
  40b5a2:	outs   dx,BYTE PTR ds:[esi]
  40b5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a4:	cmp    eax,0x262710a1
  40b5a9:	stc    
  40b5aa:	sub    BYTE PTR [eax],dl
  40b5ac:	shl    DWORD PTR [ebx],1
  40b5ae:	pop    eax
  40b5af:	xchg   edi,eax
  40b5b0:	ficom  DWORD PTR [esp+edx*2]
  40b5b3:	xor    eax,0x64be7222
  40b5b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5b9:	inc    ebx
  40b5ba:	mov    ch,0x17
  40b5bc:	mov    ebp,0x8484abb2
  40b5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5c2:	dec    edx
  40b5c3:	out    dx,eax
  40b5c4:	inc    eax
  40b5c5:	cdq    
  40b5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5c7:	pop    ebp
  40b5c8:	add    eax,0x12e41bf0
  40b5cd:	aam    0x3d
  40b5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5d0:	imul   ebx,DWORD PTR [eax],0xd1e6938e
  40b5d6:	mov    gs,ecx
  40b5d8:	sbb    eax,0x5b5ddfde
  40b5dd:	imul   ebx,ecx,0xffffffb3
  40b5e0:	xor    eax,0xe63ecf
  40b5e5:	ret    0x2f6c
  40b5e8:	stos   DWORD PTR es:[edi],eax
  40b5e9:	imul   ecx,DWORD PTR [esi+0x3103d867],0x9e7e2550
  40b5f3:	shr    BYTE PTR ds:0xd592248a,cl
  40b5f9:	jp     0x40b583
  40b5fb:	mov    al,BYTE PTR [ecx-0x5f]
  40b5fe:	fld    TBYTE PTR [ebx+0x19]
  40b601:	jp     0x40b587
  40b603:	or     BYTE PTR [edi+0x7b],bh
  40b606:	popf   
  40b607:	push   esi
  40b608:	nop
  40b609:	push   es
  40b60a:	push   bx
  40b60c:	xchg   ebx,eax
  40b60d:	cwde   
  40b60e:	xchg   BYTE PTR [ebp+0x11],ch
  40b611:	mov    esp,0x33248ab3
  40b616:	out    0x9d,al
  40b618:	cwde   
  40b619:	jns    0x40b698
  40b61b:	push   0x7f
  40b61d:	verr   WORD PTR [ecx+0x1461252a]
  40b624:	sbb    BYTE PTR [ebx-0x36],bh
  40b627:	bound  edx,QWORD PTR [ecx+0x2db119d]
  40b62d:	pop    ebx
  40b62e:	jmp    0xb3bf:0x25c08672
  40b635:	mov    dh,0x35
  40b637:	and    dh,bh
  40b639:	inc    ecx
  40b63a:	nop
  40b63b:	jl     0x40b67b
  40b63d:	cmp    esp,DWORD PTR ds:0xea11de2c
  40b643:	sbb    eax,0xbe8f2566
  40b648:	adc    DWORD PTR [ecx+edx*8],0x71
  40b64c:	jl     0x40b5f7
  40b64e:	mov    ebp,ds
  40b650:	sbb    DWORD PTR [ebp-0x75ecbb],esi
  40b656:	push   ss
  40b657:	mov    ebp,0xbf51fa77
  40b65c:	jmp    0x40b60d
  40b65e:	mov    ds:0x45e14568,al
  40b663:	xchg   edi,eax
  40b664:	jmp    0x4578683b
  40b669:	arpl   sp,di
  40b66b:	les    edx,FWORD PTR [esi+0x23]
  40b66e:	int    0x35
  40b670:	cmc    
  40b671:	jmp    0xf5fba6dd
  40b676:	dec    esi
  40b677:	shl    DWORD PTR [edi-0x298ca01a],1
  40b67d:	je     0x40b6b8
  40b67f:	push   ecx
  40b680:	push   ss
  40b681:	xor    ebx,DWORD PTR [edx+0x4a9ee383]
  40b687:	pop    esi
  40b688:	xchg   edx,eax
  40b689:	mov    ah,0xac
  40b68b:	hlt    
  40b68c:	fstp   QWORD PTR [esp+ecx*4-0x7c]
  40b690:	pop    ss
  40b691:	jne    0x40b62e
  40b693:	fdiv   DWORD PTR [ebx+0x22f38653]
  40b699:	jmp    0xfc6:0xa5c6459c
  40b6a0:	sahf   
  40b6a1:	cli    
  40b6a2:	xchg   dl,dh
  40b6a4:	add    DWORD PTR [esi],edx
  40b6a6:	inc    edx
  40b6a7:	lea    esi,[eax+ecx*4]
  40b6aa:	sub    al,dh
  40b6ac:	cmc    
  40b6ad:	maskmovq mm3,(bad)
  40b6ae:	neg    DWORD PTR [ebx+0x17a5c22a]
  40b6b4:	and    DWORD PTR [ecx-0x69e90641],0x79792d0f
  40b6be:	loopne 0x40b649
  40b6c0:	daa    
  40b6c1:	add    eax,esi
  40b6c3:	out    0x26,al
  40b6c5:	push   0x22
  40b6c7:	pop    ss
  40b6c8:	fsubr  DWORD PTR ds:[esi-0xa]
  40b6cc:	mov    eax,0x6202142
  40b6d1:	push   edi
  40b6d2:	cmp    ecx,DWORD PTR [eax-0x17]
  40b6d5:	sub    al,BYTE PTR [esi+0x6749ef02]
  40b6db:	das    
  40b6dc:	or     ebx,DWORD PTR [edi-0x784ba30]
  40b6e2:	jo     0x40b706
  40b6e4:	out    dx,al
  40b6e5:	xchg   edi,eax
  40b6e6:	and    BYTE PTR [esi+0x4e],dh
  40b6e9:	pop    edx
  40b6ea:	bound  esi,QWORD PTR [ebp*8-0x6edeb7c5]
  40b6f1:	push   ss
  40b6f2:	or     DWORD PTR [edx-0x47],eax
  40b6f5:	pushf  
  40b6f6:	and    eax,0x58d98a64
  40b6fb:	inc    esp
  40b6fc:	inc    esp
  40b6fd:	xchg   edi,eax
  40b6fe:	cmp    eax,0x1c4ed4b8
  40b703:	fadd   DWORD PTR [eax+edx*1+0x6e]
  40b707:	into   
  40b708:	(bad)  
  40b709:	jmp    0x4eaa1e95
  40b70e:	pushf  
  40b70f:	sub    eax,0x9072d85a
  40b714:	popa   
  40b715:	jbe    0x40b77e
  40b717:	jmp    0x97592baf
  40b71c:	out    dx,al
  40b71d:	cmp    ecx,DWORD PTR [esi]
  40b71f:	xchg   ebx,eax
  40b720:	xchg   DWORD PTR [edx],esi
  40b722:	push   ebx
  40b723:	loope  0x40b6ca
  40b725:	pop    ebx
  40b726:	hlt    
  40b727:	sub    bh,BYTE PTR [ebx-0x24]
  40b72a:	fistp  QWORD PTR [esp+ecx*4-0x34]
  40b72e:	ins    DWORD PTR es:[edi],dx
  40b72f:	sbb    edx,DWORD PTR ds:0x21a568e0
  40b735:	cdq    
  40b736:	xor    eax,0xaa795a5f
  40b73b:	call   0x36a0:0x7b6e9685
  40b742:	rcl    BYTE PTR [esi],1
  40b744:	(bad)  
  40b745:	adc    dl,BYTE PTR [esi-0x5f]
  40b748:	ret    0x4c9
  40b74b:	mov    dh,0x3
  40b74d:	mov    ah,0xd7
  40b74f:	mov    eax,0x2f95f273
  40b754:	es pop ecx
  40b756:	sbb    esp,edx
  40b758:	add    al,0xa6
  40b75a:	ror    eax,0xe2
  40b75d:	mov    dl,0x0
  40b75f:	push   esp
  40b760:	fs (bad) 
  40b762:	adc    eax,0x9c3ca4ec
  40b767:	pop    esi
  40b768:	lahf   
  40b769:	jb     0x40b770
  40b76b:	pop    es
  40b76c:	sahf   
  40b76d:	stc    
  40b76e:	mov    al,ds:0x81b43a3b
  40b773:	fidivr WORD PTR [ecx]
  40b775:	das    
  40b776:	popa   
  40b777:	scas   eax,DWORD PTR es:[edi]
  40b778:	xor    DWORD PTR [edi],0x135fab45
  40b77e:	and    BYTE PTR [ecx+0x32],bh
  40b781:	sub    al,0x2a
  40b783:	mov    edx,0x9a56d29f
  40b788:	xchg   ebx,eax
  40b789:	shl    BYTE PTR [edx-0x59f31061],1
  40b78f:	fld    QWORD PTR [edx]
  40b791:	shr    bh,cl
  40b793:	mov    eax,ds:0xd7f95df0
  40b798:	in     al,0x71
  40b79a:	xor    bh,BYTE PTR [ebx-0x47]
  40b79d:	cmp    dh,BYTE PTR [edi-0x44]
  40b7a0:	mov    bl,0xf6
  40b7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a3:	call   0x2fa6:0x244af380
  40b7aa:	inc    esp
  40b7ab:	cmp    ecx,DWORD PTR [ebp-0x49]
  40b7ae:	push   eax
  40b7af:	loopne 0x40b7d1
  40b7b1:	in     al,dx
  40b7b2:	push   eax
  40b7b3:	dec    eax
  40b7b4:	and    cl,bl
  40b7b6:	mov    ah,BYTE PTR [esp+ecx*8+0x22]
  40b7ba:	jbe    0x40b78e
  40b7bc:	dec    edx
  40b7bd:	mov    dh,0xe
  40b7bf:	mov    edx,0xf83ac85b
  40b7c4:	push   cs
  40b7c5:	out    0xd2,al
  40b7c7:	in     al,0x43
  40b7c9:	ret    0xe7ec
  40b7cc:	mov    cl,cl
  40b7ce:	(bad)  
  40b7d0:	jmp    0xaec453b6
  40b7d5:	or     DWORD PTR [ebx-0x7218c683],ebx
  40b7db:	fldenv [edx]
  40b7dd:	mov    eax,ds:0xf861486a
  40b7e2:	adc    DWORD PTR [edx+eax*2+0x31],0xffffff99
  40b7e7:	jb     0x40b7b3
  40b7e9:	dec    ebx
  40b7ea:	div    DWORD PTR [ebp+0x4c127ca1]
  40b7f0:	adc    ah,BYTE PTR [ecx+0x67e0ec55]
  40b7f6:	leave  
  40b7f7:	or     eax,0x2b8d6026
  40b7fc:	mov    bl,BYTE PTR [edx+0x5ea46399]
  40b802:	ss ror ecx,cl
  40b805:	in     al,0x2f
  40b807:	test   al,0xc0
  40b809:	inc    cx
  40b80b:	push   ecx
  40b80c:	and    al,0x2f
  40b80e:	lahf   
  40b80f:	nop
  40b810:	mov    ebp,eax
  40b812:	(bad)  
  40b813:	addr16 mov bh,0x84
  40b816:	push   esi
  40b817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b818:	dec    esp
  40b819:	dec    edx
  40b81a:	inc    ecx
  40b81b:	test   eax,0x2549e83f
  40b820:	sub    esi,DWORD PTR es:0xb607cad5
  40b827:	fs dec edi
  40b829:	xchg   ebx,eax
  40b82a:	arpl   WORD PTR ds:0x658b385b,ax
  40b830:	rcr    BYTE PTR [edx+0x101d0636],0x54
  40b837:	daa    
  40b838:	mov    DWORD PTR [esi-0x13],esi
  40b83b:	aas    
  40b83c:	or     BYTE PTR [esp+edx*8-0x6b],bl
  40b840:	std    
  40b841:	cwde   
  40b842:	aad    0xaa
  40b844:	std    
  40b845:	enter  0xde70,0xa2
  40b849:	test   cl,bh
  40b84b:	cdq    
  40b84c:	push   ebx
  40b84d:	xlat   BYTE PTR ds:[ebx]
  40b84e:	mov    al,0x10
  40b850:	mov    bl,0x2c
  40b852:	loope  0x40b862
  40b854:	mov    ds:0x58276540,al
  40b859:	ret    0x24bf
  40b85c:	push   ebp
  40b85d:	sbb    al,0xca
  40b85f:	cmp    BYTE PTR [eax+ebx*4],0x67
  40b863:	adc    ch,BYTE PTR [ecx+0x3a]
  40b866:	mov    edx,0x700894ac
  40b86b:	sub    edi,DWORD PTR [esi]
  40b86d:	bound  ecx,QWORD PTR [eax]
  40b86f:	adc    cl,cl
  40b871:	int3   
  40b872:	mov    eax,0x839e40ca
  40b877:	xchg   esp,eax
  40b878:	cmp    bh,ch
  40b87a:	or     al,0xb
  40b87c:	and    ebp,edi
  40b87e:	and    esi,DWORD PTR [edx]
  40b880:	ds shl esp,0xd0
  40b884:	add    esp,edi
  40b886:	sub    al,0xfd
  40b888:	sbb    ah,dl
  40b88a:	call   0xcfc2dca2
  40b88f:	int3   
  40b890:	shl    BYTE PTR [ebx-0x6c],cl
  40b893:	pop    ebx
  40b894:	add    ebx,DWORD PTR [esi-0x13]
  40b897:	sbb    DWORD PTR [ebp+0x2],ebx
  40b89a:	sbb    bh,dh
  40b89c:	in     al,dx
  40b89d:	out    dx,al
  40b89e:	or     cl,BYTE PTR [esi]
  40b8a0:	icebp  
  40b8a1:	shl    DWORD PTR [esi+0xb2ecae6],1
  40b8a7:	fsub   QWORD PTR ds:0x13f6bbef
  40b8ad:	cld    
  40b8ae:	dec    esi
  40b8af:	lock fcom DWORD PTR gs:[ebx-0x74808bf7]
  40b8b7:	xor    BYTE PTR [edi+0x2d],dh
  40b8ba:	int3   
  40b8bb:	fsubr  QWORD PTR [edx-0xf]
  40b8be:	mov    ch,0xac
  40b8c0:	xchg   edi,eax
  40b8c1:	out    0x76,eax
  40b8c3:	xchg   BYTE PTR [edi],dl
  40b8c5:	ret    0xa4d6
  40b8c8:	fs jb  0x40b889
  40b8cb:	jb     0x40b85c
  40b8cd:	adc    DWORD PTR [edx+0x37a7cc88],esi
  40b8d3:	imul   eax,eax,0xffffffab
  40b8d6:	in     al,0x63
  40b8d8:	cwde   
  40b8d9:	and    ebp,esi
  40b8db:	test   al,0xb2
  40b8dd:	jl     0x40b93d
  40b8df:	adc    DWORD PTR [eax+0x24],0xffffffde
  40b8e3:	inc    ebx
  40b8e4:	and    DWORD PTR [ecx-0xd],esi
  40b8e7:	stc    
  40b8e8:	cmp    al,0x66
  40b8ea:	test   eax,0xd5da01bc
  40b8ef:	fnsave [ebx-0x1b]
  40b8f2:	dec    esp
  40b8f3:	sub    DWORD PTR [edx],0x34
  40b8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8f7:	icebp  
  40b8f8:	inc    ecx
  40b8f9:	es jo  0x40b923
  40b8fc:	es popf 
  40b8fe:	add    edx,ebx
  40b900:	nop
  40b901:	add    DWORD PTR [ebx-0x56cd103d],esp
  40b907:	inc    ebx
  40b908:	call   0x60e81839
  40b90d:	inc    esi
  40b90e:	pop    esp
  40b90f:	mov    edi,0x2ffdad3e
  40b914:	fiadd  DWORD PTR [esp+ebp*1]
  40b917:	mov    ebx,eax
  40b919:	fld    DWORD PTR [edi-0x16]
  40b91c:	jcxz   0x40b8c9
  40b91f:	or     BYTE PTR [edi-0x64],0xcd
  40b923:	int3   
  40b924:	out    dx,al
  40b925:	aam    0x86
  40b927:	dec    edi
  40b928:	cs das 
  40b92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b92b:	xchg   esp,eax
  40b92c:	mov    ecx,0x2bc55425
  40b931:	inc    esi
  40b932:	ror    DWORD PTR [esi+0x7df882ed],cl
  40b938:	mov    dh,0xf8
  40b93a:	shl    DWORD PTR [ecx+0x29],0x98
  40b93e:	outs   dx,DWORD PTR ds:[esi]
  40b93f:	sbb    DWORD PTR [ecx+edi*2],edi
  40b942:	and    BYTE PTR [edi+0x49],ch
  40b945:	daa    
  40b946:	lods   eax,DWORD PTR ds:[esi]
  40b947:	int3   
  40b948:	pop    eax
  40b949:	jo     0x40b8ea
  40b94b:	inc    eax
  40b94c:	add    bl,BYTE PTR [ecx+edi*2]
  40b94f:	cli    
  40b950:	cli    
  40b951:	dec    esp
  40b952:	fs inc esp
  40b954:	mov    al,0xec
  40b956:	add    ebp,DWORD PTR [ecx]
  40b958:	sub    edi,ebp
  40b95a:	cmp    al,0xed
  40b95c:	jp     0x40b9cf
  40b95e:	into   
  40b95f:	and    DWORD PTR [ebx],esi
  40b961:	out    0x6e,eax
  40b963:	dec    ebx
  40b964:	stc    
  40b965:	(bad)  
  40b966:	sub    ecx,ebx
  40b968:	mov    esp,0x75d16abf
  40b96d:	jp     0x40b9b5
  40b96f:	loopne 0x40b98e
  40b971:	pop    ss
  40b972:	xchg   ebx,eax
  40b973:	int    0xa3
  40b975:	push   ss
  40b976:	or     cl,ah
  40b978:	push   edx
  40b979:	mov    ecx,0x6fba6dff
  40b97e:	sub    BYTE PTR ds:0xf1f853c0,bl
  40b984:	push   ds
  40b985:	repz sbb ah,BYTE PTR [ecx]
  40b988:	aam    0x6b
  40b98a:	(bad)  
  40b98b:	call   0x6009:0xc3259b05
  40b992:	and    DWORD PTR [edx],ebp
  40b994:	lahf   
  40b995:	lahf   
  40b996:	xchg   BYTE PTR ss:[ebp-0x12],dl
  40b99a:	jno    0x40ba09
  40b99c:	inc    edi
  40b99d:	test   al,0xc3
  40b99f:	ds sbb al,0x2b
  40b9a2:	pop    ebp
  40b9a3:	mov    ecx,0x7f4407ad
  40b9a8:	loop   0x40b9c7
  40b9aa:	lods   eax,DWORD PTR ds:[esi]
  40b9ab:	clc    
  40b9ac:	adc    BYTE PTR [edi],dh
  40b9ae:	out    0x62,al
  40b9b0:	retf   0x8d57
  40b9b3:	or     BYTE PTR [esi+0x4c5ee444],bh
  40b9b9:	retf   
  40b9ba:	test   BYTE PTR [esi-0x2b1f4463],dl
  40b9c0:	js     0x40b94a
  40b9c2:	xor    eax,0x1b8d87f7
  40b9c7:	call   FWORD PTR [eax+eiz*1+0x16]
  40b9cb:	sbb    esi,DWORD PTR [esi]
  40b9cd:	fiadd  WORD PTR [eax]
  40b9cf:	lods   al,BYTE PTR ds:[esi]
  40b9d0:	and    eax,0x277280f6
  40b9d5:	pop    eax
  40b9d6:	ret    
  40b9d7:	cli    
  40b9d8:	mov    esi,0x9358ddf6
  40b9dd:	mov    esp,0xc2fb2c6b
  40b9e2:	push   ebp
  40b9e3:	inc    eax
  40b9e4:	sbb    al,0xc6
  40b9e6:	repnz push ebp
  40b9e8:	adc    DWORD PTR [ecx],0xcf291bdc
  40b9ee:	icebp  
  40b9ef:	mov    ch,0x3f
  40b9f1:	jno    0x40b9d8
  40b9f3:	and    ah,BYTE PTR [edx+0x49]
  40b9f6:	clc    
  40b9f7:	jne    0x40ba01
  40b9f9:	fldenv [edx]
  40b9fb:	inc    ebp
  40b9fc:	push   0xdc638a74
  40ba01:	inc    esp
  40ba02:	dec    ebp
  40ba03:	add    ebp,DWORD PTR [ebx-0x320e9f4d]
  40ba09:	shr    BYTE PTR [ebx],0x3f
  40ba0c:	out    dx,al
  40ba0d:	fsubp  st(2),st
  40ba0f:	ss jns 0x40b9c3
  40ba12:	push   esi
  40ba13:	lods   al,BYTE PTR ds:[esi]
  40ba14:	repnz and DWORD PTR [esi+0x40e0ca88],eax
  40ba1b:	repz loopne 0x40ba26
  40ba1e:	cli    
  40ba1f:	inc    edx
  40ba20:	(bad)  
  40ba21:	loop   0x40b9a7
  40ba23:	push   esi
  40ba24:	dec    esi
  40ba25:	pushf  
  40ba26:	cmp    dl,al
  40ba28:	pusha  
  40ba29:	ins    BYTE PTR es:[edi],dx
  40ba2a:	pop    edx
  40ba2b:	jecxz  0x40b9e3
  40ba2d:	jno    0x40b9d1
  40ba2f:	out    0x78,eax
  40ba31:	push   ebp
  40ba32:	mov    bh,0x48
  40ba34:	mov    cl,0x8e
  40ba36:	in     al,0x2e
  40ba38:	mov    eax,0x2fa220f2
  40ba3d:	pop    ebx
  40ba3e:	and    dh,BYTE PTR [edi-0x75]
  40ba41:	push   0x16
  40ba43:	jl     0x40ba0d
  40ba45:	in     al,0xa
  40ba47:	add    eax,0xa1fb2587
  40ba4c:	pop    edi
  40ba4d:	leave  
  40ba4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba4f:	push   cs
  40ba50:	or     ecx,edi
  40ba52:	jmp    0x40ba95
  40ba54:	xor    DWORD PTR [ebp-0x56],ecx
  40ba57:	jp     0x40bab6
  40ba59:	pop    ss
  40ba5a:	xchg   edx,eax
  40ba5b:	mov    cl,0xa5
  40ba5d:	out    0xad,eax
  40ba5f:	adc    eax,0x4497c673
  40ba64:	pmulhuw mm3,QWORD PTR [edi-0x20]
  40ba68:	or     edi,edx
  40ba6a:	sub    edi,DWORD PTR [ecx+0x72]
  40ba6d:	outs   dx,BYTE PTR ds:[esi]
  40ba6e:	sbb    dh,al
  40ba70:	test   eax,0x8bf7cc99
  40ba75:	lods   al,BYTE PTR ds:[esi]
  40ba76:	inc    edi
  40ba77:	push   ecx
  40ba78:	or     bh,BYTE PTR [eax+esi*8-0x1ca4dd56]
  40ba7f:	sbb    al,0x4
  40ba81:	or     eax,edx
  40ba83:	sbb    dl,BYTE PTR [edx+0x5f]
  40ba86:	jnp    0x40ba29
  40ba88:	mov    WORD PTR [ebx-0x5a],es
  40ba8b:	mov    ch,0xb5
  40ba8d:	call   FWORD PTR [ebp+0x1]
  40ba90:	jmp    0xee0c:0x3fc6adc0
  40ba97:	pop    esi
  40ba98:	push   esi
  40ba99:	in     al,dx
  40ba9a:	push   es
  40ba9b:	std    
  40ba9c:	push   ebx
  40ba9d:	add    BYTE PTR [ebp-0x6d02aedd],0x28
  40baa4:	add    eax,0x112d68ac
  40baa9:	mov    WORD PTR [edi+eiz*1],ss
  40baac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baad:	cmp    ebx,DWORD PTR [edi+0x29bbe17b]
  40bab3:	fnsave [esi+0x3940b8b7]
  40bab9:	imul   edi,esp,0xfadfcc3f
  40babf:	jmp    0x18c0:0x9c6b892
  40bac6:	jne    0x40baca
  40bac8:	and    al,0x82
  40baca:	popf   
  40bacb:	sub    eax,0xf85243b9
  40bad0:	or     al,0x92
  40bad2:	mov    al,ds:0xee519011
  40bad7:	cmp    eax,DWORD PTR [ecx]
  40bad9:	mov    gs,WORD PTR [ebp+ecx*4-0x2e]
  40badd:	les    ebx,FWORD PTR [ecx-0x79]
  40bae0:	out    dx,eax
  40bae1:	pushf  
  40bae2:	sar    BYTE PTR ds:0xab781c9b,0x75
  40bae9:	jl     0x40babf
  40baeb:	cs stos BYTE PTR es:[edi],al
  40baed:	sub    DWORD PTR [ecx+esi*4-0x7c],esi
  40baf1:	test   DWORD PTR [edi],0x5cbc9f3c
  40baf7:	add    al,0x42
  40baf9:	leave  
  40bafa:	xchg   esp,eax
  40bafb:	icebp  
  40bafc:	in     al,0x23
  40bafe:	xor    dl,dh
  40bb00:	es push ds
  40bb02:	xchg   ebx,eax
  40bb03:	push   ds
  40bb04:	dec    edx
  40bb05:	xlat   BYTE PTR ds:[ebx]
  40bb06:	gs xchg ebx,eax
  40bb08:	fadd   st,st(3)
  40bb0a:	pop    ebx
  40bb0b:	push   esp
  40bb0c:	jnp    0x40bb16
  40bb0e:	mov    edx,0x7b4853bf
  40bb13:	ror    al,1
  40bb15:	lea    edx,[edi+0x3a]
  40bb18:	adc    al,0xf8
  40bb1a:	adc    DWORD PTR [esi-0x558138d],0x6a
  40bb21:	jl     0x40baf9
  40bb23:	push   edx
  40bb24:	in     eax,0x5e
  40bb26:	xor    DWORD PTR [ebx],0xffffffb3
  40bb29:	mov    cl,0x71
  40bb2b:	ja     0x40bb61
  40bb2d:	cmp    edx,edi
  40bb2f:	sub    BYTE PTR [edi],bl
  40bb31:	pop    ss
  40bb32:	sub    eax,0x68de8ebb
  40bb37:	cmp    ecx,DWORD PTR [ebx+0x351d9d80]
  40bb3d:	dec    edi
  40bb3e:	mov    edx,0x9991adba
  40bb43:	stos   DWORD PTR es:[edi],eax
  40bb44:	inc    ebp
  40bb45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb46:	push   0x25
  40bb48:	jno    0x40bb2e
  40bb4a:	(bad)  
  40bb4b:	(bad)  
  40bb4c:	jmp    FWORD PTR ds:0x30f247ee
  40bb52:	retf   
  40bb53:	sbb    DWORD PTR [ecx],edi
  40bb55:	ret    
  40bb56:	cmp    ebp,DWORD PTR [eax+eiz*4-0x5]
  40bb5a:	cld    
  40bb5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb5c:	and    DWORD PTR [edi+0x63],eax
  40bb5f:	jecxz  0x40baea
  40bb61:	fcom   DWORD PTR [ebx-0x3b]
  40bb64:	outs   dx,DWORD PTR ds:[esi]
  40bb65:	popa   
  40bb66:	cli    
  40bb67:	jnp    0x40bb5f
  40bb69:	cmp    edx,DWORD PTR [ecx-0x11bbee0b]
  40bb6f:	outs   dx,BYTE PTR ds:[esi]
  40bb70:	shl    DWORD PTR [ebx+eax*2],1
  40bb73:	aaa    
  40bb74:	inc    esi
  40bb75:	pop    ss
  40bb76:	js     0x40bb0f
  40bb78:	out    0x45,al
  40bb7a:	inc    edx
  40bb7b:	inc    ecx
  40bb7c:	push   es
  40bb7d:	hlt    
  40bb7e:	mov    ecx,0x37ba1ac3
  40bb83:	inc    ecx
  40bb84:	sar    dh,0xb9
  40bb87:	ins    DWORD PTR es:[edi],dx
  40bb88:	add    eax,0x8b0e652e
  40bb8d:	dec    eax
  40bb8e:	rcl    BYTE PTR [esi+0x342db9d2],cl
  40bb94:	rcl    ch,0x39
  40bb97:	(bad)  
  40bb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb99:	cdq    
  40bb9a:	outs   dx,BYTE PTR ds:[esi]
  40bb9b:	ins    BYTE PTR es:[edi],dx
  40bb9c:	(bad)  [esi+eiz*8-0x6a]
  40bba0:	test   al,0xde
  40bba2:	ret    0xdca0
  40bba5:	add    esp,DWORD PTR [eax]
  40bba7:	(bad)
  40bbaa:	mov    ch,0xaf
  40bbac:	pop    ecx
  40bbad:	inc    edx
  40bbae:	fwait
  40bbaf:	outs   dx,BYTE PTR ds:[esi]
  40bbb0:	sub    bh,BYTE PTR [esi+ebp*4]
  40bbb3:	dec    ecx
  40bbb4:	(bad)  
  40bbb6:	or     ebp,esp
  40bbb8:	jo     0x40bb7f
  40bbba:	and    al,0xc9
  40bbbc:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbbe:	int3   
  40bbbf:	fild   DWORD PTR [ebp+0x2d9c3a94]
  40bbc5:	in     eax,dx
  40bbc6:	push   cs
  40bbc7:	cwde   
  40bbc8:	mov    ecx,0x44068e5b
  40bbcd:	rcl    ebx,cl
  40bbcf:	outs   dx,BYTE PTR ds:[esi]
  40bbd0:	stos   BYTE PTR es:[edi],al
  40bbd1:	dec    eax
  40bbd2:	lods   al,BYTE PTR ds:[si]
  40bbd4:	clc    
  40bbd5:	ror    bl,0x15
  40bbd8:	and    dh,BYTE PTR gs:[ecx-0x36b42b30]
  40bbdf:	js     0x40bb80
  40bbe1:	test   DWORD PTR [eax-0x44],0x298a2548
  40bbe8:	dec    edi
  40bbe9:	xor    al,0xc
  40bbeb:	cmp    al,0x9f
  40bbed:	sub    al,0x33
  40bbef:	test   bl,bh
  40bbf1:	je     0x40bb77
  40bbf3:	mov    eax,ds:0x6b3c48ad
  40bbf8:	and    eax,ebp
  40bbfa:	sbb    BYTE PTR [ebp-0x7],ah
  40bbfd:	imul   eax,DWORD PTR [edx-0x3b1afebf],0x39
  40bc04:	sub    edx,esi
  40bc06:	cmp    al,0x43
  40bc08:	mov    ebx,0xc546dd38
  40bc0d:	loope  0x40bc5d
  40bc0f:	mov    ecx,0xf5b0bc57
  40bc14:	dec    esp
  40bc15:	jne    0x40bc6a
  40bc17:	cmp    eax,esp
  40bc19:	pop    ebp
  40bc1a:	out    dx,al
  40bc1b:	test   eax,0xedfe7a59
  40bc20:	mov    bh,0x9e
  40bc22:	pop    edi
  40bc23:	push   edx
  40bc24:	popf   
  40bc25:	shl    BYTE PTR [edx+0x3a9fd7f8],0x71
  40bc2c:	jns    0x40bc85
  40bc2e:	jle    0x40bbc4
  40bc30:	(bad)  
  40bc31:	mov    edx,0xc3982b6c
  40bc36:	repnz shl esp,1
  40bc39:	(bad)  [esi+0x5814f9c3]
  40bc3f:	pushf  
  40bc40:	(bad)  
  40bc41:	lahf   
  40bc42:	and    al,0x39
  40bc44:	and    eax,0xcc712fba
  40bc49:	xchg   edx,eax
  40bc4a:	cmp    ebp,DWORD PTR [eax+eiz*2+0xa]
  40bc4e:	stc    
  40bc4f:	pop    esi
  40bc50:	mul    DWORD PTR [ecx-0x25]
  40bc53:	test   al,0x7c
  40bc55:	adc    eax,0xe9c40919
  40bc5a:	outs   dx,BYTE PTR ds:[esi]
  40bc5b:	adc    DWORD PTR [ecx+0x6],ebx
  40bc5e:	aaa    
  40bc5f:	sbb    al,0xc
  40bc61:	mov    eax,0x1eed0ca1
  40bc66:	sbb    edi,DWORD PTR [eax+edx*2]
  40bc69:	inc    eax
  40bc6a:	push   0xffffffed
  40bc6c:	pusha  
  40bc6d:	pop    ds
  40bc6e:	push   ebp
  40bc6f:	imul   ecx,ebx,0x5f5fcc8d
  40bc75:	lahf   
  40bc76:	push   cs
  40bc77:	dec    edi
  40bc78:	mov    ch,0xf
  40bc7a:	adc    dh,bh
  40bc7c:	aaa    
  40bc7d:	(bad)  
  40bc7e:	sbb    DWORD PTR ds:0x5a84c7d6,eax
  40bc84:	out    dx,eax
  40bc85:	enter  0x5ee7,0xb4
  40bc89:	or     bl,BYTE PTR [esi]
  40bc8b:	lea    ecx,[esi+0x11]
  40bc8e:	(bad)
  40bc92:	sub    eax,DWORD PTR [ebx+eax*2]
  40bc95:	jmp    0xf4b7:0x8c4b53d3
  40bc9c:	sahf   
  40bc9d:	sti    
  40bc9e:	test   DWORD PTR [esi+eiz*2],ebp
  40bca1:	dec    eax
  40bca2:	fcom   DWORD PTR [eax-0x5b05c575]
  40bca8:	pop    edx
  40bca9:	xchg   edx,eax
  40bcaa:	pop    edi
  40bcab:	pusha  
  40bcac:	test   al,0xf4
  40bcae:	test   BYTE PTR [edi],ah
  40bcb0:	enter  0x8753,0xdf
  40bcb4:	mov    edi,0xd0f34089
  40bcb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcba:	cmp    al,0x9b
  40bcbc:	shl    BYTE PTR [edx+0x49f9132b],0xd5
  40bcc3:	mov    ds:0x740a72fb,al
  40bcc8:	js     0x40bcf6
  40bcca:	hlt    
  40bccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bccc:	mov    ch,0x2
  40bcce:	out    dx,al
  40bccf:	shl    BYTE PTR [edi],0x58
  40bcd2:	rcl    BYTE PTR [eax-0x4a],cl
  40bcd5:	jp     0x40bca1
  40bcd7:	in     al,0x17
  40bcd9:	pop    DWORD PTR [edx+0xe]
  40bcdc:	push   0xffffffcc
  40bcde:	imul   esp,DWORD PTR [eax+0x656aa79],0x3f689ca2
  40bce8:	xchg   ebx,eax
  40bce9:	ins    BYTE PTR es:[edi],dx
  40bcea:	mov    eax,ds:0xbd2da27c
  40bcef:	icebp  
  40bcf0:	xlat   BYTE PTR ds:[ebx]
  40bcf1:	push   0xb9d4248d
  40bcf6:	xchg   edi,eax
  40bcf7:	fstp   QWORD PTR [edx]
  40bcf9:	dec    edx
  40bcfa:	fwait
  40bcfb:	sbb    cl,BYTE PTR [ebx]
  40bcfd:	fstp   QWORD PTR [esi-0x80]
  40bd00:	(bad)  
  40bd01:	(bad)  
  40bd03:	pop    esp
  40bd04:	adc    esp,ecx
  40bd06:	xor    al,0x88
  40bd08:	or     dl,BYTE PTR [ecx+0x34]
  40bd0b:	mov    edx,0xd7e8e828
  40bd10:	jp     0x40bcff
  40bd12:	sub    ebx,DWORD PTR ds:0xeb6e7d21
  40bd19:	in     eax,0x92
  40bd1b:	sub    eax,0x1905ad3b
  40bd20:	mov    dh,0xdf
  40bd22:	loope  0x40bd9d
  40bd24:	pop    ss
  40bd25:	hlt    
  40bd26:	mov    al,ds:0xf0597d73
  40bd2b:	fdiv   st,st(4)
  40bd2d:	ror    DWORD PTR [edx],cl
  40bd2f:	jo     0x40bd0e
  40bd31:	adc    BYTE PTR ds:0x695a1b5c,bh
  40bd37:	icebp  
  40bd38:	pop    esp
  40bd39:	popf   
  40bd3a:	jl     0x40bd05
  40bd3c:	dec    ebx
  40bd3d:	sub    DWORD PTR [edi+0x74],ebp
  40bd40:	hlt    
  40bd41:	sbb    al,0x26
  40bd43:	dec    edi
  40bd44:	ds mov ch,0xa9
  40bd47:	sbb    DWORD PTR [edi-0x3872732a],ecx
  40bd4d:	mov    ecx,0x4ee35881
  40bd52:	or     dl,BYTE PTR [ebp-0x42]
  40bd55:	and    ebp,edx
  40bd57:	stos   DWORD PTR es:[edi],eax
  40bd58:	cmp    DWORD PTR [edx+0x44],esp
  40bd5b:	ret    0x1b9e
  40bd5e:	inc    edx
  40bd5f:	sbb    eax,0x34fc826a
  40bd64:	cli    
  40bd65:	inc    eax
  40bd66:	arpl   WORD PTR [esi-0x6c],bx
  40bd69:	push   ds
  40bd6a:	mul    DWORD PTR [edi-0x65]
  40bd6d:	stos   DWORD PTR es:[edi],eax
  40bd6e:	xor    BYTE PTR [edx+0x5],ah
  40bd71:	xchg   esp,eax
  40bd72:	ds mov ch,0x6a
  40bd75:	sbb    edi,esi
  40bd77:	jecxz  0x40bd45
  40bd79:	xchg   DWORD PTR [esi],ebp
  40bd7b:	mov    eax,ds:0x7e332248
  40bd80:	jns    0x40bd3b
  40bd82:	fdiv   st(0),st
  40bd84:	adc    ecx,ecx
  40bd86:	and    al,0x72
  40bd88:	jle    0x40bd12
  40bd8a:	xchg   edx,eax
  40bd8b:	inc    ecx
  40bd8c:	fadd   DWORD PTR [eax]
  40bd8e:	fbld   TBYTE PTR [ebx-0x4a]
  40bd91:	stos   BYTE PTR es:[edi],al
  40bd92:	sti    
  40bd93:	and    esi,ebx
  40bd95:	inc    ecx
  40bd96:	aam    0xe5
  40bd98:	add    al,0xa4
  40bd9a:	out    dx,al
  40bd9b:	mov    ebx,0x21c200bd
  40bda0:	rol    edx,0xac
  40bda3:	nop
  40bda4:	push   eax
  40bda5:	push   0x5b
  40bda7:	xor    esi,DWORD PTR [ecx-0x50]
  40bdaa:	cs xor ch,ch
  40bdad:	repnz mov bl,0x8a
  40bdb0:	retf   
  40bdb1:	and    DWORD PTR [ecx+eax*2+0x54edf721],0xfffffff5
  40bdb9:	jbe    0x40bd5e
  40bdbb:	std    
  40bdbc:	in     eax,0xaa
  40bdbe:	dec    eax
  40bdbf:	adc    al,0xc4
  40bdc1:	mov    BYTE PTR [edx+0x55],al
  40bdc4:	mov    ah,0xb
  40bdc6:	call   0x6ac786ae
  40bdcb:	pop    esp
  40bdcc:	ret    0x443
  40bdcf:	enter  0x123e,0x79
  40bdd3:	outs   dx,DWORD PTR ds:[esi]
  40bdd4:	and    edi,DWORD PTR ds:0x39d0e559
  40bdda:	out    0x54,al
  40bddc:	jno    0x40be54
  40bdde:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40bde0:	outs   dx,DWORD PTR ds:[esi]
  40bde1:	dec    edx
  40bde2:	add    bl,BYTE PTR [ebp+ebx*2+0x74e2e22f]
  40bde9:	popa   
  40bdea:	jmp    0x135d4780
  40bdef:	fistp  WORD PTR ds:0x41bb7378
  40bdf5:	push   ds
  40bdf6:	xchg   edx,eax
  40bdf7:	pop    ss
  40bdf8:	sub    BYTE PTR ds:0x1bd34e41,0x78
  40bdff:	pop    ecx
  40be00:	je     0x40be23
  40be02:	out    0xfc,eax
  40be04:	scas   eax,DWORD PTR es:[edi]
  40be05:	mov    al,ds:0x865446bc
  40be0a:	mov    esp,0x207873c0
  40be0f:	int    0xf8
  40be11:	cmp    ah,dh
  40be13:	std    
  40be14:	(bad)  
  40be16:	adc    dh,BYTE PTR [ebp+0x2d887764]
  40be1c:	inc    esi
  40be1d:	loopne 0x40be40
  40be1f:	dec    ecx
  40be20:	mov    ds:0x1e7ce079,al
  40be25:	jle    0x40be42
  40be27:	mov    ecx,0x8de7ff19
  40be2c:	inc    ecx
  40be2d:	js     0x40be4b
  40be2f:	mul    DWORD PTR [ecx-0x5e]
  40be32:	repz jmp 0x36e5:0xe89acb98
  40be3a:	fiadd  DWORD PTR [ebx-0x44fa167c]
  40be40:	test   BYTE PTR [eax],0x5f
  40be43:	lods   al,BYTE PTR ds:[esi]
  40be44:	or     esi,edi
  40be46:	xor    esp,DWORD PTR [ecx+0x58]
  40be49:	das    
  40be4a:	mov    edi,0x39c49ac0
  40be4f:	push   ebx
  40be50:	mov    edi,DWORD PTR [edx+0x53]
  40be53:	and    esi,DWORD PTR [ecx+0x2a]
  40be56:	aad    0xc4
  40be58:	std    
  40be59:	lock scas al,BYTE PTR es:[edi]
  40be5b:	xchg   ebx,eax
  40be5c:	sbb    dh,ch
  40be5e:	dec    ebp
  40be5f:	repz retf 0x4f61
  40be63:	mov    edx,gs
  40be65:	add    eax,0x9b577d52
  40be6a:	std    
  40be6b:	cmc    
  40be6c:	pusha  
  40be6d:	pcmpeqd mm4,QWORD PTR [esi+0x34]
  40be71:	pop    edx
  40be72:	pop    ebp
  40be73:	call   0xefe2:0xfdb72d2e
  40be7a:	out    dx,eax
  40be7b:	mov    al,0xb8
  40be7d:	mov    esp,0x11973867
  40be82:	and    bh,dh
  40be84:	std    
  40be85:	cmp    BYTE PTR [ebx-0x7b8be682],0xed
  40be8c:	jbe    0x40be94
  40be8e:	arpl   WORD PTR [ebx+edx*2+0x47],bx
  40be92:	jns    0x40be95
  40be94:	pop    esi
  40be95:	push   ebp
  40be96:	clc    
  40be97:	iret   
  40be98:	lahf   
  40be99:	jnp    0x40bf0a
  40be9b:	push   eax
  40be9c:	mov    bl,0x68
  40be9e:	je     0x40bf00
  40bea0:	pushf  
  40bea1:	xchg   ebp,eax
  40bea2:	ja     0x40be5e
  40bea4:	cli    
  40bea5:	push   ds
  40bea6:	xchg   edx,eax
  40bea7:	mov    DWORD PTR [ebp-0x6347dd5d],eax
  40bead:	pop    edi
  40beae:	and    BYTE PTR [esi+ebp*2],cl
  40beb1:	sub    al,0x24
  40beb3:	dec    edi
  40beb4:	clc    
  40beb5:	xchg   BYTE PTR [ecx+0x10],cl
  40beb8:	mov    BYTE PTR [ebx+0x1e],al
  40bebb:	test   DWORD PTR [edi-0x1d],esi
  40bebe:	daa    
  40bebf:	or     DWORD PTR [eax],ebx
  40bec1:	push   eax
  40bec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bec3:	mov    bl,BYTE PTR [ebx]
  40bec5:	shl    bh,0x12
  40bec8:	pop    es
  40bec9:	jbe    0x40be8f
  40becb:	rol    DWORD PTR [eax],1
  40becd:	outs   dx,DWORD PTR ds:[esi]
  40bece:	lods   al,BYTE PTR ds:[esi]
  40becf:	dec    ecx
  40bed0:	shl    DWORD PTR [ecx+0x57],cl
  40bed3:	adc    esp,ebp
  40bed5:	mov    edi,DWORD PTR [eax-0x70]
  40bed8:	cmp    edx,edx
  40beda:	nop
  40bedb:	scas   eax,DWORD PTR es:[edi]
  40bedc:	mov    ebp,eax
  40bede:	imul   ebx,esi,0xaef22178
  40bee4:	cli    
  40bee5:	(bad)  
  40bee7:	fsubr  st(7),st
  40bee9:	or     DWORD PTR [edi],eax
  40beeb:	sub    eax,DWORD PTR [edi+0x67]
  40beee:	out    dx,al
  40beef:	cwde   
  40bef0:	add    DWORD PTR [esi-0x430eda9b],ecx
  40bef6:	jle    0x40be90
  40bef8:	cmp    BYTE PTR [ebx+0x3c],0xd6
  40befc:	(bad)  
  40befd:	mov    ?,WORD PTR [ebx]
  40beff:	pushf  
  40bf00:	out    dx,al
  40bf01:	rcr    dh,0xc5
  40bf04:	and    esi,eax
  40bf06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf07:	xlat   BYTE PTR ds:[ebx]
  40bf08:	mov    ah,0x54
  40bf0a:	push   0xffffffbc
  40bf0c:	or     DWORD PTR [edx],ecx
  40bf0e:	cmp    BYTE PTR [edi+0x40216d4f],cl
  40bf14:	loope  0x40befa
  40bf16:	pop    esi
  40bf17:	mov    dl,0x78
  40bf19:	les    ebx,FWORD PTR [esi]
  40bf1b:	push   eax
  40bf1c:	leave  
  40bf1d:	retf   
  40bf1e:	inc    ecx
  40bf1f:	inc    esi
  40bf20:	pop    edi
  40bf21:	jle    0x40bf59
  40bf23:	dec    ebp
  40bf24:	push   esi
  40bf25:	pop    ds
  40bf26:	dec    esp
  40bf27:	ror    edi,0x78
  40bf2a:	inc    edx
  40bf2b:	(bad)  
  40bf2c:	imul   esi,DWORD PTR [ebp-0x25ff0c30],0xae5533f8
  40bf36:	jns    0x40bf86
  40bf38:	jle    0x40becd
  40bf3a:	daa    
  40bf3b:	jb     0x40bef5
  40bf3d:	sbb    dh,bh
  40bf3f:	adc    al,0x8
  40bf41:	pop    edi
  40bf42:	add    BYTE PTR [ebp+eiz*4+0x6e],ch
  40bf46:	int    0x72
  40bf48:	(bad)  
  40bf49:	rcr    BYTE PTR [ebp+0x6d2b918b],0xfc
  40bf50:	sub    DWORD PTR [ebx-0x35],eax
  40bf53:	mov    ecx,0x82bb47f
  40bf58:	fidiv  DWORD PTR [edi+0x46]
  40bf5b:	or     ebx,esp
  40bf5d:	push   ss
  40bf5e:	jge    0x40bef3
  40bf60:	sbb    eax,0x9b6ea3e9
  40bf65:	daa    
  40bf66:	adc    esi,esp
  40bf68:	jns    0x40bf14
  40bf6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf6b:	mov    edx,0x20bcb1f
  40bf70:	mov    bl,0x53
  40bf72:	sub    al,0xe6
  40bf74:	push   edi
  40bf75:	add    eax,0xf5347b14
  40bf7a:	jns    0x40bfe6
  40bf7c:	out    0xba,eax
  40bf7e:	out    dx,eax
  40bf7f:	mov    ds:0x1c90b16d,al
  40bf84:	mov    bl,0xd1
  40bf86:	ds jge 0x40bf91
  40bf89:	pushf  
  40bf8a:	pop    eax
  40bf8b:	xor    ah,dl
  40bf8d:	push   esi
  40bf8e:	fld    DWORD PTR [edx]
  40bf90:	or     BYTE PTR [ecx+ebp*2-0xe],bh
  40bf94:	mov    al,ds:0x3d644e96
  40bf99:	mov    ebx,ebp
  40bf9b:	lods   al,BYTE PTR ds:[esi]
  40bf9c:	rol    DWORD PTR [esi+0x7d],cl
  40bf9f:	mov    esi,0x583f7c25
  40bfa4:	jmp    0xd846bc76
  40bfa9:	sub    cl,BYTE PTR [eax]
  40bfab:	repz ret 
  40bfad:	mov    bh,0xde
  40bfaf:	mov    ds:0x3a97357f,al
  40bfb4:	ror    BYTE PTR [eax-0x76],1
  40bfb7:	or     al,0x76
  40bfb9:	inc    ecx
  40bfba:	jmp    DWORD PTR [eax+0x6d74062]
  40bfc0:	mov    ebx,DWORD PTR [ebx+0x75]
  40bfc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfc4:	jecxz  0x40bf86
  40bfc6:	sub    dl,BYTE PTR [ebp+0x7c23791d]
  40bfcc:	xchg   ebx,eax
  40bfcd:	ins    DWORD PTR es:[edi],dx
  40bfce:	add    al,al
  40bfd0:	or     eax,0x2f116b3b
  40bfd5:	mov    ds,edi
  40bfd7:	push   es
  40bfd8:	add    edx,DWORD PTR [edi+eiz*4-0x4c]
  40bfdc:	or     DWORD PTR [edi+0x1b376a65],edx
  40bfe2:	xchg   ecx,eax
  40bfe3:	dec    esi
  40bfe4:	mov    DWORD PTR [ebx-0x2b],ebp
  40bfe7:	std    
  40bfe8:	mov    eax,DWORD PTR [esi+0x49383ac7]
  40bfee:	mov    esp,0x7f2cf766
  40bff3:	mov    bh,0x14
  40bff5:	lods   al,BYTE PTR ds:[esi]
  40bff6:	fcmovne st,st(5)
  40bff8:	rcr    DWORD PTR [edx],cl
  40bffa:	or     BYTE PTR [ebx-0x369d87bf],0xa8
  40c001:	jge    0x40bf98
  40c003:	out    dx,al
  40c004:	jmp    0xf01:0x51cd612e
  40c00b:	cli    
  40c00c:	test   al,0xc5
  40c00e:	gs test eax,0xa9017bfd
  40c014:	or     DWORD PTR ds:0xd34b8053,edx
  40c01a:	mov    ?,ecx
  40c01c:	dec    esi
  40c01d:	popf   
  40c01e:	add    BYTE PTR [edi],dh
  40c020:	jo     0x40c05f
  40c022:	adc    BYTE PTR [eax-0x6521585f],bl
  40c028:	mov    ecx,0xc486b1df
  40c02d:	stc    
  40c02e:	adc    al,0xed
  40c030:	repnz stc 
  40c032:	loopne 0x40c013
  40c034:	mov    cl,0x4b
  40c036:	sub    eax,0x2e0bb5a5
  40c03b:	ss test ah,ch
  40c03e:	xchg   DWORD PTR [ebx],edi
  40c040:	xor    ah,BYTE PTR [ebx]
  40c042:	or     ch,ah
  40c044:	popa   
  40c045:	inc    esi
  40c047:	ss push ebp
  40c049:	mov    ?,WORD PTR [edx+ebx*1]
  40c04c:	popa   
  40c04d:	cdq    
  40c04e:	add    edi,DWORD PTR [eax-0x39]
  40c051:	and    DWORD PTR [eax+0x2c],edx
  40c054:	ja     0x40c0c4
  40c056:	mov    bl,dl
  40c058:	adc    ecx,DWORD PTR [ecx+0x1b]
  40c05b:	ins    DWORD PTR es:[edi],dx
  40c05c:	mov    bl,0xee
  40c05e:	mov    edi,0x5a371eb5
  40c063:	xor    ch,BYTE PTR ds:[eax-0x1f]
  40c067:	pop    edx
  40c068:	clc    
  40c069:	ss adc edi,ebx
  40c06c:	cmp    al,0x53
  40c06e:	cmp    DWORD PTR [esi],edx
  40c070:	(bad)  
  40c071:	fdivrp st(2),st
  40c073:	jne    0x40c0aa
  40c075:	push   esi
  40c076:	in     eax,0xaa
  40c078:	repnz or esp,DWORD PTR [edi-0x73888a27]
  40c07f:	mov    ebp,0xf7c2c765
  40c084:	push   esi
  40c085:	out    dx,eax
  40c086:	sbb    edi,DWORD PTR [esi+eiz*1+0x44]
  40c08a:	fcmovnb st,st(2)
  40c08c:	add    BYTE PTR ds:0x144bdf78,cl
  40c092:	pop    es
  40c093:	repz call 0x5dcf:0xd4c03b1e
  40c09b:	out    dx,eax
  40c09c:	and    eax,0x5e4d2193
  40c0a1:	(bad)  
  40c0a2:	xor    eax,0xaf61ffae
  40c0a7:	dec    esi
  40c0a8:	xor    cl,cl
  40c0aa:	or     BYTE PTR [esi],cl
  40c0ac:	outs   dx,DWORD PTR ds:[esi]
  40c0ad:	imul   ecx,DWORD PTR ds:0xcc82e600,0xec3b3d67
  40c0b7:	xchg   DWORD PTR [edi],esp
  40c0b9:	or     dl,BYTE PTR [eax+eiz*8-0x20a320da]
  40c0c0:	outs   dx,BYTE PTR ds:[esi]
  40c0c1:	push   edi
  40c0c2:	xchg   edx,ebx
  40c0c4:	test   al,0x63
  40c0c6:	or     DWORD PTR [ecx+0x76],ebp
  40c0c9:	sub    BYTE PTR [edx],cl
  40c0cb:	in     al,0x9b
  40c0cd:	popf   
  40c0ce:	add    ebx,ebp
  40c0d0:	push   ds
  40c0d1:	and    edi,DWORD PTR [esi+ecx*1+0x27]
  40c0d5:	adc    esi,DWORD PTR [ebx]
  40c0d7:	cli    
  40c0d8:	mov    edi,0xc7f9c5bc
  40c0dd:	das    
  40c0de:	retf   0xcb7
  40c0e1:	push   0xffffffc0
  40c0e3:	xor    al,0xbf
  40c0e5:	std    
  40c0e6:	ja     0x40c144
  40c0e8:	aaa    
  40c0e9:	add    eax,0xcce693c9
  40c0ee:	call   FWORD PTR [edi]
  40c0f0:	scas   al,BYTE PTR es:[edi]
  40c0f1:	sub    esi,DWORD PTR [edi]
  40c0f3:	and    eax,0x85006732
  40c0f8:	xor    eax,0x6c3ca39a
  40c0fd:	add    eax,0xd912aa2d
  40c102:	mov    al,ah
  40c104:	mov    esp,0x85525637
  40c109:	fstp   QWORD PTR [ebx+0x22c809da]
  40c10f:	inc    ebp
  40c110:	retf   
  40c111:	retf   0x82e0
  40c114:	inc    BYTE PTR [ebx-0x49]
  40c117:	div    DWORD PTR [edx]
  40c119:	add    DWORD PTR [esi-0x684571b2],0x2169be6c
  40c123:	out    0xed,eax
  40c125:	sub    eax,0x73b0ee6a
  40c12a:	and    DWORD PTR [eax],edx
  40c12c:	xchg   edi,eax
  40c12d:	cmp    bh,BYTE PTR [esi]
  40c12f:	ins    DWORD PTR es:[edi],dx
  40c130:	add    DWORD PTR [ecx+0x9],0xb15f4210
  40c137:	test   ecx,esi
  40c139:	mov    edi,0x91934057
  40c13e:	dec    edi
  40c13f:	mov    edi,0xb3fbe27e
  40c144:	(bad)
  40c149:	mov    ebp,0x12fc53f6
  40c14e:	mov    WORD PTR [esi],ss
  40c150:	shr    DWORD PTR [edx],1
  40c152:	mov    eax,0x8b48f16c
  40c157:	jecxz  0x40c15b
  40c159:	fist   WORD PTR [ebx]
  40c15b:	jae    0x40c13e
  40c15d:	xchg   DWORD PTR [ebx-0x4641acff],ecx
  40c163:	outs   dx,BYTE PTR ds:[esi]
  40c164:	push   edi
  40c165:	call   0x45db46eb
  40c16a:	das    
  40c16b:	mov    al,ds:0x88c7ea44
  40c170:	stos   BYTE PTR es:[edi],al
  40c171:	push   ecx
  40c172:	out    dx,eax
  40c173:	mov    esp,0x531c0371
  40c178:	scas   al,BYTE PTR es:[edi]
  40c179:	and    eax,0xa4d06bfa
  40c17e:	mov    ch,0xbf
  40c180:	cwde   
  40c181:	jge    0x40c145
  40c183:	cmp    eax,0x93e3b58f
  40c188:	daa    
  40c189:	push   eax
  40c18a:	sbb    DWORD PTR [esi+0x5ff9add4],esp
  40c190:	dec    ebp
  40c191:	and    DWORD PTR [eax-0x2e],eax
  40c194:	mov    edx,0x8ea16c4e
  40c199:	push   ebp
  40c19a:	sub    al,0xb9
  40c19c:	jne    0x40c128
  40c19e:	sar    bl,cl
  40c1a0:	inc    edx
  40c1a1:	push   ecx
  40c1a2:	pop    esi
  40c1a3:	inc    dl
  40c1a5:	mov    ds,WORD PTR [ebx-0x49]
  40c1a8:	in     eax,dx
  40c1a9:	ins    BYTE PTR es:[edi],dx
  40c1aa:	adc    al,0x64
  40c1ac:	xchg   edx,eax
  40c1ad:	nop
  40c1ae:	dec    ebp
  40c1af:	out    dx,eax
  40c1b0:	cmp    BYTE PTR [eax+eiz*1+0x432263ef],bh
  40c1b7:	xchg   esp,eax
  40c1b8:	(bad)  
  40c1b9:	gs pop esi
  40c1bb:	pop    ebx
  40c1bc:	shl    DWORD PTR [ecx+0x5a],1
  40c1bf:	mov    bl,0x4f
  40c1c1:	aas    
  40c1c2:	call   0x3a92e11a
  40c1c7:	pop    edi
  40c1c8:	or     eax,0xa7c7df6a
  40c1cd:	(bad)  
  40c1ce:	outs   dx,BYTE PTR ds:[esi]
  40c1cf:	leave  
  40c1d0:	cmp    ecx,esi
  40c1d2:	(bad)  
  40c1d3:	cdq    
  40c1d4:	mov    eax,ds:0xe0f52da5
  40c1d9:	dec    ebp
  40c1da:	mov    ds:0xc2bb931,eax
  40c1df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1e0:	push   ds
  40c1e1:	xor    ebx,edx
  40c1e3:	imul   ebp,ebx,0x41e7a937
  40c1e9:	or     ebp,DWORD PTR [esi]
  40c1eb:	mov    DWORD PTR [ebp-0x3c],esp
  40c1ee:	std    
  40c1ef:	jne    0x40c192
  40c1f1:	sub    BYTE PTR [edx-0x3b],0x3a
  40c1f5:	push   cs
  40c1f6:	(bad)  
  40c1f7:	retf   0xf030
  40c1fa:	or     al,0xc0
  40c1fc:	btc    DWORD PTR [ebp+0x38],edx
  40c200:	or     BYTE PTR [ecx+0x31035a3],bl
  40c206:	mov    ebx,0x8d510169
  40c20b:	add    DWORD PTR [edx+0x12c60720],ecx
  40c211:	mov    ds:0xe97514b9,eax
  40c216:	lea    ecx,[esi-0x72]
  40c219:	data16 fsub st,st(5)
  40c21c:	fdiv   DWORD PTR [edx+ebx*8+0x7120e7b0]
  40c223:	pop    ss
  40c224:	rcr    BYTE PTR [eax],0xab
  40c227:	mov    ebx,0x952ee1cf
  40c22c:	push   ecx
  40c22d:	inc    DWORD PTR [esi+0x2283954e]
  40c233:	add    BYTE PTR [eax+esi*2-0x2ef2a3b1],bl
  40c23a:	xchg   BYTE PTR [edx+edi*8+0x6],ah
  40c23e:	jae    0x40c208
  40c240:	push   ebp
  40c241:	lods   al,BYTE PTR ds:[esi]
  40c242:	loope  0x40c281
  40c244:	cmc    
  40c245:	imul   ecx,DWORD PTR [ebp-0x3df07017],0xffffffe1
  40c24c:	imul   edx,ebp,0x6cde92c6
  40c252:	push   ss
  40c253:	fcmove st,st(7)
  40c255:	adc    al,0xf2
  40c257:	mov    bl,0xf8
  40c259:	xchg   BYTE PTR [ebp+0x31472a85],bh
  40c25f:	(bad)  
  40c260:	test   DWORD PTR [esp+ebp*4+0x46aa04f4],esi
  40c267:	rcl    DWORD PTR [esi+0x394c629b],cl
  40c26d:	xor    eax,0x3d2c3f5d
  40c272:	(bad)  
  40c274:	test   DWORD PTR [esi-0x3f7cd00b],esp
  40c27a:	stc    
  40c27b:	inc    edi
  40c27c:	xchg   cl,dl
  40c27e:	push   ebp
  40c27f:	nop
  40c280:	xor    eax,0xda634246
  40c285:	adc    BYTE PTR [ecx+0x686d8aac],cl
  40c28b:	jl     0x40c279
  40c28d:	and    DWORD PTR [ebx-0x8],edx
  40c290:	dec    edi
  40c291:	fbld   TBYTE PTR [edi]
  40c293:	push   es
  40c294:	pmaddwd mm6,QWORD PTR [ebx+ebp*1-0x3d]
  40c299:	(bad)  
  40c29a:	mov    dl,0xc9
  40c29c:	adc    dh,dl
  40c29e:	or     DWORD PTR [ebx],eax
  40c2a0:	call   0x1bff:0x857b5db7
  40c2a7:	les    edi,FWORD PTR [ebp+0x3f]
  40c2aa:	jmp    0x40c2ae
  40c2ac:	lea    edi,[eax]
  40c2ae:	add    eax,0x37e117cc
  40c2b3:	add    esp,esi
  40c2b5:	ss dec ecx
  40c2b7:	push   es
  40c2b8:	mov    DWORD PTR [edx-0xef6d09b],ecx
  40c2be:	(bad)  
  40c2bf:	mov    ds:0x878b2050,eax
  40c2c4:	xor    esp,ebp
  40c2c6:	mov    esp,0xd702d187
  40c2cb:	push   cs
  40c2cc:	lds    ecx,FWORD PTR [ecx]
  40c2ce:	or     DWORD PTR [edi+0x56],esp
  40c2d1:	sar    DWORD PTR [ebx+0x52],0x32
  40c2d5:	test   DWORD PTR ds:0xfd2d83e1,edx
  40c2db:	fsubp  st(3),st
  40c2dd:	mov    esp,0x8e03ec1a
  40c2e2:	inc    ebp
  40c2e3:	jmp    0x40c316
  40c2e5:	cmp    DWORD PTR [ecx+0xf9b41c5],esi
  40c2eb:	stos   DWORD PTR es:[edi],eax
  40c2ec:	test   DWORD PTR [esi-0x7a1504d9],edi
  40c2f2:	aaa    
  40c2f3:	loope  0x40c31c
  40c2f5:	aas    
  40c2f6:	lods   eax,DWORD PTR ds:[esi]
  40c2f7:	mov    esi,0x1fc0faf
  40c2fc:	mov    ch,0x78
  40c2fe:	in     eax,dx
  40c2ff:	aaa    
  40c300:	pop    ds
  40c301:	enter  0x229f,0xb5
  40c305:	jbe    0x40c344
  40c307:	pop    edi
  40c308:	push   edi
  40c309:	mov    dh,0x19
  40c30b:	enter  0xff3d,0xe2
  40c30f:	aaa    
  40c310:	clc    
  40c311:	add    ah,cl
  40c313:	fwait
  40c314:	cmp    dh,BYTE PTR [esi+0x7f]
  40c317:	xor    ecx,DWORD PTR [eax+0x1277ceb4]
  40c31d:	xchg   esp,eax
  40c31e:	fld    TBYTE PTR [esi+0x9]
  40c321:	pop    eax
  40c322:	jno    0x40c361
  40c324:	adc    ebp,esi
  40c326:	and    bl,BYTE PTR [ebx+ebp*8+0x44709d6f]
  40c32d:	push   edx
  40c32e:	stos   DWORD PTR es:[edi],eax
  40c32f:	jle    0x40c369
  40c331:	xor    BYTE PTR [esi-0x72c75667],ch
  40c337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c338:	ins    DWORD PTR es:[edi],dx
  40c339:	into   
  40c33a:	inc    ebp
  40c33b:	out    dx,eax
  40c33c:	pop    es
  40c33d:	int    0xc5
  40c33f:	out    dx,eax
  40c340:	xor    ebx,edx
  40c342:	and    dh,dh
  40c344:	arpl   WORD PTR [edx-0x15c45d0],bx
  40c34a:	outs   dx,DWORD PTR ds:[esi]
  40c34c:	std    
  40c34d:	mov    ebp,0xcd3b36ab
  40c352:	inc    eax
  40c353:	push   cs
  40c354:	xor    DWORD PTR [edx+0x4],edx
  40c357:	mov    ecx,0x5ef6f232
  40c35c:	mov    eax,ds:0x2ef5fcf4
  40c361:	sbb    eax,0xf4088fba
  40c366:	test   edi,esp
  40c368:	fs into 
  40c36a:	xor    dl,BYTE PTR [edx+0x366a8d80]
  40c370:	hlt    
  40c371:	ret    0x1651
  40c374:	sbb    al,0x48
  40c376:	and    bl,al
  40c378:	adc    BYTE PTR [eax-0x23a1ed56],cl
  40c37e:	xchg   ecx,eax
  40c37f:	push   edx
  40c380:	and    dh,cl
  40c382:	sti    
  40c383:	popa   
  40c384:	loope  0x40c38a
  40c386:	in     eax,dx
  40c387:	fs ins DWORD PTR es:[edi],dx
  40c389:	and    eax,0x3606b06c
  40c38e:	clc    
  40c38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c390:	cwde   
  40c391:	pushf  
  40c392:	imul   edi,DWORD PTR [ecx-0x5ade084a],0x4def3000
  40c39c:	xor    eax,0x820e67d9
  40c3a1:	sub    BYTE PTR [ebx],ah
  40c3a3:	(bad)  
  40c3a4:	xchg   esp,eax
  40c3a5:	dec    eax
  40c3a6:	jb     0x40c37e
  40c3a8:	verw   WORD PTR [edx]
  40c3ab:	push   eax
  40c3ac:	sub    al,0xa7
  40c3ae:	outs   dx,BYTE PTR ds:[esi]
  40c3af:	inc    ebx
  40c3b0:	aad    0xe4
  40c3b2:	mov    DWORD PTR [eax+0x77],0x2920fa27
  40c3b9:	outs   dx,DWORD PTR ds:[esi]
  40c3ba:	imul   ecx,ebp,0xfffffff2
  40c3bd:	lods   eax,DWORD PTR ds:[esi]
  40c3be:	cmp    ebp,esi
  40c3c0:	aas    
  40c3c1:	sub    al,0xe5
  40c3c3:	mov    ds:0x7b855d2a,al
  40c3c8:	push   0x5c
  40c3ca:	sub    DWORD PTR [esi+0x1208b596],edx
  40c3d0:	fwait
  40c3d1:	or     BYTE PTR [esi-0x6e],0x87
  40c3d5:	out    dx,eax
  40c3d6:	and    DWORD PTR [ecx-0x20eda0a7],eax
  40c3dc:	sub    al,0xb5
  40c3de:	cld    
  40c3df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e0:	xor    bl,BYTE PTR [esi-0x3c]
  40c3e3:	xor    bl,al
  40c3e5:	cmp    ecx,edx
  40c3e7:	ss xchg ebp,eax
  40c3e9:	jo     0x40c38b
  40c3eb:	dec    ecx
  40c3ec:	xor    BYTE PTR [ebx],cl
  40c3ee:	inc    esp
  40c3ef:	adc    BYTE PTR [edx],cl
  40c3f1:	test   DWORD PTR [esi],edx
  40c3f3:	imul   edx,DWORD PTR [ecx+edi*2],0xffffffb0
  40c3f7:	call   0x3a78c318
  40c3fc:	jne    0x40c3b5
  40c3fe:	out    0x4,eax
  40c400:	mov    ebp,0x2a5a68b4
  40c405:	jmp    0x40c483
  40c407:	enter  0x9b9e,0xf3
  40c40b:	add    bh,BYTE PTR [edx+eiz*8]
  40c40e:	dec    ebx
  40c40f:	lock je 0x40c41d
  40c412:	cmp    al,0x6e
  40c414:	idiv   BYTE PTR ss:[edx+0x11]
  40c418:	pop    esp
  40c419:	mov    esi,0xebea3665
  40c41e:	aaa    
  40c41f:	lea    ebp,[ebx-0xae7d547]
  40c425:	js     0x40c48e
  40c427:	aas    
  40c428:	inc    esi
  40c429:	xchg   ecx,eax
  40c42a:	xchg   esp,eax
  40c42b:	inc    esi
  40c42c:	inc    ebx
  40c42d:	push   edx
  40c42e:	aas    
  40c42f:	outs   dx,BYTE PTR ds:[esi]
  40c430:	cdq    
  40c431:	xor    ch,dl
  40c433:	push   0xa16f2aa6
  40c438:	dec    eax
  40c439:	jle    0x40c49a
  40c43b:	pop    ss
  40c43c:	ds mov eax,0xb64fd643
  40c442:	(bad)  
  40c443:	(bad)  
  40c444:	cmc    
  40c445:	mov    al,dl
  40c447:	jne    0x40c441
  40c449:	mov    bh,0xa
  40c44b:	aam    0xfa
  40c44d:	fimul  WORD PTR [ebx]
  40c44f:	jl     0x40c428
  40c451:	daa    
  40c452:	outs   dx,BYTE PTR ss:[esi]
  40c454:	call   0x3bf9:0xdfd83773
  40c45b:	push   es
  40c45c:	push   0x2
  40c45e:	lock dec edx
  40c460:	js     0x40c4af
  40c462:	cmp    dh,BYTE PTR fs:[esi+0x6c]
  40c466:	xchg   ebp,eax
  40c467:	jmp    0x972a:0x3a350292
  40c46e:	jle    0x40c44d
  40c470:	inc    edi
  40c471:	push   cs
  40c472:	cmp    DWORD PTR [eax+0x19afcf7e],0x9395e72a
  40c47c:	ret    0x623f
  40c47f:	daa    
  40c480:	mov    al,ds:0x1c3c2bfb
  40c485:	loope  0x40c474
  40c487:	es addr16 jo 0x40c411
  40c48b:	xor    al,0x75
  40c48d:	jge    0x40c46e
  40c48f:	out    0xb,eax
  40c491:	shl    DWORD PTR [edx+0x33],cl
  40c494:	jge    0x40c44f
  40c496:	enter  0x6ad4,0x4d
  40c49a:	psubw  mm1,mm0
  40c49d:	xor    al,0x36
  40c49f:	sbb    eax,0xa7531a29
  40c4a4:	xor    eax,0x7a2d8f4b
  40c4a9:	mov    dh,0x73
  40c4ab:	adc    al,0x85
  40c4ad:	imul   esi,edi,0xa207b94
  40c4b3:	jo     0x40c4d2
  40c4b5:	or     BYTE PTR [edx+0x5a],0x54
  40c4b9:	sbb    eax,0x380034a0
  40c4be:	fistp  DWORD PTR [edx-0x1fd07dd0]
  40c4c4:	and    dl,ah
  40c4c6:	cmp    DWORD PTR [esi-0x8],eax
  40c4c9:	jb     0x40c4ee
  40c4cb:	scas   eax,DWORD PTR es:[edi]
  40c4cc:	lods   eax,DWORD PTR ds:[esi]
  40c4cd:	xchg   esp,eax
  40c4ce:	push   0x26
  40c4d0:	pop    ds
  40c4d1:	retf   
  40c4d2:	mov    DWORD PTR [eax],ecx
  40c4d4:	dec    esp
  40c4d5:	pop    ebx
  40c4d6:	xchg   DWORD PTR ds:[edx-0x4b],esp
  40c4da:	aad    0xaa
  40c4dc:	or     eax,0x6b239282
  40c4e1:	dec    esi
  40c4e2:	pushf  
  40c4e3:	and    eax,0xd3bdd12
  40c4e8:	push   cs
  40c4e9:	std    
  40c4ea:	jnp    0x40c566
  40c4ec:	fwait
  40c4ed:	lahf   
  40c4ee:	in     eax,dx
  40c4ef:	dec    ecx
  40c4f0:	lds    ebx,FWORD PTR [ebp+0x1a1cbee7]
  40c4f6:	dec    ecx
  40c4f7:	stc    
  40c4f8:	sub    ebp,DWORD PTR [edx+0x3cc97b36]
  40c4fe:	fistp  WORD PTR [ecx]
  40c500:	loopne 0x40c537
  40c502:	retf   
  40c503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c504:	arpl   WORD PTR [ebx+0x44],si
  40c507:	jmp    0x40c4f2
  40c509:	cmp    al,0x40
  40c50b:	mov    ds:0xe28127fb,al
  40c510:	push   cs
  40c511:	pop    edx
  40c512:	loopne 0x40c56d
  40c514:	call   0x9eb8:0x5d08895f
  40c51b:	sub    al,0xb3
  40c51d:	ss mov ah,0x9
  40c520:	inc    ebx
  40c521:	rcr    DWORD PTR [esp+edi*8-0x4ab13dc3],cl
  40c528:	ins    BYTE PTR es:[edi],dx
  40c529:	scas   al,BYTE PTR es:[edi]
  40c52a:	lahf   
  40c52b:	(bad)  
  40c52c:	push   esp
  40c52d:	test   al,0x8b
  40c52f:	inc    ecx
  40c530:	retf   0x75ec
  40c533:	mov    al,0x2
  40c535:	out    0x74,eax
  40c537:	xor    eax,0xd987b52b
  40c53c:	adc    BYTE PTR [edi+eiz*4+0x6df519ad],0x86
  40c544:	fs ja  0x40c5a5
  40c547:	sbb    DWORD PTR [esi-0x14],esp
  40c54a:	pop    ecx
  40c54b:	popf   
  40c54c:	push   ecx
  40c54d:	bound  ecx,QWORD PTR [edi+0x63]
  40c550:	ja     0x40c59f
  40c552:	aaa    
  40c553:	ins    DWORD PTR es:[edi],dx
  40c554:	rcr    BYTE PTR [esi+esi*1],cl
  40c557:	pop    esp
  40c558:	aad    0xe9
  40c55a:	add    BYTE PTR [edi-0x11],al
  40c55d:	mov    edi,DWORD PTR [ebx]
  40c55f:	sub    al,0x89
  40c561:	sbb    ah,BYTE PTR [ebp-0x4446ee77]
  40c567:	ja     0x40c511
  40c569:	mov    bh,0x7d
  40c56b:	add    bl,BYTE PTR [edx+ebp*4]
  40c56e:	jns    0x40c5a5
  40c570:	sub    ah,dh
  40c572:	imul   ecx,edx,0xffffffa3
  40c575:	cwde   
  40c576:	push   edi
  40c577:	loop   0x40c57f
  40c579:	icebp  
  40c57a:	pop    ebp
  40c57b:	je     0x40c5e5
  40c57d:	repz mov edi,0x30dee1b
  40c583:	pop    esp
  40c584:	xor    DWORD PTR cs:[eax+0x2b08362e],ebx
  40c58b:	iret   
  40c58c:	sbb    eax,0x2b0a0f6e
  40c591:	mov    edi,DWORD PTR [ecx]
  40c593:	mov    ebx,edi
  40c595:	adc    BYTE PTR [edi+0x647a71e7],ah
  40c59b:	rcl    BYTE PTR [ebp-0x69ea3423],0x16
  40c5a2:	jae    0x40c5e2
  40c5a4:	in     al,0xc1
  40c5a6:	dec    edi
  40c5a7:	in     al,0x30
  40c5a9:	mov    ebx,0xe1942e3a
  40c5ae:	lock arpl WORD PTR [edx-0x5ff9ce78],bx
  40c5b5:	js     0x40c5e5
  40c5b7:	xor    al,0xdf
  40c5b9:	jp     0x40c5ea
  40c5bb:	mov    ah,BYTE PTR [esp+eiz*2+0x56e9a472]
  40c5c2:	inc    eax
  40c5c3:	popa   
  40c5c4:	jmp    0x23da6927
  40c5c9:	adc    DWORD PTR [ebx+eax*4-0x5eafd9db],edx
  40c5d0:	jecxz  0x40c5a5
  40c5d2:	jp     0x40c5e0
  40c5d4:	xchg   ebp,eax
  40c5d5:	push   0x79c1cb62
  40c5da:	mov    eax,ds:0x556e9a9
  40c5df:	aas    
  40c5e0:	adc    eax,ecx
  40c5e2:	stos   BYTE PTR es:[edi],al
  40c5e3:	nop
  40c5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5e5:	add    ah,BYTE PTR [ebx-0xd]
  40c5e8:	imul   eax,DWORD PTR [esi],0x72c28af6
  40c5ee:	loopne 0x40c5a6
  40c5f0:	mov    ecx,0x637d1bbc
  40c5f5:	inc    eax
  40c5f6:	push   ecx
  40c5f7:	add    al,0xeb
  40c5f9:	pop    edi
  40c5fa:	jmp    0x40c63b
  40c5fc:	cmp    BYTE PTR [edx+0x3],dh
  40c5ff:	or     ebp,edx
  40c601:	(bad)  
  40c602:	loopne 0x40c623
  40c604:	or     ebp,DWORD PTR [ecx]
  40c606:	pop    esp
  40c607:	retf   
  40c608:	out    0x8d,eax
  40c60a:	xor    BYTE PTR [ebp-0x48be8c3],dl
  40c610:	stos   DWORD PTR es:[edi],eax
  40c611:	aam    0xc0
  40c613:	iret   
  40c614:	pop    ecx
  40c615:	jmp    0xb517e42e
  40c61a:	jae    0x40c611
  40c61c:	mov    ah,0xda
  40c61e:	or     dh,BYTE PTR [edi]
  40c620:	xchg   ecx,eax
  40c621:	(bad)  
  40c624:	pop    ecx
  40c625:	jge    0x40c654
  40c627:	ret    0x83c7
  40c62a:	std    
  40c62b:	jb     0x40c664
  40c62d:	add    eax,DWORD PTR [eax+0x61]
  40c630:	(bad)  
  40c631:	or     eax,0xe0c2fa2d
  40c636:	ret    
  40c637:	mov    ds:0xabb72c4e,eax
  40c63c:	jmp    0x5cba:0x8dd85219
  40c643:	xchg   ebx,eax
  40c644:	call   0xb9820e19
  40c649:	cmp    eax,0x5b07c556
  40c64e:	sub    esi,ebx
  40c650:	not    bh
  40c652:	inc    eax
  40c653:	inc    esi
  40c654:	mov    al,ds:0x54668f63
  40c659:	xchg   ebx,eax
  40c65a:	aas    
  40c65b:	hlt    
  40c65c:	pop    edx
  40c65d:	jl     0x40c62e
  40c65f:	(bad)  
  40c660:	adc    ecx,DWORD PTR ds:0xbe0e82e2
  40c666:	or     eax,0x58d631a
  40c66b:	xor    cl,ah
  40c66d:	adc    al,0xfc
  40c66f:	neg    DWORD PTR [edi+0x2733e32a]
  40c675:	push   esp
  40c676:	sub    DWORD PTR [edx-0xe],0xffffffdc
  40c67a:	inc    esi
  40c67b:	pop    edi
  40c67c:	mov    WORD PTR [edx+0x2],?
  40c67f:	mov    cl,0x50
  40c681:	dec    esp
  40c682:	push   ebx
  40c683:	dec    esi
  40c684:	dec    esp
  40c685:	call   0x7eb81c2d
  40c68a:	call   0xe16e63b
  40c68f:	xor    bh,ch
  40c691:	xor    ecx,0x45c93dd5
  40c697:	cs lock repnz push esp
  40c69b:	addr16 mov eax,ds:0x3103
  40c69f:	sbb    al,0x10
  40c6a1:	push   ss
  40c6a2:	mov    WORD PTR [ecx+eax*8-0x3b],fs
  40c6a6:	push   edi
  40c6a7:	ins    BYTE PTR es:[edi],dx
  40c6a8:	and    esi,DWORD PTR [edi+0x654ba19e]
  40c6ae:	cmp    DWORD PTR [eax-0x51],ebx
  40c6b1:	(bad)
  40c6b4:	pusha  
  40c6b5:	pop    esp
  40c6b6:	fs pop esp
  40c6b8:	pop    ss
  40c6b9:	retf   0xe176
  40c6bc:	scas   eax,DWORD PTR es:[edi]
  40c6bd:	inc    eax
  40c6be:	inc    esi
  40c6bf:	sub    eax,0x90769014
  40c6c4:	outs   dx,DWORD PTR ds:[esi]
  40c6c5:	pop    ds
  40c6c6:	mov    ebp,0x4dd20c29
  40c6cb:	scas   eax,DWORD PTR es:[edi]
  40c6cc:	cld    
  40c6cd:	sub    eax,0x2a365cbe
  40c6d2:	sbb    edx,esi
  40c6d4:	inc    ebx
  40c6d5:	ficom  DWORD PTR [edx+edi*2-0x3a]
  40c6d9:	sub    eax,0x1ddae73f
  40c6de:	call   0xecf1:0x2580559e
  40c6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6e6:	loopne 0x40c6d5
  40c6e8:	ss mov dh,0xd1
  40c6eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ec:	outs   dx,DWORD PTR ds:[esi]
  40c6ed:	jo     0x40c708
  40c6ef:	sbb    BYTE PTR [ebx-0x24],bh
  40c6f2:	push   0xffffffa7
  40c6f4:	cmp    eax,DWORD PTR [ecx-0x12]
  40c6f7:	mov    esp,0x5018f5e3
  40c6fc:	gs mov esp,0x663a9ef8
  40c702:	fsub   DWORD PTR [edi+0x45d293b4]
  40c708:	out    0xfe,al
  40c70a:	data16 and dl,BYTE PTR [edx+0x26]
  40c70e:	jg     0x40c71c
  40c710:	ret    
  40c711:	mov    ds:0xf331495b,eax
  40c716:	rcr    ebp,cl
  40c718:	cdq    
  40c719:	out    0xde,eax
  40c71b:	test   eax,0xcda12598
  40c720:	push   0xd90b2f21
  40c725:	int3   
  40c726:	pop    edi
  40c727:	outs   dx,BYTE PTR ds:[esi]
  40c728:	outs   dx,BYTE PTR ds:[esi]
  40c729:	jle    0x40c741
  40c72b:	add    DWORD PTR [ebp+0x7e6428fd],esp
  40c731:	or     BYTE PTR [ebx-0x33],bh
  40c734:	xor    al,0x5f
  40c736:	frstor [edi+0x25fd2ad2]
  40c73c:	dec    esi
  40c73d:	jl     0x40c6d5
  40c73f:	retf   
  40c740:	push   ecx
  40c741:	repz hlt 
  40c743:	iret   
  40c744:	lods   al,BYTE PTR ds:[esi]
  40c745:	xchg   BYTE PTR [esi+ecx*4],ch
  40c748:	jno    0x40c763
  40c74a:	ins    BYTE PTR es:[edi],dx
  40c74b:	lock (bad) 
  40c74d:	push   eax
  40c74e:	ret    0x178e
  40c751:	or     DWORD PTR [eax-0x1b],edx
  40c754:	pop    ebp
  40c755:	shl    DWORD PTR [ecx],cl
  40c757:	lock mov bh,0x7c
  40c75a:	mov    dh,0x38
  40c75c:	pop    edx
  40c75d:	push   esi
  40c75e:	mov    edi,0xb151b8e2
  40c763:	popa   
  40c764:	aad    0xa8
  40c766:	repz pop edi
  40c768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c769:	sahf   
  40c76a:	(bad)  
  40c76b:	and    al,0xd8
  40c76d:	push   0xffffffb4
  40c76f:	jb     0x40c7c9
  40c771:	jmp    0x40c7d1
  40c773:	mov    eax,ds:0xf1a277c1
  40c778:	and    esp,DWORD PTR [edi]
  40c77a:	cdq    
  40c77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c77c:	inc    edi
  40c77d:	pusha  
  40c77e:	or     al,0xe4
  40c780:	loope  0x40c75a
  40c782:	mov    cl,0x90
  40c784:	sub    bl,dh
  40c786:	fisubr DWORD PTR [ecx+esi*4]
  40c789:	nop
  40c78a:	ins    BYTE PTR es:[edi],dx
  40c78b:	pop    es
  40c78c:	pop    ebx
  40c78d:	lds    edx,FWORD PTR [edx+edi*1]
  40c790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c791:	pushf  
  40c792:	(bad)
  40c795:	arpl   WORD PTR [esi+0x5a],ax
  40c798:	mov    eax,ds:0x6a1ed858
  40c79d:	push   cs
  40c79e:	lea    esp,[eax-0x5a]
  40c7a1:	imul   esp,eax,0xffffffbf
  40c7a4:	jne    0x40c754
  40c7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a7:	out    0xa,al
  40c7a9:	enter  0xac70,0x42
  40c7ad:	sbb    eax,edx
  40c7af:	pop    esi
  40c7b0:	(bad)  
  40c7b1:	push   edx
  40c7b2:	ins    BYTE PTR es:[edi],dx
  40c7b3:	mov    ds:0x8c2758d,al
  40c7b8:	mov    ah,0x3a
  40c7ba:	loope  0x40c7bf
  40c7bc:	mov    dh,0xc4
  40c7be:	pop    ebx
  40c7bf:	iret   
  40c7c0:	rol    ebx,cl
  40c7c2:	out    0x29,al
  40c7c4:	in     al,0x45
  40c7c6:	mov    cl,0x77
  40c7c8:	or     ah,ch
  40c7ca:	mov    ss,WORD PTR [ecx+0x3e]
  40c7cd:	mov    bh,BYTE PTR [ebp-0x6206cfcb]
  40c7d3:	call   0x4ab1108c
  40c7d8:	jl     0x40c792
  40c7da:	dec    edx
  40c7db:	xchg   ebp,eax
  40c7dc:	pop    ebx
  40c7dd:	adc    DWORD PTR [ecx+0x2f0242b],0xb5c515e7
  40c7e7:	enter  0x2d56,0x45
  40c7eb:	popa   
  40c7ec:	(bad)  
  40c7ed:	pop    eax
  40c7ee:	mov    dl,BYTE PTR [esi+0x206a4df5]
  40c7f4:	or     ah,BYTE PTR [ebx+0x3f]
  40c7f7:	pop    edx
  40c7f8:	(bad)  
  40c7f9:	mov    edi,0x74cbb8af
  40c7fe:	sar    ah,0x7
  40c801:	mov    esp,0xdb2e5814
  40c806:	adc    dh,BYTE PTR [edi-0x45]
  40c809:	scas   al,BYTE PTR es:[edi]
  40c80a:	lods   al,BYTE PTR ds:[esi]
  40c80b:	ins    DWORD PTR es:[edi],dx
  40c80c:	outs   dx,DWORD PTR ds:[esi]
  40c80d:	xor    eax,0xef9b1adb
  40c812:	cdq    
  40c813:	xor    DWORD PTR [edi],0xffffffea
  40c816:	push   ds
  40c817:	sbb    esp,DWORD PTR [ebp+0x2d057648]
  40c81d:	es jbe 0x40c870
  40c820:	mov    ah,0x7a
  40c822:	imul   edi,edx,0xe28fd115
  40c828:	sbb    edx,DWORD PTR [ebx+0xe3eca52]
  40c82e:	or     BYTE PTR [esi+0x2d],0x2c
  40c832:	dec    ebx
  40c833:	mov    ecx,0xa016652e
  40c838:	popa   
  40c839:	mov    ecx,0x89f40744
  40c83e:	je     0x40c8b0
  40c840:	xor    ah,ch
  40c842:	in     al,0x44
  40c844:	(bad)
  40c847:	add    edi,esi
  40c849:	pusha  
  40c84a:	mov    ebx,0xc19fd264
  40c84f:	sbb    eax,DWORD PTR [esp+edi*4-0x564f735]
  40c856:	dec    ebp
  40c857:	jo     0x40c8ac
  40c859:	and    al,0x8f
  40c85b:	loope  0x40c813
  40c85d:	inc    ebx
  40c85e:	repnz mov ds:0xaa644d9,eax
  40c864:	outs   dx,BYTE PTR ds:[esi]
  40c865:	pop    ds
  40c866:	(bad)  [edi]
  40c868:	shl    BYTE PTR [edx],0xa5
  40c86b:	mov    eax,0x153d6115
  40c870:	fs (bad) 
  40c872:	ror    dl,cl
  40c874:	add    bl,BYTE PTR [esi]
  40c876:	fdivr  DWORD PTR [esi-0xc268122]
  40c87c:	mov    ecx,0x439e26af
  40c881:	fisubr WORD PTR [ebp+0xd]
  40c884:	stc    
  40c885:	aaa    
  40c886:	jne    0x40c818
  40c888:	dec    esi
  40c889:	ror    esp,cl
  40c88b:	loopne 0x40c908
  40c88d:	iret   
  40c88e:	or     eax,0x3524f2a7
  40c893:	aad    0x9
  40c895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c896:	xchg   ecx,eax
  40c897:	loopne 0x40c898
  40c899:	retf   0x86f1
  40c89c:	bound  ebp,QWORD PTR [ecx]
  40c89e:	popa   
  40c89f:	lods   eax,DWORD PTR ds:[esi]
  40c8a0:	aad    0x32
  40c8a2:	sub    DWORD PTR [ecx+0x51],0x59
  40c8a6:	aas    
  40c8a7:	cmp    DWORD PTR [eax+edi*4-0x1d],edi
  40c8ab:	div    ebp
  40c8ad:	sbb    BYTE PTR ds:0x44495ad9,bh
  40c8b3:	std    
  40c8b4:	xchg   edi,eax
  40c8b5:	xchg   ebp,eax
  40c8b6:	inc    esi
  40c8b7:	cmp    ebp,DWORD PTR ds:0x3434d587
  40c8bd:	cmp    eax,0xdf27d720
  40c8c2:	mov    WORD PTR [esi],cs
  40c8c4:	adc    eax,0xe7c874f7
  40c8c9:	test   BYTE PTR [ebp-0x1e539ab1],bh
  40c8cf:	loopne 0x40c8fc
  40c8d1:	dec    ebp
  40c8d2:	sbb    eax,0xe759f476
  40c8d7:	call   0xb7fc:0x4050e143
  40c8de:	das    
  40c8df:	xchg   edi,eax
  40c8e0:	add    ebp,DWORD PTR [edx+0x2ade8bd8]
  40c8e6:	pop    ss
  40c8e7:	xor    ebp,DWORD PTR [ebx-0xe]
  40c8ea:	or     ch,BYTE PTR [ecx+edx*2]
  40c8ed:	jno    0x40c8dc
  40c8ef:	aam    0xd4
  40c8f1:	cs pushf 
  40c8f3:	jge    0x40c8cc
  40c8f5:	out    dx,eax
  40c8f6:	je     0x40c8a5
  40c8f8:	xchg   ecx,eax
  40c8f9:	ror    BYTE PTR [ecx],1
  40c8fb:	ins    BYTE PTR es:[edi],dx
  40c8fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8fd:	push   ecx
  40c8fe:	data16 jg 0x40c8f7
  40c901:	add    eax,0xa24029ac
  40c906:	mov    ebx,0xd487456b
  40c90b:	jbe    0x40c91e
  40c90d:	inc    ecx
  40c90e:	sbb    dl,BYTE PTR [edi+0x2d]
  40c911:	leave  
  40c912:	add    al,BYTE PTR [esp+ecx*2-0x30]
  40c916:	dec    edi
  40c917:	fstp   QWORD PTR [ebx-0x67eca89b]
  40c91d:	mov    bl,0x74
  40c91f:	aam    0x3e
  40c921:	lock imul eax,DWORD PTR [edi-0x2943f33c],0x94fc28d0
  40c92c:	test   al,0xea
  40c92e:	les    ebp,FWORD PTR [ebx+0x3fda1f9]
  40c934:	add    eax,0xf106a0e1
  40c939:	lea    ecx,[eax+0x19557531]
  40c93f:	push   esi
  40c940:	pop    ss
  40c941:	mov    esp,0xd129c0fc
  40c946:	ja     0x40c904
  40c948:	mov    ds:0xbc90c5bb,eax
  40c94d:	push   edi
  40c94e:	sub    bh,BYTE PTR [eax-0x4d]
  40c951:	inc    edi
  40c952:	cli    
  40c953:	stos   BYTE PTR es:[edi],al
  40c954:	cld    
  40c955:	mov    ds:0xbb8fe7a1,al
  40c95a:	out    dx,eax
  40c95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c95c:	aad    0xb6
  40c95e:	out    dx,eax
  40c95f:	sbb    ecx,esp
  40c961:	jg     0x40c984
  40c963:	int3   
  40c964:	out    dx,eax
  40c965:	daa    
  40c966:	pop    esi
  40c967:	jge    0x40c96a
  40c969:	jmp    0xc64:0x77d60d22
  40c970:	mov    edx,0x85fd14dd
  40c975:	data16 loop 0x40c91d
  40c978:	sbb    DWORD PTR [esp+eiz*8],0xe7b8a473
  40c97f:	loope  0x40c907
  40c981:	fbld   TBYTE PTR [eax]
  40c983:	push   esi
  40c984:	pop    ecx
  40c985:	jnp    0x40c9d8
  40c987:	jne    0x40c92c
  40c989:	xchg   ebx,edi
  40c98b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c98c:	push   ebx
  40c98d:	fsub   st(1),st
  40c98f:	mov    dh,0xdf
  40c991:	pop    esp
  40c992:	push   cs
  40c993:	fcom   QWORD PTR [ecx-0x16]
  40c996:	mov    ebp,0xa6e01224
  40c99b:	call   0x648b:0x3bae812b
  40c9a2:	out    0x51,eax
  40c9a4:	jp     0x40c9b6
  40c9a6:	call   0x538d1491
  40c9ab:	das    
  40c9ac:	fisub  DWORD PTR [eax]
  40c9ae:	repnz test al,0xa3
  40c9b1:	mov    ebx,0x62e6ccbc
  40c9b6:	xor    ch,BYTE PTR [ecx-0x141bbdd]
  40c9bc:	int    0xd6
  40c9be:	inc    esp
  40c9bf:	ret    
  40c9c0:	push   esi
  40c9c1:	js     0x40c9a5
  40c9c3:	cs cmp cl,0x3d
  40c9c7:	ins    BYTE PTR es:[edi],dx
  40c9c8:	push   0xc7c54b8b
  40c9cd:	mov    bh,0x6d
  40c9cf:	inc    BYTE PTR [ebx+0x3]
  40c9d2:	in     al,0x86
  40c9d4:	mov    dl,0xb8
  40c9d6:	jecxz  0x40c9ac
  40c9d8:	adc    edx,eax
  40c9da:	mov    bl,0x6d
  40c9dc:	and    DWORD PTR [edx-0x6d048754],0xffffffb7
  40c9e3:	outs   dx,DWORD PTR ds:[esi]
  40c9e4:	inc    eax
  40c9e5:	stos   DWORD PTR es:[edi],eax
  40c9e6:	push   cs
  40c9e7:	iret   
  40c9e8:	adc    BYTE PTR [edi+ebx*8+0x3e],bl
  40c9ec:	out    dx,eax
  40c9ed:	dec    edx
  40c9ee:	cmp    al,0xf4
  40c9f0:	out    0xd3,al
  40c9f2:	jl     0x40ca46
  40c9f4:	pop    DWORD PTR [ebp+0x667232f7]
  40c9fa:	aaa    
  40c9fb:	xchg   edi,eax
  40c9fc:	lods   eax,DWORD PTR ds:[esi]
  40c9fd:	pop    es
  40c9fe:	dec    ebp
  40c9ff:	mov    ah,0x32
  40ca01:	lea    ecx,cs:[ebp-0x6a7c87f8]
  40ca08:	xchg   DWORD PTR [ebp+0x65883084],eax
  40ca0e:	sahf   
  40ca0f:	xchg   esp,eax
  40ca10:	ror    DWORD PTR [ebp-0x4c17bffd],1
  40ca16:	or     BYTE PTR [edx],0x15
  40ca19:	sub    BYTE PTR [edx+0x66e28b1c],al
  40ca1f:	sbb    ecx,esi
  40ca21:	mov    dh,0x10
  40ca23:	cwde   
  40ca24:	std    
  40ca25:	and    DWORD PTR [ecx-0x6],0x7e7cf691
  40ca2c:	or     DWORD PTR [ebx-0x37],eax
  40ca2f:	inc    ebp
  40ca30:	cld    
  40ca31:	(bad)  
  40ca32:	gs mov bh,dl
  40ca35:	lahf   
  40ca36:	(bad)  
  40ca37:	xchg   esi,eax
  40ca38:	push   0x7f
  40ca3a:	mov    bh,0x5d
  40ca3c:	dec    esi
  40ca3d:	push   cs
  40ca3e:	mov    ah,0x55
  40ca40:	loope  0x40ca83
  40ca42:	pop    ecx
  40ca43:	mov    ch,0x35
  40ca45:	jl     0x40ca52
  40ca47:	sbb    BYTE PTR [ebx-0x54fc0cfe],ch
  40ca4d:	out    0x69,eax
  40ca4f:	jne    0x40c9e9
  40ca51:	std    
  40ca52:	jmp    0x9a54:0x11b9cb4c
  40ca59:	sub    BYTE PTR [edx+eiz*1+0x4e],dh
  40ca5d:	out    0x29,eax
  40ca5f:	aas    
  40ca60:	loopne 0x40c9fa
  40ca62:	push   ebx
  40ca63:	aas    
  40ca64:	mov    WORD PTR [ecx+ecx*8+0x5d],gs
  40ca68:	(bad)  
  40ca6a:	sti    
  40ca6b:	mov    edi,0x2d24914a
  40ca70:	and    eax,0xdcb5759
  40ca75:	mov    ecx,0x556292a8
  40ca7a:	popf   
  40ca7b:	lods   eax,DWORD PTR ds:[esi]
  40ca7c:	bnd ret 0x73c3
  40ca80:	pusha  
  40ca81:	add    DWORD PTR [ebp+0x48],0x5d
  40ca85:	inc    esi
  40ca86:	adc    al,BYTE PTR [edx]
  40ca88:	mov    DWORD PTR [ecx],esi
  40ca8a:	daa    
  40ca8b:	lods   al,BYTE PTR ds:[esi]
  40ca8c:	or     eax,0x94b0c9f9
  40ca91:	mov    eax,0x495428e5
  40ca96:	mov    edi,0xdc03d314
  40ca9b:	inc    esp
  40ca9c:	xchg   ecx,eax
  40ca9d:	xor    dh,BYTE PTR [eax+0x49]
  40caa0:	into   
  40caa1:	push   edi
  40caa2:	repz sub dh,al
  40caa5:	pop    eax
  40caa6:	mov    eax,0x2f3d03a
  40caab:	or     edx,DWORD PTR [ebx+0x6dfb9083]
  40cab1:	mov    cl,BYTE PTR [eax]
  40cab3:	fisttp QWORD PTR [edx]
  40cab5:	cwde   
  40cab6:	int3   
  40cab7:	aad    0x89
  40cab9:	push   esp
  40caba:	xor    al,dl
  40cabc:	sahf   
  40cabd:	inc    ecx
  40cabe:	js     0x40cb0d
  40cac0:	mov    DWORD PTR [ebx],ebx
  40cac2:	test   dl,0x47
  40cac5:	sbb    eax,0xd2e465e5
  40caca:	sub    al,cl
  40cacc:	out    0x78,al
  40cace:	push   ds
  40cacf:	rcr    DWORD PTR [ebx],0x8a
  40cad2:	and    edx,DWORD PTR [eax]
  40cad4:	lahf   
  40cad5:	mov    WORD PTR [edi+0x1891249e],es
  40cadb:	xchg   esp,eax
  40cadc:	jmp    0x40cb4d
  40cade:	sbb    al,0xf
  40cae0:	das    
  40cae1:	ds dec edx
  40cae3:	jno    0x40cb64
  40cae5:	xor    ah,BYTE PTR [ebx+0x74]
  40cae8:	clc    
  40cae9:	mov    ds:0xbd346662,eax
  40caee:	jmp    0x58cb:0x4f9a9ba6
  40caf5:	(bad)  
  40caf6:	cmp    eax,0xbe775289
  40cafb:	sbb    BYTE PTR [ebp+0x4d],0xae
  40caff:	add    eax,0x42e6056b
  40cb04:	push   esp
  40cb05:	push   edi
  40cb06:	lods   eax,DWORD PTR ds:[esi]
  40cb07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb08:	inc    eax
  40cb09:	in     al,0xbc
  40cb0b:	mov    bh,0xb5
  40cb0d:	xchg   ebp,eax
  40cb0e:	cmp    eax,0x7de76ca1
  40cb13:	pop    ds
  40cb14:	mov    DWORD PTR [bx+si-0x72],edi
  40cb18:	xor    eax,0xbc7f04af
  40cb1d:	mov    bh,0x2e
  40cb1f:	(bad)  
  40cb21:	xchg   ecx,eax
  40cb22:	sbb    esi,ebp
  40cb24:	repz pop edx
  40cb26:	cmp    BYTE PTR [ebx+0x5335cc27],bl
  40cb2c:	mov    esi,0xdbb478ab
  40cb31:	(bad)  
  40cb33:	xchg   edx,eax
  40cb34:	mov    bh,0x60
  40cb36:	inc    ecx
  40cb37:	mov    ebp,0x44cc5f5c
  40cb3c:	pop    edi
  40cb3d:	mov    ebx,0xaf3976fd
  40cb42:	adc    DWORD PTR [ebp-0x4f],esp
  40cb45:	and    DWORD PTR [edx],0xfa6f90db
  40cb4b:	out    0x74,al
  40cb4d:	xor    esp,DWORD PTR [ebp-0x1a1d50d6]
  40cb53:	xor    DWORD PTR [esi+esi*1-0x5a],eax
  40cb57:	dec    ecx
  40cb58:	sar    edi,cl
  40cb5a:	xor    ah,BYTE PTR [eax-0x706e973f]
  40cb60:	xchg   ecx,eax
  40cb61:	mov    ch,0xdb
  40cb63:	add    cl,BYTE PTR [edi+esi*4-0x4f]
  40cb67:	out    0x55,al
  40cb69:	arpl   cx,bp
  40cb6b:	sbb    BYTE PTR ds:0x376fdbcf,dl
  40cb71:	ins    DWORD PTR es:[edi],dx
  40cb72:	jl     0x40cbb9
  40cb74:	aad    0xf5
  40cb76:	jmp    0x6b4562f1
  40cb7b:	dec    edx
  40cb7c:	cmp    edx,DWORD PTR [ebp-0x23370097]
  40cb82:	mov    ebx,DWORD PTR [ecx+0x6c]
  40cb85:	mov    edx,0x9f5d2d95
  40cb8a:	shr    BYTE PTR [eax-0xe],cl
  40cb8d:	dec    esi
  40cb8e:	sbb    al,0xe
  40cb90:	mov    ecx,0xbc0242b9
  40cb95:	icebp  
  40cb96:	push   ebx
  40cb97:	jae    0x40cbf1
  40cb99:	in     eax,0xd8
  40cb9b:	push   es
  40cb9c:	add    BYTE PTR [ebx+edi*2+0x7219d857],cl
  40cba3:	pusha  
  40cba4:	cmp    DWORD PTR [edi-0x63],ebx
  40cba7:	cli    
  40cba8:	pop    ss
  40cba9:	mov    DWORD PTR [edx],ecx
  40cbab:	enter  0xa382,0xa0
  40cbaf:	shl    bh,1
  40cbb1:	xlat   BYTE PTR ds:[ebx]
  40cbb2:	stos   BYTE PTR es:[edi],al
  40cbb3:	daa    
  40cbb4:	or     BYTE PTR [ebx+0x6df986b7],dl
  40cbba:	xor    al,0x34
  40cbbc:	stos   BYTE PTR es:[edi],al
  40cbbd:	out    0x74,al
  40cbbf:	cdq    
  40cbc0:	push   ss
  40cbc1:	or     eax,0xa71fd3b
  40cbc6:	push   esp
  40cbc7:	loopne 0x40cc3c
  40cbc9:	jg     0x40cc14
  40cbcb:	enter  0x43aa,0x63
  40cbcf:	xor    esp,DWORD PTR [ecx]
  40cbd1:	retf   
  40cbd2:	adc    ebx,esi
  40cbd4:	call   0x77ac:0xa4ea3f88
  40cbdb:	mov    ds:0x35cfcf6e,eax
  40cbe0:	add    bh,BYTE PTR [ecx+0x33]
  40cbe3:	and    eax,DWORD PTR [edx-0x78438222]
  40cbe9:	cld    
  40cbea:	sub    al,0x4c
  40cbec:	mov    dl,0x5a
  40cbee:	mov    ds:0x6c8a825a,al
  40cbf3:	adc    al,0xb7
  40cbf5:	(bad)  
  40cbf6:	sahf   
  40cbf7:	call   0xb21a086
  40cbfc:	inc    ebp
  40cbfd:	xchg   ecx,eax
  40cbfe:	cmc    
  40cbff:	cdq    
  40cc00:	jge    0x40cc20
  40cc02:	arpl   WORD PTR [edi+0x8b02446],di
  40cc08:	mov    eax,ds:0xd1c1315f
  40cc0d:	mov    al,ds:0xe7a7b309
  40cc12:	outs   dx,DWORD PTR ds:[esi]
  40cc13:	aad    0x73
  40cc15:	jl     0x40cba9
  40cc17:	mov    bh,BYTE PTR [edi]
  40cc19:	or     eax,0xb1a409e5
  40cc1e:	stos   DWORD PTR es:[edi],eax
  40cc1f:	sbb    eax,0xb298bc9d
  40cc24:	and    BYTE PTR [eax],0xed
  40cc27:	dec    ecx
  40cc28:	xchg   edi,eax
  40cc29:	dec    esi
  40cc2a:	iret   
  40cc2b:	add    BYTE PTR [esi],bl
  40cc2d:	pushf  
  40cc2e:	popa   
  40cc2f:	jne    0x40cc9c
  40cc31:	and    dl,BYTE PTR [esi]
  40cc33:	pop    eax
  40cc34:	mov    ecx,DWORD PTR gs:[esp+esi*1]
  40cc38:	pop    es
  40cc39:	sbb    eax,0x6be9cd42
  40cc3e:	and    al,0x1e
  40cc40:	pop    ebx
  40cc41:	je     0x40cc21
  40cc43:	inc    edi
  40cc44:	sbb    eax,0x9ef1654d
  40cc49:	ins    DWORD PTR es:[edi],dx
  40cc4a:	scas   eax,DWORD PTR es:[edi]
  40cc4b:	stc    
  40cc4c:	mov    WORD PTR [esi-0x175b4cd0],gs
  40cc52:	jge    0x40cbe2
  40cc54:	and    al,0xa9
  40cc56:	cmp    al,BYTE PTR [ebx-0x4e]
  40cc59:	jae    0x40ccd4
  40cc5b:	sub    al,0x97
  40cc5d:	cs push ebx
  40cc5f:	es push eax
  40cc61:	retf   
  40cc62:	push   esp
  40cc63:	fild   DWORD PTR [eax+0x42]
  40cc66:	in     eax,dx
  40cc67:	(bad)  
  40cc68:	add    al,0xcb
  40cc6a:	pop    ss
  40cc6b:	cmp    eax,0x95c4c12c
  40cc70:	popa   
  40cc71:	call   0xd0e56739
  40cc76:	push   ds
  40cc77:	pop    es
  40cc78:	adc    eax,0xf7472768
  40cc7d:	inc    ecx
  40cc7e:	repz (bad) 
  40cc80:	lods   eax,DWORD PTR ds:[esi]
  40cc81:	jg     0x40cc26
  40cc83:	sti    
  40cc84:	push   ebx
  40cc85:	and    edi,DWORD PTR [edx]
  40cc87:	push   ebx
  40cc88:	add    esi,esi
  40cc8a:	add    ebx,ecx
  40cc8c:	dec    ebp
  40cc8d:	stos   BYTE PTR es:[edi],al
  40cc8e:	or     BYTE PTR [ebp-0x2f],dl
  40cc91:	mov    edx,0xb51f1c2f
  40cc96:	into   
  40cc97:	int3   
  40cc98:	adc    al,0xa1
  40cc9a:	retf   
  40cc9b:	arpl   WORD PTR [eax-0x411369ed],si
  40cca1:	sbb    esi,DWORD PTR ss:[ecx+0x5]
  40cca5:	nop
  40cca6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40cca8:	jno    0x40cc5d
  40ccaa:	jl     0x40ccfc
  40ccac:	jns    0x40cc43
  40ccae:	popf   
  40ccaf:	jp     0x40cc51
  40ccb1:	jnp    0x40cce8
  40ccb3:	xchg   esp,eax
  40ccb4:	in     al,0xa5
  40ccb6:	push   ebx
  40ccb7:	sbb    BYTE PTR [eax+0x5c5b3741],bh
  40ccbd:	mov    esp,0x2320bf45
  40ccc2:	aaa    
  40ccc3:	aaa    
  40ccc4:	mov    ebp,0x4b572d99
  40ccc9:	loop   0x40ccce
  40cccb:	adc    dh,BYTE PTR [edi]
  40cccd:	lahf   
  40ccce:	loope  0x40cd37
  40ccd0:	adc    eax,0x3bbeb055
  40ccd5:	daa    
  40ccd6:	mov    eax,ds:0x2876716b
  40ccdb:	std    
  40ccdc:	jmp    0xb5d5a062
  40cce1:	inc    ebp
  40cce2:	xor    esp,edi
  40cce4:	cdq    
  40cce5:	lds    eax,FWORD PTR [ebx-0x57]
  40cce8:	sbb    bl,bh
  40ccea:	pop    ds
  40cceb:	sub    eax,0x552c0761
  40ccf0:	xor    cl,dl
  40ccf2:	mov    cl,0xe3
  40ccf4:	lods   eax,DWORD PTR ds:[esi]
  40ccf5:	xor    eax,0xd05f538d
  40ccfa:	(bad)  
  40ccfc:	loop   0x40cd04
  40ccfe:	inc    eax
  40ccff:	mov    ebp,0x36a5b461
  40cd04:	mov    edi,0xc862f085
  40cd09:	add    bl,dh
  40cd0b:	jb     0x40cd18
  40cd0d:	dec    eax
  40cd0e:	sbb    dh,BYTE PTR [ecx]
  40cd10:	mov    ah,0xde
  40cd12:	neg    BYTE PTR [eiz*1-0x56efb6c5]
  40cd19:	(bad)  
  40cd1a:	(bad)  
  40cd1b:	cmp    DWORD PTR [ebp+0x42],ebx
  40cd1e:	lds    ebp,FWORD PTR [esi+0x71]
  40cd21:	mov    edx,0x5b5a8524
  40cd26:	pop    esi
  40cd27:	push   es
  40cd28:	inc    esi
  40cd29:	in     al,0xc9
  40cd2b:	fld    DWORD PTR [ebx]
  40cd2d:	aam    0x73
  40cd2f:	add    eax,ecx
  40cd31:	dec    edi
  40cd32:	dec    ecx
  40cd33:	out    dx,eax
  40cd34:	lods   eax,DWORD PTR ds:[esi]
  40cd35:	(bad)  
  40cd36:	sub    ecx,DWORD PTR [esi]
  40cd38:	lds    esi,FWORD PTR [ebx-0x33275b3a]
  40cd3e:	or     BYTE PTR [edi+0x1b],ah
  40cd41:	push   esi
  40cd42:	fcomp  QWORD PTR [esp+edx*2]
  40cd45:	out    dx,al
  40cd46:	xchg   ebx,eax
  40cd47:	add    BYTE PTR [di+0x6],bl
  40cd4b:	js     0x40cd7c
  40cd4d:	pop    edi
  40cd4e:	push   0x94360b8d
  40cd53:	in     eax,0x81
  40cd55:	sub    cl,BYTE PTR [ecx+0x4b]
  40cd58:	cdq    
  40cd59:	sbb    al,0x5
  40cd5b:	pop    edi
  40cd5c:	mov    ebp,0x7ec29532
  40cd61:	and    dh,dh
  40cd63:	sbb    edx,DWORD PTR [ebx+0x5c]
  40cd66:	rcl    BYTE PTR gs:[eax],cl
  40cd69:	jae    0x40cd49
  40cd6b:	jl     0x40cdd4
  40cd6d:	sub    BYTE PTR ds:0xf51d8c82,cl
  40cd73:	loopne 0x40cd40
  40cd75:	dec    ebx
  40cd76:	dec    edi
  40cd77:	pushf  
  40cd78:	mov    DWORD PTR [ebp+0x56e47d11],esp
  40cd7e:	icebp  
  40cd7f:	imul   edx,esp,0x2851e1b1
  40cd85:	cmp    al,0x4e
  40cd87:	test   DWORD PTR [ebp-0x3b],esi
  40cd8a:	push   eax
  40cd8b:	in     eax,0x19
  40cd8d:	mov    ch,0x89
  40cd8f:	add    eax,0xb0f9b7b3
  40cd94:	dec    ecx
  40cd95:	sbb    BYTE PTR [esi+0x4a0a144f],dl
  40cd9b:	pop    eax
  40cd9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd9d:	xor    dl,BYTE PTR [eax+edx*1]
  40cda0:	lds    edi,FWORD PTR [edx+0x7b24d368]
  40cda6:	pop    edx
  40cda7:	dec    ebx
  40cda8:	bts    DWORD PTR ds:0x338d79aa,esp
  40cdaf:	sub    ebx,DWORD PTR [edi+edx*8+0x65f22bd7]
  40cdb6:	fisubr WORD PTR [edx-0x4600ecd0]
  40cdbc:	call   0x7a47:0x3c36f1f6
  40cdc3:	or     bh,al
  40cdc5:	mov    gs,WORD PTR [ecx+esi*8+0x78]
  40cdc9:	xor    DWORD PTR [ebx+0x6d5a0941],0x15247005
  40cdd3:	pop    ebp
  40cdd4:	in     eax,0x81
  40cdd6:	out    0x8f,eax
  40cdd8:	retf   
  40cdd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdda:	xchg   ecx,eax
  40cddb:	daa    
  40cddc:	and    al,0xe0
  40cdde:	sahf   
  40cddf:	xor    BYTE PTR [edx+0x3bfe295d],0x37
  40cde6:	ja     0x40ce66
  40cde8:	mov    ah,0xbb
  40cdea:	dec    ebp
  40cdeb:	sbb    DWORD PTR [edx-0x2895fad5],ebp
  40cdf1:	add    esi,DWORD PTR [ebx]
  40cdf3:	bound  edx,QWORD PTR [eax]
  40cdf5:	ins    BYTE PTR es:[edi],dx
  40cdf6:	push   ebx
  40cdf7:	or     al,ah
  40cdf9:	pop    ss
  40cdfa:	mov    BYTE PTR [eax+ebx*4],dl
  40cdfd:	and    eax,0x3f36254d
  40ce02:	(bad)  
  40ce03:	unpcklps xmm3,XMMWORD PTR ds:0xd1d84abe
  40ce0a:	sub    al,0x1
  40ce0c:	lods   al,BYTE PTR ds:[esi]
  40ce0d:	mov    BYTE PTR [ebx-0x41e26a4f],cl
  40ce13:	jle    0x40ce08
  40ce15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce16:	push   eax
  40ce17:	fmulp  st(4),st
  40ce19:	nop
  40ce1a:	or     BYTE PTR [eax+0x72ec303c],dl
  40ce20:	lea    esi,[eax+0x5a]
  40ce23:	sbb    DWORD PTR [ebp-0x6f],0x17ee1841
  40ce2a:	dec    ebp
  40ce2b:	pusha  
  40ce2c:	xor    edi,edi
  40ce2e:	scas   al,BYTE PTR es:[edi]
  40ce2f:	push   ds
  40ce30:	test   BYTE PTR [ebx-0x12f7685a],0x20
  40ce37:	jo     0x40ce89
  40ce39:	fcomip st,st(7)
  40ce3b:	jnp    0x40cdca
  40ce3d:	sbb    eax,0x8a0d0cd6
  40ce42:	cmp    eax,0x719e8f3
  40ce47:	fstp   QWORD PTR [edi-0x237e7553]
  40ce4d:	shl    DWORD PTR [edx-0x74],0x6e
  40ce51:	sub    DWORD PTR [edx+0x38],edx
  40ce54:	call   0x4724:0x473a453
  40ce5b:	push   esi
  40ce5c:	sub    DWORD PTR [ebx-0x14],ebx
  40ce5f:	lock push 0xf098f73e
  40ce65:	mov    esi,0x971f3c82
  40ce6a:	jmp    0xdef55a3
  40ce6f:	fild   WORD PTR [edi-0x57]
  40ce73:	pop    ebx
  40ce74:	and    DWORD PTR [ecx],0x95795905
  40ce7a:	fcom   QWORD PTR [edx-0x60]
  40ce7d:	mov    esi,0x5d1f10c5
  40ce82:	jmp    0x14694fee
  40ce87:	dec    ebp
  40ce88:	imul   ebp,DWORD PTR fs:[esi-0x1d4f3568],0xc7e22cd3
  40ce93:	shl    BYTE PTR [ebx],0x8e
  40ce96:	(bad)  
  40ce97:	jmp    0xa4de:0xc99defe4
  40ce9e:	or     edx,DWORD PTR [ebp+edi*1-0x19626759]
  40cea5:	addr16 out 0x42,al
  40cea8:	cmp    DWORD PTR [edx-0x50],esp
  40ceab:	ds bswap ebx
  40ceae:	xchg   DWORD PTR [esi+0x37],esp
  40ceb1:	pop    ebx
  40ceb2:	in     al,dx
  40ceb3:	int    0x11
  40ceb5:	pop    es
  40ceb6:	popf   
  40ceb7:	dec    esi
  40ceb8:	arpl   WORD PTR [esi+eax*1+0x79e4c254],cx
  40cebf:	mov    eax,0xc478f1d7
  40cec4:	inc    esp
  40cec5:	stos   BYTE PTR es:[edi],al
  40cec6:	js     0x40cf1b
  40cec8:	fiadd  DWORD PTR [ebx]
  40ceca:	call   0x6945:0x5814b385
  40ced1:	jmp    0x1c4257af
  40ced6:	ins    DWORD PTR es:[edi],dx
  40ced7:	mov    edi,0x4a5aa7e7
  40cedc:	imul   ebx,DWORD PTR [eax-0x47],0x83793001
  40cee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cee4:	xchg   ebp,eax
  40cee5:	les    eax,FWORD PTR [ecx]
  40cee7:	aas    
  40cee8:	test   DWORD PTR [ecx],esp
  40ceea:	inc    ebx
  40ceeb:	and    bl,dh
  40ceed:	xor    BYTE PTR [edx],dl
  40ceef:	jmp    0x3a2eb0fd
  40cef4:	mov    edx,0xf55a000b
  40cef9:	and    al,bl
  40cefb:	int3   
  40cefc:	mov    ds:0xdd395b32,eax
  40cf01:	aad    0x71
  40cf03:	sbb    BYTE PTR [ebp+0x28],ch
  40cf06:	wbinvd 
  40cf08:	pop    esp
  40cf09:	adc    ah,BYTE PTR [ebx-0x6a]
  40cf0c:	xchg   ebx,eax
  40cf0d:	xor    al,0x3e
  40cf0f:	sbb    DWORD PTR [edi+0x7e],eax
  40cf12:	in     al,0xd9
  40cf14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf15:	fidivr WORD PTR [ecx+0x24741dea]
  40cf1b:	cdq    
  40cf1c:	mov    ds:0x85183817,al
  40cf21:	and    ch,BYTE PTR [ecx+0x53]
  40cf24:	xchg   ebp,eax
  40cf25:	jl     0x40cf5b
  40cf27:	cs mov al,0xa7
  40cf2a:	pop    ds
  40cf2b:	lods   eax,DWORD PTR ds:[esi]
  40cf2c:	pop    eax
  40cf2d:	xor    dl,bh
  40cf2f:	xchg   ecx,eax
  40cf30:	cmc    
  40cf31:	jns    0x40cf81
  40cf33:	add    bl,cl
  40cf35:	std    
  40cf36:	outs   dx,BYTE PTR ds:[esi]
  40cf37:	in     al,0xde
  40cf39:	lods   al,BYTE PTR ds:[esi]
  40cf3a:	and    DWORD PTR [ecx+0x202b69a6],0xf9385183
  40cf44:	fcomp  QWORD PTR [eax+ebx*1]
  40cf47:	(bad)  
  40cf48:	jbe    0x40cf3d
  40cf4a:	push   edi
  40cf4b:	inc    edi
  40cf4c:	sbb    dl,BYTE PTR [eax+0x3d6746ea]
  40cf52:	jbe    0x40cfc1
  40cf54:	mov    ecx,0x9d3c8949
  40cf59:	enter  0xfdd8,0x33
  40cf5d:	inc    ecx
  40cf5e:	test   BYTE PTR [edi+0x56fa9e6f],cl
  40cf64:	sub    DWORD PTR [edx],0xf
  40cf67:	cwde   
  40cf68:	in     eax,dx
  40cf69:	xor    BYTE PTR ds:0x1cb3f5b3,0x99
  40cf70:	les    esi,FWORD PTR [edi+esi*2]
  40cf73:	(bad)  
  40cf74:	int3   
  40cf75:	je     0x40cf04
  40cf77:	in     eax,0xf
  40cf79:	adc    DWORD PTR [ecx],ebx
  40cf7b:	jbe    0x40cf82
  40cf7d:	mov    eax,0x613b3c91
  40cf82:	mov    edx,DWORD PTR [edx]
  40cf84:	mov    DWORD PTR [ebp+0x74],esi
  40cf87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf88:	cmp    esi,DWORD PTR [edx-0x2c58825f]
  40cf8e:	fstp   QWORD PTR [ebx]
  40cf90:	cwde   
  40cf91:	mov    ebx,0x67a677da
  40cf96:	imul   BYTE PTR [ecx+edx*2-0x27]
  40cf9a:	aad    0x17
  40cf9c:	bound  edx,QWORD PTR [esi+0x24]
  40cf9f:	pop    eax
  40cfa0:	test   DWORD PTR [eax],ebp
  40cfa2:	rcl    BYTE PTR [edx-0x69ff50f2],0x20
  40cfa9:	push   eax
  40cfaa:	loop   0x40cf52
  40cfac:	mov    dh,0x62
  40cfae:	js     0x40cf5c
  40cfb0:	push   0xffffffd9
  40cfb2:	outs   dx,DWORD PTR ds:[esi]
  40cfb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfb4:	xchg   esp,eax
  40cfb5:	inc    DWORD PTR [ebp+0x70ca36f9]
  40cfbb:	mov    ecx,0x6467233
  40cfc0:	jb     0x40cfe8
  40cfc2:	mov    eax,0x89a1408c
  40cfc7:	pop    ecx
  40cfc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc9:	mov    eax,ds:0xaafbbfb9
  40cfce:	in     al,0xa9
  40cfd0:	sub    al,0xce
  40cfd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd3:	out    0xc0,eax
  40cfd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfd7:	jae    0x40cf88
  40cfd9:	outs   dx,DWORD PTR ds:[esi]
  40cfda:	push   cs
  40cfdb:	and    DWORD PTR [ecx+ebx*8+0x42a63e18],eax
  40cfe2:	sti    
  40cfe3:	jb     0x40cfb9
  40cfe5:	mov    ds:0xbe06e10b,al
  40cfea:	hlt    
  40cfeb:	call   FWORD PTR [ebx]
  40cfed:	cmp    BYTE PTR [edx-0x35],0x48
  40cff1:	dec    esp
  40cff2:	test   al,0x5c
  40cff4:	pop    DWORD PTR [edi-0x5f]
  40cff7:	ja     0x40d067
  40cff9:	mov    ecx,ss
  40cffb:	push   0x54
  40cffd:	push   0x28
  40cfff:	xor    edx,DWORD PTR [edi-0x47]
  40d002:	push   esi
  40d003:	xchg   esi,eax
  40d004:	out    0x4,eax
  40d006:	xchg   DWORD PTR [edi+0x71],eax
  40d009:	adc    BYTE PTR [eax-0x420fb2f6],al
  40d00f:	or     bl,BYTE PTR [eax+0x56]
  40d012:	or     ch,BYTE PTR [edx-0x49cd7e]
  40d018:	cmp    BYTE PTR [eax+0x8],dh
  40d01b:	aam    0x4c
  40d01d:	test   DWORD PTR [ebx],eax
  40d01f:	xor    DWORD PTR [edx+0x1c],0xffffffb5
  40d023:	shr    BYTE PTR [eax],0xf0
  40d026:	adc    cl,BYTE PTR [esi]
  40d028:	mov    cl,BYTE PTR [edx+0x2d2b10c6]
  40d02e:	jnp    0x40d00e
  40d030:	shr    BYTE PTR [ecx-0x7b],1
  40d033:	add    eax,0x999b51ee
  40d038:	mov    ds:0xcecf6aab,eax
  40d03d:	jo     0x40d023
  40d03f:	rcl    ah,cl
  40d041:	cmp    eax,0x1f344372
  40d046:	mov    esi,0x1fbe5939
  40d04b:	hlt    
  40d04c:	lea    edx,[eax-0x68]
  40d04f:	cdq    
  40d050:	push   ds
  40d051:	fwait
  40d052:	jo     0x40d0af
  40d054:	adc    eax,0x4b1ed25a
  40d059:	adc    al,bl
  40d05b:	and    eax,0x4252c769
  40d060:	push   edi
  40d061:	xchg   ah,ch
  40d063:	adc    DWORD PTR [ecx],edx
  40d065:	lahf   
  40d066:	lods   eax,DWORD PTR ds:[esi]
  40d067:	stos   DWORD PTR es:[edi],eax
  40d068:	pop    ss
  40d069:	jnp    0x40d098
  40d06b:	mov    eax,eax
  40d06d:	inc    edi
  40d06e:	std    
  40d06f:	pop    esp
  40d070:	outs   dx,DWORD PTR ds:[esi]
  40d071:	and    cl,BYTE PTR [edx*8+0x4d1998fc]
  40d078:	adc    al,0x3c
  40d07a:	imul   eax,DWORD PTR [esi-0x4b869bfc],0xc69f143d
  40d084:	add    eax,0xb3f15c17
  40d089:	push   edi
  40d08a:	jae    0x40d0b2
  40d08c:	stos   DWORD PTR es:[edi],eax
  40d08d:	push   edx
  40d08e:	ror    DWORD PTR [ebx+0x7a],cl
  40d091:	jns    0x40d0bf
  40d093:	add    al,0x64
  40d095:	mov    bh,0x89
  40d097:	dec    ebp
  40d098:	jnp    0x40d04e
  40d09a:	repz fdiv QWORD PTR [ecx-0x21]
  40d09e:	mov    al,0xb0
  40d0a0:	ret    
  40d0a1:	fst    QWORD PTR [ebx]
  40d0a3:	lock test BYTE PTR [edi-0x7abbe1bf],dl
  40d0aa:	shr    BYTE PTR [ebp-0x4e1fc7f3],cl
  40d0b0:	push   ebx
  40d0b1:	pop    esp
  40d0b2:	fisub  DWORD PTR [ebx]
  40d0b4:	cmp    BYTE PTR [edi-0x2fb24f4c],bh
  40d0ba:	mov    ds:0xe68c2ee5,eax
  40d0bf:	jmp    0x40d12d
  40d0c1:	retf   
  40d0c2:	ins    DWORD PTR es:[edi],dx
  40d0c3:	push   eax
  40d0c4:	or     eax,0xe60bf2a8
  40d0c9:	jge    0x40d102
  40d0cb:	jg     0x40d0ac
  40d0cd:	dec    ecx
  40d0ce:	(bad)  
  40d0cf:	jno    0x40d0ce
  40d0d1:	pop    ds
  40d0d2:	dec    ecx
  40d0d3:	cwde   
  40d0d4:	mov    ebx,0x376e3cb
  40d0d9:	sub    BYTE PTR [ebx],cl
  40d0db:	dec    edx
  40d0dc:	sbb    esi,DWORD PTR [edx]
  40d0de:	ins    BYTE PTR es:[edi],dx
  40d0df:	mov    ebp,0xee017a27
  40d0e4:	adc    ecx,eax
  40d0e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0e7:	pop    eax
  40d0e8:	fisubr WORD PTR [ecx+0x6b]
  40d0eb:	jns    0x40d107
  40d0ed:	outs   dx,DWORD PTR ds:[esi]
  40d0ee:	imul   dh
  40d0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0f1:	loop   0x40d07b
  40d0f3:	dec    edx
  40d0f4:	imul   esp,esi,0xd3509028
  40d0fa:	popa   
  40d0fb:	ror    DWORD PTR [edx-0x883eb94],1
  40d101:	cmp    cl,BYTE PTR [eax]
  40d103:	ds jo  0x40d0ca
  40d106:	adc    edx,DWORD PTR [ecx-0x6]
  40d109:	mov    edi,es
  40d10b:	leave  
  40d10c:	add    cl,dh
  40d10e:	mov    edx,0xf5b5190
  40d113:	ret    
  40d114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d115:	in     eax,0xf9
  40d117:	add    eax,0x54601bd2
  40d11c:	or     eax,0x4314932b
  40d121:	ins    DWORD PTR es:[edi],dx
  40d122:	aaa    
  40d123:	nop
  40d124:	in     eax,0xb3
  40d126:	aad    0x3
  40d128:	push   ss
  40d129:	push   eax
  40d12a:	or     dh,al
  40d12c:	sub    DWORD PTR [edx+0x3c],esp
  40d12f:	es stos DWORD PTR es:[edi],eax
  40d131:	or     BYTE PTR [edx-0x36],ch
  40d134:	jns    0x40d1af
  40d136:	xor    eax,0x8a4c260
  40d13b:	push   esp
  40d13c:	hlt    
  40d13d:	aam    0xcd
  40d13f:	cmp    DWORD PTR [eax],ecx
  40d141:	leave  
  40d142:	test   DWORD PTR [edi+0x7f],ecx
  40d145:	or     DWORD PTR [ebp+0xb],edi
  40d148:	xchg   dh,cl
  40d14a:	jle    0x40d0e4
  40d14c:	imul   edi,DWORD PTR [esi-0x4dcf3f7e],0x8143b1e6
  40d156:	arpl   WORD PTR [edx],bp
  40d158:	ret    0x6f13
  40d15b:	inc    edx
  40d15c:	test   al,0x4f
  40d15e:	xchg   ebx,eax
  40d15f:	mov    al,ds:0x4e3bb88
  40d164:	(bad)  
  40d165:	nop
  40d166:	shl    BYTE PTR [ecx+0x15],0xdb
  40d16a:	scas   al,BYTE PTR es:[edi]
  40d16b:	(bad)  
  40d16c:	jl     0x40d18b
  40d16e:	popa   
  40d16f:	adc    edx,esi
  40d171:	imul   ebp,edi,0xfffffff8
  40d174:	lea    esp,[ebp-0xe58c2c4]
  40d17a:	in     al,0xfd
  40d17c:	add    eax,0x12f36f1c
  40d181:	adc    BYTE PTR cs:0xa40c0a6f,dl
  40d188:	adc    eax,0x90c300ea
  40d18d:	dec    esp
  40d18e:	or     ch,BYTE PTR [ebx-0x6b]
  40d191:	and    eax,0x3201060e
  40d196:	mov    al,ds:0xb30cf2f4
  40d19b:	dec    edi
  40d19c:	dec    ebp
  40d19d:	dec    eax
  40d19e:	popa   
  40d19f:	into   
  40d1a0:	(bad)
  40d1a3:	dec    edi
  40d1a4:	pushf  
  40d1a5:	push   edi
  40d1a6:	fisubr DWORD PTR [ebx-0x48]
  40d1a9:	jle    0x40d1de
  40d1ab:	inc    esp
  40d1ac:	push   0xc4fe32ee
  40d1b1:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b3:	xlat   BYTE PTR ds:[ebx]
  40d1b4:	ss loopne 0x40d1d4
  40d1b7:	ss xchg esp,eax
  40d1b9:	fisub  DWORD PTR [ebp-0x76]
  40d1bc:	or     al,0x97
  40d1be:	jg     0x40d1dc
  40d1c0:	mov    al,0x1c
  40d1c2:	cmp    al,0x42
  40d1c4:	xor    BYTE PTR [edi],ch
  40d1c6:	cmp    ch,0xa0
  40d1c9:	not    ah
  40d1cb:	xor    bh,dh
  40d1cd:	enter  0xe3be,0x5
  40d1d1:	xor    eax,0x29f7f02e
  40d1d6:	and    bh,ah
  40d1d8:	stos   DWORD PTR es:[edi],eax
  40d1d9:	(bad)  
  40d1da:	fistp  WORD PTR [ebp+0x34]
  40d1dd:	and    ebp,ecx
  40d1df:	xchg   esi,eax
  40d1e0:	cmp    bl,BYTE PTR [ecx+0x752c08d]
  40d1e6:	(bad)  [ebx+eax*4]
  40d1e9:	jnp    0x40d229
  40d1eb:	sub    BYTE PTR [esi],dh
  40d1ed:	ja     0x40d1f6
  40d1ef:	cmp    edx,ebp
  40d1f1:	rcl    BYTE PTR [eax+0x2203bdb6],1
  40d1f7:	iret   
  40d1f8:	sub    DWORD PTR [edi+0x27f53d3f],esi
  40d1fe:	pusha  
  40d1ff:	push   esp
  40d200:	stos   DWORD PTR es:[edi],eax
  40d201:	lds    ebp,FWORD PTR [edx+0xb]
  40d204:	pop    ebp
  40d205:	pop    es
  40d206:	pop    ebp
  40d207:	fiadd  DWORD PTR [edi-0x6a]
  40d20a:	fcmovnb st,st(3)
  40d20c:	fnstcw WORD PTR [ecx-0x35]
  40d20f:	loop   0x40d247
  40d211:	js     0x40d1b3
  40d213:	lahf   
  40d214:	aam    0x0
  40d216:	or     DWORD PTR [esi+0x5ea6cb21],0xffffffc2
  40d21d:	div    BYTE PTR [esi-0x4d]
  40d220:	int3   
  40d221:	xchg   esi,eax
  40d222:	js     0x40d22e
  40d224:	jle    0x40d264
  40d226:	test   DWORD PTR [eax-0x7c],edx
  40d229:	ins    DWORD PTR es:[edi],dx
  40d22a:	cmp    eax,DWORD PTR [edx]
  40d22c:	jno    0x40d1e0
  40d22e:	shr    BYTE PTR ds:0x558de367,0x28
  40d235:	mov    ebp,0x7a002973
  40d23a:	scas   eax,DWORD PTR es:[edi]
  40d23b:	fldcw  WORD PTR [ebx]
  40d23d:	xchg   edx,eax
  40d23e:	add    BYTE PTR ds:0xbf1fdbbf,bh
  40d244:	jne    0x40d2a6
  40d246:	xchg   esi,eax
  40d247:	aaa    
  40d248:	cld    
  40d249:	jle    0x40d26f
  40d24b:	and    DWORD PTR [eax-0x467921e0],edx
  40d251:	xchg   ebx,eax
  40d252:	cmp    DWORD PTR [ebx],esi
  40d254:	mov    ah,0x54
  40d256:	not    BYTE PTR [eax-0x16]
  40d259:	adc    ah,BYTE PTR [ebx+0x7bec0644]
  40d25f:	mov    edi,0x5ddb8e90
  40d264:	out    0xb,eax
  40d266:	js     0x40d2e2
  40d268:	inc    ebx
  40d269:	fwait
  40d26a:	in     al,dx
  40d26b:	test   DWORD PTR [ecx],esi
  40d26d:	shr    BYTE PTR [ebx+0x674e7db],1
  40d273:	rcr    DWORD PTR [ebx+ebx*4+0x48],0xbc
  40d278:	pop    esi
  40d279:	mov    ch,0xe7
  40d27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d27c:	jmp    0xf8f97788
  40d281:	je     0x40d2a3
  40d283:	xor    bh,ch
  40d285:	xchg   ebx,eax
  40d286:	jmp    FWORD PTR [ecx+0x1d]
  40d289:	int    0x31
  40d28b:	popa   
  40d28c:	mov    ebx,0x12d02cfc
  40d291:	aas    
  40d292:	ret    
  40d293:	aaa    
  40d294:	cli    
  40d295:	jecxz  0x40d29e
  40d297:	out    dx,eax
  40d298:	sbb    al,BYTE PTR [edx]
  40d29a:	cmp    ebx,DWORD PTR [eax]
  40d29c:	scas   al,BYTE PTR es:[edi]
  40d29d:	jge    0x40d308
  40d29f:	mov    dl,0x62
  40d2a1:	dec    ebx
  40d2a2:	popf   
  40d2a3:	adc    ah,BYTE PTR [edx-0x27bbc79a]
  40d2a9:	daa    
  40d2aa:	add    eax,0x29fb2f99
  40d2af:	dec    esp
  40d2b0:	rol    BYTE PTR [edx],cl
  40d2b2:	(bad)  
  40d2b3:	jnp    0x40d2fa
  40d2b5:	mov    edx,0x6048c78f
  40d2ba:	fild   WORD PTR ds:0x204a7430
  40d2c0:	es pop esi
  40d2c2:	test   DWORD PTR [eax+0x40683e07],edx
  40d2c8:	mov    bl,0xbc
  40d2ca:	loopne 0x40d28d
  40d2cc:	mov    ebp,0x4ab4dc57
  40d2d1:	push   ds
  40d2d2:	pop    ecx
  40d2d3:	xchg   BYTE PTR ds:0x930f6243,bl
  40d2d9:	dec    esi
  40d2da:	pop    ss
  40d2db:	int    0x9f
  40d2dd:	js     0x40d322
  40d2df:	jo     0x40d26f
  40d2e1:	jo     0x40d271
  40d2e3:	mov    cs,WORD PTR [edx+edi*2-0x5a09527a]
  40d2ea:	jle    0x40d283
  40d2ec:	mov    bh,BYTE PTR [edx-0x5e]
  40d2ef:	int3   
  40d2f0:	xor    dl,bh
  40d2f2:	xchg   ebp,eax
  40d2f3:	or     al,0x5d
  40d2f5:	push   esp
  40d2f6:	stc    
  40d2f7:	push   edi
  40d2f8:	je     0x40d312
  40d2fa:	rep ins BYTE PTR es:[edi],dx
  40d2fc:	jne    0x40d330
  40d2fe:	cmp    al,0xb2
  40d300:	int3   
  40d301:	mov    ds:0xe61d4654,eax
  40d306:	scas   eax,DWORD PTR es:[edi]
  40d307:	xchg   edx,eax
  40d308:	mov    ecx,0x65421372
  40d30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d30e:	ins    BYTE PTR es:[edi],dx
  40d30f:	ret    
  40d310:	ins    DWORD PTR es:[edi],dx
  40d311:	mov    ebp,0x2aff88b3
  40d316:	into   
  40d317:	sbb    BYTE PTR [ecx],al
  40d319:	test   BYTE PTR [edx],cl
  40d31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d31c:	ins    BYTE PTR es:[edi],dx
  40d31d:	js     0x40d2cb
  40d31f:	jg     0x40d35f
  40d321:	sahf   
  40d322:	gs (bad) 
  40d324:	(bad)  
  40d325:	out    dx,eax
  40d326:	(bad)  
  40d327:	xchg   edx,eax
  40d328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d329:	push   ebp
  40d32a:	jmp    0x79c0ef55
  40d32f:	mov    esp,0xe80e70fa
  40d334:	xchg   edi,eax
  40d335:	and    bl,ch
  40d337:	daa    
  40d338:	mov    ds:0x1b85df6c,eax
  40d33d:	dec    edi
  40d33e:	xor    eax,0x64b613d5
  40d343:	mov    al,0x56
  40d345:	int3   
  40d346:	or     ebx,DWORD PTR [edi]
  40d348:	sbb    edx,esi
  40d34a:	pop    ecx
  40d34b:	mov    cl,bl
  40d34d:	push   0x359dc9af
  40d352:	inc    eax
  40d353:	cdq    
  40d354:	jecxz  0x40d357
  40d356:	clc    
  40d357:	arpl   WORD PTR [edx+eax*4+0x1f],bp
  40d35b:	push   esp
  40d35c:	int3   
  40d35d:	inc    esi
  40d35e:	jmp    0xb984:0x60c624d4
  40d365:	sbb    eax,0x59143fa0
  40d36a:	ror    DWORD PTR [edx+ebp*1+0x2378348f],0x43
  40d372:	lea    ebp,[edi+0x2dc1961f]
  40d378:	xchg   ebx,eax
  40d379:	lahf   
  40d37a:	pop    esi
  40d37b:	cmc    
  40d37c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d37d:	inc    eax
  40d37e:	frstor [esi+eiz*1-0x4d]
  40d382:	add    ebx,DWORD PTR [edx+0x3e]
  40d385:	or     ebx,edx
  40d387:	js     0x40d3ec
  40d389:	in     eax,dx
  40d38a:	les    ebp,FWORD PTR [edi]
  40d38c:	sub    al,dh
  40d38e:	mov    edx,0xdf9ccf2a
  40d393:	cmp    DWORD PTR [esi],eax
  40d395:	and    DWORD PTR [eax-0x6f],esp
  40d398:	push   es
  40d399:	das    
  40d39a:	push   0x63
  40d39c:	repnz test BYTE PTR [ebp+eax*4-0x7c12b2f2],0x85
  40d3a5:	mov    eax,0x83165cec
  40d3aa:	or     al,0x77
  40d3ac:	idiv   DWORD PTR [ecx+0x6de724fb]
  40d3b2:	jge    0x40d3ff
  40d3b4:	or     cl,BYTE PTR [edi]
  40d3b6:	inc    esi
  40d3b7:	pushf  
  40d3b8:	and    al,BYTE PTR [esi-0x45782b3]
  40d3be:	adc    edi,0x176016bb
  40d3c4:	bound  eax,QWORD PTR [edi]
  40d3c6:	jl     0x40d34b
  40d3c8:	daa    
  40d3c9:	sahf   
  40d3ca:	dec    esi
  40d3cb:	cmc    
  40d3cc:	push   esp
  40d3cd:	pusha  
  40d3ce:	jg     0x40d37e
  40d3d0:	xor    al,0x2f
  40d3d2:	les    ebx,FWORD PTR [esi+0x25e30ba1]
  40d3d8:	repnz dec eax
  40d3da:	and    DWORD PTR [ebx],edx
  40d3dc:	pop    edi
  40d3dd:	shl    ebp,cl
  40d3df:	add    al,0xf5
  40d3e1:	in     eax,dx
  40d3e2:	lahf   
  40d3e3:	cdq    
  40d3e4:	mov    ecx,0x5990c36
  40d3e9:	sub    al,0xbc
  40d3eb:	or     ch,BYTE PTR [edx+0x28d100a5]
  40d3f1:	fidiv  WORD PTR [ebx-0x6bc7db44]
  40d3f7:	mov    cl,0xb1
  40d3f9:	mov    eax,ss
  40d3fb:	and    al,0xcc
  40d3fd:	out    0x4a,al
  40d3ff:	daa    
  40d400:	inc    edi
  40d401:	lods   eax,DWORD PTR ds:[esi]
  40d402:	sbb    cl,BYTE PTR ds:[ebp+0x61bbbdeb]
  40d409:	inc    ecx
  40d40a:	loope  0x40d3c0
  40d40c:	push   ebx
  40d40d:	cmp    eax,0xf4c73509
  40d412:	cmp    eax,0x46d7b8c4
  40d417:	(bad)  
  40d419:	push   eax
  40d41a:	sub    eax,0x538c65f0
  40d41f:	xchg   BYTE PTR [ecx-0x42],bl
  40d422:	mov    eax,0x82c921dd
  40d427:	pop    esp
  40d428:	popa   
  40d429:	mov    eax,ds:0x5931a775
  40d42e:	stos   DWORD PTR es:[edi],eax
  40d42f:	popf   
  40d430:	(bad)  
  40d431:	mul    esi
  40d433:	in     al,dx
  40d434:	ret    
  40d435:	push   ebp
  40d436:	mov    ebx,0x471dafe0
  40d43b:	push   esi
  40d43c:	push   ebp
  40d43d:	es jp  0x40d415
  40d440:	jp     0x40d410
  40d442:	mov    ebp,DWORD PTR [ecx+0xf41b381]
  40d448:	inc    edx
  40d449:	inc    esi
  40d44a:	mov    esp,DWORD PTR [ebp+0x0]
  40d44d:	rcl    DWORD PTR ds:0x5e6cac6c,0xc
  40d454:	jno    0x40d493
  40d456:	cs adc al,0x92
  40d459:	sbb    edi,edi
  40d45b:	or     al,ch
  40d45d:	pop    ebp
  40d45e:	adc    eax,0x6500eb77
  40d463:	dec    ebp
  40d464:	mov    dh,0x93
  40d466:	push   edx
  40d467:	or     DWORD PTR [ebx+0x7f],eax
  40d46a:	enter  0x998d,0xf2
  40d46e:	aas    
  40d46f:	scas   eax,DWORD PTR es:[edi]
  40d470:	enter  0x1e,0x9d
  40d474:	mov    bl,0x8a
  40d476:	mov    dl,0x5a
  40d478:	pusha  
  40d479:	fwait
  40d47a:	add    eax,0xc2708c71
  40d47f:	push   cs
  40d480:	pcmpeqw mm6,mm3
  40d483:	mov    al,0x32
  40d485:	(bad)  
  40d486:	jecxz  0x40d4ab
  40d488:	mov    DWORD PTR [ebp-0x74],ebx
  40d48b:	das    
  40d48c:	nop
  40d48d:	add    al,0xf9
  40d48f:	lods   eax,DWORD PTR ds:[esi]
  40d490:	mov    bl,0xaf
  40d492:	jmp    0xf3cc5401
  40d497:	jmp    0xb873:0x124ae503
  40d49e:	(bad)  
  40d49f:	cmp    ah,bl
  40d4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4a2:	and    DWORD PTR [edi-0x76b1e7bf],ebp
  40d4a8:	push   ss
  40d4a9:	lods   eax,DWORD PTR ds:[esi]
  40d4aa:	pop    esp
  40d4ab:	out    dx,al
  40d4ac:	sub    DWORD PTR [edx],ebx
  40d4ae:	(bad)  
  40d4af:	xor    esi,DWORD PTR [ecx]
  40d4b1:	add    BYTE PTR [edx],0xf8
  40d4b4:	push   es
  40d4b5:	(bad)  
  40d4b6:	and    eax,0x1ef3f42c
  40d4bb:	push   0xffffffc7
  40d4bd:	sbb    eax,0x254985e2
  40d4c2:	pop    esp
  40d4c3:	inc    eax
  40d4c4:	je     0x40d530
  40d4c6:	cmp    DWORD PTR [ecx],edx
  40d4c8:	dec    edx
  40d4c9:	inc    ecx
  40d4ca:	mov    BYTE PTR [ebp+0x77],ah
  40d4cd:	or     bh,BYTE PTR [ebp-0x785ac87d]
  40d4d3:	popf   
  40d4d4:	dec    ebp
  40d4d5:	mov    eax,ds:0x14f2f5d9
  40d4da:	xchg   edx,eax
  40d4db:	jecxz  0x40d4e9
  40d4dd:	leave  
  40d4de:	pusha  
  40d4df:	xchg   esi,eax
  40d4e0:	pop    es
  40d4e1:	sti    
  40d4e2:	adc    ebp,DWORD PTR [ebx+0x6d]
  40d4e5:	lods   eax,DWORD PTR ds:[esi]
  40d4e6:	xor    DWORD PTR [esp+ebx*1],0x45
  40d4ea:	push   eax
  40d4eb:	aaa    
  40d4ec:	fnstsw WORD PTR [edx]
  40d4ee:	push   ebx
  40d4ef:	xchg   esi,eax
  40d4f0:	fcmovbe st,st(2)
  40d4f2:	push   ss
  40d4f3:	imul   edx,DWORD PTR [edi],0xe2beb377
  40d4f9:	jge    0x40d484
  40d4fb:	ret    0xc880
  40d4fe:	stos   BYTE PTR es:[edi],al
  40d4ff:	in     eax,dx
  40d500:	jecxz  0x40d49f
  40d502:	rcl    BYTE PTR [esi-0x4779e4d3],1
  40d508:	fdiv   DWORD PTR [ecx]
  40d50a:	ret    
  40d50b:	adc    BYTE PTR [edi+0x46],ch
  40d50e:	clc    
  40d50f:	sub    eax,0x9f0c181c
  40d514:	mov    sp,0x1309
  40d518:	leave  
  40d519:	mov    edi,0xb9568789
  40d51e:	mov    bh,0x66
  40d520:	dec    ecx
  40d521:	pop    ss
  40d522:	add    DWORD PTR [ebp+0x22],ebp
  40d525:	outs   dx,DWORD PTR ds:[esi]
  40d526:	cmp    al,0x25
  40d528:	adc    DWORD PTR [edx-0x1a77e407],edx
  40d52e:	retf   0x83
  40d531:	xchg   ebx,eax
  40d532:	xchg   esi,eax
  40d533:	and    esi,DWORD PTR [ebx-0x5436926d]
  40d539:	lock pop eax
  40d53b:	xchg   esp,eax
  40d53c:	jmp    0xefa1:0x53e0b88c
  40d543:	rcr    BYTE PTR [edx-0x17],0x99
  40d547:	and    DWORD PTR [ecx-0x2e],edi
  40d54a:	pop    esi
  40d54b:	sbb    al,0x32
  40d54d:	or     al,0x48
  40d54f:	sar    BYTE PTR [ebp-0x4b65469],0x9b
  40d556:	aad    0x18
  40d558:	pop    eax
  40d559:	push   ds
  40d55a:	cmc    
  40d55b:	(bad)  
  40d55c:	cld    
  40d55d:	pusha  
  40d55e:	mov    al,0xf7
  40d560:	fwait
  40d561:	outs   dx,DWORD PTR ds:[esi]
  40d562:	popf   
  40d563:	xor    cl,BYTE PTR [ecx-0x50]
  40d566:	and    BYTE PTR [ebp+eax*4+0x68fe337d],0xb9
  40d56e:	test   BYTE PTR [esi*1-0x139f700a],al
  40d575:	loopne 0x40d524
  40d577:	jno    0x7ac61947
  40d57d:	retf   0x7362
  40d580:	(bad)  
  40d581:	je     0x40d5a0
  40d583:	test   al,0x12
  40d585:	mov    ds:0x2c1be69f,eax
  40d58a:	or     al,0x3c
  40d58c:	mov    ebp,0x8d49763b
  40d591:	push   edi
  40d592:	xchg   esp,eax
  40d593:	fisubr DWORD PTR [ecx-0x49]
  40d596:	rcl    ebx,cl
  40d598:	mov    eax,0x148a2e13
  40d59d:	stos   BYTE PTR es:[edi],al
  40d59e:	mov    ss,WORD PTR [ecx]
  40d5a0:	cld    
  40d5a1:	xor    al,0xef
  40d5a3:	push   esp
  40d5a4:	stc    
  40d5a5:	push   esp
  40d5a6:	push   0x70
  40d5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5a9:	jb     0x40d592
  40d5ab:	jb     0x40d576
  40d5ad:	test   eax,0x40ec0778
  40d5b2:	std    
  40d5b3:	or     BYTE PTR [edx-0x5a],0xb2
  40d5b7:	or     BYTE PTR [esi+0x77],bl
  40d5ba:	rcr    BYTE PTR [ebx+0x14],0x9
  40d5be:	mov    ah,0x36
  40d5c0:	pushf  
  40d5c1:	repz fs cmp eax,0x87991939
  40d5c8:	jns    0x40d59b
  40d5ca:	fdivr  QWORD PTR [esi]
  40d5cc:	dec    edx
  40d5cd:	mov    eax,ds:0xcdb29355
  40d5d2:	cmp    esi,DWORD PTR [edx]
  40d5d4:	fs stc 
  40d5d6:	jmp    0x88f5:0xf426c1b1
  40d5dd:	inc    esp
  40d5de:	push   eax
  40d5df:	ds daa 
  40d5e1:	int    0x90
  40d5e3:	xor    al,dl
  40d5e5:	fnsave [edx-0x5f]
  40d5e8:	xchg   DWORD PTR [esi],esi
  40d5ea:	adc    eax,eax
  40d5ec:	into   
  40d5ed:	inc    edx
  40d5ee:	push   esi
  40d5f0:	mov    cl,0x59
  40d5f2:	and    ecx,DWORD PTR [edx]
  40d5f4:	push   ebp
  40d5f5:	mov    esp,0x7d2eadaf
  40d5fa:	fdivr  DWORD PTR [ebp-0x523d6c24]
  40d600:	mov    eax,ds:0x3b9c6e82
  40d605:	push   ss
  40d606:	cmp    DWORD PTR [edx],ecx
  40d608:	push   ebx
  40d609:	daa    
  40d60a:	(bad)  
  40d60b:	fcomp  QWORD PTR [ebx]
  40d60d:	outs   dx,BYTE PTR ds:[esi]
  40d60e:	aad    0xbc
  40d610:	mov    ebp,0x8e8d25fa
  40d615:	daa    
  40d616:	scas   al,BYTE PTR es:[edi]
  40d617:	lds    esi,FWORD PTR [edx-0x47c5899e]
  40d61d:	stos   DWORD PTR es:[edi],eax
  40d61e:	leave  
  40d61f:	pop    eax
  40d620:	push   ebx
  40d621:	das    
  40d622:	push   ebx
  40d623:	xchg   ebp,eax
  40d624:	sub    ebx,eax
  40d626:	and    DWORD PTR [ebp+0x62],esi
  40d629:	(bad)  
  40d62a:	repz dec ebx
  40d62c:	cli    
  40d62d:	or     eax,0x8537010
  40d632:	mov    ebp,0xa687561d
  40d637:	ret    
  40d638:	adc    esp,DWORD PTR [esi+eax*8-0x65]
  40d63c:	enter  0x4567,0xef
  40d640:	or     al,0xb8
  40d642:	push   0xaa53fedf
  40d647:	add    esi,ecx
  40d649:	shr    eax,1
  40d64b:	out    0xaf,al
  40d64d:	sbb    cl,BYTE PTR [ebp+0x64d0a128]
  40d653:	scas   eax,DWORD PTR es:[edi]
  40d654:	jp     0x40d60a
  40d656:	imul   esi,DWORD PTR [eax+0x53],0x7482400b
  40d65d:	test   eax,0x37a383e1
  40d662:	(bad)  
  40d663:	jne    0x40d66e
  40d665:	pop    es
  40d666:	jae    0x40d6b8
  40d668:	fidiv  DWORD PTR [ecx+0x538e3af1]
  40d66e:	imul   edx,DWORD PTR [eax-0x107a924],0xb650415b
  40d678:	test   BYTE PTR [ecx],bh
  40d67a:	dec    esi
  40d67b:	loope  0x40d650
  40d67d:	mov    edi,DWORD PTR [edi-0x57644a73]
  40d683:	add    BYTE PTR [eax],ch
  40d685:	mov    eax,0x6d4e4f4d
  40d68a:	xlat   BYTE PTR ds:[ebx]
  40d68b:	add    bh,bl
  40d68d:	nop
  40d68e:	ss mov edx,0x39fc9d99
  40d694:	add    eax,0x205f3d93
  40d699:	loopne 0x40d6e7
  40d69b:	fisub  DWORD PTR [esi+0x39]
  40d69e:	adc    edi,DWORD PTR ds:0x37b6beb6
  40d6a4:	sbb    eax,0xf5f6d8ee
  40d6a9:	(bad)  
  40d6aa:	push   ds
  40d6ab:	fld    QWORD PTR [ecx+eax*8]
  40d6ae:	stos   DWORD PTR es:[edi],eax
  40d6af:	and    edi,DWORD PTR [ebx+ecx*1]
  40d6b2:	sub    eax,0x70f302ea
  40d6b7:	shl    BYTE PTR [edx-0x43],1
  40d6ba:	mov    ebx,0x19a15431
  40d6bf:	jecxz  0x40d6c5
  40d6c1:	call   0x5d1d:0x8a444d33
  40d6c8:	xchg   edx,eax
  40d6c9:	pop    esi
  40d6ca:	inc    esp
  40d6cb:	je     0x40d710
  40d6cd:	iret   
  40d6ce:	push   cs
  40d6cf:	fnstenv [ebx+0x75]
  40d6d2:	inc    edi
  40d6d3:	xchg   edi,eax
  40d6d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d5:	mov    ds:0x479f7069,al
  40d6da:	mov    edi,0xebea82c0
  40d6df:	mov    DWORD PTR [ecx],ebp
  40d6e1:	inc    esp
  40d6e2:	sbb    edi,esp
  40d6e4:	jecxz  0x40d6ad
  40d6e6:	fdiv   st(1),st
  40d6e8:	jmp    0x5040b335
  40d6ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ee:	mov    esp,0x6b425279
  40d6f3:	iret   
  40d6f4:	pop    es
  40d6f5:	sbb    DWORD PTR [edx+0xf],0xffffffdc
  40d6f9:	sub    edx,ebp
  40d6fb:	fdivr  DWORD PTR [ebx]
  40d6fd:	xor    eax,0xc13e84ed
  40d702:	jbe    0x40d744
  40d704:	stc    
  40d705:	sub    bl,BYTE PTR [ebx+ebx*1]
  40d708:	das    
  40d709:	(bad)  
  40d70b:	pusha  
  40d70c:	and    ecx,ecx
  40d70e:	cmp    edx,DWORD PTR [esi-0x22]
  40d711:	repz cmp BYTE PTR [esi],bl
  40d714:	call   0x4646:0x30a61416
  40d71b:	sbb    eax,0x759a9cf2
  40d720:	sahf   
  40d721:	or     DWORD PTR [eax-0x6c],esi
  40d724:	or     ch,ch
  40d726:	inc    ecx
  40d727:	jp     0x40d799
  40d729:	jo     0x40d79b
  40d72b:	sub    ebp,DWORD PTR [ebx-0x1e6fdd97]
  40d731:	leave  
  40d732:	and    ch,BYTE PTR [ebx-0x687d5a33]
  40d738:	pop    ebp
  40d739:	jg     0x40d79c
  40d73b:	dec    esp
  40d73c:	dec    eax
  40d73d:	mov    ds:0xe96c1587,al
  40d742:	jo     0x40d6fd
  40d744:	stos   DWORD PTR es:[edi],eax
  40d745:	mov    ecx,0x9b073d40
  40d74a:	push   esi
  40d74b:	and    DWORD PTR [edx+edx*4+0x40],esi
  40d74f:	mov    bh,0xb6
  40d751:	or     DWORD PTR [edx+ebp*2+0xcdf8a81],esi
  40d758:	add    al,0xc5
  40d75a:	fcom   QWORD PTR [esi+0x38]
  40d75d:	shl    al,1
  40d75f:	aaa    
  40d760:	mov    cl,0x17
  40d762:	add    ah,0xeb
  40d765:	xchg   esi,eax
  40d766:	jno    0x40d7b0
  40d768:	mov    ds:0x4f337575,eax
  40d76d:	and    BYTE PTR ds:0xf0981252,cl
  40d773:	jae    0x40d7ea
  40d775:	xchg   ebp,eax
  40d776:	shr    BYTE PTR [ebp+0x12],cl
  40d779:	mov    ebx,0x29bcd343
  40d77e:	xchg   ebp,eax
  40d77f:	mov    DWORD PTR [esp+ebp*8],esi
  40d782:	test   BYTE PTR [edx],ah
  40d784:	daa    
  40d785:	clc    
  40d786:	retf   0xf3e0
  40d789:	clc    
  40d78a:	out    0x72,al
  40d78c:	xchg   edx,eax
  40d78d:	repnz inc ebp
  40d78f:	jne    0x40d7f1
  40d791:	mov    ebp,0x2ba467a5
  40d796:	out    dx,eax
  40d797:	jnp    0x40d794
  40d799:	imul   ecx,DWORD PTR [ebp+0x4],0x72
  40d79d:	int3   
  40d79e:	rsqrtps xmm2,xmm5
  40d7a1:	pop    edx
  40d7a2:	rcl    dh,0x2e
  40d7a5:	sbb    bh,BYTE PTR [ecx-0x5b]
  40d7a8:	fmul   DWORD PTR [ebx+eax*2]
  40d7ab:	pop    ds
  40d7ac:	ins    DWORD PTR es:[edi],dx
  40d7ad:	jmp    0x8e9e:0x9ff7d84b
  40d7b4:	mov    al,0x63
  40d7b6:	pop    ebx
  40d7b7:	sbb    ecx,DWORD PTR [ecx-0x2c]
  40d7ba:	push   ds
  40d7bb:	into   
  40d7bc:	mov    esp,0xd783e3d2
  40d7c1:	leave  
  40d7c2:	aaa    
  40d7c3:	stos   DWORD PTR es:[edi],eax
  40d7c4:	outs   dx,BYTE PTR ds:[esi]
  40d7c5:	les    ecx,FWORD PTR [bp+si+0x2]
  40d7c9:	loop   0x40d798
  40d7cb:	pop    edi
  40d7cc:	push   eax
  40d7cd:	repnz scas eax,DWORD PTR es:[edi]
  40d7cf:	nop
  40d7d0:	fild   WORD PTR [edi]
  40d7d2:	sub    eax,0xe5f85387
  40d7d7:	cld    
  40d7d8:	inc    eax
  40d7d9:	jp     0x40d769
  40d7db:	push   ebp
  40d7dc:	xchg   BYTE PTR [eax+0x70109b5],dl
  40d7e2:	enter  0xfd98,0xf2
  40d7e6:	out    0x53,al
  40d7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e9:	scas   al,BYTE PTR es:[edi]
  40d7ea:	mov    al,0x3e
  40d7ec:	sub    eax,0x1de34906
  40d7f1:	add    eax,0x212dbb49
  40d7f6:	sbb    al,0xdd
  40d7f8:	xor    cl,BYTE PTR [ebp-0x19]
  40d7fb:	sbb    dl,al
  40d7fd:	fild   QWORD PTR [edx-0x17]
  40d800:	inc    esp
  40d801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d802:	pop    ebx
  40d803:	jmp    0xef3dd2df
  40d808:	jno    0x40d7d9
  40d80a:	dec    dh
  40d80c:	xor    eax,0x895ee60b
  40d812:	add    eax,0x6aa51cf8
  40d817:	ins    DWORD PTR es:[edi],dx
  40d818:	push   0xffffffb9
  40d81a:	stc    
  40d81b:	jne    0x40d809
  40d81d:	fcom   QWORD PTR [edi-0x41]
  40d820:	pminub mm5,QWORD PTR [edx+0x582d6ff0]
  40d827:	dec    eax
  40d828:	mov    eax,ds:0xefb8f25
  40d82d:	popa   
  40d82e:	inc    esp
  40d82f:	mov    al,0x52
  40d831:	mov    esp,ecx
  40d833:	out    0xf7,al
  40d835:	and    al,0xd8
  40d837:	ret    
  40d838:	jl     0x40d819
  40d83a:	add    DWORD PTR [eax],esi
  40d83c:	fwait
  40d83d:	je     0x40d7fe
  40d83f:	or     BYTE PTR [ecx],al
  40d841:	pop    ecx
  40d842:	bnd ja 0x40d7e6
  40d845:	push   cs
  40d846:	sahf   
  40d847:	scas   al,BYTE PTR es:[edi]
  40d848:	mov    bl,dl
  40d84a:	dec    esi
  40d84b:	xchg   edx,eax
  40d84c:	in     eax,0x54
  40d84e:	jb     0x40d808
  40d850:	pusha  
  40d851:	mov    ss,WORD PTR [ebx+edx*4-0x1f2cd84d]
  40d858:	pop    eax
  40d859:	mov    DWORD PTR [edx],edx
  40d85b:	loope  0x40d8a6
  40d85d:	push   eax
  40d85e:	nop
  40d85f:	(bad)  [esi+0x6578e79a]
  40d865:	mov    dl,0xed
  40d867:	jno    0x40d85c
  40d869:	scas   eax,DWORD PTR es:[edi]
  40d86a:	sub    eax,0xacd188a2
  40d86f:	ret    
  40d870:	dec    eax
  40d871:	mov    esi,0x9e72e8f5
  40d876:	(bad)  
  40d878:	test   eax,0xfdf07f18
  40d87d:	jmp    0x7bad2c4
  40d882:	mov    bl,0xf1
  40d884:	out    0xa7,al
  40d886:	out    0x7d,al
  40d888:	(bad)  
  40d889:	push   0x4c
  40d88b:	test   DWORD PTR [edx+0x709e45cc],ebx
  40d891:	fdivr  QWORD PTR [esi+0x30]
  40d894:	(bad)  
  40d895:	fidiv  WORD PTR [edi+0x2c]
  40d898:	and    DWORD PTR [ecx],ebp
  40d89a:	cmp    DWORD PTR [edi+0x7e],ebx
  40d89d:	or     BYTE PTR [edx],0x42
  40d8a0:	xchg   BYTE PTR ds:0x7c09a353,bh
  40d8a6:	xor    al,0x9f
  40d8a8:	loopne 0x40d84b
  40d8aa:	clc    
  40d8ab:	dec    ebp
  40d8ac:	mov    BYTE PTR [eax+0x7909a821],0x9d
  40d8b3:	lea    edi,[ebp+0x6f]
  40d8b6:	imul   ebx,ebp,0xffffff9b
  40d8b9:	icebp  
  40d8ba:	into   
  40d8bb:	sbb    al,0xb6
  40d8bd:	add    DWORD PTR ds:0xed0700ca,ecx
  40d8c3:	push   ebp
  40d8c4:	push   edi
  40d8c5:	cs add al,0xf2
  40d8c8:	and    eax,0x2eab74a1
  40d8cd:	popf   
  40d8ce:	rol    DWORD PTR [edi],0xac
  40d8d1:	out    dx,eax
  40d8d2:	mov    ecx,0xbb66aa42
  40d8d7:	js     0x40d8bc
  40d8d9:	cld    
  40d8da:	test   eax,0xbc8639ed
  40d8df:	std    
  40d8e0:	lods   eax,DWORD PTR ds:[esi]
  40d8e1:	mov    ebp,0x2cfd58b6
  40d8e6:	sbb    ecx,DWORD PTR [eax+0x1b75e384]
  40d8ec:	(bad)  
  40d8ed:	test   al,0x4c
  40d8ef:	dec    esp
  40d8f0:	adc    BYTE PTR [eax],ah
  40d8f2:	jl     0x40d884
  40d8f4:	inc    edx
  40d8f5:	dec    ebx
  40d8f6:	adc    DWORD PTR [edx],ecx
  40d8f8:	jno    0x40d8d4
  40d8fa:	inc    BYTE PTR [edi+0x16c691f2]
  40d900:	int    0xb2
  40d902:	(bad)  
  40d903:	(bad)  
  40d904:	pop    ebx
  40d905:	cmp    DWORD PTR [edx+edi*4-0x78],ebx
  40d909:	xor    esi,DWORD PTR [ebp-0x4f4c7b4f]
  40d90f:	(bad)  
  40d910:	aas    
  40d911:	add    dl,BYTE PTR [eax+0x17]
  40d914:	jo     0x40d958
  40d916:	in     eax,dx
  40d917:	imul   BYTE PTR [edi]
  40d919:	jp     0x40d937
  40d91b:	pop    ds
  40d91c:	scas   eax,DWORD PTR es:[edi]
  40d91d:	popf   
  40d91e:	pop    esp
  40d91f:	pop    ecx
  40d920:	dec    ebx
  40d921:	sbb    al,bh
  40d923:	test   al,0xf4
  40d925:	pop    edi
  40d926:	jns    0x40d8db
  40d928:	outs   dx,DWORD PTR ds:[esi]
  40d929:	mov    ch,0x89
  40d92b:	push   edi
  40d92c:	aad    0x2d
  40d92e:	xchg   cl,ch
  40d930:	in     eax,0x9b
  40d932:	les    ebp,FWORD PTR [edi]
  40d934:	push   ecx
  40d935:	test   al,0xc9
  40d937:	dec    ecx
  40d938:	adc    cl,cl
  40d93a:	mov    WORD PTR [ecx+ebx*4-0x40d72f89],ds
  40d941:	stos   BYTE PTR es:[edi],al
  40d942:	fcom   DWORD PTR [edx+0x2e]
  40d945:	addr16 pop esi
  40d947:	out    0x6d,eax
  40d949:	je     0x40d94a
  40d94b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d94c:	jnp    0x40d8f3
  40d94e:	push   es
  40d94f:	cmp    edi,DWORD PTR [ecx-0x1]
  40d952:	mov    ebx,0x6e1998df
  40d957:	add    eax,0xd29428fa
  40d95c:	adc    edi,DWORD PTR ds:0xc4d8dfb9
  40d962:	js     0x40d8f6
  40d964:	sbb    BYTE PTR [edx],dh
  40d966:	out    dx,eax
  40d967:	mov    dl,0xb3
  40d969:	sub    esi,esi
  40d96b:	mov    al,0x7d
  40d96d:	mov    bl,0xc
  40d96f:	mov    esi,0x5b98cb9d
  40d974:	push   eax
  40d975:	add    DWORD PTR [eax],ebx
  40d977:	and    eax,esp
  40d979:	push   eax
  40d97a:	adc    ebp,0xb482e4e4
  40d980:	imul   esi,DWORD PTR [ebx],0xfffffff0
  40d983:	adc    eax,0xce721688
  40d988:	push   esp
  40d989:	adc    eax,esi
  40d98b:	arpl   WORD PTR [edi-0x7b],dx
  40d98e:	int3   
  40d98f:	pop    esp
  40d990:	adc    ecx,DWORD PTR [edx]
  40d992:	test   al,0xa4
  40d994:	ror    dh,cl
  40d996:	dec    esp
  40d997:	call   0x871c3c85
  40d99c:	push   0x4b
  40d99e:	push   edi
  40d99f:	mov    ds:0x49fe2da8,eax
  40d9a4:	dec    esi
  40d9a5:	retf   0x5454
  40d9a8:	in     al,dx
  40d9a9:	jno    0x40d9a3
  40d9ab:	sti    
  40d9ac:	inc    ebx
  40d9ad:	pushf  
  40d9ae:	pop    ss
  40d9af:	(bad)  
  40d9b0:	push   ebp
  40d9b1:	pop    eax
  40d9b2:	mov    bl,0xa4
  40d9b4:	push   es
  40d9b5:	and    ch,ch
  40d9b7:	sbb    BYTE PTR [ebp-0x685f343d],dh
  40d9bd:	xchg   ecx,eax
  40d9be:	add    BYTE PTR [edx-0x5d],ah
  40d9c1:	pushw  0x3116
  40d9c5:	adc    BYTE PTR [esi+eax*8+0x73260d63],0x9e
  40d9cd:	and    edx,eax
  40d9cf:	xchg   BYTE PTR [ecx+0x6d825388],cl
  40d9d5:	fiadd  DWORD PTR [edi+0x6e]
  40d9d8:	xlat   BYTE PTR ds:[ebx]
  40d9d9:	and    BYTE PTR [ebp-0x4c],0xc
  40d9dd:	or     eax,0x1f9e0a7d
  40d9e2:	test   al,0xc7
  40d9e4:	imul   ebx,ebx,0xffffffed
  40d9e7:	daa    
  40d9e8:	test   eax,0x17a1d3e4
  40d9ed:	cmp    dl,BYTE PTR [eax+0x5e]
  40d9f0:	es mov esp,0xd1bbaafc
  40d9f6:	(bad)  
  40d9f7:	push   0x37
  40d9f9:	fdiv   DWORD PTR ds:0x11e2b615
  40d9ff:	pop    edi
  40da00:	pop    eax
  40da01:	out    dx,al
  40da02:	dec    ecx
  40da03:	rcr    DWORD PTR [edx],0x47
  40da06:	push   0x46
  40da08:	fadd   st,st(1)
  40da0a:	cld    
  40da0b:	loope  0x40d9c0
  40da0d:	jle    0x40da1d
  40da0f:	ja     0x40da82
  40da11:	setb   BYTE PTR gs:[edx+0x29]
  40da16:	sub    DWORD PTR [esp],edx
  40da19:	and    DWORD PTR [ecx+0x1d],esi
  40da1c:	iret   
  40da1d:	xor    ah,0xbc
  40da20:	gs mov ebx,0x43a25960
  40da26:	cwde   
  40da27:	adc    dh,dh
  40da29:	xchg   ah,bl
  40da2b:	scas   al,BYTE PTR es:[edi]
  40da2c:	cmp    DWORD PTR [ecx-0xa20ca28],ebx
  40da32:	inc    eax
  40da33:	jbe    0x40da49
  40da35:	inc    ebp
  40da36:	(bad)  
  40da37:	sbb    al,0xbf
  40da39:	in     al,dx
  40da3a:	int    0x21
  40da3c:	and    esp,DWORD PTR [edx]
  40da3e:	ja     0x40da34
  40da40:	ret    0xf013
  40da43:	cmp    DWORD PTR [edx-0x54a7b765],ebx
  40da49:	xchg   edi,eax
  40da4a:	or     BYTE PTR [eax],al
  40da4c:	dec    ecx
  40da4d:	lock push 0xffffffc5
  40da50:	fsub   DWORD PTR ds:0x2fa633a0
  40da56:	sbb    eax,0x95234fcf
  40da5b:	rcr    BYTE PTR [eax],1
  40da5d:	mov    bl,BYTE PTR [esi]
  40da5f:	aas    
  40da60:	scas   al,BYTE PTR es:[edi]
  40da61:	fdivr  DWORD PTR [ebp-0x5d]
  40da64:	mov    dh,0x74
  40da66:	pop    ebx
  40da67:	inc    ecx
  40da68:	ins    DWORD PTR es:[edi],dx
  40da69:	and    DWORD PTR [edi+0x76dd21ed],edi
  40da6f:	xlat   BYTE PTR ds:[ebx]
  40da70:	mov    ch,0x1e
  40da72:	cdq    
  40da73:	in     al,dx
  40da74:	sub    ebx,esi
  40da76:	test   eax,0x38f0a491
  40da7b:	sub    BYTE PTR [eax-0x58],bh
  40da7e:	sub    al,0x49
  40da80:	xchg   ecx,eax
  40da81:	mov    ah,0x88
  40da83:	ds not cl
  40da86:	js     0x40da08
  40da88:	pop    esp
  40da89:	in     eax,0x96
  40da8b:	dec    edi
  40da8c:	xor    dh,cl
  40da8e:	sub    BYTE PTR [edi+0x6e35d941],0x56
  40da95:	xchg   ebp,eax
  40da96:	or     eax,0xbb5a6342
  40da9b:	mov    cl,bh
  40da9d:	(bad)  
  40da9e:	cmc    
  40da9f:	jp     0x40da8b
  40daa1:	int    0x4b
  40daa3:	fnstsw WORD PTR [ecx]
  40daa5:	std    
  40daa6:	popa   
  40daa7:	pushf  
  40daa8:	fwait
  40daa9:	or     ch,BYTE PTR [ebp+0x7b6158d9]
  40daaf:	nop
  40dab0:	int3   
  40dab1:	jmp    0x1b3be959
  40dab6:	push   0xc1be00fa
  40dabb:	push   esp
  40dabc:	repz xor BYTE PTR [ebx+0x1f0bfb63],al
  40dac3:	ret    0x8849
  40dac6:	es int3 
  40dac8:	ja     0x40db31
  40daca:	aad    0xbb
  40dacc:	fnstsw WORD PTR [edx]
  40dace:	mov    ecx,0x74fd7dcf
  40dad3:	in     al,dx
  40dad4:	push   ss
  40dad5:	rcr    BYTE PTR [ecx+eiz*2],1
  40dad8:	jae    0x40db41
  40dada:	mov    eax,ds:0x6fa01584
  40dadf:	xchg   esp,eax
  40dae0:	lds    edx,FWORD PTR [ecx+0x2871eaf]
  40dae6:	adc    eax,DWORD PTR [ecx+0x2e78c844]
  40daec:	xchg   esi,eax
  40daed:	lods   eax,DWORD PTR ds:[esi]
  40daee:	xchg   ecx,eax
  40daef:	sbb    ax,0xd05
  40daf3:	fldcw  WORD PTR [ebp-0x6309a526]
  40daf9:	jmp    0xe368:0xc513abd1
  40db00:	jno    0x40daa9
  40db02:	addr16 test eax,0x9c0f32e1
  40db08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db09:	ds jnp 0x40dae6
  40db0c:	pusha  
  40db0d:	in     eax,0xb7
  40db0f:	arpl   WORD PTR [ecx+0x192dd25e],sp
  40db15:	ret    0xc8fe
  40db18:	hlt    
  40db19:	test   DWORD PTR [edi+0xd29992c],edx
  40db1f:	jge    0x40db66
  40db21:	mov    eax,0xfdf6253d
  40db26:	adc    BYTE PTR [edi+0x477188bc],bh
  40db2c:	pop    edx
  40db2d:	jns    0x40daec
  40db2f:	scas   eax,DWORD PTR es:[edi]
  40db30:	mov    eax,ds:0xcde9601e
  40db35:	scas   al,BYTE PTR es:[edi]
  40db36:	add    ecx,DWORD PTR [ecx+0x517aa04d]
  40db3c:	cdq    
  40db3d:	sbb    BYTE PTR [esi],dh
  40db3f:	rol    DWORD PTR [edx+eax*8+0xa],0x7b
  40db44:	jmp    0x852c:0x9891f831
  40db4b:	add    ebx,edx
  40db4d:	xlat   BYTE PTR ds:[ebx]
  40db4e:	test   al,0x43
  40db50:	mov    al,0x55
  40db52:	(bad)  [ecx-0x66]
  40db55:	(bad)  
  40db56:	push   ecx
  40db57:	mov    BYTE PTR [esi+0x5c443602],dh
  40db5d:	add    dl,BYTE PTR [edx+0x4b]
  40db60:	sbb    eax,0x5fc9ac74
  40db65:	xor    eax,0xe3ef3928
  40db6a:	xchg   edi,eax
  40db6b:	cmp    DWORD PTR [ebp-0x194d058a],edi
  40db71:	(bad)  
  40db72:	popa   
  40db73:	iret   
  40db74:	jg     0x40db03
  40db76:	xchg   edx,eax
  40db77:	and    ecx,esp
  40db79:	inc    ebp
  40db7a:	inc    ecx
  40db7b:	mov    cl,0xb5
  40db7d:	and    ax,0x7c80
  40db81:	mov    ah,0x8c
  40db83:	test   eax,0xeb30483f
  40db88:	cmp    BYTE PTR [ebx],ch
  40db8a:	push   es
  40db8b:	jge    0x40db60
  40db8d:	adc    eax,0x4d3f64dd
  40db92:	and    BYTE PTR [esi],al
  40db94:	dec    esp
  40db95:	xor    DWORD PTR [esi],ecx
  40db97:	jmp    0x6177:0xd31f9ed9
  40db9e:	jecxz  0x40dbfd
  40dba0:	enter  0x75cf,0x72
  40dba4:	adc    ebp,DWORD PTR [ebx]
  40dba6:	inc    esp
  40dba7:	adc    BYTE PTR [esi+ecx*1],bh
  40dbaa:	test   DWORD PTR [esp+eax*2-0x32],esi
  40dbae:	push   edi
  40dbaf:	pop    es
  40dbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb1:	adc    al,0xf9
  40dbb3:	dec    ebp
  40dbb4:	add    BYTE PTR [eax-0x6e226528],0x73
  40dbbb:	pop    edx
  40dbbc:	in     al,0x8c
  40dbbe:	jl     0x40dbc9
  40dbc0:	iret   
  40dbc1:	adc    al,0xe2
  40dbc3:	and    al,0x6
  40dbc5:	call   0xb914:0x1ed58638
  40dbcc:	out    0x7b,eax
  40dbce:	xor    eax,0xf4dff7d8
  40dbd3:	lods   al,BYTE PTR ds:[esi]
  40dbd4:	fisub  WORD PTR [ecx+0x262bc197]
  40dbda:	pop    ecx
  40dbdb:	das    
  40dbdc:	cmp    al,0x42
  40dbde:	in     al,dx
  40dbdf:	jne    0x40dc41
  40dbe1:	(bad)  
  40dbe3:	ins    DWORD PTR es:[di],dx
  40dbe5:	xchg   edi,eax
  40dbe6:	xchg   edi,ecx
  40dbe8:	mov    dh,0xff
  40dbea:	sbb    bl,BYTE PTR [esi+0x11de0d61]
  40dbf0:	push   eax
  40dbf1:	mov    edi,0xf7f47702
  40dbf6:	dec    ebx
  40dbf7:	push   ebp
  40dbf8:	fisttp DWORD PTR [edx-0x8]
  40dbfb:	adc    ebp,esi
  40dbfd:	mov    esi,0xeb134b2c
  40dc02:	iret   
  40dc03:	loop   0x40dc5b
  40dc05:	mov    dh,0xc9
  40dc07:	cld    
  40dc08:	sti    
  40dc09:	mov    WORD PTR [edx],?
  40dc0b:	out    0x88,eax
  40dc0d:	mov    ebp,0x43caf45f
  40dc12:	dec    edi
  40dc13:	push   esi
  40dc14:	fneni(8087 only) 
  40dc16:	dec    DWORD PTR [esi+0x6cd87cff]
  40dc1c:	push   ss
  40dc1d:	or     esp,esp
  40dc1f:	fs sbb dl,al
  40dc22:	test   BYTE PTR [ebx+0x30b1f5d2],ah
  40dc28:	(bad)  
  40dc29:	enter  0xdd36,0x63
  40dc2d:	loope  0x40dbce
  40dc2f:	mov    ecx,0xa82daa40
  40dc34:	jmp    ecx
  40dc36:	pop    ss
  40dc37:	cmc    
  40dc38:	add    BYTE PTR [eax],dh
  40dc3a:	jmp    0x88569eb6
  40dc3f:	and    DWORD PTR ds:[ecx-0x7556a16],ebp
  40dc46:	dec    ebp
  40dc47:	inc    ebx
  40dc48:	mov    al,0x85
  40dc4a:	into   
  40dc4b:	test   DWORD PTR [ecx+0x7d],ecx
  40dc4e:	test   eax,0x93eab451
  40dc53:	mov    al,ds:0x2d606f94
  40dc58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc59:	add    al,0x52
  40dc5b:	push   cs
  40dc5c:	add    DWORD PTR [ebx+0x0],esp
  40dc5f:	sahf   
  40dc60:	imul   BYTE PTR [esi+0x24]
  40dc63:	push   edx
  40dc64:	inc    eax
  40dc65:	add    BYTE PTR [eax+ecx*1],dh
  40dc68:	cmp    BYTE PTR [ebx+0x38],0xa2
  40dc6c:	mov    dl,0x86
  40dc6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc6f:	mov    ds:0xab335903,eax
  40dc74:	(bad)  
  40dc75:	imul   esp,DWORD PTR [eax+0x3f],0x7d
  40dc79:	sbb    eax,0x7fcb2e3a
  40dc7e:	lods   eax,DWORD PTR ds:[esi]
  40dc7f:	add    cl,dl
  40dc81:	push   ebx
  40dc82:	jg     0x40dc13
  40dc84:	push   ebx
  40dc85:	pop    ebx
  40dc86:	cmp    al,0xaa
  40dc88:	popf   
  40dc89:	mov    ah,0x9d
  40dc8b:	or     BYTE PTR [esp+eiz*2-0x65],cl
  40dc8f:	popf   
  40dc90:	fld    QWORD PTR [esi-0x5c]
  40dc93:	inc    edx
  40dc94:	pushf  
  40dc95:	cmp    eax,0x4c11af15
  40dc9a:	mov    cl,0xa5
  40dc9c:	das    
  40dc9d:	lds    ebp,FWORD PTR [edx]
  40dc9f:	and    eax,0x97f1d468
  40dca4:	dec    eax
  40dca5:	inc    edx
  40dca6:	call   0xe25f53a9
  40dcab:	test   BYTE PTR [eax],ah
  40dcad:	scas   eax,DWORD PTR es:[edi]
  40dcae:	neg    dl
  40dcb0:	mov    esp,0x572511aa
  40dcb5:	das    
  40dcb6:	lods   eax,DWORD PTR ds:[esi]
  40dcb7:	hlt    
  40dcb8:	imul   edx,DWORD PTR fs:[ebx],0x6b
  40dcbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcbd:	xchg   DWORD PTR [ebx-0x40bd6d3c],ebp
  40dcc3:	cmp    al,0x8a
  40dcc5:	leave  
  40dcc6:	int    0xf2
  40dcc8:	inc    eax
  40dcc9:	xlat   BYTE PTR ds:[ebx]
  40dcca:	ret    0xcfd0
  40dccd:	lods   al,BYTE PTR ds:[esi]
  40dcce:	dec    ebx
  40dccf:	ss lahf 
  40dcd1:	sub    al,0x14
  40dcd3:	popa   
  40dcd4:	icebp  
  40dcd5:	and    al,0x2f
  40dcd7:	push   ecx
  40dcd8:	sub    al,0x7d
  40dcda:	sahf   
  40dcdb:	popa   
  40dcdc:	(bad)  
  40dcdd:	icebp  
  40dcde:	push   edi
  40dcdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce0:	mov    DWORD PTR [ecx+0xa45ec9e],edx
  40dce6:	xchg   esp,eax
  40dce7:	ret    
  40dce8:	ret    
  40dce9:	dec    edx
  40dcea:	or     edx,ebp
  40dcec:	dec    edx
  40dced:	test   al,0xfe
  40dcef:	jle    0x40dd39
  40dcf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf2:	add    eax,0x3be75ea6
  40dcf7:	retf   0x35e9
  40dcfa:	cmp    al,0x47
  40dcfc:	int    0xf3
  40dcfe:	lods   eax,DWORD PTR ds:[esi]
  40dcff:	xor    DWORD PTR [edx],edx
  40dd01:	pop    ds
  40dd02:	jecxz  0x40dd2d
  40dd04:	scas   eax,DWORD PTR es:[edi]
  40dd05:	push   ecx
  40dd06:	outs   dx,DWORD PTR ds:[esi]
  40dd07:	imul   ebp,DWORD PTR [edx+0x52f01083],0xffffffca
  40dd0e:	mov    ecx,0x13dbb5ee
  40dd13:	mov    eax,ds:0x6857aae1
  40dd18:	clc    
  40dd19:	xchg   ebp,eax
  40dd1a:	cmp    edi,0x705211d5
  40dd20:	pop    esp
  40dd21:	cmp    ebx,ebp
  40dd23:	std    
  40dd24:	mov    eax,0x7c213dfa
  40dd29:	cli    
  40dd2a:	cmc    
  40dd2b:	mov    cs,WORD PTR [edx]
  40dd2d:	mov    al,ds:0x803fb47b
  40dd32:	in     eax,0xec
  40dd34:	jb     0x40dd9e
  40dd36:	cs call 0x7dc7399c
  40dd3c:	xchg   edx,eax
  40dd3d:	sahf   
  40dd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd3f:	or     BYTE PTR [edi+0x62],0x1b
  40dd43:	push   ebp
  40dd44:	repnz stos DWORD PTR es:[edi],eax
  40dd46:	jmp    0x40dd85
  40dd48:	fwait
  40dd49:	inc    ebp
  40dd4a:	cdq    
  40dd4b:	call   0xccd4:0x8128c987
  40dd52:	pusha  
  40dd53:	ror    DWORD PTR ds:[ebp-0x42],1
  40dd57:	es dec edx
  40dd59:	jmp    0xa91bec21
  40dd5e:	(bad)  
  40dd5f:	push   eax
  40dd60:	xor    BYTE PTR [esi+edx*1],0x95
  40dd64:	mov    ss,WORD PTR ds:0x5b8f3b7b
  40dd6a:	test   al,0xb6
  40dd6c:	mov    es,WORD PTR [edi+ebx*8]
  40dd6f:	sub    ebp,ecx
  40dd71:	cmp    al,0xe6
  40dd73:	rcr    DWORD PTR [eax-0x61],1
  40dd76:	push   ds
  40dd77:	fild   DWORD PTR [edx+eax*2]
  40dd7a:	xor    eax,0x1e42be27
  40dd7f:	in     eax,0xfc
  40dd81:	test   eax,0x521037dd
  40dd86:	(bad)  
  40dd87:	mov    es,WORD PTR [eax+ebp*1+0x40]
  40dd8b:	jmp    0x40dd27
  40dd8d:	pop    edx
  40dd8e:	ins    BYTE PTR es:[edi],dx
  40dd8f:	mov    cl,0xc3
  40dd91:	(bad)  
  40dd92:	(bad)  
  40dd93:	lahf   
  40dd94:	out    0x5a,al
  40dd96:	jnp    0x40de07
  40dd98:	sub    dl,al
  40dd9a:	jmp    0x40dd26
  40dd9c:	lock push ebp
  40dd9e:	test   bh,bh
  40dda0:	mov    ah,0x13
  40dda2:	push   ebx
  40dda3:	in     eax,0x40
  40dda5:	sub    al,0xdb
  40dda7:	out    0x36,al
  40dda9:	or     DWORD PTR [ebp+0x66],ebp
  40ddac:	jns    0x40dd3b
  40ddae:	and    ecx,DWORD PTR [ebp+0x4023b509]
  40ddb4:	into   
  40ddb5:	or     cl,ch
  40ddb7:	pop    ss
  40ddb8:	jns    0x40ddce
  40ddba:	and    al,0xfb
  40ddbc:	iret   
  40ddbd:	adc    ebp,DWORD PTR [edi-0x2c9d5dbf]
  40ddc3:	sbb    edx,DWORD PTR [ebx+ebx*1-0x49b98c3a]
  40ddca:	cmp    DWORD PTR [ebx-0x2ee780d4],eax
  40ddd0:	fcomp  QWORD PTR [ebp+0x34a5f482]
  40ddd6:	pop    edi
  40ddd7:	fdivr  QWORD PTR [ecx-0x671258df]
  40dddd:	lahf   
  40ddde:	iret   
  40dddf:	cmp    al,0x22
  40dde1:	ins    BYTE PTR es:[edi],dx
  40dde2:	ds stos DWORD PTR es:[edi],eax
  40dde4:	sub    eax,0xfa4d8829
  40dde9:	outs   dx,DWORD PTR ds:[esi]
  40ddea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddeb:	stos   DWORD PTR es:[edi],eax
  40ddec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dded:	(bad)  
  40ddee:	(bad)  
  40ddef:	mov    ch,0xf2
  40ddf1:	shr    DWORD PTR [edi+0x1675ae22],0xed
  40ddf8:	pusha  
  40ddf9:	sub    eax,0x1a8267f6
  40ddfe:	and    BYTE PTR ds:0xbe0ff071,bh
  40de04:	cdq    
  40de05:	xor    esp,ecx
  40de07:	cmp    eax,ebx
  40de09:	test   al,0x81
  40de0b:	push   esp
  40de0c:	sahf   
  40de0d:	add    esi,ecx
  40de0f:	pop    ss
  40de10:	xlat   BYTE PTR cs:[ebx]
  40de12:	mov    DWORD PTR [eax-0x6f],esp
  40de15:	fwait
  40de16:	mov    dl,0xa4
  40de18:	outs   dx,BYTE PTR ds:[esi]
  40de19:	inc    esi
  40de1a:	pop    esi
  40de1b:	retf   
  40de1c:	(bad)
  40de1f:	pop    ebx
  40de20:	lds    ebp,FWORD PTR [ebp+0x32]
  40de23:	cmp    ebx,DWORD PTR [ebp+0x2ee278bb]
  40de29:	push   esp
  40de2a:	sbb    DWORD PTR [esi+0x25],eax
  40de2d:	vdivsd xmm0,xmm4,xmm7
  40de31:	bound  esp,QWORD PTR [esi-0xa]
  40de34:	adc    bl,BYTE PTR [edx-0x79]
  40de37:	sub    BYTE PTR [ebx+0x7d],ch
  40de3a:	cld    
  40de3b:	data16 sbb al,0x54
  40de3e:	hlt    
  40de3f:	and    eax,0xd00340ef
  40de44:	jg     0x40de57
  40de46:	push   ebx
  40de47:	es sbb al,0x5e
  40de4a:	jmp    0x40ddf5
  40de4c:	xchg   esp,eax
  40de4d:	out    dx,eax
  40de4e:	sub    al,0x5a
  40de50:	and    cl,bl
  40de52:	push   0x86d43fc8
  40de57:	out    0x6a,al
  40de59:	bound  ebx,QWORD PTR [esi-0x37]
  40de5c:	xor    BYTE PTR [ebx-0x2c],al
  40de5f:	or     eax,0xc6646c6a
  40de64:	xor    BYTE PTR [eax+0x70964d6c],bl
  40de6a:	repnz adc al,0xe5
  40de6d:	into   
  40de6e:	sub    BYTE PTR [edx+0x385263eb],bl
  40de74:	je     0x40deb5
  40de76:	dec    esp
  40de77:	adc    edx,ecx
  40de79:	iret   
  40de7a:	jno    0x40de5f
  40de7c:	inc    ecx
  40de7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de7f:	or     BYTE PTR ds:0x95299578,ch
  40de85:	mov    ebp,0xf8109de4
  40de8a:	adc    eax,0x428657da
  40de8f:	push   cs
  40de90:	pop    es
  40de91:	loopne 0x40de32
  40de93:	popa   
  40de94:	je     0x40de1e
  40de96:	fisttp WORD PTR [edx+0x1ece8aa1]
  40de9c:	sbb    al,0x68
  40de9e:	int3   
  40de9f:	pop    ecx
  40dea0:	dec    esi
  40dea1:	outs   dx,BYTE PTR ds:[esi]
  40dea2:	adc    DWORD PTR [edi-0x2e],ebx
  40dea5:	ja     0x40debe
  40dea7:	xchg   BYTE PTR [eax-0x1f],ah
  40deaa:	jae    0x40de45
  40deac:	fmul   st(4),st
  40deae:	popa   
  40deaf:	lock sbb DWORD PTR [ebx-0x37],esi
  40deb3:	push   edx
  40deb4:	pop    eax
  40deb5:	xchg   ebp,eax
  40deb6:	pop    ebx
  40deb7:	retf   0x52c6
  40deba:	mov    edi,0xa21df2bb
  40debf:	jae    0x40ded4
  40dec1:	ret    0xce9f
  40dec4:	adc    al,0x94
  40dec6:	adc    al,al
  40dec8:	fwait
  40dec9:	mov    al,0x1a
  40decb:	cdq    
  40decc:	out    0x58,eax
  40dece:	add    ecx,DWORD PTR [eax+0x1f]
  40ded1:	arpl   bp,dx
  40ded3:	add    edx,edi
  40ded5:	cmp    DWORD PTR [edx-0xa],0x52
  40ded9:	bound  edx,QWORD PTR [ebx]
  40dedb:	dec    eax
  40dedc:	lea    edi,fs:[ebp+ebx*1+0x7]
  40dee1:	clc    
  40dee2:	hlt    
  40dee3:	pop    esi
  40dee4:	fldenv [ebx-0x5e]
  40dee7:	inc    ebp
  40dee8:	shl    DWORD PTR [eax],0xb6
  40deeb:	jg     0x40de7b
  40deed:	or     eax,0x3ced49b5
  40def2:	pusha  
  40def3:	adc    ebp,edx
  40def5:	mov    ch,0x4d
  40def7:	test   al,0x7c
  40def9:	lock mov edi,0x467ff4c5
  40deff:	inc    ebx
  40df00:	cli    
  40df01:	data16 adc ch,0x81
  40df05:	or     al,0xb3
  40df07:	pop    ds
  40df08:	xor    ecx,DWORD PTR [edi]
  40df0a:	adc    BYTE PTR [edx],0x5d
  40df0d:	rcr    BYTE PTR [eax+0x7b786183],1
  40df13:	sub    bh,BYTE PTR [esi+0x680080bc]
  40df19:	mov    al,0xe4
  40df1b:	rcl    BYTE PTR [esi],0x82
  40df1e:	xchg   esi,eax
  40df1f:	shl    DWORD PTR [ebx-0x68ab2125],cl
  40df25:	imul   eax,edx,0xfffffff1
  40df28:	cmp    BYTE PTR [esp+ecx*2],cl
  40df2b:	dec    esp
  40df2c:	bound  ebp,QWORD PTR [eax+ebx*1-0x77]
  40df30:	dec    BYTE PTR [esi+ecx*4+0x5e]
  40df34:	mov    ds:0xd1e0fc7e,al
  40df39:	adc    eax,0xff62fc6f
  40df3e:	test   eax,0x32322b0e
  40df43:	test   DWORD PTR [ebp+0x18ac3fea],esp
  40df49:	sub    esp,DWORD PTR [esi+ebp*8+0x46]
  40df4d:	jmp    0x40dfc8
  40df4f:	sub    cl,cl
  40df51:	fild   QWORD PTR [esp+eiz*8-0x62]
  40df55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df56:	mov    al,0xa9
  40df58:	into   
  40df59:	fnsave [edx]
  40df5b:	cs aas 
  40df5d:	nop
  40df5e:	rcr    bl,1
  40df60:	jmp    0x6aa5:0x510cb91b
  40df67:	hlt    
  40df68:	in     eax,0x92
  40df6a:	xchg   edi,eax
  40df6b:	in     al,0x47
  40df6d:	loopne 0x40df2e
  40df6f:	pop    es
  40df70:	jns    0x40dfdc
  40df72:	cdq    
  40df73:	or     eax,0x4a7658d6
  40df78:	ins    DWORD PTR es:[edi],dx
  40df79:	jp     0x40df42
  40df7b:	rcl    BYTE PTR [eax-0x3],1
  40df7e:	lods   eax,DWORD PTR ds:[esi]
  40df7f:	aam    0xad
  40df81:	lock bound dx,DWORD PTR [bx]
  40df86:	out    dx,eax
  40df87:	jle    0x40df93
  40df89:	xchg   edi,eax
  40df8a:	adc    bh,BYTE PTR [ecx-0x531f0997]
  40df90:	fst    DWORD PTR [edi+0x61]
  40df93:	add    al,0x0
  40df95:	push   edx
  40df96:	jo     0x40df38
  40df98:	repnz imul esp,DWORD PTR [eax-0x69],0x8f8309d0
  40dfa0:	ss dec edx
  40dfa2:	xor    dl,cl
  40dfa4:	xor    al,BYTE PTR [ecx-0xe]
  40dfa7:	xchg   esi,eax
  40dfa8:	enter  0xa6c3,0xbb
  40dfac:	dec    ecx
  40dfad:	loope  0x40dfd2
  40dfaf:	push   ds
  40dfb0:	fs mov al,0xb7
  40dfb3:	(bad)  
  40dfb4:	sub    al,0xbe
  40dfb6:	sub    edx,DWORD PTR [ecx-0x7]
  40dfb9:	cmp    cl,BYTE PTR [eax-0x26]
  40dfbc:	retf   
  40dfbd:	mov    DWORD PTR ds:0xd2aa6738,ebx
  40dfc3:	xchg   ebx,eax
  40dfc4:	jge    0x40e02e
  40dfc6:	xchg   DWORD PTR [edi],ebp
  40dfc8:	cwde   
  40dfc9:	sbb    DWORD PTR [ebp+0x2a],0x9f52d2e
  40dfd0:	add    BYTE PTR [edi+0x59],bh
  40dfd3:	aas    
  40dfd4:	pop    es
  40dfd5:	test   DWORD PTR [ecx-0x51],0xeb4d3df2
  40dfdc:	stos   DWORD PTR es:[edi],eax
  40dfdd:	inc    ecx
  40dfdf:	xor    al,0x91
  40dfe1:	mov    ds:0xa197c773,eax
  40dfe6:	cmp    dl,al
  40dfe8:	or     edi,0xec4433c1
  40dfee:	and    al,0x46
  40dff0:	push   0x42
  40dff2:	or     edx,DWORD PTR [edi-0x59]
  40dff5:	cmp    DWORD PTR [edx],ecx
  40dff7:	pop    ecx
  40dff8:	fild   DWORD PTR [ecx]
  40dffa:	inc    edx
  40dffb:	add    BYTE PTR [edi+0x5f],0x4c
  40dfff:	jp     0x40dfe2
  40e001:	pop    ebx
  40e002:	cwde   
  40e003:	add    BYTE PTR [ecx],bl
  40e005:	jno    0x40e01f
  40e007:	imul   eax,DWORD PTR [edx],0x54
  40e00a:	popf   
  40e00b:	mov    dh,0xa9
  40e00d:	xor    esp,DWORD PTR [ebx+0x20]
  40e010:	xchg   ecx,eax
  40e011:	push   ds
  40e012:	pop    ss
  40e013:	sub    eax,0xbaf72bda
  40e018:	inc    ecx
  40e019:	icebp  
  40e01a:	(bad)  
  40e01b:	mov    ah,0x28
  40e01d:	pop    ecx
  40e01e:	push   edi
  40e01f:	repnz cmp cl,BYTE PTR [esi]
  40e022:	jmp    0x4b13:0xcd75d3cc
  40e029:	repnz or BYTE PTR [ecx+ebx*2-0x23cb68ff],dl
  40e031:	imul   edx,DWORD PTR [edi+0x2de7a981],0xffffffd3
  40e038:	cmp    esi,DWORD PTR [edx+0x151410d]
  40e03e:	into   
  40e03f:	in     al,0x8a
  40e041:	pop    ebp
  40e042:	inc    esp
  40e043:	and    ebx,esi
  40e045:	or     cl,BYTE PTR [ebx-0x36]
  40e048:	add    al,0x17
  40e04a:	int3   
  40e04b:	icebp  
  40e04c:	jbe    0x40e002
  40e04e:	mov    DWORD PTR [edx+0x2a],ecx
  40e051:	add    eax,0x59ff28b0
  40e056:	std    
  40e057:	inc    ebx
  40e058:	sub    edx,DWORD PTR [ebx+0x22]
  40e05b:	call   0x800b:0xb623ebca
  40e062:	push   0x23
  40e064:	loop   0x40e0b4
  40e066:	sti    
  40e067:	push   0xa75da01f
  40e06c:	push   eax
  40e06d:	std    
  40e06e:	pop    esp
  40e06f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e070:	mov    ds:0xa5d807cc,eax
  40e075:	xor    ch,bl
  40e077:	inc    edi
  40e078:	repnz mov dh,0x73
  40e07b:	pop    esi
  40e07c:	loop   0x40e0ba
  40e07e:	sub    al,0x39
  40e080:	outs   dx,BYTE PTR ds:[esi]
  40e081:	add    DWORD PTR [edx+0x22],0xfffffffc
  40e085:	cmp    BYTE PTR [edx-0x61bd53b3],bh
  40e08b:	mov    ebx,DWORD PTR [edi-0x31]
  40e08e:	jno    0x40e064
  40e090:	push   es
  40e091:	rcl    BYTE PTR [edx-0x38ee6fa8],cl
  40e097:	pop    ds
  40e098:	and    eax,0xd880dcea
  40e09d:	stc    
  40e09e:	xor    bh,BYTE PTR [ecx-0x2b]
  40e0a1:	pop    esp
  40e0a2:	pop    ebx
  40e0a3:	lds    esi,FWORD PTR [esi]
  40e0a5:	sbb    ebp,ebp
  40e0a7:	mov    bl,0xf3
  40e0a9:	inc    edx
  40e0aa:	repz js 0x40e06c
  40e0ad:	jne    0x40e0ff
  40e0af:	sub    ebx,DWORD PTR [ecx+0x36]
  40e0b2:	inc    ebp
  40e0b3:	loop   0x40e0cd
  40e0b5:	clc    
  40e0b6:	jbe    0x40e0ca
  40e0b8:	pop    edi
  40e0b9:	adc    esp,eax
  40e0bb:	fcmovbe st,st(2)
  40e0bd:	mov    ebp,0x2be3065a
  40e0c2:	pop    ebx
  40e0c3:	mov    eax,0x3ad95b96
  40e0c8:	fisttp QWORD PTR [edi+esi*8+0x1b]
  40e0cc:	sti    
  40e0cd:	jnp    0x40e0d0
  40e0cf:	retf   0x601f
  40e0d2:	fwait
  40e0d3:	cmp    dl,ah
  40e0d5:	(bad)  
  40e0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d8:	in     eax,0x61
  40e0da:	cmp    bh,ch
  40e0dc:	mov    ecx,0xc7784c65
  40e0e1:	test   cl,0x75
  40e0e4:	dec    ebx
  40e0e5:	mov    bh,0x46
  40e0e7:	add    al,0xd3
  40e0e9:	in     eax,dx
  40e0ea:	in     al,0x16
  40e0ec:	xor    bl,bh
  40e0ee:	jb     0x40e120
  40e0f0:	outs   dx,DWORD PTR ds:[esi]
  40e0f1:	call   DWORD PTR [ebx+0xc58e9d0]
  40e0f7:	lea    ebp,[eax]
  40e0f9:	fistp  DWORD PTR es:[ebp-0x16e9843f]
  40e100:	fistp  QWORD PTR [edi-0x2c]
  40e103:	pop    edi
  40e104:	mov    dl,0xe8
  40e106:	xchg   DWORD PTR [edx-0x5971f223],ebp
  40e10c:	jb     0x40e18a
  40e10e:	sub    al,cl
  40e110:	js     0x40e102
  40e112:	lods   al,BYTE PTR ds:[esi]
  40e113:	ja     0x40e13d
  40e115:	xchg   ecx,eax
  40e116:	pop    eax
  40e117:	aas    
  40e118:	lahf   
  40e119:	push   0x6b
  40e11b:	mov    ebp,0x1f9322e7
  40e120:	ins    DWORD PTR es:[edi],dx
  40e121:	ret    0x596b
  40e124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e125:	in     eax,dx
  40e126:	push   edi
  40e127:	mov    ecx,0x7b52f355
  40e12c:	fmul   QWORD PTR [ebx-0x25ecfc67]
  40e132:	retf   0xcbc8
  40e135:	lds    edx,FWORD PTR [edx-0x6a60f443]
  40e13b:	and    bl,BYTE PTR [edi]
  40e13d:	pop    esi
  40e13e:	loopne 0x40e0fb
  40e140:	push   es
  40e141:	mov    eax,0xaeaf89b0
  40e146:	push   eax
  40e147:	loopne 0x40e142
  40e149:	pop    es
  40e14a:	fdivr  QWORD PTR [edi+ebx*2]
  40e14d:	enter  0xe1b1,0xd2
  40e151:	fstp   TBYTE PTR [eax+ecx*1]
  40e154:	in     al,dx
  40e155:	mov    dl,0xb0
  40e157:	pusha  
  40e158:	mov    ds:0xf1c7af11,al
  40e15d:	adc    bh,BYTE PTR [ecx-0x5f5cea41]
  40e163:	cld    
  40e164:	jmp    0xee41101b
  40e169:	lods   eax,DWORD PTR ds:[esi]
  40e16a:	pop    edi
  40e16b:	mov    dh,0xe4
  40e16d:	xor    eax,eax
  40e16f:	out    0xcb,eax
  40e171:	retf   
  40e172:	std    
  40e173:	inc    esi
  40e174:	mov    esi,DWORD PTR [eax+0x5b4b9263]
  40e17a:	imul   edi,edi,0x3b9d1cf1
  40e180:	cmp    esi,0xd98d57e8
  40e186:	add    al,0x8d
  40e188:	aam    0xf9
  40e18a:	ds push 0xffffffe9
  40e18d:	xor    al,0xce
  40e18f:	sbb    edx,DWORD PTR [ebx]
  40e191:	outs   dx,BYTE PTR ds:[esi]
  40e192:	pusha  
  40e193:	mov    ?,esi
  40e195:	sub    al,0x3d
  40e197:	pop    ebx
  40e198:	ins    BYTE PTR es:[edi],dx
  40e199:	push   ds
  40e19a:	or     al,0x33
  40e19c:	in     al,0xf4
  40e19e:	(bad)  
  40e19f:	ja     0x40e1e1
  40e1a1:	and    ebp,esp
  40e1a3:	rol    DWORD PTR ds:0xd66eea61,cl
  40e1a9:	ds int 0x37
  40e1ac:	mov    dl,0xc8
  40e1ae:	xchg   edi,eax
  40e1af:	outs   dx,BYTE PTR es:[esi]
  40e1b1:	inc    esi
  40e1b2:	out    0x92,eax
  40e1b4:	xor    DWORD PTR [ebx-0x75abb6a8],esi
  40e1ba:	add    BYTE PTR [edi],dh
  40e1bc:	push   ecx
  40e1bd:	add    al,0x3f
  40e1bf:	or     DWORD PTR [ebx],eax
  40e1c1:	sub    bh,0xf1
  40e1c4:	and    al,0xe9
  40e1c6:	pushf  
  40e1c7:	mov    ds:0xdb9b00dc,eax
  40e1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1cd:	sti    
  40e1ce:	sub    ecx,edi
  40e1d0:	inc    ecx
  40e1d1:	mov    cs,WORD PTR [edx+edi*1]
  40e1d4:	mov    eax,0x8274cfc9
  40e1d9:	loope  0x40e175
  40e1db:	nop
  40e1dc:	out    0x6c,al
  40e1de:	xchg   ecx,eax
  40e1df:	sub    bh,BYTE PTR [eax+0x67]
  40e1e2:	mov    esi,0x53b752ad
  40e1e7:	mov    ah,BYTE PTR [edi-0x13]
  40e1ea:	mov    cl,0x47
  40e1ec:	mov    edi,0xe4537c85
  40e1f1:	xchg   esp,ebx
  40e1f3:	dec    edx
  40e1f4:	fsub   st(6),st
  40e1f6:	mov    esi,0x861b1d5d
  40e1fb:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40e1fd:	inc    esp
  40e1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1ff:	jo     0x40e255
  40e201:	mov    esi,0x3513e5a0
  40e206:	mov    eax,ds:0xcce7a26a
  40e20b:	xchg   ebp,eax
  40e20c:	ins    BYTE PTR es:[edi],dx
  40e20d:	mov    esi,0x85c174e3
  40e212:	daa    
  40e213:	add    ecx,0x7f9767f6
  40e219:	fcomp  QWORD PTR [esi]
  40e21b:	xor    eax,0x607f32a8
  40e220:	mov    eax,ds:0xb39a6c3
  40e225:	ds (bad) 
  40e227:	std    
  40e228:	push   ebp
  40e229:	or     esp,DWORD PTR [ebp+0x78b3665e]
  40e22f:	cli    
  40e230:	jb     0x40e21e
  40e232:	cmc    
  40e233:	or     eax,0x9d09475a
  40e238:	ds xchg edi,eax
  40e23a:	mov    eax,ds:0x794faa46
  40e23f:	add    BYTE PTR [edx],ch
  40e241:	add    eax,0xbf7b6051
  40e246:	pop    esp
  40e247:	mov    esi,0xfc9bd1b5
  40e24c:	(bad)  
  40e24d:	or     eax,0x1e0f3be5
  40e252:	scas   eax,DWORD PTR es:[edi]
  40e253:	xchg   ebx,eax
  40e254:	rcl    BYTE PTR [ebp-0x76eb4691],0x90
  40e25b:	pop    ebx
  40e25c:	jae    0x40e242
  40e25e:	mov    eax,0x874579fe
  40e263:	sub    al,0xfa
  40e265:	xchg   ebp,eax
  40e266:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e268:	push   es
  40e269:	push   eax
  40e26a:	cli    
  40e26b:	adc    dl,BYTE PTR [edx-0x47dba20]
  40e271:	inc    edi
  40e272:	ret    
  40e273:	mov    ebp,0xaf47e699
  40e278:	add    edx,DWORD PTR ds:0x9b28575a
  40e27e:	mov    ds:0x64ffec18,al
  40e283:	(bad)  
  40e284:	cmp    esp,DWORD PTR [eax+0x39]
  40e287:	and    ebx,DWORD PTR [ebx]
  40e289:	out    0x81,eax
  40e28b:	xor    eax,0x32b89918
  40e290:	fstp   QWORD PTR [ebp+0x50]
  40e293:	std    
  40e294:	call   0xe2dc:0x4adcf819
  40e29b:	sbb    eax,ebp
  40e29d:	jno    0x40e2d4
  40e29f:	cs pop edx
  40e2a1:	push   edi
  40e2a2:	add    edx,DWORD PTR ds:0x995f3de8
  40e2a8:	pop    edx
  40e2a9:	dec    edx
  40e2aa:	retf   
  40e2ab:	xor    BYTE PTR [esi-0x79],dl
  40e2ae:	ret    0x8669
  40e2b1:	sti    
  40e2b2:	icebp  
  40e2b3:	jl     0x40e29f
  40e2b5:	dec    edx
  40e2b6:	pop    eax
  40e2b7:	and    dl,BYTE PTR [esi+0x63]
  40e2ba:	mov    bl,0x7a
  40e2bc:	mov    edi,DWORD PTR [edx+eax*4+0x2141d420]
  40e2c3:	pop    esp
  40e2c4:	or     cl,BYTE PTR [edi]
  40e2c6:	mov    ch,BYTE PTR [edi-0xc]
  40e2c9:	(bad)  
  40e2ca:	ins    DWORD PTR es:[edi],dx
  40e2cb:	and    ch,ch
  40e2cd:	adc    eax,0x7d067f46
  40e2d2:	out    0x32,al
  40e2d4:	sti    
  40e2d5:	rcr    DWORD PTR [esi+0x4d],1
  40e2d8:	push   edi
  40e2d9:	cdq    
  40e2da:	jne    0x40e34a
  40e2dc:	sub    edi,DWORD PTR ds:0x536348ba
  40e2e2:	sbb    al,BYTE PTR [ebx]
  40e2e4:	inc    esi
  40e2e5:	mov    al,0xa7
  40e2e7:	ror    DWORD PTR [ecx-0x683bf983],cl
  40e2ed:	enter  0x3879,0x98
  40e2f1:	aaa    
  40e2f2:	sub    BYTE PTR [edx-0x56f4a650],0xff
  40e2f9:	out    dx,eax
  40e2fa:	fisubr WORD PTR [edx+0x32c026b9]
  40e300:	div    BYTE PTR [edi-0x64bca89d]
  40e306:	xor    eax,0xf26c985e
  40e30b:	sub    esi,DWORD PTR [ecx+0x18bcb542]
  40e311:	cmp    al,0x89
  40e313:	sub    cl,BYTE PTR [ecx+0x287cd232]
  40e319:	in     al,0xa2
  40e31b:	std    
  40e31c:	fs adc al,0x93
  40e31f:	loope  0x40e2c4
  40e321:	mov    al,ds:0x9d8dbe6c
  40e326:	sbb    BYTE PTR [ecx-0x4993388],bl
  40e32c:	popa   
  40e32d:	js     0x40e390
  40e32f:	popa   
  40e330:	outs   dx,BYTE PTR ds:[esi]
  40e331:	mov    al,0xe1
  40e333:	or     esp,ebx
  40e335:	pop    ebx
  40e336:	adc    DWORD PTR [esi-0x5706b376],ebp
  40e33c:	jne    0x40e2ff
  40e33e:	inc    eax
  40e33f:	ss push 0x58
  40e342:	cli    
  40e343:	ret    
  40e344:	ins    DWORD PTR es:[edi],dx
  40e345:	xor    DWORD PTR [ecx+0x1cdc2104],0xe4cce4de
  40e34f:	xchg   esi,eax
  40e350:	(bad)  
  40e351:	fs xchg esp,eax
  40e353:	adc    bl,BYTE PTR [ebx+0x48]
  40e356:	mov    DWORD PTR ds:0x46bf61d1,esp
  40e35c:	mov    dh,0xf9
  40e35e:	mov    esp,0x9ff6dc36
  40e363:	push   edx
  40e364:	inc    edi
  40e365:	ret    0xbd53
  40e368:	add    eax,ecx
  40e36a:	scas   eax,DWORD PTR es:[edi]
  40e36b:	loop   0x40e3b2
  40e36d:	rol    edx,0x68
  40e370:	add    BYTE PTR [ebx+0x69ec903d],dh
  40e376:	xlat   BYTE PTR ds:[ebx]
  40e377:	(bad)  
  40e378:	or     al,0xb7
  40e37a:	mov    bl,0xb0
  40e37c:	push   edi
  40e37d:	or     eax,0xdc10a1c3
  40e382:	mov    BYTE PTR [ebx+eax*4],dl
  40e385:	or     DWORD PTR fs:[esi+ebx*4+0x50eca4b0],ebx
  40e38d:	push   eax
  40e38e:	arpl   WORD PTR [edx+eiz*1],dx
  40e391:	aaa    
  40e392:	addr16 es js 0x40e369
  40e396:	std    
  40e397:	in     eax,dx
  40e398:	in     al,0x9a
  40e39a:	inc    esi
  40e39b:	rol    DWORD PTR [eax+eax*1+0x64],1
  40e39f:	jnp    0x40e32f
  40e3a1:	test   DWORD PTR [ebx+0x423d5161],ebp
  40e3a7:	jo     0x40e369
  40e3a9:	mov    ebp,0xe741f212
  40e3ae:	mov    cl,0xf3
  40e3b0:	retf   
  40e3b1:	loopne 0x40e3f9
  40e3b3:	mov    ebp,0xf6f92599
  40e3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b9:	outs   dx,DWORD PTR gs:[esi]
  40e3bb:	mov    dl,0xb6
  40e3bd:	and    al,0x71
  40e3bf:	mov    ebp,0x22305004
  40e3c4:	sub    eax,0x8a7455df
  40e3c9:	sbb    BYTE PTR [ecx-0x79],cl
  40e3cc:	std    
  40e3cd:	push   ebx
  40e3ce:	push   ecx
  40e3cf:	rol    DWORD PTR [esi],1
  40e3d1:	div    BYTE PTR ds:0x14ff1b6f
  40e3d7:	retf   0x56a6
  40e3da:	sbb    DWORD PTR [ebx+0x3d],eax
  40e3dd:	and    BYTE PTR [ebx-0xe],dh
  40e3e0:	lock stos BYTE PTR es:[edi],al
  40e3e2:	shr    DWORD PTR [esi-0x2f],cl
  40e3e5:	dec    esp
  40e3e6:	test   al,0x58
  40e3e8:	fs int 0x7
  40e3eb:	(bad)  
  40e3ec:	adc    al,0xcf
  40e3ee:	test   eax,0x99b9a736
  40e3f3:	inc    esp
  40e3f4:	inc    ebp
  40e3f5:	rol    DWORD PTR [edi],cl
  40e3f7:	popf   
  40e3f8:	mul    BYTE PTR [edx-0x4ff07c32]
  40e3fe:	sbb    bh,BYTE PTR [ebx+0x1dc3ec49]
  40e404:	pop    ds
  40e405:	sbb    ebx,ebx
  40e407:	push   es
  40e408:	jnp    0x40e45b
  40e40a:	std    
  40e40b:	mov    BYTE PTR [eax+0x20],cl
  40e40e:	jae    0x40e48c
  40e410:	mov    ?,WORD PTR [eax]
  40e412:	xor    BYTE PTR fs:[edx+0x5380e369],ch
  40e419:	iret   
  40e41a:	cmp    BYTE PTR [eax+0x5e],cl
  40e41d:	fsubr  st,st(5)
  40e41f:	or     eax,0xd5af4bd7
  40e424:	pop    ebx
  40e425:	xor    ah,cl
  40e427:	aad    0x8
  40e429:	(bad)  
  40e42a:	cmp    BYTE PTR [ebx+ebx*4],ch
  40e42d:	shr    DWORD PTR [edx-0xb],0xf6
  40e431:	inc    ecx
  40e432:	xor    dl,bl
  40e434:	out    0xe1,eax
  40e436:	mov    al,0x4d
  40e438:	les    edx,FWORD PTR [edx+0x60eb1322]
  40e43e:	jmp    0x40e43e
  40e440:	push   esi
  40e441:	in     al,dx
  40e442:	sahf   
  40e443:	adc    BYTE PTR [ecx-0x3cd75d6],ch
  40e449:	call   0x848a:0x42734f0c
  40e450:	popa   
  40e451:	sti    
  40e452:	jno    0x40e4ca
  40e454:	add    DWORD PTR [ebx],esi
  40e456:	(bad)  
  40e457:	fimul  WORD PTR [esi]
  40e459:	cmp    dl,BYTE PTR ds:[ecx-0x23455b25]
  40e460:	shl    ch,1
  40e462:	jne    0x40e3eb
  40e464:	sub    DWORD PTR [eax],eax
  40e466:	jbe    0x40e4e3
  40e468:	mov    esi,0xeea83c54
  40e46d:	cmc    
  40e46e:	gs cld 
  40e470:	inc    edx
  40e471:	add    DWORD PTR [ebx],ebx
  40e473:	mov    eax,0x374ca0ed
  40e478:	repnz adc dl,BYTE PTR [ebx+0x2d]
  40e47c:	cs jmp 0x855f35ef
  40e482:	xlat   BYTE PTR ds:[ebx]
  40e483:	rcl    ebp,0x4b
  40e486:	jo     0x40e412
  40e488:	sub    ebp,DWORD PTR [edx]
  40e48a:	shld   DWORD PTR [esi-0x18],edx,cl
  40e48e:	(bad)  
  40e48f:	call   0xf8211a5a
  40e494:	imul   esp,DWORD PTR [esi+0x68],0x4fad2561
  40e49b:	lock push edi
  40e49d:	pop    ds
  40e49e:	xchg   esi,eax
  40e49f:	adc    eax,0x6139fb16
  40e4a4:	aam    0x2c
  40e4a6:	ficomp DWORD PTR [ecx+esi*1-0x2f]
  40e4aa:	jbe    0x40e47e
  40e4ac:	and    DWORD PTR [edi-0x2026949c],eax
  40e4b2:	xchg   ecx,eax
  40e4b3:	push   0xffffffbb
  40e4b5:	add    edi,esi
  40e4b7:	jge    0x40e4ec
  40e4b9:	mov    esp,0x6a0eb281
  40e4be:	retf   0xcc9f
  40e4c1:	test   DWORD PTR [edx+0x3e435fe7],ebp
  40e4c7:	push   ss
  40e4c8:	pop    ecx
  40e4c9:	pop    ebp
  40e4ca:	not    DWORD PTR [ecx+esi*2+0x7e402de1]
  40e4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4d2:	jmp    0x40e526
  40e4d4:	je     0x40e4d3
  40e4d6:	arpl   cx,bx
  40e4d8:	lds    eax,FWORD PTR [ecx]
  40e4da:	inc    ebx
  40e4db:	pop    ebx
  40e4dc:	mov    eax,0x4a12230d
  40e4e1:	aaa    
  40e4e2:	jl     0x40e52d
  40e4e4:	jge    0x40e466
  40e4e6:	out    0xce,al
  40e4e8:	mov    ch,0xb8
  40e4ea:	pusha  
  40e4eb:	pop    esi
  40e4ec:	jmp    0x4c54:0xbd7dcca7
  40e4f3:	stos   BYTE PTR es:[di],al
  40e4f5:	xchg   ebx,eax
  40e4f6:	and    BYTE PTR [ecx-0x56175448],0x8c
  40e4fd:	xor    eax,0x36d9759e
  40e502:	jns    0x40e48e
  40e504:	jnp    0x40e496
  40e506:	ins    BYTE PTR es:[edi],dx
  40e507:	fucom  st(4)
  40e509:	cmp    cl,bh
  40e50b:	xor    al,0xe8
  40e50d:	push   ebx
  40e50e:	cdq    
  40e50f:	scas   eax,DWORD PTR es:[edi]
  40e510:	ins    DWORD PTR es:[edi],dx
  40e511:	jb     0x40e4aa
  40e513:	push   ss
  40e514:	adc    DWORD PTR [ebx],eax
  40e516:	in     al,0x50
  40e518:	inc    edi
  40e519:	div    DWORD PTR [ecx+ecx*8+0x55]
  40e51d:	xor    ch,BYTE PTR [ebp-0x4a5c0a20]
  40e523:	sti    
  40e524:	xchg   ebp,eax
  40e525:	xchg   esp,eax
  40e526:	sbb    al,0x74
  40e528:	mov    ebx,cs
  40e52a:	stc    
  40e52b:	xchg   DWORD PTR [esi-0x78],esp
  40e52e:	add    BYTE PTR [eax],ah
  40e530:	call   0x81a56934
  40e535:	test   eax,0x3914df0a
  40e53a:	ficomp DWORD PTR [ebp+0x5d]
  40e53d:	(bad)  
  40e53e:	adc    dh,0xaf
  40e541:	and    edi,0xffffffa2
  40e544:	sbb    BYTE PTR [esi],cl
  40e546:	jns    0x40e507
  40e548:	repnz xor DWORD PTR [eax+ebp*4],ebx
  40e54c:	outs   dx,DWORD PTR ds:[esi]
  40e54d:	fdiv   QWORD PTR [edx+0xa0028f3]
  40e553:	push   0x8ad3441a
  40e558:	popf   
  40e559:	pop    edi
  40e55a:	push   ecx
  40e55b:	shr    DWORD PTR [eax+ebx*2-0x6b],0x53
  40e560:	outs   dx,DWORD PTR ds:[esi]
  40e561:	aam    0x94
  40e563:	aad    0xc2
  40e565:	or     eax,0xe00f279e
  40e56a:	and    DWORD PTR [eax],eax
  40e56c:	je     0x40e5a0
  40e56e:	cmp    DWORD PTR cs:[edi+eax*4-0x5f],0x62
  40e574:	jbe    0x40e5d7
  40e576:	sbb    ch,dh
  40e578:	test   al,0xcd
  40e57a:	or     DWORD PTR [edx-0x58],ecx
  40e57d:	xchg   edx,eax
  40e57e:	mov    ebp,0x2c093b17
  40e583:	loopne 0x40e5d0
  40e585:	pop    ecx
  40e586:	in     eax,0xe4
  40e588:	inc    ebp
  40e589:	add    eax,DWORD PTR [ebx-0x2eefde11]
  40e58f:	ret    
  40e590:	mov    ds:0x5ee4f98d,al
  40e595:	loop   0x40e59e
  40e597:	adc    eax,0x8258fd76
  40e59c:	mov    DWORD PTR [esi],esi
  40e59e:	sbb    bl,BYTE PTR ss:[ecx]
  40e5a1:	mov    esi,0x4908e43a
  40e5a6:	ficomp WORD PTR [esi-0x5d]
  40e5a9:	ret    
  40e5aa:	pushw  0x92c9
  40e5ae:	out    0x98,eax
  40e5b0:	cmp    esi,DWORD PTR [esi-0x55]
  40e5b3:	jle    0x40e5a6
  40e5b5:	push   cs
  40e5b6:	les    edi,FWORD PTR [eax-0x385ff73d]
  40e5bc:	stos   DWORD PTR es:[edi],eax
  40e5bd:	sub    al,ah
  40e5bf:	fwait
  40e5c0:	nop
  40e5c1:	add    al,0xdc
  40e5c3:	inc    esi
  40e5c4:	push   edx
  40e5c5:	pop    eax
  40e5c6:	lock and bh,BYTE PTR [eax-0x36858a99]
  40e5cd:	in     eax,dx
  40e5ce:	fwait
  40e5cf:	imul   ebp,DWORD PTR [eax+0x69],0xffffffe1
  40e5d3:	and    BYTE PTR [eax],bh
  40e5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5d6:	and    eax,0x34ef0f73
  40e5db:	int    0x21
  40e5dd:	pop    es
  40e5de:	dec    ecx
  40e5df:	hlt    
  40e5e0:	aas    
  40e5e1:	cs aaa 
  40e5e3:	pop    es
  40e5e4:	aas    
  40e5e5:	push   es
  40e5e6:	lds    edx,FWORD PTR [ebx+0x5fdcd0f8]
  40e5ec:	leave  
  40e5ed:	or     esi,ecx
  40e5ef:	add    BYTE PTR [ebx-0x15fc6b2c],0xad
  40e5f6:	mov    ebp,0xf404897
  40e5fb:	call   0x128b:0xb7f83f30
  40e602:	stc    
  40e603:	sbb    cl,BYTE PTR [ecx-0x2bc00c97]
  40e609:	mov    ecx,0x9bbcee35
  40e60e:	push   eax
  40e60f:	mov    dh,0xf3
  40e611:	test   eax,0x1c55e5aa
  40e616:	cmp    eax,0xcc74d5a7
  40e61b:	cld    
  40e61c:	xchg   edi,eax
  40e61d:	call   0x8648:0x1ec6fac4
  40e624:	ret    0xd493
  40e627:	lods   eax,DWORD PTR ds:[esi]
  40e628:	push   edx
  40e629:	mov    bl,dl
  40e62b:	jo     0x40e671
  40e62d:	sub    DWORD PTR [ecx-0x456609a7],edi
  40e633:	je     0x40e602
  40e635:	lock pop ss
  40e637:	neg    DWORD PTR [eax+0x74b33773]
  40e63d:	int    0xea
  40e63f:	enter  0x9381,0x91
  40e643:	pop    ebx
  40e644:	in     al,0xf0
  40e646:	jecxz  0x40e626
  40e648:	repnz out dx,al
  40e64a:	pop    esi
  40e64b:	sub    eax,0x274c0e3c
  40e650:	cmp    ebx,ecx
  40e652:	sub    al,0x2b
  40e654:	sub    BYTE PTR [ebx],cl
  40e656:	(bad)  
  40e657:	lods   al,BYTE PTR ds:[esi]
  40e658:	ret    0x7112
  40e65b:	cs dec eax
  40e65d:	dec    eax
  40e65e:	test   al,0xb5
  40e660:	das    
  40e661:	mov    esp,0xf363d08d
  40e666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e667:	stos   BYTE PTR es:[edi],al
  40e668:	push   ebx
  40e669:	jecxz  0x40e69a
  40e66b:	fbld   TBYTE PTR [ecx+eiz*1-0x6d663bbb]
  40e672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e673:	xchg   edi,eax
  40e674:	retf   
  40e675:	push   0x1760fbe6
  40e67a:	outs   dx,DWORD PTR ds:[esi]
  40e67b:	iret   
  40e67c:	mov    esp,0x978a76e6
  40e681:	push   ds
  40e682:	pop    ebx
  40e683:	(bad)  
  40e684:	jp     0x40e6c7
  40e686:	xchg   ebp,eax
  40e687:	mov    edx,0x242ccea6
  40e68c:	push   es
  40e68d:	or     DWORD PTR [ebp+0x31],esi
  40e690:	outs   dx,BYTE PTR ds:[esi]
  40e691:	scas   al,BYTE PTR es:[edi]
  40e692:	stos   BYTE PTR es:[edi],al
  40e693:	js     0x40e648
  40e695:	fidivr WORD PTR [edi+eiz*8-0x3afd35d3]
  40e69c:	aad    0x57
  40e69e:	pop    es
  40e69f:	cs mov cl,0x6e
  40e6a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6a3:	ins    BYTE PTR es:[edi],dx
  40e6a4:	addr16 push esp
  40e6a6:	aaa    
  40e6a7:	xlat   BYTE PTR ds:[ebx]
  40e6a8:	add    al,0x4a
  40e6aa:	mov    eax,ds:0xbb58066a
  40e6af:	pop    ebx
  40e6b0:	mov    dl,0xf3
  40e6b2:	jno    0x40e6e8
  40e6b4:	jl     0x40e714
  40e6b6:	ret    0xa9a5
  40e6b9:	mov    DWORD PTR [ebp-0x4d468fd1],edx
  40e6bf:	sub    al,0x99
  40e6c1:	mov    ebx,0x44924289
  40e6c6:	xor    eax,0x5d96dd04
  40e6cb:	xor    eax,0x272128d8
  40e6d0:	fcomp  QWORD PTR [esi]
  40e6d2:	test   DWORD PTR ds:0x14f4b37e,0x72e72423
  40e6dc:	pop    ss
  40e6dd:	int    0xdd
  40e6df:	fbld   TBYTE PTR [eax-0x5c]
  40e6e2:	ret    
  40e6e3:	retf   0xdbf2
  40e6e6:	int    0x6c
  40e6e8:	test   ecx,edx
  40e6ea:	cld    
  40e6eb:	or     bh,al
  40e6ed:	call   0xd1728908
  40e6f2:	in     al,dx
  40e6f3:	test   BYTE PTR [ebx+esi*8-0x77fa6cca],cl
  40e6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6fb:	sbb    eax,0x6ddc64ff
  40e700:	xor    ebx,DWORD PTR [eax-0x11ac2006]
  40e706:	mov    ebp,0x73bc5dd9
  40e70b:	test   eax,0xc252e028
  40e710:	loopne 0x40e782
  40e712:	shr    BYTE PTR [ecx],1
  40e714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e715:	and    al,0x1a
  40e717:	out    0xc,al
  40e719:	mov    ch,0xf8
  40e71b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e71c:	inc    edi
  40e71d:	int3   
  40e71e:	dec    ecx
  40e71f:	add    al,0xf1
  40e721:	test   BYTE PTR [edi+0x55],0x1f
  40e725:	addr16 pop ebp
  40e727:	inc    ebp
  40e728:	inc    edi
  40e729:	loope  0x40e747
  40e72b:	hlt    
  40e72c:	cmp    edi,edx
  40e72e:	xchg   esp,eax
  40e72f:	std    
  40e730:	mov    bh,0x5
  40e732:	sub    al,0x5e
  40e734:	fidiv  WORD PTR [ecx-0x35384026]
  40e73a:	test   eax,0x2a1968a8
  40e73f:	fmul   DWORD PTR [edi]
  40e741:	retf   0x3ec6
  40e744:	(bad)  
  40e746:	stc    
  40e747:	imul   BYTE PTR [esi+0x34232572]
  40e74d:	ins    DWORD PTR es:[edi],dx
  40e74e:	adc    BYTE PTR [esi+ebp*1-0x2249e869],bh
  40e755:	jo     0x40e6db
  40e757:	jecxz  0x40e704
  40e759:	dec    ecx
  40e75a:	shl    ebx,cl
  40e75c:	sub    edx,DWORD PTR [eax-0xf3a7616]
  40e762:	div    DWORD PTR [edx]
  40e764:	pusha  
  40e765:	sub    eax,0x60995b3f
  40e76a:	lods   eax,DWORD PTR ds:[esi]
  40e76b:	test   al,0x7a
  40e76d:	aaa    
  40e76e:	test   DWORD PTR [esi],esi
  40e770:	loop   0x40e706
  40e772:	add    DWORD PTR [edx-0x346d56ca],esi
  40e778:	shl    DWORD PTR [esi+ecx*4-0x73],cl
  40e77c:	mul    DWORD PTR [eax-0x4fd8a9cf]
  40e782:	or     BYTE PTR [ebx+0x15],al
  40e785:	sub    ebp,DWORD PTR [ebp+0x28]
  40e788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e789:	stos   DWORD PTR es:[edi],eax
  40e78a:	mov    edi,0x80ec2d40
  40e78f:	aad    0xa8
  40e791:	test   al,0xab
  40e793:	out    0x59,al
  40e795:	pushf  
  40e796:	cmp    ch,ah
  40e798:	sub    al,BYTE PTR [esi+eax*1+0x15]
  40e79c:	add    DWORD PTR [ecx-0x60],ecx
  40e79f:	ret    
  40e7a0:	add    DWORD PTR [esp+esi*8+0x36],ecx
  40e7a4:	sub    BYTE PTR [edi+0x66],dl
  40e7a7:	jmp    0x40e76f
  40e7a9:	pop    edx
  40e7aa:	push   esi
  40e7ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ac:	aam    0x88
  40e7ae:	sbb    eax,0xf431894f
  40e7b3:	lods   eax,DWORD PTR ds:[esi]
  40e7b4:	push   cs
  40e7b5:	sbb    ebx,DWORD PTR [edx]
  40e7b7:	cld    
  40e7b8:	mov    ebx,0x301eca8c
  40e7bd:	mov    WORD PTR [ecx+0x2c273b76],ss
  40e7c3:	pop    ds
  40e7c4:	in     eax,dx
  40e7c5:	inc    edx
  40e7c6:	mov    dh,0x95
  40e7c8:	lea    esp,[eax]
  40e7ca:	or     dl,ch
  40e7cc:	pop    ss
  40e7cd:	mov    esp,0xb19021e2
  40e7d2:	and    eax,0x1b38c448
  40e7d7:	cmp    ebp,edi
  40e7d9:	fmul   st,st(6)
  40e7db:	inc    edi
  40e7dc:	or     bh,BYTE PTR [ebp+0x94fcb31]
  40e7e2:	mov    ch,0xe6
  40e7e4:	cld    
  40e7e5:	xor    ebx,DWORD PTR [esp+ecx*4+0x6e49a021]
  40e7ec:	fisttp QWORD PTR [esi+edi*2]
  40e7ef:	jb     0x40e77e
  40e7f1:	ins    BYTE PTR es:[edi],dx
  40e7f2:	sub    BYTE PTR [eax+0x4e5ce297],ah
  40e7f8:	add    eax,0xace01202
  40e7fd:	push   0x9d81e3e9
  40e802:	push   es
  40e803:	aad    0x2b
  40e805:	and    dh,BYTE PTR [ecx-0x2d2a8634]
  40e80b:	push   es
  40e80c:	inc    eax
  40e80d:	dec    ecx
  40e80e:	mov    al,0xb4
  40e810:	push   es
  40e811:	enter  0xdb8e,0xbd
  40e815:	inc    ebp
  40e816:	(bad)  
  40e817:	repnz (bad) [edx+0x2b]
  40e81b:	repnz push esi
  40e81d:	mov    bh,0x9d
  40e81f:	xor    BYTE PTR [edx+edi*4+0x2633d875],bh
  40e826:	jae    0x40e88f
  40e828:	retf   
  40e829:	jge    0x40e86b
  40e82b:	mov    dh,0xe5
  40e82d:	shr    DWORD PTR [edx-0x6d],cl
  40e830:	dec    eax
  40e831:	mov    al,0x72
  40e833:	fst    QWORD PTR [ebp+0x34]
  40e836:	jae    0x40e810
  40e838:	mov    ebx,0x6f37484e
  40e83d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e83e:	dec    ebp
  40e83f:	scas   al,BYTE PTR es:[edi]
  40e840:	test   dl,bl
  40e842:	xchg   edx,eax
  40e843:	push   edx
  40e844:	xor    DWORD PTR [esi+0x2f32a581],esi
  40e84a:	sar    edi,cl
  40e84c:	jmp    0x38cf:0xea66d3cb
  40e853:	mov    WORD PTR [edi+0x232ef148],ds
  40e859:	mov    ecx,0x1917e7c2
  40e85e:	mov    ds,WORD PTR [esi+edi*4+0x12]
  40e862:	adc    DWORD PTR ds:0x61a28ee6,edx
  40e868:	dec    esp
  40e869:	inc    esi
  40e86a:	sbb    dh,dh
  40e86c:	imul   ebx,esi,0x58
  40e86f:	xor    dh,BYTE PTR [esp+ebp*8]
  40e872:	jle    0x40e85e
  40e874:	jle    0x40e8b7
  40e876:	sub    bl,BYTE PTR [esi+0x1f]
  40e879:	test   eax,0x2f50c3ed
  40e87e:	shl    BYTE PTR [ebx],0xbe
  40e881:	pop    edi
  40e882:	sub    bl,BYTE PTR [eax]
  40e884:	out    dx,al
  40e885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e886:	cmp    edi,DWORD PTR [esp+ecx*4+0x3994457f]
  40e88d:	inc    esp
  40e88e:	jmp    0x1015132f
  40e893:	adc    DWORD PTR [esi],esp
  40e895:	mov    esi,?
  40e897:	retf   0x78b5
  40e89a:	and    BYTE PTR [ebx+0x3cccf8c5],bl
  40e8a0:	jmp    0xb2bf97f6
  40e8a5:	aad    0xc
  40e8a7:	out    0x5b,al
  40e8a9:	xor    esp,DWORD PTR [ecx]
  40e8ab:	push   ss
  40e8ac:	cmp    BYTE PTR [edx+0xa],bh
  40e8af:	pop    eax
  40e8b0:	loopne 0x40e92e
  40e8b2:	fdiv   DWORD PTR [ecx-0x199a1e86]
  40e8b8:	jo     0x40e8b1
  40e8ba:	fidiv  DWORD PTR [ecx-0x1686083f]
  40e8c0:	pop    ss
  40e8c1:	stos   DWORD PTR es:[edi],eax
  40e8c2:	inc    esi
  40e8c3:	jl     0x40e87e
  40e8c5:	lea    eax,[edx]
  40e8c7:	jno    0x40e879
  40e8c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8ca:	test   ch,dh
  40e8cc:	or     edx,ebx
  40e8ce:	jns    0x40e935
  40e8d0:	repz jecxz 0x40e86e
  40e8d3:	xor    BYTE PTR [esi+0x3f],cl
  40e8d6:	adc    eax,0x652a520c
  40e8db:	pop    eax
  40e8dc:	jecxz  0x40e91c
  40e8de:	ret    0x7a90
  40e8e1:	mov    ebp,0x3a65a066
  40e8e6:	bound  ebp,QWORD PTR [ebx]
  40e8e8:	mov    ch,0xd7
  40e8ea:	fnstenv [ebp+0x70]
  40e8ed:	js     0x40e948
  40e8ef:	gs gs mov bh,0xfe
  40e8f3:	xchg   DWORD PTR ds:0x6cc5a35c,ecx
  40e8f9:	mov    edx,0x10cd53e4
  40e8fe:	dec    edx
  40e8ff:	popa   
  40e900:	arpl   WORD PTR [esi],bp
  40e902:	xchg   ecx,eax
  40e903:	adc    DWORD PTR [ebx],ebx
  40e905:	scas   al,BYTE PTR es:[edi]
  40e906:	pusha  
  40e907:	cmc    
  40e908:	mov    esp,0x18ca8cf1
  40e90d:	repnz loop 0x40e8fd
  40e910:	or     bl,BYTE PTR [ebx]
  40e912:	jmp    0xcae567a0
  40e917:	daa    
  40e918:	loop   0x40e8ae
  40e91a:	xor    eax,0x191c60a2
  40e91f:	xchg   BYTE PTR [esi+esi*8-0x3f500691],dh
  40e926:	test   DWORD PTR [edi],ebp
  40e928:	push   esi
  40e929:	cs and eax,0x9f58b509
  40e92f:	dec    ebp
  40e930:	mov    bh,BYTE PTR [ebx]
  40e932:	sar    ch,1
  40e934:	data16 fld DWORD PTR [edx+0x76]
  40e938:	out    dx,eax
  40e939:	xchg   DWORD PTR [edi-0x6021c807],edi
  40e93f:	fadd   DWORD PTR [edx+0x207b346]
  40e945:	clc    
  40e946:	push   esp
  40e947:	jb     0x40e8e3
  40e949:	ins    BYTE PTR es:[edi],dx
  40e94a:	adc    cl,bl
  40e94c:	ins    DWORD PTR es:[edi],dx
  40e94d:	dec    eax
  40e94e:	ret    
  40e94f:	adc    BYTE PTR [ecx+0x5f],bh
  40e952:	(bad)  
  40e953:	(bad)  
  40e954:	repz aad 0x3
  40e957:	je     0x40e96e
  40e959:	enter  0xe26b,0x8c
  40e95d:	rcr    DWORD PTR [eax],cl
  40e95f:	fstp   QWORD PTR [ecx+0x354d2b21]
  40e965:	jmp    DWORD PTR [eax+edx*8]
  40e968:	push   eax
  40e969:	sub    BYTE PTR [eax-0x509090bd],al
  40e96f:	bound  esi,QWORD PTR [esi+0x50a93a07]
  40e975:	mov    ah,BYTE PTR [esi-0x45]
  40e978:	mov    esp,0xa11ecfea
  40e97d:	pop    ebp
  40e97e:	ret    
  40e97f:	mov    ebp,0x673aaef
  40e984:	loope  0x40ea05
  40e986:	pusha  
  40e987:	xchg   esp,eax
  40e988:	cmp    bh,bl
  40e98a:	push   esp
  40e98b:	ret    0xf931
  40e98e:	data16 sbb cl,bh
  40e991:	or     ebp,DWORD PTR [edi]
  40e993:	in     eax,0x36
  40e995:	sub    DWORD PTR [ecx],eax
  40e997:	xchg   edx,eax
  40e998:	in     eax,dx
  40e999:	pop    eax
  40e99a:	push   esi
  40e99b:	and    DWORD PTR [ecx],0xffffff96
  40e99e:	div    BYTE PTR [eax-0x5279c7]
  40e9a4:	add    DWORD PTR [esi],ecx
  40e9a6:	add    al,0x4d
  40e9a8:	out    dx,eax
  40e9a9:	mov    bl,0xff
  40e9ab:	pop    ds
  40e9ac:	(bad)  
  40e9ad:	popf   
  40e9ae:	fsubrp st(6),st
  40e9b0:	sub    DWORD PTR cs:[edx-0x1914b357],eax
  40e9b7:	dec    esi
  40e9b8:	xchg   edi,eax
  40e9b9:	dec    esi
  40e9ba:	jp     0x40e946
  40e9bc:	add    al,0x8f
  40e9be:	add    bh,BYTE PTR [ebx]
  40e9c0:	and    eax,eax
  40e9c2:	test   BYTE PTR [ebx-0x2c],ah
  40e9c5:	test   DWORD PTR [esi],esi
  40e9c7:	in     al,0xa4
  40e9c9:	test   DWORD PTR [ecx-0x1e],edx
  40e9cc:	test   al,0x1d
  40e9ce:	push   es
  40e9cf:	call   DWORD PTR [ebx]
  40e9d1:	dec    edx
  40e9d2:	mov    esi,0xd903ef48
  40e9d7:	mov    al,0x3b
  40e9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9da:	ret    0x5239
  40e9dd:	xor    BYTE PTR [esi],bh
  40e9df:	cli    
  40e9e0:	aam    0x90
  40e9e2:	jmp    0x40ea24
  40e9e4:	call   0x491d723b
  40e9e9:	pusha  
  40e9ea:	cmp    bh,ah
  40e9ec:	mov    ch,BYTE PTR [eax+0x632c4507]
  40e9f2:	mov    ah,0xcb
  40e9f4:	fiadd  WORD PTR [ebx-0x23]
  40e9f7:	push   0x98182e9
  40e9fc:	out    0x76,al
  40e9fe:	xor    BYTE PTR [eax+ecx*8-0x69],bh
  40ea02:	bound  eax,QWORD PTR [eax-0x5478e1e9]
  40ea08:	cmp    edi,DWORD PTR [ecx+0x42535271]
  40ea0e:	test   BYTE PTR [eax+0x7989851f],0x38
  40ea15:	iret   
  40ea16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea17:	mov    BYTE PTR [ebx-0x4a],al
  40ea1a:	mov    dl,0xa5
  40ea1c:	xor    DWORD PTR [ebp+0x10147c9e],edi
  40ea22:	push   eax
  40ea23:	adc    esp,DWORD PTR [edi+0x5ed3effb]
  40ea29:	dec    ebx
  40ea2a:	lods   al,BYTE PTR ds:[esi]
  40ea2b:	push   ds
  40ea2c:	lds    esi,FWORD PTR [ecx+0x2]
  40ea2f:	push   es
  40ea30:	call   0x21a2:0xe1142db
  40ea37:	dec    eax
  40ea38:	xchg   ch,al
  40ea3a:	in     al,0x5b
  40ea3c:	xchg   ebx,eax
  40ea3d:	mov    eax,0xc9e1c4f4
  40ea42:	shl    DWORD PTR [ecx],1
  40ea44:	sub    BYTE PTR [edi],dl
  40ea46:	aaa    
  40ea47:	mov    ds:0xdba7bfbb,al
  40ea4c:	loopne 0x40eaa5
  40ea4e:	mov    ah,0xcd
  40ea50:	les    ebp,FWORD PTR [eax]
  40ea52:	fisub  DWORD PTR [edi+0x582c8d7d]
  40ea58:	xor    eax,0x19467204
  40ea5d:	jo     0x40ea53
  40ea5f:	jbe    0x40eaa7
  40ea61:	hlt    
  40ea62:	ja     0x40e9fa
  40ea64:	hlt    
  40ea65:	push   edx
  40ea66:	pop    eax
  40ea67:	fsubr  QWORD PTR [edi-0x704da8d4]
  40ea6d:	repnz cwde 
  40ea6f:	adc    BYTE PTR [esi-0x7c],al
  40ea72:	imul   esi,DWORD PTR [edx],0x78e17701
  40ea78:	sub    BYTE PTR [ebp-0x24],ch
  40ea7b:	test   BYTE PTR ds:[edx+0x2530201b],al
  40ea82:	lds    ecx,FWORD PTR [edi-0x51]
  40ea85:	cmp    DWORD PTR [edi+0x78b52347],0xa4188c22
  40ea8f:	js     0x40ea33
  40ea91:	or     DWORD PTR [edi],esp
  40ea93:	sbb    ah,BYTE PTR [ebp+0x3]
  40ea96:	std    
  40ea97:	push   edx
  40ea98:	rcr    bh,cl
  40ea9a:	xchg   ebx,eax
  40ea9b:	cmp    ebx,DWORD PTR [esi+edx*2]
  40ea9e:	sbb    eax,0xa1d23b80
  40eaa3:	jbe    0x40eb0e
  40eaa5:	inc    edi
  40eaa6:	mov    BYTE PTR es:[edx-0x7e5bc541],ah
  40eaad:	stos   BYTE PTR es:[edi],al
  40eaae:	push   ds
  40eaaf:	push   ebp
  40eab0:	and    al,0xf6
  40eab2:	mov    ds:0xc6bbc73,al
  40eab7:	call   0xdf4e2005
  40eabc:	imul   esi,DWORD PTR [esi+0x5f07cdcd],0x7d
  40eac3:	out    0x94,al
  40eac5:	popa   
  40eac6:	pop    ecx
  40eac7:	xor    al,0xe1
  40eac9:	shl    dh,0xa6
  40eacc:	aad    0x73
  40eace:	lea    sp,[esi+eiz*1-0x2d]
  40ead3:	sbb    al,0xb7
  40ead5:	pop    ds
  40ead6:	aas    
  40ead7:	add    eax,0xb3a4dad1
  40eadc:	aam    0xd6
  40eade:	ja     0x40eb3e
  40eae0:	lea    esp,[edx]
  40eae2:	xchg   ebp,eax
  40eae3:	pop    es
  40eae4:	dec    eax
  40eae5:	outs   dx,DWORD PTR ds:[esi]
  40eae6:	aas    
  40eae7:	dec    ebp
  40eae8:	fsubr  st,st(5)
  40eaea:	push   cs
  40eaeb:	cmp    ebp,ecx
  40eaed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaee:	pusha  
  40eaef:	fistp  DWORD PTR [ecx]
  40eaf1:	and    ebx,DWORD PTR [ecx-0x5f572530]
  40eaf7:	add    edi,ecx
  40eaf9:	call   0xd69ca914
  40eafe:	inc    edi
  40eaff:	cmp    BYTE PTR [esi],ah
  40eb01:	mov    edi,0xdcedd351
  40eb06:	xchg   esp,eax
  40eb07:	stc    
  40eb08:	mov    edi,0xd834988f
  40eb0d:	mov    bh,0xe5
  40eb0f:	or     bl,bh
  40eb11:	or     edi,DWORD PTR [ebx+edi*1-0x6ebb76c7]
  40eb18:	sbb    BYTE PTR [eax-0x70],0x76
  40eb1c:	popa   
  40eb1d:	popf   
  40eb1e:	dec    eax
  40eb1f:	lahf   
  40eb20:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb23:	fwait
  40eb24:	pusha  
  40eb25:	jns    0x40eba1
  40eb27:	ss in  al,dx
  40eb29:	jge    0x40eb0a
  40eb2b:	popa   
  40eb2c:	mov    bl,BYTE PTR [ebx+0x32]
  40eb2f:	xor    al,0x49
  40eb31:	test   BYTE PTR [edx],cl
  40eb33:	lahf   
  40eb34:	mov    bl,0x70
  40eb36:	cdq    
  40eb37:	dec    edx
  40eb38:	aaa    
  40eb39:	or     esp,DWORD PTR [ecx*8+0x3f50297]
  40eb40:	xor    ecx,DWORD PTR [ebx+0x36]
  40eb43:	idiv   ebp
  40eb45:	shl    BYTE PTR [edx-0x5f],1
  40eb48:	stos   DWORD PTR es:[edi],eax
  40eb49:	popf   
  40eb4a:	dec    ebp
  40eb4b:	leave  
  40eb4c:	inc    esi
  40eb4d:	ret    
  40eb4e:	xchg   esi,eax
  40eb4f:	fistp  QWORD PTR [eax-0x3878353f]
  40eb55:	lods   eax,DWORD PTR ds:[esi]
  40eb56:	sub    al,0x7f
  40eb58:	push   es
  40eb59:	pop    es
  40eb5a:	les    eax,FWORD PTR [ebx]
  40eb5c:	imul   eax,DWORD PTR [ecx+esi*8+0x54e3db09],0x962ca6bf
  40eb67:	push   ss
  40eb68:	mov    ebp,DWORD PTR [ebx]
  40eb6a:	and    DWORD PTR [edi],ebx
  40eb6c:	pop    ds
  40eb6d:	mov    bh,0x79
  40eb6f:	popa   
  40eb70:	add    eax,DWORD PTR [edi]
  40eb72:	and    DWORD PTR [eax],0x5e7edb01
  40eb78:	sbb    dl,dl
  40eb7a:	les    ebx,FWORD PTR [ebp-0x1be367b6]
  40eb80:	jle    0x40eb28
  40eb82:	cs retf 
  40eb84:	call   0x9fb:0x9d436fc1
  40eb8b:	ret    0x3c4a
  40eb8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb8f:	stc    
  40eb90:	mov    ecx,0x57884f10
  40eb95:	fs mov esp,0x9e249cd4
  40eb9b:	xchg   esi,eax
  40eb9c:	cmp    al,0xa7
  40eb9e:	dec    esi
  40eb9f:	cmp    DWORD PTR [eax*2+0x33f41669],edx
  40eba6:	mov    al,0xc4
  40eba8:	ret    0xe32d
  40ebab:	push   0x5fb2f67c
  40ebb0:	cmp    edi,esi
  40ebb2:	lea    ecx,[edx+0xf]
  40ebb5:	lock sahf 
  40ebb7:	inc    edi
  40ebb8:	inc    edi
  40ebb9:	xor    ch,cl
  40ebbb:	loop   0x40ebc7
  40ebbd:	mov    ch,0x46
  40ebbf:	sub    DWORD PTR [esi-0x1f],esp
  40ebc2:	or     edx,DWORD PTR [ecx-0x7b]
  40ebc5:	push   ebx
  40ebc6:	(bad)  [eax-0x57]
  40ebc9:	add    eax,0xe5855894
  40ebce:	inc    esp
  40ebcf:	mov    bh,0xa4
  40ebd1:	repz mov dl,0xfa
  40ebd4:	aas    
  40ebd5:	sub    al,0x8f
  40ebd7:	pusha  
  40ebd8:	push   ebx
  40ebd9:	add    eax,0x744aae2e
  40ebde:	stos   BYTE PTR es:[edi],al
  40ebdf:	sar    cl,cl
  40ebe1:	pop    esi
  40ebe2:	sbb    eax,0x82e3b491
  40ebe7:	or     eax,0x1c299a24
  40ebec:	scas   al,BYTE PTR es:[edi]
  40ebed:	scas   al,BYTE PTR es:[edi]
  40ebee:	mov    eax,ds:0x32f7ca69
  40ebf3:	cmp    BYTE PTR ds:0xd0ac6c4d,0x60
  40ebfa:	cmp    edi,DWORD PTR [edi-0xdbe5c0d]
  40ec00:	mov    edi,0xc1fcdbbb
  40ec05:	retf   0x4b41
  40ec08:	jle    0x40ec12
  40ec0a:	cmp    BYTE PTR [eax+0x72956158],cl
  40ec10:	and    BYTE PTR [ebx+0x22],ah
  40ec13:	mov    ecx,0x12d3e5c7
  40ec18:	dec    edi
  40ec19:	les    esi,FWORD PTR ds:0xabd02d1a
  40ec1f:	(bad)  
  40ec20:	lock cmp BYTE PTR [ebx+edx*4+0x26],dl
  40ec25:	jmp    0x40ec4c
  40ec27:	jl     0x40ec47
  40ec29:	mov    al,0xce
  40ec2b:	call   0xb81a:0x8b66560c
  40ec32:	clc    
  40ec33:	fisubr DWORD PTR [eax-0xb]
  40ec36:	sbb    DWORD PTR [ebp+0x7c6fbd95],esi
  40ec3c:	or     ebp,ebx
  40ec3e:	dec    ecx
  40ec3f:	pop    ss
  40ec40:	in     al,0xed
  40ec42:	adc    esp,DWORD PTR [edx]
  40ec44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec45:	mul    DWORD PTR [edi-0x65]
  40ec48:	xor    ecx,DWORD PTR ds:0x800cf5a2
  40ec4e:	ins    DWORD PTR es:[edi],dx
  40ec4f:	adc    DWORD PTR [ebx],0xd33a5d74
  40ec55:	faddp  st(5),st
  40ec57:	test   DWORD PTR [ebx+0x60],ecx
  40ec5a:	pop    esi
  40ec5b:	jae    0x40ec65
  40ec5d:	addr16 in eax,dx
  40ec5f:	jmp    0x40ecb1
  40ec61:	mov    ch,dh
  40ec63:	jbe    0x40ec08
  40ec65:	dec    edx
  40ec66:	mov    ebx,0x4e1132ec
  40ec6b:	mov    edi,DWORD PTR [esi-0xa]
  40ec6e:	sbb    bh,BYTE PTR [ebx]
  40ec70:	adc    BYTE PTR [ebx-0x6d],ch
  40ec73:	mov    ebx,0xd2df8552
  40ec78:	xrelease xchg DWORD PTR [edi+0x27],edx
  40ec7c:	aad    0x68
  40ec7e:	xchg   ecx,eax
  40ec7f:	add    al,0xff
  40ec81:	mov    gs,WORD PTR [esi]
  40ec83:	call   0x4b1b:0xf60fe922
  40ec8a:	sti    
  40ec8b:	xor    dl,dh
  40ec8d:	xor    BYTE PTR [ecx+esi*2-0x75ec5aeb],al
  40ec94:	add    eax,0x80378d82
  40ec99:	shl    DWORD PTR [esi-0x65236456],0x0
  40eca0:	jns    0x40ecc4
  40eca2:	xchg   ebp,eax
  40eca3:	mov    BYTE PTR [edi],bh
  40eca5:	in     al,dx
  40eca6:	add    al,0x79
  40eca8:	add    esi,esi
  40ecaa:	jmp    DWORD PTR [ebx-0x677f3872]
  40ecb0:	jo     0x40ed20
  40ecb2:	popa   
  40ecb3:	fs int3 
  40ecb5:	mov    ebx,0xa790d7d6
  40ecba:	ss aad 0xab
  40ecbd:	xor    eax,0x32ce3956
  40ecc2:	ins    DWORD PTR es:[edi],dx
  40ecc3:	adc    DWORD PTR [edi-0x6f],ebx
  40ecc6:	arpl   WORD PTR [eax-0x671bc5e5],ax
  40eccc:	mov    bh,0x77
  40ecce:	push   ecx
  40eccf:	mov    dl,0x75
  40ecd1:	dec    ebx
  40ecd2:	mov    ebp,0x9bd034fd
  40ecd7:	xchg   DWORD PTR [eax+0x40],edx
  40ecda:	dec    ebx
  40ecdb:	(bad)  
  40ecdc:	fdiv   DWORD PTR [ebx]
  40ecde:	pop    ebp
  40ecdf:	stc    
  40ece0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ece1:	(bad)  
  40ece2:	das    
  40ece3:	int3   
  40ece4:	pop    ds
  40ece5:	jge    0x40ed3e
  40ece7:	xchg   ebx,eax
  40ece8:	mov    edi,edi
  40ecea:	xor    eax,0xe6437e75
  40ecef:	mov    ch,0xd0
  40ecf1:	mov    ecx,0xc91bc08f
  40ecf6:	paddb  mm7,QWORD PTR [ebp+0x69052088]
  40ecfd:	cmp    al,0xe1
  40ecff:	ror    BYTE PTR [edi+0x28224895],1
  40ed05:	popf   
  40ed06:	jmp    0x40ece0
  40ed08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed09:	mov    edi,0x4cc076cc
  40ed0e:	pop    ss
  40ed0f:	xlat   BYTE PTR ds:[ebx]
  40ed10:	mov    ds:0x6c3eb987,al
  40ed15:	aad    0xb9
  40ed17:	jecxz  0x40ed43
  40ed19:	pop    ss
  40ed1a:	push   ebx
  40ed1b:	jecxz  0x40ed49
  40ed1d:	pop    esi
  40ed1e:	imul   esi,esi,0x7f
  40ed21:	ror    edi,1
  40ed23:	mov    ds:0xe44ca0e4,eax
  40ed28:	stc    
  40ed29:	dec    ebx
  40ed2a:	xchg   ebx,eax
  40ed2b:	mov    esp,0x2219a5fb
  40ed30:	pop    ebp
  40ed31:	xor    BYTE PTR [esi+0x2e8f9ea6],0x56
  40ed38:	dec    ebx
  40ed39:	in     al,0x44
  40ed3b:	fdiv   DWORD PTR [esi+0x126876dd]
  40ed41:	pop    ds
  40ed42:	or     ebx,eax
  40ed44:	inc    edi
  40ed45:	xchg   DWORD PTR [ebp+0x32],esp
  40ed48:	imul   eax,DWORD PTR [edi-0x2a],0x64
  40ed4c:	(bad)  
  40ed4d:	jle    0x40ed86
  40ed4f:	jge    0x40ed72
  40ed51:	(bad)  [ebp+ebp*2-0x3a]
  40ed55:	into   
  40ed56:	push   edi
  40ed57:	ror    DWORD PTR [edi-0x36760fc7],1
  40ed5d:	mov    dh,0x61
  40ed5f:	xchg   edx,eax
  40ed60:	pop    ebx
  40ed61:	hlt    
  40ed62:	push   esi
  40ed63:	or     dh,BYTE PTR [ebx-0x2c]
  40ed66:	cdq    
  40ed67:	sub    eax,DWORD PTR [esp+esi*1-0x53]
  40ed6b:	test   DWORD PTR [ebx],edx
  40ed6d:	outs   dx,BYTE PTR ds:[esi]
  40ed6e:	pop    edi
  40ed6f:	sbb    ebx,DWORD PTR [edi]
  40ed71:	pop    ecx
  40ed72:	mov    ecx,0x609d4328
  40ed77:	loope  0x40edbc
  40ed79:	jmp    0xa7af72c3
  40ed7e:	pop    ecx
  40ed7f:	or     DWORD PTR [ecx+esi*1-0x33],esp
  40ed83:	push   ebp
  40ed84:	cmp    dl,BYTE PTR [esi+0x2b]
  40ed87:	sbb    ebx,DWORD PTR [eax]
  40ed89:	adc    al,ah
  40ed8b:	and    DWORD PTR [eax+0x1e1d1107],ecx
  40ed91:	pop    ecx
  40ed92:	ins    DWORD PTR es:[edi],dx
  40ed93:	std    
  40ed94:	ins    DWORD PTR es:[edi],dx
  40ed95:	mov    ah,0x2d
  40ed97:	xchg   ecx,eax
  40ed98:	or     BYTE PTR [esi],ch
  40ed9a:	stos   DWORD PTR es:[edi],eax
  40ed9b:	dec    edx
  40ed9c:	dec    edx
  40ed9d:	sbb    bh,ch
  40ed9f:	or     DWORD PTR [edx],esp
  40eda1:	scas   al,BYTE PTR es:[edi]
  40eda2:	stc    
  40eda3:	int3   
  40eda4:	add    esp,DWORD PTR [edx+0x41e27604]
  40edaa:	jg     0x40edb1
  40edac:	sub    al,0x14
  40edae:	push   es
  40edaf:	mov    ebx,0x434d29cf
  40edb4:	mov    ebp,0xb788e5d
  40edb9:	xchg   esp,eax
  40edba:	scas   eax,DWORD PTR es:[edi]
  40edbb:	leave  
  40edbc:	mov    BYTE PTR [ecx-0x73],ch
  40edbf:	lods   eax,DWORD PTR ds:[esi]
  40edc0:	pop    ss
  40edc1:	sbb    dl,BYTE PTR [ecx]
  40edc3:	xor    eax,0xb1fdce49
  40edc8:	cwde   
  40edc9:	pop    edi
  40edca:	in     al,0x4a
  40edcc:	mov    dl,0x17
  40edce:	dec    ebp
  40edcf:	in     eax,dx
  40edd0:	and    ch,BYTE PTR [ebx-0x78]
  40edd3:	arpl   WORD PTR [ecx],di
  40edd5:	pop    ss
  40edd6:	dec    esi
  40edd7:	pop    es
  40edd8:	jmp    0x40ee58
  40edda:	mov    cl,0xad
  40eddc:	aad    0xf6
  40edde:	xchg   esi,eax
  40eddf:	sbb    DWORD PTR [ecx],edi
  40ede1:	cmp    bh,BYTE PTR [ecx-0x4c]
  40ede4:	repz mov cl,0x1b
  40ede7:	adc    BYTE PTR [esi-0x7a4272a9],dh
  40eded:	mov    ebx,0xf743893b
  40edf2:	sar    al,0xaf
  40edf5:	mov    ecx,0x7071f895
  40edfa:	fild   QWORD PTR [ebp+0x64270145]
  40ee00:	sub    eax,0x70d943de
  40ee05:	outs   dx,DWORD PTR ds:[esi]
  40ee06:	xchg   esi,eax
  40ee07:	call   0xf282:0x466ea74d
  40ee0e:	jno    0x40edd8
  40ee10:	mov    BYTE PTR [ebp+0x29],0x90
  40ee14:	jnp    0x40ee66
  40ee16:	push   ecx
  40ee17:	lahf   
  40ee18:	jp     0x40edb3
  40ee1a:	repz mul BYTE PTR [esi+edi*8+0x71152425]
  40ee22:	popa   
  40ee23:	jb     0x40ee3e
  40ee25:	push   esp
  40ee26:	xchg   edi,esp
  40ee28:	add    BYTE PTR [eax+0x65942560],cl
  40ee2e:	jb     0x40ee3c
  40ee30:	(bad)  
  40ee31:	fistp  WORD PTR [ecx+0x344e67ae]
  40ee37:	jle    0x40ee06
  40ee39:	inc    BYTE PTR [esi]
  40ee3b:	fsub   DWORD PTR [edi]
  40ee3d:	mov    edx,0x30d30713
  40ee42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee43:	arpl   WORD PTR [ecx+eax*2],ax
  40ee46:	mov    eax,0xfbca0be5
  40ee4b:	sub    ebx,edx
  40ee4d:	xor    ecx,ecx
  40ee4f:	mov    ebp,0xd8670b09
  40ee54:	push   ebp
  40ee55:	neg    ecx
  40ee57:	gs dec esi
  40ee59:	xchg   BYTE PTR [edx],ah
  40ee5b:	xchg   ecx,eax
  40ee5c:	sub    BYTE PTR [ebp+ecx*2+0x5d],bh
  40ee60:	mov    al,0x94
  40ee62:	mov    edx,0xd4b72ee3
  40ee67:	xchg   ecx,eax
  40ee68:	or     eax,DWORD PTR [edx+0x50f1031d]
  40ee6e:	(bad)  
  40ee6f:	or     al,BYTE PTR [esi-0x59]
  40ee72:	jb     0x40eeb2
  40ee74:	jae    0x40ee56
  40ee76:	cmp    al,0x7a
  40ee78:	jecxz  0x40ee57
  40ee7a:	inc    ebp
  40ee7b:	push   esi
  40ee7c:	mov    esi,DWORD PTR ds:0x35e57e02
  40ee82:	push   ebx
  40ee83:	add    edx,DWORD PTR [ebp+0x44]
  40ee86:	dec    esi
  40ee87:	jmp    0x326d07f1
  40ee8c:	jl     0x40eec2
  40ee8e:	lds    eax,FWORD PTR [ebx-0x7396737c]
  40ee94:	mov    ch,0x77
  40ee96:	jle    0x40ee74
  40ee98:	mov    eax,ds:0xb7a46d25
  40ee9d:	bound  eax,QWORD PTR [edi+0x792277ae]
  40eea3:	cmovg  esp,DWORD PTR [edi]
  40eea6:	dec    esp
  40eea7:	and    BYTE PTR [edx-0x54],bh
  40eeaa:	jne    0x40ee4f
  40eeac:	xor    eax,DWORD PTR [edi-0x7a]
  40eeaf:	xchg   esp,eax
  40eeb0:	push   0x4c7ee140
  40eeb5:	ins    BYTE PTR es:[edi],dx
  40eeb6:	loopne 0x40eeed
  40eeb8:	xchg   BYTE PTR ds:0xabb7670c,dl
  40eebe:	pop    esi
  40eebf:	ins    DWORD PTR es:[edi],dx
  40eec0:	arpl   si,cx
  40eec2:	aam    0x37
  40eec4:	cmp    al,0xd3
  40eec6:	loope  0x40eeef
  40eec8:	fmul   QWORD PTR [edx+ecx*1+0x47]
  40eecc:	stos   DWORD PTR es:[edi],eax
  40eecd:	ds inc ecx
  40eecf:	cdq    
  40eed0:	js     0x40ef34
  40eed2:	loope  0x40ee8e
  40eed4:	lods   al,BYTE PTR ds:[esi]
  40eed5:	out    0x70,al
  40eed7:	lea    edx,[edx-0x3cf77806]
  40eedd:	icebp  
  40eede:	enter  0x668c,0xa7
  40eee2:	sbb    BYTE PTR [ebp+0x3cd6c3f9],dl
  40eee8:	adc    bl,bh
  40eeea:	sbb    dh,BYTE PTR ds:0xd2a2bac4
  40eef0:	ja     0x40ef4f
  40eef2:	mov    dl,0x5e
  40eef4:	js     0x40ef1e
  40eef6:	sub    DWORD PTR [edi],ecx
  40eef8:	imul   esp,DWORD PTR [edx-0x62],0x7206b657
  40eeff:	adc    eax,0x34875b1e
  40ef04:	xor    BYTE PTR [ebx+0x3b3e564c],ah
  40ef0a:	xor    eax,0x9c3276ca
  40ef0f:	lds    esi,FWORD PTR [esi+edi*1]
  40ef12:	int3   
  40ef13:	push   eax
  40ef14:	adc    BYTE PTR [ecx+0x73],0x6
  40ef18:	mov    esi,DWORD PTR [ecx+0x73]
  40ef1b:	xchg   ecx,eax
  40ef1c:	fwait
  40ef1d:	ja     0x40eef3
  40ef1f:	sub    esi,0x353f6e34
  40ef25:	inc    edi
  40ef26:	pusha  
  40ef27:	sbb    eax,0x269262dc
  40ef2c:	(bad)  
  40ef2d:	lods   eax,DWORD PTR ds:[esi]
  40ef2e:	and    eax,0xd6a28ecb
  40ef33:	outs   dx,DWORD PTR ds:[esi]
  40ef34:	mov    edx,0xa74c3990
  40ef39:	inc    ebp
  40ef3a:	jge    0x40eec1
  40ef3c:	stc    
  40ef3d:	ins    DWORD PTR es:[edi],dx
  40ef3e:	xor    ch,bl
  40ef40:	pop    ebx
  40ef41:	ss or  dh,ah
  40ef44:	out    dx,al
  40ef45:	sbb    BYTE PTR [edx+0x38a1bb18],al
  40ef4b:	stos   DWORD PTR es:[edi],eax
  40ef4c:	mov    bh,0xc5
  40ef4e:	fld    QWORD PTR [edi+0x6e]
  40ef51:	mov    ebx,0x8d30c040
  40ef56:	in     eax,dx
  40ef57:	jno    0xab6c5b05
  40ef5d:	invd   
  40ef5f:	and    ecx,DWORD PTR [ecx]
  40ef61:	sub    al,0x4d
  40ef63:	mov    ah,0xdb
  40ef65:	sbb    eax,0x57cbae75
  40ef6a:	addr16 mov ds:0xedc8,eax
  40ef6e:	sahf   
  40ef6f:	xchg   DWORD PTR [ebx+eiz*1+0x314821a1],ebx
  40ef76:	adc    edx,ebp
  40ef78:	jg     0x40ef47
  40ef7a:	fadd   DWORD PTR ss:[eax+0x72dca597]
  40ef81:	xchg   esp,eax
  40ef82:	loope  0x40ef77
  40ef84:	inc    edi
  40ef85:	nop
  40ef86:	loopne 0x40efc5
  40ef88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef89:	aas    
  40ef8a:	and    bh,dh
  40ef8c:	inc    edx
  40ef8d:	(bad)  
  40ef8e:	cmp    BYTE PTR [edi-0x4e],bl
  40ef91:	sub    al,0xc6
  40ef93:	int3   
  40ef94:	push   edi
  40ef95:	retf   
  40ef96:	imul   ecx,DWORD PTR [eax-0x2c6cd902],0x31
  40ef9d:	xchg   edi,eax
  40ef9e:	and    eax,0x49364faa
  40efa3:	mov    al,ds:0xf0df5d35
  40efa8:	mov    ecx,0x9dda5190
  40efad:	aas    
  40efae:	lock dec edi
  40efb0:	xor    eax,0xc6de61c7
  40efb5:	ins    BYTE PTR es:[edi],dx
  40efb6:	xor    ebp,DWORD PTR [ecx-0x11]
  40efb9:	fwait
  40efba:	inc    eax
  40efbb:	push   ebx
  40efbc:	dec    eax
  40efbd:	(bad)  
  40efbe:	sbb    al,BYTE PTR [ebp+edx*8+0x7913d9fb]
  40efc5:	icebp  
  40efc6:	std    
  40efc7:	or     DWORD PTR [eax-0x7a6a1dc2],edx
  40efcd:	aas    
  40efce:	rcl    DWORD PTR [edi-0x20],1
  40efd1:	cmp    BYTE PTR gs:[edx-0xb8cea6c],cl
  40efd8:	add    ebx,DWORD PTR [ecx-0x3940540d]
  40efde:	inc    edi
  40efdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efe0:	push   ds
  40efe1:	pop    ebx
  40efe2:	das    
  40efe3:	or     BYTE PTR [ecx],bh
  40efe5:	sti    
  40efe6:	test   eax,0x20318f39
  40efeb:	outs   dx,DWORD PTR ds:[esi]
  40efec:	or     ch,BYTE PTR [ecx]
  40efee:	push   ss
  40efef:	push   0x420ac29e
  40eff4:	inc    edx
  40eff5:	ret    0x1c97
  40eff8:	mov    dh,ch
  40effa:	or     eax,0xa926d41b
  40efff:	int3   
  40f000:	mov    cl,0xeb
  40f002:	lods   al,BYTE PTR ds:[esi]
  40f003:	xor    edi,DWORD PTR [esi-0x23]
  40f006:	lahf   
  40f007:	cmp    BYTE PTR [ebp-0x1768df1f],cl
  40f00d:	push   edi
  40f00e:	pop    es
  40f00f:	pop    edx
  40f010:	cld    
  40f011:	aaa    
  40f012:	rol    DWORD PTR [eax+ebp*8],cl
  40f015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f016:	xchg   ebp,eax
  40f017:	and    ecx,DWORD PTR [edx]
  40f019:	push   0x1b0133
  40f01e:	callw  0x776c
  40f022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f023:	popa   
  40f024:	imul   ecx,DWORD PTR [edi-0x60789e73],0xffffffb1
  40f02b:	push   esp
  40f02c:	jmp    0xed2a:0x16da5ded
  40f033:	sub    esp,DWORD PTR [edi-0x7b0f5593]
  40f039:	(bad)  
  40f03a:	jo     0x40efbd
  40f03c:	mov    ah,0x9
  40f03e:	cmp    BYTE PTR [ecx+0x4c],bl
  40f041:	dec    ecx
  40f042:	js     0x40f034
  40f044:	adc    edx,DWORD PTR [edx+edi*8]
  40f047:	es cdq 
  40f049:	inc    esp
  40f04a:	test   al,0xce
  40f04c:	pop    ds
  40f04d:	push   ss
  40f04e:	and    eax,0xf4475b02
  40f053:	daa    
  40f054:	aad    0x24
  40f056:	xchg   esi,eax
  40f057:	sbb    al,0xc6
  40f059:	shl    DWORD PTR [ebp+edx*8+0x2e],1
  40f05d:	add    eax,0x1da04fbd
  40f062:	aam    0x76
  40f064:	test   eax,0xcd723db4
  40f069:	mov    ebp,0xd6a31a25
  40f06e:	fwait
  40f06f:	xchg   edi,eax
  40f070:	(bad)  
  40f071:	retf   
  40f072:	test   al,0x43
  40f074:	sbb    al,cl
  40f076:	or     eax,esp
  40f078:	dec    esi
  40f079:	mov    ds:0xd4eb9140,al
  40f07e:	ins    DWORD PTR es:[edi],dx
  40f07f:	(bad)  
  40f080:	ins    DWORD PTR es:[edi],dx
  40f081:	pusha  
  40f082:	scas   eax,DWORD PTR es:[edi]
  40f083:	mov    esi,0x38b73dc2
  40f088:	and    BYTE PTR [ecx],dh
  40f08a:	hlt    
  40f08b:	jns    0x40f100
  40f08d:	bound  ecx,QWORD PTR [esi+0x5d7fe212]
  40f093:	push   es
  40f094:	dec    ebp
  40f095:	jmp    0x40f113
  40f097:	rcl    BYTE PTR [esi-0x832e2fe],0x81
  40f09e:	lds    edx,FWORD PTR [ecx]
  40f0a0:	mov    al,0xee
  40f0a2:	dec    ebp
  40f0a3:	mov    ebx,0x72ee4632
  40f0a8:	mov    dl,BYTE PTR [ecx]
  40f0aa:	mul    DWORD PTR [edx-0x2b]
  40f0ad:	cmp    cl,bh
  40f0af:	xor    al,BYTE PTR [eax]
  40f0b1:	daa    
  40f0b2:	(bad)  
  40f0b3:	out    dx,al
  40f0b4:	cmp    al,0x47
  40f0b6:	add    ebx,DWORD PTR [ebp-0x1eaa2f12]
  40f0bc:	retf   
  40f0bd:	pop    es
  40f0be:	lods   eax,DWORD PTR ds:[esi]
  40f0bf:	push   edx
  40f0c0:	or     esi,DWORD PTR [esi]
  40f0c2:	adc    al,0xf5
  40f0c4:	xchg   BYTE PTR [edx+edx*1],dh
  40f0c7:	or     cl,dh
  40f0c9:	jo     0x40f07e
  40f0cb:	cmp    ecx,ebx
  40f0cd:	jmp    0x40f07d
  40f0cf:	out    dx,al
  40f0d0:	ror    DWORD PTR [eax-0x7d7443a2],0x3c
  40f0d7:	cmc    
  40f0d8:	(bad)  
  40f0d9:	ins    BYTE PTR es:[edi],dx
  40f0da:	jno    0x40f0f5
  40f0dc:	jo     0x40f088
  40f0de:	enter  0xf239,0x26
  40f0e2:	mov    esi,0x61a9f4f5
  40f0e7:	pop    es
  40f0e8:	iret   
  40f0e9:	ins    DWORD PTR es:[edi],dx
  40f0ea:	fldcw  WORD PTR [ebp+0x3829891c]
  40f0f0:	jbe    0x40f14f
  40f0f2:	stos   BYTE PTR es:[edi],al
  40f0f3:	push   eax
  40f0f4:	or     esi,ebp
  40f0f6:	sub    al,0x39
  40f0f8:	sar    BYTE PTR [ecx+0x1d9be769],0x8d
  40f0ff:	bound  ebp,QWORD PTR [esi-0x78]
  40f102:	fstp   TBYTE PTR [esi+0x57]
  40f105:	arpl   bx,si
  40f107:	cli    
  40f108:	push   ebx
  40f109:	nop
  40f10a:	in     eax,0xe3
  40f10c:	add    esi,edi
  40f10e:	(bad)  
  40f10f:	dec    esp
  40f110:	xor    edx,ebx
  40f112:	aad    0xfe
  40f114:	test   BYTE PTR [eax-0x7141cb79],ch
  40f11a:	sbb    eax,0x5ae007a0
  40f11f:	mov    ds:0x9b867498,al
  40f124:	adc    edx,DWORD PTR [edi+0x8]
  40f127:	das    
  40f128:	sub    bh,ch
  40f12a:	mov    al,ds:0xb258f2ae
  40f12f:	das    
  40f130:	call   0x993827e5
  40f135:	sbb    esp,edx
  40f137:	adc    eax,0x85af2863
  40f13c:	js     0x40f185
  40f13e:	mov    edi,0x5b2466e7
  40f143:	loope  0x40f11c
  40f145:	push   ss
  40f146:	sub    DWORD PTR [ebx],esi
  40f148:	xchg   edi,eax
  40f149:	push   ss
  40f14a:	and    BYTE PTR [edx],dh
  40f14c:	inc    ebx
  40f14d:	(bad)  
  40f14e:	pop    ss
  40f14f:	jg     0x40f0db
  40f151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f152:	push   esp
  40f153:	fidivr DWORD PTR [edx+0x55]
  40f156:	jbe    0x40f12b
  40f158:	pushf  
  40f159:	xchg   ecx,eax
  40f15a:	mov    dl,0xeb
  40f15c:	add    BYTE PTR [ebp-0x1c],ah
  40f15f:	ficom  DWORD PTR [esi]
  40f161:	ds stos BYTE PTR es:[edi],al
  40f163:	lock sub al,0xea
  40f166:	cmc    
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	fidiv  DWORD PTR [ebp+0x51]
  40f16b:	push   ss
  40f16c:	and    BYTE PTR ds:0xfa6cec48,dh
  40f172:	cmp    edx,0x928dab28
  40f178:	jmp    0x40f0ff
  40f17a:	mov    dh,0xb6
  40f17c:	les    edi,FWORD PTR [esi+0x6b]
  40f17f:	cmp    al,0xb3
  40f181:	fstp   QWORD PTR [ebx+0x67ab14ad]
  40f187:	or     al,0x87
  40f189:	call   0x700d:0x74ac9b65
  40f190:	inc    edi
  40f191:	cmp    BYTE PTR [esi+0x48],ch
  40f194:	lods   al,BYTE PTR ss:[esi]
  40f196:	inc    esp
  40f197:	sbb    al,0x65
  40f199:	jae    0x40f140
  40f19b:	pop    ds
  40f19c:	jmp    0x40f183
  40f19e:	mov    bl,0xb7
  40f1a0:	leave  
  40f1a1:	push   0xc930c8e4
  40f1a6:	mov    esi,0x2ffe6d6d
  40f1ab:	popa   
  40f1ac:	mov    ecx,0x1c595f02
  40f1b1:	mov    ch,0xa7
  40f1b3:	(bad)  
  40f1b5:	jge    0x40f1f1
  40f1b7:	(bad)  
  40f1b8:	push   cs
  40f1b9:	push   0x5f
  40f1bb:	out    0x83,eax
  40f1bd:	out    0xeb,eax
  40f1bf:	or     al,0xda
  40f1c1:	scas   eax,DWORD PTR es:[edi]
  40f1c2:	jmp    0x95f3:0xfda149f5
  40f1c9:	clc    
  40f1ca:	imul   esi,DWORD PTR [esi],0xea7675be
  40f1d0:	jl     0x40f220
  40f1d2:	inc    edx
  40f1d3:	sbb    bh,BYTE PTR [edi-0x407853f4]
  40f1d9:	ins    DWORD PTR es:[edi],dx
  40f1da:	mov    esp,0x148a1609
  40f1df:	mov    dl,0x86
  40f1e1:	jp     0x40f166
  40f1e3:	xor    esp,DWORD PTR [ebp+0x314cd75f]
  40f1e9:	and    DWORD PTR [eax],ecx
  40f1eb:	imul   ebx,DWORD PTR [esi+ecx*8+0x3f],0xffffffb0
  40f1f0:	pop    ss
  40f1f1:	sub    al,0xff
  40f1f3:	xchg   esp,eax
  40f1f4:	pop    edi
  40f1f5:	ins    DWORD PTR es:[edi],dx
  40f1f6:	mov    ebp,0x8e5a3c0
  40f1fb:	into   
  40f1fc:	lods   al,BYTE PTR ds:[esi]
  40f1fd:	mov    ebx,0x9acd44a1
  40f202:	dec    edi
  40f203:	iret   
  40f204:	pop    esp
  40f205:	stos   DWORD PTR es:[edi],eax
  40f206:	dec    esp
  40f207:	pop    eax
  40f208:	outs   dx,DWORD PTR ds:[esi]
  40f209:	mov    eax,ds:0x6d651fc
  40f20e:	outs   dx,BYTE PTR ds:[esi]
  40f20f:	mov    WORD PTR [edx],?
  40f211:	xor    eax,0x60c39f7d
  40f216:	(bad)  
  40f217:	and    al,0xdf
  40f219:	fsub   st,st(2)
  40f21b:	xor    al,0x75
  40f21d:	add    DWORD PTR [ecx+ebx*4+0xa],eax
  40f221:	shl    bl,0x1c
  40f224:	mov    al,ch
  40f226:	iret   
  40f227:	mov    edi,0x855e78c4
  40f22c:	pop    ebx
  40f22d:	push   cs
  40f22e:	push   ss
  40f22f:	pusha  
  40f230:	stc    
  40f231:	fsubr  DWORD PTR ds:0x6c48b025
  40f237:	lea    ecx,[ebx]
  40f239:	call   0x2b18:0x9fae992a
  40f240:	adc    BYTE PTR [ecx+ebx*4],ah
  40f243:	jecxz  0x40f2ac
  40f245:	push   ebp
  40f246:	xchg   ebx,eax
  40f247:	scas   al,BYTE PTR es:[edi]
  40f248:	xor    dh,BYTE PTR [edi]
  40f24a:	cld    
  40f24b:	pop    eax
  40f24c:	jno    0x40f256
  40f24e:	and    eax,0x12832f68
  40f253:	cmc    
  40f254:	sti    
  40f255:	fisubr DWORD PTR [edx-0x32]
  40f258:	sub    DWORD PTR [edx-0x6b],ecx
  40f25b:	mov    al,0x0
  40f25d:	mov    ebx,0x5784baf4
  40f262:	std    
  40f263:	test   eax,0xab2a00af
  40f268:	push   ds
  40f269:	les    ebx,FWORD PTR [ebp+0x25c880cb]
  40f26f:	inc    eax
  40f270:	jbe    0x40f2c3
  40f272:	jbe    0x40f208
  40f274:	or     eax,0xa51d46ee
  40f279:	dec    edi
  40f27a:	jg     0x40f284
  40f27c:	out    0xc2,eax
  40f27e:	add    BYTE PTR [ecx-0x49],bl
  40f281:	stos   DWORD PTR es:[edi],eax
  40f282:	ja     0x40f252
  40f284:	cs (bad) 
  40f286:	sub    al,0x16
  40f288:	fsubr  DWORD PTR [ebx+ecx*2+0x155876e3]
  40f28f:	adc    ah,BYTE PTR [esi-0x75]
  40f292:	push   esp
  40f293:	enter  0xa29e,0x48
  40f297:	push   edx
  40f298:	pop    eax
  40f299:	sbb    al,0x81
  40f29b:	lods   al,BYTE PTR ds:[esi]
  40f29c:	icebp  
  40f29d:	xor    DWORD PTR [eax+0x69],esi
  40f2a0:	xchg   ebp,eax
  40f2a1:	jnp    0x40f2d5
  40f2a3:	adc    ebp,ebp
  40f2a5:	test   BYTE PTR [eax-0x62577d71],cl
  40f2ab:	loop   0x40f2cb
  40f2ad:	add    esi,ebx
  40f2af:	js     0x40f2ef
  40f2b1:	ja     0x40f2c7
  40f2b3:	jbe    0x40f268
  40f2b5:	add    al,0x6f
  40f2b7:	mov    ah,BYTE PTR [edi]
  40f2b9:	pop    esi
  40f2ba:	cmp    DWORD PTR [edx],ecx
  40f2bc:	sbb    eax,0x60252a83
  40f2c1:	fistp  WORD PTR fs:[ebx+0x7d]
  40f2c5:	mov    esi,0xe412c678
  40f2ca:	pop    esi
  40f2cb:	mov    bh,0x3b
  40f2cd:	inc    edx
  40f2ce:	pop    esp
  40f2cf:	cmp    edx,ebp
  40f2d1:	pop    edi
  40f2d2:	outs   dx,DWORD PTR ds:[esi]
  40f2d3:	mov    ebp,0x5b02048f
  40f2d8:	push   edx
  40f2d9:	pop    es
  40f2da:	not    esp
  40f2dc:	leave  
  40f2dd:	push   es
  40f2de:	mov    al,0x43
  40f2e0:	cwde   
  40f2e1:	push   ecx
  40f2e2:	idiv   DWORD PTR [eax]
  40f2e4:	xor    bl,BYTE PTR [ebp+0x47]
  40f2e7:	ror    BYTE PTR [edx-0x75dda5ee],cl
  40f2ed:	iret   
  40f2ee:	mov    eax,ds:0x41df1b1b
  40f2f3:	cmc    
  40f2f4:	int    0xe6
  40f2f6:	in     eax,0x86
  40f2f8:	and    eax,0xb413594d
  40f2fd:	pop    eax
  40f2fe:	sub    eax,0x5ab86ea5
  40f303:	add    eax,0x655a778c
  40f308:	or     eax,0xb895c3a9
  40f30d:	in     eax,dx
  40f30e:	call   0x5f0e:0xacbb84da
  40f315:	mov    esp,0xc0c81cd8
  40f31a:	or     BYTE PTR [esi-0x6a509194],0x6c
  40f321:	jno    0x40f30d
  40f323:	jno    0x40f359
  40f325:	xchg   DWORD PTR [edi+0x4e],esi
  40f328:	jmp    0x6d3d:0xb5088871
  40f32f:	push   esp
  40f330:	fs xchg ecx,eax
  40f332:	xchg   BYTE PTR [edi+eax*1+0x10],bl
  40f336:	in     eax,dx
  40f337:	xor    eax,0xeadd7369
  40f33c:	in     al,0xa5
  40f33e:	xchg   ebp,eax
  40f33f:	iret   
  40f340:	mov    ebp,0x959fa6a5
  40f345:	add    dh,dh
  40f347:	sbb    BYTE PTR [eax-0x5c110b8],0x4f
  40f34e:	(bad)  
  40f350:	pop    es
  40f351:	(bad)  
  40f352:	mov    al,ds:0xc87b6dd9
  40f357:	out    0x47,al
  40f359:	mov    edx,0xbf545c22
  40f35e:	sbb    BYTE PTR [ebx+0x13],al
  40f361:	sbb    al,0xb0
  40f363:	sub    al,0x87
  40f365:	(bad)  
  40f366:	cld    
  40f367:	pop    es
  40f368:	cmp    al,0xf9
  40f36a:	fst    st(5)
  40f36c:	xchg   BYTE PTR [edx+0x6b],dh
  40f36f:	adc    al,0xa0
  40f372:	(bad)  [ecx]
  40f374:	xor    BYTE PTR [ecx-0x78],bl
  40f377:	and    BYTE PTR [eax+esi*2+0x5c],ch
  40f37b:	and    BYTE PTR [ebp-0x3d8a7817],ah
  40f381:	jecxz  0x40f3ac
  40f383:	stos   BYTE PTR es:[edi],al
  40f384:	jnp    0x40f33f
  40f386:	and    al,0xc2
  40f388:	fcom   DWORD PTR [ebx]
  40f38a:	fild   QWORD PTR ds:0x1490247a
  40f390:	mov    eax,0x5afd55b2
  40f395:	sub    ah,BYTE PTR [ebp-0x5]
  40f398:	and    al,0xd6
  40f39a:	in     eax,dx
  40f39b:	(bad)  [ebp-0x3d271876]
  40f3a1:	add    edx,DWORD PTR [esi+0x60]
  40f3a4:	int3   
  40f3a5:	test   DWORD PTR ds:0xe7ee01f,ebx
  40f3ab:	push   ds
  40f3ac:	(bad)  
  40f3ad:	and    BYTE PTR [ecx-0x27],bh
  40f3b0:	lods   al,BYTE PTR ds:[esi]
  40f3b1:	mov    bh,0x35
  40f3b3:	jmp    0x431d6943
  40f3b8:	call   0xe24e:0x19272dac
  40f3bf:	add    BYTE PTR [edi-0x78ffd070],dl
  40f3c5:	cli    
  40f3c6:	mov    dh,dh
  40f3c8:	hlt    
  40f3c9:	mov    DWORD PTR [ecx],edi
  40f3cb:	mov    WORD PTR [ecx-0x13],fs
  40f3ce:	pop    es
  40f3cf:	(bad)  
  40f3d0:	add    al,0xd4
  40f3d2:	imul   DWORD PTR [esi-0x485ec30f]
  40f3d8:	cdq    
  40f3d9:	dec    edi
  40f3da:	push   ss
  40f3db:	js     0x40f3ab
  40f3dd:	cwde   
  40f3de:	push   ebx
  40f3df:	sbb    esp,DWORD PTR [esi-0x17]
  40f3e2:	lods   eax,DWORD PTR ds:[esi]
  40f3e3:	inc    edx
  40f3e4:	push   esi
  40f3e5:	jae    0x40f41c
  40f3e7:	add    esp,DWORD PTR [eax+0x42e3e76b]
  40f3ed:	call   0xbc8a:0x7635a827
  40f3f4:	jns    0x40f457
  40f3f6:	lds    esi,FWORD PTR ds:0x334a6f70
  40f3fc:	mov    ds:0xd3c1d89a,eax
  40f401:	sub    ebp,eax
  40f403:	fdivr  st,st(5)
  40f405:	in     eax,0x63
  40f407:	sub    edi,DWORD PTR [esi+0x4613f49c]
  40f40d:	outs   dx,BYTE PTR ds:[esi]
  40f40e:	mov    esi,0xef14117e
  40f413:	and    al,0x69
  40f415:	add    BYTE PTR [ebx-0x4a8181ad],cl
  40f41b:	sub    al,BYTE PTR [edi-0x1c15c74f]
  40f421:	int    0xb8
  40f423:	lahf   
  40f424:	mov    ds:0x7e1918de,al
  40f429:	test   DWORD PTR [edi],eax
  40f42b:	jb     0x40f485
  40f42d:	add    BYTE PTR [esi],al
  40f42f:	cmp    eax,0x34a02053
  40f434:	aaa    
  40f435:	es jbe 0x40f3ce
  40f438:	mov    al,ds:0xe8839f13
  40f43d:	pushf  
  40f43e:	cld    
  40f43f:	jo     0x40f430
  40f441:	cmp    al,0xe
  40f443:	xor    al,0x49
  40f445:	jnp    0x40f459
  40f447:	stc    
  40f448:	retf   
  40f449:	add    al,0xdf
  40f44b:	inc    edi
  40f44c:	outs   dx,BYTE PTR ds:[esi]
  40f44d:	fsub   QWORD PTR [edi]
  40f44f:	adc    dl,BYTE PTR [ebx-0x16046f81]
  40f455:	inc    esi
  40f456:	and    al,0x8f
  40f458:	(bad)  
  40f459:	ss js  0x40f468
  40f45c:	lgs    esi,FWORD PTR [edx-0x18cc09fd]
  40f463:	mov    ds:0x19050345,eax
  40f468:	and    BYTE PTR [edx],0xeb
  40f46b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f46c:	push   ecx
  40f46d:	addr16 out dx,eax
  40f46f:	ret    
  40f470:	and    BYTE PTR [ebx],ah
  40f472:	ja     0x40f4c8
  40f474:	std    
  40f475:	xor    DWORD PTR [ecx+0x1c5536f5],ebx
  40f47b:	cmc    
  40f47c:	(bad)  
  40f47d:	sahf   
  40f47e:	mov    ds:0x1ca943d5,eax
  40f483:	out    0x7,al
  40f485:	dec    ebp
  40f486:	jno    0x40f408
  40f488:	jp     0x40f4fe
  40f48a:	add    DWORD PTR [ecx+0x1f],edx
  40f48d:	fimul  DWORD PTR [esi]
  40f48f:	out    0xbc,al
  40f491:	ret    
  40f492:	sub    eax,0x87b02a2a
  40f497:	and    dh,0xb5
  40f49a:	cmc    
  40f49b:	xor    esi,DWORD PTR [eax+0x2c]
  40f49e:	iret   
  40f49f:	jae    0x40f4c7
  40f4a1:	jge    0x40f4c1
  40f4a3:	dec    ecx
  40f4a4:	and    eax,0x2f3a6378
  40f4a9:	in     eax,dx
  40f4aa:	sbb    ecx,esi
  40f4ac:	pop    ss
  40f4ad:	xchg   ebx,eax
  40f4ae:	popa   
  40f4af:	jo     0x40f46f
  40f4b1:	cmp    eax,0xc073ed5a
  40f4b6:	or     BYTE PTR [esi+ebx*4+0x1441e088],al
  40f4bd:	test   DWORD PTR [ecx+ecx*4-0x788ccd3f],0x5446aced
  40f4c8:	pop    ds
  40f4c9:	mov    cs:0xcbffc785,eax
  40f4cf:	(bad)  
  40f4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d1:	(bad)  
  40f4d2:	jne    0x40f4fb
  40f4d4:	dec    ebx
  40f4d5:	scas   eax,DWORD PTR es:[edi]
  40f4d6:	aas    
  40f4d7:	or     ah,BYTE PTR [esi]
  40f4d9:	bound  eax,QWORD PTR [ebp-0x75fe6358]
  40f4df:	shl    ch,cl
  40f4e1:	jno    0x40f4ac
  40f4e3:	mov    ebx,0xbc4c298f
  40f4e8:	or     DWORD PTR [edi+ebp*1-0x1edfbf57],ebp
  40f4ef:	jmp    0x40f4f2
  40f4f1:	mov    esi,0x17e80bf
  40f4f6:	jg     0x40f54a
  40f4f8:	ss inc edi
  40f4fa:	cmp    edi,esi
  40f4fc:	retf   0xebd
  40f4ff:	dec    esp
  40f500:	test   eax,0x254beaf9
  40f505:	and    al,0xeb
  40f507:	mov    ds:0x70fabef2,eax
  40f50c:	xor    BYTE PTR ds:[ebx+0x351ac24d],bl
  40f513:	push   edi
  40f514:	test   eax,0x8d42b0ca
  40f519:	lock mov esp,0xd86a8f7
  40f51f:	cmp    DWORD PTR [edx],esp
  40f521:	mov    bl,0x6
  40f523:	iret   
  40f524:	jg     0x40f4bb
  40f526:	sub    eax,0x1367e1d2
  40f52c:	push   ds
  40f52d:	test   ebx,esi
  40f52f:	test   al,0x60
  40f531:	mul    BYTE PTR [ecx+0x3905a6c9]
  40f537:	std    
  40f538:	mov    DWORD PTR [esp+ebp*1-0x38f8363e],esi
  40f53f:	jbe    0x40f4cc
  40f541:	call   0x3016d978
  40f546:	sub    dh,BYTE PTR [esi-0x48734431]
  40f54c:	cmp    DWORD PTR ss:[eax],0x5d1eecba
  40f553:	mov    eax,ds:0x37ae3499
  40f558:	push   ebx
  40f559:	and    al,0x2a
  40f55b:	xchg   ebp,eax
  40f55c:	mov    cl,0x58
  40f55e:	lahf   
  40f55f:	push   0xb3ea0980
  40f564:	scas   al,BYTE PTR es:[edi]
  40f565:	jmp    0x2121:0x9e2d9de9
  40f56c:	(bad)  
  40f56d:	and    eax,0x3ae640aa
  40f572:	pop    eax
  40f573:	add    BYTE PTR [eax-0x5d],al
  40f576:	gs jo  0x40f5f6
  40f579:	mov    bh,0x74
  40f57b:	fstp   TBYTE PTR [edi+esi*8-0x11]
  40f57f:	shr    DWORD PTR [ecx+0x56dc3356],cl
  40f585:	out    0xf2,al
  40f587:	in     eax,0xee
  40f589:	pop    esp
  40f58a:	outs   dx,DWORD PTR ds:[esi]
  40f58b:	xor    al,0x10
  40f58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f58e:	xchg   esi,eax
  40f58f:	inc    edi
  40f590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f591:	in     eax,0x18
  40f593:	adc    BYTE PTR [ebx-0x62],cl
  40f596:	push   0x61
  40f598:	sti    
  40f599:	adc    BYTE PTR [ecx],ch
  40f59b:	lods   al,BYTE PTR ds:[esi]
  40f59c:	mov    ah,0x9c
  40f59e:	test   al,0x9d
  40f5a0:	mov    esp,0xfd5935a9
  40f5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a6:	mov    ah,BYTE PTR ss:[eax+edx*4]
  40f5aa:	mov    esi,0xd9da503d
  40f5af:	call   DWORD PTR [ebp-0x571d2373]
  40f5b5:	nop
  40f5b6:	xchg   esi,eax
  40f5b7:	push   ebp
  40f5b8:	(bad)  
  40f5b9:	aaa    
  40f5ba:	dec    esp
  40f5bb:	jg     0x40f634
  40f5bd:	je     0x40f609
  40f5bf:	arpl   sp,ax
  40f5c1:	lock loope 0x40f56d
  40f5c4:	cmp    BYTE PTR [ebp+eax*1+0x32891376],dh
  40f5cb:	inc    ecx
  40f5cc:	jno    0x8915ec6
  40f5d2:	xchg   ebx,eax
  40f5d3:	inc    ebx
  40f5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5d5:	stc    
  40f5d6:	shr    DWORD PTR [edx+0x70aa5a99],1
  40f5dc:	pop    edx
  40f5dd:	popa   
  40f5de:	ins    DWORD PTR es:[edi],dx
  40f5df:	ftst   
  40f5e1:	sti    
  40f5e2:	or     DWORD PTR [ebx],ebx
  40f5e4:	leave  
  40f5e5:	cli    
  40f5e6:	mov    edi,0x6c07c3be
  40f5eb:	iret   
  40f5ec:	in     eax,0x2
  40f5ee:	and    al,0x6c
  40f5f0:	sbb    ecx,edx
  40f5f2:	es jns 0x40f617
  40f5f5:	(bad)  
  40f5f7:	mov    edi,0xefe5ae58
  40f5fc:	jmp    0x6ccb:0x7d6f6760
  40f603:	aam    0xf9
  40f605:	lock push eax
  40f607:	repz mov esp,0x8109d3ba
  40f60d:	jne    0x40f5be
  40f60f:	sub    al,0x1
  40f611:	imul   edi,DWORD PTR [ebp+edx*1-0x14d78cb8],0xffffffa6
  40f619:	and    ch,BYTE PTR [eax+0x72]
  40f61c:	push   cs
  40f61d:	cmp    ah,ch
  40f61f:	stos   BYTE PTR es:[edi],al
  40f620:	jo     0x40f5c5
  40f622:	mov    dl,0x1a
  40f624:	cmp    dl,ch
  40f626:	repz mov esi,0x89d1c59
  40f62c:	jo     0x40f675
  40f62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62f:	cmp    DWORD PTR [eax],ebx
  40f631:	test   BYTE PTR [edi+ebx*8],bh
  40f634:	mov    eax,ds:0x152495e4
  40f639:	in     al,0x6
  40f63b:	(bad)  
  40f63c:	lock loopne 0x40f640
  40f63f:	jae    0x40f658
  40f641:	lock aas 
  40f643:	scas   al,BYTE PTR es:[edi]
  40f644:	cmp    esp,DWORD PTR [edi-0x49433733]
  40f64a:	pop    ebx
  40f64b:	add    eax,0x1a3b0aa6
  40f650:	mov    bh,0x21
  40f652:	cmc    
  40f653:	adc    bl,dh
  40f655:	ror    DWORD PTR ds:0x134f7c39,cl
  40f65b:	pop    esp
  40f65c:	aam    0x2e
  40f65e:	imul   eax,DWORD PTR [esi-0x2e6cbbaf],0x164fac6c
  40f668:	xchg   eax,esp
  40f66a:	retf   
  40f66b:	lods   eax,DWORD PTR ds:[esi]
  40f66c:	mov    BYTE PTR gs:[esi+edx*1+0x1eadc9b0],0xe
  40f675:	aaa    
  40f676:	mov    al,ds:0xc425dd64
  40f67b:	fnstenv [eax+0x16]
  40f67e:	jb     0x40f604
  40f680:	fcom   DWORD PTR [esp+ecx*2+0x2ab80751]
  40f687:	mov    esp,0x3c8d4c9
  40f68c:	ins    DWORD PTR es:[edi],dx
  40f68d:	(bad)  [ecx-0xe]
  40f690:	dec    esp
  40f691:	push   0x2e799ae6
  40f696:	out    0xb2,eax
  40f698:	ret    
  40f699:	fstp   QWORD PTR [ebx-0x1e65b2b6]
  40f69f:	fsubp  st(5),st
  40f6a1:	(bad)  
  40f6a2:	call   DWORD PTR ds:0x90153494
  40f6a8:	dec    ecx
  40f6a9:	sbb    BYTE PTR [ebp-0x61],ch
  40f6ac:	fmulp  st(1),st
  40f6ae:	ins    DWORD PTR es:[edi],dx
  40f6af:	ins    BYTE PTR es:[edi],dx
  40f6b0:	and    al,0x8c
  40f6b2:	sub    dl,BYTE PTR [eax]
  40f6b4:	js     0x40f713
  40f6b6:	mov    WORD PTR [ecx+ebx*1-0x59d1ca28],?
  40f6bd:	inc    esp
  40f6be:	jnp    0x40f717
  40f6c0:	adc    al,0xb
  40f6c2:	mov    esp,0x4f7b3c77
  40f6c7:	push   eax
  40f6c8:	mov    dl,0x9
  40f6ca:	or     DWORD PTR [ebx-0x7c590324],0xfffffff4
  40f6d1:	js     0x40f6f5
  40f6d3:	pop    esi
  40f6d4:	xor    BYTE PTR [edx+0x66bbf5e7],al
  40f6da:	xchg   ebx,eax
  40f6db:	fstp   TBYTE PTR [eax]
  40f6dd:	sti    
  40f6de:	xor    edx,DWORD PTR [esi+0x22]
  40f6e1:	xlat   BYTE PTR ds:[ebx]
  40f6e2:	cmp    BYTE PTR [ecx],0x7a
  40f6e5:	cmc    
  40f6e6:	leave  
  40f6e7:	inc    eax
  40f6e8:	jno    0x40f718
  40f6ea:	cmp    bh,al
  40f6ec:	mov    esi,0x6468abd1
  40f6f1:	iret   
  40f6f2:	imul   ebx,edi,0x29ae312c
  40f6f8:	sbb    dh,BYTE PTR [edx+0x4f412e90]
  40f6fe:	jle    0x40f6a6
  40f700:	call   0xd92c:0xdb3df9e7
  40f707:	inc    esi
  40f708:	jnp    0x40f6e2
  40f70a:	mov    eax,gs:0xa0eb7db6
  40f710:	dec    ebx
  40f711:	jmp    0x40f6c1
  40f713:	xor    al,0x95
  40f715:	adc    ebp,DWORD PTR [ebx]
  40f717:	loopne 0x40f708
  40f719:	dec    esp
  40f71a:	xor    eax,0x67f38102
  40f71f:	jge    0x40f76d
  40f721:	cmp    al,0x8c
  40f723:	mov    dh,0x2
  40f725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f726:	fdivrp st(4),st
  40f728:	lods   eax,DWORD PTR ds:[esi]
  40f729:	pushfw 
  40f72b:	(bad)  
  40f72c:	sbb    eax,0xb8279696
  40f731:	in     al,0x9
  40f733:	and    dl,BYTE PTR [edi]
  40f735:	bound  eax,QWORD PTR [ebp+0x10]
  40f738:	jo     0x40f7a8
  40f73a:	push   ebp
  40f73b:	sbb    ebp,DWORD PTR [eax+0x2e7f267]
  40f741:	inc    eax
  40f742:	add    BYTE PTR [eax],ch
  40f744:	add    ecx,eax
  40f746:	retf   
  40f747:	imul   edi,DWORD PTR [ebx+0x21],0x26
  40f74b:	xchg   BYTE PTR [esp+eax*1-0x861812b],bl
  40f752:	popa   
  40f753:	adc    BYTE PTR [ecx],0x24
  40f756:	mov    dl,0xb0
  40f758:	mov    BYTE PTR [esi],dh
  40f75a:	imul   ebp,edx,0x76
  40f75d:	mov    al,ds:0xcfe33db6
  40f762:	xchg   edx,eax
  40f763:	and    DWORD PTR [ebx],edi
  40f765:	or     al,0xd8
  40f767:	pop    ds
  40f768:	(bad)  
  40f769:	outs   dx,DWORD PTR ds:[esi]
  40f76a:	or     dh,dl
  40f76c:	inc    ebx
  40f76d:	or     DWORD PTR [esi],0x164524fa
  40f773:	pop    es
  40f774:	cwde   
  40f775:	test   DWORD PTR [edi+ebp*2-0x38],edx
  40f779:	jmp    0x40f7c9
  40f77b:	ins    BYTE PTR es:[edi],dx
  40f77c:	sub    ah,BYTE PTR [edi]
  40f77e:	pop    edx
  40f77f:	xor    al,0x10
  40f781:	push   es
  40f782:	lea    edi,[ebx]
  40f784:	add    DWORD PTR [ecx+0x501a55bb],eax
  40f78a:	ds ins DWORD PTR es:[edi],dx
  40f78c:	int3   
  40f78d:	mov    sp,0x248e
  40f791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f792:	jb     0x40f7e7
  40f794:	(bad)  
  40f795:	lods   al,BYTE PTR ds:[esi]
  40f796:	sahf   
  40f797:	and    eax,0xc000a69b
  40f79c:	pop    edi
  40f79d:	scas   eax,DWORD PTR es:[edi]
  40f79e:	pop    ebx
  40f79f:	retf   0xf605
  40f7a2:	test   eax,0x8be77970
  40f7a7:	dec    esi
  40f7a8:	jge    0x40f7f2
  40f7aa:	imul   esp,DWORD PTR [eax+0xf659cb3],0xc
  40f7b1:	or     bh,dl
  40f7b3:	daa    
  40f7b4:	xor    DWORD PTR [edi+0x18379360],ecx
  40f7ba:	jl     0x40f7f6
  40f7bc:	sub    edi,DWORD PTR [eax-0x4c]
  40f7bf:	fidiv  WORD PTR [edx]
  40f7c1:	sub    edx,DWORD PTR ds:0x780de7df
  40f7c7:	ds inc ecx
  40f7c9:	inc    eax
  40f7ca:	lock mov WORD PTR [eax],?
  40f7cd:	mov    ecx,0x88307caf
  40f7d2:	sbb    eax,DWORD PTR [ebp+0xb5336bd]
  40f7d8:	iret   
  40f7d9:	pop    esp
  40f7da:	xor    bh,al
  40f7dc:	dec    eax
  40f7dd:	xor    BYTE PTR [edi+0x3a],ch
  40f7e0:	jp     0x40f7d4
  40f7e2:	js     0x40f83e
  40f7e4:	loopne 0x40f7c7
  40f7e6:	dec    edi
  40f7e7:	adc    bh,BYTE PTR [ebx+0x55]
  40f7ea:	dec    esi
  40f7eb:	or     ecx,DWORD PTR [edx-0x73]
  40f7ee:	adc    eax,0xee81f1b8
  40f7f3:	into   
  40f7f4:	pop    ebp
  40f7f5:	stos   BYTE PTR es:[edi],al
  40f7f6:	or     esi,DWORD PTR [eax]
  40f7f8:	addr16 out dx,eax
  40f7fa:	popa   
  40f7fb:	clc    
  40f7fc:	mov    esp,0xc4c2378a
  40f801:	cmc    
  40f802:	js     0x40f7d1
  40f804:	dec    ebx
  40f805:	into   
  40f806:	call   0x6454e813
  40f80b:	or     DWORD PTR [edx],0x357a8021
  40f811:	mov    ah,0xdf
  40f813:	mov    al,ds:0x962f6d7e
  40f818:	xlat   BYTE PTR ds:[ebx]
  40f819:	clc    
  40f81a:	mov    al,ds:0xd27dbfdb
  40f81f:	push   ebp
  40f820:	pop    ss
  40f821:	mov    ch,0xac
  40f823:	mov    ebx,0xa953f757
  40f828:	frstor [eax+0x6340f901]
  40f82e:	jl     0x40f7ba
  40f830:	mov    ds:0xfd0e6f9f,al
  40f835:	and    eax,0x9ed3fdfc
  40f83a:	fs mov ebp,0xc6a3d7df
  40f840:	and    bl,BYTE PTR [edi-0x38b03563]
  40f846:	jne    0x40f82e
  40f848:	ins    BYTE PTR es:[edi],dx
  40f849:	in     al,0xb8
  40f84b:	(bad)  
  40f84d:	jne    0x40f801
  40f84f:	inc    ebx
  40f850:	daa    
  40f851:	xchg   edx,eax
  40f852:	sub    al,0x9c
  40f854:	pusha  
  40f855:	(bad)  
  40f856:	into   
  40f857:	dec    eax
  40f858:	add    BYTE PTR [edi+0x55],0x28
  40f85c:	push   ds
  40f85d:	jno    0x62b9136f
  40f863:	mov    ah,0x96
  40f865:	retf   
  40f866:	xchg   esi,eax
  40f867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f868:	dec    ecx
  40f869:	es je  0x40f81f
  40f86c:	pop    es
  40f86d:	fisubr DWORD PTR [esi]
  40f86f:	jno    0x40f87b
  40f871:	xor    DWORD PTR [edi+eiz*1],eax
  40f874:	lea    ebx,[eax-0x1236150f]
  40f87a:	jbe    0x40f827
  40f87c:	ss dec edi
  40f87e:	fs adc al,0xbb
  40f881:	int3   
  40f882:	pop    ss
  40f883:	fdivr  DWORD PTR [edx+0x2968ba69]
  40f889:	scas   eax,DWORD PTR es:[edi]
  40f88a:	sbb    bh,BYTE PTR [ecx]
  40f88c:	sub    eax,0x991e2b0a
  40f891:	push   ds
  40f892:	pop    ecx
  40f893:	push   ds
  40f894:	push   esi
  40f895:	loope  0x40f844
  40f897:	inc    esi
  40f898:	jno    0x40f836
  40f89a:	sahf   
  40f89b:	add    ch,BYTE PTR [edi]
  40f89d:	loop   0x40f835
  40f89f:	adc    al,0x2e
  40f8a1:	push   cs
  40f8a2:	sub    eax,0x7ccb15f1
  40f8a7:	ja     0x40f907
  40f8a9:	and    DWORD PTR [ebx],edi
  40f8ab:	iret   
  40f8ac:	shl    BYTE PTR [ecx-0x6e39731],0xe8
  40f8b3:	imul   eax,DWORD PTR [eax+0x1f],0xffffffa2
  40f8b7:	mov    bl,0x52
  40f8b9:	mov    ecx,DWORD PTR [ecx+0x5e]
  40f8bc:	jp     0x40f843
  40f8be:	ss xor al,0x51
  40f8c1:	mov    bh,0xed
  40f8c3:	push   eax
  40f8c4:	sti    
  40f8c5:	sbb    eax,0xb490ef51
  40f8ca:	aam    0xc
  40f8cc:	js     0x40f8f2
  40f8ce:	cmp    esp,DWORD PTR [edx+0x4f]
  40f8d1:	sbb    BYTE PTR [ecx-0x35],ah
  40f8d4:	lahf   
  40f8d5:	into   
  40f8d6:	xor    al,0xc9
  40f8d8:	and    eax,0x4425d1d5
  40f8dd:	mov    gs,WORD PTR [edx-0x47b6f652]
  40f8e3:	(bad)  
  40f8e4:	iret   
  40f8e5:	mov    cl,bh
  40f8e7:	inc    ebx
  40f8e8:	xor    dl,BYTE PTR [eax+0x32f4e5f6]
  40f8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ef:	popf   
  40f8f0:	dec    ebx
  40f8f1:	adc    dl,BYTE PTR [ebp-0x37]
  40f8f4:	sub    BYTE PTR [eax+ecx*8],al
  40f8f7:	loop   0x40f909
  40f8f9:	mov    ds:0xd9bc2887,al
  40f8fe:	or     al,0xce
  40f900:	adc    ecx,DWORD PTR ds:0x501984d2
  40f906:	clc    
  40f907:	(bad)  
  40f908:	lock xchg ebx,eax
  40f90a:	fiadd  WORD PTR [edi]
  40f90c:	mov    bh,0x46
  40f90e:	dec    eax
  40f90f:	jmp    0x2be0c050
  40f914:	inc    edx
  40f915:	(bad)  
  40f916:	mov    ah,0x7b
  40f918:	push   esi
  40f919:	scas   al,BYTE PTR es:[edi]
  40f91a:	push   ebx
  40f91b:	cmc    
  40f91c:	idiv   DWORD PTR [ebx+0x4]
  40f91f:	jbe    0x40f8f5
  40f921:	out    0x6d,al
  40f923:	pop    es
  40f924:	nop
  40f925:	popf   
  40f926:	inc    eax
  40f927:	pop    DWORD PTR [esi-0x53]
  40f92a:	mov    dl,cl
  40f92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f92d:	mov    ebx,0xc39de463
  40f932:	stos   DWORD PTR es:[edi],eax
  40f933:	ss pop ecx
  40f935:	mov    bh,0xd
  40f937:	lahf   
  40f938:	add    ebx,eax
  40f93a:	xchg   DWORD PTR cs:[edi+0x1a47a06],ebp
  40f941:	cmp    bl,BYTE PTR [ebx+0x2f1958e3]
  40f947:	pop    edx
  40f948:	ret    
  40f949:	fstp   DWORD PTR [esi]
  40f94b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f94c:	clc    
  40f94d:	in     eax,dx
  40f94e:	mov    ah,0x6e
  40f950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f951:	mov    ah,0x80
  40f953:	cmp    eax,0xaee1f9a
  40f958:	and    DWORD PTR [ebx],0x95761e80
  40f95e:	jge    0x40f93d
  40f960:	xchg   edx,eax
  40f961:	push   edi
  40f962:	aam    0x48
  40f964:	mov    BYTE PTR [ecx-0x2a66c9f0],ch
  40f96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f96c:	aas    
  40f96d:	call   0xf01c23b4
  40f972:	cmp    eax,0x23d73005
  40f977:	outs   dx,DWORD PTR ds:[esi]
  40f978:	nop
  40f979:	shl    BYTE PTR [ebx+edx*2],0x7e
  40f97d:	repnz inc esp
  40f97f:	xor    al,0x62
  40f981:	mov    ds:0xe8de6512,eax
  40f986:	or     edx,DWORD PTR [edi]
  40f988:	push   0xffffff8f
  40f98a:	mov    esi,0xadbbe962
  40f98f:	imul   ebx,DWORD PTR [ebx+0x7c9075cf],0x60
  40f996:	ror    DWORD PTR [edi-0x30],0x8d
  40f99a:	adc    ecx,DWORD PTR [edx+0x3f48be56]
  40f9a0:	inc    esp
  40f9a1:	out    dx,al
  40f9a2:	shl    BYTE PTR [edi-0xa],cl
  40f9a5:	xlat   BYTE PTR ds:[ebx]
  40f9a6:	mov    ecx,es
  40f9a8:	in     al,0xd0
  40f9aa:	xchg   esi,eax
  40f9ab:	or     esp,0x56b13e3d
  40f9b1:	dec    edi
  40f9b2:	adc    esp,DWORD PTR [eax-0x10]
  40f9b5:	fadd   DWORD PTR [ebp+0xa861369]
  40f9bb:	ins    DWORD PTR es:[edi],dx
  40f9bc:	and    dh,bh
  40f9be:	jnp    0x40f990
  40f9c0:	es push ebp
  40f9c2:	loope  0x40f9da
  40f9c4:	sub    al,BYTE PTR [edx+0x25]
  40f9c7:	popa   
  40f9c8:	pop    ss
  40f9c9:	xor    eax,0x3b5a52bb
  40f9ce:	(bad)
  40f9d1:	jns    0x40f953
  40f9d3:	pminub mm7,QWORD PTR [esi+eiz*4+0x175a8d17]
  40f9db:	jmp    0x33bbcbcd
  40f9e0:	adc    dl,cl
  40f9e2:	cld    
  40f9e3:	push   ss
  40f9e4:	(bad)  
  40f9e5:	fistp  QWORD PTR [ecx-0x3]
  40f9e8:	mov    bh,0xc1
  40f9ea:	cmp    eax,0xd59f4833
  40f9ef:	scas   al,BYTE PTR es:[edi]
  40f9f0:	push   edx
  40f9f1:	rol    BYTE PTR [edx-0x138199f],cl
  40f9f7:	not    BYTE PTR [ebp+eiz*8+0x24]
  40f9fb:	jp     0x40f9b5
  40f9fd:	push   ds
  40f9fe:	aas    
  40f9ff:	xchg   edi,eax
  40fa00:	mov    ebp,0xed0682d7
  40fa05:	push   eax
  40fa06:	addr16 pop es
  40fa08:	aas    
  40fa09:	and    eax,0x94f869ff
  40fa0e:	in     eax,0x5
  40fa10:	repnz pop ebp
  40fa12:	lea    edi,[esi-0x857f6f7]
  40fa18:	add    BYTE PTR [edx+0x6],ah
  40fa1b:	fisttp QWORD PTR [esi]
  40fa1d:	xor    BYTE PTR [eax-0x52202e3a],ah
  40fa23:	push   cs
  40fa24:	pop    ebx
  40fa25:	daa    
  40fa26:	out    0xd2,eax
  40fa28:	sub    dh,0xa6
  40fa2b:	hlt    
  40fa2c:	and    BYTE PTR [ebx-0x7ccc8b96],al
  40fa32:	fisttp WORD PTR [edx+esi*2-0x7f3be9db]
  40fa39:	retf   0xb013
  40fa3c:	ds jl  0x40fa0d
  40fa3f:	ror    DWORD PTR [esi-0x44],1
  40fa42:	jbe    0x40faa4
  40fa44:	pop    es
  40fa45:	stos   DWORD PTR es:[edi],eax
  40fa46:	inc    esi
  40fa47:	push   eax
  40fa48:	push   ds
  40fa49:	inc    ebx
  40fa4a:	arpl   si,bx
  40fa4c:	lea    eax,[eax+0x3be8ffa7]
  40fa52:	fcmovnu st,st(1)
  40fa55:	xchg   edi,eax
  40fa56:	xchg   ecx,eax
  40fa57:	ins    DWORD PTR es:[edi],dx
  40fa58:	and    al,0x38
  40fa5a:	or     eax,0xdc8d7a50
  40fa5f:	outs   dx,BYTE PTR ds:[esi]
  40fa60:	shl    BYTE PTR [edi],0xd6
  40fa63:	gs ss sbb al,0xd5
  40fa67:	add    al,0xbe
  40fa69:	sub    BYTE PTR [esi+0x5efa9d0b],ah
  40fa6f:	add    BYTE PTR [eax+ebp*1],al
  40fa72:	js     0x40fae7
  40fa74:	sahf   
  40fa75:	inc    eax
  40fa76:	adc    al,0xef
  40fa78:	adc    BYTE PTR [ecx-0x6af7b869],al
  40fa7e:	cmp    bl,BYTE PTR [eax+0x3d173533]
  40fa84:	ja     0x40fa8f
  40fa86:	cwde   
  40fa87:	dec    ecx
  40fa88:	call   ebx
  40fa8a:	scas   eax,DWORD PTR es:[edi]
  40fa8b:	inc    ecx
  40fa8c:	pushf  
  40fa8d:	add    BYTE PTR [edx],ah
  40fa8f:	fnstenv [edi-0xd]
  40fa92:	inc    esi
  40fa93:	test   BYTE PTR [edi+0x1b],ch
  40fa96:	hlt    
  40fa97:	fnstsw WORD PTR [ebx+0x49d29c04]
  40fa9d:	fs or  eax,0x3edf788c
  40faa3:	xor    DWORD PTR [edx+0x14],edx
  40faa6:	push   0xffffff83
  40faa8:	or     bh,bh
  40faaa:	push   0x795cebbc
  40faaf:	sbb    al,0xb8
  40fab1:	out    dx,eax
  40fab2:	xor    ah,BYTE PTR [esi]
  40fab4:	sahf   
  40fab5:	and    al,0x40
  40fab7:	imul   esi,DWORD PTR [edi+ecx*2],0x23
  40fabb:	adc    al,0x8f
  40fabd:	xor    esi,esp
  40fabf:	jmp    0x93fb6963
  40fac4:	aam    0x73
  40fac6:	mov    WORD PTR [edi],?
  40fac8:	out    dx,al
  40fac9:	mov    DWORD PTR [ebp-0x58],0x753ee75e
  40fad0:	mov    edx,0xef83b32c
  40fad5:	sbb    al,0x62
  40fad7:	fnstenv [ecx-0x47a76b6a]
  40fadd:	aaa    
  40fade:	pop    ebp
  40fadf:	and    BYTE PTR [edx],0x62
  40fae2:	mov    ah,0x42
  40fae4:	outs   dx,BYTE PTR ds:[esi]
  40fae5:	push   ecx
  40fae6:	add    al,0xb1
  40fae8:	add    eax,DWORD PTR [edx+ebx*2]
  40faeb:	mov    bh,0xc4
  40faed:	jo     0x40fa7b
  40faef:	adc    BYTE PTR [ecx],dh
  40faf1:	mov    ebx,DWORD PTR [edx-0x77]
  40faf4:	mov    al,0x4f
  40faf6:	popf   
  40faf7:	in     al,0xe
  40faf9:	push   0xffffffbe
  40fafb:	lods   al,BYTE PTR ds:[esi]
  40fafc:	sahf   
  40fafd:	loop   0x40fa92
  40faff:	stos   DWORD PTR es:[edi],eax
  40fb00:	dec    esp
  40fb01:	sahf   
  40fb02:	push   ss
  40fb03:	push   edi
  40fb04:	jno    0x40fb12
  40fb06:	fadd   DWORD PTR [ebx+0x65]
  40fb09:	and    dl,0xdc
  40fb0c:	in     eax,dx
  40fb0d:	dec    esp
  40fb0e:	mov    esi,0x12a7eeba
  40fb13:	sub    DWORD PTR [ecx],esi
  40fb15:	fadd   QWORD PTR [ecx+0x7f]
  40fb18:	rcr    DWORD PTR [esi+edi*8+0x15],0x83
  40fb1d:	mov    cl,0xa
  40fb1f:	adc    bl,BYTE PTR [edx+edi*8+0x48e50e01]
  40fb26:	rol    BYTE PTR [edx],1
  40fb28:	mov    ebp,0x5a77a95b
  40fb2d:	es pop ebx
  40fb2f:	popa   
  40fb30:	pop    edx
  40fb31:	mov    dl,dh
  40fb33:	add    ah,0x79
  40fb36:	js     0x40fb6f
  40fb38:	adc    DWORD PTR [edi+0x5ac54e3b],0x67636122
  40fb42:	inc    eax
  40fb43:	call   0x44a65e80
  40fb48:	adc    eax,0xc4715541
  40fb4d:	idiv   DWORD PTR [ecx]
  40fb4f:	fstp   QWORD PTR ds:0x38a00582
  40fb55:	out    0xbc,al
  40fb57:	into   
  40fb58:	mov    ah,0xc2
  40fb5a:	mov    eax,0x197d32bf
  40fb5f:	fcomi  st,st(4)
  40fb61:	sbb    ah,BYTE PTR [edi+ebp*8]
  40fb64:	add    DWORD PTR [edi+edi*4],ebp
  40fb67:	fwait
  40fb68:	enter  0x50ea,0x78
  40fb6c:	mov    dh,0xe2
  40fb6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb6f:	dec    ebx
  40fb70:	push   ds
  40fb71:	sub    eax,0x2f543fe1
  40fb76:	pop    ecx
  40fb77:	test   eax,0x15486e75
  40fb7c:	ret    
  40fb7d:	jae    0x40fb07
  40fb7f:	pop    ebp
  40fb80:	mov    eax,0x9575d5e4
  40fb85:	mov    ecx,0x7273eba7
  40fb8a:	ss shl edx,1
  40fb8d:	dec    esi
  40fb8e:	mov    BYTE PTR [edi+0x596b7418],dl
  40fb94:	fst    QWORD PTR [ecx+0x15]
  40fb97:	cdq    
  40fb98:	pop    eax
  40fb99:	sbb    al,0x5c
  40fb9b:	mov    ah,0xc5
  40fb9d:	lea    edi,[ecx]
  40fb9f:	mov    dh,0x1a
  40fba1:	aaa    
  40fba2:	mov    ebx,0xc349f817
  40fba7:	dec    edx
  40fba8:	jbe    0x40fb9c
  40fbaa:	ss inc ebx
  40fbac:	imul   ecx,DWORD PTR [edx+0x21],0xb2023bd2
  40fbb3:	hlt    
  40fbb4:	(bad)  
  40fbb6:	jo     0x40fbc2
  40fbb8:	mov    BYTE PTR [eax+0x24],bh
  40fbbb:	stc    
  40fbbc:	pop    esp
  40fbbd:	jb     0x40fb76
  40fbbf:	add    BYTE PTR [ebp+0x53],ch
  40fbc2:	lods   eax,DWORD PTR ds:[esi]
  40fbc3:	iret   
  40fbc4:	push   edx
  40fbc5:	adc    BYTE PTR [edx-0x3d8f8d92],ch
  40fbcb:	scas   eax,DWORD PTR es:[edi]
  40fbcc:	imul   eax,ebp,0x69
  40fbcf:	push   esi
  40fbd0:	test   al,0x6b
  40fbd2:	ja     0x40fb74
  40fbd4:	sti    
  40fbd5:	stos   BYTE PTR es:[edi],al
  40fbd6:	sbb    al,0x7d
  40fbd8:	push   edx
  40fbd9:	inc    esp
  40fbda:	bound  ecx,QWORD PTR [ebx+0x34a9b3b4]
  40fbe0:	xor    BYTE PTR [eax-0x6],dl
  40fbe3:	std    
  40fbe4:	and    BYTE PTR [ebp+0xa],0x9a
  40fbe8:	mov    dx,WORD PTR [edx+ecx*4-0x310314c]
  40fbf0:	leave  
  40fbf1:	out    dx,al
  40fbf2:	fstp   TBYTE PTR [ebp-0x42]
  40fbf5:	jmp    0xdd56:0xfe16367c
  40fbfc:	dec    eax
  40fbfd:	(bad)  
  40fbfe:	or     al,0xdf
  40fc00:	dec    edx
  40fc01:	int    0x7c
  40fc03:	dec    esi
  40fc04:	xor    edi,DWORD PTR [edx-0x1b]
  40fc07:	sbb    bl,ah
  40fc09:	outs   dx,BYTE PTR ds:[esi]
  40fc0a:	sub    al,cl
  40fc0c:	inc    ebp
  40fc0d:	std    
  40fc0e:	xor    BYTE PTR [ecx+0x47a3738],ch
  40fc14:	outs   dx,DWORD PTR ds:[esi]
  40fc15:	xchg   DWORD PTR [eax+0x294168fa],edi
  40fc1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc1c:	outs   dx,DWORD PTR ds:[esi]
  40fc1d:	xchg   edi,eax
  40fc1e:	shl    esi,cl
  40fc20:	cmp    DWORD PTR [eax-0x4e],ecx
  40fc23:	add    BYTE PTR [ecx+0x2f],dh
  40fc26:	or     ebp,DWORD PTR [edx+0x44176565]
  40fc2c:	(bad)  
  40fc2d:	jl     0x40fc7d
  40fc2f:	lahf   
  40fc30:	pop    edx
  40fc31:	jle    0x40fbfb
  40fc33:	pop    eax
  40fc34:	popf   
  40fc35:	push   cs
  40fc36:	xchg   DWORD PTR [ebp+0x14bf68a2],eax
  40fc3c:	push   esp
  40fc3d:	int3   
  40fc3e:	out    0xe7,eax
  40fc40:	ins    DWORD PTR es:[edi],dx
  40fc41:	dec    eax
  40fc42:	sbb    DWORD PTR [edi+0x79],0xffffffe1
  40fc46:	sbb    ebp,DWORD PTR [edi+0x2d]
  40fc49:	mov    esi,DWORD PTR [eax+0x6d0b9018]
  40fc4f:	sub    esp,edi
  40fc51:	fiadd  DWORD PTR [edi+ecx*2-0x3014e84b]
  40fc58:	adc    ch,bl
  40fc5a:	arpl   WORD PTR [edx+ebp*8-0x57ec499d],di
  40fc61:	shl    BYTE PTR [edi+0xd2e68c2],cl
  40fc67:	inc    edx
  40fc68:	mov    eax,0x2421eef5
  40fc6d:	lahf   
  40fc6e:	repz loop 0x40fc4c
  40fc71:	xchg   esi,eax
  40fc72:	cli    
  40fc73:	cld    
  40fc74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc75:	shr    BYTE PTR [esi-0x1c],1
  40fc78:	mov    BYTE PTR [edx],ch
  40fc7a:	add    al,cl
  40fc7c:	ss xchg edx,eax
  40fc7e:	sti    
  40fc7f:	sub    bl,bh
  40fc81:	pop    edi
  40fc82:	pop    ecx
  40fc83:	xor    BYTE PTR [eax],bl
  40fc85:	ret    
  40fc86:	fdivp  st(1),st
  40fc88:	cld    
  40fc89:	inc    ebp
  40fc8a:	int    0xd3
  40fc8c:	outs   dx,DWORD PTR ds:[esi]
  40fc8d:	sar    DWORD PTR [ecx+esi*1+0x1a],cl
  40fc91:	xor    ah,cl
  40fc93:	ficom  DWORD PTR [eax]
  40fc95:	mov    cl,al
  40fc97:	imul   BYTE PTR [eax+0x8ce6af0]
  40fc9d:	xor    al,BYTE PTR [ecx]
  40fc9f:	or     eax,0x750c52b4
  40fca4:	push   es
  40fca5:	int    0x48
  40fca7:	das    
  40fca8:	push   cs
  40fca9:	mov    ch,BYTE PTR [ebp-0x57]
  40fcac:	and    esi,edx
  40fcae:	ret    
  40fcaf:	xchg   BYTE PTR [ebx+0x766bdf71],bl
  40fcb5:	mov    ?,WORD PTR [eax]
  40fcb7:	sbb    DWORD PTR [eax+0x385117fb],eax
  40fcbd:	sbb    DWORD PTR [edi-0x653c1994],ebp
  40fcc3:	inc    eax
  40fcc4:	mov    al,ds:0xcf23a36f
  40fcc9:	imul   edi,DWORD PTR [eax-0x1029ca6],0x81903586
  40fcd3:	sub    BYTE PTR [edi-0x72],al
  40fcd6:	xor    DWORD PTR [eax+eiz*1+0xa3858cd],edx
  40fcdd:	dec    esp
  40fcde:	add    DWORD PTR [ebx+0x7ccb844e],edi
  40fce4:	dec    edi
  40fce5:	mov    ch,0xbe
  40fce7:	pop    es
  40fce8:	jb     0x40fcd7
  40fcea:	cmp    DWORD PTR [edx+0xb2beff7],ebx
  40fcf0:	adc    al,0x37
  40fcf2:	mov    eax,ds:0xbd331ff
  40fcf7:	jmp    0x8c30aad1
  40fcfc:	xor    DWORD PTR [esi-0x3e],edx
  40fcff:	mov    dh,0xd9
  40fd01:	out    0x45,al
  40fd03:	mov    edx,0x3085f8e0
  40fd08:	sub    DWORD PTR [edi],0xdcf8f773
  40fd0e:	jmp    0x77f60f14
  40fd13:	leave  
  40fd14:	imul   edi,esi,0x36
  40fd17:	jl     0x40fd67
  40fd19:	retf   0x6203
  40fd1c:	dec    edi
  40fd1d:	stos   BYTE PTR es:[edi],al
  40fd1e:	sub    DWORD PTR [esi+0x11],0x478deb46
  40fd25:	mov    BYTE PTR [edi],bh
  40fd27:	and    BYTE PTR [edx-0x65],dl
  40fd2a:	das    
  40fd2b:	fst    QWORD PTR [edi+edi*4]
  40fd2e:	inc    ebx
  40fd2f:	and    DWORD PTR [esi+0x4fbe1d4d],0x18
  40fd36:	jnp    0x40fd20
  40fd38:	xchg   ebx,eax
  40fd39:	jb     0x40fd89
  40fd3b:	sub    BYTE PTR [ecx+0x23],cl
  40fd3e:	imul   BYTE PTR ds:0x6e8504dd
  40fd44:	bound  edx,QWORD PTR [eax+ecx*1-0x5b]
  40fd48:	or     DWORD PTR [eax-0x24eceb74],0xabf261fb
  40fd52:	fisttp QWORD PTR [eax+0x298f818]
  40fd58:	push   0xffffff80
  40fd5a:	and    esp,ecx
  40fd5c:	in     eax,0x41
  40fd5e:	loopne 0x40fd49
  40fd60:	mov    ah,0x61
  40fd62:	dec    ebx
  40fd63:	mov    ds:0x9753af34,al
  40fd68:	fadd   st,st(5)
  40fd6a:	adc    BYTE PTR [ebx+eiz*2-0x51],dl
  40fd6e:	stos   DWORD PTR es:[edi],eax
  40fd6f:	cmp    BYTE PTR [edx],0x80
  40fd72:	dec    edx
  40fd73:	sub    BYTE PTR [edi*2+0x70f232e3],0x16
  40fd7b:	popa   
  40fd7c:	jge    0x40fd1b
  40fd7e:	inc    ebp
  40fd7f:	(bad)  
  40fd80:	test   eax,0x3e7c617e
  40fd85:	push   edi
  40fd86:	add    dl,BYTE PTR [eax]
  40fd88:	cmc    
  40fd89:	and    BYTE PTR [edi],dh
  40fd8b:	mov    esp,cs
  40fd8d:	mov    ebx,0xb9a6495a
  40fd92:	daa    
  40fd93:	add    cl,dh
  40fd95:	shr    BYTE PTR [ebx+0x20ef1571],cl
  40fd9b:	xchg   BYTE PTR [ecx+ebp*8+0x41989ad6],bl
  40fda2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fda3:	push   ecx
  40fda4:	sahf   
  40fda5:	mov    ds:0xdb8e13f2,eax
  40fdaa:	ins    BYTE PTR es:[edi],dx
  40fdab:	add    al,BYTE PTR [edx+ecx*1+0x62431cc5]
  40fdb2:	cmp    eax,0xa9af41fe
  40fdb7:	(bad)  
  40fdb8:	sub    al,0xd0
  40fdba:	mov    al,0x82
  40fdbc:	stc    
  40fdbd:	or     eax,DWORD PTR [edx+0x4ae212d5]
  40fdc3:	clc    
  40fdc4:	es sub al,0x23
  40fdc7:	cmp    al,0x1e
  40fdc9:	xchg   ebx,ecx
  40fdcb:	inc    esp
  40fdcc:	outs   dx,DWORD PTR ds:[esi]
  40fdcd:	sub    al,0xa0
  40fdcf:	inc    ebx
  40fdd0:	sti    
  40fdd1:	addr16 xchg ebp,eax
  40fdd3:	xor    edx,0xfffffff4
  40fdd6:	cmp    cl,bh
  40fdd8:	lods   al,BYTE PTR ds:[esi]
  40fdd9:	aas    
  40fdda:	pop    edi
  40fddb:	jb     0x40fe1d
  40fddd:	jmp    0x6c94:0xfdda72ad
  40fde4:	sub    eax,0xe25e78c1
  40fde9:	pushf  
  40fdea:	jecxz  0x40fda1
  40fdec:	cmp    esp,DWORD PTR [edx+0x5a505e6]
  40fdf2:	sub    eax,eax
  40fdf4:	sub    ebx,DWORD PTR [ecx+0x6525d8e5]
  40fdfa:	jno    0x40fdae
  40fdfc:	push   esp
  40fdfd:	stos   DWORD PTR es:[edi],eax
  40fdfe:	(bad)  
  40fe01:	shl    BYTE PTR [edi-0x47],cl
  40fe04:	jbe    0x40fdfd
  40fe06:	sti    
  40fe07:	sub    BYTE PTR [edx],bl
  40fe09:	xchg   DWORD PTR [ebx+edx*2-0x2c],esi
  40fe0d:	dec    ebx
  40fe0e:	std    
  40fe0f:	xchg   edx,eax
  40fe10:	fucomip st,st(0)
  40fe12:	rcl    cl,cl
  40fe14:	pop    es
  40fe15:	cs jl  0x40fe80
  40fe18:	shl    ebp,cl
  40fe1a:	inc    esp
  40fe1b:	dec    ebx
  40fe1c:	fbstp  TBYTE PTR [edx-0x7b]
  40fe1f:	jbe    0x40fda6
  40fe21:	mov    edx,0xcb3f1f5b
  40fe26:	mov    ch,0x73
  40fe28:	push   0xffffff90
  40fe2a:	cmp    DWORD PTR [edx+ecx*2+0x62],ecx
  40fe2e:	inc    esp
  40fe2f:	aaa    
  40fe30:	jns    0x40fe1f
  40fe32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe33:	test   BYTE PTR [esi-0x25],dh
  40fe36:	sbb    edi,DWORD PTR [esi]
  40fe38:	mov    eax,0xc249be51
  40fe3d:	enter  0xc567,0x9f
  40fe41:	adc    eax,0x3cdad748
  40fe46:	cmp    DWORD PTR [esi],edi
  40fe48:	iret   
  40fe49:	jecxz  0x40fec7
  40fe4b:	inc    ebp
  40fe4c:	hlt    
  40fe4d:	test   DWORD PTR [ecx+0x1f],0x2d7a4dc9
  40fe54:	aam    0x8b
  40fe56:	int    0xa3
  40fe58:	dec    ebp
  40fe59:	dec    edi
  40fe5a:	aad    0xd7
  40fe5c:	and    eax,0x8349cbe
  40fe61:	jnp    0x40fe32
  40fe63:	adc    edi,DWORD PTR [edi-0x7]
  40fe66:	pushw  es
  40fe68:	repnz push edx
  40fe6a:	mov    ebp,0xd1aa571f
  40fe6f:	mov    ch,0xa9
  40fe71:	jge    0x40feab
  40fe73:	and    DWORD PTR [edi-0x3c],edi
  40fe76:	int3   
  40fe77:	ss in  eax,0xda
  40fe7a:	dec    esi
  40fe7b:	cmp    BYTE PTR [edx+edi*4+0x75],bh
  40fe7f:	push   ds
  40fe80:	pushf  
  40fe81:	lods   eax,DWORD PTR ds:[esi]
  40fe82:	dec    esi
  40fe83:	(bad)  
  40fe84:	add    ah,cl
  40fe86:	push   0xa185b8d1
  40fe8b:	imul   edx,edi,0xffffff88
  40fe8e:	adc    al,0x81
  40fe90:	sub    eax,0xeb31e7c3
  40fe95:	fsubr  DWORD PTR [edi-0x26]
  40fe98:	xor    bh,BYTE PTR [ebx-0x151c2608]
  40fe9e:	push   0x6d
  40fea0:	call   0x4d5aa53
  40fea5:	dec    esp
  40fea6:	xchg   edi,eax
  40fea7:	jo     0x40fe3e
  40fea9:	imul   ecx,DWORD PTR [ebx+0x6d0c8b53],0xfffffff1
  40feb0:	xor    al,BYTE PTR [ecx-0x1c35e6e1]
  40feb6:	jo     0x40fe95
  40feb8:	shl    BYTE PTR [ecx],1
  40feba:	mov    ecx,0xb0648429
  40febf:	pushf  
  40fec0:	cmp    DWORD PTR [ebx-0x1a],0xa
  40fec4:	sub    eax,DWORD PTR [bx+si]
  40fec7:	xchg   BYTE PTR [edi+ecx*1+0x3d],ah
  40fecb:	mov    WORD PTR [edi+edx*1+0xb],?
  40fecf:	adc    cl,bh
  40fed1:	outs   dx,BYTE PTR ds:[esi]
  40fed2:	lahf   
  40fed3:	jge    0x40ff08
  40fed5:	clc    
  40fed6:	repnz xor al,0xa8
  40fed9:	adc    ecx,DWORD PTR [edi-0x3f1ac1c9]
  40fedf:	push   es
  40fee0:	es rcl ebp,0x39
  40fee4:	gs nop
  40fee6:	int    0x76
  40fee8:	xchg   edi,eax
  40fee9:	(bad)  
  40feea:	jno    0x40fed2
  40feec:	fsub   DWORD PTR [esi-0x637b6d3d]
  40fef2:	int3   
  40fef3:	fisubr WORD PTR [ecx-0x7de49be6]
  40fef9:	loop   0x40ff36
  40fefb:	test   DWORD PTR [ebx],ebp
  40fefd:	push   eax
  40fefe:	clc    
  40feff:	mov    ds:0x3ac7d4e5,al
  40ff04:	fidivr WORD PTR [ebx]
  40ff06:	std    
  40ff07:	ss xor al,0x58
  40ff0a:	sbb    ah,BYTE PTR [ebp+edx*1+0x303d3c37]
  40ff11:	popf   
  40ff12:	jbe    0x40fef6
  40ff14:	inc    edi
  40ff15:	and    al,0x75
  40ff17:	shr    BYTE PTR [eax+0x68],1
  40ff1a:	ins    DWORD PTR es:[edi],dx
  40ff1b:	cmp    eax,0x9595f2c8
  40ff20:	pop    ebx
  40ff21:	adc    DWORD PTR [ecx],0x32
  40ff24:	pop    esi
  40ff25:	pop    ds
  40ff26:	loopne 0x40ff24
  40ff28:	shl    ebp,0x2
  40ff2b:	aad    0xf7
  40ff2d:	lock ja 0x40febe
  40ff30:	sahf   
  40ff31:	adc    dh,BYTE PTR [ecx+esi*8+0x23c57de7]
  40ff38:	inc    DWORD PTR [ecx+0x69c3c38f]
  40ff3e:	jmp    0xa103:0x1ed3e040
  40ff45:	jns    0x40ff9d
  40ff47:	ror    DWORD PTR [ecx],cl
  40ff49:	call   0x5d1a:0x26135c84
  40ff50:	adc    bl,0x99
  40ff53:	fldz   
  40ff55:	dec    ebp
  40ff56:	push   0xd9098542
  40ff5b:	popa   
  40ff5c:	cmp    eax,0x79d75a79
  40ff61:	(bad)  
  40ff62:	jmp    0xabad:0xc48c8c61
  40ff69:	sbb    bh,BYTE PTR ds:0x5c30013d
  40ff6f:	lods   eax,DWORD PTR ds:[esi]
  40ff70:	ret    
  40ff71:	in     eax,dx
  40ff72:	lods   al,BYTE PTR ds:[esi]
  40ff73:	test   dl,ah
  40ff75:	sbb    esi,DWORD PTR [edx+0x63]
  40ff78:	mov    dh,0x3d
  40ff7a:	stc    
  40ff7b:	mov    bl,0x47
  40ff7d:	jb     0x40ffc4
  40ff7f:	(bad)  
  40ff80:	ror    DWORD PTR [ebp+0x44],1
  40ff83:	push   esi
  40ff84:	lahf   
  40ff85:	cdq    
  40ff86:	dec    ecx
  40ff87:	mov    BYTE PTR [ebx],dh
  40ff89:	pushf  
  40ff8a:	inc    ebp
  40ff8b:	and    ecx,esp
  40ff8d:	test   al,0x1e
  40ff8f:	popf   
  40ff90:	add    BYTE PTR [edx+0x7b04149d],dh
  40ff96:	fbld   TBYTE PTR [esi]
  40ff98:	jecxz  0x40ff77
  40ff9a:	cdq    
  40ff9b:	adc    eax,0x5980ddcc
  40ffa0:	fwait
  40ffa1:	jmp    DWORD PTR [edx*1-0x2bcbfd8]
  40ffa8:	stos   BYTE PTR es:[edi],al
  40ffa9:	dec    esp
  40ffaa:	cmp    BYTE PTR [eax],dh
  40ffac:	push   edi
  40ffad:	xchg   ebp,eax
  40ffae:	push   cs
  40ffaf:	xchg   esi,eax
  40ffb0:	and    DWORD PTR [ecx+0x4d05fa50],0xb
  40ffb7:	inc    esp
  40ffb8:	xchg   DWORD PTR [edx],esi
  40ffba:	dec    ebx
  40ffbb:	adc    DWORD PTR [edx+0x2d7e6447],0xffffffef
  40ffc2:	sub    BYTE PTR [ecx-0x1a1001d0],0xd1
  40ffc9:	sub    al,0xc5
  40ffcb:	mov    ecx,0x118940f7
  40ffd0:	stos   BYTE PTR es:[edi],al
  40ffd1:	and    eax,0x558f8cb2
  40ffd6:	jmp    0xd695ae0e
  40ffdb:	add    ch,BYTE PTR [eax-0x7238724a]
  40ffe1:	(bad)  
  40ffe2:	jns    0x40ffeb
  40ffe4:	lds    edx,FWORD PTR [eax+0x34aed92a]
  40ffea:	dec    esp
  40ffeb:	pop    ds
  40ffec:	inc    esi
  40ffed:	imul   esp,DWORD PTR [eax+0x5361550a],0xffffff9a
  40fff4:	sub    eax,0xd45f306d
  40fff9:	xchg   ebx,eax
  40fffa:	je     0x40ff85
  40fffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fffd:	shr    DWORD PTR [ebx],0x6a
  410000:	adc    DWORD PTR ds:0x5bf3a299,esi
  410006:	nop
  410007:	mov    edi,0x1c7977ed
  41000c:	sub    dl,BYTE PTR [edx+0x23]
  41000f:	cmp    esi,DWORD PTR [ebp-0x23]
  410012:	jns    0x40ffee
  410014:	push   esp
  410015:	pop    edx
  410016:	fcom   DWORD PTR [ebx+0x1b]
  410019:	pop    ecx
  41001a:	aaa    
  41001b:	sti    
  41001c:	rcl    BYTE PTR [ebx+0x30],cl
  41001f:	push   esi
  410020:	mov    dh,0x74
  410022:	jb     0x410097
  410024:	fs popf 
  410026:	stc    
  410027:	adc    ecx,DWORD PTR [edx]
  410029:	lea    ebx,[eax+0x3c]
  41002c:	ret    
  41002d:	jo     0x410094
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	xlat   BYTE PTR ds:[ebx]
  410031:	test   al,0xbc
  410033:	add    al,0x67
  410035:	ss add al,0x5
  410038:	jmp    0x416fec96
  41003d:	jecxz  0x41009d
  41003f:	sbb    eax,0x91c8197f
  410044:	jns    0x4100bd
  410046:	push   0xffffffb8
  410048:	mov    ebp,0xf259c19f
  41004d:	mov    dl,0xc4
  41004f:	cmp    al,0xe5
  410051:	loope  0x41003f
  410053:	popa   
  410054:	outs   dx,DWORD PTR ds:[esi]
  410055:	fmul   st(6),st
  410057:	popa   
  410058:	xor    al,bl
  41005a:	pop    ds
  41005b:	inc    ecx
  41005c:	pop    ecx
  41005d:	js     0x4100d6
  41005f:	js     0x410045
  410061:	mov    ch,0xa4
  410063:	mov    ecx,0x2e6ebb50
  410068:	rcr    BYTE PTR [eax-0x2da3b508],cl
  41006e:	pushf  
  41006f:	push   esi
  410070:	stos   BYTE PTR es:[edi],al
  410071:	ret    
  410072:	cli    
  410073:	cs jmp 0x2d3b4088
  410079:	push   ebp
  41007a:	call   0x3ef1703b
  41007f:	sub    DWORD PTR [edi+0x2eb5b5e3],0xffffffae
  410086:	jl     0x4100ec
  410088:	(bad)  
  410089:	push   cs
  41008a:	mov    edi,0xdec8a5dc
  41008f:	lock xchg edx,eax
  410091:	dec    eax
  410092:	sahf   
  410093:	push   0xf87faba
  410098:	bound  ebx,QWORD PTR [ecx+0x64]
  41009b:	jg     0x410103
  41009d:	ins    BYTE PTR es:[edi],dx
  41009e:	stc    
  41009f:	sub    ah,cl
  4100a1:	stos   DWORD PTR es:[edi],eax
  4100a2:	add    cl,bh
  4100a4:	push   ds
  4100a5:	mov    ds:0x7138440a,al
  4100aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ab:	popa   
  4100ac:	fxch   st(7)
  4100ae:	int3   
  4100af:	int    0x26
  4100b1:	jg     0x4100b1
  4100b3:	adc    DWORD PTR cs:[edx],0x18
  4100b7:	pop    ecx
  4100b8:	xchg   esp,eax
  4100b9:	iret   
  4100ba:	in     al,dx
  4100bb:	aas    
  4100bc:	jle    0x41010c
  4100be:	leave  
  4100bf:	sbb    BYTE PTR [eax-0x6ec11e20],cl
  4100c5:	sar    edi,1
  4100c7:	es xchg ah,bh
  4100ca:	(bad)  
  4100cb:	push   ebp
  4100cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100cd:	inc    edi
  4100ce:	fdiv   DWORD PTR [eax]
  4100d0:	jle    0x41012e
  4100d2:	mov    ecx,0x3100a89e
  4100d7:	dec    edi
  4100d8:	clc    
  4100d9:	mov    al,0xf1
  4100db:	sub    ecx,esi
  4100dd:	and    DWORD PTR [esi+0x5180b91e],esi
  4100e3:	xchg   esi,eax
  4100e4:	fwait
  4100e5:	(bad)  
  4100e6:	aad    0x74
  4100e8:	push   edi
  4100e9:	and    bh,dl
  4100eb:	fist   WORD PTR [edi+ecx*2+0x7d21fa5f]
  4100f2:	imul   eax,DWORD PTR [edx],0x70
  4100f5:	(bad)  
  4100f6:	push   eax
  4100f7:	mov    ebp,0x3656d6fd
  4100fc:	jmp    0x56e3f21f
  410101:	jl     0x410133
  410103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410104:	in     eax,0x45
  410106:	cwde   
  410107:	into   
  410108:	and    dh,BYTE PTR [eax]
  41010a:	pushf  
  41010b:	ss xor eax,0x3338a7b3
  410111:	pop    esp
  410112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410113:	rcl    BYTE PTR [ebx],cl
  410115:	xchg   esp,eax
  410116:	fdiv   DWORD PTR [edi+0x1]
  410119:	mov    DWORD PTR [esi-0x78be5926],ebp
  41011f:	mov    DWORD PTR [edi],ebp
  410121:	mov    ecx,DWORD PTR [edi]
  410123:	es dec edx
  410125:	or     al,0xcb
  410127:	mov    esi,0xe8184525
  41012c:	xor    dh,BYTE PTR [esp+edi*8-0x17]
  410130:	bound  esi,QWORD PTR [esi]
  410132:	mov    ch,BYTE PTR [ecx+0x1]
  410135:	or     edi,esi
  410137:	push   ss
  410138:	push   ebp
  410139:	dec    edx
  41013a:	aas    
  41013b:	ja     0x4101ba
  41013d:	jne    0x41019f
  41013f:	sub    al,0x81
  410141:	pop    ds
  410142:	sub    eax,0x4f7889ed
  410147:	js     0x410176
  410149:	cwde   
  41014a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41014b:	stos   DWORD PTR es:[edi],eax
  41014c:	enter  0x846d,0x4f
  410150:	not    BYTE PTR [edi+edi*4-0x149c086e]
  410157:	shl    BYTE PTR [ebx-0x64fc0d3d],0x14
  41015e:	into   
  41015f:	sbb    ecx,DWORD PTR ds:0x8fdfbf2b
  410165:	dec    ecx
  410166:	mov    ds:0x7d221c26,al
  41016b:	pop    ss
  41016c:	in     al,0x53
  41016e:	cmp    BYTE PTR [edi-0x4ea09b86],bh
  410174:	inc    ecx
  410175:	popa   
  410176:	sbb    bh,BYTE PTR [ecx*2+0x38a116be]
  41017d:	(bad)
  410181:	sub    eax,0x46f5ccb0
  410186:	add    edx,esi
  410188:	fs sti 
  41018a:	jg     0x4101aa
  41018c:	jecxz  0x4101cc
  41018e:	mov    edx,0x3bbdd0ea
  410193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410194:	iret   
  410195:	sbb    BYTE PTR [ecx+0x3133117a],ch
  41019b:	mov    al,0x86
  41019d:	je     0x41019e
  41019f:	xor    edx,ebp
  4101a1:	jae    0x4101fd
  4101a3:	mov    esi,0xb01af1c1
  4101a8:	sub    edi,esp
  4101aa:	inc    esi
  4101ab:	fdiv   QWORD PTR [edi+0x27c9f005]
  4101b1:	jle    0x410208
  4101b3:	mov    ebx,0xfae93509
  4101b8:	mov    al,ds:0x8e4dcf5e
  4101bd:	jno    0x410156
  4101bf:	mov    dl,0x9
  4101c1:	add    DWORD PTR [edx-0x5b],eax
  4101c4:	stc    
  4101c5:	and    edi,edx
  4101c7:	mov    BYTE PTR ds:0xd978b757,bh
  4101cd:	sti    
  4101ce:	mov    cl,0x2e
  4101d0:	inc    ebx
  4101d1:	into   
  4101d2:	into   
  4101d3:	mov    ch,0xef
  4101d5:	aad    0x45
  4101d7:	imul   eax,eax,0xc560316b
  4101dd:	cs je  0x4101b7
  4101e0:	frstor [ebx]
  4101e2:	inc    esi
  4101e3:	adc    bl,dh
  4101e5:	pop    ss
  4101e6:	popf   
  4101e7:	fsub   DWORD PTR [edx+0x53]
  4101ea:	or     esi,ecx
  4101ec:	test   eax,0x541934dd
  4101f1:	cwde   
  4101f2:	aam    0xb1
  4101f4:	or     al,bh
  4101f6:	pop    ds
  4101f7:	and    eax,0x53b57ef2
  4101fc:	sar    BYTE PTR [esi-0x2796b7c8],0x6a
  410203:	aad    0xcb
  410205:	shl    DWORD PTR [ecx+0x38],1
  410208:	repnz xchg ecx,eax
  41020a:	lea    edi,[ebp-0x13]
  41020d:	dec    eax
  41020e:	retf   0xe4f9
  410211:	sbb    cl,BYTE PTR [ebx-0x28511e89]
  410217:	les    ebp,FWORD PTR [edi+0x37]
  41021a:	fcmovu st,st(3)
  41021c:	aam    0x7e
  41021e:	cmp    eax,0xdfced2a8
  410223:	push   ebx
  410224:	sar    BYTE PTR [edx],cl
  410226:	jbe    0x41024b
  410228:	imul   edx,DWORD PTR [edi+ebx*1-0x3c],0xbc84e19
  410230:	inc    esi
  410231:	les    eax,FWORD PTR [ecx]
  410233:	jae    0x410225
  410235:	(bad)  
  410236:	mov    BYTE PTR [edi],bl
  410238:	push   0xffffffcc
  41023a:	test   BYTE PTR [ecx-0x3430bf47],cl
  410240:	cmp    DWORD PTR [ecx],edx
  410242:	mov    dl,0x4
  410244:	cmc    
  410245:	stc    
  410246:	mov    ds:0x42ed3fed,eax
  41024b:	fisttp WORD PTR [ecx-0x80]
  41024e:	mov    dl,BYTE PTR [edi]
  410250:	iret   
  410251:	dec    edx
  410252:	hlt    
  410253:	jno    0x4101f9
  410255:	dec    ebp
  410256:	cmp    DWORD PTR [edx-0x62e0338],ebp
  41025c:	hlt    
  41025d:	cmp    BYTE PTR [esi+0x69],cl
  410260:	push   0x30
  410262:	ja     0x410243
  410264:	pop    eax
  410265:	inc    ecx
  410266:	js     0x4102b4
  410268:	sti    
  410269:	mov    ebx,DWORD PTR [edi-0x33]
  41026c:	cmp    dl,dh
  41026e:	repz add ecx,eax
  410271:	aas    
  410272:	pop    bx
  410274:	push   esp
  410275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410276:	test   DWORD PTR [eax],ebx
  410278:	bnd jo 0x41027b
  41027b:	add    BYTE PTR [eax+esi*8-0x4b154f74],dh
  410282:	sbb    al,0x2b
  410284:	call   0x4b720081
  410289:	sub    ecx,edx
  41028b:	jae    0x41027b
  41028d:	inc    eax
  41028e:	imul   ecx,DWORD PTR [edx],0x3f1a1d04
  410294:	retf   0xe85d
  410297:	bound  edx,QWORD PTR [ebp+0x6f]
  41029a:	jg     0x41029f
  41029c:	popa   
  41029d:	aam    0x3d
  41029f:	adc    BYTE PTR [ebx-0x25c7d14a],ch
  4102a5:	loop   0x4102ac
  4102a7:	sahf   
  4102a8:	pop    esi
  4102a9:	add    bl,BYTE PTR [edi]
  4102ab:	mov    bh,BYTE PTR [ebp-0x5c800a0e]
  4102b1:	push   ds
  4102b2:	jmp    0x64d7:0x3fcb7506
  4102b9:	sub    DWORD PTR [esi],edi
  4102bb:	ficomp WORD PTR [ebx-0x49a34cc8]
  4102c1:	fcmove st,st(3)
  4102c3:	hlt    
  4102c4:	adc    BYTE PTR [ebx],dl
  4102c6:	sbb    BYTE PTR [edi],0x1
  4102c9:	je     0x4102a4
  4102cb:	loop   0x410322
  4102cd:	jp     0x410251
  4102cf:	jo     0x410277
  4102d1:	fimul  DWORD PTR [ecx]
  4102d3:	imul   esi,DWORD PTR [ebx-0x1346663e],0x72
  4102da:	mov    ebx,0xc8fef956
  4102df:	addr16 cld 
  4102e1:	xchg   ebx,eax
  4102e2:	jg     0x410328
  4102e4:	jp     0x4102af
  4102e6:	and    esp,0x1bf273cf
  4102ec:	jl     0x410369
  4102ee:	push   ecx
  4102ef:	pusha  
  4102f0:	out    0xb6,eax
  4102f2:	cdq    
  4102f3:	aas    
  4102f4:	in     al,0x24
  4102f6:	out    dx,eax
  4102f7:	ficom  WORD PTR [ebx+0x65]
  4102fa:	pop    ss
  4102fb:	push   ss
  4102fc:	(bad)  
  4102fd:	jmp    0xd2a2c519
  410302:	sub    dl,BYTE PTR [eax-0x5c]
  410305:	xor    eax,0x120c5617
  41030a:	jmp    0x432f7232
  41030f:	or     bh,bl
  410311:	gs cld 
  410313:	adc    ch,al
  410315:	idiv   DWORD PTR [ecx]
  410317:	adc    eax,0x692a92d9
  41031c:	ins    BYTE PTR es:[edi],dx
  41031d:	push   0x6d216cee
  410322:	push   ebx
  410323:	sbb    al,0x5d
  410325:	daa    
  410326:	stos   BYTE PTR es:[edi],al
  410327:	and    BYTE PTR [ecx-0x1f],al
  41032a:	sbb    esp,esi
  41032c:	and    DWORD PTR [esi],eax
  41032e:	jns    0x41037c
  410330:	jge    0x4102b7
  410332:	xchg   esi,eax
  410333:	pop    es
  410334:	out    0xe2,eax
  410336:	enter  0xd32d,0xab
  41033a:	ficom  DWORD PTR fs:[esi]
  41033d:	out    dx,eax
  41033e:	js     0x410398
  410340:	daa    
  410341:	mov    bh,0x93
  410343:	push   esi
  410344:	push   cs
  410345:	fisttp DWORD PTR [ecx+0x11]
  410348:	jmp    0x57d6:0x53f64691
  41034f:	sbb    esp,DWORD PTR [edx-0xadb5e3a]
  410355:	dec    esp
  410356:	(bad)  [esi+0x47]
  410359:	addr16 es xchg edi,eax
  41035c:	cmp    eax,0x4034c203
  410361:	icebp  
  410362:	jge    0x41031e
  410364:	inc    ecx
  410365:	pusha  
  410366:	(bad)  
  410367:	dec    ecx
  410368:	and    eax,0x977db1ef
  41036d:	mov    bh,BYTE PTR [eax]
  41036f:	or     DWORD PTR [ecx],edi
  410371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410373:	outs   dx,BYTE PTR ds:[esi]
  410374:	jge    0x4102fa
  410376:	add    al,0xb8
  410378:	pusha  
  410379:	mov    esp,0x68245ed5
  41037e:	add    eax,0xb9ed7a41
  410383:	adc    DWORD PTR [edi+0x3a0c9892],0x4fc9cb35
  41038d:	mov    ah,0x3c
  41038f:	ss cli 
  410391:	(bad)  
  410392:	loope  0x410359
  410394:	call   0x462:0x12212af1
  41039b:	and    al,0x22
  41039d:	inc    ebx
  41039e:	imul   ecx
  4103a0:	idiv   BYTE PTR [ebx-0x48e609ad]
  4103a6:	scas   al,BYTE PTR es:[edi]
  4103a7:	icebp  
  4103a8:	jecxz  0x41038b
  4103aa:	ficom  DWORD PTR [edx]
  4103ac:	fsubr  DWORD PTR [esi-0x7d2a5491]
  4103b2:	sub    edi,DWORD PTR [eax-0x56f7371e]
  4103b8:	jno    0x41035e
  4103ba:	jae    0x4103ae
  4103bc:	pusha  
  4103bd:	mov    ebp,0xdaa8ad4f
  4103c2:	mov    ah,0xae
  4103c4:	push   cs
  4103c5:	das    
  4103c6:	and    al,0x96
  4103c8:	dec    eax
  4103c9:	ret    0x9885
  4103cc:	(bad)  
  4103cd:	int    0xfa
  4103cf:	das    
  4103d0:	and    BYTE PTR [ecx-0x51],bh
  4103d3:	and    BYTE PTR [ebp-0x61e3e190],cl
  4103d9:	es aaa 
  4103db:	fisubr DWORD PTR [eax+0x2f]
  4103de:	rol    ebp,cl
  4103e0:	and    DWORD PTR [edi+0x64],edx
  4103e3:	xchg   edx,eax
  4103e4:	pop    esi
  4103e5:	cmp    al,0x56
  4103e7:	sbb    eax,0x24d27bd6
  4103ec:	ss dec ebp
  4103ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103ef:	enter  0x8e31,0x3a
  4103f3:	das    
  4103f4:	loopne 0x4103b7
  4103f6:	mov    ?,esi
  4103f8:	js     0x4103e8
  4103fa:	add    BYTE PTR [eax-0x795d9e72],cl
  410400:	jle    0x4103a1
  410402:	dec    esi
  410403:	mov    bh,0x97
  410405:	mov    esi,0x27010413
  41040a:	dec    edx
  41040b:	loop   0x41048c
  41040d:	stos   DWORD PTR es:[edi],eax
  41040e:	loope  0x41044b
  410410:	retf   
  410411:	or     DWORD PTR ds:0x553eb079,esi
  410417:	push   esi
  410418:	sbb    al,0xc8
  41041a:	loope  0x4103e9
  41041c:	push   0x35
  41041e:	lods   eax,DWORD PTR ds:[esi]
  41041f:	mov    ebp,0x58ba0e6d
  410424:	aam    0x4e
  410426:	(bad)  
  410427:	out    dx,eax
  410428:	mov    ebx,DWORD PTR [ebp+0x76a0fbfb]
  41042e:	sahf   
  41042f:	jbe    0x41047d
  410431:	popa   
  410432:	cdq    
  410433:	mov    ebp,0x45145f16
  410438:	mov    eax,0x4a421edb
  41043d:	xor    eax,0x6c769488
  410442:	(bad)  
  410443:	nop
  410444:	mov    eax,0x75b2909c
  410449:	addr16 popa 
  41044b:	jne    0x4104c6
  41044d:	enter  0x15bd,0xe2
  410451:	add    DWORD PTR ds:0x8d4e54e1,ebx
  410457:	inc    eax
  410458:	fwait
  410459:	pop    edx
  41045a:	int3   
  41045b:	iret   
  41045c:	sahf   
  41045d:	push   ds
  41045e:	xor    ah,cl
  410460:	ds xor al,0xa9
  410463:	push   esp
  410464:	repz aas 
  410466:	(bad)  
  410468:	push   ecx
  410469:	addr16 gs aaa 
  41046c:	xor    cl,BYTE PTR [edi]
  41046e:	jecxz  0x410487
  410470:	xor    eax,0x15bddf27
  410475:	call   0x124c:0xcb9c3663
  41047c:	xor    DWORD PTR [eax],esp
  41047e:	icebp  
  41047f:	sbb    eax,0x5bbe4555
  410484:	div    DWORD PTR [eax+0x46]
  410487:	mov    ?,WORD PTR [edx+esi*2-0x5a]
  41048b:	ds adc eax,0xd3a81d64
  410491:	(bad)  [edx+0x6359ae54]
  410497:	push   ebp
  410498:	les    esp,FWORD PTR ds:0x94c133f
  41049e:	add    BYTE PTR [edx-0x7edf55ff],bh
  4104a4:	or     bl,BYTE PTR [esi+0x2f1c8df3]
  4104aa:	retf   0xb257
  4104ad:	sar    BYTE PTR [edx+esi*8-0x4b],1
  4104b1:	test   eax,0xdfc97787
  4104b6:	test   eax,0xda930ce2
  4104bb:	in     eax,0x6e
  4104bd:	test   DWORD PTR [edx],edi
  4104bf:	xchg   esi,eax
  4104c0:	sbb    eax,0x3a3b5405
  4104c5:	or     edi,DWORD PTR [edx+ecx*4+0x27cdb05d]
  4104cc:	ja     0x4104d7
  4104ce:	push   esi
  4104cf:	adc    al,0x5b
  4104d1:	call   0x1eab:0x77f19a1b
  4104d8:	sbb    BYTE PTR [edx+0x46c84d8b],0xa2
  4104df:	lods   al,BYTE PTR ds:[esi]
  4104e0:	inc    esi
  4104e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e2:	push   es
  4104e3:	xor    eax,0xbee1e0f7
  4104e8:	mov    ?,WORD PTR [edi-0x257b1d59]
  4104ee:	call   0xc4ef:0xa286a01e
  4104f5:	retf   
  4104f6:	mov    eax,0x29f4c891
  4104fb:	and    DWORD PTR [ebx+0x7a],0xaf0ee91c
  410502:	clc    
  410503:	out    0x16,al
  410505:	stos   DWORD PTR es:[edi],eax
  410506:	push   edx
  410507:	gs pop ds
  410509:	(bad)
  41050c:	add    al,0x4f
  41050e:	scas   eax,DWORD PTR es:[edi]
  41050f:	jae    0x41049e
  410511:	mov    dh,0x1c
  410513:	int    0xeb
  410515:	pop    eax
  410516:	mov    ch,0x8
  410518:	inc    ecx
  410519:	mov    al,0x9d
  41051b:	xor    al,0xa5
  41051d:	xchg   esi,eax
  41051e:	loop   0x4104a2
  410520:	xchg   DWORD PTR [ecx+0x113e0471],esi
  410526:	rol    BYTE PTR [ebp-0x71],0xd5
  41052a:	lods   eax,DWORD PTR ds:[esi]
  41052b:	addr16 mov al,ds:0xca30
  41052f:	stos   DWORD PTR es:[edi],eax
  410530:	mov    al,0xf2
  410532:	dec    ebp
  410533:	mov    ds:0x68dd4500,al
  410538:	out    0x2c,eax
  41053a:	cwde   
  41053b:	dec    ecx
  41053c:	push   0xffffffd0
  41053e:	push   eax
  41053f:	(bad)  
  410540:	test   al,0xe1
  410542:	leave  
  410543:	sub    al,0x41
  410545:	jbe    0x41055e
  410547:	sub    DWORD PTR [esi-0x67],edi
  41054a:	jmp    0x189f:0x2575fac8
  410551:	das    
  410552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410553:	mov    ch,0xa3
  410555:	test   eax,0x63758c1
  41055a:	aam    0x7a
  41055c:	data16 sahf 
  41055e:	push   ds
  41055f:	jnp    0x4104e7
  410561:	mov    edi,0x4fe7bad3
  410566:	std    
  410567:	int3   
  410568:	push   ecx
  410569:	jns    0x4105bc
  41056b:	xor    eax,DWORD PTR [eax+0x231eda4]
  410571:	mov    bh,0x85
  410573:	or     ebx,DWORD PTR [ebp+0x50]
  410576:	mov    bh,0xff
  410578:	mov    BYTE PTR [ebx*1-0xc9c5447],ch
  41057f:	stc    
  410580:	cmp    eax,0x84cbc5bb
  410585:	int3   
  410586:	lods   al,BYTE PTR ds:[esi]
  410587:	mov    ebx,DWORD PTR es:[esi]
  41058a:	test   eax,0x8d61825b
  41058f:	dec    ebx
  410590:	loopne 0x41060a
  410592:	bound  esp,QWORD PTR [eax-0x9]
  410595:	sbb    eax,0x7cdf432c
  41059a:	enter  0xd968,0x96
  41059e:	push   ds
  41059f:	xlat   BYTE PTR ds:[ebx]
  4105a0:	mov    ss,WORD PTR [edi]
  4105a2:	in     al,dx
  4105a3:	sahf   
  4105a4:	daa    
  4105a5:	lods   al,BYTE PTR ds:[esi]
  4105a6:	cmp    dh,al
  4105a8:	xchg   ebp,eax
  4105a9:	xor    ch,BYTE PTR [esi+0x282e8bd1]
  4105af:	std    
  4105b0:	(bad)  
  4105b1:	mov    ebp,DWORD PTR [esi]
  4105b3:	dec    esi
  4105b4:	add    DWORD PTR [esi-0x126e51de],0xc4fac327
  4105be:	inc    si
  4105c0:	shl    ebp,cl
  4105c2:	in     eax,dx
  4105c3:	pop    edx
  4105c4:	or     al,0x16
  4105c6:	adc    esp,eax
  4105c8:	cmc    
  4105c9:	push   es
  4105ca:	xor    BYTE PTR [edi],0xf3
  4105cd:	lahf   
  4105ce:	mov    ds:0x3d13fc8b,al
  4105d3:	mov    esp,0x9e74d1f9
  4105d8:	in     eax,0x15
  4105da:	stc    
  4105db:	test   DWORD PTR [edx-0x59a518c7],edx
  4105e1:	xor    BYTE PTR [esi+eax*2-0x40318200],bl
  4105e8:	aam    0xee
  4105ea:	adc    cl,BYTE PTR [esi-0x35]
  4105ed:	lea    ecx,[eax-0x5b]
  4105f0:	or     dl,bl
  4105f2:	(bad)  
  4105f3:	in     al,dx
  4105f4:	and    BYTE PTR [ecx+0x58],0xe7
  4105f8:	sbb    BYTE PTR [edi-0x52eea147],0x18
  4105ff:	push   0x5a
  410601:	push   ebx
  410602:	pop    ebp
  410603:	loop   0x410625
  410605:	data16 sub BYTE PTR ss:[ecx+0x4e],0x81
  41060b:	mov    ds:0xdf720e00,al
  410610:	push   0xda929f86
  410615:	(bad)  
  410616:	mov    edx,0xa7e2b647
  41061b:	in     al,0x36
  41061d:	adc    dh,BYTE PTR [ecx-0x7f0eb382]
  410623:	cmc    
  410624:	scas   al,BYTE PTR es:[edi]
  410625:	or     al,dl
  410627:	neg    DWORD PTR [ecx-0x32f6571c]
  41062d:	jno    0x410603
  41062f:	mov    dl,ch
  410631:	loope  0x41063c
  410633:	imul   edi,DWORD PTR [ebx],0xffffff90
  410636:	pop    ebx
  410637:	js     0x410639
  410639:	daa    
  41063a:	push   0x68
  41063c:	pop    ebx
  41063d:	sbb    BYTE PTR [esi+0x75],dh
  410640:	cli    
  410641:	jns    0x4106a7
  410643:	dec    DWORD PTR [ebp-0x8]
  410646:	add    dh,BYTE PTR ds:0xa7a
  41064b:	push   ecx
  41064c:	out    dx,al
  41064d:	(bad)  
  41064e:	pop    esi
  41064f:	fldcw  WORD PTR [edx-0x6c]
  410652:	sar    BYTE PTR [ebx+0x19],cl
  410655:	adc    BYTE PTR [ebx-0x32b8d4],0x60
  41065c:	fs (bad) 
  41065e:	aam    0xbd
  410660:	lods   eax,DWORD PTR ds:[esi]
  410661:	adc    bl,al
  410663:	dec    esp
  410664:	aam    0xe1
  410666:	adc    DWORD PTR [eax-0x6b],edx
  410669:	mov    bl,0xd2
  41066b:	pop    ebp
  41066c:	sub    ebp,DWORD PTR [ecx+0x21]
  41066f:	iret   
  410670:	pop    es
  410671:	pop    esp
  410672:	xlat   BYTE PTR ds:[ebx]
  410673:	ficom  WORD PTR [eax-0x64]
  410676:	sub    dh,BYTE PTR [edx-0x76a1eb89]
  41067c:	jg     0x41064d
  41067e:	bound  ebp,QWORD PTR [esp+ebp*1+0x3f]
  410682:	xchg   ebp,eax
  410683:	inc    esi
  410684:	push   esp
  410685:	xlat   BYTE PTR ds:[ebx]
  410686:	stos   DWORD PTR es:[edi],eax
  410687:	jnp    0x4106c0
  410689:	clc    
  41068a:	pop    eax
  41068b:	lock push es
  41068d:	pop    ebp
  41068e:	or     DWORD PTR [esi-0x55],eax
  410691:	adc    bl,BYTE PTR [eax]
  410693:	jno    0x410698
  410695:	and    BYTE PTR [esi],al
  410697:	and    al,0xa8
  410699:	aad    0x34
  41069b:	xor    eax,0x2f7e3ce9
  4106a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a1:	test   al,0x41
  4106a3:	les    ebp,FWORD PTR [ebx-0x43]
  4106a6:	mov    DWORD PTR [ebp-0x79415110],eax
  4106ac:	sbb    eax,0xc30495a4
  4106b1:	ret    0xf235
  4106b4:	mov    bl,0x26
  4106b6:	scas   eax,DWORD PTR es:[edi]
  4106b7:	or     DWORD PTR [eax-0x25cfdc9c],eax
  4106bd:	jb     0x410676
  4106bf:	ret    
  4106c0:	out    0xa6,al
  4106c2:	pop    esp
  4106c3:	int    0xfb
  4106c5:	adc    cl,dh
  4106c7:	lods   eax,DWORD PTR ds:[esi]
  4106c8:	imul   esp,ecx,0xffffffc0
  4106cb:	push   edi
  4106cc:	adc    esp,edx
  4106ce:	mov    eax,0x57301942
  4106d3:	jecxz  0x41074b
  4106d5:	jns    0x410755
  4106d7:	repnz push esp
  4106d9:	cld    
  4106da:	arpl   WORD PTR [esp+ebx*8],di
  4106dd:	ror    DWORD PTR [esi-0x60],1
  4106e0:	xor    esp,DWORD PTR [esi+0x23]
  4106e3:	lock out dx,eax
  4106e5:	fbstp  TBYTE PTR [ebx-0x20]
  4106e8:	lods   eax,DWORD PTR ds:[esi]
  4106e9:	xor    edi,0x56965206
  4106ef:	cmc    
  4106f0:	and    BYTE PTR [ecx+0x19],ch
  4106f3:	sbb    eax,0x3ddf7504
  4106f8:	xchg   DWORD PTR [eax*2+0x21abfb56],ecx
  4106ff:	sub    al,0x3b
  410701:	xchg   ebp,eax
  410702:	cmp    DWORD PTR [edi+edi*8+0x24f407c1],esi
  410709:	scas   al,BYTE PTR es:[edi]
  41070a:	fiadd  DWORD PTR [edx-0x2092f0a8]
  410710:	push   edx
  410711:	stos   BYTE PTR es:[edi],al
  410712:	sti    
  410713:	je     0x4106a8
  410715:	std    
  410716:	xchg   ecx,eax
  410717:	push   0xffffffe6
  410719:	imul   esi,DWORD PTR [esi],0xd23aadcf
  41071f:	(bad)  
  410720:	in     al,dx
  410721:	nop
  410722:	pop    esi
  410723:	push   ebp
  410724:	arpl   WORD PTR [edi],di
  410726:	fisub  WORD PTR ds:0x54473929
  41072c:	jae    0x4106dd
  41072e:	aas    
  41072f:	push   ss
  410730:	xchg   esp,eax
  410731:	lea    esi,[ecx]
  410733:	dec    edx
  410734:	sar    BYTE PTR ss:[eax+eiz*2+0x68],cl
  410739:	cdq    
  41073a:	mov    ah,0x74
  41073c:	jg     0x4106d6
  41073e:	mov    eax,ds:0x36333c8b
  410743:	test   BYTE PTR [eax+edx*8+0x50a116d6],cl
  41074a:	jb     0x4106f5
  41074c:	mov    dh,0x91
  41074e:	scas   al,BYTE PTR es:[edi]
  41074f:	ficomp WORD PTR [edi+0x71]
  410752:	fld    TBYTE PTR [edi+0x14]
  410755:	mov    ecx,0x9f811db6
  41075a:	pop    ebx
  41075b:	jg     0x4107a4
  41075d:	adc    eax,DWORD PTR cs:[esp+ebp*4]
  410761:	repz add al,0x6c
  410764:	adc    ah,BYTE PTR [ecx]
  410766:	jecxz  0x41077f
  410768:	dec    ebx
  410769:	pop    DWORD PTR [ecx]
  41076b:	sub    ebp,DWORD PTR ds:[edi*8-0x14b961ce]
  410773:	push   ebp
  410774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410775:	shr    DWORD PTR [ebx-0x788ed675],0x31
  41077c:	and    bh,BYTE PTR [ecx]
  41077e:	(bad)  
  41077f:	mov    edx,0x2cded725
  410784:	jmp    0x4107d5
  410786:	cmp    ebp,edi
  410788:	or     ch,dh
  41078a:	test   BYTE PTR [eax-0x3162788a],0x6c
  410791:	fs xchg esi,eax
  410793:	xlat   BYTE PTR ds:[ebx]
  410794:	sub    eax,ebx
  410796:	aam    0x77
  410798:	imul   esp,DWORD PTR [esi+0x7e],0xffffffbc
  41079c:	push   ecx
  41079d:	aam    0xaf
  41079f:	cmc    
  4107a0:	add    DWORD PTR [ebx],0x23f494b7
  4107a6:	jb     0x4107ef
  4107a8:	pop    ebp
  4107a9:	mov    esi,0xce6538dc
  4107ae:	inc    eax
  4107af:	pop    ss
  4107b0:	adc    dl,BYTE PTR [ecx-0x73c71846]
  4107b6:	adc    edx,DWORD PTR [ebp-0x55]
  4107b9:	test   cl,0x52
  4107bc:	stos   BYTE PTR es:[edi],al
  4107bd:	shl    BYTE PTR [edx],1
  4107bf:	xlat   BYTE PTR ds:[ebx]
  4107c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c1:	jbe    0x4107e2
  4107c3:	or     esp,DWORD PTR ds:0x25c26231
  4107c9:	popf   
  4107ca:	loopne 0x410828
  4107cc:	or     eax,0x6e4554e4
  4107d1:	xchg   esi,edi
  4107d3:	data16 out 0x8,al
  4107d6:	ret    0xd064
  4107d9:	repz retf 0x2aa6
  4107dd:	rol    DWORD PTR [esi],1
  4107df:	shr    dl,1
  4107e1:	jbe    0x4107e9
  4107e3:	dec    ecx
  4107e4:	xchg   ebp,eax
  4107e5:	pop    edi
  4107e6:	jg     0x41079f
  4107e8:	xor    ch,ah
  4107ea:	aad    0x0
  4107ec:	clc    
  4107ed:	leave  
  4107ee:	outs   dx,BYTE PTR ds:[esi]
  4107ef:	mov    ebx,0xae387c01
  4107f4:	sar    BYTE PTR [eax],cl
  4107f6:	scas   al,BYTE PTR es:[edi]
  4107f7:	stc    
  4107f8:	xchg   ebp,eax
  4107f9:	(bad)  
  4107fa:	or     DWORD PTR [edi-0x7f],esp
  4107fd:	out    0xf0,al
  4107ff:	push   esp
  410800:	repnz push eax
  410802:	cmp    al,0x35
  410804:	push   esi
  410805:	mov    bl,0x40
  410807:	inc    BYTE PTR [ebx-0x5]
  41080a:	bound  ebp,QWORD PTR [edi+ebx*1]
  41080d:	aas    
  41080e:	mov    cl,0x78
  410810:	jo     0x4107f9
  410812:	stos   DWORD PTR es:[edi],eax
  410813:	sahf   
  410814:	inc    esp
  410815:	out    0xf4,eax
  410817:	cmp    eax,0x866b90b6
  41081c:	(bad)  
  41081d:	or     ah,0x16
  410820:	push   ecx
  410821:	push   eax
  410822:	stc    
  410823:	pop    edx
  410824:	cwde   
  410825:	hlt    
  410826:	cmp    dl,bl
  410828:	cmp    bl,BYTE PTR [eax+0x1293b5a2]
  41082e:	stos   DWORD PTR es:[edi],eax
  41082f:	mov    cl,BYTE PTR [esi+0x7f]
  410832:	jecxz  0x4108ab
  410834:	mov    esi,0x11553bfb
  410839:	retf   
  41083a:	outs   dx,DWORD PTR ds:[esi]
  41083b:	jne    0x4107cf
  41083d:	rol    BYTE PTR [edx-0x35],cl
  410840:	lock adc ebx,DWORD PTR ds:0x7751330f
  410847:	aam    0x95
  410849:	push   ecx
  41084a:	jmp    0x41080c
  41084c:	jmp    0xd7649b3f
  410851:	sub    al,0x99
  410853:	mov    al,ds:0x3f33b06a
  410858:	mov    dl,0x27
  41085a:	mov    BYTE PTR [ebx],ah
  41085c:	pop    es
  41085d:	ficom  WORD PTR [ebx]
  41085f:	(bad)  
  410860:	in     al,0x8a
  410862:	(bad)  
  410863:	retf   0x36b6
  410866:	xchg   ebp,eax
  410867:	push   0xc
  410869:	scas   al,BYTE PTR es:[edi]
  41086a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41086b:	xor    BYTE PTR [edi-0x4b87cfab],al
  410871:	das    
  410872:	test   eax,0xae8fba77
  410877:	jecxz  0x410874
  410879:	lock fs push esp
  41087c:	sub    DWORD PTR [di-0xe],ecx
  410880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410881:	mov    esi,0xe6ed017f
  410886:	xchg   ecx,eax
  410887:	loope  0x410827
  410889:	fs js  0x410887
  41088c:	cmp    al,0xeb
  41088e:	jp     0x4108d3
  410890:	es dec ecx
  410892:	add    DWORD PTR [ecx+edi*2],esp
  410895:	push   ss
  410896:	inc    edi
  410897:	call   0x9384:0x128a1f5b
  41089e:	mov    al,0xfb
  4108a0:	std    
  4108a1:	sub    BYTE PTR [edx-0x5c],al
  4108a4:	sbb    eax,0x1cd82068
  4108a9:	and    DWORD PTR [edi+0x42],ebp
  4108ac:	cmp    DWORD PTR ds:0x821ab0a4,ebx
  4108b2:	pop    esi
  4108b3:	cdq    
  4108b4:	mov    esi,0xa2180975
  4108b9:	jae    0x41090b
  4108bb:	dec    esp
  4108bc:	or     eax,0x2d828311
  4108c1:	imul   ebx,DWORD PTR [esi],0x29
  4108c4:	sub    ch,BYTE PTR [ebx+0x3f1234cc]
  4108ca:	into   
  4108cb:	popf   
  4108cc:	sub    eax,DWORD PTR [ecx-0x1f39a547]
  4108d2:	nop
  4108d3:	icebp  
  4108d4:	or     DWORD PTR [esi],ebx
  4108d6:	and    cl,cl
  4108d8:	adc    eax,0x8fae773a
  4108dd:	xchg   esp,eax
  4108de:	dec    ebx
  4108df:	in     eax,dx
  4108e0:	push   0xffffffd3
  4108e2:	sahf   
  4108e3:	cli    
  4108e4:	add    edx,esi
  4108e6:	and    dl,BYTE PTR [eax+eiz*4+0x5d8544b7]
  4108ed:	in     al,dx
  4108ee:	mov    esi,0xb51ed2f
  4108f3:	dec    esi
  4108f4:	push   0x4b240964
  4108f9:	imul   esi,DWORD PTR [eax],0x78274334
  4108ff:	and    BYTE PTR [edx-0x5fbdc6d3],bh
  410905:	and    DWORD PTR [edi],esp
  410907:	loop   0x4108d3
  410909:	rcl    DWORD PTR [edx+0xc],cl
  41090c:	mov    DWORD PTR [esi+0x3b],edi
  41090f:	xor    BYTE PTR [ecx+0x27d9ec6d],bh
  410915:	jecxz  0x410986
  410917:	fild   DWORD PTR [ecx+0x67]
  41091a:	cmp    al,0xfa
  41091c:	xchg   ebp,eax
  41091d:	push   ax
  41091f:	jnp    0x41098c
  410921:	xchg   esi,eax
  410922:	cmp    BYTE PTR [eax-0x2e],bl
  410925:	or     esi,edi
  410927:	(bad)  
  410928:	(bad)  
  410929:	mov    edi,0xcd56aef3
  41092e:	stc    
  41092f:	ins    BYTE PTR es:[edi],dx
  410930:	xchg   ecx,eax
  410931:	pop    es
  410932:	pop    es
  410933:	jl     0x410921
  410935:	stos   DWORD PTR es:[edi],eax
  410936:	repz addr16 (bad) 
  410939:	std    
  41093a:	pusha  
  41093b:	lea    ecx,[edi]
  41093d:	push   ecx
  41093e:	push   0xe46dc50b
  410943:	out    0x3c,al
  410945:	cmp    DWORD PTR ds:0xb0971c1a,esp
  41094b:	(bad)  
  41094c:	xchg   esi,eax
  41094d:	stos   DWORD PTR es:[edi],eax
  41094e:	gs ss in al,dx
  410951:	mov    ebp,eax
  410953:	sbb    DWORD PTR [edi+0x31],ebp
  410956:	xchg   ecx,eax
  410957:	loop   0x4109a1
  410959:	cmp    bl,bh
  41095b:	pop    ecx
  41095c:	les    edi,FWORD PTR [eax-0x11]
  41095f:	out    0xb5,al
  410961:	sbb    DWORD PTR [ebp-0x5c],eax
  410964:	stc    
  410965:	pop    esp
  410966:	scas   al,BYTE PTR es:[edi]
  410967:	test   BYTE PTR [ecx+0x12],0xed
  41096b:	adc    eax,DWORD PTR [edx+0x34]
  41096e:	mov    esp,0x37edb1ef
  410973:	xchg   DWORD PTR [esi-0x2b3ce138],ebp
  410979:	push   ebx
  41097a:	inc    ebx
  41097b:	retf   
  41097c:	sub    edi,edi
  41097e:	popf   
  41097f:	fsub   QWORD PTR [ebp-0x1]
  410982:	mov    DWORD PTR [ebx+0x6407484b],ebx
  410988:	xor    DWORD PTR [edx],ebx
  41098a:	mov    ds:0x21f234a9,eax
  41098f:	or     DWORD PTR gs:[eax+0x73cdd22e],ebp
  410996:	jge    0x4109fd
  410998:	into   
  410999:	sub    eax,0x2568f32e
  41099e:	in     eax,dx
  41099f:	xor    dh,0xc5
  4109a2:	std    
  4109a3:	xchg   DWORD PTR [ebp+0x4e],ebp
  4109a6:	fwait
  4109a7:	xor    ebp,ecx
  4109a9:	(bad)  
  4109aa:	not    BYTE PTR [esi-0x4f9fef5a]
  4109b0:	or     al,0xc
  4109b2:	outs   dx,DWORD PTR ds:[esi]
  4109b3:	dec    esi
  4109b4:	loop   0x410983
  4109b6:	adc    DWORD PTR [ecx],ebx
  4109b8:	jl     0x41094c
  4109ba:	and    ebx,DWORD PTR [ebp+0x5b]
  4109bd:	mov    esp,0x1b5b327f
  4109c2:	mov    BYTE PTR [esi+0x542a6652],bl
  4109c8:	clc    
  4109c9:	inc    edx
  4109ca:	scas   al,BYTE PTR es:[edi]
  4109cb:	mov    WORD PTR [ecx+0x11b36673],?
  4109d1:	cmp    eax,0x2703bca9
  4109d6:	jo     0x410976
  4109d8:	daa    
  4109d9:	cwde   
  4109da:	sbb    eax,0x4c390832
  4109df:	jmp    FWORD PTR [edi-0x620bf8a]
  4109e5:	add    bh,BYTE PTR [ebx+edi*4]
  4109e8:	dec    edx
  4109e9:	adc    al,0xae
  4109eb:	fs lahf 
  4109ed:	and    BYTE PTR [edi],bl
  4109ef:	dec    edx
  4109f0:	push   0xffffffff
  4109f2:	xlat   BYTE PTR ds:[ebx]
  4109f3:	mov    BYTE PTR [edi+0x7f],dh
  4109f6:	daa    
  4109f7:	xor    ah,0xbb
  4109fa:	js     0x4109c0
  4109fc:	jge    0x4109d6
  4109fe:	push   0x57
  410a00:	jns    0x4109e5
  410a02:	push   ebp
  410a03:	jle    0x410a04
  410a05:	nop
  410a06:	out    0xbb,al
  410a08:	xlat   BYTE PTR ds:[ebx]
  410a09:	push   ds
  410a0a:	test   DWORD PTR [edx-0x4a104658],ecx
  410a10:	mul    DWORD PTR [ebp-0x373bfd2]
  410a16:	cmp    ecx,0x1a
  410a19:	iret   
  410a1a:	hlt    
  410a1b:	pop    es
  410a1c:	test   DWORD PTR [ebp+edx*2+0x2552dd9],ecx
  410a23:	xchg   esp,eax
  410a24:	xor    ah,BYTE PTR [ebp-0x35d8789c]
  410a2a:	pop    ebp
  410a2b:	adc    DWORD PTR [ecx+ecx*4+0x58],ebx
  410a2f:	and    BYTE PTR ds:[edi-0x5c],al
  410a33:	mov    al,0xc6
  410a35:	adc    bl,BYTE PTR [ecx+0x7f]
  410a38:	adc    DWORD PTR [esi],ecx
  410a3a:	dec    esi
  410a3b:	pop    ebp
  410a3c:	loope  0x410a40
  410a3e:	jmp    DWORD PTR [eax-0x48]
  410a41:	cmp    DWORD PTR [edx+0x2d],ebp
  410a44:	adc    BYTE PTR [ebp-0x6c],ch
  410a47:	add    bl,0xfa
  410a4a:	jg     0x4109e9
  410a4c:	sbb    ebp,edi
  410a4e:	push   cs
  410a4f:	push   ebp
  410a50:	sbb    ah,bh
  410a52:	fwait
  410a53:	cmp    al,0xcb
  410a55:	mov    fs,WORD PTR [ebx-0x44]
  410a58:	loopne 0x410a79
  410a5a:	shl    DWORD PTR [eax-0x60],cl
  410a5d:	jecxz  0x4109e9
  410a5f:	sti    
  410a60:	pop    ds
  410a61:	xchg   edx,eax
  410a62:	stos   DWORD PTR es:[edi],eax
  410a63:	int    0x4c
  410a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a66:	sbb    al,0xa6
  410a68:	stc    
  410a69:	enter  0xe966,0x21
  410a6d:	es ja  0x410ad4
  410a70:	mov    al,ds:0xd7fbff01
  410a75:	ja     0x410a93
  410a77:	add    BYTE PTR [eax-0x1f],bh
  410a7a:	test   eax,0xf9b0f3e6
  410a7f:	ja     0x410ae1
  410a81:	out    dx,eax
  410a82:	retf   
  410a83:	and    al,0xd8
  410a85:	nop
  410a86:	imul   BYTE PTR [ecx-0x3ec0aeb2]
  410a8c:	mov    cl,0x30
  410a8e:	iret   
  410a8f:	xor    DWORD PTR [edx-0x37fc73d0],edx
  410a95:	fbld   TBYTE PTR [edx-0x3e911223]
  410a9b:	leave  
  410a9c:	xlat   BYTE PTR cs:[ebx]
  410a9e:	mov    dh,0xbd
  410aa0:	jecxz  0x410a5b
  410aa2:	test   BYTE PTR ds:0xf8cc07b1,cl
  410aa8:	shl    BYTE PTR [esi+0x57aafa77],1
  410aae:	xor    DWORD PTR [ebp-0x5a6e7bc1],esp
  410ab4:	loope  0x410a82
  410ab6:	das    
  410ab7:	mov    dh,0xa5
  410ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aba:	push   cs
  410abb:	jb     0x410a9a
  410abd:	ins    DWORD PTR es:[edi],dx
  410abe:	push   ss
  410abf:	mov    al,ds:0x6005e62d
  410ac4:	xchg   ebp,eax
  410ac5:	sub    al,0x53
  410ac7:	test   DWORD PTR [esi],esp
  410ac9:	pop    ebp
  410aca:	std    
  410acb:	rcl    esp,0x1d
  410ace:	xor    DWORD PTR [ecx+0x6779743c],esi
  410ad4:	push   ss
  410ad5:	test   al,0x65
  410ad7:	cmp    DWORD PTR [ebx-0x72cc5c04],esp
  410add:	pusha  
  410ade:	xor    al,cl
  410ae0:	pcmpgtd mm7,QWORD PTR [edi-0x2c]
  410ae4:	std    
  410ae5:	mov    edi,DWORD PTR cs:[edi+edx*1-0x7d]
  410aea:	or     eax,0x466dcce6
  410aef:	push   edi
  410af0:	fcmove st,st(5)
  410af2:	sbb    ebx,ecx
  410af4:	popa   
  410af5:	inc    BYTE PTR [ebx+esi*8+0x58]
  410af9:	es dec eax
  410afb:	adc    esi,DWORD PTR [esi]
  410afd:	pusha  
  410afe:	xchg   edi,edi
  410b00:	jne    0x410ad5
  410b02:	and    edi,ebx
  410b04:	and    eax,0x2a4bfc9f
  410b09:	inc    ebp
  410b0a:	fld    DWORD PTR [edi+esi*8+0x48581b3b]
  410b11:	xor    ecx,DWORD PTR [ebx+0x701a2b36]
  410b17:	cwde   
  410b18:	mov    bp,0x44fd
  410b1c:	ds rcr ecx,cl
  410b1f:	dec    esi
  410b20:	push   esp
  410b21:	add    ecx,DWORD PTR [eax]
  410b23:	dec    esi
  410b24:	mov    WORD PTR [edi+eax*1],ds
  410b27:	cmp    ecx,esi
  410b29:	mov    ch,0x92
  410b2b:	sbb    ebp,DWORD PTR [esi]
  410b2d:	xor    DWORD PTR [ebp-0xea66395],ebp
  410b33:	push   ds
  410b34:	sub    dl,BYTE PTR [eax-0x7c]
  410b37:	ds dec ebp
  410b39:	pop    eax
  410b3a:	push   0xffffffee
  410b3c:	(bad)  
  410b3d:	mov    ecx,0x4b76480b
  410b42:	add    ecx,ebp
  410b44:	jp     0x410b1f
  410b46:	jmp    0xd25c86f2
  410b4b:	push   ebp
  410b4c:	sbb    ebp,0xbff8b831
  410b52:	cmp    eax,0x43cf75e7
  410b57:	in     eax,0x2a
  410b59:	xchg   ebp,eax
  410b5a:	lock test al,0x9a
  410b5d:	dec    eax
  410b5e:	js     0x410b8d
  410b60:	pop    esi
  410b61:	xor    al,0x1e
  410b63:	aam    0xd1
  410b65:	sbb    esi,DWORD PTR [edx+0x7b]
  410b68:	outs   dx,DWORD PTR ds:[esi]
  410b69:	push   ds
  410b6a:	retf   0x5cab
  410b6d:	jle    0x410be7
  410b6f:	lods   al,BYTE PTR ds:[esi]
  410b70:	xor    edi,DWORD PTR [ebx+0x1d]
  410b73:	inc    bh
  410b75:	clc    
  410b76:	pop    ss
  410b77:	test   DWORD PTR [edx+0x33c66b7d],edx
  410b7d:	outs   dx,BYTE PTR ds:[esi]
  410b7e:	or     DWORD PTR [edi-0x3681ba62],ebx
  410b84:	cmc    
  410b85:	inc    edx
  410b86:	cmp    al,0x8e
  410b88:	dec    esp
  410b89:	adc    eax,0xfb5bcefa
  410b8e:	imul   ebx,DWORD PTR [ecx+0x8],0x1b
  410b92:	jae    0x410bce
  410b94:	mov    ah,0x3
  410b96:	aam    0xcc
  410b98:	cmp    al,0x6b
  410b9a:	dec    edi
  410b9b:	xor    BYTE PTR [edx+0x21],al
  410b9e:	pop    esp
  410b9f:	outs   dx,DWORD PTR ds:[esi]
  410ba0:	nop
  410ba1:	imul   ebx,DWORD PTR es:[edx+0x83f9751],0xcc3b321f
  410bac:	hlt    
  410bad:	cmp    eax,0x2b7b19a
  410bb2:	dec    ebp
  410bb3:	outs   dx,DWORD PTR ds:[esi]
  410bb4:	xchg   edi,eax
  410bb5:	leave  
  410bb6:	and    eax,0xfa68f93d
  410bbb:	test   BYTE PTR [eax],0x64
  410bbe:	aaa    
  410bbf:	iret   
  410bc0:	xchg   ebp,eax
  410bc1:	add    BYTE PTR [ecx],ah
  410bc3:	stos   DWORD PTR es:[edi],eax
  410bc4:	cmp    bl,cl
  410bc6:	pop    ds
  410bc7:	push   ds
  410bc8:	cmc    
  410bc9:	loopne 0x410bf3
  410bcb:	ja     0x410b54
  410bcd:	push   ebx
  410bce:	mov    esi,0xed212618
  410bd3:	gs pop esi
  410bd5:	retf   
  410bd6:	mov    dl,0x90
  410bd8:	sbb    eax,0xea5a99b6
  410bdd:	inc    esi
  410bde:	fstp   TBYTE PTR [ecx]
  410be0:	jg     0x410c49
  410be2:	iret   
  410be3:	dec    ebx
  410be4:	jecxz  0x410c06
  410be6:	fs mov edi,0x732284c4
  410bec:	cmp    bl,BYTE PTR [esi]
  410bee:	loope  0x410c41
  410bf0:	and    eax,0xae0b43cc
  410bf5:	ret    
  410bf6:	jnp    0x410bd1
  410bf8:	sub    dl,dh
  410bfa:	mov    ebp,0xc1267a74
  410bff:	pushf  
  410c00:	adc    dh,BYTE PTR [edx-0x13]
  410c03:	sub    cl,BYTE PTR [esi+0x1f097c6a]
  410c09:	loopne 0x410c6f
  410c0b:	mov    dh,0x8b
  410c0d:	xchg   bh,dl
  410c0f:	inc    edi
  410c10:	pop    esp
  410c11:	push   0x21
  410c13:	out    dx,al
  410c14:	lahf   
  410c15:	fidivr WORD PTR [eax-0xa]
  410c18:	inc    ebp
  410c19:	inc    eax
  410c1a:	ret    
  410c1b:	sub    DWORD PTR [eax-0x22d1f757],ebp
  410c21:	ror    DWORD PTR [eax-0x22],1
  410c24:	mov    edx,0xfea1a349
  410c29:	cwde   
  410c2a:	div    BYTE PTR [edi-0x1098e16a]
  410c30:	xor    al,0x9e
  410c32:	add    dl,BYTE PTR [ecx]
  410c34:	sub    al,0x37
  410c36:	dec    esi
  410c37:	cwde   
  410c38:	inc    esp
  410c39:	loop   0x410bce
  410c3b:	test   DWORD PTR [eax+ecx*8-0x5b173fb3],ebx
  410c42:	dec    esp
  410c43:	sbb    al,0xa4
  410c45:	push   esi
  410c46:	fscale 
  410c48:	leave  
  410c49:	daa    
  410c4a:	push   ebp
  410c4b:	ss ins BYTE PTR es:[edi],dx
  410c4d:	aas    
  410c4e:	(bad)  
  410c50:	pop    edx
  410c51:	dec    edi
  410c52:	fucomip st,st(5)
  410c54:	xor    bh,0x2c
  410c57:	loope  0x410be9
  410c59:	inc    ebx
  410c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c5b:	xchg   ecx,eax
  410c5c:	cld    
  410c5d:	mov    WORD PTR [eax],fs
  410c5f:	in     eax,dx
  410c60:	sbb    DWORD PTR [esi+0x4],ebx
  410c63:	or     esp,DWORD PTR [edx+0x1f0a3dd]
  410c69:	dec    edx
  410c6a:	push   cs
  410c6b:	jns    0x410c06
  410c6d:	xchg   ebp,eax
  410c6e:	out    dx,al
  410c6f:	ret    
  410c70:	xchg   esp,eax
  410c71:	aaa    
  410c72:	retf   0x4ab4
  410c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c76:	push   ss
  410c77:	mov    ecx,0xcbc17a9a
  410c7c:	mov    ebx,0xc5e6f579
  410c81:	leave  
  410c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c83:	xchg   ecx,eax
  410c84:	wbinvd 
  410c86:	xor    eax,0x426fa86b
  410c8b:	loope  0x410c54
  410c8d:	shr    DWORD PTR [ecx+0x66f9d869],1
  410c93:	xchg   esi,eax
  410c94:	and    ebp,ecx
  410c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c97:	mov    esi,0x3841b333
  410c9c:	and    ebx,DWORD PTR [eax+0x6]
  410c9f:	dec    ebp
  410ca0:	cmc    
  410ca1:	adc    dh,BYTE PTR [edi]
  410ca3:	or     eax,0xd3bcc9d7
  410ca8:	and    bh,cl
  410caa:	mov    DWORD PTR [esp-0x2e3b7190],eax
  410cb1:	inc    esp
  410cb2:	nop
  410cb3:	cvtps2pi mm3,xmm7
  410cb6:	scas   eax,DWORD PTR es:[edi]
  410cb7:	dec    ebx
  410cb8:	mov    dh,BYTE PTR [ecx+0x49aa1682]
  410cbe:	or     al,0x68
  410cc0:	mov    edx,0xb24dd9ea
  410cc5:	fadd   QWORD PTR [ecx-0x3e]
  410cc8:	jmp    0xfe58:0x33fac910
  410ccf:	js     0x410cfe
  410cd1:	cwde   
  410cd2:	lds    edi,FWORD PTR [edx]
  410cd4:	rcl    ecx,0x22
  410cd7:	sti    
  410cd8:	fcom   st(6)
  410cda:	sub    esi,edi
  410cdc:	push   ds
  410cdd:	cmp    BYTE PTR [ebx+0x46],dl
  410ce0:	mov    ah,0x73
  410ce2:	(bad)  
  410ce3:	adc    DWORD PTR [ebx+0x2cf1c081],esi
  410ce9:	add    al,0x4a
  410ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cec:	(bad)  
  410ced:	mov    bh,0x1c
  410cef:	aad    0xb
  410cf1:	add    BYTE PTR [ebp+edi*1-0x7c3e6abb],cl
  410cf8:	int    0x56
  410cfa:	jbe    0x410d37
  410cfc:	in     al,0x22
  410cfe:	lods   eax,DWORD PTR ds:[esi]
  410cff:	test   al,0xa1
  410d01:	sbb    bl,BYTE PTR [esi+0x74]
  410d04:	jns    0x410d7d
  410d06:	add    DWORD PTR [ebx],ebp
  410d08:	call   0xfd2f:0xe57aa21f
  410d0f:	int    0xbe
  410d11:	fsub   QWORD PTR [ebp-0x77]
  410d14:	pop    ebx
  410d15:	outs   dx,DWORD PTR ds:[esi]
  410d16:	(bad)  
  410d17:	push   esp
  410d18:	imul   ebp,esp,0x23
  410d1b:	fimul  DWORD PTR [edi-0x209f88ee]
  410d21:	in     eax,dx
  410d22:	cmp    ebx,ebx
  410d24:	in     al,dx
  410d25:	jp     0x410d3a
  410d27:	fdiv   DWORD PTR [edi+0xbd1f887]
  410d2d:	xor    al,0xbc
  410d2f:	in     eax,0x9
  410d31:	fdiv   QWORD PTR [edx]
  410d33:	stos   DWORD PTR es:[edi],eax
  410d34:	xor    al,0x7d
  410d36:	cmp    ebp,DWORD PTR [ecx+0x58a997e5]
  410d3c:	sbb    ebx,DWORD PTR [ebx+0x6ab107a0]
  410d42:	fwait
  410d43:	neg    DWORD PTR [ecx]
  410d45:	rol    eax,1
  410d47:	or     dl,dh
  410d49:	pop    eax
  410d4a:	fstp   QWORD PTR [ecx+0x29b78dc6]
  410d50:	pop    ecx
  410d51:	mov    eax,ds:0x803d00e9
  410d56:	ss sub al,0x6d
  410d59:	jmp    0x410d3d
  410d5b:	scas   al,BYTE PTR es:[edi]
  410d5c:	mov    DWORD PTR [ebx+0x10],esp
  410d5f:	cmc    
  410d60:	pusha  
  410d61:	push   0x3e92cf14
  410d66:	xchg   ebx,eax
  410d67:	test   DWORD PTR [ecx],ebp
  410d69:	sub    BYTE PTR [edx+0x21741da],cl
  410d6f:	iret   
  410d70:	es jo  0x410dc3
  410d73:	loope  0x410dda
  410d75:	ds mov bl,cl
  410d78:	inc    esp
  410d79:	fcomp  QWORD PTR [esi+0x9ad2c7]
  410d7f:	and    cl,0x63
  410d82:	adc    BYTE PTR [ebp+edi*4-0x20],ch
  410d86:	std    
  410d87:	jne    0x410db0
  410d89:	loope  0x410dd5
  410d8b:	ficom  DWORD PTR [edi]
  410d8d:	imul   edx,edi,0xfffffff9
  410d90:	sbb    esp,ecx
  410d92:	in     eax,0xf2
  410d94:	nop    DWORD PTR [ebx-0x1609f0bf]
  410d9b:	repnz dec eax
  410d9d:	fisttp DWORD PTR [eax-0x52]
  410da0:	push   esp
  410da1:	(bad)  
  410da2:	pop    ebx
  410da3:	retf   0xbd59
  410da6:	push   ebp
  410da7:	js     0x410dd7
  410da9:	rcr    BYTE PTR [eax+0x1a4418d1],0xb6
  410db0:	and    eax,0x350f2ba9
  410db5:	test   al,0x35
  410db7:	jnp    0x410df8
  410db9:	(bad)  [edi+eiz*2+0x604c3435]
  410dc0:	pop    ebp
  410dc1:	in     al,0x54
  410dc3:	dec    esi
  410dc4:	not    DWORD PTR [ebx-0x5246a546]
  410dca:	arpl   WORD PTR [ecx-0x1f1d14b7],ax
  410dd0:	aam    0x9c
  410dd2:	sub    al,0xf3
  410dd4:	aad    0x72
  410dd6:	pushf  
  410dd7:	aam    0xf1
  410dd9:	bound  edi,QWORD PTR [edi-0x13]
  410ddc:	mov    ebx,0xf3e65c88
  410de1:	les    edi,FWORD PTR [edx-0x64eded1a]
  410de7:	out    0xbf,al
  410de9:	in     eax,0x30
  410deb:	or     esp,ebx
  410ded:	push   ebp
  410dee:	loopne 0x410dce
  410df0:	add    ecx,edx
  410df2:	sbb    BYTE PTR [ebx+0x46],bl
  410df5:	call   0xfff3:0x16ad6db7
  410dfc:	fimul  WORD PTR [ecx+edx*2]
  410dff:	(bad)  
  410e00:	std    
  410e01:	inc    ebx
  410e02:	jb     0x410e78
  410e04:	or     ecx,edi
  410e06:	push   esp
  410e07:	jge    0x410dae
  410e09:	inc    esi
  410e0a:	cs bnd jle 0x410e16
  410e0e:	or     BYTE PTR [esi-0x3cd7550b],dh
  410e14:	popa   
  410e15:	mov    edx,0x2d059c9f
  410e1a:	lea    eax,[edx-0x1a]
  410e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e1e:	call   0x9b48708c
  410e23:	add    ah,al
  410e25:	test   BYTE PTR [eax],bl
  410e27:	push   esp
  410e28:	xchg   ecx,eax
  410e29:	scas   eax,DWORD PTR es:[edi]
  410e2a:	mov    ah,0x24
  410e2c:	mov    esp,0x96832260
  410e31:	sub    al,0x7d
  410e33:	push   ebp
  410e34:	ins    BYTE PTR es:[edi],dx
  410e35:	or     esi,DWORD PTR [eax-0x2b]
  410e38:	pop    es
  410e39:	ins    BYTE PTR es:[edi],dx
  410e3a:	arpl   si,dx
  410e3c:	sbb    esi,DWORD PTR [edi+0x49b3bf1b]
  410e42:	mov    ebx,0x895d8d74
  410e47:	shl    DWORD PTR ds:0x465ec15b,1
  410e4d:	lea    edx,[edx]
  410e4f:	(bad)  
  410e50:	pop    ebx
  410e51:	test   BYTE PTR [esi],dh
  410e53:	pusha  
  410e54:	leave  
  410e55:	mov    bh,0x34
  410e57:	mov    ds:0x2434ccd5,eax
  410e5c:	mov    ebx,0xe9d6d6b2
  410e61:	adc    ebp,edi
  410e63:	test   al,0x9b
  410e65:	jb     0x410e8c
  410e67:	fild   QWORD PTR [ebx-0x10da8272]
  410e6d:	push   ebx
  410e6e:	cwde   
  410e6f:	xchg   esp,eax
  410e70:	es in  al,0x54
  410e73:	cmp    eax,0x265f969c
  410e78:	mov    ecx,0x2c59dae
  410e7d:	gs mov dh,0xe4
  410e80:	add    DWORD PTR [edx-0x40],edi
  410e83:	mov    ecx,0x88bf38ef
  410e88:	mov    dh,0xe3
  410e8a:	sbb    ah,BYTE PTR [ebx-0xf5d42e]
  410e90:	jbe    0x410ed6
  410e92:	inc    ebx
  410e93:	fcmovb st,st(2)
  410e95:	enter  0x503,0xb9
  410e99:	xor    DWORD PTR [ecx],eax
  410e9b:	mov    DWORD PTR [ecx-0x100d2cc6],esp
  410ea1:	inc    ecx
  410ea2:	push   ebp
  410ea3:	sub    al,0x91
  410ea5:	pop    ebx
  410ea6:	jno    0x410e8f
  410ea8:	inc    esi
  410ea9:	mov    esi,0x4d8dd5c5
  410eae:	pop    esi
  410eaf:	and    bh,dh
  410eb1:	(bad)  
  410eb2:	and    DWORD PTR [edx-0x76],ecx
  410eb5:	sub    al,0xed
  410eb7:	out    0x5c,al
  410eb9:	rcr    BYTE PTR [ebp+0x63],cl
  410ebc:	or     bh,BYTE PTR [eax]
  410ebe:	aam    0x1b
  410ec0:	retf   
  410ec1:	sbb    esi,esp
  410ec3:	jg     0x410e73
  410ec5:	popf   
  410ec6:	or     DWORD PTR [ebx-0x8],ebp
  410ec9:	sub    al,cl
  410ecb:	idiv   BYTE PTR [eax]
  410ecd:	std    
  410ece:	loope  0x410eee
  410ed0:	(bad)  ds:0xa6d8b64a
  410ed6:	repnz mov dh,0x2d
  410ed9:	xlat   BYTE PTR ds:[ebx]
  410eda:	cmp    eax,0x1bc0dc3b
  410edf:	(bad)  
  410ee0:	sar    ch,cl
  410ee2:	dec    esi
  410ee3:	out    0x7c,eax
  410ee5:	mov    cl,0x80
  410ee7:	pop    ebp
  410ee8:	xor    cl,ch
  410eea:	adc    DWORD PTR [eax+0x5],esi
  410eed:	xchg   edi,eax
  410eee:	loop   0x410f14
  410ef0:	and    ecx,DWORD PTR [eax]
  410ef2:	adc    cl,bl
  410ef4:	imul   ebp,edi,0x27a5b003
  410efa:	mov    ecx,0xbd9d3f7f
  410eff:	jne    0x410ea6
  410f01:	lds    ebx,FWORD PTR [edx-0x6206ec75]
  410f07:	enter  0x559f,0xa3
  410f0b:	lods   al,BYTE PTR fs:[esi]
  410f0d:	xor    eax,0x1c7c5b92
  410f12:	jge    0x410f8b
  410f14:	mov    al,0x3d
  410f16:	(bad)
  410f19:	cmc    
  410f1a:	push   esi
  410f1b:	fild   QWORD PTR [eax]
  410f1d:	iret   
  410f1e:	or     BYTE PTR [ecx],ch
  410f20:	or     DWORD PTR [ecx+0x49],esi
  410f23:	les    eax,FWORD PTR [ecx+0x32]
  410f26:	xchg   edi,ebp
  410f28:	cmp    eax,0xf8ed86fa
  410f2d:	neg    DWORD PTR [ebp+eiz*8-0x13]
  410f31:	in     al,0x4
  410f33:	or     BYTE PTR [esi+edi*4+0x59],0xb6
  410f38:	mov    ebx,0xf0fb03a0
  410f3d:	mov    dl,0x90
  410f3f:	mov    ds:0xba0b767f,al
  410f44:	pop    esp
  410f45:	int3   
  410f46:	xlat   BYTE PTR ds:[ebx]
  410f47:	cwde   
  410f48:	sub    edx,ecx
  410f4a:	xchg   edx,eax
  410f4b:	sbb    DWORD PTR [ecx-0x10],edi
  410f4e:	and    eax,0xedee8d8d
  410f53:	and    DWORD PTR [ebp+ebp*1-0x1badfb71],esi
  410f5a:	mov    ebp,0xae73a4b1
  410f5f:	mov    dl,0x65
  410f61:	pop    esi
  410f62:	int    0x32
  410f64:	fmul   QWORD PTR cs:[esi+0x76eb979c]
  410f6b:	push   ebp
  410f6c:	adc    al,0xd1
  410f6e:	push   esi
  410f6f:	(bad)  
  410f70:	xchg   edx,eax
  410f71:	fdivr  QWORD PTR [eax+0x726de1aa]
  410f77:	mov    ebp,0xb033f84c
  410f7c:	(bad)  
  410f7d:	and    al,0xa4
  410f7f:	lock test BYTE PTR [esi],dl
  410f82:	(bad)  
  410f83:	mov    al,0x8b
  410f85:	xor    eax,0xaba07c11
  410f8a:	arpl   WORD PTR [edx-0x6f],bx
  410f8d:	xor    DWORD PTR [ebx],esi
  410f8f:	cs hlt 
  410f91:	mov    BYTE PTR [ebx+0x9],cl
  410f94:	sbb    ebx,ebp
  410f96:	push   edi
  410f97:	sbb    DWORD PTR [ebx-0x58],ecx
  410f9a:	popf   
  410f9b:	dec    ebp
  410f9c:	sub    edx,DWORD PTR [ecx-0x24]
  410f9f:	sbb    dl,BYTE PTR [edi-0x238bc814]
  410fa5:	fidivr DWORD PTR [ebp+0x23]
  410fa8:	cdq    
  410fa9:	or     edx,DWORD PTR [eax+0x66]
  410fac:	and    BYTE PTR [ecx-0x9d2b3cb],dl
  410fb2:	and    ch,BYTE PTR [ecx]
  410fb4:	sahf   
  410fb5:	std    
  410fb6:	jmp    0x5fe2f11a
  410fbb:	xlat   BYTE PTR ds:[ebx]
  410fbc:	add    eax,0x4217a245
  410fc1:	jmp    0x3e62834e
  410fc6:	fisttp QWORD PTR [eax]
  410fc8:	push   cs
  410fc9:	jp     0x410fa9
  410fcb:	stc    
  410fcc:	repz mov ebx,0x899de5d9
  410fd2:	inc    esp
  410fd3:	add    eax,0x212d1046
  410fd8:	mov    al,0xbc
  410fda:	push   fs
  410fdc:	pop    ebx
  410fdd:	pusha  
  410fde:	adc    al,dh
  410fe0:	pop    edi
  410fe1:	or     DWORD PTR ds:0x5f2362f3,0x5402c00b
  410feb:	dec    ebx
  410fec:	js     0x41106c
  410fee:	push   edx
  410fef:	xchg   edx,eax
  410ff0:	sub    al,0x45
  410ff2:	jecxz  0x411042
  410ff4:	sbb    al,0x3d
  410ff6:	hlt    
  410ff7:	mov    ds:0xad572ac0,eax
  410ffc:	cld    
  410ffd:	(bad)  
  410ffe:	test   al,0xe3
  411000:	inc    edx
  411001:	lods   eax,DWORD PTR ds:[esi]
  411002:	mov    bh,0x6e
  411004:	lds    ecx,FWORD PTR [ebp+0x50869564]
  41100a:	nop
  41100b:	sub    DWORD PTR [eax+0x59a5d8b],0x26
  411012:	mov    DWORD PTR [eax+0x13],esi
  411015:	outs   dx,DWORD PTR ds:[esi]
  411016:	mov    eax,ds:0xd32485f8
  41101b:	div    DWORD PTR [ebp-0x3eee4812]
  411021:	nop
  411022:	gs fst st(5)
  411025:	(bad)  
  411026:	daa    
  411027:	adc    DWORD PTR [ecx],edi
  411029:	jae    0x410fd0
  41102b:	jmp    0x411071
  41102d:	jnp    0x41103f
  41102f:	push   ebx
  411030:	sub    al,0xbc
  411032:	popf   
  411033:	dec    esi
  411034:	jl     0x410fd6
  411036:	lahf   
  411037:	es xchg esi,eax
  411039:	or     eax,0xd46d6904
  41103e:	into   
  41103f:	leave  
  411040:	sub    BYTE PTR [edi-0x359920aa],0x42
  411047:	mov    al,ds:0x42f2b9e8
  41104c:	jo     0x41105f
  41104e:	sbb    BYTE PTR [ecx-0xe],0x9d
  411052:	vcvtsi2ss xmm6,xmm4,DWORD PTR [edi-0x2c99c617]
  41105a:	mov    ds:0x9687441d,eax
  41105f:	jno    0x411082
  411061:	repz out dx,al
  411063:	(bad)  
  411064:	jmp    0xf0a292c8
  411069:	and    al,0xfe
  41106b:	mov    al,0x6d
  41106d:	test   al,0x47
  41106f:	jne    0x411028
  411071:	fs pop esi
  411073:	retf   
  411074:	in     al,dx
  411075:	(bad)  
  411077:	int3   
  411078:	loopne 0x411025
  41107a:	mov    eax,0x5449929f
  41107f:	fs inc edi
  411081:	xchg   edi,eax
  411082:	pop    edi
  411083:	push   eax
  411084:	mov    edi,0x469beb9b
  411089:	add    BYTE PTR [edi],bl
  41108b:	int3   
  41108c:	mov    dh,0x75
  41108e:	cmp    dh,BYTE PTR [eax+ebx*8]
  411091:	or     DWORD PTR [esi+ebp*2],esp
  411094:	data16 jo 0x411076
  411097:	inc    ebp
  411098:	test   DWORD PTR [ecx],ebp
  41109a:	loopne 0x411107
  41109c:	int3   
  41109d:	push   ds
  41109e:	or     bl,0x22
  4110a1:	xor    al,0x4f
  4110a3:	sub    eax,0xbadbfcb1
  4110a8:	push   ecx
  4110a9:	test   al,0x2e
  4110ab:	stc    
  4110ac:	sub    al,0x2d
  4110ae:	mov    ebx,0xfd237af1
  4110b3:	lds    ebp,FWORD PTR [edi+esi*1+0x6f]
  4110b7:	hlt    
  4110b8:	pop    edi
  4110b9:	(bad)  
  4110ba:	imul   esp,DWORD PTR [ecx+0x27],0x6f82b332
  4110c1:	fist   DWORD PTR [edi+0x4d]
  4110c4:	adc    al,BYTE PTR [eax]
  4110c6:	jmp    0x7595c608
  4110cb:	bound  eax,QWORD PTR [esi+0x43]
  4110ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110cf:	repnz lds esi,FWORD PTR ss:[eax-0x3038102f]
  4110d7:	ret    
  4110d8:	push   cs
  4110d9:	enter  0xe44d,0x5c
  4110dd:	push   eax
  4110de:	mov    eax,0x136774af
  4110e3:	loop   0x41115c
  4110e5:	ret    0x553
  4110e8:	gs sub edx,eax
  4110eb:	sub    ebx,eax
  4110ed:	jb     0x41114d
  4110ef:	cmp    ch,BYTE PTR [esi]
  4110f1:	mov    esi,0x842c0368
  4110f6:	(bad)  
  4110f7:	aad    0xdd
  4110f9:	mov    BYTE PTR [ecx-0x2f33ad3],dl
  4110ff:	imul   esi,DWORD PTR [ecx-0x6c],0x16549d7e
  411106:	sub    eax,0x6ba3860f
  41110b:	jns    0x41108d
  41110d:	shl    BYTE PTR [ebp-0xa],0xc0
  411111:	xor    eax,0xfaa45e95
  411116:	aaa    
  411117:	push   ss
  411118:	xchg   esi,eax
  411119:	ss clc 
  41111b:	add    bh,ah
  41111d:	ds mov ah,0x56
  411120:	and    al,0x23
  411122:	mov    ch,0x67
  411124:	jbe    0x411125
  411126:	jno    0x4110b0
  411128:	pop    ss
  411129:	add    DWORD PTR [ebx],esi
  41112b:	jno    0x41111b
  41112d:	sub    al,0xaf
  41112f:	leave  
  411130:	mov    DWORD PTR fs:[ecx-0x21eab041],eax
  411137:	mov    dh,0x74
  411139:	sbb    esi,DWORD PTR [ebp-0x7a17ab47]
  41113f:	jmp    0xc38f:0x4dad27fb
  411146:	scas   eax,DWORD PTR es:[edi]
  411147:	pop    ds
  411148:	push   ss
  411149:	lock fist DWORD PTR [eax-0x54e805d3]
  411150:	test   al,0xeb
  411152:	sahf   
  411153:	jmp    0x4ccad413
  411158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411159:	or     ah,0x7e
  41115c:	jno    0x4111d8
  41115e:	jle    0x411122
  411160:	push   ebp
  411161:	and    al,0xbd
  411163:	test   al,0xd2
  411165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411166:	jmp    0x7ff7b5ac
  41116b:	dec    ecx
  41116c:	(bad)  
  41116e:	dec    ebx
  41116f:	test   ecx,0x6e7b0be2
  411175:	mov    al,BYTE PTR [ecx-0x6a]
  411178:	push   cs
  411179:	jmp    0xce46fad7
  41117e:	fldenv [edx]
  411180:	test   eax,0x4c8eed83
  411185:	sbb    BYTE PTR [edi+0x73],ah
  411188:	div    BYTE PTR ds:0x67b1037a
  41118e:	jmp    0x373a928f
  411193:	adc    BYTE PTR [edx+ecx*1-0x66],0xed
  411198:	test   esp,esi
  41119a:	mov    esi,0xe955d394
  41119f:	or     eax,0xa4f16f7c
  4111a4:	jecxz  0x41117d
  4111a6:	test   DWORD PTR [eax],edx
  4111a8:	sub    eax,eax
  4111aa:	sbb    ebx,DWORD PTR [ecx+eiz*2-0x3]
  4111ae:	dec    ebx
  4111af:	adc    esp,DWORD PTR [ecx-0xc]
  4111b2:	fldcw  WORD PTR [edi-0x3cd359c2]
  4111b8:	mov    ds:0xfa371a50,eax
  4111bd:	hlt    
  4111be:	or     ebp,DWORD PTR [esi+0x56]
  4111c1:	jmp    ecx
  4111c3:	inc    eax
  4111c4:	arpl   WORD PTR [edi*1+0x7c87c6b6],si
  4111cb:	rol    dh,0x6c
  4111ce:	mov    dl,0x7a
  4111d0:	mov    al,0xd4
  4111d2:	nop
  4111d3:	fsubp  st(0),st
  4111d5:	and    dl,dh
  4111d7:	xor    ah,BYTE PTR [esi]
  4111d9:	repz xor DWORD PTR [esi+0x0],eax
  4111dd:	outs   dx,DWORD PTR ds:[esi]
  4111de:	mov    dl,0x56
  4111e0:	cdq    
  4111e1:	or     bh,bh
  4111e3:	mov    bh,0xbe
  4111e5:	stc    
  4111e6:	and    ebp,eax
  4111e8:	and    eax,edx
  4111ea:	pop    ss
  4111eb:	mov    ds:0x6f43d620,eax
  4111f0:	hlt    
  4111f1:	inc    esp
  4111f2:	fst    DWORD PTR [edi+0x2c2186fa]
  4111f8:	adc    esp,eax
  4111fa:	pop    ebp
  4111fb:	fistp  QWORD PTR [ebx+0x3b]
  4111fe:	dec    esi
  4111ff:	lock shl DWORD PTR [eax],0x6b
  411203:	and    esp,DWORD PTR [edx-0x5]
  411206:	xor    eax,0xc464393f
  41120b:	inc    ecx
  41120c:	ja     0x41119e
  41120e:	mov    ecx,0x8bcdfa84
  411213:	and    ecx,DWORD PTR ds:0x569b93be
  411219:	test   DWORD PTR ds:0x1edeeb39,ebp
  41121f:	lock ins DWORD PTR es:[edi],dx
  411221:	push   es
  411222:	push   ss
  411223:	test   eax,0x316eddea
  411228:	popa   
  411229:	pop    ds
  41122a:	adc    al,0x4c
  41122c:	jno    0x4111c8
  41122e:	adc    ebx,DWORD PTR [ecx]
  411230:	aad    0x5c
  411232:	mov    esi,0x1af65f2f
  411237:	cld    
  411238:	mov    eax,0x58434d30
  41123d:	xlat   BYTE PTR ds:[ebx]
  41123e:	adc    BYTE PTR ds:0x8e2e907c,bh
  411244:	pushf  
  411245:	mov    dh,0xaf
  411247:	adc    al,0xa7
  411249:	jl     0x411293
  41124b:	js     0x41126d
  41124d:	imul   ecx,DWORD PTR [ebx+0x13],0xb
  411251:	mov    ch,0x15
  411253:	ja     0x411266
  411255:	fisub  DWORD PTR [esi+0x45]
  411258:	xchg   ecx,eax
  411259:	ss push 0x39400780
  41125f:	mov    esi,0x57c72990
  411264:	push   0x99385d4b
  411269:	cmp    DWORD PTR [eax-0x36df1fd9],edx
  41126f:	in     eax,dx
  411270:	jmp    0x14c48c22
  411275:	dec    esp
  411276:	les    ecx,FWORD PTR [ecx+0x6280d17c]
  41127c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41127d:	pop    ebp
  41127e:	(bad)  
  41127f:	stc    
  411280:	dec    DWORD PTR [edi+0x6c]
  411283:	push   0xffffff99
  411285:	mov    bl,0x9b
  411287:	xchg   ecx,eax
  411288:	out    0xba,eax
  41128a:	jne    0x41128b
  41128c:	mov    ebx,0x56e74bd9
  411291:	cmp    al,0x11
  411293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411294:	mov    al,0x81
  411296:	jmp    0x4112df
  411298:	xchg   edx,eax
  411299:	pop    esp
  41129a:	mov    esp,fs
  41129c:	or     BYTE PTR [esi+0x3a227114],bl
  4112a2:	cwde   
  4112a3:	pushf  
  4112a4:	or     DWORD PTR [ecx],edx
  4112a6:	jne    0x4112ce
  4112a8:	adc    eax,0xa3968d6e
  4112ad:	jmp    0xb7a5:0xb8ebde1
  4112b4:	fistp  DWORD PTR [edi+0x7227799]
  4112ba:	in     al,0xf1
  4112bc:	mov    WORD PTR [esi-0x22],es
  4112bf:	adc    bl,al
  4112c1:	stc    
  4112c2:	dec    eax
  4112c3:	(bad)  
  4112c4:	dec    edx
  4112c5:	icebp  
  4112c6:	xlat   BYTE PTR ds:[ebx]
  4112c7:	mov    eax,ds:0xf0e3735d
  4112cc:	(bad)  
  4112cd:	in     al,dx
  4112ce:	add    eax,0xac20868d
  4112d3:	cmp    DWORD PTR [edi-0x4985d802],0xfffffffa
  4112da:	shrd   DWORD PTR [eax-0x56],edx,0x2
  4112df:	cmc    
  4112e0:	sar    DWORD PTR [ebp+0x53b36409],0x7c
  4112e7:	xchg   DWORD PTR [edi+0x12],ecx
  4112ea:	imul   ebp,DWORD PTR [esi-0x4ca3fa14],0x64
  4112f1:	mov    eax,ds:0x5bc13d43
  4112f6:	pusha  
  4112f7:	jb     0x411313
  4112f9:	jbe    0x41129a
  4112fb:	test   al,0x76
  4112fd:	cvtps2pd xmm7,QWORD PTR [ebx]
  411300:	aas    
  411301:	pop    ss
  411302:	retf   0xe400
  411305:	jae    0x411340
  411307:	popa   
  411308:	cmp    eax,DWORD PTR [edi+0x2e]
  41130b:	cmp    eax,0x815e640d
  411310:	sar    DWORD PTR [ecx-0x5d],cl
  411313:	test   eax,0x673426a2
  411318:	sub    dh,BYTE PTR [ebx-0x4932de23]
  41131e:	addr16 sbb al,0x6a
  411321:	in     al,dx
  411322:	es mov bl,0x62
  411325:	cld    
  411326:	adc    cl,BYTE PTR [edx]
  411328:	mov    BYTE PTR [esp+edx*2-0x64],ch
  41132c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41132d:	stos   DWORD PTR es:[edi],eax
  41132e:	rcr    DWORD PTR [esi+0x58182a19],1
  411334:	xor    al,0x7b
  411336:	cmp    DWORD PTR [ebp-0x1e],ecx
  411339:	cmp    ch,ch
  41133b:	or     edx,DWORD PTR ds:0xa0cae851
  411341:	add    esi,edx
  411343:	imul   ecx,DWORD PTR [ebp-0x733f1b3d],0xffffffc8
  41134a:	cmp    ah,0x97
  41134d:	bt     DWORD PTR [eax],esp
  411350:	fwait
  411351:	inc    ebp
  411353:	mov    esi,0x47f28cea
  411358:	jns    0x4112f4
  41135a:	push   eax
  41135b:	jns    0x41131a
  41135d:	stos   BYTE PTR es:[edi],al
  41135e:	adc    BYTE PTR [ecx-0xfa147c7],dl
  411364:	xor    DWORD PTR [edx-0x64],ebx
  411367:	lods   eax,DWORD PTR ds:[esi]
  411368:	pop    eax
  411369:	sbb    eax,0x8036250
  41136e:	test   eax,0x29d030d3
  411373:	out    dx,eax
  411374:	pop    esp
  411375:	mov    esi,0x69db579
  41137a:	and    edi,DWORD PTR gs:[ecx+0x51]
  41137e:	or     DWORD PTR [esi+0x5f972a7b],0xe7802fb2
  411388:	int    0xf5
  41138a:	jno    0x411332
  41138c:	retf   0xfd7b
  41138f:	adc    esi,DWORD PTR [eax+0x4b]
  411392:	out    dx,eax
  411393:	or     DWORD PTR [ecx+ebp*4],edx
  411396:	adc    eax,0xb770e3f
  41139b:	and    eax,0xa2817cb4
  4113a0:	aam    0xef
  4113a2:	(bad)  
  4113a3:	ja     0x4113c2
  4113a5:	jp     0x4113ab
  4113a7:	and    ah,ch
  4113a9:	mov    cl,0x8f
  4113ab:	mov    ecx,0x2d533744
  4113b0:	xchg   esp,eax
  4113b1:	mov    ds:0xcfe19aa2,al
  4113b6:	mov    ebp,0x6afb5f99
  4113bb:	pop    edx
  4113bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113bd:	adc    dl,cl
  4113bf:	cs push edi
  4113c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c2:	pushf  
  4113c3:	lds    esp,FWORD PTR [ebp+0x7a4c5ce]
  4113c9:	iret   
  4113ca:	call   0x716d:0x99c59cb3
  4113d1:	add    al,0x5f
  4113d3:	mov    ebx,DWORD PTR [edi-0x330b9504]
  4113d9:	sub    ecx,edi
  4113db:	sti    
  4113dc:	xlat   BYTE PTR ds:[ebx]
  4113dd:	gs and eax,0xfd04d372
  4113e3:	jmp    0xdde28c03
  4113e8:	bound  ecx,QWORD PTR [ecx-0x1b]
  4113eb:	das    
  4113ec:	mov    ds:0x33510db,eax
  4113f1:	sub    al,0xc2
  4113f3:	xor    DWORD PTR [ebx+eiz*1+0x5b],edx
  4113f7:	push   0x5c
  4113f9:	xchg   ebx,eax
  4113fa:	inc    esp
  4113fb:	cdq    
  4113fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113fd:	xchg   ebp,eax
  4113fe:	gs daa 
  411400:	sub    al,0x9
  411402:	adc    bh,cl
  411404:	pop    esi
  411405:	inc    ebp
  411406:	out    dx,al
  411407:	and    DWORD PTR [esi-0x3a],ebp
  41140a:	shl    BYTE PTR [ecx-0x5dc4cf5e],1
  411410:	cmp    al,0x9b
  411412:	mov    eax,0x55844a82
  411417:	int3   
  411418:	out    dx,eax
  411419:	sbb    ebp,DWORD PTR [ebx-0x29f72483]
  41141f:	cmp    al,0x87
  411421:	dec    ecx
  411422:	test   BYTE PTR [edi],0xf1
  411425:	mov    ebp,0x233c45c3
  41142a:	popf   
  41142b:	outs   dx,BYTE PTR ds:[esi]
  41142c:	mov    dl,ah
  41142e:	aad    0x76
  411430:	aaa    
  411431:	jno    0x41146e
  411433:	(bad)  [edx+0x3e]
  411436:	int    0xe0
  411438:	cmc    
  411439:	xlat   BYTE PTR ds:[ebx]
  41143a:	and    DWORD PTR [ecx-0x4140ffdf],esp
  411440:	jno    0x41149a
  411442:	push   0x1c17e0dd
  411447:	or     ebx,DWORD PTR [edi+ecx*2+0x60]
  41144b:	mov    bl,0xd5
  41144d:	add    eax,0x28297520
  411452:	mov    DWORD PTR [edi-0x29],ebp
  411455:	lds    edx,FWORD PTR [esi-0x752c105f]
  41145b:	inc    eax
  41145c:	jo     0x411458
  41145e:	xchg   ecx,eax
  41145f:	push   ds
  411460:	ret    
  411461:	jo     0x411487
  411463:	xchg   edx,eax
  411464:	loopne 0x4114e1
  411466:	pop    edi
  411467:	and    al,0x63
  411469:	dec    eax
  41146a:	jno    0x411457
  41146c:	lahf   
  41146d:	icebp  
  41146e:	imul   ebx,DWORD PTR [ebx+0x18228a2e],0xffffffa9
  411475:	in     eax,dx
  411476:	mov    edi,0x9c15fdb2
  41147b:	and    dh,BYTE PTR es:[ebp+esi*2+0x3c]
  411480:	leave  
  411481:	inc    edi
  411482:	test   ch,dl
  411484:	dec    esi
  411485:	pop    es
  411486:	adc    eax,0x29ea08f8
  41148b:	sbb    ecx,ebp
  41148d:	cmp    eax,0x4b48bedc
  411492:	mov    WORD PTR [edi+0x285bb4b4],fs
  411498:	cli    
  411499:	inc    esp
  41149a:	cld    
  41149b:	ins    DWORD PTR es:[edi],dx
  41149c:	or     eax,0x3fd8894d
  4114a1:	jb     0x411494
  4114a3:	mov    ds:0x191b533c,al
  4114a8:	(bad)  
  4114a9:	es ja  0x41147e
  4114ac:	jecxz  0x41147f
  4114ae:	dec    esi
  4114af:	pop    ebp
  4114b0:	gs add cl,ch
  4114b3:	add    al,0x5f
  4114b5:	jmp    0x7e36:0xe99e16d2
  4114bc:	shl    DWORD PTR [ebx-0x65f0eae7],1
  4114c2:	(bad)  
  4114c3:	outs   dx,BYTE PTR ds:[esi]
  4114c4:	int    0x3e
  4114c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c7:	dec    eax
  4114c8:	sub    DWORD PTR [ebx],0x8822afb0
  4114ce:	xor    eax,0x8c5891c5
  4114d3:	loope  0x4114f4
  4114d5:	xchg   esp,eax
  4114d6:	lahf   
  4114d7:	xchg   edi,eax
  4114d8:	rcr    BYTE PTR [ecx+esi*4+0x4a],cl
  4114dc:	gs push ebp
  4114de:	jg     0x4114a6
  4114e0:	push   ebp
  4114e1:	pop    ds
  4114e2:	push   ss
  4114e3:	add    BYTE PTR [ebx+0x12f84b27],ch
  4114e9:	mov    al,ds:0xa6744cfa
  4114ee:	ja     0x4114cf
  4114f0:	loope  0x411506
  4114f2:	jle    0x41148c
  4114f4:	cs fsub st,st(0)
  4114f7:	(bad)
  4114fa:	nop
  4114fb:	enter  0x2036,0xc7
  4114ff:	inc    edx
  411500:	mov    BYTE PTR [eax-0x2a0abe4f],bh
  411506:	pop    ebx
  411507:	ins    DWORD PTR es:[edi],dx
  411508:	sbb    dl,BYTE PTR [ebx+esi*4-0x286f2a7d]
  41150f:	pop    eax
  411510:	adc    cl,cl
  411512:	retf   0xbc1c
  411515:	fs call 0xe88cb6c2
  41151b:	xchg   edx,esp
  41151d:	nop
  41151e:	pop    ds
  41151f:	test   al,0x51
  411521:	jnp    0x411578
  411523:	mov    dh,0x9a
  411525:	xchg   edx,eax
  411526:	sbb    esp,DWORD PTR [esi+0x62]
  411529:	imul   esp,DWORD PTR [ebp+0x7b83da16],0xf96bdb0d
  411533:	pushf  
  411534:	cmc    
  411535:	fs leave 
  411537:	or     DWORD PTR [edi-0x61],0x4c68e68a
  41153e:	sbb    eax,0xe65286bc
  411543:	jle    0x411583
  411545:	inc    edx
  411546:	pop    ebp
  411547:	cld    
  411548:	pop    ebp
  411549:	xor    eax,0x6590c514
  41154e:	or     DWORD PTR [eax],ebp
  411550:	add    ch,BYTE PTR [ebx]
  411552:	ret    
  411553:	fnstcw WORD PTR [eax+0x1faf1bb9]
  411559:	lods   eax,DWORD PTR ds:[esi]
  41155a:	(bad)  
  41155b:	aad    0xf3
  41155d:	pop    esi
  41155e:	jns    0x411560
  411560:	xchg   al,ch
  411562:	fbstp  TBYTE PTR [ebx+0x4a]
  411565:	call   0xa2c64b76
  41156a:	outs   dx,BYTE PTR ds:[esi]
  41156b:	out    0xcf,eax
  41156d:	jmp    0xa3381e14
  411572:	jae    0x411563
  411574:	(bad)  [edi+0x40d363f0]
  41157a:	add    dh,al
  41157c:	xchg   DWORD PTR [ecx],esp
  41157e:	aad    0x25
  411580:	pop    ds
  411581:	cli    
  411582:	(bad)  
  411583:	xor    esp,DWORD PTR [ebx+0x2]
  411586:	push   ebp
  411587:	aaa    
  411588:	sti    
  411589:	rep ins DWORD PTR es:[edi],dx
  41158b:	aam    0x48
  41158d:	pop    ebp
  41158e:	push   ebp
  41158f:	jge    0x4115e2
  411591:	rcl    ch,1
  411593:	push   0xffffffd7
  411595:	out    dx,eax
  411596:	int3   
  411597:	jnp    0x411570
  411599:	sub    ah,BYTE PTR cs:[esi]
  41159c:	inc    edi
  41159d:	pop    edx
  41159e:	dec    ebp
  41159f:	(bad)  
  4115a0:	and    esi,ebx
  4115a2:	adc    al,0xf4
  4115a4:	add    DWORD PTR [edi-0x70],ecx
  4115a7:	or     eax,ecx
  4115a9:	jae    0x4115f4
  4115ab:	das    
  4115ac:	aam    0x82
  4115ae:	popf   
  4115af:	mov    WORD PTR [edx-0x32],fs
  4115b2:	pop    ecx
  4115b3:	sub    ah,ch
  4115b5:	push   esp
  4115b6:	and    al,0xf
  4115b8:	call   0x1e66:0xb21e8746
  4115bf:	adc    al,0xd7
  4115c1:	jbe    0x4115fb
  4115c3:	(bad)  
  4115c4:	lock mov ds:0x19b593bd,eax
  4115ca:	adc    BYTE PTR [edi+0x20],bl
  4115cd:	out    0xfe,eax
  4115cf:	pop    esp
  4115d0:	loope  0x4115cb
  4115d2:	xchg   ebx,eax
  4115d3:	push   ds
  4115d4:	fbstp  TBYTE PTR [esi]
  4115d6:	imul   BYTE PTR [ecx-0xaa41e5]
  4115dc:	or     bl,BYTE PTR [ecx]
  4115de:	mov    edx,0x24e5e227
  4115e3:	dec    eax
  4115e4:	dec    edx
  4115e5:	mov    edx,0xdb302a18
  4115ea:	push   edi
  4115eb:	sbb    DWORD PTR [edx-0x59],edx
  4115ee:	stos   BYTE PTR es:[edi],al
  4115ef:	mov    ecx,0x2c4174cc
  4115f4:	sbb    BYTE PTR [ebx-0x4c],bh
  4115f7:	adc    dh,bl
  4115f9:	or     ah,BYTE PTR [ebx-0x6647f359]
  4115ff:	jmp    0xb308:0xc35feab1
  411606:	nop
  411607:	jae    0x411601
  411609:	rol    DWORD PTR [edi+0x6f],0x24
  41160d:	sub    cl,BYTE PTR fs:[eax]
  411610:	daa    
  411611:	cwde   
  411612:	lsl    esp,WORD PTR [esi]
  411615:	js     0x41164f
  411617:	inc    ecx
  411618:	push   edi
  411619:	pusha  
  41161a:	push   ebx
  41161b:	push   edi
  41161c:	mov    cl,0xae
  41161e:	adc    bl,ch
  411620:	xor    esp,DWORD PTR [esp+edi*8+0x3]
  411624:	lea    eax,[ecx+0x67cd1e93]
  41162a:	inc    edx
  41162b:	fimul  WORD PTR [ebp+0x30]
  41162e:	stos   DWORD PTR es:[edi],eax
  41162f:	cmp    eax,0xddaadf2c
  411634:	pop    edx
  411635:	mov    dl,0x27
  411637:	imul   BYTE PTR [ebx-0x7d]
  41163a:	out    dx,eax
  41163b:	xor    al,0xa
  41163d:	mov    bl,0x59
  41163f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411640:	and    eax,0x46aafa43
  411645:	test   eax,0x7a03854a
  41164a:	jb     0x4116c1
  41164c:	outs   dx,DWORD PTR ds:[esi]
  41164d:	mov    bh,0x57
  41164f:	out    dx,eax
  411650:	out    dx,eax
  411651:	dec    eax
  411652:	ins    DWORD PTR es:[edi],dx
  411653:	out    0xbd,al
  411655:	enter  0xadf,0xf8
  411659:	push   esp
  41165a:	pop    ebp
  41165b:	clc    
  41165c:	pusha  
  41165d:	pushf  
  41165e:	lods   eax,DWORD PTR ds:[esi]
  41165f:	(bad)  
  411660:	and    eax,0x567dd214
  411665:	jmp    0x318e:0x3e203d0d
  41166c:	jecxz  0x411600
  41166e:	call   0xe3d579e0
  411673:	or     al,0xef
  411675:	jmp    0x69b6:0x7e6cc75b
  41167c:	mov    ecx,0xb02f3a94
  411681:	sub    ecx,edi
  411683:	pushf  
  411684:	in     al,0x5e
  411686:	or     BYTE PTR [esi+0x4e],dh
  411689:	inc    ebp
  41168a:	and    edi,0xca28197d
  411690:	je     0x41164c
  411692:	nop    DWORD PTR [ecx+0x63]
  411696:	xlat   BYTE PTR ds:[ebx]
  411697:	and    ah,BYTE PTR [edx]
  411699:	aas    
  41169a:	(bad)  
  41169b:	stos   BYTE PTR es:[edi],al
  41169c:	mov    dl,0x2e
  41169e:	mov    bl,0x1f
  4116a0:	hlt    
  4116a1:	aam    0x7a
  4116a3:	pusha  
  4116a4:	out    dx,eax
  4116a5:	or     bh,al
  4116a7:	pop    edi
  4116a8:	or     al,0x4d
  4116aa:	jns    0x4116ea
  4116ac:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4116ae:	call   0x2d0d:0xdb0a835a
  4116b5:	jb     0x411685
  4116b7:	adc    eax,0xb217783a
  4116bc:	sub    DWORD PTR [ebp-0xf],edi
  4116bf:	mov    cl,0xc5
  4116c1:	lods   eax,DWORD PTR ds:[esi]
  4116c2:	ror    dl,1
  4116c4:	mov    esp,DWORD PTR [edx+0x66]
  4116c7:	lods   al,BYTE PTR ds:[esi]
  4116c8:	std    
  4116c9:	adc    eax,edx
  4116cb:	mov    bl,0x8
  4116cd:	jo     0x4116c2
  4116cf:	fldcw  WORD PTR [ecx+0x30]
  4116d2:	mov    esi,DWORD PTR [ebx]
  4116d4:	lds    ebx,FWORD PTR [ebx+0x4c2360eb]
  4116da:	mov    dl,0xb5
  4116dc:	mov    dh,0x62
  4116de:	stc    
  4116df:	data16 mov dh,BYTE PTR [edx+0x5707046a]
  4116e6:	retf   0x9549
  4116e9:	mov    ecx,0x99e6441f
  4116ee:	stos   BYTE PTR es:[edi],al
  4116ef:	scas   al,BYTE PTR es:[edi]
  4116f0:	pop    ss
  4116f1:	std    
  4116f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f3:	fiadd  WORD PTR fs:[ecx+0x17]
  4116f7:	rcr    BYTE PTR [eax+0x4d],1
  4116fa:	icebp  
  4116fb:	adc    eax,0x8e72f71a
  411700:	leave  
  411701:	mov    dl,0xa6
  411703:	add    BYTE PTR [ebx-0x797cce32],bl
  411709:	push   es
  41170a:	or     DWORD PTR [edx+0x48],0xaabca41a
  411711:	cdq    
  411712:	xchg   edx,eax
  411713:	(bad)  [ebp+0x46ebfa33]
  411719:	test   eax,0xaee4abfe
  41171e:	icebp  
  41171f:	lds    esi,FWORD PTR [eax+0x67202156]
  411725:	xor    dl,bl
  411727:	div    BYTE PTR [esi]
  411729:	je     0x411766
  41172b:	std    
  41172c:	xchg   esi,eax
  41172d:	jge    0x4116b6
  41172f:	fistp  QWORD PTR [esi+0x72567e66]
  411735:	ret    
  411736:	and    BYTE PTR [edi-0x78133a84],0x66
  41173d:	fst    DWORD PTR [esi]
  41173f:	nop
  411740:	stos   DWORD PTR es:[edi],eax
  411741:	mov    cl,0xd2
  411743:	jns    0x411730
  411745:	add    esp,DWORD PTR [ecx]
  411747:	leave  
  411748:	sahf   
  411749:	jmp    0x41171b
  41174b:	cmp    al,0x35
  41174d:	mov    ebx,0xfa332f0c
  411752:	pusha  
  411753:	mov    ch,0xef
  411755:	adc    al,BYTE PTR [edx]
  411757:	mov    ds:0x4d2a5cab,al
  41175c:	cmp    eax,0x488a9b69
  411761:	add    eax,0x5fd00610
  411766:	mov    al,ds:0x66cd5532
  41176b:	ins    DWORD PTR es:[edi],dx
  41176c:	or     eax,0x7f45be67
  411771:	fsubp  st(4),st
  411773:	sub    eax,0xe498e8fd
  411778:	adc    ebx,0x64
  41177b:	cmp    ebx,DWORD PTR [ebx+0x21]
  41177e:	push   cs
  41177f:	adc    eax,0x40c70168
  411784:	inc    DWORD PTR [edi+0x67]
  411787:	jne    0x4117ce
  411789:	sti    
  41178a:	aam    0xc2
  41178c:	mov    BYTE PTR [eax*2+0x47f29a65],ch
  411793:	cmp    esp,DWORD PTR [ebx+0x3b7cc5c2]
  411799:	jb     0x411810
  41179b:	repz xchg ebp,eax
  41179d:	loop   0x41174d
  41179f:	dec    eax
  4117a0:	push   ebp
  4117a1:	dec    esi
  4117a2:	ret    
  4117a3:	cmp    al,0xf8
  4117a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a6:	aam    0xbd
  4117a8:	mov    esp,0xd8579e7f
  4117ad:	test   ah,cl
  4117af:	mov    eax,ds:0xd19576da
  4117b4:	ins    DWORD PTR es:[edi],dx
  4117b5:	and    dl,dh
  4117b7:	sub    ah,BYTE PTR [edi+0x7531c66c]
  4117bd:	dec    ebp
  4117be:	out    0xf9,al
  4117c0:	sbb    BYTE PTR [ebp-0x1a6ee931],ah
  4117c6:	xor    ecx,esi
  4117c8:	jo     0x411754
  4117ca:	out    0xe7,eax
  4117cc:	sub    eax,0x937210ab
  4117d1:	pusha  
  4117d2:	popf   
  4117d3:	cmp    eax,0x38680cb9
  4117d8:	adc    eax,0x47c9eff8
  4117dd:	push   edi
  4117de:	in     al,0x58
  4117e0:	pop    esi
  4117e1:	gs and ecx,esi
  4117e4:	mov    al,0xbc
  4117e6:	inc    esp
  4117e7:	jg     0x411818
  4117e9:	std    
  4117ea:	out    0xfd,eax
  4117ec:	loop   0x411776
  4117ee:	(bad)  
  4117ef:	icebp  
  4117f0:	mov    cl,0x38
  4117f2:	push   ds
  4117f3:	and    DWORD PTR [eax-0x1],edx
  4117f6:	push   0x3873edcb
  4117fb:	repnz (bad) 
  4117fd:	sub    al,BYTE PTR [ecx]
  4117ff:	or     BYTE PTR [eax-0x70],dl
  411802:	fimul  WORD PTR [edx]
  411804:	hlt    
  411805:	ror    DWORD PTR [eax+0x13],0x5f
  411809:	mov    bh,0x68
  41180b:	lahf   
  41180c:	xchg   edi,eax
  41180d:	xchg   ecx,eax
  41180e:	jmp    0x411808
  411810:	loope  0x4117c7
  411812:	paddsb mm7,QWORD PTR [eax+0xee3dfa0]
  411819:	jmp    0x1cd9fdcc
  41181e:	imul   ebp,ecx,0x2a6a492a
  411824:	das    
  411825:	mov    ah,0x8f
  411827:	jne    0x4117e2
  411829:	fisub  DWORD PTR [ecx-0x7]
  41182c:	call   0x1bb809e2
  411831:	jae    0x411812
  411833:	lds    eax,FWORD PTR [eax]
  411835:	push   edi
  411836:	mov    dh,0xab
  411838:	push   ds
  411839:	push   eax
  41183a:	les    ebp,FWORD PTR ds:0xd3bda622
  411840:	leave  
  411841:	mov    al,BYTE PTR cs:[edi]
  411844:	frstor [ebp-0x27a77253]
  41184a:	test   al,0x35
  41184c:	aaa    
  41184d:	sub    DWORD PTR [edi-0x38c13da1],0x5bb84bf2
  411857:	inc    ebp
  411858:	repnz mov esp,0xf2de566c
  41185e:	dec    ebp
  41185f:	sbb    cl,bh
  411861:	push   esi
  411862:	push   0xffffff85
  411864:	and    al,0xc
  411866:	cwde   
  411867:	xor    BYTE PTR [ebx-0x1a0d0377],bh
  41186d:	outs   dx,DWORD PTR ds:[esi]
  41186e:	aaa    
  41186f:	bt     DWORD PTR [edi+0x3de5ed57],esi
  411876:	mov    cl,BYTE PTR [eax]
  411878:	gs aas 
  41187a:	or     al,0xb5
  41187c:	push   esp
  41187d:	rol    BYTE PTR [esi+0x6ca26ff],1
  411883:	push   es
  411884:	mov    edi,esi
  411886:	outs   dx,BYTE PTR ds:[esi]
  411887:	inc    esp
  411888:	sbb    ebp,DWORD PTR [esi-0x5e26daa0]
  41188e:	add    BYTE PTR [ebp-0x1b8f2a59],0x2e
  411895:	mov    ds:0x5de7a907,eax
  41189a:	das    
  41189b:	shr    DWORD PTR [eax-0x5e5f560],cl
  4118a1:	pop    ebp
  4118a2:	adc    eax,0xba1791cd
  4118a7:	xchg   edi,eax
  4118a8:	inc    edi
  4118a9:	repnz add bh,ch
  4118ac:	loopne 0x4118bc
  4118ae:	js     0x411847
  4118b0:	int    0x9d
  4118b2:	sub    al,0x89
  4118b4:	jmp    0x5ad:0xc9cfb54a
  4118bb:	inc    edx
  4118bc:	mov    esi,0xfbfd1f78
  4118c1:	mov    edx,esi
  4118c3:	(bad)  
  4118c4:	std    
  4118c5:	or     al,0x49
  4118c7:	cdq    
  4118c8:	shl    BYTE PTR [ebp+eiz*2+0x31],1
  4118cc:	shl    DWORD PTR [ebx*2-0x4ead91a8],0x91
  4118d4:	fisttp DWORD PTR [ecx-0x6338bae]
  4118da:	push   0x31
  4118dc:	fldcw  WORD PTR [edi+0x15af31ab]
  4118e2:	outs   dx,DWORD PTR ds:[esi]
  4118e3:	jnp    0x411951
  4118e5:	outs   dx,BYTE PTR ds:[esi]
  4118e6:	fsubr  QWORD PTR [ebx]
  4118e8:	imul   ebp,DWORD PTR [esi+0x46],0xffffffc9
  4118ec:	mov    bl,0xdb
  4118ee:	sbb    dh,BYTE PTR [ecx]
  4118f0:	jnp    0x4118db
  4118f2:	fild   WORD PTR [ebx-0x7c]
  4118f5:	hlt    
  4118f6:	(bad)  
  4118f7:	xor    DWORD PTR fs:[eax+0x4a],edi
  4118fb:	push   cs
  4118fc:	jbe    0x411968
  4118fe:	and    DWORD PTR [ebp-0xb694881],ebp
  411904:	sub    DWORD PTR [ebx+0x68ca5d],ebp
  41190a:	adc    dl,ch
  41190c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41190d:	jmp    0x572ce44e
  411912:	or     BYTE PTR [eax],al
  411914:	test   DWORD PTR [ebx+eax*4],esi
  411917:	in     eax,dx
  411918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411919:	mov    esi,0x36833b05
  41191e:	pusha  
  41191f:	(bad)  
  411920:	fcomp  DWORD PTR [esi]
  411922:	jbe    0x4118d9
  411924:	pop    edi
  411925:	mov    ebx,0x7239e220
  41192a:	(bad)  
  41192b:	cwde   
  41192c:	inc    ecx
  41192d:	or     al,0x77
  41192f:	(bad)  
  411930:	fs mov dl,0xb0
  411933:	jns    0x41196b
  411935:	bnd cs jno 0x41197f
  411939:	mov    dh,0x92
  41193b:	add    al,0xef
  41193d:	(bad)  
  41193e:	dec    eax
  41193f:	add    eax,0x677be6fd
  411944:	xlat   BYTE PTR ds:[ebx]
  411945:	scas   eax,DWORD PTR es:[edi]
  411946:	loop   0x411917
  411948:	std    
  411949:	dec    esp
  41194a:	push   cs
  41194b:	loope  0x411904
  41194d:	aaa    
  41194e:	fcomp  DWORD PTR [edx-0xa]
  411951:	dec    ecx
  411952:	xor    dh,dh
  411954:	mov    dl,0x73
  411956:	mov    ah,0xad
  411958:	mov    ecx,0xffefeb64
  41195d:	cmp    eax,DWORD PTR [ebx]
  41195f:	outs   dx,BYTE PTR ds:[esi]
  411960:	xchg   ebp,eax
  411961:	popf   
  411962:	push   ds
  411963:	fild   QWORD PTR ds:0x1ce77ea
  411969:	sub    eax,0x99f920f7
  41196e:	inc    esi
  41196f:	mov    ds:0x7a7faf77,eax
  411974:	outs   dx,BYTE PTR ds:[esi]
  411975:	sahf   
  411976:	cmp    edi,DWORD PTR ds:0x859be6ef
  41197c:	jbe    0x411954
  41197e:	loopne 0x4119cc
  411980:	mov    ebp,0x4c79bd1b
  411985:	lds    edi,FWORD PTR [ecx-0x47]
  411988:	pop    ebp
  411989:	test   BYTE PTR [edx+0x54],bh
  41198c:	jb     0x4119ed
  41198e:	enter  0x80c8,0x3d
  411992:	or     DWORD PTR [ebp-0x7a],esi
  411995:	(bad)  
  411996:	in     al,dx
  411997:	xchg   ebp,eax
  411998:	sbb    eax,0x5168aa89
  41199d:	leave  
  41199e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199f:	dec    ebp
  4119a0:	aad    0x78
  4119a2:	mov    ecx,0x2fbf15a9
  4119a7:	mov    al,ds:0xaf22046a
  4119ac:	add    al,0x93
  4119ae:	mov    dl,0x93
  4119b0:	mov    BYTE PTR [ebx],bh
  4119b2:	popf   
  4119b3:	push   cs
  4119b4:	stos   BYTE PTR es:[edi],al
  4119b5:	mov    eax,ds:0x8e10f2c7
  4119ba:	lock mov edi,DWORD PTR [eax-0x59]
  4119be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119bf:	push   ds
  4119c0:	ret    0x957e
  4119c3:	dec    esi
  4119c4:	add    al,0xad
  4119c6:	mov    WORD PTR [eax-0x6c],cs
  4119c9:	dec    esi
  4119ca:	in     al,dx
  4119cb:	jne    0x4119c2
  4119cd:	daa    
  4119ce:	mov    cl,0x76
  4119d0:	mov    dh,0x78
  4119d2:	call   0xe15da00c
  4119d7:	xor    al,0xa2
  4119d9:	dec    esp
  4119da:	jmp    0x4119d3
  4119dc:	add    BYTE PTR [eax],ah
  4119de:	jne    0x4119ec
  4119e0:	and    DWORD PTR [edx],ebp
  4119e2:	add    bl,BYTE PTR [ebp+0x5a99f94d]
  4119e8:	pop    esi
  4119e9:	fld    DWORD PTR [edi+edx*1]
  4119ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ed:	mov    eax,ds:0x2873ef4f
  4119f2:	jnp    0x4119e4
  4119f4:	xor    DWORD PTR [edx],esp
  4119f6:	(bad)  
  4119f7:	ds scas al,BYTE PTR es:[edi]
  4119f9:	add    al,0x74
  4119fb:	rcr    DWORD PTR [ebx-0x80],1
  4119fe:	and    BYTE PTR [edx],0xbb
  411a01:	xor    eax,0x798aa761
  411a06:	mov    ebx,0xd99446f
  411a0b:	les    edx,FWORD PTR [edi-0x52]
  411a0e:	int    0x4
  411a10:	shl    ecx,1
  411a12:	fldlg2 
  411a14:	repnz sub al,0x75
  411a17:	inc    eax
  411a18:	sti    
  411a19:	inc    esp
  411a1a:	pop    edx
  411a1b:	ja     0x4119f9
  411a1d:	mov    edi,0xdb43f99c
  411a22:	sbb    esp,esp
  411a24:	pop    esp
  411a25:	addr16 mov bh,0x77
  411a28:	sub    al,0xe0
  411a2a:	ins    DWORD PTR es:[edi],dx
  411a2b:	mov    ds:0x839a4e6d,al
  411a30:	bound  esi,QWORD PTR [edx-0x7d15dc2b]
  411a36:	shr    DWORD PTR [edx],0xe7
  411a39:	pop    es
  411a3a:	dec    ecx
  411a3b:	je     0x411a8e
  411a3d:	or     BYTE PTR [ecx],cl
  411a3f:	outs   dx,BYTE PTR ds:[esi]
  411a40:	cli    
  411a41:	inc    edi
  411a42:	push   edx
  411a43:	mov    DWORD PTR [ebx-0xb5335d],edi
  411a49:	xor    bl,BYTE PTR [ebx+0x7d]
  411a4c:	mov    eax,0x692d2abc
  411a51:	inc    ebx
  411a52:	fidivr DWORD PTR [esi]
  411a54:	mov    ch,0xb0
  411a56:	or     edi,0x6
  411a59:	imul   ebx,esi,0x428e95a0
  411a5f:	mov    ebp,0x90361fd5
  411a64:	and    BYTE PTR [ebx-0x31794e31],ah
  411a6a:	push   ss
  411a6b:	lods   eax,DWORD PTR ds:[esi]
  411a6c:	hlt    
  411a6d:	add    al,0x97
  411a6f:	popa   
  411a70:	xchg   esp,eax
  411a71:	inc    ecx
  411a72:	dec    edi
  411a73:	ds adc al,0xcd
  411a76:	pushf  
  411a77:	mov    al,ds:0x24e49e1a
  411a7c:	sbb    al,0x25
  411a7e:	popa   
  411a7f:	outs   dx,DWORD PTR ds:[esi]
  411a80:	outs   dx,DWORD PTR ds:[esi]
  411a81:	test   BYTE PTR [esi-0x57],0x82
  411a85:	mov    bh,0x9a
  411a87:	sahf   
  411a88:	push   eax
  411a89:	rcr    DWORD PTR [eax+0x1f],1
  411a8c:	int    0x26
  411a8e:	mov    dh,0xfd
  411a90:	lods   eax,DWORD PTR ds:[esi]
  411a91:	xchg   esi,eax
  411a92:	sub    eax,0x549c6e8d
  411a97:	jcxz   0x411a80
  411a9a:	jle    0x411a24
  411a9c:	test   DWORD PTR [edx-0x59f463fb],0xda5facc8
  411aa6:	aaa    
  411aa7:	stc    
  411aa8:	mov    esi,0xde4a5136
  411aad:	scas   al,BYTE PTR es:[edi]
  411aae:	fwait
  411aaf:	jne    0x411a78
  411ab1:	jmp    0xac832135
  411ab6:	cmp    cl,BYTE PTR [edi+ebp*8]
  411ab9:	adc    eax,0x4ec76b45
  411abe:	mov    eax,ds:0xf4a619db
  411ac3:	lock jl 0x411a68
  411ac6:	das    
  411ac7:	(bad)  
  411ac9:	cmc    
  411aca:	lahf   
  411acb:	retf   
  411acc:	ins    DWORD PTR es:[edi],dx
  411acd:	jl     0x411a98
  411acf:	jle    0x411ad0
  411ad1:	je     0x411afa
  411ad3:	dec    ebp
  411ad4:	cwde   
  411ad5:	push   esi
  411ad6:	lock mov esp,0xd08d0771
  411adc:	mov    edi,0x637269ff
  411ae1:	retf   0xf183
  411ae4:	jb     0x411b12
  411ae6:	aaa    
  411ae7:	inc    ebp
  411ae8:	popa   
  411ae9:	sub    al,0x87
  411aeb:	sahf   
  411aec:	jmp    0xb2b2:0x79f0dedd
  411af3:	pusha  
  411af4:	sti    
  411af5:	mov    BYTE PTR [ecx],cl
  411af7:	dec    edx
  411af8:	scas   eax,DWORD PTR es:[edi]
  411af9:	xchg   BYTE PTR [edi+0x7b],bl
  411afc:	or     al,0xe0
  411afe:	imul   edx,esp,0xfffffff2
  411b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b02:	jo     0x411a8b
  411b04:	cmp    DWORD PTR [edi-0x54],edx
  411b07:	loop   0x411a8d
  411b09:	not    DWORD PTR [ebp+0x426b13cf]
  411b0f:	in     al,dx
  411b10:	in     al,dx
  411b11:	enter  0x8734,0xd3
  411b15:	mov    ebx,0x51da7906
  411b1a:	cdq    
  411b1b:	ret    0x454
  411b1e:	add    BYTE PTR ds:0xab01d2c1,al
  411b24:	dec    eax
  411b25:	das    
  411b26:	xlat   BYTE PTR ds:[ebx]
  411b27:	cmp    eax,0xbc9c0e0c
  411b2c:	jge    0x411b49
  411b2e:	(bad)  
  411b2f:	add    ebx,esi
  411b31:	vmread DWORD PTR [ecx+0x1a04b18],eax
  411b38:	adc    esi,ebx
  411b3a:	icebp  
  411b3b:	leave  
  411b3c:	dec    edi
  411b3d:	(bad)  
  411b3e:	jnp    0x411ba8
  411b40:	(bad)  
  411b41:	je     0x411b25
  411b43:	add    esp,esp
  411b45:	cld    
  411b46:	jo     0x411bb6
  411b48:	fs xor al,0x1b
  411b4b:	imul   eax,DWORD PTR [ecx-0x52],0xffffffa4
  411b4f:	jbe    0x411b1c
  411b51:	fld    DWORD PTR [eax-0x624f68c4]
  411b57:	mov    ebp,DWORD PTR [edx-0x54]
  411b5a:	or     DWORD PTR ds:0xec9102b3,ecx
  411b60:	sub    eax,0x90aa9c14
  411b65:	jge    0x411b35
  411b67:	sbb    BYTE PTR [ebp+0xc33ebf2],bl
  411b6d:	in     eax,0x1d
  411b6f:	mov    al,ds:0xdae1b605
  411b74:	mov    ebx,0x52ca7b85
  411b79:	loope  0x411b66
  411b7b:	je     0x411b03
  411b7d:	loop   0x411b09
  411b7f:	stos   DWORD PTR es:[edi],eax
  411b80:	and    DWORD PTR [edx+0x3a],ebx
  411b83:	sbb    eax,0xc45d993b
  411b88:	in     al,dx
  411b89:	dec    ebx
  411b8a:	rcr    BYTE PTR [ebp+0x3d9ad118],1
  411b90:	sbb    BYTE PTR [ebx-0x530fd1be],ch
  411b96:	jbe    0x411bd7
  411b98:	dec    ecx
  411b99:	or     esi,DWORD PTR [edx]
  411b9b:	cli    
  411b9c:	pop    esp
  411b9d:	jns    0x411b30
  411b9f:	into   
  411ba0:	loope  0x411bab
  411ba2:	mov    al,0x2a
  411ba4:	sbb    al,BYTE PTR [edx]
  411ba6:	imul   ebp,DWORD PTR [esi],0xef119208
  411bac:	mov    bh,0xe
  411bae:	call   0xe4cfddc1
  411bb3:	pop    ds
  411bb4:	push   cs
  411bb5:	xchg   esi,eax
  411bb6:	mov    esp,0xf5267901
  411bbb:	inc    esi
  411bbc:	ror    ebx,1
  411bbe:	xchg   edi,eax
  411bbf:	sub    ah,dh
  411bc1:	xchg   BYTE PTR ds:0x71434a5b,dh
  411bc7:	fs push ss
  411bc9:	dec    ebx
  411bca:	adc    eax,0xdd69dfb0
  411bcf:	sbb    DWORD PTR [ebx+0x16dab9a9],0x68
  411bd6:	pop    eax
  411bd7:	xor    BYTE PTR [eax+0x418ac2da],ch
  411bdd:	mov    esi,0x98da0d35
  411be2:	(bad)  
  411be4:	(bad)  
  411be5:	cmp    al,0x34
  411be7:	popa   
  411be8:	mov    eax,ds:0xc6791139
  411bed:	mov    edi,0x3daa6223
  411bf2:	lods   al,BYTE PTR ds:[esi]
  411bf3:	shl    DWORD PTR [ebx-0x8],cl
  411bf6:	mov    al,0x8c
  411bf8:	rcl    DWORD PTR [ebx+0x51],1
  411bfb:	pop    ebx
  411bfc:	xor    edi,DWORD PTR [edx]
  411bfe:	lods   eax,DWORD PTR ds:[esi]
  411bff:	call   0xe6f5a60b
  411c04:	outs   dx,BYTE PTR ds:[esi]
  411c05:	adc    al,0xb4
  411c07:	adc    eax,0x16e048ad
  411c0c:	mov    cs,WORD PTR [ebp-0x4f1fbf91]
  411c12:	pop    ebx
  411c13:	pop    edi
  411c14:	dec    ebp
  411c15:	mov    cl,0x9a
  411c17:	pop    ecx
  411c18:	adc    al,0x4a
  411c1a:	mov    ch,0x9e
  411c1c:	rcl    DWORD PTR [esi+0x53],1
  411c1f:	bswap  ebp
  411c21:	mov    esi,0x97150f5b
  411c26:	sub    edi,edi
  411c28:	scas   al,BYTE PTR es:[edi]
  411c29:	not    BYTE PTR [ebx+ebx*8]
  411c2c:	inc    esi
  411c2d:	int    0xe8
  411c2f:	ins    BYTE PTR es:[edi],dx
  411c30:	mov    bl,0x6f
  411c32:	mov    ah,0xbc
  411c34:	loopne 0x411cb0
  411c36:	hlt    
  411c37:	ins    BYTE PTR es:[edi],dx
  411c38:	jb     0x411ca3
  411c3a:	call   0x475c:0xbf212788
  411c41:	inc    edi
  411c42:	xor    ecx,DWORD PTR [eax]
  411c44:	(bad)  
  411c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c46:	jb     0x411ca1
  411c48:	jns    0x411bd6
  411c4a:	cmp    eax,0xef28d994
  411c4f:	stos   BYTE PTR es:[edi],al
  411c50:	mov    bl,0x3b
  411c52:	popf   
  411c53:	(bad)  
  411c54:	ins    DWORD PTR es:[edi],dx
  411c55:	gs push 0x50
  411c58:	fcom   QWORD PTR [esi-0x44f63a]
  411c5e:	repz pop es
  411c60:	add    DWORD PTR [ebx],ebx
  411c62:	stos   DWORD PTR es:[edi],eax
  411c63:	imul   ebx,DWORD PTR ds:0x1c48a6d2,0xa9ce2c31
  411c6d:	int3   
  411c6e:	sbb    DWORD PTR [ebx-0x10],0xffffff98
  411c72:	in     eax,dx
  411c73:	pop    ebx
  411c74:	fisttp QWORD PTR [ecx]
  411c76:	loop   0x411bfc
  411c78:	shr    DWORD PTR [ebx+0x3e],cl
  411c7b:	cs test al,0xb9
  411c7e:	jae    0x411c79
  411c80:	shl    DWORD PTR [edi-0x74],cl
  411c83:	stos   BYTE PTR es:[edi],al
  411c84:	mov    ch,dl
  411c86:	or     BYTE PTR [edi+0x30],dh
  411c89:	imul   ebx,DWORD PTR [ecx+0x16],0x4084a884
  411c90:	or     al,0x52
  411c92:	int3   
  411c93:	iret   
  411c94:	xor    DWORD PTR ds:0xfb000d48,0x45a7ca40
  411c9e:	hlt    
  411c9f:	adc    DWORD PTR [eax+0x289d0cbb],0x17
  411ca6:	xor    ebx,DWORD PTR [edx]
  411ca8:	dec    esp
  411ca9:	and    edi,ebx
  411cab:	fsub   QWORD PTR [eax+0x33e1b229]
  411cb1:	lea    edx,[ebx-0x185460e0]
  411cb7:	xor    eax,DWORD PTR [edx]
  411cb9:	ins    BYTE PTR es:[edi],dx
  411cba:	push   0xa91bc9d9
  411cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc0:	mov    bl,dh
  411cc2:	int3   
  411cc3:	inc    ebx
  411cc4:	(bad)  
  411cc5:	pop    ss
  411cc6:	jmp    0x5324:0x68015d33
  411ccd:	retf   0x3988
  411cd0:	push   ss
  411cd1:	mov    eax,ds:0x6a504d06
  411cd6:	nop
  411cd7:	mov    esp,0x553e4b6
  411cdc:	stos   BYTE PTR es:[edi],al
  411cdd:	adc    ebx,DWORD PTR [ecx]
  411cdf:	mov    bh,0x6e
  411ce1:	mov    BYTE PTR [ecx+0x20],bl
  411ce4:	les    esi,FWORD PTR [ecx]
  411ce6:	popa   
  411ce7:	cmp    ebx,DWORD PTR [eax+0x5c069c9d]
  411ced:	(bad)  
  411cee:	dec    ecx
  411cef:	mov    esp,ebp
  411cf1:	(bad)  
  411cf2:	mov    edi,0x4a8d9c61
  411cf7:	fidiv  WORD PTR [ebp+0x38]
  411cfa:	jbe    0x411ca2
  411cfc:	inc    edx
  411cfd:	lods   eax,DWORD PTR ds:[esi]
  411cfe:	dec    eax
  411cff:	jo     0x411d70
  411d01:	aam    0x84
  411d03:	sub    BYTE PTR [ebp+0x75],al
  411d06:	scas   eax,DWORD PTR es:[edi]
  411d07:	push   edi
  411d08:	cmp    al,0xac
  411d0a:	jge    0x411d22
  411d0c:	xor    BYTE PTR [edi],ah
  411d0e:	nop
  411d0f:	inc    eax
  411d10:	adc    eax,0xf7359d27
  411d15:	shl    BYTE PTR [ecx+0x1d61bd32],1
  411d1b:	xor    eax,0x289d3732
  411d20:	mov    ebx,0x27b26b44
  411d25:	xchg   BYTE PTR [ecx-0x38],al
  411d28:	aad    0xf0
  411d2a:	mov    esp,0xb2020018
  411d2f:	aad    0x43
  411d31:	popa   
  411d32:	pop    ebx
  411d33:	test   al,0xc5
  411d35:	mov    ecx,0xe8cc2350
  411d3a:	inc    eax
  411d3b:	push   ebp
  411d3c:	dec    esi
  411d3d:	pavgb  mm5,QWORD PTR [ebx-0x39287514]
  411d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d45:	dec    edx
  411d46:	mov    ds:0x1f75a148,al
  411d4b:	mov    ecx,0xaee67e88
  411d50:	mov    edx,0x8df5862a
  411d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d56:	std    
  411d57:	push   ebx
  411d58:	out    dx,al
  411d59:	or     al,0xee
  411d5b:	jae    0x411d2a
  411d5d:	lods   al,BYTE PTR ds:[esi]
  411d5e:	jo     0x411d07
  411d60:	push   DWORD PTR [edi]
  411d62:	sbb    al,BYTE PTR [esi-0x59]
  411d65:	mov    bl,0x4d
  411d67:	xchg   esp,eax
  411d68:	es (bad) 
  411d6c:	and    eax,0x4d835394
  411d71:	adc    BYTE PTR [ebp+0x59],0x45
  411d75:	adc    DWORD PTR [edi],ebx
  411d77:	clc    
  411d78:	mov    ebp,0xca4cfbc6
  411d7d:	call   DWORD PTR [edi]
  411d7f:	and    ah,0x3c
  411d82:	and    esp,ecx
  411d84:	pushf  
  411d85:	std    
  411d86:	push   cs
  411d87:	cdq    
  411d88:	jl     0x411d59
  411d8a:	sbb    al,0xd
  411d8c:	scas   eax,DWORD PTR es:[edi]
  411d8d:	ror    edx,0xdd
  411d90:	aaa    
  411d91:	jg     0x411da9
  411d93:	retf   0x854b
  411d96:	lods   al,BYTE PTR ds:[esi]
  411d97:	fiadd  DWORD PTR [ebp-0x5beeefbb]
  411d9d:	fldln2 
  411d9f:	pusha  
  411da0:	arpl   WORD PTR [esi+0x72af4c65],ax
  411da6:	stc    
  411da7:	lock xchg ecx,eax
  411da9:	outs   dx,DWORD PTR ds:[esi]
  411daa:	adc    BYTE PTR [eax],dh
  411dac:	mov    ebp,0x2556b619
  411db1:	push   ebp
  411db2:	jecxz  0x411dc7
  411db4:	inc    edi
  411db5:	hlt    
  411db6:	push   edx
  411db7:	clc    
  411db8:	popa   
  411db9:	adc    BYTE PTR [eax+0xd],bh
  411dbc:	jae    0x411dc7
  411dbe:	das    
  411dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dc0:	jmp    0x14014933
  411dc5:	mov    dh,0x6e
  411dc7:	mov    esi,0xf2ffd7fa
  411dcc:	ret    0x86eb
  411dcf:	jg     0x411d8c
  411dd1:	in     eax,dx
  411dd2:	or     esi,DWORD PTR ds:0x19296fbf
  411dd8:	pusha  
  411dd9:	xchg   ecx,eax
  411dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ddb:	mov    ds:0xfa52a427,eax
  411de0:	mov    DWORD PTR [ebx-0x33337599],eax
  411de6:	jo     0x411de4
  411de8:	imul   esi
  411dea:	int3   
  411deb:	retf   
  411dec:	pop    ecx
  411ded:	test   BYTE PTR [esi],ch
  411def:	fnstenv [ecx]
  411df1:	sub    BYTE PTR [ebp+edx*1-0x47],0x6c
  411df6:	fcomp  QWORD PTR [esi]
  411df8:	pusha  
  411df9:	push   esi
  411dfa:	lea    eax,[eax+0x182381f8]
  411e00:	stos   DWORD PTR es:[edi],eax
  411e01:	dec    eax
  411e02:	push   esp
  411e03:	fiadd  WORD PTR [edx]
  411e05:	cwde   
  411e06:	sbb    al,0xef
  411e08:	out    dx,al
  411e09:	clc    
  411e0a:	jo     0x411d94
  411e0c:	xor    ch,al
  411e0e:	pop    ss
  411e0f:	and    ebx,DWORD PTR [ebx]
  411e11:	inc    esi
  411e12:	(bad)  
  411e13:	or     BYTE PTR [edi+eax*1+0x71f1fc14],bh
  411e1a:	mov    al,0x20
  411e1c:	jmp    0x8b08:0xaef25738
  411e23:	cld    
  411e24:	lods   eax,DWORD PTR ds:[esi]
  411e25:	pop    es
  411e26:	cmc    
  411e27:	pop    ebx
  411e28:	or     al,0x40
  411e2a:	mov    dl,0xed
  411e2c:	lods   al,BYTE PTR ds:[esi]
  411e2d:	jmp    0x411ea1
  411e2f:	pop    esp
  411e30:	pushf  
  411e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e32:	cmp    BYTE PTR [ecx+ebp*2],ah
  411e35:	popf   
  411e36:	push   esi
  411e37:	mov    ebx,ebp
  411e39:	or     eax,DWORD PTR ds:0x66fa7199
  411e3f:	hlt    
  411e40:	mov    ecx,0xc3b160ba
  411e45:	mov    edx,DWORD PTR [edi+0x61]
  411e48:	mov    dh,0x46
  411e4a:	into   
  411e4b:	fwait
  411e4c:	add    dl,ah
  411e4e:	ror    BYTE PTR [esi-0x68],1
  411e51:	push   ss
  411e52:	mov    ebx,0x4e67dbd0
  411e57:	daa    
  411e58:	aas    
  411e59:	push   eax
  411e5a:	sub    edx,DWORD PTR [ebp+0x693b8179]
  411e60:	fs mov dl,0xe7
  411e63:	add    BYTE PTR ds:0xf81d2772,cl
  411e69:	in     al,dx
  411e6a:	ja     0x411ee0
  411e6c:	lahf   
  411e6d:	stos   DWORD PTR es:[edi],eax
  411e6e:	pop    eax
  411e6f:	xchg   dx,cx
  411e72:	push   eax
  411e73:	jg     0x411dff
  411e75:	fmul   DWORD PTR [esi-0x55953293]
  411e7b:	fmul   QWORD PTR [edx]
  411e7d:	push   0x34
  411e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e80:	cmc    
  411e81:	into   
  411e82:	mov    esi,?
  411e84:	test   DWORD PTR [edx],esp
  411e86:	add    cl,BYTE PTR [edi]
  411e88:	out    0x7d,al
  411e8a:	jg     0x411e40
  411e8c:	pop    ebp
  411e8d:	repz inc ebx
  411e8f:	sub    BYTE PTR [ebx-0x2c],bh
  411e92:	or     al,0x9c
  411e94:	in     al,dx
  411e95:	hlt    
  411e96:	dec    edi
  411e97:	cdq    
  411e98:	inc    eax
  411e99:	sbb    bh,bh
  411e9b:	test   al,0x29
  411e9d:	fimul  WORD PTR [ecx-0x16]
  411ea0:	and    edi,ebx
  411ea2:	adc    bl,0x5
  411ea5:	test   eax,0xbcdd3ec3
  411eaa:	ja     0x411e2d
  411eac:	xchg   esi,eax
  411ead:	push   ebp
  411eae:	nop
  411eaf:	sti    
  411eb0:	je     0x411e32
  411eb2:	inc    esi
  411eb3:	lahf   
  411eb4:	sahf   
  411eb5:	cmp    dh,BYTE PTR [eax-0x62]
  411eb8:	mov    al,0x26
  411eba:	lods   al,BYTE PTR ds:[esi]
  411ebb:	mov    bl,0x79
  411ebd:	in     al,0x86
  411ebf:	jl     0x411ebc
  411ec1:	sbb    ah,BYTE PTR [ecx+0xf79914d]
  411ec7:	gs sub eax,0xb446027d
  411ecd:	lods   eax,DWORD PTR ds:[esi]
  411ece:	push   cs
  411ecf:	sub    ebp,eax
  411ed1:	mov    ebp,0xbf623288
  411ed6:	fcmovb st,st(7)
  411ed8:	xchg   ebx,eax
  411ed9:	dec    edi
  411eda:	loop   0x411eac
  411edc:	loop   0x411ea2
  411ede:	jl     0x411f1a
  411ee0:	jmp    0x2414:0xf1bea113
  411ee7:	cwde   
  411ee8:	xchg   edi,eax
  411ee9:	xchg   esi,eax
  411eea:	mov    cl,0x9
  411eec:	sbb    eax,0xfe2cab4c
  411ef1:	les    ebx,FWORD PTR [ecx+0x299a3b68]
  411ef7:	repnz hlt 
  411ef9:	ss aas 
  411efb:	xchg   DWORD PTR [ebx],ebx
  411efd:	shl    DWORD PTR [esi+0x8],cl
  411f00:	cmc    
  411f01:	push   esi
  411f02:	jle    0x411f2d
  411f04:	loop   0x411ed6
  411f06:	in     al,0xe4
  411f08:	mov    DWORD PTR [ecx+edx*2+0x263bfb1],ebx
  411f0f:	mov    edi,0x5a603f64
  411f14:	mov    bl,0x47
  411f16:	out    0xd0,al
  411f18:	xlat   BYTE PTR ds:[ebx]
  411f19:	in     eax,0xc8
  411f1b:	leave  
  411f1c:	sub    DWORD PTR [edx],ecx
  411f1e:	push   ecx
  411f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f20:	je     0x411f3d
  411f22:	aas    
  411f23:	mov    bl,0x7d
  411f25:	jl     0x411ec3
  411f27:	(bad)  
  411f28:	cmp    BYTE PTR [ecx],ch
  411f2a:	xor    esi,DWORD PTR [esi+0x14]
  411f2d:	push   0xffffffc2
  411f2f:	push   ds
  411f30:	icebp  
  411f31:	xchg   ecx,eax
  411f32:	jnp    0x411f97
  411f34:	push   edi
  411f35:	aas    
  411f36:	retf   
  411f37:	stos   DWORD PTR es:[edi],eax
  411f38:	mov    dh,0x76
  411f3a:	mov    bh,BYTE PTR [edi]
  411f3c:	add    ecx,0xf
  411f3f:	xchg   edi,eax
  411f40:	sbb    al,0xe9
  411f42:	pop    ecx
  411f43:	fidiv  WORD PTR [edx-0x3b200c43]
  411f49:	sysenter 
  411f4b:	sbb    al,0x1f
  411f4d:	sbb    DWORD PTR [ebx],esp
  411f4f:	xchg   DWORD PTR [edx+0xc36d9e5],esp
  411f55:	fwait
  411f56:	sahf   
  411f57:	push   ebx
  411f58:	pop    ss
  411f59:	lock sbb DWORD PTR [esi-0x33],ebx
  411f5d:	out    dx,al
  411f5e:	xor    DWORD PTR [ecx+0x7d],esp
  411f61:	(bad)  
  411f62:	cmp    esp,DWORD PTR [esi]
  411f64:	pop    edx
  411f65:	mov    ch,0xc6
  411f67:	int    0x87
  411f69:	push   esi
  411f6a:	out    dx,al
  411f6b:	xchg   edi,eax
  411f6c:	or     BYTE PTR [ecx+0xc2a81d9],0x91
  411f73:	inc    edi
  411f74:	fsub   QWORD PTR [ebx+ebp*1-0x27536da0]
  411f7b:	sub    esp,DWORD PTR [edi-0x25]
  411f7e:	adc    bh,BYTE PTR [ebp+ecx*2-0x438f56c8]
  411f85:	js     0x411f7a
  411f87:	lods   al,BYTE PTR ds:[esi]
  411f88:	fs aaa 
  411f8a:	into   
  411f8b:	aam    0x5
  411f8d:	add    eax,0x79b62fae
  411f92:	ins    DWORD PTR es:[edi],dx
  411f93:	ds out 0xe8,eax
  411f96:	into   
  411f97:	das    
  411f98:	shl    BYTE PTR [ecx+0x62],cl
  411f9b:	and    ah,BYTE PTR [ecx]
  411f9d:	jo     0x411f27
  411f9f:	lock daa 
  411fa1:	xchg   BYTE PTR [edi+0x4cf1c482],al
  411fa7:	cld    
  411fa8:	call   0xbb84:0x898c0166
  411faf:	in     al,dx
  411fb0:	jb     0x411f79
  411fb2:	ror    BYTE PTR [ebx-0x37],cl
  411fb5:	in     eax,dx
  411fb6:	add    al,cl
  411fb8:	(bad)  
  411fba:	dec    ebx
  411fbb:	sub    ebp,DWORD PTR [edx+0x3448d463]
  411fc1:	push   es
  411fc2:	mov    dh,0xce
  411fc4:	inc    ebp
  411fc5:	sub    al,0x6b
  411fc7:	sub    al,0xac
  411fc9:	ins    DWORD PTR es:[edi],dx
  411fca:	mov    ecx,DWORD PTR [edi-0x76ded4bb]
  411fd0:	dec    esi
  411fd1:	js     0x411f92
  411fd3:	repnz leave 
  411fd5:	(bad)  
  411fd6:	arpl   WORD PTR [edi-0x2b],si
  411fd9:	xchg   edi,eax
  411fda:	loop   0x412023
  411fdc:	xor    ch,BYTE PTR [edi]
  411fde:	push   0xffffffbb
  411fe0:	xor    al,0x21
  411fe2:	sub    eax,0x8c120615
  411fe7:	add    al,0xbe
  411fe9:	dec    esi
  411fea:	cmp    BYTE PTR [esp],0xce
  411fee:	mov    al,ds:0xad3ed5c2
  411ff3:	outs   dx,DWORD PTR ds:[esi]
  411ff4:	jge    0x411ff9
  411ff6:	sbb    BYTE PTR [ecx-0x7823f998],ch
  411ffc:	popa   
  411ffd:	pop    ebx
  411ffe:	jae    0x412003
  412000:	ja     0x41206d
  412002:	mov    ch,BYTE PTR [eax-0x771443fe]
  412008:	mov    ds:0x8b0dd1a6,eax
  41200d:	rcr    bl,cl
  41200f:	push   esp
  412010:	test   eax,0x49906935
  412015:	cmp    BYTE PTR [ebp-0x13],bl
  412018:	mov    BYTE PTR [edi-0x20],dl
  41201b:	xor    al,0x9a
  41201d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41201e:	cld    
  41201f:	shl    DWORD PTR [ebx],cl
  412021:	pop    ecx
  412022:	retf   
  412023:	xor    esp,DWORD PTR [esi-0xa18bbb8]
  412029:	call   0xdb9a:0x847514b
  412030:	in     al,dx
  412031:	out    dx,eax
  412032:	add    DWORD PTR [ebx+0x4903106],0x2
  412039:	(bad)  
  41203a:	jl     0x41201f
  41203c:	inc    esi
  41203d:	push   esp
  41203e:	xor    BYTE PTR ds:0xbbd710e,bh
  412044:	push   esi
  412045:	jg     0x4120af
  412047:	xor    eax,0x5cefb624
  41204c:	and    dh,cl
  41204e:	mov    cl,0x85
  412050:	fld    DWORD PTR [eax]
  412052:	mov    ds:0x758fbafe,eax
  412057:	and    al,0x50
  412059:	pop    ss
  41205a:	imul   BYTE PTR [eax+esi*1]
  41205d:	push   cs
  41205e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41205f:	mov    esi,0x5c734d06
  412064:	mov    ecx,0x1bfde333
  412069:	add    al,0x9
  41206b:	clc    
  41206c:	ds cmc 
  41206e:	pop    ebx
  41206f:	jmp    0x8527:0x4c0df0c
  412076:	es push 0x86b2248f
  41207c:	arpl   WORD PTR [edx+0x4434f7c6],dx
  412082:	jle    0x41201a
  412084:	(bad)  
  412085:	push   eax
  412086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412087:	add    ecx,DWORD PTR [eax+0x3dd91026]
  41208d:	and    edx,eax
  41208f:	cwde   
  412090:	(bad)  
  412091:	into   
  412092:	pushf  
  412093:	out    dx,eax
  412094:	cmp    al,0x2
  412096:	add    eax,DWORD PTR [edi-0x22]
  412099:	leave  
  41209a:	ja     0x412069
  41209c:	pop    esp
  41209d:	(bad)  
  41209e:	pop    eax
  41209f:	outs   dx,BYTE PTR ds:[esi]
  4120a0:	pop    eax
  4120a1:	popa   
  4120a2:	pop    es
  4120a3:	jge    0x41206d
  4120a5:	xor    bl,bl
  4120a7:	jge    0x4120df
  4120a9:	and    DWORD PTR [ebx],eax
  4120ab:	xchg   ebp,eax
  4120ac:	icebp  
  4120ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120ae:	xlat   BYTE PTR ds:[ebx]
  4120af:	ins    BYTE PTR es:[edi],dx
  4120b0:	xchg   ebp,eax
  4120b1:	adc    DWORD PTR [eax],ebp
  4120b3:	jnp    0x4120d3
  4120b5:	lds    ebx,FWORD PTR [ebp-0x51]
  4120b8:	sbb    DWORD PTR cs:[edi+0x60313f56],esi
  4120bf:	xchg   edx,edx
  4120c1:	or     cl,dh
  4120c3:	mov    edx,0x61308498
  4120c8:	pop    ecx
  4120c9:	int    0xe2
  4120cb:	cmp    BYTE PTR [ecx],al
  4120cd:	adc    BYTE PTR [ebp-0x7c],cl
  4120d0:	sub    BYTE PTR [edx-0x7d],bl
  4120d3:	fsub   DWORD PTR [ebp+ecx*2+0x527ababb]
  4120da:	rol    ah,1
  4120dc:	add    al,0x5a
  4120de:	sub    eax,0x40ab8edd
  4120e3:	aaa    
  4120e4:	scas   al,BYTE PTR es:[edi]
  4120e5:	xlat   BYTE PTR ds:[ebx]
  4120e6:	ret    0x9b32
  4120e9:	mov    bl,0xbf
  4120eb:	xlat   BYTE PTR ds:[ebx]
  4120ec:	ins    DWORD PTR es:[edi],dx
  4120ed:	cwde   
  4120ee:	mov    edx,0xb37fd327
  4120f3:	out    0x2c,al
  4120f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f6:	and    BYTE PTR [ecx-0x40],0x28
  4120fa:	cwde   
  4120fb:	pop    DWORD PTR [edi-0x414524f1]
  412101:	test   DWORD PTR [edi-0x24d12023],ecx
  412107:	rcr    ecx,0x6d
  41210a:	clc    
  41210b:	inc    edx
  41210c:	mov    ds:0xdc4b71ec,al
  412111:	lods   eax,DWORD PTR ds:[esi]
  412112:	loopne 0x4120ea
  412114:	xor    dl,0x1a
  412117:	jp     0x41212d
  412119:	add    BYTE PTR [ecx],dh
  41211b:	lds    esi,FWORD PTR [ebx+edi*2-0x1851950d]
  412122:	sub    ebx,DWORD PTR [edx+0x10]
  412125:	js     0x412158
  412127:	aad    0x9f
  412129:	jl     0x41213a
  41212b:	lods   al,BYTE PTR ds:[esi]
  41212c:	inc    edx
  41212d:	or     BYTE PTR [edx+0x76fd0fb7],bh
  412133:	cld    
  412134:	enter  0xf232,0x65
  412138:	outs   dx,DWORD PTR ds:[esi]
  412139:	test   ebp,edx
  41213b:	xchg   BYTE PTR [esi-0x21bb0a39],dh
  412141:	push   esp
  412142:	lahf   
  412143:	test   eax,0x6477696b
  412148:	aas    
  412149:	jbe    0x41212e
  41214b:	int    0x79
  41214d:	das    
  41214e:	push   edx
  41214f:	cmp    al,0x80
  412151:	and    dl,BYTE PTR [ebp-0x48fc3e97]
  412157:	jae    0x4120e5
  412159:	or     eax,DWORD PTR [ebp+0x59]
  41215c:	jmp    0x68b9:0x2547edde
  412163:	jnp    0x4120fc
  412165:	addr16 dec esi
  412167:	add    BYTE PTR [eax],cl
  412169:	dec    edx
  41216a:	call   0xc033:0xdc3be8b7
  412171:	daa    
  412172:	bound  edi,QWORD PTR [ebx-0x38328b40]
  412178:	mov    ch,0x94
  41217a:	lock jnp 0x412179
  41217d:	pop    ds
  41217e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41217f:	mov    al,0xff
  412181:	pop    es
  412182:	cld    
  412183:	dec    edi
  412184:	call   0x1a3bdfd2
  412189:	and    al,0x6b
  41218b:	test   DWORD PTR [ebp+0x40],ebp
  41218e:	push   ss
  41218f:	sub    BYTE PTR [ecx+0x23],ah
  412192:	int    0x8b
  412194:	inc    ecx
  412195:	fadd   QWORD PTR [edx+0x5d4c8a7f]
  41219b:	push   cs
  41219c:	cdq    
  41219d:	enter  0xd91b,0x6f
  4121a1:	add    edx,DWORD PTR [ecx+0x33]
  4121a4:	leave  
  4121a5:	sti    
  4121a6:	cmp    al,0x8d
  4121a8:	in     al,dx
  4121a9:	mov    dh,0x40
  4121ab:	or     BYTE PTR [ecx+ecx*4],0xc7
  4121af:	loope  0x4121cb
  4121b1:	cmc    
  4121b2:	dec    esp
  4121b3:	pop    ss
  4121b4:	call   0x2eaf114c
  4121b9:	in     al,0x30
  4121bb:	cli    
  4121bc:	jmp    0x722657c9
  4121c1:	mov    ah,0x1c
  4121c3:	and    DWORD PTR [esi],ecx
  4121c5:	xlat   BYTE PTR ds:[ebx]
  4121c6:	mov    esi,0xbbef6b23
  4121cb:	(bad)  
  4121cc:	push   esi
  4121cd:	repz dec ecx
  4121cf:	mov    ecx,0xff7336a9
  4121d4:	inc    ebx
  4121d5:	push   ecx
  4121d6:	stos   BYTE PTR es:[edi],al
  4121d7:	dec    eax
  4121d8:	xor    edx,eax
  4121da:	dec    ebp
  4121db:	mov    al,0x65
  4121dd:	ins    DWORD PTR es:[edi],dx
  4121de:	jmp    0x4121ac
  4121e0:	test   DWORD PTR [ecx+eax*8-0x55300909],0xb2897c8
  4121eb:	cs push ebp
  4121ed:	pop    esi
  4121ee:	aad    0x45
  4121f0:	and    bh,BYTE PTR es:[esp+esi*2]
  4121f4:	inc    eax
  4121f5:	outs   dx,BYTE PTR ds:[esi]
  4121f6:	ins    DWORD PTR es:[edi],dx
  4121f7:	sbb    DWORD PTR [edx-0x2a],esi
  4121fa:	mov    esi,0x4a069801
  4121ff:	mov    ebx,0xc827bc79
  412204:	push   ds
  412205:	(bad)  [ecx+0x33186cdf]
  41220b:	push   edx
  41220c:	das    
  41220d:	div    dh
  41220f:	lods   eax,DWORD PTR ds:[esi]
  412210:	hlt    
  412211:	pop    ecx
  412212:	cmp    eax,0xb75d8af6
  412217:	cld    
  412218:	mov    edi,0xa3da08c7
  41221d:	bnd call 0x776924e9
  412223:	cli    
  412224:	test   BYTE PTR [ebx],ah
  412226:	mov    al,ds:0xbb30b9dc
  41222b:	jno    0x412290
  41222d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41222e:	sub    BYTE PTR [ebx],ah
  412230:	mov    al,BYTE PTR [esi+eiz*8+0x2c]
  412234:	mov    ds:0x6b96d045,eax
  412239:	ins    BYTE PTR es:[edi],dx
  41223a:	mov    esi,0x15b36783
  41223f:	stos   DWORD PTR es:[edi],eax
  412240:	cmp    BYTE PTR [edi],ch
  412242:	inc    eax
  412243:	push   0x17
  412245:	jne    0x412217
  412247:	pushf  
  412248:	sti    
  412249:	cli    
  41224a:	imul   ebx,eax,0xc
  41224d:	or     al,0x48
  41224f:	js     0x41222b
  412251:	inc    ebx
  412252:	and    eax,DWORD PTR [edi]
  412254:	cwde   
  412255:	xchg   edx,eax
  412256:	stos   BYTE PTR es:[edi],al
  412257:	nop
  412258:	aad    0xb9
  41225a:	and    BYTE PTR [eax+0x47],bl
  41225d:	bnd ret 0xc88e
  412261:	scas   eax,DWORD PTR es:[edi]
  412262:	out    dx,eax
  412263:	iret   
  412264:	rcr    BYTE PTR [ebx],cl
  412266:	fsub   st,st(3)
  412268:	sbb    ch,ch
  41226a:	ds js  0x4122a8
  41226d:	std    
  41226e:	xchg   ecx,eax
  41226f:	rcl    DWORD PTR [ebp-0x2c],0xe6
  412273:	out    0xb8,al
  412275:	inc    edi
  412276:	fwait
  412277:	jle    0x4122c1
  412279:	push   edi
  41227a:	gs inc bl
  41227d:	sbb    eax,DWORD PTR [ebx+ebp*2-0x3f]
  412281:	outs   dx,DWORD PTR ds:[esi]
  412282:	pop    eax
  412283:	push   ss
  412284:	xor    edi,DWORD PTR [ebx+edi*4]
  412287:	ds mov cl,0x30
  41228a:	retf   
  41228b:	cmp    DWORD PTR [ebx+0x34466c82],eax
  412291:	xchg   esp,eax
  412292:	mov    cl,0xc2
  412294:	ret    
  412295:	push   ecx
  412296:	push   ecx
  412297:	push   ss
  412298:	sub    dh,BYTE PTR [ebp-0x6344ef64]
  41229e:	mov    bl,0x1b
  4122a0:	int    0xbf
  4122a2:	mov    dl,0x61
  4122a4:	aas    
  4122a5:	repz mov al,ds:0xafded41e
  4122ab:	mov    bl,0x28
  4122ad:	popf   
  4122ae:	push   esi
  4122af:	push   eax
  4122b0:	pusha  
  4122b1:	icebp  
  4122b2:	mov    cl,0xdd
  4122b4:	aad    0xbc
  4122b6:	dec    edx
  4122b7:	icebp  
  4122b8:	dec    ecx
  4122b9:	mov    ebp,DWORD PTR [esi+0x3d]
  4122bc:	mov    BYTE PTR [edi-0x16],dh
  4122bf:	cmp    al,0x6b
  4122c1:	inc    ebx
  4122c2:	ret    0x8681
  4122c5:	dec    edi
  4122c6:	jbe    0x412283
  4122c8:	inc    edx
  4122c9:	push   esp
  4122ca:	xor    eax,0x7251ab33
  4122cf:	add    eax,0x9c1d296e
  4122d4:	shl    dh,0x77
  4122d7:	popa   
  4122d8:	dec    ebp
  4122d9:	shr    BYTE PTR [edi+0x10a27ee2],1
  4122df:	mov    bl,0x83
  4122e1:	pushf  
  4122e2:	cmp    ebx,ecx
  4122e4:	or     eax,0x789a43c5
  4122e9:	cli    
  4122ea:	push   esp
  4122eb:	ins    DWORD PTR es:[edi],dx
  4122ec:	xor    ch,BYTE PTR [esp+ebp*2-0x17]
  4122f0:	jmp    0xfe0655b5
  4122f5:	dec    ebx
  4122f6:	fistp  WORD PTR [esi]
  4122f8:	stos   DWORD PTR es:[edi],eax
  4122f9:	inc    ebx
  4122fa:	xchg   ecx,eax
  4122fb:	push   ecx
  4122fc:	rol    BYTE PTR [eax-0x12e15e49],1
  412302:	push   edx
  412303:	dec    esp
  412304:	stc    
  412305:	sbb    dl,BYTE PTR [ecx]
  412307:	hlt    
  412308:	add    al,BYTE PTR [ecx-0x37f22b37]
  41230e:	jbe    0x41237f
  412310:	push   esp
  412311:	in     al,dx
  412312:	mov    ch,0x6b
  412314:	test   al,0x17
  412316:	scas   eax,DWORD PTR es:[edi]
  412317:	sub    BYTE PTR [ecx],0x6e
  41231a:	mov    al,0xc8
  41231c:	lahf   
  41231d:	in     al,dx
  41231e:	and    eax,0xbf027bd8
  412323:	lea    eax,[eax-0x5e]
  412326:	scas   al,BYTE PTR es:[edi]
  412327:	add    eax,0xa270fea
  41232c:	ds mov ebp,0x77ec5064
  412332:	jmp    0x5d1b:0xd3d60cc
  412339:	call   0xd56bec11
  41233e:	clc    
  41233f:	xor    DWORD PTR [edi-0x51],0x1f
  412343:	sahf   
  412344:	jl     0x412307
  412346:	das    
  412347:	mov    ch,0xc4
  412349:	mov    esi,DWORD PTR [ebp-0x4d]
  41234c:	cs mov bl,0x75
  41234f:	mov    bl,0x84
  412351:	outs   dx,BYTE PTR ds:[esi]
  412352:	sbb    DWORD PTR [ebx+0x6eb38d62],edi
  412358:	sahf   
  412359:	xlat   BYTE PTR ds:[ebx]
  41235a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41235b:	leave  
  41235c:	add    BYTE PTR [ebp+0x325af97d],0x56
  412363:	and    al,0x7b
  412365:	into   
  412366:	xchg   esp,eax
  412367:	mov    dh,0xdf
  412369:	test   al,0xa9
  41236b:	or     DWORD PTR [edx+0x35],0xcd288fd7
  412372:	fdivr  QWORD PTR [edi+0x6c]
  412375:	(bad)  
  412376:	sbb    edi,DWORD PTR [ebx]
  412378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412379:	jl     0x412391
  41237b:	aad    0x57
  41237d:	loop   0x4123ca
  41237f:	inc    edi
  412380:	retf   
  412381:	imul   edi,DWORD PTR [esi+0x19],0xd120e8fb
  412388:	mov    ch,0x98
  41238a:	hlt    
  41238b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41238c:	scas   eax,DWORD PTR es:[edi]
  41238d:	sar    BYTE PTR [edx+eax*4],cl
  412390:	mov    ecx,ds
  412392:	jl     0x4123d6
  412394:	pop    eax
  412395:	rcr    DWORD PTR [edx-0x55c54a71],1
  41239b:	aaa    
  41239c:	ds out dx,eax
  41239e:	jg     0x4123ed
  4123a0:	mov    ch,0x44
  4123a2:	xchg   BYTE PTR [ebx],dh
  4123a4:	pusha  
  4123a5:	mov    ch,0x9
  4123a7:	ret    0xdf29
  4123aa:	ret    
  4123ab:	push   ebp
  4123ac:	cmc    
  4123ad:	sahf   
  4123ae:	in     eax,dx
  4123af:	lods   eax,DWORD PTR ds:[esi]
  4123b0:	sbb    ah,BYTE PTR [edx]
  4123b2:	mov    ds,WORD PTR [ecx-0x44]
  4123b5:	sbb    eax,0x260285f
  4123ba:	(bad)  
  4123bb:	lds    ebp,FWORD PTR [ebp-0x1e]
  4123be:	mov    esp,0x34211824
  4123c3:	cmp    cl,BYTE PTR [ebp+0x65d93c51]
  4123c9:	aas    
  4123ca:	fcom   DWORD PTR [esi-0x72]
  4123cd:	rcr    BYTE PTR [ecx-0x56],1
  4123d0:	xchg   esp,eax
  4123d1:	sbb    al,0xed
  4123d3:	lea    edi,[esi-0x3]
  4123d6:	cli    
  4123d7:	push   es
  4123d8:	xchg   BYTE PTR [ecx+0x34],bl
  4123db:	adc    bh,bl
  4123dd:	cld    
  4123de:	sti    
  4123df:	and    BYTE PTR [ebx+0x22071c53],cl
  4123e5:	add    ebp,DWORD PTR [eax]
  4123e7:	cmp    DWORD PTR [edx-0x160836ea],eax
  4123ed:	pop    es
  4123ee:	repz mov cl,0xb5
  4123f1:	inc    edi
  4123f2:	call   0xbe25:0xd5b450cb
  4123f9:	pushf  
  4123fa:	push   0x95ae85fa
  4123ff:	jnp    0x4123f4
  412401:	pop    ds
  412402:	ins    DWORD PTR es:[edi],dx
  412403:	pop    eax
  412404:	cmp    edx,DWORD PTR [edi+0x9f243d5]
  41240a:	or     ecx,esi
  41240c:	dec    esi
  41240d:	(bad)  
  41240e:	sub    al,0x34
  412410:	xchg   edx,eax
  412411:	sbb    bl,bh
  412413:	mov    ebp,0xeff64741
  412418:	out    0xc4,eax
  41241a:	out    dx,eax
  41241b:	mov    eax,0x9bf9630b
  412420:	cmp    al,0x3b
  412422:	sub    al,0xa0
  412424:	inc    ebx
  412425:	jp     0x412471
  412427:	jmp    0x412448
  412429:	int3   
  41242a:	daa    
  41242b:	cmp    BYTE PTR ds:0x740089fc,al
  412431:	lods   al,BYTE PTR ds:[esi]
  412432:	lahf   
  412433:	or     bl,BYTE PTR [ebx]
  412435:	inc    edi
  412436:	ins    BYTE PTR es:[edi],dx
  412437:	mov    edi,0xd7e57544
  41243c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41243d:	ins    DWORD PTR es:[edi],dx
  41243e:	out    dx,al
  41243f:	and    BYTE PTR [esi],bl
  412441:	mov    edi,DWORD PTR [ecx-0x39c2933a]
  412447:	mov    dh,0x21
  412449:	cmp    al,0x6a
  41244b:	xchg   esp,eax
  41244c:	pop    es
  41244d:	add    eax,0x40ec8523
  412452:	popf   
  412453:	mov    cl,BYTE PTR ss:[ecx-0x555b520]
  41245a:	mov    DWORD PTR [ecx-0x76d637c5],ecx
  412460:	sbb    DWORD PTR [eax-0x2c41e38c],eax
  412466:	rcr    BYTE PTR [esi+0x6f],cl
  412469:	fwait
  41246a:	mov    al,ds:0x7f50034c
  41246f:	out    dx,al
  412470:	adc    eax,0xc440f35e
  412475:	test   BYTE PTR [eax-0x16c6c9d9],ah
  41247b:	shr    BYTE PTR [edx+ebx*2],cl
  41247e:	fmul   DWORD PTR [ebx]
  412480:	dec    eax
  412481:	inc    edi
  412482:	loop   0x41246e
  412484:	push   es
  412485:	daa    
  412486:	push   edi
  412487:	adc    DWORD PTR [eax],ebp
  412489:	jp     0x412486
  41248b:	std    
  41248c:	out    dx,al
  41248d:	ins    BYTE PTR es:[edi],dx
  41248e:	mov    bh,0xe7
  412490:	xchg   esp,eax
  412491:	jge    0x412441
  412493:	pop    es
  412494:	fiadd  WORD PTR [edi+ebp*2+0x74]
  412498:	mov    ebp,0xf31d3cd4
  41249d:	xchg   edi,eax
  41249e:	fbld   TBYTE PTR [esi+0x52]
  4124a1:	loopne 0x4124b3
  4124a3:	or     BYTE PTR [eax+0x16d84692],0xe1
  4124aa:	push   ebx
  4124ab:	js     0x4124b8
  4124ad:	ret    
  4124ae:	jbe    0x412457
  4124b0:	add    BYTE PTR [ecx+ebp*4-0x36dc613c],bl
  4124b7:	in     eax,0xe4
  4124b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ba:	or     eax,0x2e8d641d
  4124bf:	adc    DWORD PTR [ebx],ebx
  4124c1:	adc    eax,0xda036246
  4124c6:	xchg   esp,eax
  4124c7:	push   ds
  4124c8:	rcr    DWORD PTR [ecx],0xf4
  4124cb:	inc    ebp
  4124cc:	popa   
  4124cd:	nop
  4124ce:	test   BYTE PTR [esi],0x37
  4124d1:	jmp    0x4124c3
  4124d3:	jmp    0xbf753fb3
  4124d8:	mov    cl,0x99
  4124da:	call   0xa3097f8f
  4124df:	pop    ds
  4124e0:	dec    esp
  4124e1:	fdiv   QWORD PTR ds:0x1b939514
  4124e7:	push   edx
  4124e8:	mov    dh,0xc3
  4124ea:	mov    dl,cl
  4124ec:	push   es
  4124ed:	ss mov ah,0xce
  4124f0:	sub    al,0xf8
  4124f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124f3:	or     al,cl
  4124f5:	sbb    edi,DWORD PTR [eax+0x78]
  4124f8:	jge    0x4124e4
  4124fa:	dec    ebp
  4124fb:	icebp  
  4124fc:	js     0x412513
  4124fe:	lds    esp,FWORD PTR [edx+0x61]
  412501:	mov    ah,0x20
  412503:	xor    eax,0xf373efa7
  412508:	adc    al,0xcf
  41250a:	mov    ebx,DWORD PTR [ecx-0x35]
  41250d:	cmp    DWORD PTR [ebx],0x7fa49485
  412513:	retf   0xbcf2
  412516:	inc    ebp
  412517:	or     edx,esi
  412519:	mov    DWORD PTR [eax+0x3fccdb4c],edx
  41251f:	adc    al,0x9b
  412521:	jmp    0xa860074
  412526:	dec    ecx
  412527:	add    eax,eax
  412529:	jbe    0x4124f9
  41252b:	adc    dl,BYTE PTR [ebp+0x457d648d]
  412531:	sbb    al,0x81
  412533:	mov    cs,WORD PTR [ebp+0x4f32d47f]
  412539:	cdq    
  41253a:	bound  esi,QWORD PTR [edi+0xd4be5f7]
  412540:	and    dh,BYTE PTR [edi]
  412542:	mov    bh,0x83
  412544:	adc    DWORD PTR [edi+0x71308d66],eax
  41254a:	fwait
  41254b:	jle    0x4124f1
  41254d:	dec    ecx
  41254e:	dec    esp
  41254f:	out    dx,eax
  412550:	xchg   DWORD PTR [ebp+0x25c0a1b2],edx
  412556:	inc    edi
  412557:	pop    edi
  412558:	inc    ecx
  412559:	dec    esp
  41255a:	push   0xb2f4d45
  41255f:	mov    ch,0x1b
  412561:	lahf   
  412562:	cmp    edi,eax
  412564:	mov    ds,WORD PTR [ecx-0xf34d65d]
  41256a:	jmp    0xcff30cb6
  41256f:	inc    esp
  412570:	jmp    DWORD PTR [esp+ecx*1+0x55]
  412574:	aam    0x25
  412576:	sub    esp,DWORD PTR [eax+0x4e]
  412579:	or     eax,0xd59b83e7
  41257e:	push   edi
  41257f:	mov    bl,0xe0
  412581:	mov    es,ebx
  412583:	js     0x41255d
  412585:	inc    ecx
  412586:	out    0x27,al
  412588:	rol    dl,0xd9
  41258b:	hlt    
  41258c:	retf   0xe4e0
  41258f:	aaa    
  412590:	ret    0xc024
  412593:	nop
  412594:	es jnp 0x4125cb
  412597:	dec    eax
  412598:	inc    esi
  412599:	mov    ds:0x6a6ed2d4,eax
  41259e:	inc    esi
  41259f:	adc    DWORD PTR [edx-0x46],ebp
  4125a2:	and    DWORD PTR [esi+0x25],esi
  4125a5:	xchg   edi,eax
  4125a6:	mov    bl,0x60
  4125a8:	dec    edi
  4125a9:	not    BYTE PTR [edx-0x4801c6a3]
  4125af:	fmul   st(3),st
  4125b1:	pop    ecx
  4125b2:	and    al,0x82
  4125b4:	push   esp
  4125b5:	outs   dx,DWORD PTR ds:[esi]
  4125b6:	mov    esi,0x9b5b64b0
  4125bb:	fisubr WORD PTR [esi]
  4125bd:	out    dx,al
  4125be:	cmc    
  4125bf:	out    0x8,al
  4125c1:	jmp    0x4125ff
  4125c3:	iret   
  4125c4:	mov    ah,0x40
  4125c6:	outs   dx,BYTE PTR ds:[esi]
  4125c7:	or     BYTE PTR [ebp-0x16],bl
  4125ca:	mov    ebx,edi
  4125cc:	push   esi
  4125cd:	xor    DWORD PTR [eax+ebp*1-0xb],0xf846a2b8
  4125d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125d6:	pop    es
  4125d7:	daa    
  4125d8:	add    DWORD PTR [edi+eiz*8+0x46],0x4640d91c
  4125e0:	jo     0x4125fd
  4125e2:	jbe    0x41265a
  4125e4:	push   edx
  4125e5:	and    al,0x7f
  4125e7:	pop    edi
  4125e8:	or     al,0x62
  4125ea:	iret   
  4125eb:	dec    esi
  4125ec:	push   esp
  4125ed:	mov    al,0x91
  4125ef:	sub    ecx,ecx
  4125f1:	cmp    BYTE PTR [ebx+0x0],cl
  4125f4:	sti    
  4125f5:	(bad)  
  4125f6:	cdq    
  4125f7:	pop    ds
  4125f8:	push   0xd002e2df
  4125fd:	pop    es
  4125fe:	adc    ebx,DWORD PTR [ecx-0x7a]
  412601:	(bad)  
  412602:	out    0x1f,eax
  412604:	sti    
  412605:	pushf  
  412606:	cmp    edi,DWORD PTR [ecx+0x2a]
  412609:	daa    
  41260a:	dec    ebp
  41260b:	lahf   
  41260c:	xchg   edi,eax
  41260d:	sub    DWORD PTR [eax+0x243b008],ebx
  412613:	stos   BYTE PTR es:[edi],al
  412614:	xchg   ecx,eax
  412615:	lods   eax,DWORD PTR ds:[esi]
  412616:	ret    0xd5fe
  412619:	xor    al,cl
  41261b:	jmp    0x412642
  41261d:	jne    0x4125da
  41261f:	ror    BYTE PTR [esi+0x27],cl
  412622:	sbb    DWORD PTR [ebp-0x67b9b361],edx
  412628:	jne    0x4125df
  41262a:	retf   0xc4b9
  41262d:	int    0x66
  41262f:	retf   0x1258
  412632:	cld    
  412633:	inc    ebx
  412634:	aas    
  412635:	sub    ebx,DWORD PTR [eax+edx*1-0x76]
  412639:	inc    edi
  41263a:	pop    ebp
  41263b:	dec    edi
  41263c:	push   gs
  41263e:	ss in  eax,0x4e
  412641:	(bad)
  412644:	cmp    al,0xe0
  412646:	inc    ebx
  412647:	pop    esi
  412648:	mov    esp,0x7ec3bc52
  41264d:	or     eax,0xc5d1e975
  412652:	jmp    0xe4fd98b9
  412657:	sub    ebx,esi
  412659:	mov    cl,0x5c
  41265b:	sub    al,BYTE PTR [ecx-0x74]
  41265e:	and    DWORD PTR [ebx-0x319af091],eax
  412664:	add    BYTE PTR [eax+edi*4-0x6f7b6a46],ch
  41266b:	wrmsr  
  41266d:	out    0x8d,eax
  41266f:	jnp    0x412672
  412671:	inc    esi
  412672:	mov    ebx,0xf8da746d
  412677:	(bad)  
  412678:	(bad)  
  412679:	mov    al,0x26
  41267b:	xchg   edi,eax
  41267c:	pop    esi
  41267d:	and    eax,0xc31f4e65
  412682:	cmp    DWORD PTR [ebx*1+0x276f0aba],esi
  412689:	sbb    eax,0xdf6c4689
  41268f:	dec    esp
  412690:	sbb    ebp,esp
  412692:	leave  
  412693:	dec    ebx
  412694:	or     al,BYTE PTR [eax+0xfc8b81c]
  41269a:	cwde   
  41269b:	test   al,0x14
  41269d:	and    DWORD PTR [esp+ebx*8-0x2eb6e71d],esi
  4126a4:	lods   al,BYTE PTR ds:[esi]
  4126a5:	push   esp
  4126a6:	cmp    DWORD PTR [esi-0xe39bcf],esp
  4126ac:	aas    
  4126ad:	push   ss
  4126ae:	sbb    BYTE PTR [esi-0x67],dh
  4126b1:	and    BYTE PTR [ecx+0x43ae55ce],al
  4126b7:	in     eax,0xb
  4126b9:	mov    cl,0x67
  4126bb:	mov    esp,0x86c8911b
  4126c0:	mov    ds:0x922b9915,eax
  4126c5:	sub    eax,0x71a6073
  4126ca:	and    eax,0xf48a0528
  4126cf:	repnz sub cl,BYTE PTR [edi+0xb1fefaf]
  4126d6:	sub    al,0x35
  4126d8:	sbb    DWORD PTR [ebp+0x78f3666f],0xc82f4ad8
  4126e2:	push   eax
  4126e3:	add    BYTE PTR [ecx],al
  4126e5:	js     0x412709
  4126e7:	scas   eax,DWORD PTR es:[edi]
  4126e8:	ret    
  4126e9:	data16 (bad) 
  4126ec:	scas   eax,DWORD PTR es:[edi]
  4126ed:	or     ebp,DWORD PTR [edi+edx*2-0x65058332]
  4126f4:	int3   
  4126f5:	and    eax,0x55daa93a
  4126fa:	dec    ebx
  4126fb:	in     eax,dx
  4126fc:	sbb    BYTE PTR [ecx],cl
  4126fe:	cmp    ecx,ecx
  412700:	pop    ebp
  412701:	loope  0x412751
  412703:	rol    BYTE PTR [eax-0x47],cl
  412706:	sbb    ebp,eax
  412708:	(bad)  
  412709:	xor    cl,BYTE PTR [ebp+0x6b2067e4]
  41270f:	jg     0x412761
  412711:	(bad)  
  412713:	pop    edx
  412714:	sub    eax,0x221f80ed
  412719:	mov    edx,0xc9f2067b
  41271e:	enter  0xee85,0x59
  412722:	shl    DWORD PTR [edi-0x2a4b1aac],1
  412728:	call   0x1bf8:0xd9cf465f
  41272f:	aas    
  412730:	push   ebp
  412731:	add    ebx,DWORD PTR [ecx-0x6d2637c9]
  412737:	or     ah,BYTE PTR ds:0x20ac252
  41273d:	and    dh,ch
  41273f:	mov    dl,0xff
  412741:	add    eax,0xbc11ebda
  412746:	add    DWORD PTR [ebp+0x9a23764],0xffffffde
  41274d:	adc    al,0x60
  41274f:	out    0xad,eax
  412751:	ret    
  412752:	sub    ebx,DWORD PTR [esi]
  412754:	(bad)  
  412755:	sar    DWORD PTR [edx+edx*4],cl
  412758:	not    BYTE PTR [ebx+0x34]
  41275b:	int    0x9e
  41275d:	xor    al,0x53
  41275f:	or     al,BYTE PTR ds:0x166ae826
  412765:	sub    esp,DWORD PTR [edx]
  412767:	xor    DWORD PTR [esi-0x1fe8f49f],eax
  41276d:	adc    ebp,eax
  41276f:	(bad)  
  412770:	outs   dx,BYTE PTR ds:[esi]
  412771:	add    ebp,ebx
  412773:	arpl   si,cx
  412775:	aam    0x83
  412777:	adc    eax,0x3bae5840
  41277c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41277d:	imul   ebp,DWORD PTR [edi-0x7355f799],0xffffffdc
  412784:	dec    esi
  412785:	add    esi,DWORD PTR [esp+ebx*1-0x3f0d2895]
  41278c:	inc    ebp
  41278d:	sbb    esi,DWORD PTR [edx+eiz*8]
  412790:	stos   DWORD PTR es:[edi],eax
  412791:	mov    cl,0xee
  412793:	cmp    al,cl
  412795:	mov    ebx,DWORD PTR [ebx-0x5b62a41e]
  41279b:	sub    dl,BYTE PTR [ecx-0x51]
  41279e:	call   0xf3b:0x2828fe7a
  4127a5:	ins    DWORD PTR es:[edi],dx
  4127a6:	adc    bl,BYTE PTR [edi+edi*2+0x26]
  4127aa:	add    BYTE PTR [edi],dh
  4127ac:	adc    DWORD PTR [ebx],esi
  4127ae:	mov    ds:0x3bffeb2f,eax
  4127b3:	sub    eax,0x6696f890
  4127b8:	inc    ecx
  4127b9:	sub    dl,BYTE PTR [edi]
  4127bb:	xchg   ebx,eax
  4127bc:	fld    TBYTE PTR [ecx-0x1d]
  4127bf:	push   ss
  4127c0:	cmp    al,0x19
  4127c2:	call   0x36019f68
  4127c7:	pop    eax
  4127c8:	ins    BYTE PTR es:[edi],dx
  4127c9:	ss mov ch,0x58
  4127cc:	iret   
  4127cd:	retf   0xea93
  4127d0:	xor    al,0xa6
  4127d2:	pop    eax
  4127d3:	sbb    eax,0x94d6c758
  4127d8:	dec    edi
  4127d9:	sub    DWORD PTR [ebx],0xffffffbf
  4127dc:	std    
  4127dd:	and    al,0x74
  4127df:	loope  0x41277c
  4127e1:	or     DWORD PTR [esp+ebp*2],ebp
  4127e4:	sar    ebp,0x2b
  4127e7:	test   ecx,eax
  4127e9:	push   cs
  4127ea:	add    ch,BYTE PTR [eax]
  4127ec:	xchg   edx,eax
  4127ed:	int3   
  4127ee:	inc    esi
  4127ef:	repz push ebp
  4127f1:	sbb    al,0x60
  4127f3:	pop    ebx
  4127f4:	clc    
  4127f5:	shl    BYTE PTR [edx-0x7b5a4355],1
  4127fb:	dec    ebp
  4127fc:	stos   DWORD PTR es:[edi],eax
  4127fd:	mov    ebx,0x1c736302
  412802:	add    al,0x0
  412804:	jl     0x4127b0
  412806:	aad    0xc4
  412808:	imul   ebp,DWORD PTR [ebp+0x32fd500b],0x38a5010d
  412812:	icebp  
  412813:	in     eax,dx
  412814:	aam    0x5b
  412816:	(bad)  
  412817:	xor    ecx,esi
  412819:	aaa    
  41281a:	pop    es
  41281b:	inc    ebx
  41281c:	in     eax,dx
  41281d:	jno    0x4127b5
  41281f:	adc    eax,0xe9fa8201
  412824:	repz out 0xf5,eax
  412827:	fsubrp st(0),st
  412829:	dec    ebp
  41282a:	out    dx,eax
  41282b:	mov    ah,0xcd
  41282d:	cld    
  41282e:	int    0x1b
  412830:	cwde   
  412831:	gs hlt 
  412833:	adc    eax,0xbc93371d
  412838:	loopne 0x4127d8
  41283a:	lahf   
  41283b:	call   DWORD PTR [ebx]
  41283d:	aas    
  41283e:	xlat   BYTE PTR ds:[ebx]
  41283f:	xor    esp,DWORD PTR [ecx+0x697a7bc0]
  412845:	aas    
  412846:	mov    WORD PTR [esi],?
  412848:	ret    
  412849:	adc    cl,0xe0
  41284c:	dec    edx
  41284d:	rol    DWORD PTR [esi],1
  41284f:	push   edx
  412850:	mov    ds:0xe80fe080,eax
  412855:	mov    esi,0xc55297bc
  41285a:	dec    ebp
  41285b:	outs   dx,BYTE PTR ds:[esi]
  41285c:	pop    ebp
  41285d:	jl     0x4127f9
  41285f:	and    eax,0xa124dd6e
  412864:	jecxz  0x412825
  412866:	lods   al,BYTE PTR ds:[esi]
  412867:	cmp    al,0x2
  412869:	aad    0x30
  41286b:	loope  0x4128c1
  41286d:	mov    ecx,0x249e9732
  412872:	pop    esp
  412873:	out    dx,eax
  412874:	rcr    BYTE PTR [edx+0x2],cl
  412877:	pop    ss
  412878:	pop    es
  412879:	mov    ch,0x53
  41287b:	dec    edi
  41287c:	dec    esp
  41287d:	sbb    eax,0xeb5f184f
  412882:	pusha  
  412883:	imul   eax,DWORD PTR [ecx],0xcff21df6
  412889:	or     al,0x52
  41288b:	lahf   
  41288c:	inc    ebp
  41288d:	mov    al,ds:0x96b1fbd8
  412892:	fbld   TBYTE PTR [eax+0x36]
  412895:	retf   
  412896:	rcl    DWORD PTR [ecx],cl
  412898:	test   al,0x6d
  41289a:	mov    cs,eax
  41289c:	into   
  41289d:	cmp    BYTE PTR [eax+0xae6a502],bh
  4128a3:	into   
  4128a4:	pop    esp
  4128a5:	and    DWORD PTR [edi+edi*4+0x341fa0b2],edx
  4128ac:	(bad)  
  4128ad:	jp     0x4128af
  4128af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b1:	shl    BYTE PTR [edx+0x5d35e51f],0x4
  4128b8:	ins    BYTE PTR es:[edi],dx
  4128b9:	mov    eax,0xc2cc52e7
  4128be:	lock jbe 0x412893
  4128c1:	(bad)  
  4128c2:	stos   DWORD PTR es:[edi],eax
  4128c3:	dec    esi
  4128c4:	or     eax,0xa5dc3117
  4128c9:	and    eax,0x2e52040f
  4128ce:	aam    0x2a
  4128d0:	mov    DWORD PTR [eax-0x63f5c1],eax
  4128d6:	cmp    ch,BYTE PTR [edi-0xc0b7a00]
  4128dc:	ds in  eax,0xd3
  4128df:	sbb    esi,ecx
  4128e1:	jge    0x4128ca
  4128e3:	(bad)  
  4128e4:	cdq    
  4128e5:	ins    DWORD PTR es:[edi],dx
  4128e6:	popa   
  4128e7:	adc    DWORD PTR [esi],edx
  4128e9:	pop    es
  4128ea:	xor    esi,DWORD PTR [ebp-0x5927a12b]
  4128f0:	jo     0x41287e
  4128f2:	hlt    
  4128f3:	loop   0x412933
  4128f5:	sub    cl,BYTE PTR [edx-0x68]
  4128f8:	nop
  4128f9:	sub    BYTE PTR [edx],cl
  4128fb:	mov    eax,esp
  4128fd:	rcr    BYTE PTR [ecx],1
  4128ff:	mov    bh,0x1e
  412901:	hlt    
  412902:	outs   dx,BYTE PTR ds:[esi]
  412903:	fld    QWORD PTR [ebp+eiz*2-0x37259c91]
  41290a:	sbb    ebx,DWORD PTR [ebx]
  41290c:	icebp  
  41290d:	(bad)  
  41290f:	and    eax,DWORD PTR [esp+ecx*4+0x41a43e57]
  412916:	cmp    bh,cl
  412918:	rol    DWORD PTR [ecx-0x22],1
  41291b:	sub    DWORD PTR [ebp-0x77],0x12
  41291f:	std    
  412920:	mov    bh,0xcd
  412922:	jno    0x412903
  412924:	in     al,dx
  412925:	xlat   BYTE PTR ds:[ebx]
  412926:	(bad)  
  412927:	fdivrp st(0),st
  412929:	test   BYTE PTR [ebp-0x14],dh
  41292c:	jge    0x41291d
  41292e:	test   DWORD PTR [edi-0x34],ecx
  412931:	add    DWORD PTR [edx+edx*4+0x6b],ecx
  412935:	fwait
  412936:	scas   al,BYTE PTR es:[edi]
  412937:	daa    
  412938:	nop
  412939:	(bad)
  41293c:	scas   al,BYTE PTR es:[edi]
  41293d:	outs   dx,DWORD PTR ds:[esi]
  41293e:	dec    edi
  41293f:	xchg   ebp,eax
  412940:	mov    bl,0x50
  412942:	fcomp  QWORD PTR [ebx]
  412944:	mov    ah,0xaa
  412946:	(bad)  
  412947:	ret    
  412948:	jp     0x41299e
  41294a:	push   0x59
  41294c:	(bad)  
  41294d:	pushf  
  41294e:	jo     0x4129cc
  412950:	sbb    BYTE PTR [ebx],cl
  412952:	mov    DWORD PTR [ecx],ebp
  412954:	jb     0x4128fd
  412956:	and    dl,al
  412958:	jnp    0x4129d7
  41295a:	jbe    0x4129c0
  41295c:	daa    
  41295d:	dec    esp
  41295e:	push   esp
  41295f:	mov    ds:0xa67d1aba,al
  412964:	loope  0x4128ec
  412966:	mov    dh,0x71
  412968:	xchg   esp,eax
  412969:	test   eax,0xa5d0197c
  41296e:	jae    0x41299b
  412970:	pusha  
  412971:	leave  
  412972:	sbb    eax,0x4764a36b
  412977:	addr16 adc al,0x7e
  41297a:	mov    bh,0xeb
  41297c:	js     0x41294c
  41297e:	mov    edi,0x3b445821
  412983:	push   0x25ad608a
  412988:	mov    BYTE PTR [edx-0x61],ah
  41298b:	pop    ds
  41298c:	fisub  DWORD PTR [ebp-0x12]
  41298f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412990:	xor    al,BYTE PTR [edi-0x67fffd9c]
  412996:	es inc esp
  412998:	pop    ebx
  412999:	sbb    BYTE PTR [ebp+ebx*4+0x32],0x61
  41299e:	cmp    eax,0xb1daba1c
  4129a3:	or     esp,eax
  4129a5:	int3   
  4129a6:	nop
  4129a7:	sub    ebp,esi
  4129a9:	add    eax,DWORD PTR [esi-0x76]
  4129ac:	lahf   
  4129ad:	mov    esi,0x6e71f64b
  4129b2:	mov    esi,0x4c1a7ef3
  4129b7:	mov    dh,0x80
  4129b9:	pop    eax
  4129ba:	mov    BYTE PTR [eax-0x5317a8c0],cl
  4129c0:	das    
  4129c1:	in     eax,0x4a
  4129c3:	mov    ebx,0x9dc0a5ee
  4129c8:	jb     0x412a32
  4129ca:	stos   BYTE PTR es:[edi],al
  4129cb:	idiv   dl
  4129cd:	mov    DWORD PTR ds:0x715c9c11,ebx
  4129d3:	std    
  4129d4:	or     eax,0xa43263eb
  4129d9:	push   ebp
  4129da:	and    eax,0xa3c30a98
  4129df:	or     ebp,DWORD PTR [esi-0x3d]
  4129e2:	mov    esi,0x6454136
  4129e7:	adc    DWORD PTR [ebx+0x4a],ecx
  4129ea:	gs cmp al,0x22
  4129ed:	adc    BYTE PTR [eax-0x64],0xf6
  4129f1:	(bad)  
  4129f2:	sbb    eax,0x87b2238d
  4129f7:	xchg   ecx,eax
  4129f8:	ja     0x412996
  4129fa:	mov    ecx,0xa1782086
  4129ff:	imul   ebx,edx,0xdb7ffa77
  412a05:	pusha  
  412a06:	scas   al,BYTE PTR es:[edi]
  412a07:	stos   BYTE PTR es:[edi],al
  412a08:	cdq    
  412a09:	xchg   ebp,eax
  412a0a:	push   edx
  412a0b:	mov    ds:0x6490e2fb,al
  412a10:	sahf   
  412a11:	xchg   DWORD PTR [edx+0x58],ebx
  412a14:	jecxz  0x412a5b
  412a16:	sbb    eax,0xdb59ee41
  412a1b:	or     eax,DWORD PTR gs:[edi]
  412a1e:	or     BYTE PTR [eax],al
  412a20:	int    0xb1
  412a22:	pusha  
  412a23:	idiv   ecx
  412a25:	rol    DWORD PTR [eax+eiz*4+0x451d564d],cl
  412a2c:	adc    ah,BYTE PTR [eax-0x7e1e340]
  412a32:	dec    ebx
  412a33:	outs   dx,DWORD PTR ds:[esi]
  412a34:	cmp    DWORD PTR [esi-0xd4a8dd0],edx
  412a3a:	int3   
  412a3b:	cmp    dh,BYTE PTR [edx-0x56a9222c]
  412a41:	jl     0x412a26
  412a43:	stos   BYTE PTR es:[edi],al
  412a44:	cwde   
  412a45:	pop    ebp
  412a46:	retf   0xaff6
  412a49:	mov    esp,0x2e8c41ad
  412a4e:	push   esi
  412a4f:	loop   0x412a82
  412a51:	rol    DWORD PTR [edx+0x15],cl
  412a54:	pop    ebp
  412a55:	push   cs
  412a56:	jecxz  0x412ac1
  412a58:	je     0x412ad3
  412a5a:	out    dx,al
  412a5b:	out    dx,eax
  412a5c:	int    0x14
  412a5e:	and    eax,DWORD PTR [eax]
  412a60:	imul   edi,ecx,0x46
  412a63:	lods   eax,DWORD PTR ds:[esi]
  412a64:	aaa    
  412a65:	xchg   esi,eax
  412a66:	mov    gs,WORD PTR fs:[ebp-0x120f9953]
  412a6d:	imul   edx,DWORD PTR [ebx],0x82f4319d
  412a73:	pop    ebx
  412a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a75:	pop    edi
  412a76:	pop    es
  412a77:	les    ecx,FWORD PTR [ebx]
  412a79:	sar    BYTE PTR [ecx],cl
  412a7b:	mov    eax,0x12d06a69
  412a80:	sub    eax,0x1f78085b
  412a85:	ret    0x86e3
  412a88:	xchg   ebp,eax
  412a89:	mov    cl,0x24
  412a8b:	sar    BYTE PTR ds:0x1ef64da,1
  412a91:	fdivr  DWORD PTR [ebp-0x31]
  412a94:	inc    ecx
  412a95:	cdq    
  412a96:	mov    ecx,0xda82c73b
  412a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a9c:	add    DWORD PTR gs:[ebp+eax*1-0x601d4d45],esp
  412aa4:	sub    dl,BYTE PTR [ecx]
  412aa6:	mov    ebp,0xdf0580f7
  412aab:	pusha  
  412aac:	jg     0x412a7f
  412aae:	sti    
  412aaf:	add    edx,DWORD PTR [ebp+0x73]
  412ab2:	mov    es,WORD PTR [edx]
  412ab4:	xchg   ecx,eax
  412ab5:	mov    dh,0x6c
  412ab7:	shr    DWORD PTR [eax-0x23],0x2b
  412abb:	add    eax,DWORD PTR [ecx+0x68]
  412abe:	or     BYTE PTR [edi],0xb3
  412ac1:	lds    eax,FWORD PTR [esi-0xb22e16c]
  412ac7:	js     0x412a84
  412ac9:	push   esi
  412aca:	(bad)  
  412acc:	inc    edi
  412acd:	sbb    al,0x58
  412acf:	aam    0x70
  412ad1:	push   eax
  412ad2:	jmp    0xc63aa7fa
  412ad7:	inc    esp
  412ad8:	and    ecx,DWORD PTR [ebp-0x454916e9]
  412ade:	add    BYTE PTR [esi-0x74],dh
  412ae1:	jge    0x412a72
  412ae3:	push   ebp
  412ae4:	sbb    ecx,DWORD PTR [edx+eax*1-0x3ceeb365]
  412aeb:	iret   
  412aec:	bound  edx,QWORD PTR [ebx]
  412aee:	mov    ebx,0xef9df178
  412af3:	ret    
  412af4:	xchg   BYTE PTR [edi-0x238fe30e],bh
  412afa:	stos   BYTE PTR es:[edi],al
  412afb:	hlt    
  412afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412afd:	in     al,dx
  412afe:	mov    ds:0x7e701a99,eax
  412b03:	pop    edi
  412b04:	jnp    0x412b75
  412b06:	(bad)  
  412b07:	jge    0x412b7d
  412b09:	es pop ebx
  412b0b:	fcomp  QWORD PTR [eax+0x566521d1]
  412b11:	(bad)  
  412b12:	adc    eax,0xac66de40
  412b17:	pop    ebx
  412b18:	mov    ds:0xda570cb6,al
  412b1d:	adc    bh,ah
  412b1f:	out    dx,al
  412b20:	aaa    
  412b21:	ret    0x8446
  412b24:	jae    0x412b84
  412b26:	mov    bh,0xee
  412b28:	fadd   QWORD PTR ds:0x585a50c0
  412b2e:	sub    DWORD PTR [edi-0x5fed93d0],edx
  412b34:	ins    BYTE PTR es:[edi],dx
  412b35:	inc    ebx
  412b36:	jmp    0x57a1:0x61233314
  412b3d:	fs jne 0x412b98
  412b40:	mov    ds:0x512107f9,eax
  412b45:	inc    ebp
  412b46:	adc    BYTE PTR [edi],0xe6
  412b49:	push   ebp
  412b4a:	jns    0x412b44
  412b4c:	test   BYTE PTR [ecx-0x5a],ch
  412b4f:	inc    eax
  412b50:	nop
  412b51:	mov    ah,0xaa
  412b53:	dec    edi
  412b54:	in     al,0x51
  412b56:	repz add ecx,DWORD PTR [ebp-0x2bc07d06]
  412b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b5e:	hlt    
  412b5f:	aaa    
  412b60:	pop    es
  412b61:	out    0x6e,eax
  412b63:	(bad)  
  412b64:	rol    DWORD PTR [esi+edi*2+0x61],0x4b
  412b69:	push   ds
  412b6a:	mov    eax,ds:0x6ca0f37d
  412b6f:	xchg   edx,eax
  412b70:	arpl   WORD PTR [ebx-0x56],di
  412b73:	gs pop es
  412b75:	mov    bh,0x4b
  412b77:	mov    BYTE PTR [eax+edi*2+0x54],al
  412b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b7c:	pop    ebx
  412b7d:	loope  0x412be0
  412b7f:	lea    esp,[eax+0x5c]
  412b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b83:	mov    ?,WORD PTR [edx+0x1c897dbd]
  412b89:	lock cdq 
  412b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b8c:	scas   eax,DWORD PTR es:[edi]
  412b8d:	shr    DWORD PTR [ebx-0x4baa366],cl
  412b93:	jle    0x412bf4
  412b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b96:	add    dh,BYTE PTR [ebp*2+0x5359a723]
  412b9d:	push   edi
  412b9e:	(bad)  
  412ba0:	in     al,0x9c
  412ba2:	sbb    al,0x22
  412ba4:	icebp  
  412ba5:	sahf   
  412ba6:	in     al,dx
  412ba7:	lahf   
  412ba8:	cmp    cl,cl
  412baa:	inc    esp
  412bab:	outs   dx,DWORD PTR cs:[esi]
  412bad:	add    DWORD PTR [esi],esi
  412baf:	adc    dh,BYTE PTR [eax+0x44d29b12]
  412bb5:	mov    eax,ds:0x2f47367
  412bba:	sbb    al,0x28
  412bbc:	dec    DWORD PTR [eax+0x5f]
  412bbf:	in     al,dx
  412bc0:	mov    cl,0x31
  412bc2:	jo     0x412bff
  412bc4:	sbb    edx,DWORD PTR [edx-0x7da8e059]
  412bca:	repnz mov ebx,DWORD PTR [ebx+0x17]
  412bce:	mov    esi,0x9d96d85
  412bd3:	jnp    0x412bf9
  412bd5:	cdq    
  412bd6:	(bad)  [eax+0x8]
  412bd9:	in     al,0xc9
  412bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bdc:	or     ch,BYTE PTR [ecx+0x46]
  412bdf:	mov    ah,0x19
  412be1:	call   0xb0389ba
  412be6:	shl    DWORD PTR [ebx+0x67],0xac
  412bea:	in     al,0x66
  412bec:	imul   edx,DWORD PTR [edi+0x1bc1ad07],0x8088c89f
  412bf6:	push   esp
  412bf7:	sahf   
  412bf8:	sbb    bh,bl
  412bfa:	xchg   esi,eax
  412bfb:	sbb    dl,ch
  412bfd:	rcl    dh,0x96
  412c00:	sub    dl,BYTE PTR [ecx+0x1e]
  412c03:	sbb    al,0xfc
  412c05:	dec    ebx
  412c06:	mov    esp,0xa3dca95b
  412c0b:	test   DWORD PTR [ecx-0x3cdcb4e0],esi
  412c11:	mov    edx,0xf0fea2a9
  412c16:	ss mov cl,0x93
  412c19:	icebp  
  412c1a:	scas   eax,DWORD PTR es:[edi]
  412c1b:	ficomp DWORD PTR [eax-0x5]
  412c1e:	sub    bh,BYTE PTR [eax+ecx*8]
  412c21:	jecxz  0x412c5a
  412c23:	mov    bh,0x59
  412c25:	(bad)  
  412c26:	clc    
  412c27:	push   ss
  412c28:	les    eax,FWORD PTR [edx]
  412c2a:	shl    DWORD PTR ds:0x1630fcd8,0xe1
  412c31:	sub    ebp,edi
  412c33:	and    eax,0x906a38d0
  412c38:	data16 scas al,BYTE PTR es:[edi]
  412c3a:	fcmovnbe st,st(4)
  412c3c:	stc    
  412c3d:	sub    bh,BYTE PTR [edi+esi*1]
  412c40:	fist   WORD PTR [edi+0x1e]
  412c43:	mov    al,ds:0x340871e7
  412c48:	pop    ds
  412c49:	ficom  WORD PTR [esi]
  412c4b:	rol    BYTE PTR [ebp-0x45f96998],cl
  412c51:	retf   0x2084
  412c54:	mov    ss,WORD PTR [edi-0x7ee42ee0]
  412c5a:	mov    ecx,DWORD PTR [ecx+0x2d]
  412c5d:	test   eax,0xe10eaa90
  412c62:	ss out 0xd0,eax
  412c65:	jmp    0x808f:0x582ec415
  412c6c:	or     esp,DWORD PTR [ebx-0x15]
  412c6f:	jg     0x412c87
  412c71:	stos   DWORD PTR es:[edi],eax
  412c72:	inc    ecx
  412c73:	sbb    ecx,DWORD PTR [ecx+ecx*8+0x2e]
  412c77:	jmp    0x9f4aeec
  412c7c:	pop    ds
  412c7d:	pop    ss
  412c7e:	test   BYTE PTR [ebp-0x61],cl
  412c81:	daa    
  412c82:	mov    ch,0xce
  412c84:	les    ebp,FWORD PTR [edx]
  412c86:	mov    al,ah
  412c88:	popf   
  412c89:	(bad)  
  412c8a:	fisttp DWORD PTR [esi]
  412c8c:	mov    ebx,DWORD PTR [ebp+0x6e]
  412c8f:	push   ebp
  412c90:	ja     0x412cbd
  412c92:	mov    edi,0x3bdf50f3
  412c97:	outs   dx,DWORD PTR ds:[esi]
  412c98:	and    esp,DWORD PTR [eax-0x49]
  412c9b:	mov    dh,bl
  412c9d:	imul   ebp,DWORD PTR [eax],0x35aa8783
  412ca3:	push   0x7168c3cd
  412ca8:	and    DWORD PTR [ecx+0x46123f4f],edx
  412cae:	sti    
  412caf:	shl    BYTE PTR [eax-0x29],1
  412cb2:	jnp    0x412ccf
  412cb4:	or     eax,0xef184c9e
  412cb9:	adc    eax,0xf8dda5ff
  412cbe:	setge  BYTE PTR [edi]
  412cc1:	jge    0x412c76
  412cc3:	mov    bl,0xf5
  412cc5:	pop    ecx
  412cc6:	sti    
  412cc7:	push   ss
  412cc8:	loope  0x412c4e
  412cca:	repz call 0xd9d5:0x3436abca
  412cd2:	pop    ss
  412cd3:	jns    0x412ce7
  412cd5:	loop   0x412cd5
  412cd7:	pop    es
  412cd8:	push   edi
  412cd9:	inc    edx
  412cda:	jbe    0x412c78
  412cdc:	pushf  
  412cdd:	cmp    dh,0xf
  412ce0:	jne    0x412ce2
  412ce2:	scas   al,BYTE PTR es:[edi]
  412ce3:	jl     0x412cf5
  412ce5:	pop    edi
  412ce6:	ds daa 
  412ce8:	imul   BYTE PTR [edx*1+0x96eb565]
  412cef:	aam    0xa1
  412cf1:	int    0x32
  412cf3:	sahf   
  412cf4:	sbb    eax,0xeaac1622
  412cf9:	mov    esi,0x4b50e644
  412cfe:	inc    eax
  412cff:	aam    0x11
  412d01:	dec    esi
  412d02:	jmp    0x412d5f
  412d04:	jecxz  0x412cd0
  412d06:	cmc    
  412d07:	loope  0x412cc6
  412d09:	sahf   
  412d0a:	inc    ebp
  412d0b:	out    dx,al
  412d0c:	std    
  412d0d:	fdiv   st(6),st
  412d0f:	mov    eax,0x7159e93c
  412d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d15:	xor    ch,BYTE PTR ds:0x2bce7dfb
  412d1b:	enter  0x67aa,0x2d
  412d1f:	mov    al,ds:0x4a4dc74e
  412d24:	lods   al,BYTE PTR ds:[esi]
  412d25:	mov    dl,0x28
  412d27:	stc    
  412d28:	pushf  
  412d29:	ret    
  412d2a:	adc    ch,BYTE PTR [eax-0x1]
  412d2d:	out    dx,eax
  412d2e:	data16 (bad)
  412d31:	push   ecx
  412d32:	mov    dh,bh
  412d34:	sbb    al,0x8b
  412d36:	stos   DWORD PTR es:[edi],eax
  412d37:	pushf  
  412d38:	push   ecx
  412d39:	xor    al,0xca
  412d3b:	mov    ebx,DWORD PTR [ecx-0x67464921]
  412d41:	lea    esi,[esi]
  412d43:	jnp    0x412ce0
  412d45:	jecxz  0x412d00
  412d47:	leave  
  412d48:	pop    ecx
  412d49:	and    BYTE PTR [edi-0x1f],cl
  412d4c:	adc    al,BYTE PTR [edi+esi*8]
  412d4f:	mov    ebx,ss
  412d51:	stc    
  412d52:	push   edx
  412d53:	sub    DWORD PTR [edx-0x2],edi
  412d56:	lock sub al,0xcf
  412d59:	xor    dl,BYTE PTR [edx-0x70a0d70]
  412d5f:	shl    BYTE PTR [edi+ecx*4+0x14],cl
  412d63:	jnp    0x412de1
  412d65:	and    BYTE PTR [ecx+edi*4+0x52dbd567],ah
  412d6c:	ret    0xbff1
  412d6f:	data16 test BYTE PTR [esi+0x132b41af],0x11
  412d77:	ror    BYTE PTR [esi],1
  412d79:	dec    esp
  412d7a:	jle    0x412d3b
  412d7c:	push   ss
  412d7d:	sub    ebx,DWORD PTR [edx+edi*1+0x11254342]
  412d84:	ret    0x625d
  412d87:	jns    0x412d48
  412d89:	pop    ss
  412d8a:	jo     0x412dd9
  412d8c:	push   ds
  412d8d:	test   DWORD PTR [edx+0xc426ca0],eax
  412d93:	sbb    al,0xd6
  412d95:	das    
  412d96:	dec    edx
  412d97:	loop   0x412d6d
  412d99:	(bad)  
  412d9a:	shl    BYTE PTR [esi+edi*1+0x56d6d7cd],1
  412da1:	or     BYTE PTR [eax+0x63],ch
  412da4:	inc    edx
  412da5:	ret    0x23ae
  412da8:	fld    DWORD PTR [esi+0x58f8989a]
  412dae:	jl     0x412d5f
  412db0:	sbb    BYTE PTR [edi+0x10782116],0x6f
  412db7:	jl     0x412da7
  412db9:	push   cs
  412dba:	cld    
  412dbb:	rcr    BYTE PTR ds:0x9e6c0ee1,0x90
  412dc2:	mov    dl,0x7e
  412dc4:	mov    cs,WORD PTR [esi+0x2c]
  412dc7:	pop    ecx
  412dc8:	dec    esp
  412dc9:	(bad)  
  412dcb:	adc    al,0xbf
  412dcd:	mov    ds:0xfc06a62a,al
  412dd2:	scas   eax,DWORD PTR es:[edi]
  412dd3:	sbb    dl,BYTE PTR [ecx-0x66]
  412dd6:	or     edi,DWORD PTR [edx-0x2e]
  412dd9:	push   ecx
  412dda:	cmp    edi,DWORD PTR ds:0x371a9d90
  412de0:	bound  eax,QWORD PTR [edx+0x65]
  412de3:	jmp    0x412e0e
  412de5:	popf   
  412de6:	inc    ebx
  412de7:	mov    gs,WORD PTR [esi]
  412de9:	sub    dl,BYTE PTR [ebx+0x46]
  412dec:	inc    ecx
  412ded:	ficomp WORD PTR [esi+0x2f]
  412df0:	test   eax,0x7bdecf8e
  412df5:	or     cl,ch
  412df7:	inc    esp
  412df8:	pmullw mm3,QWORD PTR [ebx+esi*1]
  412dfc:	mov    ah,0x92
  412dfe:	dec    edx
  412dff:	mov    al,ds:0x3605d481
  412e04:	jo     0x412e65
  412e06:	or     esi,DWORD PTR [ebx]
  412e08:	inc    esi
  412e09:	mov    edx,0xe841e91e
  412e0e:	mov    esi,0x36e6a353
  412e13:	ret    
  412e14:	push   cs
  412e15:	jb     0x412deb
  412e17:	fimul  WORD PTR gs:[edx-0x67de9f3a]
  412e1e:	xor    eax,0xa3db2bbf
  412e23:	rcr    DWORD PTR [edi],cl
  412e25:	jae    0x412e72
  412e27:	jns    0x412e0c
  412e29:	pushf  
  412e2a:	sbb    dh,BYTE PTR [edx]
  412e2c:	push   ds
  412e2d:	aas    
  412e2e:	jnp    0x412dd6
  412e30:	imul   eax,DWORD PTR [edi-0x5dec0701],0x1f
  412e37:	adc    dh,BYTE PTR [esi]
  412e39:	mov    ebp,0xab1a692f
  412e3e:	push   ebx
  412e3f:	cld    
  412e40:	sub    ecx,edi
  412e42:	(bad)  
  412e43:	sbb    eax,0x9d8b1af9
  412e48:	iret   
  412e49:	cs mov al,0x49
  412e4c:	mov    ebx,0xb3bf9d4e
  412e51:	rol    BYTE PTR [ebx+0x44d0af9c],1
  412e57:	ja     0x412e0e
  412e59:	das    
  412e5a:	(bad)  
  412e5b:	xchg   edi,eax
  412e5c:	int3   
  412e5d:	jo     0x412e68
  412e5f:	mov    WORD PTR [eax-0x70],cs
  412e62:	cmc    
  412e63:	xchg   edx,eax
  412e64:	loope  0x412e97
  412e66:	jg     0x412e25
  412e68:	add    eax,0x62e1ea9d
  412e6d:	ins    DWORD PTR es:[edi],dx
  412e6e:	das    
  412e6f:	dec    ecx
  412e70:	fild   WORD PTR ds:[ebx+ebx*2-0x6e]
  412e75:	call   0xa739f24a
  412e7a:	xlat   BYTE PTR ds:[ebx]
  412e7b:	(bad)  
  412e7c:	popf   
  412e7d:	mov    WORD PTR [eax-0x244ded1a],?
  412e83:	(bad)  
  412e84:	sub    eax,0x2a689ee5
  412e89:	xor    BYTE PTR [eax-0x11],dl
  412e8c:	mov    dh,0xfa
  412e8e:	sbb    eax,0x6696f6d3
  412e93:	int3   
  412e94:	sub    eax,0x4e3be35d
  412e99:	jmp    0x412ef0
  412e9b:	sbb    DWORD PTR [edi-0x54],ebp
  412e9e:	xor    bl,BYTE PTR ds:0xaf389f46
  412ea4:	pop    ecx
  412ea5:	cmp    BYTE PTR [esi],ch
  412ea7:	push   edi
  412ea8:	cld    
  412ea9:	dec    ebp
  412eaa:	xchg   edx,eax
  412eab:	pop    ss
  412eac:	inc    ebp
  412ead:	push   0xfffffff1
  412eaf:	xor    eax,0xd4b1b603
  412eb4:	xchg   ecx,eax
  412eb5:	push   es
  412eb6:	jo     0x412e7b
  412eb8:	xor    dl,BYTE PTR [ecx-0x17]
  412ebb:	sub    esp,edi
  412ebd:	mov    esi,0xbb98e743
  412ec2:	jae    0x412f0f
  412ec4:	fist   DWORD PTR [edx+0x50]
  412ec7:	aam    0xd6
  412ec9:	and    BYTE PTR [ecx-0x1a],0xac
  412ecd:	xor    ecx,ebx
  412ecf:	loopne 0x412e54
  412ed1:	cmp    eax,0x53635a4c
  412ed6:	sub    dl,BYTE PTR [edx]
  412ed8:	sub    DWORD PTR [ebx-0x5b91b2e4],edi
  412ede:	sub    BYTE PTR [ecx-0x56],bh
  412ee1:	and    DWORD PTR [eax+0x2df7fcd6],esi
  412ee7:	and    edx,DWORD PTR [ebp-0x1e]
  412eea:	jl     0x412ec1
  412eec:	mov    al,BYTE PTR [ebp-0x16]
  412eef:	jg     0x412e9e
  412ef1:	or     edi,ebx
  412ef3:	xchg   esp,eax
  412ef4:	test   BYTE PTR [edi-0x28ffe64b],dh
  412efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412efb:	lahf   
  412efc:	xor    DWORD PTR [ebx],0xaa890f84
  412f02:	pop    ebx
  412f03:	pop    ss
  412f04:	(bad)  
  412f06:	jmp    0x412ec4
  412f08:	dec    esi
  412f09:	repnz xor ecx,DWORD PTR [edx+esi*8+0x13]
  412f0e:	mov    ah,0x85
  412f10:	loop   0x412ea0
  412f12:	lds    ebx,FWORD PTR [edx+0x67]
  412f15:	fdivr  DWORD PTR [ebp-0xa]
  412f18:	adc    BYTE PTR [edx-0x10],bh
  412f1b:	outs   dx,BYTE PTR ds:[esi]
  412f1c:	lods   al,BYTE PTR ds:[esi]
  412f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f1e:	pop    es
  412f1f:	xor    al,0x8c
  412f21:	sbb    BYTE PTR [esi-0x1175bc73],al
  412f27:	in     eax,dx
  412f28:	shr    BYTE PTR [esi],1
  412f2a:	push   ebp
  412f2b:	data16 mov dh,cl
  412f2e:	pop    DWORD PTR [eax-0x4531f664]
  412f34:	sub    al,0x91
  412f36:	test   BYTE PTR [ecx+0xb],dh
  412f39:	ja     0x412f80
  412f3b:	pusha  
  412f3c:	mov    WORD PTR [edx+0x12101008],gs
  412f42:	jp     0x412f55
  412f44:	jnp    0x412ef4
  412f46:	aas    
  412f47:	dec    ebp
  412f48:	call   0x8b0c:0xccfbf679
  412f4f:	cmp    BYTE PTR [esi+0x3affba84],dl
  412f55:	cmp    ecx,esp
  412f57:	pusha  
  412f58:	cli    
  412f59:	aas    
  412f5a:	or     DWORD PTR [ebx-0x541c725],ecx
  412f60:	gs cld 
  412f62:	jle    0x412f49
  412f64:	cmp    ah,BYTE PTR [esi]
  412f66:	sub    BYTE PTR [esi+0x43508f7b],cl
  412f6c:	gs mov ah,0x14
  412f6f:	lods   eax,DWORD PTR ds:[esi]
  412f70:	and    BYTE PTR [eax-0x7b8bd8],0x73
  412f77:	sbb    eax,0x71d8af67
  412f7c:	(bad)  
  412f7e:	or     DWORD PTR [edi+ebp*2],edx
  412f81:	imul   esi,DWORD PTR [eax+0x37cca234],0x9
  412f88:	xor    al,0xea
  412f8a:	pop    eax
  412f8b:	lock sbb al,0xd1
  412f8e:	xor    al,BYTE PTR [eax+0x47]
  412f91:	and    al,0x36
  412f93:	mov    esp,0xff09cc41
  412f98:	xchg   ecx,eax
  412f99:	fs xchg ecx,eax
  412f9b:	popf   
  412f9c:	mov    ebp,DWORD PTR [eax+0x9]
  412f9f:	and    al,0xb0
  412fa1:	mov    bl,0x25
  412fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fa4:	ja     0x412f3e
  412fa6:	mov    eax,0x5b3c3284
  412fab:	and    bl,BYTE PTR [ebx]
  412fad:	jns    0x413001
  412faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fb0:	cmc    
  412fb1:	mov    ?,WORD PTR [edi]
  412fb3:	jne    0x412fde
  412fb5:	test   ecx,ebx
  412fb7:	lods   eax,DWORD PTR ds:[esi]
  412fb8:	sahf   
  412fb9:	(bad)
  412fbd:	sbb    al,0x2
  412fbf:	jae    0x412f96
  412fc1:	xchg   BYTE PTR [edi+0x46183b84],bh
  412fc7:	inc    esp
  412fc8:	in     eax,0x3a
  412fca:	lods   eax,DWORD PTR fs:[esi]
  412fcc:	add    BYTE PTR [ebx-0x1880a25f],ah
  412fd2:	xor    BYTE PTR [eax+ecx*2],ch
  412fd5:	lock addr16 xor eax,0xdb894529
  412fdc:	mov    ds:0x6e30dcf6,eax
  412fe1:	pop    ds
  412fe2:	in     eax,dx
  412fe3:	outs   dx,DWORD PTR ds:[esi]
  412fe4:	add    eax,0x44c601e2
  412fe9:	mov    ebx,0xdeadedae
  412fee:	sti    
  412fef:	sahf   
  412ff0:	jg     0x412fa5
  412ff2:	les    eax,FWORD PTR ds:0x177272ab
  412ff8:	cmp    al,BYTE PTR [edi]
  412ffa:	test   eax,0x22619158
  412fff:	xor    DWORD PTR [edi+0x6bca0916],ebp
  413005:	call   0xfae87ac8
  41300a:	xchg   ebp,eax
  41300b:	and    cl,dl
  41300d:	or     al,0xe7
  41300f:	xchg   ebp,eax
  413010:	(bad)  
  413011:	pop    ecx
  413012:	call   0x31b3:0x1ddc48fb
  413019:	out    0x7,eax
  41301b:	pop    ds
  41301c:	in     al,0x9d
  41301e:	jl     0x41306c
  413020:	push   0xffffff8b
  413022:	lea    ecx,[eax-0x2cdca6c7]
  413028:	int    0x64
  41302a:	fst    st(1)
  41302c:	(bad)  
  41302d:	ficom  DWORD PTR [eax-0x61]
  413030:	sbb    eax,0x54652740
  413035:	jecxz  0x4130a7
  413037:	mov    dl,0x3f
  413039:	nop
  41303a:	jb     0x413044
  41303c:	mov    ds:0x298f4c60,eax
  413041:	into   
  413042:	cmp    BYTE PTR [ecx+edx*4],dl
  413045:	mov    esi,0x218d9500
  41304a:	and    eax,0xf6bab23b
  41304f:	or     DWORD PTR [esp+eax*2],0x94b6dab9
  413056:	jbe    0x4130a1
  413058:	xlat   BYTE PTR ds:[ebx]
  413059:	arpl   di,bx
  41305b:	pop    esi
  41305c:	sbb    eax,0xca9bef4
  413061:	mov    ebp,0x5578330a
  413066:	outs   dx,BYTE PTR ds:[esi]
  413067:	sub    eax,ecx
  413069:	inc    DWORD PTR [ebx-0x17]
  41306c:	dec    edx
  41306d:	mov    bh,0x6f
  41306f:	pop    esp
  413070:	inc    esi
  413071:	xor    DWORD PTR [eax+ebx*8-0x79d1ef01],edi
  413078:	pop    eax
  413079:	inc    esi
  41307a:	stos   BYTE PTR es:[edi],al
  41307b:	sub    al,0x2f
  41307d:	js     0x4130c7
  41307f:	inc    eax
  413080:	jmp    FWORD PTR ds:0x1236ab5d
  413086:	adc    edx,DWORD PTR [esi]
  413088:	push   ss
  413089:	retf   0xb083
  41308c:	push   es
  41308d:	mov    al,0x52
  41308f:	xchg   BYTE PTR [esi],al
  413091:	cli    
  413092:	in     al,0x3d
  413094:	lods   al,BYTE PTR ds:[esi]
  413095:	and    BYTE PTR [esi+0x2374c560],ah
  41309b:	cdq    
  41309c:	cli    
  41309d:	dec    edi
  41309e:	mov    al,ds:0xed4dad15
  4130a3:	sub    ah,bl
  4130a5:	sbb    ebp,DWORD PTR [esi+0x4d]
  4130a8:	(bad)  
  4130a9:	and    eax,0x3718ed00
  4130ae:	fiadd  DWORD PTR [edx-0x4c]
  4130b1:	jae    0x4130fb
  4130b3:	arpl   WORD PTR [edi-0x361fedcb],di
  4130b9:	fucomp st(4)
  4130bb:	popf   
  4130bc:	(bad)  
  4130c0:	pop    edx
  4130c1:	push   ebp
  4130c2:	xchg   edx,esp
  4130c4:	repz cmc 
  4130c6:	jbe    0x413053
  4130c8:	call   0xf53d:0x7fee
  4130ce:	(bad)  
  4130cf:	test   DWORD PTR [ecx+0x7d4db8f0],0x52f241eb
  4130d9:	xchg   BYTE PTR [esi-0x30],dl
  4130dc:	jg     0x413082
  4130de:	xor    BYTE PTR [ecx+0x5e63b154],0x20
  4130e5:	xor    eax,0x13c7b5f1
  4130ea:	lods   eax,DWORD PTR ds:[esi]
  4130eb:	or     eax,0xdd517edd
  4130f0:	or     ah,BYTE PTR [ecx]
  4130f2:	test   BYTE PTR [ebx+0x2e],al
  4130f5:	jle    0x4130bc
  4130f7:	ja     0x413168
  4130f9:	sbb    al,0x53
  4130fb:	jns    0x4130e8
  4130fd:	or     BYTE PTR [esi-0x386b57a6],cl
  413103:	loopne 0x413141
  413105:	mov    eax,0xd4cf2bea
  41310a:	es test dl,cl
  41310d:	push   esi
  41310e:	dec    eax
  41310f:	test   al,0xc8
  413111:	mov    ds,ebp
  413113:	repz popa 
  413115:	lock gs jbe 0x413127
  413119:	mov    ebp,0x28ed8bf9
  41311e:	in     al,dx
  41311f:	pop    ebx
  413120:	icebp  
  413121:	xchg   esi,eax
  413122:	ret    0x56c3
  413125:	sub    esp,ecx
  413127:	add    BYTE PTR [ecx*2+0x10668fae],ch
  41312e:	scas   eax,DWORD PTR es:[edi]
  41312f:	or     cl,BYTE PTR [ecx]
  413131:	inc    ebp
  413132:	sti    
  413133:	or     al,0xba
  413135:	sbb    eax,0xe72cb950
  41313a:	cmp    edx,DWORD PTR ds:0x2ed56b53
  413140:	out    0x2d,eax
  413142:	add    eax,0xa5b87d77
  413147:	dec    edi
  413148:	loopne 0x41312c
  41314a:	sbb    al,0x57
  41314c:	jge    0x4131bb
  41314e:	push   ecx
  41314f:	retf   
  413150:	push   ebx
  413151:	call   DWORD PTR [ecx]
  413153:	fwait
  413154:	inc    ecx
  413155:	xchg   ebx,eax
  413156:	mov    dh,0x1
  413158:	psubq  mm3,QWORD PTR [eax]
  41315b:	cmp    BYTE PTR [esi],ch
  41315d:	xchg   esi,eax
  41315e:	test   BYTE PTR [eax],al
  413160:	icebp  
  413161:	or     eax,0xf27bdb16
  413166:	sub    cl,BYTE PTR [eax-0x570d3dc7]
  41316c:	sbb    DWORD PTR [esi],ecx
  41316e:	xor    eax,0x60e1755e
  413173:	cmc    
  413174:	push   ds
  413175:	rcl    DWORD PTR [ebx-0x46dd79f7],1
  41317b:	and    BYTE PTR [eax-0x2252e753],bh
  413181:	repz sub edx,DWORD PTR [ebp-0x2a]
  413185:	sbb    DWORD PTR [esi+ebp*1-0x31],edx
  413189:	into   
  41318a:	xchg   ebx,eax
  41318b:	mov    ch,BYTE PTR [edx-0x1d]
  41318e:	por    mm1,QWORD PTR [eax+0x7df48805]
  413195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413196:	scas   eax,DWORD PTR es:[edi]
  413197:	xor    eax,0x84e813a2
  41319c:	or     esp,DWORD PTR [ebp+0x1a]
  41319f:	out    0xcb,al
  4131a1:	jge    0x413208
  4131a3:	mov    bl,0x1c
  4131a5:	jge    0x4131f1
  4131a7:	pop    ds
  4131a8:	aad    0x38
  4131aa:	cdq    
  4131ab:	jge    0x413201
  4131ad:	pop    eax
  4131ae:	iret   
  4131af:	xor    BYTE PTR [edx-0x61],bh
  4131b2:	test   al,0x62
  4131b4:	xlat   BYTE PTR ds:[ebx]
  4131b5:	add    DWORD PTR [ecx-0x52],ebx
  4131b8:	fcmovu st,st(2)
  4131ba:	lahf   
  4131bb:	lods   al,BYTE PTR ds:[esi]
  4131bc:	into   
  4131bd:	xchg   esp,eax
  4131bf:	sbb    bh,BYTE PTR [ebx]
  4131c1:	add    al,0x11
  4131c3:	xchg   ebx,eax
  4131c4:	or     eax,0xac80c66
  4131c9:	pop    ecx
  4131ca:	dec    eax
  4131cb:	repz fst DWORD PTR [edx+0x6de7898d]
  4131d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d3:	in     eax,dx
  4131d4:	lods   eax,DWORD PTR ds:[esi]
  4131d5:	aaa    
  4131d6:	mov    ecx,0xc0d41189
  4131db:	sbb    BYTE PTR [ecx-0x18],0x3b
  4131df:	and    eax,0x5a300178
  4131e4:	adc    eax,0xdf5100d1
  4131e9:	mov    edx,0xe029af67
  4131ee:	dec    esi
  4131ef:	add    DWORD PTR [eax],esp
  4131f1:	daa    
  4131f2:	imul   ecx,DWORD PTR [ebp+0x17151310],0x626af1e0
  4131fc:	sbb    DWORD PTR [edi-0x14],esi
  4131ff:	push   eax
  413200:	bound  ebx,QWORD PTR ds:0x3ab77c72
  413206:	push   esp
  413207:	(bad)  [eax]
  413209:	ror    BYTE PTR [eax+0x4d8d14bc],1
  41320f:	rcl    BYTE PTR [edi+0x10],1
  413212:	inc    esp
  413213:	mov    edx,DWORD PTR [edi]
  413215:	lea    esi,[esi]
  413217:	mov    ebp,0x1d49b2e0
  41321c:	inc    esi
  41321d:	(bad)  
  41321e:	jle    0x41325d
  413220:	cmp    ebx,ecx
  413222:	inc    ebp
  413223:	jns    0x41328a
  413225:	les    edi,FWORD PTR [esi-0x17]
  413228:	icebp  
  413229:	cmp    edi,DWORD PTR [ecx+0x3d]
  41322c:	push   edx
  41322d:	cmp    edx,DWORD PTR [eax]
  41322f:	and    BYTE PTR [ecx-0x24],dh
  413232:	loope  0x41325e
  413234:	or     eax,0x3afc0066
  413239:	mov    al,BYTE PTR [edx-0x50]
  41323c:	dec    eax
  41323d:	pop    esp
  41323e:	push   esi
  41323f:	and    eax,DWORD PTR [eax]
  413241:	mov    ch,0x78
  413243:	imul   ecx,DWORD PTR [eax+0x5e],0xb287f06
  41324a:	repz cs push es
  41324d:	std    
  41324e:	in     al,0xcb
  413250:	and    dl,BYTE PTR [edx]
  413252:	dec    ebx
  413253:	out    dx,al
  413254:	test   edx,ecx
  413256:	rcr    DWORD PTR [ecx],1
  413258:	out    dx,eax
  413259:	xchg   ebp,eax
  41325a:	addr16 xchg edx,eax
  41325c:	jne    0x413294
  41325e:	outs   dx,BYTE PTR ds:[esi]
  41325f:	mov    ebx,0x93ec1f36
  413264:	xor    al,0x80
  413266:	jl     0x413209
  413268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413269:	push   ss
  41326a:	push   cs
  41326b:	pop    eax
  41326c:	hlt    
  41326d:	call   0xfa01:0xa29d305a
  413274:	outs   dx,BYTE PTR ds:[esi]
  413275:	iret   
  413276:	bound  edx,QWORD PTR [eax]
  413278:	inc    esi
  413279:	xor    ebp,DWORD PTR [edx+0x28]
  41327c:	dec    eax
  41327d:	xor    bh,BYTE PTR [ebp-0x4755184d]
  413283:	enter  0xb04a,0x25
  413287:	stc    
  413288:	bound  ebp,QWORD PTR [ecx-0x6c]
  41328b:	sbb    ch,BYTE PTR [esi+0x6f]
  41328e:	pushf  
  41328f:	mov    ebp,0x95498b47
  413294:	xor    DWORD PTR [ebx],ebx
  413296:	adc    ecx,0xffffffaf
  413299:	and    ebp,DWORD PTR [ebp+eax*4+0x5d830e22]
  4132a0:	ret    0x336
  4132a3:	pop    ecx
  4132a4:	dec    esp
  4132a5:	add    edi,DWORD PTR [eax-0x40861221]
  4132ab:	sub    eax,0x29498929
  4132b0:	add    edi,DWORD PTR [edx-0x46]
  4132b3:	loopne 0x413263
  4132b5:	adc    dl,BYTE PTR [edi-0x28]
  4132b8:	push   ds
  4132b9:	imul   edi,DWORD PTR [ebp+0x792bad93],0x1283aa0
  4132c3:	sar    DWORD PTR [ecx+0x42],1
  4132c6:	lock outs dx,BYTE PTR ds:[esi]
  4132c8:	es icebp 
  4132ca:	shl    bl,1
  4132cc:	and    ah,al
  4132ce:	(bad)  
  4132cf:	test   BYTE PTR [eax+ebp*8],0x15
  4132d3:	in     eax,dx
  4132d4:	aas    
  4132d5:	fistp  DWORD PTR [edx-0x5b31593d]
  4132db:	xchg   ebx,eax
  4132dc:	or     ch,ch
  4132de:	push   eax
  4132df:	mov    bl,0x27
  4132e1:	sbb    eax,0xc0b02e2b
  4132e6:	lea    esp,[edx-0x2d]
  4132e9:	push   0xcaa73851
  4132ee:	jbe    0x4132d1
  4132f0:	inc    edx
  4132f1:	xor    esi,0xffffff87
  4132f4:	ins    DWORD PTR es:[edi],dx
  4132f5:	jno    0x4132aa
  4132f7:	mov    dl,0xa3
  4132f9:	call   0x18ebc710
  4132fe:	xor    ah,ah
  413300:	aas    
  413301:	xchg   ebp,eax
  413302:	cli    
  413303:	jmp    0x7cbf:0xcff51ce7
  41330a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41330b:	out    dx,eax
  41330c:	cmp    eax,0x8aa4e57
  413311:	add    DWORD PTR [eax],0x50
  413314:	xor    al,0x70
  413316:	in     al,0x77
  413318:	pop    edi
  413319:	dec    eax
  41331a:	push   0xacc2967c
  41331f:	dec    eax
  413320:	add    ecx,esp
  413322:	pop    gs
  413324:	(bad)  
  413325:	(bad)  
  413327:	dec    ecx
  413328:	mov    ebp,0x4b5f9152
  41332d:	cmp    al,0x69
  41332f:	pinsrw mm0,WORD PTR [ebx-0x44],0xc2
  413334:	es mov ch,bl
  413337:	jg     0x41330a
  413339:	lahf   
  41333a:	cmp    esp,eax
  41333c:	neg    DWORD PTR [esi+0x16]
  41333f:	cwde   
  413340:	add    DWORD PTR [ecx+0x78890913],ebp
  413346:	test   DWORD PTR [ecx],eax
  413348:	push   esp
  413349:	jae    0x4132e6
  41334b:	test   al,0x8c
  41334d:	sbb    edi,eax
  41334f:	xchg   ecx,eax
  413350:	jle    0x41330a
  413352:	aas    
  413353:	and    edi,eax
  413355:	or     eax,0x5b1b3139
  41335a:	pop    esp
  41335b:	jmp    0x4133cf
  41335d:	repz mov cl,0x70
  413360:	mov    DWORD PTR [ebx+0x52],ecx
  413363:	inc    esi
  413364:	inc    ebp
  413365:	sbb    eax,0xc41c779
  41336a:	in     eax,0x6
  41336c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41336d:	mov    ds:0x6b33695f,al
  413372:	mov    ah,BYTE PTR ds:0xd2182b8c
  413378:	mov    fs,WORD PTR [esi]
  41337a:	jae    0x41335d
  41337c:	lock push edi
  41337e:	shl    BYTE PTR [esp+ecx*4-0x70],0x53
  413383:	lock jmp 0x41337b
  413386:	and    ebp,ebx
  413388:	test   DWORD PTR [ecx],0x41c96f60
  41338e:	cmp    ecx,DWORD PTR [eax+0x1a]
  413391:	or     bl,BYTE PTR [esi+0x6331fea0]
  413397:	ret    
  413398:	test   ebx,0x35620540
  41339e:	outs   dx,DWORD PTR ds:[esi]
  41339f:	or     edx,ecx
  4133a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133a2:	and    ah,bh
  4133a4:	sub    BYTE PTR [edi],0x2
  4133a7:	ret    0x623d
  4133aa:	test   DWORD PTR ss:[eax+0x5196b407],esp
  4133b1:	shl    BYTE PTR [esi-0x50471d59],cl
  4133b7:	jle    0x413418
  4133b9:	add    BYTE PTR [ebp-0x50ca693],dh
  4133bf:	xor    esp,DWORD PTR [edx+eiz*2-0xe]
  4133c3:	mov    ds:0x9818975e,eax
  4133c8:	int3   
  4133c9:	in     al,dx
  4133ca:	sub    DWORD PTR [edi*4+0x6b1ba4d5],esi
  4133d1:	adc    ch,BYTE PTR [edi+ebp*8]
  4133d4:	ins    BYTE PTR es:[edi],dx
  4133d5:	add    al,0xf2
  4133d7:	mov    BYTE PTR [edx+ebx*8-0x6a],dl
  4133db:	(bad)
  4133de:	push   0xa
  4133e0:	sub    BYTE PTR [edx],dh
  4133e2:	adc    bl,ch
  4133e4:	or     al,0x50
  4133e6:	into   
  4133e7:	or     eax,0x3eacd25d
  4133ec:	and    cl,BYTE PTR [ebx+edx*2-0x439537c6]
  4133f3:	in     eax,0x15
  4133f5:	sub    DWORD PTR [ecx+eiz*1+0x37482898],0xffffffe8
  4133fd:	out    0xce,eax
  4133ff:	inc    eax
  413400:	xchg   ecx,eax
  413401:	in     eax,0xc9
  413403:	cmp    BYTE PTR [edi+0x71],bh
  413406:	imul   eax,DWORD PTR [esi-0x6c],0xffffffdc
  41340a:	jae    0x41345d
  41340c:	aam    0xc
  41340e:	mov    DWORD PTR [ebp+0x70f53603],eax
  413414:	(bad)  
  413415:	add    BYTE PTR [ebp+eax*8+0x1f7ab897],0x1f
  41341d:	pop    esp
  41341e:	retf   
  41341f:	add    eax,DWORD PTR [esi+ebx*1]
  413422:	cmp    bl,BYTE PTR [ebx-0x3a]
  413425:	inc    ebx
  413426:	mov    edi,0x8f7207b9
  41342b:	ss inc ebx
  41342d:	loop   0x4133ef
  41342f:	adc    ebx,DWORD PTR [esi+0xa]
  413432:	sub    DWORD PTR [ebp+ebx*2-0x18216047],edi
  413439:	cwde   
  41343a:	jbe    0x4133d4
  41343c:	fstp   QWORD PTR [eax]
  41343e:	and    al,0xab
  413440:	jbe    0x4133d7
  413442:	pop    ebx
  413443:	cmp    BYTE PTR [esi+0x2],bl
  413446:	js     0x4133d6
  413448:	fwait
  413449:	in     al,dx
  41344a:	(bad)  
  41344b:	outs   dx,BYTE PTR ds:[esi]
  41344c:	inc    esp
  41344d:	mov    bh,0x83
  41344f:	add    eax,DWORD PTR ss:0xcd007ea7
  413456:	inc    edx
  413457:	arpl   WORD PTR cs:[ebx-0x3a124e13],si
  41345e:	call   0xd182:0x79ce441f
  413465:	pop    edi
  413466:	sbb    esi,esi
  413468:	shl    DWORD PTR [ecx-0x7],cl
  41346b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41346c:	mov    ebx,DWORD PTR [ecx-0x697f8e03]
  413472:	bound  esi,QWORD PTR [ecx+0x637c4cd1]
  413478:	push   edx
  413479:	loopne 0x41342d
  41347b:	mov    ecx,0x203df798
  413480:	mov    dl,0x5d
  413482:	(bad)  
  413483:	push   ds
  413484:	ficomp WORD PTR [eax]
  413486:	fwait
  413487:	test   DWORD PTR [edx+ebp*4+0x129cc0ae],esi
  41348e:	bound  eax,QWORD PTR [edi]
  413490:	nop
  413491:	cmc    
  413492:	jns    0x413453
  413494:	retf   0x615e
  413497:	mov    WORD PTR [esi],cs
  413499:	or     ch,BYTE PTR [esi]
  41349b:	xor    BYTE PTR ds:0x64a4d34b,bh
  4134a1:	(bad)  [eax-0x2d]
  4134a4:	or     BYTE PTR [ecx],ch
  4134a6:	ss int3 
  4134a8:	clc    
  4134a9:	jl     0x413465
  4134ab:	pop    ds
  4134ac:	sbb    eax,0xe601dca4
  4134b1:	mul    esi
  4134b3:	cs out dx,al
  4134b5:	fdiv   QWORD PTR [eax-0x4eed4190]
  4134bb:	jmp    0xaa96:0x6df4615a
  4134c2:	and    DWORD PTR [esi],edx
  4134c4:	cwde   
  4134c5:	mov    eax,ds:0xb9a2c0b3
  4134ca:	(bad)  
  4134cb:	jno    0x413504
  4134cd:	pop    ebx
  4134ce:	stos   BYTE PTR es:[edi],al
  4134cf:	xchg   DWORD PTR [ebx+0x6],esi
  4134d2:	shl    esi,1
  4134d4:	dec    BYTE PTR [ecx-0x4f82f01b]
  4134da:	jbe    0x4134c0
  4134dc:	or     dl,BYTE PTR [edi-0xe885197]
  4134e2:	mov    al,cl
  4134e4:	iret   
  4134e5:	add    BYTE PTR ds:0xa4ec54e4,dl
  4134eb:	rol    DWORD PTR [esp+ebp*1+0x51],cl
  4134ef:	sbb    cl,BYTE PTR [edi-0x68]
  4134f2:	inc    ecx
  4134f3:	xor    ebx,DWORD PTR [edx-0x361fb655]
  4134f9:	cld    
  4134fa:	push   0xffffff8d
  4134fc:	sar    DWORD PTR [edi],0xd
  4134ff:	sub    DWORD PTR [eax],0x76
  413502:	xchg   dh,bl
  413504:	cmp    DWORD PTR [ebp-0x5911cc2f],0xffffffd3
  41350b:	add    eax,0x6212948f
  413510:	pop    ss
  413511:	test   eax,0x73ef5053
  413516:	cld    
  413517:	mov    dh,0x6a
  413519:	shr    ecx,cl
  41351b:	jge    0x41351f
  41351d:	hlt    
  41351e:	adc    BYTE PTR [edi+0x38],dh
  413521:	jmp    0x4134ca
  413523:	jecxz  0x4134c2
  413525:	(bad)  
  413526:	jp     0x413529
  413528:	mov    bl,0x37
  41352a:	jnp    0x4134fa
  41352c:	push   ecx
  41352d:	and    eax,ebx
  41352f:	push   cs
  413530:	jle    0x4134b9
  413532:	inc    ebx
  413533:	lahf   
  413534:	and    DWORD PTR [ebx+0x4aefb667],0x4c
  41353b:	pop    ebp
  41353c:	dec    ecx
  41353d:	pop    edx
  41353e:	std    
  41353f:	dec    eax
  413540:	xchg   ebx,eax
  413541:	sbb    DWORD PTR [ebx+0x2fb947f4],esp
  413547:	fninit 
  413549:	aas    
  41354a:	push   esp
  41354b:	iret   
  41354c:	mov    ah,0xc0
  41354e:	(bad)
  413551:	imul   edi,edx,0xffffffa5
  413554:	cmp    al,0xb8
  413556:	sbb    cl,cl
  413558:	cmp    eax,edx
  41355a:	repz adc BYTE PTR [edx+0xd4df0c1],bh
  413561:	sar    DWORD PTR [ebx+0x2ab9a276],1
  413567:	ds sti 
  413569:	pusha  
  41356a:	test   al,0x91
  41356c:	inc    ebp
  41356d:	jp     0x4135b1
  41356f:	(bad)  
  413570:	repnz mov ds:0x69c85e2e,eax
  413576:	hlt    
  413577:	adc    cl,BYTE PTR [ebx-0x76]
  41357a:	or     eax,0x9d349815
  41357f:	imul   edi,DWORD PTR [edx],0xad924eb0
  413585:	ins    BYTE PTR es:[edi],dx
  413586:	xor    DWORD PTR [eax],ecx
  413588:	icebp  
  413589:	add    DWORD PTR [ebx+0x18],0x16
  41358d:	sbb    eax,0xb9fa74c9
  413592:	scas   al,BYTE PTR es:[edi]
  413593:	cmp    DWORD PTR gs:[esi+0x21],ebp
  413597:	cld    
  413598:	mov    ecx,0xf8757105
  41359d:	push   esi
  41359e:	out    0xf,eax
  4135a0:	repz sub edx,ebp
  4135a3:	repz jno 0x413581
  4135a6:	mov    eax,0xf6708b8a
  4135ab:	xchg   edx,eax
  4135ac:	or     al,0x2d
  4135ae:	popf   
  4135af:	into   
  4135b0:	xchg   ah,bh
  4135b2:	inc    esp
  4135b3:	xor    DWORD PTR [edi+0x178cc8ce],ecx
  4135b9:	aas    
  4135ba:	aam    0x89
  4135bc:	out    0xdd,al
  4135be:	xlat   BYTE PTR ds:[ebx]
  4135bf:	dec    esp
  4135c0:	mov    cl,0x54
  4135c2:	scas   al,BYTE PTR es:[edi]
  4135c3:	arpl   WORD PTR ds:0xf001066f,ax
  4135c9:	xor    BYTE PTR [ebp+0x2b42fc58],bl
  4135cf:	push   0x45d3b1b0
  4135d4:	xor    DWORD PTR [ebp-0x7a],edi
  4135d7:	xor    al,0x7c
  4135d9:	or     ecx,DWORD PTR [ecx]
  4135db:	sbb    ch,BYTE PTR [ecx-0x92b9e8d]
  4135e1:	push   eax
  4135e2:	hlt    
  4135e3:	dec    edx
  4135e4:	and    BYTE PTR [ebp+0x61],al
  4135e7:	sbb    edi,DWORD PTR [ebx+0x6f1fd42f]
  4135ed:	xchg   ebp,eax
  4135ee:	sub    ch,0x80
  4135f1:	mov    al,0x4e
  4135f3:	ret    
  4135f4:	stos   BYTE PTR es:[edi],al
  4135f5:	shl    DWORD PTR [ecx-0x5b],1
  4135f8:	inc    ebp
  4135f9:	fwait
  4135fa:	inc    esp
  4135fb:	jmp    0xccf0:0xfc59d95b
  413602:	jmp    0x413625
  413604:	retf   
  413605:	add    esp,DWORD PTR [ecx+0x2a37f15b]
  41360b:	adc    ebp,0xde3b8cd
  413611:	leave  
  413612:	in     eax,0x30
  413614:	out    dx,al
  413615:	push   ebx
  413616:	js     0x413621
  413618:	sub    al,0x73
  41361a:	les    esi,FWORD PTR [ebx]
  41361c:	mov    ah,0x41
  41361e:	cmp    DWORD PTR [edx],ebx
  413620:	mov    esi,0x5b0ba718
  413625:	lods   eax,DWORD PTR ds:[esi]
  413626:	arpl   WORD PTR gs:[edx+edi*4+0x4f],bx
  41362b:	outs   dx,BYTE PTR ds:[esi]
  41362c:	push   eax
  41362d:	dec    ebp
  41362e:	sbb    DWORD PTR [esi+0x6ee0a1f1],0x2d
  413635:	mov    al,0xf6
  413637:	cld    
  413638:	sub    esp,DWORD PTR [edx+0x59d1845]
  41363e:	xlat   BYTE PTR ds:[ebx]
  41363f:	adc    cl,BYTE PTR [ebx+0x162f5616]
  413645:	imul   ecx,ecx,0xffffffed
  413648:	adc    eax,0xd2f87855
  41364d:	adc    cl,dh
  41364f:	ss into 
  413651:	arpl   WORD PTR [edi-0x2a],bx
  413654:	inc    ebx
  413655:	iret   
  413656:	mov    al,0xb
  413658:	add    esi,ebx
  41365a:	push   edx
  41365b:	pushf  
  41365c:	pop    esi
  41365d:	dec    edx
  41365e:	popa   
  41365f:	push   ecx
  413660:	imul   eax,DWORD PTR [esp+edx*2+0x53],0xffffffce
  413665:	or     BYTE PTR [ebx+edx*2],al
  413668:	push   ebx
  413669:	sub    ecx,ecx
  41366b:	sbb    DWORD PTR [edi+0x33],0xacbbff91
  413672:	sbb    DWORD PTR [edi+0x64],eax
  413675:	fbld   TBYTE PTR ds:0x132989a2
  41367b:	add    ebp,DWORD PTR [ecx]
  41367d:	mov    DWORD PTR [edx+ecx*2-0x402a346c],eax
  413684:	and    ah,BYTE PTR [ecx-0x2c]
  413687:	jge    0x41367b
  413689:	xor    al,0x9d
  41368b:	stos   DWORD PTR es:[edi],eax
  41368c:	popf   
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	pop    edi
  41368f:	add    edi,DWORD PTR [esi+0x2204f7a]
  413695:	dec    esp
  413696:	jbe    0x4136b0
  413698:	fisttp DWORD PTR [ecx+0x61]
  41369b:	sti    
  41369c:	cdq    
  41369d:	outs   dx,BYTE PTR ds:[esi]
  41369e:	pushf  
  41369f:	jmp    0x4136fe
  4136a1:	jb     0x41364d
  4136a3:	jmp    0x413677
  4136a5:	and    al,0x5f
  4136a7:	shr    ah,0xa0
  4136aa:	cmc    
  4136ab:	cmp    al,0x37
  4136ad:	or     eax,0x7d6b9b0
  4136b2:	cmp    BYTE PTR [edi-0xe67d7b9],ch
  4136b8:	inc    edi
  4136b9:	pop    edx
  4136ba:	rcr    esp,1
  4136bc:	xor    al,0x6e
  4136be:	pop    eax
  4136bf:	jbe    0x413719
  4136c1:	aas    
  4136c2:	xor    BYTE PTR [edx+edx*2+0x20],dh
  4136c6:	inc    ebp
  4136c7:	mov    ecx,0xaa51224d
  4136cc:	pop    edi
  4136cd:	lock sahf 
  4136cf:	mov    esp,0x874b6a4
  4136d4:	les    ebp,FWORD PTR [edi+ecx*4-0x1d6df377]
  4136db:	daa    
  4136dc:	ss mov edx,eax
  4136df:	mov    esi,0x7b04370e
  4136e4:	push   eax
  4136e5:	push   ss
  4136e6:	in     ax,0x1
  4136e9:	mov    dl,0x3a
  4136eb:	data16 mov WORD PTR [ecx],cs
  4136ee:	mov    BYTE PTR ds:0xd4cdf7a4,ch
  4136f4:	or     edx,ebx
  4136f6:	scas   al,BYTE PTR es:[edi]
  4136f7:	sub    edx,0x2d
  4136fa:	cmp    DWORD PTR [eax+0x19b6c2c0],eax
  413700:	or     al,0x1
  413702:	cmp    ecx,DWORD PTR [edx+edi*8-0x192d3c99]
  413709:	pushf  
  41370a:	repz cdq 
  41370c:	jb     0x4136a2
  41370e:	cmp    al,0x1d
  413710:	add    BYTE PTR [edi+0x5b],dh
  413713:	inc    esp
  413714:	or     DWORD PTR [esi+0x51],ecx
  413717:	fcmovne st,st(0)
  413719:	in     eax,dx
  41371a:	cwde   
  41371b:	addr16 mov bl,0x19
  41371e:	adc    al,0x27
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	push   ecx
  413722:	dec    edx
  413723:	pop    esi
  413724:	cwde   
  413725:	test   ah,ah
  413727:	ins    BYTE PTR es:[edi],dx
  413728:	repz mov edx,0xfb0dc19f
  41372e:	call   0x64f:0xda9c7d27
  413735:	sbb    DWORD PTR [edx],ebx
  413737:	xchg   BYTE PTR [eax+0x3c],dl
  41373a:	xchg   edx,eax
  41373b:	add    ebx,DWORD PTR [ebp+0x55d0d144]
  413741:	fidivr WORD PTR [edi]
  413743:	sub    ebp,DWORD PTR [esi+0x41b4cc39]
  413749:	mov    ch,0xef
  41374b:	push   esp
  41374c:	or     dl,BYTE PTR [eax-0x62]
  41374f:	jge    0x4136e6
  413751:	ja     0x4136df
  413753:	push   ebx
  413754:	and    al,0x64
  413756:	jmp    0xb674:0x13d44e57
  41375d:	adc    DWORD PTR [eax-0x6f],esp
  413760:	imul   ebx,DWORD PTR [edx-0x767df4ba],0x620fd5eb
  41376a:	xor    eax,0x5b625bb0
  41376f:	lahf   
  413770:	mov    ch,0x56
  413772:	fwait
  413773:	jbe    0x4137b6
  413775:	popf   
  413776:	daa    
  413777:	ret    0xed8
  41377a:	popa   
  41377b:	pop    ds
  41377c:	mov    ch,0x8b
  41377e:	sub    DWORD PTR ds:0x56573d07,ebp
  413784:	and    eax,0xc7adc410
  413789:	sub    eax,0x5ccef394
  41378e:	sti    
  41378f:	or     ebp,edi
  413791:	mov    ebx,0x3635b2ae
  413796:	xor    dh,BYTE PTR [eax+eiz*4]
  413799:	iret   
  41379a:	cwde   
  41379b:	cmc    
  41379c:	imul   esi,esi,0x1b
  41379f:	clc    
  4137a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137a1:	mov    BYTE PTR [edx-0x52],dl
  4137a4:	sub    BYTE PTR [edi+eax*1-0x54aff98d],cl
  4137ab:	adc    ecx,edi
  4137ad:	cli    
  4137ae:	add    al,0xa7
  4137b0:	aad    0x43
  4137b2:	cmc    
  4137b3:	dec    esi
  4137b4:	test   eax,0x5cc1fd1
  4137b9:	into   
  4137ba:	test   ecx,ebx
  4137bc:	repz enter 0xde56,0xdc
  4137c1:	aaa    
  4137c2:	pop    edi
  4137c3:	(bad)  
  4137c4:	(bad)  
  4137c5:	and    al,0xc3
  4137c7:	jne    0x413754
  4137c9:	ret    0xe3f1
  4137cc:	out    dx,al
  4137cd:	imul   ebx,ebx,0xfffffff7
  4137d0:	add    DWORD PTR [ebp-0x4f],ebx
  4137d3:	push   0x5f
  4137d5:	mov    edx,0x15864e40
  4137da:	in     al,0xba
  4137dc:	sub    eax,0x85653572
  4137e1:	xchg   BYTE PTR ds:0x7564835b,cl
  4137e7:	adc    edx,DWORD PTR [edi+esi*4-0x18f718cd]
  4137ee:	les    eax,FWORD PTR [ecx]
  4137f0:	push   esp
  4137f1:	call   0x463c:0x961ff506
  4137f8:	pop    ebx
  4137f9:	scas   eax,DWORD PTR es:[edi]
  4137fa:	xchg   edx,eax
  4137fb:	push   eax
  4137fc:	div    ebp
  4137fe:	pop    DWORD PTR [esp+edi*1]
  413801:	enter  0xb02c,0x81
  413805:	dec    esp
  413806:	cmp    DWORD PTR [ecx+0x461b394d],0xfffffff0
  41380d:	out    dx,eax
  41380e:	jmp    0xd9c59303
  413813:	es retf 0x605b
  413817:	jbe    0x413881
  413819:	loopne 0x413860
  41381b:	in     al,dx
  41381c:	out    dx,al
  41381d:	retf   
  41381e:	pop    ebx
  41381f:	push   edx
  413820:	mov    bh,0xd8
  413822:	xor    eax,0xd7a2d624
  413827:	jmp    0xb2999f99
  41382c:	imul   esp,DWORD PTR [eax-0x2f442e5c],0x4e
  413833:	push   ecx
  413834:	repz fwait
  413836:	sahf   
  413837:	dec    esi
  413838:	and    ah,dl
  41383a:	repnz sub DWORD PTR [ecx+0x35],edx
  41383e:	inc    esi
  41383f:	push   esp
  413840:	push   cs
  413841:	les    eax,FWORD PTR [ebx+0x29]
  413844:	jmp    FWORD PTR [eax+eax*8]
  413847:	push   edi
  413848:	jno    0x4138a8
  41384a:	xchg   si,ax
  41384c:	sub    ch,BYTE PTR [esi]
  41384e:	pop    ebp
  41384f:	mov    edi,0xf7f71595
  413854:	or     ch,ch
  413856:	xchg   edi,eax
  413857:	cld    
  413858:	cmp    eax,0x71a1342f
  41385d:	xor    edi,0xffffff8b
  413860:	mov    edx,esp
  413862:	leave  
  413863:	aaa    
  413864:	xchg   BYTE PTR [edi-0x30],dl
  413867:	loopne 0x4138d2
  413869:	inc    ebp
  41386a:	sub    DWORD PTR [eax],edx
  41386c:	add    al,0x4a
  41386e:	mov    ebp,0xd5f3c009
  413873:	imul   eax,DWORD PTR [edi],0xffffff9b
  413876:	jne    0x4138d4
  413878:	pushf  
  413879:	xchg   edx,eax
  41387a:	mov    ah,0x5f
  41387c:	jecxz  0x4138e8
  41387e:	mov    ebx,DWORD PTR [ebx+0x76]
  413881:	rol    DWORD PTR [esi-0x6050d83a],1
  413887:	(bad)  
  413888:	jp     0x413811
  41388a:	add    edx,DWORD PTR [edx+0x6282abb5]
  413890:	fld    st(3)
  413892:	lahf   
  413893:	cmp    BYTE PTR [ebx-0x7026dfad],0x58
  41389a:	outs   dx,BYTE PTR ds:[esi]
  41389b:	inc    edx
  41389c:	pmaxub mm2,QWORD PTR [esi+0x24]
  4138a0:	xchg   ecx,eax
  4138a1:	mov    ch,0xb0
  4138a3:	call   0x6f7ff2d0
  4138a8:	pop    ecx
  4138a9:	(bad)  
  4138aa:	mov    esp,0xb792633d
  4138af:	pop    ebp
  4138b0:	sbb    eax,DWORD PTR [ebx+0x7379651e]
  4138b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138b7:	test   al,0xd0
  4138b9:	stc    
  4138ba:	mov    ds:0x1bcbd0e2,eax
  4138bf:	enter  0x7cd1,0x16
  4138c3:	mov    cl,0xd3
  4138c5:	mov    ebp,0x33cd9532
  4138ca:	and    BYTE PTR [eax+0x3],al
  4138cd:	xchg   DWORD PTR [edi-0x24f800ce],edx
  4138d3:	jge    0x4138f1
  4138d5:	(bad)  
  4138d7:	and    al,0x34
  4138d9:	pop    esp
  4138da:	and    ebp,esi
  4138dc:	inc    eax
  4138dd:	sub    dh,BYTE PTR [esi-0x37]
  4138e0:	xchg   esi,eax
  4138e1:	repnz inc ecx
  4138e3:	or     BYTE PTR [ebx+ebx*8-0x14],dl
  4138e7:	sbb    DWORD PTR [esi-0x68c269e4],edi
  4138ed:	cmc    
  4138ee:	jmp    0xcb0a91f1
  4138f3:	mov    dl,0xe6
  4138f5:	add    DWORD PTR [edx],edi
  4138f7:	ins    BYTE PTR es:[edi],dx
  4138f8:	or     ebp,ebp
  4138fa:	mov    eax,DWORD PTR [eax]
  4138fc:	jne    0x4138cb
  4138fe:	loop   0x413897
  413900:	mov    cl,0xf0
  413902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413903:	jl     0x41389c
  413905:	push   edi
  413906:	mov    bh,0x86
  413908:	loope  0x413954
  41390a:	leave  
  41390b:	int    0xae
  41390d:	mov    bx,0xcc3
  413911:	loope  0x4138cd
  413913:	stos   DWORD PTR es:[edi],eax
  413914:	mov    DWORD PTR ds:[ebx],ebp
  413917:	fst    DWORD PTR [esi-0x53f35e9d]
  41391d:	or     ah,ch
  41391f:	je     0x4138c7
  413921:	sahf   
  413922:	push   0xffffffbc
  413924:	icebp  
  413925:	scas   eax,DWORD PTR es:[edi]
  413926:	das    
  413927:	fidiv  WORD PTR [ebx]
  413929:	and    bh,bl
  41392b:	rcr    BYTE PTR [edi-0x53c92484],cl
  413931:	imul   edi,DWORD PTR [esi-0x7724dbd2],0xffffff98
  413938:	xor    esp,ebp
  41393a:	mov    al,ds:0xab25d4a9
  41393f:	scas   al,BYTE PTR es:[edi]
  413940:	rcl    edx,1
  413942:	dec    esi
  413943:	daa    
  413944:	shl    DWORD PTR [ebx+0x17a72e59],0x26
  41394b:	call   0xd4f2:0x615970f6
  413952:	inc    esp
  413953:	scas   eax,DWORD PTR es:[edi]
  413954:	adc    eax,0x22248221
  413959:	out    0x8f,al
  41395b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41395c:	sub    bh,BYTE PTR [eax+0x2de216fe]
  413962:	int    0xec
  413964:	test   BYTE PTR [ebp-0x1f08f50c],ch
  41396a:	(bad)  
  41396b:	in     eax,0x48
  41396d:	mov    ah,0x8c
  41396f:	je     0x41396a
  413971:	jge    0x4139bb
  413973:	in     eax,dx
  413974:	fs xor eax,0xa0579812
  41397a:	pushf  
  41397b:	sub    DWORD PTR ds:0xd7a98bd1,esi
  413981:	push   0x2c
  413983:	lock fild QWORD PTR [esi-0x58]
  413987:	(bad)  
  413988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413989:	jmp    0x2c5f:0xdd8645eb
  413990:	cld    
  413991:	icebp  
  413992:	loopne 0x41392f
  413994:	out    0x99,al
  413996:	push   0x40f7da8f
  41399b:	sahf   
  41399c:	test   DWORD PTR [ecx-0x1624e4a1],0xdd797517
  4139a6:	repz aaa 
  4139a8:	cli    
  4139a9:	push   es
  4139aa:	add    bh,dh
  4139ac:	jno    0x413952
  4139ae:	inc    esi
  4139af:	sbb    BYTE PTR [ecx+esi*1],0x3c
  4139b3:	sbb    BYTE PTR [ecx+esi*8+0x584a835b],bl
  4139ba:	adc    bh,al
  4139bc:	fst    DWORD PTR [esi-0x58]
  4139bf:	add    al,0xa3
  4139c1:	pop    edi
  4139c2:	or     ecx,DWORD PTR [edi]
  4139c4:	add    ebx,esi
  4139c6:	retf   
  4139c7:	jb     0x4139c4
  4139c9:	jmp    0x6893:0xb1ac0d4a
  4139d0:	push   cs
  4139d1:	mov    ss:0xe6b92cfb,al
  4139d7:	rcl    DWORD PTR [ebp-0x2ef8de3f],1
  4139dd:	sub    eax,0xbce86e1
  4139e2:	xchg   edi,eax
  4139e3:	ss enter 0xe63c,0xbf
  4139e8:	pushf  
  4139e9:	icebp  
  4139ea:	sar    DWORD PTR [ebp+0x43a8f920],cl
  4139f0:	add    BYTE PTR [ecx+0x7bb79576],dl
  4139f6:	push   es
  4139f7:	inc    edi
  4139f8:	pop    es
  4139f9:	sbb    DWORD PTR [edi],edx
  4139fb:	daa    
  4139fc:	sub    eax,0x360169b6
  413a01:	push   esp
  413a02:	jg     0x4139f8
  413a04:	pop    eax
  413a05:	ss and eax,0x27533517
  413a0b:	ret    
  413a0c:	jae    0x413a7c
  413a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a0f:	inc    esi
  413a10:	dec    eax
  413a11:	jne    0x413a14
  413a13:	mov    ds:0x62c0ff47,al
  413a18:	paddsw mm4,mm7
  413a1b:	xor    ebx,DWORD PTR [edx-0x60a329]
  413a21:	adc    al,0xfd
  413a23:	fst    DWORD PTR [edi]
  413a25:	aaa    
  413a26:	daa    
  413a27:	dec    ebx
  413a28:	mov    dl,0xa6
  413a2a:	mov    eax,0x63a70f3d
  413a2f:	xor    DWORD PTR ds:0x7ebbfaa5,ebx
  413a35:	fild   QWORD PTR [ebp+0x6]
  413a38:	add    esp,DWORD PTR [edi-0x3b8cfe46]
  413a3e:	pop    edi
  413a3f:	loopne 0x413a97
  413a41:	pop    ds
  413a42:	fld    DWORD PTR ds:0x5a46445f
  413a48:	cmc    
  413a49:	xor    esp,DWORD PTR [esi-0x474c33e6]
  413a4f:	add    bh,bh
  413a51:	dec    ecx
  413a52:	cli    
  413a53:	sub    edx,DWORD PTR [esi]
  413a55:	jge    0x413ab1
  413a57:	(bad)
  413a5a:	popf   
  413a5b:	arpl   WORD PTR [edi],sp
  413a5d:	scas   eax,DWORD PTR es:[edi]
  413a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a5f:	jmp    0x413a95
  413a61:	xchg   edx,eax
  413a62:	xchg   esi,eax
  413a63:	dec    esp
  413a64:	stos   BYTE PTR es:[edi],al
  413a65:	nop
  413a66:	mov    eax,0x67008ceb
  413a6b:	and    BYTE PTR [esi+0x75],cl
  413a6e:	test   BYTE PTR [ecx+0xfb933a1],ah
  413a74:	imul   ebx,ebp,0xffffff8e
  413a77:	sbb    dh,BYTE PTR [ecx+0x53a7051f]
  413a7d:	scas   al,BYTE PTR es:[edi]
  413a7e:	add    bl,al
  413a80:	call   0xcf46:0x61d49bf6
  413a87:	sbb    edi,DWORD PTR [ebp+edi*8-0x31e0583]
  413a8e:	out    0x5a,al
  413a90:	ins    BYTE PTR es:[edi],dx
  413a91:	out    0x50,eax
  413a93:	or     ebx,DWORD PTR [edx]
  413a95:	sti    
  413a96:	bound  ebx,QWORD PTR [ebx+0x3d245f20]
  413a9c:	or     ebp,edi
  413a9e:	adc    dh,BYTE PTR [esi-0x44]
  413aa1:	into   
  413aa2:	dec    edi
  413aa3:	jg     0x413a52
  413aa5:	xor    BYTE PTR [ecx+0x2dac278b],dh
  413aab:	jno    0x413aec
  413aad:	das    
  413aae:	xor    ah,dh
  413ab0:	pop    ebp
  413ab1:	xchg   edx,eax
  413ab2:	pusha  
  413ab3:	push   edx
  413ab4:	cmp    cl,BYTE PTR [esp+esi*8]
  413ab7:	or     dl,ah
  413ab9:	or     eax,0x942c66f8
  413abe:	inc    edx
  413abf:	cmp    eax,0xa17c96e6
  413ac4:	push   ebp
  413ac5:	xchg   BYTE PTR [esi-0x7360f2f1],bh
  413acb:	test   BYTE PTR [edi],0xb9
  413ace:	cmc    
  413acf:	ret    0x98c3
  413ad2:	fwait
  413ad3:	adc    al,0xcf
  413ad5:	pop    eax
  413ad6:	cmp    BYTE PTR [esi-0x547e0e5b],bl
  413adc:	xchg   esi,ebp
  413ade:	add    al,0xa5
  413ae0:	mov    edx,0x7545a51a
  413ae5:	inc    eax
  413ae6:	inc    esi
  413ae7:	and    al,0xdb
  413ae9:	lds    ecx,FWORD PTR [ebx+0x2e40536c]
  413aef:	mov    dh,0xf6
  413af1:	or     BYTE PTR [ecx-0x284f7e1d],dl
  413af7:	jns    0x413a7f
  413af9:	or     BYTE PTR [ecx+0x690f62b1],ah
  413aff:	jle    0x413a93
  413b01:	pusha  
  413b02:	push   edx
  413b03:	out    dx,eax
  413b04:	ret    0x66d0
  413b07:	mov    ebp,0x8e7fc935
  413b0c:	jcxz   0x413aca
  413b0f:	inc    ebp
  413b10:	sub    dh,dh
  413b12:	xchg   esi,eax
  413b13:	lods   eax,DWORD PTR ds:[esi]
  413b14:	jbe    0x413ac4
  413b16:	mov    ebp,0x1393a142
  413b1b:	fisubr WORD PTR [esi-0x576d25df]
  413b21:	pushf  
  413b22:	add    BYTE PTR [ecx+0x40],bl
  413b25:	call   0x6f05ecb6
  413b2a:	ror    BYTE PTR [edi+0x6e06c78d],cl
  413b30:	dec    ecx
  413b31:	dec    esi
  413b32:	mov    al,ds:0x265a19e3
  413b37:	adc    cl,BYTE PTR [edx]
  413b39:	imul   ecx,DWORD PTR [ebx+0x5ebf06d1],0xf5c4c259
  413b43:	cdq    
  413b44:	sbb    al,0xf2
  413b46:	retf   
  413b47:	pop    ss
  413b48:	and    ecx,DWORD PTR [edx]
  413b4a:	cmp    eax,0x65463196
  413b4f:	mov    bl,0xf4
  413b51:	xchg   BYTE PTR [eax-0x1cf13f64],dh
  413b57:	aas    
  413b58:	scas   al,BYTE PTR es:[edi]
  413b59:	and    eax,0x25a22d27
  413b5e:	pop    esp
  413b5f:	push   ebp
  413b60:	push   edi
  413b61:	or     eax,edi
  413b63:	pop    edi
  413b64:	stos   BYTE PTR es:[edi],al
  413b65:	xchg   edi,eax
  413b66:	sbb    ecx,DWORD PTR [ebx-0x2a]
  413b69:	and    eax,0x7a3390a0
  413b6e:	ss mov bl,0x78
  413b71:	loopne 0x413b54
  413b73:	mov    ds:0x7eab8811,eax
  413b78:	jl     0x413b94
  413b7a:	fnstenv [ebx]
  413b7c:	sub    eax,DWORD PTR [eax+0x6558f20b]
  413b82:	mov    WORD PTR [ebx+ebx*2+0x30],es
  413b86:	xchg   esp,eax
  413b87:	lods   eax,DWORD PTR ds:[esi]
  413b88:	add    BYTE PTR [eax+edx*8+0x359b9d4f],dl
  413b8f:	pop    esi
  413b90:	mov    ds,WORD PTR [edi]
  413b92:	loope  0x413b46
  413b94:	sbb    edi,ebx
  413b96:	cwde   
  413b97:	add    BYTE PTR [ebp-0x2c9c1819],ah
  413b9d:	sub    cl,al
  413b9f:	and    eax,0xe39cd443
  413ba4:	or     al,0x3d
  413ba6:	inc    edi
  413ba7:	push   ds
  413ba8:	lock imul ecx,esi,0x71
  413bac:	or     bh,BYTE PTR [ebx+0x4f]
  413baf:	add    edi,DWORD PTR [esi+edx*2+0x2806ae10]
  413bb6:	(bad)  
  413bb7:	mov    edx,0x458a7db5
  413bbc:	(bad)  
  413bbd:	addr16 push cs
  413bbf:	stc    
  413bc0:	leave  
  413bc1:	popf   
  413bc2:	mov    eax,ds:0x732c88d1
  413bc7:	mov    esi,0x9e267c1c
  413bcc:	xchg   edi,eax
  413bcd:	cli    
  413bce:	cld    
  413bcf:	outs   dx,BYTE PTR ds:[esi]
  413bd0:	xor    eax,DWORD PTR [ecx+0x21fc9f72]
  413bd6:	mov    DWORD PTR [edi],esi
  413bd8:	mov    eax,edx
  413bda:	es repz ss std 
  413bde:	mov    dl,BYTE PTR [esi-0x15]
  413be1:	push   cs
  413be2:	jnp    0x413ba0
  413be4:	enter  0x4115,0x33
  413be8:	adc    eax,0xf16906bc
  413bed:	neg    bl
  413bef:	scas   al,BYTE PTR es:[edi]
  413bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bf1:	popa   
  413bf2:	stc    
  413bf3:	xor    al,0xdb
  413bf5:	bound  esi,QWORD PTR [edx+0x37]
  413bf8:	cmp    al,dh
  413bfa:	or     DWORD PTR [ebx-0x46],esp
  413bfd:	inc    eax
  413bfe:	inc    ebp
  413bff:	sbb    esp,DWORD PTR [esi]
  413c01:	jo     0x413ba9
  413c03:	ret    
  413c04:	(bad)  [edx]
  413c06:	jb     0x413c12
  413c08:	ret    
  413c09:	add    al,0x21
  413c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c0c:	add    al,0xc3
  413c0e:	xlat   BYTE PTR ds:[ebx]
  413c0f:	(bad)  
  413c10:	(bad)  
  413c11:	push   0xffffffc0
  413c13:	jp     0x413c4b
  413c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c16:	cmp    al,0xe7
  413c18:	cwde   
  413c19:	mov    cl,0x21
  413c1b:	lock enter 0xb88d,0x47
  413c20:	popf   
  413c21:	xchg   esi,eax
  413c22:	or     al,0x53
  413c24:	inc    eax
  413c25:	add    ecx,edx
  413c27:	out    0xc0,al
  413c29:	adc    BYTE PTR [eax+0x14432908],dh
  413c2f:	aam    0x4c
  413c31:	mov    WORD PTR [ecx],fs
  413c33:	popa   
  413c34:	daa    
  413c35:	icebp  
  413c36:	sub    cl,dl
  413c38:	xchg   BYTE PTR [edx],dl
  413c3a:	push   esp
  413c3b:	imul   esi,DWORD PTR [edi+0x70252bd8],0xffffff94
  413c42:	adc    al,0xad
  413c44:	adc    al,0xf
  413c46:	fist   WORD PTR [eax-0x712a54bd]
  413c4c:	test   BYTE PTR [eax+ebx*4-0x32],al
  413c50:	das    
  413c51:	mov    DWORD PTR [esi],edi
  413c53:	jns    0x413c3f
  413c55:	fmulp  st(0),st
  413c57:	pushf  
  413c58:	mov    ebp,0x10bbf89c
  413c5d:	adc    al,0x5
  413c5f:	adc    dl,dh
  413c61:	lahf   
  413c62:	mov    ds:0x896d3164,eax
  413c67:	jo     0x413cb5
  413c69:	or     eax,0xde5a7e3a
  413c6e:	jbe    0x413c31
  413c70:	jecxz  0x413bf8
  413c72:	jbe    0x413c08
  413c74:	mov    ch,0x44
  413c76:	call   0xe584f36e
  413c7b:	pop    eax
  413c7c:	addr16 ds pushf 
  413c7f:	inc    edi
  413c80:	add    BYTE PTR [ebx+0x46],ah
  413c83:	xchg   edi,eax
  413c84:	xchg   BYTE PTR [ebp+0x30dd61b5],cl
  413c8a:	add    DWORD PTR [edi-0x3b],edi
  413c8d:	jg     0x413caa
  413c8f:	xor    ebp,eax
  413c91:	adc    eax,0x4ac49b9d
  413c96:	dec    esp
  413c97:	outs   dx,DWORD PTR ds:[esi]
  413c98:	add    edx,DWORD PTR [edi]
  413c9a:	push   es
  413c9b:	scas   eax,DWORD PTR es:[edi]
  413c9c:	mov    esi,0x1c2ad080
  413ca1:	push   es
  413ca2:	sub    dl,0xeb
  413ca5:	mov    eax,gs
  413ca7:	inc    ebx
  413ca8:	inc    bl
  413caa:	cdq    
  413cab:	mov    dl,0xb0
  413cad:	aam    0xb4
  413caf:	(bad)  
  413cb0:	fcmovnu st,st(1)
  413cb2:	outs   dx,BYTE PTR ds:[esi]
  413cb3:	mov    ch,0x21
  413cb5:	ror    BYTE PTR [edi+0x2f37092e],cl
  413cbb:	cdq    
  413cbc:	mov    BYTE PTR fs:[eax-0x1c],bh
  413cc0:	inc    ebx
  413cc1:	repz mov dl,0x9e
  413cc4:	icebp  
  413cc5:	imul   eax,DWORD PTR [esi+eiz*8+0x21],0x50
  413cca:	pop    esp
  413ccb:	leave  
  413ccc:	jae    0x413cd0
  413cce:	sbb    BYTE PTR [ebp+edx*2-0x29caf00f],bh
  413cd5:	scas   eax,DWORD PTR es:[edi]
  413cd6:	int3   
  413cd7:	in     al,dx
  413cd8:	cmp    al,0xfc
  413cda:	inc    ebp
  413cdb:	mov    ds:0xcec6ed56,al
  413ce0:	adc    al,BYTE PTR [edx-0x72]
  413ce3:	cs inc esi
  413ce5:	xchg   ebx,eax
  413ce6:	cmp    BYTE PTR [ebp+esi*8-0x73],ah
  413cea:	xor    DWORD PTR [esi],ebp
  413cec:	int    0x9b
  413cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cef:	jl     0x413caf
  413cf1:	and    dh,dh
  413cf3:	repnz and esp,0x6aad4844
  413cfa:	xor    eax,0x752a5643
  413cff:	fsub   QWORD PTR [esi]
  413d01:	mov    ds:0x7bc0b496,al
  413d06:	ja     0x413cc5
  413d08:	loopne 0x413cbe
  413d0a:	stos   BYTE PTR es:[edi],al
  413d0b:	mov    BYTE PTR [esi-0x467eb6a],dl
  413d11:	mov    ebp,0x480a5e64
  413d16:	mov    edx,0xa0031655
  413d1b:	mov    eax,0xb91b85d5
  413d20:	jmp    0x413d56
  413d22:	ins    BYTE PTR es:[edi],dx
  413d23:	xor    bh,BYTE PTR [ebp-0x6f]
  413d26:	int3   
  413d27:	lds    ecx,FWORD PTR [edx-0x5226bf3d]
  413d2d:	mov    eax,0x488ad864
  413d32:	push   eax
  413d33:	sbb    ebp,DWORD PTR ds:0xe46b242d
  413d39:	loope  0x413d88
  413d3b:	jmp    0x1910fac1
  413d40:	(bad)  
  413d41:	or     edi,DWORD PTR [edi+ecx*8+0x27ce25c9]
  413d48:	loop   0x413d9d
  413d4a:	out    0x9f,eax
  413d4c:	aam    0x2c
  413d4e:	in     eax,dx
  413d4f:	inc    edi
  413d50:	in     eax,dx
  413d51:	jmp    FWORD PTR [eax-0xa]
  413d54:	jns    0x413da5
  413d56:	loop   0x413d71
  413d58:	xor    DWORD PTR [edx+edx*4-0xb],0xffffffd1
  413d5d:	jns    0x413da4
  413d5f:	bnd jb 0x413d44
  413d62:	(bad)  
  413d63:	fdiv   DWORD PTR [edi+0x70547363]
  413d69:	sub    BYTE PTR [ecx],ch
  413d6b:	sahf   
  413d6c:	mov    ecx,0x8535edba
  413d71:	sbb    DWORD PTR [eax-0x4839fa62],ebx
  413d77:	add    bh,BYTE PTR [esi+0x4f]
  413d7a:	les    ebx,FWORD PTR [ecx]
  413d7c:	add    DWORD PTR [edi-0x73a736e2],esp
  413d82:	in     al,0x82
  413d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d85:	ror    DWORD PTR [edi-0x1dae7f46],1
  413d8b:	dec    esi
  413d8c:	adc    esp,edi
  413d8e:	ins    DWORD PTR es:[edi],dx
  413d8f:	dec    ebx
  413d90:	and    esp,DWORD PTR [eax]
  413d92:	(bad)  
  413d93:	popf   
  413d94:	xchg   ebx,eax
  413d95:	adc    DWORD PTR [ebp-0x6e],0xffffffc1
  413d99:	and    esp,DWORD PTR [ebp-0x54]
  413d9c:	data16 int 0x45
  413d9f:	call   DWORD PTR [esi+0x5a16abc7]
  413da5:	xchg   BYTE PTR [ecx-0x6b],cl
  413da8:	mov    al,ds:0x67c866f9
  413dad:	cmp    ebp,DWORD PTR [esi+0x6ac7ac4c]
  413db3:	xlat   BYTE PTR ds:[ebx]
  413db4:	add    eax,0xc6887625
  413db9:	push   edx
  413dba:	imul   edi,edx,0xc3bc8a9a
  413dc0:	jp     0x413e0d
  413dc2:	in     al,0x69
  413dc4:	pop    esp
  413dc5:	or     BYTE PTR [eax-0x74],dl
  413dc8:	adc    DWORD PTR ds:0x7ec6b1de,0xffffffda
  413dcf:	and    edi,ebx
  413dd1:	pop    eax
  413dd2:	cmp    DWORD PTR [ecx],eax
  413dd4:	pop    edx
  413dd5:	jae    0x413dbb
  413dd7:	dec    edi
  413dd8:	(bad)  
  413dd9:	pop    ss
  413dda:	loop   0x413df4
  413ddc:	pop    es
  413ddd:	ins    DWORD PTR es:[edi],dx
  413dde:	sub    eax,0xb02fbdbc
  413de3:	add    eax,0xa9425adf
  413de8:	cmp    DWORD PTR [ebp+eax*1-0x3a],edi
  413dec:	test   BYTE PTR [edi],al
  413dee:	icebp  
  413def:	push   edi
  413df0:	xchg   edx,eax
  413df1:	push   ebp
  413df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df3:	(bad)  
  413df5:	int    0xed
  413df7:	dec    eax
  413df8:	ja     0x413d99
  413dfa:	xchg   esp,eax
  413dfb:	adc    al,0xe0
  413dfd:	shl    ecx,1
  413dff:	dec    edx
  413e00:	xchg   ebp,eax
  413e01:	pop    ecx
  413e02:	dec    esi
  413e03:	xor    ecx,DWORD PTR [ecx]
  413e05:	add    BYTE PTR [esi+edx*4-0x28],dl
  413e09:	xlat   BYTE PTR ds:[ebx]
  413e0a:	mov    dh,0x0
  413e0c:	das    
  413e0d:	mov    esi,0x1946e547
  413e12:	adc    al,BYTE PTR [eax]
  413e14:	das    
  413e15:	call   0xc510:0xb2082dba
  413e1c:	mov    dh,0xd8
  413e1e:	stos   BYTE PTR es:[edi],al
  413e1f:	sub    DWORD PTR [eax+edi*2-0x50c39eb9],eax
  413e26:	ds mov edi,0xcf32b38a
  413e2c:	imul   esi,DWORD PTR [ebx-0x11],0xe7e89fea
  413e33:	ficomp WORD PTR [edi-0x51d795dc]
  413e39:	(bad)  
  413e3a:	fist   WORD PTR [eax-0x51545436]
  413e40:	mov    dl,0x32
  413e42:	mov    bh,0x93
  413e44:	test   BYTE PTR [ecx+0x4f],bh
  413e47:	(bad)  [eax-0x23573b3a]
  413e4d:	fstp   QWORD PTR fs:[ecx]
  413e50:	lods   eax,DWORD PTR ds:[esi]
  413e51:	ins    DWORD PTR es:[edi],dx
  413e52:	lahf   
  413e53:	push   edx
  413e54:	cmc    
  413e55:	add    al,0xd
  413e57:	imul   ebp,DWORD PTR [ecx+0x531d9900],0x19
  413e5e:	inc    ecx
  413e5f:	jmp    0x5dc063ed
  413e64:	pusha  
  413e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e66:	mov    ds:0x757d9db0,al
  413e6b:	rcr    DWORD PTR [edi-0x78],cl
  413e6e:	fmul   QWORD PTR [ebx+eiz*1-0x9a221e1]
  413e75:	cdq    
  413e76:	xor    al,0x37
  413e78:	xchg   ecx,eax
  413e79:	addr16 dec ebx
  413e7b:	nop
  413e7c:	inc    eax
  413e7d:	cmp    bh,0x92
  413e80:	imul   eax,DWORD PTR [edi-0x71],0x78f9d1a7
  413e87:	pop    edi
  413e88:	xchg   esi,eax
  413e89:	mov    edi,0xdc934cf7
  413e8e:	ror    BYTE PTR [eax],cl
  413e90:	dec    ebp
  413e91:	les    edx,FWORD PTR [ebx+eiz*2-0x39]
  413e95:	(bad)  
  413e96:	mov    esi,0x6cf74c2a
  413e9b:	cwde   
  413e9c:	loope  0x413e73
  413e9e:	jns    0x413eac
  413ea0:	sub    dh,BYTE PTR [ecx-0x36]
  413ea3:	cmp    ch,BYTE PTR [esi]
  413ea5:	lea    ebp,[esi]
  413ea7:	cmp    BYTE PTR [ecx+0x1054aec4],ch
  413ead:	in     eax,0xe4
  413eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb0:	dec    ebx
  413eb1:	and    edi,0xffffffaa
  413eb4:	in     eax,0x5d
  413eb6:	fdivr  st,st(4)
  413eb8:	xor    eax,0xefaf7909
  413ebd:	mov    ds:0x8d03ef94,eax
  413ec2:	cdq    
  413ec3:	xlat   BYTE PTR ds:[ebx]
  413ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec5:	jl     0x413e6c
  413ec7:	in     al,dx
  413ec8:	sbb    ebx,DWORD PTR [ecx]
  413eca:	mov    edx,0xa0cab24b
  413ecf:	pop    eax
  413ed0:	(bad)  
  413ed1:	ds ds retf 0xcd62
  413ed6:	repnz lahf 
  413ed8:	cmp    al,0xd6
  413eda:	into   
  413edb:	jno    0x413ea7
  413edd:	inc    ebx
  413ede:	mov    ?,WORD PTR [ebp-0x4e3890b8]
  413ee4:	jg     0x413e9c
  413ee6:	idiv   DWORD PTR [ecx]
  413ee8:	mov    ch,0x98
  413eea:	jae    0x413e98
  413eec:	aaa    
  413eed:	fldenv [eax]
  413eef:	mov    esp,0x87facc13
  413ef4:	pop    esp
  413ef5:	sub    BYTE PTR [ecx],al
  413ef7:	xchg   BYTE PTR [eax],bh
  413ef9:	out    dx,al
  413efa:	xor    dl,BYTE PTR [ebx+0x4996d792]
  413f00:	(bad)  
  413f01:	in     al,dx
  413f02:	std    
  413f03:	outs   dx,BYTE PTR ds:[esi]
  413f04:	add    BYTE PTR [ecx+0x4a],al
  413f07:	push   edx
  413f08:	stos   DWORD PTR es:[edi],eax
  413f09:	pop    ecx
  413f0a:	call   0x34b8:0x94cd81ce
  413f11:	jmp    0x41bf:0xb584ace5
  413f18:	fwait
  413f19:	xchg   edx,eax
  413f1a:	pop    esp
  413f1b:	jp     0x413f5c
  413f1d:	xor    eax,0x7144f20f
  413f22:	(bad)  
  413f23:	cld    
  413f24:	in     eax,0xd2
  413f26:	xchg   esp,eax
  413f27:	mov    edi,0x8135a649
  413f2c:	jl     0x413f70
  413f2e:	xchg   edi,eax
  413f2f:	inc    ecx
  413f30:	or     DWORD PTR [ebp+0x4f7b2ef7],ebp
  413f36:	jmp    0x4a6b224b
  413f3b:	or     DWORD PTR [edi+eiz*8+0x17],edx
  413f3f:	retf   
  413f40:	and    eax,0x58b7ca2d
  413f45:	leave  
  413f46:	mov    BYTE PTR [ebx-0x4030060a],ch
  413f4c:	xor    BYTE PTR [ecx+ebp*4+0x22],cl
  413f50:	push   ebp
  413f51:	out    dx,eax
  413f52:	pop    esp
  413f53:	sti    
  413f54:	bound  ebx,QWORD PTR [esi-0x77]
  413f57:	retf   0xb0fe
  413f5a:	imul   eax,DWORD PTR [edi+0x48be9ad8],0x7f6c73d
  413f64:	mov    al,0xbd
  413f66:	shl    ebp,0x5b
  413f69:	in     eax,dx
  413f6a:	or     BYTE PTR [eax*2-0xe7b3dc8],dh
  413f71:	in     al,dx
  413f72:	push   0x9
  413f74:	arpl   WORD PTR [eax+0x4140e439],cx
  413f7a:	add    DWORD PTR [edx],ebx
  413f7c:	mov    dl,0x6d
  413f7e:	psrlq  mm1,QWORD PTR [esi]
  413f81:	loopne 0x413f97
  413f83:	xchg   edi,eax
  413f84:	mov    al,0x67
  413f86:	(bad)  
  413f87:	and    al,0x61
  413f89:	leave  
  413f8a:	popa   
  413f8b:	loopne 0x413f8b
  413f8d:	fcomp  DWORD PTR [ebx]
  413f8f:	pop    ds
  413f90:	mov    cl,0x6d
  413f92:	fs pop ebp
  413f94:	pop    esp
  413f95:	mov    cl,0x13
  413f97:	int    0x48
  413f99:	sbb    al,ch
  413f9b:	leavew 
  413f9d:	retf   
  413f9e:	and    al,0x52
  413fa0:	or     bh,BYTE PTR [ecx]
  413fa2:	sub    ebp,DWORD PTR [edi-0x15]
  413fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa6:	sti    
  413fa7:	inc    ebp
  413fa8:	jp     0x414014
  413faa:	mov    dl,0xfd
  413fac:	lods   al,BYTE PTR ds:[esi]
  413fad:	inc    esi
  413fae:	repnz fild QWORD PTR [edx+0xb]
  413fb2:	xchg   esi,eax
  413fb3:	mul    DWORD PTR [edi-0xe]
  413fb6:	les    edx,FWORD PTR [ecx+0x53]
  413fb9:	jmp    0x414012
  413fbb:	leave  
  413fbc:	mov    WORD PTR [eax-0x4],es
  413fbf:	out    0xb9,al
  413fc1:	mov    eax,0x30bff1e1
  413fc6:	sbb    BYTE PTR [ebx],bh
  413fc8:	vmread DWORD PTR [edi+0x49a1a655],eax
  413fcf:	jo     0x414043
  413fd1:	mov    ebp,ecx
  413fd3:	push   edi
  413fd4:	arpl   WORD PTR [edi],bx
  413fd6:	loopne 0x413ff1
  413fd8:	pusha  
  413fd9:	(bad)  
  413fda:	cmp    cl,bl
  413fdc:	gs push eax
  413fde:	fcomp  DWORD PTR [ecx+0x5805b6ae]
  413fe4:	test   eax,0xc96ecaef
  413fe9:	and    ecx,DWORD PTR [ebp+ebp*1-0x1c5c04a8]
  413ff0:	add    al,0xe8
  413ff2:	repz push 0xffffffb7
  413ff5:	mov    dh,0xa6
  413ff7:	mov    bh,0x92
  413ff9:	imul   edi,esp,0x74
  413ffc:	mov    cl,0x3b
  413ffe:	cli    
  413fff:	daa    
  414000:	mov    edi,0x61852146
  414005:	push   0x720ac987
  41400a:	adc    eax,0xbc3921cf
  41400f:	imul   eax,DWORD PTR ss:[ecx-0x112db87c],0xf79ae7f4
  41401a:	and    eax,0x668bad48
  41401f:	scas   eax,DWORD PTR es:[edi]
  414020:	ins    DWORD PTR es:[edi],dx
  414021:	paddusw mm6,QWORD PTR [esi-0x2898e587]
  414028:	mov    dl,0xae
  41402a:	push   0x394ac16b
  41402f:	cmp    ebp,ebx
  414031:	add    ecx,DWORD PTR [edx]
  414033:	lock add eax,0x852ce70
  414039:	not    DWORD PTR [edx-0x7c0774f1]
  41403f:	daa    
  414040:	adc    eax,0x27d42183
  414045:	xor    edi,0xffffffde
  414048:	adc    ebx,DWORD PTR [ecx]
  41404a:	call   0x6690:0x2b5535fb
  414051:	js     0x41407b
  414053:	jmp    0x3123233
  414058:	and    bl,BYTE PTR [eax]
  41405a:	imul   ebp,DWORD PTR [edx+edi*8-0x47],0x1ce7d56a
  414062:	pop    edi
  414063:	cmp    al,0xe6
  414065:	sbb    eax,0xe981d13
  41406a:	xor    eax,0x2e15c6c8
  41406f:	jns    0x414001
  414071:	jo     0x414095
  414073:	and    al,0xc6
  414075:	pushf  
  414076:	ror    DWORD PTR [ebx-0x4960bbfc],cl
  41407c:	out    dx,al
  41407d:	push   ebx
  41407e:	jge    0x414048
  414080:	sbb    eax,0x76f91c47
  414085:	cmp    al,0x1f
  414087:	std    
  414088:	jge    0x414022
  41408a:	pop    ss
  41408b:	and    BYTE PTR [ecx+0xe3a0f80],0x6c
  414092:	cwde   
  414093:	and    al,0x2a
  414095:	xchg   esp,eax
  414096:	xchg   DWORD PTR [esi-0xf],esi
  414099:	xchg   DWORD PTR [ecx+0x4bee9900],esi
  41409f:	aam    0x78
  4140a1:	pop    esi
  4140a2:	mov    esp,0x9ecf6ac6
  4140a7:	rol    DWORD PTR [ecx],cl
  4140a9:	sub    ecx,DWORD PTR [edi+edx*4+0x1b]
  4140ad:	cmp    bl,BYTE PTR gs:[di-0x2199]
  4140b3:	fsub   st(5),st
  4140b5:	aam    0xca
  4140b7:	and    cl,bh
  4140b9:	sbb    eax,0x870711b
  4140be:	call   ebx
  4140c0:	pusha  
  4140c1:	mov    ch,0xa
  4140c3:	xlat   BYTE PTR ds:[ebx]
  4140c4:	cmp    al,0xef
  4140c6:	xor    bh,bh
  4140c8:	sbb    edi,DWORD PTR [eax]
  4140ca:	mov    ecx,0xe63729f8
  4140cf:	mov    DWORD PTR [ecx],edi
  4140d1:	jmp    0x4140ed
  4140d3:	std    
  4140d4:	pop    ecx
  4140d5:	mov    cl,0xc9
  4140d7:	popf   
  4140d8:	call   0x7682:0x59760ff3
  4140df:	das    
  4140e0:	lahf   
  4140e1:	es in  al,dx
  4140e3:	ds jns 0x4140cd
  4140e6:	cmp    eax,0x91542fd1
  4140eb:	or     BYTE PTR [eax+0x7023fed4],0xb8
  4140f2:	enter  0xb2e1,0x26
  4140f6:	jae    0x414098
  4140f8:	mov    al,0xeb
  4140fa:	mov    dl,0xb0
  4140fc:	jle    0x41412b
  4140fe:	mov    eax,fs:0x1d12f454
  414104:	cld    
  414105:	lods   al,BYTE PTR ds:[esi]
  414106:	inc    edi
  414107:	dec    eax
  414108:	adc    al,0x2a
  41410a:	adc    al,0xa7
  41410c:	add    al,0x7f
  41410e:	xchg   edi,eax
  41410f:	test   bh,ch
  414111:	or     al,0x4c
  414113:	out    dx,al
  414114:	mov    cl,0x4c
  414116:	pop    edi
  414117:	sub    eax,0x1c6c9c27
  41411c:	out    dx,al
  41411d:	mov    eax,ds:0xc8d4fe13
  414122:	xor    DWORD PTR [edi],ebp
  414124:	push   ds
  414125:	test   al,0x7d
  414127:	pop    edx
  414128:	pop    esi
  414129:	mov    bl,0x23
  41412b:	rol    eax,0xbe
  41412e:	mov    al,0x9b
  414130:	add    eax,0xdcbd7193
  414135:	int    0xf9
  414137:	getsec 
  414139:	inc    eax
  41413a:	rcr    BYTE PTR [ecx],cl
  41413c:	ds mov dl,bh
  41413f:	out    dx,eax
  414140:	push   esp
  414141:	mov    eax,0x7f7a4fe5
  414147:	stc    
  414148:	(bad)  
  414149:	mov    ebp,0x8fb6bdd
  41414e:	cld    
  41414f:	mov    ds:0x545ce1fe,eax
  414154:	shl    dl,0x39
  414157:	pop    ds
  414158:	or     ah,dh
  41415a:	dec    edi
  41415b:	sub    eax,0x1fe11692
  414160:	pushf  
  414161:	hlt    
  414162:	or     cl,BYTE PTR [edx+eax*2]
  414165:	push   es
  414166:	sar    DWORD PTR [edi-0x712eec67],0x7b
  41416d:	fstp   st(3)
  41416f:	push   esp
  414170:	std    
  414171:	cmp    dl,BYTE PTR ds:0xd4e61ebd
  414177:	clc    
  414178:	mov    ecx,0xe1b7ece2
  41417d:	ss add eax,esp
  414180:	xchg   ebx,eax
  414181:	(bad)  
  414182:	sar    DWORD PTR [edi+edx*2],1
  414185:	push   eax
  414186:	(bad)  
  414187:	dec    ebx
  414188:	push   0xffffffe3
  41418a:	(bad)  
  41418b:	xchg   ebx,eax
  41418c:	jno    0x414200
  41418e:	lahf   
  41418f:	or     BYTE PTR [eax-0x7d578d69],0xee
  414196:	xchg   DWORD PTR [esi-0x3398e25f],esi
  41419c:	lea    edx,[edi-0x7c054]
  4141a2:	cld    
  4141a3:	sbb    eax,0xc95352c3
  4141a8:	mov    edx,0x5f39d932
  4141ad:	nop
  4141ae:	fwait
  4141af:	or     esp,edi
  4141b1:	ja     0x41418b
  4141b3:	jae    0x41420f
  4141b5:	cld    
  4141b6:	stc    
  4141b7:	dec    ecx
  4141b8:	inc    ecx
  4141b9:	mov    eax,ds:0x9b050bae
  4141be:	sub    DWORD PTR [ecx],eax
  4141c0:	pop    ss
  4141c1:	jae    0x41423f
  4141c3:	retf   
  4141c4:	pop    ebx
  4141c5:	mov    ah,0x6e
  4141c7:	sub    eax,0x22fc8a7c
  4141cc:	fadd   QWORD PTR [edx-0x5e4ea886]
  4141d2:	mov    dl,0x5a
  4141d4:	dec    eax
  4141d5:	jg     0x41415b
  4141d7:	retf   0x18c4
  4141da:	mov    esi,0x654798ae
  4141df:	nop
  4141e0:	push   ebx
  4141e1:	jne    0x414179
  4141e3:	mov    al,0x99
  4141e5:	dec    ecx
  4141e6:	adc    DWORD PTR [esi],0xdfa5262e
  4141ec:	jae    0x4141ac
  4141ee:	mov    DWORD PTR [esi-0x80],ecx
  4141f1:	popa   
  4141f2:	sahf   
  4141f3:	jae    0x4141f2
  4141f5:	icebp  
  4141f6:	dec    edx
  4141f7:	xchg   esi,eax
  4141f8:	inc    ebx
  4141f9:	mov    ds:0x84ab8c34,eax
  4141fe:	in     eax,0x4f
  414200:	aam    0x40
  414202:	push   esp
  414203:	data16 and bh,BYTE PTR [eax+eiz*8]
  414207:	inc    esi
  414208:	aas    
  414209:	out    0x87,al
  41420b:	retf   0xfca4
  41420e:	and    eax,0xa26d8456
  414213:	adc    DWORD PTR [ebp-0x58c08053],0x42
  41421a:	fimul  WORD PTR [edi]
  41421c:	cld    
  41421d:	mov    esi,0x1c585ef9
  414222:	adc    al,BYTE PTR [eax-0x73]
  414225:	dec    eax
  414226:	test   eax,0xa43ed4b2
  41422b:	jge    0x41422d
  41422d:	inc    esi
  41422e:	loop   0x41423b
  414230:	out    0xba,al
  414232:	mov    dl,0xba
  414234:	or     bl,dh
  414236:	les    edx,FWORD PTR [edi]
  414238:	aad    0x26
  41423a:	dec    ebp
  41423b:	shl    BYTE PTR [edx],0x86
  41423e:	fninit 
  414240:	addr16 and bl,bh
  414243:	dec    edi
  414244:	imul   ebx,ebp,0x6
  414247:	icebp  
  414248:	stc    
  414249:	repz sbb BYTE PTR [ecx-0x3e],al
  41424d:	push   edx
  41424e:	out    0x77,al
  414250:	aaa    
  414251:	leave  
  414252:	test   DWORD PTR [edx-0x49],ebx
  414255:	pop    edi
  414256:	xor    BYTE PTR [edx],0x32
  414259:	mov    cl,0xae
  41425b:	mov    eax,0xdb3c5fb6
  414260:	xchg   ecx,eax
  414261:	push   ds
  414262:	xor    al,0x17
  414264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414265:	bound  edi,QWORD PTR [eax+0x2b]
  414268:	sar    BYTE PTR [edx-0x2c],0x93
  41426c:	repnz test eax,0xb74cf738
  414272:	popa   
  414273:	ins    DWORD PTR es:[edi],dx
  414274:	mov    edx,0x62a1e921
  414279:	in     al,dx
  41427a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41427b:	lahf   
  41427c:	xor    ecx,edi
  41427e:	add    bl,bl
  414280:	ins    DWORD PTR es:[edi],dx
  414281:	jo     0x4142e3
  414283:	or     eax,0x746ee42f
  414288:	call   0x8e272095
  41428d:	mov    cl,0x52
  41428f:	loope  0x41424a
  414291:	mov    eax,cs:0xaee803fa
  414297:	(bad)  
  414298:	hlt    
  414299:	inc    edx
  41429a:	jo     0x414291
  41429c:	(bad)  
  41429d:	icebp  
  41429e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41429f:	fldenv [eax+0x50]
  4142a2:	pushf  
  4142a3:	xor    eax,0x2ba74808
  4142a8:	adc    bh,BYTE PTR [edx+0x5b]
  4142ab:	xor    ah,BYTE PTR [ecx]
  4142ad:	and    DWORD PTR [eax-0x25ef14a5],ecx
  4142b3:	es jae 0x41426e
  4142b6:	xchg   ebp,eax
  4142b7:	pop    edi
  4142b8:	jmp    0x4b49:0x8f4a1a2f
  4142bf:	adc    eax,DWORD PTR [eax]
  4142c1:	sub    eax,0x4e386524
  4142c6:	mov    ds:0x6a6f1663,eax
  4142cb:	jno    0x41427a
  4142cd:	push   0xe1dfb553
  4142d2:	adc    ecx,edx
  4142d4:	pop    edi
  4142d5:	mov    ah,0x3d
  4142d7:	cmp    eax,0xa03a1992
  4142dc:	adc    DWORD PTR [edi+ebp*4-0x63],ecx
  4142e0:	inc    esi
  4142e1:	xchg   edx,eax
  4142e2:	cmc    
  4142e3:	push   ecx
  4142e4:	xchg   edi,eax
  4142e5:	pop    esp
  4142e6:	push   esp
  4142e7:	and    cl,ah
  4142e9:	jno    0x414298
  4142eb:	xchg   ebp,eax
  4142ec:	sti    
  4142ed:	adc    eax,0xbf3cdc6
  4142f2:	mov    edi,0xc4f593a
  4142f7:	in     al,0x1b
  4142f9:	mov    eax,ds:0xfe102dbb
  4142fe:	cdq    
  4142ff:	fwait
  414300:	push   eax
  414301:	es jge 0x414375
  414304:	cdq    
  414305:	xchg   ebp,eax
  414306:	mov    esp,0x380efdbd
  41430b:	xor    ebp,ecx
  41430d:	pop    ebx
  41430e:	or     ah,al
  414310:	(bad)  
  414311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414312:	mov    bl,0x7d
  414314:	push   edi
  414315:	and    eax,0x956d4c73
  41431a:	arpl   WORD PTR [esi-0x66],cx
  41431d:	scas   eax,DWORD PTR es:[edi]
  41431e:	jb     0x4142fe
  414320:	add    bh,al
  414322:	aam    0x92
  414324:	sub    eax,0x870c3501
  414329:	push   es
  41432a:	xchg   DWORD PTR [ecx-0x37b22f7b],esp
  414330:	mov    ecx,0x7d7aea19
  414335:	fist   DWORD PTR [ebx-0x51480ce8]
  41433b:	mov    al,ds:0x47e7efce
  414340:	daa    
  414341:	xchg   ecx,eax
  414342:	adc    DWORD PTR [ecx],eax
  414344:	mov    ch,0x91
  414346:	sub    BYTE PTR [ebx+0x1f],dl
  414349:	sbb    BYTE PTR [edi+0x6dcfb8fa],bl
  41434f:	fisub  DWORD PTR [esi+ebx*2]
  414352:	jl     0x4142fe
  414354:	mov    BYTE PTR [esp+ebx*8],bl
  414357:	cwde   
  414358:	adc    eax,0xd5fcab4c
  41435d:	pop    esi
  41435e:	out    dx,al
  41435f:	xor    eax,0xccf14634
  414364:	mov    ecx,0x8dc437e5
  414369:	sub    ah,bl
  41436b:	xor    DWORD PTR [ebp-0x3f],ebp
  41436e:	mov    edx,0x380d2ee4
  414373:	xchg   esp,eax
  414374:	push   eax
  414375:	scas   eax,DWORD PTR es:[edi]
  414376:	xchg   BYTE PTR [edx-0x60360817],cl
  41437c:	add    BYTE PTR [edi-0x71],bl
  41437f:	gs xchg esp,eax
  414381:	mov    BYTE PTR [ecx],ch
  414383:	sub    ebp,DWORD PTR [eax-0x75]
  414386:	and    DWORD PTR [esi+0x429bf8ac],ecx
  41438c:	cwde   
  41438d:	jmp    0xe063:0x39c9f35
  414394:	or     ebx,esi
  414396:	mov    al,0x39
  414398:	mov    esi,0x3b16e089
  41439d:	ja     0x4143c1
  41439f:	fsubr  QWORD PTR [edi-0x5f]
  4143a2:	pop    ebp
  4143a3:	xchg   BYTE PTR [edi+0x42a6884b],ch
  4143a9:	je     0x4143d8
  4143ab:	mov    eax,0xac6a91f1
  4143b0:	xor    esi,esp
  4143b2:	push   0x846574c6
  4143b7:	mov    DWORD PTR [edx+ebx*8],ebp
  4143ba:	and    eax,0xfddda6e7
  4143bf:	xor    ah,BYTE PTR [edx+eiz*4+0x2f]
  4143c3:	popf   
  4143c4:	xchg   edi,eax
  4143c5:	hlt    
  4143c6:	push   0xffffffa2
  4143c8:	lock adc DWORD PTR [edi+0x6eaaa9dc],eax
  4143cf:	loopne 0x41444f
  4143d1:	dec    ebp
  4143d2:	sub    ebp,DWORD PTR [edi]
  4143d4:	or     BYTE PTR [esi],dh
  4143d6:	mov    ebp,0x653c64d4
  4143db:	repnz dec esi
  4143dd:	dec    ecx
  4143de:	jbe    0x41437e
  4143e0:	das    
  4143e1:	inc    edi
  4143e2:	retf   
  4143e3:	out    0x27,eax
  4143e5:	mov    edi,0x2dd5644d
  4143ea:	sbb    BYTE PTR [ebx-0x5506e1da],bh
  4143f0:	push   ss
  4143f1:	xchg   edi,eax
  4143f2:	push   ds
  4143f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143f4:	dec    edi
  4143f5:	jns    0x41438c
  4143f7:	sbb    bh,ch
  4143f9:	daa    
  4143fa:	jp     0x414409
  4143fc:	jecxz  0x41439a
  4143fe:	ds jp  0x41445a
  414401:	cs cdq 
  414403:	xchg   bl,bl
  414405:	pop    esi
  414406:	adc    ah,BYTE PTR [edx+0x5c0c366c]
  41440c:	je     0x4143c1
  41440e:	stos   BYTE PTR es:[edi],al
  41440f:	push   edi
  414410:	mov    al,ds:0xa67fb396
  414415:	lods   eax,DWORD PTR ds:[esi]
  414416:	cmp    eax,0xfa677a84
  41441b:	test   BYTE PTR [ebx+0x35],0x82
  41441f:	push   esi
  414420:	dec    eax
  414421:	adc    esi,DWORD PTR [edi]
  414423:	into   
  414424:	lock in al,0xbb
  414427:	mov    edx,0xef995207
  41442c:	fnstenv [edx-0x6a202267]
  414432:	mov    dl,0xd1
  414435:	inc    ebp
  414436:	lods   eax,DWORD PTR ds:[esi]
  414437:	ds cdq 
  414439:	mov    DWORD PTR [ebx-0x7f],esp
  41443c:	std    
  41443d:	sub    DWORD PTR [edx-0x41],eax
  414440:	fcmovne st,st(5)
  414442:	arpl   WORD PTR [edi+0x7d],si
  414445:	cmp    al,0x78
  414447:	iret   
  414448:	mov    bh,0xf5
  41444a:	iret   
  41444b:	stc    
  41444c:	cmp    BYTE PTR [ebx+0x1a],0x1c
  414450:	fnstenv [esi+ecx*1-0x2705f070]
  414457:	inc    ebx
  414458:	sub    dl,dh
  41445a:	fsubr  DWORD PTR [edx]
  41445c:	je     0x414473
  41445e:	fidiv  DWORD PTR [edi+0x22]
  414461:	adc    BYTE PTR [esi+ecx*2-0x32],bh
  414465:	sub    DWORD PTR [ecx+0x57],esi
  414468:	clc    
  414469:	pop    ds
  41446a:	jp     0x41444c
  41446c:	popa   
  41446d:	ins    DWORD PTR es:[edi],dx
  41446e:	pop    edx
  41446f:	es ins BYTE PTR es:[edi],dx
  414471:	xchg   BYTE PTR [edi+0x581ab283],al
  414477:	push   eax
  414478:	fst    st(2)
  41447a:	in     eax,dx
  41447b:	lea    ebp,[ebp+0x6b705969]
  414481:	mov    ch,0x40
  414483:	(bad)  
  414485:	jae    0x4144cc
  414487:	mov    edx,0x849873f3
  41448c:	(bad)  
  41448d:	(bad)  
  41448e:	mov    ds:0x36d7f1f7,eax
  414493:	mov    WORD PTR [ecx+edi*2+0x7bd01658],es
  41449a:	imul   esi,DWORD PTR [edx+esi*1-0x8065619],0x4b12cd8b
  4144a5:	mov    eax,0xdab286fd
  4144aa:	pop    edi
  4144ab:	sbb    ch,BYTE PTR [eax+0x92993ff]
  4144b1:	out    0xc7,eax
  4144b3:	dec    ebp
  4144b4:	fs leave 
  4144b6:	stos   BYTE PTR es:[edi],al
  4144b7:	xor    BYTE PTR [edx+0x52314b67],bl
  4144bd:	add    DWORD PTR [edx-0x1ce73deb],ebx
  4144c3:	mov    dl,0x74
  4144c5:	and    al,0x72
  4144c7:	xlat   BYTE PTR ds:[ebx]
  4144c8:	cmp    cl,BYTE PTR [ebx-0x34778821]
  4144ce:	push   ecx
  4144cf:	xor    dl,BYTE PTR [eax]
  4144d1:	fldpi  
  4144d3:	inc    edx
  4144d4:	push   eax
  4144d5:	and    DWORD PTR [esi],edi
  4144d7:	fcomp  DWORD PTR [edx-0x1aa7477]
  4144dd:	or     bl,BYTE PTR [eax-0x2efd1d6e]
  4144e3:	sbb    cl,BYTE PTR [edi]
  4144e5:	fisub  DWORD PTR [edx]
  4144e7:	pop    ebp
  4144e8:	adc    ah,BYTE PTR [bp+di-0x1070]
  4144ed:	clc    
  4144ee:	call   0x6f49:0x97c9f2df
  4144f5:	push   0x7b
  4144f7:	push   ebp
  4144f8:	mov    ah,BYTE PTR [ecx+0x7919e117]
  4144fe:	lock and bh,BYTE PTR [ebp+0x4cd02819]
  414505:	xchg   edx,eax
  414506:	retf   0xeb36
  414509:	fisttp WORD PTR [ebx+0x51]
  41450c:	sub    BYTE PTR [edi],ah
  41450e:	adc    al,0xf6
  414510:	jge    0x41449a
  414512:	lea    ebx,[ecx]
  414514:	mov    eax,ds:0xd188d2e7
  414519:	ds cld 
  41451b:	dec    bx
  41451d:	or     BYTE PTR [eax+0x50dee497],al
  414523:	(bad)  
  414524:	or     ebp,DWORD PTR [edx]
  414526:	pop    eax
  414527:	cmp    eax,0x28be887f
  41452c:	ds in  eax,dx
  41452e:	rcr    esp,1
  414530:	lock cmp cl,cl
  414533:	fcom   QWORD PTR [ebx]
  414535:	rol    BYTE PTR [esi-0x2d],0xf
  414539:	ss and al,0x9f
  41453c:	fnstenv ss:[esp+eiz*4+0xe84cc80]
  414544:	clc    
  414545:	mov    edi,0x2c058316
  41454a:	mov    edx,0x89cc2926
  41454f:	xor    al,0x81
  414551:	fdivr  DWORD PTR ds:0x4334ce98
  414557:	ins    DWORD PTR es:[edi],dx
  414558:	cli    
  414559:	int3   
  41455a:	push   eax
  41455b:	inc    edx
  41455c:	es ins BYTE PTR es:[edi],dx
  41455e:	scas   al,BYTE PTR es:[edi]
  41455f:	mov    edx,0x8a753769
  414564:	jne    0x414591
  414566:	push   0x39
  414568:	or     eax,0xefc56e7e
  41456d:	or     dh,al
  41456f:	outs   dx,BYTE PTR ds:[esi]
  414570:	xchg   ebp,eax
  414571:	jns    0x41454e
  414573:	mov    DWORD PTR [bx+si-0x42ee],edi
  414578:	dec    BYTE PTR [esi+0x672aec13]
  41457e:	ds rcr ch,0x70
  414582:	sub    eax,esp
  414584:	lds    esp,FWORD PTR ds:0xcdb7a8e1
  41458a:	imul   ebp,esi,0x69
  41458d:	pop    ebp
  41458e:	cdq    
  41458f:	scas   eax,DWORD PTR es:[edi]
  414590:	ins    DWORD PTR es:[edi],dx
  414591:	or     ch,BYTE PTR [ebx-0x195acc34]
  414597:	mov    DWORD PTR [esi],eax
  414599:	push   ebx
  41459a:	mov    eax,ds:0x95d514cf
  41459f:	mov    edx,0xf039f4e8
  4145a4:	pop    es
  4145a5:	cdq    
  4145a6:	rcr    dl,cl
  4145a8:	imul   edi,DWORD PTR [ebx+0x7e],0x57
  4145ac:	jne    0x414554
  4145ae:	popf   
  4145af:	dec    edi
  4145b0:	out    dx,al
  4145b1:	shl    BYTE PTR ds:0x2b4055be,1
  4145b7:	enter  0x3e49,0x82
  4145bb:	or     eax,0xa62e859a
  4145c0:	movzx  eax,si
  4145c3:	mov    dh,0x15
  4145c5:	sbb    ch,BYTE PTR [ebp-0x67e6d636]
  4145cb:	jo     0x4145ed
  4145cd:	pop    ebx
  4145ce:	(bad)  
  4145d0:	jns    0x414645
  4145d2:	in     eax,0x71
  4145d4:	aam    0xe6
  4145d6:	jle    0x41456d
  4145d8:	mov    WORD PTR [esi+eiz*2-0x15],ds
  4145dc:	add    al,0x39
  4145de:	xchg   edx,eax
  4145df:	sbb    BYTE PTR [eax],ch
  4145e1:	test   DWORD PTR [eax],ecx
  4145e3:	hlt    
  4145e4:	fsub   DWORD PTR [ebp+0x2e]
  4145e7:	sbb    DWORD PTR [esi],ecx
  4145e9:	loope  0x41465d
  4145eb:	cli    
  4145ec:	mov    esi,0x4698c241
  4145f1:	adc    esi,DWORD PTR [edx]
  4145f3:	jno    0x41463d
  4145f5:	cwde   
  4145f6:	add    BYTE PTR [edx+eiz*2-0x58],dl
  4145fa:	mov    al,ds:0x2c961068
  4145ff:	nop
  414600:	adc    esi,DWORD PTR [esp+eax*8+0xc3b7420]
  414607:	call   0x880a:0x6a69
  41460d:	ds (bad) 
  41460f:	and    esi,esi
  414611:	jns    0x414658
  414613:	sbb    al,0x85
  414615:	or     BYTE PTR [eax],bh
  414617:	push   es
  414618:	popf   
  414619:	and    DWORD PTR [ebp+0x15a6d46a],edi
  41461f:	in     eax,0x31
  414621:	test   al,0xa
  414623:	jb     0x4145ae
  414625:	sar    DWORD PTR [ebx+edx*2],0xe
  414629:	call   0x571:0xcd46fca9
  414630:	loopne 0x41460c
  414632:	sbb    bl,BYTE PTR [ebx]
  414634:	inc    edi
  414635:	icebp  
  414636:	ins    BYTE PTR es:[edi],dx
  414637:	sub    bl,BYTE PTR [ebx-0x51]
  41463a:	adc    dh,BYTE PTR [esi-0x7]
  41463d:	inc    edi
  41463e:	fst    QWORD PTR [edx-0x3d]
  414641:	jnp    0x4145fc
  414643:	sub    al,0xec
  414645:	pop    edi
  414646:	mov    bh,0xb0
  414648:	loopne 0x414625
  41464a:	dec    ebx
  41464b:	scas   eax,DWORD PTR es:[edi]
  41464c:	sbb    al,0xad
  41464e:	lock fist WORD PTR [esi+0x6f]
  414652:	add    al,0xa9
  414654:	xchg   BYTE PTR [ebp+0x5ffa820f],dh
  41465a:	push   es
  41465b:	mov    ds:0x1377c476,al
  414660:	in     al,dx
  414661:	add    al,0x91
  414663:	je     0x414652
  414665:	popf   
  414666:	in     eax,0x3a
  414668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414669:	popa   
  41466a:	arpl   WORD PTR [ebp-0x35],si
  41466d:	gs mov ecx,0x83a865c3
  414673:	fs push edi
  414675:	mov    bl,0x5f
  414677:	mov    edx,DWORD PTR [ebp-0x2f]
  41467a:	stos   BYTE PTR es:[edi],al
  41467b:	lahf   
  41467c:	sbb    BYTE PTR [edi+0x6c9164a5],ah
  414682:	mov    ebp,0x15b501a3
  414687:	icebp  
  414688:	retf   0xe18a
  41468b:	(bad)  
  41468c:	fs cmc 
  41468e:	inc    eax
  41468f:	xor    BYTE PTR [eax],dh
  414691:	in     al,dx
  414692:	outs   dx,BYTE PTR ds:[esi]
  414693:	and    ch,ah
  414695:	xchg   BYTE PTR [ecx-0x19],al
  414698:	ins    BYTE PTR es:[edi],dx
  414699:	data16 ficomp WORD PTR [ecx-0x12f33dc9]
  4146a0:	sbb    esp,DWORD PTR [edi-0x16]
  4146a3:	bts    ecx,esi
  4146a6:	add    BYTE PTR [ebp+0x0],cl
  4146a9:	(bad)  
  4146ab:	mov    esp,0xe287bfbb
  4146b0:	loope  0x41467c
  4146b2:	out    dx,eax
  4146b3:	stc    
  4146b4:	arpl   WORD PTR [eax-0x65],cx
  4146b7:	imul   ebx,eax,0x1ca511b2
  4146bd:	ds iret 
  4146bf:	sbb    BYTE PTR [eax],0xc
  4146c2:	out    dx,eax
  4146c3:	and    ecx,DWORD PTR [eax+0x6a3400df]
  4146c9:	je     0x4146a4
  4146cb:	push   ss
  4146cc:	lods   eax,DWORD PTR ds:[esi]
  4146cd:	in     al,dx
  4146ce:	leave  
  4146cf:	push   esp
  4146d0:	sar    dl,cl
  4146d2:	pop    ss
  4146d3:	cmp    dl,bh
  4146d5:	inc    ebx
  4146d6:	loop   0x41468f
  4146d8:	xchg   ebp,eax
  4146d9:	jb     0x4146a6
  4146db:	dec    esp
  4146dc:	je     0x4146a7
  4146de:	sbb    BYTE PTR [eax+0x7e],cl
  4146e1:	outs   dx,BYTE PTR ds:[esi]
  4146e2:	ins    DWORD PTR es:[edi],dx
  4146e3:	mov    ch,0xf3
  4146e5:	fnstsw WORD PTR [edi+0x472965ee]
  4146eb:	rol    cl,1
  4146ed:	stos   DWORD PTR es:[edi],eax
  4146ee:	add    al,0x75
  4146f0:	test   bh,bh
  4146f2:	int3   
  4146f3:	xchg   cl,bh
  4146f5:	pusha  
  4146f6:	outs   dx,BYTE PTR ds:[esi]
  4146f7:	mov    bl,0xb0
  4146f9:	pop    ds
  4146fa:	push   ds
  4146fb:	cmp    ecx,ebp
  4146fd:	dec    edi
  4146fe:	sbb    al,0x63
  414700:	add    ebx,DWORD PTR [edi+0x1d]
  414703:	dec    ecx
  414704:	test   eax,0xb6365258
  414709:	and    ebx,esp
  41470b:	cmp    al,0x65
  41470d:	sbb    al,0x25
  41470f:	add    eax,0xa631a2a1
  414714:	pop    ss
  414715:	mov    bh,0x9
  414717:	pop    esi
  414718:	jns    0x41474d
  41471a:	mov    bh,0x3f
  41471c:	xchg   cl,ch
  41471e:	aaa    
  41471f:	bound  esp,QWORD PTR [ebp-0x33]
  414722:	inc    ebp
  414723:	popa   
  414724:	lahf   
  414725:	addr16 mov ecx,0xfb4ea80a
  41472b:	iret   
  41472c:	and    DWORD PTR [eax+0xd665dad],esi
  414732:	ins    BYTE PTR es:[edi],dx
  414733:	xor    esi,DWORD PTR [edi-0x8]
  414736:	mov    DWORD PTR [edi+0x4d6533a0],eax
  41473c:	call   FWORD PTR [esi+0x303d020d]
  414742:	lods   al,BYTE PTR ds:[esi]
  414743:	add    cl,al
  414745:	push   ds
  414746:	test   DWORD PTR [edi-0x6c],edi
  414749:	xor    al,0xe7
  41474b:	into   
  41474c:	and    edi,DWORD PTR [edx-0x2a]
  41474f:	ins    DWORD PTR es:[edi],dx
  414750:	data16 outs dx,BYTE PTR ds:[esi]
  414752:	mov    dl,0xa8
  414754:	std    
  414755:	pop    esi
  414756:	fdivr  QWORD PTR [ecx]
  414758:	xchg   esi,eax
  414759:	push   ss
  41475a:	das    
  41475b:	les    edi,FWORD PTR [ebx]
  41475d:	out    dx,eax
  41475e:	pop    ds
  41475f:	icebp  
  414760:	scas   al,BYTE PTR es:[edi]
  414761:	in     eax,dx
  414762:	ja     0x41474f
  414764:	pushf  
  414765:	mov    ebp,0xce13d360
  41476a:	call   0xfc7786c9
  41476f:	inc    edi
  414770:	fwait
  414771:	adc    al,0x9e
  414773:	fild   QWORD PTR [eax-0x72718851]
  414779:	(bad)  
  41477a:	ret    
  41477b:	popf   
  41477c:	pop    eax
  41477d:	jo     0x414727
  41477f:	div    DWORD PTR [esi+0x143679da]
  414785:	cmc    
  414786:	test   BYTE PTR [ecx],ch
  414788:	call   0x2dab:0x1fa68b98
  41478f:	push   edi
  414790:	sub    eax,0xf54bbb0f
  414795:	pop    edx
  414796:	std    
  414797:	pop    ds
  414798:	mov    cl,0x5
  41479a:	xchg   esi,eax
  41479b:	ins    DWORD PTR es:[edi],dx
  41479c:	inc    ebx
  41479d:	xchg   esp,eax
  41479e:	mov    cl,BYTE PTR [eax+0xe413895]
  4147a4:	mov    eax,ds:0xf18f0122
  4147a9:	cwde   
  4147aa:	test   DWORD PTR [edx-0x5bef4d07],esp
  4147b0:	jne    0x4147e0
  4147b2:	push   ds
  4147b3:	pop    esp
  4147b4:	js     0x414777
  4147b6:	rcl    DWORD PTR [eax],1
  4147b8:	xchg   BYTE PTR [esi-0x65],ch
  4147bb:	mov    al,ds:0x2ec83f89
  4147c0:	lea    esi,[eax-0x50]
  4147c3:	sub    ebp,ebx
  4147c5:	cwde   
  4147c6:	mov    DWORD PTR [eax+0x2f84ed1f],edx
  4147cc:	ficom  DWORD PTR ds:0xfb2ca0d8
  4147d2:	and    al,0x32
  4147d4:	or     edi,esi
  4147d6:	or     DWORD PTR [eax-0x57],0x4c29c205
  4147dd:	mov    bh,ch
  4147df:	(bad)  
  4147e0:	cld    
  4147e1:	pop    ebx
  4147e2:	outs   dx,DWORD PTR ds:[esi]
  4147e3:	mov    edi,0x24167bb2
  4147e8:	ja     0x4147fb
  4147ea:	sbb    edi,DWORD PTR [eax+0x159d6a79]
  4147f0:	push   es
  4147f1:	and    al,0x41
  4147f3:	fcmovnu st,st(3)
  4147f5:	scas   al,BYTE PTR es:[edi]
  4147f6:	inc    eax
  4147f7:	mov    ebx,edi
  4147f9:	fsub   DWORD PTR [edx+0x75]
  4147fc:	div    ebp
  4147fe:	cmp    BYTE PTR [esi-0x66732b8e],cl
  414804:	mov    eax,0xb2b012cb
  414809:	ret    0xef6f
  41480c:	cli    
  41480d:	in     al,0x3d
  41480f:	pop    ds
  414810:	jmp    0x414812
  414812:	dec    edi
  414813:	(bad)  
  414814:	fstp   DWORD PTR [edx]
  414816:	adc    DWORD PTR [ecx],edx
  414818:	pop    ebp
  414819:	mov    cl,0x5d
  41481b:	cmp    al,0xa8
  41481d:	push   ebx
  41481e:	(bad)  
  414820:	push   cs
  414821:	jg     0x41488d
  414823:	mov    eax,0x9f4242bb
  414828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414829:	mov    ah,0x20
  41482b:	pop    ss
  41482c:	ds in  al,dx
  41482e:	enter  0xe984,0xfa
  414832:	mov    dh,0x85
  414834:	and    BYTE PTR [ebx+0x3141b015],ch
  41483a:	pop    es
  41483b:	push   edi
  41483c:	outs   dx,DWORD PTR ds:[esi]
  41483d:	pop    esi
  41483e:	xor    eax,0xbab8f70
  414843:	push   cs
  414844:	mov    eax,0x11935de1
  414849:	cli    
  41484a:	sbb    DWORD PTR ds:0xf5e426f6,eax
  414850:	and    ch,ch
  414852:	sbb    DWORD PTR [ebx],esp
  414854:	iret   
  414855:	test   bl,cl
  414857:	(bad)  
  414858:	jbe    0x414838
  41485a:	mov    bh,0x7a
  41485c:	or     eax,0x39e5369d
  414861:	push   ebx
  414862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414863:	pushf  
  414864:	inc    edi
  414865:	mov    bl,0x5
  414867:	je     0x414863
  414869:	and    ah,bh
  41486b:	je     0x41487c
  41486d:	fsub   QWORD PTR [ecx+ecx*1-0x4f]
  414871:	jmp    0xe47b5ca7
  414876:	fidiv  WORD PTR ds:0x54f0a171
  41487c:	pop    ss
  41487d:	xchg   BYTE PTR [esi],al
  41487f:	sbb    cl,bh
  414881:	ins    DWORD PTR es:[edi],dx
  414882:	xchg   ebp,eax
  414883:	sar    DWORD PTR [esi],0xa2
  414886:	add    esi,DWORD PTR [esi+0x2f]
  414889:	add    ebp,DWORD PTR [edi]
  41488b:	push   ss
  41488c:	jmp    0x4148db
  41488e:	test   DWORD PTR [esi+0x54a8a276],esi
  414894:	mov    WORD PTR [ebp+0x523fa5b2],cs
  41489a:	in     eax,dx
  41489b:	out    0xcd,eax
  41489d:	leave  
  41489e:	test   al,0x89
  4148a0:	test   al,0xfb
  4148a2:	clc    
  4148a3:	jl     0x41483d
  4148a5:	das    
  4148a6:	es adc bh,0xf9
  4148aa:	sbb    al,0xbd
  4148ac:	test   al,0x44
  4148ae:	cmp    al,0xea
  4148b0:	popf   
  4148b1:	pop    DWORD PTR [edx-0x347d3c1]
  4148b7:	mov    dh,0xbb
  4148b9:	xchg   ebp,eax
  4148ba:	in     eax,dx
  4148bb:	sub    DWORD PTR [esi+eax*8+0x6f],ebp
  4148bf:	fisubr WORD PTR [ebp-0x22]
  4148c2:	xchg   edx,eax
  4148c3:	jg     0x4148a1
  4148c5:	xchg   esp,eax
  4148c6:	mov    ebx,0xbb30e63
  4148cb:	add    BYTE PTR [ebp+0x7f],ch
  4148ce:	inc    eax
  4148cf:	xchg   esp,eax
  4148d0:	fild   WORD PTR [ecx+eax*2-0x1195b155]
  4148d7:	popa   
  4148d8:	cli    
  4148d9:	vscalefss xmm7{k6},xmm5,DWORD PTR [ecx]
  4148df:	in     al,0x37
  4148e1:	loope  0x414924
  4148e3:	sar    BYTE PTR [eax],1
  4148e5:	adc    DWORD PTR [eax-0x1722178f],ecx
  4148eb:	adc    al,0xe8
  4148ed:	push   esi
  4148ee:	inc    ebx
  4148ef:	pop    ss
  4148f0:	idiv   dl
  4148f2:	mov    edx,0x9c5a802c
  4148f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148f8:	xchg   ebp,eax
  4148f9:	mov    edx,cr6
  4148fc:	xor    ebp,esp
  4148fe:	repnz (bad) 
  414901:	adc    al,0xd4
  414903:	fsubr  DWORD PTR [edi-0x67519adb]
  414909:	mov    dl,0x14
  41490b:	inc    edi
  41490c:	jmp    0x41494b
  41490e:	mov    ecx,DWORD PTR [ecx+0x3c4f4b4a]
  414914:	and    dh,BYTE PTR [esp+edx*8-0x27]
  414918:	and    bh,dl
  41491a:	dec    ebp
  41491b:	xchg   esp,eax
  41491c:	xor    eax,0xe605ce4a
  414921:	mov    esp,0xa5db9589
  414926:	push   ecx
  414927:	mov    edx,0x2f921592
  41492c:	and    DWORD PTR [edx],eax
  41492e:	dec    ebp
  41492f:	mov    eax,0x6d19e9cc
  414934:	xchg   edx,eax
  414935:	sbb    edx,DWORD PTR [edx]
  414937:	xor    al,0x4b
  414939:	scas   al,BYTE PTR es:[edi]
  41493a:	jne    0x414927
  41493c:	sbb    al,0xf2
  41493e:	lds    ebp,FWORD PTR [ebp-0x21]
  414941:	pop    es
  414942:	not    BYTE PTR [edi+0x1f8d59fa]
  414948:	lahf   
  414949:	jecxz  0x414936
  41494b:	adc    BYTE PTR [edi+0x368bf803],cl
  414951:	inc    esi
  414952:	and    DWORD PTR [ebp+0x32],ebx
  414955:	push   eax
  414956:	mov    ecx,0x4a801379
  41495b:	iret   
  41495c:	jge    0x414998
  41495e:	retf   0x2190
  414961:	mov    dh,0x79
  414963:	ins    BYTE PTR es:[edi],dx
  414964:	fmulp  st(5),st
  414966:	hlt    
  414967:	inc    edx
  414968:	cmp    ah,BYTE PTR [eax+0x5]
  41496b:	test   BYTE PTR [esi],0x4f
  41496e:	adc    edx,ebp
  414970:	in     eax,0x7a
  414972:	dec    esi
  414973:	test   edx,edi
  414975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414976:	aas    
  414977:	(bad)  
  414978:	jge    0x4149dc
  41497a:	ror    BYTE PTR [edx+0x5],0x87
  41497e:	ss inc edx
  414980:	jnp    0x414958
  414982:	or     bh,BYTE PTR [ebx-0x412c4d87]
  414988:	je     0x41498d
  41498a:	aam    0x72
  41498c:	jl     0x4149c4
  41498e:	icebp  
  41498f:	pop    esp
  414990:	addr16 pop ds
  414992:	and    esp,DWORD PTR [bp+di]
  414995:	xchg   esp,eax
  414996:	and    al,0x3
  414998:	pop    edx
  414999:	(bad)  
  41499a:	pop    eax
  41499b:	das    
  41499c:	out    dx,al
  41499d:	push   0x60
  41499f:	inc    edi
  4149a0:	dec    esi
  4149a1:	add    BYTE PTR [eax+edx*2+0x1faf8e44],bh
  4149a8:	xchg   esi,eax
  4149a9:	cwde   
  4149aa:	repz fisttp WORD PTR [eax+0x144e7fb3]
  4149b1:	sbb    al,0x95
  4149b3:	addr16 pop es
  4149b5:	adc    BYTE PTR [ebx-0x78],bl
  4149b8:	loop   0x41494e
  4149ba:	icebp  
  4149bb:	jno    0x4149d9
  4149bd:	lds    esp,FWORD PTR [edi+0x30]
  4149c0:	stc    
  4149c1:	dec    edi
  4149c2:	in     eax,dx
  4149c3:	mov    edi,0xe11b0ced
  4149c8:	hlt    
  4149c9:	retf   
  4149ca:	rcl    BYTE PTR [edx],1
  4149cc:	paddq  mm5,QWORD PTR [ecx-0x678de151]
  4149d3:	xchg   ecx,eax
  4149d4:	or     al,0x86
  4149d6:	xchg   DWORD PTR [edx+0x36d8df8d],edx
  4149dc:	and    ah,BYTE PTR [edi+0x5a]
  4149df:	fs jecxz 0x414a04
  4149e2:	imul   ecx,DWORD PTR [esi+0x7c8ce91f],0x7a015e93
  4149ec:	test   bl,al
  4149ee:	les    ebp,FWORD PTR [edi]
  4149f0:	pop    edi
  4149f1:	fsubr  DWORD PTR [eax+ebx*2]
  4149f4:	adc    eax,0x80f4e67e
  4149f9:	mov    bl,0x85
  4149fb:	xlat   BYTE PTR ds:[ebx]
  4149fc:	dec    ebx
  4149fd:	loope  0x414a60
  4149ff:	fcmovb st,st(4)
  414a01:	or     ebp,eax
  414a03:	into   
  414a04:	xchg   edi,eax
  414a05:	xlat   BYTE PTR ds:[ebx]
  414a06:	jae    0x414997
  414a08:	adc    eax,0x81790779
  414a0d:	push   es
  414a0e:	ret    
  414a0f:	in     al,0x9c
  414a11:	push   0xd
  414a13:	aam    0x5c
  414a15:	imul   ebx,DWORD PTR [esp+ebp*8+0x15],0x4b
  414a1a:	mov    bh,0x60
  414a1c:	(bad)  
  414a1d:	sub    DWORD PTR [edx+0x3bea7898],ebx
  414a23:	and    bl,BYTE PTR [ebx+0x7d927966]
  414a29:	sub    DWORD PTR [esi],eax
  414a2b:	mov    bh,0xeb
  414a2d:	push   0x5022e8db
  414a32:	mov    al,0x45
  414a34:	push   es
  414a35:	dec    esi
  414a36:	mov    dh,0x69
  414a38:	popf   
  414a39:	push   ebp
  414a3a:	iret   
  414a3b:	test   BYTE PTR ds:0x8c55fdd3,0xb4
  414a42:	jle    0x414a0b
  414a44:	loopne 0x414a0b
  414a46:	in     al,dx
  414a47:	mov    cl,0xa0
  414a49:	jne    0x414a6b
  414a4b:	push   ss
  414a4c:	cmp    DWORD PTR [ebx],esp
  414a4e:	jge    0x414a97
  414a50:	mov    dl,0xca
  414a52:	cmp    eax,0xb8ee6962
  414a57:	ficom  DWORD PTR [ebp+0x52]
  414a5a:	cmp    DWORD PTR es:[esi-0xe],0xffffff9e
  414a5f:	dec    esp
  414a60:	shl    DWORD PTR ds:0x6b1c6d6c,cl
  414a66:	adc    BYTE PTR [ebp*2-0x2ef33c58],dl
  414a6d:	dec    edx
  414a6e:	and    eax,0xca713aeb
  414a73:	mov    dl,0xb6
  414a75:	sub    DWORD PTR [edx-0x19],esp
  414a78:	(bad)  
  414a79:	cli    
  414a7a:	xlat   BYTE PTR ds:[ebx]
  414a7b:	fisttp QWORD PTR [ebp+eiz*4+0x6dead375]
  414a82:	mov    ch,0xaf
  414a84:	jb     0x414a35
  414a86:	mov    ebx,0x7c3ecaee
  414a8b:	cld    
  414a8c:	sahf   
  414a8d:	sahf   
  414a8e:	fmul   DWORD PTR [edx-0x20]
  414a91:	jle    0x414af6
  414a93:	das    
  414a94:	jle    0x414a52
  414a96:	jbe    0x414ac3
  414a98:	into   
  414a99:	fisub  DWORD PTR [eax-0x55]
  414a9c:	pop    edx
  414a9d:	popa   
  414a9e:	jle    0x414aa0
  414aa0:	cli    
  414aa1:	(bad)  
  414aa2:	(bad)  
  414aa3:	and    DWORD PTR [ebx-0x3a],edx
  414aa6:	out    dx,eax
  414aa7:	dec    esi
  414aa8:	in     eax,0x58
  414aaa:	scas   al,BYTE PTR es:[edi]
  414aab:	cmp    cl,BYTE PTR [ebx+0x59]
  414aae:	xchg   DWORD PTR [edx-0x7fe7faf9],esp
  414ab4:	mov    ah,0x51
  414ab6:	xor    eax,0xe89fce60
  414abb:	stos   BYTE PTR es:[edi],al
  414abc:	shr    DWORD PTR [esi-0x136dc41],cl
  414ac2:	clc    
  414ac3:	outs   dx,BYTE PTR ds:[esi]
  414ac4:	(bad)  
  414ac5:	xor    al,0xa9
  414ac7:	mov    ebp,0xbbaa45ff
  414acc:	fstp   DWORD PTR [ebx-0x20]
  414acf:	icebp  
  414ad0:	mov    esp,0xb7ece0a5
  414ad5:	fwait
  414ad6:	mov    cl,BYTE PTR ds:0xb6a14586
  414adc:	xor    eax,0x99e5d59b
  414ae1:	shl    cl,1
  414ae3:	pop    esp
  414ae4:	fsubr  DWORD PTR [edx]
  414ae6:	push   esi
  414ae7:	inc    esi
  414ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ae9:	aaa    
  414aea:	inc    eax
  414aeb:	repnz and eax,0x80a5ffdb
  414af1:	sbb    dh,BYTE PTR [ebx+0x3e54192]
  414af7:	mov    esp,0x3f495423
  414afc:	sub    eax,0xa52383d9
  414b01:	daa    
  414b02:	mov    esp,0xd4b8f9a5
  414b07:	adc    DWORD PTR [ebx+edx*8],esi
  414b0a:	push   ebp
  414b0b:	fisub  DWORD PTR [edi]
  414b0d:	outs   dx,BYTE PTR ds:[esi]
  414b0e:	inc    ecx
  414b0f:	cli    
  414b10:	push   0xffffffc5
  414b12:	and    al,0xd3
  414b14:	dec    eax
  414b15:	adc    al,0x73
  414b17:	pop    esp
  414b18:	ja     0x414b32
  414b1a:	loopne 0x414ae4
  414b1c:	push   0xad15f6ed
  414b21:	jo     0x414b64
  414b23:	loope  0x414ada
  414b25:	pop    esp
  414b26:	adc    ecx,DWORD PTR [edi+0x61]
  414b29:	leave  
  414b2a:	not    ecx
  414b2c:	(bad)  [edi+edx*4+0x586e4010]
  414b33:	outs   dx,BYTE PTR ds:[esi]
  414b34:	adc    ch,BYTE PTR [edx]
  414b36:	lahf   
  414b37:	mov    eax,ds:0x94ed5adc
  414b3c:	add    BYTE PTR [eax],0xa0
  414b3f:	jb     0x414b20
  414b41:	xlat   BYTE PTR ds:[ebx]
  414b42:	lea    ebp,[edi-0x3b31bc41]
  414b48:	and    DWORD PTR [ecx],0x1e
  414b4b:	jnp    0x414ada
  414b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b4e:	wrmsr  
  414b50:	xchg   esp,eax
  414b51:	clc    
  414b52:	sub    eax,0x6acad85e
  414b57:	popf   
  414b58:	sbb    BYTE PTR ds:0x8c8a6b2f,bh
  414b5e:	inc    edx
  414b5f:	stos   BYTE PTR es:[edi],al
  414b60:	ins    DWORD PTR es:[edi],dx
  414b61:	lock in al,dx
  414b63:	jne    0x414b56
  414b65:	mov    ch,0x91
  414b67:	test   eax,0xe2dd71c7
  414b6c:	mov    dh,0x9c
  414b6e:	inc    eax
  414b6f:	pop    ecx
  414b70:	mov    dl,0xbd
  414b72:	sub    edx,edi
  414b74:	es int3 
  414b76:	push   ebx
  414b77:	daa    
  414b78:	adc    ecx,DWORD PTR [ecx]
  414b7a:	pop    esi
  414b7b:	dec    esp
  414b7c:	dec    esi
  414b7d:	rol    DWORD PTR [ebx-0x7c],1
  414b80:	arpl   bp,dx
  414b82:	cdq    
  414b83:	(bad)  
  414b84:	out    dx,eax
  414b85:	pop    edi
  414b86:	jo     0x414bc3
  414b88:	icebp  
  414b89:	pop    ebx
  414b8a:	adc    dh,bl
  414b8c:	les    esi,FWORD PTR [edi+0x3d]
  414b8f:	jnp    0x414b2e
  414b91:	mov    edi,0x2d169433
  414b96:	sahf   
  414b97:	into   
  414b98:	cmp    DWORD PTR [ebp+0x43b86dfa],esi
  414b9e:	push   ebp
  414b9f:	repnz xchg esp,eax
  414ba1:	or     al,0x8b
  414ba3:	sub    eax,0x95e1eb64
  414ba8:	mov    ah,0x8a
  414baa:	sub    DWORD PTR ss:[edx],esi
  414bad:	jmp    0xf0089b9
  414bb2:	push   ecx
  414bb3:	pop    ebx
  414bb4:	push   es
  414bb5:	pop    ds
  414bb6:	je     0x414b8e
  414bb8:	mov    ecx,0xe8bff83
  414bbd:	das    
  414bbe:	hlt    
  414bbf:	rol    DWORD PTR ds:0x73926a00,1
  414bc5:	cwde   
  414bc6:	mov    cl,0xa5
  414bc8:	retf   0xaa1e
  414bcb:	dec    ebx
  414bcc:	mov    al,ds:0xca82187c
  414bd1:	imul   ecx,DWORD PTR [eax-0x67],0xcadde683
  414bd8:	jl     0x414bd4
  414bda:	xchg   BYTE PTR [ecx-0x18],bh
  414bdd:	and    BYTE PTR [edx-0x34ed8b93],dh
  414be3:	mov    al,0x9a
  414be5:	cmp    DWORD PTR [ebp+0x2a1c8e8c],ebp
  414beb:	dec    ecx
  414bec:	enter  0xf41f,0x90
  414bf0:	push   es
  414bf1:	xchg   edi,eax
  414bf2:	push   esi
  414bf3:	lea    esi,cs:[esi-0x40]
  414bf7:	fidivr DWORD PTR [eax]
  414bf9:	sbb    ebp,0x37
  414bfc:	rcl    DWORD PTR [ebp+0x30],cl
  414bff:	jg     0x414bc1
  414c01:	stos   DWORD PTR es:[edi],eax
  414c02:	mov    dh,0x26
  414c04:	pusha  
  414c05:	and    BYTE PTR [ecx],0x5a
  414c08:	mov    ebx,0x58357530
  414c0d:	add    edx,edi
  414c0f:	out    0xf3,eax
  414c11:	dec    eax
  414c12:	aas    
  414c13:	push   ecx
  414c14:	dec    esp
  414c15:	add    DWORD PTR [edi],ecx
  414c17:	xor    ebx,DWORD PTR [ecx+0x5a]
  414c1a:	jbe    0x414c18
  414c1c:	cmp    ebp,esi
  414c1e:	rcl    BYTE PTR [edx],0x33
  414c21:	ss adc eax,0x40787289
  414c27:	sub    al,0x76
  414c29:	xchg   edi,eax
  414c2a:	lock dec ecx
  414c2c:	mov    eax,ds:0x31498b1e
  414c31:	lock adc al,0xe
  414c34:	mov    al,0x61
  414c36:	mov    esi,0x5ffa1777
  414c3b:	js     0x414cab
  414c3d:	xchg   esp,eax
  414c3e:	jl     0x414bf4
  414c40:	scas   al,BYTE PTR es:[edi]
  414c41:	rol    DWORD PTR [ebx-0x2],1
  414c44:	xchg   ebp,eax
  414c45:	jmp    0x87c1:0x332156b3
  414c4c:	jp     0x414c12
  414c4e:	add    edi,DWORD PTR [eax+0x15]
  414c51:	or     DWORD PTR [ebp+0x5743e1f4],edi
  414c57:	mov    es,ebx
  414c59:	aaa    
  414c5a:	jns    0x414c0e
  414c5c:	mov    ebp,0xe2c2cebe
  414c61:	xchg   ebp,eax
  414c62:	std    
  414c63:	push   es
  414c64:	jp     0x414c10
  414c66:	mov    bl,dl
  414c68:	pusha  
  414c69:	xchg   esi,eax
  414c6a:	push   ebp
  414c6b:	push   0xfffffff8
  414c6d:	push   edi
  414c6e:	lods   eax,DWORD PTR ds:[esi]
  414c6f:	lds    ebp,FWORD PTR [ecx+esi*4]
  414c72:	std    
  414c73:	stc    
  414c74:	in     eax,dx
  414c75:	mov    al,gs:0xca9745d
  414c7b:	or     dh,0xe0
  414c7e:	jl     0x414c3f
  414c80:	sbb    al,0x51
  414c82:	pop    ds
  414c83:	test   DWORD PTR [ebx-0x41f3665c],edi
  414c89:	idiv   BYTE PTR [esp+edi*2-0x66bd6701]
  414c90:	mov    ebp,0xb3b61231
  414c95:	sub    DWORD PTR [esi],0xddffdc18
  414c9b:	out    0x17,eax
  414c9d:	or     ecx,edx
  414c9f:	or     eax,0xbafd7b43
  414ca4:	mov    ss,WORD PTR [esi+0x28]
  414ca7:	je     0x414c2f
  414ca9:	aam    0xac
  414cab:	adc    ecx,eax
  414cad:	jae    0x414ca3
  414caf:	and    eax,0x90f23b4a
  414cb4:	jg     0x414c8c
  414cb6:	outs   dx,BYTE PTR ds:[esi]
  414cb7:	jg     0x414cae
  414cb9:	ds xor eax,0x36c038e7
  414cbf:	dec    eax
  414cc0:	adc    BYTE PTR [ecx+0xc15a1d3],ch
  414cc6:	add    al,0x75
  414cc8:	pop    es
  414cc9:	dec    esi
  414cca:	data16 rcl ah,0x52
  414cce:	xchg   edx,eax
  414ccf:	mov    eax,0x19d86e8a
  414cd4:	sub    BYTE PTR [edi],bh
  414cd6:	repnz es pop ds
  414cd9:	(bad)  
  414cda:	push   esi
  414cdb:	mov    al,0xf5
  414cdd:	addr16 loopne 0x414c76
  414ce0:	push   es
  414ce1:	adc    BYTE PTR [eax*2+0xda91ba],al
  414ce8:	cmc    
  414ce9:	in     al,dx
  414cea:	jns    0x414d30
  414cec:	enter  0x85f4,0x9b
  414cf0:	jnp    0x414cb1
  414cf2:	adc    dl,BYTE PTR [ecx]
  414cf4:	pop    eax
  414cf5:	stos   BYTE PTR es:[edi],al
  414cf6:	mov    esi,0x74cbdb40
  414cfb:	jno    0x414d11
  414cfd:	jmp    0x1d89:0x27d274e
  414d04:	outs   dx,DWORD PTR ds:[esi]
  414d05:	mov    ebp,0xf3adcb8
  414d0a:	jbe    0x414cbe
  414d0c:	pop    edi
  414d0d:	xchg   ebp,eax
  414d0e:	and    esi,eax
  414d10:	mov    BYTE PTR [esi+0x1d],dh
  414d13:	(bad)  
  414d15:	adc    esi,DWORD PTR [edi]
  414d17:	mov    al,BYTE PTR [ecx+0x2f]
  414d1a:	in     eax,dx
  414d1b:	(bad)  
  414d1c:	sti    
  414d1d:	mov    ah,0x11
  414d1f:	call   0xeb390ec3
  414d24:	fs push 0x7b
  414d27:	sub    BYTE PTR [ebp-0x7aed73bd],ch
  414d2d:	mov    ds:0xaea54b89,al
  414d32:	mov    bl,0x97
  414d34:	mov    eax,ds:0xd0b81c21
  414d39:	ficom  DWORD PTR [edx+0x7]
  414d3c:	fadd   DWORD PTR [edi-0x51]
  414d3f:	test   BYTE PTR [edi+ecx*8+0x63c2be9e],al
  414d46:	(bad)  
  414d47:	es xchg esi,eax
  414d49:	mov    bh,0x2e
  414d4b:	cwde   
  414d4c:	lock mov ch,0xb1
  414d4f:	add    DWORD PTR [edx+0x19228759],esi
  414d55:	sub    DWORD PTR [ebx+0x2e458e9f],ecx
  414d5b:	jnp    0x414da8
  414d5d:	(bad)  
  414d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d5f:	test   al,0x45
  414d61:	mov    ebp,0x7faa5989
  414d66:	lock psubusw mm2,QWORD PTR [edi+0x15cbd54d]
  414d6e:	nop
  414d6f:	lods   eax,DWORD PTR ds:[esi]
  414d70:	into   
  414d71:	adc    eax,0x68a6a3a5
  414d76:	or     ecx,ebx
  414d78:	inc    ebp
  414d79:	imul   ebp,DWORD PTR [ecx-0x6df463f1],0xffffffd0
  414d80:	fstp   DWORD PTR [edi+esi*4+0x7f]
  414d84:	or     al,BYTE PTR [ecx+0x7b297567]
  414d8a:	stos   DWORD PTR es:[edi],eax
  414d8b:	adc    DWORD PTR [ebx-0x42513b05],edi
  414d91:	pushf  
  414d92:	js     0x414d29
  414d94:	sbb    eax,0xfef8a1de
  414d99:	adc    bh,ah
  414d9b:	cwde   
  414d9c:	push   edi
  414d9d:	jno    0x414db9
  414d9f:	pop    ecx
  414da0:	mov    bh,0x1a
  414da2:	mov    edx,0x61e337e6
  414da7:	out    dx,eax
  414da8:	data16 jne 0x414d5d
  414dab:	jno    0x414d46
  414dad:	test   al,0xe3
  414daf:	adc    ch,BYTE PTR [edi]
  414db1:	inc    esp
  414db2:	push   0x23
  414db4:	or     DWORD PTR fs:[eax+0x3abfb9a9],ebp
  414dbb:	pushf  
  414dbc:	aam    0x12
  414dbe:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dc0:	or     BYTE PTR [eax],ah
  414dc2:	shl    BYTE PTR [edx+0x71b6bb4f],1
  414dc8:	iret   
  414dc9:	stos   DWORD PTR es:[edi],eax
  414dca:	inc    eax
  414dcb:	mov    ch,0xed
  414dcd:	scas   eax,DWORD PTR es:[edi]
  414dce:	pushf  
  414dcf:	rcl    BYTE PTR [eax+0x10],0x34
  414dd3:	and    eax,0x957f0bc4
  414dd8:	xchg   DWORD PTR [ebx-0x4eee26f7],ecx
  414dde:	mov    ebx,0x2ebef6df
  414de3:	stos   BYTE PTR es:[edi],al
  414de4:	add    DWORD PTR cs:[eax-0x2e279419],0xd2a14920
  414def:	gs sahf 
  414df1:	and    esi,DWORD PTR [eax+0x2f]
  414df4:	fisubr DWORD PTR [esi-0x5a]
  414df7:	lods   al,BYTE PTR ds:[esi]
  414df8:	(bad)  
  414df9:	mov    edx,0x55bdce11
  414dfe:	xchg   edx,eax
  414dff:	loopne 0x414d91
  414e01:	mov    al,0xc
  414e03:	fisttp DWORD PTR [esi+0x1fbc48fb]
  414e09:	jbe    0x414e4c
  414e0b:	out    0xa,al
  414e0d:	hlt    
  414e0e:	adc    DWORD PTR [esi+0x6b1449f5],edi
  414e14:	shr    BYTE PTR [esi+0x1d5c60f1],1
  414e1a:	cld    
  414e1b:	dec    eax
  414e1c:	mov    eax,eax
  414e1e:	push   ecx
  414e1f:	mov    cs,WORD PTR [edx]
  414e21:	loop   0x414dac
  414e23:	clc    
  414e24:	add    al,0xa6
  414e26:	clc    
  414e27:	pushf  
  414e28:	leave  
  414e29:	jecxz  0x414df9
  414e2b:	pop    es
  414e2c:	push   cs
  414e2d:	shl    dh,cl
  414e2f:	push   esi
  414e30:	xor    eax,0x4136ce23
  414e35:	sbb    al,0x8b
  414e37:	and    eax,0x5c0f20a5
  414e3c:	test   DWORD PTR [ecx-0x5ba4ae98],ecx
  414e42:	sub    edx,esp
  414e44:	jmp    0x465e:0x658d1e27
  414e4b:	jmp    DWORD PTR [esp+eax*2]
  414e4e:	out    0xc5,al
  414e50:	js     0x414e12
  414e52:	sbb    esp,DWORD PTR [edi+edx*8+0x4fcff189]
  414e59:	pop    ebx
  414e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e5b:	rcl    DWORD PTR ss:[ecx+0xb],cl
  414e5f:	pop    ecx
  414e60:	dec    ecx
  414e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e62:	mov    al,0x11
  414e64:	jno    0x414e94
  414e66:	jns    0x414ec5
  414e68:	dec    edi
  414e69:	xchg   edx,eax
  414e6a:	mov    eax,0x12de63f7
  414e6f:	xor    dl,BYTE PTR [eax-0x104646f5]
  414e75:	fwait
  414e76:	xlat   BYTE PTR ds:[ebx]
  414e77:	call   0x231d8025
  414e7c:	mov    edx,0xac6b2331
  414e81:	or     eax,0x668c8278
  414e86:	pop    edx
  414e87:	test   eax,0xb3705274
  414e8c:	sbb    al,0xf4
  414e8e:	push   edi
  414e8f:	xchg   esp,eax
  414e90:	inc    esi
  414e91:	dec    edi
  414e92:	sahf   
  414e93:	clc    
  414e94:	xchg   edi,eax
  414e95:	mov    cl,0x25
  414e97:	ret    
  414e98:	add    esi,DWORD PTR [esi+0x55f7cfcf]
  414e9e:	push   ecx
  414e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea0:	cmp    al,0x80
  414ea2:	mov    ch,0x80
  414ea4:	inc    edi
  414ea5:	mov    ebp,?
  414ea7:	lods   al,BYTE PTR ds:[esi]
  414ea8:	repnz jmp 0xc045:0x376eda05
  414eb0:	ror    BYTE PTR [ebx],0xee
  414eb3:	inc    edi
  414eb4:	pop    esi
  414eb5:	scas   al,BYTE PTR es:[edi]
  414eb6:	pop    eax
  414eb7:	jg     0x414e58
  414eb9:	icebp  
  414eba:	mul    esp
  414ebc:	inc    esi
  414ebd:	mov    ds,WORD PTR [esi]
  414ebf:	sub    dh,BYTE PTR [esi+eax*2]
  414ec2:	lahf   
  414ec3:	xchg   esi,eax
  414ec4:	pop    edi
  414ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec6:	aaa    
  414ec7:	or     eax,0x56b4d0cb
  414ecc:	out    dx,eax
  414ecd:	jo     0x414ea9
  414ecf:	adc    bh,al
  414ed1:	jge    0x414e9f
  414ed3:	das    
  414ed4:	xor    BYTE PTR [eax],ah
  414ed6:	lods   eax,DWORD PTR ds:[esi]
  414ed7:	gs (bad) 
  414ed9:	cwde   
  414eda:	(bad)  
  414edb:	fisubr DWORD PTR [bp+si]
  414ede:	add    eax,0x178ad6fb
  414ee3:	add    BYTE PTR [edx+esi*4],0x70
  414ee7:	mov    DWORD PTR [edi-0x7b],ebp
  414eea:	inc    ebp
  414eeb:	ds jl  0x414eeb
  414eee:	and    al,0xd
  414ef0:	dec    ecx
  414ef1:	lock fiadd WORD PTR ds:0xb5e0aa9d
  414ef8:	fmul   QWORD PTR [edi-0x1d]
  414efb:	rol    BYTE PTR [edx-0x1e],1
  414efe:	cmp    BYTE PTR [edx-0x33],ah
  414f01:	xchg   ebp,eax
  414f02:	nop
  414f03:	push   edi
  414f04:	jo     0x414eab
  414f06:	pop    edx
  414f07:	sub    esp,DWORD PTR [esi]
  414f09:	mov    al,BYTE PTR [ebx*4+0x332e38cd]
  414f10:	inc    ebx
  414f11:	pop    edi
  414f12:	pop    edi
  414f13:	mov    dl,0x39
  414f15:	cmp    DWORD PTR [eax-0x53218cdb],0x27c72d5e
  414f1f:	xor    DWORD PTR [esi],ebp
  414f21:	xchg   edi,eax
  414f22:	(bad)  
  414f23:	adc    eax,0x77ee5727
  414f28:	push   eax
  414f29:	sbb    BYTE PTR [ebx+ecx*2+0xa9b3ef3],ch
  414f30:	mov    bl,0x43
  414f32:	imul   esp,DWORD PTR [esi-0x3319afba],0xffffffb9
  414f39:	or     al,0xb
  414f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f3c:	jbe    0x414f99
  414f3e:	inc    edi
  414f3f:	push   ds
  414f40:	ret    
  414f41:	fcomp  st(5)
  414f43:	cmp    bl,bh
  414f45:	test   BYTE PTR [edi],bl
  414f47:	loopne 0x414fbb
  414f49:	mov    ecx,0x3f0d5ffa
  414f4e:	sub    al,BYTE PTR [edx-0x47]
  414f51:	icebp  
  414f52:	ret    
  414f53:	or     esp,DWORD PTR [edi-0x21ff4903]
  414f59:	xor    BYTE PTR [ecx+0x6b17409b],0x54
  414f60:	pop    es
  414f61:	inc    esi
  414f62:	mul    DWORD PTR [ecx]
  414f64:	ret    0x3db5
  414f67:	and    edi,DWORD PTR [eax+0x3a84e586]
  414f6d:	int    0x71
  414f6f:	add    DWORD PTR [edx+0x4e4d2b7e],ebx
  414f75:	mov    ch,0xab
  414f77:	add    eax,DWORD PTR [esi-0x2e1d41f]
  414f7d:	and    BYTE PTR [ecx-0x22],bl
  414f80:	xor    eax,0x8dd20eaa
  414f85:	sbb    al,0xef
  414f87:	std    
  414f88:	out    0x9f,al
  414f8a:	inc    edx
  414f8b:	adc    edi,DWORD PTR [ecx+edx*8+0x73]
  414f8f:	into   
  414f90:	xchg   ecx,eax
  414f91:	mov    bh,ch
  414f93:	aaa    
  414f94:	push   edi
  414f95:	mov    WORD PTR [ecx-0x27c4ed14],ss
  414f9b:	pop    esi
  414f9c:	call   0x3bc1:0x747e0ab5
  414fa3:	int3   
  414fa4:	bound  ecx,QWORD PTR [ecx+0x4c6bb3e7]
  414faa:	or     al,BYTE PTR [eax-0x4655276]
  414fb0:	bound  ebx,QWORD PTR [edi]
  414fb2:	xchg   ecx,eax
  414fb3:	xchg   BYTE PTR [edi-0x19],dh
  414fb6:	(bad)  
  414fb7:	(bad)  
  414fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb9:	sub    dh,dl
  414fbb:	jl     0x414f9d
  414fbd:	jnp    0x414f52
  414fbf:	push   ss
  414fc0:	mov    esi,0x7ec0056e
  414fc5:	mov    ebp,0xdfe8bbdb
  414fca:	xor    ch,BYTE PTR [edi+0x2f]
  414fcd:	xor    ecx,ecx
  414fcf:	mov    cl,0x9e
  414fd1:	mov    al,ds:0x8ecf77c5
  414fd6:	or     DWORD PTR [esi-0x38abcbab],esp
  414fdc:	repnz popf 
  414fde:	dec    edi
  414fdf:	jne    0x414ff8
  414fe1:	dec    eax
  414fe2:	(bad)  
  414fe3:	mov    ds,WORD PTR [edi]
  414fe5:	fimul  WORD PTR [ebp+0x32]
  414fe8:	dec    esi
  414fe9:	fimul  WORD PTR [ebx-0x1f1b6ccf]
  414fef:	add    ah,BYTE PTR [edx+0x1464d9e2]
  414ff5:	(bad)  
  414ff6:	sub    edi,DWORD PTR [ebp+0x1b8d5847]
  414ffc:	les    edi,FWORD PTR [ebp-0x32]
  414fff:	stos   BYTE PTR es:[edi],al
  415000:	fdiv   DWORD PTR [ebx]
  415002:	add    al,0x27
  415004:	lock adc BYTE PTR [ecx+esi*8-0x98b72f8],cl
  41500c:	retf   0xe998
  41500f:	fwait
  415010:	cmp    esi,DWORD PTR [eax+ebp*1]
  415013:	lock mov DWORD PTR [edi+0x6f20227d],esp
  41501a:	pop    ss
  41501b:	jl     0x41507f
  41501d:	lahf   
  41501e:	fdiv   QWORD PTR [ebx+eax*1]
  415021:	push   0x1e
  415023:	pop    ds
  415024:	mov    DWORD PTR [edx],eax
  415026:	pop    eax
  415027:	arpl   WORD PTR [ebx+0x1087e147],bp
  41502d:	aam    0x77
  41502f:	mov    ebp,0x5d326002
  415034:	lea    edx,[edi-0x48240cc0]
  41503a:	aam    0x27
  41503c:	add    eax,0x11b7cc56
  415041:	inc    edx
  415042:	xor    ebx,DWORD PTR [ebp+0x4a525745]
  415048:	fnstenv [edi-0x277bda8a]
  41504e:	sbb    esi,DWORD PTR [ebp+0x3]
  415051:	pop    ebp
  415052:	sub    ch,bh
  415054:	neg    DWORD PTR [ebp+0x2b]
  415057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415058:	mov    dh,0x3
  41505a:	mov    esp,DWORD PTR [ecx-0x4d09dbbf]
  415060:	rol    DWORD PTR [edi],1
  415062:	pop    esi
  415063:	(bad)  
  415064:	leave  
  415065:	cmc    
  415066:	std    
  415067:	je     0x415095
  415069:	enter  0xb51e,0x6c
  41506d:	lock pop edx
  41506f:	add    dl,BYTE PTR [edx+0x1c3df6e5]
  415075:	cmp    al,0x82
  415077:	imul   ebp,DWORD PTR [ecx+esi*8-0x16],0xffffff9c
  41507c:	mov    ebx,DWORD PTR [edi-0x169e9ff3]
  415082:	sbb    BYTE PTR [ecx],dh
  415084:	inc    ebx
  415085:	(bad)  
  415086:	jle    0x4150aa
  415088:	das    
  415089:	add    al,0x9
  41508b:	(bad)  
  41508c:	jo     0x415084
  41508e:	xlat   BYTE PTR ds:[ebx]
  41508f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415090:	and    DWORD PTR [eax+0x5a],ebx
  415093:	mov    ah,0x60
  415095:	aaa    
  415096:	outs   dx,DWORD PTR ds:[esi]
  415097:	out    dx,al
  415098:	das    
  415099:	jg     0x41508a
  41509b:	xor    ecx,edi
  41509d:	mov    edx,DWORD PTR [eax+0x809a02]
  4150a3:	mov    eax,0xb081709e
  4150a8:	ror    BYTE PTR [edi-0x7904ca8e],cl
  4150ae:	push   ebx
  4150af:	rol    BYTE PTR [edi-0x5f109701],cl
  4150b5:	fist   DWORD PTR [eax+0x317366f]
  4150bb:	cmp    al,BYTE PTR [ebx-0x3a7df9be]
  4150c1:	es mov dl,0xd
  4150c4:	scas   al,BYTE PTR es:[edi]
  4150c5:	mov    fs,WORD PTR [edi]
  4150c7:	inc    esp
  4150c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150c9:	nop
  4150ca:	sbb    al,0xd5
  4150cc:	ja     0x41509d
  4150ce:	jmp    0x41506f
  4150d0:	jle    0x4150f9
  4150d2:	out    dx,eax
  4150d3:	mov    eax,ds:0x20a9cb7c
  4150d8:	lods   al,BYTE PTR ds:[esi]
  4150d9:	sti    
  4150da:	inc    esp
  4150db:	or     dl,BYTE PTR ds:0x56dfca44
  4150e1:	add    bl,0x95
  4150e4:	inc    esi
  4150e5:	cmc    
  4150e6:	(bad)  
  4150e7:	dec    esp
  4150e8:	jno    0x4150b5
  4150ea:	call   0x979f:0x61e6eeb1
  4150f1:	imul   esi,DWORD PTR [edx],0x49
  4150f4:	add    eax,0x51414eed
  4150f9:	das    
  4150fa:	add    bl,bl
  4150fc:	lods   eax,DWORD PTR ds:[esi]
  4150fd:	jno    0x415149
  4150ff:	js     0x4150bb
  415101:	xor    al,0x73
  415103:	pop    ebx
  415104:	push   ebx
  415105:	sbb    DWORD PTR [eax+0x7e],esp
  415108:	lods   eax,DWORD PTR ds:[esi]
  415109:	ins    BYTE PTR es:[edi],dx
  41510a:	ja     0x4150f0
  41510c:	and    DWORD PTR [esi+0x3cbefe0d],0x28
  415113:	dec    eax
  415114:	leave  
  415115:	lea    edi,[edx+0x33a95592]
  41511b:	sub    dl,BYTE PTR ds:0xd07663c9
  415121:	bound  eax,QWORD PTR [ebx+0x30]
  415124:	pop    ebx
  415125:	and    al,0x7b
  415127:	xchg   edx,eax
  415128:	sbb    eax,0x813e163f
  41512d:	mov    eax,0x3a755c5f
  415132:	jmp    0x9148:0xc0e88a35
  415139:	and    BYTE PTR [esi+0x3f70b636],bl
  41513f:	mov    esi,0x6ec5658
  415144:	cmp    cl,BYTE PTR ds:[ebx]
  415147:	rcl    DWORD PTR [eax-0x67b80c21],0x44
  41514e:	jl     0x41512f
  415150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415151:	or     BYTE PTR [ecx+edx*8+0x72],bl
  415155:	or     esp,ecx
  415157:	shl    BYTE PTR [eax],cl
  415159:	ins    BYTE PTR es:[edi],dx
  41515a:	enter  0x387a,0x5e
  41515e:	call   0xfa1b9a62
  415163:	into   
  415164:	call   0x7a99:0xb024aea8
  41516b:	jle    0x4151b9
  41516d:	arpl   WORD PTR [ebp-0x9049dfd],cx
  415173:	jge    0x4151d3
  415175:	inc    ebp
  415176:	jmp    FWORD PTR [eax+0x129637ed]
  41517c:	inc    eax
  41517d:	loop   0x41514f
  41517f:	lods   al,BYTE PTR ds:[esi]
  415180:	mov    ah,0x10
  415182:	out    0xdc,eax
  415184:	fucomip st,st(0)
  415186:	pop    ss
  415187:	popa   
  415188:	add    eax,0x34fda760
  41518d:	mov    esp,0x28ea3b91
  415192:	jl     0x41512b
  415194:	xchg   ebx,eax
  415195:	gs mov esp,0x563bbd75
  41519b:	adc    DWORD PTR [esi-0x724b8363],0x3132a581
  4151a5:	es mov ecx,ecx
  4151a8:	sbb    ecx,esp
  4151aa:	xchg   esp,eax
  4151ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ac:	mov    dl,0xe3
  4151ae:	aas    
  4151af:	jns    0x4151ca
  4151b1:	mov    ah,0xc2
  4151b3:	stos   DWORD PTR es:[edi],eax
  4151b4:	lock inc eax
  4151b6:	lods   eax,DWORD PTR ds:[esi]
  4151b7:	out    0x26,al
  4151b9:	cdq    
  4151ba:	mov    edx,0xdb7804ae
  4151bf:	mov    WORD PTR [ebx],fs
  4151c1:	sahf   
  4151c2:	es push edx
  4151c4:	ins    DWORD PTR es:[edi],dx
  4151c5:	gs hlt 
  4151c7:	call   0xcc8fc98d
  4151cc:	and    edx,DWORD PTR [edi-0x1e]
  4151cf:	xlat   BYTE PTR ds:[ebx]
  4151d0:	inc    edx
  4151d1:	dec    edx
  4151d2:	dec    esi
  4151d3:	sbb    ebp,ebx
  4151d5:	test   eax,0xcc5e02dc
  4151da:	mov    eax,0xa0972f9a
  4151df:	sbb    al,0x9b
  4151e1:	mov    eax,0x30388b77
  4151e6:	js     0x41519c
  4151e8:	jae    0x415195
  4151ea:	adc    bh,BYTE PTR [esi]
  4151ec:	faddp  st(4),st
  4151ee:	leave  
  4151ef:	enter  0xa5cc,0xde
  4151f3:	loopne 0x4151de
  4151f5:	std    
  4151f6:	dec    ecx
  4151f7:	jns    0x4151b2
  4151f9:	enter  0xa5a0,0xb6
  4151fd:	mov    esi,0x4ca2116f
  415202:	pop    edi
  415203:	std    
  415204:	jmp    0x41525f
  415206:	out    0xf6,al
  415208:	cmp    eax,0x2145afb0
  41520d:	sbb    DWORD PTR [eax],0xa
  415210:	(bad)  
  415211:	sbb    ebx,DWORD PTR [edx-0x4e]
  415214:	repz mov ds:0xecb1ffb2,al
  41521a:	mov    ebx,0x9fa5547e
  41521f:	inc    edi
  415220:	out    0xe1,al
  415222:	shl    DWORD PTR [eax+ebp*8],cl
  415225:	or     BYTE PTR [edi],bh
  415227:	std    
  415228:	push   eax
  415229:	ja     0x415227
  41522b:	xchg   BYTE PTR [ecx+0x321b9893],bl
  415231:	mov    ebx,0x3bb4f2b0
  415236:	retf   0x7540
  415239:	fcmovu st,st(5)
  41523b:	xlat   BYTE PTR ds:[ebx]
  41523c:	jl     0x41526e
  41523e:	out    dx,al
  41523f:	arpl   WORD PTR [edx],dx
  415241:	arpl   si,bx
  415243:	jno    0x4151dc
  415245:	addr16 sbb edx,ebp
  415248:	lods   eax,DWORD PTR ds:[esi]
  415249:	mov    ah,0x22
  41524b:	dec    edi
  41524c:	loop   0x4151e9
  41524e:	cli    
  41524f:	sbb    al,0x35
  415251:	test   al,0x1c
  415253:	data16 (bad) 
  415255:	sbb    al,0x5c
  415257:	dec    esp
  415258:	imul   BYTE PTR [ebp+0x17]
  41525b:	fwait
  41525c:	cli    
  41525d:	pop    esi
  41525e:	jne    0x415251
  415260:	mov    WORD PTR ss:[edx-0x5b8f6c00],?
  415267:	adc    DWORD PTR [eax-0x3a3dba04],0xba268865
  415271:	sahf   
  415272:	cmp    DWORD PTR [ebx],ecx
  415274:	scas   eax,DWORD PTR es:[edi]
  415275:	std    
  415276:	mov    ebx,DWORD PTR es:[ecx-0x44]
  41527a:	adc    edx,DWORD PTR [edx]
  41527c:	mov    esi,0xabc0d562
  415281:	aam    0x62
  415283:	je     0x41527e
  415285:	or     al,0x2
  415287:	dec    edi
  415288:	out    dx,al
  415289:	push   ebx
  41528a:	jns    0x681775d7
  415290:	in     al,0xae
  415292:	bound  ebx,QWORD PTR [ebp+0x5da19c1d]
  415298:	or     eax,0xce78bdc8
  41529d:	mov    dl,0x31
  41529f:	ins    DWORD PTR es:[edi],dx
  4152a0:	sub    ecx,DWORD PTR [ecx+eax*4+0x64]
  4152a4:	ret    
  4152a5:	cdq    
  4152a6:	push   0x35f3527b
  4152ab:	std    
  4152ac:	or     DWORD PTR [ebp-0x5d],0x46
  4152b0:	shl    esp,1
  4152b2:	inc    esp
  4152b3:	(bad)  
  4152b4:	data16 test BYTE PTR [eax-0x30],bl
  4152b8:	fs sub eax,0x636ee0a
  4152be:	or     eax,0x22185224
  4152c3:	and    eax,0x213ccf41
  4152c8:	cdq    
  4152c9:	imul   DWORD PTR [edx+eiz*2-0x5a]
  4152cd:	sub    DWORD PTR [esi-0x77],eax
  4152d0:	stos   DWORD PTR es:[edi],eax
  4152d1:	xchg   ebp,eax
  4152d2:	lods   al,BYTE PTR ds:[esi]
  4152d3:	jmp    0x415337
  4152d5:	mov    ecx,DWORD PTR [ebx+0x74]
  4152d8:	test   eax,0xe8438439
  4152dd:	fucom  st(0)
  4152df:	and    al,0x31
  4152e1:	stos   DWORD PTR es:[edi],eax
  4152e2:	stos   BYTE PTR es:[edi],al
  4152e3:	(bad)  
  4152e4:	(bad)  
  4152e6:	lds    ebp,FWORD PTR [ebx-0x32ce0d98]
  4152ec:	and    BYTE PTR [ebp+ebp*2+0x76],0x2e
  4152f1:	mov    eax,ds:0x6deb64ab
  4152f6:	aad    0xc9
  4152f8:	cmc    
  4152f9:	aam    0xa
  4152fb:	sbb    al,0xac
  4152fd:	and    esp,eax
  4152ff:	add    eax,0x4d0d82c2
  415304:	pop    ebx
  415305:	in     al,dx
  415306:	dec    edi
  415307:	scas   al,BYTE PTR es:[edi]
  415308:	dec    ecx
  415309:	dec    ecx
  41530a:	or     eax,DWORD PTR [edx+eax*4]
  41530d:	hlt    
  41530e:	stos   DWORD PTR es:[edi],eax
  41530f:	ds mov cl,0x7
  415312:	out    0x45,eax
  415314:	jo     0x415392
  415316:	jmp    0x5e1ac1e1
  41531b:	xchg   edx,eax
  41531c:	into   
  41531d:	jg     0x415332
  41531f:	mov    ebp,0x26039f22
  415324:	fmulp  st(4),st
  415326:	js     0x415398
  415328:	sub    eax,0xa3414350
  41532d:	fprem1 
  41532f:	mov    DWORD PTR [edi-0x63a622ef],0xe7e7758d
  415339:	jo     0x415394
  41533b:	pop    ebx
  41533c:	inc    esp
  41533d:	push   ebx
  41533e:	js     0x4152e4
  415340:	xor    DWORD PTR [edi-0x43],esi
  415343:	jmp    0xe88b:0xa629b8f4
  41534a:	call   DWORD PTR ds:0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0xe632c20
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0xecb7c1ab
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	xchg   edi,eax
  415559:	in     eax,dx
  41555a:	push   esp
  41555b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41555c:	cdq    
  41555d:	shl    esi,0x9d
  415560:	ss sahf 
  415562:	push   edx
  415563:	imul   bl
  415565:	and    eax,0x9a1dc4b7
  41556a:	shl    esi,0x9d
  41556d:	xor    bl,BYTE PTR [esi-0x25eb49ae]
  415573:	mov    bh,0xc4
  415575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415576:	call   0x529e:0x329df6c1
  41557d:	not    BYTE PTR [edx+ebx*8]
  415580:	mov    bh,0xc4
  415582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415583:	call   0x529e:0x329df6c1
  41558a:	not    BYTE PTR [edx+ebx*8]
  41558d:	mov    bh,0xc4
  41558f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415590:	call   0x529f:0x3a9df6c1
  415597:	neg    BYTE PTR [edx]
  415599:	lds    ecx,FWORD PTR ds:0xc82ea5ca
  41559f:	cmp    edi,DWORD PTR [edx+ecx*4+0x353b1e9f]
  4155a6:	mov    ds,edi
  4155a8:	lods   eax,DWORD PTR ds:[esi]
  4155a9:	(bad)  
  4155aa:	mov    edx,0x55f284b1
  4155af:	in     al,dx
  4155b0:	xor    ebx,DWORD PTR [ebx-0x552946cc]
  4155b6:	retf   
  4155b7:	cmc    
  4155b8:	mov    ch,0xd6
  4155ba:	call   DWORD PTR [edi-0x42]
  4155bd:	and    BYTE PTR [ebx-0x55210586],al
  4155c3:	test   esi,ebx
  4155c5:	mov    fs,WORD PTR [ebp+0x36f15fbd]
  4155cb:	xchg   ebx,eax
  4155cc:	cmp    dl,bh
  4155ce:	mov    edx,0xc19a81ce
  4155d3:	neg    BYTE PTR [ebp-0x73ad61ce]
  4155d9:	fcmovne st,st(4)
  4155db:	cmp    edx,edi
  4155dd:	or     esp,edx
  4155df:	sbb    al,0xc8
  4155e1:	xor    ecx,DWORD PTR [edx+0x43]
  4155e4:	ins    BYTE PTR es:[edi],dx
  4155e5:	pop    eax
  4155e6:	ins    BYTE PTR es:[edi],dx
  4155e7:	pop    es
  4155e8:	xchg   edx,eax
  4155e9:	test   DWORD PTR [ebx+0x47],0xefe558e3
  4155f0:	mov    ebx,0x65c92461
  4155f5:	sbb    DWORD PTR [eax+edi*2+0x4025f2bf],edi
  4155fc:	daa    
  4155fd:	xor    BYTE PTR [edx],ch
  4155ff:	sub    eax,DWORD PTR [ebp+0x2]
  415602:	sbb    DWORD PTR fs:[esi-0x55d446cc],ebx
  415609:	in     al,0x65
  41560b:	pop    ecx
  41560d:	mov    edx,0x73f36aa2
  415612:	jno    0x415630
  415614:	shl    DWORD PTR [ebx],cl
  415616:	dec    edx
  415617:	inc    ebx
  415618:	ins    BYTE PTR es:[edi],dx
  415619:	pop    eax
  41561a:	ins    DWORD PTR es:[edi],dx
  41561b:	pop    es
  41561c:	(bad)  
  41561d:	imul   ebx,ebp,0x47
  415620:	add    edi,DWORD PTR [eax-0x9]
  415623:	out    dx,eax
  415624:	scas   al,BYTE PTR es:[edi]
  415625:	cld    
  415626:	mov    cs,ecx
  415628:	inc    DWORD PTR [ebx+edx*1-0x71901c88]
  41562f:	inc    eax
  415630:	pop    ss
  415631:	lods   eax,DWORD PTR ds:[esi]
  415632:	mov    al,0x2b
  415634:	sub    esi,DWORD PTR [edi+ecx*8+0x19]
  415638:	sub    BYTE PTR [ecx-0x635dd4dc],0xe6
  41563f:	(bad)  
  415640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415641:	jge    0x4155fc
  415643:	(bad)  
  415645:	or     esp,edx
  415647:	sbb    al,0xf6
  415649:	popf   
  41564a:	xor    bl,BYTE PTR [esi-0x25eb09ae]
  415650:	mov    bh,0xc4
  415652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415653:	call   0x529e:0x329df6c1
  41565a:	not    BYTE PTR [edx+ebx*8]
  41565d:	mov    bh,0xc4
  41565f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415660:	retf   0xf684
  415663:	popf   
  415664:	jle    0x415605
  415666:	push   ecx
  415667:	div    BYTE PTR [edx-0x6c]
  41566a:	cli    
  41566b:	mov    esp,DWORD PTR [ebp-0x62093e66]
  415671:	xor    bl,BYTE PTR [esi-0x27ebe9ae]
  415677:	mov    dh,0xcf
  415679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41567a:	nop
  41567b:	shl    esi,0x7f
  41567e:	ss sahf 
  415680:	push   edx
  415681:	jb     0x415695
  415683:	fidiv  DWORD PTR [edi-0x7d655a3c]
  415689:	dec    ebx
  41568a:	popf   
  41568b:	xor    bl,BYTE PTR [esi-0x25eb09be]
  415691:	mov    bh,0xc1
  415693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415694:	call   0x528e:0x329db6c1
  41569b:	not    BYTE PTR [eax+ebx*8]
  41569e:	mov    bh,0xc4
  4156a0:	mov    al,ds:0x9df6c09a
  4156a5:	xor    bl,BYTE PTR [esi-0x24eb0cae]
  4156ab:	mov    bh,0xc4
  4156ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ae:	call   0x529e:0x3eadf6c1
  4156b5:	repnz adc al,0xda
  4156b8:	mov    ebp,0xc39aa13a
  4156bd:	neg    ch
  4156bf:	mov    bl,0x9e
  4156c1:	push   edx
  4156c2:	out    0x14,al
  4156c4:	fisub  DWORD PTR [edi-0x3e655a3c]
  4156ca:	out    0x9d,al
  4156cc:	xor    cl,BYTE PTR [esi-0x25eb09ae]
  4156d2:	mov    bh,0xc4
  4156d4:	mov    ch,0x9a
  4156d6:	shl    esi,0x9d
  4156d9:	xor    bl,BYTE PTR [esi-0x25eb09ae]
  4156df:	mov    bh,0xc0
  4156e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156e2:	xchg   esi,eax
  4156e3:	shr    DWORD PTR [edi+0x529e329e],0x36
  4156ea:	pop    ds
  4156eb:	(bad)  
  4156ed:	sti    
  4156ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ef:	call   0x529e:0x329df6c1
  4156f6:	not    BYTE PTR [edx+ebx*8]
  4156f9:	mov    bh,0xc4
  4156fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156fc:	call   0x5ebe:0x329df6c1
  415703:	test   BYTE PTR [edx+ebx*8],0xb7
  415707:	les    esp,FWORD PTR [ebp-0x62093e66]
  41570d:	xor    bl,BYTE PTR [esi-0x25eb09ae]
  415713:	mov    bh,0xc4
  415715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415716:	call   0x529e:0x329df6c1
  41571d:	not    BYTE PTR [edx+ebx*8]
  415720:	mov    bh,0xc4
  415722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415723:	call   0x529e:0x329df6c1
  41572a:	not    BYTE PTR [edx+ebx*8]
  41572d:	mov    bh,0xc4
  41572f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415730:	call   0x529e:0x329df6c1
  415737:	not    BYTE PTR [edx+ebx*8]
  41573a:	mov    bh,0xc4
  41573c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41573d:	call   0x529e:0x329df6c1
  415744:	not    BYTE PTR [edx+ebx*8]
  415747:	mov    bh,0xc4
  415749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41574a:	call   0x529e:0x329df6c1
  415751:	not    BYTE PTR [edx+ebx*8]
  415754:	mov    bh,0xc4
  415756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415757:	call   0x52ea:0x4af882ef
  41575e:	not    BYTE PTR [edx+ebx*8]
  415761:	pop    es
  415762:	iret   
  415763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415764:	call   0x56f8:0x329df6d1
  41576b:	not    BYTE PTR [esi+ebx*8]
  41576e:	mov    bh,0xc4
  415770:	cmc    
  415771:	fild   WORD PTR [edx-0x6182363c]
  415777:	push   edx
  415778:	not    BYTE PTR [edx+ebx*8]
  41577b:	mov    bh,0xe4
  41577d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41577e:	call   0x31ec:0x41efd821
  415785:	not    BYTE PTR [edx+ebx*8]
  415788:	mov    bh,0xa4
  41578a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41578b:	call   0x9e:0x329636c1
  415792:	not    BYTE PTR [edx+ebx*8]
  415795:	ffree  st(0)
  415797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415798:	call   0x529e:0x329df6c1
  41579f:	not    BYTE PTR [edx+ebx*8]
  4157a2:	mov    bh,0xc4
  4157a4:	test   DWORD PTR [edx+0x40b316c1],ebx
  4157aa:	sti    
  4157ab:	ds cdq 
  4157ad:	ja     0x415789
  4157af:	mov    bh,0xc4
  4157b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157b2:	call   0x529e:0x3ebdf6c1
  4157b9:	hlt    
  4157ba:	adc    al,0xda
  4157bc:	mov    bh,0x78
  4157be:	mov    eax,ds:0x9df6c19a
  4157c3:	xor    bl,BYTE PTR [esi-0x25eb09ae]
  4157c9:	mov    bh,0xc4
  4157cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157cc:	fcmovb st,st(1)
  4157ce:	neg    BYTE PTR [ebp+0x32]
  4157d1:	sahf   
  4157d2:	push   edx
  4157d3:	not    BYTE PTR [edx+ebx*8]
  4157d6:	mov    bh,0xc4
  4157d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157d9:	call   0x529e:0x329df6c1
  4157e0:	not    BYTE PTR [edx+ebx*8]
  4157e3:	mov    bh,0xc4
  4157e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e6:	call   0x529e:0x329df6c1
  4157ed:	not    BYTE PTR [edx+ebx*8]
  4157f0:	mov    bh,0xc4
  4157f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157f3:	call   0x529e:0x329df6c1
  4157fa:	not    BYTE PTR [edx+ebx*8]
  4157fd:	mov    bh,0xc4
  4157ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415800:	call   0x529e:0x329df6c1
  415807:	not    BYTE PTR [edx+ebx*8]
  41580a:	mov    bh,0xc4
  41580c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41580d:	call   0x529e:0x329df6c1
  415814:	not    BYTE PTR [edx+ebx*8]
  415817:	mov    bh,0xc4
  415819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41581a:	call   0x529e:0x329df6c1
  415821:	not    BYTE PTR [edx+ebx*8]
  415824:	mov    bh,0xc4
  415826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415827:	call   0x529e:0x329df6c1
  41582e:	not    BYTE PTR [edx+ebx*8]
  415831:	mov    bh,0xc4
  415833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415834:	call   0x529e:0x329df6c1
  41583b:	not    BYTE PTR [edx+ebx*8]
  41583e:	mov    bh,0xc4
  415840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415841:	call   0x529e:0x329df6c1
  415848:	not    BYTE PTR [edx+ebx*8]
  41584b:	mov    bh,0xc4
  41584d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41584e:	call   0x529e:0x329df6c1
  415855:	not    BYTE PTR [edx+ebx*8]
  415858:	mov    bh,0xc4
  41585a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41585b:	call   0x529e:0x329df6c1
  415862:	not    BYTE PTR [edx+ebx*8]
  415865:	mov    bh,0xc4
  415867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415868:	call   0x529e:0x329df6c1
  41586f:	not    BYTE PTR [edx+ebx*8]
  415872:	mov    bh,0xc4
  415874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415875:	call   0x529e:0x329df6c1
  41587c:	not    BYTE PTR [edx+ebx*8]
  41587f:	mov    bh,0xc4
  415881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415882:	call   0x529e:0x329df6c1
  415889:	not    BYTE PTR [edx+ebx*8]
  41588c:	mov    bh,0xc4
  41588e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41588f:	call   0x529e:0x329df6c1
  415896:	not    BYTE PTR [edx+ebx*8]
  415899:	mov    bh,0xc4
  41589b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41589c:	call   0x529e:0x329df6c1
  4158a3:	not    BYTE PTR [edx+ebx*8]
  4158a6:	mov    bh,0xc4
  4158a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a9:	call   0x529e:0x329df6c1
  4158b0:	not    BYTE PTR [edx+ebx*8]
  4158b3:	mov    bh,0xc4
  4158b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158b6:	call   0x529e:0x329df6c1
  4158bd:	not    BYTE PTR [edx+ebx*8]
  4158c0:	mov    bh,0xc4
  4158c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158c3:	call   0x529e:0x329df6c1
  4158ca:	not    BYTE PTR [edx+ebx*8]
  4158cd:	mov    bh,0xc4
  4158cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158d0:	call   0x529e:0x329df6c1
  4158d7:	not    BYTE PTR [edx+ebx*8]
  4158da:	mov    bh,0xc4
  4158dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158dd:	call   0x529e:0x329df6c1
  4158e4:	not    BYTE PTR [edx+ebx*8]
  4158e7:	mov    bh,0xc4
  4158e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ea:	call   0x529e:0x329df6c1
  4158f1:	not    BYTE PTR [edx+ebx*8]
  4158f4:	mov    bh,0xc4
  4158f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158f7:	call   0x529e:0x329df6c1
  4158fe:	not    BYTE PTR [edx+ebx*8]
  415901:	mov    bh,0xc4
  415903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415904:	call   0x529e:0x329df6c1
  41590b:	not    BYTE PTR [edx+ebx*8]
  41590e:	mov    bh,0xc4
  415910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415911:	call   0x529e:0x329df6c1
  415918:	not    BYTE PTR [edx+ebx*8]
  41591b:	mov    bh,0xc4
  41591d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41591e:	call   0x529e:0x329df6c1
  415925:	not    BYTE PTR [edx+ebx*8]
  415928:	mov    bh,0xc4
  41592a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41592b:	call   0x529e:0x329df6c1
  415932:	not    BYTE PTR [edx+ebx*8]
  415935:	mov    bh,0xc4
  415937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415938:	call   0x529e:0x329df6c1
  41593f:	not    BYTE PTR [edx+ebx*8]
  415942:	mov    bh,0xc4
  415944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415945:	call   0x529e:0x329df6c1
  41594c:	not    BYTE PTR [edx+ebx*8]
  41594f:	mov    bh,0xc4
  415951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415952:	call   0xf99e:0x329df6c1
  415959:	mov    eax,0xc498da1f
  41595e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41595f:	mov    al,cl
  415961:	div    BYTE PTR [edi+0x4b264490]
  415967:	pop    ebx
  415968:	jmp    0xa7e04912
  41596d:	cs inc ebx
  41596f:	sysenter 
  415971:	xlat   BYTE PTR ds:[ebx]
  415972:	or     eax,DWORD PTR [edi]
  415974:	enter  0xa469,0x83
  415978:	sahf   
  415979:	jae    0x415994
  41597b:	jge    0x41595c
  41597d:	inc    ebx
  41597e:	pop    esp
  41597f:	test   al,0xb9
  415981:	add    DWORD PTR [eax+ebp*2-0x53061af0],0x15
  415989:	es jecxz 0x415947
  41598c:	adc    edi,edi
  41598e:	pushf  
  41598f:	pop    edx
  415990:	mov    al,ds:0xf9a38539
  415995:	mov    ch,0x9f
  415997:	jle    0x415972
  415999:	mov    ch,BYTE PTR [edx-0x3d]
  41599c:	xchg   ebp,eax
  41599d:	mov    DWORD PTR [edi+0x53],esi
  4159a0:	outs   dx,BYTE PTR ds:[esi]
  4159a1:	fsub   st,st(1)
  4159a3:	rol    ebx,cl
  4159a5:	int3   
  4159a6:	cmp    eax,0x28caf36a
  4159ab:	xor    al,0xf
  4159ad:	mov    al,ds:0xced6736c
  4159b2:	xor    al,0xbd
  4159b4:	adc    BYTE PTR ds:0x3e256b4d,dh
  4159ba:	mov    ebp,0x7299c393
  4159bf:	imul   esi,DWORD PTR [edx+edx*4-0x57],0x35
  4159c4:	retf   0xf0fc
  4159c7:	sub    eax,0x2acc8a35
  4159cc:	xchg   BYTE PTR [edi-0x6d],al
  4159cf:	mov    dh,0x50
  4159d1:	xchg   ebx,eax
  4159d2:	out    0x37,eax
  4159d4:	jle    0x415a30
  4159d6:	xchg   esp,eax
  4159d7:	out    0x2b,al
  4159d9:	jge    0x4159a0
  4159db:	rol    BYTE PTR [ecx+0x4a],cl
  4159de:	sbb    al,0x36
  4159e0:	cmp    al,ch
  4159e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e3:	ror    bl,1
  4159e5:	lods   al,BYTE PTR ds:[esi]
  4159e6:	sbb    al,bh
  4159e8:	mov    cl,0x9d
  4159ea:	and    eax,DWORD PTR [ebx-0x48ff7a05]
  4159f0:	fimul  DWORD PTR [esi-0x2798b63f]
  4159f6:	push   cs
  4159f7:	pushf  
  4159f8:	xchg   ebp,eax
  4159f9:	aas    
  4159fa:	std    
  4159fb:	push   eax
  4159fc:	or     BYTE PTR [ecx],bh
  4159fe:	outs   dx,BYTE PTR ds:[esi]
  4159ff:	cwde   
  415a00:	push   eax
  415a01:	mov    esi,0xc3862023
  415a06:	add    eax,0xdd05a7b8
  415a0b:	xor    al,0x5a
  415a0d:	sub    bh,BYTE PTR [edx+0x601f9c7b]
  415a13:	out    0xc9,eax
  415a15:	stos   BYTE PTR es:[edi],al
  415a16:	pop    si
  415a18:	les    edx,FWORD PTR [ecx-0x5be43e87]
  415a1e:	test   DWORD PTR [edi+ecx*2+0x2f69478e],esp
  415a25:	jmp    0x1215:0x67e8cefb
  415a2c:	aam    0x64
  415a2e:	and    DWORD PTR [edi+0x109804aa],edx
  415a34:	icebp  
  415a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a36:	ins    BYTE PTR es:[edi],dx
  415a37:	(bad)  
  415a38:	in     eax,dx
  415a39:	aam    0x1d
  415a3b:	in     al,0x73
  415a3d:	dec    ecx
  415a3e:	push   ds
  415a3f:	push   ecx
  415a40:	sahf   
  415a41:	adc    edx,0x9f3c8c78
  415a47:	inc    edx
  415a48:	jns    0x4159f1
  415a4a:	xchg   DWORD PTR [edi+0x39398853],eax
  415a50:	pop    edx
  415a51:	fidivr WORD PTR [edx+ebx*4]
  415a54:	sbb    edx,DWORD PTR [ebp+0x3132e44e]
  415a5a:	fadd   QWORD PTR [esp+ebp*4]
  415a5d:	sbb    DWORD PTR [ecx],esp
  415a5f:	jne    0x415a05
  415a61:	lds    ecx,FWORD PTR [edi-0x68]
  415a64:	add    DWORD PTR [ebx+0x23],edx
  415a67:	lock jnp 0x415a5c
  415a6a:	neg    dh
  415a6c:	lock jnp 0x415a46
  415a6f:	fwait
  415a70:	in     eax,dx
  415a71:	mov    BYTE PTR [esi+esi*1],ch
  415a74:	jg     0x415a1f
  415a76:	aas    
  415a77:	dec    ecx
  415a78:	stos   BYTE PTR es:[edi],al
  415a79:	or     DWORD PTR [ecx+0x51],ebp
  415a7c:	jo     0x415a78
  415a7e:	ror    BYTE PTR [edi],0x14
  415a81:	repz pop esi
  415a83:	loop   0x415a24
  415a85:	mov    cl,0x96
  415a87:	rcr    DWORD PTR [esi],cl
  415a89:	loop   0x415ad2
  415a8b:	leave  
  415a8c:	mov    al,ds:0x2198506b
  415a91:	sub    al,BYTE PTR [esi+ebx*4+0x76543654]
  415a98:	xchg   ebp,eax
  415a99:	adc    BYTE PTR [eax-0x72],0x2f
  415a9d:	add    BYTE PTR [ecx+0x173acc04],0x1d
  415aa4:	jp     0x415a9b
  415aa6:	imul   edx,esi,0x76
  415aa9:	pop    esp
  415aaa:	mov    ecx,0x55af6358
  415aaf:	daa    
  415ab0:	std    
  415ab1:	pop    esp
  415ab2:	pop    ds
  415ab3:	scas   al,BYTE PTR es:[edi]
  415ab4:	mov    dl,0xbf
  415ab6:	adc    BYTE PTR [ebx+eax*4-0x47],ch
  415aba:	add    ch,BYTE PTR [edi]
  415abc:	pop    esi
  415abd:	icebp  
  415abe:	fisub  WORD PTR [edi]
  415ac0:	sbb    ch,cl
  415ac2:	mov    ebp,0x5d9e7510
  415ac7:	inc    ecx
  415ac8:	addr16 dec edi
  415aca:	jmp    0xc40d:0xa08e7762
  415ad1:	adc    BYTE PTR [esi+0x73],0x32
  415ad5:	pop    ecx
  415ad6:	xchg   esi,eax
  415ad7:	fcomp  DWORD PTR [edi+ebp*1+0x4ed0e9a7]
  415ade:	leave  
  415adf:	sub    eax,DWORD PTR [eax]
  415ae1:	inc    edi
  415ae2:	pop    edx
  415ae3:	ss or  edx,ebp
  415ae6:	cmp    al,0x80
  415ae8:	push   eax
  415ae9:	ror    esi,0x62
  415aec:	das    
  415aed:	lock adc DWORD PTR [eax+0x27653c28],ebx
  415af4:	lea    ecx,[ecx-0x76]
  415af7:	popf   
  415af8:	adc    BYTE PTR [edx+ebp*2],bh
  415afb:	or     edi,esi
  415afd:	pop    es
  415afe:	and    DWORD PTR [ebp+0x53],ebx
  415b01:	cmp    ebx,DWORD PTR [edx]
  415b03:	mov    dh,0x87
  415b05:	push   cs
  415b06:	xchg   edx,eax
  415b07:	mov    esi,0x176c46be
  415b0c:	pop    ecx
  415b0d:	mov    edi,0x1cd86375
  415b12:	invd   
  415b14:	mov    dl,0xd8
  415b16:	adc    ebx,DWORD PTR [eax+edx*8+0x7723c1ba]
  415b1d:	gs stc 
  415b1f:	dec    ecx
  415b20:	call   0xbf29c987
  415b25:	clc    
  415b26:	ss pop ds
  415b28:	fbld   TBYTE PTR [ecx]
  415b2a:	in     eax,0x9f
  415b2c:	imul   esp,DWORD PTR [eax],0xfffffffa
  415b2f:	call   0xda3f:0x4eb1abac
  415b36:	retf   
  415b37:	int3   
  415b38:	test   eax,0x408afe5c
  415b3d:	iret   
  415b3e:	loopne 0x415b65
  415b40:	cwde   
  415b41:	fistp  QWORD PTR [eax]
  415b43:	dec    ebx
  415b44:	mov    dh,0x8b
  415b46:	xchg   DWORD PTR [ebp+0xba5edbe],ebp
  415b4c:	mov    ds:0x58f62be0,al
  415b51:	push   ds
  415b52:	ret    
  415b53:	icebp  
  415b54:	call   0xb861e48c
  415b59:	jne    0x415afb
  415b5b:	mov    esi,0x2dd16f33
  415b60:	(bad)  
  415b61:	xor    esi,DWORD PTR ds:0x2e1e4789
  415b67:	ja     0x415b89
  415b69:	xchg   esi,eax
  415b6a:	(bad)  
  415b6b:	in     al,0x41
  415b6d:	push   edi
  415b6e:	dec    edx
  415b6f:	inc    edi
  415b70:	(bad)  
  415b71:	retf   0xc74f
  415b74:	mov    al,ds:0xa727fff5
  415b79:	sub    eax,DWORD PTR [ecx+0x6003117c]
  415b7f:	test   eax,0xf92bc1be
  415b84:	jns    0x415bf7
  415b86:	and    DWORD PTR [edi+0x2a],esi
  415b89:	hlt    
  415b8a:	dec    ebx
  415b8b:	je     0x415b99
  415b8d:	in     eax,0xdb
  415b8f:	adc    dh,BYTE PTR [esi]
  415b91:	out    dx,al
  415b92:	outs   dx,BYTE PTR ds:[esi]
  415b93:	sub    eax,0x70ae5f41
  415b98:	dec    ebx
  415b99:	aas    
  415b9a:	test   BYTE PTR [edi+ebx*1],cl
  415b9d:	imul   dl
  415b9f:	mov    cl,0xba
  415ba1:	pop    ebx
  415ba2:	pop    ds
  415ba3:	push   ecx
  415ba4:	icebp  
  415ba5:	adc    DWORD PTR [edi+0x3d],esi
  415ba8:	and    DWORD PTR [ecx+edx*8+0xa],ebx
  415bac:	push   ecx
  415bae:	jmp    0xd582:0x5e3f6705
  415bb5:	enter  0x9237,0x44
  415bb9:	inc    esi
  415bba:	lods   al,BYTE PTR ds:[esi]
  415bbb:	xchg   ecx,eax
  415bbc:	(bad)  [esp+edx*4-0x66]
  415bc0:	push   edi
  415bc1:	pop    eax
  415bc2:	data16 js 0x415c0f
  415bc5:	mov    BYTE PTR [esi+0x622fcc5d],al
  415bcb:	outs   dx,BYTE PTR ds:[esi]
  415bcc:	std    
  415bcd:	scas   al,BYTE PTR es:[edi]
  415bce:	xchg   ebp,eax
  415bcf:	call   0x876e1a61
  415bd4:	sbb    esi,DWORD PTR [ecx]
  415bd6:	aaa    
  415bd7:	cmp    BYTE PTR [eax],bl
  415bd9:	es scas eax,DWORD PTR es:[edi]
  415bdb:	stos   BYTE PTR es:[edi],al
  415bdc:	jmp    DWORD PTR [eax-0x6d]
  415bdf:	fldcw  WORD PTR [esi-0x4e]
  415be2:	adc    al,BYTE PTR [ecx-0x1bcf1e89]
  415be8:	jnp    0x415c0c
  415bea:	add    ebx,DWORD PTR [eax-0x7b]
  415bed:	xchg   edx,eax
  415bee:	xacquire xchg BYTE PTR [eax],bl
  415bf1:	outs   dx,DWORD PTR ds:[esi]
  415bf2:	sbb    BYTE PTR [eax-0x36938e4f],bl
  415bf8:	lods   al,BYTE PTR ds:[esi]
  415bf9:	push   0x18a2ad39
  415bfe:	pop    es
  415bff:	adc    BYTE PTR [edx],bl
  415c01:	iret   
  415c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c03:	cli    
  415c04:	imul   ecx,esi,0xffffff97
  415c07:	adc    eax,0x9fe75679
  415c0c:	jns    0x415bfb
  415c0e:	xchg   edx,eax
  415c0f:	sbb    bl,ah
  415c11:	push   ecx
  415c12:	shr    BYTE PTR [eax],1
  415c14:	sti    
  415c15:	push   es
  415c16:	stos   BYTE PTR es:[edi],al
  415c17:	push   ds
  415c18:	jns    0x415c61
  415c1a:	jmp    0x415bfe
  415c1c:	out    0xe5,al
  415c1e:	adc    ebx,DWORD PTR [edi+ecx*2-0x706fccdb]
  415c25:	in     al,0xa
  415c27:	sbb    al,0xeb
  415c29:	scas   eax,DWORD PTR es:[edi]
  415c2a:	jmp    0x415c61
  415c2c:	cdq    
  415c2d:	sbb    eax,DWORD PTR [edx]
  415c2f:	test   DWORD PTR ds:0x8fb7fdbe,esp
  415c35:	xor    al,0x5d
  415c37:	ins    BYTE PTR es:[edi],dx
  415c38:	sub    BYTE PTR [edx+0x32615a71],ah
  415c3e:	pop    ss
  415c3f:	mov    ebp,0x6d7b56f2
  415c44:	adc    BYTE PTR es:[ebx+0x35c0556a],cl
  415c4b:	mov    DWORD PTR [esi-0x17be47d5],eax
  415c51:	daa    
  415c52:	push   edx
  415c53:	inc    ecx
  415c54:	mov    al,0xfb
  415c56:	addr16 jmp 0x415c9c
  415c59:	ret    
  415c5a:	bnd ss jae 0x415c08
  415c5e:	mov    ebp,0xd114ba3f
  415c63:	mov    cl,0x13
  415c65:	imul   DWORD PTR [ebx+esi*1-0x6]
  415c69:	add    esp,DWORD PTR [edi+0x40b4e80e]
  415c6f:	push   ds
  415c70:	adc    eax,0x4adb9e79
  415c75:	mov    gs,WORD PTR [ecx+0x4b]
  415c78:	into   
  415c79:	stos   BYTE PTR es:[edi],al
  415c7a:	lahf   
  415c7b:	stos   DWORD PTR es:[edi],eax
  415c7c:	ret    0xa87
  415c7f:	mov    esp,0xcb12b566
  415c84:	fiadd  WORD PTR [eax+edi*1+0x1f]
  415c88:	outs   dx,DWORD PTR ds:[esi]
  415c89:	cmp    al,0x95
  415c8b:	(bad)  
  415c8c:	int    0x29
  415c8e:	push   ecx
  415c8f:	ret    0xcd14
  415c92:	mov    esp,0x624a8696
  415c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c98:	jle    0x415cdb
  415c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c9b:	xchg   esp,eax
  415c9c:	jl     0x415cb8
  415c9e:	aas    
  415c9f:	sub    cl,BYTE PTR [edi-0x7e5804f4]
  415ca5:	push   edi
  415ca6:	xchg   ebx,eax
  415ca7:	sbb    eax,DWORD PTR [ebp+0x76]
  415caa:	pop    edi
  415cab:	pop    edi
  415cac:	jge    0x415cb4
  415cae:	cld    
  415caf:	add    eax,0x1dcc2d77
  415cb4:	js     0x415ced
  415cb6:	xor    esi,DWORD PTR [edx]
  415cb8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cba:	mov    ch,0x8d
  415cbc:	adc    al,0xe5
  415cbe:	and    bh,ah
  415cc0:	cmp    al,0xc1
  415cc2:	cli    
  415cc3:	aam    0x24
  415cc5:	xor    DWORD PTR [eax*8-0x2c07176c],ecx
  415ccc:	mov    dl,0x54
  415cce:	(bad)  
  415ccf:	sbb    al,0x8f
  415cd1:	pop    edx
  415cd2:	adc    ebp,DWORD PTR [ebp+0x7c6ab9dd]
  415cd8:	fild   DWORD PTR [esi]
  415cda:	stos   DWORD PTR es:[edi],eax
  415cdb:	push   edi
  415cdc:	mov    BYTE PTR [esi+0x17],ch
  415cdf:	push   eax
  415ce0:	ds jmp 0x1ed8:0xaaa72dec
  415ce8:	and    DWORD PTR ss:[ecx],edx
  415ceb:	retf   0x4c72
  415cee:	mov    esi,esp
  415cf0:	sub    dh,bl
  415cf2:	pop    ecx
  415cf3:	mov    es:0x184a4fbe,al
  415cf9:	inc    esi
  415cfa:	xor    ebx,esi
  415cfc:	fsubp  st(6),st
  415cfe:	and    esp,DWORD PTR [eax+0x40]
  415d01:	gs ins BYTE PTR es:[edi],dx
  415d03:	(bad)  
  415d04:	repnz pop ebx
  415d06:	add    edi,DWORD PTR [eax+0x65]
  415d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d0a:	xor    cl,0x70
  415d0d:	add    BYTE PTR [edi+0x476aae46],ah
  415d13:	sub    dh,0x44
  415d16:	int    0x86
  415d18:	mov    dh,0x44
  415d1a:	cwde   
  415d1b:	pop    ds
  415d1c:	out    0xaf,eax
  415d1e:	add    bh,BYTE PTR [ecx]
  415d20:	pop    eax
  415d21:	ja     0x415d9f
  415d23:	in     eax,0xf
  415d25:	inc    ecx
  415d26:	push   esi
  415d27:	icebp  
  415d28:	and    bl,BYTE PTR [edx-0x78d0de52]
  415d2e:	test   BYTE PTR [ecx+0x57c6c64c],ch
  415d34:	add    DWORD PTR [eax],edi
  415d36:	mov    ebx,0x1a6af6b5
  415d3b:	cmp    eax,0xe13209ca
  415d40:	mov    edx,0x36974dda
  415d45:	sahf   
  415d46:	pusha  
  415d47:	ins    DWORD PTR es:[edi],dx
  415d48:	(bad)  
  415d49:	jmp    0x415d60
  415d4b:	je     0x415dc0
  415d4d:	xchg   DWORD PTR [bx],ecx
  415d50:	outs   dx,BYTE PTR ds:[esi]
  415d51:	adc    al,0xb0
  415d53:	jecxz  0x415d9e
  415d55:	xlat   BYTE PTR ds:[ebx]
  415d56:	xor    DWORD PTR [edi],esi
  415d58:	jns    0x415dbc
  415d5a:	mov    bl,0x58
  415d5c:	push   ds
  415d5d:	push   ds
  415d5e:	xor    BYTE PTR [eax+0x61],ch
  415d61:	loopne 0x415d3e
  415d63:	dec    eax
  415d64:	stc    
  415d65:	(bad)  
  415d66:	iret   
  415d67:	ds test edx,esp
  415d6a:	movlps QWORD PTR [edi+0x18e45cde],xmm0
  415d71:	stos   BYTE PTR es:[edi],al
  415d72:	sub    bh,bh
  415d74:	jmp    0x7f0:0x8424285c
  415d7b:	(bad)  
  415d7c:	xlat   BYTE PTR ds:[ebx]
  415d7d:	or     BYTE PTR [eax-0xa],ch
  415d80:	push   DWORD PTR [eax-0x66795e31]
  415d86:	mov    eax,0x2d19f179
  415d8b:	push   ebx
  415d8c:	(bad)  
  415d8d:	mov    ch,0x3c
  415d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d90:	in     eax,0x69
  415d92:	inc    eax
  415d93:	inc    eax
  415d94:	test   BYTE PTR [eax-0x352bc843],bl
  415d9a:	and    eax,0x37d52f08
  415d9f:	out    0x68,al
  415da1:	inc    esi
  415da2:	out    0xed,al
  415da4:	or     al,0x30
  415da6:	retf   0xb297
  415da9:	or     eax,0xbf34f6d0
  415dae:	pushf  
  415daf:	sbb    al,0x2e
  415db1:	and    BYTE PTR [ecx-0x5b],bh
  415db4:	shr    DWORD PTR [edx+0x3c],cl
  415db7:	jecxz  0x415de6
  415db9:	pop    ss
  415dba:	push   cs
  415dbb:	inc    edx
  415dbc:	data16 jg 0x415de2
  415dbf:	aaa    
  415dc0:	inc    esi
  415dc1:	push   ecx
  415dc2:	or     dl,al
  415dc4:	scas   al,BYTE PTR es:[edi]
  415dc5:	push   edi
  415dc6:	in     eax,0xfc
  415dc8:	(bad)  
  415dc9:	daa    
  415dca:	ins    DWORD PTR es:[edi],dx
  415dcb:	fisubr DWORD PTR [ebx+0x466c3285]
  415dd1:	ss shl ecx,cl
  415dd4:	retf   0xac70
  415dd7:	mov    al,ds:0x5acd1e0a
  415ddc:	ss mov edx,0x371a8b15
  415de2:	push   ds
  415de3:	jmp    0xc428:0x14d441e0
  415dea:	mov    cl,0xd
  415dec:	shr    BYTE PTR [edx-0x5d],cl
  415def:	mov    al,ds:0x5e4aa2bf
  415df4:	or     esi,DWORD PTR [edi]
  415df6:	xor    eax,esi
  415df8:	test   eax,0xe62ea2cf
  415dfd:	jp     0x415e43
  415dff:	push   ecx
  415e00:	cmp    al,0x6
  415e02:	ds inc edi
  415e04:	loopne 0x415e1a
  415e06:	hlt    
  415e07:	test   al,0xc6
  415e09:	bound  ecx,QWORD PTR es:[eax]
  415e0c:	mov    ah,0x4
  415e0e:	push   ss
  415e0f:	fimul  WORD PTR [eax]
  415e11:	lods   eax,DWORD PTR ds:[esi]
  415e12:	jp     0x415e2b
  415e14:	ds jne 0x415e65
  415e17:	sub    DWORD PTR [ecx+ebp*8+0x6c],ecx
  415e1b:	jno    0x415e73
  415e1d:	ror    DWORD PTR [esp+edi*4-0x5bf13271],0x39
  415e25:	int3   
  415e26:	stos   DWORD PTR es:[edi],eax
  415e27:	pop    es
  415e28:	sub    bl,BYTE PTR [eax+0x2e2b4a90]
  415e2e:	mov    DWORD PTR [esp+ecx*1+0x3b],esp
  415e32:	fld    TBYTE PTR [edi]
  415e34:	aas    
  415e35:	sub    BYTE PTR [eax+0x4976a92c],0x9c
  415e3c:	sub    al,0x17
  415e3e:	mov    ah,0x3e
  415e40:	xor    dh,BYTE PTR [eax]
  415e42:	jg     0x415ebc
  415e44:	adc    eax,0x35e8960a
  415e49:	out    dx,eax
  415e4a:	fsin   
  415e4c:	inc    ecx
  415e4d:	jmp    0x415eba
  415e4f:	test   DWORD PTR [edi],ebp
  415e51:	dec    ecx
  415e52:	sub    al,0x8b
  415e54:	(bad)  
  415e56:	push   ss
  415e57:	inc    ecx
  415e58:	fnstsw WORD PTR [eax+0x61]
  415e5b:	xchg   ebx,eax
  415e5c:	cdq    
  415e5d:	jo     0x415ed3
  415e5f:	ffree  st(5)
  415e61:	xchg   ecx,eax
  415e62:	stos   DWORD PTR es:[edi],eax
  415e63:	je     0x415e8a
  415e65:	cwde   
  415e66:	cmp    ebx,DWORD PTR [ebp-0x7f90d004]
  415e6c:	int3   
  415e6d:	icebp  
  415e6e:	sahf   
  415e6f:	retf   0xde1d
  415e72:	outs   dx,BYTE PTR ds:[esi]
  415e73:	lahf   
  415e74:	retf   0xfefb
  415e77:	fld    QWORD PTR [ebx-0x1534bd34]
  415e7d:	in     eax,0x60
  415e7f:	inc    esp
  415e80:	cmp    ecx,edx
  415e82:	repz pop edx
  415e84:	stos   BYTE PTR es:[edi],al
  415e85:	xlat   BYTE PTR ds:[ebx]
  415e86:	dec    ecx
  415e87:	mov    esp,0xc442af9c
  415e8c:	in     al,dx
  415e8d:	enter  0x781a,0x2c
  415e91:	rcl    BYTE PTR [esi+0x19],0xbc
  415e95:	jb     0x415e4b
  415e97:	inc    esi
  415e98:	and    eax,0xf5759f0a
  415e9d:	xor    esi,esi
  415e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ea0:	add    esi,ebp
  415ea2:	sub    DWORD PTR [esi+0x7f],eax
  415ea5:	shr    al,cl
  415ea7:	bound  eax,QWORD PTR [edi]
  415ea9:	pop    ss
  415eaa:	loope  0x415e52
  415eac:	into   
  415ead:	sub    eax,0xcda03d76
  415eb2:	or     DWORD PTR ds:0xed446fc3,esi
  415eb8:	add    bl,BYTE PTR [edi]
  415eba:	dec    esp
  415ebb:	add    al,0x54
  415ebd:	lds    edi,FWORD PTR [edi-0x58da7042]
  415ec3:	add    DWORD PTR [ebx],0x55a870af
  415ec9:	mov    ebp,0xdbe45b59
  415ece:	jmp    0xdd7b:0x51d453a2
  415ed5:	lods   eax,DWORD PTR ds:[esi]
  415ed6:	pop    es
  415ed7:	adc    bh,0x7c
  415eda:	mov    cl,0x27
  415edc:	shr    ebx,1
  415ede:	fwait
  415edf:	jg     0x415e6c
  415ee1:	pushf  
  415ee2:	sbb    BYTE PTR [eax-0x5ffa748a],0xef
  415ee9:	nop
  415eea:	xor    eax,0xfdec7d9f
  415eef:	mov    ds:0xbb0517ea,eax
  415ef4:	jo     0x415eda
  415ef6:	fdivr  DWORD PTR [eax]
  415ef8:	iret   
  415ef9:	add    bh,BYTE PTR [edx+0x73984c96]
  415eff:	dec    ebp
  415f00:	fnstcw WORD PTR [esp+ecx*1+0x7]
  415f04:	popf   
  415f05:	mov    dh,0x76
  415f07:	retf   
  415f08:	push   es
  415f09:	scas   eax,DWORD PTR es:[edi]
  415f0a:	sub    eax,0x9f615db1
  415f0f:	jle    0x415ee8
  415f11:	popf   
  415f12:	ror    edi,cl
  415f14:	les    edx,FWORD PTR [edx-0x4d123a49]
  415f1a:	or     eax,0x74
  415f1d:	push   eax
  415f1e:	push   esp
  415f1f:	cwde   
  415f20:	rcr    al,cl
  415f22:	cmp    ch,ch
  415f24:	into   
  415f25:	pop    DWORD PTR [eax]
  415f27:	(bad)  
  415f28:	mov    dl,0x62
  415f2a:	dec    esp
  415f2b:	ror    DWORD PTR [ecx],0xb3
  415f2e:	cld    
  415f2f:	add    BYTE PTR ds:0x3050157f,dh
  415f35:	gs gs xchg esp,eax
  415f38:	and    bh,BYTE PTR [ebx+0x5a]
  415f3b:	imul   esp,DWORD PTR [ebx],0xffffffd6
  415f3e:	mov    dh,0xf0
  415f40:	jb     0x415ed0
  415f42:	adc    eax,0xdfb7f9fa
  415f47:	in     al,0x1f
  415f49:	dec    edx
  415f4a:	pusha  
  415f4b:	pop    edx
  415f4c:	scas   eax,DWORD PTR es:[edi]
  415f4d:	and    BYTE PTR [esi],cl
  415f4f:	out    0x50,eax
  415f51:	shl    BYTE PTR [ebp-0x4e],1
  415f54:	aam    0xc
  415f56:	pop    ss
  415f57:	sahf   
  415f58:	bound  edx,QWORD PTR [edi]
  415f5a:	ss or  ebx,edx
  415f5d:	sub    ah,BYTE PTR [ecx]
  415f5f:	sub    BYTE PTR [edx+0xfc95dc9],bh
  415f65:	mov    bh,0xe8
  415f67:	xor    al,0x6c
  415f69:	inc    ebx
  415f6a:	js     0x415f34
  415f6c:	cbw    
  415f6e:	add    BYTE PTR [edi+ebp*2-0x2d],dh
  415f72:	and    al,0x8e
  415f74:	(bad)  
  415f75:	xchg   esi,eax
  415f76:	pop    ebx
  415f77:	jmp    0x415fa8
  415f79:	pop    esp
  415f7a:	bound  edi,QWORD PTR [ecx+0x1177bdfa]
  415f80:	jne    0x415f4f
  415f82:	aas    
  415f83:	or     al,0xbb
  415f85:	pop    ebx
  415f86:	mov    dl,0x4b
  415f88:	mov    ebp,0x17a4260c
  415f8d:	mov    dh,0x4
  415f8f:	into   
  415f90:	mov    ah,0x3e
  415f92:	jb     0x415f53
  415f94:	imul   edi,DWORD PTR [ebx],0x2eba002f
  415f9a:	popf   
  415f9b:	ins    DWORD PTR es:[edi],dx
  415f9c:	pop    ecx
  415f9d:	addr16 mov eax,0x51965475
  415fa3:	test   al,0x22
  415fa5:	pop    edi
  415fa6:	enter  0xca5e,0x9a
  415faa:	dec    esi
  415fab:	sub    esp,ebp
  415fad:	sub    cl,bl
  415faf:	mov    dh,0xa5
  415fb1:	clc    
  415fb2:	mov    ebx,0x24602f88
  415fb7:	mov    cl,0xa
  415fb9:	adc    ebp,DWORD PTR [ebx-0x44b3dc8c]
  415fbf:	mov    ch,0x3
  415fc1:	inc    ebx
  415fc2:	lods   eax,DWORD PTR ds:[esi]
  415fc3:	pop    esp
  415fc4:	or     eax,0xd7a6302a
  415fc9:	push   0xffffffc3
  415fcb:	jno    0x415fd6
  415fcd:	xchg   edx,eax
  415fce:	(bad)  
  415fcf:	and    dh,BYTE PTR [eax+0x7]
  415fd2:	iret   
  415fd3:	push   es
  415fd4:	push   eax
  415fd5:	rcl    BYTE PTR [esi+0x8],cl
  415fd8:	ja     0x415f73
  415fda:	scas   eax,DWORD PTR es:[edi]
  415fdb:	pop    eax
  415fdc:	repz clc 
  415fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fdf:	out    dx,eax
  415fe0:	aas    
  415fe1:	aas    
  415fe2:	(bad)  
  415fe3:	repz or cl,cl
  415fe6:	mov    dl,BYTE PTR [ebx-0x2c2e994d]
  415fec:	dec    eax
  415fed:	sbb    dl,BYTE PTR [edi-0x18b68c3b]
  415ff3:	mov    ds:0x63958e10,eax
  415ff8:	adc    BYTE PTR [eax+0x32852da3],0x60
  415fff:	enter  0xd26d,0x8a
  416003:	and    al,0x46
  416005:	ror    BYTE PTR [ebp+0x5d],cl
  416008:	inc    edx
  416009:	(bad)  
  41600a:	clc    
  41600b:	retf   0x5d5c
  41600e:	pop    ebp
  41600f:	xor    DWORD PTR [ecx-0x1],0xfffffff4
  416013:	(bad)  
  416014:	test   eax,0xbba517d8
  416019:	sti    
  41601a:	jmp    0x69f8480a
  41601f:	pop    esp
  416020:	mov    ds:0xad627c93,al
  416025:	pop    ss
  416026:	lock pop ecx
  416028:	daa    
  416029:	sahf   
  41602a:	loop   0x415fde
  41602c:	xchg   ebx,eax
  41602d:	mov    ecx,0xa869f0e
  416032:	ret    0xf5d8
  416035:	push   ebx
  416036:	xor    edx,DWORD PTR [eax-0x3a]
  416039:	sar    BYTE PTR [edx-0x5b],0x75
  41603d:	pop    esi
  41603e:	or     DWORD PTR [ebx-0x3c14404c],edx
  416044:	ror    DWORD PTR [edi],0x39
  416047:	int3   
  416048:	mov    bl,0xb5
  41604a:	je     0x416024
  41604c:	and    eax,0x36c2e72c
  416051:	push   esp
  416052:	mov    edi,0x44555fc
  416057:	ror    DWORD PTR [ebp-0x48],1
  41605a:	shr    BYTE PTR [edx-0x4ba6d040],1
  416060:	ret    
  416061:	mov    al,ds:0x2dda26ab
  416066:	mov    ch,BYTE PTR [si]
  416069:	jle    0x4160cd
  41606b:	fidiv  WORD PTR [esi]
  41606d:	out    dx,eax
  41606e:	in     al,dx
  41606f:	sub    ebp,0x3899e36b
  416075:	es xchg ecx,eax
  416077:	mov    cs,WORD PTR [ecx-0x52fd67a]
  41607d:	rep stos DWORD PTR es:[edi],eax
  41607f:	(bad)  
  416081:	shr    ebp,1
  416083:	fldcw  WORD PTR [ebp+0x9]
  416086:	adc    bl,bh
  416088:	add    al,dh
  41608a:	mov    dh,0xa2
  41608c:	jp     0x4160bf
  41608e:	xor    eax,0x53c10964
  416093:	jno    0x416066
  416095:	pusha  
  416096:	gs cli 
  416098:	sbb    esp,DWORD PTR [ebp+0x5d6f8f71]
  41609e:	inc    ebp
  41609f:	imul   esp,esi,0xffffffa4
  4160a2:	dec    eax
  4160a3:	xchg   esp,eax
  4160a4:	mov    bl,0x62
  4160a6:	mov    al,ds:0x1dde7452
  4160ab:	mov    edi,0xd4dd9158
  4160b0:	mov    ch,0xd7
  4160b2:	pop    esp
  4160b3:	mov    al,0x2b
  4160b5:	loope  0x4160dc
  4160b7:	shl    DWORD PTR [edi],cl
  4160b9:	mov    DWORD PTR [ebp+0x3da48a8d],edx
  4160bf:	mov    BYTE PTR [edi+0x6d],dl
  4160c2:	xchg   ecx,eax
  4160c3:	scas   eax,DWORD PTR es:[edi]
  4160c4:	add    ebp,DWORD PTR [esi+ecx*2-0x7d6e3c87]
  4160cb:	andps  xmm4,XMMWORD PTR [edx]
  4160ce:	aam    0xa0
  4160d0:	test   DWORD PTR ss:[eax],ecx
  4160d3:	mov    ebx,0x19b1878f
  4160d8:	fistp  QWORD PTR [ebx-0x41d239bf]
  4160de:	jg     0x416144
  4160e0:	ret    
  4160e1:	clc    
  4160e2:	push   0x4
  4160e4:	xchg   esi,eax
  4160e5:	stos   BYTE PTR es:[edi],al
  4160e6:	xchg   DWORD PTR [ecx+0x25],ebx
  4160e9:	cwde   
  4160ea:	sbb    dh,BYTE PTR [ebx-0x32f2e931]
  4160f0:	or     DWORD PTR ds:0x22512fe9,0xec66d62d
  4160fa:	push   0x1cc7ba0a
  4160ff:	sub    DWORD PTR [edx+ecx*8],ebx
  416102:	fs inc esp
  416104:	inc    DWORD PTR [esi-0x1811702d]
  41610a:	not    BYTE PTR [ebx+0x66]
  41610d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41610e:	sbb    DWORD PTR [esi-0x210ac834],eax
  416114:	pop    esp
  416115:	sub    BYTE PTR [esi+0x2141bf5e],ah
  41611b:	xor    al,0xf8
  41611d:	pop    ss
  41611e:	js     0x41613f
  416120:	gs fwait
  416122:	lds    esp,FWORD PTR [ebx+0x5a]
  416125:	or     eax,edx
  416127:	push   edx
  416128:	dec    edx
  416129:	enter  0xb411,0xf1
  41612d:	sahf   
  41612e:	add    al,0x9
  416130:	adc    BYTE PTR [edx-0x6b],ch
  416133:	add    edi,DWORD PTR [edi+0x28]
  416136:	das    
  416137:	shl    esp,0xfe
  41613a:	mov    ch,0x75
  41613c:	fisub  WORD PTR [esi+0x4e980302]
  416142:	pop    edi
  416143:	sub    DWORD PTR [ebp+0x50],ecx
  416146:	inc    eax
  416147:	mov    al,0xc2
  416149:	mov    cl,0xd5
  41614b:	pop    ecx
  41614c:	lahf   
  41614d:	sar    DWORD PTR [edi-0x4fba02d5],cl
  416153:	nop
  416154:	xor    esp,esi
  416156:	mov    al,ds:0xa47e6502
  41615b:	rol    DWORD PTR [ecx+0x1b],cl
  41615e:	mov    WORD PTR [edi],?
  416160:	pop    ebx
  416161:	mov    ds:0xf7a3e655,eax
  416166:	in     eax,0x35
  416168:	es push ecx
  41616a:	repnz or ch,BYTE PTR [ebx-0x3be6e970]
  416171:	inc    edx
  416172:	stc    
  416173:	sub    eax,0xfa913c23
  416178:	pop    eax
  416179:	push   eax
  41617a:	pop    ds
  41617b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41617c:	div    BYTE PTR [ebx]
  41617e:	loope  0x4161b6
  416180:	push   ds
  416181:	daa    
  416182:	lock cmc 
  416184:	pop    ebx
  416185:	adc    bl,BYTE PTR [eax-0x61]
  416188:	ret    0xec73
  41618b:	out    dx,al
  41618c:	add    esp,DWORD PTR ds:0x1d853d33
  416192:	cmp    al,0xe4
  416194:	dec    ecx
  416195:	pop    esi
  416196:	cmc    
  416197:	out    dx,al
  416198:	pusha  
  416199:	ds dec al
  41619c:	(bad)  
  41619d:	jnp    0x416198
  41619f:	or     BYTE PTR [ecx-0x64],0xa0
  4161a3:	mov    bh,0x6b
  4161a5:	imul   edi,DWORD PTR [ecx+0x49],0x7b235f0d
  4161ac:	and    ebp,DWORD PTR [esi-0x3d32a152]
  4161b2:	bound  ecx,QWORD PTR [ecx-0x36]
  4161b5:	add    DWORD PTR [edi],edx
  4161b7:	pop    ss
  4161b8:	nop
  4161b9:	sub    BYTE PTR [edi+ebx*1+0x0],ah
  4161bd:	or     ah,BYTE PTR [eax-0x738c7bdb]
  4161c3:	ret    
  4161c4:	or     al,0x65
  4161c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c7:	xchg   ebx,eax
  4161c8:	data16 jecxz 0x4161e6
  4161cb:	inc    esp
  4161cc:	enter  0x7a1,0xd4
  4161d0:	lock in al,dx
  4161d2:	clc    
  4161d3:	add    dh,BYTE PTR [ebp+edx*4-0x19fb6320]
  4161da:	sbb    BYTE PTR [ebp+0x74],al
  4161dd:	popf   
  4161de:	scas   al,BYTE PTR es:[edi]
  4161df:	inc    edx
  4161e0:	mov    cl,bl
  4161e2:	push   ss
  4161e3:	ret    
  4161e4:	retf   
  4161e5:	pop    ss
  4161e6:	sbb    al,0x10
  4161e8:	cld    
  4161e9:	outs   dx,DWORD PTR ds:[esi]
  4161ea:	adc    al,0x49
  4161ec:	sub    eax,0x5e1982a8
  4161f1:	mov    al,0xc
  4161f3:	retf   0x6ed8
  4161f6:	xchg   BYTE PTR [edi],dl
  4161f8:	mov    bh,0x31
  4161fa:	or     BYTE PTR [ecx-0x70],bh
  4161fd:	in     eax,dx
  4161fe:	outs   dx,DWORD PTR ds:[esi]
  4161ff:	(bad)  
  416200:	out    0xa5,al
  416202:	fsubr  DWORD PTR [ecx-0x59]
  416205:	out    0xf0,eax
  416207:	inc    ebx
  416208:	xchg   ebp,eax
  416209:	mov    dl,BYTE PTR ds:0xc8d7b0a0
  41620f:	in     al,dx
  416210:	cli    
  416211:	cmp    dh,bh
  416213:	push   edi
  416214:	cmp    dl,BYTE PTR [esi]
  416216:	push   edx
  416217:	mov    esp,0x7f7ea8cf
  41621c:	cmp    BYTE PTR [ebx-0x22],bl
  41621f:	ror    ebp,cl
  416221:	aas    
  416222:	mov    BYTE PTR [edx+0x64d26178],al
  416228:	ret    0xbeb8
  41622b:	mov    cl,0x25
  41622d:	add    ah,al
  41622f:	cmc    
  416230:	and    ebp,DWORD PTR ds:0xc502ee84
  416236:	mov    esp,0xa85d3bc0
  41623b:	xchg   BYTE PTR [edi+ebx*1+0x4f],dl
  41623f:	ss mov edi,0x6f11237a
  416245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416246:	mov    dh,0xb8
  416248:	sbb    eax,0x36b99af1
  41624d:	in     eax,0x73
  41624f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416251:	push   ebp
  416252:	sbb    al,0xc3
  416254:	jge    0x416289
  416256:	in     eax,dx
  416257:	ja     0x416221
  416259:	test   DWORD PTR [edi-0x412a0d57],esi
  41625f:	xlat   BYTE PTR ds:[ebx]
  416260:	adc    al,0xdb
  416262:	or     al,0xfe
  416264:	xor    ecx,DWORD PTR [esi]
  416266:	enter  0x6f77,0x35
  41626a:	add    DWORD PTR [esi+0x2f25870c],eax
  416270:	sti    
  416271:	xlat   BYTE PTR ds:[ebx]
  416272:	outs   dx,BYTE PTR ds:[esi]
  416273:	mov    dl,0xea
  416275:	xlat   BYTE PTR ds:[ebx]
  416276:	adc    ch,BYTE PTR [edx]
  416278:	popf   
  416279:	scas   eax,DWORD PTR es:[edi]
  41627a:	xor    al,ah
  41627c:	int3   
  41627d:	sbb    eax,DWORD PTR [edx+ecx*8-0x6c]
  416281:	xor    ch,0xc6
  416284:	out    0x33,eax
  416286:	and    dh,dl
  416288:	dec    ecx
  416289:	xchg   ebp,eax
  41628a:	lds    ebp,FWORD PTR [ebp-0x59d0d2b2]
  416290:	in     eax,0xb2
  416292:	fucomi st,st(1)
  416294:	add    dh,BYTE PTR [ebx+0x6c]
  416297:	fcomp  st(6)
  416299:	push   ecx
  41629a:	stc    
  41629b:	fimul  DWORD PTR [ebx]
  41629d:	ins    DWORD PTR es:[edi],dx
  41629e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41629f:	mov    al,0x46
  4162a1:	ins    BYTE PTR es:[edi],dx
  4162a2:	mov    bh,BYTE PTR [edi+0x238a6665]
  4162a8:	sar    dl,0xda
  4162ab:	jmp    FWORD PTR [esi+0x2b]
  4162ae:	cmp    al,0x74
  4162b0:	enter  0xf6eb,0x82
  4162b4:	mov    edx,0xb98cf724
  4162b9:	sub    al,0xa0
  4162bb:	(bad)
  4162bf:	push   ss
  4162c0:	lahf   
  4162c1:	rol    DWORD PTR [esi-0x62],1
  4162c4:	or     ah,al
  4162c6:	rcl    DWORD PTR [edi+0x37e0842c],1
  4162cc:	inc    eax
  4162cd:	sbb    al,0x1b
  4162cf:	fist   DWORD PTR [edi-0x4f]
  4162d2:	adc    BYTE PTR [esi],al
  4162d4:	das    
  4162d5:	dec    esp
  4162d6:	sti    
  4162d7:	imul   BYTE PTR [ecx-0x2a]
  4162da:	xor    eax,0x26d6d847
  4162df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162e0:	cmp    dh,BYTE PTR [ecx]
  4162e2:	aas    
  4162e3:	test   BYTE PTR [ecx-0x6f0897ea],0x10
  4162ea:	jp     0x416347
  4162ec:	adc    eax,edi
  4162ee:	sbb    eax,0x6766901b
  4162f3:	les    ecx,FWORD PTR [edi-0x41013f19]
  4162f9:	cmp    cl,dh
  4162fb:	xor    eax,0x7ada2e56
  416300:	dec    edx
  416301:	push   0x3efdcdec
  416306:	test   al,0x69
  416308:	jmp    0xde957c75
  41630d:	das    
  41630e:	mov    al,ds:0xd941fc29
  416313:	int    0x3e
  416315:	xchg   BYTE PTR [edx+0x64],ah
  416318:	sbb    BYTE PTR [ebp-0x7fb0ba64],ch
  41631e:	ret    0x4c26
  416321:	xchg   BYTE PTR [esi+0x14],dh
  416324:	dec    eax
  416325:	dec    ecx
  416326:	jp     0x416320
  416328:	(bad)  
  416329:	dec    ebx
  41632a:	pop    edi
  41632b:	xchg   ebx,eax
  41632c:	mov    cl,0x8b
  41632e:	retf   0xd6c2
  416331:	fidiv  DWORD PTR [eax-0x21459dba]
  416337:	inc    esp
  416338:	iret   
  416339:	cmp    eax,0x304c12d0
  41633e:	loope  0x4163ae
  416340:	push   esi
  416341:	jno    0x41632d
  416343:	jbe    0x41633f
  416345:	rol    DWORD PTR [ebp+0x66],cl
  416348:	daa    
  416349:	in     al,dx
  41634a:	ret    0x95da
  41634d:	cmp    eax,0x765d0944
  416352:	push   0x1f3b9101
  416357:	pop    ebp
  416358:	ja     0x4163ae
  41635a:	cmp    DWORD PTR [eax+0x70],edi
  41635d:	mov    al,0x36
  41635f:	btc    DWORD PTR [ebp+0x2471e09c],ebp
  416366:	pop    esp
  416367:	test   DWORD PTR [eax+0x3d201198],esp
  41636d:	outs   dx,BYTE PTR ds:[esi]
  41636e:	cmc    
  41636f:	push   es
  416370:	pop    ecx
  416371:	cmp    ch,ch
  416373:	mov    al,0x81
  416375:	(bad)  [esi+0x13511550]
  41637b:	jne    0x4163b6
  41637d:	mov    edi,0x9f3d127
  416382:	adc    eax,0xf9ffce23
  416387:	cmp    dh,ah
  416389:	cwde   
  41638a:	cmp    dh,cl
  41638c:	sbb    bh,bl
  41638e:	mov    cl,0x68
  416390:	cmp    esi,DWORD PTR [edx+0x41]
  416393:	ins    BYTE PTR es:[edi],dx
  416394:	fs xchg ebx,eax
  416396:	loope  0x416384
  416398:	(bad)  
  41639a:	addr16 xchg ecx,eax
  41639c:	inc    ebx
  41639d:	push   0x9eef322f
  4163a2:	inc    ebx
  4163a3:	inc    edx
  4163a4:	in     eax,0x4e
  4163a6:	sbb    al,0x7a
  4163a8:	ficomp DWORD PTR [ebx]
  4163aa:	dec    ebp
  4163ab:	mov    al,bh
  4163ad:	jmp    0x9344:0x7b3917eb
  4163b4:	cmp    al,BYTE PTR [edi+edx*4-0x32]
  4163b8:	sub    esp,DWORD PTR [edi]
  4163ba:	push   ds
  4163bb:	ja     0x416397
  4163bd:	jp     0x41637a
  4163bf:	repnz xor BYTE PTR [ebx+0x66],0x5
  4163c4:	inc    edi
  4163c5:	in     al,dx
  4163c6:	mov    ds:0x382cbdff,al
  4163cb:	scas   al,BYTE PTR es:[edi]
  4163cc:	sub    DWORD PTR [ebp+0x8],edi
  4163cf:	leave  
  4163d0:	mov    bh,0x97
  4163d2:	xor    DWORD PTR [ebx-0x5c3e1b1],ebx
  4163d8:	mov    BYTE PTR [ebp-0x25e6bbd8],ah
  4163de:	jle    0x41638c
  4163e0:	mov    WORD PTR [ecx],ss
  4163e2:	loop   0x41644f
  4163e4:	add    bh,BYTE PTR [eax+0x5f01bc6a]
  4163ea:	mov    dh,0x38
  4163ec:	jo     0x416408
  4163ee:	int3   
  4163ef:	(bad)  
  4163f0:	push   ecx
  4163f1:	or     DWORD PTR [edi-0x5a],eax
  4163f4:	add    DWORD PTR [ebp-0x2f],eax
  4163f7:	dec    esp
  4163f8:	or     al,0xda
  4163fa:	in     eax,0x8b
  4163fc:	lds    eax,FWORD PTR [esi]
  4163fe:	adc    DWORD PTR [ecx-0x426fbee1],esp
  416404:	icebp  
  416405:	ret    0x6510
  416408:	or     BYTE PTR ds:0xcb264cce,ch
  41640e:	fxch   st(0)
  416410:	les    edi,FWORD PTR [ebp-0x7f]
  416413:	xor    bl,BYTE PTR [edx+0x1f]
  416416:	clc    
  416417:	mov    ecx,es
  416419:	(bad)  [esi+0x335b964a]
  41641f:	test   ch,dl
  416421:	mov    edx,0xd3f6a3c6
  416426:	iret   
  416427:	dec    ebx
  416428:	scas   eax,DWORD PTR es:[edi]
  416429:	push   eax
  41642a:	int    0x3
  41642c:	repz data16 or al,0x87
  416430:	cmp    cl,BYTE PTR [esp+edx*1-0x67cba711]
  416437:	xchg   edi,eax
  416438:	repnz push ds
  41643a:	add    al,0xbc
  41643c:	(bad)  
  41643d:	stos   BYTE PTR es:[edi],al
  41643e:	mov    al,ds:0x5522f1ed
  416443:	stos   DWORD PTR es:[edi],eax
  416444:	lahf   
  416445:	ret    
  416446:	adc    edi,DWORD PTR [ecx]
  416448:	call   0x5cfb6722
  41644d:	cmp    BYTE PTR [ebp+0x6817c32d],ah
  416453:	fsubr  DWORD PTR [edi-0x21]
  416456:	fistp  WORD PTR [esp+eiz*8+0x3a]
  41645a:	int3   
  41645b:	in     al,0xa4
  41645d:	aad    0x1
  41645f:	mov    edi,0xf026af3b
  416464:	ret    0xdeb2
  416467:	push   edi
  416468:	adc    eax,DWORD PTR [eax+eiz*1-0x21377ca]
  41646f:	dec    BYTE PTR [edi]
  416471:	add    DWORD PTR [ebp-0x2b],esi
  416474:	fwait
  416475:	adc    edx,esi
  416477:	adc    BYTE PTR [eax],ch
  416479:	outs   dx,BYTE PTR ds:[esi]
  41647a:	xchg   esp,eax
  41647b:	in     eax,dx
  41647c:	jne    0x4164a8
  41647e:	lahf   
  41647f:	mov    dh,ah
  416481:	pusha  
  416482:	push   0x816ca3a6
  416487:	std    
  416488:	sub    edi,esi
  41648a:	inc    esp
  41648b:	add    ecx,ecx
  41648d:	ja     0x4164a8
  41648f:	xchg   ecx,eax
  416490:	inc    esi
  416491:	mov    ecx,0x6e035239
  416496:	jb     0x41643e
  416498:	and    al,0x17
  41649a:	fs inc ebp
  41649c:	sub    DWORD PTR [edi],eax
  41649e:	sub    bl,cl
  4164a0:	mov    fs:0xc572e9c7,eax
  4164a6:	inc    eax
  4164a7:	jae    0x416513
  4164a9:	fld    DWORD PTR ds:0x93558ae5
  4164af:	mov    ebx,0x821cd1f5
  4164b4:	daa    
  4164b5:	pushf  
  4164b6:	aad    0xf
  4164b8:	xor    DWORD PTR [ecx],ebp
  4164ba:	cmp    al,0xbc
  4164bc:	fwait
  4164bd:	add    bh,0x5a
  4164c0:	push   edx
  4164c1:	add    ch,BYTE PTR [esi+0x7a]
  4164c4:	push   edx
  4164c5:	hlt    
  4164c6:	hlt    
  4164c7:	cld    
  4164c8:	imul   ebx,DWORD PTR [edx+eax*4-0x1b2e26f],0xffffff8e
  4164d0:	xchg   BYTE PTR [ebx+0x5d],bl
  4164d3:	neg    DWORD PTR [ecx+edx*1+0x6e]
  4164d7:	mov    ch,0x72
  4164d9:	pushf  
  4164da:	mov    WORD PTR ds:0x59c176ae,gs
  4164e0:	pop    ecx
  4164e1:	cmc    
  4164e2:	inc    BYTE PTR [esi+0x7f]
  4164e5:	and    esp,DWORD PTR [edi+0x22957015]
  4164eb:	or     eax,0x598fe823
  4164f0:	cmp    BYTE PTR [ebx+0x7d],ah
  4164f3:	fisttp WORD PTR [ecx]
  4164f5:	cmp    ebp,DWORD PTR [ebp+0x4be4e9c6]
  4164fb:	sub    eax,ebx
  4164fd:	push   ecx
  4164fe:	mov    bl,0x9a
  416500:	and    bl,0x21
  416503:	cmp    ebx,DWORD PTR [edx]
  416505:	dec    esp
  416506:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416508:	mov    BYTE PTR [ecx],ch
  41650a:	inc    edx
  41650b:	and    BYTE PTR [ebx],ch
  41650d:	int3   
  41650e:	jb     0x416587
  416510:	mov    esi,0xd96af9d6
  416515:	fcomp  DWORD PTR [ebx+eiz*2]
  416518:	ins    BYTE PTR es:[edi],dx
  416519:	sub    BYTE PTR [esi-0x5c],cl
  41651c:	stos   BYTE PTR es:[edi],al
  41651d:	cwde   
  41651e:	push   0x7c
  416520:	leave  
  416521:	fs out dx,al
  416523:	lahf   
  416524:	dec    esi
  416525:	push   es
  416526:	int3   
  416527:	fsubr  DWORD PTR [eax+edi*1-0x5cf140ea]
  41652e:	leave  
  41652f:	in     eax,0xdf
  416531:	add    DWORD PTR [esi+0x55f3a6a5],0x10b7ca8
  41653b:	mov    ecx,0xa139d335
  416540:	push   edi
  416541:	mov    ch,BYTE PTR [ebp+0x51d3239f]
  416547:	es mov dh,al
  41654a:	adc    DWORD PTR [edi],edi
  41654c:	inc    ecx
  41654d:	test   DWORD PTR [ebx+0x15],edx
  416550:	pushf  
  416551:	mov    eax,0x2a89f593
  416556:	(bad)  [edx]
  416558:	imul   esi,DWORD PTR [edx],0x9f333e94
  41655e:	jecxz  0x41654a
  416560:	or     BYTE PTR [eax-0x2b],dl
  416563:	mov    ds,WORD PTR [esi]
  416565:	push   ss
  416566:	in     eax,0x21
  416568:	pusha  
  416569:	dec    edx
  41656a:	das    
  41656b:	aad    0xa2
  41656d:	pushf  
  41656e:	jmp    0x4165e0
  416570:	and    ecx,esi
  416572:	out    0xcb,al
  416574:	sub    DWORD PTR [eax],ebx
  416576:	xchg   DWORD PTR [eax-0x31],ebp
  416579:	xchg   edi,eax
  41657a:	fsubr  DWORD PTR [ebp+0x7]
  41657d:	pop    ebp
  41657e:	sahf   
  41657f:	hlt    
  416580:	adc    dl,BYTE PTR [esi+ebp*2]
  416583:	sub    eax,DWORD PTR [ecx-0x98795d]
  416589:	mov    dh,0x23
  41658b:	push   ds
  41658c:	cmp    BYTE PTR [edx],al
  41658e:	daa    
  41658f:	(bad)
  416592:	(bad)  
  416593:	call   0xf42b0f27
  416598:	xchg   ebx,eax
  416599:	adc    DWORD PTR [ebx-0x1ff21d99],0x66
  4165a0:	and    bl,BYTE PTR [ebp+0x10]
  4165a3:	adc    esp,ecx
  4165a5:	xchg   ecx,eax
  4165a6:	sbb    ebx,DWORD PTR [edi]
  4165a8:	cmc    
  4165a9:	out    dx,al
  4165aa:	fimul  WORD PTR [eax+0x514cec88]
  4165b0:	lods   al,BYTE PTR ds:[esi]
  4165b1:	fld    QWORD PTR [ebx]
  4165b3:	sbb    edx,DWORD PTR [esi]
  4165b5:	mov    dh,0x87
  4165b7:	clc    
  4165b8:	sub    DWORD PTR [eax-0x19],edi
  4165bb:	int3   
  4165bc:	dec    ecx
  4165bd:	adc    DWORD PTR [ecx*4+0x4857686f],ecx
  4165c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165c5:	pop    ds
  4165c6:	aad    0xfd
  4165c8:	push   0x21
  4165ca:	cld    
  4165cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165cc:	test   ah,ch
  4165ce:	into   
  4165cf:	dec    esi
  4165d0:	hlt    
  4165d1:	push   0x81ec2a3a
  4165d6:	xchg   esi,eax
  4165d7:	dec    ebp
  4165d8:	fucomp st(4)
  4165da:	das    
  4165db:	pusha  
  4165dc:	xchg   ebx,eax
  4165dd:	test   al,0xff
  4165df:	retf   0x2e00
  4165e2:	sahf   
  4165e3:	ret    
  4165e4:	jle    0x4165dd
  4165e6:	(bad)  
  4165e8:	sbb    al,0x8f
  4165ea:	xchg   edi,eax
  4165eb:	loopne 0x416660
  4165ed:	mov    ds:0xd4167d78,eax
  4165f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165f3:	repnz adc BYTE PTR [edx-0x554632c2],al
  4165fa:	out    0xe0,eax
  4165fc:	jg     0x416660
  4165fe:	xchg   ch,bl
  416600:	aam    0x0
  416602:	pop    ss
  416603:	pop    ebx
  416604:	mov    bh,0x7f
  416606:	and    DWORD PTR [edi+eiz*1],eax
  416609:	cmp    edx,DWORD PTR [ecx-0x7ee1b987]
  41660f:	outs   dx,BYTE PTR ds:[esi]
  416610:	dec    edi
  416611:	or     eax,0xa765d0de
  416616:	(bad)  
  416617:	or     dh,al
  416619:	(bad)  
  41661a:	fild   QWORD PTR [ecx-0x40fc555b]
  416620:	pop    esi
  416621:	and    ebx,DWORD PTR [edi+0x596e9ad2]
  416627:	repnz sbb DWORD PTR [ebx],0x7e
  41662b:	jb     0x416675
  41662d:	daa    
  41662e:	push   cs
  41662f:	adc    eax,0x7cf928e0
  416634:	jmp    0x416612
  416636:	xor    dh,BYTE PTR ds:0x4ab1f027
  41663c:	inc    ecx
  41663d:	div    DWORD PTR [esi-0x28]
  416640:	pop    ds
  416641:	fdivr  QWORD PTR ds:0xa6822332
  416647:	cdq    
  416648:	jbe    0x4165e8
  41664a:	push   edx
  41664b:	stc    
  41664c:	adc    eax,0x5e3751dc
  416651:	sti    
  416652:	in     eax,dx
  416653:	pop    esp
  416654:	shl    BYTE PTR [ebp+0x57b36450],1
  41665a:	lock inc edi
  41665d:	xchg   ebp,eax
  41665e:	daa    
  41665f:	jg     0x41667a
  416661:	mov    ds:0x8ece2b2,eax
  416666:	loopne 0x41662b
  416668:	jle    0x416605
  41666a:	and    DWORD PTR [edi+esi*8+0x7e29aa9d],esp
  416671:	(bad)  
  416673:	mov    bl,0xc5
  416675:	dec    edi
  416676:	mov    BYTE PTR ds:[ecx-0x54],dl
  41667a:	and    DWORD PTR [edx-0x26],0x8f5f4983
  416681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416682:	adc    BYTE PTR fs:[ebx],bh
  416685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416686:	xchg   esi,eax
  416687:	(bad)  
  416688:	sub    bl,bh
  41668a:	out    0x89,eax
  41668c:	std    
  41668d:	jmp    0xb869:0x828cd0c8
  416694:	mov    ebx,0x7dc79a0e
  416699:	shl    BYTE PTR [ebp-0x7f],1
  41669c:	rol    BYTE PTR [eax+0x66ed63ef],0xe0
  4166a3:	fs push eax
  4166a5:	retf   0x90ea
  4166a8:	push   0x1f1d91e3
  4166ad:	pop    esi
  4166ae:	cmp    cl,BYTE PTR [ecx]
  4166b0:	sbb    al,0xed
  4166b2:	pop    esp
  4166b3:	ins    BYTE PTR es:[edi],dx
  4166b4:	outs   dx,BYTE PTR ds:[esi]
  4166b5:	jle    0x416665
  4166b7:	sub    ebx,DWORD PTR [ebx-0x50aab0a]
  4166bd:	mov    eax,0x9dfc9f6f
  4166c2:	pop    eax
  4166c3:	pop    esp
  4166c4:	push   eax
  4166c5:	sbb    al,0x7e
  4166c7:	out    0x7d,al
  4166c9:	add    edx,esi
  4166cb:	rcr    DWORD PTR [eax-0xe],1
  4166ce:	add    DWORD PTR [ecx-0x4],esp
  4166d1:	xor    edi,esp
  4166d3:	imul   DWORD PTR [ecx]
  4166d5:	fmul   st(1),st
  4166d7:	cmp    eax,0xb2efa057
  4166dc:	imul   ebp,DWORD PTR [ecx-0x69],0x3a
  4166e0:	lods   eax,DWORD PTR ds:[esi]
  4166e1:	jne    0x416739
  4166e3:	outs   dx,DWORD PTR ds:[esi]
  4166e4:	inc    eax
  4166e5:	pusha  
  4166e6:	cs pop ecx
  4166e8:	clc    
  4166e9:	or     DWORD PTR [edi+0x4],0xffffffc1
  4166ed:	xor    BYTE PTR [edx+0x6d],bl
  4166f0:	ja     0x4166a1
  4166f2:	mov    cl,0xf
  4166f4:	rol    DWORD PTR [ebx+ebp*1-0x62],1
  4166f8:	pop    es
  4166f9:	(bad)  
  4166fa:	outs   dx,DWORD PTR ds:[esi]
  4166fb:	loopne 0x416749
  4166fd:	out    0x97,eax
  4166ff:	(bad)  
  416700:	mov    ebp,0xfc530523
  416705:	or     BYTE PTR [edi],dh
  416707:	nop
  416708:	jbe    0x416698
  41670a:	(bad)  
  41670b:	scas   al,BYTE PTR es:[edi]
  41670c:	retf   
  41670d:	pop    ss
  41670e:	jnp    0x41671a
  416710:	shr    DWORD PTR [ecx-0x6201dc31],0xb4
  416717:	hlt    
  416718:	xchg   DWORD PTR [edx-0x34],esp
  41671b:	pop    ebx
  41671c:	adc    esi,DWORD PTR [edi+0x77c021a]
  416722:	sbb    eax,0x5266b97f
  416727:	(bad)  [esp+edi*8-0x16]
  41672b:	mov    bl,0xd4
  41672d:	test   al,0x5d
  41672f:	pop    es
  416730:	test   al,0xd0
  416732:	xchg   BYTE PTR [esi+0x68b1c9e1],ah
  416738:	dec    ebx
  416739:	in     al,0x62
  41673b:	scas   eax,DWORD PTR es:[edi]
  41673c:	xchg   ebx,eax
  41673d:	mov    esp,0xdf047a02
  416742:	jne    0x4166d9
  416744:	add    eax,DWORD PTR [ecx]
  416746:	xchg   bh,bh
  416748:	data16 xor cl,BYTE PTR [esi]
  41674b:	repnz mov BYTE PTR ds:0x89610022,bh
  416752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416753:	lea    esi,[edi-0x5b0ac2ab]
  416759:	add    ah,BYTE PTR [ebx+ebp*2-0x7f7f796a]
  416760:	mov    eax,0x3743272d
  416765:	push   DWORD PTR [esi]
  416767:	loopne 0x416739
  416769:	sbb    bh,BYTE PTR [ebx]
  41676b:	jle    0x416743
  41676d:	pop    ds
  41676e:	imul   edi,DWORD PTR [edx-0x6aceadb1],0xfa6d6865
  416778:	xor    BYTE PTR [esi-0x4262881c],0x3
  41677f:	push   0xffffffa6
  416781:	pop    edx
  416782:	sub    eax,DWORD PTR [ecx+0x66]
  416785:	fdivr  DWORD PTR [ebx]
  416787:	repnz pop ds
  416789:	sahf   
  41678a:	pop    es
  41678b:	xchg   edi,eax
  41678c:	stos   DWORD PTR es:[edi],eax
  41678d:	and    BYTE PTR [ecx-0x6f],ah
  416790:	mov    ecx,0x63d0c18f
  416795:	shl    BYTE PTR [eax],0x25
  416798:	ss stos BYTE PTR es:[edi],al
  41679a:	test   BYTE PTR [edx],dl
  41679c:	fadd   DWORD PTR [eax+0x5a2e417d]
  4167a2:	bound  esp,QWORD PTR [ecx]
  4167a4:	cmp    BYTE PTR [ebx],bh
  4167a6:	xor    al,0xbb
  4167a8:	add    ah,BYTE PTR [eax-0x50]
  4167ab:	sub    DWORD PTR [eax-0x1ec10fc3],eax
  4167b1:	pushf  
  4167b2:	retf   
  4167b3:	test   al,0x5
  4167b5:	xlat   BYTE PTR ds:[ebx]
  4167b6:	loop   0x4167af
  4167b8:	dec    eax
  4167b9:	push   es
  4167ba:	fs popf 
  4167bc:	jmp    0xa1c3d7d8
  4167c1:	jge    0x416760
  4167c3:	scas   eax,DWORD PTR es:[edi]
  4167c4:	jmp    0x4167b3
  4167c6:	mov    bh,0x5
  4167c8:	js     0x4167bf
  4167ca:	mov    ecx,0x52e13c0f
  4167cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167d0:	das    
  4167d1:	push   ds
  4167d2:	(bad)  
  4167d3:	fidivr DWORD PTR [eax-0x6b]
  4167d6:	sub    eax,0x5281d519
  4167db:	dec    edi
  4167dc:	pop    eax
  4167dd:	xchg   eax,edi
  4167df:	leave  
  4167e0:	inc    esp
  4167e1:	jp     0x4167af
  4167e3:	jno    0x416799
  4167e5:	dec    edx
  4167e6:	pusha  
  4167e7:	xor    al,0x36
  4167e9:	jnp    0x4167de
  4167eb:	outs   dx,BYTE PTR ds:[esi]
  4167ec:	jle    0x41684d
  4167ee:	push   ebx
  4167ef:	les    edx,FWORD PTR [ebp+0x51]
  4167f2:	inc    edx
  4167f3:	pop    ebx
  4167f4:	adc    ecx,DWORD PTR [ebx+0x3c94f970]
  4167fa:	les    edi,FWORD PTR [ebp+0x30]
  4167fd:	shr    bl,cl
  4167ff:	in     al,0x5b
  416801:	xor    DWORD PTR [edx+0x4ed9df58],eax
  416807:	outs   dx,BYTE PTR ds:[esi]
  416808:	dec    eax
  416809:	iret   
  41680a:	sbb    cl,dl
  41680c:	inc    esp
  41680d:	inc    edi
  41680e:	push   esi
  41680f:	jmp    0x4167a7
  416811:	adc    dl,BYTE PTR [edx]
  416813:	pop    ss
  416814:	and    al,0x7f
  416816:	sub    BYTE PTR ds:0xe7820169,cl
  41681c:	mov    WORD PTR [edi],cs
  41681e:	cmp    BYTE PTR [ebp-0x25df46e2],0xac
  416825:	ret    
  416826:	nop
  416827:	dec    eax
  416828:	push   esp
  416829:	inc    edx
  41682a:	inc    edx
  41682b:	jg     0x41687d
  41682d:	sar    bh,cl
  41682f:	cld    
  416830:	dec    ebp
  416831:	scas   al,BYTE PTR es:[edi]
  416832:	fwait
  416833:	sahf   
  416834:	dec    ecx
  416835:	push   edx
  416836:	mov    al,0xd6
  416838:	outs   dx,BYTE PTR ds:[esi]
  416839:	lahf   
  41683a:	std    
  41683b:	lahf   
  41683c:	std    
  41683d:	xchg   DWORD PTR [esi+0x23a8c792],edi
  416843:	scas   eax,DWORD PTR es:[edi]
  416844:	fisttp WORD PTR [edi+0x1432bd9d]
  41684a:	cwde   
  41684b:	sub    al,BYTE PTR [edx]
  41684d:	fstp   DWORD PTR [ebp+0x60]
  416850:	(bad)  
  416851:	jmp    0x416888
  416853:	fwait
  416854:	jmp    0xbb5c:0x619b3b35
  41685b:	or     edi,DWORD PTR [eax]
  41685d:	rol    BYTE PTR [ebx+0x52497e47],0xf4
  416864:	cmp    dl,BYTE PTR [edx-0x4c]
  416867:	add    BYTE PTR [eax+0x72],dl
  41686a:	sub    DWORD PTR [ebx-0x7791c731],esp
  416870:	push   edi
  416871:	xchg   DWORD PTR [ebp+0x33],ebp
  416874:	pop    esi
  416875:	aam    0x32
  416877:	mov    dl,0x99
  416879:	hlt    
  41687a:	loop   0x416899
  41687c:	(bad)  
  41687d:	pop    edi
  41687e:	pop    eax
  41687f:	xor    eax,0x8e4852a2
  416884:	cmp    eax,0x909fe4e5
  416889:	rcr    BYTE PTR [ebx-0x15c4da64],0x15
  416890:	jnp    0x41686b
  416892:	fisttp WORD PTR [ecx-0x69f686a]
  416898:	mov    bl,0xe5
  41689a:	pop    esi
  41689b:	sub    BYTE PTR [edi+0x43f24b19],bl
  4168a1:	gs xor al,0xd3
  4168a4:	add    BYTE PTR [ebp-0x2],ah
  4168a7:	add    al,BYTE PTR [eax]
  4168a9:	stos   BYTE PTR es:[edi],al
  4168aa:	pushf  
  4168ab:	push   edx
  4168ac:	or     ch,cl
  4168ae:	xchg   ebx,eax
  4168af:	sub    eax,0x208f15e2
  4168b4:	fsin   
  4168b6:	jl     0x416839
  4168b8:	jl     0x4168d9
  4168ba:	jnp    0x4168e9
  4168bc:	ret    
  4168bd:	mov    eax,es:0xee17b893
  4168c3:	das    
  4168c4:	test   esi,ecx
  4168c6:	xchg   esi,eax
  4168c7:	cmp    edx,edx
  4168c9:	shl    BYTE PTR [ecx+edi*2-0x60],0x3e
  4168ce:	out    dx,al
  4168cf:	push   edi
  4168d0:	test   BYTE PTR [esi],0x9c
  4168d3:	lea    eax,[ecx+ebp*1]
  4168d6:	fimul  WORD PTR [edx]
  4168d8:	push   cs
  4168d9:	pop    edx
  4168da:	mov    ebp,0xefb788cf
  4168df:	(bad)  
  4168e0:	iret   
  4168e1:	jmp    0xe3fe7cea
  4168e6:	push   ebp
  4168e7:	lahf   
  4168e8:	sbb    eax,0xe7caf952
  4168ed:	xor    eax,DWORD PTR [edi]
  4168ef:	fdivr  DWORD PTR [ebx]
  4168f1:	xor    eax,0x871abafc
  4168f6:	xor    dh,bl
  4168f8:	cmp    esp,edx
  4168fa:	hlt    
  4168fb:	dec    esi
  4168fc:	mov    WORD PTR [edi-0x1c],es
  4168ff:	xor    ah,0x2b
  416902:	xchg   dl,dl
  416904:	lds    eax,FWORD PTR [ecx+0x3a93332f]
  41690a:	jecxz  0x416931
  41690c:	mov    ch,0x74
  41690e:	ret    0x9cee
  416911:	out    0x60,al
  416913:	jp     0x416910
  416915:	sti    
  416916:	sbb    bh,BYTE PTR [esi+0x2d71d645]
  41691c:	mov    al,0xbe
  41691e:	pusha  
  41691f:	cmp    eax,0xbfa464fd
  416924:	push   ebp
  416925:	xor    DWORD PTR [edx+0x103be4de],edx
  41692b:	or     eax,0xcb80ac76
  416930:	repnz xor al,0x5c
  416933:	dec    ebx
  416934:	fimul  DWORD PTR [ebp+eiz*1+0x3c0f482d]
  41693b:	pop    ebx
  41693c:	inc    eax
  41693d:	out    0x18,al
  41693f:	mul    BYTE PTR [edi]
  416941:	les    esi,FWORD PTR [edx]
  416943:	jp     0x4169a3
  416945:	bound  ebx,QWORD PTR cs:0x91ac883c
  41694c:	pop    edx
  41694d:	xchg   edx,eax
  41694e:	and    BYTE PTR [ebx+ebp*8+0x28250199],ch
  416955:	inc    edx
  416956:	pop    es
  416957:	hlt    
  416958:	out    dx,al
  416959:	clc    
  41695a:	popf   
  41695b:	cwde   
  41695c:	jle    0x416923
  41695e:	jmp    0xa4f:0x4d4cf101
  416965:	pusha  
  416966:	and    DWORD PTR [edi-0x1124b08f],esp
  41696c:	not    DWORD PTR [esi+0x1ef3ddc5]
  416972:	aas    
  416973:	push   ss
  416974:	mov    ds:0x78c2c61c,al
  416979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41697a:	push   esi
  41697b:	xor    al,0x33
  41697e:	or     eax,0xfadfc340
  416983:	push   ebx
  416984:	mov    dl,BYTE PTR [edi+0x2f]
  416987:	mov    BYTE PTR [edi+0x17],ah
  41698a:	cmp    BYTE PTR [eax-0x74fb19bd],cl
  416990:	jne    0x41698e
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
